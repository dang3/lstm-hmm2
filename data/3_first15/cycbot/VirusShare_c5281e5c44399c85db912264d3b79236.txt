xor
mov
add
add
lahf
add
ret
test
js
aas
outsb
popa
xor
add
mov
add
cmc
fsub
fimuls
dec
cmc
inc
xor
adc
icebp
push
add
cmpsl
pushl
insb
sub
lea
sub
add
add
and
add
pop
jns
xchg
add
and
je
and
sbb
fdivs
data16
mov
loopne
movsb
add
mov
jbe
push
cmpsl
push
in
mov
xchg
jne
add
add
add
add
mov
mov
push
loopne
std
mov
dec
stc
movb
add
movsb
add
mov
idivl
push
lock
push
inc
add
add
mov
jge
iret
sbb
mul
push
scas
bound
mov
xor
scas
stos
pop
cmp
push
add
pop
std
xor
mov
jmp
add
or
mov
cmp
mov
mov
push
add
mov
in
pop
or
mov
dec
mov
fildll
sti
frndint
add
mov
add
mov
push
adc
jge
jo
dec
insl
pop
dec
xor
in
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
adc
mov
movl
adc
mov
sbb
or
sub
xchg
add
xchg
rcr
add
inc
add
and
push
and
mov
imul
mov
adc
push
mov
imul
pop
cmp
sub
aaa
test
aad
add
movsl
adc
push
mov
cmc
jge
push
daa
jno
add
sahf
clc
or
outsb
add
in
stos
adc
inc
add
idivl
pop
inc
je
mov
mov
xchg
add
iret
mov
stc
cmc
and
push
add
testb
pop
lds
fistps
mov
adc
and
mov
and
mov
test
mov
popa
dec
jg
add
mov
fdivrs
fsts
add
xchg
mov
sub
pop
lret
adc
mov
add
movsb
add
push
add
add
mov
add
cmp
lods
popa
push
mov
cmovp
add
add
dec
inc
jg
fistl
out
outsl
inc
iret
add
stos
loopne
push
clc
push
add
add
mov
rolb
jo
lock
psubusw
xor
sub
add
and
mov
cli
dec
jp
fildl
jl
add
add
inc
mov
adc
add
add
sbb
add
adc
dec
mov
dec
out
scas
sub
gs
add
lahf
mov
out
scas
dec
xor
pop
sbb
ljmp
fisttpll
sbb
or
rcll
gs
ficoms
pop
push
add
adc
imul
mov
add
push
add
or
ficomps
mov
icebp
sbb
cli
sar
in
in
mov
add
add
add
data16
repz
icebp
mov
mov
mov
add
add
mov
stos
cmp
daa
movsl
cmp
add
inc
adc
push
out
out
xchg
add
add
addb
add
out
add
adc
rolb
add
mov
das
aas
mov
daa
sti
pop
add
out
add
fmull
sub
movsb
add
dec
mov
movsb
add
add
mov
add
add
jns
add
or
add
mov
add
push
add
add
mov
in
stos
mov
inc
add
sbb
les
je
imull
xor
rolb
add
add
xchg
add
outsb
xchg
std
add
or
cmc
pop
cmp
add
clc
push
add
imul
imul
add
aaa
ret
jl
add
repz
rcl
test
fadd
add
stos
push
add
loopne
sti
or
xchg
push
shrl
push
add
rolb
pop
xchg
add
add
and
es
jnp
add
sub
add
cli
fdivs
fisubl
outsb
jmp
add
dec
jle
decb
add
dec
hlt
add
xchg
push
add
ljmp
add
out
stos
addb
icebp
push
add
lods
cmpsb
add
cmp
data16
aaa
lock
add
add
add
add
add
inc
or
fwait
inc
in
stc
push
adc
xchg
daa
sbb
and
mov
xor
dec
sahf
cmp
add
lock
fidivs
jne
jp
xchg
add
add
stos
xor
mov
loope
cmp
cmp
sbb
jl
cltd
inc
add
xchg
add
testb
and
pop
adc
mov
out
mov
mov
mov
add
add
mov
addr16
imul
cld
pusha
add
cltd
mov
mov
add
inc
add
dec
mov
arpl
lds
add
pop
inc
test
loope
push
add
pop
mov
add
mov
scas
ret
ss
insl
je
nop
add
pop
mov
insl
jmp
add
lock
mov
jno
xor
cli
xor
test
adc
testb
fucomi
sub
mov
sbb
add
add
sbb
les
push
stc
adc
add
inc
add
sub
pop
pop
sbb
add
dec
ds
sti
in
cmc
and
in
jne
out
test
cld
movsb
add
add
add
out
sub
add
ret
push
add
icebp
in
out
jno
add
ljmp
arpl
add
cmp
add
add
mov
jns
fwait
insl
aas
and
mov
add
add
and
mov
loopne
rolb
inc
add
out
add
lods
fists
add
stc
mov
push
nop
add
and
add
mov
or
add
pop
rolb
inc
add
xlat
push
add
adc
lret
mov
mov
sub
add
cmp
popf
in
push
add
scas
mov
mov
mov
iret
dec
pop
mov
push
add
je
popf
aam
aad
ficoml
pop
and
add
jne
sbb
dec
dec
xchg
add
add
fcmovnbe
add
add
mov
push
jg
add
ret
xor
xchg
xchg
add
cmp
mov
mov
lock
jge
add
add
mov
loop
jns
xchg
add
mov
or
add
mov
mov
mov
push
xor
adc
add
adc
adc
mov
rcll
add
add
test
cmp
add
sbb
mov
mov
sbb
and
daa
jmp
add
aam
add
scas
sub
add
out
jae,pn
in
add
add
mov
xor
sbb
ret
dec
jge
dec
xchg
add
add
xchg
ljmp
mov
and
mov
add
sub
sub
fildl
add
mov
and
mov
inc
addb
inc
add
arpl
add
fwait
enter
addb
add
enter
mov
pop
adc
mov
adcl
jbe
lcall
movsb
add
sub
inc
xchg
add
add
je
mov
add
ficoml
sbb
nop
add
outsl
pop
scas
adc
lahf
movsb
add
addps
add
add
xchg
adc
addb
add
pop
mov
pop
mov
jl
fildl
repnz
shrl
sti
std
fnstenv
add
add
test
jbe
out
dec
popa
loop
xor
add
mov
add
clc
insb
test
and
add
push
add
add
icebp
icebp
mov
add
mov
inc
push
mov
pop
xchg
add
sbb
fnstcw
cmp
pop
xlat
and
mov
add
add
add
insb
jbe
mov
jo
ret
lock
hlt
add
sub
adc
add
add
lcall
add
sbb
add
add
add
add
add
addb
add
push
add
xchg
jae
lea
clc
ja
fwait
rolb
lret
xor
iret
rolb
push
add
stos
pop
jmp
imul
fildll
add
test
sub
add
add
movsl
arpl
out
jbe
cs
or
mov
or
add
mov
add
xor
mov
push
mov
sub
jns
std
cwtl
gs
addb
pop
lods
gs
push
add
add
sub
pop
cs
mov
lds
pop
dec
sti
rcll
mov
add
shll
mov
inc
push
imul
push
sahf
jae
add
dec
jno
add
add
test
add
dec
into
jb
popl
mov
push
das
mov
add
pop
inc
add
dec
data16
sub
jl
or
adcl
xor
jbe
int
add
add
sub
add
inc
add
lods
leave
fs
adc
lods
sahf
ja
add
arpl
cs
cmp
add
enter
ja
in
add
ds
add
add
mov
pushf
add
mov
orl
jb
sub
add
push
push
add
rep
pusha
add
in
or
add
sub
adc
icebp
add
mov
push
dec
nop
add
rolb
testb
shll
or
pop
nop
add
inc
xor
dec
lcall
add
mov
add
mov
into
add
pop
or
inc
push
add
fistps
rolb
icebp
mov
add
es
mov
rolb
rolb
xor
mov
stos
xor
aaa
fnstcw
mov
add
add
imul
addr16
jg
dec
jbe
test
aas
dec
add
jnp
add
out
mov
pop
xor
hlt
add
and
pop
shll
cmp
stc
popf
cwtl
lds
add
shrl
inc
add
add
std
gs
pop
clc
stos
mov
les
adc
cmp
pop
add
add
jge
movb
ret
loopne
icebp
sub
hlt
add
fcmove
adc
mov
dec
mov
add
jp
hlt
add
ret
add
add
mov
ss
pop
test
out
jl
insb
sti
xchg
loopne
dec
push
lods
int3
cmp
sub
mov
add
push
xor
jge
push
add
add
pushf
fnstsw
rolb
cmc
xchg
add
pop
sbb
cmp
add
imul
andl
sub
xchg
jne
fcoml
add
in
cltd
add
lods
hlt
add
mov
mov
mov
add
jno
sub
ljmp
hlt
add
testb
scas
add
add
mov
cmp
hlt
add
add
clc
sbb
push
cltd
rcrl
mov
xchg
add
mov
push
enter
xchg
adc
mov
aad
push
add
mov
fucom
repnz
add
dec
cltd
hlt
add
cmp
xor
jo
dec
lock
jo
or
lods
inc
add
add
shl
xchg
push
add
in
les
lret
mov
sub
addl
mov
jno
arpl
leave
cmp
push
add
cmpsb
add
xchg
loope
adc
jns
push
icebp
cmp
push
or
imul
push
push
outsb
jno
add
and
cltd
inc
pop
jl
mov
add
cmp
adc
sub
imul
icebp
scas
mov
js
pop
push
rolb
out
lret
xor
push
ljmp
nop
add
repz
pop
sub
rolb
push
xchg
mov
xor
addb
add
add
xor
repz
cld
add
mov
lret
xor
bound
mov
mov
add
das
scas
mov
jp
adc
incb
mov
and
add
jmp
les
pop
inc
in
test
out
dec
inc
add
scas
repz
call
add
outsb
insb
ret
mov
jnp
jmp
addr16
add
mov
cmp
cmp
sub
fistl
push
add
repnz
cld
ja
add
outsl
les
addl
or
add
sub
adc
add
dec
add
nop
add
fiaddl
movb
shll
add
adc
xchg
add
dec
scas
inc
add
repz
mov
add
push
add
add
add
aad
xlat
stc
ljmp
mov
adc
pop
fdivp
stos
or
add
add
push
das
mov
shrl
jns
sbb
inc
add
mov
add
pause
add
add
cwtl
loop
jmp
or
add
jl
aas
rolb
push
add
add
xchg
add
push
add
fisubrs
test
add
mov
fistpll
add
sbb
imul
sub
add
inc
rolb
loop
sub
mov
pop
psrld
jl
sti
sbb
mov
fisubs
add
fsubl
or
cmp
fcoms
add
iret
xchg
add
lret
dec
movsl
jb
mov
push
add
sbb
movsl
pop
xchg
mov
test
fnstenv
fldl
lock
jb
stos
repnz
add
inc
sarl
xchg
pop
enter
lea
add
les
lods
mov
or
fs
add
ds
mov
add
rolb
sbb
mov
add
add
je
int
push
add
dec
arpl
dec
fwait
add
mov
test
adc
movsb
add
out
mov
into
xor
aam
lea
add
out
mov
pop
int3
repz
and
mov
add
jns
add
enter
add
push
add
and
sbb
int
xor
aaa
stc
push
add
aad
mov
dec
stc
stc
cli
les
fwait
ljmp
stc
cmp
adc
xor
pop
stos
mov
dec
lahf
sub
int3
mov
push
add
pop
adc
inc
in
jbe
std
addb
das
gs
xchg
push
rolb
addb
mov
mov
xchg
add
aas
cwtl
mov
add
add
add
or
cltd
into
test
and
add
nop
add
push
dec
sub
mov
add
movsl
inc
das
push
add
push
add
inc
cmp
dec
sbb
add
in
call
cld
ja
outsb
xor
insl
mov
add
movsb
add
movsb
add
mov
mov
les
hlt
add
outsl
mov
add
push
push
cmp
lock
test
add
dec
into
dec
inc
mov
mov
add
cmp
add
sti
repnz
mov
mov
ret
test
daa
movsb
add
fucomp
and
push
js
inc
bound
mov
or
add
add
add
push
jl
push
mov
push
and
mov
xchg
cli
dec
or
loope
scas
addb
adc
lahf
lcall
mov
cltd
lret
repz
mov
dec
cmp
shll
add
pop
and
mov
push
add
mov
pop
lcall
mov
adc
add
sub
push
add
add
adc
add
stos
leave
nopl
inc
add
add
je
out
mov
add
add
add
mov
add
xor
dec
pop
dec
mov
icebp
aaa
repz
cmp
add
jmp
icebp
xor
pop
push
add
jle
imul
rcll
add
addb
jbe
sub
mov
add
add
clc
outsl
mov
push
out
leave
arpl
add
and
mov
mov
inc
add
gs
jmp
mov
push
push
xchg
add
xchg
lods
popa
adc
and
mov
add
and
jne
outsb
addr16
add
orl
inc
add
jae
lea
adc
ds
out
dec
test
lret
ds
add
mov
mov
cmp
fmull
add
cwtl
fwait
xor
and
add
push
ljmp
add
sbb
lahf
addr16
jge
sbb
lods
adc
stc
mov
cmpsb
add
add
lea
shr
popf
arpl
and
add
add
sub
repnz
jbe
xchg
mov
pushf
mov
js
mov
add
jne
in
jle
mov
ds
add
int3
pop
push
add
mov
add
or
sbb
scas
addb
repnz
dec
add
in
add
loop
scas
pop
in
add
add
add
sahf
dec
mov
cld
iret
insl
jp
jns
mov
push
or
push
add
pop
mov
hlt
add
add
xor
into
jl
adc
mov
xchg
add
mov
mov
add
mov
mov
and
mov
jbe
out
ret
call
add
dec
loopne
or
mov
push
add
pushf
xor
sub
test
sub
xchg
add
scas
jmp
cli
int
sbb
add
repnz
mov
lods
das
push
xchg
mov
jns
movb
push
cs
or
loope
mov
pop
outsb
fidivrs
add
lret
xor
or
push
add
add
mov
jge
test
mov
sbb
add
sbb
mov
push
ret
rorl
add
pop
repz
out
iret
mov
mov
add
jb
mov
add
cltd
jae
or
mov
mov
aaa
sub
push
add
sbb
jnp
add
sar
mov
jns
inc
add
add
fsubl
add
add
mov
push
add
add
push
add
addl
or
and
popa
mov
add
mov
stos
pop
cmp
add
add
inc
sub
mov
movb
add
or
enter
add
mov
stos
and
mov
or
pop
push
add
sbb
iret
cs
loope
cs
repnz
cvtps2pd
fwait
ja
add
add
mov
add
add
icebp
addr16
inc
add
inc
add
add
test
loope
add
movb
add
andl
or
push
adc
cmp
lea
add
fnstsw
aad
xlat
xor
inc
loopne
rolb
test
mov
popf
mov
test
mov
add
pop
lret
fcmovb
add
dec
aas
in
std
rcr
out
sahf
inc
add
stos
lcall
mov
or
add
cld
cmp
test
mov
add
inc
add
add
add
cmp
and
in
mov
out
mov
push
add
and
test
and
add
cmp
add
xor
push
add
add
push
add
mov
clc
dec
enter
insl
out
ljmp
iret
lea
jae
lods
into
loop
push
sub
cmp
sub
adc
xchg
cld
inc
add
add
sbb
add
sti
stos
sbb
dec
fistps
fucomp
js
add
insl
mov
orl
and
mov
lods
sbb
shrl
cmpxchg
arpl
xor
sti
lds
inc
add
testb
add
xor
insb
outsl
adc
ret
jno
add
sbb
movsl
mov
add
sbbl
fsubr
mov
add
insl
mov
aad
add
jg
pop
jbe
mov
add
add
add
mov
mov
mov
add
in
out
cmp
jl
addb
jmp
sbb
aad
add
call
pusha
add
cwtl
pusha
add
add
sbb
and
mov
push
add
jb
mov
fnstenv
cld
sub
lock
dec
pop
xchg
add
cmp
enter
mov
add
push
addb
add
icebp
xchg
dec
mov
add
pop
mov
mov
mov
mov
pop
mov
jge
push
add
or
paddq
mov
xchg
data16
cwtl
nop
add
add
xor
movl
push
add
add
add
add
leave
je
shrl
add
jne
stc
repnz
cmc
ret
mov
outsl
or
add
sub
fstl
mov
add
add
testb
push
push
add
movsb
add
loopne
daa
ljmp
add
loope
mov
aas
cmp
test
out
add
adc
xchg
data16
jae
add
aad
add
aaa
cmpsb
add
sbb
pop
cwtl
icebp
xchg
sub
imul
xchg
rolb
and
mov
mov
dec
add
xor
mov
in
jae
cmp
cwtl
dec
push
add
add
mov
mov
mov
add
jno
stos
xchg
test
cmp
imul
mov
test
lods
enter
testb
add
clc
xchg
add
dec
les
addb
cmpsb
add
cmp
xchg
sub
add
add
add
pop
rolb
inc
add
mov
mov
ljmp
cmp
add
addb
rolb
mov
or
cmp
xchg
add
add
movb
movsl
xor
test
jle
addr16
dec
cs
dec
mov
pop
filds
mov
scas
adc
and
repz
call
add
mov
add
out
or
shll
add
mov
mov
icebp
fidivl
add
testb
int3
lahf
rolb
xchg
das
icebp
in
mov
ret
add
lds
push
mov
pop
sub
push
ret
out
imul
outsb
mov
out
cmc
inc
and
roll
iret
mov
in
fdivs
push
add
das
in
xor
dec
sub
imul
iret
stos
mov
mov
jo
in
pop
mov
nop
add
into
sub
inc
add
enter
add
pusha
add
add
add
jo
mov
inc
mov
test
xor
xor
jecxz
add
popf
mov
or
shl
add
pop
mov
mov
mov
rcrl
add
sbb
xor
gs
add
add
add
cmp
add
mov
mov
sahf
and
sarl
lock
sbb
sbb
mov
mov
and
sbb
add
test
and
pop
cmp
add
push
add
mov
cmc
fdiv
add
ss
cmc
das
lds
push
mov
add
mov
xchg
dec
mov
les
cmpsl
and
jnp
and
test
loopne
negl
daa
add
inc
add
les
lds
mov
popf
jge
add
popa
sbb
add
sub
pop
inc
and
mov
iret
or
insb
out
stc
movsb
add
mov
test
mov
das
das
pop
sti
and
add
add
add
add
data16
pop
pop
mov
aas
fstl
add
xchg
gs
fadd
add
sbb
add
repnz
push
push
add
mov
xchg
add
cld
xchg
adc
or
push
add
and
ljmp
cmp
cwtl
repz
adc
sub
add
add
jg
stos
in
das
ds
jne
xchg
add
cmc
cmp
lock
add
add
rolb
mov
jle
add
add
mov
shrl
mov
add
mov
jle
mov
add
data16
mov
jge
add
mov
movsl
sbb
xchg
mov
or
popa
lret
add
jnp
adc
arpl
loope
add
pop
sbb
movsb
add
add
add
add
fdiv
aad
mov
repnz
jmp
mov
mov
add
add
ljmp
xchg
xchg
cltd
jne
pop
test
cmp
add
jno
pusha
add
sti
inc
add
add
add
gs
pop
popa
sahf
mov
imul
aaa
repz
add
movb
inc
sub
jno
sarl
and
and
push
add
sti
mov
not
add
add
sub
mov
sahf
jg
negl
pop
sbb
pop
int3
and
lock
fst
iret
or
lea
mov
scas
fiadds
stc
inc
fimuls
les
ja
inc
add
mov
icebp
sti
inc
add
add
add
or
add
cs
xlat
in
or
pop
dec
push
add
sub
add
adc
pop
mov
pop
jno
into
sub
dec
pop
mov
hlt
add
in
stos
out
fistpl
inc
add
pushf
jo
outsl
fstl
add
insb
mov
jns
push
jle
test
ror
test
pop
out
jo
xchg
add
ja
jne
add
add
add
call
jg
add
jl
mov
bound
mov
sahf
xchg
push
jecxz
inc
fidivrs
xor
mov
jmp
stc
mov
addb
pop
fiaddl
add
pop
mov
cmp
xor
cs
lods
mov
add
icebp
imul
out
pop
into
ret
data16
sti
xor
jnp
sub
in
add
cmc
add
mov
rolb
gs
add
cs
std
lea
push
cli
lret
outsl
adc
add
add
push
ret
nop
add
stc
push
mov
sbb
js
xchg
jle
sub
add
ja
imul
imul
add
add
iret
cwtl
insb
or
in
lods
outsl
and
mov
cmp
add
sbb
add
sti
adc
int
inc
int3
mov
out
mov
mov
cli
xchg
call
add
cltd
sbb
add
adc
add
into
xor
xchg
add
rolb
outsb
je
xchg
mov
pop
push
adc
pop
out
add
mov
mov
add
add
shrl
add
fidivrl
sbb
add
xchg
sub
arpl
ret
add
cltd
hlt
add
jg
add
stos
out
push
add
add
or
jbe
push
add
sub
enter
rolb
cmp
rolb
sbb
add
out
test
jg
add
pop
cmp
repnz
inc
add
rolb
jnp
fcomip
lds
add
jmp
add
cmpsb
add
xchg
mov
lret
mov
gs
sahf
or
in
mov
jp
jle
call
pushf
push
sub
and
cmp
or
add
testb
or
cmp
inc
add
pop
jle
lock
int3
add
mov
faddl
push
add
xchg
lahf
fdivp
add
xchg
jb
fs
push
mov
add
add
sbb
adc
add
sbb
pop
mov
xor
outsl
jle
ja
clc
into
or
add
add
stos
dec
call
filds
jb
mov
fsub
push
add
jbe
ret
in
adc
popa
add
adc
arpl
mov
mov
add
testb
add
add
mov
inc
add
add
add
cmp
cmp
sbb
cmp
cli
imul
xchg
xchg
add
pop
cld
ret
add
sbb
mov
or
add
pushf
or
add
add
addr16
cmp
roll
jns
loopne
xchg
push
add
out
pop
mov
push
add
mov
inc
lcall
adc
sbb
add
pop
add
mov
lea
add
int3
dec
or
call
dec
cmc
mov
rcll
xor
scas
mov
add
xor
scas
arpl
inc
add
test
adc
adc
pop
scas
and
mov
inc
imul
add
add
pop
xchg
mov
add
add
add
push
add
scas
add
push
add
add
call
imul
rolb
rolb
or
add
add
rolb
jb
pop
mov
out
add
jg
add
dec
int
add
mov
int3
rolb
dec
mov
inc
xor
testb
add
add
lods
or
pop
popf
xchg
add
add
cmp
scas
push
push
add
and
mov
mov
cmp
pop
mov
js,pt
test
rolb
mov
popf
lret
push
push
xchg
sbb
cmp
jb
pop
std
cld
xchg
or
sbb
and
je
imul
int
movb
push
add
add
fwait
dec
xor
cmc
lret
popa
mov
inc
add
jg
and
dec
pop
and
mov
je
imul
mov
add
data16
add
rolb
outsl
loopne
popa
lahf
dec
addl
add
insl
stos
add
mov
mov
mov
fcoms
sub
pop
sbb
ljmp
xchg
mov
lods
dec
push
add
jns
cli
nop
add
ds
inc
rolb
iret
add
sub
test
adc
sbb
out
fldt
into
pop
add
add
add
mov
xchg
add
add
add
add
xor
orl
mov
cmp
add
fxch
sub
dec
xchg
inc
add
aas
jns
adc
inc
add
or
icebp
pop
out
sbb
sbb
cwtl
adc
insl
pop
lea
add
mov
pop
leave
jmp
add
shll
pusha
add
sub
sub
and
outsl
repnz
cmpsb
add
ret
add
mov
jnp
add
pop
je
mov
in
push
pop
pusha
add
add
mov
mov
add
inc
add
cs
adc
ja
mov
enter
js
push
ret
xchg
add
add
push
add
add
add
add
jecxz
rolb
mov
pop
jne
add
test
cmp
add
cmp
stc
lods
push
add
add
pop
int
leave
ret
negl
cld
jns
add
int3
rolb
pop
lods
hlt
add
dec
lds
push
add
mov
test
mov
add
xchg
inc
add
adcl
mov
cmpsl
iret
mov
xchg
add
std
lea
faddp
add
mov
jo
xor
mov
mov
xchg
movb
and
add
pushf
xchg
or
adc
mov
pop
dec
jecxz
add
movb
add
das
xchg
add
inc
repnz
jmp
pop
xchg
add
or
sbb
pop
ss
add
call
push
jb
push
adcl
rolb
add
mov
pop
into
cmp
repz
mov
pop
popf
ds
mov
add
iret
test
dec
loop
imul
fbstp
add
mov
lock
add
dec
sbb
add
pop
adc
cmp
in
jo
test
add
mov
cwtl
push
pop
add
js
ja
rolb
add
pushf
add
mov
add
pop
push
add
pop
icebp
rolb
ja
add
mov
push
add
add
test
mov
cmpsl
xor
add
les
or
loope,pt
add
inc
or
add
add
add
stos
popf
loopne
mov
jbe
cltd
pop
and
ret
push
adc
jne
add
mov
add
add
jle
ljmp
inc
test
leave
xchg
add
pusha
add
lods
sbb
add
jno,pn
aad
movb
jns
arpl
inc
add
dec
push
add
add
outsl
adc
or
jne
jmp
mov
add
cmp
sub
add
fdivrl
push
orl
or
add
add
add
add
add
fwait
inc
sbb
pop
inc
add
add
inc
add
mov
repnz
mov
inc
add
lods
ss
mov
lea
movsl
sub
or
lods
and
push
add
add
inc
cs
mov
and
mov
add
into
cmp
cmp
add
cmp
rolb
push
xor
hlt
add
cmp
mov
add
sbb
add
add
cltd
cmpsl
xchg
add
pop
xchg
mov
jae
pusha
add
dec
pop
xchg
add
inc
cli
cmp
in
insl
jle
lock
cmp
add
pop
sub
mov
insb
leave
out
add
std
add
mov
in
cwtl
cmp
lods
inc
add
popf
or
mov
jmp
add
xchg
int3
bound
mov
add
add
dec
stc
leave
and
sbb
cmp
out
jl
add
addb
mov
ret
mov
scas
arpl
add
jno
add
fists
add
int3
mov
push
add
dec
test
add
lahf
gs
add
arpl
cltd
fldt
jl
fisttpll
test
inc
add
popa
add
dec
dec
mov
xchg
mov
int3
fcmovbe
add
lea
or
add
push
add
ffree
add
jmp
clc
xchg
xor
add
test
push
out
mov
mov
dec
fsts
mov
lock
add
add
add
in
add
add
add
mov
sahf
cmc
mov
xchg
mov
out
add
das
enter
add
mov
add
add
add
xlat
or
sahf
in
mov
out
xor
lcall
mov
leave
dec
aas
mov
inc
add
push
add
out
lret
fnstsw
xchg
adc
js
insb
loop
mov
movsb
add
xchg
xchg
sbb
and
mov
add
bound
mov
mov
dec
movsb
add
xor
adc
arpl
pop
arpl
test
mov
and
movsb
add
pop
fadd
mov
imul
and
add
adc
add
add
inc
mov
push
pop
xor
mov
out
rolb
pop
adc
xor
ja
mov
data16
cwtl
and
mov
test
loopne
pushf
jecxz
add
or
jg
outsb
dec
push
add
negl
orl
and
mov
add
dec
and
add
jmp
sbb
rolb
sbb
sahf
lret
hlt
add
add
add
jl
movsb
add
add
add
dec
sbb
push
add
in
fsubrl
cmp
iret
mov
add
or
in
push
add
sub
fldcw
subl
push
aas
aad
rolb
add
add
loope
fcoms
add
xchg
loop
mov
mov
pop
data16
iret
jnp
std
ljmp
add
rep
inc
add
mov
add
repnz
lret
ret
cwtl
testb
test
ds
sbb
loop
in
ret
dec
sahf
pop
bound
mov
and
int3
push
add
loopne
inc
adc
add
jecxz
add
dec
dec
out
mov
sbb
pop
rcr
add
pop
mov
xchg
testb
inc
inc
add
aad
out
in
pop
scas
adc
dec
xor
rcr
mov
fisubs
shrl
pop
test
cs
adc
push
add
fwait
pop
xchg
test
mov
testb
dec
jg
add
ja
enter
add
push
test
xchg
add
outsl
inc
les
bound
mov
push
add
in
xor
fists
adc
pop
mov
leave
adc
add
add
add
aam
push
mov
add
fnstsw
rcll
shll
adc
rcr
dec
mov
and
rolb
lahf
mov
jmp
add
decb
jnp
lea
and
mov
cmp
imul
xor
prefetcht0
mov
ja
adc
clc
mov
cmp
add
add
outsb
xchg
add
sahf
and
sub
pushf
out
add
fildl
nop
add
xchg
add
jg
add
fstps
jle
sahf
test
fimull
pop
sbb
xchg
add
add
sahf
clc
sub
outsl
rolb
aaa
push
add
add
fwait
adc
add
fldt
sbb
cmp
push
data16
jmp
add
lods
pop
lahf
fldlg2
push
add
add
jle
sti
in
mov
addb
pop
mov
mov
fs
inc
pushf
insb
cmp
and
mov
add
outsl
lock
movb
dec
fwait
mov
push
add
fisubrs
mov
push
add
cmpsl
out
mov
add
push
add
jae
xor
xchg
add
fcoms
dec
nop
add
add
mov
add
pop
jno
adc
andl
add
jmp
shll
pop
lret
pop
push
add
lods
xor
cwtl
xchg
mov
aad
repnz
loopne
out
sbb
rolb
xchg
dec
or
addb
out
add
add
addb
add
add
lods
jge
add
mov
sbb
add
push
dec
pop
pusha
add
lods
ret
mov
mov
add
lods
xchg
or
adc
sbb
addb
add
add
adc
mov
xor
or
ja
xchg
add
or
cld
mov
idivl
sub
repz
add
push
add
mov
xor
add
scas
pop
ljmp
lea
add
add
add
leave
jmp
test
pop
roll
add
jns
pop
out
fidivrs
fwait
jo
lds
jb
cmpsl
lods
pop
pop
push
add
insl
sub
push
std
sbb
or
add
dec
nop
add
add
sub
add
sub
add
ja
sub
and
addb
sub
xchg
push
add
add
inc
add
pop
add
cli
incl
mov
add
aad
add
mov
addb
add
int3
dec
popf
mov
in
cmp
mov
add
mov
stos
imul
add
add
add
les
int3
fildl
int3
push
add
jbe
sbb
add
add
pushf
movsb
add
mov
xor
push
faddl
dec
and
mov
add
add
in
hlt
add
inc
add
repnz
add
mov
int
add
cli
iret
mov
add
add
xor
stos
stc
sub
xlat
mov
decb
dec
adc
or
xchg
add
cmpsb
add
cwtl
jmp
push
hlt
add
mov
fmuls
add
gs
adc
xchg
cli
lcall
arpl
pop
das
test
pextrw
add
mov
pushf
mov
add
add
jle
add
jo
or
addb
mov
add
add
mov
xor
push
add
jge
pop
jle
ljmp
ljmp
add
mov
add
lods
int
jecxz
outsl
cmpsl
ja
add
insb
push
add
adc
je
mov
sbb
add
add
das
and
adc
pop
jge
add
add
add
or
add
xchg
add
and
pop
push
xor
test
pusha
add
jecxz
in
xchg
add
mov
jge
add
je
or
add
sarl
add
mov
fadd
mov
data16
add
mov
ljmp
jns
add
sbb
test
ficomps
xchg
movb
add
add
xchg
add
cmp
imul
add
jae
ljmp
cwtl
pop
mov
sub
cmp
hlt
add
outsl
ds
mov
adc
push
add
addb
add
dec
mov
leave
lds
adc
das
or
fistps
fbld
rolb
movsb
add
mov
scas
das
ljmp
push
mov
js
push
cmp
xchg
sub
mov
xchg
xchg
sbb
das
jle
lret
into
sahf
xor
pop
fwait
das
adc
mov
lcall
fwait
out
popf
cld
popf
ficoms
adc
jnp
add
inc
add
xlat
pop
push
test
in
movsb
add
mov
data16
mov
adc
adc
xor
or
in
pop
sbb
out
cmp
adc
ret
lret
push
je
dec
das
out
inc
iret
rolb
les
arpl
mov
add
and
mov
add
push
add
inc
push
in
and
add
or
add
orl
add
leave
xlat
and
add
icebp
push
jbe
sub
xchg
add
mov
sbb
sub
arpl
add
add
pop
jecxz
repnz
add
sbb
add
sub
aas
and
mov
jnp
gs
jecxz
pop
das
loopne
mov
sub
imul
imul
inc
pop
pop
dec
scas
push
add
mov
inc
icebp
xchg
mov
mov
sub
jne
mov
gs
out
subl
lahf
in
cltd
mov
pop
dec
scas
mov
ret
iret
icebp
sarl
add
aas
mov
xor
pop
fcomps
add
add
add
lea
cmp
ja
popf
pop
out
sbb
or
cmp
int
mov
adc
mov
push
add
mov
addr16
add
popa
mov
add
ljmp
add
mov
add
mov
loop
fwait
or
add
ljmp
mov
mov
fdivl
test
dec
xor
xlat
pop
sbb
add
adc
mov
pop
jmp
or
add
sbb
testb
sbb
cli
out
sbb
inc
add
or
int3
les
loop
fs
and
mov
gs
mov
mov
test
add
mov
inc
add
call
add
dec
add
mov
rolb
out
mov
int3
cmp
sub
add
add
rolb
stos
xor
add
lret
inc
add
xlat
nop
add
popa
xor
push
pop
insl
jnp
loope
addb
mov
jbe
jp
add
fucom
add
pop
xchg
mov
mov
add
repnz
rolb
xchg
iret
pop
jno
add
out
imul
sti
test
jmp
add
addb
fwait
icebp
and
scas
cmovg
popa
pop
or
testb
xchg
add
imul
add
call
lods
ret
xchg
add
fucomi
jae
invd
or
mov
cmp
xchg
lcall
add
lcall
add
or
pop
cmpsl
dec
push
add
xlat
xchg
add
add
jmp
push
rolb
jns
add
mov
add
cltd
stos
fwait
sub
jno
add
add
add
and
mov
dec
insb
insl
mov
int
aam
mov
push
mov
cmp
dec
fdivl
pusha
add
and
add
mov
mov
sub
out
lcall
xchg
add
add
add
or
add
icebp
int
add
inc
add
les
test
add
das
sub
add
jb
popf
sbb
add
add
inc
add
add
divl
out
dec
lret
les
dec
xor
and
mov
adc
fisubrl
xor
stos
popf
cltd
movsb
add
lahf
bound
mov
and
sbb
aas
addr16
push
add
xor
movsl
jo
ss
xadd
inc
add
add
add
sub
mov
add
cmpsb
add
sbb
int3
jg
fisttps
pushf
push
sbb
mov
jne
xorl
mov
add
dec
imul
ja
lret
or
pop
cs
out
out
and
mov
insl
int3
fld
add
jl
add
or
add
jno
cmp
fldt
add
xchg
jb
push
add
fidivrs
add
add
cwtl
popa
jnp
addr16
pop
push
add
jmp
loop
mov
jg
lods
push
fmull
add
fcmovbe
cmp
jb
outsl
arpl
cmpsb
add
add
mov
add
lds
xchg
mov
dec
pushf
mov
mov
add
add
fisubrs
jno,pn
cmp
add
add
ja
mov
xor
inc
add
cld
adc
xor
daa
lret
adc
cmp
add
mov
add
add
mov
and
mov
and
mov
test
add
daa
leave
jg
addb
mov
rolb
mov
in
cmp
imul
outsl
add
mov
jmp
mov
fptan
add
into
xor
repz
add
sbb
add
stc
rolb
insb
rolb
insl
inc
add
add
mov
add
xchg
push
add
cmp
xchg
inc
stc
in
xor
test
adc
sbb
lcall
leave
or
add
add
in
mov
fsubs
inc
mov
out
mov
sbb
xor
stc
pop
addb
add
add
mov
loop
push
dec
fcmovnbe
add
adc
mov
jmp
add
or
add
or
imul
add
outsl
jnp
negl
icebp
enter
sub
push
add
scas
xor
mov
stos
pop
push
mov
mov
xchg
jno
jno
pop
stos
or
and
mov
push
add
add
mov
sub
dec
lret
bound
mov
lea
mov
mov
and
xchg
add
add
lods
dec
push
add
dec
mov
daa
mov
sbb
add
or
mov
add
add
dec
icebp
fildll
and
mov
cli
push
movb
add
std
adc
stc
cmc
xor
add
add
stos
jmp
mov
mov
add
insl
frstor
mov
sahf
into
inc
imul
movb
or
repnz
cmp
add
fistps
jnp
pop
mov
int
ret
add
sbb
cmc
fistpll
jecxz,pt
je
fbld
add
into
fmuls
lahf
xchg
add
movb
add
add
test
or
jno
sub
add
xor
push
xor
or
or
add
mov
clc
add
enter
cmc
movsb
add
add
add
cmp
dec
outsb
and
mov
mov
add
fldt
movl
add
cmc
add
add
flds
mov
lret
iret
sbb
add
cltd
icebp
jmp
addb
popa
push
rolb
pop
pop
xchg
add
in
sbb
mov
cmp
push
add
add
in
nop
add
mov
or
lret
mov
mov
cli
dec
je
repz
mov
inc
xor
add
add
les
or
das
xor
add
fadds
dec
sub
cmp
std
repnz
or
add
cmpsl
push
add
jbe
inc
add
nop
add
add
in
aaa
ficoms
add
iret
cmpsb
add
jae
outsb
rcl
es
pop
cltd
aad
add
push
shld
mov
imul
cmp
jne
add
in
test
pcmpeqw
inc
add
ror
jge
jmp
add
aas
mov
xchg
adc
jno
sub
test
add
rol
pop
and
mov
aaa
loop
and
stos
cmpsb
add
or
daa
sub
cmp
add
jl
add
stos
or
cmp
sub
mov
rolb
movsl
insb
add
mov
addb
add
insb
push
xlat
dec
and
pop
addb
aam
add
add
pop
jl
int3
add
add
add
mov
add
data16
add
cmp
mov
add
push
add
data16
add
add
add
mov
and
imul
scas
sbb
loopne
pop
movups
lds
and
add
mov
add
add
mov
mov
mov
jns
add
call
push
inc
add
add
loop
test
dec
lods
ret
and
mov
popf
lret
bound
mov
clc
pop
pop
jl
gs
and
mov
jno
add
icebp
xchg
add
ja
leave
jbe
cmp
mov
add
add
clc
inc
add
mov
add
fucom
add
movb
mov
add
cs
push
addb
add
stos
mov
mov
imul
add
add
sti
push
add
mov
sahf
mov
out
add
mov
ret
mov
mov
inc
add
mov
ss
add
lret
fcmove
enter
jno
add
out
rolb
fwait
leave
and
mov
lret
ds
cmpsl
call
push
jae
cmp
pop
adc
mov
outsl
dec
imul
add
add
sbb
and
mov
add
add
mov
mov
mov
out
mov
mov
add
mov
mov
add
add
add
add
cmpsl
or
daa
loope
mov
jecxz
cmp
out
sub
iret
push
rcll
test
pop
mov
lds
pop
lock
lahf
dec
ss
rolb
repz
add
pop
inc
dec
xor
or
sub
testb
add
add
cmp
movb
add
insb
xchg
xlat
lea
add
aas
add
pop
jb
dec
jl
add
add
dec
sub
add
mov
and
mov
add
mov
and
mov
lcall
or
rorl
fisubs
sub
mov
jnp
popf
xchg
add
adc
ret
or
cld
push
jb
insl
shrl
lcall
add
fmulp
inc
add
int
leave
out
sbb
add
clc
mov
cltd
ja
push
add
lret
jne
add
mov
or
mov
adc
jo
call
add
ficompl
cmp
cmpsl
push
addb
xor
mov
jecxz
push
adc
repnz
adc
add
add
add
mov
mov
add
add
add
add
cli
xor
pop
bound
mov
mov
ret
push
add
add
icebp
cmp
add
add
fadds
add
add
ret
popa
add
mov
pmaddwd
mov
pop
jbe
movsl
hlt
add
mov
cmp
inc
add
add
add
movsb
add
fsubrl
daa
lahf
mov
add
add
mov
sbb
in
std
lods
iret
add
in
cld
pop
and
mov
pop
mov
ret
repnz
add
jae
in
mov
inc
cwtl
repz
mov
push
imul
sub
popf
sbb
dec
in
xor
fisttps
rolb
data16
ds
dec
test
add
mov
pushf
int3
enter
add
fmull
push
std
daa
ret
add
sbb
je
pop
fimull
jae
add
mov
jno
add
add
movb
xchg
add
loopne
rolb
jae
add
inc
add
jns
add
mov
mov
inc
add
add
movl
add
les
xchg
add
add
lret
cmpsl
sub
jno
test
mov
push
add
pop
cli
dec
dec
jno
add
stos
mov
lahf
mov
add
mov
fwait
jae
daa
negl
add
add
ljmp
lods
jge
arpl
inc
sub
add
mov
add
pop
loope
or
loope
xchg
movsb
add
fisttps
mov
cwtl
jo
int3
push
mov
mov
clc
insb
mov
in
imul
and
xor
pop
movsb
add
add
roll
adc
out
gs
add
cmp
add
daa
push
add
mov
lock
add
add
cmc
jge
cmpsb
add
mov
push
test
add
inc
add
add
mov
jno
mov
add
add
add
icebp
jo
add
push
add
repnz
add
dec
or
sbb
jg
lret
add
adc
outsl
adc
out
cmpsb
add
cmp
mov
lds
add
add
rolb
add
add
add
aaa
xchg
push
add
mov
fldl
add
add
jb
add
mov
cmp
leave
lret
push
out
xor
xchg
les
sbb
add
cmp
mov
fadds
add
pop
in
movsb
add
fwait
pop
inc
mov
leave
hlt
add
add
add
add
add
and
mov
les
cmp
pop
aas
add
rolb
add
jno
mov
test
add
sub
out
add
repnz
add
sub
mov
in
cld
pop
lods
jecxz
mov
out
cmp
add
imul
add
jno
iret
pop
leave
inc
pop
dec
fldcw
rolb
lahf
incb
stc
sbb
xchg
add
add
jo
js
mov
data16
add
add
add
into
xchg
adc
bound
mov
imul
add
add
lock
adc
xlat
rcr
call
sub
and
fcmove
push
add
arpl
xchg
add
in
popf
sub
scas
pop
push
test
push
xchg
add
out
add
mov
int
add
or
add
mov
leave
adc
adc
stos
in
mov
add
leave
xor
mov
and
mov
xchg
sub
add
add
inc
add
in
mov
pusha
add
or
mov
adc
sti
jnp
jo
xchg
add
scas
sbb
movb
add
push
or
xchg
add
sahf
stos
jge
jne
stos
js
add
idivl
jge
and
out
aas
test
out
add
mov
add
add
pop
popf
lock
push
push
push
add
push
add
cmp
sub
je
lcall
jg
rolb
pop
gs
push
add
sbb
add
xchg
ja
add
add
mov
add
out
sbb
stos
cmp
jmp
add
add
pop
ret
sbb
add
jns
pop
xor
fxch
imul
jp
in
mov
mov
ljmp
cmpsb
add
sbb
add
lock
sbb
cld
out
rolb
adc
sbb
mov
int
add
es
aaa
in
lcall
jge
add
add
add
add
push
jle
mov
xchg
or
xchg
add
gs
add
cmp
pop
mov
mov
pop
mov
scas
pop
cmp
and
mov
and
mov
add
cmpsb
add
out
ja
mov
les
xchg
add
stos
and
cli
call
stc
push
test
add
rolb
cwtl
cmpl
add
jae
jne
add
adc
mov
ret
and
outsl
das
jb
xor
mov
sub
aas
mov
add
mov
dec
ret
add
aas
ror
mov
pop
mov
jle
add
add
in
daa
mov
pop
pop
jl
add
in
repz
lahf
pop
scas
jle
in
cmp
add
or
push
add
add
addr16
add
outsl
inc
add
and
test
jmp
jmp
dec
mov
add
mov
add
add
add
rolb
popa
cmc
out
jne
push
mov
xor
add
mov
xchg
fimull
sahf
inc
add
mov
fucomip
cmp
mov
add
mov
mov
lret
je
sbb
mov
loop
and
ds
mov
mov
xor
push
add
add
xchg
add
add
pusha
add
lahf
jge
aad
stos
pop
ret
iret
pop
jp
lahf
cltd
or
bound
mov
sub
shll
xor
leave
mov
add
ds
push
add
add
add
fs
dec
pop
mov
stos
sub
and
mov
adc
bound
mov
and
inc
add
out
movsl
push
pop
jo
lahf
out
testb
loop
mov
cmp
addr16
and
mov
add
add
dec
xlat
decb
testb
mov
fadds
sub
jmp
push
rolb
add
jmp
fcmove
loope
add
mov
cwtl
addl
jno
rolb
sub
add
cmp
dec
xlat
mov
leave
xchg
cmpsb
add
cmp
xadd
mov
shl
xchg
pop
rolb
sub
ds
mov
mov
pop
aad
add
xchg
cmp
mov
lret
aaa
pop
dec
outsb
pop
jb
fsubr
pop
iret
xchg
scas
mov
mov
xor
call
test
mov
xchg
add
mov
dec
lea
clc
ret
movsl
aaa
push
add
mov
add
sbb
add
movsl
loopne
imul
add
rolb
lods
flds
lods
mov
sti
into
mov
dec
popa
adc
icebp
mov
add
sub
sbb
or
out
add
inc
aad
mov
pop
outsl
mov
xchg
add
pop
arpl
add
add
add
in
sub
std
add
sti
andl
add
out
fsubrl
in
sbb
aas
int
mov
push
mov
or
add
cli
mov
movl
dec
stc
fcos
fwait
mov
inc
pop
push
insb
mov
add
mov
add
ds
add
hlt
add
dec
hlt
add
aad
insb
add
add
add
daa
mov
jno
add
jge
jmp
add
lods
sub
cmpsb
add
cmp
mov
mov
rolb
cmpsb
add
add
add
add
add
add
aaa
push
dec
outsl
sbb
stc
lock
cwtl
jbe
push
add
mov
add
add
hlt
add
sub
in
arpl
mov
or
mov
add
jge
pop
imull
aaa
adc
add
pop
and
mov
lret
cmp
ret
scas
addb
lods
cs
cmpl
add
xchg
dec
cmpsl
movsb
add
in
or
jle
inc
mov
pop
lock
add
xchg
fidivl
movsb
add
mov
insb
or
outsl
add
mov
rolb
movsl
bound
mov
add
ja
xchg
stos
sbb
dec
dec
addb
subl
pand
mov
jl
add
addr16
add
cltd
adc
cwtl
jl
dec
mov
sbb
add
lock
movsb
add
in
push
add
fbld
add
add
xor
lret
jne
push
stos
cltd
movb
js
cmpsl
wrmsr
add
lods
loope
int3
xor
and
in
ja
in
js
xchg
testb
aam
xor
add
add
cs
out
pop
into
and
aad
movb
mov
incb
mov
add
fists
pop
arpl
mov
fisubl
mov
addb
loopne
mov
add
xor
bound
mov
push
cmovl
push
mov
xor
jp
add
add
add
imul
mov
push
stc
js
dec
lcall
add
add
loopne
fucomi
xchg
sbb
sbb
xlat
lods
jbe
xor
push
fstps
mov
add
pcmpeqb
sbb
std
aas
imul
mov
pop
pusha
add
adc
pushf
sub
add
adc
sub
daa
movups
pop
mov
mov
call
add
in
xlat
out
add
loopne
insb
icebp
ds
xlat
cs
lea
add
adc
add
dec
mov
add
addr16
out
inc
pop
xchg
add
jno
add
add
or
pop
push
cltd
dec
jge
add
rolb
and
mov
cld
sbb
cmpsb
add
fldcw
call
jnp
popa
jno
adc
add
movsb
add
xor
xor
rcrl
cmp
mov
lods
lea
or
mov
fwait
push
add
or
scas
rorl
fsubrs
sahf
je
insl
sub
lods
in
dec
addb
mov
jo
mov
popa
movsb
add
stos
xchg
iret
arpl
test
mov
push
add
mull
mov
stc
inc
add
add
inc
xor
cli
out
mov
jo
sbb
adc
add
dec
lock
clc
sub
push
inc
hlt
add
add
add
scas
or
inc
into
add
add
addb
lods
mov
add
jno
add
add
dec
loop
mov
jno
add
out
push
sbb
add
add
mov
outsl
pusha
add
add
mov
sub
mov
add
push
add
mov
add
test
call
add
mov
inc
dec
fisubs
dec
push
loope
mov
insb
pop
loope
add
mov
sub
xchg
add
les
std
cmp
movsb
add
rorl
das
cli
das
cmp
outsb
xchg
add
mov
ds
or
popf
and
fisubl
sbb
adc
lds
add
test
and
mov
js
cmpsb
add
pushf
rolb
leave
jb
adc
mov
daa
mov
add
loope
add
mov
xchg
push
push
lahf
enter
test
mov
add
xchg
add
xchg
add
add
add
add
add
cli
xor
test
dec
adc
mov
pop
xchg
add
sub
fs
xchg
add
and
add
or
xor
mov
cs
add
pop
cmp
icebp
adc
mov
bound
mov
loop
mov
push
add
add
add
add
ds
rolb
movsb
add
add
xchg
mov
sahf
in
add
rolb
add
iret
repnz
add
xchg
add
outsl
and
add
notl
mov
add
add
je
hlt
add
cmp
mov
mov
jbe
mov
fstps
shrl
push
add
test
psubsw
xchg
add
ljmp
push
add
cli
out
stos
or
out
sbb
add
xchg
add
add
add
fcoms
cli
mov
pop
cs
add
add
push
add
add
add
addr16
add
das
sub
enter
add
les
lret
lret
xchg
sub
push
add
je
ja
xor
stos
mov
cmp
mov
adc
daa
sub
push
lock
add
ljmp
jg
add
add
mov
push
push
pop
jl
add
sub
sbb
xchg
jecxz
add
mov
mov
add
es
mov
jae
add
add
add
mov
pop
decb
in
ljmp
lret
insb
or
add
rcrl
mov
sti
lahf
scas
jl
add
mov
mov
add
push
add
xor
mov
jnp
daa
jp
sbb
mov
add
jns
aam
mov
and
insl
insl
jp
add
add
adc
pop
insb
inc
add
add
add
add
or
pop
in
jnp
pop
test
xor
or
jg
and
sbb
movsb
add
addb
add
add
imul
mov
cld
and
mov
pop
dec
adc
add
sbb
pusha
add
and
je
add
mov
hlt
add
pop
mov
adc
mov
ja
add
add
mov
lret
fisubs
cmp
push
sbb
cld
lahf
stc
daa
loopne
jmp
push
add
ret
cmp
into
fidivl
sub
add
dec
jns
in
mov
cmp
scas
mov
add
add
movsl
stos
daa
js
pop
mov
cmpsb
add
fsub
add
int3
pop
imul
les
imul
mov
sbb
add
add
enter
mov
repz
add
inc
jnp
add
xor
sbb
add
fsubrl
xchg
inc
cmp
add
ret
cltd
aad
xchg
add
add
mov
das
dec
mov
add
mov
add
aad
push
add
mov
clc
xchg
jb
ljmp
add
adc
xchg
add
push
add
xchg
push
xchg
xor
adc
push
sahf
cmpsl
fdivr
out
or
mov
in
jnp
add
mov
std
daa
cmpl
leave
sub
add
add
js
jmp
add
add
mov
or
add
mov
rep
repz
repnz
loopne
jge
stos
jmp
add
add
ljmp
mov
add
aas
mov
lea
xchg
addb
pop
cmp
lea
add
lret
cmp
xchg
add
cmp
add
pop
push
jle
stos
in
adc
lds
jecxz
push
loope
mov
xor
xchg
scas
push
add
mov
add
mov
ljmp
add
sbb
sahf
add
mov
pop
sti
jmp
pop
xchg
xchg
mov
adc
mov
mov
inc
mov
add
ficompl
pavgb
pop
hlt
add
add
lock
in
sti
jmp
lcall
mov
aad
add
pop
xlat
loop
mov
add
add
gs
xchg
or
push
les
cmc
rcll
jp
pushf
add
mov
add
add
jbe
push
add
ficomps
into
push
add
add
push
stos
and
push
addr16
jae
addb
sub
fisubs
add
mov
inc
xor
and
mov
in
and
mov
mov
add
jo
mov
mov
jns
add
mov
mov
leave
xchg
sbb
jno
adc
dec
test
movsl
inc
add
sub
mov
mov
mov
test
bound
mov
test
jle
std
add
jp
add
mov
xor
push
cli
fadds
rolb
add
mov
and
mov
push
add
add
movb
add
mov
loope
les
sub
mov
std
or
or
mov
xlat
pop
mov
in
jmp
xchg
add
aad
loopne
mov
testb
add
imul
out
lods
xor
add
mov
test
ds
cwtl
jb,pn
data16
cld
addb
inc
add
add
add
mov
push
add
mov
add
mov
sub
jo
mull
addb
sbb
je
dec
cltd
sbb
mov
add
jge
lods
clc
mov
pop
icebp
add
add
mov
add
add
add
or
and
add
inc
add
jne
pop
jbe
mov
jnp
in
add
pop
dec
sub
movb
icebp
mov
add
add
sbb
add
das
xor
mov
repz
mov
pop
aam
lahf
adc
add
add
mov
flds
push
add
fists
call
jmp
insl
gs
aaa
out
or
outsl
ret
addb
adc
add
sub
movsb
add
add
cmp
add
dec
gs
jle
add
mov
mov
adc
pop
adcl
pop
inc
add
fisttpl
nop
add
pop
or
add
pushf
add
fsubr
add
mov
addb
mov
data16
mov
mov
test
and
movsl
cli
add
int3
fcomps
scas
fisttpl
jb
jg
sub
add
add
ret
or
add
inc
jb
pusha
add
lea
jmp
add
add
ss
mov
dec
mov
dec
adc
pop
mov
fsubl
mov
add
dec
je
das
jp
sarl
jne
add
mov
add
rolb
dec
cmp
or
add
jbe
movd
add
push
add
jno
jecxz
cltd
popf
jge
gs
in
popa
shl
testb
pop
xchg
push
aas
push
add
lock
add
or
mov
add
movsb
add
or
in
xchg
les
imul
inc
xchg
add
stc
dec
push
outsl
insl
jnp
sub
add
rolb
testl
test
gs
xchg
ljmp
add
add
ret
adc
jo
sub
addl
xor
add
xchg
call
add
mov
add
xor
add
add
into
test
hlt
add
sub
add
arpl
inc
hlt
add
mov
dec
shrl
add
jbe
cmc
fcomp
inc
out
lea
incl
xchg
psrad
aam
ret
cmpl
les
adc
cwtl
adc
push
cmpsb
add
ficomps
test
enter
mov
inc
std
xchg
add
push
add
out
mov
seto
jbe
cmp
cltd
popl
adc
push
pop
add
pop
add
mov
movsb
add
iret
pop
xchg
push
cmc
xor
or
dec
aad
addb
dec
test
ds
jne
ror
cmp
add
divl
add
sbb
add
sub
xor
rolb
push
movsl
test
push
add
cmpsl
jmp
lcall
addr16
add
movb
stc
sub
jb
and
or
add
adcl
add
push
arpl
aaa
fimuls
jb
mov
pop
lret
jp
ljmp
add
cmp
add
pop
jns
add
jmp
das
push
add
push
pop
hlt
add
sub
inc
pop
flds
fdivs
jecxz
ja
xchg
addr16
add
add
add
add
dec
dec
sub
mov
mov
mov
stos
sbbl
add
mov
add
jns
fcmovbe
add
es
add
gs
imul
jl
addb
add
mov
call
aas
in
imul
add
dec
ljmp
cmc
aam
inc
mov
sarl
sbb
or
add
add
inc
testb
add
movb
add
ficoms
push
iret
cmp
adc
scas
popf
and
mov
bound
mov
mov
sub
pmulhuw
jl
lret
and
hlt
add
inc
add
add
pop
in
out
add
add
add
jne,pt
inc
add
cmp
fcomi
add
xor
popa
lods
imull
arpl
insb
dec
pop
jne
jg
add
mov
add
sub
jo
mov
add
lock
add
add
add
add
add
arpl
dec
dec
ret
dec
or
push
add
add
aad
pop
xchg
xchg
add
add
lock
loope
cmpsb
add
int3
pop
hlt
add
add
jae
mov
add
sbb
and
mov
add
add
add
ds
add
inc
enter
sbb
sti
sbb
add
data16
cmp
mov
inc
add
push
add
aam
pop
inc
lock
add
shr
leave
in
cmp
add
ljmp
cwtl
cmp
add
mov
jle
add
arpl
push
adc
ja
nop
add
push
add
cwtl
pusha
add
add
js
cmp
insl
and
mov
cmpsl
cli
or
xor
push
mov
mov
and
mov
add
jne
es
add
add
add
fwait
xchg
mov
add
mov
xchg
stos
loope
add
add
add
lock
ret
mov
std
mov
xchg
add
movsb
add
pop
cmp
in
push
add
inc
add
int
add
stc
xor
jbe
cmc
out
push
add
repz
add
nop
add
pop
add
in
ljmp
rolb
sti
insb
aas
sbb
add
adc
add
add
ficompl
add
fidivrl
cli
imul
cmp
imul
add
jae,pt
add
inc
in
dec
ja
add
dec
or
sahf
inc
add
add
add
push
add
or
mov
jp
pop
lock
add
add
pop
int3
mov
mov
add
and
mov
outsl
xor
mov
add
mov
add
mov
roll
popf
jl
out
lods
xlat
mov
add
cmp
add
and
mov
xchg
add
aaa
pop
add
jns
and
imul
add
add
aaa
lea
stos
ljmp
xchg
dec
adc
movsl
xchg
cmp
add
scas
mov
lret
dec
lock
cmp
ficoml
in
add
dec
movsb
add
jae
dec
mov
xor
movsl
clc
addb
jns
call
cltd
into
mov
or
add
and
mov
int
add
xchg
mov
ljmp
mov
mov
xchg
xchg
imull
lcall
and
enter
add
fcoms
call
pop
out
or
add
inc
add
add
add
and
mov
pop
test
jns
iret
xchg
in
aam
and
add
sub
call
mov
or
movb
das
adc
or
repnz
mov
pop
in
pop
dec
mov
jmp
add
mov
cmp
data16
js
xchg
imul
insb
adc
add
ret
add
pop
or
fiaddl
push
lock
push
add
add
add
testb
cwtl
aam
jbe
lea
push
cwtl
mov
xchg
add
test
mov
in
mov
popa
mov
push
jo
xchg
pop
insb
xlat
mov
andl
fisttpll
add
inc
int
add
pop
testb
mov
data16
data16
and
push
add
bound
mov
fstps
nop
add
or
pop
cs
popf
jmp
and
rolb
jle
pop
cmpsb
add
inc
add
add
mov
adc
sahf
mov
add
add
jmp
add
add
mov
nop
add
test
das
clc
pop
cltd
ds
sub
sub
cmp
inc
add
testb
sbb
add
dec
jae
mov
sbb
sarl
add
add
arpl
fsubrp
lea
add
adc
mov
mov
lods
pop
adc
add
push
scas
out
add
mov
cwtl
clc
leave
mov
das
repnz
cmp
lods
dec
pop
stos
jl
sub
cmpl
sub
add
test
mov
lds
push
xor
xchg
ja
add
movb
or
add
add
testb
add
add
or
mov
movnti
mov
add
add
add
add
out
popa
shll
mov
sbb
add
imul
iret
aam
addr16
dec
pop
cvtps2pi
push
add
jno
add
ljmp
mov
or
cmp
add
lods
jns
dec
stos
xor
add
inc
in
sti
push
fdivr
dec
call
add
xor
mov
mov
or
lds
pushf
imul
pop
dec
mov
and
mov
add
mov
sar
mov
inc
ret
repz
or
popa
ja
push
mov
sbb
sub
push
idiv
mov
mov
push
add
loope
sub
mov
dec
lods
or
or
test
mov
add
add
cmp
and
cmp
addb
add
sub
xor
add
mov
movsb
add
add
adc
mov
in
rolb
lcall
mov
add
sti
loope
enter
sbb
push
add
add
nop
add
add
std
mov
repz
iret
adc
mov
int
lcall
aaa
sbb
cmpsl
mov
add
mov
ret
icebp
dec
les
mov
rolb
pushf
mov
lds
xchg
lea
lcall
sbb
or
adc
test
pusha
add
or
xor
sub
add
add
add
jle
or
test
int
or
add
xor
inc
add
fstpl
xor
in
pop
ljmp
test
adc
adc
cmp
fwait
push
sbb
test
cmp
and
mov
or
insl
or
add
add
addb
add
scas
les
mov
mov
sub
add
jg
push
add
add
rolb
stos
mov
dec
add
pop
xor
fldl
add
sbb
add
data16
adc
add
add
add
add
add
mov
les
xor
loopne
mov
frstor
add
call
lret
add
sub
add
lock
or
pop
sub
enter
add
arpl
fcompl
inc
add
mov
test
mov
add
lahf
push
lds
fst
add
push
nop
add
lret
out
dec
jg
cmp
and
cmp
testb
fidivrs
add
mov
push
and
mov
add
insl
cmpsl
jno
fsts
sti
sub
add
push
add
add
add
out
out
sub
dec
lock
nop
add
adcl
in
fists
faddl
imul
or
mov
mov
dec
rcrl
pop
nop
add
mov
into
outsl
lahf
xchg
dec
mov
mov
movsb
add
cmp
jb
lret
stc
sbb
and
push
add
add
mov
pusha
add
adc
test
mov
add
add
or
push
jle
arpl
mov
add
imul
pusha
add
cltd
mov
inc
add
sub
xor
sub
push
dec
sub
mov
hlt
add
scas
xchg
add
add
cmp
xchg
dec
xor
adc
xchg
add
add
add
addb
ror
mov
sub
add
mov
add
add
and
mov
add
add
mov
mov
fcmovnbe
add
aam
fdivs
xor
cmpsb
add
add
in
mov
imul
mov
add
xor
push
fucom
cld
jp
add
add
cli
jbe
mov
add
add
add
testl
out
fimuls
je
or
add
add
mov
pop
hlt
add
inc
add
int
scas
lods
pop
js
fisubrl
insb
adc
movsl
inc
fimuls
add
add
inc
cltd
or
cli
and
mov
mov
clc
repnz
jae
mov
add
jge
clc
repnz
jae
add
add
lahf
add
inc
imul
jb
fwait
cld
nop
jmp
jmp
add
popf
pop
cmc
pop
add
clc
repnz
jae
ljmp
add
xchg
add
lds
mov
xchg
ret
add
add
xor
cmp
fwait
cld
nop
jmp
add
add
popf
and
in
xchg
add
mov
ja
inc
add
add
add
or
repnz
jae
mov
add
jmp
xchg
adc
pop
mov
clc
repnz
jae
add
cmp
add
clc
repnz
jae
add
xchg
add
lahf
add
clc
repnz
jae
stc
xchg
add
add
adc
out
push
push
mov
xchg
ret
popa
adc
mov
clc
repnz
jae
scas
add
repnz
jae
or
cs
sub
lahf
les
clc
repnz
jae
pop
add
adc
repnz
jae
add
add
clc
repnz
jae
jmp
add
fadds
add
stos
pop
clc
repnz
jae
add
sub
mov
mov
clc
repnz
jae
movsb
inc
add
add
nop
jae
add
mov
and
mov
inc
cmp
push
mov
xchg
ret
jns
add
and
or
repnz
jae
test
add
add
add
mov
push
mov
xchg
ret
mov
add
add
repnz
jae
inc
sbb
and
stos
push
mov
sbb
add
sbb
add
add
outsl
add
repnz
jae
stc
xchg
pop
jns
loope
cwtl
test
fwait
cld
nop
jmp
sbb
adc
mov
add
add
push
push
mov
xchg
ret
xchg
pusha
xchg
and
add
rcrl
pop
pop
add
pop
movsb
and
xchg
lds
ficoms
add
sbb
add
add
mov
push
mov
xchg
ret
xchg
add
pop
pop
cmp
fwait
cld
nop
jmp
add
xchg
add
lea
push
mov
xchg
ret
lock
mov
repnz
jae
sub
add
adc
sub
insb
inc
jb
clc
repnz
jae
add
xor
push
mov
adcl
das
add
or
sti
enter
push
clc
repnz
jae
add
jmp
jae
adc
add
pop
filds
nop
jmp
movsb
popf
add
add
pusha
add
inc
aam
mov
adcl
add
sbb
mov
adc
repnz
jae
add
mov
mov
nop
jmp
add
sbb
repnz
popa
js
clc
repnz
jae
add
popf
add
push
loope
add
mov
lock
add
push
mov
xchg
ret
cmpsl
add
jmp
add
clc
repnz
jae
adc
test
add
cmp
repnz
jae
pusha
enter
add
repnz
jae
cwtl
scas
add
add
mov
scas
mov
clc
repnz
jae
pop
jmp
add
clc
repnz
jae
cmpsl
sub
add
xor
add
add
pop
push
mov
xchg
ret
pusha
xor
add
jmp
add
mov
dec
add
fwait
cld
nop
jmp
jmp
fcomps
mov
fwait
cld
nop
jmp
popf
test
popf
enter
int3
mov
clc
repnz
jae
add
add
add
nop
jae
add
adc
mov
clc
repnz
jae
and
sub
out
xor
fwait
cld
nop
jmp
test
add
xchg
nop
add
aaa
rcrl
clc
repnz
jae
incb
and
jg
aas
adc
and
add
incb
cmp
clc
repnz
jae
add
and
add
popa
add
adc
faddl
icebp
fwait
cld
nop
jmp
add
add
add
add
add
repnz
jae
add
add
jmp
push
icebp
ret
arpl
popa
add
cld
nop
jmp
flds
enter
pop
dec
push
clc
repnz
jae
add
add
data16
div
fwait
cld
nop
jmp
jmp
test
push
sub
xor
repz
cmp
ret
test
lds
fadds
mov
push
add
adc
inc
mov
add
fwait
cld
nop
jmp
add
add
add
push
mov
xchg
ret
loope
add
jne
clc
repnz
jae
roll
jmp
or
add
mov
push
jmp
add
and
lock
jmp
add
loop
add
shr
clc
repnz
jae
xchg
add
add
ret
sbb
addl
add
add
push
fwait
cld
nop
jmp
pop
test
add
or
jmp
xor
push
mov
xchg
ret
add
add
aaa
add
mov
clc
repnz
jae
cs
ljmp
adc
jmp
clc
repnz
jae
add
add
lock
rep
clc
repnz
jae
add
pop
sbb
mov
add
repnz
jae
add
add
mov
repnz
inc
add
add
mov
mov
repnz
jae
add
aad
mov
clc
repnz
jae
adc
lds
test
inc
push
add
add
aas
add
lahf
xchg
add
pop
xor
inc
add
clc
repnz
jae
pop
sbb
add
push
mov
fwait
cld
nop
jmp
push
add
sub
rolb
cmc
cwtl
mov
clc
repnz
jae
add
add
aaa
add
add
sub
fwait
cld
nop
jmp
jns
add
sub
jmp
jp
fwait
cld
nop
jmp
adc
adc
sbb
mov
clc
repnz
jae
add
add
add
push
fwait
cld
nop
jmp
mov
movsb
fcomps
and
repnz
jae
add
sbb
add
cmp
jb
adc
movsl
pop
add
clc
repnz
jae
popa
add
add
add
cld
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
or
popf
mov
or
add
repnz
jae
jns
lds
shlb
add
add
movsb
add
add
mov
nop
jmp
sub
jmp
add
mov
add
inc
and
repnz
jae
add
shrl
add
add
clc
repnz
jae
add
or
mov
clc
repnz
jae
push
add
add
xchg
sub
and
repnz
jae
cmpsl
stc
inc
add
sbbl
add
mov
inc
add
pop
enter
test
jmp
add
jns
repnz
add
dec
push
clc
repnz
jae
add
and
adc
repnz
jae
lock
test
add
clc
repnz
jae
add
add
add
repnz
jae
add
mov
clc
repnz
jae
add
roll
add
pop
cmp
push
mov
xchg
ret
stc
inc
lds
add
call
clc
repnz
jae
test
add
xchg
add
inc
add
add
inc
cmovbe
repnz
jae
jmp
pop
add
add
add
adc
clc
repnz
jae
add
outsb
push
clc
repnz
jae
mov
add
cwtl
nop
add
add
jae
movb
add
add
nop
jae
fldcw
add
ror
mov
clc
repnz
jae
repnz
add
and
sub
inc
add
add
xchg
in
mov
insb
fwait
cld
nop
jmp
add
flds
and
mov
push
fwait
cld
nop
jmp
add
add
xchg
add
xor
fwait
cld
nop
jmp
add
pop
add
scas
mov
add
movb
test
push
mov
xchg
ret
adc
lock
repnz
jae
fldenv
cs
add
and
add
repnz
jae
lds
aam
mov
repnz
jae
or
add
ss
call
in
sahf
or
clc
add
add
mov
add
add
data16
mov
xchg
ret
add
add
clc
repnz
jae
and
fidivs
add
enter
nop
jae
incb
aaa
xchg
xor
lcall
clc
repnz
jae
popf
add
clc
repnz
jae
add
gs
jns
jae
mov
clc
repnz
jae
add
xchg
clc
and
fwait
cld
nop
jmp
jmp
test
push
clc
repnz
jae
add
add
add
mov
jae
or
movsb
push
pop
xchg
add
add
pop
add
fwait
cld
nop
jmp
or
test
fmull
jae
mov
ficoms
and
repnz
jae
add
popa
nop
add
repnz
jae
add
add
add
loopne
jge
mov
add
add
cwtl
add
jmp
pop
add
mov
clc
repnz
jae
dec
add
push
add
testb
jmp
les
repnz
jae
sbb
add
mov
push
push
mov
xchg
ret
add
adc
adc
pop
out
add
clc
repnz
jae
xchg
add
xor
mov
nop
jae
add
scas
adc
xchg
push
clc
repnz
jae
add
sbb
lds
stc
jmp
mov
add
add
cmp
and
push
jmp
add
xchg
add
add
add
fisubrs
inc
add
pop
add
clc
repnz
jae
dec
xchg
xor
jbe
fwait
cld
nop
jmp
mov
add
cwtl
fdiv
add
mov
clc
repnz
jae
xor
adc
les
fists
repnz
jae
add
xchg
lds
add
shr
dec
adc
repnz
jae
add
mov
call
clc
repnz
jae
add
add
lock
pusha
push
mov
xchg
ret
add
add
dec
add
repnz
jae
add
add
stc
movsb
add
adc
push
mov
xchg
ret
add
cmpsl
add
adc
int
movsb
clc
repnz
jae
adc
repnz
stc
add
clc
repnz
jae
xchg
jmp
add
dec
adc
repnz
jae
fiadds
add
add
test
add
fwait
cld
nop
jmp
movsb
add
pop
je
clc
repnz
jae
or
xor
mov
cld
nop
jmp
movsb
mov
sub
add
xchg
shll
sub
add
add
xchg
adc
cmpsl
mov
repnz
jae
dec
xor
test
sub
add
cld
nop
jmp
add
mov
add
mov
xchg
ret
movb
and
push
mov
xchg
ret
xchg
cs
cmp
scas
push
clc
repnz
jae
cmpsl
add
jmp
test
jg
mov
scas
fiaddl
add
shlb
add
add
mov
clc
repnz
jae
xchg
mov
xor
fwait
cld
nop
jmp
add
fadds
add
push
add
mov
clc
repnz
jae
add
push
loope
lahf
add
push
mov
xchg
ret
adc
add
movb
test
fwait
cld
nop
jmp
add
xchg
fwait
cld
nop
jmp
xchg
pop
add
jmp
mov
adc
add
clc
repnz
jae
add
push
add
inc
add
test
lcall
adc
add
add
add
addr16
pop
fwait
cld
nop
jmp
add
and
add
repnz
jae
add
mov
add
add
nop
jae
add
flds
cmpsl
add
fcomps
pop
push
mov
xchg
ret
add
test
add
add
jae
or
fiadds
add
dec
add
clc
repnz
jae
lahf
xchg
add
add
xor
add
clc
repnz
jae
movsb
stc
adc
push
clc
repnz
jae
add
add
lcall
mov
add
sbb
enter
cmpsl
add
lahf
add
clc
repnz
jae
enter
shrl
fwait
cld
nop
jmp
mov
cmpsl
add
stc
add
fisubs
repnz
jae
add
loope
stc
jmp
add
add
nop
jae
loope
add
popa
add
rep
fwait
cld
nop
jmp
lock
add
add
add
stos
nop
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
mov
add
pop
xchg
hlt
add
mov
add
fwait
cld
nop
jmp
add
cmpsl
sbb
repnz
mov
pop
xor
push
mov
xchg
ret
add
add
add
cltd
jmp
add
jns
xchg
enter
ljmp
mov
clc
repnz
jae
add
add
sbb
nop
jmp
add
add
pop
pop
dec
add
push
clc
repnz
jae
add
adc
adc
mov
push
mov
xchg
ret
push
or
imull
jmp
and
add
add
test
cmpl
rolb
add
add
cwtl
adc
fwait
cld
nop
jmp
scas
add
mov
pusha
add
clc
repnz
jae
add
xchg
add
add
jae
add
mov
add
jae
add
add
pop
add
outsb
add
clc
repnz
jae
adc
add
mov
movzwl
clc
repnz
jae
add
add
nop
jae
add
add
add
cmp
fwait
cld
nop
jmp
mov
sbb
inc
add
addb
add
mov
xor
push
mov
xchg
ret
add
or
and
repnz
jae
jmp
gs
sbb
fisttps
nop
jae
add
cmp
dec
cmp
repnz
jae
add
xchg
and
add
clc
repnz
jae
add
add
add
add
fistl
mov
xchg
ret
push
add
sub
les
clc
repnz
jae
add
add
add
add
mov
push
push
mov
xchg
ret
sbb
add
mov
push
mov
xchg
ret
add
add
fwait
cld
nop
jmp
or
popa
enter
add
clc
repnz
jae
lock
add
add
into
popa
fwait
cld
nop
jmp
xchg
add
add
icebp
sbb
mov
xchg
ret
sbb
pusha
add
xchg
jmp
jmp
add
incb
enter
sbb
jp
add
incl
fwait
cld
nop
jmp
add
cwtl
pop
xchg
cmp
mov
xchg
ret
sub
add
rolb
rep
push
mov
xchg
ret
push
add
add
add
sbb
repnz
jae
xchg
popf
cs
movsb
push
add
repnz
push
add
nop
jae
inc
add
popf
add
jb
mov
sbb
pop
clc
repnz
jae
scas
xchg
add
add
movsb
add
add
nop
jmp
xchg
or
add
sub
clc
repnz
jae
adc
add
js
or
push
mov
xchg
ret
add
sbb
add
jne
clc
repnz
jae
add
sbb
mov
fwait
cld
nop
jmp
pop
stc
add
movsb
add
jge
clc
repnz
jae
stc
add
ljmp
add
add
fwait
cld
nop
jmp
inc
adc
cs
jmp
clc
repnz
jae
aaa
loope
mov
test
imul
nop
jae
cmpsl
or
es
clc
repnz
jae
pusha
sahf
add
clc
repnz
jae
add
add
jmp
repnz
jae
add
add
push
add
adc
add
popa
add
repnz
jae
add
daa
ret
mov
clc
repnz
jae
add
add
decb
clc
repnz
jae
xchg
add
xor
jecxz
add
repnz
jae
add
add
decb
clc
repnz
jae
add
push
arpl
imul
clc
repnz
jae
push
or
mov
mov
xchg
ret
mov
adc
and
and
add
gs
inc
add
pusha
lds
lahf
fidivl
add
clc
repnz
jae
stc
sub
leave
pop
push
mov
xchg
ret
inc
lahf
add
mov
inc
push
adc
clc
repnz
jae
mov
loope
loope
ja
add
or
jae
sbb
jns
add
arpl
jae
enter
add
cwtl
lock
add
clc
repnz
jae
cmp
add
nop
jmp
popa
add
or
add
or
xchg
lds
xchg
ret
aaa
add
mov
repnz
test
mov
mov
xchg
ret
add
push
movb
mov
std
jmp
in
sbb
cld
push
dec
pop
daa
aad
pop
call
clc
repnz
jae
add
push
mov
xchg
ret
pusha
rcrl
add
xchg
loope
add
sahf
pop
clc
repnz
jae
mov
repnz
xchg
pusha
sub
jne
clc
repnz
jae
add
add
nop
jae
add
add
xchg
add
cmp
cld
nop
jmp
and
add
mov
dec
mov
push
mov
xchg
ret
add
add
roll
enter
stc
clc
repnz
jae
mov
ljmp
repnz
jae
aaa
stc
add
xor
jmp
add
loope
aaa
mov
push
push
mov
xchg
ret
and
flds
repnz
jae
add
ljmp
pop
clc
repnz
jae
and
add
add
add
mov
nop
jmp
cwtl
sbb
test
clc
repnz
jae
flds
add
xchg
add
mov
fwait
cld
nop
jmp
mov
mov
clc
repnz
jae
loope
flds
ljmp
clc
repnz
jae
pop
dec
add
mov
nop
jmp
pusha
dec
lahf
add
add
add
xchg
clc
repnz
jae
roll
popf
xchg
mov
add
test
imul
jmp
add
add
mov
xchg
ret
add
add
xchg
xor
mov
nop
jmp
cwtl
pop
add
xchg
enter
xchg
arpl
repnz
jae
add
add
stc
add
fadds
nop
jmp
cwtl
add
add
push
mov
xchg
ret
mov
add
mov
push
mov
xchg
ret
xchg
adc
xchg
mov
add
repnz
jae
cwtl
xchg
sbb
repnz
jae
adc
repnz
xchg
mov
lahf
call
clc
repnz
jae
mov
int
pop
jae
repnz
jae
sbb
cmp
add
mov
add
add
inc
and
clc
repnz
jae
lock
cmpl
fwait
cld
nop
jmp
sbb
add
xchg
clc
mov
clc
repnz
jae
add
add
add
push
fwait
cld
nop
jmp
adc
roll
fiadds
inc
add
add
push
clc
repnz
jae
sbb
popf
flds
or
clc
repnz
jae
xchg
pop
popf
add
or
add
clc
repnz
jae
add
sub
popa
add
mov
xchg
ret
pop
lock
sub
jae
ljmp
add
cmpl
fwait
cld
nop
jmp
sub
repnz
jae
adc
test
sbbl
xorl
add
cmpsl
pop
add
cld
mov
clc
repnz
jae
xchg
cmp
out
jne
clc
repnz
jae
roll
pop
inc
push
mov
xchg
ret
cwtl
add
loope
add
mov
add
repnz
jae
add
add
movb
xchg
addb
add
push
mov
xchg
ret
cmpsl
xchg
or
repnz
jmp
add
add
add
add
dec
popa
add
jl
ret
add
repnz
jae
popf
jmp
add
and
mov
add
jae
add
mov
repnz
and
xchg
clc
repnz
jae
mov
imul
clc
repnz
jae
add
add
add
mov
push
mov
xchg
ret
add
pop
add
dec
imul
subl
decl
add
jns
mov
clc
repnz
jae
add
and
add
loopne
clc
repnz
jae
cmpsl
add
push
clc
repnz
jae
jmp
or
cmpsl
js
push
mov
xchg
ret
jmp
add
add
fcoml
mov
xchg
ret
add
add
or
insl
add
clc
repnz
jae
add
add
int3
and
clc
repnz
jae
sbb
dec
add
add
mov
xchg
ret
sub
sub
mov
scas
rolb
add
add
add
adc
push
sar
repnz
jae
repnz
xchg
add
mov
test
clc
repnz
jae
sbb
add
inc
add
nop
jae
add
or
add
out
clc
clc
repnz
jae
inc
pop
add
adc
clc
repnz
jae
mov
add
add
inc
idiv
clc
repnz
jae
add
and
mov
jmp
add
add
popf
sbb
or
xbegin
dec
add
add
add
add
cld
nop
jmp
add
test
add
add
push
clc
repnz
jae
pop
lock
add
xor
fwait
cld
nop
jmp
or
sub
add
jae
dec
add
add
sub
repnz
jae
add
add
loope
pop
sbb
nop
jae
add
add
test
inc
les
out
inc
push
mov
xchg
ret
add
push
dec
add
adc
clc
repnz
jae
inc
jmp
add
ja
clc
repnz
jae
add
and
clc
repnz
jae
add
add
add
outsb
imul
clc
repnz
jae
add
sbb
test
nop
jae
add
jmp
cmpsl
pusha
or
jae
cmp
scas
add
jmp
cmp
xor
add
clc
repnz
jae
dec
sub
nop
jae
xchg
add
out
xchg
clc
repnz
jae
and
xchg
add
and
addb
add
cmpsb
add
pop
push
clc
repnz
jae
add
add
or
add
push
add
add
out
pushl
clc
repnz
jae
add
gs
push
add
sti
add
xchg
add
popf
add
add
xchg
add
and
inc
add
add
and
add
jl
mov
add
dec
sbb
cmp
in
xchg
add
ficompl
mov
xchg
ret
add
add
stos
negl
add
add
pop
clc
repnz
jae
add
and
add
add
clc
repnz
jae
add
jns
add
test
jne
clc
repnz
jae
add
mov
jb
stos
push
clc
repnz
jae
sbb
mov
in
xchg
add
repnz
jae
add
add
arpl
mov
clc
repnz
jae
pop
add
je
push
add
clc
repnz
jae
add
xchg
popf
add
jnp
fdivrp
repnz
jae
or
add
repnz
jae
add
sbb
test
pop
inc
clc
repnz
jae
add
fcomp
popf
add
push
mov
in
rolb
xchg
ret
add
add
push
clc
repnz
jae
xchg
add
add
mov
clc
repnz
jae
popa
lock
mov
clc
repnz
jae
add
mov
mov
push
mov
xchg
ret
add
pop
cs
shl
clc
repnz
jae
xchg
mov
add
inc
sbb
add
add
sbb
add
add
jo
cld
ret
fwait
cld
nop
jmp
add
add
add
add
fwait
cld
nop
jmp
add
add
add
nop
jae
mov
add
into
add
add
in
ljmp
mov
push
mov
xchg
ret
push
add
and
xchg
das
je
fwait
cld
nop
jmp
xchg
push
add
push
mov
xchg
ret
or
add
push
inc
aas
jmp
add
sbb
sub
popa
xchg
xor
push
mov
xchg
ret
add
xchg
add
rorl
add
repnz
jae
add
add
nop
jae
add
sbb
lea
clc
repnz
jae
add
sbb
cld
nop
jmp
pop
add
add
add
mov
xchg
ret
xchg
add
jnp
clc
repnz
jae
cwtl
popf
add
add
add
add
jmp
clc
repnz
jae
add
scas
lds
std
lcall
ljmp
mov
js
inc
add
loope
incb
add
clc
repnz
jae
jmp
xchg
push
add
add
add
add
repnz
jae
and
add
add
push
add
clc
repnz
jae
adc
add
iret
mov
push
mov
xchg
ret
add
add
cwtl
push
add
mov
clc
repnz
jae
add
div
clc
repnz
jae
sbb
ljmp
les
fwait
cld
nop
jmp
add
add
add
repnz
add
push
mov
dec
test
mov
add
or
mov
pop
lock
repnz
jae
add
fdiv
add
add
call
clc
repnz
jae
inc
add
mov
sahf
mov
fwait
cld
nop
jmp
xchg
add
enter
xlat
push
mov
rolb
xchg
xor
aaa
imul
sbb
add
jns
add
stc
xchg
xchg
clc
repnz
jae
add
and
mov
push
mov
xchg
ret
fcoms
add
add
decl
fwait
cld
nop
jmp
add
repnz
or
and
mov
xor
clc
repnz
jae
and
xchg
das
movzwl
clc
repnz
jae
xchg
pop
add
add
add
repnz
jae
stc
movsb
add
xor
icebp
lea
test
clc
repnz
jae
add
aaa
stos
push
clc
repnz
jae
and
add
mov
inc
add
add
lahf
add
mov
nop
jmp
mov
loope
add
repnz
jae
add
test
add
add
fwait
cld
nop
jmp
add
popa
add
mov
clc
repnz
jae
popf
add
xchg
and
mov
xchg
ret
gs
add
push
push
clc
repnz
jae
jns
jmp
aaa
addb
mov
clc
repnz
jae
xchg
add
test
add
clc
repnz
jae
add
lds
mov
xchg
ret
and
loope
sbb
mov
xchg
ret
add
mov
repnz
jae
add
or
sbb
add
xor
clc
repnz
jae
add
adc
add
push
add
ret
clc
repnz
jae
xchg
pop
add
or
stc
test
push
jecxz
clc
repnz
jae
lds
and
push
adc
shrl
pushl
clc
repnz
jae
ljmp
mov
xor
add
fwait
cld
nop
jmp
add
adc
push
mov
xchg
ret
xchg
jns
add
inc
add
nop
jae
and
xor
pop
ficoms
fwait
cld
nop
jmp
roll
adc
add
push
std
ror
push
mov
xchg
ret
xchg
mov
mov
mov
clc
repnz
jae
xchg
add
xchg
scas
cmp
push
mov
xchg
ret
add
add
pop
mov
clc
repnz
jae
cmpsl
add
add
add
add
clc
repnz
jae
sub
or
add
fs
cld
nop
jmp
inc
add
xchg
add
add
je
clc
repnz
jae
dec
add
inc
add
add
jne
clc
repnz
jae
cmp
add
cli
clc
repnz
jae
add
lahf
inc
add
movb
nop
jae
xchg
xor
rcrl
clc
sub
fwait
cld
nop
jmp
lahf
mov
add
xchg
adc
xchg
clc
repnz
jae
add
add
clc
repnz
jae
jmp
enter
rcll
push
in
mov
clc
repnz
jae
xchg
aaa
add
insb
push
push
mov
xchg
ret
add
mov
add
aas
mov
clc
repnz
jae
add
sub
mov
clc
repnz
jae
xor
testl
fwait
cld
nop
jmp
pop
add
clc
repnz
jae
mov
add
add
add
movb
pop
clc
repnz
jae
lock
or
shll
sbb
add
clc
repnz
jae
add
add
fadds
add
test
add
mov
test
push
mov
xchg
ret
pop
movb
adc
push
jmp
add
fxch
scas
pusha
inc
add
add
xchg
enter
mov
fwait
cld
nop
jmp
add
adc
add
add
in
push
mov
xchg
ret
and
add
add
add
repnz
jae
mov
add
cld
nop
jmp
add
mov
sbb
mov
xchg
ret
xchg
pop
add
mov
cld
nop
jmp
xchg
xor
and
add
add
clc
push
mov
xchg
ret
add
push
fists
repnz
jae
add
add
dec
add
push
mov
xchg
ret
add
sbb
scas
icebp
dec
pop
clc
repnz
jae
sbb
sub
add
add
mov
xchg
ret
add
enter
xor
clc
repnz
jae
add
add
add
out
push
push
mov
xchg
ret
pop
lds
mov
dec
add
fwait
cld
nop
jmp
add
add
add
add
pop
sub
push
mov
xchg
ret
adc
add
movsb
enter
clc
repnz
jae
add
add
add
fabs
iret
mov
push
mov
xchg
ret
and
lock
add
cmpl
incl
sbb
xchg
or
mov
xchg
ret
roll
dec
lock
add
pusha
add
fwait
cld
nop
jmp
xchg
lock
sbb
jmp
test
add
aaa
add
ljmp
repnz
jae
xchg
dec
add
or
push
add
add
add
int
xor
dec
ss
clc
repnz
jae
add
out
mov
clc
repnz
jae
loope
add
dec
sub
mov
jae
cs
add
sbb
jbe
fwait
cld
nop
jmp
pop
add
pop
jmp
inc
jmp
jmp
xchg
pop
xchg
add
daa
ret
data16
imul
clc
repnz
jae
or
add
clc
repnz
jae
scas
add
add
call
add
pop
add
repnz
inc
push
mov
xchg
ret
aaa
repnz
incb
add
test
repnz
jae
add
and
push
mov
xchg
ret
add
dec
push
mov
xchg
ret
or
sbb
adc
jb
adc
xlat
add
mov
fwait
cld
nop
jmp
popa
popf
xchg
add
sbb
clc
repnz
jae
popf
sbb
and
mov
fwait
cld
nop
jmp
add
add
xchg
push
mull
repnz
jae
add
repnz
jae
add
add
sbb
add
aaa
pop
push
clc
repnz
jae
or
add
gs
popl
je
sub
repnz
jae
xor
add
dec
flds
inc
cmp
repnz
jae
add
stc
push
push
mov
xchg
ret
sbb
mov
jmp
add
add
clc
repnz
jae
xchg
mov
sub
clc
repnz
jae
add
add
add
lea
fwait
cld
nop
jmp
scas
add
add
or
repnz
jae
add
add
repnz
rep
clc
repnz
jae
shl
fstps
add
repnz
mov
clc
repnz
jae
add
sub
xor
add
clc
repnz
jae
mov
mov
in
mov
clc
repnz
jae
jns
add
add
add
add
repnz
jae
fiadds
sbb
daa
inc
rolb
pop
je
clc
repnz
jae
xor
add
movsb
add
mov
clc
repnz
jae
add
jns,pn
xchg
push
clc
repnz
jae
add
jmp
add
nop
jae
movsb
add
add
mov
cmp
repnz
jae
add
mov
clc
repnz
jae
add
lock
dec
mov
clc
repnz
jae
add
add
add
repnz
jae
cmpsl
mov
add
mov
call
clc
repnz
jae
lds
add
sbb
mov
xchg
ret
add
add
mov
clc
repnz
jae
sbb
add
mov
jmp
lea
push
mov
xchg
ret
add
add
add
mov
clc
repnz
jae
add
xchg
add
clc
repnz
jae
add
popf
add
add
nop
jae
add
movb
mov
dec
add
clc
repnz
jae
add
or
push
clc
repnz
jae
cmpsl
loope
pop
add
add
jmp
add
sbb
xor
add
sub
nop
jae
mov
adc
sub
dec
adc
repnz
jae
xchg
add
add
pop
fwait
cld
nop
jmp
sbb
flds
bound
mov
mov
dec
adc
repnz
jae
add
popa
add
lahf
mov
mov
xchg
ret
add
add
add
mov
repnz
jae
xor
add
aaa
les
jp
mov
idiv
clc
repnz
jae
add
call
clc
repnz
jae
add
add
xchg
loop
lret
dec
clc
repnz
jae
xchg
add
jno
add
clc
repnz
jae
add
popa
add
add
add
adc
add
add
movsb
add
lock
pusha
xchg
add
sbb
add
repnz
jae
add
popf
lods
push
mov
xchg
ret
bnd
sub
add
and
clc
repnz
jae
add
mov
mov
xchg
ret
repnz
inc
add
cmp
repnz
jae
add
add
mov
push
add
arpl
clc
repnz
jae
add
add
clc
repnz
jae
repnz
add
add
pop
je
clc
repnz
jae
add
add
add
clc
repnz
jae
mov
test
add
add
dec
fwait
cld
nop
jmp
ljmp
and
xlat
loopne
pop
mov
fwait
cld
nop
jmp
add
add
xchg
adc
jl
dec
or
repnz
jae
mov
sbb
or
insb
push
clc
repnz
jae
add
xchg
ljmp
add
mov
fwait
cld
nop
jmp
mov
movb
adc
sahf
mov
clc
repnz
jae
xchg
add
add
cld
nop
jmp
add
stc
jns
jmp
test
lret
clc
repnz
jae
add
add
add
lock
push
clc
repnz
jae
sub
sub
xchg
loope
stc
outsl
test
fwait
cld
nop
jmp
popf
stc
add
loope
adc
data16
jno
clc
repnz
jae
sbb
add
add
add
mov
mov
add
mov
mov
test
test
inc
add
incb
popa
sbb
rolb
xor
mov
nop
jmp
jns
incb
aaa
ljmp
clc
repnz
jae
add
add
add
dec
add
clc
repnz
jae
add
add
add
in
and
mov
add
jmp
add
add
mov
inc
add
add
call
push
mov
xchg
ret
jmp
add
inc
xor
pop
je
clc
repnz
jae
jmp
add
add
add
rep
push
mov
xchg
ret
ljmp
or
xorl
add
leave
mov
clc
repnz
jae
cmp
mov
mov
clc
repnz
jae
add
xor
add
add
add
mov
clc
repnz
jae
enter
aas
mov
clc
repnz
jae
cwtl
xchg
add
xchg
lds
dec
clc
dec
inc
clc
repnz
jae
sub
lea
clc
repnz
jae
xchg
pusha
add
sbb
push
clc
repnz
jae
add
fcom
clc
repnz
jae
popa
or
sbb
pushl
push
mov
xchg
ret
aaa
and
not
clc
repnz
jae
and
add
add
push
mov
fwait
cld
nop
jmp
cs
mov
fwait
cld
nop
jmp
add
add
cmpw
fwait
cld
nop
jmp
lock
jmp
testb
jne
clc
repnz
jae
mov
popa
add
repnz
jae
popf
mov
ljmp
xabort
nop
jae
movsb
adc
xchg
sbb
pop
mov
cmp
nop
jae
add
add
clc
repnz
jae
add
ljmp
adc
clc
repnz
jae
add
gs
add
push
mov
xchg
ret
add
add
mov
fwait
cld
nop
jmp
pop
jmp
add
jle
clc
repnz
jae
ljmp
add
mov
clc
repnz
jae
xchg
adc
data16
jmp
mov
add
sbb
add
lret
mov
fwait
cld
nop
jmp
add
jmp
mov
add
outsl
push
push
mov
xchg
ret
pop
xchg
or
add
add
push
mov
xchg
ret
add
add
adc
clc
repnz
jae
add
dec
add
add
in
push
mov
xchg
ret
and
sub
in
ret
push
mov
xchg
ret
add
add
lds
test
mov
xchg
ret
stc
inc
add
add
pop
push
mov
xchg
ret
sbb
fadds
lock
ljmp
std
decl
pop
sbb
mov
mov
add
add
repnz
jae
xchg
loopne
pop
mov
clc
repnz
jae
loope
add
mov
mov
add
add
ljmp
mov
addb
sahf
lods
aam
outsl
in
and
and
or
cli
mov
outsl
add
mov
adc
out
sti
outsb
imul
add
mov
inc
add
shl
imul
hlt
add
mov
or
mov
enter
cmp
xor
xchg
sbb
jge
jg
pushf
ficompl
add
xor
lea
lahf
sbb
add
in
cli
push
mov
pslld
rolb
fsubs
sbbl
jmp
popl
imul
mov
sub
test
mov
leave
out
pop
aad
popa
mov
push
repnz
add
pop
mov
add
jae
add
xchg
addb
pop
cmpsl
inc
add
and
add
lahf
mov
add
outsl
inc
add
add
sbb
cwtl
or
cmp
add
xchg
jb
or
fsub
je
mov
imul
xor
cmpl
add
add
xchg
rolb
and
mov
outsb
lods
test
ffreep
mov
add
pop
mov
out
add
add
jmp
push
add
pop
pop
iret
pop
jo
push
les
out
add
add
sub
nop
add
mov
cmc
fstps
rolb
cmp
mov
mov
addb
out
and
add
add
xor
add
in
subl
add
nop
add
add
add
imul
loope
sbb
add
add
add
test
add
pop
adc
mov
lcall
add
or
stc
inc
add
add
movb
add
aaa
out
iret
repz
pop
inc
add
sbb
lahf
sbb
lock
fcoml
add
add
inc
aas
and
mov
sub
add
jmp
mov
add
mov
addb
xor
jnp
add
jns
pushf
lret
and
mov
add
sbb
pop
subl
inc
add
out
addr16
outsl
sbb
mov
rolb
jmp
mov
in
add
subl
movsl
cmpsb
add
dec
clc
dec
out
jbe
push
add
std
pop
jne
add
push
add
test
xchg
mov
and
mov
mov
add
add
jl
inc
add
add
lea
cmp
pop
subl
fidivrl
push
sub
add
add
lods
movb
add
sub
testb
xor
xor
lds
ds
loop
jecxz
cmp
add
repz
xchg
push
ret
add
add
or
imul
mov
add
mov
mov
jnp
lret
lea
jno
add
sbb
inc
add
add
mov
inc
add
add
mov
add
lret
mov
push
fdivs
jge
add
push
dec
jp
ret
jae
add
js
add
mov
add
xchg
cmp
sub
add
je
in
pop
outsb
testb
fimull
cli
xor
lret
movb
xchg
dec
aas
mov
add
add
gs
add
jb
and
in
pop
mov
add
add
stc
jbe
hlt
add
bound
mov
popf
jns
adc
xor
add
add
icebp
jae
out
add
test
outsl
scas
mov
lock
mov
pop
movsb
add
dec
mov
pop
mov
xchg
pop
or
fistps
add
std
sub
add
and
mov
mov
rolb
in
scas
push
add
xor
lcall
add
mov
test
cmpsb
add
inc
add
xor
icebp
stc
repnz
insb
fildll
sahf
xchg
add
add
mov
lods
pop
cmp
sahf
and
mov
mov
sahf
xchg
nop
add
xchg
add
mov
xchg
add
and
cmpsl
adc
add
add
push
add
xor
mov
add
in
addb
add
add
cmp
add
pop
iret
ret
dec
out
lock
xchg
fistpl
add
add
add
cmpl
xchg
sub
out
mov
cmc
imul
add
call
sub
add
add
cmc
jle
int3
sub
inc
add
and
lods
and
imul
outsl
mov
jnp
sub
in
pop
fcomps
mov
mov
leave
inc
add
add
lcall
movl
add
add
xchg
add
cmp
mov
mov
adc
test
add
add
roll
pop
add
add
cltd
xchg
popa
cli
call
mov
add
js
add
arpl
adc
adc
mov
add
mov
add
mov
xor
and
dec
clc
adc
add
mov
out
push
je
mov
addb
add
shll
add
mov
leave
popa
and
dec
pop
sub
mov
pop
mov
and
cli
call
aam
inc
aam
testl
fistpll
pop
loop
and
sahf
sti
xchg
add
sbb
testl
add
pop
sbb
inc
push
add
fwait
pop
sub
add
add
in
fistpl
cmp
aam
popf
add
mov
mov
test
fwait
mov
add
fidivs
das
push
insl
inc
pop
inc
stos
cmp
ds
jecxz
sbb
mov
in
add
add
and
mov
mov
add
pop
addb
add
or
push
add
add
inc
add
cmp
sub
scas
fisttps
and
dec
ljmp
xor
imul
mov
push
out
mov
jmp
xor
or
inc
add
imul
sahf
ret
adc
icebp
xor
ljmp
mov
enter
or
add
mov
lds
cwtl
xchg
add
mov
jns
lock
lcall
ja
enter
in
cmp
add
mov
rorl
mov
int3
fs
ja
add
mov
iret
repz
add
rolb
xchg
cmp
cli
sbb
add
lds
add
jl
into
sbb
add
inc
add
mov
cmpsb
add
insl
mov
pop
arpl
add
push
add
add
add
xchg
add
add
jnp
jnp
add
rolb
xor
mov
add
mov
mov
jnp
add
fdivs
add
or
add
gs
or
ficoms
add
movsb
add
add
addb
xlat
ret
or
or
add
add
stos
dec
cmp
add
ret
mov
and
mov
je
stos
pop
subl
dec
and
dec
sbb
add
mov
push
add
push
add
push
add
sub
insb
rolb
popa
and
jnp
mov
sbb
adc
rolb
xlat
mov
loopne
add
xchg
cli
aaa
cmp
mov
xchg
add
pushf
aad
iret
and
and
add
jno
dec
dec
leave
scas
mov
add
addb
jecxz
pop
flds
dec
gs
add
add
cli
aad
add
add
fdivs
add
mov
add
cld
mov
add
scas
cmp
add
adc
mov
adc
test
add
xchg
add
pushf
sub
push
inc
add
add
mov
inc
add
cs
inc
add
and
xchg
and
sub
add
adc
pop
cwtl
pop
pop
cmp
add
xor
push
fs
cltd
ret
xchg
mov
add
jb
inc
cmp
xor
dec
in
cmc
ds
mov
addl
mov
cld
add
fisubs
scas
cmpsb
add
inc
add
mov
test
inc
inc
add
fsubl
cmp
daa
adc
in
in
add
adc
lcall
scas
pop
mov
sti
xchg
add
or
adc
repnz
or
fwait
mov
les
iret
jg
popf
data16
fcoms
add
xchg
add
xchg
add
ss
lock
mov
cmp
lock
packssdw
jae
add
add
add
add
push
add
sub
pop
int
add
add
add
add
repnz
std
fistps
adc
int3
mov
and
push
or
or
out
and
fucom
sub
cmp
add
nop
add
mov
roll
add
push
add
add
sub
add
add
add
add
rolb
mov
add
mov
add
aad
xchg
mov
add
mov
add
mov
sub
sub
roll
add
or
inc
out
fnstsw
pop
andl
fxch
push
add
mov
pop
fwait
scas
mov
mull
lea
push
add
jno
out
adc
cltd
cwtl
mov
add
fsts
add
push
fdivrs
cmc
xchg
insb
jo
inc
add
test
and
mov
aaa
cmp
add
add
add
movb
add
xchg
sbb
pop
rolb
push
mov
mov
shrl
add
mov
add
jno
adc
addb
inc
add
xchg
mov
or
repz
add
jl
add
add
inc
add
cmp
mov
add
add
mov
or
loop
les
adc
lret
fcoml
fidivrs
add
and
cmp
add
add
mov
loop
sub
add
dec
sbb
leave
rolb
add
pusha
add
add
pushf
repnz
sub
sbb
xchg
add
sti
jo
dec
lock
testl
add
add
mov
push
movsb
add
add
add
stos
or
push
add
xchg
pop
fwait
adc
cmp
int3
xchg
adc
mov
sub
out
sub
jl
add
sbb
mov
scas
cmp
in
mov
add
aaa
test
mov
dec
push
sub
add
testb
into
jge
lahf
or
mov
in
pop
dec
test
add
out
rolb
add
pop
mov
add
ret
in
and
xchg
fadds
push
add
fwait
bound
mov
fmul
jmp
movb
sub
push
add
mov
pop
fnstcw
mov
add
mov
movb
add
mov
add
scas
rcrl
add
and
cwtl
arpl
and
cli
fbld
mov
or
xchg
add
add
loope
fistps
add
push
lds
add
sbb
loop
lds
adc
cmp
adc
mov
stos
loopne
mov
fnstcw
inc
add
mov
add
icebp
dec
bound
mov
add
add
stos
or
or
jns
sbb
bound
mov
add
test
cmp
addb
add
mov
pop
sub
mov
and
mov
ljmp
fsubrs
dec
mov
add
add
add
adc
arpl
je
sub
add
mov
sahf
jl
sub
add
test
push
add
add
lret
std
mov
mov
mov
dec
add
mov
ja
int
ds
rolb
sub
add
mov
add
add
dec
ret
les
sbb
in
movsl
mov
or
and
add
push
add
jg
add
mov
jno
adc
jle
insl
inc
add
scas
pop
pop
movsb
add
mov
jge
imul
adc
mov
adc
jae
add
imul
pop
mov
loop
ret
lock
add
xor
xchg
or
test
popa
fstl
add
add
arpl
xlat
cmc
or
add
clc
scas
pop
dec
out
jl
mov
jl
mov
lods
jl
in
insb
sub
repz
add
or
test
pop
push
dec
ffreep
cli
xor
mov
add
add
shrl
aad
sbb
gs
addb
out
rolb
scas
and
movsb
add
add
inc
add
cs
sarl
xchg
rolb
jbe
fwait
sbb
and
mov
mov
sub
mov
pusha
add
or
push
mov
jecxz
push
pop
das
or
ss
loopne
dec
lcall
pushf
out
push
add
cs
or
sbb
add
push
add
pop
sub
and
mov
daa
jmp
movb
add
imul
add
add
dec
pop
out
push
adc
and
mov
jno
icebp
sbb
add
mov
enter
add
add
call
lahf
dec
dec
ja
add
dec
or
out
fisubl
or
mov
cmove
and
add
dec
lahf
lret
or
jle
jnp
out
ds
gs
data16
add
data16
xor
bound
mov
add
jne
test
sbb
fwait
test
sub
cmp
add
add
add
or
push
add
mov
orl
add
call
lds
add
sub
rolb
int3
sti
mov
add
mov
push
add
cs
into
jbe
pop
sub
add
add
add
aad
xor
add
call
push
add
cld
jg
add
sahf
xor
pop
mov
cwtl
int3
ret
dec
jl
and
ds
mov
xchg
push
imul
pop
aam
repz
dec
outsb
imul
jb
ja
push
add
lods
orl
pop
xor
jl
aaa
add
push
add
aaa
hlt
add
rolb
or
add
clc
and
ds
jmp
add
add
push
inc
add
pop
cmpsl
jmp
add
cmpsl
push
add
lock
mov
cld
les
leave
mov
jl
mov
js
push
add
add
mov
jg
mov
xor
outsb
sbb
add
fildl
orl
add
mov
ds
add
add
adc
mov
shll
cs
stos
std
jo
dec
lahf
cmp
sbb
inc
add
jl
add
add
add
jno
add
mov
inc
sub
xor
add
and
mov
mov
cs
xlat
push
push
add
leave
push
add
add
push
sub
mov
add
mov
testb
add
cltd
rcrl
aam
sbb
add
add
xchg
shll
stos
sarl
adcl
add
add
in
xlat
sbb
mov
jl
and
jp
cmp
mov
add
add
add
data16
mov
add
ret
out
test
xlat
mov
lods
or
add
dec
mov
add
add
add
mov
imul
add
and
js
dec
loop
xor
in
call
add
dec
popf
xchg
ja
add
add
mov
add
and
mov
mov
mov
xchg
addr16
xor
ja
inc
shll
mov
popa
pop
add
popl
arpl
jnp
pop
xchg
xor
mov
add
push
pusha
add
add
jmp
iret
fildl
cmc
jl
add
mov
and
sbb
and
jg
add
orl
fldt
push
jnp
stos
outsb
int3
inc
add
lods
add
mov
aas
xor
add
mov
xor
imul
add
addb
xlat
inc
add
mov
add
dec
iret
or
lea
add
inc
add
andl
add
mov
fcompl
cmp
movb
int
call
lea
js
lods
dec
addb
lret
cmp
jmp
add
popf
cmp
incl
mov
addl
popl
xor
fisttpl
rep
push
add
in
sub
sbb
test
loopne
fsts
lea
movb
cmp
add
repnz
repnz
sbb
mov
lea
mov
cmp
mov
add
das
outsl
out
push
rolb
sub
sub
xchg
adc
add
cmp
add
pusha
add
daa
outsb
or
add
cli
and
mov
push
add
jp
ljmp
add
mov
and
add
add
mov
into
jno
add
xor
cwtl
ror
clc
cs
sbb
ja
mov
mov
add
imul
loopne
adc
cmp
add
cmp
mov
add
lods
adc
daa
pop
inc
add
add
movsb
add
dec
mov
fnstcw
lea
push
test
fldcw
add
add
rolb
and
idivl
pop
imul
add
addb
add
cmp
or
add
mov
outsb
adc
mov
and
sbb
pop
in
dec
jne
int3
enter
add
add
dec
push
add
mov
in
inc
add
add
adc
aas
cs
add
add
repnz
dec
cmp
add
jl
mov
add
cmp
mov
sub
add
add
add
loop
enter
inc
mov
lea
jae
add
mov
add
inc
cmp
das
daa
sbb
add
dec
in
nop
add
add
inc
add
ja
add
ss
add
stos
mov
xchg
add
mov
pop
or
lods
sub
add
adc
add
arpl
mov
inc
add
jl
add
sbb
xchg
add
call
add
mov
shrl
adc
sub
pop
mov
jb
cs
push
add
add
pushf
sti
cmp
add
insl
fidivrs
add
mov
add
mov
and
add
and
jecxz
or
add
lea
add
cli
ja
fiaddl
add
pusha
add
xor
xchg
pandn
mov
sub
pop
xchg
hlt
add
movsl
sahf
test
addb
push
inc
add
pop
leave
leave
inc
add
add
add
xchg
jae
and
mov
insl
cmp
cmp
dec
addb
push
add
sub
add
add
sub
shll
add
inc
pop
dec
sub
add
mov
add
xchg
add
mov
pop
jmp
add
iret
dec
xchg
add
mov
ds
add
mov
cmp
cli
and
mov
lock
movsl
addb
movb
insb
popa
call
mov
or
fstpt
cmp
add
xchg
add
mov
inc
in
imul
scas
lock
stc
lahf
lret
push
add
inc
add
addb
mov
and
push
add
add
cs
mov
repz
xchg
out
addb
dec
inc
lea
sbb
jmp
jb
add
add
or
dec
sahf
push
stos
xor
add
add
movswl
dec
mov
add
aaa
cmp
add
insb
cmp
sbb
cmc
mov
rolb
dec
stc
pop
bound
mov
ret
insb
pop
mov
add
add
pop
pusha
add
add
xchg
mov
add
add
adc
add
add
mov
sbb
add
adc
inc
add
lahf
xor
fisubs
add
add
outsl
lahf
sub
add
mov
add
subl
insl
addb
add
sbb
add
cltd
inc
add
andnps
mov
lret
jl
push
or
mov
loop
out
add
add
add
add
fcompl
mov
cmp
cmpsl
je
or
ja
jg
add
hlt
add
and
add
mov
pop
mov
out
cmp
mov
xchg
mov
out
or
pop
add
xor
nop
add
insb
xchg
add
ljmp
mov
add
cmpsl
sbb
mov
int3
stc
xchg
add
add
lret
mov
add
add
add
cmp
test
add
add
nop
add
add
jmp
add
add
jae
jns
lret
test
adc
and
add
add
push
add
iret
cmp
add
or
nop
add
cmpsl
push
add
jg
add
int3
add
inc
add
mov
loop
pop
call
add
sbb
add
add
add
sub
add
push
add
mov
add
add
aaa
xor
sahf
mov
jle
add
add
mov
jle
add
add
inc
pushf
cmpsl
test
xorl
aad
xorl
sti
lds
jns
add
add
push
add
and
xchg
add
mov
popf
push
add
mov
add
mov
add
stc
inc
add
bound
mov
jnp
add
test
add
adc
jns
add
rolb
or
inc
add
out
ja
jno
fsubrl
sti
lcall
add
cmp
jg
add
mov
cmp
jp
lcall
cs
cmp
pop
fisttpl
int3
movsb
add
add
fwait
rolb
jno
addl
xchg
loop
xor
in
sub
jo
xchg
imul
adc
fbstp
icebp
icebp
pop
lods
dec
mov
je
rolb
xchg
add
bound
mov
dec
push
add
pop
test
popl
pop
sbb
mov
sub
dec
sub
push
add
cmpsb
add
dec
add
mov
add
or
inc
fcomip
pop
dec
pop
daa
movsl
lret
lods
pop
imul
iret
and
mov
push
add
xchg
jne
pop
cld
and
pop
xor
pop
nop
add
adc
ds
dec
lds
sbb
into
push
jmp
sbb
addl
mov
jp
pop
call
dec
cmp
in
ja
add
mov
xor
ljmp
xor
xor
jge
mov
lahf
pop
or
sahf
add
test
jle
and
push
add
add
lret
dec
xchg
add
pop
sub
add
unpckhps
repnz
or
add
jns
icebp
xor
fldcw
data16
add
push
jae
mov
add
cli
push
fimull
lds
inc
add
mov
add
mov
cli
mov
sub
add
xchg
in
lcall
fcompl
outsb
and
mov
cmpsl
movsb
add
add
add
pop
adc
pop
jmp
ja
sbb
cli
pusha
add
leave
jecxz
mov
adc
dec
loopne
push
outsb
xchg
add
out
or
js
fidivs
movsb
add
mov
jmp
dec
dec
icebp
imul
push
adc
rolb
push
mov
add
add
pushf
call
jmp
dec
dec
xor
pop
out
rolb
jns
in
jl
movl
lock
jb
lret
fdivrl
fisttpl
push
add
add
clc
mov
inc
imul
push
add
mov
aaa
mov
mov
cmpsb
add
pop
mov
add
xchg
jp
add
test
jle
lret
inc
cwtl
test
test
fisttpl
mov
inc
lods
mov
fdivl
add
fldl
mov
pusha
add
fdivrs
push
add
inc
add
add
add
mov
add
scas
cmp
xlat
xchg
xchg
add
fmulp
ljmp
add
xlat
inc
sbb
jecxz
add
fisubrs
add
jmp
pop
aad
add
jecxz
add
insb
jmp
add
xchg
sub
add
dec
leave
les
fcmovne
pop
push
add
mov
sub
push
loop
jge
add
sbb
add
add
pusha
add
enter
aam
pop
sbb
cmc
pop
je
inc
mov
mov
xchg
add
lds
jge
sub
sahf
cltd
clc
mov
mov
aam
sub
das
xchg
mov
mov
sarl
add
lahf
add
sbb
push
dec
inc
add
pop
popf
and
xchg
add
ljmp
movsb
add
dec
mov
xor
stc
adc
dec
push
popf
aas
or
or
out
addb
or
adc
insb
or
mov
fcoml
jmp
mov
add
add
stos
xor
je
add
mov
into
mov
pop
jge
dec
sbb
inc
add
inc
add
add
jae
idivl
or
mov
add
add
ja
cwtl
xchg
and
stc
stos
aam
mov
add
add
add
popf
clc
adc
add
addb
iret
sbb
add
es
subl
out
add
arpl
add
jl
pushf
hlt
add
add
inc
jns
pop
in
pop
lock
jne
add
or
icebp
addl
xchg
mov
jbe
jmp
sub
data16
je
test
cmc
fmull
add
add
jae
andl
cmp
xor
fmul
xor
clc
jb
cmpsb
add
movsb
add
pop
aas
xor
pop
je
cmpl
addr16
mov
dec
mov
push
jbe
daa
xchg
add
add
add
xchg
add
sbb
addb
and
mov
inc
mov
and
mov
lcall
gs
lahf
jno
add
movsl
or
mov
push
mov
pop
jle
jmp
jb
les
dec
xchg
mov
iret
xchg
add
jne
testb
or
add
les
lahf
push
add
jne
mov
add
loop
cmp
inc
add
xor
xor
movb
fiaddl
std
icebp
lock
rolb
icebp
bound
mov
lahf
inc
jae
xchg
roll
add
add
add
enter
add
mov
add
pop
iret
call
addl
sub
add
add
dec
push
add
or
sar
add
out
rcl
add
add
stos
popa
in
mov
push
add
xor
dec
loopne
xchg
mov
outsl
mov
push
add
das
mov
mov
dec
insl
fldenv
negl
add
shll
sbb
add
xlat
xchg
mov
mov
lret
xlat
cli
mov
jbe
stos
imul
cmp
xchg
mov
addb
pop
inc
add
add
imul
mov
add
addb
pop
addb
or
sub
or
stos
mov
add
add
call
add
xchg
arpl
aad
xor
inc
mov
adc
inc
test
int
rolb
cs
add
nop
add
mov
sbb
mov
insl
fs
aas
mov
cmp
jno
ljmp
add
sbb
mov
jmp
adc
je
dec
push
add
mov
xlat
mov
lea
shll
sbb
lret
add
push
lcall
mov
mov
hlt
add
mov
push
add
mov
leave
sbb
bswap
xchg
sub
add
jecxz
cmp
pop
cmc
push
add
sbb
push
lods
cmpsb
add
sub
sbb
sub
add
push
push
add
inc
add
cmp
lret
mov
test
daa
lock
add
stc
hlt
add
sbb
lds
addr16
fs
gs
jae
mov
or
imul
push
mov
sub
clc
add
add
loop
outsb
and
add
pushf
pop
cmpsl
in
out
fprem
sbb
or
lahf
stos
mov
add
cmp
nop
add
mov
xchg
add
add
add
and
mov
push
test
mov
xor
xor
arpl
pop
xchg
mov
add
add
mov
inc
add
or
add
add
add
jp
mov
add
mov
imul
gs
add
jae
or
bound
mov
adc
dec
jne
jmp
sub
cmpsb
add
movsl
dec
aad
add
adc
add
jmp
pop
inc
add
add
mov
aaa
rcll
jns
add
sbb
add
arpl
add
ret
fwait
repz
aad
jl
add
add
add
fidivs
cmp
rolb
and
push
add
arpl
add
lcall
sub
jp
and
testb
mov
fcmovbe
mov
add
mov
lods
and
dec
repz
sub
mov
addr16
add
add
lea
stos
cmp
dec
xor
inc
add
add
jle
mov
mov
ret
push
icebp
nop
add
add
add
shl
rolb
or
push
add
pop
xor
aam
push
add
jno
addb
dec
mov
add
lret
add
xor
bound
mov
inc
into
xor
pop
add
add
add
es
mov
ficoms
add
jo
rcrl
filds
add
mov
imul
pop
fstpl
add
add
cmpsb
add
add
mov
add
pop
sti
and
mov
sbb
adcl
add
add
addb
stos
pop
push
mov
add
add
jp
sbb
mov
mov
add
dec
push
add
mov
xchg
add
mov
push
adc
aas
add
mov
or
sbb
add
mov
xor
movsb
add
rolb
add
push
add
add
add
add
mov
add
lcall
nop
add
aam
xchg
popf
pop
add
push
sub
shll
fxch
std
mov
add
add
testb
lahf
loop
cmp
test
mov
jb
adc
add
ja
in
push
add
add
sub
add
out
cmpsl
ficomps
push
add
add
jbe
out
xchg
and
mov
pop
xor
ret
add
ret
cmp
cmp
scas
push
add
jno
xchg
int3
mov
adc
mov
add
pusha
add
add
mov
jecxz
mov
add
mov
add
jno
jns
cmp
add
int
mov
cld
fwait
icebp
pop
adc
shll
add
mov
jle
add
sahf
xchg
xor
sub
lahf
or
push
add
pusha
add
mov
cs
or
iret
and
or
mov
pop
pop
into
and
mov
push
mov
mov
add
add
add
cmovb
mov
or
cwtl
push
gs
add
mov
xor
pop
push
add
xchg
sbb
add
add
inc
push
add
add
xchg
or
jno
push
push
mov
xor
push
add
push
or
or
repnz
or
sbb
ja
add
push
add
add
js
out
mov
mov
jne
in
imul
add
mov
nop
add
add
dec
mov
sbb
adc
ds
cli
nop
add
subl
jno
sbb
rcll
sti
pop
sub
add
add
fnstsw
add
cmp
mov
loope,pn
add
dec
or
mov
testb
mov
add
mov
add
inc
mov
mov
mov
test
or
int
mov
push
add
cmpsb
add
add
push
xor
les
dec
push
add
sbb
iret
push
pop
push
scas
loop
mov
sbb
cmp
lahf
push
add
add
add
mov
push
rcll
hlt
add
or
aad
pop
push
mov
mov
test
test
jge
add
in
insb
std
popf
jl
add
xlat
jecxz
add
add
roll
insl
adc
jo
decb
lea
call
mov
sbbl
add
fistl
add
add
stc
loope
add
movsb
add
add
xchg
rorl
xchg
dec
jns
lcall
add
mov
iret
es
add
xchg
mov
mov
pop
test
mov
sbb
inc
add
lcall
arpl
std
and
mov
add
xchg
loopne
mov
add
mov
add
addb
repz
dec
lods
aam
out
stos
or
test
add
inc
add
mov
add
pop
jne
add
lods
das
add
mull
add
mov
fdiv
pop
pop
xchg
add
inc
push
add
pusha
add
fsubrs
mov
add
dec
or
add
xchg
stc
test
sbb
jp
add
add
int
cmp
hlt
add
xor
ficomps
mov
sahf
les
das
jge
mov
add
add
ret
sbb
push
stc
int
add
mov
mov
not
add
add
push
add
push
and
mov
add
mov
add
cld
stos
cmp
repz
inc
mov
push
add
sbb
call
lds
jns
rolb
add
iret
fnstsw
add
add
pop
jo
xor
add
mov
push
mov
mov
push
add
icebp
testb
mov
add
adc
lcall
add
aaa
into
ds
imul
add
push
pusha
add
add
inc
add
jp
loop
pop
out
pop
pusha
add
out
add
repnz
add
add
testb
imul
out
xor
mov
add
fidivs
push
sbb
add
sub
scas
mov
dec
rcrl
add
mov
add
mov
add
sbb
mov
cmp
stos
cmp
add
movsb
add
add
mov
jnp
mov
add
sti
out
or
stos
repz
sbb
mov
cmp
add
aam
lcall
daa
mov
mov
mov
add
int
lret
jp
sbb
fstpt
iret
push
pop
xor
aas
sahf
out
cltd
mov
mov
fsubl
add
cmpsl
mov
mov
add
fsubl
pop
mov
mov
mov
leave
mov
clc
xchg
add
xchg
add
add
cmp
add
repz
mov
ss
ds
add
pop
jns
add
add
xor
movsl
lcall
lods
repz
dec
mov
addb
or
inc
add
out
fldcw
cmovno
pushf
jle
sub
push
add
imull
jo
int
leave
cmp
call
cwtl
pop
push
add
mov
push
pop
push
loop
mov
addb
and
scas
and
add
add
mov
add
push
bound
mov
mov
add
cld
jecxz
sub
sub
gs
int3
mov
and
sub
fsubl
add
cmp
add
add
add
sbb
out
mov
dec
cmp
cltd
xchg
add
lds
add
inc
add
add
repz
lods
lods
mov
xchg
xchg
add
int3
or
ret
add
add
add
lret
or
add
add
mov
push
add
fwait
sub
add
insb
ljmp
pushf
or
add
cmp
jmp
popf
fisubrl
inc
int3
add
adc
cli
mov
pop
aam
sbb
sub
fstl
add
add
movsb
add
inc
push
add
add
rolb
jns
test
jmp
sub
sbb
in
cmp
dec
add
mov
add
add
in
outsb
cli
jbe
inc
cmp
push
cmpsl
ret
and
mov
sti
out
lret
push
add
inc
iret
dec
fstl
int
mov
rolb
imul
or
jmp
fldenv
add
sub
addb
outsb
or
fs
mov
and
mov
lret
popa
xor
sbb
adc
xchg
push
add
add
and
in
dec
dec
imul
add
leave
shrl
cmpsb
add
adc
outsl
or
adc
add
add
mov
mov
xor
add
rolb
leave
add
mov
add
mov
mov
push
sbb
add
fildl
fnstsw
push
add
add
add
add
xor
sub
test
add
dec
jmp
cli
sbb
pop
lods
in
inc
add
push
add
and
xchg
jbe
pushf
jp
in
popa
add
scas
imul
add
add
outsb
iret
pushl
mov
ljmp
xchg
pushf
bound
mov
in
inc
add
fldt
scas
cmp
scas
int3
jmp
sbb
add
mov
push
add
add
sbb
add
mov
add
pusha
add
cmpsb
add
add
add
xor
fwait
jmp
loop
ss
jb
in
mov
loope
mov
add
pop
xchg
add
push
add
fistpl
add
pop
movsb
add
pop
sub
add
mov
add
inc
add
in
pop
inc
and
lret
incl
daa
lea
add
enter
rcrl
jnp
pop
rorl
add
xor
daa
into
jp
leave
xchg
jge
in
das
cs
pusha
add
ljmp
js
nop
add
inc
add
inc
add
cmp
cld
fisubl
add
add
sbb
pop
jecxz
add
xchg
dec
mov
in
repz
lods
leave
adc
add
cmp
add
cs
add
dec
and
mov
mov
cmpsl
jbe
mov
mov
lods
xor
push
sub
add
mov
push
call
mov
dec
add
mov
inc
out
sbb
aas
adcl
add
clc
cmpsb
add
lods
pop
dec
test
mov
xor
push
add
add
rcrl
mov
pop
nop
add
add
mov
add
mov
and
mov
add
mov
mov
js
adc
add
insb
xlat
test
imul
lahf
fimuls
movsb
add
mov
aad
test
inc
xor
mov
xlat
mov
add
fldt
xchg
ret
bound
mov
dec
js
iret
adc
mov
mov
ja
paddw
rolb
pop
lods
loopne
mov
mov
xchg
test
mov
and
mov
jmp
jne
insb
or
out
jne
icebp
mov
aad
ds
inc
push
add
add
dec
inc
xor
stos
loop
out
add
cli
repnz
lahf
pushf
and
mov
xchg
fisttpl
notl
pop
xchg
inc
add
emms
out
xor
mov
add
aas
dec
stos
mov
sbb
add
mov
repz
add
pop
jmp
jne
or
add
push
shrl
mov
add
jle
inc
add
or
add
mov
jecxz
add
mov
pop
xchg
cmp
shrl
pushf
mov
mov
bound
mov
xchg
add
mov
xor
dec
or
pop
dec
dec
dec
xor
sbb
add
and
adc
call
pop
jg
add
add
pop
fidivrs
xchg
add
inc
add
insl
xor
roll
int3
cmc
pop
lahf
cli
sbb
inc
add
mov
add
mov
clc
mov
mov
push
add
cmp
add
mov
loop
sarl
test
add
jmp
insb
cltd
xchg
add
ss
pop
push
add
add
pop
pop
sbb
add
in
cmp
add
xchg
dec
test
dec
xor
out
js
test
sti
icebp
insl
jecxz
fst
imul
jl
add
call
mov
add
ret
repz
popf
push
movsb
add
lock
add
add
mov
mov
imul
aam
daa
or
aad
mov
daa
jbe
inc
sahf
out
jg
add
pop
adc
cmp
int3
mov
ret
push
add
jb
rdpmc
dec
and
xchg
adc
aad
sub
add
add
int
cmpsb
add
push
add
add
add
pop
fdivrl
or
bound
mov
add
add
pusha
add
testb
repnz
cmp
test
repnz
add
mov
add
or
outsb
fcmovbe
add
outsb
cmp
mov
sub
jmp
add
cmp
inc
cli
ss
or
sti
sbb
add
xor
xchg
push
add
jns
mov
stos
mov
dec
lcall
rolb
cmpsl
push
add
pop
add
mov
aad
cltd
test
add
inc
jecxz
popa
lret
popa
roll
mov
fistps
add
mov
rolb
add
bound
mov
daa
adc
aad
add
repz
xchg
add
add
add
repnz
mov
cli
and
mov
xor
sbb
add
add
sub
sbb
sub
add
loop
mov
int
pushf
repnz
add
pop
and
imul
jo
push
dec
push
add
jo
adc
test
pushf
push
addb
mov
add
push
loop
lds
add
cmp
mov
sbb
add
add
rolb
loope
lods
aad
pop
jno
or
add
xlat
into
out
popf
and
adc
addb
mov
push
add
add
repz
and
mov
mov
xor
fwait
mov
cmp
in
xchg
mov
xchg
add
pop
or
fmul
jl
pusha
add
rol
add
cmp
mov
out
rolb
add
sub
add
cmp
jno
pop
out
int
push
push
sar
arpl
add
in
cs
xor
mov
xor
lcall
test
leave
aad
lods
xor
nop
add
add
movsl
imul
mov
outsl
xor
into
mov
add
mov
mov
ja
sahf
add
mov
add
push
sub
arpl
dec
or
inc
add
add
mov
add
mov
sub
sbb
add
shll
in
lret
adc
sbbl
int
add
push
into
xchg
inc
jg
xchg
add
cmp
add
adc
add
pop
mov
add
add
std
notl
and
add
mov
push
add
adc
pop
push
scas
sbb
sub
sbb
mov
lret
outsl
or
std
pop
lret
mov
xor
lds
adc
lods
addb
push
add
sahf
clc
xchg
add
lahf
pop
lret
outsl
and
mov
in
mov
sub
add
mov
inc
add
jl
outsl
mov
popl
mov
movb
adc
xor
jle
add
mov
pusha
add
pop
sbb
pop
add
lods
loopne
pop
inc
add
iret
xchg
leave
shld
sub
aad
add
add
add
shll
jne
jae
add
in
pop
sbb
nop
add
and
mov
mov
in
push
add
lods
mov
inc
push
mov
xor
or
inc
test
and
add
add
xchg
fildll
mov
push
add
add
ja
add
rorl
out
inc
add
lea
jp
sbb
add
add
outsl
ficomps
aam
push
add
jg
add
add
mov
mov
fstp
inc
sbb
jne
insl
icebp
add
push
add
mov
jmp
mov
push
add
jo
add
dec
adc
mov
pop
fistpll
cmp
and
or
push
add
mov
out
dec
pop
mov
rolb
rolb
inc
mov
add
stos
repz
jnp
add
hlt
add
mov
and
dec
shrd
mov
add
pop
or
into
gs
ror
jg
xchg
fistl
add
add
fcomps
add
add
cmp
and
push
add
inc
add
add
jo
jae
add
filds
add
mov
in
sub
rcrl
jae
sbb
add
push
or
addr16
loop
addb
dec
fwait
lret
xor
out
jns
add
cmpl
or
rolb
in
lret
pop
mov
and
add
mov
or
in
pop
icebp
ret
jp
push
pop
dec
mov
xchg
out
clc
dec
inc
add
lods
movsb
add
imul
dec
dec
addb
movb
add
loop
insl
loope,pn
xor
pop
jg
clc
dec
hlt
add
pop
je
lods
mov
andl
jo
sbb
xchg
in
lods
testl
or
sub
rolb
insb
fcmove
sbb
mov
xchg
jle
add
aaa
push
add
daa
inc
mov
dec
or
mov
rolb
mov
je
push
loop
pop
mov
lock
fidivs
pop
iret
inc
xor
add
insl
out
leave
les
xor
popa
mov
nop
add
daa
mov
enter
andl
push
add
fcomi
add
into
mov
add
rolb
xchg
call
mov
xchg
addr16
rolb
jnp
call
mov
adc
sti
sub
jbe
cmp
fwait
jns
add
and
push
jae
movsl
out
pop
lods
into
sbb
mov
inc
add
outsb
and
pop
mov
addb
scas
jbe
lods
jg
sub
fnstenv
jno
mov
call
add
adc
mov
add
in
or
fmuls
sub
inc
add
imul
inc
scas
adc
mov
cmp
or
cmpl
add
add
in
insb
ud2
add
movsl
push
out
out
mov
mov
jns
mov
add
adc
push
add
push
add
cli
xchg
call
add
jns
mov
je
xchg
dec
mov
add
add
add
lock
push
add
sbb
testb
fstl
stos
xchg
test
mov
inc
add
testb
add
push
add
inc
aam
lods
loope
stc
add
enter
int
std
fdivs
add
add
add
add
add
add
dec
push
jns
addr16
and
mov
sbb
fstp
sbbl
inc
sbb
mov
mov
std
addr16
jecxz
scas
aam
add
xor
imul
aad
movsl
movsb
add
add
jo
push
add
mov
mov
rolb
rcll
or
pop
out
dec
jbe
test
out
sti
lods
mov
add
movb
pop
in
mov
add
add
jecxz
add
mov
add
inc
add
add
pop
test
add
add
add
bound
mov
sub
add
add
add
push
cltd
xchg
xor
and
add
push
add
in
sbb
cli
pop
push
sub
icebp
xchg
cmc
test
call
ret
mov
inc
xchg
addb
push
out
scas
push
bound
mov
sub
gs
add
sub
sti
mov
sbb
inc
add
lea
and
add
lods
jl
add
add
mov
xchg
add
cmp
inc
add
add
fmul
and
mov
add
sub
mov
add
add
cmp
movsb
add
add
dec
mov
fcomps
xchg
xchg
add
js
sub
inc
aam
push
add
cmp
and
mov
testb
aas
test
imull
add
repnz
pop
imul
int3
mov
and
mov
mov
out
mov
push
add
sbb
js
dec
imul
out
mov
mov
add
ja
add
pshufw
lret
cs
movsl
xchg
cmp
daa
inc
add
xchg
test
add
pop
fnsave
insb
scas
add
cld
in
cmpsl
sbb
sahf
inc
inc
add
fistpll
add
add
lret
add
insb
or
add
add
pop
xchg
or
push
add
and
mov
dec
add
sbb
lret
arpl
jno
add
aaa
leave
mov
add
mov
mov
icebp
pop
cmp
enter
mov
sub
add
add
sub
das
mov
test
add
mov
mov
mov
jo
out
add
rcrl
mov
add
daa
testl
repz
js
add
loopne
dec
xchg
add
fstpt
sahf
pop
cltd
in
pop
add
pop
pusha
add
add
add
jp
std
or
add
add
clc
mov
add
and
mov
inc
add
add
xchg
sub
pop
test
mov
pop
inc
adc
cmpsb
add
inc
adc
push
add
xchg
add
pop
pop
push
cmp
add
data16
add
add
sub
add
sub
pop
sub
or
popf
adc
add
cld
or
xor
sub
inc
lret
ffree
call
xor
fcomps
add
add
imul
aas
inc
test
push
add
cmp
add
imul
cmp
xchg
and
mov
add
add
or
cmp
mov
cli
cmp
mov
ret
jecxz
jp
js
push
add
add
mov
mov
jnp
out
data16
stc
or
add
adc
cmp
jo
mov
pop
push
add
xor
and
nop
add
adc
filds
data16
mov
add
mov
fdivl
add
add
lret
icebp
mov
mov
push
add
xchg
add
mov
into
xor
add
mov
addl
xor
cltd
and
test
sub
jbe
mov
cs
add
add
add
or
add
loop
and
mov
sarl
sbb
stos
leave
pop
and
jbe
rolb
and
mov
add
sbb
testb
push
cwtl
cmpsl
jg
cmp
and
mov
jae
jecxz
out
cwtl
push
add
adc
add
out
mov
pop
mov
lea
in
add
sub
ret
push
add
inc
dec
and
add
lcall
das
test
xchg
add
movb
add
jl
jb
repnz
fnstenv
inc
mov
movhps
push
add
scas
inc
add
stos
mov
add
add
xchg
add
add
push
pop
stos
lods
push
daa
mov
add
mov
cmpsb
add
add
and
mov
mov
sub
roll
mov
stos
or
aas
xchg
jge
scas
aam
sbb
lds
imul
xchg
out
addb
stc
jecxz
fistpl
add
cmp
mov
inc
add
fidivs
xchg
std
jae
add
sub
xchg
push
add
daa
dec
cltd
insl
adc
or
or
add
mov
sbb
add
add
mov
mov
in
sti
pop
add
dec
out
dec
add
jne
inc
add
leave
dec
addb
sub
mov
inc
fstl
add
cs
sub
jmp
xchg
mov
fstpt
add
cmpsl
hlt
add
mov
sbb
dec
push
add
xor
movb
aaa
cltd
sbb
dec
and
push
aam
jmp
loopne
dec
in
inc
add
add
fistps
stc
dec
jns
sahf
xor
loop
push
gs
jge
enter
popa
cmpl
sub
mov
les
pop
pop
mov
dec
push
add
and
mov
imul
imul
ja
loopne
jl
add
repnz
xlat
fimull
push
add
lods
and
call
push
movsb
add
inc
mov
outsb
push
je
cmp
add
aad
add
jmp
inc
mov
in
xchg
fdivrl
fcomi
add
rolb
lcall
add
xor
fdecstp
add
pop
inc
add
xchg
push
add
arpl
icebp
ja
std
movsl
addb
add
mov
ret
test
dec
sub
cmp
add
call
aas
and
add
cld
add
mov
lahf
mov
in
mov
cmp
addb
push
inc
incl
add
adc
dec
pusha
add
mov
ret
clc
test
out
mov
add
add
push
add
mov
add
add
add
mov
add
int
mov
or
adc
sbb
add
add
add
leave
in
xchg
add
flds
lods
cli
adc
icebp
cltd
push
and
mov
add
sbb
nop
add
bound
mov
sub
and
pop
mov
mov
sbb
add
add
daa
or
add
mov
mov
jne
dec
icebp
cmp
add
pop
pop
icebp
mov
inc
ficomps
sbb
xchg
add
jle
add
mov
mov
les
addb
hlt
add
mov
or
loope
add
movb
mov
add
jb
fistpl
out
add
add
add
fbld
mov
pop
hlt
add
loop
rolb
mov
in
inc
add
add
add
add
pushf
rolb
push
mov
add
add
add
sub
add
xor
and
outsb
enter
add
push
add
fmul
push
roll
out
adc
insl
xchg
mov
ds
add
js
jae
push
add
pop
pushf
ret
add
out
faddl
cmp
add
rolb
add
mov
aad
pop
loopne
maskmovq
negl
jp
popf
push
add
mov
mov
ss
add
jae
add
stos
jle
mov
hlt
add
xchg
addr16
jae
lahf
data16
imul
add
test
cmp
xor
add
leave
sub
pusha
add
mov
and
mov
sbb
add
data16
icebp
rolb
jne
cmp
das
lods
xor
add
and
mov
add
fisubrs
int
arpl
insl
ret
mov
mov
add
aam
push
pushl
add
test
arpl
scas
jmp
inc
add
jno
sub
movsb
add
popa
lret
imul
add
add
jo
mov
add
add
sarl
or
jae
lret
adc
leave
js
add
leave
insl
call
jle
pop
cmp
inc
nop
add
pop
sbb
mov
dec
push
data16
add
add
out
in
inc
xchg
pop
xor
pop
aad
xor
add
sbbl
dec
aad
mov
mov
dec
adc
fistpll
jge
loop
in
adcl
mov
shll
mov
lret
and
clc
mov
addb
add
add
add
add
push
add
scas
lret
pushf
mov
out
add
mov
cmpsl
jbe
xor
cli
fstl
cmp
xchg
add
inc
add
ljmp
add
daa
mov
xchg
lods
repz
add
enter
jmp
pop
aad
add
out
ds
sub
stc
lret
fdiv
sub
add
scas
gs
pop
add
push
jp
inc
add
sub
xor
pushf
sub
nop
add
add
xchg
sub
xor
add
ja
add
add
in
push
sbb
pop
gs
add
and
jae
add
inc
add
mov
add
push
cwtl
xor
mov
stc
sub
or
lds
add
cmp
sub
mov
or
add
add
add
shll
push
add
add
fdivrl
add
add
pushf
cmp
mov
jle
xchg
inc
add
adc
rolb
sbb
add
cli
pusha
add
lret
mov
roll
and
mov
jmp
add
sub
add
and
adc
ja
mov
add
jnp
push
add
rolb
outsl
xchg
pop
movsb
add
add
pop
sahf
xchg
cmpsb
add
fcmovu
nop
add
push
lret
jg
add
mov
dec
rolb
fst
decl
mov
pop
std
ljmp
dec
jno
add
push
ret
mov
add
js
dec
arpl
cmpl
xlat
mov
jbe
enter
scas
test
and
in
add
mov
inc
inc
outsb
sbb
add
mov
add
fstpt
ljmp
cmp
add
add
add
add
cltd
adc
add
mov
mov
or
jge
cmc
push
rolb
adc
lock
lods
sahf
inc
add
ret
daa
shll
mov
mov
adc
mov
add
call
ret
add
test
mov
jmp
push
scas
sarl
int
add
iret
and
lods
mov
sbb
add
sbb
add
add
aas
fcoml
push
pop
push
add
add
add
adc
daa
sbb
cwtl
pusha
add
mov
loope
cmp
pop
pop
xlat
jecxz
sbb
imul
imul
ret
scas
dec
les
fwait
sbb
push
add
add
rcll
add
xor
jp
nop
add
jne
add
pop
mov
dec
cltd
out
mov
mov
mov
dec
xor
imul
adc
xor
cmp
xlat
jae
fdivr
mov
add
mov
jbe
aaa
mov
adc
scas
pop
push
add
gs
mov
aaa
xchg
addr16
cmp
add
aam
mov
std
pushf
xchg
shll
dec
inc
add
add
jecxz
add
pop
xor
popl
jae
adc
xor
ret
lods
fs
popa
lret
dec
pop
add
inc
cs
fwait
and
mov
jne
cld
push
and
mov
mov
lcall
add
add
addb
add
xchg
add
push
cmpsl
in
lock
jp
das
mov
dec
xchg
hlt
add
add
push
fimuls
es
cmp
jecxz
and
mov
scas
in
cli
sub
scas
rolb
add
aas
jnp
popa
push
jo
inc
add
mov
add
sbb
add
inc
add
mov
out
lods
or
cltd
xchg
add
fiadds
add
add
add
jnp
add
imul
popf
enter
mov
or
dec
mov
sbb
mov
lods
inc
outsl
pop
mov
cs
add
inc
add
add
mov
test
or
add
mov
add
push
mov
cwtl
pop
pop
dec
jmp
pop
mov
and
add
pop
mov
cmp
emms
cmp
decl
clc
xlat
rorl
stos
jne
lcall
add
mov
add
add
fisubrs
icebp
xlat
in
inc
add
add
fisubrl
ljmp
add
sbb
leave
movb
scas
xchg
add
sub
mov
rcrl
xchg
rcll
leave
dec
lret
add
add
add
lahf
dec
in
add
imul
inc
cld
mov
push
cwtl
inc
add
push
add
mov
push
out
add
or
add
add
repz
std
cli
imull
mov
or
push
pop
pop
cmp
into
xchg
adc
push
cli
adc
push
jmp
mov
rolb
dec
mov
mov
inc
fs
bound
mov
jo
int
pop
call
xor
out
mov
ret
xor
ret
into
ret
xchg
sub
lret
dec
cmpsl
aad
add
mov
add
xchg
cmp
add
je
xchg
add
mov
int
jnp
fdivrs
test
add
pushl
or
add
out
mov
fisubs
mov
add
insl
jg
sbb
insb
cmp
dec
push
cmc
pop
arpl
add
ljmp
repnz
shrl
out
ljmp
sub
sub
sub
fistl
cmp
movsl
sbb
add
lods
xchg
add
add
arpl
add
test
xor
rolb
xlat
add
loopne
sub
push
add
add
lahf
fimull
jg
out
jnp
dec
bound
mov
add
loop
aas
inc
push
loope
push
add
bound
mov
mov
aad
ljmp
mov
addb
add
add
cmp
mov
lret
mov
push
clc
rolb
arpl
add
add
add
aas
cmp
cmp
int
pop
xlat
aas
xchg
pop
push
inc
rolb
push
add
shrl
dec
cs
add
add
inc
outsb
push
add
add
dec
imul
cs
mov
ficoms
fists
or
add
add
in
mov
jle
fbstp
sbb
and
mov
add
mov
pushf
movb
cld
in
push
add
mov
add
sub
add
testb
or
dec
mov
xor
adc
and
mov
mov
mov
sahf
xlat
adc
aad
add
addb
add
add
lds
push
add
add
mov
add
bound
mov
call
lods
mov
adc
stc
das
dec
xor
pop
nop
add
mov
add
loopne
dec
in
stos
push
mov
mov
dec
push
add
adc
mov
clc
ljmp
add
inc
add
dec
ret
mov
inc
add
dec
iret
call
jecxz
dec
aas
js
in
xchg
rep
pop
jae
movsb
add
jg
add
add
sbb
add
nop
add
out
adc
push
or
add
mov
add
add
add
dec
cwtl
inc
inc
add
adc
mov
cmc
pop
add
ret
xchg
mov
adc
in
aaa
call
sahf
or
add
add
out
add
cmc
push
add
jns
dec
or
inc
add
outsb
add
add
add
dec
mov
adc
add
mov
add
rcll
popa
adc
shl
adc
aaa
shll
pop
and
fwait
jp
inc
add
xchg
add
daa
rolb
jmp
popf
push
jg
xchg
push
add
data16
mov
mov
rolb
add
push
inc
pop
mov
or
xchg
arpl
test
cmp
jp
lret
aad
add
mov
mov
fmuls
mov
addb
add
movsl
cli
je
arpl
add
mov
ds
add
add
xchg
add
add
add
loope
outsl
add
mov
add
pop
arpl
mov
cmp
jle
mov
mov
insl
stos
dec
fldenv
mov
rol
mov
das
jne
add
std
js
xor
out
adc
add
addr16
add
add
add
fisubs
add
roll
stos
push
mov
xchg
jbe
dec
cmp
add
jnp
pop
pop
cld
js
fcompl
add
out
addl
out
mov
add
lock
adc
mov
enter
xor
pusha
add
mov
lret
add
cmpsb
add
sub
pcmpgtb
ret
add
inc
add
nop
add
daa
hlt
add
mov
add
adc
add
add
add
pop
fiaddl
std
fidivrs
je
add
add
addb
mov
leave
aaa
mov
push
add
push
outsl
and
fsubrs
iret
test
and
add
cmp
fildl
fisubrs
dec
xchg
aad
in
cmpsb
add
jg
adc
icebp
or
bswap
test
dec
pop
sub
and
sub
push
jne
arpl
cmp
repnz
add
xchg
add
mov
js
in
sbb
or
add
icebp
mov
int3
outsl
test
aas
add
inc
repnz
in
adc
jb
ljmp
js
imul
add
xchg
fidivs
pushf
aam
push
adc
add
adc
mov
add
movb
jns
add
push
xchg
js
ret
add
push
addb
pop
xorl
mov
fadd
add
mov
jecxz
fdiv
add
mov
push
push
add
mov
add
lahf
movsl
add
mov
les
out
cs
cmp
adc
lods
jnp
lret
add
mov
xchg
push
add
jb
jp
cli
or
add
dec
push
adc
xor
pop
adc
mov
popa
mov
add
and
and
add
mov
jne
sub
push
add
sti
push
add
add
xchg
inc
add
adc
xchg
add
adc
dec
mov
add
mov
push
add
add
mov
mov
insb
sbb
cld
cmp
add
xchg
add
mov
das
lea
dec
and
add
rolb
insb
jle
movb
add
loop
mov
push
add
clc
xor
cmpsl
lds
mov
add
cmpsl
push
add
xor
push
add
mov
test
mov
add
test
xor
jb
insb
call
add
add
hlt
add
pop
lea
add
clc
mov
call
repz
lahf
aad
lods
and
pusha
add
in
sub
add
dec
ret
jns
sahf
inc
shrl
repz
pop
xor
and
mov
add
push
add
rolb
iret
cmp
fadds
add
dec
out
sbb
cmpsl
add
adc
jne
mov
pop
shrl
out
add
cmpsb
add
add
int3
fstl
in
or
add
jnp
pop
push
pop
icebp
push
add
addb
add
add
add
lods
or
rolb
push
push
lock
jle
jecxz
in
sahf
adc
jbe
xor
into
pop
xor
cmp
lea
sub
std
test
add
add
dec
iret
cmc
sub
sub
add
add
mov
fstps
add
jl
je
inc
add
sub
add
xor
test
jle
cmp
adc
add
mov
adc
pushl
mov
mov
jns
add
dec
mov
pop
in
sub
add
xor
adc
leave
shll
add
addb
add
sbb
cmpsb
add
add
lahf
fidivs
sbb
add
jp
pop
loope
mov
loop
sub
stos
inc
cltd
inc
add
pop
mov
mov
aam
repnz
cwtl
push
js
add
add
addb
add
add
sub
add
jae
icebp
je
jecxz
add
add
negl
mov
lods
scas
ret
xor
lahf
outsb
jg
ret
pushf
cmpsb
add
pop
push
add
mov
push
add
add
lahf
test
test
cmovnp
std
sub
in
mov
loopne
sarl
addb
les
clc
inc
call
add
mov
add
push
dec
dec
bswap
add
xchg
xor
add
push
adc
std
cmp
add
je
push
add
ja
fmull
icebp
add
add
cmp
xchg
add
dec
add
add
insb
and
sub
add
ljmp
add
push
inc
add
mov
js
test
mov
cmp
or
mov
jb
rcl
add
mov
add
add
data16
mov
fidivs
add
pop
out
cld
data16
mov
ja
std
cmp
add
add
je
mov
inc
add
rolb
dec
inc
add
or
add
and
xor
loopne
push
pushf
pop
cs
idivl
or
mov
popa
sbb
add
pop
pop
aad
popf
add
and
add
testl
xor
jl
dec
add
jg
cmpsb
add
jne
add
add
and
mov
cltd
pop
xor
mov
sti
mov
adc
pop
mov
clc
mov
push
popa
adc
add
add
add
cmp
test
mov
popf
inc
imul
add
add
pusha
add
add
xchg
add
les
flds
rolb
fwait
aam
inc
dec
cmp
sbb
sub
jne
add
test
mov
enter
add
add
jg
aas
mov
ret
jae
add
lods
sub
mov
xchg
mov
mov
cmpsb
add
add
pusha
add
ret
stos
aaa
aaa
pop
jae
mov
xchg
cltd
rcrl
out
ja
xchg
add
add
dec
push
ret
lahf
push
add
ljmp
sbb
add
fwait
addl
mov
jmp
add
mov
jmp
ljmp
add
add
mov
and
mov
cmp
push
add
add
dec
or
add
xor
mov
add
ljmp
fwait
push
add
inc
add
or
sub
pop
loopne
pushf
add
mov
int3
mov
inc
add
add
add
add
mov
xor
test
repnz
hlt
add
or
dec
sub
sahf
inc
add
aas
insl
cltd
xor
nop
add
inc
les
mov
mov
add
lods
push
add
sub
add
add
jmp
rolb
rolb
movsb
add
testb
add
add
ljmp
les
mov
not
add
es
ja
jae
add
pop
dec
jnp
aaa
aad
mov
sbb
lds
outsl
imul
outsb
adc
cwtl
sub
mov
stos
loopne
cmp
sbb
add
jecxz
mov
mov
pushf
add
xor
add
mov
lock
add
add
add
add
inc
sbb
xor
add
add
add
lret
in
imul
push
int3
xchg
fidivl
and
mov
add
repz
mov
cmp
aaa
pushf
addb
addr16
mov
xlat
add
add
add
add
or
mov
mov
add
loopne
nop
add
insl
movsl
mov
add
add
sbb
ret
add
clc
stos
xor
in
adc
cli
je
add
push
or
mov
sbb
xchg
pop
sbb
imul
enter
cmp
pop
add
fsubrs
lret
add
nop
add
cs
stc
pop
xor
test
test
add
pop
das
mov
add
xor
inc
dec
test
lahf
fwait
lahf
adc
out
add
mov
push
pusha
add
mov
add
add
mov
xchg
add
pop
xor
push
add
add
rolb
aaa
andl
add
fwait
mov
jns
add
insl
xlat
shll
clc
jecxz
inc
add
push
add
add
xor
add
lea
mov
cmp
test
mov
cmp
cld
popf
or
fs
add
jb
jg
add
dec
adc
add
cltd
cltd
rcll
adc
push
add
add
gs
inc
add
pop
ret
adc
add
rolb
out
cwtl
mov
rsqrtps
jmp
mov
xor
icebp
mov
add
data16
bound
mov
or
and
sub
jb
ror
dec
pop
fnstenv
mov
or
bound
mov
and
test
or
mov
rorl
pop
ljmp
xchg
dec
adc
inc
cmpsl
mov
mov
inc
add
rolb
insl
push
fistpl
pop
cmc
or
add
mov
in
lods
cmp
xchg
pushf
pop
mov
push
movsl
loopne
iret
outsb
bound
mov
in
ret
jns
adc
mov
mov
imul
hlt
add
add
insl
sub
sub
iret
data16
pop
data16
test
inc
lods
in
aaa
jo
out
fidivl
sbb
add
add
fsubs
mov
add
mov
int
into
hlt
add
add
in
test
add
push
cmc
cmp
push
sub
add
cmpsb
add
add
add
addb
cld
pop
incl
add
push
mov
sbb
add
add
push
xchg
xor
mov
mov
add
jmp
add
pop
mov
in
and
mov
pop
dec
fiadds
data16
push
add
neg
sub
xor
mov
mov
sub
cmp
sub
cmp
add
fsubrp
pop
xor
out
mov
add
add
push
test
xchg
add
add
add
or
movb
xchg
add
ljmp
add
pop
fcmovnu
movsl
mov
mov
ret
dec
push
loope
lea
xchg
xchg
push
mov
push
fisubrs
add
out
xchg
add
lret
rolb
rorl
add
add
in
sbb
test
arpl
mov
add
dec
cs
xchg
sub
mov
add
add
hlt
add
cmp
mov
add
add
ret
add
fucomip
mov
sbb
out
mov
mov
enter
dec
cmpsb
add
aaa
cmp
add
adc
cli
inc
add
jg
mov
adc
ljmp
mov
mov
or
add
or
add
add
push
jmp
add
add
push
add
mov
mov
pop
icebp
push
sbb
scas
ds
leave
lea
jb
mov
mov
test
xor
popf
and
add
sub
jp
std
cmc
cmp
rolb
cli
jg
sbb
mov
pop
pop
xor
add
add
mov
or
ret
mov
add
jnp
out
iret
push
add
pop
ja
icebp
movsb
add
ret
mov
add
call
xchg
add
aam
lcall
inc
add
mov
pushf
jne
jbe
in
arpl
add
add
add
push
add
mov
movsl
jb
sbb
data16
add
aas
addb
add
add
sbb
add
rolb
xchg
rolb
js
cmc
clc
jno
add
flds
das
in
inc
out
dec
jmp
or
add
lods
or
call
mov
cltd
nop
add
adc
rcr
inc
arpl
add
xor
je
hlt
add
add
rolb
sub
lret
pop
in
icebp
dec
cwtl
push
fiaddl
insb
icebp
nop
add
jns
sub
inc
add
mov
add
arpl
les
pop
dec
fucomi
repz
adc
mov
jno
cmp
jl
add
add
hlt
add
cmp
sti
add
add
add
add
inc
int
testl
mov
testb
mov
cmpsb
add
lcall
movsb
add
jl
add
mov
aad
xchg
push
jge
add
jae
addr16
outsl
dec
rol
rolb
std
or
add
add
rolb
add
mov
add
xor
add
scas
mov
mov
cmpsb
add
sbb
xchg
cmp
and
mov
cmpsl
adc
add
sbb
add
push
add
xchg
jg
add
add
pop
xor
scas
hlt
add
add
pushf
into
pop
add
cmp
add
pusha
add
in
jb
inc
add
add
cld
jge
mov
cmp
or
loopne
popf
jmp
leave
xchg
add
sbb
add
push
add
movb
add
iret
xor
sahf
adc
mov
stos
xor
jg
add
dec
cmpsl
inc
add
jge
fdivrp
jns
lds
lock
lods
enter
dec
pop
movsl
push
fstl
lea
pushf
pusha
add
add
add
mov
add
dec
filds
add
test
call
add
add
push
add
add
js
xchg
inc
add
popa
in
xor
lcall
sub
xor
rolb
out
dec
in
mov
xchg
add
lods
dec
mov
mov
aad
mov
xchg
clc
mov
ret
mov
mov
add
orl
lret
loopne
arpl
add
rolb
fwait
and
shrl
and
sbb
mov
xor
add
mov
pusha
add
and
test
cltd
cmpsl
and
mov
xor
adc
mov
lahf
jo
pop
lock
xor
in
int3
or
imul
stos
xor
movb
out
rolb
imul
cmp
jb
mov
cmp
add
ss
add
add
mov
iret
rcrl
fsubrl
adc
popf
mov
test
loope
clc
aas
sbb
aas
rolb
sub
fsubl
mov
in
js
aas
fnsave
add
add
add
add
repz
sbb
add
addr16
pusha
add
sbb
jecxz
cs
xor
add
mov
pop
add
sbb
in
add
arpl
add
sbb
call
sbb
mov
jne
mov
loope
add
sbb
mov
dec
add
sbb
xchg
mov
add
test
dec
loopne
cmp
imul
sub
jecxz
add
add
and
add
rcll
ds
and
push
repnz
movsl
adc
loope
data16
cwtl
pushf
out
rolb
out
cltd
pop
repz
dec
cmp
pop
into
sub
cmp
add
push
mov
xor
mov
add
add
add
movl
cmp
mov
ss
xor
rolb
lret
add
pop
xor
sub
add
pop
push
add
adc
cmp
add
add
cmp
jae
cli
fcomip
add
fidivl
add
inc
add
add
fwait
sti
sti
mov
mov
loopne
dec
push
stos
in
add
add
xchg
add
lahf
jmp
addb
test
jne
add
mov
mov
imul
mov
iret
cwtl
daa
jge
and
sbb
add
repnz
add
push
and
xor
lods
daa
addb
jmp
loope
loopne
push
jl
rolb
jp
add
or
add
dec
into
sub
and
rcll
movsb
add
call
or
into
or
adc
add
mov
mov
xchg
sub
dec
addl
push
and
mov
nop
add
int
add
aad
aad
lss
xor
ljmp
mov
xchg
add
push
outsb
rorl
loopne
lods
dec
hlt
add
add
in
cli
test
jno
add
add
add
cltd
repnz
add
lods
jle
fdivrs
dec
out
testb
mov
and
fldt
xchg
add
add
fnstcw
iret
sbb
mov
mov
add
lret
add
add
addb
jne
cli
xchg
aad
add
inc
out
add
movsl
xor
jne
pop
adc
aas
ljmp
leave
mov
adcl
stos
scas
les
mov
add
pop
fcomip
add
popf
mov
imul
adc
adc
in
xor
sahf
js
imul
out
mov
imul
out
mov
mov
push
mov
dec
sbb
in
pop
sahf
mov
add
lcall
or
add
pusha
add
nop
add
std
invd
fistpl
ret
add
add
sbb
push
add
add
mov
cs
jns
cmp
add
add
push
add
loop
lea
and
add
add
stos
cmpsl
xchg
add
sbb
add
data16
add
sub
addb
shll
add
clc
cmp
fisubrs
push
add
add
and
mov
add
jns
mov
rolb
cmp
les
mov
imul
add
shr
or
add
xchg
sbb
push
stos
lret
add
add
adc
xor
rolb
add
or
jo
lds
add
lods
ss
testl
hlt
add
fisubrl
add
mov
mov
sub
add
movb
orl
push
out
mov
add
add
cmp
cli
mov
orl
lods
ficoms
mov
add
xor
add
jmp
dec
sbb
add
add
push
mov
push
add
loope
jns
dec
movsb
add
arpl
jnp
xor
mov
inc
cmp
cmpsl
fmuls
xorl
stos
leave
mov
add
mov
add
add
sbb
js
mov
sarl
dec
xchg
push
les
adc
cli
dec
xor
and
mov
popf
jno
sub
mov
dec
outsl
xor
mov
xor
and
add
gs
xor
dec
testl
movsb
add
add
xchg
jbe
pop
mov
out
stos
shr
add
rolb
dec
pop
mov
test
iret
ds
pop
and
mov
data16
mov
push
rolb
mov
daa
stc
jle
jge
mov
int
add
add
ret
push
xor
mov
inc
jnp
out
dec
jl
add
xchg
add
insb
xor
push
add
ret
mov
cmp
add
outsl
sub
jb
pop
add
addb
add
mov
add
pop
mov
daa
stos
clc
add
add
push
imul
ret
lret
jp
inc
add
xchg
add
xor
sarl
call
test
popf
dec
mov
movsb
add
cmpsb
add
cltd
mov
into
insl
sbb
add
das
ret
movsl
jbe
mov
add
sahf
jns
dec
addb
sub
push
jle
lea
add
add
arpl
pop
mov
loopne
lret
fbld
dec
jmp
add
cwtl
pop
sahf
xchg
add
cmp
xor
icebp
lods
pushf
xor
add
rolb
add
add
add
mov
je
addl
jb
inc
movsb
add
sub
in
outsb
popa
mov
inc
add
jno
dec
leave
outsl
dec
dec
and
hlt
add
dec
fsubrs
loop
sub
inc
add
dec
data16
add
int3
ret
rolb
or
dec
add
sbb
movsb
add
shl
add
push
add
add
add
add
out
aad
mov
dec
push
push
xchg
cmp
adc
mov
push
add
lret
mov
add
inc
adc
loope
cmp
dec
aaa
xchg
mov
add
dec
sub
add
je
sub
mov
ret
fcomip
jbe
xchg
stos
push
add
imul
aaa
jp
add
and
mov
add
cmp
add
mov
insl
cmc
adc
imul
add
sti
mov
les
mov
rol
add
int3
push
add
add
mov
xchg
pushf
pop
jno
sbb
addb
repnz
std
adc
add
add
dec
mov
call
enter
mov
stos
icebp
imul
cmp
fisubrl
jbe
fdivrs
insl
push
cli
xor
in
gs
loope
and
push
mov
cpuid
add
add
xor
push
add
testb
mov
sub
xchg
add
data16
arpl
add
add
sub
add
push
jmp
stos
popf
aas
push
jns
jg
and
leave
scas
add
inc
add
cmpl
add
add
add
ljmp
fcompl
les
js
push
add
add
mov
add
rolb
mov
dec
inc
mov
xchg
xchg
aas
rolb
fisubrs
adc
sub
rolb
out
push
adc
dec
mov
push
fwait
push
std
xor
cs
rolb
icebp
xor
mov
ja
push
add
jp
adc
inc
sti
fwait
aas
xlat
pop
add
pop
push
add
xchg
test
pop
aaa
mov
add
add
lds
and
mov
xchg
or
add
inc
add
dec
mov
add
add
das
xchg
add
dec
pusha
add
sti
jle
add
and
lcall
fs
add
push
add
and
sub
fidivrl
sub
mov
sarl
mov
mov
arpl
enter
js
xlat
mov
ljmp
notl
pop
or
into
inc
cmpsl
addb
pop
punpcklbw
mov
xor
dec
clc
push
sub
rcl
add
add
rcrl
add
mov
push
add
add
add
add
add
cmpsb
add
adc
lock
xchg
add
add
add
add
add
pop
inc
add
add
outsb
xor
insb
inc
add
add
add
shrl
sub
add
std
push
add
add
orl
add
push
add
add
cmp
push
sahf
push
add
gs
in
mov
mov
in
lea
out
out
mov
imull
ret
inc
xchg
les
mov
inc
add
add
xchg
mov
and
xchg
add
lods
mov
inc
add
mov
lret
je
aam
xchg
add
lahf
push
sbb
hlt
add
jmp
addb
mov
add
sbb
sahf
stos
pop
fwait
mov
add
push
add
add
add
mov
add
adc
fdivr
inc
push
add
add
add
mov
jp
add
out
fildll
fs
addb
add
mov
add
fildll
push
add
rolb
mov
data16
xchg
sub
mov
xchg
cltd
test
jae
lods
roll
add
mov
or
dec
incb
mov
add
add
rol
jl
arpl
movsb
add
mov
test
loop
or
lcall
add
out
pop
xor
add
inc
add
jecxz
int3
jbe
pop
mov
add
dec
leave
mov
sub
pop
mov
les
cs
addb
add
push
mov
fbstp
hlt
add
xor
cmp
ljmp
add
popf
ror
adc
xor
mov
add
cmp
add
pop
add
mov
in
rolb
sub
add
nop
add
add
mov
add
mov
cmc
je
lock
add
adc
push
icebp
addb
int3
cmpl
stc
scas
stos
jbe
stc
pop
dec
push
add
pop
and
mov
cmp
jg
pop
pushf
pop
sahf
and
mov
add
test
hlt
add
out
jb
xchg
add
mul
add
data16
add
leave
scas
mov
adc
mov
insl
xchg
add
add
add
add
clc
xor
mov
add
mov
fcomps
inc
add
gs
popa
jl
cmpsl
hlt
add
add
sub
add
xchg
aam
pop
jp
add
data16
stos
fistpll
push
add
add
jge
int3
or
add
lods
xor
sbb
add
scas
mov
jecxz
inc
add
sbb
add
cmpl
pop
xchg
in
ret
adc
sbb
add
call
pop
scas
inc
push
add
sbb
add
xlat
add
add
or
je
pop
stc
add
add
sub
add
add
add
and
or
jb
movsb
add
insl
fwait
daa
and
lock
in
dec
cltd
popl
cmp
add
outsb
pushf
mov
std
mov
or
dec
dec
fsub
add
push
add
jno
jbe
lds
adc
inc
ret
add
fmull
add
add
mov
dec
idivl
and
add
lock
clc
mov
mov
loop
inc
add
add
outsb
popa
orl
sbb
sbbl
adc
ds
add
xlat
call
xor
add
scas
cmpsl
ret
mov
push
dec
into
daa
rolb
arpl
int
add
nop
add
push
rolb
xor
loopne
jno
arpl
insb
std
imul
daa
js
inc
sbb
add
add
add
push
push
pop
inc
add
dec
mov
mov
add
add
add
and
aad
jae
ret
jno
in
cli
sbb
ja
add
add
lret
jecxz
jne
add
mov
inc
add
add
add
popa
out
int
lock
mov
mov
add
clc
orl
bound
mov
cli
sbb
sbb
in
ds
add
mov
out
icebp
aas
aas
pop
adc
and
lcall
sub
ffreep
add
and
add
sbb
idiv
divl
add
inc
mov
add
dec
jnp,pt
and
insl
cmp
cld
jmp
jg
ja
jne
clc
in
and
dec
iret
cmp
cmp
xchg
add
popa
inc
push
add
add
into
pop
pop
add
add
adc
add
mov
imul
mov
pop
mov
cmp
sub
mov
js
add
add
xchg
add
rolb
cmp
dec
pop
ds
add
push
add
pop
aas
or
add
mov
mov
addb
aaa
icebp
add
sub
add
nop
add
add
rolb
shll
mov
or
jae
rolb
add
cmc
mov
add
into
jae
insl
arpl
add
dec
icebp
sub
mov
add
arpl
mov
mov
adc
inc
les
mov
std
lahf
and
add
add
popa
dec
insl
out
jmp
sub
push
add
nop
add
add
outsb
bound
mov
cmpsl
rorl
add
mov
jo
and
dec
and
inc
mov
and
mov
and
add
pushf
mull
sub
add
jno
add
add
mov
add
gs
das
fsts
adc
test
xor
add
jg
add
xor
test
xchg
cmp
xchg
add
mov
xchg
fcmovnu
mov
sahf
aaa
dec
xchg
add
push
add
in
testb
add
jbe
dec
out
xchg
adc
adc
push
mov
pop
test
xchg
pop
mov
jne
jp
xchg
jns
movsb
add
addb
push
add
mov
cld
xor
js
out
adc
pop
imul
xor
lea
in
popf
stos
pop
xchg
aad
push
add
push
add
movsl
movsl
sbb
add
pop
jmp
inc
arpl
mov
rolb
cmp
sbb
mov
rolb
mov
pushl
in
jae
sub
lods
add
lret
jnp
and
add
add
les
pop
dec
faddl
sahf
int
add
add
mov
push
les
adc
cmp
push
push
in
daa
pop
mov
dec
in
inc
mov
inc
xlat
mov
sub
add
fadds
add
shll
add
add
ret
cwtl
in
add
frstor
add
push
add
aaa
mov
lret
add
pop
push
mov
jno
pop
test
add
jge
add
pop
sbb
call
push
add
add
mov
jp
xchg
or
jge
mov
pop
sub
lock
jp
add
jae
fists
test
add
adc
push
movsl
or
cmpl
sbb
add
insb
sbb
loopne
jns
cmp
sub
push
int
dec
inc
test
add
adc
push
in
lcall
pop
cmp
sbb
cmp
sbb
add
cmc
lret
cltd
mov
sub
fs
mov
cmpsl
icebp
pop
test
pop
add
mov
adc
arpl
xchg
cli
inc
add
adc
add
add
add
add
lods
xchg
add
dec
add
jge
push
outsb
or
mov
add
add
lcall
dec
dec
xor
movb
jbe
sub
add
add
bound
mov
push
add
xchg
add
add
add
sub
add
pop
mov
mov
jbe
in
fiaddl
mov
or
xor
sbb
add
dec
out
xor
adc
popa
push
add
dec
les
test
jo
pop
popf
mov
imul
add
push
cmp
or
pop
push
dec
push
add
incl
add
mov
push
add
add
add
pop
jns
sbb
mov
mov
ret
sahf
jge
cmpsb
add
add
inc
xor
fiaddl
push
mov
lds
mov
add
push
add
add
push
add
stc
dec
arpl
les
loope
sub
jns
dec
nop
add
cmp
push
add
insl
xchg
jns
add
data16
add
lods
test
stos
fsubrl
xlat
test
adc
pop
jge
mov
jecxz
add
adc
dec
ja
add
jb
aam
lret
bound
mov
add
add
mov
push
add
cmp
add
adc
jns
add
sbb
scas
data16
addb
mov
rcll
icebp
in
mov
xchg
add
jae
cmp
mov
rolb
pop
inc
lahf
test
add
sub
add
mov
add
addr16
into
mov
mov
jp
jbe
mov
add
xor
or
mov
push
add
lret
ljmp
xchg
or
add
xor
jp
add
add
add
xchg
pop
pop
hlt
add
add
mov
cmpsl
jl
call
add
lods
mov
movl
pop
mov
inc
iret
adc
mov
scas
test
jae
mov
add
add
mov
push
add
mov
jno
jne
mov
lods
lds
sub
push
add
pop
or
out
mov
mov
mov
pop
jb
std
in
daa
push
sub
add
xchg
add
add
add
sbb
mov
add
addb
outsl
testb
dec
cmp
dec
outsl
leave
xor
arpl
add
add
add
daa
and
mov
mov
mov
lods
imul
jmp
push
add
cli
lods
sti
dec
and
iret
sbb
lds
scas
aas
pop
pop
mov
mov
add
scas
cli
or
add
out
jb
scas
xchg
add
rolb
mov
push
sti
jge
add
add
mov
loopne
lock
add
mov
fcompl
or
dec
cltd
pop
and
mov
adc
push
bound
mov
lcall
add
test
adc
sub
enter
into
xchg
daa
jge
push
add
sti
inc
fisttpll
and
dec
mov
add
xchg
mov
sbb
fsubrs
add
add
test
add
mov
in
call
rolb
xchg
or
pop
je
and
mov
movsb
add
push
insl
jb
jae
add
push
into
lea
sub
add
popf
adc
movsl
stc
pop
mov
imul
xchg
fwait
inc
icebp
inc
add
adc
outsl
adc
jbe
dec
out
test
add
sub
add
fnstcw
cmc
mov
stos
jno
pop
push
push
add
add
push
add
lea
add
xchg
and
mov
jae
add
or
adc
stos
nop
add
add
add
dec
xor
add
lcall
inc
add
mov
add
shll
jns
pop
mov
mov
add
lcall
add
mov
clc
pop
fmull
out
xchg
cwtl
pop
add
mov
push
add
inc
add
aad
pop
in
adc
xor
add
ret
repz
push
int3
dec
pop
xor
add
dec
and
in
mov
scas
sub
jecxz
add
dec
sbbl
xchg
jne
push
add
add
push
sahf
ja
or
add
les
inc
add
mov
jne
jmp
inc
add
out
scas
arpl
sbb
cmp
xchg
add
add
jb
adc
xchg
mov
and
add
and
jo
call
xchg
add
add
sub
cltd
xlat
stc
or
push
ffreep
mov
push
add
add
sbb
add
add
add
jae
imul
mov
cmp
icebp
jns
testb
add
add
xchg
add
mov
testb
add
pop
and
add
addb
add
std
stc
icebp
pop
jne
add
add
add
adc
push
push
add
pushl
int3
daa
mov
xor
movsb
add
cld
lock
in
xor
out
mov
add
frstor
cmp
in
push
aaa
int
shll
in
insl
loopne
stos
arpl
adc
inc
jb
scas
inc
sbb
add
sti
iret
or
ja
jmp
jp
add
add
ffreep
add
add
add
fistpll
int3
jb
and
ds
pop
cmpsl
and
mov
lret
add
ret
mov
in
cmp
cmp
and
repnz
add
xchg
add
inc
add
out
dec
mov
test
pop
movsl
dec
pop
into
sti
loop
mov
add
jg
mov
mov
imul
add
add
mov
and
push
mov
dec
fisttpl
daa
rolb
ja
out
pop
mov
add
icebp
xor
cmp
in
pop
sbb
add
lahf
js
inc
or
add
fildll
in
or
add
ja
mov
jbe
pop
adc
add
and
inc
aam
push
dec
add
add
add
clc
insb
insl
and
mov
add
xchg
cwtl
mov
xor
cmp
mov
loop
xchg
mov
add
ss
pop
adc
sti
dec
push
cmpsl
and
js
pop
mov
test
inc
add
inc
push
push
sub
or
add
imul
mov
push
add
xchg
add
repz
mov
add
mov
cli
insb
dec
pop
mov
push
in
repnz
adc
out
cli
mov
push
testb
mov
mov
cmp
sub
mov
adc
imul
aaa
cmp
ja
add
inc
lahf
jns
inc
cwtl
mov
mov
jge
sbb
loop
ljmp
test
stos
test
dec
inc
dec
in
stos
cmovs
imul
imul
add
fsubrl
mov
mov
mov
xor
lock
cmp
stos
insl
scas
ljmp
add
dec
std
add
out
sahf
mov
out
out
cmc
test
cmp
daa
clc
mov
jnp
int
data16
jb
mov
push
loope
lods
sub
data16
add
mov
add
pop
add
mov
out
dec
popf
or
xor
xor
add
mov
imul
lock
add
or
repz
jo
stos
jo
push
inc
add
and
mov
rolb
mov
test
add
add
add
mov
inc
shll
pop
xor
add
data16
mov
xchg
dec
pop
data16
add
add
add
xor
sarl
push
add
mov
or
call
xchg
inc
add
xor
stc
cwtl
sbb
test
add
add
imul
test
inc
xchg
add
fiadds
add
cmp
add
roll
lea
add
add
rcrl
add
mov
add
ret
ljmp
add
mov
outsl
mov
std
data16
loop
inc
add
into
testb
insl
std
sar
addb
rorl
mov
add
add
adc
sub
and
or
inc
cmp
lahf
cmpsb
add
pop
sbb
add
xchg
add
mov
xchg
add
mov
std
out
push
iret
mov
push
inc
add
adc
pusha
add
test
in
mov
add
push
add
mov
jmp
or
or
cld
pop
push
add
cmp
lcall
dec
ds
sbb
jp
jno
repz
add
fstps
add
add
adc
rolb
imul
fwait
jmp
add
add
cmc
mov
sldt
mov
cmovns
add
lock
jle
add
xchg
lret
aaa
pop
rep
inc
add
jb,pt
jmp
mov
sub
add
add
add
mov
add
cmp
pop
loope
add
jl
icebp
cs
push
jmp
add
mov
lahf
push
xor
loopne
sbb
xchg
cmp
xchg
popf
inc
add
or
out
push
add
pop
xor
sub
add
add
gs
int
xchg
bound
mov
jno
popf
push
add
orl
or
xor
mov
adc
iret
leave
mov
mov
jg
dec
or
mov
xchg
add
mov
add
movb
mov
add
add
inc
add
jp
pop
lods
pop
pop
push
add
add
test
add
cmp
in
sbb
testb
pop
bound
mov
dec
fsubl
xor
nop
add
inc
js
jp
xchg
add
jae
pushf
daa
lds
pushf
addl
jbe
loope
xlat
xchg
loope
popf
cmp
mov
ja
ja
push
add
enter
mov
rolb
or
repnz
adc
mov
add
mov
dec
jns
add
inc
cmp
push
add
add
out
fldcw
repnz
add
add
push
xchg
add
leave
sub
add
std
mov
add
in
pop
cltd
pop
mov
add
add
add
xor
in
add
add
add
fst
jns
imull
add
or
add
loop
mov
scas
mov
add
inc
lret
mov
rolb
mov
mov
stos
xor
add
mov
mov
clc
mov
jl
add
fdivrl
mov
inc
add
add
je
cmp
mov
mov
push
add
leave
adc
inc
add
push
add
add
add
and
add
add
xchg
add
push
mov
sub
add
jle
add
cmp
mov
mov
adc
ja
mov
jmp
in
aam
or
add
push
add
add
mov
je
adc
lahf
sub
add
add
in
imul
mov
shl
add
inc
rolb
add
movsl
int
add
jmp
stc
or
pop
add
push
add
add
add
sbb
add
cmp
lods
lods
psubsw
dec
lcall
inc
dec
sti
mov
xor
push
leave
dec
pop
push
fdivr
rcl
add
je
cli
sub
loope
add
add
out
cmc
add
jmp
add
loopne
fisttpll
add
jnp
jno
mov
mov
add
add
imul
add
add
push
add
mov
add
mov
int3
mov
into
lea
add
testb
js
call
push
add
mov
repz
mov
add
lods
scas
fdiv
call
rol
add
jbe
push
aad
push
add
adc
mov
add
add
jle
das
filds
lods
cmpsb
add
mov
lret
or
js
dec
xchg
add
gs
push
sbb
jp
fildll
xchg
outsb
sub
add
xchg
cld
pop
jmp
mov
adc
xor
jo
push
add
add
test
ss
std
insb
xor
data16
add
jmp
jb
movb
lahf
cmp
add
add
mov
cmp
pushl
imul
bound
mov
add
out
fdivs
jno
add
cmp
mov
xor
cmc
cmp
push
pop
xchg
add
addb
add
cmc
push
repnz
sbb
stc
xchg
add
mov
jb
out
rolb
or
dec
cmpsb
add
loopne
add
or
add
add
popa
or
jns
mov
cld
out
aad
enter
cmpsl
inc
push
add
pop
stos
jb
mov
add
add
add
inc
test
push
add
aaa
data16
add
mov
ret
dec
add
es
add
in
popf
je
leave
jae
add
and
mov
push
test
add
add
mov
repz
pop
mov
and
xchg
add
aad
aad
int3
inc
cmp
or
fisttps
pop
pusha
add
fcmovb
add
xchg
scas
xchg
add
push
add
insl
inc
push
add
add
gs
cmp
pop
lea
fldcw
daa
mov
add
rolb
add
aaa
call
insb
mov
add
xchg
add
add
add
add
add
jl
iret
or
add
cld
addb
mov
cmp
cmp
loop
sub
add
imul
add
add
add
addr16
add
clc
or
xchg
loop
test
inc
test
fcoms
add
dec
stos
int
add
xchg
add
mov
pop
sub
add
das
cli
xor
fists
add
add
repnz
mov
push
es
repnz
add
sbb
add
push
add
mov
sbb
lea
add
add
add
or
adc
xchg
add
outsb
mov
add
dec
mov
add
test
pop
imul
in
and
ljmp
loop
jmp
pop
out
shl
add
das
jmp
popa
sbb
add
ja
sub
mov
add
nop
add
mov
dec
inc
add
sahf
adc
sub
add
add
mov
mov
in
push
add
arpl
fisttpll
adc
pushf
push
add
and
mov
mov
add
dec
sub
add
xlat
dec
add
fisubl
mov
add
and
mov
aaa
and
mov
mov
bound
mov
mov
mov
add
and
add
add
add
das
repnz
cmc
pop
testb
dec
pop
mov
cmc
into
add
sub
xchg
add
out
push
add
stos
rorl
lret
add
clc
jg
add
xchg
jno
mov
lds
push
add
out
mov
out
jno
lea
cmc
pop
rolb
das
lea
xchg
int
xor
mov
adc
push
sbb
testb
sub
add
mov
stos
dec
repz
fdivs
movsb
add
add
jecxz
add
add
push
insl
iret
mov
and
repz
add
pop
cwtl
sbb
inc
add
lret
rolb
js
xchg
add
pop
call
pop
lods
ret
outsb
jl
and
mov
xor
scas
loopne
pop
pop
dec
jbe
stc
sbb
sub
add
aas
pusha
add
xchg
adc
pop
xchg
add
mov
loop
std
cs
inc
jb
sub
scas
mov
popf
aad
lock
add
scas
ds
lods
push
add
add
cld
xchg
add
out
dec
data16
and
push
add
inc
add
hlt
add
add
ds
aam
adc
stos
ret
loop
jns
loopne
push
pop
test
fstl
add
lahf
sbb
mov
xor
std
pushf
jp
rorl
imul
fcomps
and
mov
out
add
mov
scas
clc
sbb
rorl
ja
push
add
add
add
mov
pusha
add
add
add
jae
add
add
fisttpl
stos
stos
outsl
rolb
push
pop
test
add
xchg
add
mov
jmp
add
xor
cmp
mov
shll
mov
out
add
fidivl
add
add
mov
lock
add
inc
add
int3
and
mov
jbe
movsb
add
call
mov
dec
jmp
ficompl
dec
shll
jae
outsl
add
dec
clc
addb
add
dec
ljmp
push
add
add
imul
push
outsl
xchg
mov
and
jns
mov
and
mov
xchg
add
lea
add
dec
repz
stc
fisubs
mov
nop
add
je
add
test
fisubl
aas
and
mov
sbb
out
and
sub
in
test
std
in
xor
add
fldt
mov
addb
add
and
mov
cs
pusha
add
add
mov
mov
cmpsl
in
pop
or
aad
add
nop
add
repnz
fwait
pop
pop
loope
adc
adc
ja
add
loope
or
adc
xor
pop
cs
add
add
mov
movsl
int3
sbb
add
repnz
push
data16
jo
lods
jle
cli
insb
pop
add
mov
lock
cmp
xorl
out
xchg
mov
cmpsl
adc
imul
xchg
rorl
fimull
xchg
lret
push
aad
xchg
jmp
add
testb
loopne
mov
fnstcw
lret
add
xchg
jbe
sbb
aas
cwtl
fmul
xchg
add
pop
mov
xchg
push
push
fwait
daa
data16
add
sub
add
cmp
add
push
add
jmp
out
cmp
repz
mov
mov
add
xchg
out
icebp
stc
lea
lret
and
mov
add
orl
add
mov
rcrl
leave
shl
add
sar
test
movb
popf
lea
add
add
bound
mov
add
mov
test
popa
cmp
mov
pushf
insb
push
add
add
sahf
and
and
mov
pop
insl
cmp
sbb
add
and
nop
add
add
nop
add
mov
out
push
cltd
daa
clc
adc
mov
mov
push
mov
loop
movsb
add
data16
add
pop
mov
dec
lahf
les
adc
incb
loopne
and
sbb
ljmp
in
dec
and
std
inc
loope
push
add
add
xor
rolb
push
fisttpll
jnp
or
add
call
jnp
add
pop
cmpsl
int
inc
add
add
add
int3
push
lea
dec
fcoms
inc
add
adc
fidivrl
add
movb
mov
inc
adc
add
mov
pop
sub
popf
sub
add
cs
stos
fsubrl
popf
dec
and
mov
mov
cmp
sbbl
sbb
pop
dec
cmp
mov
or
arpl
add
int
lock
add
repnz
jl
add
mov
insl
push
dec
arpl
add
mov
add
push
add
into
mov
mov
push
adc
adc
fadd
add
popa
bound
mov
shll
xchg
add
mov
test
out
dec
je
enter
fmulp
loop
iret
xchg
add
xor
xor
add
mov
mov
lret
adc
add
add
movsl
lods
add
pop
jns
test
add
add
dec
clc
imull
add
add
fistps
cwtl
movb
add
gs
sbb
add
mov
lods
add
mov
pop
std
pop
gs
dec
pop
outsb
mov
int
mov
and
jge
add
xchg
inc
out
les
jb
add
mov
pop
mov
sbb
add
mov
lods
mov
and
xchg
imul
jne
lahf
add
mov
mov
dec
and
and
mov
push
add
xor
fisubs
push
add
mov
fildl
add
mov
mov
add
decl
out
aaa
into
or
dec
inc
add
dec
add
ds
mov
sti
shll
sbb
add
bound
mov
aas
dec
add
mov
je
cltd
mov
imull
sbb
and
vpmulhw
add
ljmp
add
add
add
add
movsl
imul
jg
add
ret
add
inc
jmp
add
add
and
inc
idivl
mov
cwtl
scas
inc
sbb
lcall
jmp
add
mov
lea
add
and
mov
add
xor
push
add
jne
add
mov
lahf
adc
lods
mov
xor
adc
clc
stos
add
popa
or
push
add
cmp
add
dec
xchg
add
mov
lcall
addb
add
out
dec
adc
enter
mov
int
addr16
aam
lret
xchg
in
push
add
mov
call
mov
aas
mov
add
add
mov
dec
push
pop
test
add
into
push
add
cwtl
outsb
and
popf
push
xlat
or
fnstcw
add
out
dec
ja
add
xor
aaa
dec
loop
push
popf
or
add
add
xor
and
jns
mov
add
sbb
sub
mov
lock
mull
add
leave
int
out
loop
push
add
pop
bound
mov
dec
xchg
add
fiaddl
add
xchg
xchg
test
add
neg
xchg
xor
push
xchg
fwait
pop
adc
sti
or
add
add
sahf
mov
leave
in
test
mov
dec
es
add
mov
sti
leave
sbb
add
movsl
sbb
mov
add
xor
jmp
and
pop
xor
add
mov
xlat
mov
lcall
add
xchg
push
add
xor
into
outsl
sti
or
pop
push
add
mov
or
add
or
jge
or
mov
add
or
dec
stos
dec
push
push
add
or
insl
xchg
xchg
sub
jge
dec
sahf
test
nop
add
xor
pushf
inc
add
test
mov
add
sub
push
adc
mov
jno
xchg
mov
add
mov
repz
mov
pop
xchg
add
adc
add
add
sti
in
dec
dec
inc
dec
xchg
nop
add
jle
xchg
mov
lcall
fisttpll
cmp
mov
mov
out
inc
call
lds
xchg
xor
push
or
scas
data16
add
add
add
push
add
mov
mov
mov
mov
add
add
nop
add
test
lock
push
add
mov
jg
test
add
mov
add
add
add
add
lcall
add
add
enter
sbb
rolb
out
inc
hlt
add
pop
mov
sub
int3
jae
adc
add
jae
xorl
jne
add
mov
xchg
cwtl
loopne
mov
adc
add
mov
push
add
leave
leave
mov
ss
add
sbb
add
add
lahf
or
xchg
add
inc
icebp
clc
and
mov
stos
mov
add
push
add
pop
add
mov
pop
dec
cli
and
push
add
and
mov
add
pop
in
mov
xchg
add
add
out
cmp
sbb
repz
mov
int3
inc
adc
and
add
add
sub
add
test
pop
mov
aad
add
mov
pop
sub
loopne
addr16
mov
and
add
add
jmp
roll
outsb
add
rol
add
add
mov
mov
add
mov
cs
adc
enter
outsb
cmp
mov
inc
add
jns
aam
cltd
enter
mov
jg
stos
test
call
enter
jle
add
or
popa
lods
cmpsl
pop
mov
jmp
add
dec
rolb
xchg
add
add
shll
add
xchg
jo
enter
ljmp
je
into
or
add
popf
data16
int
inc
add
add
stos
inc
add
xchg
add
cltd
sqrtps
aam
pop
fistps
add
xor
xchg
add
adc
loope
add
mov
cmp
add
lea
int3
jno
clc
inc
adc
cmp
movsb
add
sbb
xlat
jnp
jge
add
movsl
or
mov
cmc
add
mov
sbb
rolb
outsb
cmp
and
cmp
add
dec
and
mov
lahf
or
xchg
sbb
jg
add
add
mov
les
mul
add
in
push
add
jae
add
xchg
mov
add
mov
mov
add
mov
mov
cmp
cwtl
add
mov
jg
add
fcmovnbe
dec
cmpsb
add
add
je
sbb
sub
add
sbb
add
pop
push
dec
adc
movb
add
fmull
add
sbb
repz
fwait
imul
add
add
pusha
add
std
fistl
sahf
inc
mov
jecxz
add
add
pop
cmpsb
add
popf
pop
repnz
lock
sbb
push
add
add
add
dec
das
jl
add
mov
aam
lock
lea
fmul
jmp
cs
cmp
mov
std
lods
into
repz
add
push
aaa
mov
xchg
test
add
add
and
ret
in
jne
insl
out
pushf
pusha
add
adc
stos
inc
inc
add
xor
jp
adc
jle
cli
mov
add
mov
call
cmp
push
add
aas
rolb
mov
gs
sbb
add
add
sti
jb
mov
loope
inc
or
hlt
add
lret
stos
sti
jp
pusha
add
pop
and
lret
mov
out
add
mov
ret
add
push
inc
add
pop
repnz
pop
outsl
adc
lea
add
add
xchg
and
push
add
add
jo
cmc
jne
add
add
pop
cltd
and
test
test
add
adc
add
lods
addr16
adc
add
mov
and
xchg
add
test
jl
lds
mov
lock
imul
adc
lret
add
sbb
mov
push
add
mov
sub
in
jecxz
pop
in
xor
in
cmp
add
pop
or
xchg
push
add
outsb
mov
add
and
jne
js
pop
mov
test
lahf
sbb
xchg
push
addb
adc
add
mov
push
dec
aam
mov
xlat
adc
out
adc
or
xor
pop
lcall
mov
out
pop
mov
add
add
mov
xchg
add
out
shll
out
push
daa
xor
movsb
add
push
cmpsb
add
std
outsb
outsb
lea
pop
xchg
add
add
cwtl
loope
repz
stos
lods
push
test
subl
out
ret
mov
loope
pop
inc
ljmp
repz
cmp
stc
arpl
add
sbb
add
gs
mov
insl
dec
dec
cmpsb
add
mov
cmp
dec
mov
cmpsb
add
push
add
xor
xchg
outsb
js
add
addb
mov
fistpll
out
scas
lret
ret
in
sbb
mov
xlat
test
add
xor
in
ss
sub
xor
add
mov
fnstenv
fiaddl
stos
push
add
testb
pusha
add
mov
in
adc
loopne
inc
adc
insb
loop
mov
sub
add
inc
add
add
xlat
add
lret
mov
mull
add
adc
jno
add
into
xor
jmp
push
mov
sub
cmpsb
add
dec
and
sub
fcoms
lret
inc
jecxz
mov
iret
out
fcompl
cmp
dec
aad
pop
dec
push
add
add
jnp
and
mov
adc
add
ja
add
sub
add
push
add
mov
addr16
insb
mov
jl
add
pop
jnp
testb
add
cmp
scas
xchg
mov
or
cltd
test
sbb
xchg
add
add
add
mov
jmp
mov
push
daa
cmpsl
lds
mov
add
inc
add
movsl
fidivl
xchg
lds
or
cmp
add
push
add
xchg
fcmove
add
jmp
pop
call
test
mov
out
repnz
fwait
cmp
scas
add
xchg
add
les
dec
sahf
das
and
and
mov
lods
mov
add
add
jnp
out
bound
mov
insl
mov
add
out
push
add
mov
les
das
sub
add
sbb
push
add
add
stos
adc
bound
mov
lock
movsb
add
lock
mov
xor
int3
xchg
or
cmp
mov
xor
movsb
add
in
bound
mov
mov
mov
sub
xor
adc
loopne
xor
rcll
inc
add
add
xchg
add
add
push
rolb
ds
repz
movb
add
inc
pop
bound
mov
push
add
add
pop
sub
add
ja
add
repz
lret
imul
pop
mov
xor
add
add
js
add
pusha
add
pushf
adc
mov
push
in
sub
es
ret
sbb
add
add
jb
aas
sarl
out
or
rcrl
xor
testb
mov
nop
add
jp
cmc
scas
adc
push
add
and
mov
add
add
sti
repnz
mov
add
inc
ds
out
add
add
pushf
dec
dec
cwtl
xchg
addb
add
add
movl
sub
jp
fmuls
hlt
add
pop
data16
and
out
pop
jecxz
add
jae
add
xor
stc
add
cmpl
xor
pop
and
mov
add
add
inc
dec
jne
andl
dec
scas
mov
add
pop
cmc
mov
nop
add
jnp
pop
or
add
add
add
testb
add
lret
mov
int
add
add
adc
addb
jno
jnp
mov
int
pop
pop
mov
add
test
add
ror
addb
fdivr
lock
ja
mov
push
push
test
or
rcrl
into
ss
jbe
stos
push
rolb
or
mov
rolb
add
mov
repz
inc
add
aaa
and
out
xchg
popa
hlt
add
aam
inc
inc
add
rolb
add
je
jb
sbb
push
add
sub
cld
adc
cmp
xchg
add
jbe
xchg
adc
dec
out
pop
add
pop
pop
push
add
mov
clc
mov
addl
add
push
add
add
lods
ja
adc
jae
lods
pop
ljmp
xchg
pop
push
add
add
jl
ljmp
adc
dec
pop
xchg
push
sahf
data16
incl
jbe
xchg
add
jecxz
repz
out
inc
add
out
pop
pop
lret
add
add
bound
mov
in
sub
add
rolb
loop
push
lock
mov
fcoml
add
adc
push
add
mov
mov
add
jge
adc
out
mov
imul
adc
pop
or
add
push
inc
pop
push
mov
mov
mov
and
mov
add
add
pop
fists
add
sub
lcall
loope
push
add
or
in
add
aad
adc
lahf
cld
mov
ds
add
push
add
add
push
add
and
dec
leave
xchg
xlat
pop
gs
add
or
add
adc
incb
add
add
add
aas
aad
add
mov
add
data16
movsb
add
add
arpl
mov
add
inc
add
dec
mov
inc
add
int
adc
mov
jno
jne
imul
mov
scas
xchg
sub
adc
int
insl
addb
add
lahf
sar
mov
inc
scas
dec
push
and
testl
add
gs
mov
mov
add
add
mov
pop
add
jbe
out
aaa
push
inc
add
sub
mov
add
pop
dec
in
mov
jmp
add
add
fnstsw
xlat
lret
mov
imul
add
add
mov
nop
add
sbb
add
cltd
add
aaa
shll
ficompl
rolb
jecxz
add
sbb
pop
in
cmpsb
add
movl
jae
dec
das
mov
test
mov
sub
inc
into
cmp
add
add
ds
or
add
fsubl
adc
add
push
bound
mov
arpl
add
lcall
xchg
mov
add
ret
loopne
stos
mov
test
pop
fcmovne
sti
addb
adc
mov
mov
jb
addb
rolb
sahf
push
loop
divl
add
aaa
das
cmp
inc
add
add
add
inc
ljmp
add
js
mov
cs
and
roll
mov
and
inc
add
cmovnp
add
pop
mov
outsb
gs
ljmp
push
mov
mov
movsb
add
add
jns
jnp
pop
mov
jb
cmp
push
add
inc
cmp
pop
sub
jl
jmp
add
insb
add
sub
aad
and
scas
mov
pop
mov
fstpl
xchg
sbb
enter
cmp
outsb
testl
mov
data16
les
jbe
div
add
fsubrl
repz
xchg
add
mov
add
xor
ret
mov
and
add
add
xor
outsb
xchg
add
rolb
std
push
push
add
add
add
add
pusha
add
jno
popf
sbb
arpl
arpl
pop
add
fldln2
or
or
push
add
addb
dec
call
rolb
data16
and
inc
add
add
add
ret
out
add
mov
daa
xor
add
xchg
roll
mov
mov
int3
into
dec
or
cmpl
push
xor
inc
add
dec
add
push
add
cmp
repz
cmpl
adc
push
add
pop
in
push
add
jg
fcom
add
mov
add
mov
add
add
and
mov
or
add
les
jo
nop
add
add
inc
jb
xor
mov
mov
add
testb
in
fcoms
pop
dec
mov
aaa
adc
lret
sub
int3
add
imul
add
add
nop
add
aad
xor
lret
mov
lcall
call
add
addr16
out
lea
add
add
and
mov
and
shl
jbe
sarl
jmp
add
and
mov
add
or
push
mov
cmp
add
jmp
mov
shl
add
fcoml
jp
add
push
add
push
rolb
jmp
push
mov
or
dec
fdivl
inc
orl
adc
clc
dec
daa
add
outsb
jns
fimull
sub
cwtl
stos
mov
add
add
add
mov
add
jge
mov
cs
add
inc
add
das
jge
add
xchg
xor
jno
cmp
pop
adc
pusha
add
jmp
and
mov
xor
lcall
pop
cmpsl
dec
adc
or
test
add
ds
cmc
push
sbb
add
add
fisubrl
push
add
in
and
mov
pop
ds
mov
xchg
mov
push
add
push
add
add
add
stos
or
aam
dec
mov
cmp
add
add
mov
jb
into
xchg
xor
push
xchg
add
outsl
xor
cwtl
into
push
fdivs
push
mov
add
add
mov
add
add
sbb
add
mov
mov
mov
add
sub
push
add
pop
clc
divps
and
data16
add
int
add
sub
fsubr
rolb
popa
pop
or
add
xchg
add
stc
out
cmp
ficomps
jle
jp
cmp
add
mov
push
call
add
push
sub
in
cld
mov
add
in
insl
xchg
add
lods
aaa
popa
push
test
pop
mov
lcall
test
lret
push
add
add
popf
pop
mov
or
push
add
add
push
adc
jmp
mov
in
and
mov
add
leave
cmp
ljmp
adc
inc
push
dec
or
jmp
inc
add
cmp
add
push
add
mov
movb
lahf
cmp
dec
cmc
mov
arpl
xor
cli
popa
xor
cmp
add
dec
xor
inc
add
add
mov
addb
jo
sbb
sbb
add
inc
add
add
push
cs
mov
add
add
add
jnp
sbb
lea
mov
add
jne
add
add
fildl
add
jle
add
dec
testb
add
xchg
add
outsl
adc
add
xor
pop
lds
add
sbb
addb
add
add
add
adc
add
jl
and
in
fiaddl
in
push
add
dec
adc
insb
addb
add
or
add
mov
sub
push
push
pop
ljmp
in
push
add
cmp
mov
add
or
or
add
add
add
nop
add
pop
rolb
dec
mov
add
mov
add
pop
movsl
add
mov
imul
fdivrl
dec
dec
aad
xchg
add
test
add
fcmovnbe
add
add
sti
mov
dec
das
xor
or
adc
cmp
mov
mov
jle
loop
aam
push
add
scas
ljmp
mov
decb
pop
ljmp
cmp
inc
cmp
xchg
jns
lret
or
dec
das
out
push
add
fldcw
or
mov
sbb
add
mov
add
hlt
add
daa
fmul
xchg
lahf
xor
adc
and
mov
clc
pop
inc
add
fldt
and
cmc
in
xchg
add
cmc
cmp
mov
add
add
xchg
add
lods
aas
lea
mov
stc
out
jmp
xchg
fdiv
add
loope
in
movsl
in
mov
outsl
gs
add
mov
ja
insb
jns
push
add
add
loopne
imul
in
and
push
add
out
dec
and
gs
hlt
add
xchg
add
in
xchg
ja
les
sub
notl
jb
adc
pop
das
add
mov
push
add
fldcw
add
repz
xchg
add
jp
adc
add
jp
pop
lds
add
add
xchg
add
mov
or
add
and
lods
ds
cmpsl
fisubs
add
add
push
add
decb
test
add
inc
add
loope
mov
and
mov
movl
pusha
add
and
mov
cmp
and
scas
rolb
jle
dec
add
add
or
sbb
mov
rolb
add
add
sbb
add
add
add
mov
mov
sub
push
cmc
frstor
and
sahf
mov
mov
pop
jns
add
inc
in
pop
and
mov
lcall
popa
insb
js
add
jp
mov
pop
idiv
inc
add
add
add
or
add
fcomi
mov
push
aaa
lahf
jl
cmp
dec
adc
add
add
adc
mov
mov
jecxz
jno
jmp
add
jmp
imul
lds
jns
mov
bound
mov
or
sbb
add
cli
mov
add
add
jae
jle
or
jnp
sub
out
jnp
push
out
pop
push
insb
and
rolb
ljmp
xlat
and
sti
outsl
enter
add
inc
add
mov
sub
sub
hlt
add
sti
enter
mov
add
inc
add
rolb
and
mov
xchg
add
data16
add
push
add
add
add
mov
icebp
pusha
add
cmp
loopne
movsl
ja
dec
cmp
mov
mov
or
fsubr
sub
lods
push
add
mov
push
add
add
clc
dec
jle
mov
lret
stos
icebp
rolb
add
inc
mov
lret
pop
std
lods
lret
stos
or
add
rolb
mov
nop
add
pop
ja
add
loopne
fnstcw
or
mov
imull
jle
mov
add
xor
add
mov
shrl
jns
popa
lods
addr16
in
rolb
int
subl
sahf
movb
gs
and
ja
add
mov
add
push
add
aaa
push
adc
adc
arpl
data16
add
scas
js
jg
sub
add
sub
dec
nop
add
inc
mov
addb
in
and
icebp
mov
mov
mov
mov
jecxz
les
adc
xor
fwait
inc
add
js
cmp
add
add
or
pop
outsl
fmull
push
sti
std
mov
sbb
movb
clc
pop
cmpsb
add
mov
add
mov
dec
idivl
mov
add
data16
cmpsb
add
test
pop
mov
loope
sahf
cmp
cmp
add
add
js
loopne
inc
addb
jbe
mov
call
rolb
dec
dec
out
add
test
or
add
xchg
add
mov
add
push
push
add
mov
mov
add
jb
and
mov
pusha
add
sub
add
xchg
add
xchg
ljmp
push
add
mov
imull
add
pop
pusha
add
sbb
xor
outsl
sbb
xchg
sbb
xchg
xor
push
add
add
xor
scas
jae
or
mov
jo
add
or
xchg
testl
mov
xchg
rolb
mov
int3
outsb
sbbl
popf
add
or
test
or
inc
xor
inc
mov
sub
or
insl
std
xchg
scas
incl
clc
fs
and
push
mov
movsb
add
add
ficompl
shrd
orl
adc
aaa
mov
inc
pop
repz
lea
scas
maskmovq
imull
jle
ljmp
test
bound
mov
sub
add
mov
fistpl
cltd
mov
xchg
scas
push
add
aas
mov
testb
dec
xchg
loopne
pop
icebp
push
add
mov
mov
xchg
mov
and
mov
add
lahf
cli
mov
cltd
testb
popa
jo
pop
adc
dec
dec
stos
repz
popf
leave
enter
test
add
pop
lds
loope
stos
xor
repnz
push
add
sti
xchg
cwtl
and
mov
xchg
stos
pop
xchg
pop
inc
cmpsl
fidivl
xchg
add
xchg
add
sbb
sbb
int
iret
imul
and
mov
repz
mov
ret
mov
mov
add
in
mov
hlt
add
add
sbb
inc
add
push
add
movb
add
push
add
jnp
lcall
in
mov
add
ror
xchg
jle
xchg
cmp
add
inc
add
cli
xchg
test
xchg
mov
inc
add
dec
jne
jmp
cmp
sbb
cmp
add
iret
test
add
jmp
add
add
pop
lods
in
arpl
pop
aam
lcall
gs
sub
pop
mov
rolb
xchg
add
mov
add
in
bound
mov
inc
add
jb
repz
adc
inc
add
push
add
xor
loope
mov
add
dec
leave
cmp
out
lods
loopne
pop
add
popf
pop
cld
and
jl
enter
call
add
add
or
data16
lcall
add
loopne
into
mov
push
mov
add
add
mov
lds
inc
add
ljmp
fsubs
dec
aad
dec
aam
mov
daa
out
outsb
pop
mov
inc
add
lahf
fbstp
jecxz
fisubs
jp
popa
jl,pn
jle
enter
mov
add
pop
push
add
add
add
pusha
add
lds
daa
cltd
add
mov
cmc
jmp
mov
xchg
dec
or
shll
lcall
jp
xor
xchg
js
add
mov
insb
cli
mov
fsubrs
add
add
add
mov
dec
xchg
add
js
add
stos
into
mov
sbb
add
and
mov
addb
add
out
sub
or
add
adc
repnz
jno
jb
das
xor
or
add
cmp
sub
je
push
fmul
out
mov
cmp
sbb
push
cmp
add
mov
sbb
add
out
in
imul
add
insb
sbb
cmpsb
add
sub
jmp
add
je
push
add
pop
xchg
xlat
testb
add
rolb
addb
movsb
add
mov
xor
add
mov
rol
add
add
add
cs
sbb
cltd
push
mov
jg
test
push
add
sti
and
mov
fisttpl
add
hlt
add
add
add
sahf
pop
cmpsb
add
scas
mov
cld
sub
imul
loopne
jmp
or
and
add
filds
mov
data16
xchg
add
jmp
add
add
cmc
stc
clc
push
pop
in
jbe
ljmp
mov
push
add
add
ljmp
and
pusha
add
jne
bound
mov
jle
push
add
sbb
pop
lret
adc
das
inc
sub
dec
push
add
mov
mov
jne
and
cmc
cli
jns,pt
int3
push
not
lret
jmp
pop
out
ljmp
movsl
testb
lahf
and
mov
lcall
and
xchg
fistps
xor
imul
jg
gs
arpl
add
jae
add
xor
arpl
xchg
cmp
add
xor
push
add
or
add
sbb
adc
add
lret
and
push
pushf
push
mov
jg
add
cmpsl
or
dec
add
fisubs
push
pop
sti
xchg
call
pcmpeqb
out
xchg
sahf
or
add
add
jmp
faddl
add
cmpsl
cld
jns
lods
fadds
add
mov
dec
cmpsb
add
iret
adcl
sub
test
add
sub
add
xchg
sbb
add
mov
stos
aad
xor
inc
add
add
inc
or
inc
add
testb
add
or
add
jno
jmp
sbb
hlt
add
pop
popf
int3
add
dec
fnstcw
add
adcl
add
stc
into
mov
dec
mov
add
lret
cmp
int
push
add
add
pop
lods
and
bound
mov
mov
add
js
daa
xchg
add
testb
sub
add
add
out
pop
mov
gs
loope
rolb
mov
std
cmp
add
add
std
adc
add
mov
inc
add
add
adc
lock
std
pop
test
sbb
sahf
loopne
andl
fidivl
sbb
xchg
gs
add
mov
add
xchg
pop
test
add
and
xchg
ds
or
test
daa
popf
mov
push
adc
daa
fdivs
dec
lds
inc
add
lret
pop
push
mov
add
mov
or
test
pop
rolb
lods
enter
cmp
mov
mov
add
add
pop
or
mov
mov
into
push
push
add
insb
xlat
call
add
add
mov
lret
lret
cmp
mov
xor
dec
push
mov
inc
ljmp
add
add
add
add
add
fstpt
add
hlt
add
popa
mov
add
mov
add
cmp
add
inc
add
lods
test
add
xchg
in
loopne
lds
js
mov
pop
in
mov
push
adc
repz
fadd
mov
insb
jg
push
add
add
gs
add
mov
pop
cmpsl
xchg
add
sub
scas
lahf
jmp
or
or
dec
adc
and
clc
mov
addr16
or
lret
lock
mov
xchg
inc
lods
jecxz
xchg
jo
std
inc
xchg
add
add
fimull
mov
aam
addr16
mov
rolb
icebp
stc
imul
stos
out
push
mov
addb
or
and
or
in
jno
lea
add
add
mov
add
leave
pop
loop
data16
aaa
ret
add
push
movb
pop
std
inc
in
add
or
add
add
xchg
or
add
add
arpl
outsb
lds
dec
adc
sbb
add
and
mov
adc
aaa
mov
add
ret
mov
cmp
incl
sub
add
movsl
inc
add
dec
dec
and
mov
imul
or
clc
dec
arpl
add
add
xchg
add
fisubrl
sbb
mov
add
mov
add
mov
movsb
add
les
cmc
xchg
fdiv
add
push
add
jmp
jmp
add
mov
dec
rcr
or
loop
jmp
add
daa
sbb
rolb
mov
mov
push
add
push
mov
or
sbb
add
in
add
add
subl
ret
push
xor
xchg
add
add
xor
cli
mov
add
mov
add
divl
push
icebp
add
fimull
pop
inc
scas
adc
lea
add
stos
mov
jno
push
add
in
pop
inc
add
pusha
add
add
test
popf
lea
int
pop
pop
les
dec
xchg
clc
or
add
sbb
ds
dec
xchg
add
sti
push
add
add
or
add
imul
loop
mov
xchg
xor
sbb
popf
sub
add
idiv
scas
out
rolb
mov
adc
xor
rcll
lea
fs
mov
pusha
add
add
ret
push
addb
sbb
add
mov
add
add
add
lret
dec
cmp
mov
rolb
leave
pusha
add
cmpsb
add
inc
add
loopne
add
and
add
pop
stc
pop
and
ret
xchg
mov
movups
rolb
add
pusha
add
adc
inc
add
add
lds
push
add
adc
mov
in
add
cmp
cwtl
into
mov
and
mov
dec
push
outsb
xchg
ret
add
add
fstps
mov
or
jl
ja
pop
mov
sub
add
lahf
cmpsl
pop
movsl
repz
in
mov
push
add
ljmp
ljmp
mov
add
rolb
sbb
outsl
sbb
xchg
pop
inc
int
outsl
add
push
add
mov
mov
mov
sbb
mov
add
add
stos
xchg
and
mov
mov
add
enter
add
bound
mov
add
mov
rolb
test
jmp
mov
lds
mov
test
add
bound
mov
add
add
movsl
inc
inc
add
add
addl
xchg
xchg
stc
leave
mov
add
xchg
mov
pop
frstor
cmpsb
add
add
mov
xchg
add
mov
lret
xor
fsubp
add
add
rolb
or
pusha
add
pop
call
gs
pop
adc
cmc
sub
add
jle
or
add
rorl
push
cmc
and
add
pop
insb
pop
lret
iret
loopne
rcll
fwait
and
out
sub
pop
mov
inc
add
add
daa
fsubs
add
push
add
cltd
int
add
add
inc
in
push
add
insl
hlt
add
pusha
add
add
add
add
xchg
inc
add
test
clc
sub
in
scas
push
add
xchg
cli
cli
sub
lahf
outsb
and
sbb
test
insl
jb
mov
mov
pop
sbb
leave
imul
add
addr16
pusha
add
mov
addb
add
and
xor
push
xor
add
addl
jno
stos
lret
sub
jl
cmc
scas
sbb
xor
add
push
add
cmc
cmp
mov
xchg
cmp
jne
adc
jecxz
add
inc
add
pop
xchg
add
pop
testb
mov
andl
mov
add
sbb
jp
add
add
add
ljmp
test
out
addb
dec
cli
rolb
add
dec
cld
adc
adc
and
mov
cmpl
mov
lret
hlt
add
jmp
mov
sub
add
push
rolb
cmp
add
xchg
and
add
add
outsb
inc
add
add
add
add
outsb
adc
mov
add
add
mov
and
mov
mov
loope
test
add
push
jo
addb
add
add
add
or
pop
cmpsl
xchg
sub
cmp
lds
and
mov
inc
add
std
cmpsl
push
add
jnp
mov
outsb
bound
mov
je
inc
add
add
add
pushf
add
sub
mov
cli
mov
mov
mov
pusha
add
sbb
cltd
jbe
sub
add
movsl
mov
inc
add
add
data16
inc
push
add
push
push
add
sbb
scas
data16
addr16
cli
aam
push
jmp
test
lcall
cld
lock
aaa
xchg
add
add
shl
xchg
add
push
add
adc
xor
xor
push
fwait
je
sbb
mov
xchg
add
rolb
ret
lods
ss
mov
enter
mov
mov
stc
or
stos
je
scas
addb
data16
add
add
das
jae
ljmp
mov
aam
loop
and
mov
add
outsl
add
mov
lret
mov
xor
add
add
lds
add
out
cmp
or
out
fldl
test
imul
pop
cwtl
cmc
add
mov
les
mov
mov
sub
arpl
push
sub
mov
mov
mov
add
js
add
add
sbb
add
sub
nop
add
aas
and
mov
shll
ficoms
add
xor
stos
mov
sti
mov
sbb
ja
mov
and
aas
sbb
mov
add
shl
add
ret
out
inc
mov
mov
xor
stos
lahf
stc
or
loope
jnp
pop
pop
data16
add
aam
cwtl
jecxz
add
sahf
out
add
mov
add
gs
xor
cmp
add
xor
mov
in
add
xchg
addb
sub
jno
cmp
add
add
add
jns
xchg
mov
mov
fsubl
out
pop
lret
add
add
out
sar
sbb
add
add
mov
xor
je
daa
xor
push
add
pop
sbb
add
mov
add
int3
fstpl
imul
add
add
mov
addb
jge
add
aam
daa
mull
jmp
pop
jnp
and
mov
adc
inc
pop
jns
call
pop
leave
or
pop
aad
add
add
jp
push
mov
in
out
jnp
add
push
imul
nop
add
jnp
movsb
add
add
loop
add
sub
lds
jns
add
stos
aaa
jno
pop
and
lahf
cwtl
mov
aad
out
dec
rorl
add
mov
cld
sub
mov
testb
jle
add
sbb
xor
xor
and
mov
or
mov
add
out
lock
lds
add
dec
cltd
sub
adc
pop
lods
fildl
je
sub
fildl
gs
add
add
add
nop
add
movsl
jle
bound
mov
repz
test
inc
inc
add
loop
pop
pop
jmp
ds
jge
add
add
leave
or
jp
inc
sahf
outsb
push
add
enter
add
dec
and
mov
jns
push
cwtl
mov
push
sub
mov
mov
cmp
mov
test
cmp
movsb
add
mov
rolb
dec
lds
add
add
daa
xchg
add
add
fmulp
insl
pop
dec
mov
fidivs
mov
add
pop
aam
inc
add
xchg
add
roll
gs
add
or
dec
cmpsl
mov
push
push
pusha
add
add
add
add
add
leave
sub
push
add
mov
add
mov
testb
int
pop
add
int
daa
lds
rolb
mov
xchg
or
add
mov
aas
and
sub
sub
dec
jle
int
ljmp
or
adc
mov
add
add
add
cli
add
adc
cmpsl
sbb
mov
inc
pusha
add
add
repz
add
mov
sub
add
popf
mov
inc
fisubs
add
mov
adc
mov
and
cmp
pop
mov
add
jno
add
jl
add
fwait
inc
pop
inc
nopl
mov
add
add
add
repz
xor
out
xor
push
js
add
in
add
cmp
sbb
add
outsl
push
bound
mov
cmp
rolb
ljmp
mov
mov
cld
cmp
popf
enter
mov
inc
stc
dec
in
inc
add
push
add
pop
add
mov
mov
popf
aas
inc
jo
incl
add
xor
icebp
test
sub
add
jnp
lahf
add
mov
add
lock
mov
add
add
aaa
jge
cli
pop
rolb
jecxz
inc
call
push
dec
add
mov
and
mov
mov
add
push
add
add
add
and
mov
rolb
gs
pushl
inc
popa
jne
add
mov
and
arpl
or
add
add
add
add
cmc
int
add
add
add
mov
xor
or
add
xlat
or
mov
xor
int
add
add
add
mov
lods
fists
lcall
testb
jbe
push
std
repz
or
add
add
add
xor
mov
sbbl
mov
and
cmp
cmpsb
add
hlt
add
push
ljmp
add
adc
sbb
xor
ret
add
add
ljmp
add
pop
or
add
outsl
sti
pop
jge
test
jnp
enter
add
xchg
add
test
popf
mov
fcmove
jg
add
add
add
push
add
mov
add
adc
in
out
add
add
mov
cmp
gs
outsl
push
add
dec
imul
std
imul
add
mov
mov
daa
mull
insl
lret
add
jo
leave
lods
mov
adc
mov
add
add
and
cmpsb
add
insb
ret
mov
dec
sub
fwait
sub
jl
add
sub
xchg
out
pop
mov
sub
jne
je
xor
add
add
add
add
shrl
add
xlat
sbb
aam
cwtl
sub
push
add
mov
cmp
add
loopne
cs
push
gs
lret
insl
cmp
add
pop
imul
or
jmp
cmp
add
divl
loop
testb
sub
inc
lods
mov
aaa
aad
dec
in
insl
add
mov
push
rolb
fwait
mov
add
adcl
add
xor
flds
cmp
add
in
adc
addr16
xchg
add
jmp
jle
add
scas
dec
and
add
dec
repz
les
push
add
cld
aaa
mov
xchg
icebp
push
add
out
mov
add
leave
push
stc
mov
sub
adc
