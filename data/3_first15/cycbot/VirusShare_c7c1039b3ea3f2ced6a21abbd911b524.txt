popa
sub
dec
add
nop
cmp
les
shll
lcall
mov
push
cmp
add
jl
and
cmp
mov
loope
sbb
xor
inc
add
jmp
aad
add
popl
add
mov
xchg
mov
mov
je
xchg
lds
xchg
push
sbb
mov
mov
cmpsb
arpl
std
cmp
outsl
orl
jle
fstpt
lret
lret
addb
cmp
dec
jb
sub
andl
inc
add
dec
test
jae
add
xor
mov
je
pop
rolb
std
inc
push
cmp
pushf
adc
add
add
adc
pop
add
mov
add
rol
insb
je
insb
add
and
dec
sbb
fisubrl
add
sub
add
or
dec
pop
ret
stos
pushf
rolb
mov
insb
xchg
out
sbb
or
add
fisubrs
add
sub
ljmp
add
inc
add
jno
fstpl
add
in
lods
loope
pop
jb
push
add
pop
jnp
daa
hlt
adc
mov
sbb
je
aam
dec
pop
sbb
out
test
shl
mov
push
jo
mov
cwtl
sbb
add
push
sar
inc
push
aas
jo
rcl
jns
jnp
mov
pop
lret
pop
lods
adc
jge
ret
iret
xor
cli
pop
pop
jb
enter
add
std
popa
jno
fwait
or
fs
mov
pop
cs
add
adc
hlt
or
clc
movsb
fisttpl
cmp
add
mov
lcall
je
add
test
inc
enter
test
movb
mov
stos
pop
pushw
pop
daa
out
xor
xor
adc
inc
stos
mov
jp
je
push
mov
fdivl
or
popf
js
jne
mov
add
std
imul
dec
dec
or
add
or
add
fdivr
jne
sbb
jo
scas
popf
clc
es
pop
hlt
ljmp
mov
xor
popa
add
jmp
imul
push
mov
movsl
addb
add
repz
stos
adc
mov
test
negb
lret
outsl
pop
addb
cmpsl
sub
cmp
shrl
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
pop
sub
mov
cs
push
push
lret
jmp
add
add
lcall
cs
and
cmpsl
js
mov
inc
aas
xlat
or
shll
add
pop
int3
sbb
mov
jmp
mov
add
test
pop
mov
and
les
popf
mov
sub
jno
movsb
ffree
add
mov
pop
das
ja
mov
les
cli
lea
and
cld
mov
fnstsw
jp
mov
mov
mov
into
loope
jo
add
jb
sbb
loope
xor
scas
aaa
aam
inc
add
lahf
mov
add
pusha
add
pop
pop
enter
add
add
es
jnp
insb
mov
ret
aas
adc
aam
jmp
lret
mov
add
std
xchg
outsb
inc
xchg
test
pop
lods
or
adc
addr16
fwait
xchg
das
mov
jge
xchg
fidivs
out
scas
roll
add
xchg
xchg
mov
push
xor
and
sbb
repz
lods
aad
outsb
push
das
push
add
sti
xchg
push
out
mov
jo
jo
sub
imul
and
cwtl
pushf
push
jo
adc
mov
pop
ja
add
imul
movsb
push
in
mul
xor
adc
call
and
dec
lea
or
dec
movsb
jne
and
xor
add
pop
mov
cmp
add
jl
repz
int
into
mov
movsb
flds
sub
ds
push
add
sbb
mov
push
add
pop
xor
inc
dec
add
add
addb
adc
push
add
or
push
leave
cli
mov
cmp
sub
mov
dec
inc
add
add
out
add
push
dec
addb
dec
das
inc
dec
repnz
adc
xor
fiaddl
loop
sahf
mov
sub
add
mov
sub
cmp
daa
xchg
negl
iret
in
adc
inc
add
push
rcrl
ljmp
in
dec
sub
mov
adc
add
dec
lcall
cmp
inc
add
movb
jmp
pop
push
pop
push
lods
fldl
out
pop
or
mov
xchg
nop
cmpsb
push
sahf
roll
lret
loope
int3
adc
mov
jb
add
lret
cli
popf
push
dec
mov
icebp
icebp
test
pop
aaa
add
and
sub
cmpsl
xor
xchg
movb
sub
dec
lock
movsl
sbb
sub
pop
xchg
pop
pusha
add
mov
dec
mov
out
cmc
outsb
inc
mov
mov
jge
pop
sbb
adc
push
out
sub
push
xor
xchg
repz
mov
inc
add
fwait
ret
inc
add
add
pop
mov
xchg
shr
arpl
outsb
xor
into
and
mov
sbb
outsl
popa
add
lahf
cmc
int3
xchg
pushf
es
fs
adc
rclb
loope
sbb
jne
or
stos
mov
jp
ficoms
es
gs
mov
mov
pslld
mov
add
sti
cli
aad
add
lahf
add
push
mov
xor
rcrb
add
mov
mov
pop
xchg
fsts
mov
pop
inc
ret
xchg
xchg
lods
mov
xchg
jmp
in
mov
inc
add
push
pushf
nop
add
add
mov
jae
setp
mov
cld
fcomp
ss
gs
cmp
cltd
int
dec
negb
adc
ficomps
addr16
arpl
and
or
add
add
push
pop
nop
in
xlat
xchg
jmp
je
sbb
sub
mov
add
xchg
out
mov
andl
fmull
and
adc
cmpsl
jae
rolb
xor
mov
mov
movsl
mov
and
jge
mov
test
loope
mov
loopne
rcr
sti
dec
and
push
jns
xor
mov
lods
adc
cmpsb
bound
out
dec
repnz
jecxz
pop
ds
mov
fstl
jno
decb
inc
add
int3
inc
arpl
mov
fldt
add
mov
mov
inc
add
xchg
mov
add
push
mov
mov
mov
sbb
in
mov
fsubs
pop
lcall
loop
push
out
fnstcw
into
out
xchg
cltd
addr16
addr16
jb
push
out
push
shl
sbb
movb
push
aad
inc
insb
xor
or
lahf
aam
test
fwait
jge
and
cmpsb
jg
sbb
mov
and
inc
lods
mov
sub
rolb
lea
mov
xchg
and
mov
movsb
subps
xor
add
int
add
aam
lcall
sahf
adc
jae
jo
loopne
pushf
dec
test
test
inc
in
mov
add
cmpsb
addb
loope
mov
clc
xor
push
pop
lods
pop
jbe
or
popa
fldl
push
sbb
ret
push
stos
adc
push
call
cmc
cltd
adc
icebp
fnsave
sbb
and
js
test
loope
icebp
clc
pop
or
cmp
add
insb
inc
push
ja
xchg
mov
test
lds
loope
bound
jnp
daa
mov
repz
inc
add
jp
pop
sbb
adc
adc
lcall
add
ret
cli
jnp
mov
add
adc
and
movsb
mov
and
xor
add
push
and
stos
mov
push
add
cmp
or
je
sbb
insl
insl
xchg
in
ja
xor
xchg
pop
insl
jg
and
out
sub
add
inc
int3
gs
add
xchg
les
jl
adc
adc
iret
daa
jmp
push
in
shll
push
sub
mov
cmp
lcall
jp
test
cmc
adc
and
call
movb
and
add
scas
test
mov
cmp
push
outsb
shr
sub
add
pop
aaa
and
gs
inc
lret
mov
and
popa
mov
add
insl
pop
test
add
push
sbb
fs
fisttpll
xchg
xor
repz
add
fs
jb
mov
add
in
decl
mov
insl
add
out
jg
mov
push
les
mov
add
push
jmp
mov
and
test
outsl
xchg
jp
sbb
jbe
and
outsb
pop
adc
jmp
add
pop
repnz
leave
addl
push
dec
clc
cmp
and
or
add
or
mov
lods
dec
dec
xchg
mov
les
push
sub
ja
adc
ja
add
enter
mov
in
add
jle
push
jle
push
aas
mov
lcall
pusha
add
jmp
mov
cmpsl
ss
or
xchg
sahf
lahf
iret
fisttps
lcall
iret
push
addb
cvtdq2ps
mov
sub
test
fcompl
les
sub
add
sbb
leave
and
outsl
push
add
fcmovnbe
mov
scas
or
jmp
sub
mov
cltd
xor
jne
add
sub
mov
xchg
xor
add
push
aaa
in
cwtl
bound
add
add
push
dec
out
lcall
fsub
loopne
rcll
sub
add
jb
clc
dec
loopne
cmpsl
mov
sarb
ds
decl
cmp
push
dec
cwtl
outsl
push
into
adc
cli
and
scas
inc
add
das
jne
or
pop
mov
imul
fs
mov
clc
jle
inc
xor
rcll
outsb
jmp
pushf
mov
mov
mov
pop
mov
push
pop
cmp
mov
jp
cmp
das
push
push
aaa
ret
nop
rolb
aaa
push
pop
sbb
and
jb
push
push
add
xchg
inc
add
inc
add
sbb
inc
push
jmp
lods
fmull
mov
xor
adc
ljmp
mov
or
xor
push
xor
rcrl
iret
sti
sub
or
lret
repz
add
add
push
add
in
cmp
imul
push
pop
xchg
jbe
in
or
jl
sahf
fwait
fwait
sub
lcall
jae
test
add
cmp
mov
lret
loopne
nop
push
cmp
data16
popf
gs
mov
add
xchg
mov
sbb
rcll
xchg
pop
inc
add
inc
pop
insl
dec
or
xchg
gs
inc
add
dec
sbb
arpl
addl
sbb
inc
add
xlat
lahf
inc
add
es
lock
rolb
adc
repz
dec
bound
in
outsb
pop
push
js
imul
mov
xchg
push
fisttpll
lods
data16
add
push
xlat
jge
fs
lods
cs
mov
inc
lahf
mov
nop
xor
ret
push
dec
jmp
enter
push
xchg
lret
jae
lret
cmp
cmpsl
ss
nop
xchg
in
adc
addb
loopne
cmp
int3
test
mov
adc
push
imul
loopne
lcall
iret
mov
push
popa
setl
std
mov
dec
leave
fisubrs
dec
mov
xor
xor
jns
jo
add
sub
sahf
out
lods
jg
dec
loop
bound
push
cmp
testb
xor
adc
jbe
pop
ss
xchg
out
mov
repz
xchg
push
add
add
loop
xor
add
aam
xor
xchg
mov
iret
pop
sub
test
outsl
enter
jl
aas
popa
movsl
mov
push
pop
ja
push
psrlw
xchg
jnp
add
add
fcomp
and
push
popl
jle
inc
add
push
stos
shrb
sbb
add
push
scas
lret
ret
mov
xchg
imull
sbb
push
test
movb
mov
dec
jbe
fs
fisttps
cld
sti
pop
sbb
fcmovnu
sahf
fcomps
outsl
jl
std
and
lods
movb
adc
popa
addr16
jge
xor
fbld
add
imul
or
push
outsb
mull
imul
mov
lds
xchg
fdivs
push
push
xchg
out
mov
and
enter
mov
sbb
add
add
mov
test
jb
mov
dec
lods
enter
gs
jl
cmp
pop
and
push
test
jbe
out
mov
es
mov
aad
inc
add
cmp
pop
mov
xor
rclb
and
xchg
rcr
fisubs
xchg
roll
inc
add
fisubs
cmpsl
aad
neg
push
add
add
out
dec
jo
and
loop
fisubrl
add
aaa
repnz
xor
add
adc
inc
add
jmp
shl
shll
add
addr16
add
push
out
fimull
add
repnz
mov
sbb
loop
add
shlb
jb
xlat
mov
mov
sti
cmp
jbe
mov
imul
xchg
dec
jae
push
lods
mov
in
ss
test
loope
add
add
and
fisubrl
xchg
cld
aad
xchg
shll
arpl
or
add
jl
fisubrl
dec
sbb
insl
fs
daa
aas
mov
stos
sbb
sbb
xor
add
or
push
movhps
sub
add
adc
and
jg
int3
sbb
dec
or
sub
sahf
xchg
sbb
xchg
and
adc
int
cmp
cmpsb
rolb
xor
aad
test
add
pop
xor
add
cmp
das
sahf
sub
jg
scas
lret
scas
lret
ror
in
push
outsb
mov
jbe
sarl
mov
dec
mov
pop
dec
arpl
in
or
jne
cmp
mov
mov
mov
lahf
jmp
xchg
pop
dec
icebp
xchg
lock
rolb
add
loopne
add
aaa
mov
dec
dec
adc
add
scas
adc
xlat
lock
test
add
and
cwtl
dec
lret
scas
xchg
ljmp
stc
mov
mov
mov
fcompl
mov
mov
fsubr
and
icebp
mov
pusha
add
fwait
ljmp
icebp
iret
or
jecxz,pt
mov
sti
xor
add
lcall
in
push
lds
bnd
xchg
or
xchg
repnz
and
mov
add
je
iret
push
jp
repnz
inc
out
bswap
sub
dec
inc
add
mov
add
in
add
cmp
pop
mov
ja
adc
in
mov
dec
and
aas
in
mov
add
add
add
lret
daa
das
insb
jns
inc
jle
add
or
ljmp
fsub
clc
mov
pop
adc
sub
add
lahf
cltd
mov
dec
inc
add
sub
mov
stos
cmpsb
test
pop
aad
adc
sbb
fnstenv
jno
sbb
sub
mov
add
xchg
dec
stos
icebp
fimuls
mov
je
movb
push
cmp
sahf
hlt
cmp
stos
jbe
mov
add
mov
add
test
cmp
and
push
push
xchg
xchg
mov
mov
aam
mov
ret
push
cmpsl
out
daa
push
in
scas
loopne
inc
mov
js
cmp
minps
sahf
fisubs
mov
add
je
mov
add
mov
cltd
mov
out
fsubl
addb
ret
add
sbb
lds
mov
pop
cmc
fiaddl
inc
add
lahf
outsb
inc
add
push
add
ja
push
test
mov
leave
mov
arpl
pop
sbb
sti
cmp
orl
pop
popf
mov
lds
mov
xor
fidivrl
ja
and
push
add
push
pop
imul
popa
into
sahf
and
sub
add
and
pop
inc
notb
inc
inc
push
xor
jmp
or
imul
enter
mov
push
mov
add
mov
call
arpl
add
addr16
cmp
fnsave
or
sub
inc
add
rcrb
cmp
adc
gs
repnz
aam
in
enter
js
in
in
push
pop
orl
insl
ljmp
dec
popa
popa
mov
je
xchg
mov
std
addb
mov
add
adc
mov
lret
movsb
cmc
dec
rolb
jae
mov
mov
cli
loope
addr16
push
and
inc
add
push
jno
les
mov
shlb
movsl
sbb
insl
daa
scas
mov
xchg
lret
ret
ret
out
push
mov
rolb
sti
les
lret
sbb
push
test
jnp
mov
mov
fidivrs
loope
pop
pop
mov
xor
mov
das
js
pop
jbe
mov
inc
in
push
test
add
repnz
fucom
add
icebp
dec
add
stos
xor
in
push
add
das
pop
stc
outsb
fistl
scas
std
lret
adc
add
mov
test
fists
push
ss
add
pop
jg
dec
xchg
and
inc
lods
cwtl
add
in
sub
shll
and
cmp
or
xorl
fwait
pop
mov
and
and
fiadds
pop
mov
xchg
push
add
add
pushf
inc
add
pop
lret
out
scas
or
mov
out
leave
cmp
clc
xchg
rolb
lret
daa
daa
jp
pop
xchg
pushf
sub
add
sti
aam
jb
inc
add
jo
andl
adc
inc
ss
fidivs
cli
mov
cmp
out
xor
sbb
mov
out
pop
mov
pusha
add
mov
xor
pop
adc
xchg
mov
insl
sub
into
mov
cmp
scas
push
jb
adc
pop
jne
pushf
adc
leave
jne
lret
loop
cld
adc
add
mov
js
adc
and
out
mov
xchg
mov
testl
stc
setnp
mov
js
mov
arpl
filds
movsl
push
mov
scas
mov
mov
xchg
cmp
or
test
jne
add
rcr
aas
sub
and
add
cmp
push
leave
adc
jne
pop
xchg
adcl
cmp
push
je
dec
pushf
fisttps
pop
fs
add
rcll
mov
data16
shrl
mov
inc
call
sbb
in
decb
lods
data16
mov
pop
dec
stos
nop
push
lock
cmp
fisubrl
jns
push
mov
inc
add
clc
pushf
jmp
gs
int3
dec
mov
jmp
add
repz
jmp
cli
and
test
loop
add
add
and
add
or
in
push
lds
sbb
jne
jbe
popa
mov
out
les
ljmp
repnz
jecxz
sbb
add
test
je
imul
rcrl
cltd
dec
adc
js
add
sbb
mulb
lahf
xor
rorb
in
jp
iret
xchg
mov
jno
addb
add
xchg
shr
xor
jl
les
adc
stos
mov
aam
ds
pusha
add
pop
jo
jnp
inc
outsl
ret
icebp
jle
add
dec
or
addr16
out
mov
add
inc
add
xor
popf
fcmovb
push
loop
cmp
mov
or
mov
fsubp
lahf
adcl
push
pop
add
mov
cmp
push
imul
sub
sub
push
test
enter
sub
fcmovnb
add
add
mov
out
and
shr
fs
push
add
mov
jne
mov
push
enter
pop
in
stos
fisubrl
sbb
inc
inc
inc
add
cmp
adc
push
mov
int
add
dec
sub
sub
xor
or
pop
enter
loopne
ret
movb
shll
cmp
loopne
add
xor
aas
jecxz
stos
pop
xlat
inc
add
cmp
or
add
sbb
fildl
pop
pop
adc
or
pop
fcmovbe
fisubrl
gs
movb
addb
mov
push
add
pop
mov
mov
insl
push
push
test
or
pop
test
add
mov
gs
or
push
sti
xchg
mov
adc
and
aam
fstl
shll
xchg
jne
dec
ljmp
int
lea
mov
push
test
cmp
push
out
sahf
aam
mov
push
push
sub
lods
mov
sbb
rol
subl
inc
adc
addr16
mov
jmp
xlat
stc
enter
add
cld
mov
repz
fs
push
mov
xor
outsb
addr16
inc
pop
leave
push
rolb
lods
sub
mov
and
fsubrl
lods
jnp
pop
test
std
and
in
add
popa
push
inc
push
push
jle
add
xor
cmpsb
cmp
stos
ret
cmc
dec
repnz
popa
in
pop
mov
pop
inc
mov
sbb
insb
test
sub
xor
inc
test
scas
cmp
aam
mov
mov
pop
out
lea
jbe
inc
in
inc
shrb
sub
add
lds
xchg
xchg
lahf
push
test
add
sbb
mov
sbb
sahf
call
repz
in
add
ret
enter
push
mov
jbe
fistpll
nop
hlt
lahf
mov
fsubrl
ljmp
nop
or
lock
sub
or
cmc
dec
mov
inc
push
cmpl
mov
xor
push
addb
insl
mov
addr16
jecxz
data16
ret
movsb
hlt
ljmp
cmpsl
cmp
lock
lods
imul
mov
add
mov
addr16
add
in
xchg
fisubrs
add
shl
xchg
push
test
or
insb
mov
xchg
movsb
out
xchg
lcall
pop
out
cmpsl
into
rolb
adc
lahf
repnz
repz
xchg
sub
call
mov
enter
sub
rolb
icebp
std
imul
pop
nop
imul
xor
js
into
sbb
adc
xchg
xchg
inc
push
cmpsb
push
push
xchg
mov
inc
jnp
leave
popa
pop
inc
add
cmp
stos
dec
jae
mov
xor
cmpsb
and
mov
fstl
or
out
mov
mov
push
cmp
cmp
stc
push
jle
adc
or
scas
flds
mov
out
fimuls
jo
add
xor
xchg
pop
fs
shl
bound
push
add
add
popa
xorl
cli
sarb
outsl
jnp
pushf
lahf
int3
cli
lea
adc
sahf
xchg
dec
out
out
aam
aam
xchg
cmc
mov
xor
or
add
stos
hlt
cli
into
jmp
pop
jl
adc
add
adc
aad
pop
dec
pop
mov
movsb
mov
mov
mov
add
gs
ficoms
fwait
mov
cmpsl
cmp
jae
and
in
ret
add
imul
pop
movsl
or
int3
inc
add
or
inc
add
out
add
add
add
add
adc
add
iret
push
add
add
xchg
push
stos
hlt
jne
testl
divb
jb
xor
rcrb
jbe
mov
lret
lds
mov
shl
call
cltd
mov
mov
js
push
mov
repnz
xchg
and
rolb
add
ja
dec
dec
xchg
mov
dec
int3
sbb
ret
xchg
adc
icebp
push
lret
sahf
sbb
cmp
mov
addb
pop
mov
dec
mov
hlt
imul
inc
pop
les
nop
adc
xlat
cmc
inc
jl
push
mov
jge
add
dec
xor
and
inc
add
fimuls
xchg
cvtps2dq
je
add
out
inc
pusha
add
mov
fildl
add
pop
pop
addb
sbb
outsb
mov
int
lods
pop
gs
into
arpl
pop
notb
add
mov
scas
sbb
cli
jne
and
dec
outsb
xchg
xchg
mov
push
shlb
cli
xor
xor
cmp
add
addb
mov
xor
clc
aad
xchg
or
add
jbe
sbb
sbb
cmpsl
add
int
mov
and
mov
fstps
stos
jecxz
popa
xorl
leave
adc
push
js
das
pop
sub
sub
dec
jp
test
sub
dec
das
fisttpll
and
aam
push
mov
add
in
xchg
arpl
scas
push
mov
xor
jecxz
rep
xchg
or
push
sahf
push
jp
adc
imul
xchg
cmp
pop
xchg
pop
and
daa
hlt
lahf
cmp
fmull
mov
pop
imul
sbb
dec
and
add
dec
push
add
add
fsubr
popf
cli
stos
hlt
popf
insl
mov
sub
inc
add
in
movsb
or
aam
add
cmp
dec
xor
lods
xor
add
or
push
add
add
shl
fists
jmp
add
pop
es
dec
rcll
push
adc
pop
push
inc
add
add
push
mov
scas
jge
cmp
cs
add
lods
and
rolb
add
inc
add
xchg
cmp
cmp
xchg
sbb
push
shlb
xor
out
mov
jnp
mov
jae
mov
test
rcr
or
push
jnp
xchg
ja
xchg
imul
fmull
and
ret
sub
inc
add
sahf
rcrl
icebp
or
aas
insb
adc
sub
mov
add
fcoml
stc
cmpsb
lret
mov
push
movsl
pop
ljmp
fcoml
leave
push
and
in
push
ljmp
call
addb
lods
shll
push
mov
in
je
in
push
das
popa
sub
and
jo
repnz
add
xchg
add
add
popf
daa
add
movb
aad
pop
in
stc
movsl
stos
push
cmp
cli
pop
ret
pop
mov
mov
insl
dec
gs
pusha
add
and
cld
push
ss
inc
mov
cwtl
lret
into
jno
add
sub
add
jmp
sahf
mov
xor
imul
pop
cmp
or
xor
stos
fiadds
pop
push
fsts
cmp
xchg
shl
imulb
and
fs
aas
cmp
mov
and
add
addb
sbb
mov
or
mov
or
sbbl
add
push
push
test
mov
pop
fdivr
dec
xlat
mov
pop
ror
xor
add
add
rcrl
pop
pop
mov
mov
les
inc
pop
inc
add
add
incb
rolb
test
lds
loope
lea
add
js
add
ss
cli
xor
ljmp
out
add
push
jae
sub
cltd
and
xor
inc
popf
add
mov
mov
pop
or
dec
sahf
stos
mov
push
jecxz
lret
xchg
add
lahf
fucomi
cmpl
lahf
sbb
movl
fwait
repz
jns
cltd
pop
mov
mov
mov
sti
sub
and
lock
outsl
xor
xor
add
pop
sbb
fwait
les
jo
xchg
and
lea
out
pop
sbb
mov
les
leave
xlat
movsl
sub
mov
mov
add
add
stos
fimuls
in
push
nop
jno
add
mov
ret
lret
sub
add
fs
test
add
xchg
cmp
jae
loopne
push
sub
lods
inc
lret
add
dec
pop
fwait
xor
sub
outsl
jmp
push
fsub
daa
mov
jo
rolb
push
sub
addb
adc
add
sub
les
pop
addb
leave
cmp
shl
addb
mov
mov
push
dec
outsb
pop
or
hlt
ss
pop
fdivrl
xchg
fwait
add
mov
xchg
in
inc
add
rcrb
adc
or
pop
rcl
mov
fisubrl
add
mov
outsb
into
jg
inc
jae
leave
sub
add
addr16
mov
mov
sub
js
sub
rorl
sbb
popf
jp
ss
add
loop
arpl
jbe
les
and
add
arpl
aad
add
inc
int
pop
mov
add
shll
cltd
decb
xchg
loopne
loopne
and
xchg
inc
out
insb
arpl
fisttpl
xchg
add
pop
aaa
ljmp
int3
adc
in
add
nop
int3
add
push
jp
xchg
les
adc
lock
add
add
or
test
out
adc
in
rcll
ljmp
scas
sbb
sub
icebp
stc
push
repz
push
stos
dec
test
or
sub
and
push
or
sti
addb
xchg
shll
into
mov
jnp
sarb
xchg
adcl
addr16
jne
mov
dec
push
div
loop
pop
push
pop
adc
mov
rcr
push
sar
mov
popf
call
add
adc
dec
leave
xchg
dec
sub
xor
aas
inc
outsb
fidivrs
mov
es
push
pop
out
into
xchg
shl
mov
inc
add
pop
insb
mov
imul
xor
lods
or
add
popf
jge
fwait
scas
jno
mov
mov
mov
ret
outsl
jge
sub
add
jae
std
jno
cmp
loope
popa
sub
mov
add
insb
dec
cld
mov
sub
add
mov
mov
adc
lea
add
pop
pop
jp
test
pop
lahf
in
out
xor
in
mov
out
and
hlt
js
or
jg
inc
fldcw
add
ja
and
out
jg
pop
jno
or
xchg
fidivs
ljmp
or
mov
add
inc
int3
fsubrl
sub
ljmp
pmullw
lret
lret
add
add
sub
shrb
iret
ja
fcoms
cmp
add
and
cmp
jae
mov
in
jno
push
test
inc
xor
dec
sub
pop
inc
add
mov
enter
test
add
jo
jle
sub
or
add
push
dec
sbb
add
or
mov
ret
fcmovb
mov
fsubrl
add
hlt
ret
pop
sbb
lcall
aas
xor
jo
mov
xchg
in
arpl
loop
dec
sub
into
and
dec
push
and
sahf
and
lret
jo
mov
jns
and
sub
add
adc
sub
in
jnp
add
mov
and
xor
aas
mov
popa
mov
add
je
ss
cmp
dec
aas
movsl
test
aaa
loope
icebp
pop
movsb
jae
sbb
movsl
jb
rolb
dec
xor
dec
cmpsb
xor
xchg
mov
or
loope
outsl
cwtl
ss
int3
jno
out
push
mov
inc
sahf
and
insb
hlt
scas
rcrl
push
les
xor
cmp
mov
or
xchg
dec
push
sahf
push
xor
in
mov
stos
leave
movsl
cmpsl
test
loop
jno
out
aas
adc
mulb
mov
lds
add
jl
std
fs
in
ss
xor
rolb
or
clc
jne
lods
push
call
leave
fbstp
out
mov
push
enter
and
mov
inc
cmp
scas
cmpsb
jp
fldenv
lret
ret
xchg
aas
test
sub
dec
mov
pop
mov
in
ret
push
adc
cmp
movsl
mov
fwait
push
jbe
push
mov
mov
jno
and
mov
sbb
cmp
add
popf
fidivl
pop
adc
mov
add
xchg
mov
in
add
pop
mov
fisttps
imulb
fdiv
orl
push
das
mov
nop
inc
mov
mov
pusha
add
push
shll
push
shl
and
add
jle
leave
cmpl
addb
dec
fisubrs
sub
adc
movsl
insl
xor
loopne
pop
xor
lea
add
addb
inc
add
ljmp
fidivs
xchg
bt
ffree
insb
sub
aaa
jns
add
and
cmp
sahf
mov
and
cmp
inc
add
imul
les
fwait
ja
iret
xor
ret
adc
mov
leave
fwait
ja
ret
shrl
inc
scas
inc
add
and
xor
xor
scas
jg
dec
lds
je
fstl
jne
mov
call
lahf
popa
lock
mul
mov
adc
mov
movups
dec
pop
mov
inc
fldt
and
cmp
inc
add
sub
push
addb
dec
sub
scas
push
ret
fmulp
rcrl
sub
les
cmova
add
or
push
mov
jne
cwtl
pop
imul
xlat
add
push
cmp
test
test
mov
pop
mov
lods
mov
addl
in
std
aad
in
add
and
pop
sub
mov
mov
add
ljmp
fisubl
rorl
and
sahf
jae
sbb
jmp
mov
add
inc
add
loop
push
cmp
or
xchg
pop
jb
add
jp
xchg
push
out
lock
in
rclb
push
jb
lahf
bnd
repz
movsb
xor
xchg
xor
adc
shrl
jno
pop
push
jno
mov
cwtl
adc
clc
bound
xor
mov
loop
jmp
add
fldt
mov
mov
mov
mov
outsb
shl
lods
rolb
add
xor
mov
sbb
pusha
add
cmpsl
popf
mov
xor
inc
add
xchg
pop
cmpsb
xor
cmp
jae
mov
adc
aaa
orl
imul
or
testl
push
imul
cmpl
popa
dec
cmpsl
daa
or
jl
sbb
push
loop
inc
add
add
add
mov
lock
jbe
push
add
xchg
in
add
nop
fs
pop
cmpsl
fwait
xor
fsubl
or
test
add
push
insl
sarl
in
js
and
into
xlat
xor
xchg
xor
ds
add
insb
xchg
out
jle
mov
inc
dec
fcomps
mov
add
inc
dec
out
or
out
adc
push
movsl
mov
sub
mov
lret
outsl
push
ret
mov
fcompl
aas
mov
scas
fnsave
mov
outsb
and
push
mov
outsl
test
add
sbb
mov
pop
imul
xchg
movsb
xchg
jno
xchg
mov
add
xor
or
mov
pop
jnp
push
add
push
inc
test
inc
ljmp
aad
jp
push
cmp
lods
ret
repnz
sbb
sub
push
fstpl
jo
nop
cmc
div
aas
adc
or
ret
inc
add
jne
mov
or
cmp
gs
fs
jl
pop
inc
add
lea
clc
xchg
fidivl
mov
shll
insb
inc
add
or
mov
add
cmp
add
ljmp
gs
repnz
push
dec
cmp
mov
mov
cmp
add
aaa
sbb
push
inc
loop
push
neg
repnz
push
lock
mov
add
mov
sbb
outsb
daa
imulb
jnp
bound
clc
fldcw
xor
and
add
je
lret
add
add
jp
outsl
mov
lods
xchg
les
mov
in
lods
icebp
lahf
and
ljmp
test
push
mov
jmp
push
mov
ret
push
xor
movsl
push
push
push
loope
cmp
xchg
sub
inc
test
mov
sbb
mov
adc
movsl
xchg
int
stos
sbb
push
mov
or
stc
push
les
fucomip
xchg
mov
mov
add
sbb
mov
lcall
add
inc
insl
sub
and
push
jnp
imul
dec
fimuls
rolb
add
shll
aaa
in
pop
xchg
mov
cmp
sbb
roll
add
push
adc
push
and
insb
add
adc
frstor
dec
nop/reserved
sub
add
mov
lds
loopne
push
lods
mov
adc
fldenv
add
mov
jns
cmovo
xchg
shll
lahf
xor
push
inc
add
inc
add
add
movsl
cmp
adc
test
cmp
hlt
cmp
xlat
adc
int3
clc
shrb
clc
out
in
xchg
jne
inc
add
dec
push
fbld
sbb
mov
enter
mov
add
movsb
jle
push
adc
das
xchg
icebp
mov
out
out
xchg
pop
and
xchg
outsl
mov
mov
cmp
jns
jg
mov
jecxz
inc
add
jmp
push
jle
adc
xlat
cld
fisubl
dec
or
or
add
and
test
push
mov
jg
test
rcll
lret
addb
pop
mov
out
leave
adc
sbb
mov
and
lcall
addb
dec
dec
sub
imul
jecxz
and
maxps
divl
sub
testl
and
cltd
jecxz
pop
jns
mov
rcl
or
cmpsb
flds
dec
stc
leave
push
stc
out
int3
lock
fdivl
in
or
test
cltd
lret
sbb
rcll
fistpl
fucom
je
pop
loope
mov
incb
nop
rclb
mov
mov
sbb
mov
jns
add
add
jecxz
adc
mov
js
lods
pop
call
jne
jne
shll
jno
incb
fcompl
mov
fistps
movsb
sahf
push
gs
push
sahf
jb
lds
push
adcl
imul
pop
addr16
imul
cmpsb
ss
add
adc
or
into
sbb
int3
mov
fs
mov
enter
add
jns
add
fwait
adc
cwtl
orl
jle
and
and
add
mov
mov
sub
mov
push
pop
out
pop
roll
mov
clc
or
jp
jno
add
and
ficoml
xor
fidivrl
jle
es
clc
rcr
or
enter
sub
xchg
lret
mov
scas
sbb
add
aas
push
jge
cmp
and
push
dec
aaa
ljmp
dec
addb
xchg
pop
mov
cmp
mov
cmovno
xchg
fs
cmp
stos
movsb
addb
pop
sbb
fisttpll
and
out
ds
jo
mov
out
stos
popa
movsb
movsb
xchg
adc
enter
ret
scas
mov
sub
dec
push
or
sub
ret
pop
out
mov
adc
testb
scas
push
cmp
sti
stc
xchg
mov
inc
and
pop
cmc
sub
movb
dec
mov
insl
xchg
int3
mov
in
ss
add
mov
fists
cmp
jmp
test
add
push
movb
mov
pop
jmp
mov
add
add
rolb
enter
inc
add
aaa
fldl
xchg
dec
leave
mov
xchg
mov
add
bnd
xor
push
mov
pop
jnp
cmp
add
rorl
add
push
xor
mov
out
push
xor
push
add
fstp
sub
filds
ret
lock
into
fwait
inc
add
jp
lea
add
in
push
add
jmp
push
push
sbb
push
cwtl
or
or
movsb
outsb
stc
movsl
lock
shll
out
and
das
subl
loopew
sub
push
pop
aaa
sbb
push
pop
test
dec
pop
jo
lea
pop
es
cli
mov
repz
and
shlb
mov
ja
pop
mov
rcr
clc
scas
in
in
fildll
aad
add
fldt
nop
xchg
xor
gs
movsb
int
jno
dec
lcall
pop
add
sar
xchg
aad
scas
sub
dec
dec
mov
hlt
mov
in
outsb
testb
shrl
dec
fbld
mov
movsb
mov
lea
add
add
pop
jmp
sub
jg
cmp
lods
lods
jns
ljmp
rcll
sub
ret
icebp
iret
pushf
clc
addb
xchg
push
lock
je
lds
cmp
pop
test
push
mov
into
sbb
gs
js
jg
mov
dec
jno
pusha
add
insb
add
mov
add
xlat
xor
pop
mov
jno
add
popl
cmp
push
dec
cli
addb
outsl
outsl
pushf
out
fistps
xchg
insb
push
add
stos
mov
push
xlat
popf
enter
push
add
sbb
xchg
pop
cmp
aaa
push
rcrl
jmp
add
push
and
add
in
jno
and
mov
je
rcr
and
cs
rolb
adc
mov
add
sbb
xchg
cs
sbb
jo
or
adc
int
add
mov
sbb
add
push
mov
mov
or
and
pusha
add
push
out
add
mov
in
add
adc
mov
int
push
add
push
inc
mov
inc
add
in
aam
pop
mov
or
add
lret
addr16
adc
loop
std
add
cs
inc
movb
push
fadd
add
sub
mov
insb
cmpsl
xchg
das
pop
or
sub
in
mov
int3
iret
sub
lea
and
inc
add
in
rclb
pop
insl
mov
cmp
dec
movb
jnp
sbb
mov
inc
jno
inc
xchg
addb
insl
loop
add
enter
ljmp
sbb
scas
push
cmpsb
mov
add
cld
pop
out
dec
lds
xchg
popa
repz
mov
iret
lods
jbe
into
sbbl
mull
into
sub
xchg
xchg
cmp
sbb
sbb
bswap
xchg
dec
xor
add
mov
roll
pop
xor
mov
jecxz
repz
jle
or
inc
push
lret
sahf
inc
add
loope
xchg
pop
mov
xor
lret
movb
add
add
xor
call
popa
test
or
cmp
cmp
mov
pop
sub
inc
and
add
push
ljmp
mov
add
mov
faddp
das
pop
xlat
and
sahf
ret
inc
add
imul
xchg
xor
add
add
loopne
arpl
mov
pop
les
or
adc
add
je
sbb
adc
mov
loop
sbb
push
ret
pop
dec
mov
xchg
xchg
call
fdivs
loop
mov
jns
pop
mov
dec
imul
iret
es
js
or
xchg
inc
add
nop
and
add
and
jmp
testl
add
add
and
xchg
out
add
xchg
or
jno
movsb
push
pusha
add
cmp
mov
addl
push
roll
add
addl
repnz
jb
add
insb
pop
pop
insl
push
fwait
mov
add
mov
mov
cltd
push
xchg
xchg
xor
testb
pop
test
cmp
sbb
mov
lea
add
or
add
daa
xor
dec
sbb
and
addr16
arpl
imul
pop
mov
flds
add
mov
pop
mov
insb
sarl
push
and
cmp
jb
cmp
add
add
pusha
add
pop
cwtl
jnp
pop
ffree
add
sbb
pop
rcl
hlt
mov
pop
data16
push
pushf
cwtl
xor
les
xor
xlat
incl
negb
out
repz
stc
mov
jns
cwtl
enter
call
lock
push
xor
mov
xchg
fmull
rcrb
jmp
or
push
pusha
add
mov
add
in
jl
xor
or
es
add
jb
sbb
push
add
inc
int3
cmpl
into
stos
fwait
and
stc
repnz
loop
std
test
cmc
aaa
push
mov
add
iret
rorb
xchg
cmpl
addb
cld
sub
das
sub
jg
jbe
inc
add
cmp
pop
jo
jg
ret
sub
out
sti
lock
add
mov
ret
in
push
push
mov
jnp
mov
jbe
add
xchg
dec
adcl
jmp
jbe
push
add
add
cmp
inc
and
std
mov
cmpsb
dec
addr16
lret
rolb
int
mov
sahf
mov
cmp
cmp
jnp
jns
mov
fimuls
inc
addb
adc
repnz
xchg
ds
loope
stos
xor
popf
mov
scas
pop
add
cwtl
mov
inc
ret
add
jecxz
jns
das
cmp
popa
ficoms
mov
imul
jl
out
cli
inc
add
sbb
cmpsb
push
cmp
inc
test
sahf
or
rcrl
add
mov
push
rcrl
repz
jne
add
shll
incb
mov
cli
fcmovb
add
addr16
frstor
add
mov
cmp
gs
lret
bound
aaa
pop
movb
out
stc
loope
not
xor
in
lret
test
add
cmp
and
movsl
idivl
sub
add
ficomps
es
jo
mov
add
aas
pop
stos
xchg
fs
dec
inc
add
pop
mov
jns
test
addb
cmpsb
pop
mov
dec
pop
pop
mov
call
int3
add
and
xchg
loope
sub
inc
add
mov
out
sub
aas
push
and
mov
cmp
jmp
cmpsb
cmpsb
mov
jae
dec
jge
add
mov
aas
xchg
lcall
sbbl
icebp
movzwl
rolb
dec
and
jae
out
xlat
imul
pushf
pop
scas
cmp
stos
or
mov
dec
jmp
inc
add
xchg
enter
fucom
inc
adc
mov
push
mov
xchg
movsb
mulb
jl
sub
notl
push
add
jb
cltd
outsl
orl
sub
xor
insb
mov
adc
add
out
or
mov
mov
adc
outsl
jns
inc
add
setae
pop
bound
addb
lods
dec
mov
pop
lods
xor
sbb
addb
outsb
mov
pop
push
aas
xchg
pushf
and
scas
add
mov
xchg
add
clc
xor
lret
das
pop
mov
dec
mov
cltd
xchg
inc
add
inc
cmpsl
lahf
cmp
adcl
sbb
dec
mov
divl
js
movsl
mov
push
sahf
aas
lret
fisttps
sbb
fidivrl
add
add
push
push
sub
scas
pop
push
and
es
ds
adc
xor
sub
sbb
cmc
push
cmc
dec
jo
ret
push
arpl
in
ss
les
mov
push
cli
add
push
pusha
add
mov
xchg
leave
or
mov
insb
in
data16
mov
inc
add
mov
fs
ret
rorl
cmp
mov
mov
mov
hlt
dec
dec
inc
add
int
cwtl
test
cmp
add
stos
sbb
jbe
outsb
adc
sbb
lretw
add
les
mov
adc
daa
divb
xchg
mov
xor
inc
add
add
or
sub
test
jb
bound
iret
pop
movsb
push
xor
in
sbb
aad
stc
addr16
xchg
pop
mov
dec
fsubrp
aam
scas
jl
mov
and
call
stos
xor
push
push
mov
ret
sbb
fstpl
and
dec
cmp
sti
loop
push
push
xchg
sbb
in
stos
pop
fcmovnb
add
leave
popl
add
and
add
movsb
cmp
sbb
mov
inc
std
xor
ss
daa
imul
iret
pop
or
dec
fwait
divb
in
xor
jl
pop
hlt
das
es
fnstsw
xchg
dec
std
iret
add
popa
shll
sbb
dec
mov
test
xor
leave
dec
filds
faddl
stc
inc
add
test
or
mov
add
in
jb
xchg
popf
pop
xor
sub
dec
outsb
add
dec
fwait
daa
jle
add
or
pop
sbb
push
mov
scas
out
jle
arpl
xlat
push
adc
repz
popa
leave
xor
add
outsl
fnstsw
add
outsl
imulb
xor
jge
clc
mov
sbb
xchg
push
jno
pop
mov
pusha
add
or
jno
add
mov
popf
mov
negl
shll
add
sahf
sub
fistl
dec
shl
rcll
jg
add
add
loop
in
push
mov
nop
ljmp
adc
sbb
loop
les
mov
ret
test
jmp
cwtl
dec
out
mov
add
or
add
cld
cmp
add
imul
fistpll
gs
push
stos
cmp
lea
setp
insb
add
push
sbb
xor
mov
faddp
add
in
inc
dec
mov
inc
cvtps2pi
cltd
jns
lea
cltd
mov
jae
add
add
filds
lcall
pop
add
jns
pop
xchg
push
and
imul
pushw
mov
decb
lret
dec
sbb
push
ja
addb
icebp
in
mul
dec
sub
shlb
add
daa
pop
cltd
mov
pop
mov
data16
xchg
repnz
add
popa
mov
stos
fisttps
mov
test
jecxz
cmp
or
and
in
leave
clc
mov
arpl
and
push
pop
movb
adc
dec
testb
sbb
cmpsl
push
lret
sbb
fidivl
ja
sbb
jge
sub
inc
mov
cwtl
adc
add
movsl
push
inc
sub
or
js
xor
xchg
loop
push
jl
aad
or
add
loopne
jbe
or
cmp
bnd
add
add
stos
lock
and
fbld
leave
cmpsb
sbb
push
stc
dec
call
adc
xor
orl
loope
stos
push
add
mov
out
add
jp
cmp
sbb
sbb
jo
sub
hlt
mov
push
fwait
shrl
int3
enter
add
movsb
xlat
inc
add
add
push
sbb
into
cmpsb
test
out
dec
adc
lret
or
adc
not
xor
imul
sbb
jmp
mov
xor
popa
insl
test
add
mov
cmc
in
addb
cmp
add
rolb
and
test
pop
mov
pop
aas
stos
sub
in
or
mov
aas
gs
pop
cs
out
xor
int
pop
movsb
cmp
add
test
enter
dec
rcll
adc
push
mov
mov
scas
sti
xchg
cmp
adc
pop
outsb
pop
xlat
movb
add
repz
add
add
das
std
push
lcall
out
mov
xor
push
mov
arpl
ljmp
lea
and
stos
sbb
dec
movsl
jl
push
xchg
sbbl
lret
inc
movsl
data16
bound
push
sub
cmpsb
xchg
adc
add
mov
imul
cmp
cmp
data16
lret
pop
lods
insl
mov
xor
lods
shlb
add
fsubrp
sahf
rol
sub
je
inc
add
xor
sbb
lret
pop
cs
jno
add
in
mov
add
jg
scas
jle
dec
fiaddl
or
xor
shlb
inc
jns
dec
dec
pop
jae
test
icebp
or
and
add
jnp
sub
mov
add
pop
push
push
shrb
cmp
add
add
movsl
out
inc
add
mov
pop
dec
fcompl
add
loope
je
inc
sbb
rol
rol
lret
dec
cmp
jl
inc
shrl
lea
addb
sar
in
pop
stos
addr16
xchg
jge
mov
sub
adc
cmpsb
sbb
insl
mov
mov
jne
push
add
das
cld
mov
add
jbe
inc
add
jp
test
mov
cmpl
add
mov
xchg
pop
or
lods
out
in
sub
andl
adc
sub
loop
hlt
xor
sbbl
jmp
add
inc
les
fmul
adc
sub
mov
push
cld
dec
mov
jecxz
scas
aaa
pushf
adc
aaa
lahf
ret
cmc
ds
jne
push
inc
mov
call
ret
xchg
aaa
notb
test
je
add
pop
call
jne
cld
or
xlat
sbb
dec
call
ds
lret
insl
dec
outsb
stos
add
mov
push
or
sbb
addb
jg
cmp
mov
jno
add
or
fnstenv
lahf
xchg
mov
addl
leave
sub
sbb
mov
sbb
adc
add
movsl
sub
loop
data16
add
xor
sub
aad
push
jl
cltd
xor
pop
scas
push
pop
nop
ljmp
dec
xchg
mov
push
int3
out
jae
aaa
arpl
xchg
xchg
adc
add
lret
xlat
push
mov
mov
addr16
lcall
mov
les
xchg
fiaddl
out
loopne
iret
je
mov
add
fbstp
std
ja
add
lock
add
mov
add
dec
addb
mov
inc
add
pop
outsl
test
mov
inc
xor
cmp
out
inc
push
mov
in
fildll
test
addb
scas
mov
and
jge
cli
lcall
push
pop
cmp
add
jae
ret
dec
push
push
mov
dec
pop
mov
push
mov
jne
cmp
mul
xchg
out
sbb
mov
nop
and
xor
sti
mov
je
add
add
push
repnz
bound
cmc
mov
lock
lret
jmp
or
mov
ljmp
loop
add
daa
xor
pop
pop
gs
das
cmp
icebp
je
adc
ds
xchg
in
jns
mov
sbb
rolb
add
andl
add
or
cs
imul
addb
adc
ljmp
jp
push
addb
mov
int3
xchg
jb
out
jb
jecxz
mov
and
or
ret
pop
test
repz
lds
push
xor
test
mov
clc
mov
jae
out
jecxz
push
insl
add
sub
push
inc
add
inc
jne
cmp
xor
stc
pop
mov
aad
xor
push
ljmp
stos
clc
pop
xchg
lods
mov
add
or
inc
cmc
in
scas
mov
add
add
dec
imul
push
ja
pextrw
out
mov
push
add
add
aas
cmp
xor
sbb
pop
mov
cmp
fadds
add
out
add
jg
test
pop
inc
sbb
dec
mov
jl
xor
lods
jmp
mov
xor
fwait
call
cmpsb
jmp
loope
jbe
cmp
pusha
add
adc
mov
stos
adc
int3
cmp
and
sar
xchg
pushf
nop
inc
mov
mov
je
loop
stos
cwtl
inc
iret
jmp
sbb
dec
shll
xchg
les
dec
inc
test
cs
jp
movsl
sub
mov
mov
movsl
lcall
jle
sbb
test
mov
scas
outsl
or
aas
cld
dec
fs
xor
pop
jbe
sub
add
add
es
idivb
movsl
adc
andl
loop
addb
and
test
bound
pop
mov
xor
cmpsb
lods
and
int
mov
push
adc
clc
mov
sub
enter
push
mov
and
jne
and
lock
mov
fwait
cwtl
add
or
fstl
xchg
or
cmpl
cld
in
aas
daa
jb
push
dec
in
cmc
cmpsb
mov
add
dec
mov
in
test
mov
adc
nop
dec
mov
std
sub
and
cmp
je
push
sub
int3
jbe
addb
dec
jp
sub
pusha
add
mov
insb
addb
lahf
cmp
jle
lcall
xor
mov
mov
add
sub
lods
push
mov
in
dec
cltd
xchg
sbb
or
mov
cmp
negl
bound
or
mov
inc
add
push
int
add
fwait
pop
jecxz
add
mov
jb
inc
add
in
mov
jmp
cs
mov
mov
lret
add
jne
in
push
stos
aas
les
or
dec
cmp
jns
movsl
lods
mov
add
xlat
xor
jecxz
add
orl
dec
mov
aas
jge
jmp
xchg
cltd
push
add
hlt
inc
add
add
cmp
loope
mov
mov
testb
addb
jbe
and
mov
iret
or
jmp
cltd
fs
xchg
pop
add
jge
lret
iret
sub
orl
ss
inc
add
jmp
dec
dec
sti
dec
mov
pop
loopne
add
icebp
lds
pop
mov
add
rolb
push
orl
popa
mov
push
bound
fs
ret
cltd
adc
xor
int
add
jle
testb
push
inc
add
outsl
and
mov
add
jmp
into
ss
jg
std
xchg
push
cmpsl
jns
lods
int
mov
jae
pusha
add
ret
addr16
aas
int
icebp
in
pop
mov
mov
icebp
stc
fbld
add
mov
in
cmpsb
dec
push
and
sbb
lds
shl
mov
add
and
int3
dec
mov
icebp
add
je
xchg
push
add
pop
repnz
add
xlat
out
pop
pop
mov
addb
testb
jg
push
add
cli
ret
movsb
mov
movsl
adc
fwait
push
into
into
xorl
movsl
je
adc
paddd
pop
inc
add
inc
add
adc
lods
dec
pcmpeqw
lcall
outsb
je
sub
sahf
xor
in
cltd
std
add
enter
call
jmp
popf
xor
mov
xchg
cld
push
fldenv
mov
add
lock
stos
dec
mov
addb
into
mov
push
or
jo
imul
leave
sbb
into
xchg
jp
xchg
cwtl
mov
pop
jbe
jo
and
push
push
aas
ja
shll
call
adc
jne
dec
in
pusha
add
xchg
mov
repnz
sbb
jns
sahf
pop
inc
add
shr
jns
sub
add
nop
dec
outsl
stos
pop
and
xchg
sti
sbb
push
jmp
jae
inc
add
dec
push
add
shr
or
test
push
or
std
pop
pop
sbb
mov
out
jne
or
pop
out
ret
inc
sti
gs
fwait
lret
jb
lds
fcoms
in
push
pop
jmp
cmp
add
pop
jae
xchg
pop
pop
pop
cld
pop
and
aas
scas
ret
push
add
and
jnp
and
xlat
cld
sbb
mov
in
divb
lahf
std
imul
cmpsb
push
xchg
std
ret
mov
imul
data16
xor
pusha
add
movsl
js
sbb
add
mov
mov
out
add
mov
ret
stos
pop
iret
xchg
pop
outsl
pop
jp
icebp
sub
test
cld
outsl
jmp
sbb
addb
gs
and
lea
enter
pop
pop
es
outsb
push
add
mov
sub
mov
cwtl
jae
lcall
add
sti
repz
ss
sub
or
pop
into
cmp
add
and
cmpsl
jns
xchg
cmp
or
imul
xor
pusha
add
in
int
out
xchg
pop
push
call
pop
lcall
and
sbb
stos
push
and
and
rolb
rcr
sbb
add
in
pop
sti
imul
lret
sub
or
fwait
aam
adc
out
nop
jge
add
pusha
add
out
cmpl
xchg
push
jle
mov
mov
les
lds
push
push
jno
push
sub
adc
or
test
inc
add
mov
pushf
lret
jnp
lods
clc
cmpsl
addb
jne
js
hlt
push
add
daa
aad
int
rorl
movb
push
int3
sub
cld
daa
cmp
in
add
push
xchg
or
stos
stos
xchg
push
pop
rolb
inc
add
cwtl
stc
insl
mov
outsl
add
mov
les
sahf
mov
cld
cmpsb
mov
aam
incl
and
fcoms
push
push
mov
and
inc
inc
add
inc
mov
pop
popf
and
jmp
cmpsl
pusha
add
int
mov
add
nop
xor
mov
add
roll
imul
push
pusha
add
das
nop
stos
inc
add
ds
dec
push
jmp
adc
ljmp
das
sbb
clc
pop
adc
pop
push
mov
xchg
mov
push
jno
lds
xchg
rolb
push
lret
pop
mov
add
test
jle
sbb
in
and
mov
dec
xchg
dec
leave
xor
sub
xchg
inc
add
shrl
int3
push
mov
movsl
push
add
adc
addl
adc
ret
aas
cmpsl
cwtl
dec
in
fisttpl
jl
add
in
xchg
push
inc
mov
call
dec
xor
scas
aaa
or
xchg
lret
jo
or
cwtl
outsl
pop
sub
mov
fcompl
icebp
cltd
lcall
cmp
xchg
shll
add
or
repnz
rolb
add
lock
ja
ja
sub
popa
out
lds
int3
les
sbb
popf
rcr
fnstsw
fbld
push
adc
add
sbb
jo
xor
gs
mov
and
mov
mov
pop
imul
adc
add
lret
jb
push
loope
add
jmp
icebp
sub
pop
pop
mov
lcall
int3
sahf
gs
jle
add
and
push
hlt
int3
jmp
mov
inc
adc
repz
in
cmc
add
mov
sub
pushf
mov
jmp
push
les
mov
sub
in
add
movsb
jbe
dec
pop
xlat
mov
call
and
fidivl
pop
adc
push
mov
xor
inc
add
and
mulb
cmp
sbb
loopne
xor
loop
movsl
fisubrs
mov
repz
test
sub
fldt
pop
jne
scas
das
jns
lcall
nop
add
lea
les
adc
sub
mov
mov
test
out
and
xchg
ret
mov
add
popf
push
sub
push
ret
mov
aas
sub
repz
xchg
mov
addb
dec
sbb
xchg
xchg
data16
shll
stos
sbb
mov
pop
in
and
in
mov
dec
shrl
addr16
xor
add
in
pop
xchg
jmp
lea
mov
jnp
and
lea
push
mov
add
sbb
adc
add
sbb
es
or
daa
fimuls
popa
sub
pop
mov
cmp
sub
rol
xchg
jb
sub
xor
push
incb
jp
mov
xchg
mov
or
xchg
mov
add
or
cmc
loop
out
xor
movsb
nop
aad
int
les
lock
stos
loope
stc
bound
lret
popa
hlt
xchg
xor
movb
adc
xchg
test
xor
movb
mov
daa
imul
adc
addb
or
addb
scas
sub
jecxz
mov
fs
ss
push
iret
js
push
cmpsl
inc
push
cmp
sbb
mov
mov
stc
sahf
cmp
lds
or
mov
out
pop
mov
pusha
add
rolb
std
sub
add
cmc
xchg
aas
pop
aam
das
shll
jge
test
add
dec
cmp
inc
add
call
jnp
add
mov
pop
xor
or
repz
jg
and
add
movsl
adc
dec
div
out
push
ljmp
gs
adc
leave
loopne
test
pop
aaa
lods
mov
aaa
dec
cmp
and
xor
inc
jns
add
psubsw
rcl
inc
add
mov
lods
sti
inc
add
xchg
inc
add
xlat
push
dec
xor
jmp
dec
push
push
pop
xor
idivb
ljmp
add
xchg
or
add
test
loop
mov
jno
int
shll
aaa
push
mov
or
pop
push
add
jo
xor
lods
sub
addb
mov
rcll
and
int3
lods
adc
xchg
in
cmpsl
call
xor
fstps
sti
push
add
adc
mov
or
pushf
cmp
ds
rorl
leave
in
setge
add
cmp
push
jge
dec
pop
jns
lret
test
push
movsl
ret
hlt
popa
js
and
xor
push
and
jmp
add
sti
leave
dec
out
add
inc
add
add
add
movsb
ja
xchg
mov
inc
ret
pop
imul
mov
dec
lahf
cmpsb
xchg
sbb
xchg
jmp
int3
pop
cmc
xor
or
in
and
cli
sbb
mov
add
sbb
addb
mov
mov
mov
jp
inc
pop
es
add
aaa
lret
xchg
sbb
ja
ret
in
je
inc
add
sti
pop
ds
pop
int3
enter
sub
push
push
mov
dec
into
dec
pop
insb
lea
mov
add
dec
mov
or
mov
les
jb
shl
sbb
xlat
rolb
call
sbb
dec
addr16
sbb
in
sbb
add
call
or
mov
je
in
push
sbb
repnz
xor
lods
sahf
cli
fucomip
cwtl
js
negb
mov
stos
jg
loopne
and
push
or
mov
imul
sarl
adc
pop
aas
icebp
std
pushl
and
or
out
flds
shrb
add
in
adc
or
add
mov
leave
popa
fbstp
add
nop
xchg
jae
mov
add
push
cmp
clc
mov
call
jg
adc
fmull
jmp
push
fidivrl
pop
fisubrs
lea
mov
mov
in
xor
add
out
pop
shll
mov
imul
xchg
lods
test
add
testb
cmp
add
add
mov
adc
das
addr16
add
fidivs
fwait
je
add
ja
jg
fadds
aas
xchg
inc
data16
mov
jns
or
mov
popw
xchg
cmp
movsb
jge
push
out
repz
add
xchg
in
mov
cmc
sub
lahf
popa
addl
pusha
add
mov
jp
sub
mov
repz
mov
pop
fcompl
test
add
pop
dec
lds
sbb
cmp
pop
xchg
stos
iret
aad
pop
mov
push
fistps
loop
add
pop
int
fistps
cmp
sub
or
add
outsl
rolb
add
and
loope
lcall
cmc
add
sbb
iret
xor
mov
dec
jmp
movb
fidivrs
ljmp
lcall
xor
bound
imul
push
pop
lock
or
rclb
xchg
mov
dec
push
sbb
mov
repz
fnsave
rolb
jo
dec
stc
movb
test
add
test
sub
inc
add
mov
push
test
or
inc
add
stc
lahf
push
dec
fs
aam
js
jecxz
mov
jmp
repnz
cmp
add
fsubrs
lcall
xchg
call
mov
mov
add
add
add
sub
pop
insb
jo
int3
xor
mov
mov
sub
aas
loop
fisubrl
bound
movsb
stc
in
scas
in
xor
imul
add
sbb
add
add
sbb
mov
sub
push
js
shll
pop
pop
enter
jmp
jb
jne
xor
ja
lret
and
std
inc
add
sti
push
fucomip
enter
pop
add
jno
adc
cmpsb
inc
mov
cli
mov
lahf
repnz
fs
push
xor
add
repz
sbbl
outsl
and
cmpsl
out
out
mov
add
mov
sbb
sbb
push
cwtl
mov
aad
lock
xchg
or
pop
dec
push
jmp
mov
dec
cld
imul
mov
pop
dec
les
mov
nop
cmp
pop
mov
test
mov
in
andl
push
add
scas
cli
les
push
int
pop
pop
dec
outsb
outsl
inc
add
jle
dec
jns
sbb
lods
sub
ret
mov
jnp
jmp
es
push
addb
iret
xor
ja
adc
movb
pop
aam
mov
add
jne
mov
fistpl
notl
xchg
repnz
push
loopne
es
push
mov
mov
mov
dec
lods
cli
mov
testb
xchg
fiaddl
loop
mov
add
push
or
fisttpll
mov
jno
lcall
filds
fnstenv
push
or
pop
aaa
dec
adc
test
xchg
cmp
add
lcall
add
push
fstps
xchg
cmp
into
add
cwtl
xchg
out
jns
pushf
sti
stos
jae
in
or
push
stos
inc
sub
mov
add
repz
pushf
scas
push
add
lret
int
mov
bound
in
add
bound
in
pop
cli
cmpsb
jne
ret
pop
addb
int3
in
setge
xchg
cmc
in
add
xor
push
mov
adc
clc
push
fbld
xor
pop
mov
jb
adc
imul
movsb
mov
into
dec
jb
pop
or
push
fsubrs
in
push
push
jl
es
mov
mov
add
mov
xor
sub
das
adc
add
mov
pop
or
into
sahf
sbb
lret
mov
add
add
aam
pop
mov
jae
add
jge
jp
mov
pushf
jle
inc
mov
and
or
test
add
add
or
mov
push
jno
xchg
sbb
jae
and
in
push
xor
add
les
outsb
pop
ja
mov
mov
fst
add
add
pop
adc
addl
cmp
out
pop
roll
push
stos
imul
pop
fisubs
dec
or
push
adcl
sarl
fwait
adc
and
fwait
xlat
shl
loope
mov
cmpsl
mov
divb
aaa
jne
and
pop
out
fstpt
stos
mov
jle
xor
mov
stc
test
shrb
xchg
adc
xchg
sbb
and
mov
imul
lods
mov
add
addb
ficompl
test
lods
cltd
lahf
push
add
out
pop
enter
pop
add
pusha
add
inc
add
mov
cld
addr16
dec
push
mov
and
fstps
cmc
scas
or
mov
add
add
nop
adc
scas
lret
cwtl
fisubrs
add
mov
add
jle
pop
pop
cmpsl
mov
mov
in
movsl
pop
out
movb
jg
pop
xchg
out
or
decl
and
movsl
cmp
es
lock
mov
sarl
ror
lds
push
mov
inc
and
push
imul
fsubrs
shll
test
inc
data16
inc
add
outsb
jge
loope
bound
cmp
aaa
dec
pop
adc
sbb
push
add
or
inc
add
idivl
stos
and
dec
or
jl
sbb
push
add
in
loop
push
lea
sbb
mov
stos
or
or
aaa
mov
adc
addb
push
and
add
mov
imul
lock
cwtl
cmc
jp
push
jp
add
pop
aam
scas
out
imul
xchg
fstl
jg
push
add
xchg
mov
mov
pushf
inc
std
loopne
test
dec
or
mov
jmp
fwait
mov
sbb
repnz
and
dec
aad
cmpsb
push
push
dec
pop
or
sub
rcl
pop
xor
sub
push
lds
and
roll
ret
push
mov
lret
and
dec
fisttpll
sbb
adc
and
lods
sub
lock
nop
sbb
mov
mov
lea
popf
leave
loopne
stc
mov
cmp
jecxz
add
add
fs
sarl
add
inc
add
pushf
clc
lahf
int
in
lock
pop
dec
pusha
add
sti
dec
pop
xor
add
push
add
orl
stos
mov
pop
dec
ds
repz
pop
cmp
mov
loopne
lods
jo
test
xchg
add
xor
jae
loope
jecxz
inc
add
inc
add
pop
sbb
cmpsb
xor
add
call
add
adc
cmp
adc
push
add
movsb
and
mov
andl
fnsave
push
ficomps
divb
jne
cmp
xor
or
push
das
adc
and
addb
es
stc
sub
pusha
add
jecxz
nop
mov
sub
add
outsb
mov
lcall
xchg
mov
push
cmp
mov
add
shlb
icebp
fbstp
cmp
xchg
sti
pop
aaa
and
test
jmp
sbb
fcomps
xor
addb
add
push
pop
addr16
je
mov
push
out
pop
adc
lret
dec
push
add
and
or
mov
xor
movsb
and
xchg
xchg
jno
sub
xchg
jg
xor
and
cmc
cld
cld
or
lahf
dec
add
inc
mov
ficompl
push
int3
xchg
imul
cmc
dec
dec
mov
push
and
in
addb
fimuls
cmc
in
lock
push
pushf
movsb
cmpsl
js
pop
mov
movb
imul
add
sbb
inc
push
xchg
inc
adc
xchg
mov
test
dec
outsb
lock
add
orl
push
inc
add
add
mov
test
xchg
pushf
jo
aaa
xor
add
outsl
repnz
adc
ret
mov
add
push
leave
bound
dec
inc
loop
jle
jbe
inc
mov
pop
mov
fidivrl
xchg
and
nop
inc
add
dec
sub
mov
shrb
sub
add
icebp
sub
add
lahf
lret
mov
push
add
xchg
mov
adc
das
inc
repnz
adc
jl
mov
loope
addb
xor
adc
out
xor
sbb
xor
inc
add
inc
add
pusha
add
aas
fcoml
addl
mov
or
push
and
subl
sub
jns
in
adc
lret
add
sub
jb
mov
lods
jp
add
js
mov
arpl
cltd
jbe
add
out
sub
xchg
sbb
jg
aas
pop
jo
movsb
addb
cmp
push
stos
cmpsl
shll
and
js
push
add
cli
into
mov
adc
ds
sbb
leave
mov
xchg
into
sbb
icebp
add
cmp
add
out
insl
sarb
mov
repnz
jo
lods
mov
push
cltd
fnstsw
adc
testb
add
and
mov
lods
rclb
push
or
sti
xor
and
push
lea
aas
shrl
adc
addb
mov
pop
pop
imul
cmp
xchg
icebp
cmp
scas
xor
icebp
je
mov
add
xchg
jl
les
mov
xor
xor
sub
xor
pop
repnz
add
dec
xor
lock
add
pusha
add
stos
or
pop
sbb
adc
shlb
das
xor
stos
adc
pushf
bound
xor
mov
mov
mov
xor
cmpsl
cmp
cli
bound
jnp
mov
add
adc
fwait
mov
mov
jl
pop
cmp
incb
lret
xchg
loope
xorl
xchg
inc
add
sub
nop
cmpl
push
cli
ficompl
pusha
add
mov
sahf
data16
bound
outsb
and
sahf
dec
faddl
add
sbb
push
lret
jmp
lret
push
popa
decb
rcll
mov
and
add
adc
add
test
into
xor
clc
xlat
stos
es
ds
push
cmp
bnd
add
repz
add
add
cmp
mov
jns
add
das
mov
jae
das
ret
mov
cmp
ficompl
or
push
jmp
add
push
mov
add
je
in
dec
sbb
leave
sub
inc
jmp
xchg
mov
inc
add
push
xor
cmp
inc
repz
pop
leave
aad
xor
add
and
add
xor
and
sbb
mov
or
pop
shll
je
pop
cs
mov
push
add
arpl
out
inc
add
sahf
xor
daa
push
xor
int
jae
ficomps
add
scas
fcomi
out
jge
leave
rol
add
int3
pop
loopne
loopne
cwtl
daa
mov
jae
insb
push
hlt
mov
or
inc
xchg
mov
xchg
cmp
test
pop
sub
xchg
jmp
push
sti
push
mov
pop
add
repnz
mov
pop
add
adc
out
add
movsl
jecxz
push
jns
inc
push
movsl
aad
and
icebp
lock
les
ret
shll
es
pusha
add
test
mov
jo
add
mov
js
mov
in
cmp
pop
fiaddl
fists
xchg
inc
add
jmp
sub
add
xor
test
mov
jle
and
sub
inc
add
push
mov
testl
xchg
jl
inc
es
jns
dec
sbb
ret
push
mov
das
inc
mov
sti
shll
mov
shl
imul
xchg
pop
xchg
ss
subl
test
dec
js
xlat
ja
mov
test
call
clc
outsl
out
out
lea
add
ljmp
sbb
stos
mov
inc
add
iret
and
and
or
xchg
outsb
push
xchg
daa
test
or
add
inc
add
jne
xlat
or
add
insb
sub
test
sbb
mov
daa
arpl
mov
out
mov
xor
repnz
add
repnz
adc
mov
add
add
cmp
dec
icebp
jne
jp
pop
cmp
leave
movb
mov
test
cmc
mov
out
ljmp
cmp
ret
sahf
add
sub
dec
dec
pop
or
shll
pop
imul
inc
add
mov
popf
fisubrl
adc
xor
mov
xor
popa
jp
pop
xchg
or
test
add
icebp
sbb
jmp
add
inc
xor
test
jae
jmp
or
add
das
and
cld
fbstp
jno
cmp
fisubl
das
adc
lret
and
adc
loope
enter
add
jp
aas
push
push
cld
pop
repnz
add
jg
cli
dec
push
xor
movb
mov
inc
sbb
insl
inc
add
loope
stc
cmp
inc
add
push
add
mov
idivb
pop
test
nop
aam
cmp
je
aaa
cmpsl
sahf
jle
xchg
add
mov
mov
movb
and
cltd
sahf
pop
or
inc
mov
imul
sub
mov
call
iret
push
shl
mov
jecxz
add
lock
mov
jecxz
mov
loope
leave
inc
add
jmp
mov
cmp
pop
pushw
push
add
fmulp
inc
add
scas
addb
inc
add
jbe
push
add
loope
add
pop
dec
jmp
ljmp
add
pusha
add
add
out
adc
push
or
imul
push
jb
dec
aaa
xor
movb
hlt
jmp
incb
test
xchg
mov
stos
jae
push
mov
icebp
aad
test
adc
xchg
xor
ret
fucomi
mov
sbb
push
mov
xchg
push
mov
fmuls
nop
push
mov
cmpsl
shlb
rcr
fs
xor
addr16
jle
mov
out
xchg
pop
fistl
loope
cmp
mov
xchg
shll
mov
add
aaa
das
cmp
add
sarb
dec
cltd
std
pop
xlat
push
cmc
pop
mov
xorl
out
push
aaa
ljmp
or
lahf
xchg
ja
jecxz
add
xchg
fs
cmpl
movb
mov
ja
or
dec
pop
mov
nop
pusha
add
daa
add
and
add
leave
jae
mov
sub
add
insb
push
add
les
test
adc
and
push
aaa
cwtl
mov
xor
lock
out
out
rep
push
test
stc
test
xlat
inc
sub
jp
sarl
push
mov
xchg
out
and
push
mov
inc
xlat
repz
pushf
jae
popa
xchg
movb
pop
sti
repnz
add
fbstp
lods
and
ja
ja
add
add
add
repnz
add
lea
or
mov
in
cli
aaa
aaa
cmpsl
pop
mov
out
cmpsl
cmpsl
push
movd
jmp
xchg
test
dec
cmpsl
loop
loope
ss
and
add
sbb
inc
outsl
jmp
add
push
add
sbb
fs
sub
jno
xchg
clc
or
aad
dec
jle
xor
dec
in
jle
jmp
xor
sbb
xchg
xchg
icebp
push
add
adc
dec
mov
mov
inc
add
outsl
jo
addr16
cmp
xor
addb
fwait
lods
jecxz
adc
add
ret
nopl
adc
loope
mov
push
jge
daa
sub
test
add
test
jo
cwtl
js
cmp
inc
jo
clc
mov
je
dec
test
sti
cld
lds
or
sub
and
jle
jns
std
rclb
or
add
sahf
in
addr16
mov
movsl
fcomi
inc
add
lock
movsb
sar
sub
pop
jle
int
or
int
pop
adc
and
imul
xchg
daa
ret
sbb
roll
jecxz
and
xchg
rolb
pop
xchg
inc
add
jo
pop
addb
sub
addb
add
sbb
lret
add
ror
repnz
in
and
mov
add
mov
pop
push
dec
cmp
jo
mov
insb
imul
pop
stos
js
push
mov
outsl
hlt
popa
xor
scas
fstl
add
cmpsl
adc
fiaddl
add
add
add
addb
add
lods
fstpt
inc
add
and
es
jns
xor
mov
add
shrb
push
jae
add
add
xor
add
ljmp
imul
push
mov
pop
rolb
dec
pop
pop
fstpt
pusha
add
fs
sub
mov
xor
rcrb
lods
xchg
jp
add
dec
mov
xorl
xchg
movsl
sub
inc
add
rolb
add
mov
stc
nop
jb
int3
js
jle
popa
push
mov
xchg
ret
add
add
out
and
stc
nop
jb
add
add
lods
mov
push
mov
xchg
ret
add
pop
stc
nop
jb
add
add
mov
stc
nop
jb
rorl
add
loop
ja
add
stc
nop
jb
jnp
pop
add
into
mov
push
mov
xchg
ret
push
add
movzwl
stc
nop
jb
add
add
into
xor
stc
nop
jb
js
out
bound
jno
push
stc
nop
jb
scas
andb
add
stc
nop
jb
loop
add
add
je
nop
cld
jmp
idivl
mov
jb
add
and
mov
test
ja
test
nop
cld
jmp
add
xor
add
ret
add
push
mov
xchg
ret
add
shr
push
stc
nop
jb
add
xlat
dec
xor
cld
mov
stc
nop
jb
add
sti
nop
cld
jmp
add
add
jb
add
add
out
add
lret
sbb
mov
xchg
ret
mov
and
xor
jmp
stc
nop
jb
mov
xor
nop
cld
jmp
add
mov
stc
nop
jb
add
or
nop
cld
jmp
add
test
and
add
nop
jb
add
mov
push
stc
nop
jb
add
add
sahf
call
nop
cld
jmp
add
aas
add
push
mov
xchg
ret
adc
add
mov
push
mov
xchg
ret
mov
add
ja
push
stc
nop
jb
add
mov
add
sbb
sar
jb
add
pop
mov
stc
nop
jb
adc
xor
add
and
push
mov
xchg
ret
cmp
inc
xlat
lods
push
push
mov
xchg
ret
jnp
adc
jmp
stc
nop
jb
mov
add
stc
nop
jb
mov
add
add
in
repnz
add
pop
stc
nop
jb
add
out
xor
add
stc
nop
jb
add
sahf
mov
push
mov
xchg
ret
add
add
and
rep
stc
nop
jb
add
push
aad
add
cmp
mov
xchg
ret
lcall
filds
xchg
ret
xlat
cwtl
ds
out
pop
pop
stc
nop
jb
add
push
add
repnz
push
stc
nop
jb
cwtl
add
push
add
ret
das
mov
stc
nop
jb
add
fiadds
into
fiaddl
xchg
ret
mov
stc
nop
jb
inc
and
adc
lea
jmp
mov
xchg
ret
pop
mov
inc
add
jmp
stc
nop
jb
xor
jnp
dec
push
mov
xchg
ret
add
mov
stc
nop
jb
lea
add
inc
add
push
stc
nop
jb
add
and
add
cmpl
lcall
mov
xchg
ret
add
inc
cmp
rep
stc
nop
jb
cmp
add
and
pushl
push
mov
xchg
ret
adc
pop
pop
push
push
mov
xchg
ret
cmp
and
subl
push
mov
xchg
ret
decl
jb
xor
add
stos
mov
stc
nop
jb
cwtl
add
in
add
adcb
xor
std
pop
stc
nop
jb
fiaddl
add
add
cmp
cld
jmp
aad
roll
rcrb
push
nop
cld
jmp
add
cmp
mov
and
out
and
push
mov
xchg
ret
add
add
or
stc
nop
jb
push
aam
and
add
stc
nop
jb
cmp
add
sub
mov
xchg
ret
popa
add
jbe
xor
clc
nop
cld
jmp
sarl
add
loop
xor
stc
nop
jb
add
bound
test
ret
stc
nop
jb
jnp
add
add
lcall
nop
jb
xor
cld
push
mov
xchg
ret
cmp
add
ret
cmp
jne
nop
cld
jmp
push
xlat
mov
cmp
pusha
add
icebp
gs
movb
add
stc
nop
jb
xlat
cmp
ret
add
nop
jb
add
rolb
add
aam
mov
stc
nop
jb
out
add
movsb
or
mov
xchg
ret
push
pop
and
push
xor
inc
add
mov
stc
nop
jb
mov
aas
bound
sbb
nop
jb
add
mov
mov
xchg
ret
add
add
nop
xor
add
nop
jb
roll
mov
lcall
nop
jb
add
es
push
nop
cld
jmp
add
add
push
push
push
mov
stc
nop
jb
cwtl
fs
xchg
ljmp
stc
nop
jb
add
and
cld
jmp
add
inc
add
add
xor
stc
nop
jb
jnp
add
cli
stc
nop
jb
add
mov
shl
inc
add
nop
jb
out
add
xor
nop
cld
jmp
popa
add
add
add
add
nop
cld
jmp
add
xor
nop
cld
jmp
add
pop
add
dec
add
mov
stc
nop
jb
out
push
push
push
mov
xchg
ret
add
add
nop
jb
mov
add
in
lea
popa
add
nop
jb
add
add
add
sub
nop
jb
add
mov
add
add
nop
cld
jmp
ret
add
lock
jle
add
stc
nop
jb
add
out
add
or
cld
jmp
add
cwtl
aad
lea
xchg
mov
jb
pop
add
xor
call
stc
nop
jb
mov
and
jo
push
mov
cmpsl
in
sbb
repz
scas
add
jg
pop
shl
nop
cld
jmp
xor
ret
add
add
dec
test
nop
cld
jmp
stc
add
add
out
inc
add
add
add
bound
test
clc
add
inc
add
cwtl
add
or
jne
stc
nop
jb
add
add
arpl
incl
jb
in
mov
in
dec
xchg
stc
nop
jb
add
add
add
and
js
nop
jb
add
push
jb
pop
push
mov
xchg
ret
dec
lea
add
dec
adc
or
cmp
ret
pop
add
in
add
stc
nop
jb
add
add
cmp
out
push
push
mov
xchg
ret
xlat
cwtl
adc
inc
jmp
call
add
add
lret
push
mov
xchg
ret
dec
mov
push
nop
cld
jmp
add
ret
add
mov
xchg
ret
add
add
xor
stc
nop
jb
es
add
fisttpll
jb
add
bound
inc
out
pop
push
mov
xchg
ret
and
add
add
rep
push
mov
xchg
ret
add
add
pop
sbb
daa
sbb
add
add
mov
add
add
int3
xlat
adc
stc
nop
jb
mov
insb
add
nop
cld
jmp
stc
in
push
lcall
mov
xchg
ret
mov
sub
sti
nop
cld
jmp
add
mov
add
push
pop
sub
stc
nop
jb
bound
ret
and
stc
nop
jb
roll
add
add
add
xchg
stc
nop
jb
add
cmp
add
mull
call
add
incl
fiaddl
add
cld
jmp
in
add
add
out
add
stc
nop
jb
lcall
pop
clc
cmpw
nop
cld
jmp
adc
fadds
sysexit
orl
nop
cld
jmp
add
add
fs
nop
jb
add
out
add
or
nop
jb
fucom
mov
add
test
or
add
out
add
bound
add
loop
push
push
mov
xchg
ret
popa
add
add
mov
xchg
ret
aad
inc
add
push
nop
cld
jmp
add
aad
aad
shlb
mov
stc
nop
jb
mov
xchg
jmp
stc
nop
jb
pop
add
jno
and
stc
nop
jb
add
and
stc
nop
jb
inc
cmp
lcall
out
inc
add
add
add
adc
stc
nop
jb
mov
js
add
pusha
add
sbb
add
stc
nop
jb
fnsave
nop
jb
inc
add
add
aad
add
aam
nop
jge
dec
add
mov
xchg
ret
inc
and
dec
add
stc
nop
jb
cmp
aad
sbb
jo
nop
cld
jmp
adc
add
dec
add
mov
xchg
ret
mov
mov
stc
nop
jb
add
add
add
loop
hlt
xor
out
out
clc
stc
nop
jb
dec
add
sti
stos
stc
nop
jb
add
push
adcb
xchg
sbb
add
out
out
add
push
nop
cld
jmp
pop
add
adc
sbb
jmp
testl
inc
mov
pop
and
nop
jb
add
push
stc
nop
jb
popa
in
xchg
jmp
jb
adc
out
add
mov
nop
jb
fadds
pop
aad
cltd
push
push
mov
xchg
ret
xor
xchg
and
pop
mov
stc
nop
jb
add
inc
add
inc
daa
mov
jmp
testl
adc
add
mov
stc
nop
jb
in
add
roll
jb
mov
mov
inc
fiaddl
incb
cld
jmp
pop
mov
mov
stc
nop
jb
cwtl
add
add
add
cmp
stc
nop
jb
add
out
xor
add
adc
call
stc
nop
jb
aas
adc
fsubrl
add
pop
aad
mov
test
nop
cld
jmp
add
add
aas
add
cld
jmp
mov
cmp
es
lret
stc
nop
jb
cwtl
add
movl
movsl
adcl
nop
cld
jmp
add
loop
add
aas
add
mov
and
stc
nop
jb
andb
add
cmp
push
mov
xchg
ret
and
pop
add
nop
jb
add
add
xchg
loopne
aad
jp
push
mov
xchg
ret
add
add
add
nop
cld
jmp
aad
add
adc
addb
pop
nop
cld
jmp
js
add
add
sub
addb
incl
int3
sarb
mov
push
mov
or
add
dec
add
aas
inc
out
mov
nop
cld
jmp
fidivrl
mov
nop
jb
add
push
lcall
fistl
push
inc
add
inc
add
gs
dec
nop
cld
jmp
add
and
add
out
pop
inc
stc
nop
jb
cwtl
pop
adc
stc
add
cmpsb
mov
je
add
nop
jb
and
and
add
stc
nop
jb
mov
mov
stc
nop
jb
pop
roll
xchg
lret
add
jb
add
add
push
mov
xchg
ret
push
add
push
xor
sbb
push
cmc
inc
add
mov
leave
and
push
mov
xchg
ret
and
loop
sti
dec
stc
nop
jb
add
aas
pop
add
add
imul
push
stc
nop
jb
add
add
add
stc
nop
jb
add
sarl
add
add
nop
jb
mov
add
mov
stc
nop
jb
mov
add
dec
add
sbb
nop
jb
add
push
ja
add
pop
push
mov
xchg
ret
in
inc
mov
int
pop
or
nop
jb
add
stc
add
sbb
jb
ret
pop
cmp
add
nop
jb
xlat
stc
inc
aad
dec
push
mov
xchg
ret
add
push
ds
push
mov
xchg
ret
jnp
int3
add
sub
mov
xchg
ret
lcall
add
nop
jb
mov
dec
add
nop
cld
jmp
mov
adc
les
adc
loopne
mov
xchg
ret
add
out
loop
mov
stc
nop
jb
add
xor
add
cwtl
push
stc
nop
jb
loop
cmp
add
jne
push
mov
xchg
ret
add
mov
nop
jb
add
add
mov
add
orb
add
aas
incl
div
add
fucomip
int
stc
nop
jb
add
mov
call
add
add
add
inc
jb
stc
nop
jb
mov
add
add
nop
cld
jmp
movl
push
mov
xchg
ret
lcall
icebp
pop
push
nop
cld
jmp
dec
add
inc
add
lods
push
mov
xchg
ret
add
addb
shll
pop
jmp
stc
nop
jb
mov
mov
cld
jmp
mov
xlat
add
es
mov
nop
cld
jmp
lcall
stc
nop
jb
add
add
dec
adc
nop
jb
add
frstor
cld
jmp
divl
add
push
lea
stc
nop
jb
add
cmp
pop
and
stc
nop
jb
add
mov
stc
nop
jb
fldl
add
xor
push
mov
xchg
ret
push
push
out
add
sahf
add
stc
nop
jb
rorl
add
push
mov
xchg
ret
add
in
pop
nop
cld
jmp
add
and
add
add
nop
jb
aas
add
out
mov
leave
stc
nop
jb
inc
cwtl
add
mov
pop
push
mov
xchg
ret
mov
jno
mov
stc
nop
jb
int3
je
aaa
movsl
insl
xor
stc
nop
jb
add
add
nop
jb
add
xlat
add
loop
pop
lods
push
mov
xchg
ret
add
aad
mov
pop
push
stc
nop
jb
add
cmp
add
dec
push
add
mov
xchg
ret
add
adc
lret
popa
stc
nop
jb
add
fcmovb
cmp
sub
nop
jb
add
imul
add
add
stc
nop
jb
add
add
add
cmp
nop
cld
jmp
aas
add
add
stc
nop
jb
stc
xor
mov
stc
nop
jb
aas
clc
decl
push
mov
xchg
ret
out
cmp
mov
push
out
inc
add
rcl
fiaddl
add
or
stc
nop
jb
mov
cld
mov
push
mov
xchg
ret
aad
add
dec
mov
push
mov
xchg
ret
add
cwtl
ss
sbb
repz
add
add
add
mov
push
mov
xchg
ret
add
aas
add
add
stc
nop
jb
ret
mov
inc
and
stc
nop
jb
add
pop
mov
adc
or
cmpsb
lock
pushl
incl
pop
add
push
mov
xchg
ret
ds
add
pop
push
stc
nop
jb
add
add
add
xorb
cld
jmp
add
inc
sub
repz
nop
jb
add
adc
insb
jne
stc
nop
jb
add
xor
sbb
nop
jb
mull
xlat
rolb
movzwl
stc
nop
jb
push
aas
add
stc
nop
jb
add
lea
push
stc
nop
jb
add
add
and
aaa
aas
pusha
stc
nop
jb
scas
add
add
add
int3
je
stc
nop
jb
add
add
nop
jb
add
jne
stc
nop
jb
add
cmp
cld
jmp
add
loop
divl
add
or
jb
stc
stc
incl
mov
add
push
mov
xchg
ret
mov
scas
add
nop
jb
mov
push
add
dec
popa
nop
cld
jmp
add
push
stc
add
push
stc
nop
jb
loop
inc
inc
add
loop
lcall
or
cltd
add
mov
cmp
nop
cld
jmp
add
rcrb
jb
popa
add
add
add
mov
nop
cld
jmp
pop
int3
dec
add
aad
lea
nop
cld
jmp
ds
pop
add
push
add
mov
add
nop
cld
jmp
add
stc
nop
jb
mov
cmp
add
stc
hlt
into
mov
stc
nop
jb
out
inc
add
mov
push
xchg
add
rep
stc
nop
jb
and
add
sarb
loop
nop
cld
jmp
scas
adc
jecxz
push
push
mov
xchg
ret
mov
jno
cs
stc
nop
jb
incl
in
add
stc
nop
jb
add
add
fcomps
stc
nop
jb
mov
fnsave
lea
nop
jb
add
cwtl
cwtl
add
stc
nop
jb
mov
out
in
push
les
lods
push
nop
cld
jmp
add
movl
inc
call
inc
add
mov
xchg
lods
shl
stc
nop
jb
add
es
mov
mov
xchg
ret
ffree
add
mov
js
call
and
add
xchg
in
jnp
push
mov
xchg
ret
pop
xlat
xlat
addb
pop
push
mov
xchg
ret
add
aad
mov
jb
add
es
aas
sub
stc
nop
jb
add
pop
js
in
test
push
mov
xchg
ret
inc
add
repnz
stc
nop
jb
mov
push
mov
xchg
ret
add
add
and
add
nop
jb
add
jnp
jnp
test
adc
add
nop
jb
frstor
cmp
nop
jb
popa
xor
mov
stc
nop
jb
stc
add
test
movzwl
stc
nop
jb
add
push
mov
mov
adc
nop
jb
add
mov
movzwl
stc
nop
jb
movl
add
stc
nop
jb
add
aas
inc
push
jmp
or
add
cmp
push
cwtl
add
jp
insb
inc
insb
insb
stc
nop
jb
add
sub
push
mov
xchg
ret
add
add
add
mov
xchg
ret
lea
mov
jb
add
cmp
add
lahf
mov
stc
nop
jb
add
fst
es
test
idiv
stc
nop
jb
mov
pop
mov
stc
nop
jb
cmp
push
dec
pushl
stc
nop
jb
add
inc
add
sti
push
nop
cld
jmp
push
out
add
out
add
push
addb
cmpl
nop
cld
jmp
scas
scas
add
xor
nop
cld
jmp
add
add
out
out
cmp
sar
pushl
add
jnp
cmpl
jmp
add
add
mov
inc
add
add
and
mov
cs
nop
jb
add
loop
popa
stc
nop
jb
neg
js
loop
add
int3
call
stc
nop
jb
push
nop
jb
out
add
loop
in
lahf
lea
push
mov
xchg
ret
cmp
jo
add
stc
nop
jb
add
lock
ret
stc
nop
jb
xlat
es
mov
push
mov
push
mov
xchg
ret
ds
iret
or
inc
add
pop
fdivr
sub
stc
nop
jb
divl
add
push
stc
nop
jb
cwtl
add
out
out
add
push
data16
dec
and
push
mov
xchg
ret
mov
inc
pusha
add
nop
jb
add
add
xor
fildl
nop
jb
add
add
lahf
push
mov
les
sahf
add
adc
mov
stc
nop
jb
movl
test
les
addb
mov
stc
nop
jb
add
add
or
stc
nop
jb
mov
movl
add
add
nop
jb
add
dec
stc
nop
jb
push
pop
add
add
xor
jmp
nop
cld
jmp
mov
add
inc
add
cld
or
xchg
add
add
mov
nop
cld
jmp
pop
add
add
es
add
incl
add
add
add
nop
jb
scas
mov
lods
add
stc
nop
jb
add
cmp
dec
jmp
stc
nop
jb
testl
decl
test
cld
jmp
add
add
mov
nop
cld
jmp
add
add
push
stc
nop
jb
add
ds
lcall
mov
xchg
ret
incl
aas
add
nop
jb
rorl
cli
mov
stc
nop
jb
cmp
imull
js
stc
nop
jb
adc
aas
mov
stos
push
mov
xchg
ret
aas
add
add
jecxz
add
nop
cld
jmp
mov
pop
pushf
push
push
mov
xchg
ret
add
mov
adc
nop
jb
add
add
add
push
pusha
stc
nop
jb
add
xor
bound
cmc
loope
sub
stc
nop
jb
add
mov
flds
xchg
ret
ret
add
add
fidivrs
nop
cld
jmp
add
fisubl
out
mov
stc
nop
jb
in
add
add
jbe
stc
nop
jb
not
add
jmp
out
aad
cwtl
add
js
mov
imul
ret
cli
decl
add
push
jne
stc
nop
jb
add
or
je
js
nop
jb
and
cwtl
fstl
call
jb
mov
insl
add
stc
nop
jb
aas
adc
nop
jb
add
add
int3
out
cltd
mov
nop
cld
jmp
jnp
adc
push
mov
xchg
ret
mul
cmp
dec
push
stc
nop
jb
in
add
idivl
add
push
imul
jb
roll
add
es
add
push
mov
xchg
ret
cwtl
add
dec
pop
push
mov
xchg
ret
fldl
add
xor
sub
enter
xchg
ret
add
dec
insb
mov
stc
nop
jb
xlat
sbb
nop
jb
add
cwtl
add
add
jb
fldl
fadds
add
and
push
mov
adc
cld
jg
cltd
enter
addr16
mov
xor
add
nop
cld
jmp
add
into
add
stc
nop
jb
int3
add
add
aas
decl
nop
cld
jmp
es
loop
pop
test
test
stc
nop
jb
add
xchg
test
jne
stc
nop
jb
add
adc
enter
orb
add
add
nop
cld
jmp
add
out
add
add
mov
xchg
ret
aas
rcrl
test
or
add
nop
jb
int3
aam
push
push
mov
xchg
ret
add
add
add
cld
jmp
add
sbbb
sub
test
stc
nop
jb
es
push
mov
push
add
in
add
xchg
and
add
in
add
nop
cld
jmp
add
inc
add
fimull
test
or
add
add
add
cmp
nop
jb
mov
mov
add
stc
nop
jb
shlb
sbb
or
stc
nop
jb
adc
add
add
loopne
testb
ja
stc
nop
jb
jnp
sbb
cmp
jb
fcmovbe
mov
nop
cld
jmp
cwtl
add
xor
adc
nop
jb
testl
inc
mov
add
add
mov
mov
and
adc
call
aad
xor
mov
xor
add
nop
cld
jmp
adc
mov
adcb
add
add
in
sti
rep
stc
nop
jb
add
fdivrs
out
shl
div
stc
nop
jb
inc
rolb
add
idiv
call
add
mov
imul
stc
nop
jb
add
notl
jge
mull
nop
jb
popa
mov
push
nop
cld
jmp
stc
stc
and
mov
ret
push
flds
xchg
ret
add
add
inc
push
mov
xchg
ret
mov
cmp
add
mov
stc
nop
jb
cmp
and
mov
aas
jecxz
add
add
add
mov
add
faddl
flds
add
add
stc
nop
jb
pop
cwtl
add
inc
aaa
pop
xchg
stc
nop
jb
aad
add
xor
jno
jne
stc
nop
jb
adc
and
push
mov
inc
add
add
inc
cwtl
mov
stc
nop
jb
aad
aas
lcall
add
lcall
adc
push
mov
xchg
ret
add
pop
shll
jl
add
fst
inc
add
add
loopne
mov
xchg
ret
out
add
addb
add
test
add
movl
cmp
push
mov
xchg
ret
add
mov
stc
nop
jb
and
pop
nop
cld
jmp
cmp
add
mov
aas
loopne
add
mov
stc
nop
jb
add
jnp
aas
mov
push
mov
xchg
ret
pop
mov
out
jecxz
mov
push
mov
xchg
ret
mov
add
rclb
incl
push
aad
neg
dec
mov
stc
nop
jb
add
add
add
out
stc
nop
jb
aas
mov
jb
scas
add
cmp
cmp
mov
test
add
stc
nop
jb
add
cmp
lret
orb
mov
pop
add
add
mov
stc
nop
jb
inc
lcall
out
stc
nop
jb
add
and
leave
mov
stc
nop
jb
cmp
inc
add
scas
push
stc
nop
jb
cmp
out
add
pop
cmp
add
nop
cld
jmp
cmp
add
cmp
addb
push
push
mov
xchg
ret
xlat
add
and
icebp
xchg
push
xchg
adc
movzwl
stc
nop
jb
add
xor
push
mov
xchg
ret
add
mov
add
stc
nop
jb
div
add
xchg
inc
loope
flds
jb
rorb
aas
mov
mov
cld
jmp
aas
fisttpll
add
add
push
mov
xchg
ret
add
dec
mov
stc
nop
jb
add
add
add
stc
nop
jb
add
nop
jb
add
add
xchg
icebp
mov
call
decl
add
push
add
stc
nop
jb
andb
int3
cwtl
aad
hlt
push
add
stc
nop
jb
add
add
loop
dec
push
nop
cld
jmp
xor
add
adc
add
dec
icebp
call
add
add
stc
cwtl
mov
je
stc
nop
jb
add
sub
je
stc
nop
jb
add
idivl
andl
addb
incl
add
int3
add
push
mov
xchg
ret
aas
add
and
xchg
xchg
ds
stc
nop
jb
add
add
nop
cld
jmp
rolb
pop
pop
add
pop
sarl
dec
outsl
popa
fs
cld
jmp
pop
add
mov
ret
cmp
inc
int3
add
add
add
push
js
add
pop
mov
nop
cld
jmp
add
add
add
out
sub
mov
stc
nop
jb
sti
add
stc
nop
jb
add
aas
add
fists
in
add
mov
iret
xchg
jmp
int
stc
nop
jb
out
movl
xor
shr
stc
nop
jb
mov
jns
cmpl
repz
incl
aas
push
add
xor
and
sbb
mov
stc
nop
jb
mov
cmp
cltd
inc
stc
nop
jb
add
int3
out
add
stc
nop
jb
add
mov
jb
addb
fiaddl
lea
nop
jb
mull
add
outsl
push
stc
nop
jb
and
add
add
push
dec
add
nop
cld
jmp
adc
add
xchg
incl
sti
stc
nop
jb
incl
add
add
stc
nop
jb
add
add
nop
cld
jmp
cwtl
add
add
fst
mov
mov
stc
nop
jb
add
mov
xchg
ret
add
add
mov
sbb
incl
out
cmp
add
sarl
mov
push
mov
xchg
ret
in
fmuls
rcrl
sub
add
pop
stc
inc
add
ret
jno
xor
push
mov
xchg
ret
add
call
stc
nop
jb
mov
add
push
mov
add
add
add
add
adc
jecxz
mov
nop
cld
jmp
inc
add
add
inc
mov
test
out
call
add
and
add
mov
push
push
mov
xchg
ret
mov
ret
lea
xchg
jecxz
call
add
sub
call
add
mov
add
pop
push
stc
nop
jb
aad
out
outsb
lods
stc
nop
jb
inc
add
push
sub
incl
add
divl
or
nop
jb
mov
add
test
nop
cld
jmp
cwtl
jnp
movl
jb
add
divl
movb
mov
xchg
ret
add
push
mov
xchg
ret
add
cmp
addb
fdivl
sar
jb
xor
adc
shr
stc
nop
jb
add
incl
add
aas
not
push
mov
xchg
ret
cmp
add
push
sar
nop
jb
add
add
popa
fstpl
stc
nop
jb
add
add
push
push
mov
xchg
ret
add
popa
stc
cwtl
cld
jl
stc
nop
jb
add
jns
jmp
stc
nop
jb
in
and
xor
pop
push
stc
nop
jb
out
in
add
cwtl
lcall
addb
add
add
or
test
add
add
nop
jb
add
outsl
arpl
add
nop
jb
adc
add
or
cld
jmp
addb
xor
adc
addb
jne
stc
nop
jb
add
mov
push
mov
xchg
ret
addb
jp
lret
nop
cld
jmp
scas
add
shll
xor
ss
jb
add
cmp
cmp
gs
ret
inc
add
jmp
or
dec
add
clc
add
push
mov
xchg
ret
out
add
sbb
add
nop
jb
add
out
add
mov
stc
nop
jb
add
add
add
js
nop
cld
jmp
incl
add
adc
nop
jb
cmp
out
aad
mov
nop
cld
jmp
pop
add
dec
add
call
xor
incl
add
add
inc
push
mov
xchg
ret
mov
mov
jb
pop
add
add
mov
stc
nop
jb
fisttpll
add
stc
nop
jb
push
mov
dec
cmp
cld
jmp
and
mov
sbb
add
mov
push
mov
xchg
ret
add
add
mov
stc
nop
jb
pop
add
jg
mov
adc
nop
jb
add
lea
add
stc
nop
jb
movl
out
call
stc
nop
jb
ret
out
ljmp
cmp
incl
in
add
dec
clc
push
push
mov
xchg
ret
scas
jnp
add
xchg
adc
add
xor
add
stc
nop
jb
cmp
lea
add
cwtl
sbb
add
add
incl
add
mov
xchg
ret
add
shl
add
add
stc
nop
jb
mov
fistl
mov
xchg
ret
add
add
pop
inc
add
push
nop
cld
jmp
cmp
add
adc
adc
push
mov
xchg
ret
aad
cwtl
not
and
xor
cmp
inc
add
popa
add
add
mov
push
mov
xchg
ret
adc
ror
nop
cld
jmp
in
xor
add
movsl
aam
in
mov
data16
stc
stc
nop
jb
loop
add
sbb
out
stc
nop
jb
aas
add
or
adc
lcall
add
pop
xor
test
stc
nop
jb
out
add
fadd
stc
nop
jb
xor
add
mov
dec
pop
stc
nop
jb
mov
in
out
add
jne
mov
stc
nop
jb
add
mov
mov
inc
in
stc
nop
jb
int3
add
xchg
or
lock
inc
add
cwtl
add
clc
dec
inc
stc
nop
jb
add
add
dec
cmp
nop
jb
movl
inc
nop
cld
jmp
add
cmp
aas
and
aas
push
pop
dec
je
stc
nop
jb
and
push
dec
add
stc
nop
jb
add
push
inc
sub
enter
addb
jmp
add
add
cmpsb
xchg
dec
mov
push
mov
xchg
ret
add
popa
add
nop
jb
add
add
jl
push
add
nop
jb
cmpb
out
xor
cld
jmp
adc
add
js
lea
stc
nop
jb
add
add
pushl
filds
jmp
add
inc
inc
add
nop
jb
add
inc
add
int
pop
jae
nop
jb
add
stc
nop
jb
js
aad
add
adc
mov
inc
add
aad
pop
jmp
popa
add
mov
xchg
ret
add
mov
fcoms
mov
xchg
ret
add
add
add
dec
push
mov
movsb
mov
add
push
test
adc
lock
mov
pusha
add
sub
pop
outsl
fwait
xor
jle
cmp
stos
loopne
jmp
sub
shll
add
cwtl
pop
jo
inc
add
adc
inc
add
addb
stos
jecxz
aam
fs
mov
add
adc
mov
mov
movsl
add
add
add
jne
jle
cli
jecxz
addr16
movsl
loop
xchg
lds
pushf
ret
push
adc
dec
sub
add
mov
fwait
dec
sarl
popa
out
push
lods
es
loope
lods
add
xchg
push
add
into
rcrl
stos
or
js
xor
add
add
xchg
push
inc
add
inc
mov
xchg
push
mov
mov
sub
pop
scas
jmp
mov
add
push
sbb
or
cld
hlt
ljmp
inc
add
or
sbb
sub
or
sbb
les
push
test
add
xchg
loope
xor
daa
adc
add
inc
push
jno
movsb
in
movsl
or
mov
clc
adc
sbb
cmp
push
ret
mov
push
xor
inc
stos
rolb
mov
push
add
leave
test
ds
mov
mov
add
and
xchg
loopne
push
test
lods
add
test
mov
and
jo
ss
aam
and
dec
test
orl
lahf
mov
add
xor
in
xchg
int
mov
lods
loopne
lcall
push
xchg
enter
pop
insl
mov
or
mov
out
ds
and
enter
jp
popf
mov
cmpsb
daa
mov
enter
out
arpl
cld
xor
sbb
and
cmp
mov
add
xor
fnstcw
adc
lods
pop
imul
lea
sbb
cmc
loope
jmp
insb
ror
cmovle
iret
jmp
mov
pop
mov
cli
fidivl
jns
mov
sarl
inc
mov
int3
sti
sbb
add
and
mov
add
add
jg,pt
inc
pop
dec
pop
push
int
xchg
pop
outsl
int3
xlat
or
das
repnz
sub
bound
loope
or
cmp
sar
daa
add
ror
pop
adc
sub
adc
jno
test
loopne
sbb
dec
mov
inc
add
add
movb
jmp
add
xchg
cmp
add
fldt
add
add
cmp
negl
inc
add
jmp
loope
and
mov
sahf
xchg
loop
lcall
dec
imull
ljmp
les
cli
inc
das
cmp
adc
shlb
add
mov
mov
mov
jno
test
sub
inc
add
inc
jg
in
pop
xchg
enter
lret
cmp
push
mov
in
out
loopne
add
add
repz
pop
bound
cli
aas
mov
add
int
pop
loopne
lock
add
addl
push
add
shll
and
gs
jg
jmp
jno
iret
rolb
mov
int3
xor
into
push
add
out
add
lcall
push
pop
jl
and
sbb
add
add
mov
jecxz
pop
jae
lahf
jne
mov
sub
push
mov
add
mov
or
xchg
out
aam
fsubl
movsb
add
stos
dec
push
jp
inc
add
push
inc
add
mov
lock
repz
and
or
bound
mov
addl
inc
add
or
sub
ret
cmp
pop
rolb
inc
sarl
addb
frstor
push
popf
ret
or
add
test
addl
add
lcall
xchg
outsb
lods
mov
mov
dec
imul
in
aad
sahf
hlt
sbb
sub
and
scas
es
stos
cmp
inc
sub
pop
mov
add
fidivl
add
adc
fidivrs
mov
or
add
lea
add
aaa
mov
add
pop
push
inc
add
je
aas
jecxz
movsb
dec
fcom
je
sarb
mov
pop
mov
fptan
mov
mov
sbb
test
or
mulb
dec
arpl
push
enter
add
ret
xchg
sub
pop
or
dec
sahf
push
daa
es
xchg
mov
mov
arpl
jmp
push
je
inc
pop
fbld
inc
push
shlb
cmpsl
adc
enter
and
arpl
addb
pop
hlt
mov
int
xor
pop
lock
mov
jno
int3
sub
call
les
popf
ret
cmp
and
jno,pt
out
xor
inc
add
out
daa
fsubr
jb
mov
push
lods
push
test
jecxz
test
inc
add
mulb
add
mov
adc
add
imul
mov
fidivrs
xlat
xchg
std
dec
incl
jb
and
pop
lcall
push
out
mov
pop
push
xor
mov
push
dec
pushf
fstpl
int
jno
cmp
xchg
push
mov
inc
mov
mov
sbb
or
mov
dec
xchg
repnz
mov
add
mov
dec
inc
cltd
mov
cmp
jbe
out
jl
jno
test
inc
pop
or
or
je
xor
fcompl
ret
rorl
filds
mov
je
arpl
leave
xchg
pop
mov
data16
adc
add
push
inc
cli
lret
test
clc
xchg
orl
cmp
imul
xor
lods
jmp
gs
jns
push
pop
xlat
hlt
push
lret
mov
fs
mov
jae
aad
repnz
and
add
sbb
js
push
or
xchg
or
int3
addr16
pushf
sub
divl
mov
xchg
inc
add
cmp
jns
or
rolb
inc
rdmsr
sub
es
fdivrs
dec
out
mov
jge
mull
repz
pop
xor
dec
xor
ja
add
dec
sub
movb
insb
cltd
fimull
xor
ss
shlb
aaa
mov
inc
add
pusha
add
test
cmp
mov
sub
mov
inc
pop
int3
push
or
das
cmp
add
addb
add
cmp
mov
dec
adc
jle
adc
enter
add
pop
xchg
leave
and
jns
inc
add
jle
xor
call
dec
xchg
mov
inc
imul
arpl
adc
sti
or
or
sub
movsb
fwait
cmp
add
jae
inc
add
test
scas
nop
mov
movsb
dec
pop
adc
jmp
cmp
int
add
lret
mov
add
xchg
std
inc
shlb
outsb
add
dec
mov
test
lock
pop
popa
nop
out
popa
test
add
rolb
and
frstor
lods
sbb
xchg
jns
or
out
and
fcoml
clc
iret
shll
adcl
jns
push
jle
pop
pop
insl
in
mov
add
sbb
mov
add
xchg
pushf
push
popaw
sub
cwtl
add
mov
mov
imul
sub
mov
pop
js
mov
or
lcall
dec
les
inc
fs
sbb
add
stos
lods
call
adc
pop
push
mov
cmp
iret
out
popa
loopne
scas
shl
ds
mov
xor
lods
mov
movb
mov
fistl
ljmp
xchg
or
fwait
icebp
jl
repnz
flds
popf
shl
in
sub
data16
mov
push
dec
stos
mov
inc
imul
addb
out
dec
imul
popa
jb
add
add
fdivs
es
lahf
sbb
rcr
aas
addb
sbb
add
loop
pop
test
sub
mov
insl
in
push
adc
xchg
xor
jecxz
push
fisubrs
addb
gs
push
imul
negb
jnp
xchg
mov
aas
mov
add
xor
mov
sbb
cmp
inc
pusha
add
divb
addl
das
xor
sbb
add
loop
xchg
clc
push
inc
add
mov
fnsave
dec
cmp
jmp
jge
rcrl
add
pop
pop
adc
cmp
add
in
push
movsb
lcall
adc
addb
test
out
inc
add
movb
and
je
ds
mov
ljmp
aad
ret
sub
in
xchg
int
aam
add
unpckhps
add
add
sbb
jbe
pop
mov
insl
xor
lahf
outsl
xchg
pop
dec
sahf
cld
jecxz
inc
xor
xor
fldcw
iret
mov
add
push
sub
popf
and
adc
arpl
vaddsubpd
or
ss
mov
add
addr16
adc
aaa
jg
bound
test
dec
fsts
in
jbe
add
mov
addr16
jmp
jnp
rolb
addr16
dec
xchg
pop
repnz
xor
test
push
add
xor
mov
mov
mov
adcl
xor
fmul
stos
adc
test
ficomps
add
jge
add
lock
xor
mov
cmpsb
icebp
jmp
add
rol
pop
leave
xor
add
popf
subl
lods
mov
frstor
cld
mov
add
jbe
fidivl
pop
fidivrl
push
movb
test
push
pop
sub
leave
rcll
insb
mov
stc
mov
mov
shl
sahf
mov
sarl
xchg
push
shlb
addb
loope
or
pop
loopne
add
das
aaa
les
add
fwait
inc
pushf
lds
xchg
jp
lret
pusha
add
mov
stc
rol
add
add
xor
es
add
int
sbb
mov
add
iret
addr16
ljmp
lods
leave
push
jne
add
cmp
jmp
sub
test
aad
leave
sub
push
bound
cmpsb
mov
mov
repz
stc
lods
clc
pop
mov
out
dec
xchg
inc
add
add
sub
mov
das
sub
mov
xor
jbe
push
mov
push
add
sub
adc
mov
outsb
jmp
add
dec
ss
imul
mov
sahf
addl
add
push
loopne
imul
inc
push
lret
mov
sub
nop
inc
add
shlb
ss
pushf
jl
or
int
mov
push
pop
dec
lds
sub
js
mov
in
das
je
mov
movsb
arpl
stos
in
add
sbb
mov
pop
xchg
pop
outsb
cmp
fistpl
xor
popf
and
xor
lock
cmp
negl
sti
andl
mov
push
push
add
and
ret
mov
aas
jbe
inc
lds
rcrb
push
xchg
jp
lcall
test
mov
jge
in
sbb
mov
sub
sbb
add
das
add
xor
add
push
aas
aaa
outsb
fisubs
lock
int
dec
addb
dec
mov
gs
sbb
ficomps
and
imul
sub
pushf
mov
add
je
push
add
jg
pop
push
inc
add
popa
and
mov
add
jns
stos
pop
cmp
mov
mov
lahf
cmp
out
inc
outsl
push
jns
out
mov
test
jb
add
movb
lock
jl
shlb
ds
push
ret
in
sbb
mov
dec
in
movb
mov
outsl
or
jo
pop
pushf
push
inc
pop
jmp
and
hlt
popa
stc
pusha
add
add
cmp
and
lock
add
popf
ljmp
mov
loopne
lock
pop
test
iret
pmulhw
add
push
add
pop
pushf
ffreep
xchg
sub
pop
xor
sub
mov
dec
mov
jnp
mov
add
incb
cli
dec
adc
xor
jmpw
xchg
out
mov
pop
imul
fildl
sahf
xor
dec
mov
ljmp
dec
int3
rcl
push
ficomps
xchg
cmp
leave
jb
add
or
mov
add
gs
fcmovu
hlt
pop
ss
push
insb
push
sub
daa
in
outsb
mov
push
cmpl
inc
add
mov
ror
xchg
int
xor
test
out
push
pop
int
scas
imul
pop
xchg
ja
xchg
sub
add
aaa
mov
das
add
rolb
xor
mov
mov
inc
add
repz
cmp
xchg
jmp
mov
and
mov
push
jge
lret
bound
pop
xor
es
push
je
sbb
mov
pop
dec
or
test
call
pop
movb
pop
ret
aad
popf
std
out
add
out
imul
mulb
add
repnz
push
add
ss
rolb
sti
mov
mov
clc
in
mov
xchg
js
sub
test
xchg
mov
jl
or
pop
negb
add
and
test
lods
repnz
and
adc
gs
jo,pt
lret
mov
rolb
cwtl
lcall
sti
cmp
jmp
add
int3
jp
movsb
xor
jp
cmp
gs
cmp
sbb
into
pop
adc
aaa
scas
shlb
int
in
in
ja
nop
add
insl
dec
addb
push
sbb
jp
inc
add
mov
inc
pop
ffree
mov
nop
fstps
add
push
push
aam
add
jae
mov
xor
std
test
fs
fnstcw
sub
sbb
fcom
lret
dec
fidivrl
mov
out
add
adc
cmpxchg
test
shll
mov
xor
mov
add
add
sbb
nop
cmp
jecxz
cmp
mov
xor
push
je
push
enter
add
loope
adc
stos
ljmp
cmpsb
cmp
out
sub
and
bound
rorl
xor
in
fcmovbe
pop
inc
add
ds
jnp
add
and
ret
pop
cld
sahf
cmc
stos
dec
jle
cmp
pop
mov
lea
sbb
sub
jo
mov
cld
push
je
call
out
std
add
mov
gs
dec
pop
push
push
cmc
jmp
mov
mov
and
mov
push
out
inc
lea
addw
add
imulb
mov
mov
add
push
push
jecxz
pop
xchg
outsb
xor
jnp
sbb
jge
jbe
out
add
lods
adc
jae
mov
jb
pop
sahf
test
adc
in
clc
pop
fs
xor
in
nop
dec
mov
jnp
dec
mov
mov
mov
pop
push
xchg
in
pop
mov
dec
movb
mov
rcrl
faddl
pop
jno
data16
sub
aad
movb
add
lods
or
add
inc
and
jecxz
xchg
xchg
ds
popa
xchg
push
or
dec
sbb
xchg
outsl
in
mov
int
out
icebp
xchg
pushf
push
mov
adc
pop
outsb
inc
add
test
mov
push
or
mov
mov
out
scas
lods
mov
xor
mov
loopne
int
popf
popf
test
mov
mov
mov
push
fbld
addb
and
aam
mov
sbb
inc
or
mov
clc
push
addb
add
inc
add
xor
jecxz
add
outsl
push
addb
push
popa
jp
fnstcw
in
adc
in
icebp
inc
add
loopne
inc
add
lods
fstl
add
dec
xchg
addr16
xor
enter
pop
push
push
movb
push
mov
addr16
shlb
scas
jl
inc
fisubrs
mov
aas
and
mov
loopne
push
jb
stos
add
inc
pop
mov
fidivs
arpl
mov
in
hlt
inc
push
shrl
fbstp
lods
pop
cs
outsb
in
and
add
roll
in
rsqrtps
add
adc
mov
lods
ret
jne
add
iret
mov
adc
or
mov
jns
sbb
dec
mov
dec
lds
dec
xchg
popf
imul
dec
sub
jle
cltd
mov
ds
cmp
fstpl
dec
lret
in
addb
pop
ja
lea
lret
loop
test
adc
dec
aaa
mov
sahf
push
add
mov
xchg
push
dec
jo
fs
cwtl
loope
stc
add
loop
into
andl
push
sbb
mov
ljmp
rorb
mov
sbb
mov
sub
or
lret
rolb
sar
aad
sub
mov
sbb
popa
cmpsl
mov
lahf
mov
std
xchg
lret
pusha
add
jmp
xor
imul
xlat
mov
mov
pop
icebp
clc
mov
arpl
dec
pop
mov
test
leave
lock
negb
and
out
cmp
das
int
add
add
jp
adc
loope
add
cmp
mov
adc
idivl
inc
mov
sub
sahf
and
hlt
push
cli
pop
mov
stos
inc
ja
mov
mov
popa
sbb
or
mov
aas
push
fmuls
bound
mov
mov
jno
and
add
or
sub
add
pop
xor
cmpsl
xor
das
jb
and
sub
jns
loopew
lods
fadd
clc
lcall
enter
jge
adc
jecxz
bound
xchg
fisubs
dec
add
cli
jge
sbb
sarl
push
push
add
loop
inc
cmp
or
dec
cmp
gs
fsubrl
movsl
dec
int3
loopne
jl
nop
jno
fidivs
ror
sti
mov
enter
jge
adc
push
add
inc
mov
ljmp
aaa
test
int3
xor
stos
popa
pop
aad
add
movb
jb
aaa
sub
cmp
cld
addb
add
mov
addb
fldl
add
jmp
jl
mov
mov
data16
add
imul
arpl
inc
add
inc
jno
call
ror
insl
jns
test
pop
testb
daa
mov
xchg
xchg
mov
add
dec
push
stc
add
push
jge
push
push
or
adc
mov
pusha
add
je
xor
fldenv
es
push
cwtl
jge
mov
hlt
test
int3
sti
inc
add
lret
repnz
pop
iret
push
shrb
cmp
mov
xchg
in
pop
bound
das
mov
aas
cwtl
cmpsb
cs
cli
push
sahf
push
sahf
xchg
dec
pop
stos
adc
insb
mov
cltd
pop
inc
push
add
popa
imul
repnz
mov
sbb
bound
iret
in
sbb
add
loope
mov
ds
jbe
mov
outsb
inc
add
addr16
inc
out
mov
bound
xchg
xchg
sbb
fsubrp
pop
mov
out
mov
cmp
jp
rcrl
fadds
add
push
addl
pop
xor
and
and
mov
and
ja
in
call
nop
mov
mov
dec
loopne
mov
in
movsb
cmp
add
aad
rcr
push
dec
mov
sbb
add
repnz
inc
push
inc
notl
cli
inc
add
ja
popf
sbb
cmp
add
mov
sub
sbb
add
hlt
cli
addb
and
adc
imulb
dec
inc
add
shrl
cltd
cmc
jecxz
inc
add
das
mov
in
sbb
or
sbb
jne
xor
mov
jae
arpl
movb
out
movb
pop
icebp
insl
mov
mov
inc
mov
or
lods
outsl
pop
dec
lods
jmp
jne
rorl
xor
iret
out
stos
leave
xor
repnz
mov
in
dec
mov
inc
add
ja
call
or
push
xor
add
imul
test
add
sbb
push
imul
cmpsb
inc
rclb
mov
dec
imul
push
xchg
jmp
test
or
cltd
push
mov
xor
pop
sarl
add
push
ljmp
psrlw
cld
cmp
out
popa
aam
rcl
inc
and
xorl
mov
add
pop
stos
fisttpl
icebp
std
loop
sbb
xchg
pop
push
add
ficoms
add
sbb
sbb
shr
lahf
lea
jae
add
jo
insb
xor
iret
imul
outsb
and
mov
fisttps
and
jmp
pop
in
dec
inc
xor
xchg
je
add
add
lcall
add
enter
cltd
mov
ret
dec
mov
xchg
outsl
lea
negb
lret
cmp
bound
dec
lcall
shrb
pop
ds
mov
leave
movsb
les
xchg
mov
adc
mov
loope
movsl
lret
test
inc
add
inc
add
jns
in
movb
or
or
pusha
add
mov
outsl
xor
pop
scas
mov
arpl
nop
insb
jne
nop
pavgb
out
push
or
shrl
mov
out
test
add
dec
mov
lret
jge
mov
inc
sub
push
stos
pusha
add
es
mov
dec
pop
filds
xchg
or
jge
xchg
mov
add
mov
clc
cmc
inc
add
xlat
pop
push
mov
mov
cmc
and
pop
mov
dec
sub
mov
call
push
add
add
xchg
jae
ss
lahf
pop
fwait
jbe
js
sub
lahf
and
rolb
jp
cmpsb
and
out
mov
mov
dec
cmc
outsl
cmp
mov
sbb
stos
mov
mov
lret
or
fisubl
bound
push
inc
pop
in
loop
add
outsl
sbb
cmp
add
or
mov
jbe
cli
jmp
sbb
add
scas
rolb
addb
mov
aad
cmp
loopne
push
mov
inc
add
mov
in
add
mov
je
scas
dec
fisttpl
push
ja
xchg
stc
mov
loopne
add
into
xchg
int3
adc
sahf
and
imul
sbb
xor
mov
jle
pop
lret
mov
jl
dec
cmp
imul
dec
add
mov
sbb
mov
cmpl
add
mov
sub
mov
clc
or
add
adc
mov
call
nop
sub
out
aas
xor
fwait
ss
pop
repz
jecxz
add
xchg
pop
pop
or
xor
mov
sti
pop
test
add
ss
add
fiaddl
pushf
add
mov
loope
into
bound
xor
je
sahf
loopne
pushf
cmp
js
mov
mov
mov
xor
xchg
sub
movb
pop
into
sbb
mov
int3
out
cltd
push
mov
sbb
adc
call
cld
divl
or
insb
push
movb
push
fdivrl
xchg
pop
cmp
sbb
mov
xor
or
jle
movsl
dec
mov
dec
pop
data16
fcoml
xchg
scas
xor
and
adc
sti
sbb
jae
cmp
js
push
mov
mov
or
push
add
and
add
or
cmp
pop
les
mov
jecxz
push
les
sub
test
cmpsb
mov
imul
cmp
add
aam
push
mov
xchg
and
rorb
addb
push
or
out
inc
add
loope
fidivrs
mov
adc
sub
incl
jae
mov
mov
test
pop
inc
push
call
movb
or
lahf
icebp
or
addb
inc
xchg
xchg
mov
add
add
add
out
loopne
pop
mov
add
and
insl
mov
and
lcall
out
add
xor
sub
adc
stos
daa
dec
jle
mov
pusha
add
rolb
pop
addb
mov
inc
sub
pop
jmp
cmp
inc
rcll
mov
xchg
addb
out
pop
push
jl
aad
add
or
imul
lds
imul
adc
add
shr
pusha
add
xor
pop
push
mov
out
cmpsl
mov
test
push
jge
movb
fs
orl
movsl
out
xchg
cmp
dec
test
stc
ficoms
mov
outsl
gs
in
mov
mov
out
mov
mov
out
lahf
xchg
xchg
xchg
scas
aad
lock
fnstenv
rolb
shll
xor
add
ljmp
mov
pop
add
push
sbb
add
in
popa
dec
in
popf
push
scas
sbb
aaa
push
jl
incl
add
sub
cld
dec
add
adc
js
xchg
and
xlat
dec
insl
addr16
sti
mov
jge
inc
add
dec
mov
push
imul
jge
and
fldl
add
hlt
pop
sub
jbe
add
test
add
push
lea
pop
inc
inc
add
inc
loop
push
pop
shrl
push
jo
dec
outsb
icebp
mov
test
ss
inc
add
add
jbe
movb
les
test
popa
xchg
ret
aam
gs
xor
pop
je
push
icebp
hlt
addl
test
cltd
ljmp
sahf
jae
and
jl
pop
push
pop
insl
xchg
lods
mov
dec
fstpl
ds
in
mov
or
xchg
xor
pop
scas
sbb
daa
movsb
or
jl
imul
rorl
lea
imul
pop
out
testb
jg
in
xor
or
call
xchg
mov
pop
push
xchg
sbb
adc
jecxz
loopne
jmp
add
outsl
scas
loop
inc
pushf
push
jo
addb
mov
add
inc
add
xchg
jbe
cli
pop
sbb
add
xchg
pop
lock
and
data16
test
dec
inc
add
lds
sbb
mov
push
insl
in
sbb
repnz
adcl
sub
fisubrs
dec
in
add
fdivs
and
push
mov
loopne
inc
add
pusha
add
cmp
test
repnz
mov
stos
sbb
xor
in
imul
pop
je
add
adc
loop
aad
xlat
sbb
or
adc
mov
notb
cwtl
push
ret
mov
lea
out
adc
mov
xchg
xchg
sbb
push
add
inc
add
xchg
cmpsl
addb
imul
pop
jle
cmpsb
daa
inc
add
popa
pop
inc
aam
sub
test
mov
mov
call
cmc
es
add
mov
mov
add
call
push
fldt
cmp
pop
dec
sub
xor
sbb
xor
pop
rcrb
lock
add
rorl
push
adc
movb
out
int
and
xchg
adc
nop
fbld
mov
stos
mov
add
sub
xchg
and
outsl
ds
push
lods
imul
jl
cmp
push
add
xchg
adc
xor
pushf
cmp
and
imul
mov
push
jo
adc
and
xchg
cmc
cs
dec
xchg
add
jecxz
mov
add
out
lods
aas
lods
push
dec
adc
mov
mov
in
aaa
mov
adc
into
bound
sub
xor
jnp
cmp
popf
pusha
add
lock
out
in
xchg
aam
loop
pop
xchg
test
lds
bnd
jl
addb
sbb
stc
mov
add
dec
fld
pusha
add
ds
std
clc
and
xor
ret
add
inc
add
addl
leave
cmp
pop
in
push
addb
mov
pushf
fs
dec
xor
fwait
pop
push
push
xor
push
out
or
push
and
test
and
insb
lcall
in
push
xor
imul
lods
xchg
fs
sub
outsl
notl
add
addr16
test
sub
pop
rolb
sti
sub
jmp
push
jp
fwait
int3
ja
mov
or
repnz
test
mov
sbb
push
xor
add
cmp
stos
fsubrl
xorl
loopne
mov
dec
xchg
lret
test
das
mov
add
mov
push
fildll
dec
rcrb
mov
adc
or
mulb
sti
fwait
out
or
out
adc
jecxz
mov
xor
xor
in
push
add
ljmp
out
mov
and
add
mov
imul
aaa
xchg
or
mov
stos
scas
mov
cmp
xchg
loope
adc
pop
movb
xchg
adc
leave
sub
in
cmpsl
xor
add
add
or
mov
mov
divb
cli
sub
testb
add
mov
add
sbb
scas
jg
loopne
fwait
xor
pop
and
ss
out
das
sub
je
lcall
cmp
mov
mov
pop
add
push
pusha
add
in
out
mov
dec
cld
cmpsb
cld
add
clc
mov
mov
or
rcll
mov
lret
lret
push
push
mov
or
jmp
pop
gs
fdivl
lds
in
inc
lret
sbb
popa
jl
add
mov
notl
add
and
out
push
jae
das
inc
add
ja
in
in
sub
xchg
inc
add
call
push
stos
pop
in
lea
lods
and
or
add
xchg
rclb
and
cmpsb
nopl
daa
lea
push
mov
mov
inc
add
std
lret
xchg
into
xor
xor
add
jl
dec
and
popa
pop
or
lret
rcl
sti
in
nop
addr16
ja
cmp
or
add
lea
shll
adc
scas
adc
inc
das
cmp
xor
cmp
imulb
dec
jp
les
insl
add
push
jbe
mov
jnp
dec
pop
sbb
aas
lea
add
bound
addb
into
fnsave
sub
pop
hlt
push
xor
sub
test
lahf
arpl
aas
icebp
imul
insb
sbb
add
add
stc
push
sub
push
jmp
ret
jne
jbe
nop
repnz
lods
popf
test
or
imul
and
fisubrs
add
mov
imul
jbe
arpl
adc
jnp
mov
cmp
je
pop
lcall
sub
pop
cmc
bound
push
ja
pop
dec
andl
out
dec
nop
mov
pop
mov
cmp
add
addr16
inc
sbb
mov
mov
pop
fcomi
popa
adc
add
add
add
jle
and
jle
add
int
scas
or
push
push
and
aaa
jg
lods
in
add
aam
cmc
mov
aam
hlt
xor
pop
jnp
cmp
mov
adc
addb
xor
outsb
mov
cmp
test
ja
in
jno
xchg
stc
ss
add
xlat
fnstsw
stos
dec
mov
repz
gs
movsl
push
int
dec
popf
or
icebp
dec
cmpsl
cmp
add
negb
rcr
mov
jle
mov
xchg
xor
mov
repz
lock
xchg
leave
push
pop
int
pop
pop
pop
xor
movsl
mov
lcall
add
xchg
incb
js
and
loope
xor
cli
dec
add
xchg
push
add
ljmp
call
jne
xchg
test
xchg
cmp
je
mov
add
imul
inc
add
popf
mov
and
enter
sbb
push
ficoms
loope
cmc
aaa
push
daa
movsl
push
ret
cs
xchg
pop
lret
fists
outsl
es
inc
add
popa
pushf
bound
pop
ja
rcl
mov
daa
loop
or
clc
mov
dec
push
push
mov
fiadds
cltd
in
add
arpl
mov
inc
add
mov
dec
inc
add
mov
cmp
aas
popa
add
test
daa
cld
and
in
sub
add
push
lods
xchg
mov
xchg
std
jnp
jne
lret
xchg
jl
cmp
and
adc
adc
cmpsl
cs
fcoms
push
or
adc
mov
vmovaps
and
rolb
clc
popf
jo
xchg
popa
lret
mov
add
fbstp
out
jl
shrl
adc
or
inc
cwtl
fwait
add
dec
ficomps
cmp
ret
adc
dec
jbe
mov
aam
jecxz
out
ds
mov
pop
fwait
or
and
cmpsb
inc
add
xchg
xchg
and
iret
mov
sbb
fcmove
adc
fldt
cld
mov
inc
add
sub
fadd
add
jle
pop
xchg
xchg
sub
nop
into
xor
ljmp
into
mov
sar
out
int
xor
je
mov
and
enter
rolb
push
add
lcall
out
mov
mov
test
sbb
outsb
addb
stos
ljmp
jae
aaa
invd
push
jb
js
fbstp
test
cmp
dec
push
repnz
lea
mov
ljmp
jno
xchg
call
nop
shrl
add
in
scas
cmpsl
mov
fcoms
add
mov
outsb
mov
sub
and
sbb
out
lea
cmp
adc
add
pop
idivl
push
cmp
loop
adc
adc
cld
push
movsl
xchg
ret
inc
add
arpl
jnp
add
sub
cmpsl
dec
mov
out
lcall
movsl
mov
add
adc
sbb
inc
imul
pop
xchg
xor
xchg
xor
in
lret
sub
jl
out
in
gs
lret
mov
jle
popa
pop
mov
cmpsb
mov
int
pop
pop
cmpsb
cmp
leave
or
push
inc
sarb
clc
and
add
cmpsl
insb
adc
sbb
lock
add
mov
js
lock
fimull
mov
or
out
mov
fdivs
push
into
cli
mov
xchg
cli
test
push
add
insl
jo
xchg
notl
pop
cmpsb
jg
movsb
shlb
sbb
add
sub
jecxz
adc
popf
push
cmp
lods
xchg
fisttps
add
loop
std
xor
imul
and
clc
std
les
and
dec
push
add
push
mov
je
mov
inc
sti
ljmp
inc
mov
pop
mov
lret
in
leave
icebp
inc
int
cmc
jnp
push
push
mov
jl
stos
push
cmp
pushf
add
fwait
inc
movsl
call
cmc
ss
pop
ret
out
cmp
jns
into
mov
std
mov
xor
inc
add
push
frstor
xchg
call
and
push
add
xor
ds
int3
add
scas
adc
fidivs
xchg
cmp
or
lock
stos
je
je
pop
fwait
nop
sub
xchg
divb
repz
ds
push
add
add
mov
clc
insb
adc
cmp
addr16
dec
xlat
xchg
xchg
std
insb
dec
cmpsb
sub
je
fnstsw
cmp
xlat
stos
dec
std
test
xchg
scas
out
jge
lahf
or
jo
test
pop
icebp
push
inc
add
icebp
fnstcw
in
push
movsb
es
or
push
je
add
iret
or
add
xchg
adc
and
add
dec
mov
mov
xchg
mov
mov
xor
ja
cli
cmp
pop
lock
dec
adc
pop
add
mov
push
add
xor
shrl
cs
push
movsb
dec
fidivl
xchg
dec
mov
aas
rolb
into
mov
shlb
jnp
adc
xlat
jb
pop
push
add
into
movzwl
leave
push
rcll
push
mov
mov
fisubrl
cltd
mov
inc
add
push
or
ret
inc
add
add
aad
ds
lds
in
add
jbe
sub
fs
jno
std
inc
add
jne
in
out
inc
add
rcr
dec
dec
in
sbb
or
aam
fnstcw
jne
jmp
cltd
or
jmp
mov
mov
imul
iret
nop
insl
sub
aaa
into
jl
std
xchg
inc
insb
mov
in
mov
scas
push
sub
adc
or
fimull
sbb
rolb
sahf
dec
test
into
out
clc
cld
cltd
push
cmp
mov
mov
imul
or
or
add
idivb
hlt
stc
ds
add
hlt
cmp
dec
fdivrl
movb
cli
loope
es
inc
add
add
push
inc
xchg
sub
xchg
mov
cld
sub
add
add
lds
in
mov
pushf
push
sbb
mov
adc
jmp
push
clc
jo
and
add
mov
mov
cmp
xlat
jnp
pop
addb
in
out
cli
mov
cltd
repz
dec
jecxz
adc
add
fistps
add
add
and
jmp
or
add
clc
push
mov
fcomps
jmp
les
pop
lock
xor
aad
push
mov
outsb
or
loop
ret
pop
push
pop
ret
dec
test
xchg
jp
pushf
push
add
dec
aad
mov
movsl
dec
xchg
gs
ja
sahf
loop
jbe
add
sub
adc
cwtl
push
cmp
pop
sbb
in
xchg
jns
mov
in
adc
mov
mov
xchg
daa
out
or
or
fistps
scas
popf
addb
mov
cmpsb
xchg
or
pop
or
mov
add
icebp
addb
fdivrs
xchg
dec
mov
add
xor
adc
hlt
sbb
cld
ret
push
add
dec
ret
and
mov
jg
test
call
inc
addb
adc
fsts
add
mov
repz
push
cmpsl
mov
sub
inc
and
pop
cmp
mov
cmc
jno
add
fidivrs
push
jmp
pop
inc
push
negb
out
loopne
jnp
jno
jbe
sbb
js
daa
das
sub
sti
lea
iret
sub
lds
adc
add
mov
cmp
xor
inc
add
inc
inc
add
xlat
jp
add
ja
push
xchg
mov
xchg
arpl
and
out
imul
scas
add
xor
into
xor
pop
cmp
in
mov
pusha
add
push
add
in
sub
jmp
add
inc
jne
add
mov
pop
add
in
jg
fbstp
in
lret
jnp
mov
xchg
negb
lods
mov
movb
and
or
movb
sti
inc
das
mov
mov
pop
mov
f2xm1
jmp
repnz
add
repz
stos
cmp
int
lahf
lods
push
popa
aas
faddl
add
repz
add
dec
pop
in
lock
into
cs
nop
insl
add
enter
rolb
icebp
daa
jmp
mov
jne
sarl
movsb
daa
movb
dec
add
imul
test
sbb
jno
cltd
pushf
push
inc
jns
outsb
call
mov
mov
add
or
aad
add
and
xchg
out
movb
daa
movsb
cmc
xor
loope
cltd
imul
xchg
addb
fisubrs
in
test
adc
jno
mov
xor
pop
add
in
xchg
add
test
imul
imul
iret
call
scas
clc
cs
fcoms
sbb
repz
cmpsl
lock
stc
sbb
push
mov
mov
aaa
repnz
pop
xchg
add
add
test
xor
jo
notb
les
loope
jae
xchg
repz
xor
cmpsb
popf
fwait
mov
sahf
push
xor
adc
xchg
mov
jl
aas
leave
data16
jmp
int
aam
cmp
aad
pop
mov
std
sbb
dec
pop
sub
loop
add
stc
adc
mov
call
adc
inc
xor
rolb
jb
in
jg
inc
add
test
fisubrs
add
sub
add
lds
and
fs
sbb
jno
gs
fisttpl
dec
lcall
push
iret
jae
xor
add
xor
push
add
xchg
cwtl
inc
les
ret
and
jecxz
out
and
or
stos
dec
mov
lahf
mov
orl
ret
pop
xlat
cmp
pop
insb
xchg
popa
fstpt
xor
xchg
call
lods
popf
sub
addb
or
test
mov
xchg
dec
sub
orl
jae
xchg
push
pop
incl
popf
xchg
sbb
pop
repz
pop
cmp
arpl
loopne
or
les
rcrl
inc
sub
dec
jbe
inc
add
mov
add
push
inc
add
xor
adc
mov
lcall
or
sub
cli
dec
stos
dec
or
js
add
out
je
roll
xor
cmp
jbe
cmpsb
adc
lds
pusha
add
xor
movb
and
bound
ljmp
xchg
pop
ljmp
ds
inc
add
pop
mov
xchg
xor
repz
pop
out
xchg
outsl
cmp
lods
cli
jne
iret
jl
add
and
and
mov
lea
fisubs
jne
inc
aas
push
mov
and
or
add
cmp
bound
sub
sti
repz
into
cmp
sti
and
push
add
pop
jmp
jbe
xchg
in
and
hlt
hlt
push
lds
minps
add
cmp
aas
cmp
call
insl
or
cmp
rep
addb
imul
sub
icebp
add
push
sar
pop
lcall
xor
arpl
push
out
mov
into
stc
jb
sbb
mov
or
mov
lods
push
in
sub
push
dec
insl
daa
cmp
pop
lods
xchg
inc
add
data16
adc
sbb
push
test
mov
add
cmpsl
into
call
test
add
adc
movsb
push
data16
add
aam
adc
xchg
mov
rolb
add
add
push
mov
dec
es
icebp
adc
xchg
and
shl
jno
repz
imul
adc
dec
addb
cmp
cmpsl
testl
push
mov
pop
sti
adc
pop
test
shl
ljmp
add
sub
ds
jmp
cmp
xlat
dec
xor
jg
pop
arpl
daa
sub
or
add
scas
mov
dec
sub
mov
pop
push
in
xlat
mov
add
xchg
jns
into
ret
cmpsl
add
bound
fsubrl
daa
cwtl
repz
test
xlat
jb
repnz
bound
out
fistps
aad
xor
dec
fs
daa
mov
test
bound
sub
jmp
loop
aas
mov
jge
aas
dec
jae
add
mov
add
adc
pop
inc
add
inc
add
int
sub
push
push
loop
mov
ds
nop
xor
data16
cmp
cld
aas
sbb
mov
push
outsb
and
shrl
test
cwtl
gs
xchg
call
add
mov
xchg
or
into
clc
mov
repnz
add
fstpt
fnstcw
pop
mov
sub
push
out
icebp
lcall
sub
push
enter
xchg
mov
mov
aaa
xchg
add
sub
push
sub
leave
mov
lahf
insb
xor
cmp
popa
mov
and
xor
fcmovnb
pop
inc
mov
and
aam
add
push
insb
test
cmp
movsb
pop
rcrl
in
js
data16
int3
shr
jle
int
stos
mov
ret
pop
cs
scas
xchg
adc
jl
clc
ja
dec
dec
pop
or
mov
pop
jl
popf
mov
dec
in
mov
dec
mov
ljmp
fisttpl
xor
xor
pop
test
jge
jnp
inc
out
in
into
jmp
push
mov
stos
or
cltd
nop
inc
stc
icebp
loope
cmp
test
sahf
jb
mov
jb
xchg
jae
gs
adc
add
fwait
add
rolb
add
fwait
dec
fsubrp
xor
add
jns
push
add
out
inc
add
in
pop
test
mov
inc
add
sub
hlt
cli
imul
in
fcoms
scas
or
pop
pushf
loop
sbb
dec
xor
das
pop
mov
dec
xchg
and
jl
jnp
test
jo
mov
add
icebp
cltd
xor
inc
data16
mov
xor
stos
cmp
dec
xor
testl
dec
loop
sbb
int3
dec
je
and
mov
sub
scas
pop
mov
out
jge
add
loop
scas
mov
das
pop
mov
cmpsw
xchg
ja
inc
add
pop
push
cmpsb
inc
cltd
dec
push
popa
testl
mov
in
push
cmc
mov
adc
jecxz
adcl
pop
dec
inc
add
add
ds
jp
dec
xor
js
out
ljmp
xor
pusha
add
add
add
cmp
mov
add
pop
xor
pop
in
inc
dec
mov
adc
inc
add
scas
xchg
cmp
sub
cs
mov
sbb
xchg
repnz
ljmp
imul
jmp
into
imul
mov
pop
outsb
xchg
sub
pop
cltd
ficompl
mov
int3
mov
adc
inc
adc
mov
das
mov
in
pop
fwait
mov
mov
cmp
dec
sub
rcrl
jecxz
icebp
in
or
xor
adc
cmp
lret
mov
push
sub
int
bound
les
insb
cmp
cmpsb
adc
repz
scas
jl
or
push
scas
popf
and
sub
int
mov
mov
add
cmc
cmp
insl
mov
mov
jnp
clc
scas
cmp
sub
jo
xchg
outsl
cmp
ret
add
add
paddsw
and
jg
fldenv
daa
hlt
inc
cmp
cmp
lahf
addl
aaa
sbb
mov
shr
pop
lea
push
arpl
out
mov
push
jo
fsubrs
and
xchg
cmp
aam
rcl
dec
sbb
cli
les
arpl
mov
sbb
scas
push
and
xchg
lea
xchg
out
fldcw
movb
mov
jb
jmp
stos
mov
xlat
sbb
scas
push
cmp
sahf
aad
push
cmp
pop
test
push
sub
add
pop
mov
pop
sub
pop
jnp
sbb
bound
jb
mov
int3
push
sarl
jno
sbb
xor
lret
xor
or
fisttps
lea
and
sbb
adc
ljmp
mov
aam
xor
je
push
fidivl
or
addb
in
arpl
mov
cld
jb
cltd
mov
rcrb
int
popf
push
aas
pop
lret
xchg
idivl
cld
mov
cmp
ja
ret
adc
add
push
add
es
mov
popf
scas
in
ds
stc
add
adc
test
jge
pop
xchg
mov
jp
int
arpl
dec
mov
dec
aad
xchg
push
in
jecxz
add
add
aaa
push
add
add
mov
dec
jecxz
bnd
mov
cmp
xor
mov
xchg
xchg
xchg
inc
add
mov
ljmp
jl
xlat
and
pop
pop
jge
into
dec
cmp
sub
out
push
add
add
jmp
pop
lds
xchg
mov
add
jbe
add
push
in
sti
mov
out
mov
mov
add
stc
pop
nop
adc
in
lods
int3
sub
push
insb
jb
add
pop
pop
in
cld
addb
mov
or
jp
ficompl
mov
and
popf
into
out
push
sahf
hlt
pop
mov
mov
fmuls
add
aad
pop
lods
in
clc
jns
fnstcw
push
aaa
pop
cmovne
leave
movb
mov
pop
incl
add
insb
lahf
call
jbe
stc
fisubl
test
dec
mov
push
mov
lds
sahf
imul
and
cmpsb
dec
out
fldcw
push
das
jne
cltd
loopne
ja
add
mov
mov
and
fldt
iret
aam
push
adc
sub
inc
sub
pop
nop
cmpl
or
aam
loop
add
sub
imul
lret
rolb
xor
insl
hlt
cmpl
sbb
push
add
cmp
cmp
cmp
or
xchg
push
adc
jecxz
pop
or
imul
or
es
filds
add
cs
stc
sub
lods
and
test
xchg
mov
daa
sbb
in
cltd
stc
cmpsl
push
add
xor
icebp
daa
sub
cld
insl
mov
mov
cmp
mov
enter
jecxz
in
stos
mov
ret
repz
add
jge
dec
jbe
cmove
pop
sti
fwait
ljmp
xor
add
jge
or
add
dec
rolb
je
add
jmp
mov
jbe
inc
add
adc
push
xor
addb
outsb
hlt
mov
sub
add
test
subl
cmp
adc
mov
icebp
lods
hlt
add
cmpsb
ds
mov
clc
pop
bound
cmpxchg
inc
add
xchg
dec
outsl
outsb
pusha
add
movsl
mov
pop
ds
and
imul
add
orl
sub
ret
in
sbb
jns
fnsave
add
cmp
dec
pop
adc
push
jmp
mov
loopne
out
mov
cs
stos
ficomps
add
popf
lret
loopne
mov
dec
daa
arpl
std
xor
shll
pcmpeqb
and
jno
test
and
mov
sti
faddl
add
unpcklps
dec
stos
out
imul
xchg
inc
add
incl
inc
add
insb
and
sub
push
add
jnp
shlb
jne
mov
add
bound
ffreep
inc
add
add
mov
divb
jecxz
mov
mov
adc
rorb
push
ret
pusha
add
movsl
lods
xchg
sub
add
add
mov
or
aaa
ret
mov
ds
rcll
lods
int3
ror
cmpsb
outsl
stos
fnsave
or
les
out
xchg
pop
pop
or
adc
je
mov
mov
mov
mull
jp
dec
add
imul
push
jb
add
sub
xchg
test
cmp
cmp
mov
jo
lock
inc
xor
mov
orl
pop
add
lahf
cmp
add
jmp
scas
movsl
or
pop
or
rorb
cmpsl
shr
adc
js
syscall
push
cmp
adc
aaa
push
push
add
mov
add
add
add
fwait
rorl
addb
into
xor
sub
out
out
xchg
mov
mov
xchg
add
rcrl
stc
fxch
incl
movb
mov
idivl
inc
jle
lahf
out
cmp
repz
inc
add
mov
stc
cmpsb
addb
popf
mov
sbb
mov
icebp
lds
push
cltd
gs
movsl
roll
inc
add
stos
in
jbe
das
jb
stos
int
ret
pop
xor
call
ret
pushl
xchg
mov
xor
add
lret
push
add
pop
inc
inc
add
cmp
bound
addb
test
pop
mov
ljmp
pop
push
pop
rep
xchg
mov
push
imul
pop
xor
jno
int3
into
jl
fnstsw
in
mov
arpl
cs
push
popa
nopl
and
ja
push
mov
xlat
test
std
pop
jg
jns
push
dec
imul
mov
icebp
dec
outsl
inc
add
xor
add
lock
jp
addb
aas
dec
shr
mov
dec
or
js
cld
popa
mov
sub
xor
jo
int3
add
cmp
or
out
xchg
lret
xchg
jae
add
cmp
add
imul
out
dec
xor
rolb
mov
jmp
jmp
jbe
dec
sbb
add
cmpsl
fstps
aaa
xchg
sub
movsl
jne
jg
test
lahf
xchg
adc
inc
in
inc
add
mov
sbb
scas
dec
or
push
mov
mov
mov
out
mov
xor
out
pusha
add
jno
lds
add
dec
xchg
mov
repz
bound
adc
daa
xor
add
jp
jbe
or
adc
sbb
testb
ret
sbb
mov
dec
xchg
fs
pop
cmpsb
mov
dec
dec
and
push
int3
stc
add
adc
xor
repnz
aas
les
fistpl
jno
pusha
add
data16
and
sub
mov
testl
add
jmp
xor
popf
out
add
mov
cli
subl
pop
and
add
lret
fmull
add
aad
sbbl
test
pushf
ss
pop
xor
xor
xor
popf
mov
iret
xchg
dec
adc
cmp
addr16
sbb
jbe
iret
testl
test
add
dec
out
test
pop
inc
add
sbb
minps
cmp
cltd
push
negb
add
inc
add
lock
outsl
repnz
mov
out
push
in
inc
add
push
pop
ds
lds
lea
mov
cli
bound
jno
jno
and
xchg
outsb
fstpt
imul
out
imul
mov
outsl
pop
and
push
stos
push
sbb
add
fldl
add
adc
add
push
test
adc
int3
stc
bound
aad
add
dec
or
scas
mov
fildl
or
add
add
and
mov
jmp
int3
pop
imull
push
xor
add
inc
add
xor
cmp
xchg
pop
repz
push
push
rolb
pop
data16
add
ffree
ja
sub
xchg
aam
and
repnz
cli
push
mov
dec
cmp
loope
add
addb
xchg
lret
fsubl
addb
test
adc
js
pop
out
push
xor
dec
pop
ljmp
or
add
sub
add
fmuls
mov
dec
cmpsl
or
jp
vpshuflw
dec
ss
addb
add
sahf
push
mov
add
pop
aas
push
fucomip
movsb
scas
mov
mov
cmp
popa
in
xchg
lret
cmp
cmp
mov
cmpl
pop
push
addb
xchg
mov
add
addb
push
imul
adc
cwtl
xchg
lret
lods
in
imul
orl
and
pop
sub
addr16
stos
inc
loop
xchg
cmpl
gs
lret
and
dec
fstpl
cmc
and
scas
sub
test
call
addb
jnp
dec
push
pop
mov
push
loopne
cld
addb
in
add
add
mov
add
adc
mov
movb
popa
pusha
add
sub
inc
add
pop
divps
aas
sbb
dec
mov
pop
xchg
mov
insb
sbb
pusha
add
or
rolb
jbe
adc
loope
add
icebp
fs
push
lods
inc
lock
cmpsb
rolb
popf
cs
and
arpl
mov
popa
hlt
fsin
inc
xchg
dec
aas
popf
addb
mov
fwait
and
inc
add
lcall
jns
jns
clc
push
testb
pop
or
add
lahf
pusha
add
loopne
repnz
xlat
sub
push
jmp
leave
rcl
jns
sub
mov
push
gs
arpl
mov
xchg
xchg
imul
mov
add
sbb
pop
pushf
sbb
repnz
or
add
es
push
push
dec
sbb
xor
add
and
adc
pop
push
push
roll
sbb
push
popf
add
icebp
fldl2t
xlat
js
fwait
mov
addb
mov
add
sub
int3
out
rcr
dec
aad
js
ret
dec
addb
pop
dec
cmp
and
mov
dec
inc
mov
add
imul
mov
push
nop
popf
test
aaa
loope
insl
arpl
xchg
xor
rcrl
inc
mov
call
popf
push
mov
sub
lret
add
pop
fisttpll
mov
sbb
jecxz
dec
jb
fisubrl
bound
or
outsl
inc
add
ds
cmp
jne
add
jg
movsl
inc
lea
roll
cmp
add
sbb
pop
pop
push
loope
ret
dec
sbb
dec
adc
xchg
pop
xchg
mov
movb
ja
adc
jnp
aas
jge
mov
les
repnz
adc
mov
popf
sub
push
leave
imul
mov
in
xchg
mov
cltd
inc
jmp
int
lods
in
pop
aam
and
push
inc
add
negl
xchg
cmp
mov
lahf
cmpsb
add
push
jns
mulb
jl
jecxz
in
mov
fiadds
stos
push
xchg
inc
add
add
ss
or
faddp
lret
pop
pop
clc
cmpl
inc
add
test
adc
fstps
fldl
sbb
dec
jle
mov
cmp
pop
lea
mov
les
dec
les
pop
gs
jns
es
mov
sub
mov
mov
xchg
idivl
add
or
inc
add
push
mov
and
cmp
lahf
mov
ja
cmp
sbb
add
lcall
ds
cmc
add
into
fidivl
xor
add
lret
push
push
cmp
dec
test
adc
mov
outsl
outsb
mov
mov
push
jae
data16
pop
ret
adc
mov
push
gs
pop
loope
xor
pushf
ja,pn
popf
cli
sti
loopne
jl,pt
jns
mov
add
movb
add
mov
ret
pop
sub
jp
mov
pop
add
push
add
mov
fst
data16
pop
pushf
mov
das
pop
xor
in
sub
mov
das
cmp
add
nop
adc
fstl
push
cltd
imul
mov
jbe,pt
add
sbb
es
push
rclb
dec
xchg
je
mov
add
lahf
ljmp
outsb
pop
repnz
gs
pop
fisttpl
shll
pushf
add
add
inc
add
cmove
cmp
mov
add
loop
push
jo
test
push
and
mov
pop
and
test
push
add
aaa
loope
add
jne
inc
add
xchg
sahf
in
cmc
cmpxchg
lds
repnz
fiadds
lds
xor
mov
out
sbb
adc
movsl
mov
inc
out
xchg
adc
lret
and
mov
cmp
das
clc
loop
in
fiaddl
add
rolb
mov
aam
out
daa
jae
inc
mov
stos
call
das
lods
dec
xchg
push
fucompp
push
clc
dec
inc
addr16
pushf
cli
inc
adc
jecxz
xor
adc
cmp
pushf
das
cld
cltd
jnp
repz
or
add
mov
lods
sub
mov
add
imul
sbb
test
sub
jle,pt
cmp
fcmovbe
push
add
std
adc
bound
jnp
xlat
js
pop
inc
idivb
jp
sub
dec
les
scas
in
add
jge
mov
test
mov
jecxz
in
in
adc
or
out
insb
hlt
xor
popa
jg
ja
push
add
push
cmp
lahf
js
nop
lods
repz
mov
fisttpl
pop
inc
add
loop
arpl
xchg
in
insl
iret
test
pop
jp
out
xor
sbb
mov
pop
fcmovb
mov
mov
add
mov
and
or
rolb
cltd
movl
ljmp
in
shll
and
jle
dec
vaddss
stos
pop
mov
add
add
add
sbb
cmp
insl
lds
add
mov
xor
inc
add
aas
sbb
sub
mov
repz
or
cmp
or
add
add
fstps
cld
lods
lret
push
aas
mov
add
cmp
loopne
mov
add
aaa
jp
addb
push
add
xor
jg
lods
repnz
add
hlt
ja
xor
out
jmp
and
in
rcr
in
lcall
test
add
cmpsl
xlat
jbe
cmp
adc
add
cli
iret
cmp
imul
cmp
push
lret
test
into
jp
sahf
mov
xor
mov
inc
add
xor
popf
frstor
shlb
ret
push
mov
add
add
add
cmpsl
adc
test
lahf
mov
loopne
jg
shlb
mov
push
jne
pop
mov
jbe
push
dec
cmp
loopne
xchg
les
loop
add
mov
add
mov
btcl
cld
add
scas
jmp
inc
ja
mov
lret
ret
clc
mov
mov
xor
or
test
add
jnp
cmp
or
insb
imul
xchg
mov
add
jmp
nop
fcmovnu
push
cmp
lods
add
rolb
roll
mov
clc
hlt
xchg
lret
dec
insl
xor
jno
push
dec
sbb
addl
pop
jb
imul
add
addb
popa
movb
push
add
rorb
xor
cmp
cmp
sub
ss
sub
jo
adc
and
cli
movsb
clc
rcpps
mov
movb
push
outsb
jb
inc
add
and
dec
addb
add
add
sti
stos
int
inc
add
lahf
sbb
lret
fistpll
out
scas
fidivrl
jl
xor
cmp
jns
mov
lcall
add
rclb
or
add
add
add
adc
outsb
js
fnstenv
mov
fmul
or
jne
nop
and
xlat
sbb
xchg
cmpsl
xchg
arpl
jns
subl
out
and
test
push
daa
cmpsb
in
add
lcall
cmp
in
sub
cmc
addb
fimuls
pop
ret
les
cmc
lea
add
ljmp
mov
cmp
jecxz
jp
mov
sub
push
insl
mov
mov
jp
sub
xchg
popa
add
pushl
flds
mov
pop
pop
ljmp
add
jecxz
aaa
inc
stos
mov
mov
aam
dec
jg
add
jmp
add
mov
pop
shl
mov
push
ret
inc
add
pop
es
mov
pushf
and
cltd
push
pop
popa
pushw
or
cli
popf
das
scas
push
es
push
push
add
mov
push
aam
xchg
movb
sbb
add
cltd
leave
push
cmp
jae
in
inc
jp
add
sbb
mov
fsubr
mov
and
rcll
daa
scas
sbb
add
popf
and
dec
mov
aad
rcrl
movb
testl
lret
inc
add
and
adc
popf
mov
call
lret
mov
addb
mov
cmp
xchg
mov
lds
push
dec
enter
xchg
sub
cmc
rcl
inc
add
div
and
lret
aad
icebp
mov
out
add
xchg
jb
scas
out
dec
mov
dec
xor
add
sarl
enter
imul
scas
cmp
add
dec
cmp
add
mov
addb
and
aam
mov
add
ljmp
pop
fimull
dec
cmpsl
out
fcoml
push
mulb
add
mov
mov
add
fmull
mov
and
add
movb
add
icebp
xor
ss
inc
add
mov
push
pop
das
lret
stos
and
sarl
jns
push
call
lret
loop
cmp
add
loop
and
je
roll
movb
push
rcll
jo
adc
mov
in
iret
jb
sti
pushf
fisubrs
pushf
mov
or
xchg
addb
inc
add
push
add
and
pop
cld
adc
dec
mov
add
fucomip
lret
adc
xchg
jmp
jmp
adc
aam
jno
test
negb
sbb
mov
or
push
add
addb
popf
test
les
out
lods
push
and
cmp
add
cmpsl
stos
pop
add
push
push
icebp
ret
ret
les
idiv
pop
repz
ja
mov
cmp
push
mov
imul
inc
enter
loopne
popa
sahf
lahf
pop
and
testl
mov
xchg
lods
popa
push
dec
jge
push
imul
mov
add
je
insb
cmpsl
in
mulb
sahf
sub
loopne
mov
out
add
xlat
adc
not
stos
inc
add
jecxz
lcall
mov
add
push
adc
mov
push
add
loop
pop
fwait
xchg
cs
add
add
xor
mov
cmp
test
aaa
repnz
lcall
ret
xor
cli
lods
popa
adc
enter
push
loope
mov
inc
add
inc
add
ja
and
mov
arpl
dec
jecxz
push
incl
xchg
add
cmp
adc
add
lea
fmuls
lea
push
imul
jge
push
add
mov
test
cmp
leave
jnp
in
mov
mov
xchg
insb
xor
leave
pop
out
sub
mov
add
orl
lea
sbb
mov
mov
ficompl
dec
mov
xchg
mov
outsl
inc
add
imul
or
jmp
push
jno
pop
aad
cmpsl
roll
loop
or
lahf
or
add
ds
repnz
test
mov
xor
cmp
fisubrs
xchg
jge
add
pusha
add
call
rolb
xor
jne
mov
add
jnp
add
push
jns
add
sub
jl
or
fisttpl
stc
sub
loope
sub
movsl
pop
mov
cmp
fsts
call
add
fistpl
and
lea
mov
das
mov
cmpsl
jecxz
cli
rclb
cltd
addl
cmp
jg
xor
xor
jecxz
mov
mov
lea
mov
mov
and
outsb
inc
add
pop
fwait
stos
push
ficoms
test
sbb
inc
xchg
pushf
outsl
push
jmp
aad
insb
lods
dec
cwtl
cmp
mov
je
mov
xor
lret
shr
mov
inc
insb
inc
mov
mov
mov
sub
dec
fwait
xchg
inc
shlb
hlt
iret
std
in
add
jp
sbb
adc
add
xor
lods
je
jbe
icebp
inc
add
mov
cmpsb
sbb
push
cmp
jno
push
in
jne
add
add
hlt
push
sub
mov
jns
repnz
mov
or
mov
mov
add
cltd
ljmp
in
inc
add
lret
jmp
mov
out
aad
lods
jl
mov
test
ret
xor
cmc
adc
push
add
int
cmpsl
xchg
cmp
loopne
dec
mov
mov
sbb
add
push
imul
sub
sub
xchg
daa
mov
add
mov
or
xchg
scas
inc
add
pop
inc
imul
add
mov
add
lods
sbb
lcall
arpl
xchg
les
mov
add
lret
mov
jne
jb
call
stos
clc
rolb
int3
xchg
xchg
adc
add
jle
jnp
imul
mov
xlat
pop
pop
cmp
adc
mov
adc
add
stc
movsb
mov
in
inc
add
inc
scas
mov
addb
loope
js
push
or
bound
pop
ja
mov
dec
sbb
cmpsl
cmp
aas
stos
cli
adc
add
inc
add
xor
dec
js
dec
xor
jmp
sbb
push
testb
test
mov
inc
jecxz
jg
leave
movsl
ficomps
lea
lock
lds
les
xor
and
jb
aaa
adcl
jbe
dec
bound
addr16
sti
outsl
das
or
das
mov
mov
outsl
pop
push
mov
push
out
xchg
mov
std
jns
inc
add
mov
cltd
adc
inc
cs
mov
xchg
xchg
test
cltd
xchg
xchg
cltd
push
add
inc
add
push
das
push
nopl
int
add
mov
lea
mov
mov
sbb
popa
dec
pop
fstps
jg
adc
not
mov
filds
pop
mov
inc
or
div
loopne
lock
lock
jbe
scas
les
idivb
pop
cmp
push
and
add
mov
pop
and
mov
ret
cmp
test
sub
test
pop
push
dec
pushf
xchg
fwait
mov
int
xchg
js
out
mov
inc
add
xchg
and
cmp
mov
movb
add
and
addb
sbb
in
addr16
jae
insl
int3
stos
movl
adc
add
ds
rcll
mov
add
stos
fwait
addb
jo
in
out
sbb
xchg
imul
xor
jno
sub
int
xchg
dec
mov
mov
pop
clc
fists
mov
pop
fisubrs
roll
add
cmp
dec
iret
sub
cmpsl
out
add
xor
ret
inc
push
aad
sbb
xor
pushf
bound
xor
lea
sub
insl
adc
push
lds
xor
cmpsl
in
jo
fiaddl
mov
addb
repnz
insl
ret
loop
scas
xchg
pop
call
gs
xchg
dec
mov
fisttps
jle
push
xchg
and
xor
lods
sbb
jl
jle,pt
add
in
in
add
movsb
sti
sub
scas
mov
push
add
add
cmp
rcrl
popa
pop
fwait
cmp
sbb
loope
cltd
inc
xor
add
push
or
mov
push
add
push
jne
mov
or
adc
add
popf
or
push
jne
mov
sbb
mov
aad
jno
sbb
sbbl
push
lret
mov
push
or
inc
insb
adc
add
out
dec
or
mov
dec
fdivl
sbb
lea
fmuls
jns
insl
pop
xchg
lahf
outsl
dec
cmp
push
stos
insl
hlt
fwait
jp
mulb
and
xor
or
xchg
inc
add
lods
lods
pushf
cmp
pop
insl
inc
lods
sarb
push
jmp
in
idivl
test
ja
fisttpll
lahf
test
sub
mov
les
cmp
addr16
push
and
adc
and
add
push
sbb
jl
or
mov
cwtl
xchg
inc
xchg
bound
push
jge
cli
jo
add
ret
and
pop
mov
add
add
jl
sub
in
into
cwtl
mov
push
iret
outsl
aaa
bound
sbb
mov
icebp
ljmp
test
inc
add
cwtl
xlat
cmc
int3
mov
jae
mov
sbb
inc
jae
mov
lcall
pop
push
push
aad
repz
jmp
outsb
sub
fadds
pop
adc
jle
leave
and
sbb
dec
ds
out
fisubs
or
mov
mov
or
dec
popf
pop
push
pop
cs
arpl
inc
add
lret
jle
fstp
imul
pop
imul
mov
jp
mov
aad
lcall
add
dec
jmp
scas
lcall
movsb
adc
or
int
xor
add
or
dec
dec
test
dec
and
jo
sbb
je
and
fnsave
cmp
scas
insl
jns
and
sbb
sbb
pop
mov
mov
dec
xchg
cmp
sub
sbb
mulb
push
inc
enter
inc
cwtl
and
mov
adc
cmc
loope
push
jo
and
aas
pop
cld
sbb
in
imul
es
addb
arpl
jne
ds
inc
loopne
pop
push
mov
jbe
mov
call
pop
mov
or
pop
dec
inc
add
pop
clc
clc
push
xor
movsb
aaa
jns
rolb
push
pop
scas
ret
xor
idivl
aad
xchg
dec
inc
dec
lret
mov
into
js
sbb
and
sbb
pop
dec
mov
addb
push
cmp
std
inc
add
xchg
mov
fcmovne
pop
sbb
mov
or
xchg
ljmp
fidivrl
dec
and
fnsave
js
xor
mov
sbb
cmp
cmp
shl
pusha
add
ss
stos
inc
add
stos
sti
les
sti
fcoml
mov
rolb
in
mov
cmp
add
pop
in
ret
jbe
jle
sub
mov
or
test
pop
pop
das
and
cwtl
sbb
or
shrl
mov
mov
pushf
jo
lea
push
mov
addl
cmp
roll
add
or
mov
lahf
push
pop
test
aas
insl
pop
cmp
insl
fisttpll
imul
imul
repnz
add
mov
add
data16
mov
cltd
dec
addb
test
fwait
addr16
inc
mov
adc
add
jae
inc
add
push
inc
icebp
imul
add
jmp
dec
daa
pop
out
xor
mov
add
cmp
pop
sub
ja
sub
insb
or
cmpsb
adc
fisubl
xor
leave
popa
push
jle
xchg
clc
imul
jns
js
xchg
lcall
in
js
pop
in
xchg
cmp
adc
shl
test
outsl
rcl
and
addb
aas
lret
ss
notl
loopne
sub
dec
out
push
fstl
cmova
sub
test
xor
push
dec
insb
xchg
pop
out
rorb
add
mov
mov
lods
push
sti
fs
pop
inc
test
add
icebp
push
add
jnp
mov
mov
add
mov
inc
add
aam
add
cmp
out
mov
sub
add
dec
in
movb
stos
add
nop
out
cmpsl
jmp
jbe
sbb
leave
mov
mov
rep
adc
pop
sub
lea
sbb
jecxz
cli
clc
jns
add
mov
add
sub
add
addr16
mov
inc
add
dec
cmpsb
add
xchg
ficompl
inc
add
imul
sub
outsl
fldl
inc
mov
jge
mov
jg
mov
movsb
inc
push
out
sahf
push
xor
cld
inc
add
xchg
ljmp
lock
fstpl
hlt
decb
or
dec
cmp
outsl
mov
jnp
mov
test
jae
in
cmp
add
pop
mov
mov
pusha
add
add
adc
incl
in
pop
mov
jno
cmp
ret
insl
sub
jb
or
jo
sbb
negb
shrl
xchg
jmp
fsts
cwtl
gs
pop
dec
jne
mov
mov
push
jle
mov
mov
add
add
jns
pop
stos
iret
add
mov
dec
mov
inc
mov
add
repnz
gs
mov
std
shll
cmp
hlt
pop
cmpsl
das
mov
in
and
loop
push
mov
ds
and
mov
addb
cmp
mov
cs
addr16
mov
outsb
push
lods
pop
mov
or
jg
dec
aam
push
adc
push
in
add
call
push
mov
push
shrl
add
dec
xchg
push
dec
xor
loope
push
sti
dec
jge
pop
xchg
or
mov
fstpl
lret
cwtl
push
nop
jno
nopl
bound
lcall
js
xor
mov
or
add
cmp
or
sbb
mov
ljmp
jne
mov
xchg
dec
jl
pusha
add
fsubr
jecxz
inc
cwtl
leave
add
shlb
int3
test
aam
sbb
insl
push
jp
push
xchg
pop
fsubl
and
in
in
xchg
push
mov
mov
cs
loopne
cld
or
cmp
call
pop
movsb
and
popa
adc
cmpsl
or
pushf
hlt
nop
cmpsl
dec
leave
inc
cmp
jnp
lahf
loope
add
sub
add
dec
fs
and
add
mov
dec
mov
push
cmp
pop
mov
dec
daa
lock
insl
pushf
test
cmp
test
stos
dec
lock
ljmp
loopne
add
in
jbe
aam
sub
fisubs
xchg
xor
jo
sub
push
mov
mov
cs
aam
add
shll
sub
lret
cli
or
pop
cld
xchg
bnd
mov
test
add
ljmp
in
cmpsb
and
das
pop
lret
jno
inc
cli
or
cli
movsb
mov
sbb
push
add
mov
add
inc
add
movb
stos
fwait
xor
lret
xchg
mov
jg
stos
mov
and
ds
push
fucomp
das
add
cmp
cmpsl
out
popf
movsb
push
lcall
aam
push
add
jne
add
fmul
nop
fildll
pop
fcompl
aam
addb
pop
rcrb
incb
mov
mov
js
add
stos
and
jge
out
push
mov
ss
dec
xchg
sub
push
std
bnd
aam
test
push
jno
mov
into
xor
cmp
arpl
jbe
nop
lea
loope
pop
pop
mov
insl
jle
mov
daa
ljmp
add
aam
fst
jge
arpl
fwait
jb
cltd
mov
fs
xchg
cmp
add
and
cmc
add
repz
setno
popf
cmp
mov
inc
mov
mov
add
inc
add
iret
pop
and
xchg
rorb
cmp
push
jne
mov
jmp
inc
add
mov
xchg
mov
fwait
stos
sti
lret
cmp
xchg
fs
jns
mov
in
dec
cwtd
inc
add
sub
xchg
enter
push
add
push
idivl
test
mov
cmpsb
dec
dec
inc
add
jnp
add
inc
add
and
ret
cli
and
push
out
xchg
sbb
mov
push
aaa
mov
ret
jae
push
fst
inc
cmc
push
data16
frstor
cli
cmpsb
push
cmp
aam
push
dec
add
jae
or
xorl
mov
cltd
adc
inc
add
inc
add
xchg
sub
xchg
xor
dec
lret
lods
pop
cmpsl
std
roll
sub
push
add
sub
lret
inc
add
dec
xorl
out
dec
call
loop
ds
add
inc
mov
or
inc
add
mov
clc
mov
add
and
cmpsb
loop
add
xchg
stc
ss
movsl
add
dec
jl
dec
push
add
jg
pop
rolb
loopne
push
add
in
icebp
mov
jp
add
mov
inc
loop
inc
add
dec
xchg
es
adc
test
out
dec
pop
xor
cltd
ret
icebp
adc
xlat
enter
mov
jae
enter
jbe
mov
int3
aas
inc
add
call
push
addb
sti
notl
mov
mov
dec
xchg
xor
loope
lcall
insl
addb
ret
xchg
ret
loop
cmc
jle
add
pop
stc
mov
jmp
pop
rolb
add
dec
enter
cmp
jbe
in
xor
xlat
jge
pop
test
movb
cli
mov
mov
mov
sbb
cld
and
mov
les
stc
dec
sbb
xchg
je
mov
add
ret
ret
popl
fcompl
xchg
out
lcall
pop
jmp
in
jge
pop
sub
sbb
and
xor
dec
addr16
dec
inc
add
add
add
out
mov
mov
fimull
ret
rcll
ret
movswl
pop
cmp
loope
sub
push
push
adc
add
call
add
dec
ss
add
xchg
mov
sub
clc
cmc
mov
xor
add
out
test
jl
sbb
or
xchg
scas
or
std
mov
aad
lret
mov
in
push
sub
add
sub
out
or
iret
fwait
xchg
addl
movb
xchg
mov
icebp
xchg
xchg
sbb
add
and
add
ret
and
add
paddb
mov
jbe
inc
push
addr16
aaa
lcall
outsb
jo
add
iret
jne
lahf
or
cltd
xlat
mov
mov
lret
popf
pop
mov
jne
mov
ret
dec
mov
repnz
cld
pop
shl
orl
push
repz
mov
sahf
cmpsb
or
mov
add
and
test
sub
rorl
dec
sbb
leave
movsb
je
pop
movb
hlt
mov
sbb
jp
decl
lcall
das
pop
sbb
cltd
sarb
data16
or
sub
cmpsb
add
or
cmpsb
insb
jae
jmp
fstl
xor
cs
in
in
fisttpl
nop
jns
sub
imul
popl
add
add
bound
js
add
push
push
dec
adc
aam
adc
sub
push
pushf
xor
lahf
cli
rolb
cmp
addb
jno
pop
mov
mov
pop
nop
dec
and
sub
mov
js
xchg
test
imul
adc
je
and
sub
mov
lods
push
pusha
add
xchg
arpl
shlb
cmpsb
mov
rcrl
leave
cld
movb
dec
pop
in
dec
pop
scas
mov
add
std
mov
rcl
insb
sbb
movb
lods
push
scas
ret
enter
pop
and
fldenvs
shlb
jnp
xlat
fwait
or
cmp
cmp
push
arpl
les
mov
add
stos
repnz
in
lods
or
jmp
push
pop
fisttpl
rol
jo
ljmp
lret
xorl
outsl
add
call
addr16
pop
sbb
add
loope
enter
aaa
dec
dec
add
inc
add
cltd
lahf
sbb
or
dec
andl
lret
push
cwtl
push
and
push
int3
or
pcmpeqb
add
aad
cmpsb
push
fwait
xor
add
ror
xchg
mov
add
xor
ja
and
hlt
nop
rcrb
or
cmp
add
jge
movaps
lock
dec
mov
mov
inc
mov
int
mov
out
daa
push
push
hlt
in
xchg
mov
daa
lock
shll
jae
leave
xchg
pop
mov
test
xchg
iret
pop
sub
xor
cmp
pop
cmpsl
insl
cs
pop
mov
mov
sub
ljmp
jecxz
mov
scas
and
add
outsb
movb
outsb
repnz
aas
idivb
inc
out
inc
dec
aam
cmpsb
sbb
outsb
pop
loop
cmp
sti
cld
aaa
xchg
sbb
xchg
enter
andl
psubusb
dec
jg
enter
mulb
sarl
shlb
push
jp
inc
add
pushf
lea
rcr
add
xor
mov
stc
dec
int
lea
jnp
sub
add
add
es
leave
testb
mov
sub
xor
mov
negb
aas
mov
push
inc
add
fdivrl
or
add
das
imul
adc
mov
sub
syscall
cmpsb
push
int
sbb
add
inc
add
and
loop
ds
cli
call
test
arpl
loope
fnsave
iret
mov
stos
cltd
mov
mov
push
scas
or
mov
add
push
add
add
add
xor
xlat
adc
xchg
mov
cld
jmp
jp
or
add
test
rorl
jp
lahf
mov
xor
movsl
pushf
loop
sub
je
mov
inc
add
inc
ja
mov
ja
or
sbb
ret
xor
cmc
cmpsl
loop
inc
jbe
jmp
mov
add
push
shlb
xchg
lods
cli
cmp
jge
int
out
fwait
rcll
insb
push
pop
mov
pop
jb
push
jnp
dec
and
add
insl
dec
inc
add
add
jnp
stos
dec
outsl
stc
mov
ds
mov
ret
xor
sub
add
xchg
jle
sub
push
push
aam
add
mov
sbb
sbb
les
dec
repz
scas
mov
inc
and
in
add
ret
push
rolb
push
ror
ja
fiadds
insl
sbb
add
xor
cmpsl
dec
pusha
add
stos
cmp
test
dec
xchg
mov
and
jo,pn
mov
and
mov
add
ficompl
push
add
xchg
push
bound
xchg
lcall
lods
push
mov
xchg
inc
ss
jg
mov
hlt
fisubl
repnz
addb
xor
cs
hlt
ljmp
add
icebp
out
push
stos
xor
adc
imul
pop
dec
icebp
push
imul
mov
adc
add
lods
ljmp
mov
ss
cmpsb
out
mov
cwtl
sbb
popa
loop
cli
addr16
add
or
shrl
loope
fincstp
mov
sbb
imul
mov
lock
cltd
pop
mov
fwait
mov
aas
rolb
faddl
je
rolb
fisubl
add
ret
imul
jle
sbb
pop
lret
int3
push
gs
outsb
scas
pop
lods
adc
add
cli
repnz
fisttps
lea
mov
ret
repz
popf
push
cmp
xor
lcall
fstl
push
add
sarb
adc
out
sbb
in
adc
subl
xchg
mov
icebp
call
sub
xlat
jmp
cltd
stos
pop
jae
arpl
jecxz
ret
pop
in
and
cmpsl
mov
add
icebp
mov
add
in
inc
add
add
add
mov
pushf
mov
add
and
sti
sbb
xor
inc
add
mov
loopne
lock
mov
jle
ja
in
out
jne
and
in
and
outsl
fstps
out
pop
notl
xchg
push
insl
pop
mov
insb
fadd
pop
jecxz
add
mov
out
sub
adc
xor
inc
dec
subl
jnp
push
pushf
or
sub
lods
popf
cmp
add
clc
pop
inc
add
stos
je
ds
ficoms
dec
cmpsl
inc
add
add
push
int
stos
jge
fbstp
int3
mov
std
mov
rolb
add
add
dec
outsb
in
js
outsb
cvtpi2ps
cli
in
movb
push
loopne
das
and
aam
icebp
pop
lods
inc
add
insl
inc
mov
cmc
xor
add
loopne
add
movsb
or
aaa
mov
add
or
inc
add
enter
push
add
add
clc
push
xchg
lcall
rolb
push
mov
and
ficoml
les
rcl
lods
stc
push
mov
in
pop
jl
push
flds
scas
xchg
je
add
cmpsb
cmp
sarb
cld
hlt
or
add
mov
inc
add
and
push
add
lahf
sahf
addr16
sti
scas
inc
add
add
cltd
js
inc
mov
and
pop
jno
add
mov
pushf
push
dec
into
xlat
sub
add
pop
sub
fwait
and
cli
push
cmp
mov
and
push
cs
pop
and
rolb
je
add
mov
sub
popa
pop
lahf
ret
out
push
ljmp
test
dec
movsb
cmpsl
cmpsl
rorl
mov
add
loop
adc
popf
cmp
vphsubdq
mov
sbb
addb
dec
sub
fnclex
test
adc
lea
mov
das
fcomp
aas
pop
mov
je
repz
or
add
cmpsl
filds
add
inc
addb
mov
out
icebp
push
dec
addr16
aad
test
pop
mov
mov
jmp
push
in
add
int3
aad
add
sub
pop
pop
sub
pop
je
mov
mov
push
fstp
loopne
add
lods
xchg
pop
scas
test
jge
mov
or
or
sbb
enter
aaa
dec
and
ret
adc
mov
push
test
call
shlb
xor
xor
aas
dec
add
fisubrl
or
pop
fucom
mov
mov
lock
add
cmp
sbb
xchg
add
xchg
add
int
cld
mulb
or
push
shll
out
lret
and
adc
sbb
int3
bound
pop
mov
ja
sbb
sub
test
mov
dec
mov
and
test
call
pusha
add
stos
fistpl
mov
std
nop
fwait
push
add
inc
add
cmpsl
fstpl
mov
sbb
fsubr
xor
cmpsl
add
sbb
add
jbe
pop
rolb
sbb
leave
dec
mov
jl
add
mov
std
sbb
clc
bnd
test
inc
add
xor
shlb
jmp
jmp
and
cmp
lcall
jne
jae
or
jl
fs
add
roll
add
sbb
or
add
scas
pop
push
and
cmc
rcrl
jnp
xchg
addl
decb
test
jae
lds
inc
add
lock
add
call
pop
loopne
sub
les
loope
daa
into
lcall
push
or
add
jmp
flds
jnp
decb
in
add
mov
push
xlat
and
fistps
sbb
cmpsb
jns
aam
and
add
or
dec
push
ficoms
loope
ret
cltd
outsb
cwtl
jns
mov
jae
bound
dec
addr16
popf
movsl
dec
loope
push
jbe
and
das
sti
pushf
and
mov
add
imul
pushf
push
pop
jecxz
xlat
adc
add
loope
cwtl
ss
repz
fst
mov
jo
lret
xchg
and
jae
add
push
fldcw
ss
sbb
or
xchg
and
push
xchg
divl
ljmp
imul
clc
mov
test
xlat
lds
aam
dec
dec
test
jecxz
lock
idiv
cmp
and
sub
add
add
cmp
popf
shlb
xchg
movsb
push
popf
pop
xchg
je
shrb
test
dec
orl
push
lea
mov
mov
adc
jnp
xchg
inc
scas
cmp
add
add
jg
pop
add
stos
cld
divl
fs
mov
push
mov
jbe
pop
and
cmp
xchg
cmp
fwait
mov
fcomi
sahf
adc
imul
cld
pop
lret
scas
leave
test
xchg
repz
cmp
fstp
dec
rcrb
mov
aam
cmp
frstor
mov
in
push
call
add
addr16
fucom
pop
mov
sbb
jle
pop
jg
or
add
addr16
xlat
jmp
nop
pusha
add
cmpsb
jmp
addb
lahf
in
lret
gs
ljmp
out
clts
add
outsb
xlat
push
popl
mov
ficoml
mov
mov
and
pop
add
mov
stos
and
jg
je
mov
mov
jbe
insb
jl
lahf
test
clc
push
addb
or
scas
or
add
ja
fwait
cmp
and
into
add
push
test
sub
add
mov
add
mov
or
leave
aad
jecxz
push
mov
xchg
in
testl
sub
cmpsl
jno,pn
mov
xchg
mov
cmc
and
push
std
push
adc
jge,pt
lds
dec
or
adc
add
outsl
pop
and
xchg
push
repz
mov
dec
cmp
int3
cli
ja
inc
push
jo
rcrl
mov
stc
pusha
add
mov
call
nop
or
mov
pop
xchg
jmp
fs
add
repnz
adc
or
dec
add
push
xchg
dec
jecxz
lcall
xchg
dec
pop
adc
lahf
popa
lock
jo
fdivs
sub
fbstp
arpl
rcrl
ss
fldl
mov
xchg
ds
loopne
xor
mov
jne
jno
add
lret
push
cmp
test
jge
or
in
inc
mov
push
mov
pop
cli
sti
pop
repz
cltd
scas
into
hlt
outsl
pop
incb
push
push
gs
xchg
inc
add
inc
jne
inc
pop
xor
or
int
pop
test
jg
movsb
ss
mov
xchg
xchg
xchg
loop
scas
push
lret
cmc
out
pop
pop
sbb
cmp
add
addr16
dec
pop
movb
pop
sub
xchg
mov
addb
ja
cmc
insl
roll
inc
add
xchg
jno
adc
inc
sub
cmpl
mov
sbb
sahf
inc
add
push
shl
insb
push
pop
repz
dec
push
roll
test
ror
insl
inc
add
not
icebp
xor
mov
rcrl
imul
push
push
xchg
add
lock
cli
jmp
or
jo
add
bound
cmp
add
jp
cmc
xchg
mov
movsl
mov
pop
loop
push
lds
cltd
lods
push
and
dec
out
lods
add
mov
pop
xor
xchg
data16
cmp
pop
mov
jg
or
call
and
cmpsb
dec
add
enter
call
add
xchg
fstl
fstl
push
out
jnp
lcall
add
adc
mov
fnstsw
loop
xor
out
out
in
punpckldq
cmp
pop
push
inc
gs
test
xor
sub
mov
jmp
js
sarl
lret
pop
and
xchg
mov
add
add
mov
add
lret
imul
mov
add
cmc
fistpl
push
lret
pop
or
ljmp
fisttpl
fdivrl
add
adc
movw
jns
in
xor
jns
iret
aad
sub
add
xor
lcall
mov
aam
call
loope
add
add
and
out
sbb
movsb
fsubrs
add
wrmsr
sub
filds
test
mov
mulb
insb
mov
add
es
dec
jnp
mov
fcmovbe
inc
add
cmpsb
fimuls
mov
aas
das
add
jle
mov
add
sub
cli
lret
shr
xchg
or
mov
mov
xor
cmp
loop
or
mov
clc
push
cmp
popf
nop
xchg
mov
movsb
sahf
lds
leave
push
add
stos
sub
jnp
lea
test
lock
add
out
std
sbb
iret
adc
sbb
lds
pop
les
or
pop
dec
pop
xchg
jecxz
cmp
fcomps
jecxz
sbb
add
popl
add
add
hlt
test
jge
mov
mov
mov
fimuls
int3
fnstsw
rcrb
into
or
add
mov
add
stc
subl
ss
fsts
mov
push
add
push
fidivl
inc
cmp
ret
arpl
sub
cmp
fwait
int
or
and
and
jno
jp
jmp
push
rolb
xor
xor
mov
loopne
or
add
neg
sbb
pop
add
xorl
shrl
je
popf
ljmp
cwtl
or
and
jg
or
jl
mov
hlt
popf
mov
push
pop
andl
add
or
xor
and
add
or
test
push
mov
dec
mov
cmp
movsl
hlt
cli
add
scas
or
jecxz
aad
mov
pushf
fisttpl
pop
mov
rcr
mov
test
pop
loopne
addb
push
test
jecxz
fstpl
mov
mov
ret
adc
addr16
mov
pop
fwait
inc
aam
add
aas
out
test
mov
shrl
sbbl
or
jno
sarl
aad
push
mov
add
mov
push
mov
push
inc
add
mov
add
add
jle
fs
push
int
push
pop
hlt
sbb
adc
mov
out
xor
rcll
in
mov
push
insl
xchg
mov
pop
stc
stos
sub
xor
addr16
jmp
es
shl
in
aas
dec
divpd
fsts
add
mov
mov
mov
inc
add
out
dec
sub
mov
pop
mov
sub
rcl
inc
add
dec
jge
mov
cmp
dec
ret
pop
iret
mov
call
jg
add
lods
jno
dec
test
jo
push
mov
mov
add
ds
stc
rolb
mov
in
mov
pop
call
mov
imul
or
push
and
adc
xchg
stos
push
add
sbb
sbb
call
je
pop
das
test
lret
ds
outsl
iret
dec
movb
dec
loop
mov
popa
inc
push
xchg
shrb
sbb
xor
icebp
nop
fdivrl
add
mov
inc
add
cmc
push
lods
push
fcmove
mov
repnz
add
and
ret
sbb
popf
or
aad
icebp
jmp
jl
popf
in
es
xor
mov
add
loopne
mov
pop
adc
stos
push
repz
jb
add
push
xchg
mov
inc
js
xchg
sbb
add
popf
mov
xchg
dec
add
jns
push
add
add
negl
sub
mov
dec
aas
pusha
add
sub
lods
bound
in
in
ret
outsl
cmp
aaa
js
cmp
lods
ds
xchg
out
testb
lea
adc
add
pop
out
sub
mov
pop
call
arpl
add
sub
or
shll
add
or
xlat
daa
aaa
test
decl
mov
add
test
les
insb
enter
aas
mov
test
sub
clc
popf
loop
dec
stos
lret
sbb
clc
mull
loop
cmpl
fs
sarb
dec
sbb
add
icebp
aaa
orl
sbb
fimull
out
xlat
and
outsb
fstpt
repz
leave
push
or
cmp
fbstp
push
out
leave
mov
rcrl
mov
pop
add
movsb
push
or
push
push
idivb
ror
cmp
jbe
or
adc
add
or
dec
arpl
push
pop
cltd
cmpsl
rolb
int
pusha
add
xor
sbbl
mov
popa
mov
movsb
in
jno
repz
stos
and
mov
jo
sbb
int3
mov
add
xchg
xchg
mov
push
jle
add
aam
jo
mov
xlat
xor
decb
cld
test
pop
lahf
push
ds
xor
sbb
test
pop
inc
add
daa
xor
xor
add
loope
xchg
sub
idivl
inc
and
arpl
mov
mov
push
dec
jns
or
daa
jl
cmp
mov
add
add
add
stc
outsl
and
or
xchg
rolb
incb
add
sbb
add
pop
sbb
add
jmp
jbe
pop
mov
add
add
xchg
adc
pop
int3
pop
lods
pop
ret
or
cmpsb
jp
mov
in
mov
jnp
into
pop
and
rcrl
loope
shlb
loop
out
push
xor
out
test
and
mov
push
xchg
cmpsb
out
jle
and
mov
stos
jno
add
test
cmpsb
mov
dec
pusha
add
mov
mov
adc
shrl
enter
xchg
push
lret
outsb
bound
addb
lcall
pop
sub
in
movsl
or
add
cmp
ror
cmc
inc
add
adc
and
mov
neg
jae
jmp
dec
or
push
xor
cmp
fisubrs
add
mov
or
adc
loope
mov
jl
jle
mov
and
or
xor
mov
adc
add
adc
add
icebp
xchg
scas
out
out
cmp
scas
mov
popf
lret
dec
jae
lcall
push
scas
pop
inc
push
scas
ljmp
add
mov
repz
sbb
insl
lret
mov
jno
imul
adc
aam
enter
mov
add
push
test
mov
mov
or
adc
jp
out
cmp
add
push
ret
in
std
push
add
dec
lret
pusha
add
mov
jae
lock
dec
jecxz
sbb
rcl
mov
jne
sub
movsl
scas
lods
and
ljmp
dec
jo
aaa
jg
hlt
nop
jl
in
shr
pop
test
lcall
sbb
test
pop
stos
adc
inc
mov
ds
jge
in
adc
jns
movsl
mov
pop
orl
inc
add
test
sbb
fbstp
leave
push
pop
push
out
addb
popa
addb
call
jns
xlat
loopne
idivl
mov
loopne
add
mov
or
int
sahf
pop
in
push
stos
imul
mov
dec
les
push
addr16
popa
cmp
xchg
xor
pop
stc
push
jl
mov
iret
ret
pop
clc
aad
rcr
lcall
in
xchg
rolb
hlt
mov
sar
jl
add
sbb
jge
popf
pop
jmp
mov
mov
dec
mov
jl
fisubrs
mov
and
int
xlat
pop
data16
jmp
pop
frstor
jl
jg
in
arpl
stos
in
cmc
dec
pop
arpl
mov
arpl
inc
lea
cmpsb
mov
add
test
lcall
mov
xlat
addb
cwtl
xchg
js
scas
or
or
add
pop
xor
pop
cwtl
push
xchg
aaa
or
hlt
ret
add
jg
lea
outsb
aaa
mov
mov
int
sbb
jno
out
push
add
jp
pop
pop
mov
push
xchg
incl
inc
add
cmp
xchg
and
pop
into
jnp
push
inc
int
cmp
push
mov
lret
mov
push
add
ja
or
push
push
leave
ljmp
mov
xlat
xchg
adc
in
and
or
lods
jb
add
add
sbb
aam
bound
push
pusha
add
or
cli
push
dec
mov
sub
xchg
dec
pop
jb
jo
sub
ret
mov
lcall
out
pop
aas
xor
outsl
jge
ja
hlt
push
sbb
add
jb
jns
push
push
ss
ficomps
add
lods
add
sub
enter
push
push
mull
mov
insb
mov
mov
enter
cld
scas
outsb
ret
pusha
add
add
add
icebp
push
imul
stc
mov
add
insl
add
outsb
icebp
lret
ds
jb
repz
bound
push
pop
fs
push
in
hlt
int
repnz
imul
adc
add
add
pop
int3
gs
nop
sub
sbb
cmc
mov
mov
lock
jo
imul
leave
cmp
adc
dec
int3
lahf
idivb
cmp
outsl
or
jno
mov
enter
adc
xor
cltd
jg
arpl
jo
sarb
out
stc
cltd
xchg
add
push
enter
dec
aas
jg
ljmp
adc
in
mov
and
fidivl
inc
ds
and
cmp
push
add
xlat
les
mov
addb
sub
cmpsb
sbb
xlat
cmp
add
in
arpl
xchg
orl
in
jne
imul
adc
mov
mov
jbe
fisttpl
or
bound
or
inc
add
scas
flds
rclb
dec
mov
mov
push
and
cmp
cmp
addb
inc
and
sub
or
adc
adc
insl
cli
stc
lea
lahf
hlt
mov
in
and
call
mov
scas
jns
fwait
repz
das
xor
mov
mov
fadds
pop
or
push
test
mov
push
sub
in
or
insl
mov
mov
cli
jmp
clc
in
lods
stos
aam
mov
dec
pop
stc
addb
aad
lcall
aaa
mov
arpl
push
test
xor
push
push
push
and
and
mov
jecxz
mov
mov
sbb
ret
fwait
dec
dec
jmp
dec
xchg
cmpsb
js
push
movsl
int
imul
lods
mov
adcl
sti
das
or
inc
add
cmc
xlat
push
mov
mov
add
jne
cld
or
jl
xorl
adc
dec
loopne
jb
xor
or
jnp
add
adc
mov
loopne
xor
pop
sarb
cli
lea
out
das
and
mov
rol
add
jg
add
ja
xchg
pop
shr
sbb
sub
sub
cmp
cmp
push
addb
je
int
pop
cmpsl
pop
jnp
mov
cltd
adc
jae
add
cmp
add
add
inc
xchg
ret
decb
or
fidivrs
mov
lods
and
loope
jl
mov
push
add
test
mov
stos
bound
movsb
adc
inc
add
add
out
mulb
mov
pop
mov
ss
add
jo
ja
mov
xor
or
outsb
rclb
jle
cmpsl
mov
call
push
ds
pop
daa
jmp
arpl
popa
sti
sub
push
add
cmp
jne
mov
pop
or
xlat
hlt
push
lahf
cmp
xchg
push
xchg
shrb
out
movsb
add
mov
add
pop
int3
loopw
lds
int3
xchg
and
xor
fs
sbb
and
push
stos
int3
addb
lods
dec
pop
or
xlat
sbb
nop
dec
notl
or
stos
fnstenv
ret
fsqrt
aas
fsubrs
popa
sbb
mov
std
pop
enter
lcall
mov
add
ficoms
sub
test
int3
pushl
repnz
aaa
in
adc
cmp
call
aas
icebp
popf
add
add
sahf
int3
jg
bound
mov
mov
iret
mov
rcll
mov
clc
mov
lds
std
xor
mov
and
mov
add
inc
add
rolb
notb
sub
jne
mov
fnstsw
imul
stc
das
fcmove
loope
inc
and
mov
ljmp
fimuls
push
scas
popa
push
or
mov
add
lret
xor
scas
xchg
std
pcmpgtw
push
jle
xor
icebp
test
push
fcoms
repnz
dec
or
int
fsubrs
sub
cmp
inc
add
mov
insb
mov
pop
pop
nop
mov
add
sbb
jo
sti
fists
jo
xor
pusha
add
add
jle
out
mov
clc
aam
sbb
mov
pop
pushf
cmp
dec
nop
inc
add
repnz
enter
testl
add
cmp
mov
xor
loop
push
add
mov
rorw
rcl
inc
add
fdiv
sbb
mov
and
leave
ret
paddusb
mov
add
mov
fisubrs
dec
inc
sub
push
sbb
pop
mov
sbb
pop
inc
add
int3
or
adc
sub
hlt
mov
add
jb
jg
loopne
stos
sbb
lds
mov
dec
das
addb
fcmovnu
mov
lea
and
jnp
pop
push
jle
addb
xchg
pushf
xor
aas
sbb
out
add
lods
jo
pop
mov
fs
push
adc
adc
loop
shll
stc
sbb
mov
jb
add
int
mov
out
clc
pusha
add
jl
add
loope
jge
sbb
scas
test
sub
add
add
add
shlb
or
add
xchg
mov
bound
jmp
aas
js
hlt
and
push
hlt
inc
add
addb
out
or
sub
dec
mov
jo
movsl
xchg
xchg
mov
add
jge
int
shrl
jmp
add
in
imul
and
xor
loopne
and
ds
fmuls
xor
idiv
fadds
add
loopne
inc
add
in
dec
mov
mov
mov
xlat
int
les
mov
jg
aam
nop
sbb
sbb
into
lods
hlt
adc
dec
pop
and
arpl
add
shll
mov
and
pop
xor
mov
or
mov
mov
mov
in
lret
mov
ss
dec
push
mov
jge
push
sahf
mov
loop
or
add
cld
xor
ffree
add
cmc
ja
mov
je
jl
jecxz
outsb
mov
pop
xchg
dec
imul
leave
xor
daa
push
jnp
mov
repnz
cmp
loope
push
dec
bound
jle
cmp
xor
xor
movsb
cld
insl
sbb
cltd
jo
jmp
add
movsb
dec
mov
lret
data16
jbe
andl
je,pt
xchg
dec
adc
aam
mov
push
aad
inc
add
insl
scas
rorl
addb
daa
dec
pop
or
dec
jb
movlps
sub
sarl
and
sbb
cmp
push
addb
sub
dec
pop
dec
hlt
stc
mov
imul
sub
xchg
sbb
cmp
add
adc
inc
add
add
aam
dec
nop
xchg
scas
add
negl
mov
adc
add
gs
insb
mov
fs
jb
test
cltd
pusha
add
jbe
sub
lds
jg
rorb
dec
xchg
arpl
or
int
pop
xchg
sbb
mov
push
cmpsl
jp
into
and
and
outsb
fnstsw
fsub
shrl
pop
cmp
fidivs
add
mov
insl
fildll
mov
cld
enter
int3
mov
and
arpl
lret
cltd
or
sub
add
push
jo
xlat
push
add
add
pop
inc
mov
insl
adc
sbb
lea
mov
add
jmp
fcoml
jg
add
insl
fst
xor
add
xor
cmp
jmp
jle
addb
mov
or
rcr
int3
and
popf
fwait
mov
add
pop
dec
loop
fcomp
scas
call
dec
dec
in
add
cmp
cltd
add
push
out
mov
dec
outsb
or
mov
mov
pop
and
mov
add
xchg
ljmp
pop
popf
jle
and
push
pusha
add
pop
inc
dec
sub
mov
dec
jmp
testl
ficomps
push
jg
shl
shrl
fucomp
hlt
shl
rolb
add
mov
pop
scas
mov
inc
add
out
pop
add
insb
adc
add
nop
lock
sahf
daa
jg
or
mov
dec
mov
sti
mov
dec
cmp
sub
push
mov
pop
fwait
xlat
fs
int3
dec
push
add
mov
jl
or
dec
push
test
data16
bound
aaa
jno
xchg
sbb
lret
jno
add
movsb
icebp
arpl
int3
iret
jo
lods
sub
lds
add
ret
sbb
in
sbb
sbb
pushf
xlat
xchg
fists
mov
add
or
cmp
fildll
mov
aad
sbb
add
mov
add
inc
add
pushf
or
xor
xchg
pop
hlt
xor
mov
add
leave
adc
mov
in
pop
std
lahf
pop
mov
add
push
fidivl
xor
inc
adc
aam
xchg
dec
fcmovnb
add
mov
push
arpl
dec
gs
mov
lahf
push
cmp
ret
ret
jg
lds
push
daa
aas
lret
pop
sub
mov
sub
dec
add
add
fstps
jne
daa
repz
popf
add
dec
cmp
add
lcall
xor
scas
das
rclb
xor
xor
repnz
addb
sub
jbe
icebp
test
jb
jmp
or
out
stos
pop
mov
and
fadds
xor
mov
adc
add
add
pop
mov
inc
sarl
les
sub
scas
xor
int3
inc
xor
cmp
jb
cmp
es
aad
add
iret
add
xchg
dec
jg
popf
pop
fwait
nop
fdivrp
pop
cs
cwtl
or
or
and
out
mov
pop
mov
std
out
inc
add
loop
outsb
popf
adc
xorl
mov
inc
add
push
sub
mov
add
add
test
cmpsb
or
fisttpll
mov
aad
push
into
dec
push
xchg
in
mov
popa
test
adc
cwtl
repz
test
lods
push
je
cltd
fsubrp
mov
sbb
call
xor
xchg
inc
xchg
jo
popf
inc
sbb
inc
add
in
pop
fs
stos
inc
add
test
out
cmc
add
push
add
sbb
jl
out
xor
jns
add
sbb
dec
or
stc
jae
add
dec
cmp
xor
sub
add
or
jg
sub
mov
mov
inc
xchg
movsb
pop
push
jns
in
add
shl
and
mov
lret
pop
fcmovb
add
push
pusha
add
roll
dec
cs
adc
movsb
loop
mov
pop
adcl
sbbl
add
sbb
jmp
or
stos
mov
ja
loope
mov
and
add
adc
lret
push
and
push
mov
mov
imull
sarb
cs
lods
shrb
cmp
in
sar
bound
ja
mov
pop
add
out
shrl
cmp
and
hlt
pop
fimull
mov
lea
in
faddl
add
inc
add
fmuls
mov
mov
adc
or
lds
scas
jl
mov
test
mov
push
cmp
int3
mov
xchg
pop
jnp
rcr
pop
push
and
fs
add
mov
insb
test
icebp
mov
insl
adc
je
mov
sahf
push
cmp
dec
or
jmp
aas
lcall
push
xchg
jb
jge
arpl
xor
out
inc
add
addb
inc
add
lods
shll
popf
in
inc
add
inc
add
xchg
mov
js
addr16
add
push
xor
inc
mov
lcall
add
test
jno
inc
add
or
pusha
add
mov
pop
shrl
cmp
adc
sub
add
cwtl
jg
sub
into
test
push
fadds
add
push
add
aaa
or
fnstcw
in
lock
addb
aam
jns
or
jl
and
adc
xchg
pop
loope
je
sbb
adcl
mov
add
stos
jnp
xor
add
cmp
dec
out
addr16
imul
out
shr
pop
scas
aaa
pop
sarl
bound
ljmp
insb
divb
ljmp
pop
fsubrp
mov
clc
sbb
jo
push
clc
sub
lahf
xor
xchg
push
mov
xor
loop
sbb
jb
push
lret
divl
fnstsw
xor
pop
cltd
outsb
test
rolb
dec
pop
jns
jg
or
aas
js
notb
sbb
ds
add
enter
and
aas
out
inc
add
mov
sbb
nop
sub
adc
mov
in
test
lret
stos
or
xchg
push
and
notl
arpl
cs
inc
add
cmp
fs
fcmovb
add
inc
add
xchg
mov
pusha
add
push
cmp
pop
lret
addr16
jno
add
data16
pop
lea
pop
add
rcr
jbe
push
cwtl
xor
add
fwait
push
xchg
xor
les
das
cwtl
or
testl
cmpsl
pop
cmp
push
sbb
data16
cmpsb
or
stos
stos
out
arpl
scas
add
movb
push
add
adc
mov
fmul
xchg
leave
sbb
jp
dec
and
insb
fcompl
pop
xchg
rorb
add
mov
add
mov
idiv
adc
fcmovu
mov
mov
push
shlb
js
jnp
stc
mov
or
add
add
or
daa
test
pop
scas
sub
jecxz
int3
div
inc
lds
mov
in
loope
or
pop
or
outsl
jno
cltd
shrb
add
mov
incl
enter
in
pop
pusha
add
mov
adc
cmp
mov
js
sbb
arpl
repz
mov
fldcw
int
adc
sbb
test
lds
in
or
xor
push
or
cmp
add
jns
add
xor
sbb
mov
inc
add
insl
mov
sub
call
inc
add
push
dec
test
leave
sbb
clc
xor
push
jb
rorl
xor
and
addb
pop
div
add
lods
push
std
sub
mov
add
jmp
jge
add
sbb
bound
movsl
fdivs
sub
sub
ljmp
cld
dec
push
mov
icebp
add
sub
or
dec
xor
cmp
xor
sbb
add
out
shrb
sbb
popa
adc
or
imull
dec
xor
pop
sti
xchg
out
out
lcall
sti
and
mov
ja
push
mov
add
pop
outsb
sub
xchg
ja
add
or
xchg
fidivs
push
mov
mov
mov
movsb
mov
aas
sbb
jne
add
xor
mov
lret
loopne
neg
cmp
or
xchg
cld
adc
adcl
sti
daa
pop
mov
sbb
mov
cmp
add
lods
dec
test
icebp
cmp
fidivs
jp
lret
out
mov
sub
mov
xchg
pop
out
jae
adc
pop
jl
adc
push
cltd
pop
ja
aas
sbb
cmpsb
repnz
in
out
xor
arpl
incl
xchg
jg
cmp
mov
add
lret
inc
arpl
ss
ja
call
push
xor
jnp
mov
add
inc
add
push
aam
jp
jbe
or
add
aaa
jbe
cmp
or
pushf
push
push
out
addb
add
das
outsb
lret
add
add
stc
jbe
pushf
xchg
jno
call
xchg
js
pop
ret
sub
add
sarl
mov
jno
mov
out
xchg
xchg
scas
popa
flds
add
push
lret
adc
in
fwait
jo
ds
pop
inc
add
movsb
xlat
bound
cld
cmp
inc
add
sarb
mov
cltd
lcall
addb
inc
lret
fwait
or
into
les
into
push
sti
and
adc
je
push
in
inc
inc
add
pop
data16
rcrl
and
sti
inc
les
inc
add
mov
xor
out
mov
push
xchg
imul
hlt
test
mov
push
sbb
mov
imul
mov
fwait
xchg
mov
push
mov
loop
sub
icebp
mov
mov
sbb
add
ss
addr16
jle
pop
gs
dec
les
lret
scas
jmp
mov
cmp
cmp
popa
pop
rorl
dec
mov
add
faddl
pop
outsl
insl
and
daa
xor
ja
sub
nop
aaa
insl
rcrl
imul
mov
mov
ja
mov
sbbl
arpl
xor
cwtl
aad
arpl
rolb
jb
enter
out
sbb
cmpsb
mov
pop
add
ret
test
mov
xor
movsb
jle
add
fbstp
push
xor
push
add
stos
adc
push
cmpsl
imul
sub
pop
addr16
in
cmpsb
jb
mov
add
pop
sbb
cli
push
xchg
arpl
add
neg
cmpsb
shll
loope
lock
daa
test
xor
add
xor
repnz
jno
lock
xchg
mov
scas
out
adc
mov
cmp
dec
jecxz
int3
out
dec
aad
add
in
or
aaa
or
repz
popa
icebp
jbe
sub
outsb
mov
mov
add
xor
mov
xor
in
ds
ja
and
fldl2e
mov
add
jne
and
out
cmp
inc
add
xchg
fcmovu
scas
fnstenv
cmpsb
leave
fsubrl
int3
stos
jmp
call
cmp
sub
loop
rolb
jmp
cmp
call
mov
or
or
and
dec
mov
fcoml
mov
mov
jl
push
jmp
lea
hlt
in
or
mov
xchg
sub
pop
imul
rolb
mov
xchg
adc
ret
sbb
jbe
sbb
data16
aad
out
sub
js
xlat
dec
dec
or
xchg
dec
adc
add
outsl
fdivr
cld
daa
lock
push
or
jg
inc
add
xchg
jbe
sti
es
mov
push
dec
xor
xchg
pop
movsl
cmp
add
add
pop
fisttpl
insl
push
cmc
daa
dec
sbb
sbb
arpl
mov
jne
or
push
outsl
adcl
je
out
add
adc
sub
addb
add
jp
icebp
or
mov
push
repz
adc
cmp
js
hlt
push
lcall
jbe
ret
in
jge
in
xchg
lods
jae
popf
aas
adc
and
xor
add
dec
mov
dec
arpl
dec
inc
jb
dec
push
addr16
mov
test
mov
add
inc
sbb
lcall
and
call
repz
test
push
xchg
mov
lret
xchg
in
or
pop
aam
ret
dec
addb
in
xor
add
iret
cli
dec
xchg
jle
in
push
add
out
mov
add
and
add
xlat
pop
stos
cmp
repnz
inc
add
js
dec
pop
fwait
call
adc
add
inc
add
or
mov
pop
roll
cmp
pusha
add
daa
iret
into
sub
cmpsb
cmp
outsb
inc
jno
adc
es
add
cmp
lods
pop
out
nop
cs
mov
pop
sub
les
sbb
and
push
mov
and
hlt
rcrb
popa
iret
xchg
popa
sub
add
mov
push
inc
add
adc
inc
add
add
jl
push
mov
imul
sub
lea
inc
mov
or
stc
sbb
pop
dec
and
faddl
or
add
sbb
sahf
enter
push
ror
cmp
xor
fldcw
ja
push
pop
mov
cs
ret
mov
adc
outsb
lods
push
gs
inc
fimuls
xor
mov
nop
cmp
pop
aaa
call
sbb
mov
out
and
pop
add
dec
or
inc
add
call
jbe
rcrl
fucomi
or
sbb
nop
daa
mov
cs
into
xor
xlat
or
pop
addb
sbb
popf
dec
jg
lea
mov
cmc
sahf
push
jecxz
or
scas
dec
mov
lret
daa
ret
mov
push
sbb
sbb
push
add
dec
aaa
cmp
mov
pop
inc
add
repz
xchg
idivb
ror
adc
mov
jmp
add
add
add
sbb
fistpll
loope
adc
push
sti
les
adc
mov
dec
pushf
cld
dec
sub
add
daa
sbb
or
cmpl
addb
movsl
rolb
insb
test
stos
xor
dec
mov
es
mov
arpl
loope
sub
imul
addb
sti
jb
stos
shlb
add
jp
jp
xchg
push
orl
cltd
test
loope
inc
adcl
loope
dec
ss
mov
push
push
push
mov
inc
xchg
stc
pop
clc
dec
pop
test
dec
daa
sbb
ja
in
cwtl
leave
aam
add
lret
jne
cld
add
lcall
and
pop
aaa
inc
add
add
inc
jle
push
inc
or
aas
jge
dec
push
pop
daa
mov
inc
cli
push
inc
mov
std
push
rolb
js
fsubrs
mov
jbe
mov
js
stc
xor
shl
loope
jge
add
addb
lea
jl
mov
test
iret
mov
int3
insl
bound
addr16
mov
orl
in
adc
adc
or
xlat
cwtl
mov
lods
mov
lret
hlt
push
xor
outsb
arpl
add
es
mov
xor
out
dec
ret
adc
xchg
outsb
call
jae
cwtl
popf
out
pop
addb
pop
mov
push
inc
add
add
jne
mov
ss
xor
mov
shl
sti
sbb
pop
push
sub
sub
lods
in
leave
aas
add
cmp
add
or
dec
cmpsb
xchg
xor
ja
roll
sbb
jmp
pop
ret
mov
add
stos
rcrb
in
or
arpl
mov
and
cmp
andl
inc
add
add
scas
stos
inc
imul
into
xlat
scas
in
cld
xchg
push
fistps
inc
add
jl
stos
push
add
sbb
loopne
icebp
cli
lds
add
bswap
das
inc
and
or
cld
idivl
dec
cmp
sbb
aaa
mov
mov
imul
push
add
inc
add
cmp
ja
popa
mov
je
pop
mov
shll
xchg
xchg
dec
repz
cmp
sub
int
out
xor
inc
mov
jg
in
es
add
pop
mov
call
in
sub
xchg
dec
mov
add
enter
repnz
mov
dec
and
fisubl
push
out
clc
ja
sub
xchg
mov
mov
push
dec
outsl
loope
into
xchg
pop
sbb
add
or
dec
push
shll
pop
mov
ficoml
das
out
push
jb
ret
jo
dec
adc
add
inc
add
idivl
adc
cld
les
dec
xor
cwtl
mov
int
fbld
and
push
cmp
xor
shll
bound
mov
adc
in
pop
sahf
mov
insl
lret
or
cmp
insl
xchg
mov
xchg
mov
push
sbb
or
xor
push
cmp
add
lds
xchg
in
orl
addb
jl
sub
add
xlat
mov
aam
pop
test
test
pop
aaa
out
rcr
cmp
add
inc
std
repnz
cs
jg
loop
std
out
repnz
cmc
fildl
fistl
icebp
adc
int3
mov
pop
in
and
xor
add
popa
add
add
push
incl
xor
cmp
stos
jmp
out
bound
pop
sahf
stos
sahf
movsb
aas
sub
inc
add
jecxz
push
jae
adc
stc
loop
arpl
mov
or
cmp
cmc
xchg
cs
out
jmp
int
shll
scas
lret
add
pop
mov
clc
adcl
sbb
movsb
test
push
pop
xchg
jl
andl
fs
movb
addr16
clc
popf
push
cmp
es
movb
xchg
mov
mov
out
sub
inc
sub
mov
js
xchg
add
sbb
add
test
add
mov
out
add
lret
mov
push
ja
add
inc
add
dec
pop
dec
add
xchg
and
add
or
rolb
sti
and
sub
cli
pop
sbb
in
sbb
xor
jne
lret
rorl
jo
jg
add
clc
or
pusha
add
cmc
in
and
push
add
loope
sub
ja
mov
add
or
fsts
lret
push
aam
fnstenv
xor
lods
out
jg
add
imull
mov
fmull
rcrl
fdivrs
sahf
sub
add
jbe
stos
out
pop
xchg
js
arpl
cmpsl
dec
outsl
fs
add
inc
add
clc
or
and
xor
fsubl
xlat
loop
divb
pushf
push
xor
iret
cmp
cmc
jecxz
adc
jns
add
inc
add
movsb
cmp
mov
popf
jmp
add
and
sub
adc
or
mov
add
daa
jae
mov
flds
xchg
and
pop
add
mov
add
cmp
xchg
jmp
out
pusha
add
push
xor
fcmovnbe
push
jge
mov
rcr
add
sti
push
pop
enter
jne
in
and
test
or
xlat
test
cmp
in
iret
adc
add
push
dec
xchg
pusha
add
sub
add
ret
addb
xchg
jno
sbb
add
jae
mov
jo
sbb
cltd
js
push
shll
mov
adc
add
xchg
dec
cmp
clc
inc
add
fiadds
add
sub
mov
lods
push
mov
and
adc
add
dec
addr16
adc
jecxz
insl
ljmp
inc
test
incb
dec
cld
lret
out
iret
push
mov
jl
xchg
sub
inc
add
mov
lret
mov
aad
rolb
mov
lret
adc
mov
inc
in
xor
not
movsl
bound
ja
mov
add
ficompl
jbe
pusha
add
mov
dec
fs
lahf
js
xchg
movsb
les
dec
xor
push
add
lret
js
cltd
cmp
mov
rolb
mov
add
aaa
insl
xor
jno
popf
and
pop
jmp
mov
arpl
stos
outsl
dec
mov
push
ss
addr16
sub
hlt
lods
cli
in
outsl
lahf
sti
or
mov
adc
pop
insb
rcl
xor
adc
mov
push
nop
mov
aad
cmp
arpl
filds
mov
lahf
aad
call
xor
add
adcl
add
add
ljmp
xor
rol
aaa
push
es
out
ret
repnz
dec
pop
ret
aas
jo
push
rclb
addb
mov
mov
addb
fs
mov
out
add
pop
dec
cmpl
cmp
cs
dec
scas
aaa
loopne
xor
jle
addb
add
nop
leave
bound
nop
lods
js
xchg
xor
xor
add
add
push
stc
mov
pop
test
and
repnz
xchg
jae
or
mov
mov
cmp
xor
sbb
inc
mov
dec
loope,pn
xchg
jbe
cmp
push
inc
add
mov
xor
sbb
cmp
outsb
stos
scas
fcmovnbe
inc
mov
outsl
stos
jo
and
jge
jo
stos
cld
fs
test
add
dec
sub
lret
fcmovb
add
popf
test
jne
mov
pop
aam
add
jg
add
aas
das
jg
inc
add
lds
or
add
cld
out
lock
rolb
scas
cmp
add
fbld
cli
and
lret
adc
scas
clc
pop
mov
fucomp
cs
vpunpcklbw
xchg
mov
add
sbb
add
jmp
addr16
jbe
push
pop
cmp
fwait
movsl
jp
cmp
inc
dec
mov
add
add
clc
cld
cmp
loopne
addb
repnz
iret
nop
or
add
hlt
jmp
pop
sub
bound
test
jge
test
cmp
inc
add
jl
jp
mov
push
out
adc
insl
sub
push
dec
jb
shrl
add
int3
mov
rcll
fisubs
sub
cmp
out
add
pop
pop
iret
jle
add
xchg
fstl
cltd
inc
rcl
or
pop
inc
add
lea
inc
stc
xchg
cld
gs
add
jae
add
mov
add
shll
mov
lock
add
test
add
add
pop
cmp
std
and
imul
aad
outsb
mov
int3
cmpl
test
or
add
adc
fimull
outsb
test
adc
jecxz
add
and
and
xor
cli
stos
lds
fstpl
dec
sub
repnz
movb
mov
mov
mov
cmp
add
mov
das
inc
adc
dec
out
add
loop
jp
sub
sbb
pushf
js
jmp
rcl
iret
es
sti
out
dec
call
cld
cmp
cmp
xor
rcrb
add
pop
fistpll
mov
dec
fldenv
add
ja
inc
inc
repnz
stos
inc
lock
jb
sbb
mov
mov
xchg
aaa
and
dec
sub
call
push
cmpsl
xor
sbb
ss
pusha
add
cmp
mov
xor
mov
push
add
test
jle
fcomp
inc
add
das
add
xchg
cmp
push
aam
push
or
fwait
push
js
mov
pop
out
repnz
cmpsl
push
insl
sti
push
std
scas
xor
jno
add
mov
mov
and
sbb
mov
popf
dec
mov
out
mov
addr16
pop
mov
jb
add
mov
in
movsb
xchg
xchg
inc
add
sbb
push
test
and
je
mov
fwait
mov
cmpsl
jl
adc
dec
dec
ficomps
pop
and
dec
adc
cwtl
ret
sbb
lods
mov
inc
add
mov
rcll
mov
push
add
add
pop
andl
int
dec
fists
ss
add
inc
les
mov
in
scas
movsb
mov
add
repz
sub
mov
icebp
cmp
scas
fistl
or
jmp
mov
mov
add
add
jecxz
push
stos
fs
imul
clc
pop
jge
cmp
push
sahf
dec
iret
sbb
push
xor
daa
xchg
or
lods
sub
outsb
movsl
aaa
popa
setne
add
sub
sub
insl
pop
inc
push
roll
ror
lret
cmpsl
scas
aaa
cld
adc
xchg
aas
sbb
inc
add
inc
push
jg
mov
out
pop
cmp
das
inc
jb
xor
test
aas
or
add
or
repnz
pop
push
xor
sub
push
mov
lahf
cli
lret
repnz
fwait
inc
bound
cmpsb
call
out
xor
push
push
jno
repz
jbe
dec
cwtl
gs
cwtl
lcall
sub
rcll
cmp
xchg
lret
xor
inc
add
in
cwtl
sub
pop
scas
push
movb
sub
sub
cmpsl
add
add
cmp
lret
aam
and
lock
lahf
jno
mov
pop
repz
mov
add
push
fcmovu
jo
push
mov
leave
mov
enter
xor
and
mov
cmpsl
movl
mov
adc
aam
ret
or
xchg
inc
add
arpl
xor
aam
xchg
mov
addb
cmpsl
ljmp
neg
movb
and
pop
fildll
test
imul
into
add
stos
ret
cmp
pop
mov
les
inc
jns
xor
mov
add
lcall
push
add
cli
clc
insb
cwtl
loopne
push
fisubrl
jae
dec
xchg
mulb
xchg
popf
in
pushl
pop
sub
add
push
add
cmc
cmc
scas
test
pmaxsw
push
leave
ss
sub
xchg
je
pop
call
or
lea
and
or
roll
push
and
push
pop
out
test
outsb
mov
xchg
inc
adc
push
nop
in
sub
pushf
out
add
push
hlt
cmp
scas
sub
dec
sub
xchg
sahf
lret
loop
je
dec
pop
adc
jmp
jno
add
add
add
pushf
xchg
insb
lods
inc
push
test
add
roll
add
aas
or
add
ret
cld
adc
mov
lcall
rolb
sbb
loopne
fldt
jge
xor
les
adc
mov
pop
leave
xchg
movsb
dec
stos
push
sub
stc
adc
in
in
sbb
push
sbb
jo
stos
enter
movb
lods
dec
mov
cmp
sub
enter
mov
addb
sbb
push
add
xlat
aam
jg
adc
icebp
in
sub
adc
add
jae
add
mov
push
movbe
fisubs
mov
outsb
mov
mov
add
test
mov
es
add
fwait
sub
mov
mov
leave
rol
add
clc
aad
mov
jae
jnp
dec
xor
pop
cmpl
push
push
add
fs
cltd
jp
add
or
dec
rcll
in
mov
push
add
inc
jmp
and
push
or
add
pop
jns
inc
std
out
je
fmull
mov
sub
addb
push
rclb
ret
sahf
cmp
and
add
mov
int3
addb
shrb
fldcw
xchg
push
push
mov
add
jb
fsub
fisttpl
ja
into
jmp
or
add
add
jne
mov
repz
aam
stos
push
add
aaa
mov
add
push
xorl
sbb
jmp
aam
or
cmp
lret
or
addb
lret
lcall
xor
add
int3
addb
stc
add
or
push
or
cs
sub
cs
cmpsb
jmp
add
popf
mov
shll
leave
mov
leave
mov
mov
cmp
ficompl
jb
into
pop
pop
mov
cmp
movsl
push
sbb
popa
adc
mov
sub
push
inc
rcrl
ret
add
push
add
sbb
negb
loope
repz
je
stc
jp
pop
cmp
dec
lods
dec
jno
andl
negb
mov
jl
sub
add
xchg
fcoms
repz
es
fldenv
dec
jecxz
outsb
xchg
add
inc
add
sub
sbb
ljmp
cmp
insb
xchg
adc
dec
stos
push
adc
jb
stos
push
mov
cmp
jmp
cwtl
clc
xor
add
decl
sub
pop
mov
mov
cmc
addl
add
add
push
scas
cltd
jecxz
sbb
cmp
sbb
in
in
fstpl
sti
dec
push
cld
jp
leave
inc
sub
cmp
adc
adc
jge
sbb
add
ss
add
pop
outsl
jbe
arpl
int3
fsubp
insl
insb
xchg
sbbl
fisubrs
or
aas
jae
aam
add
test
add
add
add
