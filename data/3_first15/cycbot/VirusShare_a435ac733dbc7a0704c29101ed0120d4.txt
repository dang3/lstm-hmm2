mov
jmp
lods
fcomp
jb
mov
mov
arpl
mov
mov
jno
add
in
and
fwait
jno
in
jne
add
aad
test
in
addr16
lret
lods
ja
adc
decl
divb
ficomps
cmp
mov
mov
mov
jecxz
and
or
mov
pop
and
mov
repz
xchg
mov
push
int3
lock
in
fwait
int3
retw
add
mov
dec
jbe
ficoms
mov
ja
std
mov
add
adc
push
std
popf
idivl
lahf
in
inc
jmp
add
mov
int3
xchg
push
add
add
inc
scas
pusha
add
add
lret
lock
jl
jmp
push
imul
add
mov
mov
ja
shrl
iret
leave
repnz
jl
mov
dec
sbb
aas
lods
jo
mov
fisttpll
xlat
cld
fistpl
add
movl
add
push
sahf
inc
add
push
stos
add
mov
test
jl
test
xor
lods
push
cmpsl
cmp
dec
fwait
int
movsb
imul
mov
les
dec
cmp
and
add
mov
pop
mov
imul
shll
mov
lret
jp
imul
sub
mov
sti
jbe
lret
sbb
std
test
mov
mov
pop
push
dec
push
or
pop
cmp
stos
sar
out
clc
xor
js
push
add
test
mov
add
dec
fcoms
ljmp
mov
add
add
inc
nop
add
fisubrs
and
push
leave
es
jle
add
cld
ds
mov
mul
add
dec
imul
fwait
cmp
in
les
mov
cmp
add
cmp
add
xchg
clc
mov
mov
ds
sar
rolb
mov
mov
mov
pusha
add
int3
sub
lcall
data16
mov
movsl
mov
xlat
xor
push
adc
add
xchg
add
ja
stos
sub
rolb
mov
dec
pop
mov
add
sahf
jg
or
shr
jno
add
add
jne
mov
sbb
add
scas
push
incb
add
add
in
xchg
sub
mov
shr
loope
nop
add
pop
gs
lods
test
icebp
mov
sti
cwtl
inc
mov
insb
lods
sahf
add
mov
pop
sbb
mov
jecxz
rolb
mov
adc
ret
jecxz
add
mov
mov
cltd
pop
and
mov
pop
lret
mov
mov
add
es
fidivrl
xchg
call
pop
mov
sbb
rcl
leave
inc
xor
jl
push
sub
add
out
or
mov
mov
iret
cmp
rcrl
lods
or
cmp
add
mov
sub
into
rolb
mov
test
cli
js
addb
cmp
ret
push
and
pop
sbb
xor
in
cmp
add
adc
fisubl
add
mov
cmpsb
ja
push
jecxz
and
adc
rcll
add
mov
mov
mov
vmptrld
cmp
cmp
add
bound
mov
loopne
mov
push
test
movsb
sub
add
out
mov
roll
add
mov
mov
lods
dec
and
mov
cltd
pop
push
je
jae
jg
dec
out
add
inc
add
std
cs
cs
fistl
add
push
idiv
mov
add
ret
jns
push
add
push
adc
stos
inc
pop
insl
mov
cld
stc
or
and
lds
mov
ljmp
nop
add
pop
push
dec
inc
loop
mov
aam
push
lret
test
fisubs
mov
mov
das
bound
mov
and
mov
dec
mov
loope
sub
add
mov
and
add
mov
pop
lcall
sub
cmp
mov
add
jmp
int
and
mov
mov
addb
mov
lock
lods
push
cwtl
mulb
sbb
inc
mov
dec
into
test
lahf
dec
lods
or
aad
das
repnz
mov
add
mov
add
sub
mov
cwtl
xor
adc
xchg
int3
sahf
jae
loopne
mov
push
add
mov
add
sub
add
push
shll
add
es
sub
cmc
mov
inc
add
fisttpll
popf
in
sub
and
and
mov
mov
xchg
add
mov
sub
jp
jl
adcl
test
add
add
imulb
movsb
cmp
repnz
jae
test
idivl
inc
add
into
fbstp
test
mov
dec
jns
rolb
mov
scas
lahf
mov
fiaddl
call
add
fldl
add
and
scas
push
pop
mov
scas
cmp
add
and
mov
cmp
inc
out
fwait
divl
jmp
aad
add
xlat
xchg
inc
jp
add
jb
mov
jmp
fadd
stc
or
mov
fildll
ficoms
or
add
imul
add
popf
push
je
lret
add
pop
xor
or
inc
test
mov
add
dec
repz
sti
in
cld
and
pop
fs
rolb
mov
xor
mov
je
add
xchg
mov
mov
mov
inc
push
fsubrp
push
xchg
pop
stc
cmp
ljmp
cmp
cmp
loop
mov
scas
add
mov
dec
mov
mov
mov
stc
addb
out
push
mov
inc
lea
adc
mov
addl
fisubs
sub
add
and
xchg
mov
das
cmc
out
sti
mov
mov
mov
lea
adc
popa
adc
mov
fs
mov
test
cmc
int
mov
add
mov
mov
add
sub
mov
add
cmp
je
xchg
inc
negb
inc
jg
and
sub
aad
repz
jl
jmp
pop
sbbl
push
es
popf
gs
outsl
adcl
scas
pop
push
pop
fistpll
pop
scas
xchg
in
loopne
mov
mov
mov
adc
mov
sbb
aam
and
jge
lea
jmp
cwtl
ds
and
mov
adc
push
cli
mov
mov
mov
push
ja
scas
out
adc
ret
pop
inc
jl
mov
add
add
aaa
fisubrl
mov
adc
jge
add
mov
repz
mov
add
dec
xor
push
mov
pop
xchg
add
mov
mov
test
jg
mov
fdivrs
add
lret
imul
subl
lds
add
push
lahf
xor
cmp
add
inc
repz
mov
scas
loop
mov
add
add
inc
inc
cmpsb
push
fnsave
mov
lret
xchg
addr16
mov
outsb
mov
add
in
stc
mov
addb
pop
and
mov
lret
sti
mov
jne
stos
sub
das
test
mov
push
sbb
aaa
sbb
mov
mov
xchg
rolb
mov
mov
xchg
lods
in
ror
inc
add
or
or
dec
sub
in
pop
mov
add
inc
and
aad
add
cltd
dec
sub
pop
and
push
daa
adcl
fisubrs
and
lds
mov
mov
mov
xchg
scas
outsb
insl
mov
rolb
mov
add
frstor
imul
sub
add
dec
outsl
pop
mov
mov
notl
lock
int
addb
in
push
add
mov
filds
mov
mov
out
jne
sbb
push
xor
mov
mov
mov
mov
jp
add
mov
mov
jle
daa
stos
setnp
add
and
rolb
mov
mov
fcompl
iret
fidivs
mov
sub
sti
dec
sti
rolb
mov
fmul
inc
add
add
xor
mov
inc
add
pop
sub
cmp
adc
add
mov
imul
inc
sub
daa
push
xor
idivb
add
out
rorl
jae
add
bound
mov
add
jno
adc
int3
pop
test
mov
xchg
or
adc
mov
mov
mov
sub
or
rolb
jmp
add
mov
xchg
rcll
mov
test
dec
pop
divb
sub
call
push
adc
xor
enter
adc
mov
add
cmp
mov
in
adcl
push
jle
call
sub
add
xchg
movsb
inc
and
pusha
add
iret
mov
jp
cmp
add
mov
add
mov
add
mov
sbb
add
mov
outsb
adc
iret
fst
das
cltd
xchg
xchg
add
lcall
lds
push
addb
ja
push
lea
push
mov
xchg
stos
loopne
mov
mov
clc
and
add
insl
mov
pusha
add
cmp
pusha
add
add
out
rcrl
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
mov
xlat
mov
jns
add
scas
int3
lret
bound
mov
add
ficomps
mov
mov
dec
ret
and
mov
add
callw
jg
add
ljmp
cwtl
enter
in
movq
adc
mov
mov
mov
adc
push
sbb
add
add
push
jge
lahf
cld
testl
jns
fbld
mov
jns
add
add
mov
xchg
int3
ja
fnstenv
push
mov
scas
mov
mov
lahf
roll
mov
lahf
add
inc
movsl
addr16
loop
mov
sarl
mov
inc
dec
insb
in
rolb
add
mov
enter
mov
jnp
js
mov
mov
nop
add
xor
pop
cli
repz
rcrl
mov
xlat
lcall
mov
lea
insl
inc
add
lds
mov
ljmp
xchg
repz
adc
cmp
mov
cmp
cmpsl
cmc
mov
das
push
into
dec
out
mov
mov
mull
jnp
add
mov
and
mov
sbb
mov
add
call
jmp
mov
add
mov
add
jl
pop
mov
test
and
in
ret
std
dec
and
add
add
mov
mov
add
add
add
jp
cmpsb
mov
lods
and
lea
push
shrl
add
mov
arpl
sub
imul
and
mov
mov
jns
hlt
out
inc
add
mov
sbbl
xchg
fwait
mov
mov
inc
add
stc
cmp
mov
insl
iret
sub
mov
pop
mov
mov
mov
incl
add
add
in
insb
inc
cmp
adc
sbb
aam
inc
add
std
mov
add
ficoms
cmpsb
sub
dec
outsl
lods
mov
stos
popa
fcoms
les
ret
push
rolb
mov
clc
jg
xor
add
sub
mov
dec
mov
jg
adc
add
mov
or
push
dec
ljmp
imul
cmp
adc
std
add
mov
or
ror
sub
fcmovnu
ret
addb
les
mov
ss
mov
mov
jmp
jb
mov
sti
add
mov
fsubrl
fstpt
into
fistl
sub
sub
add
jle
mov
mov
cmp
fiaddl
imul
into
or
adc
mov
in
sti
push
shll
repnz
mov
mov
push
push
add
mov
dec
push
dec
stos
cmpsl
int3
data16
push
addb
out
mov
fistl
mov
pop
dec
bound
mov
mov
mov
rolb
mov
cmovge
cmp
bsr
add
add
scas
in
jl
std
cltd
mov
add
jno
lahf
or
data16
jne
add
xor
arpl
add
add
push
add
lods
movsb
inc
add
cmpsl
cmp
test
xchg
aaa
mov
mov
mov
mov
mov
or
addb
add
mov
call
add
mov
in
repz
inc
add
mov
mov
outsl
xor
mov
add
xchg
or
mov
add
test
xchg
popf
rorl
cmp
or
mov
cmp
add
mov
mov
fiadds
sub
jl
and
add
das
cmp
es
outsb
cmpsb
in
js
dec
pop
jecxz
gs
sbbl
add
stc
push
lret
fildl
jmp
fnop
add
out
add
adc
push
mov
mov
movsl
aas
mov
push
cld
icebp
push
lods
adc
mov
add
cwtl
jo
mov
test
jmp
add
cmp
scas
push
sbb
xor
add
xchg
mov
mov
ds
mov
in
insl
leave
pop
adc
mov
sar
add
xchg
pop
or
lock
jge
jnp
sahf
jl
add
ss
leave
adc
mov
jb
mov
cmpsl
sub
and
mov
stos
mov
repnz
js
fwait
mov
pushl
pop
shll
and
fldl
add
mov
mov
adc
mov
add
add
movsl
or
sub
xchg
mov
sbb
mov
cmc
jp
jl
add
aaa
les
repz
daa
out
xchg
loope
add
ret
fistpl
mov
es
mov
add
sbb
cld
pop
push
cli
jmp
sbbl
mov
push
add
das
pop
push
lea
pop
cmp
orps
or
xlat
inc
add
add
adc
sub
sbb
sbb
adc
movsl
je
xchg
lea
mov
xor
mov
repnz
bound
mov
push
jl
and
mov
gs
cmp
add
shl
rolb
mov
push
add
inc
add
inc
add
sbb
adc
fadds
mov
mov
ljmp
addb
push
fdivp
add
mov
stos
inc
rolb
mov
mov
int3
xor
mov
scas
negl
push
nop
add
mov
sbb
cs
out
mov
push
add
xlat
int3
push
mov
inc
add
cltd
nop
add
add
daa
xor
mov
add
add
aam
add
lahf
push
xor
lds
jp
gs
push
add
mov
adc
je
and
push
call
ret
push
aaa
fistps
jbe
add
mov
lds
pop
leave
cli
out
mov
mov
aaa
rolb
mov
mov
loopne
mov
jne
imul
push
add
mov
mov
mov
xchg
add
adc
fs
adc
mov
and
mov
push
add
mov
lcall
mov
xchg
jae
mov
movsb
std
popa
std
dec
fs
sub
mov
add
mov
push
inc
movsb
imul
rolb
test
cmc
jo
mov
or
jne
loop
mov
lahf
adcl
dec
cmpsb
cmp
mov
sub
stos
pop
mov
cmp
outsl
test
adc
sub
jle
pop
cmp
pop
push
add
es
arpl
pop
sahf
mov
pusha
add
jmp
notb
mov
sub
lods
sti
mov
jecxz
adc
mov
dec
sub
xchg
ret
rolb
mov
jl
add
bound
mov
scas
stos
dec
adc
mov
jmp
sbb
cmp
push
or
push
dec
dec
and
addps
repz
sub
dec
pop
adc
sbb
add
or
add
dec
fs
pop
rolb
mov
ljmp
outsl
aas
testl
add
mov
test
jne
ret
jnp
pop
mov
movb
pusha
add
jbe
out
in
mov
fnstenv
mov
cld
mov
das
cmpsl
insl
add
mov
out
and
mov
outsl
lods
xor
mov
ds
jp
add
mov
mov
pusha
add
mov
mov
mov
adc
mov
pop
inc
mov
cwtl
and
xlat
mov
mov
mov
and
mov
pushf
adc
add
add
and
mov
add
mov
popf
clc
mov
stc
mov
lods
nop
add
pop
dec
cmp
add
sti
movsb
xor
mov
cmp
test
add
mov
pop
cld
fdivl
and
mov
std
int
pop
test
cwtl
fwait
incb
push
rolb
mov
mov
data16
ret
push
stc
add
arpl
call
add
imul
add
mov
add
test
adc
mov
ljmp
js
cli
loopne
mov
dec
add
xor
jle
mov
sbb
add
gs
sub
adc
mov
mov
mov
int3
enter
pushf
lret
fstp
jecxz
xor
mov
inc
adc
add
push
push
sub
fsts
push
aad
sub
jle
or
push
add
pop
movsl
inc
add
mov
fs
ja
adc
mov
pop
ss
mov
gs
push
push
pop
jle
arpl
xchg
mov
add
in
and
mov
stos
popf
aad
es
mov
jge
pop
xchg
add
mov
add
iret
sub
mov
xor
xchg
add
sbb
test
and
lds
push
xor
into
cmp
add
mov
add
sub
add
je
add
mov
fcoms
rolb
mov
loope
movsb
imul
loope
dec
jno
pop
jnp
cmp
mov
push
daa
add
jb
mov
addb
into
cli
mov
xchg
xchg
push
or
pop
arpl
mov
add
add
add
sti
rolb
and
and
mov
pop
data16
xchg
int
les
rolb
mov
dec
bound
mov
jg
cld
cmpsl
mov
aas
or
sbb
pop
sbb
add
rolb
out
stc
in
and
int3
mov
add
push
push
and
test
xor
mov
ljmp
xchg
stc
out
lret
fadd
imul
inc
add
pop
jmp
jmp
arpl
mov
jae
add
loopne
mov
repz
or
test
adc
stc
jno
add
add
sarl
pop
sub
or
xlat
mov
add
add
mov
lock
add
xor
add
sub
addr16
and
cmpsl
mov
imul
aad
icebp
sub
cmc
jl
test
jbe
cli
push
popa
add
popf
mov
lret
lea
mov
repz
popf
nop
bound
mov
add
adc
and
rcl
add
adc
mov
pop
cmpsb
or
mov
add
fsubrl
adc
mov
lods
dec
add
mov
jnp
or
mov
movsl
rolb
mov
add
jecxz
lahf
xor
adc
arpl
xor
mov
push
inc
add
movsl
rolb
mov
add
add
mov
pop
lahf
hlt
out
cmpsb
shrl
pop
mov
dec
roll
push
test
in
aas
cmp
arpl
push
setne
inc
sub
pop
je
add
std
fdivrs
mov
mov
push
mov
adc
and
mov
and
mov
dec
adc
adc
mov
sub
fisttpll
loope
das
in
add
mov
jg
add
mov
call
lcall
inc
mov
subl
lock
cmpsb
das
daa
testl
mov
mov
mov
adc
dec
pop
and
push
add
in
imul
add
in
add
lock
movsl
das
leave
popl
mov
mov
and
rolb
mov
scas
test
js
fsub
mov
cld
hlt
popf
sbb
testl
out
and
clc
test
je
push
ret
and
sbb
fsubl
mov
test
inc
add
xchg
movsb
int
or
imul
ret
nop
add
jge
cmc
insl
pop
pop
mov
je
sbb
add
sub
dec
popf
pop
cmp
adc
mov
add
mov
mov
js
dec
ja
add
lret
cmpsb
lret
add
mov
test
popa
dec
hlt
push
sub
add
pop
add
insb
or
push
cmp
mov
add
mov
addb
and
mov
mov
fldenv
mov
dec
adc
mov
add
mov
mov
leave
pop
jecxz
add
scas
rolb
mov
aas
sbb
mov
sbb
mov
cmp
mov
add
xchg
hlt
dec
push
push
add
sbb
pop
xor
push
push
ja
adc
mov
pop
mov
jnp
aad
add
outsb
adc
mov
lret
add
nop
add
or
xchg
jmp
pop
push
add
jnp
pop
cwtl
adc
in
sbb
mov
movsl
mov
dec
stos
sub
mov
in
mov
add
adc
xchg
add
mov
outsb
pushf
add
loope
fisubrs
stc
adc
mov
add
push
out
add
mov
in
sbb
cmpsl
or
shll
dec
add
ss
jb
mov
cmp
pop
inc
add
pop
and
icebp
add
jnp
add
gs
pushl
mov
dec
pushf
daa
and
mov
into
add
popf
stos
xlat
mov
jp
adc
mov
cs
cwtl
popa
sbb
mov
mov
mov
dec
rolb
mov
fistl
xor
addb
scas
inc
xchg
xor
mov
dec
cltd
fimull
sti
cmpsb
out
out
mov
push
ret
dec
xchg
add
push
addr16
out
arpl
imul
sbb
cmc
int3
xor
clc
pop
xor
out
lahf
jg
pop
cs
or
pop
ja
and
mov
cmp
addb
mov
dec
mov
aad
insb
pop
insl
xchg
jp
insl
xchg
or
and
mov
add
add
push
and
and
mov
loopnew
mov
add
pop
jmp
xchg
xchg
mov
xchg
and
cmpsb
jl
add
mov
addr16
or
add
mov
inc
add
push
icebp
dec
je
dec
jae
jbe
add
add
sub
add
xor
mov
push
rolb
mov
mov
sub
add
add
in
xchg
push
je
mov
sub
add
sbb
test
xor
add
push
mov
add
mov
insl
hlt
data16
sbb
fldenv
add
test
mov
adc
movsb
and
mov
sub
xor
mov
insl
test
adc
push
add
mov
mov
add
repz
add
mov
mov
mov
ljmp
add
filds
add
mov
push
cmpsb
or
pop
xchg
add
xchg
push
js
xchg
and
mov
cmp
lea
push
hlt
pop
jmp
mov
add
rolb
mov
mov
add
add
pop
fisubs
outsl
out
mov
add
das
dec
out
arpl
mov
push
mov
push
add
fsubrs
mov
lea
mov
jmp
add
ficoml
shl
and
rolb
mov
addb
inc
add
mov
stos
sub
ja
bound
mov
add
add
cmp
jbe
cwtl
cmp
loop
mov
add
add
mov
mov
inc
mov
xchg
das
enter
js
lahf
jecxz
divl
adc
mov
jne
sbb
ret
sbb
jo
mov
cmp
lcallw
sbb
mov
sub
add
loop
mov
dec
jne
je
enter
inc
mov
pop
or
je
ja
into
add
mov
mov
xlat
cs
int3
out
imul
mov
sbb
add
mov
push
mov
dec
inc
test
dec
cwtl
and
ja
in
adc
mov
add
cmp
test
rolb
add
mov
add
mov
xchg
push
mov
fnstenv
inc
add
fwait
cwtl
pop
aam
xchg
jmp
scas
jmp
add
addb
addl
or
push
sbb
push
add
mov
xor
mov
lea
and
mov
mov
add
jno
imul
test
mov
jne
xchg
cld
fildl
fists
add
in
sub
inc
add
cmp
push
inc
xchg
movsl
mov
bound
mov
mov
adc
in
addb
insl
fdivrp
xor
add
loopne
mov
pop
rolb
push
add
sti
fisubrs
scas
adc
mov
add
mov
xchg
frndint
cmp
idivb
imul
xchg
test
rolb
mov
xchg
cmp
push
jmp
mov
xchg
xchg
add
mov
add
mov
mov
aas
aaa
or
xchg
cmp
mov
pop
jns
cwtl
aad
sbb
or
mov
push
add
add
cmp
cmp
ljmp
add
mov
add
push
mov
mov
rolb
mov
add
mov
pop
sbb
jmp
insl
mov
xor
add
mov
xchg
xchg
mov
mov
add
mov
add
add
mov
test
add
xchg
mov
addb
xchg
test
pusha
add
add
arpl
out
mov
mov
outsl
in
jno
out
dec
subl
fisubs
sbb
push
ja
scas
xor
mov
adc
mov
je
cwtl
push
insl
in
cmpsl
rolb
add
add
xchg
push
add
aaa
jnp
in
lea
in
xchg
in
out
out
jo
mov
lret
push
add
je
repz
mov
add
dec
adc
jge
movsl
adc
cltd
push
enter
xor
add
mov
mov
and
mov
sub
add
ret
iret
pusha
add
mov
dec
int
stos
pop
sbb
and
sahf
enter
push
in
mov
mov
jl
rolb
mov
pop
cs
inc
sbb
sbb
cli
cmp
jl
rolb
mov
add
add
mov
in
mov
sbb
add
test
add
cmp
jns
push
push
sub
or
jecxz
cmp
scas
jno
in
cmpsl
pop
add
and
mov
mov
mov
pop
mov
clc
inc
nop
add
insl
or
mov
lods
fadd
stos
cmpsl
and
inc
add
adc
mov
add
xor
les
daa
push
mov
pop
xor
pusha
add
mov
mov
add
pop
insl
dec
cmp
lods
inc
inc
rolb
mov
mov
mov
cmp
add
push
adc
mov
mov
fwait
lahf
push
add
add
mov
addb
out
out
movsl
dec
sub
cltd
dec
inc
add
aam
rolb
mov
stos
sahf
dec
sarl
aam
add
cmp
mov
test
nop
add
js
js
icebp
cmp
add
xchg
xchg
in
outsb
jl
xchg
add
fsubrs
imul
add
nop
add
add
mov
add
push
mov
mov
add
add
add
jbe
das
jg
sbb
cltd
mulb
add
xchg
mov
add
popf
out
mov
dec
cmp
aad
sbb
xor
mov
add
jge
or
imul
mov
cli
addl
mov
mov
in
imul
insl
pop
jecxz
lret
mov
mov
jmp
mov
ret
lcall
add
cmpsl
imul
xor
mov
add
xlat
mov
mov
leave
int3
jg
rolb
mov
mov
ljmp
push
mov
cmc
inc
pop
add
xchg
pop
xchg
sub
add
iret
sbb
jg
sbb
insl
xchg
add
cmp
scas
int3
rolb
mov
add
mov
and
mov
add
mov
lods
roll
push
add
jne
fwait
sbb
aas
lock
mov
mov
pushf
pop
inc
js
add
rolb
fsubs
mov
leave
jle
pop
mul
rolb
mov
or
adc
add
mov
fdivrs
int
cltd
jo
mov
sahf
pop
imul
or
add
insb
clc
divb
sbb
cmp
sbb
add
cmp
mov
cwtl
xchg
xor
mov
daa
mov
into
pop
aaa
pop
mov
into
jl
ja
add
mov
mov
pop
pop
bound
mov
jecxz
addb
fcomip
and
andl
sub
add
add
mov
imul
add
sti
enter
adc
dec
pusha
add
cmp
movsl
push
cld
mov
rolb
mov
es
jne
add
jl
jmp
add
mov
add
mov
mov
pop
test
or
pop
xor
jp
icebp
std
scas
daa
hlt
xchg
or
inc
icebp
or
mov
pop
mov
cmp
mov
adc
mov
mov
fstps
outsb
divb
xchg
and
jle
and
adc
mov
dec
add
add
push
cli
sub
mov
mov
adc
mov
ja
lods
jae
add
and
mov
sbb
pop
push
jnp
dec
std
push
lock
add
cmp
lock
loop
mov
dec
push
add
insb
xchg
sar
jbe
push
add
mov
push
je
outsb
rolb
lds
xchg
add
iret
enter
movsb
out
int
cmpsb
mov
add
aas
rolb
jge
std
xchg
add
add
cmovbe
call
and
mov
loope
add
or
mov
push
pop
xchg
add
push
addb
mov
out
cmp
xchg
add
inc
add
sbb
cmpsb
sub
inc
pop
aas
push
sbb
push
call
xchg
sbb
js
adc
cmpsl
sbb
mov
mov
fmull
jmp
mov
mov
aas
hlt
out
xchg
sbb
arpl
mov
inc
aad
mov
mov
fucomi
loope
add
mov
add
mov
add
rorl
adc
insb
mov
mov
mov
popf
inc
insb
mulb
pop
xor
sub
mov
ret
sti
fisttpll
cmp
mov
jns
imul
daa
sbb
adc
push
jno
add
or
outsb
loopne
mov
mov
add
mov
xor
out
jge
out
jl
xchg
ret
inc
inc
outsl
cmp
repnz
mov
jl
fisttpll
mov
mov
add
mov
fstps
pop
jae
inc
insl
pop
out
fstpt
mov
xor
ss
cld
sahf
nop
add
shrl
add
push
add
mov
or
xchg
loopne
mov
std
in
rolb
and
adc
add
jno
test
mov
inc
pop
leave
movsb
jbe
add
add
fcompl
cmp
es
jle
xchg
add
or
das
mov
jns
dec
sti
pop
out
pop
pop
addb
inc
add
pop
mov
mov
push
adc
mov
pop
sbb
addb
neg
cli
push
pop
sti
inc
add
inc
aas
mov
add
add
aam
cmp
mov
push
sbb
divl
mov
movsb
stos
stc
or
rolb
mov
aaa
jp
add
sahf
mov
fmul
sub
repnz
pop
sub
push
pop
add
mov
fs
add
lea
sbb
mov
xlat
or
add
mov
fwait
or
cmp
mov
fcoms
sbb
aaa
jne
ret
cmpsl
in
out
cmp
or
test
dec
xor
xor
mov
pushf
enter
cmpsl
out
add
mov
add
fdivr
nop
add
mull
lahf
rolb
mov
inc
mov
mov
add
pop
scas
arpl
mov
add
outsl
pop
xchg
add
mov
jge
mov
pop
into
rcll
inc
fwait
xchg
jecxz
and
cmp
mov
add
mov
inc
add
mov
lret
das
hlt
sub
add
out
push
add
fwait
inc
add
ret
les
pop
add
imul
add
add
jne
mov
cld
fldenv
mov
add
imul
mov
cmp
mov
add
mov
stos
cwtl
cmc
rcll
add
mov
dec
mov
int3
xor
add
jbe
mov
push
sbb
cmp
mulb
ficoml
xor
add
sbb
mov
loope
popa
push
ret
mov
insb
sub
test
xor
mov
add
push
dec
popa
cmp
clc
xor
mov
jmp
sbb
fnsave
and
mov
aam
lods
jae
outsb
xchg
add
or
add
mov
into
jle
add
ss
stos
int
test
push
inc
add
mov
dec
sub
add
fidivrs
insb
stos
outsl
stos
test
inc
add
mov
in
jp
jnp
cmp
shl
push
inc
add
movsb
stc
mov
jge
cld
rcrl
add
mov
mov
cmp
mov
fistl
stos
pop
mov
lods
rolb
push
cmp
push
add
cmp
iret
fisttps
stc
addb
add
push
addb
pop
in
add
sub
sub
pop
and
fdivp
add
add
mov
int
mov
mov
mov
inc
add
jb
mov
mov
inc
push
loope
push
xchg
adc
mov
add
lods
and
add
cmpsl
mov
mov
mov
add
insl
push
je
add
dec
mov
sbb
mov
xchg
mov
mov
sti
and
mov
test
add
arpl
inc
call
outsl
pop
neg
pop
pusha
add
mov
into
out
add
xchg
movl
mov
pop
push
insb
pop
inc
dec
hlt
ficoml
popf
lods
pop
repnz
in
pop
test
js
push
lock
test
cmpsb
out
jbe
int3
mov
mov
mov
inc
and
pusha
add
dec
dec
mov
stc
out
xchg
add
mov
push
add
jl
decb
rolb
les
ret
in
or
add
mov
add
adc
add
dec
into
and
dec
rolb
inc
call
mov
add
mov
arpl
dec
xchg
movsl
cli
dec
sub
add
add
jns
in
fdivrl
or
cmp
add
je
inc
pop
aas
dec
pop
loop
mov
pop
imul
add
dec
popf
cmp
outsb
loopne
mov
cmp
cmpsb
mov
and
mov
lcall
add
pop
xchg
pusha
add
pop
je
lds
sub
or
stos
push
mov
push
stos
addr16
adc
cmp
add
neg
bswap
mov
loopne
mov
aad
rcr
xchg
es
xchg
add
insl
or
fidivrl
stc
pop
dec
xor
add
add
and
mov
or
fcompl
subl
dec
leave
aaa
add
enter
add
repz
add
mov
and
pop
sub
addb
pop
in
aad
add
shll
mov
add
dec
clc
loop
mov
xchg
fimull
jno
mov
xchg
cmp
mov
insl
ret
shrl
into
movsl
mov
mov
test
rolb
inc
ljmp
lods
jge
mov
jb
mov
mov
dec
jp
jnp
mov
arpl
add
rolb
arpl
add
sbb
add
add
in
sahf
out
arpl
jno
xchg
add
push
divb
mov
push
fimuls
pop
cmc
nop
add
scas
fstpl
idivb
ret
scas
das
pop
xorl
add
xchg
add
ja
jb
mov
imul
pusha
add
add
mov
addb
loopne
mov
es
fldenv
or
fcomps
repnz
loop
mov
mov
add
push
mov
jl
jbe
lret
or
sahf
sub
inc
add
add
mov
xchg
and
shrl
mov
add
mov
add
push
in
add
jle
dec
add
rorl
ret
repnz
subl
fimuls
in
cmpsl
popf
stos
push
loopne
mov
imulb
xchg
add
in
repz
faddl
adc
mov
mov
inc
sti
js
test
repnz
jmp
sub
outsb
mov
mov
out
add
pop
xor
add
xor
hlt
and
mov
rolb
mov
and
mov
stos
pop
push
mov
mov
add
xor
mov
adc
mov
sbb
xchg
mov
jb
mov
int
mov
movsl
dec
andl
aaa
insl
inc
addb
js
movsl
sub
mov
enter
cmp
lea
jo
mov
stos
out
stc
mov
sbb
and
mov
fptan
add
mov
fistpll
mov
mov
dec
imul
adc
repnz
add
push
clc
insb
xor
mov
xchg
add
inc
add
addb
mov
mov
add
cmp
fdivs
add
mov
in
add
push
mov
fwait
hlt
push
cmp
mov
add
incl
add
mov
mov
outsl
mov
and
icebp
leave
fs
mov
test
pop
and
mov
dec
fstp
out
icebp
push
jno
sub
lock
mov
xor
pop
mov
add
jns
mov
add
cmp
add
mov
xchg
stos
gs
es
out
sbb
mov
rorl
lock
outsb
xor
iret
cmpsl
dec
mov
rolb
mov
push
add
mov
or
movsl
jmp
daa
mov
scas
bound
mov
negb
sbb
cmp
cli
jmp
add
push
cmpsl
lret
das
outsb
mov
and
outsb
lea
sbb
test
add
add
stos
data16
mov
add
shll
cmp
push
test
mov
test
repnz
dec
sub
mov
adc
mov
mov
cs
and
std
cwtl
sbb
mov
add
cmp
mov
mov
scas
nop
add
fsubrs
xchg
mov
divl
add
sti
gs
inc
lret
jg
movsl
repz
bound
mov
and
mov
mov
out
and
xor
add
out
push
or
mov
sub
and
pop
or
or
mov
add
mul
add
mov
shll
jbe
out
push
or
ljmp
divl
add
das
or
or
scas
mov
add
scas
add
adc
mov
add
jbe
outsl
push
add
mov
ljmp
dec
sahf
popa
xchg
sub
pop
ficompl
leave
std
jno
sub
ja
and
xlat
scas
cltd
xchg
movsl
movsb
xor
mov
jecxz
push
loope
jnp
push
aam
cmc
in
lea
sub
jo
mov
aad
push
fiadds
add
addb
push
sub
mov
mov
mov
add
mov
push
cmpsl
outsb
in
push
xchg
sub
xchg
add
dec
lret
mov
jge
fsts
add
add
mov
addb
push
and
add
pop
add
sbb
arpl
cmc
lret
inc
lcall
leave
lock
push
daa
mov
mov
pop
sub
or
negl
fstpt
mov
jmp
add
add
add
mov
arpl
sbb
dec
and
inc
add
aam
xchg
adc
jmp
jae
out
xchg
les
out
add
outsb
cmpsb
jmp
mov
mov
mov
aam
push
idiv
and
inc
xor
cmpsl
addr16
mov
mov
dec
adc
and
mov
add
push
xchg
cmc
add
mov
stos
and
mov
mov
mov
out
mov
iret
inc
sbb
mov
push
add
fistpl
mov
mov
cmpsb
loopne
mov
leave
adcl
mov
rolb
jle
insl
mov
rolb
mov
adc
mov
adc
roll
jle
lods
call
shr
in
add
sbb
mov
mov
add
ljmp
mov
outsb
popf
xchg
pop
das
or
stc
push
add
add
mov
mov
jae
xor
imul
mov
cs
rcl
add
fnstsw
out
aad
movsl
mov
push
cmpsb
shll
xchg
mov
mov
rolb
sub
pop
pop
inc
push
inc
add
mov
es
pusha
add
add
add
mov
mov
xchg
fnstcw
mulb
inc
jb
mov
sbbl
sbb
adc
mov
cmp
outsl
pop
push
in
sub
in
and
stos
mov
popa
sbb
fnstenv
into
bound
mov
xchg
out
inc
adc
xchg
add
rolb
mov
dec
and
mov
adc
mov
add
pop
scas
add
ficoms
mov
add
mov
push
sub
repz
hlt
movsb
push
mov
in
pop
lret
mov
lahf
adc
dec
pop
cld
outsl
adc
lods
mov
jge
push
aad
imul
mov
mov
inc
out
mov
mov
lret
add
mov
xchg
fcmovbe
loop
mov
mov
xor
mov
pusha
add
add
outsl
ds
add
add
inc
cmpsb
outsb
nop
add
movsl
mov
jp
push
add
mov
mov
sbb
nop
add
adc
mov
fdivrl
jne
mov
mov
mov
sbb
mov
xchg
stos
lock
mov
bound
mov
add
push
pop
cwtl
fs
bound
mov
add
push
and
mov
jge
call
in
std
push
or
xor
add
jo
mov
dec
pop
sub
adcl
aad
or
sti
mov
outsb
jnp
stos
adc
sub
outsb
das
push
cwtl
cmp
mov
fmull
sub
add
jno
pop
gs
mov
movsl
sub
rcr
repz
stc
xor
lcall
cmp
addb
mov
add
fdiv
test
in
je
dec
ja
or
sub
jne
add
ret
notb
add
stos
pop
cmp
stos
js
pop
dec
mov
pop
fdivrp
add
imul
adc
sarl
jmp
push
cmp
add
ds
gs
out
mov
cmp
ljmp
mov
mov
in
sbb
push
cli
mov
sbb
out
xor
mov
inc
loopne
mov
lea
xchg
popa
jbe
add
add
add
out
sahf
or
jmp
popf
lods
lret
push
add
xchg
pushl
lretw
lea
add
leave
rcrl
sbb
jle
add
test
jae,pt
insb
loopne
mov
add
clc
sub
js
pop
repz
pushf
and
mov
sti
pop
int
adc
aad
lret
inc
add
mov
addb
mov
or
sub
add
pop
iret
cmpsl
mov
jecxz
xlat
loopne
mov
sbb
xchg
push
int3
es
sub
add
pop
imul
bound
mov
sub
or
popa
adc
push
mov
sub
jecxz
mov
mov
mov
cli
push
push
cwtl
cltd
out
cs
push
inc
xchg
addr16
jns
out
sahf
stos
mov
adc
mov
mov
xchg
xchg
or
add
jo
mov
pop
test
fnstenv
add
add
cltd
test
dec
nop
add
fwait
nop
add
xor
add
mov
push
push
repz
fwait
mov
std
ja
leave
test
add
add
std
out
add
clc
jo
mov
sbb
addr16
aas
mov
mov
or
pop
lods
das
xor
mov
jmp
sub
add
repnz
mov
add
arpl
cltd
mov
push
add
and
mov
xor
mov
sub
fs
xchg
jo
mov
jecxz
outsb
aaa
add
mov
and
mov
adc
xchg
dec
out
sub
insb
outsl
mov
mov
mov
out
dec
lret
mov
add
hlt
std
dec
insb
dec
or
xchg
gs
jb
mov
lcall
pop
mov
repnz
ss
icebp
stos
cli
push
test
pop
in
inc
push
pop
lahf
mov
adc
loop
mov
clc
add
mov
mov
add
pop
add
mov
cmp
int
test
dec
adc
push
add
add
mov
mov
lods
push
add
add
mov
mov
add
mov
add
mov
sub
sarl
add
mov
pop
xchg
jle
aad
imul
add
mov
fs
add
scas
pop
pop
cli
jbe
dec
sbb
jecxz
cmp
mov
add
xchg
push
add
mov
cmpsb
sub
gs
or
js
scas
bound
mov
adc
push
add
outsb
orl
notb
rcll
iret
inc
popf
sbb
lods
fmull
pop
pop
ret
mov
lret
add
mov
pop
leave
clc
ljmp
pop
push
push
push
stos
xchg
ret
iret
loopne
mov
mov
xchg
mov
add
mov
add
xchg
subl
and
mov
adc
imul
and
cs
adc
mov
mov
add
or
push
pop
gs
xchg
add
fidivl
add
bound
mov
adc
add
mov
rcr
nop
add
push
imul
jnp
ljmp
xchg
scas
inc
shll
mov
push
je
add
add
mov
dec
mov
mov
push
pushf
xchg
icebp
arpl
add
jp
push
sub
fildll
or
adc
mov
push
and
mov
add
sub
mov
push
ret
xchg
aam
idivl
cld
enter
sub
dec
sbb
cmpsl
les
lods
ss
insl
cmpsb
mov
pop
push
add
cld
test
mov
mov
add
add
out
lods
loope
add
fisubs
add
fld
mov
fildll
pop
ficomps
jbe
mov
mov
push
add
mov
mov
or
repnz
jb
mov
push
sarl
call
inc
add
jmp
std
decl
jb
mov
jp
outsb
xchg
pushf
jb
mov
sub
insb
fs
dec
je
add
test
pusha
add
inc
add
mov
bound
mov
dec
arpl
mov
xor
pop
insb
out
stc
pop
lcall
sub
add
jno
cmp
adc
xchg
fcoms
dec
enter
xlat
loope
inc
repnz
jge
shr
and
mov
cld
xchg
or
pusha
add
je
push
dec
xor
mov
pop
sbb
add
cwtl
cmp
and
sbb
mov
adc
mov
jb
mov
decl
test
dec
clc
adc
fwait
fists
dec
push
sahf
ret
movsl
push
testb
mov
mov
jg
xchg
lcall
loope
dec
mov
mov
scas
lcall
mov
ret
mov
bound
mov
adcl
mov
xor
mov
addb
dec
add
mov
push
neg
mov
add
rolb
arpl
push
pop
xor
mov
inc
add
mov
xchg
add
mov
or
ja
cmpsl
inc
aas
in
mov
jle
add
das
clc
leave
xchg
lods
xor
mov
add
stos
testl
js
add
sub
lods
popa
jecxz
dec
or
push
add
mov
ds
xchg
mov
or
sbb
add
ret
xchg
mov
fnsave
sbb
dec
das
jmp
xchg
mov
sbb
push
mov
add
or
pop
inc
cli
dec
idivl
jmp
pusha
add
add
mov
mov
mov
lods
add
jne
add
outsl
setns
enter
cwtl
ljmp
push
add
loopne
mov
push
in
sub
mov
mov
add
push
jb
sbb
add
mov
pop
mov
mov
std
mov
movsl
nop
add
jae
mov
mov
adc
pop
loope
add
pop
cmp
ret
mov
mov
add
mov
mov
xor
xor
popl
sub
mov
add
and
mov
sbb
add
add
les
popf
imul
add
add
mov
push
jno
mov
mov
nop
add
add
adc
mov
cmp
add
cld
sbb
movsl
aam
lcall
mov
fsubrs
sub
add
push
daa
imul
xor
add
add
sub
cmp
mov
add
daa
lods
fimuls
das
and
rolb
mov
cwtl
loope
jg
pop
lock
insb
add
mov
mov
stos
add
cld
ret
xchg
adc
stos
lods
popa
fiadds
add
jp
xor
mov
js
aad
add
lcall
add
xchg
and
add
dec
sbb
jp
out
lods
sbb
pop
out
lcall
push
or
mov
inc
add
sub
or
jno
int3
sbb
int3
rcr
pop
mov
outsb
mov
aam
aaa
lods
mov
mov
mov
jmp
enter
xor
fcomip
add
fiaddl
mov
and
mov
pop
inc
add
adc
mov
outsl
stc
stos
jl
imull
jns
add
add
mov
lahf
jg
jo
mov
mov
into
stos
aas
pop
cmp
pop
jecxz
leave
mov
pop
movsl
jnp
test
fisubrl
mov
inc
add
movsl
pop
cmp
fildll
movsl
repz
ret
sbb
mov
xchg
mov
push
out
sbb
les
pop
pop
pop
mov
mov
or
rcll
add
add
loop
mov
mov
mov
pop
dec
pop
mov
cld
fldenv
mov
mov
mov
addb
movsl
cmc
mov
xor
dec
pop
mov
pop
lcall
mov
cmp
ljmp
xor
jbe
stc
in
inc
add
add
mov
ds
pop
dec
and
mov
insb
ffreep
ljmp
add
cmp
mov
dec
mov
or
cmpsb
mov
pop
add
repnz
mov
add
fnstcw
sub
mov
mov
andl
mov
mov
adc
jae
cmp
xor
mov
seta
mov
fcoms
cld
lods
fs
xor
mov
mov
mov
mov
add
pop
xor
xchg
sbb
pusha
add
add
test
mov
out
add
mov
mov
dec
jnp
cltd
pop
rolb
mov
sbb
lods
addr16
shr
in
xchg
add
ja
and
mov
mov
aad
add
dec
mov
pushf
xor
mov
notl
das
std
test
imul
push
push
add
dec
les
mov
jns
or
sub
outsl
scas
lret
rolb
mov
adcl
mov
out
cs
pop
call
xor
mov
icebp
jne
addb
imul
cmpsl
jo
mov
les
cmpsb
xchg
dec
ss
mov
xchg
mov
mov
bound
mov
add
adc
add
es
imul
fs
jp
fisttpl
mov
add
add
add
mov
jns
adc
pop
movsb
cmp
cmp
add
add
ss
int3
frstor
mov
push
pop
xchg
add
add
adc
mov
jg
ds
cmp
mov
jge
add
jp
mov
xchg
dec
mov
jg
pop
popa
stos
mov
push
std
push
pop
gs
mov
lods
adc
mov
jb
mov
enter
sbb
mov
fimuls
cmp
outsl
lods
es
icebp
sbb
mov
mov
add
jbe
lods
push
push
test
or
inc
add
aaa
jb
mov
add
mov
dec
out
mov
mov
mov
pop
es
dec
jnp
sub
xor
mov
jge
xor
addr16
mov
jns
into
xor
pop
jmp
dec
lahf
lea
dec
ficomps
xchg
addb
adc
mov
jge
inc
stos
inc
xor
mov
inc
mov
ljmp
imulb
mov
add
mov
add
mov
test
and
mov
pop
cwtl
xchg
jns
dec
xor
js
movsl
addb
loopne
mov
inc
stos
jl
add
mov
push
or
adc
stos
pushf
filds
mov
in
mov
lods
ja
add
test
mov
or
add
xchg
mov
dec
sbb
loop
mov
jmp
std
daa
out
add
mov
scas
clc
mov
jno
inc
sbb
and
mov
pop
mov
fcomps
add
add
ja
cmp
int3
push
add
rolb
std
lods
mov
mov
jns
or
in
scas
rcll
mov
repz
lods
cld
fildll
add
mov
xlat
lahf
lret
cltd
fbld
mov
rorl
mov
add
mov
add
add
mov
mov
popa
enter
jle
mov
sti
xlat
lcall
add
mov
andl
mov
mov
or
cmp
movsb
xor
xchg
into
jmp
mov
insl
je
adc
jbe
or
mov
xor
push
mov
xchg
imul
pusha
add
outsb
mov
mov
mov
sub
in
ret
pusha
add
xchg
xor
mov
ret
in
lcall
mov
sub
sti
movsb
dec
mov
mov
sub
imull
push
adc
mov
cli
addb
sarl
sbb
ret
cmpsb
xor
mov
adc
mov
imul
add
mov
and
mov
add
mov
push
push
pop
dec
jns
adc
push
add
jae
xor
mov
fstl
pop
pusha
add
mov
hlt
clc
aam
add
or
icebp
mov
data16
mov
and
out
idivb
xor
sbb
add
scas
insb
sub
push
and
mov
in
imul
inc
mov
shrl
fwait
out
add
add
mov
sbb
xchg
or
fs
adc
mov
dec
xchg
add
test
add
cld
cmp
loop
mov
add
sub
insl
mov
imul
mov
in
add
mov
std
jnp
add
add
outsl
xchg
add
push
xchg
mov
cltd
movsl
adc
push
in
imul
xor
mov
or
stos
cwtl
pop
push
add
push
add
addr16
cld
pop
push
rolb
mov
jnp
rolb
xor
jo
mov
inc
sbb
or
rolb
mov
mov
int3
cli
inc
pop
jae
jno
pop
and
mov
add
add
or
fwait
je
dec
repnz
add
add
mov
and
add
out
xor
mov
mov
mov
adc
mov
stc
sbb
addb
imul
into
sub
jp
js
scas
stos
daa
rolb
xchg
sbb
mov
add
hlt
jmp
mov
in
sub
add
jbe
and
and
mov
testb
push
pop
mov
in
cmp
filds
rolb
mov
out
jno
mov
xor
scas
insl
add
mov
add
add
mov
out
je
xchg
sbb
popf
mov
mov
add
add
mov
add
ds
call
pusha
add
mov
add
int3
mov
pop
jecxz
fs
cld
aas
and
mov
mov
mov
sti
btr
jl
jg
add
add
mov
mov
insb
cwtl
or
sub
add
mov
add
jo
mov
mov
lds
add
add
sahf
xor
outsl
js
enter
mov
add
add
mov
sbb
ret
fwait
in
ficoml
pop
pop
push
out
xchg
add
int3
rolb
mov
mov
add
sar
and
mov
or
cli
scas
in
aad
mov
mov
stc
cwtl
enter
cmp
dec
jmp
pop
out
push
mov
mov
ja
add
add
sub
mov
bound
mov
cmp
pop
and
mov
mov
gs
lret
enter
int
push
inc
add
enter
mov
xchg
mov
add
push
fs
rolb
cltd
or
inc
test
jl
mov
mov
mov
mov
sub
pop
jns
push
mov
clc
rolb
mov
clc
jo
mov
and
fdiv
push
add
mov
nop
add
jmp
mov
dec
sub
push
mov
out
je
add
xchg
push
addb
xchg
mov
ljmp
xor
push
add
mov
mov
mov
fdivrl
je
lret
in
xlat
sub
push
jl
bound
mov
cltd
fmuls
test
or
mov
sub
add
mov
and
mov
shll
inc
call
cwtl
insl
inc
add
push
std
jb
mov
xchg
jl
hlt
mov
iret
xchg
dec
popa
bound
mov
scas
xor
and
es
mov
adc
mov
ret
cs
add
add
sbbl
mov
add
fwait
loope
mov
and
mov
test
repnz
jbe
fsubr
xchg
cmp
rorl
mov
lcall
add
mov
mov
mov
cwtl
mov
mov
sbb
add
add
jecxz
or
sbb
add
pop
sbb
add
mov
mov
fidivl
ficompl
xchg
rolb
rolb
movhps
mov
mov
xor
movsl
inc
inc
add
stc
jmp
out
push
xor
mov
ds
adc
mov
add
pop
cmpsb
outsb
push
ret
jge
divl
hlt
cmp
mov
add
add
mov
xchg
imul
sub
xchg
cmpsb
lods
jle
imul
scas
cmpsb
mov
mov
add
mov
mov
mov
idivl
pop
sub
data16
loope
jle
sub
mov
cld
fdivrl
xchg
add
mov
add
daa
pop
ljmp
add
jg
ret
pop
fildl
mov
in
pop
nop
add
mov
mov
jp
popf
sub
movsl
jnp
and
adc
xchg
add
mov
add
xor
mov
push
push
jecxz
out
cs
js
cmp
xor
lret
mov
add
pop
sbb
sub
cmp
cmp
add
cmpl
mov
daa
mov
mov
sahf
int3
mov
mov
icebp
adc
jg
out
or
sbb
mov
lahf
ja
enter
push
les
ficompl
push
mov
std
pop
xor
imul
push
push
pop
sbb
add
clc
mov
add
mov
test
jmp
sub
movsl
dec
cmp
adc
jnp
popa
dec
iret
fcompl
add
outsb
pop
xor
add
cmp
sub
movsl
mov
pop
pushf
cmp
adc
mov
xor
add
rcr
std
sahf
lret
xor
pop
aas
movsl
ljmp
or
mov
lods
add
mov
pusha
add
arpl
rdpmc
and
mov
loopne
mov
subl
jb
mov
ffreep
mov
adc
aaa
cmp
into
cwtl
test
ljmp
pop
rolb
mov
jmp
je
lret
mov
pop
xchg
add
push
pop
adc
cmp
push
mov
shrl
mov
add
or
dec
mov
mov
add
mov
das
out
jo
mov
xchg
push
xchg
bound
mov
push
add
mov
mov
mov
lcall
or
pusha
add
jnp
xchg
mov
mov
mov
fcmovnbe
pusha
add
add
mov
push
mov
insl
out
add
and
dec
mov
dec
scas
mov
dec
scas
mulb
mov
mov
mov
push
push
inc
in
and
mov
int3
sub
sub
add
mov
js
sub
mov
test
mov
iret
inc
shrl
push
negb
mov
mov
or
mov
sbb
xchg
popf
pusha
add
sub
push
and
add
mov
push
cltd
stos
push
mov
cmp
rolb
mov
aaa
fists
lahf
inc
dec
scas
mov
mov
xchg
adc
mov
test
jae
sbb
mov
and
in
stc
test
imul
cmp
add
incb
add
jecxz
mov
mov
dec
mov
lahf
push
fists
sub
aas
xchg
add
mov
loope
pushl
add
cmc
sbb
data16
imul
cmp
cmp
scas
mov
add
mov
mov
push
adc
xor
scas
notb
mov
fidivs
test
add
mov
mov
and
mov
std
sbb
mov
lea
jg
add
add
int3
jnp
movsl
pop
pusha
add
in
cwtl
lock
xchg
add
mov
add
add
test
popa
in
adc
loope
add
int3
test
or
add
stos
mov
xlat
jnp
adc
add
add
mov
mov
mov
add
cmc
or
add
cmp
out
sbb
idivl
and
mov
outsl
xchg
lds
into
in
or
add
lea
mov
cmp
add
mov
adc
add
cmp
add
loop
mov
add
clc
xor
mov
lds
jle
mov
add
mov
mov
add
fwait
or
adc
xchg
rolb
dec
fstpl
cli
mulb
out
lretw
mov
ss
mov
lock
mov
out
jbe
add
bound
mov
iret
adc
das
lds
mov
add
gs
fldl
xor
mov
sub
or
jno
jbe
test
frndint
jge
int3
xchg
pop
fs
lret
sbb
mov
out
mov
lods
xchg
fs
or
add
mov
leave
imul
xor
xor
mov
mov
iret
sbb
xchg
add
lcall
lahf
jne
lock
xchg
add
and
stc
test
push
add
mov
sbb
pop
mov
bound
mov
cmp
or
mov
mov
mov
xor
hlt
mov
mov
cmp
sbb
sbb
sub
add
push
movsl
aam
or
sbb
add
mov
pop
jp
inc
add
rolb
mov
cld
mov
mov
cmp
cltd
out
iret
sbb
cmp
lods
lods
add
cmp
lret
mov
cs
push
imul
addl
bswap
mov
push
aaa
sti
cs
mov
cmpsl
adc
sub
push
cmpsl
sti
cmp
cmp
cmpsl
sbb
rolb
mov
add
xchg
add
add
mov
pcmpeqw
mov
int
scas
movsl
push
cmp
or
mov
das
scas
sbb
loopne
mov
popf
inc
enter
dec
cmp
xchg
cs
dec
in
cs
add
inc
mov
add
mov
mov
push
add
mov
mov
jp
movsb
les
out
fstpt
lcall
decl
mov
ja
xchg
call
in
out
sbb
pushf
les
fistl
cmp
add
popa
rolb
mov
mov
mov
rolb
rorl
dec
shrl
mov
jg
shrl
mov
mov
mov
xchg
adc
mov
jnp
sbb
xchg
push
add
cmpl
jne
jb
mov
mov
daa
xchg
add
add
adc
mov
sbb
in
cmc
mov
mov
aam
stc
mov
mov
decb
outsl
lock
lods
pop
stos
pop
inc
sub
nop
add
add
or
gs
inc
pop
push
mov
mov
cli
pop
fwait
mov
inc
addb
out
ret
push
aad
test
fisttpl
cmpsl
cmp
mov
ret
cld
pop
mov
add
or
mov
or
sahf
cli
adc
mov
adc
mov
cmp
and
push
add
ldmxcsr
pop
cmp
insb
xor
add
sub
pop
mov
sbb
sti
and
jmp
add
fldenv
clc
jecxz
fcmovu
repnz
add
rolb
mov
iret
jb
mov
enter
mov
jle
cmp
aaa
xlat
push
sub
repz
jg
out
add
mov
repnz
das
aas
out
imul
cmp
fwait
decl
add
or
add
sub
daa
dec
inc
pop
inc
push
lret
mov
ss
jmp
pusha
add
sbb
rolb
mov
add
mov
nop
add
xlat
jnp
int3
ljmp
cmp
jmp
popa
pusha
add
pop
cmp
imul
mov
cmpsb
pop
imul
push
sub
cwtl
sub
mov
mov
sub
inc
jg
clc
mov
pop
mov
ret
xchg
add
insb
test
mov
jg
nop
add
mov
dec
mov
inc
mov
sub
sub
add
mov
add
out
sub
sarl
inc
add
add
mov
out
jns
push
adc
adc
mov
js
movsl
pushf
les
dec
push
xor
mov
jecxz
out
iret
imul
inc
add
in
aam
push
lea
mov
add
or
dec
jmp
mov
cmp
push
mov
ljmp
mov
aad
movsl
outsl
fs
add
push
fs
adc
add
xchg
lahf
mov
and
mov
add
shll
bound
mov
dec
pop
mov
fwait
push
mov
add
pop
dec
adc
sub
lahf
orps
cwtl
rolb
mov
inc
scas
out
cmp
jo
mov
xlat
imul
mov
mov
aaa
mov
mov
mov
enter
ffree
add
rolb
imul
mov
popa
xor
mov
jmp
or
mov
mov
repnz
push
lods
jecxz
dec
aam
mov
xor
mov
add
mov
incb
add
mov
mov
or
mov
pop
rolb
ret
and
fistpll
inc
mov
add
push
pop
inc
test
imul
lret
aas
rolb
mov
and
or
add
add
mov
notl
sbb
dec
mov
xchg
push
fwait
mov
sub
outsl
push
fcomps
push
outsl
or
mov
stos
lcall
out
lds
cmc
lea
outsb
stc
and
setno
mov
cmp
enter
and
mov
dec
dec
loopne
mov
cmp
fs
aam
jne
add
adc
mov
fs
add
inc
add
pop
mov
outsb
outsb
fsubr
xchg
sub
outsb
push
or
dec
insl
ficoms
mov
ds
int3
xchg
mov
inc
add
ss
cmp
test
in
add
icebp
ret
ficomps
mov
mov
add
add
and
mov
aad
xor
mov
enter
lcall
repz
sub
fsubs
dec
add
push
xor
pop
mov
out
es
xchg
mov
ret
idivl
loopne
mov
push
add
in
sbbl
add
mov
push
cwtl
movsl
ja
test
cmp
add
adc
roll
mov
mov
cmc
pop
mov
mov
stos
dec
mov
cs
loope
rolb
fldl
andl
xor
imul
xchg
fs
sub
and
mov
mov
add
add
mov
ljmp
push
add
mov
mov
add
cli
lds
std
idivb
jbe
lods
out
add
mov
xchg
mov
xchg
inc
xchg
in
push
jnp
inc
rolb
mov
add
in
aaa
loopne
mov
cmp
lds
add
sbb
dec
sbb
call
add
add
mov
movsb
and
mov
xchg
xchg
int
and
stc
rcrl
mov
add
or
addb
adc
add
inc
xchg
decl
jl
lods
popf
sti
dec
sahf
rcrl
mov
add
movhps
mov
lods
data16
cli
ret
sbb
ja
ja
in
outsb
pop
out
clc
cmc
fisubrl
sub
clc
jo
mov
lds
or
sbb
int3
xor
aas
and
mov
adc
add
mov
lahf
inc
lret
dec
and
jmp
xor
fisubrl
add
je
rolb
mov
and
or
mov
pop
ss
pusha
add
mov
mov
clc
mov
pop
stc
xor
jns
loopne
mov
sub
xor
dec
test
data16
ffree
or
ds
ret
inc
add
mov
cmp
lods
jmp
pop
sbb
mov
gs
xchg
sub
frstor
add
fstp
adc
pop
mov
adc
mov
or
jle
lods
sbb
dec
jmp
lods
mov
fldt
xor
shrl
mov
pop
mov
in
or
jne
fsubr
sub
sub
add
outsl
call
aam
xchg
imul
adc
loopne
mov
mov
addb
aas
inc
add
test
cmpsb
adc
sahf
inc
xchg
clc
or
mov
cmp
and
add
fldenv
mov
add
add
mov
mov
add
xchg
test
push
clc
fsubrs
add
movb
mov
test
into
pop
cmpsb
push
addb
in
sbb
push
clc
pusha
add
call
mov
add
mov
insb
test
push
pusha
add
adc
mov
mov
fisubrs
inc
lods
nop
add
jns
dec
cs
add
stos
lock
jae
loopne
mov
mov
mov
dec
cmp
add
cmp
imull
mov
dec
insl
mov
lret
push
add
movsl
adc
xchg
shll
stc
out
scas
push
out
popa
and
jnp
push
cltd
inc
mov
clc
mov
add
mov
cmp
std
fldt
and
mov
fldl
mov
mov
jg
jle
lods
test
pop
fidivrl
fucomi
xor
adc
add
gs
mov
xchg
xor
push
arpl
jo
mov
int
xor
std
sbb
js
popa
push
push
adc
movsl
ffree
jo
mov
dec
dec
mov
mov
mov
das
mov
and
pop
mov
lahf
jno
popf
pushl
fnstsw
fwait
dec
lahf
push
addr16
addb
mov
add
mov
add
out
enter
xchg
mov
hlt
rolb
rolb
mov
ljmp
mov
push
push
push
add
ss
sahf
cmpsl
jmp
test
das
cmpsb
and
mov
hlt
and
cmpsb
sub
add
lods
adc
mov
arpl
stos
mov
lret
inc
add
das
jmp
sbb
mov
xor
cmp
add
add
add
aam
inc
add
loop
mov
scas
xor
add
mov
inc
out
out
mov
add
mov
cs
fbld
lcall
add
mov
jne
je
sub
rorl
push
jnp
cmp
cmpsb
jne
push
out
jbe
add
push
xchg
mov
imul
push
dec
sti
lods
data16
cwtl
cli
aaa
ja
add
lods
clc
cmp
or
pop
jp
rolb
mov
leave
int
add
mov
adc
mov
mov
dec
or
cmp
xchg
and
mov
or
imul
mov
repz
dec
insl
cmpsl
and
mov
sub
push
pop
stos
fdivrl
fs
push
add
pop
mov
push
xchg
xchg
pop
ret
jae
mov
inc
mov
sbb
mov
add
ret
push
data16
or
scas
sub
and
cli
nop
add
dec
loopne
mov
imul
mov
add
arpl
aas
mov
lock
cs
sub
ljmp
jmp
jno
adc
mov
mov
mov
add
mov
mov
mov
repnz
mov
cld
pop
sbb
xchg
scas
and
mov
aad
mov
add
pushf
jg
cmp
mov
jnp
add
sub
out
scas
leave
mov
ret
sub
and
mov
pop
inc
mov
test
jnp
test
pop
pushf
loope
add
inc
jmp
rolb
sub
popa
addb
aaa
xor
cltd
inc
fnstcw
rolb
mov
add
insb
in
add
mov
repz
add
add
jo
mov
popa
enter
jne
lock
add
dec
jle
lcall
and
jb
mov
out
xchg
add
aas
mov
xor
ret
cmp
mov
dec
pushf
out
xchg
add
and
add
sub
mov
push
sarl
rolb
mov
rolb
lods
sub
mov
mov
ret
std
and
mov
mov
add
mov
addr16
mov
sbb
pop
lea
or
js
xor
mov
dec
pop
cmp
cmp
cli
outsl
scas
pop
outsb
push
stc
sub
outsl
pop
pop
repnz
loop
mov
sti
insl
leave
leave
push
add
pusha
add
rolb
mov
add
mov
je
jno
push
add
lods
mov
lods
and
add
add
pop
dec
mov
push
jbe
addb
inc
mov
insl
pop
sub
sbb
sub
idiv
xor
jp
add
and
cmpsl
jp
insl
imul
sti
xchg
int
add
dec
lods
cmp
mov
js
push
push
pop
out
xor
mov
addr16
sub
mov
xchg
jmp
add
xchg
add
lea
or
push
add
pusha
add
and
mov
add
add
or
das
aam
pusha
add
jle
and
inc
notb
mov
daa
or
fnstcw
xchg
add
adc
and
mov
pushf
pop
sahf
lahf
lcall
decl
or
pop
adc
mov
jae
pop
mov
mov
loop
mov
push
add
add
add
fmull
pusha
add
pushf
leave
fsubrp
es
lret
dec
dec
jmp
pcmpeqd
cmp
movsb
popf
mov
mov
lret
inc
mull
cmp
dec
push
aas
adc
or
inc
xchg
mov
sub
mov
into
and
or
add
data16
shll
mov
xor
mov
add
insb
mov
add
or
insl
cmc
adc
mov
jecxz
add
dec
jo
mov
add
lcall
jo
mov
mov
mov
push
add
lret
cmpsb
mov
xchg
add
inc
repnz
add
push
jns
add
mov
stos
imul
test
mov
mov
add
std
add
sbb
inc
cltd
mov
mov
push
add
insl
cmc
pop
aad
cld
or
mov
dec
movsl
inc
cmpsb
xor
or
push
mov
in
or
xor
hlt
and
cltd
adc
in
xchg
mov
push
mul
add
add
into
push
add
incl
cltd
in
addb
push
rcll
std
push
dec
mov
sbb
movsb
sub
inc
loopne
mov
mov
mov
int3
dec
pop
out
add
ret
jbe
lret
cmp
mov
imul
arpl
lret
mov
push
cmp
ss
mov
add
sub
sbb
mov
xchg
sbb
leave
sub
add
sbb
std
sbb
inc
cmpsl
scas
sub
and
mov
pop
pop
movsb
mov
add
mov
jl
lods
bound
mov
out
les
loop
mov
outsl
xor
or
push
pop
mov
xor
jg
cltd
rolb
mov
mov
push
shrl
mov
add
gs
in
stc
inc
xor
aam
in
jnp
mov
je
xor
test
mov
push
rcll
inc
fdiv
imul
mov
dec
adc
hlt
in
outsb
push
mov
std
jl
add
int
cmp
idivb
fisubrl
xchg
ret
inc
movsl
jp
and
mov
jne
insb
adc
adc
mov
stc
je
sub
mov
push
mov
mov
andl
jae
push
mov
add
or
cld
mov
mov
dec
dec
test
xchg
cwtl
sbb
sbb
es
add
push
mov
movsl
sub
bound
mov
xchg
sahf
xchg
addr16
xor
mov
add
push
inc
add
mov
push
mov
cmp
rolb
ja
add
loopne
mov
dec
mov
mov
adc
daa
fs
jmp
sbb
mov
xor
mov
stos
fimull
add
mov
leave
pop
lahf
dec
loop
mov
mov
pop
inc
std
test
jecxz
mov
add
mov
push
pusha
add
mov
decb
cmp
inc
push
addb
mov
mov
cmp
add
out
int
pop
push
pop
lcall
dec
int
cmp
cs
mov
push
dec
cmp
addr16
and
mov
popf
xchg
add
lcall
mov
inc
pop
std
pop
sub
mov
out
xlat
add
add
add
and
xchg
test
push
add
sub
jge
add
mov
fisttps
add
pop
sti
mov
fadd
jbe
mov
dec
aas
rcl
add
jo
mov
addb
cli
mov
adc
add
lods
fisubrl
movsl
mov
aam
push
push
or
sbb
dec
sub
scas
xor
mov
xchg
push
mov
mov
insb
aas
push
add
push
dec
mov
mov
inc
add
inc
add
jbe
xlat
jb
mov
insl
insl
add
movsl
xor
add
add
popa
cmp
fstl
mov
imul
pushf
xor
cwtl
or
cmpsb
adc
loopne
mov
cmp
ljmp
cli
and
xchg
stos
in
sbb
mov
cld
jne
add
xor
add
imul
xchg
lcall
mov
in
xor
bound
mov
push
cmp
scas
stos
push
rolb
mov
xor
add
mov
lock
dec
inc
add
mov
jle
push
mov
movsl
jnp
push
mov
or
in
push
out
sub
add
arpl
or
clc
sbb
pop
in
jmp
add
xchg
xor
mov
js
aad
insb
sbb
mov
mov
add
jns
push
inc
jge
icebp
out
imul
lret
mov
add
sbb
sbb
mov
addr16
rolb
cmp
mov
mov
inc
and
push
pushf
adc
pop
mov
add
cmpsb
imul
add
fwait
loope
or
mov
or
jl
xchg
xor
add
add
push
and
add
mov
xor
mov
dec
sbb
enter
mov
mov
mov
xchg
mov
movsl
addl
mov
add
sub
mov
add
lahf
pusha
add
mov
xor
mov
pop
scas
cld
sub
mov
xchg
orl
add
add
out
mov
lret
pop
xchg
inc
jbe
or
jmp
mov
inc
add
je
cltd
loopne
mov
arpl
lret
push
pusha
add
movsb
sub
sub
mov
jbe
std
jge
and
mov
aas
in
cmp
cmpsl
adc
add
test
jmp
mull
stos
incl
dec
aas
pop
inc
push
add
aam
sub
pop
lret
dec
or
jno
ficoms
add
dec
sbb
mov
mov
xor
inc
cmp
dec
xor
mov
cmp
xchg
mov
imul
or
add
or
jp
push
jo
mov
sbb
scas
addb
jle
push
dec
dec
fldcw
data16
xorl
or
add
mov
pusha
add
mov
push
in
sub
in
push
cmc
cmp
add
sbb
aas
sbb
pop
sub
imul
add
cli
sub
shl
add
bound
mov
add
inc
add
repnz
jae
add
jbe
lea
xor
add
clc
repnz
jae
add
mov
jecxz
add
out
cmp
inc
in
cld
nop
jmp
add
add
add
sbb
add
push
mov
xchg
ret
add
push
xor
add
fwait
cld
nop
jmp
add
add
add
adc
inc
add
arpl
call
add
adc
repnz
jae
add
mov
movb
repnz
inc
add
out
add
gs
fistl
cld
nop
jmp
or
jns
add
add
add
adc
mov
add
clc
repnz
jae
add
inc
pop
add
add
data16
cld
nop
jmp
add
pop
scas
jo
cmp
mov
push
clc
repnz
jae
add
add
clc
repnz
jae
push
add
or
mov
or
cmp
ret
add
add
add
add
nop
jae
iret
push
addr16
jnp
jo
sbb
jmp
adcl
add
mov
inc
push
adc
clc
repnz
jae
add
mov
notl
push
fwait
cld
nop
jmp
cmp
push
iret
or
add
mov
push
mov
xchg
ret
add
add
jl
test
add
clc
repnz
jae
int3
jo
xchg
clc
repnz
jae
cmp
sahf
add
test
adc
add
sbb
add
add
jns
add
xor
xchg
inc
add
dec
scas
cmpb
and
clc
repnz
jae
add
mov
adc
roll
xchg
ret
mov
or
xchg
push
dec
add
push
mov
xchg
ret
add
sbb
fwait
cld
nop
jmp
pop
add
out
add
add
add
clc
repnz
jae
mov
sti
insb
mov
clc
repnz
jae
add
jo
lea
clc
repnz
jae
add
add
cmp
clc
repnz
jae
add
add
add
repnz
jae
add
xor
clc
repnz
jae
mov
add
lahf
out
push
push
mov
xchg
ret
scas
arpl
aad
xchg
call
nop
jae
inc
jno
pushl
add
add
fwait
cld
nop
jmp
add
dec
mov
add
mov
push
loopne
repnz
jae
dec
cmp
arpl
jns
add
cltd
mov
push
mov
xchg
ret
add
roll
add
mov
shr
fwait
cld
nop
jmp
dec
add
mov
mov
clc
repnz
jae
add
jns
jnp
add
and
clc
repnz
jae
lahf
add
add
repnz
jae
mov
add
and
aas
filds
xchg
ret
sahf
add
add
mov
clc
repnz
jae
and
std
mov
push
mov
xchg
ret
lahf
pop
out
xchg
call
xchg
faddl
nop
jae
add
add
add
fadd
jmp
jae
add
ficoms
cld
nop
jmp
add
add
repnz
jae
xor
add
jmp
sbb
out
jns
adc
jo
jbe
mov
fwait
cld
nop
jmp
adc
loope
sbb
nop
jae
add
out
jns
cmp
add
repnz
jae
add
je
clc
repnz
jae
xor
push
mov
xchg
ret
sahf
inc
add
out
push
and
add
fwait
cld
nop
jmp
add
mov
loopne
mov
add
add
repnz
jae
addr16
mov
addb
cld
pop
clc
repnz
jae
add
scas
arpl
add
rolb
mov
repz
repnz
jae
add
add
add
xchg
dec
movzwl
clc
repnz
jae
test
popl
add
cld
nop
jmp
iret
pop
pop
push
mov
add
clc
repnz
jae
mov
adc
mov
mov
xchg
ret
add
push
fwait
cld
nop
jmp
loope
add
add
pop
dec
test
push
mov
xchg
ret
xchg
scas
jbe
mov
aad
icebp
jo
mov
loop
cld
nop
jmp
addr16
add
pop
add
cmp
fwait
cld
nop
jmp
or
scas
add
mov
loop
push
mov
xchg
ret
xchg
pop
add
inc
out
jp
ficomps
adc
lret
fwait
sbb
mov
mov
clc
repnz
jae
mov
add
clc
repnz
jae
iret
scas
add
fwait
cld
nop
jmp
add
loope
add
mov
cmp
repnz
jae
sti
fwait
add
jno
sahf
add
fwait
cld
nop
jmp
add
fs
sbb
cld
nop
jmp
push
xchg
add
imul
aaa
inc
mov
dec
jae
adc
pushf
add
js
jmp
jae
int3
dec
lret
scas
xor
mov
mov
clc
repnz
jae
add
je
push
dec
add
fwait
cld
nop
jmp
adc
mov
add
pop
mov
adc
icebp
add
repnz
fwait
cld
nop
jmp
lret
push
add
xchg
add
fwait
cld
nop
jmp
add
add
enter
jae
scas
add
add
inc
push
mov
xchg
ret
add
add
add
loop
mov
cli
mov
clc
repnz
jae
push
dec
cmp
movb
je
clc
repnz
jae
push
add
jno
cmpw
fwait
cld
nop
jmp
mov
lahf
xor
push
mov
xchg
ret
stc
iret
jns
cmp
sbb
cld
nop
jmp
add
add
arpl
add
add
add
clc
repnz
jae
add
xchg
add
test
repnz
jae
add
add
pop
mov
fwait
cld
nop
jmp
jns
out
add
dec
add
push
mov
xchg
ret
mov
fs
adc
add
add
iret
add
cmp
or
call
clc
repnz
jae
add
lahf
sbb
mov
add
sbb
repnz
jae
aad
add
lret
pop
push
mov
xchg
ret
add
add
call
arpl
jns
add
int3
pop
mov
mov
repnz
jae
aad
int3
loopne
pop
jno
ja
pop
and
fwait
cld
nop
jmp
add
add
add
add
nop
add
clc
repnz
jae
loopne
movb
xor
push
push
mov
xchg
ret
add
push
add
repnz
jae
add
add
jne
clc
repnz
jae
add
in
mov
fwait
cld
nop
jmp
scas
add
ret
fwait
cld
nop
jmp
mov
sbb
arpl
nop
jae
scas
add
pop
shll
dec
jmp
add
add
add
jno
mov
insb
ja
clc
repnz
jae
add
add
add
fwait
cld
nop
jmp
add
add
xor
inc
out
mov
clc
repnz
jae
scas
add
add
fsubr
inc
add
xchg
add
add
jae
call
clc
repnz
jae
add
scas
add
popa
push
mov
xchg
ret
lret
mov
add
lcall
inc
stc
dec
out
scas
fwait
add
popa
add
mov
xchg
ret
jno
add
inc
cmp
cld
nop
jmp
add
xor
or
mov
xchg
ret
out
add
clc
repnz
jae
add
add
jl
fwait
cld
nop
jmp
add
add
pop
add
push
popa
fwait
call
clc
repnz
jae
mov
mov
clc
repnz
jae
movb
add
push
clc
repnz
jae
xchg
add
int3
add
mov
clc
repnz
jae
add
add
push
clc
repnz
jae
add
addr16
and
jo
mov
pop
clc
repnz
jae
add
arpl
pop
arpl
adc
dec
fwait
cld
nop
jmp
push
add
jae
addb
aam
add
clc
repnz
jae
add
add
imul
repnz
jae
add
loope
xor
or
mov
xchg
ret
push
add
lret
add
add
sbb
add
cmp
nop
jae
jno
scas
int3
jns
mov
repnz
jae
push
je
addb
add
add
repnz
jae
add
scas
add
xchg
fwait
cld
nop
jmp
add
add
stc
scas
incl
jo
je
clc
repnz
jae
add
dec
mov
clc
repnz
jae
lahf
add
insb
push
clc
repnz
jae
fwait
pop
jno
add
out
les
nop
jae
dec
add
out
mov
dec
mov
clc
repnz
jae
mov
stc
mov
add
add
test
add
loopne
add
jae
mov
fwait
cld
nop
jmp
add
mov
cmp
inc
add
loope
xor
add
lahf
mov
clc
repnz
jae
inc
fwait
add
call
clc
repnz
jae
pop
add
jns
cmp
fwait
cld
nop
jmp
jo
arpl
test
cld
nop
jmp
lahf
add
and
add
push
mov
xchg
ret
iret
mov
add
test
add
clc
repnz
jae
add
jo
mov
clc
repnz
jae
or
add
jnp
add
add
repnz
jae
add
scas
add
add
xor
add
clc
repnz
jae
or
addr16
sarl
jns
clc
repnz
jae
add
sbb
add
mov
clc
repnz
jae
roll
add
add
clc
repnz
jae
jns
add
jb
push
mov
xchg
ret
push
roll
test
or
add
sbb
add
out
lret
sar
repnz
jae
aad
iret
addb
xchg
rolb
mov
mov
push
mov
xchg
ret
cmpb
add
or
cld
nop
jmp
jno
add
inc
jno
add
clc
repnz
jae
add
jbe
cmpl
fwait
cld
nop
jmp
add
xor
mov
repnz
jae
mov
pop
add
rorl
add
jmp
incl
add
add
add
pop
pop
sahf
loope
loop
mov
jae
fs
mov
add
add
nop
jae
add
and
mov
out
add
jns
add
adc
iret
mov
clc
repnz
jae
adc
jae
addb
imul
add
sbbl
add
add
xchg
add
fwait
cld
nop
jmp
add
add
mov
push
fwait
cld
nop
jmp
add
je
add
mov
mov
clc
repnz
jae
add
mov
test
clc
repnz
jae
popl
shll
adc
jns
inc
nop
add
push
add
clc
repnz
jae
xchg
fs
dec
pop
clc
repnz
jae
add
push
pop
add
add
clc
repnz
jae
out
out
je
insb
mov
push
mov
xchg
ret
rcrl
mov
cld
nop
jmp
sahf
add
insb
rol
clc
repnz
jae
add
add
jmp
add
add
jnp
add
add
add
repnz
jae
xchg
add
cmp
repnz
jae
add
sbb
aas
clc
repnz
jae
fwait
add
addr16
xor
test
jae
xor
mov
nop
jae
add
out
aad
lret
xchg
sbb
clc
repnz
jae
add
mov
mov
clc
repnz
jae
fs
push
mov
in
add
add
pop
jne
clc
repnz
jae
add
arpl
repnz
jae
add
sahf
add
popf
jne
clc
repnz
jae
add
add
lds
mov
mov
testl
fwait
cld
nop
jmp
add
add
and
ss
clc
repnz
jae
pop
loopne
add
nop
jae
add
xchg
add
add
nop
jae
scas
pop
pop
mov
stc
out
push
clc
repnz
jae
xchg
add
add
inc
add
clc
repnz
jae
and
add
loopne
imul
add
jae
mov
ds
loope
cld
nop
jmp
add
add
push
add
mov
clc
repnz
jae
push
add
add
add
clc
repnz
jae
mov
or
mov
mov
clc
repnz
jae
inc
mov
xchg
and
xor
mov
clc
repnz
jae
add
add
mov
mov
pop
add
clc
repnz
jae
add
sti
mov
in
call
clc
repnz
jae
xchg
inc
add
or
jo
fwait
cld
nop
jmp
add
jno
add
loope
ss
aad
mov
or
clc
repnz
jae
movb
mov
clc
repnz
jae
stc
mov
add
jne
push
clc
repnz
jae
jnp
add
shr
clc
repnz
jae
mov
add
mov
clc
repnz
jae
add
cmp
sti
add
add
push
clc
repnz
jae
mov
lahf
add
add
clc
repnz
jae
add
jnp
jns
lock
clc
repnz
jae
or
sahf
add
push
mov
xchg
ret
add
out
adc
add
add
inc
imul
nop
jae
addb
push
int3
push
popf
add
clc
repnz
jae
add
add
repnz
jae
add
or
fwait
inc
jecxz
mov
clc
repnz
jae
add
dec
push
clc
repnz
jae
add
nop
add
adc
add
repnz
jae
add
dec
and
clc
repnz
jae
jae
xor
dec
xchg
mov
jae
or
mov
icebp
push
mov
push
mov
xchg
ret
xchg
add
lret
clc
repnz
jae
jo
mov
add
add
or
clc
repnz
jae
add
push
enter
mov
xchg
ret
add
add
int3
or
add
and
add
lahf
push
test
add
mov
jae
roll
popl
jno
add
nop
jae
mov
add
jo
ror
clc
repnz
jae
add
xchg
jmp
add
adc
popl
add
add
push
mov
popf
lret
mov
inc
popf
cmp
add
jg
test
lock
clc
repnz
jae
out
xchg
lock
or
cmp
ret
add
add
clc
repnz
jae
add
stc
adc
mov
mov
fwait
cld
nop
jmp
add
jo
add
in
add
xor
add
add
mov
jmp
inc
add
adc
add
roll
xchg
ret
add
pop
xchg
add
cmp
xor
mov
jmp
add
add
movb
add
add
pop
push
push
mov
xchg
ret
add
pop
pop
add
mov
clc
repnz
jae
fwait
add
add
mov
add
clc
repnz
jae
aad
add
push
adc
popa
jmp
add
pop
add
add
add
or
popa
add
cld
nop
jmp
push
scas
out
or
add
add
clc
repnz
jae
pop
mov
scas
push
test
add
add
repnz
jae
add
sub
repnz
jae
sbb
sbb
rclb
testb
cmp
ret
and
or
addr16
mov
fwait
cld
nop
jmp
add
sbb
push
mov
add
lcall
add
push
inc
add
add
add
repnz
jae
add
and
push
fwait
cld
nop
jmp
add
add
jnp
pop
adc
repnz
jae
rorl
pop
arpl
test
fwait
cld
nop
jmp
dec
mov
add
add
jmp
ljmp
add
add
xorl
jmp
iret
xor
xor
jo
mov
mov
clc
repnz
jae
add
or
decb
jmp
add
pop
pop
or
sbb
push
mov
test
out
lds
add
test
mov
add
add
add
add
or
orl
and
mov
xchg
ret
xchg
add
fwait
jbe
add
add
repnz
jae
scas
add
test
push
mov
xchg
ret
je
add
out
call
nop
jae
xchg
add
push
add
cld
nop
jmp
add
call
mov
sub
or
cmp
ret
add
loope
in
pop
push
mov
xchg
ret
add
add
mov
clc
repnz
jae
scas
add
jns
mov
pop
outsl
pop
fwait
cld
nop
jmp
add
andb
shll
addb
adc
dec
cmp
repnz
jae
add
add
js
push
mov
xchg
ret
addb
sahf
add
add
push
clc
repnz
jae
add
scas
add
add
add
add
push
mov
xchg
ret
add
add
and
jmp
add
loope
jns
inc
add
push
mov
xchg
ret
add
add
and
mov
popl
clc
repnz
jae
add
add
incl
lea
add
repnz
jae
add
xchg
adc
mov
add
std
incl
xchg
add
adc
pop
clc
repnz
jae
sahf
add
add
add
add
mov
add
add
repnz
jae
sahf
adc
mov
nop
jmp
roll
cmp
dec
add
repnz
jae
add
add
jns
mov
xor
clc
repnz
jae
add
mov
mov
add
repnz
jae
add
add
xchg
lock
nop
jae
cmp
sti
add
add
add
add
clc
repnz
jae
iret
add
add
je
addb
data16
call
nop
jmp
add
add
add
mov
repz
mov
xchg
ret
addb
lret
jo
mov
add
cld
nop
jmp
add
aad
xchg
add
xor
push
mov
xchg
ret
jo
add
stos
mov
clc
repnz
jae
xchg
add
pop
add
push
clc
repnz
jae
scas
out
int3
add
add
aaa
pop
push
push
mov
xchg
ret
iret
add
add
mov
sbb
rcrb
cld
incl
add
popl
add
add
repnz
jae
add
aaa
pop
mov
fwait
cld
nop
jmp
add
loopne
inc
add
nop
jae
add
aad
sbb
add
clc
repnz
jae
dec
add
or
iret
stos
and
push
mov
xchg
ret
mov
xor
mov
popa
add
repnz
jae
add
cmpl
jb
repnz
jae
out
jae
pop
pop
push
mov
xchg
ret
add
test
add
jae
cmp
nop
jmp
sti
sbb
add
pop
popa
insb
mov
fwait
cld
nop
jmp
mov
jae
js
pop
and
repnz
jae
add
sahf
add
cltd
add
clc
repnz
jae
add
push
jae
mov
clc
repnz
jae
jns
mov
je
fwait
cld
nop
jmp
jbe
loopne
xchg
add
clc
repnz
jae
scas
add
add
out
les
add
clc
repnz
jae
add
div
fwait
cld
nop
jmp
mov
popl
sti
daa
sub
repz
mov
xchg
ret
pop
sahf
mov
add
sub
sahf
fiadds
xchg
ret
add
mov
imul
add
add
add
sbb
add
nop
jae
add
addb
cmpl
fwait
cld
nop
jmp
dec
scas
or
jne
push
mov
xchg
ret
aad
pop
dec
xchg
cs
clc
repnz
jae
sti
push
add
subb
add
clc
repnz
jae
shl
xchg
add
add
fistpl
repnz
jae
call
push
loopne
and
add
push
mov
xchg
ret
pop
add
xor
jmp
loop
push
mov
xchg
ret
lret
ljmp
and
repnz
jae
out
fs
sbb
sub
enter
jae
rcll
adc
and
clc
repnz
jae
add
cmp
je
jo
add
out
add
scas
xor
add
add
clc
repnz
jae
mov
add
clc
repnz
jae
fwait
add
add
push
mov
xchg
ret
popl
addr16
add
jae
aad
add
add
sti
cmpsl
mov
nop
jae
add
add
add
cmc
rolb
jmp
xlat
roll
xchg
ret
fs
add
pop
add
cmp
jae
incl
add
fwait
xchg
inc
add
stos
mov
fwait
cld
nop
jmp
add
xchg
push
call
fiadds
xchg
ret
scas
add
int3
mov
mov
repnz
jae
xchg
add
add
push
push
mov
xchg
ret
dec
scas
inc
xchg
out
cmp
in
add
add
clc
repnz
jae
dec
scas
xchg
jl
mov
into
adc
jecxz
cwtl
add
add
push
inc
addb
psubsb
add
repnz
jae
add
add
mov
cld
nop
jmp
je
add
push
push
mov
xchg
ret
iret
push
add
add
sbb
in
add
inc
inc
add
add
fcmovnbe
add
pop
push
clc
repnz
jae
add
scas
add
add
sub
fwait
cld
nop
jmp
scas
sahf
add
add
add
push
push
mov
xchg
ret
dec
add
add
clc
repnz
jae
out
int3
add
add
push
mov
sub
addb
pop
add
popa
jb
add
stos
fcomps
sub
add
or
add
add
iret
mov
andl
add
sbbb
add
pop
add
jb
jae
fwait
cld
nop
jmp
add
add
pop
addb
arpl
mov
call
clc
repnz
jae
int3
out
add
add
add
aad
add
add
add
add
add
cmp
incl
iret
fwait
pop
icebp
test
rep
fwait
cld
nop
jmp
xchg
add
add
xor
fwait
cld
nop
jmp
xchg
add
jns
jns
pop
pop
and
push
mov
xchg
ret
xchg
add
sahf
jg
movb
mov
xchg
ret
inc
add
add
lcall
repnz
jae
mov
test
xabort
nop
jae
add
add
arpl
add
fcomps
cld
nop
jmp
add
roll
iret
add
add
movzwl
clc
repnz
jae
add
add
fisttpll
stc
mov
pop
scas
sahf
add
add
add
adc
add
add
mov
clc
repnz
jae
add
jns
jmp
mov
xchg
ret
dec
jnp
xor
add
clc
repnz
jae
roll
out
add
iret
decl
fwait
cld
nop
jmp
popl
and
inc
jmp
lcall
in
incl
add
fmuls
nop
jae
add
add
out
add
pop
add
fwait
cld
nop
jmp
xchg
add
sub
nop
jmp
add
add
loopne
sbb
fwait
cld
nop
jmp
pop
add
lret
mov
ljmp
xchg
in
pushl
add
add
add
add
clc
repnz
jae
arpl
add
rcrl
dec
push
push
mov
xchg
ret
jae
dec
loope
jnp
dec
push
clc
repnz
jae
add
add
add
mov
pop
outsl
loope
mov
shl
into
je
cmc
insb
and
jne
fwait
cld
nop
jmp
add
add
pusha
push
mov
xchg
ret
add
je
add
jbe
add
sub
repnz
jae
add
add
sahf
adc
mov
xchg
ret
aad
mov
xchg
jnp
sub
jae
jae
add
pop
add
mov
nop
jmp
movb
scas
add
add
mov
clc
repnz
jae
push
add
mov
mov
clc
repnz
jae
add
dec
sbb
add
jne,pn
clc
repnz
jae
add
xor
push
test
jne
clc
repnz
jae
or
add
dec
mov
fwait
cld
nop
jmp
add
add
mov
nop
jae
pop
push
add
mov
loopne
push
push
mov
xchg
ret
jns
add
and
nop
jae
pop
add
out
addr16
pop
sti
pusha
fwait
cld
nop
jmp
jbe
pop
pop
add
aad
lcall
jmp
xchg
add
add
add
xchg
addb
adc
mov
fsubs
mov
xchg
ret
scas
add
and
ret
jmp
jmp
incl
pop
add
add
mov
std
push
clc
repnz
jae
or
add
add
add
lea
push
mov
xchg
ret
add
jae
xchg
mov
push
mov
xchg
ret
dec
jns
sahf
loope
add
add
add
add
outsl
je
xor
xor
fwait
cld
nop
jmp
push
add
popl
clc
clc
repnz
jae
add
add
scas
push
out
dec
fwait
cld
nop
jmp
sahf
add
jbe
add
loopne
repnz
jae
or
popl
push
and
mov
call
clc
repnz
jae
scas
add
dec
cmp
repnz
jae
out
add
add
fiaddl
nop
jmp
add
cmp
scas
fwait
add
jne
clc
repnz
jae
add
stos
clc
repnz
jae
mov
pop
add
pop
push
mov
xchg
ret
add
add
dec
fs
outsl
pop
fwait
cld
nop
jmp
roll
pop
add
int3
mov
xlat
xor
pop
push
clc
repnz
jae
add
sbb
aam
mov
clc
repnz
jae
add
scas
push
pop
inc
jbe
mov
cwtl
mov
clc
repnz
jae
fs
jae
or
mov
add
clc
repnz
jae
adc
decl
popf
mov
push
mov
xchg
ret
inc
add
fwait
add
rolb
mov
xor
clc
repnz
jae
add
scas
xor
clc
repnz
jae
pop
loope
out
add
xor
mov
inc
push
mov
xchg
ret
add
xchg
add
dec
jp
dec
sub
sub
inc
add
mov
pusha
clc
repnz
jae
add
xchg
add
sbb
push
mov
xchg
ret
add
pop
mov
fwait
cld
nop
jmp
xor
je
lahf
loopne
jp
les
cld
nop
jmp
lret
add
add
jbe
clc
repnz
jae
add
pop
add
nop
jmp
sti
xorb
add
dec
cld
push
mov
xchg
ret
fwait
scas
lret
scas
scas
and
mov
fmuls
nop
jmp
addb
or
mov
add
xchg
or
negl
out
incl
scas
add
mov
push
mov
xchg
ret
lahf
and
jae
add
clc
repnz
jae
xchg
jbe
int3
push
clc
repnz
jae
out
fwait
add
lcall
idiv
dec
add
add
adc
add
mov
nop
jmp
rorl
in
popl
jne
clc
repnz
jae
stc
iret
fwait
jbe
jbe
cmp
add
in
jmp
or
push
jl
clc
repnz
jae
lret
add
ret
push
leave
push
clc
repnz
jae
pop
add
sti
pop
out
dec
pop
push
mov
xchg
ret
add
je
je
ja
mov
clc
repnz
jae
dec
addr16
sahf
add
jge
repz
cld
nop
jmp
test
roll
add
dec
add
xchg
mov
clc
repnz
jae
add
scas
add
clc
repnz
jae
mov
jno
in
cltd
and
push
mov
xchg
ret
je
pop
scas
shrl
ret
add
add
inc
add
out
adc
negl
cld
nop
jmp
scas
sbb
jns
sbb
add
repnz
jae
add
push
out
pop
push
xor
add
fwait
cld
nop
jmp
add
mov
add
mov
clc
repnz
jae
pop
add
add
or
clc
repnz
jae
add
adc
repnz
jae
scas
pop
add
jo
inc
test
jmp
add
add
add
out
add
xchg
aad
pusha
add
mov
adc
repnz
jae
add
add
jne
push
mov
xchg
ret
add
mov
add
repnz
jae
push
mov
add
xor
clc
repnz
jae
add
add
dec
clc
repnz
jae
popl
loope
sbb
jg
clc
repnz
jae
add
sahf
pop
push
add
test
repnz
jae
add
mov
fs
insb
clc
repnz
jae
mov
lea
out
add
adc
push
jnp
loop
mov
add
lods
out
add
add
sahf
fs
aam
les
push
mov
xchg
ret
pop
add
add
jnp
mov
clc
repnz
jae
add
addr16
add
or
pop
cmp
repnz
jae
pop
pop
pop
mov
inc
dec
push
clc
repnz
jae
add
add
or
daa
out
xchg
clc
repnz
jae
add
lret
add
loope
add
mov
fwait
cld
nop
jmp
add
add
loopne
push
mov
xlat
jbe
jne
loopne
add
add
add
clc
repnz
jae
add
lret
clc
repnz
jae
add
add
cmp
push
mov
xchg
ret
fwait
sahf
mov
add
mov
jmp
mov
add
fwait
iret
sti
mov
out
or
pop
xor
push
mov
xchg
ret
add
aad
fiaddl
jmp
jns
push
add
jno
mov
popa
lods
ret
clc
repnz
jae
mov
ror
add
sti
clc
repnz
jae
inc
fs
add
add
cld
nop
jmp
add
add
add
ja
add
xor
add
clc
repnz
jae
add
mov
mov
test
lcall
repz
incl
fwait
lahf
or
test
clc
repnz
jae
mov
pop
and
add
clc
repnz
jae
scas
scas
add
add
clc
repnz
jae
add
add
fwait
add
xchg
imul
enter
add
add
je
incl
roll
jnp
cmpsb
inc
adc
mov
mov
clc
repnz
jae
jns
add
add
repnz
jae
je
stc
add
or
add
fwait
cld
nop
jmp
scas
add
jo
add
nop
jae
add
pop
add
add
push
call
nop
jae
push
sahf
mov
jle
aas
adc
incl
movb
mov
mov
add
fwait
cld
nop
jmp
jns
add
jno
add
repnz
jae
pop
add
push
jno
add
dec
mov
clc
repnz
jae
mov
mov
clc
repnz
jae
pop
push
jo
cmp
mov
mov
add
clc
repnz
jae
sbb
jo
add
push
pushf
jne
clc
repnz
jae
cmp
je
add
fwait
cld
nop
jmp
add
jae
add
xor
aad
clc
repnz
jae
add
push
clc
repnz
jae
add
add
psllq
sub
pushl
jae
inc
push
orps
fwait
in
inc
add
add
stc
jae
add
push
test
add
repnz
jae
and
xchg
xchg
daa
xor
sbb
xorl
add
push
clc
repnz
jae
add
mov
cwtl
add
fwait
cld
nop
jmp
and
scas
jnp
add
mov
xor
add
clc
repnz
jae
add
mov
loop
inc
add
pop
int3
fwait
scas
adc
mov
sar
repnz
jae
or
int3
add
iret
jns
push
push
mov
xchg
ret
dec
add
cmp
push
clc
repnz
jae
sbb
and
pop
add
repnz
jae
jnp
or
add
test
or
nop
jae
add
jo
scas
shrl
clc
repnz
jae
inc
add
add
add
add
add
clc
repnz
jae
add
jbe
add
mov
push
mov
xchg
ret
jae
pop
fs
add
mov
repnz
jae
add
xchg
fwait
add
push
add
repnz
jae
push
add
test
mov
xchg
inc
shrl
repnz
jae
add
add
sub
add
repnz
jae
add
and
rolb
stos
and
clc
repnz
jae
out
xorb
fisttpl
push
fadds
xchg
ret
add
add
add
xchg
mov
cli
clc
repnz
jae
roll
int3
pop
add
push
mov
jae
inc
iret
add
and
clc
repnz
jae
add
add
mov
mov
clc
repnz
jae
aad
jno
arpl
and
push
clc
repnz
jae
out
adc
add
or
repnz
jae
add
sahf
add
mov
add
add
clc
repnz
jae
add
push
push
mov
xchg
ret
shll
add
subl
test
call
mov
add
adc
in
sub
ds
clc
repnz
jae
add
mov
clc
repnz
jae
sti
add
add
adc
mov
or
clc
repnz
jae
jae
je
clc
repnz
jae
add
push
mov
xchg
ret
add
scas
add
add
stc
leave
clc
repnz
jae
pop
add
add
add
and
push
mov
xchg
ret
jbe
add
fs
mov
push
mov
xchg
ret
sbb
mov
mov
clc
repnz
jae
add
out
pop
add
call
clc
repnz
jae
lret
push
pusha
add
nop
jae
jbe
aad
jo
inc
cmp
push
clc
repnz
jae
add
add
pop
push
sub
nop
jae
jno
stc
cmp
add
mov
clc
repnz
jae
push
add
add
mov
push
add
or
clc
repnz
jae
add
mov
jb,pt
fwait
cld
nop
jmp
mov
mov
mov
add
clc
repnz
jae
scas
jae
pop
push
fldcw
nop
jae
xchg
add
clc
repnz
jae
add
lahf
add
add
mov
jae
jns
shl
add
dec
and
fdiv
movsb
push
mov
xchg
ret
jns
out
sahf
add
nop
jmp
fs
add
xor
jbe
add
mov
in
cmpsl
cli
xchg
clc
repnz
jae
dec
loopne
add
mov
add
call
clc
repnz
jae
fwait
add
and
cld
nop
jmp
add
out
add
nop
jmp
add
mov
sahf
addr16
mov
sub
repnz
jae
add
fwait
add
xchg
test
repnz
jae
add
jns
add
inc
add
add
add
jo
add
mov
add
add
fcos
jmp
jae
out
jne
sahf
mov
fwait
cld
nop
jmp
pop
adc
jmp
mov
xchg
ret
add
lret
mov
aam
pop
clc
repnz
jae
add
pop
int3
add
adcb
nop
jae
stc
pop
add
pop
add
xchg
jae
add
add
mov
mov
mov
xchg
ret
add
out
add
add
add
nop
jmp
arpl
scas
push
sbb
add
add
nop
jae
out
loopne
add
add
or
nop
jae
add
add
inc
out
jno
lods
clc
repnz
jae
add
adc
push
mov
add
pushf
add
add
add
popf
aad
add
aam
inc
add
sbbb
jae
xchg
cmp
nop
jae
sbb
fwait
and
add
mov
push
mov
xchg
ret
add
dec
add
pop
and
mov
mov
nop
jae
addb
loopne
pop
dec
test
fwait
cld
nop
jmp
adc
add
scas
enter
nop
jmp
out
add
scas
add
jns
aad
dec
push
clc
repnz
jae
loope
stc
addb
add
mov
mov
xchg
ret
mov
add
fwait
add
pop
pop
clc
repnz
jae
add
scas
out
shll
je
mov
nop
jae
mov
add
clc
repnz
jae
or
push
mov
jnp
dec
or
mov
xchg
ret
jns
add
movsl
push
out
add
fwait
cld
nop
jmp
stc
add
pop
lahf
roll
les
add
push
mov
xchg
ret
sahf
add
push
out
sub
cli
inc
add
pop
or
sahf
add
add
clc
repnz
jae
xor
shll
mov
xor
add
clc
repnz
jae
jns
push
faddl
jae
add
adc
pop
jns
and
mov
inc
call
cld
nop
jmp
sahf
add
add
add
push
jb
mov
mov
clc
repnz
jae
sahf
add
push
clc
repnz
jae
add
add
mov
inc
add
pop
pop
sbb
push
mov
popa
mov
mov
incb
add
outsl
rcrl
xchg
ret
clc
repnz
jae
add
add
jmp
add
test
add
shll
jae
push
mov
inc
adc
xchg
add
aaa
add
adc
mov
add
add
mov
sub
jns
rcrl
je
incb
mov
jo
mov
rolb
pop
loopne
mov
pusha
add
mov
and
adc
add
inc
push
pop
push
test
das
dec
xor
mov
mov
outsb
lods
les
fst
add
and
mov
adc
int3
xchg
xor
mov
lcall
inc
add
mov
add
rcll
mov
xchg
add
push
popa
add
cmpsl
mov
sub
jb
mov
sbb
add
inc
mov
add
gs
push
pop
cwtl
or
mov
mov
mov
adc
push
pop
inc
jl
add
pop
inc
add
js
or
sbb
popf
insl
std
push
cwtl
ljmp
mov
inc
jno
add
mov
push
popf
icebp
mov
mov
sub
add
cltd
sub
pop
fld
xchg
xchg
adc
mov
repnz
insl
dec
xor
mov
movsb
clc
sbbl
pop
stos
inc
mov
rolb
mov
mov
mov
add
mov
xchg
add
scas
cmpsb
leave
ljmp
aad
outsl
pop
mov
dec
adc
add
call
cmpsl
mov
sbb
jno
mov
pop
lods
pop
cmpl
xlat
push
les
add
mov
ja
mov
add
cmpsb
leave
clc
mov
add
aas
mov
mov
sub
xchg
stos
addr16
add
sub
push
lret
movsb
inc
lcall
add
inc
inc
add
mov
add
mov
adc
mov
xor
test
and
int
insb
sub
add
es
insl
adc
add
mov
mov
or
xor
inc
loop
mov
xchg
mov
add
mov
shll
jmp
iret
stos
xor
mov
adc
add
scas
scas
lock
mov
add
dec
insl
jo
mov
fcompl
test
mov
adc
mov
dec
and
lds
jmp
add
mov
xchg
cmp
lock
add
add
mov
addr16
sbb
outsl
rolb
mov
or
es
repnz
add
push
call
sub
es
les
adc
jp
nop
add
lock
cmc
repnz
or
jle
idivl
or
mov
add
adc
aaa
and
mov
rcrl
sti
fildll
out
popa
movsb
xchg
jnp
jbe
xor
mov
pusha
add
xchg
hlt
jmp
dec
push
add
mov
mov
iret
dec
repz
mov
and
mov
add
mov
jae
xlat
adc
dec
mov
test
in
push
cmp
xor
mov
test
add
mov
xchg
mov
sti
lock
icebp
adc
lea
or
mov
mov
cmpsl
mov
mov
fnsave
in
loope
sub
inc
sarl
mov
dec
iret
sub
mov
mov
xchg
add
mov
lcall
sbb
imul
out
outsb
xchg
add
shrl
les
xor
mov
aaa
mov
add
mov
mov
add
mov
add
add
push
mov
out
mov
jne
xlat
fistps
stc
add
std
push
ret
inc
into
and
mov
add
add
pusha
add
addb
mov
outsb
inc
ljmp
sbb
add
fsubrl
add
xor
mov
mov
inc
sub
and
sbb
sub
notb
inc
add
ret
cmc
push
add
xchg
xor
xchg
push
cli
loopne
mov
outsl
lahf
push
cwtl
mov
xchg
pop
mov
sub
push
rolb
mov
add
jns
add
ret
cmp
or
add
mov
lds
dec
stc
cmp
add
and
lock
mov
jge
fucomp
xor
mov
mov
in
movb
dec
mov
js
inc
xchg
and
stos
add
mov
push
xchg
mov
add
cmc
fdivs
or
rolb
mov
pop
cltd
mov
and
mov
or
pushf
jns
sub
add
inc
fdiv
cmp
add
dec
clc
cwtl
jp
outsb
sub
mov
pop
xor
mov
inc
dec
sarl
mov
xor
cmpsb
repnz
test
xchg
nop
add
pop
ljmp
xchg
mov
jne
add
jae
xor
mov
add
dec
hlt
adc
mov
jae
pop
sub
loop
mov
xchg
testb
in
add
stos
inc
inc
insb
mov
add
out
loope
lahf
loope
push
jge
dec
xchg
xchg
mov
mov
loop
mov
ljmp
std
jmp
aas
dec
mov
add
ret
or
add
in
add
stos
xlat
xor
mov
mov
mov
add
lahf
lahf
insl
jns
lock
inc
push
cwtl
push
lods
cmp
rcl
or
add
add
enter
mov
mov
add
test
movsl
aad
cmpsl
imul
inc
mov
aad
imul
shll
mov
add
xor
mov
repnz
jne
in
mov
and
mov
push
pop
and
add
adcl
mov
cmp
data16
mov
mov
push
push
pop
jne
sub
add
add
mov
jp
add
mov
xchg
add
insb
lahf
pop
sub
stos
in
icebp
sbb
push
fstpl
sub
pop
dec
and
mov
iret
xchg
leave
mov
adc
adc
mov
mov
mov
sub
add
sub
add
mov
adc
jo
mov
loope
jae
jne
xchg
mov
lods
mov
popa
int
insl
sub
sub
mov
lret
js
mov
jg
xchg
xchg
ss
jg
idivb
cltd
mov
lahf
iret
adc
mov
ds
and
mov
out
pop
fsubp
mov
xchg
scas
std
cmp
xchg
mov
jg
stc
mov
mov
mov
pop
dec
add
sub
scas
mul
stc
in
dec
pushf
push
bound
mov
or
dec
scas
xor
jl
nop
add
cli
ds
addb
ret
ljmp
add
in
xchg
adc
pop
inc
add
je
dec
xchg
lret
ja
lock
adc
scas
or
and
sub
repnz
xchg
push
add
cmp
mov
xlat
gs
add
mov
and
mov
add
add
and
rolb
mov
jge
xor
mov
add
push
enter
adc
xchg
and
sub
inc
sarl
rcll
mov
mov
push
add
addr16
xchg
add
popa
pop
adc
mov
pushf
in
inc
out
into
cmc
aas
push
add
inc
shll
or
xor
add
push
daa
frstor
push
dec
sub
movl
sub
pop
aas
xor
test
fdivrs
sbb
int3
in
and
add
jnp
mov
sbb
ret
jmp
jne
test
push
inc
rolb
mov
mulb
fistpl
xchg
mov
dec
pop
xchg
dec
inc
mov
fadd
add
sbb
inc
jmp
add
dec
cs
and
call
cmp
mov
or
lret
add
pop
adc
mov
and
in
jo
mov
add
mov
adc
or
call
add
pop
mov
imul
push
xchg
test
ja
mov
sbb
xor
add
fnstsw
mov
pop
movsb
jns
cmp
pop
or
mov
sbb
push
mov
imul
mov
fdivs
sub
add
ja
test
mov
jp
add
fsub
xor
and
mov
mov
push
lret
pop
push
add
lret
dec
mov
stos
push
or
sbb
out
test
fmul
xchg
mov
lds
mov
cmp
add
sbb
add
repnz
push
rolb
mov
out
popf
dec
xchg
dec
cld
mov
jo
mov
loope
mov
je
dec
rcrl
fwait
repnz
mov
mov
lea
jb
mov
jmp
rcl
and
mov
mov
mov
aam
add
call
add
xchg
mov
cmpsl
xchg
cmpsl
mov
adc
mov
mov
stos
cltd
js
adc
sub
add
loopne
mov
jno
mov
cmovg
jmp
mov
lds
xor
xchg
add
mov
sarl
ds
pop
or
sbb
in
test
inc
and
add
push
cmc
cmpsl
push
popf
mov
add
adc
cltd
cs
lods
push
andl
mov
mov
or
stos
mov
loop
mov
mov
pop
add
adc
pop
adc
mov
mov
iret
ret
addb
repnz
in
ds
loopne
mov
les
add
loope
add
xchg
les
dec
lock
sbb
leave
inc
repnz
pusha
add
cs
adc
cmpl
mov
add
rolb
mov
orl
outsb
jb
mov
mov
icebp
pop
mov
mov
lahf
out
cld
sub
xchg
insl
inc
add
int
addr16
mov
xchg
in
stos
xchg
movsl
lea
jns
jne
adc
mov
xchg
jmp
lds
push
mov
add
add
xor
pop
icebp
pop
rol
mov
hlt
add
inc
add
or
mov
mov
mov
mov
cltd
mov
xor
add
popa
cmp
sub
cwtl
sahf
xchg
pop
cltd
arpl
and
mov
cmpsl
mov
push
lods
pop
inc
pop
into
fcmovb
arpl
mov
add
inc
add
mov
loope
mov
xchg
pop
and
leave
push
pop
push
mov
in
mov
mov
mov
popa
or
ret
push
sbb
out
loop
mov
dec
sbb
jp
and
mov
aas
fidivrl
adc
mov
int
mov
dec
popa
sub
push
faddl
test
mov
cmp
movsb
xchg
inc
rcll
xchg
inc
ja
fisubs
cmp
mov
mov
push
pop
and
pop
rolb
mov
push
mov
fstl
jne
aad
mov
mov
xor
sub
pushf
xor
nop
add
mov
add
pop
arpl
pop
stos
loop
mov
sbb
fistl
mov
push
push
mov
rolb
mov
xchg
in
mov
mov
inc
cmp
jge
test
add
fsubr
enter
into
mov
add
push
insb
scas
or
push
xor
add
lods
jne
xorl
data16
stc
shll
mov
mov
pop
addr16
adc
in
cli
jmp
daa
xchg
add
mov
fimuls
jge
out
arpl
sub
xlat
lret
rorl
movsl
sbb
jo
mov
add
or
adc
mov
int3
cmp
adc
add
and
xor
mov
lds
lret
xor
pop
add
mov
add
mov
xchg
add
fcompl
or
mov
mov
rolb
mov
rolb
mov
out
push
mov
insb
jmp
testb
das
sub
add
adc
xchg
cmpsb
aam
xchg
pop
loope
add
das
xor
stos
cld
mov
add
sub
es
lret
xor
mov
push
outsb
mov
jg
fisubl
mov
popl
rolb
mov
add
out
mov
aaa
inc
add
xor
fdivs
popa
and
mov
jle
xor
adc
push
mov
sub
arpl
and
insb
xchg
rcrl
push
mov
call
sbb
and
mov
pop
sarl
test
mov
add
add
jecxz
je
stos
xor
mov
push
sub
or
add
jnp
rcr
xchg
add
mov
add
mov
in
test
je
aas
and
mov
jecxz
jae
cmpsl
xchg
push
enter
inc
pop
fs
or
xor
mov
sbb
bound
mov
ja
test
add
pushf
test
sub
cmpsl
test
or
in
stos
fdivrs
add
testl
sbb
add
int
mov
or
fisubrs
mov
add
mov
rolb
mov
mov
dec
mov
add
add
inc
or
aad
popa
xorl
xor
dec
data16
mov
iret
bound
mov
cltd
std
into
or
mov
sub
outsl
fwait
pop
loop
mov
push
pop
or
add
add
mov
and
mov
jno
add
addb
sarl
dec
push
add
cmp
mov
dec
stos
sub
lds
loopne
mov
test
mov
jle
push
jecxz
add
cmpsl
ss
add
add
add
inc
add
and
mov
push
test
xlat
fadd
shll
mov
jecxz
add
les
cmp
test
mov
int3
lods
mov
enter
add
jbe
pop
sub
les
lcall
rolb
mov
leave
int
jmp
hlt
mov
add
mov
int
test
into
push
enter
dec
pop
jb
mov
jo
mov
mov
mov
sbb
push
add
mov
sbb
movsb
cmc
sbb
mov
clc
sub
push
sub
fucompp
jp
jae
inc
shrl
femms
sub
add
or
dec
pop
jb
mov
ljmp
fmuls
jb
mov
add
xchg
aad
addb
imul
push
mov
and
add
add
sub
add
xchg
stc
sahf
xchg
push
jle
pushf
popa
mov
pop
cmp
jle
add
mov
push
dec
mov
fs
rolb
mov
jge
js
add
mov
ret
mov
add
add
cld
inc
add
inc
flds
add
mov
cltd
inc
or
add
cli
fists
pushf
jnp
ds
mov
out
mov
add
mov
mov
cltd
xchg
sub
pop
pop
push
add
mov
or
in
push
sub
add
add
loope
test
fbld
xchg
add
add
addb
jle
mov
stos
dec
rcrl
sti
and
mov
cld
outsb
xor
aaa
cmp
mov
outsb
scas
mov
movsw
and
mov
sbb
popf
enter
or
lock
cmp
pop
sub
add
mov
mov
mov
jne
mov
mov
int
add
mov
je
lods
inc
test
add
mov
filds
mov
pop
cmp
imul
stos
adc
and
xchg
sbb
into
sub
add
push
arpl
mov
mov
fnstsw
into
pop
int3
in
add
lret
mov
dec
addb
cmp
add
mov
es
xchg
out
sub
rolb
mov
xchg
pop
dec
out
sbb
dec
lret
jnp
std
cmpxchg
mov
repnz
dec
js
ficoml
jno
xor
cltd
ljmp
jbe
lahf
mov
add
mov
adc
mov
mov
mov
orl
int3
out
scas
mov
mov
mov
lcall
imul
add
adc
add
sbb
mov
and
mov
stc
fwait
fwait
dec
mov
push
das
or
mov
dec
dec
aaa
outsb
clc
mov
hlt
inc
add
mov
mov
cmp
ja
add
jl
xor
mov
add
push
ret
adc
ret
dec
mov
fisubs
lcall
stc
test
mov
mov
push
hlt
jns
movsbl
mov
dec
mov
push
mov
les
add
out
and
push
xchg
mov
mov
or
pop
mov
mov
fucom
add
jmp
cmpsb
ret
add
scas
pop
ret
hlt
or
mov
mov
cs
xor
add
xlat
mov
popa
fs
xor
mov
mov
ss
int
add
add
sbb
adc
mov
and
ljmp
xlat
in
push
stos
or
loopne
mov
jae
mov
mov
add
add
inc
cli
das
arpl
fldcw
mov
inc
pop
aad
out
adc
dec
frstor
or
inc
scas
loope
enter
adc
and
sti
scas
mov
cmpsl
inc
push
add
jp
mov
xchg
mov
and
add
mov
add
mov
push
cmp
lods
push
adc
gs
leave
pop
xor
mov
add
loop
mov
int3
pop
scas
and
pop
or
pop
enter
js
add
ret
out
pop
imul
leave
sbb
mov
mov
call
sub
mov
jg
out
sub
maskmovq
testl
and
and
xchg
addb
lds
cmp
aam
lret
sub
hlt
movsb
pop
sar
jl
push
pop
imul
shll
jle
js
cmpsl
push
adc
mov
add
sub
jnp
les
jno
js
das
jns
dec
mov
dec
arpl
lds
jle
inc
xchg
repz
add
mov
aaa
addr16
out
pusha
add
mov
test
sub
idivb
jbe
mov
fldl
sub
add
add
pop
adc
xchg
pushf
movsb
cwtl
lret
popf
loopne
mov
mov
add
sbb
insl
les
and
mov
cmp
mov
mov
push
push
popa
xor
outsl
out
pusha
add
das
dec
decl
ss
push
add
jnp
add
lods
dec
jo
mov
mov
pop
mov
pop
cmpsb
in
adc
lods
test
jo
mov
bound
mov
rolb
mov
add
mov
fs
iret
imul
cmpsb
in
imul
add
mov
dec
sub
lods
mov
mov
or
jne
insl
cld
and
fmulp
lock
test
hlt
push
cmpl
mov
sti
xchg
ds
add
test
add
add
inc
add
out
push
add
xor
add
push
add
and
add
shll
mov
add
mov
adc
cmpsb
daa
rcll
jle
test
outsl
int3
lock
add
cmpsl
jne
push
add
das
jle
rolb
mov
add
mov
rolb
mov
xchg
add
mov
int
sbb
add
pop
ds
stc
xchg
inc
imul
push
sbb
adc
inc
xor
enter
dec
mov
repnz
icebp
xor
mov
inc
add
imul
paddsb
jno
aaa
shll
add
pop
sbb
mov
add
mov
mov
xor
insl
test
aad
sub
sti
and
pop
jl
es
in
mov
xchg
or
mov
add
test
push
ds
mov
mov
mov
mov
mov
mov
jne
and
out
rcrl
mov
jecxz
movsl
inc
movsb
and
inc
add
rorl
addl
add
ficoms
mov
pop
incl
stc
dec
and
xchg
loope
mov
mov
cmpsl
add
mov
dec
outsl
adc
mov
mov
mov
andps
push
pop
jns
cmpsb
mov
ficomps
aad
cmpsb
hlt
movsl
inc
cmp
mov
jl
das
pop
xlat
inc
push
xor
mov
push
movsl
cld
call
mov
pop
and
adc
mov
add
push
loop
mov
dec
popf
loope
jb
mov
or
int
push
cli
rolb
mov
xor
xchg
dec
popf
jns
or
cwtl
mov
mov
xlat
mov
add
rcll
mov
and
jb
mov
in
mov
lock
into
sub
movsb
jbe
mov
ljmp
sub
loopne
mov
or
mov
mov
add
icebp
xor
jno
xchg
addb
mov
xchg
xchg
nop
add
mov
mov
ljmp
jns
es
mov
add
mov
sbb
add
mov
sbb
gs
ja
add
idivl
pushf
fcmovb
add
pop
mov
and
mov
fdivrl
fsubrl
fcomps
sbb
imul
daa
sub
addb
iret
test
adc
mov
mov
pop
daa
sbb
jb
mov
dec
jmp
lret
push
es
add
test
mov
int
dec
cwtl
mov
outsl
xchg
add
add
add
out
mov
mulb
cmp
mov
add
and
mov
add
mov
div
or
add
sbb
test
stos
lret
sub
je
or
add
es
or
adc
add
mov
sub
hlt
mov
addr16
jecxz
push
xor
out
pop
out
xchg
or
lret
cmp
in
sbb
xchg
rolb
sub
add
popa
or
push
xor
in
subl
push
xchg
mov
xchg
cwtl
mov
add
shl
xchg
jns
rcll
push
mov
aaa
cld
or
mov
push
adc
xor
addb
jo
mov
stos
leave
test
cltd
lea
add
or
add
mov
mov
mov
jecxz
dec
lock
jp
data16
adc
push
cmp
daa
mov
mov
les
mov
movsb
and
mov
ss
cmc
inc
add
repz
cmp
mov
sub
xor
add
adc
mov
lea
sub
nop
add
add
popa
and
sub
inc
dec
jg
add
rcl
ret
and
pop
scas
dec
incb
pop
xor
pusha
add
popa
leave
pop
lods
push
popa
out
push
inc
mov
pop
fisttpll
cmc
xchg
mov
mov
inc
inc
outsb
ss
push
sahf
rol
pushf
cmpsl
inc
cltd
inc
addr16
fildll
inc
add
test
test
mov
cmpsb
xchg
inc
add
add
sbb
and
mov
lea
mov
xchg
es
add
callw
add
mov
add
mov
repnz
mov
push
jl
add
add
mov
daa
rcll
adc
mov
ret
stc
sbb
cmp
add
pusha
add
imul
and
push
xchg
in
cwtl
addr16
dec
fwait
inc
adc
mov
push
and
mov
mov
rorl
mov
mov
xchg
shll
decb
test
gs
in
or
cld
fbstp
mov
xchg
mov
clc
movsb
cmp
pop
mov
jns
loop
mov
std
xchg
inc
fbstp
adc
push
int
das
clc
push
mov
enter
cmp
fiaddl
add
mov
add
mov
add
in
and
add
cmpsl
mov
mov
js
pop
imul
jns
add
mov
add
dec
sbb
mov
mov
xchg
sti
and
dec
dec
mov
inc
pop
or
add
cmovb
mov
rolb
test
stc
and
mov
addb
lds
push
xchg
mov
mov
add
pop
add
call
mov
mov
mov
rcrl
mov
pop
iret
and
icebp
inc
dec
or
shll
mov
add
sbb
mov
in
mov
jp
fsts
mov
iret
jno
jg
ficoml
mov
bound
mov
add
arpl
sub
add
in
jg
mov
sbb
cmc
cmpsl
adc
mov
mov
mov
jnp
add
mov
add
mov
rolb
nop
add
into
pop
pop
sbb
xchg
dec
mov
add
and
icebp
outsb
fnop
add
cmp
mov
ret
frstor
add
js
dec
mov
mov
fnstenv
mov
pushf
std
out
test
mov
mov
pop
test
push
lahf
mov
ret
shl
sbb
int
pop
cmp
push
cs
repnz
bound
mov
icebp
inc
jp
dec
stos
aad
cmp
and
xchg
fwait
sub
pop
sbb
mov
imul
mov
jg
add
in
lcall
bound
mov
dec
in
add
adc
mov
inc
mov
push
mov
jecxz
add
int
loop
mov
mov
add
mov
add
adc
add
pop
jne
out
arpl
xchg
test
inc
pop
sahf
xchg
mov
out
add
test
jb
mov
aaa
jns
mov
cli
fsubrl
pop
pop
cmpsl
in
icebp
cmp
fisubl
add
push
scas
xchg
mov
mov
mov
add
sbb
std
mov
adc
mov
mov
punpckhdq
cld
mov
mov
repz
test
xchg
add
jp
int
enter
sub
add
sbb
pop
jns
cs
push
decl
jl
inc
cmp
mov
jmp
mov
add
jg
cli
imul
mov
imul
add
xchg
ret
pop
icebp
lods
xor
fcompl
enter
sbb
add
test
inc
icebp
ret
inc
fsub
add
aad
xor
dec
and
addb
cs
jle
call
add
je
mov
cmp
add
xor
mov
movsl
lds
sub
push
xchg
add
out
and
sub
leave
jmp
lods
and
push
dec
aad
test
add
sub
sub
xchg
or
psrlq
in
add
sub
mov
adc
mov
stos
mov
addb
and
mov
jns
fnsave
add
pop
cmpsb
je
adc
mov
mov
add
mov
addb
loope
cmp
jmp
popa
jno
xor
cmp
out
dec
pop
and
mov
repnz
sbb
lock
add
mov
add
mov
push
add
addb
jo
mov
add
test
xor
repz
mov
pop
jo
mov
add
add
sar
or
add
ret
imul
sbb
sub
and
inc
add
sbb
nop
add
add
cmpsb
push
movsl
sbb
xor
mov
sub
mov
xchg
mov
mov
arpl
cltd
bound
mov
add
or
add
das
mov
mov
iret
loop
mov
andl
clc
testl
stos
pop
je
leave
xchg
lahf
add
mov
add
pop
cli
dec
mov
test
stos
ret
jl
loopne
mov
dec
inc
add
add
lods
cmp
sub
mov
add
cmc
mov
sub
or
add
adc
rolb
mov
movsl
stos
popa
adc
mov
and
mov
mov
push
fadd
dec
push
add
push
push
add
lods
data16
mov
xchg
insb
mov
jecxz
in
add
outsl
push
mov
mov
mov
pop
mov
mov
pushf
mov
xor
loope
or
mov
rolb
mov
imul
mov
xor
jo
mov
lods
xchg
or
sub
repnz
ret
jb
mov
add
cmpsl
push
add
mov
ja
xchg
insb
std
sub
xorl
mov
mov
es
sbb
jg
or
nop
add
mov
jo
mov
call
sub
repnz
sbb
movsl
mov
mov
or
or
push
add
adc
leave
fstps
add
stos
lret
mov
sbb
xor
mov
add
dec
mov
insl
pop
xor
mov
add
mov
je
inc
add
cld
loope
les
add
add
lret
push
mov
mov
add
dec
outsl
push
or
dec
sbb
or
lahf
xlat
dec
jg
divl
inc
lret
push
les
mov
sbb
mov
clc
add
mov
lret
inc
movsb
or
mov
jno
jae
pop
jo
mov
test
je
in
xor
mov
in
mov
mov
icebp
repnz
add
add
mov
mov
in
sbb
por
iret
inc
jl
add
mov
xchg
pop
incb
jno
jns
in
add
pop
imul
and
mov
inc
out
addb
dec
inc
add
push
pop
mov
dec
sahf
les
pop
ret
push
xlat
push
pop
ljmp
inc
bound
mov
dec
inc
add
lock
pop
ret
leave
jae
adc
mov
insl
push
inc
aam
adc
mov
xchg
add
ret
call
cld
enter
pop
out
test
cli
push
ss
dec
sub
adc
mov
inc
dec
pop
dec
cmp
dec
aam
aas
or
xchg
xchg
add
std
jbe
pop
idivb
pop
jb
mov
das
push
pop
xchg
add
lods
sub
fsts
mov
cmp
mov
repnz
and
lock
pop
hlt
sub
dec
scas
cmpl
test
notb
ret
out
lock
push
mov
inc
add
repz
clc
sub
rolb
sbb
leave
sub
pushf
mov
aad
push
data16
das
xchg
sub
add
add
ja
cmc
adc
fisubrs
xor
stos
mov
repz
xchg
inc
sub
lea
add
fmull
ret
rcll
mov
rolb
mov
xchg
cs
add
add
mov
add
inc
add
in
inc
add
ffree
push
mov
mov
mov
das
aad
add
dec
lret
add
mov
das
roll
mov
mov
add
or
add
push
pop
or
sbb
into
xchg
add
xchg
cmpsl
clc
mov
adc
jecxz
adc
add
repnz
add
mov
push
mov
rolb
mov
add
in
xchg
mov
push
xor
mov
mov
and
push
fisttpll
jp
stc
shll
add
xchg
inc
push
leave
imul
mov
cmpsl
or
dec
insb
mov
add
xchg
xchg
push
xorl
mov
aam
jle
sbb
bound
mov
ljmp
push
stos
xchg
add
ret
mov
mov
add
mov
movsl
icebp
mov
stos
mov
and
mov
ret
sbb
or
cmp
rolb
mov
repnz
jo
mov
cwtl
repnz
xor
mov
aad
mov
je
std
fcmovnbe
inc
mov
and
add
pop
inc
pop
lods
inc
and
mov
and
mov
mov
mov
mov
shrl
add
mov
enter
pop
jmp
fdiv
mov
testl
adc
loop
mov
lret
insb
arpl
and
cli
pop
adc
sub
xor
mov
fidivrl
cmc
repz
xor
test
xchg
mov
mov
mov
adc
dec
test
mov
jmp
jg
ja
mov
jo
mov
cmp
jbe
mov
mov
mov
xchg
inc
mov
mov
add
dec
rolb
xchg
add
jg
roll
pop
fisubrl
inc
xchg
add
xor
xor
mov
insl
mov
jae
xlat
mov
addb
ds
add
sub
add
push
pop
pop
ja
cld
push
xor
xlat
int3
jb
mov
leave
jecxz
int
add
mov
leave
test
dec
movsb
stos
lods
or
xor
aad
add
mov
xor
mov
sub
mov
das
pop
lea
mov
add
add
dec
imul
test
test
imul
mov
inc
jnp
cli
pop
cmp
cld
cmp
jnp
add
mov
bound
mov
add
cwtl
aam
or
call
or
add
add
mov
int
imul
mov
push
add
xchg
dec
idivb
push
and
mov
test
rolb
mov
hlt
adc
push
mov
stos
adc
mov
jns
dec
xchg
add
aam
mov
repnz
movsl
mov
mov
dec
sbb
cmpsb
pop
add
addl
add
scas
ds
repnz
outsl
shll
add
mov
xor
adc
rolb
sti
in
repnz
inc
xchg
add
xchg
lea
das
int3
push
scas
insb
cmpsb
adc
mov
mov
out
call
cmp
scas
movsb
mov
idiv
jmp
pop
adc
mov
mov
scas
nop
add
imul
icebp
popf
cli
mov
add
mov
push
add
pop
test
jp
push
pop
xlat
sti
fstps
decb
add
mov
fadds
mov
out
scas
and
pop
sub
mov
xor
mov
mov
jbe
jmp
push
mov
xchg
adc
add
adc
mov
mov
mov
jae
enter
inc
push
lock
das
divb
movsl
das
dec
mov
add
es
jecxz
fdivs
or
jnp
loop
mov
mov
add
repnz
in
fwait
sti
leave
rolb
mov
jmp
cld
mov
add
dec
or
ljmp
lret
and
bound
mov
dec
addb
sub
add
and
mov
add
mov
mov
pop
inc
and
mov
add
jle
inc
xchg
repz
jecxz
cltd
rolb
mov
add
add
push
outsl
repnz
dec
int
aad
dec
daa
inc
add
iret
push
dec
jp
stos
scas
push
andl
addr16
xchg
das
movsb
lcall
inc
mov
jg
mov
jle
das
mov
js
xor
mov
test
and
or
idivb
add
fstpl
mov
mov
fmul
lds
fimuls
loop
mov
mov
cmp
adc
mov
mov
mov
sbb
xchg
xor
mov
dec
push
add
sub
mov
mov
mov
bound
mov
hlt
xor
mov
mov
mov
cmp
nop
add
add
mov
mov
xchg
mov
lret
mov
js
dec
insl
adc
sub
xchg
mov
lret
fwait
mov
xor
dec
jae
dec
push
push
sub
maxps
xchg
fdivp
add
add
add
stos
xchg
xor
mov
mov
or
add
ret
fstl
add
scas
roll
or
mov
add
addl
in
push
fistl
pop
and
sbb
repnz
jmp
add
push
pop
jecxz
jno
cmpsl
mov
push
jge
dec
out
das
fwait
rolb
mov
int3
mov
mov
data16
pop
xchg
add
add
mov
add
and
mov
or
push
add
sahf
push
add
dec
repnz
xor
popa
repz
add
dec
rolb
mov
add
stc
cmp
test
pusha
add
mov
xchg
jl
cld
leave
jbe
movsb
stos
xchg
mov
mov
mov
addb
mov
adcl
das
sbb
push
movsl
in
jno
add
mov
mov
pop
stos
xchg
lret
pushf
xlat
cmp
pop
sbb
rolb
mov
add
js
add
mov
dec
adc
add
push
add
add
adc
dec
jae
xor
dec
iret
pusha
add
jne
pop
pop
dec
xchg
adc
inc
inc
add
fisttps
pop
cli
loop
mov
sbb
rcrl
fdivp
add
sub
movsb
lock
dec
scas
lds
add
mov
push
jo
mov
stc
andl
sbb
push
lods
rcrl
xchg
adc
rorl
jle
add
add
push
sbb
mov
mov
addb
pusha
add
add
mov
cmp
adc
xor
cmp
loopne
mov
mov
sbb
mov
je
add
les
add
sbb
mov
outsl
inc
xor
clc
jno
imul
aad
adc
mov
test
add
fbld
mov
add
jl
lea
sub
imul
fistpll
xchg
mov
xchg
fbld
add
add
adc
pop
stos
mov
andl
jo
mov
sti
pop
push
addb
pop
loopne
mov
mov
notl
rorl
cld
pop
and
gs
loop
mov
test
lcall
out
jl
cmp
jae
mov
xlat
adc
int
shll
mov
mov
lahf
mov
mov
mov
and
jb
mov
add
push
lock
jmp
cmp
ds
test
add
jae
cmc
cmp
in
cs
dec
cwtl
pusha
add
fnstcw
addb
cmp
ljmp
call
fldenv
or
mov
lods
adc
mov
mov
add
mov
and
mov
mov
adc
mov
push
test
pop
jl
sub
test
fwait
aam
cwtl
in
mov
mov
lea
cwtl
rcll
xchg
ja
xor
lret
int3
jo
mov
popa
adc
mov
call
incl
add
xorl
add
ds
add
adc
mov
mov
mov
leave
sbb
jg
add
aaa
sahf
xchg
mov
add
mov
fistpl
les
push
mov
add
xchg
rorl
lahf
ror
iret
push
pop
addb
lahf
call
mov
pushf
test
sub
xor
addb
test
js
stc
mov
add
int3
and
jbe
add
xor
sub
push
add
cmpsb
imul
fs
js
and
mov
fildll
dec
dec
addr16
insb
in
jp
sub
out
add
xchg
les
js
mov
fldenv
out
insb
pop
mov
add
arpl
pop
jbe
mov
mull
push
mov
inc
in
add
test
mov
mov
mov
push
in
pop
xor
je
testl
mov
in
rolb
mov
add
sub
icebp
cld
mov
pop
mov
mov
add
fstp
mov
add
arpl
not
mov
inc
push
in
or
imul
adc
mov
inc
pop
jns
or
xor
mov
push
dec
and
hlt
rorl
push
stos
xchg
jmp
scas
scas
jne
cmc
pop
fistpll
icebp
movd
test
add
mov
shr
daa
adc
mov
jno
lcall
pop
neg
out
js
add
pop
xlat
dec
in
mov
lahf
sub
add
adc
jae
dec
ss
mov
add
iret
inc
mov
pop
push
sbb
enter
ljmp
rcll
pop
daa
xor
mov
add
outsl
fstl
mov
pop
jnp
popa
sub
add
or
xor
mov
lds
jp
add
and
into
addb
lods
xchg
divl
jmp
add
add
dec
dec
cld
jns
add
lea
notl
cmp
add
dec
push
inc
add
or
cltd
daa
outsl
dec
xchg
out
rcll
cmp
mov
push
enter
mov
or
add
xchg
ss
mov
in
mov
std
xor
mov
leave
push
pop
call
ficompl
xchg
add
and
mov
mov
mov
popa
sbb
sbb
sub
adc
mov
xor
jecxz
jl
add
mov
mov
jmp
adc
mov
repnz
call
dec
stos
xchg
jo
mov
leave
int3
push
add
fldenv
mov
mov
xorl
mov
sub
mov
fsubrl
mov
mov
aaa
rolb
mov
test
add
pop
push
cltd
mov
mov
inc
test
nop
add
addb
cmp
pusha
add
dec
cmp
je
sbb
clc
adc
daa
sahf
and
into
movsl
xor
mov
add
fsubr
in
outsl
or
ficoml
mov
add
stc
rolb
mov
test
stos
daa
ss
lcall
add
insb
mov
std
fwait
cmpsb
cmp
lock
mov
insb
cld
sub
inc
add
notl
mov
mov
pop
lret
inc
mov
push
int3
or
xchg
loop
mov
cmpl
add
mov
cmpsb
inc
add
test
call
aad
das
notl
adc
mov
add
scas
push
dec
cli
mov
pop
pop
add
iret
pop
or
mov
mov
nop
add
or
mov
xor
mov
pop
pop
inc
loope
xor
clc
mov
insl
in
sarl
and
jge
sbb
mov
cmpsl
mov
jnp
add
xchg
lds
sbb
adc
mov
mov
mov
mov
negb
xchg
mov
bound
mov
mov
movsl
and
mov
add
add
add
mov
xlat
adc
jle
cmp
mov
data16
mov
stos
mov
jle
les
lahf
shl
xchg
xchg
mov
int3
push
cmp
mov
xchg
push
ljmp
sub
dec
xor
out
test
push
dec
cmc
mov
add
mov
out
and
add
dec
lret
jbe
out
push
call
fstpl
xor
popa
loope
mov
mov
pop
stc
mov
into
jae
scas
jmp
je
aaa
test
loope
in
addb
cs
das
aas
leave
lods
mov
or
pop
lret
fdivrl
dec
pop
mov
in
inc
add
popf
cmp
sbb
addr16
rcll
adc
mov
je
xor
mov
add
aam
jg
add
add
mov
add
fldcw
gs
add
aam
ds
mov
scas
movsl
mov
xor
mov
aaa
es
cli
loop
mov
or
add
mov
add
sbb
add
mov
jns
aad
inc
add
pop
incb
outsb
into
adc
scas
jo
mov
iret
mov
lods
cwtl
add
jns
add
add
sbb
lods
cmpsl
push
jne
add
inc
add
dec
orl
into
mov
into
jmp
lods
loopne
mov
ss
pop
pop
int
push
scas
add
bound
mov
int3
jg
lcall
mov
into
adc
cmpsb
das
rep
jg
cmpsl
mov
mov
stc
sbb
add
mov
mov
mov
mov
add
mov
mov
pop
clc
add
mov
aas
or
or
jbe
add
arpl
pop
adc
cmp
pop
cmovae
aaa
stos
gs
testb
add
lods
scas
roll
or
add
mov
gs
xor
add
lods
lret
mov
in
jno
push
sub
push
cwtl
push
ficoms
mov
add
mov
pop
imul
bound
mov
mov
out
idiv
mov
add
mov
insb
pop
push
mov
add
pop
pop
inc
rcl
sub
aam
add
cmpsl
xor
mov
add
addb
jns
add
mov
leave
pop
jle
mov
or
mov
cmp
dec
sbb
dec
dec
jg
add
sub
int3
lcall
pop
or
add
add
loop
mov
push
notb
dec
dec
notb
add
mov
dec
ds
aaa
lods
xchg
out
add
mov
add
add
shrl
sub
add
adc
mov
pop
jmp
pop
mov
and
mov
enter
push
cld
dec
ja
dec
jae
daa
fcoml
mov
scas
xor
add
or
adc
mov
push
ret
dec
xor
mov
mov
push
in
aam
cltd
inc
add
jne
add
inc
mov
mov
xchg
test
pop
push
popa
cmc
push
inc
add
pop
pop
fstps
lods
mov
jecxz
inc
pop
push
jle
mov
mov
ret
push
pop
scas
test
add
xchg
add
cmc
mov
inc
pop
cmp
fsts
add
mov
push
cld
adc
add
into
push
rorl
add
clc
je
push
jl
add
or
fs
adc
decb
fists
fstpl
mov
lcall
mov
addb
mov
add
sub
mov
mov
xchg
add
ret
adc
mov
adc
mov
fstps
imul
pop
push
rolb
mov
mov
bound
mov
out
pop
cmpsb
lahf
xchg
mov
push
call
mov
fdivp
addb
sub
add
imul
sub
pop
cmp
adc
mov
pop
adc
mov
add
cmp
cmpsl
or
mov
pop
adc
mov
mov
add
in
cwtl
sbb
jae
ja
loope
jmp
adc
add
jecxz
add
jl
mov
xorl
push
in
cmp
js
jg
mov
inc
dec
cs
mov
rolb
adc
xlat
fyl2x
jb
mov
lcall
and
jg
cmp
rolb
mov
lahf
mov
and
lahf
in
jb
mov
add
add
iret
add
ss
or
add
add
sbb
clc
push
imul
std
adc
mov
mov
pop
fs
inc
in
cmp
mov
subl
add
add
add
repz
xchg
add
and
add
iret
xchg
in
jne
in
loop
mov
scas
push
rolb
mov
xor
mov
pop
pop
in
adc
mov
es
or
mov
add
jo
mov
inc
add
add
add
push
sbb
fmul
test
xor
pop
pop
in
gs
out
sub
icebp
stos
repz
aad
dec
idivl
ffree
daa
bound
mov
sbb
scas
mov
repnz
mov
add
cmpsl
rolb
mov
add
add
mov
push
xor
call
aas
dec
fcomp
xor
testl
add
add
mov
dec
push
sub
add
mov
lret
leave
dec
fdivrl
into
cmp
add
sbb
nop
add
mov
imul
xchg
add
add
loop
mov
add
mov
mov
std
dec
push
adc
cmp
out
ds
test
mov
mov
mov
add
lea
add
lods
adc
add
or
std
out
push
bound
mov
xor
scas
fisubl
mov
imul
mov
mov
mov
pop
cmpsl
add
add
rolb
mov
cmpsb
out
xchg
ret
cltd
repnz
clc
adc
mov
out
call
fildl
sbb
int3
ret
shrl
or
or
daa
sbb
mov
add
and
mov
stos
xchg
xchg
rcrl
inc
mov
pop
push
add
inc
add
fidivl
mov
pop
adc
mov
pop
adc
mov
mov
es
mov
pop
xchg
daa
test
sub
shll
add
push
jmp
push
rolb
mov
jne
in
mov
push
scas
sbb
pop
xchg
out
add
and
mov
add
jo
mov
mov
lods
sbb
cld
or
add
insb
mov
ljmp
add
test
je
add
mov
filds
mov
xor
mov
mov
push
mov
adc
out
and
orl
xor
add
xchg
negb
lcall
inc
imul
add
jg
dec
sarl
add
lcall
add
sbb
add
mov
add
jl
popf
cmc
push
in
clc
popa
push
jns
add
push
push
add
aad
movsl
fimuls
nop
add
mov
pop
test
jecxz
fldl
mov
in
mov
add
test
scas
and
insl
fsubs
lcall
arpl
add
loope
loope
adc
mov
sub
aad
inc
imulb
aam
add
loope
add
inc
mov
mov
inc
add
jp
pop
pop
popa
pcmpgtb
add
les
add
daa
mov
add
mov
add
jge
mov
aaa
repnz
pop
pop
inc
add
sbb
add
mov
into
sbb
rolb
int
add
mov
add
mov
or
jb
mov
jmp
mov
sbb
xor
mov
cld
mov
xchg
sub
dec
int3
inc
jne
imul
mov
cmp
add
mov
mov
add
test
mov
aad
rolb
mov
fnstenv
jge
lret
sbb
add
push
xchg
ja
enter
lfs
rolb
mov
add
aas
add
adc
mov
mov
mov
pusha
add
mov
sub
les
add
xor
mov
inc
add
xor
bound
mov
jge
inc
xor
jbe
pop
or
jo
mov
sbb
cmc
mov
mov
rorl
loopne
mov
xchg
jo
mov
into
test
ljmp
jo
mov
sub
int
sub
sarl
pop
loope
out
out
mov
xchg
test
mov
imul
nop
add
mov
add
sub
mov
add
cs
leave
dec
shrl
hlt
fdiv
add
mov
add
adc
mov
shr
xchg
loope
add
cmp
in
cmp
sub
gs
xchg
or
stos
dec
fcomps
mov
std
mov
add
add
dec
cmp
jle
inc
rcll
jne
push
xchg
jo
mov
push
fdivrs
push
sbb
mov
mov
add
pop
xor
mov
or
mov
repz
mov
adc
push
cld
jns
scas
scas
jbe
fisubs
ds
mov
cmp
shrl
cld
iret
out
jnp
in
adc
mov
cmp
xor
push
aas
cmp
mov
xchg
cmp
sbb
aaa
into
inc
jmp
std
mov
stos
popf
mov
cltd
cmp
jmp
lahf
pop
nop
add
enter
mov
cmp
addr16
ja
inc
pop
inc
addl
add
pop
push
rolb
jne
push
add
cmpsl
xchg
scas
mov
add
mov
or
sbb
xchg
xchg
dec
pop
fadds
push
mov
pop
push
sbb
mov
leave
pop
dec
dec
mov
es
fucom
in
mov
jecxz
add
addb
xchg
jl
mov
nop
add
rolb
and
mov
mov
ds
xor
mov
add
sbb
es
push
push
mov
mov
add
insl
fists
movsb
cs
xlat
lahf
fs
sbb
add
jl
dec
mov
aaa
test
lock
inc
add
out
sbb
mov
mov
leave
aam
test
inc
add
mov
or
insl
push
test
jo
mov
dec
es
lret
cmpsl
cs
fbld
xchg
push
inc
out
inc
push
in
test
adc
mov
add
lock
int3
ficoms
shl
sbb
adc
pushf
and
scas
daa
ljmp
leave
sbb
xor
add
pop
cltd
fs
rorl
add
loope
xor
pop
or
test
cmp
add
mov
sbb
cmp
add
insb
sbb
stos
loopne
mov
add
lret
jne
dec
mov
shrl
imul
mov
cli
jbe
insb
mov
ret
add
pop
mov
sub
jmp
scas
sbb
cli
rolb
mov
xchg
sbb
das
cmp
aad
je
lods
cmp
add
add
push
adc
inc
inc
imul
jne
lea
ja
and
mov
sub
pop
rolb
adc
adc
movsl
xchg
test
mov
out
xchg
test
popf
es
add
mov
xor
mov
inc
add
add
mov
imul
mov
rolb
push
xor
mov
lock
add
mov
ds
jg
dec
fstps
adc
ffreep
dec
jbe
mov
push
dec
je
cmp
mov
sbb
push
jle
dec
xor
scas
int3
enter
int
add
sbb
xchg
aam
popf
sub
sbb
lret
push
das
adc
push
cs
dec
mov
movsb
or
inc
leave
out
pushf
aam
mov
pop
shll
add
push
or
add
mov
outsl
push
test
popa
mov
jb
mov
pop
and
mov
cld
mov
and
and
je
cmp
mov
nop
add
sti
lahf
or
clc
daa
mov
add
stc
dec
xchg
mov
add
sbb
pop
sub
cmp
xchg
test
add
in
jns
das
mov
faddl
jmp
dec
gs
rolb
mov
ja
shll
test
adc
jmp
add
cmpl
lahf
xor
mov
mov
dec
jns
andl
add
mov
ljmp
add
dec
sub
add
pop
or
jl
loope
add
add
push
rolb
mov
rolb
out
js
xchg
or
repnz
sbb
lods
mov
mov
push
pusha
add
xlat
insl
and
int
mov
mov
push
add
test
mov
mov
rcrl
rolb
mov
aas
fdivrp
out
mov
mov
mov
add
adc
out
mov
mov
or
mov
icebp
jg
add
out
cld
fcoml
andl
int
sbb
cltd
test
rolb
mov
imul
mov
sub
add
mov
sbb
pushf
mov
ficoml
addb
addb
dec
jle
in
add
cli
loope
jp
dec
addb
add
mov
and
mov
pop
xchg
push
mov
add
mov
jne
push
cmp
add
into
popf
mov
xor
mov
add
dec
jmp
inc
push
inc
add
mov
push
add
pusha
add
add
mov
cltd
test
add
cmp
add
xchg
fstpt
pusha
add
pop
cmpsl
rolb
mov
mov
xchg
jecxz
mov
mov
mov
cwtl
jnp
mov
aad
fcmove
mov
mov
sub
pop
adc
mov
into
mov
add
or
adcl
add
add
stc
test
lahf
insb
rcrl
popf
and
gs
out
sbb
sbbl
or
add
mov
sbb
add
mov
xor
push
cmp
stos
fdivrs
xchg
sub
or
cs
pushf
adc
stos
xchg
jnp
add
rolb
ret
push
xlat
fildl
pop
ljmp
frstor
lea
and
es
push
add
mov
and
sti
iret
aam
mov
test
add
xchg
xor
call
mov
das
adc
mov
add
add
add
jmp
jne
jae
cmc
dec
xchg
aas
and
rolb
mov
mov
gs
lock
pop
enter
jne
rolb
js
stos
int3
xor
xchg
add
add
hlt
add
mov
cmpsb
mov
inc
add
mov
add
add
add
and
jbe
jnp
jecxz
into
into
cmp
mov
mov
push
inc
add
cmpsb
fwait
pop
adc
out
aad
sbb
mov
iret
mov
test
dec
subl
mov
in
xchg
xchg
jl
mov
ret
lock
jae
mov
inc
add
jne
add
add
sub
mov
iret
fidivl
mov
and
push
insb
sti
mov
mov
add
mov
imul
popa
dec
mov
int3
xor
add
ffree
add
cmp
jecxz
fwait
mov
sarw
xchg
dec
mov
mov
shr
adc
movsb
imulb
adc
mov
sub
mov
push
insl
sub
mov
loop
mov
add
xchg
xor
mov
and
jo
mov
mov
add
add
js
ds
push
jmp
stos
or
std
xlat
aam
add
pop
rolb
mov
loope
add
push
adc
pop
push
dec
push
sbb
pop
jns
ror
mov
aaa
inc
add
test
push
jp
paddusb
push
mov
sub
add
add
imul
pop
push
mov
in
adc
mov
outsb
xchg
ficompl
imul
add
push
sub
add
sub
es
and
dec
test
scas
inc
sub
mov
mov
mov
pop
mov
mov
loop
mov
mov
mov
sub
add
lret
xor
mov
adc
scas
adc
mov
add
mov
xchg
in
stc
mov
js
in
add
inc
add
or
pop
or
jg
rolb
lret
xchg
lods
dec
cwtl
dec
pop
xchg
out
add
shll
or
mov
pop
int
push
es
cmpsb
dec
jno
push
in
pop
mov
out
add
mov
cltd
daa
stos
imul
mov
mov
mov
lret
pop
ljmp
mov
mov
negb
mov
cmp
mov
sbb
sahf
rolb
mov
cld
xor
xchg
mov
cmp
arpl
mov
add
call
xchg
roll
out
fdivl
add
add
push
dec
and
mov
ss
cwtl
or
add
and
fs
xor
mov
mov
jno
lds
inc
sbb
scas
pop
cmp
jae
adc
xchg
mov
stos
xchg
cmpsl
push
jl
add
cmp
and
mov
jmp
enter
adc
mov
pop
stos
fdivrs
lock
xchg
xor
jb
mov
add
jno
aam
orl
add
scas
ss
or
inc
or
or
addb
outsl
or
pop
scas
lock
sbb
add
or
sbb
std
test
orl
data16
nop
add
add
aaa
in
repz
sub
add
rolb
mov
sbbl
mov
add
mov
addb
cmp
cmp
fbld
xchg
xchg
mov
fdivrs
cmc
dec
shr
hlt
addb
rcll
stc
xor
mov
fcomps
stos
inc
add
jg
test
imul
add
mov
movsl
fcmove
arpl
xchg
mov
notl
jbe
insl
lea
das
xor
mov
or
mov
mov
dec
pop
and
xor
mov
inc
pop
sbb
mov
mov
pop
daa
out
pop
dec
sub
fcoml
mov
hlt
pop
or
add
mov
test
push
sahf
aas
aad
mov
jp
add
mov
aam
dec
imul
mov
sahf
pop
repz
rolb
xor
mov
push
xor
add
je
add
add
movsb
push
lods
mov
or
push
xor
mov
hlt
lcall
vmaxsd
stc
ja
push
sbb
mov
pusha
add
ja
mov
fisubl
ficoml
sub
push
mov
add
adc
mov
mov
mov
add
fcoml
mov
jne
jmp
test
ret
fwait
dec
push
enter
xchg
fidivl
int3
mov
push
stc
pop
and
loope
scas
out
add
mov
ds
inc
in
pop
push
and
mov
loope
pop
mov
ss
mov
add
push
dec
clc
fcompl
es
jp
jns
xor
mov
cmp
xchg
jnp
iret
push
cltd
pop
sub
push
add
cmpsl
mov
add
mov
add
add
std
and
out
inc
test
mov
push
add
lret
sbb
xor
add
push
fwait
sub
test
lds
xorl
mov
lret
clc
jl
xlat
frstor
add
add
fnstcw
stos
cmp
mov
mov
add
dec
imul
jle
or
imulb
aad
add
insb
in
cwtl
cltd
sub
pop
add
mov
mov
xchg
xchg
in
repz
in
dec
cmp
add
sbb
and
mov
mov
inc
add
sbb
cltd
test
add
add
adc
add
sbb
faddp
jbe
cmpl
addb
scas
mov
mov
pop
lods
pop
mov
add
xlat
inc
add
add
das
jae
add
cmpl
and
test
dec
cld
xor
mov
xchg
iret
mov
mov
xor
jmp
rolb
mov
mov
mov
adc
mov
mov
aam
add
leave
mov
cmpsb
mov
add
mov
cmp
add
inc
sub
add
test
xchg
mov
std
rolb
jae,pn
add
mov
sub
add
mov
sbb
add
mov
xor
in
add
push
movsb
cmpsl
and
mov
or
ret
dec
pop
arpl
test
add
fs
scas
in
adc
mov
add
xchg
sub
jge
inc
pop
imul
add
fwait
mov
add
cmp
adc
test
sub
adc
add
aad
fidivrs
mov
mov
mov
mov
inc
pusha
add
add
es
xor
mov
imul
mov
lods
flds
int
fsubrs
push
clc
xchg
add
cmpsb
lcall
add
xchg
dec
add
dec
sbb
or
movb
int3
and
jg
cmp
add
mov
ret
in
loop
mov
test
mov
fisttpll
daa
inc
addb
push
clc
leave
mov
stc
cmpsb
std
sub
in
lcall
and
add
add
hlt
lahf
imul
call
mov
or
sbb
in
or
mov
xor
aas
icebp
repz
mov
sahf
loop
mov
pop
test
cmpl
jns
je
in
cmp
add
xchg
adc
add
pop
dec
clc
push
add
cmp
pop
ljmp
jp
lea
mov
mov
ljmp
loope
mov
fldcw
xchg
insb
push
mov
inc
rolb
mov
inc
add
decw
push
xchg
adc
mov
add
add
lret
add
out
add
add
add
out
imul
test
das
jo
mov
mov
mov
pop
neg
and
loop
mov
add
add
aam
add
add
arpl
jle
push
fstpt
testl
leave
adc
insb
in
pusha
add
scas
jg
fwait
pop
hlt
add
mov
mov
push
cmpsl
insl
jg
jno
add
mov
and
push
add
add
mov
jne
pusha
add
add
scas
dec
xchg
xor
inc
add
rcrl
mov
into
enter
xchg
add
pop
ret
dec
addb
push
mov
mov
jno
dec
sbb
les
inc
popa
jmp
xor
in
inc
add
leave
xchg
and
mov
fdivs
xor
add
mov
add
mov
xchg
movsb
cmp
cmp
mov
in
out
ffreep
push
add
fbld
xchg
mov
inc
mov
mov
mov
jp
dec
xor
mov
add
jp
add
mov
pop
popa
mov
add
add
mov
fadds
mov
or
push
add
mov
adc
mov
add
push
cmp
push
inc
add
mov
and
test
out
aad
mov
dec
cmp
mov
bound
mov
fistpll
lods
jp
test
fisttps
jmp
ss
cmp
add
sub
in
imul
fdivrl
out
popa
pusha
add
cs
stos
push
ljmp
subl
out
ret
lods
inc
mov
divps
mov
push
cwtl
fcoml
mov
les
testb
mov
sub
inc
imul
lret
inc
sub
adc
mov
test
cmpsl
or
jmp
mov
int
scas
xlat
rolb
mov
cmp
addb
push
or
ror
jbe
jecxz
out
or
loopew
ret
ss
cwtl
test
add
dec
arpl
add
add
aaa
test
sub
mov
mov
add
push
xor
mov
mov
adc
mov
xchg
mov
iret
idivb
fstpl
mov
mov
or
movsb
mov
cltd
sub
cmc
dec
dec
sub
mov
add
imul
daa
inc
lahf
lret
std
aam
dec
dec
mov
push
add
cmp
lds
jns
add
jb
mov
arpl
mov
addb
imul
cwtl
mov
inc
jle
xor
imul
inc
push
add
addb
jnp
lds
adc
or
stc
sbb
mov
mov
jl
cmp
push
sub
mov
mov
inc
xor
rcll
cli
insl
leave
sbb
shll
xchg
outsb
jno
push
loop
mov
testb
mov
mov
hlt
xchg
add
adc
dec
in
lds
lds
lret
ja
add
rolb
mov
sti
out
and
push
inc
inc
ss
push
add
imul
mov
jp
add
jp
stos
jnp
outsl
mov
pop
out
out
pop
mov
cmp
mov
and
pop
nop
add
popf
iret
push
popl
mov
pop
push
pop
add
mov
add
lahf
cmp
push
jne
or
mov
cmp
in
xchg
xor
mov
add
dec
mov
mov
jae
xchg
cmpsb
bound
mov
add
mov
adc
jnp
add
popa
rcl
push
add
outsl
fucomi
and
mov
add
mov
jge
cmp
add
adcl
scas
das
xchg
in
or
fldl
add
xor
lods
add
mov
add
xchg
stos
push
aad
fists
add
push
adc
xor
mov
add
fidivl
rolb
mov
or
addb
mov
xor
out
dec
mov
bound
mov
negb
adc
mov
in
xor
nop
add
scas
and
mov
add
lret
or
add
outsl
fsubrp
push
sub
ss
mov
stc
int3
or
pusha
add
xchg
adcl
sub
call
mov
arpl
pop
dec
test
jbe
sahf
xor
test
add
lret
aaa
popa
dec
xor
mov
in
mov
out
in
out
add
ja
mov
lcall
aaa
sbb
pop
outsl
push
push
add
add
mov
es
flds
add
fcoms
add
cmp
int3
pop
cld
push
mov
add
ds
inc
add
fwait
rcrl
pushf
sarl
rcrl
push
lods
ss
loopne
mov
jl
add
mov
add
add
dec
inc
sbb
les
fnstenv
cltd
scas
mov
aas
cmpsl
push
sub
pop
xlat
fsubrs
dec
rolb
mov
pushf
cmp
in
rolb
mov
mov
mov
ljmp
fistpl
mov
xor
adc
add
imul
jp
hlt
out
xchg
scas
lret
add
push
sahf
outsl
push
pop
iret
loop
mov
mov
into
int
mov
sbb
push
addb
jmp
loopne
mov
fisubl
mov
mov
mov
mov
add
sub
sbb
ret
lea
loop
mov
lret
divps
mov
xor
xor
mov
xor
mov
shrl
add
sbb
daa
lahf
scas
xchg
mov
xor
mov
fstps
mov
add
mov
inc
rolb
mov
add
rolb
je
int
test
add
mov
rolb
mov
cmp
mov
lods
mov
mov
mov
stc
addb
mov
mov
loopne
mov
add
shrl
fildll
pop
je
jnp
pop
mov
call
test
mov
pop
jecxz
add
fstl
add
mov
add
ljmp
xchg
push
push
test
or
pop
adc
mov
cmpsb
jbe
sub
inc
imul
movsl
dec
sub
clc
add
add
push
add
mov
in
add
sub
xchg
push
rolb
mov
push
fnop
add
mov
mov
add
pop
dec
std
data16
shll
sbb
push
addb
adc
pop
fs
mov
mov
cmc
sub
add
aas
testl
mov
aas
fcomp
addb
out
fnstenv
push
cmp
imul
mov
sbb
in
pinsrw
jg
jl
pusha
add
add
dec
mov
ja
adc
mov
data16
inc
adc
mov
add
sbb
bound
mov
mov
mov
xchg
cli
lret
push
jbe
cli
je
add
fnstsw
in
jge
add
xchg
add
pcmpeqd
addl
or
add
or
pusha
add
dec
arpl
cmp
add
sbb
pop
sbb
in
and
adc
xchg
sahf
addl
bound
mov
stos
cmp
mov
inc
call
push
xor
or
add
mov
mov
pop
inc
dec
faddl
push
clc
sbb
add
mov
or
add
div
pop
lret
sub
push
in
clc
es
fnstsw
cmpsb
jmp
pop
cmc
imul
xlat
or
push
add
jo
mov
test
insb
mov
mov
int3
fldl
mov
mov
pop
sub
sbb
add
add
jne
fdiv
push
add
adc
cmp
xor
mov
mov
scas
mov
insl
insl
pop
add
mov
mov
fidivl
mov
in
gs
inc
add
mov
mov
imul
sbbl
cld
and
mov
lods
mov
mov
leave
or
jae
fadd
mov
mov
adc
mov
enter
mov
mov
fldenv
add
addb
icebp
mov
mov
or
add
mov
rolb
sbb
xchg
add
mov
cld
mov
mov
fbld
push
push
out
pop
and
icebp
push
stc
repnz
dec
adcl
lods
sbb
cmpsb
add
adc
sub
push
test
cmp
icebp
inc
mov
add
mov
jae
add
mov
clc
xor
pop
test
cltd
mov
and
stos
jl
or
sbb
add
inc
sub
scas
adc
inc
pop
addb
adc
mov
and
icebp
divl
in
ret
jb
mov
xchg
in
sbb
push
or
mov
bound
mov
mov
cld
in
add
mov
jmp
lahf
push
jns
fbld
xor
bound
mov
sahf
add
xchg
scas
jbe
lea
sub
add
mov
add
xchg
jp
xor
test
aad
pop
pop
in
inc
mov
rcrl
add
lcall
or
mov
mov
shl
inc
sub
fidivs
addb
stc
cmp
loopne
mov
sahf
inc
add
test
add
repz
int3
and
mov
xor
mov
pop
leave
xor
mov
pop
mov
xchg
cli
ret
addr16
cmpsl
rcr
mov
mov
imul
subl
cmp
pop
lret
xchg
mov
test
mov
fcmove
out
pop
mov
or
in
outsb
in
ss
fidivrl
mov
pop
mov
test
add
add
mov
mov
xchg
and
mov
add
int
movsb
sbb
add
aam
mov
push
or
inc
cs
aaa
xchg
xlat
out
sub
fstl
lcall
jl
lods
fsts
addb
jno
pop
lahf
pop
ss
add
xor
add
jne
test
int3
cmp
fs
testl
int3
push
addb
or
cmc
es
xor
mov
testb
xor
cmp
xchg
push
jl
leave
jo
mov
xchg
rep
xchg
add
addr16
add
pop
es
movnti
and
mov
mov
es
mov
pop
sub
mov
ss
xor
out
movsl
out
fsts
cmpl
arpl
xor
mov
mov
jae
mov
push
dec
mov
popa
push
add
lock
mov
push
repnz
lds
xchg
add
arpl
adc
mov
add
add
mov
mov
jl
xor
add
or
sahf
rolb
test
mov
add
and
mov
pusha
add
mov
xorl
bound
mov
aas
lahf
and
in
push
pop
mov
rolb
xor
xchg
push
push
jae
fbstp
add
scas
movsl
jmp
out
movsb
mov
call
jp
push
jo
mov
push
out
adc
mov
scas
inc
add
loope
arpl
or
es
notb
js
sbb
pop
ret
pop
mov
jns
ljmp
sub
imul
mov
mov
mov
mov
add
mov
push
xchg
rolb
ljmp
jecxz
dec
dec
mov
daa
mov
out
ret
xor
or
or
add
lcall
dec
rolb
mov
mov
dec
mov
pop
push
dec
sub
out
or
test
jb
mov
mov
fucomip
ret
testb
mov
jns
mov
js
add
cli
iret
shll
mov
sub
bound
mov
mov
mov
add
movsb
rorl
add
add
call
das
inc
in
rcll
mov
popf
sbb
add
or
adc
mov
xchg
mov
mov
add
clc
mov
mov
mov
or
cmp
inc
and
aad
lds
jb
mov
sub
pusha
add
dec
scas
push
add
and
mov
jns
loopne
mov
div
mov
jl
inc
mov
xor
mov
xchg
sbb
mov
stos
lock
lods
add
add
mov
push
sub
push
imul
mov
into
in
cmp
mov
test
jecxz
xchg
add
xchg
pop
in
dec
imul
sbb
mov
out
add
cmpsl
test
imul
lret
xlat
repz
cmpsl
sbb
iret
mov
lret
jb
mov
xchg
xchg
addb
mov
lcall
push
mov
add
dec
repnz
add
pop
incb
fdivrl
or
sub
add
push
lods
cmpsl
cmpsb
add
mov
test
mov
sub
fdiv
pop
jns
mov
cmpl
mov
mov
sub
and
addb
lock
orl
mov
std
sub
or
mov
jo
mov
xchg
sub
test
lret
into
dec
mov
dec
or
sub
mov
pop
cmp
xchg
adc
add
out
xchg
push
mov
fstpl
lock
dec
cmp
ja
add
lods
jb
mov
add
iret
mov
enter
xor
mov
ds
rolb
mov
out
sbb
mov
mov
stc
icebp
fldcw
and
add
out
add
cmpsl
adc
jle
xchg
fidivrl
xlat
jb
mov
shll
mov
dec
jp
mov
dec
push
xchg
fnsave
cmpsl
repz
int3
dec
xchg
add
mov
mov
mov
subl
rdmsr
add
mov
js
sub
and
test
mov
adc
jle
add
movsb
rolb
xor
mov
ja
push
lods
sbb
pushf
jg
mov
push
insl
mov
mov
jmp
cwtl
fiaddl
mov
pandn
add
push
add
add
add
mov
mov
rorl
sub
or
add
fldenv
add
stos
fimull
push
dec
cmp
xchg
test
in
rolb
mov
icebp
outsl
add
pop
daa
daa
mov
push
rorl
mov
sub
mov
shrl
clc
xlat
jge
rolb
out
test
fstp
aas
sbb
cmp
jne
mov
mov
mov
mov
rolb
mov
push
xchg
in
in
pop
addb
dec
gs
test
push
add
mov
add
and
mov
or
jmp
icebp
xchg
or
sti
stc
scas
hlt
fisubs
je
enter
xor
fs
add
push
iret
rolb
insl
push
aas
xchg
adc
mov
cmp
adc
mov
xchg
jo
mov
pop
cmpsl
in
mov
mov
outsl
pop
fwait
movsl
mov
cmc
cmp
jnp
or
mov
jecxz
insl
scas
dec
pop
or
dec
test
lea
lret
cwtl
mov
jno
add
sbb
mov
cmp
js
dec
ljmp
rolb
mov
push
and
rorl
xchg
aaa
into
test
add
mov
popa
pop
je
aas
jle
sub
ja
xchg
rolb
out
inc
repz
pop
loopne
mov
sbb
outsb
sbb
pop
aaa
mov
test
jmp
mov
aad
int3
jae
inc
in
xlat
fnsave
popa
adc
mov
loope
pop
jae
rolb
mov
in
fimull
jo
mov
xchg
in
xor
add
jge
add
nop
add
adc
mov
mov
cli
xchg
push
loope
dec
mov
addb
or
orl
add
jae
cmp
mov
mov
into
lret
push
in
add
mov
bound
mov
sbb
add
jg
add
pop
jae
push
mov
popa
lret
pushf
cmpsl
fstl
mov
insl
lods
ret
push
adc
add
mov
xchg
inc
enter
jmp
ds
dec
scas
dec
jae
xorl
mov
add
adc
mov
stos
pop
dec
pop
idiv
enter
dec
int3
adc
fmul
lods
data16
lahf
mov
add
add
je
in
sub
daa
sub
std
enter
dec
popf
mov
add
insb
int
lret
scas
lds
dec
inc
add
mov
pop
jge
scas
test
mov
iret
inc
add
add
push
adc
faddl
jl
lods
add
out
rolb
mov
cmp
mov
xlat
bound
mov
push
cmp
mov
icebp
roll
lret
addb
pushf
cltd
xchg
scas
or
lcall
mov
sub
fldl
mov
xchg
dec
cmc
jl
test
sbb
les
rolb
mov
mov
pusha
add
add
mov
mov
cs
dec
dec
shrl
xchg
test
add
add
or
and
add
cld
testl
xchg
add
jl
add
popa
test
add
mov
inc
popa
jecxz
sub
add
lcall
xor
popf
ds
cmp
add
pop
lahf
jae
add
mov
lods
sbb
push
enter
pop
mov
adc
outsl
pop
mov
mov
fadd
icebp
sahf
ficoms
inc
out
add
adc
pop
test
mov
loope
call
and
lcall
add
mov
aam
or
mov
mov
add
adc
push
mov
test
add
cmpsb
inc
add
mov
adc
mov
faddl
js
sub
cld
pop
jb
mov
sbb
dec
push
cmc
inc
pop
and
shll
sub
hlt
inc
add
in
mov
cld
adc
add
insl
or
add
lds
jge
inc
dec
cld
and
clc
adc
add
test
cltd
cmp
sbb
xor
xchg
inc
dec
repz
mov
or
mov
add
add
add
in
mov
dec
push
test
dec
int3
mov
or
imul
cmp
xchg
jnp
jno
ret
and
mov
inc
in
add
mov
inc
or
pop
jo
mov
mov
movsb
pop
pop
icebp
lret
add
sarl
scas
jecxz
cmp
add
aad
bound
mov
or
aam
add
outsl
push
icebp
test
xor
mov
cwtl
mov
js
push
add
add
add
movsb
xorl
add
pop
mov
cli
push
lret
mov
mov
adc
add
add
add
pusha
add
dec
xchg
ss
add
cmpsl
push
push
jnp
add
add
pop
stos
repnz
jle
and
movsl
and
add
add
sahf
pop
imul
mov
add
test
sti
and
lret
je
sub
jecxz
xchg
out
nop
add
mov
mov
push
fs
in
out
das
lahf
outsb
and
mov
lret
sbb
out
push
cli
loop
mov
xchg
or
push
int
and
aad
out
cmc
int3
mov
add
mov
loope
popa
outsl
dec
cld
dec
popf
mov
add
push
fisubs
jns
es
movsl
sbb
jg
sbb
movsl
ret
in
add
rolb
mov
add
push
test
dec
cmp
pop
cmc
xor
pushf
test
aad
loope
xchg
sbb
pop
pop
xchg
add
out
add
scas
rolb
mov
mov
mov
mov
push
pop
jp
jmp
xchg
jo
mov
sbb
xor
stc
and
xor
scas
and
sti
or
fwait
xchg
add
add
shl
mov
or
lods
xor
mov
sub
adc
mov
jge
cli
mov
push
mov
lahf
add
out
mov
mov
mov
inc
dec
gs
push
lods
and
mov
rolb
mov
add
mov
mov
adc
mov
cmp
xchg
cld
lock
fidivl
push
faddl
add
dec
addl
pop
add
rcrl
imul
xor
mov
jl
mov
mov
sbb
xchg
mov
popl
adc
mov
sbb
mov
add
mov
or
insb
fsub
out
adc
cli
in
add
outsl
mov
repnz
sub
jne
fnsave
jp
inc
add
in
daa
xchg
pop
dec
adc
pop
sahf
pop
adc
mov
shrl
mov
lret
or
lock
add
add
stos
pop
je
movsb
fldl
add
adc
add
ret
inc
test
test
negb
and
mov
cmc
aas
push
add
pop
aam
mov
sbb
jns
or
or
add
xchg
dec
dec
push
movsl
out
jg
push
stos
out
jbe
mov
outsb
push
mov
add
push
mov
jg
add
mov
int3
adc
scas
imul
add
mov
push
rolb
mov
loop
mov
leave
jmp
or
int3
addb
xor
fs
jg
sbb
lret
add
adc
add
fcompl
fnstcw
jmp
stos
out
fnstcw
and
mov
dec
and
mov
iret
scas
mov
ja
jge
jle
leave
mov
aas
sub
jecxz
add
ret
jg
out
add
pop
rolb
mov
or
inc
add
xor
push
mov
push
cmpsb
lahf
fisubs
lea
arpl
ret
scas
lahf
pop
rolb
mov
enter
jno
push
sub
add
xchg
fchs
add
push
add
leave
adc
mov
call
jo,pn
mov
push
add
outsl
out
ror
out
inc
add
bound
mov
add
std
lahf
sbb
in
fsubl
mov
mov
divb
pop
adc
add
add
lock
test
mov
mov
sub
mov
add
cmpsb
or
ficoms
mov
dec
add
add
add
add
and
mov
xlat
push
jle
aas
fsub
inc
das
pop
popa
scas
mov
jg
cmp
mov
mov
icebp
jo
mov
cmp
icebp
je
jge
dec
out
dec
mov
mov
adc
cli
adc
test
add
push
cmc
movsb
in
add
add
mov
sub
popa
insl
lret
mov
mov
mov
mov
fistl
mov
add
mov
lods
mov
psubb
movsl
aad
repnz
sub
insl
sbb
dec
pushf
xchg
daa
enter
push
sbb
add
or
shr
cs
or
mov
push
icebp
push
les
jne
add
mov
inc
je
in
sbb
pop
inc
add
jl
stos
push
push
add
mov
xlat
mov
and
dec
out
inc
or
mov
pop
lds
add
fnstsw
cmpsl
mov
add
mov
add
cli
arpl
mov
test
cs
aam
shll
add
xlat
pop
test
addb
ljmp
lahf
ss
sbb
ss
call
adc
fdivrl
lds
mov
add
mov
xchg
enter
pop
dec
dec
adc
xchg
das
stos
push
adc
add
cmpl
cmp
shl
add
mov
jb
mov
decb
fwait
ljmp
ja
dec
mov
mov
add
sbb
clc
xor
mov
fisttpl
sti
sub
mov
add
add
cltd
cmc
mov
out
mov
add
rolb
xor
mov
ficoms
jmp
jg
dec
add
rcll
dec
aas
xchg
shrl
sub
inc
xor
rolb
outsb
or
aaa
jp
cmp
out
or
mov
jns
out
xorl
je
popl
mov
push
andl
ja
orl
or
add
pop
loop
mov
in
dec
mov
add
and
mov
jecxz
sub
mov
inc
cli
imul
inc
sbb
add
sbb
mov
faddl
xchg
nop
add
mov
mov
bound
mov
pop
or
mov
sub
mov
adc
add
or
call
mov
add
mov
mov
sti
stos
fsts
cmp
mov
cwtl
repz
sub
fwait
insl
rcll
jb
mov
loop
mov
lds
jbe
jge
rcr
mov
push
mov
rolb
dec
adc
add
push
jbe
cmp
mov
jnp
ficomps
das
aam
add
je
mov
adc
mov
ja
jb
mov
cld
or
addr16
mov
mov
mov
pusha
add
lcall
pusha
add
add
add
xor
lds
in
scas
test
mov
sub
insb
fnstcw
mov
inc
sbb
and
in
jl
cmp
movsb
push
cmpsb
mov
stos
jp
cmp
xchg
add
filds
adc
mov
xchg
mov
insb
push
jne
rolb
mov
cmp
cmc
push
add
mov
add
push
jb
mov
mov
mov
arpl
xchg
add
icebp
cmp
rolb
iret
jne
loope
repz
fs
push
add
jae
cmp
jmp
adc
mov
add
rcll
inc
aad
jmp
in
cli
sbb
clc
sub
mov
notb
aaa
out
mov
pop
xor
cmp
jnp
add
add
rcrl
cmp
or
aas
std
ljmp
adc
mov
pop
pop
xchg
xor
mov
adc
mov
add
imul
and
xchg
add
xchg
xor
dec
popa
inc
popf
rolb
mov
pusha
add
add
aas
mov
ljmp
movsb
rolb
rolb
mov
add
mov
mov
add
cmp
dec
push
add
xchg
add
lods
adc
mov
add
sbb
mov
add
jbe
add
add
into
and
mov
mov
out
sbb
fldt
clc
mov
idivb
cmp
repnz
je
push
add
add
jbe
add
testb
and
mov
push
pop
imul
push
cltd
sti
daa
test
cli
pop
js
add
in
fisttps
rolb
mov
addb
push
cmp
int3
cmp
xlat
gs
std
divb
xchg
mull
mov
add
outsl
inc
stos
int
fadds
xchg
xchg
icebp
push
mov
sub
push
loopne,pt
mov
mov
mov
cmp
xor
mov
push
mov
jg
add
add
rorl
jae
jb
mov
dec
cmp
in
cmp
jg
xchg
push
ja
mov
in
shll
testb
das
lret
adc
sbb
mov
pushf
and
mov
push
pop
loope
jb
mov
and
add
push
inc
sub
mov
add
cwtl
inc
add
je
add
jo
mov
cmp
and
fsubr
push
mov
subl
mov
mov
add
jl
add
sbb
pop
xor
mov
gs
sbb
js
sahf
dec
das
inc
icebp
adc
mov
add
cmp
imul
and
mov
jmp
mov
stos
fidivs
sub
jns
or
lock
sti
cmpsl
and
mov
add
std
xor
mov
pop
or
fnstsw
in
out
cmp
jno
paddusb
push
imul
mov
mov
xlat
sub
and
mov
jp
add
add
cmp
std
into
jecxz
notb
add
add
xlat
jnp
fnsetpm(287
cli
push
add
push
adc
mov
mov
pop
shr
jmp
mov
cmp
addr16
mov
aas
push
xchg
fucomi
or
imul
jb
mov
adc
mov
add
mov
bound
mov
inc
add
add
push
rolb
adc
lcall
or
mov
mov
mov
mov
xor
aam
mov
mov
sub
adc
call
jns
or
inc
add
lea
jecxz
xchg
add
mov
cmp
rolb
mov
enter
add
stos
cmp
mov
add
add
pop
pop
mov
jmp
int3
dec
xchg
jmp
pop
fisttps
push
inc
pop
cmp
inc
pop
mov
movsb
cmp
aas
inc
jmp
sbbl
inc
pop
das
daa
mov
adc
mov
add
fdivrs
nop
add
mov
in
addb
push
or
push
in
std
and
mov
xchg
mov
xchg
jg
setge
add
test
enter
into
in
add
mov
mov
mov
add
sub
add
jbe
add
ficoml
cld
hlt
inc
sub
push
and
add
push
mov
add
cmc
jno
cli
jle
and
lcall
sub
lcall
imul
ret
ror
dec
out
rolb
mov
mov
gs
add
mov
mov
inc
add
mov
mov
add
ret
and
mov
add
addb
call
add
xchg
sub
add
add
addb
loop
mov
mov
and
outsb
push
add
mov
test
pop
ret
pop
jno
iret
loop
mov
dec
sub
and
roll
movsl
cmp
cmpl
add
scas
fs
mov
inc
xor
fbstp
add
lods
push
add
movb
daa
pmulhuw
sub
xchg
dec
xchg
jmp
push
add
ret
xlat
ret
outsl
xor
mov
or
icebp
adc
sbb
fldenv
bound
mov
mov
add
mov
add
ficomps
test
pusha
add
popa
xor
shll
add
insl
arpl
add
push
out
ja
stos
shll
mov
fwait
inc
dec
jle
mov
test
dec
sub
imul
test
jl
mov
mov
mov
push
cltd
add
and
in
out
sbb
mov
mov
add
xchg
aam
xchg
inc
add
loop
mov
aam
lretw
dec
dec
mov
inc
lahf
pop
mov
add
mov
fs
sbb
push
or
into
pop
jns
cmp
cmp
mov
js
fisubs
add
jg
fcmovnb
aas
inc
adc
push
pop
fsubrl
pop
mov
push
mov
mov
mov
mov
add
or
push
hlt
mov
scas
addb
dec
pop
pop
dec
es
in
aam
inc
mov
out
test
cmp
mov
inc
fstl
lock
lret
loope
ret
jae
lods
inc
fisttps
jb
mov
add
sub
scas
test
xor
mov
jp
idiv
gs
inc
fnstenv
add
ret
push
pop
insb
push
ficoml
pop
in
test
cmpsb
inc
xchg
lds
jno
ljmp
xchg
jno
ret
stos
jnp
inc
jmp
std
leave
inc
pop
mov
dec
add
dec
mov
mov
pop
call
mov
lds
ret
mov
inc
mov
orl
out
mov
test
out
add
mov
mov
popf
jg
add
loope
add
rcrl
cmp
push
add
aam
push
jo
mov
push
subl
arpl
aas
and
add
mov
add
js
push
mov
add
pop
pushf
bound
mov
dec
je
add
mov
add
aad
mov
stos
cmp
lahf
adc
adc
and
mov
daa
pop
enter
bound
mov
cmp
inc
imul
mov
outsl
push
and
mov
mov
cmp
icebp
cs
sahf
inc
push
in
iret
jl
pop
out
subl
or
xor
mov
mov
bound
mov
xor
xchg
add
insb
fldt
js
les
sti
mov
mov
fistpll
inc
add
mov
push
enter
mov
and
add
enter
xlat
fdivrs
mov
mov
add
add
lds
sub
add
mov
sbb
sbb
inc
cmpl
testl
rolb
mov
add
gs
add
cmp
cmp
imul
xchg
add
cwtl
push
pop
out
jp
lods
dec
sub
xor
mov
fisubl
mov
lods
xchg
adc
mov
sub
aas
mov
xchg
add
push
stc
push
rolb
mov
repz
mov
mov
mov
movsl
inc
add
movsb
jnp
add
mov
in
mov
ret
sbb
add
mov
ret
movsl
ja
add
cltd
pushf
jbe
jae
aaa
fwait
outsl
hlt
and
insb
addr16
lahf
dec
mov
push
repz
in
jle
add
outsb
call
add
add
push
xor
mov
mov
mov
dec
or
mov
fbld
dec
xchg
scas
aad
aaa
sbb
inc
inc
add
jne
add
cmp
and
add
push
clc
cltd
push
add
push
cli
mov
add
add
mov
pop
lods
inc
inc
insb
jb
mov
stc
ljmp
lds
xlat
cli
stc
cmp
xchg
adc
das
or
add
rcll
ss
loop
mov
sbb
add
fiadds
jns
add
scas
lret
loopne
mov
out
rcl
addb
dec
add
mov
mov
jl
dec
jmp
push
push
rolb
add
mov
pop
mov
stos
addb
daa
cmp
and
adc
jo
mov
jmp
lods
xchg
test
jae
dec
ficomps
pop
aaa
lahf
pushf
mov
inc
xor
mov
jecxz
xor
repnz
dec
dec
mull
inc
add
mov
add
jge
mov
sahf
lcall
aaa
jge
jne
push
xchg
out
sahf
jno
sbb
xchg
mov
or
fwait
mov
mov
fadds
mov
add
push
push
mov
jbe
add
pop
addb
rcrl
add
lea
loope
scas
ljmp
adc
repz
add
loopne
mov
out
and
mov
mov
mov
sbb
test
mov
in
add
mov
out
cmp
repz
add
add
mov
jo
mov
fyl2xp1
add
pop
stos
mov
adc
ja
adc
add
jecxz
inc
and
and
fisttpll
add
mov
add
pop
add
mov
ret
popa
movsb
in
push
fimuls
adc
mov
xor
cmp
add
les
push
nop
add
and
add
add
roll
add
ficoml
mov
xchg
inc
add
mov
xchg
mov
mov
mov
inc
dec
jge
stos
jb
mov
add
and
mov
insb
fistpll
add
mov
inc
mov
add
mov
add
jno
lea
lds
mov
ds
das
mov
mov
add
js
xchg
xchg
movsb
ret
das
adc
mov
add
mov
addb
mov
add
pop
addb
jo
mov
andl
std
sbb
addr16
dec
pop
out
add
add
sbb
jmp
add
popa
inc
es
add
aas
repz
loopne
mov
lret
mov
pusha
add
dec
data16
jecxz
add
int3
adc
mov
jle
xchg
push
adc
cld
push
add
mov
loope
xor
test
add
mov
ljmp
xlat
mov
repz
mov
call
test
adc
or
in
es
add
scas
lock
push
add
mov
and
xchg
and
mov
ja
popa
outsb
push
test
sub
inc
and
cmc
mov
dec
cmp
mov
mov
inc
lods
aas
and
add
fnstsw
adcl
pop
or
mov
scas
jle
add
sub
and
mov
add
sub
scas
inc
mov
std
add
or
mov
adc
cmc
mov
into
add
mov
xor
mov
lcall
jg
and
mov
mov
mov
inc
sbb
add
rolb
cltd
fidivrs
adc
mov
jg
inc
add
add
add
vmread
cmp
repz
xchg
mov
lock
add
mov
and
add
ret
jg
push
add
repz
dec
leave
clc
pop
push
addb
xchg
pop
xchg
mov
test
cs
pop
cltd
fistpll
scas
js
add
mov
sub
fmull
add
jae
sbb
add
leave
int3
fwait
daa
push
fcomps
add
lods
pop
cmpsl
ljmp
fistpl
aas
les
xor
js
lds
add
mov
cmp
add
cwtl
xor
mov
mov
pop
xchg
sbbl
jmp
mov
or
add
mov
movsb
add
mov
or
pusha
add
shr
cmc
pop
cmp
xchg
add
lods
pushf
addr16
xor
jmp
mov
pushf
imul
sub
fdivrl
cwtl
sub
push
add
call
mov
dec
loope
aad
mov
add
aas
mov
test
lcall
mov
mov
add
add
mov
xchg
add
mov
int
cli
mov
pop
das
pop
xchg
rorl
cmp
gs
ljmp
mov
cwtl
addb
rcrl
add
add
scas
data16
lret
push
xchg
std
cmc
bound
mov
test
iret
jo
mov
add
vmwrite
add
mov
mov
mov
mov
mov
mov
lock
mov
in
pop
sbb
xchg
dec
xchg
cmc
fmulp
std
fldcw
lahf
fisttpll
out
gs
add
push
scas
test
scas
test
gs
jnp
jns
mov
ds
mov
bound
mov
sti
inc
scas
or
dec
repnz
push
mov
cmpsb
inc
add
mov
mov
add
jns
add
jmp
push
fidivs
andl
hlt
cmpsb
cli
push
add
inc
enter
cmc
mov
in
and
sbb
sbb
dec
jg
dec
movsl
out
repnz
jl
jae
stos
jo
mov
jecxz
mov
cs
cmp
daa
jno
pop
mov
pusha
add
xor
mov
push
iret
cmc
rolb
mov
cmp
push
jno
xor
mov
sarl
push
insb
adc
push
std
sub
jl
jmp
push
rolb
mov
add
mov
inc
or
push
add
lahf
mov
sti
enter
lods
std
mov
mov
xor
mov
pop
test
push
mov
mov
add
dec
cld
xchg
sub
add
add
daa
outsb
aad
pop
rolb
mov
dec
popf
cmp
mov
mov
mov
mov
mov
xchg
test
cmp
lods
add
js
cmp
mov
cltd
popa
pop
int3
or
push
test
out
jb
mov
test
xor
aas
jecxz
out
sub
or
es
add
and
mov
mov
push
pop
repnz
jp
add
push
lods
xchg
add
push
add
flds
cmp
bound
mov
cwtl
fistl
add
inc
enter
mov
mov
sti
ret
mov
aaa
les
mov
jb
mov
and
mov
lret
js
add
or
mov
add
lret
add
add
inc
cmc
stos
sbb
mov
and
mov
mov
push
add
jecxz
jle
push
fwait
aaa
add
mov
and
mov
loope
test
jl
es
nop
add
cltd
sbb
ds
incb
add
into
jae
push
rcr
fmull
add
ljmp
mov
add
test
int3
push
lret
mov
mov
add
fnstsw
add
add
xor
xor
mov
mov
jb
mov
add
stos
std
add
dec
mov
in
addb
into
push
add
adc
cmp
xchg
or
mov
fmulp
push
add
mov
xchg
push
add
mov
test
mov
jl
lods
in
and
and
mov
mov
test
sub
xlat
sbb
add
add
dec
mov
xor
mov
adc
mov
mov
mov
inc
pop
shll
xor
mov
or
insb
aaa
adc
add
mov
mov
add
add
pop
out
inc
in
add
add
nop
add
xor
inc
arpl
aad
xchg
pop
bound
mov
loope
jbe
mov
mov
add
sahf
pushf
loop
mov
mov
imul
loop
mov
xor
mov
pop
xchg
lret
pop
popa
mov
scas
mov
scas
les
mov
and
mov
pause
add
or
sub
mov
mov
lret
out
out
jbe
cltd
lods
jmp
sbb
hlt
sub
into
lret
adc
loope
imul
mov
push
les
addb
push
jg
lods
mov
inc
add
inc
scas
sub
add
add
mov
push
jmp
shll
jp
ss
jnp
add
mov
stc
adc
mov
add
adc
mov
mov
pop
aaa
push
pop
mov
mov
int3
test
scas
dec
mov
add
faddl
add
push
jne
das
ret
fnstsw
out
inc
aad
hlt
leave
or
movsb
stos
out
jbe
add
add
leave
inc
add
jns
inc
cmovbe
add
xor
mov
add
add
test
mov
or
add
mov
mov
add
aas
add
add
sbb
das
add
mov
mov
or
inc
outsb
mov
in
and
mov
add
push
bound
mov
mov
add
add
mov
inc
inc
add
pop
or
add
push
add
ljmp
xchg
imul
idivl
pop
inc
xor
addb
and
cmp
push
lret
out
push
fcomps
sbb
faddp
add
mov
add
jns
stos
push
add
add
stos
jmp
insb
and
sbb
addb
and
mov
xchg
sbb
push
mov
out
pop
gs
mov
sbb
ljmp
bound
mov
mov
mov
mov
push
or
adc
xor
aas
jno
add
xchg
add
stc
outsl
xor
push
add
dec
mov
mov
add
mov
scas
push
add
mov
sbb
out
sbb
fists
add
add
xchg
fistps
jne
jb
mov
clc
jae
mov
cmc
rolb
mov
add
mov
icebp
mov
stos
in
adc
mov
mov
mov
add
add
jg
jg
cmpsl
dec
jno
stc
add
pop
add
adc
jnp
add
mov
mov
add
mov
pop
mov
jmp
in
and
mov
xor
cmpsb
sbb
fwait
movsb
or
aas
scas
mov
sub
mov
add
mov
sahf
cs
sahf
inc
add
add
add
mov
add
add
sub
mov
inc
add
roll
mov
cmp
push
dec
loopne
mov
out
sub
mov
sarl
adc
mov
pop
mov
adc
mov
or
and
add
clc
or
add
stc
mov
mov
les
inc
gs
sbb
mov
iret
sbb
add
cmp
sbb
leave
push
fcomps
sbb
add
scas
dec
jmp
jno
push
inc
xchg
lahf
pop
pop
ljmp
mov
add
xchg
dec
jge
sub
ret
addb
ficoml
inc
fdivs
jo
mov
addb
sahf
mov
mov
out
addb
jno
add
into
sarl
add
jl
xor
mov
and
mov
xchg
xchg
mov
xchg
pushf
test
add
dec
or
cmc
aaa
call
mov
repnz
add
lds
mov
ret
imul
clc
push
add
mov
mov
add
leave
inc
aam
dec
sbb
fildll
aas
push
xchg
adc
bound
mov
pop
adc
mov
and
mov
push
add
ljmp
lods
das
adc
mov
mov
aad
mov
push
add
scas
inc
add
addb
jmp
ret
jno
add
or
or
cld
loope
out
jns
add
mov
fwait
jg
jb
mov
xor
fsubl
repz
mov
loopne
mov
xor
in
cmpsb
sbb
cmc
iret
xlat
test
push
add
mov
sub
add
xor
mov
dec
inc
mov
shll
or
out
rcll
push
mov
std
jle
push
stos
hlt
shr
imul
and
adc
jns
rolb
out
aam
pop
repz
push
push
jecxz
add
mov
lahf
jmp
pop
sbb
icebp
inc
pop
jge
and
lock
divl
inc
pop
pop
loop
mov
dec
pushf
mov
mov
mov
aam
add
pop
mov
in
rolb
popf
fisubl
add
sub
stos
push
add
mov
stc
les
loopne
mov
mov
sub
mov
add
xor
mov
mov
mov
xor
mov
jns
std
cmp
and
mov
sbb
dec
pop
xchg
dec
jo
mov
push
test
outsb
xchg
sbbl
aas
fs
add
dec
mov
sti
outsb
das
or
add
xor
mov
push
and
mov
add
xchg
in
mov
insl
pusha
add
xor
mov
add
pop
or
add
add
fmulp
insb
push
icebp
and
mov
stos
inc
iret
mov
add
jbe
xchg
into
mov
mov
push
lcall
movsl
lods
jne
inc
arpl
sbb
dec
out
fidivl
push
add
sub
add
lcall
loope
cmc
mov
mov
jns
negb
push
jae
add
mov
mov
add
daa
jns
daa
adc
xchg
add
test
icebp
mov
mov
mov
dec
push
pop
nop
add
lret
mov
ret
repnz
mov
dec
fdivs
sbb
dec
inc
add
push
mov
mov
mov
sub
mov
cmpsb
leave
jmp
lods
adc
fcmove
rolb
mov
add
scas
pop
lcall
fcomi
je
add
add
sbb
xchg
bound
mov
pop
gs
push
mov
idivl
fidivs
std
jns
sub
pop
aaa
push
pop
outsl
mov
dec
lds
test
call
add
xor
insb
push
mov
outsl
test
mov
test
mulb
cs
add
scas
push
inc
add
pop
inc
jecxz
addb
movsl
icebp
push
loopne
mov
movsl
cmpsb
insb
adc
mov
outsb
adc
outsl
xor
mov
hlt
int3
push
adc
mov
rolb
mov
add
add
mov
add
push
pop
loope
int3
lods
or
cmp
shll
add
ljmp
jmp
or
data16
xor
mov
pop
pop
jb
mov
mov
inc
outsl
test
xor
add
sti
adc
lods
pusha
add
mov
add
test
sbb
dec
dec
test
popa
jecxz
int
test
rcrl
add
push
add
adc
adc
pop
stos
pop
mov
mov
les
fcmovnu
and
add
mov
jl
lahf
cmc
add
mov
add
jmp
imul
pop
in
jns,pt
cmp
das
mov
clc
pop
xor
pop
dec
test
push
mov
push
add
enter
dec
mov
pop
dec
into
mov
int3
mov
mov
inc
add
fisubl
inc
mov
add
sbb
mov
rcrl
pop
scas
push
sbb
push
add
jecxz
lret
jns
stos
hlt
mov
insb
ds
pop
dec
nop
add
add
pop
dec
xchg
add
out
arpl
sbb
hlt
sbb
lahf
push
scas
add
fs
lcall
mov
xchg
rolb
mov
add
mov
repnz
mov
xorl
dec
fs
imulb
loopne
mov
and
mov
sub
lret
mov
push
dec
fidivrl
je
test
xchg
fmuls
xor
mov
adcl
push
mov
inc
into
sahf
out
cmp
js
add
mov
jbe
push
clc
sbb
notb
add
push
icebp
cwtl
mov
mov
pop
addr16
sub
add
jb
mov
call
mov
mov
mov
mov
mov
inc
jbe
mov
jne
push
add
add
mov
cmp
jnp
add
push
add
lret
mov
repnz
scas
leave
mov
inc
add
mov
nop
add
repnz
lods
int3
pop
xchg
jmp
add
lahf
or
pop
aam
test
cmp
push
jb
mov
mov
arpl
sbb
add
outsb
rorl
sbb
or
mov
add
scas
aas
cmpsb
mov
add
jp
push
dec
or
jbe
fidivrl
notb
loopne
mov
stc
sbb
pop
or
rolb
mov
jbe
les
dec
sbb
int3
jnp
cs
lcall
mov
lods
rcrl
add
ja
data16
xchg
add
stos
add
push
sub
sbb
or
add
pop
mov
call
jmp
roll
fimuls
lods
dec
pop
inc
mov
cmpl
add
sbb
add
add
mov
mov
js
movsl
aad
add
mov
imul
add
mov
mov
or
out
rcll
inc
mov
arpl
or
fistl
lret
xor
jns
xchg
xor
mov
add
test
leave
ret
mov
mov
fistpll
adc
pop
loope
sti
xor
mov
add
data16
mov
or
inc
push
mov
loope
add
in
addr16
mov
pop
xorl
jnp
stc
int3
xchg
aaa
sarl
push
scas
ljmp
negl
cmp
mov
and
or
jmp
pop
lcall
out
nop
add
mov
add
lods
sub
add
mov
add
jno
add
add
fstl
or
mov
aaa
fwait
push
add
mov
mov
lcall
movsl
sarl
test
sub
mov
inc
add
sbb
cmp
insl
icebp
rolb
mov
lret
cmpsb
call
dec
pop
int
jecxz
lcall
xlat
lret
xchg
pop
push
sub
cmp
mov
add
icebp
push
aad
mov
aas
pop
fnstsw
add
mov
push
subl
and
mov
jmp
sub
add
adc
mov
cmc
pop
les
pop
push
test
cmc
mov
mov
cmp
neg
dec
jno
adc
addb
pop
insl
out
mov
repz
mov
jp
cmp
push
mov
js
add
pop
adc
out
dec
repnz
mov
js
incl
out
mul
les
add
mov
sub
adc
mov
or
loope
sbb
jno
add
jo
mov
mov
in
inc
test
out
inc
inc
sub
test
mov
mov
or
pusha
add
add
mov
add
pop
adc
mov
lods
mov
cmp
int
add
mov
mov
add
mov
imul
mulb
add
in
iret
jnp
push
mov
pop
mov
rcrl
add
add
mov
aaa
loop
mov
add
xor
mov
add
mov
cld
cmc
js
sti
imul
add
mov
jecxz
add
pop
xor
aam
out
pop
movsb
rcrl
mov
jno
add
add
jbe
jnp
rolb
push
add
mov
jg
add
out
mov
int3
notl
test
imul
add
stos
and
mov
rcrl
and
inc
sbbl
push
mov
movsb
inc
mov
loope
xchg
cmp
add
add
add
ds
mov
mov
add
mov
pop
enter
je
sbb
push
add
sbbl
mov
in
int3
lock
ror
loopne
mov
add
sub
add
jp
divb
sbb
mov
mov
jg
in
add
mov
popa
je
adc
fstpl
add
jne
fwait
enter
jb
mov
insb
or
lods
lret
mov
jbe
xchg
add
add
imul
addb
mov
add
mov
aad
pop
and
stc
fdivl
out
les
cmpsb
jb
mov
cmc
ljmp
mov
mov
xor
pop
xor
add
mov
mov
add
lahf
enter
movsb
aas
mov
in
addb
push
pop
cmp
enter
mov
rolb
out
push
xchg
adc
jno
test
dec
fistpll
out
mov
sub
mov
daa
fdivrs
mov
stos
mov
pusha
add
jb
mov
sub
aas
sub
imul
loop
mov
les
jge
add
mov
test
add
dec
lea
add
mov
xchg
cld
mov
mov
mov
test
aaa
jnp
mov
pop
mov
add
add
xchg
add
add
mov
mov
cmp
add
cwtl
cmpsb
cltd
adc
mov
xor
add
mov
jae
cmpsl
pop
xor
add
push
dec
push
add
mov
dec
stc
pop
loope
ss
mov
add
mov
mov
add
pop
rolb
mov
xchg
push
imul
mov
mov
add
hlt
and
addr16
lcall
lds
mov
rolb
mov
cwtl
mov
sbb
mov
jg
jle
push
ret
mov
mov
in
leave
push
lahf
out
call
pushf
push
add
ja
sbb
mov
push
ja
adc
add
cld
and
push
and
pushf
mov
inc
aad
test
popl
add
enter
les
scas
add
pop
mov
jecxz
push
add
sub
add
loop
mov
xchg
add
dec
rolb
mov
jno
out
into
jno
scas
or
xor
inc
add
je
jmp
enter
pop
sbbl
mov
rolb
mov
enter
addr16
dec
testb
add
mov
or
pop
xchg
fs
rolb
mov
pop
xchg
jg
xchg
add
addr16
add
mov
inc
xchg
les
mov
mov
cmp
or
lock
xchg
adc
mov
dec
and
mov
nop
add
call
adcl
faddl
add
mov
add
ds
and
jecxz
and
or
movsb
fnstcw
jge
mov
insb
inc
std
leave
lods
xchg
mov
push
out
sbbl
mov
aam
sub
lahf
pop
mov
adc
mov
xor
mov
incl
xchg
add
stos
cmp
dec
add
sbb
in
dec
outsl
jl
sti
pop
inc
mov
xor
mov
idiv
jp
and
addb
leave
dec
inc
add
and
mov
out
mov
mov
je
mov
jae
xchg
popa
popw
add
mov
leave
rcrl
rolb
mov
je
and
mov
mov
scas
push
.byte
mov
