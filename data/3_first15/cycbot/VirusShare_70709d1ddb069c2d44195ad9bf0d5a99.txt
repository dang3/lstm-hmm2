pusha
cmpsb
loopne
adc
loopne
inc
cmpsl
loopne
mov
loopne
test
loopne
mov
mov
loopne
movsl
loopne
and
test
mov
mov
loopne
call
movsl
loopne
lcall
mov
mov
loopne
pop
mov
loopne
dec
cmpsl
loopne
jp
loopne
in
loopne
xchg
cmpsb
loopne
xlat
cmpsl
loopne
jge
loopne
or
test
mov
cmpsb
loopne
shll
loopne
add
loopne
mov
loopne
xchg
cmpsb
loopne
sub
loopne
popf
test
mov
movsb
loopne
andl
mov
mov
loopne
aam
loopne
stc
movsl
loopne
jle
loopne
add
mov
movsl
loopne
pop
cmpsl
loopne
and
loopne
xor
loopne
push
loopne
pusha
cmpsl
loopne
loopne
loopne
out
loopne
sub
movsl
loopne
jp
loopne
pop
movsl
loopne
push
test
mov
mov
loopne
inc
mov
loopne
cmpsb
loopne
movsb
loopne
mov
mov
loopne
xor
loopne
movsl
loopne
cmp
mov
loopne
mov
mov
loopne
clc
mov
loopne
jle
loopne
lea
loopne
inc
test
loopne
mov
movsl
loopne
mov
loopne
add
loopne
test
mov
cmpsb
loopne
mov
loopne
movsb
loopne
cli
movsl
loopne
sbb
loopne
xor
mov
loopne
out
loopne
andb
mov
movsb
loopne
push
loopne
lds
loopne
push
mov
loopne
add
loopne
mov
movsb
loopne
lock
loopne
xchg
mov
loopne
xchg
mov
loopne
push
movsb
loopne
xchg
mov
loopne
lcall
mov
cmpsb
loopne
outsl
mov
loopne
es
mov
test
loopne
pop
cmpsb
loopne
sbb
loopne
cmp
mov
mov
loopne
arpl
loopne
push
mov
loopne
repnz
loopne
add
loopne
iret
mov
loopne
push
mov
loopne
fisubl
loopne
lret
test
mov
mov
loopne
movsl
cmpsb
loopne
and
loopne
pop
movsl
loopne
mov
loopne
xchg
mov
loopne
lods
mov
loopne
pop
mov
loopne
movsb
loopne
adc
loopne
sbb
loopne
sbb
loopne
aam
loopne
mov
loopne
jnp
loopne
test
movsb
loopne
outsl
mov
loopne
push
mov
loopne
push
movsl
loopne
mov
mov
loopne
push
test
mov
mov
loopne
hlt
cmpsl
loopne
dec
test
mov
movsl
loopne
loopne
shlb
loopne
je
loopne
cmc
movsb
loopne
push
cmpsb
loopne
icebp
movsb
loopne
xchg
cmpsl
loopne
dec
test
mov
test
mov
movsb
loopne
mov
loopne
sub
loopne
shll
mov
mov
loopne
cmc
cmpsl
loopne
push
cmpsl
loopne
ja
loopne
xchg
loopne
ljmp
mov
movsb
loopne
add
loopne
pop
mov
loopne
shll
loopne
inc
movsb
loopne
int3
test
mov
test
mov
mov
loopne
dec
cmpsl
loopne
jo
loopne
adc
loopne
cmpsl
test
mov
movsb
loopne
dec
mov
loopne
jmp
loopne
pop
cmpsb
loopne
cmpsb
loopne
sub
mov
loopne
outsl
mov
loopne
inc
movsb
loopne
subl
loopne
call
test
mov
mov
loopne
jne
loopne
or
loopne
xchg
movsl
loopne
sub
loopne
push
loopne
fsubs
loopne
enter
inc
test
loopne
lret
mov
mov
loopne
mov
loopne
daa
test
mov
mov
loopne
in
mov
loopne
pop
test
loopne
mov
loopne
mov
movsb
loopne
scas
movsb
loopne
mov
loopne
out
mov
loopne
hlt
cmpsl
loopne
inc
movsl
loopne
loopne
hlt
mov
loopne
mov
loopne
mov
movsb
loopne
andb
adc
loopne
push
movsb
loopne
daa
test
mov
cmpsb
loopne
pop
cmpsl
loopne
mov
mov
loopne
adc
loopne
movsl
test
mov
movsb
loopne
push
mov
loopne
fisubl
loopne
xchg
loopne
xchg
mov
loopne
and
mov
mov
loopne
mov
cmpsl
loopne
dec
cmpsl
loopne
add
mov
mov
loopne
dec
mov
loopne
dec
movsb
loopne
cmp
loopne
push
cmpsb
loopne
movsb
movsl
loopne
bound
loopne
adc
mov
cmpsb
loopne
lea
loopne
push
cmpsl
loopne
shlb
mov
movsl
loopne
shll
loopne
mov
loopne
jl
loopne
arpl
loopne
cmp
loopne
repnz
loopne
inc
mov
loopne
xor
loopne
rep
loopne
popa
movsl
loopne
pop
cmpsb
loopne
cmc
movsb
loopne
jns
loopne
movsb
loopne
xchg
test
mov
movsl
loopne
or
loopne
sub
loopne
cmp
loopne
icebp
cmpsl
loopne
movsl
loopne
lret
mov
cmpsl
loopne
jne
loopne
push
mov
loopne
fwait
mov
loopne
pop
movsl
loopne
mov
loopne
dec
movsl
loopne
shll
mov
cmpsb
loopne
mov
loopne
sub
loopne
cmp
loopne
fsubs
loopne
push
cmpsl
loopne
cmp
loopne
xor
loopne
shlb
mov
test
mov
mov
loopne
subb
mov
mov
loopne
pop
mov
loopne
sub
movsb
loopne
subl
loopne
mull
loopne
shlb
mov
cmpsl
loopne
inc
mov
loopne
inc
cmpsb
loopne
ret
movsl
loopne
inc
test
loopne
jnp
loopne
mov
loopne
in
loopne
mov
loopne
xor
loopne
dec
test
mov
movsb
loopne
pop
movsb
loopne
dec
mov
loopne
lret
mov
movsl
loopne
mov
mov
loopne
insb
cmpsl
loopne
jnp
loopne
cld
mov
loopne
shll
loopne
jge
loopne
shll
loopne
sub
cmpsb
loopne
push
cmpsb
loopne
dec
cmpsb
loopne
jae
loopne
add
loopne
or
loopne
push
test
loopne
adc
movsb
loopne
push
test
loopne
stos
mov
loopne
xor
loopne
enter
jmp
loopne
je
loopne
movsl
loopne
jg
loopne
pop
movsl
loopne
mov
mov
test
mov
mov
loopne
lahf
test
mov
mov
loopne
jbe
loopne
in
loopne
mov
mov
loopne
popa
test
mov
movsl
loopne
dec
movsb
loopne
jae
loopne
andb
mov
mov
loopne
pop
test
loopne
pop
test
loopne
outsb
mov
loopne
cmp
loopne
cwtl
movsl
loopne
fwait
cmpsb
loopne
scas
cmpsb
loopne
xchg
cmpsl
loopne
inc
mov
loopne
das
mov
loopne
aam
loopne
scas
cmpsb
loopne
mov
movsl
loopne
jb
loopne
pop
mov
loopne
leave
movsb
loopne
out
loopne
add
loopne
fsubrs
loopne
clc
cmpsl
loopne
pusha
test
mov
movsb
loopne
dec
movsb
loopne
lcall
mov
mov
loopne
xor
loopne
mov
loopne
stos
test
mov
test
loopne
ja
loopne
mov
mov
loopne
jns
loopne
inc
cmpsl
loopne
and
loopne
imulb
loopne
pop
cmpsb
loopne
sbb
loopne
push
loopne
bound
loopne
pop
cmpsb
loopne
jmp
loopne
xchg
mov
loopne
pop
cmpsb
loopne
xchg
cmpsl
loopne
jo
loopne
adc
cmpsb
loopne
xchg
loopne
mov
loopne
xchg
cmpsb
loopne
mov
loopne
cmp
mov
cmpsl
loopne
inc
mov
loopne
sbb
loopne
shll
loopne
std
mov
loopne
adc
loopne
add
loopne
adc
test
mov
mov
loopne
pop
mov
loopne
sub
loopne
test
mov
loopne
xor
loopne
jg
loopne
imul
loopne
dec
test
mov
test
mov
movsl
loopne
inc
movsl
loopne
cmp
loopne
and
loopne
arpl
loopne
out
loopne
fisubs
loopne
mull
loopne
mov
cmpsb
loopne
cmpsb
loopne
aas
mov
loopne
mulb
loopne
daa
cmpsl
loopne
and
loopne
fbld
loopne
test
loopne
ret
mov
movsb
loopne
cmp
loopne
mov
loopne
cwtl
mov
loopne
scas
cmpsl
loopne
push
mov
loopne
jbe
loopne
jnp
loopne
sti
mov
loopne
ret
mov
movsb
loopne
jno
loopne
push
movsb
loopne
dec
mov
loopne
aam
loopne
add
loopne
adc
movsb
loopne
icebp
mov
loopne
fwait
movsl
loopne
cld
mov
loopne
mov
mov
loopne
sub
loopne
pop
test
mov
test
loopne
pusha
movsb
loopne
pop
cmpsl
loopne
mov
loopne
mov
loopne
or
loopne
push
cmpsb
loopne
shlb
loopne
ljmp
mov
test
mov
cmpsb
loopne
into
mov
loopne
add
loopne
add
loopne
mov
loopne
out
loopne
mov
mov
loopne
pop
loopne
xchg
cmpsb
loopne
outsb
test
mov
mov
loopne
imulb
loopne
xchg
mov
loopne
push
test
loopne
sbb
mov
movsl
loopne
xor
loopne
lret
test
mov
mov
loopne
push
cmpsl
loopne
arpl
mov
movsb
loopne
and
loopne
dec
cmpsl
loopne
dec
mov
loopne
mov
loopne
test
loopne
push
loopne
insb
movsb
loopne
and
loopne
stc
movsb
loopne
cwtl
mov
loopne
cmpsb
loopne
in
mov
loopne
sahf
movsb
loopne
scas
mov
loopne
mov
mov
loopne
jp
loopne
dec
cmpsl
loopne
mov
loopne
jge
loopne
cmpsb
loopne
int3
test
mov
movsl
loopne
fisubrs
loopne
fwait
mov
loopne
test
mov
movsb
loopne
insb
mov
loopne
enter
jge
loopne
jb
loopne
lret
mov
cmpsl
loopne
xchg
movsb
loopne
or
loopne
dec
cmpsb
loopne
cmpsb
loopne
xchg
cmpsb
loopne
aam
loopne
ret
mov
mov
loopne
lods
cmpsb
loopne
popa
mov
loopne
shlb
mov
test
mov
mov
loopne
ja
loopne
arpl
loopne
mov
loopne
mov
loopne
mov
loopne
xchg
mov
loopne
add
loopne
shlb
loopne
sub
test
loopne
nop
cmpsl
loopne
jne
loopne
sbb
test
mov
cmpsl
loopne
sbb
loopne
shll
loopne
out
loopne
fisubl
loopne
cli
test
mov
mov
loopne
lret
mov
mov
loopne
jns
loopne
xchg
mov
loopne
mov
mov
loopne
dec
mov
loopne
bound
loopne
push
mov
loopne
scas
cmpsb
loopne
movsl
loopne
inc
test
mov
mov
loopne
fsubs
loopne
loop
loopne
pop
mov
loopne
pop
loopne
jae
loopne
movsl
loopne
cmpsb
loopne
jle
loopne
rep
loopne
push
cmpsl
loopne
and
loopne
lahf
cmpsb
loopne
mull
mov
test
mov
cmpsl
loopne
ret
mov
loopne
jnp
loopne
add
mov
loopne
pop
movsl
loopne
and
movsb
loopne
sbb
mov
cmpsb
loopne
mov
cmpsb
loopne
out
cmpsl
loopne
outsb
mov
loopne
arpl
mov
movsb
loopne
adc
cmpsb
loopne
or
mov
loopne
cmp
loopne
daa
test
mov
cmpsb
loopne
scas
mov
loopne
shld
shlb
loopne
fsubl
mov
test
mov
movsb
loopne
repnz
loopne
mov
loopne
xchg
mov
loopne
mov
loopne
nop
test
mov
movsl
loopne
sub
loopne
sti
movsl
loopne
xor
loopne
out
loopne
lods
mov
loopne
jae
loopne
mov
test
loopne
andb
mov
movsb
loopne
daa
test
loopne
stos
cmpsb
loopne
inc
cmpsl
loopne
stc
movsb
loopne
add
loopne
pop
mov
loopne
sbb
movsb
loopne
jae
loopne
jae
loopne
push
movsb
loopne
mov
loopne
jne
loopne
frstor
loopne
add
loopne
mov
loopne
push
test
mov
mov
loopne
mov
loopne
fbld
loopne
adc
loopne
scas
mov
loopne
adc
loopne
fwait
movsl
loopne
int3
cmpsl
loopne
pop
movsl
loopne
std
mov
loopne
shlb
loopne
movsb
loopne
cmpsl
loopne
enter
fbld
loopne
mov
loopne
cmpsl
loopne
xor
loopne
loopne
xchg
mov
loopne
or
loopne
fsubl
loopne
aas
movsb
loopne
ret
cmpsl
loopne
scas
mov
loopne
mov
loopne
inc
movsl
loopne
icebp
mov
loopne
mov
mov
loopne
jp
loopne
mov
loopne
mov
loopne
push
cmpsl
loopne
shll
loopne
insl
mov
loopne
mov
loopne
sub
loopne
and
mov
loopne
jecxz
loopne
mov
cmpsb
loopne
mov
loopne
inc
cmpsl
loopne
popf
movsl
loopne
jae
loopne
jae
loopne
pusha
cmpsb
loopne
andb
pop
test
mov
mov
loopne
fisubs
loopne
or
loopne
jne
loopne
mov
loopne
add
loopne
jle
loopne
mov
loopne
lcall
mov
movsl
loopne
in
loopne
xor
loopne
mov
loopne
push
cmpsb
loopne
mov
movsl
loopne
sbb
loopne
adc
loopne
and
mov
mov
loopne
cmpsl
loopne
stos
mov
loopne
jge
loopne
dec
movsb
loopne
shlb
mov
mov
loopne
fwait
movsb
loopne
fsubl
loopne
push
mov
loopne
dec
cmpsb
loopne
insb
movsb
loopne
cmpsl
mov
loopne
cmc
mov
loopne
test
loopne
push
cmpsl
loopne
frstor
loopne
dec
mov
loopne
in
loopne
movsl
loopne
mulb
loopne
pop
movsb
loopne
mov
loopne
mov
loopne
push
movsb
loopne
xchg
movsl
loopne
xlat
movsl
loopne
cli
movsb
loopne
sub
mov
cmpsb
loopne
push
test
loopne
mov
loopne
sbb
loopne
pop
movsb
loopne
inc
cmpsb
loopne
icebp
test
mov
movsl
loopne
repnz
loopne
jbe
loopne
mov
loopne
ret
mov
mov
loopne
out
loopne
mov
loopne
xchg
movsl
loopne
aam
loopne
inc
mov
loopne
cmpsl
loopne
jnp
loopne
aaa
mov
loopne
stos
movsl
loopne
insb
movsb
loopne
insl
movsl
loopne
shlb
loopne
int
loopne
ret
movsb
loopne
movsl
movsb
loopne
pop
movsb
loopne
mov
loopne
dec
cmpsb
loopne
mov
cmpsb
loopne
aas
cmpsl
loopne
and
loopne
icebp
test
mov
test
mov
movsl
loopne
pushf
mov
loopne
mov
loopne
sub
mov
mov
loopne
jae
loopne
ja
loopne
jmp
loopne
add
loopne
lahf
mov
loopne
enter
cwtl
movsl
loopne
std
mov
loopne
push
movsb
loopne
outsl
mov
loopne
and
loopne
fldenv
loopne
mov
mov
loopne
pushf
mov
loopne
aas
cmpsb
loopne
fldenv
loopne
cmpsb
loopne
jge
loopne
out
mov
loopne
adc
mov
loopne
jnp
loopne
insb
test
mov
cmpsl
loopne
or
loopne
andl
loopne
sbb
mov
loopne
pop
movsl
loopne
xor
test
loopne
stos
mov
loopne
insb
movsb
loopne
push
cmpsl
loopne
cmpsl
loopne
loope
loopne
daa
mov
loopne
shll
loopne
andl
loopne
jnp
loopne
nop
movsl
loopne
lret
mov
movsb
loopne
shll
mov
test
mov
test
mov
mov
loopne
lock
loopne
xchg
cmpsb
loopne
shll
mov
mov
loopne
or
loopne
mov
loopne
shlb
mov
mov
loopne
and
loopne
mov
loopne
mov
loopne
mull
loopne
pop
test
loopne
jg
loopne
movsb
loopne
sbb
loopne
shlb
loopne
lret
cmpsl
loopne
shll
loopne
iret
movsl
loopne
dec
movsb
loopne
adc
loopne
cli
mov
loopne
inc
test
loopne
lods
cmpsb
loopne
cmpsl
mov
loopne
sub
mov
mov
loopne
outsl
cmpsb
loopne
cmpsb
loopne
mov
loopne
pop
mov
loopne
repz
loopne
mov
loopne
in
test
mov
movsb
loopne
fwait
mov
loopne
xor
loopne
movsb
loopne
js
loopne
jnp
loopne
inc
cmpsl
loopne
das
movsb
loopne
nop
mov
loopne
mov
loopne
leave
cmpsb
loopne
and
loopne
data16
loopne
inc
movsb
loopne
pop
test
mov
test
mov
cmpsb
loopne
sub
test
mov
cmpsl
loopne
leave
test
mov
movsb
loopne
out
loopne
inc
mov
loopne
mov
loopne
inc
mov
loopne
dec
movsl
loopne
cltd
movsl
loopne
mov
mov
test
loopne
fisubs
loopne
xchg
movsl
loopne
add
mov
movsl
loopne
andl
mov
movsl
loopne
add
loopne
xor
movsl
loopne
les
loopne
movsl
loopne
xor
loopne
jmp
loopne
push
mov
loopne
inc
test
mov
test
mov
cmpsl
loopne
and
cmpsl
loopne
pop
cmpsb
loopne
int
loopne
adc
loopne
and
loopne
addr16
mov
movsb
loopne
out
loopne
nop
cmpsb
loopne
sbb
loopne
loope
loopne
push
cmpsb
loopne
cltd
cmpsb
loopne
jo
loopne
je
loopne
jmp
loopne
movsb
cmpsl
loopne
lcall
mov
cmpsl
loopne
lea
mov
mov
loopne
jg
loopne
test
mov
cmpsl
loopne
mov
movsb
loopne
sub
loopne
lcall
mov
mov
loopne
stos
movsl
loopne
adc
loopne
cmp
mov
loopne
jae
loopne
cltd
cmpsl
loopne
aaa
cmpsb
loopne
fsubl
loopne
fwait
cmpsb
loopne
stc
cmpsl
loopne
jl
loopne
pop
loopne
cmp
loopne
stc
movsb
loopne
andb
mov
mov
loopne
or
loopne
bound
loopne
dec
test
loopne
xchg
movsl
loopne
hlt
mov
loopne
icebp
cmpsb
loopne
sbb
loopne
xor
loopne
sbb
loopne
inc
mov
loopne
loopne
loopne
loop
loopne
pusha
mov
loopne
nop
movsb
loopne
and
mov
test
mov
test
mov
cmpsl
loopne
pop
test
mov
mov
loopne
jnp
loopne
das
movsb
loopne
mov
loopne
push
cmpsl
loopne
mov
movsb
loopne
loopne
loopne
mov
loopne
sbb
loopne
mov
cmpsl
loopne
sub
loopne
dec
test
loopne
mov
movsl
loopne
mov
mov
cmpsl
loopne
jo
loopne
add
mov
loopne
sti
mov
loopne
mov
loopne
inc
cmpsl
loopne
inc
movsb
loopne
mov
loopne
mov
loopne
in
loopne
jbe
loopne
stos
cmpsb
loopne
test
loopne
add
loopne
movsl
cmpsl
loopne
cwtl
test
mov
mov
loopne
stc
cmpsb
loopne
cmp
loopne
push
mov
loopne
jg
loopne
push
mov
loopne
and
loopne
push
movsb
loopne
add
loopne
call
cmpsb
loopne
xchg
cmpsb
loopne
inc
test
loopne
fsubl
loopne
sub
loopne
lea
loopne
out
loopne
mov
loopne
fldenv
loopne
mov
test
mov
cmpsl
loopne
push
cmpsl
loopne
insl
movsb
loopne
call
mov
loopne
andb
mov
test
mov
cmpsb
loopne
das
cmpsl
loopne
or
loopne
enter
lea
loopne
in
movsl
loopne
jle
loopne
push
mov
loopne
xor
mov
loopne
jmp
test
mov
test
loopne
xchg
test
mov
mov
loopne
and
test
mov
mov
loopne
je
loopne
jo
loopne
andb
mov
cmpsb
loopne
andb
mov
inc
clc
mov
clc
mov
in
mov
out
fmull
lock
add
mov
add
lret
add
clc
cmpsl
clc
mov
loope
jmp
hlt
mov
clc
arpl
add
cs
data16
push
mov
add
xabort
mov
sahf
or
and
add
xbegin
clc
fimuls
outsb
xchg
icebp
icebp
pop
push
add
push
int
data16
jp
inc
clc
fistps
add
pop
sti
push
xchg
loop
or
add
rorb
ret
dec
jne
add
clc
xchg
push
add
dec
gs
stos
cmp
add
jge
add
add
into
pop
pusha
add
pop
inc
clc
mov
clc
xor
add
add
lods
xchg
pop
scas
stc
xchg
fistpl
jg
ret
add
and
add
add
add
clc
mov
push
clc
inc
add
dec
xchg
push
add
adc
add
pop
out
das
out
xor
add
add
cmp
clc
pushf
xchg
add
add
add
jecxz
or
clc
std
xchg
add
add
inc
clc
and
add
add
push
or
add
inc
clc
inc
clc
movsb
clc
cmp
test
cmp
clc
cli
cmp
cwtl
dec
test
jl
add
cmp
clc
cmp
inc
add
cltd
jne
scas
je
fdivs
add
cmp
add
daa
clc
mov
add
clc
pop
call
loope
in
cwtl
fnstsw
dec
and
in
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
dec
sbb
xor
je
loope
inc
add
xchg
pop
adc
add
add
outsb
aas
xor
add
add
stos
outsb
mov
add
icebp
lea
addr16
and
lods
ss
inc
clc
and
add
inc
clc
fisubrl
aam
add
cmp
add
sar
inc
clc
out
push
add
clc
push
add
lcall
clc
mov
push
addr16
mov
dec
cli
inc
clc
mov
fnstcw
push
aam
and
add
repz
cltd
mov
add
outsb
je
clc
jne
or
ss
xlat
test
rclb
fcomip
pop
adc
add
clc
cmpsl
clc
xbegin
clc
cs
clc
cltd
or
add
popa
add
push
xor
adc
add
add
push
ret
imul
sbb
add
mov
sbb
push
cmp
add
add
mov
pusha
add
jno
add
cli
ja
clc
mov
clc
xor
add
popa
add
cmp
push
cmpsb
clc
jg
xchg
mov
add
sahf
aas
sbb
imul
icebp
bound
add
test
xor
add
dec
ret
push
mov
mov
xor
add
fidivs
clc
mov
adc
add
int
add
sub
clc
xchg
dec
dec
sbb
dec
mov
add
fisubrs
aad
add
test
dec
je
add
or
push
jmp
test
mov
push
popf
dec
pop
cwtl
fistpl
xchg
and
add
add
inc
clc
sub
lret
lahf
add
push
add
jmp
clc
xchg
xchg
outsl
cmp
jg
cld
jmp
je
add
fcmovu
pop
aas
dec
pop
sub
in
mov
inc
clc
sahf
push
jmp
sub
pop
cmpsl
clc
mov
add
clc
decl
mov
sub
jb
add
clc
jl
inc
add
mov
add
add
clc
fstl
out
or
jmp
xor
add
sti
push
popa
cld
jmp
nop
das
and
sub
add
add
add
enter
inc
ss
ret
add
scas
xchg
in
int3
and
add
add
add
clc
out
data16
outsb
adc
pop
arpl
add
xor
add
mov
cmp
clc
push
call
xor
sub
cwtl
out
mov
clc
mov
lret
fs
stos
adc
add
clc
mov
test
ja
add
insl
js
testl
lods
jbe
clc
ret
clc
enter
add
xor
add
clc
iret
data16
sub
dec
xbegin
jmp
cld
jmp
sub
xchg
pop
dec
push
mov
ss
ret
pop
movsb
push
movsl
clc
xchg
ret
push
add
insl
ss
arpl
add
clc
jne
clc
gs
daa
clc
lods
add
add
sub
faddl
lcall
add
mov
pop
clc
test
push
add
test
clc
jmp
add
mov
cli
pop
jns
add
dec
test
sub
aaa
loopne
inc
clc
out
jno
add
lret
test
xlat
cmp
clc
jge
clc
sbb
clc
mov
adc
add
add
stc
shlb
add
mov
gs
pop
xchg
test
imul
dec
pop
std
xor
add
cmp
add
test
mov
add
sti
aas
popf
icebp
lahf
xor
add
mov
cld
jmp
cwtl
push
test
cmp
ret
add
out
in
add
add
adc
add
clc
jb
add
add
bound
add
add
mov
mov
clc
js
dec
mov
cld
jmp
ja
pop
fs
add
add
hlt
aaa
dec
pop
pop
xor
add
cmp
decl
xchg
mov
xor
xor
add
aad
add
shlb
clc
ja
das
imulb
add
and
add
add
in
cmp
push
cld
jmp
add
add
mov
add
fdivrs
das
and
sub
push
add
add
push
push
add
outsl
lods
or
cmp
jecxz
cmp
lcall
fbld
add
scas
gs
mov
clc
or
cmpsl
clc
push
cmp
xor
add
cld
jmp
movsb
orb
addr16
sub
je
sar
clc
fidivs
add
movlps
add
add
xchg
fwait
push
add
inc
add
push
add
mov
jo
add
push
daa
clc
cmpsl
clc
cmpsl
clc
sbb
jmp
sbb
xor
std
test
mov
clc
jne
lock
add
cli
and
clc
pop
adc
mov
add
imul
add
add
add
clc
jmp
jp
ss
ss
rcrl
clc
cwtl
addr16
push
add
sbb
clc
bound
add
mov
fidivrs
dec
jb
add
mov
cld
jmp
adc
test
lods
xor
pop
clc
cmp
add
sahf
sbb
movzwl
cld
jmp
je
pop
and
cmp
and
add
push
inc
clc
sub
rolb
clc
lret
inc
clc
dec
loop
push
mov
mov
add
testl
jge
loop
cmp
loop
movsl
clc
push
or
clc
pop
hlt
cli
js
adc
add
jg
clc
mov
loope
cmpsb
clc
syscall
clc
xchg
and
mov
lods
out
cmc
dec
adc
add
add
adc
add
or
add
inc
clc
fdiv
xor
add
lcall
int3
jp
negb
mov
mov
mov
flds
mov
clc
ss
ret
jg
cmpsb
adc
add
ret
clc
mov
xor
xabort
clc
xlat
inc
add
add
add
clc
cmp
cld
movsb
clc
iret
pop
data16
push
sub
lods
ret
clc
cwtl
inc
add
movsl
clc
push
clc
jp
inc
add
pop
ss
pusha
add
imul
clc
stc
mov
int
add
lock
cmpsl
clc
xchg
ret
clc
js
mov
clc
xchg
sar
adc
add
inc
add
or
add
clc
cmpsb
clc
xchg
test
mov
add
add
fs
fs
sbb
jmp
cmp
sub
inc
clc
xabort
or
icebp
std
sar
in
pushf
dec
test
gs
sbb
cs
add
add
xchg
mov
xor
add
clc
arpl
add
es
mov
add
push
add
adc
clc
repz
mov
adc
xchg
popa
add
add
add
pop
xlat
mov
mov
cld
jmp
push
fwait
xchg
mov
out
movsl
clc
adc
add
test
mov
add
scas
push
add
push
pop
movsl
clc
xor
clc
dec
fbld
test
pop
mov
leave
push
negl
mov
clc
xor
add
jb
add
mov
jmp
loop
and
add
sbb
mov
mov
clc
mov
cmp
add
repz
stos
dec
test
and
add
dec
sti
cmp
mov
inc
add
push
movsb
jb
add
das
sub
leave
outsb
sub
sbb
sbb
add
cmp
clc
enter
add
xor
add
add
cmp
add
add
push
mov
aaa
dec
adc
test
mov
add
jmp
mov
or
add
jae
add
fildl
add
add
ljmp
sahf
addr16
in
cmp
lock
clc
adc
add
bound
add
pop
mov
leave
cmp
inc
add
adc
add
clc
imul
xor
add
jb
add
add
fadd
clc
pop
xchg
adc
add
add
roll
add
push
add
mov
add
pop
gs
cmp
add
sbb
pop
inc
clc
cmp
xlat
imul
ret
clc
pop
adc
add
lret
add
adc
add
add
cld
jmp
test
jmp
xchg
in
adc
add
jne
cld
jmp
in
add
add
mov
pusha
add
je
add
xchg
xabort
sub
das
cmp
jne
and
add
fs
mov
imul
jle
outsb
sbb
mov
repnz
lret
imul
add
add
add
mov
xchg
test
add
pop
clc
in
cmp
or
ds
adc
insl
stos
mov
xor
cld
jmp
xor
ja
clc
xchg
idivb
clc
mov
add
jmp
lods
push
push
add
sbb
mov
mov
add
sti
in
push
mov
add
clc
loop
lret
push
aaa
jg
clc
and
add
mov
ss
add
jns
ljmp
add
lods
out
mov
or
sbb
push
add
cld
jmp
es
jmp
sbb
add
popf
int3
fnstcw
or
mov
cld
jmp
es
and
add
xchg
push
inc
add
xor
add
sub
and
add
add
pop
mov
or
add
adc
add
clc
cmp
clc
aas
rcll
clc
add
add
sbb
xchg
mov
clc
mull
add
cmp
xbegin
fs
hlt
or
clc
jp
add
lock
inc
clc
adc
add
add
es
lods
out
inc
clc
jne
push
xchg
cmpsl
clc
xor
add
clc
pop
xor
jne
add
bswap
and
add
gs
test
mov
add
jmp
movsl
clc
addr16
fbstp
sub
jmp
and
adc
and
add
add
cmp
sar
adc
add
clc
mov
add
pop
bound
add
mov
les
jmp
lea
sub
add
add
pusha
add
sub
ret
mov
inc
clc
cmp
push
mov
or
cld
scas
lret
add
xbegin
xor
add
clc
aam
inc
add
out
in
inc
add
adc
add
xchg
inc
add
sub
pop
add
add
inc
add
or
sbb
add
xchg
fwait
ret
cld
mov
mov
fimull
sbb
clc
enter
lret
clc
rcrl
add
add
clc
test
jecxz
sahf
dec
int3
jecxz
adc
add
add
clc
mov
filds
lcall
add
and
ss
cmp
add
or
gs
ds
xlat
push
out
or
push
dec
mov
loopne
cmp
inc
clc
sti
pop
fs
xor
or
outsl
clc
xchg
xor
add
clc
and
add
fdivl
cmpsl
clc
enter
daa
clc
aam
add
or
add
add
xchg
inc
add
int
test
jb
add
and
add
xchg
mov
jge
add
lea
sub
add
add
push
jno
add
mov
add
or
add
mov
cli
cli
lods
clc
loope
cmp
dec
hlt
jg
imul
data16
dec
xchg
lcall
cmp
scas
ret
push
add
mov
clc
push
add
push
outsl
lods
movsb
clc
add
add
mov
cld
jmp
sub
lea
inc
add
out
je
mov
test
clc
dec
roll
add
push
add
cmp
push
insb
test
out
pop
xchg
or
rcr
pop
sar
dec
jmp
adc
add
xor
aas
mov
pop
add
jns
clc
adc
dec
roll
cmp
clc
cltd
push
add
lock
add
push
jg
rep
cmp
pop
rcll
push
aad
popl
clc
cmp
add
cld
inc
add
out
rorl
gs
inc
add
sub
jp
push
add
push
add
dec
xbegin
jo
add
or
clc
faddp
clc
adc
add
test
js
pop
cld
jmp
sub
repnz
add
clc
fcomi
xchg
lods
add
add
inc
clc
and
add
int3
xor
lret
movsb
cld
jmp
cmpsb
pop
sub
clc
jmp
ljmp
clc
std
hlt
cmp
insl
xchg
inc
add
adc
add
xchg
fwait
loope
pop
js
cs
idivb
cmp
pop
nop
mov
add
cld
jmp
push
push
add
insb
enter
or
clc
stos
lock
add
add
cmpsl
clc
pusha
add
xchg
jnp
xabort
add
xor
add
clc
xchg
jmp
jmp
popaw
pop
xchg
sbb
pushf
cld
jmp
cmp
test
clc
cld
cltd
mov
clc
mov
clc
pop
pop
mov
clc
jge
and
mov
xabort
add
sub
add
clc
mov
std
sbb
jl
fcmovbe
outsl
imul
sub
add
pop
push
mov
rcll
add
xor
add
fnstsw
xchg
outsb
pop
clc
neg
sub
clc
xabort
pop
cmp
dec
out
xchg
dec
xchg
sub
clc
jle
pop
enter
fucomip
inc
add
es
xor
add
add
vcomiss
xchg
push
add
xchg
inc
add
and
add
jmp
fs
clc
sbb
add
ss
add
jp
clc
add
pop
fldl2t
push
sahf
push
add
jae
add
push
push
mov
pop
cli
inc
mov
add
and
cld
jmp
cmp
push
adc
jmp
popa
je
mov
add
mov
mov
cmpsb
clc
std
test
mov
add
xchg
xchg
inc
add
fcomp
add
add
lahf
mov
and
add
and
add
std
and
push
add
shlb
add
fs
and
add
push
add
or
cmp
add
ja
add
xbegin
aas
xchg
scas
jae
add
mov
dec
adc
add
clc
dec
shlb
and
xor
add
add
sub
insl
mov
clc
scas
sub
inc
add
sbb
clc
repnz
add
clc
aas
pushf
cmp
clc
and
add
ss
jmp
mov
rolb
iret
dec
into
adc
add
test
add
add
movsb
clc
add
add
push
add
or
clc
loop
push
or
clc
pop
clc
ds
clc
lods
bsr
mov
pop
jns
pop
pop
scas
jl
or
clc
mov
xchg
outsl
inc
add
jp
pop
pop
jne
add
mov
call
cld
jmp
test
xchg
inc
clc
enter
out
test
clc
rclb
clc
sub
add
out
mov
jp
data16
dec
cmpsb
clc
fwait
pop
clc
inc
clc
jge
clc
lods
sub
clc
xchg
adc
cmp
clc
cmpsl
clc
jbe
jb
add
cmp
decl
test
xchg
add
cld
jmp
xchg
inc
add
mov
jno
add
xchg
call
and
add
cmp
add
clc
add
add
fsubrp
xor
add
ficomps
add
adc
add
pop
ret
outsb
rorl
adc
add
insl
scas
push
add
vminps
repz
test
mov
lods
sahf
inc
clc
push
add
aas
xor
add
push
push
add
mov
add
insl
jecxz
addr16
sbb
call
add
cld
jmp
test
inc
clc
mov
int
cmp
xchg
mov
mov
clc
and
hlt
mov
dec
popf
lods
dec
or
out
je
out
push
icebp
fldt
clc
xchg
inc
clc
in
gs
pushf
jne
sar
leave
cmp
clc
jle
clc
xor
sarl
fstl
push
cld
jmp
ja
loop
inc
add
mov
add
clc
inc
add
int3
mov
mov
out
sti
sub
fwait
js
mov
flds
add
cmp
clc
cmp
add
push
mov
mov
repz
clc
inc
add
mov
add
sar
negl
notb
add
mov
clc
adc
add
add
clc
push
movsl
inc
add
jmp
add
decl
test
add
cld
jmp
aad
mov
cmp
data16
arpl
add
mov
lea
das
xchg
stos
or
data16
stos
jge
push
jmp
imul
add
clc
sub
pop
cmp
add
push
jmp
cld
jmp
sub
add
and
add
mov
clc
cmp
push
cwtl
jmp
icebp
hlt
adc
clc
or
add
outsb
getsec
jle
sbb
pop
and
loopne
sahf
jmp
add
fsubrl
xchg
mov
add
out
dec
sahf
add
add
pop
sar
add
add
gs
jge
std
roll
dec
adc
add
ss
clc
xchg
pop
xchg
fnsave
add
mov
clc
loop
jns
xbegin
add
add
add
icebp
repz
clc
mov
dec
cwtl
imul
add
repz
inc
add
sub
clc
cmp
in
stc
sbb
aad
add
sbb
xchg
or
xchg
int
shrb
pop
fldenv
cmp
add
mov
jge
clc
ljmp
jmp
mov
or
add
sar
clc
pop
in
inc
add
loop
or
ss
ret
push
subb
aad
and
int3
inc
clc
inc
add
xor
add
cld
jmp
popa
push
adcb
and
popa
add
inc
add
mov
imul
add
add
call
mov
and
push
sub
insb
and
lock
cltd
xchg
push
clc
mov
cmp
insl
nop
fisttpll
je
cld
jmp
pop
mov
clc
arpl
add
add
push
cs
dec
sub
das
adc
add
test
add
decl
test
jmp
pop
into
cmp
clc
push
call
ss
ret
dec
xchg
sbb
add
in
xchg
add
add
or
add
leave
inc
clc
pusha
add
dec
icebp
xchg
sub
add
test
add
cmp
jg
cwtl
std
icebp
add
add
clc
pop
xor
add
add
and
add
clc
int3
movsb
clc
adc
add
clc
cmp
add
xor
add
insb
or
mov
inc
add
dec
add
add
divb
add
and
add
clc
rcrb
add
repnz
clc
fisttpl
out
lods
loop
mov
xchg
add
fwait
dec
or
fwait
add
add
rcl
cmp
clc
jno
add
add
cmp
lock
or
pop
insl
mov
add
popa
add
xchg
cmc
std
outsl
push
add
cmp
cmp
lahf
mov
adc
add
add
or
pushf
add
add
mov
jbe
cld
jmp
aas
cmpsb
sub
jge
lods
adc
add
xchg
jbe
xchg
mov
in
xor
add
add
mov
clc
pop
clc
fs
cmp
mov
add
repnz
clc
mov
add
cld
jmp
add
clc
adc
add
clc
xor
add
hlt
push
add
mov
push
xchg
cmp
add
into
stos
mov
mov
xchg
int3
lods
xchg
cmc
mov
lret
int
psrad
scas
push
inc
clc
xchg
mov
mov
mov
cmp
add
or
clc
adc
add
add
fisttpl
push
clc
cmp
clc
ss
fcoms
add
add
add
add
movsl
clc
adc
ret
lahf
and
add
outsb
lahf
push
add
push
add
lock
test
aad
cld
int
add
sbb
outsl
popa
fs
jmp
sub
push
outsb
add
add
add
imul
test
add
fucomp
shr
lahf
push
loope
pop
jne
xabort
xor
repz
clc
add
add
clc
insl
filds
add
clc
in
cmpsl
clc
bound
add
push
mov
pop
add
pop
add
push
jb
add
adc
push
xchg
inc
add
sub
or
fs
iret
push
add
ljmp
clc
test
dec
sbb
inc
popl
add
sbbb
add
ret
sub
clc
mov
add
imul
add
rcrb
testb
sub
mov
in
xchg
jmp
push
add
push
cld
jmp
data16
xchg
jnp
clc
imul
mov
nop
mul
clc
inc
add
ljmp
clc
lcall
outsb
in
scas
es
jl
clc
rolb
add
sbb
xchg
jmp
dec
sbb
pushf
out
xchg
dec
sbb
clc
imul
add
fcompl
add
add
push
adc
pop
das
cmp
push
mov
xor
add
xchg
add
cmp
clc
sahf
popa
add
cld
icebp
mov
rcll
lcall
add
xchg
pop
cmp
fistpll
xchg
ss
es
in
cwtl
push
add
dec
sbb
pop
jae
add
add
loop
mov
testl
cmp
jle
clc
inc
add
movsb
clc
sar
add
add
clc
in
mov
add
fildl
popa
add
outsl
popa
add
sub
ljmp
add
clc
mov
add
adc
add
sar
adc
cmc
imul
out
push
add
cltd
sub
sub
sar
xor
clc
stos
nop
decl
scas
add
movsb
sub
aaa
inc
add
and
add
cli
cmpsl
clc
lea
adc
sub
int3
dec
push
add
dec
push
lret
sbb
cmp
add
shrb
sbb
mov
lcall
jge
clc
xchg
sub
loop
cmpsl
clc
lret
sub
jns
cmp
jle
clc
mov
pop
and
fdivrs
inc
add
jb
add
clc
pop
ror
outsl
sub
clc
addr16
mov
mov
clc
dec
bnd
push
add
lea
mov
pop
mov
sub
loop
pop
dec
sub
clc
cs
clc
test
add
mov
add
add
lcall
mov
clc
mov
pop
leave
in
xbegin
clc
insl
xchg
sub
add
pop
clc
movsl
clc
cld
or
or
jmp
mov
cmp
push
movsb
clc
push
sarb
mov
clc
fimuls
pop
loopne
fldcw
pop
loope
daa
clc
xor
clc
xchg
or
jo
add
push
add
xor
stc
mov
sar
mov
push
add
lea
stos
mov
xor
addr16
mov
mov
imul
add
and
xchg
pop
mov
scas
inc
add
sub
add
add
clc
clc
mov
add
bound
add
inc
add
cmp
adc
xor
add
add
clc
add
add
and
mov
clc
lret
xchg
rcll
mov
inc
clc
std
add
add
clc
xchg
clc
sti
pop
mov
dec
push
xor
cli
outsb
mov
fidivrl
clc
pop
cmp
incl
sti
cld
jmp
inc
das
push
jno
clc
lods
in
add
add
pop
lahf
jo
add
clc
inc
add
hlt
sub
add
mov
lods
into
stos
dec
out
dec
and
xor
add
clc
cmp
addr16
or
fidivrs
clc
imul
ds
ja
pop
test
jecxz
xor
add
clc
ss
outsl
lcall
add
add
xor
clc
sti
dec
test
push
mov
or
sarb
movsl
fistpl
dec
lea
fildl
add
mov
je
inc
cld
jmp
data16
jp
lahf
lahf
cmp
notb
test
clc
xor
add
add
sbb
jmp
aas
and
popa
idiv
mov
lods
out
add
add
movsl
clc
sbb
clc
lock
dec
xchg
pop
outsb
ljmp
add
data16
pop
int3
jg
clc
clc
out
das
clc
fstp
dec
cwtl
cmp
hlt
sar
push
adc
add
jl
sar
jnp
cltd
jecxz
sar
dec
ret
add
push
iret
push
cmpw
cld
jmp
nop
int3
mov
adc
add
xchg
scas
cmp
clc
cmp
loop
arpl
add
clc
or
cltd
push
add
rcll
cld
jmp
pop
sub
andb
mov
add
stos
and
add
push
clc
mov
popa
add
aaa
test
jae
add
xchg
arpl
add
js
xchg
mov
sbb
idiv
mov
ss
repnz
fistpll
clc
mov
clc
daa
clc
int
aaa
in
mov
dec
mov
xbegin
cwtl
pop
ret
mov
clc
inc
clc
dec
outsb
sar
cmc
cmp
aaa
jp
movsb
clc
pop
aaa
incl
enter
pop
add
nop
sahf
pop
sub
lret
or
sahf
mov
mov
bound
add
add
aad
push
add
add
rclb
add
xchg
xchg
mov
pop
fs
sbb
sub
sub
aad
add
mov
push
sbb
jmp
add
sahf
sub
push
push
cld
jmp
sub
inc
add
cmp
add
fstps
pop
divl
inc
add
stc
shrl
ret
clc
jae
add
add
add
add
jmp
push
adc
add
or
cmc
mov
inc
clc
jbe
add
jb
add
add
add
add
mov
pop
or
dec
or
add
add
inc
add
ret
clc
loopne
es
add
add
addr16
mov
push
clc
and
add
clc
adc
add
clc
aaa
mov
add
adc
add
pop
mov
dec
jge
clc
xchg
notl
add
add
add
xor
add
or
mov
add
and
add
add
push
je
mov
leave
enter
pop
das
jae
add
xor
test
xchg
mov
xor
and
cld
jmp
test
cmpsb
clc
jl
mov
add
fs
jne
clc
dec
lret
outsb
mov
mov
add
add
or
sbb
jb
add
or
sbb
add
clc
xchg
xchg
in
xor
add
and
add
sub
mov
xlat
js
sub
dec
xor
clc
mov
sar
lret
add
cmp
push
movsb
clc
addr16
aad
xor
aas
dec
sar
clc
sbb
add
mov
mov
ret
clc
xor
pop
insb
adc
add
fildll
mov
add
xor
add
push
pop
lea
add
ja
sub
clc
into
push
clc
cld
es
mov
clc
fcmovnbe
xor
add
clc
out
inc
clc
icebp
cmc
mov
sub
or
lods
sub
add
pop
or
dec
adc
add
js
jl
add
mov
push
add
aas
sub
add
outsb
pop
xchg
add
add
pop
or
mov
call
ss
ret
add
add
jle
clc
cmp
dec
push
scas
sbb
add
loop
stos
xchg
call
add
push
add
inc
add
in
mov
clc
jp
add
cli
ficoms
add
rcrl
add
cltd
push
add
sbb
add
hlt
and
add
add
push
xchg
jbe
movzwl
cld
jmp
test
clc
and
clc
jl
cwtl
fidivs
clc
push
add
push
add
push
in
jno
add
icebp
ds
sbb
clc
mov
clc
out
push
push
ret
lods
push
js
mov
cmp
add
dec
inc
add
test
jl
sub
cld
jmp
test
add
lahf
inc
clc
sbb
cmpsb
clc
int3
push
add
mov
scas
pop
sub
aaa
add
mov
add
add
add
je
aaa
sub
add
add
out
jle
or
lea
rcll
jg
adc
das
loopne
mov
sub
add
outsl
insb
pop
and
jns
pop
test
mov
ss
mov
cld
jmp
sub
imul
loope
inc
clc
in
lods
xor
add
add
inc
clc
xchg
mov
clc
pop
pop
push
add
cmc
mov
std
hlt
test
clc
mov
cmpsl
clc
xchg
dec
xchg
sbb
mov
into
add
add
clc
or
test
mov
jl
xchg
mov
pushf
mov
clc
data16
pop
dec
jle
add
pop
and
add
aad
mov
clc
add
add
clc
pop
xchg
scas
jge
cli
repz
je
data16
loope
ficompl
add
push
clc
dec
shrl
sbb
clc
add
add
sub
jmp
data16
mov
clc
nopl
push
ret
inc
es
je
clc
sahf
push
add
sbb
push
jl
leave
sub
std
jo
add
pushf
stos
addr16
aaa
pop
dec
or
cmp
clc
repz
lahf
popf
inc
clc
popf
xor
add
add
add
rep
xchg
add
add
hlt
movsb
clc
flds
add
insb
imul
xchg
pushl
shlb
adc
scas
cwtl
divb
add
lea
add
add
popa
add
daa
clc
pushf
cmp
and
add
xor
add
add
in
arpl
add
mov
dec
mov
insb
imul
test
clc
cmpsb
clc
sub
add
cmp
push
add
push
add
movsb
clc
fldenv
add
clc
in
es
cmc
inc
clc
xchg
pop
loope
lock
pushf
mov
or
das
hlt
repnz
xchg
mov
sub
mov
mov
clc
xchg
cmp
mov
add
add
and
add
push
add
cld
jmp
sub
test
in
fistpll
sub
push
addb
imul
add
leave
sar
sub
clc
lock
repz
cwtl
into
testb
pop
ljmp
xor
add
add
fidivrs
jmp
add
mov
inc
add
adc
add
fidivrl
clc
cmp
mov
xabort
add
enter
add
add
add
add
add
push
sub
push
movsb
clc
insl
dec
jp
and
pop
cmp
xor
add
fwait
lcall
pop
jmp
inc
add
scas
xchg
adc
add
xor
enter
mov
add
out
pop
int
mov
push
sub
pop
clc
jnp
jns
pop
dec
aaa
mov
cmp
mov
clc
outsb
sub
and
ficompl
jp
call
lcall
das
leave
arpl
add
pusha
add
test
mov
cld
jmp
lea
jp
clc
popa
add
das
xor
clc
jnp
add
jo
add
sub
add
xchg
mov
insb
or
clc
sbb
test
rcll
add
clc
and
add
shrb
add
daa
clc
cmp
mov
or
pop
clc
mov
clc
dec
stos
cmp
nop
add
addr16
push
jmp
adc
in
popa
add
jno
add
enter
pusha
add
pop
clc
lret
push
add
test
call
cld
jmp
xchg
es
mov
insl
mov
lea
pop
xchg
cs
call
jo
add
clc
jo
add
clc
sbb
sub
xor
add
add
pop
pop
dec
lahf
jbe
cltd
xlat
out
sub
loopne
pop
lahf
pop
clc
in
clc
sub
add
test
inc
clc
and
add
cmp
mov
cld
jmp
sub
push
cld
jmp
add
jno
pop
mov
mov
add
clc
cli
inc
clc
pop
cmp
sti
dec
xor
outsb
push
sub
sub
clc
loope
or
cmp
push
add
cmp
xchg
mov
inc
xor
cld
jmp
add
mov
inc
clc
push
add
cld
jmp
push
push
push
push
add
arpl
add
add
clc
sub
mov
clc
ret
clc
test
movsb
clc
loope
xchg
jns
cmp
adc
or
clc
mov
dec
insl
sbb
clc
lock
mov
outsb
adc
add
clc
lahf
imul
enter
js
es
sub
or
or
cld
jmp
add
add
add
add
sar
sbb
pop
dec
sar
push
dec
cld
jmp
sub
or
inc
add
fidivrl
add
mov
clc
jg
clc
cs
repz
aad
add
lea
push
clc
lret
cld
jmp
adc
sub
addr16
fwait
jl
mov
pop
pusha
add
sub
add
push
pusha
cld
jmp
push
mov
test
jge
clc
jl,pt
cmp
mov
outsl
lea
add
ret
or
xor
add
clc
insb
ret
clc
cmp
add
mov
clc
movsl
clc
loop
inc
clc
imul
xlat
ljmp
clc
test
and
add
sbb
frstor
je
clc
inc
clc
arpl
add
jge
add
add
add
fistl
jecxz
repnz
add
je
clc
iret
decl
push
ret
cmpsb
scas
sbb
inc
clc
sub
in
fsts
mov
and
loopne
and
add
dec
or
insb
push
jle
movsb
clc
sub
xchg
mov
clc
jmp
arpl
jmp
push
sbb
sub
add
mov
mov
push
jle
clc
adc
add
iret
data16
sbb
clc
loopne
xabort
sbb
pop
jns
mov
cld
jmp
jg
addb
add
jl
enter
xchg
scas
inc
clc
fldt
aaa
sub
insb
pop
jbe
scas
cmovp
add
jbe
adc
add
jmp
aas
data16
lock
fstpl
push
clc
fstpt
adc
add
hlt
add
call
add
add
jb
add
dec
xchg
xor
add
pop
es
pushf
jle
popa
cld
jmp
sub
sub
mov
in
rclb
inc
add
mov
in
and
add
sbb
jno
add
iret
pop
fnstcw
pusha
add
dec
pop
push
xchg
mov
clc
inc
clc
xor
add
mov
xor
add
dec
sub
add
xor
add
imul
jnp
mov
out
fisttpll
clc
loopne
lock
jo
add
aas
mov
push
and
add
jb
add
inc
clc
sbb
clc
dec
mov
fadd
clc
pop
in
pop
push
add
mov
clc
mov
xabort
add
movsl
clc
repnz
add
mov
add
add
int
xchg
in
clc
sar
jne
cld
jmp
and
add
clc
sar
lea
cld
jmp
dec
push
imul
add
fwait
imul
movsl
clc
jge
cmp
pop
packsswb
add
mov
add
imul
incl
inc
cmp
jmp
pop
pop
adc
int3
xlat
and
add
clc
sbb
mov
xor
add
lods
imul
cmc
jno
add
clc
cmp
clc
lea
pop
xchg
mov
ret
clc
sub
fcmovb
clc
inc
clc
sar
clc
ret
clc
jle
add
rol
clc
pop
clc
push
add
jmp
cmpsb
sbb
clc
fs
je
stc
nop
or
inc
add
std
fsubrs
fisubl
and
clc
jne
add
shlb
add
inc
push
adc
cld
jmp
add
imul
add
paddusb
mov
add
or
add
add
clc
popa
add
stos
add
add
add
clc
sub
clc
decl
test
sub
add
jmp
xchg
add
add
add
mov
add
enter
add
jecxz
push
add
cld
jmp
cmpsb
sub
sub
adc
add
pop
add
add
xchg
imul
jge
clc
jl
add
gs
xor
add
add
fstpt
cmp
imul
and
add
hlt
cld
sub
clc
jb
add
clc
mov
mov
adc
add
clc
idivl
pop
lods
cwtl
lea
faddl
add
sub
add
xchg
cmp
decl
ss
ret
or
cld
shrb
insb
out
repnz
add
aam
add
mov
mov
insl
lods
movsl
clc
pop
push
add
hlt
es
loopne
paddd
clc
add
add
add
add
xchg
push
lods
popf
imul
inc
clc
xor
add
add
dec
mov
pushf
test
clc
ret
xchg
pushf
test
ficomps
popf
sub
pushf
adc
add
add
add
lods
push
mov
cld
jmp
sub
shll
sub
cmpsb
das
imul
js
add
add
dec
test
clc
pop
jbe
sub
add
gs
sbb
ret
clc
add
add
pop
mov
popf
shll
outsb
push
es
push
addr16
cmp
pop
or
aam
add
test
jae
add
divl
inc
add
hlt
add
stos
sub
fdivs
out
add
add
aas
xchg
in
mov
mov
add
je
sbb
ret
pop
inc
clc
ljmp
add
add
rcl
int3
popa
add
xor
mov
cld
jmp
dec
test
loopne
pop
clc
mov
aam
add
xor
add
push
jns
xchg
push
add
sub
jp
cld
mov
lea
insb
cmpsb
clc
loope
inc
add
repz
aad
xor
add
pushf
sbb
clc
adc
pop
mov
jmp
add
jno
add
push
clc
jmp
and
add
lret
add
add
clc
fs
scas
movsl
clc
insb
repz
popf
cmp
mov
jg
lods
inc
clc
jecxz
lods
fbld
clc
popf
inc
clc
pop
addr16
cwtl
and
add
clc
mov
pop
mov
imul
push
sub
cld
jmp
nop
ja
cwtl
mov
mov
popf
dec
bound
add
clc
adc
add
test
add
add
dec
pop
mov
xor
add
cmpsl
clc
adc
jl
clc
pop
ds
push
cmp
cld
jmp
jp
push
fs
inc
clc
push
cmp
lock
inc
add
outsl
insb
pop
jno
mov
insl
xchg
bound
add
add
push
out
mov
xchg
push
clc
sbb
sar
pop
sbb
sub
test
jae
add
xlat
cmp
inc
insb
insb
cld
jmp
and
clc
sar
xor
testb
clc
fsubs
mov
add
xabort
cmp
popa
add
in
test
jo
add
inc
add
movsl
clc
mov
xchg
add
push
sub
fwait
xchg
repnz
clc
pop
pop
mov
clc
sbb
clc
shlb
mov
add
dec
sub
xor
add
mov
cld
jmp
pop
lret
pop
pop
mov
clc
imul
mov
and
add
add
push
add
adc
addr16
sar
inc
clc
rcll
add
fisubs
clc
clc
hlt
mov
dec
scas
jmp
clc
ja
outsl
mov
call
fstl
add
loopne
or
scas
xabort
ret
pop
mov
xor
add
add
jge
lret
jne
clc
xlat
sarl
pop
add
add
mov
pop
pop
xchg
adc
add
push
fs
icebp
xor
add
add
xchg
shll
fstp
mov
add
mov
fsubrs
cli
int
popf
daa
clc
fwait
enter
and
loope
mov
je
flds
imul
push
cwtl
push
jmp
push
sub
mov
push
add
fisttpll
jno
add
add
pop
xor
add
clc
cld
jmp
sub
sbb
clc
stos
loop
jns
pop
cwtl
inc
add
sub
pop
and
add
lahf
addr16
mov
or
test
add
add
dec
xor
add
cmp
sti
mov
cld
jmp
mov
jg
jecxz
clc
lret
movsl
clc
imull
clc
add
add
gs
lcall
xor
mov
dec
lret
pop
clc
cmpsb
clc
lock
add
add
jbe
hlt
cmp
fsubs
lea
inc
clc
movsb
clc
sar
pusha
add
fistpll
or
cld
jmp
insb
scas
mov
add
add
mov
add
out
adc
add
add
add
mov
clc
in
jg
clc
out
aaa
rcrb
fidivl
insb
cmp
in
scas
pop
cmp
cld
jmp
inc
dec
sub
sar
add
cmpsb
clc
pop
out
mov
add
pop
popa
add
cwtl
bound
add
clc
insl
inc
clc
popf
sub
add
sbb
mov
clc
add
clc
add
add
mov
add
add
fucomip
mov
add
jmp
add
add
fsubrp
add
add
push
int
sbb
clc
int
add
pop
and
add
test
clc
jge
mov
repz
add
rorl
add
clc
and
add
stos
xor
add
stos
outsl
js
pushf
addr16
inc
add
xlat
lahf
cltd
and
add
push
add
int
adc
add
or
scas
lea
cmp
clc
das
jmp
cld
jmp
inc
mov
clc
sub
cmpsb
clc
xabort
mov
sbb
add
cmpsb
clc
pop
notl
add
dec
clc
cld
and
test
add
sbb
clc
jmp
add
cwtl
outsb
movsb
clc
leave
sahf
pop
mov
cmp
clc
and
add
clc
dec
pop
insb
xchg
mov
inc
add
push
add
call
clc
sbb
push
cmp
sbb
pop
clc
jl
fwait
mov
add
jno
add
clc
cmpsb
clc
jbe
loope
push
fs
and
add
stos
pop
pop
fadd
clc
data16
int3
push
add
ficompl
cmp
mov
jmp
daa
clc
jmp
sub
out
xchg
and
add
test
lahf
cmp
clc
pushf
lahf
bound
add
add
push
clc
aaa
js
mov
inc
clc
adc
add
pop
clc
push
sbb
clc
xchg
mov
push
add
inc
add
incl
cli
lcall
push
dec
das
cmpsl
clc
mov
add
clc
xchg
cmp
clc
xor
clc
negl
pop
jne
mov
and
add
fistps
or
aas
xchg
sbb
xlat
push
stos
test
aaa
sub
dec
push
add
jl
clc
sar
mov
or
clc
pop
mov
or
fdivrl
loopne
xor
add
in
dec
icebp
push
add
cld
jmp
das
push
dec
test
add
or
mov
iret
icebp
push
stos
cld
jmp
test
push
lods
inc
add
data16
imul
clc
push
pop
repz
pop
lcall
add
inc
clc
das
mov
add
push
frstor
add
and
add
clc
daa
clc
fsubl
add
clc
mov
inc
clc
or
add
clc
inc
clc
mov
pop
faddl
add
outsl
mov
int3
ja
add
aad
lahf
mov
sti
sub
aad
sub
iret
xbegin
mov
xchg
add
add
cld
jmp
sub
clc
sahf
and
add
ret
clc
jbe
jae
add
inc
add
icebp
shll
add
clc
pop
cltd
jnp
cmp
stc
add
add
jmp
clc
pop
or
mov
clc
mov
or
sub
sub
fsubs
add
repnz
lock
clc
dec
adc
inc
add
jnp
xchg
leave
xchg
data16
add
movsb
clc
lret
pop
cltd
test
pop
xor
add
clc
pop
shrb
add
add
and
imulb
cmpsl
clc
rclb
add
sub
add
add
xor
add
fcompl
dec
mov
add
inc
clc
mov
stos
mov
aas
mulb
out
in
js
imul
leave
sbb
mov
or
mov
clc
or
add
and
add
and
add
test
cld
jmp
push
fnstenv
and
add
mov
jnp
mov
clc
push
nop
inc
add
dec
and
je
add
ss
ret
cmpsb
mov
xor
add
add
xchg
outsl
movsb
clc
gs
mov
xor
add
adc
add
mov
cld
jmp
or
clc
cmpsb
clc
xchg
in
mov
outsb
sbb
iret
js
and
add
add
repnz
adc
cmpsl
clc
cmp
cmp
clc
icebp
ror
cltd
mov
add
clc
ds
add
scas
sbb
cs
and
add
xor
add
add
add
fadds
add
stos
fbld
adc
clc
mov
cld
jmp
ja
clc
sahf
daa
clc
cmp
dec
pusha
add
mov
xlat
xchg
jp
add
sbb
add
sub
clc
lods
adc
add
inc
add
scas
and
add
pop
mov
add
xor
mov
mov
clc
data16
pop
pop
xabort
and
add
loop
push
pop
lahf
and
add
clc
cltd
push
dec
or
clc
pop
gs
insl
or
mov
add
add
clc
enter
jp
add
mov
mov
out
xor
add
addr16
cmpsl
clc
stos
aam
clc
mov
clc
jge
add
mov
cmp
clc
cmpsb
clc
enter
mov
clc
data16
xlat
lock
jge
movsl
clc
xchg
pop
sti
mov
clc
jbe
cmp
add
mov
jns
pop
mov
clc
inc
add
dec
loop
pop
lahf
cwtl
ss
je
push
pop
outsl
daa
clc
pop
imul
sar
clc
stc
in
pushf
inc
clc
jb
add
add
mov
jg
add
repnz
add
jae
add
movsb
clc
in
ud2
pop
clc
or
and
add
fs
pop
mov
cmp
sub
push
add
add
add
add
stos
xor
int
leave
pop
jmp
in
enter
add
sbb
inc
add
es
popf
xor
add
movsl
clc
push
ret
clc
cli
jae
add
clc
out
xchg
sbb
pop
fdiv
sbb
lea
clc
mov
pop
ss
insb
lcall
int3
pop
fs
loopne
cmp
inc
add
mov
add
inc
add
and
add
add
or
clc
jecxz
inc
add
ds
adc
add
sub
jnp
clc
sub
clc
es
mov
push
xor
add
push
push
cld
jmp
sbb
in
cmpsl
clc
fsubr
test
add
sbb
add
mov
or
add
jb
add
rolb
shrl
jne
add
fdivrp
cmp
cld
jmp
sub
add
or
clc
cmp
clc
mov
xchg
jns
stos
sti
scas
or
clc
dec
dec
cmp
clc
push
xor
add
clc
xlat
sub
iret
jnp
inc
add
adc
add
loope
xor
add
ss
add
aam
clc
fstps
clc
push
pop
testb
mov
clc
repz
add
cwtl
pop
mulps
clc
mov
inc
clc
jno
add
dec
adc
add
aaa
fsubp
clc
das
mov
add
or
out
test
out
jp
clc
bound
add
clc
jecxz
pop
dec
scas
div
adc
clc
sbb
es
xor
add
loope
mov
clc
iret
and
add
clc
mov
push
loopne
iret
ds
sar
add
or
xchg
outsl
pop
and
mov
sub
push
ret
sub
insb
add
add
rclb
mov
jmp
inc
clc
imul
call
jno
add
sar
js
push
push
ret
scas
aaa
and
add
add
xchg
sar
cmp
add
push
clc
ljmp
clc
jmp
cld
jmp
inc
pop
sub
sub
sti
int3
mov
cmpsl
clc
aas
gs
mov
jo
add
aad
je
add
add
in
test
dec
jl
add
mov
cld
jmp
sub
jge
hlt
dec
fsubr
and
add
insb
lret
aas
or
push
add
xor
add
add
clc
cmp
insl
repnz
xchg
jp
jb
add
add
push
clc
stos
pop
lcall
out
stc
mov
mov
and
add
pop
movsb
clc
shrb
push
clc
jo
add
mov
clc
pop
popf
arpl
add
sub
cmp
clc
mov
jecxz
and
shlb
mov
gs
out
faddl
add
mov
jle
mov
and
popf
push
mov
ss
ret
sub
sub
sahf
mov
std
xor
add
aad
mov
pusha
add
and
clc
jno
add
sbb
mov
jmp
cld
jmp
cmp
imul
insl
cmp
clc
adc
add
repnz
add
lods
push
jge
jl
dec
dec
es
bndldx
ja
dec
lea
movsl
clc
push
pop
sbb
add
jmp
aam
fstps
add
and
imul
out
scas
mov
pop
pop
jge
rorb
sub
mov
inc
add
fcmovb
clc
mov
inc
add
xchg
mov
inc
add
dec
pop
lret
pop
jl
lcall
clc
push
pop
mov
clc
cld
adc
add
add
outsl
pop
adc
add
adc
clc
dec
int
add
jae
add
aad
xor
cld
jmp
sub
sub
add
fldl
clc
addr16
pop
jb
add
mov
cs
clc
mov
mov
add
imul
cmp
xor
add
mulb
add
cmc
imull
clc
out
and
add
jbe
add
mov
outsb
xor
clc
xchg
jo
add
add
xor
sbb
mov
add
pop
inc
add
inc
add
dec
push
cmp
inc
clc
mov
jbe
in
leave
mov
mov
clc
out
cmp
dec
int3
shlb
add
or
jo
add
mov
clc
cwtl
and
add
add
addr16
cmp
xor
add
add
cld
jmp
jno
jg
scas
stc
jecxz
popf
lcall
add
dec
cmp
mull
jmp
ret
clc
call
add
jno
add
add
test
add
xchg
clc
aaa
and
clc
popf
sbb
dec
add
scas
push
jg
cmpsb
clc
std
push
scas
sar
add
imul
scas
sbb
loope
dec
inc
clc
xor
add
jl
add
fadds
inc
clc
mov
and
or
clc
sar
aaa
sbb
ss
test
dec
add
add
clc
shll
add
out
and
add
jle
add
sub
fdivs
add
sub
add
pop
cmp
jno
add
mov
clc
jno
add
cmp
test
adc
add
cmp
clc
loop
sar
clc
loope
sar
mov
jae
add
xlat
cmp
push
add
cmc
cli
dec
ret
out
add
add
add
clc
lahf
popf
fidivs
add
pushf
adc
add
test
clc
mov
add
add
xor
add
clc
mov
add
add
jmp
push
mov
pop
lcall
add
ret
stos
sbb
push
ret
and
add
inc
clc
pusha
add
push
pop
cld
jmp
popa
mov
and
ror
aad
adc
add
add
sub
add
sub
shl
xchg
bound
add
test
pop
xchg
jg
mov
clc
iret
push
add
pop
mov
inc
clc
dec
cmp
jl
add
add
pop
sbb
fimull
add
imul
add
add
xor
add
test
cld
jmp
mov
icebp
jno
add
out
loop
sbb
jg,pt
xlat
lods
inc
add
je
clc
sbb
add
clc
jle
mov
add
inc
add
repz
add
add
mul
clc
into
sbb
sbb
or
ss
ret
fwait
pop
scas
sbb
add
sbb
clc
ja
aam
clc
sbb
arpl
add
clc
jp
or
clc
insl
das
dec
hlt
pop
or
clc
sar
mov
int3
cmp
insb
ret
fists
jo
add
shll
add
and
int3
inc
clc
pop
xchg
in
outsl
stos
sub
decl
test
push
add
jmp
jne
clc
xchg
xor
ret
clc
scas
leave
pop
clc
fistpll
mov
add
mov
xchg
insb
cwtl
inc
add
pop
mov
add
inc
add
pop
cpuid
clc
aad
dec
dec
int3
cmp
add
sbb
lahf
mov
mov
add
aad
and
hlt
ror
mov
add
add
cmp
fs
xabort
or
or
add
and
add
and
add
ret
or
cli
xchg
daa
clc
out
jne
add
cmpsl
clc
fimull
popf
ud2
stos
add
mov
lcall
es
cli
push
add
xchg
adc
sub
sub
faddl
mov
jle
add
push
inc
add
cmp
xchg
cmp
mov
daa
clc
xor
add
mov
or
stos
insb
in
xbegin
add
sbb
addr16
iret
insl
dec
cmp
inc
add
imul
inc
test
add
scas
and
sub
push
add
imul
cmpsb
clc
dec
pop
inc
clc
out
xchg
lcall
sub
mov
cmp
lret
jge
cld
jmp
je
inc
xor
add
xbegin
mov
mov
cld
jmp
sub
add
clc
pop
icebp
dec
xchg
test
push
push
cld
jmp
sub
sub
push
ficoms
into
sub
add
cmp
cltd
stos
or
xor
push
cld
jmp
or
push
adc
push
fsts
xchg
cmp
lock
xbegin
inc
add
loopne
mov
push
cmp
add
fs
daa
clc
push
add
xchg
fistpl
clc
out
sar
xor
add
cmc
sbb
int3
js
add
mov
jge
xor
jnp
mov
insb
cmp
dec
xabort
push
or
clc
ss
lods
cld
jmp
ja
sub
push
mov
add
mov
inc
add
xchg
inc
clc
movsb
clc
mov
call
xchg
insl
fsubrs
iret
push
fisubrl
ror
scas
pop
push
clc
stos
fs
pop
bound
add
dec
xor
negb
clc
data16
cmp
lahf
fs
sub
add
roll
add
int
add
xlat
push
add
sub
mov
xbegin
xchg
mov
xchg
js
jno
add
and
add
test
testl
xchg
push
add
movsb
clc
push
jne
cld
jmp
fs
pop
fcompl
clc
sub
add
sar
clc
dec
into
cmp
clc
push
add
dec
pushf
ficoml
add
mov
dec
mov
xor
add
fadds
clc
inc
add
pop
sar
ret
clc
sar
cmc
popf
out
cmp
jb
add
xchg
xor
out
repz
add
or
aam
xchg
xbegin
or
nop
rorl
push
add
std
xor
clc
jbe
add
call
add
pop
out
sbb
bound
add
add
inc
clc
jle
sub
clc
xchg
add
add
pop
sub
clc
jecxz
scas
lcall
add
mov
mov
add
mov
jne
xchg
pop
pop
add
add
add
cmp
outsl
repz
fwait
cmp
je
xchg
repnz
es
cmp
add
in
sbb
dec
test
aad
clc
mov
xabort
xchg
push
clc
insl
stos
lods
mov
gs
inc
add
mov
jmp
dec
iret
cmc
jl
jmp
lea
adc
add
int
adc
mov
sbb
add
loope
imul
cmpsb
clc
aad
xor
add
testl
add
xor
add
clc
ss
jb
add
cmc
push
mov
and
jmp
adc
aas
js
clc
add
add
clc
fimuls
or
push
jmp
dec
or
clc
cli
nop
fidivrs
dec
add
push
dec
xor
lea
push
lock
jl
clc
ret
sbb
mov
mov
xchg
lret
incb
add
adc
add
add
aam
clc
scas
imul
add
into
or
clc
rcll
add
ljmp
cld
jmp
xchg
push
add
popa
add
jae
add
adc
add
xchg
xor
xchg
jae
add
add
or
test
add
cmp
stos
lods
jge
clc
out
and
clc
lcall
test
addr16
add
add
mov
mov
add
add
cld
jmp
fwait
dec
andb
add
push
add
cmc
add
add
inc
add
sbb
adc
clc
mov
mov
outsb
pop
xchg
sbb
pop
sbb
test
pop
add
cld
jmp
cs
jecxz
cltd
lcall
cld
jmp
outsl
and
xlat
insb
scas
xor
add
add
out
mov
test
adc
add
pop
xbegin
add
icebp
push
add
or
ja
pop
loopne
gs
out
xchg
fcompl
fsubr
ret
clc
add
add
frstor
pop
pushf
clc
outsb
lock
nop
wrmsr
add
imul
add
push
scas
call
mov
xor
cld
jmp
jp
sub
nop
shlb
add
icebp
movsl
clc
jno
add
clc
clc
push
ss
adc
cmp
mov
clc
xabort
clc
push
test
ficoml
movsl
clc
mov
sbb
push
xor
add
add
add
add
clc
xchg
bnd
add
add
ja
loop
cmp
mov
mov
sar
xor
add
pop
clc
mov
test
xchg
jns
clc
enter
cmp
mov
add
add
add
fs
sbb
cmp
add
add
repz
clc
cmp
add
sahf
jge
sbb
jmp
jg
mov
mov
loop
jg
xchg
das
inc
clc
bound
add
test
and
or
or
adc
xchg
out
leave
fcoms
clc
and
add
enter
add
or
inc
clc
dec
adc
add
sub
push
add
jmp
jnp
sbb
pop
sar
clc
adc
add
jo
add
cmp
jl
clc
daa
clc
or
mov
stos
adc
add
scas
outsb
mov
add
jp
jle
add
mov
jmp
adc
or
fmuls
clc
lock
mov
clc
cmp
add
add
add
gs
test
into
or
popf
std
movsl
clc
cmp
stc
repz
out
ja
add
loopne
popf
push
xlat
sar
decl
das
dec
jno
push
push
cld
jmp
add
fistl
cmc
xchg
mov
xor
add
add
xchg
adc
add
testl
aad
cmpsl
clc
inc
add
jo
add
cld
jmp
push
insb
adc
mov
clc
rorb
mov
clc
into
jbe
jno
add
aas
mov
add
sti
jae
add
clc
sbb
pop
push
add
popa
push
sub
cmp
clc
cmp
add
ret
push
add
sbb
jmp
pushf
test
jns
inc
clc
cmp
add
fistl
ds
clc
lods
mov
cmc
inc
add
loopne
jp
in
out
mov
cwtl
dec
mov
add
leave
adc
add
add
push
ss
ret
and
sub
cmpsb
clc
lods
cmp
inc
clc
xchg
fcomi
std
icebp
repz
clc
faddl
fidivrs
add
out
add
add
add
add
std
dec
adc
add
clc
cmp
lea
jae
add
scas
stos
jne
cs
clc
mov
add
cmpsb
clc
sub
pusha
add
push
out
insb
adc
add
add
out
push
add
xor
add
clc
cmp
dec
push
adc
add
jo
add
out
sbb
clc
pop
xor
add
pop
cwtl
scas
es
mov
xor
clc
or
clc
popa
add
cltd
test
sti
roll
adc
add
add
das
int
xor
add
mov
and
add
test
mov
clc
icebp
insl
add
add
clc
push
sub
clc
xor
add
inc
clc
or
adc
add
or
add
sahf
add
add
xchg
pop
add
add
add
cmp
xor
sbb
das
std
push
dec
std
popa
add
add
add
inc
clc
cmp
add
sar
add
ljmp
add
add
inc
clc
arpl
add
jge
cltd
out
js
push
decl
test
add
cld
jmp
inc
clc
or
and
add
inc
add
sahf
mov
add
adc
add
cmp
jl
pop
sbb
xbegin
add
add
clc
sub
ss
fadds
add
stos
mov
rcrl
jl
aas
add
add
inc
clc
cmp
shrb
add
xlat
jp
nop
sarb
mov
inc
add
dec
test
cwtl
ret
clc
cmp
add
stos
push
pop
add
data16
aaa
inc
jnp
clc
popf
and
add
shlb
add
cwtl
fnstenv
dec
mov
jl
imul
loopne
loope
jmp
dec
int
sbb
pop
cs
add
mov
add
cld
jmp
dec
mov
fs
es
sbb
clc
cs
clc
notb
cmp
fwait
lahf
jne
into
data16
movsb
clc
hlt
cmp
fsts
cmp
add
clc
adc
clc
jo
add
xchg
push
inc
clc
mov
stos
xchg
xor
clc
clc
rcll
scas
sbb
mov
mov
sub
imul
cld
jmp
inc
sub
inc
jb
cld
jmp
je
add
jge
xor
data16
mov
ljmp
mov
movzwl
cld
jmp
adc
cmp
dec
data16
aad
add
aad
clc
mov
lahf
xchg
arpl
add
sbb
clc
cwtl
xor
jo
add
inc
add
test
fidivs
mov
push
ret
xchg
or
adc
shrd
xchg
inc
clc
lret
clc
adc
add
add
mov
data16
sti
jns
cmp
mov
clc
cmp
jmp
xor
add
sbb
dec
decl
test
or
add
jmp
nop
dec
pop
es
inc
clc
pusha
add
dec
dec
inc
clc
out
jp
xbegin
add
mov
jmp
or
add
sub
outsl
mov
clc
cmp
clc
push
test
into
dec
adc
add
add
add
mov
cli
push
inc
clc
dec
clc
or
clc
lcall
and
add
imul
fildll
clc
jnp
fdiv
inc
clc
mov
cmc
add
add
add
addr16
jmp
test
xor
add
and
push
cmp
xor
add
popa
add
icebp
jo
add
imul
mov
clc
lods
add
mov
add
jb
add
add
jns
clc
je
inc
clc
xor
in
jae
add
test
xchg
int
clc
mov
clc
add
add
add
inc
add
mov
add
add
xor
loop
scas
outsl
lret
ss
mov
pop
arpl
add
clc
aad
xchg
sub
clc
mov
clc
clc
fwait
jmp
into
xor
add
push
sbb
xor
add
add
dec
mov
sub
mov
push
scas
ja
sbb
xchg
jae
add
sbb
inc
add
in
xbegin
dec
jecxz
cld
mov
cmp
jmp
je
mov
add
mov
clc
push
jnp
cmp
add
clc
sub
lods
adc
add
add
jge
inc
add
sub
stos
fwait
and
add
clc
adc
add
or
clc
cmp
adc
add
fbld
cltd
and
cld
jmp
movsb
jg
clc
scas
lret
clc
int3
clc
push
sar
shll
add
inc
clc
fidivrs
mov
pop
xchg
dec
insb
xchg
dec
xchg
rcll
add
jb
add
and
add
or
sub
fadds
clc
adc
add
pop
jmp
inc
clc
pop
lods
and
add
mov
jo
add
add
xchg
mov
add
out
out
push
jmp
scas
outsl
sub
cmpsl
clc
fistpl
jae
add
jmp
push
add
xchg
nop
fs
fcoml
add
cmp
bound
add
clc
push
int3
jbe
jp
out
test
insb
mov
mov
loopne
sub
mov
cld
jmp
cmpsb
sahf
sub
jmp
xor
int3
mov
repz
test
cld
cld
jmp
movsb
clc
pop
jmp
xor
add
push
mov
testb
push
clc
xor
add
clc
adc
add
sar
and
add
mov
add
mov
clc
mov
clc
pop
push
clc
cmp
clc
inc
clc
in
aas
xchg
iret
ds
nop
adc
add
clc
dec
pop
dec
sarl
shrl
add
mov
cltd
repnz
cmp
in
push
add
xor
add
clc
imul
stos
cmp
clc
hlt
cmovp
mov
add
pop
popf
mov
clc
insl
adc
add
add
sbb
mov
mov
add
dec
in
jmp
clc
add
jb
add
add
mul
clc
cmpxchg
jmp
fcmovb
clc
inc
clc
sub
clc
sbb
mov
movsb
clc
mov
add
clc
mov
jecxz
mov
push
pop
data16
mov
mov
sub
push
mov
cmp
les
add
add
jp
mov
add
bound
add
xchg
adc
add
dec
adc
add
data16
sub
jp
test
clc
mov
jge
add
xchg
sbb
jmp
popa
sub
clc
or
cld
inc
clc
aad
add
sub
ss
push
xor
add
pop
clc
jl
loop
xor
add
sub
clc
in
data16
scas
cmp
or
clc
and
add
inc
add
pusha
add
lea
adc
ss
ret
lods
fwait
pop
sub
clc
cmp
clc
loopne
cltd
xchg
stc
mov
lahf
cli
push
inc
add
xabort
push
clc
ljmp
sub
pop
clc
mov
inc
clc
mov
add
mov
outsb
inc
add
sbb
sub
dec
fcmovnu
testl
push
pop
dec
addr16
mov
cwtl
sub
clc
xor
pushf
mov
sbb
push
xlat
pop
out
sub
fs
xchg
out
pop
sar
clc
pop
sbb
push
add
das
pop
sahf
add
jmp
sub
add
add
clc
sub
clc
lcall
mov
mov
cmp
mov
gs
adc
add
add
add
test
add
add
xor
add
add
lret
inc
clc
aam
add
ds
jle
clc
hlt
push
mov
add
cmc
mov
inc
clc
stc
ja
in
nop
add
add
cmp
lahf
js
clc
stos
mov
clc
pop
stos
aam
pusha
add
inc
clc
fisubrl
sbb
clc
mov
dec
xchg
data16
push
dec
dec
sub
sub
test
ja
add
cmp
xchg
fcomi
mov
rep
cld
jmp
pop
aaa
cmp
mov
xchg
add
add
xor
add
add
push
pop
cld
jmp
jg
nop
cmpb
mov
fistps
add
add
clc
movsl
clc
fs
sbb
clc
out
loopne
mov
push
jp
std
cld
and
add
mov
icebp
xlat
push
mov
pop
adc
add
cmp
icebp
rcl
fwait
fwait
pop
gs
dec
imul
popl
add
call
clc
jle
jno
add
clc
dec
pop
call
mov
or
clc
popf
ror
or
add
ds
data16
fists
add
pop
jo
add
cmp
add
cmp
into
or
jg
add
arpl
add
add
jmp
mov
ja
or
clc
cltd
sub
jnp
add
inc
clc
pop
hlt
adc
add
iret
lret
inc
clc
jno
add
cmp
xlat
mov
cmp
pop
clc
inc
clc
cmpsl
clc
xlat
popa
add
lret
pop
clc
adc
add
arpl
add
data16
test
clc
aaa
clc
cmp
add
cmp
jne
out
outsl
add
icebp
fs
lea
add
add
xchg
push
aas
and
add
testb
xbegin
clc
xor
clc
push
test
xor
test
and
cmp
out
dec
fwait
out
and
adc
add
add
f2xm1
cli
push
cmp
clc
cltd
xor
lahf
xor
add
inc
clc
roll
add
loop
push
xchg
push
ret
clc
push
mov
add
add
add
clc
cmp
jae
add
loopne
jl
pop
mov
cmp
popa
add
sub
push
add
add
add
clc
sbb
repz
clc
xchg
mov
lea
fbstp
out
dec
aad
jne
cld
jmp
loopne
out
sub
pop
cmp
ja
add
lods
iret
pop
mov
clc
lahf
fbld
xlat
cld
aaa
addr16
fnstenv
add
xor
add
into
cmc
mov
jmp
je
popa
cmpsb
clc
loop
outsb
cmp
loopne
lea
mov
ss
dec
loope
lods
pop
popa
add
xor
add
push
add
aam
lods
cmp
testb
mov
clc
mov
add
add
fdivrl
int
loope
pop
popa
add
jmp
in
add
inc
add
push
cmp
dec
inc
clc
adc
in
xor
add
xor
add
cld
jmp
jge
mov
out
cmp
ds
jle
cmp
or
clc
xbegin
add
sti
sbb
mov
clc
aas
sub
clc
shll
add
fisubrs
add
mov
arpl
add
lock
test
inc
clc
push
clc
mov
xchg
loop
jbe
out
mov
xor
inc
clc
mov
daa
clc
bound
add
cltd
fmuls
pop
mov
ja
dec
and
add
clc
mov
dec
das
cli
lods
jp
leave
fst
jo
add
hlt
inc
clc
xor
add
sub
xor
jne
cld
jmp
inc
clc
dec
or
sbb
cmp
clc
cmp
add
xchg
aaa
sbb
loope
pop
jns
jg
pop
pop
mov
clc
push
jb
add
cmp
clc
movsl
clc
jb
add
add
mov
clc
cmp
cmp
xbegin
push
clc
dec
xlat
and
add
clc
pop
fdivl
sar
add
add
lock
dec
or
or
and
add
and
add
add
insb
pop
jnp
inc
clc
cmp
pop
mov
clc
testb
add
add
and
add
pop
imul
imul
out
shl
and
jno
add
or
add
shrl
dec
dec
sbb
jbe
add
push
sbb
clc
sub
add
aam
add
fistpll
sbb
jb
add
xor
movsb
clc
add
dec
lods
mov
add
adc
addr16
hlt
push
add
cld
jmp
fnstsw
ret
clc
out
mov
add
or
clc
aaa
dec
cmp
je
cld
jmp
enter
clc
cmp
add
push
or
js
add
pop
jae
add
add
inc
add
pop
xchg
inc
add
in
repz
add
jo
add
outsb
decb
mov
sbb
sar
push
test
rcl
add
and
add
cld
jmp
or
inc
jno
cmp
aas
jno
add
lret
pushl
cld
jmp
insb
and
clc
jo
add
cld
jmp
and
stos
push
sub
add
sub
jg
add
in
dec
adc
add
dec
stos
inc
clc
clc
mov
clc
shll
xor
add
add
push
and
add
adc
jmp
nop
jp
mov
jl
into
fcmovnb
clc
cmovge
add
fcomp
repnz
push
add
adc
add
movsl
clc
lock
add
add
aad
ret
clc
pushf
shrb
cmp
popf
dec
mov
add
mov
test
cmp
jae
add
clc
stos
mov
push
dec
insl
cmp
fisttps
mov
add
clc
or
add
xchg
xor
add
add
cmp
jae
add
xabort
clc
clc
cld
and
add
sar
loop
cld
ss
jb
add
clc
loopne
pop
clc
out
xor
add
stc
xor
movsb
clc
arpl
add
lods
cwtl
rcl
or
jnp
push
pop
popa
add
sbb
adc
imul
cmp
add
dec
or
lahf
pop
mov
clc
dec
inc
clc
or
cld
jmp
lea
pop
clc
int
clc
add
jl
mov
sahf
fwait
or
add
sub
cwtl
jp
mov
addr16
imul
add
dec
clc
js
rolb
add
inc
clc
jns
pusha
add
cmc
mov
add
push
add
int
mov
or
mov
and
shll
hlt
push
add
mov
clc
xchg
movsl
clc
xchg
test
mov
lods
mov
test
lods
jmp
clc
sub
aas
cwtl
iret
sbb
inc
add
fstpl
sub
inc
add
aas
cmp
scas
xchg
pop
nop
dec
mov
add
mov
jle
mov
clc
negb
pusha
add
cltd
popf
enter
push
push
add
cmpsb
clc
cmp
mov
add
add
add
outsl
faddl
jmp
add
jge
add
addr16
and
test
scas
inc
clc
dec
dec
pusha
add
dec
sbb
xor
jp
add
jg
inc
add
icebp
pop
add
add
mov
in
gs
mov
aam
nop
sub
out
int3
push
movsb
clc
aas
ja
add
out
mov
ficoml
add
lahf
pusha
add
insb
add
add
outsb
sbb
sub
clc
sar
add
pop
lret
cmp
bound
add
clc
scas
push
sar
clc
xabort
add
add
push
add
ds
pop
push
cmpsb
clc
rcr
jae
add
mov
add
jb
add
lret
mov
add
imul
pop
jns
add
xor
add
rol
clc
mov
rorb
aas
outsl
scas
jmp
lcall
aam
mov
fbld
add
test
cmc
cmp
clc
ret
or
xor
stc
imul
push
mov
jae
add
add
add
mov
cmp
add
or
repnz
je
clc
lock
push
add
mov
add
sahf
or
push
push
add
or
cmp
add
sahf
adc
add
add
je
clc
ds
pop
or
add
add
inc
clc
ret
jp
clc
loopne
sbb
adc
add
inc
clc
add
ds
xchg
cmpsb
clc
popf
jle
add
mov
pop
lods
sahf
nop
or
add
jno
add
clc
pop
mov
mov
ss
ret
mov
mov
jno
add
jmp
xchg
jg
pop
mov
leave
insb
jno
add
lods
mov
add
sbb
sar
cmp
push
mov
repz
jmp
je
mov
cmp
test
xchg
movsl
clc
inc
clc
mov
add
add
add
add
clc
or
xchg
stc
xchg
bound
add
out
data16
sti
inc
add
add
cmp
add
jmp
jmp
push
add
mov
mov
clc
mov
inc
clc
mov
pop
scas
and
add
bound
add
add
jmp
clc
fldcw
ret
add
jo
add
lock
mov
int
clc
dec
repz
push
emms
mov
pop
sub
pop
sub
lea
fs
cmp
add
jmp
aam
add
gs
ds
lahf
pop
fwait
lock
sbb
cmp
jns
hlt
hlt
dec
xor
test
add
insl
sub
add
add
add
add
data16
js
rorb
test
mov
jb
add
jmp
pop
inc
clc
ss
clc
cmc
stc
pusha
add
into
xbegin
out
push
das
push
pop
clc
jnp
add
mov
clc
fbstp
add
add
in
loope
daa
clc
adc
add
hlt
js
sub
cltd
scas
push
roll
add
sub
push
push
dec
push
add
mov
clc
pushf
sbb
mov
jl
dec
ss
fwait
mov
xchg
idivb
aam
clc
xor
add
sbb
outsl
cmc
ljmp
mov
add
lods
sar
mov
push
add
js
add
mov
cld
jmp
sbb
scas
inc
add
int
clc
add
add
stc
imul
sub
add
inc
clc
pop
and
add
mov
clc
fs
outsl
iret
test
adc
push
add
adc
add
sar
repz
pop
lret
clc
jl
mov
inc
add
sar
cmp
add
add
cld
jmp
das
das
and
mov
add
push
hlt
mov
je
clc
jg
clc
sbb
popa
add
out
outsl
fcmovne
fbstp
mov
mov
clc
inc
clc
je
bound
add
daa
clc
mov
lret
push
test
roll
clc
pop
adc
add
add
mov
cs
lcall
xor
jmp
ja
lea
cmp
add
pop
and
add
dec
mov
add
sbb
and
adc
add
int
add
inc
clc
adc
clc
ja
mov
ss
ret
dec
data16
pushl
cld
jmp
orb
add
aad
clc
cs
fnstcw
clc
sbb
add
clc
dec
test
jbe
clc
aas
cmp
add
mov
js
push
jno
add
pop
sub
mov
xchg
inc
clc
xor
add
lods
jge
jmp
xor
add
add
into
pop
rorb
pop
and
add
clc
punpckldq
add
push
or
cmp
out
frstor
clc
ss
clc
cld
pop
clc
or
out
out
jb
add
clc
pop
cld
jl
add
sarl
xchg
sti
hlt
pop
mov
and
add
clc
decl
jmp
sub
movsl
clc
xchg
or
add
pop
sbb
aam
clc
mov
add
clc
mov
loope
jmp
pop
or
mov
add
fadds
add
jb
add
in
cmp
add
sbb
xchg
inc
clc
xchg
xchg
ret
clc
clc
dec
add
add
aas
xor
add
testb
lock
push
mov
movsb
lods
es
add
add
movsl
clc
insl
aad
clc
push
add
popf
test
jle
hlt
test
imul
data16
adc
jnp
xchg
cld
add
add
inc
add
pop
gs
out
xchg
iret
cmp
add
mov
clc
pop
mov
dec
xchg
mov
jnp
jl
add
add
cld
dec
xchg
fisttps
clc
lods
mov
sahf
pusha
add
inc
clc
xchg
imul
mov
dec
push
xabort
and
add
clc
mov
sub
clc
fcomp
xchg
push
es
adc
add
add
dec
adc
add
ljmp
push
cld
jmp
add
xorb
mov
clc
es
mov
mov
clc
sub
test
cld
jmp
adc
add
or
add
clc
sub
adc
add
cmp
cmp
adc
jecxz
cmp
clc
vunpckhps
fidivl
stos
bound
add
add
add
mov
cmp
movsb
clc
pop
clc
lock
stos
sahf
ficoms
clc
arpl
add
add
clc
rclb
add
add
add
add
rclb
push
add
push
add
jb
add
or
add
sbb
cmpsb
clc
imul
iret
inc
clc
pop
xchg
cltd
cmp
cmp
add
je
test
std
pusha
add
insl
mov
jne
add
pop
das
mov
cltd
dec
xchg
mov
add
push
loopne
push
stos
cli
add
add
stos
out
push
pop
cld
jmp
je
ja
mov
cld
jmp
fs
add
in
std
add
add
add
add
clc
xor
add
inc
add
pop
push
cmp
clc
jb
add
add
jns
and
clc
ret
clc
into
gs
rclb
and
push
ret
sub
push
clc
pop
into
sbb
inc
clc
insl
sub
clc
inc
add
mov
add
push
add
cld
jmp
std
je
add
mov
lods
idivl
std
mov
lahf
ffreep
clc
insl
push
dec
pop
iret
imul
aaa
and
add
clc
cmp
clc
xchg
loopne
cmp
clc
ljmp
mov
shlb
add
cmp
clc
sub
sbb
divb
push
ret
xor
add
add
pop
sbb
push
add
sbb
add
mov
clc
adc
clc
gs
cmp
mov
xor
clc
daa
clc
mov
xchg
xlat
xchg
dec
add
jle
clc
jne
jbe
jne
jbe
lea
cld
jmp
xor
in
mov
clc
dec
sbb
add
and
add
mov
jl
clc
ficoms
dec
pop
neg
pop
clc
int
mov
clc
cmpsb
clc
and
test
clc
lea
add
sbb
or
push
pop
out
cmp
aaa
imul
mov
jp
jbe
clc
cmc
dec
mov
sub
ret
cld
jmp
popa
imul
clc
cmc
scas
pusha
add
or
add
in
push
mov
add
fiaddl
jb
add
stos
sarl
lret
cld
jmp
sub
pop
xchg
popa
add
xchg
push
fdivr
jge
mov
pop
adc
add
clc
in
stos
sbb
fldcw
add
xor
add
fimuls
clc
sub
pushf
sbb
clc
mov
jb
add
gs
data16
pop
loope
jae
add
nop
or
add
stos
test
popf
sahf
xor
add
clc
outsl
mov
inc
add
adc
dec
fcmovbe
jne
cmp
pop
sbb
jmp
sub
dec
pop
clc
pop
repz
test
in
pop
jp
es
xabort
clc
add
add
call
jmp
test
jg
and
add
ja
add
daa
clc
arpl
add
mov
cmpsl
clc
icebp
or
lea
mov
add
sbb
push
call
and
add
inc
add
mov
xbegin
clc
lret
pop
loop
inc
clc
out
fmuls
add
fwait
gs
push
lret
xor
add
add
clc
and
iret
lock
call
ds
mov
push
cld
jne
add
fnstenv
add
sbb
push
clc
push
lcall
pusha
add
mov
mov
mov
add
add
pop
dec
mov
clc
leave
arpl
add
or
add
clc
mov
add
sarb
xor
add
ficompl
fnsave
add
gs
js
into
ja
add
inc
clc
sar
mov
xabort
add
arpl
add
mov
jne
xchg
or
loopne
mov
add
lock
clc
mov
jbe
add
jp,pt
insb
xlat
cmp
clc
adc
cmp
push
pop
dec
int3
and
mov
faddl
test
rcll
clc
inc
clc
imul
xor
add
clc
and
cmpsl
clc
pop
clc
add
test
lret
push
add
enter
int3
out
ficoms
jmp
pop
pop
push
dec
arpl
add
add
shlb
add
and
ror
ss
ret
mov
lahf
add
add
add
mov
add
inc
add
icebp
pop
iret
pop
pop
adc
add
add
sti
ljmp
cld
jmp
add
stos
jmp
clc
xbegin
inc
add
call
sub
jne
pop
pop
int
sub
clc
sbb
jmp
add
xor
add
div
dec
mov
int3
popf
mov
or
inc
clc
mov
push
adc
add
add
add
xchg
sbb
imulb
aaa
mov
mov
ss
ret
add
sbb
out
pop
add
or
clc
jl
clc
mov
jnp
jmp
sub
jbe
mov
sub
add
imul
test
push
sbb
clc
or
clc
and
add
ljmp
inc
add
mov
jecxz
dec
cld
out
clc
dec
je
data16
add
cld
sbb
xchg
enter
int3
jns
adc
add
add
add
outsb
mov
clc
lods
xlat
jo
add
add
inc
clc
jno
add
add
dec
pop
push
dec
iret
jns
jno
add
clc
popf
bound
add
add
jmp
mov
mov
add
add
aas
mov
add
mov
sub
ss
ret
inc
and
xor
add
clc
clc
jae
add
mov
test
decl
and
add
add
pop
mov
clc
mov
and
add
pop
clc
ret
addr16
and
add
add
cmpsb
clc
data16
jp
fdivr
jnp
xchg
cmp
mov
aam
insl
fmulp
fidivrl
data16
mov
xchg
stc
mov
clc
std
adc
add
add
xor
add
call
mov
cs
and
sti
pop
jg
out
ret
clc
push
cltd
fistpl
icebp
sar
jae
add
add
clc
sub
xor
add
cmp
scas
pop
mov
int
loopne
pushf
push
add
test
push
loope
mov
add
insl
daa
clc
test
jle
xor
add
out
mov
add
xchg
fidivs
add
jle
clc
clc
test
dec
pop
xor
add
push
inc
clc
decl
test
jmp
gs
int
jmp
add
mov
call
clc
insl
dec
sbb
clc
cmp
clc
sub
add
clc
pop
mov
add
jmp
sub
clc
repnz
xor
add
push
mov
cld
jmp
ja
es
pusha
add
test
movsl
clc
sub
cmp
sbb
add
xchg
insb
jle
push
add
adc
clc
or
add
add
je
cmp
inc
clc
repnz
add
add
xchg
cmpsb
clc
or
sub
add
clc
mov
mov
cld
jmp
popa
sbb
stos
add
sub
pop
cmp
clc
cmc
inc
clc
jns
or
add
gs
cmc
xor
add
neg
xchg
pop
or
mov
in
jbe
add
iret
xchg
push
movsb
clc
nop
sar
or
mov
pusha
add
adc
add
mov
add
pop
mov
test
cmp
insl
imul
movsl
clc
jge
clc
test
add
dec
inc
clc
pop
cmp
add
stos
sarl
xor
add
clc
sbb
clc
add
add
sbb
mov
add
push
add
mov
clc
ljmp
pusha
add
push
add
pop
out
dec
sub
mov
or
mov
clc
push
jmp
popa
inc
jp
and
clc
jbe
push
popf
mov
fdivrp
data16
pushf
jle
dec
inc
clc
imul
stos
pushf
xor
add
clc
das
xabort
or
push
out
pop
push
cmp
clc
icebp
inc
clc
lcall
mov
popa
add
mov
jns
sar
push
insl
out
xchg
lock
inc
add
mov
cmp
aad
bound
add
lods
loop
jo
add
or
pop
sub
clc
pushf
or
add
xabort
clc
xchg
sbb
rcrb
jge
add
cmc
pop
jb
add
loope
iret
cmp
xabort
dec
mov
add
inc
add
imul
lea
out
inc
add
into
nop
sub
clc
inc
add
xlat
imul
cmpsl
clc
xchg
cmpsb
clc
lret
jl
clc
data16
cmp
clc
popf
test
pop
xor
add
add
xor
add
clc
pop
pop
mov
add
jmp
mov
add
movsb
clc
push
add
jle
sub
pop
clc
arpl
add
loopne
mov
mov
cmp
add
xbegin
in
lahf
jae
add
clc
cld
jo
add
add
push
ja
xor
add
clc
loopne
pushl
sar
or
pushl
sub
clc
outsl
sub
add
push
add
test
push
or
clc
idivl
mov
push
arpl
add
add
hlt
sbb
add
lea
ljmp
add
cltd
sahf
inc
add
push
int3
loop
repz
ss
adc
add
clc
sub
cmp
jmp
mov
jae
add
je
add
cmp
fldl
test
stos
xchg
mov
pop
push
clc
mov
cmpsb
clc
dec
sar
clc
jle
clc
mov
clc
and
add
add
pop
loope
test
and
add
add
xlat
and
sub
jmp
sub
in
lahf
pop
clc
adc
add
and
add
clc
lock
add
mov
out
push
and
add
icebp
out
lret
add
jae
add
add
movsl
clc
stos
xchg
push
add
xor
add
clc
push
loopne
mov
loope
cmp
add
scas
sbb
adc
add
clc
popa
add
aad
stos
xbegin
add
jae
add
clc
inc
add
in
add
add
in
call
clc
repnz
sbb
pusha
add
dec
sahf
sub
push
pop
outsl
ljmp
add
add
out
cld
loop
pop
clc
mov
fadd
clc
and
and
add
loop
hlt
dec
cmc
add
xchg
stos
into
add
add
lret
aam
add
xchg
shlb
add
add
add
add
ljmp
add
enter
hlt
sahf
je
add
mov
jmp
data16
mov
push
add
push
jmp
push
sbb
push
mov
inc
clc
divl
inc
clc
push
clc
aam
sbb
add
call
adc
clc
mov
clc
stos
sar
test
jp
clc
insb
xor
xchg
cmp
insl
push
gs
sti
lea
js
push
sbb
add
lret
in
int
add
xor
clc
bound
add
cmp
add
lcall
ficoml
ss
ret
add
dec
push
data16
xor
add
add
inc
clc
cmp
and
add
add
cwtl
out
mov
add
clc
add
add
add
in
mov
add
ljmp
mov
jo
add
inc
add
dec
mov
fsubl
add
cmpsb
clc
add
scas
repnz
ljmp
neg
add
add
sub
cmp
dec
dec
loop
and
fmuls
clc
lods
mov
xor
clc
jl
jnp
ret
clc
sar
pop
push
add
ret
imul
add
stos
xor
add
add
je
out
xchg
pop
nop
sar
pop
mov
add
data16
pushf
scas
mov
add
js
lcall
fistpll
jge
jg
xlat
add
add
xbegin
add
pop
aas
stc
push
add
mov
fs
add
shl
clc
fmull
push
add
jns
add
xchg
sar
jecxz
mov
jmp
cld
jmp
data16
add
add
cmp
clc
dec
aas
or
loopne
lcall
add
cmp
push
enter
add
aam
sub
and
pop
push
aas
ret
clc
sub
mov
mov
add
or
push
clc
mov
imul
clc
insl
cmp
add
pushf
dec
xabort
clc
iret
in
fs
stos
cmp
jmp
es
or
hlt
and
add
sahf
adc
add
push
add
mov
clc
inc
clc
jmp
popf
push
add
icebp
jp
xor
add
xchg
ficoml
or
pop
sbb
xchg
add
lods
jp
mov
xor
add
add
clc
xabort
xor
add
clc
sti
mov
and
leave
icebp
cwtl
push
add
add
add
add
lods
sub
xchg
or
add
jnp
add
imul
add
inc
add
xchg
enter
imul
mov
clc
nop
xor
add
ret
clc
jae
add
jecxz
clc
jae
add
nop
xlat
clc
inc
add
pop
inc
add
mov
cmp
add
popl
stos
fidivs
add
xor
add
add
lcall
add
add
add
add
adc
add
or
test
clc
xchg
imul
jb
add
aas
inc
clc
imul
jle
std
dec
jecxz
xchg
xchg
xor
add
add
jl
dec
lcall
xchg
cmp
shrl
loope
or
dec
xor
add
test
icebp
mov
add
cld
jmp
inc
add
push
add
aaa
pop
daa
clc
icebp
mov
stos
cld
jmp
sub
adc
outsl
mov
dec
ljmp
pop
and
xchg
test
insb
add
add
clc
cmp
fdivl
add
xor
add
add
and
bound
add
add
push
cmp
sar
clc
dec
out
mov
movsb
clc
inc
add
dec
lods
mov
cmp
loop
and
adc
add
fcomps
add
pop
sarb
fnstsw
jp
push
add
test
cltd
cli
imul
push
add
jmp
adc
sbb
clc
cmp
in
shll
out
or
clc
mov
clc
shr
je
clc
xchg
jle
xabort
ja
clc
xchg
es
jno
add
clc
and
add
add
dec
pop
loopne
xor
add
add
pop
cmp
add
add
repnz
xchg
icebp
sarl
add
popf
inc
clc
xor
add
jbe
clc
jb
add
clc
filds
adc
add
add
lock
clc
ret
dec
inc
clc
push
jne
clc
test
mov
dec
and
call
clc
cli
scas
dec
cs
mov
jge
add
add
clc
in
enter
jp
aaa
xchg
nop
int
outsb
cmp
cmc
mov
aaa
sub
clc
cs
jg
clc
mov
xchg
cmp
cmpsb
clc
ss
mov
add
fs
and
add
rorl
inc
add
mov
cmpsl
clc
mov
jnp
add
cmpsl
clc
cmp
add
lea
push
outsl
mov
inc
add
sub
cmp
mov
pop
inc
add
daa
clc
and
add
add
sbb
and
add
sub
add
add
add
mov
clc
mov
add
or
add
nop
clc
mov
add
add
xor
add
cmpsb
clc
sub
add
add
jno
add
clc
pop
sub
add
cmp
add
add
add
add
popa
add
cmp
add
cltd
cmp
pop
jecxz
or
jnp
es
lcall
das
lcall
cmpsl
clc
adc
add
inc
add
sbb
arpl
add
add
into
leave
outsl
xchg
dec
in
sbb
outsb
aam
call
lea
sub
clc
cmp
add
add
jle
icebp
test
ficoms
clc
clc
loop
mov
clc
ljmp
loop
out
pop
clc
clc
xchg
ja
push
add
lods
call
sarb
add
subb
sbb
ret
clc
lret
clc
and
add
add
ljmp
pop
dec
inc
fisttpl
add
das
out
adc
pop
outsl
loope
ss
adc
add
push
ret
push
sub
lea
add
mov
cmp
sbb
clc
add
add
in
fstl
mov
and
add
clc
iret
loop
out
cmpsb
clc
add
add
add
lcall
inc
clc
call
pushf
ds
sbb
push
ret
mov
sub
clc
repnz
and
add
add
pushf
int3
je
stc
pop
inc
clc
shll
scas
pop
into
inc
clc
cmp
mov
jle
clc
xor
add
and
add
and
add
clc
dec
outsb
iret
sbb
clc
ret
clc
inc
add
cli
shll
add
movsl
clc
scas
js
pop
in
in
into
jno
add
cmp
jl
add
add
add
rorb
hlt
push
add
xabort
mov
clc
lahf
aaa
shrl
and
add
push
test
add
outsb
jge
or
jmp
imul
movb
jo
lcall
nop
sub
clc
sti
int3
out
adc
clc
xchg
inc
add
push
adc
jmp
xor
jp
clc
adc
add
incl
repz
jmp
push
sbb
pusha
add
pop
mov
lahf
rcrb
test
shlb
add
add
lret
mov
add
loopne
jne
clc
arpl
add
mov
add
add
add
cld
jmp
jp
ret
clc
xchg
and
add
popf
pop
jns
sbb
add
clc
int3
stc
cwtl
pop
xlat
mov
add
dec
movsb
clc
pop
jbe
pop
popa
add
mov
add
xchg
jp
imul
clc
mov
aas
xchg
notb
mov
fsub
clc
mov
clc
clc
out
imull
clc
xabort
clc
dec
sub
clc
cmp
push
sbb
mov
add
add
adc
add
jns
pop
enter
cwtl
je
add
inc
clc
push
add
jmp
es
and
add
clc
mov
add
sub
inc
clc
mov
jp
mov
popa
add
or
xchg
fs
pop
xabort
add
rorb
fwait
mov
jmp
push
add
data16
lods
push
ss
aad
bnd
push
clc
sub
add
jp
inc
clc
dec
jo
add
pushf
call
mov
xor
cld
jmp
or
imul
add
xabort
add
sti
mov
lods
leave
addr16
cmp
stos
and
int
ss
pop
sbb
popa
add
mov
sahf
adc
add
jae
add
xchg
jnp
adc
add
inc
clc
pop
inc
add
es
dec
repz
and
add
aad
add
stos
in
push
ror
fnstsw
clc
repz
stos
jnp
sub
xor
add
add
cwtl
inc
add
sti
mov
repnz
add
fsub
clc
push
adc
add
xchg
scas
cwtl
xchg
imulb
cwtl
adc
outsb
inc
clc
fldcw
call
jmp
outsl
imul
repnz
add
xor
iret
pop
xor
add
xor
add
clc
fidivrs
xabort
inc
clc
and
add
movsl
clc
test
mov
out
jno
add
loopne
fadds
icebp
and
sub
and
in
mov
sub
out
sar
clc
sar
clc
cmp
clc
jno
add
in
jg
clc
pop
xbegin
fcoms
clc
xchg
jae
add
nop
sub
clc
sbb
clc
bound
add
roll
sub
push
ret
mov
clc
in
mov
push
add
push
add
aam
lret
add
push
mov
clc
and
add
jle
clc
fdivl
add
aad
clc
ret
push
loopne
lcall
adc
cmpsb
jge
xor
add
pop
sub
adc
add
sbb
clc
xchg
pusha
add
sub
add
pusha
add
cmp
clc
mov
test
sbb
aas
and
xor
lods
popf
popa
add
nop
inc
clc
mov
add
ret
clc
push
aas
add
and
in
cs
adc
clc
mov
aas
cmp
add
sti
xor
cltd
int3
dec
scas
rorb
ret
jge
fcoms
clc
mov
add
add
add
test
cmp
jo
add
clc
in
jnp
movsb
clc
in
pushf
outsl
dec
iret
lods
in
mov
pop
in
popf
pop
in
pop
cmp
pop
mov
fidivrs
add
cmp
insb
mov
clc
sar
iret
add
add
add
clc
insb
loop
mov
add
cld
jmp
adc
add
clc
inc
clc
stos
sub
adc
add
add
outsl
pop
mov
clc
cmc
xor
add
nop
jns
clc
cld
nop
clc
add
add
add
outsb
out
faddl
mov
mov
inc
add
cmp
xor
stos
lret
add
mov
fdivl
imull
ret
mov
add
clc
mov
testl
popa
add
lahf
test
clc
mov
add
fdivrl
inc
add
adc
mov
add
add
add
add
cmp
cltd
mov
ret
clc
mov
clc
sbb
mov
ljmp
fs
xchg
jge
cmpsl
clc
pop
jno
add
inc
add
mov
clc
xabort
adc
add
add
mov
std
jecxz
cs
clc
es
mov
clc
push
add
mov
push
add
jp
cltd
xchg
adc
add
mul
clc
mov
int
mov
jmp
jg
add
push
add
add
cwtl
push
sub
add
mov
add
in
jae
add
add
and
cmpsb
fadd
clc
add
add
jmp
lret
lock
add
add
das
add
add
fildl
aaa
gs
mov
in
add
and
aaa
es
dec
push
add
mov
pop
xabort
popf
cmp
cld
jmp
lods
xor
push
lods
into
stos
rorl
push
clc
or
xchg
dec
and
add
out
sar
clc
addr16
sbb
add
clc
nop
cmp
jl
or
add
or
clc
or
mov
cwtl
nop
adc
add
mov
sar
cmpsb
clc
gs
sbb
fsub
clc
jecxz
adc
add
clc
inc
add
inc
add
sbb
clc
mov
jns
clc
mov
or
sar
clc
jae
add
clc
jl
or
xchg
add
or
mov
mov
cs
adc
add
clc
push
pop
aam
fs
std
dec
mov
idiv
ljmp
xchg
cmpsb
jp
notb
add
frstor
add
and
fwait
lcall
and
add
add
xchg
fcompl
add
add
add
fimuls
sbb
imul
movsl
clc
jmp
clc
aas
pushf
dec
push
inc
clc
pushf
mov
clc
nop
loopne
push
clc
lods
mov
lea
clc
push
jo
add
mov
mov
sub
data16
shl
clc
xchg
out
or
jno
add
loope
inc
add
data16
out
enter
scas
stos
mov
icebp
int3
sub
sub
mov
clc
bound
add
xchg
out
jmp
clc
adc
add
clc
push
add
test
clc
imul
clc
lret
aam
add
mov
out
xlat
lret
clc
adc
add
outsb
cmpsl
clc
jle
stos
mov
sub
xor
clc
inc
clc
lods
sti
sar
clc
sbb
add
xor
dec
ja
pop
test
lret
into
sbb
mov
mov
pop
cld
jmp
adc
inc
push
jp
clc
sahf
adc
test
inc
clc
rol
clc
cmp
roll
mov
add
pop
cmp
sub
inc
clc
or
je
cld
jmp
out
cmp
clc
inc
clc
mov
mov
lods
je
or
cld
jmp
outsl
pop
pop
sub
mov
add
ss
ret
aaa
and
add
add
add
mov
lcall
aam
add
lods
xor
add
clc
loopne
lcall
push
push
ret
adc
add
add
add
add
mov
mov
add
add
xchg
lods
push
mov
clc
mov
jne
cld
jmp
push
add
imul
clc
and
xchg
gs
mov
add
in
repz
jb
add
lret
clc
mov
add
mov
clc
mov
add
xor
add
daa
clc
cmpsb
clc
cmp
push
popf
add
add
clc
enter
fcoms
ss
ret
sub
xchg
das
pop
mov
push
add
mov
into
jnp
lock
add
add
add
ljmp
sub
and
add
push
jmp
sbb
add
xchg
test
sti
int3
jne
mov
bound
add
clc
xbegin
add
inc
add
pextrw
dec
fsubl
clc
outsb
dec
sahf
cmpsl
clc
sahf
in
clc
mov
add
movsl
clc
repz
lea
add
pop
cmc
test
aam
clc
in
leave
mov
add
in
es
mov
mov
cld
jmp
xor
cwtl
sub
das
push
add
mulb
clc
testb
add
enter
or
pop
xchg
mov
outsb
sub
sub
push
sub
lcall
call
movsb
clc
and
add
ret
clc
sbb
pop
dec
or
add
loope
imul
add
dec
js
add
js
test
add
mov
clc
cmp
out
icebp
cli
daa
clc
popa
add
test
clc
and
push
mov
clc
bound
add
add
mov
clc
xchg
cmp
add
xchg
mov
lret
push
sar
loopne
jo
add
and
clc
cmp
clc
push
ficomps
mov
pop
clc
jecxz
sar
add
add
clc
adc
stos
jle
clc
lods
dec
iret
imul
sbb
add
decb
add
call
add
cld
jmp
push
add
xchg
cs
add
cmpsl
clc
stos
aaa
dec
sbb
jecxz
es
or
add
loope
std
adc
add
sub
jle
add
add
jo
add
jmp
clc
or
rcll
xabort
movzwl
cld
jmp
sub
cmp
clc
inc
add
fwait
nop
in
pop
lock
adc
adc
add
add
and
add
adc
add
clc
mov
push
insb
cmp
clc
popa
add
pop
xchg
sahf
das
push
fsubrs
xchg
mov
popf
cld
jmp
add
aaa
add
clc
xor
add
out
xbegin
call
add
xlat
xlat
fucom
clc
adc
add
sar
add
sbb
sar
fbld
scas
fcompl
cmp
fwait
dec
mov
add
add
dec
out
jno
add
sub
mov
clc
stos
imull
add
test
add
mov
ja
clc
outsb
mov
clc
cmp
std
adc
add
out
add
add
std
sbb
clc
or
add
push
daa
clc
jne
clc
push
in
sahf
mov
cltd
add
add
movsl
clc
lcall
int3
test
add
and
add
add
xor
add
loop
arpl
add
nop
adc
add
mov
stos
cmp
add
or
add
cld
jmp
sbb
adc
lods
xor
pop
test
dec
lret
test
jecxz
lods
adc
inc
add
xabort
jns
cmp
inc
clc
scas
out
add
add
add
and
add
add
movsb
clc
stc
add
add
clc
mov
sub
clc
loop
xchg
fdivrs
add
add
add
cwtl
push
xchg
dec
xchg
mov
add
out
ja
adc
add
dec
out
mov
add
int3
mov
rorb
xor
add
mov
hlt
push
push
clc
nop
lea
add
clc
mov
add
movhps
add
push
mov
cmp
aaa
stos
out
mov
sahf
jg
clc
es
test
mov
int3
insl
sar
sbb
mov
and
add
sti
jg
leave
or
push
xor
push
cmpsl
clc
call
popf
cmp
clc
mov
out
dec
and
cwtl
add
add
clc
out
aas
pop
dec
and
mov
push
jmp
sub
clc
rcll
add
add
insb
lods
int
clc
mov
add
adc
add
mov
loop
fisubrl
sarb
and
aas
stos
movsb
clc
jne
leave
xor
add
scas
insb
in
lret
push
add
fs
jge,pn
push
mov
cld
jmp
aas
push
ja
sub
clc
sub
add
sar
outsl
cmpsb
clc
iret
fildl
cmp
stos
outsl
enter
data16
in
leave
inc
clc
jmp
das
sbb
clc
cmpsb
clc
jb
add
lock
add
clc
and
add
clc
mov
clc
hlt
xor
add
out
addr16
jbe
popa
add
outsl
xor
ss
push
dec
int
mov
add
clc
cmc
lock
hlt
int3
leave
dec
pop
mov
imul
and
aas
es
mov
scas
or
add
jge
add
ljmp
clc
xchg
sub
push
xlat
inc
add
negb
add
add
xchg
fidivrl
dec
test
lea
ds
add
xchg
test
aas
push
clc
mov
xchg
push
add
ljmp
dec
inc
add
pop
addr16
push
push
jne
cld
jmp
scas
js
test
data16
je
pushf
pop
pop
fwait
pop
mov
push
push
cld
jmp
sbbb
inc
or
clc
rcl
fsub
clc
mov
cld
jmp
jge
xchg
inc
clc
outsl
aas
dec
int
movsb
clc
mov
jnp
clc
or
jl
inc
clc
add
add
pop
or
out
xchg
mov
and
add
xchg
cmp
clc
jne
clc
mov
dec
push
add
vrcpps
add
xor
add
clc
incb
loope
aam
cmp
xor
add
mov
jmp
or
out
pusha
add
insl
pop
in
jnp
xchg
pushf
nop
add
cmp
mov
fucom
clc
imulb
mov
mov
dec
cli
cmp
insb
sub
mov
push
jecxz
jmp
xchg
enter
clc
push
add
xor
add
mov
adc
add
sub
clc
mov
sub
daa
clc
dec
sub
add
cmc
jbe
cmpsb
clc
scas
sbb
stos
cld
jmp
lea
or
sbb
jmp
sbb
sub
mov
clc
dec
fstl
add
clc
in
sub
clc
and
add
push
cld
jmp
push
dec
aaa
sub
or
xor
add
push
clc
cmpsb
clc
sbb
add
inc
clc
sub
clc
adc
or
clc
cld
cmp
clc
cmp
add
int
xchg
sbb
xchg
loop
push
clc
std
pop
clc
inc
clc
adc
add
popf
add
insl
push
mov
testl
mov
mov
add
test
inc
clc
and
add
aad
imul
add
add
into
shlb
std
jecxz
cmpsb
clc
into
mov
add
jl
and
add
ljmp
clc
jle
repz
xor
add
clc
cmp
leave
gs
add
add
out
mov
add
dec
movsb
clc
xlat
pop
insb
sub
bound
add
lahf
push
xchg
out
push
inc
clc
cmpsb
clc
ja
clc
stc
push
xor
add
add
clc
sub
add
sar
loop
repz
jne
clc
insl
pushf
outsl
stos
out
dec
cs
jp
clc
data16
cmp
push
std
nop
xor
add
clc
lock
insl
test
jp
sub
test
daa
clc
pop
push
enter
add
mov
add
cmpl
add
cwtl
jl
nop
add
add
jg
enter
add
mov
fwait
jnp
jo
add
loopne
or
inc
add
daa
clc
cmp
xchg
je
add
or
and
add
call
pop
icebp
ljmp
mov
negb
shlb
add
mov
dec
xor
add
or
pop
cwtl
or
adc
dec
out
sub
sbb
ljmp
daa
clc
data16
cld
jbe
ljmp
mov
clc
jne
int3
jge
inc
clc
repz
clc
dec
popl
and
add
push
pop
cld
jmp
sub
sar
mov
cld
jmp
lea
adc
sbb
add
test
and
bound
add
inc
add
leave
pop
scas
test
sahf
insl
iret
addr16
gs
std
cmp
sbb
push
add
push
subb
jl
clc
dec
inc
clc
cmp
or
fucomi
lahf
je
clc
std
xabort
popf
cmp
add
pop
mov
clc
bound
add
aam
rcrb
fwait
mov
clc
dec
iret
sbb
jmp
imul
add
jmp
stc
mov
add
mov
or
and
cld
jmp
pop
cmp
jmp
insl
pop
inc
clc
push
push
arpl
add
xchg
jno
add
cld
jmp
and
je
sar
mov
add
add
cmp
clc
mov
push
add
mov
clc
into
sahf
xchg
mov
clc
cmp
mov
add
xlat
mov
xchg
cs
add
loopne
stc
popa
add
cli
or
and
add
clc
sti
enter
clc
dec
test
adc
fs
cmpsb
clc
bound
add
push
clc
fisttpl
dec
dec
fldl2e
bound
add
dec
sub
rcr
bound
add
pop
xchg
sub
clc
fbld
test
xor
add
adc
add
clc
adc
add
add
mov
psrad
insb
in
mov
xor
add
mov
push
jb
jmp
or
repz
sbb
jmp
jp
pop
insb
inc
fistpl
and
add
repz
dec
add
add
add
xbegin
xor
xchg
or
dec
in
sub
add
add
or
clc
push
clc
adc
add
push
add
lahf
das
shlb
pop
insl
add
inc
add
inc
add
mov
clc
xchg
jne
and
add
xor
add
mov
clc
insl
cmpsl
clc
cmpsb
clc
xlat
or
push
clc
mulb
clc
push
add
push
dec
jecxz
push
mov
enter
out
pop
imul
sub
xor
add
push
add
xchg
adc
add
add
divl
add
add
inc
clc
scas
in
lret
add
pop
clc
cmpsl
clc
cmp
cs
cmp
scas
jmp
add
jae
add
add
mov
clc
mov
push
add
push
clc
add
add
iret
test
pop
int
adc
add
clc
sbb
clc
test
add
lods
loop
in
insb
mov
add
mov
clc
jecxz
cli
mov
clc
clc
jns
adc
lods
xchg
stc
fimull
mov
clc
xchg
test
loopne
mov
fs
ljmp
movsl
clc
mov
sbb
cmp
add
add
dec
test
clc
or
clc
sub
fucom
clc
push
cmp
add
repnz
inc
add
in
lock
stc
movsl
clc
sub
sbb
mov
add
cld
jmp
cmpsb
aad
jae
add
movsl
clc
mov
sbb
mov
clc
out
shll
add
xchg
or
add
nop
jp
and
bound
add
jmp
add
clc
btr
add
push
mov
imul
add
sub
mov
add
sub
add
pushf
loopne
daa
clc
aas
xchg
push
add
stos
xchg
addr16
or
ret
incb
add
clc
add
add
add
add
std
xchg
std
inc
clc
enter
mov
add
sarl
sub
js
add
sar
sub
add
popf
or
in
adc
jle
add
ret
clc
jp
mov
imul
mov
or
jne
add
add
add
aas
mov
inc
add
shr
mov
push
add
push
add
leave
jl
movsl
clc
int3
fwait
mov
dec
push
cli
mov
mov
push
bound
add
out
insl
shll
adc
add
fildl
clc
dec
test
ret
clc
dec
inc
clc
jnp
xchg
aaa
add
enter
clc
or
inc
and
jmp
je
fwait
mov
inc
add
imul
add
in
jbe
add
stos
aam
add
fs
movsl
clc
mov
fwait
lods
movsb
clc
dec
not
sti
push
jmp
mov
rol
clc
lea
scas
mov
cmpsb
clc
enter
clc
mov
push
add
jge
clc
inc
clc
mov
jmp
or
add
add
mov
in
mov
clc
je
clc
mov
jmp
lahf
lret
mov
sbb
add
out
xlat
fs
mov
clc
mov
cmpsb
clc
jge
and
add
pop
push
add
inc
clc
pop
inc
clc
std
mov
lret
repnz
insb
and
add
add
ret
add
adc
add
clc
mov
jo
add
lods
cmp
clc
sub
add
mov
add
clc
dec
daa
clc
call
inc
add
js
in
mov
sbb
mov
clc
lret
clc
dec
out
xbegin
cmpsl
clc
pop
cmp
cmp
add
cmp
outsb
mov
jg
xchg
aas
mov
pop
mov
adc
add
jecxz
mov
dec
out
pusha
add
adc
sbb
fiadds
mov
sbb
mov
mov
clc
jge
clc
sub
jle
sub
add
add
clc
mov
fs
mov
into
movsl
clc
decl
cmp
add
aas
nop
dec
mov
add
jmp
add
xchg
sbb
ret
clc
jb
add
add
xchg
adc
add
jae
add
rolb
sub
daa
clc
jmp
incb
add
add
jmp
insb
jmp
fcmove
or
ss
ret
and
test
lock
jl
clc
cmpsb
clc
cli
mov
cli
push
add
sar
pop
inc
clc
call
jmp
fwait
orb
clc
jmp
fsubrl
test
and
add
jmp
inc
add
clc
hlt
or
dec
push
cld
jmp
add
sti
add
jne
dec
jne
add
and
add
pusha
add
pop
xor
clc
mov
add
loopne
mov
paddsb
pop
movsl
clc
clc
jl
mov
add
pusha
add
daa
clc
jnp
clc
push
add
push
add
jmp
jg
add
add
incl
sti
cld
jmp
or
cwtl
or
clc
in
mov
jo
add
stos
cs
cmp
das
adc
add
cld
jmp
inc
sub
lods
and
add
clc
out
push
sub
add
push
clc
push
clc
xor
addr16
push
mov
inc
clc
sub
clc
inc
add
hlt
push
xor
add
sub
loop
ja
jmp
movsb
xor
add
ja
xlat
ljmp
icebp
sbb
adc
add
cld
jmp
jno
aaa
pop
sub
sub
clc
sbb
fbstp
dec
fdivl
clc
inc
add
push
lret
dec
dec
mov
adc
add
push
add
ret
clc
ljmp
test
jae
add
add
mov
clc
cmp
add
add
add
xchg
cwtl
mov
roll
add
clc
imul
xor
add
dec
sbb
add
add
sub
xchg
iret
pop
fldl
dec
jecxz
adc
pop
inc
clc
pop
popa
add
test
outsl
das
movsb
clc
xchg
movsb
clc
pop
out
ret
clc
inc
clc
add
cwtl
addr16
inc
clc
sub
clc
cmp
add
cmp
clc
mov
addr16
call
lea
in
sub
cmp
clc
cmp
add
cmc
pop
mov
clc
pop
pop
sub
add
into
mov
int3
mov
clc
lock
clc
test
mov
lods
adc
test
fs
addr16
adc
add
loopne
gs
mov
dec
mov
clc
enter
stos
sbb
fbstp
add
xor
or
mov
pushf
daa
clc
rcrl
add
inc
add
and
lods
movsb
clc
ss
icebp
sub
jmp
imul
cmp
icebp
testl
loope
nop
cmp
popa
add
test
push
push
cld
jmp
add
push
adc
jmp
lea
inc
add
sbb
mov
add
ja
cmpsb
clc
dec
js
sar
add
test
into
sub
xor
cmpsb
clc
push
add
aad
xor
mov
mov
popf
imul
lods
das
mov
clc
jecxz
jmp
aad
xor
add
clc
xor
add
pop
pop
lret
jge
add
add
mov
xor
add
add
adc
add
clc
scas
insl
das
cli
lret
repnz
fbstp
add
xbegin
mov
out
mov
scas
jb
add
clc
mov
clc
mov
xor
add
clc
sbb
dec
pop
xlat
cmp
cmp
arpl
add
mov
add
push
and
add
iret
cmp
mov
pop
jb
add
add
or
nop
mov
clc
loopne
sub
mov
cmpsb
clc
mov
dec
lea
or
clc
pusha
add
cmp
cld
dec
xor
loope
push
fnsave
add
jno
add
sub
mov
clc
xchg
inc
add
sub
dec
push
iret
icebp
cli
shlb
clc
das
add
scas
dec
mov
es
cmpsb
clc
movsb
clc
push
add
jo
add
cld
jmp
pop
scas
sub
enter
repz
jmp
lea
pop
lahf
rcrl
pop
cld
jmp
inc
adc
scas
lods
xchg
and
add
dec
mov
jbe
clc
mov
mov
push
ret
sub
clc
and
add
dec
pushf
test
pop
fsubs
fistpll
ja
lret
dec
jp
dec
mov
jbe
add
jmp
pusha
add
out
dec
lcall
add
inc
clc
fildll
cwtl
stc
jnp
xchg
mov
add
add
cmpsb
clc
dec
icebp
jg
adc
add
clc
mov
clc
inc
add
negl
add
add
es
sub
pop
inc
clc
pop
mov
clc
aaa
jae
add
xchg
lock
dec
lea
pop
arpl
add
mov
xor
add
adc
add
add
cmp
or
clc
lock
loopne
jle
int3
push
push
push
ss
ret
outsl
sub
xchg
leave
iret
cs
adc
push
cld
jmp
jp
push
cld
arpl
add
clc
stos
lods
sahf
mov
mull
add
sar
fistpll
push
xor
cmp
xchg
or
mov
jne
inc
add
jmp
lea
add
ja
insb
clc
test
clc
mov
clc
cmp
es
add
cmpsb
clc
sar
clc
popa
add
pop
clc
mov
or
jne
dec
inc
clc
sub
clc
sub
clc
cmp
dec
and
xor
add
add
xchg
jle
add
in
mov
xor
cmp
pop
jne
lock
test
sbb
add
in
aas
loop
and
add
clc
or
add
sar
push
add
outsb
mov
fcmovnu
nop
mov
mov
pop
loopne
adc
ficompl
stos
divl
add
jmp
clc
and
add
mov
cld
jmp
pop
das
fwait
clc
in
sub
clc
mov
add
test
popa
add
mov
add
data16
xlat
dec
stos
lret
xor
add
test
mov
sub
addr16
gs
push
add
push
add
mov
add
sbb
jmp
movsb
or
or
insb
pop
repnz
cmc
js
insb
mov
clc
jnp
jne
mov
mov
add
mov
add
sub
sub
add
add
roll
add
jmp
mov
cld
jmp
cwtl
cmp
add
out
add
add
inc
add
out
add
add
int
add
mov
cwtl
sbb
clc
sub
fcmovne
jnp
ret
in
sbb
xchg
inc
add
mov
adc
add
dec
popf
popf
pop
out
inc
add
dec
mov
clc
inc
add
jno
add
jne
xchg
fs
dec
push
add
lea
mov
aam
push
cmp
cmp
lahf
test
add
add
add
mov
loopne
add
imul
add
inc
clc
xchg
insl
int
xor
add
mov
add
pop
and
add
rorl
push
mul
clc
imul
cmpsb
clc
jecxz
vmovaps
jne
push
add
aas
add
add
clc
fcompl
imul
push
cld
jmp
sub
call
jmp
sub
adc
clc
int
add
xor
add
fprem1
popf
xabort
xabort
add
push
enter
adc
clc
jno
add
mov
add
cwtl
out
int
add
or
add
add
mov
dec
dec
mov
fstl
push
add
dec
jg
lods
imul
pop
imul
addr16
sbb
ds
scas
in
inc
add
and
add
or
add
xor
add
dec
mov
clc
adc
inc
add
repz
push
ret
cmp
sub
daa
clc
cmp
mov
or
add
inc
add
pop
gs
leave
aad
loop
sub
xor
clc
ret
movsl
clc
pusha
add
inc
clc
cltd
xor
dec
or
or
clc
inc
clc
sar
xchg
pop
mov
sbb
clc
and
add
test
sbb
sub
clc
sbb
jl
mov
clc
jl
clc
add
add
and
add
mov
addr16
nop
adc
add
inc
add
sub
pop
jb
add
cmpsb
clc
push
add
shr
aad
xor
add
stos
jb
add
daa
clc
bound
add
add
clc
loopne
jae
add
sahf
xor
xchg
cmp
add
mov
mov
add
in
push
add
jo
add
clc
loope
dec
movsb
clc
sti
mov
pusha
add
push
out
ja
add
jbe
pop
or
cwtl
call
test
imul
add
jp
insl
adc
arpl
add
loop
push
iret
call
cmp
clc
jb
add
mov
add
stos
aaa
minps
clc
mov
cmp
add
fwait
call
cmp
inc
add
in
mov
jae
add
stc
xchg
sbb
mov
add
sub
sar
add
mov
pop
xor
clc
jg
incl
fisubrl
or
or
add
add
jmp
and
sbb
stos
add
add
add
add
cmpsb
clc
mov
sub
add
mov
dec
fwait
loopne
push
add
cmp
clc
pop
test
test
or
lods
fs
mov
clc
cmp
inc
add
movsb
clc
gs
mov
iret
test
mov
fistpll
jecxz
fistl
mov
clc
test
sub
push
add
push
jmp
add
pusha
add
dec
cltd
popf
movsl
clc
imul
pop
inc
clc
adc
add
inc
add
sbb
cld
call
das
jno
lods
std
fsub
clc
adc
add
push
add
jno
add
jnp
pop
cmp
ret
daa
clc
fwait
jnp
pop
jmp
add
jecxz
js
jns
inc
clc
sub
mov
cld
jmp
sahf
jb
add
out
popa
add
push
push
mov
aad
clc
aam
clc
out
ljmp
clc
add
push
add
scas
pop
movsl
clc
cli
mov
clc
in
pop
sub
je
or
clc
or
add
inc
clc
inc
add
push
add
cs
add
aas
punpckhdq
xchg
push
clc
jecxz
cmp
and
add
cmp
clc
outsb
imul
clc
mov
fidivrs
mov
inc
clc
shll
add
xchg
cmp
add
dec
js
fwait
xor
add
pcmpgtb
jb
add
clc
xchg
call
cld
jmp
insb
push
pop
outsl
popa
add
in
dec
negl
push
daa
clc
shrl
mov
jo
add
add
pushf
out
lcall
cld
jmp
sub
xchg
aad
mov
jmp
sub
imul
add
pop
imul
add
sbb
add
add
rolb
add
xchg
clc
lcall
pushf
ja
scas
insb
lcall
fstpl
clc
pop
clc
out
sub
cwtl
sub
clc
pop
test
add
jne
add
daa
clc
sbb
incl
cld
jmp
nop
adc
add
hlt
fstpl
add
ds
clc
xchg
cmpsb
clc
cs
in
repnz
lret
cltd
int3
mov
clc
adc
add
add
leave
sub
sar
add
ljmp
clc
sbb
pop
clc
xabort
loop
dec
sti
xor
addr16
je
popf
cmp
in
adc
clc
pop
jno
add
jecxz
push
add
dec
dec
mov
xchg
push
push
popf
jl
mov
clc
loopne
xabort
dec
sub
clc
sub
or
add
jmp
dec
mov
jge
cmp
out
sub
pop
clc
ret
clc
repz
clc
sbb
clc
ret
add
adc
add
idivl
clc
std
imul
or
add
enter
mov
add
add
test
jnp
xor
add
clc
in
xabort
loopne
push
push
add
dec
bound
add
sbb
add
xchg
jmp
add
cmp
divb
mov
add
xor
add
sub
insl
inc
add
push
cli
inc
clc
xchg
aam
or
out
repz
cli
jmp
add
clc
sub
mov
in
sub
ljmp
clc
dec
call
fnstsw
das
dec
pop
pusha
add
xor
add
outsb
movsb
clc
out
mov
add
cmp
xchg
cmp
add
clc
sar
jb
add
add
dec
imul
cli
cmpsb
clc
aad
icebp
mov
and
add
cltd
push
add
insl
ljmp
clc
and
insb
sub
loope
xlat
lret
jmp
stos
cld
jmp
insb
cmp
pop
or
mov
add
stos
stos
add
add
clc
jne
xchg
push
popf
push
xlat
arpl
add
add
mov
xchg
shlb
add
lods
jge
ret
add
or
add
add
add
std
in
mov
push
add
lock
test
or
rcrb
mov
or
mov
clc
push
push
xchg
jae
add
dec
add
add
clc
inc
clc
jecxz
pushl
add
cld
jmp
adc
into
je
ja
push
jnp
push
cmpsl
clc
cmpsl
clc
loop
xor
add
add
dec
pop
movsl
clc
pop
adc
test
sub
nop
sbb
add
xbegin
pop
sub
add
add
stos
and
jge
add
jmp
clc
pusha
add
mov
add
paddw
in
pusha
add
out
scas
test
and
add
push
mov
and
add
clc
mov
jmp
subb
das
cmpsl
clc
cmp
jmp
inc
add
inc
clc
insb
mov
clc
mov
clc
dec
mov
jecxz
pop
neg
scas
jno
add
add
pushf
test
add
jmp
add
clc
test
insl
scas
dec
js
std
dec
dec
loopne
xchg
sub
sbb
sub
pop
fwait
ljmp
pop
into
sub
cmp
mov
ljmp
add
or
clc
call
out
mov
and
add
push
cld
jmp
jno
push
sub
js
clc
lahf
mov
jp
clc
ficomps
pop
ja
loope
lock
add
mov
cld
jmp
jge
and
adc
add
clc
cmp
pop
mov
clc
negb
dec
dec
clc
clc
bound
add
add
pop
imul
std
es
or
add
pop
fiadds
clc
nop
sbb
clc
adc
add
xor
clc
adc
sar
int
clc
cli
mov
add
add
mov
clc
mov
clc
repz
add
lret
clc
stc
or
or
sbb
clc
dec
lret
push
lcall
je
or
daa
clc
xchg
and
in
cmp
add
sbb
clc
out
dec
gs
jnp
out
pop
adc
cli
cmp
in
xor
stc
in
inc
clc
outsl
mov
and
add
or
clc
sbb
insl
pop
lret
mov
push
add
fisttpll
rcl
jo
add
icebp
sub
clc
insl
or
clc
and
pop
clc
addr16
shrb
clc
xbegin
cld
jmp
jge
pop
add
cmp
nop
xchg
xlat
test
and
cmp
cld
jmp
or
es
fisubrl
clc
sti
mov
add
dec
ljmp
sahf
fwait
lods
cmp
add
inc
clc
and
add
jno
add
xchg
and
add
or
arpl
add
movsl
clc
mov
clc
fmull
jae
add
ret
clc
jecxz
cld
push
call
cld
jmp
sbb
cltd
cli
sar
clc
arpl
add
add
nop
adc
add
xchg
xchg
out
push
push
add
pop
mov
movsl
clc
push
push
ret
lea
and
add
clc
jecxz
add
add
dec
ret
clc
dec
cmp
or
or
clc
ljmp
xor
jmp
cmp
mov
cld
jmp
sub
in
jmp
and
add
add
repnz
clc
cmp
adc
add
add
xor
add
add
sbb
sub
push
clc
push
xor
add
mov
push
mov
mov
clc
lret
clc
cmp
in
jge
push
sbb
add
sub
clc
adc
add
pop
or
add
clc
enter
add
stos
jne
mov
push
push
ret
adc
loope
mov
pop
or
inc
add
fiaddl
add
mov
cmpsb
clc
mov
jp
add
sub
inc
clc
xchg
push
jmp
es
jp
fwait
xchg
daa
clc
icebp
xor
aad
xchg
mov
or
test
jno
add
pop
and
add
clc
ficoml
add
xor
add
in
adc
xor
add
add
pop
sbb
fidivrs
clc
push
pop
outsl
add
add
add
mov
sbb
jmp
mov
repnz
or
mov
cld
jmp
push
test
cmp
or
test
clc
pop
push
add
sar
and
add
fisttpll
mov
or
mov
sub
xbegin
add
repnz
clc
clc
mov
mov
add
jmp
cmp
add
inc
clc
sbb
add
testl
push
ret
aas
je
jnp
clc
mov
adc
add
add
dec
jmp
jmp
mov
or
clc
stos
popa
add
fstps
dec
cmp
and
add
test
jmp
cmp
mov
inc
add
inc
clc
mov
cltd
push
add
aam
clc
int
fwait
adc
add
sub
popa
add
or
add
clc
jb
add
push
imul
cld
jmp
inc
je
imul
add
mov
idivb
lret
nop
jns
add
push
add
icebp
sbb
in
insl
add
add
adc
xor
add
cmp
clc
loopne
mov
mov
jne
xchg
js
out
inc
add
inc
clc
jecxz
mov
xchg
out
mov
mov
inc
inc
add
sub
sub
cmp
clc
cmp
push
shl
clc
shrl
add
clc
and
add
add
xor
or
mov
aad
clc
mov
add
pop
push
add
xchg
ljmp
add
xor
add
add
cs
hlt
aam
clc
mov
loopne
lods
dec
dec
xor
add
clc
mov
dec
in
push
inc
add
cmp
cmp
jno
add
add
stos
mov
outsb
lahf
imul
scas
and
add
adc
add
mov
sbb
cmc
fcompl
mov
clc
lods
ja
clc
scas
rolb
jmp
popa
add
es
data16
loop
jno
add
cwtl
cmpsl
clc
out
lea
add
lcall
xor
clc
mov
jmp
add
dec
push
add
push
loope
pop
lcall
mov
add
clc
sbb
clc
dec
xabort
sbb
rcrb
arpl
add
lcall
add
hlt
es
data16
push
lcall
hlt
fimull
jl
xor
add
cmp
loop
lcall
lret
sub
xchg
push
inc
add
in
adc
add
clc
pop
xabort
add
or
jle
jns
xchg
fisubrs
xchg
es
mov
jns
loopne
mov
and
add
mov
jle
repnz
test
je
jecxz
jge
fisubrl
testb
into
test
popf
or
std
data16
xor
add
in
jb
add
add
and
xor
add
add
push
clc
push
xabort
clc
xchg
ja
and
add
mov
clc
pop
add
add
add
or
clc
and
add
add
clc
xchg
push
add
and
add
add
pushf
dec
jmp
daa
clc
jne
push
cmpsl
inc
add
aaa
insb
andb
outsl
mov
lock
add
adc
add
jns
clc
mov
add
clc
push
pop
add
add
jb
add
ljmp
cli
ja
clc
sub
cmp
add
add
nop
call
clc
push
clc
xchg
mov
add
add
clc
mov
clc
sub
arpl
add
aam
jl
clc
popf
xor
add
popl
mov
clc
mov
lret
xor
add
jne
test
nop
add
inc
add
jecxz
cmp
stos
std
insb
mov
xchg
push
add
fsubrs
in
adc
add
insl
mov
add
clc
jb
add
mov
stos
jecxz
sbb
fbstp
jg
or
clc
fnstenv
and
dec
or
add
clc
jbe
push
mov
cld
jmp
sub
jle
add
leave
or
push
add
je
jno
add
add
rclb
add
push
add
xchg
inc
add
pop
icebp
mov
add
mov
ss
ret
pop
adc
insb
mov
cld
jmp
sub
inc
clc
cmp
or
mov
clc
cmpsb
clc
pop
mov
mov
clc
out
mov
lret
sub
jmp
add
test
stos
pop
jecxz
xabort
xor
pop
sbb
mov
cwtl
adc
add
push
clc
fiaddl
movsb
clc
add
add
clc
ficompl
mov
inc
add
or
mov
push
and
add
cmpsb
dec
aaa
es
xchg
test
mov
xchg
incl
js
shll
and
jmp
mov
xchg
jmp
iret
or
pop
mov
xor
add
xor
clc
push
add
in
sbb
add
fldl
clc
bound
add
xchg
icebp
sub
mov
cld
jmp
sub
int
call
cld
jmp
cmc
mov
data16
je
push
add
mov
inc
clc
repz
add
clc
mov
addr16
jnp
mov
cld
mov
pusha
add
mov
or
inc
add
sbb
lea
ss
ret
sub
fimuls
add
mov
add
pop
clc
testb
push
add
cmp
inc
add
xlat
ret
mov
cmpsl
clc
shrl
clc
or
clc
pushf
push
inc
add
add
add
clc
pop
clc
inc
clc
adc
add
jne
cld
jmp
sub
add
add
flds
mov
lods
dec
sahf
cld
jp
mov
nop
xchg
pop
out
lods
dec
jb
add
clc
cltd
sar
or
and
add
inc
add
and
add
daa
clc
jbe
xabort
clc
aam
cli
xlat
pop
cmp
clc
sub
int3
mov
in
mov
clc
fucomip
mov
jecxz
jl
clc
imul
fiadds
add
mov
scas
mov
clc
test
jl
add
lahf
and
add
inc
add
repz
clc
movsb
clc
cmp
mov
xor
add
add
add
clc
sbb
xlat
add
leave
jmp
add
or
clc
in
aam
clc
cmp
push
add
pop
mov
jne
clc
xor
clc
mov
popf
test
mov
mov
fadd
clc
aas
aad
add
test
sar
ja
lock
mov
ja
xabort
movsb
clc
dec
loopne
pop
iret
or
adc
add
xor
or
in
adc
add
mov
add
clc
cmp
clc
add
add
add
xabort
adc
cs
cld
jmp
outsl
xor
add
in
js
mov
clc
sub
mov
ud0
push
jbe
ljmp
je
xbegin
add
imul
sbb
dec
pop
arpl
add
movzwl
cld
jmp
xor
xor
add
add
jbe
add
cmp
loopne
mov
mov
cld
jmp
and
inc
clc
test
in
repz
jp
xchg
and
dec
jle
clc
ljmp
xchg
scas
lcall
imul
dec
and
add
fs
mov
dec
jo
add
add
push
add
popf
js
icebp
push
adc
add
out
out
lcall
mov
aaa
cmp
push
mov
pop
add
in
add
dec
and
int
xchg
xchg
nop
sub
or
add
cmp
sbb
and
add
add
inc
add
inc
add
xor
sbb
cmpsb
clc
jno
add
jg
fcmovne
jmp
or
inc
clc
dec
jne
sub
add
pushf
repz
loop
mov
clc
shrl
es
aas
bound
add
sar
jmp
fwait
sub
push
ss
ret
push
inc
sub
xor
add
add
add
jb
add
cmp
add
cltd
mov
mov
repz
mov
add
cld
jmp
sub
jns
flds
add
and
bound
add
mov
clc
inc
add
sub
add
add
das
es
mov
jb
add
lret
movsb
clc
fnstcw
movsl
clc
int
sbb
in
mov
add
cmp
arpl
add
ret
clc
mov
push
push
clc
mov
clc
pop
sub
sub
clc
push
lods
testb
add
outsl
cmp
mov
push
add
add
pop
dec
test
pop
aad
clc
dec
fstpl
rolb
add
mov
push
add
fs
push
add
cwtl
xchg
dec
inc
add
in
add
add
fwait
lret
std
dec
pop
call
clc
fisttps
clc
aaa
jg
call
adc
add
mov
aaa
aad
outsl
pushf
mov
add
push
push
adc
clc
js
cmc
dec
mov
aas
iret
loop
out
icebp
mov
cmp
dec
xor
add
push
gs
pop
dec
jo
add
add
xchg
data16
fmuls
mov
add
jmp
movsb
adc
add
add
imul
add
adc
adc
add
sub
fstpt
clc
jmp
clc
ret
xchg
fnstenv
xchg
add
add
pushf
scas
addr16
mov
jmp
cmc
ljmp
mov
cmpsb
clc
jl
add
in
xchg
ljmp
xchg
xor
and
add
cli
or
add
loop
repz
push
add
addr16
ss
clc
add
add
add
xchg
mov
adc
and
xor
clc
out
push
in
mov
mov
icebp
xor
add
in
mov
jnp
inc
add
mov
rcll
add
or
cli
test
push
lcall
pop
mov
add
push
cltd
or
fs
faddl
add
call
add
cmc
xor
add
xchg
loopne
in
pop
clc
and
aad
pusha
add
lock
clc
jnp
pop
mov
add
push
add
inc
add
mov
aaa
or
clc
popa
add
cmp
add
cmp
push
push
test
loope
cmp
clc
lods
jge
popf
cli
cmpsb
clc
xor
clc
ret
ret
out
pop
cmpsb
clc
bound
add
call
ss
ret
and
enter
mov
add
add
dec
mov
add
lods
adc
add
clc
es
mov
inc
clc
fists
add
inc
add
cmp
cmp
jne
mov
sbb
add
add
sbb
add
mov
ljmp
mov
dec
gs
cmp
clc
fldl
clc
inc
add
cmp
js
clc
movsb
clc
push
jmp
ja
cmpsb
pop
pop
rcr
mov
shl
cld
jmp
pop
jp
cmp
clc
adc
call
xchg
sahf
ja
jne
xbegin
lea
clc
or
push
inc
add
mulb
add
add
sbb
fsubrs
cmp
cld
jmp
js
lods
push
add
mov
clc
lahf
cmp
dec
and
add
add
add
add
lret
add
ficompl
sti
fimuls
cld
lods
divl
cmp
inc
clc
pop
aaa
testb
sbb
out
push
add
and
inc
add
outsb
in
dec
clc
jnp
jnp
inc
clc
pop
xor
add
imul
cmc
sub
insb
into
xor
add
push
cltd
push
or
test
adc
pop
cwtl
mov
clc
lods
aad
clc
mov
push
decl
cld
jmp
pop
aaa
xchg
cmovp
mov
add
mov
mov
cmp
jae
add
add
sub
add
notl
fsts
add
inc
clc
fmuls
sub
push
add
scas
mov
ss
ret
das
sub
add
dec
xchg
adc
add
clc
or
imul
mov
cmp
add
push
add
scas
push
cmpl
cld
jmp
sub
bound
add
mov
pop
js
push
xchg
push
add
scas
cmp
sbb
mov
add
jmp
inc
dec
ja
clc
aam
mov
ja
jp
add
jmp
sar
jmp
sub
in
cwtl
sub
add
xchg
push
add
mov
mov
repnz
add
ret
clc
adc
add
add
cmp
add
mov
pop
divb
add
inc
add
pop
data16
je
into
jno
add
push
xor
add
lret
clc
jno
add
clc
insl
addr16
cmp
pop
dec
push
negb
cmp
push
add
add
into
lret
dec
inc
add
in
dec
lret
or
add
sbb
pop
call
push
add
shrl
add
sbb
cld
jmp
mov
outsl
fsincos
push
mov
cld
jmp
movsb
mov
lcall
add
pop
outsl
loopne
mov
add
push
add
mov
inc
clc
pop
clc
xchg
loopne
or
cld
jmp
adc
je
dec
rclb
inc
sbb
push
ret
xchg
ja
stos
negl
clc
arpl
add
pop
leave
xor
add
clc
call
push
ret
or
clc
into
jne
shrb
add
push
add
dec
push
jmp
incl
cmp
xchg
es
fldl
cmp
fisubs
clc
jb
add
pop
je
dec
lret
cmp
test
adc
add
loope
arpl
add
clc
sub
sbb
movsb
cld
jmp
sub
loop
ja
ds
clc
mov
pop
gs
fiadds
xor
mov
daa
clc
xchg
or
in
ss
jb
add
in
inc
clc
add
add
clc
inc
clc
cmp
xabort
mov
js
cmpsb
clc
imul
leave
ret
clc
cs
or
iret
xchg
sbb
add
test
xchg
daa
clc
adc
add
std
test
call
cld
jmp
insb
push
sub
mov
popa
cld
jmp
pop
push
xchg
push
sub
je
dec
mov
clc
aas
sti
stos
mov
inc
cld
jmp
fwait
mov
clc
movsl
clc
es
sub
rorl
pop
jl
xchg
jae
add
add
popf
decl
cli
aas
mov
add
addr16
add
add
fisttpl
push
mov
sub
lcallw
inc
clc
sub
add
cltd
xor
add
and
add
add
dec
sbb
add
fsubrs
outsb
xor
add
sar
add
pop
xchg
cmpsb
clc
pop
mull
bound
add
push
add
cmp
es
mov
clc
js
pop
in
iret
lcall
cld
jmp
sub
jnp
sub
sahf
arpl
add
mov
clc
xabort
clc
xor
add
or
xor
add
bound
add
jg
clc
or
loopne
pushf
cmp
hlt
jmp
or
cmp
inc
clc
cld
popf
addr16
in
jns
xchg
sbb
pop
push
push
dec
cmpsb
clc
pop
and
add
jbe
clc
mul
clc
cmp
mov
outsl
inc
add
rolb
add
dec
mov
sbb
lcall
jno
sbb
ss
scas
push
xor
ss
ret
pop
aaa
mov
mov
aad
clc
in
nop
lods
inc
add
stos
sbb
add
add
add
add
push
ret
popa
dec
pop
cmp
cmp
clc
stos
out
imul
push
mov
clc
or
clc
enter
lock
stc
mov
clc
inc
add
lret
jnp
cs
pop
mov
pop
jg
push
clc
xabort
push
clc
into
cld
pop
scas
cli
sti
lret
add
out
aam
clc
test
mov
or
call
sub
in
test
and
add
clc
mov
add
cmp
clc
mov
xchg
mov
clc
push
push
cld
jmp
popa
xchg
add
clc
xor
clc
cmp
clc
xor
add
clc
data16
loop
bound
add
mov
xchg
xlat
inc
clc
and
add
lcall
js
add
addr16
cli
or
add
popf
push
clc
cwtl
jo
add
mov
aam
add
add
push
add
or
pop
xor
or
add
jge
add
je
clc
push
adc
add
cld
scas
pop
cwtl
mov
std
push
add
jl
clc
pushf
mov
push
cld
jmp
sub
mov
pushf
lcall
jl
and
aas
mov
cli
in
sbb
pop
xchg
pop
mov
leave
int
ret
xchg
out
push
jbe
add
aam
clc
pop
push
and
add
push
add
add
add
add
es
outsl
jp
clc
jns
pmovmskb
leave
jne
lock
rep
mov
ja
add
add
or
adc
add
stos
negb
sbb
mov
cld
jmp
mov
push
leave
jb
add
add
mov
pop
jmp
push
pushf
cmp
adc
js
das
mov
nop
mov
insb
and
add
std
add
or
add
adc
add
clc
stc
mov
repnz
pop
and
in
shrb
push
add
sar
popa
add
mov
add
xchg
pshufw
std
out
mov
lods
jnp
add
add
sbb
push
jmp
cwtl
mov
add
mov
clc
xlat
rclb
add
in
xabort
aaa
xlat
call
add
in
sub
add
jecxz
mov
scas
pop
lea
mov
add
sub
add
test
out
insb
xor
add
lahf
stc
add
pusha
add
adc
add
test
pop
mov
popa
add
fcmovbe
mov
add
lret
ljmp
clc
cmp
add
cld
jmp
sub
pusha
add
jns
clc
insb
sub
dec
data16
in
or
test
clc
outsl
and
add
cmp
dec
xor
add
add
mov
popf
sub
sub
mov
cld
jmp
or
aaa
dec
cmp
cli
adc
add
adc
cmpsb
clc
jecxz
push
adc
add
add
jne
das
mov
mov
pop
mov
and
add
clc
pop
clc
test
das
cltd
mov
clc
je
mov
adc
add
add
mov
sub
add
jecxz
repz
call
cld
jmp
data16
es
in
stos
or
add
addr16
push
jge
arpl
add
add
fistps
xchg
pop
cmp
add
cld
jmp
insb
sbb
xor
adc
add
data16
fldcw
clc
shrb
jmp
clc
prefetchw
or
hlt
jl
mov
clc
stos
inc
clc
in
adc
jo
add
add
add
jns
lods
std
ret
clc
inc
add
push
mov
cld
jmp
inc
dec
scas
jnp
inc
clc
pushl
sar
jmp
or
push
in
inc
add
outsl
push
add
jnp
clc
outsb
cmp
scas
fiadds
mov
out
mov
add
dec
out
imul
clc
fwait
loopne
cld
shl
mov
lret
add
mov
sub
lret
clc
ja
clc
sbb
add
dec
and
add
add
cs
data16
or
cmp
jl
or
clc
sub
rcr
insb
std
mov
fwait
arpl
add
in
pop
clc
and
add
sub
add
add
push
adc
add
cmp
xchg
add
jl
aam
clc
mov
clc
aaa
pusha
add
xchg
ret
clc
cmp
sbb
lods
inc
clc
dec
daa
clc
lods
push
add
cmp
clc
adc
add
dec
cmc
pop
push
clc
pop
push
add
sar
mov
mov
ljmp
in
test
or
add
mov
clc
xlat
and
jne
add
and
add
add
jmp
add
inc
clc
imul
jno,pn
add
jl
mov
add
clc
ret
jns
clc
filds
clc
test
add
sbb
push
sahf
inc
add
push
sub
inc
pop
dec
sub
clc
arpl
add
add
imul
sub
mov
clc
inc
clc
lret
loopne
pop
jns,pt
xor
add
pop
repz
push
scas
aas
xor
add
add
add
iret
lods
fadd
clc
mov
cwtl
pop
jl
nop
aam
dec
xor
add
dec
add
clc
jecxz
gs
jge
iret
repz
inc
clc
add
add
mov
ss
ret
mov
cmpsb
push
xor
add
clc
push
add
jge
clc
sub
aam
clc
test
mov
add
cs
mov
aas
jle
das
out
imul
add
test
sbb
xchg
push
add
out
mulb
add
add
sbb
xor
add
clc
mov
sub
sbb
clc
ljmp
or
cld
jmp
outsl
xor
add
cld
or
add
cli
addr16
dec
push
aam
repnz
test
aaa
xor
clc
in
scas
push
add
out
stc
xbegin
add
cld
jmp
imul
add
jge
test
sbb
fisubrl
mov
cld
jmp
sub
add
mov
inc
add
loop
gs
xor
mov
clc
addr16
jl
dec
push
add
xor
adc
add
clc
imul
and
add
fisubrs
push
pop
jg
movsb
clc
sbb
add
add
clc
push
popa
add
stos
jne
sub
lods
sar
add
add
add
mov
and
cmp
inc
clc
into
popf
pop
repz
add
ror
aaa
inc
add
xor
add
sti
mov
clc
cmp
add
add
add
iret
sbb
sbb
clc
cltd
inc
clc
and
adc
add
pop
pusha
add
lock
clc
sub
clc
mov
cs
adc
outsb
movsl
clc
imul
inc
clc
pop
aam
stos
data16
pop
inc
add
and
call
add
out
pop
sbb
cld
jmp
dec
adc
lcall
ja
out
mov
cld
jmp
inc
xchg
mov
pop
dec
mov
pop
clc
jg
ljmp
xor
imul
xchg
mov
sbb
add
mov
and
push
jmp
sub
or
sbb
add
out
inc
clc
jno,pn
add
and
add
das
and
add
pop
xchg
lahf
cmp
jne
add
adc
add
add
add
push
add
aam
clc
mov
clc
or
daa
clc
dec
pusha
add
xchg
bound
add
xchg
jge
jns
in
addr16
nop
out
jmp
add
mov
aas
outsb
mov
in
fcomp
jno
add
add
adc
clc
cmp
outsb
lahf
mov
mov
add
xchg
cwtl
addr16
sub
clc
clc
xor
add
add
xabort
clc
jbe
clc
arpl
add
clc
ffree
clc
leave
popl
add
cld
sub
sub
clc
hlt
fimuls
movsl
clc
ret
out
xchg
and
add
add
clc
stos
inc
add
mov
cmc
pop
inc
clc
dec
and
add
mov
mov
int
clc
aad
clc
test
push
bound
add
testb
mov
mov
sub
fs
cmp
xchg
mov
sub
add
fs
inc
clc
cltd
stos
lods
imul
and
add
mov
fimull
clc
iret
jg
out
or
and
add
cmp
and
or
in
cmp
ret
in
and
add
add
add
sub
mov
js
add
loopne
popf
pop
clc
hlt
fcmovne
push
aas
add
add
clc
roll
xor
shll
xbegin
cmpsl
clc
mov
add
mov
cld
jmp
sahf
inc
sub
addr16
js
push
pop
mov
push
mov
or
pop
jmp
and
add
add
clc
cmp
xchg
xchg
in
or
inc
clc
in
outsb
daa
clc
push
jo
add
ja
cmpsl
clc
mov
out
sbb
cmp
inc
add
pop
push
adc
add
xabort
pop
or
sar
add
dec
lret
xbegin
dec
gs
out
cmp
clc
sbb
push
clc
sub
add
sub
cmc
js
clc
sbb
fs
xlat
hlt
cmp
movsl
clc
sbb
hlt
cmc
pop
clc
mov
aam
xchg
and
add
clc
ss
add
add
shlb
add
stc
int
add
ret
xchg
icebp
or
dec
dec
adc
add
jmp
ja
lods
dec
movsb
dec
out
mov
sub
adc
add
add
movsb
clc
cmp
clc
test
clc
push
add
add
add
pusha
add
pusha
add
jmp
in
dec
mov
mov
clc
push
adc
add
sbb
jmp
jp
movsb
and
and
add
push
ret
and
add
ljmp
imul
push
adc
xchg
cli
push
and
cld
jmp
pop
pop
mov
dec
pushf
inc
add
or
jg
clc
mov
add
mov
clc
imul
add
clc
mov
int3
xor
cmp
js
mov
jg
xor
add
jo
add
add
fcmovnu
fstps
dec
sar
aaa
cmc
ret
clc
xchg
sub
and
add
repz
clc
js
xor
sbb
add
lods
mov
clc
dec
xor
add
cmpsb
clc
cmp
clc
test
and
add
add
xor
add
push
add
inc
add
jnp
clc
pushf
jle
clc
mov
clc
bnd
push
or
add
lcall
add
sub
shrl
add
add
cld
test
clc
sub
add
cwtl
push
add
sub
add
mov
cmp
add
mov
pusha
add
scas
bound
add
clc
mov
loopne
cmp
adc
add
clc
fildll
add
clc
in
mov
push
ret
clc
loopne
stos
into
sbb
adc
add
mov
adc
add
add
jno
add
or
loop
fsubrp
mov
sbb
data16
popf
cmc
push
add
cwtl
mov
add
clc
pop
jg
in
nop
outsb
ret
clc
jmp
fabs
clc
nop
add
add
in
mov
pop
cmpsl
clc
mov
push
or
clc
mov
dec
lods
jecxz
out
mov
clc
mov
clc
dec
jl
data16
fs
add
adc
add
clc
inc
clc
mov
clc
mov
fnstenv
cld
sub
faddl
dec
mov
popa
add
in
stc
sub
add
clc
mov
inc
add
inc
add
aad
xchg
cli
sbb
clc
arpl
add
clc
pop
lods
sbb
add
mov
push
shrl
fisubrs
ss
ret
ja
adc
es
aam
and
add
jg
clc
cs
fnstenv
add
repz
clc
fwait
icebp
sub
jl
clc
lcall
clc
and
add
push
inc
clc
inc
clc
inc
add
mov
add
dec
data16
sub
mov
jno
add
cwtl
insb
jmp
clc
cmp
sub
dec
dec
cld
and
add
clc
lock
add
sbb
push
in
jmp
adc
sbb
or
jecxz
push
adc
add
add
clc
out
leave
inc
add
inc
clc
or
add
xchg
in
fdivrl
add
aaa
out
mov
cmp
mov
incb
add
cltd
das
jmp
add
add
or
clc
pusha
add
out
sbb
clc
outsb
ds
add
in
push
push
adc
inc
add
inc
add
inc
clc
push
aam
clc
cld
push
ja
mov
pushf
mov
clc
in
push
clc
call
jmp
push
add
sbb
and
add
clc
jnp
sub
clc
shl
clc
xchg
add
clc
push
add
insb
cmp
jbe
xabort
mov
jmp
add
clc
sub
fnstcw
fwait
lock
xchg
cmpsl
clc
fmul
push
add
add
cmp
clc
fdivrs
insb
inc
add
cmp
xabort
clc
sbb
add
add
add
push
add
add
add
add
pushf
adc
or
xchg
sahf
fmulp
sar
rorb
mov
xchg
adc
add
xor
add
pop
imul
add
add
push
fdivr
ljmp
jp
xchg
scas
jnp
xor
xor
clc
clc
test
add
add
cs
xchg
push
je
cld
jmp
mov
icebp
pop
clc
or
clc
pop
clc
fdivrs
clc
repnz
fsubl
add
hlt
sti
testb
add
cmp
mov
add
std
mov
clc
sbb
mov
lret
ret
clc
mov
clc
and
xchg
and
repz
popf
jo
add
adc
add
mov
in
jg
mov
clc
push
jmp
dec
nop
and
imulb
xor
add
sar
es
mov
sbb
test
sti
icebp
mov
clc
adc
add
clc
lock
cmp
imul
outsl
dec
mov
add
pop
clc
aas
xor
add
negb
add
int3
cmp
lret
outsl
inc
clc
adc
add
lahf
mov
xbegin
add
dec
cmp
nop
sub
clc
jb
add
jne
xchg
ds
push
in
icebp
divb
add
fstl
ret
clc
stc
inc
clc
add
add
xchg
cmpsl
clc
adc
add
enter
enter
add
stos
loope
pop
jb
add
stos
rcl
scas
clc
mov
add
aad
add
add
out
gs
jbe
add
rcr
xchg
or
dec
imul
clc
clc
mov
sub
clc
ss
mov
and
add
clc
pusha
add
mov
add
fs
ret
clc
mov
jp
add
add
push
cld
sar
clc
jae
add
push
add
fs
aaa
shll
clc
xor
add
cmp
clc
dec
in
xchg
push
leave
ret
add
imull
dec
scas
sub
add
mov
ss
ret
adc
clc
and
pop
inc
clc
clc
pop
clc
stos
movsb
clc
icebp
pop
clc
icebp
outsb
xor
add
clc
cmp
xchg
fsubrs
add
dec
gs
sub
add
clc
cmp
add
cld
mov
clc
cmc
loop
cld
lods
mov
and
add
loope
outsl
and
add
jmp
adc
add
adc
add
pop
adc
add
add
sbb
pop
xchg
aas
enter
add
data16
filds
add
aas
int3
in
mov
jno
add
add
jo
add
jne
stos
iret
pushf
xor
add
cld
and
add
clc
jg
clc
add
add
or
push
cmpsb
clc
nop
mov
cld
jmp
pop
dec
xchg
ja
sahf
loop
xchg
push
jmp
dec
imul
jb
add
clc
add
push
clc
jge
clc
filds
add
add
bound
add
add
mov
or
jne
cmp
pop
clc
mov
add
je
clc
sbb
add
add
add
das
cmp
clc
ficomps
cmp
dec
push
add
adc
xbegin
iret
adc
add
add
push
add
jle
add
imul
pop
adc
add
clc
cmpsl
clc
clc
ja
movsl
clc
cld
icebp
cmp
add
xchg
out
es
adc
mov
cmp
pop
enter
mov
add
mov
sar
clc
add
add
pop
jbe
clc
cli
mov
jbe
add
cli
mov
adc
add
add
mov
daa
clc
inc
add
push
and
add
clc
repz
sub
dec
test
add
stc
int
clc
sub
sub
rcll
clc
mov
ret
dec
sbb
test
mov
add
jmp
test
add
ss
ret
mov
insl
cmp
jl
popa
add
int
in
push
jae
add
pop
ss
or
movsl
clc
mov
setno
mov
cmpsb
clc
in
adc
add
add
add
add
xlat
in
sbb
add
cmp
clc
xchg
int3
aad
add
cwtl
mov
clc
lret
shll
or
xor
add
add
enter
cmp
clc
lcall
fucomi
in
xbegin
clc
cs
xchg
popa
add
cmp
clc
divl
shl
cld
jmp
aaa
jp
frstor
mov
mov
push
push
add
dec
jne
mov
clc
mov
add
fnstenv
clc
scas
movsl
clc
in
xabort
loope
test
cmp
add
or
clc
movsb
clc
or
cmp
xor
daa
clc
mulb
add
fsubrl
mov
mov
int3
int
popf
and
add
add
mov
add
gs
popa
add
shlb
add
mov
adc
jmp
push
mov
clc
add
add
add
add
imul
mov
es
iret
mov
xabort
xchg
inc
add
adc
add
jecxz
jne
add
xor
xor
add
dec
jp
mov
ret
clc
add
add
add
add
sar
leave
int3
mov
add
into
xchg
mov
mov
dec
insb
or
clc
jns
lods
sub
clc
imul
jmp
add
dec
stos
lcall
jmp
or
xor
clc
sub
popf
xlat
mov
cld
jmp
aad
clc
es
fisttpll
add
jg
clc
cmpsl
clc
xor
cld
jmp
push
or
mov
add
pop
dec
insl
out
jge
clc
fistpll
add
leave
cmp
add
and
add
rorb
clc
push
sbb
sbb
inc
add
jge
cmp
enter
xor
add
gs
stos
imul
dec
xchg
mov
push
mov
cld
jmp
inc
push
test
add
cmpsb
clc
xor
fisubs
outsl
ds
js
outsb
pop
sub
add
adc
add
in
or
add
add
push
add
dec
std
jnp
clc
aad
outsl
and
add
xchg
dec
shlb
loope
sbb
jmp
or
mov
clc
mov
sub
add
adc
add
ljmp
clc
fdivs
clc
imul
add
add
jl
lahf
imul
clc
popa
add
mov
add
jecxz
and
add
sbb
add
lret
aaa
in
pushf
popf
mov
jns
add
bound
add
clc
sbb
sti
and
add
add
int3
mov
clc
cmp
push
add
add
ljmp
rclb
add
push
add
cmpsb
clc
pop
clc
jge
clc
fildll
add
aam
clc
aaa
hlt
mov
clc
add
add
clc
cld
adc
add
clc
xor
add
xchg
adc
clc
clc
call
push
clc
mov
cli
cld
jmp
cmpsl
clc
sbb
push
ret
pop
aaa
es
pop
xlat
add
add
add
call
cmp
add
add
mov
jmp
dec
adc
add
add
push
hlt
cld
cli
dec
frstor
add
and
add
clc
sbb
rcl
rolb
sbb
clc
mov
or
repz
aam
and
cmp
mov
cmp
add
sar
xlat
jg
add
mov
add
das
cld
xchg
ss
cld
jmp
aas
nop
mov
fiaddl
clc
jge
add
cld
cmpsl
clc
adc
add
ja
adc
add
push
call
cld
jmp
das
push
mov
push
push
data16
stos
pushf
add
add
leave
cltd
cli
aaa
cmp
push
add
arpl
add
add
pop
and
add
sub
xlat
decb
test
xbegin
movsl
clc
repz
xchg
xor
add
jbe
clc
ja
clc
in
xor
add
jle
or
sar
aaa
insb
inc
clc
cli
sar
add
sub
imul
inc
add
push
clc
inc
add
ds
lret
push
mov
push
add
clc
and
add
mov
or
cwtl
or
inc
add
cmpsb
clc
fisubrs
test
lods
ret
insl
jl
add
sbb
jmp
mov
mov
jmp
nop
outsl
cmpsb
out
xor
add
cmpsb
clc
sbb
add
push
push
push
cld
jmp
sub
add
test
mov
cld
jmp
scas
cmpsl
clc
rcl
out
jnp
es
xchg
cmp
xabort
add
sub
push
add
and
sbb
test
call
enter
jp
sub
cld
jmp
sub
mov
mov
clc
mov
enter
cmp
gs
fcompl
mov
lret
je
ljmp
filds
add
and
in
sub
mov
ss
ret
pop
subb
push
add
divl
jl
xchg
ss
es
pop
repz
add
add
clc
jo
add
mov
push
add
cwtl
fidivl
fists
add
flds
xlat
clc
jle
xor
pop
pop
xchg
fisttpll
dec
add
add
clc
repz
scas
into
enter
add
clc
lods
mov
clc
or
jmp
sub
push
sub
cmp
add
mov
add
cmpsb
clc
popf
inc
add
addr16
out
lea
cmpsb
clc
cwtl
inc
add
xor
add
push
add
cld
jmp
inc
dec
fs
clc
xchg
fiaddl
add
mov
add
jmp
dec
inc
add
insb
sbb
movsl
std
call
add
cmovo
add
in
jecxz
aas
outsb
jle
nop
push
pusha
cld
jmp
xor
jae
add
test
sbb
jnp
add
add
inc
add
adc
add
adc
clc
adc
add
out
mov
add
out
leave
lahf
mov
in
test
sbb
shll
clc
sar
add
dec
insb
inc
clc
cmp
xchg
add
loop
xchg
dec
adc
add
dec
ja
sub
xchg
iret
jl
std
push
add
cld
jmp
sahf
mov
or
jne
cltd
jg
add
add
outsb
sub
mov
stos
add
add
outsb
mov
push
add
mov
cli
mov
xor
add
add
clc
push
add
icebp
push
push
jge
cmp
dec
jns
clc
aaa
out
inc
clc
sbb
clc
dec
fs
dec
and
add
pop
cmp
std
cmp
sbb
clc
dec
cmpsl
clc
out
mov
or
loop
mov
addr16
pusha
add
xor
add
pop
inc
add
sub
clc
jo
add
clc
inc
add
stos
fdivs
fildll
clc
mov
scas
add
add
or
scas
pushf
xor
cli
daa
clc
sti
movsb
clc
cmp
clc
xlat
movsl
clc
cmp
add
clc
dec
mov
add
cmp
add
inc
clc
repz
clc
into
dec
leave
data16
push
jl
cld
jmp
lods
inc
add
and
add
add
jmp
lea
cld
dec
or
lahf
xor
add
sub
cld
jmp
mov
adc
in
test
scas
cmpsb
clc
jle
mov
cs
xbegin
add
ret
clc
jmp
pushf
fsts
add
dec
or
clc
int3
aad
and
add
sbb
jmp
add
xchg
or
cmpsb
clc
lcall
push
cltd
fdivrp
int3
sbb
inc
add
test
arpl
add
test
loope
pop
cmp
xor
add
daa
clc
insl
inc
add
in
cltd
add
sbb
push
pop
ss
ret
insb
mov
xor
rol
clc
cmp
pop
pop
add
inc
clc
cltd
imul
push
test
fisttpll
sbb
add
jmp
pop
repz
cmp
or
add
add
pop
aad
and
add
clc
inc
add
add
add
add
xbegin
push
add
scas
inc
add
xor
add
int
push
clc
add
in
loop
jmp
sar
inc
add
iret
add
add
jbe
clc
lods
leave
adc
add
inc
clc
cmp
add
imul
clc
arpl
add
add
nop
sbb
das
xchg
loopne
pop
xor
int
clc
sbb
pop
pop
cli
add
add
test
mov
cwtl
push
sub
jp
pop
clc
std
mov
jnp
add
pop
inc
add
add
pop
push
add
in
rol
clc
and
add
clc
fcoms
add
std
aam
mov
pusha
add
ljmp
add
pop
pop
xor
add
clc
cmp
add
add
jno
add
push
mov
adc
sbb
add
add
add
ss
imul
adc
add
xchg
and
add
add
add
cli
mov
add
data16
sti
jl
mov
mov
int
clc
fisttpll
cmp
popf
sub
js
test
add
add
clc
adc
in
mov
xchg
gs
cmp
cli
push
inc
inc
add
inc
pop
je
je
out
mov
mov
clc
mov
rcrl
push
cld
jmp
lods
sub
je
cmp
in
in
fdivrl
kmovw
jnp
push
mov
scas
push
add
sub
clc
das
fistpl
cmp
push
dec
jo
add
add
inc
add
aaa
sti
fsubrp
pop
test
and
add
or
add
mul
clc
dec
aam
bound
add
pop
rclb
mov
add
add
lea
clc
inc
add
xor
add
add
aaa
push
clc
add
add
add
aad
add
jle
sbb
jnp
clc
lret
pusha
add
sar
sahf
mov
dec
insl
gs
adc
add
cmp
mov
ds
in
and
add
das
and
add
clc
rol
clc
mov
clc
inc
add
test
and
dec
sub
cmpsl
clc
je
mov
or
inc
clc
mov
add
push
push
ss
ret
lea
or
xchg
jmp
pushf
pop
xchg
das
sbb
add
cmpsb
clc
add
cld
or
hlt
ret
ss
add
out
inc
add
sahf
push
cmp
lret
cld
jmp
pop
je
fwait
nop
pusha
add
xor
add
inc
add
pushf
lcall
repnz
mov
add
scas
clc
cli
mov
add
push
mov
jmp
popa
cmp
add
ret
clc
call
in
sbb
add
les
add
iret
cmpsl
clc
sar
sbb
add
cmc
gs
aam
fwait
enter
or
add
daa
clc
data16
push
cli
and
add
lods
mov
clc
mov
inc
clc
insb
mov
fistpl
and
add
xbegin
add
aaa
mov
push
sbb
call
add
pop
jne
in
jmp
xchg
fisubl
int
add
sbb
je
lret
mov
dec
cmp
test
cmp
or
push
fbld
add
add
adc
mov
adc
popf
lock
clc
inc
clc
and
add
testl
movsb
clc
fcoms
add
inc
clc
sub
mov
add
add
or
add
xchg
nop
pop
adc
add
test
in
dec
inc
clc
mov
dec
mov
sti
stos
gs
lcall
jmp
popa
sub
sub
xchg
mov
imul
mov
add
sub
jo
add
clc
pop
outsb
adc
push
push
mov
pop
add
add
mov
push
push
pop
outsl
iret
outsl
pop
clc
mov
pop
daa
clc
sbb
addr16
clc
leave
out
clc
lret
sub
pop
clc
clc
test
ja
clc
mov
clc
je
clc
addr16
fstl
js
clc
xabort
mov
mov
cmp
clc
xor
push
cli
or
mov
clc
push
iret
notb
add
and
add
lcall
loop
inc
clc
mov
cmp
mov
jmp
pop
or
mov
lcall
int
add
cmp
and
add
add
or
inc
clc
pop
cmpsl
clc
bswap
or
pop
cmp
clc
test
pop
pop
jge
add
xchg
add
shll
add
sbb
das
mov
add
add
clc
fstl
add
cmc
adc
add
add
xor
add
clc
jecxz
push
mov
add
xabort
cmc
dec
mov
addr16
ja
clc
mov
add
scas
in
aad
clc
incl
add
or
mov
pop
test
clc
cmp
add
inc
add
push
mov
pop
mov
clc
add
add
testl
bound
add
add
mov
add
pop
jp
incb
add
jbe
clc
inc
clc
xchg
arpl
add
clc
and
add
add
loopne
lahf
test
mov
clc
jle
mov
add
je
clc
xchg
hlt
jg
ret
clc
push
mov
or
clc
int
add
fmul
das
mov
xchg
stos
and
add
clc
mov
sub
fcmovnu
repz
add
out
scas
lret
clc
adc
or
leave
ffree
clc
mov
sub
add
fbld
add
jecxz
pusha
add
add
add
iret
jo
add
mov
dec
sub
pop
outsb
push
sbb
insb
cmp
inc
add
mov
jns
add
or
fwait
mov
sar
xchg
insb
pop
clc
jnp
bound
add
xchg
pop
mov
cmp
clc
mov
ret
xchg
arpl
add
cltd
push
in
xchg
lret
clc
dec
mov
cli
push
push
cwtl
gs
lret
push
add
sbb
sbb
cmp
add
add
mov
xchg
cmp
mov
clc
mov
fmull
call
dec
add
inc
clc
inc
add
mov
and
add
int3
jbe
sti
pop
mov
add
add
test
pop
cli
sub
jecxz
cmp
or
mov
clc
mov
clc
mov
clc
add
add
push
cmpsl
clc
adc
add
add
clc
iret
xor
add
add
add
or
pop
xchg
repnz
mov
jecxz
fsubrs
xchg
cmp
filds
shl
cmp
clc
popa
add
lahf
inc
clc
lret
or
cwtl
dec
inc
clc
adc
add
clc
cmc
add
add
cmc
imul
mov
mov
add
jmp
inc
add
jb
add
mov
jle
clc
or
add
inc
clc
outsb
xchg
xchg
fimull
add
jae
add
cmpsb
clc
inc
clc
sti
adc
add
inc
clc
adc
pop
test
jg
add
aad
fcmove
mov
dec
cmpsb
clc
push
sahf
mov
add
mov
inc
clc
xor
add
clc
jmp
and
xor
add
mov
pop
outsb
mov
jle
add
sbb
add
xchg
mov
lcall
insb
das
cmp
add
xchg
inc
add
inc
add
push
xor
cmp
cmp
clc
adc
clc
mov
mov
clc
ret
addr16
mov
mov
jb
add
inc
clc
mov
add
out
enter
add
test
sbb
clc
sub
push
add
sub
clc
jae
add
ret
repz
add
mov
gs
sar
loopne
add
add
movsb
clc
mov
cmp
clc
sbb
add
and
add
and
mov
clc
cwtl
mov
clc
adc
add
clc
xchg
cmp
clc
mov
add
sar
testl
clc
jo
add
add
ds
add
sar
or
push
inc
clc
nop
scas
test
gs
test
xor
mov
add
mov
bound
add
add
icebp
gs
sbb
add
roll
dec
xchg
es
test
std
inc
clc
mov
lods
test
aam
add
adc
add
dec
stc
in
jns
jmp
lock
add
call
adc
clc
hlt
mov
add
add
mov
in
std
cld
ds
lahf
and
dec
cmp
js
clc
adc
add
clc
and
add
loopne
pop
icebp
xor
clc
bound
add
clc
sar
push
repz
fistps
cmp
imul
popf
test
add
sbb
pop
or
push
sti
pop
scas
sar
clc
and
add
xor
add
inc
clc
xlat
inc
add
push
clc
movsl
clc
int3
aad
negb
push
ret
clc
or
clc
pop
sub
adc
add
cmp
clc
push
clc
push
sub
add
add
add
pop
jbe
adc
int3
and
or
clc
aam
jns
xor
add
clc
sbb
dec
hlt
sub
clc
cltd
xor
add
add
xor
add
push
push
and
add
fldcw
mov
clc
sub
add
add
mov
add
cmp
or
mov
clc
out
jb
add
add
scas
js
clc
fdivr
xbegin
arpl
add
mov
sub
pop
mov
mov
clc
jno
add
xchg
out
xor
add
std
in
or
clc
inc
add
popf
pop
sti
rorl
gs
imul
clc
mov
scas
cs
fs
fisubl
add
dec
scas
push
or
scas
dec
es
mov
dec
adc
mov
xchg
scas
xchg
cmc
iret
cltd
push
cwtl
outsb
inc
add
rcrl
popa
add
fwait
pop
stos
cmp
push
add
xlat
int3
test
and
add
mov
clc
xlat
sar
clc
out
minps
clc
data16
mov
clc
addr16
sbb
push
clc
xchg
sbb
dec
mov
clc
jmp
dec
leave
daa
clc
push
out
push
and
mov
and
add
addr16
das
cmp
dec
and
int3
sbb
jae
add
add
aaa
scas
in
push
add
iret
stos
sarb
pop
and
add
cwtl
cmp
mov
or
add
clc
aaa
add
add
add
or
add
mov
xor
clc
divb
add
sbb
loop
xbegin
clc
rclb
add
add
xchg
sub
cmp
xabort
push
add
loope
mov
mov
jbe
add
ss
jae
add
add
mov
sbb
lods
xchg
xor
enter
add
mov
add
imul
or
adc
add
clc
clc
jp
sbb
xchg
sbb
ljmp
clc
stos
scas
shrb
das
pop
ds
lahf
leave
cmp
pop
dec
adc
jg
push
and
hlt
icebp
cmp
sub
ret
pop
loop
ret
clc
fdivrl
test
mov
jo
add
push
dec
idiv
xchg
pop
lock
mov
add
lea
add
push
sti
inc
add
add
add
lret
mov
jecxz
mov
add
mov
loope
xor
dec
bound
add
clc
inc
clc
out
cmp
in
lcall
imul
clc
adc
add
add
pop
mov
clc
cmp
jo
add
mov
add
inc
add
lea
add
clc
lahf
ret
add
inc
add
imul
inc
clc
addr16
std
lret
outsl
lret
clc
xor
add
add
add
and
inc
add
sub
iret
xchg
add
add
inc
clc
push
add
mull
add
xor
add
out
imul
dec
sub
ss
test
xchg
into
fidivl
or
or
fcoms
xor
add
clc
fcmovnbe
mov
and
add
int3
int3
mov
dec
movsb
clc
mov
mov
inc
clc
imul
jle
fmul
test
out
sbb
repnz
add
jmp
sbb
inc
clc
incb
add
aas
cmp
jmp
clc
movsl
clc
fnstenv
fsub
clc
outsl
leave
jb
add
clc
lods
movsl
clc
in
enter
loop
out
daa
clc
dec
in
stos
xchg
sar
inc
add
sub
and
add
add
stc
mov
int3
xor
popa
add
add
mov
mov
add
add
add
pop
cmp
push
add
adc
clc
pop
or
add
ds
hlt
xor
add
fistps
clc
fdivrl
adc
cmp
add
add
mov
add
add
add
sub
insb
lret
popa
add
iret
adc
add
clc
jae
add
xchg
call
clc
fnstenv
out
in
jg
add
add
add
cltd
xchg
pop
add
add
jle
jae
add
mov
add
fucomip
pop
push
add
mov
cltd
dec
loopne
fpatan
lcall
add
add
testb
add
clc
lods
jmp
clc
bound
add
fs
xor
add
fnstcw
add
add
outsl
push
int3
out
fwait
pop
cmp
je
add
inc
add
jmp
ds
stos
insb
scas
int3
pop
pop
ret
clc
xlat
cmpsb
clc
scas
icebp
inc
add
ret
xabort
add
add
add
xchg
pop
sub
or
mov
jno
add
fbstp
inc
add
jae
add
jle
pushf
cmp
cltd
sbb
clc
add
inc
clc
aas
jbe
clc
jmp
add
or
out
leave
sbb
mov
clc
lret
add
clc
push
add
fadd
clc
dec
movsb
clc
test
add
fisubs
clc
cwtl
or
clc
gs
test
clc
adc
add
add
clc
push
add
sbb
cmp
add
int
cltd
aas
xor
add
cmp
iret
dec
pop
lahf
xlat
dec
call
xchg
inc
add
fwait
idivl
mov
cmp
add
pop
or
sub
mov
jl
add
cmp
clc
lods
outsl
data16
add
add
clc
fdivs
add
aas
sbb
add
xchg
into
test
adc
add
xor
lret
add
push
mov
pop
sar
sbb
es
out
sar
clc
outsl
in
out
roll
xor
push
data16
in
adc
add
clc
mov
xor
add
lcall
add
sbb
lcall
push
xchg
pop
xlat
mov
clc
lock
push
jns
fwait
mov
fmull
jnp
gs
je
adc
popa
add
pusha
add
in
sbb
or
add
push
push
insb
fs
je
clc
mull
pop
xor
add
insl
insl
dec
sbb
push
dec
and
add
ret
add
xchg
xchg
pop
jb
add
xchg
aam
clc
xor
scas
mov
or
add
clc
and
mov
clc
lock
mov
pop
sti
xchg
pop
push
lret
or
push
cmp
add
fisubrs
add
clc
cmpsb
clc
add
add
dec
xchg
cli
out
mov
stos
cwtl
add
add
xor
add
push
clc
sbb
insb
loopne
jb
add
popa
add
aam
clc
bound
add
shll
add
clc
adc
add
add
movsl
clc
lahf
sbb
and
add
lcall
test
hlt
mov
xor
add
add
mov
mov
scas
mov
out
scas
ss
xor
add
add
add
xlat
aad
fcoml
or
dec
sahf
mov
scas
xchg
mov
xbegin
popf
push
ja
sahf
sub
add
test
cmp
sahf
mov
dec
in
lods
cmp
sar
dec
pop
add
fbld
clc
xchg
fs
add
and
add
add
scas
dec
in
inc
add
lahf
das
sbb
iret
xor
add
nop
mov
jnp
add
icebp
test
cmp
inc
clc
xchg
inc
clc
mov
add
push
mov
add
inc
add
mov
dec
xbegin
clc
and
xor
add
add
and
inc
add
and
add
add
sub
or
add
add
imul
dec
jecxz
loope
aaa
cmp
pop
in
inc
clc
aaa
or
clc
movsl
clc
inc
add
ret
add
cmp
inc
add
gs
xor
add
sbb
add
clc
js
pop
movsb
clc
cwtl
loop
push
gs
mov
add
xchg
inc
clc
fnstenv
add
add
pop
clc
jle
and
mov
add
and
add
mov
mov
add
jmp
pop
or
add
iret
sahf
add
inc
add
ret
clc
clc
out
fsubl
adc
scas
and
clc
or
mov
mov
add
lahf
or
add
clc
out
loope
xchg
xor
add
clc
clc
imul
fmull
lret
add
xchg
shrl
aas
cmpsl
clc
mov
inc
clc
or
push
add
mov
sar
inc
clc
jae
add
xor
add
sub
clc
inc
clc
pop
push
sub
add
adc
add
jb
add
push
clc
dec
je
out
and
add
add
ret
clc
mov
inc
add
mov
xchg
xor
add
add
mov
lcall
add
pop
clc
xbegin
lock
lock
add
and
add
clc
repnz
int
clc
xchg
push
push
jnp
adc
jbe
clc
pop
lea
fimuls
xor
pusha
add
add
add
and
add
clc
or
ss
mov
and
add
jae
add
add
out
and
ja
clc
dec
shrb
bound
add
fildl
add
add
fidivrs
shrl
stc
xchg
or
int3
jb
add
clc
xchg
ljmp
cmc
lret
add
cmp
xlat
popa
add
cmp
adc
add
cmp
add
cmp
add
popa
add
mov
xchg
sbb
bound
add
xor
add
sti
out
sahf
pop
adc
add
clc
data16
mov
test
jecxz
pushf
jnp
jo
out
mov
add
or
clc
add
add
add
clc
fwait
or
bound
add
out
cmp
shll
lods
cmpsl
clc
adc
add
add
xchg
mov
add
add
mov
mov
xor
sar
clc
sbb
clc
dec
jmp
test
clc
xor
add
mov
pop
daa
clc
cmp
jae
add
add
dec
push
jo
add
clc
jb
add
pop
ja
add
and
scas
das
inc
add
ret
clc
lods
out
je
push
and
add
or
pop
mov
dec
fs
arpl
add
mov
aad
add
xor
add
clc
cwtl
clc
mov
push
lock
clc
push
imul
add
jl
out
inc
add
mov
data16
aad
cmc
out
jne
xbegin
sbb
inc
add
xor
add
sub
inc
add
ljmp
mov
adc
add
clc
loop
pusha
add
sub
fwait
jae
add
pop
dec
inc
clc
imul
clc
lock
or
add
clc
mov
clc
jns
repz
es
icebp
inc
clc
fcompl
int3
cli
int
push
sbb
sbb
clc
cmp
jl
inc
add
nop
arpl
add
jae
add
pushf
sub
add
clc
into
cmc
xor
xchg
ljmp
add
mov
clc
popa
add
idivl
jbe
clc
fsubl
mov
xbegin
xlat
aaa
in
xchg
enter
in
int3
add
add
clc
jmp
dec
popf
cmp
ret
add
and
add
clc
int3
arpl
add
clc
push
clc
jb
add
imul
add
hlt
stos
push
add
sti
dec
sar
mov
push
cmp
clc
dec
and
add
add
insl
sub
fisttpll
push
dec
sub
cmp
clc
imul
add
xchg
dec
stos
loope
push
movsl
clc
out
movsb
clc
mov
data16
jnp
add
cmp
push
add
sarl
fucomp
mov
sahf
push
or
clc
xchg
insl
xor
add
aas
mov
add
add
fisttpll
clc
xchg
mov
mov
push
sti
sbb
es
xlat
shl
push
dec
sar
int
test
jno
add
xchg
imul
add
jne
push
clc
push
add
jae
add
rolb
or
adc
add
clc
test
leave
push
add
sbb
clc
insb
fnstenv
add
add
cwtl
clc
sbb
mov
scas
shrb
cld
dec
jo
add
arpl
add
clc
and
add
cmp
jae
add
sbb
es
xor
add
add
pop
movsb
clc
aaa
mov
push
rorb
clc
mov
stos
test
or
clc
daa
clc
mov
js
push
flds
add
test
cmpsl
clc
lock
cmp
clc
push
add
pop
lret
rolb
mov
add
or
cmp
popf
idivb
xor
add
pop
push
cmp
clc
js
push
pop
data16
jbe
add
sti
dec
sarb
mov
clc
jno,pt
add
fidivrs
stc
jns
xchg
inc
add
mov
lea
clc
into
ds
inc
clc
dec
or
in
mov
push
jecxz
pop
int3
cwtl
xchg
neg
jo
add
add
add
push
lea
or
clc
sub
clc
mov
loop
pusha
add
inc
add
sub
bound
add
inc
clc
mov
fldcw
mov
add
add
lcall
lock
pop
clc
mov
clc
scas
mov
and
add
clc
lret
pop
fldcw
fisubl
add
add
and
add
adc
clc
sub
pushf
enter
add
mov
mov
xchg
popf
xchg
jb
add
scas
jb
add
add
test
stos
adc
add
xlat
push
sub
xchg
aas
mov
clc
and
push
add
es
jbe
xchg
inc
add
fndisi(8087
clc
sar
clc
xlat
sar
pop
ret
clc
cmpsb
clc
cmp
mov
add
add
pusha
add
int
clc
or
add
adc
add
popl
add
clc
lret
addr16
mov
popf
imul
stc
and
add
pop
ja
or
clc
mov
add
add
xor
clc
xchg
insl
mov
jnp
test
add
cltd
adc
clc
xchg
or
dec
add
add
push
sbb
sahf
xchg
or
dec
fdivl
add
pop
mov
and
add
clc
mov
clc
pop
ds
cmp
sar
ja
clc
popf
sub
jo
add
pop
jecxz
cmp
clc
popa
add
sar
push
xabort
add
test
pop
cmp
insb
stos
jle
dec
lods
aaa
pop
adc
add
push
cmp
cli
push
or
imul
or
ret
clc
pop
imul
mov
add
push
pop
pusha
add
jmp
add
clc
ds
dec
sar
lcall
clc
pushf
mov
xchg
sub
cmp
imul
cld
movsb
clc
aaa
push
clc
lahf
push
test
jl
iret
sub
clc
mov
clc
push
clc
push
add
adc
add
xbegin
in
or
add
add
cwtl
cmp
add
cmp
out
inc
clc
adc
add
cmp
adc
add
mov
test
fnstenv
add
clc
outsl
es
add
cmpsl
clc
enter
xchg
dec
lods
cmp
pusha
add
xchg
ja
repnz
jae
add
inc
add
push
or
sti
enter
popa
add
pop
loope
std
into
nop
jnp
jne
add
repz
call
add
in
mov
sub
xor
add
add
clc
pop
stos
enter
add
cld
mov
add
add
clc
in
jmp
add
xchg
in
stos
insb
and
xchg
pusha
add
cmp
clc
fidivrl
out
scas
ret
es
arpl
add
int3
ret
add
add
add
loop
repz
add
add
pushf
lret
add
je
add
pop
push
clc
mov
filds
add
add
ljmp
clc
push
mov
movsl
clc
mov
mulb
clc
adc
add
and
and
add
add
adc
add
repnz
in
ret
clc
mov
dec
lcall
add
ja
repz
add
mov
insb
fcomps
clc
aad
lret
push
add
xbegin
add
inc
add
and
cmp
clc
mov
push
xchg
out
jmp
add
add
add
add
push
add
mov
clc
repz
add
mov
add
jp
clc
movsb
clc
adc
add
add
rclb
xchg
xchg
mov
call
add
add
clc
enter
ret
test
xchg
cmp
cmp
rcpps
add
aas
test
lret
scas
and
add
test
xchg
jl
gs
call
dec
mov
stc
or
clc
arpl
add
cmp
mov
clc
in
and
add
dec
outsb
lret
fimuls
mov
pop
pop
mov
mov
ja
clc
or
leave
cs
cmp
add
adc
add
clc
addr16
ret
clc
dec
sahf
das
mul
clc
push
mov
and
add
add
clc
push
pop
pop
add
add
call
mov
clc
nop
dec
xchg
push
jne
lret
mov
add
lret
sar
add
mov
into
lahf
sahf
mov
clc
cmp
shlb
daa
clc
or
mov
push
clc
xor
pop
fistps
popf
mov
push
js
xchg
mov
sbb
into
aam
insb
cld
mov
mov
add
add
add
sub
or
vmovlhps
pop
ret
stc
imul
fs
mov
cmpsb
clc
mov
clc
out
ja
add
lods
mov
push
filds
push
gs
xchg
in
mov
xchg
cmp
inc
add
stos
push
add
or
clc
cwtl
and
add
cwtl
sbb
clc
sbb
out
ret
clc
or
inc
add
inc
add
inc
clc
addr16
add
add
xabort
stos
pushf
inc
clc
push
test
add
push
add
sbb
icebp
sahf
std
adc
add
sub
add
mov
clc
fiadds
add
insl
inc
add
loopne
xlat
push
repnz
movsb
clc
bound
add
clc
jae
add
ja
mov
fnstenv
cli
inc
add
mov
clc
lods
insb
ds
add
push
add
repnz
adc
add
push
and
add
icebp
cmp
ss
repz
pop
xchg
ljmp
jg
xor
add
inc
clc
lods
sbb
add
sar
clc
mov
clc
or
add
clc
pop
or
clc
fbld
sub
lret
sbb
lea
cwtl
sub
lret
enter
add
push
clc
in
hlt
sbb
add
mov
add
xchg
add
imul
lahf
cs
cmp
fists
jmp
sbb
clc
sti
and
add
xchg
pop
popf
incl
push
movq
clc
xchg
cmp
jne
adc
push
clc
ss
add
into
mov
push
mov
add
rcll
add
xchg
mov
clc
push
and
add
inc
clc
ret
clc
jle
xor
add
clc
fadds
add
hlt
cs
add
xor
add
adc
add
or
jp
add
cmp
lahf
adc
stos
ret
sar
std
movsb
clc
out
outsl
mov
add
sbb
mov
and
add
pop
clc
idiv
ret
pop
loop
outsb
int
clc
xchg
dec
xchg
xor
add
mov
push
sub
push
add
push
add
dec
cmp
mov
jne
or
ret
push
lahf
es
lcall
clc
pushf
sahf
mov
fsubr
inc
add
das
stc
pop
repnz
movsb
clc
pusha
add
xchg
push
add
nop
loope
cmpsb
clc
in
mov
add
aam
into
in
mov
ret
clc
outsb
cmp
imul
daa
clc
push
push
clc
push
add
in
xchg
mov
add
pop
add
add
xchg
mov
add
sub
add
mov
add
dec
aad
mov
mov
xchg
mov
push
clc
cmp
mov
add
add
add
clc
jno
add
mov
stos
cmpsl
clc
sahf
adc
add
clc
sar
icebp
xor
add
lock
push
add
mov
clc
add
add
add
rorl
sar
mov
xor
cmp
clc
xchg
leave
and
add
ret
clc
vmwrite
scas
cmp
xbegin
jbe
cmp
popa
add
and
add
add
dec
cld
test
cmp
cmp
stos
dec
push
add
and
ret
clc
push
jnp
jle
clc
cmpsb
clc
movsl
clc
sub
add
daa
clc
push
bound
add
xor
add
add
fbstp
mov
dec
xor
clc
jno
add
mov
clc
mov
jmp
push
adc
add
fldcw
jge
std
fiaddl
xlat
cwtl
or
add
repnz
jb
add
mov
add
mov
add
cmp
lods
loope
xchg
lahf
addr16
das
mov
stc
fcompl
movsl
clc
mov
push
add
pushf
insl
das
mov
cmpsb
clc
cmp
add
lret
add
call
and
add
push
lea
add
add
ss
int3
dec
es
dec
push
int3
cmc
aas
mov
cmp
insb
cmp
push
imul
add
add
add
sbb
cwtl
mov
xchg
daa
clc
dec
test
jl
rorl
cmp
clc
clc
test
add
add
test
ret
clc
enter
sar
push
xchg
mov
add
lret
add
in
ljmp
mov
pop
je
dec
stc
call
or
cmp
adc
add
adc
clc
data16
xchg
mov
sbb
test
fmuls
clc
pop
inc
add
ss
add
add
add
and
add
add
addr16
push
mov
test
xchg
int3
xchg
test
adc
clc
dec
icebp
dec
pop
and
aam
mov
add
pop
xor
add
shll
add
add
mov
std
xchg
shlb
lret
ficoml
add
std
in
js
dec
imul
mov
add
xor
add
clc
and
add
clc
jmp
add
adc
unpckhps
xchg
movsb
clc
inc
clc
cmovb
add
add
cmp
divb
add
push
xor
add
sub
add
pop
jle
dec
mov
cwtl
jmp
add
call
add
rorl
push
sar
fdivrs
clc
mov
clc
push
jp
mov
add
xor
add
cmp
iret
jge
pop
out
mov
add
scas
adc
and
add
jmp
mov
cmp
test
or
clc
test
clc
and
add
add
mov
ret
loope
mov
clc
test
mov
enter
clc
pop
cmp
add
add
fdivrp
xchg
adc
add
jl
mov
mov
add
int3
jl
aas
test
cltd
cmp
jno
add
outsl
dec
jbe
or
pop
gs
cld
loop
pop
sbb
add
cmp
add
xchg
dec
mov
outsb
iret
test
clc
jbe
clc
mov
sar
in
sub
cmp
fldt
clc
movsl
clc
push
mov
clc
mov
clc
sarl
jnp
jmp
jecxz
aad
lahf
lods
push
push
mov
clc
insb
cmp
clc
loope
fiaddl
clc
and
add
cmp
enter
push
jb
add
aam
std
inc
add
loopne
inc
clc
dec
and
add
mov
mov
cmp
lcall
inc
clc
cmp
add
hlt
xabort
ficoml
test
clc
daa
clc
leave
stc
lret
dec
mov
pusha
add
mov
clc
fsubs
add
mov
clc
daa
clc
xor
add
add
sub
push
clc
aad
mov
ror
iret
sbb
add
add
xchg
xor
add
add
lret
xchg
push
dec
sub
das
iret
cmpsl
clc
mov
add
add
mov
je
push
add
xor
jne
clc
sarb
mov
ret
fsubs
add
pop
clc
inc
clc
inc
clc
add
add
or
clc
push
add
call
mov
push
add
stos
mov
cmp
shrl
inc
add
pop
adc
add
fsubrl
xchg
xlat
lret
dec
clc
cmp
add
fsubrs
add
jl
add
push
out
xor
add
jnp
clc
and
add
add
push
stos
lcall
mov
clc
aam
add
add
out
and
add
and
add
add
jg
aas
and
ret
clc
xchg
mov
clc
lcall
add
and
add
add
hlt
stc
std
mov
leave
cmp
mov
adc
add
add
mov
clc
and
add
add
push
movsl
clc
add
add
fnstenv
add
xor
add
ja
inc
clc
xabort
jnp
aas
mov
lods
xchg
jae
add
cmpsb
clc
mov
clc
push
push
push
clc
sbb
clc
in
fbstp
out
adc
add
add
mov
sub
or
pushf
sbb
or
add
cmp
out
bound
add
sar
fisttps
jg
mov
add
int3
xor
insl
push
add
or
inc
add
sbb
clc
test
cmp
inc
clc
lcall
jecxz
push
xor
clc
cmp
cmp
clc
xchg
nop
sub
clc
pop
mov
add
movsb
clc
cltd
jo
add
sub
xor
add
lock
push
add
and
add
clc
jl
sbb
insb
movsb
clc
mov
add
mov
add
sbb
add
clc
dec
call
add
add
cli
popf
test
mov
ret
clc
sbb
mov
add
clc
mov
nop
test
dec
mov
add
icebp
mov
in
mov
clc
sub
sarb
add
add
cmp
add
mov
add
mov
add
test
inc
add
xchg
out
and
add
cmp
sbb
add
dec
ljmp
mov
add
xlat
arpl
add
clc
push
or
jo
add
jle
idivb
adc
xchg
mov
mov
add
icebp
xlat
mov
push
add
pusha
add
or
add
sar
clc
out
in
sub
clc
and
add
push
add
xor
clc
enter
clc
jecxz
jge
mov
sti
clc
inc
clc
and
clc
aas
stc
cmp
pop
cmp
clc
cmp
clc
jle
inc
clc
ljmp
loopne
sub
add
add
jne
repnz
idivb
clc
xabort
clc
inc
clc
daa
clc
out
and
dec
not
cs
out
pop
sbb
add
mov
add
cltd
or
xchg
and
add
push
add
add
jle
add
mov
cmp
call
jne
sahf
ret
clc
dec
pushf
ds
clc
add
add
push
xchg
js
add
add
and
add
add
xchg
pop
sub
clc
cmc
mov
push
add
push
xchg
mov
pushf
mov
es
mov
add
add
clc
jno
add
sar
call
or
out
test
push
or
clc
fldl
add
mov
dec
test
cmpsl
clc
adc
add
dec
inc
clc
loopne
jge
clc
inc
clc
xor
and
add
flds
cmpsb
clc
add
xbegin
sar
and
add
xchg
dec
sub
mov
add
in
ljmp
test
clc
fcoms
add
add
mov
add
movsl
clc
inc
clc
imul
xor
add
mov
add
or
sti
push
mov
inc
add
push
add
shlb
add
add
test
fisubl
sub
pop
push
clc
mov
mov
add
imul
rclb
add
clc
xbegin
add
outsl
js
sbb
sub
hlt
add
add
cmp
sar
cmp
pop
loop
stos
fstl
lods
mov
add
cmp
or
clc
xbegin
add
sbb
add
add
pusha
add
cmc
sti
dec
dec
xor
add
cltd
fidivs
clc
or
cwtl
cmp
hlt
stos
dec
mov
add
inc
clc
std
jecxz
and
es
or
fnstenv
out
or
clc
shr
arpl
add
sbb
clc
fcomps
sar
add
jb
add
popf
pop
out
xchg
divl
add
pop
pushf
fdiv
out
jmp
je
add
jo
add
ss
mov
cmp
clc
xchg
xchg
push
test
add
add
int
add
adc
outsl
adc
add
clc
cmp
insl
mov
and
out
das
outsl
js
clc
ds
clc
mov
add
loopne
rcll
clc
pusha
add
pop
popf
inc
clc
stos
sti
mov
test
inc
clc
xbegin
aas
clc
imulb
add
cmpsl
clc
jmp
add
add
sbb
mov
mov
adc
add
mov
xchg
xchg
or
int
push
ret
clc
lods
fimuls
repnz
and
add
mov
jns
clc
add
add
add
inc
clc
pop
shll
add
xor
repnz
clc
push
add
adc
add
loop
leave
pop
es
icebp
dec
mov
and
add
fdiv
sarl
or
popa
add
add
add
pop
dec
add
add
sar
sti
xor
add
adc
add
xchg
cld
xor
add
add
rcrb
clc
test
adc
add
push
dec
mov
mov
clc
sbb
clc
or
add
sti
lret
add
pop
mov
dec
movsl
clc
sti
jge
add
jns
add
arpl
add
add
sub
inc
clc
pop
jecxz
jge
clc
pop
clc
sbb
cmp
add
sbb
add
in
sbb
das
add
jae
add
sub
icebp
popf
jle
stc
mov
clc
ret
clc
jno
add
sar
clc
or
je
clc
cmpsb
clc
mov
jbe
xchg
and
add
xchg
inc
add
mov
in
xor
add
xlat
cmp
sbb
cmove
push
add
mov
clc
mov
add
enter
loop
push
xbegin
push
pop
aas
rolb
cmpsl
clc
pop
xor
add
mov
xchg
and
add
add
mov
out
aaa
jl
mov
add
jmp
add
add
and
add
add
clc
cmp
repnz
arpl
add
mov
add
add
xchg
popa
add
pop
repnz
add
add
mov
add
cmp
xor
cwtl
fistpl
jecxz
cmp
cmc
cld
cmpsl
clc
call
mov
inc
add
ds
push
cli
xor
add
clc
lcall
adc
add
popf
add
add
or
inc
add
sbb
out
inc
clc
adc
add
jbe
insb
and
sbb
clc
lret
sbb
clc
stos
ja
add
popa
add
cs
and
add
mov
fadds
sub
pop
pop
std
xor
add
mov
add
cs
leave
add
add
int3
jge
dec
push
cwtl
scas
dec
aad
clc
das
xchg
dec
jmp
adc
clc
insb
fwait
icebp
sbb
add
mov
clc
xchg
sub
pop
rorb
clc
pcmpeqb
scas
repnz
stos
sub
loop
gs
into
es
stos
ds
shll
add
cld
rcrl
cli
arpl
add
add
int3
jns
pushf
scas
push
int3
add
add
clc
es
inc
add
insb
lret
clc
dec
lahf
sbb
sbb
outsb
jb
add
loope
sub
cmp
je
add
stc
mov
mov
enter
bound
add
fidivrl
clc
cwtl
xchg
pushf
test
into
in
pop
pop
pop
inc
clc
into
fs
mov
add
xchg
jbe
in
jne
or
clc
mov
xchg
cs
add
jno
add
clc
loopne
pop
inc
clc
hlt
popf
mov
clc
inc
add
cmp
and
add
clc
dec
sub
or
outsl
xchg
es
mov
incb
add
add
clc
push
clc
dec
or
xlat
pop
test
cmp
clc
adc
add
sbb
mov
pushf
cmp
pop
popa
add
cmp
add
dec
add
add
add
mov
arpl
add
xor
add
clc
fbstp
add
add
jl
clc
out
sbb
add
test
add
mov
mov
out
mov
clc
mulb
leave
pop
mov
clc
enter
clc
jo
add
push
add
mov
in
jge
add
add
or
clc
inc
add
sti
lahf
pushf
xor
add
clc
enter
cli
jmp
clc
arpl
add
sub
dec
clc
popa
add
daa
clc
ja
in
scas
push
push
add
bound
add
cmp
clc
push
pop
clc
mov
push
add
loop
adc
add
jno
add
add
sub
add
xchg
cltd
adc
or
clc
dec
arpl
add
dec
cmp
clc
into
inc
add
mov
cmp
dec
mov
dec
data16
push
add
dec
push
clc
loope
mov
add
xchg
fdivrs
add
or
add
ss
add
mov
clc
pushf
dec
sahf
lret
movsb
clc
xchg
jl
clc
in
jg
ljmp
dec
arpl
add
add
mov
je
inc
add
sbb
add
jne
mov
aad
clc
jp
clc
pop
clc
mov
cmp
clc
xchg
mov
xor
add
aam
clc
dec
daa
clc
inc
add
push
add
pushf
push
add
pop
clc
inc
add
xor
popa
add
push
add
sub
add
inc
add
add
add
ja
add
pushf
dec
push
xchg
cmp
fldcw
stos
in
mov
jnp
add
xchg
sbb
push
clc
dec
xchg
cmp
and
add
lods
stc
cmp
add
xor
add
sbb
clc
icebp
aas
popa
add
shlb
mov
xchg
adc
add
add
test
mov
add
jnp
clc
cmp
push
dec
push
push
inc
add
out
or
not
push
add
loopne
push
push
clc
scas
sub
add
clc
js
add
divb
add
or
out
pusha
add
xchg
pop
clc
fcompl
add
add
add
add
clc
sahf
imul
add
or
je
cld
icebp
test
and
add
movsb
clc
push
clc
fcoml
mov
and
add
adc
clc
dec
dec
inc
clc
sbb
add
xbegin
add
or
clc
sahf
je
add
pop
iret
clc
shlb
clc
ja
popa
add
sbb
out
dec
push
jo
add
cmp
add
ds
clc
repnz
mov
pop
clc
je
inc
clc
decb
repz
data16
mov
mov
add
jge
pop
data16
mov
add
mov
stos
test
mov
add
mov
push
cmp
add
data16
data16
es
cmc
lahf
or
pop
xbegin
add
pop
pop
pop
stc
daa
clc
dec
add
push
cmp
push
mov
add
or
clc
popa
add
mov
push
push
test
cmp
cwtl
inc
add
xor
add
jne
imul
and
sbb
add
data16
std
jne
clc
mov
std
pop
clc
cmp
inc
clc
cmp
add
and
add
add
scas
leave
pop
imul
rolb
xchg
xabort
in
push
add
sar
lock
mov
and
add
clc
fistps
clc
movsb
clc
fucomi
cli
jmp
arpl
add
xchg
mov
clc
js
lock
add
in
pop
lods
xor
add
popa
add
cmp
int
test
clc
or
add
mov
add
add
add
outsl
lods
and
cmp
sub
clc
jl
mov
xchg
mov
out
pop
rcrl
clc
xlat
jnp
add
add
add
clc
or
cmp
lcall
fldenv
add
jb
add
out
sub
clc
jno
add
clc
cmp
pop
pop
mov
add
dec
repnz
add
pop
scas
leave
dec
sub
arpl
add
add
clc
cmp
pop
out
out
jbe
clc
ljmp
mov
sub
imul
add
clc
mov
ja
add
push
sbb
xor
add
add
cmpsb
clc
xlat
push
mov
sub
jne
add
cmp
add
lcall
int3
loopne
movsb
clc
mov
call
inc
clc
push
adc
add
add
add
and
add
repnz
add
mov
ja
call
pop
out
add
dec
xbegin
xor
add
gs
xor
add
data16
pushf
and
lahf
xchg
sub
add
inc
add
dec
ja
cmp
cmpsl
clc
nop
clc
push
shrb
mov
lahf
mov
add
sub
adc
add
daa
clc
mov
add
add
cmpsb
clc
and
add
add
mov
pop
clc
insb
pop
out
out
into
gs
jle
ret
jle
sar
dec
push
add
mov
clc
add
loope
cli
fiadds
pop
pop
adc
and
add
pop
xor
add
lret
clc
jmp
add
xchg
mov
aam
and
add
add
popf
dec
mov
jne
clc
jl
scas
cmpsl
clc
sti
add
add
and
adc
add
sar
sub
add
add
clc
inc
add
lods
xchg
cli
fcmovne
pmaxsw
add
add
xchg
pop
loope
out
lret
stc
xor
cld
bound
add
and
add
add
lods
push
decb
stos
loopne
or
clc
push
ss
stos
stc
cmpsl
clc
mov
add
clc
jno
add
cli
inc
clc
push
lock
xlat
sub
cmc
mov
sar
add
add
adc
add
clc
sarb
add
mov
add
ss
mov
clc
mov
lcall
or
pop
test
push
clc
int
clc
stc
fcomps
stos
add
add
add
add
add
add
cmp
clc
popa
add
pop
sbb
prefetchw
and
add
inc
add
cmpsl
clc
pop
ss
add
add
insl
stos
ljmp
outsl
mov
int3
inc
clc
inc
clc
sub
insl
ss
clc
addr16
shlb
clc
ret
clc
and
add
add
add
mov
out
je
clc
divl
add
aam
add
or
inc
clc
test
push
add
insl
movsb
clc
scas
xchg
dec
cmp
lret
pop
xchg
xchg
mov
fnstsw
dec
xchg
xchg
lret
clc
xor
in
lea
mov
adc
add
mov
jle
clc
sub
idivb
clc
sar
insb
mov
push
add
xchg
jle
add
push
add
add
outsb
inc
add
imul
test
jle
clc
sbb
clc
repz
shlb
add
jge
or
clc
sar
jns
clc
cli
xor
or
xchg
jg,pn
clc
gs
dec
clc
imul
add
mov
arpl
add
dec
mov
push
lods
test
mov
xbegin
ret
clc
adc
add
lea
add
repnz
add
inc
clc
arpl
add
test
scas
rep
je
add
add
add
ds
bound
add
clc
xchg
add
add
gs
cli
aas
xor
gs
divl
add
mov
clc
gs
pop
xor
add
clc
fidivrl
mov
add
add
jmp
xor
add
rolb
int
mov
scas
inc
add
cmp
and
add
mov
adc
add
stos
jl
dec
push
pop
xor
add
push
loop
stos
mov
inc
add
shll
push
lahf
mov
add
add
mov
clc
mov
add
das
pop
and
add
or
xchg
xlat
mov
adc
add
xchg
jnp
clc
mov
pop
loop
sbb
insb
rolb
xor
add
scas
aaa
dec
imul
imul
add
inc
add
push
add
and
dec
inc
add
clc
fildll
add
clc
scas
clc
scas
mov
jg
add
ret
mov
pop
popa
add
push
add
add
add
add
loop
or
add
jmp
add
repz
addr16
nop
cmp
add
and
add
imul
aad
imul
ret
clc
mov
cmp
clc
sbb
inc
clc
push
test
loop
scas
inc
add
sbb
and
scas
adc
add
ss
adc
add
add
jge
stos
jmp
add
arpl
add
cmp
shll
sub
stos
push
lret
roll
pop
repnz
add
data16
and
mov
nop
bound
add
adc
add
stos
xchg
stc
es
sahf
pop
fcmovu
jp
clc
or
pop
mov
clc
cmc
leave
mov
fdivl
add
xabort
mov
mov
pushf
std
cmp
add
add
clc
in
jg
clc
aad
push
mov
jmp
add
clc
aaa
pop
xchg
gs
lea
cmpsb
clc
mov
clc
out
jg
mov
add
pusha
add
xchg
jmp
out
or
inc
clc
test
clc
xor
pop
fwait
nop
fimull
gs
jecxz
cmp
repz
out
std
push
clc
sub
clc
out
mov
in
push
add
inc
clc
jmp
test
data16
movsl
clc
cmp
data16
dec
adc
add
add
and
test
add
inc
clc
lods
add
add
add
push
add
push
nop
xlat
cmp
mov
sar
fstpl
mov
add
and
add
add
lret
mov
daa
clc
cmp
mov
add
js
addr16
xchg
mov
clc
into
pop
xlat
cli
ret
clc
push
xchg
fcoml
add
cld
aad
fadds
pushf
xor
add
sahf
mov
stc
leave
xor
add
flds
clc
test
clc
mov
cmp
add
rcll
add
sub
clc
lahf
lret
add
dec
lea
add
test
inc
add
jmp
mov
dec
fisubl
scas
lods
gs
cld
cmpsl
clc
push
mov
mov
jmp
clc
ljmp
in
inc
add
adc
clc
mov
clc
repz
add
add
push
jl
dec
cmp
clc
jmp
je
add
aam
xbegin
push
lcall
xabort
clc
xor
add
add
aaa
sbb
pop
inc
add
sub
add
ljmp
xbegin
xor
add
clc
xchg
mov
nop
mov
into
jle
sub
idivb
mov
incb
add
xchg
dec
add
add
pop
clc
push
add
test
dec
das
mov
add
in
jmp
add
add
clc
daa
clc
jp
pop
cmp
clc
xor
add
cmp
enter
popf
testb
add
inc
clc
pusha
add
ret
clc
or
mov
clc
and
add
add
fsubrp
sahf
cmp
sti
movsl
clc
jb
add
clc
testb
add
roll
add
out
call
xchg
xor
add
in
mov
clc
sbb
add
xchg
out
stos
movsb
clc
pop
mov
clc
pop
inc
clc
arpl
add
clc
movsb
clc
popa
add
add
in
mov
ret
clc
mov
jne
mov
clc
stos
xor
add
add
cld
mov
pop
lock
pop
inc
add
fidivl
and
add
add
mov
aas
pop
mov
stos
fs
in
hlt
mov
sar
mov
lcall
clc
enter
mov
add
faddl
add
add
cmp
and
add
mov
add
clc
lock
push
jno
add
add
inc
add
xbegin
nop
test
inc
add
pop
movsb
clc
hlt
jecxz
add
add
or
arpl
add
mov
add
cld
cld
push
pop
sbb
mov
and
add
mov
add
xabort
mov
xabort
lcall
jl
clc
fs
in
push
cmp
xchg
cld
adc
add
test
inc
clc
xchg
and
add
clc
int3
or
add
test
movsb
clc
inc
clc
mov
clc
push
fcoms
add
movsl
clc
fildl
kmovw
dec
ret
clc
push
call
or
inc
clc
xchg
or
clc
mov
inc
clc
idivb
push
sub
daa
clc
movsl
clc
xor
add
push
rorl
scas
and
add
jl
add
add
clc
or
jg
fildll
sbb
sub
clc
ret
clc
inc
clc
ret
clc
and
sqrtps
add
clc
jbe
je
xchg
push
xor
add
loope
inc
add
mov
sysexit
cmp
clc
pusha
add
stc
mov
clc
dec
jbe
clc
dec
fadd
clc
loopne
push
cmp
clc
or
fsts
add
loope
mov
aas
push
sbb
adc
add
pop
or
add
rclb
add
and
add
out
xor
clc
sbb
add
dec
mov
mov
fsubr
pop
sub
mov
xbegin
pushf
jns
push
add
test
cmp
loope
es
dec
sar
scas
ja
inc
add
mov
and
in
mov
rol
clc
fnstenv
add
adc
test
push
jno
add
dec
add
or
bound
add
hlt
jp
pop
add
js
clc
ja
push
push
add
mov
clc
cmp
movsl
clc
nop
add
add
push
add
test
packssdw
add
clc
sahf
pop
das
outsb
test
jmp
incb
call
mov
jnp
add
cmp
add
lock
add
push
xbegin
pop
test
mov
clc
cmp
add
data16
fldcw
xchg
and
add
push
xchg
sbb
mov
clc
sbb
or
icebp
ja
out
ljmp
mov
mov
iret
sub
jo
add
add
adc
add
add
xor
add
shll
add
xchg
cmp
insl
fildll
and
add
add
test
test
pop
add
add
cli
push
or
sti
cmpsl
clc
sar
fcmovnu
mov
clc
inc
add
gs
mov
clc
inc
add
pop
sub
add
clc
sbb
add
loopne
fisttpl
sti
add
add
clc
pusha
add
adc
add
add
mov
add
push
pusha
add
or
fcomi
xor
add
ds
push
psubq
add
jle
clc
call
imul
lahf
push
clc
in
repz
loop
sub
mov
sahf
or
adc
add
addr16
cs
xchg
pop
cmp
cmpsl
clc
scas
push
add
out
cmp
mov
add
add
push
add
jge
clc
jne
cmp
mov
add
clc
sar
push
add
mov
clc
cmp
dec
popa
add
hlt
push
clc
xor
add
dec
jo
add
adc
add
jge
cmp
clc
stos
xchg
sar
loope
or
add
or
xor
add
pop
push
push
add
cmp
clc
ret
arpl
add
add
mov
add
push
add
in
out
out
mulb
data16
loope
add
add
clc
or
push
in
mov
filds
add
pop
fists
lods
ss
add
mov
sub
clc
jge
sbb
push
clc
sbb
aad
sub
fildl
add
sub
clc
lret
pushf
ret
clc
sub
add
push
or
cmp
pop
leave
xor
add
fistl
pop
movsl
clc
hlt
adc
add
add
jo
add
test
inc
clc
bound
add
popa
add
pusha
add
js
leave
cmc
xchg
push
lahf
mov
clc
cmp
add
add
icebp
fnsave
outsb
in
js
daa
clc
mov
xchg
cmc
fcompl
ds
imul
and
add
add
nop
sub
inc
clc
cmp
cmp
mov
sub
inc
clc
fldenv
add
jecxz
adc
add
mov
push
add
cs
inc
add
jl
adc
icebp
lea
add
gs
in
push
clc
out
arpl
add
add
mov
clc
in
mov
test
xor
add
mov
clc
lcall
test
fildl
add
push
add
mov
add
adc
add
push
pop
lret
cmpsl
clc
and
push
lahf
jns
mov
add
pop
inc
clc
pusha
add
jg
nop
add
add
fwait
mov
stos
xchg
lret
mov
jg
mov
sti
popf
insl
rcll
clc
adc
clc
adc
add
clc
popa
add
das
loop
cmpsl
clc
jne
in
inc
add
mov
add
jge
sti
clc
lea
cmp
clc
jbe
es
xbegin
cmp
add
xor
add
add
add
lods
outsb
pop
loope
imull
clc
sbb
xchg
int
clc
aad
ret
clc
or
xchg
movsb
clc
nop
daa
clc
mov
add
inc
clc
or
enter
cs
mov
add
fmuls
mov
mov
adc
add
mov
adc
add
xor
cmpsb
clc
pop
ret
clc
outsl
fxch
jnp
clc
lahf
jbe
clc
inc
clc
push
add
int
adc
in
insb
push
adc
sahf
stc
insb
hlt
shrb
clc
repnz
inc
clc
mov
int
xor
add
and
mov
clc
sar
mov
add
mov
lea
xchg
test
cwtl
dec
sahf
aam
mov
sbb
inc
clc
out
add
add
clc
addr16
mov
push
clc
jmp
add
ret
clc
lock
cli
jmp
sbb
leave
fsubrl
jle
add
clc
mov
add
add
xor
add
xchg
lock
or
mov
hlt
mov
jecxz
pop
outsb
pop
or
add
aaa
movsl
clc
out
adc
add
add
clc
hlt
and
add
loop
fs
out
in
lods
xchg
pop
sar
add
add
adc
mov
ret
add
mov
add
add
cltd
leave
xor
add
cld
out
sub
add
clc
daa
clc
lret
xchg
test
mov
insb
mov
xbegin
clc
add
add
jl
jne
xor
add
pop
clc
ret
ss
cli
sbb
clc
push
loope
popa
add
aam
clc
fs
in
add
add
nop
sbb
pop
dec
inc
clc
dec
xchg
rdseed
and
mov
clc
sti
adc
add
add
in
add
add
jne
clc
mov
clc
xchg
icebp
jno
add
clc
inc
clc
jl
add
xchg
xchg
inc
add
out
pop
aas
fstl
clc
ja
aas
jne
mov
cmp
clc
pop
add
fidivl
add
aad
lahf
lcall
idivb
cmp
iret
adc
add
lcall
jno,pn
add
in
std
inc
clc
inc
add
in
add
add
clc
mov
cltd
lods
fwait
loop
nop
inc
clc
add
add
clc
dec
rorl
add
jle
repz
cs
imul
dec
dec
call
int3
vaddps
clc
xor
add
clc
push
add
mov
cmp
movsl
clc
insl
clc
jnp
out
pop
pop
push
add
xchg
inc
clc
sub
iret
adc
sub
stos
popf
repz
and
dec
sub
arpl
add
add
push
pop
inc
add
mov
xor
add
fists
ja
clc
push
add
iret
dec
mov
and
add
cmp
fisttpl
mov
mov
clc
aaa
movsb
clc
je
sbb
stos
cmp
mov
add
sub
adc
add
jo
add
or
push
sub
es
mov
clc
sar
or
add
pop
arpl
add
cmp
clc
stos
sub
rcrl
cmp
pop
xchg
jns
clc
fs
mov
mov
add
inc
clc
xchg
adc
add
bound
add
add
pop
cwtl
nop
stc
fst
imul
jne
sar
adc
add
clc
sahf
in
sub
adc
add
scas
fwait
nop
pop
xchg
sbb
xchg
push
test
clc
add
add
mov
add
inc
add
pop
clc
mov
sub
stos
add
lcall
jno
add
xchg
adc
add
nop
pop
mov
movsl
clc
leave
inc
add
idivl
lods
mov
add
inc
clc
in
mov
pop
push
lahf
mov
add
lcall
insb
fwait
pop
mov
addr16
xchg
pop
imul
push
add
jne
rclb
add
dec
gs
xchg
sub
jmp
in
cmp
clc
out
cld
push
add
fisubl
in
or
dec
cltd
fistps
jo
add
fistps
ficomps
add
push
xbegin
clc
inc
add
fldenv
add
sarl
mov
or
int3
cli
or
add
add
jb
add
clc
and
add
clc
cs
mov
add
cmp
add
int
jle
clc
ret
clc
mov
call
cmc
shlb
add
sahf
xchg
sarb
mov
pop
leave
cmc
test
xor
cmp
add
dec
int3
jmp
loop
push
stc
pushf
clc
insb
push
ss
clc
mov
clc
push
cmp
jb
add
and
add
sbb
add
clc
ja
mov
clc
in
shl
clc
hlt
ds
xchg
and
add
clc
mov
out
test
inc
add
scas
or
add
inc
add
cmp
clc
ret
fnstsw
mov
test
lods
mov
imul
clc
fisubl
add
inc
clc
cmp
add
cmp
inc
clc
xbegin
clc
rcl
push
dec
dec
gs
xchg
sbb
sar
push
or
add
mov
clc
or
fsubrl
inc
clc
insl
jb
add
stc
push
sub
xlat
add
add
fwait
test
clc
and
add
add
clc
rcr
inc
add
sbb
ja
or
mov
clc
xor
mov
lahf
push
xor
add
loopne
inc
add
cmp
add
add
cwtl
xchg
iret
lahf
fdivs
dec
bound
add
lsl
add
clc
ret
clc
ret
clc
or
dec
sub
add
mov
add
mov
pop
aaa
fistpll
pop
or
add
jno
add
add
sub
clc
je
clc
enter
scas
ljmp
lods
popf
je
adc
push
push
loop
inc
clc
jge
clc
notl
add
mov
lods
mov
cmp
in
mov
rcll
cli
aam
clc
or
add
add
mov
add
push
jno
add
imul
add
loopne
cmp
fisubrs
push
add
jb
add
rep
clc
mov
add
add
add
clc
pop
or
cmp
fistpll
push
add
jne
clc
cwtl
and
add
add
in
mov
addr16
lcall
icebp
push
add
cld
dec
and
add
pop
outsb
jo
add
mov
inc
clc
xor
idivl
cmc
bound
add
add
fsubrs
imul
xchg
fsub
clc
or
dec
push
add
inc
clc
ret
add
and
repz
clc
in
push
rcrb
jecxz
sbb
aas
or
jnp
mov
outsl
jmp
and
add
mov
xor
add
add
nop
push
add
xbegin
and
add
clc
stc
xchg
addr16
push
inc
clc
xbegin
add
jbe
mov
clc
mov
sbb
add
fs
push
or
and
ds
xor
cmp
data16
cmp
rclb
add
mov
mov
xchg
mov
xchg
movsb
clc
lock
sbb
clc
test
shll
clc
bound
add
aaa
rcl
sar
xbegin
jle
leave
xchg
jp
pop
cmpsl
clc
jns
add
mov
jae
add
stos
icebp
or
cmpsl
clc
mov
ja
add
clc
ds
mov
adc
add
push
sahf
int3
push
clc
popf
sub
pop
push
lret
sbb
pop
repnz
sbb
add
or
add
pushl
lret
pop
mov
js
clc
mov
add
add
cli
outsb
ret
add
cmp
sti
cmc
aaa
pop
or
clc
int
clc
mov
clc
sbb
sti
jns
xchg
scas
je
or
icebp
cmp
cmp
clc
lahf
mov
adc
add
add
add
or
and
add
sar
dec
test
mov
test
divb
xchg
or
clc
inc
add
inc
add
lcall
cmp
add
fsubr
scas
sub
add
lret
and
clc
dec
inc
add
sub
push
out
mov
push
clc
pop
pop
add
imul
add
lods
es
jmp
clc
add
add
push
add
push
clc
mov
xchg
bound
add
mov
add
pop
jge
ret
clc
gs
insl
insb
inc
add
and
add
push
add
test
sti
dec
mov
leave
leave
mov
xchg
xchg
cmp
push
ret
clc
outsb
es
js
cmp
clc
sbb
lcall
add
fs
inc
add
xlat
dec
push
in
iret
xor
add
push
adc
nop
inc
add
xor
add
inc
clc
mov
add
and
add
dec
sbb
clc
daa
clc
pop
xchg
mov
cmp
clc
int
sbb
ja
add
xor
add
clc
dec
xchg
or
imul
add
jo
add
cmp
clc
add
add
clc
mov
dec
xchg
loop
push
jmp
push
std
dec
jnp
clc
push
clc
add
add
sub
nop
or
ss
pop
jecxz
insl
stc
xchg
or
cmp
add
scas
insl
cmp
sub
jecxz
sbb
clc
cmp
clc
xor
add
popa
add
mov
punpcklwd
add
mov
add
sarb
cmc
fcomps
into
xlat
xchg
sar
push
add
cwtl
adc
add
add
add
xor
add
mov
and
add
add
xlat
mov
fwait
push
clc
xor
add
and
notl
add
add
aas
add
add
pop
test
iret
aas
dec
sbb
mov
rep
xor
add
sub
or
add
ret
clc
mov
push
fistpll
clc
adc
add
mov
add
inc
clc
pop
mov
add
mov
mov
test
pop
xlat
dec
xbegin
out
inc
add
or
je
add
fdivl
add
inc
add
mov
movsb
clc
sar
cmp
jp
adc
add
clc
and
add
add
inc
add
pop
push
jbe
mov
pushf
mov
clc
push
add
jg
xchg
sbb
add
pop
cmp
clc
push
add
jge
clc
cmp
clc
mov
xchg
jmp
xchg
lods
pop
filds
and
add
sbb
or
clc
dec
add
add
or
add
sub
aas
jl
add
add
and
add
cmp
dec
add
add
out
cmp
add
cmp
add
mov
jne
clc
scas
push
add
ret
clc
mov
add
add
mov
into
sti
mov
scas
xchg
aad
clc
loope
cmp
outsl
in
out
dec
pop
xchg
pop
push
add
jmp
lahf
sbb
test
xabort
clc
gs
and
add
dec
xor
add
iret
add
add
push
clc
xchg
mov
fs
sbb
clc
inc
add
popa
add
sti
and
cmp
sar
imul
sbb
xor
add
out
das
mov
adc
add
add
mov
dec
cmp
leave
add
push
add
stos
scas
jmp
add
cmp
add
mov
push
add
push
addr16
xchg
icebp
loopne
jae
add
sbb
insb
dec
mov
shrb
std
out
popf
mov
xor
push
clc
dec
sbb
testb
mov
and
add
add
add
add
add
add
test
cmp
clc
iret
cltd
lahf
add
add
push
add
shlb
outsl
mov
clc
add
clc
ds
add
leave
mov
inc
add
vcomiss
daa
clc
xchg
cmp
push
imul
mov
add
and
add
sbb
jl
clc
jmp
add
cmp
add
jge
ds
add
adc
add
mov
fisttps
ss
int3
mov
data16
mov
clc
mov
ficompl
fs
xor
add
cwtl
dec
pop
jbe
cmc
jg
add
int3
scas
int
repz
sub
clc
int3
push
add
add
or
add
cmp
clc
sub
clc
sarb
aas
outsl
sub
cld
push
clc
xor
push
mov
stos
pop
ja
lea
cmpsl
clc
stos
cld
mov
fsubrs
js
dec
notb
jle
add
dec
pop
aam
add
adc
add
pushf
sti
popf
cmp
add
clc
sub
negb
add
xchg
mov
fcoml
add
int
add
xor
add
pusha
add
sub
int
mov
xor
add
push
add
das
add
add
cmp
clc
movsb
clc
mov
jge
clc
clc
and
jp
push
add
mov
add
out
inc
add
pop
test
sar
clc
sti
leave
push
add
dec
enter
push
lret
dec
sbb
cmp
cmp
add
push
add
sub
sahf
stos
lea
clc
push
daa
clc
pop
dec
cmp
aam
inc
add
push
sub
clc
xchg
hlt
sbb
or
cmp
clc
pop
mov
add
add
sbb
and
add
push
add
in
xchg
pop
jle
clc
xor
add
imul
outsl
ret
dec
jmp
add
mov
add
cmp
cmp
mov
add
add
es
mov
cmc
std
xor
add
inc
add
test
outsb
rclb
sbb
popa
add
sub
mov
imul
std
and
add
in
sbb
test
xchg
scas
xor
add
sub
add
clc
or
enter
push
and
add
lea
jb
add
inc
add
mov
adc
add
clc
fsub
clc
adc
add
clc
pop
add
add
out
or
cwtl
xchg
inc
clc
and
add
xchg
add
add
add
loope
out
dec
dec
test
fwait
jl
fucomip
jbe
clc
and
add
add
out
imul
clc
dec
cmp
je
sar
movsb
clc
mov
stc
loop
into
fistpll
push
add
pop
xor
add
pop
mov
clc
rorb
addr16
adc
sbb
clc
lret
iret
ret
rclb
add
pop
dec
in
int
stos
jae
add
lret
add
jmp
add
shl
adc
add
clc
inc
add
pop
out
popa
add
arpl
add
and
cmp
add
out
xor
add
arpl
add
add
cli
and
cmp
adc
add
in
lock
ljmp
arpl
add
add
clc
push
jmp
adc
mov
jg
add
sar
mov
mov
sbb
jge
clc
shl
clc
popa
add
movsb
clc
cmp
fsubs
add
inc
clc
in
jae
add
add
add
pop
push
add
mov
add
sbb
shll
nop
xchg
bound
add
dec
pop
clc
mov
addr16
and
add
add
add
mov
mov
out
lods
iret
jne
or
add
xlat
and
add
add
nop
xor
add
clc
jne
or
add
clc
cmp
andps
sub
add
cmp
sahf
mov
out
dec
rcrb
mov
clc
add
add
or
add
push
pop
imul
mov
jbe
lods
inc
clc
sbb
incb
add
add
add
sbb
clc
mov
hlt
xchg
scas
adc
add
clc
mov
cs
in
sub
add
pop
clc
push
xlat
jle
mov
fstpl
add
icebp
ficomps
bound
add
cld
clc
out
lods
mov
clc
xchg
jb
add
xchg
mov
cmp
clc
movsb
clc
add
add
sarb
loope
sub
clc
mov
fdivrs
jae
add
clc
clc
cmp
jns
hlt
adc
dec
ljmp
add
add
fs
lret
add
fcmovnu
clc
dec
jge
lahf
or
mov
add
clc
int3
lock
push
dec
xor
add
jle
and
fbld
push
mov
fcoms
add
xchg
imul
add
or
adc
add
clc
xor
add
aam
clc
iret
xor
iret
inc
add
inc
add
adc
add
add
test
push
add
add
inc
clc
das
pop
shll
out
xchg
pop
mov
dec
repz
add
add
clc
mov
mov
add
add
jge
add
or
pop
xchg
out
jb
add
iret
int
ret
scas
and
add
outsl
dec
mov
add
cmc
cmp
in
sar
aaa
sbb
clc
xchg
gs
xbegin
aad
repnz
add
jmp
lock
push
add
dec
sar
ljmp
mov
mov
clc
lea
jmp
in
cmc
test
insl
push
add
arpl
add
iret
jecxz
lret
inc
clc
inc
clc
repnz
cltd
mov
add
sub
clc
hlt
cli
es
mov
mov
clc
rcrl
clc
mov
jl
xchg
xchg
cmc
pusha
add
rorl
clc
dec
sbb
clc
mov
nop
sahf
add
add
adc
clc
jecxz
add
add
jb,pn
add
mov
adc
add
add
add
clc
aam
notl
fildl
iret
push
in
or
clc
mov
negb
add
clc
fidivrl
or
daa
clc
cmp
xor
iret
jge
scas
xchg
or
fistps
sub
data16
cmp
enter
adc
lea
clc
jnp
lock
js
mov
fnstsw
add
clc
fadds
add
add
add
in
pop
xchg
xchg
in
push
add
call
xchg
arpl
add
xor
add
fs
call
call
sub
dec
ss
cli
imull
xchg
xchg
ja
adc
add
clc
jle
cmp
std
fildl
clc
push
add
out
push
or
cmpsl
clc
fidivrs
clc
inc
clc
pushf
mov
adc
loope
pop
push
xor
add
mov
add
test
popf
ja
lea
clc
out
push
or
sbb
push
pop
outsl
call
clc
push
add
lea
test
xchg
jbe
add
add
nop
or
clc
data16
sbb
cmpsl
clc
jae
add
inc
add
xchg
cmc
sub
mov
mov
clc
insl
mov
dec
jae
add
idivb
popf
int
clc
jg
inc
clc
sbb
add
stc
ss
push
xor
add
mov
add
loop
clc
cmp
js
sub
sub
lock
stc
repnz
sbb
xchg
mov
jl
clc
adc
add
add
cmp
clc
std
dec
cmpsb
clc
aaa
push
aam
arpl
add
xchg
lock
sahf
dec
imul
pop
clc
sub
int3
jns
cmp
add
lock
mov
hlt
sar
push
add
add
imul
mov
std
aas
nop
sub
clc
mov
ret
clc
push
clc
stos
mov
clc
sar
clc
xor
add
clc
fs
mov
mov
pop
add
add
fisubs
add
add
pop
stc
test
clc
mov
insl
jg
dec
iret
lock
add
stos
sbb
mov
push
sbb
add
ret
popa
add
push
clc
fsin
aad
clc
fwait
call
out
push
sbb
push
aad
clc
pop
pop
clc
arpl
add
add
xor
pop
imul
add
clc
test
clc
jb
add
add
sbb
inc
clc
sbb
loop
mov
cmp
loope
adc
add
add
clc
stos
repnz
add
push
out
mov
shll
int
pop
fstpt
add
pop
pop
sti
cmp
out
push
int3
dec
lcall
popf
jp
cmp
sti
test
pop
mulb
sub
movsb
clc
rclb
shlb
xor
clc
sahf
negb
dec
pop
mov
adc
fmuls
adc
add
bound
add
clc
xor
in
aad
add
lock
mov
clc
insl
jae
add
in
adc
add
cmpsb
clc
pop
jecxz
fbstp
scas
push
fcomp
repnz
sar
jp
adc
clc
dec
sar
clc
leave
xchg
adc
add
lods
sbb
dec
mov
sbb
add
mov
clc
xchg
push
inc
clc
mov
jns
ds
scas
mov
add
popa
add
pop
xor
clc
jne
bound
add
clc
bound
add
add
repz
negl
jnp,pt
clc
fwait
mov
movsl
clc
rorb
xor
add
inc
clc
jb
add
sub
clc
xchg
cmpsl
clc
lods
gs
stos
push
popa
add
mov
jnp
dec
clc
sbb
xchg
sar
in
sbb
mov
xchg
sub
in
sub
loope
nop
sbb
fimull
sub
clc
ja
mov
add
add
rep
xlat
ds
daa
clc
lock
cmp
add
mov
fwait
cmp
mov
xchg
repz
imul
clc
outsl
adc
aad
jo
add
mov
mov
int3
cmp
mov
ds
clc
int
in
xchg
push
adc
add
and
add
clc
pop
dec
and
add
data16
dec
adc
sub
pusha
add
mov
cmp
xor
add
das
xor
jbe
lcall
in
pop
or
mov
clc
fs
test
clc
cmp
add
add
mov
clc
xchg
jne
pop
sub
lods
ret
add
xchg
sub
pop
mov
or
es
in
push
mov
mov
fisttpll
push
xchg
inc
add
push
int
xor
add
add
mov
pop
cld
in
pushf
mov
add
mov
xor
sub
push
xor
add
jnp
push
in
fwait
jp
push
xor
and
add
add
sahf
divl
push
add
mov
jle
xchg
sarl
add
jmp
add
pop
clc
in
cmc
clc
cmpsl
clc
inc
add
out
dec
add
fdivrl
iret
rorb
inc
clc
sub
pop
clc
pop
mov
int3
push
mov
clc
inc
add
xor
add
cmp
clc
pop
std
adc
clc
loop
pop
out
cltd
sbb
push
mov
jmp
sbb
or
clc
test
cmp
add
sbb
cmpsl
clc
insl
stos
dec
mov
add
jl
clc
test
cltd
pop
fsubp
clc
cwtl
shlb
add
jmp
inc
add
ret
clc
xchg
add
in
xor
inc
clc
sbb
add
fs
icebp
cmpsl
clc
adc
add
fwait
push
dec
push
add
cmpsl
clc
iret
cmp
clc
insl
repz
adc
add
mov
frstpm(287
clc
clc
mov
and
add
add
stc
push
int
sub
movsb
clc
inc
clc
fwait
ret
pop
shrl
outsb
hlt
mov
gs
adc
add
clc
insb
inc
add
aas
or
clc
call
cmp
push
add
jecxz
cmp
sbb
xchg
jg
cmpsl
clc
xor
add
std
in
push
out
cmp
clc
inc
clc
jecxz
mov
clc
iret
jg
fidivs
clc
pop
adc
clc
mov
sbb
add
add
adc
add
mov
dec
test
gs
inc
clc
test
cmp
js
clc
clc
mov
mov
mov
add
push
mov
add
lret
mov
icebp
cmp
in
test
add
rdtsc
add
xor
add
pop
popf
adc
add
or
xabort
add
jns
cmp
clc
scas
mov
aad
or
add
add
mov
add
rep
pop
lock
push
sarb
add
inc
clc
mov
jb
add
nop
inc
add
sti
es
sub
leave
lret
add
psrlw
adc
add
nop
je
cmpsb
clc
mov
mov
add
push
call
shrl
or
lods
insb
xor
add
add
out
sar
clc
push
fldt
sbb
stos
mov
xlat
inc
add
in
push
clc
clc
pop
roll
push
pop
inc
clc
jno
add
pop
scas
stos
lret
add
inc
add
xchg
inc
add
xchg
cmp
jae
push
jns
es
inc
add
nop
sbb
clc
fwait
iret
adc
add
repnz
add
insb
push
clc
repnz
test
mov
clc
push
xor
add
clc
loopne
fcoms
inc
add
or
adc
add
and
add
sar
mov
into
push
add
mov
cmp
add
and
add
add
mov
pop
xor
add
sar
inc
add
fisubrl
dec
sahf
call
jnp
dec
mov
cmp
js
mov
adc
mov
mov
dec
outsl
pop
mov
and
add
or
add
inc
add
aam
inc
add
or
out
mov
add
add
sbb
rorl
clc
xor
add
add
ljmp
pop
clc
xchg
add
add
clc
stos
and
add
lret
add
add
aam
clc
jbe
xchg
js
sub
add
pop
movsl
clc
xor
aaa
mov
mov
cmp
clc
jge
mov
adc
add
jo
add
add
jo
add
dec
stos
push
mov
add
shll
mov
cmp
clc
dec
dec
jp
add
xabort
dec
hlt
cmp
inc
clc
loop
push
add
xchg
fcmovbe
pop
lods
inc
add
cmpsb
clc
stc
push
adc
cltd
test
pop
or
add
cmp
outsb
aas
pop
ret
clc
xor
add
jo
add
movsb
clc
mov
out
out
sub
ss
fucomip
push
clc
cmc
and
add
loopne
mov
add
out
mov
or
add
add
add
jmp
clc
daa
clc
mov
ljmp
clc
or
add
mov
mov
ja
clc
into
clc
jle
out
cmp
psrad
mov
clc
in
lods
xchg
mov
clc
or
repz
add
jp
add
sti
mov
int
xor
add
clc
stos
ret
xchg
shrb
adc
add
leave
push
ljmp
lret
pusha
add
or
pushf
adc
cmp
jo
add
out
sar
cmp
in
repz
add
adc
std
insl
mov
clc
mov
cmp
clc
jo
add
shl
clc
inc
add
outsb
bound
add
fldcw
xchg
cwtl
cmp
enter
das
push
int
or
nop
sub
pop
imul
or
fmulp
add
out
fisttpll
popl
clc
jmp
mov
add
mov
push
sbb
aad
mov
clc
fcmovu
or
clc
sbb
push
ffreep
clc
jns
dec
and
enter
inc
add
fnstsw
jo
add
popa
add
ds
adc
add
and
add
push
add
mov
clc
dec
mov
xchg
add
add
add
add
pop
mov
add
das
fists
adc
add
dec
cmp
gs
cmc
insb
xor
enter
out
movsb
clc
mov
add
mov
loop
dec
sar
dec
sarl
sbb
add
imul
and
add
in
stos
cmp
clc
mov
add
dec
cld
shrb
movsl
clc
insl
jbe
movsb
clc
sub
add
xbegin
movsl
clc
movsb
clc
test
clc
cmpsl
clc
out
dec
xchg
es
ss
clc
jno
add
clc
or
push
add
cmp
mov
out
dec
insl
dec
dec
mov
add
rep
cmp
sub
clc
loop
xor
add
add
aam
pop
pushf
jmp
sarl
or
clc
fimull
inc
add
in
cmp
lcall
jns
bound
add
add
xbegin
iret
repnz
lock
xor
seto
clc
jl
dec
or
and
add
dec
push
stos
fcmovnu
and
add
fisubl
add
mov
add
ss
mov
add
xchg
push
add
call
imul
arpl
add
add
sti
sub
push
add
adc
add
inc
clc
cmp
sub
clc
sbb
es
jmp
jno
add
push
in
int3
push
dec
imul
dec
mov
mov
cwtl
pop
jecxz
push
in
hlt
clc
movsl
clc
xor
add
clc
pop
and
add
xor
jl
movsl
clc
sahf
cmp
add
jbe
clc
pushf
lods
filds
push
xchg
das
add
add
add
cmpsb
clc
ret
clc
push
mov
sub
add
cmp
stc
pushl
jp
add
rcl
sbb
bswap
in
in
sbb
clc
in
xchg
cltd
test
in
lret
and
add
cs
dec
clc
loop
std
add
add
dec
and
add
sbb
into
in
movsb
clc
jge
movsl
clc
mull
clc
dec
adc
fisttps
aam
add
add
xchg
xchg
sbb
cmp
dec
cmp
add
clc
cwtl
pop
jp
clc
jb
add
add
sbb
pop
je
inc
add
lods
icebp
pop
adc
add
mov
sub
add
add
adc
push
adc
lret
ja
out
xor
imul
add
cld
aad
inc
clc
loopne
or
add
popf
push
add
mov
cmp
mov
fld
clc
pop
clc
push
call
add
xor
add
xabort
pop
and
add
add
dec
pop
or
pop
in
and
fcompl
add
aaa
inc
clc
clc
adc
add
add
decl
add
mov
in
aaa
enter
mov
sub
jmp
add
add
add
push
lcall
dec
inc
clc
dec
and
sub
mov
dec
jl
add
adc
in
mov
adc
add
jecxz
jae
add
in
add
add
mov
es
jnp
fprem1
int3
inc
add
iret
das
jg
call
inc
clc
cli
fldenv
jecxz
jno
add
or
jns
fs
jg
push
clc
cltd
xchg
mov
clc
out
scas
test
fwait
ja
test
add
add
dec
push
add
xchg
js
out
mov
aaa
sub
inc
add
sbb
mov
jg
push
adc
or
add
outsb
outsb
push
and
add
sahf
mov
add
pop
sti
and
add
and
add
clc
aam
add
pop
out
das
call
add
add
add
mov
add
cmp
pop
mov
mov
sbb
ja
add
mov
clc
mov
add
xor
add
scas
mov
clc
add
add
add
clc
mov
and
gs
bound
add
pop
add
add
loop
sbb
xor
add
add
xor
add
scas
mov
sub
xor
add
dec
loop
arpl
add
arpl
add
jmp
clc
data16
sub
jb
add
loopne
mov
mov
add
clc
jle
call
js
clc
popa
add
and
add
clc
lcall
add
loope
mov
xor
incb
daa
clc
inc
clc
jmp
add
dec
or
pop
push
mov
cmp
clc
pop
popa
add
lock
pop
mov
ret
clc
jae
add
mov
clc
sahf
lods
push
add
push
jns
sbb
push
inc
clc
push
add
add
mov
add
clc
movsb
clc
cmc
push
aam
clc
adc
add
repz
scas
je
xchg
lahf
xor
add
clc
popf
ret
data16
xor
add
add
mov
mov
rorb
int3
cmp
clc
lea
xchg
test
imul
jne
xchg
pop
repnz
cmp
add
mov
clc
xchg
add
xlat
or
sti
test
pop
out
js
add
mov
insb
jmp
adc
add
cld
xor
pop
add
pushf
mov
clc
sbb
or
clc
stos
inc
add
cs
clc
xchg
jnp
add
sbb
or
fsubs
inc
add
lahf
inc
clc
mov
add
pop
insb
xor
add
clc
cmp
movsb
clc
mov
xor
add
clc
push
add
cmp
call
ja
clc
adc
add
loope
insl
lcall
fcomi
lahf
xchg
xor
sahf
inc
add
or
mov
clc
pop
clc
cli
jb
add
fnsave
add
dec
xabort
xchg
pop
lret
push
add
data16
arpl
add
add
sbb
add
inc
add
ja
cmp
push
add
cmp
or
inc
add
xchg
mov
in
data16
mov
mov
add
mov
clc
jne
pop
xchg
dec
sub
lock
into
cltd
adc
push
sub
test
fldt
xchg
outsb
xabort
add
push
cmp
push
add
and
add
sub
clc
cltd
es
sar
jmp
add
std
test
or
or
sbb
add
add
add
test
or
mov
adc
clc
cld
mov
sahf
adc
add
xchg
xor
add
clc
push
cmp
clc
or
add
mov
bound
add
clc
dec
outsb
insl
call
clc
pop
mov
and
add
add
add
push
ds
out
into
loopne
mov
out
adc
add
add
stc
movsb
clc
lret
insl
inc
clc
cmp
push
clc
push
lcall
mov
sub
pop
cmp
clc
hlt
inc
clc
push
sbb
mov
sbb
fnsave
or
add
vrsqrtps
add
xchg
xchg
in
xchg
add
inc
add
jecxz
and
add
push
add
mov
mov
add
addr16
fistpl
clc
inc
add
mov
push
pop
out
adc
clc
stos
cmc
fidivrl
sahf
cltd
xbegin
xchg
mov
loopne
bound
add
xbegin
add
cmp
add
int3
dec
or
add
clc
dec
jg
pop
ss
mov
inc
add
in
imul
clc
mov
popf
mov
daa
clc
xchg
or
add
lret
ret
cs
xchg
pop
sbb
mov
cmp
or
cmp
clc
xchg
ja
nop
cmpsb
clc
roll
add
inc
add
cli
dec
push
into
fstpt
fcmovnu
push
fadds
add
clc
lods
jae
add
add
stc
sbb
xor
add
int3
or
push
cmp
cmp
clc
mov
add
stc
dec
and
add
add
test
xchg
gs
out
lea
add
and
add
out
scas
ja
adc
add
inc
add
sbb
clc
mov
add
xabort
add
and
add
sar
push
add
dec
mov
cmp
fisttpll
mov
addr16
cli
ss
pop
push
mov
shll
pusha
add
daa
clc
jno,pt
add
clc
stos
loop
out
jne
lret
mov
add
push
cmp
jbe
clc
fisttpll
clc
mov
in
dec
cmpsb
clc
mov
fdivr
mov
pop
rclb
addr16
lret
adc
add
fnstenv
cs
xlat
cmp
add
add
add
and
std
push
add
iret
data16
xabort
add
rclb
clc
scas
pop
lcall
mov
xor
add
push
dec
cmp
xchg
mov
mov
or
sar
clc
push
xchg
cmp
lret
mov
lock
mov
mov
popf
jge
clc
jp
clc
sbb
rcl
out
sbb
clc
jnp
add
stc
test
add
mov
clc
adc
add
fs
xchg
pop
sbb
cmp
testb
xchg
leave
xbegin
mov
cmc
sahf
pushf
cmpsb
clc
jbe
jno
add
clc
in
loope
aad
sti
xchg
int
clc
xor
add
cmp
clc
iret
testb
add
popf
pop
sbb
jnp
jnp
clc
cli
sar
or
add
loopne
add
roll
add
movsb
clc
inc
add
cmp
add
movsl
clc
and
add
inc
clc
js
clc
out
adc
add
mov
clc
js
clc
int3
and
add
jmp
inc
add
add
add
jbe
or
lods
push
cmpsl
clc
mov
clc
xchg
scas
dec
xchg
sub
cmp
add
dec
sbb
pop
inc
add
jge
add
adc
add
clc
xchg
lcall
test
add
mov
rcrb
xor
add
cmp
xor
add
rcrl
out
push
shl
clc
enter
movsl
clc
mov
loopne
aad
or
add
scas
cmp
bound
add
clc
pop
xor
add
add
add
in
or
xlat
icebp
fdivl
jb
add
add
add
cs
add
add
cmp
or
add
pusha
add
jns
add
insb
cmp
icebp
fsubrs
xor
add
push
mov
jl
lods
push
mov
mov
aad
clc
mov
cmp
clc
in
data16
cmp
xchg
scas
adc
add
and
add
lock
add
clc
dec
add
add
xor
add
xbegin
clc
mov
clc
dec
pop
push
pop
fisubrs
jne
add
mov
sbb
add
fsts
in
into
xchg
jne
clc
jge
movsl
clc
inc
add
jle
clc
fisubrs
addr16
out
or
add
add
push
add
sub
add
pushf
lock
add
pusha
add
sti
xchg
mov
add
dec
sbb
ret
clc
push
jne
add
jmp
push
icebp
cmp
xor
add
sub
dec
out
addr16
jge
clc
xor
add
sbb
lahf
push
push
clc
dec
loopne
cmp
nop
inc
clc
mov
in
in
ror
cli
insb
mov
ljmp
xlat
and
add
popf
mov
call
add
pop
loopne
js
cltd
cltd
fidivrs
xor
add
fcom
ret
clc
stc
or
arpl
add
clc
mov
add
sar
das
cs
popf
scas
aam
add
dec
in
aad
clc
ret
loope
ss
lahf
xor
add
movsl
clc
mov
add
inc
add
mov
add
add
repz
add
push
xbegin
push
and
add
and
add
clc
and
mov
and
add
je
adc
add
pusha
add
pop
addr16
aas
add
add
cmp
sar
clc
jmp
clc
mov
clc
dec
sbb
inc
add
fwait
jne
clc
xchg
xor
add
shl
clc
cmpsb
clc
or
push
add
clc
out
adc
add
es
sahf
dec
pop
aam
add
into
ret
or
arpl
add
dec
lock
xchg
data16
cltd
or
add
pop
je
clc
xor
add
clc
mov
inc
add
adc
add
clc
sub
jno
add
jp
pop
aad
add
stos
popa
add
in
ss
shrl
mov
clc
negb
clc
arpl
add
add
sahf
or
add
lods
mov
add
jo
add
clc
gs
repz
add
jge
add
and
add
inc
add
fsubp
clc
bound
add
outsl
mov
add
or
pusha
add
or
iret
pop
mov
imul
clc
mov
dec
loopne
pop
mov
sbb
cwtl
cmpsl
clc
stos
pop
imul
fs
out
adc
add
or
cmpsl
clc
mov
inc
clc
xchg
pop
decb
cmp
int3
mov
add
xchg
inc
add
push
clc
push
jno
add
jp
clc
dec
sub
clc
jmp
pop
mov
cwtl
ret
clc
int3
cmp
clc
mov
sbb
clc
dec
cmp
or
clc
lahf
mov
add
out
sahf
ds
add
add
dec
and
add
clc
dec
std
cld
push
add
fmuls
dec
xchg
and
add
add
xchg
jns
ljmp
clc
push
add
test
sahf
mov
stos
cmp
add
add
add
sub
xchg
cmp
add
inc
clc
in
fbld
add
push
sahf
jne
clc
fwait
ss
clc
pop
in
sbb
popf
js
out
mov
test
inc
add
aad
insl
fnsave
add
clc
dec
cmp
or
xor
add
push
add
pop
mov
shlb
adc
clc
dec
mov
clc
inc
add
aaa
xlat
insb
nop
std
lock
and
add
adc
add
jp
pop
sbb
add
das
mov
add
clc
aaa
pop
cmpsb
clc
add
add
dec
xchg
in
jle
clc
pushf
fwait
out
sbb
xbegin
loopne
xor
add
clc
dec
rcrl
daa
clc
pop
adc
sub
clc
mov
bound
add
add
add
or
clc
push
test
stos
and
leave
dec
aas
inc
clc
inc
clc
xor
add
xor
std
pushf
sbb
xabort
add
arpl
add
mov
jle
clc
or
clc
fstpl
add
shll
add
or
clc
jl
clc
lods
aas
sub
clc
ss
clc
int
clc
cmc
jp
clc
cmp
clc
out
stos
mov
repnz
clc
lret
pushf
cwtl
iret
sahf
aaa
sbb
add
clc
bound
add
repnz
aas
xchg
mov
push
add
call
sbb
cmpsl
clc
repz
add
add
shll
iret
add
jle
mov
test
mov
clc
xchg
dec
lods
aaa
test
add
mov
fldt
mov
loope
jnp
mov
clc
jns
xchg
mov
jne
out
roll
clc
adc
add
divb
clc
fadds
add
data16
cs
pop
mov
sti
fbld
jmp
test
int3
mov
rcr
rcl
aad
and
add
mov
clc
lea
add
add
lea
dec
xchg
dec
jmp
inc
add
and
add
pop
fisubl
add
lock
add
or
sar
mov
pop
and
call
xor
add
push
pop
xor
add
sbb
mov
int3
mov
add
iret
adc
clc
xor
add
xor
add
nop
divb
clc
je
in
dec
xor
add
add
push
add
adc
add
cmp
outsl
cmp
push
cmp
dec
ja
stos
push
pop
clc
loopne
out
mul
clc
pop
xchg
test
scas
data16
pop
mov
fs
jl
clc
sbb
add
mov
push
xchg
adc
add
dec
not
out
mov
ja
clc
aaa
or
add
xor
add
imull
and
add
arpl
add
clc
test
clc
imul
or
add
cmp
add
aas
shlb
add
cli
cmp
clc
or
xor
push
js
sbb
repz
jmp
clc
jg
aad
pop
xchg
pop
xor
mov
cmp
aam
stos
ficoms
add
ficomps
loope
xchg
mov
mov
insl
out
loopne
sbb
clc
js
movsl
clc
mov
pop
pop
clc
ss
clc
sti
in
mov
jle
ds
clc
enter
adc
clc
add
rcll
add
call
push
pushf
movsl
clc
lods
addr16
jae
add
clc
xchg
xchg
jb
add
inc
add
bound
add
clc
ja
add
or
sbb
xbegin
loopne
das
inc
clc
add
add
add
mov
mov
clc
mov
enter
or
clc
lret
out
adc
add
cmp
clc
out
jae
add
clc
mov
sbb
and
add
add
icebp
sub
lret
jbe
xor
add
add
xor
add
add
out
and
add
add
sbb
clc
pop
jp
push
add
std
push
clc
ds
xor
add
clc
jl
push
add
mov
stos
mov
imul
mov
push
sub
rclb
add
and
add
add
clc
push
inc
clc
cmp
sbb
clc
jmp
clc
aaa
std
dec
setne
cmp
int
clc
mov
xlat
ja
stos
test
sar
dec
mov
fisubrs
mov
data16
rol
clc
cmp
pop
jbe
and
add
add
jl
add
pop
xor
add
clc
data16
cmp
add
fs
pcmpeqb
test
sub
ret
clc
cli
fldt
pop
pop
push
lahf
jno
add
xor
add
clc
xbegin
add
cmpsl
clc
cmp
and
add
or
add
sahf
icebp
add
add
and
add
sub
fcmove
addr16
inc
add
lods
mov
xor
add
dec
call
aaa
cmc
repnz
adc
add
pop
clc
xchg
outsb
and
add
clc
cmpsb
clc
mov
fnsave
lret
adc
movsb
clc
adc
add
add
add
add
add
add
repz
pop
imul
mov
add
mov
test
mov
imulb
shlb
jo
add
add
sbb
add
sub
add
and
add
clc
clc
sub
sar
xchg
mov
dec
scas
popa
add
ds
add
add
add
mov
fs
adc
inc
clc
adc
add
iret
out
int
imul
jnp
add
sub
add
clc
negl
dec
xchg
ret
arpl
add
fimuls
adc
add
ror
pusha
add
xchg
jecxz
push
clc
arpl
add
arpl
add
add
xchg
fistpll
jg
xabort
xchg
insb
jo
add
add
clc
xchg
fwait
cli
fwait
jge
clc
ret
clc
lock
js
pop
jns
cld
mov
mov
add
add
pop
sar
clc
mov
add
imul
xchg
sar
clc
pop
mov
add
imul
stos
or
add
and
aas
push
add
xor
add
or
rcr
cmp
clc
or
mov
fists
add
mov
sbb
add
push
adc
mov
add
sbb
dec
or
add
and
add
xchg
sub
lcall
add
adc
clc
inc
clc
pop
ds
je
ficoml
clc
arpl
add
add
add
clc
fisttps
or
jae
add
pop
dec
out
fdivl
mov
mov
int3
mov
inc
add
adc
clc
xor
add
sar
into
std
in
and
ja
clc
hlt
mov
cli
jecxz
lcall
sbb
add
inc
add
push
adc
add
call
jno
add
mov
cwtl
cwtl
add
stos
outsb
xchg
lcall
add
or
loopne
scas
sub
xbegin
push
cmp
clc
insb
jbe
mov
pop
xlat
lret
or
push
outsb
lret
sar
dec
pusha
add
fwait
movsb
clc
push
hlt
fbstp
dec
push
sub
add
sbb
clts
clc
mov
lret
sbb
add
sub
int
data16
idivb
mov
sub
sbb
clc
xabort
clc
gs
sub
pop
push
add
js
clc
push
xchg
mov
add
jg
clc
cld
test
ss
cs
aas
cs
mov
aas
cld
add
add
sbb
clc
negl
add
jbe
fldt
xor
add
add
jge
or
lods
mov
mov
add
xchg
insl
aaa
add
add
aad
add
scas
leave
in
out
push
outsb
cltd
imul
rol
clc
int
xchg
je
ja
loopne
inc
clc
lahf
cmp
fidivl
fsubrl
add
mov
repnz
adc
add
add
cltd
jecxz
sbb
fisttps
pop
fsub
clc
add
jg
clc
mov
test
clc
iret
and
add
es
jo
add
mov
ficoms
jae
add
add
aaa
or
mov
cld
out
arpl
add
push
add
cmp
pop
push
ret
clc
enter
lret
adc
add
bound
add
sbb
jb
add
inc
add
pop
clc
adc
add
add
jae
add
clc
cmc
inc
add
adc
fstps
and
add
xabort
add
add
add
sbb
mov
je
fcoml
add
or
clc
mov
lahf
sub
jno
add
fs
pop
clc
sar
sbb
daa
clc
loop
add
add
loopne
mov
cmp
mov
nop
cmp
sbb
clc
fdivr
mov
test
add
adc
out
int
pusha
add
fwait
iret
inc
clc
movsl
clc
mov
cs
repnz
mov
stos
xor
add
add
add
scas
push
pusha
add
call
ror
lods
repnz
clc
jecxz
in
popa
add
mov
jmp
mov
add
add
clc
jle
es
xchg
mov
dec
aam
add
sub
add
inc
add
jl
mov
test
scas
sub
xabort
jle
cli
and
add
mov
xor
add
clc
xchg
mov
clc
or
xchg
xchg
xchg
rcr
xchg
mov
out
gs
or
xor
add
clc
adc
add
mov
clc
sar
loop
mov
mov
add
xchg
daa
clc
in
std
ljmp
add
pop
mov
clc
mov
cmp
sbb
or
sbb
add
loope
popf
imul
cmp
fimull
clc
lods
out
add
pop
push
add
mov
stos
push
rcrl
lcall
mov
clc
xor
mov
fsubl
lock
xchg
out
bound
add
clc
es
aad
push
add
sbb
jl
push
add
sbb
add
dec
mov
add
add
xor
add
clc
push
ljmp
lret
gs
testb
mov
adc
add
push
add
mov
xchg
lock
clc
repz
icebp
mov
and
and
clc
test
enter
jbe
ja
add
dec
xabort
add
adc
add
clc
adc
nop
and
fisttps
jns
pop
cmp
ret
clc
mov
adc
add
clc
jno
add
add
add
call
iret
jmp
cltd
xor
add
clc
pop
sub
lcall
add
daa
clc
fsubrp
cli
pop
dec
pop
shlb
add
clc
mov
outsl
inc
add
fimull
clc
fwait
ret
dec
idivb
jnp
clc
sub
call
push
add
xchg
push
movsl
clc
push
add
add
in
cwtl
std
or
clc
aaa
xchg
call
pop
adc
mov
clc
ds
cli
lea
add
push
fisttps
add
inc
add
arpl
add
mov
mov
cmpsl
clc
jns
add
sbb
pusha
add
out
cmc
clc
pop
cld
cmpsb
clc
xor
fiaddl
in
js
xchg
push
fdivl
adc
sub
add
mov
add
jle
and
add
add
clc
push
clc
or
leave
push
inc
clc
cmp
add
clc
jge
add
lea
loop
sahf
mov
jbe
jmp
add
and
adc
add
clc
pop
std
aam
mov
imul
out
pop
gs
or
and
add
cli
adc
xbegin
fwait
sub
jno
add
add
add
cmp
jae
add
pusha
add
mov
add
addr16
cwtl
or
clc
mov
clc
mov
pop
fidivrl
clc
sbb
in
xchg
inc
clc
mov
rolb
scas
clc
inc
clc
sbb
mov
sub
add
rclb
add
push
cs
mov
insb
push
add
pop
adc
add
sahf
mov
popa
add
repnz
jge
clc
data16
fwait
mov
inc
clc
imul
ljmp
add
add
and
dec
push
adc
add
add
out
push
clc
divb
sbb
add
movsb
clc
mov
lock
add
mov
mov
imul
mov
jmp
inc
add
imul
adc
add
cmp
push
inc
add
pop
clc
sar
gs
pushf
test
lods
lret
xor
add
sub
clc
jmp
movsb
clc
imul
cmp
pop
fldcw
clc
aaa
xchg
jl
fs
insl
dec
or
lods
aaa
notl
add
inc
clc
ss
add
adc
add
add
xor
add
add
sbb
test
mov
cmpsb
clc
push
cmp
clc
add
add
sbb
clc
xor
adc
lcall
mov
add
sbb
add
stos
fcoms
mov
jno
add
add
in
mov
clc
scas
mov
clc
or
clc
call
es
xabort
enter
mov
add
and
add
imul
add
clc
xchg
dec
xor
add
add
add
push
xor
add
mov
outsb
jp
clc
mov
clc
cmp
cmp
mov
mov
cld
shr
jmp
cmp
xlat
mov
cmpsb
clc
aaa
mov
mov
push
mov
add
aaa
inc
add
xbegin
or
rcrl
push
sbb
dec
movsb
clc
rcrl
mov
ss
movsl
clc
leave
inc
clc
xor
add
add
add
add
pop
icebp
mov
lcall
and
adc
add
clc
gs
or
clc
mov
add
add
test
xchg
and
add
inc
add
mov
add
mov
cmp
scas
xchg
cmpsl
clc
xor
add
clc
add
add
dec
aas
mov
jbe
sbb
add
je
pop
mov
add
jae
add
add
xchg
mov
adc
aas
sar
push
cmp
clc
popa
add
jg
cmp
sub
aam
aad
mov
int3
out
sbb
stos
or
inc
add
jge
clc
ret
clc
jmp
add
cwtl
fwait
stc
sbb
clc
data16
xabort
add
cmc
imul
add
mov
add
xchg
cmp
xor
add
inc
clc
dec
ja
lods
mov
sub
clc
movsl
clc
push
cmc
test
add
addr16
repz
add
fisubrl
push
add
fsts
add
je
add
iret
add
add
add
insb
cmp
add
scas
or
sahf
mov
dec
aam
mov
out
sbb
clc
mov
jno
add
in
out
dec
test
add
sbb
pop
inc
clc
loopne
fisubrl
dec
push
xchg
sub
mov
pusha
add
adc
add
clc
cmp
clc
and
add
push
add
movaps
clc
jbe
add
sar
clc
xor
add
jge
test
adc
sbb
mov
add
clc
mov
inc
add
or
js
shl
and
add
clc
mov
loop
dec
pop
js
divl
add
clc
ret
into
inc
add
xabort
add
jbe
add
xbegin
add
test
cmp
xor
add
clc
or
clc
test
nop
dec
jl
cmp
sbb
mov
clc
sar
bnd
add
insb
inc
clc
push
xchg
in
movsl
clc
out
jg
shrl
add
aad
clc
jp
sti
lods
icebp
jle
or
clc
sub
enter
push
popl
add
add
add
jge
push
jg
xor
add
fisttpll
jmp
add
std
scas
imul
popa
add
dec
clc
pop
adc
add
add
jo
add
clc
jmp
clc
fistps
dec
inc
clc
cmp
clc
add
add
add
cmp
scas
mov
cmpsb
clc
dec
mov
clc
mov
mov
dec
mov
clc
or
mov
push
out
or
add
je
clc
es
xchg
jl
jle
add
add
mov
jle
adc
add
clc
test
scas
mov
clc
xchg
push
clc
sbb
in
mov
clc
mov
clc
lods
fstpt
insb
xchg
mov
add
cmp
add
clc
icebp
xor
add
and
add
add
jno
add
add
add
sub
idivb
clc
repnz
aad
add
inc
add
fdivl
add
addr16
sahf
xchg
imul
add
clc
je
xabort
arpl
add
add
cmp
inc
clc
xchg
imul
inc
clc
push
mov
inc
add
sbb
clc
mov
jle
shrl
rorb
clc
jmp
mov
fidivs
add
cli
jns
cltd
icebp
mov
sahf
inc
clc
inc
clc
outsb
or
dec
es
sti
xchg
sar
and
lea
dec
and
add
add
inc
add
cmp
test
push
mov
add
mov
add
lods
push
add
loope
or
add
jae
add
clc
test
clc
mov
hlt
add
add
shll
add
in
std
and
add
xlat
jle
mov
sbb
clc
repnz
stos
xchg
inc
add
inc
add
je
add
add
add
add
mov
sar
xbegin
popf
gs
icebp
dec
adc
clc
jg
adc
add
aad
sbb
int3
dec
xor
clc
test
sub
add
icebp
xchg
ljmp
cs
test
cmpsl
clc
test
xbegin
dec
or
and
add
stc
aas
mov
inc
add
sub
add
clc
pop
dec
in
xchg
movsl
clc
mov
ljmp
imul
inc
add
jne
ds
jl
mov
add
xchg
outsl
jg
cmpsl
clc
mov
jo
add
pop
clc
push
insl
lret
sub
xchg
cmp
push
add
cli
or
clc
push
add
pop
push
clc
jmp
mov
add
ret
clc
mov
std
xor
add
add
pop
mov
pop
inc
clc
fwait
pop
ja
cmp
lahf
lret
add
add
popl
inc
clc
enter
add
add
das
testb
add
popf
lret
inc
clc
pusha
add
xor
cmc
gs
lret
push
into
stc
xchg
and
push
loope
mov
clc
ds
icebp
and
mov
clc
cmp
add
je
clc
add
add
out
push
and
add
add
test
cltd
insb
insl
shll
push
cli
or
shlb
clc
es
jecxz
lods
jg
scas
ds
sbb
aaa
sbb
mov
outsb
adc
add
add
cmp
xbegin
insl
xchg
or
pop
fistl
mov
jge
and
add
enter
xor
add
cmpsb
clc
daa
clc
and
add
clc
jle
add
sbb
clc
jg
mov
push
imul
mov
mov
int
inc
add
sbb
add
add
add
dec
fs
hlt
xchg
jnp
scas
add
add
add
add
pop
xor
add
clc
cli
xabort
clc
cmpsb
clc
dec
cmc
jne
pop
repnz
push
cmp
add
pop
clc
cmpsl
clc
fistl
or
aas
aad
add
push
out
mov
clc
jne
cmp
inc
clc
cmp
ss
cmc
dec
je
add
pushf
mov
sub
clc
repnz
push
add
add
inc
clc
iret
test
add
sub
cld
icebp
mov
arpl
add
and
out
lods
sti
jmp
clc
mov
stc
mov
notb
add
ficoml
je
push
pop
clc
adc
add
loope
push
adc
add
mov
hlt
das
adc
add
adc
add
sub
sub
daa
clc
out
ss
std
push
add
push
ret
clc
xor
add
cltd
fildll
fstpt
mov
clc
icebp
push
add
iret
xabort
mov
stos
lahf
clc
cmp
dec
out
insb
ds
clc
repnz
sbb
xor
mov
cmp
clc
sbb
lea
mov
lock
mov
clc
pop
mov
mov
arpl
add
adc
add
add
inc
add
mov
clc
push
fsubrs
add
xor
add
clc
adc
add
cmp
adc
add
mov
cmpsb
clc
adc
add
in
addr16
sub
cmp
push
sub
xbegin
iret
leave
fdivs
ljmp
cld
int3
repnz
xor
push
pop
cmp
outsb
jmp
test
repz
clc
mov
call
data16
sbb
fldenv
push
push
fistpll
adc
add
clc
stos
pop
push
ficoml
add
adc
add
add
test
mov
ficompl
add
clc
in
jb
add
call
mov
cmp
outsl
push
add
mov
add
mov
add
add
incb
xchg
ret
clc
popa
add
and
bound
add
add
add
jmp
add
push
rcrl
pusha
add
jo
add
sub
cmp
sahf
xor
fidivrl
fsubrs
clc
int
es
mov
repz
or
add
stos
loope
dec
add
add
add
dec
cmp
sub
pop
and
sahf
scas
lret
mov
add
inc
clc
bound
add
mov
clc
inc
clc
push
add
or
lods
imul
xchg
xchg
fdivrl
test
aas
xlat
stc
xor
add
xchg
jns
sbb
inc
add
dec
xchg
jp
add
test
fsts
js
add
sbb
clc
cmp
and
add
mov
jno
add
clc
mov
cmp
clc
test
enter
sbb
repnz
cmp
fstpl
adc
inc
clc
add
add
add
sbb
add
loopne
pushf
push
add
or
fwait
mov
lea
addr16
mov
add
xchg
sar
push
clc
cmc
iret
data16
or
sbb
test
ficomps
inc
add
scas
cmc
or
add
fs
xchg
sub
mov
add
jns
clc
lcall
int3
cmp
clc
pop
sar
xor
add
jb
add
mov
lods
cmc
inc
add
or
clc
addr16
outsb
ret
dec
xor
add
pop
cmp
push
adc
add
rep
sbb
in
pushf
push
clc
mov
cmp
jge
push
add
push
and
add
push
add
fidivrl
pop
clc
cmp
push
xchg
push
add
mov
mov
inc
clc
adc
add
gs
mov
cmp
xlat
xchg
insb
or
mov
mov
clc
mov
cmpsb
clc
shll
loopne
push
rcr
cmp
cmp
add
push
jmp
clc
xchg
cwtl
sar
and
add
fsubrl
popf
dec
test
add
clc
xchg
mov
fsubs
clc
mov
mov
add
mov
mov
xlat
sub
clc
and
add
mov
clc
xchg
daa
clc
mov
mov
fildl
cmp
sbb
mov
add
and
add
mov
add
clc
fiaddl
inc
add
popf
xchg
sar
xchg
pop
clc
xchg
cmp
insl
mov
clc
inc
clc
xchg
adc
add
xbegin
jle
in
mov
aaa
sbb
clc
xchg
inc
clc
mov
cmp
adc
add
push
add
sbb
clc
dec
xacquire
add
clc
test
xchg
pop
insb
mov
add
test
sub
xchg
mov
clc
sbb
add
xor
add
test
inc
clc
sub
mov
enter
dec
mov
add
inc
clc
inc
clc
push
mov
mov
add
and
add
cmp
clc
dec
aas
aaa
arpl
add
test
pop
insl
adc
dec
fisttpl
clc
ss
outsl
xor
add
add
sub
inc
add
mov
inc
add
cmp
clc
jnp
add
xabort
push
clc
fildll
add
jns
add
mov
mov
add
mov
push
es
icebp
pand
add
inc
clc
das
data16
cmp
nop
add
add
mov
mov
bound
add
js
inc
clc
push
cmp
shrb
xor
add
ds
stos
xor
add
mov
popf
jp
pushf
jl,pt
push
clc
mov
jle
daa
clc
in
in
cmpsl
clc
dec
ds
cmpsb
clc
pop
pop
clc
sbb
clc
xchg
lock
sbb
clc
sbb
insl
pop
iret
std
add
mov
mov
clc
cmpsb
clc
xchg
call
repnz
dec
inc
clc
roll
and
push
je
divb
scas
inc
add
add
add
add
add
imul
popf
loopne
sub
add
cmc
movsl
clc
leave
daa
clc
jnp
cmp
add
clc
mov
cwtl
into
xchg
xor
add
bound
add
or
imul
add
sub
add
mov
push
popa
add
imul
adc
out
push
add
icebp
or
add
loopne
das
lods
popf
aas
lods
in
cmp
mov
clc
mov
fs
hlt
bound
add
push
add
pop
sahf
fs
pop
clc
inc
add
out
aad
fisubrs
add
add
call
add
insl
outsb
sar
adc
add
arpl
add
jno
add
test
clc
test
clc
xchg
lahf
mov
add
xadd
fidivrl
xchg
out
mov
test
aaa
sti
aad
clc
and
add
push
and
aas
xor
dec
test
clc
scas
shlb
clc
sahf
push
repz
sar
clc
lods
cmp
pop
clc
jge
clc
xlat
jbe
popa
add
cmp
into
movsl
clc
iret
cld
mov
in
cmp
popf
mov
inc
clc
cli
out
pop
cwtl
popa
add
test
and
pop
rclb
movsb
clc
adc
add
leave
or
dec
lods
mov
sbb
sbb
clc
fimull
inc
clc
or
mov
add
adc
add
add
push
std
test
pusha
add
jle
inc
clc
mov
pop
scas
lahf
sub
lock
add
repnz
shl
clc
sbb
sub
out
mov
or
add
add
bound
add
and
add
aaa
lcall
push
clc
sbb
push
addr16
insl
into
sbb
add
add
cs
jbe
inc
clc
jp
and
add
xchg
dec
das
mov
clc
popa
add
xor
loopne
ljmp
cmp
data16
sar
clc
cli
call
add
cmc
lock
xrelease
add
clc
imul
movsl
clc
xor
add
push
shll
add
fucomip
mov
add
clc
data16
and
adc
popa
add
mov
add
int3
test
clc
dec
sar
inc
clc
sahf
inc
add
je
inc
clc
mov
pop
clc
xor
add
clc
mov
add
out
fidivrl
mov
imul
add
mov
iret
mov
add
xor
add
fistpl
clc
mov
pop
adc
add
or
clc
push
add
inc
add
in
cmp
ljmp
add
mov
sbb
clc
je
push
jmp
add
add
and
add
xabort
add
jge
icebp
iret
or
xchg
sar
xchg
cwtl
notl
add
push
add
push
pop
cli
xor
clc
es
xchg
or
clc
sub
outsl
xchg
loop
xor
add
mov
mov
add
out
xchg
pop
jae
add
repz
iret
jns
add
mov
cmp
push
clc
enter
sub
pusha
add
sub
add
icebp
fwait
pop
imul
cmc
push
mov
jge
out
in
mov
add
clc
adc
add
lret
mov
aaa
pop
mov
int3
sahf
mov
jle
clc
stos
cltd
push
negl
pop
xchg
data16
inc
clc
testl
lods
adc
cli
jne
dec
mov
scas
fldl
add
inc
clc
cltd
jge
adc
add
mov
add
mov
or
jg
clc
cmp
lahf
int3
sbb
insl
ljmp
mov
hlt
mov
add
repnz
add
insl
sahf
jbe
shrl
mov
fs
mov
movsb
clc
out
jne
in
adc
pop
sbb
fs
daa
clc
loopne
jecxz
sar
insl
shl
cmpsl
clc
jo
add
pop
popa
add
inc
add
sub
ret
clc
pop
xchg
pop
or
add
stos
aaa
sbb
data16
dec
sbb
in
leave
adc
imulb
push
clc
jbe
int3
in
and
add
add
xabort
jns
stos
jne
xchg
mov
repz
push
push
push
xlat
xchg
dec
fmul
sbb
cmp
mov
test
and
adc
loopne
mov
fs
repnz
jg
and
add
adc
add
clc
ds
xchg
es
jg
mov
adc
add
clc
leave
lods
pushf
push
sub
add
jne
mov
add
in
mov
clc
fsubs
add
ds
mov
clc
fidivl
add
fwait
mov
gs
push
add
inc
add
pop
fmuls
push
inc
add
xchg
pop
sar
add
push
clc
add
add
xchg
icebp
sbb
ds
clc
xor
add
clc
xor
add
mov
add
cld
jmp
push
sub
add
cs
into
repnz
inc
clc
adc
clc
xchg
and
mov
jae
add
clc
nop
jp
aaa
stc
adc
add
push
jns
hlt
jo
add
add
dec
jmp
add
add
rcl
sti
jne
dec
dec
popa
add
add
add
add
jle
movsl
clc
in
leave
or
mov
jnp
add
dec
int3
adc
add
add
xor
add
and
lods
dec
or
cwtl
xchg
filds
clc
jb
add
int3
mov
sbb
clc
or
add
cmp
std
dec
ret
out
push
add
cmp
scas
and
add
add
setnp
push
add
cmpsb
clc
filds
add
add
cmc
push
jecxz
sub
xor
mov
clc
pop
clc
jge
dec
sar
clc
dec
imul
ja
clc
add
fsubrs
iret
xor
fistps
mov
xchg
ds
sub
adc
add
mov
clc
cmp
call
sbb
clc
add
add
clc
mov
cmp
push
xor
mov
add
cmp
mov
jl
inc
clc
push
data16
or
cmpsb
clc
xchg
jb
add
cmp
xchg
pop
vmovups
add
mov
push
rcrb
mov
idiv
pop
in
int
clc
sub
add
add
clc
cmp
mov
rorb
add
jecxz
cmp
xor
add
enter
push
ja
add
cs
and
add
mov
xor
add
test
mov
pop
cmp
comiss
add
jle
nop
movsb
clc
fisubl
add
add
fwait
stos
in
divb
add
lahf
ds
inc
clc
dec
movsl
clc
inc
add
or
mov
clc
sub
in
sar
clc
out
fidivs
clc
sub
mov
mov
clc
bound
add
add
add
popf
nop
aad
sub
add
add
inc
add
ds
jb
add
clc
sub
sbb
or
cmp
repz
xchg
pop
mov
clc
sar
cmp
idiv
xchg
xchg
pop
lahf
or
add
clc
ret
clc
push
add
insb
fs
cmpsl
clc
xlat
bound
add
hlt
lahf
xchg
lea
daa
clc
cwtl
push
add
call
add
sar
ljmp
fadds
add
add
adc
add
clc
xabort
push
sub
test
clc
sahf
and
lods
pop
fsubrl
neg
jnp
adc
add
shl
clc
das
fdivrs
inc
clc
lret
sti
mov
ds
repnz
and
add
jb
add
cmp
add
scas
pop
dec
sti
xchg
fcmovnbe
cltd
out
pop
ja
add
ja
pushf
arpl
add
cmp
add
add
inc
add
sub
inc
clc
and
data16
or
clc
das
insl
cli
cltd
add
add
clc
fldenv
inc
clc
inc
clc
or
inc
add
out
es
mov
clc
call
add
ljmp
push
add
je
adc
add
dec
arpl
add
add
xor
add
add
lret
sar
add
xor
add
iret
enter
fs
ljmp
add
add
xchg
fdivrl
jo
add
fiadds
mov
adc
add
icebp
xor
clc
sub
clc
sub
mov
clc
data16
data16
sbb
add
fs
xchg
dec
int3
addr16
repz
add
insb
xabort
xor
add
add
stc
insl
xor
clc
fisubrl
xchg
aaa
push
out
mov
xor
add
adc
add
clc
cmp
clc
std
dec
cmp
ret
clc
or
push
sbb
icebp
aam
add
data16
fs
pop
mov
add
data16
push
pop
sub
inc
clc
add
add
add
jg
cld
aaa
lret
add
or
imul
jno
add
add
iret
mov
add
sbb
clc
pop
fiaddl
js
add
cli
rclb
stos
out
mov
jno
add
dec
daa
clc
mov
dec
je
stos
mov
cmp
clc
xchg
mov
clc
leave
mov
jne
clc
sahf
xchg
sbb
clc
xabort
ret
xor
add
inc
add
and
clc
stos
jns
inc
add
int3
dec
mov
faddp
clc
ret
add
mov
sub
add
mov
pop
sub
jnp
lcall
push
stos
xbegin
adc
clc
sub
add
pushf
pop
jb
add
jmp
clc
adc
clc
cmpsl
clc
jg
add
add
add
clc
in
dec
adc
add
popa
add
mov
clc
pop
clc
leave
xchg
push
fildl
dec
gs
testl
stos
das
fxch
out
data16
push
add
push
cvttps2pi
sbb
in
daa
clc
pop
aad
clc
xchg
cmp
xor
add
clc
pop
aas
fnsave
add
ja
add
lea
jp
cmp
pop
cs
xor
rolb
into
adc
add
add
pop
clc
pop
add
clc
test
add
adc
clc
jne
clc
rolb
add
dec
clc
stos
cltd
xor
clc
cmp
add
push
je
das
jnp
fmull
and
clc
mov
cmp
lret
ret
clc
lods
aaa
pusha
add
xabort
push
add
jecxz
inc
add
adc
add
dec
and
adc
add
idivl
mov
clc
fiadds
std
push
add
cmp
add
sar
clc
es
enter
and
adc
cmp
add
mov
clc
data16
clc
sbb
clc
test
mov
das
pop
es
ja
lcall
loopne
sbb
imul
clc
mov
clc
gs
xbegin
adc
add
sti
fidivrs
xor
add
dec
push
and
add
sbb
clc
lods
aam
fnstcw
add
cmp
mov
push
outsl
jmp
mov
clc
sti
out
jecxz
popf
loopne
movsl
clc
loope
inc
clc
xchg
fiaddl
mov
mov
ss
int
pop
cmp
xchg
xlat
jp
xor
add
add
movntq
out
or
ficompl
cs
cwtl
sar
add
mov
jae
add
add
imul
clc
in
or
and
add
push
add
aad
or
clc
fmuls
jg,pt
add
insl
xor
add
lahf
xabort
add
rclb
aaa
inc
clc
cmp
sbb
pop
dec
imul
xchg
xchg
pop
mov
clc
repz
lret
jg
clc
or
cmp
int3
lods
push
shl
clc
adc
pushf
dec
gs
std
notb
add
clc
lcall
adc
add
jae
add
clc
clc
pop
sbb
add
mov
sahf
sub
mov
mov
test
data16
push
xbegin
pop
cmc
in
jecxz
clc
adc
add
mov
sub
pusha
add
cmp
clc
cltd
xchg
lock
in
sbb
clc
ret
xabort
pushf
jns
in
fs
mov
clc
pop
jbe
pushf
sbb
and
or
jo
add
add
add
sti
aas
dec
in
cmp
lock
jb
add
sar
mov
xor
add
into
or
pop
aaa
cmp
lock
aam
adc
add
xor
add
bound
add
clc
pushf
sbb
mov
add
mov
clc
inc
clc
negl
or
iret
or
repnz
add
into
in
xchg
leave
ja
popf
fmuls
inc
clc
inc
add
cmp
clc
add
add
sbb
ja
sub
nop
dec
xlat
jmp
add
adc
clc
stos
clc
fwait
mov
xor
add
clc
push
test
lock
fwait
mov
jnp
add
rdtsc
add
ljmp
add
stos
add
add
pop
or
clc
and
add
cmc
inc
add
fldl
xchg
dec
data16
pop
clc
mov
push
mov
clc
movsl
clc
pop
xchg
push
add
pop
popf
mov
add
push
ret
clc
mov
mov
adc
add
push
fstp
int3
push
xbegin
sub
int
clc
push
pushf
mov
ja
clc
aaa
inc
add
clc
or
push
fisubrl
clc
xchg
mov
add
xchg
stos
cmp
add
push
mov
xor
add
clc
push
dec
mov
clc
decl
dec
out
jnp
dec
pop
lret
ret
clc
fcmovne
push
add
mov
add
stos
add
add
movsl
clc
negb
xabort
clc
icebp
cmpsb
clc
add
add
mov
lret
push
idivb
xor
add
add
cld
sbb
push
add
cmp
divl
cmp
mov
insb
shlb
cmp
inc
add
fnstcw
test
mov
xchg
cld
lea
xor
add
sahf
mov
add
cmc
outsb
cld
aam
ret
clc
inc
add
pop
jb
add
add
jno
add
clc
and
cmpsl
clc
adc
add
add
out
cmp
imul
cmp
je
add
stos
inc
clc
push
add
sbb
xchg
leave
mov
lret
imul
add
cmp
sub
add
clc
lock
adc
add
test
incb
add
xchg
fadds
into
loopne
or
clc
aaa
lods
sar
clc
dec
rcr
test
add
add
add
cmp
clc
and
add
out
in
pop
xor
add
or
mov
clc
repnz
out
pop
fsubl
add
jo
add
das
sbb
mov
mov
add
mov
clc
adc
add
add
cld
xchg
add
jge
add
cmp
inc
add
divl
add
push
movsb
clc
xchg
test
movsb
clc
adc
add
add
jb
add
pop
sub
clc
sbb
loopne
popa
add
in
daa
clc
xchg
jmp
add
clc
jnp
push
mov
push
aaa
sbb
clc
decb
test
dec
mov
clc
jne
clc
aaa
xchg
out
loop
cmp
clc
mov
in
lods
pop
xchg
pop
pop
dec
mov
xchg
mov
insb
push
das
imul
clc
call
add
bnd
cmp
clc
inc
clc
lcall
push
adc
add
stos
mov
mov
clc
fwait
pop
clc
or
pop
and
adc
in
pop
js
and
add
add
clc
div
jmp
push
mov
into
in
mov
cwtl
cmp
sbb
jmp
adc
add
add
ja
add
out
sub
dec
adc
xchg
pop
mov
pop
mov
cmp
add
add
add
mov
push
mov
cltd
lret
test
push
add
ja
jmp
fs
mov
add
nop
or
stos
data16
rcrb
dec
dec
call
test
clc
ror
pop
jae
add
stos
out
adc
add
dec
inc
add
mov
js
add
mov
es
xchg
inc
clc
stos
xor
add
cmpsb
clc
mov
xchg
aam
scas
xchg
enter
in
ret
clc
xchg
push
add
enter
clc
adc
add
add
lcall
xchg
dec
dec
sub
sbb
or
clc
cli
mulb
iret
ret
lods
es
jnp
clc
loope
std
shll
dec
int
mov
add
cwtl
xor
sbb
add
ret
clc
fnsave
cmpsl
clc
mov
pop
or
clc
jecxz
loopne
add
add
and
add
adc
add
add
imul
add
cmp
popf
cmp
add
lea
sahf
aaa
xor
dec
lret
testl
add
clc
mov
mov
push
clc
iret
cmp
lcall
clc
aas
sar
cmp
add
ljmp
pop
inc
clc
jno
add
repz
add
add
int3
std
idivb
clc
aad
imul
cltd
lock
stos
xchg
sbb
out
fimull
push
pop
clc
cmp
add
pop
sar
or
push
add
push
add
xbegin
add
add
xchg
pop
outsb
xchg
push
dec
lods
aaa
pop
cmp
add
in
mov
mov
cld
cmc
inc
add
mov
cmp
out
inc
clc
addr16
ja
pushf
iret
xor
add
clc
xbegin
add
das
xchg
mov
clc
xchg
in
add
add
pop
sub
clc
or
clc
addr16
xor
add
xchg
cli
and
add
add
add
adc
add
clc
mov
cmp
test
sbb
clc
and
add
and
add
lods
mov
insl
outsl
dec
into
cmp
popf
pop
jo
add
add
imul
dec
notb
add
fldln2
or
daa
clc
dec
cmp
daa
clc
into
push
aam
aaa
stc
pop
or
in
gs
stc
inc
clc
cmp
sbb
add
jmp
sub
sub
mov
xor
add
xchg
shr
out
mov
clc
out
imul
mov
fcmovnu
ds
lret
das
xor
add
add
add
clc
jae
add
clc
lret
jno
add
cmp
pop
clc
cmpsl
clc
mov
add
cmp
pop
loope
sbb
rcll
jmp
addr16
nop
cmpsb
clc
out
gs
push
cmp
fisttpll
xabort
scas
cld
lcall
test
inc
add
out
cmp
mov
sbb
clc
and
add
xchg
sbb
xchg
aaa
jae
add
jnp
jo
add
add
and
push
lea
aam
iret
ret
clc
fsubr
out
mov
ret
vcmpps
add
rol
clc
ss
clc
hlt
add
clc
push
jge
in
jo
add
clc
sar
add
add
clc
nop
or
adc
rorb
or
jno
add
fmul
mov
fstpl
clc
jg
xbegin
clc
mov
clc
cmp
add
mov
jge
int3
sar
addr16
lods
inc
clc
xchg
dec
sbb
aam
dec
in
repz
xlat
sbb
daa
clc
test
pop
jge
imul
add
fists
add
gs
sub
cld
div
xchg
dec
xchg
mov
shll
clc
and
fstl
imull
sbb
add
jg
clc
fabs
clc
cmp
jle
std
pop
jl
std
adc
add
adc
add
sti
push
add
inc
add
popf
sbb
cld
sbb
test
pop
push
add
stc
pop
mov
ret
clc
stos
push
adc
add
clc
push
xchg
jns
gs
in
fwait
adc
add
clc
dec
xchg
in
dec
mov
cmp
setns
add
clc
cmp
push
aas
fbstp
in
mov
mov
or
jp
lcall
inc
clc
movsl
clc
ret
add
fs
inc
clc
repz
cmp
sbb
add
push
add
scas
fistpl
cld
pop
aad
adc
add
add
out
das
je
jns
es
or
sbb
inc
clc
leave
cmp
lret
ja
xchg
inc
clc
xor
add
add
testl
clc
or
clc
push
or
ja
add
cmc
inc
clc
cmpsb
clc
stos
xchg
mov
add
or
mov
add
push
add
jp
lea
add
data16
add
pop
jb
add
or
clc
dec
sbb
add
add
add
cmpsb
clc
insl
test
lcall
xor
add
int
or
push
add
dec
and
repz
add
jecxz
sbb
clc
hlt
sbb
add
clc
fistpll
mov
sub
inc
add
cmpsb
clc
flds
sub
add
outsl
push
add
push
xchg
jb
add
clc
jo
add
add
add
adc
add
data16
jnp
clc
cli
xchg
xlat
cmp
int3
out
dec
in
pop
imul
insl
fcmove
cmp
mov
idivl
jns
jnp
int
dec
pop
cwtl
cmc
sar
jns
clc
mov
or
cmp
sarl
clc
mov
push
dec
or
push
clc
and
add
pop
clc
jnp
add
sub
push
xor
outsb
jbe
mov
add
cmp
clc
xabort
clc
test
int3
sbb
add
sbb
mov
into
push
js
clc
in
ss
aas
inc
clc
push
clc
add
add
add
mov
cmpsl
clc
icebp
cltd
mov
add
sub
loope
sub
fbld
push
add
jl
add
js
pop
lret
sbb
clc
iret
nop
je
add
and
ds
add
mov
xabort
movsl
clc
mov
sahf
shrl
sbb
add
shrl
add
call
clc
xchg
or
jecxz
xchg
xchg
sahf
into
mov
mov
je
jge
clc
mov
out
testb
add
clc
lret
rol
clc
shl
clc
mov
add
clc
cmp
cld
mov
ja
ja
clc
clc
sbb
add
clc
aas
loop
das
in
push
mov
and
add
out
shrb
dec
sbb
pop
mov
ret
daa
clc
lret
lea
mov
push
clc
leave
in
cmp
adc
pop
adc
add
jae
add
mov
xchg
dec
xchg
addr16
sbb
mov
inc
add
mov
add
add
add
pop
clc
pop
push
mov
clc
pusha
add
scas
test
bound
add
ss
mov
add
jle
clc
jl
lahf
mov
clc
test
push
leave
push
icebp
imul
clc
xchg
dec
push
dec
xchg
dec
mov
loope
push
mov
and
add
add
sub
cmp
inc
add
sub
jo
add
inc
add
je
add
sbb
sub
bsf
dec
xabort
add
jne
popf
in
cmp
xor
add
clc
dec
inc
clc
pusha
add
xchg
mov
add
scas
fimull
clc
int
data16
xabort
add
push
add
mov
sti
sbb
in
ret
clc
fcompl
dec
jecxz
out
push
clc
dec
sti
idiv
or
clc
sub
clc
or
clc
mov
or
xor
es
lods
sub
clc
pushf
mov
in
cmp
clc
inc
add
fwait
pusha
add
movsl
clc
inc
clc
fcmovnb
clc
cmp
clc
jbe
add
inc
clc
into
jb
add
aaa
ss
mov
mov
mov
es
jl
cmp
clc
dec
pop
push
inc
add
push
mov
cmp
clc
mov
jp
clc
cwtl
dec
xchg
test
add
cmc
cmpsb
clc
lret
xchg
add
add
xor
add
adc
add
push
mov
clc
mov
clc
popf
loope
add
add
add
out
xbegin
mov
dec
hlt
pop
clc
or
fs
push
icebp
lock
dec
inc
add
cmp
mov
clc
pop
mov
clc
lret
clc
sub
jno
add
push
clc
sub
bound
add
data16
repnz
arpl
add
jns
add
pop
cmpsb
clc
cmpsl
clc
mov
into
je
fildll
dec
mov
mov
add
xor
dec
xor
add
mov
add
ljmp
lcall
call
pop
mov
shl
clc
cltd
inc
add
lcall
in
mov
add
enter
push
mov
add
sarb
dec
adc
add
cmc
jmp
add
ror
call
sub
sub
mov
adc
cmc
aaa
lock
add
lcall
arpl
add
add
cmp
stos
mov
shlb
bound
add
add
lret
inc
clc
xor
add
push
cmpsb
clc
pop
je
add
add
add
outsb
scas
call
add
jecxz
iret
fists
add
cmc
mov
lret
dec
into
gs
xor
imul
inc
add
mov
pop
clc
clc
jae
add
clc
into
xchg
jecxz
int
mov
add
xchg
rorl
loop
adc
add
push
jno
add
vucomiss
add
pop
stos
xlat
stc
push
add
add
clc
call
mov
out
insb
stc
lods
xor
sbb
sbb
inc
add
xor
add
sub
pop
cmp
movsl
clc
sbb
add
popa
add
mov
shl
clc
jb
add
mov
mov
outsl
je
aam
clc
push
and
add
cs
mov
clc
inc
clc
sbb
clc
adc
clc
or
clc
jo
add
fnstsw
inc
clc
stos
push
add
push
aam
sbb
icebp
inc
clc
jb
add
inc
add
sar
mov
pushf
test
stos
repz
pop
aad
sbb
add
mov
jo
add
pusha
add
push
fidivl
clc
push
pop
xor
jg
icebp
std
cli
pusha
add
das
cmp
add
dec
loop
mov
bound
add
xor
sti
shl
clc
sbb
sbb
xchg
jecxz
jl
test
xor
add
clc
or
cmp
hlt
sub
divb
add
add
ja
adc
add
clc
dec
and
aas
xor
add
clc
sbb
ffree
clc
lods
push
inc
clc
jle
push
add
test
clc
mov
roll
inc
clc
sbb
dec
fistl
cmp
in
xchg
iret
push
clc
in
or
jno
add
add
std
inc
clc
clc
repz
hlt
cmp
and
add
add
jbe
and
add
add
xbegin
add
pusha
add
fstl
gs
pop
clc
roll
add
clc
pop
pop
sub
add
and
add
scas
fwait
call
add
add
clc
sar
lods
popa
add
loope
jbe
clc
imul
jmp
add
xchg
mov
ds
fistps
mov
pushf
and
add
ja
jg
lea
add
enter
jmp
insb
add
add
enter
clc
and
add
push
inc
clc
jmp
clc
hlt
and
es
dec
and
add
or
and
xchg
data16
mov
iret
ficoms
jns
add
movsl
clc
negl
ficompl
daa
clc
inc
add
insb
dec
adc
add
add
add
aad
add
mov
pop
pop
cmp
clc
pop
test
mov
push
clc
addr16
push
push
stos
insb
bound
add
jae
add
add
leave
out
mov
xchg
cmp
add
add
fisubrs
cmp
add
lods
out
hlt
jae
add
add
lods
out
sar
clc
hlt
inc
add
push
clc
stos
add
mov
clc
cmp
clc
mov
insl
inc
add
mov
lea
jo
add
push
pop
jae
add
sub
inc
clc
mov
sar
cld
sbb
cs
js
add
and
add
and
add
dec
out
cltd
iret
sbb
xor
add
add
xchg
sub
add
add
icebp
mov
add
mov
mov
dec
sar
fnstcw
gs
aam
clc
jbe
int
add
add
add
sbb
je
sub
clc
ret
xlat
call
push
and
in
dec
lret
aaa
sti
ret
clc
stc
mulb
add
clc
dec
xor
add
mov
clc
cmp
fistl
mov
add
sub
add
clc
mov
daa
clc
fstpl
fmulp
and
add
clc
enter
clc
fnstcw
push
dec
mov
cmp
ja
adc
clc
pop
fildll
ss
fwait
dec
mov
pop
inc
clc
mov
pop
je
add
adc
clc
mov
cmpsl
clc
imul
add
clc
mov
jecxz
aaa
inc
clc
in
in
sarb
jo
add
add
jmp
xchg
ljmp
inc
clc
je
xor
popf
sar
fwait
cmp
mov
add
and
add
mov
add
sub
clc
frstor
add
add
add
sbb
clc
push
imul
add
jle
arpl
add
aaa
mov
clc
jns
int3
mov
clc
out
jmp
pop
inc
add
mov
xor
mov
or
clc
icebp
roll
add
add
adc
add
jns
ret
clc
pop
aas
test
add
jecxz
outsb
dec
add
add
push
popf
xor
add
clc
jns
shlb
sbb
pop
pop
or
cmp
pop
clc
cmc
inc
clc
dec
repz
fnstenv
add
add
inc
clc
mov
lock
pop
cmpsb
clc
scas
xchg
jg
adc
add
cmc
faddl
push
add
sbb
pusha
add
fnstcw
mov
dec
mov
clc
or
int3
lcall
add
gs
mov
clc
and
add
clc
cmp
or
fcoms
clc
fbld
dec
lahf
dec
inc
clc
aad
mov
clc
jno
add
clc
pop
fldenv
gs
loope
xabort
add
add
xchg
push
dec
rcrl
and
icebp
adc
clc
xchg
imul
mov
add
clc
or
clc
iret
nop
or
ljmp
push
mov
add
and
add
clc
xor
add
jne
jmp
add
add
cmp
and
add
clc
pop
in
jns
xor
imul
bnd
data16
pop
mov
insb
pop
pop
imul
mov
clc
mov
push
add
mov
adc
add
add
mov
inc
clc
mov
ja
je
clc
inc
clc
jne
push
or
add
and
add
add
sub
add
add
pop
sbb
movsl
clc
daa
clc
push
loop
repz
mov
movsl
clc
inc
clc
aaa
out
inc
clc
cmp
clc
push
add
push
sbb
arpl
add
add
pop
fs
pop
sysenter
stos
sar
clc
bound
add
mov
clc
movsb
clc
outsl
mov
add
lahf
lahf
or
clc
xchg
ja
xchg
sbb
add
push
test
mov
add
lea
clc
sub
gs
add
add
xchg
fucomi
lods
push
add
xbegin
clc
pop
clc
xchg
dec
pusha
add
cmp
dec
ja
test
mov
aad
iret
je
mov
clc
mov
inc
add
mov
jno
add
xor
mov
clc
filds
add
add
jge
test
imul
cmp
fs
cmp
arpl
add
add
lret
add
cmp
add
jp
mov
add
pop
clc
adc
add
fdivr
jno
add
sar
adc
add
xchg
sbb
add
cmp
clc
mov
jp
xchg
loope
sbb
and
add
add
dec
clc
mov
clc
xor
add
sub
mov
popf
jb
add
add
mov
aas
jns
push
scas
int
idivb
cmp
dec
mov
sbb
clc
jge
outsl
jo
add
add
add
or
add
push
add
sub
inc
clc
cltd
jae
add
mov
cmp
setne
adc
add
jns
push
lock
pop
imul
and
add
push
clc
data16
mov
enter
outsb
ljmp
jle
jb
add
add
or
add
mov
inc
clc
jl
add
fsub
clc
mov
clc
iret
lea
repz
add
mov
clc
pop
lea
clc
dec
std
nop
sbb
mov
clc
cmp
loope
and
add
cld
clc
loope
jecxz
ret
clc
sub
and
add
or
lods
add
add
clc
stos
xchg
mov
loopne
jnp
add
sub
clc
nop
negb
dec
popf
outsb
lods
test
cmp
cltd
xchg
xor
popa
add
iret
sbb
cmp
out
pop
adc
add
std
js
shlb
clc
out
adc
clc
adc
add
inc
clc
xlat
sar
mov
clc
adc
mov
xor
add
mov
sarb
clc
jns
das
sub
clc
sti
sub
jb
add
clc
lcall
in
cmp
add
add
ja
clc
xor
clc
mov
data16
and
add
push
push
movsb
clc
lods
sbb
clc
mov
add
add
clc
jno
add
add
test
or
add
push
clc
clc
movsb
clc
inc
clc
in
mov
repz
clc
fmuls
xlat
jle
jno
add
or
decl
mov
repz
xor
add
and
icebp
xchg
inc
clc
mov
add
cmp
cmc
imul
clc
or
mov
clc
lock
sbb
clc
adc
add
clc
jo
add
cmp
xor
add
out
stos
push
ja
mov
mov
inc
add
xchg
mov
jmp
jle
arpl
add
clc
hlt
lods
mov
mov
add
and
neg
in
fdivr
in
js
add
aam
clc
cmc
push
adc
clc
test
test
jmp
lcall
add
sbb
mov
je
cld
insb
pop
fldenv
clc
mov
clc
aam
push
add
out
pop
clc
outsb
sbb
clc
clc
jecxz
adc
neg
adc
add
test
js
push
add
inc
add
sub
clc
outsl
idiv
adc
add
add
and
add
clc
add
push
xchg
loope
cld
mov
pop
clc
sub
cmpsl
clc
jb
add
lcall
add
cltd
xchg
cmp
jo
add
in
pop
ja
int3
sbb
sub
jl
add
push
add
je
and
add
aam
clc
fbstp
push
fsubr
push
add
arpl
add
inc
clc
mov
sbb
mov
add
insb
int3
adc
add
loopne
push
mov
jmp
and
add
icebp
cmp
es
lcall
add
cmp
add
dec
mov
test
clc
fwait
divl
mov
in
insl
mov
ljmp
hlt
mov
pop
loop
mov
xchg
clc
pushf
mov
inc
add
mov
add
cwtl
pop
lret
mov
pop
cmp
popa
add
sbb
sbb
sarl
sbb
or
clc
and
add
pop
imulb
mov
popf
adc
add
clc
push
mov
popa
add
test
mov
out
push
lahf
mov
test
adc
add
leave
imul
add
adc
test
inc
clc
fistps
push
add
lea
jbe
ja
lods
clc
xor
sub
mov
frstor
dec
or
pop
clc
sahf
and
clc
ss
lock
jae
add
test
sub
cwtl
inc
add
dec
rolb
fbld
repz
add
out
push
addr16
cmp
clc
mov
add
sub
insb
dec
dec
cmp
adc
add
add
call
in
adc
add
clc
mov
add
xchg
out
pop
clc
add
adc
add
int3
lods
push
add
scas
scas
das
add
add
clc
add
loop
mov
cmp
clc
mov
add
js
adc
add
xor
add
push
mov
dec
out
loope
lret
inc
clc
fstl
xor
add
push
ret
clc
icebp
sub
fs
push
enter
xor
add
sub
int3
sbb
pop
testl
add
xchg
lcall
popa
add
cmp
xchg
out
sar
clc
outsb
scas
mov
sub
xor
add
call
pusha
add
or
in
rcl
jmp
add
dec
sbb
clc
pop
ja,pn
js
adc
add
out
enter
sbb
rcl
lods
jmp
stos
jbe
jo
add
add
add
add
clc
pop
stos
or
pusha
add
ljmp
stos
enter
mov
inc
clc
lock
add
push
add
arpl
add
or
clc
xchg
cmpsb
clc
cmp
mov
add
loopne
dec
fldenv
push
pop
cmp
mov
clc
cmp
add
clc
cmp
inc
add
sbb
das
js
popf
or
sub
ret
inc
add
sti
lret
loop
std
fwait
sahf
mov
sub
mov
cmp
test
mov
psubsb
pop
mov
add
movsl
clc
movsl
clc
sar
hlt
icebp
and
add
clc
dec
mov
mov
pop
imul
add
add
add
aam
push
jmp
cwtl
mov
pop
clc
xchg
or
ror
or
add
outsl
popa
add
ss
enter
add
add
cmp
imul
clc
adc
add
mov
cmp
outsl
adc
add
clc
mov
add
loop
fisubl
cmp
push
add
arpl
add
add
push
adc
add
pusha
add
sbb
clc
test
clc
fadd
clc
scas
stos
xor
add
outsb
jmp
clc
mov
push
ljmp
enter
pop
push
xchg
adc
add
clc
out
and
add
add
jns
fs
and
add
cmp
outsl
gs
popa
add
or
xchg
repz
add
sar
add
icebp
shrl
mov
add
inc
clc
cmp
clc
data16
jmp
dec
scas
add
add
mov
jl
stos
xchg
or
scas
sbb
push
inc
clc
mov
cmovle
ret
mov
push
test
aaa
fimuls
add
clc
or
inc
clc
inc
add
int
clc
sbb
jg
xchg
dec
jno
add
add
mov
movsl
clc
or
sbb
repz
in
cmp
clc
popa
add
jne
push
cmp
test
jle
clc
push
add
xbegin
lea
inc
clc
add
inc
clc
cltd
ljmp
mov
add
jns
mov
pop
mov
imul
clc
ret
dec
mov
adc
add
clc
sub
clc
in
sub
clc
leave
jg,pn
clc
push
loop
lret
enter
add
shlb
in
jno
add
add
in
add
add
cli
mov
mov
xchg
imul
outsb
xor
clc
and
add
clc
mov
clc
repnz
add
add
bound
add
test
es
sub
add
add
or
imul
ljmp
push
aam
loopne
in
out
insb
sbb
mov
insb
xchg
dec
fnstcw
xchg
psllw
sub
clc
sar
adc
add
add
clc
stc
fwait
lock
rclb
lcall
mov
clc
jne
loopne
push
in
mov
test
addr16
and
add
sbb
clc
jmp
popa
add
in
xchg
fidivs
add
add
jb
add
mov
out
movsl
clc
ret
add
movsl
clc
and
and
add
add
add
add
add
adc
data16
pop
mov
cmp
jne
mov
or
rclb
mov
rcrl
inc
add
add
add
scas
mov
add
bound
add
clc
xlat
push
add
or
mov
cwtl
cltd
inc
add
add
add
inc
clc
fs
icebp
add
cmp
clc
mov
add
out
scas
leave
xor
add
xchg
jp
shr
pushf
es
dec
xbegin
outsb
lret
clc
mov
xchg
inc
clc
jecxz
mov
add
add
cmc
add
add
sub
clc
dec
mov
clc
mov
clc
gs
xchg
mov
cmp
add
pop
hlt
add
add
add
clc
fstl
mov
gs
sarl
add
adc
sti
jl
mov
add
inc
clc
adc
add
add
icebp
pop
clc
sub
mov
lock
add
lret
clc
test
shrb
add
dec
mov
cmp
pop
jmp
add
ficoml
add
je
test
add
sbb
popa
add
sub
add
dec
jecxz
mov
outsb
rol
clc
dec
fmull
adc
add
push
lcall
clc
lods
hlt
fsubrl
cltd
sarl
clc
jmp
add
xchg
mov
pop
iret
xlat
fbld
into
repnz
sub
jge
jle
jle
jge
xchg
fs
in
sbb
pop
hlt
or
test
add
or
xchg
jl
clc
fxch
out
enter
add
insb
clc
sub
add
pop
sbb
add
push
cmp
clc
mov
add
ret
clc
movsb
clc
mov
add
clc
jns
add
add
add
pop
fldl
add
xbegin
push
add
push
adc
add
dec
or
jne
call
leave
out
into
inc
add
adc
add
cmp
cmp
icebp
lcall
add
fistpl
lods
scas
mov
in
negb
inc
clc
jne
clc
mov
add
fcmovne
xor
add
js
movsb
clc
add
scas
dec
mov
lods
adc
add
pop
clc
in
cld
jno
add
pusha
add
ss
cmp
add
cmp
ficoml
or
add
add
add
mov
fsub
clc
cwtl
scas
repz
aad
mov
clc
pop
clc
daa
clc
je
add
pop
cld
mov
sar
xor
add
cmp
stc
out
in
ja
daa
clc
xchg
push
sub
pop
jl
add
cld
imul
lods
outsb
pop
fcomi
xor
add
jo
add
fists
add
clc
jne
xchg
fadds
clc
call
push
add
cmp
add
add
movsb
clc
adc
add
add
or
jb
add
pop
jg
clc
test
push
clc
cwtl
movsl
clc
mov
icebp
pop
clc
adc
add
add
xchg
sahf
stos
dec
push
lret
jl
and
sbb
push
mov
xchg
or
testl
stos
ss
cmpsl
clc
int3
mov
inc
add
dec
sahf
adc
add
ja
xor
add
clc
xchg
aad
repz
add
data16
or
and
add
add
inc
add
repnz
add
frstor
clc
fsts
push
push
add
sbb
add
adc
add
add
test
ja
fcmovnu
adc
add
pavgb
push
clc
or
mov
add
fldenv
dec
push
jp
xor
sub
pop
push
ficomps
and
add
add
push
ljmp
clc
jno
add
clc
sbb
cmp
clc
jecxz
cmp
xchg
std
outsb
out
mov
add
icebp
mov
adc
push
add
cmc
shl
es
push
sbb
clc
cmc
pop
xor
add
dec
xchg
push
add
imul
loopne
jns
cltd
aaa
push
add
mov
push
add
data16
push
clc
fs
insl
adc
sar
clc
xbegin
add
fmuls
loop
add
add
add
mov
adc
xor
add
add
clc
sub
clc
mov
rcrl
mov
adc
add
clc
sub
clc
jo
add
clc
dec
loope
xchg
into
xchg
push
int
mov
xchg
add
xor
add
popf
xor
add
es
pop
out
mov
add
adc
add
sahf
fidivrl
mov
push
hlt
lea
add
or
clc
and
add
cmpsb
clc
mov
push
stc
xchg
mov
clc
ret
clc
push
add
js
orps
mov
add
push
add
dec
mov
clc
fldenv
add
fistl
rol
clc
xchg
sub
pushf
icebp
fstpt
out
pop
pop
imul
or
xor
repnz
add
push
add
je
lcall
add
mov
clc
jno
add
jle
insb
scas
mov
add
jmp
clc
xchg
inc
clc
pushf
loope
stc
inc
add
pop
push
sbb
xchg
mov
sbb
push
add
jno
add
scas
nop
outsb
popf
add
add
add
push
add
aas
inc
clc
inc
clc
out
ja
test
mov
clc
cltd
fsub
clc
sti
js
sub
clc
pushf
jne
add
inc
add
fisttpl
pop
clc
pop
cmpsb
clc
xchg
inc
add
out
or
clc
xor
add
add
push
clc
sahf
or
pop
cmp
test
add
lret
push
leave
or
cmp
call
clc
cmp
add
bound
add
pop
clc
adc
add
push
mov
add
ja
dec
movsb
clc
xor
add
add
adc
add
or
out
loope
pop
stos
fcmovne
inc
clc
mov
clc
lods
dec
add
jmp
test
shr
or
fstl
add
push
add
mov
scas
inc
clc
mov
xchg
pop
repnz
cmpsb
clc
pushf
lock
clc
int3
pop
dec
icebp
clc
mov
add
add
add
clc
push
cltd
mov
cmp
add
add
jecxz
ss
bound
add
das
jmp
divl
add
push
mov
clc
loope
cmpsb
clc
iret
fstl
jbe
cmp
aam
repnz
test
add
push
clc
bound
add
add
xor
add
call
add
pushl
jbe
clc
outsb
jmp
loope
cli
stos
inc
clc
aas
xor
add
in
xor
add
dec
fwait
in
hlt
cmp
sar
clc
in
imul
xor
add
jge
pushl
add
out
arpl
add
mov
clc
dec
push
add
add
add
gs
aad
pushf
dec
fcompl
call
mov
fwait
jle
add
daa
clc
cmc
push
clc
clc
mov
int3
movsb
clc
call
xor
add
and
add
sub
aad
pop
sti
arpl
add
push
clc
lret
add
mov
pop
clc
xchg
cmpsb
clc
mov
and
xor
add
clc
sbb
imul
mov
clc
ss
fisttps
add
fnstcw
clc
pop
movsb
clc
shrl
mov
incl
add
clc
add
add
cmp
push
xchg
inc
add
pop
jl
add
and
add
popf
sahf
mov
pop
mov
push
xbegin
add
pop
loope
fildll
cltd
xchg
inc
add
jns
clc
pushf
and
add
shlb
and
add
clc
fwait
xor
add
clc
sbb
clc
fstpt
ds
mov
mov
sbb
and
add
fisttps
jecxz
mov
jge
xlat
xlat
mov
add
mov
cmp
clc
bound
add
int
add
dec
roll
add
dec
pop
jae
add
add
inc
clc
test
push
icebp
ja,pt
clc
iret
jno
add
add
add
clc
sub
scas
mov
add
fs
cmp
std
adc
add
cmp
aaa
aas
in
jmp
sub
mov
clc
fisubs
clc
push
cmc
pop
insb
lcall
mov
clc
mov
push
add
jp
iret
sbb
add
jb
add
mov
or
jg
clc
add
lods
sbb
clc
lahf
sbb
add
add
add
add
ja
push
add
loope
cs
mov
add
xor
add
or
mov
inc
add
mov
clc
pop
and
ljmp
pop
adc
stos
out
mov
mov
cmp
add
add
out
push
lret
adc
cmpsb
clc
push
add
mov
mov
and
add
clc
add
clc
int
xbegin
clc
mov
stos
nop
xor
add
push
dec
scas
or
int
clc
cwtl
movsb
clc
and
add
jb
add
cmp
ret
clc
inc
add
xabort
data16
fwait
in
jbe
cli
cmp
add
add
test
add
lea
sub
clc
mov
add
xchg
cmp
clc
adc
add
mov
test
sub
jg
cmp
out
mov
xor
add
add
jb
add
cmp
xor
add
add
clc
push
je
xlat
mov
adc
jecxz
mov
sub
add
mov
adc
add
jo
add
or
add
shrl
outsb
sbb
add
pusha
add
data16
int
in
pop
sub
clc
enter
add
add
popa
add
call
clc
add
add
xchg
dec
js
mov
pop
insl
mov
or
and
lcall
add
arpl
add
dec
lret
loop
push
clc
test
push
sbb
std
inc
clc
insl
push
add
cmp
add
fwait
mov
push
add
ret
es
int3
push
jns
push
xlat
test
or
clc
stos
clc
fstpt
incb
clc
and
pop
push
mov
add
loopne
xlat
int3
in
repz
je
in
inc
clc
cmpsl
clc
popa
add
inc
clc
xor
add
sar
add
movsb
clc
inc
add
cmp
int
clc
mov
sub
mov
clc
adc
add
dec
xchg
jg
adc
add
iret
movsl
clc
sbb
mov
inc
add
jae
add
test
and
add
lock
add
clc
pop
jmp
ljmp
clc
or
clc
lcall
sti
xor
add
int
mov
xor
add
clc
sbb
add
clc
rclb
add
loope
xrelease
clc
out
outsl
cld
ret
pop
mov
addr16
out
mov
pop
clc
cmpsb
clc
sub
js
add
lahf
add
mov
adc
add
pop
pop
inc
add
push
jnp
arpl
add
lock
add
add
pop
cmp
jp
daa
clc
mov
sar
mov
movsl
clc
and
add
clc
push
jb
add
aaa
xchg
repnz
rcrb
add
mov
pushl
add
jns
pop
cmp
bound
add
clc
pop
scas
cmp
daa
clc
dec
insl
sar
cmpsb
clc
fwait
jle
push
clc
pop
jbe
jl
jno
add
mov
sar
cmp
clc
push
add
daa
clc
shll
add
popa
add
aam
clc
stos
push
enter
xor
iret
addr16
mov
dec
cmp
clc
cmp
clc
imul
and
add
and
add
sub
das
xor
add
clc
mov
cli
cmpsb
clc
test
in
data16
in
out
mov
cs
aam
scas
cli
push
inc
clc
push
fwait
addr16
jg
pop
cli
xchg
dec
cmp
add
inc
clc
and
clc
xchg
je
test
and
xor
add
add
add
pop
mov
and
movsb
clc
cmc
sbb
add
lahf
adc
popf
in
insl
out
mov
stos
nop
popa
add
ret
clc
das
mov
fstpt
ret
clc
gs
sbb
std
sub
add
add
add
jge
ret
in
and
add
loope
adc
add
clc
lret
cld
fsubs
xor
xchg
and
add
test
xchg
pop
push
add
inc
add
mov
add
mov
clc
jb
add
dec
addr16
jge
push
es
and
add
add
add
mov
sbb
and
popa
add
sti
daa
clc
inc
clc
test
xchg
and
add
xor
popa
add
mov
dec
loop
pop
mov
add
add
lock
movsb
clc
fmuls
sub
xchg
data16
adc
add
fsubrl
dec
inc
add
call
clc
mov
ds
push
cmc
ficompl
add
and
or
pop
mov
or
cmp
cmp
clc
push
and
add
add
inc
add
inc
clc
scas
push
cmp
or
dec
lods
hlt
push
test
lret
add
popf
bound
add
mov
pop
repnz
pop
jg
clc
mov
mov
inc
clc
dec
mov
cmc
jnp
out
ljmp
clc
xchg
or
jmp
js
add
mov
jbe
cmp
xor
add
xor
add
mov
sbb
loop
xchg
imul
sti
bound
add
add
push
add
or
clc
fmuls
add
add
clc
mov
sbb
sbb
xchg
je
add
sub
das
repz
clc
cld
cmp
clc
cmp
clc
jb
add
pop
movsb
clc
fstl
xchg
lods
jns
xchg
jmp
clc
test
xor
add
aam
pop
xor
add
insb
push
cmp
sub
dec
lcall
clc
in
cltd
or
cld
outsb
xchg
stos
daa
clc
ret
clc
leave
frstor
add
mov
add
add
xchg
jp
xbegin
cld
mov
ds
add
jb
add
add
jp
pushf
add
add
add
or
add
out
sbb
clc
mov
addr16
cmp
clc
scas
jg
fistpll
adc
flds
dec
fs
cmp
clc
aas
out
inc
clc
cmp
clc
jg
gs
xlat
mov
fisttpl
cmp
clc
dec
mulb
add
add
rol
clc
lea
add
sub
cmp
xor
aaa
push
mov
popa
add
xchg
jge
add
ja
iret
dec
ja
cmp
clc
inc
clc
cld
fsubrs
scas
adc
add
mov
nop
stos
sahf
sahf
sahf
sub
mov
sub
clc
enter
clc
fstpl
ja
add
in
mov
pop
clc
or
add
mov
xor
add
popf
mov
jnp
in
ret
clc
std
in
test
clc
cmp
pop
add
add
clc
fisttpll
mov
es
sti
mov
fwait
xchg
push
out
xchg
pop
mov
jmp
aaa
adc
clc
xchg
inc
add
fimull
clc
jb
add
notl
clc
cmp
sbb
add
add
clc
je
ja
add
xchg
dec
loope
stos
out
jnp
add
mov
add
icebp
xor
add
sbb
dec
int3
push
clc
ja
inc
add
xor
pop
insl
ss
xor
clc
repz
add
in
lock
add
sbb
mov
int3
inc
add
mov
clc
xor
add
add
imul
mov
clc
mov
jecxz
in
mov
test
sub
sahf
mov
sahf
or
mov
mov
fnstsw
outsb
pop
or
xabort
inc
clc
in
sbb
add
fucomp
iret
ficompl
dec
sub
or
cmp
out
pop
arpl
add
add
add
sbb
in
es
in
js
loop
inc
add
out
lods
sub
clc
sbb
jnp
in
shrl
sbb
gs
mov
aaa
mov
movsb
clc
xbegin
ljmp
clc
push
add
cltd
pushf
movsb
clc
mov
add
in
sub
add
arpl
add
ficomps
sbb
imul
jo
add
xchg
popf
sub
jmp
leave
xchg
xor
add
push
lret
clc
push
add
xchg
push
add
stos
cmpsl
clc
test
bound
add
or
clc
outsb
jle
das
hlt
pop
push
jns
push
pop
cmp
add
xlat
in
push
add
cmp
clc
adc
add
fists
add
cli
mov
mov
add
pop
mov
add
xchg
inc
clc
sahf
xor
add
jecxz
pop
scas
mov
cmp
sbb
inc
add
dec
sbb
add
int3
jge
add
cmpsb
clc
jmp
in
sar
clc
cmp
lods
stos
inc
add
fcom
adc
add
into
clc
cmp
cli
cmp
add
add
out
test
adc
add
mov
push
movsb
clc
cmc
mov
fwait
sar
clc
add
add
clc
ficomps
leave
out
adc
add
scas
push
add
call
xor
add
loop
js
clc
dec
mov
mov
ret
lea
xor
add
cmp
and
add
clc
jmp
pop
mov
adc
inc
add
dec
int3
test
bnd
add
std
sub
imul
add
add
clc
fmuls
jno
add
stos
mov
clc
inc
add
insb
adc
test
push
inc
clc
ja
push
jnp
adc
stos
cmp
inc
clc
dec
add
xor
add
ja
add
lret
incb
push
add
sti
pop
cwtl
adc
add
clc
push
xchg
jae
add
clc
pop
xchg
or
adc
clc
lods
repnz
clc
leave
es
mov
cmp
mov
pop
clc
cmp
add
daa
clc
movsb
clc
sbb
jbe
xor
add
clc
sbb
in
push
out
mov
fadds
lods
inc
clc
xor
adc
add
mov
leave
xchg
fisubs
add
add
ljmp
fnstenv
add
mov
mov
clc
sbb
dec
aaa
loopne
inc
clc
gs
mov
int3
mov
je
sub
out
das
inc
add
xchg
aam
jnp
push
call
inc
clc
cwtl
cmp
dec
incb
add
mov
add
mov
add
inc
add
xchg
and
add
icebp
xabort
clc
cmp
fcmovb
clc
xbegin
mov
add
imul
vmovups
add
clc
sub
add
nop
loope
sahf
sbb
add
pusha
add
inc
clc
dec
mov
cmpsl
clc
popa
add
ja
and
add
hlt
pop
cld
mov
mov
add
xor
add
pusha
add
or
jle
ret
rcll
add
cmp
or
pushf
rol
clc
fnstenv
add
add
cmp
pop
cmc
dec
sbb
xchg
dec
call
clc
out
mov
clc
in
sbb
clc
insb
mov
xchg
in
xchg
lahf
pusha
add
aad
mov
test
add
xor
add
clc
push
add
xor
add
outsl
xchg
jae
add
int3
into
push
clc
cmp
clc
xchg
cmpsl
clc
scas
add
add
sbb
imul
dec
jge
clc
movsb
clc
add
add
add
mov
clc
jecxz
xor
add
add
add
add
iret
and
add
pop
and
cmp
xchg
lret
pop
sbb
xchg
in
imul
and
pop
jae
add
pop
pop
out
repz
add
sbb
add
and
mov
jp
mov
add
in
sbb
cmp
clc
scas
or
cmp
add
notl
add
or
clc
cmp
jno
add
adc
adc
add
ds
sub
clc
incl
xor
add
fdivr
xlat
pop
jp
add
push
jl
lret
mov
jno
add
clc
in
in
lcall
clc
imul
add
xchg
ljmp
mov
add
add
lcall
add
lcall
hlt
pop
cmpsl
clc
or
out
pop
and
loope
cmp
dec
jmp
fbstp
add
mov
add
loopne
lods
xchg
cmc
cmp
clc
mov
sub
add
rol
clc
add
add
je
pop
clc
or
sub
pop
clc
sarl
cmp
add
ja
clc
jecxz
addr16
cmp
clc
pusha
add
adc
add
add
pop
clc
cvtdq2ps
add
in
sar
clc
or
push
clc
lods
sar
imulb
cld
leave
jnp
push
imul
cmp
pop
mov
fdivs
add
push
add
popa
add
sarl
enter
add
or
sbb
sbb
cmp
add
add
add
add
test
jns
cltd
mov
adc
add
bound
add
fdivrs
sub
push
add
inc
add
pop
dec
shr
mov
clc
and
add
or
clc
aas
jbe
clc
or
add
jo
add
add
add
inc
add
xchg
and
cmp
clc
out
ret
clc
xor
cmp
clc
fwait
sbb
clc
dec
add
add
movsl
clc
dec
imul
pop
xor
add
push
sub
add
adc
add
clc
fs
cmp
inc
clc
add
add
jno
add
clc
rcll
add
sar
sahf
sti
jae
add
jmp
sahf
imul
clc
sub
sti
cmp
add
add
add
add
imul
clc
push
dec
imul
push
loop
idivl
clc
aad
adc
add
xchg
nop
into
mov
add
arpl
add
push
add
dec
xchg
dec
addr16
jbe
imul
dec
fmul
iret
neg
mov
clc
fidivrs
xbegin
ljmp
add
cmp
daa
clc
nop
add
cmp
jb
add
add
clc
ljmp
push
add
icebp
sahf
shr
sbb
out
imul
xor
add
bound
add
popa
add
sti
mov
clc
js
xchg
movsl
clc
jp
clc
arpl
add
jg
jmp
add
xor
insb
addr16
movups
add
bound
add
mov
sbb
mov
clc
inc
clc
stos
jl
in
jne
xor
add
mov
or
js
xchg
pop
fcomps
mov
cmp
out
repnz
fsub
clc
aad
clc
clc
roll
add
add
scas
mov
push
add
inc
add
pop
clc
cmp
add
add
add
pop
push
add
loopne
ret
clc
stos
push
add
movsl
clc
cmp
addr16
mov
mov
add
add
pop
xchg
inc
add
hlt
jmp
xchg
lock
xabort
add
xchg
addr16
ret
clc
pop
clc
pop
leave
mov
in
mov
dec
in
mov
inc
clc
es
dec
jp
clc
repnz
add
insl
aas
gs
or
cmp
clc
jne
add
mov
loop
das
mov
clc
dec
cmp
clc
xchg
pop
mov
adc
add
sahf
xchg
test
aad
clc
je
dec
inc
add
out
cs
mov
push
dec
dec
aas
mov
clc
mov
gs
jle
clc
cmp
add
rcll
addr16
popf
jmp
push
std
int3
pop
shr
or
xchg
inc
add
aaa
xchg
and
dec
add
add
xbegin
ret
stc
push
sar
repz
outsb
sbb
add
push
clc
adc
add
add
lods
mov
add
notb
jle
inc
clc
leave
mov
push
clc
pop
pop
cmp
add
mulb
cmp
add
ja
jbe
fidivl
clc
mov
loop
test
cmp
inc
clc
cld
in
jns
xchg
mov
inc
add
cmp
jp
xor
add
add
jo
add
pop
jne
out
pusha
add
rol
clc
mov
mov
cltd
ss
lret
mov
imul
xchg
mov
lret
repz
jnp
mov
sbb
fs
ret
clc
call
mov
sbb
add
xabort
add
insb
lods
loopne
popf
pop
pop
jl
ds
arpl
add
clc
repnz
data16
imul
cmp
add
ffreep
clc
mov
into
aas
xor
in
ds
and
add
aam
bound
add
or
aad
add
add
dec
inc
add
in
pop
fwait
rorb
in
push
mov
clc
ja
popf
sbb
clc
clc
pop
push
ljmp
add
or
inc
clc
sbb
sbb
mov
sar
movsl
clc
mov
add
jns
mov
int3
inc
add
dec
cmp
popf
jbe
popa
add
repnz
outsl
loop
lea
push
mov
pop
mov
or
add
clc
xchg
xor
add
dec
test
adc
add
repnz
ret
clc
icebp
into
shll
add
scas
dec
push
add
jmp
push
bound
add
clc
cmp
and
add
clc
scas
cmp
clc
adc
add
add
ficomps
pop
loope
rorl
ljmp
add
sub
clc
sar
loop
into
enter
push
add
or
sbb
clc
stos
bound
add
add
repnz
clc
xchg
fbld
cmp
leave
bound
add
xchg
lea
cmp
add
clc
or
inc
clc
repz
je
clc
mov
mov
xor
add
add
mov
push
repnz
mov
clc
icebp
arpl
add
das
sbb
daa
clc
cmp
clc
mov
mov
je
clc
xlat
xbegin
jno
add
add
or
repnz
add
xor
add
mov
sahf
sar
clc
push
clc
xchg
sbb
addr16
pop
aam
mov
arpl
add
add
clc
pop
clc
jp
clc
std
daa
clc
push
jo
add
mov
pusha
add
dec
xor
add
add
add
pop
js
test
pop
mov
mov
clc
in
mov
add
add
add
bound
add
add
mov
add
add
aam
mov
fwait
test
popf
push
ss
sar
mov
xor
outsb
jmp
cmp
clc
lret
xchg
movsb
clc
xor
popa
add
push
lret
lods
pop
aad
adc
add
add
mov
stos
xor
add
frstor
jle
or
lods
sbb
clc
cld
mov
mov
dec
add
xor
add
sub
setae
add
pop
xor
add
clc
pop
xchg
stos
xor
add
cwtl
mov
pusha
add
sub
clc
stos
push
dec
movsb
clc
xchg
vcmpps
xchg
jp
into
imul
push
pop
cmpsb
clc
push
add
inc
clc
lcall
cmp
adc
bound
add
sub
clc
arpl
add
clc
push
add
repz
pop
jl
sbb
clc
lock
cmp
psrlw
jmp
add
jnp
xor
add
rorl
outsb
mov
clc
aas
jbe
clc
stos
sti
and
add
or
jb
add
add
or
mov
shrl
lahf
lret
xor
add
add
clc
or
test
adc
push
clc
jbe
add
add
cmp
clc
kmovw
shll
add
clc
xchg
cltd
out
adc
add
push
add
das
push
sbb
sub
test
push
xor
add
sbb
clc
xchg
push
leave
pop
stos
push
add
mov
ds
sbb
add
add
mov
cld
jo
add
sub
add
imul
lcall
add
insl
jne
cwtl
sti
add
add
or
clc
or
iret
clc
call
add
mov
mov
clc
and
add
push
inc
clc
jp
cmp
xchg
push
add
cmp
pop
test
add
mov
add
pop
dec
ret
xor
and
add
lock
clc
repnz
add
add
lcall
add
or
cmc
mov
stos
cmp
fistps
int3
mov
outsb
xor
add
std
in
daa
clc
cmp
call
mov
cltd
cmp
hlt
sub
jp
clc
push
or
and
add
clc
data16
add
add
add
hlt
push
daa
clc
inc
add
into
mov
cmp
mov
clc
add
add
cltd
imul
iret
lods
enter
aas
mov
clc
adc
add
clc
stc
mov
cmp
jp
bound
add
mov
clc
mov
sarl
add
sub
shll
add
clc
bound
add
clc
xchg
and
add
add
jns
xchg
lock
jae
add
fmuls
pop
add
add
loope
inc
add
pop
nop
gs
mov
lock
xchg
out
mov
cli
call
xchg
xchg
jbe
clc
adc
add
clc
adc
add
ret
and
add
cmp
clc
fldenv
loope
mov
data16
xor
push
add
out
xchg
dec
xchg
pop
insl
and
add
test
insb
and
add
xchg
xchg
fnstenv
push
aas
xor
pop
xchg
bound
add
dec
mov
leave
sub
push
add
pushf
scas
jmp
add
dec
mov
xlat
or
clc
repz
add
add
push
mov
inc
clc
cmp
jl
clc
mov
add
mov
cmp
rcl
xabort
add
jmp
push
outsl
test
cmpsb
clc
insb
cwtl
xbegin
mov
std
xor
add
mov
fwait
pop
clc
xor
add
add
bound
add
add
hlt
sar
sub
inc
clc
mov
mov
dec
icebp
rolb
clc
sbb
pop
fwait
adc
add
add
jns
add
jecxz
xlat
sub
adc
add
clc
mov
mov
inc
add
data16
notb
add
add
add
data16
xabort
pop
xchg
idivl
add
rcrb
test
scas
cltd
out
test
dec
pop
dec
sar
sbb
fsts
add
jecxz
push
add
mov
pop
xchg
cmp
dec
dec
push
add
icebp
iret
test
idivb
cld
ss
mov
and
add
clc
xor
decb
repnz
clc
inc
add
sbb
fisttpl
clc
pop
fsubp
clc
ret
decl
add
mov
clc
pushf
icebp
insb
popa
add
out
test
push
jnp
sahf
fidivl
test
add
add
inc
clc
mov
jle
add
inc
clc
roll
clc
mov
sbb
xor
add
add
aad
mov
dec
sub
add
sahf
sar
clc
adc
add
pop
add
add
stos
jl
lock
insl
out
and
add
popa
add
popf
pusha
add
in
lret
jmp
add
or
out
adc
add
adc
cmc
loopne
arpl
add
clc
dec
test
adc
add
and
add
je
or
clc
sub
loope
into
cmc
or
fstpl
xchg
push
add
into
out
xchg
loop
mov
mov
popa
add
mov
add
clc
sub
pop
mov
pop
out
push
inc
clc
in
pop
dec
and
add
push
add
or
aaa
out
jbe
clc
cmp
add
mov
clc
pop
clc
cmp
add
add
sbb
inc
add
cmp
clc
clc
or
mov
shlb
add
imul
xchg
sub
gs
mov
mov
push
shrl
ret
clc
dec
cmp
xchg
mov
clc
loopne
sub
sbb
mov
adc
mov
mov
and
add
add
add
daa
clc
and
add
clc
call
add
out
or
lea
pop
cmp
xlat
loope
pop
pop
out
adc
add
xchg
jmp
xor
lods
sub
lods
aaa
addr16
push
repnz
add
outsl
pusha
add
sbb
lods
arpl
add
clc
sar
dec
in
loop
icebp
inc
add
gs
push
ss
add
fcomps
mov
jno
add
add
add
add
add
outsb
dec
xor
add
loopne
lods
into
ret
add
out
outsl
mov
pop
xchg
inc
add
and
add
int3
or
xor
push
clc
fnsave
add
clc
clc
add
add
xor
add
add
mov
fstpl
fs
xor
dec
stos
push
loope
out
mov
add
loope
xlat
or
or
fs
fisttpl
clc
push
add
mov
and
cmp
mov
cmp
arpl
add
sub
fs
lods
mov
daa
clc
sub
adc
dec
fs
pop
jae
add
sbb
clc
sbb
add
push
clc
mov
add
es
test
lods
mov
je
push
clc
xchg
fiadds
add
jg
xchg
mov
and
add
add
dec
mov
add
fdivl
add
ljmp
mov
add
add
popf
pop
inc
add
jg
clc
sti
sti
sahf
push
add
inc
add
in
mov
sbb
add
es
daa
clc
mov
clc
sbb
ss
out
out
addr16
stc
lock
add
js
clc
arpl
add
xor
sbb
in
cmp
clc
pop
fstl
add
cmp
add
add
cmp
pop
or
inc
clc
out
sbb
clc
idivl
xchg
lea
and
add
add
push
clc
arpl
add
scas
mov
add
add
pop
stos
clc
stc
fbld
sahf
out
adc
add
push
add
pop
cmpsb
clc
out
mov
jne
add
jnp
mov
or
mov
add
pop
rcrb
shlb
lahf
popf
or
mov
enter
clc
inc
clc
mov
ret
clc
nop
mov
pop
lcall
leave
or
mov
and
add
loop
push
add
jg
testl
clc
inc
add
out
arpl
add
add
mov
clc
jecxz
pop
clc
cwtl
movsl
clc
stos
push
add
fisubrs
add
adc
add
std
daa
clc
mov
lcall
fisubs
xor
add
fmuls
pop
jge
add
push
push
clc
mov
add
add
dec
mov
adc
add
mov
clc
lock
divps
mov
sbb
add
xchg
fldt
ljmp
ret
clc
sbb
clc
dec
sub
add
push
add
add
mov
add
pop
pop
clc
nop
jl
push
add
imul
add
fadds
lock
add
dec
sub
clc
mov
enter
add
lcall
add
repnz
xchg
jle
leave
pop
pop
sbb
clc
cmp
cld
pop
movsb
clc
mov
js
or
jbe
mov
repz
add
shrl
sar
cmp
fs
mov
in
inc
add
pop
int3
sub
clc
stos
jno
add
addr16
decb
xlat
mov
add
jnp
mov
push
add
xor
add
cmp
add
add
and
add
xor
add
nop
push
mov
and
dec
add
add
add
cmp
add
mov
clc
int3
mov
shl
lret
clc
inc
clc
mov
jle
clc
pop
sub
pusha
add
cmp
inc
add
pop
mov
clc
testb
jne
xor
add
add
pop
leave
push
add
test
cltd
test
in
cmp
insb
inc
add
cmp
add
int3
sub
clc
xlat
push
add
push
loope
and
add
mov
stos
and
fcompl
clc
es
jg
bound
add
clc
je
add
cmp
clc
inc
add
push
lahf
cmp
dec
vxorps
aas
push
mov
mov
in
in
cltd
repz
dec
mov
cmp
clc
fs
inc
clc
xbegin
add
fldcw
push
dec
adc
jns
and
add
xchg
mov
mov
imul
insb
adc
add
sub
clc
je
jnp
mov
fwait
xchg
inc
clc
pop
push
lods
pop
fnsave
inc
add
mov
add
mov
add
dec
lret
aad
loope
xbegin
ret
mov
out
mov
clc
jo
add
adc
add
ja
movsb
clc
mov
xor
add
mov
add
or
fisubl
push
add
cmp
aas
jns
push
sub
clc
or
add
push
add
mov
add
fstpt
xchg
jbe
mov
clc
xchg
sbb
add
inc
add
and
add
clc
xchg
sbb
dec
incb
clc
inc
clc
shll
clc
fsubl
mov
sbb
cmp
clc
nop
or
clc
gs
sbb
add
outsl
fchs
clc
mov
add
cs
clc
fldenv
add
je
loop
aad
clc
lret
inc
add
xor
add
or
add
outsl
loopne
call
and
push
mov
add
mov
add
lods
scas
jge
clc
insl
mov
add
and
add
lcall
inc
clc
and
add
clc
dec
mov
test
loope
cs
mov
or
clc
adc
add
add
mov
xor
add
repnz
out
dec
ret
clc
dec
mov
add
lahf
fstps
add
out
mov
clc
rcrb
inc
clc
cmp
add
add
jno
add
inc
add
sbb
cmp
int3
push
hlt
test
loop
aaa
add
add
add
sahf
cltd
pop
or
clc
std
pop
test
mov
lret
pop
idivb
clc
daa
clc
data16
leave
mov
jnp
ret
jmp
leave
stos
or
lcall
ffree
clc
lea
mov
cli
cmp
mov
add
fldl
clc
cltd
xor
add
add
shrl
xlat
call
or
fwait
mov
clc
jae
add
clc
and
add
add
xchg
mov
daa
clc
inc
clc
ds
out
cli
and
add
cmc
cld
stos
rcrl
test
add
sar
test
clc
or
insl
mov
bound
add
sbb
jecxz
sar
hlt
iret
je
clc
push
add
test
dec
test
sbb
cwtl
repnz
jae
add
roll
cwtl
sbb
add
add
add
clc
inc
add
lock
pop
pop
xchg
in
lret
lods
shll
add
cli
add
pop
and
add
add
dec
xor
add
add
mov
clc
cmp
push
cmp
jno
add
add
bound
add
add
pop
cli
add
add
xchg
div
mov
pop
push
xor
add
frstor
push
jecxz
dec
push
in
push
inc
clc
xor
add
aad
fmulp
or
icebp
jle
inc
add
pop
or
pusha
add
push
mov
mov
add
xor
add
clc
jns
xchg
jnp
jp
sub
pop
out
das
dec
mov
clc
mov
ljmp
clc
fsubs
sbb
dec
xchg
xbegin
int
popf
mov
push
clc
xchg
lods
test
movsl
clc
imul
test
add
mov
nop
pop
lcall
es
lea
cs
cmpsl
clc
call
clc
mov
clc
arpl
add
cmp
mov
jg
clc
pop
test
lods
rcll
fisttpl
lret
jg
add
fsubrs
jmp
pop
jge
add
ds
add
add
js
add
in
sub
sbb
clc
dec
mov
mov
mov
mov
clc
pop
stos
ds
lods
loopne
sub
add
mov
enter
or
push
enter
hlt
cmp
xchg
xor
add
add
ftst
clc
addr16
test
rcl
jbe
clc
xchg
insb
and
sbb
push
out
mov
mov
es
adc
add
and
cmp
stc
fmul
xor
add
clc
jnp
cmpsb
clc
sbb
xchg
add
add
clc
loop
mov
add
sub
sbb
add
sub
and
add
loope
jb
add
pop
xor
jbe
insl
sbb
add
push
add
ret
clc
dec
bound
add
and
add
mov
js
mov
add
add
add
xchg
movsl
clc
mov
cltd
jo
add
add
add
enter
add
fnstsw
clc
sub
sti
shr
in
vcomiss
add
repnz
jecxz
mov
xor
jmp
and
add
sub
sub
icebp
das
imul
and
add
adc
into
sbb
call
clc
cmp
add
xor
add
add
add
jp
and
add
jmp
adc
add
pop
or
adc
clc
mull
clc
xchg
push
add
add
add
add
add
jecxz
test
fs
dec
mov
push
push
jmp
pop
fnstcw
add
aaa
enter
lock
clc
es
sar
mov
setne
insb
or
xchg
jae
add
add
mov
and
add
add
inc
clc
and
push
pop
aas
test
pushf
push
pushf
inc
add
mov
clc
adc
add
adc
add
add
add
push
nop
arpl
add
and
mov
add
test
pusha
add
movsb
clc
bound
add
inc
clc
mov
inc
clc
cltd
xchg
adc
add
clc
mov
xchg
jo
add
add
cli
xabort
xchg
fistl
call
imul
insb
xor
add
scas
outsl
dec
mov
sub
xchg
pop
mov
clc
pop
lods
lock
stc
push
clc
dec
lret
daa
clc
inc
add
jecxz
and
add
dec
push
clc
cmpsl
clc
cli
xbegin
int
stos
push
int3
cwtl
aaa
sub
inc
clc
cs
ret
ret
clc
sahf
ret
clc
jno
add
enter
mov
inc
add
imul
add
loop
out
or
call
xor
inc
add
lret
je
clc
mov
mov
into
pushf
loopne
mov
dec
rolb
jmp
add
or
dec
inc
clc
loopne
je
add
out
sar
clc
arpl
add
jbe
out
fimull
idiv
push
cmp
test
clc
xor
add
sbb
iret
mov
test
sbb
xchg
xor
add
in
adc
add
lret
or
dec
fistl
cmp
mov
clc
popf
add
mov
rorl
clc
and
add
push
data16
inc
add
xchg
call
jg
mov
add
pusha
add
sti
das
push
add
mov
adc
add
add
add
mov
clc
push
add
add
ljmp
stos
int3
fwait
dec
dec
pop
iret
or
jp
add
mov
loop
pop
gs
ret
clc
rcr
outsb
dec
dec
pop
clc
icebp
inc
add
and
clc
imul
mov
fdivrl
clc
jb
add
ds
pop
xchg
and
mov
repnz
clc
mov
add
sbb
add
add
clc
mov
mov
inc
clc
bound
add
mov
test
ret
clc
or
cmp
mov
call
lret
add
mov
xor
add
cmp
lock
in
lcall
add
pushf
sub
clc
repz
sub
pop
inc
clc
cmpsb
clc
mov
xchg
xchg
adc
jne
add
pushf
push
pop
outsb
xchg
ja
push
add
int3
stc
dec
push
nop
arpl
add
mov
clc
adc
add
add
clc
pop
jb
add
add
mov
clc
clc
xchg
or
add
fcompl
jecxz
mov
out
nop
out
ds
add
mov
icebp
mov
sar
fwait
clc
dec
pop
add
pushf
sbb
out
jne
es
push
iret
xabort
jp
mov
mov
cmp
dec
shlb
add
add
add
adc
add
inc
add
pop
jmp
lret
push
sbb
jg
fwait
pop
and
rcrl
cmpsb
clc
inc
add
push
add
add
xor
add
push
addr16
jp
add
in
inc
clc
jmp
clc
push
add
jns
cmp
aaa
pop
int3
pop
push
clc
xor
clc
out
aad
add
xchg
data16
xor
add
clc
insb
dec
lcall
clc
or
cmpsb
clc
or
add
rorl
pushf
and
add
add
mov
insl
xchg
push
clc
add
add
dec
xor
add
add
sub
add
clc
lods
mov
mov
mov
add
push
fs
fldt
or
clc
and
add
add
lret
in
fs
cmp
and
add
clc
or
add
clc
loope
add
add
cmp
add
cmpsl
clc
or
xchg
inc
clc
insb
pop
mov
addr16
pop
sar
clc
mov
clc
jne
mov
clc
cmp
clc
out
out
push
add
popa
add
addr16
push
clc
push
add
xbegin
jne
clc
push
add
test
clc
jmp
sti
mov
stc
jl
ret
clc
rol
clc
pop
sbb
push
aaa
rcl
fs
dec
xor
loopne
outsl
and
add
sub
addr16
add
stos
shll
xchg
rolb
add
push
cmp
clc
xchg
fidivrs
mov
jmp
inc
add
sahf
stc
lods
imul
xchg
mov
sub
int
jb
add
add
jo
add
clc
add
add
add
pop
std
mov
xabort
idivl
mov
jnp
pop
rolb
clc
jge
jne
add
xchg
push
sahf
mov
clc
jle
inc
clc
cld
lcall
push
add
sbb
add
push
rcl
add
add
mov
mov
insl
inc
clc
das
jge
insb
jo
add
xchg
jb
add
xbegin
add
out
jb
add
mov
stos
cs
add
popf
sar
movsl
clc
daa
clc
idivb
mov
je
mov
mov
add
aam
jae
add
mov
add
jl
arpl
add
jge
mov
add
lods
mov
add
cmp
sub
clc
xlat
inc
add
pop
clc
call
adc
add
and
add
jl
clc
loope
mov
clc
int3
xchg
xchg
inc
add
ds
mov
clc
cmpsb
clc
inc
clc
xchg
push
cld
scas
roll
add
mov
mov
xchg
enter
sub
jl
jnp
mov
add
lret
xchg
add
jb
add
cmp
sub
pop
pop
xchg
fdivrs
lret
and
add
clc
and
popf
aaa
or
add
das
cmp
clc
iret
ja
fstpt
mov
add
push
bound
add
cmp
cmp
loop
cmp
xor
add
and
add
fisubs
xabort
xchg
adc
add
fnsave
add
rcll
add
pop
fnstcw
clc
adc
mov
clc
daa
clc
mov
or
clc
xchg
jne
clc
test
add
rol
clc
cmp
sbb
clc
data16
add
clc
xchg
enter
add
mov
ret
add
dec
outsl
clc
mov
jge
jno
add
or
push
add
add
add
inc
add
dec
push
fistps
add
cmp
cmp
loop
jne
repnz
add
clc
dec
insl
aad
jb
add
jle
clc
and
add
sub
add
insl
inc
add
fwait
and
outsl
pop
arpl
add
pushf
mov
loopne
pop
push
mov
rcrb
add
popa
add
fcmovbe
es
pop
xor
add
clc
sti
pop
adc
cs
test
jo
add
clc
add
or
xor
clc
test
xor
add
pop
push
add
pop
fidivrl
clc
imul
scas
ja
cmp
clc
lods
jns
clc
sub
add
lods
addr16
fdiv
mov
rorb
pop
clc
mov
iret
and
add
out
mov
ljmp
clc
outsb
cs
mov
dec
mov
adc
add
insb
imul
add
mov
dec
lret
clc
lea
add
sub
clc
lret
add
sub
clc
pop
jmp
lods
push
add
push
mov
adc
aad
add
xbegin
add
cmp
rorl
xor
add
insb
loop
inc
add
and
add
add
pop
mov
adc
add
xor
add
clc
fsubl
add
mov
add
clc
push
jmp
clc
cmp
clc
enter
mov
add
clc
dec
cmpsb
clc
lret
rorb
jl
mov
pusha
add
sub
mov
and
add
clc
repz
add
loope
outsb
dec
shr
dec
adc
add
adc
add
add
mov
pop
notb
sar
clc
mov
insb
movsl
clc
lcall
add
pop
add
add
test
pop
add
add
xchg
in
int3
push
clc
sub
adc
add
add
xchg
and
add
and
add
test
xor
add
add
clc
mov
push
add
jnp
movsl
clc
push
clc
lahf
aaa
inc
add
lock
icebp
ret
clc
ret
jae
add
dec
jo
add
in
data16
stc
cmp
lock
das
sbb
clc
nop
lret
addr16
rol
clc
jg,pt
clc
lods
mov
cmc
out
mov
cltd
bound
add
clc
outsl
cwtl
xchg
mov
mov
pop
xchg
mov
or
add
mov
into
push
mov
dec
inc
clc
iret
or
ja
add
xchg
scas
push
add
std
sub
cmp
add
xchg
lahf
std
enter
add
cmp
clc
popf
and
add
sbb
clc
mov
pushf
dec
dec
mov
clc
push
clc
dec
xbegin
int3
mov
iret
push
add
mov
pop
int
add
inc
clc
xor
add
cs
xchg
arpl
add
adc
mov
add
add
add
outsb
iret
mov
lahf
ret
clc
or
or
cmp
jb
add
clc
js
clc
push
xchg
pop
xabort
pusha
add
inc
clc
cwtl
jecxz
cmc
pop
cltd
scas
lcall
pop
decl
jmp
push
pop
stc
xchg
mov
outsl
dec
mov
mov
add
mov
mov
push
clc
pusha
add
jb
add
or
sar
shll
repz
clc
inc
clc
sbb
jns
or
sub
cmp
imull
aad
data16
int3
fistl
add
aaa
imul
clc
cmp
ja
cltd
jmp
add
mov
cmp
push
loope
inc
add
add
aas
sti
push
popa
add
insl
or
dec
sti
xchg
sub
add
mov
sub
imul
push
dec
cmp
test
clc
push
jle
ljmp
xchg
sar
jge
sbb
outsb
cmp
pop
add
bsr
pop
movsl
clc
sar
out
push
ss
add
sub
push
or
add
test
sub
mov
stos
in
cmp
xlat
mov
out
movsl
clc
add
add
clc
fwait
sbb
cmc
dec
jle
add
mov
clc
mov
jp
mov
add
jp
jae
add
add
push
stos
jne
clc
in
nop
lods
adc
add
clc
std
xor
mov
clc
xor
add
clc
rcll
mov
imul
add
scas
insl
fiadds
add
mov
push
add
sub
leave
jno
add
jne
add
jecxz
je
add
daa
clc
and
mov
imul
clc
xor
add
clc
fdivl
add
loop
jp
xabort
pop
clc
or
mov
clc
test
clc
dec
fdivrl
inc
add
push
mov
sbb
sar
jb
add
rorl
add
arpl
add
clc
and
pushf
enter
mov
clc
push
aam
add
lret
test
imul
sub
clc
filds
test
cmovge
adc
push
mov
ja
xchg
pusha
add
insl
and
add
clc
hlt
sub
cwtl
hlt
shlb
clc
test
add
mov
fisttpll
nop
popf
mov
sub
and
add
add
sub
outsl
cmp
pop
jnp
popf
data16
pop
xchg
stc
cmp
dec
jne
clc
ss
add
nop
push
test
add
xbegin
in
adc
add
outsb
aaa
mov
es
cmp
in
cmp
or
clc
bnd
clc
sbb
add
gs
loop
fisttpl
js
add
sub
sbb
cmc
test
loopne
push
jbe
clc
cmp
lods
mov
add
mov
clc
sarb
pop
or
adc
add
clc
lcall
jae
add
add
add
clc
aaa
in
xor
cmp
mov
add
aas
cmpsl
clc
push
add
or
lods
loope
add
add
clc
bound
add
daa
clc
sub
clc
ret
mov
int3
jns
cltd
or
pop
jae
add
add
mov
or
insl
jmp
inc
clc
cmpsl
clc
cltd
sub
add
xchg
shll
add
sbb
repz
add
mov
cwtl
pop
push
sar
clc
lret
sbb
xor
add
mov
xor
add
pop
xor
add
pop
clc
or
mov
xor
add
das
pusha
add
push
cmpsl
clc
jae
add
add
xor
add
daa
clc
or
add
fiaddl
add
mov
cs
lret
sqrtps
add
clc
loope
ret
clc
mov
vcvtps2pd
lods
mov
jae
add
clc
xor
add
gs
adc
add
and
add
add
out
loope
hlt
clc
xchg
popa
add
jmp
cs
add
sbb
icebp
pop
xchg
jb
add
cmp
inc
add
add
pop
push
mov
je
push
add
pushf
mov
mov
clc
adc
add
in
jae
add
xchg
push
xchg
sar
clc
or
clc
and
add
pusha
add
dec
cmp
clc
es
pop
mov
xchg
and
add
imul
clc
sbb
add
popf
mov
loop
inc
clc
repz
jae
add
int3
xor
add
push
xchg
adc
add
inc
add
push
test
lret
add
xchg
sbb
clc
inc
add
push
mov
clc
mov
jns
xor
clc
fmuls
pop
lock
jp
add
ss
imul
add
sbb
imul
dec
clc
mov
add
add
clc
insl
xchg
mov
inc
add
test
mov
add
das
shrl
pop
clc
add
add
clc
xchg
mov
inc
clc
addr16
je
lret
jmp
in
sub
add
add
clc
aad
jae
add
icebp
scas
push
inc
clc
ja
add
add
pusha
add
and
add
mov
clc
sub
pop
lea
add
adc
add
iret
lcall
pop
movsb
clc
lahf
stos
xlat
mov
add
add
push
scas
mov
and
lods
add
cwtl
push
cld
cmp
out
push
lcall
clc
adc
add
mov
clc
mov
ret
clc
xbegin
out
jl
jae
add
push
test
in
cmp
add
pushf
fs
dec
ljmp
lret
je
clc
cmp
inc
clc
add
add
add
xchg
mov
lea
clc
jmp
push
add
xchg
mull
add
xchg
mov
jge
mov
xabort
add
sar
clc
xor
sbb
inc
add
leave
aam
clc
gs
xbegin
popa
add
pushf
jge
add
lods
sbb
xor
add
or
test
add
cmp
add
xor
add
in
xchg
pop
stos
jo
add
dec
and
add
rcrl
and
add
xchg
clc
add
clc
pop
je
add
mov
clc
js
push
nop
push
add
sbb
cmp
popf
jp
mov
jnp
popl
mov
clc
data16
push
add
test
mov
clc
ljmp
add
add
add
add
dec
pushf
jp
insl
lods
repz
int3
ds
adc
clc
stc
sub
xbegin
mov
loop,pn
dec
add
add
es
cmp
bound
add
jge
xlat
outsl
xlat
xlat
fidivrs
popf
popf
jmp
pop
notl
add
cs
pop
fldenv
add
mov
aam
mov
jmp
cmp
scas
xor
add
mov
add
sarl
push
clc
lret
xchg
cmpsl
clc
movsb
clc
pop
clc
daa
clc
pop
mov
lods
pop
fimuls
mov
add
testb
push
jb
add
add
clc
adc
clc
push
pop
clc
testb
clc
loope
pop
jp
pop
sar
add
in
ds
cwtl
cli
mov
fmul
jo
add
add
push
add
inc
add
push
data16
push
cmc
xor
add
mov
add
and
pop
cmp
clc
xchg
mov
clc
out
push
push
add
add
adc
add
jle
add
loope
lret
movsl
clc
pop
xchg
mov
xchg
push
clc
test
xlat
mov
xchg
xchg
fisubrl
add
sbb
clc
mov
cmp
or
addr16
mov
lret
jecxz
inc
add
shrb
mov
clc
fucomi
cmp
add
in
fstpt
add
mov
add
leave
popa
add
sbb
xchg
xor
add
xchg
lods
icebp
int3
cmp
cmpsl
clc
outsb
adc
adc
add
jle
mov
clc
adc
jo
add
add
mov
sub
add
clc
adc
add
push
mov
cmpsl
clc
lea
clc
in
jo
add
cs
clc
cmpsb
clc
xchg
pop
mov
dec
test
mov
mov
push
mov
jecxz
xabort
roll
dec
hlt
divl
jae
add
ret
xor
add
clc
and
add
add
clc
xchg
dec
xchg
xor
fnstenv
jle
clc
xbegin
add
push
add
hlt
aaa
mov
arpl
add
adc
add
cmp
into
in
inc
clc
cmp
or
add
stos
leave
mov
mov
pop
imul
cmpsl
clc
clc
jae
add
xor
add
clc
leave
inc
clc
pop
or
paddq
int
mov
sarb
out
test
push
clc
pushf
jmp
mov
clc
dec
xor
add
add
inc
clc
adc
add
sub
xchg
aad
clc
mov
out
sbb
inc
clc
stos
jp
int3
movsb
clc
xchg
xor
add
insb
pushf
nop
filds
stos
or
jge
lret
cli
jns
cmp
mov
clc
lcall
cmp
push
cltd
and
push
cmp
sub
clc
pop
es
xchg
inc
clc
or
sar
mov
xor
add
lret
aam
clc
lock
clc
pop
roll
mov
lret
add
cmp
clc
jae
add
pop
push
add
data16
adc
add
popa
add
out
or
clc
cmc
lock
add
add
clc
mov
loope
sbb
clc
mov
add
mov
clc
jb
add
clc
dec
ja
cmp
add
das
clc
stc
xor
add
divb
add
test
xor
std
xchg
mov
add
rol
clc
pusha
add
mov
shlb
cmp
or
add
dec
or
adc
clc
int3
xchg
mov
push
mov
clc
mov
add
stos
lods
xor
clc
rcr
lods
ljmp
scas
cmp
mov
cmp
clc
es
xchg
xchg
pop
jg
decb
in
outsl
push
pop
mov
add
clc
in
pushf
ret
clc
fdivrs
jne
push
pop
ret
clc
fistpl
add
dec
sbb
add
sbb
add
jo
add
jecxz
xchg
cmp
mov
clc
out
inc
clc
add
add
add
std
ret
test
inc
clc
inc
add
jns
xor
add
xabort
add
in
lret
dec
xchg
or
clc
xor
add
sub
add
jl
movsl
clc
mov
add
cmp
add
inc
add
mov
clc
cmp
clc
mov
filds
push
xor
jp
clc
popa
add
aaa
nop
and
cmc
mov
add
mov
clc
je
clc
mov
add
rcrb
sar
fdivs
lcall
cmp
aas
fstps
clc
sbb
lret
and
int
dec
push
clc
stc
xor
add
pop
jo
add
pop
xbegin
clc
lret
push
add
push
jno
add
clc
cmp
jmp
clc
mov
add
out
mov
inc
clc
ljmp
inc
clc
rorl
clc
pop
clc
sub
jecxz
jle
outsb
mov
lods
jp
mov
jmp
xchg
push
clc
dec
shll
add
jne
mov
clc
sub
add
clc
and
add
add
fisubl
clc
sub
popf
push
cmc
pop
stos
in
data16
push
test
or
scas
inc
add
mov
add
call
leave
pusha
add
inc
clc
cmp
clc
cltd
test
sbb
cmp
clc
int3
pop
jl
jo
add
and
mov
hlt
movsl
clc
mov
clc
mov
clc
and
add
cmp
divl
inc
clc
repnz
mov
clc
mov
outsl
lahf
flds
add
mov
clc
mov
clc
insb
mov
push
xchg
out
ret
clc
and
add
xchg
jns
mov
test
aad
sbb
xor
add
clc
movsb
clc
mov
or
clc
dec
add
add
clc
sbb
aad
clc
je
push
inc
add
push
inc
add
cmp
add
lret
inc
clc
test
pop
nop
jne
add
add
clc
push
clc
in
push
dec
cmp
add
add
cs
clc
inc
clc
int
jbe
add
xchg
faddl
or
clc
xchg
int
loop
call
pop
sub
or
add
sub
mov
adc
add
insb
mov
add
add
leave
stc
testb
sbb
jbe
cmp
cmp
clc
cmp
clc
dec
cwtl
cld
and
add
add
add
add
std
jae
add
clc
xlat
imul
fidivrs
sbb
mov
xchg
movsl
clc
lock
xor
add
in
cmp
pushf
xchg
pop
push
xor
add
enter
add
xchg
std
lods
hlt
xchg
scas
cld
aad
pop
add
sbb
pop
clc
loop
sbb
and
add
add
add
inc
add
jno
add
clc
nop
sbb
cs
fbld
add
clc
sub
clc
stc
cmp
repz
fbstp
add
add
add
pop
inc
clc
push
add
mov
mov
add
aas
int
clc
int3
in
xlat
add
cmp
pop
inc
add
inc
clc
add
pop
outsb
mov
mov
xlat
xchg
push
pop
call
add
clc
sbb
add
add
kmovw
lea
add
cmpsl
clc
in
xchg
dec
popf
loop
push
sbb
repnz
clc
jl
fsubrl
aad
pop
clc
xchg
vmovlps
add
add
xabort
add
rcll
add
rclb
add
push
out
and
add
add
mov
lock
add
xchg
xchg
mov
add
es
cs
push
add
cmp
clc
inc
clc
jle
clc
cs
push
xchg
cmp
add
fdivs
in
movsb
clc
inc
add
je
clc
into
dec
mov
push
mov
sub
push
add
pop
loop
jnp
pop
ljmp
bound
add
clc
jl
mov
clc
cwtl
cmp
push
mov
clc
fildl
clc
pop
je
clc
mov
cmpsb
clc
jmp
out
insl
sub
add
add
clc
xor
add
push
jmp
bound
add
clc
call
jbe
test
clc
pushf
and
add
cli
xchg
ds
add
pop
sbb
add
ret
add
stos
mov
enter
add
add
add
mov
add
ljmp
xchg
mov
push
add
ret
clc
sbb
cmp
jp
clc
sar
add
call
inc
clc
lret
stos
push
outsl
fidivrs
pop
je
mov
pop
add
add
dec
jge
xchg
push
mov
into
loopne
fisubrl
xor
add
add
jb
add
dec
inc
clc
test
dec
add
imull
xor
nop
push
mov
fstpl
lcall
jp
inc
clc
mov
lea
add
or
cmp
add
pop
cmp
inc
clc
sub
sbb
clc
dec
xchg
roll
push
add
sar
pop
pop
clc
test
jp
push
xor
add
dec
push
fs
out
dec
bound
add
mov
fistps
adc
push
data16
iret
outsl
jg
xchg
mov
push
add
jge
clc
sbb
mov
test
es
and
mov
testl
add
add
push
pop
sbb
clc
mov
lock
mov
clc
insl
jnp
jg
lahf
hlt
push
mov
shr
aaa
jne
push
clc
push
xchg
mov
clc
popf
in
adc
rep
lahf
out
cmp
cmp
add
aaa
jge
inc
clc
pop
sub
mov
clc
and
and
out
xchg
pop
sub
iret
jmp
clc
leave
push
scas
push
outsb
push
add
push
test
jns
add
jo
add
cltd
cmp
aas
mov
xchg
and
add
cmp
cmp
xor
add
clc
fwait
lods
adc
add
and
add
add
add
add
add
outsl
lods
lods
cmp
fnstsw
cli
ffreep
clc
sub
cmpsl
clc
bound
add
add
imul
add
mov
mov
clc
cmc
lret
push
or
ds
xchg
out
gs
jg,pt
clc
dec
loope
cmc
mov
push
xchg
sbb
out
inc
add
cmp
cld
bound
add
cmp
push
add
loopne
cmp
clc
jl
or
clc
hlt
lods
push
add
lock
pop
sbb
hlt
adc
add
clc
push
clc
lret
dec
in
mov
popa
add
xchg
ficomps
xbegin
mov
cmp
mov
push
cmp
add
lahf
cmp
clc
add
add
adc
add
testl
add
pop
popa
add
rcrl
clc
xchg
aas
sarb
push
faddl
enter
cmp
add
push
clc
data16
testb
bound
add
mov
pushf
jl
add
pop
clc
pop
jecxz
xchg
and
add
clc
mov
out
push
nop
push
jns
add
loop
push
int
clc
inc
add
and
add
add
insl
pop
mov
fcoml
scas
or
add
fadd
clc
mov
cmp
xor
add
add
insl
dec
lock
add
mov
jae
add
das
inc
clc
out
pop
adc
add
gs
into
scas
mov
add
scas
mov
add
mov
xchg
pop
call
clc
stos
and
add
add
pop
mov
clc
adc
add
add
clc
xchg
dec
xchg
movsb
clc
dec
sahf
and
add
and
add
add
mov
neg
shll
das
mov
inc
clc
icebp
int3
mov
loope
fs
dec
mov
add
outsl
unpckhps
clc
mov
shll
add
hlt
push
lea
iret
aaa
bound
add
add
data16
popa
add
mov
add
cmpsl
clc
mov
clc
cmp
ja
adc
add
clc
sti
xor
in
test
sub
add
add
aaa
jns
jmp
fwait
sti
mov
add
stos
gs
daa
clc
insb
cmp
sahf
cli
dec
fs
out
enter
clc
adc
add
add
pop
insb
jae
add
add
daa
clc
insl
sbb
clc
pushf
pushf
clc
int
clc
mov
cmp
add
inc
add
mov
and
add
and
add
sahf
push
add
imul
lret
jle
cmp
xchg
dec
xor
add
clc
into
dec
outsb
and
add
xor
add
test
adc
clc
mov
add
jb
add
sub
or
add
lock
cmpsb
clc
or
popa
add
cmc
jbe
sbb
fdivl
add
jecxz
add
clc
cmc
fistpll
jbe
dec
inc
add
push
jnp
add
adc
add
inc
add
or
insl
and
add
jbe
clc
push
shll
sar
clc
int3
rcll
pop
mov
adc
add
fs
lods
xchg
add
add
cmp
add
xchg
pop
and
inc
add
cmp
sbb
jle
movsb
clc
scas
clc
xchg
pop
push
add
xbegin
lret
mov
clc
adc
add
clc
out
repnz
filds
add
ret
add
sbb
clc
rorl
scas
pop
div
add
add
hlt
fnstenv
xlat
mov
clc
cmc
jns
lea
insb
cmp
clc
testb
out
xchg
cwtl
xchg
or
sbb
int3
addr16
jns
mov
enter
cmp
add
inc
clc
xchg
mov
ds
nop
xchg
mov
lret
clc
or
mov
inc
add
jo
add
jle
mov
ret
clc
gs
cmp
fsubl
clc
sbb
ret
inc
clc
jecxz
adc
daa
clc
jl
in
push
outsb
clc
ret
clc
adc
clc
or
fwait
in
rcrb
adc
adc
add
add
in
lods
sub
mov
clc
xchg
mov
clc
sub
lahf
cmc
cwtl
lea
inc
clc
mov
add
es
sbb
clc
mov
clc
push
add
sbb
add
mov
sahf
dec
aas
sar
decl
clc
fisubrs
xchg
loopne
out
adc
add
adc
add
clc
xor
add
cmp
push
mov
pop
addr16
adc
add
xchg
rol
clc
into
dec
int
add
sbb
xchg
mov
sub
add
add
or
clc
lods
lret
and
add
clc
loopne
mov
add
data16
out
sub
in
or
mov
clc
xlat
jmp
clc
loop
xchg
fildll
loop
bound
add
push
add
xor
add
outsl
mov
add
mov
inc
clc
rcrb
push
add
add
cli
fs
imul
icebp
xchg
add
add
mov
fisttpl
clc
repnz
jge
lock
add
jecxz
adc
add
add
ret
clc
mov
add
jmp
mov
test
int
leave
lcall
xchg
jp
mov
clc
cmp
pop
out
ret
shlb
loop
rolb
sahf
insb
test
adc
add
cwtl
cmp
inc
add
pop
cmp
mov
dec
jmp
cmp
add
mov
aad
jo
add
cltd
scas
dec
icebp
outsb
xor
add
lret
mov
add
xchg
cmp
cli
mov
out
sar
push
mov
add
ss
add
clc
lahf
cmp
jecxz
add
jecxz
xabort
cmp
clc
int
fs
cmp
add
jb
add
clc
cltd
stos
jno
add
add
add
adc
add
clc
xchg
daa
clc
xchg
xor
mov
ljmp
loopne
xor
clc
mov
pop
clc
mov
sbb
cmp
push
clc
sti
jge
sbb
adc
sub
gs
cmp
jg
clc
cmp
clc
inc
clc
mov
aad
lcall
clc
jo
add
out
xchg
pop
cmp
clc
insl
or
arpl
add
xor
add
mov
clc
aam
int
lcall
pop
das
in
push
add
sub
outsl
and
mov
add
xor
add
add
add
ret
mov
add
push
add
clc
mov
cwtl
xor
add
add
add
mov
repnz
and
add
clc
test
mov
cmpsl
clc
flds
add
repnz
add
add
fiaddl
dec
pop
lock
inc
add
sub
clc
imul
sub
add
out
sbb
cmp
add
cwtl
in
or
cwtl
and
add
out
loope
xchg
sbb
add
and
add
sbb
push
add
lcall
in
in
sub
push
add
movsb
clc
and
add
dec
sub
clc
mov
out
xor
add
add
add
in
mov
mov
aas
fs
aaa
xabort
sub
clc
push
std
adc
and
clc
je
xor
push
add
xchg
pop
mov
push
add
arpl
add
clc
in
in
enter
dec
movsb
clc
lods
xor
add
cmp
xor
mov
push
fbld
fldenv
lret
clc
int3
push
pop
clc
xchg
inc
clc
fsub
clc
pop
add
add
add
pushf
imul
add
pop
je
aaa
fsubl
add
cmp
add
dec
fstl
add
jge
add
add
push
loop
data16
jecxz
outsl
out
push
mov
mov
add
cmp
mov
clc
cld
pushf
cmp
jl
clc
lods
adc
add
clc
mov
xor
add
jae
add
mov
add
clc
mov
add
jge
xchg
lcall
clc
addr16
addr16
inc
add
in
xchg
nop
xchg
sub
test
dec
das
cmp
shrb
pushl
rorl
or
stos
std
xor
dec
mov
fdivrl
clc
or
ret
clc
stos
pop
add
add
add
sub
stc
sahf
aad
dec
dec
gs
js
and
add
add
or
add
daa
clc
pusha
add
adc
add
clc
stos
cld
inc
clc
jmp
movsb
clc
loopne
add
sub
and
add
push
push
testb
stos
jne
loope
cmp
arpl
add
mov
clc
clc
xabort
leave
hlt
fcomi
clc
dec
mov
movsl
clc
cmp
enter
pusha
add
std
push
clc
enter
xchg
sar
pop
mov
push
dec
jne
clc
je
clc
sub
pop
push
add
jnp
insl
push
clc
into
lods
sub
pop
mul
clc
insb
dec
cmpsl
clc
cwtl
loope
iret
push
out
pop
push
or
clc
xchg
movsl
clc
inc
add
dec
lret
mov
cmpsl
clc
mov
lret
pusha
add
lahf
adc
add
rcrl
push
add
pop
popf
mov
fcomps
icebp
mov
add
sbb
jle
clc
adc
add
test
inc
clc
cmp
clc
mov
iret
mov
add
hlt
lea
ss
pop
or
dec
jle
sti
mov
add
add
add
clc
aaa
gs
lods
xchg
sub
mov
clc
data16
jae
add
clc
lret
mov
sbb
clc
js
jle
clc
mov
clc
movsl
clc
imul
add
xlat
imul
aas
out
imul
aas
data16
aam
adc
add
out
mov
repnz
mov
add
add
push
clc
mov
adc
clc
repz
add
sbb
clc
mov
sbb
leave
shll
add
pop
mov
clc
mov
adc
mov
and
add
add
lcall
inc
clc
pop
insl
fisubrs
iret
ror
test
pop
and
cs
clc
adc
add
add
push
push
adc
add
clc
lods
stos
mov
mov
popa
add
lea
cmp
popa
add
fcoms
add
arpl
add
and
add
mov
clc
inc
add
pop
jns
mov
clc
push
clc
and
add
add
add
iret
jmp
add
ret
clc
push
lcall
sbb
add
lret
out
jo
add
je
insl
cwtl
out
je
clc
pop
or
and
add
add
je
clc
fwait
in
jb
add
out
pop
fs
cmp
outsl
and
add
jno
add
mov
sahf
adc
add
add
lret
pusha
add
imul
add
fs
adc
add
add
push
addr16
mov
clc
mov
add
clc
add
add
xor
add
jae
add
test
popl
add
cmp
or
push
mov
cmp
xchg
aas
pop
cmp
out
mov
rol
clc
cwtl
or
mov
cmp
xchg
sub
dec
sti
ljmp
mov
mov
cwtl
lods
negb
pop
or
clc
packuswb
inc
clc
push
dec
cld
dec
movsb
clc
cmpsl
clc
cmp
clc
aaa
jle
add
xor
add
fimull
fldenv
add
sbb
outsl
adc
add
filds
out
rorl
pop
fwait
clc
cmpsl
clc
inc
add
aam
imul
clc
mov
pop
clc
mov
ljmp
dec
and
jb
add
fimuls
dec
jo
add
test
scas
divb
push
add
stc
notb
add
add
cmp
gs
movsl
clc
jns
jmp
dec
cmovl
clc
clc
mov
insl
lcall
xor
add
clc
mov
clc
lret
scas
jmp
add
clc
inc
add
pop
arpl
add
add
cmp
clc
cmp
push
add
loope
sub
out
ljmp
push
add
mov
ds
sbb
xchg
mov
add
clc
fldl
clc
sti
pop
cltd
xchg
inc
add
call
add
inc
add
lret
add
jl
aam
pop
xbegin
ret
clc
call
test
add
jo
add
clc
or
clc
movsb
clc
xchg
xchg
mov
add
xor
add
jle
fisttps
sar
jmp
clc
mov
out
push
cmpsb
clc
or
fs
sar
lea
clc
in
jmp
mulb
sahf
call
mov
add
add
xor
dec
jno
add
aam
add
loope
jl
inc
clc
xabort
add
lock
stc
dec
jns
cmp
add
add
clc
add
add
fmulp
xor
add
sub
clc
lret
cs
and
add
mov
sbb
pop
clc
sub
add
mov
add
add
clc
cmp
pop
ljmp
scas
cmpsl
clc
and
add
scas
inc
add
js
add
sbb
pop
dec
mov
mov
add
mov
js
push
pusha
add
test
add
dec
jge
xor
push
sub
clc
mov
clc
pop
cmpsb
clc
xlat
je
dec
test
mov
mov
xor
repnz
xor
cmp
int3
sar
sbb
add
xchg
fucomi
scas
sar
sub
clc
clc
cmp
lcall
sbb
daa
clc
aam
cmp
clc
fimuls
into
cmp
icebp
pop
dec
pop
je
pop
aam
pop
hlt
jnp
add
sbb
add
rolb
add
adc
add
clc
cltd
rcl
call
add
dec
hlt
cmp
jg
clc
test
or
scas
pop
and
add
add
mov
jno
add
clc
mov
outsl
sahf
push
push
add
mov
xor
add
clc
fistps
insb
dec
ds
sub
jae
add
lcall
lock
push
adc
cmpsl
clc
mov
clc
cmp
arpl
add
shlb
add
jl
inc
clc
jge
clc
xor
add
sub
add
clc
mov
clc
in
icebp
fstpl
add
dec
popa
add
lcall
js
cmp
mov
and
add
sbb
cli
sbb
add
xbegin
clc
pop
jae
add
scas
sub
clc
sbb
inc
clc
mov
mov
aad
mov
and
add
imul
scas
mov
clc
sub
outsl
into
push
add
nop
es
leave
add
fbld
add
add
imul
mulb
add
or
sti
pusha
add
sbb
shrd
sub
icebp
out
pop
clc
jae
add
inc
add
cld
pop
outsl
lcall
mov
ja
sar
clc
dec
cmp
test
and
inc
add
lahf
inc
add
icebp
pop
cmc
jbe
adc
add
pop
data16
inc
add
roll
out
movsl
clc
xchg
pop
pop
stc
sar
out
mov
imul
inc
clc
aam
loopne
push
aad
add
call
add
push
add
mov
push
mov
jne
jne
aad
popa
add
xchg
clc
xor
dec
pop
and
add
add
cmp
dec
and
add
adc
add
jg
clc
int
add
add
clc
cmp
mov
clc
xlat
xbegin
lea
add
fists
add
clc
in
pop
data16
cmpsl
clc
jecxz
into
cmp
cwtl
cmpsb
clc
or
xor
add
xor
add
in
fiadds
sbb
popf
dec
xor
sub
add
add
xor
add
movsb
clc
movsb
clc
cli
dec
inc
clc
lea
cmc
incl
add
adc
inc
clc
sahf
push
fdivr
aam
jo
add
dec
int
mov
clc
inc
add
adc
test
fstpl
pushf
and
lods
pop
clc
xchg
or
adc
add
jge
clc
stos
jmp
xor
add
clc
in
cmc
jb
add
cli
stos
scas
cmp
sub
add
dec
outsb
ja
loop
cwtl
aas
in
iret
ds
js
pop
mov
add
iret
push
add
add
cwtl
daa
clc
push
clc
imul
add
insl
lahf
test
clc
lods
outsl
in
sub
pop
xchg
xor
add
xlat
data16
mov
sub
mov
push
inc
add
clc
aad
decb
clc
sbb
scas
add
add
cli
int3
sub
clc
fs
or
clc
sub
sbb
clc
jns
pop
mov
add
cmp
clc
cwtl
mov
add
clc
adc
mov
cs
clc
test
lahf
je
mov
mov
and
cmc
xbegin
inc
clc
xchg
pop
clc
jae
add
fildll
bound
add
clc
out
inc
clc
dec
push
imul
dec
mov
add
das
adc
add
sbb
nopl
cmc
ss
mov
int3
out
adc
add
adc
add
inc
add
insb
cmp
clc
inc
add
clc
dec
mov
cmpsl
clc
sar
add
xchg
jnp
pop
test
add
fidivs
lret
aam
add
push
clc
mov
add
xchg
mov
jae
add
clc
push
insb
push
mov
add
jnp
out
mov
add
cmp
jge
dec
xchg
mov
lods
and
add
cmp
fcmovbe
aas
ss
in
mov
clc
add
add
ja
clc
ja
add
dec
icebp
outsb
outsb
cli
push
cmp
clc
jl
mov
sub
mov
clc
xchg
push
popf
pop
int
clc
inc
clc
aaa
icebp
sti
xchg
popf
and
cmp
xchg
lods
fnstsw
clc
loop
push
xlat
mov
sbb
dec
and
add
data16
cmp
aam
or
add
add
fsubs
add
lcall
clc
push
clc
push
js,pn
mov
clc
jnp
ja
clc
push
test
add
inc
clc
repnz
inc
add
ja
hlt
in
jne
add
fildll
pop
inc
add
fs
and
ljmp
clc
movsb
clc
je
sbb
inc
add
clc
dec
xlat
mov
mov
clc
clc
cmp
clc
in
or
clc
fst
cmp
cmp
mov
pop
push
add
in
or
test
outsl
insl
cmc
pop
push
fadds
clc
or
test
sbb
and
add
add
ds
sahf
sahf
inc
clc
icebp
sar
scas
mov
clc
adc
popf
add
add
cmp
sub
int
rorl
or
clc
dec
add
add
xchg
scas
xchg
insl
xor
add
cmpsb
clc
cltd
mov
cmpsl
clc
mov
clc
repz
push
pop
jp
clc
pop
pop
xchg
push
xor
add
icebp
pop
clc
leave
and
jbe
js
pusha
add
mov
clc
mov
pop
mov
mov
jns
mov
add
add
add
repz
or
add
lahf
xor
add
fcmovnbe
xabort
add
mov
add
mov
cs
fwait
mov
clc
movsb
clc
jmp
scas
lahf
mov
add
scas
or
lock
fs
ret
mov
add
aad
push
movsl
clc
lret
mov
repz
add
lock
add
add
lret
mov
pop
fsub
clc
inc
clc
outsb
push
add
inc
clc
stc
or
cmp
cmp
adc
out
adc
add
add
mov
inc
clc
mov
insl
mov
mov
js
enter
clc
push
jae
add
cmp
add
sub
add
pusha
add
out
lods
adc
add
cld
xabort
dec
adc
dec
rcll
scas
pushf
jge
and
push
clc
push
clc
popf
jne
jne
add
ss
and
cmp
lcall
push
mov
add
xbegin
ss
pop
iret
fs
adc
add
xchg
int3
or
add
add
in
push
push
add
mov
fimull
shlb
push
sbb
jp
js
rclb
add
mov
sbb
inc
clc
dec
in
cmp
push
sbb
sbb
cwtl
adc
add
jmp
jno
add
or
insb
mov
adc
add
clc
dec
sub
mov
adc
pop
cmc
std
jg
add
mov
push
add
bound
add
imul
lret
push
add
mov
nop
filds
add
clc
in
test
clc
sub
repz
jae
add
imul
add
add
add
daa
clc
mov
sbb
clc
popa
add
data16
pop
jecxz
dec
aaa
xchg
int
add
cmp
or
inc
clc
frstor
add
clc
cmp
mov
cmp
add
fs
shlb
xor
add
add
fmuls
dec
pop
or
add
jecxz
xor
add
push
add
je
add
iret
ss
int3
mov
pop
sbb
lret
outsb
rcll
add
xlat
and
sbb
cmp
inc
add
dec
sti
mov
pop
push
push
mov
bound
add
fiadds
cwtl
ljmp
sti
sar
inc
clc
scas
sar
loop
dec
push
add
jp
inc
add
cli
outsl
push
add
jae
add
or
enter
clc
jno
add
add
imul
jl
addr16
or
add
inc
add
adc
add
mov
clc
or
clc
and
add
outsb
ljmp
pop
or
push
cmp
popa
add
sub
cltd
fiaddl
add
loop
loope
gs
lods
je
xchg
ret
clc
repz
addr16
add
xchg
out
call
movsl
clc
lret
fisubrs
mov
cli
or
add
add
jg
lahf
test
jle
cld
and
add
add
xor
add
out
test
xchg
hlt
sahf
mov
add
call
clc
in
dec
insb
jecxz
xchg
popa
add
dec
adc
add
cmp
sar
popa
add
pusha
add
push
add
outsl
mov
clc
lret
leave
mov
outsb
in
jb
add
movsb
clc
ja
aad
icebp
sar
mov
clc
cld
outsb
out
es
fldt
scas
je
and
add
enter
cmp
add
clc
xchg
xor
add
repnz
cmp
or
clc
mov
fdivrs
add
dec
imul
aam
loopne
aam
clc
enter
fstpl
xchg
xor
add
add
push
adc
mov
add
add
add
add
clc
cmp
clc
test
daa
clc
sbb
ss
clc
dec
xchg
fnstenv
add
jae
add
clc
push
adc
add
jge
add
cmp
sar
push
out
divl
adc
add
add
fucom
clc
mov
mov
mov
ret
sbb
add
cmp
stc
mov
sti
adc
add
xabort
clc
pop
sub
lea
jl
xchg
leave
fs
in
imul
push
adc
add
add
add
add
imul
add
mov
clc
test
gs
mov
add
jb
add
add
cld
cmpsl
clc
psubsb
mov
add
add
and
add
insb
enter
clc
scas
or
lods
clc
pop
sbb
push
jp
hlt
mov
add
rorl
stos
out
add
test
aas
dec
lods
mov
clc
stos
xabort
lea
clc
aam
mov
add
loope
inc
add
inc
add
lahf
mov
clc
inc
add
scas
out
dec
pop
mov
clc
or
cmp
clc
jg
sub
clc
xlat
mov
add
scas
mov
clc
cmp
pushl
add
clc
mov
dec
je
aaa
push
dec
imulb
add
ljmp
rcll
inc
add
and
icebp
stos
flds
cmp
stos
pop
ja
xor
add
sahf
mov
push
add
mov
mov
add
loop
out
mov
and
add
clc
or
enter
adc
add
push
sub
mov
or
add
outsb
gs
push
shl
mov
ja
clc
ja
add
in
ds
mov
xor
add
xchg
pop
icebp
cmp
clc
notl
add
fadds
add
dec
xor
clc
jo
add
mov
jmp
nop
mov
mov
add
jecxz
dec
mov
lret
dec
bound
add
inc
clc
mov
add
add
inc
clc
scas
out
nop
insl
clc
lret
test
pop
cmp
add
mov
clc
ret
clc
in
jnp
cmp
inc
add
or
and
iret
mov
jne
mov
lea
add
inc
clc
ja
fsts
insl
mov
add
sahf
insb
add
lret
lods
xchg
and
add
add
je
clc
popf
or
or
clc
repnz
clc
lock
sbb
clc
notl
loopne
aam
mov
add
ds
fwait
cmp
add
cmp
shll
add
call
add
sar
clc
adc
add
and
pusha
add
add
add
clc
leave
xchg
cmp
fnstcw
pop
out
imul
lods
shl
clc
in
out
mov
add
rol
clc
dec
pop
mov
clc
test
clc
push
add
mov
add
jno
add
in
push
arpl
add
rorl
fwait
mov
or
add
xor
add
dec
aam
scas
xchg
loope
pop
xor
add
cmp
dec
push
mov
xor
add
dec
inc
clc
scas
fimuls
mov
inc
add
daa
clc
gs
jge
fnstenv
pop
adc
repnz
add
jae
add
and
clc
jno
add
daa
clc
cwtl
cld
or
sahf
iret
inc
clc
int
inc
add
bound
add
cli
and
pusha
add
mov
clc
xchg
imul
clc
pop
mov
mov
or
in
stc
jecxz
pop
sub
adc
add
add
iret
mov
clc
fldcw
add
pop
cwtl
es
clc
jno
add
nop
mov
xchg
out
xchg
cmp
xchg
and
add
xchg
lret
xor
add
clc
mov
clc
xchg
cltd
daa
clc
mov
and
add
sbb
clc
push
clc
test
cmp
push
cmp
push
add
mov
fistpl
pushf
xbegin
lcall
add
dec
sub
push
in
inc
add
sub
add
pusha
add
inc
clc
jmp
cmp
fldt
aad
loop
add
add
lahf
jno
add
clc
rolb
add
jo
add
cmp
cltd
adc
add
fisttpll
mov
add
xor
add
mov
jns
add
jbe
jle
push
mov
cmp
pop
and
add
dec
lret
cwtl
sbb
pop
cmp
clc
cmpsl
clc
push
inc
clc
scas
pop
dec
cmp
xor
add
movsb
clc
and
push
add
jmp
clc
outsl
mov
cmp
rorb
mov
mov
add
arpl
add
clc
push
add
sar
push
clc
aad
and
add
push
clc
cmovns
push
sar
add
adc
add
add
mov
test
cwtl
adc
add
bound
add
xabort
cmc
sub
clc
vmovaps
add
mov
clc
dec
pop
sbb
in
cmp
clc
jns
mov
imul
clc
dec
sti
sar
cmp
add
out
add
in
adc
add
mov
clc
lcall
inc
add
scas
and
add
push
xchg
dec
add
add
jo
add
clc
mov
add
mov
fcoms
add
in
leave
and
add
xchg
mov
cmp
xabort
scas
ljmp
add
add
add
mov
clc
idivb
inc
add
jp
inc
clc
xchg
cwtl
aam
scas
cmp
sbb
cmp
add
push
and
add
es
outsl
xchg
movsl
clc
sar
add
idivb
and
xchg
inc
clc
cmp
mov
add
mov
add
lret
repz
add
out
inc
clc
adc
adc
add
cmp
add
mov
ds
mov
clc
imul
clc
mov
clc
icebp
mov
ss
ja
sbb
fidivrl
fimuls
mov
mov
pop
or
call
pop
or
mov
clc
jmp
push
cmp
clc
into
lods
xchg
mov
jnp
xor
and
add
clc
mov
add
push
clc
push
add
or
dec
mov
add
loopne
mov
clc
sub
outsb
imul
add
cmp
clc
rcll
sub
clc
add
adc
insl
out
pop
xchg
xor
add
add
and
js
cs
bound
add
add
pop
movsb
clc
imul
faddl
clc
iret
inc
clc
shrd
aad
xchg
cmp
dec
mov
insl
enter
mov
lahf
cld
sti
cmp
or
jns
aaa
in
push
in
shll
mov
xor
sub
add
add
cmp
clc
push
add
xchg
movsl
clc
std
pop
jae
add
mov
clc
cld
xchg
call
xbegin
push
mov
mov
enter
sbb
and
add
insb
sar
pop
outsb
stos
and
add
clc
cltd
imull
pop
sub
sub
clc
sub
sar
fucomip
mov
out
out
xchg
adc
clc
sar
test
mov
add
fadds
add
add
add
cmpsl
clc
pop
clc
je
xabort
xchg
sahf
dec
or
jnp
xor
add
add
clc
sahf
mov
clc
decl
je
and
outsb
inc
clc
inc
add
js
add
pop
add
sub
nop
dec
xor
add
fwait
jne,pn
js
mov
xor
inc
clc
out
dec
dec
sub
push
clc
push
add
insb
adc
add
mov
ljmp
xchg
cltd
lahf
adc
add
add
cmp
clc
repz
addr16
pop
cmpsb
clc
add
add
mov
dec
sub
xchg
out
pandn
clc
fcom
cmp
clc
xor
add
sub
sbb
add
in
cli
arpl
add
pop
xchg
cmp
clc
xor
add
clc
cmp
insl
into
mov
jns
jp
pop
adc
add
add
divl
dec
in
dec
adc
add
cmp
clc
sub
int3
jo
add
add
fiadds
add
lret
cmp
lret
jo
add
out
or
rol
clc
popf
mov
pop
ret
mov
stc
sub
mov
sub
clc
mov
cmc
loopne
int3
dec
dec
stos
xor
add
add
lock
and
add
clc
jb
add
clc
lret
add
add
aas
push
mov
scas
bound
add
clc
push
add
push
clc
push
or
clc
dec
xchg
inc
clc
jle
es
dec
mov
clc
ret
clc
out
dec
xabort
add
or
xabort
fs
pusha
add
sub
lret
cmp
add
add
add
mov
jl
add
inc
clc
push
adc
add
cmp
xor
add
sar
clc
clc
adc
add
mov
add
add
add
xbegin
push
add
ror
xbegin
popa
add
cli
pushf
xor
add
adc
add
clc
testl
adc
add
jns
push
outsl
or
mov
sar
jg
cmp
popf
pushf
mov
sub
sti
adc
add
pop
mov
repz
add
dec
scas
xabort
clc
int
jnp
mov
clc
cmp
clc
ljmp
clc
movsl
clc
cli
xchg
push
out
testb
add
mov
clc
sbb
dec
fbld
sbb
mov
clc
mov
adc
add
add
clc
mov
clc
divb
add
cmp
bnd
clc
insb
data16
cld
insb
rcrl
mov
add
xchg
sahf
push
rsm
pop
adc
ja
clc
mov
mov
shlb
add
cmp
sub
mov
add
push
jb
add
out
dec
imul
das
test
clc
push
add
insl
outsb
bound
add
cmp
pop
imul
cmpsb
clc
int3
outsl
adc
add
aas
mov
js
cmp
arpl
add
xchg
pop
push
mov
add
scas
push
ret
clc
xchg
sar
clc
outsl
bound
add
fwait
pop
push
push
add
jb
add
clc
mov
repnz
mov
pop
mov
imul
push
clc
mov
add
test
cs
clc
mov
sti
add
add
dec
aas
cmpsb
clc
or
xchg
mov
out
mov
jns
clc
nop
cmp
jp
mov
stos
fcomps
mov
das
lret
cmp
inc
add
out
xchg
out
fsubl
add
es
and
add
add
lea
sub
or
je
scas
stc
in
mov
dec
mov
add
adc
add
fbstp
add
insl
xor
add
clc
aam
clc
push
add
cmp
iret
lcall
xchg
push
rep
test
xor
add
clc
sub
add
cmp
sar
adc
and
jno
add
imul
scas
cs
jl
mov
mov
popa
add
cmp
add
cltd
ret
clc
mov
jmp
add
mov
pushf
mov
lcall
push
add
xchg
insb
into
outsb
dec
pop
clc
dec
popf
js
push
stos
test
adc
clc
bound
add
in
sub
je
sti
sbb
mov
clc
jle
sarl
add
cs
add
dec
lcall
fdivs
cmp
clc
mov
arpl
add
out
divb
add
insl
inc
add
xchg
pushf
push
sar
shl
clc
loopne
cltd
jnp
or
pop
inc
clc
lahf
jg
mov
add
mov
pushf
xor
add
dec
adc
add
inc
add
sub
add
add
add
addr16
inc
add
fs
xchg
popf
jle
je
rolb
add
sar
sbb
clc
loope
scas
adc
add
add
add
xabort
lea
cmp
inc
clc
cld
aaa
leave
inc
add
loop
add
bound
add
add
packssdw
jle
mov
dec
in
ret
xchg
or
das
arpl
add
lret
mov
mov
lea
clc
dec
cmp
mov
ljmp
in
sub
clc
test
insb
jge
jmp
cmp
mov
aad
sar
inc
clc
xchg
fstpl
gs
add
add
mov
dec
imul
rorb
inc
clc
iret
push
cwtl
lahf
sub
add
add
inc
clc
test
mov
add
xor
mov
clc
cmp
clc
ffree
clc
jmp
mov
add
jns
stos
xchg
outsb
dec
push
shl
cmp
data16
pop
arpl
add
add
sti
sbb
pushf
out
jnp
and
add
dec
cmp
or
aam
mov
adc
add
push
ljmp
leave
push
xchg
add
add
pop
loop
insl
jnp
jl
add
jae
add
add
std
cmpsl
clc
int
xor
fldt
pop
out
xchg
xor
add
add
test
mov
clc
pop
idivl
aam
fs
adc
add
hlt
fisubl
add
pop
xor
add
clc
and
add
jecxz
and
push
clc
push
cmp
icebp
dec
adc
add
fcompl
sub
mov
sub
rcrb
lcall
popa
add
adc
lret
ret
push
into
cltd
pop
adc
add
clc
push
mov
imul
jmp
test
int3
ret
clc
push
pop
mov
jmp
add
xchg
bound
add
mov
sar
jg
clc
fwait
bound
add
add
jle
push
add
pop
shrb
clc
mov
aad
inc
clc
sub
or
inc
clc
mov
jnp
clc
leave
pop
clc
push
or
lods
popa
add
sahf
mov
clc
jb
add
cmp
pop
test
cs
dec
icebp
addr16
jl
gs
mov
jnp
xor
add
add
inc
add
fstp
out
test
or
add
sar
sbb
hlt
sub
clc
divb
neg
or
add
push
cwtl
addr16
hlt
mov
pushf
mov
popf
loop
es
pop
xor
test
ret
clc
stos
cmp
add
test
mov
jbe
dec
ret
insl
cmp
cmp
notb
add
cmp
imul
clc
push
mov
add
mov
js
add
je
sbb
add
push
gs
lret
mov
clc
add
add
add
jno
add
add
sbb
clc
clc
test
lret
ja
adc
add
pop
js
clc
mov
and
add
clc
idiv
je
divb
add
push
sti
mov
push
mov
add
loopne
or
add
or
bound
add
clc
shrb
mov
popa
add
mov
add
mov
push
stc
jne
clc
sbb
and
add
clc
and
add
add
scas
add
add
push
out
or
inc
clc
ja
jg
push
ja
cld
and
add
mov
add
pop
shl
clc
fidivrs
test
clc
mov
call
lea
aas
jno
add
add
nop
bound
add
clc
shl
inc
clc
insb
scas
sbb
cmp
clc
test
add
add
add
sar
jb
add
clc
mov
insb
mov
inc
clc
add
add
iret
adc
inc
add
push
add
inc
add
add
add
clc
jne
add
jmp
ljmp
ret
clc
mul
clc
cmpsb
clc
jbe
lea
sbb
clc
push
aas
fdivrl
add
movsb
clc
add
add
cmp
imull
imul
jb,pn
add
xor
add
clc
pop
rolb
push
movsb
clc
loopne
cmc
aam
add
add
add
mov
add
add
ss
add
xor
mov
add
dec
mov
icebp
into
imul
mov
ss
pop
outsl
add
cmp
scas
or
add
aad
clc
jne
mov
clc
pop
ret
push
scas
mov
clc
es
cmpsl
clc
popa
add
inc
add
mov
insl
push
mov
aaa
ficoms
add
out
call
add
mov
clc
pop
das
fidivrl
add
add
add
add
fwait
data16
movsl
clc
fisubl
ret
pop
sub
clc
sbb
xabort
push
xbegin
push
add
push
clc
flds
add
clc
enter
clc
out
dec
dec
push
add
scas
pop
je
add
cltd
pop
test
aad
add
aad
or
lods
into
jno
add
add
ret
clc
or
int
clc
in
cmp
sbb
push
repnz
clc
sub
in
push
call
mov
clc
jge
cmp
aam
mov
out
mov
clc
dec
icebp
outsb
mov
push
add
add
add
push
add
push
xlat
iret
out
mov
xchg
ret
loopne
stos
inc
clc
fidivl
dec
loopne
and
add
into
std
clc
bound
add
clc
cmpsl
clc
sub
clc
lock
add
push
add
xor
add
add
clc
push
leave
inc
clc
cmp
mov
mov
xchg
jge
clc
xchg
fisttpl
mov
andps
add
ja
sbb
pop
dec
mov
outsl
cltd
mov
clc
push
shll
outsl
lcall
jmp
xor
add
enter
lahf
adc
add
rorl
sar
add
clc
insl
push
dec
vshufps
clc
fst
pop
stc
nop
mulb
add
mov
sbb
clc
add
add
or
in
mov
clc
je
add
inc
clc
or
add
sar
outsb
out
push
rorl
cmp
push
clc
outsb
clc
and
add
arpl
add
aaa
out
stos
mov
fwait
xchg
nop
cld
xabort
shrb
bound
add
in
call
xchg
div
jns
daa
clc
data16
or
clc
out
scas
out
repz
xor
add
pop
push
or
js
push
add
scas
lea
clc
sti
mov
add
enter
add
add
push
lods
push
in
jns
jmp
jnp
imul
in
movsl
clc
test
add
pop
clc
js
jb
add
add
add
xor
add
int
mov
xor
insl
xchg
stos
add
add
aas
jne
jo
add
cmp
movsl
clc
inc
add
pop
cmovae
add
push
clc
cltd
mov
jmp
sub
clc
js
dec
sbb
clc
xchg
das
push
add
push
add
imull
jl
add
out
inc
add
inc
clc
mov
pushf
or
or
out
xor
add
fsubrs
mov
mov
clc
push
add
sti
jne
popa
add
add
add
mov
out
jle
sbb
add
sahf
cmc
aas
rcrl
xbegin
dec
cmp
ss
clc
inc
clc
int3
xchg
in
pop
stos
sahf
test
fucomip
inc
add
cmp
mov
add
push
mov
push
add
push
aaa
cmpsb
clc
push
add
sbb
add
adc
add
cmp
add
mov
add
jns
adc
aam
aaa
cmp
pusha
add
mov
popa
add
fmull
lahf
mov
add
clc
push
mov
hlt
mov
mov
clc
repz
in
push
add
sub
add
data16
mov
pop
or
mov
add
add
clc
or
xabort
popa
add
lret
jp
add
add
insb
fistpl
xor
add
stc
or
and
add
add
inc
add
pop
cmp
adc
pop
or
clc
xchg
xchg
or
or
add
add
push
add
mov
inc
clc
cmp
or
jl
add
bound
add
xor
add
clc
cltd
icebp
or
sub
clc
cmp
clc
mov
sbb
mov
add
push
add
add
add
sub
add
repnz
lock
add
add
pop
fistl
rorb
cmpsb
clc
ret
clc
mov
sub
jo
add
clc
fidivl
lods
inc
add
jle
scas
rcr
dec
setnp
add
add
cmp
add
add
clc
mov
xbegin
xchg
sar
leave
scas
xor
add
inc
clc
clc
clc
int
xchg
fists
cmp
xchg
fabs
clc
push
dec
push
fwait
iret
mov
add
sar
and
lock
xchg
mov
add
pop
inc
clc
push
sbb
add
out
lea
cmp
push
nop
mov
add
add
jno
add
cmp
jnp
sti
stos
lods
iret
out
add
add
mov
lea
pop
mov
add
mov
clc
jg
mov
clc
fiadds
push
jmp
ja
push
imul
jl
push
add
push
clc
sub
jl
pushl
repz
clc
cmp
inc
clc
movsb
clc
pop
push
add
mov
pop
int
push
insl
mov
clc
pop
or
fwait
cld
cmp
add
xchg
roll
clc
jmp
inc
clc
inc
add
or
sbb
push
add
sbb
sbb
mov
scas
mov
clc
int
inc
clc
imul
sub
mov
cmp
sar
mov
in
add
lods
cmp
add
shrb
movsb
clc
into
mov
add
add
jge
adc
add
daa
clc
aad
and
add
clc
push
add
repz
clc
sbb
clc
adc
add
clc
adc
add
movsb
clc
fucomip
xor
add
mov
clc
sar
clc
fwait
push
arpl
add
or
bound
add
iret
dec
mov
test
sti
int
hlt
dec
pop
push
add
out
dec
out
inc
clc
idivb
dec
test
clc
fistpl
std
int3
test
dec
adc
add
push
add
or
add
cmp
ljmp
clc
pop
xchg
jp
arpl
add
add
mov
add
fstpl
mov
xchg
and
jecxz
mov
lret
testl
clc
mov
in
pop
mov
psllq
pushf
sar
in
movsb
clc
in
mov
clc
dec
das
test
clc
sbb
sbb
loopne
std
jne
add
inc
clc
cmp
jecxz
ja
in
xor
add
out
je
push
xor
add
clc
mov
in
cmp
cli
xchg
int
clc
stc
out
mov
insb
xchg
in
pushf
pop
mov
cmpsb
clc
push
add
mov
rolb
add
shll
cltd
rorl
movsb
clc
loop
xor
mov
clc
pop
xor
pop
push
clc
mov
clc
mov
clc
cmc
scas
cmc
add
add
clc
mov
jecxz
stos
cmpsb
clc
fsubs
mov
dec
xchg
rcll
push
sub
cmp
add
and
add
lret
sbb
add
cmp
clc
mov
ret
std
inc
add
call
dec
int3
push
push
add
and
add
clc
push
xor
add
mov
sbb
add
aaa
push
or
add
imul
cmpsl
clc
mov
sbb
test
sub
jle
xchg
pop
rcrb
scas
inc
clc
lret
cmpsl
clc
push
add
jecxz
cmc
out
enter
jp
inc
add
mov
clc
cmp
mov
clc
in
lods
imul
add
add
pop
adc
add
lock
je
mov
xchg
data16
xchg
jp
add
sub
lea
xchg
stos
mov
rclb
mov
add
xor
add
clc
push
add
pop
clc
inc
add
dec
mov
jns
clc
insl
std
mov
clc
out
adc
add
xor
in
ret
mov
sahf
sub
loop
fisttpl
sbb
je
aaa
pop
adc
add
xchg
mov
sub
mov
bound
add
add
out
cmc
hlt
xchg
mov
ljmp
aaa
inc
add
icebp
sar
test
aad
clc
gs
pushf
mov
xlat
repz
bound
add
cltd
push
icebp
js
mov
dec
test
cmp
add
add
jmp
loopne
pop
mov
clc
pop
jg
add
push
cld
shlb
add
stos
pop
cmpsl
clc
icebp
data16
adc
add
roll
add
clc
lret
clc
sbb
mov
jae
add
jne
clc
iret
cmpsb
clc
cmp
ret
cltd
psubw
cltd
mov
ljmp
clc
mov
cmp
clc
mov
in
pushf
dec
adc
add
sbb
xor
add
lcall
cmc
fisttpll
add
mov
add
sub
rol
clc
std
jge
mov
sti
and
add
popf
fs
xor
add
clc
pop
popf
dec
cmp
clc
and
out
loopne
mov
lcall
jl
dec
mov
outsl
mov
mov
clc
dec
xor
clc
fisubl
add
aam
clc
xchg
cmp
mov
clc
push
clc
int3
jmp
cmp
clc
pop
pop
inc
add
xchg
cmp
add
add
add
fucomip
sbb
sub
add
add
adc
add
hlt
sar
inc
add
jne
clc
repnz
mov
clc
rolb
clc
lret
and
add
in
mov
rclb
add
clc
mov
aad
sahf
fists
je
fnsetpm(287
clc
aas
test
push
clc
inc
add
pop
test
add
pop
sar
jo
add
pushf
push
push
addr16
add
stos
push
xor
add
dec
cld
flds
add
add
lret
aad
clc
iret
lock
insl
pop
mov
add
adc
add
pop
xchg
or
dec
gs
push
add
mov
add
out
dec
cmp
movsl
clc
in
xchg
jle
push
bound
add
pop
ficoms
add
add
push
add
adc
cli
mov
clc
cli
mov
pop
cmpsl
clc
xor
add
lea
iret
inc
clc
scas
sbb
clc
cmc
jp
inc
clc
sub
add
gs
je
add
lahf
hlt
insl
jo
add
mov
imul
add
add
jle
enter
jge
sub
push
mul
clc
jae
add
xor
add
gs
clc
fidivrs
add
fistpll
add
add
dec
mov
xchg
pop
cmp
rclb
push
loope
ret
clc
add
add
fwait
sub
clc
jp
out
cmp
clc
jnp
clc
adc
add
lret
icebp
in
test
repz
loop
imul
data16
and
clc
push
sbb
add
add
mov
pop
pop
movsl
clc
lret
add
push
add
inc
clc
call
loope
movsl
clc
xor
add
sar
jne
xor
add
clc
or
fldl
add
stos
in
lahf
out
cltd
xbegin
clc
cmp
add
cli
cmp
xor
add
add
bound
add
add
mov
cmp
movlps
add
mov
clc
into
xchg
cmp
out
jae
add
add
and
add
sar
pop
pop
sbb
clc
insb
or
xchg
adc
add
mov
roll
add
clc
ss
arpl
add
cmc
out
adc
loopne
mov
sbb
cmp
pop
xor
add
mov
cmp
cltd
gs
ja
mov
dec
jge
clc
fisttpll
daa
clc
ds
clc
ret
clc
xbegin
ja
sar
add
add
mov
or
push
add
add
and
add
inc
add
mov
clc
out
insl
or
test
add
test
loop
fiadds
add
clc
out
mov
mov
clc
ret
clc
mov
clc
out
or
clc
mov
add
dec
pop
ds
clc
dec
and
fmuls
clc
faddl
or
add
pushf
push
jbe
xchg
out
and
loopne
out
lcall
cmp
loopne
cmp
aas
adc
add
popf
scas
test
clc
xchg
mov
add
out
and
add
add
cmp
clc
insb
and
add
add
jo
add
popa
add
cmp
clc
fbld
add
dec
lahf
je
ljmp
xor
add
add
and
add
clc
inc
add
icebp
mov
xlat
adc
add
dec
push
clc
clc
jge
and
inc
add
mov
add
scas
sti
jo
add
clc
mov
clc
clc
or
scas
mov
xchg
fnstcw
enter
add
lcall
add
add
clc
cmp
enter
lock
adc
clc
aas
or
pop
mov
clc
mov
clc
testb
stos
aad
push
push
add
cmp
imul
xor
add
mov
pop
jne
jnp
jns
ficoml
add
cmp
inc
add
sub
inc
clc
xor
add
cs
sti
rorl
enter
rcr
dec
pop
or
stc
stc
dec
sub
clc
data16
pop
ds
add
add
pop
sub
pop
mov
xor
add
aad
clc
inc
add
push
add
notl
cmp
test
clc
cmpsb
clc
add
cltd
mov
clc
cmp
repz
jp
clc
sar
iret
loope
inc
add
inc
add
sar
dec
lods
arpl
add
add
into
adc
dec
popa
add
cmp
gs
fwait
outsl
or
cmp
add
xbegin
xor
stos
inc
add
das
int3
inc
add
jecxz
mov
add
bound
add
es
pusha
add
daa
clc
push
push
add
addr16
pushf
pop
cmpsl
clc
sar
hlt
pop
cmp
fnstenv
clc
xbegin
clc
in
pop
daa
clc
mov
fs
xchg
mov
rcll
add
cmp
iret
mov
or
cltd
adc
add
mov
mov
mov
and
add
lods
je
clc
add
add
mov
add
jl
mov
clc
dec
cmpsb
clc
inc
add
imul
add
cli
cld
sbb
add
ds
loope
int3
jne
popa
add
xabort
push
add
add
add
pop
out
push
ror
in
xchg
dec
in
pushf
dec
gs
jae
add
xor
add
aas
mov
lods
add
add
xabort
loop
cld
imull
xchg
xor
add
aas
push
add
add
cmp
clc
clc
test
mov
jecxz
lret
clc
push
push
es
adc
add
mov
dec
xor
add
add
cli
inc
add
stos
std
xlat
mov
xlat
inc
add
jmp
clc
lret
clc
lcall
and
add
add
inc
clc
fisubrs
clc
aad
clc
xor
add
clc
jmp
clc
clc
ds
cmp
insb
push
lods
xbegin
scas
add
add
in
data16
cmp
pop
into
gs
dec
pop
pop
mov
clc
xor
add
popf
inc
add
adc
add
mov
inc
clc
in
hlt
js
test
mov
clc
mov
xor
add
inc
clc
add
add
clc
out
cmp
add
xchg
cwtl
mov
add
push
dec
stc
addr16
and
add
int3
in
cmpsl
clc
test
into
push
add
mov
add
sar
clc
xor
add
stos
and
add
or
push
adc
clc
jecxz
sub
sub
faddp
clc
aas
movsb
clc
popf
push
clc
cmpsl
clc
leave
pop
clc
jle
clc
fstpl
xabort
sar
clc
loop
loopne
lcall
adc
clc
inc
clc
mov
mov
add
jmp
clc
adc
add
mov
out
lea
in
insb
push
lock
add
daa
clc
push
insb
sti
mov
or
clc
adc
add
clc
inc
add
shll
cmp
cmpsb
clc
imul
add
xchg
push
cmpsb
clc
movsl
clc
add
add
fwait
dec
into
leave
adc
add
inc
clc
incl
add
inc
clc
rorl
clc
ret
clc
cltd
stos
lahf
cmp
and
add
outsb
mov
lahf
cs
jnp
ljmp
add
xchg
test
clc
xchg
js
xchg
in
pop
pop
clc
outsl
mov
mov
enter
sahf
mov
outsb
or
clc
nop
out
jne
jecxz
mov
xchg
out
jg
add
add
scas
adc
add
scas
jns
clc
xlat
int
pop
test
cltd
into
lcall
jmp
clc
pop
sbb
pop
pop
rol
clc
jmp
lahf
sti
int3
aad
sub
aaa
aaa
cmp
add
cmp
clc
mov
add
dec
lcall
mov
pop
icebp
repnz
lcall
jae
add
cmpsl
clc
cld
insl
shrl
enter
xchg
sbb
add
and
aad
inc
add
stos
fwait
cmp
es
jmp
add
cld
test
add
scas
js
mov
push
rclb
stos
sbb
add
mov
imull
or
daa
clc
push
fcmove
push
out
adc
xchg
push
add
adc
add
add
ret
sbb
in
test
dec
into
out
in
data16
inc
add
dec
js
scas
mov
clc
or
mov
lea
or
add
repz
daa
clc
loope
sbb
jae
add
into
or
add
jmp
clc
jbe
jle
clc
mov
add
test
mov
clc
sub
add
mov
add
dec
pop
add
add
add
lods
pushf
sub
add
push
add
addr16
cmp
clc
lret
or
leave
cmp
clc
mov
xlat
loop
jl
clc
cli
mov
xchg
nop
pop
gs
jne
add
call
inc
clc
sub
sub
loopne
ret
mov
xchg
bound
add
add
repz
out
dec
xor
add
add
pop
mov
adc
add
lods
in
ja
adc
add
add
movsl
clc
dec
mov
clc
decl
and
add
sti
or
add
cld
insb
int
mov
cmp
inc
add
sbb
cmp
pop
clc
and
add
xor
clc
enter
add
jl
sub
cmp
pop
filds
add
xchg
loop
lret
mov
add
clc
out
sub
push
pushf
ds
xbegin
imul
leave
out
inc
clc
or
or
repz
mov
add
add
jo
add
data16
data16
sbb
add
clc
daa
clc
nop
shll
add
add
push
push
add
mov
add
add
add
insl
sar
xchg
pop
mov
clc
mov
add
iret
sbb
and
add
cmp
adc
add
shll
push
leave
pushf
sub
ret
clc
dec
jmp
movsb
clc
jae
add
jnp
fnstsw
clc
mov
aam
imul
xchg
loopne
fidivl
add
push
pop
sbb
out
dec
inc
clc
dec
jns
inc
clc
fnstenv
push
pop
shrb
push
icebp
std
imul
sub
into
adc
add
out
mov
adc
add
clc
enter
dec
mov
clc
in
xchg
inc
add
fiadds
add
mov
clc
jnp
clc
pop
xchg
xchg
ret
clc
rolb
ret
clc
adc
add
lahf
jmp
add
add
push
clc
scas
dec
test
add
xchg
and
add
ja
pop
shlb
add
sbb
clc
mov
scas
sar
jne
cmp
adc
add
pop
pusha
add
add
add
add
add
or
clc
jo
add
add
and
add
add
cmp
bound
add
out
mov
lahf
hlt
cmp
clc
outsb
insb
je
dec
cmp
adc
add
mov
push
cld
mov
mov
movsl
clc
faddl
add
add
clc
ret
clc
cmp
jge
xor
add
jl
pop
push
inc
add
pop
add
add
xlat
mov
pop
ss
fsubrs
clc
inc
add
cwtl
adc
add
xchg
sarl
push
mov
and
add
and
jp
sbb
stos
cli
in
ds
fimull
and
add
add
data16
sbb
cwtl
bound
add
clc
insl
notl
sub
loopne
mov
sahf
jle
rorb
xchg
scas
out
sahf
fucomip
sbb
add
aas
out
sub
clc
push
mov
xor
add
popa
add
dec
hlt
das
inc
add
cmp
clc
dec
xchg
imul
cmp
mov
mov
clc
stc
sbb
clc
mov
add
xchg
fnsave
stos
rcr
or
data16
or
add
scas
pusha
add
clc
sub
loope
sbb
inc
clc
cmpsl
clc
rcrl
and
inc
add
sbb
pop
mov
mov
add
testb
mov
push
mov
movsb
clc
fdivr
movsb
clc
push
ret
clc
stos
add
add
je
clc
pop
inc
clc
pop
jno
add
sub
clc
out
xor
add
jb
add
scas
mov
add
clc
decl
adc
add
clc
push
clc
rorb
push
add
popf
adc
add
aas
enter
sbb
notb
imul
mov
or
pop
or
mov
dec
dec
dec
inc
add
iret
pop
ss
scas
adc
add
lea
stos
sahf
xchg
es
sbb
add
add
add
cld
sbb
sar
adc
add
cwtl
pop
xchg
lret
test
add
adc
add
testb
push
clc
cli
mov
push
add
gs
jecxz
sbb
mov
mov
clc
push
pop
xchg
mov
clc
or
jmp
clc
test
push
xabort
int
and
add
fs
sbb
add
cmpsl
clc
ja
inc
add
sbb
aas
pop
cmp
clc
xor
add
pop
xchg
popf
lret
clc
pop
or
xor
clc
lods
clc
mov
xchg
dec
fidivs
add
add
add
mov
xor
mov
lods
pop
fsubl
xor
cmp
dec
scas
or
add
add
cmp
add
mul
clc
mov
or
add
cmp
clc
pop
jl,pt
ljmp
imul
mov
cmc
add
dec
ret
clc
xchg
cmp
outsl
push
add
xor
adc
add
test
mov
xchg
pusha
add
push
cmp
clc
repz
clc
js
add
xor
add
add
cmp
or
test
jb
add
clc
jp
call
adc
add
xchg
cmp
add
add
add
hlt
cld
es
push
xchg
sbb
jae
add
aam
add
add
xchg
sar
int3
jecxz
cmp
clc
test
add
add
add
popf
sbb
clc
std
addr16
mov
dec
pop
mov
clc
and
add
xor
add
add
out
push
cmp
mov
clc
mov
clc
pop
xor
add
rolb
add
pop
rolb
jbe
outsb
ljmp
xchg
mov
out
js
jecxz
push
clc
ds
inc
add
clc
push
clc
insl
xchg
ret
clc
mov
jnp
stos
into
mov
clc
cmp
jle
clc
push
or
mov
xor
add
rolb
sar
stc
mov
test
xabort
clc
sub
add
push
int3
mov
and
clc
push
aam
jns
sub
stos
push
add
in
imul
rorl
fs
lods
jo
add
dec
adc
add
stos
jae
add
add
add
clc
cmp
sub
mov
jno
add
es
mov
clc
repnz
loopne
outsb
sbb
add
dec
pop
outsl
pop
arpl
add
sbb
xchg
mov
mov
sar
add
mov
cmp
add
add
add
jg
aas
and
add
add
cmp
nop
shrl
inc
add
dec
fwait
xchg
pop
cmp
loopne
lahf
mov
mov
add
mov
clc
and
nop
testl
clc
add
push
xor
add
mov
clc
inc
add
pop
clc
cmp
add
add
fisubs
add
int
das
xabort
clc
jbe
pop
fs
xor
clc
sub
or
clc
out
jmp
lods
mov
fidivrs
xabort
mov
add
outsb
mov
cmp
iret
fdivs
hlt
mov
ss
jmp
mov
outsb
jo
add
add
jl
nop
and
add
add
sbb
xchg
insl
out
jns
clc
clc
xor
add
add
das
insl
iret
pop
clc
xor
add
sub
push
int
clc
negb
loope
push
add
rcrl
cld
sub
add
mov
mov
clc
fisubs
add
xchg
mov
add
add
push
ljmp
add
adc
add
mov
add
dec
inc
add
xbegin
sahf
or
add
mov
clc
cli
pop
int
clc
sbb
add
push
add
ss
xchg
xor
clc
rcrl
je
lcall
shll
cs
sbb
inc
clc
xabort
mov
add
push
xor
add
fs
inc
clc
out
call
clc
into
or
add
or
jmp
sbb
pop
aas
out
test
jbe
mov
clc
shlb
clc
pop
cmp
cwtl
mov
aas
mov
inc
add
or
jl
add
jp
data16
fptan
xor
add
imull
add
adc
jae
add
clc
repnz
add
cmc
int
clc
pop
xchg
sub
test
jle
clc
pop
mov
or
xor
add
int
clc
mov
movsl
clc
mov
inc
clc
mov
add
repnz
outsl
sar
cmp
clc
out
fidivrs
aaa
mov
fldl
adc
add
add
clc
test
add
add
mov
add
clc
test
mov
add
jge
popf
sub
clc
dec
repz
xchg
scas
xchg
cmp
loope
pop
sub
or
pop
lret
clc
movsl
clc
push
sub
fucomp
pop
xchg
or
inc
clc
inc
add
adc
add
inc
clc
lret
out
mov
clc
sub
sar
clc
xbegin
add
test
sub
out
fwait
cs
imul
add
iret
and
add
leave
adc
mov
stos
mov
cmp
add
sub
in
add
add
add
sub
jnp
inc
add
mov
jns
rolb
add
jnp
into
and
add
add
xor
add
stc
push
lock
sbb
add
cs
add
inc
clc
pop
inc
add
mov
clc
push
mov
push
rcrl
add
clc
mov
xor
add
jb
add
jne
ret
clc
xchg
cmpsl
clc
jo
add
imul
imul
mov
sbb
xor
add
xor
add
xchg
hlt
je
stos
insl
idivl
push
add
clc
loope
mov
xor
aam
shr
int
sub
ljmp
add
adc
clc
stos
sbb
add
out
jl
mov
push
cmp
clc
outsb
addr16
push
add
push
popf
jb
add
incb
push
test
add
add
clc
outsb
cmpsb
clc
xchg
adc
add
leave
scas
rcrl
test
add
cmp
add
pop
arpl
add
mov
xor
add
test
and
ret
clc
sub
add
add
outsl
push
add
pop
xchg
pusha
add
mov
pop
aad
sub
mov
loope
push
ret
clc
inc
clc
popf
add
add
ja
clc
and
add
sahf
sbb
lret
mov
aaa
das
aas
pop
adc
add
movsl
clc
pop
loope
xchg
pop
xor
add
sar
iret
inc
add
sbb
xchg
ds
clc
mov
add
arpl
add
cltd
adc
add
lcall
push
clc
jmp
pop
clc
enter
clc
clc
pop
clc
out
sbb
gs
movsl
clc
sbb
sbb
add
cmp
mov
fidivs
insb
or
pusha
add
hlt
sbb
clc
ja
sub
mov
clc
in
sbb
xor
add
clc
xor
add
cmc
mov
mov
add
add
daa
clc
sbb
fwait
mov
ss
daa
clc
out
adc
add
dec
outsl
popa
add
add
add
add
xor
clc
push
imul
mov
add
mov
add
add
lret
xbegin
dec
sub
add
cmp
push
clc
scas
push
aas
stc
stc
push
add
jge
jge
adc
clc
sar
clc
cmp
test
add
or
add
loope
mov
add
fwait
out
sub
sar
jne,pn
outsb
ret
clc
add
add
add
pop
mov
mov
repz
in
and
add
xor
add
add
loopne
pop
xchg
into
sub
clc
pushf
adc
clc
sbb
clc
inc
clc
shrb
cs
jbe
clc
sbb
jp
add
outsl
push
test
clc
pop
call
mov
cmp
add
ficoms
add
clc
push
xor
add
out
arpl
add
mov
inc
clc
mov
aas
test
repnz
add
lahf
mov
mov
clc
xchg
jnp
lret
out
xchg
mov
cld
es
dec
lock
int3
sub
adc
add
sub
out
mov
sub
test
clc
xchg
lret
sbb
js
pop
mov
add
in
test
ds
add
push
jmp
add
out
imul
clc
loopne
and
add
test
js
clc
adc
jo
add
pop
dec
sub
insl
and
inc
add
pop
and
add
push
clc
fidivrl
jmp
insl
stos
cmp
js
cmp
add
jge
cmpsb
clc
cmp
add
jo
add
shlb
pop
insb
push
popa
add
hlt
data16
pop
pshufw
test
pushf
jne
inc
add
jnp
mov
decl
push
pop
sar
add
out
sbb
inc
clc
xor
add
add
mov
cli
lea
add
sub
add
clc
mov
clc
add
add
aam
add
mov
cld
fsubrl
out
sar
sbb
test
clc
jmp
std
in
into
test
clc
enter
clc
imul
mov
or
ss
pop
mov
fnsave
add
mov
add
lret
dec
lock
add
push
push
mov
clc
mov
ss
or
clc
sar
add
push
add
scas
push
add
dec
lea
push
add
add
clc
sbb
add
sti
xor
add
inc
add
ja
add
add
add
jno
add
add
mov
xbegin
add
out
jp
jnp
add
fisubrs
pop
jno
add
add
aaa
adc
cmp
and
add
das
mov
add
add
add
sbb
clc
inc
clc
cmp
clc
lea
cmp
mov
add
and
sbb
clc
xlat
shl
clc
out
push
add
into
jbe
clc
fildll
clc
nop
jbe
imul
add
dec
addr16
in
push
and
add
add
out
sub
clc
pop
mov
clc
out
leave
jle
add
fnsave
add
add
stos
es
sahf
dec
cld
push
movsb
clc
xor
clc
leave
cli
or
dec
add
add
jecxz
repz
add
push
jno
add
mov
jp
xchg
sub
add
xchg
add
jge
clc
mov
scas
inc
add
mov
or
xchg
pushf
push
add
jp
mov
iret
mov
and
add
jbe
clc
fisttpl
sbb
lea
lret
jbe
sbb
shrb
notb
clc
dec
jmp
add
clc
or
add
lcall
add
test
mov
add
pusha
add
mov
loopne
pop
mov
add
or
clc
cmp
cmp
sbb
add
loopne
in
dec
and
add
clc
in
outsl
cwtl
lcall
jecxz
mov
add
adc
add
imull
mov
add
push
nop
enter
xor
mov
inc
add
in
push
cmp
fstpt
fnstcw
and
add
dec
and
add
add
xor
add
cltd
dec
mov
clc
std
dec
lahf
mov
roll
iret
outsb
out
xchg
sar
mov
clc
pop
out
jmp
aam
and
add
pop
dec
add
add
inc
clc
pop
cmp
daa
clc
xabort
sbb
mov
daa
clc
jg
xchg
cmp
clc
inc
add
ret
clc
pop
aaa
dec
adc
add
clc
cmp
lret
sbb
into
faddl
and
add
inc
clc
stos
jecxz
out
jmp
cltd
lcall
add
clc
sub
jns
pop
cmp
add
aam
add
sar
add
dec
push
add
jmp
lret
test
test
jne
clc
call
outsl
lods
sub
inc
add
push
pop
lods
out
jnp
mov
add
dec
clc
iret
pop
sbb
mov
add
enter
insl
lods
adc
add
inc
clc
lods
pop
sub
add
push
add
or
icebp
insb
fdiv
mull
add
bound
add
xbegin
mov
enter
addr16
xchg
sub
fnstenv
add
adc
hlt
dec
mov
add
rcr
push
jmp
adc
add
add
lods
out
cli
lahf
nop
rorb
ss
outsl
sbb
push
add
cmc
inc
add
mov
xor
in
sti
shlb
pop
test
xchg
addr16
fwait
cmp
add
add
add
mov
xbegin
add
mov
int3
sti
mov
push
in
pop
sbb
stos
mov
rorl
add
or
sub
add
dec
sbb
clc
push
stc
aas
test
xchg
adc
add
mov
push
inc
clc
popa
add
mov
in
testb
in
jmp
clc
and
mov
mov
jae
add
clc
in
mov
add
add
add
or
aas
clc
mov
clc
ret
clc
cmp
clc
fmuls
clc
cmc
xchg
mov
clc
jnp
into
popa
add
pop
jg
cmc
xchg
outsb
xchg
cmp
ljmp
fidivl
stos
cltd
ficomps
into
xchg
imul
incl
or
or
add
sti
test
add
clc
inc
clc
inc
clc
sahf
outsl
mov
movsb
clc
inc
add
jecxz
stos
ja
sub
pop
in
fistl
add
adc
add
mov
add
mov
cmp
clc
push
mov
lods
cld
push
add
call
jl
clc
dec
mov
xlat
sub
clc
jns
out
loopne
jl
push
repnz
mov
ljmp
push
cmp
sub
adc
add
test
mov
clc
cmp
add
test
sti
mov
add
jo
add
mov
add
mov
add
add
mov
jnp
frstor
jnp
add
dec
adc
add
clc
out
into
xchg
xchg
ljmp
leave
popa
add
xchg
cmp
push
popf
cmp
inc
clc
fwait
cmp
add
sar
jnp
push
jge
push
add
test
pop
jmp
jnp
fbstp
nop
jb
add
gs
jnp
xchg
fs
sbb
add
clc
mov
pop
lcall
push
clc
and
push
pop
sbb
add
cmp
xabort
push
add
add
mov
into
sbb
add
adc
add
add
cmp
sub
add
lods
add
add
add
xor
add
clc
xchg
xor
add
in
push
add
mov
add
add
sub
ss
xchg
ret
clc
push
xchg
lods
jecxz
sbb
adc
add
icebp
sub
je
clc
push
fstpl
in
mov
xabort
sti
lret
stos
in
aam
clc
sbb
movsb
clc
call
in
into
outsb
bound
add
inc
add
or
add
fimull
pop
movsl
clc
sbb
add
leave
insb
movsl
clc
adc
add
cltd
jle
sbb
dec
aam
dec
xor
and
add
clc
fstpl
add
mov
shrb
xchg
mov
add
sbb
xor
add
adc
add
and
add
add
enter
mov
clc
sar
stc
xchg
out
xor
add
add
jbe
xchg
icebp
clc
cmc
jae
add
add
clc
cmpsb
clc
push
scas
mov
pop
cli
or
adc
jae
add
addr16
sbb
lret
int
cmp
pop
sub
mov
sbb
push
repnz
add
cmp
jmp
clc
repnz
sbb
mov
mov
add
pusha
add
push
lcall
imul
imul
add
je
cmp
aam
clc
sub
or
add
xchg
push
jp
mov
in
cmpsb
clc
fildll
pop
mov
fcompl
push
mov
sahf
adc
clc
mov
add
sub
add
xchg
jno
add
add
add
sbb
clc
push
fisttpl
call
pop
adc
add
rorl
jmp
call
fstpt
jge
lea
add
into
rcll
iret
arpl
add
movsl
clc
into
mov
sar
clc
rcl
mov
lcall
fs
inc
clc
cmp
sahf
mov
decb
hlt
inc
clc
lcall
add
sar
clc
mov
jnp
pop
clc
dec
fnstsw
add
sbb
clc
sarl
add
and
add
je
add
add
clc
pop
mov
jp
clc
jo
add
push
arpl
add
push
clc
and
xor
add
clc
mov
clc
cmp
adc
mov
push
cld
mov
clc
lret
jecxz
xor
add
in
xchg
push
mov
clc
inc
add
and
js
mov
xchg
add
add
out
adc
add
sti
mov
test
in
and
add
adc
add
add
into
fs
or
or
add
int3
jl
add
add
xor
add
clc
cmp
fdivs
mov
sub
push
add
imul
clc
addr16
bound
add
add
hlt
push
add
inc
add
addr16
and
jl
sahf
leave
sbb
clc
xchg
xchg
sar
add
clc
fwait
adc
inc
add
mov
add
mulb
add
clc
lcall
add
out
mov
dec
mov
clc
mov
dec
repnz
add
mov
pop
adc
add
adc
add
jb
add
jmp
insl
or
sar
cltd
lahf
pop
sbb
in
inc
clc
or
add
clc
in
jb
add
xor
pop
inc
clc
pop
mov
add
add
scas
repnz
clc
mov
movsb
clc
adc
clc
add
add
mov
add
add
add
add
scas
sbb
dec
cmp
es
data16
sbb
decl
add
jo
add
pop
out
xor
add
adc
add
test
cmp
add
cli
aad
inc
clc
mov
push
add
clc
cltd
in
dec
jmp
add
xchg
jmp
cmp
pop
lcall
aas
xor
add
stos
or
clc
insb
insb
aaa
mov
mov
push
cmp
in
mov
inc
clc
bound
add
add
sahf
lahf
addr16
aaa
sub
add
mov
scas
adc
add
jae
add
add
fs
jmp
jno
add
xor
add
hlt
cmp
or
add
int
or
pop
fsubs
mov
clc
and
add
fmulp
leave
sar
aas
xchg
aas
cwtl
sbb
scas
jns
xor
add
movsl
clc
fwait
mov
or
movsb
clc
dec
pop
clc
mov
dec
stc
inc
clc
nop
jmp
inc
add
jnp
dec
popf
cmp
mov
jge
cmp
inc
clc
outsb
or
add
or
push
push
clc
pusha
add
lods
mov
repnz
iret
cltd
nop
stc
daa
clc
aam
sub
push
seta
clc
pop
adc
add
sbb
clc
sar
sti
mov
pop
pop
sub
clc
mov
mov
and
add
pop
inc
clc
pop
out
icebp
aaa
xbegin
add
or
clc
or
insb
cmp
in
fiaddl
pop
clc
add
add
call
aad
popf
or
pop
pop
mov
clc
nop
jp
clc
fidivrl
scas
test
add
lods
and
add
lcall
add
add
add
add
inc
add
clc
or
aas
cmp
pushf
adc
add
out
jge
mov
shl
or
mov
lods
loop
out
mov
test
clc
addr16
push
imul
cmp
mov
clc
idiv
pushf
and
add
movsb
clc
inc
clc
arpl
add
add
out
pop
or
add
xor
add
fwait
adc
add
imul
sar
clc
dec
aas
lods
notl
clc
iret
addr16
lods
or
xchg
mov
mov
ja
add
add
xchg
xor
add
clc
cmp
adc
add
out
pop
clc
lods
stos
jle
and
add
clc
stos
paddd
add
fisubs
clc
push
ss
and
add
add
and
add
add
clc
pop
stc
in
mov
pop
inc
clc
roll
sbb
xor
add
clc
into
inc
add
pusha
add
mov
add
cmp
adc
add
inc
add
push
xlat
or
clc
xchg
dec
ret
cmp
mov
jge
mov
clc
xabort
jmp
fldt
sub
xchg
enter
cld
aaa
fidivl
clc
jae
add
jno
add
mov
out
test
lods
sti
cmp
inc
clc
jg
bound
add
pop
pop
dec
mov
add
mov
daa
clc
cmp
clc
mov
leave
sar
cmp
mov
lods
mov
add
vorps
sub
clc
lods
push
lods
enter
cmp
jg
xchg
ss
add
mov
add
popa
add
sub
fstpt
add
add
test
add
daa
clc
push
push
sbb
mov
fbld
sar
inc
add
loope
adc
add
add
cltd
mov
mov
add
shll
xchg
lods
mov
clc
and
add
clc
mov
adc
add
stc
mov
lret
clc
mov
sub
dec
add
add
clc
inc
clc
enter
lods
push
add
or
push
lods
and
add
clc
add
add
mov
clc
fdivrp
push
add
popa
add
push
clc
xchg
mov
sub
fisubl
add
jg
cli
mov
clc
mov
rol
clc
xchg
jge
add
sub
adc
add
clc
xabort
cmp
add
popa
add
in
sub
scas
stos
dec
test
imul
sbb
jmp
xbegin
add
and
add
add
add
xor
clc
fs
push
add
in
vcmpps
push
cmpsb
clc
mov
jecxz
mov
call
arpl
add
clc
mov
push
mov
jle
inc
clc
stc
adc
sti
xchg
movsl
clc
cmpsl
clc
mov
popa
add
loope
jb
add
mov
jbe
add
xor
add
jge
add
pushf
outsb
xchg
jo
add
add
test
sahf
iret
push
test
jg
stc
mov
into
mov
rclb
add
iret
xchg
loop
adc
add
sbb
add
aas
sub
add
add
pushf
push
and
add
clc
and
add
add
lret
inc
clc
jle
fists
add
jbe
add
gs
pop
clc
lahf
push
add
ss
adc
add
add
add
add
stc
xchg
xchg
jge
clc
inc
add
hlt
in
push
negl
add
test
enter
out
sub
mov
push
inc
add
cmp
push
sbb
add
add
add
stos
add
add
add
cmpsl
clc
adc
mov
fisttpll
inc
clc
repz
vcvtdq2ps
mov
pop
add
pop
loope
js
mov
jmp
add
iret
cmp
clc
rcrb
dec
jp
clc
pop
ret
add
popf
push
out
loope
daa
clc
imul
cmp
sbb
cmp
clc
fisubs
clc
fcmovu
inc
add
or
clc
adc
add
testb
clc
push
inc
add
pop
mov
aam
sbb
repz
clc
xabort
xchg
xchg
inc
clc
push
jecxz
lods
insl
test
add
jno
add
add
leave
inc
add
xor
add
fsts
popa
add
scas
sub
add
sahf
gs
fmull
movsb
clc
fstps
sar
push
add
mov
mull
clc
mov
and
add
idiv
or
add
xchg
dec
pop
xchg
sar
add
ficomps
add
nop
in
pusha
add
lcall
add
add
repz
add
add
add
add
xadd
or
das
jmp
rcrb
mov
lods
ds
dec
mov
add
sar
add
mov
mov
dec
and
cmc
xor
add
add
stos
xchg
sbb
clc
sub
xchg
cwtl
in
add
add
cmp
sbb
add
ficoml
add
clc
pop
int
xor
add
add
daa
clc
push
add
cs
xchg
fidivrl
push
test
test
mov
add
test
xabort
push
add
inc
add
dec
lret
inc
add
xor
add
not
inc
clc
push
cmp
sbb
mov
xor
aad
add
add
clc
or
add
add
dec
pop
inc
clc
imul
aas
mov
add
mov
aas
pop
sbb
add
xchg
fmul
popf
mov
add
loopne
pop
repz
int3
mov
add
clc
mov
mov
out
fs
xchg
data16
push
daa
clc
loopne
ret
clc
cs
popf
inc
clc
and
es
xchg
ret
clc
push
add
pop
clc
xchg
xabort
xor
add
add
push
clc
sbb
add
imul
jno
add
nop
je
cmp
sub
add
fwait
and
jmp
imul
push
movsb
clc
xlat
inc
clc
pop
clc
xlat
aas
pop
in
xchg
not
inc
add
or
loop
ss
clc
test
clc
inc
add
pop
cltd
or
std
xchg
mov
lret
cld
mov
fst
push
add
out
pop
mov
add
push
out
aaa
fstpl
dec
jno
add
insl
xor
stos
mov
fiadds
add
cmp
pop
xor
add
pop
clc
push
notb
mov
std
add
pop
gs
mov
mov
loopne
in
das
fs
sbb
clc
ja
and
jg
ja
push
cmpsl
clc
ss
cmp
add
scas
push
and
add
clc
mov
test
clc
cmpsl
clc
jle
sahf
mov
sti
addr16
cmp
add
das
adc
add
clc
imul
add
add
mov
dec
cmp
inc
clc
or
add
mov
ret
clc
popf
insb
in
xchg
xchg
nop
inc
add
scas
jne
add
xabort
cmpsb
clc
mov
scas
and
add
push
add
mov
jbe
add
and
add
add
clc
sub
add
push
rclb
add
jle
lock
inc
clc
test
mov
xor
add
pop
clc
jg
clc
add
add
dec
int3
outsb
jl
aam
or
js
jne
add
cmp
clc
mov
clc
jge
int3
ror
lcall
ret
clc
push
loope
scas
rcll
jne
pop
imul
sub
sbb
add
imul
scas
cmp
jmp
jg
pusha
add
nop
ljmp
push
push
pop
in
mov
jmp
clc
movsl
clc
cmp
add
xor
add
clc
in
ret
cmp
clc
xchg
ds
aas
adc
add
clc
clc
clc
lahf
fcmove
pop
inc
add
push
add
pop
pushf
nop
call
clc
cwtl
sar
test
mov
notl
popf
sar
clc
push
add
bound
add
cmp
add
aad
add
sbb
add
add
cmp
aaa
push
add
and
add
add
mov
clc
jmp
add
daa
clc
push
add
ss
add
clc
or
add
add
clc
cmp
add
add
adc
addr16
lods
mov
movsb
clc
cltd
ds
dec
sub
cmp
or
add
add
ljmp
test
fadds
stos
and
insb
xchg
adc
add
add
cmp
mov
and
add
ja
ljmp
cmp
clc
in
jae
add
clc
xchg
push
clc
lret
xor
mov
cmp
add
add
or
mov
into
mov
add
sbb
clc
clc
or
popa
add
jb
add
in
add
add
xor
add
mov
imul
cmp
pushf
add
add
add
imul
jnp
cmp
lahf
sbb
mov
clc
sub
add
pop
fnstenv
push
clc
jnp
add
dec
insb
inc
clc
add
add
jp
pop
sub
adc
add
loope
pushf
mov
xchg
dec
lock
clc
mov
add
loope
aas
repnz
out
fnstsw
adc
add
add
dec
mov
fbld
arpl
add
clc
daa
clc
and
add
clc
jne
xchg
arpl
add
icebp
xchg
xchg
sub
add
iret
test
inc
clc
sar
clc
fiadds
sahf
xabort
loopne
and
add
test
cmp
fbstp
pusha
add
inc
add
scas
mov
clc
xchg
loop
push
jbe
clc
in
fnstsw
clc
push
dec
lods
or
scas
or
lods
ljmp
lods
arpl
add
pop
pop
sbb
and
add
clc
sarb
cmpsl
clc
negb
jbe
clc
mov
out
cmp
jb
add
sar
test
add
cmp
clc
push
lock
add
jno
add
arpl
add
mov
clc
fdivrs
add
xor
add
inc
clc
xor
add
imul
jp
add
mov
fisttpl
je
aam
adc
cmp
out
xor
add
mov
add
mov
loop
inc
clc
mov
sbb
inc
clc
pop
clc
mov
clc
ja
into
movsl
clc
in
movsl
clc
pusha
add
sar
add
fistpl
pusha
add
jne
cmpsl
clc
in
cmp
add
cmp
fldenv
add
jno
add
add
pop
fsubl
mov
nop
ret
add
push
lcall
enter
daa
clc
dec
or
cmc
test
push
clc
aas
or
lahf
movsb
clc
cmp
clc
or
xor
add
adc
add
inc
add
pusha
add
inc
add
sbb
clc
xbegin
rcr
arpl
add
add
add
cmp
outsl
sub
clc
in
pop
sbb
jb
add
clc
rorl
popf
fwait
int3
idiv
dec
mov
xbegin
jo
add
clc
ret
clc
sbb
out
and
clc
pushf
pop
jg
aad
sub
dec
jge
pop
in
fwait
pop
fldt
mov
sbb
cs
sbb
outsb
fprem
xchg
pop
mov
clc
aas
gs
push
add
fadds
std
cmp
in
jno
add
and
add
add
gs
loop
fs
mov
mov
clc
pop
and
clc
notl
add
aas
mov
add
add
inc
clc
add
add
add
loopne
lods
lret
xor
dec
clc
ljmp
das
in
mull
ja
jnp
ja
add
iret
sar
int
add
int
add
pop
adc
add
mov
repz
leave
into
push
add
jb
add
pop
xor
cmp
fldt
add
add
out
ret
clc
sti
ret
clc
fucomp
dec
xor
add
cmp
add
movsl
clc
movsb
clc
jl
cmp
faddl
add
add
add
clc
inc
clc
shl
clc
aam
jb
add
add
mov
cmp
inc
clc
mov
jnp
mulps
add
clc
outsl
in
pop
clc
xchg
lcall
popf
outsb
dec
das
jno
add
clc
push
add
cmp
add
xchg
fdivrl
xchg
dec
push
clc
test
jno
add
clc
mov
clc
popf
sbb
mov
clc
push
add
add
cmp
clc
pop
clc
inc
clc
dec
inc
add
sub
clc
imul
bound
add
imul
clc
cmp
push
clc
pop
clc
outsb
dec
outsl
push
add
pop
icebp
adc
add
add
je
jo
add
clc
std
mov
sbb
clc
bound
add
mov
xor
add
add
out
sbb
data16
in
aam
add
ds
pop
cli
dec
dec
cmp
mov
mov
sbb
daa
clc
xor
insb
pop
adc
push
cs
cmp
push
and
add
clc
push
add
aaa
daa
clc
inc
clc
loopne
xchg
enter
push
clc
inc
clc
ljmp
clc
test
mov
add
clc
ficoml
cmp
clc
fldt
add
pusha
add
pop
mov
mov
and
add
add
clc
xor
add
add
add
jb
add
add
push
pop
stc
sar
hlt
sahf
sub
mov
xchg
sahf
add
xor
mov
xbegin
add
leave
std
xor
add
and
add
mov
hlt
pop
and
add
loopne
repnz
add
clc
sub
popa
add
fsts
fmuls
xor
sub
sar
jle
movsb
clc
negb
dec
cmp
clc
test
lcall
add
xor
add
mov
mov
clc
adc
add
lret
mov
add
cmovp
clc
xabort
sbb
dec
cltd
pushf
sub
insl
mov
jbe
clc
es
testb
add
data16
dec
je
cmp
pop
cmc
js
push
ss
xchg
data16
push
sar
sar
insl
cltd
add
add
add
cmc
pop
mov
add
jl
push
fdivrp
cs
icebp
addr16
push
add
and
add
adc
dec
nop
insl
and
add
add
clc
gs
sti
nop
dec
js
repz
pop
fwait
xor
add
imul
add
int3
pop
into
cmp
dec
gs
adc
add
mov
jle
add
leave
loopne
mov
add
jl
add
add
movsb
clc
mov
loop
stos
movsl
clc
push
dec
pop
add
cs
sti
xchg
cs
clc
pusha
add
ret
repz
fisttpll
xchg
xor
add
shrb
and
addr16
cwtl
stos
loopne
mov
ja
clc
sbb
add
ds
imul
add
push
add
addr16
xbegin
repnz
clc
add
adc
add
clc
xbegin
jle
add
aam
pop
imul
add
in
out
xchg
popa
add
into
push
add
data16
mov
dec
and
add
clc
mov
fidivl
add
hlt
mov
inc
add
cltd
and
add
sub
dec
bound
add
xchg
mov
clc
idivb
sub
sbb
add
cltd
shrb
add
xchg
sub
add
jp
lea
clc
out
inc
clc
mov
add
nop
lret
cmp
fs
fdivrp
cmc
lcall
clc
clc
mov
call
stos
aad
fcoms
or
xchg
push
xor
add
sub
pop
clc
popa
add
xor
add
lods
in
push
or
out
or
clc
inc
clc
and
mov
clc
mov
cld
pop
or
scas
push
adc
stos
xor
cmpsb
clc
fs
popa
add
ret
jb
add
cmp
pop
lret
test
add
add
loop
popf
jae
add
scas
jecxz
addr16
inc
add
mov
add
add
ja
add
or
mov
repnz
add
xchg
out
imul
cmp
xor
xchg
pusha
add
into
imul
and
add
repnz
add
add
cmp
test
pop
clc
adc
add
arpl
add
into
add
cmp
sub
jbe
clc
add
add
in
mov
mov
pop
movsb
clc
and
add
and
add
inc
add
mov
daa
clc
sar
clc
jp
add
mov
clc
or
and
hlt
out
out
jmp
jne
cltd
sbb
jmp
add
xchg
mov
clc
pop
adc
add
dec
xlat
std
xchg
nop
push
add
xor
add
mov
fisubrl
add
fildl
add
clc
cmp
jne
ds
add
mov
inc
clc
add
add
inc
clc
xor
pop
mov
std
dec
pop
imulb
clc
ret
test
pop
add
add
add
enter
jmp
add
xchg
mov
sub
mov
clc
and
cwtl
shl
clc
sar
daa
clc
test
aas
xor
add
pop
clc
out
mov
call
cli
or
clc
outsl
fistl
dec
push
test
inc
add
cmp
add
fnstsw
lcall
dec
mov
jb
add
add
clc
sbb
sbb
arpl
add
mov
mov
fcomps
std
popa
add
adc
add
add
add
adc
add
add
mov
clc
jnp
xchg
in
sbb
inc
clc
xchg
stc
mov
mov
xor
add
jecxz
cmp
es
dec
outsl
fistpl
or
mov
add
fisubs
clc
pop
dec
inc
clc
inc
add
bound
add
lret
repnz
clc
scas
bound
add
lods
jo
add
stc
inc
add
cmp
js
clc
cld
xor
es
push
add
ffree
clc
clc
push
stos
je
mov
clc
add
add
clc
pop
sbb
pand
and
add
aas
xchg
clc
dec
jmp
aaa
shl
clc
xchg
xor
call
add
adc
add
mov
add
mov
dec
lods
cmp
jnp
add
push
inc
clc
xchg
outsl
pop
clc
xor
add
lahf
and
add
pop
cmp
add
outsb
clc
xchg
xor
scas
jmp
add
add
addr16
dec
pop
dec
pop
xchg
lock
add
iret
jae
add
clc
sbb
clc
sbb
lea
and
add
loope
inc
clc
pop
lods
and
add
clc
loopne
xor
sar
lock
add
mov
jl
leave
repnz
mov
addr16
inc
clc
xchg
xor
clc
mov
mov
outsl
gs
inc
clc
sub
add
push
and
add
add
in
and
add
add
cmp
fdivrl
outsl
int3
aaa
sbb
popa
add
jns
clc
xchg
ret
inc
clc
mov
int
jle
loop
into
sahf
and
add
inc
add
or
push
cmpsb
clc
fsts
add
loope
nop
push
in
dec
dec
mov
loop
pop
mov
in
rcrb
aas
out
mov
pop
lock
out
cs
or
jns
sub
and
add
add
cmp
mov
mul
clc
push
add
xor
add
popa
add
push
clc
mov
dec
cmp
clc
push
push
cmp
aas
mov
clc
loopne
adc
rcrb
lret
lcall
add
add
push
outsl
ret
jl
clc
or
mov
xlat
xchg
imul
fdiv
mov
mov
add
jecxz
xchg
test
clc
insb
xchg
jb
add
add
rclb
cmc
xchg
xor
add
or
add
rep
jmp
shld
pop
clc
shll
ja
clc
enter
pop
clc
cmp
sbb
jmp
sub
push
add
mov
clc
xchg
test
clc
int3
sub
xchg
and
add
clc
sahf
repnz
clc
popa
add
movsl
clc
or
sahf
lret
xchg
es
push
push
add
cltd
fs
sub
clc
cmp
add
daa
clc
rorb
clc
adc
add
add
jmp
clc
aam
ljmp
outsb
pop
stos
inc
clc
and
add
add
xlat
adc
psubsb
add
test
xbegin
add
fimuls
cmp
add
fstp
clc
cli
in
icebp
das
and
add
cli
pop
fcomps
pop
inc
add
sbb
mov
add
mov
push
gs
in
mov
jge
inc
clc
cli
mov
je
dec
mov
mov
xor
lods
cwtl
mov
clc
jo
add
xor
add
clc
cld
ja
clc
fstps
cmp
sub
adc
add
clc
out
into
and
add
cmp
add
cmpsl
clc
mov
gs
jns
and
xor
add
add
test
cwtl
push
scas
dec
das
sbb
add
das
in
clc
dec
push
xchg
aad
outsb
xor
add
inc
clc
ja
clc
iret
sub
add
push
in
or
clc
shrl
add
mov
ss
push
mov
mov
or
sub
add
add
jns
cmp
mov
loope
mov
add
mov
add
fimuls
clc
test
xchg
mov
sub
dec
sbb
clc
jnp
in
lret
hlt
jno
add
and
add
pop
xchg
addr16
push
loopne
ja
clc
sub
add
mov
mov
add
outsb
in
cli
mov
fldcw
clc
in
cmp
add
setbe
lret
xor
add
dec
out
ljmp
add
sbb
clc
es
je
dec
and
add
aam
clc
outsb
jg
xor
clc
jbe
clc
test
push
clc
jae
add
sub
aaa
leave
sub
lods
mov
mov
or
jecxz
jb
add
mov
clc
imul
add
mov
clc
sbb
and
int3
arpl
add
add
dec
fisubrl
repz
and
add
clc
mov
sub
add
pop
imul
mov
dec
cmpsl
clc
sbb
pop
mov
add
jle
clc
and
and
add
push
add
stos
cld
push
add
pop
notb
lcall
inc
clc
pop
mov
xchg
pushf
dec
mov
and
repz
add
push
add
adc
clc
test
add
int
push
sbb
sub
cmc
leave
mov
mov
jmp
clc
xor
add
adc
or
cmpsb
clc
push
add
in
dec
movsl
clc
fxch
stos
jnp
and
icebp
inc
clc
xor
add
clc
add
add
clc
stos
pushf
int3
mov
clc
pop
fsubl
imul
cmp
add
xor
add
push
popf
push
fwait
inc
add
addr16
cmpsl
clc
popf
je
clc
in
cmp
add
xchg
inc
clc
in
inc
clc
cmp
push
add
adc
add
test
je
jge
add
lahf
in
sti
adc
add
ficomps
sub
dec
and
add
clc
push
mov
out
mov
add
cwtl
mov
push
cmp
pushf
aam
inc
clc
jle
cld
jns
xbegin
clc
fdivs
jp
inc
add
pop
ficomps
xlat
rorb
add
data16
add
add
pusha
add
popa
add
cmp
fwait
mov
add
clc
mov
add
testb
int3
mov
sub
clc
and
add
add
sar
clc
add
add
mov
out
int
rorl
add
xchg
xchg
pushf
call
clc
pop
jo
add
cli
enter
clc
or
clc
loope
and
adc
add
clc
sbb
xchg
sar
pop
adc
add
inc
add
pop
aad
clc
xchg
jp
add
xchg
addr16
inc
add
mov
and
add
sbb
xchg
cmp
add
add
ficomps
add
fiaddl
add
push
popf
sbb
pop
outsb
or
xchg
rolb
mov
clc
adc
add
clc
mov
adc
add
add
cmpsb
clc
sub
clc
scas
shrb
inc
clc
mov
add
add
ds
clc
add
add
xchg
adc
clc
mov
clc
or
pop
pop
dec
jno
add
stos
dec
cmpsl
clc
or
stc
in
addr16
inc
clc
or
clc
in
pswapd
mov
mov
gs
inc
clc
push
cmp
sarb
addr16
dec
mov
add
push
mov
clc
inc
clc
scas
sti
fistl
jg
jecxz
sar
fiaddl
or
clc
cmp
or
pop
mov
movsb
clc
or
cmc
jg
cmp
adc
add
mov
adc
add
add
mov
lret
sbb
add
sbb
rcr
push
int3
iret
inc
clc
mov
add
loope
ret
clc
movsl
clc
mov
cmp
mov
push
add
jle
lret
ss
mov
clc
ss
add
in
cmp
pushf
iret
or
clc
inc
clc
push
add
js
dec
lea
lcall
add
test
repz
scas
push
add
pop
add
add
sbb
and
add
add
xor
add
sar
outsb
xlat
iret
inc
add
fistpll
clc
mov
push
or
out
cwtl
nop
out
xchg
test
out
add
bound
add
cmp
add
dec
aas
jbe
clc
push
dec
out
pop
pusha
add
push
clc
mov
jne
clc
shlb
add
in
clc
jno
add
push
add
ss
cwtl
daa
clc
xchg
push
clc
mov
cld
cmp
stos
sar
outsl
cli
stos
sar
fnstenv
add
bound
add
mov
push
cmp
mov
and
add
mov
add
add
out
std
jnp
pop
cli
stos
fildll
add
cmp
clc
fisttpl
inc
clc
mov
clc
and
add
daa
clc
xchg
ja
fldt
loope
lods
adc
add
clc
jno
add
add
arpl
add
pop
shlb
add
or
clc
jmp
hlt
fistpll
outsb
ljmp
add
sub
add
cmp
add
add
dec
mov
dec
lcall
add
pop
sbb
aaa
clc
xchg
xchg
popf
lock
clc
hlt
in
and
mov
pop
in
lods
es
cltd
inc
clc
inc
clc
fsubr
add
inc
clc
mov
xchg
je
add
push
clc
and
mov
jmp
add
fisubs
add
in
xchg
stos
jecxz
test
sub
sbb
insl
mul
clc
sti
mov
add
mov
mov
mov
add
mov
cmp
inc
clc
sbb
jp
int3
incb
add
add
add
push
popa
add
imul
pop
mov
icebp
imul
clc
sbb
xor
outsb
jb
add
add
add
clc
outsl
cmp
push
xor
add
pop
mov
and
or
add
add
xor
iret
push
add
add
mov
add
adc
sub
add
sub
push
cmc
sti
cmp
xbegin
sar
xor
adc
add
sub
clc
mov
xor
add
add
inc
add
cmp
sbb
add
std
iret
sbb
insb
lock
push
add
popa
add
aam
jg
insb
pop
arpl
add
add
add
popa
add
hlt
mov
add
inc
clc
jmp
jae
add
stos
sub
clc
sbb
jae
add
pop
repnz
mov
jno
add
outsb
cmp
or
loop
add
inc
add
test
fstl
add
cmp
mov
adc
add
clc
outsb
call
clc
cmp
mov
ljmp
fsqrt
pop
clc
xchg
jp
sub
clc
pop
add
add
cmp
add
cmp
fisubs
clc
movsb
clc
dec
mov
mov
cmc
dec
mov
pop
add
add
clc
cli
int
add
sub
mov
clc
dec
xchg
roll
add
add
cs
clc
add
outsb
jns
clc
and
add
cmpsl
clc
data16
mov
xbegin
mov
add
loopne
push
xchg
out
movsb
clc
pushf
or
fnstenv
js
leave
dec
add
add
mov
outsl
hlt
jne
clc
int3
adc
add
adc
add
add
cmc
imul
add
add
cmpsb
clc
mov
stos
addr16
mov
clc
cmc
lods
jle
clc
inc
clc
outsb
getsec
inc
add
movsb
clc
jle
icebp
or
add
ss
xlat
popa
add
cmc
push
add
popa
add
cmp
push
add
mov
clc
daa
clc
cmp
clc
xchg
xlat
out
adc
add
add
outsb
dec
jns
mov
ret
add
mov
clc
dec
sahf
push
lods
ret
clc
mov
in
push
mov
push
add
test
jnp
clc
jnp
xor
sysenter
insl
aas
imul
clc
adc
add
jl
mov
add
mov
jo
add
sbb
clc
mov
pop
push
or
mov
clc
fwait
sbb
cmp
out
xor
clc
jb
add
cs
sbb
es
aad
clc
clc
lock
xchg
sbb
dec
inc
add
sub
add
out
push
add
ja,pt
or
xor
add
clc
clc
cmp
adc
sbb
jbe
pop
int3
jno
add
add
pop
or
sub
add
mov
add
sbb
mov
mov
in
push
clc
push
add
bound
add
add
add
ficompl
clc
adc
add
clc
add
add
clc
fucomp
inc
add
data16
in
jae
add
mov
fwait
xor
add
sbb
bound
add
clc
pop
sbb
mov
inc
clc
sar
clc
insb
sub
add
dec
jp
mov
mov
add
push
pop
cmp
pop
rolb
and
sub
add
mov
bound
add
clc
fldt
cmp
cld
int3
sbb
jecxz
push
add
push
add
push
clc
movsb
clc
dec
vmovhps
std
or
loop
lahf
mov
sbb
clc
or
out
arpl
add
clc
aam
aaa
xchg
push
add
es
test
jns
mov
fisubl
outsl
sbb
add
mov
mov
add
mov
mov
sub
xbegin
jne
add
add
jne
movsb
clc
add
add
and
add
add
add
js
clc
in
addr16
add
add
add
in
xchg
mov
mov
cmp
add
add
add
out
insb
in
push
add
add
cmpsb
clc
pop
sbb
xor
add
clc
ljmp
adc
add
fnstcw
push
and
dec
aas
mov
clc
jo
add
test
dec
sbb
clc
mov
cmpsb
clc
mov
sbb
add
js
clc
push
and
ss
imul
and
sbb
clc
xor
lret
test
adc
inc
add
cmp
clc
pop
loope
stos
ss
xchg
push
or
add
aam
adc
clc
pxor
sbb
cmp
dec
push
aam
add
or
lret
fidivrl
pop
inc
clc
cmp
clc
xchg
js
sar
ret
clc
cmp
mov
js
pop
clc
jecxz
lcall
add
fidivl
add
lret
cld
scas
inc
add
mov
add
inc
clc
std
enter
clc
cmp
add
cmp
add
sahf
sbb
imul
or
clc
jo
add
test
adc
inc
add
push
lret
leave
repz
adc
add
add
int
loope
adc
cltd
lock
jle
cmp
mov
test
divb
add
dec
movsl
clc
sbb
add
or
fdivrp
cwtl
dec
lcall
movsb
clc
xor
add
add
or
push
mov
ret
clc
enter
dec
testl
inc
add
mov
sahf
jbe
clc
insl
or
mov
sar
add
jno
add
add
nop
inc
clc
add
out
fwait
jmp
movsb
clc
push
clc
xchg
pop
adc
ret
clc
insl
inc
add
pop
mov
movsb
clc
leave
sub
mov
dec
ret
clc
ja
clc
and
fimull
mov
arpl
add
ret
xchg
popf
jne
fwait
inc
clc
dec
out
xor
add
jmp
add
fs
sar
jne
pop
clc
ljmp
add
adc
xor
add
add
mov
cmp
clc
inc
clc
xchg
ja
mov
pop
sbb
sar
pop
adc
adc
add
stc
and
add
xchg
nop
shr
xor
add
dec
push
clc
or
mov
add
mov
or
inc
add
xchg
mov
xchg
iret
inc
add
xchg
cmpsb
clc
cmp
xlat
sbb
inc
add
inc
clc
cmp
add
popf
jle
clc
popf
jl
push
add
xlat
movsb
clc
jg
and
add
hlt
push
clc
ja
clc
mov
clc
js
clc
pop
fs
pop
cmpsl
clc
lret
out
js
insl
inc
add
lock
std
js
push
sub
clc
jns
sbb
loope
lea
clc
data16
sbb
add
icebp
mov
sahf
into
data16
xchg
push
add
lcall
shrl
clc
stos
inc
add
pop
shl
clc
pop
adc
add
adc
add
push
cli
and
add
dec
inc
add
inc
clc
outsb
or
mov
addr16
push
xor
jle
xor
add
arpl
add
push
add
inc
clc
pop
mov
add
push
add
bound
add
bound
add
sub
sti
xor
add
add
icebp
psrld
clc
xchg
sahf
pop
clc
jno
add
in
js
fs
or
mov
add
insb
pushl
add
add
or
add
outsb
dec
mov
rcrl
add
sets
enter
add
push
and
add
mov
clc
sbb
ret
clc
iret
ja
mov
test
sarl
add
popf
int
imul
into
pop
sub
pop
pop
aad
jmp
cmc
cmp
out
cwtl
scas
dec
pop
leave
and
add
nop
mov
sub
push
push
add
mov
clc
test
ss
xor
add
clc
and
add
insb
filds
clc
psllq
ret
pusha
add
imul
and
fimull
add
imul
xor
cmp
icebp
mov
addr16
jge,pt
dec
sub
ja
jns
add
jle
clc
cld
data16
fwait
and
add
xchg
cmp
sub
add
sar
arpl
add
mov
or
xor
add
add
or
stos
dec
sar
pop
rclb
mov
roll
clc
xchg
popa
add
inc
add
push
add
cwtl
cmpsl
clc
ret
clc
xchg
lret
dec
fsubl
add
clc
stc
mov
lods
mov
dec
and
add
add
into
lods
pop
clc
pop
ja
popa
add
in
and
add
add
cld
push
sar
add
mov
clc
call
cmp
clc
inc
clc
and
add
clc
adc
add
cs
add
add
mov
sti
pop
mov
stos
gs
cmp
sub
jb
add
clc
cmc
pushf
and
add
enter
add
negb
add
xor
jge
clc
cmp
add
nop
or
add
arpl
add
add
jg
imul
inc
clc
push
pop
jge
clc
pop
xchg
push
add
in
enter
clc
dec
mov
sbb
pushf
push
mov
or
add
hlt
cmp
mov
cltd
insb
xchg
in
sbb
clc
dec
jbe
lods
outsl
sbb
add
add
xor
lret
xbegin
sbb
add
repz
add
add
add
jge
clc
cmc
insb
inc
add
ret
add
xor
add
leave
es
cmc
sbb
jno
add
push
imul
movsl
clc
pop
in
jg
push
add
add
clc
xchg
mov
xchg
stos
popa
add
movsl
clc
jg
clc
cmp
clc
iret
ja
clc
push
add
mov
shlb
clc
es
aaa
adc
add
inc
add
pop
test
push
mov
fists
add
add
scas
pop
loop
sbb
xchg
inc
clc
lods
add
add
push
pusha
add
or
out
inc
clc
jo
add
das
pop
clc
sar
mov
cmp
add
jns
cmp
mov
add
insl
mov
add
in
es
fyl2x
mov
clc
or
inc
clc
xor
mov
cmpsb
clc
cmp
in
lret
dec
es
clc
fidivrl
jl
dec
test
add
add
add
clc
test
clc
adc
adc
pop
jbe
clc
sub
bound
add
clc
mov
ja
add
rolb
add
ds
add
stos
lea
clc
jecxz
push
add
dec
fisttps
pop
aaa
loope
daa
clc
add
add
add
pop
pop
add
imul
js
add
add
sub
add
js
clc
or
xabort
stos
test
popf
popa
add
cmp
clc
loope
dec
aad
test
clc
jl
clc
mov
in
mov
pushf
sahf
scas
lcall
xor
add
jle
imul
clc
add
add
push
dec
lods
dec
jb
add
dec
mov
out
cltd
xlat
push
add
cwtl
push
sub
jg
movsb
clc
mov
jnp
jns
call
or
clc
cmp
jno
add
clc
and
add
clc
mov
clc
aam
mov
add
add
sub
clc
push
pushf
sbb
pop
in
adc
clc
pop
cmp
xchg
adc
add
add
leave
jae
add
clc
std
jo
add
int3
cltd
jle
std
cmp
into
dec
sbb
mov
outsl
or
add
cmp
add
mov
xchg
xchg
test
cwtl
test
mov
add
fiadds
clc
pop
jp
mov
mov
add
add
lret
add
add
clc
scas
loopne
sar
popf
xchg
pop
rcrb
push
mov
dec
sti
sar
sbb
and
add
push
add
out
mov
insb
ret
clc
mov
mov
ja
add
ds
jbe
into
mov
mov
dec
aaa
pop
ds
out
int3
nop
cmp
dec
js
sub
cmp
add
mov
clc
mov
pop
sti
inc
clc
xchg
stos
push
or
cmp
add
std
jo
add
add
aam
add
mov
clc
in
sahf
cwtl
mov
clc
push
clc
mov
lods
pop
lock
add
pop
mov
insb
jle
dec
jno
add
shlb
clc
mov
or
es
jno
add
iret
outsb
jne
ret
clc
popf
pusha
add
ljmp
in
stos
dec
sbb
into
int3
cmp
clc
out
mov
cltd
cmpsb
clc
int
clc
adc
add
lods
nop
and
mov
and
jmp
clc
repz
clc
call
scas
clc
ret
imul
sub
js
mov
xor
add
cmc
popf
out
and
add
add
pop
popf
repnz
add
add
pop
clc
mov
xbegin
das
push
mov
adc
dec
dec
cld
or
sbb
add
fwait
adc
add
clc
in
jge
add
outsl
pop
sti
cmc
jbe
push
mov
and
add
cmp
and
add
lret
xor
add
stos
jne
add
add
add
clc
int3
mov
sbb
add
clc
sub
pop
clc
xor
jo
add
clc
stos
inc
clc
mov
test
jmp
clc
push
add
mov
add
add
add
add
iret
jnp
jge
or
push
xchg
push
add
int3
xchg
adc
mov
loope
mov
add
test
stos
stc
push
repz
shlb
cmp
pop
arpl
add
pop
push
or
add
add
in
push
add
xor
lea
adc
add
sbb
xor
clc
jecxz
hlt
mov
and
push
dec
stos
push
sub
lea
clc
mov
mov
and
add
cmc
adc
loope
or
sbb
mov
std
dec
dec
clc
arpl
add
add
push
pop
sub
data16
loop
data16
inc
add
dec
push
sub
lcall
daa
clc
int
shrl
in
mov
clc
xor
add
push
add
xor
jns
add
sbb
mov
inc
clc
scas
sbb
clc
push
call
and
add
add
and
add
imul
sub
std
cld
stc
pop
femms
and
add
add
sub
push
xor
es
scas
inc
add
mov
sti
add
movsl
clc
clc
int
clc
adc
in
mov
out
jp
clc
leave
fxch
or
cmp
mov
clc
or
cmpsb
clc
inc
add
jl
add
xchg
aaa
pop
cmp
movsl
clc
add
add
loope
cltd
pop
pop
mov
inc
clc
incl
clc
imul
jb
add
cld
jae
add
clc
aad
add
add
push
mov
add
jo
add
clc
dec
cwtl
adc
add
sub
clc
bound
add
clc
dec
pop
adc
add
scas
sahf
mov
insl
xchg
clc
lret
xor
add
repnz
pop
xchg
add
add
push
add
jne
add
sbb
cltd
xchg
adc
add
and
mov
lahf
and
add
dec
or
add
or
shll
clc
jg
out
aas
mov
dec
add
add
sub
clc
xor
add
into
mov
scas
push
adc
add
fnstcw
bnd
clc
or
push
add
cmp
xchg
lahf
jnp
xchg
and
aas
cmp
enter
add
add
js
add
imul
sar
scas
jecxz
clc
sub
add
add
dec
mov
add
outsl
add
jbe
clc
cmp
imul
mov
add
aad
pop
js
out
mov
leave
insb
bound
add
test
sub
clc
repz
cmp
movsb
clc
add
inc
add
mov
out
xor
add
out
lods
ljmp
mov
repz
out
fisttpll
xor
add
add
imul
fiaddl
clc
mov
fwait
dec
insl
xlat
or
and
add
add
lea
pop
clc
dec
add
ljmp
add
and
pusha
add
nop
push
arpl
add
clc
jmp
add
lock
add
jnp
insl
daa
clc
xor
enter
out
push
add
nop
push
js
clc
sub
clc
mov
dec
std
icebp
xchg
addr16
clc
xor
clc
and
add
clc
cmp
cli
jne
mov
popf
xchg
add
add
pop
movsl
clc
negl
clc
sub
mov
mov
xabort
add
add
add
inc
add
jecxz
test
loop
into
notb
cmp
jo
add
clc
sub
popf
fsubrl
roll
add
jne
clc
xchg
out
inc
add
std
cmp
add
cmp
pop
cmp
add
mov
or
clc
lods
out
push
clc
xchg
outsb
jmp
pop
sbb
xchg
out
dec
mov
xor
arpl
add
clc
jo
add
clc
in
ret
test
inc
clc
in
data16
in
in
and
sti
mov
clc
lcall
clc
cmp
test
mov
clc
dec
sub
imul
add
push
dec
pop
jo
add
clc
data16
iret
cmp
add
aaa
push
add
ret
clc
enter
clc
push
inc
clc
pop
mov
mov
clc
cmp
pop
insl
and
add
icebp
sahf
sbb
add
inc
add
and
add
loopne
cld
mov
pop
aad
add
popa
add
insl
inc
add
in
mov
ljmp
jno
add
shlb
add
clc
xlat
or
mov
add
int3
lods
int3
xbegin
divb
add
imul
clc
adc
add
cmp
dec
xlat
cmpsb
clc
cmp
inc
clc
xor
add
clc
sub
clc
mov
cltd
push
sub
cld
adc
add
scas
clc
lea
add
and
mov
add
or
cmpsl
clc
sub
jmp
xor
add
clc
pop
inc
clc
sahf
loopne
sbb
sbb
dec
mov
clc
mov
add
add
mov
add
add
push
int
sbb
clc
add
add
push
cli
xor
add
jg
mov
clc
lea
incb
shlb
add
jae
add
fwait
stc
repz
xor
add
mov
add
push
add
xchg
sti
dec
add
add
add
add
add
mov
pop
clc
and
add
add
jne
xor
add
imul
scas
jecxz
pop
int3
cmp
adc
jns
clc
aaa
in
add
into
cmp
clc
jae
add
cwtl
lcall
jp
push
clc
xchg
and
jmp
in
push
ja
hlt
mov
or
out
rorb
push
es
adc
add
dec
shr
addr16
xchg
aad
ljmp
out
adc
add
aam
inc
add
jae
add
repz
test
cmp
add
sbb
xor
add
adc
add
jb
add
std
xbegin
add
fs
cmp
clc
xor
clc
sar
add
sub
add
and
add
clc
negb
add
xchg
cmp
jb
add
addr16
fidivl
add
clc
test
xchg
aaa
cmpsb
clc
scas
cmp
add
sub
scas
lret
clc
sar
inc
clc
or
mov
jecxz
inc
clc
pop
fucomp
imul
jne
clc
jne
clc
rcll
add
xlat
inc
clc
test
clc
inc
add
ja
mov
add
push
and
add
add
add
add
mov
ret
jae
add
sahf
jno
add
int
nop
int3
add
add
clc
pop
pop
pusha
add
stc
test
pop
cld
aas
mov
fisttpll
cmp
push
xor
xor
add
lahf
imul
sbb
jl
cs
push
test
jnp
add
loope
or
add
xchg
pop
add
add
xor
add
inc
add
movsb
clc
cmp
xchg
add
add
cmp
add
in
pusha
add
mov
clc
dec
data16
dec
in
clc
inc
clc
adc
add
push
adc
mov
clc
sub
jmp
inc
clc
xchg
push
in
jmp
clc
add
add
clc
sbb
cltd
xlat
cmp
add
inc
add
lahf
clc
and
add
dec
mov
bound
add
clc
sar
cmpsl
clc
jl
pop
clc
iret
and
add
in
add
add
in
sub
add
stos
mov
add
add
add
add
add
mov
add
push
add
das
adc
adc
add
xor
add
int
add
mov
jmp
fs
aaa
xor
add
out
mov
adc
add
hlt
ss
pushf
cmp
cmp
or
inc
add
mov
clc
dec
bnd
adc
add
sbb
clc
rcll
push
mov
push
add
nop
mov
add
add
sub
mov
add
mov
arpl
add
clc
cmpsb
clc
adc
add
sbb
add
or
inc
clc
daa
clc
pushf
std
xor
add
add
add
add
clc
lock
fldenv
add
mov
movsl
clc
xbegin
adc
clc
es
push
add
inc
clc
lret
mov
mov
add
add
sub
add
adc
test
lret
adc
add
stc
xchg
push
sub
vcomiss
add
xor
add
in
or
clc
bound
add
add
insl
dec
into
sub
scas
mov
data16
fmul
push
add
jmp
add
pop
clc
adc
add
add
inc
clc
push
mov
sub
sbb
loope
cmp
leave
cmc
outsl
jnp
dec
out
std
push
clc
rcrl
pop
pop
inc
clc
pusha
add
outsb
pop
popa
add
mov
add
xor
add
add
shrl
imul
add
clc
in
ja
fcom
loope
mov
add
ds
jecxz
push
ja
jp
pop
adc
clc
cli
gs
in
mov
dec
int3
test
add
repz
clc
xabort
adc
add
test
testb
mov
inc
clc
in
dec
nop
pushf
push
push
add
mov
add
add
ljmp
push
in
cmc
arpl
add
aam
inc
add
iret
ret
clc
sub
add
adc
add
out
mov
iret
dec
adc
add
sub
add
xbegin
clc
adc
add
clc
jne
jg
jmp
clc
mov
clc
int
push
add
add
add
push
add
mov
mov
fstl
jbe
sub
sub
or
mov
add
push
or
add
mov
clc
into
mov
clc
clc
imul
scas
iret
jae
add
cmp
fs
out
jb
add
pop
clc
cld
dec
fdivrl
dec
outsb
adc
clc
packuswb
add
add
add
out
test
jnp
add
push
out
ljmp
add
pop
clc
cmpsb
clc
jg
clc
es
sub
movsl
clc
loopne
xor
dec
pop
pusha
add
leave
std
add
fwait
popa
add
data16
aaa
pop
mov
fcomip
sbb
cmp
add
add
sub
fwait
clc
in
std
sub
clc
out
fsubrs
add
add
add
xlat
xchg
dec
cmpsb
clc
data16
cld
or
sbb
add
lcall
gs
repnz
out
adc
add
xchg
adc
add
push
add
ret
clc
jl
add
pop
dec
push
test
sar
aas
or
loopne
addr16
push
rolb
ljmp
add
loop
ret
clc
sub
pop
xor
add
sub
add
xor
add
mov
pop
inc
clc
das
stos
pop
lods
jecxz
push
add
pop
outsl
mov
clc
xor
xchg
xchg
imul
and
add
clc
adc
add
clc
inc
add
ret
add
mov
cmpsb
clc
xchg
ffreep
clc
nopl
fsubrl
clc
cmp
imul
add
dec
pop
pop
es
inc
add
rorl
push
ja
cli
sub
jle
hlt
mov
add
fcoml
addr16
lock
clc
jne
add
lret
sar
add
push
clc
shlb
jmp
xchg
sub
clc
xor
clc
cmp
sbb
aaa
push
in
fbstp
add
mov
add
xchg
sbb
inc
add
jge
clc
popf
shll
or
cmp
mov
sub
clc
push
stos
jp
clc
mov
vcvtps2pd
add
fldenv
add
add
add
add
clc
rcrb
outsl
movsb
clc
enter
add
and
and
mov
pop
or
clc
jle
add
popa
add
loopne
adc
add
clc
cmc
enter
add
pushf
sub
sub
xchg
dec
jnp
clc
sub
pushf
mov
sub
dec
jns
add
pop
dec
bound
add
or
clc
sub
repnz
outsl
jl
fnstenv
add
bound
add
add
outsb
lcall
nop
loopne
push
popf
mov
ja
ret
ds
pop
clc
cmp
add
mov
in
inc
add
insb
lret
add
mov
mov
in
jecxz
sahf
mov
insb
pushf
pusha
add
scas
hlt
adc
add
clc
addr16
mov
int
clc
xbegin
or
popf
add
add
insb
das
mov
add
fwait
mov
add
sahf
mov
mov
clc
sub
or
lea
or
add
cmp
add
xor
add
jo
add
js
mov
dec
jbe
add
je
cmp
mov
xchg
pop
and
add
icebp
imul
loopne
sar
add
jg
loop
adc
clc
or
add
ret
clc
fnstsw
sbb
add
outsb
inc
add
jecxz
lret
sbb
movsb
clc
lcall
add
stos
xchg
and
add
clc
push
add
lcall
arpl
add
imul
fisubs
add
or
clc
sub
clc
fisttpl
mov
test
jne
inc
add
sti
xchg
jmp
clc
out
jae
add
test
loop
hlt
mov
cmpsl
clc
dec
hlt
dec
xor
add
leave
dec
in
in
into
js
bound
add
shlb
clc
ja
and
ret
clc
push
clc
out
cltd
mulb
push
add
sar
xabort
jmp
add
jmp
inc
add
sub
add
cmp
pop
cwtl
sbb
add
and
xchg
sub
dec
aaa
scas
cmp
repnz
std
xchg
xchg
daa
clc
incl
mov
add
popa
add
dec
jns
sub
add
clc
out
ror
mov
add
add
ret
lret
xchg
jle
rcrl
add
int3
inc
clc
icebp
dec
dec
mov
add
adc
add
imul
add
add
add
pop
xchg
cmp
and
add
add
inc
clc
jmp
add
xchg
push
popf
loopne
ror
add
add
das
repz
jle
clc
pop
imul
aas
pop
push
mov
add
inc
add
adc
add
mov
clc
cmp
push
add
in
inc
add
or
outsl
ret
dec
insl
pop
out
stos
mov
insb
fdivrs
add
clc
pop
sub
add
or
add
aam
clc
movsl
clc
out
popa
add
adc
clc
pop
inc
add
jg
lret
xor
add
ja
add
xchg
into
in
cmp
add
jge
into
cltd
cltd
mov
loopne
add
in
cmp
clc
or
clc
jbe
xchg
bound
add
mov
xor
add
add
clc
cmp
outsb
pop
addr16
sub
add
add
mov
sbb
inc
add
xchg
dec
mov
clc
dec
add
int3
mov
clc
xchg
xor
add
dec
dec
in
aad
xabort
int3
in
call
clc
cmp
add
mov
sbb
dec
mov
xchg
mov
add
add
fisubl
add
frstor
add
clc
xlat
push
add
pop
sub
push
add
cli
test
xbegin
xor
add
jp
mov
add
cmp
arpl
add
add
hlt
stos
out
roll
add
add
push
add
repz
add
clc
pop
in
clc
inc
add
or
clc
cmp
add
popa
add
pop
mov
imul
imul
add
mov
movsb
clc
and
add
mov
sbb
add
dec
das
push
mov
stc
or
cmp
clc
sahf
dec
push
mov
add
add
or
clc
push
push
mov
clc
lahf
cmp
clc
xchg
cmp
add
fldl
add
adc
add
jg
aas
ret
add
add
clc
mov
add
add
clc
jle
in
inc
clc
ret
clc
pop
aam
clc
clc
push
hlt
mov
cmp
add
inc
clc
add
add
add
stos
push
add
loopne
in
dec
push
add
loop
jecxz
mov
cmp
fidivrl
pop
ret
clc
xchg
shl
clc
sub
cli
add
add
out
mov
add
dec
and
add
sbb
jbe
icebp
in
sbb
jns
clc
add
add
clc
mov
xchg
das
cld
fadds
lret
fsts
add
bound
add
clc
jne
movsb
clc
sub
add
out
sbb
clc
cpuid
clc
clc
mov
xchg
repz
lods
scas
push
jle
pop
in
ror
dec
int
xor
push
add
and
add
clc
iret
pusha
add
or
scas
repnz
das
adc
add
clc
mov
push
stos
out
push
add
or
mov
sub
in
xchg
lea
add
xor
add
sar
cmpsb
clc
mov
clc
sahf
dec
inc
add
mov
add
cmp
clc
int
clc
stos
iret
and
add
imul
add
cmp
mov
sbb
pop
dec
sub
int
mov
dec
loope
xchg
bound
add
add
clc
mov
gs
jnp
add
xchg
ss
push
add
data16
hlt
jmp
pop
leave
nop
xchg
inc
clc
leave
mov
inc
clc
insl
jne
shlb
and
mov
push
add
jb
add
clc
mov
cmc
mov
add
clc
test
push
clc
fildll
clc
stc
jae
add
mov
in
xor
add
aam
add
in
arpl
add
adc
clc
cmp
mov
add
notl
mov
fsts
add
jmp
clc
imul
pop
jp
pop
cmp
inc
add
clc
cltd
mov
push
add
sahf
add
add
dec
cmc
mov
out
xchg
movsb
clc
jl
xor
jg
jne
sbb
or
xchg
xor
es
int3
loop
es
dec
jo
add
neg
mov
movsb
clc
cs
test
add
dec
mov
adc
add
sub
lret
insl
insb
mov
sahf
stc
mov
add
icebp
mov
add
cli
push
ja
clc
loopne
gs
xchg
in
sar
clc
out
jmp
dec
ret
clc
push
xchg
xor
add
push
add
mov
hlt
in
sar
add
repnz
dec
adc
add
add
iret
cwtl
jno
add
xor
sahf
push
mov
cs
adc
add
test
mov
add
lock
add
test
push
sub
add
cs
jp
add
cmc
mov
aad
pop
ror
push
add
push
clc
push
push
clc
scas
add
add
add
add
dec
xchg
arpl
add
jae
add
adc
add
clc
or
cmp
xchg
inc
clc
push
add
or
clc
adc
push
pop
cmp
movsl
clc
sbb
or
sub
add
in
pop
mov
dec
inc
add
loope
stos
dec
mov
clc
pushf
push
out
loop
or
xor
add
clc
inc
clc
xchg
clc
dec
scas
cs
insl
push
popf
lods
sbb
clc
mov
inc
add
mov
into
rcll
add
inc
clc
mov
add
gs
lahf
int
sub
xchg
pop
int
clc
mov
clc
lea
stc
jnp
adc
add
icebp
jmp
push
add
jge
pusha
add
imul
mov
stc
mov
clc
xor
add
clc
scas
push
cmp
movsl
clc
ret
clc
gs
pop
adc
add
sub
xchg
xor
add
out
fcmovnu
cld
leave
int
jg
dec
testb
add
sti
rep
mov
mov
pushf
cmc
add
lods
xor
add
clc
add
adc
push
add
jns
pop
push
add
push
sbb
mov
add
loop
lret
pop
out
stc
cmp
js
xor
add
and
ret
clc
mov
add
add
add
mov
inc
clc
dec
shlb
push
pop
adc
add
clc
ficompl
pop
aas
cwtl
xor
add
xbegin
add
data16
push
clc
or
insb
pop
clc
sar
ljmp
mov
hlt
jmp
sbb
dec
mov
clc
xchg
pushl
clc
addr16
adc
add
clc
mov
add
add
add
push
clc
jg
push
add
pop
pop
clc
jmp
es
sar
cmp
push
add
cmc
out
push
sub
add
clc
xchg
and
out
icebp
fs
popf
cmpsb
clc
push
add
into
jbe
clc
or
add
sub
clc
pop
pop
clc
add
add
cmp
clc
xor
add
clc
lods
dec
fisttps
scas
jle
clc
movsl
clc
jno
add
clc
lock
clc
xabort
clc
out
push
mov
clc
fisubl
clc
mov
add
out
pop
es
shll
sub
sar
cmp
jnp
xor
add
clc
inc
add
add
adc
add
fisttps
popf
cmp
cltd
call
add
adc
add
add
cmp
clc
sar
inc
add
cs
clc
dec
and
add
add
mov
int
lret
pop
cli
lods
jno
add
in
out
add
ret
adc
add
xlat
add
add
divl
jg
cmp
daa
clc
lea
data16
ret
mov
clc
lock
into
stos
mov
clc
push
add
dec
mov
shlb
dec
push
out
pop
stos
je
clc
stc
lock
adc
add
or
gs
aaa
ret
xor
mov
cmp
add
lahf
sar
jb
add
sbb
add
push
and
clc
lahf
cmp
data16
jg
out
mov
fwait
lret
xchg
ret
clc
xor
pop
call
mov
mov
add
ret
clc
arpl
add
scas
pusha
add
sbb
dec
mov
pop
mov
aad
leave
clc
out
cmp
arpl
add
mov
fadds
add
jns
and
xchg
stc
sar
scas
es
push
add
pop
inc
add
mov
fs
cmpsb
clc
fildll
mov
xchg
jl
clc
fsubrs
mov
add
xor
push
jno
add
clc
or
add
repz
inc
clc
stos
int
fadds
add
xchg
dec
rclb
add
cmp
add
or
add
add
add
add
dec
cli
push
add
mov
add
clc
cmp
clc
fcmovu
loope
rorb
clc
jge
jle
clc
data16
in
jecxz
cmp
stc
fsubs
mov
clc
pushf
mov
test
bnd
and
ja
dec
add
add
in
daa
clc
shlb
add
jl
clc
cs
loop
outsb
push
clc
dec
jecxz
ds
mov
dec
fidivl
lret
jp
cmp
sub
mov
and
add
add
lods
lods
into
xor
add
sar
or
add
push
mov
clc
jmp
clc
sub
add
or
xor
add
inc
add
test
dec
fistpl
cmc
mov
mov
clc
lahf
adc
add
sar
mov
lret
sbb
jecxz
fdivrs
fs
arpl
add
add
or
cltd
add
mov
mov
add
push
xlat
mov
add
add
rcrl
jmp
sti
and
jae
add
add
push
dec
jmp
ljmp
jp
sbb
pop
mov
mov
mov
mov
add
and
rcrb
add
imul
add
add
xor
add
int
clc
stos
or
out
sar
xchg
int3
xbegin
hlt
mov
in
sub
fldcw
out
sarb
add
imul
add
pop
jmp
hlt
aas
aaa
xor
add
mov
cmp
cmp
clc
ss
adc
add
add
sub
mov
lret
clc
fdivl
add
jne
or
mov
mov
push
pop
out
sbb
arpl
add
add
in
dec
hlt
mov
sti
pop
adc
add
aad
sbb
sub
add
cmp
dec
mov
add
dec
mov
clc
add
add
dec
dec
and
add
mov
sti
bound
add
add
daa
clc
in
out
lahf
outsl
jp
add
ret
clc
test
push
add
cmp
aad
mov
sub
data16
pop
mov
leave
jb
add
into
cltd
sub
add
stc
xchg
xor
add
clc
push
dec
sti
test
sbb
add
add
add
push
dec
pop
sar
add
leave
fiaddl
add
std
or
add
add
add
add
fldt
dec
iret
push
push
cwtl
sbb
clc
rdseed
in
xor
add
clc
hlt
xor
add
clc
rcrb
popf
rcrl
clc
imul
add
pop
pushf
leave
mov
int3
fcomip
pop
movsl
clc
mov
sbb
add
jg
imul
inc
add
mov
clc
in
gs
push
sbb
jo
add
fisubrl
cmp
adc
add
aam
jne
test
clc
je
aas
push
out
sar
int
add
out
je
add
in
es
or
cmp
clc
sbb
movsl
clc
inc
clc
mov
jmp
clc
out
iret
push
mov
add
cmp
sbb
sbb
add
add
clc
test
clc
adc
add
clc
pop
jb
add
jae
add
clc
mov
and
add
add
inc
add
jle
add
daa
clc
push
add
push
jns
mov
fidivrs
add
cli
dec
mov
ljmp
clc
gs
out
into
mov
test
cmp
cmp
add
pop
cmc
or
add
ja
add
cwtl
imul
add
sar
inc
clc
dec
xchg
aam
dec
or
shll
add
add
das
mov
divps
add
add
or
xchg
pop
ja
in
cwtl
push
add
push
inc
clc
mov
pop
dec
loope
pop
clc
sub
insb
mov
repz
clc
or
inc
add
addr16
adc
add
insl
ds
movsl
clc
adc
mov
clc
xchg
idivb
cmp
out
sti
mov
xchg
mov
jecxz
std
int
clc
loop
fbld
adc
add
scas
es
insl
notl
not
ds
mov
in
lret
add
lods
out
pop
cmp
add
frstor
push
adc
add
jns
pop
test
addr16
sub
clc
jecxz
push
mov
push
data16
stos
dec
int
aaa
xor
add
mov
popf
or
shl
sbb
clc
sarb
jb
add
jo
add
mov
mov
sbb
mov
clc
mov
add
inc
clc
push
add
or
inc
clc
jmp
dec
sub
add
clc
scas
pop
bound
add
xlat
test
js
mov
clc
cltd
clc
outsb
cmp
in
stos
add
add
mov
add
jno
add
mov
mov
sub
hlt
mov
shll
inc
clc
pop
push
mov
clc
lcall
lret
add
and
sbb
shrb
es
stos
imul
cwtl
sbb
add
add
pop
cmp
mov
lahf
mov
loop
or
add
clc
cmpsb
clc
jl
arpl
add
add
or
xor
add
in
clc
push
mov
addr16
xchg
mov
add
push
test
icebp
repnz
jl
inc
add
cmp
xchg
arpl
add
xchg
ss
test
lea
jo
add
test
stos
add
add
xbegin
sub
add
sti
add
pop
dec
ds
testl
pop
imul
clc
ja
je
xor
fdivl
add
in
push
xchg
sub
clc
mov
cmp
jmp
enter
stos
pop
and
dec
sbb
movsl
clc
sub
data16
icebp
fldt
push
jmp
push
add
popl
add
loopne
out
xabort
pop
cmp
xbegin
and
add
add
jns
clc
lods
xlat
jle
clc
pop
icebp
movsb
clc
add
sub
std
xchg
xchg
out
test
dec
ret
movsl
clc
fdivrl
aam
loope
cmp
clc
or
stc
push
inc
clc
das
sub
enter
sbb
clc
outsl
aas
pop
mov
lahf
jb
add
add
jne
clc
ljmp
and
or
add
test
enter
clc
push
mov
clc
cltd
mov
add
mov
clc
inc
add
mov
pop
sbb
add
loopne
aad
mov
mov
jb
add
add
mov
jnp
lods
loop
into
push
inc
clc
movsl
clc
adc
add
push
push
and
add
in
loop
cmp
insl
sar
jp
inc
clc
inc
clc
cmp
cltd
sub
clc
aas
int3
or
jge
xor
add
std
repnz
add
clc
iret
inc
add
jp
es
or
ret
rcrb
test
mov
movsb
clc
pop
fisubs
clc
pop
lcall
push
inc
add
xchg
divb
add
cmp
add
lea
add
push
add
dec
push
clc
mov
ljmp
add
rorl
push
add
clc
rcl
fsubr
mov
repz
js
in
adc
sbb
test
repz
xchg
rcl
adc
add
xbegin
cmpsb
clc
popa
add
repz
adc
add
fldenv
add
popa
add
inc
add
cmp
add
mov
pushf
dec
cmp
add
jl
and
stc
cmp
cld
aaa
jge
clc
mov
add
clc
xbegin
jo
add
out
push
add
mov
add
push
add
pop
fldcw
or
outsl
or
sbb
cwtl
imul
pop
sub
add
add
xchg
push
push
add
mov
out
mov
mov
clc
icebp
add
add
fldl
aad
sbb
clc
fldt
mov
push
add
int
cld
cltd
add
add
cwtl
rcll
add
push
add
ficompl
push
in
sbb
add
in
imul
add
cmpsb
clc
movsl
clc
add
add
add
pop
jo
add
clc
or
mov
add
mov
daa
clc
sbb
xor
add
mov
loopne
pop
push
add
dec
pop
cltd
icebp
jl
add
pop
clc
cmp
xbegin
stos
or
int
out
xabort
clc
daa
clc
notl
add
push
xchg
in
xchg
adc
mov
clc
or
lcall
lods
clc
leave
add
add
and
clc
mov
pusha
add
aad
clc
mov
dec
clc
clc
fdivrl
push
clc
int
xbegin
xlat
add
add
pop
mov
flds
add
jp
stc
cmp
idivl
call
add
sahf
dec
push
mov
cmp
aam
and
add
push
inc
clc
pushf
sub
out
shll
add
add
fstpl
imul
inc
add
jae
add
pop
popa
add
data16
adc
add
jecxz
sahf
xchg
in
mov
dec
xchg
arpl
add
inc
clc
and
add
mov
in
sbb
push
push
mov
jmp
pushl
add
clc
jl
cmp
scas
jmp
clc
leave
cs
xor
add
loopne
mov
add
add
push
push
cmp
pop
mov
xchg
dec
xchg
pop
xor
add
jg
sub
xor
add
adc
out
rcrl
jecxz
sbb
push
sbb
clc
iret
adc
add
clc
cmp
fdivs
and
add
mov
clc
add
add
add
add
clc
div
or
repnz
inc
add
jmp
cmp
mov
inc
add
int
cmp
add
clc
jecxz
pushf
xor
add
add
add
add
clc
leave
movsb
clc
xchg
jne
pop
xchg
mov
add
cmp
xchg
mov
and
add
add
add
imul
clc
pop
sub
mov
clc
sbb
mov
add
and
add
sar
jmp
clc
mov
movsl
clc
call
add
jne
mov
pusha
add
mov
movsl
clc
xchg
push
add
out
and
add
clc
mov
das
cmp
pop
stc
push
add
mov
hlt
aas
push
dec
fucomi
fsubrl
pop
mov
adc
aam
roll
clc
cmp
insl
push
add
push
stos
or
nop
cmpsl
clc
pusha
add
mov
mov
test
shll
add
cli
loop
fsubr
mov
xchg
insb
lea
add
jecxz
fsts
add
ret
adc
xor
add
jne
mov
add
add
loopne
dec
js
lret
xchg
sar
loopne
sbb
dec
jl
fcomi
inc
add
pop
and
add
std
xor
add
call
clc
cmp
push
and
add
gs
or
clc
cmp
add
mov
clc
mov
mov
loop
lods
in
lea
mov
add
add
add
add
add
fdivrl
and
adc
add
mov
cmp
gs
cmp
add
bound
add
out
pop
mov
das
addr16
mov
xabort
mov
in
add
add
add
mov
add
loope
hlt
pop
jmp
pusha
add
pop
mov
mov
add
xchg
hlt
out
fcmovnu
push
inc
add
and
add
pop
mov
clc
jo
add
clc
lret
mov
cli
sti
pushf
mov
inc
add
jmp
clc
pop
lret
fildll
test
daa
clc
aam
cwtl
adc
jb
add
push
sti
or
xchg
in
dec
dec
xchg
ja
dec
xor
add
clc
jbe
mov
clc
mov
sahf
mov
add
add
adc
add
or
jmp
clc
pop
in
dec
sbb
clc
data16
fstps
pop
cmp
clc
jbe
leave
jno
add
add
aad
dec
adc
fildl
jecxz
push
add
xchg
lret
add
jae
add
inc
add
adc
clc
clc
dec
or
jo
add
add
gs
outsb
push
xor
clc
lcall
and
add
cmpsl
clc
pushf
ds
mov
push
jb
add
clc
dec
cmp
add
into
mov
lret
fdivrl
scas
jns
mov
cmc
inc
clc
fmull
add
mov
hlt
jb
add
cmp
aam
pop
inc
add
dec
push
clc
test
cmpsb
clc
mov
clc
sar
lcall
and
add
sub
in
test
add
std
call
and
add
cs
jg
or
mov
cmp
std
out
push
add
gs
ret
lahf
sarb
mov
clc
test
xor
add
pop
mov
pop
clc
iret
xor
add
fistps
cmp
fildll
pop
aam
movsb
clc
xchg
mov
jae
add
add
xchg
dec
xor
add
add
popa
add
test
push
out
inc
clc
mov
clc
push
dec
hlt
imull
push
cmp
xchg
jg
clc
mov
clc
fistpll
fs
xchg
clc
add
add
mov
pushf
sbb
push
clc
leave
add
add
mov
add
dec
push
movsb
clc
es
xsaveopt
jl
add
hlt
jl
clc
lods
fists
pop
fistl
clc
pop
shl
clc
mov
mov
add
push
clc
adc
add
clc
enter
add
lret
sbb
xor
add
pop
adc
add
lret
add
jo
add
clc
mov
cmp
insb
lahf
movsb
clc
jge
add
add
add
sub
add
adc
clc
into
jno
add
or
dec
movsb
clc
fwait
inc
add
adc
add
xchg
lods
lods
pop
int
dec
push
fisttpll
call
gs
jbe
xchg
stos
out
adc
add
std
aas
push
add
mov
clc
inc
add
mov
sbb
add
inc
clc
add
add
jle
sar
int3
sub
xor
add
clc
js
clc
mov
clc
push
push
clc
mov
add
imul
cmp
cld
sti
sbb
add
lock
add
jno
add
mov
out
pop
psubusb
add
add
push
add
loopne
out
mov
pop
sbb
add
mov
add
in
daa
clc
rorl
push
add
jle
clc
push
add
ret
clc
fsubl
clc
inc
clc
test
xchg
and
add
clc
fimull
es
push
add
sar
cmp
clc
xor
clc
or
jmp
clc
sbb
nopl
test
mov
push
add
sbb
add
add
mov
icebp
inc
clc
out
data16
loope
lods
ljmp
nop
sti
out
dec
mov
add
add
add
icebp
push
jno
add
add
add
add
and
add
shrb
inc
clc
add
add
add
dec
divl
out
jl
repnz
dec
mov
clc
mov
aad
in
pop
adc
add
cmp
clc
loop
mov
rcrb
clc
or
clc
xor
add
and
inc
add
in
pusha
add
push
add
ret
clc
dec
hlt
jmp
pop
hlt
lret
add
jmp
jmp
add
sbb
aas
cmp
clc
stos
sub
mov
clc
int3
mov
sub
mov
add
add
cmpsb
clc
cmp
add
add
into
pop
jecxz
rol
clc
pop
inc
add
lea
mov
push
mov
clc
jb
add
mov
clc
pop
cmp
jns
into
mov
add
fwait
ds
or
cmp
add
push
xchg
pop
rorb
adc
and
add
nop
hlt
xchg
in
fistps
dec
sub
js
call
clc
sbb
mov
pop
lret
js
mov
clc
int
ja
add
aas
sub
add
repz
jmp
cmp
clc
ja
sbb
loope
inc
add
test
gs
sbb
clc
mov
dec
pop
test
mov
popa
add
sbb
add
clc
fwait
pusha
add
mul
clc
ret
clc
sub
push
add
xchg
or
add
xor
add
test
pop
adc
add
clc
ret
fistps
clc
loope
cmpsb
clc
mov
sub
clc
pop
dec
bt
mov
movsl
clc
bound
add
pop
ror
jmp
sti
fcoms
clc
mov
out
cmp
mov
add
stc
sahf
sbb
xor
mov
xabort
out
push
add
inc
add
cmpsl
clc
stos
test
jne
int
xchg
cmp
push
add
pop
nop
dec
inc
add
enter
inc
clc
out
sbb
int3
mov
clc
imull
notl
jbe
loope
xor
add
fwait
mulb
clc
lods
sahf
cmp
cmp
add
pop
insl
movsl
clc
movsb
clc
movsl
clc
sub
xor
add
clc
fs
mov
clc
cmpsl
clc
daa
clc
arpl
add
push
add
test
cmpsb
clc
cmp
movsb
clc
push
add
shll
clc
lock
movsb
clc
stos
mov
out
adc
add
cmp
sbb
out
dec
cmp
call
sub
push
dec
xchg
std
gs
mov
adc
add
xchg
cmp
clc
push
fisubrl
add
clc
mov
sub
add
mov
jge
inc
add
inc
add
mov
sbb
add
fwait
mov
inc
clc
es
jle
cltd
add
xor
add
xchg
sub
jns
dec
test
imulb
icebp
push
add
ss
dec
ja
cmp
dec
addps
jmp
add
add
jp
clc
int3
int
xchg
adc
add
clc
es
testl
iret
jnp
loope
data16
and
cli
out
xor
add
xchg
and
jbe
mov
clc
gs
push
add
lret
xchg
inc
clc
cli
mov
cmp
push
std
lock
jl
dec
hlt
hlt
mov
add
fwait
jae
add
xchg
mov
movsl
clc
or
icebp
push
add
mov
xlat
pop
inc
clc
push
add
movsb
clc
insl
mov
clc
sbb
aas
xor
add
clc
and
add
xbegin
popa
add
loop
adc
clc
push
jb
add
jle
iret
sub
clc
arpl
add
push
call
and
add
nop
jns
add
das
sbb
add
cmpsb
clc
cmp
mov
add
cmp
add
or
cli
cltd
cmc
adc
add
dec
gs
and
ret
add
mov
jo
add
jecxz
pop
outsl
pop
shl
clc
scas
cmp
xchg
xchg
repz
sar
addr16
ds
add
idivb
out
jge
add
adc
add
xabort
lcall
clc
or
push
cltd
loope
ja
add
add
icebp
push
or
clc
jnp
mov
and
add
add
clc
js
mov
scas
out
xchg
push
push
dec
xchg
dec
adc
add
pop
jo
add
and
add
clc
mov
add
inc
clc
mov
add
fs
jae
add
sub
sub
inc
clc
adc
add
jg
out
stc
bound
add
jecxz
mov
adc
add
and
add
cmp
rclb
add
push
push
clc
jp
add
cmp
call
xor
add
pushf
shr
nop
add
add
cmp
add
ret
clc
push
clc
inc
clc
or
fildl
add
or
add
add
rcll
clc
popa
add
ljmp
clc
loopne
cltd
fidivs
add
and
add
add
test
clc
jecxz
xchg
shr
xchg
outsl
push
sbb
add
add
or
sub
add
sbb
add
hlt
and
mov
insb
cmp
add
push
xchg
push
fstpl
sti
mov
hlt
mov
push
add
ret
clc
dec
sbb
mov
clc
pushf
adc
addr16
lcall
jb
add
add
cmpsl
clc
mov
clc
mov
add
pop
aas
iret
mov
imul
mov
dec
sub
jle
add
scas
iret
movsl
clc
xchg
dec
outsb
mov
sbb
xbegin
xor
xlat
stos
cmp
aaa
paddsw
add
push
pop
cwtl
inc
add
scas
ss
inc
add
call
add
fmull
stc
aad
adc
add
fstp
test
pop
adc
add
clc
mov
pushf
ss
push
rcrb
fs
aad
add
jnp
clc
mov
and
add
clc
ss
clc
sahf
mov
add
call
stos
sbb
jo
add
sar
clc
lret
aas
fdivs
out
mov
add
pop
mov
add
jge
jne
clc
pushf
popa
add
jp
clc
sti
addr16
scas
dec
xlat
loope
push
xchg
mov
ljmp
add
inc
add
mov
adc
add
xchg
dec
pop
sub
out
mov
stos
pop
push
add
iret
dec
xor
add
clc
adc
pop
jne
push
xchg
mov
xchg
pop
pop
cmpsl
clc
jo
add
clc
lock
addr16
out
xchg
dec
movsl
clc
jno
add
add
xchg
xor
add
jp
jp,pn
imul
dec
mov
ds
mov
clc
xchg
clc
aad
clc
mov
sbb
repnz
sbb
or
jno
add
test
fdivrs
cmp
and
add
sub
nop
mov
ljmp
and
add
fcom
mov
ss
xabort
add
add
mov
add
ficoms
stos
jecxz
jno
add
cs
sub
add
push
dec
icebp
push
sub
lahf
sbb
lret
mov
add
jp
clc
mov
clc
push
add
add
sbb
inc
clc
into
push
add
ja
daa
clc
movsb
clc
xor
add
xchg
xchg
push
cmp
mov
data16
mov
jg
adc
add
scas
bound
add
mov
and
add
xchg
insl
pop
and
shr
cltd
xchg
fiadds
add
add
xor
add
jmp
mov
div
lcall
push
rcr
pushf
pop
jns
xchg
jno
add
pop
mov
clc
inc
clc
adc
add
clc
in
push
clc
sbb
xabort
clc
push
jmp
push
push
add
negb
clc
xor
add
clc
jp
insb
pop
or
add
lock
add
pop
ljmp
fistps
add
sub
sub
shrl
cmp
imul
fisttpl
bound
add
add
fwait
aad
add
test
inc
add
addr16
pop
cmp
jnp
rcr
xbegin
xchg
in
or
add
jno
add
cmp
xchg
cmp
mov
sbb
add
lcall
lcall
clc
icebp
bound
add
and
sub
ss
jle
clc
aam
clc
mov
clc
mov
add
add
xchg
and
add
pop
loope
sub
clc
xchg
insl
jp
add
inc
add
clc
fwait
sub
clc
rcrl
xor
add
adc
add
divl
dec
aas
cmp
bound
add
mov
push
add
add
add
add
clc
jle
sub
into
mov
xchg
and
add
imul
clc
push
add
push
pop
mov
call
xor
add
add
dec
or
lret
fldcw
clc
sahf
outsb
mov
add
sahf
cmp
jo
add
mov
inc
add
jbe
clc
sub
inc
clc
gs
xchg
aam
add
pop
pop
clc
fadds
shl
clc
js
mov
mov
clc
mov
fninit
clc
scas
in
scas
push
loope
hlt
pop
imul
mov
clc
sbb
xlat
dec
sar
clc
sbb
and
add
dec
ljmp
mov
add
data16
lea
stos
xor
add
sub
sahf
sub
add
jl
clc
out
fcmovu
mov
adc
add
push
add
ss
pop
movd
in
outsb
outsl
mov
in
lock
xor
add
fwait
lret
mov
hlt
mov
inc
add
iret
ljmp
sar
popa
add
into
js
add
sar
lahf
icebp
fwait
jle
cmp
add
mov
cltd
pop
push
add
fwait
sub
add
test
add
movsl
clc
cmp
clc
call
clc
mov
add
in
in
jle
clc
sar
out
cmp
push
add
popf
jbe
mov
xchg
inc
add
je
clc
pop
das
ffreep
clc
cld
cmpsl
clc
mov
popf
inc
clc
push
sar
or
cmp
add
mov
and
add
clc
pop
lret
add
add
add
int3
dec
loopne
in
pmovmskb
inc
clc
xchg
stos
mov
cmp
add
lret
add
mov
loope
push
clc
push
add
clc
xchg
sti
adc
stos
daa
clc
dec
pop
jbe
clc
mov
push
clc
testl
mov
dec
lret
and
add
fs
sbb
dec
pushf
je
mov
clc
sbb
jbe
or
xchg
adc
add
jecxz
cmp
add
cmp
mov
add
into
and
add
dec
and
add
add
test
xabort
clc
stos
ds
adc
add
mov
test
xchg
inc
add
add
cltd
pop
xchg
scas
add
add
into
sub
push
cmp
add
lret
inc
add
ss
jecxz
mov
xbegin
outsl
daa
clc
push
xchg
add
sbb
clc
fs
mov
clc
xchg
ret
xchg
mov
clc
jb
add
xchg
pop
mov
hlt
addr16
das
inc
add
or
add
cli
add
add
clc
sbb
cmp
lods
outsl
jnp
pop
and
hlt
push
sar
inc
add
ss
cli
lahf
mov
cmp
clc
imul
add
push
clc
sbb
sbb
lock
add
shll
out
addr16
jl
xchg
shll
clc
pop
ret
clc
add
add
jno
add
xchg
mov
add
or
clc
sbb
fistpll
test
hlt
and
add
clc
loop
test
pop
jo
add
xchg
stos
mov
clc
cmp
add
stos
push
add
bound
add
imul
add
out
aas
inc
clc
out
sub
clc
and
add
sub
mov
lahf
fistps
inc
add
iret
mov
fcmovne
leave
cmpsl
clc
mov
clc
dec
inc
clc
int3
jae
add
xchg
js
clc
mov
xor
and
clc
mov
lea
add
jnp
clc
outsl
xabort
clc
adc
add
add
mov
clc
pusha
add
fidivrl
push
aas
push
add
jle
rorl
lret
ja
clc
mov
clc
push
jno
add
push
data16
mov
pop
push
add
push
cltd
fwait
add
or
sbb
cmp
lret
ja
push
mov
inc
clc
or
sub
xchg
pop
std
jmp
or
aas
push
clc
decb
clc
mov
and
add
clc
adc
add
clc
mov
clc
mov
clc
mov
fs
loop
xchg
incb
clc
adc
add
sub
add
pop
data16
in
jnp
clc
cmc
jnp
mov
mov
in
fadds
add
mov
add
gs
loop
test
sbb
arpl
add
and
add
clc
fwait
xor
test
dec
and
add
add
clc
or
add
out
sahf
sub
add
gs
aaa
fmuls
pop
or
pop
clc
push
push
cmp
xchg
outsb
xor
add
clc
add
add
pop
int
add
inc
add
inc
clc
mov
mov
pop
clc
scas
pop
clc
sar
scas
inc
add
in
testl
xchg
adc
add
clc
or
jecxz
jne
gs
xor
add
add
sti
add
add
jnp
add
adc
add
sbb
loope
outsl
clc
and
add
cmp
cmc
ss
push
imul
pop
aas
pop
movsb
clc
add
add
insl
clts
clc
clc
icebp
xabort
cmp
lods
je
push
add
popa
add
mov
clc
dec
rcrl
dec
js
aam
clc
mov
fcoml
add
and
add
mov
pop
mov
idiv
repnz
jl
jecxz
mov
mov
pop
sub
clc
into
add
outsb
daa
clc
in
and
jne
cmp
notl
add
push
add
push
test
mov
imul
jne
jae
add
stos
mov
scas
je
push
add
shl
add
add
repnz
add
and
add
clc
or
and
pop
xchg
addr16
mov
clc
daa
clc
push
clc
ficoml
mov
push
insb
inc
add
sti
push
cmpsl
clc
sub
mov
pop
sub
add
leave
dec
dec
stos
dec
xchg
in
or
clc
das
mov
xchg
sbb
xchg
stc
push
add
xor
add
decl
xchg
sar
and
jg
add
add
je
clc
sahf
cs
add
pop
jae
add
data16
pop
dec
loope
xchg
mov
add
clc
sub
pop
mov
add
sbb
clc
sbb
add
enter
dec
inc
add
inc
add
inc
clc
ljmp
inc
clc
dec
sbb
clc
addr16
fldenv
add
xor
add
lcall
push
and
add
clc
cltd
sub
pop
insl
pushl
add
fadd
clc
ljmp
add
test
clc
outsb
sbb
add
in
or
add
daa
clc
imul
aas
mov
add
aaa
mov
je
in
push
rorb
cmp
lret
mull
add
insb
dec
stc
adc
add
fdivr
movsb
clc
mul
clc
push
clc
mov
add
dec
push
add
inc
add
repz
add
mov
mov
add
add
jb
add
clc
xchg
or
or
data16
dec
clc
and
pop
mov
inc
clc
ret
mov
clc
data16
jl
clc
enter
sbb
das
movsb
clc
mov
cmp
rorb
mov
xchg
pushl
add
clc
sbb
clc
insb
xchg
sub
add
es
pop
test
mov
jae
add
clc
mov
or
mov
popa
add
hlt
ss
dec
adc
add
inc
add
mov
add
jns
sbb
and
add
jg
adc
add
mov
jae
add
sarl
imul
ret
clc
pop
clc
cld
pop
cmp
cltd
adc
mov
add
scas
fs
fs
es
inc
add
loopne
je
mov
jo
add
dec
lret
ret
fs
mov
adc
xor
push
and
and
add
lock
loopne
push
loopne
repz
in
jmp
clc
mov
addr16
mov
xor
add
add
sti
xor
mov
imul
mov
notb
add
sbb
or
mov
clc
mov
std
push
out
dec
std
test
cwtl
xchg
xchg
fnstenv
icebp
dec
in
xor
add
add
xchg
adc
add
lahf
sbb
mov
mov
clc
sbb
loop
sub
xlat
mov
adc
add
lcall
bound
add
xor
xbegin
repnz
mov
sarl
pushf
loope
loopne
inc
add
jae
add
in
in
js
dec
std
jp
test
hlt
mov
sub
addr16
and
add
add
push
add
ret
jns
fildl
add
add
cltd
sti
comiss
mov
jge
clc
cmp
loopne
cmp
mov
and
add
add
jp
clc
testl
cmp
clc
loopne
xchg
in
jbe
dec
cld
clc
inc
clc
test
nop
add
movsl
clc
mov
clc
mov
clc
aad
add
xchg
jmp
add
xor
add
fiadds
cmpsl
clc
mov
cs
scas
scas
mov
clc
inc
clc
lret
clc
mov
cmp
dec
jge
dec
imul
cmp
clc
mov
jno
add
sub
movsb
clc
jle
jae
add
add
xchg
inc
add
mov
lods
jbe
lcall
xchg
add
add
add
add
cmp
inc
add
dec
or
clc
jmp
mov
add
sub
xor
add
cmp
xchg
pop
adc
add
ds
sub
and
adc
add
add
sub
xabort
popl
clc
lcall
clc
mov
call
js
imul
clc
ret
clc
jecxz
mov
push
nop
pop
push
add
scas
lock
cmp
pop
lock
mov
add
fadd
clc
out
outsl
rcll
clc
leave
push
test
cmp
clc
add
add
mov
sbb
sarb
mov
push
dec
nop
es
sti
nop
xchg
pushf
imul
add
mov
and
inc
add
and
clc
or
mov
add
fs
and
add
add
lock
add
sbb
add
cmpsb
clc
xor
add
test
cmc
sbb
lods
fldt
mov
mov
sahf
outsl
lea
clc
dec
aad
or
sar
mov
dec
jg
clc
es
daa
clc
sbb
clc
out
test
data16
xor
add
cs
outsb
sar
push
inc
add
cwtl
add
add
mov
mov
mov
clc
mov
add
clc
sub
clc
scas
popa
add
push
add
push
sbb
ret
clc
jb
add
fcomps
aaa
cmp
icebp
xor
add
add
movsb
clc
add
jg
ss
lock
add
ret
clc
das
push
dec
int3
and
add
sti
sbb
or
gs
jnp
icebp
cmp
out
aaa
lret
sbb
clc
push
add
add
add
add
xchg
or
clc
inc
clc
in
lret
test
jo
add
clc
ja
cmp
clc
clc
test
lahf
cltd
insl
xbegin
xchg
loopne
addr16
in
push
clc
sti
movsb
clc
adc
add
pop
pop
clc
or
mov
syscall
clc
cmp
add
add
add
sbb
clc
iret
daa
clc
out
scas
push
shlb
clc
sahf
iret
fst
nop
adc
mov
clc
and
add
pop
adc
add
sahf
aaa
dec
aas
imul
push
pushf
jmp
test
int3
outsl
add
add
add
add
inc
clc
movsb
clc
fs
inc
add
loop
outsb
push
cmp
sbb
fwait
sar
fs
sbb
arpl
add
inc
add
hlt
lret
lcall
lock
fcmovnbe
xchg
stos
mov
add
add
mov
clc
xor
add
sbb
add
in
cltd
pop
mov
sub
adc
add
clc
outsl
sbb
add
add
cwtl
or
clc
or
lods
lods
sbb
rolb
clc
xor
add
clc
push
sbb
lock
popf
lods
out
dec
add
mov
add
inc
add
inc
add
int
jb
add
shl
clc
and
add
in
in
fs
jecxz
in
mov
inc
clc
xor
clc
sar
clc
adc
add
mov
shl
clc
mov
insb
ret
pop
and
add
fldenv
clc
add
out
cmp
fistpl
xor
add
pop
clc
stos
mov
inc
clc
fcoms
add
cld
ljmp
aaa
jg
add
pop
icebp
ja
clc
jg
cmpsb
clc
and
add
cmp
push
push
add
lret
in
outsb
add
add
adc
add
push
sar
sar
rolb
jecxz
lock
imul
mov
sub
sbb
clc
and
add
icebp
scas
call
clc
jbe
outsb
lcall
sub
daa
clc
nop
and
add
test
lret
add
add
mov
xchg
das
jbe
adc
add
addr16
pop
jno
add
bound
add
clc
xor
add
arpl
add
add
mov
or
add
aad
cmp
mov
out
jnp
loopne
mov
xchg
mov
pop
mov
clc
cmp
add
mov
and
sar
pop
lcall
push
add
ja
out
mov
add
insb
pushf
pop
clc
xchg
fnstcw
add
cmc
int
mov
jb
add
clc
sbb
add
fisttpl
imul
xchg
mov
add
push
clc
cmp
in
inc
add
jne
clc
or
add
fcmovu
fcmovb
clc
movsb
clc
dec
mov
clc
pop
push
add
cmp
or
data16
cmpsb
clc
push
movsl
clc
fs
and
add
mov
clc
xchg
and
add
fdiv
movsl
clc
lcall
clc
ds
clc
and
add
js
clc
jbe
clc
mov
rcrl
sar
insl
imulb
add
dec
pop
jge
adc
add
mov
mov
pop
mov
repnz
add
cmpsb
clc
stos
cpuid
clc
push
int3
xchg
int
imul
ds
mov
adc
add
add
push
xchg
int
test
push
stos
outsb
enter
cmp
clc
int3
adc
repz
push
push
add
and
add
sub
add
xchg
mov
test
mov
cs
clc
and
xor
mov
push
add
bound
add
in
xchg
ljmp
stos
icebp
push
add
cli
not
sub
addr16
add
mov
jbe
clc
sar
outsb
mov
add
clc
pop
clc
push
add
fistpl
add
and
add
jbe
scas
mov
clc
idivl
mov
add
fisubrs
mov
