sahf
rorl
xor
add
test
xchg
cmp
in
aad
add
daa
fsub
xorl
and
or
add
push
outsb
push
ljmp
pop
and
xor
out
int
inc
add
addr16
xchg
jmp
out
xor
addb
cmp
add
add
adc
dec
test
dec
loop
sub
push
imul
mov
xchg
ret
jg
jecxz
mov
xlat
mov
inc
add
mov
jae
dec
inc
cmp
lods
test
fisttps
icebp
and
jbe
arpl
pop
divb
mov
nop
mov
jmp
test
bound
aam
enter
lea
xchg
cmpsb
out
mov
mov
loope
in
push
loop
push
repnz
mov
xor
hlt
dec
in
mov
pop
sarl
mov
xor
pop
inc
mov
jne
lcall
call
mov
add
sub
out
mov
imul
mov
pop
loopne
outsl
shl
mov
and
and
pop
pop
cmp
enter
cmpsl
jmp
sbb
mov
je
aaa
fnsave
or
out
out
test
xchg
xor
add
je
push
pushf
pop
shl
sub
dec
or
std
adc
out
push
pushl
jb
cltd
ja
adc
mov
add
fstl
sti
xor
je
xor
loop
rcr
jb
dec
xlat
aas
jp
cwtl
clc
xchg
icebp
pop
add
sub
testl
dec
rolb
xchg
lahf
adc
push
stc
testb
outsl
addb
sub
iret
dec
xor
mov
daa
jb
xor
lock
sbb
ret
cmp
xor
dec
repz
pop
dec
lea
mov
sbb
fimull
fwait
loop
out
or
jnp
add
rorl
scas
xor
ss
daa
push
push
jmp
ds
insb
imul
iret
loop
lea
push
sub
add
push
mov
rcll
push
inc
movsb
or
int3
pop
or
rcrb
or
add
xlat
jbe
mov
and
jns
test
xor
popa
mov
cwtl
xor
mov
lret
xor
add
jmp
leave
mov
mov
sbb
dec
aaa
outsl
pushl
pop
addb
push
cmp
push
adc
sub
add
popa
cmpsl
lods
test
xor
xchg
jbe
dec
scas
sub
icebp
fwait
jnp
test
aad
add
sbb
mov
mov
mov
and
add
mov
xchg
jae
ret
sub
add
mov
rcl
subl
out
inc
mov
adc
pushf
fcmove
enter
add
fsub
inc
cmc
jnp
and
mov
push
pop
popa
or
add
jno
scas
xor
scas
or
sbb
ljmp
mov
inc
add
jnp
jno
aam
mov
jno
add
add
push
ja
addb
add
inc
add
mov
lret
jns
cli
bound
xchg
addr16
in
mov
mov
cwtl
pop
rolb
and
popa
sbb
push
aad
ds
cmp
add
cli
xchg
out
mov
clc
scas
sbb
mov
sti
loopne
int
out
popa
das
jmp
push
add
js
ja
add
dec
imul
filds
pop
cmp
roll
xchg
pop
xchg
dec
pusha
add
xchg
stos
dec
in
pop
adc
jb
scas
jg
test
and
sti
mov
fdivl
xchg
mov
sub
stos
pop
jge
or
push
cmp
test
fsub
cmp
add
mov
test
pop
ja
aam
rolb
dec
lods
add
fadds
ret
mov
xchg
dec
jo
out
movsl
mov
add
sub
lds
xchg
cmp
lcall
mov
push
scas
push
mov
das
pop
lds
ret
in
jge
push
xchg
fidivl
push
mov
or
mov
imul
pop
sbbl
push
add
xor
insl
mov
rolb
xor
jge
and
leave
pusha
add
imul
sub
or
dec
dec
mov
bsf
lock
jp
pusha
add
jb
popa
pop
inc
add
arpl
jg
xor
pop
pop
ds
jg
push
test
mov
ret
clc
outsb
lods
cmpsl
push
scas
pop
adc
xor
push
jg
and
dec
inc
mov
push
fwait
mov
add
js
add
push
lods
jae
fnstenv
mov
out
out
sub
test
bound
adc
dec
aad
popf
pop
jp
add
push
sti
mov
lcall
out
mov
das
arpl
xlat
sbb
clc
bound
mov
pusha
add
add
adc
lahf
fcmovnb
add
xchg
and
add
aas
dec
stos
aas
out
ret
sbb
adc
jne
push
jbe
push
sbb
pop
xchg
in
cmpsb
mov
popa
cmpsl
mov
test
mov
roll
pop
dec
add
or
dec
jae
add
popf
outsb
aam
add
and
lods
std
sub
push
cmp
push
and
lea
enter
cmp
add
pop
filds
mov
pushw
add
or
mov
pop
arpl
daa
jae
outsb
jbe
dec
pop
mov
fs
jecxz
es
ss
popf
cmp
lods
mov
sub
add
and
xchg
bound
push
scas
fstps
clc
cli
mov
dec
xor
and
jne
hlt
mov
jnp
cmp
cli
fucomip
xor
or
lahf
clc
mov
add
cmpsl
jmp
arpl
popa
dec
idivl
add
mov
add
dec
mov
add
cmp
cmc
mov
jae
mov
enter
mov
outsl
loope
punpckhdq
cmp
push
lods
aas
add
rcrl
mov
pop
adc
fld
add
pop
mov
mov
cltd
adc
mov
lcall
int
add
inc
add
xor
add
lahf
icebp
mov
addb
jge
add
nop
mov
movb
push
add
pusha
add
mov
jle
ja
popf
cs
loope
loope
dec
ss
roll
jmp
pushf
xchg
sub
cmp
imul
inc
add
dec
int3
dec
push
mov
add
sbb
add
addb
lods
mov
xchg
popf
push
cwtl
dec
sub
add
fists
mov
fnstcw
into
inc
add
stc
jge
mov
lret
in
add
in
adc
add
lock
mov
add
jl
mov
sbb
movsl
xchg
out
xor
fcmovnbe
enter
or
clc
mov
push
int
adc
test
push
fmuls
idivl
pusha
add
cli
mov
add
mov
add
loope
imul
and
add
mov
cmp
add
in
or
mov
xor
inc
cs
jnp
inc
leave
div
mov
jle
xchg
ljmp
xor
dec
mov
outsl
sbb
mov
mov
mov
repnz
xlat
mov
fdivrp
or
mov
xor
fiaddl
mov
lock
and
or
jbe
das
sbb
add
sahf
mov
add
jne
pop
jno
sbb
add
xchg
sahf
addb
pop
sub
jae
mov
movsb
inc
movsb
mov
lcall
call
mov
repnz
lds
jo
in
dec
je
xor
jno
and
pop
lahf
hlt
pop
sub
jo
and
cmc
popf
dec
push
and
ds
cmc
and
push
mov
push
sbb
aas
pop
sbbl
cmp
cltd
push
add
mov
mov
fmull
or
add
jne
mov
or
adc
push
and
pushf
dec
push
add
aaa
pop
jb
in
mov
add
sbb
dec
adc
scas
mov
std
mov
cmp
add
or
cmp
rolb
mov
cs
push
xchg
mov
add
jns
sub
lods
in
and
pop
into
pop
jg
xor
dec
int
mov
das
loop
mov
add
bound
lahf
add
cwtl
stc
mov
lock
xchg
pop
neg
mov
add
das
and
and
test
add
pop
out
stc
push
add
add
divb
movsb
xor
adc
push
or
loopne
sub
jae
and
lods
ret
and
mov
arpl
jecxz
jns
add
or
fisttpll
aad
add
dec
push
movsb
mov
dec
xchg
mov
mov
mov
dec
dec
aam
subl
xchg
xchg
pop
mov
sub
cmp
inc
cmp
rclb
daa
inc
add
int
push
mov
test
mov
add
push
inc
mov
jbe
fisttpl
and
scas
xchg
dec
pop
les
insl
jns
stc
push
aas
hlt
xchg
adc
add
test
mov
jb
test
iret
call
dec
ss
mov
nop
dec
test
dec
inc
add
mov
hlt
pusha
add
pop
xor
mov
jbe
pop
or
mov
int3
enter
addb
ret
insl
sbb
mov
and
pop
rolb
lcall
int3
mov
adcl
mov
ljmp
ljmp
mov
add
push
jl
fistpll
jge
out
dec
sbb
in
and
popa
test
add
add
and
dec
cld
in
fadds
mov
jne
dec
pop
enter
inc
roll
insl
sub
out
cmp
push
fcomip
pusha
add
jp
dec
jle
mov
xchg
xor
daa
sub
fst
xor
test
fcmove
and
jo
ljmp
das
test
sub
push
push
cltd
cli
inc
rolb
andl
xor
pop
int
or
add
jp
or
ss
sub
dec
adc
dec
dec
push
in
dec
es
popa
sbbl
inc
add
and
mov
int
add
push
out
phaddsw
push
and
and
sbb
push
sub
or
stc
shl
ljmp
subl
inc
add
cld
inc
add
jb
ficoml
inc
add
dec
sub
pop
cmpl
fwait
jae
dec
add
inc
add
rcrb
ljmp
xor
and
bound
fistpll
cli
sbb
push
jge
adc
test
test
push
add
jbe
enter
pop
xlat
js
sarl
xor
stos
pop
in
fs
add
outsb
or
jmp
addr16
loope
mov
ljmp
fsubr
mov
mov
into
xor
add
add
pop
jb
xlat
add
sbb
push
sub
xchg
push
bound
adc
hlt
dec
pop
inc
add
adc
rcrl
ret
xchg
push
jmp
xor
daa
fstpt
arpl
mov
xchg
jl
fistps
or
and
pop
xchg
mov
ret
outsb
cmp
hlt
icebp
sub
mov
jo
leave
dec
push
fists
pop
or
fstl
pop
push
cltd
mov
mov
jo
cmc
xchg
gs
xor
add
inc
rolb
inc
add
sahf
or
adc
ljmp
lock
ds
add
add
sahf
pop
das
lcall
addb
push
mov
push
ret
imul
xchg
push
fstps
xchg
mov
cmpsb
mov
ja
xchg
cmp
cltd
add
pop
movl
and
fs
pextrw
lahf
loop
dec
or
ljmp
sub
push
mov
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
lret
add
add
packssdw
sbb
push
mov
inc
popf
xchg
jl
cltd
inc
add
mov
pusha
add
sahf
mov
mov
and
inc
add
mov
pop
movsb
jle
inc
add
jmp
pusha
add
outsl
push
xlat
xor
lock
xchg
mov
mov
mov
mov
mov
or
pop
push
icebp
and
aaa
add
mov
addb
push
gs
lods
mov
pop
loope
xor
add
cli
subl
xchg
iret
pop
jae
cmp
stos
push
sub
in
not
push
stc
and
imul
gs
add
jno
add
inc
add
mull
lcall
loopne
iret
lret
lret
cmc
mov
and
shl
sub
xor
rolb
mov
rolb
pop
pop
mov
int3
push
lock
add
sti
es
add
mov
data16
outsb
push
ds
sbb
insb
add
clc
xchg
in
cmp
jp
add
addb
mov
push
cltd
add
movsb
push
add
inc
add
dec
in
jge
cwtl
mov
add
mov
test
mov
jg
dec
adc
xchg
stos
outsb
jns
hlt
shl
mov
inc
dec
xchg
xchg
popf
fwait
movsb
in
lds
mov
jae
sti
das
pop
test
imul
cmpsl
and
xor
cltd
inc
add
or
add
pop
popf
mov
push
rolb
sbb
add
add
sbb
ljmp
xchg
inc
cs
xor
add
lods
mov
jp
sub
out
push
add
add
xchg
imul
je
fwait
fwait
push
je
xchg
outsb
inc
jg
pushf
cmp
cmp
lahf
cmp
or
xor
leave
in
rcrb
mov
in
rorb
inc
push
std
pop
loop
mulb
mov
bound
fs
adc
add
wbinvd
mov
clc
mov
pushf
iret
inc
add
add
add
lret
out
insb
cmovns
icebp
jno
sarl
leave
push
daa
lcall
enter
bswap
xchg
jnp
fs
push
das
js
out
mov
cmp
shrl
adc
dec
lods
sub
sub
push
pop
sbb
jae
and
sub
sbb
push
and
adc
test
fidivs
mov
pop
insb
into
ret
test
bound
fs
lahf
mov
fcmovnbe
push
stos
cld
addb
sub
loope
pop
not
pop
out
movsl
jno
sbb
add
lret
mull
mov
or
jmp
jg
push
adcl
cmpsb
lret
xchg
sti
jb
fs
add
call
or
in
xchg
cmpsl
iret
jno
ljmp
fs
mov
cmp
sti
inc
add
dec
in
nop
std
mov
jo
jne
sbbl
std
nop
push
sub
jecxz
shll
add
inc
mov
cwtl
inc
add
add
mov
jo
push
pop
xlat
hlt
jmp
dec
mov
or
adc
in
cmp
out
dec
ucomiss
fwait
cs
add
pop
rolb
jp
sbb
add
ficoms
repz
add
add
add
jnp
xchg
pop
jns,pt
scas
mov
jae
or
andl
mov
pop
dec
dec
ds
push
xchg
inc
add
aad
lods
nop
dec
and
push
cmpsl
inc
fidivs
pusha
add
shlb
loope
jmp
inc
add
inc
cmp
and
stc
fwait
nop
out
cld
icebp
push
mov
sub
jo
jmp
dec
add
not
xor
bound
stos
lahf
ja
and
data16
sbb
mov
pop
sub
push
sbb
add
add
add
nop
and
add
dec
in
adc
and
add
stos
test
inc
stos
xchg
fsubrl
leave
mov
fidivrs
scas
das
cmc
adc
inc
movsb
cwtl
pop
frstor
shl
insl
ds
adc
jb
test
add
add
mov
mov
xor
adc
mov
loopne
add
add
dec
mov
test
xchg
mov
pop
insl
cmp
jae
jg
add
movsl
sub
and
or
pop
loope
mov
insl
cmpsl
pop
adc
push
mov
testl
ja
cli
jnp
das
cmp
sbb
cltd
adc
lret
out
dec
cmp
ds
incl
std
test
add
pop
mov
rorl
mov
icebp
popf
jne
addb
testb
sub
lock
fwait
daa
cmp
add
sub
add
idivb
pushf
sbb
test
daa
les
into
and
data16
xchg
xor
xchg
les
pop
rorl
fisttps
cmp
stos
daa
loopne
and
pusha
add
cmpl
jnp
faddl
or
push
jecxz
std
add
add
fsubrs
mov
test
addb
inc
call
rolb
subl
cmc
cmp
addb
add
mov
sub
mov
not
jle
lret
push
outsb
cmpsl
addb
adc
sti
sub
jns
loope
sbb
add
pop
mov
inc
mov
data16
mov
jnp
mov
ss
xchg
ljmp
add
and
outsl
stos
cltd
mov
stos
test
dec
push
xchg
iret
and
mov
lcall
lea
call
cli
jmp
and
aas
jmp
mov
push
jnp
mov
clc
out
pop
cmp
push
sbb
add
and
push
xor
stos
jne
repnz
and
lods
cmp
std
stc
jae
std
mov
dec
fld
add
cmp
lcall
movsb
mov
fidivrs
leave
push
nop
mov
addl
sahf
lret
cmpsb
or
cmp
mov
mov
in
mov
les
xchg
mov
addb
fcmove
shl
dec
popa
adc
in
into
jbe
jl
add
mov
push
int3
mov
dec
jnp
dec
jne
add
jb
hlt
pop
xchg
lock
add
add
xchg
into
pop
hlt
push
mov
add
add
mov
mov
add
ficoml
xlat
xor
xor
sub
push
add
ret
arpl
addb
nop
outsb
lods
in
pop
nop
bound
fidivrs
fsub
xor
frstor
push
add
add
repnz
aam
jo
bswap
mov
arpl
ds
out
dec
cmpsb
mov
add
and
pop
or
sub
insb
mov
jno
cmp
pop
fcomp
shll
push
fistps
lcall
add
popf
icebp
repz
inc
call
out
pop
or
repz
lcall
cmp
push
cmp
mov
mov
sbb
imul
dec
ret
or
push
push
sub
push
fwait
sub
add
mov
dec
adc
xor
adc
mov
cltd
cmp
adc
mov
pop
pop
sub
jmp
adc
jge
cs
adc
ror
out
ljmp
lret
cmp
add
and
or
jnp
aad
imul
and
scas
sbb
pop
jno
mov
xlat
pop
scas
pop
and
inc
arpl
es
push
add
push
pop
mov
adc
add
mov
pop
aaa
inc
add
pop
dec
mov
fstpl
add
in
out
jmp
mov
in
loopne
add
push
dec
mov
cmp
cltd
stc
or
dec
xchg
lret
jecxz
mov
rcr
mov
stc
data16
aaa
rolb
mov
pushf
sbb
inc
leave
stos
jecxz
addb
nop
and
loope
arpl
mov
pop
inc
add
lret
push
add
rolb
pop
rclb
pop
test
out
and
rolb
push
fsub
rolb
iret
jbe
mov
mov
nop
inc
add
outsb
pop
adc
cwtl
push
mov
int3
xchg
outsb
leave
mov
cmc
notl
and
add
jecxz
insb
mov
mov
mov
jbe
addr16
frstor
int3
arpl
lds
add
xor
es
mov
or
ja
push
shll
add
in
pop
rolb
add
imul
rorw
mov
out
scas
cmovns
loope
leave
sbb
mov
xchg
insb
in
rorl
dec
gs
inc
add
add
inc
add
addb
cmp
scas
mov
inc
add
pop
decb
repnz
out
sub
sub
bound
mov
xchg
daa
sbb
mov
mov
or
jl
into
and
rolb
insb
jg
rorb
pop
pop
les
pop
cmp
cmpl
xorl
pop
mov
insl
invd
push
dec
mov
mov
or
into
and
cltd
pop
fcoms
in
pushf
mov
add
addl
aaa
repz
dec
mov
cmp
data16
mov
xchg
adc
pop
jp
mov
add
addb
gs
or
jmp
add
inc
xchg
scas
and
int3
inc
add
sub
sahf
addb
sbb
outsl
into
mov
dec
scas
scas
xchg
mov
cmc
out
dec
add
nop
out
js
jo
mov
inc
add
cmp
out
push
repz
or
popf
addb
mov
rcl
in
cmp
inc
add
into
sti
mov
test
out
mov
adc
add
mov
pop
cmp
scas
aas
addr16
xor
add
rorl
inc
add
sub
cmc
push
aas
loopne
pop
inc
add
mov
lods
test
mov
push
fistps
cs
mov
cmp
stc
push
mov
test
lea
in
lret
dec
or
push
sub
hlt
sti
and
push
xchg
std
push
bound
xchg
in
fucomi
stc
mov
ds
adc
cmp
lret
les
aad
or
push
inc
add
add
and
and
sbb
push
xchg
sbb
outsl
xlat
in
xchg
and
jns
popf
aam
shrb
insl
inc
xchg
in
pop
sub
add
mov
inc
fdivrl
in
xchg
add
add
dec
mov
sbb
mov
ljmp
test
xchg
and
mov
or
push
dec
addb
pushf
les
inc
add
mov
popf
scas
ficoms
loopne
or
jmp
sub
mov
movsb
fsubr
jno
or
mov
xlat
and
mov
mov
adc
adc
dec
jge
out
ret
xor
adc
mov
push
or
rolb
push
ret
xchg
sub
jb
rorl
adc
lods
repz
mov
lret
or
shll
stos
mov
fwait
iret
or
ss
stos
scas
call
add
ljmp
or
in
stos
xor
arpl
daa
pushl
addr16
xorl
in
ss
cmp
mov
sub
aaa
lods
imul
push
inc
add
stos
insl
scas
adc
jecxz
das
rorl
or
push
outsb
inc
and
movb
leave
xlat
adc
addb
clc
sbb
test
adc
test
add
ljmp
popf
mov
jno
cmpsb
addb
fidivrs
pusha
add
add
pop
jl
out
mov
fs
add
or
lods
add
shrl
outsb
jmp
lret
add
insl
out
mov
js
enter
mov
mov
sub
adc
out
add
out
dec
out
addr16
push
adc
mov
test
mov
pop
mov
popf
push
mov
add
or
or
in
cli
test
addl
mov
inc
loope
add
mov
push
dec
insl
xor
aam
inc
add
imul
fldt
dec
loop
add
nop
mov
mov
int
test
imull
dec
or
adc
mov
xlat
sbb
adc
mov
push
mov
inc
js
push
or
js
push
add
pop
add
or
nop
cmp
add
xorl
out
push
jne
push
add
leave
mov
repnz
inc
or
and
jno
sti
int3
and
xchg
loop
cmp
pusha
add
add
and
movb
sbb
pop
bound
imul
frstor
imul
je
jecxz
ds
popf
pop
repnz
mov
outsb
fdivs
rdmsr
int
add
add
sub
dec
inc
idivb
jns
ret
addb
sub
cmc
inc
movsl
out
sub
push
push
push
or
dec
daa
mov
add
js
pusha
add
test
and
push
mov
push
ja
xlat
mov
add
add
lcall
cwtl
add
mov
add
jne
aam
call
js
jecxz
rorl
push
mov
scas
cmc
and
or
clc
mov
dec
jg
lods
mov
dec
daa
lret
in
inc
std
xor
cmpsl
mov
in
push
fprem1
pop
push
jmp
mov
lret
out
pop
push
dec
pop
push
push
bound
lret
stc
idivb
add
bound
sbb
sub
xchg
jae
es
add
jno
add
sarb
movsl
les
stos
outsl
xchg
lret
add
aaa
dec
or
add
adc
pop
jo
sub
adc
adc
add
add
cmp
sub
add
dec
lods
daa
add
mov
je
in
and
lods
lods
push
push
scas
rolb
call
add
sub
int3
test
mov
out
jno
push
add
sbb
mov
out
inc
pop
pop
push
sahf
adc
mov
dec
add
inc
inc
lods
mov
xor
les
cmp
mov
xor
xor
sbb
push
mov
jg
mov
add
test
arpl
dec
cs
int
mov
pop
pop
jo
in
pop
inc
cmp
cld
scas
jecxz
push
add
adc
sahf
fwait
cmpsb
mov
add
and
outsb
add
xchg
pop
sti
lret
cmc
mov
mov
out
mov
cmc
jp
scas
sub
mov
out
nop
imul
jo
add
mov
dec
out
out
lods
add
outsl
mov
cmpsl
sarb
out
fisubs
ljmp
cmp
and
pop
or
and
pop
lcall
add
add
sub
mov
insb
xor
mov
add
out
sub
scas
mov
shll
cmp
ret
xchg
ds
bound
clc
or
pop
push
add
pop
mov
add
movsb
ret
dec
mov
imul
dec
dec
pop
pop
enter
enter
insb
jp
inc
dec
lock
mov
pop
mov
les
repnz
scas
aam
add
jo
imul
cmp
jg
add
xor
les
fisubrs
xor
adc
scas
pop
pop
add
test
cmp
out
out
push
pop
dec
pop
and
popf
xchg
int
rcl
outsb
cmpsb
fldcw
mov
and
add
push
push
add
pop
sub
xchg
clc
ret
xchg
mov
lret
pusha
add
and
jns
enter
mov
aam
add
dec
and
add
sbb
push
add
lods
inc
add
add
cmpsb
aas
adc
lds
jecxz
cmpsl
mov
fwait
loopne
add
jge
push
daa
addb
dec
in
and
push
inc
add
out
aam
mov
pop
in
pop
jmp
gs
or
pop
mov
sub
lret
inc
sbb
test
dec
xlat
sub
cmp
shlb
add
add
ds
mov
popf
or
daa
ret
add
xchg
repz
add
sbb
roll
out
loope
icebp
cltd
pop
imul
add
mov
lret
movb
mov
sub
pop
insl
push
cmpsl
mov
pusha
add
jne
adc
int
mov
dec
lcall
inc
add
mov
js
jle
das
shlb
dec
pop
jmp
add
insb
add
mov
mov
cs
fsubrl
jl
xchg
sub
add
test
aam
mov
sub
xchg
push
imulb
imul
cmp
sbb
dec
add
inc
add
outsb
sub
iret
pop
sti
addb
inc
std
xchg
mov
incl
mov
cmpsl
push
jns
cmp
je
cwtl
sub
add
outsb
xor
xchg
sbb
push
mov
mov
movsl
popf
xor
and
add
lcall
xor
mov
iret
xchg
nop
out
sbb
arpl
jecxz
add
mov
call
pop
mov
ss
or
add
or
sarl
jmp
std
orl
fbld
mov
mov
rcrl
mov
add
loope
pop
loop
add
mov
pop
dec
lret
cmp
cli
addb
cmp
int
pop
stos
and
nop
fldcw
popa
jge
xchg
push
adc
xchg
lret
sbb
lods
mov
aaa
mov
xor
aaa
dec
push
pop
mov
scas
push
cmpsl
cmpsl
pop
add
mov
jns
sbb
jg
sub
cmp
add
pushf
je
call
mov
dec
ss
enter
pop
mov
fimuls
pop
cld
cld
dec
and
ret
sbb
pop
jecxz
fstpt
mov
ror
xor
inc
imulb
mov
ds
sub
sub
mov
arpl
xchg
int
inc
add
cmpl
add
add
ret
sarb
jae
ss
lods
push
sti
pushf
lcall
or
movsl
adc
js
test
mov
in
and
cmpsb
jle
mov
or
add
inc
add
cmp
mov
cmp
and
into
lea
ss
cmpsl
adc
mov
icebp
push
and
cmp
add
insb
mov
testb
mov
add
cmp
sub
sub
add
movb
mov
sub
add
cmpsl
daa
mov
or
stc
jle,pt
add
mov
xchg
mov
push
and
push
sahf
pusha
add
cltd
or
mov
mov
and
into
dec
or
scas
cs
or
fbld
clc
pop
popa
popa
imul
rolb
sarl
cltd
mov
jno
add
mov
add
lea
dec
push
cld
out
mov
loop
add
mov
add
fwait
mov
std
outsl
dec
xor
push
int
mov
pop
xor
mov
outsl
push
and
mov
sbb
repnz
adc
bound
xor
mov
icebp
xchg
jl
mov
push
or
push
rolb
cmp
mov
jmp
sahf
sbb
je
or
add
sar
inc
push
xchg
inc
add
lcall
adc
ds
data16
vmovlhps
dec
mov
jmp
sbb
nop
dec
push
mov
push
dec
cmp
dec
das
inc
add
jno
jb
in
mov
ds
jae
popf
lock
test
fstl
dec
test
sub
pushf
fidivrs
xchg
adc
enter
jle
push
push
xchg
jge
into
xor
xlat
cmp
jae
xor
clc
outsl
test
lret
push
dec
or
mov
push
xchg
dec
imul
and
pop
cmp
pop
and
mov
movsl
cld
xchg
pop
imul
jle
inc
sbb
test
add
pop
dec
mov
mov
xchg
aam
inc
jns
sahf
rolb
faddl
add
add
xchg
mov
lods
cmp
aaa
jnp
repnz
fists
xchg
out
iret
cmc
inc
add
inc
add
rolb
xchg
fcmovnbe
jns
add
xchg
xlat
push
repnz
add
mov
ljmp
dec
fidivrs
aaa
xor
mov
scas
cmp
push
insb
test
adc
adc
xchg
and
popf
icebp
fnstcw
sbb
sbb
stos
fmull
in
add
or
jmp
jl
mov
leave
nop
jecxz
and
into
mov
rolb
add
popa
sub
jmp
ficomps
mov
jae
inc
add
pushf
mov
and
or
push
add
lds
sbb
cld
scas
xor
cs
cltd
push
or
repz
sub
repz
icebp
sbb
dec
pop
xchg
cmp
xchg
sub
add
jns
or
adcl
add
test
add
inc
mov
push
testb
add
add
loope
fstpl
add
test
jbe
add
sbb
mov
int3
dec
std
ja
pop
call
push
push
pop
lret
sar
mov
mov
daa
inc
add
add
dec
cli
mov
mov
mov
cmp
and
jne
and
movsl
jae
mov
int
call
mov
fsubr
cmp
sbb
inc
rolb
sti
adc
adc
es
movl
das
aas
lahf
adc
cmpsl
outsl
or
jae
pusha
add
push
jecxz
mov
addr16
bound
xchg
mov
jnp
jae
pop
fimuls
loope
hlt
sub
adc
jne
fildll
dec
insb
lret
jg
dec
inc
adc
add
xchg
sub
lahf
fistl
rolb
test
or
xchg
and
mov
enter
lock
xor
add
sbb
sub
add
mov
inc
add
inc
add
sub
out
sbb
mov
aas
dec
in
test
inc
fwait
mov
cmp
mov
out
push
and
lock
arpl
or
mov
out
dec
dec
push
mov
push
test
inc
add
aas
and
add
dec
sub
mov
je
mov
pop
bound
aaa
enter
loop
loopne
mov
mov
subl
or
popa
les
and
addb
jno
push
jmp
push
mov
movsl
push
addr16
popf
aas
fnstenv
adc
mov
and
in
repz
mov
mov
mov
int3
add
push
pop
out
lock
out
cwtl
mov
and
mov
hlt
iret
xchg
xchg
loop
pop
imul
jae
bound
sti
jb
xchg
stc
dec
jl
or
mov
ljmp
push
add
dec
movsb
cwtl
int3
in
div
out
dec
nop
push
sbb
add
or
mov
adc
and
mov
lahf
inc
add
mov
adc
cltd
pop
cld
repnz
test
add
cli
cli
shll
cmc
test
jg
jns
stos
mov
jo
mov
in
jns
inc
fidivrl
arpl
loope
xchg
out
loop
push
sahf
and
insb
outsl
cmp
inc
add
xor
add
push
scas
fs
sub
dec
mov
add
es
std
ds
lret
test
and
testl
stos
inc
add
sub
outsb
mov
addb
mov
pushf
jecxz
rsm
jnp
xchg
xor
xor
addr16
add
adc
push
rcrl
push
les
push
jb
ds
clc
sub
sub
movsl
imul
sub
add
scas
push
add
add
cmc
iret
test
xlat
mov
bound
xlat
and
or
mov
push
out
add
xor
push
mov
xchg
inc
add
xlat
repnz
lahf
xchg
fs
sbb
lods
icebp
int3
xchg
inc
add
xchg
jo
sub
into
fcoml
in
jl
iret
xchg
loope
and
add
fistpl
sbb
lret
dec
xor
adc
fadds
and
aam
ds
jle
inc
int3
push
mov
xchg
ja
or
mov
cli
lea
mov
xchg
jb
popf
add
lods
cltd
fadd
add
cmpsb
or
jp
mov
movb
jb
or
movnti
pop
aad
push
inc
add
cmp
pop
or
add
push
push
add
jmp
lahf
pop
xchg
cli
pop
jb
jne
cmpsb
cmp
push
inc
add
sbb
jns
mov
jl
or
scas
pop
or
mov
pop
and
std
dec
push
sbbl
push
es
loop
pop
cmp
sahf
insb
fisubrs
clc
bound
and
jne
out
invd
nop
cmpsl
das
jmp
add
add
add
push
scas
cmpsb
arpl
inc
push
mov
push
sub
xchg
icebp
jg
cmp
add
mov
add
push
mov
in
mov
mov
inc
iret
mov
stos
ret
iret
xchg
insl
movsl
fcmovnbe
dec
add
mov
dec
push
add
add
add
lret
leave
sub
add
pop
inc
add
pop
fisubrl
add
jns
add
pop
mov
cmp
mov
pop
and
add
xchg
dec
repz
push
push
xor
add
lea
jp
sbb
hlt
jne
fwait
jne
bnd
push
mov
inc
add
add
test
jno
roll
fidivs
add
mov
repz
add
push
negl
ss
sbb
ret
cmp
ja
insb
fmul
fcom
jnp
out
mov
jae
sub
scas
mov
push
and
popa
cltd
iret
cmp
les
insl
ljmp
fcomi
ja
sbb
sbb
arpl
inc
add
ror
adc
push
fs
add
test
sti
pusha
add
xchg
out
movb
cmp
inc
add
pop
and
add
sti
add
add
sub
xor
mov
clc
jge
aam
push
sahf
push
pop
pop
xchg
add
outsl
mov
in
or
lret
iret
shlb
ret
out
mov
add
addr16
mov
outsl
or
ss
test
lret
push
push
out
dec
jbe
and
xor
add
push
sub
adc
jb
add
pop
sti
pop
jbe
add
enter
jae
cmp
adc
fimull
leave
in
mov
ljmp
add
jl
add
das
outsl
sub
rol
jb
mov
cmp
dec
push
ds
inc
pop
fisubrs
jle
mov
or
mov
pop
cld
jbe
push
test
inc
add
mov
xchg
dec
pop
sub
into
out
rclb
nop
mov
idiv
sti
pop
mov
or
add
push
hlt
xor
add
sub
loope,pn
xchg
dec
and
cmpsb
sbb
iret
fsub
std
jle
xor
mov
fwait
hlt
test
or
add
push
roll
jle
add
mov
add
xchg
cli
nop
inc
shll
dec
test
fiadds
sbb
pushf
xchg
xchg
inc
fcmovb
add
push
xchg
pop
sub
add
xor
sub
sbb
lret
mov
shlb
and
push
inc
add
fildl
pop
pusha
add
mov
pop
mov
xchg
sti
addb
mov
mov
lahf
mov
sub
add
scas
daa
and
xlat
lods
sub
orl
loopne
adc
or
ret
mov
cs
and
xor
fnclex
mov
bnd
aad
das
jnp
sub
adc
jp
add
ss
add
fcoms
xor
push
in
mov
sbb
clc
cli
cwtl
lds
out
mov
and
inc
add
pop
adc
mov
arpl
sub
pop
hlt
sbb
sbb
movsl
adc
mov
enter
pop
add
pop
or
add
in
and
sahf
add
aas
movsl
ficompl
fsubrp
ljmp
jmp
push
scas
mov
bound
dec
sbb
lcall
jp
add
ds
mov
add
insb
fs
add
mul
scas
xor
inc
mov
add
shrb
std
cmp
add
rolb
add
sbb
test
out
cmp
mov
adc
add
push
addb
repz
into
mov
xlat
or
jp
sub
cmp
pop
and
cmp
call
sbb
insb
pusha
add
push
aas
js
test
insl
cmp
insl
daa
int3
fisttpll
cmp
jmp
jb
or
xor
add
dec
push
dec
add
add
daa
cmp
in
push
aad
dec
pop
pop
scas
xchg
mov
notb
hlt
ljmp
pop
and
fwait
xchg
and
add
mov
mov
pusha
add
fs
bound
loop
add
shl
in
push
jmp
jle
push
add
in
mov
fldl
mov
aam
imul
fmull
sahf
jecxz
mov
cltd
orl
and
mov
mov
push
movb
mov
inc
addr16
add
lods
adcl
loop
push
xchg
xchg
mov
or
stos
or
sbb
sub
add
add
iret
push
add
mov
stc
xlat
jmp
movb
clc
dec
adc
inc
les
test
cmpl
shlb
cmpl
push
mov
sbb
adc
inc
inc
mov
es
mov
popf
clc
pop
sti
adc
adc
pop
fldt
or
stos
or
rcll
add
inc
loopne
jae
fdivrl
int3
inc
add
sub
lahf
mov
lea
xor
xchg
xorl
jno
pop
inc
add
ret
lret
lcall
add
std
sbb
push
rolb
pop
add
enter
mov
loopne
mov
mov
xor
xor
xchg
iret
jbe
add
ret
add
testb
icebp
dec
jecxz
std
gs
inc
or
inc
add
adc
mov
add
xlat
fisttpll
dec
ljmp
jne
cld
shrl
pop
sub
pop
lahf
add
inc
out
push
adc
add
jmp
xchg
jo
out
mov
pusha
add
add
in
mov
scas
push
test
mov
out
popa
aam
insb
ja
ds
lret
lahf
add
sbb
sub
add
or
and
sbb
jo
adc
daa
mov
add
leave
or
jp
addr16
xlat
pop
insl
flds
add
test
pop
and
sbb
test
lret
pop
mov
les
sub
push
add
imul
test
idiv
addb
add
in
mov
call
movb
test
gs
adc
sbb
std
xchg
mov
push
pop
sbb
aad
cli
negb
dec
mov
push
ret
lods
dec
les
sbb
bound
test
jbe
lret
xor
add
lods
inc
jle
or
mov
add
popa
mov
aaa
xlat
mov
mov
add
call
mov
xchg
dec
cli
adc
add
shrl
in
in
nop
loop
imul
inc
test
cmp
cmpsb
push
sbb
pusha
add
jno
pop
and
sbb
outsb
les
fucomip
movsb
mov
jbe
das
ret
add
jb
cmc
xlat
js
or
fwait
jbe
clc
xor
lock
mov
loop
sub
pop
repz
js
sub
out
jne
inc
jecxz
add
mov
lods
cmpsl
jbe
add
cmpsl
leave
mov
pop
test
mov
mov
cs
in
sahf
out
pop
push
cmpsb
testb
pop
and
fs
out
fdivp
movb
mov
and
test
sbb
sbb
push
or
sbb
gs
aad
xchg
gs
cmp
mov
sbb
rorl
lret
lea
pop
or
pop
mov
mov
add
enter
or
add
adc
xchg
and
adc
add
push
data16
movsl
arpl
pop
xchg
scas
push
cmp
pusha
add
fdiv
sbbl
in
pop
lret
nop
sub
sub
lea
xchg
daa
sar
enter
cltd
mov
push
repz
jno
cli
ja
adc
enter
inc
add
pop
pop
xchg
add
iret
pop
aam
cs
cmp
lds
js
jno
iret
aaa
mov
cwtl
pusha
add
call
add
cmp
adc
mov
shl
push
stos
xor
pop
dec
pop
jbe
push
ficoml
xchg
xchg
jle
sbb
cmp
add
mov
xchg
notl
pusha
add
fildll
adc
daa
movsb
ret
xor
cmp
jns
ljmp
out
pop
add
add
push
inc
add
add
xchg
aas
jnp
popf
enter
cmp
sub
add
mov
add
ja
mov
jne
add
clc
movsl
dec
jg
push
clc
jl
out
push
test
and
push
mov
mov
fmull
add
jbe
push
add
mov
jecxz
jbe
ljmp
js
pop
push
jnp
mov
xchg
mov
add
enter
insb
add
mov
in
xchg
inc
shll
movb
rcll
xor
mov
popl
stc
cmp
stos
xchg
lahf
sbb
repz
loop
cmp
adc
add
jg
push
xor
cmpsb
ja
jo
stos
jp
adc
or
ret
sbb
fbstp
in
mov
mov
out
mov
daa
out
xor
dec
pop
add
popf
ret
faddl
push
scas
daa
mov
sub
add
cmp
iret
jle
imul
enter
push
ss
dec
dec
leave
enter
loope
pop
fdivs
push
lret
jg
fdivrl
or
jno
bound
xchg
lods
icebp
jo
mov
fsubr
and
dec
push
repz
mov
xchg
lea
push
lods
ja
mov
sub
pop
in
lahf
pop
xor
inc
mov
sub
and
pop
pop
arpl
mov
dec
dec
pop
xchg
sub
add
mov
adc
test
mov
xchg
and
xchg
data16
lcall
inc
add
shll
sbb
add
add
and
fs
jbe
or
movb
jne
cmc
mov
sub
repz
push
adc
cwtl
fcmovne
outsb
inc
add
push
aas
xchg
or
mov
mov
pop
inc
cwtl
sub
mov
xor
push
add
je
inc
icebp
cmpsl
push
add
dec
push
adc
scas
dec
sbb
inc
ss
cltd
fistpll
jmp
mov
fcmove
notb
data16
jge
movb
push
add
sti
sbb
jae
jbe
mov
nop
push
or
and
and
push
out
add
add
jae
xor
addl
lret
adc
push
jge
mov
sbb
cmp
out
dec
sbb
xor
lods
sti
jg
ja
loopne
out
xchg
push
mov
aam
in
xor
adc
lcall
lods
sub
add
push
push
jb
jg
ret
mov
sbb
xchg
je
jns
fiadds
ja
hlt
fs
faddl
test
pop
pop
sub
add
push
cwtl
jb
scas
test
fcoml
add
push
insb
xor
out
push
add
inc
lret
icebp
mov
add
mov
add
cmp
rolb
xchg
fs
mov
or
les
data16
add
push
ret
es
dec
sub
push
sub
add
add
or
sti
loope
mov
cltd
loope
jge
scas
loop
aad
sbb
fwait
or
mov
mov
js
sbb
fs
add
xchg
mov
addb
lret
daa
xor
dec
xor
xor
inc
add
ja
add
scas
pop
mov
flds
adc
notl
xor
test
or
loopne
jae
jmp
mov
adc
out
popa
jge
pop
xlat
jmp
lahf
inc
aaa
dec
stos
cmpsl
push
sbb
sub
das
mov
cli
int3
mov
mov
add
enter
add
shl
and
add
or
fnstsw
cmc
cwtl
imul
mov
jg
pop
and
mov
fmuls
jae
loopne
cmc
loopne
add
out
adc
es
push
aas
cmc
xchg
sbb
fildl
sbb
mov
jne
dec
aam
or
pop
add
xchg
dec
dec
xor
pop
push
cmp
aad
jns
aam
push
xchg
push
ljmp
push
cmp
fsubrs
inc
add
sub
dec
popf
cld
and
add
mov
leave
sbb
dec
cmp
pop
cmp
fs
out
dec
mov
add
xchg
sub
movb
add
pop
lahf
jl
clc
daa
imul
mov
add
insb
mov
push
mov
jmp
int
xor
pop
out
pop
sbb
add
rcll
cmp
xchg
xchg
dec
aam
js
mov
stos
mov
inc
xchg
js
int
dec
sbb
dec
out
jle
and
or
daa
repnz
lods
cmc
inc
add
jo
fs
dec
loope
add
pop
sbb
xchg
push
and
inc
add
xchg
and
mov
aad
loope
imul
cmp
dec
in
and
jp
adc
mov
and
movsl
mov
addb
add
mov
add
jg
aam
add
jmp
add
push
push
sbb
dec
dec
int
push
add
push
rol
popa
cmc
es
xor
sbb
inc
repz
les
call
pop
popf
jo
inc
add
ds
cmp
int3
cwtl
out
aas
mov
outsl
and
jns
jno
jmp
aam
clc
mov
clc
push
call
xchg
test
cli
jo
out
sbb
pushf
call
fadd
add
add
rcll
sub
out
shll
sub
inc
add
add
inc
add
cs
int3
add
adc
push
mov
repnz
fldl
fistl
aad
sub
add
aam
push
and
inc
add
rcl
lret
loop
push
push
mov
mov
loope
lcall
jo
mov
test
rolb
je
rol
pop
cmp
jnp
lea
in
add
pushf
cmp
das
jmp
mov
mov
cltd
inc
in
fistps
addb
pop
in
mov
dec
sub
scas
rcr
loop
mov
insl
mov
scas
pop
jp
xor
jge
pushw
imul
daa
testl
inc
add
jl
jo
jmp
xchg
lret
xchg
sahf
fstpt
add
and
movb
push
out
mov
pop
cmp
adc
cld
fwait
sub
cmp
pop
mov
dec
mov
xchg
xchg
adc
aad
mov
lcall
movb
std
pop
das
mov
insl
xor
xchg
push
stos
mov
and
inc
cltd
addl
and
lcall
repnz
aad
std
cmp
and
add
xor
inc
adc
jne
sub
jnp
mov
and
xchg
testl
pop
addb
test
aaa
scas
push
shl
stos
mov
and
test
insb
or
imul
push
add
mov
add
add
movsl
cmp
in
add
or
mov
jl
in
cmpl
adc
in
mov
add
adc
leave
xor
jae
cmp
xchg
in
ficompl
add
enter
aas
fidivl
push
add
push
mov
add
xlat
xchg
ret
add
xchg
adc
mov
cmp
inc
fdivl
test
rorl
rolb
in
ds
fcmovbe
jmp
and
jns
add
idivl
loope
add
out
les
pop
mov
adc
add
inc
add
cmp
add
lea
add
aas
popf
lds
je
push
and
das
jg
jge
or
ljmp
in
cwtl
cld
nop
xchg
pop
jmp
sbb
dec
push
or
cltd
cmp
out
sbb
adc
push
adc
jp
aas
xor
xor
push
push
jmp
inc
add
inc
sub
test
mov
adc
xchg
loope
pop
cwtl
or
xchg
jl
dec
out
ja
test
inc
add
dec
outsl
insl
out
push
js
and
add
movb
movsl
cli
fsubrl
fstpl
jge
dec
rolb
dec
adc
inc
add
idivb
adc
pop
nop
or
jl
lcall
push
xchg
mov
inc
pop
rcrb
sahf
movsl
jmp
lret
gs
add
out
loope
mov
pop
stos
mov
mov
test
add
lds
xchg
lret
in
sti
shll
out
xchg
out
push
frstor
mov
xor
rolb
mov
mov
lret
add
pop
movsl
add
sbb
lods
push
js
lcall
mov
mov
insb
sub
cmp
push
jp
hlt
mov
into
push
push
pop
leave
iret
xchg
movsl
imul
dec
inc
add
out
sbb
add
icebp
pop
inc
in
xchg
pop
sub
add
jge
push
je
negl
dec
popf
sbb
sbb
adc
add
push
rolb
dec
stc
addb
mov
mov
inc
adc
pop
int
pop
int
or
add
inc
leave
sbb
stos
mov
repnz
adc
das
mov
add
add
iret
pop
je
stc
jmp
sub
fmull
add
lcall
dec
dec
jno
inc
add
in
add
cs
out
lahf
divps
cmpsl
aaa
lods
sbb
add
inc
add
push
mov
arpl
push
dec
int3
cmp
scas
xchg
dec
out
arpl
addb
xor
cmc
mov
mov
lods
sub
add
inc
imul
push
xor
cmp
filds
into
pop
add
jb
hlt
int3
test
cmp
add
sub
mov
cmp
cmp
xchg
dec
xchg
sbb
jne
ss
jae
mov
add
aam
pop
mov
shll
adc
or
nop
mov
cld
test
dec
cmc
mov
insb
add
add
icebp
or
add
addr16
adc
int
xor
mov
test
adc
repnz
ficomps
push
sbb
enter
push
adc
add
jge
hlt
push
or
pop
insl
jl
push
dec
addb
push
lret
out
mov
add
popf
popa
mov
in
xlat
xchg
test
cmpl
xlat
cmc
movb
or
dec
xor
ret
aaa
xchg
push
push
fcompl
xor
cmpsl
push
add
bound
jp
sub
fistpll
cmp
sub
imul
mov
movsb
imul
stc
cmp
mov
loope
pop
pop
repnz
xor
mov
mov
add
or
mov
push
mov
jecxz
add
pusha
add
xchg
xor
add
mov
in
in
stc
and
add
inc
idivl
test
cmp
push
fsts
mov
xlat
mov
mov
adc
add
mull
cmp
push
lret
mov
popf
test
movb
and
ret
das
js
fptan
jbe
add
sbb
imul
clc
adc
add
sbb
jp
shrb
adc
cwtl
cltd
mov
mov
jo
push
add
mov
mov
and
mov
lcall
cwtl
std
loope
mov
add
sarb
pop
fldt
neg
mov
mov
lock
push
stos
mov
daa
jno
arpl
sbb
loop
call
mov
mov
add
add
lock
dec
pop
sub
jle
sub
cmp
faddl
and
add
cwtl
and
decl
popf
add
adc
add
mov
mov
jno
xor
fucom
sahf
dec
das
push
mov
mov
adc
xchg
jecxz
jmp
cmpsl
or
fidivrl
and
je
add
add
xor
cmpsb
lds
icebp
pop
ds
negb
fldenv
mov
ret
gs
orl
lret
mov
shrb
push
movb
xchg
stc
xchg
pop
stc
jnp
cmp
mov
mov
push
jle
out
xor
push
daa
mov
iret
nop
iret
nop
xchg
mov
adc
inc
mov
movb
xchg
nop
test
rcrl
add
outsb
mov
sbb
mov
fmulp
je
mov
pop
je
cltd
lods
insl
rolb
test
add
mov
inc
add
xchg
mov
aas
add
sub
dec
and
jno
out
add
pop
push
mov
arpl
call
jecxz
sub
or
mov
mov
jno
add
cs
sub
add
mov
es
xchg
jnp
add
popf
add
repz
sub
in
xchg
cmp
cmp
pop
lahf
push
div
sbb
ds
push
cmpsl
cmpsb
cmpsl
push
ss
or
push
jno
mov
jl
add
dec
hlt
xchg
int
dec
dec
mov
add
push
inc
mov
fdivrl
sbb
sub
add
fdivr
insl
sub
push
shll
movb
xchg
jne
add
aam
mov
and
mov
cmp
jb
add
add
sbb
cs
jg
ss
sarl
mov
xor
nop
loop
insb
inc
mov
mov
mov
add
or
lods
loopew
mov
testl
test
cmpsl
dec
out
jmp
out
enter
sahf
mov
jae
les
rcrb
xchg
loopne
add
std
addr16
in
push
iret
jbe
out
cmp
xchg
fidivl
pop
mov
and
pop
dec
dec
je
icebp
sbb
jno
enter
ss
pop
jle
sub
fldl
add
clc
repz
jnp
ficoml
mov
mov
inc
call
aad
out
cmp
adc
mov
sbb
popf
nop
pop
test
divb
cmp
add
insl
insb
ret
cmp
sbb
ja
daa
adc
mov
mov
and
push
mov
mov
add
movsl
adc
push
mov
add
ljmp
add
add
stos
adc
mov
sub
rolb
mov
lods
scas
add
pop
fdivrl
add
out
adc
cmp
out
inc
pop
mov
mov
cmpl
push
mov
jb
sub
pop
and
stos
insl
push
iret
in
lods
clc
fists
jmp
sub
iret
inc
add
mov
ds
pop
loope
mov
addb
push
inc
add
je
int
cmp
loopne
push
ja
insl
dec
push
dec
mov
loope
jno
cmpsb
fdivr
and
fwait
aad
xchg
stos
sbb
jo
divl
jge
outsb
cltd
movb
les
stc
push
jnp
aam
add
sub
movb
and
in
add
push
jg
pop
lock
les
push
dec
mov
sti
jmp
mov
cmp
insl
ret
dec
scas
loop
pop
jne
xor
xchg
fwait
xchg
adc
jle
imul
cmp
xchg
mov
jnp
xchg
or
adc
fldenv
mov
paddq
pcmpeqd
add
push
rolb
inc
add
enter
test
mov
dec
xchg
data16
lods
xchg
pop
les
mov
add
lcall
or
mov
lock
imul
mov
jbe
jg
outsb
int
test
and
mov
xchg
rolb
mov
sahf
xacquire
xor
popa
in
add
add
cmp
add
push
jno
jno
rcll
mov
dec
xchg
out
push
push
add
sbb
add
in
pop
fmul
clc
cmp
add
xor
rorl
rolb
add
in
mov
in
add
outsb
jl
mov
pop
push
xor
inc
cmpsl
popa
popf
sub
out
cwtl
inc
add
lret
loop
push
add
mov
jge
and
das
cmpsb
mov
lock
stos
sub
ret
mov
iret
and
cmp
pop
add
in
and
incb
push
or
mov
cmp
es
or
mov
sub
xchg
sub
scas
add
pop
fucom
les
ljmp
out
dec
cmp
sub
or
inc
add
add
push
outsb
pop
stc
in
pop
imul
aam
or
fisttpll
sbb
or
mov
add
add
mov
das
adc
lods
add
and
pop
fdivl
mov
inc
add
ror
pop
stos
add
push
mov
add
cmpsb
xchg
scas
adc
xchg
sbb
gs
and
inc
cmp
into
pop
cwtl
dec
popf
aas
pop
nop
addb
lret
jge
push
pop
mov
inc
add
nop
mov
sub
dec
xchg
icebp
add
sahf
xor
es
add
add
add
add
push
sub
add
push
add
std
jnp
xchg
scas
clc
push
sbb
nop
icebp
pop
ret
out
sbb
shl
lods
lods
push
insb
out
aaa
ljmp
add
push
xchg
arpl
mov
decb
adc
jge
pop
push
bound
jg
sbb
add
nop
call
fsubs
fdiv
sti
stos
add
ljmp
rcrl
outsb
dec
gs
movsb
and
inc
cmc
pop
in
mov
jns
add
xor
inc
add
cmpsl
icebp
fwait
out
adc
flds
ret
aad
sbb
sbb
mov
add
ds
scas
mov
add
push
pop
loop
movsb
icebp
movb
mov
aam
adc
iret
mov
push
dec
mov
xchg
and
mov
add
fcompl
incl
cltd
iret
mov
or
sub
leave
fstpl
push
je
mov
inc
xor
dec
leave
mov
add
mov
clc
jnp
stos
mov
cltd
inc
nop
jnp
sub
stos
push
add
mov
cmc
jnp
insb
add
fs
pop
les
mov
mov
xchg
inc
add
ljmp
gs
cmc
ds
adc
sbb
add
ljmp
bound
jb
dec
xor
into
leave
jbe
scas
mov
add
daa
or
xcrypt-ctr
cmpsl
sbb
shl
cld
pop
hlt
push
cltd
movb
lcall
cmp
cli
sbb
testb
out
add
xchg
jge
mov
mov
or
adc
push
mov
pop
cltd
mov
inc
adc
das
xor
pop
pop
adc
out
ljmp
jle
pop
dec
mov
stos
and
loop
add
sbb
mov
xchg
push
sbb
push
pop
sar
or
fistpl
pop
adc
and
dec
mov
add
cld
lret
fiaddl
mov
enter
je
repz
xchg
stos
in
adc
dec
aaa
mov
test
jae
mov
mov
bound
jle
mov
xor
test
xor
jnp
cmp
mov
jbe
xchg
dec
mov
pop
fcmovnbe
jecxz
adc
lret
push
arpl
dec
enter
jo
fs
ja
dec
test
stos
cltd
jg
or
mov
add
or
push
movsl
lds
add
cltd
inc
dec
enter
mov
incb
mov
push
rolb
fcoml
jmp
pop
iret
or
pop
pop
cld
in
push
xchg
mov
sti
outsb
adc
add
mov
sti
dec
loope
iret
or
cmp
pop
jle
lea
data16
add
enter
clc
inc
add
add
ss
adc
xor
push
mov
add
ljmp
mov
fsts
inc
jl
add
jns
sub
stc
fcompl
dec
add
aaa
pop
jno
js
ds
hlt
aad
xchg
mov
jp
mov
pushf
jnp
push
dec
jle
xor
cmp
xchg
xlat
xor
sbb
or
shll
or
push
imul
xor
addb
cmp
push
xor
daa
addr16
mov
cmp
mov
adc
cmp
aam
mov
jb
sub
adc
xchg
iret
sbb
sarl
adc
out
push
add
inc
repz
push
or
dec
mov
sbb
or
es
pop
mov
rcll
pop
inc
mov
leave
xchg
xchg
push
call
xchg
pusha
add
cmpsl
cmpsl
popa
cmp
lods
repnz
std
adc
add
cmp
cltd
jl
jns
iret
sbb
lcall
pop
cmp
movsb
push
fnstsw
fisubrl
fisttps
mov
sub
cmp
fs
jnp
fwait
mov
lret
lcall
dec
adc
fiaddl
add
cmp
test
lods
aaa
xor
loope
mov
test
lcall
out
inc
std
repz
out
mov
in
dec
sti
ss
inc
pop
jae
ficomps
lods
addb
ja
aam
push
lds
mov
enter
xor
fiadds
test
push
rcrl
stos
or
add
or
cmp
ror
sarl
jmp
and
nop
loopne
add
push
leave
and
int3
dec
dec
cltd
fwait
in
loopne
fnsave
xchg
add
dec
scas
sbb
fdivp
sbb
outsl
cmp
rolb
inc
pop
sub
out
cmp
jns
add
sahf
add
or
add
roll
rorl
xor
rcrb
and
xchg
pop
add
sub
sbb
in
sbb
inc
add
sbb
insb
rorl
xor
cmp
jo
mov
js
lods
mov
mov
add
or
add
xchg
loopne
mov
push
test
cmpsl
cmp
mov
add
out
shll
add
push
xor
pusha
add
cmp
xor
fcmovnb
add
loopne
push
mov
out
ss
fcmovnu
add
cmp
mov
mov
xchg
aam
repnz
lret
dec
jg
mov
inc
lahf
push
loope
cmp
loop
mov
xchg
add
pop
push
test
fmulp
push
add
jo
add
stos
jnp
add
lret
push
ja
xchg
add
lcall
fsubr
negl
cmp
cmp
mov
push
mov
test
cmp
dec
test
sti
dec
into
test
cli
outsl
ss
add
rolb
pop
mov
sti
ljmp
roll
sbb
das
pop
xlat
divl
aas
repz
add
push
mov
pop
push
fwait
cmc
test
adc
cmp
sbb
out
dec
push
jp
xor
cmpsl
inc
add
xchg
into
les
or
jnp
jmp
leave
add
rclb
rcl
mov
lahf
push
xchg
pop
cs
add
mov
arpl
je
ljmp
rol
add
idivl
and
rclb
fidivs
adc
mov
cmpsl
xchg
ja
xor
lock
pop
xchg
jp
pop
sti
dec
pushf
inc
add
stos
in
into
cmpsl
and
or
xchg
cmc
sub
xchg
outsb
inc
add
mov
or
jo
jae
les
push
inc
add
mov
pop
lcall
adc
mov
gs
adc
mov
test
jg
or
xor
stos
nop
jo
sub
pop
imul
xchg
sub
push
add
mov
fisttpl
out
inc
addb
addb
ret
bound
add
out
js
cmp
addb
add
in
pop
insb
pusha
add
xlat
mov
jg
jg
inc
fiaddl
inc
xchg
cli
jecxz
inc
ror
sbb
rol
adc
xor
stos
add
and
sbb
hlt
push
fstl
clts
add
xchg
xor
and
pop
lret
jbe
add
je
arpl
je
jle
add
scas
xchg
mov
shlb
lcall
addb
ljmp
add
jne
push
cmp
clc
mov
add
insb
mov
push
dec
mov
out
js
in
data16
aam
jle
ds
cmpsl
cmpsl
aaa
and
pop
jns
gs
xchg
pop
out
mov
jl
negl
mov
rolb
int
mov
fldl
aad
or
mov
jns
int
add
and
mov
xor
bound
mov
andps
std
dec
or
jne
sub
dec
mov
sbb
add
sbb
js
sarb
dec
rolb
add
pop
or
stos
mov
inc
add
rolb
dec
fwait
in
mov
push
lds
add
mov
xchg
fucomip
or
xchg
fiadds
fcmovbe
jge
add
pushf
dec
xchg
int3
addl
ror
movsl
push
ss
add
xchg
aam
inc
push
arpl
pop
dec
push
push
js
mov
add
out
cmc
ret
push
mov
stc
mov
gs
jmp
cmpsb
sub
dec
inc
add
adc
fs
xchg
cmc
std
sbb
push
jmp
mov
orl
xchg
mov
jno
adcl
sti
mov
add
mov
xchg
pop
inc
add
mov
addl
xlat
testb
or
pusha
add
andl
mov
mov
jle
fwait
leave
imul
test
popf
pop
and
and
push
jne
mov
pushf
mov
adc
sub
imul
mov
pop
arpl
arpl
ficoml
pop
mov
movb
xchg
daa
test
test
test
push
add
and
mov
push
dec
lahf
add
jb
dec
dec
sub
ret
fs
clc
jns
dec
mov
cmp
ficompl
mov
mov
or
in
loop
xor
lods
push
stos
js
mov
mov
push
add
mov
sbb
add
xor
lcall
push
rep
stc
jmp
push
mov
in
sahf
dec
rcr
cwtl
movb
xchg
jnp
mov
push
mov
je
icebp
jmp
or
les
mov
test
sub
ret
dec
mov
lea
add
bound
bound
stc
cs
cmp
mov
test
push
sub
shlb
xor
cli
mov
add
pop
dec
insb
xchg
sbb
rclb
push
test
or
sbb
pop
sub
add
jg
jo
inc
add
adc
push
xchg
push
push
mov
push
sti
cmp
into
dec
gs
and
sbb
enter
or
outsb
pop
sub
sbb
sub
test
mov
dec
push
clc
lds
mov
mov
dec
mov
mov
cmp
scas
xchg
mov
and
cmp
sahf
loopne
std
xor
cld
dec
jmp
roll
movsb
cmpsl
arpl
pop
inc
add
dec
ja
lds
addb
mov
mov
scas
jecxz
mov
cmpsl
inc
test
push
mov
idiv
xlat
imulb
fsubrl
sbb
add
jg
imul
out
add
hlt
jl
jecxz,pt
outsl
dec
pop
pop
mov
add
dec
jle
inc
add
dec
int
outsl
sbb
jge
ss
xor
lock
sbb
sub
push
add
iret
ja
dec
inc
add
mov
sub
in
rolb
add
stos
pusha
add
popa
xchg
mov
push
iret
xchg
or
test
pop
jle
rolb
pop
pop
push
fdivp
call
inc
add
mov
cld
sbb
pop
mov
nop
mov
inc
add
je
mov
sbb
es
add
cmpsb
mov
sbb
arpl
sahf
ds
add
scas
ja
add
repnz
xchg
in
jl
add
scas
push
add
dec
mov
sbb
mov
lcall
and
xchg
adc
in
lods
lcall
sbb
xor
add
dec
ret
jle
xchg
cmp
rorb
clc
outsl
push
ret
lods
dec
xchg
pop
addb
pop
pop
fwait
inc
add
test
push
test
in
out
or
add
sbb
add
ret
add
rcll
or
mov
xchg
aam
mov
hlt
call
movsb
test
orl
pop
insb
jbe
pop
push
scas
mov
insb
xor
aam
or
les
sub
add
push
shrl
divl
add
mov
movsb
mov
aam
or
add
mov
enter
dec
or
sbb
cld
cmp
cmp
mov
add
cmp
inc
add
cmp
add
jmp
movl
shl
dec
adc
inc
add
sub
jo
rcll
jecxz
cmp
add
sub
fcmovbe
fnstenv
push
xchg
cmp
and
and
test
sub
add
add
add
jae
mov
or
ret
shll
or
push
addr16
xor
pusha
add
fcompl
add
dec
popf
add
lock
adc
add
addr16
sub
leave
shll
add
das
int3
test
add
test
pop
dec
lret
sbb
xor
add
inc
mov
les
shll
xchg
cmp
mov
sbb
addb
repz
push
cltd
pop
xlat
mov
fwait
push
xchg
mov
icebp
mov
loope
mov
cmp
in
adc
jl
mov
andl
pop
push
mov
aam
pop
ljmp
or
sbb
xchg
and
push
add
cwtl
add
fistps
push
aad
sbb
popf
and
lret
lret
and
add
je
add
jp
jge
push
and
mov
sbb
mov
popl
push
pop
inc
pop
push
push
test
rolb
movb
add
pusha
add
adc
mov
add
addl
je
or
jb
test
scas
jnp
inc
xchg
mov
lods
lret
cmpsb
mov
loope
push
mov
dec
mov
push
mov
add
mov
sub
call
jo
push
or
leave
insb
sbb
xchg
loope
inc
add
adc
aad
cmp
or
push
sub
sbb
fmuls
mov
xor
sub
cmp
add
arpl
mov
mov
xor
sti
outsl
jle
repnz
rcl
sbb
bound
fimuls
cld
dec
cmp
add
stos
cmpsb
mov
add
jp
not
mov
xlat
std
lock
popa
pop
loope
pop
sbb
jge
mov
ljmp
cmp
xchg
lret
pop
ret
cwtl
add
sub
sub
sbbl
rorb
add
stos
push
into
sub
jge
sbb
cmc
mov
cld
and
dec
sbb
sub
rolb
add
sub
push
mov
jecxz
xchg
and
movsb
jge
insb
loop
mov
rolb
pusha
add
add
xor
push
jno
les
xchg
push
fs
pop
xor
movb
add
out
pop
push
std
xchg
pop
lcall
mov
loop
mov
rcll
lahf
fnstenv
or
lret
add
jecxz
jg
scas
cmp
xchg
js
add
mov
shlb
cmc
rolb
cmpsb
push
imul
fwait
jmp
add
and
sub
das
adc
repz
push
pop
fists
add
jecxz
xchg
inc
add
xor
push
test
lea
mov
mov
mov
decb
push
mov
push
add
clc
inc
add
xor
mov
inc
add
mov
jbe
jle
sub
add
and
jmp
ret
adc
jno
inc
nop
js
iret
xchg
outsb
movsb
or
out
jmp
lods
fisttps
add
cmc
mov
rolb
mov
sbb
push
xchg
cltd
cmp
notb
or
add
scas
addb
xor
inc
sti
mov
inc
xor
decl
add
mov
stos
sbb
jno
sbb
pop
xor
leave
mov
xor
xor
dec
insl
lcall
scas
mov
sub
les
daa
fwait
lcall
ficompl
xlat
push
mov
mov
pop
test
dec
sahf
movsl
inc
add
xor
das
or
aam
arpl
es
cwtl
sbb
repz
addb
out
es
add
imul
add
dec
lock
repnz
popf
testl
nop
fcomps
stos
int
pop
fsubl
pop
add
mov
add
rolb
jno
xor
je
xchg
push
pop
jb
jmp
jecxz
cwtl
fs
add
jp
push
push
jmp
dec
or
pop
push
push
jle
add
out
and
arpl
insl
jmp
dec
movsl
test
lret
loop
mov
xor
sub
push
out
push
push
scas
xchg
or
pop
aaa
mov
lods
mov
ja
cmp
fistps
rorl
add
mov
push
lds
push
popa
mov
xchg
push
shl
pop
stc
icebp
int3
mov
cmpsl
mov
inc
jg
dec
push
icebp
dec
ss
sub
cli
sbb
arpl
test
test
dec
ljmp
fcmove
dec
imul
mov
push
dec
push
mov
jno
xchg
pop
in
pusha
add
xchg
fmull
push
dec
and
inc
mov
je
add
and
mov
add
adc
pop
inc
das
cwtl
cmp
aas
mov
add
test
push
inc
add
add
xchg
inc
add
aas
addb
jne
dec
push
xchg
in
mov
fsubrp
push
lahf
das
aas
addb
add
imul
adc
push
dec
jp
cmp
xor
and
push
mov
adc
cltd
mov
add
scas
outsl
ss
les
xchg
ja
lea
xor
iret
sarb
sub
jle
loopne
push
arpl
push
add
adc
sbb
outsl
cs
rcrl
cmp
addb
sbb
jmp
sbb
add
cmpsl
push
cld
fcomps
std
mov
add
add
inc
add
test
mov
push
lcall
test
push
add
cli
fistps
dec
loope
test
stc
bswap
stc
fwait
dec
cs
adc
shrb
sar
lahf
mov
add
jb
add
test
cmp
loope
test
push
add
lock
jae
hlt
js
jge
icebp
inc
add
push
pop
jmp
pop
cltd
testb
mov
and
xchg
scas
icebp
jbe
jns
mov
fucomp
popl
leave
or
dec
test
inc
pusha
add
push
push
rclb
fldcw
add
mov
xchg
lds
ret
fsubl
adc
jmp
xor
gs
mov
ficoms
push
lcall
loope
jg
add
mov
mov
add
test
jno
imul
add
sahf
ss
in
cmc
das
mov
fmul
pop
enter
push
pushf
or
fsubr
outsl
pop
or
push
xor
add
aam
adc
rolb
into
jb
je
mov
sbbl
nop
xor
adc
mov
and
fimull
insl
sti
scas
daa
into
xlat
into
push
movsb
xchg
negl
test
jp
pusha
add
cmp
enter
nop
add
push
in
sbb
push
ret
cli
leave
jmp
pop
mov
sub
addb
ret
mov
bound
inc
mov
add
jns
imul
movsl
lcall
mov
add
mov
mov
mov
repnz
hlt
or
adc
push
out
int3
add
mov
ljmp
out
addl
sub
mov
add
aaa
jnp
dec
rolb
add
xor
fprem
or
movsl
push
aad
rcrb
pop
scas
push
lds
mov
divl
in
and
sbb
mov
add
dec
pop
dec
in
mov
dec
std
jns
xchg
lods
inc
add
shlb
aam
jno
int
mov
add
adc
fists
les
clc
inc
add
out
enter
loopne
cmp
mov
adc
idivb
ror
mov
in
add
push
mov
mov
adc
ss
sbb
pop
jo
hlt
or
jg
or
arpl
ja
outsl
pop
sub
imul
sub
push
movb
mov
sbb
out
jle
in
jmp
sub
sbb
pushf
and
cs
xchg
mov
mov
rol
jae
push
lahf
inc
icebp
mov
jmp
test
pop
mov
sahf
mov
add
in
xor
push
adc
and
jmp
pop
jle
add
inc
add
xor
int
mov
std
addb
or
xchg
dec
inc
add
hlt
mov
arpl
mov
imull
xchg
pop
ficomps
add
pop
or
and
xchg
fdivl
das
int
mov
aam
pop
or
test
repz
xchg
pop
out
add
subl
jb
add
inc
mov
sbb
inc
add
mov
add
inc
add
jb
lods
xchg
cmp
scas
lcall
into
jo
aad
push
aad
jo
mov
mov
das
ljmp
mov
xchg
xor
lock
push
or
lods
adc
fmul
cmp
pop
ss
inc
add
mov
loopne
dec
into
repz
push
push
add
mov
dec
sub
andl
xor
pop
push
out
addl
xchg
cwtl
cmc
mov
jecxz
xchg
jae
pop
fstpt
cmp
pop
cld
mov
adcl
out
data16
call
push
add
add
mov
fcomps
fmull
notb
pop
xchg
mov
inc
add
addr16
addb
add
notb
inc
outsl
ljmp
negl
test
adc
add
js
xor
jo
lea
fs
xor
cld
bound
pop
jae
xchg
js
lcall
out
movsb
push
sahf
pusha
add
cmp
jge
mov
inc
imul
testl
sub
pop
bound
repz
add
mov
sbb
ss
sbb
roll
pop
fiadds
jecxz
xchg
add
jg
fimull
inc
inc
sbb
adc
mov
mov
mov
push
ja
xchg
xchg
loop
sbb
decb
xchg
push
push
insl
xor
mov
jnp
add
push
test
add
dec
out
stc
insl
fs
add
out
stos
or
pop
shr
or
sahf
xchg
fistl
dec
cmp
mov
lcall
pop
movb
add
addb
pop
sbb
sub
add
popf
imul
arpl
add
rolb
pop
stc
scas
cli
popa
jecxz
inc
add
sub
xor
faddl
sarl
jne
xchg
mov
lret
jmp
dec
clc
addr16
mov
pop
cmc
jmp
lods
pop
pop
test
imul
add
or
xor
cld
lret
stc
jae
dec
bound
mov
add
inc
pop
aam
outsb
jmp
sub
adc
addb
jb
mov
repz
xor
push
mov
add
pop
divl
push
in
inc
add
addb
ljmp
mov
jo
test
jne
adc
sub
add
test
jno
stos
dec
add
cmp
pusha
add
push
xor
inc
add
sub
jno
test
xchg
scas
bound
adc
fistps
arpl
add
mov
insb
jns
dec
out
cwtl
xchg
stos
call
test
mov
insl
repz
inc
add
mov
addb
add
mov
push
pop
adc
add
xchg
push
outsl
add
sbb
aam
xlat
mov
xor
sub
xchg
lahf
clc
cmp
fs
daa
movb
add
and
push
add
pop
mov
jmp
ret
loopne
adc
ss
push
xchg
xchg
pop
push
out
mov
setae
mov
sahf
inc
popf
mov
mov
into
adc
lret
in
test
xor
les
add
stos
sub
dec
push
fidivrl
sar
xchg
sub
xchg
xor
cli
xchg
stos
shrl
push
xor
jge
mov
jge
mov
inc
or
add
cmp
pusha
add
add
xchg
pop
inc
imul
es
mov
test
lods
into
xchg
xor
shll
add
mov
lret
in
scas
arpl
lods
stos
push
leave
jl
sbb
test
lods
cli
dec
shll
leave
xor
mov
fstpl
xor
add
mov
xor
add
scas
inc
add
dec
outsb
inc
push
inc
xor
cld
les
and
and
xchg
addr16
js
adc
in
cmp
ljmp
mov
jne
mov
xchg
lret
add
mov
pop
add
faddp
add
mov
jb
xlat
loope
in
adc
mov
jl
xchg
aas
mov
add
in
mov
dec
and
addb
add
pop
pusha
add
sti
popf
int3
out
pop
outsl
cmc
outsb
pop
data16
hlt
mov
bound
fldl
sbb
pop
mov
pop
sub
data16
ret
push
xor
ret
pop
loopne
in
cmp
and
add
dec
and
in
add
nop
mov
fiaddl
stos
jo
pop
addr16
add
inc
stos
dec
jbe
cli
int3
test
xchg
pop
xor
and
or
sub
lds
cld
stc
and
adc
add
gs
or
push
ds
push
xor
in
xchg
dec
pop
xchg
cwtl
cmpsb
xchg
and
lea
loope
cld
shl
and
push
es
push
enter
loopne
test
fldenv
adc
cmc
pop
call
repz
incb
addb
inc
add
mov
jae
addb
mov
mov
push
leave
pop
mov
insl
dec
xchg
fcom
mov
push
jge
addr16
in
sbb
rolb
pusha
add
push
xchg
push
aas
add
iret
cpuid
xor
mov
jo
cld
fwait
cmp
inc
add
xchg
jge
pop
pusha
add
pop
aad
add
xchg
xchg
cli
push
lea
inc
add
inc
stos
fucomip
into
mov
and
mov
mov
mov
add
add
add
adcl
sbb
sti
dec
fwait
push
or
add
push
xor
push
pop
jb
cmp
add
fstpt
in
scas
cmpsl
push
or
aas
lret
mov
add
pop
pop
dec
bound
aad
and
add
mov
sbb
jno
aas
enter
stos
mov
je
outsb
push
add
mov
mov
pusha
add
outsb
icebp
cwtl
int
cmp
push
add
adc
add
movsl
subl
pop
cmp
movl
cmp
inc
fdivrs
pop
ret
xchg
aaa
imull
jmp
xchg
movl
lea
add
xor
dec
sbb
orl
mov
aas
rolb
pop
aad
das
repnz
xchg
push
or
or
inc
clc
movsl
sbb
jns
call
aam
xchg
add
fidivs
jbe
mov
dec
mov
lods
inc
mov
incb
not
int
repnz
orl
inc
imul
mov
repz
push
les
inc
ret
int
imul
das
out
lods
repz
popf
je
notl
lods
stc
scas
add
fmul
hlt
jb
sub
lock
cmp
mov
test
pop
xchg
lods
pop
js
add
add
push
mov
cmpl
je
movsl
std
jae
and
ficomps
mov
adc
add
movb
add
xchg
mov
clc
gs
insl
or
xchg
mov
mov
mov
pop
mov
mov
fiaddl
out
mov
add
jne
push
pop
cmp
icebp
gs
mov
stc
in
fmull
dec
lock
sbb
add
add
fldenv
xchg
sub
or
es
mov
mov
pop
adc
jae
mov
out
popa
mov
add
rorb
loop
stc
ret
mov
add
mov
std
mov
cmp
jg
inc
add
or
mov
mov
outsl
mov
out
pop
mov
inc
add
mov
lock
out
sbb
loop
push
dec
xchg
adc
add
fldl
cmp
pusha
add
sub
out
clc
shlb
idivb
mov
add
add
addr16
add
cmp
cmp
pop
addb
lahf
pushl
popl
mov
pop
in
mov
lcall
and
xor
inc
shll
xchg
dec
xor
mov
mov
add
outsb
ss
bound
jecxz
in
pop
repz
mov
push
popf
xlat
pop
xchg
xor
mov
call
movb
add
mov
sbb
fsts
icebp
leave
adc
cwtl
xchg
clc
cmc
jnp
ja
sbb
adc
dec
inc
add
int
adc
dec
arpl
lds
push
out
fisubrl
adc
cmp
or
outsl
insl
divl
mov
add
xchg
push
dec
out
jp
pop
jo
jmp
push
cmp
cmp
iret
or
adc
pushf
mov
sub
add
stc
lcall
mov
mov
test
xchg
aas
fstl
into
and
push
xlat
push
mov
mov
pop
cmp
adc
sti
xor
add
add
add
mov
or
adc
in
fnstsw
xchg
popf
repnz
aaa
sub
mov
aaa
jne
sub
loopne
jl
add
add
mov
sub
jl
mov
lods
jno
paddsw
lea
pop
pop
sbb
std
mov
not
dec
and
mov
rcl
jle
push
push
jb
movl
dec
outsb
fnsave
ret
pop
addb
repz
int
jmp
adc
inc
add
add
mov
ja
xchg
pop
inc
shll
or
in
and
jmp
add
push
sbb
add
xchg
movb
jecxz
pushf
shl
addb
ljmp
adc
inc
mov
out
mov
xor
jbe
gs
dec
movsb
fmull
aaa
loop
inc
add
add
hlt
pop
ja
pop
cli
lcall
std
cmp
xor
add
dec
test
addb
xor
adc
outsb
inc
or
ds
xor
aaa
lret
sub
fs
cmp
mov
dec
mov
popa
and
aad
das
test
jp
and
add
or
mov
out
xlat
adc
xor
add
jb
sbb
sbb
add
iret
add
pop
xor
add
pop
in
cmpsl
mov
add
adc
push
sti
jns
add
addr16
add
pop
jle
sbb
sbb
add
add
xor
fs
jmp
out
and
in
rolb
push
pop
mov
and
inc
xchg
or
xor
fucompp
mov
and
and
and
lea
rolb
add
ljmp
loopne
cli
push
imul
or
pop
add
inc
pop
dec
sbb
in
adc
mov
inc
add
lcall
test
pop
pusha
add
test
fisttps
ret
xor
aaa
mov
addb
lret
and
jle
pop
enter
add
add
scas
insb
negl
lea
inc
add
add
clc
jo
pop
cmp
xor
movsl
jo
or
insl
or
and
leave
add
gs
addb
pop
sbb
add
addb
pop
dec
add
in
xchg
test
mov
int3
mov
sbb
xchg
stc
in
add
dec
xor
cmp
mov
std
cmpsb
mov
inc
pop
dec
mov
pop
sub
call
push
aas
jo
sti
fs
lods
jg
sbb
jnp
jg
ret
movsl
xor
jbe
push
jno
insb
mov
add
ljmp
add
xchg
jo
add
add
dec
es
aas
sub
ret
jns
outsl
jns
xchg
outsb
push
int
lods
sti
pop
dec
xchg
in
popf
aam
fstl
dec
jg,pn
jle
mov
mov
lret
mov
cld
sbb
scas
xor
and
repz
rolb
sbb
mov
in
je
mov
repz
imul
fnstsw
pop
mov
mov
add
jae
pop
das
rolb
jae
xor
mov
fimull
imul
mul
jns
out
test
call
fsubl
mov
pop
dec
aad
jbe
loop
addr16
mull
movsl
popf
movsb
xchg
sarb
add
inc
add
push
bound
pop
add
ja
mov
cmp
jae
inc
out
int3
enter
add
mov
lds
sahf
adc
mov
inc
xlat
arpl
adc
fwait
mov
iret
jge
mov
mov
and
add
push
and
out
mov
jl
sub
stc
adc
dec
lds
mov
aas
aad
add
add
addr16
add
and
inc
mov
add
hlt
outsb
test
push
pop
add
push
add
test
movsb
add
pusha
add
adc
sub
sub
xchg
xchg
loop
shlb
jge
mov
sti
cld
push
loop
add
jp
xchg
lret
inc
add
inc
add
pusha
add
inc
inc
add
jnp
push
daa
cmp
sbb
jle
add
jb
sbb
mov
sahf
jge
jmp
test
hlt
xor
andl
test
pop
clc
loope
xor
je
cwtl
pop
sub
add
add
mov
jmp
les
and
adc
inc
int
add
loope
add
and
inc
add
jb
add
sub
clc
mov
push
mov
xchg
ret
xor
add
ljmp
add
outsl
pop
mov
push
js
jmp
add
jne
add
add
jb
and
add
inc
add
popa
popf
pusha
stc
jb
fmull
add
add
into
push
mov
stc
jb
pushf
add
add
sahf
mov
stc
jb
add
add
call
testb
sub
ret
add
mov
stc
jb
gs
add
nop
jmp
sub
add
cmp
add
stos
inc
add
jnp
mov
add
jmp
add
add
mov
jne
stc
jb
test
add
adc
push
mov
xchg
ret
add
add
sbb
in
dec
add
and
iret
add
add
add
addb
call
fiadds
add
add
pushf
pop
jmp
stc
jb
add
add
push
pop
jmp
stc
jb
jae
ja,pt
push
nop
jmp
add
add
mov
push
mov
add
test
sldt
fsub
add
test
cltd
push
push
mov
xchg
ret
add
jne
stc
jb
add
add
add
jb
add
dec
jne
dec
mov
stc
jb
loopne
fcmovu
pop
add
jb
mov
add
push
add
rcll
out
inc
add
push
sub
mov
stc
jb
add
and
mov
xchg
ret
dec
add
pop
test
stos
notl
add
add
mov
xchg
ret
add
or
push
add
add
add
enter
movsb
add
add
jb
add
daa
xchg
mov
rep
stc
jb
faddl
addl
xor
nop
jmp
pushf
daa
out
add
mov
adc
add
stc
jb
push
popl
fidivrl
push
nop
jmp
loopne
jp
add
mov
sar
cmp
add
fiaddl
add
jae
daa
bound
dec
add
stc
jb
or
add
dec
nop
jmp
add
jl
dec
add
mov
add
jb
add
adc
or
push
add
stc
jb
ja
add
les
mov
inc
add
add
and
add
add
add
jbe
and
push
mov
xchg
ret
mov
stc
jb
add
add
imul
stc
jb
outsl
add
add
je
fcoms
jb
je
inc
add
mov
fdivl
addb
incl
add
adc
clc
and
push
mov
xchg
ret
mov
jp
push
mov
je
lods
add
pop
add
push
ljmp
fldl
out
inc
add
jp
add
add
add
jb
mov
cmp
nop
jmp
inc
fcoml
sub
pop
pop
shr
stc
jb
fmuls
insl
call
stc
jb
dec
or
add
mov
add
jb
add
mov
std
test
nop
jmp
add
daa
inc
add
add
pusha
add
jb
push
add
add
xorb
add
cmp
mov
add
popa
add
jb
test
dec
xor
add
push
nop
jmp
dec
into
mov
mov
inc
add
mov
push
mov
xchg
ret
inc
cmp
add
sbb
add
add
push
mov
xchg
ret
enter
mov
xor
add
add
or
mov
stc
jb
cmpl
xchg
jnp
jl
sbb
jb
fmuls
xor
sub
jb
or
or
mov
xchg
ret
add
test
add
nop
jmp
add
popl
lret
jmp
stc
jb
add
add
add
testl
push
adc
add
add
fidivrl
jb
inc
sub
inc
testl
mov
subl
add
and
subb
add
dec
nop
jmp
jae
add
add
cmp
inc
into
mov
push
mov
xchg
ret
sub
adcb
add
dec
dec
mov
or
pop
call
add
add
mov
and
push
mov
xchg
ret
add
stos
adc
sbb
test
or
add
add
test
lret
pop
stc
jb
cmp
pushf
fdivrl
push
push
mov
xchg
ret
loopne
fiaddl
add
mov
stc
jb
add
cmp
out
add
xchg
mov
add
mov
mov
push
mov
xchg
ret
or
xor
add
add
jb
or
mov
xchg
ret
add
inc
loopne
hlt
xchg
push
jp
movb
jb
inc
mov
mov
inc
fmull
mov
xor
add
outsl
add
add
xchg
call
mov
xchg
ret
ja
add
sub
stc
jb
add
out
or
fadds
stc
jb
add
push
stc
jb
and
jl
sub
popa
add
mov
xchg
ret
loopne
sub
add
test
add
stc
jb
jl,pt
mov
pop
pop
cmc
jecxz
rep
stc
jb
add
fiaddl
add
mov
mov
sub
sub
ret
add
add
pop
push
pushf
mov
stc
jb
cmp
neg
subl
movsl
jno
nop
jmp
add
add
jb
sub
add
add
or
stc
jb
cmp
mov
cmp
in
jb
mov
pop
dec
inc
push
mov
xchg
ret
dec
and
add
stos
xor
push
mov
xchg
ret
add
mov
mov
js
icebp
stc
jb
add
cmp
mov
push
mov
xchg
ret
add
add
pop
pop
inc
push
mov
xchg
ret
outsl
xchg
add
pop
movzwl
stc
jb
fdivrl
shlb
adc
add
jb
xor
adc
cmp
adc
add
mov
fdivrl
push
pusha
add
movsb
stc
jb
dec
add
test
add
jmp
add
add
mov
push
stc
jb
outsl
inc
add
add
mov
stc
jb
add
xor
xor
jb
ja
cmp
add
push
movsb
decb
add
add
xor
outsl
xor
add
nop
jmp
mov
add
mov
push
mov
xchg
ret
jp
fadds
and
jb
add
add
dec
inc
sbb
or
add
add
xor
jne
push
popf
mov
stc
jb
add
add
rep
stc
jb
pop
add
outsl
mov
outsb
nop
jmp
jp
add
adc
popa
add
jb
fdivl
sub
add
mov
stc
jb
add
add
mov
stc
jb
add
add
add
add
incl
fmuls
dec
push
nop
jmp
mov
popl
lret
push
stc
jb
add
mov
add
fwait
push
push
mov
xchg
ret
pop
loopne
cmp
sbb
stc
jb
add
add
mov
mov
stc
jb
add
cli
or
add
fcompl
push
sub
ret
mov
xchg
ret
add
add
mov
stc
jb
add
push
push
mov
xchg
ret
sub
add
sub
jb
add
add
add
test
je
popa
stc
jb
add
add
add
dec
xchg
stc
jb
add
loopne
pop
fdivrl
call
stc
jb
test
outsl
add
mov
xchg
ret
fidivs
mov
stc
jb
fidivrl
fidivs
pushl
stc
jb
inc
add
mov
sbbl
sti
or
add
outsl
mov
ja
in
mov
push
mov
xchg
ret
enter
mov
jb
add
mov
addl
jb
pop
stos
stos
add
pop
cld
add
stc
jb
add
mov
add
jb
je
rol
orl
push
mov
xchg
ret
add
add
sbb
stc
jb
add
add
add
sub
ucomiss
jmp
add
enter
in
mov
add
nop
jmp
dec
add
add
inc
add
jne
stc
jb
stos
add
pop
pop
stc
jb
dec
add
pop
inc
adc
add
add
stc
jb
fdivrs
add
stc
jb
loopne
add
jp
sub
stc
jb
add
add
mov
add
mov
inc
add
add
and
cmp
stc
jb
je
add
mov
push
stc
jb
pushf
pop
pop
sub
or
stc
jb
xor
add
add
jne
stc
jb
add
in
repz
and
stc
jb
xchg
fcompl
call
stc
jb
pushf
add
jne
add
stc
jb
mov
mov
ficompl
jb
add
add
add
add
hlt
inc
add
mov
mov
stc
jb
add
dec
mov
testl
jmp
add
add
dec
pop
or
mov
stc
jb
jp
stos
ja
add
mov
push
mov
xchg
ret
add
dec
add
sub
add
jb
je
cmp
fdivr
pop
push
mov
xchg
ret
add
add
add
popa
add
mov
xchg
ret
add
fdivl
orb
out
add
add
jno
mov
stc
jb
dec
fdivrl
mov
stc
jb
into
add
add
mov
mov
add
add
jb
add
pop
add
push
mov
xchg
ret
loopne
loopne
and
dec
push
mov
xchg
ret
sub
pop
cmpl
add
jb
add
lea
push
mov
xchg
ret
add
jp
add
nop
jmp
add
add
add
dec
mov
adcb
add
add
inc
xor
push
stc
jb
add
fmul
add
add
and
sbb
aam
incl
imul
addl
arpl
stc
jb
jp
cmp
mov
push
mov
xchg
ret
sub
in
mov
push
mov
xchg
ret
add
add
sub
jb
mov
ret
dec
push
stc
jb
popl
xchg
push
add
popa
add
jb
add
mov
sbb
add
stc
jb
test
add
xchg
pop
pushl
stc
jb
xor
add
mov
stc
jb
mov
xor
add
jb
cmp
testl
jb
add
imul
xor
adc
add
cmp
mov
nop
jmp
add
add
add
add
movb
xchg
ret
ja
in
mov
out
sub
stc
jb
outsl
je
add
mov
stc
jb
fisubrl
outsl
push
movsl
xchg
lods
cmpl
nop
jmp
cmpl
jb
and
push
inc
inc
add
in
cmp
test
call
incl
inc
fsubrl
mov
add
mov
stc
jb
jl
mov
gs
jb
add
add
inc
add
inc
movsb
adc
mov
stc
jb
mov
adc
jmp
add
enter
add
add
stc
jb
add
add
rclb
fmulp
add
add
mov
jb
add
outsl
add
push
push
mov
xchg
ret
dec
add
add
dec
push
push
mov
xchg
ret
mov
sar
leave
stc
jb
jl
pushf
add
add
addb
push
push
mov
xchg
ret
daa
add
add
ret
jne
je
add
push
add
or
call
jb
add
add
add
mov
xchg
ret
add
outsl
dec
nop
jmp
jne
mov
add
mov
sbb
add
add
add
xchg
xchg
aam
je
stc
jb
add
dec
mov
stc
jb
fidivs
leave
mov
nop
jmp
add
pop
mov
into
mov
cli
call
stc
jb
add
add
push
nop
jmp
into
pop
pop
faddl
add
add
mov
jae
jb
fcompl
out
mov
jb
ds
xor
add
and
subb
add
popl
dec
dec
jmp
mov
xchg
ret
sub
out
inc
push
push
xor
stc
jb
add
mov
nop
jmp
inc
xchg
fdivrl
cmp
pop
ret
push
mov
xchg
ret
add
faddl
sub
inc
and
jb
xor
addl
inc
lock
jb
into
in
faddl
or
ss
mov
stc
jb
add
or
clc
je
stc
jb
idivl
shrb
mov
xchg
ret
inc
sub
add
stc
jb
ja
add
mov
xchg
ret
add
jg
stc
jb
pushf
sub
pop
sub
sub
dec
add
xchg
ret
add
inc
out
mov
stc
jb
add
jmp
jbe
nop
jmp
enter
add
push
mov
xchg
ret
add
fdivrs
push
add
stc
jb
add
add
jb
add
jp
add
jle
ret
push
mov
xchg
ret
cmp
mov
mov
jle
andb
add
jb
out
add
cmc
stc
jb
push
adc
jb
add
ja
add
ret
fs
cmpl
nop
jmp
cmp
xor
pop
in
add
ss
jb
mov
loopne
sub
rolb
cmp
inc
repnz
jmp
fsubrl
mov
es
movsb
stc
jb
add
inc
and
add
stc
jb
pop
faddl
jp
adc
cmpl
add
ljmp
fdivrs
add
cwtl
cmpl
push
mov
xchg
ret
add
add
leave
add
stc
jb
pop
outsl
add
xchg
push
and
nop
jmp
test
add
add
dec
push
stc
jb
add
push
fiadds
add
stc
jb
add
add
daa
add
add
stc
jb
add
and
addb
call
fisubrs
mov
mov
xchg
ret
add
add
inc
cmp
or
add
mov
add
push
stc
jb
enter
mov
xor
dec
add
stc
jb
test
fdivrl
mov
loop
fiaddl
js
nop
jmp
and
mov
mov
stc
jb
pop
ja
addl
and
push
mov
xchg
ret
and
sarl
popa
push
mov
xchg
ret
add
test
mov
stc
jb
add
add
je
stc
jb
fsubrl
and
stc
jb
mov
out
jne
stc
jb
add
jo
mov
stc
jb
add
out
out
in
stos
mov
std
inc
add
push
je
add
movsl
pop
inc
add
fiaddl
add
add
stc
jb
pop
addl
jne
push
stc
jb
push
imul
push
out
stc
jb
add
add
cs
stc
jb
add
push
sub
cmpb
add
jne
sbb
rclb
incl
ja
add
cmp
xchg
jne
mov
push
mov
xchg
ret
add
cmp
push
mov
xchg
ret
jae
addl
stc
jb
mov
push
add
jg
nop
jmp
outsl
sub
add
sub
stc
jb
mov
add
out
add
lods
jne
stc
jb
xchg
loopne
push
push
mov
xchg
ret
add
pop
fcomp
mov
es
pop
ret
nop
jmp
fadds
jp
cmp
add
sub
add
imul
loopne
add
add
add
push
mov
xchg
ret
add
and
ret
push
mov
xchg
ret
sub
fadds
mov
loopne
add
stos
add
punpckhbw
push
jb
jb
pop
jne
add
jne
stc
jb
jae
add
cmpb
enter
add
jb
mov
add
xor
and
pop
ds
add
xchg
xchg
mov
adcb
or
add
add
mov
sbbb
mov
add
xchg
mov
add
add
add
pushf
mov
add
add
push
mov
xchg
ret
test
add
push
mov
xchg
ret
add
mov
dec
add
stc
jb
jl
ja
lahf
imul
stc
jb
cmp
ja
pop
pop
loope
push
push
mov
xchg
ret
add
mov
jb
add
add
jp
add
sbb
add
jb
add
pop
lret
stc
jb
pushf
add
add
add
enter
mov
xchg
ret
add
outsl
add
mov
nop
jmp
add
add
scas
mov
stc
jb
pop
add
stc
jb
add
or
mov
jmp
add
imul
jp
pop
stc
jb
ds
add
pushf
and
inc
adc
jb
pop
loopne
imul
and
sub
icebp
stc
jb
fmul
add
fiaddl
mov
nop
jmp
add
subl
jge
stc
jb
push
stos
add
mov
xchg
ret
mov
aam
outsl
push
push
mov
xchg
ret
dec
add
pop
hlt
stos
mov
nop
jmp
add
dec
mov
push
mov
xchg
ret
add
add
call
cmp
rclb
filds
xchg
ret
enter
das
add
stc
jb
add
out
mull
sbb
test
repnz
stc
jb
loopne
or
mov
mov
add
add
add
mov
xchg
push
outsl
popa
stc
jb
faddl
add
xchg
mov
add
mov
stc
jb
or
in
call
add
add
add
mov
nop
jmp
jne
add
arpl
jb
pop
mov
out
mov
push
push
mov
xchg
ret
add
add
add
stc
jb
add
pushf
inc
mov
add
inc
stc
jb
inc
or
add
add
add
add
add
nop
jmp
add
add
add
pop
xor
stc
jb
add
cmp
fsubr
add
loopne
stc
jb
dec
add
fcomps
push
push
mov
xchg
ret
add
jne
inc
inc
xchg
pop
mov
stc
jb
add
dec
pop
add
add
pop
mov
stc
jb
add
fisubrl
shrl
jb
in
cmp
add
add
dec
cmp
jb
fcoml
popl
xchg
add
jecxz
decl
stc
jb
add
add
loopne
bnd
test
add
stc
jb
add
and
out
stc
jb
jne
stos
popl
cmp
stc
jb
add
jl
xor
into
std
inc
add
test
imul
cmpb
imul
dec
stc
jb
add
push
in
fdivrs
stc
jb
enter
push
fldcw
add
xchg
add
add
outsl
pushf
or
push
repz
add
or
pop
push
nop
jmp
cmp
jl
fdivrl
cmp
mov
stc
jb
add
add
inc
add
pop
pop
stc
jb
fiaddl
push
jge
dec
cmp
jb
add
add
add
add
nop
jmp
cmp
mov
add
add
lcall
faddl
lods
movzwl
stc
jb
adc
add
add
adc
inc
add
push
mov
xchg
ret
add
ds
je
stc
jb
mov
je
mov
stc
jb
cmp
xchg
pop
jge
push
mov
xchg
ret
add
stos
pushf
add
ja
mov
stc
jb
add
add
add
add
add
xchg
in
push
stc
jb
jne
xchg
add
add
add
aad
xorl
nop
jmp
ja
add
test
nop
jmp
mov
mov
pop
jge
dec
add
mov
xchg
ret
add
add
inc
sub
mov
sub
ret
imul
jp
jne
stc
jb
imul
add
add
mov
stc
jb
xchg
cmp
dec
cmp
nop
jmp
add
mov
cmpl
sub
ret
add
pop
push
mov
xchg
ret
mov
sbb
stc
jb
add
cmp
push
mov
xchg
ret
stos
into
add
icebp
mov
push
out
incl
add
add
cmp
shl
nop
jmp
add
outsl
cli
cmp
nop
jmp
add
faddl
add
mov
add
stc
jb
je
jp
mov
stc
jb
xchg
add
add
jmp
into
enter
ds
mov
stc
jb
add
add
adc
jb
add
add
popl
add
jmp
sbbb
incl
add
push
dec
shr
nop
jmp
add
add
add
add
repnz
add
jp
jl
pop
and
call
jmp
ja
pushf
add
add
add
add
jl
add
add
mov
orb
lcall
into
ja
inc
cmp
stc
jb
add
add
pushf
add
add
mov
stc
jb
mov
faddl
mov
mov
loop
mov
xchg
ret
mov
lea
nop
jmp
test
faddl
dec
add
add
stc
jb
fimull
and
jb
mov
mov
insl
subl
stc
jb
add
test
pop
call
ret
incl
add
faddl
add
ja
lret
add
stc
jb
mov
dec
push
push
fwait
add
stc
jb
or
push
stos
pop
push
mov
xchg
ret
into
add
add
jmp
fadds
stos
outsl
imul
add
stc
jb
add
push
stc
jb
add
add
dec
ds
idivb
jb
mov
addl
push
mov
xchg
ret
add
mov
add
jb
add
faddl
add
arpl
mov
xchg
ret
add
ja
xor
stc
jb
test
jb
add
add
into
add
push
inc
add
add
mov
pusha
add
popa
stc
jb
push
popl
add
pop
add
nop
jmp
add
add
pop
or
jb
add
fisubl
add
or
mov
xchg
ret
add
add
stc
jb
add
add
mov
pop
push
mov
xchg
ret
fiaddl
jl
mov
scas
call
mov
fidivrl
pop
movzwl
stc
jb
pop
imul
out
cmp
mov
pop
je
add
add
mov
jmp
add
add
pushf
add
outsl
cmp
dec
jecxz
incl
addl
movsl
xor
inc
push
add
push
mov
xchg
ret
add
enter
pop
push
mov
xchg
ret
add
daa
orl
pop
add
pop
add
add
lret
jmp
stc
jb
add
add
jne
mov
stc
jb
mov
add
mov
stc
jb
jp
add
add
xor
lret
add
stc
jb
inc
add
loopne
add
mov
stc
jb
je
add
movswl
stc
jb
add
loop
dec
mov
push
mov
xchg
ret
inc
mov
cmc
add
or
mov
xchg
ret
out
pushf
add
cmp
scas
mov
stc
jb
pop
or
cmpb
add
add
mov
add
or
stc
jb
add
dec
add
nop
jmp
imul
inc
add
dec
mov
mov
xchg
ret
add
or
stc
jb
stos
push
imul
add
dec
in
incl
add
jne
add
popl
stc
jb
add
add
add
mov
jmp
add
or
mov
sub
test
add
add
addl
push
sub
ret
add
jg
stc
jb
add
pusha
push
mov
xchg
ret
add
add
rclb
shl
inc
add
add
add
jmp
les
add
jp
mov
mov
adc
jb
add
xlat
pop
push
push
mov
xchg
ret
pushf
pop
gs
or
stc
jb
fiaddl
add
add
dec
mov
dec
cmp
add
dec
add
add
xchg
in
pop
push
mov
xchg
ret
gs
popl
add
mov
push
mov
xchg
ret
stos
mov
push
mov
xchg
ret
or
add
stc
jb
inc
add
stos
pop
pop
sti
pop
nop
jmp
enter
add
popl
add
mov
stc
jb
jne
add
lret
jb
add
out
pop
add
add
push
mov
call
incl
add
fsubrl
xor
nop
jmp
add
inc
mov
mov
xchg
ret
imul
in
lret
mov
stc
jb
add
fidivrl
mov
out
mov
stc
jb
add
les
addl
nop
jmp
add
xchg
mov
mov
jb
add
test
push
mov
xchg
ret
je
add
push
mov
xchg
ret
add
add
add
stc
jb
add
loopne
mov
addb
add
push
sub
faddl
test
sbb
add
xor
loopne
add
mov
sbbb
test
add
cmp
orb
incl
add
add
scas
add
stc
jb
ja
add
fmull
add
jb
xor
adc
xor
jb
subl
nop
jmp
outsl
dec
mov
add
dec
or
jb
add
cmp
mov
stc
jb
add
mov
ret
in
decl
adc
add
jp
add
andb
add
fmull
add
inc
pop
bnd
ss
sar
inc
add
dec
jae
add
loopne
or
xor
add
nop
jmp
fiadds
ds
test
addb
add
cmpl
nop
jmp
mov
inc
sub
jne
stc
jb
dec
mov
stc
jb
push
inc
pop
jae
pop
ja
push
repz
fisubl
xor
add
stc
jb
jp
push
stc
jb
add
add
out
add
stc
jb
mov
mov
stc
jb
add
xor
push
nop
jmp
add
mov
adc
stc
jb
faddl
mov
jp
nop
lods
mov
stc
jb
cmp
add
fdivr
push
push
mov
xchg
ret
add
lcall
jb
add
in
xor
jne
stc
jb
add
out
jg
mov
push
stc
jb
push
imul
int
stc
jb
add
pop
add
add
add
nop
jmp
add
loopne
faddl
pop
cmp
inc
in
push
mov
xchg
ret
add
or
stc
jb
add
jno
inc
test
dec
add
jb
loope
push
stc
jb
dec
mov
push
jp
push
nop
jmp
cmp
inc
add
add
add
je
mov
xchg
ret
daa
push
add
cs
stc
jb
adcl
jb
jne
je
add
add
sahf
mov
nop
jmp
add
add
jno
stc
jb
out
dec
fiaddl
cmpsb
push
and
push
mov
xchg
ret
add
xor
movsb
cmc
cmpb
incl
add
add
add
lods
stc
jb
add
cmp
sub
push
mov
xchg
ret
add
add
and
ffree
enter
sbb
add
dec
loopne
add
out
push
and
stc
jb
inc
pop
cmp
add
add
std
stc
jb
dec
add
popf
xor
nop
jmp
add
xchg
add
movzwl
stc
jb
or
add
mov
jnp
push
mov
xchg
ret
outsl
mov
or
push
mov
xchg
ret
cmp
sbb
fdiv
inc
add
fidivs
insb
pop
push
mov
xchg
ret
ds
pop
fmull
inc
stc
jb
inc
add
dec
fisttpll
mov
xchg
ret
add
lea
nop
jmp
idivl
add
arpl
sub
rcll
cmpsl
fiadds
xchg
ret
add
add
add
nop
jmp
ja
add
and
gs
add
push
mov
xchg
ret
add
ret
mov
repz
loope
add
add
imul
mov
dec
add
mov
adc
jb
add
fcompl
les
stc
jb
cmp
lods
stc
jb
add
add
xchg
jl
jl
mov
cmc
lock
cmpsl
sbb
push
outsb
mov
stc
jb
add
xchg
pop
add
adc
nop
jmp
enter
add
stc
jb
add
xchg
xchg
add
and
jb
loopne
add
add
mov
stc
jb
add
xchg
add
push
stc
jb
inc
enter
add
jp
fldenv
jb,pt
nop
jmp
add
add
cmp
stc
jb
cmp
je
stc
jb
jne
push
dec
add
stc
jb
push
add
add
add
sub
jb
dec
add
xchg
mov
xchg
cltd
mov
stc
jb
and
push
mov
add
repnz
stc
jb
sub
sub
inc
adc
jb
add
dec
sub
sub
jmp
add
pop
push
push
mov
xchg
ret
add
add
imul
pop
out
stc
jb
add
loope
inc
add
jne
stc
jb
or
add
mov
jmp
add
mov
add
mov
sub
ret
add
pushf
add
pop
jmp
jecxz
sub
stos
nop
jmp
mov
sub
add
stos
add
mov
stc
jb
loopne
add
pop
into
out
mov
stc
jb
add
add
enter
jne
stc
jb
pop
testl
add
jb
add
test
popa
add
mov
xchg
ret
fiadds
add
pop
xor
push
mov
xchg
ret
add
add
mov
stc
jb
adc
outsl
cmp
or
stc
jb
add
pop
into
push
cld
mov
stc
jb
add
enter
call
incl
add
add
mov
stc
jb
popl
mov
add
call
stc
jb
adc
xor
add
arpl
lea
stc
jb
add
mov
push
mov
xchg
ret
jne
pop
add
or
add
ja
call
or
jb
add
enter
cmc
pop
push
nop
jmp
mov
add
or
add
sub
ret
mov
int3
stc
jb
fdivrl
jmp
pop
pop
or
out
add
push
mov
xchg
ret
faddl
je
add
mov
inc
add
sub
fistpll
stc
jb
add
inc
test
jl
je
stc
jb
dec
add
fdivrl
orb
pop
add
add
adc
push
push
mov
xchg
ret
add
fdivrl
add
testb
sub
ret
add
add
inc
add
enter
add
nop
jmp
pop
sub
add
fiadds
push
loopne
jmp
mov
xchg
ret
je
sub
lock
jb
mov
mov
orl
stc
jb
add
pop
mov
add
decl
add
mov
movzwl
stc
jb
imul
cmp
mov
add
nop
jmp
pop
add
add
pop
add
imul
in
adc
and
mov
add
add
xchg
fidivrl
mov
pop
bnd
mov
sbb
add
xor
add
or
add
les
push
jne
lret
mov
dec
xchg
sbb
add
das
cmp
popf
xor
iret
out
jbe
push
add
sub
inc
add
clc
cmp
xchg
andl
pop
or
add
mov
ret
sub
add
lea
pop
push
inc
sbb
arpl
cwtl
sahf
fbstp
fwait
and
test
mov
call
push
ja
inc
pop
out
aas
mov
jmp
mov
add
dec
insb
in
mov
jecxz
jle
push
pop
in
jns
clc
test
iret
push
inc
add
xchg
adc
dec
movb
jae
scas
push
out
and
add
mov
enter
add
fsub
es
fistl
cmp
add
jne
setbe
rol
imul
loopne
cs
icebp
jns
inc
add
fs
enter
lcall
shll
popf
jge
call
lcall
ror
lret
push
js
icebp
push
les
push
or
add
es
jmp
add
xor
jg
add
in
and
imul
sbb
rclb
mov
push
nop
mov
add
cmp
imul
scas
dec
ret
mov
cld
mov
jecxz
addl
xchg
outsl
sub
or
and
inc
add
cwtl
inc
popa
cmc
idivl
pop
and
pop
shrl
mov
and
push
inc
add
adcl
add
lds
ds
enter
adc
rol
add
in
les
imul
adc
bound
jbe
sub
int3
pop
dec
cmc
sbb
sbb
add
push
add
outsb
das
sbb
imul
add
xlat
mov
jg
add
sarl
pop
addb
jl
call
scas
je
pop
data16
mov
into
xchg
lods
addl
push
and
mov
xchg
aas
dec
movb
aaa
test
mov
mov
pop
ljmp
add
add
out
push
inc
fwait
adc
fnstsw
or
jp
iret
addr16
fidivl
add
mov
dec
into
data16
dec
or
or
test
add
repz
pop
loop
sbb
int3
xor
dec
das
jbe
inc
add
mov
push
pop
xor
cmp
fs
jbe
ljmp
cwtl
fists
in
mov
daa
mov
add
aad
mov
inc
inc
movsl
subl
imul
pop
ss
in
cmp
cmpsl
nop
cmp
sub
test
jnp
mov
cmp
or
inc
shll
and
adc
clc
arpl
or
aaa
pop
outsl
inc
inc
add
arpl
lods
pop
mov
repnz
add
xor
fwait
or
jns
add
rcrl
mov
pop
sub
jmp
mov
xor
dec
in
sbb
mov
mov
jb
insl
out
test
jnp
outsl
pop
dec
pop
xchg
sub
add
add
loopne
loope
mov
out
dec
out
jae
sti
xchg
stos
rol
push
mov
cmc
push
xchg
stos
dec
and
mov
add
sbb
das
lret
xor
insb
stos
cmp
pop
xchg
push
dec
fidivrl
in
inc
add
mov
enter
imul
jl
out
sub
cs
lods
arpl
ja
popf
leave
add
bound
dec
mov
cmp
dec
cmc
in
idivb
adc
out
outsl
rcll
dec
popf
push
fiaddl
dec
test
int
push
adc
xchg
pop
lock
orl
cmp
sbb
adc
xchg
test
scas
lret
xor
jmp
adc
pusha
add
ljmp
xor
loopne
test
insb
adc
mov
scas
fidivrl
and
cmc
fadd
add
xor
repnz
add
movsl
cwtl
stos
fnstsw
mov
add
je
xchg
or
xchg
in
lods
out
test
std
adc
les
mov
mov
out
jg
stos
mov
xchg
fdivrl
adc
add
jp
mov
shl
sub
inc
add
hlt
add
test
or
mov
test
ret
add
lahf
mov
lock
xor
test
add
outsl
cmp
add
and
dec
mov
mov
enter
cmpsb
lret
jecxz
xor
xor
cmp
popf
and
pushf
dec
pop
xlat
fildll
mov
bound
addr16
mov
fidivs
adc
pusha
add
loopne
xchg
movsl
mov
inc
ss
mov
add
adc
xchg
xchg
in
cmpsl
cmp
cmp
dec
repnz
add
mov
loop
inc
add
push
jbe
sbb
lods
mov
clts
add
bound
pop
and
xor
inc
mov
xchg
jle
cmp
cmp
add
movsb
lods
cmc
mov
rorb
xchg
popa
sub
cs
or
cltd
rolb
sti
pop
loop
data16
lret
add
loopne
mov
and
mov
aad
add
inc
add
and
xor
cmp
inc
inc
add
adc
push
pop
sbb
outsb
add
sbb
fcompl
add
add
jns
aas
dec
js
and
mov
xor
aam
xchg
cmp
sbb
xchg
add
xchg
sub
mov
test
ds
xor
and
cli
out
outsb
add
push
sub
arpl
shlb
bound
bound
dec
and
xchg
aad
jge
add
mov
add
lret
add
inc
mov
aaa
push
insb
xchg
sbb
inc
xor
lcall
ja
xor
das
sbb
sub
lret
mov
shll
mov
cmp
std
xchg
adc
loope
adc
addr16
jno
pop
cmp
outsb
xchg
push
pop
xor
negl
xor
aaa
jo
xchg
fwait
mov
push
pop
jnp,pn
pop
pop
and
dec
push
seta
leave
inc
add
push
inc
add
and
mov
xchg
out
add
sbb
mov
scas
add
stos
mov
test
xor
push
imul
push
mull
mov
jbe
addr16
add
clc
call
repz
mov
fstps
inc
push
outsl
ljmp
outsb
or
pop
jo
out
pop
cmp
pushf
inc
add
inc
add
int
add
jbe
aad
jp
mov
int3
pop
stos
add
fildll
lcall
xchg
and
out
cmp
mov
sub
clc
gs
in
mov
sub
pop
loop
dec
or
sti
sub
incb
add
adc
fcomip
shll
and
repnz
fildll
lock
inc
add
xor
dec
xor
adc
mov
xchg
sub
insl
mov
outsb
das
hlt
lock
inc
xchg
jmp
pop
dec
decb
lods
pop
scas
scas
movsl
inc
movsl
out
mov
add
dec
adc
push
and
sub
xchg
mov
repnz
sbb
pop
out
int
lods
sbb
arpl
xchg
add
inc
in
sub
stos
adc
mov
xor
mov
sub
cmpsl
repz
mov
mov
mov
fwait
popf
sbb
push
mov
scas
sub
jbe
jl
sbb
adc
rcrb
ret
fxch
popa
dec
nop
xchg
ja
sahf
loopnew
add
push
cmp
stc
mov
mov
pop
cmp
arpl
out
sub
push
addb
sub
add
cmp
out
mov
jl
aam
pop
jns
scas
mov
dec
sbb
roll
rolb
lds
xor
dec
in
inc
add
arpl
mov
scas
mov
popa
movsb
insl
push
xlat
mov
inc
fmull
rcr
sub
add
add
js
decl
pop
mov
fwait
jmp
push
stc
fmul
jge
xor
mov
popa
jl,pn
add
push
jbe
cltd
repnz
std
cmpsl
cltd
and
rcl
ja
lods
addb
pop
xchg
clc
xor
lret
sti
ret
repz
inc
push
out
add
fwait
sub
scas
xchg
inc
add
outsl
fstpl
dec
mov
push
fidivrl
xor
or
add
addb
add
rcrl
arpl
add
push
and
inc
sub
pop
dec
test
pop
lock
add
insb
cltd
inc
add
fisttpl
jns
add
xor
fdivl
mov
call
enter
sahf
mov
test
lahf
movb
or
xor
insb
adc
inc
pusha
add
mov
push
push
ret
dec
xor
add
jmp
stos
mov
lods
mov
sub
add
mov
loope
ss
or
insl
in
mov
inc
int3
cmp
lahf
add
dec
pop
mov
in
jle
push
cs
add
inc
add
mov
push
imul
hlt
in
jno
add
out
add
add
sbb
xchg
push
inc
add
pop
and
addr16
push
add
mov
xchg
lods
cltd
arpl
fsubr
addl
mov
iret
pop
insl
rolb
xor
or
into
dec
sub
sbb
shrl
das
adc
ljmp
inc
add
jl
stc
mov
and
add
adc
jns
and
aam
mov
es
in
jb
hlt
inc
add
pusha
add
dec
push
ja
popf
nop
div
lds
add
pop
cmp
mov
int3
xchg
out
jb
sbb
ds
lock
xor
fidivs
push
xor
mov
add
ds
and
push
push
popa
or
movsl
sbb
leave
jae
mov
xchg
cmpsb
push
add
and
xor
hlt
jnp
push
in
pop
and
lods
pop
stos
or
cld
or
adc
cmp
jo
mov
xor
and
xchg
or
shlb
jbe
add
push
addr16
scas
test
mov
out
push
or
movsb
pop
cmp
inc
loopne
inc
add
mov
sub
add
mov
addr16
xor
hlt
stc
addb
lret
mov
mov
add
pop
or
add
pop
push
jns
add
je
decl
testl
lcall
fwait
adc
insb
xlat
popa
cmp
lds
enter
aaa
lods
scas
loope
push
mov
shrl
mov
mov
loope
mov
cmp
lahf
xchg
add
fld
add
sub
add
sbb
imul
addb
add
repnz
jp
jo
cmpsb
xor
sub
sahf
mov
and
jp
xchg
loopne
cmp
rol
add
add
add
clc
inc
add
cmc
mov
pop
sub
or
jp
in
dec
jnp
xor
ret
cmp
sub
dec
ret
fmul
lret
lods
or
dec
mov
ja
jl
jmp
int3
sbb
das
xchg
add
and
fildll
mov
mov
dec
pop
in
out
icebp
out
out
cmp
jae
add
stc
xchg
roll
xor
addr16
xchg
das
js
mov
lea
or
mov
fs
sbb
dec
mov
stos
push
add
jmpw
xchg
mov
fcos
xor
jbe
xor
bound
jno
call
add
lds
sub
cwtl
cld
lock
les
inc
ror
xchg
aad
add
movsb
loope
stc
mov
stos
mov
mov
sub
aam
xlat
in
sbb
in
in
adc
inc
add
sbb
jg
outsb
pop
inc
lods
jne
out
adc
popf
sub
repnz
sbb
hlt
mov
cwtl
push
pop
rorb
mov
movsl
jns
push
push
jecxz
jbe
adc
je
add
add
fwait
push
pop
add
cli
pop
xchg
movb
hlt
es
mov
and
jne
mov
scas
mov
xchg
pushf
mov
xor
mov
jecxz
push
lock
fs
int3
xchg
and
and
sahf
and
push
pop
pop
mov
dec
lods
push
test
sti
and
jg
or
fidivrl
push
daa
icebp
xchg
cmp
mov
aam
leave
and
icebp
inc
jnp
push
cmp
pop
xchg
jge
add
mov
mov
movsb
repz
add
test
push
ss
mov
bound
popa
xlat
enter
push
mov
pusha
add
push
xor
in
adc
push
jecxz
cmp
pusha
add
pop
jb
stc
shll
iret
dec
push
out
mov
lds
add
pop
vorps
addb
jae
jle
les
adc
nop
stos
xor
mov
add
cmp
add
int
jb
xor
imul
sbb
mov
mov
and
mov
cld
or
adc
fwait
mov
je
mov
aaa
or
data16
add
push
push
insb
sbb
sbb
cmp
cmp
mov
mov
add
sub
mov
aam
or
rolb
sbb
das
movsl
xchg
out
pop
pop
add
rcr
inc
add
cmp
dec
test
jbe
mov
or
mov
jo
ficomps
shll
stos
insl
movsl
add
pusha
add
fisttpl
add
mov
and
ficomps
fnstenv
rcr
cmp
mov
sub
addl
dec
loopne
mov
mov
ljmp
mov
jb
ljmp
add
lret
cwtd
push
cmp
pop
hlt
sbb
jnp
sub
lods
int
push
outsl
push
rolb
js
mov
sub
xchg
repz
mov
xlat
sbb
jmp
mov
add
imul
xchg
les
test
add
cmc
cld
movb
cmp
push
aaa
fdiv
pop
addb
pop
in
sub
aas
test
cmpsb
sbb
cmp
in
xlat
fadd
or
jmp
clc
sub
mov
inc
mov
sub
cmp
jg
add
les
cmp
out
jb
aaa
push
add
adc
mov
pop
icebp
mov
arpl
pusha
add
cmp
pop
xchg
fs
pop
pop
or
push
pop
mov
out
rorb
inc
loope
xchg
repz
or
out
cmp
neg
fmul
xor
push
ss
insl
jp
push
outsl
push
mov
and
rorl
dec
aam
or
int
or
ficompl
cld
jns
add
push
sub
cwtl
js
xchg
orl
xor
adc
lds
mov
ljmp
xchg
mov
lahf
jecxz
sub
mov
push
loopne
shl
add
mov
cmp
add
add
aas
dec
push
sub
js
lods
or
bound
dec
add
lock
xlat
xchg
adc
cmc
ret
inc
cli
mov
pop
hlt
adc
imul
dec
lahf
aaa
or
pop
les
push
addb
sbb
xchg
push
add
nop
jns
cld
insb
lcall
pop
mov
fs
lea
in
shll
ljmp
mov
lods
pop
mov
pusha
add
add
repz
add
mov
pop
add
outsl
lea
jnp
push
add
inc
add
adc
push
loope
stos
xor
jno
mov
fwait
test
insb
cmp
jp
insb
jno
add
repnz
mov
jns
xchg
mov
fstpt
fwait
jecxz
pop
or
add
rcrl
add
inc
stc
int
pop
adc
inc
scas
movb
add
fsubrp
ja
jb
loope
add
std
cltd
add
movb
push
dec
mov
xor
test
xchg
gs
and
pop
pop
inc
inc
add
add
iret
in
inc
jnp
dec
xor
add
jnp
mov
adc
add
lea
repz
push
jecxz
sti
iret
push
pop
mov
and
xchg
jl
xlat
lea
or
mov
imul
and
scas
sub
mov
adc
mov
xor
adc
add
jl
jmp
ficompl
in
xor
sbb
jp
or
dec
out
mov
xor
jns
pop
adc
cli
idivb
mov
leave
lcall
push
sbb
inc
add
les
cwtl
mov
add
shl
mov
mov
insl
das
imul
or
add
add
add
mov
repz
test
test
aas
jg
or
out
fwait
addb
add
rolb
dec
dec
xchg
xor
sahf
ret
xor
add
mov
xlat
add
dec
mov
inc
add
sbb
cmp
ror
dec
pop
sbb
add
ret
pushf
insb
mov
imul
int3
lret
xchg
add
pop
jno
push
jge
fcmovne
pop
pop
adc
mov
jg
inc
add
das
pushf
push
mov
add
ja
jg
inc
add
movsl
loopne
jle
jge
add
adc
mov
repz
push
lahf
mov
xchg
dec
pop
pushl
mov
stc
add
sti
daa
daa
flds
add
sub
loop
add
mov
aas
negl
xchg
mov
stos
mov
arpl
in
pusha
add
dec
repnz
adc
stos
inc
add
adc
add
jae
add
inc
pop
dec
into
mov
sbb
in
scas
mov
loop
push
imul
js
aad
lods
popa
xchg
in
hlt
aad
and
cmp
or
repnz
xchg
adc
xchg
sbb
sbb
jne
or
pop
sbb
mov
push
mov
dec
clc
cmp
stc
lods
inc
mov
add
mov
push
std
mov
inc
sbb
js
inc
int
adc
cli
stos
imul
xor
imul
jns
loope
jg
lock
ret
jl
adc
inc
add
xchg
test
jp
sbb
push
std
das
insl
sbb
jg
xor
mov
addb
fs
out
negl
mov
and
daa
cmp
push
add
push
mov
inc
loop
add
add
or
dec
lock
add
jg
sbb
fsubl
pop
jnp
outsl
jbe
lock
add
mov
and
pusha
add
inc
add
push
ss
mov
out
gs
adc
movsb
or
sahf
pop
movsb
in
pusha
add
or
xchg
cmc
std
notl
push
and
insl
loop
sbb
sbb
idiv
sub
nop
mov
cmc
mov
push
xchg
push
push
push
xor
out
sbb
pop
enter
mov
add
addb
mov
add
bswap
sbb
in
stos
lahf
clc
fisubrl
pop
cmp
xchg
fninit
sbb
and
jae
xchg
jb
mov
fcmovu
enter
or
jle
mov
aas
popa
adc
cwtl
fcoms
cmp
add
inc
mov
mov
push
jbe
aad
inc
add
pop
shrl
lahf
stc
mov
add
mov
mov
mov
jp
and
getsec
mov
add
cli
shll
es
push
add
inc
add
and
mov
ljmp
xchg
loop
add
add
pusha
add
push
adc
scas
jae
mov
adc
mov
mov
mov
sbb
push
test
sub
inc
leave
loop
hlt
std
cmp
orl
dec
hlt
fsubs
mov
in
out
inc
gs
add
mov
stos
sbb
in
rolb
fbstp
scas
xchg
mov
fs
dec
ds
out
popf
jmp
in
xchg
pop
mov
sti
fisttpl
mov
dec
jge
cmpsl
mov
lods
loop
daa
pusha
add
ss
addr16
inc
add
in
in
xchg
inc
xor
xor
dec
adc
shll
mov
or
add
call
sbb
cli
or
xchg
dec
lods
lahf
out
jl
xchg
leave
mov
add
xlat
xor
es
arpl
add
fcompl
movsl
ret
or
xchg
pop
js
xchg
lods
incl
xchg
js
cmp
pop
push
pop
and
fsubs
mov
add
rcrl
pop
xchg
or
xchg
mov
ds
pusha
add
dec
push
addb
or
jb
movb
pop
push
mov
push
ljmp
out
aam
es
or
mov
sbb
add
mov
add
les
loope
jl
jmp
std
fstl
inc
jl
rolb
push
bound
in
and
jmp
mov
fmull
cltd
popf
mov
xor
push
add
addb
js
ds
test
lock
add
test
xchg
push
aaa
push
rorb
xchg
pop
in
jne
test
addr16
or
mov
and
aas
movb
lods
add
aaa
add
lods
addb
mov
or
in
cmp
sub
outsl
addr16
sbb
int
dec
mov
cltd
cmp
loope
in
jbe
mov
add
js
push
sub
ret
or
and
out
push
sub
in
push
bswap
mov
or
scas
shl
mov
or
or
scas
mov
jnp
push
out
mov
and
cmpsb
roll
fsubr
pushf
leave
loop
xor
hlt
or
xchg
scas
mov
pop
jo
sbb
ds
cmpsb
sahf
addb
ljmp
xor
xor
inc
sub
shl
pop
xlat
inc
add
shl
sbb
ret
addb
push
add
in
push
cmp
adc
sub
dec
mov
and
add
mov
add
je
mov
or
add
mov
dec
push
mov
mov
movsl
sbb
jge
add
shlb
mov
mov
ss
cmp
pop
enter
jo
lods
add
add
pop
movb
mov
push
add
js
sub
cmp
mov
add
aaa
rep
test
sbb
movsb
faddl
add
les
call
mov
orl
mov
pop
jbe
xor
pop
jb
pop
rorb
int
and
cmp
jno
fwait
enter
mov
mov
xor
jge
xor
cmc
xlat
test
sbb
xor
cltd
movsb
push
loope
dec
inc
add
mov
add
ja
fnstcw
cmpsb
aaa
mov
add
cmp
add
lods
scas
sbb
movsb
les
into
mov
add
xchg
push
pop
hlt
mov
mov
mov
addb
out
xchg
scas
addb
shl
jnp
jno
fcompl
mov
inc
mov
iret
pop
insb
xchg
test
nop
out
stos
in
and
dec
mov
cmp
xor
xor
pop
mov
stos
cwtl
push
jle
add
fnstcw
push
lcall
mov
pop
stos
jmp
sub
mov
out
add
or
and
pushf
and
ret
mov
and
xchg
inc
add
addb
add
stc
pop
in
movsl
das
outsl
gs
or
lock
out
jge
mov
cmp
int3
in
lods
inc
xchg
or
leave
and
add
mov
add
inc
add
pop
add
repz
rolb
lods
stos
mov
mov
cmp
xor
xchg
adc
out
xchg
std
mov
sbb
test
adc
pop
fisubl
daa
pop
shl
in
add
push
test
inc
add
mov
cmp
test
les
sahf
and
cltd
sub
daa
sbb
add
sbb
popf
shl
in
add
fsts
imul
xchg
fistpl
jle
sbb
jecxz
fs
loop
std
clc
mov
mov
xchg
cmp
push
iret
sbb
xchg
imul
iret
lret
popf
sbb
cld
jl
sahf
testb
lret
sahf
mov
push
in
add
pop
imul
push
xchg
popf
jl
cmp
aaa
mov
add
jnp
pop
sbb
inc
add
add
sbb
cmp
adc
repz
das
push
test
pop
cmp
xorl
add
ja
ss
dec
popa
scas
mov
cmp
pop
dec
mov
call
mov
popa
pop
jae
xchg
mov
fwait
test
mov
add
aad
mov
pop
movb
mov
or
push
pop
out
icebp
mov
mov
add
mov
test
shrl
dec
or
clc
fs
bound
in
data16
jmp
lahf
xchg
sbbl
cmp
xor
pop
push
push
add
add
inc
add
mov
pop
fisubl
outsb
fwait
scas
pop
lds
imul
or
in
std
jl
popa
sahf
mov
popa
mov
mov
pop
mov
cmpsb
rolb
mov
push
jae
inc
add
movsl
fnstenv
dec
mov
xor
lea
js
add
add
fst
ds
jns
stos
xor
mov
add
ss
das
inc
add
es
cs
mov
out
add
jbe
xchg
mov
mov
add
dec
dec
aas
inc
or
mov
pop
je
cmp
sti
mov
lret
mov
add
add
add
mov
add
pop
stos
in
add
xor
imul
jmp
in
pusha
add
cmc
rorl
push
fsubrp
push
mov
js
es
outsb
sub
push
shrl
inc
add
ret
add
cs
enter
mov
lret
aas
mov
sbb
ljmp
cli
sbb
pop
xchg
jnp
mov
ret
enter
das
add
arpl
decb
fdiv
fbld
xchg
push
push
mov
push
mov
loopne
out
loope
arpl
pop
cs
nop
inc
add
dec
mov
inc
push
add
dec
cwtl
lahf
mov
ja
and
sbb
cmc
enter
add
jae
call
mov
mov
repnz
push
mov
adc
xchg
inc
add
orl
dec
stos
fcoms
and
sbb
cmpsb
jns
or
jo
xlat
aam
lret
mov
or
inc
add
lret
xchg
je
rorl
test
pop
daa
call
int3
fistps
add
jl
xchg
in
jp
sub
stos
pop
xchg
les
test
inc
arpl
xor
cmp
add
cmpsl
fwait
mov
xor
mov
int
sbb
movsl
arpl
mov
jle
mov
pop
rclb
cld
inc
add
add
jg
cld
dec
mov
push
xchg
dec
movsl
lods
mov
mov
in
enter
push
adc
or
pop
daa
sbb
add
daa
mov
not
testl
xchg
sub
bound
pop
sbb
add
bound
ret
push
pop
aaa
pushl
xchg
jae
mov
pop
pop
mov
push
enter
lahf
imul
xchg
fwait
in
stos
cmp
push
mov
inc
rolb
cmp
in
xor
mov
dec
roll
mov
lret
aam
push
stos
test
aaa
movsb
les
sbb
outsl
cmp
pop
das
cmpsl
xor
hlt
add
movsb
in
jne
mov
ret
das
mov
inc
fcompl
pop
ret
mov
in
shrb
lock
imul
xchg
jnp
inc
mov
pop
repz
sbb
les
aad
dec
iret
cmpsb
or
into
and
fnstcw
pop
adc
rcrl
mov
xchg
or
daa
inc
lcall
roll
xor
adc
add
std
mov
cmp
cmp
push
xor
adc
jl
clc
aad
or
into
add
add
adc
stc
sti
or
mov
mov
mov
dec
addb
test
jne
add
or
cmpsl
decb
gs
test
adc
scas
shll
shrb
and
lods
pop
dec
repnz
sub
push
mov
in
xlat
scas
repz
inc
add
mov
loopne
add
vcvtps2dq
add
imul
mov
add
push
mov
test
dec
cmp
fs
ja
inc
mov
mov
cmp
ss
sbb
xor
dec
notl
psrlw
in
bound
push
cmp
push
ss
in
in
xchg
push
bound
packssdw
shll
jmp
jp
or
xor
in
and
sar
push
movsb
or
or
inc
add
rorb
mov
test
das
shl
sarb
push
sti
inc
decb
add
push
popa
scas
popw
fisttps
rolb
pop
pop
shll
bnd
or
jae
xor
inc
stc
mov
pusha
add
in
lods
sbb
mov
mov
pusha
add
cmp
in
out
adcl
testl
dec
add
push
add
and
loopne
dec
and
push
pop
hlt
cmp
jg
add
fstps
shll
in
push
push
mov
roll
cmp
les
loopne
fistl
add
xchg
inc
add
out
subl
popl
pop
and
jb
mov
push
jp
mov
addb
test
xchg
xchg
ret
pop
cs
leave
adcl
mull
lds
or
and
cs
idivb
add
int3
iret
or
add
jecxz
les
scas
pusha
add
jbe
xor
add
jbe
mov
xchg
jno
jne
jbe
pop
pop
inc
ljmp
xchg
lock
jns
out
xor
daa
sbb
add
negb
and
mov
mov
test
pop
cltd
mov
addb
mov
add
xchg
rclb
ja
push
xchg
xchg
jp
and
leave
testl
fnstcw
add
or
xchg
lods
inc
add
fidivrs
jp
fistps
mov
lret
xchg
add
adc
and
inc
add
imul
xor
jno
mov
stos
cs
adc
or
dec
sub
adc
sbb
jg
rcll
inc
jle
add
jge
add
sbb
add
cmp
mov
aas
inc
add
and
clc
jecxz
bound
pushf
xor
mov
in
lods
pusha
add
gs
enter
sub
cld
or
jg
cmp
shll
jns
cltd
bswap
ret
jno
out
mov
fcmovne
scas
out
add
sub
xor
add
je
lea
outsb
leave
rclb
pop
push
mov
les
inc
add
add
lods
icebp
rol
test
dec
lret
enter
cmp
push
cli
xor
scas
outsl
xchg
test
je
jp
inc
add
xchg
adc
aad
divl
xchg
inc
repnz
leave
js
xor
cmp
dec
and
stc
insb
mov
fstpl
rcrl
add
and
pop
pop
lods
cmpsb
sahf
add
mov
mov
mov
push
arpl
aas
dec
xchg
sub
std
test
fildl
xor
stos
inc
add
add
inc
mov
insl
xor
mov
in
cmpsl
dec
sti
sbb
fsubs
mov
add
aam
or
xchg
loope
adc
jle
aad
outsl
fnstcw
add
mov
cmp
leave
sbb
imul
add
in
push
into
shll
pop
cmp
aad
aad
aaa
sbb
fsubs
fisubs
pushf
stc
data16
or
and
push
pop
lret
sbb
jp
aad
add
jmp
inc
add
scas
xlat
push
adc
nop
rcll
imull
jecxz
je
add
xchg
idiv
inc
add
mov
aaa
mov
xchg
mov
or
mov
addb
add
or
mov
aas
inc
add
jno
arpl
gs
out
mov
jns
lds
sub
addb
or
jb
cmpsl
cmp
cld
add
mov
rolb
test
xchg
data16
mov
fildll
push
push
xchg
sbb
rorb
mov
loop
ds
lods
imul
insl
out
fadd
add
mov
ficomps
loopne
rcl
or
rcrl
xchg
cmp
fadds
pusha
add
ds
push
mov
sbb
xchg
add
call
dec
cs
sti
mov
adc
push
push
add
push
lods
jbe
mov
shlb
push
scas
outsl
insb
mul
xlat
lcall
add
sbb
jbe
jge
add
add
call
jp
sub
out
das
das
andl
mov
add
imul
aaa
int3
ja
stos
push
sti
push
add
fcoms
mov
into
loopne
aad
ds
loop
add
mov
add
jge
stc
dec
out
add
scas
test
imul
cwtl
fisubrl
addb
cwtl
inc
mov
add
fs
int
cld
stc
mov
mov
les
sbb
ss
aam
add
adc
add
popl
mov
lret
aam
shll
add
shlb
adc
test
popf
fsubl
pop
ss
jmp
je
dec
mov
fldl
add
add
inc
cmpsl
out
je
sub
sbb
add
cmp
mov
out
ds
add
jno
mov
jle
out
pop
pop
jbe
loop
lock
sub
push
push
addb
cmp
push
push
cli
incb
xchg
scas
pop
orl
jo
add
adc
stos
aad
sub
lcall
fwait
out
movsl
sub
mov
xchg
addb
jge
scas
repnz
dec
adc
mov
pop
frstor
sbb
loope
mov
jp
js,pn
or
add
mov
lods
ds
add
push
insb
jno,pn
jo
pop
sbb
mov
pop
les
jge
lods
mov
in
andl
mov
jne
imul
insl
adc
sti
repnz
xchg
or
xor
adc
push
pop
aaa
mov
mov
sub
dec
outsb
shrl
and
movsl
mov
pop
jmp
sbb
xchg
sub
daa
sbb
mov
push
repnz
mov
aad
pop
lcall
and
ss
mov
sub
aas
cmp
in
xchg
sub
mov
or
jns
and
mov
xchg
dec
cmp
add
adc
out
movsl
cmp
add
fisttpll
sbb
sbb
add
push
test
je
adc
mov
push
movb
pop
adc
xor
outsb
bound
pop
int
test
mov
add
pop
sub
push
add
int3
push
cwtl
mov
mov
outsl
push
jne
das
testl
test
repnz
das
das
xor
jns
dec
insb
inc
add
push
lret
ret
int3
mov
xchg
jbe
or
sti
jo
fcompl
into
stos
ss
add
xlat
sub
outsb
icebp
push
lret
ret
lock
add
xor
iret
ljmp
lock
jb
enter
roll
scas
movsl
movsb
stc
inc
add
jne
mov
mov
lahf
cmpsl
fistl
test
jl
inc
add
ds
fmull
iret
repz
push
sbb
test
add
push
shrb
test
daa
rorl
call
adc
inc
add
repnz
mov
bound
daa
cmp
or
xchg
push
bound
pusha
add
mov
jmp
mov
iret
addb
xlat
sub
xchg
int3
sbb
inc
lret
fcmovne
and
sbb
xlat
test
fisubrs
mov
mov
dec
pop
add
pop
jbe
jae
cli
xchg
xchg
mov
inc
add
add
pop
outsb
xor
add
jg
xchg
ret
and
push
mov
cmp
xchg
push
adc
push
push
add
ds
mov
inc
add
sbb
sbb
lret
out
leave
hlt
mov
dec
adc
inc
popf
or
sub
data16
jns
push
outsl
sbb
cmp
sahf
cmp
hlt
cmp
scas
cs
add
mov
stos
movsb
addb
out
rdtsc
out
xchg
ja
jne
pop
jno
ud0
jno
cwtl
nop
mov
jno
adc
jo
ret
aam
repz
movsl
jecxz
insl
mov
cmp
mov
addr16
loop
gs
les
cli
movsl
js
jns
jge
inc
ja
jg
popf
notb
mov
lock
out
mulb
add
js
pop
adc
add
into
inc
add
push
or
inc
dec
mov
out
icebp
sbb
cltd
insl
scas
pop
cmpsb
cmp
insb
mov
xor
xchg
cmp
inc
add
jne
dec
lcall
add
xchg
xchg
pusha
add
gs
push
mov
mov
out
mov
gs
leave
push
or
mov
mov
mov
mov
stc
lret
mov
sti
icebp
sbb
rorl
lods
xchg
xchg
lds
adc
mov
jno
sub
addb
and
shrl
xchg
sbb
sbb
cmp
lcall
mov
sub
call
arpl
enter
ror
arpl
xchg
repnz
xlat
addb
les
test
scas
or
insb
insb
in
pushf
divl
test
xor
andl
stc
pop
addb
add
cmp
inc
inc
add
add
stc
xor
jns
jl
mov
add
mov
mov
add
sub
into
or
mov
out
mov
lahf
jecxz
test
sbb
sti
inc
add
das
stc
sub
pop
mov
push
add
add
add
and
in
mov
mov
pushl
xorl
push
ds
sbb
je
aas
adc
jmp
sbb
hlt
mov
mov
xor
cmp
cmc
sbb
test
shlb
mov
ds
mov
loop
insb
adc
sub
cwtl
mov
xlat
xor
loope
adc
add
inc
mov
and
adc
add
add
xorl
lods
in
sub
movsl
out
test
adc
add
lret
push
addb
sbb
cmp
push
add
or
cmp
ret
cmp
ljmp
lods
data16
ja
mov
dec
out
in
push
jns
cmpl
les
mov
or
pop
cmp
je
pop
dec
sub
mov
das
ss
add
ret
inc
add
add
add
addb
jecxz
in
xchg
rolb
add
push
add
xor
mov
je
das
jnp
ja,pt
outsb
xchg
cmpsb
xchg
cld
xchg
insl
inc
dec
inc
add
loopne
fwait
ss
pop
aad
stc
les
mov
jecxz
shll
jb
pop
aaa
hlt
dec
cs
push
inc
add
daa
mov
push
pop
cmp
mov
mov
dec
add
xor
add
push
jno
arpl
add
scas
sahf
into
hlt
movsl
inc
add
nop
into
jbe
ljmp
movsl
aaa
and
xor
shl
stc
jg
and
int
mov
test
jecxz
addb
add
pushf
cmc
dec
stos
mov
fisubs
hlt
nop
dec
mov
dec
mov
adc
stos
lret
scas
gs
flds
sti
pop
jae
test
ss
lock
lcall
mov
mov
call
add
int3
addb
xor
inc
add
imul
int3
into
scas
jae
clc
add
scas
in
push
dec
sbb
outsb
addb
or
iret
addb
stc
test
frstor
rcr
mov
mov
xchg
push
push
mov
add
jmp
cmp
sub
pop
and
mov
out
lds
dec
mov
push
ljmp
mov
and
add
cmc
xor
add
int
scas
or
lahf
movsb
cmp
add
jno
stos
pop
in
stc
std
or
add
dec
mov
icebp
xchg
rcl
dec
and
sbb
mov
adc
mov
add
pop
int
cmp
add
mov
add
sbb
mov
push
divl
sub
add
xlat
cld
lcall
and
mov
jmp
loope
push
mov
cltd
xchg
and
stc
pop
add
and
sti
mov
mov
push
mov
inc
add
addl
loop
cmp
fs
aaa
mov
les
jno
rclb
sarb
sub
push
mov
add
dec
addr16
dec
sbb
pop
push
rolb
daa
fucomp
cmp
push
and
out
inc
add
jp
daa
std
mov
jmp
aam
xchg
mov
add
or
cmpsb
adc
daa
lret
ljmp
je
insb
dec
pop
mov
scas
push
add
imul
fsubrl
leave
dec
addb
sti
mov
add
inc
add
xor
cmpsb
call
and
outsb
mov
test
push
push
jns
ror
add
add
sub
fsubrl
inc
add
outsl
jmp
dec
sbb
rol
adc
insb
jecxz
mov
int3
push
jno
add
cmpsb
iret
cmpsb
out
or
mov
int3
call
adc
jbe
xchg
and
xor
xchg
lds
in
pop
fimull
imul
les
jb
jmp
xor
dec
mov
add
mov
jecxz
add
and
push
mov
aaa
loop
ds
adc
loope
push
mov
push
lea
pop
jmp
and
imul
aad
push
ljmp
pop
push
clc
mov
dec
mov
add
sahf
pop
out
mov
mov
mov
xor
shll
mov
pop
fwait
jle
rolb
pushf
mov
or
loopne
js
add
add
adc
adc
rol
cmp
and
add
mov
sbb
test
movsb
mov
mov
movl
rcll
dec
int3
das
cmp
add
mov
negb
fcompl
xchg
jmp
push
cmpsl
sub
pop
mov
jmp
sbb
xchg
pop
outsb
movb
aaa
aaa
or
lods
outsb
jbe
mov
cli
daa
js
in
cli
ret
cmp
mov
arpl
sbb
add
mov
test
das
add
cmc
sbb
pop
in
jnp
mov
mov
dec
hlt
mov
add
sbb
push
jmp
dec
in
or
add
xchg
and
sti
negl
jg
lret
pop
mov
and
jae
test
add
fs
add
add
gs
cmpsl
test
jp
cmp
pop
movsb
xchg
xchg
nop
cwtl
frstor
and
pop
lea
sbb
sarb
sahf
cmp
insl
add
sbb
add
cmp
addb
inc
add
cmp
jge
add
fbstp
add
dec
hlt
dec
fldln2
loope
or
mov
jb
xchg
sbb
sbb
pop
outsb
mov
popf
int
ret
sbb
and
push
fistpll
ret
rcl
push
imul
aam
push
push
pop
sbb
cwtl
nop
jb
xor
add
fdivrs
dec
pop
pop
movb
insb
scas
push
xchg
cwtl
int3
jp
mov
int3
int
push
mov
icebp
push
cmpsb
rolb
xchg
push
lret
sbb
adc
lcall
push
hlt
cltd
sub
cld
repz
rolb
sbb
daa
and
push
xchg
adc
cmp
and
xchg
rorb
imul
movsl
daa
test
int
sbb
loop
les
scas
push
add
mov
outsl
in
adc
cmp
add
ss
dec
fbld
and
lret
add
push
cwtl
pop
cli
testl
and
push
or
insl
cmp
jl
xor
mov
dec
mov
pushw
push
clc
pushf
pop
in
mov
test
insb
sub
pop
test
pop
nop
fistpl
cmp
pop
adc
sbb
stc
jg
mov
jecxz
xchg
or
pop
movb
mov
in
xorl
mulb
add
scas
fsubs
sti
movb
cmp
push
mov
lret
sbb
addr16
dec
sub
jno
jne
call
push
push
or
push
and
push
scas
push
sahf
adc
sbb
sub
add
xlat
cltd
aad
dec
push
mov
and
sub
ds
add
iret
lcall
cmp
xchg
outsl
lea
xchg
in
stos
repnz
call
inc
add
lret
js
fildl
fsubs
addb
inc
add
sub
and
mov
pusha
add
lret
rol
add
mov
sbb
push
mov
sbb
xchg
and
sbb
inc
add
dec
shrl
add
cmp
add
mov
imul
or
enter
aas
movb
push
or
js
cmp
push
sub
fldcw
add
or
dec
or
repz
xchg
int3
lcall
jl
lods
outsb
aaa
popa
call
mov
jmp
imul
dec
fidivrs
ret
test
jno
add
jp
inc
add
addb
stos
loope
push
sbb
movsl
popf
xor
add
xchg
sbb
adc
int
dec
cld
mov
aas
pop
push
add
lcall
rcl
xchg
mov
aaa
xchg
or
jne
jnp
not
fdivl
jl
out
popa
nop
int
sub
outsl
push
notb
dec
into
push
xor
insb
mov
int3
sub
jl
rol
add
push
outsl
adc
imul
xor
fwait
movsb
mov
add
jle
xchg
sub
sbb
push
fs
and
pop
xchg
fidivs
addb
add
insl
mov
push
push
das
fldl
xor
aas
fstps
dec
add
shr
aam
addb
lock
sbb
in
or
jmp
add
mov
cmp
int
shll
jle
push
pop
adc
fst
jnp
repnz
cmp
sub
adc
enter
inc
add
push
jmp
loopne
test
cmpsl
or
imul
cmc
and
add
out
dec
js
adc
stos
mov
cmpsb
inc
add
inc
add
add
jbe
cmp
push
lret
daa
lret
jmp
scas
sub
out
push
sti
mov
dec
xor
out
xor
into
jo
and
ljmp
dec
rolb
add
testl
fistl
insb
add
pop
pop
addb
in
mov
les
sbb
push
inc
add
add
add
xor
jg
xchg
call
jne
mov
repz
pop
and
add
lret
xchg
in
popf
jno
inc
sti
cmp
cld
cmp
minps
push
or
fs
mov
mov
push
adc
sbb
jmp
fadd
cmpsb
aas
adc
shrb
bound
out
dec
lret
sahf
pop
lret
inc
add
imul
pop
imul
and
into
xor
jns
mov
and
add
aaa
neg
or
stc
ret
push
clc
imul
jmp
sub
jne
mov
jl
jmp
in
sbb
jl
mov
setp
pop
shll
ljmp
repnz
inc
add
stos
adc
in
cmc
or
cmp
sub
add
into
js
pop
or
push
xchg
push
add
and
add
add
test
push
lock
clc
lods
lcall
ja
aaa
lret
jnp
xor
dec
xor
pop
in
jmp
jae,pt
fistpll
repz
push
jne
add
and
mov
add
lcall
adc
mov
push
cmp
jne
cmp
jl
pop
mov
adc
imulb
insb
add
sub
adc
movb
into
push
inc
add
jbe
test
insb
pushf
test
pop
push
push
mov
jp
dec
mov
loopne
cli
pushf
push
inc
add
mov
jecxz
icebp
std
adc
dec
imull
xchg
das
jl
or
out
imul
sbb
scas
jne
and
std
movsl
hlt
scas
jbe
clc
mov
and
add
aas
fwait
xor
daa
sbb
iret
xor
int3
pushf
xchg
jl
std
jo
test
ss
faddp
inc
cwtl
mov
xor
inc
add
aas
gs
pop
outsb
jne
inc
add
pop
inc
add
fistpll
lock
and
pop
in
pop
cmp
scas
js
stc
rolb
shll
call
je
add
fsubs
add
or
aam
call
mov
add
inc
in
push
cmp
pop
std
pop
mov
mov
sti
testl
adc
lea
aaa
mov
add
fsubr
sub
and
pop
lret
inc
adc
popf
jp
dec
jmp
mov
dec
jbe
add
and
cmpsl
jecxz
xor
add
add
negb
xchg
jbe
lea
pop
dec
pop
xchg
aad
pushf
outsl
pushf
je
push
popf
pop
mov
or
jge
lods
jle
out
dec
insb
bound
push
xchg
leave
mov
adc
dec
xchg
add
rolb
leave
loope
pop
xchg
add
lock
movsl
adc
lcall
mov
pop
xchg
push
push
add
add
adc
stc
jno
lods
jno
std
hlt
add
lock
push
mov
ds
cld
cltd
imul
push
push
cmp
push
cmpsb
test
daa
daa
mov
ret
adc
jecxz
xor
sbb
and
jmp
cld
jge
imul
mov
push
or
push
sub
dec
mov
fidivrs
in
sbb
jb
mov
cld
cli
xor
push
add
cs
push
or
scas
es
test
xchg
es
repnz
and
inc
std
ret
fs
pop
mov
cmp
mov
out
add
test
lea
enter
ficompl
ja
xchg
lods
and
sub
xchg
je
add
popf
int
xchg
adc
mov
rolb
xchg
ja
idiv
je
insb
imul
xlat
enter
mov
add
in
add
mov
jne
cmp
into
xlat
pop
mov
cmp
out
cmpsb
xor
add
mov
add
mov
xor
repnz
add
pop
xor
sub
and
mov
push
adc
addb
roll
addb
push
xlat
or
out
add
add
mov
inc
push
add
cmp
popf
dec
ret
movsb
addr16
loop
add
imul
es
insl
mov
fiadds
jmp
aas
test
or
jbe
add
fiaddl
inc
adc
lock
aas
rorl
adc
cmpsb
testl
gs
push
in
dec
into
xchg
test
je
cmp
popa
pop
dec
cmp
aam
pop
push
dec
sbb
rcll
inc
jmp
sbb
addr16
in
push
add
inc
add
push
or
adc
fbstp
out
das
fcomps
xchg
nop
fists
push
loopne
or
pop
cltd
and
jp
mov
movsl
scas
mov
mov
outsb
sbb
add
mov
pop
out
fcmovbe
push
add
lods
gs
push
mov
loope
cmpsl
bound
enter
pop
inc
add
dec
cmovbe
jecxz
adc
adc
shrb
add
dec
fwait
addb
pop
and
pop
adcl
jg
mov
stc
popa
xchg
sub
loope
mov
pop
cmp
pop
mov
or
mov
lahf
je
push
out
cld
fimuls
aam
dec
mov
decb
aad
into
push
mov
insb
push
sub
cmp
pop
mov
int
mov
lea
sub
add
lret
mov
out
xor
jl
xchg
ss
std
ret
sub
test
push
jno
lahf
sub
add
outsb
or
cmp
pop
negb
call
inc
pusha
add
popf
fs
mov
pop
jbe
add
sarl
pop
cmp
cltd
in
cmp
mov
and
aam
int
add
pusha
add
fldcw
add
jmp
pop
movsl
popa
adc
inc
add
xor
sbb
pusha
add
inc
add
xor
shll
ret
or
mov
lea
and
out
nop
mov
dec
movsl
xor
mov
ljmp
rorl
jmp
pusha
add
add
pop
push
repnz
cmp
inc
add
jae
xor
aas
pusha
add
sub
stos
mov
movsl
dec
xor
mov
gs
adc
sub
jmp
fdivrl
add
xchg
and
loop
hlt
dec
pop
icebp
nop
ret
pop
adc
add
mov
clc
leave
dec
or
jg
mov
and
dec
jbe
dec
fstps
xchg
test
sub
fcomip
jmp
roll
add
fs
pusha
add
addr16
sarl
add
rcll
or
pushf
or
add
push
and
adc
out
inc
cmp
dec
mov
loop
movsl
mov
adc
imul
jecxz
adc
sbb
std
sbb
pop
into
je
push
in
jne
pusha
add
add
inc
mov
adc
fistl
divl
aas
mov
test
add
nop
adc
add
ja
das
cmp
and
in
mov
inc
add
fdiv
mov
add
cmp
test
daa
or
test
and
popf
cld
fcomip
inc
add
lret
fldt
xchg
push
xchg
hlt
cmp
cmp
add
jno
imul
out
mov
fwait
cmp
mov
insb
lahf
lock
add
dec
movsl
fldt
outsl
mov
test
add
js
mov
push
mov
ret
imulb
ss
fs
jb
dec
pop
into
scas
test
incb
std
rolb
push
sub
push
jecxz
jb
add
sbb
add
icebp
test
cmp
xor
imul
inc
add
add
pop
mov
mov
sarl
es
jae
out
or
mov
pop
sbb
enter
mov
hlt
xor
cltd
or
add
arpl
mov
stc
mov
pop
clc
sbb
lea
in
adc
aaa
popf
call
dec
stc
jno
inc
inc
xor
xchg
repz
mov
push
daa
or
je
sub
or
xor
xor
test
adc
add
divl
mov
add
fnsave
mov
add
mov
ret
dec
sub
mov
cmp
fwait
es
mov
int
sti
sbb
jecxz
mov
int
lret
xor
push
sub
ret
gs
mov
jne
fs
test
jns
outsb
gs
jecxz
ljmp
dec
adc
add
xchg
addr16
sbb
mov
bound
sub
in
push
mov
dec
xchg
fwait
cmp
adc
clc
test
ss
jno
inc
add
fdivrs
pusha
add
notl
xchg
mov
xchg
fwait
sahf
pop
out
mov
add
add
jle
jne
push
jecxz
add
imul
cmp
mov
lret
push
add
or
jecxz
jo
pop
mov
lea
pop
cwtl
adc
push
add
sub
mov
xor
shll
or
pop
jmp
lds
mov
add
push
push
rcl
xchg
cmp
ljmp
xchg
cmp
mov
mov
popa
std
jl
jmp
sbbl
or
pop
stos
dec
push
push
imul
repnz
pop
mov
pop
dec
pop
pop
enter
mov
out
imul
mull
and
rolb
outsw
jl
outsl
stos
push
and
cmc
ret
fadd
les
sub
shl
and
in
sar
jne
mov
call
hlt
test
ret
sbb
in
push
roll
sub
push
and
jnp
add
jbe
mov
mov
xor
ss
mov
shlb
mov
movb
mov
lods
sbb
inc
mov
add
int3
inc
test
lahf
inc
push
push
add
addb
loopne
xor
xchg
scas
rcll
fdivrs
test
dec
sub
out
ret
xor
dec
into
lahf
mov
test
scas
insl
roll
xchg
push
leave
xor
xchg
add
push
nop
movb
loope
fnstenv
jne
add
popa
cmpsb
xchg
mov
cltd
cltd
les
popa
or
add
rolb
adc
daa
shlb
repz
scas
repz
mov
and
sbb
notl
mov
addr16
sbbl
jmp
ret
iret
out
shrl
jnp
push
lds
and
mov
shl
pop
out
adc
pusha
add
outsl
ret
rcrb
add
dec
popa
adc
pop
dec
rcr
pop
jns
test
inc
les
std
adc
outsb
mov
or
dec
pop
mov
subl
add
lahf
ds
iret
addb
pop
es
cmp
lret
arpl
add
outsb
inc
jbe
stos
xor
adc
lods
shrl
jo
addb
sbb
add
xchg
aam
stos
lret
pop
jge
ret
js
movsb
or
mov
jne
inc
xchg
push
sub
hlt
out
or
lea
dec
or
test
mov
add
and
sbb
pop
pop
and
fisubrl
dec
and
add
cwtl
mov
sub
test
addl
jp
dec
icebp
mov
add
out
or
add
or
fisttpl
adc
mov
xor
sub
in
imul
popa
scas
cwtl
and
repz
mov
add
mov
call
add
add
sbb
clc
shlb
sldt
jns
push
cmpsb
mov
jnp
sub
cmp
rcrl
or
sar
push
xchg
loope
cmpsb
outsb
cs
add
mov
popf
adc
or
inc
add
ficomps
dec
cli
cmp
rolb
sahf
bound
or
sti
int
out
push
in
inc
add
adc
push
fsubrp
outsb
fdivrs
or
cltd
push
jnp
jge
movsl
sbb
pop
fdivs
enter
add
test
mov
lahf
or
or
inc
add
aad
jae
add
push
ljmp
jnp
ficomps
loop
movb
repz
cmp
out
es
xor
fcomp
in
inc
mov
nop
inc
add
pusha
add
xor
scas
jge
xchg
xchg
mov
xor
rcl
js
pop
jl
in
or
test
sti
shrb
xor
dec
shl
push
mov
ret
push
sub
in
call
mov
enter
inc
add
popf
jmp
cmp
add
mov
mov
mov
jg
add
and
movsl
xor
and
jp
rolb
stos
shll
pop
aas
rol
int3
push
xor
lret
fs
xchg
push
xor
in
xchg
mov
xchg
out
ret
add
movsb
adc
addr16
mov
imul
in
add
adc
and
inc
add
mov
sub
xchg
sbb
leave
fists
outsb
repnz
daa
leave
imul
insl
push
mov
xor
and
aas
imul
dec
mov
xchg
mov
aas
cmp
punpckhdq
aad
xchg
push
add
jle
out
mov
aad
cmc
fisubl
mov
push
push
cmc
faddl
jge
cld
pop
push
das
adc
cs
and
push
aam
mov
add
fsubrs
mull
add
rolb
lods
mov
mov
jecxz
jo
cltd
clc
jmp
push
push
ja
fidivrl
fiadds
or
imul
xor
jecxz
mulb
push
into
add
shr
dec
and
sub
into
call
jge
sub
push
push
bound
push
sub
or
add
lock
add
cmpsl
xchg
fldcw
add
leave
push
add
adc
lods
out
loop
xor
jmp
cltd
pop
je
inc
add
in
cwtl
jg
sbb
sti
jecxz
push
push
bound
popf
inc
add
dec
or
aas
rcl
dec
cmp
mov
add
add
leave
mov
cmc
hlt
ljmp
pop
xchg
push
and
nop
inc
add
add
jg
arpl
in
in
mov
ficompl
pop
leave
pusha
add
jo
xchg
sbb
jp
add
cmpsb
pusha
add
add
and
or
add
nop
mov
loope
packuswb
jb
addb
out
push
addb
repnz
mov
andl
mov
add
addb
push
push
dec
pcmpeqb
aas
or
jb
je
cmc
pop
or
inc
add
aam
lea
dec
out
inc
add
xchg
leave
addb
jno
add
sub
and
cmp
jg
sbb
test
lds
mov
sub
loopne
add
or
es
push
pop
xchg
sub
ret
lret
pushf
jge
mov
insb
inc
add
or
sbb
idivb
cmp
inc
repnz
dec
addb
inc
add
push
sar
arpl
inc
add
add
cwtl
test
dec
or
mov
add
mov
mov
sahf
sti
pusha
add
pop
lods
xchg
loope
iret
imul
add
cli
fdivrs
pop
pop
imul
aam
test
mov
xchg
jbe
mov
mov
test
and
ret
out
sahf
jmp
rcrl
push
dec
adc
jl
xor
movb
jns
push
addb
and
clc
les
dec
mov
and
dec
mov
or
shr
addr16
sbb
divl
xor
xchg
sahf
jg
add
xor
jb
add
cmp
stos
arpl
push
add
bound
push
jo
mov
add
cmp
lea
cwtl
gs
jg
jg
push
dec
jno
dec
sbb
leave
xor
imul
not
sti
xor
mov
jae
bound
and
in
out
pop
cmc
mov
dec
and
insb
mov
cmp
add
add
pop
and
ds
jmp
mov
test
int
iret
movsb
clc
jnp
rcll
sub
test
mov
pop
stos
xchg
or
or
imul
loope
mov
sbb
dec
or
into
mov
in
xchg
sbb
mov
ljmp
pop
inc
add
cmp
add
mov
mov
jl
xchg
xor
pop
cmc
mov
mov
mov
call
popf
aaa
nop
sub
shrl
push
incl
nop
imul
xchg
test
pushl
popa
pop
into
add
fcoml
dec
dec
gs
and
movb
icebp
sbb
mov
mov
addl
mov
pop
mov
stc
xor
or
push
lods
dec
sahf
ja
stc
xor
repz
cmp
push
add
fidivs
aaa
arpl
add
sbb
aam
inc
add
mov
hlt
sbb
jb
ret
mov
adc
mov
add
clc
mov
sub
aad
jl
add
aaa
sub
push
aaa
out
jnp
scas
ffree
les
xchg
loop
jne
addr16
popa
aas
add
adc
xchg
adc
out
add
mov
add
xor
xchg
mov
fcoms
sbb
push
shl
andl
js
test
cmp
stos
imul
jmp
adc
pop
enter
mov
je
in
lea
dec
ja
dec
das
dec
pop
mov
inc
jbe
ret
dec
jmp
dec
loop
das
mov
sbb
xor
inc
daa
outsb
subl
inc
fisttpl
add
movsl
or
das
mov
les
in
out
pop
bound
ret
test
rolb
out
je
sub
pop
lahf
push
pop
xor
jle
popl
add
test
add
or
std
mov
test
scas
loope
mov
adc
js
or
or
xchg
cmp
arpl
add
out
push
std
push
inc
add
les
push
es
outsb
aad
dec
lea
xor
imul
in
das
test
mov
dec
and
in
das
outsl
in
add
xor
fwait
orl
sbb
xchg
mov
movsb
xchg
fdivrp
rorl
mov
mov
xor
dec
cmc
mov
lea
add
mov
sbb
test
dec
push
out
add
mov
add
adc
ficoms
mov
pop
sbb
xchg
mov
test
movsl
sub
clc
in
and
das
xchg
inc
addb
push
xor
or
js
inc
fdivl
scas
rcl
or
dec
pushf
rolb
into
jb
data16
addb
or
movsl
sbb
inc
xor
add
add
daa
cld
faddl
add
add
icebp
sbb
idiv
sub
mov
inc
add
add
mov
add
mov
aaa
push
bound
iret
sbbl
fcomps
mov
add
cmp
adc
loopne
iret
mov
ds
movb
movsl
ficompl
jl
and
in
sbb
pop
pop
out
addb
lret
mov
adc
cmp
sbb
pop
cwtl
inc
add
les
xlat
dec
or
sub
shrl
jecxz
out
add
jns
add
imul
ret
sbb
cmpsb
mov
add
punpckldq
int
mul
add
in
sbb
add
pop
jne
loope
movb
jge
in
or
cmp
bound
cli
out
sub
pop
fldpi
sahf
daa
inc
push
sbb
jbe
in
scas
icebp
mov
mov
add
aam
es
icebp
outsb
nop
or
add
clc
mov
ret
imul
addr16
mov
sbb
inc
add
push
iret
jo
out
lock
add
mov
push
mov
and
push
roll
cmp
dec
mov
sbb
add
mov
into
aaa
daa
in
sub
or
add
sbb
pop
addb
outsb
mov
xor
sbb
aaa
addb
xlat
enter
jnp
addb
sbb
and
adc
adc
sbb
std
in
sub
out
in
clc
mov
sti
popf
dec
in
leave
push
sub
fmul
sbb
inc
add
xchg
pop
fidivrl
ret
addb
aaa
das
arpl
add
into
sti
sub
into
push
xor
mov
sbb
subl
mov
push
mov
aad
add
xor
add
add
mov
jne
pop
sbb
repnz
xchg
aaa
and
fidivs
cld
and
addb
outsb
mov
adc
pop
rcl
mov
sbb
jl
cwtl
test
movb
dec
sbb
cmpsb
adc
loopne
dec
fstpl
xchg
xor
out
pushf
fidivs
mov
add
mov
jle
xor
pop
sub
pop
mov
dec
mov
fsubr
incl
rcrl
lahf
ss
insl
dec
xlat
mov
sub
cmc
mov
mov
call
adc
xchg
imul
jp
das
mov
cmc
xchg
das
sub
inc
add
push
cltd
or
movsl
outsl
ret
xor
push
movsl
inc
les
ja
jg
mov
repnz
and
test
and
xchg
in
adc
pop
sbbl
push
fbld
mov
mov
jae
es
mov
lods
sarb
xchg
dec
das
and
pop
or
jnp
mov
cwtl
adc
inc
pop
xor
mov
movsl
in
test
cld
outsb
test
iret
mov
mov
aaa
je
aad
mov
cmpsl
in
mov
push
jb
scas
test
ss
add
ss
inc
add
jnp
test
xor
mov
dec
cmp
je
push
and
or
add
fwait
das
clc
or
push
data16
mov
dec
aam
pop
xchg
test
sub
cltd
or
mov
push
sub
add
adc
xchg
nop
push
pop
clc
push
in
add
imul
test
mov
adc
ss
cli
sbb
enter
sub
or
mov
sbb
std
xorl
or
clc
addb
fnsave
pop
xor
mov
mov
sbb
inc
add
add
cmp
xor
sub
push
stc
xchg
push
mov
cmpsl
cltd
imul
add
bound
sub
add
aas
pop
decb
add
fnstsw
ljmp
inc
add
add
mov
stc
mov
pop
push
jmp
iret
outsb
stc
xchg
arpl
or
and
movsb
cmpsl
add
fwait
pop
xor
mov
das
pop
xchg
ss
mov
mov
or
je
iret
sub
in
pop
dec
fwait
or
push
sub
inc
subl
les
cmp
add
imul
and
dec
sbb
clc
loopne
jmp
inc
add
push
inc
cmp
and
jnp
movb
jne
fwait
sbb
outsl
ret
jmp
pop
mov
cwtl
xor
adc
popf
and
and
into
pop
shrl
fs
cld
sub
add
mov
nop
mov
into
jne
mov
jb
int
aaa
mov
aaa
aad
fbld
xrelease
mov
insb
sbb
mov
movb
xchg
mov
dec
dec
loop
leave
push
popa
cmp
aaa
push
add
cmp
addb
lea
xchg
stos
or
add
negb
jo
clc
scas
and
rolb
enter
dec
xchg
mov
and
mov
mov
maxps
out
add
sbb
adc
mov
sub
push
jg
popa
mov
into
jl
pop
test
lret
push
mov
or
mov
scas
jnp
mov
inc
add
pop
sbb
scas
add
push
add
jne
repnz
xchg
add
cmp
leave
stos
xor
mov
paddusb
sahf
test
pop
xchg
loop
pop
iret
or
inc
add
test
mov
push
out
enter
int3
jo
xor
arpl
mov
xor
jo
pushf
test
repnz
adc
add
cmc
jmp
mov
mov
push
jbe
aad
pop
ret
js
add
xchg
lea
daa
fmul
decb
ret
xchg
rcrb
sarl
mov
je
imul
sbb
push
mov
mov
add
xchg
pop
inc
mov
mov
jbe
repz
jmp
jp
fcompl
pop
cmp
inc
ret
add
iret
dec
jecxz
rcrb
fs
fcompl
pop
rcl
mov
or
inc
lds
outsl
call
add
fistpll
xchg
mov
roll
js
imul
add
sub
nop
in
pop
lock
pop
fsubrs
add
mov
std
push
ja
mov
iret
scas
lods
xor
xor
pop
popa
imul
jns
add
adc
stos
notl
bound
mov
imul
add
stos
movb
jmp
and
or
push
adcl
cmp
in
and
dec
mov
adc
lock
shl
addb
sahf
adc
lds
stos
mov
push
jmp
jmp
add
add
sbb
mov
inc
add
mov
inc
jp
pop
lcall
jne
stos
xchg
gs
enter
xchg
nopl
scas
xchg
sub
xchg
pop
fisttps
pop
cwtl
mov
out
sbb
sbb
shl
xchg
sbb
shll
test
inc
dec
aam
stc
jae
adc
adcl
add
bound
clc
aam
adc
ds
loopne
xchg
cmp
inc
cmp
mov
aam
imul
movsb
ds
pop
cwtl
adc
mov
imul
and
xchg
xor
push
sub
rolb
dec
add
and
les
adc
lcall
dec
addb
dec
sbb
adc
out
clc
loope
clc
loope
clc
mov
aas
fisubrs
add
sub
pop
lret
lea
addb
hlt
hlt
jne
arpl
push
repz
cmp
add
add
add
mov
add
mov
add
mov
lahf
aaa
test
lods
fnop
or
hlt
and
and
add
mov
and
push
jmp
xchg
movaps
cmc
dec
insl
xchg
mov
xchg
enter
imul
loop
sub
scas
gs
arpl
fwait
sbb
bound
lds
fcomps
cmp
aam
lods
add
xchg
xchg
pop
mov
and
push
test
mov
adc
xchg
int3
cmp
dec
ja
jg
adc
into
iret
sti
enter
adc
sub
push
adc
add
lock
cld
ljmp
fmuls
daa
mov
push
outsb
adc
mov
into
and
popf
outsl
pushf
push
ss
roll
fstpt
and
mov
and
mov
dec
xchg
sbb
jno
lret
xor
test
xor
test
loop
enter
sti
sub
pop
shrl
out
inc
add
movsl
push
push
add
daa
and
call
cmpsl
fdecstp
jno
adc
push
ss
add
and
shrb
push
sub
shlb
push
or
add
bound
push
arpl
add
pop
add
mov
add
shl
push
pop
fisubrl
movsl
inc
add
add
add
addb
into
sbb
and
insb
jno
es
mov
orl
lds
mov
into
aam
and
repz
xchg
mov
adc
popf
lahf
pusha
add
mov
sarb
movsb
cmp
push
mov
cmc
lret
add
jnp
leave
cmp
rolb
addb
push
inc
fcomps
mov
xchg
sbb
and
popf
iret
rorl
mov
rolb
cmpsb
mov
adc
add
jns
mov
push
cltd
sbb
cmp
add
jae
xchg
xor
loope
sub
ret
pop
mov
pop
push
movsb
popf
jae
jb
mov
in
push
imul
cmp
add
pop
int
dec
gs
xchg
loop
pop
fidivl
in
les
int3
inc
add
mov
cmp
hlt
xor
inc
out
adc
or
xchg
push
add
cmp
out
movb
xchg
xchg
aam
fwait
push
push
int3
pop
add
pop
xchg
out
and
das
sti
std
lea
das
test
fs
addr16
jae
jb
and
pop
xor
in
clc
jbe
adc
out
add
ss
cld
mov
sub
out
cmpsb
fisttps
fcmove
push
movsb
loopne
sbb
dec
mov
jl
cltd
inc
add
lds
sub
imul
add
and
jecxz
int
movsb
push
test
movsl
pop
ret
jl
jae
xlat
shrb
xlat
mov
add
repz
inc
fistpl
mov
inc
stos
leave
lock
xchg
es
test
sub
add
or
add
es
out
fimuls
and
stos
mov
add
pop
bound
jmp
fistl
jg
movb
bound
shrb
hlt
push
mov
loop
inc
inc
mov
push
dec
addb
scas
cmpsl
pop
mov
popf
shlb
stc
lods
push
jp
sbb
ds
add
lret
add
out
leave
aam
pop
xor
adc
dec
sub
cli
stos
jl
dec
dec
or
sub
push
cmp
cmp
bound
out
ret
data16
into
sbb
dec
loop
pop
xchg
or
icebp
mov
xchg
cmpl
cmp
subl
addb
or
add
add
lea
adc
push
sub
pusha
add
lret
popa
nop
and
xchg
adc
add
movb
adc
mov
ljmp
sbb
cmp
jl
cmpsl
ret
aam
das
push
xor
mov
sbb
cwtl
sti
aad
jp
popa
or
movsl
orl
mov
mov
xor
mov
or
stc
sub
fdivrl
or
sub
das
daa
jnp
jmp
negl
add
cmp
int3
xchg
loope
fsubrl
stos
push
cmp
loope
add
fistl
out
xchg
aaa
mov
add
adc
dec
lods
stos
sub
das
aaa
mov
jmp
pop
jnp
je
push
or
addb
dec
in
fsubrp
sbb
sub
add
bswap
cmp
ss
sub
dec
jge
mov
add
mov
hlt
cmp
pop
sar
loopne
cmc
add
or
mov
jno
and
addb
jnp
pushf
dec
rcll
in
and
xchg
push
pop
xor
js
in
mov
dec
jne
mov
ja
add
out
imul
add
pop
ret
dec
subl
inc
icebp
xor
add
inc
add
jecxz
ficoml
push
mov
dec
xchg
arpl
lret
push
mov
mov
aaa
jmp
int
addb
mov
outsl
ljmp
jecxz
mov
addb
jno
add
inc
add
jae
out
cmp
xchg
sbb
in
sarl
jp
cmc
push
add
popa
aas
mov
or
dec
xchg
xchg
mov
mov
mov
arpl
sub
add
sub
xchg
push
or
cltd
hlt
sbb
imul
jmp
loop
stos
push
push
adc
negl
inc
lods
pop
addr16
jno
cmpsl
pop
inc
xchg
or
out
sbb
stos
inc
add
into
cmc
jg
pop
orl
pop
lea
xchg
xor
dec
cwtl
xchg
pop
in
jae
sahf
test
add
imul
cmp
pop
and
fsubr
sarl
out
mov
aas
addb
loopne
add
aaa
psllq
sbb
into
repz
pop
mov
add
push
cwtl
mov
add
inc
add
jnp
cmp
push
fsubrs
pop
movb
out
mov
aas
movsl
push
push
subl
dec
cs
lcall
bound
clc
push
jp
inc
into
jmp
add
push
xor
sub
mov
daa
cld
js
fdivs
mov
lock
push
fsub
ficoml
add
mov
icebp
adc
add
cld
ret
jg
cwtl
lds
rcrb
std
inc
jne
repnz
inc
mull
iret
jmp
loopne
sbb
pop
arpl
scas
inc
add
cld
mov
fidivs
mov
add
pop
mov
inc
add
in
add
dec
xchg
icebp
fdivrl
loopne
sbb
in
fnstenv
dec
out
adc
lahf
and
addb
stos
int
lret
clc
addb
xor
dec
or
mov
movsb
sbb
sub
sbb
jge
add
enter
xchg
daa
adc
and
pop
repnz
iret
sbb
sub
jo
movsb
adc
pop
lret
mov
lea
and
push
jle
das
in
xchg
int3
clc
mov
cmp
decb
add
incl
pop
xchg
es
inc
lret
pushf
mov
dec
push
mov
ss
cmpsb
les
les
adc
scas
rclb
xchg
dec
std
das
pop
pop
mov
mov
sub
push
add
clc
cmp
add
mov
add
xor
dec
jne
rolb
addr16
roll
xchg
notl
cmp
ds
out
pop
out
in
sbb
and
cmp
mov
cmp
pop
and
inc
add
jnp
lret
and
ret
add
and
shll
xor
mov
add
cmp
push
xlat
out
outsb
jecxz
or
leave
adc
push
fs
cmp
les
mov
xchg
insl
out
push
add
dec
mov
add
aam
repnz
fisubl
fs
xor
add
mov
test
lds
lds
add
inc
adc
xor
dec
dec
lahf
mov
mov
ret
movb
ret
psubusw
cli
fisubrl
inc
add
push
mov
sti
push
add
lahf
jo
mov
mov
pop
dec
jge
adcl
iret
cmpsl
lret
and
les
rolb
xchg
push
out
jo
fwait
icebp
cmp
pushw
jbe
fstl
push
mov
jecxz
add
dec
jo
mov
xor
lods
or
into
lock
xchg
pop
xchg
std
add
dec
mov
je
and
fisubrs
xchg
in
xchg
sbb
add
mov
ret
lods
iret
test
jge
add
vcvtdq2ps
push
mov
in
mov
add
xor
xchg
cltd
enter
adc
cmp
xor
jno
mov
add
adc
add
add
inc
sub
xchg
xorl
push
mov
cmp
push
add
fs
xchg
mov
sar
pop
rolb
movb
test
xchg
sub
xchg
jbe
and
imul
icebp
js
and
in
add
loop
xor
popa
dec
es
mov
and
jns
sub
addb
lods
test
sbb
add
repz
punpckldq
mov
mov
xchg
xor
push
add
sub
and
dec
push
push
rolb
sub
push
out
dec
mov
xchg
jmp
lods
arpl
cli
outsl
cmpsb
inc
add
sub
push
rolb
popa
pusha
add
sbb
call
mov
cmovp
loopne
lock
jne
mov
les
aas
lock
dec
xor
cmp
cwtl
aaa
jnp
ret
xor
addb
loope
les
sbb
inc
lods
mov
adc
es
lret
sbb
mov
add
ror
insl
stos
popa
loopne
push
or
adc
adc
sub
rolb
mov
mov
add
mov
mov
push
add
cmp
inc
orl
add
lahf
rolb
sub
insl
pop
clc
jmp
pop
sbb
adc
movb
add
lods
push
xchg
mov
into
dec
jne
sbb
leave
jle
je
and
aad
insl
out
sub
movsl
stc
cmp
jns
lcall
js
xchg
imul
pop
pop
dec
aas
sahf
mov
jle
mov
fwait
mov
or
add
push
pop
mov
mov
fbstp
dec
jbe
mov
mov
add
adc
inc
add
cltd
xchg
lods
add
mov
movb
jnp
cmp
push
add
xor
je
dec
add
jge
jg
xchg
mov
push
popa
sub
jne
lret
lock
hlt
lret
addb
fcom
pop
pop
addb
add
sub
adc
sub
jge
add
jne
add
jbe
pop
insb
jb
and
std
sub
les
lret
mov
shrl
adc
sbb
pop
shll
mov
imul
add
sub
jl
loop
rep
jo
adc
mov
loop
orl
hlt
lret
out
mov
or
xor
sbb
jbe
das
add
gs
fnsave
hlt
mov
outsl
push
fwait
push
loopne
add
jns
in
jno
xchg
cli
adc
out
jo
or
jnp
xchg
or
mov
pop
insl
lcall
ss
mov
insl
repz
add
daa
pop
xlat
ja
add
fistpll
sub
and
ficoml
pop
push
add
aaa
ds
addr16
mov
or
lods
pop
sbb
addb
addr16
loope
in
or
push
adc
xor
scas
aas
aas
dec
push
cli
mov
add
xor
mov
adc
ss
mov
mov
ret
loope
or
movb
sahf
inc
add
out
nop
pop
push
lock
int
mov
xchg
pop
shll
hlt
push
sbb
jbe
int3
push
xor
in
inc
add
adc
push
pop
sbb
test
hlt
ficomps
mov
or
addr16
push
imul
inc
dec
outsl
nop
mov
or
xchg
cmp
cmp
jge
clc
nop
outsb
jg
ret
mov
add
push
mov
pop
dec
mov
fs
add
sti
sbb
imul
jle
pop
out
sub
sahf
mov
ljmp
pop
jo
mov
int3
sub
js
add
icebp
adc
in
inc
add
add
mov
jecxz
add
icebp
pusha
add
aaa
mov
lods
ds
sub
cmp
sahf
push
and
xchg
dec
rolb
cmp
cli
shl
mov
mov
xchg
aad
inc
loopne
cwtl
ret
rolb
ret
dec
sub
xchg
les
lret
mov
insb
push
mov
mov
mov
mov
ljmp
or
cmc
pop
cwtl
xor
sbb
inc
add
clc
in
ficomps
jmp
iret
inc
movsl
jb
add
in
add
icebp
aad
cmp
or
push
sub
ret
out
repnz
mov
pop
ss
ret
sbb
in
xchg
cwtl
scas
mov
adc
leave
aad
push
push
mov
push
imul
pop
xchg
sub
push
cmp
add
stc
adc
les
aas
or
add
mov
cmp
addb
add
pushf
dec
test
mov
xor
inc
enter
loope
mov
mov
mov
xchg
mov
or
inc
add
and
lcall
pushf
lahf
add
das
inc
fdiv
fimull
es
or
js
scas
mov
adc
add
pop
call
jp
adc
add
mov
xor
fcmovne
test
push
gs
pop
hlt
xor
push
repz
sub
xor
movb
iret
incl
and
jo
dec
fisubl
mov
inc
cltd
sbb
addb
stos
jle
in
mov
sbb
jge
rolb
add
or
lea
cmp
add
test
add
lret
xor
scas
loop
mov
mov
icebp
outsl
out
inc
ja
addb
add
pop
and
movlps
int
pop
mov
add
out
addb
icebp
mov
icebp
xchg
pop
clc
or
je
es
sbb
mov
xor
fidivs
das
pop
or
push
add
int3
gs
cltd
pop
ljmp
mov
inc
add
movsb
cmc
jmp
repz
pop
add
iret
std
mov
icebp
gs
fwait
push
aad
fimull
jo
cs
stc
ret
push
pop
lahf
cwtl
and
gs
mov
mov
inc
sbb
or
cmp
pop
enter
aas
lahf
outsb
lret
fldcw
pop
jl
inc
add
cwtl
sub
jecxz
push
jmp
xchg
push
add
scas
dec
and
ss
sub
xor
push
pusha
add
add
mov
push
stc
inc
fidivrs
je
inc
add
outsb
sbb
iret
imul
push
sub
clc
and
roll
mov
lods
and
out
sbb
jb
xchg
call
jecxz
fcomi
cmp
ss
cmc
in
push
rcll
cld
repz
xor
cmp
pop
mov
dec
movb
jg,pn
stos
cltd
push
mov
rorl
add
adc
enter
rolb
and
add
out
cmp
insl
jle
mov
add
add
mov
icebp
ficoms
mov
test
in
pop
or
fwait
sbb
jle
fwait
popa
incb
inc
push
xchg
test
jl
adc
push
pop
xchg
dec
lods
dec
pop
push
in
out
shlb
add
add
push
jge
mov
xor
gs
pop
movsb
and
mov
jae
sub
std
fisubrs
sub
jl
add
cmc
fsubrs
adc
stc
lahf
movsb
and
stc
jo
movb
adc
add
hlt
hlt
sarb
outsb
test
out
adc
les
das
ss
ljmp
ds
ss
movb
xchg
adc
sub
inc
pop
cltd
jo
push
dec
xor
or
es
out
adc
add
test
jo
xchg
cmp
ja
adc
pop
dec
fwait
cmp
push
xchg
popa
mov
outsl
das
and
movb
aaa
popa
jbe
cmp
push
aas
xchg
lahf
sbb
jo
addr16
add
add
adc
jmp
ret
fbld
jg
inc
add
add
repz
inc
lock
bound
lret
movb
int3
push
add
movsl
cmp
pop
pop
ljmp
mov
jnp
pop
daa
into
and
push
sub
add
jnp
cmpsl
mov
ret
cmp
and
mov
call
push
dec
not
pop
adc
lret
jmp
dec
es
xchg
in
inc
add
pop
sub
add
rolb
xchg
pop
mov
jbe
sub
jb
add
clc
notb
jmp
out
loop
add
sahf
cltd
pop
xchg
jne
mov
js
push
stos
jg
jg
push
dec
jns
mov
popf
imul
add
out
add
or
sbb
jge
add
jns
cmp
lods
jle
mov
cmp
add
aad
add
xchg
cs
cmp
mov
mov
rcrb
ret
icebp
lret
in
lret
cltd
mov
addb
add
rorb
lcall
pop
psadbw
mov
stc
aam
fsubr
dec
add
aas
xor
mov
addb
popa
loopne
inc
into
cld
push
mov
or
sbb
clc
xor
mov
pop
jae
mov
add
xchg
pop
sub
sub
aaa
lea
sub
scas
sbb
fmuls
jbe
push
cmpsb
sbb
add
ret
test
add
ds
or
lcall
mov
fsubrl
fildll
add
data16
xchg
cmpsl
ret
jb
dec
jge
movsb
stc
negb
pop
lret
pop
testl
and
jbe
jle
or
add
out
je
nop
and
loope
in
loop
xlat
push
inc
add
addb
test
das
jnp
cmc
add
sub
cwtl
dec
inc
adc
insl
fistpll
stos
xchg
fwait
sbb
xor
mov
sub
cmp
and
addr16
sbb
fadds
jno
xor
mov
cmpsb
fstps
pop
shr
or
adc
push
xor
in
psubw
add
mov
push
loopne
xchg
lcall
xlat
fstps
xchg
xchg
mov
cmp
sbb
add
xor
aad
out
sahf
out
jne
leave
and
leave
lods
adc
fistps
add
lods
icebp
das
fchs
mov
imul
adc
or
mov
jns
pop
sahf
mov
fnsave
pusha
add
and
sahf
lcall
adc
add
or
lret
add
stc
or
adc
dec
movsb
movb
dec
inc
add
pop
add
jp
dec
push
mov
cmp
aaa
mov
sbb
mov
icebp
push
inc
add
rolw
movsl
cltd
add
aaa
cli
loop
add
push
in
aaa
mov
ret
je
add
add
push
cltd
rolb
and
adc
xchg
sahf
adc
xor
fst
pop
js
adc
dec
pop
adc
and
push
jmp
aaa
mov
je
xchg
int
addr16
adc
notl
jae
scas
popf
or
xchg
outsb
js
dec
ljmp
and
insl
ja
jecxz
sbb
std
xchg
ret
iret
xor
repnz
jmp
stos
and
fnstsw
cld
pop
mov
add
scas
inc
add
mov
aam
cwtl
jne
cmp
outsl
sbb
rol
push
popf
push
pop
add
pop
or
pop
movsb
inc
add
or
add
adc
arpl
in
xor
pop
pop
sbb
fucomi
loop
adc
stos
or
add
jb
clc
in
shll
call
jge
inc
movsl
inc
dec
adc
lods
bound
aam
inc
add
popf
jno
xor
jns
pusha
add
imul
xchg
mov
mov
fldl
add
add
and
xor
mov
mov
add
popf
sub
imul
add
cmp
and
jne
and
lret
dec
xor
sarl
add
xor
lahf
add
cli
pusha
add
test
cmp
enter
or
mov
pop
mov
out
into
pop
or
add
add
fisttps
mov
add
rolb
jae
jl
pop
mov
jmp
aam
jb
mov
cmp
dec
push
mov
pushf
fmuls
fwait
cli
jmp
es
fsub
imul
mov
inc
xor
shlb
add
int
ss
mov
xchg
fs
cmp
sbb
loopne
rolb
out
sti
jge
test
movsl
mov
add
or
imul
adc
js
xchg
icebp
rolb
add
mov
dec
or
rcll
add
sbb
cmp
pop
mov
or
cld
fildll
pop
je
adc
xor
jg
popa
adc
or
bound
dec
mov
sbb
inc
inc
add
addb
sbb
mov
cltd
xor
add
out
adc
jo
shlb
outsb
jo
js
test
add
sbb
mov
in
call
roll
sarb
mov
inc
sbb
popf
cmp
jno
or
sbb
gs
push
shll
fisubrs
pop
cwtl
push
push
jecxz
pop
mov
loop
aad
fldcw
stc
sbb
add
add
xchg
sbb
insl
jo
out
push
sub
mov
sub
jge
add
push
jl
xchg
push
inc
adc
add
lcall
jecxz
push
add
in
std
pop
mov
pop
lods
add
out
cld
push
sbb
mov
sbb
ret
push
jge
mov
ljmp
outsl
pop
mov
mov
xlat
jle
movl
lret
add
daa
xchg
mov
addb
pop
in
add
push
aas
in
stc
lahf
adc
dec
jmp
pop
sahf
les
cli
lds
pop
scas
mov
out
in
or
cmp
add
repnz
push
dec
stos
out
xchg
fidivs
pop
popa
cmp
testl
push
testb
lcall
inc
add
sarb
jne
lds
repnz
add
xor
ss
arpl
scas
movb
adc
mov
cld
imul
in
call
adc
std
or
pusha
add
clc
vdivpd
xchg
lret
sti
inc
add
xchg
push
mov
aad
mov
add
xchg
imul
mov
pop
lcall
adc
ss
add
out
sub
jl
cld
hlt
jo
xlat
xchg
push
insl
imul
jo
add
cmp
push
ljmp
jb
out
jle
test
mov
lea
jbe
dec
cmc
loop
movsb
das
mov
jmp
pop
test
mov
and
enter
dec
cmp
cltd
pusha
add
loope
xor
xchg
aam
imul
sub
pop
pop
cmp
xchg
cmpsl
imull
add
leave
std
add
loope
inc
push
sub
jg
dec
fcmovbe
cmp
data16
mov
dec
flds
add
cmp
xor
jmp
scas
ds
mov
pop
jae
add
pop
mov
lock
mov
imul
adc
and
sbb
inc
add
stos
xchg
mov
pop
hlt
adc
pop
mov
add
sub
movsb
int
dec
sub
inc
add
add
cmp
inc
add
insb
mov
and
lea
mov
bound
dec
inc
pop
and
xchg
mov
add
mov
movsl
sarb
insl
inc
outsl
pop
sar
mov
insb
push
roll
push
ja
or
divb
scas
push
pusha
add
pushf
inc
add
clc
cld
sbb
lds
and
fnsave
add
loope
in
roll
fdivs
addb
and
lock
inc
add
sbb
pop
sub
and
out
ret
pushf
add
add
insl
cltd
pop
push
add
bound
mov
and
pop
mov
push
mov
outsb
cli
pop
testl
xor
push
push
in
ja
mov
xor
in
sbbl
dec
dec
into
jnp
loopne,pt
call
ja
inc
add
add
movsl
addb
adcl
mov
and
ss
add
popf
sub
movb
rolb
aaa
fmull
mov
in
inc
dec
and
mov
addl
jo
add
mov
cwtl
jnp
push
add
insl
out
or
push
ja
in
inc
add
push
out
mov
and
jmp
icebp
loop
add
add
mov
xchg
jecxz
pop
jb
jle
fmul
or
ret
movb
andl
lea
stos
fists
jno
rolb
sub
jnp
adc
sbb
pop
xchg
insl
fucomip
repnz
loopne
pop
stos
sub
xchg
repnz
pop
lods
or
sbb
inc
add
jecxz
sub
xchg
pop
popa
in
scas
lret
jb
mov
dec
out
insl
xchg
ficoms
cmp
add
sbb
rol
stc
mov
jge
xlat
adc
add
test
sbb
push
fiadds
insb
inc
cmp
dec
inc
outsb
add
in
push
push
and
jb
add
add
add
lcall
add
repz
add
outsl
stc
std
jmp
add
and
push
add
daa
enter
dec
pop
and
lods
push
push
push
fildll
shll
mov
mov
inc
shll
ficoms
and
fsubl
xchg
repnz
dec
dec
dec
cmp
popa
pushf
or
movsl
aad
sbb
icebp
cltd
jo
shr
mov
xchg
jle
ss
enter
mov
mov
mov
add
mov
dec
es
mov
popa
xchg
and
add
out
mov
call
out
out
add
jo
pop
xchg
dec
mov
scas
out
xchg
loop
dec
out
insb
jmp
or
push
bnd
push
inc
add
vmread
jle
inc
aad
iret
loopne
and
add
ja
lock
scas
cmpsb
mov
jns
push
movb
ja
xor
sub
nop
shl
cmpsb
sub
aad
xchg
dec
into
push
cmp
cmp
push
movb
addr16
add
mov
push
inc
sbb
rolb
std
call
dec
out
pushf
or
icebp
push
mov
lods
cmp
gs
in
fs
lretw
sub
test
cmp
mov
aas
adc
add
cmp
add
add
push
add
mov
inc
lods
pxor
stos
ss
add
test
jle
push
leave
mov
pop
movsl
pop
mov
pop
test
sub
sbb
in
addr16
push
dec
push
add
inc
add
mov
jecxz
incl
add
add
add
jne
and
cmp
aad
add
movsl
push
into
dec
mov
dec
cs
pop
data16
mov
add
movsl
xor
inc
add
adc
add
sub
cld
cmp
push
xor
and
xor
ret
mul
std
push
mov
wbinvd
pushf
jns
add
jmp
in
rolb
adc
add
push
lods
cmp
lret
rolb
ds
sbb
mov
insb
push
xchg
inc
add
and
dec
lock
cwtl
mov
shlb
in
ljmp
and
add
push
dec
imul
popa
jo
add
lret
xchg
inc
add
pushf
mov
and
sbb
cmpsl
and
xlat
addb
sbb
add
fs
and
scas
push
enter
mov
sbb
lea
arpl
or
xor
add
adc
fs
leave
iret
dec
test
or
jge
xchg
das
mov
mov
add
test
rolb
adc
pop
and
das
arpl
add
int3
mov
push
gs
xchg
cwtl
dec
into
push
bound
dec
or
or
les
xor
rol
repz
lods
ljmp
daa
xchg
sub
mov
mov
cmp
xchg
dec
out
sahf
pop
mov
add
pop
mov
mov
lcall
xchg
cmpsb
jecxz
or
mov
sbb
or
sbb
jne
lods
mov
lret
fadd
add
xor
mov
mov
movsl
adc
add
or
aam
outsb
insl
arpl
mov
stc
mov
pop
sub
push
inc
clc
cmovnp
or
add
sbb
sti
push
and
xor
mov
in
add
pmaxub
xchg
adc
arpl
cmpsl
mov
sub
cli
add
pusha
add
push
adc
adc
dec
addb
bound
aas
inc
add
add
push
out
fisubl
add
xor
xor
push
sub
je
xchg
xchg
mov
aas
mov
das
divl
addb
sahf
stc
cmp
ret
dec
jae,pt
jne
mov
jae
mov
cmp
add
dec
stos
mov
mov
add
lret
inc
add
add
sbb
sbb
inc
add
add
sahf
xchg
shll
cmpl
pop
lret
mov
xchg
dec
jl
sbb
mov
inc
add
push
push
push
or
or
or
loop
xchg
outsl
push
add
fidivs
ret
jle
mov
sbb
sahf
pop
jecxz
mov
sub
add
pushf
mov
jae
jns,pn
jno
mov
movsb
ret
mov
push
mov
dec
addb
cmp
or
movb
xchg
mov
dec
or
pop
jne
aad
je
in
push
add
jbe
ljmp
sbb
add
or
mov
adc
loopne
mov
mov
cld
xor
mov
aam
mov
xor
adc
mov
or
or
xor
pop
decb
pop
xor
addb
add
movb
mov
or
push
push
xor
popf
xchg
xchg
xchg
lock
mov
dec
pop
push
popa
pop
jae
pop
test
add
adc
adc
add
dec
clc
daa
rol
popa
add
stos
pop
or
dec
inc
pop
iret
xchg
les
xchg
inc
add
add
push
add
adc
bound
dec
shlb
jo
xorl
adc
push
loope
sbb
jb
inc
pop
andl
jno
in
iret
mov
jns
mov
popa
ja
scas
addr16
xor
inc
add
cmc
mov
pop
sub
add
sub
lods
addb
adc
add
add
outsl
call
mov
sub
pop
dec
jns
mov
and
cltd
cwtl
cmc
cmp
out
test
mov
mov
mov
cmpsb
test
add
push
out
add
fmuls
adc
mov
push
sbb
call
adc
enter
mov
add
jb
cmp
cmp
or
mov
add
scas
mov
add
shll
imul
jecxz
add
cmp
repnz
add
insl
dec
or
mov
movb
add
push
fiadds
add
jae
pop
imul
fs
jno
out
addb
dec
add
leave
inc
out
dec
arpl
add
ficoml
mov
fmuls
mov
jbe
hlt
or
imul
push
clc
mov
xorl
addb
mov
inc
jnp,pt
pop
mov
push
ja
lea
pushf
sub
mulb
gs
bound
adc
add
enter
fisubl
aam
xchg
in
pop
cmpsl
xlat
xorl
push
sub
jns
add
push
gs
pop
add
jp
jge
ret
cmpsb
iret
mov
lret
test
enter
and
pop
sar
clc
mov
je
add
add
add
adcl
icebp
cld
cmp
and
iret
mov
xlat
or
xlat
mov
sbb
add
js
dec
int
ja
in
pop
xlat
jecxz
movsb
shll
jne
movsb
jl
push
ja
jne
adc
outsl
cmpsb
pop
cmp
scas
inc
push
into
adc
mov
or
gs
arpl
push
dec
lahf
adc
mov
push
js
jge,pt
add
or
mov
jb
and
movb
jmp
add
push
outsl
lods
mov
inc
mov
mov
mov
adc
in
mov
je
hlt
mov
decb
cmp
divl
enter
jge
jge
addb
xor
mov
inc
adc
mov
xchg
sub
cmpl
and
sub
sbb
xlat
inc
frstor
add
add
pushf
inc
add
addr16
cmp
pop
mov
es
mov
ljmp
mov
jo
loopne
stos
out
mov
in
outsb
jns
in
lahf
dec
or
adc
sbb
mov
xchg
cltd
sbb
stos
jl
mov
xchg
sbb
dec
inc
add
mov
jnp
add
movsb
mov
push
les
add
arpl
sahf
adc
in
out
push
xchg
cmp
ds
pop
stc
adc
and
rorl
push
fnstsw
sub
add
and
adc
adc
fisubrl
inc
add
mov
test
dec
cld
out
notb
inc
add
pop
sub
dec
xor
jecxz
nop
fwait
insl
sbb
pop
jmp
jns
pop
and
pop
jl
xchg
xchg
xor
sub
movsb
push
xor
jo
jo
addb
add
sub
leave
mov
insl
or
add
mov
rcrb
inc
add
add
in
cmp
mov
add
addr16
push
push
and
lret
movsb
arpl
mov
cmp
shl
out
out
lods
out
cmp
cmp
xor
pop
or
sub
and
sub
in
adc
je
add
jns
add
xor
ja
ss
xchg
inc
add
push
fcompl
jl
dec
lret
mov
xor
and
xchg
pavgw
rcrb
shrl
add
call
mov
test
aad
scas
pushf
fists
pop
bound
loope
lds
inc
lcall
incb
insl
inc
add
lds
out
jl
jb
pop
mov
cmpl
fwait
xchg
push
popa
dec
or
cmp
into
pop
shlb
xor
lea
rcr
fnstcw
cmp
je
insl
adc
fmull
inc
xor
dec
pusha
add
pop
int
jle
pop
inc
add
dec
out
and
push
pushf
aas
dec
pop
dec
push
mov
pop
les
bound
mov
mov
inc
add
je
adc
dec
jne
push
xchg
cmp
push
add
mov
ja
sbb
aas
insb
loope
add
jb
add
sbbl
mov
xor
cmp
addb
mov
loop
pop
sbb
dec
jmp
xchg
xor
pop
mov
test
dec
sub
aam
pusha
add
sahf
pushf
ss
mulb
lods
addb
iret
repnz
inc
aas
stos
mov
jno
mov
mov
adc
mov
rolb
add
push
divl
push
inc
cli
cmpsb
push
add
and
mov
sahf
or
mov
jno
jnp
push
dec
int
shrl
or
movsb
daa
xchg
clc
mov
data16
popf
mov
pop
movsb
sarl
inc
mov
push
and
jp
add
xchg
jecxz
int3
loope
decl
push
push
xchg
adc
xchg
or
jae
in
pop
fcom
mov
addb
pushf
mov
add
xor
iret
push
repz
add
sub
dec
xor
or
mov
cmp
xor
xor
test
ret
mov
add
add
cld
incl
add
push
lret
test
adc
movsl
push
in
ja
mov
cld
shrl
pusha
add
lods
ret
jns
mov
test
repz
jge
ret
pop
sub
mov
add
dec
scas
mov
shll
cmp
fucom
imul
das
ret
stos
adc
cmc
lret
sbb
sahf
in
cmp
outsl
call
push
add
mov
add
pop
pop
xchg
mov
mov
jl
add
xchg
jno
fdivr
inc
add
sbb
cmp
lods
mov
cmpsl
mov
lods
dec
pop
xchg
rorl
stc
imul
inc
adc
sbb
ja
sub
inc
mov
mov
rcrb
jecxz
das
lcall
movb
dec
fistpl
sub
lods
cs
add
xchg
mov
in
xor
pcmpeqb
and
jl
jle
dec
movb
stc
xchg
add
les
ss
xchg
stos
fcoms
popf
dec
sbb
fcoml
ja
or
cmp
sbb
shll
je
mov
outsb
or
arpl
test
pop
ret
inc
add
adc
popa
jp
insb
jnp
pushl
inc
add
in
mov
mov
adc
or
push
test
push
mov
stos
dec
add
decl
xor
mov
mov
pop
push
nop
mov
nop
mulb
jno
add
jbe
inc
mov
push
pop
mov
xchg
dec
stos
pop
ss
xor
mov
cmc
add
jg
repnz
mov
inc
cld
dec
fdivl
mov
inc
or
and
cwtl
and
mov
add
repz
pop
ret
mov
lds
mov
movb
cmpl
popf
ja
xchg
loopne
out
pop
lods
jb
inc
add
jp
xchg
or
stos
fnstcw
pop
pop
lahf
repz
dec
adc
xchg
jne
lea
xchg
clc
jge
lea
dec
cmp
leave
xor
nop
test
cmc
jbe
pop
pop
ds
add
push
xchg
adc
addb
repnz
cwtl
sub
repz
inc
pop
jmp
xchg
inc
add
leave
pop
daa
push
mov
ss
push
add
add
add
adc
xor
sub
dec
jbe
out
mov
dec
scas
mov
jo
jnp
push
hlt
mov
mov
add
push
xchg
xchg
shrl
jb
popa
push
xchg
pushf
dec
cmc
jb
bound
xchg
les
icebp
cmp
sub
ss
push
movsl
mov
in
push
mov
test
xchg
xchg
outsb
enter
pop
cmp
push
cmpsl
xor
addb
sti
xchg
test
dec
mov
sbb
mov
in
stos
daa
jno
pop
pop
test
icebp
jns
jne
or
sub
or
add
push
repnz
mov
std
cmpsl
inc
add
inc
test
frstor
sbb
dec
pop
test
rcll
xlat
and
out
cwtl
mov
cwtl
test
repz
pop
daa
lcall
iret
xchg
cmp
loop
sti
fs
ja
mov
add
or
loop
add
add
add
cmp
stc
jno
addb
scas
fstps
leave
add
pop
mov
mov
pop
sub
ja
sub
sub
rolb
data16
cmp
stos
pop
je
and
jns
add
add
int3
inc
scas
pop
mov
lods
insl
push
mov
mov
mov
mov
repz
jp
outsl
js
sbb
std
mov
clc
push
add
inc
into
cmpsb
push
cli
cli
into
fistpl
xlat
push
xor
repnz
xchg
nopl
push
push
add
pop
out
inc
add
shrl
movsl
jnp
jns
mov
fmuls
sub
lds
int3
icebp
addb
sbb
rclb
mov
dec
gs
pop
mov
or
add
sub
sahf
mov
mov
pop
jecxz
sti
pushf
mov
movsb
int
or
stos
aam
ss
or
ss
cwtl
jnp
jmp
xchg
sbb
sti
out
imul
imulb
fwait
sbb
push
mov
dec
stc
inc
scas
inc
add
or
es
jge
add
jo
push
imulb
push
repz
push
adc
cmp
scas
fadds
or
into
mov
dec
ret
xchg
pop
mov
mov
push
in
jge
jb
add
sub
in
je
inc
mulb
int
loop
jae
ret
insl
outsl
xchg
pop
jnp,pt
push
push
adcl
push
imul
push
xor
decl
jl
inc
adc
mov
add
bound
int
jne
cmp
mov
bound
sub
push
or
jp
xchg
fimuls
icebp
aas
mov
inc
add
push
sbb
add
shll
sub
and
jmp
and
and
mov
inc
add
xchg
ss
mov
jbe
xchg
cmp
adc
push
add
cltd
rolb
rolb
adc
insb
addb
into
dec
sar
cmp
xchg
sub
pop
jne
mov
or
jno
cmp
add
pop
xlat
mov
loop
ja
mov
cmp
insb
loopne
adc
pop
and
inc
add
ja
mov
sub
mov
mov
xchg
xchg
pop
mov
gs
loop
nop
mov
adc
loope
iret
hlt
inc
add
add
mov
xor
add
rolb
xor
mov
push
mov
ret
pop
cmpsb
ss
pusha
add
hlt
leave
mov
test
jbe
adc
xchg
lea
push
jmp
lea
xchg
pushf
out
mov
pop
mov
pusha
add
repnz
lods
into
xchg
inc
push
jmp
das
shrl
repz
hlt
inc
add
and
push
mov
mov
aad
mov
fdivrs
xor
adc
in
jae
jmp
sub
mov
psraw
add
jns
popf
xor
inc
fimuls
mov
add
add
daa
out
ss
adc
inc
arpl
int3
fcoms
cmp
push
inc
mov
jl
add
add
add
xchg
fistpll
jo
mov
lret
dec
dec
out
push
push
ja
cmpsl
inc
add
or
mov
jl
xchg
jbe
pusha
add
push
repz
add
pop
ret
adc
lcall
pop
xchg
mov
les
or
push
rolb
rcl
sbb
cs
in
jl
sbb
push
xor
add
imul
jbe
add
pusha
add
ja
jnp
jp
cmp
sbb
stos
es
dec
mov
outsb
adc
mov
fcmovb
add
and
xor
jecxz
cmp
movb
sub
or
in
push
outsb
sbb
cmp
call
dec
lock
cmpsb
xchg
sbb
call
mov
or
cmp
xchg
ljmp
iret
add
icebp
dec
push
add
and
mov
push
jecxz
popf
or
loope
dec
cli
mov
jae,pt
add
sbb
mov
xor
sbb
xchg
js
dec
xor
add
mov
cmpsl
inc
add
negb
arpl
add
cmpsb
lea
add
mov
ja
dec
js
sub
orl
mov
stos
adc
or
test
dec
jb
daa
push
out
push
popa
add
jbe
jo
insl
repnz
frstor
ljmp
and
lcall
pop
fisttpll
inc
add
cmp
stc
iret
mov
dec
adc
pop
mov
dec
xor
ficoml
pop
mov
imul
mov
push
or
add
lret
pop
or
aam
std
xchg
xor
fs
mov
mov
add
nop
dec
mov
test
adc
enter
mov
mov
cmpl
add
arpl
push
cld
mov
and
sub
sub
bound
lahf
dec
rolb
cs
rolb
add
call
mov
prefetch
or
fwait
adc
mov
or
push
sahf
dec
mov
dec
insl
push
cs
rclb
fsubl
addr16
add
xchg
fnstsw
das
daa
adc
pop
jb
addl
and
jmp
in
or
add
loopne
lea
add
mov
add
adc
xor
shrl
fimuls
outsl
test
mov
stos
and
cwtl
xor
push
popa
adc
aam
in
call
push
cli
pop
inc
add
mov
popf
pushf
syscall
dec
lret
fisubrl
xchg
ds
add
gs
fidivrs
mov
and
push
add
std
pop
inc
mov
xor
iret
mov
sahf
add
movsl
mov
xor
lea
or
std
hlt
pop
xor
add
sahf
jns
mov
dec
jmp
das
jp
jae
imull
sqrtps
cmp
ja
pop
in
push
repnz
out
mov
push
daa
icebp
insb
mov
cmpsl
out
mov
add
test
insb
test
push
adc
pop
push
shlb
mov
mov
ss
add
popa
mov
add
mov
subl
sub
popa
push
jno
jl
vmovddup
pop
addl
imulb
movd
add
and
and
rdmsr
movsb
jecxz
fcoms
and
xor
dec
imul
stos
mov
lahf
mov
popa
mov
mov
sti
and
push
shl
addb
iret
xor
les
add
mov
fstpl
jbe
lea
je
mov
outsb
or
or
cmpsb
adc
sbb
pop
xor
push
add
loopne
jp
push
imulb
lock
scas
jae
add
lds
test
mov
mov
stc
pop
push
pop
push
push
cmp
push
rorl
and
sti
inc
jns
adc
aam
add
insl
pop
shl
fistl
cmpsl
stos
lahf
xchg
dec
add
rolb
mov
xchg
push
lea
cmp
sub
dec
push
mov
mov
add
arpl
jecxz
imul
rol
push
fsubrl
out
jge
sub
movsb
lret
jp
mov
jmp
add
out
push
cmp
fldl
ret
fistpll
add
push
loop
or
in
sahf
js
lret
and
imul
test
movsl
inc
inc
or
imul
mov
adc
insb
lahf
test
cmp
popl
sbb
push
dec
lods
or
pusha
add
add
sub
add
fcoms
lahf
mov
sti
cmpsl
xor
or
add
inc
add
adc
pop
in
add
das
fs
sub
inc
add
clc
pop
add
test
pusha
add
xor
mov
add
or
jnp
jns
sbb
add
sub
xchg
sub
dec
xor
jmp
jle
or
ret
pushf
ret
cmp
xor
jno
push
pop
inc
jle
into
mov
add
rolb
mov
es
pop
add
dec
aas
push
dec
lods
in
aaa
dec
mov
cld
sbb
repz
xchg
push
adc
test
push
push
adc
push
cwtl
cmp
inc
add
sbb
js
stc
jae
and
lds
adc
mulb
clc
pop
sbb
xlat
movsb
cltd
aad
xchg
icebp
xchg
jne
add
fcmovne
arpl
xchg
cmc
in
push
roll
pop
mov
jge
jno
insb
outsb
jbe
sub
mov
cmp
xchg
sarl
shrl
xchg
xchg
pop
loopne
mov
jns
xor
imul
imul
cmp
dec
xchg
test
scas
pop
adc
mov
aam
or
inc
add
or
clc
lret
aas
mov
dec
or
imul
xor
add
fwait
stos
mov
push
ret
mov
or
cmpsb
mov
in
faddp
adc
add
dec
mov
add
mov
lock
jb
dec
cmp
push
push
add
adc
add
push
mov
js
fldt
xor
inc
add
data16
sbb
rolb
and
repz
cmpsl
xchg
mov
add
inc
add
mov
mov
mov
leave
fimuls
jnp
int
add
mov
pop
fisttpll
fstl
rcrl
pusha
add
mov
mov
enter
mov
jae
add
cli
and
and
clc
adc
push
xchg
lea
add
loop
xor
adc
add
lods
xchg
cmp
cmp
dec
xchg
ret
cmp
push
insb
ja
out
rclb
jae
insb
int
dec
xchg
leave
add
xchg
adc
jb
sbb
push
int
xchg
xor
add
or
pop
push
dec
xchg
mov
or
call
pop
pop
lret
add
cmp
add
jbe
or
out
lahf
scas
daa
push
push
mov
adc
add
inc
add
subl
mov
jbe
push
jg
rorl
add
mov
cld
cltd
inc
add
sub
loope
add
inc
add
cld
mov
out
shll
inc
add
rcrb
cmpsl
stos
in
adc
jns
out
call
enter
shr
ffreep
insl
and
andl
stos
xchg
or
cwtl
xlat
cmp
cld
xor
mov
add
jae
sbb
and
xchg
lahf
add
repz
jp
dec
cmpsb
jne
add
imul
and
pinsrw
daa
add
inc
add
jmp
xor
cltd
jecxz
push
loop
movsb
add
cmp
rcrb
imul
xchg
loop
shll
add
into
outsl
testl
jnp
jge
shll
sar
cmp
int
loop
adc
ds
pop
outsl
pop
dec
pop
mov
loop
jmp
bound
fmulp
repnz
cmp
mov
push
xchg
loopne
scas
mov
and
loope
loopne
ds
rolb
inc
in
add
insl
ljmp
out
pop
sbb
or
imul
shl
lods
lahf
cmpsb
xchg
int3
scas
and
aaa
rcl
mov
loope
mov
add
push
fldenv
add
xor
jp,pt
xor
scas
sarb
loopne
push
ret
cmp
jae
ror
fcoml
mov
fcomps
inc
bound
jmp
push
pop
imul
aad
jge
imul
push
sbb
dec
stc
enter
mov
or
sub
or
push
clc
cltd
stc
mov
push
sahf
popa
xor
add
xor
loopne
xchg
in
add
sbb
lret
loop
push
push
xor
nop
push
pop
imul
pop
or
fcoml
sbb
out
mov
add
mov
mov
cmp
aad
popa
adc
push
fwait
shlb
dec
int
add
shll
outsb
icebp
icebp
or
jg
xor
add
mov
subl
cmpsb
sub
in
lods
mov
push
roll
jl
dec
out
in
dec
push
rcll
inc
add
xor
cmpsl
leave
cmp
xor
aaa
mov
pop
xchg
ss
scas
add
pusha
add
stos
mov
push
icebp
jns
mov
pop
mov
mov
mov
icebp
dec
cmp
sub
or
stc
in
test
mov
inc
add
or
mov
and
sub
clc
and
in
in
xchg
add
xchg
scas
add
test
jb
sbb
xchg
mov
add
dec
inc
add
fnsave
inc
mov
sub
je
jbe
scas
test
mov
pop
shl
lods
sub
add
mov
js
xor
cltd
negb
inc
gs
pop
cmp
add
xlat
xor
inc
add
cmpl
mov
iret
sub
xchg
popa
test
cmp
cmp
rcrb
repnz
shll
rcll
test
sarb
mov
xchg
and
addb
rcrl
xor
lcall
fwait
xlat
jne
pop
lock
and
sub
int3
pusha
add
ss
ja
push
pop
fisttpll
inc
dec
push
dec
inc
add
ret
dec
leave
cmp
repz
cmp
jl
inc
add
cs
cmp
mov
das
xchg
mov
iret
fidivrs
push
lock
mov
jbe
shl
mov
jmp
aad
push
jb
pop
cmpsl
push
cmp
xchg
and
adc
and
inc
add
movsl
addr16
fdivrl
mov
jns
mov
cmp
into
dec
cmp
cmp
outsl
mov
popf
std
pop
pop
mov
data16
loopne
jno
xchg
jb
sbb
mov
add
adc
pushf
adc
cs
rclb
dec
mov
inc
mov
pop
fdivl
add
and
outsl
xor
out
in
add
mov
xchg
inc
or
popa
mov
mov
dec
mov
fidivrs
inc
ds
popf
sarl
insb
out
repz
enter
and
pop
arpl
mov
or
ficompl
adc
out
add
jbe
call
adc
add
cmp
lret
cmc
fs
mov
add
mov
add
stos
mov
mov
fnstsw
pop
das
cmp
dec
loope
cld
dec
pop
movsb
and
js
ss
out
dec
adcl
push
int
inc
push
in
scas
arpl
mov
or
pop
in
idivl
mov
sub
aad
add
mov
or
loope
loope
jp
add
pop
aam
add
rcrb
loopne
sahf
popf
insb
out
inc
add
cmp
rolb
popa
out
sub
psubusw
jbe
mov
insb
mov
add
stos
cmp
add
push
pop
lods
mov
mov
mov
jbe
gs
add
xchg
out
lahf
hlt
scas
pop
cmp
mov
fdivr
insl
mov
mov
jge
xchg
jns
dec
sbb
add
aam
lock
jne
popf
cli
adc
xchg
xor
jg
lcall
xchg
fistl
add
push
mov
cmp
xchg
xorl
push
hlt
jnp
inc
jns
sbb
lret
mov
adc
out
push
popf
cli
push
inc
mov
in
pushf
mov
pop
fistpl
add
les
js
sub
inc
add
out
pop
mov
xor
repz
aaa
inc
add
lea
mov
rcrl
mov
fmul
pushf
aad
and
lods
les
out
jae
adc
add
jle
add
call
addb
add
outsl
idivl
pop
mov
addb
call
mov
xchg
fwait
mov
ret
daa
sti
cltd
in
add
jns
lods
adc
divb
mov
xor
xchg
push
add
push
mov
xchg
shrl
sar
test
arpl
lods
mov
inc
add
sbb
pop
dec
std
and
adc
fs
leave
jp
xlat
inc
dec
push
inc
adc
leave
jl
aam
aaa
inc
add
sahf
sub
lcall
jle
aam
jl
cmpsl
addb
add
add
pop
inc
pop
out
add
std
xor
pop
push
shl
push
lcall
cmp
xchg
dec
rcll
mov
mov
jnp
je
aam
dec
sahf
pop
cmpsl
faddl
cmp
fidivrs
jne
in
add
inc
add
mov
xchg
bound
inc
mov
nop
jns
mov
sub
bound
ljmp
jns
repnz
jne
add
fiaddl
add
push
sarb
add
mulb
dec
enter
outsb
aad
icebp
dec
push
movb
jno
add
ljmp
inc
add
insb
test
push
movsb
sub
ljmp
cwtl
or
or
xchg
dec
jo
sbb
imul
mov
cwtl
inc
add
bndstx
mov
ret
clc
dec
js
bound
pop
ret
push
scas
test
test
in
push
lods
mov
dec
or
lret
sub
adc
sub
negb
test
mov
add
dec
je
fstpl
sub
insl
es
mov
scas
fadd
add
popa
iret
lods
std
jg
add
fmul
dec
add
orl
daa
mov
cwtl
pusha
add
movb
jns
and
pop
test
es
mov
ficompl
mov
scas
or
push
jecxz
inc
add
jnp
add
imul
jle
mov
dec
mov
add
loop
add
pop
sti
in
adc
pop
aas
dec
pusha
add
movb
mov
sub
jmp
add
pop
leave
xor
cli
iret
and
xor
xchg
fadd
fistps
repz
cmpsb
or
xchg
push
lea
dec
sti
fists
repz
lods
xlat
cmp
les
popl
xchg
in
gs
aaa
or
insb
mov
aaa
aam
add
add
mov
xchg
and
and
lods
mov
push
xchg
fbstp
push
add
leave
lret
cmp
sbb
mov
sbb
fwait
sbb
sbb
movb
call
add
mov
adc
push
cltd
or
insl
xor
mov
fisttps
shrl
jb
add
mull
add
inc
add
sahf
mov
inc
add
add
cmpsl
aam
adc
enter
or
cli
aad
add
xchg
add
mov
lds
roll
mov
add
cmpsb
push
xchg
stos
xchg
sbb
jae
es
negb
add
or
rorb
outsb
movb
repnz
mov
xchg
push
or
pop
imul
sub
addb
test
les
or
lcall
lods
jbe
mov
add
dec
mov
repz
dec
jb
dec
pop
mov
add
outsl
jb
loope
repz
and
xchg
insl
test
push
cmpsl
fprem1
loopne
add
ds
andl
sbb
pop
mov
outsl
insb
ljmp
les
mov
into
test
mov
or
je
ja
push
sbb
jle
inc
add
dec
mov
or
lock
mov
int3
pop
lods
and
inc
scas
dec
mov
mov
dec
mov
pusha
add
xchg
inc
add
into
inc
add
inc
add
cmc
add
cltd
dec
push
imul
xchg
mov
add
lods
cmp
inc
add
xchg
dec
in
inc
add
sti
dec
push
adc
lret
push
enter
add
cmp
mov
xlat
movsb
sbb
xchg
cli
inc
add
daa
imul
mov
mov
or
sarl
dec
imul
cmc
cltd
lahf
or
xor
xor
sbb
dec
icebp
enter
push
cli
mov
int3
xor
pusha
add
jmp
mov
ret
push
cmpl
imul
ja
cmp
fnsave
adc
add
stc
push
fadds
lock
inc
jecxz
add
sbb
js
push
test
lahf
ret
popf
ja
test
sub
dec
jg
int3
addr16
cmpsl
pop
nop
loop
insl
xchg
adc
lods
pop
das
adc
mov
fcoms
in
mov
sub
cmp
push
or
and
insb
mov
dec
call
mov
pop
popa
lret
jb
out
mov
mov
aaa
jp
jle
inc
add
jmp
push
mov
sti
jae
add
and
cmpsb
pop
leave
jge
mov
add
mov
movsb
mov
or
test
loope
je
in
dec
jle
and
add
add
add
