je
in
dec
xor
mov
stos
inc
inc
inc
inc
cmp
pop
movsb
pop
icebp
pushl
add
daa
and
mov
xchg
pop
in
in
add
add
mov
daa
call
cmp
pop
test
add
daa
mov
cmp
pop
in
and
mov
add
add
mov
out
add
outsb
outsb
push
pop
das
jb
mov
dec
cmp
dec
insl
jo
mov
add
xor
cmp
cmp
add
pop
push
add
pop
cmp
sub
mov
add
add
lret
mov
negb
inc
cltd
inc
add
test
test
scas
pop
push
lock
sahf
xor
mov
stc
dec
testl
shl
sti
repz
xor
mov
roll
addb
loopne
mov
add
cltd
xchg
sbbl
mov
add
xchg
add
push
add
stos
sub
xchg
lds
add
mov
mov
mov
jmp
adc
mov
or
push
cs
scas
rcr
arpl
mov
das
jae
call
mov
std
push
sub
mov
mov
cmp
stos
and
jge
call
add
mov
push
add
inc
cltd
adc
jae
cmp
sub
cs
pop
stos
sbb
mov
loop
mov
or
in
and
mov
mov
aas
scas
add
daa
fsubs
cmp
add
test
jno
jl
test
push
lds
adc
add
add
pop
test
inc
jne
nop
add
test
add
add
sbb
add
or
ret
sbb
loop
mov
and
mov
nop
add
mov
and
add
mov
push
jbe
mov
add
andl
mov
mov
mov
and
xor
adcl
rolb
mov
fidivrl
rolb
mov
mov
add
push
add
mov
aas
sub
add
add
mov
mov
mov
jge
add
mov
add
add
fwait
je
add
jb
mov
add
mov
add
mov
idivb
add
push
push
add
pop
push
lahf
mov
jbe
jle
xor
mov
lock
cmp
add
add
add
std
xchg
movsl
and
mov
lret
mov
int
loopne
mov
mov
addb
fwait
or
fildl
add
jbe
add
adc
mov
push
xchg
adc
mov
in
inc
add
xchg
add
mov
mov
xor
mov
add
mov
add
add
stc
and
mov
lock
insl
aam
lock
mov
xor
mov
or
data16
add
ja
add
leave
push
jbe
inc
adc
mov
pop
xchg
push
cmp
aas
xchg
jmp
cmp
add
mov
add
addb
push
add
add
mov
es
loop
mov
sub
sbb
cmp
mov
loop
mov
push
or
add
add
sbb
add
mov
negb
sbb
add
cmp
jg
add
push
add
xchg
and
xor
mov
les
push
mov
push
mov
cmpsb
jno
xor
mov
add
icebp
icebp
add
mov
add
movzbl
xchg
loopne
mov
mov
jns
add
add
cmp
pop
int
loopne
mov
mov
jns
add
add
mov
add
mov
add
push
jbe
add
mov
add
mov
adc
mov
push
mov
ss
add
test
add
mov
mov
inc
cmp
out
add
add
loope
add
add
repz
xor
mov
add
arpl
cmp
add
das
xor
add
daa
adc
mov
xchg
xor
mov
add
or
pop
aas
mov
pcmpeqd
or
sub
ljmp
jae
cld
notb
aaa
mov
nop
add
inc
pmulhuw
sub
add
add
stc
int
inc
add
mov
rolb
mov
and
mov
mov
loope
imul
push
mov
lret
add
or
sbb
add
mov
inc
add
lods
xor
mov
sbb
dec
jmp
psubusb
inc
andl
and
icebp
pop
movsl
mov
mov
scas
or
pusha
add
fwait
das
out
sti
or
add
mov
pushl
in
jo
mov
stos
test
xchg
push
mov
xchg
scas
cmp
pop
sahf
add
push
lods
pop
sbb
cmp
jno
outsl
sti
pop
or
sub
mov
pop
fnstenv
mov
addb
mov
mov
mov
test
int3
jg
pop
add
in
aam
orl
mov
add
inc
insl
add
cmpsl
dec
into
js
dec
bound
mov
sub
daa
dec
scas
shrl
in
xlat
pop
xor
ja
add
inc
add
insl
dec
push
rcr
add
add
iret
clc
pop
cmc
xor
mov
inc
imulb
pop
mov
mov
mov
jmp
mov
fwait
adc
fdivp
cwtl
je
test
aas
cmp
mov
jns
xor
cltd
sub
pop
inc
add
out
jp
test
icebp
jne
clc
stos
and
mov
loop
mov
repnz
jecxz
add
xlat
mov
mov
mov
aaa
pop
repnz
cmp
xor
mov
mov
rol
mov
jne
cmpsb
mov
adc
add
mov
int
ds
int
fisubrs
add
mov
aaa
cld
sub
mov
lock
mov
push
add
push
cmp
mov
add
mov
adc
push
jnp
gs
cmp
sbb
nop
add
jb
mov
add
outsl
in
or
xchg
pusha
add
mov
mov
mov
add
pop
ss
sub
and
mov
cmp
mov
jbe
mov
test
fiaddl
fidivs
mov
add
movsl
cli
jno
mov
mov
ss
add
xor
add
insl
cltd
fidivrl
xchg
rolb
mov
add
add
iret
sbb
mov
mov
add
jbe
sub
repz
filds
add
enter
push
dec
mov
add
add
sbb
scas
add
or
or
add
out
enter
sub
out
cli
testb
add
mov
lods
into
fs
mov
add
mov
pusha
add
mov
mov
pusha
add
out
aaa
gs
pop
mov
pop
jae
sti
test
lcall
pop
xor
test
ljmp
add
movsl
ss
in
cmp
inc
dec
dec
ljmp
dec
mov
mov
cmp
inc
mov
out
fldlg2
adc
pop
out
add
xor
sar
mov
jne
and
xor
mov
xchg
xchg
xchg
icebp
and
mov
xchg
adc
cmp
fsubrl
and
cmp
xchg
inc
xlat
jns
cmp
mov
in
xchg
mov
sbb
mov
add
sbb
cli
cwtl
imul
add
jmp
daa
push
ss
mov
mov
cmpsb
mov
sbb
and
or
out
dec
leave
inc
push
jo
mov
mov
leave
incb
lea
add
cmp
push
ss
add
movsb
test
push
test
cltd
out
daa
lock
and
imul
inc
jne
sbb
test
add
lret
sub
mov
or
add
add
pusha
add
inc
jmp
pop
jg
add
add
ljmp
mov
cmpl
fs
mov
add
and
mov
cmp
insb
jae
xchg
add
and
mov
icebp
xchg
mov
cmp
fildll
adc
aaa
inc
mov
jle
dec
add
mov
add
mov
ljmp
shr
arpl
daa
sbb
bswap
cmpsl
sub
stc
lea
mov
add
push
push
into
shrl
scas
push
daa
lock
pop
ljmp
fcoml
repnz
std
addb
xchg
add
or
pop
in
lods
push
or
lahf
and
push
push
push
lods
pop
sub
add
pusha
add
jle
mov
mov
movsl
xchg
sti
dec
sti
lds
mov
ret
ds
cmp
divl
add
enter
in
push
bswap
jb
mov
jbe
add
adc
mov
cmpsb
std
outsb
mov
jl
cltd
jmp
sti
aad
mov
out
and
add
push
mov
sub
insb
in
inc
mov
jp
add
addb
les
fcmovnb
add
pop
mov
mulb
addb
pop
negb
jecxz
test
in
mov
mov
add
sub
movsb
push
sub
add
inc
push
xchg
daa
adc
mov
icebp
fwait
cli
dec
mov
mov
mov
add
movl
xchg
add
pusha
add
test
clc
dec
mov
cmp
push
pop
scas
dec
popa
xor
sbb
mov
add
mov
addl
js
adc
int
adc
mov
jbe
daa
in
add
and
add
and
cld
adc
loopne
mov
mov
add
add
aam
add
sete
gs
fucomi
cmp
mov
bound
mov
mov
sbb
ja
jnp
mull
add
add
aad
or
and
ds
mov
cmc
outsb
test
or
dec
or
add
mov
scas
sbb
popa
lods
jecxz
sub
mov
dec
insb
jbe
std
inc
add
or
aad
mov
mov
mov
add
jmp
and
mov
jbe
sbb
sub
jns
add
mov
add
ret
dec
sub
fisubl
mov
loope
ja
mov
mov
mov
pop
je
stc
mov
inc
jns
mov
popa
loop,pn
mov
add
add
add
decb
ja
jne
add
das
jae
aaa
inc
mov
add
xchg
sbb
jbe
add
add
mov
add
mov
fisubrs
shll
mov
pop
jecxz
das
xchg
js
xlat
outsb
or
mov
mov
mov
push
les
adc
insl
mov
mov
mov
lock
add
add
cmp
add
cmp
or
das
mov
add
add
mov
addb
xchg
inc
add
add
push
add
fs
mov
jecxz
inc
ficomps
loop
dec
mov
in
movsb
add
add
push
push
push
push
push
cld
call
add
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
rcl
push
dec
pop
movsl
icebp
divb
mov
inc
mov
add
outsl
in
or
sbb
add
add
repz
inc
adc
repnz
add
inc
jb
mov
int3
lock
pop
aas
add
mov
lret
xchg
add
jbe
aam
inc
mov
flds
push
aaa
int3
jne
sahf
lds
jecxz
cmp
xchg
rolb
mov
mov
and
add
add
push
xor
mov
ret
mov
jp
mov
adc
mov
ljmp
nop
add
jecxz
pusha
add
mov
popa
mov
dec
addb
mov
sbb
mov
xor
loop
mov
xchg
push
add
pop
test
cmpsl
jp
add
jb
mov
leave
ja
js
iret
pop
push
add
mov
addb
aas
fldenv
pushf
push
xor
mov
out
add
hlt
pop
jmp
mov
cmp
in
fdivs
sbb
push
sahf
xor
mov
test
push
jnp
push
iret
scas
pop
dec
mov
dec
pop
int3
jg
add
sbb
scas
cmp
add
insb
xor
mov
add
xchg
add
mov
cltd
sbb
or
das
xor
add
xchg
sbb
cmp
jbe
xor
add
mov
add
add
imul
add
jg
mov
aad
ret
adc
mov
cwtl
fbld
xor
mov
cld
xor
add
std
push
inc
add
mov
jmp
add
sub
add
sahf
and
and
mov
pop
fcoml
sbb
arpl
fmuls
push
cli
push
or
add
mov
sbb
ss
and
call
add
add
mov
popf
mov
stos
mov
or
pop
and
aam
nop
add
jnp
push
sbb
push
jecxz
xchg
add
in
inc
nop
add
mov
lcallw
mov
adc
addb
test
das
sbb
sahf
jne
inc
nop
add
sbb
lods
rolb
mov
jne
add
mov
cmp
add
push
add
mov
jns
add
or
jl
dec
adc
mov
ficoms
mov
add
mov
dec
pop
jne
add
add
mov
xchg
add
mov
and
fwait
pop
adc
mov
mov
or
sbb
es
and
negl
ds
xchg
lods
es
xor
pop
aad
add
lahf
pushf
sbb
mov
lahf
dec
jmp
pop
ds
fs
cltd
pop
add
add
cmp
shll
xor
mov
dec
das
and
add
mov
lcall
and
sarl
fucomi
jp
or
mov
add
dec
enter
fidivrl
and
sub
dec
ja
rolb
arpl
lcall
mov
inc
ret
hlt
fsub
pusha
add
xor
jge
leave
sbb
into
xchg
mov
push
dec
ret
sbb
or
mov
add
mov
add
addb
decl
add
mov
push
jg
lds
mov
lret
add
test
jbe
sub
pop
cmp
mov
fucomp
mov
mov
add
inc
sbb
fcmovnu
cmp
aas
js
fwait
xchg
inc
push
clc
ljmp
or
stos
shll
mov
inc
aam
cwtl
addb
mov
rolb
loopne
mov
inc
into
pop
mov
xchg
xchg
or
sub
dec
sarl
jmp
or
add
push
sysenter
sbb
pop
jle
mov
sub
arpl
nop
add
outsl
push
jns
sub
push
js,pn
add
jge
push
ret
int3
idivb
movhps
sub
or
mov
mov
push
xor
leave
cmp
lods
nop
add
adc
out
mov
stc
rcrl
mov
test
sub
aam
add
test
test
mov
add
mov
cli
pusha
add
fimull
inc
aas
pop
add
stc
jmp
leave
and
jo
mov
jg
imul
and
mov
outsl
mov
add
and
inc
cmp
inc
test
adc
add
xchg
mov
pop
scas
inc
add
sbb
scas
lcall
xchg
add
jae
rolb
mov
imul
push
pop
loope
clc
sbb
mov
mov
cs
iret
cmpsl
mov
sbb
cmp
add
cs
lret
mov
add
mov
jl
jle
jns
mov
mov
mov
jne
ds
add
ret
mov
push
mov
and
mov
add
cmp
sti
popf
fldl
add
push
daa
xchg
popf
fcoml
out
sbb
dec
cmp
mov
add
mov
ficoml
call
inc
sub
and
mov
in
mov
jmp
push
movsb
pop
mov
das
imul
out
jae
xor
mov
int
rolb
mov
filds
mov
xor
mov
icebp
iret
and
add
in
lods
jl
shll
cmp
cmp
mov
mov
fstl
mov
and
mov
sub
aaa
xchg
adc
mov
test
mov
mov
add
or
inc
mov
mov
mov
fistl
jl
call
fcmovb
jl
sbbl
mov
mov
mov
dec
push
add
in
std
jmp
ja
xchg
add
xchg
rolb
push
pushf
lea
in
test
add
leave
flds
mov
add
scas
inc
gs
sahf
test
es
sub
mov
mov
lock
loope
pushf
pop
pop
sbb
and
jle
loopne
mov
add
mov
add
cs
and
mov
sahf
fdivl
or
pop
movsl
stos
arpl
add
add
lock
mov
push
add
repnz
test
mov
jbe
sbb
add
xchg
or
mov
cmc
lcall
mov
loope
add
add
mov
test
mov
stos
stos
aas
and
mov
pusha
add
add
mov
mov
add
mov
enter
xchg
mov
add
add
pop
jg
cmp
adc
mov
add
or
sub
cli
rolb
mov
mov
add
inc
cmp
xchg
add
mov
in
add
mov
sub
cmp
sub
call
and
ss
dec
int3
jmp
imul
aaa
int
lea
add
je
mov
sub
sbb
cmp
fnsave
xor
ficoml
push
and
xchg
insb
addr16
add
stos
sbb
addb
das
and
xor
mov
push
add
cmp
mull
jmp
add
loopne
mov
xchg
flds
xor
mov
adc
les
es
imul
sbb
pop
xchg
vmovd
add
add
mov
mov
insb
mov
xor
mov
push
sub
into
mov
cld
mov
stc
jne
add
mov
addb
stc
or
and
cmp
rolb
rolb
inc
mov
orl
mov
cs
inc
xor
mov
lock
lea
mov
push
add
add
insb
cmp
add
fistps
add
or
mov
sbb
lcall
aaa
lock
mov
ret
push
dec
cmpl
imul
faddl
rcrl
and
xchg
loop
mov
mov
pop
cmpsb
aas
dec
cmp
pusha
add
in
addb
lret
add
dec
cmp
adc
jne
stc
pop
insl
pop
dec
mov
icebp
jbe
arpl
cld
push
inc
or
inc
add
cmpsb
xchg
xor
mov
inc
jmp
add
mov
sbb
jo
mov
mov
mov
xchg
pop
ret
jo
mov
in
mov
jg
add
mov
pop
jge
test
jne
add
gs
dec
cwtl
ljmp
xchg
std
lea
pop
push
mov
mov
add
rolb
mov
repz
add
push
add
add
shr
xor
xor
cld
icebp
mov
scas
xchg
push
mov
push
pop
arpl
push
mov
movsl
push
outsl
inc
test
aad
addr16
daa
cmp
mov
add
lret
cmp
adc
jmp
movsl
les
pop
cli
and
fisubrl
mov
imul
push
jl
fidivrl
popl
pop
xor
mov
mov
pop
mov
bound
mov
pop
dec
jb
mov
jl
scas
aad
jecxz
adc
mov
mov
push
jne
aas
mov
add
rcl
rolb
mov
scas
out
fs
ret
mov
add
cmpl
jo
mov
add
add
movl
mov
gs
addb
rolb
mov
cltd
cmp
push
add
mov
mov
clc
lret
sub
addb
lock
push
leave
lret
add
mov
add
arpl
dec
popf
and
mov
cmpsl
lds
push
mov
jae
icebp
push
sub
cld
xlat
outsb
fucomp
ret
call
roll
test
jge
sahf
push
mov
xchg
add
scas
sub
mov
add
jmp
mov
repnz
jne
add
out
fistl
mov
ljmp
test
out
xchg
add
mov
jle
inc
xchg
mov
rcrl
add
fimull
mov
add
cmpsl
lea
ret
mov
sub
mov
xor
add
xor
add
add
lahf
and
mov
jge
add
arpl
cmp
clc
sub
add
add
pop
add
mov
add
xor
mov
ds
aas
in
aaa
sub
xchg
addb
or
enter
pop
xchg
jge
lcall
rorl
add
mov
add
push
ss
add
mov
mov
cmp
add
dec
push
add
push
sub
fildl
dec
sbb
and
mov
and
cmp
jbe
add
add
and
mov
add
fcmovnbe
mov
dec
mov
and
mov
pop
in
push
mov
sub
pop
pop
mov
xor
mov
push
es
gs
cmpsl
lods
push
int
shl
cwtl
addb
out
shr
scas
test
push
cmp
decb
gs
mov
add
into
cmp
inc
add
mov
filds
cmp
mov
add
call
jmp
cmc
gs
out
mov
fmull
add
daa
into
xchg
lds
adc
lret
fisttpll
inc
add
cmp
pop
mov
add
mov
jecxz
mov
dec
cli
xor
pusha
add
mov
mov
mov
dec
adc
add
mov
dec
inc
adc
mov
add
cmp
fstl
out
and
loop
mov
jnp,pt
rorl
jecxz
inc
add
and
mov
dec
sbb
cmc
ljmp
rolb
xchg
loope
add
outsb
repz
mov
sbb
hlt
dec
sarl
xor
or
mov
xchg
popa
add
cmp
push
and
mov
test
or
add
test
add
mov
add
adcl
sti
les
dec
jge
adc
push
out
add
or
jo
mov
pushl
add
lret
mov
push
or
mov
add
lret
mov
movsb
mov
loope
pusha
add
enter
cmpsb
push
cmp
sbb
add
or
icebp
scas
popa
clc
loope
push
sub
xchg
xchg
inc
add
out
lods
and
test
fstl
mov
adc
xchg
pop
dec
das
mov
sbb
fs
ret
push
mov
mov
out
cmp
jae
xor
add
mov
mov
mov
mov
mov
cli
xchg
add
rolb
mov
add
mov
hlt
push
xchg
push
add
add
mov
mov
test
mov
std
mov
xor
cmp
sbb
push
pop
and
mov
mov
mov
mov
xchg
in
xchg
add
push
fidivl
mov
xchg
sub
jbe
and
mov
mov
add
mov
add
insb
jle
mov
lds
add
push
pop
push
mov
cmpsb
xor
mov
add
and
mov
test
mov
add
mov
fldcw
ss
repnz
inc
inc
hlt
imul
shl
xlat
sbb
repz
aaa
add
mov
push
mov
xlat
out
fsub
sub
sub
ficoms
xchg
sahf
jb
mov
enter
dec
cmp
add
push
add
dec
push
aas
push
jbe
inc
add
xor
loop
mov
lret
imul
xchg
add
aam
in
xchg
ss
int3
pop
ret
xor
xor
mov
stos
je
mov
rolb
mov
add
imul
adc
add
and
pop
fldt
mov
xchg
test
mov
pop
mov
mov
insl
nop
add
lret
lcall
out
mov
push
hlt
mov
sti
out
or
fdiv
repnz
jle
and
shll
inc
add
mov
push
xor
mov
jbe
jmp
cmp
pop
bound
mov
repnz
add
add
adc
mov
fidivs
std
adc
mov
mov
sahf
jnp
xor
out
xchg
lcall
xchg
mov
dec
push
lret
xchg
outsb
insb
push
inc
roll
loopne
mov
addb
rolb
pop
dec
cmpsb
inc
add
add
enter
mov
mov
jb
mov
mov
pop
mov
add
adc
aas
mov
imul
pop
sti
in
test
notl
add
dec
push
mov
fld1
xchg
std
add
ss
movsl
and
add
mov
movsb
fdiv
sbb
inc
jo
mov
push
xchg
rcll
iret
adc
sub
mov
rolb
mov
mov
mov
rorl
and
mov
cmp
pop
or
add
mov
jo
mov
cmp
rolb
mov
adc
mov
add
add
fcmovnbe
adc
lods
dec
repz
movsl
push
pop
xchg
repnz
push
or
mov
add
add
popf
movsb
push
scas
repnz
sbb
jge
xchg
dec
dec
and
lea
add
or
lods
cmp
sub
jb
mov
out
jl
loope
and
add
je
or
lret
xchg
xor
mov
inc
add
fwait
jl
pop
push
add
in
xchg
push
cmp
add
mov
push
test
sbb
fbld
xchg
notb
into
xchg
mov
ret
inc
add
add
loope
stos
sub
add
call
rolb
mov
sub
jbe
mov
or
psraw
and
inc
xor
sub
pop
pop
push
xor
mov
push
aad
shrl
test
aam
lock
enter
mov
pop
stos
outsb
pmuludq
mov
rolb
mov
add
push
cmc
jb
mov
push
jnp
add
mov
invd
dec
stos
insl
xor
imul
mov
add
inc
in
dec
xor
cmp
int
add
add
sarl
jecxz
test
add
mov
xchg
rolb
mov
adc
jg
repz
dec
scas
xchg
xlat
jo
mov
movsl
inc
and
sub
sbb
pop
jl
add
mov
mov
cmp
out
pop
shll
cltd
pop
sbb
add
testb
testl
pop
in
cltd
cmc
nop
add
mov
push
sbb
add
addb
in
loop
mov
rolb
mov
addb
ds
fucom
or
and
in
lea
xor
cmc
imul
lods
mov
ss
bound
mov
mov
ljmp
mov
mov
inc
sub
repz
and
mov
push
js
add
mov
and
mov
add
scas
xchg
add
xchg
out
push
stos
aaa
cmp
add
add
add
mov
sbb
sbb
add
loope
mov
dec
add
mov
outsb
cmpsl
xchg
outsl
test
mov
mov
jne
fidivl
mov
incb
xchg
and
push
loop
mov
add
add
adc
mov
in
dec
pop
sbb
jecxz
popa
outsb
xorl
mov
push
cmpsb
out
popa
or
add
cmp
ja
dec
push
mov
mov
add
mov
add
pop
leave
mov
add
fdivrs
cld
test
xchg
inc
cmp
inc
add
mov
lret
xor
mov
mov
aas
inc
xor
mov
outsb
in
mov
scas
hlt
push
xor
mov
mov
enter
mov
daa
bsr
or
out
add
lcall
jo
mov
imul
mov
loope
lea
pop
push
push
movl
ja
adc
jp
add
mov
xor
inc
add
add
flds
out
into
pop
dec
in
add
in
nop
add
movsl
add
mov
adc
mov
add
push
sbb
or
inc
xor
pop
xchg
jb
mov
mov
mov
mov
jmp
add
sbb
js
inc
aas
int
add
aad
sub
stos
sub
dec
add
mov
mov
lahf
gs
and
or
add
pop
pop
jge
out
xchg
inc
mov
push
cli
and
cmp
fstl
and
add
add
out
xchg
sbb
sti
loope
cmp
lret
mov
test
ret
pop
fmull
or
push
aas
adc
mov
call
add
sbb
push
sbb
rolb
mov
push
test
mov
add
and
mov
movsl
xor
add
test
inc
lcall
cwtl
je
xchg
repz
fcmovnbe
and
add
and
imul
icebp
or
gs
xor
mov
cwtl
lret
ds
jbe
add
cmp
icebp
xchg
add
add
jge
pushf
roll
add
mov
add
mov
mov
icebp
cli
sbb
por
add
mov
add
mov
pop
pop
add
mov
xlat
fldenv
fwait
mov
or
adc
mov
rolb
mov
push
pop
repz
mov
xor
sub
out
lahf
lock
push
pop
test
inc
add
mov
leave
pop
mov
mov
aad
and
mov
sbb
xchg
xchg
das
repnz
inc
dec
adc
movsb
loopne
mov
adc
mov
fidivs
lds
mov
xchg
add
add
jecxz
rcll
lods
xchg
in
push
mov
adc
mov
mov
bound
mov
cmp
fstpt
mov
ljmp
mov
push
cmpsb
and
mov
push
mov
inc
cmc
add
dec
pusha
add
add
cld
mov
pop
cmpsl
pop
xchg
imull
daa
dec
add
test
adc
push
xchg
out
dec
xchg
mov
out
jne
sbb
mov
dec
int3
outsl
jbe
movsl
inc
mov
mov
iret
fbld
adc
mov
sahf
out
mov
xchg
jne
jne
cltd
out
add
aas
push
mov
add
pop
xchg
fld
add
mov
inc
add
mov
lahf
jle
pop
test
lret
add
adc
add
mov
popf
inc
mov
add
jns
add
lcall
sub
add
add
loopne
mov
idivb
push
incl
mov
add
outsb
das
dec
mov
pop
les
lock
jp
push
mov
mov
fsubl
add
mov
and
xchg
mov
add
xchg
add
addb
in
dec
daa
cld
adc
mov
sub
or
add
sar
pushf
push
adc
add
add
sub
jecxz
out
inc
sbb
lea
inc
add
dec
add
loope
arpl
pop
mov
test
frstor
push
add
cltd
mov
movsl
or
fists
cmp
mov
mov
out
test
cwtl
ret
cld
add
add
jecxz
inc
add
add
push
jb
mov
add
mov
lret
jns
popf
mov
pop
jb
mov
lock
inc
add
and
mov
cmp
inc
loopne
mov
mov
xor
mov
dec
loop
mov
scas
test
jp
dec
pop
out
push
inc
add
js
pop
ss
dec
sub
jl
add
adc
adc
mov
fs
mov
mov
push
and
mov
add
inc
dec
push
push
out
lahf
pop
ss
add
test
pop
ds
ja
out
add
cltd
stos
cmpsl
lock
fiaddl
ret
mov
mov
or
sub
stos
push
icebp
les
xlat
fmuls
add
dec
jge
iret
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
mov
pushl
pop
notl
and
push
inc
cli
insl
add
mov
addl
xchg
sub
outsb
xor
pop
std
pop
add
mov
js
and
sbb
add
and
add
rolb
mov
add
push
add
enter
jp
adc
pop
inc
test
jmp
push
inc
add
push
shrl
jg
jl
xchg
xor
sub
add
adc
insb
mov
jbe
outsl
sbbl
push
add
mov
dec
cmp
imul
test
cs
xor
mov
sub
cwtl
adc
mov
mov
sub
push
lock
jbe
pop
or
mov
into
cli
cli
adc
mov
das
sahf
popf
xor
mov
mov
cmp
fldcw
xchg
mov
inc
add
jno
jne
movsb
mov
test
loope
or
fstpl
add
sbbl
jg
adc
mov
xor
and
pusha
add
add
fs
sbb
jo
mov
add
rcll
cwtl
outsb
sub
add
cmp
xchg
jb
mov
add
ss
add
repz
mov
inc
xchg
addl
add
rolb
add
mov
outsb
inc
xchg
aad
push
in
out
inc
scas
cwtl
in
xchg
xchg
mov
iret
das
jl
dec
jnp
stc
add
mov
push
inc
add
je
je
adc
std
cli
cmp
sbb
pop
sub
add
adc
mov
outsb
aad
sub
sub
dec
cld
in
adc
cwtl
mov
sahf
lock
xor
add
mov
imul
add
mov
inc
add
mov
enter
mov
add
adc
mov
mov
cmc
mov
add
dec
or
or
ret
mov
stos
shll
das
ja
jle
inc
fs
push
push
push
sub
jle
je
pop
push
lahf
jo
mov
mov
mov
xor
enter
test
and
add
add
pushf
popa
inc
inc
add
mov
mov
add
add
mov
pop
cli
mov
repz
add
icebp
jl
add
outsl
fisubrs
cli
addb
jl
inc
imul
jp
sub
lock
sub
imul
mov
add
call
mov
or
repnz
movsl
inc
add
push
xchg
mov
xchg
mov
mov
sbb
in
pop
dec
es
test
or
out
cmpl
inc
stc
rolb
mov
push
cs
rorl
rolb
xor
movsl
outsl
in
push
add
add
mov
lods
ret
mov
sub
add
cli
mov
mov
mov
pop
mov
cmc
sbbl
pusha
add
popf
xchg
mov
mulb
mov
cmpsb
popf
aaa
jmp
cli
pop
aaa
pop
and
adc
mov
daa
inc
or
push
js
lods
scas
pop
ss
xlat
outsl
movsl
imulb
dec
stc
sbb
mov
loop
mov
push
mov
add
push
fwait
xor
add
jb
mov
addb
adc
mov
xor
mov
add
add
mov
cmpsb
xlat
lret
icebp
sbb
mov
iret
cmpsb
sbb
arpl
xor
mov
leave
cli
stc
add
mov
popa
ret
jle
roll
scas
cmp
sar
inc
add
ret
iret
cmp
pop
push
push
mov
mov
mov
imul
out
jo
mov
mov
xorl
mov
mov
mov
add
add
dec
dec
pushf
insl
lret
mov
mov
fwait
hlt
xorl
add
mov
sbb
cmp
jne
cmpsb
pop
int
idivl
add
adc
fists
pop
imul
or
sbb
rorl
outsl
adc
mov
repnz
je
add
mov
mov
sub
cli
xchg
out
inc
mov
or
add
cmp
add
jecxz
xor
mov
xor
mov
inc
adc
loop
mov
pop
pop
out
pop
stc
movsb
fisttpl
cmc
add
push
dec
addb
mov
pusha
add
xor
mov
dec
xchg
xor
mov
test
lea
ret
aaa
lcall
and
es
in
jmp
xchg
xchg
add
pop
es
jmp
imul
mov
out
js
pop
pusha
add
add
push
jo
mov
adc
mov
xchg
add
add
je
repnz
fisubrl
jecxz
xchg
inc
test
fs
stos
inc
mov
fnsave
imul
sub
adc
mov
add
ds
mov
inc
add
add
repz
lea
lods
add
mov
pop
push
add
mov
add
stos
andl
mov
add
mov
sbb
lea
add
mov
mov
jb
mov
add
push
and
add
and
xchg
fidivs
dec
mov
xor
xchg
add
fistl
ret
and
add
mov
add
mov
pop
or
pushf
mov
mov
dec
jl
in
add
lods
mov
add
test
add
arpl
mov
mov
js
inc
shr
inc
pop
pop
sbb
mov
sub
mov
add
std
clc
push
jecxz
icebp
pop
call
mov
push
scas
xor
mov
add
push
inc
mov
and
test
ja
add
addb
xor
mov
inc
add
or
mov
shl
mov
push
imul
std
cmc
mov
add
mov
add
jg
push
repz
dec
jb
mov
mov
add
add
add
add
jo
mov
and
mov
loopne
mov
dec
dec
and
mov
xor
or
and
mov
cmpl
loopne
mov
loopne
mov
add
popa
out
jge
mov
cltd
pop
int3
ds
inc
stos
icebp
cmp
je
add
ret
mov
gs
add
pop
stos
gs
jecxz
and
add
add
inc
lahf
dec
sahf
jae
xchg
add
xchg
cmp
push
jmp
add
dec
imul
xor
add
mov
int3
dec
aas
adc
mov
loopne
mov
cltd
addr16
pushf
xor
and
mov
lret
mov
scas
adc
mov
and
or
test
pop
adc
mov
aas
xchg
or
fisttpll
je
das
pushf
imul
mov
gs
push
mov
decl
sbb
xchg
in
pushf
int3
and
mov
sbb
gs
mov
mov
movsl
sub
mov
add
mov
fisubrl
iret
out
hlt
jp
add
inc
add
mov
stc
outsl
push
and
mov
add
add
jecxz
add
cli
arpl
add
adc
mov
mov
fnsave
mov
mov
mov
mov
xorl
std
xchg
add
and
add
add
lock
sub
lahf
add
cld
adc
push
out
imul
mov
add
or
add
xor
mov
sub
je
test
lret
sub
push
inc
mov
sbb
mov
std
shrl
add
xlat
jp
pushf
clc
add
mov
xor
mov
in
popf
or
inc
add
or
pop
loopne
mov
inc
add
xchg
push
add
insb
push
or
shll
xchg
sbb
insb
repnz
test
add
loopne
mov
mov
and
add
rcll
lcall
jno
sbb
mov
add
mov
dec
adc
add
mov
inc
popf
and
mov
adc
mov
xchg
aas
pop
cmp
cld
and
mov
add
test
jb
mov
add
mov
xor
add
xor
loop
mov
jne
mov
loope
mov
mov
adc
jae
das
push
ja
lods
jae
add
sbb
add
mov
jecxz
call
leave
push
add
aas
and
mov
push
pop
fucom
push
ja
addr16
push
pop
addb
jbe
addl
dec
in
xor
mov
and
mov
in
adcl
add
mov
cmp
add
xchg
pop
pop
pusha
add
insb
ja
add
cmp
jnp
add
out
mov
addb
imul
and
mov
xchg
xor
add
dec
jmp
out
js
addr16
test
loope
jl
test
test
mov
jo
mov
mov
mov
gs
add
aaa
xlat
int
mov
pop
xchg
jo
mov
shll
and
inc
jnp
addb
test
sbb
pop
jns
addb
jno
xor
gs
mov
add
repnz
xchg
addb
dec
xchg
add
ds
push
sub
outsl
testb
in
dec
pop
sbb
xor
in
push
pushl
add
add
jge
xchg
inc
sbb
insb
inc
add
mov
adc
outsl
test
sbb
pusha
add
cmp
mov
inc
sti
jae
xlat
mov
mov
push
add
pop
add
in
add
xchg
les
pop
jo
mov
add
sub
mov
jnp
insl
mov
vxorps
test
add
add
xor
cmp
adc
mov
mov
xchg
xchg
or
ficoms
dec
sub
ja
add
jmp
mov
cmp
sahf
cmp
push
xchg
mov
daa
pop
sub
dec
jb
mov
jp
sahf
cmp
fwait
mov
adc
xor
gs
inc
add
cmp
pop
call
popa
cs
shll
mov
sub
pop
mov
add
ljmp
movsb
les
or
ret
stc
dec
or
pop
xlat
or
sub
mov
add
mov
mov
sub
mov
sub
mov
cmc
xor
mull
and
loope
add
test
add
add
lods
push
mov
mov
pushf
and
sarl
mov
lcall
or
adc
mov
add
mov
mov
sub
pop
xor
mov
int
ss
add
mov
inc
dec
mov
sahf
sti
jo
mov
add
cmp
ds
mov
daa
lea
mov
pop
into
sub
js
add
and
mov
push
add
or
cli
sub
gs
add
cmpsb
call
add
push
mov
pop
ret
mov
mov
fs
lods
pop
mov
std
in
das
flds
mov
test
incb
shr
ljmp
lock
mov
addb
mov
sbb
inc
or
xor
push
pop
push
aad
aad
xchg
add
repz
cmpsb
sbb
and
aam
and
sub
mov
movsl
cwtl
inc
lock
jecxz
xor
and
bound
mov
push
add
add
xchg
inc
add
mov
pop
mov
lea
jmp
and
in
cmp
fs
xor
push
inc
cltd
fsubs
or
jp
mov
mov
jecxz
stos
jp
add
jnp
in
in
lods
fimuls
add
les
and
mov
mov
mov
mov
jmp
call
add
lret
mov
mov
cmp
or
mov
add
stc
push
ficompl
xor
mov
lret
mov
mov
add
add
mov
mov
lret
mov
fmull
mov
xchg
lcall
dec
in
cmpsl
popf
pop
and
mov
jns
loope
xchg
call
mov
addb
mov
add
mov
inc
sub
or
jnp
mov
mov
xchg
bound
mov
xchg
cmp
jb
mov
mov
sbb
xor
mov
aaa
push
mov
stos
ficomps
add
push
loope
push
mov
ret
insb
push
pusha
add
add
inc
adc
push
roll
mov
dec
xchg
push
rolb
mov
adc
add
add
sub
dec
in
mov
jle
mov
mov
mov
je
loopne
mov
icebp
daa
and
sbb
jp
inc
add
jbe
add
inc
and
pop
adc
lock
arpl
outsl
lret
adc
mov
mov
mov
mov
and
mov
sub
cmc
roll
fstps
jae
xor
mov
hlt
or
pushf
mov
add
or
aaa
dec
jo
mov
inc
add
and
add
lea
dec
push
outsl
imul
pushf
inc
jle
add
push
add
popf
leave
aam
or
mov
mov
repnz
add
add
pop
sub
insl
addb
xor
mov
add
mov
cmp
fsubr
sbb
lock
or
ss
leave
lret
mov
inc
inc
add
mov
xchg
dec
divb
add
xor
mov
xchg
mov
mov
into
xchg
bound
mov
test
add
jecxz
add
outsl
sbbl
gs
xchg
jno
cmp
mov
dec
and
mov
pop
imul
mov
add
mov
lret
mov
test
or
push
add
add
mov
fnsetpm(287
stc
lcall
push
cltd
out
outsl
pushf
ds
push
add
test
mov
mov
push
xchg
add
add
fwait
inc
jge
push
mov
adc
mov
rolb
mov
jbe
add
mov
data16
push
add
lret
mov
mov
jg
add
xor
mov
pop
dec
sub
sub
sub
jg
ret
arpl
add
adc
mov
icebp
enter
add
mov
add
movsl
cmp
jnp
mov
nop
add
jae
add
scas
push
pop
push
and
add
bound
mov
std
insl
push
adc
mov
add
jno
cmpsb
push
repnz
push
dec
adc
mov
add
dec
fwait
xor
mov
sub
add
or
fsts
mov
mov
aas
jle
add
mov
out
add
cli
xor
in
sub
xchg
sub
ficoms
add
mov
or
popf
push
fildl
stos
sub
jle
add
xchg
dec
iret
inc
pop
inc
sbb
decb
mov
pop
rcr
add
jecxz
lods
ds
add
lock
inc
gs
cmp
ja
insb
xchg
hlt
sub
fcomps
jnp
pop
cmp
mov
add
mov
mov
xchg
not
add
add
pop
inc
insb
dec
push
jo
mov
int3
mov
mov
xor
pop
lds
mov
jp
jno
add
adc
dec
shll
dec
popa
in
pushf
lods
jbe
push
lds
sub
mov
push
pop
and
mov
mov
ljmp
mov
jne
add
jne
mov
sub
xor
hlt
nop
add
js
pusha
add
push
test
mov
movsl
mov
adc
mov
mov
psubw
inc
add
lds
cmc
outsb
push
aaa
in
cld
mov
pop
outsb
lods
stos
movsb
adc
sahf
or
sbb
lret
or
xor
add
rolb
test
mov
dec
dec
mov
and
sahf
dec
xor
mov
hlt
sbb
cmp
add
ss
and
mov
dec
icebp
aam
and
push
add
jg
add
test
add
add
mov
mov
lret
and
std
rcrl
aaa
inc
rcrl
rolb
test
aam
pop
ret
mov
testb
mov
add
mov
ds
out
jl
aas
les
leave
add
ljmp
or
cmc
jge
std
movsl
adc
repz
add
jb
mov
add
inc
jno
sbb
movsb
rol
push
icebp
roll
mov
mov
sub
sbb
add
arpl
add
add
mov
and
mov
insb
in
in
mov
test
je
cmp
rolb
mov
mov
ret
mov
add
inc
xchg
add
mov
mov
mov
dec
repz
mov
add
mov
enter
in
aas
into
jecxz
pop
jle
and
mov
mov
pusha
add
sbb
add
or
cmp
sub
mov
inc
add
push
and
xor
mov
scas
sub
pop
dec
mov
mov
xchg
add
mov
mov
ret
adc
pop
outsl
mov
out
mov
add
std
mov
out
and
mov
jmp
add
je
ficoml
mov
add
es
jno
add
rolb
cli
testl
test
dec
adc
mov
pop
inc
pop
dec
add
add
pop
fsts
jno
add
pop
dec
sbb
int
mov
addb
mov
mov
cmpl
sbbl
push
add
ljmp
sub
add
push
rolb
mov
mov
int3
pop
pop
mov
ss
or
adc
mov
push
adc
sbb
nop
add
aam
jns
aam
cmp
out
rcl
adc
add
pop
mov
pop
jo
mov
sahf
or
sub
in
mov
add
int3
aas
dec
pushf
movsb
and
and
mov
mov
jo
mov
push
jnp
cmp
mov
ljmp
ss
mov
cmp
ja
aam
sub
mov
ss
jp
cmpsb
and
xor
mov
repnz
inc
addl
mov
addb
mov
add
sahf
mov
mov
add
roll
add
and
daa
and
lock
add
mov
push
pusha
add
push
add
lahf
out
mov
cld
dec
ds
mov
adc
mov
mov
add
xor
mov
xchg
add
and
mov
pop
jb
mov
add
jle
sub
mov
xor
sbb
mov
test
xor
xor
mov
mov
into
fadds
mov
lods
pop
jmp
imul
popf
or
mov
push
and
outsb
cs
add
adc
mov
sti
sub
hlt
out
movsl
adc
dec
loopne
mov
aaa
hlt
cmp
xor
cs
push
xchg
add
lods
mov
test
xchg
sub
jge
add
mov
add
fsubrl
in
mov
mov
stos
jb
mov
add
inc
add
fsubrl
add
sti
mov
cmc
pop
lea
es
mov
add
and
mov
test
pop
mov
mov
add
rolb
mov
pop
hlt
std
mov
sbb
push
add
cltd
pop
rolb
mov
movsb
sub
add
mov
inc
out
scas
loop
mov
dec
sub
lea
adc
add
mov
xor
mov
fldcw
add
mov
lods
pop
bound
mov
sub
inc
arpl
ret
mov
mov
outsl
je
jmp
inc
repnz
mov
ret
lret
mov
mov
fsubs
add
insl
inc
fcom
add
leave
in
push
xchg
push
add
pop
test
mov
loop
mov
sbb
jg
add
add
sub
add
mov
add
clc
mov
sahf
scas
pop
aas
mov
sub
adc
mov
mov
xchg
sub
xchg
sbb
adc
jnp
out
add
out
sub
add
mov
add
cli
inc
xchg
cmp
sti
pop
enter
xor
mov
pop
push
mov
imul
popa
push
add
sub
clc
stc
xor
push
dec
cmpw
jp
aam
or
jge
lcall
cmp
test
add
mov
stos
sub
push
hlt
xlat
lods
idivl
ss
pop
push
popf
mov
sub
ja
test
popf
stos
inc
aam
lcall
jecxz
in
xor
mov
push
shrl
xchg
sub
std
jge
sub
add
jle
cli
add
xorl
mov
sahf
mov
je
rolb
mov
inc
add
jl
lret
adc
mov
addb
xchg
dec
clc
jecxz
pop
push
mov
add
loop
mov
in
aaa
out
out
jb
mov
mov
pop
out
mov
add
lods
loopne
mov
imul
add
add
mov
xchg
adc
mov
enter
leave
outsl
xchg
mov
mov
mov
fisubs
add
adc
xchg
jge
mov
sub
add
fs
jp
sub
pop
aam
sti
push
mov
addb
xchg
adc
mov
push
pop
xor
mov
aas
pushf
or
mov
les
xor
in
mov
je
enter
repnz
divb
add
stc
repnz
add
loop
mov
jnp
push
out
xchg
fisttpl
lahf
gs
scas
mov
mov
add
inc
push
add
ljmp
sbb
test
pop
or
iret
cmpsb
cmc
mov
push
add
add
pop
int
push
pop
das
sub
sub
add
add
ret
or
cmp
repz
pop
jmp
cmc
leave
inc
add
mov
jne
or
adc
mov
mov
mov
xchg
add
add
mov
mov
mov
repnz
xor
mov
dec
das
pusha
add
mov
orl
add
mov
mov
adc
mov
add
mov
out
mov
mov
in
push
mov
loopne
mov
mov
add
mov
dec
push
fucomp
push
xor
xchg
cli
addb
dec
popa
cmp
loop
mov
ret
jle
mov
inc
das
mov
popa
pop
mov
clc
lea
push
shrl
push
cmp
dec
push
outsb
nop
add
dec
into
fmuls
sub
xchg
lcall
mov
aas
mov
insl
testl
mov
cmpsb
leave
fldenv
rolb
mov
jae
fstpt
mov
lahf
lea
mov
mov
jb
mov
stos
aad
jmp
pop
addl
mov
add
mov
jnp,pt
add
push
insl
add
mov
jle
dec
out
add
mov
stos
or
rolb
cmp
sbb
and
rorl
cltd
or
clc
push
or
or
fisubl
and
insl
ljmp
ljmp
arpl
aad
fs
sarl
pop
dec
lret
add
lret
mov
mov
aas
pop
or
mov
ja
lea
jb
mov
pusha
add
mov
lods
add
mov
pop
cmp
fsubl
add
sahf
inc
add
addl
fcmovb
dec
pop
xor
mov
cmovo
mov
adc
out
push
outsb
add
push
nop
add
mov
mov
mull
leave
mov
and
aaa
addb
cmp
in
pop
jbe
das
addb
out
adc
cmp
push
in
adc
jo
mov
decb
pop
addb
addb
movsl
push
sub
or
cmpsl
push
add
dec
pop
mov
cli
adc
xchg
mov
add
add
popf
shl
fisttpl
fcmovb
inc
cmpsb
xchg
sbb
add
icebp
or
add
mov
add
push
add
or
jno
jnp
pop
mov
insb
jo
mov
jl
mov
and
mov
cmp
into
test
sbb
popf
sbb
cld
popf
cmp
pushf
jmp
scas
inc
mov
repz
push
aas
decb
add
mov
popf
mov
ret
pop
pop
ret
pop
cmpsl
inc
add
cmp
jmp
sbb
add
movsl
jmp
mov
aam
leave
addb
iret
nop
add
nop
add
nop
add
lods
pop
lds
cmpsb
stos
xor
jmp
sbb
cltd
enter
dec
lods
sub
aad
xor
mov
add
imul
shll
add
loop
mov
cmp
addb
lods
push
add
mov
mov
stos
push
out
dec
cwtl
mov
cmp
add
mov
mov
sbb
std
arpl
mov
xchg
loopne
mov
xor
mov
divb
add
mov
mov
mov
lods
mov
xor
popf
mov
sahf
dec
adc
mov
dec
sub
and
addb
fdiv
add
cli
int
fstpt
jo
mov
add
and
mov
mov
jnp
sub
push
add
pop
loop
mov
add
push
int
nop
add
hlt
add
mov
je
push
fwait
clc
jb
mov
dec
jp
xchg
dec
xor
push
add
mov
mov
xchg
add
sub
jecxz
add
or
mov
dec
mov
fs
mov
add
into
repz
mov
cwtl
sbb
or
sbb
xor
mov
adcl
cld
inc
loop
mov
fsubr
jbe
cli
data16
bound
mov
push
sub
dec
or
inc
in
outsb
dec
or
mov
daa
xlat
pushf
add
mov
inc
sahf
push
fimull
xor
pop
pop
and
mov
sbb
fs
push
add
add
push
mov
jo
mov
add
mov
stos
ljmp
add
mov
stc
inc
add
insb
push
ret
or
xor
mov
mov
lahf
mov
jne
cli
inc
ljmp
push
movsl
inc
push
imulb
push
inc
push
mov
adc
push
add
adc
mov
pop
dec
mov
sbb
aad
test
mov
pop
jae
in
cmp
ret
mov
cmp
add
lret
mov
fistl
pop
daa
inc
inc
add
mov
mov
add
pop
cmp
int3
cmp
js
dec
pop
mov
add
jle
mov
addb
lock
add
scas
sbb
xlat
stos
fists
les
jl
sub
test
jne
mov
lcall
movsb
icebp
fwait
push
stc
popf
mov
or
pushf
jmp
enter
shll
mov
in
ficompl
inc
xor
mov
jbe
inc
inc
das
cmp
mov
push
add
push
xchg
cld
and
or
loopne
mov
in
dec
sub
add
mov
movsl
add
into
sub
mov
ds
cmp
mov
sbb
add
scas
jnp
dec
or
mov
push
add
xchg
icebp
dec
jl
pop
clc
mov
mov
add
sub
daa
movsl
outsb
rolb
mov
sbb
adc
jp
xor
imul
in
sbb
or
add
aaa
dec
pushf
jle
data16
xchg
test
cmp
int3
push
jae
and
mov
mov
cmp
mov
inc
pop
mov
xchg
ds
fs
daa
cmp
add
add
inc
sbb
mov
cmp
insb
dec
arpl
inc
hlt
mov
jb
mov
cmp
bound
mov
add
mov
pop
cmpl
add
add
enter
xor
mov
jbe
lods
scas
pop
imull
add
push
movsl
lea
add
daa
or
mov
stos
std
push
cmp
inc
or
out
lea
xchg
inc
cli
pop
sub
ffreep
inc
mov
pop
int
fs
lret
test
inc
popa
jl
imul
push
jmp
mov
pusha
add
pop
mov
rolb
mov
mov
xchg
scas
pop
jp
in
mov
push
adc
mov
lods
ret
xchg
popa
mov
xor
mov
mov
add
int
lea
aam
pusha
add
out
dec
scas
pop
jb
mov
mov
lea
int3
inc
add
push
aad
dec
xchg
push
addb
sub
add
je
movsb
sahf
iret
inc
sub
xchg
scas
mov
cld
and
mov
gs
add
dec
xor
imul
mov
shrl
sarl
push
ret
and
mov
add
mov
add
mov
mov
add
push
out
inc
add
add
mov
mov
xchg
mov
sbb
in
inc
add
inc
push
add
outsb
data16
pop
mov
rolb
mov
aam
sub
lods
mov
mov
adc
mov
or
sbb
ss
movsb
lret
imul
or
addb
and
inc
add
push
sbb
push
xor
mov
imulb
test
push
pop
imul
sub
add
inc
add
testb
mov
add
inc
add
inc
in
pop
ljmp
imul
cmpsb
dec
or
pop
or
icebp
push
out
mov
mov
xchg
rolb
stc
orl
lret
imul
jge
add
push
popa
dec
pop
not
cmpsb
int
sbb
cmpsl
testl
or
add
add
mov
and
add
pop
mov
add
jmp
pop
sub
add
cmp
xchg
ds
loopne
mov
add
insb
mov
fisubrl
rol
rcll
and
inc
pusha
add
sub
dec
or
sbb
lret
push
cs
add
xor
mov
fcomip
xchg
jl
sbb
pusha
add
push
xchg
pop
jle
cli
fpatan
inc
lods
dec
add
mov
dec
pushf
filds
mov
jnp
add
add
sub
add
lahf
lods
sub
loope
mov
jae
pop
cmp
cmc
pop
sub
lods
lret
push
pop
cmpsb
adc
mov
add
fistl
xor
scas
add
pushf
idivb
add
scas
out
mov
lret
adc
push
sbb
addb
movsb
rolb
pop
std
sub
cmpsb
daa
pop
pop
push
es
std
push
add
dec
pop
pop
pop
adc
mov
and
mov
test
xor
add
add
dec
repnz
sub
das
outsl
xchg
inc
and
mov
and
fisubl
pop
repnz
out
or
pop
add
mov
adc
sbb
add
rolb
cmp
dec
pop
scas
in
test
jl
xchg
inc
daa
iret
dec
and
mov
fimull
js
inc
add
xchg
fcoml
mov
loopne
mov
mov
pop
in
jg
and
mov
add
add
outsb
sbb
popf
xchg
xchg
jmp
add
mov
or
add
xor
mov
jg
out
xor
je
add
mov
add
mov
dec
sbb
test
mov
push
mov
movsb
jns
insb
cmpsl
cli
and
popf
or
fimuls
frstor
fdivrs
add
clc
push
inc
in
mov
inc
dec
mov
cmp
or
into
mov
xlat
in
ljmp
mov
stos
lcall
aas
imulb
testb
lret
and
mov
test
fwait
dec
mov
jno
push
push
cmpsb
xor
mov
mov
adcl
call
add
mov
mov
call
mov
bound
mov
mov
add
mov
rcrl
lock
add
add
add
in
add
add
mov
add
add
cwtl
mulb
and
jno
bound
mov
xchg
imul
add
outsb
pop
xchg
addb
inc
lods
pop
adc
in
cmp
jg
or
movsb
push
jno
mov
fildll
dec
push
push
push
push
dec
cltd
cmpsb
or
bound
mov
or
add
scas
sub
xchg
add
pop
aas
xchg
cmp
mov
dec
mul
and
mov
add
pop
jp
mov
std
xlat
ficoms
or
add
mov
js
add
icebp
test
pop
sbb
in
cli
mov
mov
xchg
adc
mov
xchg
js
insl
inc
add
inc
push
mov
inc
add
out
loope
movsb
jl
movd
loopne
mov
mov
jl
dec
sti
sub
add
push
insb
cmp
add
mov
cmp
add
cmp
push
scas
aam
push
add
inc
cmp
push
add
int3
xchg
repz
jl
aaa
inc
add
add
inc
lea
mov
out
add
fmull
jbe
adc
mov
test
int
mov
test
sti
lret
ret
dec
push
or
xchg
imul
int3
push
xor
test
inc
add
add
dec
fs
xchg
add
mov
pop
mov
or
inc
lret
rcll
je
add
add
mov
add
test
xchg
loope
out
jge
data16
mov
mov
jne
mov
scas
outsl
addb
sti
sbb
lret
dec
dec
jno
int
stc
addb
das
fwait
mov
mov
jne
aam
daa
test
xchg
ror
and
and
stc
pop
and
aas
jbe
cltd
sub
icebp
mov
inc
add
adc
int
nop
add
inc
add
add
xor
mov
cmp
popl
xor
mov
mov
mov
jp
repz
add
shll
mov
mov
xchg
insb
cmpsb
dec
shufps
add
jns
fidivrl
push
and
add
dec
fdivrs
mov
in
jb
mov
jmp
add
push
aas
mov
lods
popf
add
mov
inc
subl
leave
xchg
xor
mov
inc
add
outsb
addb
loope
bound
mov
mov
call
imul
xchg
popf
jns
mov
data16
and
jo
mov
push
add
test
ljmp
sti
mov
jo
mov
std
add
popl
add
mov
add
inc
sub
mov
mov
enter
mov
add
mov
add
push
cmp
dec
pop
dec
outsl
sbb
xor
addb
push
jae
cmp
jnp
add
sub
push
loopne
mov
ret
xchg
add
add
mov
push
or
add
add
pop
push
lcall
mov
add
push
inc
dec
sub
add
out
scas
adc
movsl
adc
mov
pop
add
push
mov
test
jo
mov
test
sub
insl
insl
jle
push
add
sti
cmp
mov
add
mov
adc
mov
dec
xchg
add
add
lock
xor
mov
and
popf
push
or
sbb
pop
in
add
das
sbb
mov
mov
xlat
mov
int3
xor
mov
xor
add
aas
outsb
stos
mov
bswap
mov
add
sub
stos
es
popf
sbb
pushl
sbb
inc
dec
mov
jbe
mov
int
cmp
sbb
pop
sbb
lods
mov
dec
sub
dec
nop
add
inc
add
dec
and
sahf
mov
cmpsl
push
in
mov
mov
sub
ret
pop
mov
jge
mov
add
mov
jle
add
enter
jbe
mov
lcall
clc
outsb
nop
add
mov
pop
mov
jl
add
jne
cmp
and
add
scas
shll
shrl
add
aas
push
add
and
lods
shl
imul
repz
dec
insb
lds
mov
xor
mov
outsb
je
add
jmp
mov
in
je
add
xor
mov
sub
mull
jl
cmp
wrmsr
add
sbb
leave
lods
out
mov
cmp
jo
mov
loop
mov
and
addb
and
mov
loope
jmp
or
addb
mov
ss
lret
dec
into
adc
jno
test
mov
xchg
imul
add
enter
mov
bound
mov
xchg
and
inc
add
std
call
mov
xor
in
lock
mov
data16
xchg
in
jns
mov
movsb
push
loop
mov
dec
in
lds
testb
push
dec
lcall
mov
jb
mov
cmp
mov
cs
pop
xor
mov
mov
mov
push
add
mov
sbb
gs
sub
mov
sub
jl
xor
mov
testb
sub
hlt
lds
pop
sub
addb
pop
ja
pop
mov
mov
push
pop
jne
std
fiadds
mov
rolb
jb
mov
add
fistpll
mov
mull
fcoms
push
rol
ss
out
loop
mov
int3
jle
nop
add
add
stc
push
add
add
sbb
out
xchg
xor
repz
cmp
mov
out
scas
xchg
das
mov
mov
push
rolb
mov
mov
mov
daa
sahf
mov
inc
movsb
subl
ficompl
add
and
outsl
movsb
out
shrl
sahf
push
jbe
jb
mov
addb
sbb
mov
mov
sub
inc
test
add
or
xlat
adc
in
leave
xchg
xorl
aaa
jmp
jecxz
jne
bound
mov
sub
addb
push
test
sub
fcomps
je
add
ljmp
jmp
dec
mov
repnz
or
push
in
test
icebp
movsb
pop
bound
mov
dec
rolb
mov
push
xchg
aas
mov
loop
mov
push
popa
mov
fcompl
inc
or
xchg
inc
add
in
dec
jno
dec
cmp
add
and
clc
mov
enter
pushf
dec
inc
add
add
imul
and
xchg
push
add
add
in
das
push
cmpl
or
add
add
add
mov
xchg
add
cmp
push
mov
mov
les
enter
ja
jl
adc
cmpsb
pop
xlat
shll
add
ficomps
iret
push
pop
and
mov
push
jecxz
xchg
xchg
stos
pop
mov
mov
mov
push
pop
adc
dec
pop
push
lcall
xor
dec
ljmp
call
xor
loopne
mov
out
xchg
lds
lods
hlt
push
pop
jbe
add
add
mov
dec
out
and
aas
dec
push
push
ljmp
mov
adc
dec
pusha
add
pop
and
sub
pop
shll
add
mov
xchg
inc
add
rolb
mov
arpl
mov
pusha
add
shrl
push
push
nop
add
enter
mov
mov
out
lea
clc
mov
mov
mov
mov
cmp
jbe
and
adc
adc
add
daa
push
enter
push
cmpsb
push
mov
cs
stc
ffreep
cmp
xor
dec
flds
add
mov
popa
cmc
mov
sbb
jne
sar
data16
decb
add
inc
ss
idivl
cs
add
das
std
jbe
jb
mov
push
add
pop
inc
mov
mov
ret
les
imul
jl
aam
scas
xchg
lahf
addl
adc
add
fsubrs
mov
movsb
push
mov
add
iret
in
js
push
add
mov
mov
fsubrp
jno
xor
mov
test
add
aas
inc
testb
jae
adc
gs
sub
rolb
mov
or
mov
enter
cltd
pop
mov
pop
inc
stos
or
mov
icebp
and
cmp
out
std
popf
mov
dec
jmp
ret
cld
and
mov
add
add
repz
mov
sub
add
clc
jge
xchg
xor
frstor
in
addb
loop
mov
add
cli
int3
push
cs
pop
aas
test
dec
in
jo
mov
add
add
mov
scas
sahf
xchg
sahf
cmp
cmc
insb
call
stos
jnp
lcall
jne
inc
in
add
mov
pop
mov
mov
leave
data16
pop
scas
in
add
add
les
add
ljmp
jle
or
mov
jns
pop
mov
mov
cmp
add
mov
cltd
outsl
jo
mov
leave
je
dec
xchg
gs
mov
mov
add
fcoml
scas
cmp
xor
mov
mov
add
nop
add
mov
mov
push
xlat
pop
xchg
add
pop
mulb
scas
xor
mov
inc
pop
inc
loopew
add
xchg
fsubrs
add
ficoml
outsl
js
sti
xor
rolb
mov
in
jbe
sbbl
sbb
clc
cmp
push
pop
mov
add
loopne
mov
incl
mov
add
scas
cld
sbb
add
cmp
dec
cmc
stc
cltd
mov
cmp
sti
ss
pop
lea
add
inc
xchg
adc
mov
addr16
push
add
ret
jb
mov
fisubs
js
movsl
push
add
inc
inc
cltd
stc
rolb
mov
mov
mov
mov
push
ja
xor
rolb
mov
loope
inc
add
add
xchg
cs
and
jno
out
int
xor
mov
push
add
add
mov
add
add
mov
sub
movsl
test
jbe
inc
out
js
adc
dec
mov
xor
mov
mov
mov
mov
jle
jge
add
cmp
les
loopne
mov
and
mov
into
xor
add
pop
sub
adc
mov
add
dec
mov
add
mov
popf
mov
push
inc
add
pop
sub
add
stos
mov
into
out
daa
dec
ja
test
push
add
mov
add
out
jbe
add
lods
stc
cltd
jne
cld
inc
inc
push
mov
add
rolb
dec
repz
mov
mov
inc
movsb
pop
int3
or
cltd
out
or
aaa
mov
das
cs
jae
sub
cmc
cmpsl
imul
neg
lods
in
pushf
pop
je
mov
adc
add
add
sub
in
sti
or
rorl
lods
iret
sbb
jne
std
inc
add
xor
mov
clc
xchg
cltd
cmpsl
int3
xchg
xchg
ret
loopne
mov
xchg
add
xor
outsl
mov
pop
jb
mov
iret
push
fwait
cs
mov
mov
adc
dec
daa
xchg
add
pop
mov
xlat
sbb
leave
mov
mov
mov
repnz
cmp
mov
dec
cmp
add
mov
mov
add
fildl
mov
add
add
add
rcll
fsts
arpl
add
mov
jnp
jg
aaa
push
jge
ret
addb
sbb
sub
sbb
mov
mov
popa
xor
mov
xor
mov
xlat
and
add
stos
rolb
mov
mov
les
sub
mov
rol
sbb
mov
incb
mov
lahf
pop
push
sub
inc
mov
sti
mov
in
clc
mov
mov
inc
mov
jge
incl
adc
pop
fs
jecxz
shll
iret
push
or
inc
add
add
xchg
mov
mov
add
mov
add
mov
add
add
or
add
mov
test
jmp
mov
cltd
inc
std
pushf
stos
rcll
test
cmpsl
or
lret
mov
ss
add
pop
inc
in
cld
cld
iret
sbb
xchg
fadds
in
out
jmp
jmp
jbe
shll
rolb
ljmp
mov
add
mov
pusha
add
sbb
ret
cmc
imul
cmpsl
adc
inc
or
fwait
or
pushf
sub
add
mov
add
mov
mov
add
mov
adc
mov
add
shrl
mov
mov
mov
mov
push
lods
dec
push
dec
add
sub
mov
sbb
push
cmpl
mov
mov
fistps
add
add
add
mov
cmpsb
iret
sbb
js
jg
push
add
mov
mov
add
popa
mov
sub
jno
add
out
pop
je
jbe
lret
xor
fs
xchg
jbe
sub
out
inc
sub
pop
xlat
inc
jo
mov
shl
enter
cmpsb
mov
loop
mov
mov
addb
scas
stc
das
dec
fcomps
mov
in
pushf
iret
cmpsb
fimull
inc
mov
add
inc
add
mov
xlat
mov
out
jne
inc
loope
out
shll
mov
lods
cmp
mov
jnp
xor
dec
lea
jae
das
push
or
rolb
mov
sbb
xor
mov
jne
push
lret
add
fcomps
xor
or
mov
dec
popf
repz
div
add
cmpsl
dec
sbb
inc
adc
int3
hlt
xor
sbb
out
dec
adc
mov
jp
xchg
loop
mov
xchg
nop
add
nop
add
loope
add
mov
jl
mov
add
push
xor
mov
sbb
inc
jge
add
add
lret
add
rolb
lret
cmp
inc
jo
mov
ds
inc
fnstenv
add
sub
sbb
mov
dec
jmp
push
push
out
jge
mov
add
adc
mov
test
mov
cs
loope
dec
push
add
dec
clc
leave
xor
gs
mov
mov
nop
add
add
pop
insl
rolb
sub
ret
or
in
movsl
mov
add
rolb
cmp
pop
jae
push
and
popf
and
or
add
lods
xchg
cmp
ss
add
notb
jnp
mov
mov
or
sub
pop
aas
rolb
movsb
xor
mov
test
add
mov
cli
dec
and
mov
adc
lahf
jne
and
mov
and
fsubs
push
pusha
add
push
lcall
insb
test
sub
add
xchg
mov
pop
outsb
inc
xlat
jmp
into
fadds
mov
out
add
jnp
leave
sbb
xor
mov
negb
mov
jb
mov
repz
dec
lock
pop
rcr
je
hlt
pop
adc
popf
hlt
mov
xor
mov
jns
or
lds
mov
add
mov
add
fidivrs
mov
sub
aam
or
jns
insb
cmp
sarl
push
add
push
imul
or
add
mov
scas
jns
add
insl
jg
int
imulb
add
mov
add
mov
addb
xchg
rolb
mov
add
mov
movsb
lods
mov
mov
xor
mov
shll
clc
xchg
lock
push
popa
ljmp
sub
mov
int
cmc
repz
das
sub
addb
std
call
rolb
mov
add
not
fwait
test
jne
ja
sub
mov
rol
add
mov
add
sti
mov
incb
add
or
in
aaa
out
xchg
fisubrs
arpl
in
into
aaa
jp
push
cmp
sahf
cmp
add
xchg
cmc
and
add
mov
add
dec
cmp
addb
jno
dec
xchg
xlat
xor
mov
add
mov
add
jo
mov
sbb
nop
add
adc
dec
dec
xor
pop
xchg
add
mov
mov
cs
pshufw
es
leave
and
and
cmpsb
pop
xchg
cltd
mov
jae
jnp
cwtl
mov
stos
bt
insb
mov
sub
lods
lods
xchg
mov
jle
ret
sarl
xchg
fists
gs
mov
cmp
or
push
inc
test
repnz
add
mov
rolb
mov
aad
xlat
cld
or
push
decl
sub
pop
mov
mov
bound
mov
sub
ret
jbe
dec
inc
sbb
add
mov
xchg
rorl
cmc
jl
add
mov
mov
mov
mov
dec
popf
aad
pop
imul
jecxz
lret
mov
push
mov
mov
in
add
cmovl
xor
mov
sub
xchg
pop
cs
leave
sti
les
xchg
clc
out
addb
mov
adc
mov
addb
aad
test
hlt
out
test
jp
mov
push
add
call
push
test
sub
push
jns
test
xor
call
mov
add
fstpl
test
pop
dec
in
cmp
add
shll
stc
xorl
xchg
ffreep
mov
adc
mov
int3
mov
and
jp
pop
and
mov
lods
addl
pop
xchg
push
pusha
add
adc
adc
mov
int3
sub
pop
and
mov
mov
dec
sub
pop
add
loop
mov
ret
jl
pop
mov
adc
roll
clc
push
mov
mov
pop
cmp
cmp
ds
cmp
add
xor
mov
add
push
add
mov
lods
push
adc
pop
es
frstor
cld
dec
push
add
push
mov
xchg
xor
add
xor
cs
icebp
imul
push
popf
inc
sbb
xchg
sub
sbb
adc
out
test
mov
pop
lahf
scas
mov
addr16
jmp
scas
and
mov
mov
add
mov
mov
sub
add
xchg
xor
out
add
mov
mov
and
adc
dec
cmp
pop
stos
rolb
mov
mov
dec
jne
push
scas
out
xchg
loopne
mov
push
decb
jmp
sbb
cmpsb
imul
add
xchg
push
add
test
add
or
xor
out
in
stos
pop
xchg
leave
test
sbb
add
mov
add
stos
mov
stc
inc
add
cmp
add
add
dec
wbinvd
xor
add
xor
or
add
push
add
stc
int3
aas
push
jnp
add
sahf
inc
dec
add
dec
sar
frstor
mov
xlat
pop
push
repnz
ja
mov
stc
ds
inc
add
add
add
stos
mov
add
out
lds
add
inc
add
cmpsb
cmp
add
and
mov
jp
or
add
fidivs
sarl
mov
mov
mov
cmpsb
enter
pushf
fnstsw
leave
imul
mulb
add
add
hlt
aad
aaa
mov
push
add
fcomps
push
sbb
cmp
call
das
sub
mov
add
daa
xchg
add
mov
adc
add
jb
mov
add
push
movsl
sti
int3
rolb
ja
cld
sub
adc
mov
push
jp
or
inc
inc
out
mov
ljmp
add
jmp
inc
push
add
adc
popa
inc
and
add
gs
push
add
cmpl
fisttps
rorl
pop
daa
dec
outsb
dec
imul
xchg
add
add
adc
das
test
xor
rolb
mov
lret
fwait
inc
xor
mov
jb
mov
lds
les
lcall
mov
jmp
add
mov
add
add
mov
mov
fistl
les
iret
sbb
mov
add
add
mov
xor
and
mov
fs
inc
jnp
mov
add
mov
push
mov
nop
leave
jmp
mov
add
add
jecxz
add
clc
repnz
nop
cld
jae
add
add
add
mov
jbe
lea
clc
repnz
nop
cld
jae
loop
adc
inc
add
mov
nop
leave
jmp
add
mov
rolb
mov
add
insb
inc
jb
clc
repnz
nop
cld
jae
push
inc
pop
add
add
push
mov
nop
leave
jmp
inc
fimull
push
lock
sbb
dec
sub
mov
inc
add
add
loop
adc
mov
push
mov
xchg
ret
mov
add
pusha
add
add
adc
repnz
nop
cld
jae
add
pop
test
out
xor
push
mov
nop
leave
jmp
add
js
fmuls
mov
sub
cmp
inc
add
xchg
mov
add
das
push
clc
repnz
nop
cld
jae
add
sub
adc
nop
cld
jae
cli
xchg
cli
mov
mov
clc
repnz
nop
cld
jae
xchg
hlt
dec
push
mov
add
imul
mov
add
dec
add
clc
repnz
nop
cld
jae
xchg
add
add
push
mov
xchg
ret
add
xchg
mov
add
clc
repnz
nop
cld
jae
mov
cmpsb
push
and
repnz
nop
cld
jae
clc
xchg
add
jmp
repnz
nop
cld
jae
push
dec
mov
lods
or
add
add
jp
add
xor
push
mov
xchg
ret
add
push
jmp
push
jae
push
add
cmp
clc
repnz
nop
cld
jae
clc
add
mov
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
add
add
clc
or
add
clc
repnz
nop
cld
jae
xchg
and
add
mov
loop
push
mov
xchg
ret
add
pop
add
repz
push
mov
nop
leave
jmp
jp
add
add
mov
mov
xchg
ret
or
inc
sti
jp
xor
int
cmc
sbb
add
add
add
add
ficoml
add
das
push
clc
repnz
nop
cld
jae
add
adc
sub
repnz
nop
cld
jae
add
dec
pop
adc
stc
clc
repnz
nop
cld
jae
add
add
pop
add
add
cmp
clc
repnz
nop
cld
jae
inc
add
jmp
repz
mov
nop
leave
jmp
popa
add
loope
lea
push
mov
xchg
ret
mov
add
add
adc
nop
cld
jae
add
add
enter
not
push
mov
nop
leave
jmp
add
add
push
mov
push
mov
xchg
ret
add
das
pop
push
mov
clc
repnz
nop
cld
jae
add
js
push
xchg
mov
and
clc
repnz
nop
cld
jae
js
xor
loopne
fucompp
icebp
adc
add
popa
pop
add
add
test
push
mov
nop
leave
jmp
ficoml
adc
add
repnz
nop
cld
jae
enter
xchg
add
pop
insl
call
clc
repnz
nop
cld
jae
sub
sti
add
nop
cld
jae
push
movsl
clc
add
add
push
add
clc
add
in
nop
leave
jmp
mov
push
push
add
loopne
outsb
mov
clc
repnz
nop
cld
jae
inc
add
add
cmpl
in
nop
leave
jmp
inc
mov
loop
clc
repnz
nop
cld
jae
popa
ret
js
inc
or
inc
and
repnz
nop
cld
jae
add
add
mov
sbb
push
mov
nop
leave
jmp
add
add
add
mov
clc
repnz
nop
cld
jae
add
mov
mov
nop
leave
jmp
add
adc
and
clc
repnz
nop
cld
jae
add
sbb
push
add
in
outsb
mov
clc
repnz
nop
cld
jae
add
add
enter
mov
clc
repnz
nop
cld
jae
add
cli
xor
clc
repnz
nop
cld
jae
fisubrl
jp
mov
push
push
add
jae
mov
clc
repnz
nop
cld
jae
pop
mov
clc
and
scas
call
clc
repnz
nop
cld
jae
and
mov
add
add
clc
repnz
nop
cld
jae
add
add
test
add
in
cmc
and
nop
nop
cld
jae
ret
test
popa
int
movb
mov
xchg
ret
adc
add
mov
push
push
mov
xchg
ret
and
add
or
nop
nop
cld
jae
add
xchg
mov
inc
popa
mov
repnz
nop
cld
jae
mov
add
pop
add
call
push
mov
nop
leave
jmp
add
add
sbb
add
repnz
nop
cld
jae
pop
popa
test
push
mov
fstl
mov
xchg
ret
push
push
mov
loop
clc
push
inc
dec
pusha
clc
repnz
nop
cld
jae
mov
clc
add
push
cmp
pop
cld
inc
add
add
loope
push
add
rep
clc
repnz
nop
cld
jae
add
in
cli
add
call
clc
repnz
nop
cld
jae
jp
lock
push
js
push
add
mov
nop
leave
jmp
adc
add
aaa
xchg
movsb
push
add
dec
or
in
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
add
add
loop
mov
push
mov
or
add
push
add
ljmp
mov
clc
repnz
nop
cld
jae
fiaddl
add
adc
push
xchg
sbb
add
add
add
adc
add
add
inc
push
mov
xchg
ret
inc
and
loope
adc
push
mov
aas
or
add
repnz
mov
mov
xchg
ret
add
add
add
into
mov
push
mov
nop
leave
jmp
add
add
xor
adc
dec
push
push
mov
xchg
ret
add
ficompl
add
bound
mov
cmp
clc
repnz
nop
cld
jae
mov
mov
jmp
mov
je
repnz
nop
cld
jae
mov
add
lds
stos
xor
clc
repnz
nop
cld
jae
add
add
and
push
mov
xchg
ret
cli
adc
xchg
mov
nop
leave
jmp
mov
add
or
movsl
push
mov
nop
leave
jmp
sub
add
xchg
jmp
stos
push
mov
nop
leave
jmp
ret
clc
add
ficompl
add
clc
repnz
nop
cld
jae
add
add
adc
adc
in
nop
leave
jmp
add
add
ret
push
add
xor
inc
add
add
add
aad
add
clc
repnz
nop
cld
jae
cli
add
mov
add
mov
clc
repnz
nop
cld
jae
add
add
mov
sar
repnz
nop
cld
jae
xchg
lock
add
xor
clc
repnz
nop
cld
jae
js
fidivl
mov
inc
add
mov
enter
mov
clc
repnz
nop
cld
jae
mov
fidivrl
inc
and
mov
stos
notl
in
nop
leave
jmp
sti
xchg
subl
jmp
add
add
mov
add
clc
repnz
nop
cld
jae
add
test
outsl
arpl
add
repnz
nop
cld
jae
add
mov
add
push
mov
xchg
ret
mov
add
add
inc
add
add
push
mov
xchg
ret
cli
xor
inc
ret
add
add
clc
repnz
nop
cld
jae
loope
inc
mov
add
ret
cmp
mov
nop
leave
jmp
xchg
add
mov
call
and
add
pusha
add
daa
inc
sbb
rclb
nop
leave
jmp
sti
push
mov
clc
and
pusha
add
repnz
nop
cld
jae
pop
mov
das
xchg
mov
mov
enter
nop
leave
jmp
dec
add
lock
add
push
mov
xchg
ret
add
add
and
push
mov
xchg
ret
jmp
add
test
repnz
nop
cld
jae
add
pop
add
add
lret
pop
push
mov
xchg
ret
adc
add
fiaddl
dec
ret
clc
repnz
nop
cld
jae
enter
jp
push
enter
repnz
nop
cld
jae
add
pop
sti
dec
push
push
mov
xchg
ret
adc
add
add
and
add
push
clc
repnz
nop
cld
jae
add
loopne
mov
mov
shlb
mov
xchg
ret
test
mov
sti
and
clc
repnz
nop
cld
jae
mov
mov
pop
push
push
mov
xchg
ret
inc
add
adc
add
out
popa
clc
repnz
nop
cld
jae
push
inc
add
sti
das
and
repnz
nop
cld
jae
add
clc
add
nop
add
clc
repnz
nop
cld
jae
dec
xor
xchg
add
push
mov
popl
negb
cmpsb
icebp
imul
add
out
movzwl
clc
repnz
nop
cld
jae
xchg
add
test
push
jmp
xchg
add
enter
mov
add
push
in
loop
mov
clc
repnz
nop
cld
jae
sti
add
nop
nop
cld
jae
add
clc
add
push
mov
nop
leave
jmp
in
and
sub
add
js
fcoms
sub
inc
add
mov
enter
inc
dec
push
push
mov
xchg
ret
add
adc
or
in
nop
leave
jmp
cli
add
inc
loopne
jp
stos
clc
repnz
nop
cld
jae
add
xor
add
add
sti
add
add
in
nop
leave
jmp
dec
js
cli
push
mov
nop
nop
cld
jae
popa
add
or
add
clc
repnz
nop
cld
jae
in
add
xchg
push
pop
xor
push
mov
xchg
ret
mov
add
mov
or
push
mov
nop
leave
jmp
mov
clc
repnz
nop
cld
jae
js
pop
add
pop
add
nop
add
xor
nop
cld
jae
add
add
out
in
add
add
sub
loop
add
jmp
push
mov
nop
leave
jmp
dec
push
add
mov
jecxz
daa
leave
push
clc
repnz
nop
cld
jae
add
xchg
lcall
repnz
nop
cld
jae
mov
push
adc
cmp
nop
leave
jmp
add
movsl
add
pop
loop
xchg
add
or
add
repnz
nop
cld
jae
dec
add
jmp
repnz
nop
cld
jae
jp
mov
mov
ficoms
repnz
nop
cld
jae
mov
and
lock
repnz
nop
cld
jae
add
add
sbb
mov
mov
xchg
ret
add
daa
mov
mov
xchg
ret
add
add
ret
mov
pop
clc
repnz
nop
cld
jae
push
xchg
add
repz
xor
push
mov
xchg
ret
cli
adc
jmp
test
adc
add
in
nop
leave
jmp
movsl
add
dec
xchg
jmp
clc
repnz
nop
cld
jae
xchg
test
test
add
mov
add
clc
repnz
nop
cld
jae
mov
dec
jmp
sbb
repnz
nop
cld
jae
add
enter
out
sub
jmp
add
mov
add
add
ficoml
ficoml
xor
clc
repnz
nop
cld
jae
add
hlt
scas
je
clc
repnz
nop
cld
jae
inc
lods
pop
push
xchg
mov
xchg
ret
add
pop
add
add
cli
push
mov
add
aaa
addr16
add
ja
add
stos
adc
add
repnz
nop
cld
jae
dec
popa
in
into
movzwl
clc
repnz
nop
cld
jae
add
mov
add
nop
nop
cld
jae
add
mov
test
repz
mov
nop
leave
jmp
add
dec
inc
push
mov
add
mov
push
mov
nop
leave
jmp
clc
add
add
mov
clc
repnz
nop
cld
jae
adc
in
push
push
mov
xchg
ret
js
mov
jmp
mov
clc
repnz
nop
cld
jae
add
jmp
mov
xchg
sbb
movsb
push
mov
xchg
ret
add
jp
loop
lock
mov
xchg
ret
lods
lods
adc
xchg
lds
hlt
cli
mov
clc
repnz
nop
cld
jae
dec
adc
inc
add
add
dec
add
repnz
nop
cld
jae
add
das
jmp
lock
repnz
nop
cld
jae
mov
mov
fisttpll
nop
nop
cld
jae
dec
dec
mov
clc
add
add
clc
repnz
nop
cld
jae
sbb
mov
clc
repnz
nop
cld
jae
pop
sub
add
push
push
mov
xchg
ret
xchg
add
adc
add
add
add
repnz
nop
cld
jae
add
inc
add
add
clc
repnz
nop
cld
jae
add
add
add
dec
pop
and
nop
nop
cld
jae
mov
mov
add
mov
clc
repnz
nop
cld
jae
add
cli
mov
add
clc
repnz
nop
cld
jae
adc
mov
dec
inc
adc
nop
cld
jae
adc
mov
js
add
add
in
nop
leave
jmp
adc
sub
push
mov
xchg
ret
dec
test
jmp
inc
loopne
repnz
nop
cld
jae
mov
add
add
addb
add
mov
clc
repnz
nop
cld
jae
pop
ret
sbb
movsb
clc
repnz
nop
cld
jae
add
movsl
add
loope
movsl
lea
nop
nop
cld
jae
adc
movsl
and
mov
push
mov
nop
leave
jmp
mov
js
in
mov
clc
repnz
nop
cld
jae
adc
add
push
addr16
mov
std
call
in
nop
leave
jmp
mov
push
jmp
cmc
call
in
nop
leave
jmp
js
add
pop
pusha
clc
repnz
nop
cld
jae
enter
add
mov
or
mov
xchg
ret
add
dec
add
sub
call
nop
nop
cld
jae
push
mov
add
mov
cmc
or
repnz
nop
cld
jae
xchg
ret
sbb
add
push
clc
repnz
nop
cld
jae
pop
sti
inc
mov
add
clc
repnz
nop
cld
jae
xchg
mov
int
pop
jae
repnz
nop
cld
jae
add
fisttps
sbbb
add
repnz
nop
cld
jae
add
add
push
mov
mov
daa
dec
scas
add
push
and
add
rolb
add
push
mov
nop
leave
jmp
mov
sbb
mov
xchg
ret
push
add
add
add
pop
push
mov
xchg
ret
add
add
dec
cmp
push
mov
nop
leave
jmp
clc
mov
loop
mov
add
adc
in
nop
leave
jmp
add
add
push
mov
xchg
ret
add
xor
add
add
stc
imul
clc
repnz
nop
cld
jae
js
add
mov
mov
clc
repnz
nop
cld
jae
add
add
loopne
sub
sti
inc
add
mov
jp
clc
add
in
je
jmp
lcall
add
adc
push
mov
nop
leave
jmp
add
pop
add
jnp
mov
mov
loopne
test
push
add
clc
repnz
nop
cld
jae
add
mov
test
repnz
nop
cld
jae
add
xchg
in
mov
clc
repnz
nop
cld
jae
inc
adc
add
pop
adc
mov
push
mov
xchg
ret
and
xor
or
add
adc
and
mov
nop
leave
jmp
xchg
add
cmpl
ud0
clc
repnz
nop
cld
jae
and
or
enter
nop
leave
jmp
add
adc
test
mov
mov
push
clc
repnz
nop
cld
jae
dec
adc
mov
sahf
pop
clc
repnz
nop
cld
jae
sub
sub
popa
add
mov
xchg
ret
add
fwait
sub
clc
repnz
nop
cld
jae
mov
add
xchg
jg
push
mov
xchg
ret
dec
lock
add
add
call
push
mov
nop
leave
jmp
dec
push
add
das
push
cli
mov
clc
repnz
nop
cld
jae
add
adc
repnz
nop
cld
jae
push
add
add
test
add
add
clc
repnz
nop
cld
jae
inc
add
add
das
loope
pop
clc
repnz
nop
cld
jae
adc
add
mov
mov
push
adc
mov
mov
cmp
inc
add
add
movsl
enter
int
test
icebp
clc
repnz
nop
cld
jae
add
push
in
je
clc
repnz
nop
cld
jae
add
test
add
push
mov
xchg
ret
mov
add
push
mov
xchg
ret
xor
xchg
push
mov
add
adc
mov
mov
clc
repnz
nop
cld
jae
add
add
mov
add
mov
xchg
ret
push
xchg
add
pop
fisubrl
movsb
push
mov
xchg
ret
js
add
xor
add
push
mov
nop
leave
jmp
mov
mov
pushl
clc
repnz
nop
cld
jae
mov
jmp
xor
add
clc
repnz
nop
cld
jae
loopne
mov
call
clc
repnz
nop
cld
jae
add
xor
sar
jp
jbe
clc
repnz
nop
cld
jae
add
add
jne
mov
push
mov
nop
leave
jmp
test
mov
clc
repnz
nop
cld
jae
add
add
mov
nop
leave
jmp
mov
add
add
jnp
push
mov
nop
leave
jmp
and
add
add
out
mov
clc
repnz
nop
cld
jae
mov
mov
push
mov
xchg
ret
xchg
clc
lock
add
add
add
repnz
nop
cld
jae
add
jne
fs
movsb
sbb
add
add
enter
inc
clc
repnz
nop
cld
jae
enter
push
or
or
repnz
nop
cld
jae
add
add
add
fisttps
nop
cld
jae
add
add
sti
dec
mov
movswl
clc
repnz
nop
cld
jae
jp
add
add
lods
push
mov
xchg
ret
add
add
add
cli
fsubrl
push
mov
nop
leave
jmp
add
add
movsb
xchg
push
push
mov
xchg
ret
dec
xchg
add
call
nop
leave
jmp
add
xchg
popa
clc
xchg
add
adc
repnz
nop
cld
jae
xchg
mov
adc
mov
clc
repnz
nop
cld
jae
add
loopne
add
push
mov
nop
leave
jmp
add
add
add
push
mov
mov
imul
add
iret
adc
add
cli
pop
sub
clc
repnz
nop
cld
jae
inc
sbb
add
xor
mov
add
add
clc
repnz
nop
cld
jae
add
add
sub
push
aas
add
clc
repnz
nop
cld
jae
inc
add
add
add
push
mov
nop
leave
jmp
add
xor
sub
mov
add
rolb
add
add
sub
add
mov
clc
repnz
nop
cld
jae
add
xchg
fcoml
repnz
nop
cld
jae
das
pop
adc
mov
imul
push
mov
nop
leave
jmp
add
add
add
sti
cmpl
push
mov
xchg
ret
cli
clc
loopne
add
mov
repnz
nop
cld
jae
pop
add
add
add
nop
add
call
in
nop
leave
jmp
add
sti
sti
andl
add
clc
repnz
nop
cld
jae
add
inc
mov
add
mov
add
mov
add
inc
movsl
fwait
mov
clc
repnz
nop
cld
jae
pop
add
in
nop
leave
jmp
mov
popa
mov
popa
sarl
add
repnz
nop
cld
jae
xchg
test
clc
repnz
nop
cld
jae
add
loopne
inc
add
dec
call
push
mov
nop
leave
jmp
enter
push
pop
pop
call
clc
repnz
nop
cld
jae
add
jp
add
add
xchg
adc
in
nop
leave
jmp
adc
mov
icebp
xor
mov
mov
nop
leave
jmp
jp
add
jmp
test
adc
add
repnz
nop
cld
jae
fiaddl
lock
mov
nop
nop
cld
jae
push
mov
mov
ret
dec
imul
clc
repnz
nop
cld
jae
test
add
dec
add
add
add
push
mov
nop
leave
jmp
mov
jmp
pop
mov
clc
repnz
nop
cld
jae
add
loopne
ret
dec
stos
clc
repnz
nop
cld
jae
add
adc
add
add
adcb
nop
leave
jmp
xchg
add
add
insb
call
clc
repnz
nop
cld
jae
pop
fiaddl
fimull
nop
cld
jae
adc
lock
xchg
add
out
add
clc
repnz
nop
cld
jae
clc
popa
ret
xor
out
jne
push
mov
nop
leave
jmp
add
and
mov
nop
leave
jmp
add
in
adc
test
mov
nop
leave
jmp
jmp
ret
clc
repnz
nop
cld
jae
add
push
add
push
addr16
repz
mov
xchg
ret
add
add
add
or
and
jmp
inc
testb
and
scas
add
jl
add
stos
mov
clc
repnz
nop
cld
jae
dec
mov
add
xchg
test
clc
repnz
nop
cld
jae
popa
add
ret
add
mov
mov
add
add
mov
xchg
ret
xchg
inc
add
clc
repnz
nop
cld
jae
sti
add
shr
clc
repnz
nop
cld
jae
mov
push
negb
sub
push
mov
xchg
ret
mov
test
test
repnz
nop
cld
jae
add
mov
nop
nop
cld
jae
add
mov
stos
add
push
mov
nop
leave
jmp
loop
add
loop
add
add
repnz
nop
cld
jae
xor
mov
xchg
mov
mov
cwtl
call
push
mov
nop
leave
jmp
loop
mov
mov
add
add
add
clc
repnz
nop
cld
jae
add
add
pop
push
clc
repnz
nop
cld
jae
dec
das
add
add
movsl
dec
mov
clc
repnz
nop
cld
jae
add
add
mov
add
nop
nop
cld
jae
inc
mov
add
push
mov
nop
leave
jmp
sti
mov
push
add
add
cmpl
push
mov
nop
leave
jmp
loope
xchg
push
lock
dec
xchg
clc
repnz
nop
cld
jae
add
adc
mov
nop
nop
cld
jae
push
dec
js
jmp
adcl
in
nop
leave
jmp
adc
inc
xchg
dec
push
mov
pop
add
or
add
lods
jl
add
out
sub
clc
repnz
nop
cld
jae
pop
enter
js
mov
clc
repnz
nop
cld
jae
mov
pop
add
push
imul
call
add
add
add
into
add
clc
repnz
nop
cld
jae
dec
add
mov
push
mov
adc
jo
faddl
push
jno
fisttps
add
jne
mov
clc
repnz
nop
cld
jae
mov
addb
add
repnz
nop
cld
jae
add
mov
jns
inc
adc
repnz
nop
cld
jae
add
add
sbb
cli
push
clc
repnz
nop
cld
jae
clc
inc
mov
push
mov
xchg
ret
adc
lods
mov
mov
mov
repnz
nop
cld
jae
add
push
add
mov
dec
add
repnz
nop
cld
jae
add
add
add
xchg
inc
inc
mov
clc
repnz
nop
cld
jae
push
mov
add
mov
push
mov
nop
leave
jmp
fidivrl
adc
pop
sbb
mov
adc
repnz
nop
cld
jae
jp
add
jmp
call
dec
add
add
jp
add
mov
push
mov
xchg
ret
adc
inc
and
add
and
mov
lret
clc
repnz
nop
cld
jae
inc
push
add
mov
pop
pop
clc
repnz
nop
cld
jae
add
add
mov
enter
mov
add
repnz
nop
cld
jae
add
add
xchg
les
mov
clc
repnz
nop
cld
jae
mov
lods
dec
lock
mov
clc
repnz
nop
cld
jae
add
add
mov
lods
mov
clc
repnz
nop
cld
jae
xchg
add
mov
movsb
sub
nop
nop
cld
jae
add
and
xor
nop
nop
cld
jae
mov
add
add
mov
cmpsb
inc
add
nop
nop
cld
jae
add
add
mov
leave
mov
push
mov
xchg
ret
mov
add
jb
mov
push
clc
repnz
nop
cld
jae
sbb
add
fmull
test
jmp
nop
nop
cld
jae
add
add
rolb
xchg
ret
loop
add
add
xchg
sbb
popa
push
mov
nop
leave
jmp
test
mov
ret
add
mov
add
xchg
ret
clc
mov
add
add
jbe
clc
repnz
nop
cld
jae
lock
adc
out
and
clc
repnz
nop
cld
jae
adc
mov
add
dec
call
clc
repnz
nop
cld
jae
mov
shr
clc
repnz
nop
cld
jae
add
adc
stos
push
push
mov
xchg
ret
add
clc
add
add
roll
add
nop
nop
cld
jae
mov
in
ret
dec
add
repnz
nop
cld
jae
mov
add
adc
ret
clc
repnz
nop
cld
jae
inc
add
popa
cmpsb
inc
add
mov
xchg
ret
add
push
xchg
add
adc
mov
clc
repnz
nop
cld
jae
mov
in
std
mov
clc
repnz
nop
cld
jae
dec
add
jmp
sub
pop
cmp
mov
nop
leave
jmp
adc
add
cld
push
mov
xchg
ret
pop
fiaddl
add
mov
mov
repnz
inc
add
add
inc
add
add
in
add
push
mov
xchg
ret
add
add
loop
add
cmpsb
mov
nop
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
ret
add
loop
cmp
push
mov
nop
leave
jmp
add
add
loope
jmp
clc
repnz
nop
cld
jae
clc
add
xchg
pop
jnp
push
mov
xchg
ret
add
xchg
popa
ja
push
mov
add
sbb
xor
add
add
push
mov
nop
leave
jmp
mov
add
mov
push
mov
nop
leave
jmp
mov
add
add
mov
add
mov
xchg
add
add
adc
add
lcall
add
adc
and
sub
push
mov
xchg
ret
add
sbb
cld
je
clc
repnz
nop
cld
jae
das
xchg
add
nop
leave
jmp
add
clc
add
add
mov
xchg
ret
add
add
loopne
test
dec
insl
add
push
mov
nop
leave
jmp
sti
push
add
clc
mov
xor
int
int
pop
jae
repnz
nop
cld
jae
add
add
add
jmp
add
repnz
nop
cld
jae
mov
and
mov
cmp
jmp
nop
cld
jae
sub
add
add
xor
jo
push
mov
nop
leave
jmp
add
mov
popa
add
mov
nop
leave
jmp
pop
xchg
and
add
add
clc
repnz
nop
cld
jae
add
add
add
insl
mov
clc
repnz
nop
cld
jae
or
clc
repnz
nop
cld
jae
sub
add
mov
clc
repnz
nop
cld
jae
add
imul
nop
nop
cld
jae
add
add
pop
adc
dec
mov
adc
clc
repnz
nop
cld
jae
das
add
ret
mov
jl
and
mov
inc
add
sub
add
test
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
clc
enter
sbb
add
add
add
call
clc
repnz
nop
cld
jae
test
in
scas
jne
clc
repnz
nop
cld
jae
add
mov
je
clc
repnz
nop
cld
jae
adc
sbb
test
repnz
nop
cld
jae
adc
mov
clc
repnz
nop
cld
jae
and
mov
add
or
inc
add
and
add
cltd
mov
clc
repnz
nop
cld
jae
pop
fiaddl
popa
adc
mov
clc
repnz
nop
cld
jae
js
sti
push
add
popa
decb
in
nop
leave
jmp
mov
add
mov
aaa
out
mov
jae
add
sub
clc
repnz
nop
cld
jae
dec
clc
add
test
rclb
dec
rolb
xchg
ret
pop
xchg
add
and
push
fs
repnz
nop
cld
jae
add
test
xchg
popa
rcll
dec
outsl
popa
fs
repnz
nop
cld
jae
dec
adc
add
cmp
mov
nop
leave
jmp
das
add
or
cli
add
add
nop
nop
cld
jae
add
js
fdivr
dec
sub
xor
inc
add
mov
loopne
push
clc
repnz
nop
cld
jae
mov
add
test
add
and
push
mov
nop
leave
jmp
add
xchg
add
mov
clc
repnz
nop
cld
jae
clc
loopne
xor
jne
clc
repnz
nop
cld
jae
js
add
les
clc
repnz
nop
cld
jae
add
add
add
cmp
push
mov
nop
leave
jmp
fiaddl
xchg
add
adc
push
mov
xchg
ret
in
and
push
add
cmc
mov
in
nop
leave
jmp
add
mov
dec
push
mov
xchg
ret
mov
push
add
mov
adc
cmpsl
add
clc
inc
add
add
add
movsl
es
push
add
lea
push
mov
nop
leave
jmp
add
jp
xor
and
push
mov
nop
leave
jmp
push
add
xchg
nop
nop
cld
jae
add
pop
mov
clc
repnz
nop
cld
jae
add
add
add
lock
mov
xchg
ret
inc
sub
xchg
add
or
mov
xchg
ret
movsl
add
add
repnz
nop
cld
jae
add
add
add
loope
pop
push
mov
nop
leave
jmp
loope
loope
add
or
addr16
out
clc
clc
repnz
nop
cld
jae
add
push
mov
repnz
nop
cld
jae
xchg
or
xchg
sub
jmp
fiaddl
sti
mov
add
pop
push
add
add
pop
add
nop
add
push
clc
repnz
nop
cld
jae
mov
mov
dec
push
sbb
sbb
popa
jp
data16
das
add
push
movsl
xchg
xor
clc
repnz
nop
cld
jae
add
add
mov
ret
add
clc
repnz
nop
cld
jae
adc
add
ret
push
mov
nop
leave
jmp
add
add
add
fiaddl
or
loop
clc
repnz
nop
cld
jae
add
mov
add
test
push
mov
xchg
ret
mov
pop
jp
add
fidivrl
push
push
mov
xchg
ret
adc
adc
adc
jne
push
mov
xchg
ret
xchg
cli
roll
mov
nop
leave
jmp
add
in
add
repnz
nop
cld
jae
loop
jmp
dec
mov
push
mov
nop
leave
jmp
add
xchg
sbb
mov
push
clc
repnz
nop
cld
jae
mov
adc
in
cmc
push
add
mov
xchg
ret
add
add
add
nop
nop
cld
jae
add
jmp
add
in
push
mov
xchg
ret
loop
xchg
xchg
mov
clc
repnz
nop
cld
jae
xor
mov
clc
repnz
nop
cld
jae
push
pop
add
add
clc
repnz
nop
cld
jae
pop
xor
add
add
and
add
clc
repnz
nop
cld
jae
add
inc
mov
clc
repnz
nop
cld
jae
add
add
add
or
clc
repnz
nop
cld
jae
push
clc
pop
sti
push
sbb
mov
xchg
ret
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
rolb
aam
jbe
and
clc
repnz
nop
cld
jae
sbb
add
add
imul
jae
ret
mov
repnz
nop
cld
jae
add
add
add
add
add
push
mov
nop
leave
jmp
add
mov
stos
mov
clc
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
add
add
inc
adc
and
push
mov
xchg
ret
mov
add
clc
pop
xchg
jbe
mov
repnz
nop
cld
jae
test
add
add
or
repnz
nop
cld
jae
mov
add
add
xor
out
add
clc
repnz
nop
cld
jae
lock
mov
test
cli
clc
repnz
nop
cld
jae
clc
add
fwait
mov
clc
repnz
nop
cld
jae
sti
loopne
mov
lods
gs
push
clc
push
mov
xchg
ret
jmp
add
add
or
repnz
nop
cld
jae
mov
cli
pop
loop
sti
in
sub
xor
add
clc
repnz
nop
cld
jae
das
adc
repz
pop
clc
repnz
nop
cld
jae
push
sbb
xchg
add
add
inc
movsl
mov
pop
clc
repnz
nop
cld
jae
add
add
mov
push
mov
nop
leave
jmp
add
lea
push
mov
nop
leave
jmp
mov
push
add
add
mov
clc
repnz
nop
cld
jae
fiaddl
add
add
clc
repnz
nop
cld
jae
popa
pop
add
loop
add
clc
repnz
nop
cld
jae
add
das
xor
sti
scas
mov
clc
repnz
nop
cld
jae
add
add
adc
add
add
mov
dec
clc
dec
inc
push
mov
nop
leave
jmp
mov
int
clc
repnz
nop
cld
jae
pop
push
mov
add
das
in
add
fdivr
call
in
nop
leave
jmp
add
test
mov
inc
add
push
xchg
inc
add
add
mov
ja
sub
clc
repnz
nop
cld
jae
dec
add
loop
cmpsl
push
cmp
push
mov
nop
leave
jmp
ret
xchg
add
add
mov
push
mov
xchg
ret
inc
mov
in
sti
clc
mov
cmc
arpl
faddl
in
nop
leave
jmp
push
add
add
add
dec
pushl
push
mov
xchg
ret
xor
mov
and
add
mov
xchg
ret
add
add
loop
outsl
xor
clc
repnz
nop
cld
jae
adc
adc
pushl
jmp
decl
add
add
push
inc
mov
sbb
add
add
repnz
nop
cld
jae
xchg
add
nop
cld
jae
jmp
xchg
add
std
inc
add
add
add
loope
add
cmpl
push
mov
nop
leave
jmp
add
add
pop
push
mov
xchg
ret
mov
push
lock
jmp
push
clc
repnz
nop
cld
jae
dec
in
dec
clc
add
fs
addb
loopne
mov
in
nop
leave
jmp
add
test
mov
repnz
nop
cld
jae
cli
add
add
adc
push
mov
xchg
ret
add
and
add
repz
repnz
nop
cld
jae
dec
das
loop
xchg
inc
mov
shl
push
mov
nop
leave
jmp
add
and
ret
pop
add
push
mov
nop
leave
jmp
add
mov
mov
clc
repnz
nop
cld
jae
add
inc
inc
ljmp
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
mov
lock
add
clc
repnz
nop
cld
jae
add
mov
nop
nop
cld
jae
in
inc
fcmovu
add
mov
push
mov
xchg
ret
xchg
add
xor
push
jbe
jbe
push
mov
addr16
xlat
test
or
lds
stc
dec
sti
add
clc
repnz
nop
cld
jae
inc
add
popa
add
call
in
nop
leave
jmp
add
add
mov
xchg
ret
adc
push
fimull
imul
xchg
ret
add
inc
mov
mov
clc
repnz
nop
cld
jae
inc
adc
pusha
add
in
nop
leave
jmp
movsl
add
add
test
in
nop
leave
jmp
mov
mov
add
nop
nop
cld
jae
add
add
jl
push
mov
nop
leave
jmp
xchg
xchg
mov
pop
lods
dec
add
xor
clc
repnz
nop
cld
jae
add
and
and
clc
repnz
nop
cld
jae
add
add
add
lods
jmp
nop
nop
cld
jae
ficoml
mov
jmp
nop
nop
cld
jae
sti
js
add
pop
sub
and
inc
add
adc
mov
lds
push
push
mov
xchg
ret
xchg
sub
push
mov
out
out
push
xor
movq
add
push
lods
dec
add
clc
repnz
nop
cld
jae
adc
add
add
in
nop
leave
jmp
loop
adc
adc
incl
add
xchg
mov
xchg
mov
test
repnz
nop
cld
jae
add
adc
fisttpl
in
nop
leave
jmp
push
add
inc
add
add
push
mov
nop
leave
jmp
clc
sub
add
jmp
push
clc
repnz
nop
cld
jae
test
mov
leave
push
mov
nop
leave
jmp
dec
mov
add
sub
repnz
nop
cld
jae
mov
lock
rolb
mov
add
clc
repnz
nop
cld
jae
adc
test
add
repnz
nop
cld
jae
loop
test
add
mov
add
dec
ss
clc
repnz
nop
cld
jae
fiaddl
repnz
nop
cld
jae
add
add
add
int3
mov
push
mov
nop
leave
jmp
mov
and
add
xchg
add
clc
repnz
nop
cld
jae
add
popa
xchg
pusha
clc
repnz
nop
cld
jae
add
add
and
add
aaa
outsb
add
clc
repnz
nop
cld
jae
xchg
add
xbegin
jae
xchg
loope
adc
adc
repnz
nop
cld
jae
movsl
add
sbb
mov
movzwl
clc
repnz
nop
cld
jae
fisubl
add
clc
repnz
nop
cld
jae
lods
add
add
pop
xchg
xor
mov
push
mov
nop
leave
jmp
adc
mov
pop
xor
clc
repnz
nop
cld
jae
add
cltd
jne
clc
repnz
nop
cld
jae
add
loopne
add
clc
repnz
nop
cld
jae
pop
pop
add
in
mov
push
push
mov
nop
leave
jmp
lock
pop
clc
and
lock
movswl
clc
repnz
nop
cld
jae
sbb
jne
clc
repnz
nop
cld
jae
push
adc
icebp
fiaddl
add
movsl
mov
sti
mov
xor
hlt
inc
add
mov
clc
repnz
nop
cld
jae
lods
add
add
and
push
mov
xchg
ret
mov
add
add
cli
and
mov
nop
cld
jae
add
adc
jl
clc
repnz
nop
cld
jae
popa
loope
mov
mov
in
mov
clc
repnz
nop
cld
jae
push
add
push
add
jo
mov
rcl
add
clc
repnz
nop
cld
jae
mov
add
test
clc
repnz
nop
cld
jae
pop
loopne
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
inc
add
mov
repnz
nop
cld
jae
lods
and
sti
pop
add
iret
mov
clc
repnz
nop
cld
jae
clc
add
test
in
jmp
nop
cld
jae
fiaddl
add
mov
dec
dec
mov
lods
clc
repnz
nop
cld
jae
loopne
add
imul
nop
cld
jae
add
adc
mov
clc
repnz
nop
cld
jae
lods
dec
add
jmp
add
inc
sti
push
xchg
sbb
jae
add
popa
add
jp
sbb
cmp
repnz
nop
cld
jae
test
xor
pop
test
push
mov
xchg
ret
add
pop
add
loop
mov
rcll
std
inc
add
loopne
add
sbb
add
je
clc
repnz
nop
cld
jae
clc
in
loope
xor
push
mov
xchg
ret
mov
xchg
add
add
add
push
push
mov
xchg
ret
push
add
add
xor
mov
nop
add
add
clc
repnz
nop
cld
jae
add
push
add
nop
nop
cld
jae
js
add
push
add
mov
adc
mov
in
add
add
clc
repnz
nop
cld
jae
mov
clc
repnz
nop
cld
jae
add
add
inc
xchg
pop
add
jmp
add
xchg
loop
enter
lods
mov
add
mov
push
push
mov
xchg
ret
xchg
add
xchg
jno
ret
jp
jne
push
mov
xchg
ret
add
add
loope
push
cld
mov
push
mov
nop
leave
jmp
push
add
ret
mov
repnz
nop
cld
jae
add
popa
add
mov
add
repnz
nop
cld
jae
add
fiaddl
cmpl
in
nop
leave
jmp
add
add
cld
lea
clc
repnz
nop
cld
jae
push
add
mov
scas
loop
pop
and
mov
jle
and
mov
add
cwtl
cli
cmp
jg
je
je
mov
cli
into
ljmp
xor
aaa
and
pusha
add
push
and
add
mov
sub
mov
sbb
in
adc
mov
cmpsl
popa
sub
xchg
push
jne
into
push
add
add
pushf
arpl
mov
sub
xchg
out
fisttps
add
push
imul
shll
jecxz
fistps
jno
and
mov
addb
mov
inc
add
add
sub
add
lods
roll
add
mov
aad
aas
movsl
mov
lods
xor
mov
pop
sbb
add
mov
ja
movsl
nop
add
sbb
add
mov
inc
add
fsubr
mull
add
jg
add
addb
or
xchg
or
enter
ljmp
mov
mov
cmpsb
mov
xchg
iret
rorl
mov
jae
incb
sbb
jle
in
dec
call
xor
mov
jno
pusha
add
dec
cmpsl
cmpsb
add
addr16
jnp
add
out
fs
lods
addb
addb
js
jp
inc
add
mov
out
imul
add
stos
daa
imul
jae
mov
or
cmp
mov
sbb
adc
mov
xor
mov
jecxz
jno
pop
add
int
mov
add
inc
add
mov
mov
pop
xchg
pop
mov
mov
add
mov
stos
out
jne
push
add
mov
mov
stos
mov
cmp
sub
and
xor
mov
imul
sbb
sub
xor
xor
pop
mov
test
and
aaa
rolb
mov
icebp
or
inc
xchg
cmp
mov
outsl
sahf
ja
cmc
clc
add
in
out
movsb
pop
mov
inc
add
adc
mov
ja
sub
lock
push
daa
leave
pop
xchg
gs
mov
add
mov
imul
adc
mov
fnstsw
or
inc
sahf
dec
loop
mov
jl
mov
and
add
cmp
xchg
add
sub
pop
push
cmp
repz
mov
std
push
in
adcl
mov
mov
mov
mov
mov
aas
shrl
push
rcll
add
jg
add
mov
xchg
cmc
stos
xchg
dec
aad
mov
jnp
mov
repz
pop
mov
cld
out
test
mov
loope
inc
in
mov
mov
lds
mov
add
sarl
pushf
dec
inc
mov
push
sbb
or
add
dec
das
and
popa
movsb
subl
scas
inc
pop
test
mov
out
sub
mov
sbb
mov
cmpsl
in
je
or
xchg
jnp
dec
cmc
or
add
mov
andl
mov
jle
xchg
add
jo
mov
nop
add
adc
aas
lock
push
mov
ret
repz
rol
sub
scas
adc
xchg
shll
mov
or
popa
sub
in
push
lods
pop
lods
or
into
mov
test
add
mov
mov
add
xlat
pop
sub
dec
or
mov
mov
add
add
xor
add
push
jb
mov
into
lods
outsl
mov
pop
addl
pusha
add
arpl
sub
xchg
aad
mov
inc
jle
jnp
add
mov
push
pop
add
xchg
pushf
push
leave
dec
pop
scas
or
stos
test
mov
or
sub
sbbl
mov
mov
jle
aaa
das
data16
int3
xchg
sbb
xchg
sub
push
mov
add
and
mov
mov
mov
xor
mov
cwtd
icebp
cmp
xchg
xchg
pop
or
mov
pushf
or
mov
popa
pusha
add
mov
dec
shll
add
sbb
icebp
sub
mov
and
add
test
arpl
mov
dec
mov
push
bound
mov
clc
mov
push
cmp
xor
mov
rcrl
push
addr16
dec
xchg
ja
xchg
aam
add
push
add
push
xchg
cmp
add
aam
xchg
jae
call
mov
mov
or
dec
add
dec
push
sbb
add
pop
les
je
int
cmpsl
test
adc
mov
push
adc
mov
or
jecxz
mov
mov
mov
mov
add
push
stos
jns
mov
inc
inc
aas
lock
xchg
add
mov
rolb
mov
lcall
add
mov
inc
add
test
repnz
mov
dec
mov
add
pop
mov
mov
add
add
mov
mov
add
jae
sbb
xlat
mov
add
xchg
cmp
cmp
and
mov
outsl
dec
push
adc
push
popa
mov
sbb
xchg
push
inc
add
mov
fisttpl
mov
xchg
jecxz
push
xor
add
aaa
xchg
pop
adc
add
mov
in
jmp
jns
sub
xor
mov
inc
loope
mov
mov
add
mov
add
std
dec
adc
xor
mov
shll
mov
mov
pop
test
in
dec
xchg
fnstcw
ja
lds
adc
mov
stc
leave
mov
and
mov
movsb
nop
add
pusha
add
jbe
test
add
mov
addb
std
mov
push
xchg
sbb
adc
in
push
jg
xchg
cmpsl
xlat
mov
mov
loopne
mov
xor
sub
repnz
mov
push
xlat
jle
popf
jo
mov
push
xchg
icebp
pop
in
push
mov
loop
mov
mov
mov
mov
loop
mov
add
notb
mul
test
test
nop
add
add
ljmp
ret
lret
push
xchg
push
mov
xchg
loop
mov
mov
dec
sub
xor
mov
mov
xchg
mov
add
xchg
dec
imul
push
and
add
add
mov
leave
sar
cmp
mov
mov
sbb
jnp
and
mov
or
sahf
add
add
inc
push
adc
fbstp
das
push
test
cmp
rcll
add
aad
mov
add
decl
cltd
xchg
xchg
pop
dec
push
fnstenv
pop
fmull
in
addb
push
add
xchg
cmp
call
js
and
into
dec
loope
iret
test
daa
add
cmp
or
cmc
mov
mov
sbb
add
jg
inc
add
mov
addr16
push
lock
adc
lret
aad
fsubl
add
into
es
psubq
push
add
push
jnp
popa
or
es
test
pop
ss
push
and
addb
fnstenv
jmp
cli
xchg
ret
les
inc
iret
pop
mov
add
pusha
add
mov
rolb
adc
packuswb
and
mov
test
dec
movsb
addb
pop
idiv
mov
add
jae
adc
jno
xor
jno
mov
add
add
xchg
mov
lret
lock
jle
hlt
push
in
sbb
int3
sbb
adc
add
add
fsubrl
mov
mov
inc
pop
in
popa
dec
wrmsr
add
mov
addb
sbb
jecxz
out
add
cwtl
das
jg
push
clc
ret
popa
xor
es
aad
iret
inc
add
cmpsl
xor
dec
int3
adcl
xchg
push
pop
inc
arpl
pop
inc
push
pop
dec
and
inc
add
nop
add
mov
and
mov
addl
scas
mov
mov
mov
in
fsincos
lods
or
add
pop
out
adc
mov
mov
mull
dec
mov
mov
cmpsl
sbb
lret
movsl
shrl
and
ret
add
mov
xchg
add
out
test
add
das
xchg
or
fidivrl
sub
je
int
lods
repnz
fsubrs
mov
jnp
stos
xchg
push
mov
mov
adc
inc
add
mov
xchg
mov
mov
iret
inc
add
or
cmp
push
add
xor
jne,pt
iret
gs
cli
mov
insb
cld
in
jl
push
pop
pop
push
adcl
inc
add
xlat
lock
ret
add
mov
cmp
jbe
add
mov
ss
xchg
mov
and
add
cld
lds
add
add
mov
xchg
out
lcall
mov
add
mov
psubb
push
in
in
imul
addb
sub
mov
sub
int3
jle
fsubrl
push
js
cmpsb
sbb
cmp
add
xchg
add
and
mov
add
add
mov
mov
inc
ret
inc
add
ret
ja
pop
sub
loopne
mov
insl
mov
or
mov
adc
mov
imul
jae
fwait
outsl
test
cs
xor
add
add
ficompl
push
stos
mov
inc
add
insl
inc
or
lret
and
mov
sbb
add
inc
mov
mov
xchg
cltd
cltd
mov
add
mov
std
mov
dec
sahf
xchg
ljmp
das
mov
mov
scas
or
add
mov
fildl
inc
addb
mov
fmull
pop
icebp
mov
mov
test
jne
add
sub
mov
sub
lret
add
lcall
lret
and
mov
jne
add
sahf
jns
add
into
mov
out
addb
pop
jnp
mov
out
lods
xchg
xchg
add
mov
test
lock
xchg
in
add
add
inc
add
les
add
in
bound
mov
fldt
xchg
inc
add
cvtdq2ps
or
decb
inc
add
scas
lods
rol
add
mov
xchg
addr16
ss
mov
outsl
ja
push
les
mov
add
sub
js
jp
pop
jle
std
sahf
aam
xchg
fstps
movsb
jb
mov
sub
mov
jecxz
add
cmp
fucomip
mov
icebp
jno
add
push
sub
into
push
jmp
add
add
dec
lock
sub
inc
add
inc
sbb
cmp
lods
mov
pop
bound
mov
mov
aaa
cmp
rolb
mov
add
inc
cmp
test
imul
fwait
aad
add
outsb
cmp
add
pop
fadd
stos
in
fisubrs
mov
movl
mov
push
sbb
add
lea
outsl
icebp
es
mov
into
adc
mov
xchg
loop
mov
movsb
mov
mov
addb
icebp
and
mov
aam
daa
fldcw
call
add
push
mov
pop
inc
add
mov
addb
js
stos
mov
je
add
mov
fisubrs
add
mov
mov
jl
add
xchg
add
ja
cmpsl
bound
mov
idivb
cwtl
and
push
mov
mov
test
add
mov
lcall
push
int
push
pusha
add
add
add
adc
add
mov
test
mov
push
ljmp
mov
repnz
jne
sub
mov
push
add
adc
mov
add
add
std
dec
xchg
add
add
negl
pop
into
in
clc
and
lea
jp
jmp
inc
or
fabs
mov
sub
aad
rolb
mov
push
icebp
cltd
fsubr
pushf
jns
sbb
adcl
add
mov
fcmovbe
add
jmp
clc
cmp
ljmp
add
add
std
fidivrl
or
fldt
fbld
add
fisttpl
xchg
add
in
xor
mov
jg
hlt
mov
incl
mov
js
cmp
and
sbb
cli
mov
add
add
push
repnz
outsb
sub
lods
inc
add
sbb
xor
in
test
loopne
mov
je
enter
xchg
or
mov
mov
mov
add
inc
into
je
and
popl
add
data16
mov
add
pop
sub
in
mov
jb
mov
aad
lcall
cmp
mov
mov
rolb
mov
push
mov
ljmp
mov
adc
mov
stc
adc
mov
add
mov
add
fstl
push
xchg
mov
imul
inc
icebp
imulb
and
push
fisubs
mov
fwait
test
bound
mov
push
add
mov
xor
and
mov
mov
je
xchg
test
ljmp
xchg
repz
add
addr16
movq
pushf
icebp
mov
add
mov
mov
inc
adc
xchg
add
push
dec
addb
shl
push
flds
les
mov
outsb
call
inc
inc
add
enter
mov
int3
inc
pop
enter
ja
sub
test
shl
dec
xor
aad
in
cmp
popl
add
mov
ja
xchg
jecxz
lret
sub
mov
cmp
and
mov
add
jb
mov
insl
lcall
cmp
mov
mov
adc
mov
add
xchg
add
push
es
xchg
mov
adc
or
js
xchg
dec
loop
mov
call
xchg
mov
push
sub
add
mov
rolb
push
sub
fidivs
add
repnz
and
mov
lea
aaa
fadds
mov
xchg
xor
jecxz
ret
repz
mov
cwtl
movsl
mov
sub
inc
add
data16
add
fdiv
mov
loopne
mov
cmp
fmuls
lods
lret
xchg
and
fwait
jge
dec
je
jl
out
and
imul
fcmovu
xor
ret
shr
js
leave
aaa
or
in
test
add
adc
mov
xchg
int
popf
lcall
add
sub
push
xor
mov
add
call
les
add
mov
lods
scas
in
cmpsl
cmp
mov
pop
cmp
mov
push
push
js
mov
mov
arpl
das
sahf
jmp
mov
in
inc
mov
dec
push
js
repz
ret
aas
or
mov
xor
imulb
movb
cmp
add
stos
call
adc
cmp
adc
mov
ficompl
and
cmp
add
add
add
mov
adc
lds
mov
mov
add
sti
xchg
rolb
mov
sahf
movsl
popa
leave
pop
pop
sub
and
orl
rolb
mov
or
stc
add
fiaddl
int3
cmp
add
mov
mov
xchg
outsb
xorl
lods
sbb
jb
mov
and
test
add
add
mov
mov
sub
aad
lret
pop
jmp
pushf
adc
jno
dec
cltd
jnp
jbe
push
xchg
jns
cltd
mov
mov
lret
push
add
dec
mov
mov
out
dec
and
mov
add
lahf
pop
repnz
flds
addb
jle
mov
mov
xor
js
inc
add
xchg
test
scas
jge
aaa
mov
repnz
inc
cmp
add
adc
ficompl
adc
mov
add
add
clc
mov
pusha
add
add
mov
in
push
addb
clc
loope
push
adc
mov
or
fstl
mov
in
mov
mov
add
add
addb
lods
daa
loopne
mov
cmc
ss
les
sbb
mov
fldenv
or
sub
add
push
jb
mov
ljmp
sub
cmpl
rcrl
xchg
cmpsb
sbb
sub
sub
cmp
lods
cltd
stos
xor
mov
call
mov
xchg
cltd
sbb
popl
inc
test
loope
add
jle
pop
add
mov
cltd
mov
pop
fsubrs
push
cwtl
pop
mov
int
int3
sbb
addr16
mov
loop
mov
mov
mov
fs
inc
ljmp
jbe
popa
int
add
xchg
jnp
cmp
jmp
add
iret
fcomps
xchg
sbb
mov
cltd
xchg
aas
fisttpll
add
pop
popf
nop
add
adc
lock
sti
lods
fstps
test
mov
add
enter
scas
pop
sahf
out
sub
xor
ss
mov
das
call
outsl
loop
mov
add
mov
test
add
cmp
stos
arpl
iret
test
mov
mov
mov
pop
cs
lahf
lcall
jno
cs
mov
lea
add
dec
testb
ret
rorl
dec
push
loope
push
test
lea
out
push
sti
mov
add
mov
mov
mov
imul
mov
xor
addb
push
mov
fnsave
sahf
pop
push
xor
add
mov
outsl
fwait
push
movsb
inc
inc
add
cmp
add
pusha
add
adc
mov
repnz
lahf
and
add
jle
loope
rolb
mov
add
negb
addr16
push
xchg
ss
mov
push
or
mov
mov
jmp
add
mov
jb
mov
mov
cmp
inc
lods
fcompl
and
pop
jg
in
ret
lret
add
ja
jne
icebp
dec
nop
add
idiv
push
loop
mov
jecxz
adc
push
add
lret
sbb
cmp
sub
outsl
cmpsl
jge
ja
addl
add
xchg
leave
mov
inc
xchg
test
push
int
add
mov
mov
push
and
mov
inc
or
add
and
add
or
xchg
cmp
sbb
rolb
mov
lds
inc
cmp
in
lods
pop
stos
jl
jle
xchg
pusha
add
jmp
les
inc
add
mov
repnz
pop
addb
xchg
mov
cmpsl
mov
xchg
cmp
xor
mov
mov
jo
mov
jmp
in
mov
sub
push
xchg
imul
mov
dec
int
add
int3
loop
mov
add
mov
add
fistl
jg
or
mov
les
add
jg
iret
or
or
mov
mov
inc
test
js
outsl
lods
sub
out
pusha
add
mov
jmp
pop
push
cld
pop
aaa
aam
enter
add
fiaddl
add
stc
push
dec
xchg
mov
push
mull
xor
addb
xor
add
cltd
mov
add
xor
mov
jp
repnz
out
mov
sahf
out
xor
cmpsl
sbb
inc
loopne
mov
repnz
xor
cld
ss
add
mov
or
cmc
xchg
jne
enter
push
into
jne
mov
dec
cmp
jno
xchg
add
push
add
add
mov
fmull
ja
es
call
addl
mov
pop
rolb
mov
add
add
dec
mov
jnp
add
aad
jb
mov
add
jge
mov
mov
pop
loopne
mov
xor
dec
shrl
add
add
lret
mov
xor
mov
inc
scas
fdivs
cwtl
ja
rolb
mov
pushf
sbb
int
fdivl
mov
inc
add
dec
js
aam
cmpsb
test
fsubr
xor
cld
cmpsl
fnstenv
clc
inc
in
xor
mov
aas
lret
fidivl
add
mov
add
sbb
mov
mov
xchg
in
push
sbb
xchg
out
xchg
xor
or
add
sbb
mov
outsb
das
pop
in
inc
mov
jl
xor
mov
jmp
and
pop
mov
mov
cmp
cmp
mov
fisubs
mov
clc
adc
mov
dec
call
sub
stos
cltd
mov
mov
push
shrl
add
daa
scas
enter
or
mov
mov
in
das
ja
push
or
pop
push
add
sbb
mov
popa
push
mov
push
lahf
hlt
pop
in
popa
out
xchg
xchg
sahf
les
inc
add
or
imul
je
test
ss
xchg
cmp
xor
mov
pushf
addb
sbb
rolb
mov
push
mov
mov
add
add
enter
out
add
mov
mov
testl
push
add
sahf
out
mov
inc
add
add
and
mov
add
pop
fcmovb
sbb
mov
add
add
mov
mov
cmp
mov
add
rolb
mov
or
or
mov
add
adcl
imul
pop
ds
push
add
jno
mov
imul
xchg
push
repnz
pushf
into
or
mov
loopne
mov
add
ret
fisubrs
add
insb
mov
das
mov
mov
push
divb
mov
mov
add
push
out
mov
sbb
cmp
or
jae
xchg
sbb
add
push
xchg
iret
les
fmull
add
xchg
jbe
xchg
adc
mov
movsl
push
add
movl
pop
pop
notl
adc
xchg
mov
cld
jno
scas
jmp
dec
dec
push
inc
add
mov
mov
cmp
add
loope
movsl
cmp
xchg
or
add
mov
rolb
xlat
imul
mov
movsb
cmc
or
add
mov
pop
repz
add
mov
in
out
jnp
js
movsl
orl
in
outsl
scas
repnz
cmp
mov
addl
inc
add
mov
add
repz
fadds
cmc
push
sti
mov
mov
and
mov
mov
add
add
mov
mov
add
mov
add
mov
xchg
call
sub
ljmp
jmp
mov
adc
mov
sahf
adc
cmp
jmp
add
dec
fsubrp
jecxz
cmp
sub
and
mov
mov
shl
xchg
mov
ret
xchg
add
mov
mov
add
das
jns
push
imul
jnp
and
cmp
or
cli
add
repnz
add
pop
fs
dec
pcmpeqb
mov
notb
sub
in
pop
xchg
sbb
in
ljmp
hlt
in
or
int3
scas
bound
mov
pop
xor
xchg
push
add
mov
das
in
bound
mov
add
je
ljmp
sub
add
dec
sbb
cld
cmp
xchg
cli
int3
dec
inc
xchg
cmpsb
and
mov
insl
testl
divb
fildl
repnz
or
jecxz
scas
sub
add
js
mov
mov
mov
mov
inc
add
imulb
or
imul
mov
mov
or
mov
add
aas
or
inc
popa
or
push
fwait
insb
cmpsl
repz
or
call
lret
inc
testb
pop
sbb
inc
inc
int3
push
and
in
repz
sbb
adc
push
enter
mov
cmp
jmp
repz
add
mov
mov
mov
mov
sub
add
mov
pop
pop
test
icebp
out
ljmp
insl
imul
sub
jl
add
fcomp
fsubs
mov
add
mov
add
in
repnz
jnp
jmp
sub
das
test
loopne
mov
ss
inc
jb
mov
mov
scas
cli
fwait
cld
daa
adc
addr16
mov
mov
pop
rolb
mov
sub
add
push
jbe
jb
mov
jnp
pop
mov
pop
inc
fidivs
dec
lock
mov
out
fildll
addb
addr16
mov
pop
sub
add
sub
xlat
nop
add
fwait
push
aam
je
add
stos
sbb
loopne
mov
adc
fwait
stc
repnz
or
mov
mov
rolb
mov
stc
imul
jmp
jle
inc
add
scas
xor
sub
roll
dec
or
push
dec
cltd
push
add
mov
add
mov
and
mov
add
add
mov
adc
fiadds
push
lcall
add
aam
fmulp
dec
mov
add
inc
stos
lods
or
addr16
mov
mov
mov
cmp
fcmovnu
fmull
add
fidivrs
call
adc
inc
xchg
inc
push
fadd
jmp
pop
cli
inc
add
add
mov
push
loope
and
mov
ror
adcl
cmpsb
lods
jp
std
sti
pcmpeqw
leave
xchg
stos
xor
js
jle
adc
mov
jg
add
out
xchg
cmp
mov
outsb
fstpt
inc
add
mov
add
jns
out
fdivs
adc
addb
int
jno
push
daa
mov
sub
repnz
mov
mov
mov
xchg
xchg
jnp
mul
sbb
sub
leave
cld
adc
push
jecxz
add
mov
arpl
repz
sub
push
or
sub
adc
mov
js
push
jmp
mov
lahf
ret
cmc
push
sub
cmp
loop
mov
push
lret
and
mov
clc
sbb
movsl
xchg
ljmp
fisttps
push
add
mov
add
sub
jae
mov
xchg
rorl
sbb
aad
out
clc
test
sbb
jle
aaa
pusha
add
or
pop
or
test
in
inc
mov
jg
addb
mov
pop
sti
sub
sbb
sbb
mov
test
jb
mov
xor
push
add
push
jle
push
add
sub
add
pusha
add
and
fidivrl
dec
stc
xchg
add
lret
xor
lahf
mov
inc
arpl
add
mov
mov
mov
push
sbb
inc
xchg
add
mov
fstps
pop
rolb
jge
push
mov
or
mov
in
mov
add
mov
loopne
mov
lret
xor
mov
dec
cmpsb
xchg
mov
cmpsl
push
dec
inc
add
jmp
rolb
mov
pushf
out
aad
push
add
jg
inc
and
jne
mov
jmp
add
mov
push
stc
sub
xor
mov
add
push
add
rolb
mov
in
fs
jle
dec
loope
sahf
push
or
add
add
bound
mov
pusha
add
mov
icebp
jg
xor
mov
mov
push
rolb
mov
sbb
mov
mov
push
aad
lret
fwait
rolb
mov
mov
sbb
addr16
jne
inc
add
mov
lds
mov
cmp
dec
adc
add
mov
pop
cwtl
dec
xor
mov
mov
and
lds
xor
cltd
mov
and
sbb
addb
pop
jno
sbb
sbb
in
pop
fs
std
mov
cli
mov
sub
jp
rolb
mov
add
cmc
cmp
dec
mov
xchg
pop
dec
jl
add
out
mov
xchg
add
out
fwait
cmp
sub
mov
mov
jmp
cmp
dec
aam
jp
ftst
mov
mov
sbb
add
add
jno
add
mov
mov
ds
jbe
and
mov
mov
inc
cmpsl
fwait
lahf
in
cmp
dec
ret
or
dec
push
repz
pop
adc
xchg
dec
or
loope
ret
in
adc
mov
bound
mov
add
ficoms
data16
sahf
jnp
and
add
rol
bound
mov
mov
cmpsb
mov
mov
stc
fmuls
xchg
add
add
add
add
es
fistl
insb
roll
addb
mov
lods
daa
lret
push
add
lds
push
ja
insl
je
cmc
and
mov
mov
add
mov
outsb
ljmp
loopne
mov
add
cmp
daa
inc
jmp
sub
mov
test
nop
add
inc
mov
cli
cld
push
mov
lds
add
sti
cs
jbe
xchg
mov
ds
cs
ret
outsb
lret
xchg
outsb
pop
loopne
mov
push
nop
add
xorl
xchg
inc
icebp
fistps
js
add
and
mov
bound
mov
mov
add
test
dec
add
into
je
adc
fwait
insl
inc
add
or
cli
jns
add
into
jmp
aad
imul
les
lods
adc
loope
popa
mov
mov
and
mov
fucomp
in
xchg
inc
xor
jle
in
xchg
loope
lret
jnp
fdiv
add
rolb
mov
add
xor
mov
mov
xchg
mov
cmc
pop
adc
mov
mov
addb
cmp
and
inc
add
add
cmp
jl
insl
cmc
filds
nop
add
xchg
pop
test
add
cltd
mov
cltd
idiv
lock
add
and
aad
mov
lods
popa
bound
mov
mov
add
push
add
add
test
add
xchg
mov
add
cmp
jne
mov
mov
add
pop
int
leave
adc
mov
lods
iret
fisubrl
jnp
loope
add
and
test
inc
or
out
dec
xchg
cmp
cs
into
lods
out
lds
pop
popa
xchg
mov
xor
stos
sub
stos
lds
mov
xchg
lods
pop
sbb
sbb
outsb
xchg
adc
adc
mov
rolb
mov
out
and
stos
xor
xor
test
xchg
fimuls
fwait
in
xchg
add
cmp
mov
push
dec
jnp
dec
mov
repnz
xor
add
fnstsw
addb
call
icebp
lahf
rolb
mov
rolb
dec
mov
shl
ret
lods
repnz
mov
mov
fwait
nop
add
mov
add
jle
std
sub
sahf
ret
mov
adc
imul
sti
fdivrl
and
dec
push
lahf
jbe
ss
xchg
adc
dec
cmp
push
scas
cmp
mov
cmp
add
mov
shr
xchg
xchg
je
mov
mov
cltd
imul
sub
add
mov
mov
ss
add
cmp
sub
mov
cmp
jne
xchg
mov
mov
mov
ss
adc
in
mov
xchg
push
loope
add
das
mov
in
add
add
insb
or
inc
add
or
cmpl
insb
push
add
mov
dec
push
xchg
addr16
int3
ret
inc
aam
xchg
stc
aad
loopne
mov
or
movsb
xchg
cmp
cmc
enter
add
mov
and
imul
cmp
test
in
jo
mov
divl
add
cmp
mov
sbb
mov
test
sub
jl
decl
cmp
push
stos
xchg
pop
jmp
psrlq
add
add
push
xor
mov
adc
add
pop
jo
mov
push
add
xchg
testl
in
jmp
lret
or
cli
loope
fwait
pop
arpl
dec
arpl
fisttpll
sbb
add
add
mov
mov
enter
outsb
push
add
add
add
ret
inc
adc
in
test
xchg
loopne
mov
add
pop
add
or
in
jae
lds
aaa
cmp
push
adc
mov
mov
mov
dec
sub
test
lods
lcall
setae
fistl
fwait
push
popf
mov
push
sbb
mov
enter
mov
mov
push
cmp
pop
pop
rolb
aad
lods
hlt
mov
mov
mov
sub
pop
loope
push
ret
movsl
push
xchg
add
insb
adc
mov
or
cmp
mov
bsf
jns
mov
dec
sub
xchg
sub
loop
mov
jp
cli
jmp
add
pop
xchg
mov
adc
loope
xchg
or
inc
dec
pop
jb
mov
cmp
jle
pop
cli
repz
xchg
aaa
sbb
push
rcl
fists
lea
add
stos
lea
pusha
add
pop
and
mov
add
icebp
xchg
mov
jle
jge
jno
inc
add
or
add
mov
mov
sub
mov
xor
es
add
inc
test
or
hlt
test
xchg
add
popa
pop
cld
fistpl
rcll
mov
mov
mov
add
add
mov
adc
ret
xchg
scas
xor
sub
and
movsb
jno
stc
fsub
add
xor
scas
sbb
sbb
xor
mov
inc
jne
in
mov
mov
and
popa
test
ja
idiv
test
add
fdivs
add
mov
push
push
fwait
or
add
mov
add
mov
fs
mov
outsl
addb
into
mov
ljmp
fs
mov
lahf
push
movsb
pop
cmp
or
push
mov
add
add
mov
mov
mov
lret
jl
sarl
in
inc
je
dec
mov
movsl
dec
lahf
xchg
aas
out
or
cli
js
pop
sbb
add
clc
out
push
adc
mov
sbb
xchg
lods
ljmp
outsl
fisttps
jbe
movsb
ljmp
add
fcomp
mov
push
add
xchg
adc
mov
add
cmp
jg
lahf
adc
test
push
mov
outsl
lods
xor
stc
dec
fstp
dec
add
mov
mov
xor
add
add
and
mov
push
xchg
aaa
iret
lock
push
xor
mov
mov
dec
cmp
mov
mov
add
lods
repz
cmpl
outsl
mov
movsl
mov
pop
mov
push
fisttpll
enter
outsb
test
push
test
add
and
mov
mov
das
cmpl
pop
outsb
inc
add
bound
mov
addb
cmpsb
push
mov
dec
std
jae
add
mov
push
mov
stos
nop
add
sbb
mov
fisttpll
inc
or
repz
mov
popa
jecxz
mov
stos
fldl
pop
pop
lods
test
int3
out
push
jmp
jle
add
aam
fistps
xchg
mov
mov
jle
inc
dec
outsb
rcl
ds
mov
dec
pop
cltd
sbb
loope
xor
and
test
jne
addb
push
add
ret
shrl
jecxz
adc
ret
ljmp
mov
add
add
adc
mov
pop
push
sbb
in
jle
add
imul
inc
movl
mov
mov
inc
xchg
pop
cmpsl
fwait
test
add
aad
jge
sbb
pop
or
pop
std
int3
mov
and
mov
jg
leave
mov
add
push
add
mov
and
pop
rolb
jae
xor
mov
loop
mov
roll
test
push
leave
mov
rolb
cs
add
xchg
mov
mov
mov
je
xor
inc
and
add
mov
loope
add
push
aam
push
les
mov
adc
clc
or
push
mov
add
outsl
add
add
aad
insb
ljmp
in
mov
daa
testb
add
mov
mov
mov
mov
pop
pop
fucomi
inc
add
mov
add
push
xchg
push
lret
jo
mov
add
mov
iret
jae
in
push
out
pop
xorl
ja
out
mov
enter
mov
cltd
stc
clc
dec
testb
mov
sbb
add
lods
inc
add
mov
mov
mov
mov
add
outsl
mov
fisubl
loopne
mov
xchg
out
sub
loop
mov
dec
test
dec
dec
xor
mov
mov
pop
xor
mov
mov
cmpsl
pop
or
hlt
cmp
test
scas
jle
out
add
test
xchg
add
lods
mull
and
mov
add
mov
mov
mov
add
add
jle
or
or
gs
cld
scas
push
cmp
add
testl
cwtl
xchg
mov
bound
mov
ret
das
dec
cmp
int
jns
or
mov
add
mov
sub
aaa
and
adc
add
xchg
je
dec
jb
mov
pop
neg
push
hlt
nop
add
add
mov
push
add
push
aam
mov
mov
push
or
mov
dec
addb
or
add
pop
loop
mov
in
inc
add
mov
ss
sbb
sub
xorl
js
add
and
imul
cmp
rdtsc
mov
js
rolb
movsb
test
mov
ret
loop
mov
jmp
adc
mov
add
add
dec
xor
mov
inc
add
or
mov
sahf
rolb
mov
imul
mov
xchg
repz
icebp
push
xor
jge
add
repnz
popf
lcall
in
iret
xchg
stos
lret
cmpsl
rolb
mov
arpl
mov
add
add
sub
mov
mov
dec
xor
stos
mov
add
ja
push
jno
adc
pop
icebp
aas
lret
and
mov
push
pop
inc
negl
add
mov
nop
add
pusha
add
addb
sbb
scas
lea
push
dec
pop
pop
jle
adc
mov
test
mov
push
pop
sub
addb
push
push
mov
shl
and
mov
mov
cmp
jmp
adc
or
mov
mov
mov
push
or
lret
pop
addb
lcall
mov
pop
and
jmp
jmp
add
mov
lock
movsl
nop
add
xchg
aam
sub
add
add
mov
add
cmp
add
repnz
pop
inc
addb
cmpl
std
imul
data16
lret
nop
add
in
xor
mov
add
mov
mov
xchg
mov
adc
mov
iret
jae
mov
movb
mov
ffreep
add
add
inc
popf
in
push
jge
cmp
xor
mov
adc
mov
jg
fisubrs
movsb
pop
cwtl
ss
jns
repnz
jecxz
call
add
mov
or
fdiv
cltd
mov
imul
repz
add
mov
mov
aaa
call
pop
lahf
stos
int
popa
daa
dec
and
mov
stc
xor
lret
popa
and
jns
push
add
outsb
ret
push
adc
mov
data16
pop
sbb
out
xchg
pop
mov
mov
nop
add
outsb
cmpsl
in
or
cmp
mov
sub
add
out
xor
add
arpl
push
sub
add
push
outsl
test
xchg
or
enter
jecxz
add
mov
sub
mov
jb
mov
adc
test
xchg
add
mov
mov
arpl
add
add
add
add
or
add
jmp
imul
sbb
iret
sub
adc
or
mov
cmp
add
mov
dec
sub
stos
clc
movups
mov
sub
enter
push
add
and
movb
aam
push
add
mov
adc
cwtl
stos
hlt
pop
push
inc
leave
sahf
test
les
sub
fildl
add
and
jns
or
xchg
push
xchg
movsb
fcoms
lret
mov
decb
dec
mov
mov
and
mov
icebp
sub
mov
int
fwait
outsb
mov
mov
push
adc
pop
mov
mov
out
shr
push
mov
movsb
daa
jno
add
mov
push
add
jecxz
add
insl
add
lret
fidivrs
pusha
add
push
sub
mov
sub
paddq
add
mov
addb
fdivl
mov
addr16
add
pop
dec
fstpl
push
add
push
inc
lea
stos
or
or
in
pop
loopne
mov
jae
jne
inc
mov
xor
mov
push
add
xchg
jge
add
inc
aam
jle
test
add
add
or
inc
inc
add
jle
add
mov
push
cmp
cwtl
mov
insl
faddp
imul
inc
sbb
daa
inc
and
mov
mov
inc
add
rolb
mov
les
mov
in
cmpsb
pop
sbb
cs
add
dec
or
jnp
js
pop
jns
cwtl
lret
lcall
mov
test
cld
bound
mov
mov
mov
mov
add
jbe
mov
mov
lds
xor
mov
jb
mov
pusha
add
add
mov
lock
push
arpl
leave
fbld
cs
dec
sti
pop
mov
mov
rolb
mov
dec
lea
mov
add
mov
loopne
mov
scas
push
add
ja
popf
clc
pop
fsubl
mov
mov
lods
in
lods
push
add
rolb
mov
aaa
pop
shll
pop
iret
test
addb
adc
jecxz
push
push
ljmp
mov
mov
leave
addb
jecxz
insb
fisubrl
bound
mov
dec
popa
cli
lds
outsl
movsl
sbb
mov
mov
inc
add
adc
and
mov
lret
and
and
mov
and
mov
cld
addr16
pop
in
xchg
add
int3
popf
adc
aas
pusha
add
mov
xchg
add
add
fistpll
sub
lods
negb
dec
mov
mov
push
pop
shr
push
lret
les
mov
insl
orl
ss
or
test
add
sub
outsl
and
mov
mov
or
mov
fbstp
ret
loop
mov
daa
xchg
popf
popf
flds
sub
sahf
dec
cltd
lea
push
gs
push
push
or
push
jne
or
xchg
add
insl
call
jmp
inc
mov
add
es
push
dec
and
mov
cmp
add
rcll
fwait
mov
in
sbb
jl
and
test
aam
adc
mov
or
jmp
lcall
xchg
roll
loop
mov
add
ja
lods
lcall
adc
or
bound
mov
add
adc
mov
mov
mov
popa
fnstsw
fbstp
ret
xor
mov
cmp
outsb
mov
mov
adc
pusha
add
xchg
jge
pusha
add
mov
mov
push
add
mov
insl
adcl
imul
int3
stos
adc
add
mov
mov
xchg
mov
ret
lahf
pop
sub
add
mov
cmp
adc
mov
cltd
rol
xor
mov
call
add
nop
add
mov
jmp
add
mov
add
lods
cvtpi2ps
adc
mov
adc
mov
add
mov
imul
std
stos
mov
mov
out
xorl
mov
add
dec
lcall
add
push
add
cli
insl
mov
mov
imul
xchg
add
mov
rcrl
mov
cmp
add
addb
arpl
sbb
popf
out
add
and
mov
fsubl
sub
pop
aas
jo
mov
cmpsl
sbb
imul
lcall
jecxz
test
cmp
xchg
ret
icebp
mov
rolb
jo
mov
ret
hlt
xchg
add
jle
add
add
or
add
iret
add
imul
mov
jnp
xchg
add
clc
insb
imull
lods
mov
pop
mov
mov
mov
mov
push
iret
jbe
add
mov
shr
sbb
add
cmp
fsubrs
or
fwait
rcrl
mov
add
mov
dec
adc
mov
add
cmpsl
mov
mov
mov
je
pop
mov
add
addb
and
mov
cmp
bound
mov
xchg
ror
cli
cli
and
mov
imull
inc
lcall
adc
icebp
and
mov
sbb
dec
dec
outsb
out
stos
stos
mov
sub
mov
inc
add
addb
adc
lods
mov
cmp
push
mov
int
add
xchg
int3
iret
into
xor
add
jg
dec
xor
add
int3
scas
add
and
insl
sti
sub
xchg
mov
je
in
sbb
mov
mov
insb
pop
fdiv
pop
or
mov
ljmp
cmp
pop
sbb
sub
dec
push
add
arpl
add
mov
add
jmp
sbb
sub
ss
ds
lds
or
add
add
insb
cmp
add
push
in
leave
jge
add
inc
sbb
je
adc
mov
pop
xor
mov
mov
mov
add
jmp
adc
add
icebp
clc
push
movsb
jmp
xchg
dec
test
repnz
adc
mov
push
dec
sbb
or
dec
int3
les
push
jnp,pt
imul
add
movsl
mov
mov
lods
and
mov
pushf
lods
nop
add
sub
xchg
add
std
or
into
jmp
xor
pop
cwtl
mov
call
sub
ja
rolb
mov
inc
jno
add
mov
pop
imul
mov
mov
or
leave
mov
rcrl
add
rolb
out
popl
sub
inc
ljmp
std
dec
in
xchg
add
dec
mov
jne
sub
xor
mov
mov
or
xor
pop
insl
jbe
add
mov
jb
mov
dec
jo
mov
mov
test
sbb
in
ror
xor
cld
sbb
jp
cmp
push
cli
stc
jne
add
andl
imul
fstl
add
das
filds
mov
push
ret
fdivrl
movsb
push
test
mov
mov
add
cmp
sti
mov
push
addb
cmp
dec
adc
push
mov
mov
mov
aas
lds
add
add
pop
or
mov
mov
mov
in
call
jmp
add
add
decb
out
sbb
add
dec
and
mov
pop
add
mov
pop
pushf
xchg
ds
adc
out
jnp
jns
repnz
or
and
mov
scas
pop
cmp
xchg
dec
add
mov
pop
mov
mov
sbb
mov
lods
push
cmp
rolb
mov
mov
add
cmp
cltd
dec
xchg
add
or
int
xchg
movl
cmovs
xchg
add
subl
aam
jae
pusha
add
jl
fimull
addr16
mov
mov
call
jb
mov
dec
xor
inc
xchg
add
sahf
xchg
mov
mov
or
mov
xchg
add
mov
push
add
sub
pop
mov
or
rcr
sti
xchg
sub
out
dec
add
int
xor
outsb
stc
lds
mov
jmp
mov
cli
test
adc
mov
aad
cmc
rolb
fimuls
sub
pop
arpl
and
mov
dec
mov
je
or
insb
rcrl
jmp
fldenv
aam
orl
add
addb
inc
mov
out
scas
sbb
int
aad
inc
pop
rcr
jno
mov
sbb
sbb
enter
add
lock
mov
hlt
cmpsb
jae
sub
rorl
or
mov
and
mov
mov
repz
mov
add
mov
add
mov
clc
cmp
add
bound
mov
mov
push
jnp
in
idivl
push
add
arpl
add
add
repnz
mov
lahf
pop
lret
out
lret
mov
mov
aad
add
mov
repnz
or
mov
mov
xor
mov
and
pop
icebp
sti
cmpl
add
mov
mov
mov
mov
lret
and
popa
in
inc
push
xor
ljmp
push
fmull
and
mov
push
jmp
in
inc
js
xlat
and
xchg
add
mov
add
rolb
jle
int
inc
push
out
pop
call
add
fsubrs
add
repz
in
sbb
sti
and
mov
dec
ljmp
loopne
mov
bound
mov
unpcklps
stos
lahf
push
add
mov
mov
add
pop
mov
mov
testb
mov
popa
sub
test
mov
sti
mov
push
sti
mov
add
add
fdiv
xor
loop
mov
adc
mov
mov
sub
mov
mov
mov
js
add
in
es
out
adc
mov
sbb
mov
addb
xchg
push
cltd
rolb
mov
add
dec
adc
mov
adcl
sub
and
clc
xor
pop
stos
dec
fwait
xor
mov
inc
pop
repnz
call
mov
add
add
cmp
xchg
adc
mov
sbb
sahf
repz
add
mov
test
pop
or
je
fs
inc
add
mov
mov
push
decl
lds
push
cs
add
mov
divl
cld
adc
not
mov
lret
imul
nop
add
lea
cmp
lea
pop
push
fdivrs
jmp
pop
push
dec
push
xor
into
xchg
pop
or
loope
es
dec
aaa
add
mov
add
mov
pop
xor
add
mov
mov
addl
mov
fstpt
clc
jp
dec
stos
jne
test
clc
test
or
cmp
cmovbe
cmc
add
and
addb
addb
lea
dec
push
test
xchg
mov
jno
mov
lods
add
pop
xor
mov
bound
mov
jne
sub
add
hlt
test
out
dec
js
and
add
mov
add
mov
sbb
mov
cmp
mov
jg
xchg
push
adc
ja
xchg
lea
insb
repnz
mov
jp
add
add
jmp
in
xorl
dec
aad
adc
hlt
adcl
paddd
jae
jle
enter
mov
jl
jecxz
lock
call
mov
mov
dec
lcall
sbb
adc
mov
int3
int
inc
cmpl
pop
repz
dec
push
xor
dec
mov
add
pop
outsl
or
add
mov
lcall
adc
mov
inc
push
add
add
push
pop
adc
mov
cmp
add
inc
daa
or
rolb
jb
mov
mov
cmp
push
mov
out
inc
aam
add
push
popa
jecxz
add
push
adc
lea
cmp
jbe
jbe
addb
mull
push
sub
pop
rolb
mov
add
cmp
push
add
add
sbb
ret
lods
rolb
fnstcw
ljmp
add
add
dec
aaa
adc
mov
mov
add
mov
xchg
jo
mov
mov
ficomps
sbb
add
aad
add
aaa
or
pop
stos
hlt
test
sub
and
mov
adc
mov
add
int
push
addb
filds
leave
cwtl
pop
or
sub
cmpsl
rolb
xor
mov
imul
add
mov
mov
push
inc
jbe
mov
jge
add
subl
stos
mov
aas
pop
xor
lret
pop
scas
xchg
or
mov
xchg
in
js
xlat
dec
mov
xchg
scas
jmp
jns
repnz
int3
mov
hlt
movsb
divb
mov
mov
add
fisttpll
xchg
scas
arpl
rolb
mov
push
inc
add
dec
dec
pop
test
lds
daa
mov
mov
xor
mov
add
adc
sbb
mov
add
mov
sti
pop
mov
add
mov
jle
adc
mov
daa
addb
push
lahf
rcrl
ds
xlat
test
arpl
xchg
cmp
jne
lods
fadd
popf
or
dec
dec
rolb
fs
add
xor
mov
jns
lahf
xchg
out
push
xlat
or
xchg
xchg
add
mov
add
adc
mov
add
mov
pop
fdiv
mov
add
mov
push
jae
popf
shl
jo
mov
jge
imul
or
add
lods
fimuls
stos
pusha
add
push
or
test
add
cld
pop
clc
sbb
sahf
sub
sbbl
lds
add
cmpsb
pop
jae
xchg
insl
pop
mov
aas
loopne
mov
inc
mov
enter
mov
out
pop
js
add
dec
sbb
cltd
mov
fs
cmpl
pop
dec
int
jnp
sbb
rolb
mov
add
push
je
das
sub
add
cmp
loope
bound
mov
data16
cmc
mov
cs
loop
mov
out
pushf
jecxz
negb
adc
inc
add
mov
jg
out
mov
push
ja
in
mov
xchg
inc
popf
cmpsb
sub
add
push
dec
int3
and
jnp
sub
cmp
inc
mov
inc
cmp
or
mov
mov
repnz
or
xor
mov
fsubl
repz
out
jnp
fiadds
cmpsl
push
mov
pop
inc
pop
xor
fidivrl
xchg
add
pop
ja
icebp
js
add
mov
lret
jl
push
pop
and
xchg
pop
jae
insb
mov
mov
adc
mov
mov
sahf
xchg
cmp
mov
mov
mov
sbb
inc
xor
rolb
addb
adc
mov
mov
lds
dec
fbstp
mov
loopne
mov
dec
xor
mov
rolb
mov
bound
mov
add
std
pop
mov
rcl
add
pusha
add
ret
adc
lods
push
and
cmp
mov
dec
and
mov
jl
imul
stos
js
fiaddl
jae
mov
cld
inc
lock
mov
dec
fadds
xor
push
mov
cmp
fbld
cltd
out
or
sbb
jae
fwait
in
pop
jge
or
repnz
add
mov
add
inc
test
mov
mov
mov
add
stc
dec
addb
loopne
mov
push
scas
movsl
dec
xchg
mov
hlt
jns
imul
out
inc
fisttpll
fildl
add
add
test
or
add
je
dec
mov
add
test
sbb
add
fiadds
mov
mov
mov
addb
jle
popf
call
cs
xchg
out
test
mov
mov
jnp
rolb
mov
sbb
sahf
dec
ljmp
call
add
mov
push
add
mov
push
mov
or
or
call
lods
inc
je
fidivrs
jle
pop
insl
bound
mov
daa
push
clc
and
fldl
icebp
jo
mov
sbb
add
leave
add
mov
add
adc
mov
mov
cmp
sahf
sbb
adc
add
in
cmp
mov
add
add
adc
sub
aas
or
add
mov
add
mov
pop
popa
imul
mov
mov
in
mov
mov
add
mov
rcl
xor
or
push
and
mov
mov
add
inc
cmp
add
jne
adc
mov
add
dec
int3
and
mov
mov
pop
jo
mov
mov
ljmp
dec
pop
repnz
stos
ret
mov
adc
mov
pop
fsubrs
add
push
push
and
ds
dec
xor
mov
mov
movsb
dec
mov
mov
dec
test
fwait
dec
shrl
repnz
mov
dec
mov
mov
add
jp
clc
cmp
or
mov
push
add
inc
dec
sbb
push
mov
sbb
sub
inc
icebp
xchg
fwait
repz
sbb
add
int3
addb
xchg
mov
add
mov
add
mov
ljmp
mov
sub
mov
lds
mov
jmp
mov
insb
popf
test
mov
decl
sbb
test
scas
ficomps
lret
and
push
jnp
in
jne
jb
mov
add
int
jg
and
cmp
outsl
or
jae
push
pushf
aam
test
adc
cwtl
jmp
push
aaa
adc
mov
xor
lcall
xchg
add
stc
jmp
stos
addb
adc
mov
add
xchg
jno
add
sahf
or
scas
inc
daa
inc
add
sub
add
roll
jnp
add
add
cmpsb
cwtl
insl
pusha
add
add
add
mov
sub
sub
bound
mov
scas
or
pushf
outsl
inc
in
lret
add
jbe
mov
mov
mov
sbb
test
pushl
add
pop
jnp
adc
lock
jl
dec
cmp
data16
cli
push
push
jmp
push
jnp
jecxz
ds
cmp
cmp
scas
cli
and
outsb
adc
mov
push
into
repnz
add
pop
gs
mov
mov
ss
xlat
or
inc
dec
add
sbb
cwtl
xchg
jmp
enter
nop
add
orl
xchg
lds
scas
sub
out
mov
and
call
push
sbb
or
rolb
mov
mov
mov
jbe
push
scas
cwtl
sbb
add
add
or
aaa
pop
sub
inc
mov
cmp
pop
addb
addb
adc
mov
add
rolb
idivl
sbb
add
jnp
xlat
xchg
push
lcall
out
sub
clc
push
imul
xor
adc
mov
unpckhps
into
adc
testb
stos
stos
cs
jmp
adc
mov
ret
cmp
mov
or
sbb
add
dec
incl
mov
and
mov
xor
mov
sub
dec
stos
inc
jmp
ljmp
dec
jle
imul
add
mov
mov
add
cld
and
mov
add
mov
pop
xchg
or
fmull
stos
jne
xlat
or
xlat
insl
in
lret
xrelease
rolb
mov
andl
mov
xchg
enter
mov
rolb
add
xchg
xchg
adc
sbb
loope
pop
inc
sub
add
inc
test
vpsllw
mov
out
xchg
xchg
mov
sbb
nop
add
sub
shll
mov
lock
inc
xchg
cmp
add
enter
sub
add
imul
mov
jnp
sti
jns
jg
imulb
pop
push
cwtl
or
add
aam
aaa
cld
mov
pop
lret
cltd
pop
pop
dec
inc
lods
xor
dec
fistpll
jns
ljmp
bound
mov
aas
lahf
repz
mov
mov
inc
add
lcall
add
addr16
mov
cld
cmc
push
nop
add
xchg
sub
outsl
sbb
jg
test
and
add
rolb
mov
pop
lock
jge
sbb
or
mov
dec
fldlg2
dec
dec
lock
mov
or
ljmp
add
loope
fisubs
pop
fisubl
push
ret
fwait
das
in
push
icebp
cmpsb
push
or
or
mov
add
add
mov
cltd
rolb
mov
adc
mov
popf
cmp
call
jge
cmp
stos
lods
jp
cmpsb
pop
xchg
in
cli
aam
fs
add
popf
push
decl
push
shl
add
jl
pop
adc
mov
sub
ret
cld
insb
xchg
lret
cs
insl
sbb
add
inc
add
mov
mov
mov
lock
inc
in
pop
enter
add
lcall
xchg
jmp
add
push
ret
inc
mov
jnp
out
fs
sahf
dec
test
add
mov
roll
mov
jl
add
push
and
dec
adc
fadds
add
and
mov
add
not
add
jne
sbb
out
rolb
mov
cwtl
jmp
inc
add
and
hlt
jmp
dec
incl
add
xchg
int3
vpsrlw
scas
out
sti
out
fnstsw
movsb
add
imul
icebp
repnz
icebp
inc
adc
mov
cmp
lcall
jno
leave
xor
mov
inc
int3
aaa
and
iret
jle
loop
mov
jge
sbb
cmp
add
loope
cwtl
js
gs
xchg
fistpl
cmc
stos
xor
add
aad
dec
jne
mov
iret
insb
loop
mov
stc
sahf
dec
lret
xchg
jecxz
fisubrl
pop
add
xchg
jns
dec
inc
cmp
add
mov
int3
pop
or
mov
out
lret
pop
inc
mov
dec
inc
add
mov
jmp
testl
adc
mov
cmp
das
jl
push
mov
aas
popa
jmp
movsl
and
add
lret
into
scas
cmp
xor
adcl
push
stc
ss
in
sbb
enter
push
clc
mov
add
aas
aas
popf
out
sub
mov
mov
add
sub
sub
mov
add
ss
ja
fistps
mov
mov
rcr
outsl
xchg
outsb
jmp
loopne
mov
fwait
enter
stc
int3
jne
imull
add
dec
addb
jl
jp
or
imul
nop
add
cwtl
mov
call
pusha
add
add
push
dec
jg
sub
jns
add
add
shrl
jbe
mov
cmp
add
add
mov
mov
or
push
push
push
mov
or
pop
addb
lret
pop
sahf
mov
and
mov
mov
int3
or
push
mov
les
gs
fildll
cmp
jecxz
add
mov
adc
mov
push
or
jb
mov
std
stos
sub
add
pop
push
repz
outsb
xchg
add
ja
and
leave
xchg
jb
mov
jg
xchg
xchg
loopne
mov
cltd
aad
push
add
add
test
mov
mov
add
sbb
mov
mov
divb
mov
aam
push
pusha
add
loopne
mov
add
or
mov
add
mov
rol
cmp
mov
add
sbb
icebp
xor
mov
add
inc
sub
xchg
hlt
daa
xchg
insb
xchg
add
rolb
mov
push
jae
adc
sub
jb
mov
sub
jns
into
push
add
jecxz
add
add
cltd
dec
mov
mov
add
and
mov
cltd
xchg
add
popa
pop
sbb
inc
fnstcw
push
mov
mov
fisttpll
mov
mov
mov
in
xchg
pop
xchg
scas
bound
mov
mov
push
gs
mov
fstps
push
and
mov
jns
sub
and
mov
add
sub
mov
sbb
movsb
and
mov
neg
enter
lods
push
fnstsw
mov
cmp
inc
fdivrs
mov
test
mov
cld
pop
jle
cmp
xlat
call
nop
add
push
mov
add
mov
icebp
icebp
sbb
add
add
ficoms
jb,pt
mov
aaa
loopne
mov
mov
push
enter
cwtl
in
add
add
mov
sub
xor
adc
les
imul
xchg
mov
mov
mov
mov
mov
add
cmp
jecxz
dec
test
jae
repnz
aas
mov
loopne
mov
mov
in
ss
jno
dec
pop
adc
lds
add
add
dec
dec
dec
rolb
mov
inc
jae
stos
rcll
xor
mov
cli
lret
shll
sub
add
jnp
add
mov
mov
add
xor
fucomip
sbb
or
stos
fcomps
rolb
dec
rolb
mov
jp
fcmove
dec
dec
adc
xor
mov
test
xchg
lret
add
mov
movsl
jnp
movsl
push
and
mov
add
out
xchg
repz
imul
jae
add
sbb
push
out
clc
mull
popa
mov
inc
add
dec
lcall
je
scas
mov
push
add
mov
mov
mov
enter
loop
mov
sub
mov
into
inc
out
add
mov
in
sub
mov
popf
aaa
dec
xor
jg
dec
cmc
xor
mov
fsubrs
add
add
cltd
pop
mov
add
stos
dec
mov
mov
add
push
add
mov
scas
and
mov
int
add
adc
xchg
mov
add
cmp
pop
scas
or
jno
addb
popf
std
add
mov
add
test
pop
or
in
clc
mov
lret
mov
mov
push
add
dec
clc
and
enter
add
mov
dec
loope
mov
jbe
das
jns
mov
push
add
sbb
cmp
ljmp
dec
adc
mov
dec
imulb
xor
mov
loop
mov
add
add
add
mov
daa
addr16
ret
mull
mov
xor
mov
mov
loop
mov
fs
mov
pop
addr16
mov
xchg
jl
xchg
out
fldcw
data16
leave
into
in
or
jecxz
lock
xor
mov
adc
add
add
test
add
dec
inc
aas
jp
cmp
xchg
add
cmp
ljmp
add
mov
mov
add
xchg
std
iret
push
jl
out
add
mov
repz
mov
adc
mov
mov
and
sub
xchg
mov
pop
hlt
push
cmp
adc
mov
arpl
xorl
add
push
lcall
push
or
lods
inc
sbb
mov
cmc
adc
mov
add
call
add
inc
addb
mov
adc
mov
outsb
xchg
std
stos
stos
mov
push
add
or
cmc
repnz
pushf
test
test
add
push
push
test
ljmp
rolb
mov
mov
sub
add
xchg
sbb
aaa
add
mov
mov
push
inc
add
jecxz
fildl
add
decb
fmul
enter
mov
add
icebp
lods
mov
xor
mov
push
xor
fucomip
cld
inc
or
stos
repz
sub
xor
ds
push
addb
aaa
sti
pop
xchg
sub
sub
negb
inc
out
mov
mov
mov
pop
cmp
jmp
fidivs
add
leave
stos
push
xor
in
pop
loope
loop
mov
mov
int3
push
lods
mov
add
outsb
aaa
out
ds
add
cmp
add
test
add
cltd
fstpt
or
mov
push
outsb
aad
mov
push
jecxz
inc
add
cmp
mov
mov
pop
fmuls
popf
pop
pop
cmp
xchg
fcomi
pop
aas
cmp
add
sub
push
dec
jl
add
xchg
cmpsl
sti
aad
jge
or
sub
add
scas
pop
add
add
cmpsb
jl
or
dec
mov
mov
pop
and
mov
cmpsl
cwtl
adc
mov
dec
cmp
xchg
setbe
mov
sub
dec
xchg
outsb
daa
nop
add
outsb
xor
in
inc
xor
mov
ja
push
popf
pop
mov
cld
xor
or
pop
sbb
mov
dec
or
mov
dec
cmpsb
fildll
inc
jle
cmp
jnp
lods
pop
xchg
add
xchg
out
xchg
cld
popl
or
adc
mov
add
mov
add
push
jmp
xchg
incl
pop
or
add
jecxz
xchg
push
sar
in
add
mov
mov
mov
pop
xchg
out
faddl
enter
loope
cmpl
xchg
scas
mov
pop
aaa
in
jg
mov
mov
pop
push
mov
push
sbb
lods
inc
lahf
push
add
mov
xlat
sbbl
inc
mov
jp
add
push
mov
mov
add
bound
mov
mov
sbbl
add
rorl
out
jne
jmp
xchg
jle
into
scas
sub
test
xor
mov
pop
mov
cmp
add
mov
add
lock
push
cmp
outsb
mov
lods
push
inc
rcll
sub
add
jno
add
mov
add
push
add
inc
call
scas
push
mov
mov
fildll
sub
mov
jae
repz
mov
in
lea
adc
aas
pop
dec
cmp
sbb
add
inc
add
mov
add
dec
cmpsl
and
mov
andl
mov
mov
bound
mov
arpl
add
rolb
mov
lea
push
mov
sub
mov
aaa
cmp
jg
frstor
mov
js
or
mov
xchg
mov
lods
mov
mov
pop
or
and
push
arpl
add
mov
xchg
js
out
testl
pop
xchg
mul
loopne
mov
inc
lret
mov
rolb
mov
add
mov
xchg
push
dec
inc
add
adc
cmp
sbb
scas
fstps
aaa
inc
add
xor
je
add
xchg
dec
cmp
xchg
mov
lods
inc
add
in
leave
repz
mov
dec
and
mov
and
jo
mov
mov
fcomps
sahf
in
mov
shll
dec
xor
adc
add
jecxz
inc
add
or
imul
mov
dec
loopne
mov
hlt
lea
rolb
mov
mov
mov
jl
pop
jno
cmp
into
xor
mov
add
insl
sub
add
cmp
int
mov
add
push
add
out
int3
jmp
mov
adc
push
add
push
mov
unpcklps
rolb
mov
pop
xor
mov
mov
add
ficoml
or
add
pmuludq
xor
mov
enter
xchg
stos
dec
cmp
pushl
add
add
aaa
add
jns
int3
xchg
add
mov
mov
add
mov
sub
mov
push
inc
add
ss
add
test
cmpsb
mov
fiaddl
sub
gs
mov
fdivl
lods
in
add
mov
add
add
lock
add
mov
or
scas
bound
mov
cmp
cmp
add
jecxz
jmp
insb
aad
arpl
sbb
or
jle
pop
sub
xor
decl
pop
cld
jle
sbb
sti
aam
dec
popf
cmp
jg
loope
sbb
scas
mov
jb
mov
xchg
push
xchg
mov
out
adc
mov
test
aas
mov
sub
cmc
shll
sbb
mov
or
sbb
adc
repnz
add
pusha
add
sbb
notl
adc
and
mov
mov
jb
mov
mov
xor
and
dec
iret
inc
xchg
call
add
rcrl
xchg
orl
into
addb
inc
or
repz
lret
cmpsl
and
mov
fdivl
xchg
in
ja
xor
ja
sbb
add
push
sub
icebp
in
mov
pop
rolb
mov
imul
mov
add
scas
xchg
jbe
stos
dec
lea
push
sbb
outsl
pop
aad
cmp
mov
sub
shll
fidivs
sbb
bound
mov
pop
aad
scas
xor
cli
aad
jecxz
inc
add
add
mov
add
and
imulb
ss
pop
jne
xchg
sbb
pop
push
jns
scas
pop
movsb
jecxz
mov
xor
mov
add
lods
jo
mov
fildll
lods
mov
sub
mov
mov
mov
pop
out
ja
push
jmp
adc
lea
sbb
adc
imul
dec
movsl
jmp
lret
addb
call
lcall
fwait
mov
mov
fs
add
ja
roll
out
pop
out
ja
in
sub
call
ljmp
add
xlat
sbb
mov
add
dec
sti
jge
push
jmp
mov
push
jnp
outsb
fstpt
cmp
inc
mov
mov
addb
sahf
fmull
jge
inc
cmpsl
jle
into
ds
add
ds
and
mov
add
and
movl
add
test
stos
clc
ficomps
ret
adc
mov
mov
adcl
daa
movl
cli
push
xchg
pop
cmpsl
ret
xor
adc
mov
add
mov
add
mov
mov
add
out
in
cs
jg
mov
popf
sbb
push
out
ja
mov
icebp
repnz
mov
add
adc
mov
lcall
mov
decl
sbb
mov
add
xchg
push
xor
dec
or
pop
jno
imul
pushf
pop
testl
cmp
pop
in
je
dec
inc
add
imul
add
sbb
add
in
cmp
add
mov
mov
in
sar
test
add
sbb
loopne
mov
test
ds
scas
push
jg
js
adc
adc
sahf
fildll
add
sbb
mov
add
fisttpll
jae
insl
js
outsl
dec
cltd
mov
add
out
push
add
mov
addr16
and
lds
aas
lret
shrl
adc
adc
fcoms
insb
jl
xlat
xchg
addr16
or
and
mov
mov
pushf
adc
lock
mov
ret
xor
cmp
sbb
sahf
cmp
lock
shl
stos
lret
les
add
pushf
cmp
push
stc
ss
xchg
sbb
add
mov
icebp
xor
loope
xchg
cmp
imul
mov
mov
xor
pop
push
add
aaa
popl
lret
cmp
add
imul
xchg
add
sub
movsb
mov
jb
mov
add
repz
repnz
arpl
xchg
aaa
add
mov
mov
mov
inc
imul
fisubrl
rolb
mov
setp
out
sbb
inc
add
mov
xor
mov
das
mov
int
inc
mov
add
in
ds
loop
mov
mov
jo
mov
mov
shl
mov
mov
pop
outsl
mov
callw
push
pop
rolb
mov
xchg
loopne
mov
inc
addb
mov
add
mov
lcall
mov
mov
lds
adc
mov
aaa
sub
stos
mov
add
lods
aad
test
cmpsl
sarl
rcl
xchg
mov
or
add
sahf
add
addb
fstpt
mov
dec
jno
fistps
insl
lahf
sub
mov
nop
add
addb
ds
push
add
add
mov
cmp
add
and
mov
jbe
jbe
negl
leave
or
rolb
std
rolb
mov
inc
add
add
add
cs
aaa
inc
mov
fidivrl
fbld
inc
add
add
add
add
mov
adc
mov
push
xlat
push
sub
mov
mov
addb
jo
mov
push
outsb
jae
push
movsb
push
rorl
pop
fdivs
inc
add
adc
mov
shl
add
cwtl
cld
adc
rolb
mov
icebp
pop
mov
ljmp
cwtl
add
les
out
mov
add
xchg
add
sti
fistps
xchg
and
std
jo
mov
cmp
sub
dec
jmp
add
in
out
repnz
dec
jno
sbb
imul
and
mov
icebp
adc
mov
lea
add
xor
aaa
rorl
ror
mov
mov
pushf
add
mov
cld
sub
in
cmpsl
add
in
test
mov
not
xor
mov
add
pop
adc
mov
aaa
sahf
aas
stos
mov
jg
add
pop
xor
mov
aam
lds
sub
jg
add
add
pusha
add
cs
femms
lahf
and
cltd
arpl
lret
insb
inc
ds
data16
mov
push
into
aad
mov
xchg
repz
es
int
jnp
add
or
jmp
mov
xor
pop
pop
rolb
mov
shl
pop
inc
in
jns
adc
jo
mov
cmc
add
mov
imul
dec
subl
add
int
fidivrl
test
add
or
sahf
mov
hlt
jge
inc
add
inc
std
add
pop
sbb
mov
test
mov
mov
int3
into
jne
addb
push
ret
dec
and
mov
add
xor
add
lods
bound
mov
dec
hlt
push
dec
lea
mov
mov
push
ficomps
add
mov
int
addb
xlat
idivl
mov
inc
add
adc
mov
xchg
scas
outsl
xchg
mov
add
jb
mov
inc
addb
sbb
mov
mov
mov
mov
shrl
adc
or
pop
outsb
lret
out
stc
fwait
adc
loop
mov
pop
cmp
add
add
bound
mov
leave
add
stos
xor
cmp
imul
mov
movsw
out
add
out
mov
add
pushf
mov
sbb
mov
rolb
mov
push
add
dec
xor
insb
pushf
push
fcomps
mov
add
mov
int
add
mov
inc
or
in
pop
mov
add
add
mov
das
sbb
jle
pop
xor
clc
xor
or
add
push
cmp
fldenv
test
pusha
add
in
sbb
fsubrs
xor
add
dec
out
insb
fucom
mov
mov
mov
sbb
fcoms
jg
sbb
jg
or
pop
sbb
and
mov
jo
mov
fwait
sbb
lock
rolb
mov
scas
jmp
dec
xlat
bswap
jp
add
nop
add
or
ja
mov
adc
cmp
mov
lahf
arpl
push
or
push
icebp
or
sbb
mov
clc
xlat
subl
lcall
out
jg
in
mov
aaa
fisubrl
push
je
arpl
fistpl
adc
push
scas
bound
mov
cltd
lods
sbb
add
jecxz
xor
mov
mov
xorl
mov
stos
xorl
jno
add
xchg
arpl
clc
add
mov
stos
jae
and
mov
out
cmpsl
mov
into
add
mov
mov
mov
add
jnp
xchg
xlat
mov
pop
insb
imul
out
addb
fstps
pextrw
pop
frstor
dec
mov
mov
add
xchg
mov
mov
sbb
in
in
fwait
sub
lock
pop
mov
dec
mov
inc
adc
lods
pop
sub
aaa
pop
aas
pop
rolb
jecxz
inc
sub
cli
and
cltd
push
lahf
mov
mov
ret
jle
inc
icebp
xor
add
add
dec
cmp
imulb
repz
mov
pop
lock
add
std
mov
in
pop
xchg
call
pop
mov
jns
add
lret
aas
and
cmp
mov
add
and
mov
jo
mov
sti
jg
lock
enter
out
in
add
xchg
inc
or
jle
adc
mov
add
mov
dec
mov
mov
xchg
sbb
cmp
mov
jg
or
pop
pop
addb
fisttpl
fs
ret
addb
aaa
cltd
xor
imulb
loopne
mov
add
repnz
sbb
add
lods
lea
sub
add
fs
addb
adc
mov
out
fnstsw
add
pop
jno
into
sti
cli
cmp
xchg
test
jmp
arpl
add
fadds
add
int3
dec
mov
sub
testb
mov
and
mov
xor
pusha
add
add
mov
shll
nop
add
dec
adc
ss
fisubs
rolb
fwait
sbb
mov
dec
fstpl
sarl
repz
nop
add
stc
sub
dec
mov
insb
aaa
and
mov
xor
mov
sbbl
push
sbb
fwait
repz
ds
movsl
sbb
pusha
add
mov
leave
mov
mov
pop
hlt
sbb
adc
lds
jne
daa
js
mov
movsb
pop
fucom
rolb
movsb
leave
pop
and
in
inc
jge
mov
enter
lret
push
sbb
inc
mov
xor
mov
mov
add
sub
dec
or
roll
pop
xlat
cwtl
addb
pop
mov
mov
add
int3
pop
scas
bound
mov
xor
mov
test
stos
faddl
lods
fs
int3
cmp
add
rolb
mov
jp
add
xchg
std
dec
insl
jb
mov
iret
test
add
jo
mov
or
cmp
mov
push
mov
add
mov
jecxz
clc
xlat
mov
jle
adc
cmp
mov
jecxz
add
jl
in
inc
in
fdivs
inc
mov
mov
mov
add
mov
jmp
add
jns
pop
dec
push
je
add
xor
mov
xor
mov
dec
repz
xchg
test
add
mov
inc
add
mov
out
jp
mov
mov
mov
enter
pop
loop
mov
neg
mov
add
mov
xchg
out
add
mov
add
stos
mov
jge
popa
insb
addb
outsb
addr16
iret
outsl
pop
inc
add
mov
add
lcall
dec
push
gs
jle,pt
add
out
addr16
insl
aaa
push
ret
mov
dec
mov
xchg
cmp
adc
outsl
pop
mov
xor
sbb
add
xchg
cmp
add
mov
fdiv
fists
test
inc
in
mov
dec
sub
daa
push
and
mov
jecxz
mov
add
mov
loopne
mov
mov
addl
ljmp
add
lcall
mov
inc
fwait
add
nop
add
aam
inc
push
jno
rolb
in
out
mov
pop
dec
in
mov
rolb
adcl
jb
mov
add
mov
stc
ret
xor
xchg
add
adc
adc
lods
pop
pop
pop
sbb
xlat
test
bound
mov
pop
mull
add
push
out
add
ja
movsb
sarl
rolb
mov
and
add
popa
aas
lret
test
cmp
mov
dec
adc
cs
fcom
stos
adc
dec
xchg
aas
addb
call
pop
cwtl
lock
mov
mov
push
cmp
ficomps
and
loope
movl
outsb
scas
imul
mov
sub
mov
pop
mov
add
mov
mov
loop
mov
xchg
jnp
pop
outsl
lea
outsb
test
mov
add
push
or
inc
call
cmpsb
pop
mov
dec
add
jl
je
sbb
add
dec
push
inc
test
push
push
dec
adc
mov
and
mov
jmp
imul
faddl
setae
lcall
xor
filds
lret
call
mov
add
xchg
jecxz
rolb
mov
into
or
push
into
sbb
and
mov
add
mov
mov
es
sub
adc
jmp
add
or
jmp
mov
insl
bound
mov
and
add
pop
jnp
rolb
cs
pop
and
mov
loop
mov
or
stc
push
adc
or
inc
push
test
cli
pop
in
fmull
imul
lods
adc
mov
pop
jp
xor
add
push
jo
mov
out
push
adcl
mov
mov
add
mov
fs
xor
mov
mov
mov
test
mov
mov
cld
mov
fdivrl
stc
push
sahf
movb
cmp
out
je
int3
cwtl
mov
jle
inc
lods
in
fsubl
iret
xor
mov
push
push
js
jo
mov
pop
inc
dec
pop
or
add
sbb
add
movsb
insl
mov
or
sti
mull
inc
jmp
add
jp
add
fsub
mov
mov
inc
add
test
rolb
mov
add
cmp
sbb
in
pushf
push
adc
adc
sbb
sub
ss
add
addl
icebp
xchg
add
mov
inc
je
rolb
push
mov
adc
ret
outsl
pop
mov
loope,pt
push
cli
cmp
insl
aam
add
pop
dec
out
add
lods
cmpsl
mov
movsb
sbb
test
dec
jno
add
sub
or
mov
add
or
add
pop
pop
xor
jmp
xor
mov
rolb
mov
add
mov
mov
addr16
xor
rolb
mov
add
push
dec
push
stos
cmpsl
xor
jnp
xchg
mov
add
sbb
mov
sbb
test
jb
mov
mov
aaa
push
dec
xor
mov
pop
lcall
xor
mov
fdivrs
test
movsl
insb
lcall
push
inc
mov
jns
popf
jg
lock
ss
xchg
xor
dec
jg
cli
mov
ret
xlat
dec
icebp
ljmp
lcall
xor
mov
mov
call
add
add
inc
sub
popa
cmpsl
mov
nop
add
sbb
leave
loope
fsubl
mov
loopne
mov
mov
add
add
cmp
cld
inc
ret
cwtl
cmp
mov
add
mov
xchg
test
jnp
cwtl
gs
test
out
sbb
jno
aad
push
add
repz
add
movsl
lods
pop
dec
xor
negb
push
and
mov
mov
lods
fwait
mov
and
dec
mov
mov
je
add
cmp
jns
sbb
xor
mov
mov
add
adc
mov
mov
xor
pop
lods
addb
sbb
popf
inc
add
push
mov
add
add
add
mov
imul
pop
mov
mov
add
out
cmp
mov
dec
inc
mov
jb
mov
lcall
jbe
fcoms
frstor
sub
pop
xor
rolb
mov
push
fdivs
mov
jg
out
data16
es
aaa
mov
cmp
jbe
mov
fsubrp
pop
or
mov
mov
add
jbe
cld
aas
ja
lds
add
mov
xchg
pop
mov
test
mov
cmpsb
add
mov
cmp
inc
lcall
mov
sbb
rolb
popa
test
xor
aas
pop
loope
imul
int3
mov
inc
aad
popa
sub
jmp
adc
mov
jb
mov
mov
rol
jge
or
or
rolb
mov
xor
adc
mov
dec
mov
clc
inc
cmp
fcom
inc
add
outsl
nop
add
mov
mov
sub
pop
cmc
mov
mov
xchg
or
mov
sub
test
lcall
add
lds
dec
jne
xchg
aam
int
mov
push
mov
inc
or
sbb
xchg
xchg
inc
outsb
cmc
in
stos
mov
jmp
dec
add
adc
xor
pop
sbb
dec
loopne
mov
inc
push
add
nop
add
add
inc
popa
inc
add
xchg
repz
push
add
add
call
lods
jns
inc
or
mov
jbe
in
add
dec
inc
add
push
stos
jne
add
andl
cli
inc
lds
sbb
mov
fcmovbe
mov
ds
fwait
cli
daa
xchg
add
xchg
pop
in
xor
mov
sbb
mov
xor
mov
mov
mov
loop
mov
dec
xor
mov
jge
jmp
add
add
mov
inc
add
lds
pop
sahf
pop
mov
jbe
mov
mov
or
pop
xor
mov
enter
loopne
mov
mov
stos
mov
pop
addb
lret
push
or
das
push
xchg
add
add
mov
enter
mov
add
jno
xchg
jnp
in
cmc
or
add
adc
in
xor
mov
add
cli
push
ja
add
icebp
hlt
sar
lret
mov
and
mov
pop
fisubrl
daa
inc
add
add
fnstsw
lods
sbb
fdivrp
sub
add
pop
vcvtdq2ps
mov
adc
mov
mov
mov
out
fisubrl
xlat
adc
add
push
sahf
inc
and
mov
push
add
mov
cmp
cli
mov
gs
cmp
pop
lock
add
rol
sti
jo
mov
inc
add
mov
mov
pop
ret
rolb
rolb
mov
lcall
test
pop
sub
mov
xchg
imul
mov
fnsave
in
loope
add
add
push
push
stos
sub
cmp
pop
ja
lret
shll
jmp
mov
mov
inc
xchg
lret
fiadds
add
and
cmpsb
xchg
fs
jg
test
mov
mov
sbb
sbb
push
add
lcall
fildll
or
mov
rolb
mov
pusha
add
lahf
inc
add
lods
enter
std
cld
aam
dec
mov
scas
inc
into
movsb
and
mov
push
cmp
adc
add
xchg
jae
ret
add
mov
dec
aam
jne
cmp
lods
lea
sub
jo
mov
sub
jge
add
and
mov
je
cmpl
cmp
das
mov
iret
loopne
mov
add
add
mov
cmp
enter
add
push
repz
push
outsl
js
fwait
xor
inc
mov
popa
jmp
add
or
add
mov
add
sub
pop
loop
mov
stos
test
add
mov
lea
add
inc
pop
cmpsl
or
jo
mov
add
shll
adc
add
jae
fldcw
mov
mov
jbe
jecxz
int3
fld1
icebp
sub
xchg
mov
jnp
rcll
dec
inc
insb
mov
lock
icebp
jnp
pop
in
mov
sbb
adc
add
lea
add
loope
xor
lods
mov
xchg
mov
fwait
dec
daa
pop
mov
fstl
cld
aad
and
mov
mov
add
mov
lock
add
outsl
jo
mov
mov
sbb
mov
mov
repz
repz
add
inc
inc
xor
arpl
and
push
add
xor
inc
add
lock
dec
jmp
popf
sub
mov
inc
add
ds
imul
add
mov
mov
add
popa
cmc
clc
call
cmpsb
dec
push
xlat
mov
add
add
xor
mov
out
les
jmp
imul
cmpsl
push
mov
subl
pop
pop
shrl
add
loope
scas
lret
fistps
cmp
ds
dec
or
and
dec
push
mov
mov
add
dec
fldt
into
pop
xchg
fsubs
or
test
push
xor
adc
ljmp
cmp
rolb
mov
jbe
les
add
add
adc
add
add
jg
add
jb
mov
into
das
popa
sti
mov
mov
mov
or
scas
adc
mov
jge
add
ss
and
sub
add
fnstsw
mov
add
rorl
or
into
pop
sub
sub
imul
mov
xchg
rolb
mov
addr16
jl
addb
inc
or
sub
or
ja
mov
mov
xor
mov
inc
mov
ret
add
mov
add
mov
divl
fxch
xchg
add
mov
imul
jge
lahf
test
fwait
pushf
or
dec
psraw
mov
mov
movl
mov
cmpsl
imul
push
sbb
dec
mov
mov
add
mov
es
push
add
xchg
jmp
div
add
in
int
add
scas
addb
xchg
xchg
pop
xchg
es
or
add
aam
lea
cmp
test
mov
mov
xchg
add
addr16
add
stc
sub
add
inc
pop
push
mov
and
testb
add
aam
xlat
jecxz
addb
inc
jmp
mov
and
push
pop
xchg
test
cmpsb
std
pop
adc
jns
jl
sbb
faddp
jo
mov
mov
outsb
cmpsb
add
sbb
xor
adc
push
mov
shrl
out
dec
addb
cmp
xor
sub
inc
xlat
jns
add
in
jno
xchg
mov
mov
mov
add
mov
mov
cmp
add
mov
push
mov
push
add
addb
push
add
icebp
ret
into
mov
dec
or
clc
push
jp
add
shrl
sub
or
inc
add
mov
push
sbb
mov
mov
loopne
mov
dec
fdivrp
push
das
test
lock
sub
clc
and
cmpsl
dec
dec
inc
jecxz
ss
add
mov
shll
mov
add
je
sbb
jnp
iret
je
cmp
jge
xchg
psubq
sub
icebp
jns
add
das
add
stos
jg
std
mov
add
xchg
lods
mov
add
or
lea
add
adc
mov
jecxz
sar
xor
mov
repnz
mov
jno
jb
mov
mov
mov
adc
mov
add
mov
mov
sub
add
mov
cltd
mov
lea
arpl
mov
add
xchg
add
mov
add
jmp
add
mov
in
pop
xchg
outsb
adc
mov
add
add
cmp
sbb
aaa
or
fs
popf
in
cli
out
dec
pop
or
ljmp
push
in
jge
sti
adc
out
cmc
mov
cltd
ja
insb
out
cmp
inc
arpl
mov
xchg
add
or
mov
addb
xor
pop
mov
dec
sub
jo
mov
popf
mov
pop
addb
clc
pop
mov
mov
lods
adc
loopne
mov
mov
or
hlt
and
mov
fmuls
fsts
mov
ffree
sub
dec
ja
inc
dec
clc
sbb
add
faddl
add
inc
ret
push
add
mov
xchg
inc
cs
add
add
xchg
movsl
cmp
add
iretw
test
add
or
adc
xchg
daa
push
jnp
jae
mov
mov
cmp
push
stos
or
add
movl
mov
push
mov
xor
push
pushf
adc
mov
inc
add
xor
mov
add
xor
rolb
ds
fisttpll
sbb
mov
push
mov
mov
cli
testb
lds
or
add
or
hlt
push
add
add
adc
pop
xchg
mov
mov
test
in
cmp
int3
aad
xchg
mov
lret
inc
push
add
popa
inc
pop
add
mov
add
addb
icebp
mov
loope
push
mov
mov
jg
rolb
mov
jle
add
xor
mov
pop
cmp
jae
add
add
mov
add
push
lock
inc
repnz
inc
add
add
lock
loope
lcall
add
cld
push
xor
add
filds
popf
ljmp
mov
dec
or
xchg
or
add
cmc
rolb
mov
rolb
mov
or
push
leave
sbb
ficoms
mov
jne
dec
or
jp
pusha
add
xchg
aad
xor
mov
std
je
xchg
jno
addb
sbb
mov
mov
out
push
jg
lret
mov
xchg
push
add
mov
add
xchg
mov
cmp
add
loope
loope
inc
lds
add
xorl
inc
jl
aam
lods
repnz
dec
mov
cmc
cmc
mov
mov
push
inc
rol
add
xchg
push
jge
lea
jmp
in
cmpsl
sub
lea
dec
rcl
rolb
jbe
mov
jge
or
add
lock
pusha
add
xor
inc
sbb
pop
bound
mov
adc
mov
jbe
sbb
xor
mov
mov
repnz
xor
pop
or
add
mov
xchg
xor
inc
in
outsl
inc
add
adc
sub
or
ret
xor
sbb
mov
cmp
inc
out
sti
rolb
mov
lock
mov
shll
add
outsl
add
mov
insl
mov
jg
jmp
bound
mov
cld
jnp
add
push
add
pop
filds
push
mov
inc
and
scas
jle
add
std
repnz
mov
lock
adc
inc
jne
jecxz
mov
mov
aad
lret
jg
adc
push
stos
and
inc
cmp
in
xor
mov
mov
in
add
mov
stos
dec
nop
add
mov
xor
push
add
fs
add
xchg
addb
call
imull
fsts
insl
lods
sbb
cltd
mov
mov
mov
or
mov
addb
std
int
push
fldl
pop
mov
mov
stc
xor
inc
add
mov
xchg
imul
and
fmull
hlt
mov
fnstcw
pop
mov
add
aad
ljmp
cs
add
fs
lds
add
mov
push
add
adc
add
pop
pop
add
push
int3
loope
inc
add
or
sub
adcl
cld
push
add
js
daa
add
lds
add
add
and
mov
nop
add
ret
movsb
add
mov
nop
add
cmp
lret
dec
jns
inc
add
sbb
pop
sub
add
in
out
std
and
mov
jnp
mov
inc
mov
in
pop
imul
ret
stc
ror
mov
jle
outsl
mov
xchg
add
and
mov
aas
ja
jne
xchg
add
push
add
nop
add
xor
mov
inc
iret
hlt
repz
add
add
mov
iret
adc
jb
mov
jl
shrl
and
mov
xor
add
fidivs
mov
or
add
shll
add
jl
addb
cmovo
mov
je
add
add
lahf
xchg
push
cmp
cmc
stos
or
add
lock
jb
mov
out
aad
shrl
cwtl
inc
popf
mov
les
mov
repz
push
pusha
add
jle
fst
sarl
testl
es
ret
push
push
in
les
or
sbb
mov
mov
or
push
jl
pop
jbe
test
add
rorl
mov
xchg
mov
mov
fadds
out
cmpsb
sarl
mov
xlat
push
mov
and
add
rcll
mov
movsl
ja
stos
sbb
cmpsl
repnz
mov
sub
sub
leave
scas
fdivs
das
mov
mov
xchg
adc
mov
jmp
inc
inc
mov
rorl
lea
add
mov
fistps
add
fstpt
add
mov
mov
or
lret
call
mov
enter
dec
push
inc
rolb
pop
in
inc
jne
sub
into
sub
cmp
add
outsl
scas
pop
scas
movl
mov
js
movsl
xor
add
lea
je
add
and
repz
push
jecxz
inc
add
add
adc
add
insl
bound
mov
cmc
push
hlt
mov
enter
mov
add
mov
push
jnp
dec
sbb
and
shrd
addr16
xchg
mov
jbe
test
push
sbb
dec
and
mov
jge
add
insb
adc
std
mov
xchg
add
enter
out
cmp
stos
fwait
pop
push
push
mov
mov
out
ss
outsl
lds
pusha
add
shll
iret
jge
pop
mov
xlat
jb
mov
sub
stos
mov
outsb
in
adc
mov
mov
lret
loopne
mov
mov
arpl
loop
mov
cltd
push
add
rolb
shll
add
in
and
add
fdivl
add
xor
add
fstpl
icebp
push
inc
mov
mov
push
imul
xchg
mov
adc
jecxz
add
mov
xchg
es
add
mov
jle
fistpll
in
push
xor
call
incb
or
insl
xor
dec
out
mov
add
mov
jnp
mov
jbe
js
insl
dec
pushf
and
clc
adc
test
cli
mov
sti
in
xchg
or
sbb
mov
mov
push
rolb
mov
and
mov
push
fiadds
mov
iret
cmp
jnp
xor
mov
mov
xchg
dec
sbb
jbe
mov
lret
mov
sub
pop
or
add
outsb
dec
sahf
movsl
xlat
fld
add
loopne
mov
mov
add
not
outsl
roll
mov
mov
sahf
sub
mov
sti
lods
lahf
pop
and
ss
inc
inc
ficomps
ud0
add
and
in
push
add
or
and
mov
add
aas
adc
lret
aam
mov
icebp
fsubs
pop
sub
addb
fimull
jb
mov
push
std
push
push
xchg
sub
fwait
movsb
insl
jmp
cmp
add
mov
cld
or
add
sbb
scas
mov
shll
inc
mov
ja
lods
sub
lahf
add
cwtl
out
sbb
jo
mov
adc
mov
or
sbb
nop
add
loope
adc
mov
mov
int3
adc
int
or
scas
stos
adc
fbld
add
lsl
cli
mov
add
sbb
add
ret
ljmp
lcall
jb
mov
gs
xor
push
inc
add
mov
adc
mov
fistps
out
test
cmpsl
aaa
mov
ret
push
mov
mov
int
jge
xchg
outsl
ja
pop
push
mov
aam
fdivs
push
jecxz
pop
sbb
add
fildl
pop
push
mov
sti
faddp
in
iret
std
enter
and
fistpll
xchg
stos
rolb
scas
rcrl
inc
mov
roll
add
mov
add
arpl
xor
mov
add
mov
add
mov
inc
add
mov
inc
or
cmp
mov
add
add
lret
mov
dec
out
sub
xchg
jns
sbb
xor
inc
add
movsb
in
cmp
pop
xchg
lret
dec
outsb
cmp
xor
mov
add
add
adc
cmc
repz
test
fstl
add
fstps
arpl
addb
xor
mov
and
mov
jno
mov
mov
push
mov
add
dec
daa
and
mov
fstp
xor
jno
leave
pop
jp
xchg
movsb
rolb
aam
fisttpl
sub
push
rolb
mov
pop
push
out
sub
push
mov
xchg
add
test
add
out
fstl
push
mov
cwtl
dec
jmp
pop
xchg
test
mov
add
mov
mov
adc
mov
outsl
or
pop
inc
add
addb
addps
add
push
add
iret
ds
jmp
aad
imulb
xor
add
in
addb
ret
mov
push
mov
mov
test
test
cmpsb
push
jns
mov
cltd
add
cltd
mov
out
push
ss
and
or
pushf
mulb
mov
cmp
cltd
idivb
or
rolb
mov
pop
into
inc
into
leave
jne
stos
mov
jle
dec
and
and
lods
dec
push
and
mov
ljmp
addb
add
mov
and
mov
mov
xlat
jno
pop
es
cmpsb
pop
push
xchg
sahf
dec
add
or
lea
cmp
cmc
rorl
mov
mov
call
mov
and
add
fs
jbe
add
pop
adc
dec
or
mov
add
jg
cltd
call
lea
add
enter
ds
pop
xchg
or
jle
int
orl
lods
leave
xchg
sahf
inc
sub
jns
cmp
sbb
arpl
cmpsl
int
and
xor
add
mov
js
add
std
adc
popa
in
jbe
add
sub
pop
clc
mov
addb
cmpsl
out
add
mov
cmpsl
mov
mov
stc
push
inc
sbb
push
adc
mov
mov
mov
into
adc
mov
cmp
sahf
lcall
or
sbb
insl
iret
pop
outsb
and
mov
fcmovne
lods
jecxz
imull
mov
outsb
loope
xor
push
adc
add
pop
fisubl
dec
sub
add
push
xorps
pop
jg
adc
add
mov
add
mov
inc
add
iret
jmp
push
int
repnz
or
les
add
add
pusha
add
dec
add
mov
sbb
imul
icebp
jp
mov
fsub
add
stos
in
outsb
cld
sbb
and
mov
fs
ds
inc
ret
and
mov
mov
outsb
fildl
add
cmc
lcall
cmp
out
cmp
mul
jno
icebp
in
cmp
lretw
push
add
add
mov
inc
mov
dec
mov
or
add
push
mov
mov
mov
orl
xchg
mov
call
leave
in
inc
add
mov
loope
jno
add
sub
out
inc
ljmp
out
add
sbb
mov
movsl
jecxz
xor
mov
add
mov
add
mov
das
cmp
mov
fucom
lcall
xchg
pop
dec
add
add
jbe
add
data16
ret
rolb
mov
xor
mov
add
int
or
dec
add
nop
add
in
cmp
add
mov
dec
sub
xor
mov
inc
mov
xchg
int3
or
mov
insl
jg
aas
xor
in
out
mov
xchg
fstps
add
mov
out
xchg
add
xchg
jmp
add
mov
inc
fbstp
idivb
lcall
cmp
sbb
test
pop
or
test
cmp
fidivrs
add
add
and
loopne
mov
add
mov
stc
push
xchg
inc
add
fdivrs
repz
and
into
or
push
ss
insl
xor
int3
outsl
in
push
test
lcall
roll
mov
movsb
cmc
xchg
mov
add
mov
rolb
mov
or
repz
sub
aaa
fmul
sbb
push
add
jae
cmp
insb
xor
fwait
leave
pop
stc
adc
mov
addb
in
fdecstp
mov
push
xchg
add
xchg
cmp
das
arpl
sar
cmp
jecxz
pop
mov
mov
add
add
lock
out
cwtl
fwait
sub
sub
mov
inc
int3
mov
out
or
push
add
sbb
dec
ja
shl
sub
jmp
mov
adc
mov
jle
add
stc
mov
fistpll
cmp
cmp
idiv
xchg
mov
mov
ds
outsl
imul
add
adcl
add
add
add
xchg
std
pop
mov
in
dec
arpl
sahf
loope
push
in
inc
mov
mov
mov
clc
jge
sbb
mov
adc
shrl
xor
stos
insl
pop
push
mov
xchg
aad
adc
or
or
mov
mov
bound
mov
repz
out
neg
push
add
icebp
push
add
or
add
add
enter
sbb
and
repnz
jge
add
fldenv
push
inc
stos
cld
jb
mov
add
mov
sbb
mov
into
push
or
lcall
or
aaa
dec
cld
fsubrs
and
add
mov
pop
push
pop
mov
subl
push
in
repz
pop
mov
test
fcomps
cli
fwait
mov
mov
adc
mov
test
or
stos
xchg
and
sbb
jbe
add
cmp
lods
mov
mov
mov
push
add
add
pop
dec
jo
mov
add
cmc
pop
js
fsubl
push
push
scas
in
mov
mov
mov
mov
mov
in
mov
mov
mov
mov
add
jg
arpl
iret
pop
jg
mov
clc
pop
test
xchg
andl
inc
popa
jb
mov
push
sub
int3
inc
insl
call
dec
mov
sbb
add
or
inc
add
push
add
sahf
push
xchg
mov
nop
add
popf
cld
sahf
imul
popf
or
ljmp
mov
add
fsubrl
push
rcll
in
pcmpgtb
add
push
xor
cmp
mov
shll
add
lahf
rolb
aam
or
dec
adc
cmp
popa
pop
xor
mov
xchg
add
loope
filds
pop
pop
mov
sub
int3
rolb
mov
les
ss
cmc
mov
mov
add
popa
fists
arpl
jbe
add
sbb
pusha
add
lcall
aad
add
popf
cmpsb
fs
xchg
mov
mov
or
sub
jb
mov
sub
fnsave
in
cli
and
mov
xlat
mov
or
xchg
in
enter
mov
int
and
das
outsb
lahf
inc
add
push
xchg
out
add
mov
stos
xchg
pop
mov
or
mov
scas
sar
xchg
adc
clc
sub
add
addb
pop
sbb
mov
adc
nop
add
rcrl
loopne
mov
pop
imul
loopne
mov
cmp
lds
mov
lret
add
add
pop
sub
icebp
xchg
xor
add
xor
mov
jmp
add
in
hlt
aas
rolb
mov
addr16
test
daa
jmp
arpl
mov
fbstp
jns
mov
dec
dec
cmpsb
push
fistpll
stos
data16
cwtl
inc
jmp
rolb
xchg
or
daa
mov
scas
cli
and
mov
adc
movsb
mov
jno
rorl
sbb
add
sub
pop
adc
mov
cs
nop
add
and
xlat
mov
int3
mov
test
mov
ror
inc
loope
and
push
es
or
xchg
mov
mov
mov
or
in
andl
mov
cmp
pop
iret
sub
or
jmp
inc
insl
out
inc
add
ja
and
cld
jecxz
fbstp
inc
addb
addb
mov
add
add
movsl
mov
mov
rolb
mov
jecxz
int
in
add
mov
add
mov
jb
mov
add
fbld
push
add
add
scas
hlt
nop
add
paddsb
lods
je
adc
je
clc
fsubl
add
mov
rcll
cli
das
data16
sub
repnz
add
icebp
in
xchg
movsb
popf
test
fidivrl
jno
stc
pop
push
cmp
cmp
in
add
lret
adc
pop
mov
or
nop
add
push
add
sti
xor
stc
sti
fdivs
xor
jecxz
add
sub
je
push
add
stos
xchg
push
add
mov
es
add
mov
and
add
add
fsubs
inc
addb
adc
add
cmp
add
mov
mov
inc
leave
and
in
popa
stos
mov
xlat
pop
jae
ret
ljmp
dec
enter
scas
add
mov
add
out
es
clc
dec
jmp
js
pop
jge
add
mov
pop
adc
lods
addl
rolb
mov
or
mov
mov
or
inc
lahf
or
rolb
mov
add
add
mov
mov
add
sub
stos
push
xor
mov
or
add
mov
fsqrt
pusha
add
mov
jne
jg
negl
mov
mov
mov
mov
mov
divb
mov
and
mov
nop
add
push
lea
outsl
or
mov
mov
pop
jle
mov
add
jg
mov
add
test
mov
push
fwait
xor
aaa
xor
mov
das
test
mov
mov
add
push
out
arpl
add
and
mov
jo
mov
jmp
inc
add
outsb
adc
mov
xlat
repz
ds
add
lahf
or
fstpl
fdivs
icebp
out
decl
lods
shll
pop
dec
jl
mov
push
jae
inc
mov
dec
shll
push
cmp
mov
mov
stos
xchg
dec
pop
rolb
mov
add
stos
xchg
jle
or
mov
sub
jecxz
jne
test
or
leave
imul
repz
rolb
mov
add
mov
add
in
sbb
rolb
leave
and
mov
add
cs
inc
add
push
jb
mov
dec
or
jg
mov
imul
or
cmpsb
inc
out
sbb
mov
or
mov
mov
jg
xchg
lods
out
rolb
pop
inc
xor
mov
add
pop
pop
ficompl
mov
sarl
sbb
aad
mov
dec
rolb
sti
xor
imul
lods
fdiv
scas
stos
fisubs
add
add
mov
fadds
add
pop
addb
scas
daa
mov
sub
push
aas
mov
mov
mov
sbb
xor
mov
add
jb
mov
cwtl
rolb
sbb
push
js
ja
add
mov
sub
arpl
inc
add
repnz
mov
sub
lock
mov
ret
cltd
insb
adc
mov
jp
or
add
mov
movsb
sahf
enter
in
mov
xchg
adc
bound
mov
js
inc
aaa
test
xor
add
mov
and
imul
call
mov
pop
daa
cli
insl
cmp
subl
and
cmp
inc
jae
pop
in
xchg
add
push
xor
add
add
dec
push
push
jo
mov
add
test
rorl
cld
popa
rol
adc
cmpsl
mov
stos
inc
add
pop
pop
pushf
jae
add
pusha
add
xorl
ds
movsb
jl
mov
aas
jne
dec
sub
nop
add
dec
lcall
add
aaa
cmpsb
xchg
loop
mov
push
mull
add
lock
int3
inc
mov
mov
add
add
imulb
rolb
mov
and
roll
mov
inc
scas
dec
daa
int3
repnz
out
outsb
or
daa
les
dec
mov
xor
mov
push
jmp
lea
jge
mov
cltd
icebp
cltd
mov
dec
mov
mov
addb
xor
mov
add
daa
push
aaa
pop
xchg
imul
adc
mov
in
mov
fsubs
mov
add
pop
or
mov
mov
out
push
push
and
iret
mov
mov
add
notl
add
adc
push
inc
add
add
add
sti
jns
or
loopne
mov
addb
dec
mov
mov
mov
mov
add
mov
mov
pop
aam
dec
adc
mov
stc
or
add
call
add
test
add
xchg
xor
mov
mov
ret
gs
arpl
add
pop
loope
xorl
dec
nop
add
test
adc
sbb
setbe
std
fildll
mov
push
mov
cs
mov
data16
mov
mov
mov
or
add
jecxz
in
out
inc
jmp
mov
mov
adc
mov
add
outsb
gs
out
aas
sbb
mov
repz
imul
add
pop
and
xor
add
xor
mov
dec
std
adc
jb
mov
push
push
inc
mov
das
push
add
mov
add
adc
ds
pop
cmp
add
mov
add
or
add
mov
xor
inc
add
ljmp
and
add
adc
mov
mov
pusha
add
add
lods
loopne
mov
sbb
cmp
cmp
mov
and
xor
mov
push
xchg
bound
mov
xchg
xlat
fwait
iret
pop
mov
enter
push
lea
lods
xchg
jb
mov
daa
rolb
mov
or
pop
insl
in
sbb
mov
add
mov
mov
mov
jnp
pop
imul
add
cwtl
pop
es
dec
lret
out
cld
sbb
xor
mov
push
pop
cmp
pop
arpl
nop
add
out
adc
sub
add
hlt
cwtl
faddl
add
jae
push
stc
mov
mov
add
push
pop
jle
repz
push
sti
mov
and
mov
mov
add
mov
out
push
mov
addl
add
mov
add
outsb
lock
mov
push
pushf
pop
std
lret
int3
mov
fst
cmpsb
push
add
mov
int
and
add
imul
rolb
mov
mov
sti
mov
mov
int
jg
add
mov
dec
adc
push
xor
add
add
add
dec
dec
stos
nop
add
dec
inc
or
loop
mov
loope
rolb
aaa
imul
sub
fsubr
fld
xor
and
outsb
and
jne
adc
mov
arpl
out
push
add
lcall
je
xor
out
out
mov
mov
add
inc
add
add
pop
pushf
test
dec
sub
pop
dec
and
bound
mov
test
xchg
push
cmp
inc
push
sti
sbb
pop
popa
or
mov
inc
add
mov
push
add
add
rolb
and
dec
push
add
in
inc
add
stos
fs
movsl
repnz
movsl
gs
pop
mov
iret
jbe
or
add
xor
dec
rolb
mov
add
mov
cltd
pop
fwait
mov
sahf
cli
pusha
add
cs
mov
push
add
push
fstpl
push
add
jno
in
fstpl
call
mov
add
test
out
xor
mov
outsb
push
dec
or
xchg
into
mov
es
xchg
scas
pop
outsl
pop
outsl
orl
loope
add
addb
mov
lret
push
push
loop
mov
xchg
add
mov
addb
pop
call
jno
cmp
std
test
iret
push
add
mov
add
iret
stos
popf
mov
add
and
add
xchg
rcl
mov
add
cmp
jmp
aas
inc
mov
lock
int3
push
fnop
add
mov
inc
jecxz
es
add
cmpsl
div
add
loop
mov
ret
fldt
sub
xor
in
mov
add
or
gs
add
mov
add
mov
xor
mov
pop
xchg
add
mov
bound
mov
cld
add
jmp
pop
std
cmc
xchg
dec
jmp
dec
sbb
call
cmp
outsb
pop
jbe
repz
loopne
mov
add
mov
add
mov
and
and
mov
gs
add
sbb
mov
fisttps
jnp
or
addb
leave
sti
dec
fsubrl
inc
xor
adc
mov
pop
aam
cwtl
dec
ljmp
es
out
mov
mov
add
mov
or
in
fistps
jae
adc
cmp
mov
movsb
test
mov
xor
bound
mov
xchg
mov
xchg
lds
fdivrp
gs
mov
in
cmpsb
or
mov
int3
stos
jae
add
jb
mov
add
mov
repz
mov
jp
fstpl
cmp
add
cmpsb
jnp
arpl
add
xchg
add
stc
insl
mov
cmp
xchg
jbe
fnstsw
xchg
dec
js
out
mov
add
cli
jl
repnz
jg
fldt
push
add
fndisi(8087
mov
sub
add
out
mov
mov
popa
jae
inc
xchg
cmpsb
mov
lcall
imul
jg
adc
or
push
stos
sbb
push
add
push
dec
mov
or
jmp
add
xchg
adc
pop
mov
pop
pushf
inc
push
mov
or
xchg
push
pop
pop
or
movsb
flds
aas
xchg
rolb
mov
mov
idivb
add
cmp
fcomp
and
adc
mov
mov
xor
lock
imul
xchg
loope
add
add
xor
and
addl
fs
inc
js
nop
add
test
into
mov
test
mov
add
xchg
push
xor
mov
add
add
mov
add
mov
mov
and
test
jo
mov
xchg
add
inc
add
dec
lods
inc
inc
add
and
mov
cmp
xor
jbe
or
flds
add
dec
divl
test
shrl
mov
add
mov
add
mov
in
loope
insl
pop
xor
in
mov
rolb
mov
add
mov
add
pop
mov
add
aad
add
outsb
lods
jg
bound
mov
add
lret
mov
rolb
mov
inc
add
inc
or
cmpsl
mov
inc
mov
add
add
adc
addb
mov
fs
add
add
dec
mov
pushf
stc
dec
enter
push
add
mov
ljmp
loope
xchg
add
insl
jo
mov
cltd
push
dec
mov
mov
add
add
out
push
lcall
push
mov
lret
sbb
add
mov
mov
mov
xor
mov
bound
mov
lods
jge
jae
in
fistpll
lea
xchg
inc
add
clc
push
loope
dec
mov
xchg
lods
push
jne
inc
mov
mov
add
inc
pop
imul
sbb
aad
jno
cmp
imul
idiv
out
addb
cmp
pusha
add
mov
cli
sub
aam
fldl
fwait
not
test
mov
add
cs
inc
xor
ljmp
xchg
pop
inc
aad
lahf
ljmp
xchg
mov
sbb
add
enter
inc
add
xor
push
fdivrs
jl
add
scas
inc
push
dec
sbb
test
push
insb
push
add
sbb
pushf
xor
add
mov
add
mov
add
sbb
adc
data16
scas
clc
jmp
jb
mov
call
call
mov
jecxz
sbb
rolb
mov
mov
mov
xchg
std
xor
add
add
push
mov
cmc
xlat
mov
loope
mov
add
fisubl
mov
dec
aas
cmpsl
mov
into
xchg
adc
and
pop
inc
fadd
add
insb
outsl
inc
cld
mov
je
imul
jo
mov
add
arpl
sbb
fistpl
push
nop
add
xchg
jno
add
mov
std
iret
push
jmp
rolb
js
loopne
mov
push
xchg
ljmp
and
mov
add
mov
mov
mov
cmp
add
cmp
add
mov
pushf
cmp
sbb
gs
add
add
xor
and
sub
data16
rolb
rolb
mov
insl
xor
mov
dec
xchg
add
cmp
mov
lods
add
lock
push
aad
lret
loope
movsb
scas
add
add
or
add
sahf
mov
mov
mov
inc
lds
test
adc
mov
add
js
jle
cmp
lock
popa
push
mov
mov
add
jge
pop
mov
push
pushf
push
add
repz
mov
les
add
imul
mov
add
add
lahf
gs
push
lret
lcall
mov
dec
in
add
outsb
mov
std
enter
nop
add
adc
mov
repnz
add
sub
decl
arpl
inc
mov
inc
add
pop
mov
mov
pop
lods
bound
mov
sbb
test
imul
mov
adc
mov
mov
add
addb
clc
jg
mov
jb
mov
fst
fs
mov
add
sub
or
add
mov
mov
repz
inc
add
add
pop
ja
pushf
or
movsl
out
lahf
outsb
imul
or
mov
adc
adc
mov
loope
sub
imul
lock
ss
mov
adc
push
add
add
popf
pop
mov
push
inc
in
lods
sbb
mov
mov
add
xor
xchg
test
add
maskmovq
idivl
popa
and
mov
pop
dec
test
push
add
xchg
jge
cmc
add
mov
aas
sub
adc
mov
int3
fs
aad
add
addr16
js
mov
cld
cmpsb
leave
fmull
add
add
add
mov
add
lea
shll
rolb
mov
pusha
add
popa
mov
mov
cwtl
movsl
pop
out
setl
xchg
jge
add
lea
test
dec
insb
jbe
add
mov
ret
jl
sti
push
push
push
add
in
loop
mov
stos
cwtl
movsl
stos
mov
add
add
pop
jp
out
mov
push
pop
mov
mov
stc
mov
mov
mov
pop
push
add
aad
and
jnp
sahf
jge
in
and
clc
ret
jbe
outsl
movsl
or
cmp
testb
jo
mov
fbld
ret
es
enter
xchg
push
add
sbb
add
aaa
mov
mov
fld
add
mov
jmp
jne
sbb
mov
adc
mov
dec
cmp
adc
into
cmpsl
pusha
add
sub
in
mov
xchg
popf
mov
aas
add
mov
mov
in
jns
dec
rolb
mov
ss
cmpsb
inc
stos
into
inc
aas
iret
dec
inc
repnz
mov
add
pop
adc
mov
mov
cwtl
add
daa
xchg
iret
xchg
in
dec
imul
mov
add
ret
cs
cmp
inc
jmp
sti
mov
mov
mov
xchg
or
mov
nop
add
xor
xchg
cmpsb
daa
jl
outsl
pushf
fnsave
orl
ret
lea
sub
dec
test
addb
test
cs
lds
mov
nop
add
cmp
popf
jp
clc
ret
test
pop
test
add
mov
das
out
cmpsl
adc
or
jbe
js
cmpsb
ret
roll
fwait
testb
cmpsb
repz
xchg
push
push
je
mov
dec
mov
add
mov
jp
adc
mov
lods
xchg
xchg
iret
add
andl
std
cmpsl
shll
xor
mov
loop
mov
clc
cmp
cwtl
out
xchg
add
in
rolb
mov
mov
mov
add
cli
insl
ljmp
addr16
roll
divl
inc
add
leave
ljmp
add
adc
mov
sbb
add
pop
adc
mov
mov
outsl
mov
adc
pop
fwait
addl
xor
mov
aas
jb
mov
xor
add
dec
test
add
popf
jnp
xchg
cmp
jbe
add
jb
mov
shll
mov
out
jp
mov
hlt
iret
push
xchg
test
push
addl
mov
push
fiadds
ds
add
sbb
mov
cmp
fs
addr16
mov
das
lock
movsb
dec
in
in
jnp
jo
mov
add
jg
or
lret
ficoml
inc
xchg
mov
in
and
mov
ret
xchg
inc
sti
aam
lcall
mov
mov
add
xchg
inc
in
pop
hlt
mov
mov
push
sbb
sub
je
dec
jecxz
cmp
insb
arpl
add
xchg
xchg
rorl
cmp
popf
and
xor
mov
popa
inc
add
sub
or
ss
clc
adc
mov
iret
add
icebp
rolb
mov
js
sti
and
mov
push
aam
mul
add
mov
add
mov
mov
ljmp
dec
dec
cmovno
call
add
mov
lahf
test
adc
mov
aam
xchg
add
mov
sbb
push
cmp
ljmp
add
add
cmp
mov
add
rolb
mov
scas
inc
dec
push
cmpsb
rolb
mov
pop
bound
mov
pop
fwait
iret
icebp
imul
ss
int3
cmc
mov
mov
add
into
ljmp
inc
add
mov
inc
add
mov
in
lods
fcompl
aas
lahf
ljmp
mov
push
ds
add
mov
mov
fnstcw
dec
cltd
in
or
xor
mov
xchg
sbb
xchg
adc
xor
mov
mov
loope
lret
and
jns
addb
int3
mov
jmp
movsb
roll
pushf
enter
js
add
ja
pop
js
mov
add
dec
sub
ds
pop
js
cmpsb
add
mov
push
add
xor
pop
pop
cmp
sub
xchg
mov
add
aad
lods
xchg
cli
fcmovb
pop
adc
mov
mov
pop
mov
mov
arpl
mov
orl
lea
in
insl
push
call
aas
loope
sbb
add
mov
add
sbb
std
xor
mov
mov
loope
dec
push
xor
mov
dec
and
xchg
rolb
mov
add
lcall
push
add
inc
subl
push
add
scas
dec
fdivrl
jle
add
mov
push
add
add
mov
or
fadd
add
mov
push
aas
pop
jae
adc
dec
addb
addl
pop
nop
add
mov
sub
nop
add
mov
fcomps
dec
cmp
bound
mov
and
mov
addb
push
pop
clc
cmp
push
hlt
jbe
ficoml
or
push
inc
stos
bound
mov
mov
sbb
push
pop
rolb
mov
push
rcrl
mov
inc
sbb
inc
mov
mov
ss
into
inc
sub
aaa
std
jno
or
add
fdiv
cmpsl
cld
lea
inc
mov
xor
add
mov
mov
adc
mov
daa
jl
xor
mov
fisubrl
stos
movsl
cmp
adc
inc
lea
add
add
add
mov
jmp
rorl
mov
push
fildl
xor
mov
stos
inc
sbb
add
and
subl
push
push
add
addb
sahf
insl
push
xchg
lock
aam
cltd
add
mov
add
lret
cmp
add
push
ret
call
adc
ja
add
and
mov
mov
jno
es
xor
outsl
lret
ret
push
add
inc
add
pop
movsb
xchg
mov
mov
outsb
testl
stc
std
fstps
mov
xor
add
in
or
mov
stos
rolb
mov
jns
mov
mov
daa
push
pop
ficoml
adc
mov
fnstsw
mov
mov
jmp
sti
inc
testb
mov
cmp
in
loopne
mov
xor
jge
push
in
mov
scas
aas
adc
cmp
mov
test
mov
mov
mov
movsl
cli
lar
mov
and
ss
pop
sbbl
add
push
add
cli
testl
add
mov
push
add
add
test
inc
arpl
mov
call
adc
mov
das
jae
add
add
aad
lret
movsl
push
mov
and
mov
in
and
mov
hlt
or
gs
ljmp
or
lcall
push
push
add
add
mov
cmpsl
or
add
add
pusha
add
push
cmpsl
insb
cmp
xor
push
sbb
add
mov
mov
mov
mov
add
lret
mov
or
outsl
mov
cs
push
dec
dec
out
add
mull
sub
mov
sbb
inc
push
pop
fbld
xchg
jle
add
cld
fwait
cwtl
push
loop
mov
jns
call
and
mov
cmp
add
das
xchg
pop
iret
test
add
mov
cmp
add
mov
push
jnp
add
sbb
add
iret
mov
add
xor
mov
dec
imul
pop
xchg
adc
mov
mov
xchg
jecxz
jbe
inc
popa
dec
cmp
fwait
ret
cmp
sbb
sub
add
cli
incl
mov
xchg
jns
mov
mov
dec
std
out
in
push
add
mov
xlat
inc
insb
fdivs
mov
xchg
push
insl
rdtsc
daa
push
add
dec
outsl
mov
inc
add
stos
add
mov
sub
mov
incl
push
push
jae
add
add
icebp
and
and
arpl
pop
pushf
mov
mov
xor
jge
insb
sub
sub
insl
xchg
sbb
add
out
aas
rolb
mov
add
sbb
push
aad
sub
pop
sub
pusha
add
rolb
mov
faddl
add
roll
cld
mov
loope
push
sbb
mov
insl
inc
std
mov
mov
les
xchg
or
inc
add
add
jmp
in
add
out
stc
test
lcall
xor
add
and
incb
mov
cmpsb
xlat
insl
add
pop
es
clc
cmp
or
jbe
pop
ja
push
mov
push
fwait
xchg
hlt
jmp
cld
bound
mov
mov
fistpll
leave
sub
add
xchg
jg
xor
sub
sahf
ljmp
xchg
loope
add
mov
or
test
mov
cli
inc
xor
es
pusha
add
or
jns
xchg
sbb
mov
push
or
mov
aam
jg
das
or
jbe
loope
add
add
loop
mov
mov
mov
pop
stos
xor
je
mov
mov
inc
add
add
jl
outsb
bound
mov
add
pop
or
sbb
add
ret
sbb
testb
int3
jp
mul
cmp
mov
jns
jno
cmpsl
imul
lcall
xchg
inc
add
mov
lret
sti
push
mov
stc
rolb
mov
movsb
mov
add
popa
push
add
movsl
xlat
mov
mov
ss
in
ret
jmp
add
inc
notl
test
fs
jno
jae
add
mov
ficompl
stos
insl
stos
mov
mov
add
inc
pand
inc
add
add
pop
jne
xor
mov
into
das
repz
leave
sub
add
or
xchg
orl
add
outsb
xchg
adc
mov
fildl
int
push
and
add
xor
insb
fidivrs
sbb
js
insl
in
insb
lret
repz
push
add
pop
cmp
bound
mov
lret
mov
mov
pusha
add
mov
add
mov
add
mov
xor
mov
sahf
adc
xor
es
jle
sub
rolb
mov
mov
mov
add
mov
and
mov
std
roll
lods
movb
add
mov
pop
cli
mov
lods
pop
sbb
outsb
lret
pushf
pop
jg
add
dec
popa
mov
pop
mov
pop
dec
or
adc
loopne
mov
in
lock
negl
das
sbb
adc
testl
f2xm1
add
inc
cmovb
mov
mov
mov
mov
mov
add
add
dec
jo
mov
rcl
mov
add
mov
add
xor
mov
cmp
and
sbb
fs
lea
stos
mov
mov
add
add
xchg
add
mov
rcr
in
lcall
mov
add
dec
call
mov
mov
xchg
jae
rolb
pop
hlt
ret
xor
adc
lcall
mov
rolb
mov
lock
jo
mov
movsb
pop
sub
or
pop
jl
pop
jecxz
push
cmp
lret
cmp
push
gs
pusha
add
movsb
push
in
xchg
das
fidivrs
add
test
lcall
add
mov
roll
mov
add
push
ficompl
adc
or
sub
dec
push
jae
lock
or
leave
mov
add
xor
jg
add
ret
insb
test
mov
dec
mov
xlat
movsb
sub
inc
xor
mov
insl
in
and
loope
xchg
mov
xchg
add
rolb
mov
pop
mov
dec
addb
pop
jb
mov
mov
cmc
mov
test
mov
mov
jl
mulw
mov
add
lods
adc
push
rolb
jmp
and
xor
add
lock
add
dec
dec
xor
mov
cmp
insb
mov
pushf
push
fstpt
cmp
fisubrs
xchg
sbb
sub
add
mov
mov
jp
add
or
daa
push
js
dec
fdivs
pop
enter
dec
xchg
add
mov
in
add
add
xor
in
loope
xor
mov
xchg
in
negl
sbb
data16
add
add
push
sub
xchg
ds
jge
test
mov
pop
imul
ret
popf
mov
out
dec
jp
loope
pop
sbb
in
mov
xchg
or
mov
jle
xor
adc
ret
popf
mov
js
add
mov
pop
arpl
mov
mov
mov
xchg
or
nop
add
mov
add
inc
add
inc
test
lock
ljmp
imul
dec
and
mov
mov
addb
jb
mov
imul
or
daa
in
das
and
sbb
cmpsb
dec
xchg
enter
mov
orl
js
mov
mov
jge
or
test
clc
ljmp
mov
pop
lds
pop
mov
dec
stc
mov
add
xchg
push
rolb
and
and
out
push
leave
push
mov
push
jp
mov
ret
les
iret
mov
testb
xchg
xor
mov
sbb
mov
dec
sub
cmp
push
loope
iret
lret
xchg
ja
outsb
test
in
mov
divl
sahf
cmpsb
xchg
mov
outsb
lock
ret
daa
and
ljmp
lahf
push
ljmp
pop
ficoms
mov
sti
cmp
cmp
add
cmp
jnp
into
cmp
out
inc
out
iret
loopne
mov
push
insb
push
add
xlat
les
xchg
mov
add
mov
in
mov
xchg
adc
mov
pop
scas
dec
pusha
add
mov
addr16
ficoml
or
add
mov
repnz
addr16
inc
add
add
ret
pop
xchg
movsl
push
leave
cmp
fcoml
mov
iret
mov
push
add
repnz
rolb
mov
add
aaa
jl
adc
push
stos
sub
mov
add
sbb
xchg
cli
fs
jecxz
cwtl
sahf
mov
mov
insl
jne
cmp
xor
add
cli
fsubl
jne
pop
sub
iret
aas
insl
pop
add
mov
xchg
xchg
in
pushf
jg
lock
int3
mov
lods
repnz
stos
and
mov
cmp
aas
repz
cmp
arpl
and
add
push
imul
addr16
pop
mov
mov
push
push
jns
cmc
mov
lret
mov
push
sbb
cmp
add
mov
div
add
out
or
mov
loope
js
add
add
mov
dec
cmp
pop
orl
add
mov
imul
in
test
js
add
pop
sbbl
or
jns
or
xchg
addb
es
push
push
pop
addr16
mov
mov
mov
mov
sbb
xor
cmp
pop
in
add
popa
popf
xor
mov
jo
mov
add
mov
fdivr
fsubl
adc
push
nopl
fdivrl
fwait
gs
rolb
mov
dec
out
test
enter
sbb
add
fisttpl
add
push
add
clc
imul
add
add
hlt
mov
mov
faddl
jl
pop
int3
andl
add
mov
add
inc
lcall
aas
mov
add
mov
add
add
mov
adc
mov
add
cmp
repnz
jle
arpl
pop
inc
test
movsb
test
rolb
addb
incb
add
