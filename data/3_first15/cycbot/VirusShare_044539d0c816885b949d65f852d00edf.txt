pop
repz
adc
fiadds
cmp
or
cmp
cmc
jge
sbb
cmp
hlt
test
mov
adc
mov
pop
mov
or
add
jae
jne
jo
pop
and
cmpb
das
and
and
or
xchg
add
fldcw
bnd
inc
shrl
mov
push
je
mov
or
bound
or
xchg
adc
xor
sbb
rol
jbe
jge
js
mov
stc
addb
xor
outsl
repz
lods
sbb
sbb
adc
inc
jae
xchg
sbb
repz
lods
mov
outsb
xor
cli
lret
data16
add
test
push
push
add
xor
mov
test
lock
outsb
je
inc
jno
pop
dec
xor
loop
dec
stos
sub
mov
imul
pop
adc
stos
pop
jmp
sbb
mov
mov
scas
adc
cmp
imul
pusha
push
stos
xchg
adc
or
enter
mov
xchg
insb
ss
mov
insl
pop
fadds
loop
or
adc
sti
jne
xchg
cld
fs
in
push
fs
sub
out
xchg
movb
push
mov
cmp
dec
test
mov
fistpl
xorb
test
mov
adc
mov
lods
mov
ss
fcmovnbe
lods
sbb
imul
or
xor
add
cmp
sub
cwtl
inc
mov
pop
xor
addr16
out
mov
xor
sbb
jecxz
push
scas
pop
push
add
inc
fists
and
sbb
test
mov
sub
in
and
rcr
dec
je
repnz
sub
enter
out
mov
ja
pop
negb
adc
pop
fistpll
ret
mov
repnz
mov
jae
aam
fstpl
outsl
call
scas
xlat
sub
jmp
or
adc
fwait
cmp
pop
call
lret
jnp
lods
popa
inc
mov
cld
or
cmp
or
inc
cmp
repnz
cmp
sub
xchg
mov
test
nop
test
sub
lcall
fsts
adc
sub
sub
or
mov
test
xchg
divb
cmpsl
aaa
call
leave
or
movsl
adc
jne
int3
adc
adc
xor
les
loop
xor
outsb
out
popa
or
fsubl
cmp
fidivrs
mov
daa
aam
dec
shl
jge
rcll
push
jecxz
pop
lea
arpl
mov
mov
pusha
sbb
mov
pop
xorb
js
add
sub
ffreep
iret
mov
mov
cmp
fcomps
lods
das
xchg
adc
inc
ljmp
adc
mov
xchg
rclb
movsl
inc
add
sub
notl
mov
addr16
sbbb
subb
and
out
idivl
movsl
mov
mov
xlat
xor
sub
cmp
ljmp
ss
adc
push
xor
mov
push
pop
out
insl
mov
mov
aam
mov
dec
addr16
push
add
mov
adc
xor
inc
jne
cli
jb
cmc
push
nop
nop
lock
cmp
dec
stos
or
cmpl
jns
mov
mov
sahf
cmp
mov
adc
sbb
xor
mov
aas
scas
mov
dec
or
ljmp
mov
ja
lahf
jae
scas
or
sbb
sbbl
paddq
add
push
sahf
jmp
push
daa
dec
inc
dec
fidivrl
push
fisubrl
and
ds
cwtl
je
test
in
dec
imul
push
rolb
dec
jge
in
cmp
hlt
dec
mov
mov
int
fld
repnz
xor
dec
push
jle
cli
pop
lret
add
test
or
sarb
sbb
daa
inc
and
inc
push
imul
in
fincstp
add
out
out
into
inc
fxtract
shlb
and
mov
jmp
pop
movsb
xchg
movsb
dec
das
adc
aaa
cld
ss
mov
push
inc
cmp
jno
inc
inc
stos
pusha
movb
test
xor
cmp
addr16
jne
ss
cmc
stc
sbb
dec
std
test
pop
pop
pop
xchg
push
sbb
xchg
fcomip
test
repnz
testb
sti
fwait
or
dec
sub
addb
popa
adc
sbb
cmp
pop
hlt
daa
repnz
std
leave
add
inc
mov
outsl
jg
inc
adc
adc
repnz
sbb
addr16
xor
cmp
mov
lahf
mov
fsubs
popa
pushf
out
stos
aas
test
and
push
stos
cwtl
pop
loop
mov
cltd
sub
mov
jge
xchg
adc
sbb
pop
adc
daa
push
inc
or
cwtl
inc
into
int3
push
lods
aam
pop
cmpsl
or
into
stc
cmpsl
mov
dec
mov
and
in
mov
fisubrl
jle
sbb
push
push
mov
jb
sub
xor
ret
jnp
popa
xchg
mov
mov
pop
divl
jmp
cmpsb
push
bound
sub
test
insl
fisttps
push
fstpl
adc
sub
mov
notb
inc
shl
adc
or
mov
inc
aad
ljmp
nop
xchg
and
adc
and
and
test
jecxz
sbb
repz
pop
or
sti
jno
sub
rcl
and
fnstenv
nop
sbb
repz
lods
jle
stos
cli
daa
rclb
scas
outsl
xchg
inc
test
mov
adc
clc
push
aam
in
inc
inc
fcompl
mov
dec
inc
shl
shrl
mov
stos
clc
xor
adc
add
xchg
pushl
dec
or
or
jo
add
jle
adc
xchg
inc
fisubrl
imul
cltd
xchg
mov
mov
fisubl
lods
imul
push
fistpll
jne
jle
flds
inc
in
sub
and
ret
push
in
dec
mov
xchg
lods
mov
sub
lret
inc
dec
xor
in
outsb
stos
xchg
dec
aad
int3
loop
orl
add
mov
mov
inc
repz
vmwrite
rcll
lss
lahf
cmc
fldl
pop
cmpsb
lds
outsl
sub
adc
cmp
out
push
cs
xlat
inc
test
les
xchg
push
scas
jae
add
mov
push
mov
jbe
repz
stos
mov
stc
enter
or
adcl
pushf
pop
mov
sbb
call
ljmp
add
push
or
xorb
mov
mov
jo
les
adc
add
add
mov
cwtl
mov
in
stc
or
test
xchg
js
inc
and
cmp
and
add
insl
in
xchg
jns
adc
in
xchg
loopne
inc
outsb
xchg
aam
ds
cwtl
aad
inc
or
aam
push
iret
adc
and
jb
push
pushw
lret
jnp
dec
lods
mov
push
sub
ret
mov
mov
cli
popa
push
aad
loopne
lods
stc
jle
mov
xlat
push
inc
push
je
les
mov
cmp
or
loope
lret
shrb
in
sbb
jns
cmc
push
icebp
jge
loop
sub
jae
fistpl
fcompl
sbb
idivl
jae
adc
loopne
adc
jno
xorl
outsl
or
mov
adc
ds
in
mov
fldcw
pop
sbb
jbe
loopne
fnstenv
icebp
pop
mov
mov
mov
js
inc
mov
and
test
mov
sti
mov
xchg
pushf
daa
mov
cmp
cmc
mov
fwait
mov
xor
lock
cs
dec
pushf
out
stc
push
sahf
into
mov
sbb
inc
jo
xlat
cmpsb
push
movsl
and
std
dec
mov
sbb
mov
xchg
fnstsw
lods
jge
adc
sarl
xchg
mov
mov
cmp
test
sub
gs
xchg
int
ljmp
add
push
mov
mov
adcb
les
cld
outsl
add
lret
and
or
cltd
xlat
daa
icebp
out
cli
mov
mov
pop
cli
dec
int
fmul
imul
sub
add
cmp
jmp
inc
insl
jmp
adc
pop
shrb
push
jne
int
lea
jne
inc
inc
mov
sarb
icebp
sahf
lahf
lea
aaa
cmp
dec
js
pop
arpl
int
scas
sub
movsl
xorb
lods
xlat
lret
mulb
xchg
stos
push
lods
and
and
stc
push
and
sub
imul
xchg
pop
lcall
dec
lret
in
cmc
jbe
aad
and
mov
and
std
in
mov
shlb
sub
add
jp
fcmovnb
sub
xchg
jle
fcomip
add
xchg
cltd
xchg
mov
cmp
enter
xor
mov
push
mov
inc
and
enter
shrl
bound
in
imul
sbb
test
xchg
cwtl
jno
push
shlb
aad
mov
sub
fnsave
cmpsl
add
mov
rcr
test
mov
daa
or
push
mov
pushf
pop
test
stos
fwait
lret
fsubr
and
hlt
pop
and
dec
sub
or
dec
scas
inc
push
notb
add
insb
cld
shll
fs
mov
hlt
inc
mov
cmpsb
or
xchg
pop
test
sbb
mov
jo
inc
sti
pushf
jmp
sbb
or
test
mov
nop
shll
pop
inc
fiaddl
lahf
mov
in
sbb
xor
loope
cld
push
sbb
dec
push
xor
testb
jecxz
cmpsb
aam
mov
neg
push
std
push
add
mov
mov
or
iret
std
incl
fistpl
cmpsb
arpl
adc
pop
aas
inc
mov
jne
ret
int3
dec
jg
inc
and
cld
test
sbb
inc
loopne
rcll
push
ret
pusha
and
jp
lret
mov
int
xchg
mov
mov
cmp
cmp
or
fwait
lahf
add
rolb
repz
int
rcrb
out
cmp
pop
xchg
loop
xchg
dec
ljmp
mov
cmp
xor
xchg
sbb
dec
and
lcall
xor
cwtl
sbb
nop
cmp
inc
mov
call
jnp
sbb
xor
das
xchg
push
adc
int3
aad
jp
adc
ja
push
push
inc
or
sub
scas
mov
add
lcall
jl
cmp
xchg
xchg
mov
ss
sbb
out
fiadds
add
insb
xchg
arpl
imul
dec
xor
jne
out
sub
mov
sbb
out
dec
push
das
test
xchg
std
xchg
add
shr
xor
push
sahf
mov
push
add
aas
pop
adc
adc
popa
addl
dec
dec
push
mov
adc
iret
jp
mov
lock
pop
les
pop
hlt
cmc
divb
fimuls
out
add
xorl
imul
or
es
and
in
ret
ret
pushf
inc
jbe
xchg
xor
lahf
sub
sub
and
es
sbb
aas
int3
mov
std
repz
cmp
iret
and
pop
xchg
ds
sbb
xchg
call
lock
insl
push
add
mov
cmpsl
loop
or
pop
xor
add
xchg
ret
xlat
mov
fstl
ret
mov
xchg
inc
bound
ja
jmpw
or
lahf
jecxz
cmp
shrl
xor
out
jp
push
ret
in
pusha
mov
pushf
clc
add
insl
sbb
sub
in
cmpsb
push
notl
movsb
cld
add
pop
sub
lahf
cmp
mov
and
pop
call
add
adc
cmpsb
and
nop
adc
jmp
in
or
cmpsb
iret
xchg
lds
jge
adc
cwtl
adc
es
pop
movsl
ljmp
push
mov
pop
push
push
jbe
mov
xchg
loope
fnstcw
pop
inc
xor
xchg
pop
xchg
lahf
pop
jle
test
cmp
lret
movsl
dec
push
arpl
pop
lret
dec
push
enter
push
mov
push
stc
out
jno
test
addr16
push
fiadds
sub
sub
into
bound
inc
mov
xchg
xchg
scas
out
into
cld
and
or
mov
jns
lea
rcrb
fs
and
add
sub
cmp
stos
xchg
fistpl
in
push
inc
es
cmp
sbb
fcoms
sub
push
xor
inc
pop
dec
iret
aas
rolb
repz
out
std
sub
mov
jo
mov
filds
sub
cmp
popa
pusha
fstl
arpl
jnp
adc
xchg
int
xlat
xor
push
mov
dec
aaa
pop
xchg
xchg
cwtl
sub
mov
rorl
in
jp
mov
or
testl
test
movzbl
xchg
lret
cmp
sub
push
enter
aaa
cmp
and
adc
mov
mov
in
jg
push
push
lahf
hlt
xchg
add
cmp
push
sbb
xchg
lods
or
push
jmp
mov
orl
and
xchg
hlt
adc
sahf
pop
lcall
mov
cli
xchg
xor
add
fmuls
and
and
and
mov
push
sbbb
repz
push
sbb
inc
inc
movsb
outsl
and
xchg
push
imul
xchg
xor
popf
xchg
sub
mov
test
jge
imul
lea
fnstcw
lock
inc
xor
dec
mov
xor
sub
daa
in
cmp
mov
cmpsl
in
cmpsw
test
push
push
loope
insb
int3
in
xor
xchg
and
xchg
lret
or
lret
push
jle
xchg
sub
add
mov
mov
or
or
jo
push
ja
std
pushf
mov
adc
and
jge
aam
xchg
pop
xlat
push
orb
lock
cmp
andb
xor
sbb
paddusw
das
insl
shrl
xchg
sub
adc
xorl
xor
rorb
xor
mov
inc
sub
jecxz
add
outsb
stos
dec
mov
subl
nop
and
mov
cmpsb
mov
rcrl
xlat
out
call
mov
pop
sahf
lret
jecxz
sub
loope
std
lds
cwtl
lock
pop
cltd
or
orl
mov
xchg
add
shll
fnsave
ljmp
std
push
pop
dec
aam
movsl
sub
xorl
data16
mov
xor
mov
sbbl
jl
jbe
aaa
aam
das
inc
in
mov
xor
xchg
nop
orl
cmp
xchg
jno
fdivr
add
inc
mov
xchg
push
jmp
arpl
and
push
pop
rclb
dec
mov
fucomp
add
andb
cmpsl
cld
std
cmp
notb
mov
xorl
sbb
push
std
mov
push
divb
je
pop
jae
xchg
pop
xor
nop
orb
cltd
xchg
push
scas
out
call
mov
inc
ds
jp
mov
adc
push
cmp
cmp
das
and
jae
addb
dec
and
cmpb
mov
iret
outsl
ret
repnz
push
andnps
lock
loopne
xchg
shl
icebp
cltd
mov
popf
mov
into
pop
mov
add
push
cs
pop
cmp
add
insl
inc
ret
rolb
pop
jb
or
subb
cli
ss
andb
in
fwait
jnp
jb
je
neg
sbb
dec
pop
stc
cmpsb
aam
movsl
or
fcoms
xchg
mov
pop
mov
sbbb
pop
xchg
insl
inc
jns
mov
mov
and
adc
and
xor
out
es
test
mov
add
andb
jne
scas
imul
adc
or
aaa
push
pop
xchg
lcall
int
jo
rolb
orb
outsl
in
daa
add
cltd
hlt
pop
repz
jnp
add
jecxz
addb
push
or
pusha
sbb
leave
xchg
std
and
cmpl
lock
push
into
fimull
subl
xchg
lea
dec
mov
add
in
mov
add
jg
fsubrl
fcoml
les
add
jg
sbb
and
cmp
cmpsb
mov
out
clc
push
fs
adcl
out
insl
lock
repnz
loopew
shll
push
xor
or
rolb
call
xchg
mov
sbb
adc
mov
push
movsb
mov
fnstcw
mov
scas
fisubrl
sub
int3
lahf
out
in
loopne
bound
dec
bound
jge
jl
icebp
adc
in
mov
andb
xchg
gs
bndstx
cmc
mov
imul
ds
loope
sub
inc
inc
xchg
xor
pop
mov
xchg
cmpl
subl
mov
sbb
xor
arpl
lahf
and
ss
adc
andl
pusha
test
inc
outsl
gs
or
cmpl
adc
addl
ss
sub
pop
inc
out
sbb
fs
rcrb
addb
ds
push
sub
mov
adcl
bound
pop
push
mov
ljmp
in
test
jo
movsl
imul
jnp
repz
jbe
arpl
jl
fcompl
cmpsl
repz
add
test
pop
out
mov
add
mov
dec
pop
imulb
xor
notb
fsubl
push
jne
xor
test
test
lahf
push
sarb
neg
test
adc
inc
inc
in
pop
nop
nop
test
cmp
mov
test
rcrl
notl
add
xchg
adc
mov
nop
xor
sub
cs
jno
sbb
sbb
dec
ret
mov
jp
add
xchg
pop
stos
jmp
imul
lds
cmp
testl
adc
push
fdivs
test
sub
push
je
stc
out
mov
cwtl
lock
or
test
test
sbb
loopne
adc
adc
cltd
in
and
jl
addb
mov
and
lret
fsubrs
and
mov
ret
jnp
inc
movb
push
xor
test
push
dec
sub
xor
mov
dec
pop
cmp
rcrb
ret
pop
xor
fs
and
test
loope
inc
xor
push
xchg
js
or
insb
dec
and
pushf
mov
test
xchg
mov
xor
and
int3
es
addb
scas
xchg
cmp
fildl
pop
popf
insb
sti
xlat
push
ja
inc
shll
out
aam
sub
inc
test
add
pop
or
xor
xchg
scas
shll
and
xchg
pop
mov
test
bound
test
and
fcomi
js
cmp
pop
lds
fs
and
cld
andb
inc
test
rcr
or
push
or
in
std
mov
sbb
xchg
mov
sbb
imul
xchg
pop
jl
sbb
and
dec
adc
test
cmp
xchg
push
inc
pop
test
adc
in
push
daa
lock
in
jne
aaa
add
test
mov
sub
stc
js
ret
jp
add
flds
mov
iret
pushf
and
test
xchg
inc
aaa
pop
jmp
or
daa
add
test
jge
mov
lret
rol
mov
gs
mov
fimuls
out
in
pop
aad
into
push
stos
pop
andb
call
sbb
test
mov
loop
xor
sub
add
test
out
ja
ret
cmp
adc
mov
scas
add
mov
inc
xchg
test
push
mov
lret
lock
call
test
dec
fstl
pop
sbb
gs
inc
dec
jl
cltd
xchg
out
ja
test
enter
add
xchg
xor
and
pop
mov
loopne
add
xchg
addb
outsl
test
inc
mov
loop
int3
adc
cli
or
shll
add
or
roll
sbb
xchg
xchg
in
jns
mov
cld
push
or
out
inc
and
xchg
sbb
push
sti
cmp
lods
jg
inc
mov
jp
cmc
xchg
call
pop
dec
out
popa
loope
icebp
and
sbb
pushf
addb
push
repz
out
mov
mov
jne
sub
sahf
push
stos
cmp
mov
sub
call
push
or
xchg
fdivr
loop
and
out
mov
xorl
rsm
rcrl
fisttps
filds
rolb
pushf
loopne
out
adc
xchg
test
test
xchg
xchg
fidivs
adc
jae
rolb
ja
out
mov
pusha
xchg
inc
mov
rol
mov
shl
pop
adc
mov
inc
xchg
mov
pop
adc
xchg
jne
push
cli
pushf
inc
xchg
push
arpl
shlb
push
lods
xchg
jg
test
add
adc
fisubs
les
cmp
add
mov
cmp
sbb
aas
notl
adc
jp
xor
pusha
xchg
mov
shl
out
lds
jnp
xchg
and
dec
out
das
add
xchg
mov
loopne
rorl
divb
jne
ficompl
jns
roll
aaa
xchg
cmp
cmp
jo
negl
sarl
aas
mov
mov
cwtl
pusha
xchg
xchg
and
ljmp
ljmp
inc
pop
mov
mov
addb
or
sbb
xchg
xchg
rolb
sub
mov
out
js
mov
add
out
xchg
jmp
gs
mov
jp
push
inc
das
xor
push
inc
pop
inc
pop
or
xchg
dec
and
xchg
rolb
enter
mov
xchg
pop
sub
insb
xor
sbb
xchg
pop
push
and
les
out
ficoms
inc
fwait
inc
mov
aas
psubsw
jle
fistl
xchg
imul
sbb
repnz
dec
divl
cmc
or
xchg
mov
xchg
sbb
xchg
clc
test
pop
inc
test
out
mov
rol
and
psllq
mov
mov
dec
sti
aas
sub
out
mov
xchg
mov
fwait
xchg
inc
jns
arpl
int
imul
mov
sbb
ljmp
or
xchg
repz
cmp
lock
test
xor
iret
xor
clc
mov
jb
notb
test
jo
iret
cmp
aad
pop
shr
cmp
movsb
mov
mov
xor
arpl
scas
pop
push
cmp
adc
imul
je
add
js
lcall
xchg
and
aaa
mov
divb
mov
aad
sbb
mov
mov
sub
pop
idivb
pop
dec
dec
mov
aad
jb
loop
xchg
adc
inc
xor
mov
in
ret
jg
outsb
adc
in
call
xor
push
mov
mov
mov
orb
push
push
sbb
mov
cmpsl
loopne
lea
das
jg
sub
cld
stos
iret
adc
push
hlt
sub
arpl
dec
in
cmpsl
jno
pop
cli
pop
int
or
mov
les
mov
push
add
pushf
push
mov
out
xchg
dec
mov
cmc
cmpsl
insl
test
push
jno
push
sbb
inc
xchg
pop
outsb
int
imul
es
lock
cmp
jge
push
mov
pop
in
cltd
jne
arpl
adc
mov
mov
adc
add
mov
mov
cld
adc
jo
popa
shrl
lret
leave
fmul
jle
and
in
add
out
es
rolb
push
push
and
stos
dec
leave
pushaw
je
and
test
mov
xor
aam
add
shl
push
aad
pop
pop
pop
push
lods
dec
jb
sahf
das
hlt
hlt
ja
cwtl
adc
push
bound
rorb
scas
cmp
into
scas
jg
loopne
mov
fisubrl
cs
mov
shll
mov
add
mov
jecxz
dec
in
nop
and
and
add
xor
es
rorb
lods
mov
inc
push
in
jmp
ficoms
fs
jecxz
icebp
add
mov
lahf
shlb
in
rorb
adc
mov
add
ror
es
lret
xor
adc
push
mov
mov
fnsetpm(287
inc
jge
and
test
jo
into
imul
xchg
orb
pop
into
push
mov
add
inc
mov
stc
or
cli
test
test
sbb
push
xchg
pop
arpl
daa
push
jecxz
or
mov
lock
cmp
outsl
sub
pop
xchg
xlat
cmc
mov
inc
push
sahf
push
mov
movsb
sub
dec
mov
or
jb
fidivrl
mov
xor
pop
adc
pop
andb
mov
mov
mov
pop
loopne
ljmp
sbb
mov
fbstp
fwait
sub
scas
mov
stos
iret
cli
leave
shl
push
jo
jnp
out
pusha
stc
mov
int3
fstpt
je
and
lods
push
pop
push
out
js
dec
mov
adc
push
flds
les
jne
scas
xchg
xchg
inc
jecxz
pusha
mov
push
adc
arpl
lea
ljmp
das
sbb
mov
cmp
push
and
add
js
fcmovnbe
sbb
inc
and
or
data16
js
dec
mov
xor
mov
inc
inc
mov
mov
hlt
sub
mov
dec
movsb
xchg
xchg
jae
push
inc
sub
inc
push
ficomps
sarl
inc
mov
aas
mov
dec
outsl
dec
sub
push
call
dec
xor
sub
mov
push
push
mov
jmp
clc
into
scas
inc
add
mov
dec
jl
stos
lcall
dec
jg
xchg
sbb
cmpl
jns
dec
aaa
sub
add
xorl
xchg
mov
shr
rcrl
and
mov
stos
lret
mov
adc
mov
jo
inc
cli
push
or
enter
jno
pop
push
xchg
loopne
cmp
cmp
in
dec
loopne
inc
ss
fucomip
fdivr
dec
orl
and
sti
arpl
adc
ret
stc
jnp
fs
mov
xorb
push
push
test
adc
sbb
pusha
notl
lock
mov
xor
popf
gs
aaa
lahf
inc
push
adc
fldenv
aam
gs
cld
iret
inc
out
mov
mov
mov
lods
movsb
inc
test
mov
test
loopne
ss
fisubl
stos
test
cmp
push
sub
scas
aas
mov
aam
mov
jnp
pop
add
mov
mov
loop
or
mov
mov
int
in
cli
xchg
test
and
inc
cmc
dec
sub
pop
mov
mov
inc
pop
stos
dec
jl
push
lahf
cmove
and
xchg
push
les
and
pop
push
pop
mov
leave
clc
les
cmp
sbb
mov
jl
mov
xor
lea
clc
cld
ja
imul
gs
out
mov
mov
cmp
fs
je
ret
mov
sub
push
jne
mov
neg
cmp
fbld
gs
jmp
pop
xorl
jle
jno
cmc
dec
mov
cmp
repnz
mov
ja
cmpsl
dec
inc
or
inc
mov
jle
jle
in
jnp
fbld
push
and
or
mov
dec
sub
nop
push
mov
int
adc
push
aaa
or
rol
loopne
sbb
lock
fistps
sub
outsb
push
adc
adc
insb
fdiv
nop
adc
mov
inc
ret
mov
pop
les
add
aam
jp
mov
lods
ret
cmp
inc
sar
sub
mov
cmp
ja
nop
mov
xor
jmp
sbb
nop
nop
mov
sub
adc
mov
mov
out
pop
mov
mov
and
inc
aad
out
mov
push
and
int
push
pop
fs
lret
scas
movsb
insl
insb
sub
out
and
fs
outsl
pop
sahf
mov
cmp
push
in
jp
pusha
mov
jb
mov
mov
je
and
add
mov
int
les
cmp
add
dec
push
bound
inc
mov
std
std
das
push
stos
inc
cmp
popf
cmp
repnz
outsb
mov
pop
incl
repz
and
cmp
ljmpw
test
push
ror
mov
mov
jg
iret
mov
insl
scas
and
cmpb
jns
shll
push
xchg
add
adc
aaa
imul
jno
rorb
inc
mov
lret
lret
pop
lock
lods
data16
mov
inc
lahf
xorl
bound
cld
movsb
mov
mov
mov
in
or
mov
mov
loop
cmpsl
mov
test
lock
jecxz
lock
ds
lret
xchg
pop
out
push
inc
addr16
mov
sub
fidivs
lret
jmp
push
cmp
add
dec
push
out
loopne
mov
jb
iret
or
sbb
lea
cmp
push
lea
xchg
idiv
jbe
pop
outsb
xor
mov
inc
in
rclb
lea
mov
jecxz
mov
jbe
sar
jae
into
fidivs
mov
mov
add
pop
movsl
and
pusha
lea
inc
jp
jae
lods
xchg
fadd
mov
or
lea
cld
sarl
jb
sahf
rcl
popa
xor
notl
sti
mov
es
jns
ja
ret
loop
rorl
mov
ja
mov
sbb
loopne
std
std
std
jnp
push
xor
push
mov
lock
shrl
adc
outsb
pop
int
mov
rcrb
add
or
lea
xor
gs
mov
jae
cmc
inc
mov
sub
aas
lcall
rcrl
iret
clc
ror
rol
aas
xlat
adc
mov
mov
lea
xor
ss
pop
jle
es
xor
popa
and
push
mov
push
insb
hlt
sbb
push
xchg
cmpsl
xchg
mov
in
dec
into
popf
add
inc
dec
cmp
cmp
cmp
jo
imul
ss
lock
addl
outsl
inc
in
pop
les
sahf
mov
ds
add
test
aas
sahf
inc
mov
nop
mov
jae
lods
fwait
mov
cmp
mov
addr16
push
inc
dec
mov
xor
pop
or
mov
icebp
xor
movsb
sbb
jnp
call
and
daa
popa
mov
enter
push
jb
and
cli
mov
popf
repz
ret
sub
nop
mov
mov
sbbl
lods
shll
cmpsb
inc
mov
and
push
dec
sbb
addb
dec
test
cmp
mov
insb
in
pusha
mov
inc
fwait
loop
gs
jmp
scas
xor
es
mov
sldt
mov
adc
lret
lar
addr16
faddl
push
add
add
dec
fiadds
push
fldcw
or
xor
loopne
filds
cmpsl
lods
cwtl
adc
fwait
insl
sub
add
mov
lahf
ja
dec
leave
dec
mov
dec
stos
adc
mov
xchg
aaa
outsl
lds
cmp
fistl
lahf
or
mov
jecxz
pop
enter
xchg
xchg
leave
mov
pop
in
sub
adc
mov
lds
aad
cwtl
pusha
mov
stos
into
pop
lret
sub
jg
dec
jle
mov
stos
mov
cmpsb
push
inc
mov
out
ja
xor
bound
roll
ljmp
in
dec
sub
popa
jo
jb
push
sarl
adc
inc
jbe
cld
mov
repnz
pop
sub
test
hlt
loop
popa
inc
sahf
ljmp
cmp
gs
dec
lea
pop
pop
mov
xor
add
dec
inc
ret
lcall
and
xorb
push
or
mov
int
roll
repnz
push
int
cld
pusha
and
lret
or
xor
loopne
imul
fsubr
xlat
pushf
rorb
and
inc
fdivrs
pop
jb
loop
fidivrs
push
in
jb
arpl
js
cmp
das
inc
stos
dec
mov
in
mov
push
nop
xor
dec
jmp
or
cmp
cmpsb
mov
ss
std
mov
adc
imul
loopne
add
hlt
mov
bound
push
adc
popl
arpl
subl
scas
xor
mov
shl
xchg
es
push
mov
fistps
popl
dec
jbe
adc
rorl
mov
xchg
sub
idiv
ret
cmp
cmp
add
movb
mov
mov
popl
dec
adc
cmp
clc
cmp
or
xchg
lret
xor
inc
inc
pop
mov
in
xor
push
inc
cmp
xchg
mov
ret
scas
ret
push
nop
mov
test
mov
cwtl
xor
in
mov
cmp
fstpl
nop
mov
pushf
inc
nop
testl
mov
mov
xlat
addr16
sbb
cli
stc
sub
mov
sbb
nop
inc
hlt
in
pop
mov
nop
inc
adc
nop
jmp
into
xchg
pushf
nop
nop
push
in
dec
cmp
xor
xor
mov
lock
dec
daa
mov
cwtl
rclb
adc
mov
push
ds
das
inc
outsl
nop
add
std
test
sub
mov
std
stc
popa
dec
repz
mov
mov
pop
cmpsb
cmpsb
dec
int
incl
scas
daa
imul
fiadds
add
fnstcw
loope
test
int
rclb
inc
insb
sti
push
cmp
iret
out
mulb
pusha
nop
outsb
lahf
jae
add
sub
mov
das
in
jmp
xlat
fs
add
mov
nop
and
pop
add
sahf
repz
pop
mov
xchg
fcmovu
cmp
nop
mov
clc
add
inc
leave
les
out
cmpl
push
nop
lods
mov
scas
int3
or
add
repz
stos
nop
adcb
rcrb
xchg
adc
clc
xchg
sub
loopne
jns
popf
and
sub
jno
pop
and
cld
or
icebp
test
sub
mov
cltd
mov
imul
sub
out
scas
dec
dec
out
cmp
aaa
inc
pop
xchg
and
insb
lret
jne
dec
cmp
mov
mov
xchg
sti
push
inc
sub
loope
sbb
xchg
loopne
gs
push
mov
sbb
mov
jp
mov
jno
jne
mov
mov
repnz
mov
addr16
xchg
cmp
dec
arpl
sahf
shll
inc
js
sbb
xchg
mov
ja
movsb
movsb
or
or
xlat
mov
mov
ret
out
mov
mov
out
adc
fwait
sbb
cli
dec
loopne
stos
push
dec
add
mov
pop
mov
dec
push
adc
sub
pop
push
sahf
mov
aas
adc
ds
or
ljmp
adc
xchg
inc
mov
popa
sbb
rorl
hlt
iret
mov
xchg
xchg
add
pop
loopne
dec
jb
int3
pop
jbe
add
aas
scas
ss
ds
or
xchg
mov
stc
and
and
mov
call
aas
sbb
xchg
cmpsl
das
mov
adcb
push
movsl
scas
mov
xchg
add
xchg
xor
xchg
and
cs
push
inc
xchg
push
mov
mov
lea
xchg
dec
sbb
jl
into
or
xchg
mov
cld
jb
movsl
cmc
mov
push
daa
and
scas
aas
cmp
pop
scas
fnsave
pop
xlat
pusha
fstpt
pop
adc
dec
ret
dec
paddusb
adcb
sbb
and
daa
add
mov
or
pop
lahf
nop
add
jb
jle
mov
rolb
loopne
ljmp
andl
insl
std
out
or
pusha
xchg
jp
jg
cmp
cmp
add
icebp
stos
inc
je
mov
repnz
mov
mov
outsb
sbb
ljmp
cmp
xchg
das
push
add
dec
rcll
arpl
cmp
or
xchg
push
scas
std
xchg
rclb
jg
hlt
pop
fdivl
xor
mov
xchg
mov
xor
jbe
add
push
push
xchg
or
add
cmp
test
dec
sbb
push
xor
adc
inc
negl
mov
and
bound
push
pop
mov
sub
cmp
rclb
clc
insl
mov
scas
cmp
insl
rorl
dec
mov
add
fnstsw
sbb
dec
iret
pop
mov
lret
jge
xlat
pop
inc
adc
xchg
arpl
pusha
xchg
enter
add
lret
aam
add
enter
jle
out
cmp
andb
cmp
repz
inc
sub
scas
jns
pusha
push
lret
mov
push
xchg
out
push
jns
stos
add
xchg
fldcw
jae
lret
mov
xchg
xlat
xor
sti
in
push
push
xchg
sti
mov
outsb
adcl
xchg
shl
push
xchg
enter
push
repnz
scas
imul
ss
dec
pushf
out
sbbl
add
add
leave
push
mov
add
lea
push
push
push
push
and
mov
lea
push
push
add
test
nop
je
dec
nop
call
clc
lea
mov
add
or
es
pop
lea
shr
add
push
push
push
call
or
sub
leave
ret
ret
sub
mov
and
mov
or
sub
add
add
lea
sub
shr
dec
not
mov
sub
mov
sub
mov
je
jne
push
pop
sub
add
lea
stc
pushl
bnd
push
mov
sub
lea
push
push
push
push
push
mov
add
test
jne
jne
adc
lea
push
push
movl
and
jne
call
mov
nop
inc
add
mov
lea
push
and
pop
je,pn
mov
std
in
mov
and
push
rclb
test
push
aas
mov
fcmovbe
cmpsb
pop
pop
insl
cmp
inc
test
mov
xchg
ret
movb
pop
xor
mov
xchg
cmc
std
mov
lock
movsb
pop
stc
sub
js
popa
test
xchg
and
jno
dec
push
fs
nop
push
xchg
lods
push
aaa
insb
orb
ficoms
push
lret
jl
adc
mov
int
rclb
ss
jle
mov
test
xchg
mov
xchg
adc
mov
xor
fistpll
pop
push
hlt
mov
test
rolb
addr16
aas
sub
and
xchg
adc
dec
mov
xor
and
and
pop
ret
push
push
and
test
mov
adc
xchg
push
shlb
cltd
arpl
repnz
mov
out
cmp
aas
sub
xchg
lds
movsl
lcall
xchg
xchg
rclb
jg
inc
iret
adc
jo
cltd
and
pause
nop
xchg
iret
cltd
outsl
jp
scas
mov
scas
adc
xchg
mov
loopne
movups
cmp
fsubs
push
and
lea
rclb
lret
xor
pop
std
data16
cmpsl
adcb
aaa
adc
inc
dec
jo,pt
outsb
push
jb
repz
mov
inc
lea
insl
jg
cwtl
adcb
orl
repz
shll
adc
push
jle
sub
pop
dec
pop
xor
fld1
adc
jns
std
jne
out
idivb
fiadds
ret
shlb
xor
aas
stos
xchg
jb
out
in
outsl
jp
ret
sub
iret
xchg
movsb
xor
mov
pop
pushf
loopne
fwait
lock
cld
dec
sarb
jo
or
xchg
jmp
jbe
fwait
mov
or
adc
out
loope
ss
ljmp
mov
pop
fwait
out
ja
mov
faddp
ljmp
mov
scas
loope
mov
fildll
xor
sti
leave
loopne
xor
enter
adc
push
fsubrl
add
inc
div
icebp
jmp
lock
fadd
sbb
aas
sbb
xor
stos
mov
daa
pushf
pusha
xchg
jge
cmpsl
sahf
ss
movsb
dec
cmp
inc
xchg
xchg
out
andl
jl
jnp
loope
pusha
sub
mov
pop
pop
mov
pop
jp
js
or
push
test
scas
mov
push
mov
pusha
xchg
cli
and
xchg
lret
push
and
lea
sarb
push
pop
pop
in
jno
adc
mov
lahf
pusha
stos
lcall
and
xor
jno
and
mov
or
xchg
call
inc
xchg
push
add
inc
jg
pop
push
dec
js
data16
cwtl
rclb
ds
xlat
inc
inc
outsl
pusha
test
cmp
pop
ds
xchg
and
popf
push
cwtl
xor
cwtl
inc
xchg
cmp
sahf
add
test
dec
fiaddl
lds
sbb
leave
dec
jns
loopne
les
popf
jle
sarl
leave
test
pusha
imul
push
xchg
scas
push
fstps
into
cmc
mov
sbb
xchg
rclb
fsts
cmp
filds
xchg
lret
std
in
out
insl
lcall
sub
inc
xchg
push
addr16
jmp
push
jbe
xchg
fdivrl
lret
cmpsb
fstpt
pop
push
mov
xchg
lods
iret
mov
test
and
scas
xor
rolb
lods
or
mov
pop
mov
xchg
jmp
add
xchg
cmc
or
into
in
jbe
dec
sbbb
lds
inc
sub
dec
inc
pop
outsl
and
and
or
add
ljmp
xchg
stc
mov
xchg
popa
fldcw
leave
sarb
xchg
iret
adc
xchg
push
rcr
call
jnp
shrb
xor
and
cltd
sahf
scas
adc
xchg
lods
mov
xchg
and
out
rclb
inc
adc
sub
adcb
xchg
shrb
jns
loope
add
xchg
fisubrs
pop
sbb
xchg
adc
cltd
test
int3
or
xchg
and
mov
fwait
xchg
insl
sbb
xchg
inc
ficoms
xchg
push
xor
dec
roll
dec
jne
xchg
pop
add
add
xchg
scas
mov
cld
enter
leave
pop
es
add
je
nop
xchg
rcll
addb
cwtl
inc
xchg
jnp
xchg
adc
adcb
jecxz
cmpsl
test
cltd
jl
xchg
xchg
mov
outsl
push
mov
leave
jne
mov
int
xchg
loopne
lahf
sbb
add
cmc
jno
dec
in
addr16
icebp
hlt
xchg
adcb
dec
pop
dec
lea
fstp
xor
sub
lods
xchg
rclb
sahf
cmp
stos
sarb
or
add
jge
mov
jle
sarl
jg
jb
ret
hlt
mov
test
or
sbb
pop
mov
and
outsb
adc
in
push
xchg
bswap
dec
enter
push
lds
push
mov
es
lret
inc
jns
shrb
cwtl
nop
xchg
adc
xchg
push
in
cmp
int3
fmulp
xchg
lods
daa
fs
leave
outsl
in
adc
xchg
mov
pushf
rclb
enter
mov
and
dec
jmp
ret
mov
sub
dec
cmpsb
push
push
cmp
pop
pushf
adc
push
movsl
sub
aam
pop
adc
xchg
fsts
negb
xchg
sbb
push
pop
or
xchg
xor
cmpsb
adc
sbb
sbb
test
leave
addr16
dec
adc
xchg
pop
push
fwait
lahf
xchg
cmp
lods
sbb
xchg
pop
inc
pop
adc
jae
inc
std
mov
xchg
and
out
mov
jmp
aad
xchg
les
push
je
testb
std
add
xchg
mov
xchg
aaa
or
loop
mov
rclb
inc
mov
mov
dec
mov
roll
pop
or
push
cs
popf
pop
xchg
in
out
in
and
add
xchg
dec
or
int3
in
clc
sub
cwtl
pusha
xchg
cmc
repz
pop
imul
and
xchg
mov
sahf
mov
mov
insb
cmp
sbb
xchg
fdivr
mov
jge
sbb
adc
inc
add
cwtl
jb
sbbl
cwtl
addl
and
cwtl
out
push
cmpsl
xchg
push
mov
jns
sbb
out
sub
jae
lcall
mov
stos
int3
xchg
or
roll
loopne
nop
xor
cwtl
and
adc
cwtl
push
xchg
addr16
pop
cld
in
loop
fnstsw
push
iret
scas
das
jno
imul
loopne
and
xchg
fdivl
imul
lds
arpl
pop
enter
outsb
fstps
out
xor
rcll
mov
push
sbb
and
adc
mov
and
imul
call
test
cwtl
jle
in
mov
loopne
mov
xchg
dec
and
decb
mov
cmp
sbb
cmp
jg
pop
adc
cmpb
adc
cwtl
mov
test
insl
icebp
pusha
cltd
cmp
fdiv
push
dec
ds
mov
arpl
or
xchg
insl
push
add
aaa
enter
xor
cmp
sbbb
insl
repnz
mov
xchg
adc
inc
cwtl
sbb
cwtl
push
inc
mov
scas
ficoml
sahf
aam
int3
mov
jo
repnz
xchg
addb
xchg
insb
fdivl
sub
or
adc
mov
cmp
xlat
outsl
adc
cwtl
sbb
pop
mov
jns
mov
inc
loop
mov
and
jnp
inc
or
pop
es
or
jmp
xor
push
or
sahf
xchg
sbb
ss
out
or
cltd
icebp
mov
cltd
sti
xchg
aaa
jno
xor
xor
jo
add
cltd
ret
adc
ja
out
nop
cltd
push
dec
jae
adc
adc
ja
and
jo
cmpsl
or
int
push
mov
icebp
enter
lods
sub
roll
add
subl
cltd
insl
fs
icebp
sub
in
out
lods
ret
mov
lea
dec
mov
aas
fldenv
adc
sub
popf
cmp
cmpsl
xor
xchg
mov
sub
push
es
jl
pop
in
inc
xor
pop
adc
add
out
jecxz
push
and
cltd
push
sbb
dec
jns
push
push
sbb
cltd
fildl
add
or
mov
les
mov
into
lock
or
rcl
lods
fisttpll
push
cltd
mov
and
sbbb
push
scas
mov
loop
movb
pop
jl
jno
lret
adc
mov
imul
cmp
cltd
enter
stos
addr16
sub
push
cld
add
add
in
xchg
xor
xchg
out
inc
add
bound
outsb
sbb
pop
jecxz
lcall
cltd
and
or
cltd
cwtl
push
cltd
cmp
arpl
cmpsb
xor
lock
lcall
adc
jo
stos
inc
ljmp
in
mov
lods
jo
dec
mov
lcall
inc
lcall
dec
ss
xchg
sbbb
jecxz
jo
lret
js
sbbb
xor
not
cmp
ds
cld
aad
shll
aad
cmpsb
mov
sti
dec
xor
and
aad
sbb
mov
xchg
adcl
jns
nop
xor
jne
std
adc
fidivrs
test
std
adc
fwait
out
stos
daa
dec
adc
mov
or
adc
xor
popa
scas
sub
jno
xchg
push
pop
push
ja
dec
punpckldq
push
out
mov
mov
adc
jp
sbbb
lcall
in
ljmp
test
and
fidivl
out
je
ss
call
add
lcall
es
lcall
xchg
movsb
mov
mov
push
dec
lods
enter
ret
rolb
mov
decb
popf
pushf
rcrb
fistps
lcall
dec
or
mov
mov
pusha
lcall
adcb
shll
sbb
cwtl
inc
lcall
adc
mov
mov
adc
fwait
inc
repz
xor
add
and
adc
test
fwait
push
pop
cmpsb
arpl
and
dec
jne
push
test
or
fwait
xlat
repnz
jle
adc
fwait
push
xchg
dec
bound
or
or
and
jle
inc
scas
outsb
outsl
lret
jbe
xchg
jecxz
mov
xor
lods
mov
add
pop
jl
sbb
fwait
adc
insl
jp
pop
inc
cmp
movsl
clc
mov
pop
push
fs
inc
int
ds
test
fwait
addr16
cwtl
lock
lods
jno
add
cmp
jg
enter
xchg
mov
rcrl
pop
adcb
sahf
orl
sub
in
lds
jae
mov
mov
inc
adc
fwait
push
xchg
fucom
pop
xor
enter
add
sub
pusha
fwait
mov
sub
cltd
jo
gs
inc
mov
je
xor
push
icebp
adc
sub
lods
nop
mov
jne
cmp
ljmp
inc
adc
fwait
cld
lods
je
imul
push
subl
jmp
xor
pop
mov
dec
push
inc
pop
hlt
jb
sbb
jle
test
bound
or
leave
mov
popl
sbb
stos
push
lods
pop
mov
inc
add
xor
push
sub
mov
and
push
shlb
hlt
arpl
push
cli
stos
xchg
xor
push
das
inc
out
and
mov
inc
rcrl
mov
xchg
pushf
dec
pop
fsubs
out
aas
mov
mov
jo
mov
xor
inc
lods
cmc
sub
sub
cmp
out
lds
sub
pushf
rcr
adc
pushf
ljmp
std
sbb
sbb
pushf
es
stc
inc
cmp
aam
mov
stos
push
out
mov
aam
mov
mov
movsb
mov
pushf
cltd
cltd
add
pushf
dec
mov
stos
jns
mov
dec
ss
stos
add
pop
mov
xchg
rcrb
inc
lds
sahf
dec
xchg
inc
test
mov
cltd
loop
sub
popf
mov
inc
cmp
pop
sub
std
sub
inc
cs
and
fmuls
rcll
and
enter
xchg
adc
cmp
fnstenv
imul
sti
jb
cwtl
nop
pushf
mov
push
pushf
and
insb
jae
lds
add
rcrb
mov
out
adc
pushf
cmp
jl
hlt
lret
std
and
mov
pop
mov
sti
jbe
xlat
rcll
je
cld
sub
popf
add
pushf
inc
mov
push
pusha
repz
pushf
and
lret
add
negb
jp
mov
and
pop
push
insb
lods
and
inc
or
cmp
ret
daa
and
push
out
push
push
popf
int
test
pop
jge
pop
incb
cltd
mov
jne
es
movsl
mov
imul
adc
inc
popf
pop
ret
popf
and
mov
aas
sti
fldcw
mov
out
test
mov
fs
sbb
popf
cmp
cmp
pop
jmp
mov
popf
cmpsb
add
arpl
stc
sub
dec
or
loop
jae
add
sub
bnd
sub
in
push
jecxz
pusha
popf
fstpl
imul
das
jle
orb
test
mov
xlat
loopne
mov
jp
jo
xchg
pop
cmp
adc
popf
sub
sbb
jle
lcall
xor
fadds
and
inc
ficomps
push
clc
nop
nop
nop
nop
jae
mov
add
add
add
inc
mov
nop
push
mov
leave
cs
add
scas
jg
pop
inc
add
cmp
fdivrl
pop
inc
add
mov
sub
add
push
pop
push
mov
xchg
ret
add
add
add
roll
add
in
scas
fildl
std
mov
xchg
ret
add
cmp
add
and
nop
nop
nop
nop
jae
add
rcrl
add
sahf
add
push
mov
leave
cs
add
add
add
mov
push
mov
xchg
ret
add
je
mov
add
adc
stc
push
clc
nop
nop
nop
nop
jae
add
dec
mov
mov
add
or
jns
add
add
mov
test
mov
push
hlt
pop
xor
nop
nop
jae
xchg
add
add
fwait
cmpsl
add
add
add
orb
add
cs
inc
jmp
nop
jmp
in
leave
cs
fmull
je
add
aaa
push
mov
mov
or
sub
add
add
add
add
nop
nop
nop
nop
jae
add
fwait
cmp
in
fsubs
jbe
clc
nop
nop
nop
nop
jae
mov
add
xor
and
push
mov
leave
cs
ret
push
pop
mov
add
push
xor
push
sahf
dec
add
clc
nop
nop
nop
nop
jae
add
add
nop
push
sbb
nop
nop
nop
nop
jae
add
add
xor
push
add
sbb
addr16
clc
nop
nop
nop
nop
jae
add
cs
mov
pop
fcmovb
cmpsl
push
clc
nop
nop
nop
nop
jae
add
sbb
add
movsb
cmp
xchg
jne
clc
nop
nop
nop
nop
jae
add
fiaddl
add
xchg
out
cmp
and
mov
xchg
ret
js
add
add
pop
mov
jmp
nop
nop
nop
jae
add
mov
add
mov
dec
adc
nop
nop
nop
nop
jae
dec
fdivs
add
add
jne
roll
nop
nop
nop
nop
jae
mov
sub
add
call
or
ret
shrl
cmpsl
add
mov
xlat
push
push
mov
xchg
ret
add
mov
sbb
in
shll
nop
nop
nop
jae
xchg
in
sub
add
add
aaa
push
clc
nop
nop
nop
nop
jae
mov
mov
stos
add
add
popf
add
clc
nop
nop
nop
nop
jae
dec
add
jmp
lahf
sti
movswl
clc
nop
nop
nop
nop
jae
ret
dec
fcompl
fmuls
fistpl
clc
nop
nop
nop
nop
jae
scas
inc
add
sbb
in
xor
cs
add
add
add
add
push
mov
imul
add
xchg
and
sbb
add
push
clc
nop
nop
nop
nop
jae
js
sub
push
add
add
sahf
test
nop
nop
nop
jae
add
ret
add
sbb
movsl
jmp
add
add
add
add
fwait
mov
push
and
mov
clc
nop
nop
nop
nop
jae
jmp
add
add
clc
nop
nop
nop
nop
jae
cmp
add
je
leave
mov
clc
nop
nop
nop
nop
jae
add
je
sub
mov
jg
mov
add
nop
nop
nop
nop
jae
add
cltd
add
insb
jmp
nop
nop
nop
nop
jae
add
add
add
add
xchg
fld1
nop
push
mov
leave
cs
xchg
add
fiaddl
add
xchg
add
push
mov
xchg
ret
push
sbb
add
popa
in
cmpsl
fwait
push
mov
xchg
ret
add
in
jg
cmp
add
fcmovb
nop
xor
add
and
stos
add
cs
mov
or
add
pop
sbb
sti
mov
push
mov
xchg
ret
ret
add
pop
add
push
add
add
shll
sar
nop
nop
nop
jae
fwait
xor
jg
add
add
nop
nop
nop
nop
jae
scas
add
add
cmpsb
cmp
add
loope
popa
clc
nop
nop
nop
nop
jae
fsubs
xor
and
push
pop
clc
nop
nop
nop
nop
jae
in
test
mov
push
mov
add
nop
push
mov
leave
cs
fwait
add
add
incb
mov
hlt
mov
push
mov
xchg
ret
add
cmp
xor
ret
clc
nop
nop
nop
nop
jae
add
add
and
jmp
mov
in
sub
add
add
add
int3
jmp
add
mov
clc
nop
nop
nop
nop
jae
add
or
mov
push
add
call
push
mov
xchg
ret
add
add
sub
add
je
fisttps
js
add
cmp
xor
add
add
gs
clc
nop
nop
nop
nop
jae
push
inc
dec
lahf
test
add
xor
add
nop
nop
nop
nop
jae
je,pn
add
add
testl
nop
push
mov
leave
cs
in
add
add
adc
mov
xchg
ret
fiaddl
cmpsb
add
sbb
fiaddl
fadds
cmp
clc
nop
nop
nop
nop
jae
xchg
dec
or
jmp
jmp
clc
nop
nop
nop
nop
jae
add
mov
add
nop
stos
dec
xor
push
mov
xchg
ret
add
add
ret
scas
cs
xor
add
sub
clc
nop
nop
nop
nop
jae
add
add
add
add
xor
add
pop
nop
push
mov
leave
cs
roll
add
mov
xor
nop
nop
jae
add
add
push
add
rol
push
push
push
mov
xchg
ret
sub
push
rcll
js
mov
add
xor
out
add
add
add
jo
nop
aam
add
add
add
dec
cmp
mov
clc
nop
nop
nop
nop
jae
add
add
jne
repz
mov
xchg
ret
rorl
rorl
jg
push
add
pop
add
clc
nop
nop
nop
nop
jae
add
add
ret
add
roll
cmp
xchg
pop
inc
add
add
ret
fsubrs
add
les
push
mov
leave
cs
add
add
add
nop
nop
nop
nop
jae
mov
jg
in
add
je
daa
jne
clc
nop
nop
nop
nop
jae
add
popa
out
add
clc
nop
nop
nop
nop
jae
add
popa
push
mov
mov
mov
add
in
add
inc
xor
cmp
cltd
push
mov
cld
inc
push
fildl
stc
add
add
add
test
sbb
nop
nop
jae
js
in
add
fwait
push
adc
dec
mov
clc
nop
nop
nop
nop
jae
ss
sub
movsb
add
mov
nop
push
mov
leave
cs
jg
xor
mov
add
add
fs
nop
nop
jae
add
jg
add
add
stos
lock
push
mov
xchg
ret
add
add
add
jg
add
mov
nop
push
mov
leave
cs
add
push
add
dec
mov
add
popf
push
push
mov
xchg
ret
movsb
cltd
lahf
ret
add
add
incb
add
clc
nop
nop
nop
nop
jae
add
roll
add
mov
or
push
or
jmp
leave
nop
push
mov
leave
cs
pop
pop
dec
push
add
or
jg
push
cmp
sar
nop
nop
nop
nop
jae
add
dec
cs
mov
adc
add
cs
decb
add
imul
pop
inc
add
add
ljmp
mov
mov
push
mov
xchg
ret
add
add
cmp
scas
mov
nop
nop
nop
jae
cmp
roll
add
fwait
add
or
nop
jae
add
add
add
pop
in
nop
push
mov
leave
cs
mov
cmpsl
mov
and
add
pop
adc
nop
nop
jae
xor
rcll
add
add
mov
sub
push
mov
xchg
ret
add
cmpsb
fadds
add
test
pop
inc
add
add
nop
mov
add
sbb
nop
nop
nop
jae
add
pop
add
add
xor
add
and
push
loopne
mov
xchg
ret
add
add
add
loope
incl
add
nop
nop
nop
nop
jae
add
mov
add
cltd
fisubs
or
pop
lock
scas
enter
nop
nop
jae
mov
jmp
fcomp
add
rorl
push
mov
leave
cs
add
add
fwait
mov
sub
clc
nop
nop
nop
nop
jae
dec
add
dec
add
add
mov
xchg
ret
add
test
add
popa
test
add
adcl
aam
inc
add
test
push
add
popa
or
dec
add
mov
xchg
ret
pushl
stos
add
dec
incl
add
add
stos
idiv
push
mov
xchg
ret
cltd
jmp
add
add
js
nop
jp
cmp
clc
nop
nop
nop
nop
jae
and
test
push
add
add
nop
nop
nop
nop
jae
push
add
add
add
add
inc
push
pop
das
test
nop
push
mov
leave
cs
add
add
xor
popa
add
data16
mov
add
nop
push
mov
leave
cs
add
add
cmpsl
fdivs
psubb
xor
add
add
xor
add
add
lods
add
push
mov
xchg
ret
nop
fadds
sub
add
fwait
test
push
mov
in
les
clc
nop
nop
nop
nop
jae
stos
cmpsl
add
add
mov
push
mov
int
add
jne
add
add
add
test
nop
add
fld
add
inc
je
clc
nop
nop
nop
nop
jae
add
and
add
and
nop
nop
nop
nop
jae
add
mov
add
pushl
stos
clc
nop
nop
nop
nop
jae
ss
add
and
add
nop
nop
nop
nop
jae
js
incb
push
add
jno
push
mov
xchg
ret
fiaddl
add
jmp
or
sub
out
loop
nop
push
mov
leave
cs
add
je
in
pop
add
add
push
mov
mov
xchg
ret
dec
add
add
add
add
clc
nop
nop
nop
nop
jae
pop
je
add
dec
in
movsb
dec
scas
icebp
push
nop
push
mov
leave
cs
in
add
mov
mov
popa
push
scas
scas
sub
inc
clc
nop
nop
nop
nop
jae
jg
mov
mov
add
adc
cs
add
jmp
mov
mov
lea
clc
nop
nop
nop
nop
jae
add
push
xchg
add
inc
add
nop
push
mov
leave
cs
add
ficompl
pop
mov
pop
inc
jae
nop
nop
nop
jae
add
add
dec
push
add
lods
add
clc
nop
nop
nop
nop
jae
add
mov
in
popa
add
add
clc
nop
nop
nop
nop
jae
add
or
add
add
cltd
fidivrl
sbb
clc
nop
nop
nop
nop
jae
add
add
mov
nop
nop
nop
nop
jae
lahf
add
push
add
add
add
push
mov
xchg
ret
or
mov
dec
add
add
clc
nop
nop
nop
nop
jae
in
add
cmp
stos
add
add
lea
nop
nop
nop
nop
jae
add
xchg
push
xor
add
js
clc
nop
nop
nop
nop
jae
add
add
mov
leave
sub
nop
nop
nop
nop
jae
stos
or
dec
xchg
and
fadds
xor
je
clc
nop
nop
nop
nop
jae
add
or
add
nop
nop
nop
nop
jae
add
add
xor
incb
push
jmp
add
pop
mov
add
stos
js
ret
add
xlat
fistpl
push
mov
xchg
ret
pop
mov
fiaddl
mov
mov
clc
nop
nop
nop
nop
jae
add
pop
add
pop
add
rep
nop
push
mov
leave
cs
add
add
in
inc
lahf
dec
add
inc
clc
nop
nop
nop
nop
jae
dec
inc
add
add
add
add
nop
nop
nop
nop
jae
add
mov
add
add
adc
nop
nop
nop
nop
jae
pop
xor
fiaddl
xchg
loope
add
push
mov
xchg
ret
cmpsb
add
add
jmp
add
dec
nop
push
mov
leave
cs
pop
add
add
sub
mov
ret
dec
nop
push
mov
leave
cs
dec
push
push
jmp
add
scas
rcrl
nop
nop
nop
nop
jae
ret
push
js
dec
push
fiaddl
add
lea
mov
xchg
ret
pop
add
add
sub
add
lahf
add
add
sbb
clc
nop
nop
nop
nop
jae
stos
push
dec
add
cltd
add
mov
xchg
ret
scas
add
fdivrs
in
add
decl
push
mov
xchg
ret
push
xchg
xchg
or
add
lahf
mov
and
clc
nop
nop
nop
nop
jae
test
xchg
add
add
pop
add
cmp
nop
push
mov
leave
cs
add
dec
add
sub
xor
mov
mov
nop
push
mov
leave
cs
mov
xchg
xchg
add
les
add
add
nop
nop
nop
nop
jae
add
sbb
or
ret
add
call
cs
popa
add
js
mov
push
cwtl
pusha
test
mov
mov
test
add
push
mov
leave
cs
add
ret
sbb
sbb
jmp
test
mov
rorb
mov
leave
cs
add
add
add
add
sbb
sti
clc
nop
nop
nop
nop
jae
add
add
add
add
clc
nop
nop
nop
nop
jae
movsb
mov
sub
push
add
fcompl
mov
nop
push
mov
leave
cs
add
xchg
sub
in
leave
cs
add
or
in
add
add
mov
add
clc
nop
nop
nop
nop
jae
add
mov
push
xchg
add
nop
push
mov
leave
cs
add
mov
add
push
mov
add
xor
inc
addb
xor
add
adc
gs
push
push
test
add
push
mov
xchg
ret
add
add
inc
add
add
add
push
dec
add
push
mov
xchg
ret
dec
add
scas
add
roll
add
in
jp
pop
clc
nop
nop
nop
nop
jae
add
add
roll
sbb
add
cltd
mov
nop
nop
nop
nop
jae
add
add
pop
ss
cltd
add
jge
clc
nop
nop
nop
nop
jae
jg
ss
add
pop
add
aad
push
mov
xchg
ret
add
xchg
roll
xor
jg
add
push
sbb
test
ss
push
mov
leave
cs
add
mov
add
fwait
lea
in
fsubs
cmp
movsl
movsl
add
xchg
pop
add
jo
lods
push
mov
xchg
ret
add
dec
xor
scas
add
popa
add
clc
nop
nop
nop
nop
jae
add
add
in
add
xor
nop
nop
nop
nop
jae
movsb
push
add
add
dec
add
faddl
mov
jg
cmpl
nop
nop
nop
jae
xchg
sbb
mov
fistpl
push
mov
xchg
ret
dec
inc
add
pop
add
in
dec
add
idiv
clc
nop
nop
nop
nop
jae
add
nop
add
add
add
clc
nop
nop
nop
nop
jae
add
je
add
push
sbb
or
test
pop
add
clc
nop
nop
nop
nop
jae
add
add
add
add
clc
nop
nop
nop
nop
jae
mov
xor
sub
mov
clc
nop
nop
nop
nop
jae
add
add
add
dec
add
adcl
in
add
add
add
and
fistl
and
loop
clc
nop
nop
nop
nop
jae
add
add
push
add
mov
push
mov
xchg
ret
cmp
add
add
add
add
mov
clc
nop
nop
nop
nop
jae
push
add
mov
add
and
repnz
pop
clc
nop
nop
nop
nop
jae
add
xchg
test
add
add
add
push
nop
push
mov
leave
cs
rcrl
js
add
or
sbb
in
leave
cs
fcoms
sbb
test
push
mov
xchg
ret
cmpsl
add
movsb
push
add
clc
nop
nop
nop
nop
jae
push
add
sub
and
add
push
mov
xchg
ret
pop
fcomp
or
add
add
add
loop
pop
clc
nop
nop
nop
nop
jae
add
in
test
add
repz
nop
push
mov
leave
cs
xor
add
add
fsubl
iret
push
mov
dec
sub
adc
addb
add
test
out
rcrl
add
lods
test
mov
leave
cs
inc
add
push
popa
add
add
imul
leave
cs
sub
sub
xchg
add
mov
dec
or
dec
push
mov
xchg
ret
add
add
mov
add
push
mov
xchg
ret
add
add
cltd
stos
imul
add
add
add
pop
add
mov
loop
mov
xchg
ret
xchg
mov
add
rorl
add
nop
nop
nop
nop
jae
add
fdivr
stos
clc
nop
nop
nop
nop
jae
add
mov
add
scas
sbb
lea
push
mov
leave
cs
pop
fsubl
fwait
mov
push
add
jne
clc
nop
nop
nop
nop
jae
mov
xor
add
add
mov
inc
add
add
add
mov
shrl
lock
nop
nop
nop
jae
cmp
add
push
popa
sub
add
or
stos
xor
nop
nop
nop
jae
add
pop
cmpsb
mov
in
iret
push
mov
les
fyl2xp1
add
and
addr16
js
add
cmp
lss
mov
xor
jmp
add
nop
push
mov
leave
cs
xor
mov
add
fwait
scas
add
clc
nop
nop
nop
nop
jae
add
jg
pop
je
mov
push
mov
xchg
ret
add
add
add
cmpsl
inc
mov
mov
xchg
ret
cmpsl
fdivrl
popa
sbb
cmp
ror
call
inc
add
cltd
or
xchg
cltd
add
int3
lods
fwait
clc
nop
nop
nop
nop
jae
in
fwait
cmpsl
fcomps
sub
mov
add
mov
nop
push
mov
leave
cs
mov
add
mov
inc
and
clc
nop
nop
nop
nop
jae
roll
movsb
add
pop
add
push
add
push
popa
add
in
jmp
sub
add
adc
nop
nop
nop
nop
jae
ret
add
add
and
push
mov
leave
cs
cmpsb
xchg
ss
add
mov
mov
clc
nop
nop
nop
nop
jae
stos
xor
xchg
incl
xor
fidivs
test
sbb
add
nop
nop
nop
nop
jae
ret
cmpsl
add
add
nop
nop
nop
nop
jae
pop
add
dec
sub
test
lds
nop
nop
nop
jae
inc
cmp
add
in
add
fmul
mov
nop
push
mov
leave
cs
mov
add
add
mov
mov
xchg
ret
add
add
add
nop
nop
jae
or
add
shll
add
xchg
popa
clc
nop
nop
nop
nop
jae
in
add
jmp
pop
add
or
nop
nop
jae
in
mov
add
add
rol
add
push
push
push
mov
xchg
ret
dec
add
or
mov
test
add
nop
push
mov
leave
cs
add
faddl
add
add
xchg
pop
clc
nop
nop
nop
nop
jae
movsb
scas
add
pop
pop
cmpsl
mov
nop
push
mov
leave
cs
add
add
add
or
nop
nop
nop
jae
add
movsb
add
rcl
add
nop
push
mov
leave
cs
push
add
pop
cmpsb
sbb
add
nop
add
add
nop
nop
jae
xchg
jg
add
roll
add
add
lea
push
mov
xchg
ret
dec
xor
shll
add
mov
clc
nop
nop
nop
nop
jae
or
jmp
add
fwait
clc
nop
nop
nop
nop
jae
add
add
add
add
push
mov
xchg
ret
cmpsl
sub
add
mov
in
stos
add
xor
push
mov
xchg
ret
add
test
add
in
xor
roll
push
push
push
mov
xchg
ret
add
push
mov
jg
out
stc
fld1
nop
push
mov
leave
cs
pop
add
add
jmp
clc
nop
nop
nop
nop
jae
mov
add
pop
test
push
mov
jne
nop
push
mov
leave
cs
add
mov
add
in
push
sub
pop
clc
nop
nop
nop
nop
jae
movsb
add
add
fsubrl
faddl
add
in
add
add
pop
add
test
add
add
pusha
add
add
inc
fld1
clc
nop
nop
nop
nop
jae
pop
add
push
mov
roll
fadds
jmp
clc
nop
nop
nop
nop
jae
mov
add
jg
add
les
cs
mov
mov
xchg
ret
add
sbb
add
add
xchg
add
ss
cmp
nop
nop
nop
jae
add
test
pop
add
add
cmp
mov
jne
clc
nop
nop
nop
nop
jae
add
add
call
shrb
nop
nop
nop
nop
jae
in
push
dec
fadds
movsb
fcoms
clc
nop
nop
nop
nop
jae
pop
mov
cmpsb
push
jg
lahf
dec
shll
scas
sbb
stc
clc
nop
nop
nop
nop
jae
add
mov
movsb
add
fcomps
les
mov
xchg
ret
mov
xor
pop
inc
push
clc
nop
nop
nop
nop
jae
add
movsb
mov
dec
add
nop
nop
nop
nop
jae
add
pop
add
mov
add
andl
je
pop
add
add
lret
sbb
nop
jae
add
add
add
dec
cmp
push
mov
leave
cs
mov
cltd
ret
add
add
sbb
clc
nop
nop
nop
nop
jae
add
add
add
mov
scas
inc
add
jb
nop
push
mov
leave
cs
dec
add
mov
push
mov
add
pop
fsub
add
add
add
mov
mov
jmp
jnp
nop
nop
nop
jae
mov
add
jg
fiaddl
and
mov
xchg
ret
add
dec
mov
roll
in
push
popa
mov
test
mov
clc
nop
nop
nop
nop
jae
mov
add
or
imul
nop
nop
nop
jae
add
js
cs
notl
nop
push
mov
leave
cs
add
add
or
nop
nop
nop
jae
add
add
jmp
and
add
scas
adc
xchg
test
add
add
mov
shr
jecxz
sbb
dec
push
mov
lahf
lret
sub
push
xchg
mov
add
add
push
clc
nop
nop
nop
nop
jae
add
cmpsb
mov
xor
mov
clc
nop
nop
nop
nop
jae
add
fimull
add
push
mov
xchg
ret
add
add
add
dec
nop
xor
xorl
clc
nop
nop
nop
nop
jae
mov
add
stos
nop
push
mov
leave
cs
xor
cltd
add
mov
js
mov
clc
nop
nop
nop
nop
jae
add
add
add
add
add
add
push
mov
xchg
ret
add
lahf
rcr
sbb
xor
or
pop
mov
clc
nop
nop
nop
nop
jae
add
in
mov
push
fsubl
nop
nop
nop
jae
add
cmpsb
stos
add
xor
popa
imul
nop
nop
nop
jae
add
add
add
add
mov
nop
push
mov
leave
cs
add
add
add
sar
nop
nop
nop
jae
add
add
ss
add
mov
or
iret
inc
add
iret
jg
add
lods
add
push
or
xchg
sahf
dec
push
clc
nop
nop
nop
nop
jae
fidivrl
or
mov
add
add
push
sub
mov
or
ret
mov
add
in
sub
add
add
clc
nop
nop
nop
nop
jae
mov
add
add
clc
nop
nop
nop
nop
jae
sbb
add
fadds
incb
mov
in
push
inc
or
nop
nop
nop
nop
jae
scas
add
lahf
dec
push
fadds
pop
push
jnp
jge
clc
nop
nop
nop
nop
jae
pop
add
xchg
test
add
add
or
mov
je
clc
nop
nop
nop
nop
jae
add
xchg
add
add
push
add
add
stc
add
pusha
js
xor
xchg
add
and
cmp
nop
push
mov
leave
cs
add
mov
push
sbb
mov
clc
nop
nop
nop
nop
jae
add
xor
fcomps
nop
nop
nop
jae
in
fisubrl
push
xor
add
adc
nop
nop
nop
nop
jae
mov
add
stos
add
add
lds
nop
nop
nop
nop
jae
add
and
add
add
shr
cmpsb
push
add
faddl
add
in
in
add
add
clc
adc
add
jle
add
and
add
pop
mov
arpl
or
add
shr
nop
push
mov
leave
cs
add
scas
add
cmp
nop
pop
jae
lret
clc
nop
nop
nop
nop
jae
add
add
add
movsb
data16
nop
push
mov
leave
cs
xor
sbb
add
mov
mov
xchg
ret
add
add
add
cmpsl
cmpsl
mov
mov
jne
clc
nop
nop
nop
nop
jae
add
fadds
xor
mov
mov
test
sbb
push
ret
add
popa
add
mov
add
sbb
mov
test
or
add
nop
nop
nop
nop
jae
add
inc
dec
cmpsb
add
nop
push
mov
leave
cs
add
movsb
or
push
stos
jg
clc
nop
nop
nop
nop
jae
add
and
jmp
cltd
mov
push
mov
leave
cs
sub
sub
fiaddl
add
mov
push
mov
xchg
ret
add
push
add
roll
push
xchg
add
clc
nop
nop
nop
nop
jae
cmpsl
mov
add
mov
nop
mov
pop
add
clc
nop
nop
nop
nop
jae
add
in
add
add
nop
nop
nop
nop
jae
sbb
add
nop
jmp
or
adc
nop
jae
pop
pop
movsb
add
jmp
mov
mov
xchg
ret
mov
add
mov
add
pop
mov
jg
div
clc
nop
nop
nop
nop
jae
add
add
call
clc
nop
nop
nop
nop
jae
inc
ret
add
add
add
test
nop
push
mov
leave
cs
add
push
je
sar
add
cli
gs
push
mov
xchg
ret
jmp
fsubrl
dec
push
add
push
sbb
mov
push
mov
push
push
mov
xchg
ret
or
cmpsl
add
mov
add
addb
push
pop
fistpl
push
mov
xchg
ret
or
movsb
add
in
nop
add
ljmp
cs
js
lahf
test
nop
push
mov
leave
cs
mov
mov
fadds
jmp
stos
sbb
add
nop
nop
nop
nop
jae
add
add
xchg
adc
or
mov
nop
nop
nop
nop
jae
ret
add
sub
add
pop
clc
nop
nop
nop
nop
jae
add
roll
jmp
fwait
je
adc
mov
clc
nop
nop
nop
nop
jae
mov
add
cmp
add
jmp
clc
nop
nop
nop
nop
jae
lahf
add
lahf
cmpsl
fmull
add
add
push
clc
nop
nop
nop
nop
jae
add
add
fcmovu
add
xor
nop
nop
nop
nop
jae
mov
lahf
dec
shll
dec
xchg
jmp
mov
xchg
ret
add
add
lcall
add
sbb
sbb
and
add
inc
fwait
add
jmp
cmp
add
add
scas
add
mov
dec
add
nop
push
mov
leave
cs
add
fcoml
add
stos
ja
clc
nop
nop
nop
nop
jae
pop
mov
add
ficompl
in
shll
mov
mov
pusha
mov
xchg
nop
push
mov
leave
cs
add
rcll
fmuls
pop
push
push
mov
xchg
ret
mov
add
nop
mov
sbb
push
clc
nop
nop
nop
nop
jae
dec
dec
mov
cmpsb
add
add
mov
leave
cs
add
incb
mov
inc
in
mov
xchg
ret
mov
add
add
add
mov
clc
nop
nop
nop
nop
jae
mov
dec
add
stos
mov
cld
sub
nop
jae
xor
lahf
add
sbb
add
nop
nop
nop
nop
jae
movsb
add
add
sub
popa
out
andl
in
leave
cs
inc
add
movsb
mov
jmp
fadd
push
clc
nop
nop
nop
nop
jae
movsb
test
add
test
push
push
cmpsl
inc
push
mov
xchg
ret
mov
xchg
add
jmp
insl
push
push
mov
xchg
ret
pop
sbb
incb
mov
jg
add
mov
mov
xchg
ret
push
xor
or
dec
sub
add
mov
arpl
adc
call
add
je
add
add
mov
cltd
push
clc
nop
nop
nop
nop
jae
xor
stos
add
mov
mov
clc
nop
nop
nop
nop
jae
popa
add
add
mov
push
mov
xchg
ret
mov
in
nop
sbb
add
add
push
mov
xchg
ret
popa
add
add
add
popa
jmp
cltd
push
push
mov
xchg
ret
stos
add
stos
mov
cltd
add
xchg
in
add
jne
cld
push
inc
sbb
nop
nop
nop
nop
jae
add
movsb
sub
lods
clc
nop
nop
nop
nop
jae
add
pop
add
and
nop
nop
nop
nop
jae
xor
push
add
pop
sub
nop
push
mov
leave
cs
add
add
add
roll
add
add
mov
clc
nop
nop
nop
nop
jae
add
cmpsb
mov
test
clc
nop
nop
nop
nop
jae
xchg
add
add
nop
push
mov
leave
cs
fsubr
add
add
mov
pop
clc
nop
nop
nop
nop
jae
add
add
and
mov
stc
push
nop
push
mov
leave
cs
add
popa
and
cmpsb
add
clc
nop
nop
nop
nop
jae
ficompl
add
add
add
test
fs
nop
nop
nop
nop
jae
add
scas
sbb
bound
inc
and
nop
nop
nop
nop
jae
fwait
add
add
push
mov
mov
push
clc
nop
nop
nop
nop
jae
push
mov
nop
in
add
add
js
mov
push
mov
xchg
ret
add
add
jmp
movsb
add
mov
or
arpl
xchg
ret
mov
fwait
xor
add
aam
mov
clc
nop
nop
nop
nop
jae
add
mov
sub
add
push
popa
in
inc
ljmp
clc
nop
nop
nop
nop
jae
mov
add
dec
add
je
clc
nop
nop
nop
nop
jae
add
lret
push
mov
xchg
ret
add
add
mov
fsubrs
fwait
inc
test
mov
cmpsl
xor
clc
nop
nop
nop
nop
jae
sbb
add
stos
fwait
clc
neg
push
clc
nop
nop
nop
nop
jae
roll
cmpsl
in
add
add
dec
pushl
push
mov
xchg
ret
movsb
fiaddl
mov
stos
jg
fldt
nop
jae
mov
add
add
sar
push
mov
xchg
ret
add
add
inc
add
dec
add
nop
nop
nop
nop
jae
sub
add
lahf
add
mov
nop
nop
nop
nop
jae
add
js
popa
add
add
push
jo
xchg
nop
nop
nop
nop
jae
sub
cmp
pop
add
mov
dec
dec
inc
ljmp
clc
nop
nop
nop
nop
jae
mov
sbb
ljmp
jbe
mov
clc
nop
nop
nop
nop
jae
add
push
ret
das
movswl
clc
nop
nop
nop
nop
jae
je
pop
add
add
add
rorl
mov
xchg
ret
fiaddl
add
dec
cltd
add
add
push
inc
mov
stos
clc
nop
nop
nop
nop
jae
add
add
test
sbb
inc
add
mov
lea
clc
nop
nop
nop
nop
jae
add
add
add
fdivl
xchg
cmp
nop
push
mov
leave
cs
mov
fwait
cs
pop
mov
clc
nop
nop
nop
nop
jae
add
add
push
nop
mov
jmp
nop
nop
jae
add
add
stos
dec
add
add
nop
push
mov
leave
cs
incb
mov
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
mov
add
nop
nop
nop
nop
jae
incb
add
or
jnp
nop
nop
nop
jae
mov
add
pop
clc
nop
nop
nop
nop
jae
add
js
xor
add
nop
nop
jae
pop
inc
sub
jg
cmp
add
ss
jmp
test
sbb
add
cs
add
add
nop
nop
nop
nop
jae
add
add
add
fsubr
add
mov
ret
nop
push
mov
leave
cs
add
lahf
push
ret
add
ret
dec
mov
push
clc
nop
nop
nop
nop
jae
or
add
sbb
je
pop
jne
clc
nop
nop
nop
nop
jae
dec
add
push
add
pop
call
nop
push
mov
leave
cs
stos
add
fwait
test
add
push
mov
nop
nop
nop
nop
jae
mov
cmpsl
dec
mov
add
add
lea
nop
push
mov
leave
cs
jg
nop
fdivr
cmpsb
push
test
cmpsb
sbb
xchg
xchg
push
mov
xchg
ret
cmp
add
sbb
incl
test
test
fcos
clc
nop
nop
nop
nop
jae
roll
add
jg
xor
and
imul
nop
nop
nop
jae
xor
add
scas
add
push
mov
leave
cs
push
cmpsl
in
add
add
add
add
nop
nop
nop
jae
add
cmpsl
test
cltd
add
mov
push
mov
xchg
ret
add
add
add
jns
nop
push
mov
leave
cs
in
push
mov
je
add
scas
mov
jmp
add
cltd
push
add
sub
dec
faddl
mov
aaa
push
push
mov
xchg
ret
add
add
xor
push
push
jmp
cmp
je
add
jmp
scas
xor
push
push
mov
xchg
ret
cmp
xor
shrl
add
mov
loopne
push
mov
leave
cs
add
add
pop
out
mov
push
clc
nop
nop
nop
nop
jae
lahf
add
fsubs
repnz
call
clc
nop
nop
nop
nop
jae
nop
inc
add
incl
add
lret
lret
mov
leave
cs
add
mov
xor
scas
or
sub
mov
clc
nop
nop
nop
nop
jae
movsb
add
pop
jne
clc
nop
nop
nop
nop
jae
add
add
push
xchg
xchg
ret
add
or
add
jmp
in
push
add
nop
nop
nop
nop
jae
pop
sub
mov
add
add
aas
add
imul
mov
add
stos
xor
cld
adc
mov
leave
cs
add
add
xor
fistpl
nop
jae
add
jmp
add
pusha
clc
nop
nop
nop
nop
jae
add
add
roll
cmp
adc
add
nop
nop
nop
nop
jae
scas
test
add
pop
aam
fistpl
clc
nop
nop
nop
nop
jae
mov
rcll
fcomps
shll
mov
or
add
and
mov
sub
push
mov
xchg
ret
ret
test
nop
jg
add
add
add
popa
nop
push
mov
leave
cs
add
add
add
add
les
daa
popa
clc
nop
nop
nop
nop
jae
xchg
add
nop
xor
xchg
push
mov
xchg
ret
mov
pop
or
add
test
cs
push
or
nop
nop
jae
add
add
popa
scas
add
add
add
xor
mov
xchg
ret
sub
test
mov
sbb
movsb
pop
xchg
or
repnz
fwait
push
mov
xchg
ret
or
add
add
cmp
mov
roll
add
fildl
jb
add
ret
xor
push
clc
nop
nop
nop
nop
jae
push
push
add
fadds
xor
sbb
jno
ret
sbb
nop
jae
add
mov
into
int
clc
nop
nop
nop
nop
jae
in
add
cmp
nop
cmp
add
cli
je
pop
push
mov
xchg
ret
test
xor
mov
sub
add
ret
add
loope
call
nop
nop
jae
mov
add
add
add
nop
push
mov
leave
cs
mov
add
ret
mov
push
clc
nop
nop
nop
nop
jae
ret
jg
decb
sub
add
add
mov
nop
nop
nop
nop
jae
mov
add
das
rep
clc
nop
nop
nop
nop
jae
add
add
add
cltd
add
fildl
stos
pop
inc
add
add
fiaddl
mov
add
mov
push
mov
xchg
ret
add
add
pop
popa
add
and
adc
call
inc
add
add
in
or
add
roll
add
nop
nop
nop
nop
jae
cmp
sub
cmp
mov
and
add
nop
nop
nop
nop
jae
fwait
add
nop
ret
incb
push
sub
and
nop
nop
nop
nop
jae
nop
mov
dec
cmpsl
add
lcall
nop
nop
nop
jae
add
mov
push
dec
mov
nop
push
mov
leave
cs
or
add
stos
js
push
add
into
outsl
jne
clc
nop
nop
nop
nop
jae
in
dec
add
add
jmp
pop
push
mov
xchg
ret
add
mov
add
pop
add
scas
cmp
nop
nop
nop
jae
mov
mov
add
nop
nop
nop
nop
jae
add
add
or
sub
jae
ret
add
xor
add
cs
lahf
stos
scas
add
add
add
flds
and
add
push
sbb
add
rcll
cmpsl
out
sub
add
and
add
add
add
mov
dec
pop
dec
clc
nop
nop
nop
nop
jae
or
sbb
add
add
in
mov
nop
push
mov
leave
cs
shll
dec
add
sub
add
nop
nop
nop
nop
jae
cltd
fwait
in
fadds
add
add
jp
add
clc
nop
nop
nop
nop
jae
scas
add
add
add
xor
push
mov
xchg
ret
push
dec
add
add
dec
mov
cmpl
nop
push
mov
leave
cs
add
add
jg
add
add
xchg
scas
or
add
add
xchg
into
xchg
fwait
push
mov
xchg
ret
sbb
mov
add
add
stos
xor
in
add
add
and
mov
cmp
jle
mov
clc
nop
nop
nop
nop
jae
dec
or
add
add
and
nop
nop
nop
jae
add
add
cmpsl
mov
lea
in
push
inc
add
xchg
xchg
add
dec
jmp
clc
nop
nop
nop
nop
jae
fcomps
add
je
mov
ljmp
clc
nop
nop
nop
nop
jae
or
sub
sub
icebp
nop
push
mov
leave
cs
lahf
lahf
mov
add
faddl
popa
add
and
push
mov
leave
cs
add
jg
add
in
push
add
gs
push
mov
xchg
ret
add
jmp
stos
ficompl
mov
clc
nop
nop
nop
nop
jae
push
xchg
or
stos
sub
jg
clc
nop
nop
nop
nop
jae
dec
mov
add
push
add
leave
es
nop
push
mov
leave
cs
add
add
add
fwait
add
nop
nop
nop
nop
jae
mov
add
add
call
inc
add
push
add
add
movsb
ficoml
lret
push
add
mov
jb
mov
sti
add
add
push
lea
mov
xchg
ret
push
cmpsb
add
fwait
or
outsl
push
mov
add
and
add
mov
jno
adc
or
pushf
or
call
nop
push
mov
leave
cs
add
add
sub
lods
add
push
mov
xchg
ret
cmpsl
add
add
add
mov
nop
push
mov
leave
cs
add
fwait
add
add
add
stos
clc
nop
nop
nop
nop
jae
cmp
add
mov
sbb
nop
nop
nop
jae
add
dec
add
popa
popa
mov
jae
add
clc
nop
nop
nop
nop
jae
je
xor
add
shrb
mov
clc
nop
nop
nop
nop
jae
mov
sub
mov
mov
push
mov
xchg
ret
add
lahf
push
add
add
in
pop
push
mov
enter
add
fadds
pop
xchg
cmp
and
add
pop
clc
nop
nop
nop
nop
jae
movsb
add
add
xor
or
outsl
cld
clc
nop
nop
nop
nop
jae
mov
add
mov
push
in
xchg
loope
add
add
nop
nop
nop
nop
jae
add
add
xor
popa
test
sub
dec
xchg
mov
sarb
add
clc
nop
nop
nop
nop
jae
fcoms
add
mov
xchg
mov
clc
nop
nop
nop
nop
jae
mov
add
add
movsl
pop
jmp
incl
add
rcrl
add
add
in
add
sub
xchg
dec
nop
push
mov
leave
cs
mov
and
add
xor
mov
mov
xchg
ret
mov
cmp
mov
cmpsb
dec
xchg
repnz
nop
push
mov
leave
cs
add
jg
cltd
xor
add
nop
nop
nop
nop
jae
cltd
add
fdivs
add
fistpl
clc
nop
nop
nop
nop
jae
add
add
sbb
cmpsl
add
jne
mov
or
adc
add
add
add
mov
inc
sub
test
nop
nop
nop
jae
fcoml
add
add
xchg
idiv
clc
nop
nop
nop
nop
jae
add
add
add
push
jecxz
jl
lcall
add
add
cmpsl
xor
add
gs
clc
nop
nop
nop
nop
jae
xor
add
dec
cmpsb
xor
fsubs
mov
test
push
mov
leave
cs
add
add
pop
add
jb
lahf
mov
clc
nop
nop
nop
nop
jae
add
pop
add
add
call
and
mov
xchg
ret
add
roll
cltd
movsb
add
mov
xchg
ret
je
add
in
scas
add
sub
add
addb
clc
nop
nop
nop
nop
jae
add
add
js
sub
push
mov
xchg
ret
add
pop
xor
add
xchg
dec
cmp
ja
clc
nop
nop
nop
nop
jae
inc
add
add
stos
add
nop
nop
nop
jae
cs
and
add
adc
rcrb
rclb
push
and
mov
or
add
mov
clc
nop
nop
nop
nop
jae
mov
add
add
orl
xchg
ret
xor
xor
sbb
nop
nop
nop
nop
jae
jmp
add
add
xor
clc
nop
nop
nop
nop
jae
add
add
sub
xor
xlat
ret
clc
nop
nop
nop
nop
jae
push
add
push
add
fcomps
mov
jne
clc
nop
nop
nop
nop
jae
nop
jmp
add
fsubrs
add
clc
nop
nop
nop
nop
jae
add
pop
mov
or
push
mov
leave
cs
fadds
add
add
sub
test
lahf
jecxz
adc
add
jg
lahf
add
in
mov
add
add
popa
clc
nop
nop
nop
nop
jae
add
xchg
dec
sub
mov
add
jae
nop
nop
nop
nop
jae
and
push
add
add
add
clc
nop
nop
nop
nop
jae
shrl
add
in
add
lahf
pop
mov
inc
and
out
jge
test
nop
nop
nop
nop
jae
movsb
add
pop
add
nop
push
mov
leave
cs
shll
add
fwait
pop
pushf
nop
roll
push
mov
add
and
shr
add
loope
testl
sub
jno
and
pushl
incl
push
add
mov
add
mov
add
clc
nop
nop
nop
nop
jae
add
cmpsb
or
add
clc
nop
nop
nop
nop
jae
mov
add
add
cmpsb
inc
add
push
mov
xchg
ret
add
js
scas
shll
mov
jle
add
clc
nop
nop
nop
nop
jae
fiaddl
movsb
je
mov
sub
fld1
push
mov
xchg
ret
test
stos
dec
popa
mov
add
push
and
fwait
clc
nop
nop
nop
nop
jae
or
add
mov
mov
mov
mov
xchg
ret
cs
mov
add
ja
repz
nop
nop
nop
nop
jae
add
or
mov
clc
nop
nop
nop
nop
jae
ret
fisubl
or
test
iret
push
clc
nop
nop
nop
nop
jae
add
add
pop
xchg
jg
incl
cmp
sbb
nop
push
mov
leave
cs
jmp
add
mov
nop
push
mov
leave
cs
add
rorl
push
mov
leave
cs
fimull
add
lahf
cltd
inc
add
push
push
adc
nop
nop
nop
nop
jae
mov
xor
mov
add
nop
push
mov
leave
cs
add
add
add
push
shll
ret
mov
push
mov
xchg
ret
pop
test
add
add
add
clc
nop
nop
nop
nop
jae
lahf
sbb
stos
push
mov
add
pop
addr16
nop
push
mov
leave
cs
nop
jmp
jg
add
jg
push
push
pushl
clc
nop
nop
nop
nop
jae
add
stos
add
je
add
repnz
clc
nop
nop
nop
nop
jae
push
in
add
push
add
ret
je
nop
push
mov
leave
cs
xor
dec
add
sub
dec
fistpl
nop
jae
mov
add
add
xor
add
pop
nop
push
mov
leave
cs
je
add
sbb
mov
call
clc
nop
nop
nop
nop
jae
add
rorl
push
mov
nop
push
mov
leave
cs
add
add
mov
cld
xor
leave
cs
push
add
fidivl
add
pushf
push
ret
call
nop
jae
cmp
push
add
add
nop
nop
nop
nop
jae
mov
add
fs
pop
pop
push
mov
xchg
ret
add
push
mov
or
fld1
push
mov
xchg
ret
add
mov
mov
add
roll
nop
nop
jae
pop
inc
pop
xor
cmpsl
push
add
add
add
push
mov
xchg
ret
xor
fadds
add
add
loopne
mov
push
mov
xchg
ret
jmp
jmp
fwait
push
mov
mov
add
clc
nop
nop
nop
nop
jae
or
stos
in
add
cltd
xchg
push
push
mov
xchg
ret
mov
mov
test
inc
mov
xor
rclb
sub
ret
add
add
cmpsb
mov
xchg
ret
nop
push
mov
leave
cs
cmp
add
pop
add
xchg
sub
nop
nop
nop
nop
jae
add
add
dec
xor
sub
xor
clc
nop
nop
nop
nop
jae
cmpsb
add
sbb
add
push
clc
nop
nop
nop
nop
jae
or
add
push
add
in
push
add
mov
add
in
add
add
pop
cmp
or
push
jb
cmp
add
pop
add
add
add
clc
nop
nop
nop
nop
jae
mov
add
jns
repz
nop
nop
nop
nop
jae
add
mov
mov
jo
push
mov
leave
cs
dec
add
add
scas
pop
push
jmp
push
add
push
mov
xchg
ret
sub
in
add
add
sbb
nop
nop
nop
jae
sbb
add
xchg
mov
mov
clc
nop
nop
nop
nop
jae
add
add
mov
and
cs
add
cmp
sub
lahf
mov
std
je
nop
push
mov
leave
cs
pop
in
xor
das
xor
clc
nop
nop
nop
nop
jae
mov
sub
in
in
add
arpl
test
in
clc
nop
nop
nop
nop
jae
fiaddl
add
fistpl
nop
nop
nop
nop
jae
stos
fimull
add
add
fld1
clc
nop
nop
nop
nop
jae
mov
add
mov
add
roll
nop
nop
nop
nop
jae
pop
xor
lahf
pop
push
add
push
push
mov
xchg
ret
dec
add
add
push
cmpsb
add
push
push
jmp
fld1
clc
nop
nop
nop
nop
jae
jg
add
sub
or
jg
dec
ja
clc
nop
nop
nop
nop
jae
test
mov
add
push
mov
cmp
jne
clc
nop
nop
nop
nop
jae
push
add
add
pop
sub
push
mov
xchg
ret
sbb
and
cmpsl
sbb
mov
decb
clc
nop
nop
nop
nop
jae
js
pop
xor
add
sbb
mov
add
inc
dec
es
nop
nop
nop
nop
jae
add
add
push
add
es
movzwl
push
mov
xchg
ret
cltd
add
dec
add
add
xor
nop
nop
nop
nop
jae
cmp
add
test
fwait
mov
add
push
mov
leave
cs
js
mov
add
add
sar
mov
push
mov
xchg
ret
add
add
add
add
add
add
clc
nop
nop
nop
nop
jae
add
add
mov
sbb
in
leave
cs
je
add
movsb
push
add
inc
imul
ficoml
and
add
add
xchg
add
mov
mov
clc
nop
nop
nop
nop
jae
add
incb
cmpsb
popa
add
add
dec
push
jmp
add
add
cmp
and
add
rcrl
xor
add
jge
xor
add
add
add
dec
add
inc
js
out
xor
add
clc
nop
nop
nop
nop
jae
add
lahf
add
and
jne
push
mov
xchg
ret
add
call
xchg
add
jg
clc
nop
nop
nop
nop
jae
cmpsb
add
pop
add
xchg
pusha
clc
nop
nop
nop
nop
jae
fiaddl
add
add
add
or
lods
push
mov
xchg
ret
push
add
dec
add
add
add
mov
add
add
roll
add
sub
out
add
push
enter
add
sbb
add
fiaddl
add
pop
add
clc
nop
nop
nop
nop
jae
add
add
add
inc
call
push
mov
xchg
ret
or
add
and
rclb
jae
inc
add
or
push
sbb
lahf
or
nop
nop
jae
in
add
fdivrs
add
push
push
mov
add
negb
add
add
add
dec
test
xchg
mov
add
jne
nop
push
mov
leave
cs
add
mov
sub
add
call
clc
nop
nop
nop
nop
jae
mov
add
sbb
nop
nop
nop
jae
mov
mov
or
mov
adc
nop
nop
nop
nop
jae
and
add
add
call
clc
nop
nop
nop
nop
jae
and
add
and
push
clc
nop
nop
nop
nop
jae
scas
sub
sub
add
mov
add
add
adc
clc
nop
nop
nop
nop
jae
add
mov
mov
mov
xchg
ret
add
add
add
rep
push
mov
xchg
ret
stos
add
mov
push
sbb
fimull
add
fisttps
mov
or
ret
fiaddl
mov
add
add
mov
push
mov
xchg
ret
stos
add
call
add
pop
loopne
pop
push
mov
xchg
ret
add
incl
add
fiaddl
xor
js
mov
fistl
cs
mov
push
add
push
add
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
sub
add
nop
nop
nop
jae
dec
sbb
cs
shll
add
imul
nop
nop
nop
jae
xchg
scas
add
cltd
add
stos
incl
sbb
fwait
push
mov
xchg
ret
add
add
sbb
add
imul
add
sbbl
add
sahf
mov
add
sbb
and
jno
inc
add
mov
dec
faddl
scas
add
fsubs
mov
mov
clc
nop
nop
nop
nop
jae
shll
je
or
jmp
rorl
jge
clc
nop
nop
nop
nop
jae
add
sub
add
mov
nop
nop
nop
nop
jae
dec
mov
add
cltd
mov
nop
nop
nop
jae
roll
xor
mov
dec
add
add
push
enter
ja
add
add
nop
jae
add
add
je
clc
nop
nop
nop
nop
jae
add
scas
pop
sub
clc
nop
nop
nop
nop
jae
nop
cmpsb
add
sbb
dec
pop
mov
pop
and
nop
nop
nop
nop
jae
xor
fiaddl
push
stos
mov
shll
lcall
addl
jmp
xchg
add
inc
push
aas
push
clc
nop
nop
nop
nop
jae
scas
and
lahf
dec
js
add
aaa
mov
clc
nop
nop
nop
nop
jae
mov
sbb
mov
fwait
mov
clc
nop
nop
nop
nop
jae
add
add
sarl
xchg
push
mov
sub
add
arpl
nop
and
xor
inc
push
push
add
enter
nop
nop
jae
add
sbb
cs
add
sti
add
add
nop
push
mov
leave
cs
sbb
push
add
dec
outsb
hlt
jmp
jle
add
cs
add
pop
sbb
arpl
leave
idiv
call
cs
and
ret
pop
pushf
adc
adc
test
gs
add
add
cmp
add
stos
out
gs
clc
nop
nop
nop
nop
jae
xor
add
add
push
push
mov
xchg
ret
push
push
add
add
add
shr
xchg
clc
nop
nop
nop
nop
jae
nop
mov
add
in
add
loopne
int3
adc
inc
push
mov
fcmovbe
jge
add
push
pushf
sbb
add
xchg
pop
lret
add
dec
repz
mov
pop
and
pop
jle
ja
and
mov
outsb
and
mov
pop
icebp
push
cmpsl
das
mov
std
mov
addl
nop
leave
es
in
loop
movsb
int
jae
sub
fbld
push
movsl
loopne
mov
sub
jne
mov
mov
cmpsb
ret
hlt
jbe
imul
mov
leave
pop
xor
cmp
jbe
sub
mov
push
add
testb
mov
push
pop
cld
dec
insb
int
loop
movsb
mov
aam
mov
imul
jl
popa
test
leave
jo
iret
mov
mov
in
adc
leave
dec
addl
push
mov
outsl
fsts
fidivrs
ds
cmp
inc
popf
rcrb
aad
inc
push
jnp
add
leave
sti
nop
xor
sbb
pop
xchg
push
pop
xchg
or
mov
ss
sbb
inc
jl
loopne
jmp
jle
movsl
mov
lods
mov
xchg
push
js
add
add
js
mov
ds
adc
lret
sbb
push
cli
sub
movsl
mov
sub
sub
pop
sub
movntq
adc
adc
adc
adc
jns
pop
test
lret
aam
daa
and
or
lret
sub
jae
popf
fildll
lahf
inc
dec
cmovb
or
in
mov
outsb
push
adc
lret
mov
lret
int3
shrb
jb
js
xor
clc
mov
pop
mov
je
jmp
xchg
lret
cmp
in
xchg
jmp
repz
jb
arpl
cmp
shl
shrb
js
pushf
and
jns
loopne
add
inc
out
roll
jns
into
or
lcall
xor
inc
es
repnz
mov
lret
stos
push
fdivr
dec
push
movsb
enter
cmc
xor
push
mov
cmc
lret
xchg
and
add
in
mov
cmc
iret
mov
sbb
lret
inc
and
sbb
pop
inc
push
loopne
dec
adc
jo
dec
cli
mov
ror
dec
pop
icebp
cld
or
lret
inc
arpl
push
inc
push
push
pop
das
fdivp
enter
sbb
mov
cmpsb
sbb
xor
push
jne
les
ror
mov
les
hlt
xchg
les
adc
lret
mov
out
xchg
jb
mov
xor
aas
push
xlat
call
dec
call
hlt
dec
data16
pop
lods
loop
lret
test
lret
dec
xor
push
lret
inc
dec
xchg
enter
mov
in
jecxz
mov
inc
pop
scas
gs
sub
inc
into
mov
daa
popf
pop
out
out
pop
pop
es
mov
lret
pandn
mov
lret
lea
mov
pop
cmp
jb
sub
push
adc
lret
adc
jg
adc
xchg
mov
or
das
gs
shl
mov
mov
sub
or
cmp
mov
adc
insl
repnz
mov
clc
adc
jno
test
into
or
lret
mov
stc
rorb
aas
arpl
ret
dec
pop
jge
ret
test
rol
mov
lret
push
mov
aam
loope
add
lret
push
push
mov
push
ret
ss
xlat
std
mov
roll
cs
sub
mov
cmp
nop
inc
lret
mov
out
xor
inc
mov
iret
push
aaa
call
mov
cmp
out
dec
sub
pop
movsl
addb
sbb
stos
add
sub
stc
push
in
cs
repz
mov
sub
jp
inc
inc
sub
sub
lods
jmp
sub
inc
movsb
rorb
sub
cmp
sbb
divb
mov
leave
xor
adc
mov
ds
dec
ret
xor
add
bnd
in
push
add
inc
mov
loop
lods
lcall
lcall
mov
xor
ljmp
cld
cmp
mov
int3
fistps
movb
int3
mov
sti
xchg
adc
int3
inc
mov
cmpsb
xor
cmpsb
gs
loopne
in
outsb
push
scas
ss
lds
movsb
pop
lret
das
test
ret
popf
out
cld
mov
jle
and
push
sbb
cltd
and
cltd
or
js
in
mov
sahf
fcoml
sub
or
ds
ds
mov
test
sbb
push
out
cmp
ror
and
ds
jo
and
or
add
xor
xchg
push
adc
ror
andb
pop
lcall
ret
fcmovnu
rcrb
xchg
sbb
int3
out
sub
jecxz
hlt
push
lods
pop
adc
int3
enter
clc
imul
les
pusha
int3
rcrl
ss
mov
mov
int3
movsb
sub
sbb
pop
ljmp
leave
fwait
xor
jae
inc
cmc
xchg
lret
pusha
scas
cwtl
or
xchg
sahf
push
jmp
xor
mov
xor
int
push
jge
mov
add
mov
std
push
pop
jns
xchg
popa
imull
inc
jns
lcall
add
and
enter
jge
fdivrl
es
sub
add
ror
scas
hlt
adc
insl
adc
lret
mov
push
mov
call
fildll
repz
pop
dec
or
xor
addr16
loope
adc
sbb
ret
cmp
stos
mov
int
add
aas
testl
sbb
add
jns
push
in
xor
push
adc
add
int
jne
pop
fcompl
jo
inc
aam
in
dec
aas
inc
mov
or
int
nop
int
in
data16
cmpsb
out
pushf
and
cld
adc
leave
aas
jge
int
inc
mov
andnps
or
lea
test
mov
int
ss
rorl
xchg
inc
mov
fidivrl
int
xchg
loopne
cmp
lock
mov
mov
fsts
jmp
push
cmc
pushf
ror
adc
and
xor
lods
inc
clc
ds
stos
popf
ret
and
jmp
rclb
xor
ljmp
das
jno
push
gs
jnp
test
sub
lcall
or
out
dec
mov
movsl
loop
or
int
cmpsl
cmp
into
lret
mov
pop
pop
jb
loopne
xor
sub
shlb
fistpl
push
add
pusha
into
add
into
cwtl
add
leave
mov
or
sbb
into
sub
xor
push
ror
inc
sub
push
scas
fmuls
inc
mov
push
cltd
dec
stc
test
push
je
xchg
out
jle
sub
popa
inc
aaa
sub
in
ss
rcl
or
push
gs
imul
mov
aaa
movsl
cwtl
lock
sbb
add
sbb
into
sbb
cmp
stc
ds
dec
rclb
xor
test
pmaxsw
inc
test
in
mov
into
push
decb
in
leave
pop
fldcw
xor
lds
adcb
mov
cs
adcb
or
into
sub
mov
ror
jno
sti
xchg
inc
into
test
popf
cltd
xchg
xor
or
adc
and
ret
cmpsb
and
sbb
iret
loope
ja
stc
cld
xor
rcrb
mov
sub
push
sub
jge
mov
jns
mov
mov
into
and
pop
outsb
xchg
adc
sub
sub
stos
sub
mov
call
and
pop
repz
lock
sub
pop
xlat
or
nop
loopne
int
dec
fildl
movsl
lahf
mov
cmc
lea
pop
clc
cmc
dec
add
sub
push
push
push
cmp
adc
gs
insb
pop
jno
or
sahf
rolb
iret
pop
sub
push
mov
jae
add
inc
cs
nop
and
repz
adc
mov
mov
or
or
push
sbb
iret
test
and
or
pop
xor
ss
bound
pop
rorb
insl
popa
hlt
rcrb
testb
xchg
sarl
add
iret
pause
lock
mov
mov
mov
out
je
xchg
pop
sub
sub
cltd
or
xchg
int
push
inc
xor
js
loopne
jge
mov
iret
shl
mov
sub
mov
jbe
mov
lock
xchg
repnz
repnz
mov
mov
mov
jg
inc
push
and
sarl
test
adc
mov
iret
outsw
add
add
push
cmp
mov
lret
cs
loop
add
shrl
jge
aas
notl
dec
pop
pop
xor
push
dec
enter
inc
xlat
xchg
movsb
repz
iret
aad
push
jnp
and
dec
ljmp
lds
or
iret
stos
pop
or
iret
mov
adc
iret
pop
js
stc
mov
int3
and
mov
add
inc
out
sbb
iret
jae
sub
iret
leave
mov
dec
pop
ljmp
mov
es
xor
fs
sahf
stos
mov
push
inc
cmpsb
ja
mov
fwait
push
adc
loop
and
push
or
shl
scas
mov
lret
movsb
test
jae
ds
xchg
pop
ret
clc
lcall
xchg
or
mov
pop
popf
jp
nop
add
cs
scas
pop
aaa
mov
mov
rcrb
fisttpll
jmpw
loopne
xchg
add
xor
movsl
sub
loop
jp
and
loop
cmp
dec
les
mov
xchg
fistl
xchg
fadds
jge
mov
data16
pop
ret
ja
mov
leave
mov
push
or
arpl
aam
filds
jae
les
mov
push
jecxz
loopne
imul
xchg
testl
xorl
mov
pop
scas
aaa
iret
outsb
loope
sub
rorb
push
ret
sub
lret
fs
out
js
or
shrb
hlt
stos
mov
aam
mov
dec
les
ljmp
test
fs
mov
pop
xor
inc
mov
adc
lock
ja
dec
inc
in
ja
int
lods
lahf
xor
aas
mov
adc
test
xor
lods
pop
aaa
testl
jns
in
je
aad
cli
xchg
cwtl
rcl
mov
frstor
daa
enter
or
mov
xor
xor
es
stos
push
sbb
std
ret
xchg
adc
aas
xchg
data16
loopne
lea
add
pop
aas
inc
hlt
pop
dec
push
push
enter
xor
lods
dec
sub
mov
xchg
popa
jae
mov
mov
add
xor
adcl
loope
cltd
int3
add
ror
vcmpps
push
imul
add
xor
fstpl
push
pop
pop
xchg
lcall
test
push
shr
fldl
inc
lret
popa
lret
push
pop
inc
push
xchg
sbb
loopne
stc
out
sub
mov
mov
imul
stos
adc
push
testb
insl
mov
shlb
hlt
inc
jmp
jg
adc
shrl
dec
jp
dec
push
movl
bound
sbb
sti
js
mov
inc
jl
pop
scas
inc
rorl
adc
insl
mov
rsqrtps
and
cwtl
adc
mov
mov
in
adc
sbb
repnz
les
push
sar
inc
sbbl
lret
cs
push
ret
add
iret
sbb
push
and
jo
push
jns
out
pop
xchg
xchg
jl
pop
rol
mov
bound
xchg
scas
push
inc
or
jbe
dec
das
mov
rcll
or
or
ror
cld
inc
sub
enter
rolb
sub
push
js
mov
mov
fistpl
adc
and
shlb
pushf
rcl
adc
or
rcrb
ja
xchg
or
imul
shlb
loopne
movsb
nop
add
scas
push
rcrb
mov
adc
add
fsubs
movsl
adc
in
test
rcr
xchg
cmp
test
jle
imul
xor
aas
in
pop
or
pop
addb
lock
mov
test
rcl
adc
sar
xchg
div
inc
les
insl
cmp
mov
cmp
or
fsubs
fistps
push
rclb
mov
inc
and
rcrb
lock
and
lret
push
fnsave
pop
push
push
push
rorl
mov
sbbl
shlb
roll
lods
pop
inc
mov
mov
idivl
xor
adc
test
mov
jb
bound
mov
fidivrs
pusha
dec
ret
push
jo
xchg
dec
mov
mov
jne
sub
cmpsl
sarb
popf
test
mov
jb
inc
test
xor
push
lcall
shlb
stos
stos
and
adc
add
cltd
loop
pop
popf
pop
pop
loopne
lret
xchg
jne
fiadds
jge
sti
in
inc
mov
sar
repz
ljmp
aas
mov
fisttps
rorl
cli
test
rcl
inc
jp
lcall
mov
pushf
mov
jno
dec
cltd
inc
xorb
jae
pop
dec
ds
roll
inc
test
adc
shrl
int3
add
rcrl
pop
movsl
iret
sbb
rcl
dec
mov
xchg
imul
aad
xor
mov
push
ficoms
dec
clc
out
into
inc
lret
cmpsl
fwait
sub
jno
sbb
rcll
add
rol
adc
mov
adc
ss
or
shl
dec
adc
push
rol
add
push
xchg
pusha
sbb
movsl
sbbb
or
pop
jno
out
je
arpl
lahf
add
rol
notb
loopne
repnz
add
shr
cmp
sbbb
shrl
rcl
maxps
mov
shrl
scas
fwait
enter
push
and
dec
mov
mov
cwtl
push
rcrl
shr
outsb
gs
mov
adc
inc
mov
mov
xorb
rcl
hlt
jmp
pop
loope
pop
lcall
ljmp
push
fnop
lret
jp
jl
sbb
jno
fwait
or
clc
push
adc
shrl
or
adc
shll
inc
aaa
xor
fistpl
mov
pusha
jns
rcrb
test
lods
dec
adc
cmp
lods
nop
loopne
lahf
pop
pop
xchg
adc
mov
mov
scas
jnp
lock
cmpsl
lock
stos
mov
adc
int3
jns
js
push
stos
out
dec
fnsave
fistpll
fnstenv
sub
jl
les
orb
xor
aam
ret
or
pushf
adc
jns
mov
dec
push
popa
cld
push
sub
out
and
add
aam
call
xchg
sub
push
sub
xor
pusha
pop
in
jp
adc
mov
pmulhw
mov
roll
cmp
insb
sub
sub
aam
jecxz
sub
jo
stc
test
sub
inc
aam
jmp
xlat
jecxz
repnz
aam
xchg
jg
push
mov
out
sbb
aam
mov
mov
push
in
push
rcl
or
mov
push
push
dec
xor
mov
mov
rcrl
mov
subl
adcl
push
aam
bound
or
loope
pop
xchg
pop
push
jno
add
aam
or
sbb
aam
lahf
push
sbb
mov
pop
stos
cmp
mov
xchg
je
shll
outsb
jb
cwtl
add
xor
in
scas
outsb
jg
addr16
iret
cs
in
push
xor
ja
hlt
jmp
jo
xchg
shrl
mov
lcall
in
and
rcrb
mov
inc
jne
rcl
push
push
jp
andl
popa
mov
ja
pusha
cmp
push
aad
mov
ret
stos
hlt
jp
sbb
dec
fsubs
out
in
aad
loop
repnz
sub
xor
or
push
imul
add
bound
ficoms
cmp
push
mov
sahf
cmpsl
jae
repz
scas
xchg
and
aad
push
es
mov
aad
jb
in
mov
xchg
inc
les
jmp
mov
insl
add
jmp
movsl
cmp
mov
aad
loopne
adc
aad
adc
mov
je
nop
aad
mov
jp
and
icebp
cmp
mov
icebp
nop
loopne
insl
mov
xlat
ret
test
outsb
fldl
cmp
mov
mov
lret
adc
push
xor
push
loope
inc
repnz
jbe
adc
addr16
fsubr
fs
and
jecxz
stos
js
sub
inc
test
loopne
mov
out
mov
aam
add
aad
ljmp
nop
aad
cmpsl
lds
cmp
aam
mov
ror
dec
jne
int
pop
jmp
enter
xchg
fimuls
pop
sbb
out
shlb
mov
pop
or
aad
adc
mov
or
test
xchg
push
pop
dec
cmp
vmwrite
es
jns
aaa
sahf
addl
test
shrb
jb
jmp
insb
cmp
mov
in
mov
push
das
mov
or
pusha
int
mov
mov
mov
rcrb
sar
pushf
adc
pop
loop
inc
cli
sbb
out
xor
shrb
jmp
mov
rclb
jae
xchg
adc
hlt
fidivs
jbe
or
or
adc
sti
push
adc
xchg
push
push
cmp
rolb
mov
pop
js
pop
in
mov
jo
rcl
cmc
test
push
xchg
lahf
scas
cmpsb
in
lods
loop
and
dec
cwtl
and
xchg
dec
jbe
ror
bound
lret
lcall
clc
xchg
dec
pop
jge
jb
xchg
xchg
es
push
stos
cmpsb
lahf
dec
jb
out
push
bnd
incb
adc
mov
sub
pop
mov
cld
mov
cs
jl
push
inc
rcrb
mov
dec
mov
pop
pop
push
aam
jmp
fnstsw
mov
push
xor
xchg
ret
shrb
loope
fldt
leave
aas
pop
jecxz
jo
inc
push
and
add
jae
divb
sub
xor
leave
mov
adc
or
and
outsl
out
mov
loope
in
fmull
xlat
fsubs
addr16
pop
push
push
dec
ret
cmp
aam
jmp
jns
mov
mov
pop
mov
jbe
sub
mov
cmp
call
xchg
test
jb
aam
add
lret
outsb
js
adc
ret
adc
lret
sbb
imul
mov
cmp
cmpsb
mov
rclb
dec
lods
lock
push
sahf
idivl
fisubl
and
xor
jg
push
ret
sahf
or
or
xlat
filds
mov
test
and
dec
push
and
cltd
aad
pop
xchg
lds
mov
iret
jb
inc
dec
in
sbb
xlat
xchg
pusha
xlat
pop
ja
nop
xlat
and
or
arpl
clc
jne
outsl
xor
push
out
push
and
dec
stos
xor
iret
push
lret
mov
jge
hlt
sbb
addr16
ds
hlt
sbb
sbb
pop
jae
xor
xlat
mov
sbb
xlat
pop
push
cmpsl
int
sahf
push
shlb
lcall
loopne
xchg
add
mov
xlat
xor
pop
rorb
jno
clc
jno
cmc
iret
sub
fsubr
fdivrp
lret
inc
push
loope
mov
cmp
repz
ljmp
sub
xlat
dec
fsubrl
ds
iret
mov
int
fsubl
mov
sub
das
fisubrl
pop
cs
push
ljmp
dec
dec
gs
pushl
ljmp
jmp
loop
test
pusha
in
mov
pop
pushf
and
out
xchg
loopne
push
push
leave
jne
pusha
fsub
xchg
nop
fsubrs
scas
lret
and
inc
lea
fs
cmpxchg
clc
push
inc
div
test
mov
shlb
dec
nop
nop
fsub
setns
pop
sbb
inc
and
adc
fmuls
dec
jmp
sub
sahf
pop
iret
add
fdivrs
lret
test
dec
push
pop
add
fsubs
scas
pop
sbb
cli
daa
div
cmpl
ret
pushf
push
fcoms
fistpl
xorb
fcomps
test
dec
jae
jo
xor
daa
mov
inc
fsubs
xchg
add
aam
mov
fsubs
dec
sbb
or
fadds
nop
fcomps
sahf
int
int3
mov
mov
and
stos
scas
int
lds
rcl
xor
push
mov
jbe
inc
pop
ss
xchg
dec
cmp
rcr
das
sbb
iret
mov
rdpmc
fisttps
bound
shr
psubsb
xchg
xor
adc
scas
and
push
sub
loop
es
daa
lret
rolb
repnz
push
sub
mov
dec
cmc
cs
shrb
cltd
pop
addl
xor
inc
push
sbb
and
addr16
push
pop
rcl
adc
inc
into
lret
sbb
xor
jp
scas
call
lret
lods
lods
inc
add
fadds
and
mov
and
hlt
gs
inc
cwtl
sbb
mov
or
fcoms
mov
xchg
test
inc
sub
adc
fnstenv
or
hlt
rcll
punpckldq
lock
adc
flds
mov
repnz
movsb
push
xchg
mov
stos
fcmove
adc
lea
xorb
imul
enter
ret
mov
clc
add
cmp
sbb
fnstcw
adc
pop
jno
int
sub
pop
daa
arpl
pop
or
mov
cmpsl
cli
push
cld
adc
fstps
aad
push
lods
cmp
sbb
fnstenv
mov
cmp
inc
jmp
inc
lret
mov
fldcw
pop
xor
rolb
sti
sub
push
sarl
arpl
mov
outsb
xor
nop
and
dec
pop
inc
push
mov
fnstenv
mov
sbb
fnstenv
dec
in
imul
dec
ds
add
add
shll
ret
ret
rcr
lret
je
or
cmp
in
ja
arpl
pop
or
sub
mov
gs
and
mov
push
test
fnstcw
pop
jno
fsub
sub
int3
stc
xor
push
inc
in
jne
sbb
iret
or
fstps
shlb
fsts
repz
mov
inc
stos
push
scas
xor
pop
xchg
sbb
push
jp
jbe
faddl
add
mov
xchg
ret
pushf
mov
lahf
fnstcw
imul
inc
mov
and
jp
dec
fildl
ficompl
mov
lret
and
sbb
clc
mov
les
xorl
fidivrl
sub
inc
fiaddl
sbbb
push
fidivrl
mov
xor
xor
push
fimuls
mov
jl
bound
pop
cmc
imul
aad
loopne
in
filds
scas
mov
je
lret
inc
lret
push
lcall
fidivrl
in
pushf
inc
fidivl
jns
pop
ficoms
mov
xchg
jp
dec
neg
and
push
in
jge
in
dec
je
frstor
std
in
pop
push
pushf
adc
je
dec
stc
sub
in
cs
pop
jmp
negb
mov
mov
dec
aad
mov
xchg
pop
push
stos
adc
call
xchg
stos
dec
in
test
orl
and
push
in
inc
jns
sub
sub
mov
dec
jg
loope
push
and
fidivl
add
aaa
xchg
iret
mov
fldl
out
repz
xor
pop
mov
test
ficoml
xlat
cmp
mov
test
xchg
and
push
insl
imul
sub
xor
ljmp
mov
and
cld
dec
enter
shlb
push
cmp
inc
ja
inc
jge
xor
aam
xlat
loop
cli
pop
push
int
and
sbb
icebp
pusha
int3
sub
push
push
aas
sub
es
pop
jo
adc
enter
roll
rorb
jo
mov
mov
adc
not
loop
leave
or
and
imul
adc
fisttpl
inc
adc
jne
outsl
scas
aam
out
in
int
adc
mov
bound
in
xor
outsl
dec
movsl
jp
xor
dec
outsl
pop
jnp
shrl
sub
fcoml
mov
bound
mov
mov
or
idiv
lret
inc
or
pop
ds
push
sub
sub
or
pop
div
mov
or
jb
cli
cli
or
dec
xchg
push
ds
jmp
stc
sti
jo
jae
adc
fcmovnb
adc
fstpt
and
cmpl
push
aad
lret
das
add
fisttpl
add
fucomi
jmp
jg
nop
xchg
cmpsb
xchg
dec
pop
mov
aas
add
mov
jne
cmpsb
mov
cmpsb
bound
insb
jg
pop
int
mov
jg
sbb
push
aam
cmpl
fiaddl
cmpsb
and
pushl
sub
sbb
pop
in
movsb
lret
xor
pop
pop
jl
outsb
jle
pushf
jo
gs
inc
jp
xor
clc
sbb
mov
pop
call
in
xchg
add
push
adc
into
ss
insl
mov
imul
cmp
xor
and
inc
std
pushf
add
fildll
lea
fdivl
shl
inc
mov
stos
push
inc
fdivr
bnd
jp
jae
ss
pop
mov
hlt
shr
sbb
fsubr
mov
dec
loopne
pop
and
push
adc
fcoml
lcall
mov
insb
cmp
jne
xchg
adc
fs
ds
xor
cmp
push
sarb
in
cwtl
rcr
inc
xor
xorb
mov
ss
cmp
xor
leave
leave
mov
and
xchg
aam
xchg
mov
xorb
fcompl
push
push
add
adc
inc
add
filds
arpl
lock
fsub
sub
push
imul
adc
mov
pusha
fsub
movsl
push
jecxz
test
cltd
xor
movsl
mov
fisttpll
mov
fistps
sbb
jge
mov
data16
fwait
vdivsd
jbe
push
sbb
inc
push
mov
dec
adc
shll
pop
imul
adc
pop
inc
aam
fildl
int
mov
std
adc
incb
popa
addb
popa
not
jmp
aad
movsb
mov
enter
adc
test
ret
mov
imul
hlt
cmp
fucomp
xor
or
push
sbb
add
sbb
incl
daa
ficoml
das
dec
imul
jl
jg
push
sbb
pop
xor
or
loopne
or
sbb
sar
jmp
cmp
movsb
xor
sbb
and
add
test
pusha
ror
cmc
sti
es
call
or
xor
mov
jp
push
ficomps
jl
stc
cmp
dec
jb
imul
dec
sub
pop
sbb
frstor
mov
fistpl
jae
xchg
xor
mov
fldenv
push
cmp
and
sbb
sbb
in
mov
fwait
pop
mov
cltd
lea
push
push
mov
mov
frstor
jae
roll
nop
lock
test
in
sbb
int3
hlt
lock
sti
into
xchg
idivb
and
clts
cmp
mov
int
ja
cmp
push
pop
sbb
int3
js
dec
loope
das
movsl
shrl
out
int3
mov
movsb
data16
jae
int3
jle
sahf
fldenv
xorb
dec
jmp
lea
mov
andl
pop
ss
pop
xor
outsl
xchg
cmp
into
and
push
pop
fdivl
mov
sar
sbb
pop
addr16
dec
lret
and
and
lods
mov
out
outsl
repnz
imul
mov
and
pop
stc
adc
fidivrs
or
xchg
push
in
movsl
add
sbb
jle
adc
fisubrs
and
cmp
scas
mov
ljmp
mov
aad
cmp
out
js
cltd
mov
testl
fadds
insb
add
and
and
loop
or
push
inc
mov
in
in
pop
mov
mov
pop
sub
sbb
sub
test
insb
adc
jp
imul
inc
iret
add
pop
movsl
fisubs
sbb
sub
fs
iret
sub
push
addr16
and
int3
adc
aas
dec
xor
inc
ja
xor
add
mov
addr16
idiv
sub
in
inc
mov
fsts
inc
mov
adc
sti
das
push
outsl
cmp
mov
fidivs
shlb
insl
mov
sub
jnp
adc
mov
call
test
or
fisubrs
adc
loopne
push
stos
pop
dec
pushf
loopne
lahf
adc
mov
jb
loopne
push
jnp
adc
fistpll
popa
jg
inc
inc
fsub
pop
test
mov
xchg
lock
xchg
ret
pop
outsb
ljmp
mov
mov
test
adc
fbld
lahf
xor
and
test
sbb
out
cwtl
adc
push
mov
popa
add
pushf
rcr
shlb
maxps
jne
popa
imul
dec
mov
jbe
mov
add
andl
mov
push
jne
rcrl
xchg
or
fbstp
out
jmp
je
jns
sub
das
popf
adc
fisttps
hlt
xchg
mov
cltd
jo
cmc
and
push
outsl
dec
push
dec
push
adc
jl
push
xchg
and
push
in
leave
bnd
hlt
dec
stc
jmp
sbb
fildll
cmp
loopne
cmp
pop
sbb
mov
cltd
mulb
ret
mov
sub
std
loope
dec
sar
inc
jbe
mov
jg
out
push
mov
sub
and
cmp
jge
outsl
jg
mov
andb
sub
and
rolb
nop
rcr
pop
mov
dec
and
add
cmp
stc
pusha
movsl
add
aad
loop
mov
aad
pop
popl
jge
inc
test
sbbl
pushf
adc
sbb
loopne
cli
cmpsb
mov
roll
pop
aaa
xchg
xor
or
shll
lahf
mov
loopne
filds
jge
icebp
or
loopne
push
into
pop
cmp
movl
bound
mov
out
or
loopne
test
loopne
xor
cmp
arpl
loopne
js
call
outsb
inc
shll
and
aas
aas
mov
jne
mov
xchg
mov
rclb
cld
out
mov
loopne
nop
loopne
xchg
mov
jp
cmp
inc
stc
jae
dec
xor
mov
pop
mov
or
loopne
push
push
loope
adc
mov
insb
xor
push
aaa
push
cmp
jp
sahf
in
lret
out
bound
push
jle
jo
aam
pop
outsb
insb
cmp
mov
mov
mov
gs
jae
ss
outsl
test
dec
or
ja
push
mov
loopne
inc
ds
ljmp
and
ror
adc
loopne
pop
push
test
xchg
jo
out
and
jo
addr16
frstor
dec
pop
int3
adc
mov
sub
fs
shl
mov
loopne
xchg
push
into
fimuls
loopne
data16
aam
adc
loopne
test
jnp
in
xchg
and
in
sub
dec
xor
add
jae
mov
mov
adc
stc
mov
loopne
inc
and
xor
ret
inc
dec
pop
cmp
sub
sbb
mov
inc
insb
mov
loope
dec
or
loopne
cmpsl
dec
ret
cbtw
lock
mov
es
mov
loope
ljmp
xchg
dec
xchg
sbb
lods
sbb
loope
addr16
cmp
imul
jae
push
loope
mov
add
loope
pusha
push
jo
aam
adc
loope
subl
push
push
or
loope
stc
popa
and
cmp
sub
mov
shll
pop
sbb
mov
adc
add
orl
jb
push
faddl
incl
js
and
repnz
int
fildl
rol
lret
sub
aam
movb
add
cld
stos
or
loope
mov
in
aad
std
fdivp
adc
loope
jo
clc
xor
add
ss
movsb
sub
loope
lcall
imul
loope
ret
aas
icebp
testb
cmp
and
shl
fdivrl
cmc
movsl
icebp
iret
or
loope
out
stos
xor
pop
lods
add
loope
push
dec
ss
pop
jae,pt
aas
lock
mov
mov
add
or
imul
clc
mov
mov
insb
mov
xor
pop
scas
mov
sti
sbb
mov
fldcw
aas
cmp
inc
shl
or
cmpl
lods
stc
in
jno
es
aaa
cld
jg
mov
repz
jo
cmp
mov
daa
jnp
lods
inc
mov
aam
dec
add
xchg
and
fcmovnb
inc
mov
cs
in
int3
jb
stos
inc
or
loope
inc
push
xchg
xorl
add
loop
or
lret
lret
and
mull
lock
sbb
loop
int
pop
jmp
xor
jno
mov
pusha
pop
cltd
aad
or
clc
xchg
shl
jns
lock
ljmp
rcll
inc
mov
loopne
fbld
pop
dec
rcr
xor
dec
movsb
aaa
lret
add
inc
jne
mov
sub
fs
aas
cmp
test
stos
insb
sbb
inc
jb
dec
and
icebp
mov
outsb
sbb
loop
loopne
loop
mov
nop
inc
loop
add
or
loop
ss
xchg
lret
mov
xlat
repnz
test
nop
shl
fistps
xchg
scas
and
loop
jg
cwtl
inc
loop
mov
std
jle
sbb
cmpsl
or
mov
iret
push
sub
into
rcll
loop
xchg
mov
test
mov
and
xor
test
dec
mov
je
mov
repz
cmp
outsl
out
mov
mov
rclb
add
loope
imul
jo
cltd
cmp
lret
cmp
les
mov
xchg
mov
pop
out
pushf
and
mov
cmc
scas
xor
cmp
repz
or
inc
lds
dec
shl
dec
xchg
icebp
xor
or
fcmovnbe
cmc
ds
ficoms
and
xor
and
cli
cmp
dec
inc
push
adc
repz
es
sbb
jecxz
stos
out
stos
lahf
pop
xchg
fcmovnu
flds
mov
pop
mov
sbb
jecxz
inc
dec
push
lods
jle
ljmp
push
lds
xor
jp
jbe
pop
mov
adc
jecxz
nop
jecxz
loope
ret
dec
pushf
lock
in
jb
out
mov
adc
push
les
ljmp
mov
lcall
pop
fcomps
clc
cmc
adc
jecxz
jge
xor
outsl
icebp
or
add
mov
adc
leave
xor
push
inc
in
sbb
jecxz
test
fistps
and
lretw
jecxz
jmp
jl
cmp
inc
hlt
push
aad
xor
sub
mov
jecxz
insl
les
jmp
inc
adc
cld
test
jecxz
adc
mov
popl
push
mov
sahf
out
ds
xor
add
xor
jo
mov
push
cmpsb
cltd
popa
int3
popa
addb
lock
cld
pop
inc
xchg
flds
sub
xor
mov
jo
cli
jmp
dec
addl
mov
addr16
insl
in
sbb
adc
outsb
ficoms
mov
cmp
shl
mov
in
hlt
adc
in
ret
jb
or
stos
jge
sub
xchg
mov
mov
push
aam
lds
xor
add
jno
xchg
or
in
mov
mov
and
aaa
popf
das
jne
out
stc
rorb
in
cmp
nop
jo
mov
sti
das
or
int
mov
jmp
cmp
sub
into
mov
addr16
ljmp
cmp
in
rcl
add
ljmp
xchg
xor
aaa
push
mov
outsb
push
ljmp
enter
inc
jno
adc
pop
cmp
in
jo
xor
movsb
jp
fs
push
jbe
inc
mov
test
in
xlat
jbe
mov
in
mov
call
rol
pop
mov
xor
xchg
mov
shl
inc
adc
cmp
xchg
movsb
mov
daa
and
mov
les
outsb
adc
in
out
jecxz
xor
adcb
mov
in
leave
insl
fstpl
and
aam
int
cli
add
sub
loope
fwait
or
sub
call
adc
aam
int3
mov
stc
into
nop
push
in
hlt
inc
mov
in
out
insl
and
mov
shrl
and
lock
xor
idiv
fimuls
adc
rcrl
in
xchg
ljmp
mov
mov
pusha
negb
iret
pop
push
adcb
cmp
fiaddl
dec
movsb
and
into
mov
fsubs
pop
repz
ret
cmp
imul
in
mov
test
dec
jns
orl
sti
xchg
xor
mov
add
in
fcmovnb
adc
std
int3
dec
mov
sub
adc
mov
or
test
xor
xor
push
lds
out
mov
dec
sbb
sub
in
adc
in
pop
idivb
dec
insl
mov
dec
lock
push
sahf
std
jmp
jmp
cwtl
and
lods
es
aaa
int
mov
fmull
idivl
adc
in
xor
fs
jns
xor
sub
addl
test
xor
jo
mov
rolb
icebp
fldl
in
mov
xor
mov
dec
xor
aad
ret
lahf
rol
gs
mov
jp
cs
mov
jmp
push
mov
loopne
jo
push
scas
arpl
and
pop
jl
or
add
inc
fnsave
pop
cli
push
testb
push
ss
pop
push
lea
out
iret
ljmp
push
shlb
leave
mov
out
in
push
pop
das
mov
push
xchg
fwait
scas
in
lret
fld
lahf
add
mov
out
cmp
cmpsb
mov
pop
in
mov
jge
jl
cmp
cmpsl
cwtl
inc
out
out
inc
iret
jno
add
das
push
xchg
xchg
pop
and
jo
test
xor
push
arpl
cs
dec
arpl
in
and
int
andb
test
cmp
jbe
lcall
mov
add
enter
cmp
out
jmp
mov
stc
xor
cmc
jb
inc
fisttps
cmp
loopne
rol
test
push
cmp
and
mov
inc
push
dec
lret
mov
mov
inc
push
jno
jae
test
adc
mov
arpl
je
adc
push
jp
ficoml
ds
jno
dec
cmpsl
xor
faddp
out
mov
outsb
repz
xchg
inc
jle
arpl
add
push
xchg
add
jp
or
ret
cmpsl
xor
out
mov
stos
mov
in
add
mov
push
pop
sbb
lret
lods
or
aaa
test
das
arpl
out
andl
lods
mov
lock
xchg
out
dec
scas
inc
pop
repnz
xchg
xchg
out
xchg
push
lock
inc
daa
xor
pop
or
cld
fiaddl
data16
push
sub
push
out
dec
stos
sbb
cmp
lods
cltd
lock
mov
imul
mov
frstor
fmull
out
push
out
scas
xor
sub
jo
sahf
cmp
fsubrl
movsl
pop
add
push
push
sahf
and
out
inc
push
gs
out
push
adc
xchg
sub
dec
repnz
xor
movsb
lods
fs
cltd
fisttpl
ds
shl
mov
sub
xchg
add
andb
jae
fadds
pop
cld
mov
xor
xor
movsb
daa
fwait
adc
faddp
or
or
out
mov
fimull
popl
inc
out
sbb
lahf
insl
and
cli
add
lods
out
cmc
sahf
mov
xor
dec
sub
cmp
push
clc
adc
out
mov
out
out
andb
pop
arpl
out
sbb
addb
fwait
test
lods
icebp
dec
pop
lahf
add
pop
clc
inc
sahf
push
mov
out
repz
loopne,pt
bound
out
sbb
call
mov
scas
and
push
pop
jns
add
lret
jle
sub
lret
push
mov
out
adc
in
shl
mov
cmp
cmp
popa
insl
push
mov
pusha
push
in
jp
add
call
sub
and
fistpl
jp
rcr
and
cmp
cld
push
jle
jle
aad
xlat
popf
mov
out
xchg
jno
mov
mov
cmp
out
fimull
sub
xlat
xchg
sub
call
inc
loop
mov
call
jb
xor
cmp
cmpsl
ret
and
or
call
add
call
push
adc
inc
pop
pop
xchg
mov
gs
fcomi
or
mov
adc
mov
xor
add
vmovmskps
sbb
mov
sbb
cmpsb
xchg
mov
and
call
shr
out
add
lock
mov
jecxz
sub
insb
adc
fwait
fwait
sbb
out
adc
in
adc
xchg
lret
jo
xchg
push
call
jnp
std
sub
or
dec
or
xchg
or
mov
jecxz
adc
in
nop
xor
mov
lock
nop
call
adc
in
hlt
mov
sub
das
sbb
call
jmp
bound
shrb
adc
call
add
jbe
mov
fildl
jge
xor
addb
push
jnp
cmp
add
inc
fiadds
out
ss
pop
mov
outsb
xchg
outsb
inc
jg
ds
mov
pop
inc
popa
ret
scas
clc
shl
mov
loopne
cmc
pop
inc
je
inc
addr16
sahf
mov
sbb
jmp
in
pushf
inc
jmp
leave
dec
pop
inc
ror
pop
xor
jmp
sbb
jmp
xchg
js
jb
add
xchg
mov
push
es
outsb
jo
xor
inc
and
imul
mov
cmc
adc
inc
sarb
mov
mov
xor
mov
and
pop
cmp
jne
cmpsb
xlat
jmp
cld
xor
popa
fs
pop
std
jle
setl
rcrl
outsl
push
pop
test
scas
push
add
add
int3
fimull
sbb
push
scas
ja
in
enter
pop
sub
pop
adc
fldenv
in
fs
sub
stos
pop
mov
push
loop
adc
sub
sbb
pusha
gs
stos
push
sub
popa
cmc
pusha
idivb
daa
popa
mov
mov
and
popf
aas
mov
xor
mov
add
aam
pop
data16
adc
add
xor
adc
push
jmp
pop
mov
test
pop
inc
pop
popa
in
insb
loop
adc
dec
out
pusha
and
cwtl
sub
in
add
shrb
loope
hlt
addb
push
fidivrs
mov
rcrb
mov
dec
outsb
and
xor
lock
mov
pop
or
and
push
rcrb
nop
ljmp
je
rcrl
andb
push
imul
xor
and
jp
dec
ret
mov
jb
or
sbb
ljmp
and
ja
mov
ljmp
xchg
daa
inc
adc
cltd
or
jecxz
dec
daa
sub
mov
ljmp
imul
loope
dec
repnz
loopne
out
movsl
jle
into
xchg
lock
adcb
xchg
paddusw
stos
fs
test
sbb
and
cmp
movsl
adcl
js
sbb
inc
out
imul
ljmp
push
pop
fldl
adc
sbb
xchg
popf
jge
fdivs
hlt
sub
popf
insb
cmp
inc
in
ffree
cld
cwtl
shr
jae
xor
and
icebp
jns
leave
fnstenv
loopne
int
pop
in
cmpsl
adcb
mov
xor
jae
pop
ljmp
mov
fdiv
shrb
pushf
push
ljmp
fsubs
inc
lea
les
pop
lods
fstl
mov
dec
xor
fwait
mov
xor
in
add
cmp
mov
mov
aad
push
mov
jb
pop
jle
dec
test
jae
or
ljmp
lret
or
loopne
push
lods
add
push
in
fistpl
xchg
out
das
mov
fadd
aaa
adc
cld
xchg
into
mov
lds
sbb
jmp
push
mov
stos
and
je
mov
push
sub
and
jmp
mov
jmp
jo
fidivrs
xchg
into
iret
lret
in
subb
mov
pop
sbb
jmp
add
and
adcl
jmp
in
fmul
and
push
lock
or
pop
mov
fidivrs
fsubl
sahf
and
insl
stos
pushf
shr
push
sub
inc
jbe
mov
and
sbb
cmp
imul
cli
xchg
push
adc
dec
iret
ja
xor
xor
imul
imulb
cmp
lahf
push
add
jmp
cmpsl
xchg
sub
pop
sbb
testl
stc
xlat
jae
and
lret
dec
mov
xchg
iret
mov
jmp
or
or
sub
arpl
push
out
xchg
shr
inc
cmp
pop
test
jmp
push
mov
mov
push
jmp
jnp
sub
mov
mov
nop
jmp
imul
into
daa
das
jmp
nop
and
xlat
pop
xchg
icebp
jle
xor
dec
js
sub
push
pop
pop
mov
jmp
movsb
mov
cmp
xchg
cmc
mov
in
mov
push
or
jmp
push
pop
iret
dec
xchg
sbb
in
mov
arpl
pusha
in
sub
gs
movsb
jecxz
in
and
and
call
jle
aaa
hlt
ret
into
mov
lahf
les
xor
pop
test
cmpsb
rcpps
dec
sbb
in
cmp
dec
arpl
aas
and
push
movsb
sub
dec
in
fxch
nop
add
mov
movsb
mov
stc
movsl
ret
cmp
shl
loope
mov
inc
sub
fdivrs
jo
in
and
inc
xlat
pop
ja
add
cmpsl
xchg
in
cld
mov
in
push
pop
or
push
add
hlt
mov
insb
mov
inc
addr16
outsb
push
rcrl
in
push
adc
lock
imul
pop
sahf
xchg
aam
dec
cmpsb
jp
lcall
mov
nop
in
loope
push
in
mov
add
xchg
sbb
dec
jle
and
daa
into
sbb
lahf
jo
mov
insb
mov
dec
sbb
int
inc
push
mov
sub
pop
pop
int3
ret
add
leave
jecxz
adcb
jne
xchg
pop
pop
fisttpl
mov
cmp
fs
test
xchg
shr
sbb
mov
mov
push
push
mov
sti
rclb
aaa
stos
test
frstor
pop
jecxz
jmp
push
in
push
push
or
sbb
cli
dec
mov
loopne
arpl
aaa
into
xchg
lret
in
imul
sub
mov
sbb
pop
test
in
xchg
cmp
pop
xor
in
aas
addr16
mov
adc
sbb
repnz
mov
inc
inc
stc
in
dec
xor
jnp
in
ffree
and
dec
divb
jecxz
mov
sbb
in
jecxz
adc
in
push
iret
mov
fsts
loopne
iret
mov
sbb
in
jecxz
jl
int3
or
in
mov
lock
fcomps
pop
mov
xchg
or
push
stc
xchg
xor
dec
test
nop
loopne
inc
outsl
or
cmp
les
pop
in
ficoml
or
in
push
dec
xchg
jo
dec
cmp
mov
shr
dec
pop
jmp
xchg
stc
push
lret
pop
add
imul
das
in
push
popa
sub
cld
test
jl
mov
es
sbb
in
dec
jg
push
movsb
inc
mov
call
sub
leave
cmpsl
imul
sbb
icebp
jmp
nop
in
lods
push
pop
insb
jecxz
sbb
in
sbb
les
out
adcb
lds
push
jg
adc
in
lcall
sub
movsl
int
xchg
scas
mov
jno
mov
mov
jo
lea
cmc
sub
push
mov
iret
testb
add
outsb
hlt
adc
and
bnd
mov
cmpb
jno
pushf
sub
repz
in
lahf
cli
fsubl
xchg
xor
popa
mov
or
lret
rolb
daa
setnp
pop
mov
shll
sub
sub
shr
mov
stos
out
lahf
sahf
pop
inc
jae
sbb
out
ljmp
pop
and
aas
xor
xchg
lock
adc
pcmpgtb
dec
xchg
mov
fwait
dec
add
arpl
sti
lods
push
xor
movsl
mov
call
rorb
mov
mov
out
sub
sbb
outsb
imul
push
sub
jbe
pop
xchg
add
jae
mov
enter
es
and
jge,pn
sub
pop
or
lock
das
add
pop
outsl
imul
in
adc
stc
roll
inc
or
pop
pop
dec
sub
cmp
cmpl
lods
mov
add
sahf
cmpsb
and
pop
lods
adc
mov
sub
cmp
out
test
out
mov
mov
in
fwait
jecxz
jl
scas
dec
jb
cwtd
mov
jae
pop
aaa
in
sbb
mov
add
js
test
test
rcrb
ret
xchg
mov
cwtl
add
inc
xchg
xchg
xor
flds
stc
outsb
dec
jle
adc
out
pushf
push
out
cmp
test
dec
int
mov
rcrb
xor
pop
loopne
cli
adc
sbb
ret
testl
imul
mov
cmp
mov
dec
idivl
ds
in
aas
aad
xchg
inc
out
lret
xchg
xor
pop
xchg
jl
add
adc
mov
and
mov
lods
mov
js
inc
dec
xor
insb
int
xchg
pusha
xchg
sub
sbb
inc
cmp
xchg
cmp
arpl
pushf
shr
sub
ljmp
mov
cltd
imull
jno
inc
inc
push
sti
movsb
filds
popfw
fdivp
sub
addr16
lsl
add
out
lret
addr16
sub
shr
insl
ret
and
inc
jno
out
sub
push
out
loop
pop
xchg
push
adc
das
push
xchg
dec
cs
jbe
xchg
xor
ss
sub
xor
cmpl
mov
and
push
inc
xchg
push
scas
in
cltd
mov
jo
inc
imul
fldenv
jp
and
mov
mov
out
insl
js
push
out
mov
push
mov
pop
call
repz
movsl
sbb
leave
mov
sbb
cmp
sbb
out
iret
inc
xchg
pop
adc
pop
sub
push
xchg
mov
mov
adc
adc
and
popa
inc
dec
and
xchg
xchg
insb
cs
inc
aas
and
cmp
adc
out
imul
mov
mov
in
shl
ljmp
popa
pop
cmovp
mov
add
pop
cmpsb
mull
jo
jne
fdivrl
fs
fstpl
mov
imul
or
ret
sti
and
mov
xchg
cmp
dec
push
daa
mov
aam
adcb
repnz
cltd
push
mov
sarl
cld
xlat
mov
xor
push
insb
jnp
pushf
adc
shrl
mov
out
sbb
icebp
dec
mov
jne
lock
popa
ret
jl
and
cmp
and
mov
fsubr
into
jns
int
push
xchg
and
xor
rcr
push
push
mov
shufps
les
dec
mov
fisubrl
mov
ficomps
xchg
and
test
iret
mov
lods
in
shl
insl
push
popf
jecxz
dec
outsb
xchg
test
xchg
cs
cli
push
add
and
scas
iret
je
les
add
jp
aaa
xchg
inc
aaa
mov
in
rep
fidivs
adc
lock
pop
or
pop
or
mov
and
sbb
lock
xchg
fildll
test
bound
adc
xchg
fidivl
ret
js
adc
lock
cwtl
xor
in
push
hlt
mov
pop
xchg
adcb
aaa
xchg
pop
mov
shlb
lods
xchg
hlt
or
pop
jge,pt
mov
sbb
pop
test
iret
cwtl
jo
mov
dec
imul
das
mov
push
test
lock
inc
lock
cwtl
loopne
jae
aaa
adcl
and
test
insl
imul
sub
add
pop
add
lock
xchg
out
fidivrl
insl
ja
adc
lock
popf
xchg
mov
push
xchg
sub
das
xchg
jle,pn
pop
out
xor
pop
or
ss
jae
rorl
js
add
gs
cmc
movsl
pop
xlat
add
icebp
push
mov
lret
insb
lret
cltd
fwait
jl
sbbl
icebp
inc
std
mov
and
sub
mov
aad
inc
xchg
sub
loope
or
icebp
mov
enter
mov
adc
sub
sahf
add
dec
cmp
sbb
sub
cmc
mov
rol
mov
aam
and
ja,pt
cmpsb
push
jp
xlat
jge
int3
andb
cmpsl
call
imul
inc
nop
xor
cld
mov
dec
xchg
shlb
and
addr16
cmc
or
cmp
add
rcr
or
push
sbb
and
ljmp
inc
roll
xor
aaa
leave
rolb
leave
out
and
andl
loope
jp
mov
icebp
sub
sbb
outsl
lods
ss
in
xor
push
cmpsb
int
inc
icebp
push
nop
add
decb
das
js
adc
pusha
shll
bnd
lods
fdivrs
fsubrl
adcb
push
stos
mov
in
repz
pop
lea
lock
jae
xor
in
das
or
mov
jg
divl
dec
jle
ret
mov
mov
testl
jle
inc
mov
and
test
adc
loopne
push
pop
jmp
je
and
fiaddl
enter
and
add
lahf
repz
rcrb
add
repnz
jl
insl
or
into
pop
pop
mov
adc
shl
ja
jecxz
mov
stc
jns
dec
sti
or
or
mov
test
repnz
or
xorb
adc
rol
add
cmpsb
ja
jnp
ds
add
lret
dec
xor
or
repnz
push
loope
inc
jp
lock
movsb
add
xor
popf
mov
lods
imul
pop
addl
stos
jmp
ds
repnz
std
and
cmp
test
xor
popf
outsb
idivb
add
mov
lcall
cmp
repnz
les
lret
inc
cld
cli
int
out
dec
and
mov
pop
xorb
and
insl
jecxz
mov
cmc
xor
aas
pusha
pop
pop
push
push
pop
and
cmp
push
adc
repnz
bnd
sarb
push
inc
push
mov
pop
jle
mov
jmp
andl
xor
inc
clc
or
and
xor
gs
jmp
or
ret
adcb
les
repnz
mov
sub
int
mov
inc
and
popa
mov
mov
mov
mov
pop
dec
test
pop
xchg
ficomps
mulb
gs
mov
mov
and
xchg
loopne
popa
ret
push
mov
cli
leave
ror
inc
xchg
jle
push
xchg
xchg
and
cmp
or
repz
jg
sbb
movsb
jp
or
inc
rep
jnp
cwtl
loopne
scas
popa
cltd
jnp
jno
mov
in
idivb
mov
mov
ret
dec
sub
out
xchg
mov
cmp
xor
inc
stos
outsb
mov
ljmp
andb
test
ret
push
mov
fsubrs
gs
push
movsb
inc
add
cmp
movsl
dec
push
test
into
aam
jle
dec
xlat
dec
roll
pop
sub
repz
mov
inc
adc
lods
rcrl
dec
jmp
pop
pop
mov
push
js
xor
nop
repz
xchg
push
repz
shl
ret
mov
pusha
lret
movsl
cwtl
pusha
repz
mov
repz
inc
jae
mov
pop
dec
cli
pop
dec
nop
adc
sti
inc
sub
data16
pushf
loopne
aad
sbbl
jp
int
pop
aaa
xchg
sub
ds
inc
int
mov
pop
ret
cmp
insl
xchg
pop
jle
xor
and
cmc
push
cmp
and
in
scas
les
int
outsl
cmc
repnz
outsl
int
inc
sub
push
mov
andb
ss
fisttpll
lock
aad
add
fisubs
loope
mov
xor
jp
aam
sbb
popf
cmpsl
out
inc
lahf
pop
jl
push
aad
stos
cmpsb
mov
sarl
dec
mov
jne
ror
arpl
add
out
lcall
dec
pop
xchg
dec
cltd
loope
inc
sarb
cld
mov
and
hlt
mov
adc
out
inc
repz
js
loope
add
add
bnd
xor
out
cmp
popf
jp
imul
pushf
nop
hlt
pop
xchg
xor
xor
shl
inc
pushf
nop
hlt
jmp
adc
in
or
hlt
xor
les
sub
sub
jge
cwtl
and
fnsave
js
cwtl
mov
mov
in
mov
add
int
mull
adc
hlt
out
sahf
addr16
out
jb
pop
add
stos
sti
stos
aas
xchg
dec
out
mov
in
jne
or
hlt
pop
xchg
adc
hlt
jge
sti
and
mov
jp
in
cmp
ss
dec
lds
jb
jae
andb
xchg
dec
in
cmc
lock
xchg
sbb
lret
hlt
lods
mov
pop
nop
shl
movsl
fcmove
subb
imul
dec
adc
mov
or
shr
adcl
pushf
inc
hlt
es
fcoml
jle
shl
push
repnz
pop
cmc
ficompl
mov
inc
xchg
andl
adc
in
mov
pop
lahf
adc
cmc
add
inc
inc
cmp
and
xchg
das
cmpsl
dec
pop
outsb
sub
enter
push
add
xor
stos
es
jmp
push
mov
js
aam
int
lock
and
xchg
test
pusha
cmc
outsl
or
cmc
xchg
add
cmc
sub
adcb
cld
pushf
shl
ljmp
push
testb
dec
or
xchg
imul
cmc
dec
lret
push
insl
push
xlat
outsb
jg
imul
out
cmp
cmpsb
lahf
in
std
jle
xlat
xlat
add
je
jb
pusha
cmc
sub
and
push
ljmp
in
adc
and
out
push
xchg
lea
jecxz
add
sub
std
add
and
pop
push
imulb
xor
add
pusha
cmc
pusha
pop
xchg
add
cmc
pop
bound
test
ret
fistps
cmc
scas
jnp
scas
xor
outsl
out
std
jo
ror
jp
mov
lcall
leave
pop
pop
in
sbb
cmc
jne
xor
jle
cmp
movsl
xor
or
cmc
lock
xor
shl
dec
xor
movsl
and
sbb
cmc
push
mov
dec
lods
inc
mov
cmp
icebp
or
cmc
dec
addr16
gs
in
mov
mov
cltd
cmp
out
imul
inc
sbbb
xor
rorb
negb
and
loope
lods
mov
dec
dec
iret
push
or
jecxz
cltd
std
cltd
mov
sti
incl
xor
pop
jge
xchg
dec
jbe
fisubrs
mov
in
ss
mov
testb
jbe
mov
not
inc
jmp
mov
cli
pusha
test
or
dec
and
adc
pop
lds
aam
push
mov
mov
adc
stos
outsb
roll
mov
testb
shl
pop
xor
lret
daa
pop
mov
mov
pop
or
pop
sarb
lds
dec
daa
popf
mov
testb
testb
rolb
mov
xchg
outsb
dec
jecxz
bound
std
or
idivb
lret
xchg
out
popf
js
sub
fsubrs
mov
cmc
mov
cmpsb
cmp
outsl
dec
xlat
and
dec
push
cmp
in
cld
outsb
mov
xchg
fisubrs
aad
adc
testb
std
movsl
or
fiadds
and
aas
in
sbb
in
test
or
pop
cld
pop
mov
sbb
out
push
repz
inc
insb
mov
mov
pop
pop
repnz
xchg
stos
push
ljmp
insb
mov
and
lds
inc
pop
insb
mov
std
leave
dec
push
xchg
fiaddl
mov
mov
hlt
mov
push
xchg
test
repz
sub
adc
je
xchg
sub
dec
insl
pop
shrb
push
xor
pop
and
adc
pop
fistps
mov
outsb
shlb
popf
mov
neg
mov
cmp
lds
xor
pop
dec
lea
jo
mov
inc
jge
sbb
push
ret
aas
adc
dec
jns
xor
in
or
arpl
adc
ret
es
js
inc
jle
repz
xor
aam
mov
sub
dec
inc
pop
lods
jmp
mov
adcl
addr16
mov
testl
stc
jo
fimuls
xchg
gs
mov
adc
sub
lods
jge
iret
fiaddl
test
rcrl
xor
std
lret
mov
orl
xlat
insb
mov
imul
test
testl
jmp
xchg
adc
scas
pop
pop
dec
enter
not
sahf
jge
add
fimull
in
xor
sub
push
xor
cmp
pop
in
cmp
outsb
mov
hlt
aad
cmpsb
cmp
mov
sub
jp
gs
bswap
jno
das
rorl
stos
nop
mov
out
jge
int
or
imull
pop
dec
outsl
in
insl
daa
jae
ret
pop
pop
xorl
sahf
or
xchg
inc
nop
loopne
lret
mov
and
dec
je
mov
xor
xor
cmc
adc
stos
clc
push
mov
adc
daa
push
les
movsl
cmc
pop
clc
cmpsl
sub
sub
loope
jecxz
xor
dec
into
dec
gs
popf
fs
inc
adc
leave
scas
repnz
sbb
dec
int3
lahf
out
leave
cmp
xchg
pusha
clc
icebp
adc
add
call
jg
add
jmp
add
clc
fwait
adc
ljmp
xchg
sub
xchg
push
cmpsl
clc
mov
hlt
jmp
es
data16
clc
pop
cli
xchg
or
clc
addb
pop
aad
adc
add
dec
or
xchg
mov
sub
nop
mov
jg
mov
clc
test
aas
outsb
xchg
cmp
loope
xor
rclb
shrb
out
sbb
sbb
addr16
clc
add
pop
int3
dec
dec
jmp
jl
lea
clc
adc
push
clc
enter
pop
dec
incb
sbb
clc
xchg
ja
pop
dec
lcall
mov
push
push
mov
push
enter
rorb
pop
dec
xor
lcall
xchg
loopne
cmpsl
xlat
sbb
test
shr
pop
and
jne
pop
arpl
mov
jmp
push
es
out
pop
adc
and
mov
cmp
sbb
ret
push
push
xchg
or
into
dec
jecxz
test
push
add
in
loop
add
stc
rcrb
ja
fstpt
gs
dec
add
out
pop
cmp
dec
pusha
xor
fs
inc
jmp
xor
sub
popa
jns
inc
cli
std
cmpsb
inc
sub
hlt
outsl
pop
cmpsb
test
aam
outsl
xchg
xor
ja
push
xorl
out
adc
inc
and
in
decb
xchg
inc
stc
test
ret
inc
add
cltd
xchg
and
xchg
movsl
cmp
adc
push
mov
stc
add
imul
imul
aam
js
imul
pop
jl
sarb
lods
add
stc
insl
adc
scas
jl
sar
ds
dec
xlat
and
pop
add
loope
jecxz
test
mov
cltd
loopne
xchg
push
push
adc
jg
andb
add
push
stc
je
cltd
iret
pop
mov
stc
insl
xlat
ljmp
in
pop
inc
jo
in
rorl
outsb
js
dec
push
sub
out
rcrl
stc
dec
push
data16
mov
sub
loopne
xor
scas
xchg
mov
mov
andb
sbbb
icebp
inc
pop
test
stc
push
or
mov
stc
add
stc
push
jo
inc
xor
ret
mov
jno
movsl
jb
cmpsl
insl
and
stc
cmc
stc
and
out
add
stc
loopne
es
cmp
mov
cli
lods
and
sbb
mov
adc
jecxz
mov
rclb
and
cmp
pop
mov
fidivrl
push
sti
jae
std
mov
dec
in
add
test
shl
and
popf
and
nop
jo
and
arpl
inc
add
jo
sbb
cmp
outsl
insb
push
fs
fwait
jp
xchg
popa
jbe
js
popa
sbb
mov
sub
test
mov
xor
fwait
in
int3
sub
mov
pop
mov
mov
les
dec
lret
adc
scas
xor
push
dec
xor
shlb
or
cli
repz
imul
sbb
jno
push
xor
mov
or
test
jl
xchg
xchg
in
cs
mov
into
fiadds
adc
jae
push
xchg
add
popf
jmp
mov
cmc
or
cli
fwait
std
out
clc
outsb
cmpsl
out
ret
xor
outsl
pusha
mov
push
iret
icebp
mov
out
push
add
mov
cmp
mov
add
adc
cli
xor
aam
adc
in
out
pop
add
insb
and
pop
mov
cli
call
and
jp
std
in
mov
test
pop
sub
push
imul
and
pop
aad
outsb
jmp
xchg
leave
jb
sar
leave
sbb
dec
out
mov
adc
cmp
data16
adc
pop
pop
fidivrs
xchg
int
dec
xlat
sub
aas
and
or
sti
loopne
clc
sub
adc
sti
mov
out
mov
sti
arpl
push
in
xor
xor
mov
sub
push
xlat
push
inc
clc
mov
jbe
out
pop
loopne
int3
test
mov
mov
lock
roll
mov
pop
mov
addb
sbb
mov
sub
jmp
mov
xor
rclb
lock
movsb
adc
mov
pop
xor
cltd
movsl
mov
bound
push
cmpsl
xlat
in
adc
sti
sub
fildl
leave
fstpt
imul
xchg
lret
out
xchg
push
sti
inc
idivb
cmp
sub
out
jbe
xchg
call
andl
jp
rolb
dec
xor
popa
shlb
arpl
nop
sti
mov
pop
xchg
loopne
xchg
or
popf
and
and
ss
add
xchg
xor
js
xor
mov
fcom
jbe
cmp
insb
inc
mov
rcr
dec
xor
mov
mov
mov
adc
jecxz
or
daa
jg
lret
mov
jnp
dec
sbb
sti
sahf
lea
xor
push
aad
xor
lcall
mov
jns
push
push
dec
or
pop
shlb
out
adc
cld
lods
jge
xor
movsl
lods
flds
inc
pop
mov
in
dec
jns
cmp
fidivrs
mov
cwtl
mov
jmp
jns
mov
daa
and
mov
sbb
cld
sub
sub
imul
or
xchg
xchg
dec
push
sub
jmp
in
cmp
out
push
fwait
push
mov
arpl
lock
push
rcl
xor
dec
movsl
or
pop
lea
pop
push
out
jecxz
adc
and
mov
jb
sbb
repz
cld
mov
aad
xchg
fmul
inc
into
push
mov
sbb
add
mov
push
push
jg
jp
cmpsb
pusha
in
and
cmp
es
loopne
mov
cld
cmp
int3
add
movsb
cmp
out
leave
dec
test
rorl
arpl
stos
cmp
in
cs
sbb
lods
inc
and
cmp
iret
jo
insb
loopne
enter
mov
lock
loopne
xor
enter
and
cli
decl
mov
and
mov
jns
enter
insb
lahf
sbb
popa
fsts
cld
mov
cld
shlb
mull
mov
dec
std
sti
imul
cld
and
jae
mov
lcall
inc
iret
sub
cmp
call
inc
or
std
call
iret
cwtl
add
cmp
insb
les
call
bound
mov
repz
mov
loop
das
sbb
std
sbb
es
jbe
test
test
or
rcrl
shll
loop
pop
and
jg
mov
ljmp
ret
into
loope
cmpsl
push
jbe
dec
aam
cmp
ljmp
pop
mov
sub
pop
movsl
pop
jno
adc
out
ja
adc
inc
nop
xor
or
ds
out
push
inc
sub
scas
jbe
mov
movsb
add
leave
ss
es
cmpl
inc
std
xchg
rcl
cwtl
loopne
std
fmuls
stos
mov
int
les
mov
insb
jge
push
pop
cmc
pop
lods
roll
outsb
xchg
mov
push
push
iret
out
stos
push
enter
pop
push
and
dec
gs
dec
push
xchg
leave
mov
pop
dec
loopne
mov
enter
push
mov
cli
inc
pusha
cs
and
bound
ret
mov
mov
sub
cltd
stos
jnp
xchg
xchg
cmp
xlat
rclb
stc
adc
mov
popa
mov
dec
lea
jo
shll
adc
bound
clc
popa
inc
lahf
sbb
xchg
hlt
sbb
jmp
inc
cli
pop
cmp
add
std
jne
jbe
mov
cmpsb
dec
pop
mov
push
out
hlt
xchg
adc
repz
arpl
inc
xor
mov
cmp
fistpl
loopne
xchg
or
scas
inc
sbb
incb
xchg
nop
sti
shlb
xlat
and
outsl
ljmp
pushf
push
dec
jle
ret
mov
scas
shlb
jmp
mov
insl
mov
inc
aad
pusha
imul
sub
or
das
int
iret
mov
pop
cwtl
pusha
mov
fcom
es
push
arpl
dec
lret
repz
les
sbb
jo
test
xor
and
jnp
iret
fwait
xchg
mov
adc
or
loopne
lock
out
bound
mov
test
cs
and
repnz
loopne
inc
push
adc
incb
movsb
loope
rorb
push
push
inc
insl
adc
and
stc
push
fstl
jae
mov
aad
fiaddl
add
xchg
pop
dec
inc
sub
jnp
icebp
dec
xorl
sbb
jb
xor
push
and
addr16
inc
adc
add
pop
mov
pop
jge
lods
xlat
xchg
sbb
mov
sbb
imul
sub
and
icebp
mov
jg
push
dec
pop
mov
sar
sbb
pop
pushf
jo
jb
push
lahf
cmp
pop
jmp
jecxz
sub
jmp
rorb
mov
test
popa
inc
cmpsb
push
cltd
ja
int3
stc
cmp
inc
lea
mov
lea
mov
pushl
incl
ficoms
hlt
push
jmp
push
push
dec
cltd
mov
fisubrs
xor
adc
and
inc
imul
aam
aas
jl
daa
and
dec
sub
cmp
and
rcll
hlt
pop
aas
jle
cmc
out
xlat
test
dec
mov
lock
pop
fisubrs
cmp
shll
mov
add
jl
dec
lea
std
and
sub
sub
loope
mov
cld
jp
jnp
adc
or
leave
add
jmp
add
push
call
jno
cld
pop
ret
xchg
outsb
mov
std
sbb
scas
push
js
adc
repnz
in
out
imul
pushf
sar
pushf
cmp
inc
cs
push
popf
jo
sbb
sar
sti
daa
mov
rclb
mov
sub
xlat
or
ljmp
cmp
push
sbb
or
insb
jno
xor
jae
push
or
lods
gs
mov
insb
fs
stos
lods
leave
jg
pop
sbb
fcoms
inc
call
and
fidivrl
ljmp
pop
cltd
sbb
dec
add
dec
pop
or
ljmp
loop
fwait
push
ud0
rcrl
jns
in
adc
pop
lods
int3
mov
mov
enter
jle
loop
pop
xchg
add
inc
mov
cmp
jp
pop
jmp
jge
pop
or
sbb
add
mov
mov
andl
ret
out
rcl
shlb
fcompl
rolb
iret
sub
mov
dec
mov
add
add
sub
inc
outsb
cmp
jne
xor
cmp
pop
int
jns
iret
jbe
xchg
lcall
cmc
cmp
test
nop
add
test
jecxz
rorl
xchg
rolb
daa
shll
out
jmp
add
les
outsb
pop
xchg
test
mov
imul
pop
push
xor
cmp
inc
add
mov
cmc
mov
lret
and
xor
mov
jb
cmp
adc
test
adc
ds
add
push
aaa
sti
add
ljmp
add
imul
insl
xor
rorl
addr16
mov
push
rclb
sbb
cmp
in
mov
cmp
mov
outsb
call
imul
add
lret
arpl
sbb
add
xor
in
call
lods
xor
pop
and
push
add
fidivl
daa
pop
push
adc
sbb
popf
test
bound
outsl
scas
scas
sbb
cs
jmp
mov
pop
movsl
in
out
fs
jl
rolb
mov
and
fs
fs
loope
push
sub
xchg
cltd
loopne
bound
add
outsb
cs
add
add
ds
mov
push
lret
rcrl
ret
mov
jo
jge
jle
xor
adc
jmp
mov
xor
and
or
add
or
push
mull
pop
insb
mov
cs
pop
fisttps
adc
fadd
xor
mov
xchg
pop
enter
add
pop
stos
mov
sbb
cwtl
push
add
or
or
stos
call
cmp
inc
mov
cmp
pop
mov
inc
xor
nop
mov
loopne
mov
push
push
sarl
adc
inc
idivb
pop
mov
pop
push
push
arpl
mov
js
bound
mov
xchg
push
sti
loope
mov
fldl
add
add
xchg
adc
inc
push
es
rcrb
push
add
test
arpl
or
inc
push
push
mov
mov
jmp
sahf
sub
pop
mov
pusha
jge
xchg
or
daa
sbb
add
inc
xchg
shll
and
scas
movsl
lea
inc
add
add
test
add
ljmp
sbb
mov
push
mov
inc
test
add
xorl
add
inc
mov
push
or
add
out
inc
test
aam
jne
lock
add
adc
cmpl
jo
scas
pop
jmp
cld
lods
add
int
mov
add
dec
lods
mov
jns
outsl
add
add
das
mov
cs
std
xchg
add
andb
mov
add
jl
das
mov
jns
mov
xor
addb
fimuls
push
mov
jo
pop
sahf
jge
repnz
add
add
ret
jg
jns
ds
and
cltd
jge
inc
cmp
call
inc
add
ja
sti
jp
jg
dec
rol
arpl
mov
xchg
jns
cmpsl
xchg
or
rolb
outsl
cmc
lret
adc
in
negl
aam
fwait
inc
mull
jnp
inc
pop
or
add
test
leave
insl
test
add
pop
cs
xchg
adc
rolb
mov
shll
pop
into
jae
mov
and
test
lret
pop
mov
ja
ret
mov
nop
add
je
in
mov
mov
add
jge
loope
adc
nop
and
push
mov
in
add
inc
mov
mov
push
pop
sti
popf
inc
mov
popa
cwtl
pusha
add
fldenv
cltd
push
and
fs
testl
into
sahf
fildll
pop
cli
decb
rolb
sub
nop
add
sarl
stos
lret
mov
push
dec
push
inc
lods
lock
push
ficoms
mov
inc
add
cmc
mov
add
mov
xchg
push
cs
mov
int3
leave
mov
cmpb
push
add
push
mov
adc
lahf
in
pop
inc
rclb
ret
inc
inc
std
xchg
and
iret
lea
les
push
xor
fsubp
or
add
bound
scas
push
xchg
dec
data16
insl
jl
stos
cld
es
loop
lcall
lods
idivl
std
aam
push
mov
clc
out
jmp
mov
les
add
repz
adc
add
hlt
nop
and
repnz
jne
outsb
test
push
jns
xchg
sbb
mov
sbb
xchg
mov
jecxz
dec
adc
int
jno
nop
add
scas
aas
in
cld
pop
mov
sub
add
add
add
js
sub
xor
add
popa
js
jne
pop
scas
pop
jb
fucomp
jns
or
add
push
daa
sub
push
leave
aas
sub
add
xchg
sti
aad
or
sarl
push
add
xlat
adc
xor
xchg
andb
enter
xor
jmp
mov
aad
sub
inc
jne
movl
insb
mov
fs
int
iret
xor
cmc
xor
adc
xchg
push
in
pushf
mov
xchg
sub
push
dec
add
add
jno
adc
xchg
adc
push
add
insl
or
xchg
xchg
iret
mov
or
add
or
lds
ss
addr16
ret
push
cltd
cmp
into
inc
pop
jmp
ds
add
aaa
imul
shlb
mov
add
or
out
movsb
shlb
pop
add
daa
mov
mov
add
insb
push
lods
push
outsb
mov
outsb
or
mov
arpl
dec
outsl
jo
test
into
insb
insb
lret
dec
subl
pop
movsl
rcrl
adc
es
mov
mov
dec
scas
push
xchg
gs
shrl
loopne
cmp
fistps
inc
mov
fyl2x
pop
jg
out
pop
push
xchg
dec
push
sub
inc
mov
adc
xchg
mov
ret
jae
mov
aad
sbb
add
add
ja
cmpsl
inc
mov
push
and
xchg
cmpl
popf
add
add
scas
fnstcw
xorl
in
jo
jge
push
lcall
sub
sub
cmp
shrb
out
add
ljmp
fcompl
mov
sarb
popf
push
lods
jl
cmp
inc
sbb
add
jecxz
cmpsb
mov
adc
adc
sbb
add
and
repnz
into
inc
lahf
out
dec
and
repnz
dec
jecxz
pop
sbb
mov
add
jmp
leave
and
jp
decl
dec
test
pop
out
ds
lods
push
mov
cwtl
adc
sbb
add
cs
ret
push
dec
push
mov
pop
mov
push
and
outsl
mov
fidivl
xchg
hlt
jno
pop
sar
scas
push
push
jl
cmp
mov
add
sub
inc
xchg
jo
cmpsb
loope
into
sbb
jb
cmp
decl
and
pop
loope
test
and
dec
xchg
mov
loopne
cmp
pop
cmpsb
mov
pop
outsl
push
or
jmp
pop
or
scas
out
or
and
add
addl
add
xor
faddl
rolb
dec
sub
scas
imul
xor
add
loope
sub
xor
push
int
mov
jo
xchg
rolb
and
adc
dec
daa
inc
dec
cwtl
xor
or
pusha
aad
sbb
data16
jb
fcoml
cs
pop
ss
cwtl
rolb
lret
repz
scas
fsubrl
mov
mov
les
sub
xor
insb
test
ret
cmp
fdiv
adc
mov
push
jmp
mov
shr
rolb
leave
idiv
sub
sbb
addb
xor
dec
aam
xchg
arpl
mov
add
movsb
lds
mov
rolb
adc
xchg
and
sbb
aad
cli
or
push
adc
mov
jecxz
out
pop
les
xchg
sub
rolb
xchg
inc
lods
ss
jbe
add
mov
cli
sbb
xor
loopne
adc
push
sbb
push
outsl
inc
push
dec
movsb
mov
jle
push
push
adc
popa
pop
outsb
pop
cmp
rolb
insl
stos
mov
dec
bound
loop
imul
lock
lds
lcall
sub
jb
mov
mov
pushfw
and
inc
insb
sbb
sub
out
andw
mov
rolb
pop
scas
jns
pop
inc
xor
adc
push
jmp
adc
xor
pop
xchg
inc
scas
mov
jge
jbe
rorl
and
mov
mov
stos
dec
dec
push
mov
and
xchg
xor
dec
dec
push
inc
adc
push
into
lcall
push
xchg
push
rol
sbb
lcall
dec
dec
testl
push
addl
and
les
jns
pop
mov
mov
push
xchg
aad
adc
sub
iret
sbb
pop
insl
sarb
in
cmc
cmc
mov
test
out
call
scas
dec
lret
xchg
jo
or
pop
test
add
mov
jo
lods
test
sub
subb
and
mov
ja
or
push
xchg
inc
adc
clc
inc
mov
lret
mov
cmp
mov
xor
push
je
dec
out
nop
inc
pop
mov
inc
imul
mov
lds
ret
nop
and
jb
add
in
test
pop
push
jp
mov
mov
lret
nop
mov
mov
int
cmpsb
mov
stc
and
mov
testl
push
sbb
rcll
cmp
jno
fsubrl
aam
outsb
rolb
in
std
and
jecxz
push
std
add
icebp
sub
rorb
xchg
mov
je
fstpt
push
mov
cwtl
mov
daa
sti
push
add
jle
std
jne
dec
int
jns
rolb
sbb
pop
push
add
mov
push
pop
inc
loop
or
pop
ljmp
addl
ja
mov
push
pop
push
std
dec
push
pop
xchg
fxch
loopne
in
jle
ret
pop
dec
cli
xchg
rolb
inc
inc
or
add
mov
test
inc
xchg
cmp
sti
mov
repz
pop
push
or
das
push
inc
mov
jmp
xchg
and
lcall
jb
ret
popa
pop
aaa
cmp
orb
rorb
out
xchg
int
jno
mov
push
pop
icebp
insb
cmpsb
les
xchg
bound
cmpb
outsb
shll
dec
inc
push
push
sub
dec
arpl
mov
cmp
jns
inc
sbb
cwtl
push
or
ficoms
cli
sbb
or
sub
sub
sub
or
or
iret
pop
and
push
sarl
clc
leave
mov
lds
xor
insl
mov
xor
xor
cmpsl
fcomp
mov
or
fildl
incb
pop
jl
jns
dec
enter
or
movsb
inc
mov
push
sub
or
cmpsl
stos
push
mov
popl
or
clc
stc
sbb
or
stc
mov
adc
std
imul
inc
mov
jle
pop
fsubs
sarl
jb
sbb
lret
sbb
or
mov
push
in
mov
aas
pop
jmp
xchg
popa
arpl
or
out
push
and
into
xlat
sbb
or
icebp
ficompl
jnp
add
cmovbe
mov
inc
loopne
enter
dec
xor
jnp
adc
stos
pushf
rorb
in
jg
lods
aad
divl
sahf
jp
pop
pop
test
or
and
or
or
xchg
outsl
repnz
inc
jge
sarb
icebp
movsl
aad
jp
inc
out
add
repnz
adc
push
mov
inc
test
arpl
test
pushf
mov
mov
jne
jmp
gs
movsl
xchg
insl
call
cltd
add
or
push
daa
sbb
fidivrl
adc
xchg
sbbl
xlat
sub
loopne
pop
lock
adc
jnp
les
jne
dec
adc
ljmp
mov
cmp
xor
push
mov
mov
add
or
pop
inc
add
lret
je
les
adc
or
xchg
xchg
push
rorl
jne
inc
or
or
or
loope
cmpsb
add
xchg
mov
xlat
pop
sbb
jmp
lds
mov
jns
mov
rorb
repz
cmpsb
push
or
mov
test
xchg
add
or
adc
cmp
pop
cmp
and
in
cmp
das
cld
adc
cltd
adc
cmp
sub
dec
cmp
xor
xor
mov
pushf
rorb
sub
or
or
pop
add
mov
mov
in
add
sbb
push
xchg
cld
pop
inc
and
fists
inc
cmp
ljmp
jl
test
ret
int3
mulb
jg
push
xchg
hlt
cli
mov
sar
mov
enter
or
aad
pop
insb
jnp
popf
jp
loop
loopne
cmc
cmpsl
insb
fistpll
mov
in
inc
test
sub
addr16
in
lea
aam
cltd
iret
dec
aas
into
int
addr16
or
inc
lahf
popf
xchg
mov
in
mov
es
mov
mov
push
popa
dec
xchg
out
sbb
repnz
int3
jl
dec
gs
lea
xchg
xchg
out
cwtl
jo
test
inc
pop
das
inc
or
push
cmpsl
sub
stc
iret
dec
inc
and
xor
insb
mov
mov
cld
mov
inc
add
inc
data16
jmp
iret
fsts
add
lock
xchg
jne
das
sbb
out
sbbb
push
xchg
jb
imul
dec
sub
cmpsl
push
bswap
and
aad
inc
mov
sbb
jp
mov
ret
push
test
or
repz
sub
and
jge
inc
sti
stc
repz
and
test
cmpb
out
jne
dec
lea
je
fadd
lds
push
insb
jne
in
xor
push
movsl
scas
gs
les
lahf
pop
cmpsl
outsl
cmp
nop
or
add
xor
in
lret
roll
mov
cmp
in
mov
enter
or
xor
dec
push
sbb
call
and
cmp
shll
rorb
jbe
lea
jns
push
cmp
push
outsl
lock
outsl
xchg
xor
or
or
rorl
inc
or
and
int
xor
das
icebp
push
cmp
nop
or
and
mov
or
or
or
jno
and
xchg
xchg
jnp
push
aas
sbb
xor
aas
cs
xchg
je
mov
push
adcl
xor
scas
loope
rorb
sarb
mov
cwtl
add
xor
push
jg
lret
cmp
add
cmp
pop
mov
jp
xor
and
daa
out
out
pop
add
fisttpl
aam
leave
mov
cmp
fdivs
push
and
sbb
jb
add
loop
ja
mov
daa
call
cmpsb
or
xor
pop
pop
mov
add
loopne
mov
mov
xchg
jmp
arpl
xor
sub
mov
scas
in
notl
mov
data16
sbb
xor
gs
adc
loop
enter
xor
xchg
out
pusha
mov
or
or
les
aaa
cmp
adcb
mov
or
push
scas
les
cmp
xor
adc
add
lret
out
orb
rorb
and
icebp
sbb
or
jg
inc
jg
lds
mov
dec
leave
fidivrl
sahf
dec
das
and
mov
call
xchg
xchg
sbb
or
add
and
fldt
xlat
repz
mov
or
or
pushf
rorb
xor
push
aas
sbb
mov
jbe
xor
add
or
fcompl
lock
xchg
jb
xchg
shlb
lea
cmp
loopne
gs
push
fs
rolb
push
ss
nop
and
jne
push
or
mov
in
call
hlt
jmp
xor
pop
xchg
mov
jae
jo
jmp
jge
jge
adc
sar
add
or
sub
ret
or
or
flds
pop
gs
sbb
movsb
loop
push
or
push
dec
cld
sub
sub
pushf
add
xchg
xchg
mov
or
push
xchg
sub
daa
and
or
aad
add
or
test
stc
imul
xchg
xchg
push
jno
repz
shll
jle
daa
bnd
mov
cmp
in
shlb
outsl
jge
push
push
push
loop
mov
mov
jle
testl
and
or
or
loop
scas
push
je
nop
or
dec
daa
inc
push
push
mov
fcmove
jp
sub
pop
and
push
mov
cld
add
jmpw
push
push
push
mov
fildll
push
or
or
pop
icebp
rcl
outsb
std
add
pop
sbb
pop
bound
push
fbld
xchg
add
adc
xchg
mov
push
loope
push
fistl
inc
rcrl
ficoms
pop
jno
repnz
outsb
mov
aaa
sub
ret
mov
rol
mov
or
lahf
adc
xor
jo
sub
ss
cltd
adc
or
ret
jbe
sub
mov
push
cmc
insl
xor
and
jnp
dec
gs
pop
or
aam
sub
or
or
adc
pop
and
mov
and
das
fldl
mov
inc
in
cmp
xchg
mov
inc
mov
adc
xrelease
jo
adc
or
cmp
xchg
loop
cmpsb
lahf
xor
add
jmp
sub
sbbl
inc
or
dec
sub
rorb
aad
pop
sbbw
add
or
scas
xchg
scas
and
mov
and
sbb
iret
scas
in
in
and
bound
xor
ja
stos
movsb
push
push
pop
mov
or
stos
out
push
cld
mov
in
test
int3
repnz
mov
pcmpgtw
pop
stos
jnp
mov
out
rorb
pop
adc
add
or
leave
mov
mov
cmp
bnd
jge
cmc
mov
dec
lcall
orb
insl
cmpsl
inc
rorl
repz
out
movsb
mov
mov
andl
loop
mov
mov
sbb
push
lcall
and
sub
out
xchg
jo
sbb
push
ss
rclb
scas
and
pop
mov
scas
inc
or
pop
mov
push
mov
push
jae
and
ds
push
pop
mov
jb
shl
ds
and
nop
push
xchg
sar
sar
sbb
and
push
mov
or
fisubrl
dec
mov
cmpsb
popf
loope
dec
pop
or
push
add
mov
add
out
sarl
cmpsl
bound
inc
xchg
jbe
xchg
jo
cmpsl
jo
pop
pop
arpl
sahf
mov
mov
outsb
xchg
adc
push
lock
xchg
push
incb
icebp
out
js
cmpsb
inc
stc
nop
nop
push
out
mov
push
shll
clc
sbb
rcr
loop
lock
shrb
int3
pop
inc
ja
into
pop
es
sbbl
ss
push
bound
xchg
or
pop
imul
jg
mov
subl
xor
loop
lock
xchg
lcall
cltd
cmp
add
clc
cmp
push
popa
push
out
inc
sub
test
imull
cwtl
jo
mov
mov
jecxz
stos
cld
pop
fildl
dec
roll
enter
push
jo
insb
push
pcmpeqw
fcoml
pusha
das
mov
pmuludq
ret
pusha
insl
or
push
pop
xor
mov
sbb
jo
aas
add
push
popf
stc
sbb
icebp
mov
adc
sub
aam
insb
push
daa
and
push
enter
mov
add
frstor
shl
inc
test
push
add
pop
xchg
fadds
and
popa
nop
loopne
sbb
loope
pop
cmc
popa
loopne
mov
or
cvttps2pi
pop
lret
dec
call
and
fdivrl
sub
xchg
nop
jns
mov
cmp
pushf
inc
ud1
inc
inc
mov
jne
out
mov
cmc
pusha
popf
jg
mov
mov
mov
pcmpeqb
lahf
lods
ss
jg
cmp
mov
lock
rol
jle
cmp
iret
ljmp
cmp
ds
clc
aas
push
test
lock
and
ja
cmp
cld
pusha
pop
mov
xor
enter
adc
mov
fimuls
jo
test
adc
clc
fsubrs
and
ret
loopne
adc
aam
dec
sub
sbb
fisubl
in
out
sahf
and
nop
psraw
add
mov
cld
xor
add
jecxz
and
cmp
cmp
or
fisubrl
cmp
adc
xchg
je
add
adc
lret
or
inc
xchg
dec
test
mov
mov
out
iret
cmp
xor
adc
aas
push
mov
daa
adc
xchg
popa
insl
push
pop
arpl
sbb
adc
sti
mov
and
mov
rclb
sbb
sub
pushf
rclb
dec
in
das
jae
jbe
adc
negl
imul
js
and
jo
dec
loopne
xchg
xchg
imul
xor
in
or
mov
adc
stos
insb
mov
push
adc
adc
movsb
dec
cmp
lahf
fsubr
int
aam
mov
fsub
hlt
enter
xlat
lods
xor
shll
dec
mov
js
mov
mov
adc
repnz
ret
repz
stos
inc
pop
and
jns
fistpll
testb
jns
mov
adc
les
dec
cltd
mov
cmpsl
inc
cmpsl
push
gs
xor
mov
rcrl
dec
adc
pop
inc
mov
movsl
pusha
dec
ficoml
sahf
scas
jecxz
outsb
in
add
push
lods
sbb
dec
lock
adc
adc
sbb
mov
mov
addr16
adc
loop
mov
sbb
adc
dec
pop
push
test
adc
ja
repz
sbb
mov
addr16
fwait
in
mov
dec
sti
cmp
jge
loopne
adc
cmc
jg
or
adc
ss
sbb
dec
push
cmpsb
rcrl
aas
sub
mov
into
rclb
xchg
jno
add
adc
cltd
and
jae
cmp
loopne
shl
xchg
pusha
mov
jp
xor
sub
pop
xor
xor
es
sbb
pop
sbb
mov
or
scas
push
dec
popf
in
mov
bound
adc
or
es
sub
popa
xchg
add
jne
inc
inc
daa
add
loopne
out
mov
jns
loop
push
mov
mov
or
sub
add
mov
les
into
xor
jle
call
sub
adc
mov
push
and
imul
lock
divb
push
adc
dec
jge
rcrl
jmp
or
adc
push
and
hlt
push
jp
iret
jo
sbb
cltd
mov
push
lock
je
jbe
jl
in
into
and
out
rcrb
mov
rclb
add
adc
rol
sbb
dec
push
lret
xlat
xchg
pop
dec
pop
les
push
adc
jmp
dec
jl
mov
rclb
cmp
add
push
pushf
adcb
push
push
mov
test
adc
cmc
cmpsl
jb
mov
imul
pop
movsb
in
jns
mov
pop
dec
shll
inc
pop
push
popa
cld
sub
jo
mov
imul
cmp
push
in
adc
xchg
call
aas
add
dec
dec
sub
iret
aaa
ljmp
adc
inc
adc
dec
inc
pushf
loopne
clc
jno
adc
daa
and
mov
lcall
pop
outsb
mov
push
mov
push
fwait
aad
fcomps
mov
inc
cmc
nop
jo
mov
out
cld
sub
or
mov
inc
loop
mov
pop
out
test
aaa
outsb
add
pop
ret
jns
in
in
mov
dec
and
rclb
sbb
adc
jb
mov
andb
out
sub
nop
adc
sti
mov
mov
or
lcall
aad
daa
popf
popa
icebp
cmp
push
sahf
stc
adc
adc
ljmp
aas
dec
pop
dec
add
xor
mov
jo
cmpl
push
dec
repz
adc
xlat
mov
adc
xchg
mov
in
addr16
xor
subl
test
jmp
push
add
pop
stos
xor
in
xor
adc
xchg
rclb
cli
push
sub
les
jo
mov
scas
dec
lods
sub
xor
xchg
pop
sub
and
aam
lds
jle
stos
cltd
in
cmp
xorl
hlt
dec
pop
mov
jae
test
flds
pop
addr16
stos
fcoms
notl
loop
test
inc
xorl
xchg
xchg
sub
inc
adc
stos
pop
rcrb
call
sub
push
gs
adc
and
mov
adc
xchg
aad
shrl
mov
rclb
push
pop
jno
inc
push
xchg
int3
jae
fmulp
bound
cmp
aad
and
inc
mov
lds
jp
mov
push
iret
repz
popa
mov
mov
stc
add
daa
sbb
adc
cmpsb
jecxz
pop
add
sub
cltd
jns
sbb
xchg
xor
mov
mov
sub
shlb
int
xchg
loopne
sub
sbb
adc
pop
dec
imul
or
adc
ficompl
mov
push
or
nop
xor
movsl
dec
hlt
popf
xchg
setns
add
jb
nop
adcb
mov
clc
je
jecxz
push
pop
loopne
pusha
adc
jge
push
adc
out
stos
and
mov
dec
lods
or
adc
iret
addr16
push
ss
pop
insl
sbb
dec
or
mov
imul
pop
testl
add
add
rclb
xor
sti
dec
loope
inc
and
dec
fstp
rcrb
inc
pop
jecxz
and
data16
mov
jae
test
sbb
fiaddl
mov
mov
and
xchg
sti
nop
adc
cmpb
notb
je
mov
jno
insl
sbb
mov
cld
les
insl
xchg
clc
test
dec
out
dec
jecxz
xor
shl
dec
mov
inc
inc
nop
mov
push
push
cwtl
mov
ret
shrl
adc
push
adc
out
or
adc
mov
sahf
fs
adc
xchg
add
loop
outsb
sub
pusha
xchg
popl
sbb
adc
icebp
lea
push
adc
mov
adcb
xor
add
push
nop
mov
fsubrl
icebp
xchg
dec
add
shrb
shlb
pop
sub
test
pop
xchg
pop
jnp
mov
push
adc
xchg
adc
lret
add
mov
or
adc
adc
mov
adc
jnp
mov
arpl
cmc
xchg
insb
jmp
int
test
dec
test
cmp
out
arpl
xlat
aam
loopne
jne
sldt
in
and
cmp
and
jne
push
in
mov
insb
sarb
aaa
xor
dec
add
add
and
movsb
cmp
shl
inc
lea
jp
or
adc
imul
and
jo
push
lret
adc
and
cmp
das
push
fisttps
fdivr
loope
sub
ret
outsb
cmp
bound
cmp
fidivl
mov
mov
jns
scas
and
stos
rcrb
mov
adc
mov
les
xchg
dec
sbb
push
add
cwtl
nop
adc
push
xor
imul
out
jo
mov
dec
repnz
jbe
lods
mov
cltd
aad
mov
dec
ss
rol
jp,pn
push
nop
adcb
push
ret
daa
jns
ficomps
push
js
aam
jo
and
andb
sti
inc
in
sarb
out
pop
stos
mov
mov
and
inc
out
fwait
xchg
push
out
lock
inc
call
adc
les
dec
ja
popa
sbb
cmc
and
in
push
pop
xor
xor
leave
fstpt
in
and
xor
mov
mov
mov
adc
xchg
inc
test
dec
rorb
adc
or
out
sub
out
mov
repnz
out
fyl2xp1
adc
pushf
inc
adc
cmpsb
lret
mov
dec
aam
xchg
sbb
mov
pop
pop
ja
ja
or
adc
xor
jecxz
mov
jp
mov
xor
inc
cmp
or
push
cmp
jo
test
imul
test
or
add
push
xor
push
xchg
sbb
lock
push
mov
cmp
icebp
into
jmp
fwait
pushf
mov
xor
int
fcoml
into
dec
jge
ret
push
rclb
cmc
idivb
fnsave
pop
stos
mov
scas
cmpsl
cmp
inc
xchg
rclb
fimuls
pusha
push
and
and
pop
inc
push
cwtl
xor
mov
inc
lcall
sub
fnstsw
clc
je
out
push
xor
push
addr16
inc
js
test
mov
call
push
push
scas
fisubl
movsl
les
pop
leave
je
pop
rorb
xor
sbbl
push
fcomps
adc
fnsave
je
mov
mov
repnz
dec
imul
jo
inc
mov
daa
sbb
cmp
icebp
adc
push
repz
loopne
inc
jne
xchg
mov
arpl
lods
fnsave
sbb
sub
and
push
jmp
fdivrl
movsb
sub
dec
jo
and
add
push
adc
mov
pop
jp
jno
push
fsubl
aad
mov
mov
mov
bound
push
call
xchg
push
mov
lahf
push
aaa
jbe
add
mov
or
popf
jbe
push
movsl
mov
mov
xchg
fsubrl
xor
clc
outsl
adc
xor
xchg
cmp
loopne
dec
or
lods
les
mov
cmp
or
cmp
jnp
xor
pop
and
push
xadd
add
pop
mov
jbe
jo
mov
push
mov
rcrb
xchg
fmul
jmp
sub
jl
add
jp
std
push
sub
mov
mov
loopne
jle
cwtl
adc
mov
sbb
pop
mov
xchg
negb
inc
incl
pushf
mov
ret
aam
and
mov
bound
mov
bound
decl
sbb
pop
xchg
loopne
adc
adc
sub
stos
xor
or
xchg
mov
mov
or
fdivrs
les
sub
push
fildl
jno
jle
sbb
hlt
lea
roll
adcb
pusha
sub
xchg
mov
ds
cs
dec
sbb
pop
mov
sbb
pop
dec
xor
inc
xor
ret
ds
xchg
lock
mov
daa
pop
in
jno
cmp
add
pop
daa
sbb
dec
cld
loopne
mov
cs
cwtl
nop
pop
pushf
loopne
js
mov
pop
pop
mov
lcall
test
inc
or
iret
xor
pop
and
mov
sbb
or
ljmp
mov
and
faddl
sbb
scas
test
sbb
popa
lcall
arpl
inc
loopne
fwait
pop
xor
in
imull
xchg
pop
stos
and
mov
xor
and
pusha
icebp
popa
je
push
scas
dec
mov
cltd
lret
push
loope
test
leave
cmp
mov
inc
mov
insl
lds
nop
sbb
sbb
rcrb
adc
out
mov
mov
and
fldl
dec
fisttps
in
ret
into
jno
adc
or
int3
fistpll
jle
adc
sbb
inc
sub
dec
mov
lods
aam
pop
mov
sub
sub
adc
enter
cmp
lret
and
loope
arpl
lret
mov
jge
cltd
or
aaa
popa
outsl
xchg
mov
jae
mov
xchg
xchg
aad
adc
xchg
push
sbb
cld
aas
das
cltd
cmp
lret
pop
out
test
jecxz
push
pop
popl
cs
inc
in
data16
sbb
icebp
cmc
shlb
inc
xchg
inc
jae
shr
imul
pop
jne
ss
fbstp
cmpsl
insl
xor
lock
xchg
push
and
xorl
repz
push
sbb
jae
outsl
mov
xchg
mov
cltd
pop
test
sbb
shl
mov
inc
sub
jo
mov
imul
flds
push
aas
dec
fistps
testb
jle
add
cltd
jno
or
xchg
cmpsb
and
fmuls
add
sbb
nop
mov
inc
ret
mov
aad
mov
dec
pushf
nop
sbb
pop
push
xchg
mov
push
addl
xchg
mov
jl
das
jmp
into
and
cmp
shlb
inc
outsl
cwtl
mov
rcrb
sbb
gs
insl
shl
adc
mov
lret
jnp
fiaddl
icebp
imul
dec
adc
loop
add
sbb
sub
or
mov
dec
addb
sbb
push
push
rcrl
test
sbb
inc
sbb
mov
sbb
push
jmp
rcrb
pop
xor
lock
das
jbe
mov
inc
popa
insb
mov
je
mov
aad
cld
lds
je
pop
sahf
push
mov
pop
stos
mov
sbb
popf
inc
mov
xchg
mov
test
sbb
inc
imul
fistps
cmp
mov
notl
adc
add
or
arpl
pop
pushf
lock
sub
cli
jnp
ss
sbb
mov
inc
push
data16
sbbl
fisttps
push
movsb
into
dec
cmp
add
sbb
lods
add
sbb
scas
pop
jmp
sbb
pop
inc
movsl
xchg
and
push
out
push
sbb
std
xchg
ja
lea
rcrb
cmc
scas
inc
out
leave
mov
rcrb
and
lock
js
outsl
pop
mov
loopne
jne
xor
lahf
and
pop
inc
fucomp
dec
fdivr
and
or
sbb
in
pop
jl
cld
dec
inc
repz
xor
mov
repz
dec
xlat
shll
pop
sbb
inc
add
ja
shrb
shlb
push
mov
mov
nop
jo
outsl
lcall
lret
sbb
lods
in
rol
push
shrb
pop
mov
rcl
mov
inc
jno
je
and
dec
test
movsl
mov
jmp
xchg
jns
inc
sbb
jno
jp
repnz
test
sbb
pop
jge
scas
sub
bound
pusha
sbb
jae
negb
add
shrl
imul
mov
jns
and
inc
hlt
cmpsl
xchg
outsl
inc
stos
adc
in
aaa
cmp
incb
or
rcrl
in
dec
out
and
loop
sbb
sbb
lea
mov
sbb
icebp
mov
insl
test
sbb
pop
xchg
testb
sbb
clc
adc
sbb
mov
add
or
sbb
jbe
scas
xchg
pop
add
roll
xor
mov
cmp
loopne
sbb
jno
test
cld
aad
lret
ret
jbe
dec
pop
fld
std
insl
enter
and
sbb
divl
test
popa
rclb
push
sbb
sbb
pusha
out
cwtl
mov
dec
out
es
sbb
sar
in
ljmp
jmp
adc
mov
xchg
pusha
inc
xchg
xchg
sbb
mov
pop
out
iret
add
sbb
sti
or
insw
es
scas
and
addr16
xchg
call
test
sbb
lock
or
jbe
fdivrs
sbbb
scas
in
dec
pop
jb
jl
jb
ds
mov
je
adc
and
stos
mov
lods
mov
dec
popf
push
das
inc
mov
sub
xor
mov
add
sub
lahf
mov
cs
add
sbb
movsl
mov
jl
sbb
pushf
nop
sbb
push
sbb
mov
pusha
sbb
subl
sbb
lock
pop
subl
mov
rcll
push
xchg
call
lea
cmp
clc
push
inc
or
shll
nop
push
sbb
mov
sub
lds
jle
test
or
mov
jae
xchg
cwtl
xor
mov
test
cmp
jae
loop
iret
or
sbb
lock
call
cmc
movsb
aas
sub
xchg
push
push
movb
push
call
stos
sbb
mov
xchg
push
js
cli
jno
sbb
fdivrs
jno
jo
movsb
gs
shll
stos
daa
add
lahf
xchg
aad
sti
lret
rcrb
pop
fdivrs
jg
aaa
sub
fldcw
and
stos
leave
icebp
pop
int
adc
or
lret
sqrtps
sbb
mov
hlt
lcall
je
xchg
jnp
cmp
xor
jo
mov
sbb
je
mov
xchg
btc
adc
dec
int3
inc
lods
test
add
sbb
sbbb
push
sbb
pop
mov
mov
repz
jmp
push
jecxz
adc
stc
das
xchg
les
into
sub
rcrb
mov
ljmp
ja
int3
adc
sbb
mov
push
in
lret
lods
leave
adc
sbb
add
sbb
inc
gs
mov
call
jg
mov
ss
add
sbb
pushf
jo
mov
sbb
sub
mov
or
loopne
sub
push
rcll
ljmp
add
sbb
mov
jmp
js
jecxz
lock
push
pop
inc
mov
xor
lcall
push
fwait
mov
and
loopne
xchg
jecxz
sub
cmp
dec
push
sbb
sbb
rcrb
sbb
lar
mov
fsts
js
dec
testl
loope
mov
lret
adc
sub
pop
dec
add
sti
sub
pop
push
mov
enter
xor
sbb
xsaveopt
lds
int
js
xlat
or
inc
sub
and
icebp
and
push
inc
mov
scas
sahf
frstor
sub
rcrb
pop
mov
and
mov
mov
lahf
xchg
fidivl
lret
ror
jne
xchg
sub
loope
aaa
dec
dec
pop
repnz
aas
mulb
mov
pop
cmp
clc
or
or
sbb
mov
out
int3
out
sub
push
aas
xor
mov
push
divl
push
jmp
insl
jle
mov
iret
fcomps
rorl
fwait
mov
insb
inc
sbb
mov
sbb
test
rcrb
in
inc
sbb
mov
sbb
inc
arpl
int3
xchg
loopne
jle
mov
ds
sbb
sbb
int
je
inc
sbb
adc
sbb
cmp
mov
mov
lock
scas
push
in
das
mov
arpl
mov
ss
xor
loope
pushf
adc
push
cmp
inc
add
cmp
lods
jno
push
mov
mov
adc
clc
es
repz
movsl
sub
pop
lods
jle
inc
cs
cmovb
dec
in
mov
stos
and
out
inc
inc
push
sub
aam
cmp
daa
and
push
sbb
sub
js
jno
mov
test
test
insb
adcl
sub
nop
push
mov
push
cwtl
xor
popa
imul
push
jne
sbb
pop
mov
pop
incl
xor
xchg
std
sbb
jne
sub
pop
lds
lds
cld
mov
sub
push
add
push
or
pop
fldl
aas
addl
ja
xor
xchg
dec
jb
mov
jae
dec
add
sbb
adc
add
mov
mov
mov
lcall
dec
adc
mov
mov
mov
push
ljmp
sbb
nop
sbbb
test
mov
repz
mov
mov
jns
and
fisubs
rcrb
inc
cwtl
nop
push
add
or
das
lret
loopne
and
ds
pop
loop
pop
jmp
add
or
jle
movsl
lea
jg
jno
xchg
jle
xor
test
inc
fsubrl
gs
addb
inc
sti
negb
or
pushl
fsts
rcrb
in
cwtl
jo
loopne
cmpsb
cmpsb
dec
add
pop
push
push
imul
push
incl
inc
xor
addr16
inc
add
pop
push
pusha
mov
addr16
mov
xor
movsl
ret
pop
mov
mov
pop
mov
popf
push
add
bound
dec
shlb
dec
dec
sub
cltd
in
sti
call
fnstenv
mov
push
inc
add
pop
aas
jle
jns
daa
pop
adc
pop
jecxz
or
adc
pop
icebp
xchg
inc
outsl
lods
ret
aaa
and
lods
test
or
cmc
testb
je
sub
jg
or
pop
out
in
mov
sbb
mov
sbb
mov
push
fnstsw
push
ficompl
sbb
mov
das
xchg
lahf
scas
xlat
out
jno
add
imul
loopne
add
pop
cmpsb
test
cmpsb
add
jmp
loope
fwait
mov
pop
data16
adc
mov
push
enter
nop
pop
pop
cmp
pop
or
jg
and
das
mov
fs
add
sbb
rolb
outsb
outsl
loope
icebp
and
sub
push
aam
ret
das
cmp
pop
push
aas
out
jno
push
mov
pop
lds
lret
out
mov
mov
leave
mov
cmpsl
dec
push
push
or
pop
xchg
ss
xor
int
xor
ud2
movsb
mov
dec
dec
add
inc
adc
pop
not
pop
mov
mov
fs
imul
and
mov
iret
inc
cltd
mov
and
mov
xor
fs
les
sahf
xchg
xor
daa
push
pop
sbbl
push
cmp
cmpsb
xchg
andb
fidivl
pushf
nop
and
pop
add
sti
push
mov
fisttps
dec
pop
xchg
pop
pop
je
or
shll
fstps
and
cli
and
ljmp
mov
and
aad
es
leave
loop
cmp
and
push
xor
lds
xchg
rorl
sbb
sub
repnz
mov
inc
inc
lods
scas
sub
jno
movb
xchg
jno
bound
xchg
adc
dec
xchg
pop
mov
pop
dec
mov
shlb
xor
xor
and
xor
jge
pop
lods
loope
lahf
mov
cwtl
loopne
movsb
cmpsl
lret
pop
out
or
xor
jle
in
ficoml
lock
ret
hlt
nop
loopne
jmp
enter
popf
mov
add
ljmp
jle
shrb
je
pop
mov
arpl
push
fiaddl
fs
and
sbb
push
enter
mov
ss
dec
add
and
sbb
in
dec
push
sub
and
jno
andl
mov
and
imul
dec
mov
jbe
aad
test
lahf
dec
sbb
adc
out
fcmovbe
sub
mov
test
cmpsl
lcall
lret
ret
cs
je
out
jnp
dec
dec
add
and
rclb
lcall
mov
xor
and
bound
int3
test
mov
seta
cmp
sub
and
shll
add
push
fidivrs
shlb
into
test
sub
nop
and
das
out
mov
cmp
into
int
mov
or
and
call
and
and
shll
dec
push
jmp
mov
and
mov
imul
lods
inc
std
xor
mov
scas
cmp
ljmp
loope
xor
xor
shlb
lret
imul
push
das
in
repz
ret
cmp
push
lods
fldz
scas
mov
sbb
inc
push
jnp
mov
lds
lcall
or
and
sbb
and
stos
jecxz
xor
adc
sbb
loope
in
inc
into
mov
divl
jle
or
sub
fists
and
mov
bound
jno
jb
setae
add
push
aam
clc
imul
and
jecxz
movsb
add
fcoms
aam
jae
loope
out
int3
cmpsb
fnclex
out
push
mov
cld
push
daa
sub
enter
mov
push
in
dec
insb
loope
mov
mov
cmp
and
xchg
imul
fs
ds
push
lret
out
inc
mov
xor
adc
and
test
xlat
out
clc
outsb
call
xchg
andb
and
lret
out
jl
test
and
inc
adc
and
test
push
xor
mov
out
mov
xor
xor
imul
sahf
mov
or
imul
adc
dec
mov
xchg
loope
outsb
ss
and
pop
dec
fstpl
rcrb
jmp
jp
clc
xchg
fwait
stos
leave
xlat
sub
popa
popl
xchg
mov
into
inc
jbe
in
mov
subl
sub
inc
clc
rcll
and
and
xor
out
or
and
inc
mov
mov
xchg
les
outsl
mov
lock
and
dec
repz
inc
jp
sbb
xchg
inc
arpl
jl,pt
mov
lahf
aas
gs
and
inc
jmp
adc
add
js
adc
and
stc
pop
cmp
sbbb
fisubs
pushf
andb
adc
and
sub
jne
fs
jmp
xor
call
mov
int
inc
sub
leave
stc
cwtl
mov
call
fistps
mov
mov
mov
leave
gs
adc
or
and
flds
pop
scas
popf
shl
divl
in
outsl
push
aam
xchg
scas
lret
pushf
jo
push
cmp
xlat
add
mov
xor
push
insb
les
cmp
nop
loopne
mov
and
and
pop
xchg
push
and
out
jl
rorb
fnsave
sbb
cld
mov
mov
aas
jae
mov
lcall
call
xchg
sub
cmpsb
je
push
das
int3
jecxz
mov
xor
shrb
jo
xchg
sub
fdivs
pop
mov
outsb
je
nop
and
push
and
fidivl
outsl
add
rcrl
inc
pop
or
xor
leave
mov
inc
orl
repnz
pusha
in
lods
ja
arpl
xchg
mov
xor
sbbl
fwait
inc
hlt
data16
in
and
imulb
push
cld
mov
stos
cmp
push
xchg
add
mov
fisubs
fildll
mov
shrl
lahf
mov
dec
jmp
pop
daa
mov
sbb
mov
imul
pusha
popa
sub
aad
mov
xchg
sub
andb
mov
aam
push
roll
ffreep
adcl
notb
mov
dec
hlt
or
jmp
cmp
icebp
mov
mov
xchg
int3
and
fiadds
dec
jnp
dec
sub
pop
jbe
fcmovbe
mov
push
aaa
jne
test
mov
nop
and
jnp
jge
iret
xchg
mov
push
int
mov
inc
test
and
dec
insb
xchg
cli
adc
repz
adc
and
push
mov
and
movsl
cld
hlt
adc
and
scas
fimuls
xor
ja
push
cmp
pop
cmpsb
cmp
cwtl
add
movsl
xlat
out
add
fsubrs
xchg
dec
inc
inc
pop
stos
mov
dec
insl
add
xchg
add
mov
mov
and
cmpsb
scas
cmp
outsl
jns
cmp
sbb
and
nop
and
or
cld
pop
fbstp
sub
adc
rcr
test
and
xor
loope
jbe
add
inc
and
lcall
daa
pop
gs
dec
sub
sub
js
mov
xchg
lsl
and
std
loop
fs
dec
or
and
xchg
cmp
dec
movsl
xorb
push
xchg
mov
mov
mov
lahf
fisttps
insl
push
jb
push
push
test
and
add
jbe
je
test
and
jecxz
xchg
je
push
adc
pusha
and
dec
push
adcb
lgs
xor
and
adcb
pop
cmp
lods
ljmp
sub
rcl
mov
pusha
and
pop
adc
and
mov
pusha
and
sti
nop
push
and
stos
call
cltd
adc
sbb
and
mov
add
loopne
cld
cmp
jo
lock
ret
mov
pop
pop
push
nop
lock
aas
int
loopne
popf
leave
std
test
aad
mov
sti
sub
stos
lret
lret
hlt
pop
rcll
ss
xor
and
pop
inc
cltd
push
mov
mov
mov
and
and
and
pop
test
out
and
push
mov
int3
adc
test
jno
cltd
cmc
out
push
repz
stos
in
push
js
xchg
rol
fstl
inc
pusha
pop
xor
jo
dec
flds
into
test
and
inc
movsb
cmc
outsl
gs
lcall
xchg
sbb
stos
mov
and
stos
imull
jmp
dec
inc
sbb
hlt
mov
shr
inc
and
outsb
sbb
je
jb
out
pop
fs
bound
pop
inc
jg
addl
daa
jecxz
call
mov
sarl
ljmp
cmpsl
pushf
shlb
shlb
xor
pusha
and
xor
pop
push
push
fidivl
test
mov
rcr
xchg
add
push
xor
jmp
test
adc
loop
inc
sbb
xchg
mov
jg
adc
es
andb
dec
cmp
jl
mov
push
pop
mov
lods
adc
push
cmp
or
repnz
outsl
sub
shrl
pop
inc
aam
cld
enter
addb
shlb
call
xadd
negl
dec
mov
push
roll
leave
insb
in
lahf
and
and
addr16
dec
inc
cli
add
loope
xor
push
lret
mov
pop
dec
mov
add
scas
xchg
pusha
add
out
aam
ja
dec
repnz
jp
jbe
mov
mov
leave
ret
scas
inc
push
mov
ret
lahf
push
popa
xchg
aaa
shrb
fdivrs
jbe
pop
pop
int
nopl
out
movsl
je
stos
aad
int
mov
xor
fists
out
inc
es
fwait
pop
testb
pop
and
stos
lret
sti
mov
fmuls
loopne
stc
addr16
push
add
jnp
inc
es
pop
push
cmp
mov
mov
cs
jb
int3
je
mov
fwait
repz
xchg
cmp
pop
mov
xlat
jne
test
sbb
lret
pushl
jmp
mov
sub
das
adc
enter
imul
mov
jb
fidivrl
pop
lea
aad
pop
lahf
xchg
aas
outsb
push
pop
pop
push
insb
mov
fdivl
dec
ja
in
cli
jae
adc
mov
xor
adc
xchg
push
sbb
enter
sbb
daa
aas
sbb
daa
sbb
jl
das
sbb
daa
loopne
jo
sub
mov
mov
insb
int
pop
mov
daa
aam
enter
daa
lock
and
cmp
xor
mov
cltd
pop
xor
dec
mov
les
add
out
scas
ds
clc
push
pop
fs
cmp
inc
adc
dec
pop
repnz
fbstp
mov
arpl
xchg
mov
mov
add
push
daa
aas
stos
test
sarb
mov
daa
lds
sti
sbb
push
xchg
dec
xchg
nop
daa
std
inc
cmpsb
out
xor
daa
cmp
or
mov
daa
repnz
cmc
push
and
pop
je
cmpl
xor
dec
into
clc
inc
sub
movl
sbb
adc
xchg
xor
push
test
pop
shll
test
dec
repnz
jne
hlt
in
jbe
movsb
ss
outsl
outsl
sarb
shr
xor
je
inc
push
cmp
push
xchg
inc
daa
xchg
push
mov
push
dec
mov
sbb
push
ss
add
fcompl
xor
daa
fildl
cmpsl
xor
test
mov
lret
in
sbb
pop
or
aaa
sti
lock
xor
xchg
mov
jmp
inc
insl
rcr
lahf
test
adc
inc
jns
sbb
adc
pusha
push
rclb
mov
jo
scas
jae
popa
xchg
scas
mov
out
adcb
addl
popa
std
adc
les
test
add
xchg
push
jp
mov
aaa
mov
fcomi
loope
movsl
inc
adc
xor
insl
aas
pushf
nop
sub
cmp
mov
sub
sbb
ja
lods
cmpsb
out
test
xchg
mov
in
insb
repz
fiaddl
cmp
fsubrp
inc
lret
imul
push
mov
pop
pop
ss
mov
cmpsl
cli
clc
xor
call
rcll
outsb
mov
or
mov
dec
and
cltd
dec
inc
popa
stos
inc
test
sub
mov
cltd
add
stc
enter
aad
push
dec
insl
lock
rol
jl
movsb
jge
lock
push
jecxz
dec
sub
adc
sub
mov
jg
fidivs
lods
pop
jbe
mov
fadds
nop
sub
cwtl
shrb
lcall
mov
lock
fstpt
mov
stc
lods
shl
cmp
dec
and
lret
call
and
loopne
rorl
dec
enter
and
into
cmp
decl
hlt
cwtl
pusha
sub
inc
imul
call
dec
fistps
sub
pop
adc
sub
pop
inc
and
sub
fadds
jae
outsb
cmc
or
inc
dec
cmpl
dec
mov
jp
push
add
out
add
cmpsl
ss
cwtl
add
adc
in
adc
push
mov
push
push
pushf
nop
sub
pop
jle
lock
cli
cmc
ficoml
imul
test
mov
jo
enter
stos
out
pop
rcrl
mov
pop
add
mov
lods
xor
arpl
call
xchg
aam
adc
shrb
dec
js
sub
mov
and
repz
lock
and
cltd
incb
xlat
mov
addl
adc
mov
mov
sarl
or
sub
sahf
imul
dec
mov
sub
fdivl
jg
loope
std
or
xor
mov
cld
or
stc
adc
out
push
mov
mov
out
mov
push
ja
dec
pop
push
jmp
push
or
add
in
adc
lds
xor
add
sub
push
jl
adc
inc
pop
test
mov
sub
adc
mov
add
cmpsb
xchg
shrb
inc
or
jle
out
rolb
cmp
fbld
call
inc
js
pop
je
jo
lret
and
filds
or
aas
imul
jne
ret
sbb
sbb
xchg
push
out
push
xor
inc
int
push
inc
push
jo
mov
mov
sub
les
insb
std
sub
jo
pop
jmp
or
mov
cmp
outsb
stos
pop
jmp
push
popf
xchg
jo
repnz
adc
push
in
jge
pop
jmp
push
or
sub
dec
xchg
into
or
jecxz
mov
xor
pop
stos
add
add
and
inc
icebp
sbb
sub
push
daa
jo
mov
inc
push
popf
add
sub
adc
and
push
jo
mov
jmp
adc
jmp
divl
dec
in
sbb
int
es
jae
insb
cmpsb
xorb
mov
shrl
push
or
scas
in
xor
pop
insb
and
cmp
add
xchg
mov
push
xchg
ja
jbe
scas
mov
sti
push
iret
push
lock
inc
push
and
gs
in
jns
rcr
insb
ds
xchg
inc
push
je
push
sub
xor
arpl
outsl
scas
inc
movl
inc
jmp
movl
into
arpl
shll
jae
adc
into
jb
rcll
mov
cmp
jns
adc
shrl
adc
sub
rcrb
jp
ficoml
jo
cmc
test
sub
test
and
and
loopne
sub
mov
or
sub
lock
push
mov
add
push
stos
cwtl
subb
fs
sub
jp
iret
test
sbb
out
and
cltd
push
mov
in
lds
adc
sub
or
push
mov
sub
sub
aaa
mov
xchg
sbb
xchg
dec
or
mov
int
imul
add
inc
sbb
add
adc
and
mov
mov
es
sub
shrl
test
dec
call
mov
jmp
sti
add
mov
sub
inc
jbe
cwtl
jo
or
sub
dec
mov
pop
push
mov
or
jbe
js
ficomps
lahf
in
imul
fstpl
sub
jg
icebp
add
jns
xchg
mov
and
sub
sbb
sbb
mov
in
jmp
test
mov
das
jns
jns
popf
jae
subb
adc
push
shr
dec
pushf
mov
ja
fcomi
das
and
xor
sub
inc
repz
pop
add
idivb
push
imul
mov
test
mov
mov
push
xor
sbb
sub
cld
mov
cs
dec
mov
icebp
mov
cli
nop
subb
aam
xorb
sahf
movsb
adc
dec
aaa
test
or
push
adc
xchg
and
adc
pop
loope
aas
sub
outsb
push
in
enter
push
cmp
inc
mov
dec
clc
dec
fwait
movsb
loope
add
xor
inc
gs
lock
mov
dec
cmpsb
mov
mov
ljmp
xchg
mov
sbb
jno
cli
out
imul
mov
subl
dec
out
push
ret
xchg
je
adcl
lahf
dec
xor
roll
sub
lahf
mov
jl
leave
xchg
pop
or
dec
test
push
inc
pop
mov
cmp
add
sub
pop
movsl
xorl
sbb
sub
mov
sub
jbe
out
hlt
mov
loopne
mov
inc
sub
jecxz
jo
jmp
push
cmp
adc
in
jne
dec
shrb
lea
lods
pop
insb
sub
enter
mov
loop
scas
adc
mov
lcall
mov
pop
out
test
mov
stc
fucomip
pop
lcall
mov
push
jae
stc
pusha
ja
loopne
out
mov
xchg
or
mov
imul
sub
dec
pop
test
sub
test
mov
jmp
push
fcompl
movsb
das
dec
mov
add
popf
sub
sub
lods
div
stos
cld
inc
addr16
sub
pop
cld
hlt
mov
cmp
mov
in
mov
roll
sahf
inc
stc
mov
shrb
js
dec
inc
mov
push
xchg
jb
rcl
inc
out
jne
and
sub
popa
mov
lock
sbb
data16
cmp
fdivs
mov
jp
mov
pop
add
jg
xchg
test
sbb
daa
sbb
out
jg
mov
nop
push
sub
fimuls
sub
xchg
inc
pop
jo
test
jbe
mov
data16
and
mov
sbb
sub
xor
mov
add
ds
ds
stos
loope
ljmp
js
int
fsts
fld
ret
fwait
mov
subb
push
dec
scas
sti
xor
mov
push
int3
or
in
pusha
ljmp
out
xchg
insl
fstps
sub
fs
cmp
fwait
jl
lahf
nop
mov
adc
sub
loopne
js
out
call
xor
in
push
stos
aam
fsubs
std
sub
enter
inc
imul
xchg
scas
pop
cmp
mov
divb
sub
mov
js
cmp
dec
jle
adc
ss
lahf
sub
mov
cs
lock
xchg
sbb
cs
cs
push
stos
daa
jecxz
movsb
add
xchg
into
mov
movsl
mov
mov
adc
cs
stos
cmp
divl
mov
mov
mov
sub
sbb
test
cs
sbb
lds
adc
es
xlat
stos
nop
push
cs
jnp
jl
cmpsl
dec
pop
test
stos
pop
fstps
sbb
adc
cs
fcmovnb
leave
mov
shrb
xchg
leave
pop
ljmp
add
into
lret
ja
cli
xchg
add
pusha
jle
ret
inc
cltd
mov
jmp
jge
jno
push
fcomp
jmp
or
dec
mov
jo
pop
icebp
nop
mov
xorl
cwtl
add
inc
das
stc
inc
rcrl
mov
outsw
lcall
cs
and
stos
nop
nop
cs
add
iret
cmp
rcrb
ret
inc
inc
sub
test
cs
arpl
sbb
jp
sub
pop
js
mov
jecxz
scas
test
mov
cmpsb
dec
loopne
sahf
fimull
push
inc
ret
cmp
xchg
xchg
blcic
sbb
fcoms
pop
call
jo
dec
out
faddp
xor
lahf
fisubs
inc
or
mov
mov
push
add
push
lods
xchg
pop
pop
mov
negb
fidivs
inc
push
lret
adcb
data16
lret
mov
lods
pushf
xor
icebp
enter
inc
das
jge
lcall
inc
xchg
fisttpl
scas
mov
loope
ja
push
push
sahf
mov
xor
and
inc
dec
add
mov
mov
sub
mov
imul
mov
xor
jbe
mov
cmp
add
mov
xor
stos
rcl
imul
xor
mov
les
das
bound
icebp
sti
insl
lcall
cmpsb
adc
adc
test
das
test
ret
in
sub
lahf
daa
xlat
mov
inc
jp
loopne
inc
push
jmp
in
nop
and
repz
cs
and
pop
jp
adc
mov
movl
inc
das
sub
adc
outsl
cmp
sar
pop
js
nop
das
sbb
xchg
xor
jp
jno
fldenv
mov
mov
out
aaa
sbb
cld
add
addr16
cmp
and
shufps
mov
aaa
jg
sub
xor
lea
push
nop
das
and
rorl
loop
lret
pop
inc
push
jecxz
mov
popa
aaa
cmpsb
xchg
jb
push
xchg
mov
das
add
das
and
and
adc
das
push
into
in
mov
flds
in
mov
sub
and
js
test
loop
xchg
or
fldenv
mov
icebp
dec
xor
and
lret
test
mov
xor
mov
push
js
lret
pop
mov
cmp
jge
std
mov
test
test
ja
inc
inc
adc
sti
test
shlb
insb
stos
scas
sbb
out
jg
movsl
or
adc
xor
shll
inc
mov
mov
and
xor
add
xor
xor
inc
ficoms
push
adc
rcrl
inc
xor
sub
dec
pop
adc
pop
mov
jns
inc
cmp
xchg
xchg
inc
and
xchg
dec
or
mov
mov
add
subl
xor
es
xchg
sub
data16
push
rcrl
cmp
inc
mov
stos
movsb
loopne
movsl
sahf
scas
push
cmp
pushf
loopne
xchg
inc
sbb
icebp
cmp
push
xor
xchg
and
dec
filds
xor
and
insl
fsubr
sbb
xor
popa
jecxz
xor
xor
pushf
lock
imul
adc
xor
dec
add
cmp
sbb
mov
push
hlt
xchg
dec
fucom
or
rep
mov
cmp
jecxz
cli
stos
and
cli
dec
or
mov
fldcw
and
das
inc
cmp
lods
cwtl
adc
pop
pop
dec
inc
js
push
add
add
aas
std
sbb
xor
dec
pop
mov
iret
xchg
adc
or
mov
add
lret
jecxz
jae
xchg
jl
std
mov
adc
shll
lock
mov
outsb
clc
clc
dec
pushf
mov
adc
scas
test
hlt
dec
shrl
sbb
mov
mov
jo
lahf
sbb
push
pusha
popa
int3
shll
push
ljmp
test
popf
xchg
inc
xor
mov
adcl
push
cli
dec
cmpsl
mov
xor
xor
out
sbbl
sbb
add
dec
in
mov
jno
jmp
cmp
aas
mov
daa
inc
imul
xchg
cltd
adcl
add
xor
add
push
jmp
jnp
stc
fildl
xor
repz
lcall
sub
inc
jmp
sbb
push
out
movb
in
addr16
xchg
int3
mov
lock
sbb
mov
in
add
add
add
jmp
frstor
inc
adc
out
xor
ja
jecxz
popa
cli
jae
lock
out
mov
out
cmp
cmpsl
movsl
lods
xor
push
cmp
shlb
stos
iret
or
bound
mov
popa
test
insb
cmp
push
ds
orb
xor
int3
mov
push
xor
xor
dec
push
orl
xor
mov
fwait
hlt
lds
mov
aas
xlat
mov
daa
out
int
fsubs
int
fildl
jp
das
push
push
jae
cmp
add
mov
lret
sbb
xor
mov
test
cli
ds
pop
jge
dec
sub
repnz
mov
mov
test
in
daa
mov
push
xor
jge
xchg
in
add
stos
repnz
sahf
sub
or
xchg
sub
sahf
jp
cmp
inc
jl
ficoms
jb
xor
lret
test
sbb
dec
push
ljmp
negb
and
adc
repz
push
mov
adc
push
jno
and
es
ret
push
lret
ja
pusha
xor
or
xor
push
sbb
jmp
aam
rcrl
push
mov
dec
and
lock
push
xor
test
pop
push
loopne
add
hlt
rclb
testb
add
xor
pop
mov
pusha
sbb
addr16
pop
je
ja
push
cmpsl
in
cmc
ficoml
xor
cmp
mov
lods
in
les
addr16
fs
xor
xchg
les
std
pop
xchg
shlb
enter
pop
test
jg
cmp
push
outsl
inc
mov
xor
mov
xor
mov
aas
dec
adcb
jecxz
int3
pop
pop
push
dec
lds
addb
mov
imul
xchg
ja
sbb
out
out
xchg
out
push
and
jge
shlb
int
xchg
mov
xchg
pop
mov
inc
xor
and
loopne
rclb
cmp
push
dec
out
jg
add
stos
inc
xor
add
xor
pushf
nop
xor
xchg
xchg
xor
fistpl
pop
aaa
imul
lcall
cmp
and
or
xor
shll
sahf
mov
add
pop
jno
add
jno
inc
xor
inc
call
popl
xorb
shlb
jmp
push
fs
arpl
jle
and
xorb
lods
cmp
cmp
adc
jl
inc
adc
or
xor
sbb
xor
jae
sbb
xor
jmp
mov
dec
push
aas
push
movsl
jns
mov
xor
xorb
adc
test
dec
cwtl
loopne
jb
cmp
push
ss
aam
xor
aas
fcompl
xor
push
add
add
mov
addl
xor
xchg
inc
xor
mov
std
lahf
rcll
fwait
cmp
in
add
jbe
and
int
push
daa
lret
subb
push
xor
jle
inc
sub
loop
aam
imul
sbb
popa
push
lds
mov
je
sbb
pop
negb
in
shlb
aas
inc
push
es
xor
gs
xchg
shlb
xor
and
fs
mov
or
outsb
movsl
and
leave
stos
mov
push
loope
xchg
mov
or
xor
sub
out
mul
imulb
fisubs
push
lods
outsl
cmp
ss
sub
in
or
aaa
push
inc
or
push
lret
inc
mov
out
inc
add
in
nop
nop
xor
fwait
mov
pop
jp
push
push
data16
cld
lds
shlb
xor
into
aaa
popf
push
sarb
sbb
sbb
shlb
js
mov
sahf
adc
inc
cmpsl
loopne
mov
or
ret
sub
xor
sbb
xor
jmp
cli
pop
repnz
jge
inc
sarb
sub
sbb
xor
cmp
and
xorb
and
and
jl
fwait
sar
int
out
outsl
inc
sbb
out
call
pop
sti
push
push
mov
sbb
xor
jecxz
push
xor
xchg
adc
in
push
xor
pop
lods
fstpl
stc
test
xor
movsl
sbb
xor
xchg
int
shlb
xor
mov
mov
into
incb
xor
insb
dec
aas
adc
filds
les
into
test
mov
mov
movsl
popa
gs
mov
movsb
lock
or
inc
xor
xchg
adc
mov
jg
cs
add
inc
xor
push
mov
fdivp
je
jge
mov
sbb
jmp
divl
movsl
movsl
sbb
lea
sbb
dec
dec
ficompl
xchg
loopne
shrb
adc
cwtl
shlb
daa
and
dec
lret
movsl
adc
add
xor
xor
lret
push
js
sbb
xor
insb
addr16
add
jnp
pop
jp
movsl
es
mov
push
mov
cmp
jbe
inc
adc
xor
cltd
repnz
mov
push
xor
push
push
xor
jae
fcmove
sbb
xor
xchg
lock
shlb
pop
adc
xor
or
pop
mov
imul
out
cs
mov
insb
fnstenv
or
cs
shlb
fistpl
pop
adc
sti
andl
jmp
mov
xor
xor
xor
iret
icebp
imul
inc
arpl
sub
lds
mov
fs
std
and
adc
loope
dec
shll
mov
mov
leave
cmp
addr16
cmp
jp
iret
xchg
jl
fcomps
in
or
mov
jae
dec
test
ss
fiaddl
xor
xchg
sbbl
dec
xchg
adc
ss
push
and
imul
fildll
bound
adcb
xlat
jl
pusha
ss
mov
pop
jl
and
rclb
push
nop
shrb
and
add
ss
pushl
dec
dec
add
ss
stc
jl
int
ss
jno
sahf
jg
out
cli
mov
sub
outsl
out
cmp
ljmp
adcb
repnz
movsb
enter
fcom
in
leave
mov
lods
fisubrl
pop
sub
out
dec
xchg
push
ss
or
outsb
sub
test
jl
cmc
or
jp
xchg
mov
ss
mov
fcomip
jno
repnz
gs
iret
mov
push
cmp
xchg
loopne
repz
dec
cmpsb
aad
test
jmp
cmp
insb
rorl
jp
cmp
sbb
ja
inc
neg
mov
and
test
das
pop
dec
mov
outsl
pop
inc
pusha
shll
aad
add
sbb
ss
shlb
adc
ss
mov
in
cld
pusha
xchg
ret
jno
xor
imul
xlat
notl
mov
mov
ss
nop
ss
xchg
clc
bound
inc
pusha
jmp
movsb
aad
cmc
pop
shr
loopne
and
mov
mov
loopne
lea
scas
mov
fs
aad
les
mov
clc
mov
aaa
jl
clc
fsubrp
call
in
ds
je
jns
push
inc
and
and
lods
xchg
push
add
leave
fadd
xor
push
lods
lcall
testb
xor
push
jns
mov
sub
lock
in
cmpsl
scas
fidivl
lea
int3
pop
lret
sbb
cmp
jge
decb
xlat
jns
rdtsc
cmpsl
leave
pusha
push
sbb
and
push
fwait
pop
inc
xlat
adc
jno
xor
jmp
iret
outsb
mov
or
aaa
mov
repnz
sub
sub
sti
lods
dec
in
cld
push
daa
dec
das
dec
out
inc
cltd
in
sbb
aaa
ror
sub
cltd
clc
sbb
sbb
aaa
jl
shld
add
call
ret
bound
lahf
icebp
xor
cmpsl
rcll
push
ss
iret
pusha
insl
or
cwtl
pusha
aaa
dec
jb
insb
sub
sbb
repnz
clc
dec
jmp
lea
dec
xlat
shrl
dec
ljmp
fucomp
jne
shlb
ja
mov
aaa
push
int
test
dec
pop
in
ja
in
insl
dec
aas
repnz
aam
mov
jmp
cmp
xchg
addl
rorl
xchg
inc
sub
mov
cli
cmp
sub
addl
aaa
pop
hlt
cmpsb
and
or
aaa
stos
cwtl
loopne
std
into
int3
inc
orl
pop
mov
insb
popa
test
aam
fcoms
nop
inc
cmp
loop
mov
pushf
sarb
filds
mov
sarb
or
jnp
in
jo
mov
int3
arpl
mov
dec
mov
gs
adc
add
add
lahf
ja
pop
or
adc
cmp
cmp
popf
xchg
xor
gs
mov
xchg
ja
and
pusha
cmp
dec
in
inc
call
jle
xchg
inc
jb
ljmp
mov
jmp
ret
jecxz
lret
mov
cmp
sahf
inc
mov
cmp
scas
std
add
add
jo
fstl
dec
pop
fldenv
sub
adc
and
ret
cmp
pop
cmp
test
iret
mov
sahf
fwait
adc
lahf
imul
cmpb
sub
insb
repnz
aas
pop
lcall
adc
xor
add
sub
pop
test
add
cmp
mov
dec
ret
sbbb
rcll
sarb
dec
lret
xchg
mov
jp
cmp
shlb
mov
jp
test
mov
aaa
cs
dec
andb
mov
jmp
in
clc
cs
xchg
in
insl
push
xor
out
sarb
jecxz
fimuls
cmp
lods
push
jmp
sub
and
jo
xor
pop
push
sub
mov
mov
shll
cmpb
and
loopne
je
add
sti
add
cmp
lret
mov
mov
cs
cmp
cmp
cmp
pop
jecxz
cmpsb
xchg
pop
int
fs
insb
in
shll
add
inc
cmp
or
adc
fs
cmp
fsub
shrb
sbb
cmp
or
fwait
test
movsl
aad
jecxz
sbb
sbbb
xchg
inc
hlt
cld
das
dec
jmp
popa
push
xchg
and
pusha
cmp
sbbl
stc
ljmp
mov
cmp
lds
inc
leave
lds
test
push
jmp
or
cmp
xor
arpl
push
push
sub
std
add
cmp
sbb
cmp
inc
xor
pusha
cmp
pop
call
out
xchg
adc
outsl
mov
mov
imul
cli
lahf
sbb
inc
xchg
ja
rep
cld
adc
cmp
add
lahf
fiadds
jp
adc
imul
imul
out
pop
jo
pop
pop
pop
test
test
cmp
out
and
dec
fwait
dec
scas
lods
in
push
in
and
ficompl
cmp
push
add
cmp
in
xchg
pop
clc
cld
test
push
dec
cmc
jbe
mov
and
scas
in
inc
sub
dec
and
cmp
push
addps
popa
pushf
cmpb
inc
pop
dec
cwtl
nop
cmp
enter
fiaddl
lock
pop
mov
xchg
jecxz
sub
sahf
mov
test
adc
xchg
dec
mov
imul
aam
push
push
push
test
cld
fsubr
iret
imul
mov
or
cmp
lock
cmp
push
xor
jp
add
cmp
add
dec
jae
jno
cmp
cmp
lods
sbb
cmp
jns
aaa
les
and
ss
and
inc
cmp
ja
xor
out
and
sub
push
rorb
rcll
mov
das
cltd
imul
test
cmp
mov
dec
outsb
lcall
bound
ja
stc
mov
sti
scas
push
inc
mov
outsl
cli
add
cmp
push
movsl
sub
cmp
xchg
mov
lock
test
shlb
fcmovnbe
or
popa
lods
dec
dec
lods
pushf
lock
fwait
xchg
loopne
xchg
enter
les
cmc
loop
sahf
mov
cmp
inc
cmp
sub
sub
mov
mov
sub
nop
cmp
xchg
cmp
and
jns
int3
fldcw
mov
mov
mov
cmp
pop
fcmovnb
mov
out
dec
scas
sub
out
adc
cmp
rorb
or
adc
cmp
stos
mov
out
icebp
inc
and
mov
mov
out
ds
data16
or
cmp
movb
cmp
mov
sub
dec
cmp
or
mov
pop
jecxz
test
sbb
aas
jecxz
ficoml
xor
shrb
test
and
mov
imul
loopne
or
cmp
or
jbe
stos
fsubs
cld
inc
dec
mov
lahf
push
push
jne
imul
inc
and
jge
ljmp
in
lock
jns
iret
and
es
gs
xor
mov
or
cmp
loopne
sub
scas
fisttpll
and
jbe
repz
or
scas
sti
subl
ja
or
sbb
hlt
mov
xor
cmpsl
fdivs
cmpl
loope
ds
filds
cs
pushf
adc
mov
aaa
dec
mov
fwait
js
inc
je
jge
sbb
out
cmp
lods
pop
sub
lds
loopne
sbb
cmp
sub
sti
xchg
cli
mov
js
and
stos
sub
sbb
shlb
fdivrl
sbb
dec
neg
pop
adc
mov
or
cmp
cmp
std
ljmp
mov
sub
ja
xchg
adc
nop
sarb
cmp
orl
je
aas
dec
adc
cmp
sub
jmp
cmp
les
or
movsb
or
cmp
mov
cmp
cld
or
sti
rclb
aaa
cmp
aaa
insl
test
sub
cmp
aam
lods
popf
xor
adc
add
cmp
or
dec
jecxz
ret
lods
mov
bound
sub
leave
hlt
xor
jo
dec
shl
les
xchg
mov
cmp
add
xchg
dec
pusha
arpl
dec
ja
sub
pusha
add
cmp
inc
cmp
decb
jb
js
movsb
scas
shlb
adc
mov
cmc
dec
fcoml
add
xchg
sarb
jecxz
mov
and
mov
adc
inc
lods
xor
push
jo
dec
dec
movsl
ljmp
in
push
xchg
add
ljmp
push
jns
movb
inc
mov
pop
clc
mov
jo
sbb
sub
push
pop
cmpsl
rorb
and
sahf
push
sti
and
push
addr16
sbb
cmp
inc
and
mov
inc
jecxz
lahf
popf
hlt
out
es
adc
in
jl
and
adcl
sub
rol
inc
pop
imull
inc
and
lock
mov
lock
incb
mov
push
sti
push
bound
xor
jo
sahf
rcrb
out
out
pop
scas
scas
testl
enter
js
aad
addb
add
pop
in
movsl
push
sub
movsl
push
int3
loope
inc
xchg
loope
outsb
mov
or
cmp
dec
rorl
aam
ljmp
jle
xor
ret
aas
push
or
mov
cmp
mov
inc
jne
sahf
mov
or
shlb
addb
mov
pop
push
mov
lret
scas
rcll
adc
cmp
xchg
sbb
cmp
cmp
inc
scas
aas
int
or
cmp
cli
dec
dec
add
cmp
and
scas
cld
add
add
aaa
jge
arpl
mov
test
add
pop
xlat
lock
lcall
xchg
leave
jo
sti
and
jg
fwait
in
pop
jg
sub
test
inc
mov
inc
mov
lea
rcll
adc
pop
mov
ds
mov
push
xor
fdivs
add
mov
scas
add
andb
sub
jle
or
cmp
and
dec
insb
xor
sub
fwait
dec
add
cmp
sbbl
call
adc
sbb
cmp
leave
mov
cmp
xor
sbb
sbb
inc
je,pn
mov
dec
in
mov
sbb
ds
mov
ds
test
lods
hlt
repnz
fld
mov
sarb
into
sub
in
mov
and
nop
ds
sbb
xchg
jmp
and
stos
push
inc
pop
xchg
ljmp
sbb
and
fwait
push
arpl
xchg
mov
test
xchg
jg
pusha
and
std
inc
mov
push
sbb
ds
pop
push
inc
aad
cwtl
add
sahf
ret
mov
dec
jne
clc
cmpsb
ret
lds
jns
xchg
outsl
cli
cmc
dec
ljmp
add
mov
and
mov
adc
cmpb
test
jecxz
mov
inc
push
pop
stos
jl
jl
inc
ds
jne
jo
bound
ret
jmp
ljmp
xchg
mov
ds
mov
sub
test
fcoml
jmp
subb
aaa
dec
repnz
cmp
push
lock
leave
cmp
stc
push
adc
stc
adc
pop
lret
ja
insl
xor
sub
fcomps
add
ds
out
dec
jle
scas
xor
mov
sub
out
iret
xor
pop
out
mov
push
add
aas
ret
push
xor
popa
xchg
cmp
das
xchg
dec
in
pop
adc
xor
daa
cmpsl
adc
aas
test
rol
out
popf
adc
aas
clc
jmp
sub
loopne
out
subl
cmp
pop
jnp
cmc
ret
jb
stos
ljmp
add
loopne
cmp
outsb
stos
mov
adc
aas
push
sub
and
pusha
push
or
aas
dec
clc
addb
loopne
scas
in
jnp
jp
invd
mov
loopne
fisubrl
xorl
out
sub
fstpt
adc
adc
loopne
fistl
adc
cmp
lcall
pop
test
lret
testl
adcb
jns
sub
xchg
add
loop
bound
lock
std
mov
jnp
sar
push
xor
mov
in
mov
cltd
add
lock
in
ds
jbe
inc
clc
add
sarb
mov
hlt
sbb
sbb
outsl
push
xor
imul
push
into
push
aas
mov
loopne
push
rcll
out
pushf
add
shll
inc
ss
sbb
aas
add
dec
xchg
cmpsl
inc
lock
xorb
popf
out
repz
mov
mov
fisubrs
pop
cli
pop
pop
cli
mov
jo
mov
jecxz
nop
cmpb
das
push
sub
pop
pop
shl
filds
out
xchg
movsb
in
sbb
aas
and
out
lock
ret
cmpsl
in
sub
adc
cmp
mov
jo
int
fistpll
inc
loope
mov
push
stos
pusha
fimuls
je
pop
mov
aaa
adc
cmp
mov
inc
bound
jbe
aas
pop
repz
pop
js
xor
mov
jge
xor
mov
std
mov
negl
cli
in
pop
pop
xor
push
jg
sbb
aas
jne
arpl
fnsave
inc
dec
push
fimull
dec
mov
inc
dec
inc
test
inc
test
pusha
xor
inc
push
jp
loop
xor
cmp
cmp
xor
les
mov
inc
inc
int3
idivl
movsb
stos
ljmp
mov
cmpsl
les
and
rcrl
pusha
inc
int3
mov
xor
jg
ret
adc
jg
ficoms
rcrb
adc
push
xor
cmp
std
sbb
inc
jge
dec
test
movsb
in
push
ret
add
xchg
mov
inc
adc
test
xchg
xchg
adc
mov
xchg
add
inc
sub
push
add
pusha
inc
mov
das
and
sub
inc
sub
sbb
aas
cmp
jbe
pop
pop
jae
mov
mov
jl
sub
push
out
es
cmpsb
xlat
cmp
imul
jbe
mov
cmp
pop
test
sbb
inc
cli
sub
lcall
dec
sbb
inc
aad
jo
or
adc
jo
stc
push
scas
sub
in
rcrl
jmp
sub
cld
adc
xchg
mov
loope
add
les
in
rolb
sub
add
mov
jo
lret
pop
adc
jns
aaa
ljmp
mov
rolb
and
lods
or
inc
pop
inc
mov
xchg
or
inc
test
add
inc
addr16
popa
sub
dec
sub
pop
inc
popa
mov
and
lea
rolb
fsub
xor
push
ss
jb
xchg
fs
aas
lods
adc
add
xchg
mov
popa
andb
lds
shll
pop
test
lcall
cli
add
addr16
xchg
iret
adc
fwait
in
jne
sbb
inc
and
fadds
out
nop
push
inc
sbb
inc
cmp
and
ss
push
mov
sub
fwait
int
scas
mov
lods
cmp
push
adc
adc
inc
out
or
inc
cmp
push
not
adc
rcl
int
push
mov
inc
pop
repz
mov
les
loop
push
outsb
pop
arpl
fstpt
lcall
pushf
adc
xabort
sbb
sbb
cmp
movb
inc
push
adc
inc
aaa
std
insb
pop
push
mov
ljmp
popa
sti
sub
and
ljmp
pop
pop
and
cmp
cmp
pop
mov
mov
idivb
nop
inc
jl
mov
data16
inc
sbb
scas
mov
mov
std
inc
out
and
out
aad
push
inc
mov
adc
pop
and
or
in
xor
insl
pop
jmp
and
enter
lds
xor
inc
ret
xchg
mov
cmp
ljmp
lock
sahf
cs
int
divl
jp
jnp
lds
mov
divb
and
sub
in
movsl
mov
mov
ljmp
call
mov
jle
sti
and
and
jns
jge
cmp
mov
jp
mov
inc
push
xchg
add
adc
inc
fwait
dec
pop
rcll
inc
ja
bound
test
mov
ja
andb
xchg
nop
add
enter
out
dec
mov
jg
dec
lods
sub
pusha
mov
cmp
lods
notb
cmc
push
jge
sbb
and
push
lret
call
inc
pushf
inc
inc
mov
pop
bnd
mov
mov
jmp
xchg
negl
mov
inc
enter
mov
inc
scas
mov
repz
jle
jbe
inc
sub
ja
sub
jb
in
sarl
testl
in
push
shlb
sub
test
dec
je
cltd
rcrb
movb
dec
dec
ja
sbb
rolb
in
into
outsb
inc
push
mov
cld
fwait
stos
lahf
jecxz
lahf
int
rcrb
inc
cs
jns
pop
adc
inc
inc
sti
dec
loop
bound
mov
cmpsb
data16
lahf
loopne
loope
pop
in
pop
mov
sub
aad
mov
mov
xor
sbb
inc
into
bnd
push
frstpm(287
in
dec
lret
sbb
outsb
push
cmp
dec
testl
inc
adc
inc
and
cmpsb
jns
hlt
pop
jmp
sar
push
and
pop
push
inc
sbb
add
inc
push
fs
fcoms
sti
mov
ljmp
push
and
mov
pop
mov
adc
inc
sysenter
movsl
and
loop
test
ret
or
push
cmp
scas
popf
js
push
das
movl
inc
inc
pushl
sti
lock
ret
ret
sbb
cmp
mull
cmp
rcr
loope
jo
cltd
adcl
lock
and
test
out
mov
push
pop
sub
add
push
shrb
pop
or
jns
pop
cmp
rolb
xor
ljmp
jne
xor
rorb
cmp
and
push
jle
into
xor
arpl
ret
jb
clc
test
std
orl
inc
inc
mov
inc
cmc
push
out
pushf
push
inc
and
movsb
dec
nop
rolb
inc
out
sbb
jb
lock
stos
inc
cld
mov
es
ret
iret
dec
push
and
repnz
ds
lods
xor
lock
or
inc
enter
loop
cmp
push
xor
ret
adc
fldcw
xor
repz
test
fsubrs
es
aad
dec
xchg
xchg
sub
lcall
lea
mov
in
mov
loopne
cmpl
divl
xlat
pop
out
les
stos
sbb
fists
mov
lret
test
cmp
fistpll
push
or
outsb
jns
lahf
lret
cmc
add
movsl
aam
cli
fisubl
repz
shrl
shlb
hlt
std
sub
jp
daa
in
inc
cld
iret
push
stc
hlt
dec
test
xchg
and
sub
adc
sub
xor
insb
cmp
insl
in
adc
lods
inc
xchg
pusha
inc
adc
dec
mov
add
pop
cmpsl
stos
and
inc
xchg
stc
loopne
fadds
dec
mov
aas
aad
cmp
mov
mov
add
mov
inc
push
das
stos
mov
stos
fucomi
in
ss
jnp
notl
inc
and
mov
fisubrs
jo
loop
test
neg
mov
pop
outsl
outsl
and
cwtl
lock
xorl
inc
out
imul
outsb
cs
fisttpl
inc
in
xchg
jne
mov
nop
inc
aam
push
inc
jmp
shrl
lcall
fdivl
mov
cmpsb
mov
int
jo
fimuls
xchg
xor
xchg
or
mov
inc
rcr
gs
daa
mov
pushf
mov
push
cld
or
mov
jl
cmp
loopne
push
inc
mov
fwait
inc
add
pcmpgtd
nop
mov
or
out
bound
xchg
in
movsl
add
jp
pop
push
addl
jmp
add
pop
sub
incb
cmp
enter
inc
push
popf
das
or
lahf
sarb
loope
inc
jne
inc
jb
in
es
jnp
or
arpl
repz
xchg
into
lods
test
mov
inc
into
loopne
shr
or
mov
lods
xchg
xor
jno
rolb
subb
mov
mov
xchg
pushf
and
repz
jnp
lahf
les
mov
inc
or
jle
xor
fnstsw
sub
cmp
rorl
lock
lea
cmc
shlb
xchg
xor
out
out
das
aad
sysret
push
jno
jb
fistl
in
sbb
xor
pop
lret
inc
or
inc
aam
push
adc
inc
out
roll
lds
mov
sti
es
lods
popf
mov
pushf
inc
inc
lret
push
cmc
fs
jecxz
inc
popf
pop
push
dec
je
pop
gs
scas
les
cmp
lods
sbbb
jo
adc
inc
pushf
adc
movsb
adc
xlat
ror
enter
jmp
out
int3
sbb
les
mov
adc
int3
xor
ret
ret
push
jae
lcall
mov
rolb
and
mov
push
inc
imul
pop
arpl
leave
sbb
inc
lods
mov
lock
inc
into
inc
in
push
jp
xchg
rcl
in
and
mov
cmpsb
sbb
jns
test
repnz
ret
inc
imul
pop
push
and
or
push
andl
xchg
inc
jbe
dec
orl
sbb
inc
push
dec
ret
cwtl
and
imul
inc
add
push
fdivrl
int3
test
xchg
negb
xchg
addl
bound
rolb
jns
in
filds
in
and
inc
inc
arpl
test
stos
push
mov
pop
pusha
mov
push
repz
adc
jns
inc
pop
mov
xrelease
jmp
mov
xor
test
mov
xor
cmp
pop
xlat
pop
sahf
addr16
pop
addr16
inc
xor
movsl
dec
iret
stos
inc
mov
and
and
enter
xchg
inc
sub
mov
pop
adc
inc
repnz
xor
sbb
cmp
xlat
cmp
cmp
mov
sub
stos
pop
xchg
rorl
inc
popf
cwtl
mov
rolb
mov
push
sub
mov
fdivr
mov
mov
sbb
rol
fmull
inc
jb
inc
scas
inc
cwtl
xor
sub
stos
xchg
cwtl
mov
cmp
pop
into
add
rol
xor
lods
xchg
inc
mov
or
cwtl
add
jae
xchg
fsubs
sub
rol
mov
mov
xchg
sbb
cmp
adc
pusha
inc
jno
cmp
sbb
loope
stc
mov
add
mov
faddp
cmp
push
dec
mov
and
daa
mov
sahf
jb
jmp
add
fnstcw
pop
lret
mov
in
imul
push
lock
dec
lds
icebp
imul
filds
pop
das
outsb
xchg
mov
aas
and
testb
mov
cmp
cli
sahf
sub
test
or
inc
pop
scas
jo
in
movsb
dec
xor
inc
dec
pop
cmp
mov
pop
xchg
in
rorb
mov
push
sub
ret
xor
cmpsb
in
jle
pop
scas
push
movsb
test
jle
out
sarb
sub
xlat
jb
mov
mov
test
test
mov
in
dec
sti
daa
cmp
push
mov
lahf
inc
adc
stos
out
mov
dec
gs
testb
sti
lds
ljmp
inc
fld
cltd
pop
int
and
popf
mov
pop
cmp
in
arpl
int3
pop
out
xchg
inc
jno
fs
adc
iret
lret
mov
mov
mov
dec
mov
popf
sub
sbb
ljmp
in
repz
sub
push
jnp
add
test
dec
test
scas
xlat
imul
inc
cmp
ds
dec
mov
jne
xorl
push
shlb
imul
call
and
pop
repz
pop
adc
dec
xor
movsb
mov
fistps
mov
cmp
mov
iret
mov
sbb
dec
xchg
and
jle
mov
push
dec
mov
pop
and
mov
and
mov
rorb
jp
xchg
mov
mov
push
and
pop
loopne
mov
aam
dec
daa
sbb
je
lret
jns
jbe
xchg
cmp
cmp
dec
push
test
out
sub
jmp
mov
push
mov
mov
jecxz
xor
jmp
pop
cmp
sysret
scas
jb
cmp
das
xchg
aam
pop
adc
and
pop
mov
dec
outsb
jmp
test
out
je
sub
and
movsb
sub
gs
pusha
or
and
mov
mov
aas
cmp
xchg
stos
rcrb
dec
jg
ss
push
pop
adcb
lds
xor
mov
insl
sub
ss
add
xorl
inc
stos
fs
sub
dec
mov
inc
add
dec
repnz
push
sub
shlb
leave
div
lds
fcmovnbe
jo
frstor
adc
aad
push
das
sub
push
in
sub
dec
dec
pusha
aam
out
mov
mulb
aas
gs
inc
aam
icebp
lock
mov
add
dec
aas
dec
push
rorl
jae
repnz
pop
adc
dec
add
dec
dec
adc
and
mov
adc
aam
nop
dec
aam
xor
mov
adc
cwtl
rorb
ljmp
popf
mov
lret
das
cmp
gs
outsb
gs
sub
aas
lret
subb
mov
pop
test
jp
out
out
jg
imul
inc
pop
pop
jbe
sub
jb
test
mov
or
or
mul
xor
dec
in
ret
fisubl
add
dec
adc
movsl
hlt
mov
pushf
nop
dec
push
pop
mov
jge
and
pop
pop
loope
mov
stc
push
stc
cmpl
and
dec
mov
das
mov
inc
fstp
mov
addr16
pop
dec
loopne
jns
je
cmp
adc
mov
jp
cmp
push
mov
stc
cmp
gs
je
xlat
add
dec
or
pop
cmc
or
pop
pop
cmp
jmp
aam
out
and
fimuls
insb
test
movl
stos
cmpsb
mov
mov
out
imul
lret
je
inc
imul
adc
nop
and
inc
mov
mov
lods
aam
push
push
scas
les
cmc
xor
xchg
inc
dec
in
shll
mov
push
pop
inc
clc
jecxz
pusha
popf
dec
xchg
push
addl
or
dec
jle
push
lret
lret
jne
sub
loopne
rolb
pop
je
jb
in
dec
fxch
fsubrs
aam
fiaddl
pusha
dec
arpl
sub
stos
imul
sbb
mov
add
sub
push
leave
jnp
push
jne
add
pop
sub
cltd
adc
dec
loopne
xchg
iret
mov
mov
jg
nop
add
cmp
pop
or
mov
mov
dec
jnp
sbb
dec
jne
mov
xchg
clc
push
mov
xor
mov
lret
or
mov
adc
dec
and
enter
out
mov
dec
or
rolb
dec
pop
mov
xor
adc
dec
ss
lods
xchg
jle
add
dec
or
dec
xor
dec
inc
dec
jge
scas
test
dec
les
sbb
jbe
sub
ljmp
es
rorb
rclb
or
lods
cwtl
add
jno
dec
pop
ja
fwait
in
pop
out
xchg
and
addr16
leave
or
jnp
mov
adc
sbb
mov
rorb
imul
dec
in
out
add
aas
push
dec
enter
adc
and
cmp
push
sub
in
jl
push
inc
out
fs
fs
jge
shrb
loop
pop
pop
or
dec
ds
pop
aad
das
repnz
and
aad
xchg
inc
scas
mov
xchg
inc
dec
cmp
scas
jle
rorb
adc
js
fistpl
lods
arpl
and
xchg
inc
mov
jne
mov
sub
mov
mov
adc
dec
push
jmp
jnp
and
idiv
fidivs
sbb
outsb
sub
pusha
ret
clc
mov
add
dec
in
sahf
jle
test
outsl
push
leave
dec
cmp
pop
cmp
outsl
mov
sbb
fistpl
push
loopne
push
out
jns
repz
loope
pop
or
jge
xor
scas
mov
cmp
cld
lret
icebp
adc
dec
jno
jle
mov
cmp
cmpsb
dec
bound
insb
inc
icebp
out
or
mov
sbb
pop
test
push
rcrl
dec
lcall
data16
dec
dec
jns
test
in
xadd
inc
xor
sub
jbe
clc
push
stos
pop
subl
loop
add
sub
pop
push
ljmp
or
insl
shll
xchg
test
mov
int3
lcall
arpl
cmp
dec
lds
inc
sub
movzbl
bound
sub
mov
shll
mov
ja
mov
pop
xchg
or
xor
adcl
into
sbb
dec
sbb
mov
mov
adc
ret
sti
adc
pop
notb
adc
rorb
clc
dec
lret
scas
push
dec
das
cwtl
lock
or
dec
mov
jb
fucomip
inc
jne
fbld
in
jns
aas
popf
sbb
sub
mov
cli
shlb
or
dec
loopne
adc
dec
ja
fwait
leave
dec
push
rcrl
push
mov
cmpsb
jne
cmp
push
dec
stos
in
cltd
sbb
dec
or
rcrb
rorb
out
lock
mov
lret
scas
pusha
push
enter
mov
push
hlt
mov
push
xor
lock
dec
xchg
mov
mov
push
fs
ljmp
hlt
add
in
jns
cmpsb
mov
scas
fwait
and
repz
ja
and
or
dec
jo
out
xor
rorb
dec
enter
and
cmp
dec
and
pop
or
fisubs
mov
sub
das
imul
mov
shr
sbb
xor
xor
enter
push
dec
pop
push
sub
cmpsl
dec
mov
push
aam
addr16
addr16
or
cmp
movsb
mov
mov
mov
rcrb
test
sbb
notl
pop
cmp
sub
push
shr
rcr
icebp
in
fucompp
out
jae
cmp
out
std
push
or
cwtl
nop
dec
sbb
and
popf
or
inc
dec
sub
push
mov
push
push
aas
nop
mov
shrl
popa
mov
je
jno
pop
in
fnstenv
test
dec
gs
out
add
sub
inc
dec
jno
mov
xor
dec
fs
pop
lea
adc
cmp
xor
push
pop
inc
cwtl
inc
dec
cmc
fnstcw
gs
mov
imul
movsl
into
cwtl
nop
dec
push
xchg
xchg
call
xor
clc
pop
sub
and
loop
or
fcoml
mov
pop
inc
xor
nop
dec
mov
sahf
mov
push
jns
fs
repz
or
dec
fcmovu
push
xchg
imul
les
lods
stos
dec
xchg
lahf
cwtl
mov
aad
fwait
jb
xor
rorb
mov
bswap
dec
cmp
and
daa
mov
rorb
lds
sbb
dec
xchg
xchg
or
jbe
in
push
adcl
popa
loope
and
ja
loopne
adc
dec
int3
sub
cmp
mov
inc
scas
std
or
dec
xchg
jl
adc
ja
add
dec
fs
ljmp
orl
movsb
xorl
mov
xlat
andl
leave
test
jnp
inc
dec
sbb
out
pop
inc
adc
je
das
push
push
test
dec
mov
sub
push
mov
sbb
mov
test
mov
testl
mov
pop
out
data16
ror
adc
pop
mov
add
jecxz
and
push
push
lcall
jle
mov
js
loope
mov
std
test
outsb
cmp
adc
scas
sahf
mov
mov
fildll
sub
mov
dec
sub
mov
pushf
loopne
jb
cmpl
and
jne
mov
xor
cltd
pop
cmp
pop
inc
test
or
dec
sets
jno
jnp
push
lahf
adc
mov
ja
adc
or
stc
mov
mov
int3
cli
dec
xor
xchg
xor
movsl
fdivrl
sub
out
inc
sbb
dec
sarl
or
dec
bound
int3
pop
push
into
inc
push
sub
adc
adc
aaa
and
inc
xchg
outsb
jns
mov
lods
popf
jne
pop
orb
repz
std
and
pop
pop
scas
outsb
add
dec
mov
dec
repnz
pop
cmp
test
pusha
mov
dec
nop
lock
into
push
cwtl
and
mov
sbb
push
addb
dec
imul
rorb
in
ja
and
in
sub
add
addl
pop
xor
rorb
cmp
or
je
loopne
sbb
mov
dec
cwtl
pusha
dec
loope
xor
fnsave
and
js
stc
rcll
dec
mov
mov
lret
mov
push
xor
nop
inc
dec
in
loop
aam
cltd
add
js
rorb
sub
sub
fst
es
mov
adc
bound
xchg
mov
push
int
aam
daa
test
dec
adc
and
fnstsw
dec
inc
or
cmp
jle
in
inc
aad
scas
ljmp
add
cmp
lock
inc
jl
push
inc
xchg
jo
adc
cmp
jno
jbe
addr16
ja
mov
popf
and
testb
dec
cltd
adc
adc
dec
leave
cs
xchg
jo
adc
or
mov
xchg
cmpl
pop
sub
test
into
mov
dec
sbb
ret
or
dec
sbbl
add
xor
inc
loope
enter
aaa
test
add
dec
outsb
mov
ja
in
movsl
je
imul
add
pop
rcrl
js
mov
jne
sahf
ss
popf
and
lock
rclb
add
adc
push
mov
adc
push
adc
cmc
ficomps
and
mov
pop
arpl
inc
lods
jp
cmp
scas
cmp
xor
cvtps2pi
push
push
jecxz
add
lods
xor
aas
push
jno
rcll
sub
or
loopne
mov
push
call
xchg
jo
mov
lcall
cmp
inc
cs
aam
lds
lock
add
push
sub
addr16
jne
idivb
nop
push
jmp
stos
adc
mov
stos
fucomi
in
adc
jne
jbe
test
leave
and
mov
push
cmp
dec
cmp
addps
enter
inc
rclb
arpl
daa
mov
stos
aas
imul
nop
push
xor
repnz
or
cltd
rorb
adc
mov
rclb
cmpsl
xchg
jns
sarb
aam
lea
push
fwait
sub
xor
leave
jbe
fwait
js
push
ret
out
pop
std
test
shlb
stc
mov
aam
fists
jle
aam
adcb
out
xor
dec
ror
test
repnz
fdivrs
rclb
out
xor
mov
pop
ja
pop
mov
ja
cmpsl
cli
push
in
jbe
aaa
mov
and
mov
jmp
leave
test
rolb
xrelease
push
je
jo
jecxz
nop
push
cmp
xor
push
inc
add
push
dec
xchg
mov
lret
xchg
scas
aaa
xchg
lods
scas
std
ret
jmp
xchg
out
sahf
add
dec
sbbl
mov
add
js
shll
or
sbb
rclb
out
test
push
out
push
lcall
push
jp
and
dec
inc
xchg
mov
mov
inc
xchg
dec
sbb
push
or
sub
cmp
pop
sti
pop
adc
pop
or
fbstp
xor
in
add
fistpll
pushl
sbb
jo
and
jo
call
inc
outsl
mov
mov
fimuls
add
and
loopne
adc
adc
push
push
mov
sbb
aam
xor
lcall
push
inc
add
add
cmp
cwtl
nop
push
mov
sbb
dec
imul
lods
fs
cmp
jecxz
pop
pop
stos
movsl
jae
push
jmp
inc
sti
sahf
mov
ffreep
xchg
popa
pop
sub
jge
pavgb
fidivl
add
and
push
mov
mov
out
inc
adc
movsl
pop
out
sbb
dec
xchg
jne
mov
adcb
jmp
cmpsl
dec
add
cld
imul
cmpsb
inc
pop
sbb
jge
test
push
cmp
and
adc
jnp
and
sub
add
bound
aaa
jo
lock
repnz
fmuls
jo
ret
insl
bound
lret
dec
dec
inc
xor
push
mov
and
inc
push
insl
pop
push
insb
pop
xorl
pop
testb
nop
push
outsb
in
fists
ret
cmp
insb
lret
mov
and
adc
sbb
push
cmp
lret
xor
xor
xchg
sub
hlt
lcall
dec
adcl
repz
adc
in
fnstcw
ret
jecxz
jnp
add
push
pop
jp
hlt
loope
sti
ss
rclb
and
mov
stc
ja
or
mov
xchg
adc
push
les
push
add
test
cmp
loop
jle
push
dec
mov
lret
pop
pop
ljmp
jne
pop
mov
pusha
dec
fcmovnbe
jno
xchg
ret
shrl
fdivrs
mov
rclb
movsb
fistpl
pushf
mov
addb
lock
sahf
inc
xor
add
jnp
pushf
and
sahf
je
sbb
enter
lock
test
fiaddl
lods
lods
adc
movsl
imul
dec
imul
shr
imul
loopne,pn
lock
jb
adc
xchg
das
inc
rcr
adc
in
or
cmc
pop
aas
dec
jmp
lret
call
cmpsb
test
mov
mov
xor
popa
ss
pop
inc
xlat
pop
sbb
push
push
cmp
aam
cmpsb
cmp
mov
arpl
enter
insl
and
subl
sub
pop
loop
push
mov
mov
dec
mov
fsts
inc
les
inc
sbb
inc
or
mov
ja
icebp
adc
push
das
sbbb
xor
ret
clc
cmp
xor
cmpsb
jne
mov
and
aad
lahf
or
ret
fs
mov
inc
inc
test
sub
add
into
sub
iret
lret
push
push
out
test
push
or
xchg
add
fiaddl
rclb
adcb
stos
inc
pop
mov
adc
test
in
mov
xor
sbb
rclb
mov
mov
cwtl
push
push
data16
mov
out
fisttps
push
movsb
popf
xlat
and
stos
js
lret
into
int
sub
fildll
arpl
cmpb
mov
push
nop
push
push
cmp
lock
iret
pop
sbb
pop
pop
loopne
int3
psraw
inc
add
cmp
and
add
mov
jl
lcall
clc
xchg
fldt
pusha
push
jnp
and
mov
xchg
and
stc
addr16
into
push
xchg
adcb
mov
lcall
call
pop
lret
and
dec
stos
mov
hlt
addr16
pop
add
adc
mov
and
sbb
mov
das
fsubrl
arpl
mov
js,pn
mov
push
roll
mov
or
push
jmp
mov
push
iret
mov
pop
push
psadbw
adc
xor
popa
lcall
popf
mov
and
mov
mov
rcr
addr16
ret
stc
mov
lcall
push
push
aas
adc
outsb
xor
and
scas
clc
inc
ss
js
out
lret
or
rclb
scas
adc
cmp
xor
cld
and
in
lods
xor
popa
testl
rcl
sbb
push
stc
xor
push
sub
push
sub
sti
xor
jnp
push
popa
popa
clc
test
cmpl
or
adc
inc
fisttpl
nop
pusha
push
jae
jle
cmpsb
sbb
push
sub
adc
enter
leave
jle
and
mov
dec
dec
es
bound
les
repz
mov
mov
int
xchg
fldcw
inc
xchg
mov
out
insb
mov
insl
xchg
jg
add
je
lret
test
ret
mov
fnstenv
nop
lock
jmp
jp
stos
iret
negl
xchg
xor
mov
in
xchg
cli
int
repz
test
loope
or
push
mov
pop
test
adc
push
test
push
mov
jge
std
leave
stc
mov
add
out
push
xor
ljmp
mov
nop
xor
adcb
es
enter
arpl
ljmp
push
mov
adcb
cmp
js
ss
xor
cmpsb
adc
add
and
rclb
and
jo
popa
xor
pop
or
movsb
aam
inc
xchg
or
and
ja
push
inc
mov
das
xchg
pushf
xor
mov
repz
inc
jmp
mov
lret
daa
mov
mov
jmp
subl
or
push
int3
sbb
push
sbb
int
movsb
and
push
pop
sbb
push
lods
int
pop
dec
xchg
ja
xor
inc
ljmp
mov
test
inc
push
fnstcw
adc
pushf
adc
add
adc
xchg
push
adc
in
push
mov
mov
jno
add
lcall
hlt
and
xor
stc
sahf
jecxz
fisubrs
or
jecxz
aaa
fs
dec
dec
push
xor
test
push
inc
push
gs
out
dec
out
and
sti
fildll
mov
sbb
push
popa
mov
push
pusha
movsl
pusha
outsl
iret
or
mov
movsl
adc
and
mov
push
mov
sbb
mov
push
mov
mov
adcb
push
into
or
push
out
and
push
addb
data16
cmp
xor
fstpl
lea
push
add
push
les
push
or
push
mov
cmp
sub
inc
movsl
mov
popa
fldt
xor
in
lods
clc
stos
int
test
push
xlat
in
sub
aas
loope
je
jecxz
mov
stos
sti
pop
and
jne
mov
mov
cmc
ss
pusha
push
inc
jle
push
outsl
shlb
std
fldt
inc
cmp
xor
std
popa
icebp
iret
fisubrs
jmp
mov
ror
rclb
mov
jae
jg
mov
sub
pop
stos
add
and
addl
xor
push
cltd
shlb
jo
xchg
push
push
xchg
push
lret
fisttpll
lcall
shrl
add
push
xor
fnstcw
mov
outsb
das
fisttpll
jno
jg
cmp
paddq
add
add
push
fwait
dec
jge
or
push
into
js
sub
dec
or
scas
lret
aas
inc
out
push
in
inc
or
cmp
inc
rorl
jae
dec
lret
shlb
xor
lock
push
aas
rorl
xchg
fsubl
cmp
aaa
xor
xor
push
fsubrs
repnz
cmp
int3
call
or
aas
btr
adc
push
fcompl
and
call
outsb
or
push
hlt
mov
aad
shll
lds
push
rcl
ds
push
ja
pop
mov
sbb
adc
fimuls
test
test
push
jecxz
push
pop
mov
shrb
push
movb
sbb
push
stos
in
pop
daa
loope
rclb
cld
inc
arpl
fistl
outsl
gs
pop
adc
push
shrb
adc
xlat
push
and
push
xchg
pop
imul
fcomp
psubusw
je
and
call
frstor
mov
aad
jns
out
cli
bound
fsubrs
xor
adc
add
push
push
mov
fs
add
xchg
fsubs
add
mov
push
add
push
mov
lahf
shlb
and
stos
add
add
lea
lcall
stos
jg
pop
adc
mov
test
push
cs
jl
push
xchg
out
scas
les
and
lcall
jbe
xor
dec
test
aaa
push
sahf
inc
jb
xlat
xor
mov
xchg
shlb
cmp
icebp
outsl
test
or
push
sub
sub
rcrb
and
pop
fnstsw
in
pop
fwait
pop
cli
movsb
lea
fdivs
sbb
aas
xchg
sub
mov
mov
inc
pop
fdivl
pop
mov
xchg
fbstp
and
cmp
incb
rclb
lret
imul
and
dec
cs
xchg
pop
xorb
mov
jecxz
lret
repnz
scas
push
or
cltd
loope
lcall
push
pop
int
setge
mov
pop
cmc
inc
test
adcl
popf
and
mov
or
sbbb
jo
mov
cmpsb
out
xchg
rcll
cmp
pop
jno
sti
sub
pushw
in
mov
mov
cmp
js
push
imul
pop
repz
fxch
push
mov
addr16
insl
bound
jle
adc
je
or
loopne
or
xor
imul
push
aaa
mov
pop
dec
pop
negb
inc
pop
inc
lret
sub
nop
push
pop
divb
cmc
mov
jo
data16
test
adc
add
jae
daa
cmc
jg
xchg
out
cwtl
pusha
pop
movsb
cmc
push
xchg
ds
clc
imul
adc
pop
cmp
clc
and
bound
pop
mov
leave
es
stos
xor
push
pop
sub
or
and
in
test
inc
cmp
hlt
loop
inc
aad
sub
mov
mov
fdivrl
fiadds
mov
das
xor
mov
int3
cmp
insb
test
stc
mov
pop
mov
dec
or
pop
in
sbb
pop
outsl
dec
or
xor
fisttps
popa
stos
sahf
and
cld
jae
negl
cmp
jg
je
ljmp
int3
pop
insb
das
mov
ss
mov
cmp
test
pop
sub
mov
xchg
and
mov
push
pop
dec
stos
or
mov
xchg
sbb
movsl
dec
lahf
rcl
sub
pusha
pop
stos
inc
subl
out
pop
cmp
inc
pop
jnp
add
xchg
mov
mov
pop
aaa
push
movsl
dec
sub
cld
stos
pushf
mov
clc
pop
jne
lds
jmp
jae
outsb
pusha
dec
insb
add
mov
or
mov
inc
mov
xchg
out
daa
pop
daa
scas
lea
pop
hlt
or
inc
pop
leave
scas
add
mov
ljmp
inc
loopne
mov
pop
xor
pop
aad
inc
pop
stos
dec
das
jne
lds
lock
jb
rorb
decl
xor
xlat
sti
sti
pop
xlat
adc
push
pop
out
xor
pop
jmp
pushf
push
pop
es
hlt
mov
pop
push
push
mov
cld
aas
xchg
mov
loopne
push
ss
ljmp
cmpsb
repnz
sarb
ds
jno
mov
mov
mov
mov
adc
js
leave
add
push
fwait
xor
xchg
adc
xchg
mov
or
jns
out
xor
icebp
or
mov
ss
jbe
rcrb
push
and
fisubrs
ror
mov
xchg
mov
dec
cs
pop
cmpsb
int3
mov
pop
mulb
aad
mov
dec
ret
lock
scas
mov
push
dec
andb
push
inc
cltd
pop
shlb
mov
icebp
cmp
sbb
or
pop
pop
or
pop
pop
sub
mov
sbb
xchg
jl
push
add
and
dec
sbb
aad
push
movsl
es
dec
cmp
icebp
xchg
mov
inc
stc
and
addl
or
rclb
xchg
shrl
mov
add
cmp
shr
imul
cmp
add
push
dec
test
adc
pop
mov
jg
add
mov
and
jecxz
sub
push
mov
lret
mov
cmc
adc
sbb
jg
neg
pop
mov
gs
popa
fdivs
dec
mov
fwait
movsl
and
je
insb
aas
jno
arpl
push
stc
cmp
xor
addl
pop
fisttps
sbbb
push
jle
cmpsb
mov
add
pop
or
lds
dec
arpl
push
add
pop
fwait
out
stos
jg
lds
int3
outsb
hlt
jl
faddl
add
inc
xchg
in
outsl
cmp
pop
sbb
pop
and
sbb
sub
sub
popa
ljmp
sbb
sbb
mov
daa
sbb
inc
scas
dec
ja
test
adc
pop
mov
mov
clc
insl
iret
sbb
pop
adc
mov
js
je
sbb
pop
pop
icebp
sub
mov
jmp
nop
pop
test
insb
test
sbbl
fstp
sub
pop
iret
xlat
pop
add
pop
pop
cmp
sbb
pop
sbb
adc
pop
lods
loop
xor
or
ss
pop
xchg
lods
sti
data16
rclb
cmp
inc
mov
sbb
mov
repz
inc
pop
mov
push
in
dec
je
inc
negb
call
xchg
add
push
pop
rcrl
sub
xchg
leave
dec
div
gs
sub
push
sbb
cld
jae
cmc
ja
cmpsb
xor
ret
xchg
pop
out
mov
xchg
insb
test
pop
dec
aad
pop
pop
mov
int
in
es
shlb
cmpsb
mov
adc
sbb
pop
mov
sbb
mov
inc
lret
push
mov
jo
lock
clc
add
rep
sti
jne
ret
mov
jbe
popf
sbb
mov
mov
int3
negl
cmp
stos
mov
out
fsub
dec
sarl
dec
cs
dec
pushf
lock
push
fmuls
in
xorb
xchg
cmpsb
mov
mov
jne
lods
aas
insb
pusha
mov
lcall
pop
dec
imul
dec
adcb
clc
push
rorl
cmp
pop
std
enter
gs
mov
outsb
pusha
dec
ret
mov
lods
mov
add
mov
push
out
frstor
inc
pop
mov
dec
rcll
mov
xlat
sub
jo
cmp
push
xchg
adc
xlat
xor
push
mov
mov
mov
insl
popa
mov
lcall
xchg
and
js
inc
pop
mov
daa
push
shrb
sub
fwait
jb
sahf
cmp
adc
pop
shl
lods
outsl
sahf
push
pop
jecxz
test
cs
mov
push
fs
lret
and
rcrb
test
adc
pop
and
rcrb
lods
xor
flds
pop
sbb
pop
push
repz
pop
or
cmp
jns
dec
push
mov
pop
xchg
rcrb
and
fldenvs
pop
add
pop
pop
mov
inc
mov
repz
mov
mov
out
mov
push
push
loop
dec
in
mov
and
cmp
fsubp
shll
lods
cltd
shlb
mov
xor
inc
fimuls
in
xchg
fbld
daa
inc
ds
shlb
cmp
cwtl
and
jmp
rcrb
mov
rcrb
les
add
aaa
xchg
lahf
mov
push
jmp
lret
sbb
rcrb
jmp
test
out
or
adc
std
arpl
cmp
xchg
pop
mov
mov
xchg
stos
add
aam
outsb
mov
out
xchg
or
pop
add
adc
pop
xchg
mov
lret
xlat
imul
push
add
sub
mov
dec
add
cmpsb
sbb
in
adc
pop
fstpt
adc
loopne
jo
ds
inc
andb
leave
daa
xchg
pop
xchg
arpl
sarb
mov
pop
stc
push
test
mov
cli
add
xchg
mov
in
dec
and
loop
fwait
jle
pop
mov
lods
mov
mov
aaa
in
mov
das
ljmp
push
and
hlt
ret
pop
dec
xor
add
mov
or
pop
cmpsb
pop
data16
mov
pop
jl
sub
rcl
mov
pop
pop
push
repnz
jb
nop
inc
pop
daa
inc
jecxz
test
sbb
adc
in
out
pusha
add
fyl2xp1
pop
and
clc
rcr
cmc
adc
pop
mov
stos
push
pop
sbb
sub
push
in
dec
dec
and
les
mov
cmp
mov
pop
insb
lahf
push
sbb
sarl
int
mov
fnstcw
xor
shll
xor
inc
mov
repnz
lock
pusha
cmp
inc
pop
call
daa
push
jge
int
bound
mov
adc
or
jo
inc
jle
out
cld
add
sub
test
mov
int3
xchg
insl
push
bndstx
pop
adc
jns
xchg
mov
add
pop
dec
mull
movsl
and
mov
sbb
xor
out
xchg
out
xchg
and
fisttpl
je
lock
mov
sub
push
aam
pop
hlt
add
pop
sbb
dec
jp
sub
stc
jle
adc
lods
xchg
ds
pop
or
and
dec
test
xchg
cmpsb
cld
xor
lods
cli
ffree
ret
mov
adc
mov
pop
repz
das
cs
daa
adc
repz
add
aad
testl
popf
sub
popf
jb
xlat
lea
inc
pop
iret
xchg
popf
jne
sub
mov
nop
inc
pop
notb
mov
mov
movsb
push
jp
push
addl
sub
lea
xchg
mov
movsl
push
rcrl
mov
dec
mov
add
andb
adc
es
push
inc
jg
cwtl
rcrb
xor
test
hlt
cmp
int
insb
dec
in
dec
ret
mov
jmp
jmp
mov
fidivrl
lea
mov
dec
movsb
xor
add
push
pop
andb
adcl
mov
loopne
dec
sub
add
pop
xlat
fnstsw
xchg
mov
cmp
dec
adc
pop
loope
inc
sub
imul
aaa
ds
pop
cltd
enter
sub
fmull
lock
mov
cmpsb
mov
popa
stc
sar
and
dec
cltd
dec
xchg
mov
int3
cmp
test
xlat
pushf
nop
pop
sti
mov
xor
pop
cmp
mov
sbb
xchg
aam
ja
mov
xlat
xchg
xchg
ror
mov
icebp
xor
es
es
add
sub
icebp
mov
xor
testl
cli
jl
xchg
pusha
cmp
sub
test
xor
mov
in
adcl
lods
cmp
cmp
mov
cmc
daa
outsb
mov
ja
adc
pop
xor
fsubr
insb
je
and
xor
sbb
sbb
js
inc
or
gs
aas
scas
jo
xchg
pop
and
xor
sbb
pusha
xor
shlb
pusha
xchg
lret
mov
and
mov
mov
aam
jo
cmp
jns
inc
push
das
mov
call
sbb
jge
dec
iret
repnz
push
scas
mov
fwait
pop
jnp
fsubl
dec
movsb
aas
call
scas
mov
scas
lcall
jl
xor
add
daa
or
insl
fwait
pop
rclb
repnz
adc
adc
test
mov
movsb
orl
out
test
jle
jae
push
jmp
fisttps
out
cmpsb
mov
dec
in
dec
pop
int3
addr16
inc
push
push
inc
and
lods
mov
cmpsl
cwtl
lock
dec
add
mov
mov
jmp
sub
mov
cmpsb
shufps
jo
mov
cld
mov
cmp
and
add
ret
scas
insl
frstor
test
and
cmp
fisubl
shlb
push
sbbl
pop
mov
out
adc
test
or
in
ds
or
pusha
cmp
ljmp
sub
mov
popf
jno
pop
jl
fmuls
divl
jp
mov
inc
pusha
clc
mov
rorb
fs
rorb
pusha
push
aam
js
shlb
outsb
std
sbb
popf
mov
pop
fisubrs
repnz
fwait
adcl
adc
popa
scas
stos
xchg
inc
popa
gs
hlt
addl
fdiv
mov
aad
push
sahf
mov
pushf
mov
mov
push
mov
sub
mov
test
sub
pusha
popa
and
cmp
repnz
sub
add
int
cmpsb
out
cmpsl
or
addr16
pop
aam
andb
pop
push
rcrl
out
loopne
aam
loopne
lea
jg
les
stos
cmp
shl
push
inc
mov
inc
popa
fidivs
cmp
push
data16
xchg
in
fbstp
push
push
jns
lea
gs
mov
in
sahf
mov
jp
in
sub
jbe
lea
xor
jo
lahf
shrl
jecxz
cli
sub
xchg
clc
cmp
dec
popa
mov
push
vmovddup
mov
cmp
mov
enter
xor
outsl
shrb
sbb
popa
jne
dec
mov
icebp
subl
popa
cmpsb
jg
loop
outsb
mov
pusha
xorl
push
std
jne
jmp
cli
inc
pop
popa
adc
mov
pop
dec
xor
insb
push
andb
xor
mov
popa
and
push
inc
aaa
ret
fldenv
jbe
in
enter
inc
popa
mov
mov
fisubrl
jecxz
mov
mov
pop
inc
sbb
ds
cmp
call
xor
dec
cmp
lret
movsl
frstor
les
dec
insb
push
js
inc
sahf
xchg
andb
add
aam
mov
mov
pop
cltd
ret
jge
dec
pushf
nop
bound
loopne
mov
std
sbb
bound
in
lods
rorb
xchg
mov
pop
fadds
dec
sub
fucomi
lcall
bound
mov
xchg
jecxz
add
adc
push
or
loop
popa
and
mov
ret
ficomps
jge
jp
jbe
ret
inc
ret
popa
outsb
nop
loopne
daa
push
adc
cmp
es
int
loopne
jge
push
pusha
xlat
add
inc
pop
mov
mov
cmc
movsb
and
bswap
add
imul
bound
mov
bound
jnp
sbb
mov
jl
in
pop
imul
adc
mov
div
xchg
mov
dec
in
ja
shlb
xchg
sbb
out
xor
std
mov
add
sub
test
jnp
and
sbb
popf
loopne
cmpsb
je
aad
and
xchg
ds
sub
dec
dec
xor
jg
aad
stos
and
test
dec
lods
mov
rolb
cmc
arpl
mov
mov
enter
cmpsb
rcl
push
shlb
jle
iret
iret
jle
or
bound
dec
imul
test
inc
cmc
aam
fcoms
mov
cmp
add
sub
mov
call
lock
xorb
shlb
std
das
shll
adc
arpl
jae
dec
fdivr
add
arpl
cs
jmp
pop
test
insb
shl
movl
stos
das
call
push
lret
pusha
xchg
push
adc
arpl
insl
ds
xor
aaa
adc
arpl
jne
lea
and
jns
shlb
test
adc
mov
out
fidivrs
jmp
mul
mov
rcrl
fisttps
adcl
adc
out
mov
cmp
pop
and
cmp
shlb
cmp
add
push
arpl
pusha
arpl
dec
and
sub
jge
adc
mov
aad
xor
cmp
pop
sub
scas
or
leave
jmp
sub
jo
mov
add
fisttpll
in
div
and
arpl
and
es
pop
adc
arpl
inc
repnz
mov
lods
test
lock
pop
sbb
fcmovbe
jmp
movsl
arpl
or
sub
xchg
lea
nop
arpl
cmp
in
mov
lds
push
fs
inc
pop
push
lret
mov
lods
lock
push
in
orl
js
pop
or
aas
sbb
mov
xor
xchg
lods
es
scas
xchg
cltd
mov
pop
sbb
cmp
lods
repnz
push
lock
xor
movsl
pop
shl
push
lcall
std
sbb
jp
or
jae
pop
aad
mov
adc
pop
inc
out
push
test
push
dec
cmp
addr16
ljmp
ja
add
loop
and
xchg
repnz
mov
adc
pop
ffreep
push
insl
push
jle
mov
cld
mov
and
hlt
popf
pop
shl
jge
or
adc
add
pop
cmp
jnp
mov
xor
sbbb
or
sub
cmc
mov
fs
sub
ret
pop
repz
and
mov
ds
xchg
fs
rcrb
cmp
rorb
cmp
jns
inc
enter
add
mov
call
xchg
push
cmp
test
fs
leave
movsb
cmp
call
pop
adc
push
adc
fs
mov
mov
cmpl
dec
sub
push
int
pop
add
ret
outsl
ljmp
je
pop
push
inc
mov
and
add
gs
jmp
pusha
gs
aam
popf
clc
ja
jmp
mov
mov
fwait
into
jg
icebp
add
gs
dec
lock
addr16
pop
cwtl
inc
gs
movsl
test
in
jge
xor
mov
imul
mov
lret
imul
push
sarl
add
gs
enter
gs
incl
pop
push
jmp
lahf
mov
mov
hlt
cmpsb
std
lahf
loopne
mov
loopne
shlb
jo
xchg
push
into
in
adc
enter
test
cmc
pushf
push
gs
xchg
lock
js
adc
call
movsb
dec
fldt
dec
sbb
gs
in
imul
lret
pop
nop
mov
mov
nop
xor
imul
xlat
push
pop
sahf
mov
popa
data16
push
ds
sub
mov
ja
scas
mov
sub
fsts
lods
pop
arpl
mov
gs
pusha
mov
push
dec
ljmp
dec
mov
mov
jbe
mov
pop
ret
pop
loope
xor
inc
inc
inc
and
inc
inc
icebp
mov
pop
or
adc
push
roll
mov
push
mov
ja
mov
gs
mov
fnstenv
inc
lahf
into
inc
pop
enter
aas
imul
push
add
gs
xor
mov
loopne
enter
fucom
shlb
or
pop
mov
adc
inc
imul
dec
cmovs
cs
xchg
add
aad
inc
daa
pop
sbb
data16
mov
int3
addr16
cmpsl
and
adc
data16
xchg
inc
retw
nop
add
mov
cmp
adc
fmull
jmp
sbb
xchg
xorl
iret
or
gs
das
dec
shl
xchg
loopne
pop
mov
pushf
shlb
outsl
cli
ret
test
cli
cmpsl
pop
dec
xchg
repnz
out
fisubrs
mov
add
dec
cmp
pop
mov
pop
jae
xchg
add
fdivl
sub
and
cld
in
sti
inc
xor
dec
mov
add
