lock
fimuls
lret
add
xorl
push
repz
ret
data16
adc
xchg
add
in
mov
arpl
xor
in
mov
mov
mov
add
mov
cmp
push
add
aas
icebp
ljmp
pop
pop
xor
mov
mov
add
dec
aas
into
mov
add
sti
and
sub
fcoml
in
fwait
clc
ret
add
xchg
add
lea
jge
pop
add
icebp
pop
test
mov
add
jmp
pop
divl
mov
mov
stc
clc
adc
add
xor
mov
pop
in
sub
push
adc
fildll
in
jbe
sub
add
std
pop
dec
xchg
dec
jbe
sbb
add
jb
or
leave
stos
inc
mov
jle
jnp
add
and
jb
sub
mov
sub
mov
cmp
cwtl
int3
test
scas
jb
repnz
cwtl
gs
stos
insl
cmp
sbb
stc
mov
xor
inc
add
inc
imul
add
cli
ret
add
xchg
lods
dec
dec
insb
add
sub
push
add
arpl
test
icebp
int
add
insl
cmp
lret
out
rcrl
jne
add
add
add
add
loop
jbe
hlt
add
add
push
add
lahf
push
add
jecxz
in
sahf
call
add
jl
popa
lods
push
dec
mov
lea
add
fcoms
movb
push
nop
add
pop
sub
mov
add
out
cmp
add
add
add
fisttps
push
mov
add
into
int3
in
add
int3
xor
mov
add
add
push
add
sub
lea
add
sub
and
xchg
and
adc
dec
and
mov
loopne
pop
clc
rolb
out
je
sbb
scas
mov
add
hlt
add
repz
add
add
xor
testb
scas
mov
add
lods
inc
add
iret
popl
mov
js
jno
dec
cmpl
cltd
jae
cmp
sub
sub
mov
adcl
imul
pop
fiaddl
add
push
dec
sub
les
mov
add
or
add
add
xor
add
sub
lret
jl
add
add
jp
movsl
mov
stc
add
mov
out
cwtl
out
addb
add
jbe
iret
cmp
popf
leave
bound
mov
in
addb
sti
mov
and
mov
jmp
arpl
pop
push
add
adc
lret
sub
add
add
cmc
push
add
mov
and
mov
push
xchg
arpl
lds
pop
test
movsb
add
add
add
add
aaa
les
not
lcall
nop
add
sbb
movsl
out
test
pop
in
cmp
notl
mov
mov
push
add
xchg
sbb
orl
rolb
stos
jg
cmp
cld
daa
lea
sub
jmp
add
add
xor
imul
cmp
in
add
mov
xchg
add
cmp
addr16
xchg
add
add
imul
inc
add
mov
mov
mov
rol
or
into
shll
rcl
test
ljmp
mov
lods
out
addb
cmpl
xchg
stos
cwtl
fldl2e
dec
sbb
repz
mov
repnz
push
mov
bound
mov
add
in
sbb
mov
add
mov
add
add
and
insl
jg
enter
add
setb
ds
or
jnp
add
dec
inc
test
mov
xchg
add
inc
into
popa
sub
sub
add
cwtl
sub
add
mov
pop
add
xlat
and
jnp
mov
jae
xor
pop
in
addb
add
lret
add
add
add
add
dec
movsb
add
mov
sub
xchg
ret
insb
lcall
fcomp
and
mov
mov
push
mov
add
int
mov
js
addb
add
add
mov
jle
pop
push
add
dec
adc
xor
xchg
add
lret
mov
data16
fisttpl
jge
and
mov
loop
pop
adc
je
or
lret
and
dec
push
add
sbb
ret
loop
sub
data16
xor
push
jecxz
mov
mov
add
xor
nop
add
mov
mov
daa
jecxz
push
out
xor
push
add
pop
inc
add
daa
ret
add
add
add
sbbl
mov
imul
sbb
je
inc
add
incb
test
cmp
add
addb
out
cld
mov
fstl
cmp
adc
jecxz
add
pop
cmc
push
xchg
cmp
add
mov
add
dec
inc
inc
add
ljmp
mov
or
adc
inc
rolb
or
mov
ljmp
rolb
dec
insb
mov
mov
repnz
inc
add
add
lds
mov
jecxz
cmp
mov
push
pushf
outsb
sbb
add
mov
add
ja
stos
addr16
fsub
add
add
fdivs
push
add
mov
add
mov
shl
add
test
mov
and
mov
dec
mov
push
jl
mov
dec
imul
push
decl
adc
push
add
mov
xchg
cmpsb
add
add
cmp
pop
stos
call
in
movsb
add
add
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
add
mov
sbb
std
scas
jne
xchg
add
xchg
add
mov
cmp
add
push
add
add
add
sub
add
mov
add
add
cmpsl
jno
insb
xchg
and
mov
nop
add
sbb
aas
inc
mov
mov
mov
jb
rolb
xchg
int3
dec
addb
fst
add
jle
mov
push
pop
outsb
cwtl
outsb
cmp
pop
xor
outsl
pop
pop
outsb
xor
fstpl
addb
mov
or
cli
movsl
dec
adc
mov
bound
mov
test
pop
pop
stc
stc
icebp
cld
and
mov
push
mov
cwtl
cmp
add
test
add
add
mov
mov
imul
add
cmp
mov
add
rolb
test
add
clc
xchg
add
mov
loop
mov
add
push
ljmp
in
pop
mov
mov
jg
jmp
add
mov
inc
add
nop
add
nopl
mov
std
and
add
add
adc
jo
ficomps
add
xor
push
imul
aam
mov
sub
xchg
add
scas
push
add
pusha
add
add
stc
in
dec
out
in
push
add
aas
push
add
imul
ret
push
dec
testb
add
sub
popa
sbb
sbb
add
adc
add
add
push
and
pop
cmp
pop
scas
stos
call
add
lods
xor
inc
les
loopne
gs
out
jb
jecxz
out
rcll
jmp
loopne
ret
dec
sbb
or
add
xor
leave
jp
pop
cwtl
add
push
stos
push
add
add
push
aam
int3
lds
cmp
into
das
rcrl
jp
xor
out
decb
aaa
push
repz
ds
add
add
or
mov
mov
lret
rolb
lods
xchg
push
xchg
rolb
insl
cmp
adc
or
insb
xchg
movb
cmp
arpl
push
dec
cmp
add
push
add
loop
xchg
add
push
daa
push
add
arpl
mov
out
push
add
mov
add
add
pop
mov
mov
in
call
add
inc
add
rorl
mov
pop
arpl
jnp
cmp
xchg
and
adc
dec
insl
mov
enter
sti
inc
jl
add
dec
jp
js
popa
jb
js
add
add
mov
add
add
cld
mov
adc
jge
add
aam
and
mov
arpl
xor
mov
mov
inc
popl
mov
rolb
mov
mov
add
or
sbb
into
addb
inc
pop
movsb
add
add
js
or
daa
pop
sbb
or
pop
sub
add
sbb
pop
xchg
and
xor
add
or
jl
sahf
push
add
jl
mov
rolb
sub
mov
sub
xor
ljmp
out
mov
add
movb
or
mov
xchg
jo
and
mov
add
pop
notl
add
mov
lods
call
add
xor
push
add
add
and
test
add
stc
mov
xchg
add
mov
pop
nop
add
adc
and
mov
sbb
or
add
repnz
das
inc
add
popf
inc
add
in
and
mov
add
add
cs
cmpsb
add
mov
jecxz
xchg
add
push
add
arpl
pop
shll
mov
or
and
negl
add
sarl
mov
cmp
add
mul
add
or
add
loope
pop
clc
jns
addb
int
mov
lds
push
rolb
jbe
iret
cwtl
add
aas
mov
add
xchg
add
or
add
dec
movb
in
jecxz
shl
inc
add
add
add
mov
nop
add
jb
inc
mov
add
add
in
das
icebp
sahf
cmp
add
and
mov
jae
jge
xchg
add
or
leave
cmpsb
add
push
mov
mov
add
adc
ja,pn
mov
push
pop
lret
lods
or
fimuls
jmp
add
call
adc
jge
sti
dec
cs
xchg
add
dec
sub
mov
add
inc
add
sbb
lea
or
add
outsl
ret
jg
loop
out
inc
add
add
in
add
mov
insb
dec
into
adc
hlt
add
ficoml
cmpsl
add
mov
pusha
add
add
sbb
push
add
jne
adc
fimull
outsb
xchg
sbb
add
add
mov
add
add
mov
or
mov
jle
or
push
add
dec
cld
iret
je
out
movb
xor
lods
lret
add
data16
jns
xor
sbb
add
inc
add
xlat
in
cmp
std
cwtl
adcl
push
scas
or
lcall
jmp
add
add
lods
cmp
or
add
call
add
mov
or
hlt
add
jge
aad
imul
int
add
bswap
xor
or
sub
add
add
aam
les
adc
fimuls
fsubl
mov
add
fildll
cwtl
lcall
daa
js
mov
add
add
mov
xchg
add
adc
js
xchg
add
add
imul
jnp
add
pop
or
and
add
push
jns
in
xor
mov
mov
pop
add
lret
dec
push
add
mov
xchg
add
xor
mov
add
cmpsl
icebp
out
jp,pn
mov
add
popf
ffreep
push
add
add
add
lock
add
jle
xchg
xchg
cmp
mov
dec
pop
cld
sbb
imull
and
mov
xchg
test
lret
loop
or
cmp
add
cltd
stos
in
mov
pop
push
add
adc
add
std
and
push
pusha
add
push
add
add
in
add
mov
jae
movsl
ds
add
mov
mov
add
loop
lds
shl
nop
add
add
psubw
les
and
mov
sbb
add
pop
or
inc
add
add
lret
add
mov
add
add
add
test
push
das
jg
add
mov
repz
add
mov
outsb
insb
jno
add
add
or
add
mov
enter
push
mov
lret
add
pop
add
mov
test
out
mov
xchg
and
push
add
in
sbb
loop
xchg
jae
int3
into
and
mov
add
test
add
rolb
je
repnz
jecxz
add
fiaddl
mov
std
pop
setg
mov
add
add
testb
mov
cmp
add
lea
add
add
lahf
mov
cmp
enter
add
add
add
pushf
push
add
cltd
sub
call
mov
add
movsl
or
es
inc
xor
aam
out
repz
roll
mov
mov
mov
add
pop
push
add
sub
push
int3
push
add
fdivs
add
add
inc
pop
cmp
das
popf
addb
add
add
push
add
pushf
int3
mov
and
mov
ds
add
jmp
add
cs
or
xor
rolb
pop
fisubrl
fscale
cwtl
test
pop
sub
cmp
inc
in
sbb
ds
nop
add
xchg
add
hlt
add
loopne
repz
add
add
adc
jno
add
sbb
inc
add
add
add
add
pop
out
imul
cmp
add
xor
mov
test
add
repz
add
jo
jns
stos
out
add
add
add
xlat
adc
push
jnp
inc
testb
push
add
add
add
sbb
mov
lds
fwait
sti
test
outsb
rolb
out
xchg
add
je
sub
mov
mov
or
add
push
add
xor
mov
int3
add
add
cmp
out
hlt
add
ljmp
mov
pop
ret
enter
movsl
dec
loope
jl
add
adc
xlat
add
add
add
add
xor
jns
add
je
in
xchg
movb
jp
loopne
add
add
add
add
rolb
add
mov
add
mov
and
rolb
mov
add
gs
jmp
add
fmuls
mov
test
pop
repnz
testb
and
mov
add
add
mov
popf
jecxz
fldt
push
sub
add
pop
pop
mov
xor
cli
addb
add
xor
or
add
call
mov
test
sahf
loop
enter
mov
addl
add
popf
mov
out
shll
movsl
sbb
xchg
push
inc
sub
mov
and
lock
mov
or
add
add
fstps
mov
mov
leave
jecxz
fisubrl
je
daa
flds
inc
add
pop
testb
cs
add
mov
xchg
add
testb
sub
mov
add
mov
ror
inc
add
mov
add
mov
add
pushf
fdiv
fwait
lds
pusha
add
test
or
or
add
jg
xor
test
call
adc
add
mov
insl
cli
lock
add
int3
repz
push
mov
les
ja
mov
mov
into
inc
rep
cmp
pop
nop
add
pop
js
addr16
mov
mov
into
xchg
mov
xchg
add
sahf
std
adc
add
sub
movsl
les
sbb
sub
add
out
jo
add
mov
inc
popf
sbb
add
push
xor
jno
fnstenv
popa
xor
fnstenv
dec
addb
add
fisubl
pop
mov
adc
add
mov
inc
add
les
inc
insb
leave
mov
fsubr
xchg
sub
sbb
daa
sub
xor
das
add
or
adc
js
add
mov
daa
add
mov
add
jl
in
outsl
push
idiv
pop
add
mov
and
mov
add
mov
add
aam
jb
das
xor
xor
cmp
adc
ret
je
iret
jbe
adc
xchg
or
push
add
fnstcw
push
jge
add
scas
loop
sub
sahf
dec
push
add
add
cs
dec
daa
hlt
add
sbb
push
and
add
insl
cmp
add
add
sub
sbb
push
add
ja
add
ljmp
inc
pop
mov
js
dec
out
sub
leave
xor
mov
push
add
je
pusha
add
sub
mov
ds
ja
addb
test
add
and
mov
rcll
loopne
add
push
in
xchg
out
adc
add
sti
mov
cmc
push
add
testb
push
fdiv
add
pmullw
in
out
cmp
jg
add
pop
bound
mov
push
dec
dec
mov
dec
sbb
pextrw
sub
arpl
dec
addb
add
mov
add
addb
aad
sbb
jg
add
test
rolb
testb
gs
inc
add
and
and
mov
rolb
sbb
add
addb
insb
xor
push
lods
jg
sub
jbe
and
aas
jmp
add
add
mov
popa
xchg
not
stos
pop
test
adc
aad
out
ret
rolb
push
add
add
add
sub
jo
repz
mov
sbb
cmpsb
add
mov
push
add
stos
push
add
pop
sbb
push
mov
xchg
add
pop
testb
add
mov
leave
pop
pusha
add
dec
jmp
mov
push
add
je
push
pusha
add
stc
add
mov
jne
add
cmc
sti
mov
or
daa
lcall
push
pop
mov
sub
add
mov
add
iret
adc
mov
add
mov
add
add
outsl
fldt
scas
jno
sahf
push
cmc
aad
push
rorl
sbb
movnti
popl
xchg
add
int3
std
sahf
jne
or
add
cmp
jbe
aam
xchg
add
add
jbe
push
add
cmp
outsl
faddl
mov
fwait
sbb
mov
jecxz
data16
orl
addr16
add
sub
mov
outsb
or
shll
adc
push
aam
arpl
cs
add
mov
mov
add
fnstcw
int
enter
add
sbb
pop
add
xchg
call
add
testb
add
loopne
and
adc
xor
push
add
add
add
and
or
add
mov
jbe
test
pop
xchg
add
adc
popf
pop
push
add
mov
je
xchg
jl
addb
add
add
add
add
add
add
and
cmp
adc
add
push
out
hlt
add
subl
jge
add
add
mov
lret
std
imul
lds
or
pop
mov
sub
push
add
or
pop
sti
xchg
add
pop
incl
mov
or
add
push
add
mov
shll
cmp
cmp
xchg
add
mov
roll
mov
xorl
add
cmpl
jne
add
cmc
add
mov
or
idivl
push
add
aaa
xchg
add
sbb
jmp
add
xchg
inc
and
sarl
repz
mov
cmp
add
jge
movsb
add
adc
push
jl
add
add
mov
cmpsb
add
mov
and
ds
and
jbe
stos
add
mov
cltd
cwtl
in
addl
mov
add
xchg
jge
push
add
add
push
inc
das
js
out
popl
sub
or
add
pop
jbe
xor
inc
in
sbb
adc
mov
add
cmp
lahf
aas
enter
add
mov
push
int
xchg
cmp
repnz
mov
mov
add
xor
movsl
les
mov
popf
jg
jl
pop
jnp
pop
into
repz
int3
cmp
and
vpsubq
fsubrs
add
mov
xor
movb
or
rolb
lods
mov
jns
add
jo,pn
loop
cmp
mov
testl
je
mov
add
inc
add
add
addb
adc
imull
push
add
icebp
aaa
mov
ljmp
sub
add
push
add
mov
mov
add
push
add
dec
aad
add
push
scas
push
add
sub
add
lock
jl
add
dec
add
add
stos
jecxz
mov
cmpsl
arpl
movsb
add
daa
add
fadds
add
add
stos
or
inc
pop
aam
loop
pusha
add
mov
add
mov
je
fstpl
adc
clc
fisttpll
push
sahf
adc
fcomps
data16
push
fwait
cmp
jnp
std
rorl
pop
xchg
xor
push
add
rcll
dec
rolb
mov
add
in
add
add
in
xchg
sbb
rolb
out
jae
xor
sub
fcomps
sti
leave
jne
shl
lahf
testb
sub
jge
add
xor
test
xchg
mov
ret
cmp
add
and
mov
scas
xor
add
xchg
inc
test
fldt
outsl
push
add
mov
dec
jle
adc
jbe
cmpsl
dec
add
mov
pop
sbb
jl
add
adc
inc
add
fisttpll
cmp
jg
add
cmc
cmc
loopne
adc
inc
add
adc
out
xchg
aad
clc
ds
cmc
adc
dec
stc
pop
xor
cmp
lods
in
jmp
iret
mov
cmp
clc
jo
loopne
xor
adc
mov
std
fbld
testb
add
out
aaa
addb
test
pop
arpl
dec
jo
cld
push
add
in
mov
aam
loopne
add
clts
add
xor
movb
xchg
mov
test
sbbl
dec
inc
add
push
add
add
ret
and
lret
and
sbb
addb
mov
cmp
sarl
push
add
cwtl
adc
repz
add
jle
add
xchg
add
add
inc
add
hlt
add
xchg
add
push
add
pop
insl
les
jmp
enter
add
mov
mov
pusha
add
add
xchg
add
popf
data16
in
xor
xchg
lods
sbb
and
mov
add
add
dec
fimull
add
sahf
fwait
push
sbb
add
aas
inc
add
mov
push
add
add
stos
mov
ficompl
pop
cwtl
call
scas
adc
inc
add
rolb
xchg
dec
mov
pop
cli
and
add
and
sbb
mov
adc
scas
test
filds
xchg
sbb
and
jb
mov
push
sub
sbb
in
cli
push
add
xchg
data16
arpl
add
and
or
push
sbb
sahf
arpl
outsl
pop
mov
cmp
xor
cwtl
incl
mov
fmull
rolb
sbb
add
cmp
add
cwtl
mov
sub
add
in
sbb
add
fldt
mov
xchg
mov
cmp
inc
add
dec
pop
mov
jo
add
imul
dec
cmp
mov
add
add
pop
jb
pop
jl
add
push
enter
xlat
sub
dec
mov
add
add
pop
lds
add
add
mov
rolb
mov
fwait
cmp
inc
sub
jae
mov
xchg
mov
add
sti
mov
jg
add
movsb
add
add
sub
cmpsl
data16
out
jmp
jmp
ret
jno
sbb
add
in
push
push
mov
push
test
push
add
dec
adc
addb
ret
loopne
bound
mov
dec
dec
fisubrs
testb
add
stos
addr16
out
add
jg
leave
pop
mov
add
add
enter
and
add
loop
xor
fld
add
add
bound
mov
lret
pop
fsubrp
xchg
iret
popa
dec
out
dec
cmp
add
jecxz
add
in
insb
ja
pusha
add
fildl
push
subl
mov
fisubrs
add
xor
lcall
cmp
mov
xchg
add
dec
clc
lcall
push
add
add
out
or
imul
add
xor
mov
mov
std
cmpl
add
outsl
add
mov
repnz
outsl
jae
insb
xchg
add
mov
test
cmp
pop
loope
inc
add
add
aaa
int3
dec
add
mov
mov
add
or
add
addb
add
push
xchg
add
add
sub
bound
mov
les
sbb
push
inc
notl
pop
push
add
lea
and
add
mov
call
add
lret
sbb
mov
pop
jmp
push
pop
loopne
push
jnp
mov
adc
inc
xchg
fcmovnb
xor
lock
ret
add
mov
repz
lds
in
or
lcall
or
adc
sub
xchg
sahf
cmp
out
insb
stos
pop
xor
fidivrs
ss
icebp
sti
lock
add
add
xchg
ffreep
or
add
add
mov
addb
sbb
in
add
sti
jmp
push
xor
fadd
push
lods
sbb
fldenv
addr16
repz
sti
outsb
mov
jnp
mov
jp
loop
ds
and
rorl
add
jno
dec
dec
lds
mov
insb
pop
aaa
in
add
add
lods
repz
ret
pop
in
les
and
add
mov
jbe
push
aam
adc
xchg
aam
adc
pop
mov
xor
jno
jg
mov
or
xchg
or
jbe
inc
push
add
test
pop
sbb
xchg
dec
jle
add
arpl
push
add
into
and
add
jg
adc
enter
lods
rolb
imul
pusha
add
add
jge
int3
lock
sti
mov
pop
and
mov
addr16
add
ja
and
mov
add
pop
movsb
add
xchg
cvtps2pi
fdivl
add
add
imul
je,pn
sub
mov
adc
mov
rolb
adc
dec
pop
fnstcw
push
testb
pop
xchg
adc
test
xchg
out
add
add
add
jbe
repnz
lret
xchg
add
add
mov
rolb
xchg
xchg
add
pop
data16
cmp
add
add
icebp
repnz
push
add
and
cmp
mov
add
or
arpl
add
sahf
aas
jmp
jmp
add
inc
add
test
idivl
add
sub
add
outsl
repnz
mov
sbb
insb
inc
add
ljmp
adc
outsl
gs
mov
jecxz
xchg
addr16
popf
mov
push
add
and
add
ret
or
aaa
js
add
fmuls
add
jle
xchg
test
mov
add
pop
xchg
add
das
cmpsb
add
fildl
les
push
movsl
lret
in
sahf
lret
add
dec
pop
js
stos
bound
mov
add
gs
mov
loope
add
test
xchg
add
imul
jns
popa
sub
add
add
add
imul
xor
dec
push
xlat
cmc
add
or
loope
pop
push
add
fadd
add
add
in
rorl
add
mov
sub
push
add
add
scas
movsl
dec
sub
mov
rolb
mov
xlat
add
js
jecxz
inc
add
push
add
xchg
add
adc
ret
adcl
mov
add
add
add
add
add
xchg
add
push
ja
jbe
mov
add
mov
xor
add
or
fnstsw
add
das
test
out
aas
inc
loope
jne
add
add
pop
push
es
add
ror
add
mov
fildl
add
sub
add
push
add
inc
add
and
mov
add
and
mov
pop
sti
pop
int3
fstl
fmuls
push
aad
jle
add
add
jne
add
fisubrl
scas
pop
xor
iret
jl
mov
adc
dec
or
test
clc
movsb
add
or
cmp
add
pop
cmc
lret
mov
add
outsl
dec
mov
int3
jno
add
dec
add
cmpsb
add
xchg
icebp
dec
add
cmc
dec
fisttpl
ret
testb
add
rolb
xor
add
das
jns
mov
in
lods
inc
add
out
push
add
add
fs
add
mov
add
bound
mov
in
push
add
mov
xor
cwtl
rolb
add
mov
pop
add
out
loopne
fs
add
xor
cmp
cmp
cmp
add
jecxz
aam
mov
or
add
jmp
addr16
aam
ljmp
add
mov
xchg
add
add
add
cs
adc
and
and
icebp
test
mov
imul
push
lods
gs
mov
rolb
notl
popa
out
lods
imul
adc
pop
mov
hlt
add
out
jns
aad
das
addb
arpl
fdivrs
les
cmp
add
out
mov
ss
add
jo
sbb
cli
xor
inc
push
mov
das
lds
nop
add
add
popa
mov
in
scas
xchg
add
dec
std
std
cmp
add
inc
mov
add
mov
insl
mov
mov
cmp
jno
ja
nop
scas
and
cwtl
std
pop
mov
add
xchg
in
push
out
pusha
add
add
add
mov
jmp
pop
sub
inc
add
add
add
mov
rolb
iret
cmp
dec
daa
addb
add
cmp
lret
imul
stos
mov
adc
das
insl
mov
push
add
mov
icebp
and
mov
add
bound
mov
add
add
add
sbb
jg
jne
pushf
mov
push
imul
or
add
add
mov
adc
repnz
addb
add
sbb
mov
jmp
cs
int3
cmpsb
add
out
push
xlat
mov
jmp
add
dec
adcl
xor
ficoms
xchg
add
jl
add
add
mov
add
mov
mov
in
aad
pop
out
jge
int
dec
lods
add
cli
xchg
add
push
imul
xchg
cltd
xlat
and
add
lods
outsb
cmp
sbb
out
and
add
aam
sub
add
jecxz
add
mov
mov
mov
cmc
jl
rolb
addr16
mov
int
pop
les
pop
roll
mov
push
add
pop
fists
add
cmp
mov
sahf
inc
inc
repz
dec
adc
pop
ljmp
insb
jmp
cmp
popf
rcll
add
or
ljmp
add
addb
pusha
add
push
scas
inc
add
add
sub
push
aam
mov
mov
and
xchg
add
jo
push
jle
xchg
mov
push
xor
cmp
mov
mov
out
std
mov
add
add
xchg
jnp
mov
cmp
pop
addr16
dec
jnp
jge
addr16
stc
xlat
or
fcmovne
test
ficoml
daa
mov
fnsave
add
and
adc
mov
add
mov
mov
pop
fstpl
cli
and
mov
out
sti
cmp
mov
lea
ss
mov
insb
cltd
int
add
imul
int3
sbb
add
xor
add
add
add
xchg
add
add
popa
cmp
push
adc
cmp
test
dec
jbe
adc
dec
out
out
xor
movsl
mov
push
cs
hlt
add
pop
out
int3
inc
add
int3
jnp
add
add
pop
bound
mov
popf
dec
add
fsubl
insb
loop
insl
or
das
mov
pop
ficoms
push
mov
iret
mov
add
xor
in
sub
in
dec
or
lret
lahf
sub
int
jo
aam
sub
ret
test
loop
xchg
jge
data16
add
add
add
add
in
test
add
ficomps
add
mov
into
in
add
imul
gs
add
movsb
add
les
xchg
add
jp
add
lcall
into
inc
add
add
outsb
mov
add
push
mov
add
add
xchg
fsubrl
rcr
data16
xchg
add
add
fiadds
ljmp
jecxz
fadd
add
and
mov
mov
push
add
pop
add
mov
rcrl
add
jl
push
jb
icebp
in
aad
add
add
add
dec
push
add
sub
push
in
outsb
push
leave
cmpsl
sub
add
xor
pop
mov
sbb
add
fisttpll
mov
loop
jne
add
dec
inc
dec
dec
cmpsb
add
xor
enter
add
scas
in
inc
popa
dec
pop
into
add
addb
fistps
mov
mov
rolb
adc
cmp
add
loopne
mov
sar
push
add
xchg
xchg
flds
data16
add
add
stos
push
inc
jo
dec
xchg
add
aad
add
mov
or
pop
add
rolb
ja
lea
adc
cmpsl
cmc
xor
rcll
andl
add
icebp
mov
cmp
loope
or
add
sbb
inc
add
lret
fneni(8087
add
add
add
push
vmwrite
add
mov
add
fs
add
mov
fistl
insl
push
add
cmp
add
add
lret
aas
push
loop
arpl
jno
inc
loop
lahf
popa
pop
pop
and
add
jle
jb
mov
mov
mov
add
scas
add
add
iret
jecxz
icebp
mov
js
and
cmp
add
dec
fstpl
xor
add
mov
add
add
add
mov
add
insb
aam
and
cmp
add
jno
int3
js
add
adc
xor
test
mov
aad
cwtl
mov
bound
mov
bswap
xor
lock
adc
mov
add
sub
aam
xchg
add
adc
movsl
clc
mov
adc
fsubrs
adc
dec
mov
pushf
lock
lret
mov
xchg
dec
add
mov
adc
and
mov
mov
cmpsl
lret
stc
push
gs
push
push
imul
sahf
xchg
add
sub
cmp
filds
fwait
popa
scas
cli
roll
fldl
add
mov
xchg
add
add
cld
fisubs
pop
cmp
add
add
add
sbb
lods
push
movsb
add
bound
mov
dec
shrl
idivl
lds
add
adc
movb
jnp
call
lahf
sub
xor
bound
mov
or
mov
and
add
add
hlt
add
cld
test
out
jg
add
add
add
add
mov
dec
cmp
add
aas
sub
ds
call
mov
push
xchg
dec
add
cmp
add
mov
cmp
push
jle
lret
lds
push
add
pop
arpl
fcompl
add
push
add
rolb
dec
dec
cmpsl
hlt
add
add
mov
or
and
xchg
add
movb
add
add
add
out
mov
sub
add
stos
mov
add
mov
sbb
adc
pop
test
xor
lret
jp
add
fisubrs
loopne
adc
add
std
push
add
clc
dec
adc
adc
ret
adc
add
dec
mov
sub
dec
rolb
in
sbb
push
add
jae
inc
add
sub
add
stos
xchg
mov
cli
mov
pop
ljmp
add
lock
inc
mov
bt
add
mov
sbb
jbe
and
add
sbb
add
add
movsb
add
jbe
sub
ljmp
mov
and
mov
je
iret
push
gs
add
lahf
pop
bound
mov
add
test
int
fildl
pop
insb
popa
adc
dec
loopne
inc
inc
loop
cmp
mov
jl
mov
subl
push
jge
sub
aad
add
add
jo
pop
js
inc
shll
push
popf
mov
adc
add
mov
add
call
adc
imul
fnstsw
aam
mov
add
add
add
add
push
scas
mov
cmp
xlat
mov
popf
lea
sbb
cltd
inc
add
add
inc
add
and
add
fsts
adc
push
js
movsl
and
mov
jne
cmp
sbb
cmp
ret
add
add
mov
add
sbb
andl
add
add
daa
jle
sbb
popa
mov
enter
jge
add
add
lea
add
jg
mov
pop
pop
std
jbe
leave
repnz
neg
add
jns
add
add
mov
xchg
loopne
ret
add
push
add
mov
mov
mov
imul
jle
jb
int3
adc
dec
leave
pop
pop
pop
jle
add
inc
scas
adc
mov
loop
fsubr
cwtl
mov
jle
clc
xchg
add
mov
and
add
sub
scas
jae
cs
add
jp
add
push
in
fisubl
loopne
jno
cwtl
mov
ja
jecxz
test
mov
pop
mov
add
int
gs
cltd
clc
js
xchg
xchg
add
aas
mov
add
mov
data16
in
inc
add
iret
cmp
out
repz
rolb
enter
cwtl
popa
adc
or
ss
into
or
es
add
add
push
add
loopne
push
pop
push
xchg
imul
mov
add
add
adc
loop
mov
inc
add
sbb
loope
add
xchg
add
icebp
jp
push
add
jg
lock
add
cmp
mov
fwait
dec
mov
mov
popf
pop
pop
dec
mov
push
add
pop
roll
sbb
add
jne
dec
rorl
mov
daa
xchg
mov
fcmovu
int3
pop
jmp
addb
mov
push
lock
lahf
mov
adc
rorl
and
push
insb
aaa
adc
inc
ljmp
dec
ds
mull
aad
nop
add
pop
mov
and
pushf
mov
test
add
dec
fcoms
ficomps
add
dec
sbb
sahf
ret
fcoms
std
pop
popa
and
or
pop
add
cld
shll
loopne
mov
add
inc
add
dec
data16
add
mov
add
adc
movd
lock
sbb
add
add
sub
add
jb
pop
cmp
cmpsl
dec
insb
enter
test
xlat
lock
add
pusha
add
inc
add
add
push
add
mov
mov
jecxz
int
in
cmp
je
es
addb
add
pop
clc
push
add
mov
lea
add
add
xchg
cmpsl
dec
js
sbb
sbb
mov
add
push
inc
add
add
add
test
ficomps
cmpsl
xchg
add
and
mov
pop
pop
jbe
test
mov
lods
mov
push
add
call
add
in
inc
pop
dec
mov
jl
add
mov
std
data16
fwait
add
adc
inc
add
sbb
add
push
inc
rolb
fsubp
jg
cmp
out
loopne
daa
mov
dec
jo
rolb
insb
xor
dec
or
add
pushf
cmp
leave
cmp
add
mov
add
add
rolb
test
mov
jmp
xor
pusha
add
sub
xchg
pop
xor
testb
mov
sbb
into
comiss
std
xor
jae
daa
icebp
lahf
std
xchg
add
add
mov
loopne
lea
and
pop
push
add
add
add
xor
add
addb
repz
add
les
push
mov
jp
imul
xchg
pusha
add
repnz
add
cmp
add
neg
loopne
iret
pop
fnsave
add
push
add
icebp
daa
imul
add
jg
add
movsb
add
mov
fiaddl
mov
rcll
cmp
add
iret
or
sbb
add
scas
cmp
add
add
cli
lods
inc
push
cs
and
add
add
inc
push
pop
ret
add
js
push
mov
pusha
add
movsl
mov
lea
add
ljmp
add
pop
pop
jle
jge
roll
movsl
add
mov
stos
out
pusha
add
add
add
lahf
jecxz
jnp
add
add
cmp
add
add
mov
dec
push
add
data16
insl
adc
mov
ret
cltd
xor
mov
cltd
xorl
sub
out
testl
add
cmp
cli
xor
pop
sbb
add
cli
jle
mov
xlat
add
mov
jg
xchg
xor
nop
add
iret
fisttpll
cwtl
lahf
fwait
stos
mov
add
add
mov
fadd
add
cmc
ja
add
xchg
rolb
xlat
push
cld
or
jl
sub
mov
fcomip
adc
sub
add
push
bound
mov
mov
jl
jno
add
outsl
add
xor
lock
push
add
cmp
xor
inc
add
fdiv
js
push
add
xchg
push
add
pop
xor
push
ds
sbb
xlat
pop
adc
pusha
add
add
jg
add
adc
cs
out
dec
mov
mov
enter
sahf
push
add
lock
add
and
jns
mov
jl
decl
xchg
jle
and
lds
sti
xor
inc
cmp
add
cmp
std
jmp
add
dec
cmp
je
or
add
jno,pn
add
add
outsl
mov
hlt
add
xor
mov
xor
cmp
sbb
iret
les
fwait
cmp
cmpsl
lock
fdivp
shrl
lds
xchg
add
xor
imul
add
popa
sarl
add
add
add
add
add
add
loopne
adc
repz
add
sbb
pop
ljmp
aas
in
inc
add
add
pop
out
loop,pt
or
aas
jp
push
add
sbb
add
mov
mov
ffreep
inc
sbb
insl
addr16
pop
mov
call
ljmp
sbbl
adc
fnstsw
in
test
pop
fnstsw
cmp
addb
stos
mov
lock
jns
jb
int3
lret
test
jnp
xchg
test
sti
sub
ret
add
add
stc
sub
add
add
xchg
testb
cmp
add
into
mov
add
clc
jl
add
add
add
add
add
aaa
mov
sub
add
push
xchg
add
push
add
loopne
xor
add
mov
rcl
add
xchg
add
mov
push
or
negl
add
jecxz
add
add
push
add
mov
push
inc
add
mov
arpl
add
adc
bound
mov
das
mov
movb
sbb
xor
xchg
add
test
cmpsb
add
add
add
imul
add
addb
add
mov
add
xchg
add
imul
xchg
add
lea
xor
pop
es
stos
or
add
add
add
jnp
in
test
xchg
add
inc
add
adc
inc
add
sbb
jne
aaa
mov
add
pop
js
push
adc
jb
mov
lods
xchg
add
lea
lcall
pop
fldl
mov
gs
dec
test
in
add
sbb
mov
add
icebp
mov
push
add
jnp
inc
jbe
dec
repnz
inc
movb
add
adc
popf
jmp
dec
pop
lret
fildl
add
sbb
mov
mov
por
and
mov
or
add
add
mov
shll
pop
out
xchg
into
fcmovne
cs
mov
jo
push
add
lea
add
add
es
mov
add
add
mov
outsl
lds
sbb
add
push
add
add
repz
add
mov
dec
cld
xor
push
fstp
mov
iret
jge
mov
push
add
jge
add
cli
std
sub
mov
xor
into
mov
mov
inc
push
add
mov
testb
mov
xor
add
add
dec
adc
and
mov
inc
repnz
lret
add
mov
or
lcall
jae
je
insl
rolb
push
add
add
mov
lea
add
mov
sbb
rep
popa
jnp
mov
add
add
jns
jae
pop
repnz
outsl
pop
cmp
sahf
ljmp
add
mov
xchg
cmp
dec
lahf
aaa
mov
add
in
out
jmp
sub
pushf
inc
mov
add
cltd
xchg
add
ret
adc
add
mov
testl
and
or
or
add
xchg
add
add
cwtl
jg
add
add
cld
std
or
mov
add
pusha
add
movsb
add
icebp
adc
mov
aas
mov
dec
xor
cmpsb
add
and
add
jecxz
movb
add
add
add
cltd
add
add
mov
add
test
add
mov
ret
sbb
xchg
sub
cwtl
roll
jl
xchg
mov
dec
adc
add
rolb
and
das
inc
sahf
mov
mov
out
pop
mov
mov
dec
push
pop
aam
rcll
mov
push
add
xchg
faddl
pop
sbb
jle
je
push
adc
sub
add
lret
add
ret
add
add
mov
jns
add
aad
jns
cmp
add
data16
add
int
adc
mov
or
scas
pop
mov
pushf
out
cs
xchg
add
mov
addr16
add
fdivl
mov
lahf
ja
or
xor
xor
add
mov
jmp
add
mov
add
clc
fmul
call
dec
mov
sbb
and
cs
xor
cmp
add
mov
push
add
addb
mov
inc
add
xchg
or
inc
sbb
jle
cmp
mov
mov
or
adc
rorl
add
scas
outsb
fists
or
mov
add
xchg
aaa
sahf
das
dec
push
add
add
loope
dec
dec
pop
jae
push
add
test
rolb
rcrl
mov
addb
push
add
or
sub
xlat
lahf
and
mov
mov
outsb
fistps
enter
stos
xchg
btr
mov
sbb
movsb
add
add
gs
add
or
xchg
add
xchg
add
add
and
mov
jae
add
mov
addr16
pushf
add
add
add
cltd
inc
sbb
or
js
lret
xchg
les
je
in
lods
sbb
in
add
jecxz
add
xor
dec
call
pop
and
movsb
add
add
pmulhuw
and
mov
dec
or
add
pop
pop
test
nop
add
add
aaa
cmp
add
add
cmc
lock
pop
stos
adc
push
add
push
scas
pop
xor
adc
add
repnz
push
fidivs
add
xor
push
add
push
add
cmp
mov
cltd
imul
loopne
mov
shll
cmc
icebp
and
mov
ja
stc
fdivrl
pop
in
rolb
add
mov
rolb
push
fstpt
xor
add
add
test
and
mov
stc
out
in
sub
jp
pop
dec
enter
sbb
sub
nop
add
mov
jbe
mov
iret
add
popa
xor
insl
mov
mov
add
aaa
lcall
stos
in
push
add
sub
inc
add
ja
sub
dec
inc
add
rolb
add
mov
mov
imul
sbb
mov
mov
dec
xchg
or
or
jns
fisttpl
jns
mov
add
js
dec
imul
scas
ds
adc
cmp
add
mov
ret
pusha
add
push
add
add
lds
outsl
add
adc
leave
push
add
mov
jne
xor
add
add
add
mov
pusha
add
add
fcom
inc
jne
add
add
xchg
add
rolb
rolb
mov
add
dec
mov
and
mov
mov
dec
pop
repnz
mov
add
scas
mov
stos
sub
cli
mov
cltd
push
cmp
xlat
fmuls
adcl
cmp
outsl
sub
xchg
add
mov
add
or
in
sub
jmp
mov
clts
add
subl
in
xchg
data16
or
jp
sub
lods
push
outsl
xor
mov
mov
inc
add
fdivrl
add
add
hlt
add
add
ret
cmc
daa
mov
inc
add
dec
jns
data16
mov
add
push
cs
add
js
add
fmuls
xor
popf
aas
pop
out
test
dec
movb
or
sahf
movswl
addb
testl
incl
lea
add
jmp
ds
add
test
sub
dec
rolb
rolb
pop
pop
push
xor
push
add
add
ret
cmp
add
ja
mov
add
addr16
inc
add
add
jno
add
add
addr16
add
and
mov
jns
sbb
dec
lock
mov
rolb
xor
sti
rolb
icebp
data16
inc
add
lea
xor
add
in
add
dec
add
xchg
mov
push
jg
add
rolb
pop
popa
loope
leave
add
xor
mov
inc
add
and
sbb
sub
add
add
test
loop
int3
push
add
mov
add
jecxz
cltd
mov
sbb
add
add
mov
add
in
adc
cmc
ret
repnz
add
imul
add
add
das
mov
cmp
add
popf
sarl
subl
adcl
gs
ljmp
pop
je
loope
add
or
add
xchg
add
scas
jmp
mov
jne
bound
mov
iret
cld
stos
fldt
cwtl
loop
push
and
add
or
add
xor
add
mov
xchg
add
sarl
add
in
test
jne
xchg
pop
pop
jle
lcall
movl
divl
enter
or
enter
push
add
jns
inc
scas
sti
jo
cmpsl
rolb
je
pop
push
inc
add
add
add
pop
stos
and
add
pushf
cmpsl
pop
les
lock
add
pop
xor
repz
inc
arpl
and
mov
lea
loopne
pusha
add
je
push
pop
jo
or
pop
loopne
cwtl
push
lods
dec
clc
orl
add
mov
push
sub
add
or
out
jmp
mov
add
and
add
aaa
sub
test
add
push
aam
jno
add
add
rolb
push
add
insl
mov
push
mov
leave
sbb
aas
dec
mov
inc
mov
jns
add
add
xor
add
addr16
jne
add
sti
add
adc
and
inc
add
sbb
add
add
mov
inc
add
out
push
add
jo
cmp
xchg
adc
movsb
add
mov
mov
push
add
cmc
jne
cmp
add
add
add
mov
inc
add
add
mov
scas
sub
rolb
push
cmp
movsl
mov
enter
outsb
jno
add
add
sbb
add
xchg
lock
lcall
mov
movsb
add
add
jl
inc
add
add
je
add
in
xlat
jne
dec
data16
add
gs
roll
ret
add
mov
or
pushf
in
adc
add
jns
addr16
add
mov
add
mov
pop
mov
mov
add
stc
push
add
mov
gs
stos
sbb
je
in
add
jg
pop
cmp
add
add
and
add
scas
add
les
push
fsts
ss
add
add
push
add
add
pusha
add
imul
jne
leave
pushf
push
addb
or
arpl
add
int
jmp
inc
mov
inc
add
adc
dec
mov
out
ljmp
cmpsb
add
fstpl
xor
sbb
loopne
js
add
add
jmp
pop
push
add
cltd
push
add
test
aam
push
add
cli
adc
cwtl
lods
js
cmp
add
adc
add
jl
add
add
add
add
add
int3
in
jnp
mov
pop
mov
add
mov
add
xchg
sbb
add
add
jno
fwait
mov
fildl
inc
add
inc
add
add
lock
jecxz
lcall
arpl
cwtl
test
push
add
cmpsb
add
fdivs
out
out
lcall
bound
mov
mov
js
ljmp
add
add
add
jne
add
cmp
rolb
imul
xchg
mov
ljmp
add
push
inc
xor
psraw
pop
or
add
imul
cltd
fcoml
push
add
add
add
sahf
lahf
nop
add
sub
sahf
hlt
add
lret
inc
add
pop
sbb
xor
cmc
jno
inc
mov
add
rolb
add
mov
cmc
mov
pushl
add
add
jecxz
add
cmp
add
adc
adc
add
faddp
add
sbb
clc
jmp
xor
mov
add
push
add
xchg
add
popf
xchg
fwait
and
add
mov
inc
push
jg
mov
jg
add
movsl
repnz
cli
ljmp
xchg
add
clc
fnsave
add
xor
sti
or
scas
pop
rolb
mov
mov
scas
xor
pusha
add
cmpsl
add
add
add
add
add
jns
dec
call
lret
add
in
cmpsb
add
sub
sub
add
mov
cltd
das
aad
ret
fdivrs
add
mov
outsb
or
icebp
out
cmp
data16
flds
testl
add
add
cli
pop
sahf
cld
xchg
mov
enter
add
scas
pop
mov
push
add
jl
add
js
add
inc
adc
add
add
mov
mov
add
add
add
add
sub
clc
sub
insl
jae
pop
xor
addb
test
jmp
or
add
cmpl
push
add
inc
xor
adc
jg
not
inc
dec
mov
cmpsl
pop
inc
jg
test
add
xchg
add
add
mov
sti
mov
imul
add
test
clc
push
add
and
hlt
add
dec
inc
enter
inc
add
jle
sub
or
add
sub
jg
dec
sub
es
push
inc
inc
add
mov
movsl
lods
frstor
pop
aas
stos
ret
jle
pop
or
test
add
jnp
add
mov
add
cmp
negl
add
add
je
sub
add
or
jns
add
add
pop
mov
in
addr16
fcmovnb
jb
cmp
add
js
add
add
and
decl
test
xor
gs
pop
mov
insl
hlt
add
add
aam
mov
mov
inc
xchg
nop
add
fwait
and
cmp
stos
lock
xchg
int
cs
add
popf
addl
push
add
loope
mov
jo
add
mov
pop
mov
psadbw
xchg
add
sbb
test
add
add
andl
add
popa
mov
in
add
pop
shll
adc
add
or
bound
mov
xlat
xor
mov
add
push
jle
add
clc
cmpl
add
adcl
pushf
mov
mov
dec
imul
inc
xor
pop
loop
loop
xchg
add
xor
scas
or
jne
pop
addb
add
faddp
add
scas
push
pop
ja
add
add
pop
fimuls
dec
ret
js
fwait
in
xchg
add
mov
gs
cmp
sbb
mov
mov
lods
or
add
cmp
cwtl
out
sbb
mov
add
push
add
out
enter
aad
adc
rolb
inc
add
pop
call
scas
js
add
jne
in
inc
add
fidivrl
push
add
hlt
add
mov
lret
add
mov
add
in
push
decl
add
dec
or
movsl
add
mov
add
movsl
in
out
leave
mov
mov
mov
loope
and
mov
dec
sbb
fbld
add
add
push
gs
add
add
addr16
xchg
cmp
add
mov
jne
add
inc
add
mov
stos
xchg
jb
dec
or
sbb
dec
and
mov
xchg
jne
add
test
add
add
add
fwait
jae
add
nop
add
cmp
aaa
icebp
push
add
xchg
lds
add
and
mov
add
mov
cwtl
pop
dec
sub
pop
or
mov
clc
push
je
aas
jno
hlt
add
popa
xor
add
xor
pop
inc
add
add
out
jecxz
dec
xchg
add
add
xor
add
add
xlat
jnp
cmc
push
testl
add
inc
call
add
push
add
call
lret
add
and
dec
lock
adc
add
movb
jo
inc
add
call
push
add
mov
add
push
add
push
add
add
add
add
adc
add
push
add
dec
or
xchg
or
mov
xor
test
dec
jge
add
inc
add
dec
pop
lahf
or
add
push
add
push
and
mov
add
xchg
in
pusha
add
push
add
xchg
mov
popa
pop
fwait
mov
add
inc
pop
push
fcmove
call
and
mov
das
mul
nop
add
push
enter
jne
add
xor
and
jmp
pushf
fbld
ss
dec
stos
jbe
push
mov
xchg
add
add
mov
dec
fidivl
dec
insl
addb
adc
add
insb
adc
repnz
xchg
enter
imul
testb
cwtl
orl
add
and
pushf
xchg
add
in
push
dec
lods
int3
lahf
xchg
add
mov
repz
repz
mov
lcall
lret
sbb
loope
xchg
mov
pop
xor
nop
add
xor
js
mov
adc
inc
mov
cmp
and
mov
add
add
add
int3
mov
out
mov
add
add
push
sarl
fwait
push
push
add
jbe
call
or
repz
add
add
mov
dec
push
addl
add
mov
fdivrl
outsl
and
mov
xor
push
inc
add
pop
add
push
add
scas
sbb
add
mov
jne
sarl
pushf
and
mov
dec
add
loopne
sub
mov
sbb
add
lds
inc
inc
add
mov
cmp
jae
add
lock
loop
add
gs
sub
loope
add
rolb
insl
push
add
add
add
adc
sub
in
jg
data16
iret
sbb
add
nop
add
test
fwait
lcall
idiv
xor
xchg
add
test
lcall
fmull
addr16
lods
mov
add
cmc
rorl
mov
mov
dec
lahf
rolb
cmp
rolb
add
dec
adc
testb
add
and
mov
add
pop
cmc
stc
insl
jne
dec
xor
stos
arpl
mov
stc
aas
mov
xchg
add
iret
movsb
add
cmpsl
dec
ret
fwait
push
add
mov
pushf
add
jno
add
add
and
add
cmp
push
loop
stos
dec
lock
add
inc
add
push
lcall
popf
adc
jp
cmp
sbb
fptan
add
add
add
lds
add
add
stos
jge
add
xchg
test
mov
add
add
add
add
addr16
xchg
aaa
xor
scas
mov
add
and
mov
cmpsb
add
xchg
sahf
mov
add
add
fwait
test
addb
add
xlat
pop
ds
add
or
cmp
add
cmp
pop
in
xlat
in
dec
xchg
add
bound
mov
add
add
add
mov
jne
push
lods
repnz
add
cwtl
shll
movb
push
add
add
add
nop
add
xor
mov
add
in
push
jl
add
or
mov
add
mov
mov
or
add
es
add
sbb
add
imul
movsl
mov
in
cmp
add
jmp
fidivl
add
mov
xor
shll
jp
repnz
mov
push
add
rolb
fbld
add
sub
push
add
outsl
int
sbb
mov
add
mov
cmc
mov
int
add
adc
pop
mov
jbe
nop
add
sarl
xchg
add
add
testl
lea
push
add
add
add
add
dec
loope
cmp
inc
jne
sub
add
inc
aad
in
mov
add
xorl
add
decb
add
data16
out
add
mov
sub
and
mov
and
mov
mov
add
xor
inc
fimull
add
sti
cmp
aam
pop
fs
inc
add
push
pushf
testb
push
sub
sbb
pop
shll
sarl
paddw
in
sbb
test
and
add
pop
repz
in
cmpsb
add
fisttpl
cmc
dec
leave
mov
pop
add
add
add
add
mov
add
pop
xchg
cmp
outsb
addb
pop
add
cli
arpl
add
add
movsl
jbe
add
push
mov
add
mov
adc
call
adc
adc
dec
lock
add
test
clc
sub
mov
jge
add
jnp
add
nop
add
add
mov
mov
add
push
add
jbe
mov
pop
cmpsb
add
add
fmuls
add
sub
pop
test
pop
lcall
dec
mov
movsl
xchg
mov
inc
add
add
out
add
push
xchg
adc
fstl
ror
pop
fimuls
insl
adc
aad
mov
cmp
mov
aaa
xorl
sbb
testb
nop
add
xor
pop
adc
fwait
mov
mov
dec
inc
adc
out
mov
inc
add
lret
add
xor
add
mov
mov
testb
add
add
inc
add
add
add
sahf
mov
int3
sbb
addb
arpl
push
jno
test
rolb
push
pushf
test
and
adc
cwtl
pusha
add
ja
add
push
dec
jbe
sbb
aas
bound
mov
add
or
repnz
cltd
faddl
add
mov
mov
add
add
jl
mov
xlat
push
add
iret
cmp
scas
and
mov
xor
sub
negl
add
fnstenv
push
rolb
mov
add
subl
rolb
hlt
add
cmp
lea
xor
das
fdivrs
fisubs
xchg
add
add
and
mov
push
xchg
std
cmp
inc
add
add
add
add
mov
add
insb
leave
mov
loop
mov
jecxz
mov
push
add
js
cltd
movsl
outsl
das
sub
dec
shrl
mov
add
add
mov
in
mov
xchg
pop
aad
lret
subl
fwait
lock
std
push
push
add
mov
add
cmp
bound
mov
mov
scas
ja
iret
insl
jmp
sbb
cli
adc
testb
jl
sub
imul
mov
cmp
add
add
push
xchg
insl
adc
xchg
jle
add
testb
cmpsl
popf
sub
das
inc
in
daa
ret
stos
mov
add
mov
addb
hlt
add
cmp
jl
stos
bound
mov
add
add
mov
sbb
sbb
lret
add
jge
xchg
xchg
int3
rolb
lret
sub
sub
fwait
pop
stos
fwait
roll
in
pop
lods
or
jnp
aas
fs
loop
jg
add
mov
add
xor
inc
sbb
add
fidivl
xor
insb
fiaddl
add
mov
add
enter
xor
pop
enter
add
xchg
add
add
fwait
mov
mov
mov
add
pusha
add
add
loope
jne
ds
pusha
add
les
pop
cmp
jmp
add
jle
outsb
add
jnp
xchg
push
mov
jns
test
mov
shll
jmp
add
in
out
test
je
adc
push
add
jg
xchg
add
xorl
rorl
test
jbe
lds
add
fdivrs
dec
push
add
mov
flds
add
cmp
and
mov
jnp
add
xor
add
or
add
mov
add
add
xchg
out
xchg
add
scas
hlt
add
in
and
int
mov
add
pop
adc
js
push
mov
enter
pop
dec
paddd
or
add
sahf
fisubrs
addb
ljmp
jo
inc
add
mov
or
add
xor
lret
popf
mov
adc
out
test
ret
add
mov
add
inc
cmp
jns
movsl
fists
dec
mov
add
stos
mov
flds
out
mov
cmc
mov
jae
fdivl
mov
add
or
add
mov
xrelease
les
out
out
out
ds
add
mov
add
aam
jne
in
mov
xchg
add
icebp
es
out
aaa
add
lret
add
out
movsl
rolb
add
add
add
adc
xchg
add
jle
push
loopne
push
add
les
movsb
add
loopne
xor
call
test
cmc
push
add
add
add
xor
add
push
add
test
cli
jg
add
cmpsl
sbb
add
mov
cmp
lahf
in
in
add
sbb
imul
aam
mov
add
das
addb
xchg
lahf
out
scas
cltd
dec
inc
add
fmulp
arpl
add
add
push
dec
addb
fdivrp
in
aad
adc
add
mov
add
clc
test
add
enter
add
jg
mov
add
dec
sbb
add
xchg
add
fdiv
data16
aas
loope
mov
clc
lcall
je
or
add
dec
pop
jae
test
fildl
rolb
inc
add
jp
sbb
dec
stos
adc
add
mov
test
das
mov
add
mov
popa
rolb
mov
xor
insb
xor
out
jbe
mov
iret
lcall
fcom
add
sbb
mov
cmp
xor
mov
daa
dec
cmpsl
lock
test
add
add
add
int
fldcw
loopne
pop
loopne
scas
mov
mov
mov
ret
mov
pop
or
jns
add
push
std
pop
add
add
xchg
mov
jl
int
add
rolb
dec
movb
xorl
out
add
and
pop
mov
ja
pop
adc
jl
mov
rolb
add
add
add
mov
jecxz
add
fwait
push
add
add
aaa
clc
mov
lret
add
push
mov
push
cwtl
dec
sahf
fistpll
pusha
add
xor
icebp
mov
xchg
add
cmpsl
lcall
xchg
push
add
mov
test
pop
lods
or
lea
pop
jae
ret
add
add
ds
movsb
add
add
or
push
add
xchg
add
repnz
cld
cli
jle
das
mov
add
add
sbb
cmp
add
sbb
rolb
lahf
push
add
add
jnp
mov
xchg
mov
sbb
loop
jecxz
add
add
cmp
adc
sbb
enter
and
add
subl
cmp
add
add
fimull
add
add
int
push
add
dec
push
xchg
clc
lock
add
je
inc
add
sbb
mov
pop
mov
add
add
mov
insb
cmp
popf
and
arpl
add
decl
add
add
enter
aas
je
pop
iret
add
mov
ffree
xor
stos
in
int3
cmp
cmp
add
add
sbb
add
add
data16
jle
add
fstpt
or
xor
loopne
loop
std
sub
add
data16
add
add
push
add
sub
jg
add
mov
inc
add
push
add
in
test
mov
rolb
imul
rep
addr16
pop
rorl
packsswb
loop
xor
mov
add
sub
mov
inc
inc
sub
mov
add
shll
aad
in
fbld
mov
loope
push
add
sub
mov
add
mov
dec
pop
scas
popf
jb
cli
xor
sti
mov
pop
testb
dec
jne
add
test
scas
fcmovu
test
add
xor
sub
mov
ret
subl
aaa
int
add
sub
pop
das
xor
imul
lret
xchg
add
xchg
mov
sbb
xchg
add
int3
xchg
test
xchg
add
filds
mov
add
add
or
jle
add
add
mov
jbe
add
mov
test
add
add
pop
mov
and
mov
pop
fadds
sub
push
add
test
add
outsb
cmpsl
sarl
jno
test
hlt
add
xchg
loope
dec
daa
pop
testb
add
scas
dec
rolb
pop
fstpt
add
mov
or
int
add
add
pop
xor
popa
mov
add
push
add
add
add
add
mov
outsl
mov
sbb
adc
addb
mov
push
or
out
repz
push
mov
clc
lods
std
addb
pop
and
mov
add
cs
cltd
add
dec
rcrl
mov
add
fstpt
sub
cmc
lahf
daa
mov
fmul
cmp
add
mov
pop
repz
mov
mov
add
cmp
add
push
jns
mov
xor
cmc
mov
push
add
rolb
add
add
adc
dec
or
repnz
pcmpgtd
fisubrs
mov
xor
jb
sahf
rcrl
fnstenv
add
xor
dec
mov
inc
out
add
mov
jno
inc
in
add
andl
add
add
out
adc
aad
add
in
jne
add
fisubrs
pushf
mov
mov
add
ret
pop
mov
enter
daa
data16
in
add
add
cmp
add
cmp
fwait
add
mov
imul
mov
lds
add
mov
sbb
adc
aas
out
xor
push
lret
icebp
dec
add
pop
pop
outsl
push
push
add
repz
adc
sete
inc
add
loopne
fbstp
or
jae
lds
out
or
push
scas
push
add
ljmp
pop
dec
ja
push
lods
pop
sub
add
jl
sbb
fdivs
mov
add
out
add
add
call
fildll
mov
jae
add
pop
in
cmp
pop
pop
lods
sbb
add
add
add
jne
pop
and
icebp
shrl
or
repnz
cs
cs
adc
mov
lods
data16
sahf
repnz
ljmp
adc
movsl
int3
sub
sbb
add
dec
sub
xchg
imul
add
add
pop
push
out
cmp
mov
fwait
push
call
add
pop
jp
arpl
add
add
sti
int
mov
sahf
jne
add
xor
adc
xchg
jecxz
jo
adc
testb
add
pusha
add
add
inc
add
sub
jge
dec
mov
into
mov
popf
out
into
sbb
add
add
pushf
cli
cmp
sub
clc
mov
add
mov
add
jecxz
sub
lds
ss
add
scas
iret
jge
and
mov
int3
pop
rolb
add
fisttps
xor
add
add
and
sub
insl
shll
loop
cmpsl
mov
jecxz
add
data16
and
xorl
rol
add
push
mov
xchg
add
push
push
add
imul
int3
test
cmpsb
add
inc
add
mov
push
movb
testb
add
and
mov
mov
jmp
sub
push
add
add
xchg
popa
into
insl
scas
pop
pushl
mov
xchg
add
sbb
out
loop
cmp
jecxz
and
or
add
add
add
add
add
mov
bound
mov
in
jne
add
clc
aam
sbbl
add
je
aaa
lods
mov
xchg
pop
sbb
pop
dec
insb
xchg
cmp
mov
add
cmpsb
add
add
add
jg
sub
xor
xchg
jne
mov
xor
add
add
enter
add
fidivrl
mov
mov
cmpsb
add
cmp
inc
add
pop
push
add
cltd
sub
js
sbb
ljmp
cwtl
fwait
push
add
add
mov
add
add
xor
imul
mov
jae
repnz
into
test
add
add
popa
pusha
add
mull
pop
xor
jb
in
add
mov
add
xchg
mov
add
inc
add
pop
add
mov
mov
push
clc
cwtl
roll
jle
bound
mov
add
sbb
out
in
xor
lahf
jmp
add
sbb
add
adc
ja
add
inc
add
jmp
cmp
fcomi
add
mov
or
pop
cmp
and
mov
ret
or
inc
add
mov
add
add
fbld
add
mov
adc
dec
mov
mov
add
add
mov
pop
pop
adc
jae
dec
out
sub
divl
stos
test
std
dec
das
lret
testb
add
mov
add
adc
xor
jbe
movb
push
add
jg
pusha
add
adc
adc
popf
mov
inc
std
inc
add
add
outsl
pop
mov
mov
add
pop
or
add
xor
testb
or
mov
sbb
scas
mov
rolb
rolb
mov
loope
add
xchg
inc
add
add
add
int
add
add
dec
cs
lods
sbb
imull
adc
sub
sbb
mov
add
xchg
or
shll
nop
add
sbb
mov
and
test
pop
cmp
push
add
lods
push
add
subl
js
xor
pusha
add
cmp
aad
mov
cmp
sub
sub
movb
mov
xchg
add
add
sub
insl
fcmovu
repz
and
lret
ljmp
adc
jp
inc
add
mov
add
movb
add
and
mov
jl
xchg
xor
push
pop
pop
aam
or
add
mov
cmp
and
stc
cmp
add
test
add
xchg
add
sub
and
adc
rolb
call
repz
jmp
add
push
dec
xchg
gs
add
add
add
jmp
sbb
add
cmp
mov
xor
out
xchg
cmp
mov
pop
or
xchg
fs
int3
dec
or
add
add
jmp
inc
add
sub
push
mov
pop
mov
insl
mov
stos
test
js
mov
dec
push
add
lahf
rolb
xor
adc
add
rcll
add
add
pop
cs
jge
mov
or
cmc
hlt
add
nop
add
test
imul
and
orl
cmpsl
loope
dec
mov
loopne
nop
add
mov
and
aad
test
pop
ret
aam
ja
lods
insb
lods
mov
repnz
mov
add
fwait
iret
and
cmp
add
add
add
inc
cmp
mov
xchg
cmp
and
cs
hlt
add
add
push
add
add
push
add
scas
and
or
add
add
add
mov
pshufw
push
add
imul
add
mov
cmpsl
jno
add
jb
ror
add
or
ds
data16
add
add
add
testb
stos
lret
adc
add
push
inc
aad
dec
sub
cmp
sub
pop
lret
and
mov
in
xor
popf
xor
inc
mov
testb
xor
and
aad
loop
movsb
add
mov
jecxz
add
lret
mov
sub
dec
xchg
loop
jb
xor
sti
mov
aam
es
in
bound
mov
aad
movsb
add
cmp
pusha
add
mov
add
je
movsl
adc
add
and
mov
add
mov
jecxz
and
lods
dec
inc
xchg
and
add
loope
xchg
cmpsb
add
fs
sbb
mov
pop
lahf
jecxz
sub
inc
add
add
rorl
add
adc
push
add
jae
call
add
add
mov
lea
mov
lea
jge
sub
add
cld
or
movb
sbb
cmp
mov
xor
cwtl
lcall
add
loopne
add
dec
fucom
add
add
dec
ss
aad
pop
mov
push
fisubrs
sub
imul
ret
call
jmp
int3
jmp
sub
xlat
movsl
adc
inc
add
sub
adc
pop
lret
dec
fcomi
out
mov
add
ret
sti
jbe
iret
outsl
pop
dec
aam
lret
jmp
in
xor
mov
add
fsubl
add
loop
sbb
add
or
shll
movb
xchg
inc
add
push
pushf
repnz
push
push
add
add
add
outsb
inc
imul
add
cmp
enter
push
sbb
dec
pop
outsl
sbb
and
insl
lods
adc
pop
pop
iret
push
dec
push
add
add
xchg
add
mov
stos
jo
int3
mov
mov
mov
jne
fiadds
sti
mov
sbb
loopne
xchg
mov
jo
add
mov
add
add
mov
pusha
add
add
shll
add
add
stc
add
mov
add
xor
fildl
mov
add
add
js
mov
push
jecxz
loope
add
pop
xchg
add
add
add
aaa
int3
mov
cltd
sbb
add
mov
adc
mov
jmp
add
lock
mov
inc
add
mov
inc
nop
add
add
sahf
push
add
pop
sahf
mull
outsb
sbb
es
push
adc
add
mov
sub
mov
inc
add
int
add
les
adc
inc
rolb
sub
ljmp
push
add
out
movb
sub
pop
sbb
xchg
adc
sbb
scas
dec
adc
add
add
aam
jge
add
add
add
mov
add
add
push
lods
sub
inc
add
xchg
leave
dec
xor
and
mov
or
add
push
inc
sub
movsl
loopne
mov
popf
mov
add
pushf
insb
sbb
xchg
lret
jle
mov
cmp
add
inc
push
rolb
cmp
add
add
mov
inc
add
add
adc
push
add
add
inc
leave
pop
std
frstor
jno
das
enter
in
jbe
je
pop
or
jmp
mov
popf
fcompl
add
inc
add
cs
loope
mov
add
mov
enter
adc
add
scas
xchg
add
add
adc
xchg
push
daa
imul
rolb
fbstp
lret
mov
mov
mov
pusha
add
xchg
and
daa
sub
aam
xor
push
les
in
mov
loop
xchg
add
add
sbb
fcoms
xor
repz
cwtl
xchg
out
push
lock
inc
push
add
jne
add
sbb
jno
enter
loop
dec
ljmp
mov
fwait
inc
add
and
and
mov
cmp
xchg
add
fnstsw
cmp
clc
repnz
jae
add
add
fmull
mov
add
repnz
jae
xlat
add
mov
mov
cmp
ret
add
hlt
mov
push
mov
xchg
ret
add
add
add
mov
mov
xchg
ret
leave
mov
push
mov
nop
jae
pop
fidivrs
add
test
push
mov
xchg
ret
lcall
add
clc
repnz
jae
mov
add
call
fwait
cld
nop
jmp
jge
leave
nop
dec
mov
clc
repnz
jae
nop
fnclex
add
imul
clc
repnz
jae
pop
pop
movb
add
js
fwait
cld
nop
jmp
add
jbe
pusha
add
jmp
jae
pop
add
iret
add
and
xor
add
and
nop
jae
add
add
inc
add
mov
clc
repnz
jae
add
int
cmc
add
add
repnz
jae
rcr
add
ret
int
clc
push
mov
xchg
ret
add
lcall
roll
mov
push
push
mov
xchg
ret
hlt
aam
add
mov
xchg
add
lret
xchg
ret
fadds
roll
movsl
movsl
xor
nop
jae
add
mov
int
fwait
cld
nop
jmp
add
add
adc
add
iret
test
loope
add
cli
clc
repnz
jae
add
sbb
add
fldl
clc
repnz
jae
add
add
icebp
or
add
repnz
jae
pop
sub
pop
push
mov
xchg
ret
add
add
jmp
jno
mov
add
and
add
outsb
mov
push
mov
xchg
ret
mov
add
ljmp
sbb
cwtl
add
add
add
jmp
mov
clc
repnz
jae
jno
add
sub
nop
jae
iret
repz
add
out
inc
clc
repnz
jae
inc
hlt
lcall
jne
fwait
cld
nop
jmp
addb
add
add
clc
repnz
jae
dec
iret
cmp
xor
jecxz
mov
clc
repnz
jae
out
add
add
push
mov
xchg
ret
add
fcmovnu
loop
test
popa
add
repnz
jae
pop
add
add
lods
imul
fwait
cld
nop
jmp
add
mov
and
and
sub
clc
repnz
jae
rcrl
sub
repnz
jae
jno
sbb
add
fimuls
mov
push
mov
xchg
ret
add
add
loop
mov
jmp
lds
add
dec
lea
fwait
cld
nop
jmp
data16
add
mov
movb
sbb
inc
add
pop
dec
add
jbe
sbb
mov
xchg
ret
add
xchg
add
movsl
dec
jmp
mov
nop
jmp
add
add
add
add
add
clc
repnz
jae
stc
nop
jge
jmp
inc
add
mov
clc
repnz
jae
add
mov
div
fwait
cld
nop
jmp
stc
mov
add
add
jge
jb
daa
xchg
add
mov
clc
repnz
jae
add
jno
add
fldl
xchg
ret
add
add
add
adc
and
clc
repnz
jae
pop
shll
and
inc
lock
lods
add
push
mov
xchg
ret
out
add
nop
add
add
mov
add
clc
repnz
jae
pusha
fadds
dec
call
dec
sub
push
cmp
ret
nop
add
add
popa
sub
fadds
xchg
ret
jo
add
sub
cmpsb
add
pop
mov
clc
repnz
jae
jo
mov
adc
repnz
jae
add
jnp
loope
add
fwait
cld
nop
jmp
cmp
inc
adc
lods
xor
push
mov
xchg
ret
mov
out
imul
clc
repnz
jae
shr
hlt
add
stc
lret
push
mov
xchg
ret
jbe
add
add
cmp
fwait
cld
nop
jmp
aam
add
add
in
add
add
clc
repnz
jae
add
sub
push
push
mov
xchg
ret
jbe
add
push
dec
add
xor
clc
repnz
jae
add
pop
jno
jmp
nop
jae
add
push
pusha
add
sub
repnz
jae
lcall
enter
sbb
add
repnz
jae
add
add
mov
fwait
cld
nop
jmp
mov
add
cld
and
fwait
cld
nop
jmp
adc
add
add
add
add
add
clc
repnz
jae
out
add
pop
aam
mov
fwait
cld
nop
jmp
add
add
pop
or
repnz
jae
add
add
pop
sbb
add
clc
repnz
jae
dec
sub
pop
add
clc
repnz
jae
add
add
add
pusha
fwait
cld
nop
jmp
jl
add
add
jo
mov
push
mov
xchg
ret
jmp
xchg
imul
inc
out
add
xlat
add
repnz
andl
add
add
xchg
mov
and
push
mov
xor
mov
mov
add
fdivrs
cld
nop
jmp
mov
add
add
fwait
cld
nop
jmp
pop
cmp
cld
nop
jmp
cmp
add
sbb
cld
nop
jmp
mov
add
jo
mov
jo
push
push
mov
xchg
ret
add
sti
add
jae
ret
clc
repnz
jae
mov
stc
dec
shl
fwait
cld
nop
jmp
add
add
hlt
jl
xor
scas
mov
fwait
cld
nop
jmp
add
mov
add
and
push
push
mov
xchg
ret
add
dec
sbb
xchg
test
and
jae
pop
mov
add
mov
jae
pop
add
sbb
clc
repnz
jae
add
jne
clc
repnz
jae
add
adc
mov
push
mov
xchg
ret
add
add
imul
repnz
jae
sbb
pop
add
mov
clc
repnz
jae
mov
icebp
outsl
test
push
mov
xchg
ret
add
add
add
data16
add
pop
cmp
push
mov
xchg
ret
jnp
jl
mov
in
add
mov
sbb
xor
xchg
add
testb
push
push
mov
xchg
ret
add
push
jge
mov
add
push
mov
xchg
ret
add
add
add
lahf
call
clc
repnz
jae
add
sub
aas
adc
adc
add
mov
add
add
outsl
decl
push
mov
xchg
ret
hlt
add
jmp
xchg
push
mov
xchg
ret
add
add
out
push
clc
repnz
jae
add
roll
add
dec
loopne
or
cld
nop
jmp
sbb
sbb
popa
sbb
sar
add
jmp
lcall
add
lret
inc
add
add
add
jge
push
mov
add
cld
nop
jmp
cwtl
add
mov
add
sti
mov
clc
repnz
jae
add
adc
sub
repnz
jae
jbe
add
hlt
add
mov
clc
repnz
jae
mov
ficoml
mov
xchg
ret
sub
cwtl
add
cmp
fwait
cld
nop
jmp
stc
add
sbb
add
nop
add
add
add
nop
jae
add
je
js
cld
nop
jmp
add
lods
inc
clc
repnz
jae
leave
jl
add
xlat
add
push
jno
mov
clc
repnz
jae
push
fidivrs
and
repnz
jae
cmp
lret
test
repnz
jae
add
add
xlat
inc
add
sbb
add
sbb
cltd
rep
clc
repnz
jae
xchg
add
lret
aam
xchg
fwait
cld
nop
jmp
add
add
jge
jge
ljmp
repnz
jae
adc
jl
or
sar
repnz
jae
stc
add
add
jno
les
mov
enter
cmp
ret
fstpt
add
add
push
fwait
cld
nop
jmp
out
jo
fucomi
dec
mov
push
mov
xchg
ret
stc
nop
add
mov
nop
add
add
fwait
cld
nop
jmp
add
add
mov
fwait
cld
nop
jmp
push
add
add
cmp
push
cmp
push
filds
xchg
ret
add
cwtl
add
out
decl
mov
push
clc
repnz
jae
add
add
andb
ljmp
stc
decl
dec
rolb
rolb
pop
push
mov
xchg
ret
sub
add
call
loopne
dec
cmpw
fwait
cld
nop
jmp
push
add
add
repnz
jae
iret
add
jbe
cmp
xor
fwait
cld
nop
jmp
add
add
push
clc
repnz
jae
add
adc
add
fdivrs
add
push
mov
xchg
ret
out
mov
dec
mov
mov
add
les
clc
repnz
jae
repnz
cwtl
ficoms
movsl
dec
mov
fwait
cld
nop
jmp
call
add
pop
mov
clc
repnz
jae
fiadds
xchg
add
clc
repnz
jae
add
add
repz
mov
xchg
ret
add
ficoms
cli
pusha
clc
repnz
jae
add
add
pop
push
fwait
cld
nop
jmp
lcall
fwait
cld
nop
jmp
jl
jnp
sub
fadds
dec
dec
push
push
mov
xchg
ret
mov
add
pusha
push
mov
xchg
ret
fisttpl
mov
or
jge
fwait
cld
nop
jmp
stc
mov
out
add
clc
repnz
jae
add
add
add
add
cmpl
fwait
cld
nop
jmp
push
add
arpl
jne
jmp
add
movsl
jbe
nop
add
jno
sub
pop
xor
clc
repnz
jae
add
mov
pop
pop
add
cld
nop
jmp
lcall
lcall
sub
repnz
jae
cwtl
mov
pop
add
clc
repnz
jae
xlat
add
data16
out
leave
and
push
mov
xchg
ret
leave
jge
mov
and
push
mov
xchg
ret
add
add
add
nop
add
add
and
into
lds
in
add
jle
outsb
adc
add
repnz
jae
add
add
add
clc
repnz
jae
add
lds
icebp
push
jmp
fadds
add
add
xchg
clc
repnz
jae
popl
add
lcall
jb
repnz
jae
xchg
add
add
lea
clc
repnz
jae
jnp
add
jbe
jo
mov
mov
adc
repnz
jae
aam
mov
add
cmp
nop
jae
add
nop
add
sbb
icebp
clc
clc
repnz
jae
jnp
add
add
repnz
jae
mov
add
jne
clc
repnz
jae
repnz
jmp
add
cmp
fucomi
jl
add
mov
clc
repnz
jae
mov
sbb
xlat
fisttpl
inc
fiadds
xchg
ret
adc
iret
lcall
fwait
cld
nop
jmp
add
add
add
add
jae
add
add
xlat
add
xlat
push
add
add
add
iret
incl
add
loop
and
add
fwait
cld
nop
jmp
add
add
movsw
lcall
test
push
mov
xchg
ret
xchg
mov
add
add
xchg
clc
repnz
jae
mov
add
movsl
jne
imul
clc
repnz
jae
hlt
add
add
adc
ret
inc
add
add
pop
pop
clc
repnz
jae
jge
stc
hlt
pop
repnz
aam
push
push
mov
xchg
ret
add
adc
lcall
jmp
mov
xchg
ret
add
adc
add
mov
clc
repnz
jae
add
add
movsb
add
enter
jae
mov
rcrl
add
in
jmp
add
fildl
aam
loop
add
nop
jae
repz
stc
add
call
add
repnz
repnz
jae
add
cwtl
jnp
add
jg
and
clc
repnz
jae
movsl
mov
repnz
add
mov
add
xor
clc
repnz
jae
pop
add
mov
fwait
cld
nop
jmp
dec
dec
add
inc
adc
repnz
jae
stc
mov
add
add
clc
repnz
jae
lcall
add
push
mov
xchg
ret
add
jo
add
cmp
jl
inc
add
add
mov
jo
push
add
fwait
cld
nop
jmp
add
mov
stc
add
fwait
cld
nop
jmp
add
add
cltd
xor
clc
repnz
jae
add
add
add
clc
repnz
jae
add
add
add
fisttps
jmp
stc
mov
adc
mov
add
mov
clc
repnz
jae
aam
add
dec
add
mov
cld
nop
jmp
add
nop
pop
add
clc
repnz
jae
mov
add
sub
jae
add
fsubrp
fiadds
add
jge
andl
jae
sti
add
add
fwait
cld
nop
jmp
adc
fiadds
mov
popa
add
repnz
jae
add
lcall
mov
xchg
ret
xchg
stc
sub
fimuls
push
add
sbb
repz
mov
xchg
ret
fildl
mov
mov
push
mov
xchg
ret
movsl
xlat
lcall
movzwl
clc
repnz
jae
dec
xchg
movsl
add
je
clc
repnz
jae
add
push
clc
repnz
jae
and
pusha
aad
sbb
add
clc
repnz
jae
leave
add
cmp
clc
repnz
jae
movb
add
push
clc
repnz
jae
add
push
add
pop
clc
repnz
jae
pop
leave
roll
fsubrp
add
mov
repnz
jae
lcall
rolb
cmp
jmp
jae
add
orb
push
mov
xchg
ret
add
leave
sar
clc
repnz
jae
pop
pusha
add
xlat
adc
add
xchg
jb
fwait
cld
nop
jmp
lds
mov
and
clc
repnz
jae
stc
add
mov
sti
xor
clc
repnz
jae
jno
add
xchg
mov
xchg
ret
lret
call
clc
repnz
jae
add
add
add
inc
push
mov
xchg
ret
fcmovnu
add
add
mov
clc
repnz
jae
lds
add
add
mov
add
push
push
mov
xchg
ret
add
jl
jge
add
cltd
pop
clc
repnz
jae
stc
add
mov
ds
clc
repnz
jae
add
jnp
and
jmp
sbb
mov
inc
add
add
lcall
push
mov
xchg
ret
add
pop
jno
pusha
xchg
and
xor
repnz
jae
add
add
add
or
sar
nop
jae
add
mov
xchg
pop
mov
xor
add
clc
repnz
jae
data16
push
push
mov
xchg
ret
movsl
add
add
add
movsb
add
fwait
cld
nop
jmp
pop
add
sar
movsl
add
enter
clc
repnz
jae
sub
lcall
clc
repnz
jae
stc
add
push
add
mov
clc
repnz
jae
add
fildl
mov
sub
mov
fwait
cld
nop
jmp
add
add
add
and
fwait
cld
nop
jmp
lret
add
add
fwait
cld
nop
jmp
add
pusha
add
mov
add
je
clc
repnz
jae
add
rep
fwait
cld
nop
jmp
xlat
fadds
stc
add
add
out
add
add
add
add
cmp
iret
or
inc
add
movsl
shl
aam
mov
clc
repnz
jae
add
add
sub
push
repnz
jae
stc
mov
repnz
add
clc
repnz
jae
jmp
add
mov
daa
xor
stos
pusha
push
mov
xchg
ret
add
sub
dec
ljmp
jae
add
lret
add
clc
repnz
jae
add
repz
loop
clc
repnz
jae
add
sub
add
add
mov
clc
repnz
jae
add
sbb
add
add
add
mov
fwait
cld
nop
jmp
hlt
pop
add
lds
pusha
add
add
repnz
jae
add
add
sahf
push
mov
mov
cmp
dec
mov
push
add
enterw
add
clc
repnz
jae
add
add
add
jl
dec
xor
clc
repnz
jae
call
add
clc
repnz
jae
add
jp
jl
and
out
inc
add
add
add
push
mov
xchg
ret
jno
aam
repnz
movb
repnz
jae
add
jge
stc
call
cld
nop
jmp
add
push
repnz
cwtl
ficomps
xabort
nop
jae
lcall
adc
movsb
add
or
add
repnz
jae
xchg
and
add
add
std
inc
nop
mov
add
push
mov
add
add
add
add
mov
nop
jae
add
sbb
leave
add
decl
push
mov
xchg
ret
add
dec
incb
xor
stc
and
fwait
cld
nop
jmp
add
add
cwtl
jbe
insl
push
clc
repnz
jae
add
add
add
jl
rep
clc
repnz
jae
add
cwtl
mov
lods
clc
repnz
jae
jno
stc
pop
jo
add
jne
clc
repnz
jae
add
mov
xchg
ret
repnz
roll
xchg
add
add
jmp
xlat
add
lret
add
add
push
mov
xchg
ret
add
xlat
hlt
add
test
add
add
repnz
jae
repnz
and
or
clc
repnz
jae
stc
jbe
movsl
inc
enter
cmp
ret
out
jo
add
scas
pop
push
mov
xchg
ret
add
pop
dec
push
clc
repnz
jae
stc
xchg
rcl
mov
mov
add
fwait
cld
nop
jmp
add
add
add
add
add
push
mov
xchg
ret
and
fildl
data16
add
addr16
mov
fwait
cld
nop
jmp
add
fiadds
dec
int
stos
clc
repnz
jae
add
mov
repnz
jae
add
add
pop
clc
repnz
jae
jnp
xchg
add
hlt
add
jmp
repnz
xchg
leave
adc
pusha
dec
sti
add
clc
repnz
jae
jnp
add
jnp
xchg
add
nop
add
add
add
repnz
jae
adc
lret
add
ret
add
nop
add
xlat
fimuls
add
add
mov
add
clc
repnz
jae
add
add
push
clc
repnz
jae
repz
add
mov
out
call
clc
repnz
jae
movb
pop
jb
pop
add
fwait
cld
nop
jmp
sbb
add
jmp
jb
js
mov
push
clc
repnz
jae
add
pop
add
xchg
add
xor
nop
jmp
movsl
fidivs
hlt
add
es
fwait
cld
nop
jmp
add
repnz
add
add
roll
xchg
ret
iret
add
add
sub
ds
push
mov
xchg
ret
xchg
add
add
add
mov
clc
repnz
jae
nop
add
add
dec
add
clc
repnz
jae
add
sbb
push
sub
lock
xchg
ret
add
jmp
mov
clc
repnz
jae
lret
add
add
inc
add
movsb
add
dec
mov
clc
repnz
jae
add
fisubrs
repnz
mov
clc
repnz
jae
add
stc
pop
loop
sub
shlb
nop
jae
lcall
xor
add
push
clc
repnz
jae
xlat
mov
xor
dec
ss
clc
repnz
jae
jmp
stos
clc
repnz
jae
repnz
add
add
jmp
call
fwait
cld
nop
jmp
jl
add
add
jmp
add
cwtl
add
add
jp
fwait
cld
nop
jmp
dec
jmp
add
add
or
sar
nop
jae
add
iret
xor
mov
repnz
jae
add
movsl
add
add
test
sti
add
add
clc
mov
add
clc
repnz
jae
popl
aam
add
jne
clc
repnz
jae
inc
add
mov
pop
clc
repnz
jae
add
add
add
sti
movsb
add
and
clc
repnz
jae
dec
add
sarl
adc
repnz
jae
add
lcall
jbe
clc
repnz
jae
add
add
lods
stos
push
mov
xchg
ret
add
add
dec
leave
jnp
add
push
mov
xchg
ret
adc
sbb
shrl
nop
jmp
add
jl
mov
add
jne,pn
clc
repnz
jae
add
stc
lea
in
popf
outsl
add
add
mov
add
add
jne
fwait
cld
nop
jmp
dec
sbb
cmp
jmp
add
add
sbb
jle
fwait
cld
nop
jmp
jbe
fucomi
add
repz
fldt
clc
repnz
jae
stc
add
repz
jl
clc
repnz
jae
add
call
clc
repnz
jae
pop
add
aaa
arpl
mov
sub
add
fwait
cld
nop
jmp
xchg
lcall
push
out
inc
add
add
add
add
mov
pop
lcall
repnz
call
add
je
clc
repnz
jae
lret
xchg
add
inc
jmp
incl
jbe
add
sub
add
sbb
repz
xor
cld
nop
jmp
add
mov
movzwl
clc
repnz
jae
add
repz
push
add
jne
add
mov
clc
repnz
jae
mov
add
addl
idiv
clc
repnz
jae
add
loop
push
push
mov
xchg
ret
sti
loop
mov
add
add
repnz
jae
movsl
jge
movb
add
loop
fwait
cld
nop
jmp
add
aam
add
repnz
jae
add
sbb
filds
sti
fwait
cld
nop
jmp
add
jl
dec
add
add
xor
clc
repnz
jae
lcall
shrl
push
mov
xchg
ret
dec
add
cmp
push
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
jnp
dec
pusha
clc
repnz
jae
mov
add
ror
add
add
push
push
mov
xchg
ret
jno
add
bnd
aam
sbb
arpl
cld
nop
jmp
out
jbe
add
repnz
jae
xchg
mov
lret
clc
repnz
jae
sub
add
dec
add
jbe
clc
repnz
jae
movb
add
nop
jae
movb
add
cmp
inc
and
clc
repnz
jae
mov
push
add
repnz
mov
fwait
cld
nop
jmp
add
xlat
jnp
add
add
mov
clc
repnz
jae
cmp
add
add
mov
push
clc
repnz
jae
add
jl
jge
sbb
add
add
clc
repnz
jae
sub
mov
loop
mov
push
mov
xchg
ret
add
add
push
clc
repnz
jae
add
fdivrp
repnz
jae
add
sbb
add
jne
add
push
mov
xchg
ret
add
add
nop
jmp
add
add
add
cmp
cmp
clc
repnz
jae
push
mov
push
push
mov
xchg
ret
jbe
cwtl
fisttpl
adc
clc
repnz
jae
shll
movsl
push
mov
inc
add
jge
clc
repnz
jae
jno
dec
xlat
data16
add
clc
repnz
jae
add
cmpsl
jnp
jg
clc
repnz
jae
add
add
data16
add
push
mov
xchg
ret
add
add
add
push
fwait
cld
nop
jmp
add
add
add
pop
add
xor
mov
clc
repnz
jae
lret
icebp
xchg
add
mov
clc
repnz
jae
bnd
repnz
movsb
clc
repnz
jae
add
nop
loop
iret
add
clc
repnz
jae
add
pop
repz
xchg
add
add
add
repnz
jae
cwtl
add
mov
clc
repnz
jae
movsl
aam
add
lcall
cmpl
jnp
add
add
add
push
mov
xchg
ret
add
push
roll
mov
mov
clc
repnz
jae
add
scas
and
clc
repnz
jae
add
repz
jl
add
pop
push
mov
xchg
ret
sti
mov
add
add
repnz
jae
add
cwtl
add
hlt
pop
mov
clc
repnz
jae
add
dec
mov
fwait
cld
nop
jmp
add
dec
fsubp
mov
push
inc
add
push
mov
xchg
ret
hlt
iret
cwtl
add
enter
cld
nop
jmp
add
add
stc
data16
outsl
add
clc
repnz
jae
add
mov
push
mov
xchg
ret
incb
lcall
clc
repnz
jae
fildl
add
mov
cld
nop
jmp
adc
add
add
mov
fwait
cld
nop
jmp
and
mov
add
mov
fwait
cld
nop
jmp
add
repnz
fildl
mov
repnz
jae
nop
add
add
add
repnz
mov
xchg
ret
repnz
jl
add
mov
push
mov
xchg
ret
pop
add
mov
repnz
jae
add
repz
add
fwait
ret
clc
repnz
jae
jl
add
out
add
xchg
mov
repnz
jae
add
adc
add
daa
push
add
nop
jae
jnp
rcl
add
cli
pop
push
mov
xchg
ret
add
lcall
inc
adc
cld
nop
jmp
add
jnp
add
pop
mov
push
mov
xchg
ret
mov
popa
pop
call
clc
repnz
jae
and
add
movzwl
clc
repnz
jae
add
add
mov
repnz
jae
add
add
dec
add
sbb
clc
repnz
jae
push
iret
hlt
mov
pop
add
fwait
cld
nop
jmp
jl
nop
fiadds
add
mov
fwait
cld
nop
jmp
lcall
add
and
nop
jae
jl
aam
add
add
into
nop
push
mov
xchg
ret
add
xchg
stc
add
pop
aam
in
push
add
dec
add
mov
xchg
ret
jnp
add
cmc
movsl
dec
mov
clc
repnz
jae
add
add
nop
aaa
push
xor
add
mov
not
inc
add
add
add
ret
and
fwait
cld
nop
jmp
add
addb
aam
mov
fwait
cld
nop
jmp
movb
add
jge
test
lcall
out
incl
add
add
repnz
jae
mov
add
mov
xchg
loopne
incl
jge
add
add
add
jmp
clc
repnz
jae
add
add
add
pusha
dec
sub
test
clc
repnz
jae
lds
mov
add
mov
push
mov
xchg
ret
cwtl
sub
mov
sbb
jl
sbb
repnz
jae
add
add
jge
sbb
clc
repnz
jae
mov
add
clc
repnz
jae
add
add
and
push
fwait
cld
nop
jmp
mov
lcallw
add
push
mov
xchg
ret
add
mov
add
shll
add
fwait
cld
nop
jmp
add
pop
add
add
pop
inc
fwait
cld
nop
jmp
adc
add
add
add
sub
add
add
mov
jmp
add
add
clc
repnz
jae
fimuls
push
add
push
push
mov
xchg
ret
incb
mov
xchg
mov
jnp
push
mov
xchg
ret
xchg
add
jge
stc
mov
add
xor
clc
repnz
jae
data16
out
dec
cmp
mov
xchg
ret
iret
add
fadds
ret
sub
push
mov
xchg
ret
sbb
movsl
add
test
add
clc
repnz
jae
nop
xchg
add
nop
jmp
add
add
incb
lretw
repnz
jae
repnz
pop
add
roll
mov
test
repnz
jae
mov
mov
adc
repnz
jae
roll
call
mov
xchg
ret
add
lcall
shl
clc
repnz
jae
jo
adc
add
mov
add
add
repnz
jae
pusha
add
sub
add
loope
inc
add
sub
add
add
jne
clc
repnz
jae
data16
add
cld
nop
jmp
add
cmp
icebp
sbb
nop
jae
jno
add
mov
clc
repnz
jae
add
add
mov
les
sbb
push
mov
xchg
ret
sbb
leave
dec
add
push
mov
xchg
ret
jnp
add
and
mov
mov
clc
repnz
jae
add
repnz
jae
repnz
cmpb
push
clc
repnz
jae
add
add
xlat
add
pop
lea
jae
stc
pop
add
add
icebp
clc
repnz
jae
add
add
push
mov
xchg
ret
mov
movsl
add
jne
clc
repnz
jae
fiadds
dec
out
jmp
add
mov
mov
mov
test
jae
add
add
add
lcall
les
sub
inc
dec
xchg
daa
incb
rcl
add
pusha
clc
repnz
jae
add
add
add
jmp
adc
add
data16
add
add
add
and
cld
nop
jmp
jno
add
sti
adc
jg
clc
repnz
jae
xchg
add
jo
aam
popa
clc
repnz
jae
add
popl
dec
add
loop
inc
add
sbb
nop
jae
sub
mov
pop
clc
repnz
jae
add
add
add
add
mov
clc
repnz
jae
mov
mov
clc
repnz
jae
jbe
sub
add
mov
clc
repnz
jae
stc
iret
add
add
fildl
fildl
stc
vunpcklpd
add
add
push
add
add
movsb
add
jnp
fwait
cld
nop
jmp
add
add
iret
add
nop
jae
stc
jo
add
add
add
fwait
cld
nop
jmp
add
repz
lcall
add
cld
nop
jmp
dec
loop
mov
lahf
add
push
mov
xchg
ret
add
lret
add
mov
adc
repnz
jae
add
add
dec
hlt
add
add
in
jmp
add
clc
repnz
jae
add
fiadds
add
mov
adc
repnz
jae
add
repz
out
rolb
arpl
mov
mov
clc
repnz
jae
mov
mov
jge
dec
adc
sub
inc
add
fstpt
mov
mov
call
add
repnz
mov
xchg
jmp
lret
nop
jmp
add
add
add
add
push
fs
repnz
jae
add
mov
clc
repnz
jae
xchg
jnp
add
push
clc
repnz
jae
add
mov
repnz
jae
jge
add
cmp
je
clc
repnz
jae
add
dec
lret
push
clc
repnz
jae
add
cmp
test
nop
jae
add
add
fwait
mov
push
mov
xchg
ret
add
jnp
add
fwait
cld
nop
jmp
leave
fidivs
sti
lcall
repnz
jae
stc
add
add
sub
add
mov
clc
repnz
jae
add
roll
add
add
jne
clc
repnz
jae
jno
movb
add
repnz
jae
lds
add
ljmp
jl
jl
cwtl
fstpt
popa
add
repnz
jae
add
mov
lret
add
mov
cmp
ret
mov
rolb
ljmp
fwait
cld
nop
jmp
hlt
add
push
pusha
add
repnz
jae
fiadds
add
xchg
add
call
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
add
mov
and
repnz
jae
add
mov
ret
clc
repnz
jae
add
add
mov
call
clc
repnz
jae
add
leave
fsubrs
in
push
mov
xchg
ret
fiadds
stc
sub
add
or
inc
hlt
call
data16
add
add
test
repnz
jae
add
add
fldcw
fwait
cld
nop
jmp
adc
loop
add
popa
fs
repnz
jae
sti
fimuls
mov
fwait
cld
nop
jmp
call
pop
pop
lcall
sbb
inc
add
add
dec
lcall
dec
adc
repnz
jae
add
add
and
pop
dec
push
mov
xchg
ret
sub
cmp
mov
test
clc
repnz
jae
jnp
lcall
jmp
add
fadds
nop
shll
and
mov
push
clc
repnz
jae
loop
add
pop
mov
clc
repnz
jae
jl
test
add
add
clc
repnz
jae
adcb
add
mov
push
mov
xchg
ret
add
mov
jae
loop
add
add
add
mov
push
mov
xchg
ret
repz
add
stc
mov
clc
repnz
jae
add
pusha
add
jbe
popa
clc
repnz
jae
add
add
mov
nop
jmp
add
add
add
clc
repnz
jae
and
add
nop
jmp
add
xchg
and
shl
orps
stc
dec
add
mov
adc
add
clc
repnz
jae
add
mov
add
repnz
jae
add
add
pop
add
lcall
lcall
add
add
or
mov
xchg
ret
add
add
mov
xchg
ret
add
add
popa
add
mov
xchg
ret
add
fsub
add
repnz
jae
jno
movsl
adc
add
xor
clc
repnz
jae
add
iret
add
jno
dec
push
clc
repnz
jae
out
add
add
cwtl
lcall
mov
or
add
repnz
jae
iret
jo
dec
push
fwait
cld
nop
jmp
add
add
stc
add
add
push
mov
add
std
call
add
jl
mov
jp
clc
repnz
jae
add
add
sbb
and
repnz
jae
and
add
cmp
fwait
cld
nop
jmp
mov
out
dec
adc
add
add
dec
and
clc
repnz
jae
add
sub
loop
ds
clc
repnz
jae
jnp
mov
ss
add
clc
repnz
jae
jbe
add
aam
mov
mov
dec
push
clc
repnz
jae
add
mov
add
add
add
mov
xchg
ret
add
and
dec
add
fstl
in
pop
cld
mov
xchg
movsb
xor
sbb
add
dec
lods
push
mov
xchg
ret
stc
jno
add
add
push
movb
mov
clc
repnz
jae
add
xchg
loop
cs
clc
repnz
jae
jmp
fistpl
clc
repnz
jae
add
ds
fwait
cld
nop
jmp
add
push
clc
repnz
jae
repz
leave
and
leave
xchg
fwait
cld
nop
jmp
add
dec
add
add
add
mov
mull
repnz
jae
add
cwtl
fucomip
mov
repnz
jae
add
add
add
clc
repnz
jae
add
add
push
push
mov
xchg
ret
add
lcall
mov
jle
lret
fwait
cld
nop
jmp
hlt
fcoms
add
sbb
dec
repz
clc
repnz
jae
sub
dec
add
clc
mov
push
mov
xchg
ret
cwtl
add
add
cmp
clc
repnz
jae
jnp
pop
push
pop
mov
rolb
xchg
ret
mov
mov
mov
or
cld
nop
jmp
out
add
jge
fcmovnbe
dec
push
adc
repz
add
mov
add
xor
push
mov
xchg
ret
lcall
daa
and
clc
repnz
jae
add
add
add
out
add
in
add
popl
popl
nop
dec
or
dec
cmp
repnz
jae
add
adc
add
cli
incl
add
add
data16
add
push
clc
repnz
jae
aam
add
movsl
jl
pusha
cltd
add
clc
repnz
jae
leave
add
add
cli
mov
push
mov
xchg
ret
mov
or
or
push
mov
xchg
ret
add
add
mov
clc
repnz
jae
jnp
sub
nop
jae
shl
add
add
lods
call
clc
repnz
jae
mov
add
rolb
and
push
mov
xchg
ret
dec
xlat
add
cmp
fwait
cld
nop
jmp
aam
jo
jl
inc
add
adc
repnz
jae
nop
sub
jno
push
push
mov
xchg
ret
add
add
mov
clc
clc
repnz
jae
movsl
lcall
shr
clc
repnz
jae
add
hlt
dec
nop
add
fwait
cld
nop
jmp
mov
add
add
mov
inc
dec
push
mov
js
add
add
xor
mov
and
push
fcom
add
nop
add
inc
add
push
add
add
cld
cmc
test
mov
bound
mov
sub
testb
or
adc
adc
bound
mov
sahf
add
insb
popa
push
add
push
add
sub
in
pop
jb
mov
add
mov
dec
push
xchg
add
loopne
push
in
int
add
repnz
jbe
push
add
outsl
push
pop
or
add
lret
lcall
xchg
add
add
out
sbb
add
popf
adc
jae
add
mov
pop
sub
outsb
sbb
add
sahf
and
mov
add
mov
sbb
add
cmpsl
add
mov
lret
xchg
pop
clc
cmp
rolb
push
add
outsl
icebp
in
jbe
push
movsb
add
lahf
loop
cmp
mov
je
jmp
sbb
push
add
jno
add
fcmovb
add
xchg
pop
imul
mov
stc
mov
add
add
int3
vpmaxsw
lahf
loop
mov
jb
ljmp
add
push
add
jno
and
mov
cld
ja
add
add
add
push
add
popf
cmp
add
add
outsl
and
mov
movsb
add
add
mov
add
nop
add
add
sti
pop
pop
jmp
add
add
outsb
xchg
mov
mov
mov
jo
shll
add
push
mov
push
add
and
mov
cmp
orl
add
mov
hlt
add
mov
mov
filds
add
cs
jmp
test
adc
rolb
dec
pop
in
aam
pushl
ds
add
xor
ret
add
mov
sbbl
add
cs
push
add
add
add
push
in
inc
add
mov
add
movsb
add
ret
xchg
aaa
mov
push
add
mov
stos
outsb
jecxz
ljmp
nop
add
push
cmp
xchg
add
push
outsb
das
xor
insb
test
mov
add
test
cmp
shr
cwtl
in
daa
or
add
addr16
add
xchg
add
push
pop
sub
repnz
sub
add
insb
movsb
add
add
test
sbb
insb
cmp
add
add
jae
and
xchg
push
lret
add
inc
add
xchg
test
add
mov
add
add
add
add
mov
jecxz
xchg
fdivr
icebp
popf
mov
jne
decl
cmp
test
mov
cmp
mov
insb
mov
daa
rcll
add
mov
add
add
mov
jp
mov
xlat
enter
add
ret
or
pop
mov
add
or
mov
sbb
ds
add
mov
xchg
mov
cld
data16
sarl
arpl
popa
jecxz
shrl
outsl
xor
add
pop
xor
shl
add
cmp
or
add
inc
popa
ds
adc
sti
push
add
sbb
xchg
cmpsl
jno
sbb
add
ret
cmp
add
sbb
add
jle
or
push
pop
ljmp
mov
repnz
in
xchg
sti
adc
jg
stos
and
fdivl
add
pop
scas
je
add
mov
push
add
enter
insl
outsb
pop
aad
cmp
xor
pop
sahf
bound
mov
push
push
add
rcrl
outsl
test
addr16
fnstcw
cld
mov
add
cmp
add
test
add
dec
ficoms
addr16
add
mov
test
popf
inc
add
cmp
add
in
xchg
daa
jl
dec
mov
jg
mov
mov
cld
adc
cmp
sbb
add
dec
ret
xor
daa
and
adc
dec
lds
inc
into
or
add
mov
add
aaa
mov
sti
sub
out
lcall
hlt
add
add
fwait
mov
adc
add
add
mov
adc
mov
mov
mov
push
add
add
dec
pminub
popa
sbb
mov
add
dec
dec
sub
stos
push
pop
dec
fcmove
add
add
pop
push
xchg
add
push
add
or
loope
cmp
jge
adc
push
add
jno
pop
rolb
push
add
dec
test
sbb
add
cs
xor
add
je
mov
jecxz
outsb
imul
dec
stos
push
inc
jo
pop
mov
add
int3
into
sbb
mov
loope
jb
and
movsl
or
fst
add
mov
pop
movb
pop
sub
add
pop
es
ret
movsl
mov
movb
cmpsl
repz
push
push
push
cmp
add
pop
sbb
sbb
clc
lds
add
test
add
pop
cs
add
add
adc
xor
fistpll
data16
adc
add
add
lcall
inc
fists
add
in
clc
sub
add
mov
dec
pop
add
add
lea
arpl
test
or
aaa
xor
pop
dec
ret
jle
push
test
aam
push
add
dec
add
and
pop
dec
sub
cmpl
mov
add
add
add
add
mov
add
xor
pusha
add
push
add
add
add
adc
rolb
add
add
mov
in
cmp
cmp
ret
sbb
orl
out
add
out
sbb
add
add
in
sbb
add
pop
cmpsb
add
mov
pop
add
mov
add
mov
add
jge
es
or
add
mov
or
shll
sahf
sub
and
rolb
push
add
mov
in
pop
aam
jle
out
add
add
ja
jbe
or
ffreep
mov
mov
into
fstpt
or
rolb
xor
or
pop
sbb
add
adc
add
or
push
scas
jmp
adc
add
fldt
out
add
cmp
sub
arpl
loope
add
adc
inc
add
add
sub
or
push
add
mov
push
fldlg2
fwait
jmp
add
xchg
popf
push
add
jns
inc
inc
mov
inc
adc
pop
mov
add
into
sbb
jne
stos
in
push
add
mov
out
rolb
pusha
add
sbb
sub
push
add
add
sbb
popf
fdivrp
cwtl
add
enter
mov
add
std
xchg
mov
fistps
inc
lea
add
add
std
test
and
add
adc
fcoml
testb
and
lea
lods
cmp
xor
and
add
cld
xchg
cmpsb
add
xchg
add
mov
popf
addb
xchg
xchg
pop
mov
or
pop
cli
mov
rolb
xchg
add
insb
sahf
jno
xor
sub
shl
adc
enter
shl
aas
test
add
mov
add
outsl
adcl
mov
pop
in
ret
adc
lcall
jne
xor
xchg
jmp
xchg
sbb
lock
sbb
xchg
add
out
sahf
addl
fwait
adc
mov
push
add
add
jg
rolb
movb
xchg
add
add
mov
push
lret
add
mov
add
add
cmc
mov
nop
add
add
xor
int
pop
cli
mov
cs
lea
ljmp
cmp
add
add
clc
repz
ds
add
repz
fstl
add
xlat
test
add
gs
sbb
pushf
ds
movsl
je,pn
pop
mov
push
add
mov
add
pop
dec
js
outsl
dec
mov
jnp
cmp
or
dec
inc
add
add
and
mov
push
add
mov
lods
sbb
testb
mov
push
cwtl
jno
sbb
mov
je
cmc
cmp
sbb
cmpsl
loope
or
insb
jl
popf
arpl
xor
jb
rolb
lods
fbstp
pop
aad
mov
addl
add
mov
fsubrs
iret
pop
cmp
stos
mov
add
jge
add
add
add
add
add
imul
pushf
add
mov
sbb
add
dec
inc
add
mov
mov
mov
add
cmpsb
add
add
jp
add
mov
in
rcrl
outsl
or
mov
pop
pop
mov
add
pop
push
aam
bound
mov
push
add
jmp
addr16
add
mov
stos
and
lret
add
adc
stos
pop
fnstcw
push
add
imul
pop
insb
lcall
add
out
je
jmp
add
pop
stos
mull
add
fucomip
pop
les
stc
mov
add
clc
mov
mov
rolb
inc
mov
out
repz
add
fldl
add
leave
in
dec
adc
lock
push
add
cmp
lock
popf
cmp
add
lret
scas
or
add
xchg
add
xlat
scas
mov
dec
sub
add
add
push
add
inc
add
sbb
decl
cmp
mov
jg
ret
imul
add
lock
xor
or
push
push
add
add
mov
add
les
jne
rolb
xchg
add
imul
add
inc
add
mov
movsl
add
xor
xchg
xor
cli
mov
into
push
add
xchg
add
jge
mov
mov
pop
scas
cmpsl
push
or
add
int
dec
mov
sub
xor
data16
icebp
test
add
add
mov
addb
xor
enter
add
jbe
aam
or
and
mov
inc
add
sub
add
jo
cli
pop
int
or
add
xchg
push
pop
pop
dec
inc
xchg
shl
adc
xor
add
fdivl
sbb
pop
jl
dec
cmc
testb
in
fisttpl
and
add
add
and
push
add
mov
adc
add
xor
pushl
add
into
cltd
in
pop
hlt
add
shll
fildl
rolb
or
sbb
add
xor
push
movsl
dec
std
add
add
jbe
rolb
adc
data16
add
jnp
in
add
add
add
add
imul
push
stc
dec
test
add
pop
xchg
popa
fdivs
pop
pop
data16
add
pop
cmp
mov
add
ds
mov
fdivrs
out
inc
fsubl
aad
mov
mov
adcl
or
lods
data16
add
sub
gs
adc
push
pop
mov
scas
cmp
addb
add
mov
lea
data16
cmp
add
xchg
out
dec
sub
xchg
fwait
inc
add
adc
clc
test
mov
addr16
xor
adc
xchg
mov
push
add
add
mov
ret
inc
add
jmp
dec
scas
push
add
add
add
add
mov
aaa
push
lcall
cmpsb
add
mov
loop
faddl
add
add
inc
add
loop
xchg
das
jmp
cld
loope
lret
clc
insb
ljmp
cmc
lock
fnsave
add
jge
push
jecxz
add
daa
add
sub
add
jae
mov
xor
fisttpll
add
pop
jecxz
ret
jle
xchg
push
add
testl
add
add
js
add
add
dec
jg
sti
icebp
leave
dec
or
mov
pop
movsb
add
stc
and
mov
pushf
jge
add
add
mov
imull
ds
pop
sbb
pop
cs
stos
jmp
stos
fmull
add
jbe
scas
mov
in
xor
or
jle
subl
inc
add
lea
stc
lret
mov
mull
pop
adc
rolb
add
xor
xchg
add
lock
add
shl
add
test
add
insb
cmp
add
add
pop
rolb
std
js
lret
enter
fsts
jne
add
add
add
jmp
inc
add
pop
xlat
cmp
mov
enter
movsb
add
xlat
mull
adc
jp
repnz
dec
cld
dec
fidivl
add
push
add
sbb
and
push
or
add
add
ljmp
pop
movb
cmp
push
jo
xor
pop
fnstenv
add
add
or
inc
add
mov
add
das
mov
adc
inc
add
lock
add
add
mov
outsl
stos
cmc
pop
and
or
in
sub
add
mov
lret
mov
mov
adc
enter
fwait
cmp
mov
cli
sarl
adc
add
clc
push
add
sti
mov
mov
add
test
mov
add
pop
les
sbb
add
ret
xor
pushf
mov
cmp
push
add
add
sub
and
push
push
add
cld
mov
add
ret
loop
mov
add
adc
xchg
add
icebp
xchg
mov
aam
fimull
fdecstp
add
inc
inc
add
loopne
or
rolb
sbb
rolb
add
jl
add
sahf
data16
sbb
repnz
or
add
jb
and
test
add
in
add
add
dec
push
mov
test
mov
fisubrl
add
jns
add
add
add
add
add
add
adc
add
add
push
lret
in
fidivrl
or
data16
lea
push
scas
rolb
lret
pop
mov
in
add
lea
add
cld
mov
jns
jp
jecxz
inc
rolb
add
add
aas
and
mov
or
push
out
pop
mov
mov
les
mov
add
xchg
repz
fadds
add
mov
add
add
out
dec
lret
adc
lods
sbb
sti
fwait
push
add
nop
add
sbb
inc
add
lret
add
add
xor
out
testb
add
mov
pop
push
arpl
pop
shl
add
xchg
add
add
les
rolb
lea
add
stos
add
enter
scas
int3
push
add
sub
enter
add
dec
jnp
add
mov
push
sti
jae
add
push
add
inc
add
add
pusha
add
add
add
movsl
add
mov
lret
add
cmp
je
adc
sbb
and
mov
xor
iret
add
add
jle
shrl
loopne
push
popa
test
xchg
cmp
dec
jns
cs
lcall
xor
add
mov
loop
cmpsb
add
jae
or
add
add
add
xor
lock
cltd
mov
or
fidivl
jae
mov
jbe,pn
inc
add
imul
pop
push
add
cwtl
repz
movsl
outsl
fcoml
mov
cmp
popa
ja
inc
add
add
add
scas
inc
ret
pop
cmpsl
xor
outsb
adc
loope
add
add
add
add
call
adc
add
hlt
add
inc
std
mov
out
add
add
hlt
add
pop
fs
inc
add
pop
add
lret
xor
add
shr
mov
add
add
mov
add
add
add
add
ficoms
pushf
push
add
mov
add
int3
stos
xor
les
loop
cltd
cmp
add
mov
int3
das
push
and
mov
icebp
lods
jo
xchg
xor
mov
out
pop
repnz
mov
arpl
jnp
add
incl
mov
add
nop
add
add
xchg
pop
cld
xor
add
popa
rcl
add
mov
sub
inc
add
fisubl
loop
adc
rcrl
nop
add
mov
or
and
push
xchg
add
inc
xor
mov
push
pop
dec
pop
sub
dec
leave
push
add
add
inc
mov
in
loope
add
sahf
int3
in
adc
pop
lods
adc
push
flds
add
out
sub
jb
aaa
fdivl
add
push
add
test
arpl
xor
ret
cli
add
mov
push
ja
push
mov
mov
mov
add
ss
lcall
add
int3
hlt
add
add
mov
scas
daa
and
mov
stos
jbe
lret
add
imul
scas
jns
test
add
into
enter
cmc
add
mov
ficoms
ret
add
adc
add
std
in
adc
lods
jp
add
out
dec
cmp
test
lcall
aas
aam
bndldx
lret
fsubrs
push
add
push
add
xlat
or
cli
rorl
stc
pop
adc
mov
add
mov
push
add
push
add
jg
push
fwait
mov
inc
lret
add
test
pushf
data16
add
inc
add
and
fbld
hlt
add
add
xor
add
mov
add
mov
add
scas
add
add
rolb
je
jge
add
pop
jne
outsb
jl
stos
test
mov
pusha
add
add
into
sub
enter
mov
cwtl
lds
sub
push
stos
das
push
les
aam
ja
mov
add
add
addr16
outsl
cmp
je
dec
dec
insl
mov
mov
and
mov
xchg
jmp
add
mov
add
in
sahf
hlt
add
add
push
add
testb
iret
mov
adc
add
leave
sub
add
xor
mov
fwait
and
add
jge
add
stos
mov
aad
push
add
add
dec
add
out
cmp
mov
rorl
add
add
jo
loopne
mov
repz
jmp
push
add
cmp
aas
adc
arpl
add
add
arpl
movb
add
movsbl
add
and
mov
gs
sarl
test
int
mov
pushf
add
add
xor
add
dec
adc
adc
add
cmpsl
sahf
mov
add
mov
add
pop
jb
and
push
add
xor
rolb
xchg
insl
outsl
inc
adc
add
fdivs
jb
cmp
fnsave
cli
pop
push
add
jo
xor
int
sbb
add
add
stc
movsl
mov
addr16
xchg
pusha
add
popa
add
add
shll
push
or
add
ficoml
out
cmp
adc
js
aaa
lea
dec
aaa
pop
sub
addb
add
add
jge
push
add
dec
ret
repnz
and
mov
add
mov
mov
inc
add
or
push
add
fwait
inc
add
test
push
pop
das
sub
add
mov
push
imul
out
incl
je
jl
dec
mov
push
add
mov
cwtl
mov
insl
adc
add
add
bound
mov
add
pop
bound
mov
add
mov
add
or
insb
popa
popf
outsl
mov
lcall
add
or
mov
add
jg
jp
movsb
add
cltd
push
lcall
js
push
cmp
fistl
inc
add
add
repnz
shll
jne
add
jb
xchg
add
addb
add
xchg
add
addb
add
add
mov
add
add
add
add
add
test
mov
leave
jmp
imul
mov
jbe
and
jnp
push
add
add
jno
lds
mov
out
cmp
add
mov
xchg
add
fsubrl
add
add
mov
mov
add
add
add
fsubp
inc
add
mov
inc
or
add
xor
pop
stos
sahf
fwait
push
add
or
mov
add
add
push
add
pop
push
add
add
fwait
jnp
xor
sbb
add
mov
push
sti
or
aam
fidivrs
and
xchg
les
xor
xor
mov
test
add
add
cmpsl
ds
add
cmc
movb
testb
add
scas
xor
fsubl
pop
les
idivl
lahf
lcall
push
mov
insl
loopne
push
add
add
cmc
roll
add
add
lock
add
add
mov
or
test
btr
add
in
add
fisttpl
add
rorl
insb
inc
add
push
fdivs
aaa
fistpll
int
push
add
add
push
add
mov
dec
in
in
imul
mov
add
jge
loop
sub
adc
cmp
testb
xor
add
add
ds
mov
cli
mov
imul
add
pushf
add
xchg
mov
add
mov
add
dec
pop
mov
cmp
out
and
rolb
pop
aad
add
sar
cmpsb
add
add
pop
sub
or
add
add
fwait
dec
pop
xor
leave
testb
mov
mov
add
pop
jne
add
or
lcall
add
fsubrl
pop
mov
fsubrp
jae
pusha
add
mov
add
mov
lret
jmp
add
mov
add
cmp
scas
add
mov
icebp
add
hlt
add
push
add
add
daa
add
push
pop
cmp
sbb
add
sbb
dec
movsl
das
lea
dec
dec
rolb
out
arpl
xchg
loop
das
addr16
or
into
and
mov
add
out
dec
push
add
add
scas
mov
add
inc
add
mov
cmp
or
add
add
mov
dec
and
mov
mov
movb
js
add
mov
jg
roll
add
add
aas
movb
add
mov
add
in
int
gs
sbb
test
mov
xrelease
sahf
xchg
lods
xor
test
sub
jmp
add
jb
cmpsl
dec
jbe
ds
arpl
dec
in
adc
gs
movsb
add
aad
xchg
or
iret
outsb
cmpsl
jbe
rolb
adc
add
add
ljmp
add
jo
mov
add
cmpsb
add
xor
sub
jbe
adc
add
cli
dec
xchg
add
jl
add
add
pop
cmpsl
icebp
push
add
xlat
jnp
data16
pop
or
add
test
mov
add
pusha
add
add
icebp
jge
mov
cs
dec
dec
shl
inc
push
testb
ljmp
push
mov
add
add
and
test
clc
mov
dec
jnp
movsl
or
adc
pop
js
add
mov
jmp
xchg
add
and
mov
andl
data16
mov
add
add
xchg
add
pop
and
lcall
add
adc
cmp
add
mov
int
cwtl
xor
adc
add
xchg
add
cmp
xor
mov
pop
fdivrl
mov
add
sti
imul
add
cmp
add
addb
int3
xorl
loopne
enter
and
add
mov
or
push
add
lods
and
mov
fists
imul
enter
add
test
inc
add
pop
mov
mov
xchg
in
sbb
add
add
jb
addl
add
xchg
cmpsl
inc
add
cmp
popf
sbb
sub
jbe
xor
mov
addb
add
gs
dec
inc
add
rcll
xchg
cmp
lcall
add
pop
pop
add
pop
xchg
insl
pop
push
lds
cltd
add
pushf
add
add
loopne
fwait
jge
adc
jmp
gs
add
rolb
dec
hlt
add
add
push
iret
inc
add
pop
pop
stos
dec
inc
add
fisttpll
add
test
pop
cmp
push
das
add
add
out
add
jae
add
ljmp
add
inc
xor
jp
add
mov
mov
mov
push
inc
add
mov
dec
sahf
xorl
jnp
add
add
and
int3
testb
add
add
add
pop
jno
pushf
jb
vcvtdq2ps
add
jmp
xor
cltd
out
dec
inc
add
mov
mov
insb
movb
add
divl
mov
jg
jae
dec
movb
add
push
adc
inc
add
xchg
int3
stos
xor
mov
leave
aas
fldenv
inc
mov
arpl
add
mov
add
sbb
jle
jnp
addb
cli
push
add
or
stos
loope
fld
add
lods
sub
lds
stos
add
mov
jecxz
ds
add
add
mov
test
nop
add
int3
xchg
mov
lods
jp
iret
xlat
ja
add
push
inc
xor
xchg
cltd
cwtl
push
daa
xor
dec
in
rolb
fsubrs
jne
add
cmpsb
add
pushf
pop
mov
add
add
out
pop
jl
add
adc
push
imul
adc
add
lds
sti
testb
add
add
hlt
add
lods
aad
ficomps
push
add
scas
push
pop
push
mov
outsb
clc
mov
insl
mov
test
jecxz
add
lret
add
or
addb
out
les
cmp
in
repnz
add
fsubrs
xchg
into
cmp
les
or
push
add
add
add
ja
in
inc
ret
dec
sub
mov
cmp
jmp
jns
add
pop
jl
add
add
add
add
add
jb
ror
or
lcall
add
sub
mov
jbe
push
aas
xchg
cmp
jo
push
or
pushf
das
cld
lods
inc
add
add
shrl
jle
add
mov
add
or
dec
dec
dec
iret
notl
add
add
add
add
ret
fcmovbe
cli
mov
add
mov
test
mov
add
add
and
nop
add
or
inc
add
xor
mov
fdivl
aad
addb
lods
divl
shl
adc
icebp
mov
gs
xchg
add
xchg
sub
jl
add
add
add
and
mov
cmp
add
sub
add
xor
cmp
fmuls
cmpsb
add
add
in
adcl
sub
icebp
push
add
jp
gs
add
mov
sbb
mov
add
pop
add
stos
imul
push
add
bound
mov
arpl
push
push
jno
cmp
add
test
xor
add
int
add
pop
add
add
gs
aam
push
inc
add
pop
adc
mov
add
sub
xchg
stos
lock
add
add
add
enter
cmp
pushf
add
mov
repz
test
ja
add
stos
pusha
add
mov
mov
or
add
psubusb
jmp
clc
mov
push
add
add
mov
add
push
repz
add
fists
add
jns
jge
add
push
insl
pop
add
mov
jo
test
xor
sbb
dec
and
addr16
pop
mov
xchg
add
push
adc
or
xchg
add
add
pop
sub
add
je
pop
fstl
add
dec
dec
push
repnz
xchg
clc
cmp
xor
in
xchg
add
add
add
add
loope
test
rolb
icebp
xor
push
adc
jp
ljmp
and
cs
and
add
mov
loopne
xlat
inc
add
inc
add
jge
pop
mov
insb
and
add
aas
in
add
enter
add
in
addb
add
add
insb
pop
cmp
jge
sahf
add
and
xor
xor
mov
dec
xor
add
mov
fstps
jp
out
mov
test
stc
sbb
aad
sub
lret
cmp
jno
xorl
add
xor
enter
add
out
rcrl
cmp
push
add
ds
shl
add
popf
inc
mov
insl
int
mov
add
pop
sub
add
add
xorl
and
mov
loop
insb
imul
add
mov
add
movsl
add
fcomp
add
mov
nop
add
pop
lods
andl
adc
imul
dec
cwtl
pop
or
add
pop
pop
mov
and
pop
mov
mov
add
fsubr
rolb
cmp
add
mov
and
ja
push
add
sub
jg
add
mov
push
xor
outsl
xor
add
add
add
cmp
call
add
lock
sbb
out
jo
adc
and
mov
in
sub
mov
dec
mov
and
mov
outsl
pushf
scas
movb
int
sti
leave
xor
add
add
push
push
add
cwtl
xchg
add
inc
sub
lea
add
les
sbb
data16
add
add
add
add
add
add
pop
jnp
dec
or
add
add
mov
mov
add
adc
fdivs
mov
addr16
iret
addb
add
add
scas
add
add
add
add
mov
stos
mov
inc
add
mov
add
test
loope
iret
mov
jge
add
aad
into
inc
add
and
mov
cld
out
gs
add
push
add
mov
and
mov
push
cmp
sub
add
add
and
mov
jp
add
sbb
add
ja
pusha
add
ret
stos
std
lahf
xchg
add
mov
cmp
lea
stc
pop
mov
int
add
xchg
add
push
mov
adc
loope
add
jg
mov
lds
repnz
add
test
xlat
mov
xor
icebp
les
test
flds
addr16
add
inc
add
sbb
add
xchg
add
add
cmpl
add
sub
add
cmp
in
je
add
pop
jge
xor
mov
add
popl
nop
add
fstpl
cmpsl
imull
insl
adc
sub
call
pushf
stos
mov
mov
mov
cmovnp
adc
cmp
and
add
xchg
add
inc
pop
lcall
and
mov
testb
add
in
mov
lock
add
pop
pop
push
icebp
mov
fsubs
add
add
mov
mov
dec
xor
or
add
push
add
add
rolb
fld
add
push
add
lea
mov
imull
inc
add
inc
aad
lret
push
int3
pop
js
aas
clc
adc
cmpsl
or
sbb
add
je
or
gs
add
aad
sub
aaa
push
xchg
outsb
pop
enter
add
jnp
lret
add
or
movsb
add
test
cmpsl
sbb
add
inc
add
add
add
movsb
add
add
xchg
add
je
and
mov
mov
ret
cwtl
testb
add
lcall
shll
cmp
xor
or
or
les
or
add
add
sbb
int
add
cmp
mov
addb
push
int3
adc
cmp
ds
fwait
pop
imul
add
add
add
sub
add
sub
add
push
daa
je
aad
movsl
inc
add
add
mov
inc
add
add
jae
fdivrs
push
add
movsl
push
add
and
add
test
mov
jns
stc
push
movsb
add
insb
push
add
push
add
pop
out
ljmp
add
add
adc
add
adc
pushf
mov
test
sbb
add
mov
add
cmp
and
add
fdivs
jmp
mov
add
aad
add
cltd
xchg
nop
add
ja
add
cmp
cltd
cmpsb
add
cmpsl
pop
xor
and
test
repz
jmp
add
mov
in
add
and
mov
ret
das
cmp
inc
les
cmp
inc
vmovlps
add
dec
and
xor
in
addb
jo
sub
aas
pusha
add
mov
adc
fisubrl
adc
pop
jae
pop
dec
ror
mov
cmc
dec
inc
add
dec
pushf
cmp
data16
fs
xor
jnp
mov
xor
mov
push
add
add
add
inc
add
add
jmp
cmp
add
add
add
add
mov
inc
mov
and
mov
add
fcomps
mov
add
sub
and
mov
cmpsb
add
pop
add
pop
dec
dec
or
movb
add
pop
sbb
pop
cmp
add
test
add
mov
aaa
fprem1
rolb
add
bound
mov
add
adc
pop
add
add
adc
jnp
cli
push
add
mov
fdivrl
fisubs
add
cld
push
add
stos
mov
add
add
divl
add
add
outsb
push
add
or
pop
aad
add
dec
stos
pop
cmp
addb
add
add
in
stos
in
rcll
xchg
add
and
cmpsb
add
add
mov
loope
scas
repnz
add
add
in
lods
pop
into
std
dec
stos
inc
add
rolb
sub
outsl
and
mov
insl
cmp
ror
inc
add
out
and
stos
add
or
jmp
add
jo
int
add
dec
push
add
int3
add
mov
add
add
add
cli
in
or
mov
add
add
test
xchg
scas
out
and
add
push
xchg
add
cmp
add
outsl
pop
jne
jmp
out
add
or
add
add
and
add
imul
test
fwait
xchg
add
add
jmp
inc
add
push
add
inc
add
jne
xchg
je
cwtl
push
or
cmp
add
test
cmp
xor
cmc
shll
pop
push
add
mov
jnp
cmp
mov
mov
add
add
inc
add
xchg
add
aaa
jno
dec
fisttps
mov
fwait
ret
add
mov
xchg
movsl
sahf
add
mov
aaa
push
mov
mov
add
call
add
pop
dec
mov
jge
xchg
jge
in
add
add
jne
mov
adc
fsubrl
mov
pop
bound
mov
push
add
test
add
dec
pop
pop
mov
ja
data16
add
add
pop
cmp
adc
lods
and
pop
push
insb
mov
add
add
pop
ficompl
and
lds
sbb
pop
sbb
sbb
adc
add
push
dec
daa
mov
add
hlt
add
adc
jg
frstor
inc
add
add
movsb
add
inc
imul
mov
mov
mov
add
add
data16
add
jns
cmp
rorl
dec
loopne
out
and
xchg
add
pop
sbb
add
sbb
data16
dec
sbb
je
aaa
fstps
cmc
lock
sub
in
mov
mov
add
add
add
and
dec
sbb
mov
out
add
add
sbb
xor
dec
inc
add
add
mov
cld
adc
mov
mov
push
add
add
mov
stc
std
cmpsl
mov
jle
pop
hlt
add
mov
popf
jg
or
add
add
mov
mov
ficomps
das
loopne
xchg
cs
ficoms
int3
mov
imul
cmp
inc
jb
push
imul
add
add
or
into
nop
add
aaa
mov
add
jle
add
pushf
inc
add
add
pop
repnz
push
aaa
out
mov
add
stos
jecxz
push
fimuls
lcall
add
mov
mov
dec
add
out
das
pop
popa
pop
icebp
mov
scas
setno
jmp
add
or
jmp
add
rcll
mov
push
add
call
inc
add
lock
push
add
add
mov
js
cs
add
movsl
mov
test
add
scas
adc
dec
aad
add
add
add
mov
rolb
adc
shrl
cwtl
rolb
and
mov
mov
jae
push
fwait
sbb
cmc
pop
inc
add
push
jo
jmp
cltd
dec
jg
add
fcmovu
sbb
mov
dec
inc
xchg
add
sub
jge
sbb
add
mov
pop
fisubrs
add
add
nop
add
stos
addr16
or
dec
push
cmp
les
mov
add
mov
dec
test
repnz
cs
add
fcmovu
add
add
pop
mov
add
add
xor
jecxz
stos
push
add
jp
or
fidivl
mov
adc
adc
lret
sub
ja
jae
mov
sub
insl
lods
in
pusha
add
out
or
add
sbb
inc
add
mov
mov
jb
addb
add
dec
test
jmp
daa
mov
add
inc
add
and
pop
sub
jne
ret
insb
mov
add
dec
xchg
pop
and
mov
mov
adc
adc
mov
add
add
and
mov
add
rolb
pop
testb
mov
add
or
add
add
add
add
mov
pushf
test
addr16
cltd
or
add
addl
adc
repnz
add
roll
fmul
pop
dec
aad
xorl
add
rolb
ja
rep
decl
add
and
xor
je
dec
sbb
add
or
add
in
lea
rolb
add
add
add
imul
sub
add
add
pop
sbb
cmp
call
jnp
in
fnstsw
fidivs
stos
addb
push
add
lds
call
int3
cli
and
pop
and
mov
dec
lcall
and
mov
inc
add
sbb
sbb
incb
or
and
jge
or
add
movsl
lcall
inc
add
inc
add
mov
inc
add
frstor
mov
add
flds
decb
nopl
pop
sbb
add
cmp
mov
push
add
cmp
dec
testb
lds
jae
and
push
mov
sbb
lods
fsubrs
movsb
add
add
mov
add
add
mov
mov
inc
sub
mov
mov
ljmp
ljmp
les
push
mov
add
inc
add
testb
add
insl
push
arpl
dec
fsubr
and
int
add
mov
iret
push
add
add
add
mov
mov
cld
adc
jbe
mul
add
add
mov
cli
pusha
add
push
add
mov
add
xlat
or
and
jecxz
and
add
fdivrl
insb
rorl
or
add
enter
es
sbb
add
mov
xchg
mov
popa
ja
addb
add
add
cmp
inc
push
lods
jle
dec
xchg
ret
popf
test
std
dec
mov
test
jmp
add
jecxz
pusha
add
fcmovnb
add
inc
les
scas
pop
ret
fisttpl
mov
adc
ljmp
xor
add
mov
clc
adc
sub
add
lock
push
add
xchg
mov
pop
cmp
mov
or
fisttpl
jae
add
add
xchg
test
out
addb
xchg
push
sub
call
or
and
add
mov
mov
mov
cmpsl
cmpsl
mov
addb
add
add
icebp
mov
add
cmp
shll
mov
mov
mov
add
and
mov
in
jno
inc
xchg
add
add
add
mov
bound
mov
dec
dec
jnp
add
sbb
push
rolb
fisubs
dec
cmp
inc
ret
pop
lods
int3
xchg
repnz
jle
push
add
jmp
das
aad
stos
add
mov
dec
int
xchg
cmpsl
dec
sub
stos
cmpsl
test
stos
or
pop
inc
add
fs
add
jbe
sti
lahf
outsl
push
rorl
mov
loop
mov
fistl
int
repz
add
cs
les
addb
mov
imul
add
mov
add
mov
cli
sbb
in
sahf
dec
jae
std
push
std
scas
push
bound
mov
into
sbb
and
out
or
add
fsubl
mov
inc
pushf
xchg
and
jmp
add
rolb
pop
push
inc
and
mov
arpl
push
add
add
aad
lods
fsts
add
stos
fsub
add
mov
jg
je
jnp
out
movsb
add
lret
out
scas
fnstsw
jecxz
xor
movsl
or
pop
xor
daa
xchg
inc
push
add
xor
movl
addb
inc
sub
lahf
mov
mov
add
insb
popa
das
rep
add
xchg
testb
inc
add
or
mov
mov
add
adc
xchg
add
push
add
mov
push
movb
and
sbb
inc
add
cmp
mov
and
xchg
pop
fwait
xchg
mov
add
add
add
cmc
hlt
add
es
add
mov
mov
mov
cmp
mov
push
pop
loopne
mov
xchg
sti
xchg
add
add
cmp
sti
repnz
add
aad
push
and
mov
push
aas
popf
scas
inc
add
add
sub
xor
push
out
jbe
les
xchg
incb
aad
push
add
dec
jecxz
stc
movsl
mov
lds
add
and
add
add
add
add
dec
and
out
push
mov
xchg
xor
movb
in
fcmovbe
mov
pop
std
inc
add
add
add
pop
mov
jge
jecxz
mov
add
add
mov
dec
call
mov
and
mov
ds
cmpl
xor
daa
test
rolb
aas
mov
inc
add
fimull
add
ds
fadds
inc
add
add
lods
mov
jno
sbb
cmp
cmp
gs
add
mov
add
add
push
push
mov
add
add
add
addr16
add
add
add
pop
push
addb
add
cmp
add
roll
add
add
mov
and
cmp
add
mov
push
add
add
out
in
sbb
pushf
repnz
repnz
addb
or
add
add
add
fcmovnb
add
add
add
mov
mov
add
dec
add
add
add
mov
xor
fidivs
mov
add
push
mov
xchg
add
pop
xor
ljmp
fdivrs
movsl
stc
xchg
mov
adc
bound
mov
cmp
imul
cmpsl
out
enter
bound
mov
push
jnp
enter
psubw
xchg
pop
xor
sub
push
add
data16
lcall
jno
aas
and
mov
add
testl
in
inc
add
mov
sbb
add
add
aad
rolb
out
ds
je
pop
fmull
push
add
mov
jg
adc
add
push
add
xchg
mov
dec
and
pop
shll
stos
add
mov
or
cmpsl
xchg
add
lods
xchg
add
scas
in
arpl
xchg
adc
test
sbb
movsl
cmpl
int
incl
add
into
pop
add
wrmsr
add
add
outsl
int3
mov
add
mov
out
add
std
outsl
mov
pop
lods
cmc
mov
jo
into
bound
mov
add
cmp
add
data16
jg
movb
add
add
inc
add
lock
and
mov
rolb
jmp
xchg
xor
sbb
add
add
jg
cmp
add
movsl
and
cmp
aam
addb
add
xor
in
add
rolb
fmull
xchg
call
jmp
mov
mov
add
popf
pop
mov
pusha
add
xchg
pop
fld
cltd
fisttpll
sbb
scas
cli
into
xchg
and
mov
rolb
neg
add
ss
adc
xor
xchg
add
add
mov
add
push
and
and
mov
out
add
jg
shrl
add
add
int
mov
mov
mov
inc
rolb
pop
fcmovnu
inc
mov
addl
adcl
clc
jb
loopne
mov
adc
aad
add
add
adc
bound
mov
ds
add
xor
xchg
arpl
sbb
add
jecxz
add
add
add
scas
adc
add
movb
cmp
rolb
and
add
pop
data16
sbb
add
icebp
and
mov
je
mov
jo
or
test
outsl
ds
out
in
add
ret
lret
rolb
jmp
push
imul
test
jnp
out
loopne
sbb
xor
addb
rolb
sbb
icebp
mov
bound
mov
loop
aas
cmp
out
mov
xchg
repnz
add
push
inc
add
sbb
add
fbld
adc
push
stos
aaa
mov
cmpsl
imul
mov
add
adc
push
add
add
sub
sti
sbb
addb
pop
or
cmp
push
mov
inc
add
jno
cs
sub
add
and
call
mov
add
mov
sub
add
add
leave
mov
add
add
add
add
xchg
add
add
std
push
mov
add
jb
add
dec
dec
mov
add
jecxz
test
cwtl
lret
mov
push
add
pop
xchg
xchg
inc
add
out
mov
gs
adc
inc
add
std
and
add
add
add
pop
or
adc
add
add
pusha
add
mov
mov
add
mov
mov
push
add
hlt
add
add
subl
jmp
fistpll
cwtl
and
out
mov
pop
outsl
rolb
imul
push
add
pop
jno
push
pushf
mov
or
add
lds
xchg
add
call
cmp
sub
inc
data16
rorl
jne
push
xor
pop
repnz
stc
fsubrl
mov
adc
jp
add
rolb
addb
add
mov
add
mov
add
dec
stos
je
jno
add
and
mov
add
add
mov
and
add
ljmp
add
xor
iret
lret
aaa
shl
xor
add
or
popf
leave
sub
lcall
or
sub
add
mov
movsl
jb
or
shll
lock
add
or
sahf
jecxz
add
cmp
add
add
push
add
or
mov
test
xchg
test
add
rolb
outsl
xchg
or
add
push
add
xchg
add
push
stos
mov
push
add
push
add
xor
add
ds
add
or
mov
test
add
fwait
sbb
add
pop
adcl
adc
mov
cmp
sbb
les
mov
out
out
add
and
pushf
rolb
adc
pop
ret
dec
dec
jl
js
pop
cmp
add
push
xchg
add
add
lret
in
xlat
lcall
les
aas
pop
adc
bound
mov
cmp
mov
fildl
sbb
pop
dec
dec
or
add
add
cmp
jl
jb
stos
aam
jns
ds
dec
nop
add
mov
add
aas
mov
cwtl
aam
and
mov
mov
mov
xchg
add
add
repnz
sbb
dec
mov
add
pusha
add
enter
imul
jle
inc
sub
add
sub
shll
jecxz
shl
add
in
pop
mov
inc
arpl
add
xlat
pop
lods
mov
add
pop
mov
add
pop
cs
push
add
test
jo
jno
pop
lds
into
lea
push
add
add
add
adc
pusha
add
addb
push
lret
sbb
xchg
and
mov
mov
xlat
push
inc
mov
aas
or
mov
add
mov
dec
push
test
add
add
ret
cltd
testb
jbe
lcall
inc
cwtl
add
rolb
orl
add
push
add
cmpsl
jno
int3
ret
loope
jne
cmpl
cltd
montmul
cmpsb
add
popa
mov
push
add
loop
jl
into
add
jb
addb
cmc
xchg
add
adc
push
or
mov
scas
jns
jb
or
decb
add
addr16
jb
out
jge
add
das
xor
sahf
xchg
call
lcall
add
lea
or
add
add
cld
xchg
cld
sbb
repnz
and
mov
jge
add
mov
add
mov
hlt
add
mov
insl
insb
mov
add
add
add
add
fdiv
aam
orl
cmp
add
add
mov
add
add
lret
flds
add
push
add
push
add
mov
mov
xchg
add
flds
add
cmp
and
mov
sub
push
sub
mov
sbb
pop
xchg
jl
ja
xor
push
ret
mov
add
stc
cmp
adc
push
add
add
dec
mov
add
subl
adc
sub
rolb
scas
rolb
mov
add
mov
xchg
add
int
mov
add
jne
cmp
mov
pop
inc
lock
and
mov
inc
add
ljmp
add
mov
add
add
addb
xlat
sub
jp
or
cmc
mov
add
add
xor
xchg
add
pushl
dec
lea
push
pushf
xchg
add
xchg
int
add
mov
push
sub
je
or
imull
aaa
leave
hlt
add
add
dec
cmpsl
std
dec
lds
aam
xchg
add
add
ss
add
sbb
xor
add
mov
add
push
add
cld
std
xchg
dec
lret
dec
pop
fistpl
mov
xchg
insl
loopne
and
lods
scas
jp
add
dec
add
pushf
dec
jns
dec
sbb
add
add
mov
add
push
add
out
je
test
mov
xchg
push
add
cmp
sahf
dec
cmp
int3
cmc
sbb
lcall
add
add
sbb
sbb
pop
add
mov
push
jo
mov
xor
sbb
add
mov
add
xchg
iret
push
pop
std
xor
dec
dec
add
je
mov
sbb
mov
fldenv
rcrl
xchg
add
xchg
add
jno,pt
add
test
pop
cmp
loop
lock
add
into
jecxz
cli
out
xor
sub
add
add
jnp
add
add
xchg
pop
jo
pop
push
add
dec
sub
popf
les
movsl
repz
and
xor
add
mov
int
add
and
mov
std
xchg
add
mov
inc
add
mov
fsts
add
adc
cmpsb
add
ja
out
fdivrs
jmp
scas
dec
dec
mov
xchg
testb
add
add
loope
add
rolb
cld
cmc
cli
repz
xchg
and
test
out
mov
sub
sub
mov
ds
out
int3
jge
jp
add
xlat
mov
add
and
test
and
ja
dec
sbb
dec
rcll
movnti
add
loopne
sti
movb
lods
mov
add
maskmovq
negl
add
add
add
cli
aad
add
ret
adc
mov
add
lcall
add
bound
mov
rolb
lret
stos
add
lret
testb
mov
inc
add
faddl
mov
xchg
dec
dec
xor
lds
inc
push
add
add
jmp
testb
mov
mov
dec
or
mov
mov
jp
lcall
repnz
inc
add
adc
outsl
ja
sub
dec
and
or
inc
add
cltd
aam
and
add
imul
xor
cmp
and
mov
sti
mov
pop
cltd
jg
add
add
cltd
ljmp
jne
dec
sbb
stos
xchg
push
add
test
pop
pop
jns
adc
in
out
add
sub
loope
add
push
sarl
add
mov
popa
test
jae
pushf
call
aam
xchg
dec
add
insl
cs
stos
aad
mov
fdivl
out
test
add
add
dec
xorl
pop
movsb
add
stos
or
jb
jae
mov
mov
icebp
jg
lods
or
addb
mov
repnz
addr16
add
pop
movsl
mov
cmp
add
add
movb
test
in
test
add
je
add
inc
add
add
addl
sbb
mov
scas
js
loope
adc
inc
add
in
lret
mov
fcoms
jecxz
or
add
dec
xchg
cmp
add
add
sbb
sub
fwait
mov
add
adc
add
inc
insb
cmp
add
div
add
mov
leave
push
add
xchg
ljmp
addb
xchg
addb
stc
pop
push
push
add
ret
push
add
aad
mov
xor
in
add
inc
add
pusha
add
push
add
lret
jae
add
push
jno
add
jne
or
add
add
es
xchg
add
fldenv
lret
aam
cs
in
mov
jns
add
xor
aad
add
mov
and
fldcw
add
aaa
insl
xchg
add
xchg
add
in
sub
aad
add
lret
dec
test
push
add
ficoml
mov
popf
lods
sbb
xchg
add
movb
sub
movsl
xchg
push
fsubrp
jp
jb
jnp
out
push
add
adc
cwtl
jle
add
mov
lcall
inc
push
add
cmp
or
and
add
sbbl
nop
add
icebp
movsl
cwtl
outsb
inc
les
lods
mov
rolb
lock
push
add
bound
mov
add
add
enter
add
add
gs
adc
stos
stos
push
mov
in
cmpsl
and
mov
sub
xor
adc
add
mov
and
lods
das
add
mov
dec
lods
daa
add
xchg
add
mov
add
or
add
fwait
adc
cltd
xchg
add
add
add
jae
add
add
add
in
movsl
aas
pop
mov
in
pop
ffree
add
jno
insl
lret
hlt
add
lods
scas
jmp
mov
add
mov
sub
add
sub
add
and
add
add
add
add
sahf
movsb
add
inc
addb
jg
gs
mov
jle
or
and
aaa
add
lahf
inc
loopne
mov
loop
aaa
cmp
and
mov
xchg
add
aad
cmp
xchg
add
add
test
stos
aam
dec
ret
or
add
dec
xchg
mov
aad
jo
scas
push
add
es
cmp
lds
add
add
mov
pop
push
add
pause
add
pop
push
xor
mov
rolb
data16
add
aaa
adc
popf
add
add
pusha
add
in
es
add
into
pop
xchg
lret
out
movsl
mov
add
popa
aaa
repnz
cmp
insl
cmpsl
sbb
add
xor
sub
sbb
stos
sbb
mov
roll
push
add
sti
cli
cli
rolb
fnstcw
add
in
add
add
adc
sahf
hlt
add
or
cmp
fistps
hlt
add
dec
jnp
xchg
add
xor
inc
out
test
mov
add
hlt
add
sub
add
jp
push
add
shll
inc
add
insl
das
sbb
js
test
xor
pop
popa
cltd
call
lahf
sub
add
add
add
aaa
fdivl
loop
clc
test
add
lock
mov
jnp
stc
shrl
stos
out
mov
add
mov
lret
test
pusha
add
mov
add
add
xorl
xor
and
mov
adc
aad
add
loop
test
fidivs
add
mov
in
insb
xchg
or
push
add
nop
add
add
add
popa
cmp
add
add
add
movsl
push
cmc
data16
add
add
add
fwait
or
fwait
mov
xchg
aad
add
add
add
sub
loop
imul
outsl
xchg
add
add
sti
je
mov
push
add
insl
mov
add
mov
sbb
sub
testb
add
cmc
cmpsl
xchg
add
push
addb
push
add
mov
add
pop
cmp
xor
mov
mov
sbb
add
mov
add
add
lahf
pop
push
xchg
add
daa
je
lret
push
mov
adc
xor
dec
inc
add
or
add
and
sub
add
xchg
pop
dec
imul
add
dec
pop
cmp
adc
or
repnz
add
jo
jmp
in
lods
js
add
add
out
add
sti
and
add
in
test
adc
add
xor
push
add
mov
push
add
mov
inc
add
cmc
in
add
lds
add
in
pop
test
and
mov
xchg
nop
add
push
movsb
add
xor
mov
imul
pop
lret
sbb
dec
insl
xor
outsl
push
ja
add
cmp
push
add
inc
add
lds
push
lcall
gs
cwtl
imul
adc
cli
mov
outsl
add
mov
sub
add
lds
ja
cmc
ja
sub
add
cltd
pop
not
cmp
pop
cmp
imul
mov
adc
sub
subl
hlt
add
push
add
mov
jge
dec
jl
and
mov
adc
lcall
add
or
mov
adc
adc
mov
lock
pop
push
fbld
imul
add
cli
sbb
loopne
push
add
clc
daa
sub
repnz
mov
cmp
dec
mov
push
add
push
add
dec
repnz
hlt
add
push
orps
xchg
add
add
loope
add
add
iret
and
mov
push
ret
or
add
add
add
scas
sbb
aam
jle
add
cltd
xchg
or
xchg
add
push
int3
lods
lahf
mov
insl
jne
push
add
add
add
cltd
int3
nop
add
cmp
aad
pusha
add
movsl
cmp
addb
add
dec
dec
movb
add
add
pusha
add
mov
push
add
popa
cmc
and
in
inc
add
pop
mov
mov
mov
lea
pop
or
add
sbb
add
mov
add
pop
sti
rorl
mov
and
sbb
push
add
jne
add
pop
mov
in
push
dec
nop
add
test
add
xchg
add
xchg
sti
stc
jno
dec
push
add
sub
jb
mov
insb
push
into
add
sbb
ja
dec
push
add
xor
movb
sub
ljmp
test
lods
iret
mov
sbb
sahf
mov
mov
dec
push
add
add
mov
inc
add
mov
pop
pop
mov
adc
lds
xor
add
add
pop
add
jmp
js
popa
cmp
sub
jb
inc
add
aam
push
add
enter
lret
push
add
xchg
int
add
add
add
add
push
add
cmp
stc
xor
mov
les
and
mov
jbe
dec
daa
mov
push
imul
add
stos
out
mov
in
or
scas
call
adc
add
rolb
mov
loope
adc
pop
lret
je
adc
add
rcr
rolb
add
add
add
andl
cmp
add
add
or
inc
add
arpl
aam
mov
lret
mov
xor
add
pop
cmp
push
jns
movsl
mov
add
mov
xchg
add
add
popa
xchg
aam
pop
test
dec
xor
dec
adc
aam
adc
test
je
xchg
gs
icebp
enter
add
and
mov
add
add
dec
push
add
push
imul
or
add
or
inc
out
jae
imul
add
xlat
lods
pop
inc
fmulp
push
add
add
fadds
jns
mov
add
sahf
or
add
add
push
iret
outsb
cld
xchg
insl
out
jmp
adc
jae
ret
adc
leave
mov
xchg
add
es
cmpsb
add
jmp
add
mov
adc
icebp
nop
add
xchg
add
mov
xorl
jg
fisubl
add
mov
addb
shll
inc
lcall
add
outsl
adc
sbb
mov
add
jecxz
push
push
push
xchg
inc
stc
cwtl
xlat
or
adc
mov
push
clc
jb
lahf
sahf
cmp
add
mov
lds
dec
sbb
test
add
jnp
iret
std
call
pop
xlat
pop
cmpsl
dec
adc
pop
or
mov
enter
inc
cmpsl
mov
jmp
add
jp
add
roll
mov
push
add
push
add
mov
push
add
ss
imul
sub
push
add
mov
pop
adc
jns
cmpsb
add
add
int
mov
out
jp
add
add
sbb
les
fdivrs
les
cs
pop
pop
cmp
push
add
adc
xchg
add
test
add
push
imul
add
add
xor
mov
jl
add
add
inc
add
add
jb
sub
sub
fstpt
cmp
xchg
out
stc
mov
and
insb
into
repnz
mov
jbe
or
aad
sbb
out
sub
mov
mov
xor
fldl
mov
out
add
mov
pop
pop
xor
inc
movsb
add
add
sub
add
add
mov
inc
push
add
imul
rcl
adc
and
mov
and
stc
jo
in
mov
mov
xchg
add
add
ja
lock
arpl
push
xchg
add
inc
add
sbb
xor
cmpsb
add
add
push
js
add
das
loop
push
xchg
add
jb
xchg
insb
and
dec
movsl
repnz
add
mov
mov
push
addb
add
add
add
mov
sahf
cwtl
or
loopne
scas
xor
jmp
ret
add
lea
sub
hlt
add
jnp
or
add
mov
int
xchg
push
add
lahf
test
xchg
sbb
add
add
add
sahf
mov
cs
add
out
add
jge
testb
fwait
sti
pop
aam
pusha
add
add
add
pop
jecxz
rcll
or
add
rolb
inc
add
xchg
imul
outsb
dec
mov
jl
enter
adc
mov
mov
xor
cmpsl
outsl
adc
xor
fstps
add
or
add
add
fldcw
push
pop
mov
xchg
sub
pushf
imul
mov
sub
test
pop
and
mov
cltd
push
add
lcall
or
jmp
add
cmp
in
aad
add
cli
sti
or
mov
sub
repnz
add
add
add
add
leave
sub
mov
mov
add
push
add
outsb
sub
and
mov
pop
adc
pop
cmp
mov
mov
add
sti
pop
xlat
cmpsb
add
pop
jae
jb
aad
add
mov
add
dec
jbe
push
add
add
add
mov
fsubrs
and
addb
add
addr16
sub
add
jmp
push
xchg
mov
dec
inc
daa
lock
add
and
std
lret
sbb
sub
add
add
rolb
mov
mov
lods
in
add
int3
fstl
mov
mov
add
pop
adc
jge
std
mov
push
add
std
arpl
mov
lock
add
test
mov
out
xchg
mov
add
mov
push
stos
std
cwtl
xor
mov
xchg
jnp
add
mov
xchg
add
add
repz
data16
cmp
mov
imul
das
ficoml
add
add
and
inc
add
push
ret
std
dec
mov
add
push
add
xchg
sar
add
in
or
add
xchg
add
add
cmpsl
mov
add
mov
call
add
and
pop
in
push
popf
push
sub
mull
jae
ja
pop
and
inc
out
add
mov
add
fisubl
mov
out
xchg
mov
push
add
std
cld
sub
pop
addr16
add
add
mov
or
sbb
icebp
xor
in
ds
mov
push
add
scas
rolb
jl
add
push
xor
fidivl
bound
mov
add
jne
xchg
divl
in
inc
sbb
add
addb
adc
cmpsb
add
add
add
dec
insl
addb
sti
add
mov
cmp
out
cmp
test
iret
xor
dec
insl
rolb
add
mov
add
repnz
adc
pop
mov
jmp
sarl
cwtl
in
insb
imul
inc
add
aas
popa
sub
std
fbstp
cmpsb
add
mov
adc
xor
sub
add
jne
addb
andl
push
add
jp
add
add
add
das
mov
dec
push
add
pop
xchg
test
stc
mov
add
mov
dec
dec
cmp
jo
adc
sub
jle
add
fcomps
ret
int3
add
and
and
insb
es
add
repz
push
pop
or
jne
iret
pop
lds
sbb
popa
or
fdivrp
ja
inc
add
xchg
sti
test
xchg
and
cmp
test
sbb
loop
ljmp
scas
int3
movsl
adc
movb
mov
in
lcall
add
lods
imul
lret
rolb
push
add
leave
pop
add
jae
outsl
cld
out
cltd
or
push
add
rolb
xlat
mov
pop
adc
cmpsl
pop
cmp
jne
in
xchg
cmpsl
insb
popf
mov
xchg
or
xor
add
mov
and
xor
movsl
fnstsw
das
dec
sub
pop
sbb
sub
add
inc
add
add
dec
mov
ret
add
movb
dec
scas
cmpsb
add
mov
popa
rolb
js
add
or
stos
mov
movb
adc
push
add
adcl
add
add
sbb
add
les
jns
add
popf
call
aad
lahf
cwtl
sbb
sub
adc
lds
sub
and
mov
in
or
shl
repnz
loope
add
repnz
add
mov
stos
xchg
add
nop
add
push
mov
and
mov
mov
les
inc
cmp
sbb
jbe
arpl
sub
imul
mull
add
movsl
daa
jg
les
dec
hlt
add
add
push
mov
xor
add
mov
jp
pop
clc
test
add
add
mov
repz
mov
push
add
adc
pusha
add
aaa
pop
aad
pop
mov
mov
add
add
push
jb,pn
sub
outsl
lret
gs
mov
sbb
repz
xchg
add
adc
ljmp
add
push
lret
inc
ja
add
jl
pushf
std
ja
add
stos
jecxz
add
sbb
pushf
ret
pop
dec
or
sbb
add
lret
scas
xchg
testl
scas
gs
sti
aad
add
lea
test
add
jnp
add
dec
mov
mov
aad
mov
fcompl
add
movsb
add
add
push
mov
mov
in
aam
xor
add
pop
scas
or
ret
out
xchg
add
ret
stos
outsb
rolb
mov
jge
lahf
jb
out
and
pusha
add
sub
add
cmp
xlat
ljmp
inc
mov
mov
mov
cmp
add
add
add
add
mov
scas
mov
sub
add
mov
outsb
mov
jp
lods
in
fsubrs
stos
xchg
add
mov
xchg
add
outsl
fists
add
mov
call
sub
dec
adc
add
frstor
add
ret
mov
lret
pushl
mov
addb
add
add
imul
fsubl
add
pop
cmp
add
add
std
and
add
push
add
jnp
sub
pusha
add
loop
inc
inc
testl
adc
cmp
inc
int3
jg
add
push
add
add
rcll
add
add
adc
stos
lahf
sbb
addb
loopne
xrelease
jo
mov
sarl
jns
pushf
push
hlt
add
dec
loop
fnstsw
fcompl
mov
push
dec
pop
mov
inc
mov
rolb
pop
xor
mov
out
out
stc
sub
dec
movl
xchg
outsl
push
repnz
frstor
xchg
add
add
add
add
ret
pop
mov
pop
or
xchg
dec
xchg
add
add
in
insl
or
dec
inc
add
inc
fstpl
xchg
push
add
icebp
sbb
xchg
out
add
xchg
jge
sub
stc
sub
dec
mov
fcomp
push
add
sub
dec
jno
push
add
add
sub
cli
aas
inc
add
mov
jecxz
dec
outsl
add
sub
mov
xchg
cmpsl
inc
inc
ds
add
add
add
outsl
fsubrl
mov
mov
test
add
add
mov
jae
add
cmp
xchg
add
stos
fisttpl
pop
adc
xor
push
jne
add
pop
std
jmp
adc
add
add
pop
out
or
rolb
xchg
add
test
ds
call
sbb
add
add
add
add
mov
mov
adc
inc
mov
scas
push
add
sub
add
mov
and
sbb
add
pushf
push
mov
ja
inc
mov
subl
add
sbb
add
out
xchg
add
test
ljmp
nop
add
in
popf
adc
xor
xchg
mov
add
jb
lds
add
add
mov
jp
add
xor
pop
cli
gs
xchg
mov
xor
xchg
add
mov
add
add
lcall
jmp
adc
mov
xor
sbb
pop
sbb
add
in
sbb
add
and
mov
setae
mov
fldenv
inc
in
test
mov
fucomi
fdivr
mov
stos
ret
addb
in
call
xchg
add
addr16
dec
xchg
cs
add
xchg
sbb
inc
push
add
divl
add
clc
mov
pop
sti
jo
add
cmc
popa
mov
sub
xchg
add
mov
sbbl
js
add
fstpl
add
sub
add
add
or
or
push
add
lock
add
or
cld
add
jmp
cwtl
and
mov
stos
cmp
rolb
sti
pop
test
add
mov
mov
add
movsl
mov
or
mov
add
add
mov
mov
mov
insb
popa
jbe
jnp
add
add
js
call
lahf
jle
sub
imul
mov
mov
inc
pop
jb
ja
push
add
mov
arpl
add
inc
in
sbb
add
mov
push
add
push
sbb
jg
and
mov
add
pop
and
mov
push
je
mov
mov
sahf
mov
sub
pop
stc
xorl
push
add
add
imul
add
add
xchg
cmp
sbb
inc
add
and
mov
jns
add
add
fucomip
lahf
test
mov
push
or
add
add
sub
sti
pop
jne
lea
pusha
add
pop
lcall
add
xor
sub
mov
sbb
stos
cmp
push
add
xchg
add
icebp
lock
xchg
add
daa
add
inc
add
inc
add
mov
xor
jnp
add
add
add
push
add
fistps
mov
data16
add
mov
inc
add
fst
add
mov
pushf
mov
add
sahf
les
mov
add
push
nop
add
xchg
add
or
pop
sbb
out
orl
push
add
imul
nop
add
fbstp
push
jg
inc
je
adc
shr
jmp
pop
fldenv
add
cli
or
add
pop
xor
add
push
add
shll
add
add
add
lret
sub
lahf
pop
cmp
cli
mov
jae
push
mov
add
jg
add
jmp
and
ret
or
push
add
lods
inc
mov
fldt
sub
inc
dec
dec
fisttpll
xchg
add
add
add
xlat
jl
add
mov
add
sbb
pop
lahf
jmp
das
adc
xchg
loopne
cmpl
add
add
addb
sub
mov
push
jle
mov
dec
push
add
out
ja
lock
jb
jl
lahf
hlt
add
inc
add
add
add
add
push
add
add
add
dec
jb
add
mov
addb
add
dec
sbb
and
mov
add
add
popa
cmp
fs
add
rolb
adc
pop
in
decb
add
jb
rolb
psrlq
mov
pop
mov
mov
add
jge
lods
pop
and
mov
xor
push
mov
cwtl
jne
enter
add
movsl
sbb
sbb
or
add
ret
push
imul
pusha
add
addb
aad
mov
ucomiss
add
testl
add
add
mov
pop
xchg
dec
xchg
stos
mov
mov
xchg
aam
and
shll
push
add
out
pop
jmp
icebp
in
sub
add
fisttpl
icebp
mov
dec
mov
push
idivl
out
push
movsb
add
sarl
popa
mov
cmpsb
add
jmp
add
or
add
add
push
add
add
jne
mov
adc
loopne
scas
ds
mov
add
je
xchg
push
push
xchg
add
inc
xchg
test
pushl
xor
mov
pop
mov
xchg
add
pop
cs
add
cmp
add
push
add
add
add
fisubs
repnz
add
into
mov
or
mov
mov
cmpsl
push
fstenv
add
inc
mov
add
dec
dec
mov
add
sbb
add
lret
test
add
mov
insl
adc
icebp
daa
pusha
add
lds
push
add
data16
adc
shl
mov
jge
or
out
aad
add
add
les
movsl
mov
add
inc
add
cmpsb
add
out
or
int
cmpsb
add
fildl
add
jecxz
addb
sub
dec
jmp
xchg
fmul
pop
in
xchg
into
jl
data16
js
cmp
add
jp
and
loopne
xchg
add
cmp
add
push
add
nop
add
add
mov
add
xchg
xor
add
add
add
jno
test
add
jno
add
test
add
add
add
dec
shll
add
data16
push
js
hlt
add
movb
pop
push
lret
push
add
add
jbe
testb
mov
add
add
mov
add
mov
loop
xor
xchg
ljmp
lea
lret
int
add
ljmp
pop
pusha
add
jo
inc
add
mov
add
adc
pop
cmp
aaa
sti
dec
outsb
fldl
adc
and
xchg
das
dec
stc
outsb
mov
out
inc
aaa
xor
or
jge
adc
adc
repnz
jbe
mov
add
and
add
scas
inc
add
mov
add
add
push
xchg
add
add
sbb
or
int
pusha
add
push
add
add
add
mov
lcall
mov
mov
cld
add
cmp
add
clc
cmp
add
jp
aaa
push
xchg
popa
ljmp
jp
add
add
add
add
add
ficoms
js
pusha
add
add
add
add
mov
add
dec
sbb
add
mov
js
jnp
pusha
add
pop
push
add
add
rolb
mov
popf
mov
or
outsl
in
mov
pop
mov
jne
scas
or
stos
cmovge
inc
cltd
loop
mov
outsl
cmp
movsb
add
outsl
test
hlt
add
mov
xchg
sub
inc
add
add
add
add
xchg
and
testb
pushf
in
repz
add
adc
add
sub
mov
mov
addr16
rolb
dec
add
mov
adc
jg
dec
lds
rolb
test
imul
add
stos
out
test
add
add
hlt
add
add
outsl
pop
pop
pop
rolb
jns
dec
push
add
mov
shrl
add
and
mov
fimull
data16
imul
aam
aad
fisttps
jb
aam
xchg
add
mov
and
mov
jns
sti
pminsw
xchg
and
into
dec
iret
gs
mov
clc
jmp
jl
mov
and
cmpsb
add
add
movsb
add
sbb
add
cmpsb
add
fiaddl
xchg
ret
test
add
dec
and
mov
dec
movsl
or
add
scas
addr16
add
xchg
or
adc
and
add
add
add
pop
mov
in
popa
cltd
xchg
add
sub
in
lcall
add
sbb
aaa
inc
add
je
insb
lods
test
test
ja
add
add
mov
add
xchg
lods
mov
add
add
mov
add
cmp
int
jbe
movb
add
add
clc
add
sbb
add
cmp
add
outsl
imul
ret
or
loop
or
and
sub
add
add
xor
call
mov
add
cmpsb
add
mov
mov
cmpsb
add
inc
sbb
mov
cmp
aad
and
or
in
in
and
mov
sub
add
xchg
in
push
or
mov
dec
sbb
xor
adc
enter
jno
and
mov
out
inc
lret
js
xor
dec
jmp
ret
aaa
fcomp
dec
std
lods
xor
mov
xchg
sbb
fxch
jbe
inc
add
inc
add
and
add
adc
cli
call
add
aaa
mov
scas
mov
mov
je
mov
in
test
ficomps
mov
outsb
cmpsl
lods
mov
jle
ds
aas
and
xlat
cmp
rolb
push
mov
and
mov
or
add
inc
mov
jg
test
dec
insb
popf
jns
cmp
add
push
mov
out
call
add
add
sbbl
adc
int3
addb
mov
add
cmpl
leave
es
add
adc
push
push
add
cltd
mov
push
add
lcall
cmpsb
add
add
addb
add
mov
add
dec
stos
lea
inc
inc
sbb
add
xor
add
add
xchg
jnp
enter
cltd
mov
out
and
add
aas
push
mov
cmpsb
add
add
add
push
push
movb
xor
cmp
mov
fldt
mov
dec
xchg
fsubp
imul
xchg
fnsave
outsl
mov
pop
mov
loopne
xlat
sbbl
adc
push
ds
push
mov
mov
mov
add
sbb
jns
or
in
movb
add
mov
repz
add
dec
popa
dec
jmp
mov
mov
jge
xor
dec
lahf
into
rolb
rolb
ret
into
iret
stc
sbb
add
add
daa
stos
xor
sub
inc
add
ljmp
fildl
mov
adc
cmp
add
add
loope
lret
mov
add
pop
push
stos
add
mov
aas
daa
call
add
faddp
mov
and
mov
test
mov
push
add
in
movb
mov
mov
jmp
stos
rolb
mov
add
rolb
out
fnstenv
cmpsl
arpl
ret
sub
mov
sbb
add
push
jg
inc
add
adc
jno
xor
sub
adc
rolb
add
add
sbb
addb
movb
add
mov
in
les
cmp
imul
cmp
jecxz
add
loope
mov
jge
mov
add
fists
inc
pop
and
pushf
cmpsb
add
pop
mov
add
nop
add
mov
lcall
sub
sub
xor
pop
clc
sahf
cmpsl
adc
add
add
aaa
out
dec
aas
xor
or
mov
jl
outsl
pusha
add
jp
add
sub
imul
call
hlt
add
push
add
add
or
sbb
int
pop
xor
push
arpl
add
add
addb
add
add
cmpsl
and
ficompl
rolb
stos
adc
add
mov
add
xorl
push
add
mov
mov
mov
add
xor
fldcw
pop
loopne
insb
addb
pop
cmpsl
adc
add
call
lock
add
jl
xchg
testb
lcall
add
jbe
inc
push
add
xor
or
inc
add
shrl
popa
xlat
xor
xchg
enter
add
add
int
cmpsl
cmpsl
push
mov
add
jb
in
ficomps
ljmp
add
add
in
and
xchg
add
inc
sub
inc
imul
repz
or
add
out
decl
int
add
xor
cmp
add
jns
add
or
testb
push
mov
repnz
add
mov
cs
lahf
cmp
testl
add
movsb
add
xor
dec
in
pop
test
xor
xor
pop
sbb
leave
add
add
fsubr
xchg
xchg
add
mov
or
fwait
mov
add
mov
das
test
add
xor
dec
add
js
add
fildl
add
add
test
je
in
fstpl
mov
sub
rolb
and
mov
cli
push
lock
lds
push
pop
bound
mov
add
pop
mov
lret
or
add
or
loop
stos
je
jmp
mov
push
add
int
xchg
add
and
mov
mov
mov
add
lock
mov
pop
lods
rorl
das
daa
sbb
sub
add
add
pop
xchg
add
add
xchg
ret
jecxz
lahf
add
adc
push
add
add
outsb
sahf
rolb
pop
scas
pop
lahf
icebp
rolb
or
add
add
add
dec
push
clc
cmp
jno
cmpsl
jns
mov
sbb
fidivrl
ret
mov
push
add
test
enter
jle
js
mov
add
mov
or
add
mov
mov
dec
mov
push
add
sbb
push
pop
lahf
dec
xor
cmp
add
and
mov
xor
cmp
out
sub
movb
addb
ret
mov
out
sarl
add
out
enter
jbe
popa
out
je
sbb
xchg
mov
adc
add
mov
add
lds
add
pop
jb
xlat
add
mov
inc
add
pop
ljmp
jnp
mov
negl
dec
rolb
fists
pop
push
xlat
les
stos
les
dec
pop
cld
mov
and
add
pop
rcrl
sti
xchg
aad
sub
cld
fcom
add
pop
hlt
add
mov
fistl
add
add
sbb
cli
mov
mov
movsl
insb
out
daa
lock
add
add
add
shll
testb
xchg
add
lods
mov
add
imul
pop
std
pop
xor
add
testb
adc
add
sbb
add
sub
mov
cwtl
inc
add
incb
fists
adc
dec
cmc
jno
rolb
push
add
scas
mov
push
add
and
outsb
stc
add
sbb
add
or
and
add
pop
loopne
or
jb
cwtl
adc
int
add
xchg
clc
or
mov
dec
clc
jno
movb
add
std
xor
popf
push
out
adc
add
add
xchg
add
sbbl
sahf
inc
add
mov
add
add
adc
testl
add
popa
mov
insb
stc
lret
cmp
mov
sbb
test
add
add
xorl
push
push
enter
add
add
xor
in
and
mov
addb
fnstsw
add
out
ljmp
sahf
in
pop
add
add
jnp
pop
cwtl
pop
lret
push
cmpl
jbe
mov
add
cmp
adc
push
mov
pop
roll
imul
mov
les
adc
dec
xor
gs
add
mov
jmp
inc
add
add
test
xchg
icebp
test
outsl
xor
addr16
dec
fistpll
lea
mov
movsl
mov
mov
or
out
add
dec
insb
testb
add
fwait
pop
cs
mov
inc
add
add
add
jge
std
rcrl
add
jb
dec
dec
loopne
imul
inc
push
mov
add
mov
pop
dec
xchg
popf
repnz
gs
fnstenv
shrl
sub
rolb
mov
jg
add
and
mov
fcomps
cmp
pop
mov
add
add
inc
add
cli
sahf
adc
inc
add
data16
add
mov
cld
sbb
stos
and
mov
add
add
mov
mov
fidivs
pop
testb
icebp
mov
jo
fsub
add
movups
int
add
imul
push
push
add
lcall
in
out
shl
add
add
rolb
push
add
add
cld
jb
cmp
cmp
movsb
add
add
stos
xchg
add
and
cmp
add
cmpsl
sbb
xchg
jns
pop
push
mov
add
mov
push
add
iret
jmp
cmpsb
add
add
jns
pop
je
xchg
nop
add
xlat
sbb
inc
add
jg
push
mov
jmp
stos
inc
cmc
inc
mov
xor
xlat
out
add
mov
repnz
inc
add
add
sti
rolb
cs
jne
or
xchg
add
lods
clc
xchg
add
stos
push
add
arpl
imul
jne
jae
add
mov
cmpsl
mov
dec
pusha
add
mov
add
add
add
fildl
inc
add
mov
sbb
xor
stc
fistl
aas
pop
mov
add
xchg
add
add
sbb
add
bound
mov
dec
addb
inc
mov
lahf
loopne
jbe
or
push
gs
and
cmp
fidivs
dec
fdivrs
sbb
stos
sbb
add
pushf
lods
xor
or
cmp
push
add
in
mov
lcall
jnp
add
push
rolb
int3
inc
cmp
mov
jno
xchg
imul
dec
insb
push
add
cmpsl
push
add
inc
add
fwait
dec
fdivrl
pop
jmp
add
cld
test
inc
add
mov
mov
out
sbb
push
add
outsl
rolb
or
add
add
fstl
add
push
add
add
or
add
add
movb
mov
add
rolb
push
pop
gs
testb
inc
push
mov
jp
cmp
xchg
add
sub
ficomps
mov
rcr
add
add
xor
add
js
add
cmpsb
add
mov
loopne
xlat
arpl
xchg
add
sbb
xor
add
add
add
xchg
int3
hlt
add
add
aas
cmp
ret
adc
mov
sub
add
cmp
add
cwtl
loopne
cmpsb
add
add
aad
add
add
stc
fs
mov
add
add
add
inc
add
inc
add
fisubrl
add
mov
popa
aas
pusha
add
mov
xchg
add
testb
add
ljmp
xor
fisubl
lods
jmp
mov
cmp
add
lock
xchg
mov
imul
add
add
movl
add
mov
add
jle
adc
inc
add
int3
addr16
add
shl
add
fldl
mov
js
into
movb
jmp
loopne
mov
add
add
xchg
dec
dec
jnp
sarl
cltd
in
push
push
mov
dec
movsl
jp
repnz
sbb
sarl
sbbl
xchg
add
lock
add
bound
mov
mov
clc
xor
adc
add
add
stos
or
mov
clc
cs
test
add
lea
pop
xchg
cmp
add
sbb
cmp
mov
pop
add
mov
mov
in
add
cmp
add
mov
push
add
inc
testb
add
jl
das
fldt
xchg
dec
or
aas
lock
push
nop
add
test
arpl
and
mov
jno
xchg
pop
pop
add
add
or
jmp
add
add
add
add
out
mov
dec
ds
add
mov
pop
sti
movb
add
ds
sbb
mov
jmp
sbb
popa
pop
adc
cmpsb
add
subl
add
bound
mov
mov
add
push
loope
ret
in
or
data16
std
popa
inc
add
aam
faddl
scas
jne
add
cmp
daa
in
push
in
ret
add
cmpsb
add
dec
int3
test
xchg
cmpsb
add
rolb
jp
add
ret
iret
jl
adc
or
add
sbb
add
lock
lea
mov
dec
sahf
and
add
test
dec
fwait
or
add
dec
ror
fisubl
sbb
and
out
lods
out
push
test
inc
lea
add
fisubl
pop
lret
xchg
add
mov
sub
add
mov
ret
add
sbb
add
scas
mov
push
insb
mov
inc
add
adc
clc
bound
mov
xlat
bound
mov
dec
sbb
add
add
dec
inc
rolb
xchg
jl
pop
leave
cmc
cmpl
and
mov
xchg
mov
punpcklwd
mov
je
das
jecxz
add
nop
add
cmp
pop
sub
add
add
mov
sub
add
in
push
add
add
fnsave
pusha
add
iret
dec
sub
add
ss
add
ret
add
add
xor
add
rcr
add
repnz
add
add
add
or
rolb
repz
xchg
out
sbb
push
inc
js
aas
and
mov
xor
out
mov
adc
loopne
addb
jbe
jl
pop
xchg
pop
fnstenv
mov
mov
add
pop
orl
cmp
imul
insb
popf
pop
add
add
add
and
sub
out
and
mov
movsb
add
add
add
add
add
jo
out
mov
jmp
mov
add
mov
jmp
stos
mov
cwtl
add
scas
lea
enter
dec
add
mov
xor
lds
push
add
add
mov
popf
lds
rolb
mov
pop
dec
mov
add
add
jbe
cmp
or
lods
adc
pop
test
rcll
add
std
pop
dec
sti
outsb
fidivrl
outsb
sub
fcoms
add
pop
push
add
mov
add
add
daa
mov
ret
jmp
in
arpl
pop
testl
dec
je
leave
jne
adc
sbb
in
insl
movb
cmp
or
push
add
lret
stc
jns
add
add
std
xchg
cltd
dec
dec
fbld
dec
xchg
mov
xor
fs
add
stos
add
jne
add
add
add
sti
into
mov
iret
xor
add
adc
nop
add
jle
gs
fistl
mov
mov
add
add
les
lret
insl
or
add
mov
mov
fildll
mov
add
jae
jp
mov
data16
add
fld
pushf
dec
add
sahf
and
mov
insb
cwtl
rcll
sbb
mov
dec
aaa
hlt
add
cltd
aam
sbb
cltd
enter
imul
or
rorl
mov
stc
mov
inc
jecxz
pusha
add
add
pop
or
fidivrl
lea
popa
cmpsl
popa
mov
sbb
mov
add
cmp
add
aam
pusha
add
adc
jecxz
pop
add
mov
add
pushf
and
jle
add
mov
loopne
sbbl
xor
lcall
testb
decl
or
mov
xor
mov
adc
inc
add
add
movsb
add
add
add
std
push
stos
xor
mov
mov
stc
add
push
in
push
sub
mov
xlat
mov
add
add
cmpsb
add
mov
xchg
jp
add
dec
sub
pusha
add
add
push
add
xor
shr
xor
lock
fidivs
sbb
add
mov
or
lahf
mov
add
push
js,pn
add
inc
add
inc
iret
in
repnz
jl
add
les
addb
push
xchg
add
add
fildl
add
jbe
cmp
and
mov
adc
in
add
mov
sub
jmp
in
pop
aam
xchg
testb
adc
icebp
ja
stos
pop
and
mov
lds
push
add
add
sub
lcall
test
add
add
adc
sbb
add
adc
xchg
mov
arpl
or
add
data16
lds
add
add
add
mov
dec
bound
mov
add
add
mov
imul
dec
pop
in
mov
mov
insb
clc
insl
smsw
cmp
mov
add
outsb
jecxz
xor
movb
movsb
add
push
or
push
mov
add
add
mov
add
add
in
ljmp
xchg
add
push
mov
add
loopne
mov
call
jmp
imul
add
add
hlt
add
in
mov
cmovo
mov
add
cmpsb
add
subl
mov
push
add
add
out
mov
in
pop
mov
lahf
sahf
mov
adc
mov
add
cld
sbb
jno
mov
jno
sahf
iret
pusha
add
add
add
add
add
movb
int
add
adc
or
scas
cmp
inc
add
outsl
js
push
leave
out
jne
or
mov
stos
gs
cltd
adc
outsl
pop
sbb
jno
add
rolb
dec
xchg
hlt
add
femms
cmpsb
add
xchg
add
add
hlt
add
adc
or
add
mov
rolb
add
add
add
lret
cmp
cwtl
mov
add
mov
movb
jo
repnz
add
cmpsb
add
push
cmpsl
xlat
mov
divl
imul
imul
add
add
jl
int3
mov
cmc
loopne
bound
mov
jmp
xor
sahf
aad
add
or
inc
add
out
rolb
lods
dec
adc
dec
push
add
in
movb
jne
cs
push
loopne
add
mov
cmp
pushf
je
movb
add
add
fwait
rcrl
lcall
mov
insb
je
push
xchg
mov
mov
out
xor
mov
add
and
add
sbb
cmpsl
lret
add
lret
xchg
sti
adc
imul
add
push
js
in
lock
cmpsb
add
loopne
in
add
jl
pusha
add
rolb
inc
pop
dec
mov
cmc
push
mov
add
aam
mov
add
lods
sub
mov
bound
mov
loop
loopne
sbb
repz
adc
add
adc
jmp
popf
cmp
pop
xor
and
mov
mov
push
add
sbb
loopne
jns
add
gs
add
mov
add
mov
mov
mov
add
loop
and
mov
adcl
lret
int3
xor
cld
dec
add
add
fdivrs
xchg
xchg
add
add
call
dec
pop
sahf
stc
sahf
in
add
cs
pop
mov
add
add
add
add
andl
in
add
pushf
mov
or
mov
push
add
sub
shl
add
popa
gs
dec
and
xchg
test
movsb
add
pop
out
and
add
dec
jnp
add
fisubrl
mov
add
sub
outsb
inc
add
add
add
add
nop
add
fisttpll
add
add
inc
pop
addb
iret
cmp
add
xchg
loope
xlat
mov
sbbl
cmp
in
jno
mov
movsb
add
mov
aaa
test
add
add
add
add
add
cs
push
dec
cmpsb
add
bound
mov
mov
das
sbb
add
add
push
add
add
jnp
inc
add
add
mov
movsl
cld
or
add
dec
ret
add
adc
mov
add
or
pop
push
jge
add
sbb
inc
xchg
xorl
add
mov
pop
enter
add
test
add
mov
fimuls
je
shl
xor
mov
add
mov
clc
outsl
in
scas
in
push
mov
add
push
rcrl
xchg
fcompl
xchg
mov
add
lret
bound
mov
add
in
push
add
mov
add
add
add
add
scas
fdivrs
nop
add
les
mov
rolb
enter
xor
rolb
pusha
add
add
mov
fisubrs
into
jmp
aas
cltd
add
mov
add
mov
or
lods
and
or
add
pushf
outsb
in
mov
xchg
add
clc
jmp
jno
inc
add
push
pop
jno
rolb
hlt
add
inc
sub
or
add
xor
jae
pop
jle
jg
imul
add
inc
add
add
add
sub
add
add
pop
fisubl
add
btr
jp
iret
leave
les
jns
out
adc
sub
dec
mov
adc
insb
rolb
xchg
add
xor
fwait
xor
add
add
fstps
rolb
lods
das
daa
add
mov
add
add
and
mov
stc
pop
loope
rolb
popf
push
add
loopne
gs
add
add
js
aam
negl
add
stos
xor
pop
js
or
add
mov
outsb
pop
xchg
add
ret
add
pop
or
scas
mov
dec
fcomps
jae
loop
pop
bound
mov
add
jmp
sub
gs
lret
inc
cld
aam
repz
add
inc
add
sbb
jne
cmp
movsb
add
inc
add
push
mov
rolb
mov
add
add
cld
add
pop
add
rolb
jns
add
cmp
push
add
add
add
test
add
imul
lods
data16
push
add
add
add
mov
sub
scas
lret
pushf
scas
lahf
cltd
addb
mov
pusha
add
bound
mov
add
inc
jno
movsl
mov
xor
sti
rolb
add
mov
dec
add
leave
ds
ret
add
lds
xchg
adc
dec
sub
int3
pop
ljmp
add
cmp
sub
sub
js
add
add
cmp
add
mov
xchg
add
adc
enter
lock
out
test
and
hlt
add
lods
out
rolb
jo
pop
or
add
scas
cmp
add
mov
and
add
loop
test
mov
mov
pusha
add
addb
xchg
add
add
lcall
dec
js
adc
add
add
add
xchg
xor
mov
add
add
aam
jns
push
add
add
aas
mov
into
inc
pop
adc
scas
pop
leave
loopne
sub
dec
cmp
cmp
fsubs
jle
xchg
xor
xlat
push
lahf
fists
jbe
subl
repnz
je
filds
mov
inc
add
sub
lcall
mov
js
push
add
in
in
add
scas
pop
sbb
add
add
imul
les
sub
jle
add
add
add
mov
inc
add
xchg
push
add
add
push
add
fsubr
daa
popa
pop
out
imul
inc
scas
push
add
and
mov
add
out
movb
add
add
push
add
mov
cld
in
add
add
mov
dec
push
aam
scas
or
fistl
std
push
add
stc
repz
rolb
lods
loopnew
testb
addr16
dec
lods
ljmp
add
add
addr16
inc
add
and
fimuls
mov
mov
or
sbb
cld
xchg
sub
add
sub
mov
pop
and
push
pop
imul
add
int
add
clc
je
insl
dec
and
mov
mov
data16
add
adc
xchg
inc
add
add
les
mov
movsl
cmpsb
add
push
add
outsb
add
fsubrs
in
push
add
jecxz
and
pop
out
pop
out
sub
add
ret
and
stc
mov
cmp
add
clc
ljmp
add
fldt
xor
negl
imul
lds
cmpsl
leave
sti
xchg
add
add
dec
cmp
out
aad
call
cmpsb
add
sahf
xchg
mov
jbe
cmc
dec
pop
mov
test
push
add
or
rolb
cmpsl
icebp
lds
push
sub
jle
sub
pusha
add
push
in
lea
out
push
bound
mov
out
or
cmpsl
xchg
aad
sbb
test
push
add
ja
dec
mov
fildll
mov
push
jl
and
es
movb
inc
pushf
xchg
add
in
push
sub
mov
xchg
jge
add
add
movb
sub
in
stc
fstps
add
add
push
add
add
bound
mov
out
mov
add
into
push
loop
and
popf
xor
out
add
test
mov
jae
mov
lods
insl
sub
mov
sbb
pop
sbb
add
sbb
and
add
add
mov
cmpsb
add
mov
mov
pop
dec
clc
mov
add
add
test
in
cmc
dec
fidivrl
ja
orl
rolb
sbb
daa
mov
adc
fldenv
enter
add
xchg
add
or
add
inc
lock
mov
add
or
movsl
sub
out
decl
test
dec
outsb
aam
mov
add
movb
popf
shll
mov
enter
imul
mov
pop
push
lret
rolb
mov
cs
stos
and
xchg
lea
and
mov
mov
lods
lcall
add
scas
in
jmp
adc
in
testb
in
add
adc
arpl
push
inc
adc
cmpsl
mov
cmp
fbld
add
outsl
dec
scas
inc
add
cwtl
in
pop
popa
popa
inc
push
add
add
mov
or
addb
add
add
test
popf
cs
add
inc
jge
add
movb
sbb
out
cli
or
add
ja
adc
test
push
jo
lea
bound
mov
add
add
subl
arpl
popa
mov
push
add
add
inc
and
mov
jle
cmc
iret
lea
int3
rcrl
mov
add
sub
iret
xchg
and
jl
push
es
and
inc
add
inc
xchg
fisttpl
aas
sbb
nop
add
ret
xlat
mov
add
add
pop
into
pop
cmpsl
mov
arpl
add
or
test
cld
rolb
add
add
xchg
aad
push
add
or
push
and
lcall
and
mov
adc
hlt
add
mov
dec
pop
pop
inc
add
xor
incl
jecxz
mov
add
mov
mov
dec
fisttps
fwait
cmp
enter
add
push
add
js
add
xchg
add
aad
fcoml
out
sbb
xchg
mov
ljmp
outsl
jbe
ret
or
add
data16
add
and
movsl
add
xchg
xchg
sub
add
lds
icebp
mov
cmp
mov
fwait
mov
rolb
add
test
or
xchg
add
add
int
lods
loop
in
lods
jne
push
add
lsl
or
cld
cltd
pop
jae
push
sub
add
jae
mov
lock
nop
add
cmc
lcall
lcall
enter
add
mov
sahf
jecxz
mov
inc
or
scas
pop
sub
popf
push
add
pop
rolb
cmp
add
fisttps
add
jle
jns
cmpsb
add
lock
inc
add
add
ljmp
xchg
dec
xchg
add
pop
outsl
push
add
xchg
push
add
or
cmpsb
add
add
adc
in
xchg
mov
pop
sbb
inc
fcomps
pop
xchg
hlt
add
add
mov
adc
imul
add
fdivr
ja
add
add
add
add
sub
push
inc
add
loopne
inc
add
dec
sub
mov
popa
push
pop
or
movsl
cli
cmp
add
lock
addb
pop
test
pop
lods
or
or
cmp
add
pop
pop
dec
jb
int3
or
add
adc
add
xor
add
fdivrs
int3
add
imull
inc
add
pop
jne
add
lods
mov
add
test
jbe
add
mov
push
lcall
mov
sbb
xor
dec
and
dec
bound
mov
sahf
cmp
dec
push
add
cmp
mov
push
inc
inc
add
int
add
mov
add
lea
out
and
add
js
outsl
mov
xchg
sbb
push
add
in
xchg
add
add
inc
jp
add
add
add
add
pop
jl
arpl
lcall
js
add
mov
add
arpl
stos
xor
xor
lods
imul
mov
inc
jo
jl
pop
xor
popa
inc
add
add
mov
mov
and
fstps
push
adc
cmpsl
inc
add
add
out
jne
rolb
or
inc
mov
add
mov
iret
mov
movb
sahf
jns
add
jb
mov
xor
xchg
dec
add
mov
pop
xchg
or
add
or
cmp
mov
mov
mov
mov
jge
add
scas
out
inc
add
jmp
add
push
mov
jne
iret
iret
in
cmp
ret
mov
mov
add
add
mov
dec
jb
pop
pusha
add
pop
aad
push
mov
sbb
fildll
add
mov
add
int
cwtl
insl
pop
add
mov
add
push
add
outsl
inc
jns
dec
testb
stc
xchg
or
xlat
xchg
mov
mov
mov
add
add
and
cmp
add
leave
lock
adcl
sbb
push
loope
xchg
and
push
imull
fidivrl
add
add
pusha
add
add
add
add
add
into
call
dec
lods
pop
out
dec
loop
stos
leave
cmp
clc
push
add
dec
jne
pop
out
lcall
aam
and
ret
pop
arpl
mov
cmp
mov
mov
mov
dec
jae
mov
mov
loop
stc
mov
add
jno
mov
add
pushf
int3
dec
testb
mov
add
jmp
sbb
mul
test
push
scas
mov
add
mov
sbb
add
dec
outsl
inc
pop
aam
cmp
jg
data16
inc
fstpl
stos
add
inc
add
pop
adc
add
jecxz
and
add
lock
push
jbe
adc
jg
pop
pop
rcl
jns
out
cltd
imul
aam
mov
fistl
fistpll
add
rcrl
mov
cmc
es
pop
in
cmpsl
jmp
std
push
xor
add
add
jecxz
jmp
addl
add
in
xchg
add
pop
inc
push
fsubrp
mov
xchg
add
sub
add
jns
jno
mov
dec
cli
mov
mov
add
fdivrl
adcl
jo
in
movb
in
or
push
cmp
das
or
add
mov
adc
int
sbb
leave
imul
mov
xchg
add
xor
jno
das
adc
add
add
repz
xchg
add
push
out
lret
add
inc
add
shrl
add
dec
rolb
stos
push
js
fnstcw
mov
popf
mov
mov
pop
push
add
add
push
sub
add
std
addb
outsl
sti
push
add
dec
or
mov
mov
xlat
sub
jae
dec
mov
cwtl
adc
fs
add
out
repz
scas
jmp
lods
jle
or
add
rolb
outsl
xchg
xchg
test
fnstsw
cmpsb
add
ret
fsubrs
dec
out
leave
les
jne
mov
inc
add
cmpsb
add
xchg
add
dec
push
mov
or
test
and
dec
pushf
cmp
mov
mov
add
fldl
push
sbb
rolb
insb
orl
icebp
pop
ret
addr16
xor
sbb
inc
pop
push
add
add
clc
inc
add
aas
mov
add
fucom
add
xchg
cmp
add
test
or
push
push
jnp
add
push
adc
mov
lock
cld
inc
add
pop
adc
xchg
inc
add
add
gs
jg
test
stos
stos
outsl
xor
add
jbe
insl
push
add
jge
out
lds
sbb
sti
inc
dec
ficoml
add
xchg
aas
popa
jl
sub
inc
add
push
sbb
add
in
je
cmpsb
add
add
sti
aas
ret
or
add
fcmovne
into
dec
sbb
inc
roll
jp
or
mov
cmp
in
push
loopne
les
inc
pop
xchg
movsb
add
add
mov
sub
add
pop
mov
cmp
addb
in
jb
push
lock
scas
pop
lea
dec
in
les
sbb
and
add
insl
loop
out
xchg
loope
dec
xchg
add
inc
fmull
into
fwait
cmpsl
pop
aad
add
add
add
and
divl
pop
push
push
lods
or
add
add
imul
jns
inc
setns
mov
and
fldenv
or
add
push
add
pop
mov
add
in
and
mov
add
jecxz
add
test
add
nop
add
bound
mov
push
mov
movsb
add
sti
push
cmpl
rolb
aaa
mov
add
add
rolb
pop
jecxz
add
mov
icebp
mov
loopne
shl
mov
pusha
add
cmp
and
and
mov
push
cmpsl
das
mov
mov
push
cmovl
add
add
addb
add
cmp
mov
mov
sub
add
out
mov
add
add
mov
inc
add
mov
data16
leave
mov
add
add
cmpsl
mov
lods
pusha
add
add
mov
add
movsb
add
movsb
add
push
add
leave
add
imul
dec
adc
sbb
iret
or
rolb
mov
and
mov
add
mov
mov
lcall
lret
dec
outsb
push
add
dec
push
xchg
inc
add
inc
add
js
inc
add
in
out
pusha
add
dec
pop
popa
and
das
and
mov
mov
out
add
push
add
lods
cmp
lods
add
jo
cmp
jle
insb
inc
add
jge
pop
or
add
mov
pop
idivl
into
mov
pusha
add
add
add
imul
pop
sub
or
add
addb
or
add
mov
cltd
in
clc
mov
int3
mov
lret
add
mov
outsb
mov
mov
loopne
push
add
adc
add
dec
mov
add
icebp
stc
out
insl
push
inc
add
push
jns
xchg
add
xor
mov
add
add
add
push
add
sbb
repnz
mov
sbb
add
add
cmp
xchg
mov
mov
fsubl
add
add
sub
adc
add
add
aam
dec
mov
add
add
add
add
xchg
js
jno
cmp
add
jl
mov
xchg
add
addr16
std
int3
mov
add
push
add
popf
pushf
insb
add
jecxz
add
adc
cmp
inc
add
add
add
pushf
and
repnz
add
fidivrs
xchg
lods
imul
add
insb
inc
out
jnp
add
les
gs
adc
xor
inc
push
add
add
add
mov
popa
inc
add
aad
ficompl
adc
push
pop
xchg
sbb
sahf
mov
ds
or
xor
hlt
add
xor
xor
add
add
sbb
fstp
cs
push
rcrl
inc
add
add
jno,pt
aaa
mov
jmp
sub
adc
pop
mov
add
add
es
or
dec
loop
adc
sbb
rcrl
data16
add
add
add
push
fcoml
in
add
int
sahf
nop
add
add
sbb
and
mov
jmp
add
xchg
xor
fcompl
aas
push
lods
adc
sahf
pop
insb
add
mov
sbb
lret
cmp
add
mov
xor
pop
mov
lods
fmuls
mov
xor
pop
mov
scas
jg
add
icebp
and
leave
imul
add
mov
dec
cmpsl
push
mov
ds
movsb
add
movsl
mov
xor
movsb
add
aam
dec
imul
mov
push
push
ds
lea
add
add
add
outsl
dec
adc
cmp
rolb
sbb
add
add
dec
dec
loope
arpl
add
mov
sbb
js
adc
dec
out
add
inc
add
outsb
cmp
add
gs
add
or
gs
cmc
int3
adc
cmpsb
add
dec
jle
jbe
loop
cltd
insb
sbb
inc
push
rcll
add
add
add
orl
insb
mov
add
adc
mov
add
add
mov
loop
cli
xchg
add
jbe
loop
fldt
add
add
int
add
iret
out
add
insl
mov
add
mov
push
add
add
sbb
ljmp
rcll
rolb
movsl
cmpsb
add
fsubrp
test
push
add
add
add
nop
add
loop
and
mov
dec
je
test
out
add
pop
jmp
push
add
add
add
add
out
outsb
mov
mov
add
jo
lock
testb
add
shrl
insl
pop
add
mov
dec
shrl
add
in
rolb
xor
mov
sahf
xchg
cmp
push
add
add
and
mov
add
add
mov
add
push
add
adcl
pop
dec
mov
pop
sub
adc
dec
push
inc
add
sub
dec
inc
fcmovbe
mov
cmp
and
mov
jne
std
add
scas
mov
dec
out
and
dec
cmp
add
jecxz
mov
mov
add
mov
das
push
cmc
lds
push
add
mov
lods
sub
outsl
adc
lods
xchg
jmp
jecxz
sbb
xchg
dec
cmpsl
or
popa
adc
dec
jo
xchg
in
cltd
mov
xchg
fnstsw
add
hlt
add
mov
push
add
test
mov
or
inc
lds
jge
add
hlt
add
pop
add
add
mov
clc
xor
mov
popa
lahf
or
cmpsl
leave
bound
mov
imul
or
pop
call
mov
xchg
in
inc
movsb
add
cs
out
xchg
and
or
mov
cmp
and
mov
push
cmp
pop
ror
fdivrp
dec
xor
int
add
not
testl
das
in
add
add
les
dec
mov
lret
and
mov
add
xchg
cmp
add
add
mov
add
mov
ja
pushf
jne
cltd
movsb
add
xchg
mov
imul
aaa
jg
add
fwait
insb
mov
add
add
enter
add
ds
sbb
xorl
popf
fucomp
bound
mov
mov
push
lods
stos
jl
mov
ret
push
adc
lahf
insb
and
mov
xor
dec
pop
andl
xor
push
scas
daa
loope
add
aaa
mov
lock
xchg
mov
popl
mov
jb
inc
pop
sbb
fdivs
add
add
add
cltd
arpl
add
sbb
add
hlt
add
add
add
cmp
xchg
add
lea
rolb
xor
jle
add
mov
add
and
add
push
dec
dec
cmp
add
sbb
add
fcoms
cltd
mov
sbb
dec
in
dec
pop
popf
cmp
lret
in
and
mov
pushf
in
inc
add
add
cmp
insb
mov
inc
add
push
outsb
sbb
inc
xor
add
movsl
insb
rolb
add
mov
add
push
lock
add
xchg
add
add
int3
sub
add
and
fstl
cli
insl
jbe
jge
testl
mov
ljmp
add
push
add
cmpsb
add
add
mov
mov
jnp
testb
push
cwtl
sub
xor
add
add
insl
aas
outsl
lds
mov
lods
dec
out
mov
rolb
subl
dec
xor
shll
sub
push
add
add
dec
stos
mov
lea
add
add
inc
roll
cwtl
mov
imul
sub
jmp
add
ja
push
cs
popa
jnp
add
add
jp
adc
add
or
mov
add
xor
dec
lods
pop
and
mov
ds
add
test
int3
mov
push
pop
mov
leave
sti
iret
jno
mov
mov
loopne
sub
sbb
dec
cmp
mov
cs
add
add
add
mov
jne
ljmp
leave
and
mov
push
ja
rolb
inc
movsb
add
add
mov
add
pop
or
pop
and
mov
pop
pop
test
in
out
nop
add
add
test
fsts
jns
add
adc
mov
add
push
add
popa
or
add
jnp
inc
pop
fdivrl
movsb
add
enter
js
add
int
aaa
dec
ror
jb
leave
sub
push
add
adc
call
sbb
add
or
sub
adc
lahf
push
add
icebp
mov
lahf
enter
add
pop
sti
loopne
pop
icebp
sub
addb
pusha
add
sar
movsb
add
push
add
add
movsl
jp
lock
mov
je
pop
push
add
jge
inc
add
clc
jge
add
jno
add
popa
push
mov
push
hlt
add
mov
pop
sbb
and
add
mov
mov
ja
mov
xchg
add
icebp
mov
add
test
jmp
inc
or
mov
out
add
pusha
add
add
fwait
xor
in
jmp
xchg
lcall
xchg
add
add
mov
add
pusha
add
xchg
add
mov
repz
stos
hlt
add
fdivr
inc
add
mov
jp
mov
data16
in
in
push
outsb
lret
outsb
xchg
rolb
add
add
adc
mov
test
sbb
push
push
add
ret
add
add
add
add
adc
addb
scas
cwtl
cmpl
add
adc
jns
add
add
add
add
fcomp
mov
shld
mov
mov
add
add
add
std
mov
dec
adc
mov
add
jmp
add
sub
mov
add
add
jl
mov
add
jno
add
mov
adc
addb
movsb
add
cmp
add
jb
mov
fstl
add
in
lock
mov
aad
mov
ja
negl
testb
roll
mov
inc
stos
test
add
lds
add
dec
call
out
enter
clc
xor
add
sbb
mov
mov
mov
xor
mov
jnp
add
push
add
les
testl
popa
sbb
into
leave
stc
push
add
add
subl
add
inc
mov
add
xor
mov
adc
mov
ret
leave
dec
adc
in
addb
daa
loope
dec
mov
jns
xchg
in
out
push
add
sub
add
add
push
lods
mov
jnp
dec
sahf
cmp
add
fildll
ret
fsubs
push
scas
test
loop
int
add
push
sub
bound
mov
add
add
repz
nop
add
lret
push
in
add
xchg
out
pop
int
pop
mov
int
add
add
sub
add
add
testb
add
add
pop
repnz
add
lcall
cs
lcall
xor
add
jnp
add
xor
js
add
aam
les
cld
loope
add
xlat
sub
mov
add
add
cld
inc
add
mov
addb
add
adc
loop
adc
dec
fidivrs
js
ljmp
clc
xchg
and
lock
movsl
mov
popa
je
test
add
push
add
xor
mov
xchg
or
int3
mov
clc
dec
jge
add
add
add
add
cs
inc
cwtl
sbb
sub
mov
add
add
repnz
mov
add
add
mov
or
sbb
mov
add
nop
add
js
add
imul
psubsw
call
add
aaa
test
jecxz
cmc
inc
add
inc
pop
lock
adc
add
add
sbb
test
add
inc
add
dec
sub
mov
add
adc
inc
xchg
in
lcall
add
add
cmp
fisttps
pop
into
lret
xchg
cmpsb
add
add
js
dec
add
and
arpl
cmpsb
add
and
mov
or
add
adc
call
icebp
cltd
push
sbb
add
or
or
ljmp
in
xor
and
nop
add
loop
in
cmp
hlt
add
pop
push
add
scas
inc
add
and
mov
pop
mov
inc
add
add
push
push
push
movq
loope
pop
movsl
movsl
inc
add
je
arpl
or
xchg
add
add
add
add
jnp
jo
sahf
pop
xchg
cmp
add
add
dec
xor
fisttpll
