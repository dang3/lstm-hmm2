push
cmp
clc
imul
aaa
insb
cmc
mov
add
add
push
add
lret
push
jl
pop
add
int3
in
cmp
pusha
add
sti
jp
add
out
add
mov
cmpsb
push
or
xchg
sti
jo
push
popa
add
pop
ret
add
scas
cld
and
mov
add
or
out
dec
inc
add
jle
fcmovb
add
mov
jno
pop
arpl
pop
sub
lock
add
hlt
data16
addl
addl
scas
popa
add
xor
xor
fcmovu
pop
mov
push
bound
int3
mov
call
add
shlb
cmp
stos
adc
xchg
push
adc
xchg
outsb
popf
mov
mov
mov
push
cmp
test
adc
sbb
cmc
mov
mov
mov
nop
lret
pop
add
or
xchg
sarb
add
mov
push
cmp
outsl
aam
ret
add
adc
lahf
mov
imul
cmp
adc
push
out
mov
lcall
sahf
mov
add
add
dec
leave
lcall
sbb
cli
ljmp
mov
and
add
loop
cmp
add
fwait
ds
cmp
int
adc
aas
dec
sgdtl
add
sbb
sub
ret
add
mov
inc
add
xchg
xor
add
add
adc
das
mov
fstps
mov
lock
jp
loop
pop
arpl
and
jno
lea
jmp
pushf
pushf
leave
fldenv
sti
sbb
repnz
add
and
jmp
mov
addb
outsl
pop
scas
pop
jmp
push
add
test
adc
mov
add
inc
add
pusha
add
mov
xchg
sub
add
pop
add
add
int3
adc
addb
pop
xchg
les
jl
wbinvd
sub
add
adc
cmpsl
fwait
rolb
roll
pop
add
pushf
jmp
clc
sbb
mov
xor
push
pop
out
pusha
add
add
add
lret
sbb
mov
add
pop
jns
mov
cmpsb
arpl
lahf
mov
adc
add
dec
push
xor
xchg
stos
sub
and
adc
add
roll
stos
aad
inc
add
add
lods
outsl
add
aam
add
add
test
mov
cwtl
pop
lods
fidivrs
add
pop
add
pusha
add
jge
ljmp
sahf
clc
mov
add
add
roll
mov
out
bound
mov
push
mov
xor
add
outsl
pop
pusha
add
sarb
pop
push
incb
add
mov
inc
add
add
dec
lock
daa
lret
jmp
add
icebp
mov
add
imul
or
push
addl
push
out
pop
add
pusha
add
add
xor
add
mov
adc
lcall
ja
add
insb
loopne
jne
dec
adc
testl
and
in
paddusw
pop
sti
rol
add
inc
add
iret
cmp
jne
add
pop
dec
mov
roll
imul
add
xchg
int
pusha
add
add
enter
pop
jmp
mov
nop
and
sbb
int
ficomps
mov
pop
aas
es
xchg
rolb
jnp,pt
cld
push
movl
dec
pop
jns
dec
lahf
insl
jb
sbb
test
inc
add
addb
call
jae
add
sahf
movsb
jle
insl
lods
bound
loop
aaa
movl
mov
inc
add
mov
mov
out
leave
push
ret
add
scas
xchg
inc
add
or
lcall
mov
add
inc
add
aam
js
add
stc
push
lret
push
push
loope
testb
into
dec
out
movb
push
dec
dec
inc
add
adc
xchg
jns
xchg
xchg
lds
pop
ss
add
xchg
adc
rclb
add
addb
mov
add
xor
fimuls
sbb
rorl
cmp
sub
jne
sub
pop
out
push
or
add
movsb
addl
cmpsl
inc
add
jae
add
into
das
call
lahf
sbb
xor
cmpsb
and
add
roll
jl
add
mov
add
jne
sti
dec
and
cld
imul
xor
mov
popa
add
leave
and
inc
add
add
push
pop
es
push
mov
aas
sub
popf
push
jnp
imul
cli
ds
push
cwtl
roll
dec
mov
add
pop
and
xor
jl
add
fnstcw
mov
jecxz
push
mov
mov
add
cmpsb
lods
push
scas
mov
or
push
popa
add
mov
pop
je
out
cmp
fsubrs
jno
xchg
ret
push
mov
add
mov
scas
fistps
popf
fisttpll
add
pop
les
pop
jns
in
mov
scas
mov
jle
pop
ss
aaa
mov
xchg
and
adc
jmp
jae
xchg
inc
add
mov
inc
add
ss
in
and
mov
les
lods
xor
stc
lcall
pop
mov
movb
fcmovb
add
push
pop
push
inc
add
or
outsb
or
ss
add
stos
stos
addb
lds
dec
lock
in
cld
movsl
xor
add
test
push
call
sub
int
je
aam
pop
add
add
add
mov
push
push
and
insl
mov
loop
lock
xor
aad
add
insl
rcl
aam
arpl
mov
add
mov
xor
jnp
xor
test
fs
xor
enter
outsb
stos
add
out
pop
mov
push
jb
push
fsubrl
outsb
mov
pushf
shlb
inc
add
out
mov
pop
scas
fisttpll
add
lret
add
add
push
icebp
jmp
add
repnz
push
repnz
inc
add
repnz
ret
add
ret
and
popa
add
jge
add
and
leave
mov
add
ljmp
rolb
pop
ljmp
std
xchg
testl
test
and
shl
addb
lea
cmp
insl
dec
iret
test
inc
add
das
out
pop
testb
ret
add
pop
mov
mov
jne
inc
add
lret
jmp
iret
je
sub
cmp
mov
inc
add
add
and
jne
das
and
popa
add
cld
sub
daa
in
stc
mov
shr
bound
push
jl
add
xor
ljmp
mov
insl
mov
sbb
fdivl
negl
add
cmpsl
jecxz
rclb
xor
jnp
adc
repz
or
add
push
pop
addl
dec
dec
in
lcall
mov
mov
data16
add
add
push
jae
test
addb
add
add
data16
adc
xchg
inc
add
popa
add
add
frstor
test
add
jmp
lret
pop
dec
ret
add
adc
cwtl
push
add
jg
int3
pop
pop
sub
mov
cmp
add
add
pmulhw
ss
popa
add
mov
mov
mov
jns
ds
add
push
int3
add
fldt
inc
add
inc
add
fldt
mov
movsl
mov
mov
inc
add
cwtl
roll
loop
pop
lds
mul
inc
add
adc
push
stos
movb
add
xchg
xchg
fisttps
popl
cmc
rolb
pop
movl
mov
add
pushf
sbb
ds
lcall
into
mov
sbb
pop
inc
add
pop
mov
mov
sub
add
movb
sbb
push
mov
add
aam
loopne
add
cmpsl
and
add
lock
inc
add
or
fnsave
dec
mov
jnp
into
clc
call
pop
pop
or
lahf
jns
pusha
add
loopne
daa
add
int3
fstps
push
mov
jo
dec
repnz
outsb
add
sti
imull
mov
nop
xchg
jp
jl
into
aam
add
xor
scas
test
pop
outsb
mov
add
icebp
movsl
test
lret
xor
pop
sub
inc
add
loope
xor
add
sub
xor
fstl
rolb
jne
lret
insb
cld
push
dec
scas
cmp
lret
test
and
in
adc
imul
mov
add
xchg
jle
cmp
cmp
xlat
jmp
aas
rolb
shrl
jge
addb
scas
mov
sub
push
sbb
lret
dec
insb
scas
leave
add
push
lcall
adc
xor
xchg
addl
and
and
roll
and
std
add
adc
mov
sbb
push
ljmp
dec
jmp
push
xchg
mov
roll
xor
adc
cmpsl
mov
flds
add
inc
add
jb
xchg
jp
xchg
loopne
loop
jg
gs
pop
test
mov
xor
ss
addl
test
mov
lock
cmp
or
add
sub
add
add
divb
daa
fldcw
jecxz
in
add
sub
cs
add
mov
fmulp
adc
shll
sbb
inc
add
xor
sbb
add
dec
mov
pop
fdivs
add
push
add
xor
into
dec
jns
or
adc
pusha
add
fcmovb
add
add
xchg
sbb
add
or
add
xchg
dec
sar
sub
testl
addb
add
std
in
movl
pop
or
add
in
dec
daa
or
mov
inc
add
xor
lret
jbe
add
add
lcall
sbb
push
bound
cmp
js
add
and
cli
mov
mov
xor
outsb
jp
push
add
notb
push
pop
inc
add
scas
lea
insb
test
leave
in
cmpsb
addb
mov
jae
jmp
jns
enter
mov
sahf
addb
add
add
add
add
bound
fmuls
call
enter
xchg
adc
in
add
mov
xchg
adc
in
inc
add
and
and
sbb
je
addl
add
add
int
adc
cwtl
aam
add
stos
xchg
hlt
pusha
add
add
arpl
dec
callw
daa
sahf
adc
dec
aad
addl
roll
sub
scas
cmp
sti
scas
inc
add
int
les
mov
shr
sbb
mov
loopne
cmc
ss
add
je
nop
test
gs
push
aam
inc
add
bound
aas
mov
mov
lcall
jecxz
in
mov
and
or
out
mov
dec
jbe
leave
scas
mov
add
add
dec
or
cmp
loop
push
outsb
pop
xchg
pop
add
mov
push
movl
mov
dec
cld
jo
and
mov
sub
cmp
enter
es
repnz
inc
add
push
js
mov
or
add
jmp
add
add
loope
xchg
lret
sbb
fistpl
addl
sbb
add
lret
mov
js
imul
std
movsl
je
addr16
popa
add
mov
push
mov
cmp
js
ss
jbe
out
jg
jmp
add
xchg
dec
stos
inc
add
add
jno
push
mulb
add
aad
adc
mov
jae
popf
mov
or
daa
movb
adc
mov
jns
mov
xlat
in
out
add
call
not
or
iret
add
mov
cmp
nop
in
and
in
or
mov
adc
add
jo
loop
in
sbb
sub
xor
sbb
scas
inc
add
or
repz
add
add
imul
addb
or
add
jae
add
add
jp
in
add
flds
xlat
or
add
add
sub
inc
add
add
out
sub
sbb
mov
insl
fldt
lret
cmpsl
pushf
dec
mov
in
adc
imul
jb
sti
loope
inc
add
lods
lcall
pop
mov
add
mov
push
xchg
mov
sub
aam
adc
ja
mov
pop
scas
stos
pop
or
in
mov
add
add
dec
mov
sahf
lret
jne
mov
stos
into
pop
xchg
and
push
add
add
mov
or
icebp
sbb
in
dec
xor
roll
jp
xor
push
leave
or
loope
add
bound
aam
sti
fdiv
and
movsl
cmp
add
sbb
bound
xchg
popa
add
push
loop
sbb
add
mov
mov
add
sbb
sbb
xor
add
cmp
fistpl
mov
mov
je
pop
test
adc
xor
ficompl
mov
mov
mov
hlt
push
mov
sub
push
mov
push
push
push
push
notrack
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
push
call
push
jmp
ret
mov
cld
cs
lea
xchg
or
xchg
lea
repnz
jne
jmp
pop
add
es
cs
add
add
data16
push
and
xchg
jl
xchg
cmp
cmp
add
int
cmc
xchg
push
sbb
ret
add
add
mov
cmp
sbb
mov
add
rolb
lock
xchg
xor
cli
jnp
or
add
sbb
out
pop
jp
mov
inc
add
add
pop
add
pop
and
push
pop
divb
sub
jecxz
loop
inc
add
fsubl
mov
jns
and
ret
add
pushf
add
daa
cld
movb
cmpsl
pop
add
pop
mov
sub
mov
add
sbb
es
push
dec
pusha
add
adc
dec
cmp
out
loopne
and
into
or
cwtl
stos
movsb
arpl
cmpsl
jns
fmull
ds
mov
cs
inc
add
clc
sbb
sub
xchg
jge
nop
stc
push
testl
mov
ja
mov
add
fsts
notb
mov
lret
dec
test
jo
push
sub
sub
ja
sbb
sbb
adc
cli
inc
add
mov
data16
addb
mov
icebp
inc
add
sbb
dec
fidivrl
jge
add
fistpll
fdivrs
fisttpll
pop
ds
scas
dec
shlb
jle
repz
sti
lods
fsubs
add
arpl
inc
add
mov
xchg
addb
add
push
inc
add
cmp
pop
imul
lods
xchg
cmp
jno
aaa
mov
cmp
fisubl
xchg
loopne
fnstsw
jmp
roll
sahf
stos
jge
jae
or
and
pop
xchg
mov
hlt
movb
cmc
mov
xchg
push
cs
cmp
in
cmpsl
xchg
sub
xchg
cmp
push
loop
push
and
mov
shll
lret
and
add
cmp
popf
jl
and
lahf
sbb
addl
push
xor
mov
call
push
mov
add
pushf
inc
add
pop
ret
add
add
push
mov
add
mov
and
adc
pop
les
add
loop
jb
mov
add
add
call
adc
out
call
test
dec
mov
stos
xchg
sbb
icebp
repz
add
mov
test
add
stos
lock
mov
addr16
sti
jp
cmc
movsl
addb
ss
xchg
loope
or
add
jae
in
jno
std
push
bound
inc
add
add
add
sbb
outsb
in
mov
adc
xchg
xor
add
inc
add
add
xor
inc
add
loope
sub
jne
add
scas
inc
add
push
aad
dec
mov
cld
pop
jns
rol
add
cmp
cltd
pop
pop
add
mov
push
push
add
add
loope
push
lods
and
cmp
inc
add
add
mov
pop
add
mov
add
dec
sbb
add
pop
add
add
ret
add
and
outsb
testb
jo
add
mov
sub
xchg
pop
iret
add
loop
js
and
mov
add
scas
push
in
daa
fstpl
insl
out
roll
mov
sub
add
add
xor
add
es
add
pushl
xor
dec
dec
shl
movsl
xlat
fcoml
inc
add
jae
add
rolb
cmc
lret
jnp
dec
lret
push
repz
add
sahf
std
xchg
mov
add
arpl
movb
icebp
outsl
rolb
add
ret
add
pop
jmp
daa
and
lret
cld
test
rol
add
movsl
rol
add
cmp
jbe
shlb
ret
add
icebp
cwtl
scas
addb
lret
out
out
push
fs
adc
cmp
cmc
sahf
and
out
rcrb
shll
scas
mov
ljmp
adc
mov
rolb
push
sahf
dec
add
sbb
xchg
mov
inc
add
add
jo
xchg
stos
or
add
push
dec
cli
adc
xchg
pop
fildl
add
rolb
test
xchg
popl
jp
fimull
addb
pcmpeqw
out
sub
push
in
jle
sub
rolb
lds
push
scas
es
sbb
sbb
cmp
jnp
jb
js
ret
adc
outsb
dec
pop
mov
mov
and
imul
sbb
add
into
pushf
addb
and
cli
and
mov
mov
add
add
add
add
and
cmpsl
mov
addb
sbb
loop
add
ljmp
std
rcrl
xchg
or
imul
movb
jne
sbb
mov
into
dec
push
repnz
cmpsl
or
movsb
or
jae
sbb
xor
and
insb
aas
pop
icebp
in
sbb
cltd
pop
jo
test
js
aad
push
out
test
inc
add
into
sbb
mov
add
push
or
push
addb
sarl
add
xchg
inc
add
sbb
out
dec
xor
mov
add
inc
add
add
pop
xor
or
and
and
ja
iret
pushf
fmull
jns
cli
sbb
gs
push
xor
loop
leave
fists
push
mull
lds
in
insl
push
lea
jne
or
and
pop
pop
push
or
das
cmp
leave
bnd
add
xor
test
lcall
fdiv
pop
push
popa
add
xchg
movsb
xchg
pop
inc
add
add
ret
add
mov
mov
add
add
cmp
cmp
mov
jno
hlt
add
popf
aam
add
lods
jae
and
push
in
add
xchg
leave
xor
inc
add
movl
popa
add
inc
add
add
push
lea
dec
popa
add
jle
ret
arpl
cmp
add
test
aad
mov
bound
ds
jp
add
xchg
enter
addb
push
sbb
sub
add
add
xchg
jmp
mov
pop
imul
add
mov
clc
sahf
cmp
inc
add
adc
add
les
fbld
or
fiadds
add
jo
add
add
mov
sbb
pop
or
pop
add
repnz
xchg
jl
outsl
fwait
mov
aam
or
pop
loopne
xchg
loop
test
data16
sti
pop
arpl
inc
add
or
add
add
xchg
mov
inc
add
rcrb
sub
or
and
addr16
fidivrs
or
dec
rol
add
sbb
fs
insl
stos
mov
jnp
test
fnstsw
add
sub
add
adc
mov
jle
movsb
movsl
sbb
aam
adc
xor
addb
add
repz
mov
add
aam
addl
in
or
add
rol
add
add
into
dec
pop
cltd
inc
add
add
pop
aam
add
mov
ficoms
xor
hlt
lcall
mov
add
aaa
cld
xchg
or
pusha
add
jecxz
mov
xchg
fisttpll
imul
outsb
dec
dec
mov
ljmp
sub
add
mov
push
sub
testb
add
add
gs
cmc
and
sahf
addb
sbb
add
push
inc
add
cmp
or
add
and
or
cmpsb
test
dec
add
jae
add
ret
leave
sbb
push
sahf
ss
jns
and
inc
add
add
icebp
lahf
leave
movb
scas
aas
inc
add
add
sub
adc
dec
sti
outsb
outsl
out
add
mov
xor
add
add
fcom
out
in
push
leave
hlt
dec
daa
aam
xor
pop
jae
push
dec
sbb
in
movsl
pop
loope
pop
pop
xchg
bound
push
clc
mov
mov
push
adc
imul
leave
movsl
mov
call
add
test
pop
mov
jg
jecxz
lahf
stos
cli
outsb
arpl
testl
jo
iret
imul
arpl
lds
std
jge
cli
shll
add
add
lahf
dec
xchg
cmp
popa
add
dec
xchg
cltd
inc
add
lods
scas
cmp
adc
mov
movsl
pop
add
xor
mov
sbb
test
enter
cmp
addl
sbb
add
mov
push
xchg
and
mov
bsr
mov
cmpsb
daa
mov
cmp
jg
add
iret
push
mov
repnz
add
xor
add
clc
or
xchg
leave
std
inc
add
mov
stos
daa
push
addb
push
add
pop
and
cmp
jg
mov
pop
or
xor
arpl
mov
outsb
aas
pop
add
out
out
or
mov
add
xor
mov
inc
add
and
mov
xchg
insb
addl
in
inc
add
inc
add
add
std
ret
roll
testb
mov
fs
add
ljmp
xchg
test
ret
add
addr16
add
out
mov
movsb
push
jecxz
inc
add
mov
iret
std
fldt
add
xor
lds
aas
daa
sahf
mov
xchg
das
fbld
inc
add
mov
mov
add
add
pop
xor
inc
add
pop
repz
xchg
push
adc
fildll
mov
add
mov
outsl
ja
sbb
cmc
icebp
rol
add
sub
ss
add
push
xchg
addl
add
pop
push
add
sbb
add
xchg
imul
mov
lods
int
sub
cmpsl
les
mov
dec
in
and
mov
push
mov
and
hlt
movsb
stc
pop
std
test
je
aaa
jecxz
js
test
push
movl
rolb
pop
and
add
pusha
add
enter
sti
push
jb
lock
push
lock
add
sbb
sbb
mov
dec
xor
add
out
add
mov
mov
add
push
movl
sub
inc
add
xchg
es
add
fadds
cwtl
int3
std
mov
stos
outsb
sub
xchg
push
es
xchg
pop
jnp
sub
lods
push
leave
iret
xchg
xor
test
popf
xchg
repz
add
lcall
movsb
mov
inc
add
xchg
imul
frstor
add
sbb
add
xchg
mov
pusha
add
pop
addr16
out
add
add
stc
insl
mov
nop
xchg
icebp
add
repz
pushf
mov
pop
add
or
lahf
js
scas
nop
cmpsl
loope
add
push
dec
push
bound
ret
add
icebp
out
xchg
ds
movsb
repnz
test
fbld
test
mov
and
sbb
in
xchg
fcompl
pop
inc
add
fisttpl
stos
push
and
fldl
mov
add
mov
rolb
add
mov
dec
mov
add
outsb
sub
ljmp
lock
sub
fwait
in
popf
or
push
xlat
cmpsl
les
cmpsl
psrlw
xor
inc
add
out
popa
add
pop
sub
add
bound
loope
add
and
decl
mov
fisttps
push
jl
inc
add
inc
add
pop
mov
pop
inc
add
add
aad
jo
out
hlt
jne
and
pusha
add
add
jns
jg
mov
aaa
pushf
xor
jp
jno
in
push
xchg
mov
add
xchg
mov
in
and
add
pop
inc
add
insb
incl
cmc
jg
mov
add
mov
add
lret
cmp
insl
xor
add
push
xchg
dec
inc
add
add
inc
add
add
add
sbb
bndstx
fsub
int
enter
cmc
insl
ret
scas
pop
stos
mov
movl
jae
rol
add
pshufw
add
enter
inc
add
xchg
sbb
add
dec
frstor
lret
or
fstl
clc
and
ljmp
loopne
sbb
jge
dec
test
pop
push
fisubs
int3
jecxz
add
jg
push
inc
add
test
inc
add
dec
sub
push
cld
mov
inc
add
add
mov
sub
lcall
push
adc
add
fists
ds
mov
gs
pusha
add
cwtl
cmp
or
fisubs
and
mov
cs
iret
jnp
addb
sbb
or
mov
lret
sub
shlb
add
test
mov
xlat
ja
add
add
sbb
or
jae
icebp
or
mov
add
clc
xor
mov
scas
addl
xor
add
push
add
addb
add
xor
mov
loope
and
rcll
mov
xlat
or
fldt
mov
ja
pop
jo
iret
pop
vmread
cmp
cmc
xchg
cmp
jns
add
xchg
lds
xor
movsl
push
bound
inc
add
xchg
addb
lahf
jp
add
icebp
fs
lds
lcall
dec
mov
addl
sub
popaw
add
out
movb
je
cmp
push
add
sbb
jg
add
clc
sbb
stos
add
imul
lret
mov
add
mov
jp
add
fnstenv
test
data16
add
lcall
test
pop
scas
arpl
mov
add
fidivrl
pop
addl
fisubs
add
push
int
push
mov
and
cs
cltd
pop
add
movb
mov
jmp
imul
add
mov
adc
add
mov
add
je
add
cmp
mov
jge
xchg
mov
add
lret
add
or
adc
das
adc
xchg
mov
ret
hlt
stc
pop
fidivrl
test
mov
dec
or
arpl
shlb
add
add
add
mov
add
pushf
inc
add
bnd
pop
mov
cmp
add
arpl
icebp
mov
add
cmpsl
mov
push
xchg
and
sbb
jl
arpl
or
aad
add
pop
pop
icebp
sbb
xor
add
sbb
addl
test
addr16
mov
add
xchg
cmp
push
or
xor
add
sbb
sbb
pop
adc
jmp
add
roll
add
cmp
xor
daa
push
test
mov
inc
add
test
outsl
insl
outsl
aam
add
add
scas
pop
mov
dec
mul
scas
lret
mov
cmpsb
xchg
into
aam
add
je
inc
add
mov
bound
stos
out
in
mov
mov
lods
mov
clc
fdivr
inc
add
sub
imul
cltd
sahf
and
daa
shll
dec
lcall
repnz
or
pop
and
or
xchg
jo
add
add
addb
add
mov
or
repnz
aaa
jb
movl
and
xlat
add
xchg
cmp
in
and
jb
mov
xchg
xchg
or
adc
lods
sbb
push
mov
adc
add
cmpsb
dec
push
insl
addl
cmp
mov
iret
sub
add
mov
xchg
aam
popf
fildll
dec
fldcw
neg
xchg
ror
pop
xor
cli
inc
add
sub
xor
xchg
push
add
xchg
daa
out
stos
imul
sarl
add
js
add
mov
aam
mov
dec
clc
roll
push
push
iret
mov
add
sahf
cmp
call
aaa
and
mov
aas
popf
cmp
sub
mov
add
add
pop
js
adc
cmp
in
jno
cmp
pop
jle
jo
xchg
addb
push
xor
add
mov
out
loop
shrl
pop
sbb
dec
cmp
mov
and
add
lret
add
add
inc
add
mov
adc
mov
mov
or
fsubr
ljmp
sbb
push
sub
sub
push
dec
imul
dec
jnp
inc
add
cmp
sub
clc
push
rcrb
inc
add
mov
sub
lret
addb
fmull
xchg
pop
push
ret
add
dec
xor
scas
lret
das
std
mov
not
test
fwait
mov
xor
xor
test
test
movsl
sbb
das
bound
or
inc
add
add
mov
call
sub
jp
movsb
adc
iret
imull
das
insl
stos
pop
shlb
xchg
negl
mov
add
enter
popa
add
add
add
sti
in
in
in
dec
movl
out
mov
sbb
fisttpll
dec
xchg
cmp
push
push
inc
add
add
jae
push
jmp
xchg
addl
inc
add
fidivs
cmp
adc
cmp
daa
fdivp
nop
mov
leave
xor
dec
out
add
ret
scas
jmp
and
adc
adc
add
and
cmp
test
cmp
jbe
jbe
aaa
sarl
sub
xchg
lcall
inc
add
es
mov
dec
push
gs
ljmp
add
dec
mov
bound
repz
mov
lahf
xlat
adc
sbb
add
movl
push
or
scas
xchg
inc
add
lahf
sbb
mov
add
jecxz
add
mov
adc
pop
add
rorb
sub
negl
add
addl
dec
xor
or
xchg
mov
add
addl
add
lcall
loop
inc
add
xchg
mov
pop
add
out
xor
pop
add
icebp
arpl
jno
aad
ss
adc
add
mov
dec
mov
or
adc
test
es
roll
pop
jmp
pop
add
movl
cmpsb
adc
xor
xchg
xor
ret
add
cld
xchg
in
dec
idivl
mov
xlat
fucom
and
jp
outsb
pushf
in
repnz
jge
ds
add
sbb
insl
out
or
aas
stos
push
add
add
sub
pop
xor
xchg
sbb
testl
out
lahf
hlt
sbb
inc
add
ds
sub
add
inc
add
dec
into
fisttps
icebp
ljmp
addr16
movsl
xor
or
jno
pop
dec
mov
jp
xor
pop
incl
sbb
pop
out
add
fidivl
add
lods
sbb
movsb
cmp
pop
inc
add
cmp
inc
add
scas
cmp
movsl
stos
ljmp
jnp
and
xchg
sahf
pop
iret
push
roll
add
cmp
mov
xlat
mov
sbb
add
rcpps
dec
lea
pop
jns
fdivp
call
dec
std
rcll
int3
add
pop
movsl
repnz
dec
roll
cmc
jnp
sbb
sbb
add
cmp
mov
bound
lock
fsts
insb
jle
xor
test
les
push
in
cmp
lahf
sub
mov
jg
scas
decl
fcompl
cmp
add
pop
pop
in
call
xor
movl
and
fmuls
xchg
and
inc
add
mov
or
aam
cmp
scas
pop
dec
ret
add
lock
std
mov
ret
add
lods
jg,pt
in
negb
sti
cltd
outsb
ss
mov
inc
add
inc
add
xlat
movb
pop
xor
jne
or
stos
push
mov
les
test
loop
add
add
addr16
lret
dec
xchg
fcompl
test
lock
dec
sti
dec
lcall
lea
jbe
push
add
call
pop
jmp
add
sbb
icebp
aad
xor
add
jle
push
cmp
pop
xor
jge
nop
jmp
mov
mov
in
inc
add
push
out
sub
add
arpl
and
sbb
in
out
mov
addl
mov
ja
fsub
add
sbb
add
add
fmull
in
dec
popa
add
int3
pusha
add
push
rorl
adc
push
add
add
jns
jecxz
stc
mov
pop
push
roll
out
repz
add
leave
push
sbb
xchg
jbe
rolb
pop
mov
add
stos
dec
xlat
mov
add
push
jmp
in
movsb
cmp
add
xchg
or
call
push
dec
inc
add
int3
and
test
push
xor
sahf
mov
pop
popa
add
test
fnsave
lret
mov
sub
lods
out
sub
and
push
push
add
fidivl
addl
mov
pop
mov
arpl
xchg
lods
mov
add
sti
popf
cmp
jmp
sahf
add
add
mov
jne
mov
push
repnz
lcall
sbb
lods
push
pusha
add
mov
add
add
jmp
push
jo
addl
into
and
or
aam
addl
mov
imul
xchg
lret
lock
add
mov
add
addl
push
add
add
add
cld
mov
add
mov
mov
add
cltd
mov
mov
mov
push
sub
out
and
pop
add
in
xchg
cs
sbb
mov
ss
add
sub
pop
lods
gs
xor
cmp
add
jge
or
fdivr
enter
inc
add
add
or
mov
jae
add
addl
mov
add
xor
movsb
and
sbb
leave
xor
add
sbb
fmull
in
adc
in
mov
out
mov
pop
jle
sbb
addl
xor
shll
jb
add
inc
add
pusha
add
or
add
push
add
add
mov
jae
int3
js
pop
push
les
stc
addl
sbb
adc
add
std
outsl
pop
push
lods
mov
or
ds
dec
jmp
and
movsb
roll
cmp
arpl
and
hlt
sbb
push
adc
adc
js
push
add
mov
xchg
and
call
cmp
mov
int
pop
and
push
popf
and
inc
add
pop
adc
pop
sbb
add
imul
xchg
mov
ljmp
mov
cwtl
stos
aam
sub
addb
outsb
xor
adc
rcrl
pop
dec
lods
pop
stos
aas
xchg
ja
jns
add
push
add
ret
add
jns
movsl
scas
cmp
les
jl,pn
jp
add
xor
int
push
ret
add
jb
in
je
imulb
push
add
cwtl
lods
xor
mov
pop
pop
add
add
std
in
mov
push
pop
lods
add
aaa
cmp
mov
adc
test
sbb
shlb
popa
add
or
add
add
mov
push
call
add
inc
add
mov
nop
inc
add
rcl
cmp
and
add
sub
popf
cmp
cmp
mov
out
add
cwtl
sbb
xchg
push
in
or
aam
mov
dec
cs
or
or
test
and
lahf
dec
add
addps
jecxz
lds
addb
add
add
int3
scas
add
mov
cmc
pop
push
lock
add
popa
add
add
push
roll
fnstenv
loopne
add
js
xchg
or
cltd
mov
das
dec
int
or
lret
xchg
jmp
jno
add
out
fdivrs
call
cltd
dec
or
mov
pusha
add
rep
jnp
movl
push
pop
inc
add
lea
aaa
jge
loopne
adc
add
jecxz
out
xchg
outsb
xor
sti
pop
in
fs
aaa
xchg
add
jl
decl
fdivs
add
add
dec
nop
gs
add
cmp
xchg
movsl
jge
dec
sub
leave
les
and
mov
adc
push
lods
cmpsb
ret
fidivrl
jae
lock
insb
xor
add
mov
add
cmp
jnp
add
ret
add
loopne
dec
and
dec
cs
aaa
sub
jae
inc
add
out
sub
adc
out
loopne
add
add
int3
jae
lret
shr
xchg
xor
lea
add
xchg
faddl
call
add
insl
mov
adc
dec
or
loopne
mov
ljmp
mov
cmp
push
ret
add
add
bound
mov
cmp
mov
notb
xor
add
imul
add
add
add
jmp
push
sarb
add
add
and
push
cmpsb
mov
mov
jl
inc
add
add
ret
add
fmull
jne
adc
cmp
add
in
mov
mov
xor
push
int
push
addl
pop
jp
xchg
xchg
testb
lret
nop
and
mov
fiadds
add
das
cld
xor
add
addl
mov
add
add
push
add
js
mov
jge
mulb
push
dec
xchg
clc
in
or
inc
add
push
pusha
add
enter
mov
lcall
add
or
rorb
fnstenv
mov
mov
dec
fnstenv
add
loop
pop
add
mov
xchg
sub
adc
std
jnp
int3
inc
add
inc
add
pop
sahf
mov
and
mov
dec
mov
repz
dec
lods
inc
add
xchg
lock
test
addb
icebp
mov
inc
add
pop
sbb
mov
imul
mov
pushfw
add
in
add
or
push
sub
jae
rcrb
pop
add
inc
add
xchg
lea
add
in
leave
shr
test
push
sub
outsl
jg
add
add
add
addl
addr16
in
pop
enter
or
sbb
int3
and
es
aas
dec
pop
mov
mov
rcll
cmc
mov
fwait
sahf
bound
pop
dec
jns
cli
jecxz
ss
in
aad
shlb
mov
dec
jl
mov
inc
add
xor
add
repz
add
mov
adc
movl
jo
xchg
mov
js
sahf
into
jge
push
testb
inc
add
mov
pusha
add
sbb
adc
add
add
addl
popa
add
mov
mov
add
ficompl
mov
imul
movb
popa
add
daa
inc
add
lods
mov
sbb
jb
add
hlt
sahf
rclb
fisubrs
in
sub
addb
mov
ss
leave
jbe
add
xchg
js
dec
sub
add
cld
cmpsb
popa
add
adc
jmp
mov
add
add
add
sbb
sarb
cmp
dec
clc
sub
add
mov
lods
data16
and
push
add
push
add
stos
dec
loope
pop
pusha
add
add
loop
fldenv
sahf
cmp
out
in
rolb
mov
add
mov
and
jbe
add
add
dec
jecxz
js
push
sub
aaa
xor
xchg
pop
xor
dec
jno
jo
insb
mov
add
ss
or
out
jno
push
dec
popf
push
and
mov
addl
aam
sub
dec
lds
add
gs
jne
add
ja
xchg
movsl
pop
call
in
xchg
mov
leave
leave
adc
repz
jp
pop
mov
push
push
scas
adc
inc
add
rdmsr
cmp
add
add
jmp
add
add
sub
cmp
lods
int
nop
arpl
int
add
xlat
mov
lods
cltd
add
arpl
mov
mov
or
xor
xchg
pushf
add
mov
add
add
add
add
add
xor
sbb
arpl
ror
sbb
jnp
rolb
add
and
jnp
pop
das
adc
add
roll
dec
push
xchg
push
jmp
add
add
inc
add
sahf
mov
xor
mov
add
mov
hlt
and
push
divb
out
loope
movsb
and
dec
pushf
negl
ljmpw
xchg
pop
es
inc
add
mov
les
xchg
aam
dec
or
inc
add
dec
into
out
pop
xchg
pop
stc
jae
mov
add
ret
add
mov
jp
add
das
or
scas
or
jmp
xchg
sub
add
adc
or
push
outsl
adc
push
jnp
add
mov
int3
addl
cmc
leave
pop
scas
mov
mov
addb
sub
push
iret
lds
jg
pop
cmp
add
add
push
out
inc
add
xor
ror
das
mov
push
sti
mov
dec
cmpsl
sub
add
sbb
sbb
add
cmp
pusha
add
inc
add
das
loope
add
cs
jo
imulb
cmp
xor
aad
push
movl
sbb
or
add
add
mov
push
add
inc
add
mov
pusha
add
push
inc
add
add
jp
add
xchg
lock
add
fsub
cmc
shlb
add
imul
or
push
mov
test
add
fistps
mov
mov
cmpsb
mov
inc
add
clc
xor
and
add
cli
and
sub
xchg
xor
fimuls
mov
xor
add
jmp
jp
out
push
sti
pop
add
cmp
add
jle
mov
out
in
sub
lahf
arpl
push
sub
and
loop
add
xchg
loop
imul
mov
mov
dec
cwtl
js
insb
lods
mov
add
popa
add
add
xchg
mov
jbe
popa
add
aaa
mov
jmp
pop
in
ret
mov
xor
or
xor
add
stos
push
dec
mov
ret
add
push
or
adc
cmpsb
jmp
pop
sub
add
push
inc
add
add
addl
push
divl
xor
add
pop
dec
gs
or
push
sub
inc
add
test
mov
fstp
push
addb
jns
popf
out
add
mov
add
xchg
test
sahf
jo
bound
cmpsb
adc
and
mov
fdivs
pop
pop
fmull
mov
rolb
add
adc
add
je
add
sub
cmp
push
jns
jl
add
sbb
push
fsts
cwtl
pop
sub
xchg
mov
sub
add
test
jmp
mov
xor
add
mov
popa
add
add
loop
add
mov
xchg
movl
pop
and
stos
mov
push
jmp
dec
and
xor
push
cmp
cmpsl
xor
sbb
cmp
lret
xchg
popa
add
adc
add
in
je
or
ret
add
lock
test
outsl
mov
or
adc
inc
add
mov
shlb
and
add
fcmovne
dec
xor
add
popa
add
add
int3
xor
add
insb
or
add
jb
adc
add
fnstenv
mov
or
add
ficoml
add
xchg
sub
inc
add
fcompp
xchg
and
add
jae
dec
fstpt
sub
add
mov
mov
jae
add
add
insl
mov
add
xchg
jg
mov
add
lret
mov
jb
add
fcmovnb
add
add
add
mov
inc
add
movsb
pushl
pop
ds
insb
and
mulb
push
mov
xchg
xor
pop
and
in
mov
and
add
and
lcall
sahf
mov
add
and
sbb
add
jle
add
cmp
xchg
and
xor
aas
jmp
xchg
cli
addl
sbb
addl
leave
rolb
rolb
pop
jp
insl
daa
lret
pop
sbb
and
gs
dec
lahf
push
clc
adc
lods
fs
sub
jge
in
dec
daa
xchg
push
add
add
add
push
add
jmp
jge
sub
jp
or
fisttpll
ss
mov
xlat
pop
add
or
add
mov
add
add
mov
sub
push
sub
mov
lds
or
jp
inc
add
inc
add
adc
sbb
pushf
outsl
inc
add
cld
or
in
and
dec
fnstsw
mov
shll
sbb
ret
mov
adc
int
add
add
mov
pop
jecxz
icebp
xchg
push
fidivrl
add
sub
addb
jb
add
fidivl
push
add
mov
dec
add
dec
cmp
fistps
add
add
ljmp
xor
es
decb
push
add
in
jge
push
test
xor
mov
in
pushf
or
mov
sbb
inc
add
inc
add
add
jl
addl
call
push
lret
push
into
movsb
sub
or
or
pusha
add
je
add
fldt
or
lret
cwtl
addl
sbb
ds
pop
ja
dec
out
mov
xchg
je
in
arpl
enter
sti
mov
dec
test
sub
add
add
mov
add
push
addl
add
mov
leave
repnz
nop
pop
adc
ss
add
enter
sbb
add
push
pop
test
add
adc
sub
nop
push
out
push
lahf
xor
add
fcos
mov
aas
rolb
cmpsb
cmp
add
mov
sub
test
movsl
inc
add
scas
das
fnsave
pop
mov
and
ret
add
iret
push
add
cld
sbb
cli
inc
add
in
pop
adc
sbb
fwait
bound
nopl
mov
out
dec
mov
xchg
call
xor
or
sub
push
call
add
add
test
cmc
or
insl
iret
xor
pop
add
fstps
sbb
add
into
scas
mov
clc
std
repz
cltd
jg
add
mov
test
add
leave
mov
cld
xor
add
mov
js
pop
enter
add
add
cmp
cmp
mov
pop
cmc
sub
cmpsl
push
push
fdivl
add
xchg
addb
in
loop
mov
xor
add
jmp
dec
add
add
mov
cld
sub
inc
add
loop
js
or
dec
inc
add
addb
in
cmp
add
repnz
add
std
int3
fdivs
test
lahf
dec
jne
pop
sbb
add
test
hlt
jl
enter
add
lds
or
sbb
fwait
xlat
addl
mov
xchg
pop
xor
add
loopne
stc
and
aas
rcrb
gs
add
xchg
push
filds
adc
cmc
inc
add
pop
in
add
lea
test
aam
mov
adc
add
add
add
adc
mov
jecxz
sbb
add
inc
add
xchg
push
hlt
insb
push
in
ret
add
jns
add
out
stos
xchg
mov
add
in
add
dec
add
bound
call
and
fdivp
shl
fnstenv
mov
jmp
pop
nop
pop
pop
adc
mov
shrl
lahf
enter
and
mov
jmp
pop
inc
add
add
mov
inc
add
lcall
scas
test
sbb
fistpll
adc
imul
mov
or
add
mov
leave
xor
jmp
cwtl
loopne
push
pop
aas
rorl
mov
pop
mov
sub
and
pop
mov
lods
aad
fstpl
gs
pop
inc
add
cmp
addl
xchg
mov
jb
mov
cmpsb
or
push
pop
lock
and
adc
fdivp
lret
inc
add
in
jb
push
rclb
pop
sub
faddl
add
sub
mov
gs
add
add
popa
add
sub
lea
pop
jle
movl
rcrb
addl
add
leave
aad
or
fstp
add
sub
or
add
mov
stos
xchg
stc
sub
mov
js
xchg
cmp
mov
mov
inc
add
or
aas
mov
xchg
dec
outsl
cmpsl
jg
jmp
adc
pop
mov
xchg
fwait
scas
xor
out
fistps
jo
lret
mov
mov
cmp
jno
in
faddl
mov
jle
pop
jae
movsl
and
fisubl
std
add
aad
add
mov
push
cmc
dec
push
mov
xchg
fs
and
mov
xlat
mov
call
into
push
add
jecxz
push
in
cmp
inc
add
sbb
and
sbb
mov
adc
jno
popa
add
jp
ret
add
add
inc
add
mov
adc
mov
loope
mov
xlat
gs
add
ds
xor
sub
push
inc
add
addl
cltd
mov
add
add
mov
fisttps
jae
cmc
inc
add
add
int3
stc
pop
mov
in
add
nopl
xor
sub
add
rorl
inc
add
cmp
add
adc
jne
dec
je
and
mov
add
in
mov
and
cmp
and
dec
and
mov
cmp
add
addl
add
outsl
xlat
dec
mov
add
adc
add
xor
mov
add
add
loopne
scas
ja
mov
rolb
cli
xor
ljmp
or
add
and
scas
dec
xchg
fs
or
or
xor
int3
outsl
dec
popf
jbe
cmp
mov
inc
add
or
not
cmp
mov
inc
add
mov
leave
sbb
mov
xchg
lcall
movsl
loope
clc
jecxz
cltd
mov
jmp
add
xchg
push
dec
cmp
addb
push
add
mov
in
in
imul
jb
adc
add
or
roll
add
mov
dec
mov
add
cmp
add
sub
and
push
mov
cli
cld
pop
popa
add
push
sbb
std
nop
ficoms
in
imul
push
stos
add
test
pop
mov
sub
sbb
sti
fldl
add
dec
icebp
push
enter
sti
fs
fnstenv
add
adc
test
add
mov
xchg
stos
push
dec
iret
rep
mov
cmp
aam
clc
sub
sub
push
add
mov
push
add
pop
and
adc
xor
lds
ret
add
xchg
movl
xor
sbb
add
shll
testl
sbb
push
lcall
icebp
push
pop
xchg
or
push
insb
adc
add
add
mov
pop
jae
xchg
dec
in
mov
cltd
and
int3
sbb
aaa
push
mov
pop
or
addb
incb
fstpt
popa
add
adc
sbb
aas
push
pop
mov
add
add
sub
fisubs
mov
jmp
mov
add
mov
xor
addb
add
mov
sbb
add
push
jl
pop
stc
push
fistps
daa
fldenv
loope
hlt
cmp
dec
les
push
add
mov
add
mov
add
stc
lds
ss
add
divl
add
pop
cmp
lds
test
pop
and
jmp
sub
out
pop
pop
add
sub
aaa
les
mov
push
scas
lea
add
add
in
outsl
decl
inc
add
xchg
js
xchg
shl
roll
aad
addb
mov
dec
xchg
stos
rclb
sbb
xor
shlb
jge
lea
test
or
mov
mov
popl
jmp
int
add
adc
mov
adc
test
pushf
xlat
icebp
push
lods
fs
mov
out
sbb
push
fcoml
jne
add
divl
addr16
jp
mov
int
aaa
outsl
push
xor
add
hlt
mov
sbb
add
jbe
inc
add
sbb
add
aaa
xchg
or
sbb
push
cmp
add
pop
xchg
out
add
ja
add
push
jbe
pop
cmp
add
dec
loope
adc
dec
daa
addb
sbb
sbb
cmp
push
je
jp
add
dec
addl
in
jb
cmp
movl
into
popa
add
mov
xchg
xor
inc
add
das
push
cmp
sti
push
add
dec
movsb
push
addb
aas
inc
add
and
add
rolb
mov
jecxz
fisttpll
lds
dec
jo
jno
add
xor
rcl
jo
push
xchg
rolb
cs
insb
adc
jl
stos
cmp
xchg
insl
lds
cmpsl
mov
mov
add
lahf
cmp
test
fidivrl
jge
iret
ds
addl
add
or
hlt
fwait
ljmp
in
add
stos
dec
stos
mov
or
add
or
lcall
out
cli
sbb
aaa
inc
add
es
and
cmp
cmp
add
lret
daa
cmpsl
mov
or
or
rcl
xchg
movb
sub
inc
add
mov
jae
test
popf
loope
add
aam
lods
fimull
scas
sarl
test
out
add
add
cmp
insb
push
add
stc
cmpsb
mov
mov
loop
add
movsl
pop
roll
bound
fucomp
mov
bound
movsb
pop
rcll
enter
fmulp
adc
movsl
or
xor
mov
add
inc
add
cmp
push
addr16
add
repz
lahf
and
mov
pop
dec
push
lret
stc
fsts
test
xchg
fwait
js
or
sahf
cmc
adc
sub
add
inc
add
aas
push
xchg
fistpll
mov
adc
add
in
sbb
add
test
cs
cmp
add
push
jecxz
add
addl
mov
cltd
xor
sbb
inc
add
add
add
rolb
popa
add
mov
add
cli
addl
leave
aam
incb
cmp
in
bound
jo
out
loopne
add
repnz
mov
mov
jle
add
loopne
ds
je
jg
dec
test
push
cmpsl
stc
cmpsb
pop
sub
and
add
dec
inc
add
add
cld
fidivs
jge
leave
call
rcrb
mov
sub
daa
mov
add
add
pop
push
and
pop
std
mov
pop
add
add
adc
add
sbb
mov
out
jno
sub
out
out
sbb
mov
add
sbb
adc
std
push
insl
mov
add
adc
mov
pusha
add
or
imul
or
mov
push
hlt
mov
push
lock
es
add
add
fwait
stos
leave
nop
scas
daa
addr16
add
mov
fstpt
std
jnp
in
add
jb
add
fs
mov
mov
push
pop
add
add
sub
sarb
push
out
cltd
outsl
push
jae
pop
rcrb
xor
push
ss
out
insl
loopne
pusha
add
mov
fnsave
mov
cmp
add
push
imul
insl
mov
dec
clc
clc
lret
outsb
xchg
mov
adc
daa
fsub
mov
in
jb
push
adc
pop
xchg
cmp
add
nop
fisubrl
jl
int
sbb
xchg
push
xchg
addb
movsb
mov
ds
adc
int3
fldt
jnp
je
lret
fwait
adc
add
pop
mov
sub
arpl
jns
push
rolb
fucom
fnsave
inc
add
sbb
add
jne
add
cld
sub
mov
loopne
out
add
test
sub
mov
test
push
xor
add
add
pop
lahf
sbb
leave
bound
pop
int3
test
sbb
add
out
push
and
sbb
mov
aad
cld
and
fsubrl
mov
inc
add
xor
lahf
mov
add
sbb
iret
lcall
sahf
rol
add
test
add
jecxz
cwtl
mov
dec
dec
dec
adc
add
fdivp
push
jge
das
jmp
add
mov
jp
xchg
out
aas
into
and
cmp
test
int3
push
cmp
add
add
pop
or
mov
repz
add
sbb
adc
roll
add
jno
add
cmp
popf
addl
mov
push
pop
xor
fstps
jae
mov
add
les
cmp
add
add
jecxz
fistpl
pop
daa
jecxz
or
fbld
out
sbb
test
or
sbb
mov
loop
xchg
stos
out
jns
add
add
add
loopne
mov
xchg
cld
roll
add
popa
add
cld
imul
cltd
js
bound
add
sub
add
push
ss
sti
cmp
add
sbb
stos
and
ret
add
outsb
jbe
add
add
mov
add
cs
fadds
dec
outsb
cmp
add
add
clc
jb
dec
cli
lds
mov
and
add
movb
scas
loope
in
xchg
bound
sub
xchg
je
mov
push
dec
test
daa
and
pop
dec
cli
pop
add
insl
lret
sbb
add
aam
mov
mov
mov
add
je
add
push
je
gs
pop
inc
add
cmpsb
or
aam
ljmp
dec
mov
out
ja
pop
pushf
or
stos
test
ret
add
inc
add
add
cltd
fwait
pushf
dec
test
cld
insb
mov
imul
enter
popf
or
xor
je
inc
add
clc
imul
insb
push
mov
sub
mov
add
mov
or
mov
in
scas
addb
loop
add
mov
ret
push
lret
jmp
mov
add
jo
and
mov
add
cltd
pop
enter
add
out
add
in
jg
dec
inc
add
mov
xchg
rol
add
inc
add
xchg
aaa
iret
ja
add
lds
mov
ljmp
loop
fs
push
jne
and
lcall
adc
call
add
cmp
or
sub
adc
nop
mov
add
add
test
mov
add
movsb
xchg
daa
xor
add
sbb
lret
in
pop
roll
test
daa
mov
and
mov
add
stos
cs
add
add
pop
mov
ljmp
fiaddl
cs
or
and
add
adc
fwait
out
jns
out
ljmp
pushf
dec
sub
dec
inc
add
imul
cltd
jo
cmp
iret
xor
test
ret
loope
ss
roll
cmp
int3
pop
push
push
push
inc
add
add
fmuls
in
fsubr
mov
add
inc
add
dec
fsub
jne
sbb
cmpsb
mov
stos
jp
lret
loope
xchg
iret
popa
add
sub
add
lds
and
jmp
dec
popf
mov
mov
pop
movsb
mov
xchg
mulb
addl
dec
out
push
je
enter
add
mov
mov
and
lods
fistpl
mov
insb
in
add
les
addb
mov
sub
lods
movsb
sbb
stos
or
nop
addl
pop
xchg
leave
pop
sub
movsb
scas
nop
jae
neg
test
rcr
iret
clc
jbe
and
or
aam
xor
lods
lret
xchg
fwait
icebp
xchg
xchg
mov
add
add
mov
movb
add
in
push
sbb
add
and
sar
sbb
add
fcoms
jmp
sub
mov
add
adc
cmp
test
inc
add
xor
dec
cld
cmc
out
cli
add
mov
add
push
add
add
fsubr
adc
add
insb
call
scas
in
dec
cwtl
dec
jp
adc
gs
dec
jb
pop
fmul
xchg
mov
ds
or
fsubrl
cmc
adc
mov
inc
add
add
pop
popa
add
dec
mov
xchg
test
movsb
fcompl
lcall
je
add
add
addr16
cmc
scas
mov
or
addb
add
cmpsb
fincstp
addb
xchg
add
sub
xor
stc
call
xor
pop
movsb
ja
imul
lods
mov
mov
and
jnp
adc
lret
lods
or
add
repnz
lret
xchg
in
pop
into
leave
clc
push
mov
add
mov
aas
add
in
pop
add
in
roll
add
xchg
rorb
in
mov
add
addr16
je
add
pop
xchg
les
movl
xchg
dec
pop
das
adc
clc
lods
jnp
jb
jge
add
inc
add
insb
pop
dec
std
push
test
add
xlat
fs
lcall
push
inc
add
test
add
lret
lds
scas
shrb
jae
mov
add
inc
add
lret
inc
add
mov
lret
fwait
mov
ficompl
inc
add
add
add
insb
lods
sbb
dec
mov
add
mov
fisubrs
add
or
cmp
pop
aam
add
mov
add
mov
or
and
fstpt
rcl
sub
and
dec
sbb
jl
arpl
sbb
add
test
add
cld
mov
push
inc
add
shlb
or
add
add
ss
add
xchg
loop
add
xchg
adc
mov
add
je
negl
add
bound
xor
popa
add
adc
jns
lahf
dec
pop
mov
push
or
mov
adc
or
xchg
lcall
in
lret
push
add
addb
or
jb
pop
jl
in
cmp
inc
add
jns
pslld
mov
xchg
roll
mov
test
jl
stos
cld
inc
add
jl
nop
mull
add
jae
fisttpll
cmp
and
mov
into
lcall
nop
jae
mov
fidivl
cmc
adc
sub
test
add
cmp
sbb
add
add
add
jnp
cmp
roll
push
xor
movsl
sub
fnstcw
add
xchg
ret
add
test
int3
jl
xor
dec
into
adc
xor
sarb
ds
rorb
lods
insl
jno
adc
scas
dec
mov
cmp
mov
pop
jge,pt
ror
out
sbb
popf
pop
das
pop
mov
arpl
outsl
pop
add
icebp
cmc
sub
pop
je
mov
mov
dec
fildl
arpl
les
out
testl
bound
cs
outsb
and
jbe
push
pop
rcrb
outsl
rolb
sub
movl
xor
idiv
xchg
addb
aam
fnstsw
sbb
add
std
inc
add
shrb
mov
sahf
and
and
add
mov
les
mov
addb
add
add
fcmove
push
int
das
xchg
stos
jmp
add
stos
jb
dec
mov
add
xor
insl
push
jge
fsubrl
hlt
jmp
leave
and
outsb
das
scas
loopne
cld
insl
out
dec
adc
inc
add
mov
sbb
cltd
leave
into
xchg
inc
add
movsl
rep
fistpl
mov
mov
jmp
cmpsb
shrl
ss
clc
lahf
test
mov
cltd
xor
or
mov
shrb
jl
xlat
push
fdivrl
xor
sub
dec
push
js
je
repz
and
int3
xchg
popa
add
xor
addl
mov
lret
insl
mov
icebp
out
inc
add
sbb
xchg
movb
lods
loope
add
cwtl
std
je
pop
into
inc
add
xor
push
fdivs
movsb
sub
inc
add
in
iret
mov
and
out
in
push
sub
cmp
add
pusha
add
dec
lods
insb
xor
ljmp
mov
dec
imul
or
std
mov
add
add
mov
xchg
push
add
add
add
pusha
add
add
adc
fcmove
sbb
mov
je
lret
cmp
adc
add
mov
lods
repnz
xchg
out
lods
add
cld
addb
add
std
loope
lret
and
add
add
hlt
mov
add
adc
jl
scas
cmp
mov
jg
add
mov
dec
mov
inc
add
loop
fwait
pop
lods
or
and
aaa
mov
add
add
add
aad
push
sti
clc
dec
fists
movl
add
add
add
popl
pop
dec
xchg
rcr
clc
outsb
int3
cmp
fucomi
jge
mov
add
add
cmc
jne
iret
ss
add
mov
ja
mov
add
mov
sti
sbb
sbb
leave
jp
scas
fmuls
test
scas
in
test
arpl
mov
xchg
popf
cwtl
sbb
test
test
outsl
mov
out
ds
lcall
add
sub
aas
xchg
jne
inc
add
cs
and
cmpsl
addl
cli
mov
adc
pop
das
ja
lds
cmp
dec
push
inc
add
adc
addl
add
and
shlb
lcall
mov
push
jne
push
insb
xchg
addr16
mov
push
adc
fistl
add
and
les
aaa
adc
mov
daa
lods
out
rolb
movsb
xchg
mov
and
add
and
decb
mov
mov
sub
rcll
add
rorl
test
mov
fisttpll
mov
aam
insb
adc
das
or
and
fisttps
cmpsb
sub
add
movsl
incb
xlat
xchg
cmpsl
adc
mov
add
cmc
mov
addr16
je
mov
stc
arpl
sbb
mov
aaa
push
sub
add
add
movsb
mov
xchg
shlb
sahf
pop
push
pop
cmp
movsb
xor
std
aaa
in
pop
sub
int
add
and
int
add
fisubl
pushf
daa
aas
aas
mov
or
pushf
xchg
xor
add
inc
add
add
fadds
cmpsl
mov
cld
inc
add
add
mov
add
or
mov
and
cmpsl
lds
lds
sub
add
lea
jp
add
jecxz
out
mov
jns
pop
sbb
test
in
jecxz
jl
gs
push
mov
daa
dec
mov
in
xor
xor
add
sti
pop
lret
icebp
mov
mov
cs
icebp
push
xchg
outsb
sub
add
fwait
pop
mov
sti
or
xchg
adc
divb
add
xchg
lods
xchg
repnz
mov
or
icebp
and
movsl
int3
int3
mov
push
jmp
mov
ret
push
jno
scas
je
repz
sbb
fiaddl
xchg
jnp
in
mov
inc
add
add
adc
xchg
push
in
scas
das
mov
xchg
add
adc
aaa
addr16
mov
or
inc
add
sub
jae
add
dec
iret
push
add
push
out
push
add
lret
or
out
sbb
push
cmp
push
xchg
mov
jge
sub
add
nop
fldt
and
ja
add
push
add
dec
xor
add
sub
jge
fistl
add
addl
addb
xor
out
addb
sbb
xor
rolb
ja
das
stos
pop
cmpsl
and
mov
psrlq
pmuludq
ja
out
xor
add
mov
or
add
lea
sarl
add
fcoms
jb
add
sub
outsb
int
cmpsb
cmp
ja
inc
add
pop
popa
add
clc
out
movb
mov
jns
pop
or
xchg
add
xchg
scas
pop
adc
inc
add
stos
lds
pop
push
mov
add
cli
adc
les
in
clc
xchg
and
out
repnz
stos
mov
dec
decl
push
es
jns
lock
testl
lock
add
cltd
mov
jne
add
and
sbb
jns
jno
stos
bound
addb
mov
cmp
lods
xlat
leave
bound
add
inc
add
dec
ret
add
lahf
hlt
test
out
aas
das
push
stos
fcom
lcall
cmp
hlt
fcmove
mov
and
mov
in
jnp
pop
mov
dec
addl
and
adc
popf
push
leave
add
js
sbb
jl
mov
sbb
out
jbe
or
add
movsb
mov
add
cld
lds
mov
std
xor
add
loopne
add
pop
jecxz
cmpsb
dec
mov
pusha
add
add
add
stc
mov
add
stos
fxch
lahf
inc
add
addb
and
dec
lea
add
adc
jmp
add
sbb
xor
pop
add
sbb
fcomps
sub
pop
add
and
sti
pop
cs
xchg
addl
sbb
jne
loop
push
nop
jecxz
icebp
sbb
mov
add
and
movl
cmp
addb
push
dec
out
xchg
inc
add
cmc
nop
test
mov
in
mov
add
pop
mov
jge
add
add
add
and
lock
sub
jge
add
xchg
in
or
add
notl
xchg
dec
stc
mov
push
push
push
sbb
mov
jns
inc
add
xchg
cwtl
into
jecxz
clc
fildll
test
in
jne
add
add
mov
add
rolb
jno
adc
mov
add
add
mov
bound
rolb
les
cld
arpl
add
insb
and
dec
fxam
cmp
mov
xor
add
push
cmp
addb
inc
add
cmp
inc
add
fistpll
add
push
push
mov
add
notl
movsb
jecxz
add
mov
out
mov
xor
add
pushf
adc
jae
dec
pop
popf
or
xchg
sub
and
xor
bound
std
push
inc
add
roll
add
std
arpl
push
cmpsl
pop
mov
push
pop
in
fcompl
lea
add
jno
xchg
js
fbstp
add
pop
movsl
xchg
mov
repnz
mov
add
or
sub
xchg
movb
add
add
mov
mov
pop
cld
jb
add
clc
fwait
jmp
add
pushf
dec
cmp
paddsw
cli
or
enter
mov
push
addb
stos
mov
arpl
stos
addb
add
imulb
xor
mov
xchg
dec
mov
adc
cmpsb
cmp
pop
cmp
add
ds
add
push
mov
int
aas
push
lcall
and
jle
out
outsb
lahf
lock
clc
push
add
inc
add
and
into
pop
and
addb
div
mov
push
cmpsb
pop
mov
mov
sub
sbb
push
mov
add
add
mov
mov
pop
notb
push
pop
adc
and
fadd
add
sub
xor
push
push
inc
add
cmpsl
sbb
lret
jo
aaa
adc
icebp
add
mov
decb
jecxz
stos
ds
inc
add
fnstsw
add
or
add
add
add
out
jl
mov
enter
int
push
addb
pop
xor
mov
sbb
add
lretw
rolb
cmp
add
xchg
outsb
or
lods
add
loopne
lock
in
add
push
es
add
jge
jno
cmp
add
jnp
mov
fidivs
test
movl
test
call
inc
add
cltd
test
testb
mov
add
dec
leave
adc
lret
or
add
in
addl
jecxz
add
mov
add
add
sbb
jb
into
hlt
fidivl
add
outsl
lock
jo
fildl
or
ud1
ss
add
mov
add
pop
mov
daa
pop
push
addl
bound
pop
adc
roll
push
cmp
fstps
jbe
hlt
stos
test
jno
divb
cmpsb
pop
sbb
mov
fs
dec
pushf
pusha
add
inc
add
rcr
add
pop
mov
sbb
push
arpl
cwtl
je
adc
jbe
inc
add
pop
ja
mov
inc
add
sbb
and
leave
sub
push
dec
pop
cmp
add
cmp
add
dec
arpl
pop
sahf
dec
inc
add
ret
add
rcll
movsb
inc
add
fwait
cmc
cwtl
ds
sbb
ret
add
in
sub
mov
add
add
add
loope
loop
jmp
add
stc
int
dec
xchg
jne
add
add
stc
addb
jg
adc
movsb
pop
add
cwtl
push
sahf
insl
jmp
mov
inc
add
roll
inc
add
cwtl
addl
adc
ret
add
in
ror
mov
xchg
mov
add
push
or
rcrb
add
add
dec
sbb
jp
dec
jno
sub
scas
mov
mov
cmp
mov
sub
add
mov
dec
stc
xchg
adc
add
and
iret
outsl
repnz
mov
and
shll
js
out
cmc
add
sub
insl
aas
outsl
aaa
mov
add
push
xor
in
cli
das
jge
test
daa
cmp
movsl
gs
lea
push
mov
addl
fdivrs
sub
loope
dec
or
cld
nop
sbb
out
push
into
lods
out
enter
scas
incb
dec
insb
pop
add
mov
add
mov
xchg
gs
and
iret
adc
call
add
add
stos
into
xor
xor
xchg
mov
repnz
jle
or
mov
call
and
and
inc
add
jl
mov
adc
mov
and
ficoms
fldl
mov
mov
movsb
mov
add
push
adc
cmp
xlat
rcll
lea
out
mov
mov
add
and
testl
add
mov
add
test
xor
cmpsl
ficoml
test
enter
dec
mov
mov
data16
repz
inc
add
add
aas
cld
cli
jae
dec
fsts
les
dec
jo
call
arpl
popa
add
inc
add
pop
adc
std
mov
out
addl
mov
add
addl
add
jl
popf
loopne
cld
xor
addl
fwait
lods
stos
je
dec
aam
adc
dec
add
jle
mov
add
ret
add
or
mov
cmpsl
jle
add
add
add
out
push
nop
nop
pop
mov
adc
inc
add
cmp
xchg
fwait
call
add
pop
add
mov
scas
fdivs
push
dec
push
xchg
fcoml
dec
loop
add
add
fs
jno
insl
bound
pop
insl
sub
xor
jl
rolb
in
pop
pusha
add
movsl
dec
dec
mov
mov
add
add
add
jge
add
nop
jae
sub
nop
or
and
add
add
aas
in
sbb
jb
add
xor
xchg
ss
leave
daa
xchg
mov
xchg
cmp
inc
add
add
sbb
sbb
ja
and
rorl
jbe
cltd
addl
gs
leave
and
or
add
cmp
fcompl
test
add
dec
xor
mov
adc
call
xlat
pop
or
pop
es
int
add
and
test
push
cltd
pop
cmpsb
in
jnp
loopne
loop
jecxz
and
mov
add
mov
add
mov
lods
outsl
jmp
shlb
add
or
addr16
add
sub
inc
add
adc
cli
cmp
add
cmp
xor
add
adc
lods
push
dec
push
aam
insb
out
in
lea
jp
pop
imul
addb
fsts
shrl
add
mov
dec
outsl
loope
lcall
jle
sbb
inc
add
or
popa
add
cmp
add
adc
add
mov
push
mov
stos
aam
and
ja
lret
xchg
ds
xor
lahf
cmp
add
add
xchg
cmp
pushf
scas
dec
mov
dec
jmp
add
scas
xchg
int3
imul
icebp
loopne
aaa
sbb
add
dec
sbb
sbb
or
xlat
mov
sub
add
ljmp
xchg
mov
shrl
inc
add
dec
insb
lret
dec
add
or
and
mov
pop
add
lahf
lds
xor
sti
add
mov
push
xor
movl
inc
add
add
nop
sub
add
mov
fdivrp
cltd
inc
add
addl
pop
mov
dec
sahf
cs
add
add
jl
pop
add
and
or
xchg
xchg
in
push
je
add
sbb
cltd
or
in
hlt
adc
jge
push
add
loopne
mov
cwtl
negl
mov
push
les
xchg
pop
push
add
adc
lahf
mov
outsb
testb
ds
push
mov
sbb
dec
js
push
cmp
cmpsb
addb
lea
add
movb
lret
push
add
jae
and
frstor
pop
cmpsb
shlb
add
or
and
movb
jmp
mov
mov
or
clc
popf
mov
pop
lea
cmp
test
xlat
ja
into
ret
add
imul
pusha
add
test
cmp
jno
mov
popl
cmp
lret
xor
stc
js
mov
mov
test
add
xlat
sarb
roll
add
stc
inc
add
push
xchg
lods
push
ljmp
jmp
jns
lahf
mov
add
cmp
out
mov
jb
sahf
in
dec
stos
and
std
or
or
addb
push
add
dec
mov
loop
add
stos
std
cli
popa
add
sub
xchg
pushf
push
or
mov
sti
inc
add
sub
je
ficompl
and
inc
add
add
add
lea
in
idivl
es
mov
add
out
add
jle
jnp
pop
shl
adc
scas
push
xor
lahf
jge
xchg
adc
cmp
jg
sti
test
scas
int
push
or
and
gs
pop
aaa
cmp
push
xlat
mov
insb
hlt
addl
pushf
add
xor
sbb
sub
pop
leave
inc
add
pop
add
pop
lds
int
pushf
cmp
mov
enter
add
fnstsw
dec
popf
sti
dec
popa
add
cmp
sub
add
mov
add
ret
or
adc
movb
lods
push
iret
push
mov
inc
add
ret
out
dec
ret
push
cmp
fcmovnu
adc
add
sbb
enter
adc
add
sub
pushf
and
pushf
mov
mov
inc
add
outsb
xchg
push
jge
mov
add
fwait
mov
add
mov
add
jge
add
test
pop
push
xor
dec
scas
mov
add
cmp
test
lret
pop
pop
add
xor
and
popa
add
loope
iret
xor
ds
mov
add
inc
add
enter
mov
add
add
mov
fwait
les
and
jmp
jecxz
je
movsl
mov
ret
jp
add
add
shll
add
add
add
sub
es
add
leavew
pop
das
fsubl
je
pop
addr16
popf
pop
pop
bound
mov
sbb
addl
or
xor
enter
fs
or
lods
mov
cmp
adc
pop
mov
jns
add
nop
mov
cmp
add
adc
jmp
or
add
add
sti
mov
add
push
xor
adc
or
xor
add
popa
add
add
cmp
test
gs
cmp
push
test
dec
lret
add
in
add
mov
add
gs
lods
in
lea
testb
adc
cmpsl
xchg
js
out
pop
data16
mov
outsb
mov
movl
sti
into
dec
xor
rorb
mov
add
sbb
int3
pushf
inc
add
imul
jmp
inc
add
rolb
add
popa
add
add
mov
or
sub
cmp
xor
inc
add
mov
hlt
lcall
outsb
pop
or
pop
dec
movl
sbb
imul
cmp
fildll
or
movsb
sahf
pop
loopne,pn
push
adc
shrb
inc
add
add
or
xor
mov
push
jmp
push
or
add
inc
add
add
ja
loopne
add
cmp
add
aas
and
rolb
add
add
cwtl
mov
push
dec
sub
aad
in
cli
sub
add
mov
add
leave
int3
sbb
test
mov
xor
lret
leave
mov
movsb
je
pop
repnz
push
les
and
adc
imul
and
repnz
pop
mov
leave
and
movl
in
cmp
mov
mov
xor
dec
aas
push
add
jne
lds
seto
idivl
sub
inc
add
xchg
jne
hlt
sub
int
or
fdiv
stos
sbb
inc
add
iret
lds
movsl
test
mov
pop
imul
add
imul
cmp
add
gs
cmpsl
gs
stos
sbb
add
add
or
add
arpl
mov
int3
hlt
jb
cmpsl
nop
pop
fimuls
push
stos
add
test
das
jnp
add
cmpsb
stos
or
xor
xchg
loope
add
mov
or
outsb
cmpsb
push
mov
xchg
imul
sbb
add
adc
rolb
in
in
cwtl
jmp
xchg
jnp
xchg
push
add
cmpsb
lcall
mov
add
add
mov
add
add
pop
mov
inc
add
add
popa
add
adc
stos
mov
mov
loop
cmp
fnstcw
add
add
imul
test
add
xor
popf
pop
repnz
and
movsl
push
sbb
cmp
cmp
add
add
std
jb
lcall
add
mov
add
push
xchg
out
mov
loope
int3
jg
mov
xor
lea
lret
sub
or
repz
mov
cmp
pop
push
repz
push
pop
cmp
cmp
add
add
push
jle
jb
add
or
incb
push
add
fucomi
enter
xchg
jae
enter
push
das
popf
xor
pusha
add
push
je
add
push
add
mov
sahf
stos
and
or
in
shl
dec
mov
or
lock
popa
add
testl
addr16
add
ljmp
mov
in
imul
mov
imul
add
aam
add
adc
adc
add
or
add
cs
mov
sbb
add
jno
std
push
es
cmp
roll
add
ds
add
mov
push
add
out
push
testl
xchg
iret
fistl
xchg
pop
xchg
add
lahf
repz
add
pop
lret
int
in
add
in
test
scas
sbb
sahf
jo
push
sub
inc
add
clc
mov
scas
mov
mov
adc
add
push
add
mov
inc
add
movl
add
lds
ss
xor
movsb
mov
enter
ss
loope
sbb
dec
xor
add
and
mov
xor
add
lcall
in
fcoms
sub
and
aas
jo
pop
aaa
cpuid
xchg
inc
add
inc
add
addr16
bnd
or
incl
sub
sti
sahf
mov
loope
mov
push
rolb
push
ffreep
add
add
add
lock
pushf
call
iret
mov
mov
addb
rorl
scas
mov
and
pop
add
sbb
pop
dec
inc
add
inc
add
add
jbe
std
inc
add
add
cmp
add
insb
cmpsb
fcmovnu
loopne
popa
add
add
nop
outsb
dec
sub
add
push
fisubl
dec
xor
cmp
adc
add
fcomp
aad
pop
imul
hlt
xlat
mov
fsubrs
aaa
mov
pop
add
lahf
ror
sub
dec
cwtl
jae,pn
outsb
ret
add
pop
fsubr
cmpsl
rolb
sbb
clc
aas
addr16
das
mov
clc
or
or
out
inc
add
and
ja
cmp
test
inc
add
ret
mov
sub
add
jg
addl
mov
pop
push
mov
or
sahf
inc
add
addl
and
imul
std
sar
pop
je
cmp
cmp
add
fcoml
or
in
rolb
data16
mov
jns
add
fs
add
inc
add
lods
ljmp
jmp
insl
cmp
lahf
hlt
mov
push
out
scas
pop
add
sub
mov
aaa
xchg
sbb
addb
lds
outsb
cs
push
and
rcrl
push
mov
cmp
imul
add
or
sub
sub
adc
add
jge
movsl
jae
loop
dec
lret
in
mov
push
scas
pop
addl
mov
add
mov
mov
stos
xchg
sub
jno
fistpl
xchg
mov
iret
rolb
roll
out
mov
shlb
les
hlt
fadds
cmpsb
xor
push
pusha
add
addl
sbb
cmp
mov
lret
dec
or
fidivrs
les
xor
shl
push
mov
rolb
sarb
jbe
fsubs
add
add
addb
add
cs
dec
imul
sbb
movb
push
add
addb
add
mov
mov
jno
jns
jnp
mov
into
into
movhps
inc
add
add
cli
js
sbb
add
jp
jns
mov
add
dec
xor
pop
mov
add
xor
jb
and
and
push
insb
pop
ja
pop
pop
adc
jo
in
rcr
push
mov
pop
pop
out
pop
popa
add
fcomip
clc
and
sub
addr16
pusha
add
je
add
movl
ret
mov
psllq
cmp
idiv
dec
aad
inc
add
imul
lods
xchg
test
addl
les
xchg
xor
xor
add
sub
das
sub
xor
out
lock
out
pop
push
call
mov
ljmp
push
out
fwait
dec
mov
cmp
mov
push
arpl
cmp
pop
stc
jl
test
cli
stos
aad
mov
aad
adc
notl
xchg
and
dec
lret
pop
push
repz
add
lahf
push
add
fstpt
pop
sbb
inc
add
mov
xchg
mov
add
add
addl
pop
xchg
int
add
jl,pn
adc
mov
addr16
clc
and
push
rclb
add
fs
repnz
and
adc
push
clc
pop
mov
insl
add
das
and
add
add
call
lcall
add
ja
sbb
movsl
fnstsw
add
add
negb
in
inc
add
je
sub
pop
add
or
lock
repz
out
xchg
cmc
insb
mov
add
sbb
add
cmp
add
mov
mov
sub
mov
and
cli
les
test
xchg
xor
xchg
adc
negl
loope
loopne
add
jg
add
pop
add
xor
and
int
jno
cmp
mov
mulb
fisttpll
mov
or
sahf
je
jns
mov
push
int
in
dec
popa
add
sti
aaa
cmp
mov
lcall
push
jg
fisubl
loopne
jge
out
jmp
sub
int3
ret
xlat
cmp
add
adc
loop
aam
addr16
add
jb
loopne
ljmp
aam
mov
add
sahf
dec
popf
loopne
inc
add
sahf
cmpsl
jb
frstor
ret
sub
test
xor
imul
ret
mov
push
mov
ds
loopne
add
jmp
leave
jp
movsl
cmp
pop
ds
clc
mov
sub
mov
fisubl
jnp
jnp
hlt
xchg
movsl
or
iret
dec
xor
movb
in
popa
add
movsl
cmpsb
push
add
sbb
adc
mov
cld
lcall
cmovbe
in
add
add
adc
and
mov
mov
xchg
cmp
push
cmpsl
mov
or
repz
mov
repnz
lea
mov
ficoms
sub
sti
scas
mov
sbb
lods
mov
sub
pop
xchg
pushl
push
out
jmp
mov
lret
rorl
repz
xchg
insl
fisubrl
outsl
outsb
shlb
incl
add
cmp
dec
xor
jno
jl
int3
sbb
add
pop
movsl
inc
add
add
into
out
jp
xchg
mov
dec
notb
mov
test
sub
jmp
add
add
pop
fs
and
test
ja
xor
cli
test
cmp
insb
addb
cmp
jp
add
xchg
adc
mov
add
add
add
insl
pop
popa
add
mov
cmp
addl
mov
loopne
imul
nop
dec
jnp
push
dec
mov
add
add
pop
mov
inc
add
dec
jne
adc
adc
call
add
rcrl
enter
call
addb
mov
test
adc
xchg
into
hlt
movsl
popa
add
add
jge
mov
adc
hlt
rorl
dec
pop
xchg
roll
cmp
psubq
add
jno
lahf
push
cmp
sub
in
sbb
add
testb
add
xchg
inc
add
mov
movb
call
dec
pop
pop
addb
test
mov
push
clc
jmp
addr16
jb
mov
insb
or
push
mov
rcrb
faddp
add
jo
jno
add
int3
push
lea
inc
add
gs
ret
hlt
add
in
jp
xchg
or
daa
sub
iret
or
mov
add
int
jp
dec
daa
sahf
xchg
fnstsw
xchg
mov
push
hlt
jnp
jmp
call
pop
jnp
add
fisttpl
sahf
add
fadds
push
sub
mov
in
jmp
add
sub
jno
dec
sbb
jg
decl
and
divb
add
or
mov
je
mov
cmpsl
sarl
add
and
aaa
lcall
adc
pop
xchg
and
xor
out
outsl
inc
add
repz
pop
clc
insl
push
out
dec
xchg
fldl
add
sub
fnstcw
adc
lret
fmulp
mov
xor
or
add
addl
jmp
mov
iret
bound
imul
xor
mov
pop
add
fbld
add
es
fsubr
dec
int3
jecxz
and
std
lret
push
ret
jecxz
add
cld
and
xor
cld
jmp
rorl
fsubrs
xchg
mov
add
pop
push
leave
mov
xchg
rcrl
bound
jp
add
xchg
add
add
push
pop
adc
mov
jmp
or
ljmp
fstpl
add
sub
testl
inc
add
add
sahf
sub
add
cltd
addb
adc
je
fbld
add
push
stos
aad
dec
lret
in
sub
mov
add
sub
rolb
xcrypt-cfb
cmpsl
and
js
push
cmp
cmpsl
roll
adc
pop
cmp
insl
sub
mov
mov
fucom
bound
movsl
test
addl
add
stc
add
jl
aas
xchg
imul
outsl
dec
insl
jmp
addb
xchg
jle
sub
aas
outsl
jbe
add
scas
roll
std
call
test
scas
dec
jmp
jp
mov
testb
push
addb
addl
add
stos
push
mov
sar
sbb
or
cmp
cmp
push
jl
movsl
cmp
xchg
xor
jge
add
add
pop
xchg
mov
cmp
add
or
dec
int
add
push
sar
test
dec
mov
add
jg
bound
mov
add
std
je
mov
sbb
das
pop
mov
lods
movsl
xor
hlt
jle
xor
add
adc
add
sub
inc
add
push
std
adc
pop
das
int3
shll
ds
add
push
add
cs
negl
outsl
lods
in
mov
stos
addb
pop
pop
add
adc
lret
add
outsb
adc
sbb
xchg
inc
add
add
out
add
daa
aad
mov
call
add
add
imul
test
add
add
jb
add
and
fbstp
rclb
adc
add
add
addl
jmp
xor
jb
add
jp
pop
add
stc
jb
callw
add
sub
in
or
add
add
enter
lods
pop
stc
jb
mov
jp
roll
add
xor
stc
jb
fildl
add
add
add
jb
add
add
dec
je
stc
jb
enter
add
push
or
add
iret
jmp
lea
dec
sub
aad
inc
add
sub
push
stc
jb
add
add
add
mov
stc
jb
sbb
mov
jb
add
out
std
add
jl
dec
cmp
jb
jmpw
dec
rcll
leave
add
stc
jb
add
jmp
jb
add
sub
mov
jmp
scas
jp
add
jmp
adc
mov
xchg
ret
std
add
and
inc
add
xlat
mov
icebp
sub
stc
jb
rorl
add
testl
mov
xchg
ret
insb
pop
iret
dec
test
mov
icebp
nop
jmp
ds
add
addb
addb
in
mov
stc
jb
imul
sub
jb
mov
add
in
push
movl
icebp
nop
jmp
rcll
pop
test
add
xchg
push
mov
xchg
ret
add
movzwl
stc
jb
add
push
jmp
push
or
jmp
add
add
fistl
adc
jb
jp
add
in
add
add
subb
add
jp
mov
jb
ds
call
add
xchg
insb
sub
stc
jb
scas
add
sbb
jb
xor
roll
dec
add
mov
add
pop
roll
add
mov
mov
xchg
ret
xor
dec
add
xchg
push
sbb
stc
jb
add
jmp
nop
jmp
jmp
add
movb
scas
mov
stc
jb
add
dec
add
mov
push
mov
xchg
ret
add
cmp
out
data16
jb
add
cmp
adc
add
add
cmp
mov
test
push
add
stc
jb
in
dec
cs
nop
jmp
jmp
lea
push
jns
jne
nop
jmp
add
add
pop
add
int3
dec
push
mov
xchg
ret
add
and
popf
pop
push
mov
xchg
ret
roll
add
out
add
add
hlt
inc
add
add
scas
add
add
stc
jb
add
push
add
or
cmp
add
call
mov
jg
jne
add
stc
jb
add
mov
int
pop
call
add
add
cs
stc
jb
std
add
add
add
out
test
pushf
add
stc
jb
ljmp
or
test
add
jb
popf
dec
fstpt
jb
add
add
loope
xor
negl
sbbb
add
sub
add
sti
nop
jmp
pop
add
data16
sbb
cmp
jb
add
add
loopne
imul
stc
jb
adc
add
add
repz
pusha
stc
jb
push
add
pop
dec
mov
push
mov
xchg
ret
add
adc
stc
jb
jmp
jmp
sahf
or
add
jb
jp
add
jmp
clc
or
add
xchg
add
dec
cmp
decl
push
mov
xchg
ret
add
jl
inc
add
xor
out
pop
add
add
enter
fildl
add
fisttpl
add
cmp
stc
jb
test
add
jb
test
add
call
add
stc
jb
add
in
pop
fmull
jmp
rcrl
pop
data16
mov
add
jb
push
iret
loope
mov
orb
sub
add
sbbb
add
jp
add
loopne
add
jge
stc
jb
add
add
dec
mov
nop
jmp
fildl
add
push
mov
xchg
ret
add
add
add
stc
jb
mov
add
xor
stc
jb
pop
out
xchg
xchg
cld
push
push
mov
xchg
ret
mov
je
xchg
or
inc
and
jmp
fildl
testl
std
incl
add
lea
testl
add
add
in
add
nop
jmp
add
add
pusha
nop
jmp
popw
roll
add
add
aas
adc
add
add
add
in
jb
add
push
add
add
add
pop
add
adc
add
add
stc
jb
add
shl
test
sbbb
add
loopne
ds
cmp
nop
jmp
add
add
pushf
mov
stc
jb
add
stos
xchg
stc
jb
roll
pop
popf
hlt
shl
add
or
add
jb
or
pop
dec
cmp
nop
jmp
add
adc
adc
jb
add
in
dec
add
mov
stc
jb
push
add
add
sbb
adc
jb
add
in
add
lds
push
dec
mov
stc
jb
add
add
mov
mov
stc
jb
add
test
mov
xchg
push
sub
nop
jmp
add
pop
add
es
mov
mov
xchg
ret
in
add
into
dec
adc
add
xlat
dec
cld
mov
movzwl
stc
jb
add
mov
jne
stc
jb
or
add
jmp
sbb
jmp
add
or
add
xchg
fistpl
jb
mov
add
scas
mov
andb
add
jmp
jp
add
add
shl
nop
jmp
and
ljmp
insl
push
push
mov
xchg
ret
or
jmp
enter
sbb
add
add
add
cli
ret
stc
jb
xchg
dec
add
test
add
jb
rorl
jb
mov
stc
jb
ds
stc
jb
lea
add
adc
add
inc
add
out
stc
jb
mov
add
push
stc
jb
sar
add
add
add
push
mov
push
pop
add
gs
mov
rcrb
fildl
add
add
add
cmp
les
jb
add
add
stc
jb
mov
scas
inc
add
in
add
scas
in
imul
add
incl
add
in
add
jnp
jne
stc
jb
ljmp
mov
jb
enter
add
or
stc
jb
add
dec
add
push
mov
xchg
ret
add
loope
clc
je
stc
jb
add
xchg
sub
clc
out
add
xor
sbb
add
add
push
stc
jb
scas
ljmp
test
mov
add
push
sahf
mov
push
mov
xchg
ret
cmp
std
cmp
inc
and
jb
add
insb
data16
mov
stc
jb
add
mov
add
jb
sub
dec
roll
sub
je
mov
nop
jmp
shrl
add
sbb
in
add
add
sbb
jmp
stc
jb
lea
cmp
jp
xlat
incb
jb
add
add
or
push
add
shrb
test
nop
jmp
in
add
add
jmp
add
popf
jp
add
and
push
mov
xchg
ret
add
or
mov
stc
jb
mov
ror
push
mov
xchg
ret
xor
pop
cmpl
nop
jmp
add
pop
add
add
stc
jb
mov
jmp
mov
push
stc
jb
add
add
dec
jmp
popa
add
jb
add
std
imul
cmp
jmp
add
test
les
in
test
nop
jmp
add
std
in
cltd
mov
stc
jb
add
xor
rep
stc
jb
add
add
sbb
push
mov
xchg
ret
jp
add
ljmp
sbb
add
add
add
add
lret
add
jb
add
add
movb
mov
push
mov
xchg
ret
add
add
stos
inc
push
mov
xchg
ret
or
add
inc
sub
jb
add
add
add
add
orb
add
add
cmp
add
push
scas
and
stc
jb
add
add
xchg
mov
add
jb
dec
adc
push
add
jb
fldt
add
add
lret
in
xchg
aas
add
daa
push
add
jecxz
test
adc
mov
stc
jb
add
hlt
sbb
or
or
push
add
add
jmp
adc
add
nop
jmp
call
mov
add
add
push
add
add
add
imul
adc
loope
add
add
sbb
out
push
nop
jmp
or
sub
out
add
jmp
or
nop
jmp
imul
test
jmp
enter
jecxz
dec
stc
jb
fcmovnbe
add
jp
ljmp
jb
add
add
add
stc
jb
call
iret
add
and
add
add
dec
add
ds
and
stc
jb
dec
roll
add
mov
pop
mov
stc
jb
and
sbb
popa
add
mov
stc
jb
imul
mov
ret
lea
xchg
ljmp
std
mov
stc
jb
add
mov
mov
inc
add
dec
jp
loopne
popf
push
mov
add
xchg
or
push
in
mov
stc
jb
add
add
jb
pop
loope
add
jmp
xor
add
stc
jb
add
mov
jmp
add
in
add
add
daa
in
call
stc
jb
sbb
add
jo
add
jb
add
add
mov
stc
jb
ljmp
add
inc
add
stc
jb
testl
loopne
cmp
push
sub
das
cld
inc
add
add
fmull
aam
add
loopne
data16
add
sbb
cmp
add
stc
jb
hlt
pop
adc
jb
dec
add
negl
add
jmp
add
mov
add
xor
add
pop
call
stc
jb
jmp
mov
push
mov
xchg
ret
enter
sub
popa
add
mov
xchg
ret
roll
add
sub
addl
and
add
lahf
testl
call
sbb
mov
xchg
ret
add
pop
adc
jb
add
add
call
add
les
cmp
add
sub
add
addr16
jb
mov
xchg
ja
push
stc
jb
add
add
or
add
add
mov
xchg
ret
mov
sbb
cmp
repz
mov
xchg
ret
add
shrl
mov
stc
jb
add
add
push
icebp
inc
add
or
lahf
repnz
incl
add
add
add
stc
jb
add
loope
iret
add
add
inc
add
sbb
jb
dec
loope
add
add
push
adc
add
sbb
idiv
hlt
pop
mov
stc
jb
ljmpw
add
sbb
push
sbb
add
ljmp
add
pop
or
jb
fisttpl
or
mov
jb
add
adc
add
sbb
push
cli
incl
dec
add
push
stc
jb
add
add
push
add
dec
mov
stc
jb
dec
shr
in
dec
loopne
mov
stc
jb
add
pop
add
mov
stc
jb
add
add
add
in
popf
add
stc
jb
in
add
iret
add
sarl
add
add
enter
push
push
mov
xchg
ret
add
add
add
mov
test
sbb
add
lcall
add
loope
je
nop
jmp
add
sbb
lret
add
mov
xchg
ret
sbb
jle
stc
jb
mov
add
ljmp
arpl
stc
jb
loope
add
fistps
mov
xchg
ret
loopne
roll
sub
xchg
stc
jb
in
add
or
add
add
test
or
add
jb
sub
add
pushl
push
mov
xchg
ret
add
in
pusha
nop
jmp
add
add
adc
jb
call
add
add
dec
mov
nop
jmp
add
add
add
mov
nop
jmp
jmp
add
add
lea
stc
jb
add
add
jmp
jb
jmp
and
popf
fistps
jmp
add
push
cmp
add
add
adc
mov
push
mov
xchg
ret
mov
push
push
mov
insl
adc
add
enter
add
stos
cmpw
stc
jb
add
cmpsb
add
add
jb
roll
sbb
add
jb
sbb
add
add
nop
jmp
add
add
sbb
stc
jb
cmp
add
and
mov
adc
jb
roll
add
and
jmp
add
pop
sbb
in
add
out
jne
stc
jb
add
add
jb
out
jmp
out
add
push
mov
xchg
ret
add
add
jg
stc
jb
add
add
add
add
ret
push
push
mov
xchg
ret
add
xchg
cmp
sub
add
add
sarl
mov
add
stc
jb
pop
insb
in
popf
add
cmp
add
add
or
and
orb
orb
cmp
lods
pop
push
mov
xchg
ret
loopne
in
in
cmp
jmp
add
in
lea
add
add
or
test
movb
add
dec
or
jmp
and
in
or
cmp
add
push
clc
inc
push
mov
xchg
ret
add
add
xor
lock
mov
xchg
ret
adc
push
stc
jb
jmp
jne
nop
jmp
add
add
stc
call
stc
jb
pop
fildl
add
movsl
adc
add
jp
iret
dec
add
add
add
mov
mov
nop
jmp
hlt
hlt
and
enter
sbb
mov
add
jb
jmp
dec
push
stc
jb
jmp
mov
sub
test
push
mov
xchg
ret
add
roll
pop
pop
push
mov
xchg
ret
add
dec
add
inc
add
add
cmpb
add
std
add
fiaddl
dec
cmp
jb
adc
cld
add
nop
jmp
add
add
mov
inc
add
jb
add
add
add
add
jb
add
std
ljmp
inc
add
sub
add
add
push
ret
add
lods
add
imul
rolb
add
add
jb
add
mov
mov
in
add
or
js
call
stc
jb
add
mov
stc
jb
add
in
xor
nop
jmp
add
pop
and
inc
repz
add
add
shl
scas
mov
stc
jb
call
add
popl
nop
jmp
add
popf
add
add
add
popa
add
adc
add
add
add
or
mov
add
cmp
inc
add
mov
mov
add
mov
stc
jb
scas
in
adc
add
leave
xor
push
mov
xchg
ret
add
std
scas
dec
stc
jb
push
add
roll
add
leave
push
push
mov
xchg
ret
add
mov
stc
jb
jmp
adc
sub
call
add
add
add
add
loope
add
add
pop
add
and
push
mov
xchg
ret
dec
add
pop
push
stc
jb
scas
sbb
xor
shr
stc
jb
scas
add
outsb
lea
nop
jmp
std
add
in
add
add
push
push
mov
xchg
ret
or
add
jp
js
nop
jmp
push
pop
sbb
std
mov
cmp
orb
std
mov
stos
call
stc
jb
add
add
add
stc
jb
adc
adc
sbb
jmp
mov
out
loopne
mov
pop
add
adc
add
add
dec
push
mov
add
ret
xchg
add
add
jmp
stc
jb
roll
movb
add
decb
add
incl
add
add
add
outsl
mov
stc
jb
add
call
mov
stc
jb
add
dec
mov
jb
imul
pop
pushf
and
push
mov
xchg
ret
scas
in
add
or
popa
stc
jb
push
add
add
notb
test
or
add
jb
std
add
cld
je
nop
jmp
out
iret
test
add
add
je
stc
jb
add
imul
cmp
roll
add
out
push
push
mov
xchg
ret
or
sbb
pushl
stc
jb
add
dec
mov
stc
jb
ds
dec
add
mov
nop
jmp
ds
add
inc
or
jb
pop
roll
add
stc
jb
add
add
mov
movb
xchg
ret
add
jmp
stc
jb
add
imul
cmpsl
mov
popf
stc
jb
loope
sbb
add
mov
jb
add
iret
cmp
add
ja
push
inc
add
test
std
call
add
popf
sub
add
push
mov
xchg
ret
jmp
jne
stc
jb
roll
cmp
adc
jb
mov
pop
dec
jmp
nop
jmp
xor
ljmp
adc
add
data16
add
iret
push
mov
sub
add
fldenv
or
add
add
aad
mov
stc
jb
add
add
addb
mov
stc
jb
add
sbb
stc
jb
add
ljmp
push
mov
mov
add
add
xchg
or
andl
in
or
add
lea
xor
dec
mov
stc
jb
add
lcall
add
ljmp
add
add
add
jb
or
mov
int3
jmp
and
dec
add
mov
xchg
ret
add
mov
sub
call
hlt
add
stc
jb
add
add
rclb
in
add
lea
add
add
enter
push
mov
xchg
ret
and
push
push
mov
stc
jb
loope
mov
je
nop
jmp
add
jbe
stc
jb
add
mov
add
add
jb
sbb
and
jb
add
add
push
mov
xchg
ret
add
pop
dec
js
add
stc
jb
add
ja
adc
stc
jb
add
dec
add
add
nop
xor
repz
repz
mov
xchg
ret
dec
addb
int3
movzwl
push
mov
xchg
ret
add
push
lods
push
mov
xchg
ret
add
call
push
push
mov
xchg
ret
add
pop
push
push
mov
xchg
ret
loope
add
add
enter
nop
jmp
pop
add
add
iret
popf
sbb
or
push
mov
xchg
ret
scas
add
leave
mov
stc
jb
ljmp
je
push
stc
jb
add
in
add
add
push
stos
push
mov
xchg
ret
pop
ds
add
pop
stc
jb
mov
add
sub
push
mov
xchg
ret
add
add
add
dec
adc
jmp
in
add
push
push
add
mov
stc
jb
jmp
fisttps
add
add
insb
add
xor
pop
in
stos
and
push
mov
xchg
ret
adc
stos
stc
jb
enter
add
sbb
mov
adc
jb
add
orb
lock
add
add
scas
roll
std
push
stc
jb
cmp
add
add
in
mov
stc
jb
loope
fildl
add
popf
call
stc
jb
loopne
add
add
jmp
jb
add
insb
loope
or
xor
jb
jp
add
sbb
cmc
out
xor
push
mov
xchg
ret
add
ljmp
jb
scas
add
jmp
add
call
incl
add
dec
call
stc
jb
add
imul
adc
jb
mov
add
test
cli
incl
and
add
insb
mov
stc
jb
jmp
subb
icebp
sub
das
icebp
inc
add
xchg
add
mov
nop
jmp
add
add
add
add
add
stc
jb
add
jmp
push
pop
push
stc
jb
add
add
push
out
rorl
mov
stc
jb
add
add
mov
mov
nop
jmp
add
add
testl
add
jmp
add
es
stc
jb
add
je
stc
jb
pop
add
movb
mov
or
incl
addb
add
xchg
enter
add
sbb
add
add
cmp
dec
hlt
popf
ret
mov
nop
jmp
ljmp
stc
jb
add
enter
or
push
push
mov
xchg
ret
dec
add
test
les
inc
add
mov
scas
out
incl
pop
std
add
test
add
jmp
stc
jb
loopne
add
push
jb
add
dec
add
or
add
nop
jmp
insb
cmp
iret
add
loope
push
push
mov
xchg
ret
mov
xor
push
mov
xchg
ret
add
sbb
gs
push
mov
fcmovnu
lods
popl
cmpsb
loop
roll
call
stc
jb
add
roll
loopne
and
push
stc
jb
sbb
add
add
mov
nop
jmp
jmp
subl
lcall
add
pop
add
mov
stc
jb
out
add
adc
call
stc
jb
add
add
and
sub
sub
ret
hlt
fldt
rorl
call
stc
jb
sbb
add
xorb
add
scas
add
jnp
push
mov
xchg
ret
or
add
stc
inc
add
ljmp
jmp
hlt
or
add
lock
xor
stc
jb
add
roll
pop
fisttpl
out
push
stc
jb
mov
sbb
js
push
mov
xchg
ret
add
add
scas
int
rcll
incl
add
dec
mov
add
and
nop
jmp
add
push
sbbb
add
add
movsb
stc
jb
roll
sub
add
pop
stos
call
stc
jb
add
mov
sub
or
sub
ret
add
add
ja
lods
push
mov
xchg
ret
push
popfw
add
rcl
push
or
aaa
jmp
call
add
jp
push
mov
xchg
ret
add
loope
sub
or
xchg
ret
enter
mov
and
stc
jb
sub
add
or
aad
add
cmp
rorl
popf
xor
jle
popa
add
jb
add
add
loope
sbb
jmp
add
loopne
std
add
in
add
sub
jb
dec
std
add
insb
rorl
addl
push
xor
call
incl
mov
ds
stc
jb
add
add
xor
dec
js
inc
inc
add
jb
add
call
stc
jb
testl
inc
and
stc
jb
add
add
nop
jmp
add
add
or
add
inc
add
mov
stc
jb
add
add
add
push
stc
jb
test
adc
scas
push
push
push
mov
xchg
ret
add
in
add
movsl
inc
add
les
add
add
jb
or
add
add
aad
pop
push
nop
jmp
insb
shll
add
movl
testb
sub
ret
pop
mov
add
ljmp
add
mov
roll
add
add
mov
xchg
ret
testl
leave
sub
jb
hlt
add
scas
add
arpl
add
jb
enter
pop
add
adc
push
stc
jb
add
jmpw
add
push
and
mov
stc
jb
add
add
lea
lock
incl
loopne
loopne
test
push
cmpsb
sbb
pause
jmp
add
add
cmp
or
cmp
push
mov
xchg
ret
add
jmp
test
nop
jmp
add
sub
in
add
add
sub
push
mov
xchg
ret
add
in
add
repnz
jb
add
push
mov
add
add
mov
jb
add
mov
js
cli
stc
jb
in
add
add
ret
stc
jb
add
scas
dec
add
xchg
hlt
stc
jb
add
add
jns
test
add
stc
jb
add
data16
mov
add
stc
jb
add
ds
jnp
nop
jmp
add
dec
scas
and
and
push
mov
xchg
ret
xor
mov
add
stc
jb
mov
cmp
in
add
add
add
mov
adcb
dec
push
push
mov
xchg
ret
sbb
sti
mov
stc
jb
add
add
add
jae
stc
jb
fildl
fstpt
loopne
dec
add
push
mov
xchg
ret
rorl
pop
jmp
stc
jb
add
add
into
je
stc
jb
shll
xchg
mov
or
stc
jb
add
movsb
push
mov
xchg
ret
push
add
add
mov
stc
jb
add
add
add
sub
push
mov
xchg
ret
add
push
stc
jb
add
xchg
push
xor
push
mov
xchg
ret
add
add
daa
xchg
aad
and
div
nop
jmp
roll
add
shr
add
out
aas
push
add
or
add
cmp
stc
jb
add
test
es
stc
jb
mov
adc
loopne
stc
jb
add
add
adc
jb
stc
jb
out
dec
pop
add
pop
mov
stc
jb
add
sbb
dec
push
stc
jb
add
mov
out
leave
mov
stc
jb
mov
cmp
sbb
jb
add
add
call
pushf
inc
stc
jb
loopne
roll
shll
shrl
jb
sub
rorl
sbb
test
stc
jb
fneni(8087
add
inc
call
ljmp
add
stc
jb
dec
adc
pop
add
stc
call
stc
jb
sbb
mov
stc
jb
add
jb
adc
add
push
add
pop
mov
stc
jb
hlt
mov
adc
cld
nop
jmp
sub
test
adc
loopne
add
jmp
add
cmp
or
push
push
stc
jb
add
add
jp
insb
inc
jb
stc
jb
or
jmp
sub
push
std
inc
add
add
arpl
mov
and
jmp
add
add
add
add
add
lahf
xchg
cli
add
fsubl
cwtl
push
stc
jb
mov
add
add
call
xchg
cmpsb
add
mov
out
call
add
cmc
push
frstor
jb,pt
nop
jmp
xchg
fildl
add
or
mov
add
add
pushl
push
push
mov
xchg
ret
enter
add
subl
push
mov
xchg
ret
pop
add
add
mov
stc
jb
add
add
loope
out
push
push
mov
xchg
ret
roll
sub
rcr
push
stc
jb
add
jmp
test
jecxz
mov
andb
incl
add
add
add
xchg
fimull
mov
inc
add
scas
dec
cmp
jb
pop
pop
cmp
dec
add
add
inc
in
mov
xchg
ret
cmp
scas
pop
stc
jb
add
shl
ret
pop
push
mov
xchg
ret
add
add
sub
rcll
roll
xor
call
fisttpll
push
add
add
add
push
adc
repz
jb
roll
add
add
stc
jb
addb
push
add
nop
jmp
dec
in
add
std
sti
rep
stc
jb
add
hlt
add
cmpl
push
mov
xchg
ret
in
pop
ror
stc
jb
jp
add
fmuls
insb
testl
enter
adc
dec
sub
stc
jb
add
add
cmp
nop
jmp
mul
in
add
add
test
stc
jb
pop
std
dec
and
cmp
in
cli
add
add
xlat
data16
push
push
xchg
xor
ret
stc
jb
adc
sbb
add
pop
stc
jb
adc
and
loope
shr
mov
push
mov
xchg
ret
pop
mov
sub
lock
xchg
ret
fildl
add
dec
push
mov
out
rolb
inc
jg
mov
mov
mov
orb
incl
add
add
add
jb
mov
pop
add
jp
mov
add
jb
add
testl
stc
jb
roll
add
dec
mov
stc
jb
mov
add
adc
ljmp
inc
add
xorb
lcall
dec
fildl
or
loopne
cmp
popa
add
jmp
scas
add
call
jne
push
mov
xchg
ret
jp
data16
repz
jb
scas
sub
add
or
xchg
scas
push
stc
jb
add
add
pop
add
out
mov
stc
jb
add
das
ret
add
negl
mov
ror
add
dec
add
fistl
test
jp
mov
stc
jb
sbb
push
js
mov
xchg
ret
add
mov
nop
jmp
or
add
sbb
jb
cmp
add
add
addl
test
jb
add
add
push
jl
and
test
inc
add
mov
add
lock
call
add
dec
cmpsl
mov
add
stc
jb
add
enter
add
push
mov
xchg
ret
add
add
nop
jmp
add
ljmp
mov
ret
lds
add
jmp
ja
call
xchg
add
push
imul
jb
add
add
add
movzwl
stc
jb
add
cmp
mov
xchg
ret
mov
cld
xchg
stc
jb
add
pop
add
popf
add
jmp
add
adc
add
pop
push
mov
xchg
ret
add
add
insb
add
stc
jb
dec
call
dec
push
push
mov
xchg
ret
add
add
lret
jne
stc
jb
add
sub
cli
test
nop
jmp
add
add
dec
and
popf
push
mov
stc
jb
cmp
add
jp
movl
in
stc
jb
in
add
rep
stc
jb
or
xchg
add
mulw
dec
dec
stc
jb
jmp
add
pop
stc
jb
add
in
add
dec
cmp
mov
jb
add
call
loope
dec
mov
nop
jmp
xor
popf
jmp
aaa
pop
mov
nop
jmp
dec
test
cmp
jle
stc
jb
add
or
movb
lahf
push
mov
add
shrl
add
dec
push
add
outsb
pop
imul
stc
jb
cmp
stc
jb
or
std
add
add
movsl
out
jmp
nop
jmp
add
add
add
add
jb
jmp
dec
add
and
aam
aaa
ljmp
or
xchg
ret
ljmp
pop
clc
incl
mov
ljmp
mov
lock
xchg
pop
dec
pop
sub
pop
aad
fistpll
fwait
push
les
imul
inc
add
add
out
jl
hlt
cld
daa
test
fs
imul
lahf
xchg
leave
xor
into
mov
pusha
add
lcall
sub
add
mov
repz
cltd
lods
mov
repnz
push
int
daa
popf
mov
sub
lret
jecxz
out
sbb
daa
stos
stc
mov
mov
dec
mov
faddl
or
cmp
jbe
dec
mov
loop
jo
stc
push
adc
decb
pop
cmp
stc
xchg
jbe
add
sbb
add
sbb
xchg
test
inc
add
inc
add
imul
addr16
addl
out
js
add
mov
outsl
in
jmp
and
dec
test
xor
out
and
pop
pop
addb
ljmp
jnp
add
clc
push
fdivs
sbb
add
cmpsw
ret
or
fistpll
in
inc
add
push
add
loop
jb
jl
dec
dec
decl
ljmp
pusha
add
lock
and
jbe
scas
inc
add
jp
xchg
and
inc
add
mov
rcrl
cli
push
lods
aad
mov
cmp
xchg
dec
xchg
xlat
fidivrs
roll
add
out
jae
add
add
test
add
push
in
mov
push
movsb
les
xor
scas
cli
call
lcall
sbb
add
sbb
rolb
jo
pop
jle
fsubs
add
adc
testl
or
enter
add
push
mov
lods
dec
ja
or
das
xchg
ret
repz
mov
push
dec
xor
pop
dec
pop
fdivp
jb
jb
pop
add
add
iret
and
jge
mov
adc
add
jno
add
sub
and
add
jecxz
imul
add
cmp
mov
jns
out
lea
inc
add
push
add
shlb
and
push
dec
imul
fcomps
fsubl
mov
inc
add
jl
pop
mov
addr16
repz
cmpsb
imul
add
add
add
cmc
inc
add
jmp
jae
ljmp
cmpsl
xchg
push
outsl
pop
dec
ret
add
mov
addr16
add
ja
addb
ret
add
mov
in
outsb
fidivrs
fildll
adc
in
xchg
sbb
aas
daa
jne
shrl
decb
push
sub
cs
nop
lock
les
and
sbb
add
pop
add
add
cmpsl
lods
fnstenv
sahf
pushf
and
mov
xchg
or
mov
out
mov
aam
stos
lcall
ds
inc
add
lcall
add
ret
add
loope
sarl
mov
add
lods
or
popa
add
in
movb
cld
shrb
cmp
xor
mov
xor
push
adc
pop
roll
add
inc
add
and
cmp
test
fdiv
pop
sub
add
inc
add
add
das
and
lret
pusha
add
out
rolb
add
movl
outsb
sub
add
add
enter
add
pop
pop
xchg
sub
lock
inc
add
cmp
nop
push
shl
std
pop
dec
xlat
sbb
add
lds
xchg
and
or
push
and
adc
xlat
outsl
hlt
mov
in
and
and
mov
addl
pop
dec
int
inc
add
jae
fst
inc
add
inc
add
adc
inc
add
stc
pusha
add
rolb
out
fistpll
fisubrl
cli
lock
pop
adc
add
add
setnp
xor
addl
add
add
xchg
jl
test
push
sti
dec
out
test
lea
fnsave
dec
sahf
jnp
sahf
jo
add
inc
add
and
dec
ds
xchg
jp
imul
sarl
into
cmp
add
cmc
adc
in
fadd
add
lcall
or
pusha
add
push
dec
xchg
fdivs
xchg
mov
aad
mov
dec
dec
pop
loope
dec
call
popa
add
pop
aam
or
add
scas
or
enter
add
mov
mov
jo
call
out
clc
setne
movsl
addb
or
mov
leave
aas
push
push
xor
fwait
pop
add
sub
mov
mov
cmp
bound
jge
sarb
add
add
and
loope
jno
and
decb
jge
hlt
fwait
sahf
dec
jno
jl
push
add
add
lock
es
xchg
xchg
dec
or
mov
or
imul
pusha
add
addr16
mov
in
bound
addl
jmp
add
ljmp
rcl
ljmp
xchg
dec
leave
mov
xchg
test
add
lret
mov
add
add
xchg
aas
shrl
lahf
daa
repnz
xor
mov
bound
dec
ds
fs
std
jns
xchg
jns
mov
xor
mov
xor
add
loope
out
dec
ljmp
add
inc
add
and
gs
dec
xor
push
add
js
ss
add
call
dec
jno
lods
fidivrl
fdivs
fs
shrb
xor
push
pop
loopne
stos
dec
dec
movsb
jle
add
add
xchg
pop
push
mov
add
jmp
add
xchg
daa
ja
insl
mov
dec
inc
add
rolb
push
add
aad
add
movsl
aas
pushf
out
icebp
test
add
cmp
add
add
lds
out
cmp
or
adc
add
ja
into
aam
jnp
in
pushf
sbb
xor
add
cmp
in
adc
inc
add
xchg
pop
cld
cmp
or
mov
or
sub
fistpll
and
xchg
mov
add
and
sub
lods
dec
cli
xchg
push
add
pop
xchg
xor
push
loop
pop
mov
sbb
add
addr16
imul
add
lods
pop
mov
mov
mov
stos
jle,pt
add
mov
add
add
add
add
sbb
and
aaa
insl
fcompl
pop
lret
xchg
jbe
loope
insl
stos
loope
pop
std
in
push
jne
clc
add
and
mov
std
das
dec
add
push
dec
stos
imul
add
push
call
mov
dec
roll
mov
xchg
stos
outsl
ss
add
popf
xor
add
mov
jo
dec
mov
jbe
icebp
cmp
dec
stos
fildll
mov
loope
popf
rolb
movb
sbb
push
jnp
leave
cmp
add
add
leave
mov
outsl
inc
add
push
add
and
arpl
and
add
jl
sub
inc
add
aas
mov
icebp
xor
loope
and
mov
add
sbb
loop
push
or
test
fistl
movsb
pusha
add
pop
sarb
int3
lea
fistps
pop
and
and
inc
add
add
stos
or
divl
cmpsl
loope
rolb
in
mov
jae
iret
add
xchg
and
stc
mov
add
add
ja
or
mov
push
jb
push
mov
pop
lods
adc
pop
cli
movsl
mov
add
dec
das
imul
scas
movswl
cmp
add
jnp
sbb
add
add
fdivrl
jmp
adc
add
pop
inc
add
out
add
sub
ds
lcall
add
adc
cld
imul
dec
popf
mov
push
adc
add
and
ljmp
mov
stos
pop
mov
pop
add
cmp
xchg
mov
icebp
stos
cmp
adc
mov
mov
mov
add
dec
and
sbb
jb
movb
mov
add
push
push
fbstp
ret
mov
pushl
cmpsb
addb
add
jmp
out
adc
sub
xchg
push
jp
inc
add
incl
add
sub
xchg
test
add
shlb
lds
stc
shll
add
fdivrl
push
pop
mov
lcall
sub
arpl
add
mov
jo
popf
inc
add
sub
les
test
or
adc
mov
add
add
mov
or
or
les
xchg
inc
add
add
movl
ss
movb
lret
mull
fdivs
movsb
jne
dec
pop
mov
cwtl
cli
mov
jp
push
sub
jl
add
push
int
xor
push
cmp
add
jns
inc
add
add
jns
inc
add
scas
cmp
adc
enter
add
cs
sbb
add
lahf
xor
or
add
add
pushf
hlt
inc
add
and
jb
inc
add
ja
lret
sbb
loopne
aas
push
add
add
add
cmpsb
icebp
or
mov
jp
add
add
add
je
cltd
into
push
in
stc
mov
aas
push
mov
adc
inc
add
add
addb
mov
jle
jle
cld
test
xor
jl
jp
mov
loopne
mov
cmp
mov
add
xor
add
cli
pop
inc
add
es
scas
cltd
cmc
jbe
test
push
inc
add
dec
sub
and
addl
mov
add
add
mov
les
and
fdivrp
das
arpl
sub
inc
add
fs
sbb
mov
push
lcall
addl
xchg
xor
mov
arpl
mov
imul
lret
jns
add
add
add
pop
cmp
add
xlat
sub
stos
cmp
imul
jl
sub
push
popf
std
xor
jb
ds
lret
cmc
cli
inc
add
aas
in
fs
or
sbb
sub
mov
mov
cmp
dec
push
dec
push
addb
or
jno
mov
das
clc
outsb
sbb
push
jno
out
rorb
popf
popf
jle
sahf
movb
addb
push
lret
dec
mov
rorl
mov
negb
ss
adc
xchg
outsb
ja
add
push
mov
inc
add
xchg
jno
add
cmp
cld
xor
add
cmpsb
test
call
cmpsl
rorb
sbb
add
sub
mov
cmp
fs
fidivs
addl
jne
sbb
cwtl
mov
add
mov
push
testl
lret
in
test
addr16
xor
movl
add
mov
cmp
jns
add
int3
cmc
cmpsl
stos
roll
fadds
in
xchg
mov
mov
mov
out
scas
arpl
movsb
es
mov
add
stos
movl
imul
add
aad
cmp
mov
fdivl
jmp
aad
jg
cli
in
cmpsl
rolb
adc
arpl
mov
jbe
push
add
mov
movl
or
into
lods
mov
mov
fbld
in
imul
add
aam
pop
dec
in
pop
out
lret
leave
loop
mov
add
push
dec
hlt
incb
mov
push
add
out
push
add
add
cmpsb
xchg
xchg
mov
mov
add
fstps
mov
xlat
mov
fcompp
cmp
push
test
lcall
jmp
mov
adc
cmp
dec
adc
insl
test
test
in
mov
push
mov
xchg
add
rsm
das
data16
add
stos
movl
cmp
add
lods
loopne
out
xchg
in
xchg
jle
mov
add
push
or
add
add
in
jecxz
loopne
aam
les
push
mov
cmp
cmp
lds
cmp
jecxz
add
jnp
xchg
jb
jne
adc
mov
jo
icebp
out
lods
in
aaa
inc
add
jp
add
pop
add
add
ds
dec
stos
sbb
sub
movl
out
add
cmp
int
push
add
jne
jae
cmp
shl
push
insl
xor
test
popf
decl
adc
or
dec
sarl
addb
or
roll
aad
and
nop
jne
add
daa
xor
push
and
testb
repnz
add
mov
pop
adc
imull
imul
add
add
or
and
xor
xor
test
imul
add
add
cwtl
push
aam
enter
mov
add
movsl
inc
add
cmp
addb
sti
mov
jecxz
jg
cmp
add
push
aad
sbb
inc
add
or
lock
xchg
or
fstl
movl
lods
mov
js
sbb
movb
les
setns
mov
add
sbb
xchg
jle
sub
dec
jmp
add
shr
movsb
idivb
xchg
outsl
sahf
jnp
ljmp
out
data16
pop
lahf
mov
roll
lret
mov
shlb
data16
int3
nop
dec
jle
xor
sahf
xor
cmpsl
rclb
int
add
hlt
xor
push
add
push
fsubrs
sbb
add
cmp
pop
or
mov
push
add
movsb
sub
lods
in
sbb
in
mov
cmp
xlat
leave
lret
fnstcw
lock
nop
rcrl
andps
add
les
insb
dec
mov
mov
mov
ss
push
xchg
inc
add
and
mov
pop
dec
enter
jae
int3
loope
nop
xor
pusha
add
xchg
jae
pop
int3
imulb
outsb
jl
fsubrl
fs
into
cmp
pop
and
arpl
cli
fadd
add
bound
cmp
push
loop
jne
rcrl
in
cwtl
and
jae
pop
popa
add
test
js
pop
jo
fdivp
roll
sub
add
add
addr16
lock
out
and
xor
ja
mov
add
mov
fsubs
mov
or
addl
rcr
mov
add
insb
outsl
out
add
sahf
ret
add
bound
imul
xor
add
add
pop
ret
add
sub
test
jle
add
add
cmp
add
lret
les
lcall
cli
add
or
add
mov
push
lcall
jbe
add
push
aad
fdivrl
rolb
out
jne
dec
movsl
outsb
loop
addr16
inc
add
mov
dec
dec
leave
jge
add
sub
add
add
repz
ljmp
in
aam
sub
adc
jno
mov
cltd
xchg
inc
add
mov
loopne
fwait
mov
sbb
imul
sbb
push
outsb
int
cld
cli
lea
lret
push
sbb
cs
popa
add
xchg
in
dec
push
pop
mov
push
push
add
sub
add
add
add
push
mov
sub
sbb
or
dec
pop
sti
in
ss
and
push
popf
sbb
add
xchg
in
push
ljmp
sub
add
mov
ss
addb
add
xchg
loope
test
add
int
mov
jb
aam
add
push
cs
jp
adc
xchg
and
add
sbb
add
xor
inc
add
sarl
add
mov
or
repnz
push
mov
cwtl
jo
inc
add
sub
or
add
sub
add
mov
fwait
lods
and
in
fisubrs
adc
lcall
mov
mov
inc
add
add
add
jmp
add
out
outsl
es
sub
xchg
xchg
iret
out
or
inc
add
loop
and
mov
bound
jle
add
push
test
pushf
fwait
ja
call
aam
xlat
sbb
out
std
mov
mov
popf
leave
stos
and
mov
jb
mov
jp
mov
xchg
arpl
push
adc
inc
add
clc
and
xor
movsl
fnstsw
sarb
scas
mov
mov
jae
pop
add
cmpsb
pop
pop
mov
sbb
es
sub
scas
fucomi
mov
add
loope
setg
sub
mov
out
data16
mov
aad
push
xor
xchg
in
leave
xor
sbb
rcrb
into
int3
sbb
xchg
test
fldl2t
clc
push
addl
add
ds
hlt
or
cli
mov
fldt
or
test
jl
xchg
xchg
inc
add
fwait
aam
scas
mov
cmpsb
popf
jne
mov
add
gs
add
xor
add
inc
add
jbe
sub
add
adc
add
add
or
inc
add
jnp
add
and
push
xor
aad
fistps
pop
sbb
loope
add
daa
aad
inc
add
pop
aad
add
dec
lods
push
test
add
pop
fistps
pop
mov
push
push
pop
jnp
add
xor
cmp
or
shrl
add
test
add
xchg
or
cmc
pop
call
add
add
mov
int
push
mov
push
mov
lea
mov
sbb
adc
cmp
int3
ret
add
inc
add
fsubrl
mov
xchg
xchg
cmp
jmp
add
rolb
add
pop
cmp
mov
sub
pop
or
outsb
mov
adc
adc
jo
clc
or
jns
repz
loope
pop
adc
add
sbb
pop
pushf
cmpsl
xchg
lods
test
sbb
sbb
fnstcw
xor
enter
push
mov
aas
lret
movb
movsl
mov
pop
icebp
sub
or
sbb
sbb
inc
add
addl
data16
dec
xchg
jp
add
cmp
nop
loopne
and
add
out
cltd
stos
das
movb
rolb
movb
jl
add
lods
ss
add
cmp
dec
mov
bound
fisttps
jns
arpl
xchg
test
ret
ja
xor
xchg
pop
addl
inc
add
xor
and
mov
pop
addb
and
pop
addl
mov
or
nop
cmpsl
lods
icebp
testb
adc
pop
xchg
jb
leave
sbb
cmpsb
loop
add
movb
jbe
pop
repz
jmp
cmc
xchg
mov
addb
call
test
call
gs
iret
das
pop
call
xor
push
mov
jb
mov
movb
mov
xchg
jecxz
sub
xchg
rcrl
dec
mov
clc
cltd
cmp
and
xchg
rolb
mov
xor
inc
add
xor
adc
push
aam
sub
add
push
mov
cmpsb
iret
jno
add
outsl
mov
addb
mov
test
mov
add
jp
push
inc
add
shlb
add
add
and
data16
test
or
ja
mov
lds
pop
lods
xchg
pushf
dec
cmpsb
je
loop
sub
int
add
add
fsubs
enter
scas
dec
jmp
stc
in
jb
add
lock
mov
inc
add
dec
pop
repz
sub
hlt
cmpsb
pop
or
mov
addr16
cmp
add
nop
clc
ljmp
aas
xor
add
jno
rolb
xor
add
pop
jb
and
mov
iret
test
jnp
add
lcall
add
push
add
sbb
push
movsl
mov
stc
push
jg
sub
add
add
adc
xor
mov
push
sbb
add
add
add
cli
aaa
xchg
and
sub
es
add
cmpsb
dec
bswap
sub
jnp
into
stos
xchg
test
push
rorb
push
lea
add
xchg
cltd
dec
fstp
test
add
stc
fistl
addl
sub
test
inc
add
add
jge
iret
popf
jne
negl
movb
mov
adc
push
pop
push
out
add
push
jae
adc
jnp
mov
sub
xchg
or
das
sub
dec
lret
lods
loopne
push
xchg
bound
mov
bound
lds
js
pop
lret
test
rcrb
addb
fadd
add
lret
pop
or
cld
stc
in
push
call
sub
xchg
loopne
inc
add
rolb
add
adc
mov
dec
pop
pusha
add
jmp
lahf
movl
inc
add
addb
dec
mov
mov
addl
add
push
lock
or
mov
add
mov
mov
sti
mov
or
notb
add
test
mov
movb
jp
adc
out
or
mov
xor
pusha
add
xchg
mov
rcll
jb
dec
popa
add
mov
sbb
add
addl
loop
sub
movl
push
test
pop
pushf
popf
mov
sbb
out
ds
inc
add
add
add
add
dec
in
adc
adc
mov
xor
push
add
sahf
inc
add
movl
inc
add
cld
sub
xchg
aam
push
cmpsl
jno
sbb
sub
add
movswl
sbb
mov
and
repnz
stos
sub
movsb
rolb
jmp
add
int3
movl
inc
add
xor
xchg
mov
imul
addb
add
add
add
add
jle
js
add
fwait
or
add
xlat
out
or
enter
push
xchg
push
jne
cwtl
stc
or
shlb
scas
fbstp
add
je
jbe
mov
adc
fstpt
insb
pop
rcll
add
in
pop
or
push
mov
add
mov
add
ret
jecxz
jge
icebp
and
mov
fidivrl
inc
add
mov
jbe
sub
push
dec
pop
out
cli
jp
add
iret
pushl
xor
pop
fistpl
hlt
xor
add
add
pop
sar
inc
add
daa
mov
int3
sbb
dec
pop
dec
or
mov
lds
xchg
les
mov
push
fldenv
add
push
mov
icebp
mov
and
movl
loop
add
cmp
mov
repz
gs
lock
lods
fdivl
ret
add
pop
sti
test
xor
iret
int3
shl
bound
daa
push
stos
mov
ss
pop
dec
xor
addb
and
mov
mov
js
add
push
js
mov
out
inc
add
mov
jecxz
mov
icebp
add
aas
lcall
sub
cld
adc
data16
sbb
mov
in
mov
add
jno
dec
sub
addl
sti
pop
push
pop
test
and
rolb
pop
int3
pop
push
mov
jns
add
dec
lret
iret
or
and
inc
add
push
lcall
pop
push
iret
ss
addl
push
shrl
bound
shlb
sub
data16
inc
add
mov
push
sbb
aas
aaa
jb
or
pop
mov
cli
push
dec
cmp
add
push
cltd
int3
lea
dec
add
push
call
add
aaa
hlt
push
pop
xor
add
sahf
pop
cld
cmpsl
lds
inc
add
mov
jb
xor
mov
add
push
pop
addr16
xor
aas
outsl
fnstcw
cs
adc
adc
mov
cmp
imul
add
xlat
pop
das
pusha
add
push
pop
stos
xor
adc
jle
add
addb
scas
xor
mov
ljmp
test
add
mov
lock
rorl
add
adc
bound
add
sub
mov
add
sbb
ljmp
stos
test
lock
inc
add
test
sub
add
int3
sub
sub
adc
pop
clc
and
std
pushf
or
inc
add
dec
out
fsubl
add
into
pop
es
into
repnz
fimuls
imul
lods
mov
rcll
stc
dec
pushf
mov
cmp
sub
pop
ds
sahf
aad
arpl
ljmp
lds
mov
adc
push
mov
xchg
pop
in
lds
ret
add
ds
scas
das
xor
xchg
shll
inc
add
mov
scas
adc
dec
cmp
add
dec
rolb
push
in
cmp
cmp
pop
leave
popf
and
hlt
push
in
fmull
push
idiv
pop
int
addb
xor
add
cmpsb
ret
leave
lock
cmpsl
les
sahf
lret
add
aas
loope
setne
inc
add
fwait
pop
inc
add
mov
sti
popa
add
inc
add
loope
lock
inc
add
std
lahf
pop
addl
cmpsl
jne
pop
cmp
mov
enter
into
mov
jecxz
add
stc
movb
add
and
arpl
push
sbb
add
add
loopne,pn
jno
aas
aad
inc
add
add
lock
mov
jns
mov
jge
imul
mov
pop
rcl
arpl
insl
fs
dec
xchg
enter
mov
pusha
add
dec
pop
cmp
cmp
lret
stos
mov
mov
add
add
add
jle
sub
dec
lcall
sbb
lods
jg
mov
xor
ja
sahf
sahf
fdivrp
ljmp
add
cmp
mov
sub
mov
lcall
es
add
data16
test
add
jp
xchg
out
lods
fisttpl
fprem
popf
sub
movb
jae
add
pop
lea
add
and
inc
add
popa
add
jg
out
addb
popf
fidivl
xor
jno
xor
add
pop
add
jmp
add
add
movsb
repnz
jae
mov
arpl
cmpsl
mov
cmp
je
add
push
movb
fcmovb
add
push
out
add
inc
add
cmp
mov
pop
test
add
push
stc
in
movb
pop
pop
mov
addr16
mov
idivl
ja
int3
in
jo
add
and
pop
mov
push
testl
xor
dec
jo
add
cmp
out
fisttpl
add
push
inc
add
pop
jbe
mov
iret
jmp
mov
dec
fwait
push
in
and
fnsave
and
sub
push
adc
jge
add
inc
add
adc
cmp
jne
fstpt
call
rolb
cmovb
ret
movsb
adc
jns
add
mov
fsub
push
push
sub
add
mov
mov
ret
add
pop
iret
or
je
addb
outsl
roll
add
sbb
in
mov
test
xor
xchg
test
fstp
shrl
push
lahf
xchg
pushf
fwait
mov
lahf
fdivrl
pop
add
push
push
add
add
add
add
dec
fisubl
add
add
sbb
mov
push
ror
repz
add
mov
mov
enter
scas
xchg
and
jae
push
int
inc
add
pop
movsl
ljmp
dec
jae
mov
add
push
cld
push
add
mov
fstps
push
add
leave
lds
adc
xor
ds
movsl
aas
jns
mov
mov
imul
xchg
popf
testl
roll
cwtl
cmp
sbb
fisubrs
cmp
mov
arpl
js
or
mov
cmpsb
cs
mov
add
addl
loop
xor
add
and
xchg
test
shlb
dec
and
mov
add
call
popa
add
inc
add
popf
mov
pushf
inc
add
test
insl
cmp
push
cmp
pop
arpl
jp
addl
addr16
rorb
jne
xchg
cli
cmp
add
add
cmpsb
sub
inc
add
push
lahf
sbb
push
addl
adc
out
es
pop
adc
in
xchg
or
repnz
pusha
add
or
addl
outsl
aaa
and
add
jb
jae
loope
leave
push
xor
inc
add
or
push
fwait
mov
add
mov
add
addb
inc
add
inc
add
add
in
out
push
addl
movsb
inc
add
repnz
imulb
insb
jl
cltd
push
popf
jb
cmc
push
popa
add
mov
jp
add
or
pop
mov
add
imull
adc
inc
add
cmp
test
inc
add
push
imul
test
scas
inc
add
les
jg
lods
addb
pop
inc
add
add
cmc
in
cmp
out
repz
fucomp
dec
es
add
cmp
es
jge
add
mov
frstor
imul
clc
mov
or
nop
jae
into
inc
add
pop
adc
in
pusha
add
and
lcall
add
stc
lcall
ficompl
sbb
sub
and
lods
inc
add
and
loopne
in
fimull
data16
xor
sub
sbb
add
ror
gs
add
pop
int
or
xor
rcrb
dec
xchg
push
dec
sbb
add
lcall
sbb
or
mov
add
ret
add
imul
fs
cmc
or
dec
dec
and
push
cmp
add
cmpsb
inc
add
push
inc
add
loopne
push
jl
add
insl
xchg
dec
ja
adc
mov
mov
push
fmull
or
cmp
out
xlat
lods
adc
dec
add
xchg
cmp
fs
shrl
mov
fs
ljmp
mov
clc
xchg
out
bound
scas
cltd
lret
xlat
rorl
aaa
out
repnz
hlt
scas
test
lahf
jle
stc
loop
adc
dec
popf
in
rcrl
or
cmp
leave
rolb
cmovnp
push
sar
pop
mov
loope
ja
mov
push
xchg
addl
enter
out
out
sbb
dec
lcall
rolb
add
or
push
pop
sti
repz
fst
aad
sbb
pop
sub
icebp
mov
imul
daa
sahf
into
test
imul
dec
rcl
les
sub
std
and
add
inc
add
add
mov
sar
cld
test
xor
cmp
rclb
xrelease
mov
xchg
jno
mov
add
xchg
cmpsb
imulb
js
and
pop
fidivl
sbb
decl
sbb
addb
sbb
mov
sbb
mov
test
xchg
add
push
sbb
bound
ss
fnstenv
rolb
push
dec
add
icebp
shlb
add
jecxz
add
cmp
add
and
outsb
mov
mov
stc
out
movsb
in
nop
idivl
add
aad
in
sub
adc
pop
xor
pop
cmp
add
int3
sti
xor
and
push
add
inc
add
mov
mov
rolb
push
clc
dec
push
sbb
sahf
xchg
enter
icebp
divl
imul
mov
or
test
std
popa
add
push
imulb
lcall
call
loopne
add
ficoms
push
scas
fisubrl
mov
pop
dec
stc
fdivl
xor
add
xchg
movb
iret
addl
sbb
inc
add
insb
iret
test
lcall
push
sbb
xchg
inc
add
jne
adc
push
dec
adc
add
into
dec
insb
test
es
mov
add
aas
sub
dec
pop
jbe
std
jmp
dec
push
pop
add
outsb
and
pop
add
and
test
or
inc
add
movl
push
xchg
xor
or
arpl
mov
popa
add
or
cmp
icebp
dec
push
je
popf
pop
inc
add
add
add
daa
imul
mov
cmpsl
aaa
adc
adc
mov
sub
cli
addb
add
adc
add
jns
insb
mov
or
mov
js
fwait
sbb
add
and
xchg
mov
mov
jecxz
aam
out
popf
mov
roll
sbb
leave
aam
sbb
push
lds
push
dec
call
mov
add
fsubs
or
cmpsb
lret
xor
xor
fnstcw
pop
ficomps
cmp
sub
dec
jmp
cmp
lahf
cmc
cmp
add
test
es
movb
mov
xchg
bound
pop
ss
cld
shr
clc
lret
add
out
jmp
sbb
sbb
jge
inc
add
pop
or
jno
jo
icebp
imul
add
add
mov
jl
add
add
mov
add
imul
inc
add
pop
imul
lods
push
fbld
movsl
mov
rcll
dec
sti
in
xchg
mov
and
mov
add
and
ds
addl
sbb
fadds
add
fstl
mov
jnp
dec
push
rcrl
add
sahf
mov
push
jge
mov
addb
xchg
jne
fiaddl
dec
in
mov
fidivl
adc
lods
xor
push
testl
std
mov
inc
add
dec
ret
mov
outsl
inc
add
fucom
sahf
mov
imul
loopne
add
mov
bound
and
fnsave
dec
jnp
add
fsubs
dec
and
jne
lahf
mov
cmp
add
jno,pt
push
addr16
data16
in
cld
fidivrs
mov
dec
test
mov
mov
dec
pop
add
jo
sub
push
in
stc
add
movsl
std
lret
lahf
mov
js
adc
roll
mov
jns
lret
and
pushf
jg
add
lcall
pop
add
cmp
mov
inc
add
xor
pop
push
inc
add
inc
add
xchg
imul
addl
stos
stos
jecxz
mov
sub
scas
jne
in
ja
lods
pop
push
enter
in
push
or
sub
add
xor
inc
add
repnz
fisttpll
add
addb
mov
jmp
add
fdivrs
and
xor
inc
add
xor
das
hlt
addl
outsl
out
in
pop
clc
xchg
xor
add
stos
mov
popf
xor
nop
sarl
push
sti
xchg
pop
inc
add
mov
mov
xchg
pop
adc
cli
xchg
movsb
inc
add
ja
add
fcmovne
addl
xor
add
mov
movsl
jns
add
fndisi(8087
movhps
rolb
in
pop
push
mov
inc
add
lret
sub
push
xchg
bound
xlat
mov
xor
cmc
jp
add
jb
in
bound
cmp
sub
jno
cmp
mov
add
in
sbb
push
or
xor
sub
pop
add
out
rolb
loop
mov
arpl
jecxz
xlat
jne
add
xchg
pop
stc
ret
add
add
movsb
inc
add
xor
enter
lahf
xchg
test
mov
add
push
inc
add
clc
push
and
adc
adc
sub
ret
and
sub
jg
xlat
test
add
sbb
add
lret
sub
add
xchg
add
loopne
push
insb
and
scas
mov
add
or
imul
sahf
test
or
add
pop
pop
mov
mov
push
add
gs
mov
xchg
outsl
into
pop
outsl
addr16
push
lods
mov
jle
add
cmpsl
lret
mov
xchg
inc
add
test
pop
cmp
mov
pop
or
cs
sti
sbb
pop
lds
lock
xchg
daa
push
movsb
mov
cmc
cli
sbb
addb
js
int
push
cmovbe
mov
pop
call
add
dec
pop
add
add
insb
xchg
xchg
fsubl
add
ds
dec
hlt
cmc
mov
pop
out
movl
imul
add
inc
add
mov
add
js
mov
mov
xor
shlb
add
mov
add
lock
cmc
sahf
mov
jb
pop
push
mov
adc
insl
inc
add
dec
popf
push
sahf
jecxz
add
cmp
addb
and
daa
adc
inc
add
mov
mov
cwtl
adc
mov
out
sti
and
cmp
aam
fwait
and
jmp
ss
mov
jg
add
cmp
jbe
dec
outsl
aad
xchg
popa
add
jge
add
add
xchg
inc
add
clc
pop
xchg
cmpsb
fucomi
jns
add
add
rorb
push
in
cmp
or
popf
in
mov
imul
test
fs
inc
add
rcll
rcl
jg
mov
add
sbb
or
and
fidivrs
xor
add
or
dec
cld
pop
push
add
insb
fbld
bound
mov
xor
jne
sbb
out
push
dec
push
mov
cmp
gs
push
jo
das
popa
add
or
adc
ret
add
nop
cmp
ficoml
and
sbb
jle
jo
loope
pop
add
dec
jmp
scas
mov
xchg
mov
fs
add
add
xchg
insb
lock
je
jbe
pop
test
movsb
jbe
test
xchg
dec
test
loope
jns
sti
add
lret
dec
xchg
jecxz
xchg
xor
addb
jbe
ret
add
test
pop
add
nop
out
sbb
add
or
add
add
add
decl
mov
jecxz
pop
insb
mov
out
push
les
mov
int
addb
out
add
stos
sbb
js
lock
adc
inc
add
add
test
add
inc
add
fmul
mov
ds
add
cmp
adc
jp
pushf
dec
dec
push
pop
mov
jp
push
sbb
lcall
add
pop
add
mov
add
push
js
dec
dec
mov
nop
das
push
sbb
adc
addr16
adc
shl
das
or
mov
sub
add
adc
jbe
push
pop
ficompl
movb
add
and
jnp
sub
jg
dec
int3
cmp
add
std
inc
add
test
adc
bound
out
repz
add
lret
filds
pusha
add
sub
pop
cmpsl
repz
data16
out
jae
lcall
inc
add
add
jecxz
addl
cmpsl
inc
add
mov
add
dec
pop
dec
stc
push
insb
mov
stos
add
mov
movsl
dec
push
add
addl
pop
lahf
bound
cmp
rolb
fisubl
add
add
add
gs
pop
inc
add
loope
add
xchg
add
repz
add
add
add
mov
imull
daa
inc
add
enter
jmp
scas
jmp
bound
xchg
inc
add
sub
push
bound
mov
sub
mov
add
cmpsl
push
addl
enter
cwtl
pop
addl
test
sbb
insl
mov
add
imul
js,pn
mov
add
fisttps
bound
ljmp
mov
pushf
repz
xchg
adc
mov
push
lock
cmp
cld
mov
push
pusha
add
mov
cmp
in
loope
insb
inc
add
call
cmc
jno
xchg
lods
mov
add
cmp
gs
add
xor
add
pop
aam
lds
push
icebp
jno
dec
mov
ss
push
sbb
mov
icebp
sbb
sbb
jb
scas
ret
ljmp
imul
popl
daa
int3
ret
iret
cld
daa
js
cmp
fcoms
je
enter
add
rolb
insb
roll
in
add
add
or
add
movsb
jge
insl
repz
jge
movsb
jne,pn
mov
add
add
mull
outsb
mov
add
sti
or
add
hlt
sub
pop
dec
xor
iret
pop
jnp
cmp
call
jle
call
xlat
addl
push
pop
push
in
adc
mov
leave
jbe
mov
jl
adc
nop
rcl
mov
jbe
shr
jle
cltd
push
ret
addl
lret
sbb
xor
int
call
cmpsl
inc
add
lods
aaa
adc
frstor
adc
scas
sub
clc
fdivrs
mov
fidivl
jne
jb
ljmp
mov
mov
jnp
jge
test
sbb
add
jns
movsl
dec
in
jmp
aad
scas
out
sub
insl
or
add
add
push
jge
in
addr16
addl
mov
mov
cs
and
push
adc
movl
sbb
and
mov
sbb
in
outsb
or
add
add
add
lds
out
insb
xor
jge
add
jl
mov
mov
pushf
icebp
inc
add
push
push
add
scas
cmova
xor
mov
rolb
add
fwait
dec
das
push
ss
add
push
sti
xchg
dec
ds
jae
add
xchg
roll
imul
rolb
movb
jae
mov
add
dec
jo
add
add
adc
out
ss
ds
add
and
lcall
mov
repz
or
inc
add
sbb
nop
adc
test
sub
dec
movl
add
sahf
mov
mov
xchg
ja
add
add
mov
pop
xor
mov
inc
add
add
jecxz
test
lss
mov
sbb
push
mov
sti
xor
cmp
movsb
fiadds
add
test
cltd
ljmp
and
imul
or
and
add
clc
fdivrs
sarb
inc
add
adc
add
inc
add
push
sub
loope
jnp
or
inc
add
jno
xchg
hlt
dec
addl
add
and
mov
add
push
add
rorl
adc
insl
dec
and
mov
pop
jb
addb
bound
jp
push
popf
jae
add
add
loope
je
xor
add
mov
repz
test
shrl
add
imul
test
fnstcw
add
mov
mov
aam
ret
add
cmp
or
mov
sub
nop
or
add
scas
pop
add
lahf
mov
enter
cmp
or
or
div
pushf
es
jge
cmp
popa
add
jge
and
call
adc
gs
dec
cld
lret
dec
add
mov
gs
add
xor
add
hlt
dec
lds
and
jnp
nop
add
in
mov
and
cltd
in
lds
popf
push
fbld
xor
cmp
pusha
add
dec
xor
xchg
mulb
lcall
add
add
sti
or
push
test
test
addb
rol
add
std
jp
pop
pop
std
mov
mov
add
add
mov
dec
push
out
sub
ss
push
jl
sub
lods
xlat
push
add
add
xchg
xchg
cwtl
jo
add
bound
loope
mov
xor
add
add
shll
syscall
add
mov
in
mov
mov
adc
sbb
mov
jmp
movsl
adc
add
and
add
inc
add
add
push
mov
popa
add
ds
add
scas
mov
add
out
push
xor
gs
jecxz
insl
xor
fwait
mov
xor
js
add
jo
jp
fs
add
mov
xchg
inc
add
mov
add
inc
add
sti
and
pop
add
ja
nop
cmp
aaa
daa
and
jg
add
ror
addb
in
lcall
add
lds
jge
mov
enter
stos
inc
add
movsb
mov
pop
ljmp
das
in
das
pop
push
mov
pop
mov
sahf
iret
and
jne
push
xor
xchg
loop
in
aad
in
add
or
mov
movb
push
mov
cmpsl
pop
ret
add
pop
addb
daa
pop
and
jbe
mull
add
add
mov
popf
pop
enter
mov
dec
add
sbb
in
add
add
pop
js
rcll
xchg
push
jbe
cli
dec
loopne
add
movsb
xchg
repnz
sbb
add
add
je
stos
sub
add
loop
cmpsl
insl
inc
add
lret
dec
xor
mov
loop
add
jmp
stos
lahf
mov
enter
mov
push
fwait
mov
mov
mov
cmc
mov
mov
cmp
push
pop
bound
adc
add
cmp
xor
add
add
frstor
movb
or
push
int3
mov
ja
adc
addl
dec
xchg
iret
loope
adc
in
mov
repnz
fsubrs
bound
sbb
or
jns
push
and
push
lret
dec
pop
jg
jnp
mov
jne
fistl
xor
fs
shlb
cltd
addl
test
gs
and
mov
add
xchg
or
lahf
pop
dec
scas
or
inc
add
mov
jg
shlb
ret
jno
mov
pop
jmp
mov
icebp
pop
add
add
cmp
enter
cmp
int3
aam
sahf
ret
add
jp
lds
leave
js
cmp
movsb
push
inc
add
pop
mov
call
add
add
loope
je
loope
inc
add
add
add
sub
ficompl
stc
les
int
add
mov
add
sahf
addb
testb
add
rolb
add
stos
loop
idivl
pop
mov
dec
xor
and
mov
aam
pop
push
in
cmpsl
imul
and
cvtps2pd
push
add
pop
inc
add
jl
stc
es
mov
add
pop
pop
mov
icebp
insl
dec
repnz
jge
adc
cltd
inc
add
test
aas
pop
aad
cmpsb
adc
cltd
sbb
add
in
push
into
imul
das
add
mov
xchg
ret
add
cmp
mov
in
pop
add
xchg
or
pop
cli
mov
in
fcmovnu
sbb
jmp
and
xchg
xchg
jmp
imul
aad
divl
pusha
add
je
inc
add
pop
ja
cli
cmp
add
in
add
pop
fmul
dec
add
repz
mov
and
lock
cmp
mov
fs
addr16
lret
jbe
lea
sbb
das
ss
add
jmp
lea
pop
jge
enter
icebp
or
add
add
mov
insb
popa
add
movsb
xor
roll
push
add
cmp
fidivrs
stos
push
cmp
fcomps
xchg
push
mov
add
sub
lret
addl
mov
adc
add
aad
int3
es
xchg
adc
sbb
lret
mov
cmp
lea
popa
add
cmpsl
or
mov
leave
stos
or
dec
xchg
pop
mov
addb
in
mov
xor
add
scas
into
adc
fistl
adc
push
add
pop
aad
adc
add
addl
adc
add
adc
inc
add
jb
xchg
xchg
shl
call
jae
add
jl
clc
std
jl
and
dec
ljmp
add
mov
fiadds
rcrb
lcall
add
sarl
jne
scas
jns
fwait
jns
mov
add
adc
sahf
xchg
push
out
cmp
fwait
mov
sti
scas
outsb
in
add
push
cmp
out
push
shl
and
pushl
or
push
cmp
nop
jp
mov
out
push
add
xchg
sub
inc
add
in
jl
movsb
sub
fmuls
daa
add
xor
adc
pop
mov
movl
add
into
add
sub
add
add
push
push
pop
add
gs
mov
cmpsl
pushf
int3
out
sub
leave
fimuls
call
movsl
sahf
xor
lret
addb
add
push
in
add
push
imul
cmp
push
mov
jp
mov
push
outsb
and
add
loop
add
xchg
clc
mov
xchg
jb
sahf
fcom
ja
add
popa
add
pusha
add
out
pushf
clc
inc
add
xchg
leave
inc
add
xor
add
pop
bound
jp
bound
out
out
lret
lcall
cmp
sti
cltd
call
add
adc
movsb
enter
fidivrs
scas
cli
in
pop
dec
or
add
add
mov
add
lahf
test
xchg
movl
rolb
jg
scas
mov
adc
xchg
mov
dec
aaa
sub
xor
ja
leave
repz
sub
ja
jae
adc
sbb
add
stos
xor
outsl
and
push
jne
lahf
daa
fsin
jno
and
dec
mov
lret
movsb
outsb
mov
jecxz
fisubs
dec
pusha
add
stc
mov
push
inc
add
push
stos
pop
push
jge
add
push
outsb
add
das
shll
and
in
xor
cwtl
loop
imull
xchg
jo
sub
add
sbb
add
xor
jmp
cmpsb
cs
arpl
out
les
jae
pop
roll
mov
push
sub
xchg
or
add
test
sbb
ret
add
sub
add
mull
add
push
scas
decl
cmp
dec
cmp
movl
movl
push
cmc
aam
fimull
push
mov
pop
pop
cmpsb
in
fsubrp
mov
pushaw
add
mov
push
mov
pop
fcom
mov
add
mov
les
in
stos
jecxz
jg
or
std
jg
outsl
movsb
xor
out
add
inc
add
jae
rorb
aam
add
add
mov
add
jl
add
dec
js
lds
push
fnstcw
in
movl
sbb
cmp
mov
mov
pop
jns
dec
out
loopne
icebp
out
ss
sahf
and
mov
decb
daa
adc
inc
add
add
shl
popa
add
js
out
add
out
cmp
mov
addl
clc
movl
rcrl
js
mov
std
mov
stos
inc
add
push
adc
pop
pop
mov
stc
xchg
xor
das
loope
mov
dec
loopne
test
add
into
popa
add
lret
add
push
xchg
fnstcw
add
ljmp
pop
sub
xchg
or
loop
fisubl
movsb
jge
add
jne
fldt
add
jne
aas
ret
sti
addb
add
xchg
lods
mov
fiadds
add
xchg
in
mov
fidivrl
add
in
mov
jns
addb
cmp
rolb
cmp
rorb
aam
sbb
sub
mov
lds
lock
enter
lahf
jae
addb
adc
sub
inc
add
mov
movsb
fldcw
fwait
mov
xchg
mov
and
out
daa
mov
jnp
repnz
and
les
pop
add
int3
addl
pushf
mov
test
pushf
gs
ret
pusha
add
add
mov
imul
iret
push
cmpsb
je
cmp
and
xchg
mov
bound
test
ds
add
add
shld
cmp
cmp
add
adc
dec
sbb
add
cmpsl
cmp
add
ss
mov
outsl
cmpsl
out
xor
hlt
add
push
es
jo
adc
pop
fs
adc
adc
imul
movb
sbb
es
pop
push
je
and
sub
and
jbe
enter
adc
push
into
jmp
pop
lds
ret
popa
add
mov
shrl
cwtl
test
addl
insb
add
lods
cmp
sub
pop
jp
sbb
add
push
push
pop
mov
add
dec
test
les
ljmp
stc
in
test
jl
add
out
lds
mov
and
sub
sbb
pop
add
ss
add
aas
dec
mov
shll
addl
mov
jle
push
pop
pop
int3
int3
xchg
cs
push
movsl
cmp
add
xchg
out
xor
inc
add
jge
add
cli
inc
add
push
lret
aas
enter
xor
or
add
add
addl
add
add
adc
add
add
dec
push
or
cwtl
jne
jbe
idivl
add
cwtl
jmp
popa
add
jl
inc
add
insb
dec
fstpl
lret
pushf
add
jp
cltd
jb
addb
pop
addl
les
sub
pusha
add
dec
negl
sti
scas
mov
mov
sub
add
add
addl
add
jecxz
push
mov
inc
add
lret
mov
sub
push
sahf
mov
dec
mov
mov
outsb
in
mov
push
mov
out
lret
lods
mov
enter
lret
loopne
pop
sub
daa
cmp
adc
dec
and
lds
xchg
adc
sub
jbe
movl
push
jae
lret
mov
call
inc
add
pop
addl
in
test
dec
and
jne
and
in
add
mov
add
sbb
adc
push
sbb
add
ja
add
rcll
dec
icebp
or
push
loop
xlat
ss
xchg
sbb
cmp
add
into
lahf
fists
mov
mov
addr16
movsl
dec
push
movsl
xchg
mov
or
adc
push
push
in
lret
mov
leave
jg
mov
add
out
roll
pop
mov
xor
xchg
outsl
sbb
cmc
movl
sub
add
jle
jp
addr16
mov
jmp
cmp
dec
mov
push
scas
lahf
or
rolb
fldt
pusha
add
enter
xchg
or
idivb
push
xchg
add
je
and
add
es
stc
jecxz
movsl
stos
inc
add
add
jbe,pn
es
pop
push
mov
movl
icebp
pusha
add
test
sbb
jns
js
add
clc
cmp
fsubl
mov
idivl
sti
jno
add
add
add
add
int3
sahf
movsb
out
daa
push
icebp
mov
icebp
xlat
outsl
jp
xchg
or
xor
lds
push
push
addb
jns
fdivrl
fwait
out
out
mov
and
sub
lea
xor
inc
add
arpl
cmp
cmp
lcall
test
aam
sbb
xchg
adc
pop
fists
stos
add
mov
mov
or
add
jns
aad
jnp
add
cmp
insl
push
add
or
f2xm1
push
add
mov
bound
dec
mov
sbb
outsl
sbb
add
sbb
add
popf
dec
sub
sbb
jnp
mov
pop
push
ja
add
sub
xchg
pop
push
lods
mov
bound
push
and
xchg
outsl
mov
add
add
sahf
cmp
add
cmp
mov
cmpsl
test
mov
sub
ret
cmp
push
rolb
in
mov
adc
add
push
push
aas
jecxz
loopne
cld
mov
enter
jg
leave
in
cmp
test
and
lea
enter
push
lds
test
push
add
add
or
add
clc
add
and
js
add
pop
jge
dec
mulb
add
mov
push
std
div
shl
lahf
adc
outsb
cmp
decl
cltd
cmp
in
xchg
icebp
cmp
or
dec
sub
pop
jbe
adc
mov
mov
mov
mov
jmp
das
lret
es
push
pop
repz
fisubrs
push
out
jb
add
cmp
je
adc
push
pop
sub
int
inc
add
cmp
jmp
ljmp
add
and
pop
mov
std
mov
dec
cwtl
repnz
mov
push
cmpsb
arpl
add
mov
jl
add
repnz
ret
enter
ljmp
jno
add
fwait
out
call
loopne
call
dec
add
push
loope
cmpsl
dec
test
or
add
push
adc
fsubr
cmc
cmp
pop
xchg
roll
push
cmc
rcrl
addb
ja
push
mov
ljmp
mov
jecxz
fbld
adc
cmp
xchg
fwait
rolb
mov
add
out
cmp
cmp
jl
jge
aaa
mov
cs
or
fwait
mov
add
adc
pop
push
add
fisubrs
mov
pop
add
jle
cmp
mov
pop
add
popf
inc
add
lock
loopne
add
add
rol
add
lcall
add
inc
add
jbe
out
loop
add
mov
scas
push
sahf
loope
cld
filds
or
fisttpl
movsl
aad
adc
jmp
aaa
fs
add
loop
add
add
push
cmpsb
add
stos
pop
inc
add
add
loope
add
add
gs
lcall
std
testb
imul
mov
lcall
arpl
movl
adc
or
mov
outsb
popf
inc
add
add
inc
add
dec
sub
inc
add
push
dec
dec
sbb
ljmp
adc
xlat
sub
add
aad
cld
clc
mov
cmpsl
xchg
jmp
mov
add
jae
cmp
add
aas
xchg
sti
fistps
xor
mov
mov
or
arpl
loopne
xor
xor
add
lods
fsubrs
out
cli
sti
addb
loopne
jno
add
push
pop
out
add
dec
xchg
jmp
pop
cmc
push
push
mov
adc
jge,pn
das
ficoms
xlat
mov
mov
outsb
push
addr16
add
enter
add
cmc
mov
hlt
cmpsb
sti
sbb
add
add
jb
push
add
adc
inc
add
add
out
test
addl
inc
add
add
jno
push
xchg
cli
mov
add
shrl
xor
fs
cmpsb
adc
jmp
aaa
insb
xchg
test
outsb
jg
or
arpl
mov
insb
fcomi
fwait
iret
jp
rolb
sub
lods
scas
int
sbb
add
add
add
repnz
in
fmulp
push
lret
xchg
sbb
ss
nop
and
mov
into
xchg
popa
add
mov
cmp
sub
or
add
into
shlb
mov
stc
outsl
pop
add
add
pop
loopne
cmpsl
lret
xchg
adc
addr16
push
add
dec
ret
in
mov
pop
les
lods
mov
icebp
mov
sub
add
dec
mov
out
xor
ss
add
add
mov
sub
xor
mov
mov
fwait
addr16
sbb
pop
add
leave
mov
or
inc
add
cmp
mov
addl
mov
cmp
enter
sub
cmpsl
add
fdivr
out
xchg
dec
aam
inc
add
add
add
add
ljmp
into
mov
lret
adc
test
adc
mov
and
pop
enter
inc
add
pop
inc
add
xor
pop
popf
mov
adc
sbb
clc
or
push
popf
add
sbb
loopne
mov
dec
shl
aas
mov
lds
inc
add
repnz
mov
push
movl
lods
lods
sub
add
es
dec
push
dec
dec
in
sub
add
jge,pn
out
sbb
push
push
jmp
insb
mov
adc
inc
add
fcomps
loop
ror
xchg
mov
xchg
fisttpll
std
rcll
inc
add
or
dec
pop
xor
mov
pop
mov
mov
adc
das
imul
std
roll
dec
roll
testl
mov
add
add
adc
insl
rolb
decl
jbe
inc
add
lods
jle
adc
inc
add
idivb
adc
pop
scas
aaa
mov
pop
and
imul
add
lods
arpl
mov
xchg
mov
imul
fstpt
add
mov
push
add
pop
das
std
int
jbe
addb
test
inc
add
shr
jecxz
dec
sub
fcompl
push
ljmp
xchg
ljmp
xchg
jns
dec
and
mov
in
cmp
xchg
and
xchg
js
iret
roll
xchg
test
imul
adc
fadds
xchg
jnp
leave
cmc
mov
jbe
jbe
les
ljmp
cwtl
in
in
divps
rolb
mov
mov
rcrl
xchg
in
enter
mov
add
arpl
mov
add
repnz
sbb
xor
je
adc
cmp
jge
inc
add
add
mov
add
jo
mov
add
inc
add
add
addb
add
movsb
mov
jg
dec
xor
dec
lcall
mov
lahf
jecxz
xchg
jg
mov
or
dec
mov
xchg
scas
and
jmp
dec
mov
add
sbb
popa
add
imulb
stos
rcrl
pop
add
aaa
mov
movsb
add
or
add
mov
pop
popa
add
add
or
and
out
sbb
bound
int3
and
add
sub
cli
push
add
dec
lods
into
or
sub
lret
sub
aas
adc
xchg
mov
call
ret
and
mov
jle
add
dec
sbb
aam
mov
mov
dec
cmpsb
dec
lock
shll
mov
add
movl
xchg
testl
lods
and
mov
pop
pop
ret
add
xchg
ret
add
add
addb
sbb
out
js
add
addl
xchg
mov
pop
xor
sbb
or
cmp
dec
das
xchg
xchg
mov
add
popf
lods
fnstcw
fidivl
add
lods
je
mov
xlat
jne
repz
add
sbb
fcmovnu
divb
leave
push
add
jmp
add
adc
jmp
jne
jmp
dec
movl
lea
xchg
push
sbb
mov
lret
mov
xor
push
inc
add
push
iret
push
shrl
cmp
es
add
mov
addb
push
jmp
loope
pop
adc
adc
sbb
sub
addl
dec
icebp
loope
movsl
pop
xchg
xchg
add
pop
aad
lea
push
add
lock
lret
mov
mov
sub
xchg
pop
les
pushf
mov
addl
mov
std
pop
ljmp
jp
mov
add
add
pop
loopne
adc
loopne
dec
jae
add
mov
add
and
imul
loope
and
ret
add
dec
push
mov
popf
add
dec
add
sbb
pushf
ljmp
pop
jae
cli
enter
out
cld
stos
les
push
add
ss
mov
xor
push
push
add
mov
inc
add
in
ret
addb
pop
test
fs
and
sub
sbb
add
sub
add
lods
pushf
pop
ja
cmp
in
outsl
lret
xor
repz
movb
movsb
into
inc
add
jns
add
or
fbld
clc
jl
imul
dec
or
push
jge
lods
xchg
inc
add
popl
cmp
dec
inc
add
inc
add
movb
in
shll
daa
xchg
roll
mov
add
ds
lods
push
push
int
adc
and
mov
inc
add
icebp
mov
add
mov
add
push
push
sbb
push
lods
push
xor
add
add
imul
add
fcomps
add
sbb
fbstp
fstpl
test
bound
cmpsb
imul
add
cmp
inc
add
inc
add
pop
es
mov
jmp
fldl
add
push
loopne
rorb
dec
sbb
mov
sub
std
xchg
cmpsl
fdivs
add
xchg
mov
add
cs
jg
add
cltd
push
add
addl
add
jnp
ret
repnz
daa
jno
sbb
out
and
jl
aas
int
int
pusha
add
add
mov
xchg
cmp
pop
movb
fisttps
bound
in
data16
add
jno,pn
aam
mov
pop
scas
sbb
xchg
and
push
or
fists
mov
add
add
cwtl
pop
push
push
sbb
or
pop
movsb
mov
sbb
fmuls
add
push
incb
pusha
add
add
mov
add
add
pop
add
ja
add
add
test
sbb
inc
add
cli
mov
add
push
mov
add
sbb
mov
in
and
and
jle
int
push
cmp
add
cmp
ret
add
and
or
sbb
inc
add
mov
dec
xchg
out
jle
xchg
cmc
int
lret
mov
fstpl
inc
add
jge
push
in
cwtl
loop
and
fidivs
jp
insb
adc
mov
imul
dec
lds
xchg
push
f2xm1
pushf
roll
add
add
pushf
stos
jle
addb
xlat
loop
pop
add
loope
or
inc
add
adc
mov
lds
loopne
xchg
out
mov
je
sub
cli
and
dec
sbb
movl
fists
test
int
fnstcw
xchg
into
int3
mov
lea
add
adc
push
and
pop
adc
pop
mov
test
pop
xor
lret
sbb
loop
addb
addl
fs
add
in
pop
ds
ss
xchg
push
nop
fisttpl
lods
aaa
inc
add
add
xchg
enter
dec
or
aad
enter
lods
scas
or
test
mov
push
mulb
add
hlt
insb
xchg
jae
add
roll
mov
pushf
sbb
fnstcw
or
sub
test
xchg
cltd
int3
addl
insl
push
add
xor
lret
rolb
dec
inc
add
cli
mov
add
adc
icebp
lds
pop
fincstp
cwtl
push
pushf
xchg
jp
es
ret
add
std
inc
add
jmp
xchg
movsb
ljmp
and
cwtl
xchg
addr16
ds
jle
call
push
lods
sbb
add
mov
into
movl
cli
or
mov
fs
fsubl
addl
aaa
xchg
mov
add
dec
dec
inc
add
sub
push
jbe
xchg
lcall
imul
ds
inc
add
add
sub
push
in
lea
xor
mov
mov
mov
pop
repz
jno
stos
outsl
mov
and
push
xchg
mov
pop
jo
notl
add
mov
cmp
scas
cmpsl
xor
popf
jle
ds
mov
cli
cmpsb
movsb
int
scas
cs
add
sbb
inc
add
clc
je
push
addb
mov
nop
or
xor
add
cmp
add
inc
add
mov
cli
lret
jnp
mov
xor
scas
xor
jmp
movsb
ja
push
pop
icebp
lea
popa
add
mov
push
scas
xor
add
addb
push
enter
add
repnz
add
out
jne
xchg
lds
int
test
mov
scas
mov
test
in
cmp
jns
roll
dec
sub
add
das
mov
add
xchg
test
cmp
xchg
rdtsc
fildll
or
dec
adc
rol
add
lea
mov
outsl
testb
cmp
inc
add
push
inc
add
xchg
xchg
test
jg
add
push
lock
imul
lds
mov
adc
xchg
xor
inc
add
xor
sub
in
sbb
pextrw
add
pushf
or
pop
xchg
loopne
int
dec
push
jo
sub
pop
add
cmp
int
ljmp
sub
mov
add
je
cmc
imul
mov
sti
addl
lods
outsl
leave
mov
enter
addb
add
rcr
clc
gs
rclb
add
ret
sbb
ss
es
add
ja
lret
jnp
cld
xor
pop
fistpll
nop
rolb
adc
jl
imul
in
sub
add
add
repnz
aas
popa
add
add
lea
add
add
add
mov
xchg
xor
add
xor
lds
int
insb
lods
movb
add
loope
loope
ss
ss
push
shll
add
test
repz
mov
ja
aam
push
push
add
jecxz
es
je
lods
mov
add
movsb
loope
lcall
xor
add
add
push
sub
ss
xchg
loop
push
or
inc
add
popf
mov
adc
add
add
and
ds
fmull
add
add
psubd
call
ja
inc
add
jle
add
sti
icebp
addb
or
mov
jl
add
push
mov
ja
stos
lock
les
pop
imulb
xchg
jo
jb
test
sbb
pop
addl
mov
dec
sub
add
frstpm(287
jp
test
repz
add
movsb
cmc
inc
add
xchg
pop
enter
addr16
jbe
xlat
adc
add
dec
ds
add
js
addb
add
adc
add
add
inc
add
lret
add
push
and
dec
movsl
shlb
out
outsl
iret
int
repz
mov
add
movsb
xor
enter
popa
add
jb
add
repz
fwait
xor
notb
pop
pop
scas
insl
add
mov
repnz
xor
add
rolb
add
add
out
stos
and
bound
and
jle
cli
das
or
movl
testb
pusha
add
addb
lods
out
stos
xor
jp
aad
dec
test
iret
and
add
insb
push
insl
xchg
int
cltd
lahf
lahf
and
adc
xor
add
test
dec
push
in
push
mov
inc
add
jae
mov
das
xchg
int3
pop
fimull
cmpsl
cmp
out
xchg
xchg
addl
data16
or
lcall
cli
movsb
push
jae
jge
push
repnz
stc
in
sbb
add
adc
call
loope
leave
int3
stc
and
lods
xor
jle
add
jno
fidivrl
addl
pusha
add
mov
add
stos
bound
in
leave
daa
test
xor
mov
repnz
add
cmp
aam
pop
sub
or
mov
pop
xor
pop
into
stos
scas
mov
inc
add
addl
das
inc
add
sbb
mov
mov
add
pop
xor
xor
outsl
scas
aas
or
mov
xor
and
hlt
sbb
add
add
fdivr
es
shlb
popf
cld
xchg
pusha
add
fwait
pushf
insl
pop
add
xlat
or
xchg
aad
fstpl
xchg
xchg
pop
addl
add
jbe
add
movl
add
and
dec
push
lods
push
add
mov
sub
mov
jae
pop
push
push
jecxz
push
outsb
int
add
add
cld
cli
adc
out
nop
sub
decl
mov
shrl
cmp
lds
cmp
lds
dec
xchg
mov
add
add
add
add
int3
es
inc
add
add
mov
jns
cmp
pop
jg
add
ss
sbb
fwait
inc
add
mov
dec
adc
or
pop
popf
add
inc
add
lea
or
mov
inc
add
int3
inc
add
pop
enter
jge
lods
dec
fs
roll
nop
pop
push
mov
push
insl
cs
mov
addl
mov
sarl
addl
push
jge
add
lods
push
mov
add
popa
add
movsl
mul
fnsave
xor
test
dec
addl
jae
fcmovnb
add
pusha
add
push
xor
in
add
lds
scas
jge
add
ss
shll
fstl
ljmp
roll
sti
fildl
sbb
add
cmp
je
stos
pop
add
dec
pop
add
cmpsl
jmp
add
test
add
movsl
and
sub
out
add
jecxz
add
add
mov
push
jnp
add
movb
fcomps
inc
add
push
jecxz
in
clc
aas
sub
test
xchg
xchg
xchg
dec
push
mov
addl
or
add
add
test
addl
add
sahf
and
pop
jmp
sub
shrb
add
add
and
sbb
rclb
pop
fcmovb
add
sub
insl
inc
add
add
pop
jmp
mov
lret
int3
sbb
add
fisttpl
push
ja
iret
adc
cltd
cmpsl
roll
ljmp
pop
or
je
and
std
mov
sbb
dec
js
pop
dec
lret
sub
push
ljmp
jnp
sar
xchg
and
pop
jecxz
mov
repz
test
jle
add
fisubs
add
add
dec
mov
pop
popf
es
addb
sbb
add
movl
out
dec
fdivl
fisubrs
mov
test
pop
xchg
inc
add
imul
pop
mov
mov
add
add
push
rolb
or
shrb
ret
add
repz
xor
add
sbb
add
repnz
fwait
mov
cmc
outsl
sub
add
in
dec
pop
adc
add
inc
add
jecxz
cmp
xor
mov
out
push
shll
fisttpl
xchg
dec
mov
les
xchg
inc
add
sbb
add
out
cmpsl
lcall
fimuls
mov
jmp
push
cld
inc
add
loopne
cmp
outsb
fadds
lret
sub
inc
add
add
or
loopne
scas
jmp
add
es
es
repnz
leave
mov
jmp
add
xchg
out
jle
mov
sbb
mov
fnclex
cltd
flds
arpl
adc
cmp
in
inc
add
outsl
push
cmpsb
lds
mov
insb
int3
dec
adc
pop
add
and
ret
add
pop
out
test
and
pop
pop
dec
cmp
enter
push
or
adc
add
jle
sbb
adc
das
sub
xchg
stc
jle
in
sbb
add
pop
aas
inc
add
bound
cmp
movb
daa
xchg
imul
inc
add
add
add
scas
xor
inc
add
add
mov
xchg
mov
testb
add
cs
push
push
add
sub
mov
dec
loop
cmp
jae
pop
push
mov
add
add
loopne
inc
add
dec
jae
jle
cmp
and
mov
xlat
xlat
in
movl
sub
into
sub
push
addl
cmp
mov
add
mov
add
enter
cli
push
cmp
sub
out
shll
and
fcmovu
out
jle
mov
inc
add
adc
push
add
fwait
lret
popf
mov
aas
loope
lods
call
jno
add
roll
sbb
xor
add
stc
inc
add
add
add
add
jecxz
sbb
add
addb
xor
ret
jo
sbb
ds
inc
add
cmp
inc
add
ja
jmp
push
xor
fs
and
iret
pop
das
mov
cmc
mov
dec
inc
add
fstl
repz
aaa
dec
or
sbb
es
jne
and
repz
inc
add
or
add
lcall
stc
addr16
insl
pop
add
dec
mov
xor
lock
add
add
scas
xor
cmp
lea
mov
xchg
sub
cwtl
arpl
loopne
out
lret
hlt
jnp
add
or
hlt
out
pop
inc
add
fwait
dec
mov
and
lods
or
cmp
adc
bound
jp
xchg
xor
adc
test
loopne
lods
addb
insb
aaa
testl
daa
cmp
xchg
mov
lahf
je
test
dec
mull
mov
in
cmp
add
popl
add
jo
fcom
xor
aam
add
scas
test
daa
and
sahf
clc
mov
loope
test
stos
inc
add
cmp
xor
cld
inc
add
test
out
xor
jl
test
jge
and
push
pop
pop
mov
test
pop
rolb
mov
hlt
inc
add
cs
inc
add
add
mov
in
push
enter
sbb
in
pop
into
rcll
in
push
push
int3
cltd
or
rorb
mov
add
cld
in
fs
stos
ja
je
add
dec
mov
stos
and
inc
add
aaa
stos
cmp
mov
or
sbb
add
add
pop
and
pushf
int
call
rolb
in
test
stos
add
out
sbb
notb
lret
mov
mov
mov
inc
add
adc
lret
dec
xchg
cld
outsl
movsb
jl
movsb
cmp
add
push
daa
roll
inc
add
push
and
clc
shl
push
test
add
scas
out
int
leave
test
and
test
test
decb
das
in
sub
add
inc
add
fidivrl
roll
xor
dec
bound
ja
mov
xchg
jnp
addl
add
add
jecxz
add
sub
loop
adc
add
es
add
and
xchg
dec
mov
mov
mov
jle
add
jno
push
add
sbb
and
sbb
push
inc
add
add
add
ljmp
jmp
test
loope
push
push
roll
imul
aad
lret
scas
insb
jbe
loope
pop
mov
mov
rolb
add
sub
add
add
jle
repnz
insb
cmc
test
repz
mov
popa
add
and
sub
bnd
test
daa
mov
cltd
cmp
mov
nop
pop
add
sbb
adc
pushf
dec
sbb
pop
xchg
dec
dec
mov
push
xor
test
pop
stos
lret
and
fs
push
aad
add
jg
dec
scas
gs
outsb
mov
jge
and
xchg
lret
aad
add
test
lods
mov
test
push
out
mov
add
mov
es
test
inc
add
leave
scas
mov
roll
in
lods
scas
cmp
enter
add
pop
and
insb
outsl
inc
add
add
jbe
int
add
mov
dec
into
outsl
mov
out
cld
push
shll
fistpl
sub
mov
and
ret
inc
add
das
daa
in
add
or
data16
lods
mov
xor
add
mov
xchg
loopne
add
sub
add
mov
add
sbb
enter
add
aad
in
push
mov
adc
add
out
inc
add
add
int
call
outsb
xor
in
into
push
xor
les
dec
adc
outsb
push
in
shll
fwait
add
inc
add
inc
add
xchg
addl
push
sbb
call
mov
ja
xchg
lret
add
mov
cmc
mov
imul
push
pusha
add
and
out
sbb
mov
es
nop
or
lahf
pop
pop
and
and
ret
pusha
add
out
inc
add
nop
aad
roll
add
add
pop
sbb
add
push
cmpsb
and
ja
add
lahf
dec
iret
sub
mov
add
loope
xchg
cmp
daa
leave
xor
sbb
or
inc
add
jb
add
jle
ret
add
ja
rolb
or
outsb
jne
jno
adc
scas
xchg
and
loopne
adc
rorb
mov
or
cmp
pushf
mov
and
roll
mov
add
addb
jl
movb
sahf
sbb
cmp
imul
insl
gs
sti
cli
sti
mov
pop
popa
add
mov
add
fs
cli
add
xchg
pop
jae
jmp
mov
add
push
loope
je
int
push
add
add
out
testl
dec
mov
xor
in
bound
push
dec
cmc
pop
roll
push
add
test
movl
icebp
lds
loopne
xlat
inc
add
testl
lds
repz
popa
add
fcmovne
mov
lret
movsb
adc
mov
cmp
add
push
add
xchg
fcomps
mov
pop
stos
or
aaa
aam
xchg
mov
addl
les
cmc
push
pusha
add
cli
insl
ljmp
pop
popa
add
add
xchg
sbb
add
pop
xchg
mov
rolb
jns
int3
pop
xchg
test
add
roll
xor
outsb
sbb
push
dec
sub
add
int3
popf
inc
add
ds
lahf
mov
and
xchg
inc
add
xchg
iret
inc
add
or
jle
mov
mov
sub
add
leave
pop
add
stos
loopne
add
addb
sti
sub
insl
mov
and
cwtl
and
xor
pop
insb
mov
daa
rcrl
adc
rolb
adc
cmp
fcoms
add
sub
add
mul
insl
xchg
mov
loop
ljmp
add
pop
add
or
mov
mov
sbb
xlat
xor
pop
stc
lret
lea
data16
iret
mov
cmp
push
mov
xchg
outsb
xchg
negl
notl
add
add
add
add
mulb
add
add
ffreep
add
iret
arpl
imul
pop
fldenv
add
add
stos
enter
movl
cmc
pop
test
bound
and
hlt
inc
add
and
dec
lock
in
sub
and
mov
call
add
sub
ret
int3
les
mov
jge
push
mov
xchg
mov
add
mov
jnp
arpl
inc
add
pop
mov
outsl
inc
add
adc
mov
test
sub
xor
dec
movb
scas
add
test
rolb
fdivl
sbb
add
mov
das
xor
xor
push
or
add
cmp
pop
sbb
mov
pusha
add
add
fnstenv
scas
pop
js
ss
lods
sbb
jl
add
or
add
mov
jmp
lds
inc
add
inc
add
xchg
lock
add
hlt
dec
ds
loope
inc
add
hlt
lea
push
sub
add
add
add
sbb
add
mov
loope
dec
or
add
adc
test
add
push
and
movl
mov
jne
dec
xchg
xchg
add
jge
rcrb
mov
or
cs
xlat
aas
sub
pop
pushf
cmp
les
lds
xchg
mov
movsl
adc
mov
int
iret
fcmovu
mov
xor
push
xchg
mov
call
add
add
xchg
jae
and
mov
add
add
outsl
xor
add
stc
mov
cltd
jl
push
fildll
pop
sbb
mov
xor
add
add
loope
jbe
inc
add
dec
xchg
sub
mov
mov
addb
add
call
adc
add
movsb
cmp
rolb
xchg
cwtl
push
lods
test
loop
imul
dec
jns
pop
jnp
add
dec
mull
sahf
pop
add
xor
fwait
outsb
cmpsl
cltd
repnz
mov
jb
or
arpl
out
jmp
cmpsb
mov
lods
and
xchg
xor
add
xor
mov
imul
adc
or
lds
and
push
add
or
add
pop
fldt
les
clc
xor
xchg
or
xchg
ja
add
lret
xchg
mov
push
clc
sarb
test
dec
mov
adc
xor
add
push
testb
adc
xchg
pop
mov
int
fisubrs
sarl
repz
add
add
cmp
sahf
sbb
add
stc
fadd
add
cwtl
add
ficomps
xchg
lret
outsb
aam
add
lods
push
add
test
dec
pop
dec
pop
add
push
add
inc
add
or
or
lea
mov
jo
lds
fnstsw
sub
add
adc
pop
mov
pmuludq
and
in
mov
xlat
jmp
add
int3
sub
jbe
roll
jae
shll
in
ss
ret
add
inc
add
cltd
addb
add
jge
pop
xchg
pop
or
sub
push
mov
rorl
xor
add
jbe
mov
addr16
and
enter
scas
int
adc
call
pop
mov
push
ss
sahf
pusha
add
add
loop
insl
ja
add
sbb
outsl
mov
int
adc
adc
push
fs
add
inc
add
ficoms
aaa
xchg
bnd
je
mov
pusha
add
pop
sbb
jecxz
cmc
adc
xchg
mov
cmpsb
icebp
lock
sub
sub
addl
movsl
ret
fidivrl
cltd
lret
movb
mov
je
add
cli
jne
jbe
xchg
dec
dec
shl
mov
lret
fwait
insl
mov
cs
ja
sub
jb
aam
insl
mov
sub
mov
out
sbb
lock
aaa
mov
fstps
add
mov
and
enter
jae
xor
jo
jno
fcoml
push
inc
add
mov
dec
dec
mov
push
dec
add
add
mov
cltd
pop
xor
fsubl
mov
cmp
xchg
fs
call
bound
in
pop
mov
pusha
add
inc
add
mov
add
push
out
int3
pop
inc
add
call
pop
fidivl
and
out
xchg
dec
imul
ds
add
imul
dec
das
pop
lret
fmull
test
or
xor
addl
mov
movsl
xor
stc
out
fcmovnb
add
jns
inc
add
mov
cli
dec
mov
addb
sub
mov
add
cmpsb
sub
shrb
xchg
loope
add
add
jo
hlt
push
lds
add
addr16
add
mov
add
and
shld
inc
add
addl
or
lcall
xor
add
add
push
mov
shlb
mov
add
mov
inc
add
add
add
movb
xor
mov
jle
lcall
xor
mov
int
push
xlat
mov
mov
mov
outsb
repz
imul
addb
adc
je
movb
rolb
pusha
add
add
ljmp
push
sbb
and
test
jp
ss
stc
jbe
mov
out
add
and
xchg
xor
mov
cwtl
dec
bswap
adc
addl
les
fdivrl
inc
add
shl
lret
addl
add
xchg
inc
add
in
fisttps
pop
lcall
add
mov
add
pushf
jne
fwait
stc
rolb
aaa
scas
dec
aad
and
add
cmc
mov
sarl
psubd
movsl
pop
out
cmc
push
stos
stos
movl
xchg
sti
jmp
roll
mov
cwtl
outsb
sbb
add
push
mov
xchg
dec
rolb
dec
inc
add
mov
addb
fsts
pop
pop
ror
popf
loopne
pop
aaa
xchg
hlt
call
cwtl
in
fldcw
mov
add
sub
mov
xchg
xchg
test
sub
push
sub
jns
pop
adc
add
xchg
int
jbe
pop
mov
leave
inc
add
pop
add
pop
cmp
xchg
lea
addb
imul
jecxz
xchg
sub
divl
lret
in
mov
les
dec
xchg
pushf
dec
sub
repnz
int
add
outsl
mov
push
adc
imul
mov
add
in
mov
gs
lock
mov
add
jb
mov
add
push
outsl
ret
add
addl
mov
xchg
rolb
xchg
jecxz
mov
xchg
adc
icebp
add
cmp
mov
testb
add
movsb
lock
jg
outsb
inc
add
pop
aam
mov
fiadds
and
pop
aaa
rolb
or
add
outsb
xchg
arpl
xor
and
mov
xchg
mov
inc
add
clc
sti
mov
add
lock
push
mov
push
addl
iret
shll
cmp
sub
push
pop
in
xchg
add
fnsave
jae
sub
add
pop
mov
imul
push
lret
pop
xor
cltd
xchg
adc
jae
aas
daa
xchg
jmp
push
cwtl
std
mov
xor
loopne
add
sub
add
inc
add
jbe
sbb
in
insl
xchg
fists
xor
int
lods
jne
dec
rcrl
aaa
or
ret
add
dec
cmp
sub
add
imul
fsubl
mov
scas
into
fisttpll
and
stc
inc
add
mov
fists
and
repnz
int3
xor
stos
push
ret
add
xchg
mov
in
mov
mov
add
loop
cltd
push
xlat
je
add
pop
pusha
add
cmp
int3
out
cmpsl
movsb
imul
add
movsl
add
add
cli
popa
add
dec
push
mov
push
movsl
fistpl
pop
add
mov
xchg
sti
lds
lahf
adc
add
mov
outsb
inc
add
roll
imul
jmp
addl
bound
cmc
push
xchg
mov
clc
xchg
add
pushf
jne
and
sub
and
pop
pmaxsw
add
and
add
adc
add
mov
mov
adc
add
int3
stc
out
inc
add
cmp
mov
add
or
cmpsl
pop
cmp
out
flds
push
out
push
push
imul
inc
add
push
jnp
push
sbb
jg
push
sarb
xor
test
out
rcl
mov
les
mov
stc
mov
into
ret
cmp
xor
push
cmp
repnz
in
test
lock
and
std
or
add
add
xor
add
pop
movb
add
add
sub
add
stc
adc
xchg
pop
cmpsb
xor
sub
aaa
fstps
dec
ret
add
test
add
jns
adc
daa
lret
inc
add
stc
adc
add
or
xchg
mov
pop
out
ljmp
ficompl
inc
add
xchg
inc
add
cwtl
mov
lea
leave
push
push
ja
add
mov
xchg
dec
mov
and
test
push
inc
add
add
lock
add
pop
cli
je
jg
es
ljmp
loop
push
addb
pusha
add
add
addb
mov
or
inc
add
jle
mov
std
repnz
loopne
outsl
push
xor
jb
test
or
add
mov
int3
daa
lock
xchg
xchg
lock
cmpsl
in
mov
std
faddl
mov
add
dec
cltd
or
jmp
xor
outsb
ret
jmp
mov
mov
cmp
test
fsts
movb
xchg
mov
inc
add
fists
test
notl
cltd
lcall
cmp
add
fldl
mov
sub
add
lcall
jnp
dec
cwtl
mov
add
jne
or
cwtl
roll
addl
std
push
out
call
xchg
mov
push
add
nop
iret
mov
lahf
inc
add
pop
sbb
shrb
add
inc
add
sbb
leavew
push
icebp
dec
inc
add
aam
ljmp
jbe
mov
mov
add
ficompl
fninit
out
inc
add
add
outsb
push
jns
mov
add
xchg
loope
repnz
add
fsubl
repnz
mov
out
int3
call
mov
push
add
bound
inc
add
lcall
out
add
clc
or
cmp
int
xchg
leave
fsubs
das
imul
add
lret
mov
push
call
mov
xchg
addl
mov
sub
or
mov
movsl
push
add
xchg
loop
add
push
mov
cmp
inc
add
das
sub
cmp
jle
add
mov
aas
sahf
dec
loopne
addb
adc
addb
hlt
mov
add
xchg
sub
arpl
addb
add
stos
fadds
pusha
add
xchg
mov
outsl
loopne
add
addl
jnp
in
fidivrs
sahf
insb
mov
push
xor
lds
pusha
add
cmp
sahf
dec
adc
jne
add
add
pop
cs
add
out
jl
push
outsb
mov
repnz
sub
inc
add
add
call
call
jnp
mov
faddp
add
xchg
mov
add
add
sbb
fsubrl
mov
stos
dec
dec
loopne
fwait
insl
mov
add
fisubs
pop
add
push
push
cmc
xchg
les
ds
pop
sbb
add
nop
insb
jo
sbb
mov
inc
add
sub
imul
add
xor
cmp
push
push
mov
nop
out
cs
add
icebp
jae
xchg
fisubrl
scas
addb
addr16
add
shr
sub
mov
faddl
jnp
rclb
call
add
add
dec
sbb
sub
inc
add
add
idivl
mov
adc
xor
dec
roll
in
sbb
cltd
and
rcrl
icebp
out
mov
add
add
mov
pop
sub
inc
add
inc
add
mov
push
es
mov
imul
push
cmp
int3
test
les
fbstp
cmp
add
add
xchg
xchg
mov
sub
add
jo
cmp
addb
pop
add
xchg
xor
outsl
lret
xchg
lahf
out
mov
inc
add
and
ljmp
adc
inc
add
add
daa
mov
or
js
bound
paddb
in
mov
xchg
xor
add
cmp
stc
inc
add
inc
add
lret
jge
inc
add
adc
jae
xchg
test
xor
add
sarb
add
push
mov
scas
idivl
sub
mov
pushf
leave
xchg
xor
or
jg
imul
add
or
icebp
pop
mov
pop
or
sub
add
xchg
je
add
dec
pop
xchg
xchg
outsb
sar
insl
fstps
add
jno
add
jno
pushl
pop
add
loopne
call
dec
cmp
add
scas
and
lds
cmp
cmpsl
add
icebp
inc
add
test
inc
add
inc
add
add
add
adc
fdivr
in
insb
cmp
add
lret
lahf
push
lods
pop
add
out
mov
or
xchg
jmp
push
add
ja
push
add
mov
ds
xchg
jbe
gs
ss
add
shlb
adc
mov
jo
xchg
jno
scas
incl
mov
jge
and
mov
addr16
add
add
pusha
add
push
inc
add
add
xor
fwait
in
dec
cltd
jo
pop
add
aaa
mov
add
sbb
dec
cmp
mov
outsb
addr16
add
mov
dec
jmp
leave
movsl
push
or
int
add
mov
cmpsl
or
gs
add
push
lahf
push
jg
pop
jmp
mov
push
sub
lret
adc
adc
lcall
fbstp
add
sub
les
ds
inc
add
dec
nop
and
jbe
add
das
push
dec
and
mov
cltd
test
addl
lods
dec
mov
push
or
mov
adc
aas
xchg
fistl
cs
imul
add
add
mov
rcl
repnz
dec
icebp
js
loop
rcrl
mov
dec
xchg
xchg
ja
add
jge
add
add
mov
cmpsl
mov
adc
loopne
std
mov
lcall
mov
adc
cmpsb
jmp
int
dec
dec
mov
xor
dec
hlt
sbb
mov
mov
add
lods
jl
jg
push
test
xchg
cmc
adc
add
or
mov
jmp
xor
xchg
jge
adc
sub
movsl
dec
sub
dec
cwtl
or
jmp
ret
insb
mov
dec
adc
cmp
mov
cwtl
mov
inc
add
inc
add
inc
add
ds
mov
roll
fdiv
mov
mov
xor
jg
out
sbb
adc
dec
cmp
insl
inc
add
push
or
sub
cmp
rolb
xor
pop
mov
add
mov
cltd
jg
roll
sub
mov
inc
add
add
addb
pop
cltd
mov
push
push
mov
lea
repnz
out
or
mov
aas
mov
sbb
in
stc
ss
sti
in
add
sub
aaa
mov
dec
sub
add
add
push
lret
addl
add
cwtl
std
decb
jae
inc
add
mov
mov
jle
add
addb
push
outsb
xchg
rorl
push
cmp
push
add
pop
add
int3
nop
hlt
or
add
dec
movb
sti
push
cmpsl
or
push
jae
add
repnz
fs
or
aas
clc
jb
addl
xchg
test
inc
add
dec
pop
pop
push
jno
loop
movsl
pop
addb
jg
pop
aam
insb
addl
xchg
mov
mov
rorl
out
xchg
enter
jbe
pusha
add
xor
lcall
dec
bound
lds
mov
mov
sbb
repnz
loope
jp
or
jo
mov
jb
fcompl
hlt
xor
xor
dec
movb
imul
pop
lds
cmp
test
or
jle
add
je
push
pop
repz
mov
add
adc
fnstsw
lds
aaa
lods
in
cmp
je
sub
push
out
test
popf
aaa
add
xchg
dec
les
addb
add
int3
movl
addb
dec
cld
inc
add
hlt
jae
sub
popa
add
push
repz
push
scas
pop
sub
jge
movsb
and
dec
stos
cmc
adc
add
sbb
hlt
cmpsb
jmp
mov
pusha
add
imul
and
insb
test
sbb
fs
call
enter
ss
adc
jbe
sbb
or
or
push
nop
lret
and
nop
scas
adc
movsl
lcall
add
testb
jno
hlt
adc
push
fisttpll
out
pop
outsb
add
clc
stos
pushf
and
push
dec
sub
add
inc
add
xor
lcall
cmpsb
inc
add
ret
add
xchg
push
scas
mov
sub
inc
add
in
push
in
xchg
pop
std
aaa
dec
fiadds
add
adc
pop
jne
and
sbb
push
addb
add
xchg
cmc
mov
xchg
jg
xor
add
mov
add
aad
cmp
loop
add
std
fldl
add
scas
sarl
sub
jl
push
pop
aas
push
add
testb
lret
movl
je
add
add
add
add
addb
mov
mov
push
data16
das
inc
add
lcall
inc
add
jno
out
jae
add
jle
add
jmp
push
inc
add
add
xor
in
out
fists
jg
hlt
fcoml
mov
add
ja
pop
add
pop
mov
test
mov
jecxz
lret
sub
icebp
scas
or
add
lock
js
sub
add
push
pop
xor
les
in
sbb
add
fcomps
add
insb
fsubrl
sbb
addl
add
jge
mov
fnstcw
call
ret
add
les
xor
les
add
mov
in
cmp
add
xor
shll
dec
ret
add
add
aad
divb
xor
sbb
add
and
xor
add
stc
mov
adc
add
cwtl
mov
add
sbb
jle
add
sahf
sarb
adc
mov
stc
mov
aam
loop
push
jmp
push
add
xchg
xchg
addb
das
cltd
mov
mov
jae
mov
pop
pop
add
fcoml
in
lods
dec
xor
xchg
bound
movl
mov
xor
aam
and
and
scas
xlat
and
mov
add
mov
mov
dec
xchg
sti
mov
repz
jne
jge
mov
out
add
add
and
lock
addb
pop
lret
movsb
mov
bound
ljmp
add
in
mov
out
xchg
adc
movsb
and
xchg
add
sbb
sub
cmc
pop
lds
test
ret
add
add
ljmp
cmp
mov
adc
sbb
stos
call
sbb
add
prefetch
or
mov
sahf
lcall
mov
sub
dec
sub
lds
outsl
fists
add
daa
sbb
imul
jae
inc
add
inc
add
add
jnp
cmc
arpl
fistpl
adc
jb
inc
add
add
jae
jb
pop
mov
add
movsl
int
jbe
inc
add
lcall
push
stc
dec
adc
out
int3
mov
clc
in
sub
xchg
jp
inc
add
push
mov
data16
daa
in
shll
movb
add
jp
sub
inc
add
xchg
mov
test
add
add
jbe
or
push
enter
in
or
adc
imul
cmp
mov
cmc
push
xchg
int3
mov
cmp
mov
add
add
icebp
shrb
jl
push
nop
loopne
add
xor
bound
pop
aaa
inc
add
cmp
xchg
mov
jmp
flds
out
aam
aas
mov
mov
push
mov
jo
cmc
adc
and
push
movl
push
cmp
test
push
fcomps
xor
cmpsl
mov
add
jbe
pushf
scas
in
movb
movb
add
stos
testb
jmp
add
dec
pop
push
or
add
and
sahf
adc
fsubrp
aaa
lea
pop
jmp
jb
cmpsl
jge
mov
xlat
data16
out
das
xchg
xchg
fistpll
cmp
dec
dec
addl
xor
jne
mov
mov
filds
or
xor
in
loopne
or
cmp
ret
xchg
addb
dec
in
adc
addb
add
cmpsl
jg
add
in
cmp
or
cli
dec
mov
or
add
sbb
test
dec
mov
xchg
daa
mov
testb
add
mov
out
mov
in
bound
or
jae
mov
ret
add
jns
jae
xor
xchg
cld
or
lea
add
pop
je
inc
add
add
cld
mov
sub
pop
inc
add
ret
cmp
add
cmp
add
jp
stc
or
push
pop
xchg
leave
rcr
push
cld
jg
xor
add
dec
sub
jne
imul
add
imul
pop
add
add
fwait
mov
add
add
xor
add
data16
fnsave
movsb
push
pusha
add
add
icebp
xchg
addl
add
loop
cwtl
leave
lea
lods
and
jmp
xchg
or
test
mov
stc
sbb
jbe
jae
add
add
popf
fsubs
mov
xor
imul
xchg
xchg
xchg
iret
movl
aad
fisttpll
mov
ret
add
add
fwait
mov
or
into
pop
add
int3
push
arpl
push
rolb
add
lds
add
xor
sub
or
mov
mov
mov
push
out
pop
cmp
pop
add
out
scas
jno
jg
mov
addb
cmp
lret
add
or
fldz
decb
add
pop
add
and
inc
add
mov
cmp
pop
pop
loop
pop
mov
popf
int
sti
push
xchg
jno
lds
movl
loop
add
test
pop
repz
add
inc
add
in
pop
mov
xor
sahf
fcompl
stos
cmpsl
addl
add
or
inc
add
loop
add
jg
add
cmp
sub
sub
mov
add
leave
xchg
cmc
movb
xchg
je
aaa
sar
dec
arpl
sub
mov
jnp
mov
mov
mov
fnstsw
fwait
addl
cmp
adc
add
mov
add
xchg
and
sub
mov
insb
mov
outsl
stos
fwait
icebp
mov
add
fisttpll
leave
rolb
ss
ret
add
daa
xor
jns
push
movb
pusha
add
add
sbb
scas
jae
add
add
ficoms
cs
fbld
int3
ret
mov
ljmp
add
add
add
push
in
push
out
filds
imul
pop
push
mov
jbe
push
xor
outsb
add
cmc
sub
or
mov
add
add
add
sbb
fwait
enter
jns
das
mov
int
mov
or
mov
enter
mov
sub
add
push
insl
jle
add
aad
push
cmpsb
testl
fwait
push
aaa
inc
add
addb
add
inc
add
data16
adc
and
ja
shld
addr16
mov
addb
add
sub
fwait
cwtl
push
js
stos
push
jb
add
add
pop
xor
push
mov
addb
push
int3
addb
add
add
pop
bound
jle
jecxz
sbb
add
xor
mov
add
dec
fwait
dec
cmp
push
std
xchg
jg
adc
add
addr16
insl
mov
jge
push
push
sbb
cmp
int3
add
mov
fs
movsb
pop
loopne
rclb
and
addr16
lret
addb
or
add
add
jnp
add
pop
int3
mov
pop
or
add
cld
xorps
mov
hlt
dec
cmp
fbld
decb
fbld
push
mov
rolb
push
sbb
push
xor
sub
and
and
and
sarb
pop
icebp
inc
add
mov
mov
aad
addl
insb
repnz
lcall
add
mov
dec
mov
add
dec
lret
add
loopne
mov
lcall
mov
pusha
add
sahf
inc
add
incb
add
js
les
inc
add
aaa
pop
addb
out
iret
loopne
dec
and
mov
test
gs
sbb
add
push
add
in
adc
stos
or
mov
and
mov
stc
arpl
mov
in
push
bound
clc
cmp
pushf
repz
inc
add
in
dec
cs
movsb
insl
push
cld
push
jb
shlb
daa
lahf
aam
dec
push
xorps
push
xor
sti
sub
shlb
aaa
inc
add
add
jb
mov
imull
mov
test
out
cmp
or
clc
ljmp
inc
add
das
daa
xor
test
inc
add
add
int3
dec
mov
pop
push
enter
test
mov
add
popf
bound
insl
flds
add
add
inc
add
addb
and
sbb
mov
pop
popa
add
fmul
jnp
mov
cmp
rolb
jnp
jnp
mov
add
popa
add
pop
xchg
aaa
dec
dec
enter
lcall
lds
add
cmp
jp
inc
add
lahf
dec
leave
or
pop
adc
add
addb
xor
mov
insl
adc
inc
add
js
fidivrl
mov
icebp
or
addl
mov
arpl
dec
out
insb
push
scas
push
das
sub
popf
ja
in
push
jbe
fsubrs
pop
popf
sub
add
mov
mov
push
jnp
rcll
add
loopne
and
cld
cli
ret
add
movsb
sbb
jge
ss
jl
add
add
movsb
addl
roll
addb
or
in
push
cmc
push
jle
stos
pop
out
inc
add
push
fdivs
inc
add
iret
jge
adc
ljmp
cmp
or
add
add
dec
into
js
filds
sbb
test
out
iret
mov
cwtl
mov
lock
mov
xchg
cmovl
cli
sbb
mov
addb
addr16
jmp
popa
add
jns
out
es
or
imul
sbb
add
pushf
insb
stc
imul
xor
add
ss
outsl
push
arpl
addb
cltd
inc
add
jle
lds
movsb
scas
push
addl
jge
push
test
dec
outsl
scas
pop
add
aaa
jecxz
inc
add
addb
daa
imul
add
sbb
data16
pop
popf
into
lds
je
hlt
shrl
cld
jb
mov
or
pop
inc
add
push
movsl
punpckldq
or
pop
push
and
mov
mov
push
and
dec
and
pushl
inc
add
cmc
sti
dec
xchg
jae
mov
sub
roll
add
xchg
mov
pop
and
lds
mov
lock
icebp
clc
aam
iret
mov
pop
push
mov
add
rolb
dec
xor
dec
inc
add
add
adc
inc
add
push
push
or
mov
test
jl
test
test
mov
add
.byte
.byte
add
