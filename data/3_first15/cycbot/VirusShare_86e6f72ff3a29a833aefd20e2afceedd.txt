sar
dec
scas
addb
lds
jo,pt
mov
add
rolb
call
add
add
add
jno
xor
arpl
inc
add
les
lahf
and
add
mov
mov
pop
xchg
daa
mov
add
sub
flds
add
xchg
xor
add
ret
jl
xchg
add
lock
iret
pop
icebp
mov
out
dec
mov
mov
add
push
mov
or
js
icebp
cld
in
adc
loopne
into
pop
addb
add
add
mov
add
xchg
gs
das
fisubrs
pop
or
rolb
imul
testb
jp
jbe
pop
dec
call
lahf
in
or
jb
pusha
add
add
xor
cld
or
fisttpl
add
inc
add
insl
aam
and
mov
cmp
add
aas
xchg
pop
xor
add
in
jae
xor
pop
int3
out
pop
aad
stc
xchg
mov
aaa
ja
sub
mov
test
cmp
mov
rcrl
cld
rolb
add
add
arpl
fstl
js
fcomps
lds
inc
pusha
add
add
lret
xor
inc
cmp
movsl
inc
pop
dec
repnz
add
add
fildll
mov
dec
jne
add
xor
add
dec
sub
psubb
push
add
data16
add
add
jnp
jle
pop
fcoml
addb
add
enter
add
call
add
add
shll
jp
test
call
sub
add
pop
dec
xchg
add
add
add
add
push
add
nopl
jl
add
out
fwait
lods
mov
add
add
xor
mov
adc
add
stos
lea
or
in
add
repnz
addb
ficoms
pop
ljmp
mov
sbb
adc
lods
xor
clc
fwait
add
jp
inc
add
leave
btr
add
add
jmp
pop
movsl
jp
addb
mov
dec
ffreep
add
or
mov
dec
movb
add
sub
insl
bound
mov
lods
jp
xor
ret
dec
lret
mov
sbb
jp
add
mov
xor
add
sbb
and
mov
add
inc
rolb
hlt
add
add
or
repnz
inc
add
sti
xchg
add
mov
sbb
mov
nop
add
mov
popa
dec
addr16
and
mov
add
mov
pushl
dec
sub
add
and
loope
add
call
inc
push
ja
add
and
dec
inc
add
add
or
mov
add
repnz
pop
jns
add
add
testb
inc
add
add
or
fdivs
add
add
fistps
add
push
add
mov
cli
xchg
add
fnsave
xchg
add
add
add
adc
cmc
xchg
pop
cmp
addb
add
lcall
movsb
add
jmp
jb
call
data16
fisttpll
pop
and
mov
dec
pushf
sbb
sbb
add
add
pop
or
xchg
mov
movsl
lsl
add
int3
or
fwait
inc
add
daa
gs
mov
jae
add
imul
add
sub
add
add
xchg
insl
cmp
aaa
push
pop
icebp
add
gs
aaa
test
sub
push
add
adc
addb
add
ret
inc
add
mov
daa
in
dec
clc
test
addb
shrl
fcmovnu
das
mov
fcomps
call
add
jb
lret
rolb
pop
xchg
fisubl
scas
xor
add
mov
add
or
push
add
addb
push
add
mov
mov
add
nop
add
ror
add
dec
nop
add
add
scas
daa
out
ds
jns
dec
aaa
sbb
lods
jmp
mov
lret
scas
lock
clc
push
add
data16
mov
addr16
add
add
add
dec
test
jae
add
shrl
outsl
inc
add
int
jecxz
test
xor
add
xor
pop
dec
adc
and
mov
subl
fbld
add
repnz
sub
add
fiaddl
call
call
add
dec
testb
add
lret
outsb
adc
add
xor
cwtl
xchg
add
fidivs
insl
mov
add
js
rolb
fcmovu
jp,pn
add
mov
sub
or
dec
movsl
clc
data16
add
or
jnp
fstpt
sbb
add
or
je
fidivrl
add
dec
mov
ret
sahf
xchg
add
cmp
mov
add
mov
adc
xor
rolb
jne
jne
fildl
aad
mov
add
loope
xlat
or
add
in
or
xor
mov
add
mov
sub
pop
jno
mov
add
cltd
fisttpll
leave
loopne
andl
icebp
pop
sahf
add
xor
and
lods
adc
dec
shll
insb
roll
call
and
push
dec
jg
add
mov
adc
push
add
ret
add
xor
add
cmp
clc
aas
out
push
add
ljmp
xor
mov
add
dec
mov
add
adc
pop
fsub
add
movb
loope
add
pop
and
add
mov
add
pop
fwait
sub
mov
pop
mov
hlt
add
gs
test
add
jp
push
addb
sbb
add
add
mov
bswap
pop
sti
loopne
sub
sbb
add
pop
incb
add
sub
add
add
cmc
fisttpl
add
lahf
mov
or
cltd
subl
add
out
jg
cmp
into
jns
add
push
add
in
int
bound
mov
stos
cmp
adc
or
movb
mov
push
add
push
loop
notl
add
icebp
mov
jo
fdivrs
arpl
shr
jge
add
push
add
add
std
popf
imul
add
pop
loopne
dec
pop
scas
lahf
jno
in
icebp
lcall
ljmp
addb
mov
subl
push
mov
mov
jns
or
cmp
jo
adc
addb
cmp
pop
mov
rolb
jge
sbb
jl
add
pop
add
and
and
xchg
add
xchg
imul
and
test
mov
dec
mov
xchg
ror
fsubl
add
cmp
add
popa
jp
add
out
xchg
xchg
add
push
imul
or
adc
add
out
jp
push
add
add
test
data16
xchg
add
add
add
add
mov
mov
pop
jg
les
cmpsl
mov
push
fmuls
hlt
add
add
jns
add
add
mov
test
add
daa
push
add
testb
xor
pop
je
cmp
dec
fnstenv
dec
notl
daa
ja
out
fwait
mov
cld
xchg
add
aam
aaa
adc
jge
push
add
add
add
jge
addr16
sbb
xor
leave
sahf
inc
mov
jnp
push
add
imul
bound
mov
std
stos
add
mov
add
add
add
mov
mov
testb
lock
push
or
fcmovne
scas
adc
add
add
sub
call
lret
add
testb
dec
sbb
adc
dec
scas
and
mov
mov
push
mov
je
imul
inc
xor
add
sbb
lods
xlat
movsb
add
vmptrst
cmpsb
add
inc
add
sahf
pop
jle
or
popf
jnp
lods
pop
add
mov
sbb
inc
add
faddp
add
add
pop
aam
outsl
addr16
xor
or
or
sahf
lods
cld
roll
cmp
pop
stc
xchg
bound
mov
mov
bound
mov
int
xchg
add
mov
add
into
pop
sahf
aam
xor
xor
scas
das
inc
or
in
xor
fdivs
add
add
add
loop
push
add
add
jecxz
jns
add
pop
aam
mov
pop
inc
movsb
add
add
lea
xchg
add
dec
andl
add
inc
adc
adc
sbb
xor
add
mov
add
das
out
ljmp
sbb
ret
movsl
sti
cmp
jmp
shll
test
xchg
jne
scas
bound
mov
push
add
fdivrs
mov
clc
xor
rolb
repz
push
add
add
int3
cmc
cli
xchg
add
enter
test
jns
jge
add
add
add
popa
add
add
add
add
cli
sarl
push
in
dec
iret
outsb
inc
add
dec
leave
cmp
add
stos
jnp
adc
imul
add
jg
add
jno
xor
xor
mov
icebp
jle
pusha
add
mov
add
out
add
add
add
and
mov
jne
sub
pop
pop
mov
add
add
cli
das
adc
inc
add
addb
fidivl
pop
and
add
adc
negl
imul
into
js
add
out
test
add
dec
lds
jno
lods
gs
add
mov
add
sub
dec
fwait
xor
lcall
add
add
movsb
add
add
add
add
add
inc
add
mov
aaa
pop
jne
aam
outsl
nop
add
rolb
mov
icebp
jl
mov
cmpl
pop
sbb
iret
add
add
lods
imul
sti
ljmp
shll
out
and
fmull
dec
xchg
xchg
out
inc
inc
add
inc
add
sub
add
mov
jmp
add
shll
add
add
add
cltd
and
pop
sbb
cmpsl
in
jb
mov
or
add
fwait
push
add
movsl
testb
add
add
add
mov
and
mov
repnz
xor
and
mov
mov
pop
stos
repnz
mov
adc
push
jbe
in
mov
scas
repz
add
jb
mov
repz
add
js
pop
ja
add
movq
or
xor
jae
rolb
lock
call
shll
clc
add
cs
lods
cmp
adc
mov
arpl
adc
dec
test
ret
or
add
add
add
bound
mov
dec
lds
add
add
cltd
ret
fwait
testb
cltd
cmp
push
inc
mov
mov
icebp
in
adc
fwait
into
out
aaa
xor
xchg
cmpsb
add
icebp
dec
sahf
cmp
jns
gs
add
xchg
js
mov
fadds
mov
add
aaa
into
loopne
dec
fstpl
shll
jecxz
mov
jnp
rolb
rcl
add
add
add
mov
or
movb
testb
add
add
fistps
pop
cwtl
sub
jecxz
xchg
add
ljmp
add
add
jne
xor
jo
sti
out
xor
add
mov
loop
fcmovnbe
jno
xchg
scas
mov
lods
bswap
xchg
jl
sub
add
mov
xchg
add
sti
add
sbb
mov
sub
ds
mov
xor
mov
dec
std
loopne
data16
pushf
frstor
dec
or
cmc
rolb
push
or
add
push
push
add
add
lods
mov
ret
mov
insl
ret
inc
inc
add
add
xchg
add
mov
mov
push
add
shrl
sbb
lods
fsub
add
add
insb
addb
cs
mov
pop
xchg
dec
xlat
insl
imul
aam
sbb
adc
sub
int
add
ja
xchg
addb
mov
icebp
ret
lahf
adc
pop
shll
addr16
sti
test
repnz
xchg
xor
sub
cs
xlat
leave
sub
mov
cmp
push
add
test
movsb
add
cmp
fsubrs
addb
add
es
insb
cmp
stos
and
rolb
mov
lret
call
and
cmp
add
mov
test
pop
inc
add
mov
mov
bound
mov
lock
add
add
mov
mov
sbbl
push
jg
shr
cltd
nop
add
add
add
add
add
cs
movb
testb
add
add
and
mov
push
add
cmp
clc
jo
gs
push
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
das
sahf
or
add
sahf
movsb
add
add
pop
add
ret
add
lahf
push
add
out
sti
cltd
push
inc
cld
push
mov
call
add
mov
in
jb
pop
mov
xchg
add
cmp
sahf
jne
loopne
sub
dec
pushf
inc
add
sbb
xchg
mov
cltd
arpl
add
or
mov
or
add
fiadds
sub
adc
fisubrs
mov
add
mov
add
sbb
inc
add
add
ret
out
cmp
mov
stc
and
mov
sbb
imul
inc
add
mov
or
in
cli
sbb
out
call
pop
std
xchg
add
mov
sub
xor
pop
cmpsb
add
mov
insl
fnstcw
inc
les
add
add
cmp
mov
mov
loopne
mov
fs
dec
gs
mov
int
scas
xlat
imul
ja
jne
gs
mov
add
inc
shll
xor
xor
mov
sub
add
mov
and
sbb
data16
adc
mov
add
mov
adc
push
fbstp
inc
arpl
popf
movsb
add
push
add
xlat
mov
inc
add
add
call
rolb
or
fadds
add
mov
add
stos
push
add
inc
add
add
int3
push
mov
xchg
add
movsb
add
add
add
add
test
out
and
push
mov
aaa
xor
pop
into
xchg
add
and
les
sub
test
int3
add
cmp
stc
adc
pushf
shll
xor
add
mov
inc
addl
cmc
xchg
lret
mov
movsl
jecxz
push
add
ret
add
std
cld
das
jl
add
fnstcw
and
mov
sub
dec
dec
xor
add
mov
rolb
add
jne
setno
cmp
push
or
jae
cltd
jl
dec
or
push
add
and
mov
jnp
mov
and
out
jns
pop
add
xchg
add
sub
clc
data16
lods
sbbl
add
add
add
cmp
test
gs
outsl
cltd
cmp
jg
add
xor
xlat
mov
sarl
leave
sub
xor
push
rolb
popf
and
mov
add
in
add
add
fldl2e
xchg
inc
add
addb
add
add
sub
dec
test
add
mov
xlat
add
xor
les
pop
insb
or
sub
cmp
sbb
jmp
mov
sub
add
lahf
mov
ja
add
push
add
pop
data16
jo
movsl
rolb
add
add
mov
add
dec
mov
mov
mov
cmp
xor
mov
jecxz
xor
add
dec
icebp
rcll
bound
mov
add
mov
add
hlt
add
fs
les
xor
ja
mov
cld
sbb
add
ljmp
inc
cs
add
add
les
fucomp
adc
add
ret
add
add
inc
add
add
add
mov
add
jle
cs
or
rolb
ss
add
jae
fdivs
add
add
std
mov
xchg
add
in
fdivs
leave
and
xchg
add
cltd
mov
add
pushf
pop
cmc
mov
mov
add
movsb
add
mov
and
add
push
add
jle
add
das
out
stos
pop
mov
fisubl
mov
add
mov
cmpsl
and
jmp
lret
mov
fidivs
xor
cmp
fwait
insb
add
mov
movsb
add
mov
add
inc
xchg
add
icebp
filds
cmp
mov
add
add
add
add
in
icebp
in
addr16
push
add
fcomp
or
add
add
lods
fidivs
xor
mov
add
add
add
mov
insl
mov
add
aad
add
gs
add
add
xchg
nop
add
into
aad
cmpsb
add
xchg
add
add
add
jbe
cmpsb
add
mov
add
outsl
push
add
out
add
or
add
add
add
add
outsl
inc
loopne
and
xchg
add
add
mov
inc
add
repnz
sbb
adc
mov
xor
loopne
ljmp
stos
addl
test
add
out
dec
jl
xchg
add
rolb
mov
addl
mov
add
test
outsb
test
xchg
mov
add
add
jno
add
add
bound
mov
jae
mov
add
push
add
xchg
sub
daa
sbb
in
jle
xor
add
xchg
leave
adc
js
rolb
sub
mov
pushf
out
cmp
add
or
add
mov
adc
stos
sub
add
add
fisubs
xor
pop
sbb
sub
mov
add
cmp
inc
movb
fucom
add
pop
sbb
add
hlt
add
lret
cmc
jne
test
pop
add
mov
pop
sti
jmp
mov
add
add
sbb
add
add
xor
fnsave
cmpsl
or
pop
leave
pop
xor
push
add
xor
add
mov
xchg
add
add
cmp
lods
or
fstps
fistpl
add
mov
add
je
gs
add
inc
mull
add
inc
add
add
cmp
add
cmpsl
add
mov
add
add
mov
add
outsb
cwtl
inc
out
jmp
dec
or
xchg
add
ss
or
aam
enter
sub
add
sbb
ljmp
mov
sbb
cs
ds
sbb
inc
or
out
jmp
push
add
scas
xchg
mov
push
add
adc
sbb
add
cmp
mov
sbb
repnz
fwait
bound
mov
mov
hlt
add
dec
mov
dec
scas
fadd
xchg
add
add
jmp
add
add
mov
sub
add
jecxz
pop
out
add
sbb
add
out
bound
mov
cmpsb
add
add
divl
in
add
mov
outsl
jle
inc
ja
sub
movb
bound
mov
mov
fsubrp
movsb
add
add
mov
data16
adc
mov
outsb
data16
add
push
mov
cmp
add
ja
adc
test
or
add
adc
jbe
int3
pushf
xchg
std
dec
jle
add
xchg
rolb
dec
sti
cli
mov
jae
mov
add
xchg
add
mov
fcmovnu
jge
stc
add
mov
push
add
mov
popa
cmp
les
mov
push
add
add
loopne
addr16
or
mov
adc
data16
cltd
movsb
add
cli
mov
add
xchg
dec
hlt
add
mov
cmp
ja
lods
cmp
xchg
adc
imul
add
out
add
xchg
add
sub
add
pop
out
dec
jnp
fadd
add
add
add
les
mov
jne
jp
add
lods
push
add
add
popf
or
pop
add
mov
lcall
dec
les
xchg
sbb
out
mov
in
add
inc
add
mov
push
add
add
add
mov
fwait
dec
gs
add
pop
mov
into
dec
mov
add
jae
add
aaa
xchg
jl
cli
pop
jge
insl
jecxz
adc
cmpsb
add
add
add
add
add
clc
add
dec
bound
mov
int
test
arpl
push
gs
xchg
cld
push
add
sbb
add
add
mov
sti
notl
adc
push
add
rolb
push
movb
add
repz
cmpsb
add
add
out
add
mov
popa
rolb
faddl
ret
add
pop
repnz
push
jecxz
add
fwait
push
pop
pop
push
add
mov
dec
or
mov
sub
mov
push
xor
cmpsb
add
insb
inc
add
mov
add
add
lcall
add
lret
in
sbb
add
mov
mov
lea
dec
lret
sbb
pushf
jbe
in
and
mov
dec
mov
addb
and
mov
add
add
in
cmpsb
add
ljmp
mov
nop
add
fwait
ja
mov
mov
addb
jnp
mov
xchg
clc
mov
pop
and
add
mov
jl
xor
lock
pop
adc
add
add
dec
mov
cmp
fstps
mov
sub
push
add
mov
add
add
mov
mov
jmp
or
add
or
jae
add
test
inc
add
popf
jle
xor
icebp
test
add
and
mov
int
add
add
cmp
add
loop
mov
add
add
jnp
daa
cli
and
mov
fdivrl
in
jg
sbb
dec
and
pop
adc
add
sbb
add
ud2
adc
add
jp
add
shld
xorl
sahf
clc
and
mov
sub
in
mov
pop
push
popa
sbb
xor
int3
addb
bound
mov
add
add
add
test
add
sub
icebp
sub
testl
push
stos
leave
pop
inc
add
addr16
push
in
adc
fisubl
add
add
add
lds
aaa
sbb
fwait
data16
sbb
add
cmp
test
mov
rolb
add
jae
adc
dec
sbb
lcall
xchg
int
push
add
dec
test
mov
in
adc
inc
add
aad
add
outsl
xor
mov
std
sahf
cltd
sub
pop
add
push
add
dec
frstor
mov
gs
add
pop
fildll
movb
add
adc
js
mov
mov
add
add
jns
add
add
adc
mov
data16
cmp
add
xchg
add
inc
mov
add
les
xor
mov
imul
xchg
add
mov
xchg
add
inc
add
add
rolb
add
mov
scas
xchg
and
add
mov
leave
sbb
add
push
bound
mov
loope
mov
das
dec
inc
rolb
inc
add
add
movsl
fwait
and
stos
fists
insl
push
inc
add
add
cmp
and
add
add
adc
jb
dec
add
add
dec
dec
repnz
inc
inc
add
dec
pop
fidivs
push
jecxz
rolb
xlat
and
push
fbld
add
dec
adc
stc
loop
sbb
xchg
add
fistl
movb
and
mov
lock
cmpsb
add
mov
xchg
cld
and
movb
adc
lret
add
mov
xchg
test
and
add
xor
add
dec
xchg
add
add
add
jp
add
sub
addr16
add
add
jns
inc
add
sbb
sub
add
aaa
add
push
mov
add
mov
pop
inc
jno
add
push
mov
int3
testb
stos
jecxz
pushf
jno
mov
sbb
add
dec
daa
aas
pop
sbb
add
dec
or
add
cs
lahf
push
scas
adc
xor
pop
sbb
ja
add
clc
pop
aad
mov
and
scas
iret
inc
aaa
cmp
xor
insb
cmp
out
inc
push
add
add
daa
add
add
mov
cmc
pop
fmuls
popl
or
loopne
and
popf
cmpsb
add
add
subl
add
fmuls
aam
sbb
fcompl
inc
add
push
ret
add
cmp
or
add
mov
mov
cwtl
xchg
add
add
add
dec
fdiv
add
movsl
add
add
mov
ret
add
add
add
add
in
add
cmp
adc
inc
mov
add
push
clc
cltd
int3
dec
mov
dec
lret
repnz
icebp
iret
push
add
xor
addb
add
add
inc
cli
loopne
mov
mov
sub
add
mov
nop
add
cmp
xor
mov
sbb
bound
mov
scas
rolb
add
jb
leave
cmpl
cmp
cmp
mov
dec
lods
sti
mov
fsub
cltd
or
add
lds
clc
mov
add
add
mov
mov
into
inc
add
addb
cmpsb
add
pop
std
add
aam
daa
adc
rolb
ret
dec
jg
ds
scas
xor
mov
add
fxch
aad
aaa
jno
or
test
sbb
pop
iret
mov
pop
xor
pop
stos
mov
jmp
add
pushf
jg
and
add
pop
add
movb
mov
add
add
sbbl
jge
sbb
mov
add
cmp
mov
add
mov
or
dec
jne
add
cli
aam
popa
fcmovu
dec
dec
insl
cmp
mov
xchg
inc
cmpsb
add
adc
lea
add
pop
iret
ret
add
adc
pop
in
fsubl
mov
and
mov
push
add
rolb
adc
or
std
mov
cmp
push
popa
call
shll
mov
stos
push
repnz
pop
xor
sbb
cmp
sub
test
xor
test
add
mov
dec
dec
dec
bound
mov
inc
incb
add
push
add
mov
addl
and
mov
add
fmull
jl
add
add
fisttpll
stos
cmc
or
mov
rolb
in
inc
rolb
push
add
aaa
nop
add
dec
mov
mov
pop
pop
xchg
add
adc
jnp
add
mov
xor
add
rolb
lahf
imul
sub
mov
add
xor
add
xchg
add
lret
testb
xchg
loope
call
add
and
mov
or
add
hlt
add
fstps
insb
add
xchg
add
lret
je
imul
out
mov
adc
and
js
sti
sbb
icebp
push
add
popa
pop
push
pushl
mov
imul
loop
in
inc
in
jnp
inc
aaa
push
cmpsl
aaa
mov
mov
icebp
lret
flds
add
repnz
call
add
sbb
gs
add
sbb
add
add
mov
inc
scas
mov
jl
adc
inc
add
add
xchg
movsb
add
mov
add
add
add
mov
jmp
or
add
int3
pop
mov
std
dec
icebp
in
add
pushf
sbb
in
add
mov
add
inc
js
add
enter
or
mov
inc
fmuls
aaa
into
mov
cmp
in
movsl
jne
mov
add
xchg
ret
mov
sub
sbb
xchg
addb
pop
arpl
add
ja
add
testb
add
add
loop
outsb
out
xchg
push
popf
out
imul
add
add
xlat
lret
add
mov
arpl
popa
pop
add
add
stos
aad
push
add
in
mov
add
in
mov
xchg
mov
add
and
lock
call
ja
add
aas
aaa
or
add
dec
ljmp
pop
sub
iret
or
aaa
in
mov
sarl
pop
dec
loopne
call
add
imul
dec
bound
mov
add
add
or
outsl
addb
xchg
mov
add
movsl
movsl
mov
mov
rolb
mov
push
add
add
add
add
mov
test
or
push
add
mov
or
add
sti
cmp
add
jb
je
jl
mov
pop
jmp
shll
cwtl
mov
lret
mov
add
add
pop
add
cltd
insb
mov
test
xchg
or
adc
fnsave
fistpll
add
and
mov
add
mov
insl
stos
mov
cs
call
in
inc
je
addr16
add
movsb
add
sbb
popa
lods
clc
out
add
add
sarl
mov
add
cld
icebp
sub
pop
lock
add
mov
int3
incl
ja
mov
bound
mov
cmc
gs
mov
cs
xchg
add
je
mov
test
add
add
add
add
adc
add
xchg
sti
pop
icebp
mov
sbb
pop
addr16
add
call
mov
in
iret
sahf
aas
movsl
movb
xor
inc
add
add
mov
push
add
pop
mov
daa
lock
cmp
or
add
add
add
inc
add
cli
adc
jae
add
mov
add
mov
jae
add
push
cmp
addb
add
jno
in
leave
into
negl
push
add
mov
inc
sbb
and
mov
rolb
movb
add
movsl
mov
add
add
inc
jo
sub
push
les
xlat
call
inc
add
sub
jns
jns
adc
add
orl
imul
out
nop
add
in
sub
add
add
jp
add
inc
xchg
add
pop
and
add
add
add
sub
mov
cmc
cmc
je
sahf
mov
or
rolb
ret
mov
das
gs
testb
stos
fwait
lcall
sub
push
cmpsb
add
call
jg
add
add
xchg
dec
lods
call
add
add
add
sub
jo
add
aad
stos
aaa
push
push
push
leave
xor
add
add
xlat
das
lods
push
add
data16
sub
mov
bound
mov
dec
inc
inc
mov
dec
push
and
mov
add
add
and
add
add
cmp
add
xchg
pop
lcall
add
rolb
pusha
add
xchg
add
push
cli
jmp
sti
mov
add
scas
inc
cmp
push
mul
add
lds
add
lods
sub
add
add
push
add
add
add
fst
add
add
jmp
sub
dec
rolb
mov
add
mov
inc
pop
negl
add
lock
add
stos
cli
mov
add
and
addb
fwait
pop
and
add
xchg
rolb
add
add
scas
mov
dec
pop
outsb
call
rcll
add
jp
lods
lcall
jno
sub
add
fdivl
repz
sbb
add
dec
push
add
mov
test
jg
jg
ljmp
mov
add
stos
jp
addr16
daa
add
add
into
lds
xor
cli
dec
sbb
inc
sti
ds
inc
lea
push
add
int
add
rolb
jmp
add
loope
ret
out
cmp
mov
cmp
add
add
jmp
bound
mov
fidivs
dec
pop
lahf
je
cld
add
mov
incb
push
add
sahf
das
out
lds
mov
push
add
add
lret
add
add
add
lret
mov
add
aad
mov
push
mov
mov
jb
icebp
mov
push
add
repz
mov
out
inc
add
add
add
add
add
add
addb
aad
push
add
add
jae
pop
aas
lcall
jmp
add
mov
jnp
mov
pop
mov
adc
push
add
add
clc
jnp
add
add
popl
sbb
jnp
addb
mov
cmc
pop
lahf
sbb
dec
add
testb
add
add
mov
add
jo
leave
jle
bound
mov
sub
add
mov
mov
sar
fwait
push
ret
xor
mov
add
add
into
roll
push
or
lock
jmp
add
and
jns
bound
mov
add
mov
push
add
add
scas
push
add
dec
mov
sbb
js
shll
add
jg
xor
stc
or
movsb
add
mov
loop
hlt
add
pop
addb
jp
add
add
int
add
xchg
mov
add
add
mov
add
aas
sbb
mov
arpl
and
mov
add
add
in
je
push
add
add
movb
add
popa
mov
lret
inc
dec
scas
cwtl
or
and
mov
or
inc
add
cwtl
scas
inc
add
sub
std
jmp
and
mov
aam
xor
cpuid
add
insl
out
add
pop
push
repz
add
add
insl
int
add
out
out
repz
fisttpl
scas
add
xor
mull
add
rolb
dec
daa
cltd
fbstp
and
cwtl
inc
testb
cmp
sbb
add
les
inc
add
add
ds
mov
xor
repz
jge
dec
loopne
les
jns
fadd
outsl
daa
mov
xor
mov
mov
pop
push
mov
ljmp
stc
mov
loopne
fcoms
arpl
xor
or
add
push
add
cmp
add
adc
push
data16
movb
pop
sbb
mov
mov
add
add
cmp
lret
cmpsb
add
jns
mov
mov
inc
jecxz
mov
cmp
fstpt
add
mov
movsl
add
inc
jae
popa
scas
cmp
pop
or
add
push
add
add
xchg
add
sbb
pop
into
adc
popf
pop
int3
repnz
movsl
cmp
add
cli
xchg
add
ffree
arpl
add
into
or
test
inc
add
insb
sbb
lret
inc
push
add
cmc
xor
or
fidivl
mov
add
add
add
xchg
add
lds
nop
add
scas
arpl
loopne
dec
mov
add
add
loop
push
mov
int
test
add
test
gs
int
pop
cmpsl
rcrl
outsb
add
sti
jp
rcll
inc
add
add
sub
inc
add
dec
pop
inc
add
add
add
test
mov
add
xor
add
add
add
gs
mov
dec
lods
icebp
movsb
add
ja
dec
ret
loopne
fstps
lea
add
add
push
add
mov
add
and
mov
xchg
test
lods
jbe
pop
add
and
inc
add
nop
add
pushf
leave
into
mov
mov
xor
or
or
sbb
cmpsb
add
pop
mov
push
add
and
and
mov
jae
add
rolb
in
add
pop
arpl
inc
add
jbe
jne
sub
and
jb
xor
xchg
addb
pop
xchg
add
mov
add
in
je
jne
inc
add
cmp
lock
add
cmp
add
cwtl
stc
lret
sub
pop
lret
inc
mov
data16
jae
jecxz
inc
roll
add
adc
ret
mov
or
dec
insl
cld
stos
mov
add
add
testl
xor
jl
mov
dec
scas
jl
add
ror
out
shll
xor
mov
adcl
inc
xchg
xor
xchg
add
loop
arpl
xor
loopne
popa
jecxz
lcall
rolb
fabs
mov
add
add
and
lds
faddp
add
jbe
testb
xor
push
adc
mov
call
add
movb
push
add
mov
test
fld
je
xchg
pop
mov
sub
jle
add
loope
je
dec
add
aam
popa
and
mov
adc
jne
lret
add
jne
fs
dec
adc
add
add
pushf
dec
jge
add
add
xlat
add
cmp
add
mov
pop
les
loope
add
pop
sti
adc
inc
jb
inc
movl
add
add
std
jno
xchg
add
and
mov
mov
add
arpl
pop
les
mov
sahf
inc
xor
sbb
pop
hlt
add
add
jmp
sub
add
xchg
xchg
insb
aam
and
jb
lahf
mov
cli
addb
add
dec
cwtl
pushf
adc
add
pop
arpl
add
xchg
add
add
call
dec
xchg
pop
insl
inc
add
mull
xor
cmpxchg
add
lret
stos
mov
lret
sbb
add
sub
nop
add
pop
rcrl
mov
add
add
push
add
popa
int3
repz
push
insl
jns
loopne
ret
repz
pusha
add
pop
fwait
mov
add
add
cmpsl
daa
cmp
dec
out
clc
xlat
movsb
add
mov
sbb
xor
xchg
xor
out
cmp
add
xchg
mov
mov
cld
inc
mov
push
inc
add
add
adc
fnsave
dec
cmp
inc
cmp
mov
add
pusha
add
jbe
dec
scas
dec
push
add
pop
sti
jnp
cmp
loope
rcll
inc
add
add
roll
push
add
add
jecxz
cmp
add
mov
jge
jo
pushf
push
mov
adc
mov
sub
xor
roll
mov
fwait
out
sub
mov
add
inc
int3
nop
add
add
sti
ja
data16
cmc
stc
pop
pop
call
popa
in
dec
inc
in
fists
jno
add
je
jp
mov
sbb
add
xor
std
scas
push
mov
fildl
in
loope
cmpsl
mov
sbb
mov
test
lock
add
pop
nop
add
lds
cmp
add
das
add
add
in
lods
mov
push
sbb
insb
jl
jae
repnz
rcl
testb
sub
imul
sub
pop
cmp
add
sarl
rolb
or
test
mov
add
sub
out
sbb
add
adc
push
add
call
add
jnp
mov
add
or
mov
cmp
adc
xor
into
mov
sub
add
mov
add
jae
cmp
clc
inc
adc
jp
add
bound
mov
call
xor
pop
push
out
fdivs
jg
bound
mov
or
xlat
push
push
testl
xchg
sub
das
das
xchg
add
dec
and
pop
dec
jns
pushf
test
adc
add
jle
add
add
ja
xchg
add
mov
jnp
cmpsb
add
push
add
pop
into
pusha
add
add
push
popa
inc
xor
stc
jno
sub
add
dec
mov
xor
push
call
or
push
add
push
add
sbb
add
push
add
mov
push
je
mov
jl
shll
mov
fiaddl
push
push
sbb
push
add
jns
in
cli
jl
mov
clc
pop
andl
lock
adc
mov
cwtl
mov
cmp
add
popa
icebp
ret
cli
inc
fsubl
mov
aad
add
sbb
mov
pop
sub
mov
add
add
mov
fwait
mov
cmp
add
rolb
xor
mov
mov
bound
mov
inc
add
lcall
xor
jmp
add
mov
add
mov
lea
lret
xchg
xchg
add
rolb
add
bound
mov
sarl
jle
cltd
leave
or
adc
sub
cld
ficoms
aam
addb
adc
and
mov
sub
cld
add
jecxz
add
add
and
movb
add
add
ljmp
sti
pop
jb
xbegin
push
add
addb
inc
xlat
aam
incb
sbb
xchg
add
adc
ds
cmpsb
add
cmp
add
mov
inc
inc
cltd
jne
ret
mov
fdivl
add
add
in
sub
lock
movsb
add
add
add
mov
add
add
sarl
lods
bswap
fsts
add
add
shrl
add
je
add
xchg
add
add
out
dec
cli
xor
clc
xchg
imul
jle
cmp
neg
lret
xor
mov
xchg
loope
add
jg
push
push
cli
inc
loopne
rolb
pop
mov
test
jmp
testl
std
sub
mov
add
jno
add
add
fdiv
sbb
push
add
loopne
sbb
ds
adc
add
jge
arpl
add
xor
leave
pop
jo
ret
pop
addb
xor
inc
scas
dec
lea
loopne
adc
addb
in
mov
push
add
add
test
add
add
add
ret
jno
add
loope
inc
pop
sub
mov
add
add
jl
das
loop
loope
add
mov
in
repz
add
adc
xor
cmc
dec
mov
add
add
shll
cs
inc
add
cmp
out
xchg
rolb
dec
sub
or
add
add
mov
sbb
add
add
add
testb
lods
pop
insl
jge
add
add
add
inc
add
add
adc
add
lcall
mov
add
sub
nop
add
gs
mov
roll
movsb
add
lret
xlat
outsb
lcall
jle
add
bound
mov
cltd
mov
fiaddl
xor
xchg
rolb
scas
sub
jle
jmp
sub
add
push
add
push
add
add
xchg
push
sub
cmp
enter
movsb
add
add
out
scas
push
add
push
add
xor
push
sub
sub
mov
sbb
sbb
sub
inc
add
pushf
pop
gs
test
popf
mov
fldenv
add
add
sub
add
and
pop
outsb
xchg
add
push
add
add
add
repz
mov
sbb
insb
sub
add
mov
add
add
inc
and
mov
je
movsb
add
push
adc
inc
add
les
inc
cmp
xor
aaa
push
add
mov
ljmp
popa
xchg
add
mov
mov
into
xchg
add
aaa
cwtl
loope
in
mov
add
sarl
add
xor
fdivrs
push
add
dec
mov
test
mov
repnz
mov
fdiv
add
mov
add
or
je
xor
fisubrs
cmp
xor
addb
mov
in
rolb
lcall
mov
jno
inc
or
push
add
imul
out
cli
cwtl
lods
jnp
or
add
adc
ret
nop
add
push
add
cmp
fwait
roll
adc
cmp
lods
sub
mov
out
inc
add
sbb
add
add
loop
mov
inc
add
mov
testb
add
popf
mov
add
mov
add
mov
lods
mov
cwtl
mull
add
daa
into
sbb
nop
add
add
and
iret
dec
mov
lds
add
add
scas
cmp
hlt
add
add
adc
sahf
adc
push
add
dec
adc
pop
lret
mov
add
inc
scas
and
mov
pusha
add
jbe
sbb
inc
add
mov
add
add
add
loop
loopw
add
mov
das
notl
mov
sbb
lcall
add
outsl
dec
loopne
fldl
add
add
add
pop
scas
inc
add
add
inc
add
add
iret
rolb
loope
and
mov
movb
scas
sbb
sbb
inc
push
xor
add
stc
imul
clc
mov
mov
add
add
fwait
in
mov
jp
repnz
mov
shl
add
fstpt
add
dec
or
test
iret
adc
mov
lret
add
add
add
or
add
fwait
mov
cmp
in
push
add
fsubp
add
mov
add
insl
call
pop
xchg
add
insb
dec
and
jp
lods
jl
imul
fwait
imul
mov
xor
push
in
cltd
jbe
and
mov
popa
clc
mov
jns
push
ds
add
in
add
add
xchg
add
push
sub
xor
lret
cli
out
lcall
push
add
addr16
xchg
add
cltd
push
ror
inc
mul
lahf
jg
sbb
add
mov
imul
shll
add
rolb
mov
rolb
pop
fstps
add
adc
sti
mov
jnp
add
mov
vmwrite
push
and
inc
mov
sbb
jmp
and
mov
mov
cmpsb
add
pop
ljmp
mov
add
aaa
and
adc
stc
mov
add
add
fldenv
add
add
jecxz
cmpsl
add
mov
aad
add
add
iret
push
sub
add
cli
cld
mov
pusha
add
pop
bound
mov
add
add
add
add
add
adc
or
cli
push
stc
sbb
jmp
jmp
add
push
add
sbb
add
add
insl
popa
test
add
add
add
mov
add
flds
stos
push
xlat
in
pop
mov
add
mov
insl
cmp
je
jg
sub
mov
add
add
add
add
sub
mov
shll
pop
add
sub
add
jge
stc
sbb
outsl
mov
js
mov
add
cmp
add
mov
cmp
add
add
andl
popf
vmread
add
push
add
add
jge
dec
insb
cwtl
mov
xor
mov
add
and
test
add
lret
jae
xchg
mov
add
add
mov
cmpsl
cmp
ja
add
mov
jns
sbb
lcall
pop
shll
aas
rorl
add
dec
add
pop
xor
mov
lods
icebp
dec
out
add
mov
lock
sbbl
push
push
add
sahf
mov
sub
mov
add
insl
jbe
add
jg
xor
jno
or
sbb
dec
jecxz
nop
add
jne
enter
add
mov
shrl
mov
xchg
or
outsb
test
jns
sbb
push
add
jp
adc
jle,pn
nop
add
out
test
add
aam
add
in
sbb
insb
loope
add
jae
movb
add
mov
scas
xor
sbb
rolb
sti
cli
cmp
xchg
xchg
add
adcl
add
jb
and
mov
dec
xor
ret
jb
aam
xor
pop
and
xorl
mov
xchg
clc
pop
sbbl
jp
jns
outsl
mov
insb
inc
add
sub
add
push
add
sbb
pop
sbb
add
mov
fwait
das
push
inc
add
andl
push
adc
js
add
mov
and
cmp
add
lds
push
addb
mov
in
int3
cld
movsl
fsubs
movsl
dec
mov
ret
rolb
push
fsubl
cmp
mov
scas
mov
in
sti
lret
cmp
loope
xchg
cltd
and
fcmove
mov
add
mov
fsubs
divl
in
push
ret
outsb
adc
sbb
add
mov
mov
cmpsb
add
xchg
loopne
mov
add
add
mov
xchg
daa
lahf
xchg
add
mov
or
lock
adc
fisttpll
push
insb
inc
add
and
mov
add
dec
xchg
add
movsl
and
add
out
dec
fmull
add
dec
ss
add
bound
mov
xchg
pop
inc
push
add
nop
add
or
loope
das
xor
add
xor
add
dec
adc
ljmp
cltd
mov
add
add
fdivl
jbe
or
sub
add
arpl
or
add
add
sti
pop
push
add
add
add
insl
sub
fsubrl
sbb
cld
loope
xchg
jecxz
xchg
faddp
loop
pop
lahf
jp
add
add
jne
out
xlat
cmp
add
add
xor
adc
ja
cwtl
mov
sbb
adc
mov
sub
pop
int3
sarl
dec
fcomp
jg
adc
dec
add
add
test
mov
add
rolb
xor
xchg
add
testl
push
add
add
mov
add
add
addb
add
mov
adc
jg
dec
mov
daa
jle
inc
add
inc
add
mov
mov
add
js
in
and
rcr
popl
add
push
push
data16
mov
data16
xchg
mov
xchg
addb
movsl
sbb
out
mov
ret
inc
add
aas
sub
xchg
xor
and
add
add
int
cmp
xchg
add
add
xor
or
pop
loop
scas
fdivl
iret
outsl
out
mov
imull
add
add
movb
mov
insl
stos
inc
aaa
addb
sub
lods
stos
testl
dec
xchg
add
xor
push
add
mov
or
add
jb
lods
cmpsb
add
add
pop
jae,pt
pop
push
mov
add
lcall
insl
pusha
add
fnsave
sub
out
add
push
add
add
mov
xor
mov
add
add
mov
or
add
in
adc
bound
mov
dec
dec
icebp
cmp
add
pop
xchg
add
jge
test
xchg
add
mov
mov
adc
push
adc
out
pop
movsb
add
lahf
in
add
add
cmp
loop
pop
lock
push
mov
mov
add
aad
xchg
jecxz
test
cli
mov
aad
icebp
sbb
add
jno
out
xchg
add
js
into
mov
mov
push
sub
jl
add
add
popa
jge
sub
out
xchg
jle
sbb
xor
add
dec
lcall
scas
je
mov
sub
testl
adc
dec
fisubrs
adc
cmpsl
and
pop
insb
pop
pushf
imul
xchg
xchg
pop
out
popf
or
in
mov
pop
add
in
add
cltd
xor
negl
add
addb
add
mov
dec
jg
fimull
dec
and
xor
add
jns
push
add
xchg
addb
shrl
add
add
scas
test
testb
int3
inc
movb
or
mov
or
mov
rolb
mov
or
ljmp
daa
fidivs
ret
add
xchg
ss
dec
repz
add
mov
out
mov
dec
scas
inc
add
xchg
add
add
loop
jae
lcall
add
or
mov
shl
int
add
sbb
add
mov
push
add
ds
stos
cmc
push
jp
push
add
jns
ret
loopne
je
rolb
mov
repz
add
cs
inc
add
mov
mov
add
add
idivl
push
xor
add
add
and
lcall
add
jno
xchg
cmp
movsl
in
fstpl
adc
add
addb
xor
movsl
xchg
pusha
add
mov
push
add
add
scas
add
mov
push
add
sbb
push
fsubl
dec
xchg
add
fisttpll
rolb
decl
pop
jns
mov
mov
add
mov
pop
testb
add
inc
in
xor
pop
loopne
pop
aad
add
inc
adc
cmpsb
add
add
movsb
add
es
inc
add
mov
sub
in
sub
bound
mov
push
sbb
mov
stos
jecxz
addb
gs
movsl
mov
das
jne
add
enter
add
mov
test
jae
add
add
add
cmc
fimuls
test
aaa
in
cltd
ja
add
adc
jmp
and
add
sub
ljmp
mov
insl
or
xor
hlt
add
xchg
add
outsb
mov
cltd
inc
jbe
dec
fwait
pop
ret
pop
cmpsl
dec
cltd
mov
mov
js
hlt
add
add
rolb
fsubl
out
sbb
inc
add
add
scas
lret
scas
mov
xlat
cwtl
jge
and
mov
add
dec
mov
mov
add
mov
pop
jp
dec
lcall
subl
sbb
add
inc
movsb
add
das
push
lock
add
fsubs
cmovb
mov
add
fmuls
cwtl
std
cltd
movsl
xchg
add
shr
cld
incl
stos
and
push
add
xchg
add
js
pop
xchg
push
add
add
jae
add
fldenv
add
sub
mov
ljmp
out
sub
mov
repnz
or
inc
mov
mov
add
mov
rolb
push
cmp
add
mov
xchg
mov
xchg
rolb
jle
out
mov
stos
in
out
jo
xor
int3
jbe
movb
arpl
fdivr
and
fldenv
mov
repz
stc
movb
add
xchg
add
mov
mov
xchg
add
test
mov
push
add
fstpl
shl
add
xor
inc
add
mov
and
xchg
lods
dec
jmp
mov
jge
push
add
mov
sbb
fs
mov
loope
add
or
jb
data16
xor
inc
fisubrl
cmpsb
add
sub
stos
stos
repnz
add
leave
dec
jo
or
add
fst
add
add
mov
stc
xlat
loop
cmpsl
pusha
add
mov
or
push
lods
xchg
add
mov
push
xchg
mov
jecxz
add
mov
in
test
mov
push
add
mov
cmp
add
add
int
add
imul
out
fstpt
or
jns
add
fisubl
add
add
add
add
rolb
jae
mov
xor
flds
mov
pop
filds
or
add
pop
test
dec
xchg
add
add
mov
shll
add
in
cwtl
jnp
xchg
dec
push
imul
jecxz
adc
pop
lahf
xchg
fwait
je
add
mov
push
stc
loop
sbb
mov
add
add
mov
add
add
adc
mov
repz
data16
push
add
pop
push
add
mov
enter
mov
outsl
or
clc
jo,pt
sub
mov
add
or
push
mov
test
cwtl
jae
dec
xlat
inc
add
mov
lret
jle
jl
add
mov
setnp
dec
test
cld
add
addr16
iret
cmp
add
lcall
insb
xor
xor
add
fildl
jns
push
add
add
les
mov
or
dec
dec
xchg
dec
fwait
loopne
lcall
add
add
rol
pop
inc
add
rcl
xchg
in
nop
add
add
mov
movsb
add
add
add
add
scas
addb
out
movb
daa
mov
add
test
push
add
push
add
movsb
add
add
shrl
das
cmc
jg
add
push
adc
popa
mov
mov
adc
cmp
addb
cmp
sub
insb
or
add
add
jp
add
pop
mov
add
add
add
add
mov
out
loop
int3
cmp
leave
popa
movsl
int3
xchg
add
adc
sbb
add
jecxz
hlt
add
push
add
movsl
xchg
mov
pop
pop
push
add
adc
ret
add
jnp
xor
adc
inc
add
lock
xchg
add
add
ficompl
scas
sbb
int3
test
add
cld
in
jnp
xchg
rolb
cmp
shrl
sbb
xchg
add
xor
mov
add
add
testb
inc
addb
movsb
add
clc
js
add
or
enter
rcr
xor
fistpll
shll
ss
test
add
test
add
sub
mov
addb
add
xchg
jg
jl
jmp
stc
or
movsb
add
jmp
test
ljmp
lock
mov
add
xchg
mov
stos
nop
add
push
repnz
repnz
test
add
add
adc
sub
movsl
cmp
add
add
sbb
loopne
gs
dec
jo
lds
in
inc
jecxz
add
inc
or
add
dec
mov
in
add
iret
mov
add
mov
xor
add
cli
push
sub
pop
leave
cld
cmpsb
add
add
inc
add
mov
jle
outsl
push
add
cmp
roll
ret
aam
cwtl
dec
sbb
jns
add
pushl
mov
mov
test
add
and
mov
jae
out
add
add
mov
adc
rolb
add
pushf
das
mov
sub
add
push
or
lea
test
add
pop
bound
mov
jb
xchg
add
add
add
sbb
lahf
stc
xchg
xor
add
addb
fbstp
add
add
add
mov
fstpl
dec
xlat
inc
xchg
inc
cmpsl
sarl
roll
loopne
cli
mov
add
sbb
mov
scas
test
sub
hlt
add
add
add
fstpt
push
add
subl
add
mov
das
sbb
add
push
add
loop
push
add
sahf
mov
orl
arpl
lods
mov
add
lret
sub
jp
adc
fisubrl
popa
ja
and
test
imul
scas
cmp
add
add
fsubrp
data16
add
xor
stos
mov
mov
sub
add
add
add
testb
aad
or
jbe
ds
lahf
mov
add
or
pop
cmp
add
pop
or
mov
push
add
cld
stc
jg
and
data16
lock
int
repz
dec
mov
or
add
popf
jne
sub
dec
in
xor
add
sar
add
std
lret
mov
mov
fnstsw
add
sbb
in
sub
xchg
add
icebp
int
ret
or
add
jl
shl
incb
add
add
xor
cwtl
mov
emms
call
add
add
rolb
add
add
inc
pop
nop
add
aas
cmp
cld
into
push
mov
sub
mov
enter
add
cmc
repnz
mov
sub
add
or
add
sbb
mov
das
call
test
imul
or
dec
jo
jge
cmpsl
lock
lret
xor
aaa
pop
punpcklbw
mov
jne
cli
std
icebp
sbb
in
loope
fsts
cli
sbb
add
add
add
mov
push
add
add
pop
sbb
add
aad
and
enter
in
add
fwait
rolb
or
rolb
pop
nop
add
mov
add
xor
hlt
add
mov
rolb
pop
sahf
or
add
movsb
add
mov
dec
push
add
icebp
ss
add
add
pop
add
add
bound
mov
add
data16
add
push
sub
std
dec
test
les
outsl
in
mov
aam
xchg
gs
sti
fisubl
mov
sub
bound
mov
mov
jne
cmp
imul
loope
dec
in
pop
js
cmc
and
js
add
jecxz
jle
clc
push
sub
mov
push
add
in
ja
add
add
daa
ret
xchg
adc
gs
movsl
loope
sub
add
sbb
push
mov
mov
fnsetpm(287
add
add
lock
mov
out
enter
cmp
add
inc
add
add
mov
jne
pop
out
dec
mov
lcall
leave
stos
and
mov
lods
cmp
inc
add
mov
cmp
pop
shll
and
add
add
push
add
mov
xchg
add
add
mov
push
add
movsb
add
pushf
mov
push
popa
push
mov
pop
sbb
add
into
or
jmp
loopne
cmp
add
xchg
add
hlt
add
divl
test
dec
xchg
decb
add
data16
add
js
movb
jno
std
std
aad
jb
sbb
and
mov
add
in
inc
add
fcmovnb
loope
and
mov
add
and
mov
gs
lea
and
add
mov
inc
add
adc
cmp
mov
push
add
cmp
add
and
mov
cwtl
cmp
push
pop
mov
add
or
jg
add
add
adc
push
jmp
add
scas
bound
mov
add
jg
xchg
add
int
flds
add
add
repz
fwait
testb
add
mov
movb
add
add
pop
and
fcoml
stos
pop
cmpsb
add
rolb
movsl
repnz
mov
add
fsubrp
mov
mov
es
add
popf
lcall
dec
test
xchg
test
mov
pop
pusha
add
lea
pusha
add
add
mov
add
push
add
xor
and
mov
add
out
in
mov
xchg
clc
sbb
add
sti
in
pop
mov
add
dec
push
add
sub
movb
adc
xchg
mov
fsubrs
jg
inc
jno
add
xor
add
add
add
add
fwait
rolb
popa
adc
scas
ja
out
or
addb
cmp
bound
mov
xchg
cmp
add
out
push
add
dec
push
add
mov
loop
xor
or
and
mov
push
into
push
add
popl
or
add
add
mov
out
add
lahf
sbb
pop
mov
sbb
testb
or
lods
bound
mov
adc
insl
pop
adc
ja
xor
xchg
add
xchg
cmp
add
loop
adc
xor
ja
inc
cltd
jge
arpl
add
or
add
pop
jae
lods
jno
push
add
repnz
mov
push
add
fists
dec
cmp
pop
push
jle
add
sub
cmc
leave
insl
out
std
mov
add
add
icebp
mov
pop
faddp
jmp
adc
push
add
inc
push
push
xchg
iret
and
and
inc
push
or
lahf
sbb
stos
addb
rcl
add
jecxz
xchg
adc
popa
sbb
mov
dec
inc
jp
arpl
pushf
pop
fstps
adc
push
insb
scas
push
add
mov
mov
test
or
addb
sub
add
or
sbb
add
jp
enter
add
pushf
rolb
cmp
test
add
adcl
sub
or
mov
add
add
mov
add
outsb
orl
mov
ret
lock
mov
add
cwtl
cltd
cmpsl
les
xor
and
mov
mov
inc
aad
add
fidivrl
mov
and
jmp
add
mov
iret
das
lret
add
push
lds
lods
mov
imul
dec
mov
cltd
add
inc
dec
xchg
add
ret
mov
data16
add
add
je
dec
addb
addr16
pop
add
mov
mov
add
jnp
xor
out
dec
push
add
add
movb
outsl
and
push
add
mov
add
add
cmp
ret
xchg
add
jg
pop
push
shl
and
mov
add
ds
add
stc
add
repnz
push
add
add
sbb
add
pop
mov
mov
lock
sub
mov
or
add
sub
sub
addb
add
jecxz
add
add
and
mov
inc
add
sub
and
mov
mov
push
add
push
dec
call
and
aas
or
aad
xchg
cli
or
adc
add
add
clc
sub
add
cmp
add
pop
in
mov
dec
lret
imul
add
std
imul
xchg
add
pop
sbb
or
rolb
pushf
js
pop
lret
push
add
jmp
adc
fwait
loope
push
or
inc
xchg
mov
add
mov
mov
add
add
das
stos
xchg
jmp
add
sub
ja
or
inc
add
push
add
je
repz
in
jecxz
dec
mov
inc
add
add
sbb
sahf
jge
or
insb
out
daa
add
fcoms
xchg
pop
int3
dec
cld
jns
pop
std
movsl
mov
xchg
sub
xchg
jb
stc
or
add
sbb
add
xor
bound
mov
add
add
test
aaa
test
sub
add
mov
pop
fbstp
xor
mov
idivl
add
inc
lds
add
xor
loope
inc
mov
add
add
lret
add
push
inc
aad
das
xchg
sbb
push
xor
cs
dec
adc
cmp
test
jg
loopne
subl
add
add
cmpsl
lods
mov
xchg
jle
fistps
andl
add
mov
test
stos
add
xchg
add
rolb
push
add
sete
push
add
add
sahf
xchg
add
je
sub
les
pop
xchg
mov
arpl
add
fsubrs
pop
loope
add
add
out
arpl
mov
add
cmp
test
movb
sbb
add
les
dec
xchg
fbstp
psrlw
sbb
sbb
int3
xchg
sub
jo
std
movb
icebp
in
hlt
add
jge
add
rolb
ret
xchg
mov
mov
and
mov
daa
xchg
hlt
add
xlat
push
add
mov
hlt
add
addb
enter
repnz
addb
add
jns
pop
cmp
out
mov
add
aam
push
loopne
clc
inc
add
push
adc
jns
dec
dec
and
mov
add
add
mov
cmp
rorl
xor
add
inc
outsl
push
pop
shll
sbb
repz
scas
aaa
inc
add
aad
cs
inc
lcall
outsl
and
add
fadd
mov
mov
add
add
call
test
add
add
add
add
lret
or
push
add
xchg
inc
aam
add
push
add
and
or
cmp
add
lcall
inc
nop
add
mov
add
jge
pop
outsb
sub
mov
cmpsl
and
mov
add
inc
add
xchg
add
add
add
testl
xchg
add
mov
add
add
xchg
add
cmp
jae
cmp
popf
xchg
ss
add
bound
mov
lods
sahf
push
add
notl
mov
add
fldenv
rolb
jmp
add
or
jbe
mov
fnstcw
add
ret
dec
push
adc
jmp
add
out
bound
mov
arpl
enter
sub
pop
sbb
add
add
addr16
imul
mov
repnz
mov
scas
stc
and
add
adc
add
add
mov
and
mov
mov
push
fimuls
add
add
mov
test
add
jns
mov
push
add
add
mov
adc
push
ljmp
cmpsl
sbb
adc
mov
sbb
dec
jecxz
add
add
xlat
cwtl
cmp
popa
push
push
add
pushf
sbb
add
movb
xchg
add
daa
enter
add
add
inc
add
inc
add
pop
sub
add
icebp
outsb
aaa
leave
sbb
je
cld
imul
mov
add
into
jae
out
cli
sub
ljmp
add
add
dec
push
add
add
mov
and
push
add
mov
sbb
mov
add
out
js
fbstp
mov
add
inc
lds
outsb
pop
mov
add
ret
sub
xor
add
dec
loop
ja
or
add
fisubl
mov
add
add
repnz
add
add
pop
dec
mov
xor
test
jnp
cmpsl
or
add
mov
inc
gs
out
add
xor
out
pop
adc
mov
push
add
cs
add
stc
cmpsb
add
push
xor
add
xchg
ret
push
add
sbb
add
add
mov
rolb
add
ret
pop
rolb
movsb
add
icebp
xor
movq
add
add
jb
push
add
insl
pop
dec
ljmp
push
add
aad
pop
sub
fidivrl
sbb
add
sub
lods
in
cmp
mov
push
add
or
stc
mov
push
xor
test
fistpll
dec
in
add
mov
insl
pop
test
out
pusha
add
add
loopne
cmc
icebp
mov
cmpsl
cmpsb
add
push
add
fcmove
xorl
dec
or
add
cmpsb
add
pop
cmpsl
mov
add
add
jg
aas
stos
mov
add
push
add
sub
add
jp
scas
ljmp
lret
out
sbb
push
pop
in
fwait
nop
add
mov
add
jg
mov
loop
adc
inc
ja
and
mov
roll
add
mov
lret
pusha
add
cld
mov
add
or
rolb
push
popf
js
mov
mov
inc
add
mov
add
jbe
dec
cwtl
cmp
xchg
mov
add
das
fistpl
xor
lcall
push
add
add
add
add
add
add
xor
add
add
adc
dec
testb
jmp
mov
ret
jp
add
mov
sbb
dec
repnz
mov
add
cmp
movsb
add
xor
jge
add
stos
test
lods
into
sti
inc
mov
mov
cmp
cmp
out
push
add
jg
push
add
add
jo
jo
in
add
push
add
rolb
data16
rolb
gs
xchg
xchg
aas
adc
mov
add
add
ret
in
inc
add
cmp
jmp
loope
out
add
les
mov
add
lcall
sbb
mov
lock
sbb
add
sub
sub
test
mov
cld
push
add
jmp
test
add
test
loope
sti
push
add
test
and
cmp
add
add
or
lds
xchg
xchg
sbb
jp
mov
movsb
add
out
cli
lods
popl
xorl
hlt
add
ds
add
lea
add
mov
in
cmp
add
and
pop
xlat
arpl
add
js
lcall
add
in
mov
push
add
push
fadd
pop
mov
cmp
popf
pop
testb
add
add
and
mov
loop
pop
pusha
add
add
pop
jle
loop
xchg
add
xlat
pop
out
insb
jns
add
xchg
out
fists
pop
mov
dec
std
imull
add
or
movb
dec
sbb
add
push
je
sahf
xchg
movsl
cmp
popf
stc
mov
test
fimull
adc
push
push
rol
bound
mov
add
or
add
shll
or
pop
add
popf
jg
add
popf
cli
jbe
test
and
mov
cmc
lcall
mov
sub
jle
add
in
inc
add
enter
data16
inc
push
inc
add
rcr
outsl
sub
call
ja
out
dec
cmp
add
inc
add
add
mov
test
data16
add
subl
push
add
out
mov
cmp
xchg
add
test
aam
xchg
add
jl
xchg
add
shr
adc
add
adc
les
add
push
and
mov
in
negl
popa
testb
aam
jge
dec
adc
cmp
cltd
out
addb
mov
lock
xchg
add
push
ud1
inc
out
rolb
xchg
add
add
add
pushf
pop
lea
jns
xchg
add
dec
push
or
push
dec
dec
sbb
add
add
add
mov
mov
add
sti
and
xchg
xor
inc
add
icebp
sbb
add
pop
inc
add
add
iret
aad
movups
inc
add
add
cltd
les
xchg
add
push
push
insb
adcl
xchg
std
xor
mov
push
add
add
out
mov
push
add
add
inc
add
stc
cmpsl
stc
mov
hlt
add
lcall
add
mov
rolb
add
add
addr16
addb
add
or
xor
sub
add
cs
scas
mov
cmpsl
add
mov
add
add
push
xor
pop
mov
aam
xchg
xor
push
adc
arpl
jmp
adc
fucomip
adc
dec
cmp
lahf
jmp
mov
mov
icebp
loope
add
clc
adc
add
loope
popf
call
add
mov
xchg
add
add
call
mov
add
jae
popa
es
cmpsl
mov
xlat
lock
das
fdivs
pop
sbb
dec
push
sub
hlt
add
add
mov
push
mov
add
in
fadd
adc
lret
jmp
movb
cmpsb
add
sahf
les
out
in
rolb
lods
mov
out
pushf
push
add
add
add
test
add
add
dec
dec
ficoms
cmp
push
add
sbb
and
push
dec
fldt
add
jl
ret
add
add
jmp
sbb
and
mov
sbb
ret
add
add
loope
cmp
data16
add
pop
push
lods
add
push
and
mov
add
add
mov
data16
add
xor
xchg
movl
stc
or
add
cmc
add
add
out
addr16
ret
lods
sbb
lahf
test
mov
add
add
leave
cmp
add
lods
lock
mov
lea
pop
aaa
dec
jae
add
out
aad
cmp
add
aaa
out
pop
sbb
push
add
data16
xor
cld
iret
mov
arpl
stos
sbb
push
add
stos
cmp
dec
xchg
add
ja
bound
mov
cmp
adc
add
xchg
add
add
pusha
add
lahf
pop
fsubs
mov
icebp
lea
adc
mov
ja
add
mov
jne
xchg
xor
add
add
fisttpll
int
lahf
aam
add
mov
jecxz
adc
xchg
pop
int3
jecxz
sbb
incl
add
icebp
popf
movsb
add
pop
sub
iret
das
mov
add
ja
movl
lret
sub
cmc
mov
mov
mov
pop
lods
dec
sub
jle
push
add
jge
fcmovnbe
push
push
or
stos
ljmp
addr16
add
mov
or
add
jg
sub
jb
adc
xchg
or
add
mov
ficoms
je
inc
and
add
push
add
or
aaa
test
sub
push
lods
mov
loop
adc
lcall
bound
mov
and
mov
call
jb
push
add
mov
mov
adc
scas
cmpl
popl
bound
mov
xchg
add
in
sub
add
add
dec
mov
push
rolb
push
adc
inc
add
xchg
cmpsb
add
imul
add
repz
sbb
fnstsw
testl
lcall
add
add
out
mov
pop
mov
mov
mov
adc
sub
add
mov
push
ret
add
add
lret
push
fnstenv
add
inc
add
add
mov
test
addr16
je
cld
ds
sub
add
sub
add
add
lahf
gs
inc
xor
lods
xchg
sbb
add
add
mov
inc
add
stos
out
sub
call
add
mov
xchg
stos
pop
dec
adc
addb
ljmp
add
arpl
fwait
mov
fucomp
mov
add
inc
or
int3
inc
add
add
mov
inc
jle
push
add
pop
repnz
xor
addb
lods
rolb
movsl
and
sub
mov
cmp
les
out
enter
xchg
and
mov
xchg
mov
jp
add
adc
lcall
add
xchg
or
add
cmp
add
mov
mov
dec
popf
cli
iret
into
pop
jecxz
add
and
dec
inc
enter
loope
sbb
aas
int3
push
stos
and
rolb
cmpsl
xor
jle
mov
mov
add
add
add
jae
ret
loopne
pop
addb
mov
pop
cmc
sub
fwait
push
outsb
and
mov
mov
xor
pop
cwtl
mov
cwtl
push
add
test
add
add
add
inc
mov
mov
add
add
add
mov
push
nop
add
sti
mov
pop
mov
rolb
test
addb
andl
xchg
add
add
jmp
push
es
testb
or
mov
mov
lods
pop
mov
pop
loop
dec
add
mov
fldl
add
add
aaa
mov
add
add
sti
push
add
sub
movsl
aas
mov
les
imul
fisubrl
push
sub
mov
push
lock
icebp
call
sub
add
icebp
push
or
push
add
push
mov
add
and
mov
call
add
add
in
aas
outsl
sub
add
push
add
popa
xor
xchg
fdivs
xchg
add
int
cmpsl
push
add
jp
add
das
xor
fst
add
int
cmp
mov
test
outsl
or
stc
test
add
dec
dec
adc
add
lock
add
mov
add
add
push
lods
push
cwtl
mov
jo
adc
cmp
add
ljmp
popa
mov
test
ljmp
iret
dec
fstl
sbb
add
enter
add
dec
cmp
pop
mov
je
icebp
and
mov
nop
add
insl
xor
insb
xchg
mov
jle
addb
add
aas
loop
fbld
add
cmc
xor
stc
jb
push
cpuid
add
into
movsl
ret
sub
or
add
jb
add
add
lcall
pop
test
add
add
sbb
push
sti
mov
aam
cmpsb
add
ja
inc
and
ljmp
xchg
mov
lods
push
and
inc
add
jge
add
dec
mov
xor
add
adc
push
ljmp
or
rcr
cwtl
mov
xor
push
add
lcall
cltd
push
add
add
xchg
add
add
add
push
push
add
adc
push
add
loop
in
adc
mov
jp
das
push
aad
pop
or
cld
shl
jmp
nop
add
fucomi
cmp
cmp
scas
cwtl
scas
add
mov
test
pop
sub
and
mov
xchg
and
cmpsl
and
test
add
fxtract
add
mov
and
lret
cltd
pop
call
mov
add
xor
nop
add
insl
xchg
add
cli
mov
add
movb
add
add
cmp
pop
hlt
add
cwtl
inc
add
add
dec
lods
dec
mov
dec
cli
cld
cltd
stc
inc
add
jns
xor
das
rolb
leave
mov
pop
sub
inc
add
pop
and
mov
popa
mov
mov
cwtl
ja
dec
xchg
mov
loop
mov
cmpsb
add
mov
add
push
add
addb
dec
add
ss
adc
cmp
incb
cmp
ljmp
xor
xor
add
dec
pop
and
mov
stos
mov
add
sbb
pop
daa
lea
cli
inc
add
add
hlt
add
or
mov
add
cmp
add
mov
add
add
push
add
xchg
jmp
stc
data16
xchg
mov
gs
bound
mov
pop
enter
stos
aaa
xor
lds
add
int3
lahf
icebp
loop
mov
jp
sbb
ficomps
jecxz
add
outsl
adc
aad
mov
add
sahf
stc
rolb
call
add
add
xlat
testb
pop
lods
push
add
mov
test
adc
pop
inc
add
lods
out
mov
add
add
jno
xchg
add
mov
xchg
sbb
aaa
sbb
add
add
xor
in
mov
bound
mov
movb
dec
add
add
add
add
pop
mov
rcll
clc
scas
in
add
dec
ret
mov
dec
jge
lods
ret
add
sbb
xchg
dec
jp
mov
into
scas
rolb
add
dec
sbb
loop
add
pop
xchg
add
add
add
push
add
mov
jo
addb
add
lahf
sti
hlt
add
das
jge
sub
out
sbb
push
out
add
add
rcrl
fwait
mov
add
adc
popf
jae
or
push
cmp
mov
push
insb
in
ret
sbb
rolb
mov
mov
add
hlt
add
push
nop
add
xor
mov
cmp
lock
ror
dec
xrelease
add
mov
xor
insb
sub
cmp
add
add
sbb
mov
inc
jmp
add
insl
addr16
xor
mov
add
sbb
add
add
push
aad
add
cli
out
jae
bound
mov
inc
mov
add
jnp
jmp
pop
mov
ljmp
add
hlt
add
add
add
mov
mov
sti
mov
dec
dec
xlat
add
fst
add
jg
mov
shll
in
xchg
jp
inc
push
add
arpl
aaa
popf
jb
iret
sbb
mov
mov
cld
ret
mov
add
lcall
lcall
sub
movsl
jp
add
mov
sbb
add
mov
aam
iret
mov
add
outsl
push
stc
movsb
add
jle
test
lcall
push
lcall
jl
add
adc
movsl
cmpsl
ds
add
mov
fwait
sarl
pusha
add
enter
rolb
popa
adc
add
xor
rolb
cmp
roll
add
jb
rcl
add
je
dec
and
aaa
cwtl
push
add
add
fisttpll
dec
pop
mov
cmp
add
movsl
testb
sub
sub
fcmovbe
mov
test
or
cs
push
cwtl
mov
push
out
sbb
aas
out
out
push
add
out
cmp
xchg
stc
and
mov
mov
lahf
xor
or
flds
mov
clc
cmp
dec
in
fbld
add
mov
xor
add
sub
xchg
add
pop
jle
push
add
aas
adc
sub
in
rolb
adc
add
jae
lods
fisttps
aaa
popa
js
test
js
add
dec
jb
mov
and
mov
add
add
mov
icebp
mov
outsl
xlat
repnz
repz
mov
add
add
jge
stos
loopne
inc
add
cmp
testb
jecxz
adc
mov
pop
and
sub
push
add
xor
pop
add
arpl
add
add
add
in
test
add
add
add
popl
in
mov
sahf
dec
sbb
add
add
bound
mov
pop
stos
mov
pushf
mov
mov
add
adc
jbe
std
xchg
cwtl
dec
out
add
cmp
inc
xor
mov
add
pop
pusha
add
ret
dec
arpl
add
lahf
sub
pop
in
sbb
mov
add
inc
add
push
dec
pusha
add
push
add
pop
icebp
pop
pop
and
movsb
add
mov
les
in
int3
dec
dec
popa
rolb
clc
and
pushf
movb
jmp
out
call
mov
movsb
add
add
scas
cltd
push
add
xchg
jle
fistps
xor
mov
add
jg
add
add
rolb
pop
xor
add
test
add
pop
pop
in
jp
pop
add
enter
push
jecxz
mov
jae
add
mov
cmp
jne
imul
mov
add
dec
aad
add
data16
add
loope
mov
mov
xlat
push
xchg
repnz
mov
mov
fs
mov
and
mov
mov
mov
into
aad
add
lret
ficomps
ficompl
add
cmp
dec
pop
daa
cli
inc
cld
int
xchg
add
or
jge
stc
sbb
mov
addb
stos
or
push
add
add
sahf
cs
add
test
cwtl
pop
fisubl
loopne
add
sti
pop
pushf
inc
loopne
push
add
mov
add
add
add
cmp
shl
add
adc
add
add
fildll
mov
jmp
into
in
jl,pn
push
scas
mov
rolb
jg
fwait
sti
adc
les
xor
iret
cmp
xor
add
das
xchg
jnp
stos
icebp
adc
jo
sub
mov
out
inc
sti
rcrl
add
mov
add
mov
addb
add
add
mov
pop
push
add
or
jnp
add
lahf
pop
insl
outsb
push
sub
enter
mov
les
jo
xor
aas
push
sar
inc
add
fbstp
push
sbb
push
add
add
mov
sbb
into
inc
add
icebp
dec
out
repnz
mov
and
mov
cwtl
jmp
lock
adc
dec
mov
sub
icebp
xchg
ficomps
clc
nop
add
mov
cmpl
mov
or
insl
jno
cwtl
mov
outsl
mov
test
clc
dec
stc
ret
xor
add
fimuls
xor
pop
add
cld
push
cld
cmp
jo
out
sahf
popf
add
mull
or
jne
push
add
fwait
out
repnz
cli
sbb
push
jne
arpl
jae
add
adc
jno
jae
dec
dec
add
mov
in
add
add
std
loop
insb
dec
mov
add
add
add
inc
xchg
icebp
rcrl
popf
pop
xlat
ret
add
outsb
push
add
out
pop
adc
pop
loope
sub
add
dec
addb
popf
inc
add
jbe
test
xchg
sbb
lcall
jo
mov
cltd
cmpsl
push
pusha
add
fmull
ljmp
jne
mov
add
mov
xor
iret
push
enter
cltd
repz
add
mov
aaa
fiaddl
push
add
add
mov
fdivr
add
arpl
cmp
push
cwtl
rolb
pusha
add
scas
loop
lea
xchg
sub
add
cmp
add
dec
lods
ja
push
inc
fldln2
and
lea
pop
dec
xchg
add
repnz
std
mov
addb
add
aad
scas
ja
nop
add
pop
gs
add
mov
hlt
add
xor
add
testb
popf
pop
das
bound
mov
add
mov
in
inc
add
add
add
pop
addb
or
lahf
mov
out
and
pop
movb
repnz
add
dec
out
int
add
fisubl
add
mov
mov
mov
cltd
lret
push
add
incl
lret
xchg
les
push
scas
push
add
mov
add
add
add
add
movsl
mov
jnp
xor
mov
add
je
std
scas
sbb
add
andl
pop
mov
mov
jno
adc
mov
adc
and
sub
or
add
add
jo
lea
add
ret
jne
mov
add
add
mov
clc
repnz
jae
add
daa
pushf
mov
clc
repnz
jae
add
pop
add
push
add
mov
clc
repnz
jae
jmp
adc
lock
cmpsb
add
dec
fwait
cld
nop
jmp
or
pop
mov
ffree
add
xchg
add
icebp
mov
push
inc
add
add
clc
repnz
jae
push
pop
in
mov
push
mov
xchg
ret
add
add
add
add
cwtl
pop
clc
repnz
jae
add
into
add
pop
enter
add
add
repnz
jae
les
add
rolb
inc
loopne
adc
fwait
cld
nop
jmp
and
add
incb
lods
aam
add
incb
push
add
cmp
nop
jae
add
xlat
hlt
add
mov
fwait
shl
push
mov
xchg
ret
add
add
psubw
add
mov
inc
add
adcl
hlt
add
pushf
in
add
add
xor
repnz
jae
add
pop
fmull
jae
stc
in
add
enter
clc
push
mov
xchg
ret
add
jb
cmp
popa
add
repnz
jae
in
pop
add
adc
add
jg
fwait
cld
nop
jmp
add
or
add
add
add
repnz
jae
add
cmp
mov
xchg
ret
and
fs
in
push
clc
repnz
jae
add
add
cmpsl
movsb
add
mov
xchg
ret
push
jmp
fldl
mov
repnz
jae
vmwrite
add
push
mov
xchg
ret
add
push
jo
push
mov
nop
jae
add
add
push
push
mov
xchg
ret
jo
jecxz
outsl
add
mov
add
add
push
push
mov
xchg
ret
add
jns
push
into
les
iret
lea
clc
repnz
jae
add
pop
xchg
pushf
mov
fwait
cld
nop
jmp
or
cmp
or
xor
add
clc
repnz
jae
add
imul
jae
fldl
add
add
nop
jae
add
add
add
cmp
inc
lock
mov
xchg
ret
add
jge
clc
repnz
jae
add
add
jns
cmp
pop
push
mov
xchg
ret
mov
or
daa
xlat
pop
jle
sub
add
lds
add
into
add
add
dec
outsl
add
cmp
nop
jae
loope
push
add
mov
out
fwait
cld
nop
jmp
add
add
call
aaa
jns
out
mov
cmp
mov
add
clc
repnz
jae
out
add
add
jae
jecxz
jecxz
incb
push
add
add
fwait
cld
nop
jmp
add
in
str
repnz
jae
dec
add
loope
jne
xor
clc
repnz
jae
add
outsl
sarb
add
add
lock
inc
add
jo
add
mov
nop
jae
cmp
add
sub
add
repnz
jae
add
decb
fwait
cld
nop
jmp
or
add
add
and
stos
dec
clc
repnz
jae
scas
add
into
or
in
dec
testl
fwait
cld
nop
jmp
pop
and
jecxz
add
jne
push
mov
xchg
ret
add
add
call
repnz
jae
or
add
cmp
loope
xchg
add
clc
repnz
jae
dec
mov
add
clc
repnz
jae
add
pop
adc
sahf
add
fwait
cld
nop
jmp
ltr
pop
add
testb
es
fwait
cld
nop
jmp
add
into
pop
push
mov
xchg
ret
fisttpll
add
pop
add
mov
jge
sub
inc
add
jg
jae
frstor
loop
clc
repnz
jae
push
add
or
pop
stos
mov
clc
repnz
jae
add
clc
cld
clc
repnz
jae
sarb
add
add
add
add
repnz
jae
pop
dec
add
or
add
ss
clc
repnz
jae
pop
pop
fsts
repnz
jae
or
pop
or
stc
cmp
mov
fwait
cld
nop
jmp
add
mov
and
cwtl
push
push
mov
xchg
ret
xor
mov
mov
clc
repnz
jae
and
and
mov
clc
repnz
jae
or
push
dec
lods
fwait
cld
nop
jmp
add
add
xorl
nop
jae
cmp
or
cwtl
push
clc
repnz
jae
adc
incb
add
add
jae
add
jne
add
add
jle
inc
and
cld
nop
jmp
lds
les
add
mov
clc
repnz
jae
aaa
mov
jmp
pop
jmp
clc
repnz
jae
jne
add
enter
dec
add
add
lds
addl
mov
push
clc
repnz
jae
add
dec
or
push
jns
inc
and
clc
repnz
jae
mov
and
es
mov
clc
repnz
jae
add
mov
xchg
ret
add
or
cmp
add
cld
nop
jmp
add
add
push
mov
push
out
stos
lods
ljmp
lods
mov
cmp
clc
repnz
jae
jo
stc
pop
cmpsb
add
pop
clc
repnz
jae
in
add
mov
mov
xchg
ret
add
rorb
in
mov
clc
repnz
jae
cmp
mov
fwait
cld
nop
jmp
or
add
add
pop
addb
jmp
cmp
add
add
add
add
jns
add
or
add
add
gs
nop
jmp
and
add
cmp
incb
das
mov
push
mov
xchg
ret
rclb
add
mov
push
mov
xchg
ret
rolb
or
dec
xor
push
mov
xchg
ret
shlb
jns
mov
add
clc
repnz
jae
add
add
xlat
pop
daa
mov
nop
jmp
jecxz
jne
add
mov
clc
repnz
jae
in
add
sub
arpl
inc
add
stc
paddd
movzwl
clc
repnz
jae
cmp
mov
daa
push
xor
clc
repnz
jae
add
add
add
add
dec
push
clc
repnz
jae
or
add
push
mov
xchg
ret
hlt
and
jo
out
xor
xor
xor
mov
cld
nop
jmp
cmp
add
addb
cmpw
fwait
cld
nop
jmp
push
add
jmp
std
push
clc
repnz
jae
stc
in
add
and
lcall
inc
add
add
lds
add
add
push
mov
xchg
ret
and
cmp
add
pop
clc
repnz
jae
add
jne
scas
add
or
pushl
push
mov
xchg
ret
add
movl
add
add
and
add
faddl
and
leave
mov
clc
repnz
jae
and
xlat
add
add
and
mov
add
push
mov
xchg
ret
add
es
add
and
mov
outsb
mov
clc
repnz
jae
add
dec
shr
clc
repnz
jae
outsl
andl
les
clc
repnz
jae
add
add
or
add
add
jne
clc
repnz
jae
sbb
add
mov
clc
repnz
jae
les
fldl
add
and
push
mov
xchg
ret
add
mov
jmp
das
dec
fwait
cld
nop
jmp
fs
add
out
jne
add
mov
push
mov
xchg
ret
add
add
add
mov
xchg
ret
jmp
sldt
fsub
arpl
clc
repnz
jae
fstl
add
add
loope
mov
fwait
cld
nop
jmp
incb
hlt
jns
add
repnz
add
add
repnz
jae
add
or
add
nop
jae
cmp
add
adc
in
add
clc
repnz
jae
fstl
out
add
arpl
add
movsl
clc
repnz
jae
mov
incb
add
incb
add
mov
xchg
ret
loope
enter
add
xchg
add
fwait
cld
nop
jmp
add
sldt
mov
adc
movsb
add
mov
clc
repnz
jae
add
jne
jecxz
pop
jne
clc
repnz
jae
add
jne
push
push
mov
xchg
ret
add
cmp
cld
or
add
repnz
jae
add
clc
repnz
jae
fadd
or
hlt
adc
add
push
mov
xchg
ret
fs
fldl
cltd
ret
fwait
cld
nop
jmp
mov
add
add
pop
push
fwait
cld
nop
jmp
add
mov
pop
add
jge
inc
or
repnz
jae
add
jmp
add
lret
pop
push
mov
xchg
ret
add
add
add
pop
jmp
add
add
add
pop
add
add
faddl
jne
push
mov
xchg
ret
add
hlt
pop
add
leave
mov
clc
repnz
jae
or
cmp
clc
repnz
jae
add
jecxz
add
stc
jae
jne
clc
repnz
jae
or
add
nop
jae
add
jecxz
aaa
add
cmpw
fwait
cld
nop
jmp
jns
push
and
mov
clc
repnz
jae
incb
add
or
add
mov
xchg
ret
cmp
add
xchg
add
ja
add
add
jne
fwait
cld
nop
jmp
and
push
add
cmp
fwait
cld
nop
jmp
fldl
and
cltd
call
clc
repnz
jae
add
jns
testb
push
clc
repnz
jae
add
pop
add
add
jae
hlt
add
cmp
add
jae
add
jns
pop
pop
and
popa
adc
add
push
mov
xchg
ret
add
jo
aaa
pushf
stos
fwait
cld
nop
jmp
daa
or
add
in
into
add
ret
mov
fiaddl
xchg
ret
pop
add
es
cmp
add
push
mov
xchg
ret
aaa
jne
jne
mov
add
mov
add
fmull
mov
mov
add
daa
fiadds
add
add
add
inc
add
jmp
clc
repnz
jae
add
add
add
jae
mov
push
mov
xchg
ret
les
add
into
add
ret
clc
repnz
jae
jns
add
xor
sub
clc
repnz
jae
into
add
add
aaa
insl
mov
jmp
add
or
add
sldt
dec
and
pop
pop
fwait
cld
nop
jmp
loope
sbb
cmp
je
clc
repnz
jae
es
cld
popa
clc
repnz
jae
cmp
add
add
add
cld
nop
jmp
pop
dec
add
add
into
mov
mov
xchg
ret
xor
cmp
inc
daa
stc
jns
outsl
add
into
add
add
test
add
add
fwait
cld
nop
jmp
mov
incb
pop
add
fiaddl
xchg
ret
adc
add
add
add
mov
clc
repnz
jae
add
add
pop
add
lcall
fwait
cld
nop
jmp
add
push
or
lea
push
mov
xchg
ret
add
jne
add
push
mov
xchg
ret
hlt
xor
mov
xlat
jnp
loop
push
mov
xchg
ret
and
in
pushl
clc
repnz
jae
add
add
mov
add
add
mov
xchg
ret
add
add
lds
test
repnz
jae
jo
add
add
add
clc
repnz
jae
fstpl
incb
add
add
pop
data16
test
add
clc
repnz
jae
or
pop
adc
mov
stos
jecxz
add
jne
push
add
xor
pop
push
fwait
cld
nop
jmp
jns
add
cmp
repnz
jae
and
add
add
add
repnz
jae
pop
movl
xchg
sbb
mov
xchg
ret
adc
add
rolb
adc
add
aaa
mov
mov
add
add
push
and
inc
adc
repnz
jae
add
ret
jne
mov
clc
repnz
jae
addl
add
fimull
nop
jae
or
xlat
decb
pop
xor
clc
repnz
jae
add
xor
rolb
mov
rolb
stc
movzwl
clc
repnz
jae
mov
fdivl
mov
clc
repnz
jae
loope
add
add
test
push
push
mov
xchg
ret
add
lds
add
dec
pop
fwait
cld
nop
jmp
cmp
sbb
sbb
enter
mov
clc
repnz
jae
push
fdivr
and
add
sbb
scas
add
push
jns
in
pop
loope
or
orl
add
repnz
jae
mov
jne
add
adc
jb
mov
js
add
clc
repnz
jae
les
stc
sbb
and
cmpl
fwait
cld
nop
jmp
add
lds
pop
loope
ret
add
mov
mov
xchg
ret
add
add
add
add
push
mov
jmp
add
aaa
fstpl
add
hlt
into
xor
fwait
cld
nop
jmp
and
and
in
or
popf
mov
clc
repnz
jae
add
and
stc
add
cli
mov
clc
repnz
jae
add
add
fs
dec
fwait
cld
nop
jmp
add
add
pop
jne
jne
push
add
call
clc
repnz
jae
or
pop
scas
and
mov
clc
repnz
jae
add
add
add
add
add
fwait
cld
nop
jmp
mov
jne
adc
stos
add
push
mov
xchg
ret
add
aaa
add
rolb
add
fwait
cld
nop
jmp
add
add
and
push
adc
mov
clc
repnz
jae
out
add
jmp
push
mov
fidivrs
fwait
cld
nop
jmp
add
mov
clc
repnz
jae
rol
mov
push
add
add
div
clc
repnz
jae
jne
outsl
es
or
push
clc
repnz
jae
add
daa
lds
add
add
test
hlt
clc
repnz
jae
add
xchg
add
add
clc
repnz
jae
fldl
outsl
and
cmp
and
repnz
jae
enter
add
xor
cld
call
fwait
cld
nop
jmp
scas
aaa
add
clc
dec
push
mov
xchg
ret
add
jne
add
into
ret
and
clc
repnz
jae
mov
hlt
or
loope
movzwl
clc
repnz
jae
sbb
add
or
sti
clc
repnz
jae
stc
add
add
addl
mov
clc
repnz
jae
jo
dec
popl
clc
repnz
jae
add
add
add
push
clc
repnz
jae
inc
fnstsw
add
jl
icebp
fwait
cld
nop
jmp
cmp
incb
sub
mov
xchg
ret
add
pop
or
bound
mov
mov
xchg
ret
dec
add
add
add
add
repnz
jae
in
or
imul
jmp
add
push
add
add
je
clc
repnz
jae
pop
pop
lahf
add
fwait
cld
nop
jmp
and
and
in
movb
mov
clc
repnz
jae
outsl
mov
addl
and
push
mov
xchg
ret
add
add
or
mov
xchg
ret
add
add
add
cli
or
add
repnz
jae
add
jne
add
xchg
clc
repnz
jae
add
jne
and
push
add
gs
repnz
jae
movl
inc
add
and
add
xlat
add
add
add
push
mov
xchg
ret
mov
add
add
in
inc
add
dec
add
add
mov
outsb
pusha
clc
repnz
jae
add
daa
faddl
add
add
add
push
mov
xchg
ret
add
pop
add
aaa
sub
repnz
jae
in
add
jns
hlt
add
jae
add
adcl
dec
mov
clc
repnz
jae
jecxz
add
and
lea
add
fwait
cld
nop
jmp
in
es
add
imul
jg
clc
repnz
jae
str
push
or
sub
fwait
cld
nop
jmp
jns
and
dec
push
push
mov
xchg
ret
hlt
add
jne
jne
mov
mov
clc
repnz
jae
fnsave
movl
cmpl
adcl
enter
push
mov
xchg
ret
aaa
push
cmp
mov
fwait
cld
nop
jmp
daa
add
push
faddl
add
push
sub
test
adc
sbbl
add
pop
clc
add
clc
repnz
jae
les
add
push
jnp
fwait
cld
nop
jmp
pop
cmp
cmp
push
add
push
mov
xchg
ret
stc
stc
or
fldl
jns
xchg
clc
repnz
jae
add
cmp
stc
les
cmp
mov
xchg
ret
loope
add
add
fwait
cld
nop
jmp
push
add
dec
add
scas
jmp
in
mov
lds
and
jne
mov
add
push
mov
xchg
ret
sbb
jo
and
pop
clc
repnz
jae
mov
addl
dec
mov
clc
repnz
jae
add
hlt
lds
clc
repnz
jae
outsl
decb
add
or
dec
cmp
cld
nop
jmp
or
addl
subl
push
mov
xchg
ret
add
hlt
orl
in
inc
add
rolb
add
add
push
mov
xchg
ret
add
in
add
add
call
clc
repnz
jae
faddl
add
cmc
cmpsl
aas
mov
clc
repnz
jae
lds
add
add
add
clc
repnz
jae
push
add
or
jge
inc
or
mov
xchg
ret
add
fisttpll
imul
clc
repnz
jae
and
add
jns
pop
mov
push
mov
xchg
ret
into
pop
les
inc
xchg
ror
mov
clc
repnz
jae
outsl
or
add
add
push
push
mov
xchg
ret
add
add
xor
dec
add
repnz
jae
and
fstpl
jns
rclb
jmp
and
add
add
add
mov
push
fildl
xchg
ret
add
fstl
enter
xchg
clc
repnz
jae
add
add
fisttpll
sti
inc
add
mov
fs
enter
rclb
cld
inc
add
add
add
add
dec
fwait
cld
nop
jmp
jns
aaa
in
outsl
add
popa
push
mov
xchg
ret
add
jecxz
add
add
outsl
push
clc
repnz
jae
add
rolb
incb
xlat
mov
and
fs
rolb
add
add
mov
push
mov
xchg
ret
add
jne
hlt
xchg
mov
nop
jae
jecxz
and
add
clc
repnz
jae
fldl
add
frstor
jno
add
pop
clc
repnz
jae
cmp
movl
nop
jae
add
push
add
cmp
mov
jecxz
repnz
jae
scas
mov
add
add
push
mov
add
and
xchg
add
add
add
fwait
and
add
stos
push
clc
repnz
jae
enter
pop
and
add
mov
adc
add
es
pop
and
pop
add
je
fwait
cld
nop
jmp
add
adc
add
clc
repnz
jae
add
jns
add
pusha
add
dec
or
mov
xchg
ret
aaa
daa
add
mov
xchg
ret
xor
adc
jg
push
mov
xchg
ret
add
stc
add
fisttpll
gs
mov
clc
repnz
jae
jo
add
add
ffree
dec
add
push
mov
xchg
ret
cmp
push
add
cmp
mov
fiadds
add
add
cwtl
add
jb
pop
clc
repnz
jae
fs
faddl
pop
mov
add
add
nop
jae
add
add
add
add
ret
clc
repnz
jae
decb
add
add
addr16
hlt
add
xor
clc
repnz
jae
add
aaa
add
fldl
mov
repnz
jae
hlt
cmp
cmp
add
decb
test
cld
clc
repnz
jae
divps
test
je
clc
repnz
jae
or
add
push
jae
fnsave
jecxz
adc
and
clc
repnz
jae
add
hlt
add
fcompl
out
add
fldl
pop
or
add
add
nop
jae
add
add
pop
fwait
cld
nop
jmp
in
add
add
add
ljmp
repnz
jae
add
add
cld
nop
jmp
movl
add
hlt
add
add
scas
enter
jae
add
fstl
rolb
and
adc
repnz
jae
add
jo
fdivl
call
clc
repnz
jae
add
add
add
push
mov
xchg
ret
pop
add
loope
push
push
mov
xchg
ret
add
add
add
add
je
repnz
jae
sbb
push
add
pop
clc
repnz
jae
add
add
pinsrw
push
fwait
cld
nop
jmp
add
adc
testb
cmp
jmp
cmp
push
mov
pop
inc
fwait
cld
nop
jmp
add
add
add
add
out
repz
add
add
nop
jae
add
add
xor
add
adc
push
clc
repnz
jae
add
sbb
repnz
jae
add
add
cmp
mov
xchg
ret
cmp
xlat
add
add
ds
clc
repnz
jae
sbb
cmp
add
xlat
cmp
sbbb
jmp
add
add
sub
push
mov
xchg
ret
and
or
and
jg
push
mov
xchg
ret
add
enter
hlt
push
add
repnz
jae
push
push
dec
jo
add
clc
repnz
jae
scas
add
add
push
add
lods
push
push
mov
xchg
ret
add
add
cmp
add
add
push
js
mov
xchg
ret
add
add
mov
mov
xchg
ret
cmp
add
mov
ret
push
mov
xchg
ret
add
add
add
push
clc
repnz
jae
enter
aaa
add
or
mov
add
addr16
add
sbb
movsl
add
add
push
mov
xchg
ret
push
add
paddusb
mov
push
mov
xchg
ret
add
add
repnz
jae
hlt
add
add
ltr
jae
repnz
jae
pop
stc
dec
add
subl
jmp
add
incb
add
cmp
or
clc
repnz
jae
daa
aaa
cwtl
push
clc
repnz
jae
add
incb
add
or
add
repnz
jae
add
cmp
push
in
mov
cld
nop
jmp
jne
stc
jns
mov
out
push
clc
repnz
jae
pop
add
addl
rolb
int
popa
add
repnz
jae
hlt
mov
push
add
inc
add
imul
jae
add
add
add
in
and
mov
xor
clc
repnz
jae
add
cmpl
cmpl
incl
jmp
decb
dec
sar
push
add
sub
repnz
jae
add
add
jns
push
push
mov
xchg
ret
and
add
add
sbb
add
xor
add
clc
repnz
jae
add
inc
add
clc
repnz
jae
cmp
add
add
cli
jmp
add
stc
adc
cmp
add
add
xor
fwait
cld
nop
jmp
push
cmp
cmp
jg
test
add
add
repnz
jae
push
add
out
mov
jae
add
or
add
inc
clc
repnz
jae
daa
aaa
add
or
aaa
bound
mov
imul
pushl
mov
repnz
jae
add
add
movb
add
jne
clc
repnz
jae
add
add
add
clc
repnz
jae
cmp
add
pop
mov
fwait
cld
nop
jmp
jns
or
stc
jmp
add
add
clc
repnz
jae
add
add
push
xlat
inc
add
add
pop
add
add
insl
pop
clc
repnz
jae
add
or
add
in
sbb
jmp
add
push
add
jbe
rolb
addb
add
clc
repnz
jae
add
xlat
add
enter
mov
clc
repnz
jae
stc
jne
add
mov
clc
repnz
jae
enter
mov
clc
clc
repnz
jae
out
cmp
add
out
add
clc
repnz
jae
add
pop
pop
stos
fwait
cld
nop
jmp
add
add
add
add
add
cmp
jae
push
mov
add
add
sbb
cmp
incl
faddl
add
nop
jae
sbb
push
add
push
add
jne
fwait
cld
nop
jmp
add
fs
xor
push
clc
repnz
jae
or
in
jo
mov
mov
dec
cmp
repnz
jae
jne
and
jns
ljmp
clc
repnz
jae
pop
hlt
pop
fnstsw
clc
repnz
jae
adc
add
popa
add
mov
xchg
ret
add
mov
leave
push
push
mov
xchg
ret
add
sbb
pop
add
jmp
jae
add
pop
outsl
push
in
add
mov
push
mov
xchg
ret
xlat
add
addl
mov
sub
add
inc
add
add
push
add
dec
pop
push
mov
xchg
ret
or
mov
add
lock
lret
nop
jmp
jns
in
mov
add
push
add
rol
push
mov
xchg
ret
into
and
dec
add
sub
fwait
cld
nop
jmp
or
add
and
jne
pop
pop
jne
fwait
cld
nop
jmp
add
les
repnz
jae
add
push
mov
stos
pushl
clc
repnz
jae
es
and
add
jae
push
add
loope
cmp
fstl
and
mov
cmp
push
mov
xchg
ret
mov
in
add
add
lcall
incl
add
add
add
push
mov
xchg
ret
hlt
fldl
add
pop
mov
clc
repnz
jae
add
add
mov
clc
repnz
jae
in
in
rolb
fcoml
repnz
jae
add
or
out
add
add
repnz
jae
jns
add
add
mov
clc
repnz
jae
add
or
add
add
adc
mov
clc
repnz
jae
add
or
add
loope
pop
test
fwait
cld
nop
jmp
mov
add
add
mov
xchg
ret
faddl
outsl
hlt
add
mov
add
add
add
jmp
jmp
or
add
movzwl
jmp
add
fnsave
cmp
jns
out
ja
clc
repnz
jae
add
dec
adc
mov
push
clc
repnz
jae
add
hlt
add
add
dec
clc
repnz
jae
add
xlat
push
add
jmp
sbb
popa
add
cld
nop
jmp
in
add
jo
fucom
out
dec
test
push
mov
xchg
ret
outsl
les
add
fmull
test
repnz
jae
loope
add
mov
clc
repnz
jae
es
cmp
mov
nop
jmp
add
push
jns
add
stos
clc
repnz
jae
jne
jmp
rolb
add
push
add
add
mov
loope
clc
repnz
jae
add
add
clc
repnz
jae
add
add
in
mov
cmp
mov
xchg
ret
sbb
add
add
in
lods
push
mov
xchg
ret
fldl
es
hlt
fisttpll
lret
push
clc
repnz
jae
and
scas
scas
incb
cmp
push
mov
clc
repnz
jae
fnstsw
xor
add
clc
repnz
jae
add
add
sbb
cli
inc
add
hlt
fstpl
sub
add
and
mov
adc
repnz
jae
pavgw
add
adc
int3
call
clc
repnz
jae
sbb
or
or
jbe
push
mov
xchg
ret
and
add
add
jnp
and
clc
repnz
jae
mov
add
sub
cld
nop
jmp
or
and
add
push
clc
repnz
jae
or
add
mov
add
pusha
clc
repnz
jae
add
jo
jecxz
add
inc
add
add
fwait
cld
nop
jmp
enter
add
stc
add
xor
testb
iret
dec
fwait
cld
nop
jmp
fdivr
pop
aaa
add
add
clc
repnz
jae
add
daa
add
adc
repnz
jae
jmp
add
or
popa
add
cld
nop
jmp
add
add
lds
add
mov
xchg
ret
add
add
add
roll
shr
clc
repnz
jae
dec
add
jns
scas
je
clc
repnz
jae
or
add
jp
clc
repnz
jae
add
cmp
adc
daa
addr16
push
push
mov
xchg
ret
add
hlt
add
sub
jmp
jae
es
jo
pop
inc
add
push
pop
shr
mov
clc
repnz
jae
add
jo
and
fisttpl
nop
jae
push
or
add
cmp
call
clc
repnz
jae
jne
add
add
in
leave
call
clc
repnz
jae
add
jns
push
pushf
add
clc
repnz
jae
add
frstor
xor
pusha
push
mov
xchg
ret
mov
add
cmp
add
pushl
push
mov
xchg
ret
adc
add
sahf
push
mov
push
add
inc
add
jns
add
popa
pusha
xchg
push
inc
mov
jo
mov
daa
out
incl
pop
add
fstl
scas
loope
pop
xorl
dec
je
fwait
cld
nop
jmp
add
or
jge
push
mov
xchg
ret
or
scas
add
lret
clc
repnz
jae
xor
add
movsb
add
jae
add
add
jecxz
pop
mov
clc
repnz
jae
add
add
add
or
clc
repnz
jae
jns
out
mov
fwait
cld
nop
jmp
add
rolb
or
push
add
mov
clc
repnz
jae
add
stos
not
clc
repnz
jae
aaa
add
enter
add
fwait
cld
nop
jmp
add
mov
add
setge
jo
fwait
cld
nop
jmp
push
hlt
mov
add
lds
mov
dec
mov
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
add
outsl
in
add
jecxz
add
clc
repnz
jae
or
fldl
fldl
push
sub
cs
insb
clc
repnz
jae
add
or
and
push
mov
xchg
ret
and
add
add
mov
mov
clc
repnz
jae
add
jne
rcll
add
xor
clc
imul
fwait
cld
nop
jmp
add
add
fs
popf
mov
fwait
cld
nop
jmp
adc
pop
jne
aaa
adc
mov
fcoms
repnz
jae
add
add
add
add
push
fwait
cld
nop
jmp
cmp
add
sub
clc
repnz
jae
add
aaa
cmp
pop
clc
repnz
jae
add
pop
add
adc
dec
clc
repnz
jae
add
pop
or
or
lods
decl
clc
repnz
jae
hlt
jne
add
pavgw
add
push
mov
xchg
ret
add
add
out
push
mov
add
or
lahf
mulb
sbb
popa
push
sub
fwait
cld
nop
jmp
add
jne
add
mov
stos
idiv
pushl
add
and
add
add
or
lahf
and
push
mov
xchg
ret
adc
hlt
mov
xchg
jae
add
pop
hlt
add
mov
fwait
cld
nop
jmp
add
add
cli
mov
jmp
incl
mov
add
add
add
rep
clc
repnz
jae
hlt
out
add
inc
and
push
mov
xchg
ret
add
add
out
testb
cmp
ret
les
add
fs
subl
clc
repnz
jae
add
aaa
add
rolb
into
mov
clc
repnz
jae
into
add
rolb
scas
sbb
pop
push
mov
xchg
ret
cmp
add
into
cmp
push
mov
xchg
ret
add
add
jne
add
repnz
jae
frstor
add
jecxz
call
nop
jae
cmp
add
mov
and
fwait
cld
nop
jmp
add
add
sbb
nop
jmp
jmp
scas
add
or
rep
clc
repnz
jae
jns
add
add
add
scas
clc
inc
add
add
add
jae
repnz
jae
add
pop
in
mov
je
clc
repnz
jae
add
cmp
clc
repnz
jae
add
or
ret
arpl
clc
repnz
jae
and
push
decb
xchg
clc
repnz
jae
add
adc
outsl
adc
bound
mov
popa
add
mov
xchg
ret
add
push
shrb
imul
clc
repnz
jae
cmp
aaa
clc
pusha
clc
repnz
jae
add
and
mov
add
fwait
cld
nop
jmp
add
add
add
add
add
clc
repnz
jae
add
push
add
push
fwait
cld
nop
jmp
add
jns
push
or
add
jp
clc
repnz
jae
add
in
add
lret
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
add
call
clc
repnz
jae
add
add
mov
rclb
js
inc
add
in
mov
add
jp
rclb
out
inc
add
add
or
dec
cltd
push
push
mov
xchg
ret
add
jns
mov
adc
repnz
jae
lds
jmp
flds
xchg
ret
pop
jmp
or
or
jae
add
jne
je
into
test
fwait
cld
nop
jmp
dec
add
add
add
jne
mov
mov
cld
nop
jmp
incb
add
add
incb
add
test
fwait
cld
nop
jmp
decb
add
mov
cld
nop
jmp
frstor
and
or
push
add
and
fwait
cld
nop
jmp
aaa
pop
stc
and
push
mov
push
mov
xchg
ret
or
add
fucomp
push
push
mov
xchg
ret
add
add
add
add
mov
xchg
ret
es
and
sub
repnz
jae
add
add
mov
clc
repnz
jae
jne
addl
sbb
cld
nop
jmp
add
add
and
add
add
mov
clc
repnz
jae
cmp
nop
add
dec
cmp
mov
xchg
ret
add
add
add
mov
mov
jg
clc
repnz
jae
jmp
add
add
add
fistl
add
inc
add
incb
into
add
pop
inc
push
mov
xchg
ret
dec
adc
or
hlt
add
jne
clc
repnz
jae
add
hlt
faddl
sti
clc
repnz
jae
add
add
cmp
push
mov
xchg
ret
add
and
add
lds
cld
nop
jmp
add
add
or
and
jmp
nop
jae
hlt
add
and
outsl
xor
call
clc
repnz
jae
add
add
add
push
clc
repnz
jae
add
add
add
cwtl
call
clc
repnz
jae
add
and
fimull
nop
jmp
stc
les
add
aaa
cmp
sbb
jecxz
add
add
jne
fwait
cld
nop
jmp
add
and
adc
lahf
mov
clc
repnz
jae
mov
add
repz
repnz
jae
stc
cmp
add
add
clc
repnz
jae
rolb
fnstsw
stc
mov
jae
add
out
rolb
incb
jno
add
push
mov
xchg
ret
stc
add
jecxz
rolb
lcall
inc
add
pop
add
enter
scas
cmp
fwait
cld
nop
jmp
add
add
xor
push
mov
xchg
ret
add
add
int3
push
clc
repnz
jae
jns
add
fldl
decb
repnz
jae
add
or
fmull
in
jl
das
clc
repnz
jae
jne
add
mov
out
add
push
dec
mov
rorb
pop
add
fwait
cld
nop
jmp
jecxz
add
out
insl
movzwl
clc
repnz
jae
add
cmp
and
mov
add
clc
repnz
jae
add
add
stc
jecxz
mov
clc
repnz
jae
pop
add
add
cmp
clc
repnz
jae
les
add
rcrb
incl
cmp
add
lcall
sti
jmp
jecxz
incb
pop
adc
rcll
lcall
mov
and
xor
ds
push
mov
xchg
ret
adc
add
add
jne
or
add
repnz
jae
getsec
and
enter
nop
jae
aaa
add
incb
jecxz
mov
clc
repnz
jae
adc
je
clc
repnz
jae
add
out
add
fwait
cld
nop
jmp
mov
and
stos
jmp
jne
add
add
adc
in
add
fwait
cld
nop
jmp
add
add
add
mov
add
clc
repnz
jae
scas
faddl
add
add
dec
mov
clc
repnz
jae
and
aaa
and
clc
repnz
jae
add
add
sbb
jns
stos
mov
clc
repnz
jae
add
add
and
stos
mov
clc
repnz
jae
add
xchg
and
mov
je
clc
repnz
jae
add
and
dec
sub
push
mov
xchg
ret
mov
jmp
sar
mov
clc
repnz
jae
cmp
pop
popa
clc
repnz
jae
or
adc
enter
bound
mov
call
fwait
cld
nop
jmp
add
add
mov
ljmp
sbbl
add
xor
mov
mov
pop
mov
add
add
sub
imul
push
add
mov
dec
cmp
aam
inc
lods
out
jecxz
andl
add
in
jne
mov
pushf
int3
mov
cmp
jg
add
mov
mov
add
add
lock
add
sub
imul
push
insb
outsb
mov
add
xchg
add
mov
stos
loopne
xor
nop
add
push
add
add
pop
ljmp
or
lea
jge
xor
out
sbb
add
arpl
push
add
add
inc
add
outsb
lds
add
pushf
lods
lods
cmp
mov
xlat
xchg
filds
daa
pop
fdivl
pop
xchg
arpl
add
mov
add
add
dec
xchg
repnz
or
lret
mov
pop
fs
add
add
push
add
add
in
mov
dec
cmp
jmp
les
dec
mov
pop
jle
xor
sbb
jae
ljmp
add
std
movsl
dec
outsb
jbe
test
mov
add
mov
mov
jne
lahf
hlt
add
bswap
fnsave
xchg
inc
test
xor
pop
xchg
bound
mov
add
add
repz
adc
hlt
add
add
insl
dec
sub
adc
stc
mov
xchg
dec
mov
popf
in
push
add
cmp
ja
mov
subl
jl
fisttpll
add
pop
jecxz
add
and
mov
in
mov
nop
add
and
test
pop
xchg
rolb
iret
mov
pop
addl
imul
lds
dec
jno
xlat
add
push
fsubrl
jmp
fcoml
mov
sub
add
jl
add
movsb
add
in
xor
cmp
leave
xchg
mov
add
add
add
or
add
mov
add
cmp
gs
sbb
mov
sbb
mov
out
sub
inc
add
jbe
jne
and
push
add
and
jmp
daa
dec
mov
add
pop
mov
cmp
dec
mov
movsl
insb
add
movb
add
cld
jmp
daa
sbb
scas
gs
jno
and
cmp
add
inc
mov
std
hlt
add
jnp
sub
cmp
mov
jecxz
lock
iret
push
loope
lds
mov
add
add
inc
add
adc
aas
dec
lock
pop
cwtl
add
add
movsb
add
fcmovne
insb
xchg
sti
roll
outsb
addb
add
jbe
jbe
loop
movb
int
mov
jnp
mov
jl
into
test
outsl
cs
add
add
mov
or
sbb
sub
add
jp
scas
in
and
and
mov
lds
testb
test
xchg
sub
adc
mov
or
add
sub
mov
add
xor
leave
pop
mov
in
jbe
xchg
add
xor
mov
xor
fwait
js
sbb
add
inc
add
add
mov
dec
fsts
add
add
pop
lret
or
mov
add
rolb
ret
insl
stos
mov
add
add
add
push
test
sub
mov
add
add
outsl
lahf
sbb
cmp
mov
fisubrl
out
add
mov
add
movsl
add
mov
add
add
mov
mov
arpl
add
pusha
add
mov
xor
add
sbb
outsl
xchg
jl
addr16
dec
lahf
pop
dec
cwtl
xchg
sbb
xchg
xchg
add
add
add
cmpsb
add
adc
cld
ds
rolb
test
testb
add
add
fbld
mov
add
and
aam
aad
add
add
cmp
mov
inc
lds
add
aam
clc
inc
add
mov
add
dec
sti
fdivrs
movsb
add
push
divl
add
les
mov
and
add
add
jle
adc
fnsave
icebp
push
add
add
fldcw
add
mov
cmp
popa
sub
fisttps
jecxz
sti
hlt
add
add
add
cmp
and
mov
addb
jecxz
repz
jg
add
out
das
add
mov
add
mov
mov
add
mov
adc
sbb
addb
push
lret
xchg
xchg
mov
cmp
add
add
mov
ret
add
add
jno
add
mov
loopne
addr16
adc
mov
sub
add
addb
add
xchg
xor
pushf
push
add
and
mov
sub
in
adc
inc
push
shl
add
add
xchg
inc
insl
leave
mov
popl
push
add
lret
rolb
nop
add
add
pop
xor
xor
add
inc
add
add
cli
loop
je,pn
xor
add
xor
add
push
lahf
push
pop
bound
mov
cmp
jno
sti
push
and
dec
push
dec
aaa
pop
jmp
cmp
imul
js
jl
lret
test
jle
cmp
add
std
gs
aad
xchg
sbb
or
jbe
push
lret
dec
sub
imul
in
sub
scas
out
xor
push
cmp
push
add
add
add
mov
add
add
in
push
lea
xchg
pop
sbb
inc
inc
lds
add
icebp
jo
add
push
add
add
in
push
pop
inc
aas
inc
insl
xchg
add
add
sbb
jne
add
cmpsb
add
push
inc
add
add
add
add
out
add
lods
subl
add
and
mov
out
jp
add
sub
add
icebp
push
add
dec
jl
push
add
mov
jne
imul
mov
or
add
add
lea
inc
xor
iret
sub
lods
mov
mov
sahf
fisubrs
fucomp
addb
call
jecxz
push
fstl
add
fsubrs
ret
clc
mov
add
imul
add
add
mov
movsb
add
xchg
add
leave
in
arpl
lock
add
xor
aad
lds
add
add
jo
stos
adc
pop
pop
inc
add
add
add
mov
dec
ror
xchg
cld
fisubl
data16
xor
inc
add
pop
fists
add
pop
stos
insl
sbb
lock
inc
dec
adc
add
or
pop
dec
sti
push
add
add
mov
add
inc
cmpsl
ret
add
ror
push
add
jo
push
inc
std
push
fcomp
popa
pop
xor
adc
loope
cltd
dec
out
fucomi
fdivl
jbe
aas
xchg
add
popf
pop
out
cmp
inc
sarl
add
and
add
add
sbb
sbb
sub
lods
mov
add
push
add
loope
mov
add
ja
sti
or
add
xchg
mov
push
and
mov
mov
jb
mov
add
enter
xchg
enter
cmpl
push
mov
add
test
bound
mov
lahf
add
mov
and
mov
sub
popa
lahf
aam
addb
insb
push
add
mov
sub
addr16
jns
in
jo
into
mov
add
add
pop
mov
pop
xor
add
pop
pop
lea
xor
mov
add
add
hlt
add
cld
in
cmc
or
pop
dec
push
add
jge
fists
pusha
add
testl
add
add
fcmove
jmp
and
lret
gs
mov
into
iret
inc
add
fsin
inc
dec
inc
add
lods
movsb
add
out
cmpsb
add
rolb
test
add
push
add
push
add
jg
pop
push
add
or
jecxz
push
hlt
add
std
add
adc
pop
xchg
add
in
clc
inc
add
and
insb
inc
add
mov
add
mov
add
mov
add
xlat
mov
cmp
cmp
mov
pop
jbe
fisubl
add
fld
add
test
mov
adc
rolb
sbbl
add
and
stc
mov
mov
add
push
add
and
mov
pop
push
add
add
add
lahf
stos
test
bound
mov
add
mov
jbe
fs
movsb
add
add
add
data16
dec
jmp
sbb
add
and
jbe
out
add
add
fldenv
push
mov
iret
and
mov
mov
add
add
add
sbb
add
mov
rorl
data16
mov
out
nop
add
add
add
jg
push
icebp
rolb
in
sub
out
mov
lock
push
add
jmp
add
mov
cld
inc
cmp
in
add
mov
and
in
xor
rcrl
adcl
sahf
mov
mov
das
dec
mov
lret
add
push
add
aaa
cmp
rolb
enter
mov
js
mov
pop
push
fisubl
add
push
mov
xor
aad
sub
pop
orl
xor
insb
fildll
add
add
mov
faddl
sub
add
mov
dec
sbb
ja
and
mov
or
stos
pushf
cs
mov
xor
fists
cmp
sub
enter
mov
mov
add
je
mov
cmp
add
pop
pushl
push
insb
dec
out
cmp
adc
xor
inc
add
mov
jo
cli
jns
adc
aad
add
add
jle
jl
xchg
test
data16
dec
jg
add
lahf
jnp
xor
xor
ret
ja
ret
aaa
mov
sbb
add
add
xchg
add
mov
xor
aaa
popf
test
push
add
sarl
aaa
rolb
add
jl
add
xchg
add
xor
jle
add
push
je
pop
dec
cmpsl
loopne
dec
push
add
add
mov
jl
mov
movb
idivl
add
xchg
les
xchg
fldcw
jo
mov
dec
test
mov
and
gs
add
pop
xchg
movsl
and
add
in
fildll
adc
mov
and
mov
add
xchg
inc
add
add
mov
add
jmp
mov
jns
add
loop
lds
add
adc
je
ficoml
add
adc
pop
fadd
int3
mov
and
adc
push
xor
aam
inc
add
addb
stc
int
jge
mov
fcoms
test
scas
mov
pop
mov
inc
add
add
ds
add
add
xchg
add
add
xchg
testb
out
negl
jne
add
cmp
or
ret
add
mov
pusha
add
xor
outsb
daa
mov
mov
adc
or
and
mov
add
mov
lret
cmpsl
addr16
nop
add
hlt
add
jae
inc
add
inc
push
aam
mull
add
pop
add
insl
mov
mov
push
push
cmc
aaa
mov
add
add
pop
mov
add
cmp
xchg
add
mov
sbb
lods
cmp
fmul
cmc
add
jmp
add
pop
xchg
jne,pn
add
add
sub
ljmp
add
lea
pop
pop
and
add
jecxz
incb
add
into
xor
std
test
sar
inc
ret
insb
cmp
jns
pop
icebp
mov
and
add
pop
in
pop
sahf
dec
fidivs
add
inc
add
add
mov
inc
add
add
mov
or
outsl
mov
fbstp
or
or
xchg
jae
test
ret
pusha
add
imul
jbe
add
mov
in
cli
les
rcl
and
add
loope
or
addb
add
add
add
leave
in
sbb
xor
sti
icebp
ja
ret
add
stos
mov
add
add
add
add
add
cmp
xor
jge
enter
loopne
call
xchg
add
fstl
popa
xchg
push
add
insb
and
and
mov
and
push
add
test
cltd
outsl
sbb
pop
fisubrl
fdiv
add
and
mov
clc
ds
xchg
and
mov
inc
ljmp
out
adc
jo
test
testb
add
rolb
into
imul
aad
int3
cmpsb
add
les
out
or
mov
mov
add
add
dec
xor
sub
inc
add
jbe
shld
sahf
aas
or
sub
sbb
add
xchg
pop
dec
pop
ficomps
adc
jnp
fstpt
mov
out
pop
cmp
mov
fildll
xchg
imull
jge
ret
in
xor
jle
movsl
rolb
sbb
add
add
and
mov
shll
jmp
cmp
cld
shll
mov
loopne
cmp
pop
sti
int3
out
or
dec
jp
add
pop
push
add
add
add
add
js
cmp
popa
push
add
lods
mov
add
add
push
add
shl
add
cmp
add
or
push
jl
add
mov
rolb
dec
xchg
mov
fadds
lods
repnz
adc
xchg
les
push
add
add
nop
add
mov
ret
add
rcrl
aaa
lea
insl
mov
add
cmp
pop
push
add
jl
mov
dec
fucomip
bound
mov
inc
add
mov
mov
mov
fwait
bound
mov
das
fsubp
jl
das
dec
lret
nop
add
jle
sahf
sbb
sbb
add
rol
add
mov
popa
jle
mov
mov
popf
pop
leave
movsl
imul
testb
add
addb
xchg
add
jle
aam
cmp
mov
dec
mov
add
popa
jne
add
imul
jae
add
inc
or
sti
int
xlat
cmp
cmp
add
subl
jle
cmpsb
add
push
jne
add
add
je
jl
test
add
addb
sbb
cs
cld
jno
add
add
xchg
add
in
das
fistps
mov
aaa
mov
add
and
movsb
add
out
push
mov
adcl
call
add
or
add
das
dec
and
rolb
sub
add
outsb
imul
call
add
out
add
cmp
pop
add
ja
add
ret
jle,pn
ja
lret
mov
add
lret
mov
sbb
mov
fsubs
inc
add
add
lea
add
mov
jmp
add
xor
popf
orl
repnz
mov
and
mov
dec
cmp
loopne
add
jmp
repz
add
mov
clc
loopne
jl
push
add
imul
add
add
mov
cli
mov
inc
add
sub
sub
sbb
data16
rolb
stc
les
push
add
push
add
repz
lahf
sbb
add
daa
cld
add
mov
xchg
add
jge
add
xchg
test
bound
mov
fdivl
add
add
jnp
add
push
enter
mov
lods
sbb
mov
jo
fcoml
push
sarl
bound
mov
sub
in
xor
add
mov
rcll
cmp
xchg
jo
mov
int3
das
and
and
mov
mov
add
add
js
add
out
push
add
add
mov
fwait
aaa
push
rorl
push
add
lds
into
psubw
jl
insl
mov
xor
mov
cli
in
push
xchg
pop
push
jbe
getsec
and
mov
test
add
and
popa
loop
lods
sub
testb
dec
xor
or
push
add
call
push
mov
add
fsts
dec
sbbl
add
mov
iret
lcall
and
mov
movsb
add
aaa
mov
aad
pop
stos
jo
mov
add
lods
xor
inc
aad
fisubs
inc
cmp
movsl
mov
cmpsb
add
sahf
jle
and
add
mov
and
orl
add
add
mov
cmp
xor
add
ret
or
scas
pushf
inc
add
add
test
jg
popf
test
arpl
add
add
lea
lret
add
and
mov
jmp
bound
mov
push
add
push
add
inc
add
add
je
fisubl
sbb
add
movb
inc
jl
sub
into
pop
adc
mov
mov
outsb
or
adc
push
add
rcrl
leave
fstpl
std
push
add
dec
daa
xchg
add
jbe
stos
aas
vhaddps
and
mov
mov
adc
out
repz
pop
jbe
sbb
pusha
add
xchg
in
jg
add
or
add
pop
ret
lds
add
mov
aam
cmp
sbb
mov
xor
pop
xor
std
stos
push
push
add
or
sbb
xor
jmp
cmp
je
add
sbb
addl
mov
add
add
add
data16
adc
mov
sahf
pop
jle
es
add
dec
jg
sbb
add
ret
add
mov
das
jecxz
test
mov
push
gs
xlat
jle
add
xlat
cmp
test
add
jno
pushf
daa
pop
xchg
nopl
sahf
insl
or
mov
pop
sti
aam
jge
jne
inc
push
add
add
or
add
and
add
jmp
add
dec
mov
add
add
xlat
loop
addb
add
dec
inc
add
jo
push
ficomps
adc
lods
test
sub
call
shll
push
out
mull
cmp
cmc
add
add
mov
add
pop
pop
mov
add
dec
jge
es
adc
pop
cmp
lret
cmp
or
ret
add
sbb
add
and
das
dec
adc
cld
or
inc
pop
mov
shll
dec
dec
aam
call
add
mov
adc
inc
fstpt
js
arpl
fistl
fs
xchg
add
movsl
jl
cmp
icebp
sbb
jno
cld
xor
add
mov
mov
dec
bts
lock
add
add
xor
jno
add
and
js
dec
lods
jbe
cmp
or
add
fdivr
lods
push
push
add
jmp
or
add
add
mov
fisubl
add
mov
loope
out
adc
sti
add
addb
xchg
add
data16
imul
ret
add
add
add
les
or
push
add
inc
add
mov
add
add
cmp
aaa
dec
pushf
into
jae
lods
or
add
cmp
xor
adc
loop
bound
mov
ds
lds
pushf
mov
mov
add
jns
outsb
jb
sbb
and
mov
pop
add
mov
add
pop
pusha
add
popf
jne
mov
add
jg
xchg
add
add
jmp
add
dec
fisttpl
add
jae
call
add
sub
add
add
add
mov
dec
pushf
jp
cmc
lcall
pop
cmp
fildll
inc
cmp
add
inc
add
xchg
add
cltd
mull
add
add
sub
pop
xlat
lods
scas
or
addb
aaa
nop
add
xchg
sbb
push
add
mov
stos
leave
das
je
or
stos
adc
add
mov
and
mov
mov
mov
add
add
add
add
arpl
pop
push
add
loop
call
pop
inc
mov
xor
pop
insl
movsb
add
test
cmp
xor
mov
sub
je
jmp
jl
add
add
fcomps
add
inc
cmp
add
and
or
rcl
xchg
sbb
pop
cmp
mov
rorl
add
mov
hlt
add
add
add
fwait
push
pop
add
add
cmp
mov
lret
stos
fwait
test
adc
pop
push
inc
add
dec
push
add
insb
aas
sahf
addb
data16
adc
pop
rolb
add
rolb
scas
into
mov
cld
mov
add
add
or
add
scas
std
jp
add
add
fistpll
or
jnp
mov
jmp
add
fidivrl
pop
dec
aaa
int3
inc
add
stc
mov
xchg
add
mov
add
and
sti
pop
xor
add
add
mov
dec
shl
jo
imul
roll
aaa
jecxz
jle
dec
pop
xchg
add
arpl
add
les
lods
aaa
mov
sbb
push
add
cmpsl
movsb
add
add
add
and
mov
loop
push
test
push
add
cli
or
or
mov
mov
pop
imul
cwtl
add
add
add
sbb
les
pop
inc
sbb
orl
add
daa
imul
stos
test
sub
mov
icebp
gs
mov
loop
add
or
lds
jne
add
add
add
scas
sbb
mov
adc
add
cmp
xor
out
dec
pop
aaa
frstor
add
add
mov
fildll
jae
push
add
cmp
repz
mov
lods
pop
jl
fisubs
cmp
pop
inc
add
pushf
stc
mov
pop
aam
push
add
int
add
sbb
pop
lds
add
add
pop
fdivrp
pop
xor
pusha
add
insl
sbb
mov
jae
cmp
fwait
dec
xor
mov
pop
ret
xor
mov
add
add
add
add
lahf
clc
testb
adc
mov
add
add
jno
add
dec
cmp
test
pop
in
aas
xchg
add
jno
add
daa
or
add
mov
xchg
sub
or
mov
adc
sti
push
out
add
pop
sbb
add
add
iret
lock
xlat
cmpsb
add
data16
xor
add
add
sub
sub
addb
mov
lret
add
add
add
xchg
sbb
out
xchg
sbb
hlt
add
jbe
cmc
out
add
ret
testb
push
pushl
add
mov
aas
fcoml
inc
add
inc
add
xchg
jle
lock
and
or
aaa
xchg
add
add
imul
add
mov
add
jbe
outsb
pop
sub
aad
add
mov
movsb
add
sbb
gs
rol
pop
add
rolb
ljmp
cmp
aam
cmc
or
inc
add
dec
mov
add
mov
into
shrl
dec
or
add
pop
sbb
aam
fsubl
add
jns
and
add
addb
add
mov
in
fiadds
mov
or
fildl
add
and
sub
loopne
pop
inc
out
pop
int3
sbb
cmc
rolb
add
sbb
add
add
scas
adc
leave
or
out
adc
out
in
add
mov
adc
push
sub
ficoml
jp
mov
pop
inc
push
add
add
pop
xchg
out
xlat
sub
jae
pop
imul
out
cmpsl
cmp
add
rolb
xchg
add
mov
inc
add
sub
xor
and
or
ja
hlt
add
sub
pop
dec
push
push
add
and
mov
out
add
add
fwait
mov
fildl
add
dec
mov
push
add
fcmovbe
add
mov
shrl
fcmovnb
stc
test
lock
sbb
sahf
rorl
add
cmp
add
add
mov
jb
mov
add
push
add
add
mov
dec
aad
rolb
push
inc
sahf
daa
dec
xor
xchg
in
mov
test
add
insb
xchg
icebp
jne
add
inc
out
inc
add
dec
ficomps
pop
add
mov
cmp
lds
pop
outsl
xlat
cmp
jmp
add
mov
lds
lock
jnp
insl
flds
movsb
add
xchg
test
faddl
and
add
sbb
sahf
mov
mov
add
cmpsl
out
inc
cmp
add
fwait
sub
pop
mov
icebp
test
cltd
add
sbb
add
push
stos
mov
xlat
pop
pushf
outsb
rolb
mov
add
roll
mov
add
cmp
inc
push
add
sbb
iret
in
cmp
ret
pusha
add
js
jo
gs
scas
cmp
add
lods
sub
jl
outsl
mov
mov
dec
mov
cmpsl
stc
mov
sub
jb
outsb
jns
xchg
add
add
std
mov
and
adcl
add
xchg
add
add
mov
addb
sbb
nop
add
out
add
mov
repz
addr16
add
xchg
movb
add
mov
scas
pop
sbb
sbb
add
ja
xor
jmp
jge
inc
add
arpl
mov
aad
in
loop
popa
jmp
push
dec
or
dec
aam
add
sbbl
rorl
testb
fildl
stc
mov
loope
sub
and
fdivs
lock
cmpsl
xchg
xchg
add
mov
add
addb
arpl
fistpll
ljmp
fistps
add
loopne
mov
std
and
cmpsl
fcmovu
bound
mov
add
adc
xor
test
add
inc
lds
ficoml
add
int3
inc
arpl
loop
fisttpll
mov
and
addb
add
push
add
sub
adc
js
jg
add
mov
add
add
jb
into
sbb
testb
add
xor
mov
add
xlat
jmp
inc
shll
nop
add
push
add
mov
lret
icebp
push
mov
mov
push
mov
addb
and
and
add
outsb
ficoms
sub
or
mov
or
add
xor
add
mov
clc
cmp
jecxz
add
sub
jns
push
add
add
adc
add
cmp
cmpsl
xlat
add
mov
and
push
ljmp
mov
inc
add
add
aad
push
add
sti
jg
fistpl
loopne
cmp
inc
stos
inc
cltd
xchg
inc
add
inc
pop
out
fs
aad
jl
add
add
mov
out
add
push
lea
inc
add
std
jne
add
add
lods
std
mov
sti
nop
add
inc
add
add
add
out
std
cmp
add
stos
dec
jge
add
leave
shrl
push
jns
add
add
imul
adc
add
dec
pop
xor
add
and
mov
jg
sbb
aad
add
scas
repnz
add
add
add
mov
nopl
add
mov
dec
sbb
add
js
add
add
push
add
std
test
xor
lds
rolb
enter
lahf
dec
and
imul
leave
add
cmp
mov
add
dec
fidivrs
jle
xchg
in
testb
sub
movsb
add
mov
pop
push
add
mov
insl
inc
add
rorl
add
jp
lods
sbb
mov
mov
mov
adc
pop
or
jo
insl
xchg
out
aas
out
testl
inc
push
add
add
movb
lcall
add
cmp
xchg
pop
inc
cwtl
nop
add
inc
add
adc
inc
mov
jge
mov
jg
inc
sbb
call
stos
or
mov
add
add
cmp
add
xchg
add
add
xchg
dec
cmc
test
and
inc
xor
lds
jbe
scas
pop
dec
xchg
inc
jne
dec
movb
daa
std
popa
mov
iret
stc
add
mov
add
or
stc
cmp
test
mov
dec
xlat
in
std
rolb
sbb
outsb
insl
in
sti
lret
data16
ret
add
add
and
xchg
movb
add
rolb
xchg
jb
xchg
cli
inc
fists
insl
notl
in
push
sbb
add
add
scas
mov
ret
add
push
xor
xor
iret
lds
pushf
jg
jbe
fwait
inc
jne
dec
fxch
sub
mov
add
jne
imul
lods
push
add
add
fisubl
mov
ds
ljmp
pop
adcl
mov
mov
add
xor
inc
add
xchg
add
add
add
or
add
add
pusha
add
push
inc
mov
mov
add
and
add
movb
lcall
int3
ret
add
outsl
pushl
add
add
add
add
mov
jne
add
add
lea
insb
xchg
test
push
add
add
add
jl
lds
mov
sbb
add
mov
aad
add
add
sbb
add
add
sub
sbb
test
add
mov
addb
lds
xor
add
mov
add
out
xor
add
push
into
pusha
add
jne
mov
lods
stos
add
orl
push
jmp
xor
stc
mov
fbstp
cwtl
inc
and
adc
pushf
andl
mov
or
adc
repz
mov
xchg
add
sbb
add
or
fidivl
and
mov
add
out
mov
add
push
add
add
sarl
push
add
add
mov
cmc
pusha
add
push
sbb
add
dec
cmp
loopne
jno
cmp
add
lods
mov
insl
sti
mov
jg
or
mov
inc
add
sub
iret
adc
addb
pusha
add
daa
mov
bound
mov
shll
mov
subl
mov
xchg
add
sahf
ja
inc
add
add
aaa
pop
inc
add
sahf
cmp
mov
add
mov
xchg
jmp
cmp
add
aam
xor
mov
call
cmpsb
add
push
sbb
sub
loopne
scas
fmuls
mov
and
std
mov
les
lea
add
xchg
add
add
lahf
xor
jns
movsb
add
lahf
jle
add
add
add
daa
add
mov
lea
rolb
sub
jl
pop
loopne
push
add
push
arpl
mov
repz
mov
mov
mov
and
inc
add
incb
loopne
jbe
imul
add
fdivrl
icebp
push
add
pop
xchg
add
add
mov
iret
mov
popa
test
jle
add
test
loope
das
jecxz
push
add
pop
and
mov
rolb
push
dec
dec
pop
mov
pop
loopne
outsb
sbb
pop
xchg
add
sbb
add
fists
add
stos
lds
sub
ja
mov
popf
cmp
add
xor
movsl
sbbl
pop
pop
xchg
data16
add
popf
adc
jle
add
add
ret
or
add
lds
sbb
add
das
enter
addb
sub
dec
daa
test
fwait
push
add
sbb
mov
lahf
testb
mov
out
in
mov
fwait
mov
loopne
hlt
add
cmp
data16
into
lock
dec
fistl
add
add
inc
fstpt
mov
jb
cltd
cltd
sbb
pop
adc
xchg
add
add
movb
dec
sub
addr16
nop
add
cwtl
imul
add
mov
mov
add
ja
divl
enter
aas
lret
and
mov
add
pop
fistps
add
mov
not
out
daa
push
add
and
aaa
mov
inc
pop
add
sub
mov
add
add
pop
mov
inc
add
cmpsb
add
or
adc
adc
mov
lods
ficompl
pop
ds
or
insb
gs
or
mov
addb
mov
sub
pop
clc
out
fwait
add
mov
mov
add
and
dec
inc
add
mov
nop
add
push
cmp
leave
jl
add
xor
scas
clc
pop
pop
enter
dec
xchg
or
mov
dec
testb
fs
pop
jecxz
xchg
test
loop
ds
sbb
add
inc
aaa
sbb
cmp
addr16
mov
mov
and
inc
add
push
jae
scas
sub
shll
push
sub
rolb
lahf
sub
mov
inc
sbb
and
mov
add
out
addb
sub
mov
add
add
xor
add
ds
lahf
pop
mov
neg
dec
cmp
pop
daa
inc
jp
mov
fsubs
add
push
add
add
mov
setne
mov
sbb
add
in
pop
cwtl
leave
out
push
clc
cltd
pop
or
add
or
js
xchg
fidivrl
or
add
add
mov
movsb
add
mov
pop
imul
inc
add
jne
or
add
jp
inc
add
aas
dec
rorl
mov
xor
dec
and
out
fwait
mov
mov
push
int3
cld
test
jns
jl
cli
jmp
add
mov
mov
mov
movsl
roll
mov
mov
rolb
call
inc
add
mov
push
xchg
add
std
test
xor
add
mov
mov
or
add
mov
imul
xor
add
mov
add
aad
push
add
mov
loop
sbb
adc
xor
jmp
aad
sbb
lds
hlt
add
fcmovbe
adc
add
sub
test
lods
into
in
cmpsb
add
add
add
inc
add
sbb
add
cs
sub
pop
out
xor
mov
add
aam
pusha
add
add
sti
dec
mov
adc
add
xchg
jns
inc
mov
nop
add
mov
push
lea
roll
fwait
jb
aad
test
pop
xchg
xchg
add
sbbl
add
test
mov
jl
add
push
cli
mov
adc
inc
and
xor
mov
scas
adc
add
mov
sub
addb
repz
mov
push
jbe
mov
sbb
cld
sti
mov
pop
pop
into
and
mov
fidivs
add
add
cmpsl
rcrl
call
rolb
mov
rcl
ret
dec
ret
insb
sub
add
pop
add
cmp
add
add
inc
add
stc
sbb
add
sahf
addb
add
stos
and
mov
add
add
add
add
lds
add
add
adc
out
mov
mov
add
xor
sbb
dec
pop
add
loop
int
mov
testl
fdivs
add
fimuls
insl
or
add
mov
sbb
add
add
add
xchg
add
ret
add
add
out
sbb
pop
stc
add
sub
adc
aaa
sub
sub
mov
add
pop
fsubrs
cmpl
and
mov
popf
outsl
xchg
push
mov
stc
out
out
int3
daa
add
cmp
into
adc
rolb
addb
js
cmp
sub
clc
jnp
mov
and
add
ss
addb
sub
add
add
testb
ss
push
ss
out
and
mov
add
data16
mov
adcl
xor
mov
add
jl
inc
add
mov
xchg
mov
out
jl
test
daa
rolb
ffreep
add
add
jo
sbb
add
jmp
jp
cmp
in
add
add
add
idivl
daa
lret
ss
pop
int3
out
sbb
fwait
mov
stos
sahf
stos
jno
mov
popa
movb
mov
mov
repz
inc
add
lods
and
mov
jmp
add
popf
outsb
int
ss
adc
in
mov
popa
rolb
sub
mov
adc
mov
add
sahf
mov
add
add
add
add
inc
add
mov
iret
push
jg
xlat
pop
nop
add
or
mov
pop
in
mov
dec
cmpsl
imul
inc
add
add
add
mov
add
add
rolb
add
jo
xor
aam
adc
and
mov
adc
rolb
out
sbb
pop
add
cmpsb
add
push
add
insb
mov
dec
push
dec
mov
pop
lods
scas
in
add
testb
das
inc
add
add
add
adc
push
or
out
jb,pt
outsb
ret
add
add
cmpsb
add
ret
arpl
and
mov
push
sti
addr16
test
cmc
std
pop
rolb
add
fldl
add
jne
xor
jb
movb
add
fwait
xchg
pop
pushf
loope
add
cld
mov
pop
pop
inc
add
add
pusha
add
mov
fcoms
leave
sahf
xchg
sbb
ds
jno
ja
std
loop
push
insl
mov
lds
add
and
mov
icebp
and
or
add
push
add
dec
cmc
in
push
add
test
push
lcall
iret
xchg
add
testl
inc
ss
insb
loope
dec
mov
testb
les
pop
les
in
sub
add
add
dec
rolb
cmpsb
add
and
ss
add
add
ljmp
dec
cmpsb
add
xor
dec
out
repnz
aaa
add
mov
add
xchg
add
add
jmp
dec
jmp
les
rolb
cmp
dec
out
xchg
add
aad
cmpsl
popf
mov
xor
das
mov
xchg
shrl
sub
outsl
or
cli
mov
outsb
hlt
add
add
push
add
add
cs
add
add
adc
arpl
add
add
and
mov
mov
cmp
add
mov
add
add
aaa
xor
cwtl
out
mov
test
addb
jb
movsl
add
je
fidivl
popf
pop
mov
and
addl
or
pop
adc
sub
mov
insb
mov
inc
xorl
aaa
dec
stc
push
add
and
jp
add
add
adc
xor
lods
mov
jecxz
out
daa
iret
test
add
insl
and
mov
jp
fcom
mov
les
cmpsb
add
mov
xchg
add
add
jne
xchg
test
mov
add
addb
mov
cwtl
cld
push
xlat
xchg
add
add
xchg
inc
inc
add
mov
xchg
push
pushf
mov
clc
sub
loope
add
repnz
xchg
loope
add
gs
xchg
add
popa
test
jp
cmp
xor
jae
ret
xchg
add
add
pop
sub
add
jne
cmc
imul
cmp
movsb
add
sbb
add
add
mov
into
jo
cltd
xchg
mov
and
mov
fcoms
add
add
xlat
mov
jne
add
loope
fiaddl
stos
mov
in
add
add
add
add
add
repz
add
dec
jnp
or
add
add
movb
or
in
repz
push
inc
add
sbbl
add
mov
push
jnp
mov
fs
data16
add
out
data16
sbb
mov
mov
dec
movsb
add
dec
dec
bound
mov
les
ja
xchg
add
jl
xor
push
add
mov
out
aaa
add
mov
add
add
insl
popa
fwait
andl
in
add
lret
inc
add
aad
adc
cmp
mov
add
mov
sub
add
add
aam
lret
in
push
add
add
add
mov
xchg
add
into
lods
cmp
sbb
lds
xchg
sbb
add
add
add
push
cs
cmp
add
mov
out
add
cmpsl
sub
test
mov
pop
cmp
or
pop
mov
fisttps
add
add
ret
pop
or
add
fidivrs
inc
js
sbb
lods
inc
add
adc
sub
add
xchg
imul
leave
into
mov
mov
int
add
mov
fsub
aad
cmp
loopne
ljmp
add
inc
push
add
jp
cmpsb
add
xchg
xlat
adc
push
imul
and
int3
addr16
out
mov
add
xor
bound
mov
mov
add
aas
mov
cwtl
mov
daa
insb
mov
xchg
add
lcall
xchg
adc
add
add
sbb
add
xchg
add
data16
add
hlt
add
test
add
jb
aam
mov
or
imul
add
pushf
test
mov
ret
push
add
add
inc
add
mov
call
mov
call
add
adc
xchg
adc
mov
mov
jne
add
add
testb
add
into
pop
cmp
movsb
add
lret
cmc
mov
pop
popa
adc
add
add
add
pop
imul
push
popf
mov
mov
add
xor
mov
test
pushf
das
js
dec
lea
add
cli
pusha
add
arpl
stos
scas
ljmp
xchg
aad
gs
aaa
pop
sbb
push
add
or
mov
pushf
mov
sub
add
mov
or
insl
inc
push
add
mov
jmp
dec
jbe
sbb
adc
add
loope
ja
aam
jmp
cmpsl
out
mov
mov
xor
or
movsb
add
sbb
stc
out
inc
add
outsl
adc
mov
lcall
add
jne
ja
int
add
jle
mov
add
jno
mov
add
dec
inc
add
ja
adc
mov
or
add
rolb
out
add
add
dec
xor
inc
push
add
add
add
add
lods
imul
mov
xchg
rcrl
stos
pop
fstpl
add
mov
add
cmp
push
dec
aas
push
add
sbb
mov
in
xadd
jle
outsb
mov
mov
push
add
sbb
jo
mov
mov
add
jnp
sti
rolb
ds
stc
out
mov
add
pushf
xchg
jge
mov
add
push
add
in
push
sbb
cmp
add
add
cmp
cmc
xchg
add
shll
push
add
push
add
and
sbb
sub
add
add
mov
lods
ja
mov
jecxz
add
icebp
mov
inc
add
mov
jne
add
push
addb
js
bound
mov
fistl
in
add
mov
mov
int
add
add
add
adc
iret
xor
xchg
sub
lods
popa
add
pusha
add
arpl
add
sbb
test
movsl
imul
mov
lahf
add
mov
add
enter
inc
sub
add
pop
movb
add
cmp
push
jp
xlat
inc
add
clc
imul
mov
sbb
cwtl
rolb
xchg
inc
add
jno
cmc
outsb
adc
add
mov
testb
add
xor
add
fwait
popf
es
lods
push
out
rcl
mov
cwtl
sbb
xchg
sbb
push
add
jmp
add
movsb
add
jnp
add
dec
out
push
rol
out
or
xchg
fs
gs
enter
daa
mov
cmpsl
sub
ja
mov
mov
add
icebp
xchg
inc
jl
daa
jbe
mov
add
inc
sub
inc
mov
push
loopne
cmpsb
add
or
add
mov
add
leave
in
neg
sub
movb
add
add
add
sahf
out
loopne
test
outsl
add
mov
nop
add
add
lahf
testb
outsb
xchg
xchg
mov
insl
clc
sbb
std
pop
add
std
add
add
xchg
sbb
dec
in
inc
cmp
in
mov
add
add
add
push
mov
movsb
add
data16
ljmp
lcall
rcrl
and
add
add
ljmp
add
mov
data16
icebp
lret
dec
stc
clc
js
add
mov
xchg
or
cmp
xchg
movswl
add
dec
aas
mov
add
pop
add
pop
aam
or
fcomp
mov
out
lret
in
push
push
add
add
add
lods
daa
aam
in
loopne
sbb
mov
mov
add
je
daa
in
add
shl
dec
stos
or
push
add
add
add
sbb
sti
imul
or
xor
lcall
mov
inc
or
jp
or
mov
jge
lock
daa
cmp
in
lods
stos
add
mov
mov
mov
cltd
xlat
ret
mov
dec
add
add
in
add
mov
adc
sar
fwait
rolb
inc
add
out
loope
add
add
cmp
add
add
xlat
add
mov
stc
repz
mov
jae
add
dec
dec
dec
sbb
mov
cltd
sti
pop
fimuls
mov
imul
jp
and
stos
dec
stos
out
adc
xchg
add
add
add
cmpsb
add
add
mull
add
add
popl
out
les
cwtl
gs
lea
add
add
mov
aad
jbe
sti
fcoms
push
mov
or
mov
or
or
push
push
add
xchg
add
rolb
movsl
pop
in
out
test
xlat
cmpsb
add
aas
pop
pop
mov
xor
push
add
ja
pop
addr16
or
pop
lds
addb
in
fiadds
push
aas
sbb
adc
sub
call
lret
pop
sbb
add
fcompl
clc
in
pop
out
jns
dec
cmp
rorl
xlat
lods
add
mov
xchg
add
out
sub
xchg
cmp
add
fnstsw
into
pop
lea
test
sbb
shll
add
je
adc
add
fbstp
ja
push
pop
adc
test
outsb
stos
inc
fstpl
jne
aaa
pop
rolb
add
xor
mov
sbb
add
or
les
sti
inc
add
testb
lods
push
add
add
sahf
mov
sbb
lea
sahf
scas
mov
inc
add
add
mov
inc
add
xchg
movsl
pop
rolb
xchg
lds
jle
adc
repnz
add
mov
mov
inc
add
or
test
and
mov
ret
inc
orl
mov
cli
mov
mov
mov
in
fstpt
sub
lods
ficompl
cld
inc
xchg
add
adc
fldenv
mov
aad
add
add
test
stc
clc
or
lahf
daa
and
mov
mov
aaa
movsb
add
les
dec
or
push
add
jb
jno
into
nop
add
add
popf
push
dec
ds
mov
cwtl
mov
mov
add
and
pusha
add
movsl
xchg
pop
push
or
add
xor
sub
lock
add
push
add
repnz
data16
jmp
add
add
add
imul
xor
or
frstor
cwtl
lods
lods
dec
jmp
add
adc
push
or
adc
popf
and
mov
inc
add
cmp
jns
data16
add
stos
testb
push
add
es
jns
add
mov
add
enter
daa
into
lock
pop
cmp
sahf
dec
into
iret
push
movsl
arpl
add
cmpsb
add
insb
and
mov
cmp
inc
jo
dec
out
aas
inc
fstpt
ja
std
sub
add
cmp
mov
out
xor
pop
fnstsw
and
testb
add
jecxz
add
rolb
shll
add
nop
add
add
add
add
adc
and
mov
push
add
add
je
push
add
loopne
mov
movsl
or
cmp
add
loope
add
loope
add
jno
and
dec
scas
mov
inc
rolb
clc
and
xchg
aas
aam
xor
adc
int3
pop
test
xchg
movsb
add
pop
jecxz
add
add
mov
xor
sub
jno
add
fcomps
add
movsl
outsb
fwait
add
addb
or
call
sahf
lods
push
mov
hlt
add
add
aas
arpl
add
add
in
lret
xchg
xchg
xchg
dec
mov
loop
jmp
add
mov
mov
and
mov
add
popf
jne
add
add
add
push
mov
add
add
add
ja
add
cmp
fbld
jle
or
jmp
and
mov
repz
push
movsb
add
inc
dec
xchg
add
hlt
add
ds
and
out
int3
addb
mov
add
push
add
jge
testl
add
add
sbb
xor
test
inc
add
xor
mov
add
and
mov
jb
mov
add
test
dec
pop
mov
pop
jno
nop
add
add
push
and
mov
iret
lret
dec
popa
push
sbb
add
mov
imul
pop
pop
mov
insb
out
mov
jp
sarl
lods
icebp
loopne
or
lahf
in
and
mov
add
inc
xchg
add
daa
lods
mov
loop
add
add
mov
add
fsub
push
ds
add
xchg
lods
int
cmp
and
xlat
add
jno
add
les
dec
xor
cld
cmp
hlt
add
pop
adc
bsf
jno
test
loop
add
mov
xchg
add
test
std
dec
cmp
out
add
repnz
adc
rep
add
add
xchg
inc
daa
fmull
adc
cmpsb
add
int3
sub
loopne
orl
jmp
inc
add
add
mov
add
dec
nop
add
add
add
mov
add
add
cmpsb
add
jno
ja
jb
sbb
adc
mov
xor
pushf
or
inc
hlt
add
add
scas
cltd
ret
movb
mov
movb
sub
jo
fisubrs
sub
fimuls
add
lret
loope
add
std
fldt
divl
popf
xor
out
fidivl
and
mov
mov
xor
mov
xor
and
xor
xchg
xor
mov
cs
add
pop
dec
clc
add
mov
add
cmc
in
add
or
jmp
add
sub
add
rolb
or
out
mov
clc
fcoms
add
lea
add
add
in
pusha
add
inc
mov
add
addb
add
lea
or
rolb
lock
add
add
add
cmp
vmwrite
push
add
sarl
addb
pop
sub
add
in
ret
insb
pop
mov
scas
mov
aaa
pop
insl
mov
add
mov
cmp
sub
xchg
add
add
mov
inc
add
int3
shll
cld
mov
inc
adc
mov
cmpsl
stos
rolb
jp
push
add
sub
xor
loop
xchg
add
inc
sbb
add
ds
or
enter
xchg
mov
add
outsb
push
xchg
sbb
dec
xchg
mov
scas
cmpsb
add
add
xchg
lods
pop
popf
iret
repz
add
mov
add
xlat
mov
add
mov
mov
push
add
push
pop
stos
jnp
add
add
add
add
sti
or
add
fcoml
sub
add
stos
push
add
paddsw
mov
push
add
pop
or
std
mov
ljmp
add
push
add
adc
in
mov
add
add
data16
ret
push
xchg
popa
pusha
add
add
js
add
adc
iret
out
stos
rcll
jp
mov
xchg
add
call
daa
outsl
lock
push
and
add
into
jle
or
int
add
xchg
mov
lcall
xchg
mov
add
and
mov
iret
mov
aas
inc
add
fimuls
dec
cmp
add
add
add
add
gs
in
push
js
stos
movb
imul
sbb
shrl
les
adc
add
enter
dec
rolb
mov
fwait
inc
add
xchg
inc
pop
cmpsl
jge
mov
aas
popa
mov
inc
pop
call
gs
sarl
pop
loopne
add
stos
cmp
out
test
inc
pop
fisttpl
add
bound
mov
out
data16
cmovle
add
xor
adc
cmp
add
push
into
roll
int
imul
add
fisubl
adc
pusha
add
sbb
mov
mov
lods
aas
fucom
imul
add
xor
cltd
pop
jge
xor
mov
add
add
mov
inc
add
add
or
ljmp
rolb
mov
add
cmp
add
movsl
fsubrs
push
dec
adc
popl
mov
das
nop
add
add
nop
add
add
mov
lret
cmc
dec
cmc
jmp
icebp
cwtl
mov
cmp
inc
add
mov
add
jmp
push
test
or
inc
add
jae
add
push
dec
sti
add
cmp
int
addb
cmp
lods
fs
add
or
add
and
imul
add
fsubrl
aam
test
dec
dec
push
add
dec
sbb
add
popa
out
lods
mov
add
pop
dec
dec
lret
jo
xor
jns
add
movsl
mov
xchg
add
xchg
add
add
test
outsb
mov
mov
fcoms
leave
sbb
mov
movb
add
ds
sbb
inc
test
aam
movsl
hlt
add
mov
add
mov
imul
add
rolb
xor
pop
nop
add
push
add
jb
loope
das
mov
add
add
adc
sbb
pop
or
add
add
mov
add
fwait
sub
stc
push
add
push
add
add
sbb
and
lcall
stos
dec
sbb
add
xchg
add
jle
add
add
pop
mov
cmp
test
xchg
add
dec
push
or
outsl
lods
xchg
add
loopne
jnp
add
mov
add
aas
sahf
mov
jnp
out
cmc
pop
and
xor
or
add
mov
inc
add
sub
dec
sub
add
xchg
test
or
add
icebp
lret
rolb
scas
jge
add
mov
lahf
cli
lods
pop
test
adc
enter
add
add
andl
add
out
push
adc
inc
movsl
and
mov
add
jmp
test
mov
sti
or
scas
mov
dec
lcall
push
cmc
hlt
add
add
xor
loopne
mov
ds
pop
jg
fwait
push
clc
xchg
mov
jmp
add
add
in
push
or
add
add
add
mov
sar
jb
lods
xor
push
faddl
cli
loopne
mov
test
je
testb
int
or
add
mov
xchg
add
lds
into
jne
inc
add
add
pop
dec
mov
test
add
push
push
add
cwtl
lods
enter
ljmp
pop
clc
inc
add
sub
push
add
push
sbb
mov
outsl
lahf
add
pop
lds
jne
or
and
jecxz
inc
cli
jle
add
add
js
xchg
mov
fistl
add
add
add
add
in
sub
add
add
mov
add
sbb
mov
add
add
add
add
rolb
xor
stos
faddp
mov
rolb
jge
xchg
sti
stos
movsb
add
inc
add
loopne
pop
jge
add
hlt
add
xor
add
adc
rolb
mov
add
rolb
bound
mov
js
test
scas
out
roll
mov
stos
jb
sub
mov
fwait
les
pop
loope
add
adc
js
repnz
add
hlt
add
add
mov
adc
add
push
adc
lea
cmp
aaa
push
enter
inc
add
push
add
mov
and
mov
add
mov
int
pop
sahf
inc
add
add
dec
sub
pop
test
loopne
push
add
add
and
mov
add
add
pmulhuw
je
dec
lods
cmp
mov
sub
adc
push
mov
aad
mov
add
lds
int
cmp
mov
lret
add
sbb
add
or
add
dec
add
gs
fwait
ret
cmpsb
add
and
leave
arpl
mov
xchg
inc
add
or
jo
cwtl
lea
pop
mov
sbb
add
repz
data16
cmp
les
aaa
rolb
addb
add
pop
icebp
lods
adc
sahf
jg
add
popa
andl
ljmp
mov
addb
dec
mov
rolb
jbe
sbb
lcall
xchg
add
xchg
mov
addb
lods
loopne
sbbl
imul
mov
xchg
or
mov
sbb
scas
hlt
add
loop
xchg
xlat
es
add
adc
dec
sub
add
adc
leave
in
scas
imul
inc
add
add
and
pop
xor
stc
addb
test
inc
add
sbb
add
push
add
addl
jae
cmp
stc
inc
add
add
mov
add
jl
add
das
in
pushf
mov
add
das
sbb
add
icebp
push
add
fstps
pop
xchg
add
push
scas
data16
add
mov
add
hlt
add
out
jb
int
push
push
add
push
add
add
gs
add
add
add
lahf
inc
ret
addb
add
add
in
sbb
add
fsin
or
add
testb
push
add
pop
lods
jb
mov
rolb
add
pop
pop
push
adc
pop
pop
inc
out
jae
add
add
pusha
add
push
add
add
rolb
push
mov
sti
rorl
cmpsl
cs
add
mov
lret
std
xor
push
icebp
out
xor
mov
mov
add
add
lods
cltd
ja
out
sub
aam
sbb
mov
xor
add
and
mov
sahf
push
cmp
ljmp
mov
or
sahf
repz
int3
mov
repnz
icebp
js
and
in
movsb
add
adc
sbb
cs
jle
rolb
gs
mov
fadds
pop
xor
test
jo
ficompl
lock
addb
fcoms
sti
call
add
ret
adc
add
add
mov
sbb
rolb
inc
leave
jl
enter
or
adc
push
mov
jno
in
scas
inc
add
mov
mov
out
cwtl
dec
jle
push
add
outsl
shll
push
int
add
add
aaa
test
add
add
mov
mov
add
sbb
lock
inc
add
ljmp
fdivrs
scas
push
add
dec
aam
xor
xchg
add
mov
lret
stc
pop
dec
jb
xchg
add
sahf
inc
add
and
mov
int
or
popf
hlt
add
lret
add
cmp
cli
xchg
mov
push
add
aam
test
scas
popf
test
xchg
and
mov
xor
mov
add
movsb
add
add
jbe
mov
xchg
add
iret
adc
or
pand
and
mov
inc
add
cmp
add
xlat
icebp
mov
add
fbld
mov
imul
add
sub
and
cmp
add
add
int3
and
mov
inc
inc
add
adc
pop
daa
jbe
movsb
add
add
insl
sub
mov
in
fbld
cmp
sbb
lods
testb
lds
daa
sbb
add
pop
stos
push
add
jmp
mov
add
jle
sub
insl
add
loopne
or
call
add
out
stos
add
cmc
push
add
add
mov
mov
add
lods
rolb
loop
mov
int
jp
test
dec
sub
sahf
xchg
cltd
mov
test
xchg
dec
daa
jno
add
mov
mov
push
add
add
mov
add
add
mov
cmp
xchg
add
sub
cmp
add
mov
inc
add
jg
add
mov
add
into
inc
add
add
pusha
add
add
int3
cmp
iret
and
ret
and
jg
add
pop
mov
in
fistpl
cmp
out
xchg
lret
add
and
lret
addr16
mov
add
add
jne
xchg
jne
aas
pop
sub
add
mov
pop
cwtl
mov
inc
mov
andl
sahf
addl
add
xor
add
pop
xchg
pop
dec
repz
add
pop
ja
mov
add
leave
movsl
mov
add
push
lock
lods
aad
add
pop
ss
add
out
imul
pop
mov
push
push
add
dec
push
repz
bound
mov
jle
adc
and
mov
cli
data16
add
arpl
add
mov
movb
pop
orl
mov
sub
int
add
add
add
or
add
outsb
test
call
lcall
sub
lret
add
add
and
cltd
testb
popa
pop
pop
fcmovnb
add
add
test
lret
icebp
add
insl
push
movb
mov
adc
leave
int3
test
add
dec
ja
add
add
jmp
add
mov
psrlq
cltd
xor
mov
add
xchg
out
xchg
add
jg
ret
stc
add
mov
or
push
add
add
jg
movsl
rolb
add
test
cmp
sahf
test
lahf
in
and
mov
cmp
jl
fwait
adc
out
sbb
pop
jl
in
jl
add
add
frstor
add
sti
popf
mov
mov
mov
add
test
ret
mov
add
jge
jge
mov
or
add
aad
mov
add
xchg
stos
xchg
add
add
add
std
pop
or
aas
pop
mov
fdiv
add
sbb
fsubrs
and
pusha
add
add
mov
add
ljmp
adc
add
xor
add
cmp
xchg
pop
outsb
decb
mov
jp
mov
and
fldenv
add
add
out
loope
stos
addb
jo
jecxz
add
adc
jp
fisubrl
push
add
add
fwait
imul
sahf
lret
adc
outsl
pop
testb
popf
sub
mov
dec
xchg
inc
inc
add
mov
pop
adc
jae
add
inc
add
stos
mov
add
add
mov
cld
xchg
pop
bound
mov
add
dec
xchg
rol
add
xchg
pop
mov
push
out
lock
mov
add
push
mov
adc
loop
cwtl
push
out
and
push
add
lods
xchg
flds
and
xchg
add
mov
lcall
add
dec
incb
lods
and
in
movsb
add
mov
lret
add
inc
lock
sbb
insl
mov
xchg
in
cli
dec
addr16
mov
add
add
add
add
imul
mov
repnz
je
out
pop
sbb
enter
lahf
add
mov
dec
rolb
adc
add
ret
push
or
add
add
repz
xor
mov
lock
stos
push
add
add
add
mov
xor
sub
pop
jecxz
repnz
pop
inc
add
jnp
js
jp
add
xchg
les
xchg
movb
js
adc
icebp
mov
icebp
lret
xor
fxch
pop
push
add
cltd
icebp
pop
dec
popa
xchg
add
mov
stos
ds
add
add
hlt
add
jmp
pop
jp
add
or
bound
mov
add
inc
ljmp
les
push
add
add
adc
mov
lods
cmpsl
into
cmp
std
daa
out
nop
add
push
fcomps
mov
mov
pushf
push
xchg
les
cmp
sub
add
mov
ret
pop
into
or
adc
adc
add
data16
cmpsb
add
xchg
add
jmp
addb
add
add
add
jnp
add
lret
cmc
insl
sub
xchg
jno
xor
cmp
cmp
das
add
xchg
inc
insb
cld
mov
inc
add
add
out
fwait
hlt
add
jo
pop
or
push
repz
movsb
add
stos
dec
les
inc
add
or
add
pusha
add
mov
mov
addb
lret
add
mov
xlat
incl
mov
pop
push
add
clc
gs
sub
loope
addb
add
and
popf
cmp
movsb
add
scas
and
mov
lea
dec
mov
cmpl
add
add
mov
ficompl
in
aas
incl
add
inc
cmpsb
add
add
loopne
enter
xchg
mov
cmpsb
add
add
cmpsl
in
mov
out
sub
out
xchg
add
add
push
icebp
es
ss
sbb
fistpl
jecxz
ret
add
push
push
lea
aas
testb
cmp
add
mov
adc
iret
les
lods
and
shrl
mov
mov
dec
daa
rcrl
mov
pop
jbe
add
add
add
pusha
add
add
decl
stos
pop
movb
jb
xchg
and
mov
addb
add
add
mov
leave
jp
ficoml
popf
inc
add
mov
jns
add
cmp
add
out
add
add
lea
add
add
jmp
xor
daa
out
pop
in
dec
lea
push
add
add
jne
out
js
add
fucomi
mov
jo
ds
mov
les
and
add
add
mov
out
inc
add
xchg
jle
add
add
movsb
add
xlat
xchg
sbb
xor
jp
cld
imul
jecxz
mov
add
mov
adc
cmp
add
sbb
jne
add
mov
mov
add
cmc
inc
addb
into
xor
push
adc
lods
xchg
add
arpl
fmull
ss
mov
jg
jns
test
movsb
add
outsb
dec
xor
add
add
add
or
jb
scas
adc
xchg
add
add
add
add
add
test
push
add
je
fcomps
das
cmpsl
fisubrs
add
jl
insl
xlat
test
mov
add
cmp
push
fsubr
inc
xor
sub
js
outsb
out
jnp
push
fsubr
sbb
add
xchg
cmp
loop
and
mov
xchg
outsl
mov
rolb
xchg
add
inc
sub
add
jp
jae
and
mov
xchg
sti
bound
mov
cmp
addb
add
test
mov
mov
adc
pop
push
movsl
icebp
mov
add
enter
mov
or
insl
pop
push
out
test
in
adc
loopne
add
mov
fldcw
ja
add
push
add
jns
stos
inc
mov
enter
and
mov
add
rcrl
fists
and
test
sbb
rolb
add
add
test
ljmp
adc
push
add
add
fsubrs
pop
xchg
add
mov
or
mov
stos
and
mov
jge
add
push
add
sbb
pusha
add
cmp
jge
mov
adc
ja
xor
adc
cld
jl
mov
add
add
or
add
lock
and
mov
out
add
add
and
dec
aaa
sahf
mov
add
add
add
pop
and
add
push
mov
jmp
cmp
add
movb
movsb
add
ret
inc
add
xchg
add
jmp
add
enter
cs
mov
add
xchg
xchg
push
xor
adc
mov
add
add
add
xchg
add
add
mov
add
xchg
lret
push
sub
pop
jg
mov
jne
add
add
cltd
cwtl
sub
add
add
and
mov
add
dec
decl
add
dec
mov
imul
movsb
add
mov
xchg
sbb
inc
add
add
sbb
stc
mov
out
xchg
and
mov
cmp
in
out
sub
js
sub
shr
mov
add
jns
add
mov
add
jbe
or
add
add
addb
jnp
mov
push
add
and
add
pop
xchg
and
mov
aad
addb
int
add
xlat
pop
mov
movb
shrl
add
mov
imul
repnz
xchg
scas
outsb
aas
filds
mov
or
add
xchg
mov
les
push
pop
movb
add
stos
cmp
xlat
push
add
pusha
add
add
test
imul
xchg
add
add
pop
fimull
lock
add
dec
addb
add
inc
add
les
sbb
add
add
add
add
mov
ffree
mov
sub
jae
add
lds
mov
add
fwait
pop
push
add
inc
add
ret
add
push
mov
jl
sti
push
mov
xchg
add
jg
add
push
jecxz
shll
add
sub
mov
add
add
sub
add
xlat
es
add
repnz
pusha
add
sbb
addb
cmpsb
add
out
jp
stos
dec
jb
std
mov
mov
data16
mov
sbb
add
and
xchg
in
push
addb
jne
add
xchg
bound
mov
pop
js
add
addb
add
add
inc
add
or
xor
jo
adc
pop
inc
mov
and
aad
cmp
add
movsb
add
js
push
inc
add
movsl
cmp
add
jne
add
add
add
iret
add
mov
and
mov
cmp
push
add
dec
scas
stc
sbb
mov
mov
pop
push
add
sub
add
dec
xchg
sub
add
add
add
xor
test
les
dec
cmpsb
add
mov
stc
mov
mov
mov
cs
sbb
pop
mov
sarl
inc
add
leave
fwait
clc
lahf
aad
add
cmc
xor
xor
jae
add
fsubl
add
add
aaa
push
sub
xchg
add
push
test
mov
pop
loope
ja
les
push
add
mov
loop
nop
add
inc
xchg
add
adc
mov
inc
sbb
mov
adc
fwait
mov
test
jmp
add
jbe
and
pop
push
add
and
mov
icebp
pop
lcall
cmc
stos
push
add
fs
hlt
add
add
add
jl
inc
rolb
jmp
or
add
lea
xchg
in
mov
add
into
cmovg
fwait
ds
pusha
add
add
add
sbbl
sub
add
add
rol
sub
mov
in
add
jg
and
das
out
pop
pusha
add
add
add
sti
mov
movsl
inc
add
xlat
xor
lea
dec
or
jge
jno
add
add
add
add
sub
mov
daa
ret
add
fadds
jbe
pop
stos
daa
xor
push
movsl
mov
push
sub
dec
in
cmp
jl
test
loopne
rolb
std
decl
add
fdivs
cltd
inc
add
add
inc
push
add
xchg
pop
das
jl
add
fisttps
lret
addr16
jl
mov
add
sti
aas
sbb
aam
stos
mov
rorl
ja
xchg
push
add
sub
cli
jge
add
add
mov
pop
loope
add
add
add
push
add
add
adc
mov
cwtl
pop
xlat
aad
cmp
jno
lods
push
inc
add
push
mov
add
add
add
push
add
add
sbb
in
out
push
in
cltd
cli
aas
dec
insb
scas
jp
add
dec
mov
add
je
imul
push
add
add
mov
add
leave
scas
loopne
mov
cmp
adc
icebp
jecxz
jle
and
mov
test
inc
add
add
sbb
and
mov
add
add
mov
out
jle
add
mov
add
mov
mov
rcr
data16
add
clc
mov
or
lret
jne
dec
lahf
push
add
add
add
push
aad
xor
rcl
dec
js
test
and
inc
add
insl
xchg
xor
xchg
add
fcmovnb
add
xchg
mov
jae
lret
call
aad
iret
in
int
ret
loop
addl
adc
pop
jno
pusha
add
xlat
mov
addr16
rcl
test
in
push
stos
fimuls
add
mov
inc
cmp
mov
jge
pop
add
dec
xor
popa
and
pop
out
cmp
and
add
cmp
add
mov
loopne
push
pop
mov
cmp
add
mov
add
sub
add
mov
sub
add
inc
add
lods
lods
adc
cmp
outsb
xor
dec
mov
add
mov
add
mov
add
aaa
xchg
add
xchg
dec
push
add
add
sbb
add
lret
mov
fiadds
add
add
mov
add
imul
push
or
pushf
jmp
add
lock
movb
rolb
xchg
pop
fisttpl
ret
lret
in
push
add
add
jb
xor
dec
sub
sub
out
mov
sub
stos
addr16
int
mov
add
sub
je
out
cmpsl
stos
xor
ds
pop
mov
add
nop
add
add
mov
sub
sub
dec
movsb
add
add
add
inc
pcmpeqw
inc
addb
sbb
push
ret
imul
add
pushl
sub
outsl
adc
ficompl
inc
add
add
jnp
push
cltd
xor
xor
push
lret
test
data16
add
in
int
nop
add
movsl
addb
mov
fmuls
xchg
push
add
add
xor
add
scas
inc
stos
lds
add
sbb
add
add
mov
add
iret
add
add
push
add
add
sub
bound
mov
ljmp
dec
lea
cmc
jno
ret
test
add
jns
mov
pop
fnstsw
adc
inc
fisttpl
addr16
jmp
push
pop
push
cmp
ret
push
sbb
or
add
popa
cmp
xor
leave
and
xor
add
stc
mov
mov
mov
adc
movsb
add
adc
lcall
stos
dec
mov
sub
add
lds
mov
sub
jg
add
mov
jg
aas
addb
add
add
cmpsl
mov
cli
hlt
add
enter
rolb
cmp
sub
arpl
jl
arpl
add
add
add
add
add
push
insl
fmul
xchg
add
add
add
movsl
pop
adc
cmp
add
mov
cli
out
sarl
jp
rorl
jmp
jg
add
movb
add
inc
mov
mov
xchg
ficomps
add
mov
dec
cltd
aam
lock
sbb
ss
mov
or
add
add
add
sbb
pushl
imul
cmpsb
add
add
mov
jp
insl
adc
add
add
pop
pop
mov
loope
sub
mov
data16
sbb
add
sbb
data16
push
add
sub
add
add
add
mov
inc
bound
mov
gs
scas
and
add
cli
mov
mov
add
mov
out
adc
sub
add
mov
pop
pop
das
and
imul
jb
fldcw
stos
jae
add
add
mov
outsl
imul
popf
lods
push
adc
arpl
add
add
mov
hlt
add
jle
das
ret
xor
mov
adc
mov
or
add
ja
sbb
bound
mov
jne
add
pop
scas
test
add
push
adc
rcr
add
add
jns
add
call
add
iret
es
mov
testb
or
xor
inc
add
mov
adc
jo
dec
cs
push
add
add
xchg
add
movsb
add
into
cmp
aad
mov
pop
test
mov
or
push
add
in
sarl
add
add
add
bound
mov
add
add
loope
add
jne
mov
adc
and
or
stc
pop
mov
mov
scas
aad
pop
mov
push
icebp
aas
cmpsb
add
mov
sbb
dec
or
add
sbb
add
add
nop
add
fmuls
and
push
bound
mov
add
and
cld
mov
mov
add
mov
les
pushf
inc
add
aaa
dec
mov
xchg
add
push
add
jne
insl
dec
loope
dec
std
sub
add
mov
pop
lds
pushf
add
push
inc
ret
push
add
iret
and
mov
movsb
add
call
rolb
xchg
and
add
mov
dec
icebp
dec
or
mov
add
add
or
mov
add
insl
cltd
sub
subl
add
or
std
xchg
add
mov
cs
ja
fwait
movsl
inc
pusha
add
mov
mov
sbb
mov
sbb
add
add
add
mov
jp
stos
ret
inc
add
add
cmp
jmp
add
repnz
loop
arpl
lahf
cwtl
dec
out
rolb
pop
test
jmp
add
cmpsb
add
pop
jl
aaa
sub
xor
jns
test
add
push
xchg
add
xor
jae
sahf
pop
rolb
xchg
add
bound
mov
pop
add
add
add
jmp
xchg
mov
aas
sub
add
xlat
adc
and
mov
mov
loopne
lcall
test
xor
aam
nop
add
dec
ja
add
xchg
lds
add
sbb
add
add
add
cli
fcomps
loop
ljmp
add
mov
lods
in
xchg
add
mov
repnz
jmp
scas
adc
pusha
add
rolb
jg
inc
add
mov
add
inc
add
int3
testl
data16
mov
call
add
movb
daa
popf
mov
lea
add
mov
add
or
adcl
rcll
insl
sub
xchg
sub
cmp
loope
add
aad
add
add
add
mov
adc
add
out
fwait
mov
and
imul
loop
pusha
add
xchg
int
cli
jns
add
mov
call
add
add
add
add
add
mov
imul
dec
inc
mov
cmpsl
pop
mov
inc
add
adc
lret
ljmp
addr16
mov
ds
sarl
or
inc
add
sarl
insb
mov
xchg
add
lods
stos
inc
add
add
mov
ret
mov
hlt
add
add
repnz
push
add
push
add
add
xor
add
ss
in
es
sbb
dec
leave
xchg
add
jmp
inc
sbb
add
xchg
stc
sub
shll
js
fwait
and
add
push
mov
push
jo
cmc
xorl
mov
ljmp
sbb
mov
mov
xchg
add
test
add
data16
pop
mov
lds
mov
mov
push
rolb
or
add
in
sub
mov
ss
push
sbb
pusha
add
mov
test
sahf
aaa
out
sti
das
jnp
mov
push
add
imul
fidivrs
mov
cmp
rolb
fnstsw
add
mov
dec
mov
lahf
mov
insb
pop
push
add
add
cmp
add
stos
dec
rolb
dec
orl
push
add
add
mov
imul
inc
dec
lahf
fwait
push
into
dec
lret
shld
add
xchg
add
adc
add
lods
cld
xchg
jl
out
add
dec
dec
testb
sbb
lds
push
add
jl
cmp
add
add
push
mov
test
jnp
add
hlt
add
mov
ljmp
mov
leave
mov
pop
imul
sub
inc
add
test
jbe
cli
ficoms
jg
add
imul
add
mov
mov
out
repz
add
fwait
stos
xor
int3
xchg
add
mov
loope
ja
add
mov
push
xchg
sbb
xor
lock
add
leave
jmp
push
add
push
repnz
repnz
pop
push
add
lcall
add
add
mov
mov
add
sub
add
mov
fisubs
and
mov
dec
sub
mov
data16
dec
xchg
add
out
movb
inc
addb
cmpsb
add
add
testb
sbb
mov
ja
mov
stc
in
rolb
inc
add
sub
adc
pop
mov
push
mov
push
mov
ret
mov
mov
jp
add
in
lea
into
adc
pop
xchg
xchg
mov
cmp
xchg
inc
mov
mov
mov
insb
inc
add
push
add
divl
add
mov
or
dec
or
add
sub
int3
jg
add
test
ret
cmp
imul
add
js
add
xchg
subl
sbb
or
add
mov
adc
arpl
add
cmpsl
mov
dec
cwtl
test
mov
push
inc
add
add
out
and
mov
loope
sahf
ret
adc
insl
jnp
adc
cmp
inc
add
pop
cmp
xor
dec
popa
ficompl
add
fsubrl
add
inc
add
add
cmc
aad
add
lret
test
outsb
rolb
nop
add
add
add
sbb
add
mov
ljmp
sbb
bound
mov
add
add
xchg
add
stos
mov
out
test
add
aas
jecxz
add
icebp
mov
pop
icebp
in
es
sahf
fcoml
dec
lods
call
cs
pushf
outsb
or
movb
sub
and
dec
and
test
test
sub
lods
mov
sarl
push
add
testb
add
add
fsubrl
mov
add
add
add
add
bound
mov
sti
movsb
add
or
and
jae
mov
add
add
pop
sahf
jo
movb
dec
mov
ljmp
add
leave
lahf
mov
fbstp
cmc
std
jp
and
jbe
sub
test
xchg
outsb
xchg
add
jge
int
pop
scas
mov
mov
rolb
xor
dec
pop
inc
add
testb
mov
sarl
dec
sbb
pop
push
add
jbe
jl
idivl
fistpl
add
pop
mov
cli
in
inc
add
and
mov
add
add
jg
add
add
xor
add
sub
enter
lret
inc
push
cmp
sbb
add
repz
lret
adc
mov
test
ficompl
xchg
push
add
xchg
add
daa
dec
bound
mov
daa
push
add
pop
test
add
jmp
pop
mov
inc
pop
repnz
add
mov
les
lcall
push
add
or
push
add
cmp
push
iret
out
mov
and
mov
xor
add
add
mov
inc
cli
and
add
mov
push
add
xchg
add
data16
mov
add
inc
mov
push
add
je
bound
mov
iret
add
mov
jg
push
add
add
lods
sbb
push
inc
xchg
mov
add
lea
stos
into
dec
ss
add
or
or
add
loopne
sbb
add
mov
pusha
add
sub
pop
or
roll
addr16
pop
cmpsb
add
add
fidivs
add
xchg
lret
ja
add
cmpsl
lea
add
and
add
add
fsts
pop
insb
out
mov
push
cld
sahf
xchg
stos
dec
insl
xor
sti
mov
mov
pop
out
ljmp
or
mov
movb
or
add
add
adc
shll
mov
imul
push
add
es
add
push
mov
add
add
xchg
mov
xchg
jns
jnp
push
cli
icebp
sub
pop
mov
add
xor
mov
inc
add
fisubs
sub
add
add
add
out
cli
out
adc
add
sub
insb
and
mov
inc
jge
add
ficomps
push
add
jbe
mov
lahf
dec
mov
loop
outsb
cmp
add
sub
add
mov
jg
hlt
add
lcall
add
not
add
dec
lret
dec
push
add
fs
xor
mov
xor
jnp
fstp
pop
or
cmp
out
pop
or
add
pop
sub
add
cld
aad
int
lret
aaa
jo
dec
es
mov
inc
and
mov
cmp
sbb
xchg
add
xor
add
adc
daa
mov
add
push
push
add
sub
mov
add
inc
jp
stos
insb
icebp
or
push
add
pusha
add
add
out
lds
xor
dec
mov
leave
jns
add
sub
lret
inc
arpl
push
add
out
add
add
int
add
add
mov
add
in
punpckhdq
add
pop
pushl
div
std
push
add
add
jno
rolb
add
add
loope
mov
mov
and
in
fwait
inc
aam
div
add
fisttps
add
lcall
iret
xor
lock
mov
mov
jnp
inc
push
out
pmaxub
scas
aad
mov
sub
sub
add
and
add
lods
popf
addb
sbb
cmc
test
xor
add
mov
and
add
add
mov
add
adc
and
add
mov
stos
cmp
sahf
pushf
lret
mov
arpl
inc
add
sarl
inc
xchg
pop
in
sbb
nop
add
adc
pop
or
jno
add
add
sarl
adc
daa
lret
push
add
dec
sahf
add
mov
jno
add
call
mov
inc
add
fxch
add
sbb
add
add
insl
push
add
add
add
mov
sbb
pop
pop
loope
fsubp
add
sub
xor
xor
stos
xchg
imul
pop
fiaddl
add
mov
iret
dec
rolb
jecxz
add
lahf
adc
enter
fwait
mov
mov
add
mov
outsb
aam
nop
add
cmp
add
mov
push
add
add
push
add
sbb
mov
add
dec
popa
pop
push
cmpsb
add
sbb
movb
add
add
aam
mov
sub
sbb
cmovno
pop
mov
das
lods
rcll
sub
pop
mov
loope
push
sti
xchg
adc
xor
mov
nop
add
add
dec
aas
nop
add
add
cmp
add
js
test
add
lea
dec
mov
addb
scas
add
sbb
add
sub
add
add
cmp
bound
mov
add
push
add
mov
lea
add
add
add
inc
add
add
mov
add
add
sbb
mov
cmc
addl
insb
inc
push
and
mov
cmp
pop
mov
pop
dec
jp
adc
test
or
inc
add
dec
jnp
loop
add
mov
fcmovb
popf
adc
xchg
or
add
scas
sbb
jae
lods
ljmp
out
lcall
loopne
jmp
popa
ja
pusha
add
mov
jb
mov
add
mov
add
cs
mov
cmc
lods
pop
fldl
jl
cmp
add
add
add
add
fadds
rolb
testb
scas
sahf
jb
pop
je
sbb
add
add
add
mov
mov
je
sub
pop
int3
lods
sub
add
movsl
dec
ds
mov
add
xchg
add
pop
fcomps
jbe
les
jns
iret
arpl
rolb
and
mov
cmp
add
dec
std
je
push
add
mov
xorl
add
xor
add
sahf
mov
jno
add
adc
stos
mov
add
add
bound
mov
add
add
sbb
cmp
cmp
in
aaa
or
adc
in
popa
data16
sbb
enter
jnp
add
jp
pop
clc
pushl
fadds
mov
mov
add
xor
pop
das
pop
scas
cmp
pop
cmp
jmp
add
testb
insb
cmc
outsl
lock
dec
loopne
mov
loopne
mov
je
stos
dec
sub
fcompl
mov
inc
add
jle
jmp
inc
add
sti
add
add
add
and
repnz
aad
int3
out
jno
inc
add
add
frstor
out
les
leave
xor
xchg
add
mov
dec
aaa
push
rolb
push
add
lea
call
ss
sub
sub
sbb
int
add
xchg
add
mov
mov
and
pushf
fcomps
lret
test
sub
inc
add
and
add
xchg
lret
jecxz
add
add
bound
mov
jle
in
aaa
pop
ljmp
dec
stc
stos
jb
add
sub
dec
push
push
je
cmc
dec
jno
scas
inc
add
add
je
sub
add
push
push
add
inc
psubw
inc
add
sub
mov
add
pusha
add
inc
cmc
daa
cmp
xor
add
fsubl
add
cmp
dec
ds
adc
subl
nop
add
pop
jno
push
enter
add
add
add
pushf
jecxz
jbe
mov
pop
jge
aas
fidivl
cmp
add
inc
add
xor
push
mov
in
mov
das
mov
push
add
add
rolb
jnp
add
adc
jno
jne
lcall
pop
pop
scas
xlat
or
add
lds
scas
push
lock
jmp
add
hlt
add
add
int
add
add
test
aas
mov
dec
js
rolb
xchg
aad
pusha
add
sbb
jbe
dec
cmp
push
add
repz
mov
inc
mov
cli
test
and
add
cmpsl
mov
daa
pop
mov
jle
lock
add
add
outsb
addb
jns
add
ficompl
add
add
mov
fs
mov
add
add
ja
add
sbb
out
and
push
add
cld
into
jge
mov
add
lea
mov
fimull
jle
or
movl
daa
sub
xchg
mov
add
ret
add
or
mov
push
and
mov
xor
out
xlat
sahf
push
testb
jb
ljmp
xor
dec
jle
add
add
add
add
mov
add
inc
cwtl
mov
jmp
mov
movsl
cli
add
stc
repnz
add
mov
push
add
add
pop
imul
push
or
or
pop
cmp
pop
push
and
stc
mov
mov
cmp
mov
roll
fwait
mov
lea
out
mov
leave
js
adc
dec
pop
add
mov
push
add
mov
inc
scas
nop
add
jl,pn
add
out
or
mov
jmp
cmp
adc
jmp
push
add
xor
sbb
cld
lahf
push
push
jmp
sub
push
push
add
mov
aad
bt
lahf
nop
add
pop
pop
addr16
pop
xor
lds
mov
and
mov
jo
testb
call
mov
jns
push
add
add
dec
cld
pop
gs
rolb
cwtl
std
cmp
add
pushf
fwait
inc
add
repnz
popa
pushf
push
lea
popf
ret
pop
in
jecxz
add
lds
ret
push
add
lret
push
dec
mov
add
jge
and
mov
mov
jno
test
aad
leave
pop
push
lods
cmc
push
add
jae
inc
add
push
push
add
add
sub
in
je
push
icebp
and
rolb
scas
cmpsb
add
leave
dec
mov
outsb
sub
jns
adc
scas
mov
mov
addl
sub
add
mov
xchg
add
loopne
mov
jb
lods
xchg
dec
mov
iret
fisttps
mov
xor
arpl
xchg
mov
movsl
stos
enter
xchg
bound
mov
outsb
aas
sahf
dec
jo
insb
pop
xor
cmp
add
sbb
rolb
out
loop
jg
adc
and
add
xchg
jno
mov
test
lds
inc
iret
sub
sbb
jp
pop
push
add
sti
aad
les
ret
cld
sub
jno
add
add
mov
cltd
lahf
int
rolb
out
in
add
add
jns
add
lods
add
cltd
jecxz
fwait
sahf
push
add
jno
je
pop
jl
add
inc
pop
mov
add
loope
add
fstps
incl
add
loopne
push
mov
push
add
fs
addb
push
lds
mov
or
xchg
add
stos
leave
xlat
jbe
push
add
test
sbb
rolb
in
push
xor
jns
mov
sahf
cmp
lock
fdivrs
add
or
xchg
add
bound
mov
lcall
adc
shl
add
ljmp
add
popa
mov
add
inc
add
daa
pop
sti
pop
xor
jp
add
call
jg
loopne
addb
add
in
cmp
xchg
pcmpeqb
mov
push
sbb
cmpsb
add
addb
add
ljmp
rcrl
push
mov
fisubrs
cld
mov
xlat
scas
sti
mov
fsub
add
mov
dec
cmp
cwtl
add
jp
push
jo
xor
lock
mov
mov
rolb
jb
stos
stc
push
sbb
ret
mov
pop
into
xchg
sbbl
jne
out
popa
stos
jp
add
lods
addb
nop
add
add
push
cmpsl
fsubrp
addb
mov
push
mov
add
add
sub
sbb
dec
or
mov
test
and
mov
sub
jns
in
mov
mov
lea
xchg
and
adc
pusha
add
jbe
loopne
mov
pop
inc
or
cmp
jo
jae
lret
imull
fidivl
lods
mov
getsec
sbb
in
xchg
test
jno
dec
mov
add
push
lahf
lret
mov
popf
into
pop
dec
xchg
std
push
add
add
cli
ror
stos
in
lock
aas
inc
add
stos
pop
push
jmp
sub
dec
push
dec
sbb
loop
fadds
or
add
gs
xor
xchg
add
pop
lods
loope
test
mov
lret
inc
add
pop
pop
je
push
add
cmp
int
add
mov
lods
loop
cmc
push
add
jns
mov
sbb
jecxz
mov
pop
push
pop
mov
fiadds
das
fldt
loopne
inc
testl
xor
push
add
adc
dec
jns
scas
dec
mov
sub
nop
add
cltd
addb
add
sub
inc
cld
mov
mov
adc
add
arpl
dec
jb
or
xor
sub
pmuludq
cwtl
sbb
add
test
add
insl
mov
add
rolb
cmc
xchg
rolb
add
aam
iret
or
das
and
cmp
dec
xchg
sub
in
add
ret
loope
sub
inc
add
js
add
bound
mov
mov
push
loopne
jl
in
jnp
cld
push
add
mov
add
mov
cmove
ja
add
scas
insl
loop
aam
xchg
add
pop
cmp
bound
mov
xorl
adc
ret
cmc
cmc
out
fbstp
fsubrs
int
mov
ret
test
movb
jle
cli
imul
mov
pand
add
xchg
add
sbb
cmp
rolb
lret
add
push
dec
and
subl
fdivrs
pusha
add
add
mov
inc
rolb
sbbl
add
add
add
rolb
push
sub
add
mov
inc
aam
xlat
fsubl
repz
movsl
cmp
add
mov
pushf
add
add
add
aas
mov
dec
sub
cmp
outsb
cs
add
mov
jg
cmpsl
cld
inc
xchg
mov
rolb
add
lock
add
add
gs
pop
cmpsb
add
or
add
add
xor
mov
insb
jne
push
add
lock
push
loopne
pop
sbbl
dec
scas
adc
fucomp
push
push
pop
stos
cmp
mov
icebp
sub
mov
sub
sti
sbb
mov
mov
add
fwait
icebp
or
rorl
ljmp
je
xchg
cmp
pop
daa
ljmp
xchg
mov
add
and
dec
jnp
inc
mov
mov
or
jbe
imul
into
jle
add
mov
add
add
jb
fdivl
loopne
je
xor
aad
jge
sub
add
pop
jbe
pop
mov
add
inc
shll
sbb
add
jl
test
inc
add
xor
sub
fs
pmuludq
lea
addr16
sbb
lea
icebp
flds
pop
mov
addb
adc
push
push
cltd
mov
sub
jecxz
stos
mov
add
mov
xor
jbe
rolb
ds
xor
les
stos
or
add
add
xchg
add
arpl
add
and
mov
mov
pop
adc
jo
jle
sbb
push
or
pop
add
mov
imul
lods
xchg
setnp
or
dec
inc
add
jb
or
loope
out
jae
outsl
dec
adc
xchg
add
rcr
mov
cmp
rol
ja
add
pop
ja
add
ret
enter
jmp
movsl
jl
add
stc
add
std
bound
mov
mov
pop
scas
pop
test
fdivr
enter
add
int3
and
mov
sbb
ds
xchg
fcomps
pop
mov
popl
xlat
xor
sub
popa
cmp
add
add
inc
add
add
movsl
fdivrl
mov
cld
call
add
add
rolb
cli
fists
inc
xchg
add
rolb
add
add
mov
in
adcl
add
aam
sbb
add
jo
pop
fninit
fimull
insb
out
popf
xor
sbb
add
add
inc
test
dec
movsl
push
out
addb
pop
pminsw
stos
stos
sub
orl
push
loopne
outsb
aas
lcall
add
aam
clc
ret
cli
mov
lcall
ljmp
xor
and
mov
ret
xor
add
add
adc
and
loope
xorl
jae
add
xor
add
outsl
pushf
push
jae
add
add
js
shrl
subl
add
push
mov
shr
imul
mov
add
mov
scas
jmp
lret
xchg
mov
aad
add
dec
dec
das
fstpl
pop
ja
add
rolb
mov
add
add
mov
push
push
push
in
popa
mov
aaa
cmp
les
mov
rolb
les
ret
ljmp
sahf
dec
jno
fiaddl
mov
jmp
data16
add
xorl
jbe
fwait
xor
rolb
lret
adc
daa
hlt
add
xchg
add
enter
mov
lahf
mov
mov
push
add
add
rorl
bound
mov
popl
sbb
fiaddl
push
cmpl
add
add
add
add
mov
test
push
add
push
add
add
fwait
or
mov
pop
loop
dec
outsb
movsb
add
add
out
addr16
push
clc
cwtl
sub
mov
imul
bound
mov
cmp
cmp
add
add
mov
inc
add
rorl
add
mov
mov
pop
jge
pop
into
adc
outsl
das
push
add
add
add
sub
push
add
xchg
mov
cmc
jg
push
add
push
add
add
and
mov
add
jl
in
movsl
cmc
jno
add
movsl
mov
add
and
mov
pop
mov
add
mov
popf
pmulhw
xchg
mov
inc
mov
sahf
aam
xchg
cmp
scas
cld
mov
subl
mov
out
jnp
mov
subl
cli
pop
arpl
ds
add
add
add
inc
mov
js
addr16
cmpsb
add
mov
mov
loop
lcall
xchg
sarl
loope
jne
outsb
dec
and
mov
mov
sti
add
adc
lock
xchg
add
or
fidivl
arpl
mov
xchg
xchg
add
mov
pop
popf
jecxz
add
push
dec
in
mov
add
mov
xchg
movsl
cmp
add
hlt
add
mov
add
mov
jl
mov
add
mov
or
add
mov
inc
add
jno
je
sbb
mov
push
daa
sub
ret
add
sub
pushf
or
add
stos
mov
dec
xchg
lods
jbe
aas
adc
dec
cld
inc
add
add
movb
mov
adc
stos
mov
int
lea
fnstcw
add
das
cli
testb
in
std
pop
enter
pop
xor
cli
sbb
aas
cmp
cli
add
dec
inc
add
jmp
add
daa
fbstp
mov
push
adc
jmp
pusha
add
push
inc
add
mov
rolb
mov
mov
add
mov
stos
or
xor
xor
cmp
mov
xor
not
xor
dec
out
bound
mov
xchg
or
inc
mov
mov
lods
xor
leave
add
ljmp
add
lock
add
stc
loop
out
sti
mov
jo
ret
sub
add
add
pop
ret
adc
mov
and
mov
or
int
add
data16
xlat
mov
add
in
repz
add
fidivl
add
push
add
int
shl
pop
lods
pop
aas
add
mov
jmp
add
nop
add
add
add
adc
mov
xchg
add
icebp
mov
cmp
add
dec
outsl
mov
movsb
add
mov
mov
daa
fadds
popf
add
mov
xlat
lret
out
add
int
add
mov
push
jno
lock
sub
jo
add
mov
ret
stos
std
lds
inc
add
ret
mov
adc
jae
in
ljmp
or
sub
out
sub
xchg
xchg
add
add
pop
cli
jae
add
mov
push
add
pop
jns
add
cmp
add
add
xor
mov
pop
into
incb
ljmp
je
imul
add
add
and
add
sysenter
add
add
xchg
add
mov
popa
outsl
xchg
add
add
mov
jmp
aad
mov
add
jns
inc
aas
mov
mov
dec
mov
add
mov
mov
push
mov
add
add
mov
jb
into
sub
into
imul
sbb
pop
call
add
xchg
sysret
xor
mov
scas
and
in
repnz
in
dec
xor
jno
add
je
hlt
add
pop
mov
xchg
jmp
pushf
aad
xchg
leave
xor
adc
fs
add
mov
sarl
fadds
lahf
dec
push
add
insl
test
add
jnp
add
xchg
in
add
imull
add
mov
out
jno
out
mov
jne
mov
in
es
dec
movsb
add
outsb
jl
test
add
inc
lret
inc
add
sub
mov
add
or
adc
in
jl
and
outsb
lods
adc
addr16
in
jno
testb
jns
add
push
add
add
cmp
add
add
add
add
int
out
cwtl
or
mov
clc
dec
inc
add
pop
jo
les
std
inc
add
add
popa
test
push
add
rolb
xchg
add
mov
add
add
in
xor
lcall
leave
in
add
pop
inc
push
push
rcll
pop
mov
int
add
dec
inc
add
adc
add
popa
popa
xchg
add
push
add
mov
or
addb
add
add
das
or
jge
add
mov
add
js
push
add
add
and
mov
add
mov
mov
jbe
fisubl
add
xchg
jmp
add
add
bound
mov
add
sbb
lds
xor
lods
push
jge
lea
mov
add
adc
dec
fwait
xchg
sbb
inc
dec
test
cmp
lcall
mov
inc
fbstp
add
mov
sbb
cmp
testb
mov
adc
add
es
pop
rcr
mov
add
shrl
mov
add
add
testb
add
pop
xor
add
int
sub
jp
lret
sahf
sbb
lret
and
mov
sub
popl
outsb
movsl
popf
lock
add
add
loop
cmp
ja
ret
sbb
fcompl
dec
add
test
add
or
pop
adc
test
push
add
cmp
cmc
push
add
add
lock
fldl
insl
add
push
jge
insb
xor
add
add
pushf
test
and
scas
lods
pop
push
out
test
jp
insl
stc
jle
lret
in
sbb
jmp
inc
add
imul
mov
add
in
ret
mov
insl
cltd
rolb
lret
daa
jg
nop
add
int
add
scas
clc
mov
mov
mov
pop
rorl
add
mov
das
inc
add
add
add
movb
add
es
inc
jns
add
add
pop
add
jge
dec
mov
mull
rolb
jbe
lcall
lods
mov
cmp
add
repnz
lcall
sub
xor
testl
addr16
test
mov
jecxz
std
enter
sub
test
pop
ja
xlat
testl
add
in
sbb
pop
mov
bound
mov
add
mov
mov
adc
sub
add
add
cltd
mov
test
sbb
fldcw
sbb
add
mov
mov
out
ret
jl
mov
jnp
add
outsb
cmp
ljmp
or
pop
cld
les
loop
outsb
sbb
xor
jmp
and
mov
pop
fadds
in
loop
into
jb
pop
sub
lods
aad
inc
add
jnp
fcomps
out
cmp
inc
add
orl
jl
add
icebp
add
scas
sub
add
add
jge
sbb
fwait
pop
test
addb
imul
icebp
int
into
mov
lock
in
fdivrl
daa
inc
add
add
cmpsl
sbb
cmp
jne
add
jle
add
pusha
add
xchg
add
iret
fimuls
jne
sub
mov
fnsave
add
add
push
aas
cld
arpl
add
fiadds
mov
in
addb
jecxz
add
add
mov
fadds
add
sub
jge
or
rolb
add
cwtl
jg
insl
ret
testb
add
and
mov
jp
add
mov
out
seto
cs
clc
mov
mov
mov
inc
sbb
mov
mov
js
stc
rolb
repnz
add
test
cmc
push
add
cmpsl
pop
pop
testb
loop
ja
jecxz
sbb
movsb
add
lods
xchg
add
or
add
push
add
push
push
add
add
add
jle
add
jne
lcall
test
jge
add
push
add
jb
jae
mov
jg
add
xchg
lods
jl
jmp
adc
pop
xchg
add
inc
add
out
fdiv
fisttpll
ds
add
xchg
int
lret
xchg
add
add
push
add
pop
pop
or
pushf
add
mov
movsl
inc
add
mov
dec
push
lods
jl
add
sub
pushf
iret
add
add
mov
add
add
or
cs
add
add
add
mov
mov
xor
int3
outsb
in
xor
stos
cmp
cmp
xchg
enter
add
add
in
cmc
or
add
addb
add
add
jo
lock
or
xor
movb
add
add
add
fs
test
mov
push
add
add
ret
int
scas
pop
lods
loopne
mov
movb
insb
jae
pop
mov
add
lret
pusha
add
pusha
add
add
loope
loopne
add
mov
iret
jnp
xchg
add
cmp
xor
add
push
add
dec
pop
and
jecxz,pt
add
and
iret
mov
icebp
dec
lcall
je
push
add
mov
add
push
adc
out
lahf
movsl
inc
add
mov
stos
push
cmc
push
ret
mov
add
sub
push
cli
std
inc
jle
add
add
add
or
add
sarl
push
jg
add
inc
add
pop
inc
add
and
lods
in
pusha
add
cli
repnz
mov
sbb
mov
cli
lret
movsb
add
out
dec
add
loopne
aad
add
out
sbb
add
or
push
add
add
add
add
add
mov
add
add
mov
icebp
sbb
testb
repnz
rcll
add
mov
xor
add
cmp
adc
add
jle
scas
pop
sbb
add
add
sbb
mov
cltd
xchg
add
add
iret
dec
inc
cmp
jle
cmp
add
xchg
loop
fmul
jo
leave
lock
jne
add
andl
mov
mov
add
add
xor
xchg
add
outsb
outsl
jae
xchg
jbe
ds
push
leave
xchg
fcomp
in
loopne
loop
mov
mov
add
les
or
add
fmuls
mov
mov
rolb
rolb
loope
dec
jb
lret
out
xchg
add
inc
adc
pusha
add
or
cld
mov
add
in
mov
add
add
xchg
sbb
xchg
xor
cmp
push
adc
xchg
int3
mov
add
and
mov
xchg
add
add
orl
adc
xchg
add
inc
loop
xchg
add
or
push
or
dec
scas
inc
add
and
jb
fdivl
add
out
movsl
stc
dec
adc
add
jp
arpl
add
mov
push
faddl
add
sbb
std
imul
add
and
add
aad
add
push
add
sbb
push
add
mov
cmpsb
add
add
add
mov
aam
bound
mov
lods
sub
sti
jecxz
lea
add
xchg
add
add
icebp
mov
dec
jg
dec
push
add
addb
pop
cmpsb
add
mov
stos
cli
fstps
adc
jle
add
addb
or
xchg
add
loope
cltd
shrl
add
add
mov
add
movsb
add
jns
push
testb
mov
fldcw
xchg
rolb
in
cmp
dec
lods
nop
add
pop
outsl
fwait
sub
loopne
inc
std
shr
daa
mov
xlat
mov
insb
popf
inc
add
add
sub
aad
pop
push
add
add
mov
jl
mov
imul
add
add
jmp
add
mov
addb
insb
dec
movsl
stos
or
xchg
add
add
xor
repnz
inc
add
xchg
mov
add
mov
xor
and
cmp
pop
aaa
scas
bound
mov
add
add
bound
mov
add
inc
add
add
xor
les
repnz
or
add
fdivl
sbb
or
mov
add
sub
rcll
xor
add
stc
push
add
and
sbb
mov
xchg
mov
pop
addb
xor
sbb
inc
adc
add
mov
pop
mov
mov
fistl
sbb
add
xor
mov
add
add
cs
loope
push
movsb
add
dec
dec
push
adc
cwtl
pop
imul
outsb
sbb
add
inc
add
add
addb
scas
std
iret
add
dec
icebp
imul
add
xchg
jle
jecxz
adc
cmp
add
xor
stc
fldl
mov
dec
cmp
add
les
jb
mov
cwtl
push
add
popa
ja
add
test
add
cmpsl
and
mov
add
rolb
mov
add
add
jne
inc
add
add
add
mov
icebp
mov
add
push
mov
std
adc
fimuls
addr16
aas
inc
iret
inc
add
popf
mov
xchg
add
add
add
add
lret
adc
pop
lods
inc
fildll
movsb
add
cli
rorl
add
scas
call
fisubrs
mov
pop
jbe
sub
outsb
psubsb
mov
xor
mov
mov
add
fisubrs
das
addr16
mov
test
mov
add
data16
add
jmp
adc
or
push
add
add
xlat
inc
xor
pop
pop
cmc
jns
add
cmp
mov
sbb
add
add
mov
mov
mov
addr16
add
mov
adc
add
dec
sbb
out
jmp
xor
add
add
fistl
lds
add
dec
jb
add
add
xchg
add
aaa
add
outsb
out
or
sahf
adc
jecxz
inc
mov
add
mov
xor
add
push
add
gs
gs
in
and
mov
pop
dec
xor
mov
imul
std
test
rolb
cmp
add
sub
mov
jge
lret
and
cmp
sarl
add
mov
xor
push
pop
test
jnp
jne
lods
push
in
ret
cmp
rcll
rolb
aad
fwait
push
sub
add
add
add
addl
add
or
icebp
arpl
sub
push
push
xor
in
icebp
imul
mov
int3
push
fsubrp
lea
cmc
push
add
cmpsb
add
mov
jecxz
addb
add
sbb
popf
sub
iret
add
add
pop
ja
and
jae
sahf
sar
movsb
add
push
add
fdivr
mov
add
insl
mov
stos
jne
add
pusha
add
add
dec
jp
dec
loope
fxch
popf
pop
jae
push
pushf
lods
cmp
mov
sahf
into
push
add
add
mov
inc
cmpsb
add
add
inc
add
add
movsl
cmp
add
mov
add
mov
xor
add
jae
push
les
push
cwtl
xor
lcall
loope
mull
mov
sti
jle
cmp
add
mov
mov
jle
call
dec
nop
add
stos
cltd
mov
or
ja
push
movsl
rolb
nop
add
fstpt
scas
lods
jg
or
in
out
ds
sub
and
mov
cmp
ss
add
cmp
lret
mov
inc
add
fwait
pop
mov
sahf
bound
mov
call
add
cmp
stc
add
jbe
scas
outsb
ds
rolb
incb
addr16
add
add
mov
mov
add
out
pop
iret
packssdw
loopne
push
mov
pop
adc
fwait
mov
setl
add
rolb
aad
fistl
mov
add
or
into
jns
jns
dec
jns
out
test
push
cli
aaa
int3
rolb
dec
xor
sub
dec
sub
fwait
lods
pop
out
ja
mov
sahf
test
das
in
sahf
dec
and
mov
add
push
add
scas
and
outsb
imul
add
mov
mov
and
popa
mov
push
add
adc
or
inc
push
add
je
add
ret
pusha
add
mov
cs
nop
add
add
push
add
push
add
insl
and
mov
add
mov
cwtl
ret
mov
jno
jne
jecxz
sub
mov
jmp
sbb
testb
adc
call
jmp
pop
adc
jl
add
ficompl
enter
sbb
or
nop
add
fcompl
in
mov
lock
push
mov
movsb
add
insl
push
add
push
add
add
xchg
in
push
inc
add
mov
addb
add
lods
xchg
add
mov
dec
call
popf
movb
add
fwait
loop
rolb
in
jge
add
add
add
and
mov
add
or
pop
and
int
add
lds
add
cmp
add
add
call
je
mov
add
mov
jno
insl
lret
aaa
out
sub
xor
xor
or
add
das
inc
xor
add
out
addb
add
lahf
dec
sub
mov
fcomps
rcll
mov
add
add
mov
xchg
add
add
imul
mov
add
out
inc
rolb
add
inc
add
rcll
cwtl
pop
iret
rolb
cmc
jae
dec
les
sbb
add
addb
pop
xor
add
add
add
add
adc
dec
xor
arpl
add
in
in
xor
adc
jmp
cwtl
out
imul
jmp
xor
dec
cmovnp
add
xchg
push
add
out
dec
pop
xor
and
das
xchg
add
aad
add
stos
cmp
nop
add
xor
scas
mov
sbb
add
mov
push
push
testb
in
xchg
popa
stos
adc
pushl
add
sbb
add
ret
pop
mov
scas
out
xor
addb
add
jb
pop
mov
add
add
add
pop
mov
daa
js
repnz
js
push
add
mov
data16
add
add
fwait
aad
fisttpl
mov
mov
lcall
out
in
stc
xchg
gs
imul
sbb
int
fmuls
in
mov
daa
roll
add
cs
push
or
leave
sbb
jecxz
mov
mov
mov
add
add
add
in
xor
mov
pop
adcl
or
cmp
pop
rorl
inc
prefetcht1
add
into
rolb
flds
add
test
or
lahf
mov
sub
cmpsb
add
gs
push
xor
adc
insl
push
add
mov
push
or
dec
ficomps
jno
mov
cmc
insl
addb
add
cli
sub
in
mov
add
mul
add
sub
add
jg
push
dec
lcall
add
addr16
mov
in
lods
lret
xlat
cmpsl
imul
lock
fstpt
add
mov
fwait
add
add
dec
pop
lock
loopne
adc
shll
add
andl
test
mov
dec
push
pop
rolb
sub
sti
iret
add
add
int3
dec
push
add
push
daa
ret
add
jne
pop
mov
push
add
add
add
add
dec
mov
mov
into
adc
stos
arpl
inc
add
push
add
add
add
cmpsb
add
adc
add
rolb
mov
add
dec
mov
jp
inc
add
adc
int3
addb
add
jecxz
stc
jmp
add
or
and
mov
add
in
int
add
lds
add
add
loope
add
add
add
and
lahf
dec
stos
aam
fnstsw
cmp
add
jle
outsb
and
adc
pop
out
loop
addb
lahf
sbb
flds
jb
mov
add
stos
xchg
data16
mov
push
add
push
iret
rolb
cmp
cmp
cmp
add
mov
data16
mov
add
add
add
sti
inc
loopne
mov
add
add
add
lods
xchg
stos
arpl
push
add
cmpsb
add
inc
add
filds
jbe
data16
add
mov
add
add
adc
rcrl
add
testb
push
jne
adc
ret
jae
add
call
nop
add
push
sar
cmpsl
adc
arpl
lahf
or
movb
lock
add
xchg
jo
dec
xchg
add
lock
pop
faddl
or
fidivrs
in
ret
fdivrl
inc
cmpl
in
jl
les
sti
lock
sbb
xchg
inc
add
pop
add
mov
add
mov
aam
pushf
lret
lret
sbb
add
cmp
xor
inc
add
or
mov
mov
cmpsb
add
pop
add
add
lcall
add
inc
add
inc
mov
pop
cmpsb
add
add
loop
pop
ss
daa
leave
popa
xlat
xchg
add
rcll
add
inc
bound
mov
adc
mov
jle
adc
pop
out
testb
mov
pop
int
jge
rorl
add
add
pop
lods
aaa
jb
mov
fcomp
xchg
push
add
in
cmp
mov
add
lds
add
pop
mov
add
dec
out
jns
cmc
out
out
insl
push
mov
dec
insl
xorl
or
add
icebp
aam
test
sahf
stos
sbb
add
add
sbb
cwtl
sbb
sti
adc
int3
pop
mov
imull
fcompl
xor
popf
adc
int3
ret
mov
add
sub
add
ja
pop
jp
add
les
jecxz
add
pop
jmp
jle
add
sub
rolb
movsb
add
push
add
pop
popf
pop
outsl
push
add
xchg
and
call
cwtl
scas
push
stos
ffreep
add
add
sub
incb
mov
les
adc
dec
inc
add
scas
mov
add
sub
add
lret
mov
add
add
sub
and
mov
push
add
int
hlt
add
add
add
addb
add
add
or
xor
mov
cmp
int
cmp
or
std
fcmovne
jbe
cmp
add
mov
push
add
add
jo
sub
cmp
daa
hlt
add
cmp
mov
and
xchg
sbb
xchg
add
add
add
addb
push
add
out
repz
dec
mov
shrl
sbb
and
add
push
ja
add
add
mov
add
movsb
add
mov
add
dec
add
push
add
fiaddl
fstps
enter
add
add
cld
push
xchg
push
pop
mov
add
iret
mov
push
add
jo
adc
enter
add
mov
jns
push
add
add
add
psubusb
push
xchg
cli
xor
int
add
mov
rolb
and
lret
xor
pop
xchg
and
mov
add
dec
sub
data16
push
addb
test
jnp
add
cmp
add
scas
movb
cmp
sub
add
add
sub
sub
mov
cmp
mov
add
test
add
andl
add
and
push
add
adc
rcrl
jns
and
inc
add
add
sub
add
add
leave
out
inc
add
dec
sbb
push
jle
or
dec
mov
jb
ret
inc
popf
and
mov
add
push
or
leave
stos
mov
xor
xchg
add
add
add
bound
mov
cwtl
scas
inc
fmul
or
xchg
add
mov
sbb
add
adc
xchg
stos
add
mov
pop
mov
fstl
push
add
pop
fstpl
add
inc
dec
sub
lods
stos
or
xlat
dec
xchg
mov
add
ja
mov
ds
mov
xlat
fdivs
jb
mov
add
add
lea
dec
dec
les
and
and
mov
add
nop
add
xchg
add
loop
cmc
popf
pop
xchg
mull
add
out
pop
xchg
mov
fmulp
or
mov
daa
mov
add
imul
and
mov
mov
cmp
dec
mov
nop
add
mov
push
rolb
add
xor
out
pop
xchg
add
add
clc
or
add
lcall
jnp
jle
add
cmp
icebp
adc
outsl
xor
addb
pop
or
or
fwait
mov
add
loop
cmp
call
mov
add
lods
adc
add
add
pusha
add
and
stos
sub
xchg
push
add
lods
push
add
push
add
sbb
add
add
mov
jmp
sti
sbb
add
add
sahf
adc
leave
loope
je
xchg
das
sbb
pop
push
xlat
outsb
cld
leave
cmp
add
mov
add
mov
inc
cld
mov
push
sub
cli
lahf
lcall
add
lret
or
jl
in
add
sbb
insl
xchg
add
mov
add
add
dec
out
mov
inc
sub
add
add
testb
add
cs
mov
jecxz
stc
cmp
fistpl
in
cmp
jno
or
testb
add
pop
inc
add
cmp
popa
lds
sbb
pop
inc
add
mov
pop
and
mov
lock
add
fidivrs
popa
pop
xor
jg
add
sub
xchg
add
add
dec
imul
add
insl
popl
pop
sub
sub
rorl
add
add
add
add
xor
add
cmp
mov
pop
xlat
xlat
jmp
rorl
enter
movsl
adc
add
mov
roll
add
add
pop
mov
adc
mov
mov
push
cmp
xlat
out
add
add
inc
pushf
popa
and
or
xchg
add
xchg
icebp
addb
repnz
pop
sbb
cltd
inc
mov
adc
or
xchg
sti
in
pop
popa
addb
adc
scas
pop
loopne
fld
add
push
mov
sub
lea
add
push
bound
mov
add
inc
add
insl
outsl
xchg
vpunpckhwd
mov
add
add
addb
lds
dec
push
cmpsb
add
in
sub
lods
cmpsl
and
jmp
stc
add
push
adc
addr16
cwtl
ret
xchg
add
les
sbb
sbb
add
add
and
add
mov
je
stos
into
repnz
fisubl
add
cmpsb
add
addb
loopne
mov
movb
push
ret
neg
fisubrl
fstps
lock
insb
pop
inc
add
mov
or
and
mov
mov
mov
lds
movb
adc
pop
xchg
ret
sub
test
add
dec
lret
cmp
addb
inc
add
test
pop
mov
add
pop
sbb
add
add
add
add
mov
inc
mov
in
inc
add
mov
dec
repz
push
add
hlt
add
test
hlt
add
fidivrl
adc
xlat
jp
cmp
add
add
repz
lods
out
call
add
add
add
aas
fldl
popf
rolb
or
jmp
or
add
scas
jbe
jno
add
push
stc
add
add
mov
mov
mov
add
idivl
lret
adc
xor
cli
and
sub
add
jmp
imul
pushf
test
xlat
mov
mov
mov
test
rolb
sub
fisttpl
das
pop
sbb
rol
xor
in
fbstp
mov
xor
movb
xchg
in
xchg
lds
aaa
inc
clc
push
add
les
addb
or
inc
jmp
test
mov
push
add
and
mov
iret
inc
add
in
lods
in
xor
fsubs
mov
into
popa
lock
lods
inc
pusha
add
push
add
cmp
add
xchg
add
ret
push
and
ljmp
adc
hlt
add
add
jno
inc
mov
add
jp
push
jne
test
mov
rolb
adc
push
ficompl
add
out
inc
int3
xchg
add
add
mov
mov
insl
mov
in
je
jbe
xor
add
adc
ror
add
movb
pminsw
add
mov
mov
sahf
and
fwait
clc
lret
push
mov
mov
add
out
lods
fidivs
test
mov
add
mov
pop
sub
adc
jecxz
dec
cmp
sub
outsb
inc
xchg
lea
adc
lock
mov
ss
les
jecxz
outsl
mov
add
cmp
add
mov
movsb
add
testb
std
push
add
add
inc
add
arpl
mov
int3
pusha
add
fdivp
add
add
out
mov
push
add
and
data16
imul
add
xor
mov
scas
movb
add
loope
add
add
pop
cmc
out
stos
decl
add
pop
mov
add
ljmp
add
add
mov
ljmp
in
xorl
add
add
mov
jle
xchg
push
add
add
mov
sbb
push
jl
cld
pop
inc
add
mov
add
repnz
add
push
in
push
xor
stos
mov
add
popf
mov
xor
mov
add
mov
pop
pop
sub
mov
and
sub
push
and
mov
mov
add
insb
andl
add
mov
or
hlt
add
mov
mov
lcall
rcll
out
add
sbb
xor
add
inc
dec
das
push
add
repz
add
cli
mov
push
add
mov
aad
add
adc
and
sub
dec
jmp
push
add
xchg
scas
enter
mov
and
mov
je
adc
add
pop
mov
add
sub
add
sub
jl
add
adc
or
and
add
out
xchg
add
add
add
popf
adc
xchg
test
add
out
or
add
mov
dec
jb
mov
in
int3
mov
mov
dec
fnstsw
test
add
sub
dec
push
enter
pusha
add
or
add
dec
pop
jne
add
xor
sbb
movb
addb
out
sub
add
lods
inc
fsubl
add
add
movsl
push
push
lcall
add
jl
add
adc
jbe
stc
adc
sar
pusha
add
dec
sbb
add
rolb
xchg
jmp
push
add
enter
dec
inc
add
nop
add
and
mov
mov
mov
sub
icebp
inc
add
addl
imull
mov
addb
cmovb
mov
add
repz
add
addb
stos
dec
call
or
add
bound
mov
add
outsl
pushf
and
mov
icebp
mov
hlt
add
add
mov
add
mov
fstl
mov
dec
xor
lahf
js
add
lret
sub
mov
mov
add
jno
sbb
fs
add
in
ja
add
add
adc
fistpl
add
ficompl
inc
add
mov
xor
jp
sbb
ss
jbe
and
mov
in
pop
loope
xor
mov
cmp
fsubrl
cmp
mov
and
clc
repz
add
mov
arpl
inc
xor
bound
mov
add
add
lods
icebp
jecxz
add
cli
mov
addb
or
rolb
push
add
add
jg
sahf
and
adc
mov
data16
add
jge
pop
sub
add
mov
stos
mov
icebp
stos
adc
out
mov
shl
jl
dec
mov
in
mov
frstor
add
call
add
add
testb
cmp
mov
sbb
inc
add
test
add
jmp
and
push
add
mov
lahf
jecxz
test
add
add
push
add
outsl
adc
cmp
push
add
add
mov
sub
mov
mov
jae
jbe
pop
ljmp
add
add
sub
xor
scas
ret
dec
faddl
fbstp
add
in
cmp
dec
mov
cmpsl
loop
jo
push
push
pop
out
rolb
das
inc
imul
push
add
mov
push
data16
xor
ret
aam
repz
repz
sub
jmp
xlat
xor
jmp
int
je
ja
jbe
sbb
in
xor
loope
pop
and
mov
push
mov
ljmp
jns
add
add
mov
or
add
mov
add
pop
fldl
imul
fsubrl
add
mov
sub
push
std
mov
stos
inc
shr
add
repz
push
out
test
add
add
add
add
add
mov
ret
and
add
lcall
and
sub
inc
jb
fwait
out
mov
scas
or
in
repz
andl
cmp
jg
add
insb
cltd
cmp
iret
xlat
sub
add
call
mov
pop
ret
mov
add
cmp
adc
fdivs
adcl
xchg
in
lds
repnz
scas
push
dec
aaa
das
idivl
mov
mov
ljmp
data16
fcmovb
xor
add
insl
add
test
cs
mov
pushf
xchg
mov
mov
lods
inc
push
add
lahf
or
pop
data16
add
add
mov
lds
add
mov
add
jg
inc
mov
xchg
mov
fwait
jbe
lds
aas
inc
add
add
in
ficoml
xor
data16
rolb
mov
push
add
mov
add
mov
pushf
lahf
out
cvttps2pi
mov
frstor
jl
loope
lret
add
add
add
mov
pop
add
add
push
add
adc
xchg
hlt
add
mov
jne
xchg
pop
data16
ret
lret
jmp
xlat
and
add
add
dec
test
add
cwtl
mov
cmp
jmp
xor
movb
sbb
add
sub
stos
pop
popa
data16
jb
addb
add
movsl
push
add
add
test
fidivrs
xor
fcompp
test
add
lcall
pop
mov
pcmpgtw
repz
add
sub
mov
pop
push
cli
repz
int3
xor
add
pop
cmp
mov
cmp
mov
stos
or
stc
inc
and
mov
sub
add
cmp
add
add
add
adc
mov
add
xchg
inc
add
cmp
outsl
in
aas
shll
mov
mov
in
popf
fstpt
sub
mov
scas
ret
xchg
add
add
stc
test
or
add
or
int3
rolb
sbb
add
adc
fwait
movsl
mov
pop
daa
fstpl
mov
fistpll
mov
add
mov
call
lcall
mov
add
loope
sub
mov
add
add
jo
popa
cltd
inc
add
cmp
dec
shl
add
insl
call
out
pop
mov
gs
add
add
add
xor
test
mov
addl
in
filds
mov
sub
seta
add
lods
xchg
in
aam
and
in
iret
cmp
loop
add
add
cmpsl
popa
add
sahf
dec
pop
cmp
mov
lea
mov
lret
and
mov
push
add
jns
jno
add
lods
mov
push
dec
ds
xchg
add
fbstp
lahf
jmp
movsl
loop
mov
add
aas
addb
lds
add
fsubrl
sub
fmulp
hlt
add
add
add
cmp
aam
icebp
sbb
jbe
out
pop
push
or
ret
or
dec
int
add
movb
cmp
add
add
test
add
addb
imul
add
les
pop
arpl
fmull
sti
xchg
mov
add
and
mov
or
xor
push
add
push
add
add
inc
test
inc
add
je
xlat
sbb
add
add
pop
jb
insb
leave
and
ret
inc
add
outsl
test
mov
add
and
inc
inc
in
add
inc
add
pop
jbe
sarl
mov
sbb
xchg
add
lods
pop
push
ret
fs
mov
add
sub
inc
in
fldl2t
aam
loop
adc
xor
popl
inc
and
adc
add
add
add
add
repnz
add
add
mov
add
add
add
ror
pop
mov
pop
repnz
int3
inc
xlat
fwait
and
sti
jge
inc
insb
out
sub
xor
in
push
add
add
jg
and
mov
cld
fisttpll
mov
add
cmp
scas
out
lods
cmp
add
lea
adc
add
add
add
jno
loop
addr16
lea
pop
sub
xchg
add
or
pop
arpl
dec
pushf
jecxz
push
jns
jnp
xor
add
add
or
jle
call
jns
add
add
add
xchg
push
sti
push
add
add
inc
add
addr16
mov
add
addb
shll
dec
lods
jns
lret
add
or
imul
add
aad
add
rolb
add
add
inc
mov
insb
adc
push
dec
mov
dec
adc
aaa
sub
mov
repnz
add
fisttpll
push
add
add
loope
xchg
jbe
ret
push
push
add
add
mov
ret
ljmp
inc
adc
mov
dec
and
aas
lods
lds
pop
cmp
add
add
clc
aam
push
add
add
adc
addl
pop
sub
add
stos
mov
std
std
bound
mov
add
pop
xchg
add
add
lock
pop
movb
cwtl
xor
sub
pop
cmp
add
pop
icebp
imull
jle
add
int3
xor
cmp
rorl
mov
push
push
jg
inc
cmpsb
add
jmp
add
or
out
add
imul
out
and
mov
mov
add
jae
sbb
add
dec
adc
push
xchg
add
dec
and
mov
xor
icebp
fdivl
add
lods
mov
mov
add
adc
mov
out
addb
mull
cmp
add
mov
pop
pop
add
mov
mov
sub
fdivp
add
mov
add
jo
hlt
add
add
xchg
hlt
add
in
test
push
add
xchg
lea
jge
out
cld
into
mov
add
jge
add
nop
add
dec
cmpl
test
add
add
add
bound
mov
mov
arpl
push
mov
add
ja
lret
int3
test
add
mov
jg
jmp
dec
cld
cli
xlat
ds
add
lahf
ja
add
loopne
int
cmc
imul
fidivs
add
std
sbb
sbb
add
mov
jle
dec
rcll
movsl
mov
add
add
cmpsl
inc
push
add
and
add
xor
push
add
sub
add
cmc
cs
xchg
push
imul
fistl
add
test
jnp
cmpsb
add
adc
sbb
js
out
adc
jo,pt
mov
mov
test
dec
out
add
adc
subl
jmp
lods
mov
fwait
xchg
lret
insl
or
int
jae
inc
jnp
pop
or
fdivs
out
or
add
sbbl
lea
fdivr
repnz
ret
movsb
add
mov
add
rol
add
imul
imul
mov
push
xchg
add
jne
add
scas
add
or
or
add
and
mov
sbb
mov
fildl
lret
jo
paddb
mov
cmp
pushf
test
sub
add
mov
mov
mov
dec
ret
pop
push
stos
outsl
mov
ret
shll
cmp
add
rcl
in
push
add
add
mov
add
lods
inc
xor
add
popf
js
addl
add
mov
xor
pop
je
cmc
dec
xchg
xor
hlt
add
dec
dec
lods
xlat
in
push
mov
xchg
add
add
mov
add
add
cmpsb
add
pop
jg
add
addb
pop
adc
test
scas
cmp
add
add
dec
push
adc
aad
cmpsl
call
add
mov
into
dec
dec
stc
add
jge
mov
clc
xchg
or
jmp
push
insb
fwait
repnz
add
jbe
mov
mov
add
add
imul
pop
cmp
add
add
testb
push
jl
cltd
cltd
and
bound
mov
test
add
add
push
add
mov
add
add
jnp
add
hlt
add
push
add
add
lahf
pop
test
add
mov
adc
jnp
std
enter
cld
sahf
pusha
add
mov
fcoms
das
jl
and
mov
sbb
push
xchg
add
or
add
leave
pushf
jo
shrl
add
scas
clc
int
add
hlt
add
mov
fmull
add
cmpsb
add
in
inc
add
xchg
mov
cmp
xor
xchg
push
mov
stos
cwtl
sbb
loop
push
arpl
cmc
outsb
inc
adc
push
leave
cmp
rolb
xor
and
int
add
push
lret
aam
jns
add
sub
pushf
mov
imul
mov
mov
dec
lret
add
add
add
push
lods
aaa
xor
inc
stos
lods
xchg
outsb
push
adc
imul
popa
mov
xchg
cmpsb
add
dec
adc
ds
add
daa
out
cwtl
push
xor
jl
in
xchg
add
and
insl
pop
inc
add
jae
repz
add
inc
add
add
js
add
add
mov
fists
insl
call
add
mov
add
es
xor
mov
mov
and
mov
push
add
mov
ror
addb
in
jge
add
pusha
add
jge
movb
add
mov
fnstenv
outsb
popf
rolb
inc
arpl
nop
add
pop
mov
or
rorl
add
add
add
push
add
add
pop
push
faddp
add
add
or
test
mov
call
add
add
sub
mov
add
add
daa
sbb
add
dec
mov
jae
in
fidivrl
pop
rolb
dec
add
push
add
and
lds
call
lds
repnz
add
or
or
add
mov
data16
adc
rcll
add
int3
sub
inc
dec
push
add
add
push
add
notl
xor
inc
add
call
mov
fcomip
add
add
stc
outsb
popa
and
mov
pop
fcom
sub
jnp
jg
lds
or
or
add
add
pop
movl
add
xor
and
xchg
adc
sti
test
rsqrtps
arpl
stos
in
lock
insl
test
sbb
add
dec
pop
inc
nop
add
add
cmpsl
call
rolb
ret
push
add
or
pop
dec
lea
fistl
mov
add
add
add
js
fimuls
cmp
mov
add
ds
mov
nop
add
jmp
sub
push
push
test
xor
push
add
jb
iret
subl
nop
add
pop
and
stos
clc
mov
sbb
jmp
xchg
pop
cwtl
das
fsubs
stc
push
incb
pop
rolb
das
call
jle
push
mov
into
jne
add
insb
fistl
cmp
ja
dec
inc
add
add
icebp
test
inc
add
or
jge
add
add
add
fistpl
add
movsb
add
add
mov
add
add
fdivl
adc
add
add
add
add
pop
adc
cs
mov
leave
cmp
mov
popa
enter
mov
add
imul
adc
outsl
jbe
xchg
push
add
add
lcall
push
add
out
jge
scas
lods
sub
popf
decl
aaa
add
addb
adc
mov
fldl
mov
lret
add
add
mov
push
push
mov
add
out
add
add
std
faddl
add
xor
mov
cmp
add
es
add
gs
lds
hlt
add
mov
insl
push
inc
repnz
mov
mov
inc
call
inc
add
xor
push
test
andl
xor
mov
add
jmp
mov
sub
xor
sub
aam
repnz
add
rolb
in
into
adc
lea
dec
ja
int3
mov
add
scas
mov
add
push
add
mov
mov
rolb
cmp
jmp
add
add
movsb
add
xor
ljmp
sub
add
mov
in
mov
in
ret
jg
fidivl
jne
cs
fnsetpm(287
add
mov
daa
jecxz
mov
fmuls
test
add
stos
add
mov
dec
fistps
sarl
clc
jg
add
push
xchg
daa
fsub
push
pop
cmp
lods
rcll
add
pop
test
lods
in
std
test
mov
shr
add
popf
test
pop
mov
loop
cwtl
out
mov
aas
cmp
arpl
add
sbb
outsb
scas
aam
call
les
jp
add
lock
in
iret
add
add
add
add
sbb
add
xchg
xor
out
cwtl
inc
add
sbb
iret
addr16
cmp
fstpl
addb
jecxz
or
add
call
push
pop
jno
add
mov
push
add
addb
rolb
sub
mov
dec
insb
data16
int
data16
mov
leave
mov
int3
insb
mov
add
xor
sub
mov
add
das
nop
add
clc
mov
pop
xlat
es
add
call
mov
or
add
ljmp
