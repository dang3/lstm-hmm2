add
xor
and
and
add
push
add
jo
add
adc
pusha
jo
add
inc
add
add
pusha
xor
inc
and
inc
add
add
xor
and
xor
push
xor
add
add
add
bound
jb
push
xor
bound
and
push
and
and
add
add
xor
push
add
adc
jb
jo
push
add
adc
xor
push
push
adc
adc
jb
and
push
bound
bound
adc
inc
pusha
adc
inc
xor
adc
push
add
and
xor
add
jo
push
inc
and
jo
bound
adc
add
pusha
adc
adc
add
jo
and
inc
inc
jo
and
push
add
push
adc
push
adc
adc
xor
add
bound
and
pusha
jo
add
pusha
pusha
add
add
push
push
add
inc
add
xor
add
add
inc
xor
jo
inc
inc
and
xor
bound
pusha
inc
jo
and
and
inc
jo
push
jo
jb
jo
add
add
add
inc
push
add
push
add
jo
push
inc
push
jb
and
pusha
xor
xor
adc
inc
add
add
add
inc
pusha
add
xor
add
inc
add
push
pusha
jo
bound
inc
add
bound
bound
push
inc
inc
push
xor
and
add
pusha
adc
xor
xor
add
inc
add
xor
push
push
and
inc
inc
adc
inc
push
add
inc
jo
inc
inc
pusha
push
add
xor
and
add
add
pusha
xor
add
add
push
add
jo
jo
adc
inc
adc
add
add
xor
add
inc
adc
add
push
add
adc
and
bound
add
pusha
and
add
add
and
inc
inc
inc
add
add
xor
add
push
jo
xor
add
push
pusha
push
and
add
add
adc
inc
add
adc
xor
pusha
add
inc
adc
push
jo
inc
push
inc
inc
pusha
inc
add
adc
pusha
and
and
jo
pusha
xor
add
add
bound
and
and
adc
add
inc
and
inc
add
add
jo
and
add
adc
adc
xor
and
jo
push
pusha
add
push
jo
and
xor
and
inc
adc
add
inc
inc
jb
jb
inc
inc
xor
bound
pusha
add
and
adc
xor
and
and
add
pusha
xor
pusha
xor
push
pusha
jb
inc
and
add
and
jo
inc
bound
bound
jb
jb
and
push
push
add
inc
xor
jo
add
add
and
xor
add
jo
jo
push
inc
add
inc
inc
pusha
and
and
jo
pusha
add
bound
jo
pusha
push
add
and
pusha
and
add
xor
and
adc
push
add
add
xor
xor
pusha
and
adc
inc
add
push
adc
jo
add
jo
inc
pusha
and
add
and
inc
push
xor
add
pusha
xor
and
inc
inc
and
jo
push
add
inc
adc
inc
pusha
inc
add
bound
adc
add
add
add
inc
adc
jo
add
add
adc
xor
push
adc
add
add
and
inc
push
add
add
adc
xor
adc
push
push
add
inc
and
adc
add
jo
jb
inc
adc
inc
jo
adc
jo
xor
inc
inc
push
pusha
add
add
adc
xor
pusha
and
xor
jo
adc
inc
bound
adc
xor
add
jo
xor
push
add
inc
pusha
inc
bound
and
add
add
adc
adc
and
inc
and
xor
jb
xor
pusha
inc
adc
xor
push
add
xor
push
adc
adc
adc
xor
adc
inc
bound
push
inc
xor
inc
pusha
adc
bound
adc
adc
pusha
adc
adc
xor
and
inc
xor
jb
jo
inc
pusha
bound
add
add
pusha
xor
pusha
xor
adc
add
jo
add
add
xor
add
jo
inc
pusha
inc
and
add
xor
add
inc
add
jo
inc
inc
add
adc
adc
jb
jo
and
xor
inc
add
push
add
inc
inc
xor
push
push
adc
push
add
add
adc
and
jo
and
adc
add
and
and
add
push
add
push
xor
xor
jo
adc
inc
push
adc
push
and
add
xor
xor
and
push
push
adc
add
push
jb
add
add
pusha
pusha
add
jo
add
inc
xor
adc
inc
add
jo
add
adc
push
inc
inc
jo
add
inc
and
add
adc
add
and
add
add
inc
jo
and
add
and
add
inc
and
pusha
add
xor
add
and
pusha
adc
adc
push
xor
jo
add
adc
jb
and
jo
xor
push
add
adc
adc
add
jo
adc
xor
adc
inc
xor
add
xor
add
inc
inc
add
jb
and
and
push
inc
push
add
add
jo
jo
jo
add
adc
inc
adc
add
push
add
xor
inc
adc
xor
push
inc
add
jo
add
push
add
xor
bound
add
pusha
inc
and
add
jo
and
add
push
jo
xor
inc
inc
and
add
add
adc
jo
pusha
adc
and
adc
add
adc
inc
xor
pusha
adc
jo
adc
adc
add
push
xor
adc
jb
push
xor
adc
push
xor
jo
jo
add
adc
jo
add
adc
add
add
pusha
bound
pusha
xor
push
xor
bound
add
inc
jo
jb
inc
add
inc
add
adc
jo
add
xor
add
xor
pusha
add
inc
inc
add
pusha
push
inc
and
and
xor
push
add
and
inc
jo
add
xor
inc
adc
add
xor
push
add
add
and
inc
xor
push
add
inc
xor
pusha
and
jo
push
jo
and
inc
and
xor
pusha
inc
add
inc
adc
jo
add
xor
pusha
and
push
inc
pusha
push
and
inc
xor
push
and
add
push
jo
pusha
and
add
push
pusha
push
add
xor
xor
inc
add
adc
push
xor
jo
add
inc
add
add
xor
xor
and
add
adc
jo
and
xor
inc
add
add
add
pusha
inc
inc
push
jo
push
add
add
xor
and
inc
inc
pusha
push
and
add
xor
and
adc
push
inc
jo
and
add
jb
bound
add
xor
add
and
inc
adc
and
and
and
xor
inc
push
push
push
push
and
push
add
and
xor
and
push
xor
jb
add
add
xor
and
pusha
pusha
xor
push
and
pusha
and
jo
add
xor
add
jo
add
add
push
add
inc
pusha
add
adc
add
bound
adc
add
add
push
pusha
and
jb
xor
jo
inc
and
pusha
and
inc
add
and
adc
adc
inc
add
xor
xor
adc
xor
inc
add
jo
adc
add
add
and
add
and
inc
pusha
and
jo
and
adc
bound
push
pusha
xor
pusha
inc
add
inc
push
adc
and
adc
jo
jo
add
xor
adc
add
xor
adc
xor
push
add
inc
pusha
bound
xor
jo
adc
xor
add
add
and
inc
push
jo
add
xor
pusha
and
bound
add
pusha
and
jo
add
add
add
bound
adc
add
adc
pusha
inc
add
add
adc
add
add
and
xor
inc
add
push
add
add
xor
jo
inc
push
inc
inc
bound
xor
push
pusha
add
and
add
inc
pusha
adc
pusha
xor
add
inc
pusha
push
push
xor
jo
inc
push
adc
pusha
xor
xor
inc
add
inc
add
inc
jo
add
add
xor
push
add
xor
xor
xor
bound
jo
jo
inc
and
xor
add
add
add
add
jb
xor
pusha
pusha
adc
push
push
adc
add
add
inc
inc
pusha
bound
bound
adc
and
push
add
adc
jo
and
xor
and
push
add
add
adc
adc
add
adc
adc
inc
xor
inc
adc
add
and
add
add
and
pusha
adc
xor
jb
and
push
adc
and
jo
and
jo
pusha
add
xor
add
inc
adc
push
and
jo
xor
and
bound
bound
push
and
add
inc
xor
jo
inc
bound
adc
inc
adc
xor
bound
push
push
xor
push
pusha
pusha
and
add
jb
add
inc
and
push
jo
add
and
and
jo
xor
and
and
adc
push
add
push
jo
add
xor
xor
pusha
add
jo
and
and
add
pusha
inc
push
and
inc
adc
push
and
add
adc
inc
adc
bound
and
push
jo
and
push
add
add
and
jo
bound
adc
push
bound
inc
pusha
add
push
pusha
inc
inc
push
add
add
adc
push
add
jo
add
inc
adc
push
adc
add
add
jo
push
push
push
jb
and
and
push
pusha
xor
inc
inc
inc
xor
and
push
inc
jo
add
adc
add
pusha
jo
xor
add
adc
inc
and
xor
xor
adc
add
push
pusha
pusha
inc
add
add
add
adc
add
xor
inc
jo
adc
jo
jo
inc
add
xor
push
add
add
push
pusha
push
add
adc
add
push
add
adc
pusha
jo
and
pusha
inc
adc
inc
push
add
inc
adc
inc
inc
add
push
xor
add
pusha
jo
xor
jb
add
jo
add
inc
and
jo
add
and
add
pusha
pusha
add
push
push
inc
pusha
xor
xor
push
push
xor
jb
xor
adc
xor
add
and
add
push
add
jo
jb
xor
pusha
adc
pusha
inc
push
pusha
and
add
adc
add
add
xor
adc
inc
push
push
and
jo
xor
pusha
inc
jo
adc
inc
jb
add
add
add
and
xor
xor
pusha
push
add
xor
add
and
and
inc
adc
add
push
and
inc
inc
and
pusha
push
add
inc
jb
jo
jb
jo
push
pusha
add
add
adc
xor
push
adc
add
adc
add
push
add
and
adc
and
inc
push
push
jo
add
add
pusha
add
adc
jo
and
push
pusha
inc
inc
bound
jo
pusha
add
bound
push
inc
add
add
xor
add
add
and
add
adc
and
and
adc
push
and
add
adc
inc
adc
and
xor
inc
inc
inc
adc
add
add
adc
push
push
push
inc
add
jo
and
add
inc
pusha
push
bound
adc
xor
pusha
add
pusha
inc
add
jb
and
xor
and
add
bound
jo
adc
adc
pusha
add
adc
inc
and
add
jo
jb
inc
add
inc
add
xor
inc
and
and
add
pusha
add
jo
inc
pusha
jo
jo
push
xor
xor
jo
push
jb
push
add
push
xor
jb
push
adc
bound
adc
push
xor
add
xor
xor
xor
xor
xor
adc
inc
inc
inc
inc
and
jb
and
adc
bound
pusha
push
push
jo
xor
inc
pusha
xor
push
xor
and
and
and
xor
bound
xor
add
push
inc
adc
push
add
xor
xor
add
adc
push
xor
add
adc
adc
add
adc
xor
xor
add
bound
adc
jo
pusha
adc
pusha
add
inc
push
add
adc
xor
adc
and
adc
add
adc
add
pusha
add
inc
add
xor
pusha
xor
adc
add
xor
pusha
jo
adc
and
pusha
adc
inc
pusha
jb
inc
adc
add
add
xor
pusha
add
adc
jb
xor
add
adc
jo
jb
jb
jo
and
jo
add
push
adc
add
adc
and
inc
inc
xor
push
add
add
adc
push
push
inc
jb
jb
xor
jb
and
add
push
xor
and
push
add
jb
xor
push
xor
inc
adc
adc
push
add
xor
xor
inc
push
push
adc
add
xor
add
push
add
and
inc
add
push
add
and
xor
xor
bound
xor
add
xor
inc
push
add
add
xor
push
add
push
jo
and
add
jo
xor
add
add
adc
inc
add
add
pusha
adc
pusha
jb
and
xor
adc
and
xor
inc
push
add
xor
and
add
jo
inc
jo
xor
xor
jo
pusha
pusha
add
and
inc
add
xor
jb
push
add
xor
inc
adc
inc
jo
push
jo
and
add
push
xor
jb
add
add
pusha
pusha
bound
inc
pusha
push
adc
and
inc
jb
xor
inc
pusha
inc
add
jo
jo
inc
jo
bound
adc
and
xor
xor
xor
inc
pusha
push
inc
pusha
xor
add
push
jo
add
inc
jo
and
and
add
adc
pusha
add
and
xor
inc
pusha
add
inc
add
add
xor
inc
jb
bound
jo
pusha
add
xor
pusha
jo
add
add
and
add
xor
push
and
and
xor
add
add
and
inc
adc
add
and
pusha
jo
inc
bound
add
jo
jo
xor
add
inc
adc
jo
pusha
adc
xor
add
jb
add
inc
and
add
inc
inc
add
jb
add
inc
bound
add
and
and
add
xor
add
adc
bound
add
jo
and
push
xor
inc
adc
xor
adc
xor
push
pusha
xor
add
inc
add
add
add
pusha
pusha
pusha
pusha
add
add
inc
jo
push
add
inc
xor
add
jb
adc
push
pusha
add
jo
push
adc
bound
adc
inc
add
jb
inc
add
jo
push
adc
xor
adc
push
add
bound
and
inc
add
xor
push
add
add
push
adc
add
push
jb
push
add
xor
xor
add
add
and
and
and
and
and
xor
and
add
jo
push
and
xor
push
adc
push
bound
xor
add
adc
inc
xor
jo
jo
adc
pusha
push
adc
inc
adc
inc
xor
pusha
add
jb
jo
add
and
add
pusha
add
add
xor
and
jo
inc
inc
push
adc
xor
add
inc
and
inc
inc
pusha
add
jo
add
inc
add
pusha
and
adc
adc
jb
jb
adc
bound
inc
and
add
push
bound
pusha
and
adc
and
inc
inc
add
bound
add
add
pusha
xor
jo
add
push
push
jo
inc
and
and
jo
jo
inc
jb
adc
pusha
jb
add
adc
inc
pusha
and
adc
jb
pusha
add
adc
and
pusha
inc
inc
xor
and
add
push
adc
inc
xor
add
inc
xor
add
xor
inc
bound
adc
and
and
push
add
push
inc
pusha
jo
and
adc
and
add
add
pusha
push
and
adc
push
xor
bound
add
inc
inc
push
xor
xor
and
add
pusha
add
adc
jo
xor
jo
jo
push
and
add
bound
inc
xor
add
xor
and
add
and
pusha
inc
add
and
xor
add
pusha
push
xor
adc
and
inc
pusha
and
pusha
push
inc
and
adc
adc
bound
add
xor
jo
inc
push
pusha
xor
jo
add
add
pusha
inc
add
push
inc
xor
and
inc
add
add
and
add
bound
jo
inc
add
inc
xor
inc
jb
and
and
xor
xor
add
add
push
xor
xor
adc
add
add
pusha
jo
jb
add
inc
pusha
xor
bound
and
add
xor
adc
xor
add
jb
inc
add
and
add
adc
adc
adc
xor
add
adc
adc
add
inc
jo
inc
adc
xor
add
pusha
add
pusha
inc
adc
jb
bound
jo
pusha
bound
add
push
push
bound
inc
add
push
push
adc
inc
add
add
and
add
xor
add
pusha
add
pusha
add
push
jb
jb
adc
xor
add
add
pusha
adc
add
inc
add
jb
and
and
xor
add
xor
add
xor
inc
add
add
and
jo
inc
inc
inc
and
adc
add
inc
jo
adc
adc
bound
jo
inc
add
xor
add
push
add
inc
jo
adc
push
jo
jo
adc
and
add
push
pusha
add
jo
pusha
xor
inc
inc
add
push
pusha
adc
add
inc
and
inc
add
and
pusha
inc
add
xor
bound
bound
pusha
pusha
adc
xor
add
bound
pusha
and
inc
and
pusha
push
and
xor
jb
adc
add
pusha
bound
inc
jb
adc
push
xor
adc
inc
add
inc
xor
add
push
xor
adc
jb
adc
inc
inc
add
inc
add
bound
adc
add
pusha
adc
add
add
xor
push
adc
push
pusha
jo
xor
adc
and
inc
xor
push
bound
add
add
push
add
adc
xor
inc
xor
jb
jb
xor
add
push
adc
jo
inc
and
adc
and
xor
inc
adc
jb
jo
xor
inc
pusha
push
push
add
and
jo
add
push
adc
xor
inc
adc
inc
push
and
xor
xor
xor
add
inc
bound
add
adc
add
and
and
xor
and
add
inc
xor
and
inc
inc
adc
bound
push
inc
and
and
push
adc
add
jo
jo
add
jb
pusha
xor
xor
adc
adc
xor
inc
adc
add
adc
and
bound
jo
add
push
jo
push
inc
add
jb
adc
inc
push
inc
xor
adc
and
inc
push
pusha
add
adc
inc
xor
adc
push
xor
xor
add
xor
jb
jb
jb
pusha
add
add
add
inc
bound
inc
push
pusha
inc
add
push
jo
pusha
pusha
inc
adc
add
xor
pusha
pusha
jb
inc
push
add
and
inc
pusha
push
jo
adc
adc
add
adc
and
push
adc
add
adc
xor
inc
bound
pusha
add
xor
add
push
add
pusha
jo
bound
jo
xor
add
push
push
pusha
adc
inc
add
add
push
push
add
pusha
push
adc
inc
bound
inc
and
and
add
add
xor
add
add
jb
add
jo
jb
inc
jo
add
push
pusha
jo
push
add
push
xor
bound
add
xor
add
add
add
pusha
inc
add
jb
and
add
jo
pusha
adc
xor
xor
and
adc
add
add
push
adc
push
inc
add
inc
add
add
jo
xor
xor
jo
inc
inc
add
and
bound
add
xor
push
inc
xor
adc
and
xor
adc
and
pusha
push
add
jb
inc
inc
and
adc
pusha
pusha
push
inc
add
xor
add
inc
inc
push
push
jo
xor
jo
jo
pusha
and
inc
jb
and
jo
add
xor
add
inc
inc
push
inc
pusha
jb
xor
add
jb
adc
bound
adc
push
adc
bound
push
add
inc
jb
adc
adc
inc
xor
add
adc
xor
add
add
pusha
xor
inc
push
and
and
push
add
xor
jo
add
jb
xor
inc
pusha
add
inc
adc
pusha
xor
xor
push
push
add
inc
inc
push
jb
inc
add
add
and
jo
push
push
adc
inc
add
pusha
and
inc
bound
add
add
inc
pusha
add
pusha
add
push
inc
pusha
add
jo
adc
inc
push
and
adc
add
pusha
xor
and
add
and
adc
inc
add
inc
add
jb
jb
pusha
add
xor
push
jo
push
inc
push
add
pusha
inc
and
bound
jo
adc
push
inc
add
jo
push
jo
adc
and
xor
pusha
add
push
jo
xor
add
and
inc
xor
and
and
jo
add
pusha
pusha
and
pusha
add
pusha
and
push
and
add
push
add
pusha
adc
inc
xor
push
push
adc
pusha
and
bound
add
pusha
add
push
add
pusha
and
push
pusha
and
adc
push
add
adc
jo
add
add
xor
inc
adc
adc
pusha
jo
push
inc
add
add
add
inc
push
inc
and
pusha
jo
jo
bound
and
xor
jb
adc
adc
add
add
pusha
push
jb
inc
and
pusha
xor
add
adc
adc
add
pusha
jb
jb
push
add
bound
xor
xor
push
xor
add
inc
pusha
xor
jo
inc
push
adc
and
and
xor
adc
bound
and
pusha
bound
add
inc
adc
and
inc
xor
and
add
jb
bound
add
jo
xor
add
add
inc
push
jb
inc
inc
xor
xor
and
add
xor
push
jb
inc
add
inc
xor
adc
push
and
xor
inc
adc
pusha
xor
xor
add
xor
pusha
and
add
and
push
push
adc
add
inc
adc
bound
jo
inc
xor
and
add
pusha
xor
jo
inc
adc
push
xor
push
add
add
add
add
inc
inc
add
pusha
inc
adc
add
xor
pusha
pusha
and
bound
inc
jo
pusha
inc
add
adc
pusha
inc
xor
xor
add
adc
add
inc
add
pusha
jo
push
add
and
jo
adc
pusha
add
push
add
xor
jo
adc
jb
and
and
pusha
push
inc
jo
add
add
add
adc
push
add
jb
and
pusha
inc
and
add
adc
jb
inc
inc
inc
pusha
push
and
and
push
and
push
push
adc
adc
pusha
inc
and
and
pusha
add
jo
adc
xor
xor
add
add
pusha
push
pusha
add
push
jb
jb
add
inc
pusha
and
jo
add
adc
xor
adc
add
pusha
adc
pusha
inc
and
jb
adc
add
inc
and
and
xor
xor
add
and
xor
jo
push
push
add
and
and
add
and
xor
push
inc
inc
jo
jo
and
add
xor
pusha
and
add
inc
and
pusha
xor
inc
jo
jo
pusha
xor
and
xor
inc
add
and
push
add
inc
jb
adc
inc
jb
adc
adc
push
add
adc
adc
bound
jo
add
jo
add
add
add
add
add
adc
xor
jb
add
and
add
inc
inc
push
pusha
inc
push
inc
pusha
xor
and
pusha
add
adc
adc
xor
and
xor
add
add
pusha
adc
add
and
jo
add
and
jo
add
push
adc
push
and
add
jo
and
adc
xor
jo
jo
add
push
inc
and
and
jb
add
bound
add
add
jo
add
adc
inc
xor
add
jo
inc
add
xor
inc
inc
push
add
pusha
adc
jb
xor
inc
xor
add
push
and
add
jo
xor
inc
add
jo
and
add
and
add
pusha
inc
adc
adc
jo
add
xor
jb
xor
add
test
add
mov
cwtl
push
lea
add
arpl
pop
gs
popf
push
loope
push
jmp
jno
inc
mov
mov
rorl
mov
cmp
add
add
add
mov
fdivl
xchg
loopne
shr
out
adc
add
sbb
inc
jle
bound
mov
dec
pop
mov
add
adc
cmp
push
cmp
lea
add
mull
xchg
pop
popf
push
cmpsl
jbe
add
cmpl
mov
shll
mov
add
add
test
dec
das
rolb
dec
add
add
xor
mov
sub
xchg
ja
add
add
sti
xchg
or
mov
mov
add
add
mov
mov
xor
outsb
jne
aam
xorl
dec
add
popa
cmp
mov
mov
loopne
cmpsl
and
in
xor
add
add
jl
lcall
xchg
sub
cmp
mov
add
adc
mov
mov
inc
add
or
popa
std
pop
mov
xchg
lods
sub
add
add
and
or
add
frstor
add
add
add
pop
push
ljmp
jne
in
stc
adc
xchg
push
je
xchg
ja
int3
std
cmpb
pushf
pop
out
pop
jmp
pushf
ret
and
xor
mov
lds
lods
xchg
icebp
push
movsb
jmp
clc
add
out
fidivrs
test
add
add
pop
movsb
mov
sahf
dec
add
add
add
cmp
add
add
jl
xor
pop
jbe
bound
cmp
in
ret
cmp
out
ret
xor
jle
dec
pop
add
add
push
mov
cli
pop
cmp
add
jge
add
add
add
mov
pop
pop
sbb
inc
xorb
add
add
sahf
scas
pop
sub
add
add
add
add
jae
int3
stos
pop
push
test
movsl
fiadds
sub
inc
lcall
mov
mov
jns
gs
mov
jo
mov
out
cmp
pop
rol
jg
sbb
aaa
mov
push
arpl
daa
fimull
sub
add
add
push
lret
xchg
jge
mov
pop
add
add
add
inc
add
add
mov
inc
add
add
negl
jnp
test
ljmp
enter
jg
fucomi
and
mov
in
dec
pop
or
add
cmpsb
inc
std
cmp
pop
js
lcall
iret
mov
leave
cmp
mov
int
shlb
add
add
add
add
add
add
add
pushf
jo
xchg
lods
push
shl
adc
inc
sub
fiadds
repz
icebp
pop
mov
mov
leave
popa
lret
push
mov
cwtl
xor
add
mov
push
mov
pop
mov
add
sbb
adc
addr16
cmp
sub
call
sbb
adc
shlb
add
mov
pop
or
push
nop
js
lods
xlat
pop
outsb
or
dec
or
add
add
lods
es
dec
add
jns
add
add
popa
xor
mov
cmp
sbb
add
add
mov
pusha
add
lock
adc
push
cmp
insb
add
lcall
call
ss
cmp
mov
mov
add
stos
cmc
mov
add
jbe
add
add
add
repnz
je
xlat
adcl
add
add
cmp
stc
mov
fisubrl
add
es
icebp
adc
add
cli
cmpb
in
add
add
daa
sbb
and
adc
mov
daa
push
data16
add
add
add
mov
insl
jmp
mov
add
and
mov
lods
sbb
xchg
mov
add
add
adc
ret
mov
negb
js
sub
add
add
push
adc
stc
sbb
add
xchg
in
pop
add
mov
enter
rcl
addl
add
pop
andb
add
add
mov
mov
mov
adc
mov
js
cld
xchg
lods
add
dec
add
pop
mov
add
cmp
loope
mov
sti
xor
stc
movsb
je
popa
fistl
xor
pop
in
sub
mov
cs
mov
mov
push
xor
mov
xor
pop
cltd
inc
loopne
fwait
inc
lahf
dec
push
mov
pop
xchg
push
adc
pop
mov
cs
sub
nop
add
add
add
cmp
cmp
icebp
fldcw
jo
pmaddwd
mov
sub
cltd
pop
pop
sbb
fsubrl
out
movsl
xchg
adc
add
add
jmp
fldenv
push
fisubl
mov
push
jnp
dec
cmc
jno
add
add
fiaddl
inc
in
fnstenv
xor
dec
xchg
fcoml
xchg
xor
jns
or
add
add
mov
les
xchg
pop
push
rcrl
add
add
lods
lock
push
sub
mov
fcomps
adc
inc
lahf
mov
jb
sub
inc
scas
addb
test
je
jg
fimuls
add
shl
sub
add
inc
add
mov
negl
cmp
mov
cmp
enter
add
and
pusha
add
add
add
jns
pop
faddp
fistps
mov
fwait
jg
ljmp
or
mov
hlt
es
adc
mov
cmp
arpl
and
add
cmp
in
loopne
fistpl
in
dec
add
add
dec
jo
jl
inc
add
add
mov
jo
ror
fmulp
clc
mov
push
xor
add
xchg
push
cmc
jp
jmp
push
in
icebp
xchg
mov
imul
xchg
shll
dec
pushf
inc
cmpsl
hlt
dec
add
add
xchg
inc
pusha
add
imul
lods
pop
mov
rcrb
add
add
add
push
cmp
xchg
test
test
sahf
mov
sarb
mov
mov
cmpsl
mov
push
std
or
mov
jne
mov
adc
inc
sbb
repnz
cs
xchg
mov
jb
sbb
mov
imul
inc
mov
movsl
push
aam
add
add
lcall
add
and
xor
sahf
inc
add
sbb
bound
lea
and
ret
negb
add
pushf
xor
out
inc
cmpsb
mov
dec
cmp
push
cmp
pusha
add
mov
cwtl
cmpsb
dec
xor
mov
aam
pop
add
add
add
cmpsl
dec
add
add
mov
ljmp
push
ja
cmc
pop
sti
xchg
int
xor
jl
sti
mov
add
add
in
icebp
jo
mov
insb
add
aas
fwait
and
add
add
add
test
add
add
js
arpl
mov
pop
rcll
aam
lret
and
pop
dec
lahf
jbe
inc
int3
nop
add
add
vandps
leave
outsb
and
mov
mov
ret
mov
add
rcrl
mov
fiaddl
mov
xchg
jno
jns
iret
fstps
mov
xor
add
aaa
jo
shl
pop
shr
ret
mov
stos
inc
sub
std
imulb
sbb
jns
xchg
sbb
push
add
in
iret
push
lods
mov
mov
nop
adc
roll
insl
stos
ss
mov
dec
and
add
add
sbb
mov
sbb
sti
lods
outsb
sti
rorl
mov
mov
pushl
cmp
insl
adc
cwtl
sub
mov
mov
dec
jmp
mov
enter
add
add
xchg
repz
jmp
add
aam
movsl
cs
add
add
sbb
or
inc
or
add
add
cmp
add
sbb
fmull
inc
add
add
stos
push
jp
xor
shll
add
jbe
add
mov
cmp
std
rdtsc
lret
popa
rol
add
mov
and
mov
int
cs
add
add
add
add
sti
rclb
out
scas
bswap
sub
insl
ljmp
pop
mov
sbb
add
add
xchg
fimuls
mov
call
add
sub
mov
xor
add
push
inc
mov
fldenv
add
fisubrl
mov
leave
sub
add
add
ljmp
test
add
add
xor
push
jne
icebp
ret
hlt
arpl
fstps
add
add
add
add
data16
and
push
stc
mov
sbb
mov
or
sub
popf
gs
dec
js
push
mov
push
inc
sahf
ja
jne
mov
pop
xchg
repz
mov
push
sub
out
dec
add
add
sub
mov
sarl
jecxz
sbb
pop
les
add
add
add
inc
add
mov
jae
push
adc
add
add
xor
jmp
mov
add
sub
add
add
xor
pop
cli
cmp
into
jno
mov
pop
movsb
or
arpl
push
sub
push
cs
pusha
add
xor
add
sbb
repz
xchg
and
xor
sbb
add
add
in
push
add
add
lock
in
in
xchg
mov
add
jp
xchg
xchg
repnz
cmpsb
add
inc
aam
xor
mov
jmp
mov
mov
inc
lds
add
add
xchg
mov
aam
mov
push
js
add
fcomip
lret
out
push
mov
lods
cwtl
test
xor
add
fwait
xchg
dec
add
mov
sub
add
add
add
add
lret
adc
mov
pop
rcr
push
iret
xor
dec
add
add
notb
fiaddl
stos
pop
test
and
jle
add
mov
push
insl
mov
jno
imul
add
imul
and
mov
orl
add
add
add
nop
or
jbe
add
add
inc
pusha
add
inc
in
xchg
int
in
mov
pusha
add
sbb
js
xchg
mov
add
mov
ficoms
lods
and
mov
sub
xor
enter
inc
add
add
sahf
int3
nop
and
ja
mov
popf
shl
ret
lds
faddl
nop
fcomi
pop
fwait
and
sbbb
xchg
loope
mov
fisubl
push
insl
in
into
mov
adc
sahf
je
jns
inc
out
mov
add
add
add
xchg
pop
and
pusha
add
add
push
mov
add
mov
push
push
lods
mov
add
xchg
push
pop
sbb
fnsave
loopne
jo
fisubs
mov
inc
push
cmp
mov
jge
sbb
or
push
inc
dec
pusha
add
inc
add
aaa
adc
add
add
lea
jmp
aad
das
dec
addb
push
inc
pop
mov
dec
xlat
inc
pop
loop
int
cmp
in
jne,pn
xchg
mov
fistpll
ret
inc
mov
cmp
sbb
loop
lods
add
add
add
adc
testb
inc
xlat
mov
adc
add
out
adc
std
xchg
in
aaa
push
mov
add
pop
pop
call
add
add
mov
mov
jg
dec
inc
enter
mov
jno
add
add
ja
add
add
dec
and
add
add
mov
sar
inc
mov
mov
int3
xchg
mov
xchg
mov
mov
popa
addb
add
ret
jns
into
inc
add
add
add
mov
or
and
mov
add
add
cltd
mov
ds
out
fstl
add
xchg
into
sbb
add
fisubrs
and
cwtl
loope
nop
mov
add
pusha
add
xchg
stc
dec
xchg
test
cli
cmp
add
add
mov
add
or
sbbb
pop
ljmp
xchg
inc
add
add
inc
push
sub
add
add
and
rolb
fstpl
in
mov
add
cmpsl
jp
or
add
rol
repz
xor
mov
jmp
fwait
inc
add
push
mov
dec
lcall
divb
add
push
mov
or
lret
leave
pop
push
jge
add
stos
mov
sub
pop
pop
jg
cmp
add
add
scas
test
add
pop
out
mov
mov
xor
add
add
push
pop
out
dec
mov
fists
mov
inc
jge
or
mov
jg
ret
pop
xor
mov
mov
add
dec
and
xorb
mov
xchg
xchg
xchg
jbe
add
add
out
dec
mov
jecxz
xchg
or
mov
mov
mov
and
mov
rcrb
xlat
adc
fwait
imul
add
lahf
lds
jbe
pop
outsl
mov
js
les
add
add
mov
jl
adc
aad
inc
sub
add
add
sar
xor
xor
aaa
dec
shlb
imul
jnp
mov
sub
test
add
add
add
dec
add
add
mov
mov
mov
mov
packsswb
push
out
lock
cld
mov
cmp
cmp
pusha
add
add
push
shr
xchg
pop
rcr
adc
add
add
dec
or
mov
dec
mov
or
cli
mov
add
add
mov
mov
dec
fidivs
lret
insl
out
push
movsb
sbb
add
pop
fiadds
add
add
add
mov
mov
daa
insl
sub
daa
gs
sub
push
cmpb
ja
cmpsb
cmp
adc
ss
sti
pop
mov
adc
inc
adc
mov
cmp
xchg
xchg
or
mov
test
aaa
fistl
add
xor
lods
bound
add
adc
push
shrb
sub
sbb
mov
sbb
xchg
and
mov
aaa
adc
xchg
leave
outsb
push
fmull
add
xchg
insl
andb
jnp
test
jg
add
and
mov
ja
pop
aam
rcl
outsl
xlat
scas
shr
in
jno
add
add
flds
xchg
adc
add
add
scas
test
loop
pop
rorb
mov
movsb
loop
rol
ret
ror
sbb
lods
inc
add
add
add
lock
add
cmc
int3
insb
add
add
pop
out
or
mov
push
test
popf
pop
pop
xor
add
sahf
fcomi
jg
jge
lahf
mov
pop
lret
mov
outsb
add
add
add
pop
ffreep
es
mov
dec
lcall
stc
ja
out
divl
nop
imul
push
fisubs
shrb
add
mov
aam
xchg
xchg
xor
mov
mov
add
outsb
mov
add
gs
add
inc
add
ja
push
xchg
loop
push
cmpsl
xlat
ja
jo
jns
xchg
or
pop
mov
call
in
imul
sub
repz
dec
add
add
xchg
inc
fisttpl
in
jmp
or
add
add
add
mov
rol
cli
dec
mov
add
sub
mov
adc
std
jle
or
add
add
in
ret
or
mov
scas
test
adc
test
pop
stos
dec
push
adc
fsubs
test
in
adc
push
int3
out
xchg
pusha
add
add
fidivl
push
hlt
std
movsb
addr16
mov
jl
icebp
hlt
cmp
add
pop
hlt
dec
js
sub
xchg
mov
icebp
pop
and
mov
mov
jnp
ja
jbe
fnstsw
add
xchg
popa
lock
lahf
xchg
outsb
mov
add
and
add
jge
mov
incl
add
js
icebp
jge
imul
xor
test
jns
add
add
add
adc
out
mov
pop
add
add
add
mov
add
add
lret
pop
or
push
mov
mov
lret
pop
adc
lahf
pop
or
jle
mov
xor
cmp
mov
mov
dec
add
dec
dec
add
add
loop
cwtl
cld
jne
incb
aas
adc
xchg
test
jp
ds
adcl
add
xchg
mov
add
dec
add
add
dec
add
mov
mov
ds
add
add
dec
into
out
pop
jecxz
das
pop
fwait
push
xor
sub
sti
push
lret
bound
jne
enter
in
and
add
add
loope
lea
outsl
cli
or
mov
ret
outsb
cmp
stos
test
push
dec
jb
xchg
ss
sahf
or
add
add
lock
dec
jno
fldt
bnd
in
push
xchg
push
or
add
cltd
aad
iret
sahf
dec
daa
outsl
test
add
add
adc
add
jl
aam
lea
pop
mov
lahf
imul
frstpm(287
movsb
pop
xchg
cltd
sahf
cmpsl
xchg
xor
xor
cli
loop
mov
add
mov
and
add
add
add
outsl
pop
push
les
pop
pop
ret
sbb
sbb
jg
mov
test
add
add
add
arpl
add
fidivs
movsl
test
dec
js
mov
es
in
push
fmuls
jle
sub
sbb
ret
push
fdiv
xor
add
in
xchg
add
mov
test
aaa
or
lcall
test
mov
and
cs
int
mov
in
xor
jle
sti
nop
lock
shlb
add
add
pusha
add
add
stos
dec
add
ret
cmp
add
jo
out
lods
sbb
lods
dec
jae
aaa
faddp
or
add
add
cld
jmp
scas
xchg
sub
inc
sahf
cmp
mov
add
add
dec
lea
pushf
adc
fmuls
push
in
daa
pop
out
daa
sti
nop
lock
mov
outsb
xlat
inc
xchg
sbb
jecxz
cmp
lahf
lret
add
add
jo
out
loop
add
add
pusha
add
add
add
sbb
divl
test
adc
mov
add
sbb
movsb
jg
or
add
add
xchg
mov
sub
test
mov
push
fyl2x
clc
ss
push
adc
xlat
and
push
or
add
add
dec
add
add
mov
sub
nop
aaa
fwait
cltd
loop
daa
fcom
cmp
push
xor
out
mov
mov
sub
outsb
mov
lahf
xor
inc
or
pop
mov
mov
aam
cmp
cwtl
mov
js
testl
testb
add
add
mov
or
gs
push
mov
cmp
sbb
add
push
jns
out
dec
add
add
push
insb
add
aam
imull
push
adc
cmpsl
lods
mov
enter
mov
push
jo
shll
sarl
sbb
cmpb
add
lea
and
add
add
loop
icebp
loope
iret
shll
testl
call
repz
jmp
add
outsb
push
add
mov
in
loope
add
fsubrs
add
mov
in
mov
dec
fcompl
push
adc
int3
fimull
out
or
pop
ljmp
clc
je
inc
and
sbb
cmp
call
sbbl
pop
call
inc
mov
bound
jp
add
add
and
inc
in
popa
xchg
ljmp
add
movsl
lcall
push
push
add
push
ror
mov
out
fisttps
test
rcr
outsl
stos
mov
add
nop
jecxz
jecxz
icebp
inc
mov
addb
sti
mov
add
push
dec
xchg
sub
imul
push
or
xchg
cmp
movsl
out
mov
add
mov
out
cmp
mov
daa
jmp
out
xchg
cwtl
enter
pop
andb
adc
jge
add
add
movl
andl
lds
fsubrs
lods
sbb
shl
dec
add
add
sbb
loop
cmp
je
hlt
mov
pop
decb
mov
sbb
idivl
add
ret
lret
or
add
add
add
add
add
xchg
xorl
fwait
mov
enter
mov
lret
stc
push
jbe
or
mov
and
mov
add
stc
xchg
cwtl
pop
mov
push
fldl
mov
in
dec
sub
fsubrs
sub
add
ret
add
add
lret
out
movsb
mov
add
xor
and
mov
jae
sbb
add
push
call
int
add
mov
mov
call
sub
jnp
fimuls
push
daa
sbbb
add
pop
int3
in
dec
shrb
dec
pushf
push
pop
pop
cmp
and
add
add
stos
fidivs
lea
pop
cmp
arpl
pop
clc
jmp
inc
mov
xor
dec
sub
jns
and
cltd
sub
add
add
aad
fisttps
add
add
ret
add
scas
imull
add
in
jecxz
mov
and
push
add
add
add
add
mov
push
clc
add
sti
push
cwtl
fstps
adc
test
mov
add
cltd
testl
cld
dec
xchg
lret
lahf
adc
jge
push
xor
fisubrs
add
dec
add
xchg
cmp
aaa
jae
sbb
jl
sarb
add
add
dec
mov
imul
add
jle
jmp
out
push
xchg
sti
jg
dec
inc
mov
cld
rorb
add
add
leave
aad
in
jle
sbb
xor
int3
xchg
cmp
add
add
pop
mov
add
shll
mov
mov
in
fwait
adc
fstps
out
cmp
inc
mov
test
add
mov
add
add
loop
push
nop
dec
ja
pop
pop
adc
lahf
adc
or
add
lock
mov
mov
add
fdivrl
xchg
inc
pop
push
sub
mov
outsb
add
add
xchg
sub
add
jns
mov
out
into
jle
icebp
dec
add
add
and
mov
mov
add
mov
mov
pop
push
inc
stos
push
sub
mov
dec
xchg
int
rolb
xchg
test
rclb
pusha
add
add
in
sub
stos
adc
mov
outsb
inc
inc
imul
xor
cmp
mov
lock
and
add
add
mov
add
add
jl
and
xor
and
and
dec
mov
mov
mov
mov
leave
daa
adc
sarl
mov
add
sarb
add
mov
adc
mov
mov
loope
xor
add
cmp
push
ret
mov
aad
jg
lret
mov
mov
test
cmp
add
inc
add
sub
add
add
fisttps
rclb
add
add
xchg
iret
fistpll
nop
mov
cmp
xchg
dec
test
scas
scas
pop
call
bound
pusha
add
add
repnz
add
icebp
push
int3
mov
inc
insl
dec
fistps
lods
movsb
mov
adc
mov
mov
cmp
xor
outsl
std
leave
or
cmp
add
add
shll
xor
add
add
pop
mov
pop
adc
ja
add
add
iret
xchg
je
xor
test
jecxz
fwait
ds
jle
pop
bound
orl
push
mov
pop
sub
lds
ret
mov
cmpsl
pop
sahf
pop
pop
cli
repnz
xor
sbbb
add
add
test
add
add
add
inc
gs
test
add
fcompl
mov
addb
add
loopne
jns
xchg
add
add
mov
iret
adc
mov
and
jg
adc
rclb
dec
dec
lcall
add
add
or
cmp
test
sti
mov
inc
int3
ret
add
add
imul
add
aam
push
dec
add
adc
pop
sbb
xchg
rorl
sbb
adc
jecxz
add
add
arpl
mov
and
mov
sti
add
add
jge
sbb
cmp
in
rclb
adc
sub
add
add
add
add
inc
sbb
mov
aam
pmaxsw
add
add
cmpsb
mov
jmp
push
xchg
shll
pop
fisttpll
mov
fisubs
or
pop
xor
ficoml
shl
lret
insb
add
jno
sub
pusha
add
imul
add
add
jge
add
ss
push
rcl
cld
adc
aas
sbb
mov
jno
aad
or
ffree
ds
inc
add
and
mov
add
repz
ds
lret
or
test
fcoms
fucomi
jae
andl
push
dec
out
jle
leave
mov
inc
ds
mov
mov
scas
call
and
push
mov
add
cmp
jne
lea
push
push
xchg
call
cld
or
mov
shr
shr
mov
add
push
push
push
push
call
leave
ret
ret
mov
mov
or
mov
lea
lea
sub
shr
not
inc
sub
mov
clc
je
push
pop
add
lea
clc
jmp
ret
push
mov
sub
lea
orl
movl
push
push
push
push
push
push
clc
call
test
je
in
add
add
call
test
jne,pn
pop
jmp
add
add
inc
mov
add
faddl
cltd
ja
push
adc
xchg
sub
add
add
sub
mov
jbe
sbb
lods
push
cmp
inc
add
pushf
push
cmpsb
jno
imul
mov
test
repnz
mov
xor
das
shrl
popf
cld
test
aad
cmp
add
add
add
mov
mov
leave
sub
add
add
push
add
mov
inc
mov
jecxz
fst
push
cmpsl
or
je
lock
push
mov
pop
add
cmp
xor
imul
inc
dec
cmpsl
sbb
xor
fildll
rorb
add
dec
add
mov
add
pop
data16
ret
sbb
push
pop
scas
jae
jle
or
inc
add
add
hlt
adc
add
add
add
ja
jo
push
lret
mov
sub
mov
push
adc
add
xor
fdivrs
outsl
insb
add
lds
jne
mov
adc
xchg
sbb
pop
inc
add
ja
dec
insl
sahf
rorb
je
inc
rcll
add
pop
adc
in
ds
add
add
shl
add
and
mov
add
xor
leave
xchg
push
jl
add
adc
xor
add
mov
inc
std
ffreep
mov
and
inc
cmpsb
cmp
outsb
pop
inc
mov
push
stos
jp
scas
pop
mov
add
fldenv
xor
fstps
add
push
aaa
jnp
outsl
mov
add
adc
lret
push
stos
jb
add
into
xlat
mov
mov
ja
push
mov
das
lock
jnp
int3
push
lock
and
jae
pop
into
repz
dec
mov
ds
sbb
add
in
fstpl
aas
addl
add
lcall
gs
loop
iret
mov
add
stos
push
orl
xchg
push
jecxz
je
inc
inc
ljmp
ret
xchg
push
jl
outsl
xchg
jge
and
pop
pop
daa
mov
push
push
xlat
and
mov
loope
imulb
add
add
hlt
mov
mov
dec
adc
shr
mov
pop
push
or
movsb
test
loop
jne
dec
adc
add
fsubr
dec
add
mov
push
mov
add
add
add
gs
dec
add
add
xor
out
add
add
add
adc
lcall
insb
add
sub
add
add
insl
xor
les
cld
pop
cmp
mov
mov
daa
rorb
dec
insb
add
add
js
bound
test
push
jo
mov
aas
sarl
add
add
daa
pop
movsl
inc
or
or
mov
pop
mov
xchg
mov
or
add
adc
cmp
les
call
mov
mov
jbe
insl
mov
sbb
add
js
insl
mov
fistps
lret
icebp
lds
mov
stc
and
add
add
add
aad
mov
add
add
add
movsb
lret
test
add
pop
ljmp
pop
ss
push
gs
add
add
push
arpl
jae
push
inc
add
cli
outsb
add
cmp
sbbb
inc
popa
sbb
add
jbe
dec
ret
movsl
scas
cld
xor
add
push
xlat
js
dec
scas
subb
jp
into
xor
add
add
add
jp
push
xchg
out
adc
fcompl
nop
lea
add
sub
jno
add
jl
popf
into
sbb
iret
lock
out
test
adc
mov
mov
cltd
mov
fxsave
dec
das
mov
and
mov
loop
fucomip
fdivrs
lds
adc
cltd
fmul
push
dec
inc
mov
add
add
add
sub
sub
add
add
lods
stos
es
lock
xorb
in
shlb
mov
add
lcall
mov
sub
sub
and
mov
mov
std
lret
je
jns
sub
jbe
or
sbb
stos
inc
aas
movsl
jecxz
push
notl
xor
add
sub
clc
xchg
cld
leave
sahf
movsb
out
movsl
inc
xchg
loopne
aaa
jb
add
mov
jp
idiv
loop
xchg
loop
testl
xor
inc
xchg
insb
add
xchg
bound
xor
cwtl
gs
adc
jne
insl
int3
outsl
fsubrs
repz
in
gs
and
nop
push
xchg
fldt
push
or
inc
shll
sahf
mov
mov
arpl
sar
adc
inc
into
jbe
xchg
inc
dec
neg
sub
add
add
mov
icebp
push
iret
mov
add
add
and
mov
xorl
daa
jnp
pop
lret
cmp
gs
adc
mov
dec
scas
fildll
cltd
mov
push
and
out
mov
mov
movsb
adc
add
sub
add
add
add
or
in
divb
inc
mov
mov
sub
cmp
outsb
movsb
aas
test
add
add
scas
dec
pushf
mov
jmp
xlat
cmp
sub
bound
jae
inc
pop
imul
add
push
movsb
xchg
incl
mov
int
pop
sub
in
sub
das
int
cmp
adc
adc
push
pop
loop
mov
mov
ds
add
cmp
push
ficoms
mov
adc
test
xor
ljmp
add
inc
add
adc
or
add
add
and
add
add
xchg
mov
cmp
push
cld
xchg
loope
cmpl
imull
jb
xor
adc
push
dec
repnz
add
add
mov
xchg
nop
jmp
pop
and
cmp
xor
add
add
sahf
push
out
cmp
add
add
adc
mov
sti
outsb
loope
push
lret
aam
and
and
push
bnd
rcrb
enter
xchg
add
idivb
mov
push
data16
into
lock
add
add
add
xchg
sbb
pop
aam
adc
int
cmpl
inc
movsb
jp
cmp
enter
std
lock
loop
jp
mov
arpl
fwait
jbe
je
cmp
sbb
push
xchg
test
cmp
jp
inc
xchg
das
iret
daa
and
add
add
jmp
shrl
cwtl
jne
dec
jbe
fwait
jne
cli
push
pusha
add
add
cmp
fisttpll
mov
fwait
jo
mov
mov
inc
scas
pop
pop
loope
sub
add
add
add
add
repz
add
add
adc
es
dec
cltd
jmp
add
cmp
pop
lret
cmp
mov
fcompl
mov
roll
jecxz
cmc
inc
push
mov
or
add
repnz
push
ds
add
xor
lods
xor
pop
mov
mov
test
imulb
jge
arpl
add
add
mov
pop
pop
xor
cltd
ret
add
add
ret
mov
call
add
xchg
je
clc
jp
out
xchg
push
rcl
sbb
and
mov
lds
xor
mov
cmp
add
ljmp
add
add
add
add
pop
cmpsl
mov
repnz
cmp
pop
xorl
and
mov
ret
es
jne
pop
mov
lcall
add
mov
pop
dec
adc
mov
enter
push
dec
hlt
mov
add
add
inc
mov
inc
mov
mov
mov
ret
les
jg
mov
and
add
add
lock
fsubr
cmp
push
dec
pop
adc
add
jb
cmp
add
add
push
inc
xchg
cwtl
push
out
sbb
add
add
add
xchg
mov
push
rolb
add
push
cwtl
add
imul
jecxz
sub
mov
sbb
push
inc
and
nop
setl
xor
pop
test
and
mov
mov
mov
fdivrp
dec
add
pop
repnz
add
add
push
jne
jge
add
test
add
add
push
xchg
out
std
jo
jecxz
mov
jl
ds
sub
add
add
pop
dec
jbe
push
int3
shr
sbb
in
or
mov
movl
xor
mov
add
cs
mov
mov
pop
pop
fldenv
add
add
fsubrs
sbb
mov
ljmp
mov
cmpsl
test
rorb
add
add
push
inc
stc
aam
xor
xchg
movaps
mov
cmc
rcl
mov
pop
out
icebp
and
mov
push
or
jecxz
inc
add
add
jge
pop
inc
fildl
out
and
add
add
imul
pop
mov
adc
add
mov
xor
pop
movsl
adc
sbb
add
add
or
add
add
mov
out
and
add
jle
rclb
ja
fidivrs
push
loopne
lret
push
sbb
add
dec
push
adc
xchg
lcall
dec
dec
fwait
bound
sbb
mov
jle
pop
rcrb
add
lods
ja
daa
push
xor
cld
mov
loopne
xchg
testb
add
inc
xchg
pusha
add
pop
lret
inc
add
add
inc
shll
and
mov
pop
and
mov
push
cmp
adc
icebp
push
rolb
in
stos
and
je
pop
xchg
negb
add
mov
push
ds
fists
xor
sub
add
add
cs
loope
lea
js
push
mov
arpl
cmp
push
test
test
sbb
fisubs
inc
cltd
mov
ret
cmpsb
pusha
add
jno
addr16
out
push
xchg
pop
pop
popf
mov
sbb
stc
xchg
fwait
pmuludq
add
les
xor
cmpsb
dec
add
add
or
add
add
repnz
sbb
fmuls
add
icebp
stos
je
cmpb
jmp
fdivs
pop
ss
outsb
aas
add
arpl
xor
add
mov
mov
sahf
dec
imul
mov
jge
fidivl
pusha
add
bswap
and
mov
adc
add
movsl
loopne
popl
push
lret
lea
shll
xchg
enter
add
add
in
mov
add
sub
adc
mov
push
and
mov
add
add
add
out
loop
dec
out
into
je
cwtl
push
test
iret
lods
xchg
pushf
lods
scas
out
cmc
mov
popf
dec
or
setbe
mov
mov
sahf
jecxz
jae
fcomp
loope
add
add
dec
nop
das
adc
jg
mov
sub
jle
fistl
out
push
sar
mov
add
push
insb
add
add
and
mov
mov
add
enter
add
lret
add
push
xlat
cmc
lods
shll
mov
mov
movsl
shr
pop
ds
add
add
add
add
adc
add
or
mov
add
out
ror
jns
mov
xchg
lods
stc
sub
mov
push
jmp
jmp
sub
add
add
lds
repnz
add
cmp
fwait
push
mov
shl
cwtl
gs
testl
sbb
xchg
cli
loopne
fisubrl
cld
cld
inc
add
mov
lock
loope
pusha
add
add
into
dec
add
add
enter
in
int
adcl
fsubrl
add
in
push
mov
xor
mov
cmp
mov
adc
adc
js
daa
lea
add
add
pop
mov
imul
push
xor
ret
xor
fiaddl
adc
jns
daa
mov
add
sbb
les
mov
jmp
sbb
push
stos
je
sub
add
add
stc
ja
repz
add
icebp
std
call
add
mov
push
sti
hlt
inc
les
mov
inc
add
or
push
or
add
add
fld
or
add
add
add
gs
es
repz
mov
pushf
pop
sbb
flds
push
icebp
fidivrs
negb
xchg
xchg
outsb
push
int3
or
outsb
lds
movsb
lods
jbe
adc
push
shlb
add
cwtl
sub
outsb
jno
out
movsl
jecxz
nop
inc
mov
mov
dec
mov
add
add
sbbl
mov
add
add
add
out
dec
add
add
orl
add
add
pushf
sbbb
inc
add
testb
rorb
stos
push
and
cmp
or
mov
fwait
inc
add
jbe
inc
dec
lcall
add
bound
add
add
add
rolb
mov
pop
cli
xchg
add
add
add
int3
cmc
mov
ret
nop/reserved
cmpsb
jb
sub
add
add
mov
in
add
dec
xor
out
daa
add
add
add
adc
add
shl
jg
mov
fnstenv
pop
insb
add
fdivs
add
loope
pop
js
popa
mov
jnp
cmpsb
mov
sbb
popf
xchg
cmp
pop
add
mov
idiv
clc
repz
jmp
jae
add
mov
cwtl
cmpb
inc
add
push
add
inc
pusha
pop
add
add
mov
or
cld
jmp
jae
mov
add
mov
dec
and
clc
repz
jmp
jae
add
add
pusha
add
mov
mov
xchg
ret
add
add
enter
push
adc
repz
jmp
jae
add
add
add
xchg
adcb
test
push
mov
xchg
ret
mov
add
add
pusha
add
add
xor
push
mov
xchg
ret
or
dec
add
add
popa
add
xchg
fwait
mov
push
mov
xchg
ret
cs
stc
imul
mov
ret
and
test
cld
jmp
jae
add
add
add
mov
cmpl
nop
jmp
add
std
add
std
add
jmp
jae
add
add
add
mov
inc
shl
clc
repz
jmp
jae
cmp
add
add
fcoml
cld
jmp
jae
std
add
push
pusha
add
mov
cld
jmp
jae
mov
add
pop
mov
icebp
pusha
nop
push
mov
leave
nop
jmp
mov
add
add
push
and
repz
jmp
jae
mov
add
call
push
mov
xchg
ret
pusha
or
cmp
add
add
clc
repz
jmp
jae
add
mov
cmp
push
nop
push
mov
leave
nop
jmp
add
mov
add
add
add
jecxz
clc
repz
jmp
jae
add
add
incl
subb
push
push
mov
xchg
ret
add
add
cmp
push
add
clc
repz
jmp
jae
incl
loope
add
add
ds
popf
mov
nop
push
mov
leave
nop
jmp
adcb
add
mov
mov
clc
repz
jmp
jae
add
xlat
dec
xlat
add
or
inc
push
mov
xchg
ret
add
ljmp
cltd
stc
sti
push
push
imul
cld
jmp
jae
sbb
sti
pop
add
mov
clc
repz
jmp
jae
std
add
add
mov
fnstcw
clc
repz
jmp
jae
add
enter
add
xchg
add
nop
jmp
pop
mov
add
mov
add
inc
add
clc
repz
jmp
jae
mov
mov
addl
add
mov
clc
nop
push
mov
leave
nop
jmp
mov
add
rorl
nop
push
mov
leave
nop
jmp
push
pop
mov
ret
repz
repz
jmp
jae
push
add
repnz
add
push
cwtl
popa
pop
clc
repz
jmp
jae
jbe
add
add
popl
test
jbe
push
mov
add
mov
mov
incl
add
mov
push
push
mov
xchg
ret
push
sti
add
mov
inc
add
mov
push
push
mov
xchg
ret
push
pusha
add
add
mov
loop
inc
add
int
add
add
leave
add
xlat
loop
push
push
mov
xchg
ret
orb
add
xchg
lcall
add
add
repz
jmp
jae
int
mov
add
jbe
add
clc
repz
jmp
jae
add
add
add
lea
or
nop
jmp
stc
add
add
inc
or
mov
xchg
ret
mov
pop
add
add
shrb
jle
add
add
pusha
add
lds
mov
xchg
ret
pop
push
leave
stc
xchg
pop
add
arpl
repz
jmp
jae
pusha
sti
add
into
clc
sub
add
dec
in
add
add
clc
push
sti
add
add
nop
push
mov
leave
nop
jmp
add
add
add
add
sahf
xchg
inc
add
cmp
add
mov
add
clc
repz
jmp
jae
mov
cs
add
add
mov
mov
and
call
add
xorl
add
pop
or
rorl
add
repz
jmp
jae
add
add
add
pop
pushf
mov
clc
repz
jmp
jae
add
add
xchg
or
push
mov
leave
nop
jmp
mov
ljmp
pop
ss
mov
pop
clc
repz
jmp
jae
add
add
xlat
push
mov
clc
repz
jmp
jae
add
add
ljmp
xchg
jne
clc
repz
jmp
jae
or
cltd
add
add
cs
mov
nop
push
mov
leave
nop
jmp
cltd
add
add
imul
mov
leave
nop
jmp
lcall
add
incl
add
dec
sti
ret
clc
repz
jmp
jae
or
cwtl
nop
add
aaa
add
add
xlat
gs
clc
repz
jmp
jae
add
push
mov
cs
mov
leave
nop
jmp
add
push
mov
add
add
push
mov
xchg
ret
xorb
or
add
repz
jmp
jae
cmp
stc
sbb
or
cmp
clc
repz
jmp
jae
movb
pop
add
clc
repz
jmp
jae
add
int
leave
pop
mov
add
add
test
push
mov
xchg
ret
add
add
rorl
mov
cltd
mov
out
sbb
add
sub
add
add
add
clc
fsubs
dec
test
xchg
ret
xlat
pop
popa
or
dec
mov
or
ret
lret
sbb
add
and
pop
loope
sbb
mov
pop
or
mov
mov
mov
add
add
repz
jmp
jae
pop
clc
jge
add
in
inc
add
add
sbb
ljmp
add
inc
add
add
push
cs
mov
xchg
ret
add
cmp
inc
cmp
add
ret
push
mov
xchg
ret
add
cmp
test
add
nop
mov
repz
clc
repz
jmp
jae
add
add
add
pop
stc
leave
add
push
sbb
push
clc
repz
jmp
jae
add
stc
dec
mov
mov
add
add
add
repz
jmp
jae
mov
or
inc
pop
leave
jg
jg
clc
repz
jmp
jae
add
mov
add
push
mov
xchg
ret
mov
add
add
add
decl
mov
mov
push
mov
xchg
ret
int
jge
add
ljmp
sbb
mov
push
clc
repz
jmp
jae
pop
imul
mov
ljmp
and
repz
jmp
jae
add
xchg
or
cmp
push
clc
repz
jmp
jae
mov
push
add
add
push
push
mov
xchg
ret
xlat
add
stc
imul
add
pusha
add
add
mov
nop
incl
mov
add
loope
mov
mov
xchg
ret
add
xchg
mov
aaa
or
sbb
push
mov
xchg
ret
mov
in
add
movsl
push
clc
repz
jmp
jae
mov
add
add
cmp
clc
repz
jmp
jae
call
data16
cmp
pop
clc
repz
jmp
jae
cmp
add
push
push
sti
jmp
push
std
incl
roll
add
pop
cwtl
data16
mov
pop
fnstsw
clc
repz
jmp
jae
add
add
movb
sarb
nop
push
mov
leave
nop
jmp
add
in
add
cs
add
dec
xor
add
repz
jmp
jae
jmp
add
xchg
or
push
mov
leave
nop
jmp
cwtl
cmp
push
add
dec
sbb
mov
dec
clc
repz
jmp
jae
sti
add
stc
add
cmp
sti
adc
jmp
jae
add
sti
out
push
mov
mov
push
mov
leave
nop
jmp
pusha
add
std
add
add
mov
clc
repz
jmp
jae
cmp
add
add
jbe
mov
shlb
and
clc
repz
jmp
jae
cs
test
loope
mov
adc
nop
jmp
popa
add
add
add
cmpsl
add
clc
repz
jmp
jae
mov
cs
mov
add
add
shlb
mov
leave
nop
jmp
repnz
mov
add
add
sbb
repz
jmp
jae
pop
add
cmp
xchg
mov
dec
rorb
sbb
or
ret
pusha
andb
mov
add
jb
add
xchg
add
popa
mov
add
push
clc
repz
jmp
jae
add
add
cs
cltd
loope
add
popf
pop
clc
repz
jmp
jae
or
int
add
add
inc
clc
rorl
icebp
inc
dec
es
repz
jmp
jae
mov
add
add
clc
repz
jmp
jae
leave
roll
add
add
add
add
clc
repz
jmp
jae
add
mov
push
addl
sbb
clc
repz
jmp
jae
or
out
add
dec
mov
add
jmp
jae
add
xchg
pop
add
add
inc
add
add
xor
mov
jmp
jae
add
add
ret
add
mov
push
mov
leave
nop
jmp
mov
cltd
add
int
add
nop
push
ljmp
clc
repz
jmp
jae
cmp
mov
add
cltd
pop
clc
repz
jmp
jae
add
mov
add
xlat
mov
jb
jmp
mov
add
or
or
stc
pusha
add
mov
leave
lea
clc
repz
jmp
jae
add
push
or
stos
pop
push
mov
xchg
ret
pop
enter
cwtl
cltd
add
mov
add
clc
repz
jmp
jae
add
add
add
jbe
add
add
cmovns
nop
jmp
cltd
push
add
sbb
xor
push
push
mov
xchg
ret
pop
add
roll
add
add
add
mov
rcrb
mov
clc
repz
jmp
jae
xchg
add
pop
add
sub
push
mov
xchg
ret
mov
mov
add
add
adc
clc
repz
jmp
jae
inc
inc
add
add
pusha
cwtl
and
jmp
jae
add
ljmp
jbe
add
mov
nop
push
mov
leave
nop
jmp
add
pop
add
add
add
push
mov
xchg
ret
add
add
aaa
popw
push
mov
in
leave
nop
jmp
add
inc
roll
mov
add
xchg
nop
push
mov
leave
nop
jmp
add
add
pop
pop
jbe
push
out
ret
scas
enter
jmp
jae
in
add
mov
add
add
clc
repz
jmp
jae
xlat
loope,pn
and
mov
repnz
fs
repz
jmp
jae
add
add
add
iret
push
push
mov
xchg
ret
cmp
mov
stc
add
cltd
add
cld
jmp
jae
mov
add
add
inc
bound
lea
in
stc
add
lcall
lcall
xor
repz
jmp
jae
add
add
mov
mov
jmp
in
leave
nop
jmp
add
add
cmp
stc
add
inc
add
pushf
psllq
jae
add
mov
add
add
in
leave
nop
jmp
or
or
add
push
subl
push
mov
xchg
ret
add
add
mov
mov
dec
add
test
add
clc
repz
jmp
jae
pop
add
movb
adc
sar
cld
jmp
jae
add
add
sbb
push
imul
mov
xchg
ret
jbe
xchg
mov
add
imul
push
mov
leave
nop
jmp
or
add
add
cmp
add
loop
clc
repz
jmp
jae
pop
add
add
fimull
add
add
inc
add
nop
push
mov
leave
nop
jmp
add
dec
jge
add
call
inc
add
pop
mov
add
cmp
mov
xchg
ret
cmp
pusha
xchg
add
push
dec
cmp
xor
nop
push
mov
leave
nop
jmp
mov
add
bound
cld
jmp
jae
add
push
pusha
pusha
pusha
stc
cs
repz
jmp
jae
add
or
add
push
mov
ja
clc
repz
jmp
jae
int
pusha
add
pusha
cltd
cwtl
mov
push
clc
repz
jmp
jae
add
pop
xlat
or
cwtl
add
cwtl
mov
push
loopne
mov
xchg
ret
loope
pop
incl
enter
add
call
clc
repz
jmp
jae
ret
add
enter
out
jecxz
clc
repz
jmp
jae
pop
ljmp
mov
call
clc
repz
jmp
jae
sti
add
add
mov
clc
repz
jmp
jae
add
add
int
jbe
les
add
add
xchg
mov
clc
repz
jmp
jae
add
mov
add
aaa
ljmp
clc
repz
jmp
jae
add
add
mov
xlat
inc
leave
aaa
fstpl
repz
jmp
jae
add
xlat
pop
cs
scas
orl
add
repz
jmp
jae
out
add
add
add
call
leave
nop
jmp
dec
add
mov
add
add
fwait
cmp
nop
push
mov
leave
nop
jmp
add
aaa
or
in
cmp
nop
push
mov
leave
nop
jmp
pusha
sbb
cmp
add
addl
fld1
push
mov
xchg
ret
add
jge
enter
pop
or
add
adc
cld
jmp
jae
or
push
std
push
cmp
shlb
inc
clc
repz
jmp
jae
add
add
mov
or
pop
mov
repz
repz
jmp
jae
inc
add
add
mov
subb
nop
push
mov
leave
nop
jmp
add
add
add
repnz
add
add
adc
mov
add
add
repz
jmp
jae
add
add
or
add
clc
repz
jmp
jae
popl
add
mov
push
hlt
and
push
mov
leave
nop
jmp
add
inc
pop
pop
push
mov
loope
inc
and
repz
jmp
jae
enter
add
shll
add
clc
repz
jmp
jae
test
push
mov
loopne
sbb
clc
repz
jmp
jae
int
pusha
add
inc
out
add
mov
mov
adc
repz
jmp
jae
repnz
incl
in
enter
push
inc
sbb
repz
jmp
jae
cmp
add
int
test
cld
jmp
jae
mov
add
add
add
clc
repz
jmp
jae
add
add
add
ret
cmpl
nop
push
mov
leave
nop
jmp
xlat
add
arpl
clc
repz
jmp
jae
roll
add
enter
add
add
add
repz
jmp
jae
mov
mov
dec
test
clc
repz
jmp
jae
add
mov
inc
pop
add
mov
repz
jmp
jae
add
add
add
add
add
nop
mov
clc
repz
jmp
jae
roll
mov
mov
incl
mov
pop
int
nop
push
mov
leave
nop
jmp
pusha
add
add
repnz
add
add
roll
in
leave
nop
jmp
inc
mov
mov
add
outsl
mov
clc
repz
jmp
jae
add
add
loope
add
mov
aaa
std
inc
clc
repz
jmp
jae
add
mov
xor
mov
xchg
ret
add
incl
pusha
mov
enter
xchg
cmpl
add
sub
incl
popa
add
add
add
add
xorl
and
repz
jmp
jae
mov
out
add
add
add
mov
inc
add
add
mov
add
mov
add
sub
add
clc
repz
jmp
jae
cwtl
add
push
or
add
in
leave
nop
jmp
add
push
add
add
add
or
add
add
sar
cld
jmp
jae
add
add
add
add
add
sbb
add
add
add
add
push
ret
add
add
mov
or
outsb
and
mov
xchg
ret
add
add
leave
std
cmp
add
out
sbb
cmp
nop
jmp
pop
add
nop
cltd
ret
lods
mov
clc
repz
jmp
jae
add
push
cmp
add
add
push
negb
mov
clc
repz
jmp
jae
add
add
pop
out
inc
pop
add
mov
push
popa
nop
push
mov
leave
nop
jmp
mov
mov
add
pusha
enter
mov
add
stos
jb
inc
add
out
vpsubsb
repz
jmp
jae
add
add
add
pop
add
pop
clc
repz
jmp
jae
mov
add
pop
mov
pop
stos
push
push
mov
xchg
ret
add
add
sti
int
mov
cltd
push
clc
repz
jmp
jae
pop
or
add
sbb
dec
add
sub
repz
jmp
jae
add
dec
test
movb
push
push
mov
xchg
ret
dec
add
data16
or
add
clc
pop
mov
nop
push
mov
leave
nop
jmp
add
add
int
add
add
ror
nop
push
mov
leave
nop
jmp
xlat
add
popa
add
cmp
push
jle
add
nop
jmp
add
stc
repnz
add
test
push
mov
add
add
inc
add
cmp
roll
shrl
ror
pop
nop
push
mov
leave
nop
jmp
add
add
add
add
shrl
popa
clc
repz
jmp
jae
ret
push
int
add
push
clc
repz
jmp
jae
add
pop
pop
add
add
pop
lods
clc
repz
jmp
jae
add
add
popa
add
int
push
push
mov
xchg
ret
cmp
pop
add
add
cmp
jg
add
add
mov
add
mov
imul
jl
incl
add
mov
push
mov
add
incl
add
add
add
add
add
dec
cmp
repz
jmp
jae
mov
add
add
add
lret
jne
nop
push
mov
leave
nop
jmp
add
or
sbb
jns
leave
nop
push
mov
leave
nop
jmp
ret
std
ljmp
lea
jg
clc
repz
jmp
jae
clc
inc
add
leave
lahf
push
nop
push
mov
leave
nop
jmp
incl
push
mov
rorl
mov
cld
jmp
jae
mov
pusha
pop
add
add
pop
add
push
mov
xchg
ret
add
add
add
loope
in
add
jmp
jae
add
or
inc
add
add
ret
or
repz
jmp
jae
xlat
add
add
add
pop
movb
nop
popa
push
push
mov
xchg
ret
add
add
roll
int
add
mov
xor
xchg
mov
xchg
ret
cmp
cwtl
mov
pop
popa
mov
roll
jg
movsb
push
mov
xchg
ret
cmp
incl
cmp
mov
pop
ret
testl
nop
push
mov
leave
nop
jmp
add
push
push
or
fcomps
push
cmp
sti
clc
repz
jmp
jae
sbbl
nop
imul
xchg
dec
add
add
pop
add
mov
push
clc
repz
jmp
jae
pop
mov
sbb
loope
pusha
add
add
jb
and
add
add
jae
add
clc
repz
jmp
jae
xchg
add
add
loope
mov
mov
push
mov
xchg
ret
push
add
pop
add
int
push
mov
clc
repz
jmp
jae
add
pop
inc
pop
add
add
add
xlat
push
nop
push
mov
leave
nop
jmp
stc
enter
add
roll
cmp
push
cmp
add
clc
repz
jmp
jae
add
add
dec
or
mov
repz
jmp
jae
add
jge
add
ljmp
je
add
cs
add
mov
sti
pusha
std
add
lea
push
mov
xchg
ret
add
repnz
jbe
leave
add
mov
pusha
add
add
add
push
clc
repz
jmp
jae
leave
add
add
add
add
jp
int
clc
repz
jmp
jae
add
std
add
add
xlat
xchg
xor
clc
repz
jmp
jae
popl
dec
add
cmp
cwtl
mov
push
add
mov
add
add
outsl
add
cmpsb
jbe
add
push
inc
int
jne
push
mov
xchg
ret
cmp
pop
loope
add
cmp
cmp
clc
repz
jmp
jae
jge
mov
add
add
cltd
std
clc
repz
jmp
jae
add
add
mov
pop
enter
mov
call
add
xorl
add
add
imul
int
cmp
ja
nop
push
mov
leave
nop
jmp
xchg
std
add
mov
push
xor
test
add
add
nop
jmp
mov
mov
dec
test
nop
push
mov
leave
nop
jmp
add
clc
mov
les
add
add
repz
jmp
jae
cmp
pop
push
repz
jmp
jae
add
orl
add
aam
stc
fld1
clc
repz
jmp
jae
add
add
pop
jbe
dec
lea
nop
push
mov
leave
nop
jmp
add
add
add
add
adc
and
mov
jb
cmp
clc
repz
jmp
jae
add
add
std
mov
mov
cmp
test
idiv
clc
repz
jmp
jae
add
add
pusha
add
popf
push
clc
repz
jmp
jae
inc
add
pop
add
add
mov
push
mov
xchg
ret
stc
or
add
pop
inc
dec
push
dec
push
clc
repz
jmp
jae
nop
pop
add
sti
imul
mov
or
sar
cld
jmp
jae
add
ljmp
add
arpl
xchg
inc
add
add
add
imul
push
mov
rorl
mov
xchg
ret
add
add
mov
add
add
xor
clc
repz
jmp
jae
pusha
add
sti
add
popa
in
mov
or
and
nop
push
mov
leave
nop
jmp
add
add
cltd
jge
add
add
roll
push
mov
leave
nop
jmp
sbb
add
popa
mov
aaa
jecxz
clc
repz
jmp
jae
add
add
add
add
out
mov
in
leave
nop
jmp
xlat
add
cmp
pop
add
cmp
add
add
clc
repz
jmp
jae
add
add
roll
ljmp
push
mov
leave
nop
jmp
add
loope
add
aaa
add
clc
repz
jmp
jae
add
mov
add
mov
push
mov
xchg
ret
cmp
loope
push
imul
mov
leave
nop
jmp
sbb
stc
add
mov
incl
add
add
mov
clc
repz
jmp
jae
sbb
add
xorl
nop
push
mov
leave
nop
jmp
test
add
cli
mov
sbb
add
repz
jmp
jae
add
add
enter
cld
push
mov
xchg
ret
add
add
leave
add
add
add
inc
and
repz
jmp
jae
mov
sbb
popl
or
das
and
add
nop
jmp
sti
pop
add
add
add
sarb
cld
jmp
jae
pop
xlat
pop
add
add
loope
xchg
push
stc
subl
clc
repz
jmp
jae
or
ret
add
add
pop
loop
add
inc
call
add
adc
incl
add
add
enter
add
nop
push
mov
leave
nop
jmp
inc
pop
add
add
pushf
and
lcall
add
incl
out
mov
inc
loopne
mov
xchg
ret
add
add
or
add
add
add
jmp
add
popw
mov
mov
mov
add
popa
add
add
add
in
push
mov
xchg
ret
push
loope
add
add
cmpl
add
cltd
mov
push
mov
xchg
ret
mov
add
jge
add
add
add
clc
repz
jmp
jae
add
add
add
aaa
add
add
cmpsb
lret
inc
clc
repz
jmp
jae
mov
add
add
std
ljmp
mov
leave
nop
jmp
jbe
cmp
stc
addb
add
je
clc
repz
jmp
jae
add
add
add
push
mov
out
add
fs
cld
je
add
movsb
mov
xchg
add
pushf
fisttps
jmp
jae
aaa
add
std
add
add
dec
sub
mov
call
jmp
jae
add
mov
add
add
pop
rep
nop
push
mov
leave
nop
jmp
add
add
aaa
inc
pop
roll
pop
add
push
clc
repz
jmp
jae
mov
dec
add
enter
lret
mov
push
mov
xchg
ret
sti
add
int
add
add
nop
push
mov
leave
nop
jmp
inc
sbb
leave
inc
adcl
add
jmp
add
add
inc
add
add
jne
jg
clc
repz
jmp
jae
add
mov
mov
pop
add
sub
add
add
cmp
cld
jmp
jae
mov
push
dec
pop
clc
repz
jmp
jae
pop
pop
add
add
add
mov
mov
or
cld
jmp
jae
incl
popa
ljmp
lret
add
sbb
add
add
add
leave
add
add
repz
jmp
jae
popl
mov
mov
add
add
add
repz
jmp
jae
add
xlat
mov
add
push
clc
repz
jmp
jae
add
add
mov
mov
clc
repz
jmp
jae
aaa
add
add
add
add
add
push
mov
add
repz
jmp
jae
rol
test
add
repz
jmp
jae
addb
loope
add
stc
or
xchg
push
clc
repz
jmp
jae
add
ret
add
cmp
add
inc
ja
pop
adc
lods
pop
inc
add
add
pop
leave
inc
add
popa
add
push
mov
xchg
ret
cmp
pop
add
add
push
add
nop
push
mov
leave
nop
jmp
mov
mov
add
add
add
popf
jo
add
xchg
xchg
add
repnz
out
add
out
add
mov
xchg
ret
imul
add
or
add
add
pop
in
jae
jbe
ljmp
add
mov
add
add
push
inc
add
push
clc
mov
pusha
xor
add
clc
repz
jmp
jae
push
add
add
mov
add
add
lea
clc
repz
jmp
jae
add
push
cmp
fwait
push
mov
xchg
ret
jge
add
or
add
add
int
pop
push
mov
xchg
ret
add
add
add
or
cs
add
dec
fwait
push
mov
xchg
ret
add
mov
cmp
popa
add
orb
fld1
push
mov
xchg
ret
jge
add
add
jmp
lea
xchg
ret
pushaw
cwtl
leave
addb
add
in
fld1
clc
repz
jmp
jae
nop
imul
add
cwtl
leave
add
push
clc
repz
jmp
jae
popa
add
std
pop
add
pop
add
int
mov
nop
push
mov
leave
nop
jmp
pop
int
xorb
dec
mov
clc
repz
jmp
jae
add
repnz
add
push
add
rorl
and
add
pop
add
push
add
push
add
push
mov
xchg
ret
add
add
call
add
add
sub
jmp
jae
mov
add
imul
add
add
clc
repz
jmp
jae
or
mov
fdivrl
jg
add
insb
nop
push
mov
leave
nop
jmp
movb
jge
or
test
nop
push
mov
leave
nop
jmp
add
popl
add
inc
or
inc
ret
mov
clc
repz
jmp
jae
clc
int
add
add
pop
in
jbe
movsb
out
div
nop
push
mov
leave
nop
jmp
inc
add
add
mov
fucomip
push
sbb
mov
leave
nop
jmp
add
or
add
and
repz
jmp
jae
mov
incl
add
lds
repz
jmp
jae
std
repnz
add
add
xchg
notl
add
andl
cmp
add
add
jge
pusha
add
add
inc
nop
push
mov
leave
nop
jmp
cmp
mov
xlat
add
add
std
jno
clc
repz
jmp
jae
dec
add
imul
bnd
clc
push
mov
xchg
ret
pusha
imul
pusha
mov
popa
add
repz
jmp
jae
cs
or
call
mov
leave
inc
clc
repz
jmp
jae
test
add
sti
xchg
mov
nop
push
mov
leave
nop
jmp
out
cmp
xlat
inc
stc
std
imul
add
clc
repz
jmp
jae
leave
add
add
loope
add
add
gs
clc
repz
jmp
jae
add
stc
pop
cmp
add
inc
add
push
push
mov
leave
nop
jmp
xchg
mov
add
add
fs
add
add
add
jbe
add
cld
jmp
jae
pop
add
loope
mov
mov
repz
jmp
jae
imul
add
cmp
add
add
add
dec
push
fistpl
push
mov
xchg
ret
jge
add
incl
mov
addl
mov
xchg
ret
clc
add
add
add
mov
adc
clc
repz
jmp
jae
std
add
add
xchg
cmp
cmp
ss
sub
bound
add
ret
pop
sbb
fwait
in
cmc
add
push
lods
cmp
in
add
aad
mov
add
add
add
adcl
add
incl
nop
push
mov
leave
nop
jmp
add
add
mov
mov
clc
repz
jmp
jae
add
sti
add
popl
or
xchg
outsb
cmp
clc
repz
jmp
jae
add
cltd
andb
pop
movswl
clc
repz
jmp
jae
add
add
add
out
mov
clc
repz
jmp
jae
imul
loope
add
imul
xchg
pop
inc
add
or
add
inc
int
testl
jmp
jae
add
out
add
call
clc
repz
jmp
jae
add
in
cs
push
push
fld1
clc
repz
jmp
jae
add
clc
sbb
add
movsb
mov
jmp
jae
add
add
data16
add
add
add
test
repz
jmp
jae
add
mov
jge
inc
in
mov
xchg
ret
add
add
add
mov
test
add
nop
push
mov
leave
nop
jmp
inc
sti
add
add
sbb
repz
jmp
jae
loope
jbe
add
add
mov
sahf
clc
xlat
add
clc
repz
jmp
jae
nop
cltd
add
add
xlat
push
mov
mov
clc
repz
jmp
jae
roll
mov
ljmp
add
add
add
and
add
add
mov
add
dec
sbb
add
repz
jmp
jae
ljmp
pop
les
mov
fisubs
repz
jmp
jae
mov
test
add
mov
repz
jmp
jae
add
add
add
pop
or
mov
clc
repz
jmp
jae
mov
mov
add
stos
push
mov
xchg
ret
roll
or
add
add
mov
mov
xor
clc
repz
jmp
jae
add
jbe
ljmp
cld
jmp
jae
pop
sti
pop
popa
push
add
popf
lods
push
mov
xchg
ret
loope
cwtl
mov
imul
add
mov
push
mov
xchg
ret
or
cmp
sti
pop
cmp
add
mov
not
clc
repz
jmp
jae
lcall
add
mov
mov
add
clc
repz
jmp
jae
add
incl
add
add
pop
mov
jmp
push
mov
xchg
ret
clc
sti
in
add
int
incl
push
pop
jmp
jmp
jae
pop
pop
add
in
pushl
clc
repz
jmp
jae
add
addl
pop
stc
pop
add
pop
add
nop
push
mov
leave
nop
jmp
mov
ljmp
add
add
nop
push
mov
leave
nop
jmp
cmp
add
mov
cld
jmp
jae
add
add
push
add
add
add
roll
jne
clc
repz
jmp
jae
add
repnz
jne
jmp
jmp
jae
cmp
add
add
add
test
repz
jmp
jae
add
mov
enter
cwtl
pop
push
mov
xchg
ret
ljmp
add
add
dec
pushf
xlat
mov
clc
repz
jmp
jae
add
add
add
call
nop
push
mov
leave
nop
jmp
push
cmp
mov
mov
repnz
clc
jge
add
negb
out
lret
rolb
addl
sub
pop
test
xlat
mov
clc
repz
jmp
jae
add
add
mov
std
popa
cmp
adc
add
clc
repz
jmp
jae
add
add
enter
ds
xchg
jbe
mov
clc
repz
jmp
jae
add
add
add
pop
add
movsl
push
push
mov
xchg
ret
test
pop
add
add
add
mov
clc
repz
jmp
jae
pop
popa
enter
mov
fwait
mov
clc
repz
jmp
jae
add
pop
sti
popa
xchg
ljmp
inc
pop
clc
repz
jmp
jae
add
add
mov
add
cltd
inc
push
push
nop
push
mov
leave
nop
jmp
mov
cmp
imul
cmp
add
test
add
clc
repz
jmp
jae
stc
add
cltd
add
and
push
mov
leave
nop
jmp
popa
sbb
int
add
jge
clc
repz
jmp
jae
add
cmp
lcall
mov
nop
push
mov
leave
nop
jmp
data16
add
add
add
adc
incl
leave
cmp
jge
add
dec
add
sbb
sbb
add
add
add
add
jmp
jae
push
add
test
mov
jl
mov
clc
repz
jmp
jae
cltd
sti
mov
push
aaa
add
orb
or
repz
jmp
jae
cmp
push
add
mov
jecxz
sar
push
mov
leave
nop
jmp
add
add
addl
add
push
mov
xchg
ret
add
out
add
add
add
add
repz
jmp
jae
add
sbbb
mov
insb
inc
jb
clc
repz
jmp
jae
jbe
add
imul
add
jmp
jae
ret
add
add
ljmp
or
push
mov
leave
nop
jmp
add
add
add
mov
xchg
ret
mov
cmp
add
add
mov
xchg
add
in
incl
add
add
add
add
pop
add
add
adc
clc
repz
jmp
jae
add
mov
add
mov
clc
repz
jmp
jae
inc
mov
data16
add
add
add
sbb
push
mov
xchg
ret
or
cltd
add
or
and
clc
repz
jmp
jae
add
sti
popw
add
sub
clc
repz
jmp
jae
imul
add
add
repz
jmp
jae
pop
add
mov
out
mov
add
test
cld
clc
repz
jmp
jae
add
shll
in
pushf
push
jbe
scas
dec
mov
nop
push
mov
leave
nop
jmp
add
cltd
add
add
add
mov
push
scas
clc
repz
jmp
jae
ljmp
add
add
or
push
nop
inc
add
jge
loope
add
mov
add
dec
adc
add
repz
jmp
jae
mov
pop
pusha
imul
outsl
push
nop
push
mov
leave
nop
jmp
add
in
add
cs
and
nop
push
mov
leave
nop
jmp
add
dec
pop
add
add
mov
cld
jmp
jae
add
stc
sti
cmp
cwtl
jge
add
mov
cld
jmp
jae
add
leave
in
add
or
inc
inc
add
repz
jmp
jae
dec
mov
add
add
jge
iret
push
push
mov
xchg
ret
mov
add
push
add
add
ljmp
inc
and
push
mov
xchg
ret
add
stc
decl
add
cmpl
mov
leave
nop
jmp
add
add
pop
add
ret
dec
push
mov
xchg
ret
data16
leave
pop
add
out
pushl
clc
repz
jmp
jae
add
add
cmp
add
add
dec
call
clc
repz
jmp
jae
cltd
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
pop
add
push
sub
mov
push
out
add
clc
repz
jmp
jae
add
add
cmp
add
popl
cmp
lss
clc
repz
jmp
jae
in
cmp
push
xlat
push
push
mov
xchg
ret
add
add
incl
add
pop
fisttpl
add
repz
jmp
jae
data16
in
stos
nop
push
mov
leave
nop
jmp
mov
add
add
add
stc
cmc
push
mov
adc
testl
add
add
mov
push
mov
xchg
ret
add
cwtl
add
nop
ljmp
repz
jmp
jae
stc
mov
jbe
add
imul
lods
addl
xchg
ret
add
cmp
out
add
mov
push
clc
repz
jmp
jae
enter
add
add
repz
jmp
jae
sbb
mov
repnz
in
xor
clc
repz
jmp
jae
sti
popa
mov
test
add
clc
repz
jmp
jae
add
add
pop
push
mov
clc
repz
jmp
jae
repnz
cwtl
nop
add
add
pop
cs
decl
push
mov
xchg
ret
add
add
test
in
int
add
inc
add
outsb
add
add
xchg
add
mov
call
clc
repz
jmp
jae
stc
pusha
cmp
inc
test
push
mov
xchg
ret
ret
pusha
ljmp
roll
mov
jmp
jmp
jae
add
xchg
pop
pop
cwtl
sti
clc
pop
and
mov
xchg
ret
mov
repnz
rcrl
cmp
push
mov
mov
push
mov
xchg
ret
cmp
decl
add
add
popa
ss
mov
clc
repz
jmp
jae
sbb
sti
cltd
mov
add
add
add
addr16
push
mov
xchg
ret
imul
mov
add
xchg
add
clc
repz
jmp
jae
ljmp
cs
xlat
inc
mov
cmpl
xchg
ret
push
add
aaa
sbb
cmp
popa
xchg
nop
push
mov
leave
nop
jmp
in
push
add
mov
jbe
mov
fistps
push
mov
leave
nop
jmp
add
add
add
ljmp
das
mov
clc
repz
jmp
jae
add
popa
mov
push
mov
add
loop
jne
clc
repz
jmp
jae
add
add
add
clc
repz
jmp
jae
add
or
inc
add
add
jbe
add
add
dec
inc
add
add
cwtl
pusha
add
sti
nop
push
mov
leave
nop
jmp
add
loope
out
pop
add
pusha
mov
cmp
repz
jmp
jae
mov
pop
add
mov
sub
mov
push
mov
add
cmpsl
pop
clc
repz
jmp
jae
add
mov
add
movb
xlat
add
mov
inc
adc
repz
jmp
jae
add
stc
add
stc
add
out
nop
push
mov
leave
nop
jmp
push
add
add
add
add
add
inc
mov
clc
repz
jmp
jae
ret
add
add
xchg
mov
clc
repz
jmp
jae
sti
add
test
fwait
push
mov
xchg
ret
dec
nop
cwtl
mov
add
add
mov
mov
clc
repz
jmp
jae
cmp
add
add
cmp
out
inc
add
sti
in
add
push
add
data16
mov
leave
nop
jmp
enter
add
add
mov
movsb
popa
jne
clc
repz
jmp
jae
add
stc
add
add
push
push
mov
xchg
ret
nop
add
cltd
add
add
mov
push
mov
leave
nop
jmp
inc
aaa
ret
pop
or
add
pusha
jg
icebp
nop
push
mov
leave
nop
jmp
sbb
imul
sti
add
add
mov
loopne
cmpsb
pop
subb
repz
jmp
jae
cmp
movb
add
add
dec
out
shr
clc
repz
jmp
jae
push
add
add
mov
clc
repz
jmp
jae
pop
cltd
pusha
add
pop
mulb
in
leave
nop
jmp
mov
movb
dec
leave
add
pop
notl
push
mov
leave
nop
jmp
add
mov
nop
popl
addb
enter
clc
repz
jmp
jae
data16
cmp
imul
push
xchg
lea
push
mov
xchg
ret
cmp
mov
pop
stc
nop
add
add
mov
cmc
call
clc
repz
jmp
jae
cwtl
add
add
mov
out
push
mov
xchg
ret
test
mov
cmp
adc
clc
inc
add
push
mov
xchg
ret
mov
xchg
add
sti
aaa
ljmp
repz
jmp
jae
push
in
add
add
fistpl
push
mov
xchg
ret
add
pop
data16
mov
pusha
add
nop
adc
jmp
mov
xchg
ret
pusha
add
leave
add
add
cmp
add
clc
repz
jmp
jae
add
enter
add
movsl
pop
clc
repz
jmp
jae
in
add
add
push
add
popa
push
mov
xchg
ret
addl
add
add
mov
jecxz
clc
repz
jmp
jae
dec
add
add
ljmp
aaa
ret
clc
repz
jmp
jae
add
pusha
add
or
add
clc
repz
jmp
jae
add
mov
add
mov
aam
push
clc
repz
jmp
jae
pop
nop
pusha
jbe
rcl
int
sbbb
rcrb
repz
jmp
jae
add
sti
add
clc
add
incl
add
repz
jmp
jae
add
mov
sbb
push
mov
xchg
ret
cltd
add
add
cmp
add
popa
pop
in
push
clc
repz
jmp
jae
enter
add
add
add
pop
nop
push
mov
leave
nop
jmp
cltd
mov
add
cmp
add
push
mov
add
add
mov
mov
sbb
pushf
or
mov
mov
add
clc
repz
jmp
jae
add
add
add
std
test
repz
mov
xchg
ret
add
pusha
rcll
add
nop
movb
rcll
cld
jmp
jae
push
out
or
add
aaa
add
adc
mov
nop
push
mov
leave
nop
jmp
add
cwtl
popl
add
fwait
push
mov
xchg
ret
add
add
add
js
push
xchg
fwait
clc
repz
jmp
jae
roll
add
add
pop
mov
push
clc
repz
jmp
jae
nop
add
popa
add
call
clc
repz
jmp
jae
add
dec
mov
std
add
add
aas
clc
repz
jmp
jae
add
mov
mov
push
mov
xchg
ret
cmp
add
add
pop
xorl
clc
repz
jmp
jae
add
int
movzwl
clc
repz
jmp
jae
add
mov
add
add
push
mov
xchg
ret
loope
add
add
add
popa
add
add
shrl
repz
jmp
jae
add
sbb
loope
add
nop
add
cmp
push
mov
xchg
ret
add
xchg
xchg
shl
jns
push
mov
xchg
ret
pop
add
add
popa
add
xor
mov
mov
clc
repz
jmp
jae
add
dec
mov
mov
add
out
ds
shr
clc
repz
jmp
jae
stc
imul
enter
out
push
fidivrs
repz
jmp
jae
sti
test
add
add
addr16
clc
repz
jmp
jae
mov
std
add
pop
clc
jge
movsl
add
push
mov
xchg
ret
add
int
add
mov
ljmp
add
repz
jmp
jae
ret
dec
jbe
add
sahf
mov
mov
xchg
ret
nop
enter
cmp
add
mov
addl
in
leave
nop
jmp
mov
pusha
pop
call
pop
add
cltd
pop
push
mov
xchg
ret
xchg
add
loope
add
add
nop
jns
loop
push
mov
xchg
ret
pop
add
add
inc
add
mov
sub
add
add
sti
clc
repz
jmp
jae
add
cltd
xchg
cmp
data16
lcall
add
add
add
add
add
add
and
mov
xchg
ret
add
add
add
pop
xor
clc
repz
jmp
jae
std
inc
andb
dec
nop
push
mov
leave
nop
jmp
add
add
mov
mov
clc
repz
jmp
jae
addb
mov
cltd
incl
int
ss
fistpl
clc
repz
jmp
jae
add
stc
inc
add
add
push
cmpsb
inc
add
add
sub
mov
xchg
ret
add
cs
xlat
add
test
push
cmp
push
mov
leave
nop
jmp
mov
aaa
dec
mov
push
clc
repz
jmp
jae
mov
rcrl
mov
add
mov
and
add
mov
addl
add
xor
add
xor
lcall
enterw
push
or
addb
mov
inc
mov
cmp
sbb
push
mov
xchg
ret
decl
cmp
mov
cwtl
pop
add
jnp
jge
clc
repz
jmp
jae
inc
mov
or
sbb
mov
inc
add
mov
sub
clc
repz
jmp
jae
cmp
add
add
popl
nop
push
mov
leave
nop
jmp
pop
popl
popa
cltd
std
add
add
fsubs
push
mov
leave
nop
jmp
add
add
mov
clc
add
add
clc
repz
jmp
jae
xchg
enter
add
imul
xor
movzwl
nop
push
mov
leave
nop
jmp
jge
sbb
add
mov
fadds
mov
add
dec
roll
add
add
xor
jo
add
add
nop
sbb
in
leave
nop
jmp
sbbb
pusha
inc
clc
add
mov
jmp
jae
pusha
inc
nop
add
mov
roll
pop
sbb
clc
repz
jmp
jae
add
sti
dec
add
add
add
rolb
push
nop
push
mov
leave
nop
jmp
addb
add
cmp
imul
cld
jmp
jae
add
or
sti
add
out
mov
and
repz
jmp
jae
add
xlat
add
add
add
push
push
mov
xchg
ret
mov
movb
popa
inc
addb
push
mov
push
clc
repz
jmp
jae
popw
add
aaa
pop
mov
add
call
jmp
jae
test
add
addb
out
clc
repz
jmp
jae
incl
std
push
pop
pop
add
outsb
icebp
pusha
clc
repz
jmp
jae
cmp
push
pop
inc
add
add
sub
xchg
add
xor
icebp
xchg
add
in
add
cmp
push
adc
mov
xchg
ret
pop
push
data16
mov
ds
mov
clc
repz
jmp
jae
cmp
add
mov
xlat
aaa
mov
push
clc
repz
jmp
jae
add
mov
add
add
add
mov
cld
jmp
jae
mov
mov
nop
pop
mov
add
add
mov
lcall
jmp
jae
xchg
sti
cmp
pop
add
roll
xchg
add
clc
repz
jmp
jae
enter
cbtw
add
mov
clc
repz
jmp
jae
add
push
add
add
mov
mov
js
repz
jmp
jae
clc
add
mov
sti
pop
add
clc
repz
jmp
jae
roll
add
add
add
cmp
repz
jmp
jae
sbb
pop
push
push
mov
pusha
add
clc
repz
jmp
jae
add
pop
add
mov
aad
clc
repz
jmp
jae
clc
enter
mov
add
push
sub
mov
add
clc
repz
jmp
jae
add
add
add
inc
lock
push
mov
leave
nop
jmp
sti
add
pop
cmp
leave
or
nop
push
mov
leave
nop
jmp
add
add
add
add
hlt
mov
repz
jmp
jae
inc
int
add
add
mov
cmp
jmp
jae
mov
std
add
add
addl
mov
xchg
add
push
mov
xchg
ret
add
addb
add
addb
addl
add
add
or
jmp
add
add
push
clc
repz
jmp
jae
add
add
add
push
ljmp
repz
jmp
jae
aaa
enter
int
pop
push
sub
clc
repz
jmp
jae
pop
stc
add
loope
push
dec
nop
add
add
add
ja
jne
nop
push
mov
leave
nop
jmp
add
add
add
pop
add
and
cld
push
mov
xchg
ret
add
add
mov
andb
add
call
push
push
clc
repz
jmp
jae
add
mov
je
clc
repz
jmp
jae
out
ljmp
mov
clc
repz
jmp
jae
add
ljmp
add
clc
repz
jmp
jae
add
add
add
addb
pop
pusha
add
clc
repz
jmp
jae
add
add
add
mov
leave
nop
jmp
or
add
add
ret
add
ret
fistpl
nop
push
mov
leave
nop
jmp
mov
add
sbbb
test
pusha
add
add
add
add
inc
sarl
lret
mov
leave
nop
jmp
add
add
add
add
add
in
clc
repz
jmp
jae
add
add
add
add
xchg
fld1
nop
push
mov
leave
nop
jmp
add
pusha
add
repnz
in
fistpl
push
mov
xchg
ret
add
mov
cmp
add
clc
repz
jmp
jae
add
add
add
add
add
roll
mov
xchg
ret
int
add
cs
inc
test
push
push
mov
xchg
ret
add
jge
repnz
ljmp
dec
fistpl
clc
repz
jmp
jae
add
sti
add
pop
add
add
push
clc
repz
jmp
jae
add
add
add
xor
or
nop
push
mov
leave
nop
jmp
add
add
out
pop
pop
clc
repz
jmp
jae
clc
add
imul
add
std
jb
clc
repz
jmp
jae
add
xlat
add
cld
jmp
jae
cmp
inc
add
add
pusha
push
clc
repz
jmp
jae
pop
add
add
jbe
xchg
cmpsl
je
clc
repz
jmp
jae
add
data16
fucomip
ljmp
in
leave
nop
jmp
mov
push
add
xchg
inc
add
popa
add
mov
add
popa
cltd
je
clc
repz
jmp
jae
add
add
nop
push
mov
leave
nop
jmp
dec
or
add
add
mov
add
add
push
nop
push
mov
leave
nop
jmp
test
add
lcall
add
sub
incl
mov
add
add
popl
push
nop
push
mov
leave
nop
jmp
add
pop
pop
add
add
cltd
cwtl
cwtl
adc
test
repz
jmp
jae
jbe
push
jmp
out
mov
push
mov
xchg
ret
push
xorl
aaa
add
idiv
call
nop
jmp
popa
add
out
add
pushf
in
dec
add
add
jno
jg
incl
jbe
orb
add
popa
add
cs
mov
xchg
imulb
pop
mov
clc
repz
jmp
jae
add
mov
add
pop
xor
cld
jmp
jae
add
add
add
add
add
and
repz
jmp
jae
std
push
add
pusha
add
cmp
clc
repz
jmp
jae
out
add
cwtl
add
or
add
test
sbbl
ret
add
cmp
std
add
enter
inc
clc
repz
jmp
jae
add
aaa
jbe
mov
sbb
mov
xchg
ret
loope
add
mov
mov
inc
leave
pop
data16
lock
mov
xchg
ret
add
mov
leave
add
add
pop
push
mov
xchg
ret
add
repnz
add
cmp
add
xchg
cmp
into
sub
cld
jmp
jae
ret
cmp
nop
add
add
push
mov
xchg
ret
jbe
mov
pop
loope
pop
push
add
xlat
push
push
mov
xchg
ret
add
sti
add
add
bnd
push
clc
repz
jmp
jae
add
add
clc
add
inc
push
aaa
call
push
mov
xchg
ret
add
add
add
data16
and
push
mov
xchg
ret
mov
pop
add
in
cmp
fistpl
clc
repz
jmp
jae
add
inc
add
add
add
clc
repz
jmp
jae
xchg
add
out
inc
push
mov
xchg
ret
add
cwtl
mov
addb
inc
add
clc
repz
jmp
jae
add
imul
push
jne
nop
push
mov
leave
nop
jmp
mov
dec
add
cmc
pop
jmp
add
add
pop
inc
loope
incl
add
mov
addb
mov
clc
repz
jmp
jae
in
add
add
add
push
mov
xchg
ret
add
add
add
add
mov
add
call
nop
jmp
add
add
add
jecxz
call
nop
jmp
add
mov
sti
mov
clc
repz
jmp
jae
add
add
add
std
sti
add
sbb
clc
repz
jmp
jae
add
nop
add
ljmp
nop
push
mov
leave
nop
jmp
add
add
add
add
add
add
mov
rclb
pop
inc
add
add
incl
cmp
std
push
add
mov
add
clc
repz
jmp
jae
add
in
mov
sub
add
lods
push
mov
xchg
ret
mov
pusha
add
aaa
pusha
add
mov
inc
push
mov
xchg
ret
add
add
add
loop
push
mov
fcmovb
aaa
adc
divb
stc
jb
add
add
adc
adc
or
add
add
jae
jge
rol
xor
sti
pop
scas
xchg
scas
sarl
sbb
nop
mov
mov
mov
add
lods
bound
add
adc
cltd
aaa
insb
add
add
add
mov
mov
dec
add
add
ret
mov
loop,pn
repnz
xchg
clc
fbstp
inc
repnz
add
pop
leave
pop
es
mov
mov
push
push
pop
cmpsl
loopne
inc
add
add
in
jge
stos
mov
xchg
xor
mov
mov
mov
andb
test
ljmp
add
cmp
outsl
ss
mov
push
in
push
aas
cmp
add
add
inc
mov
add
inc
rorl
into
int
sub
test
mov
add
std
lret
fildl
add
add
pushf
sbb
stc
adc
mov
and
add
add
add
add
add
add
cmp
jb
cwtl
xor
fadds
popa
cwtl
std
push
shlb
xor
mov
inc
test
add
jns
outsb
sti
sbb
scas
pop
xchg
pop
mov
dec
lahf
add
mov
scas
pusha
add
add
add
sbb
jge
mov
jo
iret
imul
mov
add
rcl
mov
out
dec
lahf
mov
add
sbb
in
dec
inc
add
add
xor
stos
mov
loope
or
mov
data16
aad
adc
int
es
adc
jmp
push
mov
ds
mov
sti
xorb
out
dec
mov
and
out
pop
pop
push
cmp
inc
add
add
cmp
add
mov
aam
dec
add
add
add
orb
and
add
add
in
daa
mov
mov
insl
pop
lods
ret
stc
mov
add
fdivl
add
ret
mov
mov
inc
mov
pusha
add
jg
xchg
xchg
xlat
mov
cmp
jecxz
in
dec
cmp
lock
arpl
add
add
add
add
add
push
fiaddl
add
mov
jl
into
dec
dec
or
lret
outsl
push
xor
mov
addl
add
inc
add
jmp
xchg
add
add
pop
data16
pop
pop
jne
je
repz
sbb
loop
test
cmp
xchg
shrb
pusha
add
mov
mov
add
add
xor
shl
lods
test
add
lret
leave
rorb
xchg
cmpsw
pop
cmp
insb
add
add
pop
insb
add
lcall
pushf
leave
dec
and
mov
fistl
je
lods
gs
jne
or
mov
jmp
mov
rcrl
leave
sub
mov
push
adc
or
add
testl
mov
dec
add
inc
jnp
push
mov
dec
adc
pop
lret
sub
mov
lahf
mov
add
pop
pushf
xchg
lret
xor
add
in
sbb
and
jg
test
inc
pop
sbb
pop
and
hlt
xor
add
add
fiadds
mov
xor
hlt
push
push
test
nop
clc
sub
pop
dec
jecxz
pop
dec
jmp
mov
and
add
add
cli
cld
dec
add
cli
daa
loopne
add
add
add
push
jge
jmp
pop
add
sti
push
stos
negb
stos
cs
mov
and
cmp
ja
sbb
roll
mov
out
mov
aam
add
cmpl
add
add
fsubrl
add
push
fisttps
cmc
call
loopne
stc
popf
push
xchg
xchg
lods
mov
add
pop
cmp
add
add
mov
add
add
imul
add
sub
dec
add
add
sub
call
push
nop
mov
ja
xchg
test
mov
lods
sbb
mov
ret
adc
call
and
add
add
fsubrl
add
add
les
add
add
add
ret
pop
dec
lcall
cmpsl
push
fistpll
mov
inc
daa
ljmp
xchg
cmpsl
sub
pop
shrl
in
lret
mov
ret
add
mov
xchg
sbb
daa
mov
or
sbb
and
add
add
pop
mov
push
cmp
add
popf
dec
add
add
bnd
inc
lds
ss
out
mov
cltd
mov
fmul
add
or
mov
jnp
imul
loopne
inc
add
outsb
fistl
out
fidivl
mov
stos
sbb
rclb
fwait
sbb
mov
add
add
add
imul
mov
add
outsb
data16
shr
icebp
int3
mov
push
cmp
push
cmp
outsb
mov
inc
sub
add
add
xchg
mov
jo
pand
mov
aam
sub
mov
jp
jl,pt
xchg
fcompl
dec
add
push
mov
subl
mov
xchg
and
add
add
pop
rcll
lods
xor
add
repnz
add
add
js
cmp
add
xchg
pop
jnp
add
jo
and
mov
roll
xor
cmpsl
jno
add
add
push
lcall
pushf
out
add
out
cli
adc
aas
in
pop
pop
push
mov
outsb
mov
or
pushaw
add
add
add
add
jg
rorl
add
cmp
add
aad
jge
mov
add
mov
mov
adc
shr
fdiv
movsb
mov
add
add
out
xchg
das
cltd
pop
sbb
imul
mov
mov
push
shrl
add
add
push
scas
xchg
sub
dec
xor
bound
xor
imul
int
cmpsl
cmpsl
xor
mov
sub
mov
xorb
shlb
aaa
push
movsl
adc
pushf
dec
inc
add
add
inc
jo
das
sbb
mov
lds
fidivs
xchg
xchg
stc
jbe
nop
leave
push
mov
std
mov
inc
jno
mov
mov
mov
lods
sub
add
jle
add
add
enter
and
xor
dec
add
mov
aam
xchg
or
mov
and
add
add
add
ljmp
repz
dec
add
push
and
push
add
add
std
int
loopne
jmp
fcoml
fldt
decl
fiadds
and
add
add
add
xchg
pop
push
icebp
pusha
add
jno
inc
imul
add
xor
pop
sbb
mov
add
add
xor
std
sti
cmc
test
repz
add
add
push
push
or
insb
add
add
xstore-rng
cmpsl
inc
addr16
in
xchg
jg
jne
enter
add
add
rcl
dec
fstl
add
mov
mov
cmpl
add
jge
lods
inc
in
pop
pop
shll
jg
push
add
mov
add
or
scas
sub
mov
push
jge
add
add
in
out
add
add
mov
stos
jp
jg
dec
out
insl
mov
test
mov
mov
lods
pop
lods
add
lret
or
int
and
or
fwait
sub
lret
sub
add
add
sub
mov
and
add
add
rolb
add
xchg
xor
cli
fistpll
inc
xor
fsubrs
mov
cmp
sub
mov
repz
add
add
mov
js
into
push
pop
inc
add
add
int
add
add
inc
popa
push
xchg
es
pop
mov
lcall
add
push
test
mov
mov
jnp
adc
je
jge
inc
jle
lret
incl
add
add
pusha
add
add
xlat
jno
mov
add
cmp
adc
dec
and
dec
jg
adc
sub
mov
and
or
or
add
add
fdivl
in
jae
or
test
jnp
push
mov
pop
outsl
ss
out
ss
sbb
enter
cmp
dec
aam
cmp
rolb
and
mov
push
fisubl
sbb
icebp
repz
add
add
add
inc
jg
add
test
mov
mov
test
jp
mov
add
jae
int
cltd
sub
mov
dec
rcrb
add
add
add
lret
outsb
dec
cli
and
sti
inc
cmp
test
std
xor
call
add
add
xchg
jb
dec
add
push
and
add
add
add
out
in
std
and
stos
aaa
and
test
sub
add
out
out
cmc
aad
dec
add
add
cmp
loope
out
dec
inc
add
pop
ss
je
inc
fwait
pop
ja
lea
cli
push
shr
test
ljmp
iret
pop
xchg
inc
ret
dec
enter
cmp
mov
mov
stos
lcall
add
sub
cmp
mov
sbb
push
adc
xchg
dec
loope
mov
aam
inc
cltd
lahf
icebp
jne
add
add
or
mov
or
pop
xchg
mov
add
subb
cld
test
jne
or
mov
popf
pop
stos
inc
imul
jecxz
mov
cmc
add
ss
insl
xor
xchg
rcrl
xor
or
mov
or
mov
add
push
rcrb
test
lcall
xlat
pushf
push
sub
cmp
mov
add
add
mov
pop
fucomip
or
xchg
addr16
adc
or
mov
mov
loopne
hlt
icebp
adcl
divb
iret
or
add
mov
dec
xchg
mov
jns
and
pop
js
add
and
lea
or
jns
ja
stc
jno
push
mov
add
add
ds
add
out
fiadds
aaa
pop
ret
js
cld
dec
inc
lret
aaa
out
xchg
adc
add
add
add
pusha
add
add
loopne
mov
stos
mov
mov
and
stos
inc
icebp
or
or
cmc
imul
aam
adc
add
stos
sub
lock
add
add
inc
fcmovnb
and
add
add
add
lret
cli
jo
test
inc
add
add
push
into
pop
cmp
pop
mov
add
add
and
mov
xchg
mov
push
xchg
dec
mov
fstpl
add
inc
mov
cli
pop
scas
xor
mov
lea
clc
ficoms
push
sbb
xchg
in
mov
leave
leave
jp
pop
pop
jecxz
notb
jge
repz
xchg
and
mov
jo
jecxz
push
mov
mov
scas
xchg
sahf
xchg
in
and
jecxz
and
bound
mov
dec
add
ljmp
std
jno
xchg
jmp
cmc
pop
in
fisubrl
aaa
mov
adc
dec
mov
adc
jmp
jg
lods
ja
cmp
jl
xchg
in
cli
adcb
adc
testl
cmp
mov
xlat
sbb
add
jnp
xor
push
push
jg
lods
xor
cwtl
ffree
inc
add
rcl
outsl
mov
xlat
add
lcall
sahf
push
mov
mov
pop
int3
je
mov
add
jmp
out
adcl
sbb
mov
int3
movaps
add
add
fidivrl
jo
shll
add
pushf
sahf
xchg
scas
xchg
mov
das
aad
rcll
aaa
stos
std
scas
dec
sbb
dec
pop
int3
arpl
cmp
sbb
jae
adc
cmp
imul
arpl
jp
in
sahf
stc
outsl
dec
add
in
lock
add
into
into
mov
bound
add
add
mov
mov
mov
inc
push
lret
dec
add
add
rol
adc
xchg
mov
mov
add
divb
jmp
fidivl
xor
jbe
xchg
pop
outsl
mov
pushf
xchg
jo
add
mov
dec
add
add
call
std
mov
sub
fisttpll
mov
or
add
add
into
pop
clc
ja
ret
sbb
scas
lock
mov
add
or
and
test
addr16
xlat
test
and
sarb
icebp
fcomps
sub
mov
scas
scas
jl
sbb
mov
dec
out
aam
xor
jno
cmp
cmp
in
popa
imull
add
add
mov
stc
ret
xor
xlat
add
sub
add
add
lea
xchg
add
add
mov
jl,pt
andl
ljmp
push
sbb
out
rcrl
jg
ljmp
sub
add
aam
cmp
popa
aam
cmp
add
add
push
push
push
loope
fdivs
add
out
cwtl
shl
sub
mov
out
lret
jge
pop
xor
add
add
pop
mov
into
mov
mov
stos
inc
das
or
lea
mov
sub
mov
mov
cmp
sub
add
add
lret
dec
dec
push
std
jle
adc
fwait
mov
and
pxor
insb
add
add
aad
adc
add
add
ss
loop
movsl
add
add
add
inc
dec
mov
lret
mov
arpl
jg
sub
sbb
out
sbb
inc
or
or
mov
sbb
mov
add
insb
add
add
test
imul
leave
loope
loop
in
out
nop
mov
ss
jecxz
aad
add
xor
rcll
xor
in
lock
insl
scas
pop
jne
orl
adc
add
add
xchg
roll
dec
mov
xchg
repnz
mov
xor
in
xchg
xlat
jmp
stos
xlat
adc
aaa
pop
std
aaa
xor
cmp
add
or
imul
movb
add
sbb
mov
xor
das
jbe
ret
xor
mov
addl
loope
insb
add
add
xor
out
inc
xchg
clc
loope
add
add
push
or
add
add
add
hlt
aaa
or
add
add
cmc
fistl
sub
add
pop
xchg
dec
jmp
add
add
stc
rcrl
aam
dec
loope
mov
in
repz
fnstcw
push
mov
jbe
xor
xchg
or
sbb
fsubs
push
push
fwait
cmp
add
cmp
lock
rol
aad
shrb
add
mov
xlat
stc
scas
movsl
or
mov
shll
add
cmp
pop
out
enter
sbb
in
mov
imul
aas
std
sbb
add
pop
pop
jns
mov
sub
mov
mov
jl
jno
add
adc
mov
add
add
or
add
add
sbb
push
mov
inc
push
pop
mov
add
pop
xor
rorb
pushf
movsb
and
add
jne
repnz
or
jnp
pop
pop
faddl
cs
repz
xlat
lret
addb
outsl
mov
outsl
cltd
mov
or
mov
lret
pop
push
inc
insb
add
add
popf
mov
addb
inc
jae
lahf
aaa
clc
xchg
or
call
jecxz
aas
daa
and
mov
stos
adc
mov
push
repz
lret
js
add
add
dec
add
jb
fwait
push
inc
addr16
add
add
jo
loope
mov
cmp
ret
jb
loop
inc
mov
enter
xchg
ds
icebp
ficoml
pop
lock
add
add
add
enter
mov
mov
push
addl
add
mov
pop
into
xchg
pop
mov
lret
fcmovne
loope
mov
mov
add
jp
dec
cmc
pusha
add
add
sahf
add
add
add
pushf
mov
xor
fstpt
sti
add
outsl
push
clc
je
add
add
mov
add
cmp
pop
cmp
adc
mov
cmpsl
addr16
rcrl
push
jp
mov
mov
pusha
add
add
mov
aam
jmp
rcl
aam
add
add
add
inc
push
cwtl
ss
aaa
loopne
sub
fdivrl
addb
inc
add
add
ja
sub
add
stos
testl
cmp
mov
sbb
sbb
iret
mov
or
out
sbb
jmp
add
jns
ljmp
mov
add
add
or
adc
mov
sub
cli
add
loopne
pushf
jp
add
add
in
out
scas
aam
push
or
add
cwtl
cmp
push
fwait
lahf
lods
insb
add
adc
sbb
cmp
mov
inc
add
add
mov
push
stos
adc
shlb
add
jg
subl
adc
sbb
fdivs
mov
mov
out
lcall
add
sub
or
add
add
sbb
add
testl
jmp
pop
fwait
gs
inc
inc
add
add
fwait
outsl
mov
and
add
add
inc
jp
push
rcll
negl
cmp
cmpb
inc
out
sbb
fbstp
add
popa
repz
ja
xorb
popa
mov
and
add
jmp
add
test
sbb
cmp
mov
test
insb
add
add
sbbl
push
push
and
mov
adc
lahf
and
xlat
sub
add
add
and
add
add
test
fwait
stc
ljmp
add
aam
data16
mov
loope
cmp
int3
cmpsl
sub
ds
fisubs
dec
adc
shr
xchg
lea
add
inc
pusha
add
add
add
add
outsb
push
or
mov
outsl
inc
add
add
sbb
shrl
in
cmp
adc
rcr
jecxz
xor
int3
repnz
mov
push
mov
cmp
aaa
insb
add
add
idivb
incb
add
pop
cwtl
sbb
ss
es
and
add
add
in
jae
mov
add
or
add
mov
adc
jp
out
mov
rolb
add
push
adc
call
cmc
add
xchg
ret
mov
add
bound
sbb
cmp
inc
push
mov
ror
lret
sarl
mov
ja
xchg
jb
cmp
add
inc
push
movsl
adc
mov
add
add
pop
xchg
pop
xor
aam
out
je
cli
repnz
sub
pop
adc
add
add
pop
das
pop
int
negl
lock
pop
inc
pushf
cmpsl
cwtl
push
in
lds
add
mov
mov
add
repnz
add
mov
out
push
in
cmpl
cmp
rorl
or
fimuls
add
xchg
mov
add
jp
jmp
adcb
mov
add
lahf
xchg
xor
mov
add
out
xchg
inc
xor
std
jb
scas
mov
shlb
loop
add
add
push
out
nop
jg
pop
ljmp
das
push
outsb
jle
and
mov
mov
imul
test
roll
add
add
sahf
lds
in
bound
scas
idiv
mov
andb
mov
sarl
cmp
jge
mov
cmp
add
out
mov
add
add
add
int3
cmp
insl
mov
loop
mov
movsb
and
int3
repz
popf
push
xchg
mov
mov
jno
sarb
addr16
clc
gs
sbb
xchg
add
js
mov
adc
out
or
add
add
or
in
add
mov
pushf
mov
add
add
stos
sub
jno
cmp
out
mov
aam
rcrl
xchg
cmp
fidivl
addr16
outsl
mov
adc
std
test
add
ficomps
mov
out
cwtl
mov
pushf
sub
sbb
movsl
mov
dec
int
jbe
in
add
mov
and
jle
pop
push
or
les
lods
stos
fisttpll
popf
or
mov
sub
add
rcrb
pop
cmpsl
mov
orb
xchg
inc
shl
andb
mov
add
es
scas
cmp
pushf
add
add
add
add
imul
pop
mov
add
add
movb
mov
add
add
loopne
pop
sub
add
add
fnstsw
dec
lock
add
add
jnp
clc
xchg
cli
ret
sub
inc
add
mov
movl
or
ja
mov
push
outsl
sub
add
pop
ljmp
mov
add
add
lea
aad
lock
test
cmc
cmc
das
arpl
jle
jmp
hlt
dec
cmp
add
add
add
xchg
cli
jns
icebp
cmp
int
sbb
push
sub
mov
sub
shr
in
add
sbb
test
and
mov
mov
pop
hlt
xor
aas
lods
mov
je
mov
cli
dec
cld
mov
sbb
imul
out
add
cmp
cltd
or
mov
and
es
xor
pop
roll
add
sub
add
add
daa
mov
scas
mov
push
push
aaa
mov
add
add
add
add
mov
mov
or
add
add
popf
rorl
mov
xchg
cmp
std
movsb
lds
jns
pop
adc
add
stos
cmpsb
cmp
add
add
inc
and
roll
lcall
push
sbb
nop
cmpb
add
add
call
mov
push
enter
loop
aam
adc
cld
mov
or
mov
inc
es
mov
mov
iret
add
repz
add
cmp
sbb
jae
xchg
sarb
add
imul
jecxz
repnz
aas
lds
negl
xor
sbb
push
das
jg
dec
fisubs
xor
aaa
daa
dec
xorl
lea
mov
mov
mov
ss
xchg
loop
loopne
add
pop
xor
ret
xor
dec
push
lret
sbb
out
leave
sbb
add
add
pop
enter
jge
push
or
xchg
push
mov
cwtl
rorb
push
insl
fidivrs
push
sbb
add
add
fldl
add
popf
xchg
push
add
add
add
mov
cmp
fistl
aam
mov
shl
ljmp
or
inc
fsubs
movsl
sarl
in
or
ss
jle
cmc
jb
push
jmp
cmp
inc
xchg
dec
add
add
push
xlat
dec
or
add
repnz
mov
mov
fcmovnbe
mov
push
loope
std
dec
pusha
add
add
call
add
mov
or
mov
xchg
cmp
add
scas
sub
xchg
and
mov
pop
das
mov
inc
or
add
add
or
and
add
add
add
mov
add
add
ds
lock
add
add
scas
lods
xchg
jo
inc
inc
and
push
ret
in
cwtl
pop
jp
pop
out
push
mov
add
add
pusha
add
hlt
sbb
jmp
loopne
add
nop
popf
mov
sbb
xchg
dec
mov
sti
lock
stc
sub
sarb
pusha
add
add
orl
call
jmp
add
add
add
cmp
cli
adc
mov
inc
popf
clc
in
pop
sub
mov
out
mov
mov
cmp
test
xchg
jge
es
mov
lea
mov
add
add
add
les
add
add
fistl
mov
test
add
add
addr16
xchg
xchg
xor
add
or
add
add
jmp
add
add
lock
xor
add
mov
add
jecxz
xor
leave
loope
mov
cli
cwtl
in
inc
inc
jl
add
add
imul
ret
clc
inc
divl
mov
xor
test
lret
mov
add
add
cmp
test
repz
adc
sti
and
mov
xor
push
hlt
xor
add
cmp
aaa
mov
push
mov
dec
add
in
inc
mov
mov
out
ljmp
add
aam
xchg
fwait
out
pushf
cmpsl
xor
inc
jno
push
adc
add
test
cmp
add
add
mov
mov
mov
call
add
adc
loopne
test
push
cmp
cli
pop
add
mov
cwtl
cmc
jns
and
add
and
adc
pop
std
inc
add
add
loope
cmpb
ss
inc
xor
push
lahf
lcall
imul
testb
add
in
and
pop
or
aad
aas
leave
roll
rorl
enter
cmp
add
add
dec
lahf
sub
andl
add
add
lret
outsb
rclb
xor
out
dec
push
xchg
add
xchg
jl
ds
pop
push
loop
jge
xor
sbb
add
sahf
bound
popl
ret
movsl
ja
mov
push
push
jge
cmp
xchg
sbb
add
add
xlat
cmpsb
std
mov
das
mov
fldl
sti
popf
mov
add
jg
test
sub
bound
mov
jne
mov
push
popf
add
add
add
push
pop
sbb
pushf
fisttpll
out
xor
jns
mov
mov
add
add
add
lcall
add
in
cmp
inc
add
add
jge
cmp
add
push
cwtl
xor
add
loopne
add
lea
in
mov
inc
mov
push
jg
pop
push
pop
and
mov
pop
movsl
loope
or
dec
add
add
inc
mov
mov
add
roll
jp
pop
rcll
movsl
pop
adc
mov
mov
popf
ja
popf
adc
push
adc
sbb
add
add
cli
xor
cmpsb
icebp
icebp
aaa
stos
add
add
add
lock
mov
js
xor
add
pop
leave
cltd
lods
aad
js
repz
insb
add
mov
sub
int3
lret
jne
test
xor
addr16
jb
cmpsb
dec
out
leave
xchg
es
ds
out
aad
decb
aam
jl
pop
rol
push
cmp
xchg
add
stc
adc
adc
add
fwait
dec
add
adc
add
adc
fwait
out
loope
icebp
ret
es
push
adc
mov
popa
cltd
mov
adc
sbb
repnz
add
test
mov
lock
and
mov
sbb
add
push
cmp
mov
or
ja
or
adc
cmp
mov
out
iret
orps
sbb
into
cmp
aam
aam
fmuls
or
add
add
add
sbb
js
aaa
lahf
nop
xchg
ret
decl
add
add
mov
mov
mov
and
mov
add
aad
shl
xor
enter
add
sti
cmc
insl
mov
mov
add
mov
mov
cmp
xchg
sub
push
xchg
and
mov
and
add
add
lret
dec
add
add
mov
ss
add
add
mull
add
or
lods
pop
fisttpll
push
pop
shll
push
cltd
xchg
loope
mov
or
xchg
add
sbb
sahf
push
sahf
mov
mov
mov
negl
xchg
lret
dec
jmp
cmp
mov
mov
mov
cld
inc
nop
mov
out
hlt
adc
out
ja
pushf
dec
sti
out
out
loope
xor
fistpl
movsl
std
rcrl
in
xchg
arpl
rcrb
pop
mov
mov
js
das
nop
xchg
sarl
pop
sbbb
mov
or
add
add
test
add
add
pusha
add
add
jle
enter
addr16
xor
add
push
and
xor
mov
pop
fmull
adc
mov
add
add
fsubl
add
add
out
xor
mov
xchg
push
mov
add
add
push
adc
and
mov
adc
push
mov
jo
hlt
add
mov
pop
or
jp
adc
add
jnp
scas
imul
add
add
add
add
add
add
jno
dec
insb
add
add
xor
jns
fildl
jmp
and
add
add
xlat
cmp
jnp
xor
mov
aam
sbb
jmp
add
add
mov
mov
jo
add
add
fadds
mov
cltd
gs
mov
add
and
mov
pop
inc
cmp
add
ja
jl
pushf
inc
into
push
inc
fcmovnu
push
push
adc
add
add
lods
scas
ficomps
das
fimull
pushf
rol
lds
jge
cli
push
cmp
lods
aam
in
imul
add
lret
nop
outsb
arpl
aas
out
jbe
xor
out
add
mov
pop
mov
add
clc
jb
das
fcoms
dec
stos
stos
cmpsl
inc
add
xchg
es
inc
lock
and
add
jge
js
add
add
int
cmp
or
cmpsl
push
call
shl
shl
fimuls
add
add
les
call
inc
adc
pop
outsb
aad
imul
and
add
add
xor
sub
add
add
jge
jne
cmp
mov
ljmp
bound
mov
jmp
jmp
es
mov
scas
lds
in
add
add
call
add
mov
bound
imul
js
mov
adc
pop
addr16
into
add
pop
or
cs
sub
add
add
sbb
sbb
loop
outsb
cs
add
add
movups
inc
stc
mov
pusha
add
add
nop
push
mov
add
neg
dec
mov
jge
repz
mov
fsubl
xor
xchg
jae
jo
mov
adcb
rorl
sbb
pop
imul
add
iret
adc
add
subb
int3
push
sub
cmc
sbb
mov
pop
xchg
inc
add
add
js
add
add
and
add
add
mov
add
int
add
mov
mov
mov
shl
data16
ja
stos
fcoms
mov
stos
call
cld
sbb
lock
out
int3
sub
sbbb
cmp
mov
inc
and
mov
movsl
or
cs
xor
jno
aaa
mov
stos
out
mov
cmpsl
or
ja
mov
add
add
add
out
insb
add
add
fdivl
fdiv
ds
pop
xchg
dec
add
add
insb
add
outsb
arpl
mov
xlat
out
sub
xorb
pop
xchg
mov
and
add
add
aad
repz
jns
or
mov
lock
sub
cmp
cwtl
sahf
or
add
add
inc
add
add
daa
repnz
mov
lcall
xor
sti
lds
jb
lock
mov
push
xor
jg
sbb
lret
mov
fcompl
and
mov
sahf
pushf
cmp
add
fucomi
out
stos
call
pop
lret
xchg
aad
popf
fiaddl
mov
jle
add
aam
adc
flds
add
add
push
push
add
inc
add
add
push
pop
dec
sub
sbb
adcl
pushf
push
push
outsl
mov
out
push
xchg
jmp
clc
sbb
dec
ret
aaa
pop
or
add
add
mov
test
fsubr
mov
dec
ret
mov
sbb
in
push
inc
add
push
aad
adc
add
dec
mov
xlat
and
add
add
jne
cmpb
int
rorl
mov
add
add
xchg
adc
add
or
push
div
mov
add
add
xchg
cwtl
int
jns
in
jb
inc
add
jae
jmp
mov
cmp
mov
mov
out
pop
cmpsb
test
repnz
and
add
add
push
push
inc
xor
mov
add
add
add
add
addr16
aas
test
cltd
xorl
pop
sbb
xor
xor
sub
repz
addl
sbb
push
leave
rol
mov
cld
out
cwtl
dec
xchg
imul
jmp
push
es
jg
aad
adc
call
xor
or
mov
enter
add
xor
adc
lods
icebp
ds
or
add
add
test
in
int
mov
pop
add
into
inc
shlb
add
pusha
add
add
sub
mov
lods
test
add
loop
cmp
sarb
adcl
and
mov
lods
dec
in
and
mov
movsl
fisubs
add
rcr
fldl
adc
fdivs
div
cmc
fadds
adc
sbb
fnstcw
pop
xor
dec
add
pop
inc
pcmpgtd
inc
mov
jp
mov
or
cli
cli
add
dec
sahf
jmp
fidivs
test
jae
int
inc
adc
divb
mov
dec
sub
add
add
scas
xchg
aaa
xchg
jnp
mov
adc
xchg
fildll
dec
mov
xchg
test
pop
mov
and
cmpsb
leave
les
stos
fsts
push
das
cmpsl
mov
inc
add
jg
addl
rclb
in
mov
test
out
outsb
fstp
test
js
xchg
loop
or
add
add
loopne
jbe
fists
popa
xor
mov
clc
mov
mov
scas
mov
lret
adc
mov
dec
adc
mov
add
outsl
jb
mov
out
or
add
add
mov
lret
add
add
dec
sub
stos
repnz
add
add
add
xor
add
dec
add
add
push
loope
sahf
xchg
in
xor
ds
pop
xor
xchg
mov
push
in
cmp
std
outsl
fmull
or
jg
rcrb
divl
fistps
sbb
xor
xor
sub
daa
aad
push
cli
jg
mov
mov
push
cmp
iret
jb
aam
int3
add
movsl
ss
cmp
loop
lods
mov
add
in
daa
xlat
aas
mov
fldt
push
dec
scas
dec
add
add
jl
ret
add
sbb
jne
jl
idivl
movsl
push
inc
je
pop
cmp
pop
ja
xchg
scas
sbb
jo
push
rcr
dec
andb
add
dec
out
stos
and
mov
sub
add
add
pop
xlat
xchg
lea
andl
jo
add
or
mov
shrb
add
mov
filds
add
add
jg
test
xchg
and
add
test
add
add
inc
add
add
arpl
cmpsl
subb
dec
sbb
stos
sub
add
mov
pop
jae
inc
add
add
cmp
out
adc
out
lahf
jl
enter
mov
stos
mov
cltd
in
jnp
int3
mov
jle
cmp
mov
xchg
and
clc
in
jnp
outsb
out
pusha
add
add
in
fcomps
mov
add
xor
lret
xor
pop
out
pop
or
mov
add
add
jmp
into
mov
add
add
pop
popa
and
mov
add
add
sbb
popf
jg
loop
movsb
movsb
repnz
cmp
lock
es
push
and
add
movsb
xor
xchg
jnp
je
add
add
adc
add
or
imul
aas
and
scas
adc
in
out
data16
les
xor
in
call
mov
inc
xchg
nop
jle
jmp
xor
inc
pop
pusha
add
add
pushf
into
stos
add
mov
js
adc
inc
add
add
xchg
push
popa
sbb
pop
or
mov
popf
pop
loope
mov
aas
mov
xchg
shrl
add
or
xor
push
fimull
ret
mov
mov
jecxz
cli
adc
out
mov
add
add
mov
mov
push
sarl
push
push
jmp
test
mov
fnstsw
xor
mov
add
add
fldl
cli
les
and
add
add
xor
stos
div
out
pop
xchg
cmp
add
push
test
sub
jle
iret
pop
jmp
rcr
stc
popf
dec
std
or
add
add
add
xor
pop
jne
data16
inc
add
add
adc
pop
stos
mov
sbb
jb,pn
enter
adc
movsl
mov
push
aaa
inc
and
add
add
imulb
and
add
out
sub
lret
shll
lea
cmp
push
sti
pusha
add
add
aad
imul
push
adc
xor
add
cmp
sub
add
add
sbb
clc
sbb
popl
out
pop
ret
or
imul
in
cltd
fwait
or
add
lds
fstpl
add
mov
jbe
fwait
sbb
or
pop
xchg
dec
sub
add
add
add
ror
or
fsubr
cwtl
or
sub
xchg
dec
mov
dec
leave
in
or
add
cwtl
mov
mov
sub
scas
fucomip
sti
and
lods
fwait
in
cmp
mov
dec
clc
xchg
jae
sbb
shrb
aad
xor
ja
add
add
push
adc
iret
lret
pushf
arpl
pop
lock
mov
add
and
ljmp
or
mov
adc
sub
add
add
add
sub
add
lcall
jae
mov
add
cmc
imul
in
or
add
push
dec
add
mov
aad
jmp
inc
out
sti
pop
inc
adc
push
je
inc
sub
jge
inc
aam
jae
jg
or
xchg
fstpl
or
mov
add
add
add
cmc
sub
add
add
sbb
pop
xor
lret
fldl
push
or
mov
add
add
fcmovnbe
jp
lods
fdivrl
xlat
pop
cwtl
xchg
movsl
push
dec
loop
adc
adc
bnd
sbb
jp
mov
inc
add
cld
cmp
ja
add
push
fadds
pop
push
dec
mov
adc
cmp
repnz
push
lret
and
sub
ss
lcall
jle
out
je
enter
push
inc
mov
mov
xor
lret
xchg
mov
roll
add
add
cmp
xchg
xchg
push
sub
jg
mov
movsl
test
mov
stos
sti
cmc
and
es
add
sub
add
add
xchg
int3
ss
xor
loope
pop
push
leave
mov
pusha
add
inc
add
mov
aas
pop
jmp
movsl
insl
int3
mov
inc
inc
add
add
bound
inc
adc
adcl
ja
fistpll
and
cmpsb
out
xchg
mov
insb
add
add
shl
push
int3
mov
repnz
scas
dec
sub
add
add
popa
sub
add
add
xchg
lods
lret
xor
jns
das
ljmp
cltd
or
push
push
fistps
lock
in
mov
mov
sub
add
add
add
fcmovnbe
int
add
add
add
xchg
or
insb
add
add
push
gs
test
out
ss
in
cmp
arpl
adc
add
xor
roll
add
iret
pop
jle
add
xor
dec
xchg
mov
shll
mov
push
mov
jge
and
mov
mov
scas
jecxz
roll
cmpsl
bound
jns
pop
mov
fildl
iret
add
add
in
jbe
cwtl
jle
cmc
repnz
mov
out
sbb
mov
cmp
lock
jl
jecxz
mov
jl
dec
push
jecxz
pop
fidivrl
inc
sub
imul
add
scas
mov
xor
inc
push
sbb
jp
jb
xchg
add
outsb
cmp
out
das
stos
and
add
add
rcll
mov
and
add
add
add
add
sub
add
loope
imul
dec
add
add
cmp
adc
in
push
cmp
mov
and
mov
lret
and
add
add
add
mov
mov
out
add
addl
rcrb
add
dec
repz
cwtl
jle
and
dec
rcrb
xor
shlb
xor
pop
and
adc
add
add
xor
inc
ret
xchg
mov
xchg
call
ljmp
mov
jne
cmp
and
mov
bound
xor
loop
pop
add
movl
in
int
lcall
fldl
mov
cmp
xor
xor
jo
or
std
addr16
push
cmpsl
inc
repz
mov
add
add
xchg
add
xchg
mov
out
jae
adc
mov
fisubrl
add
add
inc
cmp
fucomi
in
add
inc
add
add
add
jg,pt
ret
xchg
jle
adc
add
mov
and
andl
add
jno
jmp
in
mov
mov
cmc
mov
adc
mov
stos
ja
out
add
add
push
mov
fbld
test
sbb
push
sub
test
jae
cmpsl
pop
arpl
outsb
shrl
mov
ljmp
sbb
js
xchg
das
sbb
xchg
inc
in
imul
ret
xchg
jp
mov
xor
add
rorb
add
add
mov
mov
fists
sub
inc
add
add
add
test
push
add
adc
aaa
and
add
fnstcw
add
add
pusha
add
les
sub
sti
cmc
fadd
les
jecxz
leave
push
das
ja
mov
movsb
sbb
mov
or
add
mov
xlat
adc
stos
jmp
add
add
add
pop
in
shrl
push
jae
icebp
jo
insl
add
add
add
xchg
fildl
push
fwait
mov
add
sub
xor
daa
clc
movsl
inc
add
add
add
add
lret
xchg
addr16
dec
mov
mov
aas
and
inc
cmp
fsts
push
pop
in
add
mov
in
add
add
add
dec
cs
xchg
pop
sbb
add
mov
pop
testl
je
sub
add
add
test
and
add
sub
add
add
fwait
mov
aad
pop
mov
add
sbb
in
icebp
cmp
mov
insb
add
mov
mov
mov
inc
bound
mov
into
mov
mov
xchg
stc
mov
sti
sub
mov
sbb
pop
cmpsb
jecxz
add
mov
std
cwtl
test
dec
loope
push
mov
dec
cwtl
cmp
push
pushl
mov
icebp
imull
jo
xor
sbb
xchg
popa
xchg
dec
add
add
rol
and
mov
lds
adc
jb
rorl
addl
pop
jge
mov
pop
or
leave
mov
add
add
outsb
push
sub
mov
jmp
push
xchg
pop
addr16
or
mov
mov
sti
cli
add
add
add
cmpsb
cmpl
sub
lea
test
add
add
adc
inc
shlb
push
dec
jl
fimuls
nop
sti
je
add
mov
or
mov
cmpsb
dec
add
imul
mov
sub
xchg
mov
jp
add
add
dec
or
add
add
imul
xchg
pusha
add
add
push
ss
push
fldenv
cmc
dec
add
jp
cmp
and
adc
bound
loope
sbb
fistps
xor
mov
test
xchg
fisttpll
pop
add
add
and
add
add
mov
inc
add
fldenv
mov
add
add
js
push
jns
flds
jne
pop
pop
loop
cli
je
push
mov
add
dec
add
add
add
adc
cmc
xor
or
mov
sub
xchg
inc
pop
stos
daa
mov
lret
add
add
xor
add
fldl
add
add
xchg
mov
xchg
int3
push
fwait
rcrb
stos
pop
cmp
sarl
mov
and
add
add
test
rol
cmp
add
xchg
push
xchg
lcall
add
inc
bound
mov
push
sahf
lods
mov
cmp
out
jle
mov
add
jbe
dec
mov
xchg
in
add
icebp
jmp
jl
push
or
lret
imul
add
add
pop
mov
dec
flds
and
hlt
cmpsl
pop
push
adc
inc
add
adc
mov
shrl
add
mov
bound
mov
add
add
add
data16
jns
push
stos
ja
out
je
add
mov
sahf
popf
call
pop
add
loope
cmpl
add
add
mov
clc
fsubrs
scas
mov
xchg
rcrl
jle
das
aaa
push
pop
in
das
sbb
ret
nop
adc
add
mov
sub
mov
subb
pop
div
loop
xor
add
ret
shlb
sbb
cmp
sbb
add
add
jnp
aad
mov
loopne
dec
cmp
cmp
fldt
das
shr
sbb
and
imulb
sub
mov
mov
jmp
rorl
xor
dec
add
add
lret
fistps
dec
add
call
add
mov
xchg
loop
mov
add
or
add
add
jmp
mov
and
mov
pop
out
gs
add
divl
add
push
sub
dec
out
insl
xchg
mov
mov
shll
lret
cmc
inc
out
sti
jnp
ds
jp
xchg
movsl
les
add
insl
repz
push
nop
stos
stos
negl
mov
or
das
fwait
xchg
stc
push
mov
ss
movsl
and
xor
jnp
sti
or
add
add
or
add
add
out
push
pop
mov
mov
add
add
es
sub
pop
inc
or
xchg
test
xchg
cli
test
and
push
or
mov
jp
imul
add
add
push
movsl
add
add
add
dec
sub
add
add
jb
mov
sbb
rcrb
add
xchg
xor
jp
movsb
cmp
fstps
or
add
add
pop
mov
xor
add
add
movsb
aas
pop
push
js
hlt
shlb
cmp
jg
or
add
add
jnp
in
lods
js
popf
aaa
aas
push
scas
cld
sbb
push
dec
add
and
push
or
add
add
imul
iret
mov
cmp
sbb
mov
adc
je
ljmp
add
xor
lea
pop
adc
out
push
mov
or
add
test
mov
add
ljmp
cmp
push
int3
inc
push
outsl
xor
add
add
mov
and
mov
fistl
and
add
add
aaa
ret
lret
adc
sub
mov
popf
adcl
fsts
sar
xchg
pop
je
imul
popa
insb
add
jmp
dec
sub
sub
mov
mov
add
ss
add
add
cmp
clc
mov
pop
inc
add
repnz
adc
cmp
xor
or
add
add
shl
add
rclb
hlt
insl
push
lfs
mov
in
mov
add
add
jmpw
pop
stc
push
and
add
add
pop
cli
mov
add
ljmp
repnz
cmp
in
jle
int3
or
scas
adc
add
sbb
lods
int
outsl
repz
insb
add
fsubl
mov
aas
inc
add
cmpsb
mov
arpl
fldt
into
in
jb
rcll
cmovge
xor
popa
in
js
ficoms
mov
xchg
jl
std
scas
add
add
add
adc
mov
pop
hlt
bnd
je
add
add
gs
push
pop
mov
adc
add
add
jmp
and
and
sub
push
lret
jecxz
or
add
add
shrd
mov
es
lea
call
add
xlat
mov
xor
or
mov
fstpl
fsubrs
in
jp
adc
adc
mov
repnz
call
add
add
or
push
xor
cmp
push
fcmovb
dec
inc
int
stos
dec
jecxz
mov
mov
cmpsb
into
or
cmp
push
mov
pop
mov
les
and
add
add
cli
shll
movsl
lcall
aaa
push
cmp
sub
jecxz
addr16
and
mov
add
outsb
gs
add
add
or
mov
inc
xchg
ret
out
stos
adc
mov
sbbl
filds
xor
ds
shl
sbb
jle
push
dec
cmp
adc
dec
dec
sbb
test
add
add
add
les
mulb
fidivrs
outsb
xor
cs
fnstcw
cmp
jp
add
add
rclb
adc
add
add
sbb
inc
add
add
sub
sbb
pop
and
aas
aad
adc
js
out
cli
shlb
negb
cwtl
mov
jb
pop
and
push
add
add
add
add
jne
pop
cli
jb
mov
xchg
leave
push
out
in
mov
mov
xlat
aas
out
add
add
cmpsb
cmp
ljmp
add
add
push
sbb
mov
inc
lea
ja
dec
aaa
ret
mov
jl
test
rorl
add
andb
jne
xchg
dec
int3
or
mov
sti
gs
addr16
and
add
testb
push
shrl
dec
add
jns
out
dec
jmp
or
ja
adc
adc
cmp
sub
mov
add
add
push
lods
out
push
icebp
xchg
push
shl
push
sbb
imul
xor
sbb
mov
push
push
inc
pop
cwtl
repz
std
and
add
add
sbb
sbb
add
add
mov
add
gs
xlat
pop
mov
jo
xchg
sub
mov
add
lea
pop
flds
add
add
popf
shrl
push
push
and
jnp
call
int3
or
mov
adc
mov
xor
and
mov
fsubrs
stos
push
sarb
xchg
pusha
add
xor
add
xchg
jo
adcb
arpl
inc
iret
add
jns
xor
adc
push
movsl
jb
sbb
aas
orb
pop
std
add
add
add
or
adc
fimull
dec
add
add
mov
rcrl
fnsave
add
push
push
scas
cmpsb
adc
loope
in
mov
sub
push
mov
or
or
pop
sbb
mov
insl
aas
ljmp
sbb
hlt
jle
add
add
mov
retw
inc
sti
xchg
mov
or
or
add
jmp
inc
add
add
out
mov
add
mov
inc
js
fstpt
push
lret
ljmp
mov
add
ret
xchg
jle
lahf
cmp
lcall
or
add
icebp
ret
fsub
xor
add
fnsave
data16
lret
add
mov
sbb
adc
push
in
add
add
in
pop
ss
orb
cs
jbe
cmp
popf
iret
outsl
iret
dec
out
adc
mov
jp
loopne
cmc
jmp
fsubr
enter
xor
das
ret
movsl
leave
clc
push
pop
pop
clc
pop
jae
std
inc
add
add
add
add
pushf
lahf
subb
sub
out
push
rolb
insl
js
ds
cmpsb
cmp
sub
inc
test
insb
add
add
add
jno
push
daa
addb
dec
adc
xchg
popa
gs
loop
repz
add
add
mov
sldt
add
add
lds
and
pop
imul
aad
out
dec
xor
xchg
adc
cltd
inc
pop
mov
cmp
or
stc
scas
ror
mov
or
and
mov
mov
inc
mov
jl
jp
mov
repnz
add
add
loop
outsb
mov
mov
shr
jns
sti
in
push
mov
add
add
out
stos
and
imull
aam
clc
jns
inc
dec
cmp
sarl
fidivs
ljmp
mov
popf
lods
cmp
negl
addr16
xchg
mov
lods
cld
xchg
inc
fcomps
add
add
and
cmp
add
rorl
add
pop
ja
cmc
insl
push
fmull
lods
mov
fbld
mov
xchg
gs
jl,pn
and
add
add
ret
sub
popf
aas
xor
add
test
pop
sub
shlb
rorb
jnp
in
add
add
xchg
jl
int
mov
ds
add
add
sub
in
jge
inc
test
add
jmp
repnz
dec
mov
jl
data16
mov
arpl
ficoml
ret
lret
xchg
pop
xorl
jo
cld
popl
sar
mov
xchg
pop
mov
sub
sti
movsb
lods
flds
add
add
out
in
inc
adc
pop
in
mov
into
test
popa
lods
cmp
mov
ja
jne
adc
cli
andl
add
fdivl
enter
addl
mov
adc
pop
cmp
pop
or
jnp
sbb
add
jmp
xchg
das
fnstsw
sbb
add
inc
jo
push
jl
xchg
mov
mov
rol
sbb
and
mov
xchg
jmp
add
add
mov
or
or
add
add
add
add
pusha
add
pop
add
add
add
shlb
jl
iret
lds
add
add
add
jecxz
jl
add
imul
ret
jge
add
jns
fistpl
pop
cltd
jmp
mov
out
pop
add
add
hlt
sar
dec
arpl
nop
push
xchg
sbbb
mov
movsb
arpl
add
add
sub
decl
add
pusha
add
pop
into
hlt
adc
sbb
aad
xchg
movsb
mov
adc
mov
sbb
push
pusha
add
into
dec
in
cmp
inc
scas
loop
lods
inc
out
xchg
addl
add
mov
add
add
dec
add
xor
mov
push
imul
in
outsl
loope
lahf
sbb
dec
loopne
mov
cmpb
dec
addl
outsl
push
push
dec
faddp
test
push
clc
mov
icebp
mov
pushl
pop
push
lds
rcrl
dec
mov
adc
out
mov
mov
add
add
mov
jg
std
inc
add
movsl
fdivp
jg
testb
subb
dec
pop
jp
inc
loopne
inc
mov
push
insb
add
xor
add
add
mov
shlb
xchg
das
push
pop
or
add
add
mov
lret
xchg
loopne
ds
std
mov
add
cwtl
sub
add
add
fsubs
cmp
and
repz
sbb
jno
test
lahf
cmp
sbb
mov
addb
mov
or
mov
add
xchg
mov
mov
jbe
cmp
mov
mov
xchg
xchg
movsb
aas
pop
popa
dec
bnd
cld
add
add
fadd
or
fcomps
cwtl
xlat
adc
add
add
add
xchg
jle
xchg
jmp
add
add
jp
cmp
add
add
add
or
test
mov
data16
adc
adc
add
mov
mov
sbb
inc
add
add
movsb
dec
xchg
xchg
test
xor
imul
push
sbb
push
pop
sub
mov
xor
mov
or
add
mov
add
mov
jmp
sti
push
rorl
add
add
mov
xchg
mov
xchg
or
ror
pop
push
dec
add
pop
mov
mov
sub
push
daa
sub
repnz
mov
jge
ja
push
xchg
scas
lods
xor
push
les
add
add
pop
mov
jnp
add
sahf
rcrb
pop
aad
std
test
jo
aam
jle
pushf
in
adc
subl
dec
adc
add
inc
and
outsb
inc
add
add
jg
xchg
mov
sub
push
mov
pop
sbb
lods
sub
add
add
xchg
cmpsl
sub
xorl
add
hlt
es
add
add
lret
das
fcompl
popa
adc
xor
outsl
push
and
jp
add
add
xor
fbstp
jne
cmc
stc
sbb
sbb
testb
out
scas
ja
je
lret
mov
int
sahf
jge
test
xor
add
add
sbb
cli
bnd
add
xor
adc
out
icebp
push
xor
add
add
imul
push
xchg
add
add
mov
sbb
add
add
ss
adc
inc
lods
mov
cmp
ret
and
mov
out
xchg
sub
xor
or
mov
dec
ja
enter
dec
int
or
rcr
aas
xor
call
push
loope
adc
mov
adc
insl
xchg
bound
jg
adc
mov
xor
xchg
mov
jo
sbb
or
or
add
add
mov
bound
sub
jns
popf
je
lods
cmp
sti
pushf
in
cmp
push
sarb
mov
fadds
inc
pop
sub
add
add
xchg
push
movsl
aas
or
mov
xlat
aad
cmp
outsb
into
mov
call
imul
fdiv
loop
repnz
pushf
sub
test
add
fldt
add
xchg
add
mov
jp
adc
jge
lcall
add
add
jle
in
out
aam
sub
jle
sbb
or
clc
add
sar
pop
xlat
mov
cli
ret
cli
aad
push
test
sbb
clc
add
add
add
add
add
sub
add
add
stos
test
mov
gs
xchg
idivb
sbb
add
aad
in
loop
push
push
mov
xchg
insb
add
add
push
sbb
xor
mov
rcr
sbb
add
popa
hlt
and
add
add
push
adc
into
neg
in
or
cmp
push
cmpsl
int3
sbb
mov
enter
xor
lea
and
pop
into
cmc
loopne
divl
rol
mov
inc
add
add
inc
add
mov
movsl
addr16
test
sbb
mov
aam
nop
out
loopne
add
jle
in
std
fidivrs
js
inc
lret
pushf
mov
int3
in
dec
add
mov
fdivrs
lea
aaa
les
xchg
pop
push
int
shll
add
jno
xchg
jo
jp
mov
xchg
xor
push
shll
jge
stc
mov
stos
cmpsb
dec
stos
dec
or
ss
mov
add
jl
mov
popa
pusha
add
add
inc
jne
test
push
scas
lock
dec
test
hlt
ljmp
cltd
scas
dec
push
mov
pop
xor
xor
in
jb
pop
stc
dec
pop
scas
fsubl
add
add
cmp
loopne
push
and
add
add
aad
sub
xchg
mov
mov
pop
out
dec
lods
xchg
and
test
cmp
push
xor
jbe
mov
add
int
lret
mov
cli
aaa
and
mov
cmp
push
cli
nop
jno
cmp
jb
sub
add
add
adc
mov
sahf
mov
mov
adc
vucomiss
mov
xor
aad
xchg
aaa
int3
adc
push
mov
fisubl
xchg
fstps
add
add
fstps
ret
and
mov
stos
out
inc
subl
cmpsl
lock
jne
js
test
out
fnsave
cli
rorl
mov
lret
inc
cli
xchg
add
add
add
mov
adcb
movsb
jg
cmpsl
inc
cmp
mov
or
mov
pop
mov
ss
inc
add
cmc
mov
nop
je
shrl
cmp
xchg
push
in
rcl
dec
pop
out
jns
pop
mov
push
cli
rclb
movsb
mov
fcmovne
pop
rclb
cmp
pop
into
je
mov
inc
add
add
loop
inc
rcll
enter
ja
jecxz
ror
push
std
mov
add
add
add
add
and
int3
jmp
cli
mov
mov
fwait
adc
sub
in
xor
hlt
mov
mov
add
add
fdivs
xor
lahf
es
xlat
pop
notb
mov
xor
adc
add
pop
out
pop
lods
mov
roll
addr16
stc
ror
out
add
add
add
mov
dec
add
add
add
add
shll
add
add
or
add
add
dec
cli
negl
sbb
out
jg
inc
pop
pop
iret
xchg
test
pop
push
dec
add
adc
jnp
pop
xchg
add
add
add
add
xchg
mov
add
mov
jmp
fidivl
add
push
xchg
mov
add
add
aas
pop
jge
test
mov
lock
adc
sbb
push
pushf
stos
mov
cmp
fmul
lcall
scas
popa
ret
test
sbb
add
pop
mull
mov
call
adc
push
popa
push
or
pushf
dec
std
filds
add
outsl
addb
add
add
xor
lret
lea
or
daa
xorl
mov
add
sbb
push
pop
cld
pusha
add
loopne
jle
es
inc
push
sub
mov
add
add
cmp
jg
add
add
lds
icebp
xchg
push
mov
in
scas
cmp
std
sbbb
sahf
or
pop
in
sub
push
adc
add
loopne
jno
stos
pushl
out
dec
mov
scas
xor
add
mov
add
das
lods
aaa
jecxz
cmc
mov
push
pop
xchg
dec
cmp
pop
ffreep
fucomp
mov
and
mov
add
mov
inc
add
mov
xchg
lods
jne
lret
add
add
dec
cmpsb
shll
movzbl
incb
inc
add
add
xchg
add
mov
jecxz
stos
mov
add
sbb
add
popf
add
leave
mov
xchg
mov
ret
push
inc
xchg
sub
add
add
inc
add
cs
inc
in
cmp
iret
ljmp
iret
outsb
outsl
xor
sbb
or
add
add
inc
add
add
mov
add
add
add
iret
xchg
lods
repnz
xchg
cli
sti
fnstsw
xor
ret
mov
jb
mov
aad
push
inc
sbb
cmp
push
out
js
adc
in
jne
xchg
pop
repz
scas
add
add
xchg
add
cwtl
xorb
dec
movsl
xchg
fidivs
pop
add
mov
pop
add
mov
sarb
leave
pop
dec
int3
sbb
xchg
adc
add
or
add
ret
mov
mov
add
and
outsl
sub
mov
sbb
daa
mov
add
int3
push
es
lahf
lea
push
out
test
mov
jbe
lods
call
bound
int3
or
call
loope
adc
add
adc
sbb
sub
pop
xchg
and
js
push
or
or
jge
aaa
sub
data16
hlt
pusha
add
movsb
int3
push
lds
cmpsb
cmpsb
pop
mov
jbe
std
mov
lret
cld
lret
rcrb
mov
mov
add
sub
mov
idiv
mov
add
shl
iret
mov
mov
xchg
mov
cmp
repnz
mov
inc
sub
add
add
xchg
leave
sbb
fsubrs
add
add
dec
shrb
add
pop
adc
mov
mov
mov
xor
push
pop
enter
rcrl
and
fcoml
jecxz
adc
loope
dec
add
mov
sub
shr
push
loop
mov
add
add
jg
jl
mov
jne
rorb
jnp
sti
addr16
in
dec
add
fxch
repnz
mov
mov
add
call
in
jbe
aaa
mov
mov
cmpsb
or
add
add
push
mov
add
repz
lds
xchg
adc
add
adc
add
add
jmp
add
neg
jmp
push
fdivrs
add
movsl
push
pop
mov
jle
jo
xchg
test
subb
inc
pop
testl
adc
add
add
andb
mov
push
scas
int
daa
push
lea
and
rcr
lret
shr
int3
sub
ficoml
hlt
mov
or
add
xchg
mov
sbb
test
xor
or
add
add
mov
sub
add
add
mov
ljmp
inc
iret
arpl
push
mov
xchg
fisubl
rcl
and
int3
mov
out
push
mov
iret
sub
cmpb
mov
add
cmp
jge
jg
fcom
not
jmp
mov
push
loop
mov
xchg
mov
mov
nop
iret
not
xor
add
jb
cmp
in
daa
test
lret
js
sahf
les
add
add
ret
push
sub
add
add
add
mov
pop
xchg
jg
and
push
cmp
enter
punpckhbw
add
add
add
jmp
mov
inc
push
push
fwait
jno
mov
pop
add
ds
movsl
decb
jg
shlb
push
aaa
sub
add
add
add
add
pop
pop
stos
inc
sbb
stos
fmul
push
xchg
push
fiaddl
pop
aaa
pusha
add
add
sub
mov
test
and
add
add
add
outsl
xchg
dec
pop
es
pop
test
mov
std
cld
movsb
dec
fists
or
add
add
add
add
dec
add
sbb
mov
sbb
add
add
cmp
add
mov
mov
mov
add
add
adc
xlat
aad
dec
or
pop
add
cmp
add
jb
sbb
jno
mov
add
add
push
sub
add
mov
add
add
lods
adc
xchg
add
rcr
mov
mov
pop
sti
push
leave
sub
into
into
outsl
notb
movsl
jno
data16
cmpl
sbb
in
xchg
adc
cltd
bound
ja
push
cs
aam
mov
mov
std
std
lret
mov
sbb
and
mov
rolb
mov
cmpsl
mov
movsb
aas
stos
arpl
or
lret
movb
add
add
inc
add
add
imul
dec
jbe
imul
add
add
mov
cmp
aam
pop
dec
add
add
and
out
jg
es
sbb
xchg
enter
or
into
push
das
in
cmp
mov
pusha
add
mov
mov
mov
dec
adc
add
lods
xchg
lods
fistpll
fisubrs
jmp
fsubs
ret
pusha
add
mov
sbb
data16
fsubr
cld
inc
dec
andb
add
push
dec
push
out
mov
fadd
jge
add
add
add
mov
hlt
pop
addr16
sbb
add
add
or
add
add
lret
and
cld
push
xchg
rolb
push
sub
dec
jne
subb
arpl
add
add
mov
mov
inc
addr16
sbb
add
test
adc
sbb
sbbl
mov
jg
lahf
and
xchg
loop
out
mov
add
xchg
int3
cmpsl
jb
ret
inc
call
add
cmp
mov
mov
sub
int3
cwtl
out
xlat
jge
fbstp
mov
fidivs
add
adc
pop
add
scas
adc
fistpl
pop
xchg
sbb
push
lock
add
add
xlat
xchg
xchg
pop
repnz
shll
mov
sbb
aam
add
scas
sub
add
add
bound
ja
adc
inc
add
add
sub
add
sahf
pop
sub
mov
inc
sbb
xor
fisubrs
inc
es
add
mov
add
add
loop
hlt
into
add
pxor
dec
adc
aas
push
add
add
mov
lods
repnz
lcall
push
lods
sub
fsubl
add
add
stos
jns
cmp
in
pop
dec
negl
jp
add
xchg
or
loope
shrb
add
fldl
add
push
in
mov
mov
add
roll
ret
sub
mov
jecxz
arpl
int3
or
add
sub
pop
out
loop
sub
mov
jno
add
add
push
mov
arpl
and
add
add
pop
scas
popa
add
cld
cmp
stos
xor
jne
push
movsl
out
mov
add
mov
add
push
mov
mov
sbb
test
mov
aam
pop
sub
add
lods
fidivrl
add
cmp
and
add
add
xor
jp
testb
jne
mov
je
jmp
loop
sti
mov
adc
push
das
mov
mov
lods
mov
clc
clc
cmp
add
add
repz
or
add
add
cmp
push
pop
cwtl
fwait
movq
pop
cli
adc
push
inc
popa
dec
jg
dec
xchg
mov
xchg
xor
add
add
add
mov
and
add
mov
stc
cmp
add
jle
cmp
jns
loope
iret
aaa
js
push
jne
icebp
adc
lods
paddsw
push
mov
pop
rcll
mov
add
rol
in
out
mov
cmpl
add
subl
mov
in
pop
movsb
mov
add
xor
mov
outsl
lret
neg
xchg
cmp
iret
leave
xchg
push
mov
hlt
lret
and
enter
ficoml
inc
add
dec
out
stos
in
inc
add
add
pushf
faddl
add
add
add
add
lods
xorl
in
mov
jb
mov
push
push
mov
push
sub
subb
call
add
in
inc
mov
xor
add
add
add
xor
sahf
jne
xor
jle
ret
mov
push
push
mov
jmp
add
and
mov
xor
mov
add
cmpsb
sahf
vfmaddsubpd
push
popa
mov
dec
notl
mov
jge
and
sub
add
add
fnstsw
xchg
or
ret
xchg
add
add
in
shll
add
xor
mov
jl
cli
in
and
stc
mov
add
add
iret
or
dec
adc
cmp
cmpsb
cmpsl
mov
inc
mov
lcall
add
mov
call
dec
add
add
lock
add
add
les
in
das
mov
add
xchg
push
jne
insb
add
add
sbb
lock
add
add
add
jo
mov
or
and
leave
aas
cwtl
adc
cmp
in
add
sbb
ss
sbb
jecxz
sti
out
jecxz
fwait
popa
ljmp
insb
add
in
sbb
add
add
or
movsl
pusha
add
jge
mov
fld
pop
pop
popf
es
mov
outsb
shr
pop
in
push
dec
mov
add
stos
popa
xchg
mov
add
add
int3
bound
hlt
xchg
cmp
scas
mov
add
jmp
sar
sbb
inc
out
push
inc
or
sbb
add
add
clc
adc
push
jmp
js
mov
add
fadds
mov
jbe
adc
dec
add
add
cld
leave
aam
adc
dec
aam
xchg
lock
data16
jae
and
rorl
cltd
sub
cld
loopne
xchg
mov
dec
jne
push
insl
add
mov
mov
rorb
mov
push
arpl
sbb
add
cmp
fisubs
pop
jne
cmp
fisubrl
out
xor
xor
add
rorb
lret
pop
add
adc
cmp
add
mov
adc
mov
mov
push
shlb
in
test
cs
add
mov
add
add
roll
inc
les
int3
test
into
and
cmp
das
test
lods
lahf
das
sub
fwait
lahf
xchg
aad
push
ret
or
add
add
add
jae
lret
lcall
and
add
add
sub
popa
jp
fnclex
outsb
adc
repz
negb
sbbl
xor
popa
or
dec
ret
popf
add
mov
leave
insb
add
add
scas
pop
dec
rcl
ljmp
loope
ffree
pop
inc
jmp
sbb
add
xchg
add
sub
push
cmp
rolb
push
loop
or
xchg
int3
insl
ljmp
outsb
mov
sub
icebp
mov
push
mov
add
mov
and
xor
js
fwait
inc
inc
push
push
or
lods
jno
xchg
mov
shlb
push
add
add
pop
insl
add
add
add
sub
mov
sub
add
add
sahf
jmp
stos
enter
add
or
add
sub
mov
add
mov
add
add
cmp
mov
out
inc
add
add
cmp
push
pop
add
add
add
jnp
lods
xchg
sub
mov
mov
adc
cmp
dec
add
add
jle
mov
xchg
xchg
xor
xchg
xchg
push
repz
pop
mov
add
add
mov
das
cld
jns
add
add
scas
inc
add
add
rclb
insl
add
scas
mov
dec
mov
mov
add
dec
add
mov
aad
push
sbb
hlt
sarb
ljmp
add
fbstp
hlt
outsb
loope
cltd
inc
outsb
je
mov
cmp
enter
jge
or
pop
popa
cmpl
loop
xor
fstpl
pop
gs
negl
add
add
jmp
jle
ja
mov
ud0
data16
ss
add
xchg
add
mov
fnstsw
jl
jae
mov
cmp
mov
bound
add
sbb
cli
cld
push
cmp
add
add
shrb
sbb
push
or
fstpl
jmp
add
add
mov
mov
jecxz
jbe
xlat
xor
int3
loope
ja
add
mov
enter
cltd
or
push
das
pop
clc
inc
mov
pop
les
enter
int3
adc
mov
cmp
aas
shl
or
add
fdivrl
inc
mov
mov
dec
les
inc
push
and
add
add
popf
sti
fiaddl
pop
mov
cmp
mov
add
mov
mov
inc
or
add
add
add
add
scas
or
add
add
add
add
cs
xchg
test
add
push
inc
inc
mov
add
mov
pop
testl
imul
lret
sbb
in
daa
mov
insl
inc
xor
xor
sbb
loope
fisubrl
add
arpl
ret
loop
or
fwait
rorl
lcall
xor
stos
test
add
add
popa
inc
cmp
mov
dec
and
jl
fwait
sbb
lods
xlat
stos
jnp
sub
add
add
repnz
or
stc
jbe
jmp
add
push
outsb
out
add
sub
mov
fwait
stc
xor
xor
xchg
iret
sub
mov
mov
ljmp
push
cmpsb
mov
nop
jmp
xchg
push
dec
test
add
gs
test
mov
mov
aaa
jbe
insl
xor
mov
add
insb
add
add
add
adc
lret
push
sbb
jb
test
mov
inc
lods
jne
push
mov
insl
sbb
push
dec
add
dec
add
sbbl
xchg
add
add
add
lcall
inc
add
add
mov
sahf
push
ror
mov
add
pop
cmp
int3
lcall
pop
sbb
mov
pop
in
mov
or
xor
sti
cmc
ret
in
repnz
rcrl
xor
jle
inc
pop
dec
arpl
jb
jl
inc
iret
jbe
arpl
mov
mov
inc
xor
xchg
jb
nop
pop
sub
add
sub
mov
or
and
ficompl
cmp
sbb
xchg
scas
call
add
add
test
pop
mov
sbb
out
xlat
or
mov
jecxz
add
stos
sub
mov
or
fldl
arpl
push
push
into
aas
arpl
add
add
mov
outsb
inc
add
add
rorl
add
add
add
add
pusha
add
lretw
push
insl
jg
orb
add
push
je
xlat
sbb
xor
popa
fidivs
test
dec
sub
push
mov
stos
loop
add
add
subb
loopne
mov
mov
mov
rcrb
mov
pop
xorl
add
sub
add
add
cmpsb
xchg
insw
les
jns
mov
clc
repz
mov
pop
rorb
add
shll
add
add
popa
pushf
jno
mov
adc
jecxz
jnp
pop
popf
fisubl
in
jne
or
mov
mov
out
into
sahf
jp
js
cld
out
xor
hlt
out
movsb
push
cmc
adc
jns
test
adc
cltd
sahf
insb
add
add
imul
filds
sbb
ja
cmp
add
andb
dec
jp
sbb
jnp
cwtl
mov
fnstenv
pop
dec
das
fptan
push
cltd
push
jb
and
ficomps
fdiv
mov
jge
out
mov
out
cmp
cli
cs
inc
pop
adc
shll
mov
inc
add
add
arpl
adc
add
add
add
add
add
test
and
mov
mov
scas
lahf
popa
mov
fdivrl
mul
pop
push
push
sbb
jns
lds
add
mov
das
cwtl
cwtl
popa
loope
mov
mov
add
insb
add
adc
xchg
in
out
int
add
add
mov
movsb
fstl
cmp
ss
and
and
add
add
sbb
mov
sahf
bnd
mov
pop
xchg
pop
in
cmp
jns
repz
push
out
pop
add
ret
jmp
add
push
mov
mov
js
add
cmp
add
test
add
shrb
mov
mov
lods
dec
add
mov
mov
ficoml
add
incb
loopne
jmp
jbe
testb
dec
pushf
inc
cld
clc
retw
jl
mull
xor
jp
cmp
mov
mov
dec
pop
inc
in
xor
add
stc
fmuls
inc
mov
js
push
rcll
jl
add
add
scas
mov
lahf
inc
add
add
sub
pushf
sar
add
add
cmp
jno
aas
xchg
xchg
sbb
movsb
inc
js
aas
jae
ret
jnp
sub
add
cli
das
pop
stos
mov
mov
sarb
jno
repnz
pop
inc
lods
ffree
mov
push
mov
add
add
xchg
jle
sub
pop
imul
into
lcall
fcomps
push
popa
sub
out
xlat
leave
fwait
roll
pop
mov
mov
ret
add
add
stos
ss
ljmp
sub
dec
adc
sar
xor
add
int
lods
add
jbe
jne
inc
add
push
add
add
shll
push
mov
push
movb
ds
add
mov
fcomps
add
jno
mov
add
add
in
add
add
and
mov
aam
rcrl
adc
dec
add
add
lret
push
sbb
sbb
sarb
int
in
pop
std
outsb
sbb
add
in
and
mov
pop
mov
or
mov
out
test
sub
stos
adc
cmpsb
sub
pop
flds
icebp
push
sub
cli
push
mov
cmc
jle
pop
sub
sarb
sti
fbld
cld
arpl
sub
pushf
nop
inc
pop
in
jge
mov
test
rclb
leave
sbb
mov
jecxz
xchg
movsl
or
jne
inc
rcrl
pop
ret
hlt
test
cmc
inc
jmp
push
fbld
imul
xor
fcmovnb
rorl
popa
dec
stc
mov
stos
movsb
xchg
inc
pop
popf
mov
das
push
addr16
xor
lcall
xor
cwtl
xchg
bound
xchg
lea
leave
adc
cltd
cltd
lcall
inc
add
add
cmp
xchg
icebp
mov
push
mov
lret
bound
inc
in
cmp
pop
jno
repnz
stc
sti
enter
nop
pop
xlat
aaa
fildll
add
add
cmc
in
xchg
push
popf
lock
cmp
xor
mov
bound
jo
stos
insl
gs
dec
fnstcw
sbb
add
je
cltd
outsl
sub
popa
push
xor
mov
xor
and
adcb
pop
clc
mov
mov
add
add
lods
scas
xor
lret
inc
xor
sbb
es
int
sti
xor
push
and
push
lock
jl
mov
mov
dec
addr16
lock
add
add
in
mov
mov
adc
mov
jno
add
ret
sub
jl
outsl
mov
in
add
cmp
cmpsb
cmp
ret
adc
loop
push
mov
jb
sbb
add
add
sahf
xor
dec
fidivrl
int
push
clc
add
ljmp
cld
sti
cmp
mov
add
mov
push
inc
mov
testb
adcl
jle
cwtl
jp
shrl
fsub
scas
push
lods
fwait
ljmp
add
add
mov
push
int
mov
add
push
push
add
mov
inc
lea
rolb
push
push
xlat
pop
pop
hlt
aas
xchg
mov
inc
mov
add
add
jle
push
test
hlt
fwait
dec
add
or
add
add
push
mov
sub
add
add
pop
nop
cmp
jmp
cs
subb
scas
int3
pop
mov
in
mov
cmp
add
add
add
lock
add
ja
pop
dec
add
add
add
nop
sub
add
add
ret
hlt
mov
out
mov
stos
aad
gs
nop
push
and
add
add
out
pop
inc
inc
sahf
or
add
add
pop
pop
lods
cmp
in
fiadds
xchg
test
inc
daa
jp
test
add
sub
fisubl
xor
push
cmpsl
sahf
fnstsw
or
add
add
lret
scas
sbb
xchg
ficomps
add
add
push
sbb
jae
inc
add
add
pop
je
and
mov
dec
and
mov
add
mov
xchg
leave
push
jmp
enter
jecxz
xor
stos
dec
enter
lock
mov
scas
ljmp
pop
adc
mov
test
push
mov
imul
mov
mov
dec
popa
pop
xchg
dec
adc
dec
dec
dec
mov
fsts
and
add
add
sbb
add
loope
jecxz
inc
push
les
testl
shl
sarb
add
mov
sbb
popf
cld
jb
lods
sbb
out
pop
mov
push
xchg
sbb
js
adc
add
add
scas
sahf
mov
lods
sub
add
add
dec
jnp
cmp
fmull
jno
gs
add
add
gs
jle
jne
mov
mov
filds
add
add
xchg
cmp
ss
popf
pop
pop
xor
and
jae
repz
add
scas
xor
fstl
add
add
testl
test
xchg
notb
test
out
cmp
or
dec
stc
orl
inc
stos
add
jp
push
sub
add
add
mov
and
inc
add
add
ds
jbe
pop
popa
es
stos
dec
add
add
mov
pop
jns
add
add
iret
jg
ljmp
mov
adc
add
add
testl
add
jl
add
add
add
loope
inc
lods
jp
orb
add
xor
mov
push
mov
daa
fadds
mov
add
add
inc
pop
cmp
add
and
lds
sahf
nop
dec
popf
mov
sub
popf
add
or
imul
out
mov
adc
jno
push
lock
cmpsl
lock
lret
dec
add
pop
mov
jnp
pop
fisttpll
add
cmp
mov
arpl
in
add
add
repz
inc
add
add
or
lods
out
movswl
push
hlt
sub
sub
lret
mov
shll
stc
hlt
and
mov
mov
jae
sarl
movsb
cmp
add
add
adc
mov
mov
inc
clc
mov
cld
jb
rcrb
cmp
stos
sbb
cs
call
loopne
sbb
or
jbe
popf
inc
or
add
add
pop
jne
cmpsl
dec
add
add
ret
out
sub
add
add
xchg
in
fnsave
es
jae
xor
xor
xor
add
inc
add
add
call
outsl
fldcw
add
add
fiaddl
aad
jmp
add
fisttps
imul
xchg
xchg
repz
inc
add
add
sbb
jg
insb
add
xchg
ficomps
cmp
stos
movsb
test
cmp
test
ds
test
lea
shrb
fnsave
pop
movsb
loope
idivb
xchg
insb
add
push
jnp
sbb
sub
nop
mov
xchg
mov
sbb
es
test
or
add
add
jge
push
out
xor
daa
dec
adc
fildl
adc
add
mov
add
jae
andl
add
cmp
std
cmpsl
xchg
mov
and
shrb
or
mov
add
pop
stos
mov
and
add
ret
je
psubq
sti
test
in
leave
mov
push
insl
test
outsl
pop
pop
inc
cmp
popf
xchg
add
mov
aas
popa
mov
in
les
aas
ffree
orb
add
add
adc
fadd
cmp
xchg
and
aaa
adc
mov
iret
dec
imul
add
mov
inc
add
add
push
push
cmpsb
out
mov
scas
and
add
add
add
pop
das
jmp
imul
or
add
add
sbb
aad
int3
and
aam
dec
sbb
pop
mov
movb
add
add
inc
cmpsl
mov
add
add
sbb
add
add
negl
jns
xor
cs
pop
data16
add
add
inc
sbb
lds
outsl
sub
add
add
mov
in
or
push
xor
sub
xor
ds
jl
lret
push
sbb
add
add
dec
fldcw
pop
scas
fldenv
add
add
push
cli
hlt
cld
inc
leave
fucomp
aam
aad
popf
inc
jle
imul
out
adc
sub
xchg
mov
add
sbbb
add
add
jle
jae
pop
push
nop
jp,pn
fucomip
lret
xor
rcll
rcrb
jl
add
add
fnsave
lret
adc
je
inc
add
add
test
add
mov
and
dec
add
mov
mov
push
xchg
inc
outsb
or
mov
add
push
cmp
mov
sub
pop
xchg
mov
add
add
cmp
add
add
cmp
ja
add
sub
xchg
pusha
add
add
xor
mov
add
add
add
in
mov
xchg
adcb
add
outsb
push
and
mov
data16
and
push
push
ficoms
repz
pop
ja
xchg
xor
test
mov
cld
mov
repnz
add
add
sbb
fisubrs
inc
repz
or
add
add
popf
mov
cmp
sub
mov
hlt
ss
pop
pushf
movsb
stc
icebp
rcl
sbb
add
loop
mov
mov
add
add
ds
mov
sbb
add
add
adc
cmp
push
rclb
cmp
fisubrs
add
add
xchg
inc
addr16
mov
xchg
push
jb
mov
jecxz
cmp
negb
push
sbb
scas
mov
mov
add
jg
push
fisubrs
fsubp
ja
add
add
pusha
add
add
aas
cli
outsl
aaa
add
js
adc
dec
add
aaa
cmp
push
mov
add
add
cli
add
pop
sub
add
add
xchg
shr
repnz
addr16
int
sbb
or
add
add
in
cmovo
add
add
fsubrl
and
add
pop
or
add
add
lret
jae
or
sub
add
add
mov
add
scas
ss
adc
rcrl
stos
cwtl
lret
mov
cmp
rcrb
jecxz
imul
inc
add
idivb
leave
xor
lods
mov
mov
adc
add
lcall
pop
loop
enter
imul
sub
add
add
dec
pop
sti
sti
mov
mov
push
test
add
add
cs
mov
stc
push
ljmp
dec
add
add
jbe
jns
lds
push
aas
lret
repnz
fldl
add
popa
jmp
xchg
sbb
imul
add
add
lods
xor
jmp
cmp
leave
and
sbb
sbb
sahf
scas
xlat
mov
lret
pop
in
add
std
add
jno
in
and
ror
xor
sub
mov
inc
loope
stos
jnp
dec
pop
lds
sahf
mov
and
cmpl
pusha
add
add
push
pushf
test
loopne
mov
add
idiv
nop
in
ret
sbb
daa
icebp
lcall
popl
mov
andl
add
jo
mov
pop
mov
les
popa
cmp
leave
sub
add
add
aad
scas
xchg
pop
push
hlt
pop
mov
mov
pop
adc
add
mov
jnp
mov
xchg
sub
add
add
xlat
pop
push
cmp
add
popa
ljmp
enter
xchg
add
add
rolb
cmp
or
pop
stos
hlt
add
outsl
daa
fisttps
lea
aaa
pop
sbb
cmp
push
xchg
push
adc
sub
mov
xchg
sbb
jmp
add
adc
nop
cmp
add
inc
dec
jnp
cmpsb
popf
jecxz
notb
sub
mov
inc
pop
test
rcl
repz
lods
dec
add
add
loope
dec
add
add
in
inc
mov
arpl
xchg
stos
jns
scas
xorl
iret
or
mov
aad
or
jp
mov
aaa
jns
cmp
repz
xchg
or
add
popa
jmp
in
add
add
cmp
pop
mov
adc
testb
jo
xlat
or
pop
stos
lds
test
mov
add
add
add
add
test
cs
insl
inc
hlt
xor
pop
idivl
jl
xchg
icebp
adc
int3
cmp
sbb
dec
loopne
add
xor
mov
push
test
dec
pop
jno
repz
lret
std
shrl
in
or
xlat
mov
add
add
sbb
dec
mov
imul
or
pop
xchg
inc
add
add
int3
imul
add
imul
insl
adc
add
cmp
scas
cmpsl
add
or
sbb
add
add
sbb
add
subb
ficompl
xchg
mov
push
mov
frstor
out
mov
mov
mov
hlt
inc
xchg
inc
lahf
push
frstor
inc
fisttps
add
daa
cwtl
or
scas
imul
jb
addb
add
mov
fcmovbe
mov
in
repnz
add
add
mov
jb
mov
add
xor
in
insb
add
add
and
add
add
xor
mov
add
fildl
jl
movsb
popa
outsl
xchg
std
add
add
add
sbb
cmp
dec
sbb
add
scas
mov
add
in
leave
or
mov
pop
call
add
aam
mov
dec
add
add
stc
je
cmpsl
in
dec
test
mov
int3
insl
ss
add
add
dec
ror
and
mov
outsl
push
mov
add
or
mov
mov
dec
xchg
adc
stos
pusha
add
add
lods
dec
add
add
notb
outsb
dec
and
sbb
shlb
cld
jo
add
mov
aas
scas
xchg
add
pop
movsb
pop
jo
int
push
push
mov
loop
xchg
jle
fnstenv
dec
jae
sub
outsl
inc
xchg
xor
scas
xlat
test
enter
into
cmp
dec
add
pop
lds
push
or
enter
xchg
jns
mov
pusha
add
add
sbb
pop
out
mov
mov
in
cmp
lods
sub
mov
leave
arpl
jmp
and
outsb
and
test
add
add
add
add
and
push
cmp
add
xchg
clc
ficompl
push
xchg
xchg
sbb
fsubrl
mov
inc
add
add
int3
insl
pop
repz
push
shll
mov
add
xor
or
mov
mov
shll
add
jbe
into
movsb
cmpl
add
add
cmp
push
jne
stos
or
insb
add
pop
mov
sub
pop
bound
lcall
jns
sti
pop
adc
scas
inc
push
jge
and
add
add
loop
mov
scas
mov
jb
add
adc
ficompl
in
ds
mov
jb
addl
mov
xchg
mov
cmp
sbb
call
sarl
js
or
negb
shlb
std
push
test
add
adcb
mov
and
mov
cmp
inc
add
add
push
xor
aas
outsl
push
lahf
ljmp
test
icebp
push
or
add
add
xchg
mov
fsub
cmp
sahf
xchg
inc
add
push
inc
test
cld
mov
pop
loop
mov
shlb
mov
xchg
lds
jg
fldcw
add
xchg
sbb
mov
add
xchg
es
push
shl
in
or
mov
pop
icebp
out
push
inc
mov
mov
add
jne
cs
add
int3
insl
loopne
lahf
movb
out
mov
daa
gs
inc
out
add
add
add
pusha
add
jb
js
addr16
nop
inc
ja
push
mov
dec
jp
insl
rclb
sbb
lcall
mov
or
add
add
mov
jnp
rolb
aaa
push
mov
fcomps
sbb
daa
lds
inc
daa
test
mov
add
add
lods
xchg
xchg
outsl
mov
pop
or
mov
adc
jno
je
mov
add
add
in
movsb
xor
aas
je
or
mov
mov
fwait
xchg
adc
popa
fiaddl
insl
cmp
sbb
add
cmp
fcomps
shr
and
mov
cs
xor
push
inc
push
inc
punpckldq
imul
cmp
rorl
mov
je
xchg
hlt
cltd
xor
add
cmp
fdivrl
mov
jb
sbb
mov
pop
mov
push
test
jg
adc
aam
jmp
add
rcrl
fnstenv
push
ljmp
out
sbb
pop
dec
add
add
jecxz
xlat
xchg
xlat
cltd
out
loop
sub
push
mov
insb
add
add
inc
jge
das
xchg
sbb
push
jmp
mov
mov
push
inc
cmp
add
add
addr16
mov
mov
or
inc
inc
sarl
xchg
mov
bound
imul
insb
add
add
aas
pop
adc
inc
ljmp
outsl
push
jmp
ja
fcoml
add
mov
sbb
or
loopne
mov
lahf
into
clc
movsb
fstl
add
sahf
sub
mov
ret
fwait
in
push
sti
cmpsb
data16
push
xor
add
sub
add
jnp
and
add
add
pop
inc
js
in
popa
inc
rcl
push
add
mov
cmpsb
sub
pop
and
fwait
push
fmuls
add
add
cmp
sub
fidivrs
loopne
add
and
add
in
jb
mov
repnz
jne
movsl
inc
pusha
add
mov
out
imul
aaa
out
stc
sub
sbb
push
adc
outsl
loopne
add
add
daa
sbb
add
pop
push
cwtl
add
mov
cmp
cmp
sbb
xchg
jnp
iret
mov
add
add
ret
fwait
xchg
jg
dec
pop
cmp
and
add
add
les
add
add
xor
add
add
add
jecxz
lea
pop
clc
sub
mov
outsb
inc
mov
add
mov
addr16
popa
cmp
push
xor
add
push
adc
add
sub
mulb
mov
stos
ror
adc
xorb
add
add
add
and
mov
inc
out
adc
lods
fstp
test
and
add
add
jmp
add
add
inc
sti
lret
aad
add
add
add
cmp
inc
sbb
push
sub
stos
and
add
add
dec
add
add
sub
es
add
add
pop
sbb
divb
add
les
push
movsb
xlat
ss
add
add
push
lcall
cs
add
aad
testl
add
pop
lret
cmc
insl
in
xchg
cwtl
lods
add
push
ds
fisubrs
mov
lods
mov
dec
push
pop
inc
xchg
xchg
mov
jp
fdivl
fiaddl
or
mov
push
outsl
aas
cmp
jno
add
add
sub
xor
and
mov
add
add
movsl
in
sbb
or
push
sarl
cmp
push
mov
sub
mov
fisubl
or
mov
pop
aas
lret
into
add
add
add
push
xor
jle
sbbb
cmp
insb
add
lds
stc
bswap
mov
test
rcl
xor
add
aad
mov
xor
ja
add
add
xor
cmp
lods
pushf
pushf
add
mov
je
add
add
add
lods
mov
gs
jbe
mov
pop
mov
add
and
aas
insb
add
xor
xlat
push
cwtl
aam
cmp
jp
neg
ret
enter
xor
push
jmp
pop
lahf
cld
dec
add
pop
dec
add
xlat
mov
lds
or
mov
fmulp
pop
popf
jo
aam
pop
mov
add
xchg
inc
outsl
push
pop
sbb
int
or
mov
or
mov
pop
pop
inc
mov
leave
inc
mov
push
clc
and
inc
add
add
mov
dec
add
add
sub
add
fnstsw
add
add
in
jbe
add
adc
xor
adc
movsl
adc
cs
add
xor
pushf
xchg
ret
mov
cmc
push
add
add
in
sbb
loope
gs
ds
jae
cmpsl
shll
add
pop
mov
add
mov
mov
mov
sub
mov
xchg
adc
lea
in
mov
push
inc
add
in
fisubrl
add
xchg
icebp
fnstenv
rorl
push
imul
inc
pushf
xchg
shlb
add
add
dec
sub
mov
out
fstp
lock
std
xor
and
sub
cmp
pop
imul
in
adc
mov
or
int3
xor
insl
imul
mov
ljmp
add
lret
mov
fstl
mov
sub
mov
add
xor
enter
add
dec
in
pushf
movsl
out
mov
xor
jne
mov
push
rcrl
dec
or
test
add
add
outsb
xor
sarl
add
inc
mov
loopne
mov
push
fcoms
mov
popa
mov
lret
or
pop
fnop
cwtl
lock
cs
std
rcll
mov
add
mov
or
mov
push
dec
jp
lret
mov
inc
mov
icebp
mov
aas
scas
cltd
pop
loope
mov
shrb
mov
pop
sbb
jg
aas
mov
add
xchg
sbb
dec
jg
es
push
xchg
add
add
mov
add
leave
xchg
imul
add
insl
popa
jns
bound
and
insb
add
ds
mov
jecxz
push
jl
addr16
lcall
add
adc
cmp
adc
aam
imul
add
add
dec
add
add
pop
add
add
add
push
je,pn
dec
out
adc
cmp
test
lret
xor
add
add
cmpb
and
aas
or
add
add
test
add
add
repnz
push
mov
dec
add
add
xchg
lcall
fbstp
pop
fdivs
push
adc
fstpl
cli
adc
jp
adc
add
popa
rorb
add
or
add
add
inc
ja
in
bound
repz
cwtl
xor
mov
add
add
out
insl
dec
push
sbb
aas
xchg
adc
push
inc
mov
adc
and
mov
dec
add
add
jl
jns
lock
ja
push
inc
inc
add
add
jbe
std
dec
add
fsub
sarl
and
inc
dec
das
aad
roll
les
inc
add
add
stos
out
dec
das
adcb
xchg
mov
out
lea
lcall
add
xor
aam
add
jnp
sahf
dec
mov
cmp
adcl
insb
add
add
and
add
add
sub
xor
das
je
xchg
pop
sub
daa
inc
add
imul
jmp
add
add
in
lods
shrl
ja
xlat
and
mov
add
mov
add
lods
xor
push
mov
pop
cs
aaa
test
ret
popa
cmp
icebp
inc
add
add
incb
pop
mov
push
fisubs
imul
in
into
push
lods
arpl
and
fimull
fldcw
aaa
lret
data16
pop
inc
repz
nop
xor
fdivrs
dec
add
add
mov
xlat
gs
or
add
add
mov
push
out
stos
sub
mov
popf
repnz
mov
sbbb
psadbw
dec
push
inc
and
add
add
shll
add
shlb
jns
ljmp
pop
pusha
add
add
cltd
subb
add
mov
add
mov
ficoms
clc
pop
xchg
shlb
pop
mov
addr16
mov
add
add
out
lea
ljmp
xor
mov
cld
das
leave
adc
daa
cmp
add
add
enter
jmp
cmp
mov
inc
inc
or
sbb
push
mov
fnstcw
mov
mov
cmpsb
mov
sub
leave
out
mov
fcos
xchg
add
add
add
push
xchg
mov
sub
leave
push
inc
lret
mov
xchg
loop
fisubrs
xor
sub
add
add
aaa
xor
lea
cli
imul
lods
xchg
js
test
add
add
test
fsubrp
ss
sub
pop
sub
add
add
pusha
add
add
xchg
loope
xchg
inc
std
and
in
jecxz
int3
and
aad
xchg
push
cmp
add
and
add
jo
push
fistl
add
js
and
add
add
add
add
nop
int
into
scas
dec
add
add
or
push
test
jnp
data16
xor
xchg
enter
pusha
add
pop
std
pusha
add
add
mov
pop
jb
lods
int3
inc
mov
clc
ud2
pop
popl
add
nop
jns,pt
insl
aam
add
pop
mov
mov
je
xor
pop
mov
andb
sub
mov
mov
inc
push
or
add
add
mov
sbb
pushf
ljmp
cs
adc
clc
sbb
in
mov
dec
add
cwtl
clc
cld
cmpsb
add
call
ret
cmpsl
ds
mov
test
add
es
add
add
loope
add
add
or
nop
sahf
cs
add
add
repz
cmp
pop
pushf
mov
arpl
inc
add
add
ficoms
pop
add
loop
sub
rorb
adc
in
jmp
xchg
jo
add
jno
pop
pop
sub
outsb
jno
sbb
push
cmp
inc
adc
loop
xor
loop
lcall
ret
cmp
mov
aaa
pop
jp
ljmp
jbe
add
add
scas
xor
add
cmp
xchg
xor
and
mov
mov
stos
or
add
add
bound
add
aam
add
add
and
mov
outsb
sub
mov
insl
jns
add
push
xlat
lods
mov
add
push
sti
inc
arpl
add
add
sbb
add
add
iret
test
fisubrl
loopne
es
add
mov
ret
push
pop
inc
fmull
add
add
js
fisttpl
lret
shlb
or
add
add
xchg
adc
add
add
add
testb
pop
pop
lret
dec
in
test
add
mul
test
mov
pusha
add
add
js
xor
dec
add
add
fucomip
xchg
mov
aam
iret
scas
ss
lock
jg
sbb
out
inc
pop
xchg
cmc
xor
jno
sbb
repz
fidivrs
xor
daa
or
out
in
cmp
sti
test
mov
sbb
and
add
add
notl
jl
fsub
sub
add
add
inc
add
add
jmp
add
mov
out
pop
jne
fsub
les
cmp
adc
jg
mov
add
inc
push
jg
jbe
jecxz
rorb
js
pop
outsl
rcrb
sarl
add
add
cwtl
ds
mov
mov
xor
into
test
add
add
xor
push
adc
pop
mov
xor
aam
pop
out
loop
loope
dec
jp
stc
pop
adc
jb
fwait
in
pop
or
add
add
xchg
sbb
fimuls
sub
mov
mov
add
mov
add
add
cmp
mov
add
add
mov
mov
sbb
add
lret
and
mov
std
mov
sbb
jo
cld
push
dec
cmp
add
or
mov
fsts
inc
jl
fndisi(8087
and
scas
sbb
mov
notb
dec
pop
aas
xor
xlat
scas
cmp
les
xlat
jae
add
add
in
and
jg
imull
add
add
loopne
sub
add
add
jle
data16
add
add
add
or
addr16
jno
jl
lods
jb
jmp
shl
in
adc
add
cmpsl
and
sub
or
add
add
push
mov
sbb
add
mov
inc
jbe
stos
sbb
mov
js
daa
stos
sbb
xchg
repnz
repnz
pop
imul
push
sub
sub
add
add
sbb
jmp
xor
hlt
pop
out
jmp
mov
or
add
add
sub
mov
jnp
add
add
test
mov
or
push
out
out
pop
jne
jo
mov
stos
fisttpl
lcall
xchg
xorb
mov
inc
leave
push
lock
pop
movsb
inc
mov
add
stos
inc
pusha
add
add
loope
or
iret
lock
add
test
in
test
add
add
outsl
call
enter
add
add
sbb
xchg
gs
dec
out
adc
aas
mov
add
push
das
xchg
add
add
add
mov
ja
or
add
mov
add
out
dec
add
pop
add
mov
or
add
add
add
push
or
mov
fwait
insb
add
add
cs
aad
loopne
jae
cltd
mov
call
cmp
sub
xchg
inc
xchg
out
stos
popa
fwait
sbb
jl
ss
xchg
adc
sbb
push
add
mov
cmp
pop
cs
popa
cmp
mov
pop
cld
fwait
inc
sub
stc
ss
cmpsb
and
mov
dec
add
add
shl
pop
add
add
add
dec
pop
cmp
dec
fidivl
divb
clc
mov
es
outsl
push
repnz
mov
or
dec
add
add
pop
in
sub
add
add
jmp
pusha
add
mov
dec
sub
mov
mov
rorb
or
add
add
push
fistl
mov
cmpsb
hlt
cwtl
push
cmp
outsl
fistpl
jmp
mov
sahf
mov
add
add
ja
sub
add
add
cmpsl
and
lea
idiv
dec
add
adc
xor
es
adc
in
inc
add
push
inc
add
mov
xor
mov
call
aam
insl
mov
add
xor
mov
sub
mov
inc
into
pop
pushf
pushf
mov
mov
add
add
imull
outsl
mov
outsb
cmp
repz
push
mov
out
mov
mov
add
out
cmp
pop
add
out
adc
lret
aam
inc
jb
xchg
movsl
mov
rolb
add
add
sub
mov
loopne
or
push
xchg
fidivs
shl
mov
add
add
adc
sbb
pop
sarl
jmp
cmpsb
xchg
mov
adc
add
add
imul
shlb
mov
fbld
mov
add
mov
bound
addr16
adc
popa
mov
loope
jl
idivb
add
test
insb
add
andl
mov
iret
fdivl
jns
das
mulb
lahf
daa
mov
jecxz
and
fldl
scas
daa
scas
fwait
cmc
xchg
push
repz
testl
mov
fildll
add
lcall
push
shrb
cmpsl
and
and
add
add
mov
cs
xor
add
pop
xlat
hlt
mov
add
repnz
loopne
cmp
push
popf
jge
cmp
push
es
sarl
call
add
push
mov
or
add
add
cmp
add
add
xor
sub
stos
push
aaa
jne
add
add
inc
pop
ret
pop
mov
cmp
cli
mov
push
xchg
sbb
mov
push
inc
mov
inc
lock
cli
jecxz
mov
xor
in
xor
mov
cltd
xchg
cmp
cmp
fistl
add
inc
mov
test
out
cmpsl
dec
mov
out
clc
jnp
push
inc
inc
jmp
test
lock
sti
xor
xor
in
clc
mov
inc
insb
add
lds
cmp
ret
adc
push
cs
inc
mov
jp
sbb
mov
in
clc
in
pop
mov
mov
les
add
pushw
mov
cmpsl
daa
sbb
pop
mov
sub
dec
out
add
mov
jl
or
outsl
jbe
inc
add
clc
xor
add
mov
loope
cmpsb
sbb
mov
mov
or
add
add
sbb
adc
push
fldt
jp
popa
push
cmpsl
mov
scas
jle
scas
jns
vphadduwq
add
jge
and
mov
push
flds
fstl
add
add
jl
and
mov
push
loope
cs
in
xchg
and
cmpl
add
imul
jge
push
push
jl
clc
add
mov
pop
imull
add
jne
lcall
mov
sbb
push
or
add
loope
outsl
cmp
add
add
pop
pop
add
aas
jl
mov
std
push
ret
add
mov
decl
out
aas
mov
incb
add
mov
push
std
adc
adc
add
add
dec
add
jae
push
and
icebp
leave
popa
call
pop
into
inc
repnz
inc
aam
mov
iret
rcrb
push
sarb
out
xlat
pop
orl
jg
lcall
mov
cmc
cmp
cmp
add
mov
jle
or
mov
mov
sbb
movsl
lea
sub
add
add
subb
mov
and
add
cmpb
in
lock
aam
pop
dec
sbbb
xor
js
add
and
mov
add
add
lods
scas
fmull
arpl
or
mov
jno
cmp
mov
push
shl
pusha
add
add
jno
notl
shr
sbb
pop
mov
sub
add
add
xor
pop
jae
into
xor
sub
mov
inc
add
add
xor
jl
xchg
mov
jmp
mov
rcrl
jle
mov
popf
psrld
popa
xlat
outsl
ja
je
shll
add
addb
add
add
push
sub
add
add
mov
test
add
add
push
sbbl
add
add
add
mov
insb
add
inc
hlt
inc
add
add
mov
rolb
sbb
mov
cmc
sbb
push
stc
test
push
cltd
daa
shl
andb
add
rclb
add
dec
add
add
adc
add
add
and
imul
jne
cwtl
xor
and
mov
xlat
jne
sti
cmp
pop
cwtl
cld
add
pop
add
add
repnz
fists
mov
out
aas
inc
hlt
inc
xchg
mov
repz
mov
add
movsl
push
and
arpl
sbbb
mov
fsubs
or
sbb
sbb
out
add
and
add
add
xor
mov
into
add
push
lea
add
add
mov
add
scas
adc
in
ret
push
mov
ljmp
test
or
mov
adc
xchg
add
add
add
add
add
xor
cmpsb
xchg
loope
cs
or
shll
popf
cmpsb
push
cli
daa
mov
or
mov
and
fnsave
clc
icebp
adc
jl
sbbb
ds
lds
jmp
add
dec
add
add
push
not
loope
ficompl
lods
adc
pop
jno
dec
sub
add
add
je
hlt
jbe
bound
enter
repz
frstor
arpl
or
lahf
push
adc
dec
add
ret
lods
es
cmp
dec
add
pop
and
sbb
jae
lcall
ljmp
out
mov
mov
sahf
mov
xchg
cmp
js
and
mov
xchg
je
hlt
add
add
pop
pop
cmpsb
add
sub
add
mov
mov
shll
mov
cmp
mov
add
movb
mov
outsl
pop
and
jl
and
mov
mov
sar
movsb
mov
in
mov
add
add
xchg
ss
lods
push
imul
xchg
ret
jp
add
add
push
cmp
icebp
mov
hlt
cwtl
and
and
add
add
xchg
adc
add
push
test
dec
cs
insb
add
mull
jae
dec
add
mov
dec
gs
dec
int
add
pusha
add
add
xchg
out
mov
jns
xor
add
add
aam
add
arpl
ljmp
adc
daa
xchg
mov
shl
sub
inc
pop
and
add
sahf
inc
add
mov
add
add
lahf
xor
add
jecxz
lock
shr
or
add
add
push
sbb
out
ja
jne
and
test
std
shrb
dec
add
out
aam
pop
xor
dec
add
mov
sub
sbb
and
add
add
inc
pop
mov
test
cli
out
out
popa
adc
aas
mov
neg
add
add
cltd
jb
sti
call
add
and
mov
xchg
aad
jne
dec
add
xor
adc
cmc
stc
xor
adc
mov
add
add
xchg
icebp
pop
mov
fisttps
add
xchg
cltd
mov
cmpsb
mov
mov
inc
insb
add
fwait
mov
xor
sbb
imul
mov
and
outsl
mov
xor
movb
dec
add
and
xor
add
sbb
imul
push
pop
stos
rorl
loopne
testb
xor
mov
pop
in
xchg
test
cmc
mov
xor
pop
shlb
or
adc
mov
rorb
xchg
fistpll
mov
pushf
in
negl
shl
adc
mov
cltd
xchg
neg
dec
add
add
add
mov
adc
mov
std
sub
push
scas
mov
imul
call
fwait
add
inc
add
add
add
sub
mov
fcoml
push
pop
roll
aam
lret
add
push
insl
push
inc
and
add
add
xor
mov
sbb
fucomip
xor
seta
sbb
add
pop
outsl
mov
add
mov
mov
rcr
ss
sbb
stc
orb
std
imul
dec
gs
rorl
stc
or
lock
lods
bound
cli
stos
cltd
xchg
ds
popa
repz
mov
add
add
add
ficoml
movsl
lcall
jbe
cld
int
xlat
mov
add
loopne
adc
dec
add
add
pop
sti
mov
sub
add
adc
and
mov
pop
xchg
stos
fnstenv
mov
scas
movsb
mov
mov
popa
dec
add
xchg
arpl
xor
movsl
dec
and
mov
add
movsb
push
adc
sbb
movsl
adc
imulb
add
add
inc
add
lret
shlb
add
add
add
xor
mov
adc
push
lret
outsl
pusha
add
add
shll
dec
cmp
punpckhwd
xor
test
popa
sbb
fstps
movl
je
and
mov
adc
add
add
mov
mov
cmpsb
outsb
js
mov
mov
add
add
movsl
xor
sbb
add
push
imul
jle
push
psubsw
add
mov
push
shrl
inc
fwait
mov
mov
imulb
add
pushl
push
loop
je
fists
mov
cmp
iret
adc
scas
push
outsl
inc
xor
add
js
pop
imul
cmpsl
loop
out
popf
xor
adc
hlt
into
xor
add
add
icebp
pop
sub
mov
inc
add
mov
xchg
outsl
les
adc
jmp
adc
xor
add
mov
push
pop
sbb
addb
scas
adc
mov
imul
movsb
add
mov
adc
pop
xchg
fimuls
mov
repz
jg
mov
outsl
pushf
and
add
add
in
or
gs
add
mov
push
mov
sbb
sti
popf
mov
int3
sub
cwtl
mov
and
sbb
add
xchg
cmp
loop
add
cmp
popf
sub
adc
cmc
int
fstl
pop
outsl
cli
or
fisubrl
push
aas
mov
add
add
inc
rorb
pop
sbb
ljmp
dec
push
mov
mov
mov
int
mov
pusha
add
add
pop
adc
int3
out
mov
sub
movsb
push
repz
pop
mov
rorl
dec
lods
sub
fnclex
and
enter
xor
add
adc
jb
andl
movsl
bound
ds
pusha
add
add
je
call
pop
adc
data16
pop
inc
add
fwait
mov
and
fnstenv
outsw
dec
mov
xor
inc
aaa
icebp
xor
dec
add
add
xchg
inc
xor
dec
fnstcw
pusha
add
add
fdivp
lock
decb
and
stos
aaa
js
fists
add
sub
mov
mov
mov
out
js
mov
xor
lds
add
mov
xor
dec
sbb
gs
dec
mov
and
push
xchg
jbe
cmp
or
lret
bound
push
mov
add
add
mov
add
sub
or
or
xor
mov
int
push
sub
out
xchg
adc
mov
cmp
movsb
test
pop
cmpsb
lods
gs
add
add
add
xor
mov
add
add
push
mov
lods
mov
out
xor
ds
das
xchg
das
mov
or
movsb
in
lock
push
pop
xchg
mov
sub
add
add
loope
rclb
add
in
xor
pushf
mov
fldt
lds
xchg
mov
add
add
or
loope
jo
icebp
stos
cli
jge
xchg
shlb
mov
hlt
or
rcll
lcall
push
mov
lods
in
dec
add
shlb
ret
jbe
cmpsl
scas
or
add
add
mov
pop
inc
add
pop
push
push
cmp
pop
mov
inc
lods
pop
add
aad
cmpsb
out
inc
lret
mov
add
add
pop
dec
push
fdivrl
pop
pop
inc
add
add
jp
in
sbb
in
stos
xchg
icebp
sarl
xor
sub
add
dec
fstl
or
add
add
add
mov
sub
imul
pop
test
je
jns
add
add
cmp
or
jne
je
xor
add
add
xorb
add
std
dec
nop
xchg
in
xorb
mov
mov
scas
ret
xchg
rcrb
sub
mov
lds
fdivrl
lock
outsl
adc
jne
loopne
sub
lea
ret
fnstenv
add
add
lret
xor
sub
xlat
in
mov
mov
lcall
sahf
jl
xor
bound
or
gs
pushf
testb
push
inc
add
add
js
xchg
pop
jne
add
clc
loopne
outsl
scas
pop
sarb
mov
add
add
scas
fdivrs
push
sar
out
nop
pop
add
mov
adc
cmp
stos
test
and
lds
add
mov
scas
xor
push
mov
or
dec
adc
xchg
cs
fst
and
add
pushl
cmpsb
push
into
scas
cmpsl
xor
add
test
inc
bound
cmp
mov
cmpl
clc
les
sub
and
int3
cs
movsb
out
sbb
sbb
call
mov
pop
imul
faddl
fsub
repnz
add
add
dec
movmskps
dec
push
rcr
flds
add
xchg
jns
stos
adc
add
sub
scas
les
add
sub
add
cmpsb
dec
cwtl
inc
lret
adc
sub
add
add
aas
push
add
repnz
insb
add
sbb
cmp
adc
test
iret
dec
push
fucomip
les
imul
jmp
jmp
dec
jns,pn
lods
push
addr16
add
inc
pop
data16
jmp
add
add
icebp
cld
fidivs
mulb
scas
shlb
mov
xchg
into
addr16
add
add
add
fisttps
orb
push
dec
rcl
sahf
mov
mov
popf
sub
mov
movl
mov
add
add
lret
push
in
js
mov
mov
sarl
out
dec
jmp
or
ficoml
into
or
jnp
dec
mov
fisubl
daa
jge
push
ds
mov
lock
cmp
cltd
subb
add
add
bound
xor
sub
jo
dec
int
sub
add
add
jl
loopne
xor
cmp
add
or
mov
inc
outsl
ds
in
cmpsb
push
xor
dec
nop
add
inc
ficomps
fldenv
add
add
and
out
adc
jle
xchg
or
push
inc
jle
add
cli
xor
insb
add
add
sub
mov
jbe
add
lret
adc
add
lahf
jb
cltd
daa
loop
insb
add
js
xchg
inc
lock
dec
hlt
jnp
jp
stc
in
sub
data16
xchg
mov
sub
add
add
or
xor
push
and
add
add
pop
add
jne
inc
inc
mov
mov
and
add
lds
in
inc
push
xchg
jmp
setb
add
add
or
pusha
add
inc
cltd
dec
jb
xchg
aas
push
pavgw
push
add
add
add
inc
add
in
jo
gs
push
sub
add
mov
inc
dec
ret
cmc
mov
add
add
add
popa
ds
add
bnd
fdivrs
pop
aaa
pop
and
sub
out
jmp
jp
xor
sarl
enter
xchg
rcrb
xchg
arpl
add
loope
mov
add
icebp
or
sbb
sbb
std
xchg
int
ss
sub
pusha
add
add
test
xchg
push
cmc
jge
fmull
xlat
sarl
add
add
sub
push
repnz
test
rcrb
lock
xchg
adc
fists
add
in
int3
sub
lahf
imul
fwait
adc
and
cmp
and
lret
or
test
xchg
push
xor
dec
mov
add
jmp
jmp
add
push
mov
mov
xchg
es
into
cld
ds
or
inc
lcall
jnp
push
mov
cmp
sbb
mov
and
add
add
mov
lods
push
inc
add
add
add
test
gs
nop
add
cmp
push
test
gs
cli
jmp
add
sti
push
shlb
in
mov
repz
mov
aam
pusha
add
add
movsb
inc
test
mov
xor
xchg
cs
add
add
sub
add
add
xlat
and
add
add
add
xchg
add
add
add
mov
sahf
andb
add
in
aaa
or
xor
sub
in
insb
add
sub
add
add
xchg
in
jle
mov
nop
sbb
jle
mov
add
xchg
jne
jecxz
dec
xchg
adc
jl
or
pop
dec
cwtl
sar
scas
sub
mov
jp
lods
adc
cmp
rclb
lods
sbb
stc
add
lcall
fisubrs
add
add
mov
sete
ss
mov
mov
and
add
add
pop
arpl
dec
add
cwtl
fstpt
andb
mov
pop
push
adc
jnp
mov
call
nop
movsl
sbb
mov
add
mov
cmp
imul
int3
out
pop
mov
in
adc
xchg
sbb
and
add
add
cmp
gs
lock
sbb
or
into
jle
stos
ret
mov
jne
shll
outsl
out
cli
mov
xor
mov
xchg
xor
inc
and
rcrb
gs
push
jns
pop
popf
and
je
push
ds
aad
dec
call
add
add
xchg
rolb
add
loopne
dec
cld
insl
dec
sahf
out
xorl
mov
js
push
sub
add
mov
inc
mov
aas
rolb
or
add
add
in
pop
ret
lds
mov
push
sti
arpl
out
rclb
or
popf
jge
sahf
pop
mov
add
add
or
mov
jp
out
lcall
in
loopne,pn
shlb
inc
mov
and
push
pop
pushf
jp
leave
push
aam
outsb
and
mov
mov
mov
movsl
jmp
mov
cli
mov
add
add
add
mov
dec
mov
sub
mov
add
in
jb
xor
add
add
test
jne
mov
testb
add
imul
inc
add
add
or
xlat
add
cmpsb
stos
leave
fpatan
loope
cs
and
mov
add
add
push
mov
rol
mov
xchg
push
mov
cmpsb
mov
xchg
cmp
fisubl
pcmpgtb
add
add
jge
cmpsl
and
dec
or
shll
fcmovu
xor
jmp
add
add
pop
dec
add
add
in
daa
adc
repz
ja
or
inc
in
test
and
inc
add
add
ret
inc
push
push
inc
xor
repz
pop
mov
cld
cmp
sbbb
xchg
bound
add
add
jecxz
bound
loope
scas
and
add
add
jmp
ds
mov
cmp
enter
add
shlb
cs
cmp
inc
add
add
arpl
add
rcll
xchg
dec
movsl
lods
popf
aam
push
aad
mov
add
add
add
jb
push
lea
push
sarb
sub
mov
stos
inc
add
sub
mov
mov
add
imulb
or
sub
and
add
pop
and
out
add
mov
dec
add
add
pop
fistps
push
mov
push
pushl
dec
inc
in
add
vsubpd
pop
mov
cmp
pop
fsubs
add
in
cltd
dec
cmp
adc
shll
pop
push
pop
js
fnstenv
sub
mov
mov
add
outsb
in
rorb
adc
add
add
dec
add
add
hlt
repnz
and
xchg
cld
out
inc
add
add
add
add
push
repz
lods
cmp
out
cmp
or
add
add
or
cs
ud1
xchg
add
clc
dec
sbb
popf
pop
add
add
add
push
xchg
mov
or
add
add
enter
jno
inc
inc
test
pop
cs
flds
mov
sti
fsubl
movsl
test
ds
iret
sbb
sbb
and
add
icebp
loopne
mov
cmp
add
xchg
mov
and
mov
add
add
xchg
iret
fcompl
mov
subb
cs
pop
inc
inc
xchg
mov
sarl
xor
aaa
xor
xor
out
sub
repz
js
mov
push
or
lock
in
or
xchg
mov
cmp
xchg
imul
add
test
mov
andl
paddd
in
mov
jecxz
mov
or
xor
mov
xor
popl
ret
push
lods
jns
fadds
add
mov
cmp
out
lahf
fwait
cmc
cs
add
addr16
shrb
outsb
nop
arpl
mov
mov
jge
bound
push
mov
inc
sbb
jge
mov
pushf
jg
lods
insb
add
add
push
or
mov
mov
mov
adc
add
add
lds
scas
or
outsb
inc
add
add
dec
gs
add
add
add
shll
sub
rol
and
add
add
push
rorl
add
lcall
add
add
pop
lds
mov
add
das
pushfw
cmp
dec
test
cmpb
fucomip
fisubrl
push
mov
xor
jae
sub
mov
adc
cwtl
adc
stos
fcomip
mov
sub
test
fwait
icebp
int3
pop
sbbl
add
jl
in
sbb
into
add
add
add
sub
mov
sub
cwtl
sbb
add
add
add
jbe
lahf
insl
add
mov
mov
loopne
lret
mov
into
lods
mov
jp
inc
loop
or
xchg
cmpsl
cmp
and
mov
sub
stos
mov
push
add
add
add
cmp
sahf
sub
in
add
mov
jecxz
dec
popa
movsl
aad
and
mov
add
add
xchg
mov
jbe
mov
add
and
xor
add
mov
adc
or
xchg
cli
movsl
cmp
xchg
pushf
lods
mov
mov
shrb
pusha
add
add
adc
mov
mov
and
add
add
push
sbb
stc
inc
or
pushf
pop
pushf
ret
jle
mov
lock
add
iret
and
inc
jecxz
and
pusha
add
jl
bound
stos
jno
sub
add
add
mov
into
mov
cwtl
dec
add
add
push
subb
dec
add
out
sub
sub
mov
lock
dec
rcr
xor
shll
sbbl
cld
add
add
mov
add
push
cmpsb
out
pop
mov
mov
add
add
cmp
cmp
aam
mov
push
xor
shlb
push
stos
sub
sbb
mov
stc
sbb
push
jmp
gs
mov
mov
sbb
leave
fwait
arpl
inc
lea
in
scas
pushf
inc
xchg
je
data16
gs
pop
lret
sub
add
mov
add
pop
fdivrl
imul
xchg
cmp
sbb
mov
int
insb
add
add
pop
js
outsb
shlb
cmp
xchg
stc
out
or
add
add
imul
mov
add
add
test
push
mov
add
add
dec
mov
push
add
jle
ljmp
mov
push
out
nop
lahf
adc
xlat
inc
sti
fsub
sbb
mov
arpl
test
outsb
nop
xchg
add
add
in
out
or
mov
pop
mov
sub
add
add
cmpsl
pop
imul
xor
mov
cmp
add
add
sub
stos
cmpsb
pop
shlb
xchg
mov
lcall
ret
inc
loopne
cs
add
add
add
sahf
int
dec
arpl
xor
push
xchg
dec
push
push
xchg
sbb
cmp
sbb
add
pop
or
cmpsb
das
cld
les
outsl
push
lahf
mov
lods
adcb
test
xchg
in
push
xor
cmpsl
cmpsb
jmp
mov
inc
insl
andb
sub
add
add
xor
or
shrl
pop
sbb
aad
adc
inc
push
shlb
cli
sbb
jb
adc
mov
lds
add
sub
inc
and
pop
lock
mov
xchg
xchg
mov
clc
mov
add
add
cmp
and
and
xchg
in
dec
std
imul
add
lahf
pusha
add
push
fmulp
test
add
mov
mov
xchg
and
add
add
mov
xor
sbb
cmpsb
enter
adc
data16
mov
data16
add
add
shrw
cld
push
sub
out
sub
mov
cmpl
cmp
xchg
inc
dec
outsl
popf
mov
negb
ljmp
mov
xor
pop
or
add
add
xchg
push
xor
push
pop
inc
add
add
add
sub
add
push
and
clc
jl
icebp
push
pop
loop
xchg
push
es
jl
test
pshufw
add
jl
jnp
insl
adc
pop
mov
mov
out
mov
mov
dec
add
lods
cmpsb
or
add
add
test
push
xorb
xor
scas
push
lock
popf
mov
mov
or
add
rorl
pop
cltd
dec
add
add
add
mov
test
outsb
je
add
add
or
pop
push
mov
pop
es
xchg
stos
arpl
scas
push
shll
mov
push
loop
stos
fmulp
inc
add
sub
aad
ret
js
xor
test
popa
das
inc
ds
inc
repz
cmpsl
push
or
xor
add
mov
aas
into
adc
mov
jmp
es
std
or
scas
mov
push
inc
std
lods
nop
outsl
jg
pop
shrl
sub
push
imul
cld
add
add
fstpt
xor
in
mov
push
fcomps
mov
mov
jbe
nop
ss
outsl
xchg
aam
mov
adc
aad
out
mov
leave
loop
adc
stc
mov
inc
push
lret
int3
cli
dec
adc
fsubs
add
add
mov
lock
in
lcall
push
mov
lea
sbb
add
add
loopne
sahf
xchg
iret
pop
add
mov
test
push
test
dec
ds
negl
push
ror
ljmp
add
add
and
add
add
sbb
nop
mov
sub
mov
sub
scas
mov
inc
adc
or
cmp
leave
call
add
pop
jle
pop
fdivrp
mov
nop
iret
xor
add
in
push
insb
add
xchg
enter
adc
cmpsb
push
mov
push
mov
dec
aad
enter
sbb
xchg
clc
in
adc
push
stc
dec
data16
pop
sub
add
add
fdiv
lock
fists
jg
jne
stos
cmpb
dec
add
add
add
add
add
add
add
lock
mov
add
aas
insb
add
add
add
call
mov
add
add
fsubs
or
add
orl
ja
rcr
push
or
add
inc
push
add
shll
add
notb
cmovns
jbe
hlt
add
enter
sub
inc
imul
pop
add
outsb
je
shr
cmpsl
mov
in
aam
out
cmp
mov
into
cmp
sub
mov
lea
cs
mov
dec
loop
movsl
pop
dec
decl
jnp
xchg
pushf
aad
xor
ljmp
mov
dec
jbe
add
add
add
add
mov
add
mov
jecxz
fistpll
jne
icebp
loope
xchg
fisubrl
pop
mov
hlt
jp
xchg
into
push
xchg
push
lahf
push
lock
add
add
dec
add
je
or
add
add
add
add
test
ror
hlt
pop
stc
mov
sbb
int3
jno
sub
and
mov
pop
clc
xchg
cmpxchg
or
jp
mov
mov
inc
jns
scas
mov
sarl
ljmp
add
add
mov
movsl
pop
dec
add
pop
loop
fwait
repnz
cmpsb
mov
cmp
add
daa
fisubl
lods
repz
pop
movsl
sub
aaa
push
lods
pop
lds
adc
jecxz
loope
and
add
add
iret
lods
sub
xor
loope
add
add
xchg
mov
lods
jnp
iret
cmp
xchg
mov
push
das
lahf
stos
add
inc
or
ljmp
cmp
lods
ljmp
mov
add
jp
add
add
hlt
mov
add
mov
add
xchg
jns
sbb
xor
dec
gs
mov
inc
or
mov
in
add
ljmp
mov
adc
mov
push
addr16
add
setne
movsl
sub
and
sbbl
ljmp
popf
adc
mov
add
add
cmc
lea
adc
xor
add
add
js
shr
rcl
je
sub
sahf
jns
mov
jns
inc
int3
pushf
add
add
aaa
dec
add
add
jp
ss
add
icebp
iret
inc
das
or
decb
decb
mov
add
dec
sub
mov
xchg
sbb
scas
aam
jne
adc
sbb
int
add
jg
aas
daa
lret
xor
xor
inc
add
dec
sbb
loop
pop
mov
cld
cmp
jge
add
add
add
add
add
jno
sub
add
pop
clc
repnz
push
ja
sbb
sbb
jnp
inc
add
add
add
jmp
and
ja
xor
inc
test
push
out
jle
rclb
dec
scas
stos
jecxz
adc
push
sbb
mov
fildll
in
push
cmp
sub
out
data16
dec
jle
xchg
jmp
inc
push
mov
jge
jae
pushl
push
jae
out
mov
in
push
sarl
rsqrtps
add
lcall
imul
and
pop
pop
pop
add
inc
mov
push
adc
fsubl
dec
stc
pop
iret
into
icebp
lds
mov
xor
lea
xor
pop
push
test
fldenv
sbbl
leave
repnz
cmp
std
push
dec
add
pop
push
idivl
aaa
les
test
push
hlt
icebp
js
lahf
pusha
add
faddl
and
add
add
inc
cld
les
arpl
scas
jo
shl
les
xor
daa
repnz
mov
xchg
add
imul
les
dec
filds
add
add
xlat
sub
add
add
sbb
cvtdq2ps
mov
push
dec
sub
cmc
mov
add
mov
rcrb
cmc
outsb
leave
shlb
jnp
mov
xchg
add
add
inc
add
add
xor
mov
add
add
cld
fcoml
add
add
mov
push
mov
nop
inc
mov
sbb
sbb
add
mov
cmp
out
push
add
add
mov
mov
mov
mov
nop
adc
sub
mov
and
add
add
add
in
push
push
and
or
mov
fldl
cmp
sbb
in
push
sti
dec
add
pop
cmp
ret
dec
mov
imul
outsl
mov
add
add
roll
add
add
mov
jno
test
add
stc
sbb
iret
push
mov
gs
add
add
inc
add
repnz
pop
fucomip
dec
out
and
add
add
xor
add
mov
adc
jnp
lds
xchg
cmp
xchg
loope
out
ljmp
add
adc
add
add
scas
fcompl
lret
ret
jmp
push
xor
add
add
sti
jo
leave
cmpl
add
add
add
fisubrs
adc
enter
cmp
scas
inc
movsl
cli
pop
xor
or
bound
add
sbb
cmp
add
cmp
add
mov
add
imul
pop
cmc
enter
mov
test
arpl
mov
in
in
dec
sahf
cmpsb
mov
add
xchg
shrl
mov
fdivp
jge
loope
lds
cmp
or
mov
aas
or
jo
repz
in
mov
stc
mov
sub
fistps
ja
jl
in
jmp
adc
cli
and
push
inc
mov
sub
or
jg
sub
jno
push
bndstx
sub
aam
sbb
or
outsb
rcrl
incl
add
push
add
mov
jne
mov
punpcklwd
jge
sahf
push
arpl
es
daa
dec
add
add
jg
cs
jmp
rcr
ja
push
sbb
stos
mov
add
add
popa
jle
ja
nop
and
frstor
lods
ret
lahf
inc
pop
outsl
xor
jne
push
xor
add
add
mov
in
push
cld
and
add
add
fwait
mov
pop
ljmp
jmp
daa
ret
xchg
cmp
add
or
cli
les
mov
add
add
add
add
fidivrl
test
mov
adc
cld
mull
push
in
movb
jp
out
jb
fstl
test
sbb
pop
dec
inc
js
pop
xor
mov
lea
js
jae
sti
cwtl
shrb
push
bound
in
jecxz
jb
pop
sbb
sub
cmp
xchg
bound
call
ljmp
xor
movsb
inc
in
stc
insb
add
inc
lea
add
add
ret
adc
push
mov
jp
lcall
ljmp
xchg
push
mov
arpl
add
cltd
popa
fdivs
adc
lret
add
add
push
ret
adc
fcomp
stc
mov
or
dec
int3
and
mov
add
cld
push
jge
cmp
cmp
jge
out
addr16
loopne
add
add
popl
push
xchg
dec
insl
xchg
sub
mov
cmp
inc
add
jle
sbb
jecxz
out
ss
outsb
mov
mov
scas
popf
xchg
out
aam
aam
cmp
mov
add
loop
jae
or
and
or
add
add
sbb
lcall
add
adc
mov
int3
mov
add
lret
dec
add
add
hlt
out
sub
mov
lds
pop
stc
hlt
aas
jae
adcl
xchg
mov
dec
inc
shrl
arpl
push
hlt
lret
dec
jno
push
addr16
push
or
add
push
mov
add
insb
add
fisubl
movsl
out
cltd
es
add
add
push
and
jmp
adc
lcall
jo
iret
add
fnstcw
mov
lods
dec
mov
mov
ret
adc
cmpsb
xchg
nop
rcrl
mov
dec
out
loopne
jns
inc
mov
xchg
incb
add
in
addr16
pop
fwait
shrb
insl
xorl
add
ljmp
jmp
test
add
dec
add
xchg
jnp
sbbb
je
push
and
add
add
xchg
adc
das
sbb
add
add
ja
fst
xchg
mov
pop
add
mov
daa
daa
mov
push
call
mov
sub
mov
lea
dec
filds
add
add
fdiv
inc
xchg
ss
lret
and
arpl
mov
fsub
loopne
jnp
mov
inc
add
add
inc
add
mov
xlat
mov
add
scas
data16
adc
sub
add
pusha
add
add
scas
xchg
std
es
rcrb
arpl
testl
scas
test
es
loopne
xor
lods
pop
jnp
dec
push
or
fbld
lods
pop
xchg
scas
add
add
push
inc
xchg
cs
lcall
dec
sub
sbbb
mov
inc
dec
loope
sti
jg
mov
mov
imul
jo,pn
ret
add
decl
xchg
dec
pop
jg
lret
dec
out
into
sub
add
add
js
xor
pushf
and
pop
lcall
add
add
popf
mov
mov
pushf
mov
mov
jecxz
add
add
add
add
add
mov
xchg
dec
lods
nop
push
mov
xchg
mov
xor
xchg
out
js
and
mov
mov
pop
stc
sub
aas
mov
in
test
lahf
cmp
add
add
in
pop
and
mov
push
mov
popa
add
mov
add
add
and
mov
bound
push
sbb
sub
mov
shll
stos
push
aaa
sbb
xor
out
jg
test
dec
out
pop
ds
add
add
dec
and
push
movsl
icebp
das
mov
mov
std
xlat
int
xor
bound
xor
add
loopne
add
add
leave
shll
jnp
xor
jmp
and
mov
out
sub
push
shlb
fld
or
add
add
dec
add
sub
add
push
sti
xchg
les
and
mov
and
mov
sbb
add
push
cmp
and
adc
and
jno
mov
mov
add
xchg
popf
rorl
adc
sbb
pop
in
cmpsl
mov
lcall
in
add
mov
in
cld
mov
cmp
inc
pop
push
imul
add
sti
inc
pushf
stos
jle
sbb
jno
and
pop
xadd
add
or
cmp
imulb
add
add
add
add
mov
push
jae
add
add
rcl
adc
adc
fldenv
pop
nop
jp
in
insl
pop
daa
dec
rcl
sub
add
add
sub
mov
add
popf
mov
pop
mov
jnp
adc
cmpsb
out
dec
cmp
or
add
add
jg
out
mov
mov
sahf
test
cld
imul
add
add
jno
sbb
add
add
jno
sbb
sbb
adcl
in
outsb
or
mov
or
mov
dec
add
clc
xchg
jne
sub
les
dec
add
add
out
xchg
daa
cltd
xchg
testl
adc
cmc
test
add
add
add
cwtl
cmp
lds
addr16
adc
add
mov
out
inc
add
mov
out
mov
mov
cwtl
mov
jno
mov
cmp
outsb
pop
adc
aaa
xchg
cmp
xchg
pop
int3
adc
jecxz
add
fucompp
loop
bound
add
add
sbb
sbb
pop
mov
jae
sub
gs
adc
outsb
subps
mov
pop
sub
popf
jle
je
xchg
adc
inc
sahf
mov
inc
add
add
sub
mov
into
aam
jbe
cwtl
popa
loopne
sub
mov
mov
stos
xchg
pop
inc
add
add
xor
xor
mov
rol
idivl
push
rcrl
jno
sbb
pop
fsubrs
add
stos
mov
repnz
test
add
push
sbb
inc
add
add
push
jne
mov
jo
repz
pop
pop
mov
push
outsb
xchg
lods
add
int3
cwtl
cwtl
push
inc
and
add
add
or
add
add
mov
add
add
fldenv
pop
dec
or
dec
xor
add
add
mov
and
push
out
into
xchg
dec
jp
adc
data16
dec
mov
mov
add
add
cmp
call
mov
stos
xorl
out
dec
cmp
outsb
jns
add
add
jle
add
mov
xor
add
add
fsts
pushf
out
out
xor
jns
jle
fisttpl
pop
adc
inc
add
add
jnp
dec
adc
or
add
add
lods
ljmp
clc
cmp
hlt
aaa
pop
and
add
add
push
pop
dec
add
add
cmp
add
mov
mov
nop
jbe
sub
mov
mov
aam
fsubr
cmpsb
push
popf
cwtl
in
sahf
stos
dec
gs
pop
inc
ljmp
add
in
and
add
add
lea
add
add
fbstp
adc
mov
ljmp
icebp
xor
push
xchg
movsb
pushf
out
xor
fistl
and
push
push
in
jp
mov
cwtl
mov
xchg
insb
add
add
fadds
lds
mov
sub
sub
push
clc
jmp
test
add
add
or
mov
lret
cmp
in
sub
mov
add
add
aas
call
add
jb
fwait
sub
add
dec
in
ja
inc
mov
add
inc
movsl
sub
add
add
mov
adcl
add
loop
and
leave
daa
fcmovnb
mov
add
mov
add
adc
aaa
subb
add
sub
add
add
push
mov
pop
divl
add
add
push
mov
div
test
xchg
cmp
lds
mov
out
mov
loope
mov
add
xchg
fidivl
ror
fldl
add
add
sub
hlt
or
dec
outsl
sbb
in
test
or
add
add
mov
mov
rol
xchg
lahf
inc
add
add
lds
push
popf
sbb
outsl
fmuls
mov
inc
scas
sbb
xchg
out
or
bound
add
add
add
mov
push
mov
pop
mov
push
add
add
add
sub
fisttps
mov
mov
lret
adc
js
dec
add
add
add
stc
xchg
sbb
insb
add
and
add
mov
jne
dec
mov
inc
mov
icebp
insl
mov
out
insb
add
cmp
bnd
call
scas
xor
lods
out
ror
inc
into
lods
inc
sbb
mov
jbe
sbb
mov
outsb
dec
add
add
repz
pop
sbb
daa
lcall
or
add
add
stc
nop
cmc
sub
add
add
shrl
insl
or
xchg
mov
and
daa
insl
pop
add
add
add
add
sub
push
pop
mov
inc
jo
jbe
inc
insb
add
mov
loop
ret
mov
mov
out
fwait
cmc
fidivs
pop
jbe
add
push
sti
iret
or
mov
mov
add
mov
dec
mulb
add
add
sub
aad
loopne
scas
lock
sbb
out
mov
sti
dec
add
xor
imul
add
add
add
add
sub
add
add
inc
aam
pop
jge
enter
adc
sbb
outsb
dec
jle
sarb
bound
pop
dec
stc
dec
add
add
mov
mov
lcall
enter
add
mov
add
shll
jecxz
jl
iret
sti
pop
ljmp
add
ds
into
rcr
insl
or
lods
outsb
faddp
mov
mov
cmc
jns
inc
scas
mov
add
shll
mov
add
add
add
xchg
loopne
test
mov
mov
adc
std
xor
inc
dec
mov
test
js
subb
lock
sbb
push
lods
push
inc
add
mov
add
add
add
add
adc
add
add
pop
pop
cwtl
cmp
add
add
and
cmp
mov
add
xchg
push
or
sti
enter
bound
dec
jb
arpl
mov
out
adc
mov
push
movsl
into
mov
popa
xor
push
push
push
pop
mov
cmp
lcall
lret
xchg
popa
repz
cwtl
and
dec
add
add
movsb
pusha
add
lahf
out
mov
push
jecxz
sti
in
add
add
add
cmp
xchg
xchg
inc
sti
cmp
ss
sbb
add
dec
shl
pop
cmp
stos
pop
lcall
jmp
jns
add
add
sbb
push
jle
aaa
and
mov
add
out
push
fsubp
pop
loope
fiadds
add
enter
add
push
and
mov
mov
cmp
in
inc
push
call
mov
out
dec
imul
jbe
mov
ds
fnop
mov
lahf
into
repnz
dec
stos
push
lahf
and
dec
dec
add
sti
aas
lock
je
pop
fnstenv
cmp
push
fnstenv
adc
add
add
sub
add
lods
jl
pop
inc
xchg
mov
mov
les
gs
adc
gs
mov
data16
ja
rorb
adc
stos
add
mov
movl
mov
add
add
mov
jg
inc
ljmp
add
add
jo
mov
mov
push
push
push
push
jo
add
loopne
stos
shll
add
stc
pushw
dec
shl
dec
lret
xchg
sbb
in
loope
lcall
jmp
add
add
add
mov
push
pushf
ficompl
add
add
pop
mov
mov
push
popa
sti
popf
dec
push
pusha
add
mov
add
add
cmpsb
fwait
mov
in
mov
add
add
lret
negb
imul
sahf
movsb
mov
cli
sbb
loop
add
jp
lds
add
add
add
push
lds
or
mov
incb
fnstcw
and
and
mov
leave
fbld
add
mov
adc
jle
lods
mov
sbb
rorb
cmp
lret
lret
cmp
dec
push
pop
xor
mov
aaa
adc
movsb
jbe
pop
shll
add
add
add
movsl
add
repz
bound
mov
shll
adc
dec
shll
add
add
stos
xchg
add
adc
add
jne
push
in
pop
cs
add
push
push
loop
ja
test
xchg
jl
jecxz
rcl
xchg
jo
je
push
xchg
add
fdivl
cmp
add
jle
imul
insb
add
add
add
mov
ss
cs
add
mov
jo
cmp
outsl
ret
and
sub
and
arpl
xor
add
add
mov
movsl
jp
fnstenv
pop
shlb
mov
and
mov
pop
fwait
ss
or
mov
add
fldenv
clc
inc
imul
cmp
outsb
pop
and
cmpsl
stc
push
mov
jp
clc
inc
rcrb
push
rcr
gs
ret
cmp
push
mull
pop
popa
push
mov
aas
fidivs
dec
das
mov
call
sub
outsl
popa
fisubrs
add
test
inc
add
add
add
jg
mov
jb
mov
fstpl
jge
mov
jae
stos
ja
mov
xchg
aaa
fnstsw
aad
xor
stos
enter
sbb
movsl
hlt
icebp
or
or
push
and
mov
shrb
cs
add
add
push
dec
add
add
sub
add
add
mov
jp
sbb
or
std
cltd
lfs
lds
ja
xchg
mov
or
push
push
or
add
test
movsl
outsl
mov
add
lcall
dec
add
enter
sbb
lret
add
add
add
jo
mov
lea
xchg
hlt
aad
adc
mov
jmp
mov
and
mov
je
adc
or
jl
in
pop
lock
popf
cld
out
sub
inc
pushf
fists
ficoms
dec
jbe
addr16
cmc
cmc
mov
je
and
bound
xlat
test
mov
dec
ret
pusha
add
add
dec
add
pop
sbb
shl
xchg
outsb
cmp
loopne
add
iret
fwait
jnp
push
jno
mov
stc
cmp
lret
sub
add
add
das
mov
nop
xor
data16
addr16
add
add
sahf
mov
xor
fwait
cs
pop
lret
lret
mov
and
add
in
scas
rcr
pop
mov
std
add
mov
dec
add
adc
add
add
add
add
add
mov
push
sub
add
add
lret
lret
fnstenv
mov
jle
scas
cmp
adc
rcrb
cli
add
xchg
js
shl
loop
mov
mov
mov
adc
ret
clc
sub
mov
lds
leave
mov
xor
or
add
add
xor
dec
pusha
add
add
push
cmp
mov
lock
jno
pop
or
add
add
pop
jg
mov
adcl
mov
int
pop
jo
movsl
loopne
xchg
add
cmp
cli
andl
mov
rcll
add
mov
add
add
push
dec
xchg
cwtl
or
int3
aam
cmpsb
ds
aas
dec
ss
inc
push
cwtl
cmc
test
mov
jae
and
test
nop
xlat
cmp
cwtl
test
sbb
mov
dec
fmull
cltd
sub
mov
lea
movsl
mov
pop
insb
add
add
arpl
out
call
xchg
rolb
push
jno
xchg
dec
mov
pop
scas
adc
add
add
add
add
cwtl
mov
jl
or
add
add
into
shr
mov
add
add
sub
mov
push
xchg
add
fwait
xor
test
add
add
stc
jns
loope
add
add
add
xor
fidivrl
xor
outsl
fildll
jae
mov
add
add
mov
mov
stos
call
aad
mov
xchg
dec
inc
push
jecxz
gs
push
popf
in
hlt
cmp
and
xor
loop
lods
cli
add
xchg
aas
lret
sbb
inc
add
adc
imul
mov
test
push
lods
call
jl
jge
hlt
push
mov
jns
fldt
cmpb
mov
fsubs
adc
adcl
call
mov
push
fwait
sub
mov
add
add
or
mov
mov
jge
dec
sbb
out
mov
sbb
add
inc
sbb
inc
jecxz
inc
js
sub
dec
pop
incl
add
add
sahf
aad
jb
pop
les
mov
in
sub
aad
xchg
xor
add
pop
jg
lods
insb
add
xor
cld
and
leave
sub
add
add
add
xchg
repnz
test
xchg
cmpsb
je
std
and
aam
adc
inc
add
add
ljmp
mov
cmc
mov
xor
inc
add
loope
sub
add
shrl
rorb
add
push
repz
sub
mov
add
mov
push
pop
js
imul
mov
mov
mov
inc
add
push
or
cmp
mov
iret
aaa
leave
lock
add
sahf
or
add
add
mov
fidivs
imul
adcb
cld
insb
add
pop
stc
insl
loop
loope
xor
aad
add
add
lods
or
mov
pop
inc
ret
nop
xchg
add
outsb
push
dec
pop
add
dec
pop
pushl
bound
jnp
jnp
cli
adc
push
ror
cmp
mov
popf
cmpsb
out
inc
cmp
test
or
lcall
adc
ret
jmp
xlat
cmpsb
test
add
add
sub
sbb
daa
cmc
mov
add
out
pop
pop
lret
imul
ret
adc
enter
xchg
xchg
int3
pushf
cmpsb
xchg
or
dec
mov
movsb
nop
xchg
cmp
dec
ret
sub
cmp
repz
fcomps
ljmp
cmp
push
push
test
jmp
sub
mov
add
add
pop
cld
sub
mov
sub
int3
dec
stos
negb
int3
out
inc
or
add
add
pushf
pop
pop
lret
leave
add
mov
mov
aaa
shrl
aaa
pop
hlt
and
inc
aam
daa
jne
dec
pop
insl
or
or
movsl
aaa
popf
xor
insb
add
inc
clc
xchg
push
add
add
add
add
add
jae
sbb
add
add
cwtl
sbb
inc
in
test
add
add
add
scas
fsubrs
stos
cmpsl
pop
mov
add
xor
dec
movsl
mov
jns
adc
mov
or
cmp
aam
and
inc
add
outsl
aam
inc
dec
mov
pusha
add
add
clc
pop
rcrl
add
add
dec
push
xlat
pop
xchg
int
stos
js
mov
fisubs
pop
sub
mov
mov
mov
jle
repnz
rcll
bound
movsl
cvtdq2ps
add
sub
mov
or
sbb
out
gs
mov
test
out
add
add
inc
cmpsb
ret
repz
lret
add
into
mov
sahf
outsl
mov
cmc
adc
add
add
jb
into
dec
outsb
fwait
mov
add
add
into
adc
icebp
pop
test
sti
or
or
aam
sbb
add
dec
add
add
cmp
test
push
adc
pop
dec
inc
add
les
cmp
fidivrl
and
add
add
jecxz
pusha
add
fcomps
xor
mov
mov
add
add
les
out
and
add
add
in
add
add
jmp
lret
mov
xor
adc
jno
xor
inc
add
mov
and
add
add
pop
sub
adc
adc
dec
popa
xor
add
sub
add
add
dec
jecxz
icebp
adc
inc
mov
push
lea
cli
jbe
jne
add
cwtl
push
xchg
movsl
dec
mov
gs
add
add
mov
lods
add
add
xor
mov
movb
sub
add
add
out
sar
test
lea
push
inc
shlb
pop
leave
or
fnstenv
lea
into
cmp
push
ja
cmc
cmp
je
inc
out
insl
adcb
mov
xchg
fcompl
cltd
cmp
jnp
or
cld
das
xlat
clc
gs
imul
movsl
xchg
sbb
xchg
ret
mov
sbb
or
add
add
and
add
jbe
jno
nop
lock
pop
push
adc
mov
pop
aam
inc
add
mov
scas
in
push
test
mov
xchg
cmp
neg
loopne
div
inc
xchg
loopne
push
fsubrs
sbb
lods
imul
mov
rclb
add
add
ret
jle
push
adc
scas
outsb
sbb
filds
fcompl
pop
mov
xlat
shrb
dec
push
fisttpll
mov
clc
cmp
test
aad
pop
xchg
jnp
nop
fildl
xor
jnp
loope
stos
ret
outsl
insl
push
sub
cltd
jno
es
add
fisttps
out
pusha
add
add
jnp
jecxz
cmp
xor
jmp
dec
add
add
add
jnp
daa
lea
imul
in
or
and
mov
mov
and
scas
pop
sub
push
xchg
add
insb
add
add
negl
cmp
mov
push
enter
xor
mov
pop
mov
add
sub
mov
es
push
add
add
push
mov
add
loop
scas
cmpsl
pop
ss
insb
add
add
mov
add
xchg
and
test
pop
push
hlt
aaa
pop
test
loope
sbb
inc
add
add
sbb
xchg
and
jno
add
cvttps2pi
add
add
clc
pop
fsubl
clc
sarb
aam
rcrl
popf
dec
add
mov
data16
cmp
pop
xor
push
or
aaa
mov
add
ficomps
or
mov
add
insl
pop
dec
pop
rol
insl
testl
add
dec
repz
loope
in
out
xor
enter
add
add
popa
jle
and
dec
adc
sahf
cmp
xor
adc
test
daa
packuswb
add
out
fcmovu
jp
aam
jno
call
jle
add
add
add
add
add
add
xchg
outsb
sbb
and
stc
fnsave
dec
in
add
add
repnz
adc
cs
cmc
cmp
push
int3
dec
outsl
aam
das
xchg
pop
addr16
inc
add
add
sub
add
add
fiaddl
dec
movsl
jl
sbbb
add
and
add
add
in
ljmp
add
push
mov
mov
mov
push
ror
mov
sub
shrl
xchg
pop
sbb
push
pop
and
add
pop
mov
add
mov
xor
lret
xchg
mov
dec
ret
jmp
mov
sub
fcomps
lret
aaa
std
or
add
mov
adc
cld
decl
aad
jge
inc
add
add
aam
add
add
in
inc
add
add
add
add
add
negl
push
lret
cmp
add
cs
xlat
aam
mov
in
sti
pop
es
outsl
push
dec
push
inc
sbb
flds
add
cmpsb
lods
test
in
add
loop
dec
add
imul
mov
fwait
push
stc
xchg
movsl
ljmp
add
mov
push
or
sub
mov
add
inc
lret
cmp
or
inc
xor
xchg
mov
mov
add
sbb
lods
call
xor
stos
andl
rcll
mov
add
add
mov
mov
js
fstpt
xchg
push
and
ljmp
pop
sbb
add
or
add
add
test
add
shll
mov
inc
add
add
sti
je
pop
sbb
add
jmp
pop
ret
jp
lds
test
mov
cmpsl
pop
into
inc
repnz
add
add
mov
dec
jp
jge
dec
add
cwtl
lods
inc
add
test
and
scas
insb
add
add
and
mov
sbb
insl
and
add
add
sti
cmpsb
push
mov
shll
lahf
push
xor
loopne
pop
pop
pop
xlat
add
mov
sbb
adc
lds
dec
sbb
sbb
cld
sub
sbb
xchg
xor
or
add
add
call
mov
pop
inc
pop
dec
out
popf
push
out
rolb
add
add
inc
js
inc
push
push
clc
cmpsl
cmp
scas
jle
add
pop
and
lea
add
mov
push
lret
mov
jmp
push
fucomip
adc
add
mov
aad
mov
int
inc
and
add
push
pop
lahf
fistl
sbb
out
out
into
adc
add
mov
jg
sub
push
pop
icebp
cld
fadd
sbb
sbbl
dec
add
cwtl
mov
sbb
inc
sbb
rorl
jb
jg
mov
xor
push
jno
out
add
add
scas
inc
push
add
add
mov
or
add
loopne
in
insl
into
jne
push
mov
lea
insl
jge
test
or
add
add
incb
cmpsl
xchg
push
fiaddl
test
mov
add
add
inc
sbb
mov
lods
pop
scas
xchg
je
sarb
push
sbb
push
jae
mov
cmpsb
dec
add
add
lahf
fcoms
fxtract
and
mov
mov
les
mov
push
mov
jp
ret
jbe
stos
popa
sub
popa
xor
and
push
jl
jp
lds
jg
rorb
add
call
test
mov
add
add
pop
jl
scas
adc
add
call
mov
pop
mov
call
jnp
add
mov
xchg
mov
or
add
add
adc
add
fidivrl
xorl
fsts
mov
cmpl
jle
jbe
lret
repnz
call
push
sbb
aaa
loopne
add
dec
sub
add
add
add
add
sub
arpl
imul
sar
and
push
jg
leave
loopne
push
push
or
add
add
add
push
and
out
mov
int3
add
pop
sti
add
mov
adc
mov
addr16
adc
xor
cmp
cmp
push
ds
add
add
lret
loope
add
mov
ret
addl
bound
enter
cmpsl
xchg
push
and
sub
add
add
fbld
jo
jle
cld
xor
xchg
ffreep
xor
pop
xor
addr16
jnp
or
lcall
scas
inc
stc
pop
rorb
sub
mov
shl
repnz
push
push
dec
movsb
jo
jnp
fcoms
es
inc
push
movsl
pushf
pop
out
jo
inc
jmp
dec
data16
mov
add
add
mov
cmp
add
add
jecxz
push
and
aam
sbb
xor
push
pushf
sti
ret
inc
lods
insl
outsb
cmpsb
pop
cmp
push
pop
or
movsl
aam
iret
stos
icebp
push
or
hlt
sub
jbe
cli
sbb
xor
filds
inc
nop
movsb
test
in
push
jne
negl
loope
dec
pop
cmp
add
add
andl
push
xchg
popf
mov
add
add
mov
adc
les
xchg
jb
add
and
mov
loop
and
dec
add
pop
leave
cmp
mov
sub
dec
ds
ds
test
inc
hlt
pop
popa
cwtl
pop
sti
add
mov
and
add
add
xchg
push
pop
sbb
cmpsb
push
and
xor
jl
push
dec
add
add
sub
add
add
lret
cmove
mov
mov
jge
leave
std
iret
insb
add
add
decl
jae
sbb
out
int
inc
ljmp
push
jge
add
inc
dec
add
add
add
mov
push
rcr
cmp
call
add
pop
add
mov
das
and
mov
add
add
pop
ja
xchg
mov
aam
sub
fnstsw
loope
add
add
add
add
push
es
into
in
out
pop
sbb
jmp
daa
and
pop
mov
mov
das
stos
push
adc
mov
mov
mov
add
add
movsb
lods
addr16
pop
sarl
imul
dec
push
cmpsb
lahf
int
jnp
sub
mov
jae
mov
psubq
stos
mov
xchg
pusha
add
add
pusha
add
push
mov
std
icebp
cld
call
sbb
add
add
mov
stos
out
scas
cli
push
dec
add
sbb
pop
dec
xor
aad
adc
add
add
add
add
add
add
xchg
pop
mov
sub
add
push
sbb
add
adc
inc
add
rcll
fsubrl
and
or
and
mov
fisubl
add
add
and
shll
cltd
pop
lcall
ss
add
popa
inc
dec
mov
inc
in
pop
out
sbb
sti
xchg
orl
in
pop
stos
outsb
vmread
jbe
pusha
add
add
ficoms
cmp
popl
aaa
popa
loopne
mov
lahf
jmp
call
inc
aam
imul
dec
add
jmp
test
out
sarb
jae
lahf
xchg
fisubrl
aaa
lahf
addb
fsubrs
add
add
pop
jmp
inc
sub
mov
adcb
cwtl
jle
mov
pop
gs
xchg
jge
xor
fwait
add
add
add
cmp
ja
subb
add
add
mov
decb
and
testl
imul
in
test
int
jg
imul
cmp
lods
or
add
out
lret
cld
inc
add
add
xchg
push
ja
rclb
jae
insb
add
or
lods
in
or
mov
das
int
xchg
aas
leave
test
fstpt
xchg
out
dec
jno
add
add
jge
out
pop
xlat
mov
cmp
xchg
ret
adc
add
mov
add
add
pop
data16
aad
movb
sbb
jno
xor
stos
mov
xlat
push
jmp
and
add
push
pop
jmp
negl
ss
js
mov
add
add
add
add
add
mov
add
pop
mov
pop
out
or
adc
mov
dec
iret
inc
mov
js
popa
and
add
add
add
mov
xlat
pop
rorb
add
fucomip
jecxz
aam
adc
sub
add
in
mov
jecxz
add
add
mov
add
add
in
dec
daa
mov
add
or
mov
cmp
mov
push
cmp
and
add
add
push
ret
mov
mov
or
add
add
iret
push
mov
mov
f2xm1
pop
dec
add
call
add
mov
add
add
pop
std
mov
aam
aas
lcall
or
scas
lahf
fbld
add
mov
ret
mov
add
add
jo
cmp
cmpsl
jl
pop
xor
mov
lcall
fists
data16
mov
std
jle
pop
dec
fld
xchg
xchg
dec
mov
dec
add
rcl
test
sbb
sti
out
js
test
mov
bound
out
lods
daa
frstor
mov
dec
dec
stos
mov
stc
cmp
jno
out
add
popl
mov
test
sbb
rcl
aam
pop
fidivs
adc
or
add
add
push
ret
push
sbb
sbb
add
jbe
adc
in
jno
cmpsl
lcall
fwait
pusha
add
push
and
mov
add
add
mov
rcrl
orb
inc
and
xchg
into
std
cmp
or
mov
fwait
xchg
mov
add
dec
jmp
push
xor
test
add
inc
inc
add
add
test
push
data16
adc
ja
lret
add
mov
mov
dec
gs
outsb
dec
insb
add
xor
xchg
pop
sahf
jns
cmpsb
roll
mov
ljmp
add
add
mov
add
add
dec
add
cmpl
faddl
scas
lods
mov
stos
insl
inc
js
mov
add
add
add
mov
mov
js
mov
shl
out
xor
or
add
add
mov
or
jmp
pop
hlt
cmp
add
sbb
jnp
sub
mov
loopne
sub
mov
lret
add
jns
lods
enter
xchg
xor
and
pop
inc
lret
ja
mov
add
jns
push
dec
add
mov
out
aad
or
mov
out
pop
mov
jbe
roll
xor
sub
mov
mov
imul
roll
add
jp
jne
gs
popf
xor
mov
fisubrl
pop
inc
add
xlat
add
add
add
test
add
add
add
mov
add
lods
push
aam
sub
incl
jno
dec
add
mov
add
add
or
jo
stos
loope
xchg
mov
push
add
mov
lock
cmpsb
sarb
add
add
dec
pop
stos
mov
hlt
mov
xor
sub
or
add
add
fiadds
lret
sbbl
pop
push
push
rorl
sbb
mov
lret
adc
or
out
cwtl
mov
sub
mov
adc
add
add
mov
mov
outsl
jge
fmuls
test
push
and
mov
jb
add
or
mov
or
add
add
cmpsl
dec
test
cmpsl
arpl
mov
mov
loopne
es
repz
loope
outsl
mov
xchg
adc
pusha
add
dec
inc
add
jecxz
add
ss
arpl
inc
push
repz
inc
sbb
add
add
cmp
mov
add
add
loopne
adc
movsl
mov
data16
dec
or
add
add
sbb
out
xor
add
inc
lret
sub
adc
add
pusha
add
push
ffree
cld
pop
push
iret
andb
scas
in
jae
sub
mov
add
xchg
sbb
in
enter
jle
movsb
dec
cmc
addr16
or
add
lcall
repnz
js
outsl
xchg
or
add
add
popa
mov
xchg
jb
or
mov
mulb
add
cli
aaa
je
cmpsb
pop
clc
inc
add
add
mov
leave
push
sahf
xchg
jp
push
mov
jnp
pop
xchg
dec
xchg
add
cmp
sbb
add
add
add
enter
jo
jl
add
add
sbb
mov
add
sub
jnp
inc
mov
add
insb
add
cltd
pop
xchg
pop
aam
clc
fstp
xor
shrb
xchg
push
sub
add
add
push
mov
imul
mov
mov
or
mov
rol
dec
add
add
or
aas
dec
jge
mov
loop
nop
and
add
add
cld
shl
adc
cmc
iret
lret
pop
idiv
icebp
lcall
clc
xchg
mov
nop
aad
push
xchg
and
inc
mov
jno
outsb
add
inc
add
add
cmp
stos
rcr
push
jmp
popf
adc
stos
adc
sub
lods
adc
inc
loope
pop
jg
lock
push
mov
rcrb
xchg
scas
repz
sub
cmp
mov
testb
das
enter
imul
imul
add
add
sub
xlat
jp
lret
add
add
add
add
test
add
sahf
or
into
fcom
push
pushf
add
sbb
mov
pop
jnp
sti
bound
add
add
add
add
lods
mov
imul
jmp
sub
fsubp
ja
add
add
lret
sarl
inc
add
aaa
filds
imul
push
xor
add
push
js
ja
es
int3
lahf
xchg
stc
push
mov
gs
sbb
add
add
add
add
xchg
in
or
mov
add
add
adc
mull
ljmp
add
add
ret
mov
daa
test
adc
jne
push
xlat
mov
add
adc
mov
in
dec
aad
mov
add
add
notb
cmp
cmp
add
add
jle
cld
imul
jo
sbb
adc
add
mov
das
aaa
aad
xor
push
sbb
add
sti
xchg
mov
jmp
lahf
cmp
add
ds
add
adc
insb
add
fucomip
scas
idiv
imul
add
inc
cltd
repnz
pop
mov
enter
push
out
adc
add
pop
divl
add
in
inc
add
jae
repz
inc
sahf
inc
sbb
data16
mov
mov
jl
popf
pop
adc
enter
cmp
or
add
add
dec
push
inc
mov
mov
adc
dec
mov
cwtl
pop
add
add
ds
adc
add
add
out
data16
pop
lret
mov
sahf
cmp
inc
inc
stos
movsb
and
add
add
aaa
lret
push
js
mov
cmpl
lds
sub
mov
aad
jb
sbb
popa
or
cltd
pop
popa
push
sub
rorb
notb
jecxz
and
pop
ds
test
and
ja
jno
inc
add
inc
sbb
add
shl
rclb
lods
mov
sti
cli
pop
mov
inc
loop
pop
inc
and
add
add
xor
mov
add
inc
xor
pop
fwait
cmpsb
cwtl
ror
mov
pop
aad
test
mov
unpckhps
in
popf
jp
and
clc
mov
or
mov
push
mov
stos
dec
popa
add
push
mov
insl
sbb
mov
cmpb
adcl
cmpsl
test
push
mov
mov
aaa
inc
xchg
aad
add
add
mov
add
mov
ffree
pushf
aad
xchg
mov
scas
je
aad
popa
popa
enter
mov
insb
add
mov
add
mov
fadds
mov
cmp
mov
pop
scas
das
add
add
pop
sub
fidivrs
pop
addr16
pop
jae
mov
add
orb
mov
cltd
out
xor
pusha
add
rcll
movsb
ffreep
cmpsb
hlt
insb
add
add
mov
xchg
rorb
orl
add
or
add
add
xor
add
into
fcmovnbe
int3
mov
pop
and
mov
into
xchg
cwtl
cld
cli
fsub
cmp
test
lea
mov
mov
inc
add
lock
loope
add
movsl
add
cld
pop
mov
add
xor
pop
xor
add
add
iretw
loop
out
es
add
add
mov
mov
xlat
ret
lods
insl
jne
mov
test
aas
lods
mov
pusha
add
ret
mov
mov
pop
in
sbb
mov
mov
jg
adc
jnp
sbb
cmp
pop
fistps
mov
jge
or
add
mov
and
enter
int
mov
add
dec
js
add
into
adc
mov
mov
ja
data16
jo
add
inc
jle
add
add
movsl
stc
mov
push
std
dec
data16
mov
mov
add
add
adc
xor
jno
push
xchg
jno
push
negl
push
jp
mov
in
out
xchg
or
mov
or
mov
lahf
fcompl
mov
xlat
testl
stos
push
popf
jmp
rcrl
leave
rcrl
add
add
xchg
add
xchg
sub
xor
xor
add
add
cmc
ffree
bound
roll
or
adc
pop
sub
cmpsl
xchg
daa
xchg
shlb
add
add
add
add
lcall
lret
imul
dec
push
nop
adc
xchg
cwtl
idivl
mov
add
mov
es
popl
popa
xchg
and
xchg
and
mov
add
add
push
xchg
fsubrl
lcall
add
rcrb
mov
jp
sti
je
add
add
arpl
jmp
dec
mov
mov
data16
mov
sbb
add
add
out
adc
ret
call
add
pop
daa
shrb
add
add
mov
pusha
add
xchg
loope
xor
cs
mov
rcrl
lock
enter
popa
push
inc
cmpsb
ja
cmpsb
sub
add
add
add
add
add
add
add
jno
or
mov
rcr
mov
movl
sub
mov
rol
mov
dec
popa
rcrl
adcb
or
add
add
mov
aad
mov
push
movsb
pop
jae
mov
sbb
cmpl
lret
out
std
mov
imul
mov
ficoml
add
stos
enter
xlat
ror
inc
dec
dec
sub
mov
bound
add
add
fcoml
or
mov
push
mov
push
mov
fistpll
test
add
xlat
mov
mov
mov
cmpsl
stos
stos
ret
adc
adc
jnp
ss
sub
add
add
inc
inc
testl
xor
add
stc
cmp
add
add
das
cmp
mov
rorb
add
dec
or
mov
repz
mov
iret
ret
stc
fcmovb
pop
les
add
add
mov
mov
scas
mulb
add
mov
lret
xchg
and
xor
orb
pop
xor
mov
lock
cwtl
repz
mov
mov
or
add
add
mov
add
add
repnz
repnz
mov
sub
add
add
imul
movsb
mov
add
mov
pop
xchg
jno
popf
dec
push
ret
mov
repnz
push
push
mov
push
lahf
cmpsb
push
add
add
add
add
add
add
scas
adc
add
add
and
sub
mov
xchg
stos
push
add
inc
add
add
loopne
out
mov
gs
bnd
jne
shrl
mov
cmpsl
sbb
add
dec
add
outsb
mov
mov
ret
xchg
add
mov
ja
loopne
inc
mov
add
add
outsl
fdivrl
dec
sub
les
call
int
bound
add
rolb
add
imul
xor
pushf
ds
pop
jge
inc
test
add
dec
test
in
repz
add
inc
mov
xchg
lods
cli
jp
hlt
out
inc
add
add
cs
mov
lcall
add
add
add
add
fwait
test
add
ja
clc
jo
xor
add
cmpl
add
jne
je
inc
push
inc
xchg
cmc
pop
clc
push
sub
add
iret
mov
inc
lret
sub
add
add
adc
cmpsb
inc
nop
nop
mov
add
scas
cld
cli
clc
clc
jb
add
in
jae
movl
inc
shll
push
push
push
mov
jg
mov
push
scas
in
decl
mov
insb
add
add
dec
stc
push
add
icebp
push
push
push
outsl
dec
rol
icebp
add
add
xchg
add
movsl
push
sbb
sub
cmp
jbe
pop
or
pop
aas
add
cmp
in
lahf
test
leave
jo
cs
es
fwait
daa
in
test
rcll
inc
push
aad
adc
insb
add
add
dec
fdivrl
adc
inc
add
mov
fdivp
lods
pop
fstps
fwait
pop
sahf
repz
test
dec
add
add
mov
jb
lds
sbbl
mov
adc
lods
inc
sbb
call
push
cmpsb
cmp
popf
int3
rorb
add
sbb
dec
subb
add
test
dec
jno
cld
in
or
add
sub
xor
paddb
sub
mov
pop
clc
loopne
cld
sbb
cld
ljmp
cmp
xor
out
adc
add
add
add
add
mov
test
lock
packuswb
mov
lock
mov
sbb
mov
loope
pop
popa
insl
outsl
mov
pop
adc
mov
movsl
pop
mov
in
decb
add
inc
add
add
mov
add
mov
xchg
lods
dec
enter
int3
mov
push
add
mov
mov
xor
sbb
pop
or
dec
add
cmp
dec
cmc
dec
add
add
xchg
push
xor
cs
mov
repnz
stos
outsl
jns
mov
add
xor
in
add
mov
or
cli
dec
gs
dec
pop
jnp
cmp
std
dec
add
lds
popa
fistpl
inc
add
add
adc
add
add
add
add
mov
add
fsubrs
jle
add
add
std
sub
add
sub
test
add
jp
or
daa
add
lods
mov
add
lret
add
add
sbb
jecxz
ret
bnd
sub
ljmp
enter
mov
mov
out
hlt
xchg
fst
pop
icebp
jg
or
add
add
add
gs
pop
shrb
imul
enter
cmp
xchg
call
jecxz
adc
jecxz
add
add
pusha
add
in
add
call
push
mov
aas
cmpsb
push
hlt
test
stos
movsl
or
mov
inc
jge
fistps
mov
sbb
push
int
and
xchg
jg
loope
add
shll
add
repz
fwait
cwtl
pop
gs
jno
inc
mov
xchg
mov
ds
mov
cmp
add
and
cltd
xchg
sbbb
jp
incl
dec
out
enter
movsb
cmpsb
mov
add
arpl
cmp
and
dec
outsb
rorb
sti
int3
call
jl
pop
push
push
push
xchg
int3
jbe
dec
add
add
sbb
or
sahf
in
stos
pushf
adc
add
mov
imul
pop
pusha
add
add
sti
dec
add
int
jmp
pushf
jp
xchg
addl
stos
mov
fdivrs
mov
popw
and
aam
pushf
dec
add
mov
clc
jecxz
lock
dec
cmp
das
insl
jg
subl
xlat
cmp
add
sbb
jl
add
xchg
xor
add
add
sbb
cs
xchg
test
mov
ja
add
add
jp
push
movsl
fmull
loopne
das
mov
js
dec
push
mov
pop
fimull
mov
and
mov
pop
daa
or
lock
push
or
add
add
arpl
xor
xchg
shrb
shl
pop
adc
xchg
fisubrs
lahf
jle
rorl
lret
loope
mov
sbb
repnz
jnp
inc
add
xchg
loope
repnz
mov
aas
popf
jb
add
add
cmp
daa
pop
nop
js
inc
inc
sbb
add
sbb
add
add
sub
clc
loopne
push
push
ljmp
add
xchg
add
add
test
fwait
mov
pop
jae
scas
cmpsb
pop
mov
add
mov
pop
js
sarb
or
iret
add
addb
push
stos
ljmp
mov
mov
add
stc
adc
add
add
add
test
add
add
jecxz
add
dec
add
sub
lods
es
mov
fnstenv
pusha
add
dec
popf
and
mov
adc
add
add
shrb
or
add
add
fidivl
push
dec
add
add
xchg
mov
mov
push
lods
sarl
cltd
xchg
inc
je
jge
pop
jae
mov
add
test
dec
imul
xor
dec
add
jp
inc
xchg
int
into
popf
jns
imul
adc
push
adc
add
add
inc
cmp
or
mov
adc
shr
and
mov
xchg
sub
add
add
fnstenv
bound
xor
mov
xor
pushf
sbb
shll
sahf
ljmp
cmp
xchg
mov
loope
dec
cld
rcr
cmpsb
pop
xchg
jle
imull
add
repz
mov
or
sbb
cmpsl
sub
add
add
add
jp
mov
aas
mov
sbbl
fwait
sahf
ss
jne
clc
cmp
outsl
dec
mov
mov
push
lcall
add
fwait
js
mov
sahf
ljmp
in
mov
push
pop
addb
or
mov
mov
jnp
stos
push
mov
cmp
sbb
pop
push
xchg
add
test
aaa
sub
add
add
jge
cltd
xchg
mov
stos
mov
add
out
xchg
or
add
add
enter
decl
inc
add
add
add
adc
std
xchg
test
dec
mov
mov
adc
test
push
push
nop
arpl
sub
add
add
xchg
shll
das
nop
inc
push
dec
js
mov
insb
add
mov
je
shlb
mov
xorb
lods
or
out
cmc
shrl
add
add
add
cli
out
pusha
add
push
mov
sbb
add
out
jns
inc
aaa
jb
clc
add
mov
mov
add
add
or
test
icebp
leave
fmul
ja
pushf
pop
push
jecxz
xchg
sbb
daa
subl
mov
pop
mov
subb
add
add
dec
add
add
mov
push
fwait
mov
sti
and
mov
mov
ficoml
add
add
gs
inc
mov
cmp
rorb
mov
xor
jbe
dec
cs
push
sub
or
sub
add
add
cmpsl
xlat
js
pop
in
iret
icebp
imul
mov
outsb
push
inc
xchg
mov
add
jno
jmp
lahf
in
imull
fwait
test
imul
enter
fwait
sub
add
add
add
add
insb
add
add
mov
push
adc
repz
aaa
jmp
mov
mov
loope
cmpsl
pop
adc
aam
dec
add
add
aaa
lea
cmp
ss
je
stos
add
add
ss
movsb
xor
jo
sub
pop
pop
pusha
add
stos
arpl
pop
mov
outsb
test
jns
jg
andb
lahf
cmp
pop
jns
inc
scas
pop
pop
mov
std
cmp
add
add
pop
shl
into
jbe
or
pushf
push
lock
insl
mov
xchg
mov
add
je
cmp
fcmovbe
js
or
add
insb
add
das
add
add
das
shlb
or
call
add
xchg
sub
hlt
arpl
push
sub
add
add
push
aam
clc
lods
pop
mov
loopne
push
ljmp
bound
inc
add
cmp
add
out
cli
adc
into
inc
data16
popf
rcll
cld
xchg
in
es
inc
pop
sbb
pop
mov
pushf
cwtl
popa
push
mov
lds
add
hlt
mov
add
add
add
push
push
sahf
jne
mov
mov
sub
mov
add
add
dec
jae
add
add
into
fsub
fsubl
add
pop
cwtl
add
add
add
push
mov
jp
mov
mov
sbb
roll
add
add
das
enter
dec
jnp
hlt
pop
sbbb
imulb
addr16
jo
add
add
mov
pop
lds
dec
add
push
mov
fsubrl
int3
mov
add
add
repnz
mulb
je
add
add
jle
cmc
push
xchg
sahf
xchg
into
jge
stos
div
fldenv
add
push
imul
ror
push
sbb
stos
or
dec
add
add
ds
mov
lret
cltd
dec
call
and
jg
adc
cld
mov
push
xchg
enter
xchg
mov
mov
and
mov
mov
popa
adc
lcall
add
add
addr16
add
add
test
add
add
jge
dec
push
add
add
stos
mov
enter
push
pop
jg
aad
enter
push
es
mov
add
add
dec
pop
cltd
scas
and
cs
fstpt
les
add
add
test
outsl
adc
lret
pop
or
mov
fistpll
pop
mov
jne
sub
add
add
mov
mov
add
add
dec
scas
pusha
add
add
add
add
pop
and
add
add
mov
add
sbbl
pusha
add
aam
rcll
ucomiss
lahf
outsb
lret
and
jb
xor
mov
pushf
mov
dec
jp
scas
fimull
mov
mov
xchg
xchg
outsb
ljmp
jae
sbb
ss
aam
jge
mov
std
xchg
adc
inc
or
popa
xor
add
xor
pushf
cmc
inc
add
add
mov
push
pop
jo
popa
add
mov
cwtl
jmp
push
int
arpl
add
jmp
jle
xchg
call
xchg
outsb
imul
xchg
dec
pop
cli
adc
add
add
leave
stos
push
clc
aaa
xchg
int
push
insb
add
add
repz
dec
popa
push
dec
icebp
pop
sub
add
add
mov
add
sbb
pop
mov
testb
add
mov
mov
xor
mov
xor
and
pop
mov
scas
jo
fwait
adc
jmp
cmp
dec
add
out
push
imull
push
jnp
aas
cmc
jge
das
mov
mov
cmc
or
add
add
inc
mov
xlat
add
add
jo
add
add
dec
jb
loopne
push
bound
jo
add
add
add
ja
add
in
push
jno
fildll
add
mov
pop
and
or
xlat
xor
xor
add
pop
inc
movsb
xlat
bound
rorb
add
add
aaa
xchg
ds
test
std
iret
outsl
jns
stos
or
jl
incl
lret
lret
pusha
add
add
inc
mov
mov
mov
push
and
mov
lods
push
xor
sar
xchg
or
add
add
push
mov
out
aas
pop
and
xchg
lds
add
and
pop
jl
lods
in
out
mov
in
mov
and
add
add
push
xchg
insl
inc
in
or
mov
mov
sbb
mov
es
aad
and
ds
shl
jp
cmp
ja
arpl
and
jb
add
add
or
cmpsb
icebp
andl
fdivs
or
push
dec
bswap
out
cmpsl
cmc
lods
sti
cmc
xchg
jo
mov
add
mov
clc
xchg
aas
jge
inc
add
add
push
pusha
add
pop
fwait
push
sbb
add
sub
add
add
jne
dec
mov
add
adc
mov
in
jge
dec
cmp
test
ret
clc
movsl
cmp
mov
adc
pop
lret
lret
mov
into
push
or
loop
inc
add
dec
add
mov
pop
mov
leave
jmp
sbb
loope
add
and
pop
orb
je
cmp
add
fidivl
outsb
dec
xlat
loopne
or
mov
mov
rcr
rorb
clc
gs
xor
mov
add
add
inc
movsl
xchg
add
add
and
xor
clc
nop
hlt
movsl
mov
pop
and
xchg
jbe
loopne
mov
dec
add
add
fmul
jle
jl
adc
mov
mov
pop
call
xchg
shrl
mov
and
add
add
push
adc
add
out
mov
add
add
add
xlat
fisttpl
add
mov
out
sbbl
add
inc
xchg
sub
add
add
add
cmpsb
xor
inc
xor
bound
clc
mov
mov
mulb
cmc
js
ds
fsubr
xlat
lea
add
dec
ja
inc
mov
add
movsl
pop
mov
inc
es
push
inc
inc
std
pop
int
pop
xlat
ljmp
mov
adc
mov
add
add
fisubrs
mov
mov
push
cwtl
dec
in
add
icebp
and
jne
dec
pop
xchg
daa
mov
pop
std
outsb
mov
bound
ss
and
call
jno
scas
test
pop
test
add
out
sub
lret
and
cmp
sub
add
add
mov
add
test
imul
and
add
dec
add
add
pop
dec
push
mov
popa
cmp
inc
xchg
adc
loope
inc
mov
loop
mov
lods
ret
push
dec
jmp
cmpsb
movsb
fisttps
push
rcl
in
popf
mov
or
add
add
pop
push
sub
cld
or
push
or
ret
ds
fisubs
stos
test
cmp
scas
push
jge
jns
insb
add
and
add
je
add
aaa
out
les
add
add
sarb
adc
push
dec
arpl
movsl
out
push
rclb
mov
or
jbe
mov
push
sub
cmpsl
test
sub
add
add
add
int3
mov
shl
xlat
adcl
add
add
dec
add
add
lret
inc
mov
mov
add
mov
add
add
popf
mov
sti
pop
ljmp
add
pop
ljmp
movsb
add
and
mov
sbb
add
add
lea
add
add
sbb
add
add
scas
xor
inc
sbb
ficompl
mov
mov
aam
cwtl
push
sbb
push
mov
push
inc
xor
mov
add
mov
add
je
and
mov
dec
add
add
jmp
cwtl
sub
addr16
xchg
jne
cld
repnz
pop
push
jns
js
hlt
fidivs
rorl
stos
dec
test
inc
adcb
push
pop
ret
js
mov
add
ss
out
cli
mulb
xchg
sub
sbb
inc
xor
mov
add
icebp
stos
or
add
add
fcoml
jp
xchg
xor
mov
sub
mov
lods
outsl
aad
mov
fwait
sti
ret
shrb
sbb
repz
sbb
loop
add
jb
hlt
jg
pop
movsb
adc
fildl
xor
or
sbb
lcall
add
xor
outsl
and
add
scas
fst
mov
xor
add
sub
addr16
mov
in
xchg
sub
xor
movsb
insb
add
add
jecxz
add
mov
aas
test
outsb
sbb
or
insb
add
gs
cmp
jo
add
add
mov
in
shll
add
in
enter
add
xchg
pop
sub
sub
add
add
add
outsl
jl
add
add
add
dec
add
add
or
add
adc
jno
fwait
sbb
dec
cmp
insb
add
mov
push
sarb
lret
dec
imul
cs
fdivrl
pop
or
mov
js
xor
dec
cmp
add
add
sbb
movl
add
adc
addr16
mov
test
mov
insl
inc
fdivrs
lahf
stc
jno
add
fdivl
and
add
add
mov
mov
call
ljmp
cld
cli
jp
cmc
mov
add
rclb
cltd
int
xchg
push
cli
repnz
push
test
dec
add
add
add
sbb
pop
ja
add
lret
inc
popf
scas
or
popa
cld
aaa
std
cwtl
aam
incl
add
add
add
movsl
dec
adc
dec
add
bound
cmc
push
rcrl
mov
add
add
ficomps
add
gs
jp
jnp
loopne
sbb
into
lret
ja
dec
add
add
cmp
popa
enter
jno
loopne
cmp
mov
iret
int3
das
aam
add
inc
pop
js
mov
add
add
in
jb
ss
push
movsb
and
add
add
mov
xlat
adc
push
mov
add
mov
cmp
leave
std
mov
jl
dec
hlt
popf
pop
daa
stos
jg
xchg
sbb
inc
cli
mov
inc
lods
dec
pop
xchg
pushf
push
lods
xchg
movsl
xchg
into
push
in
cmpsl
jp
xor
pop
jnp
int
or
mov
vmwrite
imul
and
mov
aaa
mov
add
add
fsubrp
into
test
iret
push
push
hlt
xchg
into
lods
aas
or
add
add
call
rcrb
outsb
cmp
dec
add
pop
mov
and
add
add
arpl
cltd
pop
xchg
adc
mulb
add
mov
cmp
xor
pop
mov
jle
sbb
xor
mull
mov
nop
shll
add
add
xlat
cmp
lret
push
out
lcall
pop
mov
mov
add
fcomps
inc
add
cmp
lods
mov
add
fimuls
add
int3
je
cmpsl
stc
or
add
add
mov
mov
lret
and
stos
pop
out
arpl
pop
in
stc
add
mov
xchg
sarb
scas
add
add
add
rcrb
fbld
add
mov
sub
mov
fldl
add
add
add
fdivrl
add
push
dec
sti
ja
daa
or
add
dec
mov
lds
pop
data16
int3
es
test
lods
shll
or
es
cmp
xor
sub
movsl
hlt
push
push
dec
add
out
xchg
mov
adc
mov
push
push
mov
mov
jae
adc
scas
insl
leave
cli
jmp
sbb
cmpsb
pusha
add
and
add
add
add
add
das
add
cmp
add
add
add
and
sbb
add
add
sbb
fcomip
jecxz
jg
inc
add
movsb
sbb
or
int
jne
popf
out
or
mov
add
hlt
mov
sub
add
add
icebp
sahf
adc
ljmp
aam
repnz
stos
xchg
outsb
nop
sbb
lret
mov
xchg
push
xchg
faddp
push
inc
add
add
add
mov
test
add
add
add
xor
mov
add
mov
dec
push
mov
jae
adc
jb
mov
inc
add
ret
push
int
sub
add
inc
imul
push
cld
dec
jge
inc
add
clc
das
adc
loopne
jne
in
das
shrb
mov
in
ret
xchg
pop
sub
add
add
loopne
cld
mov
xor
sbb
xor
add
add
es
adc
jp
xor
add
add
add
push
in
and
mov
push
dec
push
insb
add
add
sbb
fwait
xor
jg
push
je
lret
addb
lcall
mov
enter
add
cmp
stc
mov
lods
jle
adc
aaa
add
add
in
fdivrs
mov
add
and
add
add
imul
mov
mov
inc
add
adc
add
add
mov
and
arpl
add
dec
add
add
add
push
mov
add
add
add
mov
push
out
mov
dec
sbb
add
negl
xor
xchg
inc
push
rcrl
cld
daa
aaa
push
leave
jb
hlt
add
add
add
loope
ret
jo
pop
cmp
sahf
xlat
xor
cmp
stc
xor
imul
cmp
push
xchg
add
mov
mov
sbb
add
add
sub
add
add
mov
mov
outsl
add
jo
pop
dec
lock
mov
test
bound
push
icebp
jmp
shll
lahf
sub
cli
scas
mov
orb
add
cwtl
xor
pop
pop
adc
inc
add
lods
sti
push
in
cmpsl
test
add
add
dec
add
add
pusha
add
add
mov
sarl
or
add
add
sti
cmp
add
add
adcl
inc
jmp
sub
scas
fldcw
fwait
les
gs
call
push
in
imull
leave
arpl
inc
jbe
mov
or
dec
arpl
loop
push
inc
pusha
add
or
mov
mov
testb
loop
scas
cmp
add
adc
clc
clc
jns
cmp
mov
mov
lds
xor
mov
adc
jecxz
add
add
sbb
adc
mov
out
mov
xor
jmp
add
das
xor
scas
lods
addr16
in
cmp
add
add
add
add
lods
lret
mov
into
sub
mov
into
ja
insb
add
divb
pop
in
and
fcoms
push
out
cmp
add
ret
xor
xchg
lret
push
sbbb
sub
cwtl
mov
cmp
lock
push
adc
add
add
and
sbb
idivl
add
ret
test
nop
sbb
add
ss
xchg
sub
cmp
xlat
lock
imul
and
add
add
sub
push
movsb
add
mov
mov
mov
xchg
aam
movsb
add
add
add
add
ficompl
je
std
int3
xchg
nop
cwtl
and
add
add
testb
in
and
add
add
add
and
xchg
nop
into
mov
add
insl
sbb
mov
testl
sbb
nop
push
lods
rorl
dec
ret
lods
js
push
jno
sub
mov
dec
add
add
xor
xchg
fbld
in
or
mov
iret
mov
add
pop
dec
outsb
or
mov
clc
xorb
push
inc
pop
lret
pop
in
and
stos
cmp
jp
aaa
adc
inc
add
imul
mov
pop
dec
aaa
inc
mov
jne
push
mov
aaa
jmp
push
sahf
dec
aad
jmp
lock
adc
jae
pop
sub
lret
push
rorb
in
sbb
add
dec
add
push
mov
cmp
cmp
sti
add
mov
push
push
shrb
add
jle
sbb
pop
adc
pop
ficomps
cmp
out
test
mov
add
push
dec
add
aas
add
jecxz
xor
lods
mov
fdivr
inc
mov
add
add
jg
pop
mov
add
sub
add
mov
pop
pop
jno
mov
cmp
outsb
pop
fisubs
add
adcb
pop
fmul
xor
cltd
aaa
push
outsb
push
testl
add
mov
in
jp
mov
mov
mov
ror
jmp
jl
add
stos
add
add
add
enter
enter
std
into
xchg
or
add
add
loop
cli
roll
add
add
scas
xchg
jp
repnz
gs
mov
add
add
mov
sbb
sub
into
mov
addl
icebp
inc
push
es
mov
cmp
sub
mov
sub
add
mov
and
in
iret
mov
xorb
add
xlat
jne
pop
or
mov
inc
fwait
mov
jmp
add
jecxz
xchg
repz
repz
xor
and
jge
scas
cwtl
lods
cltd
or
mov
test
lock
jmp
gs
insb
add
std
push
pop
les
mov
add
jg
fwait
pop
divb
gs
mov
bound
add
outsb
add
mov
stc
inc
pop
out
and
mov
xor
jmp
fsubs
movsl
xchg
imul
ret
mov
add
add
or
add
and
mov
movsl
mov
in
ljmp
mov
fsubrl
add
cmp
jnp
push
out
dec
xchg
stc
mov
lds
inc
dec
add
add
and
add
add
jmp
mov
fsubl
int3
and
add
add
fcoms
das
shrl
std
movsl
jg
ljmp
cli
add
add
xchg
lret
test
add
jbe
pop
das
cmp
adc
shll
fstpl
andb
add
mov
cs
fidivl
jno
cwtl
pusha
add
sub
add
add
mov
dec
xchg
aam
shlb
out
les
sti
lcall
add
add
ja
pop
in
dec
adc
push
sarb
jb
stc
dec
lret
loop
dec
add
add
ja
add
add
add
jle
adc
call
pop
pusha
add
cli
cwtl
push
inc
xchg
addr16
out
sbb
pop
hlt
jmp
push
loop
loop
nop
adc
jnp
xchg
push
das
cmp
add
cmp
add
add
aad
xchg
mov
inc
add
xor
subb
loope
and
add
add
rorb
ficoml
sahf
mov
dec
dec
add
roll
fstpt
dec
dec
add
add
out
add
add
mov
push
fsubs
add
add
stos
dec
cmpsl
and
inc
pop
mov
add
add
add
cmp
mov
lds
pop
das
repz
adcb
into
push
repnz
int3
sub
dec
add
add
push
aam
loop
add
add
add
cs
in
je
mov
add
add
pop
jp,pn
mov
pop
int3
inc
pusha
add
out
jae
fbld
mov
sarb
negl
mov
fcomps
ret
xorb
stos
xchg
mov
mov
jns
adc
xchg
inc
cmp
add
add
cmpsb
ret
stos
sub
mov
and
add
add
xor
cmp
movl
outsb
sarl
jne
xor
andl
or
add
sahf
test
mov
or
les
jmp
bound
popf
in
clc
test
xor
enter
les
jb
xor
dec
jae
gs
lods
call
lahf
and
add
cltd
inc
pop
pop
sti
mov
add
add
enter
stos
inc
stos
std
sub
lret
xor
leave
jnp
insb
add
add
cmp
add
and
jb
xchg
cmp
icebp
pop
cmpb
stc
out
add
jne
add
jecxz
lea
add
add
add
idivb
lahf
movb
jno
pusha
add
add
scas
push
testb
push
dec
add
and
inc
add
mov
mov
pop
xor
out
hlt
pop
and
mov
pusha
add
cld
or
add
add
mov
ficomps
loopne
stc
out
mov
jae
cmc
sub
ss
xchg
cli
repz
jp
hlt
sub
push
adc
or
test
mov
cmp
add
add
xchg
push
pop
dec
loope
insl
sbb
pusha
add
js
or
add
add
xor
popa
cmp
movsl
test
mov
mov
dec
add
mov
iret
fucomi
sbbb
inc
sub
add
add
adc
push
mov
dec
or
xchg
mov
add
jge
pushf
or
fiaddl
add
add
loope
pop
add
pop
sbb
test
jbe
and
add
jp
jg
aas
mov
adc
adc
pop
insl
nop
sbb
decb
pop
dec
or
mov
dec
xor
jp
mov
cmp
add
push
add
add
add
add
add
gs
cmp
in
add
jbe
mov
ret
or
mov
loopne
mov
push
shlb
sbb
shlb
stos
mov
push
mov
jg
popa
out
xchg
dec
mov
push
xor
inc
push
inc
push
shrb
stos
dec
xchg
movsb
daa
xor
mov
fidivs
popf
or
add
add
filds
mov
inc
add
ds
call
mov
shll
xchg
imul
push
sbb
movsb
push
in
cli
xor
xchg
add
fdivl
cmc
stos
and
add
add
add
mov
mov
addr16
stc
test
popa
xchg
int3
push
dec
add
add
repz
pop
xchg
out
xchg
les
lret
andl
sarl
push
adcl
sub
jp
call
push
ja
pop
cmp
inc
add
add
add
sbb
xor
push
outsb
cltd
nop
or
mov
lods
int3
loope
sarl
loop
sub
mov
mov
sbb
lcall
sbb
add
add
mov
jb
mov
add
add
cmc
insb
add
add
int
mov
mov
std
add
cmp
shll
in
cmp
mov
push
in
push
movsl
jns
sbb
xchg
mov
or
mov
enter
cmpsl
push
dec
xchg
adc
lods
ja
ljmp
xchg
ror
pop
cmp
mov
out
in
int3
into
aas
fsubl
add
daa
xchg
in
fistps
js
xor
rcll
sbb
xchg
fdivp
loopne
dec
test
in
push
shlb
mov
rorb
add
jns
rcrb
xor
in
inc
cs
mov
cltd
pop
sbb
mov
jae
stos
mov
mov
faddl
in
ret
xchg
jae
add
add
add
gs
mov
or
out
or
ja
push
test
and
mov
xlat
out
and
mov
out
add
add
outsl
clc
jg
sub
mov
add
add
inc
add
add
xor
sub
add
add
dec
stc
cli
cmpsb
push
jae
scas
sub
gs
push
stos
jmp
add
inc
xchg
leave
cmp
jg
cmpsl
sub
add
add
enter
inc
and
add
add
mov
loopne
data16
fistps
push
lock
sub
dec
cmp
mov
jnp
push
fidivs
dec
sbb
into
movsb
mov
lahf
push
movsb
mov
cmp
inc
cmp
add
sub
fwait
add
fwait
lods
scas
jl
ljmp
mov
pop
movsl
add
add
insb
add
add
add
dec
mov
ss
dec
mov
add
dec
jns
mov
xchg
push
sti
nop
pushf
lods
test
shlb
mov
mov
inc
xchg
dec
imul
in
inc
add
add
daa
push
mov
mov
xlat
mov
hlt
mov
inc
add
add
pop
sbb
cmp
jp
dec
mov
rorl
imulb
pushf
push
xchg
enter
int
cmpsb
lods
xchg
mov
xorl
lea
in
pusha
add
hlt
or
add
add
fnstenv
add
xchg
cmp
test
push
scas
movb
add
je
test
sbb
add
enter
fwait
pop
mov
sbb
cld
add
mov
popa
je
je
pop
and
add
add
nop
enter
data16
mov
movsl
inc
mov
mov
push
mov
adc
fcomps
fsts
and
ljmp
add
add
add
add
add
jae
xor
test
add
ds
xor
in
dec
aam
adc
mov
mov
mov
cmpsl
push
cmc
dec
pop
xlat
ljmp
lahf
loop
add
push
pop
xchg
inc
stos
insl
enter
add
dec
movaps
and
or
movsl
shlb
add
les
mov
orl
cmc
xor
mov
bound
mov
xor
testb
pop
iret
cmpsl
mov
xchg
mov
add
and
dec
stc
test
sbb
mov
lock
add
xchg
add
pop
out
cwtl
out
add
add
inc
xchg
xchg
int3
inc
xchg
cmp
ds
clc
mov
pushf
xchg
fcmovnb
cmp
add
xchg
popf
fldt
sbb
and
pop
sahf
inc
cmp
lcall
add
add
mov
popa
push
sub
add
add
mov
add
inc
add
add
decb
lret
add
add
daa
mov
scas
ja
call
mov
das
sub
sub
in
aas
pop
pop
arpl
xchg
movsb
cltd
add
mov
rolb
sbb
mov
fldl
or
rorl
fwait
aas
cmp
fnsave
clc
or
add
add
ja
mov
pop
mov
fistl
pop
push
scas
adc
fcomp
or
sbb
mov
xchg
bound
add
add
or
add
add
mov
add
sub
mov
jp
dec
push
sub
cmp
shlb
dec
and
or
je
cwtl
mov
push
jo
or
xlat
and
mov
shll
add
addl
add
imulb
jl
daa
sub
add
test
dec
fldl
or
and
xchg
add
add
add
add
add
cmp
add
loop
out
shll
add
add
and
sarl
movsb
ja
mov
imul
ja
lods
out
dec
add
add
mov
inc
fst
cmp
xor
add
cmpsl
cmp
les
pop
aaa
in
pusha
add
arpl
ja
mov
or
adc
add
cltd
ret
test
sbb
fbstp
inc
mov
add
pop
in
imul
inc
push
stos
fwait
dec
add
addr16
sbb
es
out
test
pop
jae
outsl
mov
add
add
push
sub
call
stos
cmp
lods
cltd
jl
lds
add
add
jle
outsl
push
arpl
lea
push
das
jg
enter
outsl
cli
imul
jne
cmc
in
cld
or
jl
jge
xchg
xchg
flds
or
mov
mov
add
add
nop
mov
movb
daa
mov
aad
inc
fidivrl
mov
mov
scas
subb
nop
pop
jmp
add
in
sbb
mov
add
add
insb
add
add
cmp
jb
jp
mov
movsl
sbb
add
add
mov
or
mov
faddl
add
js
mov
cli
ss
mov
sbb
xchg
and
add
add
stos
leave
push
mov
mov
add
add
add
and
mov
mov
rcrb
adc
add
cmpsl
cmp
push
pop
jge
mov
xor
mov
mov
lret
mov
add
jl
icebp
push
sub
ret
les
sbb
and
cmp
mov
sub
js
cmpsb
scas
adcl
cmp
icebp
loopne
mov
push
rcll
dec
fcos
or
mov
test
arpl
int
and
mov
pop
push
mov
or
mov
add
mov
or
aaa
fcomps
jle
cmpsb
popf
movsl
movsl
and
mov
add
add
xor
push
push
outsb
jecxz
inc
cmp
imull
xchg
mov
cmpl
scas
hlt
je
shlb
add
dec
inc
hlt
adc
xchg
stc
mov
xchg
push
lds
mov
fisubrs
add
add
xchg
mov
test
gs
stc
xchg
add
jecxz
cmpsb
cmc
fisttpl
or
mov
clc
ret
jle
fisubs
jmp
dec
out
fidivrs
add
push
xchg
mov
lea
add
pop
fmul
adc
test
add
add
lahf
dec
popf
cld
sbbl
test
add
xchg
popf
mov
shr
idivb
loopne
mov
add
add
sbb
je
je
add
add
mov
popf
xchg
enter
shrl
xchg
arpl
push
sti
inc
rol
push
add
sbb
mov
popf
iret
lret
lods
jg
scas
and
loopne
repnz
lcall
lea
dec
repz
imul
dec
test
add
jg
mov
add
loope
add
pusha
add
and
xor
and
inc
cmc
scas
cmp
dec
imul
add
add
xor
in
jne
push
add
add
pop
xchg
sarl
xchg
add
add
xchg
int3
xchg
inc
add
add
add
js
fistps
mov
sub
cmc
shrb
stos
std
mov
pop
add
add
ja
add
add
push
and
mov
push
arpl
xor
sti
inc
call
mov
subb
mov
pop
fstp
sbb
sub
inc
lock
xor
mov
push
aam
jno
jg
add
aaa
fistps
pusha
add
inc
jnp
push
pop
leave
clc
mov
ljmp
add
pop
inc
xchg
aas
sub
mov
jmp
add
addr16
push
imul
mov
dec
test
outsl
sbb
lods
adc
sti
jns
or
add
add
mov
add
flds
mov
cwtl
mov
add
fmul
push
sbb
add
push
or
add
add
push
adc
mov
sub
add
add
push
lods
lahf
mov
jns
fmul
xchg
add
aaa
pop
test
shlb
mov
popf
jbe
js
jmp
loope
mov
add
arpl
and
add
add
sbb
add
add
mov
mov
jne
mov
int3
jecxz
add
add
add
push
sbb
xchg
push
and
data16
push
cli
cs
add
mov
mov
testl
sub
mov
add
mov
mov
jno
jb
aam
xor
add
rcrb
test
mov
cmc
ja
push
pop
mov
dec
addr16
and
and
and
ret
fbld
mov
add
insl
mov
cmovae
add
dec
cmc
sub
cmpsl
fdivl
aad
js
add
xchg
sarl
icebp
data16
sub
cmpsl
aas
xorl
fstpl
sbb
flds
mov
mov
add
insl
mov
cltd
mov
inc
addr16
les
cmp
cli
cmp
push
fistps
and
xchg
add
add
cltd
orb
scas
jmp
les
dec
add
leave
or
data16
sbb
dec
dec
into
add
inc
scas
mov
and
or
add
add
in
xchg
mov
dec
out
adc
sbb
mov
dec
roll
in
adc
sahf
mull
add
add
inc
repz
test
add
int3
sbb
ljmp
adc
sbb
enter
imul
push
pop
dec
rcll
and
dec
add
add
dec
push
push
dec
imul
add
dec
jno
jb
cwtl
sbb
cmp
gs
or
mov
sub
add
xor
and
mov
cmpsl
jns
add
sbb
orl
pop
lret
mov
dec
lahf
test
adc
lret
fwait
mov
sub
add
add
adc
jo
mov
xor
and
clc
jge
and
imul
or
add
add
jne
and
add
add
mov
mov
loopne
push
sbb
inc
inc
ret
xlat
hlt
in
and
add
add
icebp
pusha
add
add
lahf
lcall
push
aam
or
xchg
movsl
push
adc
ficomps
xchg
sbb
add
pop
das
pop
push
lret
adc
cmp
dec
cmpsl
jbe
jg
les
adc
int
jnp
jmp
fdiv
icebp
lea
es
push
mov
ds
test
ds
clc
cmp
add
add
pushf
rclb
xchg
repnz
stos
or
add
add
enter
mov
stos
mov
jb
pop
hlt
mov
out
inc
add
add
sbb
scas
hlt
mov
add
add
jb
dec
xor
in
add
pop
loope
cld
or
add
icebp
pop
imul
and
add
add
icebp
fmuls
add
mov
mov
clc
jns
ljmp
loopne
jge
mov
pop
mov
sbb
ljmp
push
pop
cmc
jl
add
add
add
add
sbb
aam
jecxz
out
mov
fdivl
add
cmp
push
xor
mov
add
orb
add
inc
and
jle
mov
jecxz
add
add
adc
sub
jbe
cmp
dec
add
add
sub
xor
and
add
add
imull
aam
jmp
and
xlat
test
pusha
add
sbb
push
push
cmp
aad
or
mov
insb
add
add
repz
adc
mov
xor
add
leave
push
xor
aad
or
setb
aas
scas
int3
xchg
mov
pop
xchg
push
or
fcmovnb
mov
cmp
mov
push
dec
mov
lahf
lea
in
mov
add
jae
cli
loop
jae
movsl
popf
mov
sahf
je
repz
mov
xchg
fildll
add
cs
add
add
dec
add
lcall
movsb
cmp
cmp
and
add
add
pusha
add
std
rcrl
ret
loope
xchg
mov
jno
aas
daa
movsb
push
or
pop
je
jns
loop
sub
es
in
lcall
add
iret
jnp
test
js
lods
xchg
adc
sub
xor
lret
cmp
adc
mov
popf
std
clc
push
jl
lods
pushf
ds
lds
lock
add
scas
mov
xor
mov
imul
sbb
cld
clc
ljmp
icebp
sub
add
add
xlat
jbe
das
into
mov
aad
scas
or
mov
popa
xor
push
jmp
pop
pop
clc
rolb
fistpl
cmpsb
out
xchg
iret
jbe
xchg
repz
mov
push
and
aam
mov
aaa
iret
add
add
mov
pop
xchg
clc
jb
addr16
pop
aaa
ss
in
in
mov
jbe
dec
adc
add
test
and
fadd
ds
push
pop
in
notb
lea
xchg
adc
arpl
xchg
hlt
xchg
leave
mov
inc
adc
push
jmp
push
test
cld
and
pop
inc
jl
add
add
xchg
sub
cmp
lcall
insl
stos
jmp
lods
in
out
push
mov
sbb
stc
jg
cmp
dec
add
add
lods
pushf
adc
cwtl
jns
popa
mov
lods
arpl
dec
add
hlt
movsb
outsb
lret
iret
jg
and
arpl
jge
icebp
rorb
pop
inc
ja
or
add
add
dec
fmuls
add
jo
test
scas
ret
leave
sub
je
inc
add
add
add
sub
add
add
add
daa
sbb
mov
icebp
je
pop
inc
movsb
pop
push
mov
add
add
sar
add
inc
loopne
stos
pop
mov
add
pop
jns
add
add
cmp
add
and
sbb
imul
or
add
add
test
andb
add
lcall
add
pop
push
mov
pop
jmp
add
pop
cmc
into
jmp
aam
int3
cmpsb
lahf
cltd
mov
test
mov
add
add
xchg
into
test
mov
inc
add
loop
je
add
sahf
inc
fcmovb
jb
test
sbb
lahf
mov
test
pusha
add
movsb
les
add
add
outsl
movsl
in
test
out
out
outsb
aas
out
inc
pop
jp
push
clc
add
add
add
add
test
cmp
andl
pop
inc
imul
add
fstpl
add
pop
mov
mov
jo
psrad
mov
add
add
push
push
push
stos
sub
add
add
and
mov
add
add
cmp
cmc
aaa
pop
stos
add
cmpsb
or
scas
addr16
jg
mov
gs
aad
mov
add
lods
cltd
mov
add
and
clc
xlat
shrb
add
cmp
add
add
sbb
jge
add
add
add
sets
inc
add
adc
dec
out
push
mov
push
mov
js
pop
push
push
jle
sarb
sub
add
jo
in
ja
in
lods
xchg
xor
sub
add
add
sub
cmpsl
bound
push
pop
ret
xor
xor
pop
mov
ds
xchg
adc
xor
add
add
inc
or
push
jl
out
add
push
adc
add
fnstenv
cmc
int3
loopne
mov
or
outsl
sbb
add
add
outsb
inc
cmpsb
push
imul
mov
mov
int3
insb
add
add
cmp
repnz
xchg
mov
add
jp
iret
jge
and
out
bound
push
jge
call
pop
mov
add
sub
sahf
ret
into
mov
sti
adc
fsubs
mov
scas
cli
pop
aaa
xchg
in
lcall
cmp
and
and
aas
xchg
jecxz
sbb
lretw
pop
sub
sbb
jne
rcrl
les
jno
cmp
or
mov
in
ja
xchg
jbe
arpl
pop
push
sahf
add
add
pop
sbb
add
add
mov
add
cwtl
add
imul
add
add
pop
jae
sub
pop
xchg
movsb
cmpsl
jno
add
test
aad
jo
pcmpeqb
mov
dec
pushf
push
mov
add
add
pop
mov
sub
cwtl
fwait
mov
mov
lcall
jbe
jp
xor
mov
add
mov
push
ror
lds
add
cwtl
std
orb
push
popf
xchg
add
xor
sarb
cmp
test
push
mov
mov
or
stc
pop
mov
sbb
imul
mov
sbb
scas
add
mov
ja
cmp
nop
mov
jns
push
push
xorb
sti
into
mov
mov
mov
test
add
sahf
mov
ja
mov
add
add
add
add
popa
mov
cmpsb
mov
or
add
add
rorb
xchg
call
sbb
ja
insb
add
aad
dec
xchg
sbb
xor
add
add
xorb
mov
jl
push
shr
in
jp
adcb
and
mov
mov
mov
add
add
add
mov
xor
xor
mov
out
test
add
sbb
add
shr
jae
push
jb
mov
mov
add
loop
int
jo
inc
negb
inc
lock
xor
fdiv
in
std
push
out
add
add
dec
add
add
add
add
inc
add
add
mov
add
pop
mov
add
scas
and
andb
sub
mov
jge
sbb
mov
cwtl
icebp
cwtl
push
xor
adc
aad
adcb
add
add
adc
outsl
movsl
cwtl
mov
or
mov
sub
movsl
xchg
mov
and
je
xor
push
pop
mov
add
add
push
fstl
sbb
add
ljmp
dec
ljmp
fstl
mov
add
lgs
movsb
dec
jo
or
add
add
jo
jno
push
adc
xorb
xchg
cs
mov
aam
and
mov
dec
add
add
jl
in
jae
xchg
add
lock
add
add
pop
lods
les
dec
add
add
add
sub
inc
ret
mov
add
mov
xchg
in
insl
pop
test
add
jne
fmuls
rclb
jno
mov
out
test
mov
xchg
test
xchg
lds
add
add
iret
test
add
mov
inc
add
add
lods
dec
pushf
cltd
push
xchg
add
mov
data16
mov
scas
gs
add
adc
test
sbbb
inc
add
add
out
dec
adc
out
cmc
ljmp
and
mov
xchg
push
add
mov
or
xchg
movsl
ja
lret
dec
out
call
add
sub
jl
sub
sbb
fwait
int3
dec
push
addb
out
mov
xor
pop
aam
sub
jno
cmp
arpl
fdivl
mov
int3
fwait
aam
orb
mov
aad
cmc
cmp
loop
in
mov
cwtl
cld
test
mov
jae
cmp
sti
imul
add
mov
pushf
cmp
call
mov
mov
hlt
je
pop
pop
out
xor
jno
adc
xor
jae
inc
cmc
mov
add
add
test
jb
in
dec
pop
sahf
dec
daa
inc
add
movsl
cld
iret
out
push
fwait
adc
sub
mov
mov
add
add
in
inc
xor
subb
mov
add
dec
stos
into
loope
out
ds
mov
fdivp
and
add
out
ret
cs
xlat
rcrl
out
outsb
call
pusha
add
sub
mov
shll
add
add
inc
mov
adcl
xor
jb
xor
add
add
pop
add
add
dec
cmpsl
jo
imul
jmp
jno
aaa
testb
in
dec
xlat
pop
mov
inc
push
rolb
movsl
out
mov
loope
xchg
and
mov
lds
lcall
add
and
clc
sub
add
add
ret
or
mov
stos
and
add
add
sub
add
add
mov
shl
imul
test
push
jne
test
add
addps
sub
add
add
ljmp
add
data16
inc
idivb
jmp
lock
pushf
dec
pop
dec
imul
mov
fisttps
cmp
les
repnz
fbstp
push
mov
add
mov
adc
cmpsl
jne
add
mov
arpl
lea
add
test
push
or
add
add
add
add
sbbl
dec
pop
cmp
test
mov
and
pop
lods
cmp
movsb
into
scas
add
add
add
movsl
pop
inc
sbb
pop
xor
imul
pop
sbb
add
add
fmul
lret
rolb
add
cmp
xchg
push
out
or
sub
add
push
push
stos
pop
push
jne
mov
add
mov
mov
das
jp
add
insl
sahf
movsl
jnp
aam
test
mov
add
inc
scas
loope
jbe
out
jns
pop
out
lds
cmpb
hlt
enter
jle
sub
and
sub
add
call
subl
add
in
pop
lcall
adc
mov
xchg
mov
aam
cmp
mov
xor
aam
pop
icebp
mov
add
add
xor
add
leave
fldcw
ja
aam
jg
sbb
cs
mov
xchg
shll
add
test
fucomip
jp
addr16
jbe
add
lahf
xor
sti
sub
mov
inc
jmp
sar
mov
pop
xchg
outsl
pop
or
add
add
lods
movsb
int
xchg
mov
movsb
es
int3
bound
test
xor
test
nop
jbe
dec
xlat
jne
mov
loope
pop
repz
mov
inc
add
add
xchg
mov
add
add
push
add
sbb
add
add
ja
xor
or
scas
adc
nop
jp
cli
shll
out
loopne
popa
nop
pop
push
fucomp
int3
jae
fcompl
add
jmp
stos
imul
test
test
pop
jge
fidivs
insl
jp
add
aas
jns
je
lods
sbb
add
xchg
fcmovu
lret
xchg
push
fildll
loope
mov
in
mov
aaa
stc
clc
stos
lret
cs
addr16
cld
imul
imul
add
inc
add
dec
pop
inc
inc
add
mov
ss
mov
add
imul
mov
add
inc
push
std
add
cli
sbb
xchg
inc
fcmovu
mov
ret
sbb
test
mov
push
test
hlt
lret
ss
and
sub
cmp
popa
sbb
mov
add
xor
add
mov
pop
iret
and
add
imul
xor
movsb
mov
repz
mov
mov
loop
mov
clc
adc
mov
add
push
sub
add
add
bound
test
insl
xor
ljmp
sbb
inc
fdivl
add
pop
cmpsb
push
adc
mov
test
pop
out
lret
mov
gs
cmpb
pop
test
jge
pop
adc
and
leave
adc
loope
mov
xchg
loopne
push
cli
cmp
add
add
cltd
sub
add
sub
mov
aam
lds
dec
xor
add
lret
xor
xchg
std
mov
cmp
aad
js
lds
dec
add
aam
push
xor
and
add
add
push
mov
lcall
add
mov
js
std
dec
add
add
repnz
add
ret
in
icebp
loopne
clc
scas
mov
xor
mov
ja
sbb
imul
xlat
jo
cmpsb
lods
dec
sti
pop
cmp
inc
es
imul
mov
sub
mov
leave
sahf
push
fisubrs
sub
loop
dec
add
add
and
add
hlt
ss
and
adc
jp
xor
mov
fistps
dec
insl
roll
add
add
into
mov
adc
leave
hlt
add
add
mov
aaa
inc
add
iret
ret
sub
mov
sub
add
mov
pop
pop
jb
mov
add
sbb
lods
test
ljmp
rcrl
push
nop
push
jmp
add
mov
and
mov
xor
adc
xorb
loop
mov
mov
add
mov
dec
xlat
sbb
pop
outsb
dec
clc
fmulp
mov
inc
add
mov
sub
add
add
sbb
cmc
cmp
push
movsl
pop
lds
cmpsb
inc
add
dec
frstor
and
mov
les
sti
inc
add
add
inc
add
add
dec
popa
int3
cmc
addr16
add
xchg
leave
in
cmp
sbb
or
add
add
cmp
mov
xchg
imul
mov
cmp
xchg
jmp
mov
movsb
jb
add
or
mov
dec
repz
mov
lahf
ret
dec
sub
xor
add
sarb
jg
mov
jge
push
test
in
or
inc
inc
mov
jae
sub
xor
aam
jle
aam
movsb
bound
mov
mov
loope
cmc
ljmp
std
push
inc
add
pop
or
ljmp
das
jecxz
cmp
popa
mov
outsb
mov
sti
lods
aam
push
mov
std
sbb
mov
cmp
hlt
cmp
int3
mov
push
outsb
dec
inc
mov
jl
mov
xor
jmp
stos
jne
pop
xchg
dec
pushf
inc
loope
orb
add
test
je
ja
lods
push
das
xchg
xor
andb
mov
in
dec
add
mov
add
add
xlat
imul
lea
sub
add
push
cmp
cwtl
loop
inc
push
mov
jnp
and
add
add
xor
sub
add
add
inc
ror
call
ja
mov
add
add
push
push
ret
or
add
add
sub
sub
and
sbb
mov
mov
push
jns
fwait
wbinvd
mov
add
insl
int
fistpll
lcall
cmp
mov
inc
add
add
cld
inc
int
out
cmp
jmp
das
imul
jmp
pop
testl
mov
mov
pop
sub
add
cmp
jne
add
fdiv
fsts
mov
sarl
dec
adc
dec
nop
lds
add
add
add
add
mov
cmp
sbb
or
ljmp
add
lret
push
shl
mov
dec
aas
pop
push
pop
jl
stos
add
addb
pop
mov
add
in
orb
add
mov
sub
mov
mov
imul
sarb
call
sarb
fildll
jmp
add
add
mov
xchg
dec
pop
loop
add
add
jnp
add
add
lock
in
vunpckhps
sbbb
xor
xchg
adc
xchg
movsb
mov
mov
and
int3
dec
xchg
pop
sub
outsl
mov
cmp
adc
repz
pop
fbld
loope
pop
pop
push
mov
sbb
mov
es
test
out
jle
jno
xchg
pop
xor
test
pop
aam
add
clc
out
and
add
add
add
add
or
adc
loope
sub
mov
inc
mov
fmulp
decb
adc
mov
inc
lds
test
inc
pop
pushf
push
mov
aas
add
add
loop
jo
sub
rcrb
ficoml
add
jno
aas
dec
add
add
add
add
add
mov
xchg
adc
add
add
xor
btl
sub
mov
push
jno
jnp
xor
xor
and
cltd
push
mov
and
and
add
add
cltd
movsb
jg
cmp
dec
add
rorl
dec
xlat
push
mov
movsl
fsubrp
sub
mov
mov
sbb
das
orb
add
clc
jmp
dec
add
add
bound
add
add
jp
inc
dec
pusha
add
add
mov
into
pop
push
adc
xor
arpl
inc
xchg
sbb
jl
add
add
leave
icebp
sti
rcrl
mov
sub
in
orb
fucomip
cwtl
lods
jns
fldl2e
jb
fistpl
cld
mov
pop
notl
push
or
addr16
test
mov
sub
lds
ds
btc
in
cmp
cvtdq2ps
sub
inc
jmp
clc
sbb
add
add
dec
add
add
or
insl
rorb
and
mov
pop
mov
rcr
xchg
daa
xadd
mov
xor
movsl
inc
rorb
in
pop
push
in
dec
sahf
insb
add
add
jae
adc
add
xchg
or
add
add
les
lock
add
add
add
mov
mov
daa
jns
pop
cmpsl
movsl
pop
orb
add
xchg
divl
ja
add
aaa
mov
in
adc
ret
outsb
mov
ret
pop
add
jnp
fdiv
sub
lock
add
add
aaa
push
in
mov
inc
popa
pop
xor
int
push
enter
dec
add
add
add
mov
pop
arpl
mov
add
add
push
pop
dec
outsl
add
mov
add
add
pop
gs
jne
xchg
rorb
add
les
imul
sub
es
cmp
outsl
adc
xlat
sbb
add
add
jge
mov
test
hlt
xchg
ljmp
lds
mov
inc
dec
aas
lahf
pop
add
mov
add
add
popf
dec
jge
mov
cs
sub
dec
jae
pop
repz
pop
push
jae
test
sbb
lahf
mov
mov
push
lret
sub
fmull
mov
dec
dec
and
iret
cmpsl
add
add
add
xor
stc
jo
bound
mov
jge
add
ret
ret
in
jb
xchg
out
test
xorb
add
add
jmp
ja
addr16
jae
test
into
push
scas
mov
add
sub
push
sbbl
and
mov
jge
add
add
movsb
popa
enter
out
cmp
aam
shlb
add
add
add
out
repnz
sbb
push
push
call
enter
rorb
push
fdivr
mov
add
add
fcmovnb
clc
jno
cmp
add
push
xchg
in
shl
subb
ds
cmpsb
jge
xor
cmpsl
je
addb
push
push
sbb
insb
add
sbb
call
add
scas
and
imul
lcall
cld
out
mov
mov
fcompl
xchg
aam
cmpb
test
mov
and
sbb
incb
and
add
add
mov
push
xchg
cltd
lcall
mov
push
adc
scas
jecxz
lods
and
pop
sti
xchg
es
and
add
adc
push
and
flds
aas
xchg
into
xor
daa
jns
add
in
mov
add
sbb
repz
xlat
faddl
mov
lods
in
cs
sbb
movsb
xchg
in
pop
xor
xchg
mov
cmp
xchg
repnz
and
add
add
push
push
or
mov
scas
pop
mov
cltd
ljmp
ret
pop
jl
les
pop
call
mov
mov
insl
mov
or
add
add
cs
or
mov
push
loope
xchg
lahf
cmp
add
cmc
negb
mov
mov
push
pop
or
mov
out
mov
pop
daa
sub
insb
add
mov
adcb
dec
and
sub
mov
xor
mov
add
push
cmpsb
mov
dec
add
add
mov
pop
lock
mov
mov
rclb
add
addr16
xor
dec
movsb
cli
sub
stos
push
cmpsb
or
fwait
cmp
jo
lock
xchg
and
add
add
iret
addb
gs
out
add
add
add
mov
test
dec
mov
leave
cs
add
add
rcr
jbe
stos
in
imul
add
add
add
push
sub
add
into
lret
mov
push
pop
rolb
xor
clc
in
pop
inc
ljmp
lods
xor
cmp
cmp
in
push
jge
jmp
mov
add
loope
push
and
data16
fisubrs
mov
je
cmp
push
pop
mov
hlt
or
add
add
lods
into
enter
inc
push
jl
sti
mov
leave
negb
gs
xchg
and
add
add
mov
push
les
add
jns
fistpl
push
and
add
add
lahf
mov
cld
bound
xor
fidivl
inc
stos
popf
sti
xchg
sub
cs
scas
aad
subb
add
xchg
sbb
add
pop
jg
aam
mov
add
mov
push
cmp
sarl
mov
xor
push
jnp
std
xchg
arpl
add
in
xor
or
add
add
jnp
push
push
push
insl
add
mov
add
add
movb
mov
cmp
mov
mov
add
sbb
insl
test
clc
int
ret
cmp
or
mov
pop
sbb
mov
add
mov
jns
or
sbb
test
and
add
add
add
add
push
push
sub
jmp
mov
sub
add
add
inc
out
push
daa
xor
mov
lcall
add
add
cmp
pop
jae
outsb
insb
add
add
inc
movsl
pop
data16
loopne
popa
cld
clc
in
and
cmp
fstps
push
and
add
add
add
aad
cmc
out
pop
inc
sub
xlat
ret
push
mov
sbb
cmp
loopne
repz
das
cli
sbb
or
inc
and
mov
insl
mov
lock
mov
xchg
and
notb
cmp
pop
fdivrl
cli
sbb
cmpsl
mulb
mov
aad
add
mov
aas
xchg
and
insl
out
scas
and
orb
add
add
scas
inc
and
add
add
or
and
add
pop
fldenv
mov
ret
dec
ret
cmp
int
es
cmpxchg
add
shrb
movsb
insl
mov
add
add
shrb
add
mov
mov
nop
out
insl
popa
sbb
dec
mov
push
pop
jg
shlb
or
jp
cmc
push
pop
fcomi
fdivrl
cld
call
jae
pop
mov
js
xchg
inc
add
sub
jge
jno
cmp
jb
add
mov
dec
mov
and
add
and
repz
cmc
and
out
jmp
movsl
sbb
insb
add
add
data16
ror
inc
ljmp
gs
add
push
orl
mull
movswl
push
push
in
push
into
mov
je
cmpsl
mov
mov
lcall
cmpsl
mov
add
add
or
add
add
ds
lret
mov
and
mov
pushw
jno
inc
add
add
les
lret
mov
sub
add
add
ljmp
add
add
push
std
repz
adc
mov
aad
js
loope
xor
inc
mov
add
jbe
xchg
push
push
cld
lret
ja
aam
ficoms
mov
imul
add
mov
bound
fmull
jge
add
add
stc
in
in
cwtl
ss
ret
add
add
mov
gs
xchg
sbb
add
cli
test
add
mov
insl
push
add
data16
in
sub
adc
mov
mov
pop
sbb
add
add
inc
xorb
add
je
add
add
add
fistpl
push
test
add
add
add
add
fwait
mov
add
mov
andl
add
add
add
add
mov
or
add
add
mov
das
inc
out
dec
add
inc
mov
mov
aad
cmc
dec
sbb
jle
or
and
lods
push
pusha
add
pop
int
cld
popa
push
mov
add
add
add
add
and
add
add
and
mov
dec
xor
test
cmc
or
mov
je
add
add
cmp
mov
or
add
add
mov
jne
xor
aad
lock
test
popa
loopne
scas
lcall
pop
ret
pusha
add
add
subb
adc
inc
leave
subb
daa
mov
xchg
stos
lods
lea
fmull
shll
add
pusha
add
and
roll
xchg
out
imul
clc
shr
push
loope
xchg
push
rolb
sarl
es
adc
add
add
mov
scas
aad
and
mov
add
add
aaa
or
lcall
pop
int3
into
jge
outsl
cmp
mov
shr
sub
sub
rcll
jge
add
add
stos
xor
jne
lret
and
jae
mov
or
add
pop
adc
add
mov
imull
out
in
push
test
add
add
movsb
xchg
rcll
mov
and
xchg
maskmovq
negl
add
add
pop
out
inc
dec
cltd
and
add
cld
pop
test
repnz
addr16
sti
sbb
lods
lea
add
cmp
add
inc
inc
mov
push
test
out
aam
add
add
add
scas
mov
fcmovu
mov
add
add
daa
aad
inc
or
mov
into
shrb
shrl
jle
jecxz
mov
pop
add
mov
pop
mov
cs
add
add
in
jecxz
pushf
sub
mov
jo
push
adc
scas
xor
sbb
dec
popa
lret
lret
inc
xchg
push
addr16
add
xchg
lock
out
or
mov
pop
iret
lds
call
inc
test
sbb
push
ds
sbb
sar
jp
mov
fldcw
scas
into
xchg
add
and
cld
xchg
pop
add
pop
inc
cmp
lret
add
in
in
orl
jno
mov
add
lods
xor
in
mov
add
dec
xor
aas
lea
jb
jp
out
push
push
cs
add
addb
add
in
xchg
cmp
shlb
xchg
push
jl
orl
adc
add
add
add
imul
fwait
aad
inc
jnp
add
pusha
add
or
add
add
push
leave
pop
xchg
jg
les
sbb
xor
movb
mov
inc
push
loope
test
outsb
arpl
pop
mov
and
mov
dec
cmc
add
shlb
add
mov
and
mov
enter
pushf
lahf
pushf
sub
mov
mov
outsb
jb
add
je
push
dec
sbb
pop
xor
outsl
iret
andl
xchg
fwait
arpl
dec
xchg
xor
pop
pop
jg
and
mov
xor
adc
mov
enter
jp
dec
test
push
jno
mov
mov
jp
add
je
dec
pop
sbb
in
sub
add
add
mov
gs
data16
fstps
cmpsl
dec
add
add
mov
add
add
inc
cmc
inc
out
mov
add
sbb
loope
incl
ds
add
movsb
sbb
mov
stos
jp
lcall
data16
mov
jl
jmp
add
add
dec
fdivs
xor
pop
mulb
pop
add
mov
shrb
cwtl
and
mov
add
add
xchg
daa
dec
dec
fsubl
add
xor
cmp
stos
mov
fidivl
fdivrs
and
add
add
mov
pop
lods
lds
outsb
pop
push
mov
pop
xchg
clc
adc
icebp
mov
mov
add
fdivrl
xchg
fisubrs
add
add
cmp
mov
lret
lret
xchg
sbbb
fwait
nop
mov
mov
in
imul
dec
mov
jo
je
ja
mov
popf
mov
adc
fisttpll
mov
jnp
mov
inc
mov
mov
dec
popl
add
lock
mov
add
add
mov
pop
test
out
jle
stos
add
jp
insb
add
mov
std
fwait
pushf
stc
xor
mov
add
dec
cwtl
add
add
imull
data16
push
sub
lret
or
out
adc
mov
je
jo
popf
repz
add
mov
mov
mov
das
setno
add
stos
pop
jecxz
push
adc
mov
push
mov
xor
dec
add
add
add
add
dec
add
add
add
adc
int
cmp
sub
inc
mov
gs
jp
adcb
fists
xchg
add
mov
sbb
scas
mov
sbb
push
or
mov
shrb
test
mov
mov
add
fdivrl
fcmovne
outsl
addr16
imul
add
cld
loope
dec
mov
sahf
xor
cli
inc
xor
out
inc
aad
out
pop
jne
test
or
mov
adcb
add
add
mov
add
inc
push
mov
add
inc
mov
add
add
enter
or
mov
push
call
add
add
out
mov
test
ja
mov
add
add
ds
mov
fcoml
sti
xor
jno
dec
add
inc
add
lcall
mov
dec
xor
in
lock
mov
mov
fcomip
mov
add
add
in
inc
add
add
mov
push
mov
mov
or
add
add
in
popf
xchg
mov
dec
mov
mov
push
push
cmp
cmpsl
jne
icebp
push
cmc
into
sub
add
add
add
out
shr
rorl
xchg
and
mov
mov
arpl
mov
sbb
insb
add
xor
test
mov
inc
mov
jnp
fstps
sub
push
xchg
idivl
add
mov
aas
int3
outsb
fists
mov
cmp
or
cmpsl
out
pop
lods
cwtl
sbb
lahf
xor
add
jge
inc
add
add
jnp
in
cld
adc
ljmp
fbstp
lods
hlt
sub
mov
inc
jecxz
push
inc
fwait
and
ss
xchg
inc
test
lcall
mov
les
add
add
and
add
add
mov
add
add
testl
sub
ljmp
add
add
xchg
outsl
adc
stos
inc
bound
mov
or
add
add
dec
add
cmpsl
dec
int3
mov
add
adc
add
add
sbb
pop
imulb
mov
xor
aas
bound
add
lods
cld
sub
jg
hlt
sub
add
add
es
scas
mov
mov
ljmp
xchg
sub
mov
jl
push
out
mov
xchg
ds
sbb
sbb
iret
out
fdivrs
push
fldl
add
mov
mov
adc
out
mov
loope
mov
sbb
out
test
add
sub
add
push
add
push
pop
out
jne
pop
jo
jnp
add
mov
add
daa
in
mov
adc
cld
sarb
adc
dec
add
add
aad
out
lahf
push
fwait
dec
add
add
mov
or
dec
jae
and
mov
jbe
cmp
sub
fwait
xchg
stos
ja
mov
jbe
aas
call
mov
das
ret
loopne
cmp
sarb
add
or
push
inc
xor
or
sarb
add
add
vmovmskps
insb
add
add
daa
icebp
ja
add
add
mov
adc
cmpsl
dec
add
or
out
lea
inc
dec
dec
lahf
scas
jecxz
jb
pop
jge
add
aas
xchg
pop
xor
popf
dec
iret
fiadds
add
add
xlat
popf
fcomp
jb
push
pop
int3
mov
sub
repnz
cmp
push
fwait
pop
mov
mov
cmpsb
outsb
les
test
rorl
cmp
add
push
jmp
lret
sub
push
jne
mov
rcll
int3
stc
push
xchg
nop
sub
inc
add
add
mov
cwtl
sub
cmp
push
jb
lcall
add
add
xchg
mov
aam
sub
mov
push
andb
jae
xor
pop
mov
andb
mov
add
add
add
mov
add
jae
jp
add
add
push
stc
xchg
pop
pusha
add
add
xchg
pushf
push
les
gs
sbbl
bnd
outsl
mov
push
sub
add
add
xor
add
dec
add
dec
shl
inc
rcrl
xchg
lret
mov
arpl
dec
adc
and
mov
sub
mov
lahf
in
pusha
add
add
dec
add
add
dec
and
push
lcall
iret
notl
inc
xor
pmaxub
mov
into
and
pop
mov
aas
cmp
sbb
jae
add
add
push
repnz
mov
scas
mov
xlat
test
mov
loopne
sahf
bound
xor
in
add
add
out
push
jo
dec
pushf
or
add
add
or
add
dec
out
mov
xor
inc
ja
jge
testb
xchg
jo
stos
dec
xor
add
ljmp
add
inc
push
out
add
test
adc
stos
in
cmp
scas
or
pop
xchg
add
mov
leave
cmpsb
test
push
mov
imul
add
add
sarl
mov
sahf
insb
add
mov
xor
es
pop
adc
inc
dec
push
sbb
loopne
push
xchg
add
or
add
add
mov
cmc
push
ret
imul
sbb
pop
or
add
add
icebp
cs
jne
jmp
and
add
add
mov
or
mov
and
mov
repz
cli
xchg
cmc
in
pop
or
repz
out
mov
sbb
mov
clc
rolb
add
xchg
movsb
cltd
adc
fcmovnbe
stc
lahf
leave
inc
add
daa
stc
imul
sti
loopne
ds
cbtw
inc
inc
icebp
cmp
inc
aas
sub
add
add
xchg
int
lahf
and
mov
jle
pop
aam
mov
pop
dec
add
jb
jge
inc
inc
and
cmp
aaa
insb
add
add
add
xchg
sub
xor
into
fadds
add
icebp
mov
in
sti
mov
add
add
adc
out
add
add
add
jle
lds
add
mov
or
mov
andl
adc
stos
push
shr
push
pop
inc
packsswb
and
push
es
fsubrs
sbb
inc
shl
fdivs
js
adc
hlt
mov
outsl
pushf
mov
sub
mov
int3
sbb
xchg
int3
sub
icebp
jecxz
fstps
or
add
add
mov
in
sarl
aad
adc
loope
cmc
and
mov
mov
scas
mov
dec
insl
sub
addr16
adc
cmp
lcall
add
ret
mov
sti
mov
jae
add
pop
sbb
push
out
sbb
fsts
jl
jmp
clc
fsts
lahf
jge
mov
add
add
insb
add
add
fwait
lock
scas
ja
lret
add
add
lret
inc
in
cli
pop
test
mov
jecxz
lea
rcrb
stos
outsb
shrb
pop
ljmp
mov
jmp
nop
inc
push
cli
sub
cltd
clc
mov
pop
jb
iret
test
inc
inc
rcrb
jp
mov
rcl
outsb
sbbb
push
nop
mov
inc
repz
cmpsb
add
push
or
repnz
scas
out
push
dec
jae
mov
add
add
add
push
or
sarb
push
cld
adcl
jns
mov
outsb
push
jns
mov
adc
jno
mov
mov
pushf
jne
jae
mov
popa
xchg
mov
pusha
add
add
icebp
mov
sbb
movsl
jb
cmc
add
mov
add
xchg
xchg
cmpsl
popf
and
in
push
push
jecxz
cmp
add
stos
dec
pop
xchg
jae
add
mov
test
cmp
and
add
rcl
stc
adc
or
sub
push
fisttpll
jle
and
dec
add
inc
in
cmp
pop
sbb
add
add
sbbb
jl
push
or
push
xchg
dec
sub
add
add
push
mov
add
pushf
xor
test
scas
int3
int
add
add
dec
fwait
dec
add
mov
xlat
movsl
cmpsl
pop
jl
pop
mov
add
cmp
scas
popa
xor
stos
xchg
lret
xchg
xchg
pusha
add
add
fists
push
fdivl
add
movsl
fcmovbe
sbb
add
mov
pusha
add
add
jno
stos
dec
xchg
add
add
push
sub
inc
xchg
add
loope
inc
sub
xor
ds
push
es
sub
push
xlat
test
outsb
push
jno
pop
movsl
or
add
add
pop
outsb
mov
hlt
arpl
mov
jle
movsl
fisubrs
es
pop
jmp
xor
std
das
xor
sub
sbb
repz
add
add
sbb
mov
jmp
pop
arpl
fnsave
add
add
add
add
cmp
add
add
aaa
xor
ds
dec
adc
dec
jle
add
add
xchg
into
mov
cwtl
mov
lret
xor
push
xchg
pop
lret
add
add
and
add
mov
xchg
or
xchg
cmpsb
mov
in
in
bound
add
push
push
test
or
mov
xor
int
lahf
xchg
rorb
add
add
mov
add
add
or
shl
mov
add
add
xor
jae
mov
clc
cmp
movsb
dec
lods
pop
out
sub
mov
add
add
add
add
xchg
xor
add
sub
mov
adc
sub
add
add
adc
mov
add
add
jl
mov
cwtl
jge
jmp
shll
add
add
in
enter
les
nop
iret
or
lds
stos
and
mov
xchg
jo
pop
xchg
pop
push
add
pop
fildl
fprem1
xchg
mov
stc
pop
leave
cmpsl
push
push
imul
sbb
out
mov
ja
in
ljmp
out
push
jg
fsubs
pop
call
in
pop
pop
xchg
adc
pop
cmp
rorl
or
dec
int
and
xchg
jb
mov
add
add
gs
outsl
cld
xchg
outsb
jae
push
or
xor
mov
out
out
add
pop
test
cmpsb
call
and
stos
cmp
inc
jae
dec
add
push
ss
adc
ficoml
add
in
cli
pop
push
outsb
pop
mov
push
xchg
andl
dec
jnp
lret
push
movsb
xor
icebp
push
xor
ss
movsb
add
mov
add
push
add
add
add
mov
ror
xchg
sbb
mov
add
adc
mov
lds
add
in
cwtl
orl
imul
or
cmpsl
add
movsl
cmpsb
push
jbe
push
mov
mov
push
popf
leave
stos
mov
jge
dec
mov
jnp
aad
push
nop
in
mov
jge
stos
sub
mov
cmp
mov
mov
aad
sub
lods
inc
lcall
js
inc
add
cmpsb
out
adc
add
add
scas
imul
pop
mov
push
scas
xchg
jne
sbb
in
inc
xchg
or
lcall
setle
add
jnp
lods
mov
push
fdivr
jg
inc
sarb
sbb
lret
dec
add
add
les
std
xor
mov
pushf
into
adc
add
push
xor
push
cmp
xor
cmp
push
xchg
and
or
push
mov
ficoms
add
mov
dec
stos
add
jl
add
jno
mov
and
add
add
dec
and
out
adc
add
shll
cwtl
xchg
loope
pop
sub
mov
call
mov
add
add
add
out
fdivs
jne
inc
add
add
lcall
inc
ret
test
divb
add
add
add
sub
test
add
add
cmpsb
aas
arpl
pop
ljmp
dec
in
jno
popa
mov
add
add
cmpsb
adc
movsb
and
add
add
add
in
jb
add
add
sub
ja
xchg
xchg
mov
push
in
iret
dec
lock
aas
xchg
push
das
aad
aam
cvtdq2ps
and
add
mov
inc
push
arpl
arpl
sbb
icebp
insb
add
add
sbb
lea
add
add
mov
inc
sub
add
cmp
mov
push
ljmp
cmp
lds
adc
sbb
mov
add
pop
sub
je
add
mov
xchg
or
add
add
jae
adc
pop
dec
add
add
decb
add
add
add
fxch
or
mov
iret
cmp
mov
dec
outsb
fld
push
cwtl
xor
mov
mov
cmc
outsb
lock
xor
inc
iret
jbe
cmp
fbstp
dec
add
push
ss
lcall
push
pop
jno
lret
jno
fcoml
sub
fistpll
das
loop
fcompl
jb
leave
pop
pusha
add
add
xor
cs
mov
jge
shll
add
adc
repz
iret
xchg
push
adc
sub
sub
mov
pushf
push
push
cmp
aad
icebp
in
cmp
movsb
fisubl
xor
testl
add
add
cmp
add
add
test
ljmp
outsb
jg
subb
add
std
xor
xchg
xchg
pop
es
stc
lcall
add
add
dec
aas
mov
xchg
cmpsb
inc
add
shrl
add
stos
pusha
add
add
movsl
jne
xor
sahf
jle
stc
add
add
mov
daa
and
add
add
mov
xchg
in
fincstp
fiaddl
add
pop
xchg
and
mov
push
or
fildll
mov
push
lock
push
fsubs
add
ret
jmp
paddd
inc
add
shll
cmp
adc
out
and
push
push
in
bnd
xor
adc
gs
xchg
xchg
shl
push
inc
inc
dec
dec
scas
movsb
jbe
fmul
stos
lret
addl
dec
or
shlb
push
xor
sub
add
add
pop
and
mov
mov
xchg
das
adc
xchg
mov
mov
call
add
dec
int
jmp
rclb
push
loopne
jnp
and
jnp
dec
add
add
adc
jo
jb
mov
cltd
pop
cli
add
jg
cli
add
inc
jle
push
push
jle
adc
sahf
inc
out
add
add
rcll
shrb
xchg
xchg
inc
xor
jno
inc
mov
dec
mov
add
push
das
adc
xor
cs
jnp
lds
mov
sarl
sub
add
add
add
add
in
and
lds
gs
sbb
add
add
push
sti
mov
cmp
ret
xchg
cs
lods
xchg
cs
xor
dec
mov
add
add
negb
and
sbb
daa
sub
and
dec
cmp
add
mov
jno
add
xchg
je
pop
push
ficompl
ds
movsl
loopne
jecxz
add
sub
add
add
push
jmp
mov
test
or
aam
mov
xor
mov
jnp
cmp
adc
dec
jno
add
add
repnz
inc
mov
inc
mov
pop
aas
in
mov
gs
cmc
mov
add
mov
cli
popf
inc
and
add
add
into
mov
pop
out
xor
lret
xchg
clc
sbb
aaa
jl
lds
rclb
fwait
call
or
add
fimuls
pop
in
adc
add
ja
mov
cli
add
int
inc
ss
insb
add
add
cmp
in
inc
and
add
add
sub
mov
pop
sbb
vandpd
add
ficoml
add
mov
mov
icebp
out
push
jne
nop
xor
popa
nop
or
inc
add
jo
add
add
and
mov
mov
mov
sub
xchg
or
add
add
cld
sbb
adc
inc
add
ror
jno
pop
xor
cmpb
xchg
loop
cltd
push
movsl
sub
mov
dec
dec
push
rol
dec
lea
mov
inc
pop
std
sbb
popf
je
inc
add
add
nop
mov
add
gs
push
movsl
push
push
push
sbb
insl
sub
mov
pop
call
mov
cltd
xlat
mov
popa
lret
inc
push
push
mov
add
add
add
pop
imul
pop
pop
xchg
add
negb
xchg
dec
push
cmp
ds
nop
jecxz
lock
sarb
in
inc
mov
add
outsb
jl
or
add
add
aam
js
and
mov
xchg
xor
fnstsw
jg
movsl
xchg
push
sbb
pop
pushf
xchg
sbb
mov
push
in
aam
jae
sbb
sbb
sar
pusha
add
add
push
test
add
add
cmp
shll
pop
push
pop
je
clc
lea
mov
stos
outsb
fiadds
cmp
xchg
xchg
pop
sub
mov
sahf
cltd
ja
imull
out
xlat
jae
adc
in
shlb
add
jno
jae
lds
loope
std
clc
stc
stos
bound
add
mov
scas
jne
jg
push
sahf
call
fwait
inc
cs
add
imul
pop
aaa
push
pushf
incb
adcl
add
jb
lret
sahf
andb
cmp
lods
into
std
sbbl
add
mov
dec
add
fsubp
push
dec
mov
ja
mov
rcrl
xchg
xchg
xorb
outsb
test
add
mov
test
jno
call
arpl
cmc
out
xchg
cmpsb
daa
iret
dec
jae
loopne
imul
jg
xchg
push
out
cmp
pushf
les
icebp
dec
cmpsb
pop
loopne
jnp
jl
rorl
add
add
pop
mov
pmulhw
test
out
out
add
jmp
stos
leave
aaa
test
add
adc
mov
sbb
mov
and
mov
mov
ljmp
adc
psraw
leave
ficompl
sti
sbb
xchg
mov
fsubrs
add
ret
les
and
aas
jl
jecxz
add
add
mov
mov
lahf
cmp
xlat
push
inc
add
add
sbb
adc
sbb
rorb
test
fadds
add
sarb
mov
nop
je
jle
ficomps
stos
jp
lods
mov
xchg
out
and
add
add
add
add
pop
adc
push
daa
add
jns
pushf
fldcw
adcl
aas
push
in
dec
fwait
lcall
add
inc
addr16
fiaddl
add
repnz
add
jo
add
rclb
fadd
lcall
outsl
cmpsb
ja
add
add
data16
push
sub
mov
cltd
mov
je
cmpb
stos
stos
test
loopne
add
sti
and
add
add
add
add
push
fwait
sti
push
out
pfrcpit1
call
fcomps
mov
add
stos
sahf
or
adc
jns
cmpsb
int
mov
mov
lret
jg
icebp
inc
stc
jmp
cmp
loope
sub
and
push
cmp
mov
push
hlt
mov
and
add
add
test
add
mov
add
outsl
das
call
add
repz
aad
mov
jb
lods
loopne
dec
in
inc
add
adc
dec
xor
sub
mov
add
cmp
jbe
mov
and
add
add
dec
in
jo
scas
pop
dec
dec
jae
aas
inc
inc
test
out
adc
adc
fstl
and
pushf
dec
sbb
lods
jne
sub
add
push
jno
jp
add
add
ficoms
xlat
imull
inc
add
adc
gs
jnp
imul
add
add
and
arpl
add
add
add
scas
push
std
add
mov
lea
lds
add
add
subl
mov
stos
jnp
push
sbb
orb
add
mov
in
pop
les
jecxz
pop
push
pop
and
mov
mov
idivl
pop
stos
xchg
fsubs
in
add
adc
scas
xchg
out
jp
add
pop
mov
mov
das
ds
lcall
pop
pop
in
popf
mov
fcompl
add
add
add
xchg
xchg
hlt
inc
mov
jbe
xchg
adc
js
add
add
arpl
cmp
lods
lcall
stos
add
mov
jp
cltd
add
mov
pushl
cmp
mov
inc
add
pop
fcmove
adc
popf
and
add
inc
pop
mov
inc
pop
mov
lods
adc
jbe
dec
add
cld
add
xor
or
push
and
mov
out
inc
cwtl
mov
add
fisubrs
sub
inc
mov
xchg
int3
stc
pop
sarb
jl
sbb
mov
clc
sbb
sub
testb
dec
insb
add
add
xor
aas
scas
jge
sbb
in
lret
repz
pop
test
in
jp
xor
lret
fldenv
cwtl
jno
mov
inc
push
jns
aas
mov
insl
push
into
xchg
out
jno
outsb
or
add
add
or
mov
mov
test
movsl
xlat
adc
xor
aas
sbb
mov
popf
shll
outsb
and
mov
mov
pop
add
pop
adc
add
add
add
add
test
fwait
mov
and
mov
add
jle
xor
insb
add
add
loope
mov
notb
test
scas
pushf
ret
ljmp
dec
add
add
add
loop
ret
push
pop
inc
push
out
mov
pop
push
jp
inc
out
adc
js
pop
jg
xchg
shl
inc
dec
rcl
sti
jne
ror
lret
adc
add
dec
dec
dec
xchg
and
add
add
mov
push
imul
dec
add
sbb
dec
add
mov
lcall
jbe
out
sahf
rcll
mov
add
or
pop
fnstenv
mov
mov
inc
add
add
notb
add
add
add
popa
xchg
pop
push
roll
add
add
mov
insb
add
add
mov
add
mov
mov
fdiv
insb
add
push
pop
enter
add
mov
movsl
xchg
icebp
inc
xor
push
outsb
add
jbe
rorl
stos
rclb
add
test
ss
dec
adc
mov
cs
push
cmp
pop
icebp
ss
cmc
cmc
sahf
inc
scas
ds
xlat
inc
xor
gs
xchg
dec
out
mov
in
add
sub
add
add
jmp
and
add
mov
dec
inc
add
add
js
mov
add
and
cmp
push
rcrb
xor
cmp
insl
fldt
daa
dec
aam
inc
jecxz
jg
cmpsb
cmpsl
pop
mov
sub
mov
jmp
fsubl
jnp
jo
adcl
xchg
cmpsl
filds
out
fisttps
add
mov
sbb
add
add
loopne
shl
stos
movsb
popa
ret
cmp
inc
add
bswap
jl
sbb
repnz
adc
inc
cmpsl
add
movsb
pop
mov
mov
pop
sub
mov
and
mov
ret
pop
insb
add
add
ds
sub
add
add
push
cmp
cld
lahf
push
int3
xor
cld
loope
push
xchg
add
add
jl
mov
lahf
jl
add
add
jle
sbb
sbb
int
inc
add
add
repz
add
add
sub
add
ss
jb
xor
push
stos
gs
pop
out
test
iret
hlt
sbb
repz
stos
sbb
sub
push
dec
call
pop
xor
mov
into
push
test
stos
sahf
pop
add
add
add
add
inc
mov
xor
roll
and
int3
jno
xchg
mov
faddl
jle
cmp
nop
subl
pop
xchg
leave
bound
ret
cs
pop
cli
out
jl
pop
nop
shll
mov
add
add
add
data16
mov
loop
cmp
mov
jg
sub
std
inc
add
add
add
test
nop
mov
inc
bound
or
mov
out
xchg
out
add
add
mov
lds
xor
loopne
ret
xchg
push
je
in
cmpb
testb
ja
xchg
or
add
add
cmp
mov
imul
sub
add
add
jmp
jb
or
xor
negb
out
sub
lods
xor
add
add
mov
pop
mov
pop
stc
insl
lret
movsl
mov
push
sub
sbb
xchg
insl
pop
xchg
and
pop
mov
loopne
and
jecxz
aad
push
aas
loop
imul
xchg
imul
dec
pushf
lret
push
mov
arpl
popf
cwtl
loopne
nop
jle
in
jecxz
fwait
stos
and
sub
mov
jae
add
sbb
aad
lcall
xor
mov
cmp
adc
aaa
adc
rcr
mov
push
or
mov
add
pushf
cmpsl
ficomps
lea
fmuls
add
add
sbb
push
loopne
xchg
mov
adc
add
add
or
jle
out
jmp
aad
loop
lahf
popf
loopne
sti
addb
int
mov
cwtl
jne
mov
cmpsb
fdivrp
or
mov
add
mov
sbb
js
pop
test
mov
rorl
subb
call
xchg
repnz
stc
into
pop
fstpt
add
ds
ljmp
or
fistpll
push
pop
mov
add
add
add
fistpl
add
add
add
cli
xor
sbb
add
shrb
jp
in
jle
xorb
and
add
add
add
movsl
push
aad
in
mov
call
inc
add
add
add
add
add
push
jno
outsb
push
jbe
loopne
xchg
jle
jg
movsl
leave
add
add
add
adcb
adc
fnstcw
push
or
mov
int
mov
loope
push
inc
mov
mov
cmpsb
arpl
jle
add
mov
push
lret
mov
cmpb
and
mov
testl
adc
or
add
add
add
stc
test
lds
add
lods
push
stos
push
push
sbb
stos
adc
inc
add
mov
mov
into
out
pushl
aaa
loopne
inc
call
xchg
fstpl
push
test
xchg
sbbb
xor
dec
sbb
mov
addr16
pushf
fdivp
add
bound
add
add
or
sbb
popa
inc
adc
call
mov
sbb
cmc
or
pusha
add
add
xchg
cmp
adc
lcall
testb
add
add
imul
mov
mov
mov
adc
gs
pop
movsl
pop
jg
and
add
push
cmp
dec
test
or
add
add
mov
cwtl
cmpsb
push
push
test
pop
mov
xlat
dec
add
add
cmpsb
sbb
add
inc
cli
add
adc
iret
jg
push
lea
add
push
mov
jg
cld
lret
jp
xor
or
mov
subl
xor
add
add
or
std
imul
add
movsl
mov
lock
mov
and
mov
adc
xchg
sbb
fildl
mov
mov
add
add
xor
negl
adc
fistpll
add
add
add
add
mov
sub
add
sub
xchg
cmpsl
arpl
add
dec
add
xor
faddl
in
add
add
add
and
mov
mov
mov
add
cmp
outsl
clc
dec
mov
sub
mov
pop
adc
lahf
mov
sub
sbb
push
push
lods
pop
adc
add
inc
add
add
sarl
mov
mov
xor
xor
sbb
and
jne
jo
xor
lods
push
mov
mov
jns
xchg
mov
dec
mov
jp
add
mov
call
xor
add
sub
mov
mov
push
and
add
add
ret
jbe
push
sbb
inc
dec
call
daa
scas
inc
add
popf
pop
fmul
or
mov
in
push
test
mov
test
ss
mov
pop
mov
mov
pop
jecxz
enter
lds
xchg
xor
pushf
aad
xor
add
add
mov
add
test
jnp
fdivr
data16
push
cmp
add
cwtl
lret
insb
add
add
jns
adc
push
test
push
dec
jmp
popf
dec
imul
add
add
xchg
mov
repz
or
in
xchg
ja
add
stos
lods
sti
mov
sub
mov
inc
xor
jnp
mov
and
inc
and
mov
push
push
ret
sahf
push
xchg
push
pop
or
mov
hlt
cmp
inc
add
add
mov
roll
mov
sub
add
add
add
jno
ja
out
xchg
or
mov
ret
addb
rcrl
cmp
iret
sbb
popf
mov
add
add
or
repnz
add
cwtl
pushf
or
mov
mov
std
stc
adc
cmp
sub
add
add
mov
sub
add
add
incb
mov
lods
ds
pop
test
mov
push
pop
mov
loop
mov
mov
dec
mov
jge
nop
inc
sbb
push
or
movsl
or
add
shl
and
mov
lret
add
outsb
rolb
add
add
jnp
cltd
adc
sub
mov
dec
and
cmpsl
in
mov
movsb
dec
ss
add
sbb
stos
or
cmp
popf
daa
sti
lock
mov
xor
add
add
stc
sbb
mull
test
sarl
pop
test
dec
jns
pop
loopne
or
sbb
pop
xchg
mov
bound
and
mov
add
add
add
imul
andb
sub
flds
push
add
cmp
das
cmp
xchg
pop
dec
push
adcl
inc
add
add
jnp
add
add
in
mov
pop
xchg
inc
mov
jae
mov
jp
pop
mov
in
inc
aam
scas
jnp
mov
push
out
aam
enter
in
push
in
push
push
dec
inc
push
and
add
add
das
inc
and
mov
add
add
or
mov
xor
pcmpgtd
repz
push
mov
mov
cltd
out
mull
roll
xchg
jb,pt
scas
insb
add
in
cmp
sub
add
add
divl
sbb
movsl
or
jbe
cmp
fcomps
add
add
sbb
mov
adc
sbb
dec
test
add
fmul
je
jae
xchg
xor
mov
mov
mov
jl
inc
fidivs
mov
xchg
push
test
mov
sti
dec
sub
pop
inc
dec
in
dec
dec
out
ds
adc
mov
inc
pop
sbbb
add
cmp
add
add
cmp
daa
rcr
fwait
sbb
ljmp
popa
idivl
add
fwait
mov
jno
push
addr16
add
ret
jo
jnp
pop
mov
xor
push
arpl
push
xor
call
or
add
fwait
in
cld
mov
sub
pop
push
mov
fwait
jae
gs
pop
in
sub
mov
arpl
pop
pop
mov
fsubl
mov
lret
xlat
adc
jmp
xor
sub
or
add
add
fists
cld
xchg
jge
add
pop
sub
loope
jg
adc
and
stos
pop
pop
les
jle
cmp
or
add
mov
and
scas
xor
hlt
cwtl
sub
add
add
push
jg
xlat
pusha
add
add
mov
arpl
mov
add
cmp
adc
pushf
xchg
pop
imul
add
pop
or
sbb
bound
mov
sbb
xor
mov
leave
leave
or
mov
push
inc
add
mov
xchg
xchg
add
jecxz
mov
add
cmp
or
mov
xchg
push
sub
and
faddl
andb
out
aas
mov
xor
or
insb
add
pop
addl
mov
loopne
lret
fiaddl
xchg
inc
push
clc
adc
add
add
sbb
mov
int3
cmp
mov
sarb
xchg
scas
cltd
into
mov
pop
sub
mov
xor
imul
add
add
add
pop
scas
aaa
addb
hlt
inc
adc
add
add
pop
dec
jnp
mov
inc
add
add
inc
testb
add
add
nop
rcrb
ret
loop
jp
push
lret
lcall
mov
bsf
or
jp
pop
jbe
jmp
shl
mov
fwait
adc
aaa
cwtl
xor
xor
test
mov
pop
cltd
in
and
lods
mov
add
cltd
xchg
sub
xor
add
add
jp
add
add
dec
inc
add
push
insl
dec
push
dec
mov
sbb
mov
test
add
xchg
adc
arpl
jge
sub
mov
pop
or
mov
pop
test
loop
push
rcrb
es
jmp
xor
lea
push
outsl
inc
push
jns
lds
xchg
inc
in
or
push
insb
add
add
pushf
push
cmp
cli
stos
mov
add
add
or
add
jnp
push
fwait
repnz
add
movsb
fdivs
stc
xchg
jno
out
add
insb
add
lds
add
add
jnp,pn
and
ret
paddusb
mov
adc
imul
mov
mov
fsubrs
mov
call
add
cvttps2pi
mov
in
jecxz
add
mov
mov
lea
and
mov
xor
scas
in
mov
out
jb
push
call
add
out
rcrl
mov
fldt
fldenv
cmc
jg
lahf
xchg
inc
pop
movntq
add
add
jmp
imul
clc
scas
into
pop
ljmp
xorb
xchg
test
daa
xor
push
jo
mov
sub
add
add
add
xchg
das
and
gs
daa
mov
jae
adc
add
pop
dec
add
push
inc
gs
scas
pop
xchg
pop
mov
xor
nop
cmp
pop
fsubrs
insb
add
add
icebp
xor
jg
insl
out
subl
jp
jg
inc
xor
aaa
mov
add
jge
mov
xchg
ja
and
add
add
or
mov
lret
dec
add
mov
out
rorl
jmp
mov
jle
pop
orb
cmp
add
add
and
test
js
xchg
add
add
xchg
nop
mov
jmp
std
mov
adc
jp
shl
pop
sbb
sbb
ficoml
mov
shlb
int3
lods
dec
ret
jmp
pop
pop
sbb
je
sbb
bound
adc
into
ss
call
sbb
xor
xchg
loop
out
das
je
into
mov
cmp
repnz
cli
insl
idiv
jne
lock
out
xchg
dec
ror
xor
xchg
inc
lcall
gs
imul
mov
mov
mov
popf
pop
ja
js
sbb
test
mov
faddl
mov
lock
test
loop
out
add
dec
sti
xor
arpl
imul
mov
jbe
and
inc
pop
les
or
stc
cwtl
push
sub
fists
sbb
fcmove
cmpsb
cmc
and
or
push
and
or
mov
enter
scas
mov
in
pop
pop
jmp
add
add
lds
add
add
add
sbb
mov
add
add
adc
inc
gs
lods
sbb
mov
add
xchg
mov
adc
sbb
mov
ja
jmp
dec
sbb
sti
jecxz
pop
add
mov
je
xor
in
xchg
lahf
sub
arpl
mov
and
mov
aad
test
inc
sub
xchg
das
xor
rolb
fbld
rclb
into
push
mov
sub
mov
data16
add
push
std
jbe
xor
push
gs
push
ds
fisttps
cmc
sti
dec
add
add
inc
push
repnz
jne
inc
xlat
dec
mov
add
and
mov
ja
dec
add
add
clc
mov
pop
scas
sbb
nop
adc
mov
repnz
sub
mov
mov
imul
mov
daa
lret
movsb
idivl
pushf
xor
fmul
insl
push
sarl
fisubl
mov
in
inc
jns
call
cmp
pop
push
mov
add
add
add
mov
lea
mov
cmp
adc
mov
out
iret
popa
bound
xchg
ret
add
jno
add
add
lock
loopne
add
add
pop
pop
scas
pusha
add
add
xlat
pop
add
mov
push
ror
cmp
push
shrl
or
lret
mov
dec
mov
add
add
add
add
dec
mov
push
test
cmpb
mov
clc
mov
ja
cwtl
cmp
xor
cs
ret
add
or
jnp
idivl
jge
cmp
mov
add
add
sbb
movsl
inc
pop
data16
add
push
movsb
cmc
cmp
jecxz
popf
pop
adc
add
stc
pop
fidivl
sub
shll
add
add
mov
mov
mov
outsb
jns
or
insb
add
out
jne
cmp
movsb
jecxz
stos
enter
xor
jb
jl
push
loope
xor
mov
mov
enter
add
add
pop
pop
adc
sub
pop
movsl
adc
mov
lea
call
dec
add
add
cmp
inc
rolb
and
xlat
cld
je
fcomp
aas
cltd
xor
sub
mov
adc
xor
add
jecxz
mov
mov
jno
pop
lods
mov
mov
bound
mov
sbb
jge
jp
xor
inc
jge
dec
add
add
mov
sbb
lea
lret
inc
add
add
mov
arpl
add
add
pop
cld
repnz
sarl
xchg
cld
outsb
xchg
leave
fidivrs
lods
sbb
add
cmp
sbb
dec
lods
or
mov
repz
sub
mov
jb
and
js
lret
adc
mov
outsb
idivl
stos
push
xchg
mov
cmp
sbb
cmpsb
adc
jg
mov
add
mov
xor
add
subl
xlat
in
adc
aad
jb
xor
lcall
sbb
jle
add
loopne
xor
hlt
push
leave
cmp
int3
icebp
sub
add
add
mov
rorb
inc
aaa
ja
push
jmp
push
cmp
add
or
cmp
repnz
adc
pop
fsubr
and
mov
leave
mov
cli
leave
jno
aam
xor
xor
jle
mov
arpl
les
movsb
dec
jnp
sub
mov
mov
out
push
sbb
imul
stc
cmp
jp
int
sbb
adc
add
add
repz
inc
rcll
fstpt
mov
sub
cwtl
and
mov
push
inc
das
rcl
add
out
mov
xorl
insb
add
ljmp
fmul
lods
orb
xchg
push
xorl
aad
lock
or
cmp
add
and
mov
call
adc
adcb
call
xor
dec
add
jecxz
inc
dec
push
mov
int3
push
and
add
add
imul
add
dec
imul
mov
pushf
mov
mov
iret
push
popf
hlt
fimuls
sub
add
push
insl
mov
push
xor
std
cltd
lods
jecxz
fcomps
pop
sub
add
add
add
add
add
add
mov
mov
and
sub
add
add
dec
add
add
aaa
inc
add
add
cmp
cmp
add
repz
call
add
add
add
test
add
add
mov
outsb
jecxz
sbb
sbb
inc
and
mov
mov
pop
and
pop
into
sub
pop
jl
push
dec
add
add
pusha
add
add
roll
cltd
inc
add
arpl
insb
add
add
mov
cmpsb
rorb
mov
test
pop
repz
add
es
xchg
int3
sbb
add
and
xchg
mov
pushf
rorb
mov
movsb
das
mov
in
icebp
push
push
bound
inc
add
inc
rcrb
pop
xchg
iret
add
mov
add
add
jmp
out
mull
lret
out
andb
test
sub
add
add
and
rolb
push
mov
jmp
mov
mov
cld
mov
fistps
mov
outsl
jg
in
cmpsl
test
add
add
pop
mov
rcrb
add
andb
scas
xor
or
hlt
aas
and
cmc
movsl
outsl
push
and
mull
inc
xchg
add
add
mov
inc
gs
add
add
add
sub
lret
xchg
push
push
jl
mov
pop
rcrl
pop
xchg
xor
incb
shlb
das
push
ljmp
add
orl
dec
out
nop
f2xm1
das
push
jle
adc
add
call
mov
mov
loop
push
lcall
add
add
hlt
pop
stos
sub
cmp
cmp
fcmovnb
lret
in
adc
arpl
aad
xor
incb
shll
lahf
lods
imul
mov
xlat
adc
pop
add
inc
lock
sub
mov
adc
pop
xchg
pop
sub
mov
insl
fwait
xlat
shll
jb
fdivs
stc
jmp
out
into
fmuls
add
add
add
inc
mov
xor
leave
push
jmp
fisttps
out
test
cmp
out
cmp
test
xor
add
jg
add
add
out
push
and
add
add
xchg
push
cs
sub
loop
pop
cs
outsb
pop
push
pop
iret
cwtl
inc
out
pop
cmc
ja
stc
inc
clc
shrl
movsb
into
push
add
add
lret
xorb
mov
sbb
aaa
test
mov
adc
mov
sahf
mov
pop
fdivs
mov
ja
mov
add
add
mov
cmp
xchg
popa
push
pop
xor
ficomps
fwait
jecxz
dec
lods
and
fistl
add
pop
enter
ss
add
add
sarl
mov
negb
add
add
subb
pop
mov
add
jno
out
add
add
add
add
rorl
clc
lock
jecxz
pop
mov
jle
ss
and
mov
cli
lret
test
cltd
pop
bound
les
add
or
mov
loope
mov
sbb
pop
xchg
sbb
add
jo
sti
mov
dec
cltd
ret
std
stos
jno
repz
invd
add
add
sahf
das
or
add
add
mov
add
mov
add
add
outsb
dec
in
pop
arpl
sti
jecxz
les
xor
xor
addr16
push
cwtl
idivl
add
add
call
xor
sub
fbld
add
add
cmc
cli
push
scas
lret
nop
into
and
mov
jbe
or
mov
loope
mov
in
fildll
add
sub
mov
orl
lods
scas
lret
jmp
add
mov
add
dec
adc
and
mov
mov
jo
adc
mov
or
cmp
add
je
iret
icebp
orb
jae
fisttpll
xor
add
ret
jecxz
inc
fisttpl
int3
sub
iret
sub
add
add
fwait
adc
xor
in
adc
iret
sar
mov
in
add
std
add
add
mov
mov
je
cmp
add
add
xor
jo
scas
mov
lahf
pmaxsw
add
add
jle
push
mov
frndint
push
cmc
mov
pop
int3
mov
mov
out
lret
inc
add
adc
jecxz
pop
mov
mov
jb
add
add
bound
dec
push
push
out
flds
add
add
mov
add
cmc
push
gs
push
mov
add
add
mov
cmp
xorl
dec
add
add
aas
sbb
inc
sti
dec
add
add
or
add
sub
dec
sub
push
nop
ficomps
add
add
inc
cmp
add
add
daa
arpl
testl
loop
push
sbb
adc
mov
push
mov
test
lahf
subb
jg
imul
les
fisttpl
inc
push
outsl
dec
fstpt
push
ret
inc
mov
push
movl
test
inc
jno
enter
inc
add
add
add
loope
add
insl
push
ljmp
add
add
hlt
mov
pop
fidivs
sub
mov
sub
pop
lds
add
add
mov
mov
jo
mulb
movsl
imul
or
adc
arpl
pop
rcrl
sbb
mov
int3
add
add
add
add
add
add
lahf
and
xor
cmp
mov
pusha
add
add
dec
insb
add
lods
push
mov
inc
jmp
sbb
mov
jle
mov
cmp
mov
adc
movsb
imul
ret
mov
jne
lock
push
push
scas
shrb
add
mov
and
stc
adc
lock
mov
dec
sqrtps
add
add
xorl
ret
fsts
or
dec
popa
ret
mov
sbb
test
jmp
lds
sbb
add
add
cmp
insb
add
add
pop
jns
sti
cmp
dec
inc
inc
add
out
or
mov
mov
mov
mov
add
add
fistpl
pop
adc
xchg
mov
add
pop
rcrb
add
add
add
cmp
mov
pop
sbb
test
add
add
jle
adc
mov
sbbl
mov
iret
mov
sub
add
add
enter
jle
loopne
adc
add
add
stos
hlt
lret
add
or
adc
and
mov
sbb
jp
cli
fwait
adc
push
cmc
push
scas
push
cmp
cmp
in
cmc
pusha
add
add
repz
add
add
fcmovne
dec
add
cmc
xlat
jl
cmp
push
push
imul
mov
add
or
popfw
enter
mov
shl
xor
mov
add
adc
cmp
mov
xchg
sub
mov
xchg
xor
or
mov
mov
jp
outsl
xor
mov
andl
and
add
imul
mov
jecxz
or
mov
add
add
add
pop
sahf
scas
test
in
mov
jne
icebp
add
jle
shlb
add
sarl
inc
adc
add
js
and
mov
mov
outsl
cmp
push
add
add
repz
cmp
push
sbb
pop
mov
mov
sub
mov
push
sahf
int
iret
or
add
add
add
add
jl
bound
sub
add
add
add
pop
and
add
add
outsb
push
adc
cmpsb
push
add
mov
aaa
nop
int3
mov
add
add
fdivs
test
test
inc
dec
add
add
mov
lods
out
movsl
outsb
cmovg
mov
and
add
jno
push
xchg
dec
cmp
or
add
add
adc
xlat
sarl
xor
add
mov
jo
nop
or
ret
pop
int
push
in
mov
into
mov
add
das
pop
mov
mov
ret
fdivrs
xchg
bound
lods
mov
xor
mov
dec
mov
adc
scas
std
aas
mov
lds
mov
int3
jmp
pop
mov
repz
daa
and
mov
xor
ret
loope
add
add
and
and
mov
xchg
xor
enter
add
add
das
pop
stos
pop
ds
add
fidivrs
sti
xchg
add
iret
and
mov
ds
sbb
cwtl
cmpsb
add
add
add
add
je
lret
adc
push
hlt
sti
lds
add
add
pop
adc
add
add
fnstenv
daa
loope
or
dec
cmpsb
retw
cmpb
xchg
loopne
lea
jae
addr16
incb
movsb
pushf
push
sub
add
add
add
call
jae
add
pop
call
sbb
rcrl
mov
data16
cmp
add
imul
and
add
add
adc
push
or
aam
xchg
push
outsl
mov
add
add
inc
push
xchg
lock
cmpsb
cmpsb
scas
sti
mov
pop
pop
mov
add
mov
adc
outsl
int
adc
shrb
add
mov
jne
add
popf
xor
push
int3
clc
or
add
mov
jne
arpl
stos
movsb
sub
push
mov
add
xchg
lea
stos
loope
adc
mov
loop
lret
pop
lret
ja
fidivs
add
add
shlb
lret
inc
push
and
mov
mov
push
mov
jmp
add
add
adc
sub
outsl
aad
scas
sbb
add
xchg
push
fistpll
inc
rolb
jno
fidivrs
pinsrw
fisubrs
inc
mov
jno
cmp
add
cmp
add
dec
add
add
add
mov
hlt
push
pop
fwait
dec
pop
popa
mov
mov
adc
jg
pop
mov
test
adc
or
xlat
add
add
cmp
lret
test
nop
repz
xorb
psllw
add
add
aas
cld
jbe
pop
fistpll
roll
xor
add
add
add
mov
push
pop
pop
rcll
add
mulps
enter
test
lahf
sub
mov
pusha
add
add
jb
mov
add
mov
add
out
add
jecxz
cmp
xchg
imul
and
mov
xor
sub
xlat
repz
push
insb
add
add
rcr
add
add
add
movsb
stos
fnsave
sbbb
into
psrlq
idivb
shrl
bound
jns
out
adc
push
push
mov
or
mov
pop
adc
ss
mov
repnz
arpl
add
add
add
je
cmpsb
sbbb
sbb
jnp
test
xchg
mov
dec
add
jne
sbb
add
xorl
xor
add
push
jmp
add
add
pop
stc
mov
add
add
add
add
inc
add
icebp
rcll
cmpsl
dec
add
add
lahf
int
stos
into
cmpb
mov
arpl
add
add
ret
add
inc
outsl
jecxz
cld
orb
popa
lret
add
mov
cli
jle
dec
sbbl
aas
sub
sbb
cld
push
dec
add
imul
jno
sar
xchg
inc
mov
pusha
add
add
add
mov
call
iret
cwtl
mov
mov
data16
pop
inc
add
aam
cmp
ret
mov
orl
rolb
sahf
dec
add
stos
inc
mov
pop
imul
xlat
lcall
out
jp
repnz
repz
dec
mov
add
add
add
mov
or
add
inc
out
cmpb
loopne
rclb
add
mov
fstpl
add
lods
nop
clc
sbb
shlb
mov
xor
add
add
add
push
xor
mov
out
imull
add
jl
sbb
push
pushf
pop
jo,pt
jb
jle
pop
jmp
je
add
add
dec
add
add
imul
or
mov
xchg
jo
mov
sti
mov
clc
out
jg
jmp
sub
jno
lock
xchg
negl
aam
sub
into
jne
push
pushf
push
dec
add
add
repz
js
aas
je
add
fists
cmp
dec
sarb
jne
xchg
mov
insb
add
lods
clc
ficoms
lret
aad
cmpb
mov
mov
inc
ja
add
add
xchg
xchg
ljmp
mov
iret
mov
leave
cmp
xchg
mov
add
mov
hlt
cwtl
jg
lds
inc
in
sbb
pop
sub
mov
cwtl
jbe
fwait
mov
dec
aad
out
mov
add
add
and
dec
enter
push
mov
jecxz
fstps
add
add
test
fnstcw
xchg
int
dec
mov
xchg
outsl
cmpsl
lretw
test
push
pop
in
inc
in
add
xor
add
add
mov
shrb
outsb
ret
ret
scas
jmp
outsl
cli
dec
rclb
int3
add
xchg
fidivs
mov
pop
jmp
sahf
inc
jns
mov
lods
and
add
add
add
add
jp
mov
sahf
into
lret
mov
test
jg
inc
add
add
dec
sbb
roll
add
add
shll
lds
jmp
lahf
incb
insb
add
add
cmpl
cmp
sub
or
hlt
cwtl
xorl
cwtl
sbb
lock
into
dec
pop
jmp
or
add
add
sub
inc
add
iret
nop
and
mov
pop
inc
mov
aas
imul
test
add
leave
or
add
add
add
xor
stos
mov
in
sar
aas
ret
xor
in
and
mov
pause
mov
pop
xor
mov
cmp
mov
add
add
add
xlat
daa
test
xchg
jmp
inc
add
add
push
es
add
add
clc
sahf
scas
xlat
sub
add
lcall
cmpsl
pop
lock
pop
lds
pop
jmp
xchg
insb
add
mov
add
jl
js
fildl
mov
add
add
push
sbb
and
mov
je
cmpsb
mov
cltd
cli
lcall
add
add
and
add
add
mov
lds
jmp
sbb
add
popf
rcr
aaa
jecxz
mov
fistl
sub
cmp
dec
add
adc
add
dec
xchg
arpl
setb
add
int3
mov
xchg
lahf
or
movsb
stos
and
sub
out
mov
imul
mov
inc
rorb
shll
adcl
mov
push
inc
test
and
sub
mov
add
add
jae
mov
jae
nop
pop
push
pushw
aas
xlat
jmp
cwtl
add
add
add
sbb
and
lock
mov
mov
adc
ffree
dec
mov
pop
lcall
dec
or
mov
pushf
dec
mov
int
scas
jmp
add
add
xchg
lods
repz
add
add
add
ret
fiadds
mov
ds
sti
push
push
adc
jb
dec
add
in
shrb
inc
aad
jle
das
xor
inc
add
add
pop
pop
jl
gs
push
mov
add
add
out
push
cld
shr
xor
fwait
aam
pop
lret
jecxz
and
add
add
pop
pop
adc
add
add
ret
hlt
jo
push
stos
ljmp
lret
xor
xchg
inc
ret
adc
add
or
add
add
sahf
mov
cmpsl
adc
push
es
in
pop
pop
xchg
loope
pop
fcoms
jle
and
dec
xchg
addr16
out
pop
mov
adc
xor
in
lahf
cmpsb
test
aad
jnp
pushf
inc
rcrb
mov
call
sbb
push
dec
and
popa
ja
das
push
mov
insb
add
insl
sub
imul
jo
call
cltd
cmc
pop
inc
xor
add
les
add
mov
add
add
add
cld
push
scas
imul
scas
cmp
cmp
mov
aaa
cltd
mov
adc
test
push
in
imul
adc
lds
fisubs
add
xchg
mov
leave
fcomps
xorb
add
mov
xchg
testb
or
add
add
add
sub
ret
xchg
sub
ss
adc
fprem1
and
or
add
add
dec
inc
xchg
movsl
popf
push
dec
cmp
xchg
xor
jmp
mov
add
mov
lcall
inc
sub
cmp
add
jae
imul
mov
jb
push
mov
ss
mov
fldcw
sub
mov
sbb
cli
enter
fidivrs
adc
inc
lock
nop
out
or
xorl
add
add
lea
jbe
add
adc
jl
sbb
add
add
mov
mov
hlt
out
xchg
aam
and
jmp
in
xor
adc
inc
sti
nop
push
lahf
mov
pop
cmpl
cmp
dec
cli
iret
jl
dec
call
add
add
dec
daa
outsb
fsubrl
mov
pusha
add
add
insl
sti
mov
hlt
push
jae
mov
loope
addr16
adc
jmp
push
out
cwtl
test
pop
pop
lret
xchg
mov
into
loope
or
cmp
jo
movsb
jg
add
xor
and
mov
and
add
add
add
add
add
outsb
mov
or
andl
rorl
mov
jg
cwtl
add
mov
jno
or
insl
push
cmp
sbb
mov
mov
ror
sbb
mov
out
stos
mov
jnp
push
xchg
call
notb
in
cmpb
or
lods
xchg
out
mov
mov
add
sbb
ja
adc
add
or
mov
jae
scas
inc
imul
sub
add
add
mov
sbb
mov
out
mov
mov
add
divl
push
ret
jecxz
out
xlat
insl
fcoml
repnz
aad
mov
mov
iret
pop
xchg
out
mov
jp
inc
add
add
add
add
imul
adc
mov
push
mov
scas
jg
rorb
or
add
imul
add
add
cli
imul
dec
add
add
fisttpl
add
add
xlat
stc
cwtl
xchg
ret
mov
add
or
insb
add
xlat
cltd
mov
ss
or
cmp
out
das
cmp
mov
and
mov
loopne
es
add
adc
cmp
jne
lock
push
les
ds
cmp
loop
scas
test
cmc
mov
int3
fildl
adc
inc
push
sub
test
add
add
lahf
xchg
rcll
lock
dec
add
mov
mov
add
popa
push
pop
call
lret
icebp
shr
mov
rclb
fldt
mov
mov
lea
push
push
std
neg
mov
mov
add
sarb
push
or
mov
pop
bound
ja
mov
sahf
push
push
enter
scas
xchg
test
mov
cltd
sub
mov
jge
xor
cmp
jg
sub
and
xchg
jecxz
add
pop
insl
jle
fsubp
aam
add
add
cmpl
ja,pt
mov
inc
xchg
add
add
add
mov
jb
push
stos
xlat
mov
aas
ljmp
pop
je
sub
dec
add
movsl
adc
aas
xor
add
lret
int
mov
add
add
add
cs
cmpsl
or
orb
mov
add
dec
add
add
cmp
mov
mov
out
in
or
adc
es
cmc
cmp
mov
dec
mov
fiadds
dec
lea
scas
inc
mov
and
or
add
add
call
pusha
add
push
jg
push
mov
sbbb
add
add
cmp
fimuls
ljmp
shll
mov
outsl
add
mov
add
ss
movsl
xchg
adc
add
push
xchg
sub
add
add
pop
sub
mov
std
enter
mov
add
jl
add
scas
and
add
add
clc
bound
not
jns
jmp
lea
pop
sub
push
lods
imul
push
lock
jmp
adc
jmp
push
mov
dec
add
push
jmp
ficoms
xchg
jmp
mov
inc
add
add
repz
cmc
lea
add
jnp
xor
dec
add
loop
adc
mov
inc
add
in
into
mov
add
inc
pop
ds
adc
add
bound
add
add
add
in
iret
in
pop
push
push
test
mov
mov
add
popa
push
dec
add
add
sub
push
sub
add
add
cmp
add
dec
scas
and
dec
or
add
add
mov
or
xor
push
push
push
stos
mov
or
add
add
repnz
mov
icebp
psubusb
add
add
add
mov
outsl
mov
sti
pop
mov
mov
mov
lods
inc
inc
add
add
in
pop
pusha
add
add
gs
add
lret
repnz
mov
add
or
add
add
xor
jns
negb
cmp
sbb
jns
mov
sub
xchg
pop
or
mov
fcomps
jnp
stc
lods
xor
mov
add
add
add
sahf
jmp
test
adc
jecxz
movsb
rcr
lds
add
and
add
add
mov
mov
xor
movsb
inc
add
mov
add
jmp
push
cmpsb
cmpsb
in
mov
iret
inc
inc
dec
add
pop
jmp
add
add
adc
xor
sub
mov
clc
sbb
inc
jge
int3
or
add
add
call
pusha
add
add
add
inc
mov
ret
sbb
pop
aaa
add
fidivrl
jg
shl
pop
xor
add
popa
es
negb
pop
lret
inc
in
ljmp
push
inc
push
stc
mov
stc
push
imul
gs
mov
rcrb
or
add
loop
push
cmc
and
add
add
push
dec
add
xor
mov
mov
dec
in
lds
pop
jl
xor
call
xor
xchg
inc
add
hlt
jne
repz
aam
subb
je
mov
mov
dec
push
call
ljmp
mov
out
mov
push
push
jo
sbb
mov
add
add
mov
or
mov
xor
add
aaa
sti
wrmsr
add
mov
into
enter
out
sbb
and
les
fnsave
xchg
mov
adc
nop
out
push
jns
push
adc
popf
inc
add
add
fcoml
pushl
imull
add
add
cmp
ret
and
cmp
cmpsb
fimuls
xor
sti
sub
cmp
add
xor
add
add
add
dec
mov
or
pushf
mov
sbb
jns
out
out
pop
lods
mov
outsb
xchg
shrl
jne
cmp
add
leave
lahf
push
or
sbb
add
mov
mov
or
jbe
fst
stos
jl
add
add
lret
mov
or
in
scas
and
add
arpl
add
aaa
mov
xchg
ljmp
mov
sbb
leave
ret
hlt
fidivs
lods
mov
dec
add
add
pushf
sbb
pop
lret
add
mov
sbb
popa
xchg
jns
data16
test
rcll
sbb
ss
mov
fists
gs
jno
push
cmc
lcall
ss
test
mov
mov
push
sbb
dec
mov
and
xchg
ficoml
add
add
and
add
add
incb
imul
cmp
push
subl
and
add
add
dec
add
fstps
out
sub
mov
lds
xor
lods
mov
movsl
enter
loop
push
sub
mov
pop
out
gs
cltd
in
fildll
push
repnz
jmp
out
fwait
call
lock
iret
xchg
movsl
or
add
add
add
jo
sub
mov
mov
dec
rcrl
and
mov
sub
mov
xor
jge
sub
add
mov
add
or
mov
stos
mov
ds
leave
loopne
fdivl
mov
add
mov
add
sti
les
std
lds
xchg
lea
xor
es
inc
pop
or
mov
add
xchg
mov
add
inc
lods
push
in
cmp
aaa
sarl
push
or
add
add
inc
pop
clc
push
push
mov
and
int
outsl
fnstenv
imul
mov
fisttps
adc
fsubs
rcll
mov
add
add
fdivr
ljmp
sbb
bound
mov
cmp
fidivs
add
add
stos
jno
sbb
add
add
add
orl
mov
mov
xor
or
add
add
mov
aam
mov
stc
repnz
dec
ss
jae
shl
push
testl
pop
enter
add
mov
add
jmp
xchg
jmp
add
mov
xchg
adc
add
xchg
pop
in
mov
mov
or
add
add
add
mov
insl
or
add
add
out
insb
add
arpl
mov
cmpsl
mov
lret
test
mull
mov
scas
dec
jge
subl
mov
xchg
jge
and
jns
clc
in
push
pop
mov
add
push
int3
push
adc
jno
lock
leave
das
cwtl
inc
pop
push
int
icebp
xorb
in
in
adc
add
xlat
ret
inc
sub
mov
stc
inc
add
jl
push
or
jno
fwait
mov
insb
add
xchg
dec
push
inc
int3
lods
imul
bound
add
add
popf
push
in
mov
cmpsl
mov
fst
in
sub
pop
dec
xchg
or
popf
inc
xchg
imul
fnstsw
out
test
and
push
rorl
add
xchg
bound
daa
leave
pop
mov
add
lret
cli
stos
xorl
add
add
leave
adc
popa
ret
ja
out
mov
add
push
xlat
push
dec
add
add
aaa
jne
in
test
mov
add
add
add
stos
push
xchg
push
push
icebp
cli
add
add
ret
mov
push
stos
in
xchg
adc
andb
mov
adc
add
cmp
mov
mov
xchg
push
mov
sub
add
add
in
addr16
out
mov
mov
push
inc
push
sub
add
add
adc
mov
pop
mov
inc
xor
lret
push
xchg
mov
fstl
clc
in
int3
mov
jbe
mov
sub
in
xchg
jnp
jno
orl
orl
iret
xor
leave
xor
or
mov
das
mov
jns
dec
add
es
rcl
pop
adc
or
add
add
jae
je
repnz
jecxz
mov
or
pop
jecxz
add
add
sub
ss
popf
mov
mov
popf
cmp
aas
push
add
gs
stos
add
cld
and
push
lea
push
loope
sti
cmp
popl
inc
ss
mov
add
add
and
or
add
push
dec
xlat
xchg
push
cmp
add
add
mov
inc
push
dec
ljmp
fstpt
cmpb
add
add
loopne
add
add
mov
add
add
dec
mov
add
jp
sti
gs
sub
cmp
bound
pop
orb
add
add
pop
add
mov
mov
mov
mov
es
or
add
add
cltd
mov
or
add
add
lcall
cld
leave
adc
mov
xchg
inc
add
sbb
ret
mov
pop
cltd
je
mov
pop
mov
add
jno
dec
rcrb
dec
add
add
sub
add
add
add
inc
shl
sub
mov
out
xlat
pushf
imul
push
sub
mov
js
push
push
ss
repz
cld
sbb
mov
mov
xchg
or
jl
int
lea
call
mov
repz
mov
lret
pop
ljmp
imul
jg
leave
les
mov
out
aad
xchg
pop
mov
push
rorl
mov
stos
mov
add
add
loop
fcoml
mov
ljmp
sub
mov
xchg
mov
dec
add
ja
shll
inc
add
pop
xchg
sbb
lcall
mov
cmovbe
push
iret
and
arpl
daa
mov
dec
repnz
scas
out
mov
lret
mov
out
add
into
mov
lret
mov
add
add
add
andl
gs
push
movb
sub
mov
mov
add
add
xor
divl
mov
fstps
fcomp
test
add
aad
in
cmpl
add
add
add
add
mov
pop
mov
xlat
dec
aam
mov
mov
jne
sahf
mov
shlb
sbb
test
imull
add
dec
es
mov
add
sub
jne
sub
add
add
xchg
popf
inc
imul
repnz
out
jae
in
hlt
jne
add
add
add
add
add
xchg
sbb
mov
lret
jge
or
xlat
loop
add
lods
test
jp
add
sbb
in
arpl
add
add
add
add
mov
hlt
mov
fincstp
xor
mov
mov
xor
push
sar
add
mov
repnz
mov
push
outsb
pop
mov
inc
cmc
xor
ret
add
cmc
inc
pop
insb
add
rcr
call
add
add
push
out
repz
cltd
push
inc
add
mov
mov
cld
sub
scas
in
adcb
jg
mov
add
movsl
mov
fistps
daa
xor
in
loope
add
add
sar
jbe
inc
push
cmp
addr16
inc
add
add
aas
jg
cmp
out
cs
mov
mov
imul
push
mov
mov
adc
xchg
es
pop
loopne
pusha
add
and
out
scas
jbe
stos
cmpsl
stos
lds
cmp
popf
out
loope
int3
lock
cmp
sbb
call
push
dec
cmp
add
add
inc
inc
add
add
cli
fistps
mov
jl
rcll
outsb
jae
cli
pop
xchg
repz
mov
and
add
add
xor
and
add
add
add
arpl
fcmovu
inc
push
mov
sub
mov
mov
outsb
rcrb
xor
mov
mov
je
lds
jns
data16
insb
add
add
stos
dec
imul
add
mov
in
mov
add
add
cld
cmp
sub
adc
add
xor
dec
cli
mov
pop
icebp
xchg
imul
jle
xchg
mov
push
and
pop
and
add
out
bound
or
testl
add
call
add
add
add
repz
jbe
push
outsb
mov
movsb
cmpsb
repz
dec
test
nop
call
add
add
mov
add
and
mov
es
subl
adc
loop
ja
mov
inc
add
add
xchg
xchg
and
add
add
add
add
cld
pushf
adc
adc
adcl
add
add
push
and
add
add
or
push
push
daa
cmp
dec
xor
addl
add
add
sub
add
lret
add
xor
adc
adc
mov
mov
mov
add
add
adc
inc
mov
mov
es
cmp
pop
xchg
xchg
mov
clc
sbb
iret
es
add
add
xchg
lret
xchg
mov
mov
rsm
mov
cli
out
cmp
into
fidivrs
jne
xor
inc
pop
dec
cltd
sti
pusha
add
add
add
add
push
sti
mov
lret
mov
mov
out
test
cmpsb
loop
inc
iret
shll
add
sbb
xchg
dec
cmp
push
xchg
or
add
add
add
incl
rcl
push
clc
push
enter
add
adc
cli
test
sbb
scas
xchg
and
adc
add
add
add
add
and
jns
and
push
js
aaa
or
add
add
lock
sbb
add
repz
ja
xchg
pop
sti
jecxz
leave
jp
test
cmp
mov
scas
mov
add
cld
outsb
lahf
jo,pt
dec
add
adc
jno
add
add
fldl2t
arpl
lock
and
or
add
add
add
add
je
test
sub
add
add
xchg
outsl
jb
aad
cmpb
lds
stos
aas
in
cld
add
cs
loopne
mov
jo
jno
xchg
cmp
scas
iret
mov
jp
mov
sub
xchg
inc
xlat
cmp
ret
int
ljmp
lret
pop
loopne
fbld
add
add
add
sbb
loop
in
sbb
sbb
notb
fwait
ror
xor
shlb
jge
cli
movsl
ljmp
mov
iret
inc
xchg
js
pop
loope
out
sbb
jge
enter
add
xchg
inc
adc
lret
adc
adc
divb
inc
xchg
sbb
inc
daa
loope
dec
stc
aad
test
adc
sbb
pop
push
pop
cmc
xlat
pop
negb
dec
pop
test
aaa
rcrl
pushf
jnp
jns
add
add
dec
ds
xor
lret
mov
fwait
jle
cli
mov
enter
or
push
inc
loop
push
jp
dec
mov
les
or
in
add
push
mov
inc
xchg
test
movsl
in
leave
scas
nop
adc
loopne
pushf
fidivrl
add
add
das
dec
inc
add
add
pop
pop
cltd
out
or
add
add
add
inc
adc
jmp
pushf
cmpsb
lea
inc
test
jne
jne
sub
add
add
ret
and
in
setns
mov
aas
iret
add
out
rolb
mov
leave
out
in
jle
shl
and
mov
and
add
add
add
push
jge
pop
popa
xchg
addb
std
dec
add
add
add
mov
jb
movb
das
dec
mov
xchg
add
add
jg
push
je
add
dec
or
fwait
std
insl
or
mov
outsl
inc
mov
sbb
add
mov
dec
imul
cmp
add
push
movsb
das
add
mov
aas
dec
arpl
mov
orl
outsl
jmp
fwait
pushf
shll
std
clc
dec
push
jmp
cld
pop
adc
sub
mov
push
mov
add
ljmp
add
cmc
movsb
add
aas
mov
add
mov
mov
push
or
xchg
insb
add
cli
mov
aam
cmp
sub
lret
outsb
insb
add
ss
movsb
cmc
aam
push
js
jnp
mov
add
bound
sub
add
add
bswap
dec
sub
add
add
dec
clc
bound
add
in
hlt
sbb
fbld
add
add
hlt
pop
adc
mov
xchg
fistpl
aas
scas
xchg
sbb
add
add
lock
aaa
popa
jge
or
jmp
xchg
inc
add
pop
push
movsl
mov
in
push
loop
mov
les
add
sbb
outsb
in
pushf
les
add
jnp
add
add
mov
sbb
push
xor
jo
and
or
inc
and
int
xchg
subb
repz
inc
xchg
aad
dec
mov
add
mov
scas
push
movsl
nop
and
add
add
pop
out
add
add
pop
ficoms
or
cs
popa
push
xchg
mov
loopne
bound
test
add
mov
mov
mov
int3
mov
movsl
pop
arpl
xchg
mov
add
add
adc
mov
daa
adc
add
mov
mov
add
mov
add
add
loop
mov
jmp
add
sub
push
pop
int3
mov
cmpsb
js
sub
add
or
or
add
add
add
and
bnd
ljmp
dec
xchg
cmp
mov
add
pop
nop
push
outsb
nop
je
lret
xchg
jl
clc
jge
ljmp
out
lahf
int
nop
mov
add
inc
jmp
mov
test
movsl
rcr
pushf
lret
push
pop
daa
lahf
xchg
scas
sub
add
add
adc
jle
add
mov
add
cld
jl
pop
jge,pn
incb
jno
inc
hlt
xchg
pushf
fstps
data16
scas
push
mov
stos
and
mov
in
and
add
add
lods
ret
mov
add
cmpsl
repnz
sbb
fwait
pop
xchg
outsb
out
stos
mov
sti
aas
xor
nop
adc
dec
pop
xchg
xchg
pushf
rcrb
add
add
outsl
xchg
adc
add
xchg
sub
add
add
cld
fwait
cmp
add
and
mov
mov
stos
or
insl
aad
fdivs
lahf
add
mov
mov
les
ljmp
xor
cltd
mov
cmp
push
cmp
add
add
push
in
mov
lods
cmp
add
inc
insl
inc
add
add
add
aaa
repz
lock
mov
and
mov
and
adc
bound
push
aaa
or
add
add
add
add
add
loopne
add
jnp
push
mov
cmp
repnz
or
jp
inc
add
add
hlt
or
mov
aam
fcoml
xchg
insl
movsl
rolb
add
sbb
gs
cwtl
lock
xchg
fbld
mov
inc
and
mov
es
mov
adc
add
or
mov
sub
add
add
push
jp
xchg
pusha
add
inc
add
je
icebp
ja
add
add
out
filds
add
add
xchg
xchg
out
sbb
add
jbe
add
arpl
or
roll
or
adc
jo
and
ret
movsb
push
pop
dec
or
and
add
mov
pop
jp
rcrb
jp
mov
push
adc
add
add
aam
in
mov
add
push
push
call
add
add
xor
fists
jmp
mov
sub
xchg
push
ljmp
mov
lods
gs
into
cmp
fwait
jg
lcall
sub
add
add
fildll
add
sub
in
mov
clc
cmp
cli
cli
push
push
push
push
fwait
dec
xor
mov
call
add
daa
mov
jb
jb
in
lahf
icebp
loopne
mov
add
cwtl
pop
jmp
xchg
mov
add
jo
gs
add
mov
pusha
add
add
add
add
shll
add
repnz
subl
cmp
jge
add
add
push
mov
pop
mov
add
add
dec
mov
jnp
jl
cs
in
popa
and
mov
mov
mov
add
lock
add
jge
lahf
hlt
fwait
pop
shrb
push
mov
daa
test
mov
loop
inc
add
add
inc
das
push
adc
push
push
in
adc
add
testb
add
loopne
push
js
idivb
add
add
sub
add
orb
sbb
or
add
add
fisttpl
pop
cmc
adc
imul
sbb
inc
add
add
cmpsl
cwtl
fsts
add
add
add
push
xor
ljmp
mov
mov
hlt
pusha
add
stos
xor
push
mov
xchg
popf
lods
lret
pusha
add
call
inc
into
sub
add
add
push
or
add
gs
inc
clc
roll
add
add
inc
jge
stos
cmpsl
cwtl
and
stos
insl
stos
inc
sub
loopne
jae
js
push
adc
cmpsl
fisubrl
sub
mov
or
add
add
add
or
add
lods
repnz
mov
add
sbb
mov
mov
xchg
test
push
mov
add
add
ja
lods
lcall
jbe
int3
mov
add
add
push
aaa
cmc
push
insb
add
add
pop
mov
popf
sub
sbb
imul
add
jg
push
sub
sub
add
add
loop
add
add
test
lahf
fbstp
mov
test
lret
negl
sub
mov
push
mov
add
add
lret
popa
or
add
and
add
sbb
test
jmp
add
add
out
push
adc
add
pop
or
loope
mov
cmp
add
iret
cld
into
jmp
adc
fwait
sbb
lret
add
add
cs
add
add
pop
aad
js
mov
imul
in
frstor
sar
in
ljmp
in
push
fdivp
pushf
jmp
ss
mov
xor
icebp
xor
je
into
and
mov
and
mov
adc
daa
push
mov
cltd
xchg
dec
sub
movsb
fcompl
add
or
mov
jp
add
add
adc
out
or
jg
out
jne
push
iret
sbb
std
aad
jle
cmp
and
mov
in
sbb
mov
stos
call
xchg
mov
pop
pop
aad
pop
add
leave
mov
add
add
clc
outsl
bound
shlb
add
jbe
cmpsl
lcall
and
add
imul
inc
and
add
push
inc
add
add
int
out
fst
into
std
jmp
cmp
sbb
xchg
out
xor
mov
add
add
add
loope
add
add
adc
in
icebp
mov
add
add
cli
ss
aaa
inc
sbb
push
lds
adc
into
out
adcl
scas
cltd
jge
cwtl
pop
adc
sub
add
add
aas
iret
dec
add
add
cmpsl
lcall
sbb
lods
cs
std
mov
rcll
jge
jge
in
sahf
pusha
add
add
out
out
push
ljmp
test
jl
xor
and
add
cltd
ljmp
movsl
push
test
sub
add
sub
add
add
jmp
jge
push
and
xchg
call
add
pushf
rcl
scas
aas
and
add
add
mov
add
sub
mov
mov
add
popa
xchg
pop
sbb
add
add
mov
gs
adcb
aam
inc
mov
add
mov
add
add
add
aam
mov
mov
xchg
push
jb
arpl
in
xchg
add
or
mov
gs
add
pop
push
jmp
sub
mov
out
cwtl
cltd
ror
xor
inc
add
add
inc
cmp
fisubrl
push
hlt
xor
push
popa
sub
add
iret
loope
add
insl
cld
sbb
and
pushf
xor
test
rcrb
xchg
mov
jl
jo
icebp
out
incl
mov
sbb
out
call
push
out
add
add
mull
and
test
roll
adc
inc
xchg
sub
add
add
cmpsb
scas
push
scas
sbb
mov
cmc
xchg
dec
enter
loopne
xor
push
jecxz
push
sub
add
test
or
inc
add
mov
dec
xchg
cmp
add
enter
insb
add
add
push
adc
xchg
push
cmp
not
mov
imul
pop
cmp
mov
mov
cld
dec
add
add
or
add
add
xchg
dec
add
divb
lock
pop
enter
jne
mov
jbe
ss
adc
cmpl
imul
xchg
int3
sub
out
aad
push
repz
mov
add
add
iret
popa
sbb
xchg
sbb
inc
add
add
add
or
add
add
add
add
mov
mov
sahf
and
cmpsb
data16
sub
mov
mov
stc
mov
fwait
push
in
mov
bound
cmp
push
cmpsl
or
out
push
dec
cmp
adc
xchg
in
ds
jns
ja
push
add
lahf
push
pop
sub
add
add
arpl
cmp
jge
fwait
xor
insb
add
add
jbe
inc
add
add
add
mov
add
add
xchg
mov
ljmp
in
out
scas
push
fucomi
or
add
add
mov
pop
inc
add
add
scas
xchg
xor
daa
or
add
mov
xchg
inc
add
add
pop
xchg
push
add
add
add
jmp
scas
and
add
add
cli
mov
xchg
xchg
sbb
push
pop
jecxz
inc
es
mov
pop
test
dec
jle
jb
and
mov
add
pop
jns
jmp
dec
jb
add
add
pop
push
and
lea
lock
loop
xchg
push
xchg
out
xchg
and
inc
jmp
push
mov
pop
add
aaa
xor
push
dec
jmp
inc
jo
or
lahf
mov
clc
sub
mov
pusha
add
mull
cmp
add
imul
jnp
xchg
stc
lods
xor
add
or
adc
inc
add
add
add
mov
add
mov
fwait
jge
pop
fistpll
aad
fadds
add
insl
das
rol
sub
add
add
add
add
add
lock
insb
add
add
cmp
xchg
adc
stc
inc
and
adc
std
and
jne
xor
daa
sub
dec
sbb
out
jae
add
rclb
xor
rclb
mov
sub
sub
add
add
dec
add
sti
jo
xor
cli
test
xchg
mov
repz
jge
add
add
movl
inc
popa
push
aam
add
add
add
mov
add
add
add
mov
icebp
mov
in
lret
or
add
add
repz
or
mov
jecxz
inc
mul
clc
ss
scas
stos
or
mov
dec
lea
adcb
xchg
add
add
sti
or
pop
test
cli
and
add
add
pushf
jg
pop
sbb
les
add
sbb
mov
xchg
add
mov
fidivrs
rolb
mov
adc
jbe
add
shll
mov
add
mov
add
add
jno
push
adc
pop
mov
ret
bound
movsb
inc
icebp
push
push
mov
xchg
add
add
pop
mov
add
pop
iret
or
aaa
cltd
jmp
mov
xchg
xorb
push
xor
sub
add
out
add
gs
add
add
jge
push
jecxz
adc
les
add
iret
and
add
add
add
out
xor
popa
or
add
add
sti
aas
xor
add
std
sbb
inc
and
add
add
in
insb
add
and
aaa
cmp
imul
dec
pop
and
stos
or
xchg
fsub
call
addl
xchg
arpl
cmp
cmp
cmc
push
dec
mov
push
sub
add
outsl
sarl
mov
stc
push
mov
add
les
outsb
cmp
mov
insl
cmp
nop
pop
das
and
add
add
pop
adc
cmpsb
xlat
inc
je
sbb
out
aad
mov
hlt
icebp
push
sub
inc
add
or
xchg
and
add
xor
testl
loop
outsl
xchg
das
and
mov
mov
int
movlpd
fidivl
pop
xchg
mov
add
mov
mov
xchg
loop
dec
add
add
jle
smsw
popf
jg
stos
mov
add
add
mov
lahf
out
aad
stos
nop
add
in
cli
or
cmc
sub
xchg
ss
stos
movsl
or
add
add
add
stos
lret
pop
and
mov
dec
movsl
xchg
and
add
add
and
mov
shrl
fsubp
lods
adc
adc
mov
les
daa
outsb
gs
mov
ret
inc
xor
adc
insl
inc
xchg
jbe
enter
push
cli
shrb
ret
jecxz
xchg
cli
imul
add
add
and
andb
xor
add
push
lahf
mov
mov
xor
out
dec
jo
icebp
sbb
addr16
repnz
mov
add
cld
sbb
dec
add
fsubrs
mov
add
and
sub
add
add
push
outsl
add
stc
inc
in
es
cmpsl
dec
cli
cwtl
jno
inc
mov
add
add
adc
add
and
mov
inc
sub
cmp
dec
add
xchg
adc
add
jmp
add
stc
dec
add
mov
mov
add
sub
add
mov
repnz
dec
sbb
xchg
sbb
sbb
mov
push
movsb
xchg
ss
fnsave
popl
mov
int3
dec
dec
addr16
mov
add
decb
pusha
add
xchg
inc
push
lret
decl
inc
add
or
std
or
jle
repz
mov
dec
sub
lds
mov
xchg
stc
pop
mov
add
insb
add
ds
fcompl
int3
cmp
aas
sbb
jne
cli
pop
imul
pop
inc
push
imul
ds
fldl
mov
add
xchg
xchg
stos
and
xchg
push
adcb
test
xor
out
hlt
fwait
sub
xchg
add
add
pop
jg
xchg
mov
jbe
mov
testl
sbb
jo
add
xchg
mov
jp
add
mov
xchg
xor
pop
push
ficoms
cmpsb
loop
sub
add
add
adc
lock
mov
sbb
add
cs
mov
add
add
ja
jae
ret
pop
outsb
stc
stos
pop
call
jecxz
je
inc
lea
mov
xchg
pop
fcoms
loope
nop
mov
cmp
dec
and
mov
xlat
push
push
jne
hlt
inc
das
cwtl
stos
mov
add
sub
xchg
test
ds
movsl
fwait
and
mov
push
and
add
push
das
in
push
insb
add
hlt
mov
add
add
add
popa
push
jl
push
mov
lret
into
int
pop
cld
cmp
rorl
add
mov
imul
adc
mov
jo
cmp
aam
jns
jle
add
add
jbe
mov
iret
loope
lds
fimuls
sub
mov
jns
icebp
and
andl
mov
add
inc
cmp
add
add
aaa
lea
add
add
and
add
add
mov
or
add
add
add
mov
cmpsl
jg
add
mov
aam
lret
jb
mov
mov
mov
xchg
jecxz
stos
sub
ret
or
mov
leave
cmp
popf
cmpb
add
inc
dec
lahf
adc
into
cld
rcrb
pop
mov
roll
add
ret
add
add
mov
sbb
rolb
add
shlb
push
dec
add
in
and
pop
adc
in
and
insl
cld
sbb
ret
fistpl
jge
ss
add
add
add
add
jb
add
jge
inc
add
add
add
push
popf
pusha
add
add
outsl
pop
mov
add
add
add
add
add
dec
inc
add
insb
add
push
movsb
mov
lahf
ret
or
push
jmp
push
andb
adc
stos
cmpsl
cmp
js
cmp
js
insb
add
add
test
in
and
cwtl
sbb
mov
es
negl
add
xchg
dec
or
inc
add
test
mov
cs
dec
cmp
add
js
jnp
xchg
loop
sbb
add
add
cpuid
mov
adc
push
inc
pop
mov
push
int
cmp
int
sub
mov
add
add
mov
push
add
or
add
add
fcom
stos
idivl
das
test
inc
add
add
cmpsl
mov
adc
xchg
push
movsb
jb
push
xchg
pop
push
stos
pop
add
add
add
cmp
iret
inc
cli
jle
dec
cmp
sub
add
add
cmp
mov
sub
hlt
orl
add
shlb
pop
fld
enter
jge
in
pop
or
mov
scas
loope
stos
and
sbb
or
outsl
adc
add
bound
add
test
imul
adc
sub
mov
push
fisttpll
xchg
rorb
cmpsl
jb
push
loope
xchg
jl
roll
test
das
add
mov
add
inc
dec
push
jb
lcall
adc
add
sbbl
lods
push
pop
int3
or
jmp
dec
out
jmp
add
jle
add
cli
cmp
add
add
mov
or
jno
roll
add
cmpsb
add
jecxz
sahf
enter
cmp
test
shlb
incl
add
das
test
loope
add
add
inc
sub
mov
xchg
add
je
pop
mov
mov
add
popf
fistps
fwait
push
pop
mov
sahf
fdivr
repz
cmp
pop
push
push
aam
lods
xor
dec
les
add
arpl
pop
bound
add
add
fcomip
fimull
inc
add
out
mov
add
add
jae
jecxz
add
mov
jbe
mov
test
cmp
cmpsb
test
mov
cmp
pcmpgtb
mov
mov
and
add
add
sbb
and
mov
testb
cli
ret
repnz
ss
mov
scas
xchg
inc
dec
pop
pushf
sbb
push
out
dec
jnp
mov
add
add
sub
mov
push
mov
pushf
mov
ja
jecxz
lret
inc
jle
decb
adc
outsl
xchg
pop
lret
aaa
mov
lds
xchg
arpl
mov
adc
mov
lock
out
and
or
mov
stc
ja
sub
adc
sbb
mov
in
out
cwtl
fisttpl
es
fisttpl
sbb
lret
jne
inc
add
add
in
adc
imull
mov
sbb
fidivs
push
cli
sub
add
add
inc
add
lds
aad
jmp
test
fnstsw
movsl
push
and
lods
mov
adc
inc
xchg
ja
mov
add
add
mov
push
add
inc
xor
pop
loop
add
add
jnp
mov
xchg
add
mov
push
imul
aam
mul
sub
aad
cmp
int3
push
fidivs
add
sbb
push
xor
add
add
add
lds
mov
add
cs
aas
jnp
add
mov
xchg
fstl
sbb
mov
in
sub
lods
add
mov
sub
add
add
mov
sbb
into
hlt
clc
inc
mov
xchg
mov
xchg
push
jp
pop
inc
aam
shrl
push
lods
mov
pusha
add
add
stos
stos
push
ret
lret
cmpsl
lcall
das
insb
add
push
mov
add
pushf
push
xchg
jle
sbb
cmp
add
inc
add
push
xlat
movsl
sub
add
add
das
rorl
test
mov
not
out
cld
pop
test
repz
in
aad
out
push
inc
out
hlt
scas
add
mov
mov
clc
andl
ljmp
xor
hlt
in
data16
mov
fsubs
jo
add
dec
imul
jecxz
pop
mov
imul
mov
mov
ja
push
push
push
call
add
and
jbe
cli
popf
es
sbb
jae
daa
fsts
insb
add
add
nop
xor
fistpl
push
dec
fsts
push
popa
xor
jecxz
cmp
std
shrb
push
pop
mov
cmp
push
jp
add
decl
add
add
or
xor
inc
add
and
imul
push
iret
add
jg
and
popa
xchg
pop
jge
and
add
add
fldl
mov
rorb
push
stos
xchg
aad
jl
icebp
ljmp
std
push
ret
xchg
movsl
push
ret
cwtl
mov
lahf
lret
pop
lsl
mov
mov
and
add
add
in
pop
rol
aam
call
rcll
mov
pop
sbb
pop
mov
add
mov
mov
or
ljmp
mov
and
mov
cmp
mov
mov
testl
add
nop
pop
test
or
add
add
lods
push
dec
add
add
and
stc
xor
cmp
add
add
add
push
hlt
pop
mov
mov
add
out
add
add
aam
ja
add
clc
push
stos
outsb
push
jle
out
frstor
jecxz
scas
sub
mov
enter
fdivl
mov
inc
mov
shlb
mov
loop
loop
pop
mov
adc
dec
inc
testl
push
mov
stos
mov
mov
mov
stos
jnp
sub
ficompl
add
es
adc
inc
add
mov
push
and
add
xchg
add
mov
movsb
adc
insb
add
add
ret
jg
xchg
mov
inc
push
push
jne
push
adc
pop
jp
add
add
packuswb
add
jmp
push
jecxz
jmp
addr16
scas
js
pop
add
xchg
in
cmp
mov
shrb
or
cwtl
cmpsl
mov
mov
and
add
les
lods
sub
push
gs
pushf
pop
push
ja
enter
adc
ret
push
jle
jo
or
popa
add
xchg
mov
add
ja
nop
gs
jl
xchg
dec
xor
mulb
fwait
add
jnp
sbb
cmpsb
cltd
movsl
data16
sbb
dec
add
ss
sbb
pop
popa
pop
xchg
mov
addr16
pop
pop
scas
rorl
daa
pop
adc
shlb
mov
ret
ja
bswap
jg
lods
ret
int3
cmc
inc
or
mov
mov
inc
push
dec
jle
lock
sbb
jb
adc
xchg
inc
insb
add
add
add
push
test
push
push
popf
ljmp
dec
inc
flds
movsb
jg
andl
sbb
mov
jp
movsl
pop
stc
lods
fmull
mov
add
add
adc
add
pop
sti
and
into
bound
pushf
push
pop
stos
push
dec
inc
add
push
fmuls
andl
add
add
mov
inc
add
add
or
mov
jb
popa
inc
loop
sbb
add
outsb
dec
dec
mov
pushf
in
mov
out
jns
cs
xchg
pusha
add
aam
xchg
aam
icebp
addb
add
lds
push
cld
push
inc
aas
subb
cmp
push
rorl
add
fsubl
xchg
test
inc
pop
ss
int
pop
push
mov
es
dec
dec
or
mov
cmp
inc
cmp
rcll
mov
loop
ds
insb
add
add
ja
cmp
or
add
cld
mov
sbb
mov
dec
fsubl
add
add
add
filds
and
dec
xor
xchg
sbb
int3
rol
jne
add
add
cmc
hlt
roll
add
add
dec
add
fsubrs
add
shrd
add
add
aam
lcall
add
addr16
mov
xchg
fwait
test
jno
add
jecxz
inc
add
add
xchg
xor
mov
xchg
and
stc
or
inc
push
adc
cmpsl
loopne
push
add
add
inc
ret
adc
loop
je
popl
stos
aam
inc
dec
add
add
pop
aad
ja
dec
adc
ja
xor
add
cmpsb
popa
loope
add
add
add
fsubrs
add
add
sbb
add
adc
push
sub
mov
sub
mov
and
repnz
mov
call
into
rcll
aaa
add
add
jl
xor
inc
add
add
es
dec
rolb
xchg
movsb
cmpsl
jnp
ficoms
jmp
add
xchg
cmp
add
shll
or
mov
ljmp
or
add
add
scas
lds
loopne
lea
dec
out
push
cmp
add
ds
jmp
dec
fisttpl
test
sahf
fucomip
pop
pop
or
mov
mov
movsl
movl
jno
sbb
out
cwtl
lds
jge
out
or
mov
sub
pop
stos
std
mov
test
mov
ret
nop
sub
mov
mov
add
add
sbb
in
cli
out
sub
mov
pop
mov
push
loope
call
add
aad
xchg
lods
xchg
cltd
inc
data16
fwait
and
mov
dec
sbb
inc
or
pop
out
into
add
xchg
add
add
clc
dec
push
add
fldl
add
mov
incb
inc
movsb
inc
add
adc
add
add
add
lds
push
add
add
pusha
add
add
push
clc
jmp
fwait
jge
add
add
add
jecxz
lahf
sub
adc
xchg
inc
sbb
xchg
sub
add
add
filds
xchg
ss
jecxz
jg
mov
in
insb
add
jge
clc
add
add
add
jl
mov
lcall
decb
xor
push
jmp
ja
lcall
cltd
outsb
aas
incb
lea
add
jle
out
lahf
out
inc
outsb
xor
jb
dec
movsl
cmc
data16
cmpsb
jecxz
andb
sbb
add
add
imul
xchg
mov
add
loop
add
add
cli
inc
add
pop
mov
outsl
fdiv
lea
repz
add
jp
aas
jns
add
add
cmp
jo
cmp
xchg
cld
movsb
jmp
ds
add
add
lret
fmull
add
add
cltd
icebp
pop
add
mov
add
add
pop
loope
scas
push
cli
dec
pop
shll
sbb
xor
add
add
push
icebp
pop
jle
cmp
mov
dec
ficomps
rorl
add
add
in
outsb
add
add
loopne
scas
in
pop
pop
ds
sti
push
mov
lcall
sarl
lret
mov
xchg
popa
clc
pop
jno
fwait
add
add
add
add
add
out
ret
inc
stos
test
sub
mov
ret
pop
add
adc
sbb
mov
jg
int
add
push
xchg
enter
fcoml
add
add
and
pop
or
call
add
test
in
push
out
mov
or
add
add
pop
add
add
add
stos
inc
mov
punpckhbw
mov
orps
cmpsl
rcl
and
add
cmp
add
sub
add
add
push
lds
add
dec
add
sbb
ret
pushf
pop
pop
sub
add
add
faddl
aas
cmp
test
add
insb
add
repnz
int
sbbb
ret
int3
xchg
pop
andl
jl
inc
push
stc
pusha
add
sahf
inc
add
push
jno
jnp
fcomi
popa
cltd
push
mov
adcl
add
fadds
fidivrl
out
lea
add
add
je
adc
dec
int3
sub
test
pop
aad
xor
jno
push
invd
add
add
add
lea
mov
mov
push
push
imul
mov
add
add
add
add
leave
jbe
loop
cld
dec
and
popf
add
bound
ret
inc
push
outsl
imull
mov
add
fldenv
mov
jp,pt
stos
daa
adc
mov
mov
jnp
mov
add
add
push
out
repz
pop
inc
add
mov
out
inc
dec
add
mov
lods
out
ljmp
outsl
push
cmc
xchg
add
and
mov
jne
fstpt
adc
out
xor
add
xor
inc
push
xor
push
arpl
int3
and
cmpsl
inc
mov
push
imul
popl
add
add
in
scas
adc
add
add
or
add
add
sub
ret
test
movl
add
mov
push
popa
stc
dec
sti
mov
mov
add
aam
js
mov
jno
dec
jmp
nop
cmp
dec
fadd
inc
inc
mov
std
out
lea
mov
mov
mov
mov
dec
lret
sub
mov
cmp
sub
mov
or
sub
movsl
sub
mov
rcrl
cld
into
aaa
jno
add
test
in
ret
sbb
pop
ss
int3
dec
shl
lahf
mov
mov
push
pop
inc
sub
stc
movl
sbb
cmpsb
scas
lcall
inc
or
add
add
sbb
stos
aaa
xor
mov
jmp
push
jge
add
add
mov
pop
clc
jo
cli
jle
mov
arpl
adc
cs
in
pop
sub
add
add
push
sbb
mov
loop
mov
insb
add
add
sub
push
shlb
ret
push
sbb
add
add
push
bound
add
add
xchg
push
mov
iret
ret
in
in
cld
inc
add
mov
js
cmp
push
shll
mov
dec
add
nop
cmp
dec
jg
cld
sti
sti
fcoml
pushf
push
adc
into
inc
add
add
xchg
repz
adc
xor
ret
jg
fcomps
stos
jbe
and
jno
push
lret
aaa
aaa
clc
pop
inc
add
add
aaa
movsb
pop
and
mov
icebp
sbb
mov
rorl
pop
cs
mov
jp
sti
xor
out
sbb
mov
xchg
jb
pop
fdiv
arpl
add
add
imul
call
mov
mov
out
push
cmpb
adc
ds
bnd
mov
mov
mov
add
mov
push
cltd
fisubrl
popf
mov
mov
ds
add
out
or
add
add
mov
xchg
sub
add
add
add
add
jp
out
add
mov
clc
rcll
int3
mov
mov
in
cli
shl
leave
sub
enter
inc
pop
js
and
add
push
hlt
sbb
adc
icebp
jge
stos
push
adc
cmp
cmc
cmc
mov
js
ds
aam
inc
pop
sahf
fstl
xor
out
push
jns
inc
nop
xchg
pop
jmp
add
insl
inc
xor
jns
stos
outsl
ret
ljmp
mov
cld
push
adc
insl
in
xor
sub
lds
mov
mov
dec
shrl
dec
lret
les
add
loop
cmovbe
add
outsb
push
aas
xor
lret
cmp
in
stos
sbb
nop
dec
add
inc
cmp
fwait
repz
and
scas
or
je
fwait
shl
adc
jb
fwait
sti
sub
cltd
pushf
jne
jae
mov
jmp
ds
ja
aad
iret
dec
xchg
add
add
jbe
dec
test
or
mov
imul
fdivl
lcall
ret
subb
add
push
mov
add
mov
mov
negl
pushf
rcrb
xor
rorb
xor
dec
add
add
mov
mov
ror
aas
mov
fsubr
add
idiv
rclb
mov
mov
mov
testb
dec
lock
out
enter
add
mov
and
mov
sbbb
or
push
test
out
jl
jle
sbb
inc
mov
lret
loop
hlt
lret
popa
jp
jl
add
sub
add
std
cmp
orl
xchg
xlat
outsb
out
sub
add
add
sbb
cmp
mov
mov
in
jns
add
fnstsw
pop
repnz
inc
imul
fiadds
arpl
ret
jbe
or
add
add
add
daa
pop
mov
xchg
fadd
mov
lcall
add
add
dec
xor
cmp
dec
add
add
fsubp
lcall
call
add
add
xor
mul
jle
push
mov
fadds
mov
cltd
or
add
add
popa
scas
mov
cld
imul
add
out
rclb
int
dec
loopne
movsl
outsb
lods
or
add
add
add
add
jns
adc
xor
lock
add
add
pop
mov
add
add
add
pop
notl
jo
add
loop
out
sub
mov
xchg
or
add
add
jg
mov
fsubrs
cltd
lods
push
sbb
jb
jne
pop
mov
hlt
mov
add
add
shll
add
add
inc
add
add
mov
mov
sbb
jnp
dec
jp
add
add
es
adc
inc
and
add
xchg
loopne
sbb
cli
fdivs
jmp
mov
and
fsubrl
add
lods
popa
cli
negl
loope
icebp
sub
mov
xor
sti
mov
lret
mov
cmp
add
add
mov
adcb
jns
bound
add
mov
add
mov
or
add
add
repnz
add
add
add
rolb
lret
leave
push
xor
or
or
shrb
loopne
pop
mov
or
fiadds
in
push
adc
mov
and
mov
add
mov
adc
mov
insb
add
mov
add
add
