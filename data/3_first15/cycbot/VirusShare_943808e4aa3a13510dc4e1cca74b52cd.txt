movsl
loopne
loope
loopne
mov
mov
loopne
andb
mov
movsb
loopne
fwait
test
mov
mov
loopne
insb
test
mov
cmpsl
loopne
push
mov
loopne
imull
loopne
adc
loopne
fsubl
loopne
ret
mov
cmpsb
loopne
out
loopne
inc
mov
loopne
in
mov
loopne
mulb
loopne
push
movsb
loopne
or
loopne
movsl
loopne
movsl
mov
loopne
adc
loopne
inc
movsl
loopne
fwait
cmpsb
loopne
insb
test
mov
test
mov
cmpsl
loopne
outsb
cmpsb
loopne
xor
mov
loopne
mov
loopne
outsb
cmpsl
loopne
popa
mov
loopne
cmp
loopne
mov
test
mov
mov
loopne
mov
mov
loopne
xchg
movsb
loopne
aam
loopne
mov
loopne
and
loopne
cmp
loopne
push
movsb
loopne
push
test
mov
mov
loopne
imul
loopne
cltd
mov
loopne
xchg
mov
cmpsb
loopne
cmp
loopne
cmpsl
movsb
loopne
icebp
movsl
loopne
mov
test
mov
movsl
loopne
push
cmpsb
loopne
in
loopne
dec
cmpsb
loopne
ret
mov
mov
loopne
add
mov
loopne
inc
movsb
loopne
or
loopne
dec
test
loopne
pusha
cmpsb
loopne
dec
cmpsl
loopne
pop
cmpsb
loopne
cmp
loopne
push
test
loopne
ja
loopne
andb
mov
movsb
loopne
and
loopne
cmc
movsb
loopne
dec
mov
loopne
das
cmpsl
loopne
add
loopne
pop
movsl
loopne
cmp
cmpsl
loopne
js
loopne
xchg
test
mov
mov
loopne
sbb
loopne
loopne
adc
loopne
push
mov
loopne
shll
loopne
dec
cmpsb
loopne
or
loopne
sub
loopne
mov
loopne
cmpsb
test
mov
test
mov
mov
loopne
mov
loopne
mov
cmpsl
loopne
lock
loopne
mov
loopne
daa
mov
loopne
inc
test
loopne
pop
mov
loopne
mov
loopne
and
loopne
daa
movsl
loopne
push
mov
loopne
out
mov
loopne
mov
cmpsb
loopne
xlat
mov
loopne
fisubrs
loopne
js
loopne
call
cmpsl
loopne
into
cmpsl
loopne
add
mov
test
mov
mov
loopne
out
loopne
pop
mov
loopne
cmpsl
loopne
inc
test
loopne
pop
movsb
loopne
jb
loopne
sti
movsl
loopne
je
loopne
jge
loopne
out
mov
loopne
push
test
loopne
xor
loopne
or
loopne
jno
loopne
js
loopne
push
movsb
loopne
mov
cmpsl
loopne
sbb
loopne
sub
loopne
jmp
loopne
shlb
mov
mov
loopne
pop
movsl
loopne
inc
mov
loopne
adc
loopne
movsb
mov
loopne
xchg
mov
loopne
push
cmpsb
loopne
mov
loopne
inc
test
loopne
fbld
loopne
dec
cmpsb
loopne
lcall
mov
test
mov
test
mov
mov
loopne
mov
loopne
mov
loopne
mov
movsb
loopne
sti
movsb
loopne
adc
loopne
out
movsb
loopne
test
loopne
xchg
cmpsb
loopne
in
loopne
mov
loopne
cmp
loopne
shlb
mov
mov
loopne
std
cmpsl
loopne
add
loopne
test
cmpsl
loopne
jno
loopne
fwait
movsb
loopne
or
loopne
ljmp
mov
mov
loopne
dec
mov
loopne
outsl
mov
loopne
sbb
loopne
es
loopne
pop
mov
loopne
pop
cmpsl
loopne
aad
loopne
in
loopne
repz
loopne
jmp
loopne
jmp
loopne
sbb
test
mov
cmpsl
loopne
scas
cmpsl
loopne
scas
mov
loopne
jo
loopne
mull
loopne
mov
mov
mov
loopne
mov
mov
loopne
push
loopne
add
loopne
inc
movsl
loopne
aaa
test
loopne
mov
loopne
push
mov
loopne
mov
movsb
loopne
xchg
mov
loopne
insb
movsb
loopne
pop
mov
loopne
or
test
mov
mov
loopne
pop
mov
loopne
andb
mov
mov
loopne
add
loopne
push
test
mov
mov
loopne
dec
cmpsb
loopne
adc
loopne
xlat
test
mov
cmpsb
loopne
repnz
mov
mov
loopne
aaa
test
loopne
mov
cmpsl
loopne
mov
loopne
sub
movsb
loopne
xlat
cmpsb
loopne
sahf
movsb
loopne
mov
test
mov
cmpsl
loopne
addr16
pop
mov
loopne
lcall
mov
mov
loopne
mov
mov
movsl
loopne
inc
movsl
loopne
lods
cmpsb
loopne
mov
loopne
test
test
mov
cmpsl
loopne
and
mov
mov
loopne
imul
mov
test
loopne
daa
movsb
loopne
aas
test
loopne
fsubs
loopne
clc
test
mov
cmpsb
loopne
inc
mov
loopne
push
mov
loopne
fldenv
loopne
icebp
cmpsl
loopne
push
movsl
loopne
jne
loopne
sub
movsb
loopne
dec
test
mov
test
mov
test
mov
movsl
loopne
mov
movsb
loopne
mov
loopne
shrl
loopne
repnz
loopne
push
cmpsl
loopne
outsb
mov
loopne
pop
cmpsl
loopne
mov
movsb
loopne
or
loopne
lods
cmpsl
loopne
loopne
stc
movsb
loopne
out
movsl
loopne
pop
mov
loopne
shlb
loopne
movsl
mov
loopne
daa
mov
loopne
insl
test
mov
movsb
loopne
movsl
cmpsl
loopne
cmpsl
loopne
mulb
loopne
pop
mov
loopne
pop
mov
loopne
cli
mov
loopne
lret
mov
mov
loopne
movsb
loopne
or
loopne
sahf
cmpsl
loopne
or
mov
mov
loopne
in
cmpsb
loopne
pop
cmpsl
loopne
enter
xchg
test
mov
mov
loopne
arpl
loopne
adc
loopne
mov
mov
loopne
sub
loopne
ja
loopne
andb
mov
cmpsb
loopne
sti
movsl
loopne
xchg
movsl
loopne
movsw
loopne
add
mov
movsb
loopne
or
loopne
mov
loopne
mov
mov
loopne
int
loopne
mov
movsb
loopne
fsubs
loopne
cmpsl
loopne
dec
cmpsl
loopne
frstor
loopne
mov
loopne
push
mov
loopne
test
loopne
sti
mov
loopne
shll
mov
cmpsb
loopne
mov
loopne
loopne
loopne
push
test
mov
movsb
loopne
dec
mov
loopne
frstor
loopne
cmp
loopne
pushf
mov
loopne
inc
cmpsl
loopne
mov
mov
loopne
push
cmpsl
loopne
add
loopne
dec
cmpsl
loopne
push
cmpsl
loopne
push
test
mov
cmpsl
loopne
mov
mov
loopne
scas
cmpsb
loopne
fsubrs
loopne
movsb
loopne
fsubs
loopne
mov
loopne
push
cmpsl
loopne
movsb
loopne
and
loopne
dec
test
loopne
jne
loopne
out
loopne
push
cmpsl
loopne
push
mov
loopne
loope
loopne
and
loopne
imul
mov
test
mov
cmpsl
loopne
loopne
test
loopne
popa
mov
loopne
adc
test
mov
movsl
loopne
add
loopne
fbld
mov
movsl
loopne
shll
loopne
loopne
mull
loopne
adc
mov
loopne
jae
loopne
push
cmpsb
loopne
out
loopne
jge
loopne
adc
loopne
xor
loopne
mov
mov
loopne
adc
movsl
loopne
xor
mov
movsl
loopne
adc
loopne
cmpsl
cmpsb
loopne
xchg
loopne
test
mov
loopne
jns
loopne
pop
cmpsl
loopne
popf
mov
loopne
stc
movsl
loopne
inc
test
mov
mov
loopne
aad
loopne
xor
loopne
mov
movsb
loopne
das
test
loopne
cmp
loopne
test
loopne
pop
movsb
loopne
sub
loopne
out
loopne
js
loopne
jbe
loopne
loopne
push
mov
loopne
fisubl
loopne
data16
mov
cmpsl
loopne
popf
cmpsb
loopne
and
loopne
lahf
mov
loopne
sti
mov
loopne
xor
loopne
imul
mov
mov
loopne
loopne
jle
loopne
out
loopne
adc
loopne
shll
mov
mov
loopne
lret
mov
test
loopne
js
loopne
je
loopne
cwtl
movsb
loopne
xlat
cmpsb
loopne
inc
mov
loopne
and
loopne
mov
loopne
aad
loopne
das
movsl
loopne
xchg
movsb
loopne
jp
loopne
cmpsl
loopne
jl
loopne
push
movsl
loopne
mov
loopne
pop
movsl
loopne
pop
test
mov
movsb
loopne
repnz
loopne
dec
movsl
loopne
je
loopne
les
mov
cmpsb
loopne
fisubrl
loopne
jp
loopne
icebp
mov
loopne
movsl
movsl
loopne
andl
loopne
sahf
mov
loopne
pop
mov
loopne
push
test
mov
mov
loopne
std
test
mov
movsl
loopne
imul
mov
movsb
loopne
inc
movsb
loopne
mov
loopne
cmp
loopne
outsl
test
mov
mov
loopne
adc
mov
movsb
loopne
pop
mov
loopne
xor
loopne
daa
test
mov
movsl
loopne
cmp
loopne
xchg
cmpsl
loopne
pop
cmpsl
loopne
mov
loopne
jl
loopne
xchg
cmpsb
loopne
or
loopne
mov
loopne
mov
loopne
add
loopne
scas
mov
loopne
das
test
loopne
jno
loopne
xchg
movsl
loopne
dec
movsl
loopne
mov
loopne
sbb
mov
mov
loopne
sub
loopne
mov
mov
loopne
ja
loopne
jl
loopne
pusha
movsb
loopne
push
test
loopne
and
loopne
mov
cmpsl
loopne
sti
cmpsl
loopne
pop
cmpsb
loopne
add
loopne
das
mov
loopne
pop
movsb
loopne
jae
loopne
out
loopne
adc
movsb
loopne
fisubrs
loopne
cld
movsl
loopne
xlat
test
mov
movsl
loopne
stos
cmpsl
loopne
loopne
loopne
mov
cmpsl
loopne
fldt
loopne
ret
mov
mov
loopne
push
mov
loopne
jmp
loopne
cld
mov
loopne
into
cmpsl
loopne
scas
mov
loopne
lcall
mov
mov
loopne
lock
loopne
xchg
mov
loopne
xor
mov
loopne
xchg
movsl
loopne
mov
loopne
mov
mov
cmpsl
loopne
push
mov
loopne
iret
mov
loopne
mov
mov
loopne
cmpsb
loopne
insb
movsl
loopne
in
movsl
loopne
outsb
cmpsb
loopne
iret
test
mov
test
mov
cmpsl
loopne
jnp
loopne
daa
mov
loopne
shll
loopne
dec
cmpsl
loopne
insb
mov
loopne
imul
mov
mov
loopne
jns
loopne
xchg
movsb
loopne
movsb
loopne
or
loopne
test
cmpsb
loopne
add
movsl
loopne
call
mov
loopne
mov
loopne
jbe
loopne
jne
loopne
loope
loopne
push
test
mov
mov
loopne
cwtl
mov
loopne
sbb
mov
loopne
xor
loopne
movsb
loopne
stos
cmpsl
loopne
icebp
mov
loopne
mov
loopne
shlb
mov
movsb
loopne
dec
cmpsb
loopne
mov
loopne
mov
movsb
loopne
andl
mov
mov
loopne
sub
loopne
inc
movsb
loopne
lock
mov
mov
loopne
xor
loopne
hlt
mov
loopne
add
loopne
cmp
loopne
mov
loopne
lahf
mov
loopne
fisubs
mov
cmpsl
loopne
lret
mov
test
mov
cmpsb
loopne
or
loopne
sbb
loopne
sbb
loopne
icebp
cmpsb
loopne
cmpsb
movsl
loopne
fldenv
loopne
imul
mov
mov
loopne
out
loopne
imul
loopne
fbld
loopne
bound
loopne
test
mov
loopne
pop
mov
loopne
fsubs
loopne
lret
mov
test
mov
movsl
loopne
lcall
mov
cmpsb
loopne
add
loopne
popf
movsb
loopne
push
movsl
loopne
and
mov
movsl
loopne
dec
mov
loopne
and
loopne
cltd
cmpsb
loopne
iret
cmpsb
loopne
frstor
loopne
push
cmpsb
loopne
pushf
movsl
loopne
jmp
loopne
add
loopne
xchg
movsl
loopne
jnp
loopne
outsl
movsl
loopne
pop
cmpsb
loopne
push
mov
loopne
fisubrl
loopne
inc
movsb
loopne
shrl
loopne
xor
loopne
and
loopne
loop
loopne
jb
loopne
push
mov
loopne
fisubs
loopne
test
mov
movsl
loopne
inc
test
loopne
sub
mov
loopne
movsl
loopne
pop
mov
loopne
mov
cmpsl
loopne
sub
loopne
add
loopne
or
loopne
in
movsb
loopne
cmpsb
cmpsl
loopne
inc
movsl
loopne
sub
movsb
loopne
scas
mov
loopne
mov
mov
loopne
xchg
movsl
loopne
mov
mov
loopne
or
loopne
mov
cmpsl
loopne
cmp
loopne
mov
loopne
dec
cmpsb
loopne
rep
loopne
data16
mov
mov
loopne
push
test
mov
mov
loopne
mov
mov
test
mov
cmpsb
loopne
sub
movsl
loopne
in
movsb
loopne
jecxz
loopne
jmp
loopne
ljmp
mov
mov
loopne
repz
loopne
push
mov
loopne
enter
sbb
mov
loopne
xlat
cmpsb
loopne
js
loopne
dec
test
loopne
addr16
mov
test
loopne
les
mov
cmpsl
loopne
xor
mov
mov
loopne
icebp
test
mov
mov
loopne
pop
cmpsl
loopne
jno
loopne
adc
mov
loopne
imull
loopne
mov
loopne
ja
loopne
mov
loopne
shlb
loopne
fsubs
loopne
shlb
mov
cmpsb
loopne
inc
test
mov
test
loopne
push
movsb
loopne
out
test
mov
cmpsb
loopne
js
loopne
iret
movsl
loopne
xor
loopne
loopne
loopne
push
test
loopne
add
loopne
lods
mov
loopne
cmp
loopne
repz
loopne
xor
loopne
and
loopne
mov
mov
loopne
xor
loopne
sub
loopne
scas
movsl
loopne
shll
loopne
insl
cmpsb
loopne
pop
cmpsb
loopne
mov
loopne
jp
loopne
cmp
loopne
mov
cmpsl
loopne
loop
loopne
push
movsb
loopne
dec
test
mov
mov
loopne
and
loopne
fsubs
loopne
sbb
loopne
or
test
mov
mov
loopne
sbb
loopne
fsubl
loopne
pop
movsl
loopne
enter
mov
test
mov
test
loopne
and
loopne
shll
mov
test
mov
movsl
loopne
jg
loopne
push
loopne
pop
movsl
loopne
movsb
loopne
loopne
loopne
or
movsb
loopne
in
loopne
sbb
test
mov
test
mov
mov
loopne
and
mov
test
loopne
sub
loopne
movsb
loopne
pop
cmpsb
loopne
mov
loopne
sbb
loopne
frstor
loopne
mulb
loopne
and
loopne
cltd
cmpsb
loopne
or
loopne
in
movsl
loopne
lods
movsb
loopne
fisubl
loopne
cmpsb
movsb
loopne
push
test
mov
cmpsl
loopne
mov
cmpsb
loopne
pusha
mov
loopne
cmp
loopne
leave
mov
loopne
lds
loopne
pop
movsb
loopne
sahf
test
mov
mov
loopne
cmpsl
mov
loopne
icebp
cmpsb
loopne
lods
movsl
loopne
inc
mov
loopne
inc
mov
loopne
cmp
loopne
fbld
loopne
mov
loopne
jne
loopne
outsl
cmpsl
loopne
sbb
mov
loopne
movsl
loopne
frstor
loopne
xchg
loopne
repnz
loopne
out
loopne
or
loopne
ret
test
mov
test
mov
mov
loopne
pop
cmpsl
loopne
cmpsb
movsl
loopne
push
mov
loopne
andl
loopne
push
cmpsl
loopne
shll
loopne
xcrypt-cfb
mov
mov
loopne
or
loopne
add
mov
test
mov
movsb
loopne
addr16
or
test
loopne
sub
movsb
loopne
popa
movsb
loopne
das
cmpsb
loopne
jbe
loopne
mov
mov
loopne
and
movsb
loopne
mov
test
loopne
mov
loopne
call
mov
loopne
outsl
test
mov
movsl
loopne
add
loopne
fisubl
loopne
je
loopne
inc
test
mov
mov
loopne
leave
cmpsl
loopne
loop
loopne
inc
movsl
loopne
mov
loopne
sbb
loopne
fbld
loopne
jmp
loopne
test
mov
test
loopne
sub
mov
loopne
fwait
test
mov
mov
loopne
or
loopne
in
loopne
movsl
loopne
scas
movsl
loopne
std
mov
loopne
aad
loopne
jbe
loopne
add
loopne
dec
test
mov
movsb
loopne
shll
loopne
pop
mov
loopne
inc
movsb
loopne
sbb
loopne
jne
loopne
loopne
cmp
loopne
mulb
loopne
sbb
loopne
cmp
loopne
inc
test
mov
mov
loopne
pop
mov
loopne
jg
loopne
repnz
mov
movsb
loopne
adc
loopne
loopne
loopne
jecxz
loopne
or
mov
test
loopne
andb
mov
mov
loopne
repnz
loopne
sub
loopne
adc
loopne
test
loopne
lods
mov
loopne
mov
loopne
xor
movsb
loopne
ret
mov
mov
loopne
inc
cmpsb
loopne
inc
test
loopne
mov
mov
loopne
jne
loopne
jg
loopne
push
mov
loopne
andb
mov
test
mov
mov
loopne
movsb
loopne
imul
mov
test
loopne
push
test
mov
mov
loopne
jl
loopne
mov
loopne
lret
mov
mov
loopne
mov
test
loopne
leave
mov
loopne
mov
loopne
in
test
mov
cmpsb
loopne
out
loopne
sahf
cmpsl
loopne
mov
cmpsb
loopne
or
mov
mov
loopne
fisubrs
loopne
xchg
test
mov
movsb
loopne
dec
mov
loopne
adc
loopne
mov
mov
loopne
aam
loopne
stc
mov
loopne
push
movsl
loopne
pop
movsb
loopne
ds
mov
movsb
loopne
mov
loopne
test
mov
mov
loopne
mov
loopne
inc
test
mov
test
mov
movsl
loopne
inc
movsl
loopne
mov
loopne
shld
mov
mov
loopne
enter
popf
movsl
loopne
popa
movsl
loopne
std
mov
loopne
cmpsb
loopne
push
mov
loopne
popf
mov
loopne
icebp
test
mov
cmpsb
loopne
cmpsb
loopne
mov
loopne
xchg
loopne
movsb
cmpsl
loopne
cmpsb
loopne
adc
mov
test
loopne
mov
loopne
repnz
loopne
cmc
mov
loopne
cmpsl
loopne
mov
loopne
cmp
loopne
push
movsb
loopne
cmp
loopne
jb
loopne
aaa
movsl
loopne
push
loopne
jbe
loopne
movsl
loopne
loopne
loopne
xor
loopne
push
movsl
loopne
jo
loopne
sub
loopne
push
mov
loopne
pop
test
loopne
dec
mov
loopne
push
cmpsl
loopne
test
loopne
stc
movsl
loopne
sbb
loopne
jb
loopne
mov
loopne
stos
cmpsl
loopne
push
test
loopne
mov
movsl
loopne
adc
loopne
inc
mov
loopne
and
loopne
sbb
loopne
jnp
loopne
subb
mov
movsl
loopne
adc
loopne
xlat
mov
loopne
cmp
loopne
jo
loopne
mov
loopne
jnp
loopne
push
adc
add
add
dec
test
jmp
jle
or
add
add
jnp
cltd
mov
cmp
in
or
es
popf
and
jo
add
add
cli
enter
adc
add
outsb
jecxz
stc
or
push
mov
mov
xor
add
clc
fucomip
xabort
mov
add
mov
popa
add
push
mov
adc
add
repz
jae
add
lcall
lahf
sub
mov
sub
clc
sahf
in
add
inc
add
bound
add
clc
cmp
jne
xchg
xor
add
cmp
clc
push
add
je
sbb
xchg
jne
clc
add
add
add
add
stc
sbb
imull
data16
xlat
test
int
clc
popf
imul
add
lods
mov
test
out
das
jecxz
es
out
ret
clc
in
inc
add
push
call
add
inc
add
mov
mov
clc
dec
and
clc
int
sub
sub
mov
mov
mov
insl
fnstenv
repnz
jecxz
cmp
scas
inc
add
dec
push
add
shrl
clc
and
add
scas
fsubl
xabort
add
push
pop
sub
clc
out
and
add
add
dec
cmp
jl
xchg
jno
add
add
inc
clc
data16
out
dec
dec
aas
or
add
add
leave
cmp
add
clc
movsb
clc
sar
inc
add
mov
xor
add
cltd
sub
add
outsb
lret
xor
add
stos
and
add
clc
lahf
sar
ljmp
jnp
add
flds
add
push
insb
mov
xabort
clc
and
add
clc
and
out
push
cld
pop
cwtl
notl
clc
icebp
cltd
push
clc
vmovhps
jecxz
add
clc
mov
bound
add
clc
dec
jb
add
clc
cmp
clc
dec
cmp
cwtl
mov
dec
mov
add
push
add
mov
xor
lods
pusha
add
dec
inc
add
mov
clc
aaa
add
js
clc
xchg
sbb
add
add
push
jecxz
cmp
clc
add
add
add
sbb
mov
cmp
repz
fs
xchg
insl
jg
fs
ja
cmp
jl,pt
negb
test
add
xlat
shlb
imul
clc
inc
add
mov
add
cmpsl
clc
sub
add
rcrb
scas
cmpsl
clc
or
clc
stos
ds
clc
fsubs
clc
ds
aad
clc
fwait
sbb
add
inc
clc
lcall
add
sar
xor
add
add
iret
fldt
pop
inc
add
test
clc
inc
add
push
clc
sub
in
cmp
xor
add
lcall
clc
cmpsl
clc
sar
shl
fisubrs
add
popf
sbb
outsl
cmp
add
pop
fs
ret
clc
mov
add
aam
clc
pushf
cmp
clc
stc
or
daa
clc
in
adc
add
test
xlat
cmp
clc
stc
aaa
stc
add
add
out
mov
add
bound
add
clc
in
sar
push
add
jmp
repnz
insb
inc
add
js
fcom
fildl
add
cld
pop
dec
fldl
add
lea
in
and
and
add
clc
movsl
clc
add
adc
add
clc
cmp
clc
icebp
push
mov
pop
fucom
clc
ret
clc
cltd
shrb
lahf
stc
gs
mov
add
add
add
ja
jle
lahf
scas
and
mov
stos
add
add
clc
loope
jmp
clc
mov
push
notb
add
clc
loope
idivl
clc
or
and
add
idivl
push
add
xchg
inc
add
sbb
sahf
cwtl
mov
cmpsl
clc
stc
leave
testb
clc
sbb
mov
clc
aaa
dec
jne
xor
add
dec
add
add
inc
clc
xchg
or
cmpsb
clc
dec
adc
mov
sub
clc
incl
add
clc
lock
add
push
add
cmp
add
mov
add
cmp
clc
or
sbb
pop
push
clc
fidivrs
enter
add
ret
dec
leave
movsb
clc
xlat
pop
dec
fidivrl
xor
add
add
stos
in
mov
movsb
clc
rcr
inc
clc
or
fbld
add
inc
add
cmp
clc
es
pop
clc
cmpsb
clc
sbb
add
lahf
push
cli
mov
add
cmpsl
clc
xchg
or
clc
push
add
jmp
mov
add
mov
setnp
xchg
cltd
xchg
outsb
stos
jb
add
test
clc
inc
add
inc
add
cmp
and
add
add
push
sbb
cmpsb
clc
ljmp
xor
add
icebp
mov
adc
add
clc
arpl
add
sbb
ficomps
xchg
icebp
xor
add
push
push
pop
dec
rorl
clc
gs
or
ret
clc
push
jb
add
int3
fisttps
inc
add
jge
aas
dec
xchg
cwtl
cmp
int3
ret
data16
popf
and
add
sbb
add
insb
pop
jo
add
clc
cli
mov
pushf
inc
add
jns
xor
add
scas
mov
clc
fs
out
xor
add
jbe
repz
cld
nop
mov
mov
push
add
add
add
clc
push
es
cmp
clc
push
scas
mov
hlt
sub
fwait
adc
add
clc
inc
add
ds
add
add
out
mov
mov
clc
cmp
add
clc
push
jns
sub
sub
cmp
pop
lret
clc
lret
mov
xor
add
dec
loop
clc
xchg
cmp
clc
cli
inc
clc
jnp
xchg
mov
imul
clc
xchg
sub
xor
add
clc
dec
push
add
scas
popf
and
add
add
es
mov
sar
cwtl
inc
clc
fdivs
sub
movsl
clc
lret
cli
dec
into
bnd
add
add
mov
pop
das
insb
sub
clc
jecxz,pt
cmp
pop
clc
nop
notl
add
fs
hlt
dec
pushf
je
loope
mov
push
clc
jo
add
cmp
aam
fstps
clc
jne
and
add
lahf
pusha
add
inc
add
push
jae
add
cmpsb
clc
aas
out
xor
add
clc
cs
jmp
clc
xchg
movsb
clc
jp
mov
clc
xbegin
add
add
pop
push
jnp
fiadds
add
iret
push
int
xor
add
jge
test
clc
pop
ds
clc
icebp
inc
add
fisttpll
add
push
add
and
add
dec
cmp
clc
xchg
mov
add
dec
jecxz
gs
cmp
inc
add
jns
sar
nop
mov
xlat
enter
clc
dec
mov
cmpsl
clc
jl
or
js
sub
out
in
adc
add
xor
add
mov
clc
xor
add
mov
add
add
cmp
xor
add
clc
jno
add
sub
test
push
cmp
fildl
add
dec
pop
test
adc
test
sarl
clc
pop
push
xbegin
ds
arpl
add
add
dec
sub
add
add
pop
clc
pop
adc
add
adc
add
leave
enter
test
lret
pop
imul
add
or
mov
adc
mov
add
or
jge
cli
cwtl
or
clc
shlb
clc
pop
and
add
cltd
xlat
jg
add
gs
push
jmp
outsb
jae
add
outsb
sub
jmp
clc
jg
test
clc
sbb
inc
add
add
add
out
jbe
dec
push
add
pop
insb
ljmp
clc
dec
pop
cmp
clc
fisubl
sarb
mov
inc
add
outsl
sbb
add
imul
js
pop
push
cmp
add
and
ds
cmp
clc
lods
inc
clc
out
inc
add
inc
clc
push
push
add
adc
add
clc
mov
add
pop
leave
loopne
jbe
nop
mov
add
jecxz
out
fs
fistl
push
clc
pop
lret
cmpsl
clc
ljmp
clc
stos
push
or
clc
mov
mov
clc
arpl
add
clc
xchg
scas
mov
das
and
add
bnd
clc
and
mov
cmp
clc
lock
cltd
test
testb
je
pusha
add
and
add
add
imulb
add
ret
clc
cli
and
inc
add
clc
mov
adc
cmpsl
clc
fidivrs
push
pop
push
mov
in
mov
imul
add
cld
vcvtdq2ps
enter
in
rcrl
clc
pop
cltd
sbb
loop
das
cs
iret
data16
mov
mov
push
xchg
lea
jae
add
iret
fidivl
add
jge
cmp
insb
or
and
add
mov
jbe
lea
add
add
clc
fwait
mov
add
fs
sbb
cmpsb
clc
inc
clc
mov
add
cmc
dec
xchg
jo
add
jae
add
inc
clc
bound
add
adc
add
mov
gs
mov
xchg
pop
stos
lcall
clc
iret
shll
ret
or
clc
mov
xchg
adc
add
push
fs
jne
mov
clc
and
add
adc
push
dec
fs
pop
push
jns
clc
xchg
mov
mov
clc
push
movsb
clc
call
lcall
add
dec
add
add
movsl
clc
stos
cmp
lock
push
xchg
add
add
add
arpl
add
jb
add
out
jle
test
add
or
add
frstor
sar
mov
and
add
fwait
loop
add
xchg
mov
adc
pop
mov
clc
cs
clc
lock
mov
pop
sbb
dec
xor
xchg
dec
xchg
xabort
out
in
roll
add
add
dec
sub
cli
jmp
clc
or
pop
dec
mov
pop
stc
sub
push
add
add
add
sbb
leave
fiadds
clc
xchg
push
outsl
and
clc
ret
jmp
ret
pop
clc
and
add
por
pop
clc
inc
clc
dec
daa
clc
add
add
clc
or
ficomps
repnz
and
add
clc
je
clc
push
clc
jo
add
add
and
add
cmp
push
add
pusha
add
mov
sbb
out
inc
add
fs
mov
add
lcall
mov
add
repz
jno
add
mov
sar
movsl
clc
popa
add
jnp
clc
push
mov
into
test
push
add
aad
pop
mov
repz
cli
out
lea
xabort
loop
paddusw
push
mov
adc
cmp
cmp
jo
add
clc
ret
add
imul
data16
int
or
clc
daa
clc
js
clc
out
js,pt
imul
pop
sahf
pop
sub
sub
ret
nop
clc
mov
clc
negl
clc
push
rorb
push
sub
data16
cltd
mov
push
add
and
clc
das
in
sbb
clc
daa
clc
mov
imul
stos
aas
push
and
add
clc
xbegin
clc
xchg
mov
hlt
sub
jge
ljmp
cmp
mov
add
push
mov
das
pop
clc
inc
add
ja
clc
cwtl
mov
add
add
add
test
je
clc
pop
aam
cmp
clc
jp
add
jg
cs
clc
sub
xor
add
std
gs
mov
stc
aam
xlat
sti
mov
clc
mov
clc
iret
jl
cmp
cs
push
sub
add
into
int
push
xchg
xor
sub
add
gs
out
sub
push
loop
xchg
pop
ss
daa
clc
out
int
clc
mov
out
jnp
stc
sub
outsb
aam
xchg
mov
mov
stc
cmp
cmpsl
clc
or
adc
add
sub
add
cmp
jno
add
stc
fdivrl
sub
clc
mov
add
push
add
pop
iret
xor
int
gs
das
fstpt
sub
sar
xchg
adc
add
and
add
push
daa
clc
popa
add
insb
sub
xchg
and
leave
xchg
jecxz
fisttps
cltd
lret
mov
test
xor
add
add
int
mov
push
neg
stc
enter
insl
and
xabort
add
mov
clc
test
push
xchg
mov
das
sbb
movsb
clc
out
ss
leave
xor
add
add
push
lret
fwait
loopne
loopne
lret
aam
clc
repnz
add
xabort
push
add
ret
outsb
lahf
mov
int3
xchg
outsb
stc
dec
jno
add
sub
outsl
jae
add
push
push
sar
sar
clc
inc
clc
or
xchg
lods
mov
jecxz
inc
clc
not
sub
sbb
or
sub
call
add
cmp
aas
popa
add
sar
clc
push
jecxz
clc
fldt
push
add
enter
sbb
add
mov
mov
push
clc
nop
outsb
xchg
sub
into
pusha
add
clc
cmp
sub
icebp
scas
mov
cmp
add
add
add
sar
add
mov
add
movsl
clc
ret
clc
gs
push
push
mov
stc
bound
add
add
test
add
add
scas
pop
push
add
xor
add
cmp
xlat
add
rolb
clc
cmp
lods
std
push
insl
test
cmp
pop
mov
into
cmp
imul
clc
jae
add
clc
inc
clc
ret
clc
lea
jp
jmp
cmpsb
clc
stos
cmp
daa
clc
mov
fstl
add
add
mov
mov
ss
mov
clc
push
pop
sbb
clc
rcll
jl
dec
sbb
inc
clc
pusha
add
out
int3
push
mov
fsubl
add
inc
add
pushf
push
mov
dec
sahf
ss
bound
add
add
add
dec
test
insl
imul
xchg
ss
fstps
pop
xchg
sbb
push
add
pusha
add
loope
push
pop
clc
movsb
clc
lock
insl
mov
add
add
sbb
clc
int
jge
mov
gs
xchg
std
and
add
clc
fsubr
scas
mov
mov
add
sub
mov
clc
mov
add
out
stos
sbb
and
dec
xlat
add
add
add
or
add
clc
mov
clc
cli
xor
mov
rcll
push
sub
push
push
push
push
push
push
call
and
sub
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
pop
jmp
andl
mov
lea
push
push
push
mov
push
lret
call
cmp
or
addr16
into
cmp
add
pop
dec
xchg
cmp
xabort
clc
cli
pushl
add
pusha
add
push
add
add
add
push
add
repnz
out
xabort
out
or
push
add
lods
cvtpi2ps
sub
fwait
shl
clc
leave
pop
cmc
mov
add
adc
add
cmp
add
shlb
das
jno
add
iret
xor
add
lods
mov
clc
in
mov
shll
clc
test
clc
ja
fcmove
cld
inc
add
cmp
loopne
notl
test
jl
add
fsubrs
imull
add
mov
clc
adc
add
add
lea
cmp
mov
repz
add
push
cmp
clc
jb
add
or
jge
push
add
mov
pusha
add
sub
cmp
addr16
hlt
jp
push
add
xor
jg
xchg
out
ret
clc
addr16
jnp
clc
sti
push
fdivp
jbe
clc
in
push
add
mov
clc
add
add
ret
clc
jle
mov
enter
clc
arpl
add
add
jb
add
fistpll
clc
dec
push
add
push
es
popa
add
dec
lods
lods
into
ljmp
jbe
fimuls
add
loop
loope
push
sar
pushf
add
and
add
sub
clc
xchg
mov
add
dec
cmp
add
in
movsb
clc
jo
add
push
cmp
jmp
dec
xbegin
clc
out
sahf
mov
pop
into
int
cmp
clc
pop
test
add
add
push
and
add
arpl
add
cmp
clc
repz
clc
add
add
test
pop
mov
and
add
dec
clc
sbb
mov
mov
mov
clc
and
add
clc
outsl
and
outsb
jl
adc
add
sub
inc
clc
out
jb
add
imul
push
out
mov
dec
xor
add
push
add
pop
mov
cld
fadd
clc
xchg
fs
push
mov
clc
movsb
clc
mov
add
add
imul
xchg
or
cmp
clc
pop
mov
clc
in
and
add
mov
mov
clc
adc
add
xchg
cmp
clc
push
clc
jecxz
std
mov
push
inc
add
ja
jp
dec
repz
clc
popf
add
fisttps
mov
push
add
push
push
add
pusha
add
ss
or
clc
mov
and
cltd
dec
jp
fisttps
push
add
mov
or
clc
movsl
clc
into
pop
sbb
clc
addr16
xor
pop
nop
jmp
clc
push
add
mov
dec
mov
ja
xor
add
add
push
add
nop
ja
rorb
addr16
scas
cmp
gs
jne
and
add
add
xchg
and
add
in
mov
lcall
fadd
clc
scas
push
add
push
clc
test
cwtl
mov
jge
adc
add
and
call
into
fldenv
clc
inc
add
push
jbe
sbb
jge
arpl
add
add
aam
jle
pop
xchg
and
add
add
fwait
xabort
xlat
jmp
add
cmp
adc
insl
mov
gs
lcall
mov
mov
or
ds
std
ds
dec
cmp
leave
or
mov
pushf
push
xchg
mov
clc
ss
push
mov
movsl
clc
mov
xchg
loope
adc
add
add
insl
add
add
add
clc
pop
clc
xchg
imul
scas
xchg
mov
mov
clc
jp
dec
xchg
sahf
out
pop
clc
cli
pop
pop
push
add
enter
movsl
clc
pop
inc
clc
push
and
add
push
add
stos
sbb
and
add
dec
bswap
es
inc
clc
xchg
add
idivl
add
filds
xchg
lahf
sbb
mov
jp
xchg
shl
or
add
add
and
add
or
fucompp
xchg
cmc
inc
add
xchg
sub
clc
scas
out
pushf
cmp
fnstsw
out
shll
cmpsl
clc
cmp
pushl
add
add
clc
sbb
dec
lahf
adc
add
add
sar
add
data16
icebp
pushf
mov
add
leave
mov
fs
loope
lret
lret
cld
clc
into
push
not
mov
clc
or
add
mov
clc
sub
add
ficoms
add
clc
xor
add
add
add
clc
addr16
insb
jnp
sub
sub
pop
lea
sbb
dec
fsubr
fs
fisttpll
fxch
and
xchg
push
inc
add
ret
xchg
xor
add
out
sub
shl
clc
ret
xbegin
add
add
mov
je
mov
clc
sub
add
cmp
jne
clc
and
out
ret
bound
add
ljmp
add
jb
add
clc
ret
clc
imul
movsl
clc
xchg
cld
push
sti
cmp
cmp
data16
adc
add
inc
clc
or
dec
mov
cmp
xor
add
push
add
add
add
cli
mov
out
cltd
fsubrl
adc
add
jno
add
mov
fsubrp
and
add
add
daa
clc
mov
clc
mov
movaps
add
add
and
add
jo
add
pop
mov
test
cmp
mov
fcompl
gs
jecxz
adc
add
mov
clc
mov
clc
push
add
insl
lods
jno
add
clc
adc
add
lcall
clc
ja
sti
xor
aaa
in
sub
clc
imul
sub
into
jo
add
cmp
dec
shlb
lock
js
clc
pop
fs
xchg
push
add
in
xabort
xchg
mov
pushf
mov
lahf
mov
and
add
sub
jle
add
sbb
cmp
clc
add
add
clc
daa
clc
es
ret
cmp
xor
add
clc
jo
add
clc
dec
sub
add
xchg
xor
xchg
out
jo
add
test
jb
add
clc
dec
push
clc
cmp
xchg
sbb
outsl
jns
pop
je
clc
cmc
hlt
pop
dec
mov
call
add
push
clc
inc
add
add
add
adc
add
add
scas
ds
push
out
mov
and
add
addr16
and
add
mov
clc
xchg
adc
add
xabort
push
add
loopne
stos
std
scas
push
mov
pop
dec
adc
add
clc
mov
aad
add
sub
add
jecxz
inc
add
fs
mov
inc
add
push
jne
sahf
in
push
add
cmpsb
clc
dec
dec
movsl
clc
adc
add
add
xor
add
add
add
mov
pop
mov
xchg
pop
push
xor
add
add
push
add
clc
int3
je
mov
jbe
clc
xchg
and
cld
adc
or
add
data16
pop
clc
cmp
or
and
add
roll
add
cld
out
cli
or
loope
cmp
clc
and
add
divb
add
sub
mov
clc
aad
pop
jg
clc
in
out
push
and
add
clc
cmp
iret
stos
int
add
je
leave
cld
sahf
fnstenv
add
jae
add
add
pop
addr16
mov
add
add
add
leave
in
data16
jecxz
ret
xchg
in
pop
jb
add
xor
add
add
mov
or
push
cmp
sar
add
jns
ds
outsb
test
shl
clc
stc
daa
clc
popa
add
hlt
pop
test
clc
in
cwtl
cmp
push
clc
decb
clc
cmp
test
push
clc
scas
xchg
movsb
clc
xchg
repz
add
fcompl
inc
clc
jp
add
ficoms
jnp
sub
add
out
pop
add
add
imul
xlat
push
das
cmp
clc
push
add
adc
mov
clc
fs
hlt
or
mov
popa
add
test
js
clc
sti
sbb
fdivs
clc
popa
add
stc
or
aad
movsb
clc
test
add
stos
pop
scas
out
stos
xabort
xlat
fs
pop
and
add
xlat
add
add
pusha
add
fcompp
cmp
sbb
gs
das
fwait
fs
test
add
add
pop
call
clc
cmp
push
insl
push
add
aad
clc
sub
jb
add
pop
or
dec
mov
clc
iret
fbld
add
xchg
lahf
in
xabort
inc
add
or
clc
fucomp
aad
add
mov
dec
cmp
aam
sar
mov
sbb
add
dec
xchg
mov
add
add
fistps
adc
adc
or
adc
add
mov
add
mov
add
mov
std
aam
adc
call
xchg
xchg
push
add
mov
clc
jnp
mov
ret
cs
mov
clc
stos
movsb
clc
cmp
or
add
test
jb
add
jmp
ret
clc
js
sarl
nop
ds
hlt
sbb
add
ret
mov
clc
push
add
pop
cmp
stos
jl
clc
mov
cmp
xchg
lret
add
cmp
clc
mov
pop
add
add
add
clc
xor
out
ficoml
rclb
dec
adc
arpl
add
add
std
call
add
daa
clc
push
mov
popf
cmp
jno
add
lahf
lcall
mov
cmp
je
jp
clc
pushf
pusha
add
cmp
add
clc
insb
scas
mov
sbb
add
fwait
popf
mov
add
lahf
stos
fs
mov
clc
push
add
hlt
idivl
add
pushf
popa
add
outsb
scas
cwtl
test
or
pop
imul
adc
add
pop
add
add
cltd
loope
xbegin
xchg
adc
mov
clc
aam
scas
jns
std
hlt
ljmp
sar
popa
add
xchg
inc
clc
out
and
jbe
sbb
clc
pop
aas
sar
clc
mov
add
negb
fidivrl
pop
clc
fiadds
jno
add
xchg
mov
clc
mov
cli
dec
out
xor
add
add
and
add
jno
add
add
inc
add
test
pushf
pop
jnp
clc
pop
std
outsb
xor
xchg
aaa
insl
cwtl
sbb
add
loope
sub
clc
idivb
push
out
fbstp
add
mov
sub
lock
gs
pop
xchg
test
cmc
mov
jmp
add
aaa
pop
jle
aas
sub
data16
lret
in
cmp
add
test
stc
mov
or
add
dec
addr16
sarl
hlt
ss
mov
mov
push
add
jmp
add
ficoml
into
es
add
add
sbb
sub
clc
sbb
clc
pop
push
cmp
xchg
pop
xchg
ja
clc
push
clc
loope
test
clc
in
js
mov
xchg
pushf
lret
adc
add
pushf
lods
add
loopne
cs
in
lea
clc
call
clc
xor
add
add
aas
cmpsb
clc
aas
push
add
movsb
clc
pop
mov
add
sti
pop
gs
push
add
or
cltd
lock
std
cmpsb
clc
mov
shrb
ss
dec
call
xor
add
add
and
add
mov
add
add
pop
ret
mov
xor
clc
pushl
js
add
mov
nop
adc
add
insl
frstor
adc
add
jp
dec
aas
mov
sar
dec
cmp
mov
ds
stos
clc
dec
fildll
mov
add
repz
clc
push
cmp
clc
ljmp
xor
add
inc
add
or
push
push
add
das
mov
mov
add
insb
das
pop
dec
clc
out
insb
or
in
jae
add
inc
clc
hlt
mov
sub
adc
add
outsb
aaa
insl
mov
fimull
jmp
clc
lea
sti
mov
dec
mov
add
sti
and
add
add
add
clc
out
push
clc
xchg
clc
jae
add
dec
mov
xor
add
add
jle
stos
push
aaa
shlb
add
rorb
add
fdivr
mov
mov
add
gs
mov
pop
ljmp
clc
fidivl
lret
push
add
mov
inc
add
ret
popf
dec
addr16
pop
clc
jno
add
in
mov
clc
pusha
add
dec
loopne
dec
aaa
cmp
idiv
pop
aas
adc
add
cmp
iret
jo
add
stc
shl
clc
dec
out
xor
add
stc
addr16
mov
push
arpl
add
mov
cld
sbb
and
add
clc
jne
add
push
mov
add
jbe
dec
or
or
clc
push
add
push
nop
gs
pop
clc
lret
sub
add
xlat
mov
ljmp
add
inc
add
divb
clc
pop
cmp
loope
jle
shl
lock
mov
mov
jnp
add
mov
ljmp
add
add
add
jg
sub
adc
add
pop
clc
aad
add
push
add
add
xor
clc
and
add
add
add
fidivrs
sub
scas
cmpsb
clc
leave
insl
sahf
movsl
clc
mov
clc
stos
sar
clc
jle
pop
and
in
xor
add
outsl
call
mov
test
inc
clc
inc
add
in
jp
and
add
pop
cmp
xor
add
add
std
dec
clc
cmp
push
insl
push
inc
clc
xabort
clc
mov
clc
pusha
add
sub
mov
add
cmp
jl
movsb
clc
pop
mov
push
fdivs
xabort
jb
add
add
faddl
add
xchg
lods
repnz
xchg
mov
clc
adc
cmc
lret
fstpt
add
call
pop
xchg
cmpsl
clc
adc
pop
sar
mov
ffreep
clc
aas
scas
mov
mov
clc
adc
add
clc
mov
pop
clc
in
mov
dec
jae
add
add
inc
add
incb
clc
jmp
cmpsb
clc
into
jmp
clc
mov
clc
lods
and
add
lods
pop
gs
movsl
clc
test
test
mov
add
clc
and
call
add
jo
add
arpl
add
out
sub
push
jns
push
adc
add
fs
ficoml
clc
xchg
cmp
add
push
clc
pusha
add
cmp
xchg
rcll
cli
cli
push
add
mov
sbb
or
clc
mov
clc
push
cli
add
add
clc
stos
in
jno
add
scas
into
aam
and
add
adc
lock
clc
lahf
jb
add
aas
in
pop
mov
out
push
add
xbegin
shlb
add
add
leave
es
loope
mov
clc
imul
data16
in
aad
xchg
loop
je
cwtl
stc
adc
inc
clc
adc
add
and
add
jae
add
fwait
jo
add
test
add
add
add
rcll
notb
add
mov
lock
xchg
ss
in
popf
adc
add
mov
leave
inc
add
lods
cmpsl
clc
fldt
clc
pusha
add
sbb
add
add
add
add
adc
add
add
lcall
add
cmp
jl
movsl
clc
ja
add
popf
call
inc
clc
test
and
adc
push
clc
add
add
add
mov
cmp
fs
xchg
xchg
hlt
push
adc
add
add
sbb
cli
jle
ret
clc
inc
clc
rcr
cmp
clc
sgdtl
add
clc
pushf
inc
add
push
mov
enter
bound
add
add
daa
clc
mov
sbb
cmp
stc
lock
testl
inc
clc
aaa
mov
add
xchg
sahf
cwtl
mov
add
xor
add
add
inc
clc
xchg
push
adc
add
hlt
jns
add
arpl
add
sbb
add
inc
clc
adc
lea
clc
loope
daa
clc
lcall
add
dec
je
mov
sbb
cmp
xor
add
jno
add
clc
cmp
std
cmp
clc
inc
clc
xchg
mov
lret
add
mov
mov
clc
xchg
gs
add
clc
add
add
clc
sbb
aas
iret
pop
mov
xor
add
stc
xchg
aam
clc
mov
pop
dec
mov
push
sub
cmp
xor
adc
add
add
clc
mov
icebp
pusha
add
cmpsb
clc
adc
out
cmp
add
fildl
add
sub
push
cmpsb
clc
jmp
inc
clc
lods
xchg
popf
and
scas
lcall
xor
add
aad
fisubl
add
add
mov
jecxz
inc
clc
pusha
add
out
adc
mov
add
das
cmp
pop
test
pop
push
fcoml
dec
cmp
fsubl
and
add
push
clc
jbe
add
in
xor
add
add
scas
stos
sbb
dec
loope
jno
add
clc
jge
das
sub
add
clc
nop
fbld
add
add
insb
mov
add
add
push
clc
dec
popf
inc
clc
xor
add
clc
fdivrl
cmp
clc
in
mov
add
call
add
add
jecxz
popa
add
pop
clc
repnz
xchg
and
add
mov
test
std
mov
mov
xbegin
jns
dec
push
fs
push
add
out
inc
clc
scas
dec
xor
add
clc
cmpsl
clc
call
mov
mov
aaa
pop
pop
pop
lea
nop
jns
arpl
add
enter
loopne
inc
add
aad
add
xlat
jnp
clc
fnstenv
add
add
xbegin
clc
ret
add
xchg
sti
dec
stos
out
xlat
and
add
mov
fstpt
pop
clc
jns
fs
sbb
clc
out
outsb
ds
clc
shrl
xor
add
clc
mov
scas
cltd
xchg
or
add
clc
lea
popf
jmp
jne
and
add
jns
sar
add
inc
add
pop
pop
cmp
jbe
clc
sub
aad
add
dec
inc
add
mov
stc
pop
mov
clc
out
nop
jo
add
gs
mov
cmp
add
mov
add
push
add
xchg
aam
fldl
xor
add
add
rcrb
mov
lret
xchg
jns
sbb
clc
jecxz
lret
cmp
mov
cmc
or
jne
ds
inc
add
shrb
add
push
mov
xchg
gs
lods
xbegin
into
jecxz
aaa
mov
add
incb
clc
xor
add
adc
add
pop
lret
add
add
loope
ja
add
test
je
clc
daa
clc
out
fsubr
push
add
test
add
js
add
mov
add
test
fidivrs
cli
shlb
sub
cmp
clc
xchg
cld
dec
sub
pop
lret
pop
mov
test
leave
xchg
pop
inc
clc
popa
add
ret
addr16
dec
sbb
out
sbb
clc
push
in
mov
mov
enter
inc
add
dec
pusha
add
push
add
or
add
clc
dec
das
sub
movsl
clc
scas
int
bound
add
clc
popa
add
sbb
add
pop
or
add
cmp
ss
add
adc
add
out
fbld
add
or
fnstsw
dec
ss
or
pop
mov
ja
jle
clc
push
add
add
stos
daa
clc
xchg
cmp
mov
xchg
dec
fmuls
mov
jg
stos
icebp
dec
shl
repz
in
inc
clc
ja
add
cmpxchg
movsl
clc
push
clc
pop
sub
mov
mov
push
clc
out
xor
add
add
cmpsl
clc
sahf
shrb
clc
cmp
pop
mov
clc
scas
pop
mov
clc
cltd
sub
xor
add
iret
pop
cmp
sub
jp
arpl
add
adc
add
es
xchg
push
add
or
clc
loopne
xor
lret
int3
xchg
adc
add
clc
test
jb
add
add
shl
dec
dec
sti
cli
adc
add
cmpsl
clc
nop
pop
or
pop
clc
hlt
pop
clc
sbb
push
arpl
add
sub
clc
push
icebp
popa
add
xor
add
imul
add
mov
cmp
jae
add
add
sub
clc
pop
mov
int
bound
add
ret
aad
pop
jo
add
xlat
bound
add
clc
jo
add
idiv
jmp
xchg
inc
clc
adc
add
add
cmpsb
clc
clc
mov
clc
add
add
jb
add
inc
add
stc
popf
fsubl
clc
and
add
add
add
cld
adc
or
xor
add
ret
add
fmulp
fists
add
aas
dec
sub
clc
jg
or
mov
add
add
imul
clc
insl
cld
and
add
add
cwtl
xlat
in
adc
add
add
add
or
add
add
add
add
lret
shr
mov
push
ljmp
mov
clc
pop
pop
sbb
clc
sub
add
mov
clc
iret
mov
in
sbb
add
notl
jle
add
mov
lods
sbb
add
test
add
add
and
add
dec
mull
lahf
popf
pop
popf
pushf
call
lock
add
and
add
clc
repz
into
fcomi
imul
add
sub
mov
cmp
out
push
and
add
dec
aas
xchg
cltd
aad
insl
add
stc
add
add
add
divb
add
add
mov
scas
sub
add
xchg
std
pop
jns
clc
sub
inc
add
sti
and
add
add
aad
roll
clc
cmp
pop
mov
pop
ds
out
cmpsl
clc
cli
das
pusha
add
aaa
add
add
clc
and
add
add
add
add
fimull
nop
lahf
inc
add
sbb
add
lret
enter
jmp
clc
and
add
add
pop
mov
add
mov
clc
mov
pop
jmp
cld
fiadds
sbb
inc
add
adc
scas
aaa
sbb
insl
addr16
fldenv
add
jp
add
xchg
fldl
cmp
fwait
mov
hlt
xchg
inc
clc
xor
jbe
imul
clc
adc
add
clc
mov
add
cli
filds
and
xor
add
add
mov
fwait
mov
clc
scas
adc
add
loopne
jnp
add
and
add
clc
aas
jbe
pushf
mov
xor
add
add
in
inc
clc
jns
cmpsb
clc
xbegin
and
add
clc
mov
xbegin
clc
add
jg
push
xchg
pop
adc
add
push
dec
mov
push
sar
xchg
inc
add
and
add
pop
dec
adc
add
sbb
aaa
cs
sar
ss
ror
bound
add
add
xchg
mov
add
imul
or
clc
jle
push
xchg
xabort
sub
pushf
mov
clc
xchg
or
clc
mov
fs
icebp
cmp
int
add
add
push
imul
js
frstor
or
insl
mov
jb
add
insl
std
shll
add
into
xor
add
dec
lret
lods
and
add
daa
clc
xor
add
clc
lock
ds
fadd
clc
fidivrs
xbegin
clc
lret
pop
lret
jne
inc
clc
data16
dec
xbegin
jns
mov
clc
jns
lahf
int
add
add
add
and
cmp
add
pop
in
cmp
imul
in
and
add
clc
cmp
scas
sub
sbb
sub
das
sbb
rcrl
enter
add
sbb
mov
add
sbb
clc
in
dec
sbb
cmp
in
pop
lcall
add
sar
add
xchg
insb
and
add
roll
jmp
cld
into
or
dec
xbegin
adc
add
add
mov
xchg
dec
mov
sbb
adc
testl
ficompl
hlt
push
pop
repnz
and
add
fstl
push
add
jl
clc
rcr
jmp
mov
out
xchg
adc
clc
negl
add
add
xabort
clc
dec
adc
add
add
xchg
cmp
push
add
push
clc
add
sub
lods
mov
addr16
push
adc
add
clc
jno
add
xor
add
add
stos
into
dec
mov
sbb
or
out
xchg
sub
clc
jle
in
xchg
ljmp
sbb
clc
mov
fwait
test
xor
add
ljmp
clc
inc
add
jnp
add
stos
pop
cmp
mov
mov
add
add
imul
push
nop
or
mov
jbe
clc
fdiv
aam
clc
gs
ficompl
jmp
lret
add
arpl
add
pop
fdiv
mov
add
add
jnp
add
and
add
cli
push
and
add
add
add
cmp
add
xchg
push
add
sbb
cmp
clc
and
add
clc
cmp
add
lahf
bnd
add
add
xor
add
inc
clc
movsb
clc
ljmp
clc
jecxz
data16
or
add
add
clc
sahf
std
movsl
clc
cmp
push
xchg
inc
clc
jp
pop
popl
clc
js
clc
sahf
jge
add
jb
add
or
pop
inc
add
cmp
mov
cmc
push
cmc
insb
scas
pop
insb
adc
clc
push
push
add
out
fisubrl
adc
push
clc
jbe
arpl
add
stos
sub
pushf
add
add
clc
mov
clc
enter
clc
je
add
fimull
repz
incb
add
test
dec
cmp
add
inc
add
xlat
pop
adc
add
sarb
clc
mov
dec
in
mov
test
xchg
xchg
pop
clc
scas
xor
add
clc
lock
aas
movsb
clc
fcmove
pop
clc
test
pop
push
pop
jns
add
pop
int3
push
and
add
clc
das
and
add
clc
jl
test
add
inc
add
repnz
movsb
clc
cmp
xor
add
clc
cmp
or
arpl
add
push
add
or
add
leave
nop
sub
add
enter
adc
call
and
jbe
bound
add
scas
ljmp
add
sub
add
add
repz
movsl
clc
outsb
adc
add
mov
imul
aaa
fdivs
add
add
dec
loope
int3
fiaddl
push
xor
add
add
sub
pop
xor
fisubrl
ja
push
pop
mov
add
jg
and
scas
lret
imul
dec
cltd
cmpsl
clc
adc
clc
hlt
pop
clc
pop
int3
lcall
sub
clc
lret
xor
clc
sub
add
and
add
push
repnz
sbb
or
clc
lea
sbb
fadds
add
and
add
call
push
xchg
dec
test
clc
lods
or
sub
pop
xchg
adc
aaa
lret
mov
pop
and
prefetcht0
clc
inc
clc
scas
xor
sti
mov
clc
jo
add
lods
mov
add
clc
cmp
mov
add
pop
fbstp
hlt
je
lret
js
clc
inc
add
pop
sahf
in
xchg
test
sbb
and
add
add
in
pop
in
mov
and
add
clc
inc
clc
adc
add
add
sbb
inc
clc
pop
inc
clc
mov
push
test
cmc
movsl
clc
sbb
frstor
add
stc
sbb
add
sbb
clc
sahf
push
clc
sbb
xor
inc
add
dec
mov
mov
cmp
test
add
or
loopne
movsb
clc
imull
pop
sahf
mov
add
dec
cld
test
clc
or
clc
push
dec
mov
insb
mov
xchg
mov
mov
arpl
add
add
jnp
push
adc
add
clc
xor
add
testb
add
mov
sbb
sti
outsb
dec
sar
clc
mov
clc
jb
add
pop
gs
out
or
or
clc
add
add
stos
jno
add
jae
add
sar
add
dec
xchg
js
arpl
add
sbb
add
ss
add
mov
lods
sar
cli
call
idivl
sar
clc
mov
or
jl
add
dec
lods
cmp
add
mov
loop
dec
jne
xor
add
mov
add
mov
in
hlt
pop
ss
lods
adc
add
inc
clc
and
pop
push
add
xor
add
inc
clc
xor
cmpxchg
add
lea
add
add
adc
add
inc
clc
add
add
into
and
push
in
stos
shll
pop
mov
cmpsb
clc
shlb
clc
js
js
mov
clc
push
iret
test
jno
add
xchg
fbstp
clc
ret
clc
fimull
repz
push
fucomp
std
ds
lahf
int3
push
jp
sbb
add
mov
clc
jb
add
add
pop
xchg
movsb
clc
inc
clc
cmp
insb
popf
lahf
or
add
nop
or
xchg
inc
clc
cmpsb
clc
or
push
add
jae
add
pop
sahf
fldenv
add
pop
inc
add
es
into
idivl
sti
mov
cwtl
xor
add
add
clc
jns
add
ret
clc
adc
add
clc
xchg
rcll
add
or
movsl
clc
es
push
add
sub
sbb
add
add
jo
add
in
jle
cmp
sar
add
shl
sub
pusha
add
dec
push
stc
jns
add
mov
cmp
sti
mov
add
mov
test
rorb
adc
clc
inc
clc
xor
add
add
add
add
cmp
mov
outsl
push
add
pushf
in
test
sbb
vunpcklps
and
add
add
xor
sbb
scas
in
xor
add
xlat
push
fiaddl
in
sub
cmp
test
clc
fwait
in
dec
out
push
add
test
in
clc
test
jb
add
add
clc
aaa
xchg
bound
add
add
inc
clc
pushf
mov
clc
mov
add
test
sub
or
xor
dec
stos
repz
add
ja,pt
inc
add
outsb
jbe
add
xchg
sub
add
clc
jp
or
shlb
add
adc
add
clc
adc
add
add
add
jle
add
xchg
sbb
add
je
add
add
xor
add
mov
clc
cmp
clc
and
jo
add
pop
test
clc
call
sti
jmp
push
add
push
scas
xor
add
or
add
add
push
add
sub
cmp
in
loopne
xchg
mov
add
add
mov
add
es
inc
clc
dec
jnp
clc
jo
add
clc
xchg
pop
mov
jmp
dec
push
add
dec
insb
fwait
mov
add
clc
xor
add
clc
inc
clc
cs
test
in
cmp
clc
out
cmp
cmp
clc
testb
int
sub
icebp
cmp
clc
and
add
clc
sbb
js
jb
add
std
dec
jb
add
add
add
outsl
jecxz
xchg
xchg
mov
pop
fdivl
lcall
xor
add
add
add
addr16
insl
jp
mov
or
push
sub
ljmp
sti
and
scas
cmp
ret
pop
cwtl
scas
cld
mov
add
gs
push
push
add
cmp
fisubrl
sub
add
add
add
jae
add
sbb
stc
add
add
nop
jg
int3
push
out
cmpsb
clc
pusha
add
xor
cmp
add
xor
add
lahf
cli
mov
clc
jge
gs
pop
clc
jle
add
adc
add
jnp
add
sub
and
add
pop
push
add
or
or
mov
int3
sub
sub
clc
add
jbe
clc
into
jmp
outsl
scas
cmc
in
movsb
clc
push
add
sbb
adc
add
mov
clc
lods
xor
add
test
fmuls
sub
inc
add
cmc
jle
mov
mov
add
add
add
add
mov
mov
add
clc
cmp
clc
push
sbb
es
dec
daa
clc
fsubl
mov
add
repz
or
add
popa
add
out
clc
leave
adc
sub
clc
stos
rclb
test
add
ja
pop
insl
pusha
add
test
clc
sbb
add
clc
mov
daa
clc
jae
add
mov
bound
add
clc
xbegin
add
leave
add
add
add
xchg
mov
push
add
enter
ss
ficoms
add
xchg
daa
clc
inc
add
fimuls
mov
add
jne
clc
fstpt
cmp
clc
loop
mov
repz
add
add
push
out
inc
add
mov
add
add
xchg
shlb
clc
push
clc
scas
fisubl
clc
lret
fsub
clc
mov
inc
clc
jge
add
add
add
cmp
add
xchg
or
or
add
pop
fiaddl
pusha
add
loope
xchg
imul
js
pop
push
add
dec
dec
or
clc
xchg
aam
add
into
sbb
clc
movsb
clc
mov
je
xchg
sbb
jb
add
imul
out
or
fisttps
loope
fisubs
daa
clc
cmp
stos
ret
clc
pop
outsb
mov
clc
push
ret
scas
xchg
mov
clc
es
pop
je
sbb
add
paddq
xor
add
clc
mov
clc
jnp
clc
mov
ss
dec
loopne
dec
pop
sbb
jae
add
scas
scas
cmp
add
es
test
fdivl
add
dec
aam
cmp
lret
push
xchg
aas
adc
add
sbb
enter
jl
dec
add
rorb
cmp
clc
stos
ljmp
popa
add
cld
dec
push
xor
add
add
xchg
imul
repz
add
xor
add
dec
loope
mov
add
sbb
add
mov
mov
adc
add
jp
dec
jge
dec
and
xchg
clc
pushf
push
add
dec
add
add
add
cmc
cmp
inc
add
jge
add
scas
jbe
cmp
mov
pop
sub
add
lret
lods
add
add
add
setl
add
outsl
mov
lret
add
sub
or
or
clc
adc
add
xchg
push
add
push
mov
clc
dec
sub
clc
sbb
daa
clc
lcall
cltd
test
outsl
int
clc
xchg
ljmp
add
clc
mov
xlat
pop
xor
add
add
mov
pushf
push
leave
xchg
jmp
add
clc
mov
xchg
mov
test
inc
clc
mov
ss
push
sbb
or
add
clc
test
insb
xabort
pop
fwait
popa
add
push
push
clc
test
push
cmp
cld
jg,pt
cmp
clc
dec
cmc
mov
clc
cli
invd
add
bound
add
lret
mov
cld
jle
loopne
mov
dec
sub
clc
fnstsw
jge
add
or
or
add
adc
add
push
lock
add
jbe
push
add
inc
clc
mov
pushf
dec
ret
clc
push
pop
dec
popf
inc
add
lods
pop
mov
add
sti
in
sahf
xlat
mov
add
cmp
or
clc
lret
test
ss
or
test
cmp
stos
cmpsb
clc
adc
add
ljmp
add
jg
clc
and
clc
xbegin
into
xor
add
add
pop
mov
clc
push
add
sbb
add
loopne
cmp
test
mov
add
and
add
clc
addr16
jae
add
add
inc
clc
mov
lods
pop
dec
push
and
add
add
call
add
xor
clc
push
clc
xchg
sub
popf
or
add
outsl
popf
mov
add
mov
jmp
jne
and
and
add
adc
ftst
clc
cmp
push
loop
xor
add
add
pop
adc
add
clc
dec
in
test
add
repz
push
cltd
cmpsl
clc
mov
sar
dec
push
popf
pop
test
nop
cmp
dec
enter
or
xchg
or
clc
xchg
sarl
inc
add
fdivs
add
cmp
lret
push
add
add
add
pop
enter
add
clc
leave
out
sub
and
dec
inc
clc
xor
add
inc
clc
movaps
clc
stos
add
add
mov
jmp
mov
ret
xor
add
add
clc
push
add
mov
shlb
or
test
cwtl
xchg
dec
mov
mov
clc
ss
clc
mov
cmp
clc
data16
je
clc
test
mov
sar
pusha
add
push
xchg
call
jbe
clc
enter
add
pusha
add
icebp
test
add
jnp
movsl
clc
mov
add
jg
add
xchg
mov
clc
jmp
imul
add
add
xor
add
popa
add
mov
mov
add
add
or
xabort
add
aad
lcall
clc
mov
push
mov
vorps
bndstx
inc
clc
std
movsl
clc
jp
lret
cmp
lahf
pop
sar
clc
xchg
addr16
sbb
cld
test
clc
lods
pop
adc
add
clc
aam
clc
mov
cmp
mov
vdivps
add
jge
test
lret
lea
cmp
push
add
fwait
loope
stos
inc
clc
or
xor
add
add
stc
xchg
mov
adc
add
lock
rcrb
pusha
add
aad
lcall
notl
fwait
xchg
xabort
nop
icebp
push
pop
clc
call
add
test
das
movsl
clc
loope
xor
add
mov
inc
clc
repz
cli
xlat
in
movsb
clc
cmp
clc
push
add
lret
int3
xchg
mov
clc
cmp
clc
pop
nop
cmp
xbegin
or
add
dec
push
mov
lods
jp
clc
dec
or
stos
aam
clc
xchg
std
and
cmpsl
clc
fsubl
add
add
cmp
clc
clc
enter
add
xchg
mov
sbb
add
adc
add
lock
in
and
add
clc
shrb
add
iret
push
add
stos
scas
daa
clc
testl
or
add
push
mov
dec
daa
clc
mov
dec
imul
clc
iret
inc
clc
js
inc
add
mov
xchg
jnp
and
add
xor
add
pop
mov
jns
jo
add
ljmp
clc
or
xchg
sub
out
fnstcw
sub
and
movsl
clc
inc
add
dec
pop
xor
insb
pusha
add
gs
xbegin
add
addr16
or
leave
pushf
lcall
mov
roll
cmp
clc
mov
push
sub
add
ss
inc
clc
inc
add
xchg
int
clc
fcom
popa
add
insl
das
stc
stos
lcall
mov
inc
clc
stc
idiv
pop
cmpsb
clc
add
add
add
xchg
stos
fwait
jns
adc
mov
add
xchg
hlt
icebp
nopl
add
fsubr
xor
add
xchg
sahf
xchg
mov
add
ffreep
clc
add
add
add
jp
mov
clc
jae
add
jne
push
add
jp
ja
outsb
pusha
add
cmp
stos
jbe
add
jle
icebp
js
add
popa
add
fimull
push
add
pop
ret
jno
add
lods
cli
movsb
clc
loopne
sub
add
shlb
add
push
push
jmp
clc
xchg
loopne
fimull
mov
add
cmp
adc
add
clc
xor
add
push
cmp
pop
lret
sub
jne
cmp
jle
hlt
int3
mov
clc
and
add
adc
mov
mov
insl
or
push
add
lret
cmp
add
cmp
mov
pop
jge
clc
cmp
stc
loope
adc
add
add
add
add
mov
shrb
stos
pop
add
add
push
clc
mov
nop
test
jmp
add
clc
mov
jnp
clc
in
fcomp
fists
mov
clc
outsl
or
jb
add
daa
clc
clc
sub
add
add
add
mov
xor
popf
pop
enter
clc
sbb
add
data16
pop
mov
clc
push
clc
fsubr
sbb
repnz
add
or
xor
add
into
shl
push
sahf
sti
xor
add
fadds
add
scas
and
add
add
jb
add
add
inc
clc
mov
sbb
rolb
dec
xchg
mov
clc
test
das
lods
adc
add
sbb
push
cltd
sbb
adc
clc
ret
cmc
int3
fwait
rolb
add
vunpckhps
mov
out
mov
call
jb
add
jnp
aam
clc
mov
add
add
sar
outsl
adc
push
add
or
mov
testb
mov
add
pop
into
xor
add
lea
gs
clc
jo
add
js
clc
mov
and
ja
lock
add
bndldx
add
pop
mov
clc
xor
add
pop
popf
push
loope
inc
clc
inc
clc
scas
pop
std
dec
das
pop
mov
add
push
cmp
add
mov
xabort
add
jmp
clc
mov
add
mov
aas
mov
push
pusha
add
fimuls
or
adc
add
sub
clc
std
test
icebp
push
add
xor
add
add
in
fs
gs
jns
sub
add
mov
add
pop
sub
cmc
xor
add
cmc
int3
popa
add
dec
mov
cmpsl
clc
mov
add
add
clc
dec
cmp
add
jp
xchg
xchg
in
rorl
clc
sar
loope
lods
arpl
add
add
jp
pop
clc
insl
decl
clc
cmp
mov
mov
sbb
lret
inc
clc
in
movsb
clc
or
push
add
jle
add
cli
xchg
inc
add
push
push
dec
in
cld
push
clc
pop
inc
clc
or
push
clc
xor
add
or
cmp
xchg
lea
clc
pop
mov
add
clc
push
add
adc
add
pop
sub
sar
clc
push
clc
cmc
xor
add
pop
cmp
sbb
in
add
add
pop
fs
pop
add
add
inc
clc
push
mov
gs
testl
das
jp
cmp
cmp
js
clc
inc
clc
xor
add
jg
ds
gs
sub
add
daa
clc
pop
or
fs
cmp
cmp
push
jb
add
clc
pop
inc
add
sbb
clc
pop
clc
cmpsb
clc
inc
clc
sar
inc
clc
mov
add
and
add
clc
rcll
add
inc
add
mov
and
pop
test
push
or
pop
clc
cmp
jl
clc
inc
clc
or
outsl
fs
push
fsts
add
clc
mov
sbb
clc
iret
fidivl
and
add
imul
data16
and
push
xchg
or
dec
aam
clc
jnp
fistpll
or
out
mov
jl
add
clc
push
ds
cmp
clc
mov
pop
filds
add
in
mov
xchg
sub
roll
pop
inc
add
ret
clc
clc
jnp
dec
mov
pop
xor
add
mov
xchg
xchg
enter
add
add
lock
clc
xabort
pusha
add
loop
out
outsb
xchg
jmp
xor
mov
inc
clc
jbe
add
fcompl
jecxz
push
pop
jmp
or
js
or
mov
mov
dec
xor
add
and
add
clc
call
mov
add
sbb
add
push
xchg
aam
and
add
add
mov
dec
aas
jo
add
mov
call
jne
leave
notb
scas
or
out
out
adc
add
xchg
and
add
ret
clc
lods
xor
popa
add
aaa
sub
add
out
xor
add
out
cld
pop
pop
or
jns
sub
mov
imul
push
repz
clc
xchg
das
xor
add
push
test
mov
cli
clc
push
adc
mov
clc
cmpsb
clc
mov
mull
add
aas
push
add
cmpsb
clc
pusha
add
ficompl
fsub
clc
faddp
clc
aas
rorb
outsl
inc
clc
sub
add
outsl
push
add
add
push
add
stos
sar
xor
faddl
test
clc
mov
mov
jmp
jmp
jae
add
clc
and
jno,pn
add
jno
add
clc
je
clc
and
add
push
and
add
and
add
leave
cmc
dec
xchg
jp
add
in
aad
outsl
cmp
clc
fs
sbb
clc
dec
and
add
call
or
ss
and
jae
add
lret
aad
clc
in
jns
imul
call
mov
aas
and
add
add
or
push
add
xchg
mov
add
add
add
jns
inc
add
popa
add
loope
fucomi
lret
std
xor
add
aad
add
lock
stos
or
in
aad
clc
gs
mov
inc
add
adc
clc
jno
add
loop
outsl
jg
data16
add
add
jmp
clc
mov
and
add
add
sub
push
cmp
jnp
add
stos
das
cmp
mov
add
jns
aad
xchg
lret
lock
in
push
add
cmp
clc
jecxz
jl
aad
clc
std
sarl
clc
adc
add
in
mov
outsb
dec
cmp
lock
xor
add
std
imul
dec
clc
and
add
clc
cli
iret
pusha
add
sbb
clc
scas
jb
add
add
add
bound
add
push
pop
mov
fmull
clc
sbb
mov
clc
cmp
clc
lea
add
add
mov
mov
nop
rolb
clc
inc
add
jmp
mov
pop
and
add
clc
and
add
mov
clc
addr16
xchg
cli
xchg
std
inc
add
popa
add
sbb
xor
int
xor
add
mov
add
cmp
add
add
add
xlat
xor
add
test
addr16
fmul
mov
lcall
add
leave
jg
cmp
xchg
xor
add
gs
jns
add
ret
add
gs
insl
jecxz
mov
clc
pop
pushf
cld
clc
mov
ja
cmp
add
lods
mov
push
aaa
bound
add
add
or
add
stc
inc
add
cwtl
jnp
add
inc
add
out
mov
add
icebp
push
popf
push
xor
add
add
out
mov
clc
repz
mov
divl
sar
clc
push
bound
add
pop
add
add
inc
add
inc
add
xor
add
add
inc
clc
lock
add
cmp
pop
int
mov
dec
mov
add
sbb
and
add
mov
aaa
cmp
jno
add
loope
or
int
clc
loope
pop
clc
cmp
adc
add
jb
add
test
pop
out
xlat
imul
add
clc
sub
mov
dec
ss
add
add
enter
aam
clc
pop
push
gs
popf
mov
cltd
xchg
mov
add
add
clc
add
add
sar
xlat
cmp
sub
or
clc
xchg
insb
lock
add
bound
add
nop
stc
ss
or
popa
add
stos
push
and
cmc
test
mov
into
xor
add
xchg
push
clc
das
ja
clc
jecxz
inc
add
xchg
xchg
cmp
fistl
add
clc
lahf
inc
add
iret
stos
cmp
cmpsb
clc
dec
jmp
lcall
clc
mov
test
xor
add
mov
hlt
add
add
lods
mov
add
dec
xchg
xabort
jbe
pop
mov
mov
clc
push
cmp
fxch
lcall
test
stc
mov
movsb
clc
test
das
push
dec
inc
clc
inc
add
ljmp
add
mov
push
mov
clc
cmp
sbb
test
cwtl
jno
add
and
pusha
add
shlb
clc
push
out
in
and
add
add
add
add
lock
test
sar
clc
adc
add
fbld
add
add
and
add
cmc
push
add
jle
jb
add
ljmp
clc
xchg
mov
push
clc
pop
mov
sbb
jne
xchg
xchg
push
fwait
pop
clc
decb
add
jns
sar
inc
clc
xchg
sbb
inc
add
test
addr16
popf
sub
xor
add
and
add
rolb
outsb
xchg
xchg
pop
ljmp
stos
fcomi
ret
or
fidivs
or
pop
sub
add
add
and
add
clc
xchg
inc
clc
arpl
add
add
add
add
mov
clc
pop
je
pop
push
cli
das
adc
xchg
inc
clc
xor
xchg
sbb
js
roll
mov
or
clc
scas
dec
popa
add
sub
jne
add
stc
push
add
cmp
imulb
fadd
clc
mov
add
lods
push
loop
test
fbstp
lods
sbb
adc
add
jmp
add
std
jb
add
clc
dec
outsl
add
add
clc
lret
add
movsl
clc
mov
fdivrs
jno
add
cmp
add
sbb
xbegin
loope
clc
and
and
add
push
and
jb
add
add
arpl
add
clc
pop
inc
add
push
clc
mov
fldl
add
cld
mov
imul
sbb
in
cmp
clc
hlt
jp
xchg
cmp
cmpsb
clc
push
add
pop
clc
inc
add
ljmp
int
ret
sarb
dec
in
xor
add
add
add
rcll
add
clc
xor
mov
mov
scas
dec
mov
data16
sahf
test
test
into
push
fists
lcall
or
clc
into
pop
clc
movsl
clc
ss
fcoml
add
pusha
add
idivl
imul
clc
cmp
clc
mov
push
stc
push
jbe
dec
fwait
cltd
pop
xabort
sbb
cmp
push
clc
pop
or
dec
xor
aad
mov
add
dec
call
fcmovne
and
add
add
mov
sar
cltd
mov
adc
add
loop
int
clc
xchg
inc
clc
mov
or
mov
cld
xbegin
cmp
add
pushf
xchg
dec
out
pop
and
add
cmc
cmp
dec
push
add
mov
mull
pop
push
clc
repnz
xchg
loope
sbb
clc
cmp
cmp
inc
clc
aaa
idivb
notl
lcall
clc
nop
fwait
push
out
cmc
pop
sbb
add
insl
lret
out
sbb
add
add
hlt
in
out
jmp
add
add
mov
clc
inc
add
mov
add
add
jnp
clc
sbb
inc
clc
cs
or
clc
inc
add
cmpsb
clc
dec
fidivl
push
jnp
rsqrtps
add
fwait
clc
clc
inc
add
stos
ljmp
and
add
and
add
add
stos
int
add
call
mov
or
clc
out
ja
xchg
out
push
add
cmp
add
mov
cmp
lea
inc
add
imul
out
outsb
icebp
out
leave
dec
cmp
jge
gs
xor
add
add
xor
cmp
add
movsl
clc
cwtl
adc
add
mov
add
sbb
clc
sbb
bound
add
add
clc
jae
add
clc
test
push
add
nop
sbb
jl
xchg
sbb
je
stc
cs
mov
clc
xchg
mov
add
in
daa
clc
jl
clc
jp
dec
sbb
add
sbb
add
ret
clc
add
add
add
sbb
xbegin
clc
pop
sub
add
add
leave
xchg
push
imul
clc
add
add
adc
dec
mov
add
arpl
add
rclb
add
divl
add
loopne
jl
add
das
cmc
mov
cmpsl
clc
mov
add
jg
or
add
test
call
push
clc
xbegin
clc
or
clc
adc
add
movsl
clc
arpl
add
mov
dec
call
mov
push
cmp
clc
mov
add
out
xchg
insb
nop
inc
clc
ljmp
cmp
lcall
ficoml
xbegin
mov
add
or
xor
fwait
sub
add
pop
jl
xchg
cmpsl
clc
sahf
cmc
mov
add
iret
inc
clc
mov
cld
mov
sub
clc
pop
mov
clc
movsb
clc
loope
outsl
rorb
clc
xchg
sahf
bnd
clc
xchg
pop
clc
int3
push
jmp
ret
out
data16
out
push
in
pop
pop
cmc
jae
add
sti
sub
cmc
adc
add
cmc
lods
mov
push
loope
cmp
loope
mov
dec
and
add
into
and
add
mov
clc
pop
clc
push
inc
add
in
imull
or
add
test
movsb
clc
fwait
mov
call
inc
clc
xlat
xchg
cwtl
cmp
push
add
call
add
mov
sub
clc
mov
add
or
or
clc
cli
jecxz
aas
sbb
add
jmp
sbb
clc
pop
sbb
and
add
xchg
push
add
cmp
jle
add
ljmp
add
mov
mov
xchg
loop
mov
nop
jae
add
inc
clc
movswl
mov
cmp
clc
adc
add
out
fcmovbe
scas
add
push
pop
dec
aaa
jo
add
clc
mov
add
dec
or
add
jmp
adc
add
add
clc
push
add
jne
mov
xor
add
cmp
stos
xor
add
or
mov
add
mov
sbb
fcomps
ret
clc
addr16
mov
popf
sub
in
nop
sar
add
mov
xchg
lock
sub
mov
clc
adc
add
cmc
aam
add
add
push
add
adc
add
enter
or
inc
add
in
popa
add
cmpsb
clc
aad
cmp
xor
add
xchg
dec
clc
lret
clc
cmp
add
fidivs
fs
cld
mov
clc
test
xchg
bound
add
add
mov
clc
push
into
jmp
clc
js
scas
and
add
xchg
inc
add
sti
in
lret
repz
dec
or
scas
cs
jne
mov
clc
shll
add
clc
ljmp
push
sbb
cmp
clc
sbb
cmp
clc
inc
add
lcall
add
add
add
add
and
add
add
sbb
cmp
adc
add
into
lock
mov
clc
dec
cmp
push
hlt
cmp
clc
inc
add
or
lea
add
xbegin
xor
add
scas
cmp
negb
jne
clc
sbb
add
gs
or
mov
sub
clc
dec
inc
add
mov
mov
cmp
add
inc
add
mov
add
cmp
inc
clc
mov
jl
jl
add
or
clc
loope
cmp
clc
decl
sarl
mov
insb
sarl
popf
mov
ja
push
add
lods
push
fsub
clc
movsl
clc
pop
mov
add
pop
push
xchg
loope
daa
clc
test
clc
jl
ret
fmuls
inc
clc
xchg
cmp
in
inc
clc
movsl
clc
cmp
sbb
out
xchg
cmp
or
inc
clc
push
pop
enter
cmp
loopne
mov
cmp
add
sbb
add
test
sbb
add
mov
shrb
cmp
jge
pop
clc
mov
fldl
scas
pop
cmp
push
and
shl
jns
mov
scas
jb
add
sbb
xchg
add
ret
clc
sysret
clc
cmpsb
clc
add
add
pop
clc
ret
jbe
add
adc
add
out
icebp
pusha
add
lahf
pop
mov
cmp
lret
popf
xor
add
addr16
xchg
xchg
sbb
lret
aam
clc
cwtl
adc
add
add
loope
divb
mov
add
rcll
add
popf
test
add
xbegin
mov
mov
outsb
std
mov
mov
mov
cltd
loopne
pop
shlb
add
or
data16
jns
fs
or
add
xor
add
lea
scas
mov
pop
and
add
add
add
movsl
clc
aas
fwait
hlt
or
dec
and
add
xor
add
clc
daa
clc
jl
add
mov
stc
jns
mov
clc
fbstp
add
and
add
add
add
mov
mov
add
adc
add
add
pop
mov
add
inc
clc
icebp
or
sbb
clc
push
daa
clc
pop
xor
add
and
add
loope
jmp
pop
mull
add
add
addr16
xlat
cli
or
add
loop
das
push
xlat
arpl
add
xor
add
add
mov
js
and
add
clc
dec
out
mov
scas
mov
in
inc
clc
jae
add
clc
rolb
push
add
mov
dec
div
pop
inc
add
fldenv
jmp
add
inc
add
dec
add
add
xchg
mov
dec
cli
aas
daa
clc
ja
inc
clc
fnstsw
add
add
stos
daa
clc
sub
add
add
je
clc
mov
mov
clc
adc
scas
cmp
add
cs
repnz
ja
add
aad
add
in
pop
js
jns
inc
clc
lock
ljmp
aaa
push
xchg
sub
or
adc
add
clc
frstor
add
add
mov
clc
jmp
clc
arpl
add
out
push
fwait
sub
lods
call
clc
add
sub
xor
add
mov
test
ret
clc
xchg
data16
test
add
dec
mov
jecxz
leave
adc
add
clc
rclb
add
sbb
xchg
fwait
inc
add
bound
add
imul
jp
add
out
mov
mov
cs
sar
cltd
and
add
xchg
mov
clc
shl
clc
mov
mov
pop
pop
mov
sahf
dec
dec
fists
clc
loop
cmp
clc
std
push
add
test
mov
clc
push
add
add
add
add
filds
sar
adc
scas
fidivrl
fldcw
pop
pop
mov
add
mov
add
mov
clc
mov
dec
fs
adc
add
jl
int
clc
push
cmpsb
clc
push
add
aad
js
clc
inc
clc
mov
add
mov
cmpsb
clc
inc
clc
xchg
out
xor
add
cltd
das
hlt
icebp
jmp
sub
gs
sbb
or
pop
lea
lret
mull
clc
mov
mov
cmp
pop
adc
add
mov
add
ds
roll
add
jns
clc
pop
leave
test
fdivp
mov
cli
add
add
add
jp
shll
add
clc
inc
clc
lret
adc
add
clc
push
add
pop
fwait
bound
add
add
and
mulb
adc
add
xlat
das
inc
clc
mov
sar
dec
sahf
pop
cmpsb
clc
cmp
clc
pop
push
jbe
imul
aaa
inc
add
sub
pushf
icebp
and
es
cmp
fsts
mov
add
test
inc
clc
nop
in
daa
clc
scas
cmpsl
clc
out
js
mov
add
mov
stc
push
add
stc
rcr
and
add
dec
xlat
dec
jns
fldenv
aam
adc
add
sub
and
mov
push
sbb
clc
xor
add
clc
mov
fdivrl
bound
add
add
clc
pop
mov
add
lea
clc
jecxz
lret
add
lods
pop
movsl
clc
xlat
fiaddl
add
popa
add
mov
clc
xchg
pusha
add
mov
cmp
pop
sbb
popf
xabort
mov
fidivrs
mull
scas
add
add
inc
add
pop
inc
add
cltd
mov
lods
push
inc
clc
pop
xor
add
xlat
pop
cmp
mov
clc
adc
add
fstl
add
clc
cli
daa
clc
ljmp
clc
dec
sti
daa
clc
sub
add
leave
jne
inc
clc
xchg
scas
test
sub
add
sub
dec
ret
clc
fsubr
ljmp
cli
aas
xchg
dec
inc
clc
and
add
fwait
mov
repnz
mov
jmp
imul
movsb
clc
push
add
add
add
add
add
loopne
shrl
add
jg
pop
xchg
pop
clc
jae
add
adc
add
mov
add
inc
add
xor
add
push
add
or
clc
pop
xor
add
jns
lock
in
enter
ret
clc
jb
add
xor
add
add
repz
push
fs
xabort
pop
mov
clc
xchg
mov
clc
clc
jne
add
insb
mul
clc
in
ja
mov
mov
clc
insb
repz
clc
push
add
aad
out
daa
clc
cmp
aad
insb
push
add
inc
clc
cmp
sbb
js
add
addr16
repz
movsl
clc
adc
add
add
cmp
inc
clc
inc
clc
cmp
adc
add
lret
test
pop
push
add
pushf
pusha
add
mov
pop
inc
clc
jbe
out
add
add
clc
push
test
clc
dec
jo
add
xor
clc
icebp
pusha
add
cld
adc
add
add
jbe
xor
add
mov
mov
dec
mov
jo
add
or
add
lock
clc
in
clc
xor
add
loope
dec
cmp
add
add
clc
nop
fstpt
or
pop
mov
or
clc
ficoml
lret
add
add
push
add
add
lret
dec
sar
out
mov
xor
or
xlat
xor
add
add
sbb
inc
clc
dec
sub
ret
jb
add
aad
mov
add
aam
jno
add
add
add
add
sar
clc
decb
sub
outsb
or
add
mov
fistpll
clc
sti
cld
loop
in
mov
inc
clc
mov
mov
lret
add
add
incl
push
sahf
loopne
loop
out
push
add
clc
inc
add
scas
mov
sbb
clc
das
xchg
das
cmc
mov
xchg
push
mov
or
push
adc
add
clc
xchg
leave
into
out
push
lcall
ljmp
clc
mov
clc
cmp
ja
add
fwait
xchg
sub
pop
adc
add
add
adc
add
add
cmp
push
add
lcall
xor
ja
out
sbb
mov
add
or
fldenv
add
test
sbb
cmp
inc
clc
mov
pop
lock
clc
enter
pop
xor
add
clc
mov
lods
push
jb
add
clc
icebp
inc
clc
sub
jne
push
cwtl
outsl
jmp
cmp
popl
clc
jge
data16
mov
lret
inc
clc
pushf
sub
sub
add
jne
jg
add
ret
clc
loope
sar
shlb
add
or
add
push
add
in
loopne
sbb
pop
or
cmovs
lret
sbb
inc
clc
cmpsb
clc
int
add
arpl
add
clc
leave
hlt
test
clc
cli
cmp
lret
or
add
push
add
xlat
or
push
add
cmc
push
cmc
ja
mov
cld
ljmp
cmp
jp
fdiv
xchg
jp
sbb
js
mov
clc
data16
mulb
add
sbb
or
clc
loopne
cmpsb
clc
mov
nop
stos
mov
jl
pop
out
add
add
push
or
and
add
add
fnstenv
pop
inc
add
push
xor
clc
jg
nop
aad
add
cmp
inc
add
xchg
cmc
jmp
jl
add
or
pop
adc
aas
lahf
mov
add
pop
inc
clc
lods
rolb
dec
jo
add
xor
stc
leave
lahf
hlt
out
lock
xlat
add
add
pop
daa
clc
push
xchg
push
cmc
push
fimuls
out
pusha
add
add
rcrl
add
add
enter
add
or
fmuls
test
mov
xchg
das
inc
clc
data16
xlat
loop
xor
add
xchg
not
in
pop
sti
or
out
bound
add
and
cmp
clc
test
push
jne
push
xchg
clc
cmpsb
clc
popf
adc
add
clc
sarb
jns
xchg
fisubs
clc
cmp
and
add
dec
sbb
clc
sti
push
clc
mov
cmp
add
test
test
cmp
cld
ljmp
iret
or
fmul
std
pop
loopne
mov
jl
imul
add
mov
jb
add
xor
add
add
mov
clc
aas
pop
push
cmpsb
clc
into
pop
xor
add
int3
push
sbb
fists
push
pop
push
clc
rcll
ret
clc
std
sar
clc
cltd
pop
clc
mov
add
add
mov
xchg
ror
push
add
jno
add
fildll
test
add
add
add
or
into
mov
add
push
clc
mov
add
mov
add
add
out
test
mov
cmp
pop
jo
add
addr16
push
clc
fwait
mov
jbe
add
xor
add
clc
inc
clc
lods
std
mov
clc
je
add
jno
add
xchg
and
add
clc
clc
pushf
mov
add
xchg
shlb
clc
adc
add
pop
xor
insl
cmp
dec
mov
add
sahf
and
add
ficoms
add
inc
clc
pop
pop
pop
sub
iret
push
je
sbb
loopne
adc
add
add
cld
jmp
clc
jp
add
dec
loop
add
add
jecxz
mov
insl
aaa
daa
clc
cmp
jne
scas
cmp
fcmovb
clc
push
ljmp
add
clc
jno,pt
add
add
mov
test
adc
clc
cmp
add
lods
jmp
clc
dec
roll
add
mov
mov
insb
or
add
mov
fisubl
jp
cmpsb
clc
enter
jge
inc
clc
dec
fsubrs
or
xlat
nop
jge
test
fidivrs
mov
add
mov
aam
clc
inc
add
pop
clc
cmp
fwait
add
add
scas
pop
int
lods
dec
scas
xchg
adc
add
add
fisttpl
clc
mov
daa
clc
adc
add
add
clc
arpl
add
cmp
dec
jns
jle
clc
jns
mov
lret
push
push
add
fisubrl
clc
dec
and
add
into
popa
add
test
and
xchg
fsubrs
cmp
clc
and
add
stos
inc
clc
loopne
pop
loop
add
add
add
pushf
dec
xchg
pop
mov
clc
adc
add
clc
xchg
and
add
loop
cmp
data16
mov
fcoms
add
fwait
sub
add
clc
leave
arpl
add
cmpsb
clc
dec
xor
add
dec
stc
mov
arpl
add
dec
repz
add
push
aam
in
test
test
test
and
add
xchg
sbb
jmp
add
add
add
loope
popa
add
push
clc
fwait
loope
fs
pusha
add
lret
adc
add
dec
add
add
add
cmp
add
xor
add
add
inc
clc
aad
add
add
sub
add
dec
es
inc
clc
movsl
clc
mov
add
xor
jmp
add
cwtl
cmp
out
or
loop
nop
loopne
lods
mov
mov
sub
clc
pop
xor
shlb
xchg
mov
mov
xchg
enter
sbb
add
or
add
clc
sbb
inc
add
test
push
add
ja
add
add
add
sbb
mov
jg
daa
clc
inc
clc
scas
jno
add
xor
add
enter
clc
push
clc
push
add
add
je
rcrb
pop
fwait
inc
clc
xlat
iret
mov
call
imulb
pushf
clc
outsl
xor
add
add
psubusb
xor
add
and
add
or
insb
cmp
xor
add
add
jl
iret
mov
test
adc
popf
lcall
add
loope
shrb
push
inc
clc
inc
clc
dec
aad
add
aaa
push
add
jp
clc
sbb
sbb
add
add
pop
out
fimuls
repz
add
add
bound
add
inc
add
push
add
lret
push
add
nop
stc
dec
cmp
mov
adc
clc
cmp
xor
lock
vminps
add
jnp
clc
insb
xabort
mov
add
int
out
mov
call
push
cli
push
fisubrs
clc
xchg
inc
clc
push
clc
jmp
sbb
nop
jne
mov
clc
insl
insl
test
cmp
add
in
in
cmp
add
add
add
add
add
pop
sbb
es
push
sahf
inc
clc
sub
push
imul
clc
rolb
add
cld
or
clc
imul
pop
ljmp
clc
clc
fdivrl
jmp
nop
call
pop
pusha
add
ret
clc
xor
add
pop
add
add
clc
aad
inc
add
repz
cmp
add
jle
clc
push
xor
add
mov
clc
ret
clc
push
clc
or
clc
mov
xchg
test
out
aaa
push
clc
jne
shlb
pop
repz
data16
in
pop
push
add
pop
xor
add
dec
cmpsl
clc
scas
sub
cmp
add
clc
dec
mov
add
add
add
add
dec
push
clc
xor
add
fucomip
lahf
aad
cwtl
xabort
clc
jg
xor
mov
push
add
test
add
movsb
clc
push
add
mov
fnsave
add
jbe
clc
adc
add
add
into
dec
mov
pop
sbb
push
sar
nop
adc
add
mov
inc
add
incb
add
add
add
clc
test
push
add
mov
test
push
lock
add
sub
add
cli
ljmp
add
lret
cmp
repnz
out
mov
imul
and
add
dec
and
add
add
fistl
loope
xor
add
sbb
inc
clc
out
mov
inc
clc
xchg
repz
or
add
push
add
ja
ret
fisttpl
push
mov
add
clc
dec
mov
add
sbb
add
fs
cmp
clc
jo
add
lret
lcall
pop
movsl
clc
jne
or
clc
mov
clc
or
dec
clc
adc
add
jmp
stos
sub
add
fwait
cmp
and
add
push
add
or
adc
add
into
mov
fwait
pop
dec
std
gs
jl
clc
pop
dec
or
add
hlt
xor
add
aas
lahf
or
clc
pop
loop
pop
shll
add
cmp
xchg
sbb
clc
cmp
sbb
jo
add
lcall
add
pusha
add
popf
lret
mov
pop
out
jne
repz
cmp
clc
dec
movsl
clc
ds
clc
jle
xchg
inc
add
bound
add
clc
push
clc
mov
sbb
add
xabort
sti
push
clc
mov
inc
clc
mov
mov
add
enter
add
sub
add
add
xor
add
add
add
mov
int
out
lcall
push
add
jmp
add
pop
lods
aad
clc
dec
or
hlt
in
sahf
jmp
clc
push
xchg
inc
clc
in
xchg
das
sahf
mov
clc
mov
clc
sbb
clc
push
add
lret
pop
cmp
add
push
shrb
xchg
lods
adc
and
add
push
clc
cltd
xor
add
push
pop
clc
sbb
lret
xchg
sub
sub
imulb
shll
add
aad
clc
sbb
das
inc
add
push
cmp
sub
and
add
dec
lea
sbb
insb
fdivl
mov
das
mov
clc
sub
xor
sub
jae
add
bound
add
push
cld
push
ret
sub
add
add
add
add
add
adc
add
shrl
sbb
or
fwait
jmp
jp
sub
js
xlat
dec
dec
mov
and
add
add
jbe
test
ljmp
add
xor
add
add
add
add
push
add
cltd
dec
mov
pop
dec
leave
inc
add
cmpsl
clc
or
clc
ss
clc
xor
clc
push
mov
fwait
jmp
mov
inc
clc
mov
clc
xor
add
clc
dec
aam
pop
std
ror
insl
push
add
adc
add
out
neg
bound
add
lods
sub
das
test
xlat
ss
cmp
sar
clc
fs
cli
repnz
clc
mov
add
add
adc
push
pop
shl
clc
stc
jnp
jl
push
push
fwait
jmp
xor
cmp
dec
cmpsl
clc
jp
loop
in
stos
jb
add
add
add
mov
jp
clc
outsb
push
add
stos
cmc
inc
clc
sub
add
int3
pop
sub
xabort
inc
clc
sub
jmp
xchg
test
dec
clc
lods
sub
clc
roll
add
mov
clc
xor
clc
out
insl
iret
in
cmp
shrl
lret
inc
clc
ja
in
push
cmp
cmp
leave
add
add
clc
cmc
sahf
cs
dec
cmp
fwait
jmp
das
and
adc
clc
sbb
xchg
cli
lods
imulb
clc
xchg
inc
add
mov
aam
pop
test
cmp
sub
add
add
add
add
add
repnz
clc
mov
add
loop
push
push
cld
push
ret
add
clc
lahf
loope
push
xchg
test
inc
clc
dec
aam
je
xchg
push
add
adc
inc
clc
add
add
mov
clc
arpl
add
add
add
add
movsl
clc
aad
lahf
mov
add
jmp
push
fwait
jmp
add
jge
jae
add
inc
add
xlat
xbegin
clc
mov
pop
mov
xor
add
clc
in
out
fildll
cli
fwait
jmp
or
and
add
int
loope
adc
add
clc
jbe
add
fists
cmpsl
clc
mov
das
mov
add
add
js
mov
aam
and
add
ret
clc
jmp
lcall
add
lods
into
mov
clc
pop
cmp
nop
gs
or
add
sbb
dec
lret
dec
xabort
mov
add
push
add
ds
jnp
mov
pusha
add
mov
mov
decl
dec
jb
add
outsl
and
mov
bound
add
imul
jmp
cmpsb
sub
clc
popf
daa
clc
pop
cld
lret
mov
out
mov
push
test
sub
add
mov
add
fld
clc
jge
clc
cmp
fwait
xbegin
cmpsl
clc
repz
clc
fidivs
clc
out
add
add
add
clc
out
int
pop
mov
xchg
push
add
add
xchg
sub
clc
mov
add
clc
test
pop
mov
fildll
add
divl
inc
add
mov
jnp
clc
pop
int3
js
mov
jge
mov
add
clc
daa
clc
iret
dec
testb
dec
or
jmp
add
adc
fwait
jmp
andb
mov
sahf
inc
add
gs
lcall
add
cwtl
pop
in
cmpsl
clc
ljmp
and
add
fisubl
add
push
cld
push
ret
adc
lods
outsl
aas
inc
add
xor
clc
arpl
add
push
cld
push
ret
aaa
aaa
sub
hlt
xor
mov
clc
push
stos
sbb
add
popa
cwtl
scas
ret
dec
cld
popa
add
addr16
pop
clc
lock
clc
hlt
rolb
add
clc
and
add
or
or
add
add
sub
fwait
aas
ret
clc
jno
add
xlat
mov
xchg
mov
ret
stos
jge
push
jmp
xor
clc
pop
xchg
add
add
push
clc
lret
add
aam
push
add
rcrl
add
cmpsl
clc
jl
clc
loopne
sub
cwtl
in
jnp
cmp
fwait
jmp
adc
aas
pop
push
repz
jge
lahf
jp
out
rcrl
popa
add
clc
lret
add
cmp
fistpl
xbegin
dec
push
clc
and
add
mov
mov
mov
mov
mov
insl
lret
and
add
mov
add
scas
mov
add
inc
clc
mov
add
cltd
mov
clc
dec
fisttps
pop
rclb
mov
inc
add
push
add
pop
ds
sub
dec
pop
add
fwait
and
pop
nop
jle
test
add
aad
aaa
call
test
repnz
cmp
aam
add
call
pop
sub
mov
clc
cwtl
add
add
adc
add
fs
lods
inc
add
iret
sahf
inc
clc
test
pop
incl
jmp
xchg
dec
adc
jne
stos
jno
add
add
add
cmpsb
clc
rorl
add
popf
test
data16
and
add
nop
push
add
das
pop
jne
decl
fwait
jmp
or
sub
add
pushf
mov
sar
mov
clc
aaa
cltd
pop
decl
test
add
fwait
jmp
fistpll
pop
outsb
popa
add
test
sbb
clc
dec
push
xor
add
add
clc
imul
and
add
push
xor
add
fwait
jmp
add
out
sar
push
pop
add
test
mov
dec
adc
push
ret
dec
das
push
sbb
clc
xchg
into
pop
test
fwait
cmp
repz
fisubrs
mov
and
add
aad
push
clc
pop
mov
cmp
clc
outsb
and
add
add
insl
add
add
cmp
add
cmp
push
fidivrl
lret
jge
add
push
in
mov
mov
fwait
aaa
jno
clc
enter
mov
sar
xor
add
pushf
or
pop
cmp
into
insl
sbb
sbb
stc
pop
cmp
fisubrs
inc
clc
lcall
cltd
xchg
pop
ret
clc
fistl
es
into
jae
add
jecxz
mov
ret
clc
fiaddl
cmp
lods
dec
pop
pop
mov
and
add
jmp
push
pop
jno
clc
xor
add
loope
sub
clc
pop
pop
xchg
dec
inc
add
aas
xchg
or
lock
push
out
loopne
into
sbb
pop
jnp
mov
sub
ja
and
sub
mov
mov
clc
add
xbegin
mov
out
aas
push
jecxz
divb
add
add
dec
sub
ds
add
sbb
push
push
fwait
jmp
cwtl
or
clc
pop
pushf
sbb
sbb
mov
xchg
aaa
pushf
cmp
rol
clc
pop
push
add
data16
lea
ret
or
insl
push
push
cld
push
ret
nop
je
sub
add
mov
pop
dec
stos
mov
mov
add
mov
xor
jecxz
pop
jp
js
mov
int
out
pushf
xchg
xor
add
gs
push
add
inc
clc
imul
imul
dec
ficomps
loopne
into
dec
popf
fmuls
aam
test
addr16
imul
dec
inc
clc
jle
and
dec
xbegin
addr16
cld
js
and
clc
jae
add
add
add
scas
insl
mov
clc
dec
jmp
fadds
dec
pop
pushf
lret
cmp
cs
aam
add
bound
add
stos
push
ror
loope
sar
cmp
add
mov
sar
mov
add
mov
mov
xchg
iret
xchg
sbb
xor
add
gs
cmp
push
clc
cmp
adc
add
add
add
es
push
fldcw
mov
jge
outsl
pop
dec
dec
pop
cmp
mov
add
add
inc
clc
pop
cmp
cmp
add
lret
add
xor
add
xabort
mov
cmp
clc
cmp
mov
mov
mov
gs
jmp
inc
xchg
jge
mov
lahf
lods
lret
aaa
fsubs
in
popa
add
mov
stos
sar
jo
add
imul
clc
push
push
add
inc
add
cli
or
add
add
loop
and
and
add
imul
clc
lret
cmp
lods
sbb
add
dec
ficoms
jecxz
inc
add
xchg
push
push
clc
fnstcw
jmp
add
adc
add
fdivrl
cld
push
ret
sub
popa
nop
pusha
add
or
clc
mov
dec
repz
clc
mov
add
adc
add
jns
daa
clc
scas
push
push
add
lea
add
dec
xor
add
xor
add
jl
xchg
sbb
nop
stos
jl
lcall
push
ret
push
inc
je
add
add
addr16
cmp
pop
ret
fildl
add
out
call
push
add
jmp
das
mov
fs
dec
mov
clc
mov
lods
inc
add
push
add
push
jnp
clc
in
stos
mov
jmp
jg
data16
xabort
idivb
clc
fsubrs
add
dec
jl
fisttpll
push
add
test
add
and
add
push
test
xor
add
outsl
sbb
add
xchg
mov
add
ret
clc
dec
je
sbb
clc
movsb
clc
cmc
mov
clc
jbe
hlt
add
add
add
add
fdivrl
clc
mov
clc
fmul
bound
add
cmp
ss
out
cld
leave
or
inc
add
out
fmull
add
add
xabort
or
clc
xabort
popf
cmp
clc
sub
in
inc
clc
pop
sub
mov
lret
mov
add
add
lods
pop
inc
clc
cmp
and
add
clc
add
add
std
jne
scas
sbb
add
cmp
test
sbb
movsl
clc
cli
rorb
rorl
clc
cmp
clc
or
scas
lahf
cmp
add
pop
test
mov
mull
jno
add
shr
fwait
jmp
push
orb
add
fwait
clc
fsubr
or
add
mov
or
clc
std
jo
add
cs
in
or
pop
xchg
or
add
jmp
add
xor
mov
fwait
jmp
pop
out
out
loope
mov
sbb
mov
cmp
add
sub
add
fwait
jmp
cmpsb
cmp
cmc
cs
jb
add
cwtl
pop
push
clc
fwait
push
repz
mov
pushl
rcrb
add
xchg
sbb
jo
add
inc
add
xchg
bound
add
clc
stos
mov
push
and
add
or
cltd
fisttps
and
add
into
jl
icebp
pop
cmc
bound
add
lods
xor
and
add
scas
fwait
cwtl
fwait
add
add
clc
mov
arpl
add
mov
call
add
jb
add
je
fwait
jmp
or
ss
shll
jg
xchg
cmp
cli
lcall
jbe
clc
bound
add
jnp
pushf
mov
mov
clc
mov
loop
clc
outsl
pop
hlt
movsb
clc
addr16
test
out
call
sub
clc
jle
pop
imul
pushf
push
cmp
sub
inc
add
sbb
add
xchg
test
jae
add
es
into
scas
push
add
fnstsw
cmp
test
fucom
clc
sbb
fwait
jmp
xor
clc
add
xbegin
adc
repz
inc
add
pop
fwait
dec
jl
xchg
xabort
sub
add
add
test
push
clc
xor
add
sbb
jnp
inc
add
xchg
popf
pop
xabort
test
xabort
and
add
dec
mov
in
sbb
lea
mov
xchg
xchg
bound
add
js
inc
clc
int
pusha
add
mov
clc
push
inc
clc
jp
popa
add
lock
bound
add
jns
clc
push
clc
fstl
cwtl
stc
leave
vrsqrtps
add
jecxz
cmp
mov
clc
pop
mov
push
add
push
je
fwait
jmp
call
mov
add
add
cmpsb
clc
sub
clc
clc
and
add
sar
sub
fwait
jmp
fwait
dec
sub
add
jbe
outsl
mov
cmp
clc
pop
movsb
clc
pop
pop
adc
add
xchg
fsubl
add
add
add
mov
or
add
pop
lea
cmp
clc
sbb
add
fwait
jmp
mov
clc
xor
add
xbegin
cmp
add
nop
in
js
stos
outsb
into
sahf
adc
add
add
pop
xor
add
clc
lea
or
xchg
pop
xor
add
add
xchg
outsl
sub
and
add
mov
clc
push
add
fwait
jmp
and
das
sar
or
xchg
movsb
clc
xchg
adc
add
out
pop
testl
fidivrs
stc
fs
mov
pop
clc
jge
std
fistpll
sub
xor
fwait
jmp
test
pop
es
out
lods
aaa
mov
fisubrl
adc
add
mov
clc
or
xchg
cmpsl
clc
sbb
sahf
sub
clc
jmp
popf
outsb
imul
test
jmp
cwtl
leave
xchg
jge
clc
int3
sbb
call
cmpsl
clc
cmp
mov
insl
nop
clc
xchg
out
jbe
testb
add
add
xor
jg
clc
cmp
add
jmp
aas
pop
shrb
movsl
clc
add
add
add
mov
add
mov
push
add
cld
push
ret
cbtw
adc
dec
mov
fwait
jmp
pop
add
add
add
mov
loope
sbb
enter
cld
push
ret
addb
aam
adc
hlt
pop
es
jmp
fwait
jmp
jg
push
imul
aas
mov
mov
add
mov
clc
faddl
add
add
adc
add
add
ret
je
fwait
jmp
push
add
sub
addr16
pop
mov
jmp
and
add
mov
add
mov
loop
sub
add
mov
push
fwait
jmp
scas
mov
cwtl
test
mov
hlt
mov
stc
or
sub
xchg
int
and
add
pop
cmc
cwtl
repnz
xchg
stos
mov
add
add
sbb
mov
add
push
mov
lock
incl
loop
es
sub
clc
icebp
data16
lret
es
shl
stos
pop
pop
outsl
fsqrt
sub
add
imul
dec
dec
mov
ret
test
jge
aaa
test
enter
test
and
add
pop
sbb
test
fadds
mov
push
clc
stc
jb
add
mov
nop
xor
add
jno
add
clc
sub
xbegin
dec
sbb
jmp
inc
or
clc
pop
add
add
inc
add
in
daa
clc
cmp
add
xchg
adc
add
mov
push
sbb
pushf
sbb
dec
lea
jnp
add
cli
cmp
xchg
push
clc
jge
into
add
mov
pop
clc
and
add
add
sti
inc
add
movsb
clc
not
xchg
cmc
fimuls
popf
in
sbb
clc
imul
fdivl
clc
testb
mov
push
movswl
fwait
jmp
nop
push
inc
add
mov
mov
stos
push
add
add
dec
sub
lret
insl
and
clc
xchg
fbstp
add
setae
repz
insb
in
hlt
into
and
add
inc
clc
insl
sti
xor
add
out
push
add
mov
sbb
fwait
jmp
xorb
clc
or
scas
and
mov
addr16
out
test
clc
jbe
cmp
js
add
xchg
int
sub
add
add
add
ret
scas
stc
sahf
push
add
fwait
jmp
dec
cld
xor
sbb
cmp
add
xchg
sub
sub
sbb
clc
and
add
push
clc
movsb
clc
sub
pop
data16
dec
es
cwtl
sbb
push
add
sub
adc
xor
sbb
add
pop
mov
xchg
inc
clc
mov
add
adc
add
jno
lods
jg
je
sub
inc
clc
mov
sbb
insl
push
add
fwait
jmp
push
insl
test
add
add
clc
adc
add
in
sub
mov
jae
add
clc
out
push
add
nop
jecxz
stos
fnstcw
lret
repnz
aas
jp
clc
std
iret
dec
pop
clc
jmp
clc
insl
stos
lods
scas
push
add
cli
shrl
sub
add
aam
adc
add
test
inc
add
jbe
rep
loope
cmp
filds
add
mov
mov
data16
je
icebp
sub
lret
ljmp
imul
lcall
shlb
add
jo
add
stos
icebp
inc
add
maxps
add
xchg
cmp
add
es
cmp
xchg
in
rclb
add
mov
lret
jnp
xor
add
stos
push
push
fwait
jmp
and
clc
dec
es
jecxz
mov
clc
repnz
clc
negl
add
add
out
out
dec
fwait
cmc
negb
jb
add
add
or
flds
fs
xor
add
and
add
aas
leave
push
add
fisubs
xchg
dec
dec
mov
clc
cmp
call
add
push
add
aaa
pop
sub
add
shll
sar
clc
or
mov
inc
clc
ja
test
push
dec
lock
outsl
push
add
fbld
add
aam
es
mov
mov
ret
clc
push
clc
ljmp
push
clc
mov
mov
add
add
dec
js
push
add
es
out
in
aas
dec
push
pop
loop
pop
int
jne
clc
jmp
clc
in
into
inc
clc
ss
stos
in
pop
hlt
inc
add
xchg
mov
rep
fwait
jmp
lods
sub
clc
jo
add
add
adc
inc
clc
sar
xlat
icebp
mul
clc
mov
cwtl
insl
and
add
add
mov
xchg
pop
lock
jmp
add
mov
dec
jo
add
add
popf
push
add
imul
add
mov
pop
adc
add
clc
lock
pop
mov
scas
es
ret
mov
xabort
clc
gs
or
fldcw
clc
scas
bound
add
stos
jnp
sbb
add
sub
out
dec
xor
add
clc
pop
sbb
clc
cmp
jecxz
clc
ret
clc
shl
clc
daa
clc
test
aad
pop
push
xchg
idiv
ljmp
or
xchg
mov
out
movsb
clc
sub
lcall
push
ret
jge
adc
adc
add
enter
clc
add
daa
clc
gs
das
pop
pop
clc
push
add
addr16
mov
repnz
lret
pop
clc
std
lret
xor
add
cwtl
adc
sar
jge
inc
clc
test
insl
ror
stos
xor
add
ss
add
fsubrs
fmulp
xchg
or
scas
dec
in
fldpi
bound
add
pop
dec
lret
add
aad
pop
clc
dec
pop
xor
add
jns
clc
mov
into
filds
add
and
add
adc
add
add
add
fsubrs
clc
sbb
xlat
imul
dec
clc
sub
add
and
add
mov
fwait
jmp
and
add
fwait
jmp
and
add
clc
adc
add
add
mov
dec
inc
add
popf
inc
add
or
mov
add
adc
add
clc
stos
or
jmp
and
clc
push
add
clc
inc
clc
sub
clc
arpl
add
pop
into
and
add
add
and
add
iret
mov
clc
cmp
add
add
shrb
xor
add
push
add
repnz
xor
add
add
sbb
push
add
test
xchg
add
fwait
jmp
or
mov
mov
clc
in
mov
adc
add
add
pop
aas
int3
sub
cmp
adc
add
push
loop
lock
add
xlat
xchg
or
add
pusha
add
mov
clc
movsb
clc
jl
stos
xchg
in
loope
pop
jmp
clc
dec
xor
add
lock
jmp
lea
mov
and
add
xbegin
clc
jle
cmpsl
clc
xchg
rol
clc
jo
add
sbb
nop
sahf
mov
add
and
cs
in
shlb
add
mov
imul
dec
cmp
aam
clc
xchg
inc
clc
cli
out
gs
fcomps
in
je
add
add
jo
add
aam
clc
sti
std
cmp
pop
movsl
clc
daa
clc
jmp
xchg
leave
mov
sub
pop
and
add
rclb
add
rcll
sahf
dec
xchg
xchg
jns
into
jmp
clc
push
add
push
movsb
clc
push
add
xor
add
add
fnsave
pushf
jb
add
in
mov
lea
insl
mov
sub
ret
test
push
bound
add
pusha
add
into
mov
ljmp
sti
and
add
add
pop
jge
xchg
cmp
lods
mov
fldl
jno
add
add
lods
mov
add
mov
enter
testl
clc
ret
clc
pop
mov
pushf
xor
add
clc
arpl
add
mov
pop
clc
cli
ret
clc
cld
dec
loop
xchg
int
cli
add
and
add
sti
add
cmp
negb
clc
mov
fscale
fidivrs
clc
jo
add
add
es
pop
clc
xabort
pushf
xabort
clc
into
stc
jmp
test
pop
movsl
clc
add
add
imul
clc
mov
cmp
add
pop
sub
push
shr
dec
push
clc
lods
inc
clc
push
add
pop
lcall
mov
add
xchg
cmpsb
clc
sub
gs
inc
clc
mov
addr16
lcall
out
clc
lret
push
add
je
or
add
dec
xchg
fimuls
pop
push
adc
add
clc
pop
and
add
or
test
and
pushf
inc
clc
xchg
cld
outsb
in
ds
clc
push
add
pop
out
xabort
mov
add
aaa
mov
jo
add
xbegin
popa
add
fldlg2
lret
cli
mov
xchg
ror
push
add
movsl
clc
jecxz
mov
or
movsl
clc
or
inc
add
xor
add
inc
clc
jecxz
xchg
imul
add
clc
sar
lock
add
add
clc
push
jmp
add
mov
clc
adc
jne
mov
jb
add
clc
mov
cmp
cmp
clc
dec
imul
add
add
cld
mov
mov
sbb
add
clc
jl
pop
mov
fwait
jp
inc
clc
out
xchg
dec
fmull
imul
shll
add
or
sbb
cmp
sub
clc
sub
pop
clc
jae
add
rolb
add
add
sbb
clc
xlat
popf
cmp
clc
into
in
loop
or
insl
or
clc
mov
out
outsl
ficoml
push
push
pop
sbb
add
lret
pop
jbe
cmp
out
stc
mov
mov
cld
push
ret
es
add
add
push
jae
add
clc
aas
jae
add
jmp
add
jae
add
clc
cmp
incl
push
ret
sahf
dec
and
lret
fbstp
add
mov
sub
inc
clc
cli
inc
add
lret
add
loopne
cmpsl
clc
in
lcall
rorb
mov
mov
clc
dec
cwtl
adc
add
dec
cmp
push
sbb
cmpsb
sahf
mov
clc
push
pusha
cld
push
ret
je
test
movsb
clc
jg
lea
lods
sbb
and
jmp
aas
sub
ss
leave
push
pop
sub
xor
clc
sar
or
add
mov
in
and
add
clc
int3
sti
cltd
cmp
add
cmp
add
xlat
and
mov
dec
lahf
cmp
sbb
stos
or
add
imull
push
add
outsl
xabort
ljmp
sbb
clc
mov
add
cld
push
ret
or
mov
clc
cld
inc
add
lods
sbb
out
fwait
jmp
or
sbb
clc
daa
clc
jmp
dec
cmp
jns
test
sar
mov
lods
pop
clc
mov
add
xor
add
add
pop
lcall
clc
addr16
push
add
sbb
in
add
pop
ds
test
add
iret
push
pop
insl
sti
mov
clc
aas
rcrl
iret
xor
insb
sbb
clc
sub
clc
loop
sub
inc
clc
pop
clc
insl
arpl
add
add
imul
add
add
pop
popa
add
inc
add
add
add
pop
dec
dec
sub
dec
loopne
push
sbb
fildl
ret
mov
imul
sbb
push
mov
or
jo
add
sar
pop
jmp
and
add
add
inc
clc
and
daa
clc
cmpsl
clc
mov
lret
clc
dec
sub
in
cmpsl
clc
jns
jge
add
and
aas
aad
xchg
cld
pop
mov
push
ret
cmp
decl
inc
add
test
add
sbb
clc
push
decl
mov
add
sub
out
xabort
xchg
xor
add
push
fwait
jmp
mov
adc
or
add
mov
fwait
jmp
xor
add
adc
add
jns
clc
ljmp
add
loop
pop
inc
add
scas
cmp
clc
inc
add
adc
add
or
add
add
scas
mov
clc
repz
add
lcall
add
mov
and
fwait
jmp
push
xor
ljmp
add
jge
fs
loope
dec
mov
jmp
insb
nop
cwtl
lock
sar
add
roll
add
mov
sbb
or
clc
cmpsb
clc
call
scas
jl
cmp
ja
xor
add
decl
xor
inc
add
dec
or
loop
imul
add
sbb
cmp
xchg
fdecstp
clc
mov
lods
mov
adc
clc
xchg
fisubl
add
test
add
or
or
jae
add
clc
sub
cld
push
ret
inc
push
jae
add
clc
in
xbegin
inc
add
pop
or
clc
mov
clc
mov
mov
pop
movsb
clc
push
adc
mov
push
fstpl
add
add
mov
add
bound
add
add
lods
add
add
test
clc
xchg
ss
add
jo
add
cmp
or
mov
push
adc
cmp
xchg
js
clc
adc
add
cmpsl
clc
dec
test
rcr
or
popa
add
rol
clc
popf
clc
icebp
ljmp
inc
clc
sbb
add
mov
xchg
fmulp
inc
add
xor
fwait
jmp
sub
and
sbb
clc
sbb
mov
out
pop
clc
lods
jno
add
and
add
lret
add
jbe
add
add
add
sarl
and
add
clc
dec
xchg
xchg
or
push
add
add
adc
add
clc
loop
push
add
and
add
add
add
add
lea
mov
fwait
jmp
add
push
imul
fwait
jmp
adcb
xchg
iret
enter
pop
sub
pop
push
add
dec
add
lret
xchg
push
roll
movsl
clc
xchg
push
pop
mov
cmp
rcrb
sub
add
clc
cmp
clc
cmp
add
enter
lock
lret
cld
push
ret
sbb
jp
aas
add
pushf
pop
pop
clc
xchg
fidivrl
mov
out
sub
clc
cmp
mov
clc
mov
imul
add
jno
add
clc
pop
xchg
or
pop
insl
gs
push
clc
fimull
jmp
out
cmp
inc
clc
repnz
sub
push
test
jmp
jb,pt
fwait
jmp
fs
test
pop
pop
test
clc
arpl
add
addr16
insb
test
jno
add
xor
add
sbb
jmp
sub
clc
and
inc
clc
and
add
push
add
add
xor
insb
mov
outsl
jge
mov
mov
fwait
jmp
or
jge
clc
dec
bound
add
inc
clc
sub
add
xor
fwait
jmp
jge
inc
clc
ret
clc
insb
stos
test
clc
pop
mov
fwait
lret
test
dec
or
enter
adc
add
push
imulb
fs
jae
add
clc
mov
pusha
add
sbb
insl
adc
add
fs
pop
clc
xchg
sbb
xlat
mov
add
add
dec
es
cmp
add
add
out
mov
ss
popl
sub
nop
push
cmpsl
clc
pop
rolb
add
add
lods
dec
sub
clc
in
in
decl
add
add
mov
mov
clc
mov
inc
clc
or
push
clc
adc
add
add
sbb
sbb
inc
add
add
add
jmp
scas
jmp
add
push
add
ret
scas
and
add
mov
clc
or
call
cld
push
ret
add
outsb
adc
add
xchg
pop
adc
xchg
mov
jle
hlt
xor
repz
xor
enter
add
mov
lods
xor
cs
dec
xor
add
cld
stos
lcall
xchg
jl
leave
jmp
out
into
xchg
insl
sub
insl
fistl
fnstsw
mov
xor
clc
xlat
add
add
clc
pushf
inc
clc
mov
jno
add
mov
add
push
push
ret
push
cmp
add
lea
add
add
add
test
add
lret
pop
sahf
insl
push
add
mov
clc
mov
out
int
mov
add
add
add
sahf
add
add
clc
xchg
mov
mov
add
clc
mov
jmp
mov
fwait
jmp
push
ss
cmp
out
mov
mov
add
and
add
lods
mov
dec
sbb
cmp
mov
sbb
dec
cmp
fstl
add
lahf
insb
ret
clc
mov
cmp
jmp
add
mov
lods
ljmp
cmp
adc
adc
clc
jns
mov
clc
divb
fcomp
jle
frndint
xbegin
rorb
negb
add
push
fwait
jmp
add
push
clc
out
adc
add
shlb
icebp
cli
and
add
sub
add
cmp
xchg
add
add
push
jns
add
fwait
scas
cmp
or
lock
push
ret
nop
sbb
clc
push
test
cmp
clc
or
xor
arpl
add
clc
or
ja
clc
arpl
add
xchg
jo
add
add
add
sub
pop
je
add
out
rcl
je
loope
cmp
mov
or
clc
mov
pop
xchg
xabort
push
fwait
jmp
sub
popa
jno
xbegin
clc
pop
jg
mov
add
xor
add
clc
lcall
clc
faddl
add
cmpsb
clc
fiadds
add
dec
int
add
push
add
add
add
inc
clc
pusha
add
jns
clc
cmp
inc
clc
fnstsw
push
add
sar
push
add
push
add
mov
movb
and
test
or
mov
clc
push
add
add
add
add
mov
add
add
add
cmp
add
out
fimull
sub
mov
dec
shll
fstl
pop
movsb
clc
push
add
sti
pushf
or
outsb
pop
fwait
outsl
rcrb
push
add
dec
pop
dec
out
repz
cmp
add
jg
dec
jae
add
fcmovnu
fisubl
enter
fs
daa
clc
mov
lods
dec
mov
add
leave
jge
clc
add
add
adc
add
xor
add
je
aaa
mov
xor
add
clc
out
or
push
fwait
jmp
jno
fadd
clc
into
or
xor
add
clc
add
add
clc
sub
clc
pop
ret
sar
clc
fldcw
outsl
xchg
add
int3
int3
std
movsb
clc
sbb
cli
add
add
jno
add
push
adc
add
lods
je
sbb
push
ret
popa
xor
xor
add
push
inc
clc
sub
add
int3
aaa
outsb
sub
add
mov
clc
inc
clc
out
test
cmp
sbb
inc
add
jge
sbb
sti
add
add
ret
fxch
cmp
jmp
fwait
jmp
push
mov
std
bound
add
add
scas
ret
ficomps
loopne
mov
mov
push
clc
add
sub
shll
lea
sbb
clc
jg
cmp
jp
mov
clc
lahf
pop
stc
sbb
add
inc
clc
imul
cmpsb
clc
dec
xchg
outsb
loopne
mov
clc
push
aad
rep
cld
push
ret
push
and
sbb
push
sbbb
cmp
test
in
clc
mov
inc
clc
scas
push
cmp
cmp
enter
and
add
aas
add
add
sti
add
add
clc
sub
clc
xor
add
dec
in
inc
clc
enter
cmp
mov
add
fwait
jmp
ljmp
add
clc
or
xchg
es
mov
hlt
push
add
stc
mov
add
clc
sub
xbegin
clc
dec
cwtl
jns
and
add
inc
clc
std
aam
add
cmp
xabort
push
jbe
clc
out
out
xor
add
add
mov
je
fwait
jmp
daa
clc
adc
add
jle
insb
dec
xabort
mov
sub
rolb
clc
cmp
call
ret
mov
mov
add
pop
test
xlat
clc
mov
add
repz
push
add
fwait
jmp
imul
add
add
add
lea
clc
ljmp
outsl
and
clc
dec
stos
mov
int3
jge
jecxz
inc
clc
mov
clc
mov
clc
push
ja
xchg
sahf
inc
clc
out
scas
dec
sar
add
call
ret
fwait
jmp
sub
xchg
mov
jmp
clc
sbb
in
imul
sub
mov
sub
in
inc
clc
cli
lret
bound
add
add
notb
add
jns
sbb
cld
push
ret
push
push
cmp
clc
fdivrp
scas
add
add
add
add
xlat
jmp
clc
fimuls
add
nop
cwtl
aas
mov
xchg
clc
or
add
add
aam
aam
fldl
and
stos
xor
add
mov
jb
add
add
add
pop
xchg
mov
fwait
jmp
subb
add
add
xor
add
add
xchg
insb
jge
clc
cmp
add
outsb
imul
add
pop
sub
add
or
clc
sbb
add
push
jo
add
add
lahf
pop
xchg
push
inc
add
out
cs
or
clc
cmp
sub
out
insl
loop
inc
add
call
adc
push
fwait
jmp
movsb
nop
ja
push
rcr
fisubl
mov
out
xchg
testb
push
add
fmuls
jmp
insb
nop
pop
popa
mov
add
mov
push
cld
push
ret
das
sahf
pop
push
or
add
fwait
jmp
pop
sbb
inc
clc
xbegin
and
ret
insl
and
add
movb
xor
decl
cs
data16
icebp
std
testl
pop
push
mov
add
sub
inc
sbb
stos
inc
add
lock
cmp
inc
add
in
or
add
loope
pop
dec
adc
add
xchg
or
add
stos
cmp
xor
add
xor
add
add
add
aas
movsl
clc
insl
jp
daa
clc
stos
fistpl
stos
dec
cmc
sar
jp
stos
inc
add
sar
add
jnp
xchg
aas
vmovups
add
xchg
dec
testl
jl
inc
clc
outsl
push
data16
push
lcall
inc
clc
cs
test
out
inc
clc
popl
xchg
cmp
sub
lock
xor
add
insl
bound
add
cwtl
fcoms
add
push
nop
inc
clc
push
clc
pop
xor
add
divl
add
js
into
xabort
into
out
dec
or
hlt
aam
add
jno
add
addr16
sbb
sbb
add
xchg
aaa
and
add
ret
loopne
out
add
add
add
test
sbb
mov
shrl
sar
arpl
add
inc
clc
clc
iret
dec
push
test
fwait
jmp
or
clc
bound
add
int
sub
cmp
adc
pop
inc
add
fidivs
add
add
scas
mov
clc
popa
add
sbb
add
mov
cmp
clc
xor
add
clc
mov
or
ja
xchg
test
push
add
xor
add
cmp
imul
movsb
clc
pop
cmp
sbb
inc
add
lcall
add
or
push
add
push
jne
fwait
jmp
lahf
adc
nop
push
sti
sub
rol
clc
loopne
cmp
add
cmp
add
sbb
add
pop
pop
test
jp
clc
pop
ds
ret
clc
fcompl
popa
add
fsubrl
mov
add
xor
add
dec
xabort
clc
ljmp
mov
cmp
adc
add
fwait
jmp
popa
adc
xorb
push
add
ds
add
mov
cwtl
pop
pop
das
mov
jmp
clc
pop
jle
and
add
add
inc
add
int
loope
shlb
mov
pop
push
xlat
xor
add
push
adc
add
clc
mov
aas
mov
inc
add
xchg
pushl
sar
push
xor
add
adc
add
cmp
std
xbegin
test
lret
dec
mov
add
test
add
inc
clc
in
sar
insl
call
push
ret
lods
sub
sub
add
out
arpl
add
push
ljmp
sbb
pop
pusha
add
jmp
filds
clc
in
addr16
mov
clc
shll
add
lea
clc
pop
clc
pushf
xchg
or
add
add
xor
add
or
mov
add
es
test
sbb
in
lcall
pop
nop
andb
clc
jp
aas
test
cwtl
cmp
iret
data16
jg
rorb
add
mov
aad
clc
insl
push
push
cmc
mov
mov
clc
dec
cmp
lods
xor
add
cmp
into
repnz
add
add
test
mov
and
add
jo
add
clc
sbb
ss
into
fucomp
dec
out
jmp
adc
add
add
clc
outsb
ficoml
add
push
je
clc
jo
add
add
pop
mov
pop
cmp
test
xor
add
clc
fdivrp
decb
fwait
dec
sar
or
or
jecxz
mov
push
add
mov
cmp
add
xor
out
js
xchg
cmp
cld
push
ret
imul
rcll
ja
pop
cmp
clc
aaa
loop
enter
inc
add
negl
add
add
clc
cmp
add
xchg
mov
mov
inc
add
scas
mov
push
clc
cmp
clc
fs
lcall
stos
cmp
clc
or
clc
repz
add
clc
in
add
and
mov
clc
push
pop
aam
std
out
in
add
jmp
iret
insl
popf
pop
imul
clc
xchg
mov
insl
movsl
clc
and
add
cmc
inc
add
inc
add
lods
xchg
mov
add
and
add
nopl
sahf
es
jae
add
and
add
add
xchg
sub
clc
cmp
lret
movsl
clc
bound
add
clc
stos
rorb
add
xor
add
adc
mov
fwait
jmp
and
adc
fs
fs
ret
clc
and
inc
clc
jl
and
add
clc
mov
pop
adc
add
clc
repnz
sub
add
add
add
mov
jmp
insl
dec
or
adc
add
clc
incl
je
sub
ljmp
cmc
mov
imul
movsl
clc
cmp
sbb
clc
push
push
sbb
testb
incb
pop
cld
test
sbb
jle
clc
nop
xchg
inc
clc
push
add
mov
clc
dec
inc
add
lods
mov
clc
imul
xchg
dec
push
add
loopne
dec
mov
clc
jae
add
add
pop
aaa
and
add
clc
jge
push
mov
add
clc
jns
clc
push
clc
mov
stc
xor
add
cmp
clc
push
add
popa
add
out
repz
add
aad
clc
or
popf
cmc
sar
aad
scas
arpl
add
clc
xor
add
dec
mov
out
pushl
mov
push
inc
clc
pop
adc
add
ret
clc
and
add
call
jmp
cmpsb
mov
loopne
xor
add
clc
cmp
clc
pop
mov
arpl
add
test
adc
add
popf
xchg
jns
js
jl
add
leave
popa
add
mov
in
call
or
mov
jmp
push
xor
push
clc
inc
add
adc
add
push
add
fiadds
jns
pusha
add
rcl
pushf
inc
clc
jnp
add
xor
cmc
in
mov
dec
dec
cmp
sahf
dec
out
push
lods
sbb
scas
inc
clc
add
add
xor
add
jp
xor
ror
loopne
sti
es
inc
add
cmp
std
add
sbb
cmpsl
clc
push
pusha
cld
push
ret
sub
add
stos
fwait
jmp
aas
fwait
dec
and
cmpsl
clc
cmc
jae
add
shl
clc
push
add
or
add
ljmp
dec
xchg
cmp
add
ds
xchg
ret
add
mov
mov
add
testb
cmp
sar
leave
dec
jnp
xchg
cmp
mov
add
fsubs
add
rol
clc
sub
clc
fdivp
push
add
cld
push
ret
dec
test
jg
clc
push
cmp
clc
sbb
add
jo
add
clc
mov
lahf
aaa
cmpsb
clc
mov
dec
shll
adc
add
icebp
leave
ret
clc
inc
add
fstps
xbegin
sbb
add
add
call
jl
cmp
xbegin
dec
push
inc
clc
push
and
negl
push
add
mov
decb
pusha
add
ljmp
mov
clc
lods
xor
add
inc
add
test
xbegin
lret
jmp
loopne
mov
xor
add
add
insb
pusha
add
pop
push
push
sahf
js
insb
adc
add
or
push
ret
or
xchg
or
xor
add
clc
scas
gs
add
daa
clc
faddp
clc
je
pusha
fwait
jmp
fwait
adc
adc
aaa
int
outsb
push
adc
clc
notb
add
dec
add
jnp
add
mov
dec
push
add
out
sbb
fwait
jmp
sub
rolb
in
cmpsb
clc
sar
sar
lret
clc
je
outsl
cwtl
js
add
cmc
sub
jge
and
add
add
mov
add
mov
clc
mov
fwait
jmp
pop
scas
push
add
mov
add
add
add
rcl
cmp
inc
clc
jmp
mov
inc
clc
dec
adc
clc
lcall
jmp
add
push
pop
int3
rcrb
or
and
xabort
jo
add
add
add
in
adc
add
pop
pop
clc
mov
mov
xchg
mov
cwtl
dec
pop
cmp
clc
dec
mov
inc
add
sub
add
xor
loopne
mov
dec
fs
mov
mov
cld
push
ret
movsb
xor
add
in
cmp
rep
fwait
jmp
xchg
das
lods
lods
adc
add
enter
ds
cmpsl
clc
or
xor
add
fmull
xabort
sub
aaa
push
add
sbb
clc
fwait
jmp
or
es
cmp
stos
mov
inc
clc
rolb
add
rcrb
loop,pt
mov
into
inc
clc
adc
add
inc
add
mov
add
ret
imul
add
in
mov
cli
cmpsb
clc
jmp
rorl
clc
lret
add
add
add
clc
loope
std
fisttpl
imul
or
pop
fwait
jmp
jge
add
xor
add
sbb
lods
jo
add
cs
mov
repnz
add
clc
and
add
outsb
xor
add
clc
out
or
call
mov
xchg
test
push
jmp
pop
jg
stos
xor
add
clc
in
clc
popf
mov
enter
and
add
add
adc
outsb
cmp
aam
mov
add
pop
jne
sub
je
leave
negl
jge
clc
outsl
nop
clc
inc
clc
cmp
xor
add
pop
mov
clc
jp
pop
call
std
push
int3
mov
cmp
fs
dec
jmp
test
test
dec
test
cli
push
add
mov
add
scas
cmp
pop
clc
fsubr
insl
jae
add
pop
clc
ret
clc
shr
push
add
sbb
stos
mov
sub
cltd
cld
out
and
add
push
test
clc
add
ljmp
push
add
cmp
add
pop
push
fs
push
add
cmp
mov
outsl
xchg
sub
xchg
and
cmp
add
add
cmp
pop
cmp
aaa
xor
add
sub
sbb
test
jmp
outsl
icebp
cmp
in
iret
cmp
xchg
out
int
insb
push
pop
cmpsl
clc
pop
in
and
add
clc
outsl
pop
mov
cmpsb
clc
inc
clc
push
gs
jae
add
clc
xor
add
add
add
mov
clc
call
es
stc
lahf
cmpsb
clc
mov
aas
cmp
add
scas
sbb
jmp
ja
sbb
cmp
mov
clc
mov
clc
lods
cmp
sti
cmc
scas
fsubs
add
xchg
mov
mov
add
int3
cmc
out
out
pop
sbb
and
add
add
add
pop
lods
xchg
push
add
or
or
adc
add
sbb
and
add
inc
clc
fdivp
xchg
cmp
loop
cmp
or
xbegin
clc
adc
add
jmp
clc
ljmp
and
jecxz
lea
rcl
leave
xlat
pop
sbb
cld
push
ret
push
add
or
clc
fstp
cmp
jno
add
lods
cmp
fadds
add
pop
popa
jge
xabort
clc
and
add
imul
inc
clc
jns
jo
add
dec
loope
mov
mov
fwait
jmp
aaa
inc
sub
sbb
sahf
daa
clc
sar
outsb
loope
and
add
add
adc
ljmp
sbb
jmp
int
jne
add
or
push
add
pop
jg
clc
fwait
jno
add
add
ja
add
pusha
add
pop
cmpsl
clc
cmp
insb
ljmp
and
push
jb
add
add
mov
clc
mov
add
push
cld
push
ret
push
fwait
sub
icebp
xchg
and
add
pop
cmp
clc
out
sub
and
ljmp
and
imul
popa
sar
decl
clc
sahf
cmp
add
add
add
ret
pop
sahf
inc
add
cltd
jmp
or
clc
jle
adc
leave
imul
clc
inc
add
sbb
sbb
push
add
pop
add
clc
je
call
clc
mov
mov
sub
push
ret
andb
add
jno
add
add
add
fsubs
and
add
cli
ds
push
sar
jp
jns
clc
fdivs
or
fstps
add
push
iret
mov
clc
cmp
clc
mov
mov
outsb
clc
cmp
scas
jg
add
sar
or
add
jbe
clc
dec
push
add
cmp
xchg
cmp
add
mov
cmp
imul
nop
pop
push
pop
fwait
jmp
sub
sub
clc
xchg
adc
add
aad
cmpsl
clc
repz
add
clc
sbb
mov
adc
add
mov
add
and
add
pop
cmp
icebp
xchg
nop
sbb
dec
hlt
gs
push
add
pop
mov
add
lods
push
add
lock
sar
clc
mov
xchg
fcoml
add
and
add
add
cmpsl
clc
in
push
add
xchg
mov
adc
add
xchg
stc
pop
inc
clc
dec
loopne
stc
and
add
imul
add
dec
xbegin
add
dec
cld
push
ret
xchg
xchg
add
mov
push
add
repz
lret
cmp
clc
dec
insl
ljmp
stos
and
add
jns
clc
mov
sar
mov
cmp
clc
cmc
xchg
sahf
sbb
add
int
clc
pop
mov
add
add
lret
mov
dec
push
fwait
jmp
or
jo
add
add
fisttpl
clc
push
clc
jg
sub
add
add
dec
pushf
jbe
clc
inc
add
cmp
adc
add
add
out
mov
cmp
xabort
add
mov
xor
add
push
clc
and
add
clc
out
rcrb
xchg
or
inc
add
add
lcall
cmp
xchg
push
add
push
add
mov
add
clc
add
add
push
ret
add
movsb
out
xor
add
pop
mov
jge
mov
push
movsl
clc
xchg
daa
clc
pusha
add
pop
sub
popf
fwait
jmp
pop
sbb
sbb
sbb
clc
jl
shlb
and
clc
or
add
hlt
inc
add
mov
clc
add
add
add
push
clc
sar
add
sub
clc
jo
add
loopne
xbegin
add
xor
add
add
push
add
add
add
filds
add
add
loopne
call
push
ret
or
cmp
pusha
add
xor
add
add
dec
hlt
fadds
add
sbb
add
push
mov
pop
cmp
lods
test
clc
es
jbe
add
add
xlat
mov
clc
mov
mov
daa
clc
sbb
fsts
xor
xchg
adc
out
xabort
clc
je
clc
int
push
mov
sub
add
push
adc
add
loop
into
clc
sahf
cmpsb
clc
mov
push
inc
add
popf
pop
xchg
lret
push
fwait
jmp
sub
in
mov
lret
add
sub
popl
add
adc
add
repnz
jmp
sub
sub
xbegin
nop
lcall
push
ret
nop
cwtl
pop
test
add
add
clc
cmp
add
nop
push
add
repz
clc
test
popa
add
cmp
add
mov
cmp
pop
dec
jl
add
insb
pop
outsl
jb
add
test
adc
add
fidivs
clc
cmp
and
add
push
clc
inc
clc
in
mov
add
ja
iret
pop
cmp
lahf
rolb
add
lea
add
and
mov
arpl
add
sub
add
sub
clc
mov
clc
lock
idiv
push
clc
enter
add
mov
rcr
pop
pavgw
es
push
clc
dec
sti
gs
cld
enter
sub
in
sbb
add
push
add
stos
xchg
sbb
int
lcall
add
dec
nop
stos
jbe
jg
dec
cmp
imul
dec
push
jne
fwait
jmp
mov
jle
scas
inc
clc
mov
add
out
ffreep
clc
inc
clc
sub
aam
add
hlt
adc
scas
mov
stos
cmp
bound
add
arpl
add
clc
imul
mov
pop
dec
add
mov
cmp
jbe
popa
add
push
sti
push
add
add
push
icebp
and
add
add
clc
xor
xchg
xchg
std
arpl
add
iret
jge
clc
cli
cmpsb
clc
scas
push
clc
pop
jbe
add
xchg
test
add
xchg
in
cli
mull
push
test
dec
int
loopne
mov
mov
sbb
jb
add
clc
push
add
rorb
jmp
pop
add
adc
loop
out
sti
pop
aam
imul
dec
push
cmp
clc
jecxz
shll
aad
cmp
test
test
xchg
decl
cltd
adc
ret
mov
int3
test
pop
clc
add
add
clc
push
imul
clc
popf
pop
xchg
xchg
adc
or
test
stos
pop
adc
jnp
cmp
and
add
clc
xbegin
mov
add
scas
dec
rcll
jbe
mov
mov
jb
add
movsb
clc
fsubs
clc
xchg
mov
insb
lret
decl
push
out
pushl
popa
sub
or
clc
xchg
pusha
add
cmp
je
jb
add
clc
xor
add
clc
dec
ret
shr
lahf
mov
and
add
push
fdivrp
call
inc
add
cmp
pop
inc
add
scas
push
int
test
daa
clc
ss
jmp
dec
jmp
jbe
fwait
jmp
sub
add
xabort
cmp
sbb
xor
inc
fwait
jmp
nop
jp
sub
scas
addr16
cmp
add
add
add
ss
dec
jmp
add
test
inc
clc
ret
clc
bound
add
add
add
add
js
std
mov
movsl
clc
push
add
fwait
jmp
or
xchg
adc
jmp
add
insl
fcmovu
push
outsl
dec
ret
clc
nop
stos
ds
add
stos
cmp
add
cmp
repnz
pop
or
jmp
push
push
mov
ret
pop
clc
push
pop
cld
push
ret
or
fs
push
add
mull
add
imul
xor
add
jmp
and
fwait
jmp
xchg
imul
aaa
fwait
nop
lods
int3
inc
clc
adc
cmp
add
mov
mov
add
dec
pop
call
xabort
add
sbb
fwait
jmp
dec
inc
add
movsb
clc
xchg
mov
add
inc
add
data16
pop
mov
cmp
cli
sub
stc
adc
add
mov
pop
pusha
add
dec
leave
out
repnz
xchg
mov
clc
rolb
clc
xchg
jb
add
and
add
dec
or
clc
push
clc
jne
int
add
clc
fimuls
clc
fwait
jbe
clc
fistl
lods
inc
clc
jge
mov
sbb
clc
mov
clc
pop
jl
stos
xchg
shrl
add
fwait
jmp
je
pop
cmpsb
jecxz
dec
jbe
clc
sar
mov
adc
add
and
add
icebp
cmp
clc
xor
out
fldl
clc
das
sbb
clc
inc
add
jg
add
jge
jb
add
and
ret
rcl
ret
addr16
leave
mov
xor
xor
mov
clc
jge
jno
add
mov
add
pop
sbb
jbe
push
add
xchg
push
stos
rorb
cmp
jb
add
mov
inc
clc
xabort
imul
inc
add
sub
add
popf
stos
js
out
xbegin
add
add
addr16
lahf
pop
dec
jbe
inc
clc
sub
push
aas
xor
mov
dec
inc
add
dec
into
lret
add
ficoml
clc
or
fisttpll
sahf
jno
add
add
add
inc
clc
push
add
fwait
jmp
lods
sbb
ror
inc
clc
sar
push
add
pop
cwtl
or
and
add
aam
clc
jle
add
push
adc
add
sbb
add
pushf
mov
inc
clc
stos
or
pop
leave
je
clc
pop
ds
ja
pop
incl
add
aas
sub
and
add
add
add
xor
add
add
add
hlt
clc
arpl
add
or
add
clc
dec
xchg
push
add
cmp
clc
add
add
mov
stc
xchg
pop
mov
aas
mov
add
push
clc
mov
stos
cmp
add
icebp
jge
pop
xchg
adc
add
icebp
or
push
add
fwait
jmp
mov
mov
pop
sub
enter
dec
lods
mov
xor
add
xchg
mov
add
imul
out
cmpsb
clc
or
pop
jge
xor
add
add
rol
clc
xlat
jg
add
inc
add
jp
xor
add
and
add
add
stos
scas
es
xor
add
add
inc
add
pop
lret
clc
mov
jne
mov
add
xchg
mull
clc
xor
pop
iret
mov
add
sar
clc
push
push
stc
decl
sub
fsubrs
xor
xor
cld
push
ret
je
lods
jo
add
rorb
add
clc
pop
xor
add
in
or
and
push
outsb
sub
shlb
add
jno
add
add
fwait
jmp
dec
add
mov
mov
adc
add
and
push
pop
cmp
arpl
add
lock
add
add
add
repz
add
testl
xor
add
cwtl
sar
mov
add
cltd
out
push
daa
clc
inc
clc
mull
add
inc
clc
stos
mov
test
popf
sub
pop
sbb
sbb
clc
sbb
jle
pop
test
add
add
cli
outsl
push
clc
ss
out
mov
icebp
dec
mov
add
je
lret
repz
add
xor
add
jbe
add
xor
add
test
test
cmp
cmovnp
jg
dec
out
loope
aas
mov
xchg
cmp
sbb
jmp
cmp
je
call
mov
lcall
clc
test
add
cmp
clc
cmpsb
clc
popa
add
sbb
adc
add
sbb
or
loop
sub
mov
ja,pn
data16
movd
add
mov
cmp
ds
add
dec
mov
test
clc
inc
add
sbb
clc
cmp
mov
add
clc
xor
clc
add
ret
clc
fnsave
mov
clc
into
cmp
add
xchg
hlt
stos
add
add
push
clc
dec
repz
cmp
pop
and
lcall
jmp
or
clc
test
clc
inc
clc
sub
sbb
iret
add
add
clc
nop
jle
aam
pop
push
push
adc
add
or
clc
ret
into
into
das
push
cmp
add
jmp
ficoms
gs
int3
jecxz
clc
or
clc
push
fists
in
cld
push
ret
pop
sbb
adc
add
clc
aam
clc
sub
clc
adc
add
scas
and
add
dec
mov
lcall
cmp
cmp
add
enter
or
sbb
mov
push
sub
add
and
clc
sub
clc
lcall
jmp
test
add
gs
jle
clc
sub
and
add
in
pop
push
jo
add
fnstcw
dec
sbb
sahf
aad
clc
clc
dec
adc
addr16
push
mov
aas
decb
add
push
add
xbegin
test
out
or
add
add
inc
clc
in
pop
dec
mov
inc
add
aad
popf
in
jl
clc
mov
aaa
lret
add
add
jl
add
add
clc
xchg
packuswb
cmp
clc
outsl
rolb
or
add
imulb
push
add
or
imul
clc
arpl
add
fcmove
lea
add
lcall
inc
add
mov
clc
push
inc
clc
mov
clc
int3
dec
pop
xor
add
add
sub
clc
xchg
mov
clc
in
stc
sub
clc
xor
out
cmp
out
scas
mov
clc
aad
aas
add
cmp
pop
mov
xchg
aad
push
add
jg
into
mov
clc
mov
out
adc
clc
push
add
add
add
sbb
add
add
imul
test
sbb
or
add
scas
and
add
mov
in
push
add
aad
cmc
cmpsb
clc
out
mul
clc
jl
push
pushf
xchg
jae
add
insl
mov
mov
mov
aas
jl
jmp
stc
xor
add
add
imul
cmpsl
clc
sub
push
mov
cld
push
ret
sbb
push
add
inc
clc
pop
dec
jae
add
test
repz
es
fcoms
pop
push
xchg
xor
clc
push
clc
pop
mov
fdivrl
cmp
clc
dec
aaa
and
add
mov
clc
enter
popa
add
cmp
mov
add
add
mov
loopne
je
clc
lcall
clc
mov
fwait
jmp
dec
xor
xchg
enter
xor
mov
pop
xchg
addr16
gs
adc
add
cltd
gs
cs
aam
test
add
add
decl
mov
ret
ja
sub
shrb
mov
add
int
fs
mov
add
add
clc
pop
xor
mov
mov
movsb
clc
mov
add
inc
add
jno
add
dec
frstor
lahf
pusha
add
mov
in
xchg
lods
or
dec
cltd
es
inc
clc
xbegin
cmp
add
jne
xchg
insl
inc
clc
xor
add
add
mov
fwait
jmp
fwait
jg
sub
xchg
pop
mov
jge
clc
popa
add
xchg
cmp
mulb
cmp
add
xor
cmp
inc
add
cmp
add
add
dec
xchg
lock
es
inc
add
ficoml
cmp
add
daa
clc
adc
add
clc
sub
test
cmp
add
sbb
int
out
scas
mov
push
xor
fwait
jmp
add
sub
adc
add
ret
clc
push
inc
pop
add
ja
add
add
jae
add
mov
cmp
clc
stc
pop
out
pop
jne
add
xor
add
add
jmp
decl
aaa
add
push
add
adc
add
sbb
enter
repz
lcall
adc
insl
outsb
sbb
jo
add
add
push
clc
pop
fists
add
add
aaa
dec
lret
dec
fcoms
add
mov
add
fwait
gs
fsubrl
push
jne
scas
jl
inc
clc
pop
cmp
jnp
outsl
idivb
pop
test
iret
push
jle
xchg
cwtl
cmp
xabort
add
add
clc
xor
add
leave
push
add
cmpsb
clc
jbe
jle
and
pop
ret
iret
or
push
into
lret
dec
fwait
mov
into
in
enter
mov
jmp
movsb
fwait
cmpsb
fstl
add
add
insb
dec
out
stos
sub
add
stc
mov
sarl
push
shll
clc
loopne
aas
call
cltd
dec
cmp
cmp
mov
push
scas
leave
sub
push
cld
push
ret
sub
add
insl
push
add
sub
faddl
sar
mul
clc
movsl
clc
xchg
imul
xor
add
mov
add
mov
lcall
push
xor
pop
cmp
mov
call
inc
clc
jmp
jg
clc
inc
add
lods
jae
add
xor
add
cltd
ret
ljmp
adc
cmp
clc
jmp
es
movups
add
push
clc
pop
cmp
loope
je
clc
mov
iret
int3
lahf
pop
push
add
mov
mov
dec
scas
push
aaa
jp
ret
in
dec
push
add
lcall
jnp
push
add
je
cmp
add
daa
clc
cmp
cmp
add
mov
add
aad
clc
mov
clc
outsb
inc
clc
cmc
and
clc
add
add
clc
jb
add
cmc
pop
mov
jmp
ja
or
loope
cmp
movsb
clc
jg
ja
cmp
cmpl
fwait
jmp
xor
adc
clc
rcl
scas
bound
add
jnp
and
add
gs
outsb
dec
jge
cmp
fwait
jmp
stc
popf
lret
mov
lret
movsl
clc
mov
fwait
jmp
cwtl
pop
nop
cmp
clc
call
pop
mov
clc
lock
out
add
add
add
movsb
clc
pop
popf
fnsave
add
stc
sub
test
das
sbb
repz
add
clc
adc
add
add
cmc
add
add
add
pop
clc
ljmp
in
and
add
push
aas
add
inc
add
notl
adc
add
or
cmp
in
and
add
add
jp
clc
fistpll
xchg
mov
add
mov
add
insb
nop
mov
add
dec
std
sar
mov
pop
bound
add
add
clc
aas
lcall
jl
clc
mov
clc
sbb
add
lods
push
fsubrp
aaa
popf
std
cmp
mov
mov
insb
sar
fwait
jmp
mov
add
mov
clc
cltd
jmp
fwait
jmp
aas
arpl
add
clc
mov
clc
sbb
leave
dec
lea
sar
aam
mov
add
adc
add
add
mov
mov
movsb
clc
idivl
add
mov
jne
sbb
add
mov
add
clc
push
inc
add
xchg
sar
push
add
add
fs
fisubs
add
xchg
aad
cmovl
add
test
jne
fwait
jmp
scas
add
add
dec
insb
xor
add
clc
push
iret
or
rcrl
jne
fwait
jmp
and
xbegin
clc
and
add
xchg
and
fadd
clc
movsb
clc
ret
clc
or
neg
insl
xchg
or
aaa
aas
mov
clc
dec
movsl
clc
mov
jl
add
dec
fs
hlt
stc
push
lahf
xchg
jbe
aad
push
add
mov
dec
pop
clc
jmp
add
add
add
push
pop
and
add
fptan
push
stos
mov
dec
dec
add
add
lahf
mov
pop
and
add
clc
jnp
add
out
adc
add
push
int3
cmp
add
sub
je
mov
cltd
jge
add
pop
aas
xchg
cmp
sbb
inc
add
es
jno
add
add
testl
cmp
clc
pushf
push
add
sbb
mov
jne
sbb
cmpw
fwait
jmp
sbbb
mov
fwait
jmp
nop
lret
movsb
clc
cmp
cmpsl
clc
emms
cs
clc
push
and
add
cmc
loopne
repnz
clc
lods
out
out
cmc
hlt
imul
movsl
clc
push
emms
fwait
sar
clc
add
add
clc
or
ficoms
add
jmp
imul
push
adc
mov
push
clc
cmp
add
jmp
into
jno
add
add
or
mov
clc
testl
sbb
add
clc
aam
loop
adc
fwait
jg
clc
jg
add
loope,pt
sbb
xbegin
iret
mov
add
fs
mov
sub
aad
daa
clc
xor
add
xchg
shlb
add
pushf
xor
add
add
aam
mov
add
fwait
cmpsl
clc
test
repz
testl
push
and
add
jge
call
add
add
add
add
mov
clc
das
cmp
adc
xor
add
mov
jge
mov
pop
cmp
cmp
xchg
xor
sbb
clc
call
lret
pop
clc
fisttpl
add
cmp
xchg
outsb
js
mov
iret
cmp
inc
clc
mov
lcall
sub
clc
cli
mov
pop
int
mov
sub
inc
add
xchg
movups
add
inc
clc
insl
add
add
cs
add
add
jecxz
rorl
sub
cld
push
ret
aas
sub
push
call
ja
jge
ret
pop
lea
clc
xor
ss
push
popa
fwait
jmp
mov
lods
or
pop
pop
fcomi
mov
jge
clc
out
imul
clc
inc
add
pop
or
jmp
in
scas
fcmovnbe
ss
mov
adc
adc
add
clc
fwait
or
ljmp
fwait
or
or
call
fwait
jmp
cwtl
push
sub
outsb
xchg
inc
clc
fadd
clc
fs
adc
or
add
clc
mov
mov
faddl
ret
dec
cmpsb
dec
addb
push
clc
bswap
mov
in
arpl
add
jno
add
add
aam
cmp
clc
nop
scas
inc
add
mov
insl
stos
in
lock
jle
add
or
stos
outsl
in
sub
in
aaa
mov
add
int
shl
jbe
add
adc
add
add
clc
mov
mov
clc
fs
inc
clc
clc
dec
cmp
clc
ds
out
in
inc
add
jno
add
loopne
jae
add
lret
mov
add
mov
xbegin
scas
pop
jns
sbb
dec
pop
add
fwait
jmp
jp
mov
fwait
jmp
sub
cmpsb
cmp
add
in
mov
rcll
add
fnstsw
clc
stos
fs
lods
pop
jns
dec
flds
clc
xbegin
adc
add
push
bound
add
outsb
mov
ljmp
cld
movsb
clc
cmp
mov
xchg
and
add
add
fwait
jmp
sub
insl
cltd
inc
add
mov
clc
add
add
add
cmp
lcall
jmp
inc
das
xor
das
imul
xor
add
popf
cli
push
ret
clc
cmp
popf
lods
sbb
add
jno
add
add
add
aam
jo
add
and
add
dec
sahf
xchg
or
clc
push
cmc
sub
or
mov
fwait
jmp
xor
sub
mov
stos
dec
xlat
inc
add
dec
lret
sbb
inc
clc
jle
add
mov
fcoml
leave
aaa
or
push
cld
push
ret
mov
clc
and
add
xchg
cmp
clc
scas
mov
and
add
adc
dec
dec
jbe
clc
cmpsl
clc
mov
add
cld
push
ret
jge
pop
pop
testb
jmp
push
push
sub
cmp
clc
mov
addr16
aam
add
aam
add
or
xchg
dec
cmp
add
lock
sbb
icebp
fwait
jmp
sbb
xchg
loope
pushf
mov
push
lock
cld
sub
nop
mov
add
fwait
jmp
data16
cmp
aas
out
and
add
xbegin
add
or
add
fisubs
clc
outsb
sub
xor
push
aam
ret
clc
cmp
ljmp
fwait
jmp
or
sub
dec
pop
xchg
insb
aaa
xor
add
add
sub
mov
add
cmp
mov
add
xchg
dec
push
push
aaa
repnz
add
mov
clc
rcrb
ja
pop
clc
xchg
jae
add
sbb
lea
add
cmp
push
sbb
push
sub
add
jl
xor
add
xbegin
clc
scas
sar
jle
fnstcw
divl
inc
add
jno
add
fwait
jmp
test
clc
in
mov
mov
dec
imul
add
inc
clc
jbe
fistpl
push
fwait
jmp
test
xor
add
add
xor
add
mov
fdivrs
adc
lock
sar
sbb
xchg
out
mov
add
and
add
xadd
add
add
add
add
add
add
add
clc
aaa
maxps
add
pop
shll
cmp
fwait
jmp
xchg
or
add
push
fcmovbe
std
and
push
mov
cld
push
ret
das
push
jne
mov
scas
sbb
add
clc
stos
mov
enter
add
pop
ja
mov
movsl
clc
push
add
push
sub
adc
add
mov
jmp
fwait
jmp
cmpsb
cwtl
or
lea
xor
add
add
cmp
std
fistpll
enter
add
add
fwait
jmp
sbb
clc
ja
cld
add
add
ss
mov
clc
cmp
sub
add
lcall
xchg
ret
lods
push
add
sbb
inc
add
lock
dec
jnp
inc
add
shl
adc
cmpsl
clc
lret
add
add
add
clc
add
imul
push
and
add
adc
add
clc
int3
and
add
add
int3
iret
mov
push
add
clc
or
add
mov
nop
icebp
ljmp
cmp
jmp
sub
stos
rorl
dec
into
cs
push
add
jne
inc
add
lret
clc
adc
add
push
add
dec
test
clc
cmp
add
int
mov
fwait
jmp
add
aad
xchg
fldt
hlt
cmp
imul
shrl
dec
sub
add
mov
clc
sub
add
add
das
dec
cli
mov
ss
jnp
xor
add
clc
lcall
add
add
cmp
cmp
inc
add
out
jle
clc
jmp
mov
fsubl
out
in
lock
add
add
cmpl
add
clc
in
jne
clc
pop
iret
dec
das
pop
inc
clc
clc
andnps
clc
mov
or
add
lcall
stos
loopne
incl
jbe
fwait
jmp
fs
movsb
clc
sar
lret
push
test
cs
push
fwait
jmp
sub
or
jmp
outsl
push
add
cmp
xor
add
push
pop
out
push
sbb
push
or
decl
or
cmp
add
lcall
xchg
test
jnp
clc
jns
std
or
stos
lea
lods
cmpsb
clc
mov
dec
dec
mulb
adc
add
add
dec
shlb
add
mov
and
and
mov
add
cld
push
ret
aaa
add
add
cmp
and
add
clc
push
pop
push
repnz
in
xchg
adc
add
add
shlb
clc
xor
add
add
sar
mov
fwait
lahf
lock
fwait
jmp
sub
mov
cmpsb
clc
cmp
inc
clc
cmp
mov
sub
and
jmp
ja
and
clc
cwtl
shrl
fcmovbe
xor
ja
push
clc
jae
add
clc
test
sbb
clc
dec
xchg
xor
sub
clc
mov
inc
add
loopne
jge
inc
add
mov
mov
xor
jle
repnz
clc
xor
add
add
or
pop
test
add
inc
clc
sbb
fs
sbb
add
cmp
jg
lret
clc
sar
ljmp
mov
pop
mov
popa
add
mov
test
sbb
add
lahf
in
dec
movsb
clc
fwait
xor
add
dec
sti
mov
cmp
add
xor
add
clc
cmpsb
clc
dec
cmp
ror
lods
movsb
clc
sar
clc
push
clc
xor
add
or
mull
out
and
sbb
inc
xor
fwait
jmp
push
jge
pop
mov
inc
add
imul
lret
add
arpl
add
js
js
test
call
jmp
push
or
cmp
leave
test
sbb
add
dec
in
repnz
add
enter
out
arpl
add
je
xor
jp
fwait
out
in
sub
idivb
jg
clc
adc
add
sub
clc
push
add
fmuls
add
fistl
add
gs
mov
add
mov
inc
clc
push
mov
fnsave
add
xchg
lret
clc
pop
cmp
clc
fadds
add
sub
clc
ja
clc
test
clc
test
lret
cmp
jle
in
xbegin
lcall
sub
clc
int3
lods
mov
fs
and
loopne
fwait
jmp
sahf
xchg
sbb
jne
fwait
jmp
sahf
gs
dec
pop
clc
xbegin
scas
ret
clc
xlat
sub
sub
add
arpl
add
mov
add
sbb
mov
add
add
add
jle
push
stos
ja
clc
mov
lahf
scas
adc
add
cmpsb
clc
stos
and
adc
add
std
or
sub
cld
push
ret
es
clc
imul
clc
cli
lret
add
add
cmp
push
xor
ficoms
aas
adc
add
dec
inc
clc
and
push
add
sub
clc
pop
js
push
jg
clc
pushf
mov
add
add
clc
cmpsb
clc
imul
add
and
hlt
cltd
pop
sub
push
clc
mov
add
push
xor
fwait
jmp
push
mov
cld
push
ret
push
popa
or
xchg
adc
add
cmp
add
lret
js
xchg
cmpsb
clc
jns
add
or
mov
int
clc
ss
mov
sbb
inc
add
dec
adc
add
dec
pusha
add
sbb
push
add
hlt
stos
adc
add
and
add
bound
add
add
or
push
add
lret
imul
clc
mov
fdivr
jmp
pop
push
and
jno
add
in
mov
adc
jmp
sahf
sbb
add
int3
bound
add
pop
rorb
clc
into
xchg
pop
clc
loop
cmp
clc
lods
jp
mov
inc
clc
push
push
lahf
ljmp
add
and
add
clc
movsl
clc
sbb
jge
add
sub
clc
sbb
rcrb
popa
cmp
add
lret
and
add
mov
vmulps
push
test
xchg
popf
and
add
or
imul
clc
arpl
add
sub
sar
dec
pop
inc
add
mov
clc
clc
stc
xor
add
jmp
dec
xor
add
out
sub
aaa
sub
clc
pop
xchg
mov
lret
lret
aad
mov
jns
clc
push
add
in
ljmp
push
sub
clc
ficomps
ret
mov
add
pushf
out
shrb
add
add
jbe
lea
xor
add
popf
xbegin
xchg
pop
clc
xchg
loope
sahf
gs
xlat
push
add
out
xor
add
push
xor
fwait
jmp
or
daa
clc
cld
xor
jg
div
lods
dec
icebp
push
jmp
lods
dec
inc
add
inc
clc
test
loopne
out
dec
cwtl
pusha
add
movsl
clc
mov
jecxz
stos
imul
jne
clc
cmp
add
add
inc
clc
add
add
add
or
add
int3
push
add
arpl
add
add
outsb
cmp
add
add
fwait
jmp
nop
aas
sbb
clc
test
ljmp
scas
into
pushf
testl
add
adc
add
add
cmp
add
test
std
dec
stos
add
add
inc
clc
insb
push
add
push
add
pop
int3
dec
js
push
inc
cld
push
ret
xchg
sub
mov
test
clc
mov
add
clc
pop
sbb
ret
clc
adc
add
clc
cmp
add
jne
add
xor
add
cmp
test
add
cmpsl
clc
and
ficomps
clc
jl
add
sub
and
add
gs
mov
repz
test
cmp
xabort
sub
clc
xor
add
movsb
clc
aas
stos
sti
cmc
scas
ret
clc
or
pop
mov
icebp
and
add
clc
push
clc
adc
add
cmp
inc
clc
xchg
lcall
rclb
add
mov
add
jnp
fmuls
add
clc
pop
cmp
clc
push
mov
cmp
repnz
jge
mov
clc
hlt
xchg
xor
add
loope
sub
add
mov
add
add
add
pop
sti
sar
jle
add
ret
cmp
lea
ja
add
cmp
das
and
clc
jle
pop
lods
mov
add
sahf
sbb
xchg
aad
stos
popf
fs
sbb
lcall
add
add
pop
cs
add
add
inc
clc
sub
add
push
add
pop
divb
clc
jmp
push
cmp
add
jb
add
inc
cld
push
ret
cmp
mov
imul
sub
clc
dec
cmp
ret
fwait
jmp
outsl
ja
sub
cmp
add
adc
add
clc
fbstp
add
mov
clc
cmc
test
flds
imull
out
inc
add
rol
clc
lods
popf
adc
add
mov
add
test
clc
out
inc
add
int3
xchg
add
add
cmp
pop
movsb
clc
scas
xchg
scas
jo
add
in
cld
jp
mov
clc
mov
sub
ljmp
clc
addr16
mov
fdivr
pop
scas
and
add
adc
add
add
test
mov
add
shr
push
mov
cld
push
ret
sub
loopne
jb
add
clc
or
clc
jns
add
mov
aas
jg
mov
fwait
jmp
sub
sub
cli
data16
mov
fwait
jmp
push
sbb
clc
xlat
fstpl
add
xor
add
mov
clc
movsb
clc
clc
sahf
filds
cmpsl
clc
and
add
clc
mov
pop
clc
push
mov
add
out
clc
ljmp
mov
clc
xchg
mov
jo
add
fwait
jmp
sub
dec
jmp
rorb
mov
push
ret
sub
mov
fwait
jmp
push
jmp
pop
sub
jmp
cltd
ja
repz
add
add
cld
push
ret
lods
adc
test
dec
ror
sub
out
iret
ud2
lahf
gs
cmp
jge
clc
xchg
or
mov
test
jmp
cmp
xchg
cld
mov
pop
int
add
push
adc
aas
jmp
and
add
mov
xchg
xor
pusha
add
mov
pop
scas
inc
add
mov
clc
and
mov
stc
or
add
cmp
hlt
daa
clc
pusha
add
dec
in
mov
hlt
std
nop
in
sti
cmp
gs
outsb
cltd
test
mov
add
add
jecxz
daa
clc
leave
or
clc
repnz
leave
push
push
ret
clc
ds
mov
inc
clc
sti
test
jne
clc
sub
sti
sub
dec
and
jne
clc
mov
clc
mov
or
cmp
add
add
data16
clc
movsl
clc
push
cli
lret
mov
in
sar
in
cmp
cli
lcall
jnp
add
insb
pop
xchg
test
ret
clc
test
dec
mov
aaa
cmp
out
fndisi(8087
clc
push
add
cmp
xbegin
add
cmc
dec
sar
nop
sbb
sar
jnp
add
clc
mov
clc
jne
clc
xchg
push
fwait
jmp
add
fs
mov
clc
or
clc
inc
clc
in
xor
add
clc
mov
clc
mov
mov
add
arpl
add
xchg
lcall
sub
clc
push
add
popl
add
clc
mov
add
push
add
xlat
out
lret
xabort
xlat
or
in
pop
adc
add
sti
dec
push
sbb
add
stos
mov
push
clc
sbb
stos
cs
jnp
nop
insb
cmc
inc
clc
shlb
add
jge
cmp
lods
xlat
mov
ret
stc
bound
add
add
sar
dec
roll
cli
scas
sar
add
ja
sar
cmpsb
clc
gs
inc
add
pop
data16
loopne
cmpsl
clc
fnsave
add
jge
mov
lods
fstpl
loop
lret
in
push
add
add
cmpsl
clc
fbld
clc
lret
sub
clc
pop
ret
clc
cmp
xchg
test
and
add
clc
cmp
adc
outsb
lods
lock
stos
mov
fwait
jmp
mov
sbb
inc
clc
jle
gs
std
mov
jnp
je
mov
clc
and
add
dec
jo
add
clc
pop
mov
dec
xor
add
jmp
mov
dec
jge
sbb
dec
cmp
jmp
jge
sbb
stos
or
cmp
repnz
add
add
outsb
sysret
clc
jo
add
bound
add
div
lods
negl
pop
clc
bound
add
iret
push
push
cld
push
ret
sub
cmpsb
mov
clc
jp
clc
testb
xchg
fisttps
add
xor
add
clc
pop
xlat
loop
xchg
gs
into
sar
clc
frstor
xabort
insl
xchg
mov
jl
repz
jae
add
clc
mov
add
fdivl
inc
add
and
push
ret
push
adc
xor
add
sti
sbb
test
lcall
add
cs
repz
mov
sti
cmp
clc
mov
mov
cmp
dec
xchg
aad
cwtl
decl
sti
inc
add
sub
hlt
daa
clc
outsl
loopne
cmp
fs
mov
mov
add
jp
sub
and
add
jnp
add
add
stc
loopne
adc
clc
scas
test
mov
mov
sub
imul
clc
mov
and
add
sbb
add
test
cmc
je
add
icebp
in
cmp
add
or
decl
mov
push
mov
imull
push
jno,pn
add
inc
clc
mov
dec
flds
ret
sub
sub
push
add
cmp
add
inc
clc
push
add
cwtl
in
insl
inc
clc
push
push
lret
xabort
daa
clc
cltd
jmp
repnz
clc
jb
add
sar
mov
into
inc
add
add
imul
cwtl
mov
or
imul
jmp
sub
cmp
clc
xchg
or
call
jmp
sub
sub
add
sbb
aam
jl
sti
ss
fucomi
ficomps
clc
pop
data16
push
add
testl
arpl
add
clc
repnz
ret
clc
sbb
jno
add
leave
fwait
idivl
clc
jbe
push
add
shl
lock
jae
add
xor
add
or
clc
rcl
test
jo
add
hlt
and
add
add
cmp
add
dec
lret
neg
or
aad
cld
gs
test
decl
movsb
ljmp
push
imul
pop
repnz
or
xchg
loop
jle
clc
push
add
inc
add
jo
add
clc
stos
pop
out
jae
add
xor
add
push
sarl
sbb
jg
clc
loope
fwait
cmp
clc
xchg
mov
ret
clc
popa
add
mov
cmp
add
clc
jg
and
add
add
into
jnp
clc
je
arpl
add
pusha
add
add
gs
aas
jae
add
mov
fwait
jmp
fwait
scas
or
out
xchg
ljmp
test
in
clc
ficomps
adc
push
mov
fwait
jmp
jg
xor
sbb
clc
mov
daa
clc
inc
clc
adc
xlat
sar
clc
adc
add
jnp
clc
cmp
add
bound
add
add
aas
js
add
mov
inc
add
mov
clc
mov
movsb
clc
dec
ret
lods
xbegin
push
xchg
push
add
dec
dec
sub
cwtl
xor
add
mov
lods
mov
pushf
cmp
clc
js
cmp
jecxz
pop
clc
daa
clc
mov
ret
aas
xor
jg
vmovhps
addr16
mov
clc
fimuls
mov
add
add
clc
outsl
gs
xchg
or
add
cmpsb
clc
jecxz
inc
add
mov
add
adc
add
clc
mov
repnz
incl
clc
pop
sub
or
add
lret
jl
add
or
sbb
add
pop
clc
cmc
cmp
fmulp
scas
clc
mov
cmp
pop
xor
add
mov
clc
xchg
inc
clc
mov
scas
mov
inc
add
in
adc
add
add
clc
or
clc
mov
std
dec
decl
jmp
es
fisttpll
jmp
or
pop
aas
sub
clc
ret
clc
test
fwait
jmp
insb
sub
add
ds
sub
clc
sti
iret
popa
add
jbe
clc
cltd
push
aaa
loopne
sar
mov
pop
sub
sbb
xor
add
add
dec
mov
mov
push
fdivl
add
sub
out
mov
mov
clc
mov
mov
inc
add
mov
dec
in
ja
sub
add
inc
add
inc
clc
sbb
mov
int3
xchg
pop
xchg
and
add
add
or
add
in
iret
add
add
add
mov
mov
ficomps
imul
sub
arpl
add
mov
clc
fwait
dec
call
clc
push
add
pop
sub
fwait
mov
ficoms
or
push
add
fwait
jmp
test
fwait
stos
xchg
cwtl
cmp
add
in
mov
out
cwtl
out
scas
mov
clc
pop
push
add
mov
cmp
sar
clc
lods
jmp
fwait
jmp
inc
sub
clc
mov
xlat
push
es
dec
enter
add
jae
add
dec
sar
test
mov
clc
mov
clc
rcll
add
fs
cltd
ret
add
insl
mov
cmp
cltd
aaa
jo
add
jno
add
mov
push
je
clc
btc
clc
aas
int3
push
jmp
push
adc
dec
faddl
fs
scas
pop
push
outsb
mov
fidivrl
ficompl
mov
std
lea
add
xor
add
add
add
aad
dec
adc
add
add
cmp
sar
push
jns,pt
daa
clc
push
add
ret
clc
ss
add
in
iret
push
push
add
sar
xchg
in
xchg
pop
push
mov
add
add
pop
xor
add
clc
pop
push
push
ret
popa
jno
pop
nop
pop
mov
cmp
add
add
add
cmpsl
clc
add
add
iret
popf
lods
jl
clc
cs
data16
adc
add
cmp
add
scas
into
mov
mov
mov
decb
clc
add
mov
hlt
jmp
mov
clc
jg
int3
call
test
knotw
int
stos
cmp
clc
loope
filds
clc
mov
cltd
add
or
and
add
add
add
clc
pop
inc
add
push
add
push
jmp
or
leave
ss
push
clc
jge
add
mov
xchg
xor
add
nop
mov
fs
jb
add
cmp
push
add
sbb
inc
add
outsb
scas
and
pushf
fsub
clc
sub
clc
shll
repz
clc
xabort
mov
sbb
cwtl
fcos
ljmp
sahf
imul
push
xchg
cmp
add
bound
add
add
push
mov
fwait
jmp
sub
daa
clc
aad
test
mov
ret
clc
sbb
add
inc
add
cwtl
xbegin
loope
ret
clc
popf
cwtl
mov
leave
and
xchg
mov
jae
add
add
add
mov
and
add
ja
stc
xchg
js
pop
lods
xlat
mov
inc
add
rcll
add
in
mov
clc
or
lods
cltd
mov
clc
out
jmp
imul
add
clc
scas
div
ss
xor
clc
dec
dec
and
add
or
clc
sub
fwait
jmp
outsl
ja
sub
negb
clc
mov
aam
dec
enter
clc
out
int
ret
clc
mov
add
clc
fs
jmp
jl
fcomps
push
add
scas
jae
add
add
mov
xor
add
adc
add
clc
stos
imul
jb
add
std
aam
push
fwait
jmp
jno
jge
dec
stos
repnz
sar
xchg
jbe
loop
push
test
and
mov
pop
push
add
fwait
jmp
sub
pop
mov
sbb
add
es
out
pop
cmpsb
clc
jns
in
adc
add
mov
fwait
jmp
add
clc
icebp
iret
add
add
add
and
jmp
adc
add
enter
lock
clc
arpl
add
das
dec
push
dec
add
add
cmp
clc
xchg
call
pop
and
add
add
bound
add
pusha
add
and
push
add
pop
pop
cmp
add
pusha
add
negl
fwait
enter
clc
and
add
cmovbe
mov
mov
add
clc
pop
clc
pop
in
aad
pop
arpl
add
clc
cmpsb
clc
inc
add
dec
mov
dec
adc
add
jbe
clc
insb
aam
or
ds
clc
mov
inc
clc
dec
mov
add
sub
test
lcall
push
mov
clc
test
ds
loope
sar
in
cmp
jecxz
data16
addr16
aaa
pop
sar
clc
sub
add
add
mov
clc
adc
add
dec
dec
push
int3
inc
add
clc
mov
mov
and
inc
clc
movsb
clc
stc
xlat
xor
add
ss
push
dec
mov
clc
pop
mov
dec
out
add
add
xor
add
fbstp
mov
add
sbb
add
mov
add
cld
or
add
sbb
add
xchg
pop
add
add
lods
jp
arpl
add
pop
or
mov
add
add
xor
add
add
xbegin
cmp
pop
mov
cmp
fidivrs
add
roll
bound
add
mov
clc
inc
add
jb
add
mov
xchg
sub
add
and
add
clc
imul
add
jp
dec
or
and
mov
clc
xor
add
add
and
add
call
add
add
push
clc
push
dec
cmpsl
clc
data16
mov
clc
pop
lods
adc
test
clc
mov
sbb
test
dec
add
fwait
jmp
xabort
mov
cmp
jmp
cwtl
jecxz
cmp
clc
shrl
add
jg
push
dec
je
add
adc
add
clc
xbegin
outsl
xchg
call
add
add
insb
and
add
clc
fnsetpm(287
clc
dec
cmp
add
lods
dec
int
xabort
clc
push
jl
sarl
fwait
jmp
sbb
add
cs
mov
into
dec
or
add
imul
enter
movsl
clc
sbb
xchg
mov
push
clc
in
mov
jno
add
add
xor
add
pop
clc
jge
jb
add
clc
fs
sub
add
lret
add
insl
sub
add
dec
ds
repz
cmp
sahf
jb
add
jecxz
adc
add
clc
cmp
add
push
cmp
sub
movsb
clc
jecxz
dec
inc
add
push
add
pusha
add
das
int
jle
pop
cmp
incl
repz
jmp
xor
cmp
jbe
add
shrl
or
movsb
clc
dec
push
add
lahf
aad
xor
add
jbe
add
imul
clc
and
out
mov
out
dec
lret
pop
jecxz
mov
sub
add
cmp
inc
clc
cmp
jmp
sbb
push
das
adc
out
lods
xor
add
fsubrl
inc
clc
mov
enter
aas
adc
add
mov
and
add
clc
test
cltd
lahf
dec
sbb
std
repz
cs
fwait
jmp
sub
pop
pop
mov
add
add
add
add
add
hlt
cmp
stc
or
add
push
clc
xabort
mov
add
loop
inc
clc
jns
clc
xchg
sub
dec
out
shlb
jmp
fwait
jmp
mov
clc
stc
call
jmp
inc
aaa
dec
das
sub
push
jmp
outsl
mov
add
jecxz
popf
test
scas
add
add
clc
inc
clc
mov
mov
push
cltd
jnp
clc
popf
xor
add
sbb
clc
popf
aad
xor
clc
dec
xchg
pop
arpl
add
testb
clc
pop
add
add
bound
add
sub
mov
gs
outsb
dec
push
clc
imul
clc
in
das
mov
aad
clc
jmp
jmp
nop
mov
push
push
add
xchg
ret
imul
pop
mov
clc
cmc
gs
sbb
mov
and
add
loop
ss
add
outsl
cs
dec
clc
and
add
add
cmp
jecxz
fcoms
inc
clc
mov
add
add
add
stos
xor
add
daa
clc
xor
add
xbegin
fimull
je
mov
push
add
add
add
clc
mov
add
add
clc
xchg
int
ret
clc
negl
jne
fwait
jmp
push
insb
fwait
jmp
movsb
xchg
sti
in
push
clc
mov
clc
pop
pop
addr16
pop
sub
clc
or
push
clc
data16
loope
shll
add
test
stc
insb
or
rolb
add
jle
inc
clc
cmpsl
clc
cmp
add
cmp
iret
jge
cs
sub
xor
fwait
jmp
test
dec
add
cmpsl
clc
mov
data16
das
sar
clc
sub
repnz
sbb
mov
clc
jmp
add
pop
enter
cmp
data16
cltd
lods
pushf
outsl
int
add
add
add
ss
push
es
repz
add
add
es
idivl
mov
xlat
adc
and
add
repnz
lahf
pop
fld
clc
imulb
pop
insb
and
inc
fwait
jmp
test
test
dec
fcos
mov
cld
push
ret
jg
xor
mov
cltd
push
std
cltd
or
mov
add
fwait
jmp
xabort
add
sub
add
sar
clc
inc
clc
scas
int3
adc
add
fists
sub
and
add
aad
bound
add
xchg
or
pushf
inc
clc
test
pop
clc
push
jnp
add
cmp
pop
clc
jb
add
sbb
mov
decl
and
add
mov
clc
push
add
into
mov
add
jmp
xabort
iret
lret
push
push
fwait
jmp
push
fs
pop
stc
out
repz
add
movsl
clc
add
stos
push
add
and
or
jmp
cmp
das
mov
dec
push
mov
clc
stos
dec
test
lfs
add
clc
fmul
call
add
sub
mov
add
push
add
adc
add
shlb
outsl
cmp
xchg
inc
clc
mov
adc
add
jo
ljmp
and
add
gs
lea
add
fwait
jmp
add
test
clc
in
test
daa
clc
outsb
lret
sti
cmc
test
push
add
xor
out
fbld
adc
add
clc
mov
add
add
add
adc
jns
mov
leave
push
add
sahf
xor
add
add
mov
lret
fcmove
loope
jge
in
adc
clc
lods
fnsave
add
mov
clc
xlat
cmp
clc
sti
imul
add
adc
add
js
add
aam
clc
inc
add
imulb
cmp
add
gs
pusha
add
lret
xbegin
cmpsl
clc
sub
sub
clc
test
push
aad
add
lods
outsb
lcall
fwait
jmp
and
mov
adc
mov
add
add
sar
dec
xor
add
clc
xchg
mov
pop
cltd
xchg
test
das
sub
and
add
xchg
ljmp
pop
lret
insl
fcoml
mov
pop
add
add
sbb
jecxz
ss
jnp
call
fwait
jmp
nop
es
sbb
clc
and
pop
out
sbb
clc
jnp
mov
test
enter
xor
add
mov
add
pop
cwtl
mov
icebp
fdivrl
jl
mov
jae
add
mov
mov
jle
jmp
movsb
clc
jle
add
sbb
xor
add
add
movsb
clc
sbb
sar
lret
iret
sbb
dec
dec
int
cmc
cmp
pop
out
mov
aas
out
dec
dec
cmp
jmp
lods
popf
xlat
mov
sub
loop
push
add
or
shrl
xchg
enter
add
clc
jecxz
xchg
data16
dec
mov
xchg
push
insl
dec
jno
add
clc
sbb
aas
xlat
fcmovbe
fdivrs
daa
clc
aas
fldl2t
add
add
inc
clc
ss
pop
insb
enter
jmp
add
clc
pop
add
add
add
mov
clc
sbb
pop
in
ljmp
dec
std
mov
rcrb
sub
mov
add
cld
push
ret
add
adc
add
xchg
xabort
clc
inc
clc
dec
mov
ja
add
cmc
scas
hlt
lcall
sub
pusha
add
sbb
adc
add
sbb
sbb
push
or
jmp
push
sub
xchg
push
add
nop
lret
rorl
mov
es
mov
push
push
in
mov
clc
cld
insl
jae
add
sub
push
loop
test
fisubl
xor
clc
sub
clc
movsb
clc
mov
in
jae
add
add
clc
xor
add
xchg
push
clc
icebp
sbb
fwait
jmp
adc
scas
addr16
cmc
and
add
pop
pop
ljmp
dec
stos
outsl
xchg
cmp
and
add
lods
pop
lods
pop
scas
iret
mov
jmp
or
and
add
clc
cltd
insl
jae
add
clc
mov
rorl
repz
cmp
sar
adc
add
pop
sbb
clc
sub
mov
clc
repz
inc
add
aad
mov
out
mov
jmp
add
mov
mov
add
mov
ret
push
add
xor
in
inc
add
pop
test
mov
clc
aam
aam
adc
add
clc
sbb
out
fbld
clc
rcrl
pop
or
mov
add
add
and
add
add
fwait
imul
add
mov
dec
data16
data16
xbegin
cmp
fwait
jmp
cwtl
pop
outsl
push
cs
jns
mov
mov
fwait
jmp
push
sub
sti
xor
add
add
clc
sar
jmp
mov
sub
mov
xchg
jl
clc
data16
xchg
mov
fisubs
add
cmp
sar
xchg
mov
arpl
add
std
or
clc
sbb
notl
add
add
add
add
add
mov
jmp
fwait
jmp
fwait
dec
inc
add
pop
into
pop
mov
sub
adc
clc
aas
dec
arpl
add
add
add
add
dec
clc
outsl
js
clc
pop
jbe
clc
push
add
movsl
clc
jmp
popa
add
popl
clc
mov
add
fwait
jmp
inc
adc
sbb
loopne
inc
clc
test
add
pop
clc
ja
clc
pop
or
clc
cld
fs
dec
mov
clc
push
mov
fwait
jmp
lods
adc
add
add
add
decl
mov
pushl
or
add
add
clc
or
add
adc
clc
jl
scas
dec
xor
add
add
ret
clc
ret
clc
add
add
ret
clc
daa
clc
adc
add
clc
dec
ja
push
fwait
jmp
jno
sub
sbb
mov
xor
add
or
dec
push
outsl
or
data16
dec
out
sahf
stc
shlb
add
xchg
mov
sar
sbb
clc
iret
jg
lods
xchg
push
dec
jae
add
test
add
or
test
into
int3
and
add
add
lcall
pop
jnp
mov
pop
push
jmp
fwait
das
pop
stc
into
dec
lods
clc
cli
adc
jecxz
xor
add
clc
ja
sub
clc
bound
add
push
inc
clc
xor
fs
jmp
clc
popl
add
mov
call
add
add
add
je
test
xlat
pop
jae
add
clc
sbb
rcpps
add
sub
pop
mov
add
mov
in
mov
add
pop
clc
stc
mov
enter
clc
xor
add
clc
xor
add
push
or
mov
clc
inc
clc
mov
jae
add
lret
push
add
jecxz
iret
mov
imul
js
stos
cs
ss
add
nop
mov
cmp
mov
dec
fwait
pop
mov
or
aad
add
js
add
rcrl
inc
clc
jmp
js
mov
inc
clc
dec
add
mov
rolb
scas
jp
jp
mov
dec
xlat
xchg
xchg
daa
clc
cmp
into
in
daa
clc
fwait
cmp
push
clc
das
jns
add
cmp
pop
add
add
mov
mov
mov
add
add
push
daa
clc
repz
add
popa
add
outsb
call
test
pop
mov
stos
pop
fcomps
test
or
clc
mov
push
mov
xchg
xlat
cmpsl
clc
bound
add
add
nop
xchg
jg
mov
push
gs
jmp
dec
faddl
imul
inc
clc
pop
jnp
clc
dec
mov
add
add
or
es
jecxz
lea
clc
inc
clc
icebp
push
add
mov
repz
bound
add
push
add
xchg
cli
xchg
sbb
xchg
iret
es
testb
clc
fisubrs
sar
clc
or
test
xchg
rcrl
loope
sub
add
into
fs
jb
add
add
cwtl
xchg
aad
addr16
cmp
cmp
and
add
adc
add
movsb
clc
stos
push
push
ret
dec
sub
add
add
add
in
fsubr
cmp
clc
out
sub
add
add
jp
add
lahf
mov
xchg
cld
push
ret
pop
push
jecxz
push
xchg
movsb
clc
sar
test
cwtl
add
add
repnz
add
clc
mov
cmp
add
or
add
je
jb
add
add
xabort
fs
icebp
mov
int
xchg
cmpsl
clc
sbb
popa
add
add
add
clc
cli
add
add
sbb
jmp
xor
sub
jno
add
lea
rorl
clc
ficoml
cmp
daa
clc
adc
add
mov
gs
xchg
xchg
in
sub
add
add
jne
sahf
imul
lahf
bound
add
add
pop
clc
inc
add
pop
lcall
jmp
pop
scas
test
sub
hlt
mov
add
xor
add
clc
jle
clc
data16
cld
in
scas
adc
add
mov
add
push
jnp
sahf
dec
push
jns
clc
sti
push
push
fwait
jmp
sub
pop
sbb
clc
pop
adc
add
data16
dec
hlt
int3
sbb
inc
add
adc
add
mov
cwtl
inc
add
xor
test
add
fs
xbegin
add
add
loope
scas
sub
push
add
push
out
sub
clc
or
ret
clc
or
cwtl
push
add
push
add
popa
add
scas
pop
int3
lret
add
adc
add
add
lock
adc
add
adc
decl
sti
test
cmp
add
sub
inc
add
mov
mov
aaa
dec
insl
mov
data16
es
sti
sbb
test
add
and
add
shll
daa
clc
jecxz
sub
out
mov
xchg
fwait
jmp
outsl
es
mov
add
sti
cmp
mov
addr16
stc
mov
mov
fwait
jmp
jp
cmp
clc
call
clc
std
jge
sub
mov
jb
add
xchg
fwait
push
das
arpl
add
fs
ss
aaa
leave
dec
icebp
addr16
push
clc
mov
sub
nop
jl
mov
xor
add
sbb
xchg
push
add
mov
cwtl
out
loop
sub
add
mov
clc
lods
das
cmp
cs
fisttpl
add
inc
clc
aam
inc
clc
dec
adc
add
clc
stc
adc
add
inc
clc
pop
jbe
clc
mov
rcrl
mov
into
and
add
test
rcrb
xchg
push
mov
jbe
add
cmp
call
fwait
jmp
lods
push
add
xchg
mov
ret
sahf
dec
push
inc
clc
fwait
faddl
cmc
xor
das
xchg
clc
mov
inc
add
sti
mov
add
dec
cs
or
sar
movsb
clc
pop
stc
push
push
jl
add
inc
clc
add
add
rclb
loope
stos
icebp
mov
cmp
mov
fwait
jmp
dec
sub
pop
shlb
add
cmp
clc
push
xchg
pushl
jg
push
popa
cmp
add
test
sbb
add
dec
push
clc
mov
fcmovne
jb
add
inc
clc
lcall
clc
cltd
mov
mov
std
pop
clc
nop
call
add
sbb
sbb
pop
enter
scas
and
jno
add
leave
mov
jb
add
clc
sbb
clc
aaa
sbb
jmp
push
sbb
sbb
mov
pop
cld
push
ret
add
add
sub
clc
push
outsl
movsl
clc
in
stc
mov
mov
ds
cmp
ret
clc
sub
push
pop
mov
mov
clc
sbb
inc
add
cwtl
or
sub
mov
add
mov
movsl
clc
and
add
sub
mov
add
lret
clc
xchg
sbb
jmp
sub
es
nop
or
add
clc
and
add
cltd
faddp
clc
popf
sub
mov
popf
pop
dec
xchg
add
add
fcmove
insl
push
fnstenv
pop
add
add
add
add
add
add
add
jnp
clc
repz
pop
inc
clc
icebp
inc
add
adc
clc
pop
push
clc
ljmp
jns
adc
loope
ret
clc
mov
sbb
jmp
or
sahf
add
add
add
add
imull
mov
clc
mov
clc
ret
clc
add
fnstsw
jmp
xchg
add
dec
loop
loope
cli
popa
add
cltd
sti
push
add
inc
add
push
test
push
add
or
add
add
sbb
or
clc
outsb
aas
sbb
inc
cld
push
ret
jge
ja
or
cmp
and
add
mov
cmp
add
add
mov
mull
imul
add
ffreep
clc
es
inc
add
add
add
mov
test
push
clc
jbe
pop
cli
es
cli
push
jo
add
clc
sub
decl
mov
ljmp
sub
in
scas
pushf
out
xchg
mov
add
add
leave
loope
stc
ret
clc
data16
sbb
clc
xchg
xchg
and
add
add
add
xor
add
aad
clc
mov
add
jne
jg
loope
pop
xor
add
lods
fucomp
jecxz
insb
mov
clc
cmp
or
mov
push
cld
push
ret
sub
je
inc
add
or
clc
lea
xbegin
lret
push
jmp
jp
scas
sarb
jno
add
aam
clc
and
add
add
mov
inc
clc
je
jbe
pop
mov
add
push
pop
mov
add
mov
pop
dec
xor
add
add
insl
jo
add
jno
add
loopne
dec
gs
xchg
cmp
add
rorl
cmp
cmpsl
clc
and
add
push
mov
add
add
cltd
iret
clc
push
add
sti
pop
lods
push
add
and
add
add
ret
out
cwtl
sarb
scas
faddl
add
shlb
test
inc
clc
gs
cmp
push
clc
and
add
adc
add
or
jnp
testl
fnclex
clc
stos
repz
ja
clc
inc
clc
push
addr16
addr16
pop
insb
or
add
sbb
push
mov
push
mov
ss
add
in
jecxz
push
cmp
xchg
jno
add
xchg
cmp
cmp
add
push
add
fwait
jmp
mov
dec
mov
aaa
push
jge
clc
out
pop
clc
int3
mov
add
test
clc
mov
mov
sub
test
pushf
xbegin
sub
repz
sub
push
add
mov
imul
dec
and
add
add
es
jl
add
and
add
pcmpgtd
cmp
cmp
adc
add
pop
clc
es
push
clc
int3
and
mov
stc
aaa
negl
fisubrs
mov
add
jmp
lods
inc
xor
add
lea
cld
push
ret
sbb
sbb
clc
mov
add
push
clc
rol
clc
scas
and
lret
sub
dec
stos
xor
add
clc
ffreep
clc
inc
clc
push
or
fiaddl
add
add
pop
clc
inc
add
int
fnsave
inc
clc
jmp
imul
fwait
jmp
add
pop
xabort
ss
leave
into
loopne
sub
add
add
pop
pop
inc
clc
push
push
add
test
jns
in
mov
leave
lret
cmp
std
pop
push
jnp
pop
mov
lret
inc
add
in
mov
inc
clc
and
add
sbb
jmp
xor
push
sub
or
dec
mov
add
jmp
clc
loop
inc
add
ret
sbb
jmp
cmp
out
ret
clc
addr16
popf
cmp
cmp
mov
mov
cmc
das
cmp
inc
add
mov
fs
lret
add
adc
test
add
clc
inc
add
push
add
lods
adc
bound
add
cmp
push
jle
out
mov
mov
clc
add
add
push
push
mov
add
fwait
jmp
or
sub
sub
fwait
jmp
cmpsb
xchg
inc
add
mov
data16
xchg
mov
push
xchg
std
or
cmpsl
clc
leave
arpl
add
add
push
cwtl
ja
clc
mov
add
jp
clc
scas
cmp
imul
dec
ss
mov
bswap
fstpl
inc
cld
push
ret
and
pop
negl
and
add
add
les
cld
push
ret
or
popf
and
xchg
aas
movsl
clc
sub
jle
or
mov
mov
mov
jmp
lea
add
mov
push
push
std
movsl
clc
dec
shll
add
ret
clc
or
add
and
add
mov
jmp
or
ss
add
xlat
scas
mov
in
mov
movsb
clc
sub
clc
pop
dec
push
leave
xchg
ret
clc
incl
sti
fwait
jmp
ja
sahf
inc
dec
xchg
dec
dec
cmp
movsb
clc
call
hlt
add
add
add
pop
jmp
dec
nop
lods
xabort
add
sub
add
xchg
cmp
add
add
test
jmp
or
lea
fwait
jmp
xchg
or
xchg
add
popf
add
add
pop
leave
xchg
jb
add
add
add
mov
dec
pop
clc
and
xchg
mov
fld
clc
jns
mov
add
stos
lret
sbb
clc
mov
add
pusha
add
inc
clc
out
sub
dec
lods
sti
inc
clc
adc
add
aam
mov
add
cld
push
ret
jg
jp
out
mov
ret
clc
inc
clc
test
jno
add
data16
fmull
testl
add
inc
add
add
xor
add
clc
push
cmp
jecxz
add
fiaddl
mov
clc
outsb
push
add
jno
add
add
ljmp
pushf
mov
lret
jno
add
add
mov
out
aad
sar
clc
fdivrs
fsubs
add
insb
push
pop
xchg
out
sbb
stos
movsl
clc
add
add
push
ret
fs
insb
sahf
lock
inc
clc
mov
clc
jbe
add
cmp
clc
mov
push
add
jb
add
clc
xor
add
test
clc
test
arpl
add
mov
testl
ljmp
mov
clc
inc
clc
jae
add
cmp
jecxz
scas
or
push
add
in
mov
add
or
add
adc
add
clc
add
inc
clc
test
sub
lods
pop
inc
clc
test
jb
add
clc
lret
cmp
mov
xor
jmp
movsl
clc
repnz
sub
icebp
mov
movsb
clc
stc
xchg
jae
add
dec
sti
mov
sarb
clc
cli
cmp
clc
gs
nop
xchg
das
gs
dec
mov
sahf
stc
pop
sahf
pop
out
push
arpl
add
cmpsb
clc
xchg
test
xor
add
clc
es
mov
add
add
add
rclb
add
cmp
add
mov
clc
leave
dec
sbb
jl
clc
ljmp
fwait
out
cmp
mov
and
add
insl
mov
clc
ljmp
add
mov
push
cld
push
ret
xor
push
jnp
clc
dec
jmp
mov
mov
inc
add
push
add
loope
sub
ret
clc
jnp
fisttpl
lods
sbb
add
clc
push
and
iret
je
popa
add
and
add
sub
add
mov
in
push
ret
jno
push
clc
sub
mov
fwait
jmp
pop
sub
add
clc
xchg
cmp
idiv
sar
add
or
mov
shlb
clc
enter
cmp
enter
xabort
in
mov
mov
xor
add
cmp
mov
stos
jmp
add
add
scas
out
test
and
add
add
clc
imul
and
mov
jle
clc
das
in
es
repnz
pop
dec
mov
fnsave
add
mov
and
dec
push
add
popa
add
mov
in
pop
clc
xchg
fcomps
add
test
sar
cli
and
add
jo
add
jno
add
test
pop
scas
das
stos
shlb
add
or
lret
cmp
pop
lea
pop
mov
in
cltd
iret
aam
dec
cmp
jle
out
push
add
std
test
cmpsb
clc
dec
sbb
and
mov
add
inc
clc
or
or
add
cld
jne
bound
add
and
add
add
add
mov
push
es
ror
mov
ret
clc
inc
clc
sbb
add
fwait
jmp
xchg
in
shll
add
gs
nop
ficoml
add
clc
push
add
push
and
add
scas
rcrb
sub
imul
jbe
icebp
outsb
lret
sar
clc
insb
dec
push
add
and
add
icebp
insb
js
clc
mov
clc
xchg
lods
imul
data16
clc
into
lret
mov
or
clc
mov
movsb
clc
adc
add
add
fwait
jmp
test
add
std
sub
enter
test
push
jmp
add
outsb
jp
add
clc
xor
add
push
clc
cmp
add
popf
lcall
sub
add
push
ret
sub
fwait
jmp
dec
sbb
mov
add
lret
add
inc
add
loope
js
cmp
add
es
call
jmp
sahf
outsl
imul
mov
pop
sub
ret
rep
je
and
add
aad
int3
fisttpl
push
clc
pusha
add
cmp
add
incl
mov
call
mov
xor
add
pop
sar
inc
clc
dec
lret
push
adc
call
sub
fidivrs
ret
clc
mov
clc
sbb
mov
jbe
clc
push
lret
add
cld
mov
clc
sub
clc
dec
xor
in
push
add
ds
test
addr16
sar
add
outsl
jbe
clc
movsb
clc
aas
enter
neg
add
add
lods
sar
mov
pop
outsb
rcl
dec
jecxz
movsl
clc
into
push
add
and
add
clc
or
call
lret
xor
add
add
clc
cli
mov
add
ds
testl
or
test
lods
xabort
mov
sar
pop
lods
vmovups
add
lods
mov
insb
iret
rcrl
sub
insl
xchg
push
xor
ret
inc
lods
sub
fistpll
add
add
adc
add
cmpsb
sub
and
add
add
mov
add
jmp
add
xabort
clc
inc
add
cs
lret
xchg
popf
pop
clc
inc
add
jge
clc
mov
add
add
mov
add
fisttpl
jle
divb
clc
xchg
bound
add
inc
clc
mov
ds
cmpsb
clc
jecxz
ljmp
fwait
jmp
xchg
je
jg
add
clc
mov
clc
lret
add
fidivl
cli
jno
add
mov
cmp
add
es
pop
scas
test
cwtl
scas
int3
lock
arpl
add
add
movsl
clc
cmp
add
and
or
mov
insb
sbb
clc
pop
dec
std
mov
cs
add
lret
pop
std
push
add
cwtl
arpl
add
cld
test
je
jl
adc
jmp
and
add
add
xchg
loope
pop
dec
add
add
add
cld
push
ret
test
jns
aas
adc
add
inc
clc
mov
clc
jmp
int3
notl
add
fcmovne
and
add
and
add
clc
add
add
mov
sbb
rorb
clc
bound
add
xchg
data16
mov
in
leave
dec
fsubrl
xchg
adc
add
and
into
or
dec
add
je
add
aam
ret
mov
fwait
jmp
and
pop
clc
cmp
jo
add
mov
push
clc
xor
add
push
add
pushf
adc
add
cmc
xlat
cltd
lcall
xchg
in
xlat
lea
clc
jns
clc
sbb
add
insb
ds
clc
das
data16
sub
add
add
clc
or
data16
jmp
add
cmp
clc
dec
decl
call
cmp
clc
push
add
mov
addr16
into
shrb
cmpsl
clc
add
add
adc
add
add
push
fwait
jmp
xor
test
clc
push
add
scas
es
shl
clc
mov
adc
add
inc
clc
dec
push
ss
movsb
clc
nop
clc
imul
inc
clc
sub
clc
ds
leave
pushf
adc
add
add
repz
add
clc
xor
add
in
dec
das
xchg
cmp
add
cmp
inc
add
inc
add
cmp
push
push
add
inc
clc
inc
add
inc
add
out
aam
pusha
add
inc
clc
ret
clc
add
add
add
xor
push
add
loop
dec
pop
or
add
mov
mov
push
add
sub
add
add
cli
mov
clc
jb
add
pop
addr16
sub
rorb
xabort
clc
mov
testb
add
pop
fwait
jmp
lea
outsb
dec
js
xchg
xabort
xchg
out
sbb
clc
jl
clc
mov
stc
gs
lahf
insl
inc
add
or
stos
mov
sbb
rcl
mov
mov
add
pop
xchg
sar
aas
mov
add
xabort
sbb
push
in
push
ret
movsb
test
add
dec
rep
xor
add
dec
cmc
sar
add
push
add
cmp
push
jg
clc
jl
clc
outsl
and
add
loop
test
mov
add
jae
add
add
ret
clc
aas
pop
cmpsl
clc
push
in
rolb
cmp
clc
xor
add
dec
ljmp
stos
fistpll
xchg
cmp
add
outsb
data16
or
dec
adc
add
and
add
sub
addr16
cli
sbb
add
addr16
pop
cmp
clc
mov
mov
cmp
adc
add
fbstp
add
inc
add
cld
inc
add
push
add
repz
push
add
addr16
jb
add
dec
add
add
movsl
clc
jno
add
clc
out
cmp
add
push
xor
or
mov
xor
add
hlt
xor
add
inc
clc
cmp
dec
test
jle
add
cmp
add
pop
mov
stc
cli
mov
je
arpl
add
movsl
clc
pop
nop
hlt
gs
in
pushf
loop
aad
mov
mov
fwait
jmp
adc
sar
adc
add
add
das
cmp
pop
push
add
cmpsb
clc
jg
cld
sbb
clc
mov
cmp
clc
ljmp
xor
add
clc
jnp
jge
std
mov
clc
xor
add
inc
clc
repz
add
cld
mov
jmp
jle
clc
jecxz
xchg
cmp
mov
dec
std
cmp
push
cli
jmp
movsl
clc
fmull
add
imul
clc
mov
clc
pushl
rcrb
xchg
test
cmpsb
outsl
lods
sbb
push
ret
add
inc
clc
mov
jmp
sbb
iret
popf
lea
add
mov
fcoml
test
adc
add
inc
add
loopne
and
inc
clc
adc
add
add
fwait
jmp
aas
lea
fs
popf
faddl
or
lods
aad
or
int3
pusha
add
addr16
scas
xlat
xor
test
jns
add
adc
add
add
and
add
jecxz
in
fwait
add
rep
sahf
scas
pop
notb
add
inc
add
cwtl
ja
add
add
add
shlb
call
clc
dec
push
add
or
lods
mov
clc
push
mov
or
dec
mov
dec
mov
lcall
mov
and
mov
loope
das
inc
add
testl
repz
clc
xabort
or
pop
pop
leave
sbb
clc
mov
cmp
clc
pop
push
adc
clc
mov
repz
pop
das
sbb
add
add
test
aaa
xor
add
clc
clc
push
arpl
add
arpl
add
clc
jbe
pusha
add
lea
add
cmpsl
clc
pop
sar
clc
lret
test
add
mov
mov
loop
and
shll
mov
push
clc
pusha
add
xor
pop
sub
dec
push
fwait
jmp
sub
popf
or
clc
xchg
movsl
clc
loope
mov
insl
mov
jne
jecxz
aaa
jno
add
clc
xchg
fstl
add
popa
add
lret
loop
cmc
lret
movsb
clc
lods
in
xor
mov
clc
pop
ja
not
fwait
jmp
lods
aas
mov
sub
clc
stos
adc
add
mov
fwait
jmp
cmp
add
add
mov
jmp
add
xor
mov
cmp
enter
jnp
ljmp
sub
bound
add
ljmp
clc
mov
dec
push
jne
fwait
jmp
cld
add
add
add
mov
cwtl
loop
jmp
push
es
mov
clc
mov
shrb
clc
out
cwtl
sahf
xabort
jo
add
push
jno
add
mov
mov
clc
adc
add
inc
add
cmpsl
clc
and
clc
popa
add
mov
add
js
clc
bound
add
add
add
xchg
lret
xchg
mov
add
mov
add
scas
and
add
fdivrs
lods
cwtl
test
mov
clc
stos
pop
cmp
add
es
rorb
aad
frstor
mov
fcmovnb
clc
icebp
or
clc
enter
xchg
scas
mov
clc
scas
in
sub
add
xlat
mov
add
jmp
clc
dec
imul
pop
add
add
clc
pop
mov
clc
xor
add
add
add
inc
clc
outsl
mov
mov
and
test
add
in
dec
popa
add
pop
add
add
sahf
sub
clc
test
xor
cmp
xbegin
outsl
aad
clc
scas
jp
adc
lcall
or
clc
enter
js
sub
fwait
es
test
add
add
and
jmp
imul
sbb
cltd
push
add
xchg
notb
sbb
cli
inc
add
cmp
push
mov
movsl
inc
add
lods
add
pop
in
out
stc
std
out
ds
xchg
mov
clc
adc
add
xlat
push
add
xchg
xor
add
add
push
or
xchg
frstor
add
clc
xor
add
popa
add
jno
add
clc
mov
dec
aas
xabort
ficoms
add
jbe
sbb
fdiv
xbegin
clc
insl
push
add
push
es
mov
sub
cli
out
xchg
sub
or
shll
push
add
xor
add
add
add
clc
into
mov
clc
push
pop
adc
add
add
add
cwtl
and
add
lock
lods
pop
lret
sub
mov
dec
mov
add
add
xor
mov
add
jbe
outsb
das
je
jno
add
mulps
sub
lret
add
xor
mov
fwait
jmp
ja
mov
xor
clc
jp
lea
add
in
xabort
fimuls
jae
add
push
lret
dec
movsl
clc
aaa
scas
pop
loop
jle
lods
inc
clc
insl
inc
clc
mov
daa
clc
iret
or
add
clc
xor
add
add
jne
sbb
add
mov
clc
or
mov
pop
jne
add
cmp
add
add
clc
in
pushf
xor
dec
cmpsl
clc
mov
inc
add
jg
and
add
clc
xchg
cmp
clc
xchg
jge
ret
clc
sub
add
inc
cld
push
ret
pop
add
in
imul
mov
inc
clc
lahf
pop
clc
xbegin
add
mov
push
add
stos
mov
sub
add
stc
fistl
jb
add
xor
fwait
jmp
pop
sahf
sub
fsubr
insl
xor
add
repz
mov
adc
add
clc
mov
add
std
jle
add
data16
loop
add
add
clc
xchg
fcoml
sarb
test
sti
jb
add
dec
dec
xor
clc
mov
jge
mov
add
fnstcw
xchg
or
xchg
fcoml
add
test
push
cmp
add
or
push
clc
movsb
clc
mov
add
add
clc
test
push
ret
xor
dec
dec
mov
push
xor
add
clc
inc
add
stos
sbb
add
jge
clc
cs
xlat
mov
add
jae
add
in
ret
scas
leave
pop
imul
jae
add
clc
ljmp
mov
sti
mov
dec
into
adc
add
mov
push
cmp
enter
fcomi
mov
mov
push
add
cmp
clc
data16
jae
add
pop
sub
add
clc
ja
std
push
nopl
insl
jmp
push
jmp
add
movsl
clc
jl
inc
clc
xor
add
jp
pop
jns
mov
popa
add
fsubs
jg
mulb
add
lods
fwait
cmc
fwait
jmp
outsb
movsb
clc
popf
mov
cld
mov
add
add
add
add
push
mov
fidivrs
clc
dec
sub
pop
add
add
add
test
sub
or
lcall
clc
xchg
outsl
push
add
mov
mov
pop
clc
inc
add
scas
rclb
add
ja
es
addr16
fdivrp
adc
clc
clc
pop
jne
in
mov
cmp
clc
xbegin
call
xor
mov
negb
sbb
or
add
movsb
nop
xor
loop
and
sub
loope
insl
dec
aad
add
push
add
out
pop
repnz
add
add
popa
add
cmp
jb
add
mov
fwait
jmp
rcr
ds
jae
add
sbb
xchg
imul
stos
push
mov
add
xchg
xchg
jmp
fwait
jmp
lods
es
cmp
or
add
rclb
clc
mov
ljmp
push
imul
mov
add
adc
add
jno
add
add
shrl
clc
dec
je
jns
add
or
add
inc
clc
sar
stos
sub
fs
lret
adc
add
rcrl
pushl
add
mov
dec
cld
push
ret
test
jnp
mov
adc
add
add
xlat
add
xor
add
fimuls
add
add
shl
clc
addr16
mov
incb
add
in
and
add
addr16
out
fnstcw
adc
add
or
in
lcall
incl
adc
add
add
cmp
sub
add
jp
sub
jb
add
inc
clc
xchg
sbb
fs
cwtl
lods
jbe
mov
cmp
fsubrl
add
add
push
int3
inc
add
sahf
dec
fs
add
cld
xor
add
sbb
fscale
js
jecxz
jmp
cmp
jbe
jne
int3
xchg
bnd
add
jmp
fwait
jmp
sub
daa
clc
inc
clc
repz
enter
or
daa
clc
pop
mov
shl
clc
jae
add
mov
or
aad
add
cmp
sahf
arpl
add
add
mov
push
pusha
add
ret
cmp
add
leave
pop
inc
add
es
cmp
add
add
sbb
inc
clc
dec
xchg
jl
lock
into
pop
leave
daa
clc
sbb
add
dec
add
add
add
frstor
repz
add
add
pushf
xbegin
clc
cmc
ljmp
or
inc
add
sub
arpl
add
jb,pt
add
pop
xchg
mov
add
clc
scas
and
add
pop
xchg
mov
push
fwait
inc
add
pop
test
xbegin
aam
add
lret
out
out
and
add
add
xbegin
jbe
clc
or
shrb
fwait
jmp
and
sub
xchg
dec
repz
ja
dec
test
imul
jns
add
inc
clc
aam
repz
clc
rcll
add
mov
std
stos
adc
add
add
loop
out
cmp
ss
and
sub
add
pop
cs
clc
pusha
add
movsb
clc
and
sahf
nop
pop
clc
cmp
jl
stc
clc
aad
cmp
sar
add
add
add
jnp
mov
fwait
jmp
lods
and
pop
into
in
lret
jbe
mov
data16
dec
or
cmpsb
clc
popf
clc
mov
add
add
add
incl
mov
and
add
and
add
clc
pop
cmc
imul
xor
add
add
mov
add
lahf
mov
clc
ficompl
cmp
add
add
mov
add
ss
cmp
loop
jo
add
ret
shrb
or
lret
decl
xchg
sahf
lcall
mov
rcrl
ficompl
add
test
cmp
clc
push
add
inc
clc
add
add
cld
mov
in
dec
jno
add
pusha
add
mov
mov
push
mov
xabort
clc
leave
inc
add
sar
add
fwait
jmp
sub
xchg
fbld
add
xor
add
add
mov
clc
cltd
rorb
scas
sbb
push
clc
jbe
add
xchg
jg
je
cwtl
std
into
dec
mov
add
mov
test
mov
je
clc
js
jp
mov
fwait
jmp
sbb
and
pop
mov
clc
pop
mov
xbegin
es
clc
ss
loope
xchg
pop
mov
inc
add
gs
mov
clc
jecxz
xor
add
incl
mov
pushl
sub
jecxz
add
fwait
jmp
cltd
xor
add
mov
xlat
clc
stc
pop
sub
add
cmp
mov
imul
clc
mov
pop
add
add
clc
jp
mov
add
pop
push
add
xchg
push
outsb
pusha
add
in
sub
xor
add
add
fbld
popf
mov
das
mov
push
cmp
lea
add
popf
xchg
push
add
mov
add
js
jo
add
cli
jp
rcrb
xchg
jmp
add
push
rorb
cmp
add
scas
mov
mov
jge
out
ja
or
push
je
fwait
jmp
adc
add
ds
ljmp
cmp
add
push
mov
push
and
dec
xchg
inc
clc
imul
dec
mov
add
clc
scas
or
add
fcmovu
inc
clc
mov
clc
xchg
clc
sar
add
call
clc
loope
adc
add
xchg
stos
sbb
cmpsb
clc
or
clc
out
mov
sub
jne
add
cmp
xchg
cmp
clc
pop
cmp
xchg
cld
push
ret
sbb
inc
add
pop
ja
in
scas
jg
nop
sbb
jmp
xor
inc
push
xor
add
jae
add
xor
add
adc
call
clc
gs
xor
add
imul
clc
pusha
add
iret
jecxz
das
mov
clc
push
add
add
add
add
jmp
push
add
add
test
clc
std
paddw
clc
xor
add
xor
add
add
je
nop
imul
cli
adc
add
cmp
out
xor
std
out
or
cld
mov
inc
add
fisubrs
cmp
paddusw
outsb
cmp
lfs
fstps
clc
mov
add
pushf
shlb
pop
mov
stos
out
mov
test
sub
jge
fwait
mov
dec
xor
cmp
push
add
je
mov
clc
lahf
sar
add
insb
add
sub
add
test
loopne
jmp
cmp
or
cmp
jae
add
clc
push
clc
fadds
jle
clc
loop
jmp
pop
cld
push
ret
push
imul
data16
mov
sahf
xchg
mov
sbb
add
dec
mov
inc
add
mov
add
lret
add
lods
jecxz
mov
and
add
clc
dec
mov
or
add
inc
add
xabort
in
pop
test
fwait
sub
in
nop
pop
es
cwtl
clc
cmp
outsl
push
aam
inc
clc
cmp
sar
pop
push
clc
nop
test
add
add
stc
addr16
and
add
ds
jg
xchg
fwait
jmp
or
test
std
ja
clc
mov
jmp
aaa
or
push
cmp
mov
movsl
clc
int
clc
aas
pop
push
lret
mov
xchg
push
add
xchg
insl
and
add
in
pop
push
add
push
add
xor
add
xchg
pop
push
jmp
sahf
jge
sub
dec
in
jo
add
add
adc
add
mov
popa
add
mov
clc
and
clc
jnp
mov
jmp
jbe
fwait
jmp
das
or
add
xbegin
push
add
push
push
add
into
sub
decl
fs
jmp
cmpsb
and
mov
scas
addr16
iret
lock
add
add
dec
xor
add
dec
bound
add
cmp
add
cmp
jp
add
jne
lret
xchg
cwtl
ja
in
push
clc
pop
mov
add
push
clc
dec
pop
shll
rcrl
repz
add
ljmp
outsb
push
mov
add
jae
add
aaa
and
xchg
mov
add
lods
gs
push
mov
fwait
jmp
popa
scas
add
clc
mov
inc
clc
pop
adc
add
add
cli
push
add
cmp
std
mov
mov
push
add
ja
scas
push
jge
clc
pop
addr16
add
add
lret
xbegin
xchg
repz
clc
repz
jno
add
dec
xchg
scas
jl
xor
add
clc
es
add
add
xchg
and
add
cmp
cmp
dec
inc
clc
mull
add
das
popa
add
fsts
add
xchg
sbb
aam
add
mov
clc
lea
cwtl
add
add
sti
add
dec
mov
in
cmp
clc
or
aam
sbb
clc
in
sbb
and
cld
push
ret
push
push
sbb
dec
cmp
and
mov
sub
mov
mov
mov
aaa
mov
jle
ds
add
testl
js
dec
dec
mov
add
clc
xchg
dec
mov
test
push
jb
add
gs
cmpsb
clc
in
fadds
pop
fwait
jmp
and
test
sub
inc
add
push
imul
dec
cwtl
std
or
cmp
jae
jmp
adc
xchg
insb
fdivrl
cli
cmc
loop
pushf
inc
add
mov
xor
add
jne
fwait
jmp
fwait
xchg
sub
jb
add
push
and
add
add
add
mov
in
pop
mov
add
sub
add
and
add
pop
xor
add
add
add
pop
data16
add
sbb
fwait
jmp
sahf
add
lret
jb
add
add
clc
jbe
icebp
sub
clc
jl
push
add
mov
clc
add
add
clc
test
xbegin
sub
jo
add
add
shr
cmp
add
and
add
xor
add
cmp
clc
cmp
mov
add
addr16
test
pop
movsl
clc
push
add
jno
add
cmp
add
add
add
gs
lods
push
jle
gs
inc
clc
nop
xchg
fldt
rcll
xor
add
int
clc
dec
into
ljmp
clc
pop
leave
jne
cltd
mov
fimuls
into
cmp
out
xbegin
adc
add
sub
and
add
add
pusha
add
ret
clc
inc
add
enter
or
test
or
mov
jmp
or
clc
jbe
dec
sub
sub
add
lods
scas
clc
xor
add
add
xor
add
fwait
jmp
sub
sub
mov
add
cmp
add
add
iret
lret
add
add
jge
mov
cmp
lret
mov
test
adc
add
out
xor
clc
arpl
add
clc
leave
xchg
in
cmp
add
cmpsb
clc
cmpsl
clc
sbb
scas
imul
sbb
inc
clc
xchg
dec
inc
add
fwait
cmp
add
mov
std
and
cmc
outsl
pop
xbegin
in
sahf
test
xchg
enter
cmp
loop
xor
add
push
add
sbb
rcll
sbb
pop
into
aam
clc
stc
push
add
std
adc
add
or
clc
pop
mov
add
popa
add
sar
pop
xor
add
add
cmc
int
mov
add
adc
add
clc
mov
imul
jnp
clc
xor
add
loopne
adc
add
mov
clc
fstps
or
sub
loope
aam
clc
mov
cvtps2pi
add
mov
mov
sar
or
loop
sub
lahf
divl
push
sbb
sbb
dec
sub
add
cmp
dec
stos
pop
or
mov
dec
aad
pop
leave
out
pop
clc
push
add
ret
lahf
lods
gs
pop
imul
rorl
sub
clc
in
movsl
clc
dec
mov
add
add
iret
sub
gs
push
add
jno
add
sbb
push
ret
push
lea
dec
cs
sbb
push
adc
push
ret
adc
in
jmp
xor
lret
and
ret
mov
clc
cmpsb
clc
in
fnstcw
add
sub
jo
add
cmp
mov
shlb
clc
cmp
clc
addr16
jns
add
or
scas
and
add
es
cmp
mov
aas
and
add
test
adc
xchg
dec
cmp
mov
clc
sti
loope
and
sahf
push
add
in
mov
push
add
fwait
jmp
inc
cmp
xor
clc
stos
sub
add
nop
in
repnz
add
adc
add
clc
test
mov
test
push
add
lea
add
hlt
cmp
add
push
loope
mov
add
scas
test
ljmp
add
push
sub
or
addr16
add
clc
xor
add
sub
pop
mov
test
pusha
add
sub
jge
inc
add
mov
stos
xchg
push
call
fwait
jmp
jno
pop
lcall
mov
aad
out
fbstp
jbe
add
dec
jne
ljmp
clc
xchg
sbb
clc
insl
xchg
in
in
stos
xchg
movsb
clc
sub
and
or
clc
clc
adc
add
scas
pop
popf
and
add
jle
add
cmpsl
clc
repnz
inc
jp
fwait
jmp
or
pop
daa
clc
jmp
add
aad
stc
mov
clc
dec
xbegin
xbegin
add
cmp
add
dec
sub
clc
cmp
add
xabort
push
clc
cmpsl
clc
dec
or
clc
cmp
fidivrl
add
add
add
xchg
inc
add
int3
ljmp
gs
lods
mov
pop
clc
push
mov
add
sbb
scas
enter
jb
add
or
fwait
jmp
sub
fistpl
dec
and
push
movzwl
fwait
jmp
adc
jl
xchg
call
clc
test
add
mov
lret
mov
jnp
repnz
fwait
clc
dec
sub
lods
je
cmc
mov
add
clc
adc
loop
ss
add
add
inc
add
pop
jnp
clc
aaa
sub
movsl
clc
xor
add
add
cmp
cs
add
adc
add
pop
inc
clc
jnp
popf
sub
iret
lods
incl
popa
push
cmp
add
push
repz
fcomps
pop
sub
fisttpl
jns
stos
dec
gs
lret
nop
lea
xbegin
xchg
jns
clc
mov
add
cmp
mov
rol
clc
lret
add
clc
jae
add
xor
add
jl
jmp
cmp
pushl
rcrb
cmp
clc
fistpll
rorb
fnstenv
cmp
add
cmp
mov
push
stos
mov
jb
add
add
cmp
xchg
lods
and
add
pusha
add
jbe
int
add
add
add
mov
dec
fdivrs
in
jne
cmp
ret
clc
push
add
mov
sahf
ret
jbe
mov
cmp
jp
loope
and
addr16
dec
mov
add
out
mov
test
test
data16
scas
push
xor
cld
push
ret
sub
daa
clc
pop
or
jmp
insb
sub
es
fsts
ret
dec
jno
add
incb
push
add
jb
add
cmp
mov
jb
add
add
add
sahf
mov
call
pop
push
add
shr
mov
add
mov
xbegin
clc
ret
inc
add
or
and
add
add
or
xbegin
add
inc
clc
int3
dec
mov
add
jb
add
addr16
xchg
pop
xchg
lock
mov
inc
clc
lret
xor
add
add
clc
insl
and
add
xchg
xchg
xor
add
in
popf
lods
push
add
je
xchg
popf
outsb
add
add
add
jns
push
or
sti
add
cltd
mov
add
arpl
add
clc
int3
inc
clc
xchg
and
add
add
push
pop
fwait
jmp
scas
sub
push
je
clc
cltd
pop
cmc
insl
push
clc
loop
inc
add
dec
mov
add
or
mov
push
and
add
and
add
sub
mov
cld
jg
add
jg
clc
cmp
ret
push
f2xm1
sar
mov
and
in
cmp
fadds
or
iret
pop
gs
mov
clc
sbb
cmp
add
sahf
push
imulb
loope
insb
xchg
push
push
add
add
cmp
data16
cli
cmp
add
add
out
inc
add
movsb
clc
pushf
ret
loopne
and
aaa
stc
push
push
loop
imul
add
xlat
bound
add
clc
xor
add
or
loop
inc
clc
push
add
not
jp
int3
push
push
fwait
jmp
mov
ret
add
or
add
clc
lock
clc
mov
ret
clc
insb
popf
jecxz
push
add
jne
clc
xchg
push
sahf
out
mov
clc
icebp
scas
fadds
clc
lcall
clc
loop
daa
clc
sub
add
scas
jle
cmp
add
mov
clc
popf
test
arpl
add
clc
cmpsl
clc
leave
divl
mov
cmpsl
clc
mov
lods
sbb
mov
lcall
mov
add
add
push
cld
add
clc
sarl
add
dec
scas
sbb
xchg
mov
stos
jo
add
outsl
jo
add
in
inc
clc
mov
fidivs
add
or
jle
je
cmp
outsb
xchg
mov
inc
add
rolb
clc
lea
add
xchg
jl
aaa
mov
int3
jecxz
dec
xchg
push
add
pop
and
add
clc
add
cmp
cmp
inc
add
and
add
dec
cld
push
ret
popa
lods
sub
add
add
clc
out
mov
sub
fsubr
adc
fnsave
add
add
mov
ja
movlps
add
inc
clc
and
add
clc
push
add
inc
add
xor
add
add
add
aad
add
test
leave
leave
fsubrs
shll
add
into
pop
fisttpl
movsl
clc
add
faddl
add
dec
xchg
dec
mov
lcall
ljmp
es
add
add
xchg
mov
loop
xor
add
outsl
ret
clc
jge
clc
inc
clc
push
add
inc
add
sti
out
cmp
and
jne
add
push
push
ret
or
jmp
jmp
idivb
in
jne
jecxz
fcmovnb
clc
data16
pop
fwait
sub
cli
xor
add
lock
mov
clc
arpl
add
add
clc
pop
inc
clc
inc
clc
pcmpeqw
xchg
pusha
add
add
or
push
ret
push
insb
add
jnp
clc
clc
cli
sbb
sbb
jp
jmp
add
jg
fwait
jmp
inc
dec
test
jmp
std
das
bound
add
add
add
pop
mov
cmp
add
jne
adc
add
jge
clc
push
lods
mov
push
add
popf
stos
ret
clc
push
fadds
cmc
pop
pop
pop
clc
cmp
cmp
clc
mov
clc
dec
jmp
add
mov
inc
add
imul
clc
lcall
jmp
test
mov
dec
mov
dec
test
pop
inc
clc
mov
xchg
lcall
sub
fs
add
and
add
fdivl
clc
out
xchg
scas
mov
add
psubsb
add
outsb
dec
add
add
add
cmp
ljmp
inc
and
jmp
cbtw
insb
push
call
fwait
jmp
push
sbb
jne
cltd
adc
je
fwait
jmp
fisubl
pop
xor
add
pushf
mov
add
aad
pop
xlat
sub
clc
push
cmpsb
ljmp
popa
insb
push
add
out
aaa
lahf
mov
leave
cmpsb
clc
popf
sbb
lock
add
add
outsb
es
cmp
add
add
add
xchg
xchg
nop
arpl
add
fidivs
lods
scas
xlat
mov
add
pop
out
or
mov
clc
out
insb
pusha
add
push
hlt
in
push
clc
and
imul
push
jmp
sbb
jge
clc
pop
sub
push
loop
mov
add
leave
push
add
mov
push
pushl
das
add
add
sar
clc
mov
cmp
sub
and
int
clc
das
sbb
add
fwait
jmp
dec
loopne
cld
daa
clc
dec
jmp
call
fwait
jmp
insb
imul
fwait
jmp
lea
mov
ficompl
add
jbe
pop
clc
adc
add
lods
dec
jno
add
add
push
ret
dec
add
add
inc
clc
jnp
hlt
sub
cmp
add
mov
push
or
dec
fs
and
add
cltd
push
ja
sbb
jecxz
ret
clc
cmpsl
clc
dec
and
add
cmp
sbb
loop
jmp
or
lods
movsb
mov
fstl
adc
add
add
or
sbb
test
adc
add
xchg
stos
pop
clc
clc
mov
xbegin
ss
add
cmc
psrld
pop
pop
add
add
mov
clc
icebp
push
call
jmp
popa
insb
sbb
add
insl
imul
lcall
add
je
jp
cltd
lcall
jmp
or
jp
jg
mov
lcall
incl
add
ja
clc
jp
pusha
add
out
repnz
xlat
shr
xor
add
mov
sub
inc
clc
adc
add
push
pop
das
fnsave
mov
add
cmp
ds
jmp
add
test
jecxz
fildll
sbb
mov
sub
rcl
sahf
mov
repz
fcoml
add
dec
jmp
clc
mov
clc
and
clc
pop
adc
add
notb
insl
inc
add
test
push
pop
vunpcklps
mov
xchg
call
add
add
add
add
fwait
jmp
dec
inc
pop
fs
xor
add
add
add
push
lods
lods
movsl
clc
push
add
add
int3
ret
clc
pushl
fwait
jmp
push
pop
js
mov
jmp
jp
sub
dec
test
fxch
rcl
mov
jg
outsb
in
into
arpl
add
add
stos
rclb
clc
cwtl
ret
clc
imul
int3
daa
clc
pop
out
mov
cmp
jmp
push
sub
and
add
popa
add
inc
clc
lea
lcall
cmp
add
gs
mov
xor
add
clc
jno
add
clc
sti
negb
add
jecxz
mov
push
ret
mov
push
push
mov
fwait
jmp
sub
sub
xchg
push
ss
cmp
or
cmp
enter
lcall
lcall
mov
sbb
jne
fwait
jmp
gs
cmp
add
daa
clc
jle
clc
or
add
mov
aad
lods
dec
clc
jbe
clc
fsubrs
clc
dec
fmul
aaa
dec
out
fincstp
hlt
popf
or
add
or
test
aaa
int3
dec
sahf
shll
clc
and
inc
clc
iret
popa
add
insl
adc
add
cmp
xchg
in
jae
add
js
test
cmp
cld
test
movsl
clc
leave
imul
lods
pop
fs
nop
fwait
jl
test
xor
clc
fstl
add
pop
in
aad
fcoms
fcomp
or
mov
add
xbegin
add
ljmp
add
leave
xchg
gs
mov
jo
add
clc
cmpsl
clc
out
sub
loope
fstpl
or
clc
mov
fidivl
clc
mov
and
jle,pn
inc
clc
sub
add
add
push
je
inc
clc
push
enter
pusha
add
cmp
out
ret
test
inc
add
lcall
dec
jbe
inc
clc
jp
mov
xor
add
jg
add
pushf
push
add
mov
xchg
gs
cmp
mov
add
dec
ss
int3
aas
jb
add
clc
gs
push
sbb
std
dec
dec
cmp
xor
in
and
mov
test
es
cmp
xchg
repz
xor
clc
jecxz
xchg
or
mov
out
jns
outsl
jp
ljmp
dec
call
add
movsl
clc
fwait
pushf
add
adc
add
es
mov
mov
mov
fwait
jmp
cmpsb
xor
mov
adc
add
xbegin
add
push
push
mov
add
iret
pop
or
cmpsl
clc
imul
pushl
cld
push
ret
push
push
sbb
add
or
arpl
add
lods
xor
add
add
out
jmp
pop
inc
clc
fadds
adc
repz
clc
add
cmp
add
add
add
add
dec
sub
inc
adc
jmp
cmp
pop
jnp
loop
xor
sub
cs
ljmp
pop
xabort
mov
clc
nop
test
bound
add
add
add
add
mov
add
cmp
fldt
xlat
ret
clc
mov
or
clc
or
clc
jno
add
lret
add
fwait
jmp
popa
aaa
and
cmp
add
mov
push
clc
inc
add
ds
clc
addr16
test
mov
lcall
aas
inc
clc
mov
clc
bound
add
add
add
mulb
clc
call
es
movsb
clc
add
popa
add
mov
dec
sahf
ret
clc
sahf
sbb
pop
in
inc
clc
cltd
cs
xbegin
aaa
cmpsl
clc
add
add
xchg
pop
adc
add
gs
push
add
add
clc
push
add
pop
adc
add
clc
out
and
mov
add
mov
push
sbb
clc
aam
and
and
mov
stos
mov
mov
add
outsb
mov
add
xchg
insl
mov
sbb
clc
decl
aad
ljmp
mov
push
sbb
cmpsl
clc
call
xchg
jmp
sbb
jmp
push
sub
test
push
add
repz
or
clc
mov
and
mov
clc
adc
add
inc
and
fwait
jmp
ja
pusha
add
jne
stc
sti
cmp
cltd
mov
test
std
enter
aam
clc
pusha
add
fbstp
add
clc
imul
rorb
clc
repz
add
mov
add
roll
clc
stc
xor
add
sar
cmc
lret
clc
daa
clc
mov
mov
or
clc
push
add
sub
add
testb
je
xchg
xor
clc
cmp
cltd
and
add
pop
or
pop
xbegin
mov
adc
add
mov
clc
cmp
fprem
mov
cli
xor
clc
bound
add
mov
pushf
imulb
scas
aam
loope
cwtl
push
and
add
data16
dec
or
out
push
cmp
fwait
jmp
cmp
clc
sar
ret
clc
fnsave
add
fwait
cmp
add
add
clc
add
sbb
add
xchg
arpl
add
rorb
add
loopne
jae
add
js
jecxz
cli
adc
clc
pop
pop
pop
push
inc
add
jle
test
test
add
add
cmpsb
clc
testb
add
cmp
stos
faddp
clc
pop
or
popf
loop
xchg
xchg
pushf
xor
clc
outsb
aad
aad
lods
sub
aas
out
stc
sub
mov
jmp
aas
dec
sub
movsl
clc
push
daa
clc
and
add
loop
push
add
add
add
xor
add
add
data16
jg
mov
clc
enter
add
add
cmc
inc
clc
add
fwait
jmp
ja
sub
cmp
cmp
clc
imul
clc
xchg
cmp
add
mov
xor
clc
fmuls
mov
fmull
xor
add
test
outsl
mov
add
xchg
sbb
xchg
jmp
test
add
sbb
dec
pusha
add
or
and
add
in
fiadds
add
add
stos
adc
add
mov
xchg
in
mov
inc
clc
rclb
clc
push
clc
cmp
push
push
add
mov
xchg
push
lret
mov
clc
push
add
push
add
lods
out
rorb
or
cmp
add
clc
sbb
movsb
fwait
jmp
jge
ja
dec
or
ret
clc
mov
js
int3
decl
test
lcall
ljmp
add
add
xabort
lret
add
cmpsl
clc
and
imul
clc
sub
clc
pop
inc
add
cmp
in
stos
pop
lods
jmp
clc
divl
out
fcoms
lret
add
mov
cmp
inc
add
enter
dec
fisubs
push
inc
add
int
popf
outsb
xchg
enter
data16
dec
sub
push
cmp
sub
sar
xor
add
cmp
clc
adc
mov
data16
movsb
clc
fstpt
add
clc
clc
imul
jge
clc
dec
inc
add
xor
add
clc
negl
sbb
clc
pop
sbb
and
add
cmp
faddl
sbb
add
clc
mov
fwait
inc
clc
test
dec
adc
maxps
add
xlat
movsl
clc
cmpsb
clc
je
inc
add
jl
jp
inc
add
and
add
sub
add
sar
xor
add
mov
add
jg
add
xchg
jg
in
jns
sar
clc
gs
pop
inc
clc
repnz
jae
add
add
sbb
add
je
clc
sbb
enter
popf
sub
clc
push
add
repnz
adc
add
sahf
mov
clc
inc
add
mov
and
add
inc
add
xor
add
add
xor
add
idivl
sar
and
add
add
push
insl
adc
add
clc
xor
add
std
xlat
add
mov
clc
or
pop
fistpll
and
add
clc
dec
mov
xchg
jo
add
xchg
in
call
clc
in
lcall
cmp
sbb
add
jmp
repz
xor
add
adc
add
add
out
insb
incb
add
cmp
clc
loope
je
xor
add
mov
add
cld
mov
or
clc
into
mov
xbegin
mov
pop
aaa
xlat
leave
in
lock
push
jecxz
fidivl
add
mov
loope
cmp
in
add
mov
jl
add
add
clc
in
and
aad
xchg
stos
adc
add
push
fisubs
add
js
sbb
add
cwtl
shrl
cmp
clc
and
add
fwait
mov
add
in
push
adc
clc
push
clc
test
adc
add
cmp
mov
mov
add
clc
repnz
popa
add
es
push
clc
jae
add
clc
push
add
sbb
pusha
add
imul
ja
and
dec
je
clc
cmpsb
clc
ds
add
xchg
jbe
xlat
sbb
sbb
jl
clc
cmp
das
scas
movsb
clc
std
mov
xor
jb
add
clc
sbb
clc
inc
clc
jbe
clc
lahf
xchg
negb
or
rorl
add
jecxz
repz
sbb
imul
sub
xchg
push
add
push
adc
push
clc
ljmp
add
lret
add
or
lea
add
add
dec
mov
add
nop
data16
std
out
xchg
xor
add
mov
clc
sub
clc
out
lea
add
aaa
sbb
daa
clc
negl
lret
popf
jg
adc
or
clc
cmp
outsl
adc
add
add
jne
scas
cmp
or
sarl
aam
add
add
gs
aad
clc
xchg
sub
clc
dec
cmp
cmp
clc
enter
inc
add
add
xchg
inc
clc
insl
pop
pushf
mov
add
sbb
mov
test
cli
ljmp
clc
pop
or
pushf
pop
mov
dec
xchg
clc
cmpsl
clc
and
data16
sub
clc
aad
clc
fldenv
add
popa
add
adc
add
dec
pop
std
jmp
or
cmpsb
clc
outsb
mov
clc
dec
sub
cmp
mov
mov
in
sbb
int
clc
movsb
clc
cmp
add
aam
xchg
push
mov
sbb
push
add
cmp
pop
sti
lahf
sar
clc
xchg
jb
add
ds
add
clc
dec
add
add
clc
jmp
clc
mov
clc
and
add
in
ljmp
add
add
std
dec
adc
fdivrs
inc
clc
or
jl
clc
faddl
add
adc
add
pop
outsl
pop
adc
add
dec
ja
clc
arpl
add
clc
or
divl
clc
iret
jo
add
clc
sub
inc
clc
mov
loop
sarb
adc
add
add
jae
add
clc
in
ret
stc
push
outsl
bound
add
jmp
xchg
gs
push
add
mov
mov
cmpsb
clc
inc
add
shrl
clc
repnz
rcrl
lcall
or
clc
popf
push
or
sar
add
pushf
bound
add
or
test
fnstsw
clc
xchg
in
mov
std
push
mov
ret
add
jle
clc
push
add
inc
add
int3
sbb
xchg
mov
add
add
add
or
mov
mov
mov
rol
clc
or
sub
add
add
add
add
mov
add
fldl
add
push
add
sbb
push
sahf
sahf
adc
dec
out
jbe
jo
add
clc
shrl
int
add
jbe
repnz
bound
add
add
mov
add
ret
add
cmp
das
mov
add
add
push
enter
pop
or
jp
pop
fwait
mov
cwtl
xabort
clc
decl
push
add
fcmovnu
dec
xor
add
sub
bound
add
clc
cmp
add
jl
jae
add
cmpsb
clc
or
add
loope
xlat
inc
clc
scas
movsb
clc
ljmp
cmpsl
clc
and
add
pop
mov
mov
cmp
jne
mov
cld
cmp
fsubr
gs
cmp
dec
dec
pop
clc
add
add
add
sahf
jns
add
xor
clc
jl
and
sub
pop
pop
dec
iret
xchg
mov
clc
ljmp
mov
add
inc
add
jmp
sbb
mov
aaa
xchg
pusha
add
xor
add
aam
clc
mov
add
inc
clc
and
dec
cltd
aaa
xor
and
cwtl
push
shlb
add
xchg
jle
clc
fwait
sub
dec
insl
rcl
xor
add
pop
clc
sarl
imul
add
inc
clc
mov
xlat
jp
jo
add
clc
jl
clc
mov
clc
fnsave
cmc
cli
inc
clc
mov
bound
add
pop
add
add
xabort
cmp
jo
add
add
xchg
cmp
push
add
ljmp
add
add
fdivl
add
add
jbe
push
add
add
movsl
clc
leave
xchg
cmpsl
clc
ret
clc
cmp
lret
faddl
add
int3
gs
add
add
xor
add
add
adc
add
add
add
pop
aad
lahf
das
adc
add
sub
clc
pop
push
add
add
clc
mov
xabort
jl
insb
inc
clc
or
ljmp
push
fwait
adc
in
jbe
fs
sub
sub
mov
clc
pop
jl
gs
std
outsl
push
add
and
and
add
clc
adc
add
rcll
mov
add
sbb
dec
into
jnp
clc
sbb
xchg
mov
out
mov
clc
bound
add
push
js
xor
loopne
ret
clc
add
add
dec
xor
add
add
push
loop
imul
add
xchg
mov
add
in
jle
stos
fisubl
add
pop
cmp
add
xchg
stos
hlt
or
add
cmp
xlat
filds
add
negb
aas
and
adc
add
add
add
xchg
sbb
testl
add
sahf
stos
sbb
pop
ja
adc
add
int3
mov
add
mov
outsb
sbb
cmp
xlat
loope
scas
sbb
adc
add
add
clc
cltd
in
jmp
jns
clc
pusha
add
mov
and
add
inc
clc
jl
clc
jb
add
cmpsb
clc
fists
hlt
dec
jne
add
add
clc
xlat
jge
insl
pop
ficoms
xor
add
sub
add
lods
idivb
mov
clc
cmc
push
inc
add
es
testl
lock
dec
rol
clc
test
inc
add
mov
add
add
jnp
clc
pusha
add
inc
add
in
test
loope
xchg
mov
out
push
clc
push
add
adc
add
pop
idivl
clc
int
mov
add
xchg
and
add
sbb
mov
jns
aam
or
adc
add
divl
clc
fiadds
cmp
lahf
in
jg
fbstp
add
jle
cmp
clc
xor
add
clc
xchg
cmp
clc
dec
push
cltd
or
repz
imull
mov
dec
inc
clc
movsl
clc
pop
jmp
es
sbb
add
mov
clc
xabort
jns
dec
sbb
mov
jle
mov
add
cmpsb
clc
popa
add
cmp
sbb
pop
clc
jecxz
sub
ss
xchg
scas
repnz
add
pop
fcomi
mov
inc
clc
movsb
clc
fldcw
lret
add
mov
ds
fidivs
add
add
imul
cwtl
pop
cld
das
cmp
jo
add
inc
clc
push
hlt
or
add
icebp
mov
add
ds
add
xchg
test
repz
add
clc
out
sub
jecxz
xor
jmp
dec
inc
add
lock
add
add
cmp
add
out
rcrb
dec
mov
fucomi
jg
push
imul
lea
add
sahf
in
sar
xchg
jnp
clc
cli
and
add
cmp
add
add
cwtl
daa
clc
or
add
rcll
fldenv
sbb
stc
aas
sbb
int3
dec
gs
inc
add
lods
js
cmpsb
clc
imul
clc
push
mov
out
popa
add
sahf
lods
aad
xchg
es
adc
add
clc
pop
push
dec
push
mov
clc
bound
add
add
adc
ljmp
xor
add
es
pop
xchg
inc
clc
pop
clc
je
cmp
popf
in
gs
or
pop
jmp
clc
jno
add
xchg
bound
add
add
loopne
mov
cmp
add
filds
pop
clc
aas
or
ret
pop
clc
cmpsb
clc
stos
adc
add
mov
clc
xchg
gs
out
add
add
clc
jg
clc
cmp
sbb
inc
clc
int3
ljmp
add
clc
mov
clc
cmp
clc
mov
clc
mov
add
pop
clc
dec
cmc
mov
out
out
inc
clc
mov
mov
clc
inc
add
push
add
mov
add
dec
shrb
xchg
pop
xchg
cs
mov
and
pop
push
mov
cs
add
std
adc
add
cmpsl
clc
xchg
cltd
stc
and
add
add
jne
int3
cwtl
sub
lods
aam
aas
sub
clc
cmp
adc
clc
lret
and
add
add
fmul
jg
sar
out
xor
add
mov
lret
addr16
cmp
sbb
xor
add
insl
jno
add
pop
sar
clc
xchg
sar
or
loop
and
add
hlt
repz
adc
add
mov
mov
cmp
jno
add
clc
pushf
mov
add
sbb
cmp
clc
push
add
clc
loopne
dec
xor
jmp
insb
sarl
clc
inc
add
imul
add
add
cmp
and
add
push
add
mov
and
add
add
sti
xor
add
add
and
add
clc
pop
clc
cmpsb
clc
inc
clc
jecxz
xchg
mov
add
adc
ds
pop
clc
out
and
cltd
mov
clc
jo
add
mov
clc
out
adc
or
xchg
and
xchg
aad
clc
dec
addr16
loope
sub
xchg
pop
clc
dec
je
sub
push
bound
add
pop
jge
clc
imul
rcl
xbegin
in
inc
add
mov
add
sahf
clc
or
repnz
test
mov
std
arpl
add
clc
idivl
add
add
xlat
xchg
xbegin
push
clc
fistpll
xchg
cmp
daa
clc
push
add
add
add
push
xchg
jb
add
clc
sar
xor
add
mov
mov
mov
or
add
mov
out
jb
add
dec
dec
psadbw
cltd
mov
ss
decb
outsb
sbb
xchg
dec
dec
rol
clc
scas
pop
test
push
sti
or
fwait
cs
pop
incb
add
clc
mov
in
sub
imul
mov
adc
clc
jne
push
xor
add
push
clc
lret
dec
in
xabort
mov
addr16
cli
fisttpl
clc
xor
clc
lea
mov
inc
add
stc
je
add
jno
add
add
mov
jae
add
add
clc
int3
daa
clc
or
cld
clc
mov
aad
add
outsb
fildl
add
mov
add
sub
dec
xlat
pop
nop
or
sub
mov
xor
add
clc
int
pop
jecxz
push
bound
add
je
mov
pop
rclb
inc
add
pop
into
fadds
add
inc
add
or
clc
scas
mov
add
stos
jo
add
jns
lock
sub
arpl
add
or
imul
fsubs
clc
sbb
fst
roll
add
addr16
cwtl
test
mov
add
add
add
aaa
inc
clc
loop
sbb
sub
clc
jnp
sbb
cmp
add
xchg
pop
loopne
aad
stos
imul
jmp
imul
xchg
dec
out
insb
lea
pop
aam
and
adc
add
sbb
decb
jecxz
test
pop
xchg
jl
inc
clc
cmc
or
inc
clc
loopne
bound
add
repnz
clc
add
add
outsb
dec
sar
add
push
mov
cmp
xor
in
dec
movsb
clc
in
ja
ret
mov
addr16
cmp
mov
bound
add
repz
insb
lahf
sub
clc
repnz
mov
jg
add
jle
pop
clc
cmp
insl
nop
cmp
add
mov
addr16
imul
push
pop
pushf
xabort
clc
stos
outsb
mov
add
inc
clc
es
lods
clc
inc
add
mov
add
lret
and
add
arpl
add
add
enter
es
cmp
clc
dec
aaa
int3
mov
add
jmp
ficoms
add
mov
fiaddl
dec
punpcklbw
add
stos
movsb
clc
das
ficompl
clc
dec
and
add
clc
lcall
xlat
sbb
fwait
out
movd
xabort
sub
sbb
fdivs
ret
mov
repnz
sbb
add
xor
add
add
mov
mov
add
or
add
pop
cmp
scas
inc
clc
pushf
cwtl
mov
xchg
jl
clc
js
clc
adc
clc
jmp
fs
imul
cwtl
inc
clc
inc
clc
pop
scas
movsl
clc
scas
sub
mov
mov
sub
mov
inc
clc
ror
dec
bound
add
clc
shl
mull
clc
jmp
cs
add
dec
pop
int
jmp
adc
mov
inc
add
xor
add
add
add
add
sub
cmp
clc
loopne
mov
stc
clc
cmovbe
inc
clc
jl,pt
add
add
add
mov
jg
add
jp
pop
daa
clc
mov
sub
jl
jmp
jns
or
sbb
out
das
mov
clc
shll
xor
daa
clc
xchg
lock
add
add
mov
loope
sbb
cmp
sti
ret
clc
jp
add
data16
push
addr16
fnstenv
add
sbb
inc
add
bound
add
movsl
clc
dec
aas
aam
cmp
xchg
addr16
ss
rcr
and
or
stos
jp
jecxz
push
add
push
push
pop
cmp
clc
dec
xchg
fmull
lret
adc
add
and
add
clc
mov
pop
inc
add
rcr
repnz
clc
sub
add
ja
hlt
xchg
adc
add
fdivl
add
clc
push
add
mov
scas
lahf
mov
add
mov
mov
pop
sahf
xabort
jecxz
fidivrl
push
clc
test
lret
out
aam
clc
push
push
add
ret
clc
rsm
push
clc
pop
inc
add
pop
mov
clc
cmpsb
clc
pop
jbe
or
add
add
or
test
out
sbb
jae
add
cld
sbb
add
add
add
add
xor
add
clc
cwtl
xchg
jmp
dec
cmp
jne
das
mov
inc
add
sbb
clc
push
ret
daa
clc
push
mov
ret
clc
or
clc
mov
ljmp
icebp
lret
pop
xbegin
add
add
int
fldl
imul
add
loope
cld
cld
push
test
das
jb
add
mov
add
in
or
jmp
inc
add
pop
shrb
movsl
clc
arpl
add
xchg
inc
add
lret
xchg
lods
inc
add
lods
hlt
push
jb
add
clc
aaa
sti
push
jne
push
add
in
push
clc
inc
add
dec
xchg
mov
mov
add
add
cmp
adc
add
fucomi
xor
add
pop
push
xor
add
sbb
fldcw
mov
rorb
push
add
dec
cmp
cmp
sub
add
mov
sub
add
int3
dec
push
gs
fdivr
int
ret
clc
addr16
inc
add
pop
xchg
or
add
clc
lods
adc
add
add
sti
pop
xchg
mov
cld
add
add
clc
or
clc
adc
add
add
xchg
lret
xor
add
add
aaa
in
push
clc
jle
test
sar
into
adc
add
clc
pop
or
sbb
clc
pushf
mov
add
xor
ficompl
cs
pushf
mov
lea
clc
adc
add
add
loop
adc
add
lcall
jl
jb
add
sbb
mov
inc
add
mov
clc
int3
repz
mov
jg
jae
add
clc
sub
xchg
shlb
clc
ds
clc
inc
add
jle
xlat
xbegin
data16
daa
clc
xchg
clc
mov
add
cmp
fists
add
arpl
add
pushf
mov
sub
clc
cltd
call
mov
sti
in
xchg
cmpsb
clc
cwtl
add
add
add
je
ret
clc
mov
clc
mov
jecxz
push
adc
add
test
dec
cmp
clc
dec
add
add
push
add
cmp
mov
add
sar
add
loop
push
add
cmc
xbegin
cmp
add
cmp
sbb
popf
cmp
add
adc
add
clc
mov
add
or
clc
imul
aad
xor
add
adc
add
add
clc
jns
clc
icebp
xor
add
pop
mov
clc
test
inc
add
dec
lahf
cmp
jge
clc
inc
add
cmpsb
clc
dec
xabort
clc
js
mov
xor
add
jbe
add
adc
add
inc
clc
cmp
add
add
popf
cmp
insb
sbb
clc
xchg
sbb
call
jle
add
jl
add
lock
add
add
test
add
clc
sub
xchg
lcall
clc
adc
add
clc
cmpsl
clc
into
dec
imul
adc
cmp
clc
xor
add
clc
loopne
faddl
clc
or
test
dec
mov
add
stos
loop
aaa
mov
data16
push
and
clc
aaa
test
imull
adc
add
in
icebp
in
dec
mov
add
add
out
cmp
add
clc
lods
nop
cmp
into
mov
clc
mov
add
inc
add
jp
popa
add
xor
xbegin
mov
clc
pop
nop
jl
clc
call
add
mov
hlt
inc
clc
addr16
sub
mov
in
imul
clc
lcall
push
out
clc
mov
clc
push
rclb
outsb
dec
cmpsl
clc
insb
cmp
dec
mul
clc
push
push
jae
add
movsl
clc
or
sub
clc
add
add
add
add
std
cmp
push
sbb
xor
add
das
imul
cli
lea
clc
imul
icebp
mov
clc
mov
add
add
clc
test
add
imul
inc
add
adc
add
add
fstl
add
ss
into
jnp
xor
add
clc
imul
cmp
xor
add
add
cmpsl
clc
inc
add
or
clc
jae
add
add
gs
jns
data16
cmp
pop
clc
xor
hlt
add
jg
popa
add
mov
or
push
in
gs
sub
cmp
pop
sbb
clc
ljmp
addr16
inc
clc
rolb
out
fstps
sbb
add
xchg
aas
and
add
clc
inc
clc
cwtl
fadds
inc
clc
pop
cmc
jmp
lcall
movsb
clc
fsubs
add
mov
clc
xchg
sbb
clc
pop
fldt
sbb
clc
sub
cmpsb
clc
addr16
mov
push
add
mov
pop
push
clc
fisubl
fwait
xchg
mov
add
add
enter
fs
xor
add
add
clc
jmp
sbb
int
clc
mov
ja
out
jns
shlb
pop
popa
add
xor
add
clc
dec
add
add
clc
outsb
fyl2xp1
mov
clc
cli
pop
cmp
rorb
loope
lahf
ficoml
add
adc
add
add
rorl
sub
add
ja
add
add
inc
add
cmp
add
add
add
fnsave
clc
sbb
data16
cli
and
add
clc
cmp
sarb
push
add
cmp
inc
clc
push
add
add
add
clc
movsl
clc
mov
mov
push
jl
jne
add
iret
ljmp
lods
mov
mov
add
or
xchg
pop
xor
add
clc
sbb
push
add
stc
cmp
dec
stos
xor
je
loop
int3
cmp
xor
add
add
mov
clc
inc
clc
lock
clc
ja
and
add
add
add
add
dec
mov
mov
clc
stc
inc
clc
mov
add
push
adc
add
add
loope
daa
clc
repnz
out
xlat
adc
add
mov
add
inc
add
cmp
or
add
add
clc
add
add
clc
cmp
pop
xor
clc
dec
repz
add
clc
cmp
add
clc
push
daa
clc
imul
clc
sub
icebp
and
jns
jb
add
clc
lahf
jp
lcall
add
add
add
fsubs
jg
pusha
add
cmp
add
add
xchg
lods
sarl
mov
cmp
jmp
out
in
ljmp
cmpsb
clc
movsl
clc
insb
movsb
clc
imul
dec
dec
in
adc
add
cmp
clc
sar
lea
adc
add
add
imul
insb
jl
mov
xchg
fcmovnb
clc
fwait
pop
inc
add
scas
adc
add
arpl
add
cmp
fimull
sub
sbb
add
data16
popf
aam
clc
mov
push
add
jae
add
and
xor
add
xor
or
int3
int3
ljmp
sahf
jno
add
cli
add
add
add
add
xchg
out
xor
clc
pop
jbe
clc
stc
cs
test
jge
aam
add
dec
jmp
xor
add
add
leave
lea
and
add
into
mov
sub
ficomps
js
push
clc
rcrl
clc
dec
cmpsb
clc
sbb
mov
icebp
inc
add
cmp
sub
mov
add
sbb
in
pop
mov
fdivrp
ret
lods
fcomps
nop
inc
clc
mov
add
fwait
push
add
xchg
push
and
clc
ljmp
mov
add
push
add
add
add
add
xor
add
mov
mov
ljmp
adc
add
sti
jae
add
add
sbb
or
xor
clc
add
add
add
cmp
test
cli
pop
addr16
mov
data16
outsl
dec
jns
cli
sub
clc
mov
lret
test
es
jge
add
lahf
push
pop
jnp
cld
mov
clc
hlt
pushf
xchg
popf
stos
jg
std
mov
lcall
add
cmc
sbb
add
insl
inc
clc
mov
test
jp
and
add
add
loop
jg
clc
out
cmp
clc
and
add
or
icebp
cmp
mov
push
mov
xchg
test
add
mov
int
enter
repnz
clc
ds
imul
add
shr
adc
jns
outsl
enter
clc
or
add
clc
ret
clc
repz
inc
clc
mov
mov
data16
mov
ss
into
ds
in
dec
push
xor
add
in
pop
lret
adc
gs
jnp
ds
add
add
clc
and
daa
clc
int
clc
cltd
mov
and
add
add
add
add
xor
add
sub
aam
clc
dec
in
mov
clc
jmp
add
inc
add
div
push
add
lahf
mov
jecxz
es
add
add
arpl
add
lods
scas
mov
dec
mov
clc
je
aam
pop
shll
add
test
mov
xchg
sub
or
push
lea
clc
mov
out
mov
scas
lods
bound
add
pop
push
add
mov
jnp
xchg
addr16
aam
clc
mov
stos
scas
cmp
sbb
push
add
sub
int
push
jp
jb
add
insl
xor
add
add
xabort
ljmp
push
add
fcoml
add
inc
add
scas
loopne
imul
flds
cmp
sub
add
movsl
clc
out
jecxz
jnp
add
add
sbb
and
add
xchg
pop
clc
push
mov
xor
add
clc
inc
clc
addr16
xbegin
clc
sahf
and
dec
ds
fisubs
mov
scas
mov
mov
cli
fidivrl
in
lock
add
adc
add
sub
and
add
pop
cmpsb
clc
je
add
int3
mov
xabort
add
inc
add
mov
lcall
add
xchg
jo
add
hlt
cmp
sub
clc
mov
mov
sarb
insl
stc
stos
cld
pop
inc
clc
inc
clc
adc
sbb
add
push
pop
outsb
mov
fistpll
add
sahf
add
cmp
aaa
fs
lods
cltd
lret
imul
mov
push
add
xabort
clc
in
cmp
add
fdivl
add
xor
add
add
sub
clc
scas
cwtl
jmp
in
out
xchg
sar
jmp
je
clc
rclb
add
jae
add
add
out
pop
pop
repz
add
sbb
mov
cld
pop
pop
insb
sbb
clc
cmc
push
negl
sbb
rol
clc
push
pop
dec
nop
sar
add
add
insb
sbb
mov
add
jns
clc
sbb
clc
fs
in
clc
cmp
idivb
add
add
pop
clc
lcall
decb
mov
clc
mov
out
sbb
mov
pop
mov
cltd
cmpsb
clc
cmp
clc
repz
adc
add
into
sub
add
aad
sub
xor
add
clc
add
push
inc
add
mov
add
sbb
push
push
xor
add
or
add
clc
std
fsubrs
mov
lret
mov
clc
adc
add
jae
add
add
add
pop
clc
pusha
add
or
xchg
pop
std
sub
clc
add
add
clc
and
add
mov
vsubps
icebp
adc
add
add
data16
inc
clc
cmp
mov
clc
aas
in
cld
lret
add
clc
pop
call
pop
cmp
fs
fwait
fs
sbb
push
jge
sti
inc
add
pop
lcall
out
mov
out
movsbl
fs
sar
xchg
outsl
pop
sub
mov
js
add
jl
clc
xabort
add
lcall
sub
dec
push
add
movsl
clc
push
flds
test
mov
dec
dec
sub
add
mov
xchg
cmp
imul
mov
adc
add
cmp
call
clc
pop
xabort
xor
add
inc
clc
adc
clc
bound
add
add
mov
add
insb
mov
jp
xabort
or
push
sub
dec
cmp
add
clc
sar
clc
cmpsb
clc
pusha
add
mov
mov
clc
scas
or
cmc
inc
add
call
add
fmull
das
sub
add
add
or
mov
mov
clc
clc
pop
pop
jb
add
clc
push
push
add
push
outsb
test
adc
add
add
leave
mov
adc
add
dec
adc
add
push
test
cli
xchg
jae
add
jne
jge
clc
dec
push
add
push
fisttpl
pushf
decl
push
add
xchg
and
sbb
clc
pop
pusha
add
scas
cmp
xabort
jmp
mov
mov
or
adc
add
fbld
repz
clc
cmp
clc
fidivrs
mov
clc
pop
call
clc
loopne
mov
mov
add
or
inc
clc
dec
test
loop,pn
mov
xor
add
repz
aam
clc
adc
add
sar
test
and
add
fsubs
clc
insb
mov
cwtl
add
add
clc
aam
mov
clc
sar
fwait
sub
add
shlb
add
xchg
sub
cmp
das
add
xchg
xor
add
loop
jno
add
mov
cmp
mov
js
add
cmp
add
loope
pop
je
pop
shll
clc
or
add
inc
clc
imulb
adc
mov
add
add
clc
push
aam
add
mov
lods
cmp
push
adc
add
adc
add
push
cmp
jo
add
push
add
jnp
clc
je
nopl
add
cmp
frstor
insl
or
clc
aam
add
mov
push
sub
mov
sti
mov
pop
in
sub
ljmp
add
int
push
inc
clc
clc
and
add
add
aas
push
clc
cltd
in
sub
add
add
ss
lahf
test
repnz
clc
out
sbb
in
inc
clc
imul
push
jns
clc
mov
iret
push
clc
es
add
add
add
add
icebp
js
clc
push
add
loopne
mov
es
cmp
clc
movsl
clc
loopne
ljmp
add
stos
xor
add
fidivs
fcoml
dec
pusha
add
push
and
push
adc
add
and
add
clc
jecxz
js
loope
mov
add
adc
add
inc
clc
cld
aas
and
out
imul
or
add
clc
dec
push
pop
ret
ret
cmp
mov
clc
fstp
jbe
adc
add
add
test
pop
das
repnz
add
add
sahf
mov
push
add
imul
pop
fsubp
clc
xor
mulb
push
mov
sub
clc
pushf
int
adc
push
clc
sbb
clc
ss
clc
cmp
push
aad
inc
clc
cmp
push
clc
test
sbb
add
pop
dec
jb
add
add
mov
add
mov
adc
add
mov
clc
mov
push
mov
push
add
xchg
sbb
lcall
inc
clc
push
xor
add
clc
iret
inc
clc
aam
add
add
jp
clc
lods
cli
push
cs
out
cmc
cmpsb
clc
arpl
add
mov
mov
and
add
mov
clc
and
add
std
in
gs
jmp
repz
add
out
loop
cmp
jmp
sub
clc
jmp
pop
push
add
dec
or
loopne
jo
add
mov
add
pusha
add
cmpsl
clc
fs
loope
xor
add
jbe
shll
add
fdivs
aam
pop
stos
fsubl
mov
test
cltd
sub
push
gs
mov
add
inc
add
mov
iret
pop
clc
test
add
insb
ja
fldt
add
dec
sub
mov
jns
push
iret
xchg
fbstp
inc
add
aas
inc
clc
xor
add
mov
clc
test
and
add
sub
add
cmp
aad
cmc
or
addr16
mov
clc
dec
mov
bound
add
add
clc
jne
xabort
decl
add
and
add
add
adc
xor
add
fwait
mov
pop
stos
sar
add
dec
jl
sub
sbb
imul
xor
add
sbb
lcall
cmpsl
clc
add
add
push
cmp
clc
sbb
push
mov
clc
test
push
or
arpl
add
aaa
insl
loop
lods
xchg
fimull
clc
adc
add
aaa
sbb
dec
loope
mov
out
jp
clc
add
clc
mov
add
add
sbb
xor
add
pop
clc
test
imull
add
add
add
sub
dec
inc
clc
scas
addr16
jmp
xbegin
add
fcomip
sar
scas
push
out
gs
stos
mov
insb
fidivs
popf
mov
sub
xchg
mov
mov
sbb
jns
clc
adc
add
adc
inc
add
pushf
xchg
mov
clc
or
add
mov
clc
mov
add
je
add
pop
dec
fwait
into
jae
add
cmp
je
dec
fwait
dec
in
out
iret
jne
imul
clc
dec
pushl
xabort
pop
aad
aam
jp
clc
mov
sbb
clc
inc
clc
jecxz
mov
push
pushf
ss
mov
iret
pop
fcmovu
pop
and
add
xchg
fisttps
or
sub
shll
movsl
clc
mov
and
add
sub
add
ret
clc
jo
add
pop
popf
xchg
xchg
dec
jne
add
mov
cmp
clc
rcrl
push
pop
push
add
ret
clc
mov
movsl
clc
outsl
xor
add
clc
dec
push
out
inc
clc
mov
clc
add
add
xchg
and
add
add
int
clc
dec
push
scas
cmp
add
out
add
hlt
lret
xchg
pop
sahf
push
adc
add
and
xchg
cli
aaa
inc
add
clc
fwait
dec
jmp
hlt
jge
sub
add
dec
leave
popa
add
popa
add
shll
add
pop
xlat
mov
clc
loop
int3
cli
jb
add
add
clc
xchg
cli
adc
add
add
pusha
add
mov
loopne
add
add
jle
add
test
dec
cmp
inc
clc
or
jno
add
push
inc
clc
xor
clc
mov
cmpsl
clc
sub
jp
sbb
fwait
xor
add
add
add
jmp
cmp
cmp
xor
add
fisttps
stc
add
fucom
clc
lahf
mov
xabort
push
imul
clc
jge
mov
sahf
mov
or
clc
xchg
fucom
clc
into
lret
add
push
sbb
lret
gs
cmp
adc
clc
hlt
sub
mov
clc
stos
xor
mov
xor
add
add
mov
add
gs
mov
add
ud1
push
daa
clc
je
add
gs
lahf
push
jnp
mov
out
daa
clc
dec
lea
add
hlt
adc
or
sahf
xabort
xchg
popf
sbb
mov
fwait
mov
clc
sahf
dec
xchg
adc
add
pop
clc
cmp
clc
fbld
add
cmp
jne
add
cltd
add
add
lret
add
mov
dec
xor
add
add
clc
test
xchg
fucom
clc
xchg
adc
add
push
push
add
add
sar
lock
dec
jecxz
push
sbb
loope
imul
xchg
imul
lea
clc
movsl
clc
mov
inc
clc
push
imul
dec
or
cmp
clc
cmp
fs
je
sar
popf
aad
add
add
add
clc
sbb
jge
add
or
addr16
loope
je
clc
jecxz
adc
add
hlt
arpl
add
cli
add
add
push
add
lods
mov
add
add
sbb
add
bound
add
cwtl
or
clc
and
add
add
jle
clc
in
mov
sbb
mov
add
add
arpl
add
push
add
sub
out
cmp
dec
mov
add
clc
stos
icebp
call
jle
clc
xchg
hlt
arpl
add
in
lret
fldenv
lret
add
add
xor
clc
popl
jecxz
test
test
sbb
add
dec
push
addr16
cmp
xchg
hlt
clc
or
enter
add
clc
scas
movsl
clc
and
add
dec
in
dec
clc
add
add
lock
aas
mov
clc
pop
mov
stc
div
fwait
mov
clc
in
fs
and
add
cmp
clc
lret
xbegin
icebp
jecxz
mov
add
clc
jns
add
mov
adc
clc
fldl
mov
loope
clc
sub
add
sub
clc
inc
add
mov
or
add
pop
out
or
add
cltd
pop
clc
imul
add
loop
jge
imul
add
rorl
fcmovu
mov
adc
pop
mov
cmp
clc
test
lahf
and
add
clc
leave
mov
add
pusha
add
leave
mov
call
inc
clc
and
add
lahf
pop
fs
out
das
sar
clc
fcoml
cmp
push
add
mov
xchg
mov
in
jnp
and
add
jl
add
xor
add
clc
clc
mov
ficompl
and
cs
sub
xor
add
xchg
pop
scas
dec
iret
loopne
or
test
out
dec
and
add
add
stos
hlt
adc
pushf
or
add
push
add
test
inc
add
pop
clc
cmpsb
clc
push
sub
adc
aam
lret
mov
clc
jmp
jle
add
nop
push
jnp
or
clc
and
add
imull
data16
cwtl
hlt
mov
mov
notb
add
pusha
add
fdivl
div
ret
clc
cmp
stos
scas
stc
cwtl
pop
mov
push
clc
jne,pt
dec
test
lret
push
incl
clc
sub
mov
push
and
add
std
mov
clc
repz
add
clc
aam
xchg
cs
and
add
cmpsl
clc
jecxz
inc
add
mov
push
add
pop
cmp
add
push
clc
mov
clc
das
aam
add
pop
fs
outsb
jecxz
mov
in
dec
flds
add
inc
add
repz
add
clc
outsl
mov
add
jns
sub
add
cmp
pusha
add
or
sub
add
cmp
add
add
cli
mov
leave
scas
sbb
add
jno
add
loop
int
mov
add
mov
cmp
and
nop
xchg
push
inc
add
rorl
mov
mov
add
add
inc
clc
add
add
push
in
fiaddl
cli
dec
dec
lcall
jbe
clc
incl
cli
adc
add
clc
mov
add
sahf
lret
mov
add
add
fldl
xor
add
das
inc
clc
jo
add
add
fs
iret
mov
add
inc
clc
cld
cld
cmp
add
inc
clc
or
or
mov
add
sbb
mov
jl
sbb
iret
shll
call
push
clc
mov
add
cmp
sub
push
test
lods
mov
cmp
add
sub
add
cmp
add
cmp
push
add
addr16
into
mov
add
sub
movsl
clc
cmp
out
ret
clc
out
jg
mov
mov
push
loopne
jge
clc
push
add
push
jae
add
add
aas
sub
inc
add
mov
cmp
mov
push
clc
movsl
clc
decb
clc
pop
cmpsl
clc
dec
push
adc
clc
mov
aas
mov
clc
jge
add
adc
add
mov
clc
jecxz
xchg
sar
call
ja
adc
divl
arpl
add
es
lcall
mov
daa
clc
dec
and
add
pushf
push
mov
xor
add
jno
add
jle
popa
add
sbb
add
loopne
jl
inc
add
test
add
add
gs
xor
add
leave
cwtl
movsb
clc
xor
mov
xchg
outsb
cmc
add
add
sbb
clc
loop
fsubs
inc
clc
pop
cli
lahf
dec
fstpl
cmp
sbb
jmp
add
aam
clc
js
dec
xchg
out
add
add
clc
mov
enter
inc
add
sbb
cmp
mov
add
std
fwait
add
add
pusha
add
es
mov
lahf
dec
or
cmpsl
clc
jnp
xor
add
nop
adc
add
add
dec
repnz
clc
test
push
mov
cmpsl
clc
fchs
clc
dec
pop
dec
jl
add
sub
pop
add
mov
add
addr16
out
mov
xor
add
add
jmp
clc
into
insl
jg
clc
out
cmp
clc
dec
inc
clc
mov
clc
inc
add
mov
and
add
iret
jge
aam
daa
clc
cmp
clc
jb
add
add
add
gs
pop
mov
js
clc
inc
clc
mov
push
jno
add
push
je
xchg
mov
adc
add
add
cmp
in
test
enter
clc
ds
clc
cmpsb
clc
fidivrl
enter
std
xabort
fists
lcall
jns
sub
push
clc
popf
out
mov
cmp
cmp
data16
clc
loopne
dec
dec
adc
add
clc
aad
clc
rclb
jp
add
insb
sar
or
add
test
test
xlat
aaa
xor
enter
inc
clc
in
push
sub
or
add
jmp
out
ja
ss
mov
push
ja
in
cmp
add
clc
mov
or
sbb
inc
clc
mov
add
sub
fldl
outsl
pop
add
add
std
cmp
mov
or
clc
lea
outsb
push
cmp
jmp
mov
sub
add
test
add
add
add
cs
mov
clc
push
adc
clc
sub
mov
sub
loop
mov
add
xbegin
add
int
adc
add
stos
dec
dec
jno
add
clc
mov
sbb
arpl
add
or
or
clc
cmpsb
clc
dec
pop
sub
dec
shlb
add
fs
adc
in
in
daa
clc
jge
clc
cmp
add
or
add
or
loop
dec
lcall
js
es
jae
add
int
clc
es
adc
clc
std
test
jecxz
mov
out
xor
add
cmp
clc
aad
add
xchg
lret
add
inc
add
dec
sahf
aam
imul
daa
clc
mov
push
clc
mov
out
ja
fsts
enter
imul
jmp
add
mov
mov
clc
fs
in
dec
cmp
jmp
clc
movsl
clc
je
pop
xabort
pop
clc
repz
jno
add
scas
aaa
cld
cmp
clc
mov
int
sub
clc
lret
sub
shlb
add
xlat
pop
add
clc
xchg
sbb
clc
gs
dec
stc
imul
clc
sbb
in
mov
adc
sbb
add
mov
add
sbb
pop
jge
clc
clc
jb
add
add
clc
xor
add
clc
idivl
ret
clc
daa
clc
pusha
add
push
es
mov
clc
icebp
xbegin
clc
xchg
add
add
add
xchg
jno
add
clc
bound
add
cmp
fbstp
clc
lcall
dec
sti
cli
mov
pop
push
add
mov
clc
cli
mov
and
add
xchg
pop
pop
out
leave
outsb
push
add
or
scas
imul
mov
je
xor
and
add
cmp
add
into
and
add
mov
jno
add
in
add
xabort
loop
mov
arpl
add
mov
add
fdivs
add
fmull
clc
pop
adc
add
movsb
clc
gs
out
xchg
lret
sbb
clc
inc
clc
push
insb
pop
data16
ss
clc
xchg
gs
mov
ds
lret
clc
sbb
pop
mov
jns
jb
add
cld
out
je
push
add
jne
add
cmpsb
clc
pop
iret
out
mov
clc
nop
je
or
push
clc
pop
fdivs
add
clc
cmpsl
clc
gs
jb
add
je
add
paddw
clc
mov
add
xchg
icebp
push
fucom
clc
push
and
add
clc
adc
add
inc
clc
ret
add
add
add
or
test
push
inc
clc
testl
add
addr16
outsb
stc
cmp
pop
and
add
clc
xchg
mov
lock
add
push
jae
add
cltd
insl
ret
clc
scas
pop
loope
cmp
sub
nop
pusha
add
fstpl
mov
testl
pop
outsb
pop
test
ja
lahf
sar
adc
add
pop
xchg
inc
add
sar
xchg
cld
xor
add
and
add
test
in
loope
xchg
add
add
add
loop
inc
add
xchg
outsb
jae
add
cmp
fidivl
add
ret
mov
push
add
add
ljmp
lods
sarl
add
add
fmulp
dec
repz
inc
add
das
cmp
mov
mov
push
add
mov
or
add
inc
clc
repz
aam
clc
in
loopne
pop
icebp
adc
add
add
mov
clc
cmp
xchg
ficompl
clc
jp
std
inc
add
pop
repnz
stos
jmp
arpl
add
add
mov
xlat
aaa
push
clc
loopne
pop
xor
add
cmp
clc
out
inc
clc
jle
clc
sub
add
or
clc
sub
cwtl
call
xabort
add
lahf
movsb
clc
test
pop
stos
bound
add
es
fiaddl
scas
cmp
add
jle
ret
clc
lret
push
clc
repnz
fistps
je
inc
clc
pop
add
add
inc
add
fcmovnb
clc
push
aas
inc
clc
xchg
dec
icebp
push
add
idivb
or
jle
loop
adc
add
clc
mov
out
shl
clc
pushf
xchg
into
inc
add
sub
add
cmp
push
clc
mov
push
xchg
pinsrw
int
push
inc
add
cwtl
sahf
lods
ljmp
clc
out
aaa
cmp
jns
leave
add
addr16
xor
add
out
pop
cmc
push
add
das
sbb
jge
fstpl
xor
fs
adc
add
add
aad
clc
out
cwtl
je,pt
clc
lahf
iret
pop
push
add
in
inc
add
icebp
aas
jmp
jne
inc
clc
pop
or
add
js
addr16
shll
add
enter
mov
add
lahf
notl
add
xor
add
repnz
lahf
ret
mov
lea
add
jae
add
hlt
test
out
inc
add
mov
add
enter
jbe
dec
mov
sbb
sub
add
push
add
cmp
inc
add
adc
add
add
adc
add
push
push
in
or
bound
add
xchg
rcrl
add
ret
clc
mov
jno
add
add
clc
inc
clc
cwtl
mov
add
push
aaa
movsb
clc
inc
clc
int
add
cwtl
lock
jp
add
add
ljmp
jle
dec
lcall
jo
add
add
mov
loopne
es
jns
imul
xabort
cmp
add
add
clc
ljmp
clc
icebp
out
adc
add
add
clc
popf
push
add
push
add
je
ret
clc
mov
out
dec
inc
add
scas
nop
aam
inc
clc
lea
in
xor
add
add
ja
add
dec
or
clc
repz
loope
mov
clc
loopne
lahf
sar
lock
clc
mov
clc
mov
clc
xchg
xor
clc
sar
fstpl
xor
add
scas
mov
add
add
xor
add
push
dec
mov
sahf
and
add
push
mov
clc
push
add
rorl
mov
add
sar
clc
call
add
into
cmp
sub
xchg
dec
xabort
add
add
inc
clc
and
add
ficompl
ja
sub
clc
pop
clc
jb
add
inc
add
movsl
clc
test
add
sub
add
iret
mov
add
test
mov
mov
clc
inc
add
scas
cmp
sahf
mov
add
xabort
out
add
add
add
add
cmp
mov
xbegin
xbegin
pop
lods
and
add
sub
cmp
gs
or
sarb
and
add
outsl
test
clc
sub
add
das
sbb
jecxz
inc
clc
aad
mov
push
clc
mov
clc
pop
test
add
sbb
in
mov
add
mov
add
sub
push
add
cmp
push
adc
add
add
add
add
jl
cmp
mov
add
popf
sbb
clc
mov
push
mov
xchg
stos
jge
clc
mov
jne
imul
clc
pop
dec
cmp
jg
sahf
inc
add
inc
clc
xor
add
xchg
std
fstpt
popa
add
lock
jbe
mov
imul
mov
xchg
lods
pop
xor
add
clc
jo
add
pusha
add
mov
test
loop
adc
ljmp
mov
lock
mov
clc
test
mov
clc
jg
clc
in
sub
xor
add
mov
cmpsb
clc
dec
fld
clc
push
add
movsb
clc
jecxz
jecxz
scas
data16
adc
add
clc
outsb
lcall
push
pop
ljmp
test
clc
jp
mov
add
clc
stos
test
push
add
dec
dec
add
clc
pop
jl
arpl
add
es
out
and
add
add
add
lcall
clc
cmp
clc
mov
mov
jo
add
add
in
dec
lret
addr16
icebp
cmp
push
clc
shll
add
cmp
lock
add
ds
or
popl
inc
clc
push
add
push
add
cmp
mov
add
stc
int3
add
add
add
lcall
xchg
data16
cli
outsb
cmpsl
clc
mov
push
sbb
inc
add
pusha
add
enter
loopne
ljmp
push
add
push
mov
fldcw
jp
mov
clc
mov
or
add
push
push
add
adc
add
mov
mov
clc
clc
mov
clc
daa
clc
sub
dec
in
inc
add
mov
clc
pushf
lods
test
jle
push
dec
cmp
cwtl
jno
add
add
add
mov
in
jmp
add
stos
push
imul
add
ja
notb
bound
add
push
mov
aad
mov
sub
mov
sbb
jecxz
in
push
aas
mov
push
add
arpl
add
mov
clc
ljmp
lock
add
or
or
inc
add
rcll
fstpl
dec
add
clc
push
sti
mov
adc
clc
aam
int
clc
jl
in
in
mov
clc
adc
add
dec
xchg
add
xchg
outsb
inc
add
data16
push
add
lret
fwait
mov
add
add
aam
dec
shrb
add
inc
add
repnz
add
es
cmp
jnp
cltd
cmp
clc
bound
add
add
xor
cwtl
and
add
add
clc
pop
xchg
push
add
or
arpl
add
jle
push
mov
clc
movsl
clc
sahf
xor
add
and
add
add
add
add
adc
add
sti
nop
mov
mov
push
mov
aas
lods
fcom
mov
pop
jl
clc
push
add
insl
fsincos
mov
mull
clc
fildll
add
cmp
push
jnp
clc
lar
add
push
mov
cmp
add
clc
cmc
and
add
xabort
ljmp
adc
clc
sbb
xbegin
cmp
cmp
clc
dec
mov
add
add
out
pop
pop
push
add
fwait
mov
and
add
jns
icebp
bound
add
mov
fidivrl
adc
imull
gs
in
lret
cmp
cmp
add
xor
pop
lods
inc
add
cmp
xbegin
cli
sub
test
inc
clc
xabort
pop
inc
clc
mov
add
lret
jb
add
add
insl
out
imul
cltd
lahf
sub
ret
clc
incl
add
jmp
fdivr
mov
push
add
inc
clc
sar
clc
add
test
adc
mov
add
inc
add
lret
cmp
jo
add
cli
push
pop
bound
add
clc
jo
add
clc
test
cs
sbb
pusha
add
xor
mov
clc
cmpsb
clc
stos
insl
popf
sti
mov
cmp
clc
mov
aam
clc
xchg
js
clc
jno
add
adc
sar
add
sti
outsl
int3
cld
and
scas
xchg
jmp
dec
xchg
pop
mov
jmp
clc
adc
enter
clc
in
cmp
icebp
shr
out
scas
rclb
add
add
addr16
addr16
ja
clc
test
cmp
test
xchg
scas
jmp
mov
xchg
and
xchg
cmp
icebp
sar
add
push
clc
in
dec
cmp
clc
mov
outsb
addr16
inc
clc
clc
adc
add
imul
mov
or
sbb
ss
xor
add
jbe
xchg
lcall
add
and
add
cltd
xchg
jecxz
adc
add
icebp
push
add
mov
scas
icebp
jl
push
add
cmp
outsl
cmp
clc
or
ja
cmc
ret
clc
push
add
jp
xchg
out
out
push
data16
sbb
clc
mov
pop
daa
clc
dec
cwtl
shrb
loop
es
data16
repnz
ja
clc
mov
clc
aas
ss
pop
mov
jb
add
clc
inc
add
inc
add
add
add
and
add
movsb
clc
cld
or
mov
or
push
stos
dec
loope
lahf
jne
mov
add
mov
gs
xor
int
jne
jno
add
inc
clc
dec
add
add
add
clc
fcmovbe
sub
clc
in
aas
cmp
jmp
clc
je
clc
insl
mov
cmp
hlt
gs
mov
ret
clc
iret
loopne
ljmp
test
div
insb
sbb
jae
add
and
add
hlt
repnz
clc
sub
add
cltd
mov
push
xchg
mov
jl
dec
xchg
xor
clc
mov
add
aad
insb
cmp
mov
sub
cmp
clc
jns
sti
pop
clc
jecxz
aad
xor
add
fstpt
clc
clc
cmp
movsb
clc
adc
add
xchg
mov
mov
push
divb
sub
add
aas
ljmp
xchg
pop
hlt
loopne
imul
js
clc
push
clc
mov
clc
lods
add
add
add
add
mov
loop
xor
add
add
mov
pop
ss
add
push
add
es
mov
cld
xlat
dec
inc
clc
lea
clc
ficoms
decl
and
out
shlb
jo
add
cmp
inc
clc
addr16
cltd
jmp
xor
add
add
lods
inc
clc
aas
cmp
add
add
mov
xor
xor
mov
add
pop
jge
clc
shrb
test
clc
clc
sbb
lahf
mov
clc
pop
push
add
rclb
push
fdivl
add
xlat
sbb
clc
ffree
clc
cmp
stc
xchg
jne
fadds
add
mov
add
mov
adc
add
or
or
add
clc
and
lcall
sub
repz
pop
pop
sti
mov
xchg
adc
add
add
stc
fisubs
dec
dec
pop
mov
pop
ss
inc
add
sbb
add
cld
inc
add
xbegin
or
inc
clc
in
ljmp
clc
mov
pop
clc
xor
adc
jo
add
jmp
pop
mov
ds
cmp
cmp
daa
clc
cli
xchg
jecxz
cmp
add
mov
add
outsl
addr16
ficomps
in
cli
daa
clc
inc
add
sbb
mov
or
inc
add
clc
mov
clc
cmp
jno
add
loop
dec
jne
clc
cmp
inc
clc
bswap
mov
clc
loopne
and
rcrb
xchg
loopne
sub
lea
mov
shl
in
out
daa
clc
lcall
mov
add
adc
sbb
inc
add
inc
add
cmpsb
clc
cmp
addr16
or
sub
add
int3
sar
push
add
repnz
add
loope
lret
add
cltd
mov
hlt
adc
test
clc
push
add
bound
add
add
add
clc
lods
nop
sar
add
mov
add
inc
add
lods
sti
rcl
pop
hlt
lods
jbe
cmp
clc
daa
clc
fisttpll
scas
lock
add
push
add
add
add
pop
dec
push
das
lods
mov
ja
clc
scas
leave
sbb
clc
scas
or
clc
mov
std
je
clc
adc
add
int
clc
imul
mov
data16
repz
xchg
add
add
or
sahf
sahf
stc
cmp
cmpsl
clc
adc
add
in
ror
sar
or
or
std
inc
clc
fldcw
inc
add
in
mov
add
xchg
insb
insb
loopne
js
sub
add
insb
or
add
repz
sar
scas
or
add
clc
pop
cmp
loope
jbe
movsb
clc
stos
pop
dec
dec
xbegin
inc
add
into
mov
je
dec
je,pn
add
xor
imul
add
or
scas
std
stc
jne
mov
lret
imul
add
dec
hlt
test
jg
jmp
test
xchg
stos
mov
clc
dec
ljmp
pop
jp
rorb
clc
xchg
cmovge
clc
and
add
mov
insl
push
add
or
arpl
add
sub
pop
push
jb
add
add
push
in
out
or
add
jg
xor
add
lcall
jl
test
add
vminps
outsb
xchg
mov
add
add
mov
add
inc
add
stos
pop
sbb
clc
xchg
test
sub
pop
test
and
int
jl
jmp
push
clc
jg
clc
pushf
cli
cmp
clc
test
dec
jns
clc
aam
pop
mov
clc
inc
clc
stos
fadds
add
int3
aad
cld
iret
add
aas
mov
add
push
ret
clc
jg
add
pop
clc
stc
arpl
add
clc
sub
push
add
iret
xor
add
jo
add
sub
clc
pop
clc
mov
xchg
outsb
and
add
std
xor
add
add
cmp
clc
lcall
mov
sub
outsb
cli
xor
and
add
add
push
add
mov
mov
clc
jb
add
clc
sar
add
outsb
pop
stos
add
add
pop
arpl
add
add
add
push
ret
jg
loopne
outsb
clc
cmc
jae
add
add
addr16
and
add
sub
aam
xchg
inc
clc
and
push
lret
xor
add
fwait
dec
mov
ja,pn
in
popf
jecxz
lret
add
add
popf
test
aam
shrl
cmp
mov
ret
add
mov
in
jmp
add
clc
mov
leave
popf
mov
clc
pop
push
jne
inc
add
std
xchg
or
xchg
push
pop
pop
inc
add
jp
pop
aas
mov
js
iret
fistpll
clc
in
aad
clc
xchg
pop
bound
add
add
jo
add
jecxz
insb
cs
mov
add
cs
clc
pusha
add
outsb
or
pop
cld
adc
dec
lods
loopne
adc
add
add
testl
shrl
nop
aas
popa
add
and
popf
ss
jb
add
add
add
or
clc
and
add
lea
add
pop
movsb
clc
xchg
in
faddl
clc
push
popa
add
nop
cmc
jp
clc
testl
bound
add
ljmp
clc
lret
cli
fdivl
add
sbb
fistpll
fcoms
pop
push
movsb
clc
jge
shll
clc
xor
add
cmp
mov
xchg
into
sbb
in
clc
mov
in
cmp
fwait
cld
loop
test
clc
jno
add
add
clc
es
jnp
push
xchg
pop
popa
add
or
clc
sar
push
aam
addr16
fistl
add
push
mov
xor
add
clc
pop
clc
lahf
push
clc
or
cmpsb
clc
inc
clc
push
push
je
clc
add
add
cmp
in
mov
add
push
add
mov
cmp
insl
aad
iret
mov
add
push
add
data16
loope
aas
out
imul
add
shll
add
insb
sysenter
fs
dec
addr16
jae
add
mov
pop
stos
imul
scas
and
add
add
sub
gs
lods
je
mov
clc
leave
mov
clc
js
mov
std
mov
xor
call
add
cmp
jbe
mov
fimull
sbb
inc
add
clc
pop
lea
add
loope
jmp
cmpsl
clc
mov
clc
push
add
add
add
into
mov
add
xabort
mov
clc
outsb
jmp
add
mov
mov
add
lods
lcall
and
adc
add
ret
stc
call
loope
test
cmp
sti
imul
js
and
add
add
add
mov
clc
dec
jnp
add
mov
add
fiaddl
clc
mov
add
mulb
clc
lret
inc
clc
fwait
xor
add
push
mov
add
add
fdivl
add
sub
cmc
xabort
adc
clc
jnp
jl
mov
loopne
cmpsl
clc
dec
jo
add
or
clc
mov
mov
add
mov
mov
add
aas
and
add
xchg
cmc
psubsb
nop
jge
sar
outsl
mov
leave
clc
pusha
add
cs
test
dec
insb
cmp
mov
xchg
mov
pop
inc
add
out
jo
add
xor
cltd
sar
mov
jns
pusha
add
inc
add
leave
push
mov
lret
add
sahf
pushf
mov
sub
fisubs
sbb
sub
dec
packsswb
add
clc
js
sub
push
add
add
das
testb
clc
sbb
clc
shrb
scas
dec
or
add
repnz
or
cmp
clc
sahf
pop
cmp
clc
in
leave
jnp
push
mov
add
add
fcmovnb
clc
int
and
clc
xbegin
add
pop
scas
mov
cmp
fisttpll
aam
sti
mov
clc
xchg
fnstenv
add
xlat
cmpsl
clc
cmp
jbe
mov
pusha
add
in
pop
divl
xor
add
cltd
jp
push
test
shll
in
in
inc
clc
test
iret
jae
add
dec
mov
dec
das
and
add
testb
fisttpll
mov
cmp
rolb
or
jle
testl
pop
icebp
push
jecxz
testb
gs
iret
popa
add
out
loop
idivl
dec
xchg
cld
sub
xchg
dec
mov
cmp
add
pop
sub
hlt
popa
add
jo
add
add
jle
faddl
add
clc
mov
xbegin
gs
loope
push
mov
clc
pop
mov
je,pn
and
add
xor
nop
and
add
bound
add
add
mulb
stos
add
add
imul
fcmovne
or
add
jb
add
add
push
add
fs
mov
cltd
iret
mov
inc
clc
mov
insb
sub
push
cwtl
arpl
add
clc
fnstenv
clc
dec
sbb
fdivrs
fistps
out
mov
clc
mov
sbb
fildll
pop
push
inc
clc
mov
add
test
negb
es
lret
cld
push
jg
push
add
add
jge
mov
add
in
scas
mov
leave
icebp
out
int
mov
add
ja
xchg
popl
cmp
add
add
clc
cmp
add
sub
cmc
mov
movsl
clc
jg
clc
scas
icebp
mov
adc
add
dec
mov
sbb
clc
sahf
sbb
add
add
shrl
jo
add
divb
add
stos
shr
mov
pop
test
add
dec
movsb
clc
insl
jno
add
pop
or
and
jo
add
pop
pop
outsl
dec
jns
test
dec
sub
shlb
adc
add
add
push
sar
add
aas
das
int
fxch
inc
add
sub
clc
jo
add
add
clc
loope
imul
outsb
sub
fmul
scas
lcall
add
or
loope
test
test
cmp
add
add
clc
xor
add
cltd
scas
sbb
and
add
fnstsw
cmp
test
push
add
iret
pop
aad
mov
arpl
add
or
xchg
pop
mov
or
sub
mov
divl
pop
bound
add
push
movsb
clc
and
add
inc
add
out
push
add
pop
data16
test
test
fisubrl
xor
add
sub
dec
or
dec
dec
nop
push
insl
cmpsl
clc
cmc
xchg
inc
clc
aaa
sub
out
scas
mov
adc
and
and
add
clc
xor
xor
add
rclb
add
add
and
add
aad
mov
pop
xor
add
clc
into
mov
mov
clc
pusha
add
and
add
cwtl
js
rclb
add
jb
add
clc
cmp
ret
add
icebp
test
leave
popa
add
fcmovbe
cmpsb
clc
in
movsl
clc
into
testb
je
add
popf
enter
add
or
and
add
add
inc
add
enter
mov
mov
clc
mov
add
idivb
pop
jecxz
adc
add
sub
clc
jge
clc
xchg
mov
ja
xchg
adc
inc
clc
stos
jp
add
incl
cmp
insl
cwtl
mov
clc
es
daa
clc
bound
add
xbegin
add
add
add
clc
push
xor
add
pop
push
add
fcomip
xor
loopne
aaa
push
xor
add
jge
je
add
loop
cmp
push
add
cld
mov
cmp
xbegin
sahf
fst
push
lods
xbegin
cltd
jns
add
stos
add
add
cmp
add
push
add
hlt
xchg
scas
sub
pushf
xor
add
clc
jl
mov
clc
mov
add
pushf
jns
inc
clc
xchg
or
clc
inc
clc
sub
clc
loopne
cmp
push
add
push
xor
out
jecxz
jg
mov
add
or
cld
in
cs
cwtl
ja
add
xor
add
clc
xchg
mov
cld
sub
fisttps
clc
mov
fucomp
fs
mov
fidivl
lahf
jl
mov
jmp
lret
xlat
pushf
lods
sub
add
dec
pop
cmp
mov
pop
in
mov
add
add
add
add
cmp
adc
add
clc
sbb
add
xchg
loop
pushf
icebp
add
fdecstp
or
clc
cmp
push
aad
movsl
clc
popf
push
mov
add
clc
scas
cmpsl
clc
js
xchg
adc
clc
fs
int3
fbld
clc
out
cld
pop
std
movsb
clc
and
add
push
mov
mov
nop
bound
add
mov
sub
dec
mov
sub
std
imul
js
xor
add
leave
in
insb
mov
jo
add
push
jns
ret
clc
cli
sbb
test
jb
add
inc
add
test
add
clc
repnz
clc
adc
add
repz
icebp
loopne
cli
addr16
xbegin
popa
add
dec
into
dec
jno
add
aas
push
pop
pop
inc
clc
xchg
mov
fldl
and
dec
je
dec
loopne
mov
sbb
loope
add
sahf
xchg
fmuls
addr16
pop
add
add
clc
pop
mov
dec
push
add
xchg
jnp
clc
mov
add
pop
ret
clc
mov
add
daa
clc
adc
add
cmp
add
test
aaa
dec
or
add
add
lods
xor
add
pop
scas
dec
xor
call
shr
mov
clc
sub
inc
clc
xchg
sub
push
adc
sti
or
mov
add
jge
clc
sar
aaa
div
add
add
add
test
js
sbb
add
or
imul
in
or
xlat
mov
mov
clc
sub
add
mov
add
movsl
clc
pop
out
rorl
ljmp
into
xor
add
sbb
dec
data16
pop
lcall
or
idivb
fildl
add
xchg
pop
icebp
rorl
add
cmp
sbb
daa
clc
leave
xchg
cmpsb
clc
xchg
push
pop
mov
mov
add
testl
add
mov
and
add
int
clc
mov
push
pop
inc
add
sti
add
fs
nop
mov
clc
jl
add
fidivl
inc
clc
sbb
clc
rcrb
ja
mov
pop
dec
sar
lahf
push
add
divb
add
add
mov
xlat
or
lret
stc
push
mov
adc
sbb
pop
clc
icebp
imul
sbb
mov
clc
jae
add
add
imulb
add
cmp
cmc
fwait
daa
clc
adc
add
clc
popa
add
push
add
aad
adc
add
clc
mov
add
add
add
in
je
push
clc
add
add
add
add
pusha
add
mov
lods
cmp
add
mov
add
and
add
push
clc
push
jl
cltd
jb
add
cmpsb
clc
push
add
xor
add
clc
adc
add
add
inc
add
icebp
jnp
add
into
xor
add
outsb
out
dec
push
aaa
stos
push
sbb
bound
add
add
mov
dec
imul
clc
scas
lock
push
sub
add
inc
clc
hlt
outsb
pop
sub
clc
ds
dec
sbb
sar
bound
add
adc
add
mov
scas
leave
and
add
movsb
clc
sub
add
inc
clc
mov
xlat
mov
add
jnp
or
mov
add
clc
sbb
clc
mov
clc
clc
push
clc
jmp
add
lret
imul
pushf
sar
add
fdivs
add
pop
clc
or
clc
and
pop
rorb
cmc
test
imul
inc
add
pop
mov
and
add
clc
mov
clc
push
add
gs
rolb
or
push
add
add
add
adc
add
fcoms
add
sub
clc
into
push
add
repz
add
mov
clc
jecxz
test
xchg
sbb
adc
add
ljmp
clc
sbb
xchg
jge
pop
ficomps
xabort
add
push
pop
movsb
clc
add
add
add
fldenv
adc
add
jge
add
mov
mov
jnp
enter
jmp
adc
add
cs
clc
bound
add
scas
push
xchg
adc
add
clc
loope
movsl
clc
aam
mov
out
cmp
pop
push
clc
loop
pop
fldt
jno
add
xor
pusha
add
mov
js
add
rcrl
outsb
sti
mov
clc
fs
cli
fidivs
mov
mov
cmp
popf
or
add
add
mov
add
dec
add
add
loopne
add
add
mov
dec
mov
push
add
cmp
mov
cmp
jecxz
mov
in
mov
out
sbb
push
clc
adc
or
cmp
leave
mov
sbb
mov
add
jl
fs
pushf
add
add
fcoml
ror
icebp
pop
pop
clc
sarl
sbb
add
inc
add
adc
add
add
test
mov
js
clc
mov
lock
cwtl
inc
add
sti
and
add
add
and
and
add
clc
cmp
cmp
movsl
clc
pop
pop
xchg
std
sub
clc
fstpl
add
in
mov
clc
cmc
hlt
mov
inc
clc
pushf
gs
cmp
add
push
add
pop
xabort
and
jbe
clc
imul
add
repnz
mov
adc
add
clc
leave
lret
popa
add
cli
scas
adc
add
cmp
xchg
icebp
fcom
push
inc
add
and
jno
add
clc
xor
sar
cmp
clc
lods
dec
mov
add
cmp
lret
add
jnp,pt
jle
clc
mov
or
mov
clc
jmp
clc
adc
add
add
mov
lock
add
cld
stos
mov
clc
pushf
cmp
inc
add
repnz
cmp
or
or
add
lret
clc
pop
push
xor
repz
add
add
or
sbb
nop
aad
inc
add
inc
add
mov
bnd
clc
loop
scas
adc
add
add
imul
or
push
xbegin
add
incb
std
shrl
push
add
test
test
aas
mov
cmp
and
add
mov
or
sbb
decb
sbb
fimull
clc
ret
clc
pusha
add
mov
add
jno
add
clc
pop
jecxz
push
dec
stos
cmp
sbb
clc
adc
add
dec
cmp
sar
clc
stos
xabort
cmp
cli
das
cltd
test
mov
clc
icebp
sbb
mov
sub
mov
decb
fmulp
dec
adc
add
mov
add
sbb
mov
push
jb
add
add
or
mov
add
mov
sahf
jo
add
movsb
clc
xchg
push
add
jb
add
add
xlat
or
sbb
xchg
mov
add
icebp
push
das
pop
mov
xchg
mov
push
dec
mov
xchg
add
jne
in
sbb
inc
clc
inc
clc
data16
mov
aaa
imul
mov
sbb
mov
stos
mov
push
add
lahf
xabort
cmp
pop
popf
std
mov
imul
rcrb
xor
add
cld
fstps
test
test
pop
cld
inc
add
pushf
mov
add
add
add
add
xor
add
in
into
dec
clc
cld
inc
clc
ret
clc
pop
adc
clc
nop
jns
add
xchg
aas
scas
clc
and
add
je
xor
add
clc
setnp
mov
lock
add
ret
clc
dec
das
insl
dec
fimull
or
js
stos
xlat
mov
add
push
aam
xchg
cmp
push
stos
sar
pop
rorl
add
mov
imul
data16
cld
sbb
cmp
xor
clc
ss
hlt
lock
mov
jno
add
rcr
lcall
dec
lods
in
mov
clc
pop
or
out
xor
add
jbe
clc
lcall
pop
je
xbegin
push
clc
mov
and
clc
push
nop
arpl
add
pop
inc
clc
out
out
shl
clc
pop
nop
mov
jns
clc
xchg
mov
cmp
clc
dec
mov
fidivrl
mov
dec
stos
inc
add
in
sar
inc
add
call
cli
xchg
ss
fsubs
clc
sbb
xchg
lcall
cmp
clc
icebp
and
add
add
add
lock
push
sbb
jg
jne
add
lret
clc
popa
add
jae
add
clc
fstl
insl
and
sbb
add
es
sbb
clc
inc
clc
mov
insb
std
scas
adc
add
cmp
repnz
add
mov
pop
mov
shll
add
out
lret
test
add
xlat
mov
in
mov
lret
add
pop
jl
add
cmp
mov
movsl
clc
fwait
cmp
add
inc
clc
cs
notb
repz
fisttps
clc
push
cmc
in
cmp
mov
scas
out
xchg
add
add
pop
push
rorl
pop
mov
cmp
or
clc
jae
add
in
js
es
sub
add
add
clc
ret
clc
jge
inc
add
jmp
push
clc
test
sbb
add
clc
cltd
mov
add
xchg
sub
mov
mov
fwait
and
and
add
movsb
clc
dec
inc
clc
outsl
dec
ss
clc
and
add
xor
add
add
lock
or
mov
cmp
sub
mov
clc
and
add
xchg
cmc
sar
sar
add
js
adc
add
fcoms
cs
fidivrl
add
clc
jl
xchg
cmc
push
add
or
into
fisubrl
clc
or
add
add
xor
add
and
add
mov
add
or
push
add
cmp
in
and
stos
push
jmp
add
push
data16
mov
add
outsb
push
clc
mov
inc
add
inc
add
jl
clc
scas
leave
xor
add
clc
mov
add
clc
sub
add
or
add
dec
fmull
jmp
adc
add
cmp
xabort
mov
push
mov
movsb
clc
or
add
clc
pop
pop
mov
sub
lahf
cmovs
in
or
push
add
xor
add
dec
add
add
clc
popa
add
jne
sub
iret
push
lret
cld
outsb
stos
sub
pop
pop
jae
add
add
mov
ret
and
add
add
jne
add
or
add
ret
inc
add
sub
sbb
xchg
inc
add
data16
mov
cmpsb
clc
push
lret
lods
jge
clc
dec
inc
clc
enter
fisttpl
das
test
sbb
xchg
dec
or
cltd
inc
clc
inc
clc
mov
add
add
mov
add
xchg
xor
add
cwtl
xlat
cmp
clc
dec
ret
clc
push
add
cmc
jp
clc
xor
add
xor
add
pop
cwtl
sahf
out
adc
push
add
sbb
into
popf
sub
das
stos
fsubrs
clc
daa
clc
hlt
sub
cli
mov
xchg
cmp
add
mov
adc
xchg
dec
xor
add
nop
call
ljmp
pusha
add
push
add
mov
push
adc
add
in
mov
lcall
jmp
test
sub
repz
xor
mov
xchg
dec
iret
lock
clc
out
cmpsb
clc
lret
fsubp
clc
std
outsb
lods
in
int3
push
add
fmuls
mov
movsb
clc
js
add
pop
ret
add
jae
add
add
outsb
aas
add
clc
enter
rorb
clc
and
cmp
clc
inc
clc
push
add
add
sub
clc
adc
add
cltd
jne
push
add
pusha
add
cld
add
add
dec
sbb
add
in
cmp
add
cmp
clc
lret
sub
and
add
add
mov
add
sub
clc
fwait
sub
movsb
clc
or
inc
add
clc
gs
cmp
imul
int
mov
inc
clc
cs
mov
clc
push
xchg
pop
and
add
add
add
dec
dec
cld
xchg
cs
loop
movsl
clc
xor
add
add
add
add
add
clc
fldcw
lods
in
cmp
icebp
mov
pop
lods
popa
add
movsb
clc
sbb
add
add
je
xchg
add
add
add
adc
add
lock
shr
lret
add
stos
push
add
mov
add
clc
data16
mov
add
stos
add
out
cmp
hlt
cmp
mov
add
filds
add
and
add
adc
leave
dec
or
cli
push
out
push
jecxz
fs
dec
jne
lea
add
mov
int3
inc
add
lods
cmp
cmp
negb
clc
in
es
jo
add
add
push
imul
xor
add
xor
mov
add
push
repz
cmpsl
clc
cmpsl
clc
sub
add
add
cmpsl
clc
test
or
adc
add
adc
out
mov
add
leave
imul
xchg
cmp
outsl
cmp
jns
fwait
and
leave
adc
add
out
or
add
loop
cmp
cmp
clc
mov
ret
iret
mov
add
es
lods
aad
add
sbb
jmp
add
cs
add
sbb
add
add
add
push
dec
mov
pop
outsb
hlt
mov
sar
inc
clc
sbb
add
mov
jne
clc
call
ljmp
add
add
add
rcl
mov
or
adc
add
add
clc
push
pop
xchg
add
add
gs
int3
stc
mov
clc
js
add
mov
pop
in
mov
cwtl
mov
fs
adc
fisttpll
dec
scas
pop
ficoml
add
add
sarb
in
fdivs
clc
mov
aaa
xor
add
in
divl
call
test
lcall
clc
sbb
add
add
arpl
add
clc
mov
inc
add
pop
xchg
repnz
clc
push
mov
clc
add
add
clc
and
aam
clc
inc
add
bound
add
sar
adc
add
add
imul
iret
lret
clc
and
cmp
mov
jne
clc
mov
jl
test
clc
frstor
repz
dec
cmp
add
clc
push
add
inc
add
cmp
xabort
out
loopne
mov
add
xchg
push
into
mov
dec
sub
clc
pop
mov
add
add
pop
push
add
jmp
add
add
add
or
jl
pop
ds
jae
add
add
and
inc
add
roll
outsb
jns
clc
in
notl
add
test
lock
clc
pop
mov
stc
sub
je
popa
add
pop
data16
data16
jo
add
inc
clc
imul
xor
add
mov
clc
fmull
movsb
clc
push
imul
ss
push
clc
psrlw
clc
outsb
arpl
add
clc
add
inc
clc
data16
inc
add
dec
out
stos
popa
add
xchg
sbb
add
clc
sbb
xchg
enter
inc
add
ficomps
mov
and
add
bound
add
jae
add
popa
add
adc
add
jle
pop
xchg
and
add
inc
add
mov
clc
into
mov
imul
cmp
popa
add
es
jns
lahf
xor
add
pop
cmp
sti
fsubrl
clc
inc
clc
mov
clc
mov
bound
add
mov
inc
add
fyl2xp1
xlat
ja
dec
push
clc
cld
fcompl
clc
mov
clc
jl
clc
mov
add
cmp
lods
jecxz
sahf
and
add
cmp
add
clc
push
idivl
xchg
cmpsb
clc
scas
bound
add
add
pop
enter
pop
pop
sub
sub
std
data16
inc
add
or
clc
icebp
xlat
mov
add
dec
inc
add
stc
and
add
repz
clc
inc
clc
or
add
xchg
loope
movsl
clc
push
pop
push
add
clc
or
rorl
push
je
clc
gs
cs
push
add
adc
clc
fmulp
pop
push
aaa
push
bound
add
clc
insb
sti
cmp
int
mov
add
clc
pop
jmp
xor
clc
cs
add
jmp
dec
sub
inc
clc
xchg
lock
add
pop
clc
and
add
clc
push
xbegin
or
out
pop
cmp
lret
cs
or
inc
add
cmp
call
ja
or
add
mov
repz
add
pusha
add
or
clc
scas
dec
pop
fnstcw
lcall
fdiv
sbb
add
mov
or
xchg
cmp
clc
pop
clc
inc
add
roll
lock
add
clc
cmp
cmovo
add
cltd
jg
das
xor
clc
insb
pop
jnp
xlat
cltd
dec
xor
cmp
add
and
add
mov
into
or
jp
dec
inc
clc
inc
clc
mov
sbb
add
cmp
clc
mov
dec
dec
sti
push
push
add
ficoms
loope
pusha
add
xbegin
mov
sbb
pusha
add
mov
pusha
add
int
push
sti
push
clc
push
add
ret
clc
jno
add
add
mov
mov
mov
sub
jg
loopne
xchg
sti
xor
add
push
cmovne
mov
lret
inc
clc
addr16
or
lock
push
pop
xor
add
test
adc
add
aam
dec
mov
bound
add
mov
add
push
add
cmp
cmc
mov
or
clc
mov
in
jns
clc
mov
jb
add
enter
out
mov
pop
xchg
mov
cmp
add
add
add
add
mov
add
sub
push
stos
flds
add
jge
xabort
neg
loop
aam
mov
add
outsl
jbe
popf
popf
jp
add
add
dec
push
add
add
add
pop
je
lea
rcll
fldenv
add
push
add
movsl
clc
imul
repz
pop
cltd
mov
add
lea
cmp
loope
mov
clc
xchg
mov
add
xor
add
add
add
or
inc
add
push
ret
clc
push
mov
jl
insl
fsubs
mov
adc
add
add
add
adc
add
adc
xlat
jne
add
mov
add
xor
add
add
cmp
icebp
jns
sbb
cld
mov
clc
pop
inc
add
gs
inc
add
xor
add
add
add
clc
push
lret
jl
clc
sub
xlat
sbb
jp
clc
mov
ds
sub
flds
add
stos
mov
clc
mov
clc
mov
clc
fistl
or
mov
pop
and
add
adc
clc
inc
clc
fisubrl
add
pop
fsubr
nop
and
add
add
add
scas
push
clc
ret
inc
add
push
add
sti
push
cmc
mov
es
mov
add
cmp
dec
jle
lret
hlt
jle
add
mov
clc
outsb
scas
repz
pop
das
test
sub
sti
mov
jns
movsb
clc
adc
add
test
clc
sub
das
or
add
xchg
add
xbegin
or
clc
xor
add
add
gs
add
add
out
fs
test
cs
rcll
aam
ljmp
dec
add
add
clc
cli
ja
cmp
add
push
clc
cmp
add
loope
popf
addr16
test
and
add
lret
clc
mov
arpl
add
xor
add
stc
aaa
cwtl
fldln2
nop
inc
add
popf
sub
adc
add
and
add
clc
sbb
clc
gs
sub
clc
icebp
clc
ljmp
clc
cmp
clc
xchg
mov
add
inc
add
push
clc
jae
add
mov
add
sbb
push
or
stos
sub
mov
sub
xchg
xbegin
mov
in
clc
call
sahf
das
aam
dec
or
cmpsl
clc
sbb
cmp
clc
pop
pop
sbb
test
inc
clc
add
add
outsb
pop
push
sti
test
add
add
clc
sar
mov
leave
pop
rol
clc
push
ret
clc
inc
add
movsl
clc
bound
add
clc
add
nop
test
clc
xor
add
jmp
data16
push
add
cmpsl
clc
cmp
clc
in
idivb
insb
lahf
inc
add
das
push
add
jge
mov
clc
or
xor
add
stos
clc
js
jne
ret
clc
pop
mov
add
jae
add
add
clc
push
add
cmp
scas
cltd
add
add
add
sub
clc
sbb
outsb
leave
add
add
js
sar
add
bound
add
clc
hlt
gs
sbb
incl
clc
pop
pop
clc
test
cmp
outsb
add
add
add
je
mov
iret
mov
inc
clc
push
sub
cmp
or
and
add
add
clc
shlb
pop
jmp
xchg
xchg
inc
add
lret
jb
add
mov
clc
and
add
es
jecxz
int
push
out
cli
sbb
cltd
mul
clc
data16
mov
clc
ror
int3
mov
jmp
mov
fisubrl
ret
addr16
sbb
cmp
add
sbb
add
int
jo
add
stc
add
add
outsb
hlt
dec
outsl
pop
movsb
clc
out
popl
add
in
lea
add
test
ljmp
jb
add
sar
out
into
mov
scas
ljmp
xbegin
add
outsb
loopne
test
or
clc
sbb
insl
or
add
push
xchg
lods
enter
fstpl
jo
add
adc
clc
and
add
add
xlat
xor
add
fcoms
add
out
mov
clc
and
jnp
xchg
mov
pop
fadds
cs
dec
into
push
mov
shlb
push
cmp
add
xchg
loop
cmc
out
push
add
int3
cmp
nop
dec
addr16
dec
xor
clc
pop
icebp
push
mov
jge
add
adc
add
clc
sbb
clc
xchg
cmp
xor
add
clc
mov
fsubrs
ret
jno
add
add
clc
push
and
add
add
xchg
fmuls
out
xor
add
mov
add
sub
pop
out
or
in
int
sub
adc
clc
rep
xor
add
add
sar
add
fwait
or
xabort
xor
add
iret
cs
repz
inc
clc
adc
add
add
clc
imul
adc
add
out
dec
sbb
clc
jp
push
into
push
add
jge
aas
xchg
or
shlb
add
pop
cmpsb
clc
jle
pop
arpl
add
outsb
inc
clc
sbb
clc
jne
mov
inc
add
xchg
cmp
clc
fnstcw
sub
add
add
imul
mov
add
pop
adc
add
iret
sti
pushf
dec
daa
clc
cltd
or
add
arpl
add
add
add
es
xchg
cmp
add
shrb
inc
add
sbb
test
dec
leave
mov
and
add
test
jmp
insl
xor
inc
add
jo
add
loop
sub
mov
add
add
and
add
cmp
leave
mov
ret
clc
xchg
outsl
dec
cld
mov
leave
mov
lcall
add
jno
add
clc
inc
clc
idivb
test
xchg
lock
add
iret
add
mov
and
add
xbegin
jle
sahf
movsb
clc
push
clc
insl
fwait
xchg
cmpsb
clc
cmpsl
clc
into
xbegin
mov
pop
clc
jb
add
clc
pop
or
add
add
add
add
push
add
mov
fwait
lret
pop
xchg
and
add
add
fwait
add
mov
roll
pop
or
xabort
or
mov
xlat
rorl
add
dec
pop
clc
ret
add
cltd
add
add
aaa
pop
mov
sti
sub
jle
and
add
testb
add
scas
cmp
add
ret
clc
in
dec
mov
add
add
add
stos
aas
int3
bound
add
sub
fbstp
lock
add
mov
clc
inc
add
lahf
test
aaa
xor
add
mov
in
clc
enter
lock
clc
cmp
clc
sbb
cmp
xor
ret
clc
cmp
xchg
clc
or
push
clc
cmp
adc
js
mov
mov
and
nop
sub
sub
add
idivb
repnz
xor
mov
add
push
mov
or
xor
clc
xor
mov
clc
stc
nop
inc
add
or
mov
int3
out
jle
mull
shll
add
mov
pop
clc
lock
cmovp
lods
insl
or
test
incb
sub
call
add
fstl
add
cwtl
repnz
add
push
add
add
add
adc
add
hlt
cmp
mov
ss
pop
pop
movd
pop
imul
das
jne
clc
mov
cmpsb
clc
out
popa
add
sbb
sub
add
xor
add
in
pop
push
push
add
sbb
es
add
add
clc
xabort
leave
cmc
imul
test
xchg
mov
add
mov
add
loopne
fs
pop
cmp
add
mov
dec
dec
mov
add
cmpsb
clc
sub
int
mov
rcll
add
push
add
push
add
mov
iret
inc
add
out
data16
cmp
sbb
dec
nop
cmpsl
clc
add
add
insl
sahf
add
add
add
sub
xlat
add
add
addr16
and
cmp
adc
add
hlt
repnz
mov
add
clc
mov
in
and
add
add
add
add
mov
jl
jecxz
add
add
pop
imul
xlat
add
scas
test
adc
add
xor
xor
add
and
fwait
push
sub
ja
clc
leave
inc
clc
add
test
out
mov
jmp
clc
dec
ja
clc
clc
mov
add
add
popa
add
jae
add
push
add
sbb
mov
mov
repnz
xbegin
pop
jns
clc
test
cwtl
daa
clc
outsl
sub
cmp
bound
add
add
push
clc
mov
clc
sub
clc
gs
std
adc
add
adc
add
jl
inc
clc
mov
aaa
out
gs
cmp
or
mov
push
popa
add
pop
in
enter
incl
clc
push
fbld
dec
mov
dec
sahf
popl
jl
add
shl
clc
dec
loop
add
add
fidivs
add
mov
sbb
clc
or
add
lahf
lret
add
clc
movsb
clc
popf
push
add
inc
clc
into
repnz
jo
add
in
stos
into
dec
mov
add
hlt
repnz
push
add
iret
out
mov
xchg
xor
add
adc
add
imul
clc
and
add
clc
repz
push
add
pushf
add
add
pop
insb
adc
int3
dec
test
add
daa
clc
xor
add
repnz
loop
out
sbb
vrsqrtps
add
push
bound
add
sbb
add
jns
clc
das
adc
add
es
cmpsl
clc
test
dec
fs
xchg
rorl
add
xor
add
cmc
and
add
dec
lret
icebp
pop
mov
add
mov
clc
inc
add
mov
es
mov
add
gs
data16
or
push
lea
clc
xor
add
cs
cmp
clc
cmp
scas
xchg
push
add
jno
add
add
sar
jge
aam
outsl
xchg
xor
cmp
clc
loope
pushf
ljmp
add
xlat
repz
add
inc
add
scas
pop
clc
mov
dec
pop
xchg
pop
clc
jge
add
cmp
clc
sbb
aad
clc
mov
cs
sub
add
call
mov
add
cli
lret
add
add
add
mov
or
add
dec
mov
sar
clc
nop
in
leave
test
ret
clc
add
add
and
jno
add
add
adc
add
add
inc
clc
mov
arpl
add
clc
add
add
sbb
stos
fwait
movsb
clc
lods
xlat
loope
movsb
clc
mov
add
push
mov
fs
bound
add
jmp
dec
inc
add
push
add
xchg
mov
clc
adc
add
add
cmp
fwait
cmp
mov
add
imul
inc
clc
ljmp
out
movntq
out
sti
lahf
xchg
movd
mov
scas
mov
arpl
add
mov
sbb
add
cmp
clc
jae
add
clc
xchg
cld
push
adc
int
pop
fistps
add
mov
outsl
xchg
jl
aad
add
dec
mov
add
add
out
jge
sbb
inc
add
fwait
cmpsb
clc
mov
dec
inc
clc
enter
ds
xor
add
mov
clc
inc
clc
xor
mov
pop
ret
clc
cmp
xor
add
dec
push
push
clc
add
add
clc
lea
clc
mov
lods
aas
movsb
clc
sar
add
bts
cld
mov
ret
test
out
ds
sbb
add
hlt
jmp
outsb
sbb
ss
mov
add
data16
xlat
fdivrl
inc
add
push
enter
xchg
sub
cmp
add
lea
xchg
jg
sahf
push
mov
add
fists
add
mov
add
add
cmp
adc
add
cmp
and
mov
push
lods
aaa
loope
add
xchg
and
add
clc
adc
add
mov
mov
insl
lret
pop
pushf
bound
add
inc
clc
lock
add
xchg
fiaddl
test
clc
stc
cmp
lods
adc
add
sbb
clc
dec
or
clc
lahf
xor
add
clc
fisubl
add
out
mov
dec
popf
filds
dec
and
add
movsl
clc
lods
cmp
add
es
or
or
cmp
scas
sbb
add
pushf
movsb
clc
jmp
sub
fisubl
push
scas
or
mov
clc
idivl
loop
lret
xchg
negb
pop
mov
push
and
dec
dec
pop
std
inc
clc
add
add
cli
and
add
push
push
aas
sbb
and
clc
sub
clc
inc
clc
shll
ljmp
sub
addr16
sar
sub
addr16
pop
js
jge
clc
jl
add
adc
add
sub
add
xchg
xchg
pop
dec
xbegin
add
add
test
aam
sahf
adc
add
add
or
clc
repnz
fs
mov
in
stos
and
add
add
inc
add
mov
arpl
add
test
add
jbe
clc
ljmp
jne
xor
add
xlat
test
adc
add
clc
rcrb
cmpsl
clc
fisttpl
test
and
add
pushl
clc
and
jb
add
pop
jle
cmp
jae
add
clc
sbb
pushf
xchg
and
add
jmp
add
adc
and
cmc
shll
fdivs
add
add
sbb
clc
fbld
add
shll
add
ljmp
test
add
add
popa
add
es
iret
inc
clc
adc
add
clc
jae
add
pop
mov
jl
sub
inc
clc
push
jle
negb
add
xabort
clc
cmp
add
jg
loope
fwait
adc
add
add
pop
and
inc
add
int
add
dec
jb
add
dec
xor
add
xchg
pop
leave
gs
or
clc
gs
jnp
iret
loopne
jp
add
push
pop
cwtl
sub
jg
or
out
mov
and
sti
inc
add
push
add
jp
cld
ja
clc
xabort
sahf
xchg
ret
movsl
clc
mov
iret
add
or
repz
add
add
clc
cmp
lret
cmc
fdivrs
add
arpl
add
add
cmp
dec
aam
push
pop
xchg
out
inc
add
lar
add
jmp
add
lret
and
add
clc
mov
xbegin
adc
add
add
xbegin
mov
popf
js
push
add
cltd
mov
clc
add
mov
xor
pusha
add
mov
nop
imul
fwait
push
clc
and
add
cmp
sahf
nop
xchg
cmp
clc
je
negb
xor
add
pop
out
cld
push
cs
pop
sub
sar
mov
add
addr16
jg
push
test
jns
clc
popf
popa
add
xor
add
out
test
mov
ss
mov
clc
xlat
filds
addr16
mov
pop
lahf
inc
clc
mov
inc
add
pop
fildll
or
movsl
clc
shufps
add
cmp
pop
rcl
cmp
jl
nopl
clc
push
inc
clc
popa
add
push
add
in
clc
mov
clc
ret
push
xchg
clc
lret
popa
add
int
data16
jnp
test
mov
clc
adc
add
add
loop
enter
clc
cwtl
fdivs
into
lods
pop
in
outsb
sub
adc
add
mov
xchg
jmp
mov
movsl
clc
jmp
das
adc
add
fwait
test
xchg
fisubrs
cmp
clc
fs
add
add
mov
dec
loopne
fimull
add
add
mov
sub
xchg
cmp
add
sar
add
fsub
clc
cmp
insb
clc
cmp
pop
jo
add
add
add
das
sub
and
in
pop
or
movsl
clc
and
xchg
cmpsb
clc
test
sbb
mov
xchg
aaa
jge
int3
jg
push
add
test
push
and
test
clc
mov
pop
xor
add
add
add
loope
gs
pop
cmp
mov
add
mov
hlt
jno
add
test
ljmp
add
mov
sub
jne
mov
clc
mov
inc
clc
cmpsl
clc
je
jge
clc
push
add
inc
add
jne
ss
adc
add
mov
and
add
add
add
and
add
dec
jne
imul
nop
and
add
add
add
dec
inc
add
pop
or
xchg
std
testl
gs
mov
add
in
or
jecxz
add
sub
xchg
movsl
clc
and
add
lret
sbb
add
add
and
add
clc
aam
rcr
mov
push
mov
roll
into
ret
clc
cmp
lods
and
add
clc
xbegin
add
fcomip
mov
movsb
clc
lret
jns
dec
xchg
and
add
xor
add
pop
lock
add
sar
pop
fs
push
jns
jecxz
dec
clc
stos
ret
mov
xchg
mov
imull
popf
and
fnstenv
xlat
inc
add
mov
cmc
mov
and
add
mov
pushf
jg
cwtl
inc
clc
or
ret
clc
fldt
into
mov
clc
leave
clc
sub
sub
mov
clc
movsl
clc
xlat
ss
js
popf
sub
scas
cmp
insb
sub
arpl
add
test
mov
and
xor
add
and
add
push
mov
add
pop
das
mov
in
mov
clc
es
movsb
clc
adc
add
add
add
jmp
clc
sub
clc
dec
mov
add
mov
ret
clc
inc
clc
jmp
jns
sbb
mov
sub
cs
outsb
push
add
stc
xbegin
mov
idiv
icebp
add
or
add
jne
add
inc
add
sub
add
jo
add
into
cs
addr16
mov
sub
clc
adc
add
mov
xchg
out
insl
xchg
mov
push
add
jns
sahf
enter
clc
cmp
cmp
push
shrl
pop
mov
xchg
aaa
jno
add
adc
add
add
or
push
add
push
add
idivb
xchg
int
clc
dec
imul
clc
rep
popl
add
cs
sahf
pop
aad
stos
fadd
clc
dec
stos
loopne
cwtl
pop
scas
fldt
add
stos
jge
fiadds
clc
mov
clc
dec
out
mov
clc
inc
clc
xchg
mov
add
add
clc
outsl
js
fdiv
std
mov
clc
lea
sbb
xbegin
push
or
cmp
push
add
stos
adc
sbb
outsl
jle
push
clc
scas
add
add
pop
repz
pop
mov
jbe
xchg
ljmp
add
dec
lods
sbb
add
push
xchg
es
cmpsb
clc
es
sbb
aaa
adc
icebp
lock
jne
test
pop
mov
clc
dec
cmpsb
clc
sub
add
xchg
mov
and
add
addr16
inc
add
add
add
mov
xabort
sbb
sar
jns
add
ljmp
and
add
push
in
mov
movsl
clc
or
xchg
mov
test
clc
out
adc
or
popa
add
mov
add
push
clc
mov
add
mov
add
add
adc
add
jnp
inc
add
sarl
cwtl
dec
xchg
pop
test
cmc
sub
xchg
push
push
clc
cs
add
clc
or
lods
clc
js
add
hlt
test
in
pop
ds
loop
fdivrp
xbegin
mov
add
cmp
clc
xor
add
add
xchg
fnstsw
clc
or
add
mov
clc
cmp
add
icebp
or
fisubrs
sub
xchg
call
jbe
adc
add
add
ror
adc
fnstenv
add
rorl
in
sub
and
add
xbegin
das
clc
mov
clc
and
add
fildl
mov
hlt
int
sbb
add
lock
cli
inc
clc
jo
add
add
rolb
sub
add
sub
clc
mov
sti
mov
push
add
stc
mov
aad
clc
fsubrl
test
jo
add
lods
fwait
mov
push
insb
jmp
add
or
cmp
cwtl
jb
add
scas
mov
xchg
mov
loopne
out
data16
add
add
clc
xor
add
push
jecxz
std
add
or
sahf
scas
js
add
xchg
add
add
clc
inc
add
popf
je
outsl
cmp
xchg
cmp
xor
clc
dec
push
repz
add
add
add
and
lods
iret
loop
xchg
adc
clc
pushf
jecxz
lcall
pop
and
add
add
clc
cs
loope
jp
fldenv
clc
mov
loop
jmp
clc
mov
add
or
repnz
imull
lcall
push
mov
sar
clc
or
add
add
add
push
das
fdivl
shl
jno
add
aad
ds
xor
add
pop
clc
inc
clc
movsb
clc
cmp
clc
mov
clc
or
add
jecxz
or
aam
clc
std
xchg
push
clc
scas
movsl
clc
push
cmp
enter
and
add
clc
cmp
in
jecxz
mov
jmp
sar
mov
mov
data16
inc
add
mov
testb
add
xor
add
ret
mov
xor
add
clc
add
add
pusha
add
in
lock
add
add
idivb
cli
idivl
sti
sti
xchg
loop
outsl
leave
push
add
sar
clc
mov
clc
loop
mov
add
insb
aam
clc
int3
pop
icebp
mov
notl
lods
sar
leave
js
sar
mov
inc
clc
jb
add
add
pop
cmc
mov
jb
add
scas
aaa
inc
add
das
addr16
jp
push
xchg
mov
fisttps
add
add
pop
iret
jmp
ja
clc
cmc
mov
jecxz
ss
mov
out
in
mov
add
adc
clc
out
arpl
add
add
cmp
clc
aaa
lea
pop
ljmp
jae
add
pop
clc
sbb
imul
clc
inc
add
arpl
add
add
pop
ss
clc
push
add
mov
aad
clc
in
aam
cmp
lret
mov
clc
loope
fisttps
data16
int
xchg
pop
sbb
iret
xchg
push
pop
lea
shll
clc
int3
push
pop
arpl
add
push
test
in
rcll
add
int
outsl
dec
aad
pop
jne
std
and
add
std
pushf
cli
sbb
fwait
add
clc
popf
movsl
clc
mov
clc
cwtl
popf
mov
add
add
pop
cmp
mov
inc
add
insl
adc
add
int3
sar
clc
es
push
mov
stos
outsl
outsl
lret
aaa
insb
inc
add
bound
add
clc
or
clc
call
push
add
scas
push
clc
fidivrl
add
fisubs
int3
jle
adc
add
add
inc
add
hlt
pusha
add
test
lods
push
add
pop
push
add
or
outsl
int3
fcmove
inc
clc
std
insb
inc
clc
pop
rcr
cmp
clc
sahf
push
add
pop
adc
add
arpl
add
sbb
jmp
or
xor
add
jecxz
fwait
mov
pop
pop
mov
add
push
add
push
add
in
gs
fstps
add
mov
insb
fcoml
add
clc
push
into
es
adc
add
std
dec
scas
ds
pop
arpl
add
clc
repnz
add
clc
add
add
popf
sub
add
clc
and
add
add
add
loope
iret
jno
add
clc
loopne
xabort
push
add
scas
insl
outsb
clc
cmp
test
pop
scas
bnd
add
add
movsb
clc
xchg
xbegin
xchg
mov
stos
loop
adc
lcall
add
xchg
fsubr
add
add
add
inc
add
xabort
push
out
cmpsb
clc
jge
fistpll
inc
add
add
add
mov
stc
pop
dec
scas
out
out
cmp
call
cmp
add
lock
push
add
clc
call
xbegin
enter
imul
clc
dec
xlat
dec
enter
sar
add
xchg
neg
push
add
std
mov
push
add
add
add
add
cmp
add
iret
insl
add
and
mov
clc
insl
cmpsl
clc
frndint
sub
inc
add
sbb
clc
push
add
fldcw
sbb
js
adc
add
mov
add
rclb
enter
add
add
lcall
lahf
push
mov
clc
gs
call
add
cmp
push
push
jmp
add
fldenv
add
movsl
clc
and
add
jecxz
add
mov
clc
mov
add
lcall
jge
clc
aaa
sub
negl
push
add
sub
add
out
mov
dec
in
pop
rolb
clc
cmp
clc
xor
add
add
pushf
jg
clc
adc
add
xchg
jp
lock
dec
adc
add
add
es
add
add
push
popa
add
inc
add
pop
pushf
shlb
clc
mov
mov
js
clc
push
fs
pop
push
dec
xabort
push
enter
or
mov
cmp
jno
add
add
jge
clc
push
clc
adc
add
sbb
add
std
or
bound
add
clc
daa
clc
insb
push
lcall
or
jg
out
aas
jnp
jecxz
into
ret
clc
jmp
stc
inc
clc
dec
dec
movsl
clc
lret
mov
repnz
sub
add
add
clc
or
and
stos
mov
add
mov
insl
rcrl
enter
push
push
out
adc
add
ja
clc
aam
sbb
adc
add
pop
loop
aaa
fwait
and
add
mov
clc
push
add
cmp
or
clc
and
add
mov
add
add
or
stc
popa
add
movsb
clc
rorb
xor
jp
dec
popa
add
push
cmp
add
out
es
jae
add
leave
and
push
add
out
pop
xabort
clc
fimull
sbb
nop
es
ljmp
mov
insl
cltd
fwait
pop
shlb
xor
jmp
add
xchg
aas
jge
or
add
int3
lret
dec
lea
clc
jbe
inc
clc
pop
lret
cmp
aaa
sub
add
xchg
xchg
insb
jg
xchg
push
add
jb
add
push
jl
loope
and
cmp
clc
sub
dec
sahf
repnz
pop
mov
xlat
mov
cltd
mov
and
add
nop
pop
sbb
lahf
jbe
mov
ss
insb
mov
add
adc
add
clc
push
add
int
clc
adc
add
pop
clc
jno
add
xabort
cmp
add
gs
pop
clc
mov
add
pushf
push
dec
dec
mov
add
inc
clc
jl
cli
out
dec
or
clc
pop
xchg
add
add
add
cltd
add
add
add
add
add
ficomps
clc
pop
nop
fdivrl
pusha
add
xchg
cmpsb
clc
sar
ja
loopne
xabort
clc
and
add
inc
add
hlt
imul
sbb
jo
add
add
xor
add
je
push
mov
jmp
add
sti
sbb
lods
mov
gs
sub
push
mov
xor
add
push
shll
movsb
clc
mov
add
inc
clc
fsts
xor
enter
js
pop
mull
mov
rcll
add
xchg
sbb
mov
pop
sub
ret
mov
clc
mov
sti
jo
add
mov
adc
jl
inc
clc
or
jne
lcall
clc
cmp
or
add
add
repnz
aam
adc
add
xchg
std
fisubrl
scas
psrlw
push
add
pop
dec
or
add
push
nop
xor
add
add
cmp
mov
clc
jmp
leave
ja
adc
add
push
addr16
insl
adc
add
add
fs
test
cmp
inc
clc
xor
add
das
push
aad
cwtl
std
dec
and
add
clc
add
clc
imul
add
sub
add
jae
add
mov
add
addr16
xchg
mov
mov
dec
cmp
sarb
xbegin
push
icebp
test
mov
mov
push
add
and
sar
push
mov
mov
adc
add
mov
add
add
add
add
rcr
dec
cwtl
icebp
cmp
aaa
fs
mov
mov
add
inc
clc
movsl
clc
pop
sub
add
sbb
clc
lods
xbegin
add
clc
inc
add
mov
clc
out
lret
not
mov
add
push
add
cmp
jecxz
out
out
inc
add
jns
xchg
pop
stos
adc
add
mov
fs
xor
clc
imul
test
xchg
inc
add
loopne
jecxz
dec
xlat
in
test
sbb
sahf
movsb
clc
sub
clc
sub
dec
fbstp
clc
vandps
mov
inc
add
sbb
xchg
push
dec
jae
add
add
icebp
into
sbb
clc
pop
mov
add
pushf
adc
add
add
add
add
clc
outsl
jo
add
add
movsb
clc
pusha
add
xor
add
push
add
inc
add
ja
fldcw
inc
add
pop
std
xchg
and
add
xbegin
xchg
ja
xchg
push
inc
clc
mov
jg
cli
jne
add
and
add
add
cmp
clc
jecxz
pop
pushf
fwait
aam
xor
add
std
xabort
sahf
fmul
mov
clc
mov
repnz
lock
clc
loopne
dec
test
int3
sti
daa
clc
cmp
jmp
inc
add
enter
pop
fiadds
add
xchg
ss
xabort
stc
pushf
xchg
sar
in
jbe
test
fwait
arpl
add
mull
clc
nop
pushf
lret
clc
mov
mov
lcall
sahf
arpl
add
cmc
adc
add
imul
add
xchg
pop
or
dec
ljmp
clc
mov
inc
clc
popa
add
dec
jl
clc
aaa
cwtl
mov
outsb
jns
cli
and
add
pop
test
add
notb
clc
xchg
bound
add
in
xlat
incl
dec
imul
add
aaa
sub
inc
add
cmp
and
add
add
out
into
insb
mov
xchg
dec
and
dec
imulb
cmp
cmp
add
clc
jno
add
clc
mov
clc
pop
cmc
lcall
xchg
xchg
ret
aas
sub
lret
lahf
lahf
out
cmp
add
inc
add
cmp
adc
add
incb
cmp
cmc
aaa
loope
testb
push
add
in
add
add
push
adc
cmp
cmp
add
add
add
aad
clc
and
xor
add
loopne
aam
add
in
mov
or
int3
in
xchg
dec
aas
dec
rcll
add
push
add
lock
add
inc
add
shlb
je
inc
add
lahf
xor
popf
cmp
clc
enter
add
xchg
cmp
ja
clc
mov
int3
je
leave
mov
fildll
cld
in
xor
add
arpl
add
mov
sti
jne
clc
mov
mov
add
cs
add
rol
clc
clc
cmp
clc
ret
clc
jns
test
xchg
mov
imul
clc
xor
add
nop
imul
clc
dec
adc
add
jae
add
cmp
xor
je
jp
add
add
inc
add
insl
out
xchg
test
and
mov
clc
mov
add
dec
push
sti
pop
clc
clc
pop
xchg
js
lahf
outsl
and
add
clc
sbb
add
inc
clc
sub
xchg
jecxz
add
push
add
inc
clc
dec
xchg
cmpsb
clc
outsb
cwtl
xchg
xchg
shll
clc
dec
xbegin
ljmp
add
and
cmpsb
clc
adc
add
add
ss
add
or
cmovg
and
add
add
mov
cmpsl
clc
xor
add
add
inc
add
scas
mov
add
imul
and
add
or
mov
clc
test
dec
cltd
clc
or
clc
adc
add
fnstenv
add
imul
stos
sbb
inc
add
push
movsb
clc
pop
add
add
dec
ficoms
add
jne
add
jle
pop
loop
sbb
clc
dec
pop
clc
or
mov
mov
ficoml
add
fmuls
in
sbb
add
dec
mov
add
fwait
ret
clc
out
lods
pop
or
ret
clc
dec
push
add
je
test
mov
xor
add
aam
cwtl
stc
sub
out
shrl
clc
mov
jae
add
add
adc
add
popf
std
push
clc
pop
clc
jmp
fnstenv
pushf
scas
jnp
out
push
add
and
add
clc
das
xabort
cwtl
and
add
clc
outsl
mov
xchg
lret
cmp
aam
xchg
mov
jl
jmp
loop
pop
inc
clc
xchg
int3
cmp
cmp
cmp
clc
dec
mov
mov
fdivr
aaa
cmp
mov
arpl
add
sub
cmp
dec
enter
cmp
add
mov
loop
je
cmpsb
clc
pop
and
add
jns
dec
mov
fisubs
clc
cmp
call
lahf
jl
clc
insb
push
add
or
add
clc
test
mov
lret
add
add
push
add
mov
add
fiaddl
clc
cmp
add
fnstsw
arpl
add
clc
pop
scas
je
es
flds
jae
add
push
add
cmp
mov
push
cltd
sub
ret
add
mov
clc
add
add
gs
mov
jp
out
pop
ret
push
add
iret
arpl
add
aas
mov
add
sbb
sub
aaa
jle
mov
add
outsb
dec
test
push
add
mov
clc
movsb
clc
xchg
add
add
clc
enter
out
push
and
add
fs
test
pop
arpl
add
mov
adc
or
mov
fs
push
add
jl
or
data16
repz
add
clc
push
lcall
mov
imul
test
and
clc
enter
data16
shlb
push
add
test
insb
gs
xor
add
jle
icebp
aad
add
adc
jne
cltd
inc
add
sub
add
fdivl
sub
pop
clc
cmp
add
add
or
sarb
pop
inc
clc
das
mov
mov
sbb
sti
clc
in
fiadds
shrl
stos
jl
clc
out
pop
mov
cld
popa
add
into
cmp
clc
insb
or
clc
pop
mov
add
mov
mov
xor
add
lret
pusha
add
dec
cmp
stc
dec
and
mov
clc
jle
sub
clc
push
mov
add
add
outsb
out
cmp
push
clc
xlat
cmp
inc
add
fisttpl
add
xchg
push
add
aad
xor
add
insb
std
dec
mov
fwait
cmp
clc
cli
and
add
test
dec
fs
in
jno
add
add
add
mov
clc
es
xbegin
jb
add
jl
mov
clc
pop
aas
cmp
clc
or
jnp
jne
test
enter
aam
mov
add
lock
add
pop
sub
add
and
add
add
in
or
rol
clc
js
xor
add
clc
jo
add
sar
clc
push
pushf
pop
inc
clc
aad
add
adc
add
into
push
clc
cmp
in
out
push
add
or
inc
add
call
aad
add
lcall
test
loop
aas
pop
mov
cmp
clc
add
add
mov
stos
lock
sub
loopne
xchg
mov
add
mov
cmp
adc
cld
stos
jg
xchg
gs
and
add
in
cmpsb
clc
mov
imul
loop
iret
lods
mov
in
cmc
xchg
xchg
mov
sbb
clc
jbe
fnsave
fs
pop
xchg
push
add
xor
outsb
test
clc
dec
mov
pop
fyl2x
addr16
cmp
add
cmp
xor
add
cmp
jp
add
insb
jne
add
push
clc
sub
xchg
mov
incb
fsubrs
clc
pop
out
out
mov
imul
mov
clc
pop
mov
add
mov
lock
xor
xor
add
pushl
dec
adc
add
loop
dec
imul
add
xbegin
jnp
xchg
push
popa
add
add
sbb
pop
icebp
push
ja
mov
xor
sar
sar
clc
cmc
std
add
add
add
clc
jns
bnd
clc
dec
enter
cwtl
add
sar
clc
imulb
clc
push
cmp
add
icebp
loop
pop
inc
clc
push
add
and
pop
cmp
cmp
add
xor
popa
add
imul
xor
add
add
add
clc
xchg
mov
int3
ljmp
clc
popf
add
add
clc
lcall
add
data16
pop
dec
xlat
insb
sbb
clc
fs
insb
xchg
fwait
mov
jbe
xchg
movsb
clc
jno
add
mov
clc
mov
pop
lock
cltd
cmpsl
clc
adc
add
add
mov
dec
sbb
cmp
scas
jb
add
mov
clc
xor
add
popf
and
add
cmp
pop
pop
xchg
arpl
add
clc
jecxz
pushf
gs
cmp
sbb
or
add
das
add
sub
add
add
loop
fs
cmpsl
clc
jl
mov
add
sbb
clc
out
gs
clc
scas
mov
movsl
clc
ds
add
mov
or
pop
sbb
sahf
cli
adc
add
add
bound
add
push
xchg
inc
add
mov
mov
cmp
adc
idiv
cmpsl
clc
push
insb
sbb
clc
push
testb
add
mov
adc
dec
add
add
ficompl
jecxz
sub
xchg
dec
aas
push
add
mov
mov
cmp
ja
scas
and
sbb
pop
dec
fcmovb
clc
mov
inc
clc
mov
sti
push
jb
add
mov
or
inc
clc
adc
xor
add
sub
add
lods
movsb
clc
data16
mov
add
inc
clc
lret
into
lea
add
mov
push
add
sub
fs
xchg
mov
jo
add
add
xor
add
jg
add
xor
add
shr
out
add
add
push
add
sub
add
xor
add
insl
sub
pop
ljmp
mov
add
addr16
ja
add
bound
add
add
clc
add
add
add
push
gs
inc
clc
xbegin
xor
add
sbb
xchg
hlt
mov
ss
push
and
add
clc
sbb
leave
clc
xchg
fsubrp
mov
addr16
inc
clc
xchg
dec
bound
add
cmp
clc
or
clc
mov
inc
add
sub
jnp
mov
mov
pushf
loope
push
and
add
sti
mov
pop
or
clc
mov
push
mov
aam
jmp
adc
add
add
add
loopne
xchg
add
aas
or
clflush
push
mov
aad
mov
clc
add
add
ds
add
nop
xabort
clc
inc
add
mov
incb
nop
adc
add
dec
mov
clc
int
lods
sub
rol
clc
shlb
add
or
das
adc
add
clc
jmp
xbegin
fmuls
mov
fwait
pop
add
add
icebp
jge
out
out
pop
cmp
clc
push
add
ljmp
imulb
sbb
dec
clc
push
inc
add
out
push
add
test
jle
loopne
dec
or
add
add
mov
sub
imulb
mov
jae
add
inc
clc
cmpsb
clc
addr16
sub
clc
lock
enter
add
and
add
imull
lret
movsl
clc
pop
shrl
clc
inc
clc
lods
daa
clc
push
add
lea
test
loop
push
repz
cld
pop
xor
add
add
clc
movsl
clc
inc
clc
pushf
movsb
clc
scas
mov
dec
sti
pop
add
bound
add
push
int3
insb
fsubrs
add
add
add
ret
stc
sahf
and
add
cmp
in
bound
add
xchg
xor
add
clc
sahf
outsb
add
add
inc
add
in
inc
clc
rorl
iret
dec
clc
push
jl
cmpsl
clc
popf
sub
test
sub
ja
sub
clc
lret
mull
ret
clc
jns
add
int3
xabort
or
xbegin
cmp
lods
mov
clc
cmp
clc
dec
aas
leave
nop
scas
inc
clc
or
xchg
xor
add
test
test
div
mov
in
sar
xchg
imul
add
and
add
add
movsl
clc
push
sbb
clc
fadds
add
add
jo
add
cmp
pusha
add
cmp
xlat
sub
clc
das
pushf
pop
mov
add
add
xchg
scas
lods
xchg
push
outsb
pop
lret
movsb
clc
jbe
int
xchg
sbb
add
cwtl
mov
test
cmpsl
clc
jp
add
cs
add
add
add
mov
jns
xor
add
add
xchg
dec
jle
jno
add
mov
mov
clc
test
mov
xor
add
add
adc
add
clc
and
pop
sbb
clc
scas
and
add
iret
repnz
add
add
incb
cld
setge
cmc
inc
clc
fildl
clc
outsb
test
stos
mov
xchg
icebp
jae
add
add
add
dec
inc
add
data16
fld
clc
sti
push
push
std
xor
add
add
clc
sbb
leave
xor
add
clc
loope
push
add
std
fcmovnb
clc
inc
clc
mov
clc
pop
adc
add
add
add
aaa
or
add
mov
clc
mov
add
insb
mov
mov
add
cli
xor
add
stos
lods
sub
xchg
outsl
test
clc
jl
or
mov
clc
push
sar
push
add
arpl
add
xor
add
loop
sub
xor
add
or
scas
jo
add
add
xlat
mov
add
add
mov
cmp
pop
cmp
or
add
pusha
add
sarb
hlt
mov
pop
clc
push
mov
lea
add
out
gs
sbb
ja
add
add
add
jno
add
xor
add
test
clc
jg
pop
inc
add
pop
clc
jae
add
add
sti
xchg
ss
clc
cmp
xchg
xor
sub
pop
sub
rep
jmp
leave
cltd
dec
aas
sbb
add
push
clc
xor
add
dec
sar
mov
cmp
clc
js
dec
out
clc
addr16
aas
cmp
clc
enter
pop
clc
cltd
mov
add
pop
jb
add
push
pop
gs
mov
std
xor
add
fwait
adc
add
clc
ficompl
add
aam
clc
dec
xor
add
sub
lea
add
clc
pop
add
sub
clc
aad
clc
mov
ret
clc
jae
add
add
clc
repz
xchg
jns
clc
popa
add
sar
jge
clc
mov
inc
clc
lret
lods
xchg
sbb
sub
add
inc
add
call
clc
test
and
add
add
push
add
frstor
mov
clc
popa
add
jne
add
shrb
xor
pop
popf
inc
add
fiadds
pop
clc
adc
add
jl
dec
imul
clc
jecxz
jge
clc
fcos
stos
push
gs
scas
xchg
sbb
xchg
bswap
pusha
add
pop
mov
hlt
repz
xor
add
add
popf
gs
fbstp
add
mov
jno
add
pop
inc
add
push
mov
ja
add
sahf
mov
cmp
addr16
push
add
lret
inc
clc
mov
fadds
clc
inc
add
ss
sbb
fistl
sar
xor
add
int
sbb
clc
call
int3
or
add
cwtl
scas
std
mov
lea
add
into
sub
clc
jns
jle
inc
add
addr16
or
fidivrl
out
fldcw
fisttps
push
clc
push
add
fadds
sub
add
cmpsl
clc
sar
outsl
hlt
push
sarl
dec
lods
xchg
mov
push
inc
clc
shl
dec
add
add
add
ret
clc
dec
push
add
mov
lret
add
add
enter
lcall
jp
std
out
ds
fistpl
mov
clc
sbb
enter
push
add
lcall
xchg
mov
mov
clc
inc
add
or
cmp
pop
mov
cmc
adc
add
clc
and
clc
cmp
test
stos
mov
aaa
aas
std
sub
add
sbb
clc
int3
push
add
xbegin
add
cltd
je
imull
xchg
add
lahf
out
jne
add
push
sbb
xabort
adc
inc
add
mov
into
mov
xchg
popf
popa
add
into
xbegin
xchg
ret
cmpsl
clc
out
fcmovb
clc
mov
xlat
xchg
cltd
adc
add
clc
sbb
aaa
mov
add
icebp
mov
add
lods
mov
clc
xor
add
add
mov
add
xchg
sahf
jl
clc
pop
xchg
xabort
clc
ficoms
lods
mov
cmp
mov
inc
add
in
vsqrtps
add
clc
add
add
ljmp
add
arpl
add
add
clc
ds
jnp
jp
push
mov
add
stos
mov
sbb
add
add
add
mov
add
mov
add
out
lock
mov
clc
call
jne
add
aaa
aaa
je
dec
sbb
inc
clc
mov
mov
aas
and
or
clc
xchg
or
jnp
clc
push
add
in
jne
hlt
jge
into
jnp
add
push
jb
add
clc
cli
daa
clc
lahf
mov
pop
clc
mov
ret
clc
mov
inc
add
int3
in
stos
mov
add
or
cmp
in
sarl
test
je
jle
clc
pop
clc
sub
clc
popa
add
inc
add
sar
sar
clc
je
incl
sbb
lret
lods
stos
cmp
repz
cmp
test
clc
mov
mov
ja
sub
gs
mov
jns
mov
mov
clc
mov
add
out
mov
add
ja
clc
xor
clc
arpl
add
mov
clc
or
xbegin
pop
cwtl
push
add
sbb
add
sarl
add
clc
ret
out
sahf
cmc
iret
or
inc
clc
pop
xchg
push
add
in
dec
pop
das
mov
clc
outsl
mov
clc
add
add
add
and
add
and
add
cltd
mov
push
fidivrl
js
pop
cmpsl
clc
xchg
ss
pop
test
mov
add
adc
add
add
pop
leave
cmp
out
imul
add
movsl
clc
enter
push
ljmp
sub
fisttpll
push
add
mov
clc
es
data16
cmp
fwait
push
clc
cmp
ret
clc
jg
xor
add
movsb
clc
push
aad
mov
inc
add
movsl
clc
fcmove
push
cmp
add
or
dec
mov
loope
xor
add
xchg
cmp
pusha
add
and
cmpsl
clc
mov
lret
mov
xor
add
push
pop
clc
cmpsb
clc
xchg
mov
clc
add
add
clc
inc
clc
mov
mov
popa
add
jmp
adc
or
mov
xabort
dec
pop
mov
cmp
and
add
add
sub
clc
sar
add
pop
cmp
xabort
clc
ljmp
jecxz
pop
cmp
add
inc
clc
and
sbb
push
movsl
clc
or
and
clc
mov
cmp
movsb
clc
sahf
out
add
add
mov
aam
sbb
add
sbb
sahf
jmp
cmp
xor
add
add
add
clc
cmp
mov
add
clc
mov
ja
clc
aad
add
vcomiss
adc
add
aaa
sub
adc
add
add
push
stos
stc
xchg
test
add
mov
scas
daa
clc
flds
data16
rclb
clc
dec
xor
cmp
clc
dec
inc
clc
xor
add
xor
clc
insb
push
in
fbstp
add
xor
add
add
mov
or
add
sbb
inc
add
cs
roll
clc
sub
dec
xchg
sahf
jnp
add
push
add
mov
push
add
jae
add
clc
inc
add
out
roll
add
loop
and
add
sub
sbb
clc
int
mov
add
or
lea
push
push
clc
and
clc
mov
clc
pop
sub
add
add
inc
clc
xor
clc
gs
inc
add
xchg
outsb
mov
add
add
push
mov
add
repz
jl
test
clc
add
add
cmp
cli
or
jle
rorl
icebp
loope
pop
xchg
sbb
sbb
add
loope
cmpsb
clc
add
daa
clc
push
sti
inc
clc
lock
jne
push
add
push
add
xor
clc
pop
scas
sub
sbb
add
xchg
inc
add
into
add
add
outsl
sbb
outsl
jb
add
hlt
mov
fstpl
mov
jae
add
clc
nop
cmp
mov
inc
clc
push
inc
clc
dec
xchg
fmulp
test
push
pop
sbb
add
pusha
add
jo
add
add
clc
push
hlt
pop
push
add
add
out
jl
int3
mov
pop
ja
ljmp
mov
add
dec
xor
add
clc
mov
add
add
add
shlb
inc
add
mov
clc
adc
mov
and
add
add
int
add
adc
add
cmp
add
pusha
add
lock
or
clc
pop
dec
fldcw
adc
add
idivb
mov
clc
mov
arpl
add
clc
outsl
pop
or
jo
add
xbegin
es
mov
sub
clc
clc
push
dec
repz
push
clc
fcmovb
clc
loopne
pop
gs
inc
clc
pop
push
push
enter
adc
add
jecxz
pop
enter
add
imul
clc
int
clc
xchg
loopne
push
das
aas
out
mov
add
jb
add
add
jecxz
cli
mov
clc
mov
out
fwait
push
xchg
loopne
call
clc
xor
add
add
add
cmp
aaa
jmp
aas
xabort
cmp
scas
icebp
push
sub
add
loope
out
xlat
and
jle
mov
clc
test
xor
add
add
pop
mov
scas
addr16
sar
sahf
popa
add
cmp
push
add
ret
pop
inc
clc
repnz
add
test
inc
add
fldt
div
dec
push
xor
and
mov
pop
adc
add
clc
addr16
sub
clc
jns
aam
add
mov
mov
mov
jb
add
ljmp
sub
xchg
mov
cmp
out
sbb
adc
add
add
cld
aaa
cmp
clc
jecxz
and
add
mov
add
negb
push
clc
in
cmp
clc
and
add
clc
mov
and
xchg
mov
in
faddl
fwait
in
and
add
daa
clc
sbb
sbb
adc
add
push
gs
dec
pop
ljmp
mov
adc
add
xor
add
add
add
push
adc
add
clc
ret
clc
xchg
jo
add
xlat
dec
push
jg
cmpsl
clc
lcall
push
stos
test
hlt
aaa
jp
clc
or
add
jnp
and
add
add
daa
clc
mov
adc
add
aad
icebp
cmp
clc
xor
add
test
xlat
int3
push
je
mov
clc
push
fisttps
mov
and
add
loopne
outsl
inc
clc
lcall
pushf
xlat
and
pop
clc
movsb
clc
sbb
pop
lods
mov
stos
int3
sahf
mov
lock
clc
into
xchg
outsb
cmp
leave
fsubrp
add
aaa
mov
xor
clc
ficompl
cwtl
jns
clc
mov
popa
add
fwait
xchg
jbe
clc
pop
cmp
add
push
clc
clc
push
and
add
mov
cwtl
into
fdivl
sbb
add
or
mov
clc
stc
sub
add
add
add
clc
clc
jne
sbb
in
adc
add
add
rol
clc
lea
add
add
lea
add
inc
clc
dec
mov
shll
popa
add
dec
ds
dec
ret
clc
sti
dec
jne
sub
dec
mov
add
add
add
das
fs
idivb
fs
aaa
xchg
push
xchg
pop
mov
mov
mulb
add
add
mov
dec
frstor
add
push
clc
lret
pushf
sub
clc
mov
jmp
pop
xchg
in
or
cmpsb
clc
mov
cmp
jo
add
ret
iret
cmp
stc
sbb
clc
add
clc
imul
clc
xabort
in
xchg
xchg
fstl
add
clc
cwtl
xor
clc
and
fidivs
clc
cmp
or
test
bound
add
mov
mov
add
or
clc
push
add
int
es
or
clc
xchg
inc
clc
inc
add
cs
clc
lahf
loopne
movsb
clc
inc
clc
ret
add
pop
mov
cmp
loope
add
add
clc
sbb
lcall
push
add
int3
adc
add
add
xchg
out
pop
incb
add
movsb
clc
cmc
jle
imul
jno
add
in
mov
notl
add
leave
mov
mov
add
add
add
add
mov
test
pop
xchg
adc
pop
jnp
add
adc
add
lock
in
fiadds
push
dec
sub
pop
loop
fnstsw
in
enter
clc
lea
adc
add
inc
add
pop
scas
inc
clc
mov
add
hlt
xabort
imul
mov
clc
pop
clc
xchg
and
add
xabort
clc
inc
add
pop
testl
add
clc
data16
mov
jae
add
shll
add
clc
mov
add
pusha
add
cmp
clc
pushf
and
add
arpl
add
add
pop
out
inc
clc
mov
add
aam
sub
test
cmp
clc
mov
mov
fsubrl
clc
out
out
or
pop
popf
or
in
and
add
aam
sub
add
out
sarl
insl
cwtl
or
clc
inc
add
loope
cmp
jl
mov
add
jle
dec
xchg
adc
add
push
mov
cmpsl
clc
xchg
icebp
sahf
fidivrs
sbb
clc
adc
add
clc
add
add
ss
add
add
repz
clc
pop
sub
inc
clc
fisttpll
mov
clc
pushf
sub
xchg
hlt
cmp
sub
push
add
inc
add
leave
enter
jg
add
dec
leave
inc
clc
pop
push
jge
popf
sub
adc
add
clc
in
ss
add
sbb
clc
jge
test
out
lods
push
in
sar
add
icebp
out
cmpsl
clc
scas
sbb
xor
add
clc
cmpsl
clc
mov
ja
sub
mov
adc
add
clc
data16
outsl
hlt
cmp
xchg
mov
ret
clc
repnz
mov
clc
jnp
clc
movsb
clc
dec
test
clc
stos
and
add
call
lret
sarl
add
aam
jb
add
imul
sti
mov
clc
lods
push
dec
addr16
cmpsb
clc
xchg
fdivr
mov
clc
and
add
xchg
xbegin
clc
push
ljmp
add
rclb
pusha
add
or
imul
clc
test
add
outsb
push
xlat
cwtl
adc
add
mov
clc
rcl
pop
ljmp
add
or
add
clc
js
movsb
clc
cli
nop
mov
clc
js
and
add
fbstp
decl
nop
int3
and
mov
clc
xchg
jb
add
add
xchg
cmp
clc
daa
clc
sbb
clc
mov
add
fsubrl
aad
add
or
sbb
imul
add
mov
add
add
add
add
sbb
out
call
mov
clc
outsb
stos
shll
add
pop
clc
mov
sar
add
dec
enter
add
clc
mov
loope
push
clc
sar
popa
add
loope
mov
add
test
clc
jne
test
daa
clc
pop
xchg
cwtl
and
add
clc
mov
fwait
xchg
add
and
add
xor
add
es
mov
cltd
add
add
int
pop
data16
push
adc
movsb
clc
jle
cmp
xchg
or
clc
sub
add
fsubs
incl
add
not
popf
mov
jno
add
lret
aam
clc
in
inc
clc
jb
add
popl
add
add
xchg
mov
add
add
add
in
xor
add
xchg
cmp
sub
negl
clc
dec
ljmp
cmpsl
clc
xchg
outsl
xchg
in
int3
out
mov
data16
or
jo
add
clc
mov
test
dec
xor
add
hlt
daa
clc
inc
clc
adc
add
in
js,pt
add
push
add
cmp
clc
int
icebp
xchg
mov
push
xlat
lret
insb
inc
clc
std
pop
or
xlat
xchg
ljmp
out
jo
add
jno
add
ror
ret
clc
negl
push
add
inc
clc
lea
push
mov
sbb
fistps
add
mov
das
xor
sbb
clc
lahf
in
jle
clc
fsub
clc
jg
sbb
add
xchg
push
or
fiaddl
pop
je
clc
std
data16
bound
add
mov
mov
xor
add
clc
push
add
bound
add
mov
sub
push
xchg
mov
fnstcw
jb
add
out
leave
cmpsl
clc
insb
iret
inc
clc
imul
mov
clc
cmp
inc
add
cmp
clc
push
add
add
clc
bound
add
cmpsl
clc
xor
add
add
dec
cmp
pop
std
call
enter
xor
add
repz
add
clc
arpl
add
mov
mov
es
cmp
add
addr16
mov
test
mov
add
clc
cld
xchg
mov
cld
pushf
fistpl
xbegin
sub
jne
pop
xabort
pusha
add
lock
push
outsl
mov
cmp
scas
insb
and
add
clc
xor
add
or
add
jl
outsb
sti
push
pop
je
add
and
add
jmp
lahf
scas
sub
jae
add
rolb
add
mov
mov
clc
add
add
popf
pop
inc
clc
mov
clc
cmp
dec
pop
scas
mov
lods
loop
jbe
clc
repz
pop
fstl
icebp
pop
mov
add
jmp
daa
clc
es
sar
xor
add
fldt
jge
add
rclb
sbb
in
cmp
add
fwait
jl
pushf
xor
add
add
mov
mov
pushf
cmp
add
add
clc
je
or
clc
mov
bound
add
adc
add
iret
loop
cmp
add
in
sbb
cmp
aaa
and
add
clc
psubd
add
add
outsb
xor
add
in
sar
and
clc
mov
aam
stos
xor
add
clc
add
add
pop
stos
jge
jmp
push
movsb
clc
add
add
mov
das
movsl
clc
push
clc
cmp
clc
or
add
jnp
clc
and
add
add
call
inc
add
std
nop
or
add
pop
lret
hlt
jo
add
pop
clc
gs
lret
sbb
mov
clc
sbb
mov
add
cmp
mov
clc
stc
add
adc
mov
cld
mov
sbb
clc
fsubs
clc
pop
and
add
sti
jl
mov
repnz
add
out
lahf
vrcpps
add
rorb
inc
add
stos
sti
xabort
jo
add
fwait
lcall
ret
clc
aas
out
bound
add
mov
push
fldt
addr16
mov
jmp
clc
ds
dec
dec
sahf
sahf
pop
clc
mov
mov
clc
xchg
clc
aaa
stc
ror
cmp
add
sahf
das
fisubrl
push
or
pop
outsb
aam
in
push
add
dec
stos
cmp
add
fwait
bound
add
and
add
add
clc
in
cmp
clc
out
pusha
add
lret
jle
add
ds
clc
mov
add
das
sub
jbe
adc
mov
pop
clc
pushf
pop
es
test
xchg
imul
stc
adc
dec
leave
and
cmc
add
add
mov
add
jmp
daa
clc
pop
sub
cmp
data16
aas
pop
cs
ret
clc
xbegin
pop
in
out
stc
push
add
inc
add
xchg
push
mov
xchg
mov
xchg
aas
test
xlat
mov
pop
inc
clc
popf
pop
and
add
inc
clc
jge
clc
std
inc
add
xchg
scas
pusha
add
popf
test
clc
scas
and
mov
dec
movsl
clc
jnp
add
fcompl
mov
repnz
and
add
adc
add
push
adc
add
clc
xlat
shr
add
add
clc
mov
xchg
add
lret
pop
clc
inc
add
push
loop
push
add
js
arpl
add
clc
lcall
cld
add
add
sahf
sbb
jnp
pop
imul
sbb
add
cmp
cmpsb
clc
xbegin
clc
mov
outsl
mov
pop
movsl
clc
pop
insb
imul
clc
and
add
add
mull
add
add
add
push
getsec
inc
clc
addr16
and
add
sbb
pop
mov
inc
clc
mov
cltd
data16
sti
imul
mov
clc
rolb
or
cmp
leave
sbb
add
xor
add
add
add
clc
or
test
jbe
jb
add
and
add
clc
push
xchg
or
add
cltd
mov
add
loope
cmp
or
clc
data16
push
fistpll
nop
test
cmp
inc
clc
cmp
pusha
add
cmp
in
std
xabort
imul
test
pop
cmp
and
add
cmpsb
clc
data16
mov
testb
clc
xlat
jne
rcll
add
add
lods
es
xchg
jns
repnz
or
clc
test
js
sbb
xabort
clc
adc
clc
lcall
push
push
lea
push
sar
add
adc
add
scas
and
enter
clc
ljmp
add
mov
add
mov
in
stc
cmc
in
push
mov
clc
loopne
sti
xchg
mov
lods
out
out
sbb
clc
mov
add
into
mov
lahf
xor
add
pop
xor
add
std
data16
cmp
or
ljmp
sar
test
clc
repz
sti
sbb
add
or
jge
sar
cmpsl
clc
add
add
cwtl
pop
pop
leave
or
xchg
fdivl
clc
sub
fcomip
and
add
mov
add
and
add
add
push
add
jne
add
sub
push
add
mov
dec
sahf
dec
dec
sbb
mov
and
add
add
add
push
add
ja
clc
push
inc
add
pop
mov
mov
clc
mov
gs
sahf
ds
push
sub
sahf
roll
clc
cli
shrb
mov
clc
jo
add
add
xchg
cmp
dec
fs
inc
clc
xchg
popf
lods
popa
add
inc
add
pop
sub
clc
sbb
aam
mov
xor
fildl
xor
add
imul
clc
adc
clc
push
add
cld
enter
clc
enter
clc
lret
outsl
sar
push
jp
dec
jg
sub
ss
sub
pop
pop
clc
mov
inc
add
dec
ljmp
mov
add
rolb
add
mov
add
jg
clc
jns
mov
outsb
push
in
adc
add
loope
in
aas
and
add
data16
inc
add
cmp
clc
sbb
out
sbb
add
push
insl
xor
add
mov
add
sub
jae
add
add
dec
push
sbb
add
lods
dec
jo
add
add
clc
cmp
add
xabort
clc
xabort
xchg
insl
xchg
cmpsl
clc
jg,pn
add
add
add
clc
arpl
add
clc
mov
mov
cli
mov
in
mov
mov
xlat
mov
push
mov
dec
xchg
cmp
clc
dec
insl
lock
rcl
sbb
add
jne
clc
sub
shl
cmpsb
clc
rorb
add
push
add
out
pop
daa
clc
test
clc
sub
clc
lods
pop
scas
inc
add
jmp
adc
xor
add
add
add
mov
add
push
add
sti
into
aam
and
add
pop
lret
clc
push
gs
dec
nop
repnz
mov
jl
jnp
push
jbe
add
and
push
scas
adc
add
clc
xor
add
clc
or
push
adc
add
and
add
clc
and
add
add
and
add
fwait
push
clc
push
xchg
sbb
and
add
xchg
mov
out
pop
mov
clc
fstp
add
add
clc
xchg
jnp
add
ret
clc
mov
pop
clc
sbb
pop
test
jae
add
add
rcrb
cmc
mov
mov
mov
pop
pop
es
insb
lcall
sbb
daa
clc
mov
cmp
pop
inc
add
cld
fnsetpm(287
clc
in
mov
add
cmp
mov
sar
add
and
xchg
enter
add
arpl
add
clc
adc
cmp
clc
sub
push
clc
mov
add
add
outsb
test
jo
add
xchg
imul
inc
clc
push
clc
lods
cmc
jl
dec
js
popf
stc
adc
add
clc
fidivrl
mov
pop
and
add
imull
mov
pop
test
sub
cmp
sub
clc
sbb
mov
mov
clc
int3
xor
add
das
jp
clc
adc
clc
sahf
adc
add
cmp
adc
clc
lock
add
add
aad
call
mov
jae
add
push
cs
ret
inc
add
gs
cli
or
inc
clc
sub
clc
xchg
ror
xchg
inc
clc
cld
stos
cltd
out
aad
mov
jo
add
int
in
lcall
cmp
clc
cmp
dec
dec
push
xor
add
inc
clc
mov
cmp
add
clc
xchg
pop
loopne
mov
cwtl
or
clc
lret
sub
and
rolb
mov
loop
sub
mov
jbe
out
jmp
xchg
dec
cmpsl
clc
cmc
jo
add
push
add
jb
add
gs
add
es
mov
nop
add
add
add
add
dec
enter
adc
add
in
pop
jecxz
lods
xchg
dec
sub
mov
add
add
clc
jo
add
xor
clc
cltd
fs
mov
add
int
dec
dec
loope
jae
add
call
std
repnz
es
jbe
repz
fildll
scas
dec
inc
clc
xchg
ljmp
add
clc
sbb
out
sar
mov
clc
insl
pop
inc
add
into
mov
adc
add
clc
outsb
mov
clc
xabort
cmp
pusha
add
push
add
out
jbe
clc
mov
pop
mov
and
nop
mov
mov
fists
add
adc
add
pop
clc
dec
or
xabort
cmp
loope
push
mul
clc
push
pop
clc
add
add
add
push
add
in
mov
out
mov
popf
test
and
add
cmp
leave
lea
mov
clc
mov
clc
add
add
push
clc
push
cmp
add
mov
clc
dec
xchg
adc
mov
sbb
jbe
mov
cmp
cmpsl
clc
jnp
add
add
clc
js
cmpsl
clc
add
add
xchg
jmp
addr16
cmpsl
clc
iret
pop
daa
clc
and
add
mov
add
push
mov
cwtl
insl
sarb
mov
hlt
mov
xchg
repnz
mov
lahf
adc
add
jmp
fsubrs
add
inc
clc
sar
loop
cltd
test
or
in
adc
add
add
ret
add
adc
add
mov
cmp
cmc
and
inc
clc
adc
sub
pusha
add
mov
repnz
cmp
clc
aam
clc
jmp
clc
mov
lods
mov
outsl
lret
outsb
addr16
adc
add
add
add
sahf
or
xor
add
fs
add
add
dec
sahf
lahf
mov
clc
mov
sbb
outsl
call
add
add
push
add
sub
mov
add
jo
add
clc
popf
iret
mov
popf
test
hlt
adc
add
add
faddp
clc
lahf
push
mov
xchg
xor
popf
insb
jns
lods
fcmovbe
test
aaa
fcomps
clc
lods
adc
mov
add
sub
clc
cmovns
clc
in
xchg
gs
shr
cmp
adc
add
cmp
adc
add
add
add
cmpsl
clc
imul
clc
adc
add
add
arpl
add
pop
mov
add
clc
pop
mov
jg
add
mov
clc
sbb
add
nop
in
push
sub
add
sbb
add
jle
clc
mov
push
add
sti
in
adc
add
sbb
add
insl
je
clc
xor
add
clc
clc
cmpsb
clc
ljmp
mov
add
add
or
add
cmp
stc
ret
clc
ret
clc
inc
add
push
in
pop
clc
lret
fwait
mov
ret
clc
repnz
add
clc
cmp
jo
add
and
add
mov
clc
mov
add
add
adc
clc
inc
add
mov
cwtl
push
jl
cmpsb
clc
mov
add
scas
cmp
sbb
push
loop
test
popa
add
std
lret
mov
std
data16
jg
sahf
mov
clc
mov
pop
xabort
add
or
cmp
add
faddp
clc
daa
clc
sub
xchg
jo
add
add
xchg
movsl
clc
addr16
mov
clc
sub
mov
xabort
jecxz
sbb
clc
push
repnz
das
test
clc
test
add
add
add
add
add
add
push
push
add
or
testb
add
add
jae
add
add
data16
stos
add
add
jns
clc
lock
fsubs
clc
movsl
clc
cmp
pushf
pop
scas
std
in
inc
add
mov
and
add
and
add
add
jae
add
clc
fs
xor
add
in
aad
call
jo
add
test
push
dec
and
out
or
cs
adc
add
add
xlat
cmp
pushf
adc
clc
cvtpi2ps
add
ret
clc
dec
hlt
push
add
cld
mov
clc
jge
cmp
lock
add
xchg
loopne
pop
cmp
mov
clc
aaa
dec
xchg
xabort
and
add
cmovs
daa
clc
lahf
adc
add
repz
add
aas
xabort
lret
add
mov
daa
clc
push
std
loope
mov
add
mov
cld
stos
jmp
call
adc
add
insb
cmp
add
call
add
clc
or
clc
adc
into
mov
add
push
add
ss
push
mov
clc
in
inc
clc
daa
clc
mull
sub
cmc
push
add
xchg
scas
scas
adc
add
shll
add
lock
lock
add
sub
clc
add
add
mov
clc
jb
add
clc
jo
add
add
cmp
add
mov
jl
clc
mov
cmc
sub
jle
leave
cmp
add
xchg
cmp
out
imul
out
and
fimull
add
cmpsb
clc
push
add
jbe
cmp
clc
rol
clc
pop
sbb
add
loope
inc
add
test
mov
sbb
ret
jno
add
xchg
shr
aam
clc
push
clc
jbe
movsl
clc
jge
sbb
js
push
decb
stos
bound
add
lock
adc
add
clc
sahf
sbb
add
fistl
loope
or
jo
add
aam
adc
add
sub
add
xchg
fldln2
sub
inc
add
cmp
add
cwtl
push
clc
pop
mull
add
outsl
pop
loop
insb
dec
xor
add
add
int3
jbe
mov
incl
add
pop
adc
add
xchg
cmp
jmp
and
add
xor
clc
mov
popa
add
data16
in
lods
push
add
cmp
clc
das
in
dec
mov
fwait
mov
clc
adc
add
clc
clc
add
add
add
mov
add
mov
idivb
clc
sbb
pop
xor
add
ss
mov
xor
add
dec
cltd
shlb
add
mov
add
jae
add
push
cmp
sub
nop
ds
out
cmpsb
clc
fists
ret
clc
cmp
push
clc
or
lods
leave
test
mov
pop
push
cltd
test
mov
clc
loopne
adc
dec
xor
add
push
mov
clc
std
aaa
jmp
cmp
and
add
inc
add
icebp
ljmp
rol
clc
clc
lea
clc
mov
mov
inc
add
aaa
jns
pop
in
pop
cmp
dec
pop
jb
add
daa
clc
and
cmp
and
add
add
jl
mov
test
fdivrl
add
rcr
arpl
add
inc
clc
enter
jmp
loopne
mov
fbld
clc
sbb
add
or
test
test
lcall
add
xchg
xlat
or
jp
add
psrlq
jecxz
sub
adc
add
lret
cmp
clc
jb
add
add
xor
add
inc
clc
or
clc
jecxz
cmp
fisubrs
push
add
pop
clc
aam
clc
outsb
jp
dec
idiv
out
out
mov
mov
xor
lar
add
add
test
add
std
mov
push
xchg
mulb
clc
push
mov
lcall
clc
mov
loopne
sar
clc
and
cmp
clc
cmp
in
or
mov
nop
in
inc
clc
sar
leave
or
fwait
mov
aaa
sbb
add
add
add
add
pop
pop
lea
inc
add
cmp
clc
lcall
inc
add
int
mov
add
dec
and
add
cli
mov
add
add
add
clc
xchg
mov
clc
fs
add
jno
add
add
clc
or
jp
clc
filds
jecxz
mov
cmp
add
xchg
enter
add
jle
int
test
lcall
bound
add
add
fistpll
or
clc
fimull
mov
push
pop
xchg
sub
xchg
and
add
add
out
or
add
add
dec
add
sub
jmp
shld
jle
rclb
scas
clc
push
add
pop
xchg
xor
add
stc
jecxz
addr16
leave
xchg
lods
mov
clc
in
xchg
adc
add
dec
sar
add
lods
sbb
mov
push
add
cmp
cmp
cmp
sub
sbb
clc
push
add
pop
dec
xchg
inc
add
mov
jmp
or
add
and
xbegin
movsb
clc
enter
clc
daa
clc
or
add
inc
add
pop
es
jp
mov
ss
add
mov
push
add
inc
clc
dec
sbb
xor
add
push
ds
add
push
dec
push
mov
sbb
in
pop
clc
jb
add
vsqrtps
add
add
imul
add
add
idivl
mov
out
daa
clc
cmp
clc
dec
ret
clc
cli
pop
in
pop
cmp
jns
jne
cltd
loope
mov
clc
xchg
mov
clc
push
mov
add
add
xchg
pop
mov
popa
add
inc
clc
xchg
lret
call
clc
out
fdivl
cld
pop
or
gs
jno
add
xabort
pusha
add
cmp
pop
cmp
xor
add
aaa
test
aam
mov
into
scas
mov
aad
test
scas
xor
add
clc
icebp
sbb
cmpsb
clc
lret
jno
add
add
push
add
bound
add
incb
xor
add
push
add
cmc
push
hlt
addr16
mov
add
push
add
sti
push
into
insl
pushf
mov
repz
bnd
clc
jmp
vmovntps
add
cmp
clc
sar
sbb
cmp
pop
sub
scas
pusha
add
sti
lods
daa
clc
daa
clc
fnstcw
cmp
add
jae
add
clc
mov
clc
ret
mov
add
add
clc
scas
clc
xor
add
cmp
add
jns
lea
loop
pop
mov
xchg
dec
ljmp
clc
icebp
pop
xbegin
or
icebp
mov
add
add
add
lock
clc
inc
add
shrl
clc
ret
jmp
pop
mov
push
in
iret
or
pop
aam
int
into
popf
xchg
jmp
cli
mull
shll
sbb
inc
add
jecxz
mov
add
mov
clc
ret
clc
push
cmp
push
das
push
imul
or
clc
jne
into
pop
pop
clc
lret
sar
clc
cmp
ljmp
add
cmp
cmp
and
add
clc
cmpsl
clc
loop
mov
rcr
push
scas
out
cmc
sub
inc
clc
cs
mov
clc
add
or
add
mov
add
add
mov
cmp
cmp
or
mov
fstps
cld
loope
lret
adc
loop
pop
jp
in
stos
mov
add
daa
clc
psubusw
stc
loope
sar
add
dec
xchg
mov
pop
insb
lcall
dec
sbb
xor
clc
cli
push
and
add
push
add
leave
fisubs
clc
lock
out
loope
std
sbb
add
fwait
sub
add
jp
clc
sbb
rcrl
in
cmpsl
clc
dec
comiss
add
add
add
cmp
mov
clc
addr16
sarl
adc
add
clc
insl
mov
pop
loope
das
fcmovnb
clc
test
cmp
xabort
lcall
mov
add
add
add
mov
mov
hlt
dec
xchg
data16
lea
popa
add
js
add
mov
clc
xchg
bound
add
push
push
add
clc
int
ds
dec
out
loopne
aas
out
int3
sbb
loop
outsl
fdivrs
loope
leave
xor
clc
in
add
add
clc
pop
or
xchg
dec
sbb
insb
mov
add
vmulps
clc
pushf
mov
push
clc
cmp
dec
iret
jno
add
xchg
outsb
add
fstpl
repnz
cmp
jge
clc
repz
jae
add
cmp
xchg
pop
xor
add
sub
aad
clc
in
adc
add
int3
js
add
rolb
nop
xchg
xchg
sar
inc
clc
fmull
clc
popa
add
inc
clc
testb
popf
inc
add
test
scas
or
movsl
clc
cmpsl
clc
adc
add
lcall
and
add
add
add
lock
clc
mov
sub
xchg
adc
add
add
mov
gs
lret
fiadds
clc
stos
mov
imul
push
push
loope
cmp
xabort
clc
clc
iret
out
mov
clc
jmp
clc
jae
add
add
popa
add
push
add
lcall
clc
sar
push
clc
xchg
cmp
clc
jmp
clc
mov
xchg
fadd
clc
jg
jb
add
xor
add
mov
call
ret
clc
lods
pop
sbb
sbb
jbe
add
pushf
xor
add
xchg
and
and
add
mov
clc
push
jno
add
mov
cld
push
test
sub
lea
add
jp
xor
add
mov
clc
xchg
mov
add
jg
clc
movsb
clc
mov
xor
add
clc
jp
clc
jbe
aam
jl
shlb
pop
sahf
leave
cmp
cmp
push
rcl
xbegin
insl
push
add
test
jl
clc
jge
clc
xchg
push
mov
add
enter
add
xchg
jne
jae
add
add
jne
add
sbb
aaa
xor
add
add
popa
add
das
js
rcrl
add
scas
xchg
fsts
add
add
loope
imul
xchg
out
leave
mov
xchg
push
pop
mov
mov
ret
add
jb
add
add
test
cmc
cmpsl
clc
and
add
pop
dec
push
mov
and
add
test
mov
xbegin
clc
cs
inc
clc
sub
mov
adc
add
pop
pop
inc
clc
enter
cltd
lcall
fsubrp
cmp
inc
clc
mov
test
ret
pop
xchg
sar
loope
lret
jmp
jg
leave
das
push
add
and
cli
pop
clc
insb
mov
std
icebp
xchg
lahf
pop
sub
repnz
out
push
lods
stos
sbb
jns
add
fsubs
and
add
add
mov
add
and
add
imull
cmpsb
clc
inc
add
xchg
ficompl
add
clc
inc
clc
xchg
paddsw
jmp
lahf
jnp
mov
jmp
in
test
sub
adc
add
and
rcl
shrl
and
add
clc
cmp
mov
pushf
mov
dec
dec
popf
mov
std
pop
inc
clc
mov
xor
add
mov
push
cmp
clc
jg
sbb
add
jb
add
gs
aam
cmp
cmp
or
clc
insl
aam
and
add
clc
outsb
outsl
fwait
and
add
pop
mov
cmp
out
aad
xlat
loop
xabort
clc
cwtl
inc
add
push
movsl
clc
or
clc
aam
fwait
sub
stos
sar
clc
lcall
in
xchg
repz
jae
add
clc
mov
add
pop
loope
std
fsubl
mov
clc
push
add
testl
test
pusha
add
adc
add
and
pop
dec
adc
add
mov
clc
add
add
in
js
adc
clc
lahf
aam
inc
clc
out
cld
inc
clc
sub
lods
jno
add
into
xlat
mulb
pop
xchg
cmp
pop
mov
mov
addr16
cmp
inc
clc
mov
inc
add
jp
in
mov
add
push
sbb
clc
enter
push
add
jae
add
pop
jl
out
or
add
sbb
add
xchg
daa
clc
es
daa
clc
jnp
fld
clc
lret
aam
add
cmp
fstp
xor
add
add
mov
pop
mov
loop
aad
pop
push
clc
mov
xlat
clc
mov
mov
out
addr16
jge
xchg
mov
clc
mov
imul
clc
pop
jg
clc
shll
add
add
clc
into
nop
dec
fistl
add
insb
cmp
push
std
sub
cmp
clc
je
push
pop
and
or
in
xchg
sbb
inc
clc
insl
pop
popf
jmp
jecxz
pop
fs
mov
or
cmp
jo
add
test
sub
clc
mov
mov
addr16
sbb
adc
add
push
and
add
add
xchg
dec
mov
add
dec
gs
arpl
add
clc
call
mov
mov
cmpsb
clc
sar
repz
add
add
clc
lret
inc
add
fs
sub
clc
lret
add
add
insl
pop
pop
cmp
shrb
or
push
das
xchg
dec
cmpsl
clc
test
lret
add
add
or
clc
xlat
jg
stc
cli
cmp
add
add
jne
jne
clc
es
fwait
lea
lods
test
mov
loop
cwtl
jb
add
pop
xlat
cmp
add
add
outsl
push
movsb
clc
icebp
mov
clc
cmc
nop
outsl
stc
dec
lock
sbb
pop
icebp
xchg
jge
xor
add
xor
ja
insl
sahf
lods
inc
clc
xor
add
fwait
pop
cs
jo
add
gs
mov
pop
push
lahf
mov
clc
sahf
or
inc
clc
xor
add
sub
clc
mov
lods
popa
add
loope
inc
add
xor
add
iret
addr16
lods
dec
sbb
mov
mov
lock
clc
clc
out
adc
add
add
cmpsl
clc
add
add
add
aad
mov
push
ds
out
cmp
or
xbegin
clc
inc
clc
lcall
mov
clc
dec
jecxz
mov
mov
add
lock
iret
stc
mov
jb
add
add
out
mov
clc
pop
xor
add
adc
add
clc
in
pop
clc
mov
cli
mov
jne
mov
clc
test
clc
push
mov
popf
sbb
aam
add
add
xor
add
daa
clc
sub
fistpll
or
jb
add
push
ja
clc
jb
add
add
clc
sub
push
add
cmp
add
cmp
add
inc
clc
inc
clc
mov
test
jmp
clc
push
ds
pop
jnp
push
insb
push
clc
xchg
add
add
out
jae
add
add
ja
xor
add
add
adc
add
clc
inc
clc
push
push
arpl
add
adc
add
clc
pop
cmp
bound
add
pop
cmp
dec
popa
add
pop
inc
add
sbb
pop
aad
jge
fmul
jno
add
push
js
inc
add
mov
dec
sbb
fs
sti
ds
adc
add
clc
jecxz
add
add
add
fimuls
xchg
lret
adc
add
cmp
clc
cs
adc
add
cmp
cmp
clc
fs
xor
add
xlat
fsts
cmp
add
hlt
mov
clc
jge
mov
xchg
cmp
add
or
sbb
clc
cld
cwtl
sbb
add
clc
stos
dec
mov
clc
xor
mov
fdivr
fstpl
sar
std
fcompl
xchg
outsl
cmp
add
ret
sub
enter
mov
dec
pop
push
std
push
add
hlt
xor
add
clc
push
pop
lods
gs
imul
in
rorl
jp
pop
jbe
gs
pop
gs
push
jmp
add
cmp
out
test
mov
cli
dec
in
rolb
clc
test
scas
nop
stc
loope
stc
ljmp
cld
ja
xor
clc
iret
jl
add
aam
in
or
mov
mov
scas
mov
add
dec
data16
mov
popf
jnp
xchg
xbegin
clc
adc
add
lret
call
clc
nop
aad
clc
sbb
clc
or
adc
add
add
add
add
ss
add
sub
adc
add
xchg
movsb
clc
loopne
inc
add
mov
add
mov
clc
pusha
add
stos
insb
int3
inc
add
jmp
clc
xchg
in
jle
add
sbb
pop
dec
cmp
add
cmpxchg
gs
add
add
and
add
clc
cltd
fadd
clc
pop
push
inc
add
enter
add
push
add
jne
add
imul
js
filds
jno
add
jg
add
cmp
insb
pop
sub
ret
cmpsl
clc
mov
movsb
clc
jb
add
lock
jbe
pop
stos
ja
add
call
add
cmpsb
clc
mov
cmp
js
cmpsl
clc
dec
cs
test
jae
add
clc
mov
add
mov
mov
jl
clc
cmp
into
jp
gs
jmp
cmpsb
clc
mov
clc
stc
xchg
xchg
push
bound
add
inc
clc
jb
add
jno
add
add
clc
mov
cmp
add
in
mov
add
mov
imul
push
or
jnp
inc
clc
dec
inc
clc
xlat
gs
or
ficoml
clc
insl
cmpsl
clc
inc
clc
js
clc
xchg
add
ss
xchg
pop
and
add
add
pop
xor
add
pop
add
sar
or
clc
imul
cmpsl
clc
outsb
aam
inc
clc
out
jg
mov
jne
add
cld
pop
clc
dec
imul
bound
add
add
add
repz
call
inc
add
mov
add
push
inc
add
add
add
fisubs
add
mov
clc
mov
pop
add
add
pushf
pop
je
add
test
xchg
loope
and
add
inc
clc
cmp
clc
xchg
out
push
es
mov
or
outsb
sbb
clc
nop
fidivrs
mov
xchg
lret
add
and
add
shr
cmp
ds
dec
shrl
add
cli
test
pop
inc
add
call
clc
cmp
notl
hlt
fsubrl
clc
test
dec
insl
mov
icebp
scas
in
add
add
push
add
je
out
inc
add
and
add
add
addr16
pop
jbe
inc
add
dec
lods
mov
in
scas
cs
nop
clc
xchg
movsl
clc
sbb
es
in
or
xchg
cltd
inc
add
repnz
clc
pop
mov
clc
sar
adc
xor
add
lcall
add
outsb
scas
leave
lock
add
dec
sahf
and
add
add
add
gs
fucomi
hlt
sub
clc
cmpsb
clc
movsb
clc
dec
or
xchg
mov
pop
xor
pop
or
clc
pop
lods
sub
pushf
mov
clc
cmp
clc
and
add
clc
es
js
add
cmp
and
add
add
pop
mov
sbb
imul
jo
add
pop
clc
hlt
and
add
mov
es
sub
out
push
fwait
stos
filds
add
xchg
add
add
inc
add
jns
mov
add
adc
clc
shll
add
sbb
popa
add
cs
xabort
mov
pop
ret
clc
dec
fcmove
dec
cmc
push
jb
add
xchg
out
je
fs
push
clc
clc
adc
add
mov
sub
add
addr16
out
inc
clc
nop
aad
jne
clc
jae
add
add
mov
test
clc
xchg
outsl
sbb
clc
ret
or
clc
ja
pushf
ficomps
clc
dec
xchg
xor
add
sub
clc
pop
popa
add
push
add
xchg
lods
xchg
pop
pop
imull
lea
add
adc
pop
cmp
xor
add
clc
mov
aad
hlt
dec
cmp
sub
sub
clc
fadd
clc
nop
cmp
add
sbb
scas
mov
test
sbb
add
inc
clc
clc
movsl
clc
push
add
in
jne
clc
xchg
add
xchg
sbb
clc
sub
fimull
gs
fidivrl
pop
sahf
pop
clc
jbe
pusha
add
repz
clc
add
dec
aaa
gs
jns
test
sub
add
push
add
add
dec
lcall
es
das
dec
dec
jne
loope
xor
jp
pop
arpl
add
cmp
fisubl
xbegin
add
int3
inc
clc
popa
add
dec
push
add
sbb
add
aad
clc
mov
clc
jmp
stos
cmp
adc
add
or
jmp
ret
clc
out
push
push
cmp
jno
add
out
jne
jg
data16
enter
clc
movsl
clc
pop
clc
pushf
inc
add
clc
rcll
add
test
or
mov
xchg
xchg
ss
and
cmp
add
cld
push
sbb
push
add
data16
xchg
add
add
xchg
lahf
push
add
inc
add
mov
jae
add
mov
add
imul
add
and
add
add
dec
pop
push
sahf
sahf
pop
pop
adc
add
add
add
arpl
add
add
inc
clc
js
loope
bnd
add
ljmp
add
dec
xor
add
add
and
add
clc
push
dec
and
add
xchg
ljmp
inc
clc
aaa
inc
add
pop
jne
pop
mov
test
fsincos
and
add
or
aam
clc
aad
clc
mov
mov
sbb
add
sub
add
or
mov
jp
sbb
cwtl
sahf
xabort
pop
clc
test
icebp
addr16
insl
inc
clc
xchg
push
mov
mov
xchg
jae
add
mov
popf
mov
add
add
jg
add
rcrl
adc
add
add
jo
add
and
add
test
and
add
test
lret
adc
add
xor
add
lea
sub
xchg
sbb
je
jle
add
add
mov
dec
sbb
in
mov
add
arpl
add
clc
ss
insb
outsb
lods
mov
xchg
dec
or
add
sbb
mov
xor
lods
push
add
sbb
aas
ja
clc
dec
mov
add
clc
out
dec
or
add
or
clc
mov
imul
clc
pop
stc
pop
clc
mov
cmpsl
clc
mov
or
xchg
mov
sub
clc
into
popa
add
test
jmp
push
popf
icebp
cmp
mov
cs
cmp
sbb
push
add
daa
clc
fimull
clc
sub
aaa
add
add
clc
or
add
addr16
mov
add
clc
dec
adc
add
add
dec
fmull
jg
cmp
clc
mov
cmp
inc
clc
std
clc
mov
add
lcall
cmpsl
clc
push
clc
mov
clc
cld
lahf
inc
add
lock
cld
lahf
lahf
leave
int3
push
int
rcll
test
jp
jno
add
or
clc
and
add
add
xchg
push
add
mov
add
push
lods
jno
add
xbegin
sub
and
add
add
clc
dec
mov
icebp
sbb
clc
sub
rolb
add
aas
or
fs
sub
into
outsl
jl
add
fdivs
clc
inc
clc
jbe
idivl
add
clc
sbb
ret
clc
ja
in
and
add
clc
add
add
int3
test
clc
sub
outsl
fdivr
leave
mov
mov
add
add
xor
add
clc
das
dec
inc
clc
sbb
clc
mov
imul
add
ja
cmp
je
ds
xor
add
arpl
add
add
add
imul
jmp
pop
pop
mov
clc
icebp
loopne
xchg
pop
push
add
std
add
lock
adc
add
fwait
xchg
jmp
clc
cmp
xor
add
cmpsb
clc
pop
mov
add
clc
adc
clc
push
add
adc
add
rorl
je
xchg
and
add
add
add
xor
clc
in
sti
clc
fs
xor
add
sar
sbb
xchg
sar
inc
clc
xchg
das
push
add
push
add
popa
add
or
je
add
sbb
add
add
or
clc
mov
fs
out
adc
add
push
xabort
shr
cli
sar
clc
xchg
or
clc
pop
popa
add
int3
jp
push
add
ja
adc
add
add
add
push
inc
add
xchg
setno
jg
icebp
push
add
aam
add
xor
add
add
fcompl
fists
add
xor
add
clc
clc
dec
adc
outsb
jecxz
xchg
pop
jle
push
add
mov
dec
shlb
sbb
adc
add
mov
clc
sbb
inc
clc
jmp
clc
pusha
add
inc
clc
sbb
add
add
add
clc
inc
clc
insl
shrl
mov
jb
add
clc
or
add
sar
cmp
clc
xchg
pop
xchg
sar
sarl
pop
cmp
pop
xor
add
es
rdmsr
add
inc
clc
cmp
clc
push
arpl
add
fisubrs
push
xor
cmp
cmp
add
push
shlb
add
jo
add
add
or
cwtl
mov
push
clc
into
std
stc
mov
clc
rsqrtps
add
push
mov
mov
add
inc
clc
pop
mov
add
stc
xor
add
clc
out
cmc
push
add
mov
insl
repnz
cmp
lahf
sbb
add
add
add
clc
add
add
es
sbb
pop
push
clc
lea
movsb
clc
push
push
stos
scas
test
push
sarl
rcll
inc
clc
fimuls
lcall
clc
jl
stc
mov
or
pop
clc
xbegin
out
aad
sbb
add
push
add
iret
cs
add
divl
add
xabort
add
pop
clc
pop
xchg
cmp
sti
int
clc
aaa
scas
pop
outsb
pop
pop
insb
pop
out
aas
sti
aaa
push
add
es
sbb
add
add
inc
clc
sar
clc
cs
cs
outsb
ss
adc
inc
clc
jne
jnp
jl
clc
sbb
es
xchg
xabort
xchg
ljmp
sbb
add
xchg
xchg
pop
pop
clc
xchg
xabort
and
add
add
mov
clc
dec
push
and
lods
scas
jae
add
clc
push
xchg
sahf
sbb
mov
sbb
fdivrl
add
enter
call
clc
test
push
loopne
lods
dec
out
mov
loope
imul
adc
add
adc
add
imul
push
add
cli
xchg
mov
clc
pop
clc
mov
add
cltd
jle
xor
add
add
mov
pusha
add
gs
cmp
push
inc
add
mov
fsts
add
out
sub
add
jg
sub
out
add
add
cmp
push
clc
lcall
in
rcrb
add
cli
push
fisubrs
clc
setle
jae
add
insb
mov
pop
mov
filds
add
ret
nop
mov
xchg
lcall
sub
push
add
sarl
clc
pop
clc
push
add
arpl
add
add
clc
shll
add
ss
clc
xchg
filds
inc
clc
cs
stos
adc
add
adc
aas
add
add
clc
cmp
stc
hlt
iret
xchg
scas
jge
mov
xor
add
add
lret
mov
es
inc
add
fimuls
mov
and
fisubl
clc
lods
ss
add
add
clc
mov
movsl
clc
cmp
add
notb
clc
sti
in
sldt
add
mov
pop
dec
push
add
lret
add
mov
inc
clc
xor
add
add
push
add
in
sbb
aaa
dec
cmc
scas
fstl
xchg
jnp
clc
repnz
clc
loop
mov
lcall
cld
adc
scas
cmp
outsb
mov
add
adc
add
dec
and
add
push
mov
out
pop
clc
adc
clc
pop
imul
pop
aas
adc
add
clc
out
mov
push
jb
add
imull
clc
scas
xchg
xchg
iret
mov
add
add
or
and
add
pop
jns
clc
shlb
add
cmc
vmaxps
clc
repz
pop
repnz
and
add
vmovlps
add
jmp
leave
mov
push
daa
clc
cmpsb
clc
call
repz
clc
and
add
cmp
add
and
add
xor
pop
movsl
clc
mov
push
pusha
add
push
dec
enter
add
cmp
fstp
iret
repz
xabort
sbb
arpl
add
pop
test
add
jno
add
add
sbb
clc
mov
or
roll
add
out
xor
add
xchg
or
sbb
insl
sahf
cmp
ja
xchg
scas
stos
jecxz
jge
clc
mov
add
cmp
adc
add
js
cmp
dec
push
mov
insb
push
clc
or
add
sbb
jbe
mov
add
push
cmp
add
hlt
dec
jecxz
fcomps
pop
das
mov
add
inc
add
add
add
mov
add
cmp
clc
xabort
out
data16
fst
leave
aad
clc
jae
add
repnz
add
add
mov
leave
ss
clc
mov
add
lea
add
add
xabort
jmp
clc
cmpsl
clc
pop
clc
push
or
push
and
add
lea
into
imul
and
add
sar
stc
push
add
add
fcmovnbe
mov
mov
mov
addr16
xchg
mov
fdivrs
mov
add
jne
clc
test
sti
mov
rclb
add
daa
clc
pushf
shr
and
add
mov
pop
clc
mov
cmpsl
clc
push
add
sbb
clc
dec
movsb
clc
cmp
mov
outsl
adc
add
add
test
add
add
xor
lret
js
add
or
adc
call
cltd
insl
pop
hlt
clc
int
add
mov
pmaxub
add
pop
popf
mov
flds
add
push
mov
int
sub
into
dec
mov
add
jnp
sbb
fnstenv
es
adc
add
clc
or
clc
dec
jno
add
out
cmp
clc
mov
and
mov
dec
xchg
aas
cmp
clc
jle
add
in
loopne
cmp
adc
sahf
xor
xchg
push
add
mov
cmp
stos
push
clc
addr16
clc
repz
test
jp
ljmp
sbb
jg
lods
addr16
adc
jb
add
pop
call
add
mov
clc
lahf
outsl
jb
add
mov
nop
aaa
push
add
mov
repnz
imul
ret
add
flds
add
fisubl
clc
sub
clc
jge
lods
daa
clc
sub
mov
pop
and
sar
add
in
push
add
add
add
add
push
lcall
incb
jge
clc
bound
add
sbb
clc
loope
std
enter
popa
add
stos
call
fidivl
cmp
inc
clc
and
add
xor
add
decl
push
clc
sbb
cs
rcll
add
cli
adc
add
mov
je
clc
cmp
push
jecxz
push
mov
clc
mov
add
mov
in
cmp
add
dec
and
add
xlat
xchg
push
add
dec
push
popa
add
or
add
mov
add
enter
add
add
mov
add
mov
add
mov
sub
stos
cmp
cmp
clc
add
add
leave
fbld
add
pop
sub
sbb
clc
cmp
clc
cmpsb
clc
fstpt
in
add
add
clc
add
add
jnp
out
sbb
add
dec
mov
push
sub
clc
push
add
nop
je
std
mov
js
insb
inc
add
lods
dec
aam
clc
cmp
fmuls
scas
inc
add
pop
lcall
stos
add
add
add
cwtl
lods
push
int
jecxz
scas
jp
je
dec
test
adc
int
pop
clc
imul
xor
add
and
stos
mov
cmc
mov
add
or
add
jbe
mov
out
fisubrs
cld
push
call
sub
add
imul
xchg
cli
jg
or
mov
mov
dec
roll
add
cmp
add
insb
inc
clc
adc
add
add
addr16
cltd
lock
mov
sbb
rolb
add
cmpsl
clc
xabort
in
cmc
std
dec
fstpl
clc
xlat
std
xor
add
add
or
repz
push
test
cmp
inc
add
mov
add
mov
xor
add
xor
add
mov
aam
clc
push
add
mov
jnp
add
mov
fcoms
or
adc
clc
sub
in
sub
jbe
clc
mov
gs
in
sub
sar
cmp
clc
mov
loop
mov
data16
fs
ss
lahf
sub
dec
inc
clc
add
fbld
add
clc
mov
add
aam
pop
jne
xchg
test
jl
shl
clc
xchg
sub
add
add
fsubs
add
sbb
int
clc
cmc
loop,pt
dec
mov
push
push
clc
mov
add
xor
add
faddl
cs
or
stc
aam
sbb
add
pop
xchg
data16
xor
lret
fdivl
add
or
test
es
out
mov
jns
cmp
loopne
dec
adc
add
cmc
es
scas
imulb
cmp
clc
mov
add
gs
pop
jmp
data16
mov
add
test
adc
add
and
add
dec
cmp
clc
aas
addr16
test
ljmp
adc
add
sbb
sub
sub
xor
mov
pop
or
dec
push
add
scas
outsb
pop
mov
cltd
mov
leave
nop
testb
pop
jl
xchg
rcrb
sahf
imul
add
lods
adc
add
pop
sbb
inc
add
fisubl
mov
cmp
call
jbe
push
push
add
bound
add
add
add
jge
clc
lods
jo
add
add
add
clc
push
push
add
xchg
iret
xor
mov
shlb
add
mov
popf
and
int3
scas
pop
icebp
rcr
push
fcoms
stc
int3
sar
or
clc
pop
pop
clc
das
rorl
mov
inc
clc
adc
xor
add
and
mov
add
or
hlt
fwait
mov
add
cmp
xlat
incl
sar
add
rorb
pop
dec
fnstcw
rcrl
out
lock
push
clc
mov
lcall
int
pop
shl
popl
inc
add
std
jecxz
sbb
call
add
add
pop
or
lods
into
xlat
and
pop
imul
scas
mov
push
add
enter
fwait
xchg
pop
nop
xchg
aad
clc
mov
add
and
add
mov
mov
dec
bswap
sub
cmc
fmuls
clc
out
mov
lahf
sub
xbegin
imul
add
je
clc
ja
cmp
dec
icebp
loop
lcall
pop
inc
clc
fstpt
add
clc
xor
clc
sar
lods
push
test
dec
and
pop
test
insl
dec
inc
add
and
add
clc
mov
mov
stos
pop
pop
insb
clc
cld
xor
clc
sar
clc
sbb
mov
inc
clc
rolb
lcall
roll
add
cli
out
push
arpl
add
clc
jae
add
mov
repz
cli
sub
add
clc
push
xor
add
clc
fistpll
cmp
and
jl
add
pusha
add
repnz
hlt
adc
jne
xchg
movsb
clc
cmp
mov
sub
jns
xchg
mov
mov
mov
jbe
sub
add
mov
and
lock
mov
add
mov
add
push
add
js
lcall
mov
add
clc
add
add
in
loope
pop
in
mov
clc
cwtl
bound
add
clc
call
mov
mov
xbegin
pop
inc
add
jae
add
mov
pop
pop
jmp
mov
adc
cwtl
cmp
xchg
ljmp
shrb
cmp
add
xchg
addr16
adc
add
add
leave
mov
addr16
fcmove
mull
mov
fstps
aaa
cmp
add
and
add
add
inc
clc
ret
clc
add
mov
add
fcoms
add
mov
push
xchg
cmp
add
cmp
cltd
aas
popf
shll
mov
mov
add
xchg
popa
add
fwait
xor
add
clc
das
push
mov
gs
dec
xlat
xchg
push
push
add
add
add
push
enter
clc
shr
push
jbe
clc
mov
pushf
aaa
imul
add
cmp
xor
sti
sub
mov
add
mov
cmp
jae
add
push
repz
clc
aad
call
clc
call
inc
add
data16
adc
clc
clc
insl
dec
add
cmp
add
aad
add
add
xadd
fbld
or
adc
add
nop
sub
clc
cmp
xchg
sub
cmp
addr16
jp
mov
clc
jmp
cmp
add
add
adc
stos
add
clc
push
xbegin
pop
repnz
inc
clc
std
inc
add
push
push
xor
add
inc
clc
aad
loop
gs
loopne
push
js
pop
out
in
pusha
add
cmp
jne
add
xchg
adc
add
test
js
mov
add
lods
enter
mov
dec
out
nop
data16
pop
test
add
into
cs
aas
mov
xlat
add
jp
inc
clc
adc
add
and
add
js
jnp
clc
movsl
clc
pop
mov
mov
clc
cmp
outsl
add
add
add
roll
test
lahf
sub
fiadds
add
push
mov
jo
add
xor
add
sar
sar
outsb
pop
add
add
cmp
jmp
outsb
cmp
int3
inc
clc
jle
mov
add
pop
xchg
mov
clc
fucomi
dec
aaa
test
add
xor
add
dec
lea
add
repnz
pop
mov
adc
xor
add
add
js
xor
aaa
and
add
or
pop
jae
add
add
mov
hlt
enter
int3
cld
or
clc
in
es
mov
cmp
sub
add
add
inc
add
es
mov
add
mov
leave
mov
inc
add
and
add
sub
cmp
mov
clc
clc
addr16
jg
clc
jmp
lods
inc
add
pop
jno
add
jle
add
cmpsl
clc
lahf
sbb
mov
clc
xor
add
mov
clc
fs
jo,pt
add
xchg
stc
fwait
ret
clc
xchg
inc
add
mov
jbe
popf
dec
sbb
pop
jb,pt
add
clc
popa
add
pop
lret
lcall
aas
stos
jg
adc
add
cmc
sar
mov
mov
or
add
sar
and
add
popf
repnz
or
push
add
xchg
jae
add
xchg
dec
loope
sub
add
cmpsl
clc
cmp
jecxz
nop
outsb
push
mov
into
jg
xchg
mov
xchg
aas
enter
clc
inc
add
imul
clc
nop
jb
add
jg
ljmp
mov
add
mov
mov
clc
mov
mov
mov
clc
xor
add
rorl
jecxz
das
loopne
jae
add
add
int
popa
add
pop
repnz
dec
popa
add
test
repnz
outsl
dec
sti
jb
add
mov
lods
mov
imul
mov
sub
add
clc
fwait
test
fdivs
clc
daa
clc
mov
mov
clc
mov
sar
xchg
stos
push
popf
cmp
mov
cli
testb
mov
clc
hlt
jae
add
add
imul
xor
add
dec
insb
or
clc
test
clc
xchg
add
fdivs
add
das
xor
add
clc
sar
clc
mov
jp
add
rorb
imul
add
jns
stos
int
addr16
xchg
sbb
inc
add
repnz
jge
inc
add
fimull
iret
insl
adc
mov
clc
pop
jge
push
dec
xchg
inc
add
sbb
loope
mov
jo
add
jp
cltd
jmp
lea
cld
pop
xchg
xchg
inc
clc
pop
add
sub
leave
rorb
add
dec
js
sti
fidivrl
adc
pop
xabort
push
clc
mov
add
cmp
add
add
xchg
mov
add
add
add
scas
push
fcoml
add
clc
jb
add
add
popa
add
stos
push
imul
ds
jb
add
add
fiadds
add
or
clc
fstpt
clc
fstl
add
sub
xchg
lret
clc
inc
add
mov
mov
clc
pop
clc
inc
clc
push
cmp
jecxz
dec
jl
pusha
add
xchg
bnd
push
add
inc
add
lods
pop
xor
add
push
roll
xchg
loope
out
repz
cmp
clc
mov
jb
add
clc
and
add
clc
adc
or
cmp
pop
daa
clc
out
xchg
call
add
ret
bound
add
add
cltd
mov
aas
sarl
clc
mov
push
clc
and
add
add
out
pop
clc
in
fucomip
and
add
add
mov
cmp
fadd
clc
and
add
lahf
or
add
outsb
xor
add
xlat
jl
push
add
xchg
cmp
add
lahf
outsl
add
add
repnz
bnd
jp
sub
add
clc
jnp
sub
add
xor
clc
lea
add
insl
jecxz
sar
clc
lea
and
add
mov
fwait
adc
lret
push
inc
add
rcr
cmp
flds
clc
mov
mov
lods
or
add
jb
add
hlt
lock
xor
add
clc
insl
divl
mov
clc
dec
js,pt
imul
clc
dec
adc
add
sahf
je
mov
clc
rol
clc
fistpl
add
clc
or
mov
inc
clc
hlt
icebp
stos
xlat
outsb
cmpsl
clc
cs
ret
inc
clc
sub
aaa
sar
add
and
add
add
nop
push
add
add
sbb
mov
fnstcw
std
jo
add
push
mov
clc
daa
clc
insb
data16
inc
add
mov
mov
push
add
or
or
clc
cmp
jns
imulb
add
hlt
cmpsb
clc
jns
repz
pop
mov
add
jp
clc
and
add
test
inc
clc
adc
jmp
add
nop
jns
push
clc
scas
aas
ret
arpl
add
xchg
jg
clc
fistpll
add
or
pop
jg
or
cmp
fwait
sbb
lahf
inc
add
addr16
es
cmp
mov
jb
add
add
inc
add
movsl
clc
stos
lcall
enter
jo
add
clc
cmp
clc
sub
and
mov
pop
mov
adc
add
and
lret
insb
and
add
test
add
add
mov
fs
arpl
add
add
cltd
xchg
ds
clc
push
in
ja
mov
daa
clc
rclb
flds
mov
add
pop
mov
xchg
jecxz
xchg
mov
add
adc
cmp
push
xchg
mov
add
negb
push
add
xchg
cmp
mov
mov
fsts
cmp
pop
xchg
xchg
push
cmp
jecxz
jnp
in
xor
ficoml
movsb
clc
pop
clc
cmp
jecxz
je
out
insl
fsts
sbb
sub
add
sti
or
vmovups
add
repz
clc
lods
xchg
ss
xchg
mov
mov
rcl
loope
sub
clc
clc
dec
aas
cmp
lret
clc
fstl
mov
data16
loopne
cmp
clc
test
inc
clc
xchg
int3
insb
in
cli
enter
add
popa
add
hlt
cmp
shll
jmp
idivl
mov
cmpsl
clc
popa
add
rorb
mov
add
loop
mov
int
pop
xchg
cld
dec
and
add
add
int3
out
sti
and
add
sar
mov
out
jbe
dec
pushf
sub
cmp
out
mov
add
clc
adc
add
add
scas
into
sbb
std
fwait
adc
add
push
cmpsl
clc
lods
mov
xor
cwtl
or
mov
imul
mov
gs
mov
out
mov
jns
fs
xor
add
xlat
fs
dec
inc
add
arpl
add
clc
cs
add
add
nop
sarl
or
clc
and
add
divb
cmp
inc
add
lret
test
jbe
cmp
clc
inc
add
std
ret
clc
arpl
add
add
cmovo
add
xor
clc
jecxz
and
add
imul
fistl
enter
add
mov
add
add
add
clc
push
in
push
add
addr16
adc
add
test
jo
add
add
fdivrp
mov
dec
add
add
scas
cs
pop
test
jb
add
sub
add
lahf
clc
xchg
jmp
cltd
inc
add
jae
add
add
outsl
icebp
lods
xchg
addr16
pop
xchg
pushf
ds
sahf
or
cmpsl
clc
data16
xchg
lret
std
pop
or
sbb
xchg
repnz
inc
clc
mov
clc
adc
add
add
sbb
clc
ljmp
loopne
fs
push
sar
int3
jecxz
repnz
or
add
pop
pop
push
add
mov
clc
fists
insl
rorl
clc
int3
imul
and
add
and
fimull
cmp
out
stos
cwtl
dec
push
xor
js
jns
std
cmp
gs
or
mov
xchg
sbb
mov
xchg
xabort
or
clc
jb
add
pop
adc
clc
mov
mov
int3
lret
clc
pop
dec
xor
add
add
out
mov
pop
in
adc
add
jmp
mov
cmp
fiadds
adc
add
cmpsb
clc
or
adc
add
pop
sarl
adc
add
clc
lea
clc
icebp
test
adc
add
cmp
and
add
mov
inc
clc
sar
add
aam
push
sub
mov
xbegin
or
add
pushl
add
imul
loop
sbb
add
add
clc
mov
ror
cmp
fcompl
add
add
add
jne
sbb
into
mov
add
hlt
pop
ficoml
xbegin
clc
xchg
sbb
clc
aam
xor
add
add
out
cli
cmp
clc
lret
add
add
lret
clc
xchg
xchg
mov
dec
sar
add
add
repnz
int3
fs
and
add
clc
jns
scas
insb
addr16
out
and
add
add
and
fimull
nop
in
mov
add
push
or
add
add
add
mov
inc
add
enter
add
leave
add
add
pop
repnz
repnz
aad
clc
jb
add
data16
mov
sub
clc
popl
dec
mov
clc
pop
imul
add
add
clc
mov
add
gs
iret
in
shll
jo
add
add
ljmp
mov
add
mov
sti
and
add
add
push
add
ret
clc
jge
clc
push
add
std
add
mov
add
jo
add
sar
mov
mov
clc
stc
mov
add
pusha
add
es
movsb
clc
and
add
test
insb
or
clc
test
mov
clc
cmpsl
clc
pop
add
add
sub
lret
cmp
cmp
clc
inc
clc
mov
dec
stos
cmp
add
xchg
or
inc
add
fsubrs
xchg
cmpsl
clc
test
repz
clc
add
add
add
mov
add
add
add
add
add
cmpsb
clc
test
mov
add
insb
adc
add
push
lods
xchg
or
add
and
add
or
cmpsl
clc
dec
lcall
jecxz
xchg
sub
sahf
sub
add
jl
jnp
inc
add
dec
arpl
add
cltd
jmp
clc
rorl
ror
mov
xchg
fcompl
clc
mov
inc
add
dec
lahf
stc
mov
or
mov
lcall
add
clc
or
add
cmp
add
int
add
add
out
int
ss
fadd
clc
mov
sarb
clc
push
add
or
dec
es
push
cmp
pop
fstl
clc
push
clc
pop
pop
cmp
dec
insl
dec
xchg
dec
cmp
pop
sbb
clc
out
push
lret
mov
add
sbb
clc
xchg
call
and
add
clc
outsl
push
add
xchg
pop
int
add
sbb
add
or
and
add
notl
clc
std
sbb
clc
icebp
arpl
add
mov
push
cmp
lcall
add
clc
insl
inc
add
daa
clc
inc
clc
mov
add
or
pop
mov
sbb
mov
add
nop
shll
push
add
dec
pop
ret
clc
cmp
clc
jle
stc
add
add
add
bound
add
clc
cmp
xchg
loopne
push
clc
mov
aam
jecxz
lcall
clc
cmp
clc
in
shrl
cmpsl
clc
and
add
mov
inc
clc
ds
adc
add
add
add
mov
add
mov
clc
add
add
cmpsl
clc
lods
xchg
fsubl
test
dec
pop
nop
movsl
clc
jne
clc
cs
das
xbegin
clc
fldt
scas
loope
and
add
mov
xchg
mov
fcoml
clc
std
xchg
sub
dec
mov
clc
adc
add
clc
ds
mov
mov
add
pop
ret
clc
jecxz
push
add
mov
add
inc
clc
inc
add
mov
mov
clc
cmp
jae
add
add
sub
push
xbegin
cmp
or
ret
clc
add
call
shll
imul
inc
add
loopne
cmp
add
inc
clc
hlt
nop
xlat
xchg
cmpsb
clc
mov
clc
xbegin
push
clc
cltd
stc
aas
bound
add
clc
pop
daa
clc
push
sub
add
add
stos
xchg
lock
fcoml
add
add
hlt
data16
mov
push
fists
add
dec
lods
fistl
add
xor
add
add
push
add
scas
ss
mov
clc
jb
add
jno
add
cmp
sbb
clc
ds
iret
stc
push
fildll
mov
mov
clc
cs
pop
add
add
enter
stos
add
add
clc
in
inc
add
cmp
mov
clc
sbb
clc
push
add
inc
clc
push
clc
cmovo
add
inc
clc
pusha
add
pop
sub
fcomi
test
jle
data16
pusha
add
cmp
decl
sub
add
add
xor
add
mov
clc
push
add
pop
fdivl
pop
xchg
mov
pop
js
jmp
add
bound
add
in
in
loope
add
add
clc
mov
clc
cmp
pop
clc
sarl
out
es
and
insb
nop
mov
add
add
add
or
add
add
imul
clc
out
dec
xchg
popa
add
dec
out
add
add
cmp
scas
jmp
cmp
add
mov
fiadds
add
pop
jmp
mov
sbb
clc
aaa
adc
add
es
jmp
sbb
add
idivb
cmc
pop
cmp
clc
loopne
pop
lods
cli
je
or
clc
cmpsl
clc
movsl
clc
pop
das
push
mov
int
dec
mov
aam
clc
mov
inc
clc
shl
sbb
mov
outsl
icebp
inc
clc
loopne
mov
or
clc
and
add
ficoms
leave
sar
add
jle
xchg
test
clc
dec
xor
add
xlat
mov
dec
pop
add
clc
mov
jbe
ljmp
int3
sub
movsl
clc
push
dec
aaa
wrmsr
add
sbb
xchg
insl
push
jo
add
and
add
sbb
sub
clc
sti
cltd
add
adc
data16
fcomi
mov
clc
cmc
cmp
add
clc
xor
and
add
mov
icebp
shld
loop
jne
add
inc
add
arpl
add
add
shl
clc
xchg
je
adc
add
add
mov
jmp
cld
and
dec
jecxz
pop
sarl
clc
dec
rorb
add
cmp
out
pop
mov
push
ret
clc
aaa
pusha
add
push
add
mov
add
jle
add
ds
add
jns
clc
sub
and
add
test
adc
sub
xlat
ret
clc
dec
jns
repz
add
and
add
ret
clc
lods
iret
fs
aaa
fisttps
dec
test
icebp
popf
mov
je
es
mov
clc
test
clc
sub
clc
pop
or
add
jl
push
stc
arpl
add
add
aaa
fwait
lret
pop
cs
clc
sahf
in
xor
jge
clc
popf
push
jae
add
repz
add
clc
stc
or
dec
adc
add
cmp
cmp
mov
xchg
adc
add
lods
mov
add
clc
xchg
jbe
in
idivl
sar
sub
mov
notl
cmp
clc
cld
mov
loop
dec
lret
stc
push
out
xor
add
push
clc
out
dec
in
mov
ss
test
clc
cmc
xor
add
mov
add
mov
cmc
dec
clc
cmpsl
clc
inc
add
scas
sbb
clc
lahf
loope
cmp
inc
clc
arpl
add
movsb
clc
out
cmp
clc
and
rclb
dec
sub
clc
aad
clc
sahf
cmpsl
clc
push
xchg
aas
sub
clc
test
cmp
add
mulps
add
aas
mov
out
adc
clc
lock
xlat
dec
nop
int3
fbld
add
cmp
mov
je
mov
xchg
add
add
clc
xchg
dec
imul
add
mov
clc
mov
or
jecxz
inc
add
dec
mov
adc
add
in
loop
add
add
dec
mov
jb
add
add
cmp
dec
add
cmp
lcall
inc
clc
xor
add
clc
cmp
clc
sub
push
clc
sub
mov
add
and
add
clc
out
xor
add
loop
and
add
das
dec
cmpsb
clc
push
jnp
clc
sti
scas
pushf
into
and
add
add
dec
outsl
cmpsb
clc
je
mov
sub
pop
test
cmp
sbb
clc
pop
add
add
clc
sub
lcall
aas
cmp
clc
cwtl
dec
je
inc
clc
xchg
pop
dec
mov
popa
add
xlat
outsb
and
add
adc
clc
sahf
fists
push
data16
imul
xchg
dec
stos
shl
push
adc
add
mov
mov
mov
sbb
mov
cs
ss
push
movsl
clc
test
js
add
sarb
clc
and
add
je
in
mov
test
loop
pop
clc
push
add
jle
clc
stc
outsl
cmp
rcrb
std
mov
add
xchg
mov
clc
sbb
add
clc
lods
push
mov
pop
push
loope
mov
ss
pop
add
add
jo
add
clc
into
xchg
cs
sarl
mov
mov
add
sbb
movsb
clc
imul
inc
clc
jl
clc
ja
clc
in
inc
add
clc
cmp
push
xchg
daa
clc
lods
xor
add
jle
inc
add
mov
ret
add
xor
add
add
or
xchg
scas
dec
stos
xbegin
and
add
clc
push
mov
add
clc
mov
sar
push
add
fstpt
clc
pop
loopne
pushf
movsl
clc
call
add
adc
add
cld
pop
sub
jl
inc
add
jb
add
adc
add
jg
jp
vmread
sub
add
adc
add
xchg
adc
and
add
clc
and
add
add
mov
clc
shlb
cmpsl
clc
test
insl
imul
mov
cmp
mov
jns
scas
fdivrl
xor
sarl
iret
cmpsl
clc
sub
clc
insl
mov
hlt
pusha
add
xchg
pop
das
push
in
lcall
add
mov
sbb
jmp
clc
adc
add
clc
arpl
add
loope
je
clc
out
test
cmp
sub
add
icebp
aaa
mov
enter
daa
clc
pop
mov
clc
mov
jp
xor
rol
clc
sub
add
jno
add
add
lods
stos
scas
data16
and
add
clc
mov
cltd
pop
clc
push
add
xchg
pushf
test
add
add
add
xor
add
add
mov
clc
sbb
clc
cmp
lret
add
add
std
outsb
fistps
icebp
pop
inc
clc
ljmp
add
pop
cmp
jg
clc
lock
add
or
jl
add
add
add
cmc
call
add
add
inc
clc
or
cmp
and
add
mov
dec
mov
add
aam
popa
add
inc
clc
mov
cmp
push
add
mov
jo
add
addr16
clc
mov
clc
mov
js
daa
clc
push
add
test
adc
inc
add
push
sbb
add
xor
add
cmp
lock
add
scas
bound
add
add
fldcw
mov
leave
repnz
add
fs
sahf
dec
add
cmc
fiaddl
add
mov
and
cmp
fldcw
clc
ja
mov
hlt
push
add
sub
clc
imul
movsl
clc
inc
clc
push
add
xchg
jbe
scas
pop
clc
sbb
add
push
xchg
jb
add
dec
pop
push
add
mov
clc
loope
push
cmp
add
movsb
clc
push
jge
push
clc
clc
movsl
clc
adc
inc
clc
jmp
ss
in
jge
mov
cmp
push
clc
xor
add
imul
push
sbb
push
clc
mov
xor
add
test
loope
movsb
clc
jno
add
enter
repnz
clc
jno
add
in
popa
add
sbb
ret
clc
jb
add
mov
pushf
pop
clc
jecxz
sub
mov
add
iret
push
jmp
ja
push
aas
in
pop
notb
jae
add
add
outsb
das
daa
clc
xor
add
test
push
clc
insb
push
add
icebp
push
cmp
into
sbb
mov
clc
inc
clc
add
add
add
or
sub
add
mov
sub
clc
std
outsl
notl
add
rcl
mov
in
popa
add
jg
clc
push
clc
inc
add
mov
dec
adc
je
clc
mov
stos
and
push
jns
mov
clc
xchg
imul
enter
dec
pop
xor
add
jo
add
add
add
clc
mov
inc
clc
or
lret
sarb
ja
fdivrl
test
sar
popf
jno
add
add
clc
pusha
add
adc
test
clc
sti
es
inc
add
repz
dec
adc
add
xchg
lret
cmp
inc
clc
test
cmp
mov
popa
add
out
sbb
iret
shr
or
repnz
add
xchg
data16
adc
cmp
lea
inc
clc
push
int
mov
fucomi
rcr
add
fnstcw
fdivl
add
rcrl
add
ljmp
add
imul
scas
add
add
xor
add
adc
addr16
mov
mov
mov
insl
xor
add
add
xor
add
cmpsb
clc
mov
xbegin
and
add
cmp
fisubrl
clc
popf
mov
add
cmc
xchg
push
jp
add
xabort
ljmp
push
clc
xor
add
add
clc
and
fsubrs
add
add
mov
push
sub
push
add
sar
movsb
clc
sub
loopne
lahf
push
fimull
push
add
cld
inc
add
push
add
inc
clc
cmp
imul
xbegin
add
arpl
add
outsb
jmp
add
call
xlat
aad
push
in
jge
xbegin
xor
add
clc
push
clc
into
pop
xchg
popf
push
mov
test
addr16
inc
add
mov
and
add
add
clc
cmp
push
imul
clc
je
add
add
add
jne
test
adc
add
add
cld
pushl
add
clc
sub
movsl
clc
mov
out
push
sahf
sub
lea
add
jb
add
push
clc
repnz
lret
clc
push
add
push
clc
mov
popa
add
jle
repz
ds
lock
shl
clc
push
rcrb
adc
add
add
mov
fucomi
and
nop
aaa
pop
pop
imull
mov
cmpsl
clc
dec
sahf
sbb
and
mov
add
mull
or
mov
mov
push
add
js
cmp
cwtl
mov
shrl
add
clc
stc
rorb
data16
cmp
pop
cmc
ds
clc
push
clc
in
mov
add
nop
mov
clc
adc
add
push
add
bound
add
pop
clc
lret
out
mov
xbegin
push
push
sub
nop
adc
mov
xchg
jns
add
adc
push
add
mov
add
arpl
add
std
pusha
add
push
pop
int
clc
adc
add
aas
lock
clc
clc
fwait
push
xor
loope
icebp
push
clc
bound
add
xchg
jge
ret
clc
mov
inc
clc
int3
ljmp
xchg
xor
add
sub
stos
loop
fnstcw
clc
dec
scas
mov
clc
pusha
add
push
add
imul
dec
mov
clc
es
daa
clc
mov
add
clc
and
add
xchg
inc
add
jmp
clc
movsb
clc
in
shll
cmp
dec
xchg
dec
stos
scas
imul
or
insb
mov
icebp
mov
clc
push
test
pusha
add
jp
clc
pusha
add
out
bound
add
addr16
cmpsl
clc
xchg
dec
bound
add
cltd
adc
add
cmp
inc
clc
outsb
nopl
add
js
cmp
add
adc
add
mov
sbb
add
aam
aam
jae
add
push
add
add
sbb
add
in
jb
add
xabort
xor
add
clc
mov
add
ss
and
add
clc
jae
add
clc
into
loopne
add
add
sub
push
add
shlb
add
push
in
cs
clc
sar
clc
mov
add
dec
mov
inc
clc
xlat
and
add
mov
in
mov
in
and
pop
push
call
fildl
add
clc
mov
or
jge
clc
add
add
clc
adc
add
add
into
cmpsb
clc
and
in
imul
add
sbb
add
clc
movsl
clc
sbb
clc
stos
inc
clc
test
loop
xbegin
xchg
sbb
clc
lock
add
add
add
add
push
movsb
clc
mov
adc
add
lahf
sbb
add
fbld
daa
clc
fadds
clc
mov
arpl
add
js
add
mov
sar
clc
inc
add
dec
jmp
cmp
add
lock
add
out
leave
sub
inc
clc
or
clc
mov
sub
add
ret
pushf
divl
jp
clc
mov
add
int
sbb
lea
xchg
fstps
xabort
incb
add
clc
cld
clc
shrb
testl
in
fildll
out
xlat
adc
add
clc
lods
dec
pop
dec
in
insl
insl
fs
push
dec
imul
negl
addr16
loopne
sub
cmp
ljmp
test
imul
pop
cmp
xchg
js
stos
movsb
clc
and
add
pushf
mov
cmp
lea
add
ja
clc
cmp
out
out
sub
jecxz
xlat
cmp
clc
repz
sub
clc
scas
sti
or
daa
clc
in
sbb
stc
test
clc
jo
add
add
jg
add
addr16
insl
popf
xchg
stos
int
ss
test
test
xabort
clc
mov
add
add
cltd
cltd
in
out
sub
jb
add
mov
cmp
fsubr
push
push
add
mov
mov
add
je
clc
pop
vorps
popa
add
or
add
imul
add
cs
cmp
dec
icebp
rolb
add
and
add
popa
add
fistl
nop
lret
and
add
mov
dec
jns
out
xor
add
adc
add
cmp
add
sub
cmp
pop
xor
add
xchg
inc
add
insl
or
add
xchg
loop
dec
cmp
clc
icebp
sar
cmp
add
add
sbb
imul
sar
dec
push
jge
inc
clc
push
push
adc
clc
loopne
in
add
add
jae
add
add
repnz
adc
imul
or
adc
add
clc
pop
and
out
or
stc
out
jp
addr16
jecxz
add
add
sbb
clc
adc
add
jnp
add
xor
add
sar
iret
mov
clc
xchg
mov
ljmp
mov
xchg
jle
push
ss
add
dec
mov
pushf
cmp
dec
clc
in
mov
pop
mov
jne
int3
ss
push
clc
push
add
cld
sbb
clc
xor
test
add
add
add
popf
fdivrs
fcomps
jmp
add
lret
out
dec
xabort
add
cmp
scas
ja
or
es
xor
add
add
loope
inc
clc
mov
clc
pop
inc
add
push
add
test
int
add
rcrb
leave
data16
es
push
xor
add
stc
cmpsb
clc
comiss
clc
ror
scas
xor
add
clc
jne
jns
add
xchg
cmpsl
clc
notb
add
pop
mov
inc
add
add
scas
repnz
int
xbegin
int3
push
xlat
loopne
add
aas
aaa
xchg
in
and
dec
mov
in
popf
scas
cmp
xchg
test
mov
add
push
inc
add
popf
mov
add
lret
sahf
mov
mov
pop
mov
xor
add
ret
movsl
clc
inc
add
insb
rorb
idivl
push
add
js
add
cmc
cmp
pop
cld
xchg
push
pop
jns
cmpsl
clc
mov
clc
repz
add
clc
decl
cmp
mov
jmp
jno
add
fnstsw
cs
dec
std
fistpll
xchg
jecxz
es
in
jl,pt
add
fcmovbe
sti
xchg
clc
jo
add
clc
and
add
add
add
mov
inc
clc
call
clc
imul
clc
dec
sbb
mov
add
xchg
adc
add
add
loopne
gs
test
lock
dec
and
add
lods
push
cs
push
add
clc
xchg
aas
mov
outsl
add
add
cltd
cs
dec
iret
call
add
clc
push
sbb
scas
xor
add
jo
add
xchg
xabort
clc
xlat
pop
clc
mov
shrb
mov
arpl
add
out
and
cltd
gs
clc
sbb
add
sbb
add
sub
clc
out
shrb
mov
clc
rclb
sbb
clc
ret
clc
insl
xor
clc
mov
bswap
pushf
inc
add
add
mov
ret
clc
paddw
lahf
ja
clc
adc
pop
pop
nop
or
jecxz
mov
sub
inc
add
ret
rcll
inc
add
popf
or
in
and
add
push
clc
and
in
faddl
add
clc
cmp
add
add
adc
add
call
jae
add
sub
add
add
xchg
sub
dec
mov
add
xchg
xchg
sub
clc
movsb
clc
push
shrb
dec
xlat
mov
es
faddl
add
clc
scas
bound
add
mov
add
cltd
mov
add
clc
lahf
mov
clc
sbb
js
clc
mov
sub
clc
jecxz
xchg
xlat
enter
adc
add
fstpl
aad
clc
sbb
clc
outsb
sbb
sub
lret
sub
das
cmc
rorl
push
aad
add
jp
int
sbb
add
xor
add
pop
cmp
add
mov
xchg
pop
jae
add
dec
sar
fbld
and
add
js
jno
add
into
fisubrs
mov
cmp
and
inc
clc
cmp
in
cmp
clc
out
cs
jmp
clc
dec
push
sub
dec
lcall
push
cmpsl
clc
gs
icebp
mov
pop
adc
add
add
inc
clc
aaa
hlt
daa
clc
fwait
cli
int
clc
sbb
clc
out
xchg
jecxz
sub
inc
clc
sub
gs
lret
je
fnstenv
fs
xor
add
add
sar
add
add
add
clc
mov
add
data16
or
xbegin
add
arpl
add
mov
add
clc
xor
add
mov
add
add
aaa
push
sub
clc
data16
imul
add
psubusb
aaa
loop
jno
add
int
push
add
imull
and
repz
mov
lcall
sbb
add
xchg
outsl
outsb
push
add
aam
aad
clc
inc
clc
imul
icebp
jbe
mov
push
dec
cmp
mov
stc
sbb
cli
dec
fstpl
push
clc
inc
clc
pop
xor
add
clc
mov
clc
xchg
loope
std
ljmp
movsb
clc
es
mov
ss
xchg
dec
cmp
clc
in
das
cli
mov
sub
mov
add
mov
bound
add
add
jle
add
mov
add
jo
add
add
sar
pop
mov
xchg
ljmp
mov
js
clc
xchg
js
int
lret
daa
clc
or
ds
fcmovu
xchg
aad
add
sub
add
clc
jb
add
xor
add
add
xchg
test
stc
fcmovnb
clc
sti
adc
add
sbb
add
cli
insb
clc
jne
add
push
add
dec
pop
cltd
es
repz
mov
jns
clc
cmp
ret
sub
clc
hlt
sbb
and
add
test
in
es
int3
clc
mov
sub
push
mov
mov
test
add
add
add
xlat
or
ret
clc
dec
adc
add
sarb
clc
inc
clc
mov
ja
xor
add
aad
mov
clc
lret
in
rclb
repnz
add
clc
jnp
rcr
mov
clc
ss
into
push
lahf
scas
mov
mov
clc
loop
movsb
clc
ds
in
push
add
mov
int3
aad
dec
ret
clc
es
loopne
movsb
clc
push
pop
clc
xbegin
ret
clc
xor
jbe
xor
mov
mov
add
mov
clc
in
push
clc
push
ret
clc
aam
clc
mov
rcll
dec
pop
pop
clc
or
dec
lods
inc
add
cmp
add
dec
inc
clc
cwtl
idivl
add
in
adc
add
jmp
ds
adc
add
in
jb
add
add
sbb
xor
clc
mov
sahf
mov
or
add
lret
dec
xchg
jno
add
xchg
mov
test
bound
add
out
fistps
adc
add
fidivs
add
cmpsl
clc
push
clc
imul
and
bound
add
add
mov
cmp
sti
int3
stos
in
add
add
out
lea
jae
add
inc
add
jbe
and
add
jmp
add
popf
or
push
popa
add
xlat
pop
imul
add
fsts
clc
dec
inc
clc
sahf
pop
jbe
clc
adc
add
add
aad
clc
fdivrl
add
aad
ja
clc
lahf
mov
clc
insl
fists
shr
jg
add
and
add
add
mov
dec
jne
clc
fnstenv
sub
clc
push
mov
cmp
inc
clc
stos
cli
ljmp
jbe
rclb
clc
sub
add
xchg
pop
mov
nop
sarl
loop
inc
clc
lock
iret
sbb
xbegin
jmp
iret
sub
cmp
add
push
clc
repnz
in
adc
add
clc
cwtl
and
dec
popa
add
or
cmc
mov
out
inc
clc
repnz
arpl
add
add
test
dec
bound
add
stos
ffreep
clc
sarb
cmp
jno
add
jbe
add
mov
add
mov
xor
add
dec
pop
cld
mov
clc
mov
sar
add
call
xchg
xbegin
sbb
or
add
dec
out
ret
clc
cmp
clc
outsl
push
add
dec
or
add
loopne
mov
add
cld
adc
add
add
frstor
add
add
fidivrs
pop
mov
sar
jmp
sub
arpl
add
or
and
insl
or
add
xchg
mul
clc
fcmovbe
jp
inc
clc
loopne
jo
add
add
add
cltd
dec
loope
push
jle
mov
add
fnstsw
imul
fdivp
fdivl
jo,pn
add
fadd
clc
inc
clc
or
mov
xchg
mov
clc
jae
add
xchg
cmp
add
add
sbb
add
lahf
outsb
and
jne
adc
add
icebp
dec
mov
clc
inc
add
out
shrb
add
imul
clc
jae
add
mov
sub
and
add
outsl
cmp
data16
lret
inc
add
jb
add
loope
push
add
sub
or
or
shrl
add
pop
scas
ss
pop
clc
fcmovu
xchg
xchg
rorb
incl
add
clc
movsb
clc
hlt
cltd
xchg
cmp
jns
mov
daa
clc
dec
mov
add
cmp
and
add
clc
adc
add
jmp
inc
add
imulb
fiaddl
or
xor
clc
jae
add
add
idivl
xor
dec
or
cmp
push
add
push
ret
cld
test
sar
adc
push
add
jl
clc
hlt
jne
clc
leave
mov
sar
mov
clc
icebp
cmpsl
clc
mov
cwtl
cmpsl
clc
in
divb
or
pop
jb
add
outsb
push
je
jmp
clc
in
mov
clc
loop
stc
jmp
testb
clc
jns
inc
add
push
lahf
shrb
add
xchg
pop
dec
inc
add
mov
jmp
jl
mov
add
mov
mov
xor
add
inc
add
shl
clc
sets
push
sub
add
lret
add
push
add
add
movsl
clc
clc
out
push
pop
xor
jb
add
push
sbb
clc
lock
fbld
mov
sbb
mov
push
add
mov
push
clc
xchg
hlt
lea
sar
pushf
pop
inc
clc
mov
jmp
add
add
jbe
add
popa
add
ret
clc
fcmovnu
lods
mov
fsub
clc
leave
jl
aas
mov
scas
sub
clc
scas
in
mov
insl
cmp
push
inc
clc
cmp
mov
fistl
add
nop
arpl
add
pop
jge
jl
jbe
lock
clc
xor
stos
bound
add
add
xor
add
aaa
mov
arpl
add
push
rcll
jmp
clc
movsb
clc
or
sarl
or
adc
add
mov
aad
add
test
jb
add
xor
mov
clc
push
add
cmp
insl
fsubrl
sub
cmp
clc
cmp
ret
clc
mov
shll
push
mov
clc
cmpsl
clc
add
add
pushf
je
or
add
sub
ds
mov
clc
insl
loop
or
out
pop
clc
adc
add
xchg
bswap
jnp
cmc
push
scas
mov
clc
add
fwait
scas
cmp
sbb
xor
add
std
xor
add
cmp
hlt
push
cmp
add
clc
ljmp
add
lea
add
mov
add
fcomps
mov
nop
xlat
push
lea
add
xlat
push
clc
jae
add
adc
add
add
scas
in
in
dec
loopne
mov
clc
movsl
clc
jmp
clc
and
adc
add
lret
incl
icebp
jle
xor
add
fwait
lock
cmp
cmp
inc
clc
out
ficompl
out
sti
cli
mov
and
add
add
clc
scas
mov
fnstsw
es
and
add
mov
add
xor
clc
lock
scas
cli
icebp
movsb
clc
push
test
add
add
sub
and
add
cs
clc
jae
add
jl
clc
inc
add
stc
negb
in
sub
add
inc
add
in
in
insb
push
jmp
push
sub
xchg
jns
add
jne
clc
mov
cmp
clc
dec
mov
dec
fwait
add
add
add
mov
stos
ds
in
sbb
inc
clc
stos
leave
lahf
jl
mov
clc
add
add
clc
push
dec
sahf
out
pop
insl
pusha
add
cmpsl
clc
push
add
sub
enter
jg
clc
call
pop
jo
add
mov
jp
add
loope
cmc
and
add
pop
xor
add
add
xor
add
hlt
or
sub
add
xchg
sahf
push
add
out
das
jno
add
cmp
add
cmp
in
and
add
add
add
data16
push
je
ja
clc
ds
movsb
clc
mov
and
add
test
and
add
and
add
into
cmp
clc
repz
add
add
out
gs
add
pop
sbb
add
int
clc
incb
and
add
mov
in
mov
add
sub
dec
inc
add
adc
arpl
add
clc
and
lock
add
clc
jmp
add
and
add
clc
adc
add
dec
cld
mov
dec
out
adc
add
clc
jae
divl
add
xor
add
add
pop
pop
das
aas
add
add
rclb
add
mov
add
and
clc
jne
enter
add
imul
pop
popa
add
out
daa
clc
jp
push
add
and
and
add
add
push
clc
cmp
mov
pop
outsl
es
clc
idivl
jnp
mov
jp
das
jo
add
leave
int3
daa
clc
imul
bnd
or
and
lahf
mov
add
jmp
add
inc
add
popf
inc
clc
mov
clc
cmp
clc
jp
movsl
clc
shrl
pop
sbb
clc
jecxz
dec
cld
cmp
fiaddl
xchg
std
aas
out
xor
add
inc
add
pop
clc
dec
outsl
sahf
sbb
xchg
mov
leave
sbb
imul
jnp
stc
and
add
add
clc
xchg
xchg
aad
clc
pop
xor
add
add
out
sub
cmp
add
sbb
clc
adc
pusha
add
push
add
cld
popf
dec
insb
test
dec
je
pop
data16
pushf
je
mov
sub
add
sbb
es
clc
push
mov
jle
in
jg
fs
or
add
add
add
add
add
sub
mov
sbb
add
add
movsl
clc
inc
add
das
movsl
clc
pop
adc
add
clc
lods
roll
clc
jno
add
jmp
lock
clc
adc
add
ret
xchg
sbb
rcl
das
sti
call
jge
mov
in
lret
clc
xchg
ss
ss
adc
jno
add
adc
mov
xbegin
clc
xor
add
cmp
clc
das
imul
aas
jns
std
push
add
mov
pop
std
inc
clc
ljmp
jne
loopne
dec
js
ja
clc
sti
in
aam
jmp
add
cmp
clc
lods
dec
decb
clc
sub
add
popa
add
pop
clc
out
bound
add
add
add
inc
clc
xor
add
pop
push
add
movsb
clc
aas
aam
popl
or
aad
clc
sbb
clc
pop
clc
xbegin
push
add
psllw
ss
clc
or
clc
test
add
adc
mov
pop
pop
sbb
xor
add
cmp
adc
mov
enter
xor
clc
adc
add
push
mov
clc
ds
push
or
add
imulb
add
cmc
mov
clc
mov
dec
xor
add
es
inc
add
sbb
jne
mov
jg
and
add
sar
push
sbb
add
fmull
push
add
clc
mov
pop
xlat
fs
repnz
aaa
push
add
ret
clc
wrmsr
add
jbe
mov
loopne
sbb
xchg
jmp
add
jno
add
arpl
add
clc
cwtl
xchg
mov
dec
fmuls
into
pop
fsubrl
out
xor
add
add
clc
pop
cmp
pop
clc
mov
lcall
fdivl
add
add
pop
pop
popf
and
add
add
add
and
add
jle
jb
add
or
clc
push
dec
mov
xor
add
inc
clc
inc
add
or
das
add
add
push
clc
test
cmp
clc
pop
cmp
inc
clc
mov
add
sub
clc
lret
push
inc
add
sar
fdiv
fldl
add
add
clc
cmp
fcmovnb
clc
pop
repnz
xchg
or
scas
sbb
clc
sti
inc
add
inc
clc
test
add
ret
sahf
inc
add
or
add
add
add
mov
clc
pop
ja
add
add
add
clc
data16
jmp
add
or
daa
clc
cmp
sbb
cld
clc
out
mov
add
mov
add
cmp
incl
add
xor
add
pushf
in
cmp
aaa
xor
dec
mov
js
add
and
add
lret
push
clc
aaa
or
dec
inc
add
roll
add
cs
sahf
add
add
clc
sar
or
imul
clc
daa
clc
jns
add
or
push
xchg
mov
add
scas
mov
enter
ret
add
pop
cmc
inc
add
aas
call
and
add
lcall
add
add
inc
clc
movsl
clc
pushf
stc
mov
jo
add
add
je
clc
fstpl
add
add
clc
outsb
push
and
add
out
cmp
clc
cmp
mov
out
mov
add
add
pushf
cmp
jbe
stc
add
add
sahf
aaa
mov
cltd
clc
fisubrl
sub
loopne
out
jp
dec
pop
pop
imul
dec
or
clc
cmp
dec
enter
add
jp
pop
imul
add
add
jecxz
stc
and
add
je
xor
add
xor
add
or
mov
add
test
fwait
or
cs
inc
add
dec
sbb
clc
xor
add
cmp
clc
icebp
lcall
add
mov
into
mull
xchg
aas
lcall
clc
mov
pop
ljmp
xchg
popa
add
sub
clc
gs
add
add
add
add
dec
add
add
gs
fldenv
out
xlat
arpl
add
xchg
cmp
clc
or
jne
or
clc
lea
shr
xor
add
add
push
in
sti
loop
std
mov
cs
gs
cwtl
cmp
add
clc
testl
nop
mov
add
in
lcall
add
xor
add
add
fs
roll
add
arpl
add
mov
daa
clc
xor
add
and
dec
imulb
xchg
cmp
into
sar
xchg
cwtl
roll
clc
adc
add
into
in
movsl
clc
jle
xchg
adc
add
add
and
ficoms
add
mov
clc
mov
cwtl
pushf
ljmp
pop
data16
sahf
push
sbb
ficoms
add
add
push
leave
std
mov
jne
ss
add
push
add
stc
gs
jecxz
daa
clc
sbb
pop
mov
add
add
test
imul
add
movsl
clc
negb
bound
add
push
sar
sar
clc
or
clc
pushf
cmp
dec
xor
add
mov
mov
test
add
dec
or
clc
dec
cltd
jp
adc
add
xor
pop
clc
cmp
insb
int
fdivrl
jae
add
cwtl
fistl
add
bound
add
clc
cmp
add
cmp
jge
jnp
or
lods
mov
add
imul
stc
out
or
int
sar
clc
int
sbb
add
add
cltd
lcall
xbegin
clc
xor
jl
mov
jne
clc
xchg
jecxz
outsb
xlat
popf
and
add
add
sahf
gs
inc
clc
ds
cmp
mov
add
std
inc
add
test
push
add
shl
mov
mov
add
in
cmp
ret
inc
clc
dec
dec
xchg
pop
pusha
add
into
lret
int
stos
nop
nop
push
or
hlt
pop
sbb
clc
cmp
add
fisubrl
dec
jmp
clc
inc
add
jl
inc
add
pop
clc
aas
adc
pop
adc
add
sub
insl
loopne
cmpsl
clc
cmp
cmp
mov
cpuid
clc
filds
add
push
inc
add
mov
cmp
out
adc
add
dec
push
aas
fidivl
add
cmpsl
clc
adc
clc
lods
pusha
add
xor
add
add
pop
sbb
pop
jnp
mov
pusha
add
ficomps
loop
pushf
mov
clc
cmp
clc
in
das
imul
clc
xor
jge
gs
inc
add
cmpsl
clc
pushf
sar
add
add
mov
mov
mov
and
cli
lods
sahf
pop
mov
test
outsb
cmpsl
clc
cmpsl
clc
sub
xor
mov
clc
fisubrl
mov
lods
pop
push
xchg
or
add
sub
mov
add
inc
add
shll
add
xchg
cmp
pop
adc
add
popa
add
adc
add
add
lods
popa
add
push
add
xchg
leave
mov
jp
add
inc
add
mov
mov
adc
add
cmp
cmp
lock
imull
push
add
sti
daa
clc
mov
lret
clc
movsl
clc
sbb
jle
int3
into
jp
clc
sar
pop
cmpsb
clc
rcrb
cmpsb
clc
mov
leave
cmp
das
stos
jnp
add
push
sub
xchg
adc
add
adc
add
xchg
lock
clc
or
adc
add
clc
add
dec
cmp
clc
jns
leave
push
or
mov
add
push
mov
sub
inc
clc
insb
mov
add
mov
add
pop
mov
ds
mov
inc
clc
cmp
ret
xor
add
mov
clc
cmpsb
clc
into
es
outsb
mov
push
js
aas
loop
add
add
push
add
fs
mov
clc
cmp
test
sbb
stos
sbb
dec
xchg
dec
lret
lea
clc
popf
dec
xor
add
in
dec
iret
lods
mov
clc
rcrl
shlb
add
or
xchg
xchg
jmp
inc
clc
adc
fnstenv
add
add
push
sbb
popf
xchg
arpl
add
clc
mov
pop
popf
xbegin
bound
add
repz
arpl
add
adc
add
lods
or
xabort
add
xlat
adc
add
add
mov
pop
lret
sbb
jb
add
je
push
adc
add
clc
ds
jno
add
add
cmp
test
pop
clc
add
add
sbb
add
das
sbb
arpl
add
clc
je
clc
ljmp
mov
cmp
pop
mov
jnp
sbb
add
mov
ficoml
jle
pusha
add
lea
add
nop
aad
gs
xor
add
xabort
jnp
push
mov
clc
adc
add
add
cpuid
clc
pop
cmpsb
clc
clc
vmovlps
add
arpl
add
pop
and
add
cmp
add
adc
in
add
mov
xbegin
movsb
clc
or
in
jecxz
pop
dec
cld
xchg
pop
xor
fnsave
add
add
jp
scas
cmp
clc
cmp
clc
jle
clc
daa
clc
imul
inc
add
xchg
in
outsl
pop
lea
mov
fimuls
jbe
cmp
add
je
sbb
add
shlb
add
lcall
imul
push
add
push
jg
clc
push
cmp
add
mov
sar
push
add
dec
out
xor
add
popf
insl
stos
jl
clc
inc
add
cmp
sub
out
ljmp
clc
cmp
fcomp
inc
add
inc
add
mov
add
push
rcll
enter
add
add
lock
clc
sub
cmpsl
clc
inc
clc
int3
mov
inc
clc
data16
sarl
jmp
mov
clc
mov
push
mov
and
add
clc
mov
mov
mov
mov
add
clc
add
add
jge
clc
jl
clc
mov
sbb
add
add
inc
clc
aam
pop
sti
xabort
ficoml
jecxz
ljmp
mov
es
in
inc
clc
mov
mov
clc
push
movsb
clc
aas
lods
mov
cld
rcl
mov
add
add
and
or
loope
xor
in
mov
cmc
lea
adc
add
mov
jl
hlt
ss
add
add
dec
pop
out
je
clc
clc
in
leave
mov
jo
add
cli
imul
mov
jle
clc
pushf
data16
scas
repnz
xbegin
add
add
mov
add
ljmp
clc
pop
ret
clc
xchg
mov
clc
cltd
aas
push
lahf
add
add
mov
mov
sgdtl
add
add
pop
push
add
cmp
test
xchg
cmp
add
das
inc
add
pop
cmp
sahf
test
cmp
add
adc
add
aaa
or
or
test
cmp
clc
ret
clc
lea
mov
movsl
clc
adc
add
push
clc
insl
pop
mov
lret
clc
nop
outsb
or
add
repnz
cmp
jle
clc
cs
add
pop
out
daa
clc
pop
jmp
adc
add
xchg
jo
add
clc
jg
clc
xchg
inc
add
in
jb
add
clc
popf
ret
cvtdq2ps
mov
or
iret
push
scas
inc
clc
or
cmp
clc
cwtl
and
add
fistpl
push
and
add
mov
sub
add
addr16
push
add
add
push
add
ret
clc
cmp
int
add
add
roll
inc
add
clc
lock
adc
add
add
clc
mov
add
aas
mov
in
fwait
clc
add
add
pop
stc
mov
jae
add
cltd
pop
dec
mov
dec
push
add
cmpsb
clc
iret
daa
clc
addr16
mov
jecxz
jo,pt
add
insb
inc
add
dec
sub
add
clc
insb
in
mov
add
popf
jae
add
std
out
jmp
mov
add
clc
xbegin
add
or
clc
clc
adc
add
push
clc
bnd
mov
xchg
push
fstps
add
push
in
add
scas
mov
sar
ja
jmp
clc
sbb
out
jae
add
xchg
fwait
mov
shlb
sub
adc
add
add
pop
sbb
aaa
sbb
add
and
add
popa
add
push
add
sub
add
pop
add
push
pop
mov
dec
pop
jge
dec
and
add
xor
clc
mov
adc
add
clc
loope
leave
inc
clc
pop
aad
lea
clc
outsl
inc
clc
sbb
clc
push
sbb
add
fwait
or
mov
or
dec
xor
add
mov
mov
clc
sub
popa
add
mov
imul
pusha
add
out
xchg
fwait
dec
dec
mov
jge
clc
xchg
nop
xor
add
fwait
pusha
add
test
aaa
enter
add
js
lods
pop
clc
jge
add
ljmp
data16
mov
add
lret
je
xor
add
mov
into
jle
add
cmp
pop
outsl
cmp
jmp
clc
call
inc
clc
lods
and
add
clc
fs
xchg
scas
cmpsb
clc
jno
add
btr
add
add
cltd
cmp
clc
out
dec
mov
xabort
xchg
cmp
jae
add
push
clc
int
outsl
adc
add
add
add
sahf
jmp
rcrb
int3
or
loopne
fisttpl
mov
clc
hlt
push
add
adc
add
aad
mov
add
aas
xlat
push
addr16
xchg
push
mov
clc
sub
clc
cmp
or
cmp
clc
daa
clc
aaa
ret
clc
int
fabs
clc
xabort
int3
data16
in
jb
add
clc
push
enter
clc
lret
mov
data16
ud2
and
jne
int3
popf
sbb
add
mov
imul
fdivl
add
mov
pop
cmc
cli
add
iret
pop
mov
jp
clc
xchg
xchg
jae
add
clc
clc
inc
add
movsb
clc
mov
jp
pop
ret
dec
cwtl
out
fcompl
xor
add
cmp
mov
sar
clc
cmpsb
clc
add
sar
adc
add
clc
xchg
pop
clc
or
or
add
jnp
clc
ror
sub
clc
inc
add
out
xchg
push
add
fs
dec
mov
mov
sbb
xchg
dec
in
shl
cmp
xchg
test
shrb
into
aam
xor
add
add
pop
clc
push
fwait
push
jb
add
or
sbb
test
test
sbb
mul
clc
js
test
popa
add
sub
pop
mov
ret
clc
xchg
bound
add
clc
sub
add
or
pop
ss
cltd
fucomp
comiss
add
dec
data16
cld
jp
clc
adc
mov
add
xor
add
clc
dec
or
clc
ret
dec
pushf
cmp
in
add
add
add
pop
leave
data16
das
pop
sar
pop
push
inc
add
imul
add
fwait
sbb
sysret
clc
dec
inc
add
xchg
jb
add
cmp
loopne
push
cmpsb
clc
mov
add
add
add
xbegin
sub
clc
jnp
add
cmpsl
clc
stos
pop
insl
and
add
fistpll
aas
or
add
mov
mov
sbb
add
and
add
pop
fbld
add
idivl
ljmp
add
mov
mov
and
add
loope
cmc
scas
jb
add
add
or
cwtl
xchg
cmp
test
js
add
mov
add
sahf
hlt
cmp
pop
add
push
add
sub
clc
out
popf
out
inc
clc
ficomps
es
nop
into
and
and
dec
loope
mov
xchg
push
add
lcall
xchg
mov
ljmp
mov
ds
ret
clc
push
add
cltd
push
add
push
shlb
add
add
int3
stos
dec
jne
or
outsl
and
add
cmp
sbb
clc
frstor
add
fimull
clc
ja
clc
fbstp
mov
mov
pop
push
add
add
add
clc
arpl
add
xchg
sbb
clc
mov
ljmp
fwait
mov
inc
clc
cmp
dec
push
aam
pop
ret
clc
cmp
add
mov
mov
cmpsb
clc
test
mov
push
iret
sub
clc
push
mov
pop
mov
sar
out
add
add
jecxz
into
add
add
pop
aam
mov
ficomps
push
fimull
add
repz
add
clc
lods
or
pop
and
add
clc
mov
std
insl
sbb
and
cli
jge
xabort
or
add
add
add
add
xabort
clc
sub
scas
jb
add
sub
stc
aas
sbb
clc
pmulhw
lret
mov
stc
xchg
leave
fs
xchg
push
sbb
clc
xor
clc
aas
mov
fmull
jmp
clc
popa
add
xor
je
add
adc
add
mov
imul
add
pop
cs
sub
mov
dec
xor
add
clc
jl
add
ds
clc
xor
add
out
inc
add
ret
clc
mov
sar
fsub
clc
shr
sub
push
pop
add
add
adc
add
cmp
cmp
mov
cmp
clc
outsb
push
add
lret
ss
xchg
ljmp
add
cmp
mov
pop
xor
add
pop
inc
add
jge
push
inc
add
xor
add
lret
add
push
add
pop
jl
fdivr
xbegin
clc
xchg
pushf
push
cmp
mov
cmp
clc
out
aad
clc
jo
add
add
dec
mov
aaa
jecxz
popa
add
aam
push
add
sub
lahf
mov
cli
mov
clc
adc
add
movsl
clc
jb
add
cmp
imul
in
cmc
sub
pushf
hlt
inc
clc
bound
add
add
loopne
xchg
mov
add
or
bound
add
cmp
and
add
add
pop
xor
push
inc
clc
push
add
sar
clc
or
sbb
aas
mov
movsl
clc
fsubs
leave
cld
jns
clc
out
jecxz
push
mov
jle
jmp
pop
cltd
rcll
inc
add
popf
jmp
clc
pop
or
cli
sbb
add
jae
add
cli
ret
xchg
sub
clc
and
add
add
jne
daa
clc
or
add
add
sbb
jmp
push
clc
fdivs
add
pop
clc
test
divl
add
xchg
out
pop
cmp
clc
cmc
addr16
lcall
test
mov
jge
gs
int
mov
clc
in
or
add
enter
mov
push
jns
add
add
add
movsb
clc
cli
jno
add
add
imul
add
aam
ss
and
add
add
clc
pop
cmp
xor
nop
dec
rclb
mov
in
inc
clc
fmull
jge
cmp
hlt
stos
mov
ljmp
js
dec
into
loop
cltd
aam
mov
mov
ret
clc
addr16
lahf
mov
sti
es
mov
imul
jge
clc
mulb
add
inc
clc
rcrl
or
and
add
mov
add
push
and
add
push
add
jle
push
clc
sahf
aaa
mov
clc
aas
inc
clc
jg
cmpsl
clc
mov
clc
sbb
clc
aam
imul
dec
rclb
add
pop
push
add
push
dec
fsubrs
or
add
cmpsl
clc
or
loop
lret
pop
jecxz
pop
sbb
pusha
add
lahf
int3
dec
inc
add
fs
in
cmp
cltd
filds
push
clc
dec
jb
add
clc
mov
xchg
push
add
scas
jle
add
cmp
aaa
dec
mov
clc
cltd
out
or
clc
scas
into
add
add
pop
lahf
ret
clc
mov
add
cmpsl
clc
jo
add
clc
in
data16
std
fnsave
sub
rorb
dec
ja
loopne
and
add
xchg
mov
add
xor
add
scas
push
mov
dec
fs
mov
add
push
inc
add
adc
add
pop
clc
in
addr16
fwait
in
add
outsl
arpl
add
fistpl
xor
add
clc
push
add
aaa
mov
clc
jmp
add
jle
stos
ficompl
push
add
out
mov
jno
add
fwait
push
xchg
cmpsb
clc
lret
repz
test
bound
add
mov
negb
sbb
add
ss
adc
add
add
ret
popa
add
inc
clc
cld
bound
add
roll
inc
add
push
xchg
mov
add
clc
lods
jmp
or
add
fdivrl
mov
xchg
xor
cmp
sub
add
xchg
mov
and
clc
xor
add
add
clc
xlat
sub
clc
sahf
cs
xchg
xlat
sub
adc
add
stos
aas
mov
mov
add
shlb
cmp
clc
xchg
movsb
clc
inc
add
fsts
add
clc
ficoml
es
add
add
outsb
dec
insb
add
add
mov
add
arpl
add
and
add
sahf
push
mov
lea
fsubl
cmp
xor
add
clc
fwait
or
add
xor
je
clc
ja
clc
push
loope
stos
leave
cmp
add
add
clc
mov
add
lret
mov
std
dec
jns
and
add
data16
in
mov
out
dec
pop
repnz
add
mov
dec
fldenv
add
nop
dec
jnp
pop
clc
movsb
clc
in
jno
add
test
mov
or
repnz
push
pop
jno
add
add
inc
add
daa
clc
addr16
movsb
clc
std
push
mov
add
mov
sbb
inc
clc
cmp
add
sub
cmp
dec
bound
add
clc
inc
clc
lcall
add
lret
or
add
inc
add
xchg
adc
add
xchg
adc
add
xchg
ret
stc
fs
push
das
xchg
mov
adc
add
add
clc
cltd
ret
clc
stos
cli
xchg
pop
sub
clc
cmpsb
clc
fnstenv
xchg
sub
add
mov
dec
sub
clc
push
add
leave
pop
cmp
ds
scas
and
add
clc
add
add
js
scas
lods
adc
add
add
push
add
sar
cmp
mov
imul
push
lret
loope
insl
or
mov
cmp
movsb
clc
sar
xor
add
sbb
clc
xchg
and
add
add
dec
data16
xchg
mov
add
mov
roll
add
lods
sbb
repnz
loop
cld
aam
add
add
pop
sbb
xlat
cltd
pop
clc
loope
lcall
add
cmp
fcmovnb
clc
scas
pusha
add
dec
xchg
scas
into
inc
add
call
jno
add
bound
add
pextrw
lods
sti
leave
push
lahf
sti
aad
push
enter
clc
xor
add
fisttps
pop
mov
add
outsl
enter
push
clc
ds
ret
sahf
mov
pop
clc
lods
sub
and
add
aas
sbb
jne
lods
inc
add
push
jg
add
addr16
scas
mov
add
into
xabort
mov
test
mov
clc
fisubrl
clc
inc
add
call
cmpsl
clc
repz
add
jb
add
dec
cmp
sbb
mov
pop
mov
clc
sbb
push
add
cmpsb
clc
dec
insl
inc
clc
insb
leave
or
clc
mov
xor
sar
mov
add
int
hlt
icebp
jo
add
clc
mov
jl
add
jge
push
add
xor
and
add
add
add
add
push
dec
dec
jb
add
add
add
cmp
pop
clc
jmp
or
inc
clc
imul
gs
xor
add
xbegin
add
fs
shlb
clc
stc
xor
add
in
cmp
push
leave
sub
and
add
add
push
loopne
xor
add
clc
dec
inc
clc
mov
clc
xor
add
adc
add
add
add
add
daa
clc
in
sub
clc
push
scas
ja
mov
push
inc
add
sbb
clc
sub
insb
rorl
sar
clc
lret
push
add
add
xor
shrb
mov
jno
add
push
dec
cmp
or
and
add
add
lods
lret
add
cmp
jmp
scas
test
gs
bound
add
add
lods
lock
dec
push
add
nop
int3
out
cltd
stos
xlat
jne
push
cmp
out
aaa
push
dec
inc
clc
std
inc
clc
xor
add
fmuls
adc
add
add
or
cmp
out
int3
inc
add
and
add
clc
mov
clc
movaps
paddq
mov
lods
or
cwtl
pop
bound
add
clc
add
add
out
cs
clc
mov
mov
clc
loop
idivb
ret
clc
jp
gs
pop
adc
add
pop
int3
aam
clc
pop
clc
push
sub
xor
cmp
clc
cmpsb
clc
aas
xchg
pusha
add
vmovhps
add
cli
push
add
and
nop
sbb
xchg
fdivl
mov
lea
pushf
hlt
sar
imul
mov
pop
outsl
inc
add
add
add
clc
mov
xchg
xabort
sbb
add
dec
push
add
ret
xor
add
clc
imul
add
daa
clc
sahf
sahf
or
clc
adc
add
xchg
pop
test
sbb
fdivrp
dec
push
loope
xchg
fmul
pop
inc
add
jle
lods
out
or
test
lea
add
xor
add
clc
addr16
push
add
cli
rclb
add
sar
push
clc
icebp
xchg
clc
popa
add
in
cmp
clc
xor
add
leave
add
add
jo
add
or
scas
jno
add
dec
sbb
add
sti
popf
xchg
xchg
jp
in
and
add
xchg
jecxz
or
add
das
cltd
scas
pushf
movsb
clc
into
dec
lcall
and
add
iret
inc
add
push
add
fcmovnbe
cltd
data16
push
adc
add
mov
clc
mov
add
insl
xchg
jne
adc
add
dec
mov
and
add
push
mov
cmp
popf
shrb
cmp
push
jmp
add
ss
push
mov
sub
add
scas
pusha
add
sbb
vandps
or
leave
in
mov
adc
add
jb
add
add
fisttpll
add
xor
add
mov
stos
mov
clc
mov
lods
cmp
and
push
adc
add
add
clc
jno
add
or
add
inc
clc
clc
mov
jg
clc
lods
stos
popf
in
out
lock
clc
mov
inc
add
cmp
insb
jecxz
adc
add
and
jb
add
scas
leave
inc
clc
dec
mov
clc
repnz
add
clc
or
xabort
xor
mov
add
fs
push
add
imul
pop
sub
pop
scas
add
add
add
add
add
push
add
sbb
outsl
inc
add
jno
add
clc
lock
cmp
adc
add
add
movsl
clc
test
pop
dec
dec
sub
clc
movsl
clc
mov
idiv
xbegin
cmc
cmp
add
hlt
repz
cmp
fsubrl
mov
outsb
bound
add
add
in
fst
ret
clc
sar
out
mov
dec
push
cmp
inc
add
dec
or
dec
push
add
lret
out
xchg
adc
add
inc
add
inc
add
cmp
pop
adc
add
test
clc
nop
pop
sbb
sbb
mov
pop
sti
aam
es
or
mov
lock
add
push
adc
clc
cli
lods
aaa
pop
pop
fiaddl
clc
pop
inc
clc
sub
ja
add
or
mov
test
and
add
insl
mov
add
add
clc
mov
xchg
push
stos
add
add
fdivl
cltd
or
xor
add
icebp
out
inc
add
cmp
add
adc
add
pop
cmp
clc
test
mov
add
xchg
aaa
xchg
lock
mov
add
clc
xor
add
cmpsl
clc
ficomps
add
fisttpl
mov
mov
hlt
sar
clc
xchg
ret
clc
sarl
lret
or
movsl
clc
sahf
or
add
add
sub
or
sub
stos
sar
shrl
add
push
enter
push
clc
push
cli
insb
loope
sub
clc
ss
sbb
push
add
or
inc
clc
jmp
nop
push
sbb
jne
add
and
add
push
add
inc
add
sub
add
scas
idiv
je
sahf
dec
cld
mov
adc
add
or
or
fstpl
fcoml
inc
clc
sbb
cmp
cmp
xbegin
clc
clc
mov
sbb
add
lock
clc
lahf
sub
mov
repz
adc
notl
add
popa
add
dec
jmp
sbb
add
lcall
add
pop
inc
clc
bound
add
push
add
cmpsb
clc
lahf
xor
add
loope
xchg
add
add
push
clc
gs
xlat
jne
jle
clc
pop
jmp
clc
enter
xor
imul
incb
clc
cmpsl
clc
cld
add
add
xchg
cmc
mov
mov
lea
clc
mov
clc
inc
add
cmp
nop
dec
xabort
jo
add
test
clc
punpckhdq
dec
hlt
cs
mov
clc
divb
sarb
jnp
clc
xchg
aam
adc
add
jnp
divb
add
cmp
add
cld
adc
add
jo
add
clc
ja
fwait
loope
sar
testb
std
mov
xor
add
add
into
push
cmp
or
arpl
add
pop
mov
je
aad
sub
add
lcall
mov
sub
push
add
in
or
clc
xchg
and
add
add
jp
lcall
addr16
sahf
sub
gs
jmp
clc
mov
add
add
push
add
add
insb
sar
fs
sbb
cmc
mov
hlt
imull
add
add
hlt
das
pop
jae
add
loop
sub
add
or
clc
push
add
stc
push
add
nop
xchg
push
jge
sbb
sbb
adc
add
in
cli
xor
jae
add
jg
add
sar
mov
test
xchg
xlat
and
add
push
pop
in
jge
cld
adc
add
ds
xchg
scas
leave
jle
mov
clc
ret
sbb
add
clc
je
add
insl
mov
addr16
mov
insl
jle
jae
add
mov
dec
sar
daa
clc
ss
lahf
sar
sbb
in
mov
enter
pop
inc
add
add
add
pop
pusha
add
add
daa
clc
or
push
ljmp
push
add
inc
add
popf
pushl
out
dec
insb
sbb
cmp
lea
mov
push
sub
add
pop
clc
ds
clc
cmp
clc
or
clc
jo
add
clc
outsl
mull
xor
add
test
jmp
fnstcw
cmp
add
push
test
data16
adc
add
cmp
add
setl
add
clc
je
sbb
ljmp
mov
sbb
stc
aam
and
add
in
popa
add
dec
xchg
sbb
pop
sahf
dec
add
add
addr16
cmp
clc
jns
pop
push
add
ret
clc
insl
xabort
and
add
clc
inc
clc
mov
dec
rcrl
xchg
inc
add
mov
add
push
add
add
add
ljmp
bound
add
clc
fcoms
add
pushf
pop
pusha
add
mov
in
add
dec
jp
pop
sbb
jl
lods
and
xor
add
mov
dec
jg
mov
clc
stos
out
mov
pop
das
inc
clc
sub
and
test
clc
mov
daa
clc
mov
jecxz
xlat
inc
clc
addr16
popa
add
pop
fsubr
mov
test
sub
out
push
or
add
mov
clc
sbb
mov
xchg
ret
clc
ds
rclb
add
or
popf
icebp
and
add
clc
mov
adc
add
sar
xlat
das
push
add
leave
and
mov
dec
jbe
sub
clc
mov
add
outsb
adc
xor
je
add
lcall
add
fistpl
dec
push
clc
pop
clc
xchg
loop
xlat
mov
add
add
sub
add
xchg
dec
je
bound
add
clc
xchg
cmp
clc
shlb
clc
cmp
popa
add
mov
rcrb
cli
ficomps
xchg
mov
mov
push
inc
add
std
push
add
xchg
mov
clc
sbb
lods
dec
xchg
xchg
insl
mov
add
lahf
sahf
clc
movsl
clc
out
pop
dec
outsl
lcall
cmp
add
or
int
clc
stos
sub
loope
rol
clc
jge
add
dec
push
add
add
add
add
sar
add
mov
mov
shlb
clc
cmp
clc
adc
add
ja
add
xchg
xchg
mov
add
das
test
out
pushf
insb
jo
add
mov
cmp
lea
add
bound
add
xbegin
int3
jmp
add
cmp
add
add
mov
movsl
clc
loop
mov
stos
sarl
add
mov
fs
test
adc
add
push
add
loop
daa
clc
fistl
add
mov
clc
xabort
mulb
add
in
adc
add
out
enter
lret
cld
cmp
inc
add
jbe
cld
add
sar
jle
add
fcmovbe
icebp
in
iret
mov
mov
add
xchg
pushf
loop
in
insl
in
loop
iret
mov
aad
clc
sti
mov
enter
clc
pusha
add
lods
into
dec
jns
loop
bound
add
inc
clc
dec
pusha
add
add
cmpsl
clc
scas
sub
add
mov
clc
mov
mov
mov
in
mov
mov
inc
add
xor
pop
mov
mov
push
ss
cmp
mov
clc
add
bound
add
pop
add
add
add
add
pop
ret
clc
aad
mov
and
add
mov
xchg
fldenv
cmc
mov
add
add
clc
scas
push
xor
add
clc
ret
dec
mov
add
push
mov
mov
sbb
dec
js
xlat
xor
add
xbegin
clc
in
dec
pop
cwtl
dec
test
outsb
mov
mov
xor
add
clc
daa
clc
int3
pop
jp
clc
push
mov
mov
add
jmp
ret
clc
ss
dec
mov
or
std
and
leave
push
stc
adc
add
clc
dec
pop
clc
ret
clc
sub
add
push
pop
add
add
cmp
js
clc
call
addr16
loop
push
push
pop
imul
scas
test
pop
jg
inc
clc
lods
js
mov
and
jle
cmp
dec
cmp
or
and
ja
add
insb
repz
clc
mov
cmp
std
xchg
aas
in
cltd
cwtl
cmp
clc
clc
frstpm(287
clc
mov
xchg
mov
add
and
add
shll
mov
es
lods
mov
cltd
xor
add
sbb
clc
and
add
add
clc
dec
mov
or
xlat
sbb
addr16
ficoms
mov
clc
fs
mov
xchg
push
inc
clc
push
cmp
imul
popa
add
add
add
clc
in
inc
add
out
mov
mov
add
fwait
xor
shrl
mov
test
add
add
cmc
jbe
mov
fidivrl
sub
mov
add
add
mov
icebp
push
jecxz
fstpt
add
lock
nop
xchg
call
pusha
add
add
add
add
jmp
pop
ret
clc
dec
dec
cmp
notl
clc
fisubrs
fcmovbe
pop
aam
add
cmp
sub
add
sbb
call
adc
add
add
aaa
data16
dec
lret
pop
lahf
pop
push
dec
sahf
push
add
daa
clc
jnp
adc
pop
cwtl
test
sbb
icebp
pop
adc
add
mov
mov
movsl
clc
push
clc
fwait
fs
cs
divl
leave
sbb
insl
clc
int
int
stos
fisttps
pop
mov
cmp
sti
cmp
add
add
pop
lret
ja
loopne
call
sbb
add
dec
sub
clc
push
add
add
add
add
add
mov
aaa
inc
clc
frstor
add
dec
scas
mov
jge
jne
push
outsl
aas
aad
and
add
addr16
ret
clc
cwtl
sbb
outsb
cmp
add
adc
add
add
add
cli
pusha
add
sbb
out
mov
cs
adc
add
lods
inc
clc
test
or
sub
clc
mov
clc
ja
add
jg
clc
fcomps
add
dec
iret
fs
inc
add
fs
imul
scas
xor
add
sub
inc
add
pop
and
add
clc
mov
clc
xchg
push
add
mov
add
data16
loop
out
rol
clc
out
mov
inc
clc
mov
dec
mov
clc
dec
scas
jge
mov
add
ret
clc
push
clc
pop
sub
add
add
mov
adc
add
add
clc
insl
es
cmc
dec
push
push
rol
clc
lea
add
push
clc
rep
int3
paddw
clc
cmpsb
clc
stos
mov
add
mov
rclb
add
jg
clc
bound
add
clc
pop
mov
add
hlt
lea
add
jb
add
clc
ljmp
jg
icebp
enter
jl
lahf
ja
mov
clc
repz
mov
and
mov
add
mov
pop
pop
jb
add
clc
lods
dec
aas
mov
cmp
clc
stc
dec
mov
pop
push
sub
clc
xor
add
fbstp
loopne
sti
test
in
mov
lret
fwait
jne
xchg
sbb
and
cmp
clc
addr16
jge
clc
imul
inc
add
jge
add
adc
add
clc
out
cmp
fcoms
clc
push
jne
pop
xchg
neg
push
clc
cmpsb
clc
scas
jle
stos
out
mov
add
jnp
clc
inc
add
jl
das
int3
sar
jecxz
out
test
imul
clc
jne
add
out
sti
ret
clc
nop
xchg
es
sbb
mov
clc
lods
mov
add
add
add
mov
add
movsb
clc
test
clc
mov
inc
clc
mov
clc
fisubrl
clc
outsl
xor
ljmp
iret
sar
lock
aad
clc
mov
dec
add
add
ret
clc
dec
es
ret
clc
adc
add
mov
test
add
jle
mov
add
icebp
pop
inc
add
pusha
add
mov
adc
mov
sbb
clc
sbb
add
add
add
inc
add
mov
lods
mov
sbb
push
scas
bound
add
fsubrs
clc
jo
add
clc
lcall
movsb
clc
into
fcoms
add
sbb
clc
sar
mov
gs
hlt
sbb
mov
clc
jecxz
pop
fstpt
hlt
jl
clc
push
add
mov
bound
add
test
shrl
xlat
jg
pop
and
add
lret
add
ss
out
push
jne
or
add
jo
add
add
push
fcmovne
mov
mov
add
push
clc
sub
ficoml
clc
cltd
xchg
sbb
clc
mov
xor
add
mov
sarl
bound
add
adc
clc
jle
clc
add
add
pop
ljmp
into
pop
fisubrs
push
xor
add
repz
stos
stc
clc
jge
mov
clc
test
lods
imul
add
in
repnz
cmp
add
cmpsb
clc
adc
add
test
clc
sub
add
push
add
cltd
loop
push
cmp
sub
clc
or
add
sub
test
cwtl
xabort
xabort
into
ljmp
add
fadd
clc
push
clc
pushf
in
mov
loop
repnz
inc
clc
inc
add
jbe
repnz
addr16
data16
imul
jp
hlt
imul
dec
ret
clc
mov
dec
ljmp
clc
mov
faddl
dec
leave
sbb
adc
add
add
cmp
mov
cli
int
inc
add
fldt
sbb
jmp
test
fimull
test
or
pop
popf
in
add
add
cmp
and
lret
rclb
fs
shl
cwtl
lret
fmuls
inc
clc
jl
jnp
clc
sahf
or
data16
adc
add
add
idivl
fdivs
mov
or
clc
fs
fstl
add
jbe
xbegin
clc
mov
jb
add
push
xor
clc
xor
add
in
xchg
push
cmp
or
add
insl
mov
jl
jo
add
jns
ret
xlat
xor
add
pop
cwtl
cmp
add
mov
pop
loop
mov
add
push
mov
and
add
loop
and
add
add
daa
clc
push
add
pop
push
add
js
and
lods
mov
inc
clc
lret
mov
push
add
aam
add
xchg
pop
clc
push
dec
xchg
push
add
mov
nop
dec
call
clc
inc
add
call
jl
cmp
add
inc
add
inc
clc
clc
imul
jecxz
mov
lock
add
xchg
mov
pop
sub
clc
cmp
add
inc
add
sbb
add
add
add
jle
clc
fbstp
add
scas
cli
call
scas
mov
clc
dec
mov
clc
sahf
jbe
adc
xor
add
int
clc
sbb
clc
or
das
js
inc
clc
ret
jmp
dec
xor
add
repnz
ficomps
pop
mov
clc
jp
inc
clc
stos
pop
ret
clc
stos
ficomps
sub
adc
add
clc
jb
add
lods
icebp
je
xor
add
clc
adc
add
loopne
faddl
add
cmp
not
jne
aaa
inc
clc
dec
nop
jo
rcr
mov
push
add
fmuls
push
add
mov
clc
and
add
gs
sarl
adc
add
push
xor
add
bound
add
xchg
adc
add
call
cmp
sti
mov
push
add
xchg
and
test
bound
add
xor
add
clc
pop
clc
dec
aas
daa
clc
sbb
push
and
add
add
xchg
lods
cmp
add
sbb
sub
xor
add
xchg
push
mov
add
jb
add
clc
out
jns
popf
inc
clc
icebp
loopne
mov
out
mov
clc
push
sbb
and
add
ret
clc
fisubl
lock
adc
add
negl
popf
and
add
clc
and
cli
cmp
add
rep
dec
sar
sbb
clc
popf
add
test
into
arpl
add
dec
cs
jne
lcall
add
test
adc
int
mov
mov
add
outsl
xchg
jb
add
sahf
mov
add
adc
add
roll
clc
hlt
mov
repnz
adc
add
das
shlb
add
add
pop
or
add
sti
mov
add
add
mov
fistpl
add
in
insl
inc
clc
or
iret
shll
add
mov
std
push
add
sbb
lret
cmc
cs
add
cmp
mov
clc
mov
xchg
cmp
add
push
clc
rcrb
mov
into
cmp
clc
imul
jb
add
fmul
inc
add
je
add
cld
and
jb
add
add
shrb
mov
add
pop
and
add
add
cmp
add
adc
cmp
add
out
cs
dec
ret
add
sar
clc
arpl
add
clc
inc
add
mov
sbb
out
ret
clc
ret
clc
ds
test
add
xchg
jmp
dec
jb
add
adc
add
clc
xlat
mov
setp
clc
xor
add
mov
add
jecxz
jp
cmp
add
test
aad
clc
icebp
cmp
add
jp
add
dec
xor
add
clc
mov
add
loop
pop
lods
push
add
jnp
addr16
mov
sbb
out
nop
inc
add
arpl
add
add
add
clc
pop
clc
and
add
add
jbe
out
bound
add
xchg
or
add
insb
mov
fldcw
push
add
xchg
xchg
pop
push
add
cmp
add
push
sar
add
mov
add
das
adc
add
xor
lods
aaa
add
add
sti
sub
test
sub
bound
add
and
add
loopne
int3
sbb
scas
insl
or
lock
add
cs
xor
add
mov
movsl
clc
into
or
clc
mov
inc
add
pop
stos
mov
jae
add
dec
ljmp
push
add
inc
clc
rcrb
int3
sbb
add
push
adc
add
clc
pop
xlat
inc
clc
mov
dec
or
insb
mov
clc
cmp
dec
dec
cmp
out
out
xor
lahf
xchg
pop
pusha
add
sahf
scas
leave
pop
xlat
inc
add
xor
add
add
add
add
cmp
clc
rcrb
out
sub
add
clc
sub
push
add
push
sar
pushf
and
add
push
clc
loopne
xchg
repz
js
inc
clc
cmp
ret
clc
xchg
and
add
add
notb
add
mov
jae
add
clc
xchg
adc
loop
std
negb
add
or
cmp
xchg
popa
add
sub
daa
clc
adc
add
cwtl
lahf
dec
aaa
cltd
mov
test
adc
add
sub
jecxz
imul
pop
or
mov
fwait
add
add
add
cmp
out
add
add
jae
add
pop
clc
jecxz
xlat
and
add
bound
add
jl
stos
push
out
jns
jp
clc
sbb
rcrl
clc
rcll
sbb
xor
add
mov
fldenv
add
add
xbegin
in
cmp
sub
or
sbb
pop
clc
inc
add
icebp
int3
adc
add
sbb
fisttps
add
jl
insb
pop
stc
cmp
add
push
clc
ja
stos
sbb
pop
cli
dec
cmovge
clc
ss
add
leave
mov
jb
add
jecxz
mov
add
in
fsubrl
gs
mov
ds
mov
mov
add
dec
out
xabort
daa
clc
jno
add
add
clc
mov
push
mov
add
or
xlat
dec
nop
je
fmuls
add
push
clc
divl
pop
clc
or
inc
clc
cmp
xchg
lret
xchg
adc
clc
pushf
jmp
pop
xbegin
add
inc
add
not
jne
clc
sub
add
repnz
add
push
dec
xchg
ljmp
idivl
push
enter
std
sbb
cmp
clc
dec
jbe
add
fidivl
and
add
aad
clc
leave
ficoml
aam
add
dec
pop
sbb
mov
add
scas
aaa
leave
xor
add
push
clc
aas
add
add
add
jle
add
bound
add
add
jnp
addr16
xlat
in
aam
mov
cmpsl
clc
jg
add
add
ret
clc
fs
rclb
out
pushf
cld
inc
add
incl
jmp
push
clc
das
dec
cmp
fsubr
fcomps
das
jb
add
scas
xchg
ja
ret
clc
sub
add
clc
dec
lea
mov
lcall
inc
add
sub
jbe
mov
clc
lods
push
xor
pop
jl
add
mov
dec
ret
clc
sub
lea
clc
xchg
data16
sar
add
jmp
mov
clc
enter
xchg
push
add
loopne
popf
sar
pop
daa
clc
jg
loopne
xchg
push
clc
mov
clc
scas
imul
sar
mov
cs
out
pop
mov
add
fs
call
add
fsubrs
add
clc
ljmp
ss
add
addr16
push
movsl
clc
xor
call
add
int
clc
clts
clc
sbb
clc
sar
js
push
add
repz
hlt
out
xchg
in
cwtl
push
dec
xchg
clc
aas
push
sub
xchg
aam
cmp
push
add
mov
push
clc
cld
inc
add
xor
icebp
and
add
mov
mov
clc
imul
push
add
ds
add
push
enter
push
add
pop
clc
rclb
cmp
testl
sbb
cmpsl
clc
dec
cmpsl
clc
and
add
inc
add
add
sub
jle
xbegin
clc
and
jno
add
add
fchs
clc
ja
ja
push
xor
and
add
outsl
jg
adc
xchg
call
add
xor
clc
jnp
clc
add
add
add
stos
or
pusha
add
mov
adc
mov
mov
nop
je
mov
arpl
add
add
int
or
fisubl
add
cli
inc
clc
dec
repnz
mov
add
sbb
add
in
std
jle
clc
push
add
or
xor
test
add
stos
mov
mov
jbe
push
add
xchg
sub
cs
jge
add
roll
xchg
push
add
stos
dec
xchg
js
inc
add
pusha
add
stos
movsb
clc
jmp
jne
clc
gs
mov
mov
cmp
add
mov
clc
addr16
sahf
loop
push
add
xor
xchg
push
add
enter
repnz
outsb
dec
add
add
add
clc
cmp
xchg
cmpsl
clc
sub
cld
data16
daa
clc
cmp
out
int
push
jp
bound
add
clc
mov
add
repz
clc
in
jo
add
cld
movsl
clc
xchg
or
xlat
fxch
out
ljmp
mov
inc
add
and
add
clc
movsb
clc
cmpsl
clc
fldl
add
ja
clc
sub
fnstcw
xbegin
clc
push
mov
shll
xchg
aad
roll
xchg
mov
add
add
xchg
xor
ret
daa
clc
jecxz
xor
jp
add
leave
sbb
jb
add
add
or
push
inc
clc
cli
out
mov
fs
int
clc
xor
add
clc
cmp
add
dec
pop
aas
cmpsb
clc
sbb
clc
bound
add
add
fcomps
clc
jo
add
add
dec
mov
pop
clc
xlat
jecxz
push
aas
mov
clc
iret
push
or
mov
jle
cwtl
push
xabort
or
clc
scas
test
loopne
cmp
and
add
add
hlt
lock
sbb
ljmp
nop
xchg
cmp
mov
mov
clc
lahf
cmp
mov
daa
clc
push
iret
clc
adc
movsl
clc
cmp
pop
dec
dec
in
call
jl
and
add
mov
push
movsl
clc
inc
add
pop
inc
add
cmp
add
clc
cmp
repnz
add
clc
pop
xchg
cmc
xchg
jmp
in
fistpll
xor
add
nop
mov
inc
clc
cld
dec
mov
out
jo
add
fidivrs
mov
imul
mov
out
outsl
stos
sti
jae
add
sub
mov
clc
xor
add
lods
push
jge
add
push
push
add
cmc
cmp
add
test
dec
in
lahf
push
in
add
add
add
insb
stos
xchg
sahf
mulps
add
lret
add
std
cmp
add
nop
filds
clc
push
arpl
add
clc
dec
hlt
pop
jbe
pop
ret
add
push
jnp
add
add
mov
js
dec
popa
add
jnp
clc
mov
dec
sub
or
xchg
test
cmp
add
je
inc
clc
pop
xor
add
fadd
clc
test
sbb
add
mov
sahf
jnp
add
sub
inc
clc
adc
lret
inc
add
loopne
adc
add
xchg
sub
movsb
clc
jl
add
fistps
sbb
sbb
call
add
xchg
jne
or
jbe
clc
js
cltd
jb
add
clc
add
add
clc
fcmovnb
clc
int
add
ljmp
jo
add
adc
add
mov
dec
mov
jge
lret
clc
or
clc
cmp
add
sub
clc
pop
clc
xabort
shlb
inc
add
sbb
sbb
xor
add
add
xchg
loopne
inc
add
in
mov
rcrb
mov
add
outsb
dec
sahf
jg
mov
fisubrs
aad
and
add
cli
fwait
add
jnp
clc
cmp
cmc
out
movsl
clc
mov
arpl
add
add
mov
mov
clc
pop
fwait
ljmp
arpl
add
sub
xchg
pop
out
cwtl
addr16
fs
and
add
jno
add
xchg
jmp
clc
gs
dec
or
add
sbb
fs
test
clc
clc
pushf
push
iret
mov
push
add
stc
into
mov
jns
xor
add
add
aaa
mov
xor
inc
add
push
int
clc
pop
movsb
clc
rorl
stos
dec
sub
clc
adc
clc
cmp
pop
ficompl
test
inc
clc
mov
shrb
add
int3
outsl
cmp
clc
call
ja
daa
clc
adc
add
cltd
cmp
inc
add
push
shlb
add
clc
xchg
int
clc
xor
or
scas
arpl
add
jno
add
mov
and
add
clc
clc
inc
clc
pop
in
sbb
insb
data16
clc
sub
clc
dec
xbegin
add
hlt
xchg
adc
add
rclb
clc
stos
inc
add
and
outsl
js
stos
mov
fwait
mov
clc
fs
jge
hlt
cwtl
xlat
adc
add
hlt
push
dec
mov
push
clc
cmp
aas
sub
mov
das
imul
add
or
clc
jge
xchg
lock
test
sar
add
xchg
popf
mov
mov
cld
push
add
pop
hlt
and
add
inc
add
fisubs
add
outsl
sub
mov
clc
push
ret
jo
add
push
mov
inc
clc
lret
fs
xchg
push
jle
jmp
fcomps
clc
aad
cld
lods
inc
add
lods
inc
add
jecxz
pop
mov
and
ret
icebp
sahf
cmp
add
add
scas
mov
add
add
test
add
mov
es
dec
pusha
add
jno
add
mov
sub
lods
cmp
add
shll
add
clc
inc
clc
pop
sub
rorl
clc
sbb
clc
roll
add
fxch
pop
repnz
testl
push
add
ds
hlt
loope
in
inc
add
xlat
xor
add
xor
clc
movsb
clc
push
add
cmp
add
out
enter
sub
clc
xchg
insl
sbb
jecxz
jmp
clc
rdseed
hlt
rclb
mov
clc
sbb
clc
mov
clc
mov
add
add
pop
clc
cmpsb
clc
push
mov
and
add
and
or
clc
mov
clc
aaa
mov
add
cmp
clc
adc
clc
lods
out
mov
clc
cmp
clc
xchg
in
in
addr16
cld
mov
clc
lcall
jmp
clc
sub
dec
pop
clc
out
jne
add
add
mov
mov
clc
xchg
imul
call
cmp
es
and
add
ja
clc
xchg
repnz
jno
add
sbb
nop
mov
cmp
loope
sub
sahf
adc
add
clc
fidivl
clc
scas
mov
das
movsb
clc
cmpsl
clc
cli
stos
loope
cmpsb
clc
jmp
arpl
add
add
clc
addr16
testb
add
clc
cmp
clc
fsubl
add
fadds
add
mov
cmp
clc
inc
add
pop
arpl
add
add
arpl
add
nop
xor
add
in
pop
fdivl
add
cltd
loope
push
mov
jnp
outsb
jle
push
fucomp
es
shl
nop
sar
add
shl
clc
call
and
aad
clc
in
add
mov
jl
data16
or
mov
mov
clc
or
pop
imul
addr16
std
data16
xchg
scas
fwait
addr16
insb
loop
fs
sarb
jb
add
cmp
clc
jbe
mov
add
adc
inc
clc
pop
xchg
mov
lcall
inc
add
or
add
clc
xlat
data16
mov
add
and
dec
xabort
hlt
mov
mov
loopne
insb
outsb
mov
jb
add
into
loope
add
pop
mov
add
sbb
test
mov
jne
and
add
add
cmp
push
insl
xchg
daa
clc
pop
dec
mov
jle
shll
add
cmpsb
clc
test
clc
int
xbegin
add
fdivp
mov
push
or
push
add
int
clc
movsb
clc
shlb
add
ds
mov
sub
popa
add
inc
add
fdivp
js
clc
popa
add
xlat
pop
clc
enter
sbb
or
add
jae
add
add
jle
mov
add
test
add
in
sbb
clc
insb
mov
add
pop
pop
clc
sar
lret
sbb
xor
add
int
add
add
movsl
clc
cmp
clc
jo
add
add
pop
enter
inc
add
adc
add
clc
fldenv
add
fs
push
clc
xchg
lods
inc
clc
lret
mov
enter
mov
xbegin
clc
iret
mov
push
add
ss
or
lret
std
inc
clc
inc
add
and
xchg
mov
mov
mov
clc
adc
add
pop
in
stos
adc
add
clc
sub
xchg
imulb
repnz
mov
add
clc
repz
in
lahf
js
ret
clc
jae
add
clc
adc
add
mov
stos
in
push
sarb
neg
arpl
add
clc
pusha
add
out
jo
add
add
in
data16
cmp
clc
xchg
movsl
clc
mov
add
nop
sub
add
cmp
ret
clc
push
pop
lock
cmp
add
es
mov
das
movsl
clc
imul
nop
int
add
stos
xchg
stos
out
push
add
mov
ja
add
jp
add
sub
xchg
fcmovnu
movsl
clc
lock
shll
lods
mov
clc
ljmp
in
mov
clc
pop
out
sti
or
daa
clc
mov
add
push
sub
clc
mov
add
mov
clc
icebp
add
add
add
bound
add
clc
dec
lods
movsl
clc
jne
inc
add
daa
clc
ret
add
fisttpl
clc
mov
add
push
add
dec
jecxz
loope
inc
clc
cmp
clc
jp
jb
add
and
add
add
fdivrp
xor
add
clc
cmp
inc
add
mov
fsubrp
jp
xchg
add
inc
clc
jl
cwtl
adc
pop
push
out
je
sub
clc
dec
in
xbegin
or
mov
adc
adc
add
add
add
clc
xchg
std
push
pop
xor
add
movsl
clc
push
call
pop
sub
lods
sbb
add
loop
cli
and
add
jmp
pop
int3
pop
dec
pop
xchg
xchg
testb
in
gs
xchg
lret
sub
lea
jae
add
dec
mov
clc
xchg
popf
xchg
hlt
and
add
mov
mov
clc
jecxz
imul
clc
test
sar
push
outsl
push
adc
add
jmp
sub
and
add
xchg
xabort
imul
out
test
jne
clc
gs
add
add
in
mov
adc
add
cs
mov
das
cmp
call
mov
addr16
cmp
shrb
out
jmp
or
jp
cmp
filds
movsb
clc
sar
cmp
popa
add
push
add
dec
enter
sbb
mov
xchg
xor
add
add
sbb
clc
fs
loopne
hlt
push
cmpsl
clc
cmp
aaa
bound
add
clc
data16
xchg
rcll
clc
push
add
push
add
mov
clc
insb
xor
cld
pop
mov
lcall
rcll
add
imul
and
add
clc
cmp
xchg
cltd
mov
add
ror
mov
clc
mov
cmp
out
data16
fisubrl
fdivs
add
cmp
stc
sub
add
and
add
add
inc
clc
and
add
clc
das
adc
add
jp
cld
push
add
push
mov
pop
adc
icebp
loope
cs
jl
push
stc
cwtl
dec
pushf
fsub
clc
mov
pop
mov
add
frstor
cmp
dec
out
and
add
jbe
sar
jno
add
mov
clc
addr16
add
add
push
add
mov
add
inc
clc
sub
ss
stos
inc
clc
inc
add
sar
add
xchg
cmp
or
add
insl
loope
push
add
and
add
sub
cmpsb
clc
dec
mov
pop
sahf
push
bound
add
movsl
clc
lods
in
xchg
cmp
add
inc
add
mov
lret
mov
add
daa
clc
je
add
push
clc
inc
add
in
or
in
ret
test
fadds
add
pop
sbb
add
lcall
pop
bound
add
inc
add
adc
add
add
popa
add
and
add
add
addr16
xchg
and
add
push
add
xor
add
ret
clc
mov
xbegin
iret
sub
test
jge
sar
pop
decb
sbb
outsl
jb
add
xchg
sti
push
add
cmpsb
clc
dec
outsl
and
add
push
add
jecxz
add
xchg
cmp
add
xor
add
cmp
and
cld
repz
clc
cmpsl
clc
aaa
cmp
add
mov
mov
pusha
add
std
mov
add
adc
add
clc
std
jbe
xchg
mov
add
mov
clc
jle
clc
xor
add
add
and
add
mov
add
fstl
shl
out
movsl
clc
loope
push
add
mov
mov
bound
add
clc
xor
add
sub
xor
add
add
loopne
test
scas
fsubrl
add
add
test
pop
pop
jno
add
add
mov
or
dec
mov
fwait
xbegin
inc
clc
inc
clc
sub
clc
push
inc
clc
cmp
add
arpl
add
push
add
lcall
lods
stos
xor
add
dec
sub
repz
add
mov
popf
test
gs
fdivp
sbb
add
stos
aam
clc
xabort
scas
jmp
inc
clc
push
cmpsb
clc
pop
out
loopne
inc
clc
loopne
and
je
jnp
fadd
clc
out
xchg
popf
arpl
add
ds
xabort
clc
js
clc
cmp
cmp
icebp
push
aas
insl
pop
loopne
pop
clc
cli
jg
xchg
fs
mov
add
dec
das
fs
iret
mov
add
loope
clc
xchg
cmp
add
cmp
push
add
xchg
ds
in
mov
push
add
mov
cli
inc
clc
jns
push
clc
cld
movsb
clc
xchg
popf
cmp
add
repz
push
popa
add
lcall
clc
mov
inc
clc
cmp
test
jl
ja
mov
clc
sbb
or
cmp
jb
add
mov
and
add
dec
popf
sar
lock
add
clc
aas
lea
testl
clc
xchg
ss
xor
add
dec
and
add
es
jbe
clc
fdivrp
pop
sbb
lcall
ljmp
mov
add
fisubl
data16
scas
adc
add
mov
in
imul
cmc
mov
add
ret
push
add
mov
clc
and
add
clc
mov
fidivrl
clc
lahf
and
pop
repz
clc
scas
dec
mov
jmp
push
mov
aaa
mov
mov
add
arpl
add
add
rorb
mov
add
pop
movsb
clc
ret
clc
mov
jae
add
repz
cmp
clc
repz
cmp
add
cmpsl
clc
icebp
mov
xchg
or
adc
add
jmp
insl
and
add
add
sahf
cwtl
cmp
xchg
cld
gs
dec
inc
clc
decl
mov
or
insb
mov
and
add
add
imull
mov
mov
add
inc
clc
mov
add
out
stc
or
clc
xchg
inc
add
dec
loopne
add
pop
imul
clc
or
xchg
out
mov
loopne
pop
cmpsb
clc
mulb
add
mov
cltd
gs
xchg
jge
sbb
adc
pop
ret
xchg
xbegin
das
data16
inc
clc
jbe
cwtl
xchg
mov
sbb
repnz
add
jmp
mov
loop
icebp
movsl
clc
inc
clc
fcoml
add
xor
add
fimuls
clc
inc
add
xchg
cmpsl
clc
inc
clc
clc
fidivl
push
clc
je
shlb
add
cli
mov
sub
scas
aaa
jle
add
add
dec
xor
clc
mov
mov
push
dec
pop
mov
mov
add
mov
add
add
add
inc
clc
mov
clc
gs
aaa
xor
test
add
cmp
clc
outsl
pop
clc
aas
xchg
fwait
pop
xchg
movsl
clc
mov
clc
jmp
cmp
jg
add
test
clc
dec
and
add
test
and
add
out
test
jge
stos
push
add
mov
in
iret
jns
mov
add
sar
in
sub
mov
push
dec
arpl
add
add
sar
pop
or
jg
aam
mov
adc
add
jae
add
mov
fiaddl
add
or
iret
dec
aaa
test
stos
mov
jo
add
and
jo
add
add
cmp
add
pop
dec
lahf
fists
xor
rorl
cwtl
push
add
fimull
movsl
clc
jbe
add
ja
add
pop
inc
add
pop
jge
fsubs
add
or
add
cwtl
cmp
mov
clc
mov
pop
inc
clc
mov
insl
sahf
inc
clc
pop
and
add
outsl
stc
ja
xchg
xlat
rcrb
push
add
xchg
push
add
mov
or
push
push
add
add
push
add
and
add
fimull
clc
cmp
jno
add
testl
js
pop
stc
cmp
add
add
repnz
clc
push
jecxz
lcall
cmp
fwait
xor
add
stos
xchg
xchg
popf
mov
xchg
push
add
xchg
pop
cltd
es
imul
cmp
add
add
add
add
add
stos
add
add
or
fbstp
xchg
arpl
add
fidivrl
enter
lret
add
cmp
fs
sahf
jge
add
es
aam
cmp
es
push
mov
sbb
inc
add
add
add
clc
mov
mov
pushf
mov
jmp
sbb
rorb
sbb
clc
sbb
xor
add
mov
push
add
adc
mov
clc
cmp
mov
clc
xchg
xchg
repz
add
clc
push
add
fimuls
clc
dec
loopne
shl
clc
cmp
jecxz
stos
inc
clc
and
clc
mov
outsl
mov
inc
add
daa
clc
xchg
sbb
mov
add
adc
jmp
adc
add
dec
loop
std
loope
xor
add
clc
dec
std
xor
add
clc
or
cmp
clc
je
add
rcll
add
and
clc
in
jae
add
gs
pushf
pop
clc
pop
add
add
mov
add
cmc
rorb
jo
add
clc
inc
clc
push
jno
add
clc
cmc
icebp
stc
gs
mov
clc
mov
cli
icebp
insl
xor
add
cmp
mov
clc
fdivrs
add
cmp
or
lret
add
stos
pop
out
nop
cmpsb
clc
outsl
and
popa
add
jecxz
sti
jno,pn
add
cmp
gs
inc
clc
sub
clc
ja,pt
xchg
or
xchg
sub
add
dec
stos
bnd
add
clc
aas
scas
xchg
lret
mov
add
and
xor
add
add
insb
in
mov
clc
nop
jne
add
ja
clc
jl
xabort
add
xchg
repz
mov
jp
add
push
out
mov
clc
jle
add
mov
mov
clc
inc
clc
sarl
add
scas
fdiv
dec
inc
add
jl
clc
mov
rorb
sub
clc
dec
hlt
cmpsl
clc
jne
add
mov
ljmp
clc
dec
iret
cmp
add
dec
inc
clc
jbe
xchg
push
pop
es
cltd
repnz
adc
add
mov
pop
hlt
sar
sarb
sysenter
out
fldt
add
add
add
xchg
cmp
add
cmp
mov
xchg
dec
pop
iret
std
xchg
cmp
lea
repnz
pop
sbb
loopne
add
add
aas
out
fldcw
inc
add
mov
or
clc
fdivl
insl
xor
ljmp
pop
pop
fstps
add
adc
add
push
add
and
add
inc
clc
pusha
add
je
add
stos
mov
movsl
clc
aaa
lret
ficoms
add
insl
jl,pn
dec
cli
int3
stos
insb
jo
add
add
ret
and
add
pop
repnz
cli
add
add
rcl
rorb
mov
scas
test
rolb
jecxz
add
in
cmp
add
das
or
adc
add
xchg
inc
add
cmc
cltd
add
push
gs
mov
movsl
clc
xchg
mov
xlat
sar
xbegin
xor
add
js
add
push
add
pop
ret
mov
add
stos
call
in
adc
add
mov
lret
arpl
add
clc
pop
mov
mov
clc
pop
add
jge
sub
mov
add
add
in
sbb
clc
hlt
addr16
inc
clc
pop
clc
or
add
add
inc
clc
shl
hlt
jge
cmp
add
mov
sar
sbb
popf
xchg
push
clc
enter
add
clc
mov
cltd
xor
add
out
jo
add
mov
ja
dec
push
clc
ret
add
mov
clc
mov
aas
pop
jbe
arpl
add
cmp
add
push
cmc
adc
popf
sar
rorb
xabort
clc
imul
add
je
std
add
clc
mov
add
or
imul
cwtl
add
add
add
add
adc
add
dec
push
add
push
add
cmpsb
clc
mov
clc
insl
sarb
sbb
jnp
sar
clc
clc
sbb
ss
mov
clc
sbb
fwait
shl
clc
scas
lods
fnstenv
add
aas
dec
and
cmp
mov
test
fists
push
mov
sub
notb
aam
xchg
sub
jg
loopne
int
adc
add
add
add
popa
add
add
add
add
add
xor
test
sar
jge
arpl
add
clc
push
add
push
mov
clc
cmp
add
push
push
movsb
clc
cmp
pop
mov
cmp
ds
mov
xlat
outsb
mov
clc
int
mov
stos
push
add
lcall
clc
jns
sarb
mov
pushf
dec
lock
add
fcoml
add
addr16
sbb
adc
fldl2t
clc
leave
cmp
adc
add
movsb
clc
sti
pop
pop
std
in
or
push
xchg
and
add
add
testl
jno
add
add
ja
add
xchg
xchg
mov
xor
jg
lcall
inc
add
mov
add
push
or
popa
add
scas
gs
dec
movsl
clc
jns
mov
add
push
add
in
sub
clc
mov
pushf
sbb
lret
or
clc
fwait
mov
add
insl
pop
test
in
cmc
scas
push
xchg
pop
enter
bt
loop
adc
add
adc
clc
adc
add
cmp
add
add
dec
jb
add
push
cmp
xchg
fstp
loope
cmp
or
test
bound
add
or
mov
scas
sbb
xchg
cmp
inc
add
imul
pusha
add
or
cmp
bound
add
or
cmp
jno
add
clc
in
mov
mulb
clc
pop
daa
clc
out
aad
cmp
clc
xchg
push
add
pop
and
add
stos
jns
pop
sbb
into
aas
nop
das
cmp
add
sbb
pushl
xor
add
adc
add
popf
mov
clc
inc
clc
and
in
into
pop
in
xchg
inc
add
lods
jb
add
dec
pop
jno
add
add
add
sahf
in
je
clc
xabort
es
and
add
add
jg
fisttps
add
mov
lods
lahf
sar
clc
and
add
mov
jno
add
sar
clc
mov
add
pop
clc
imul
clc
clc
mov
data16
mov
add
add
dec
or
and
add
adc
add
out
cmp
clc
lcall
clc
jns
xchg
sub
fsubr
repz
lock
add
xchg
stc
gs
repz
pop
addr16
repz
add
adc
add
dec
jnp
and
clc
or
push
add
cld
scas
mov
sar
clc
je
cld
push
mov
cli
call
clc
push
push
add
cmp
add
add
fstpl
jb
add
jl
clc
jo
add
adc
clc
ficomps
clc
jmp
jne
adc
add
lods
xchg
out
mov
cmp
push
add
push
xchg
aam
mov
iret
data16
jnp
cmp
clc
dec
sub
clc
inc
clc
jl
clc
leave
mov
jns
clc
pop
test
pusha
add
mov
add
mov
dec
jecxz
cmp
add
add
add
lods
lret
cmp
push
cmc
scas
add
add
sbb
sbb
clc
add
sub
push
int3
outsl
pop
mov
add
iret
ja
clc
lret
dec
xchg
cmp
add
xor
push
cmp
clc
cmp
add
sti
adc
add
xor
add
call
mov
add
cmpsb
clc
and
fbld
push
add
mov
clc
cwtl
ret
jg
clc
mov
add
das
pop
sbb
add
add
lret
clc
push
push
clc
xchg
out
cmp
cmp
add
push
add
adc
add
mov
jns
mov
scas
test
jp
mov
cmp
add
popf
sub
dec
adc
add
sub
add
inc
add
cmp
in
lcall
scas
arpl
add
pop
call
pop
adc
add
add
adc
add
mov
jbe
add
mov
add
fstl
xor
add
addr16
push
fstps
mov
rclb
mov
push
add
in
pop
cld
sbb
stc
add
jne
cmp
cmc
repz
jl
add
xor
test
and
add
add
aad
push
add
out
ja
scas
fisttpll
push
clc
mov
clc
lock
xchg
cmp
add
xor
add
pop
clc
cmp
clc
loopne
clc
mov
mov
out
xchg
pop
outsl
cld
es
inc
clc
mov
clc
pusha
add
lcall
sbb
std
push
aam
je
add
push
add
or
in
es
jecxz
jmp
add
nop
jne
add
inc
add
sub
add
test
negb
push
adc
clc
hlt
inc
clc
lea
data16
dec
and
pop
mov
clc
insl
cltd
adc
add
roll
clc
inc
add
inc
add
stos
mov
add
mov
sar
movsl
clc
xchg
popf
sub
repz
lahf
xchg
cmp
clc
push
es
aas
ror
dec
mov
clc
mov
push
jb
add
clc
fidivrs
clc
and
pop
clc
iret
xchg
or
add
xor
clc
cltd
das
fcoml
sub
clc
test
add
jmp
add
mov
fs
mov
clc
mov
clc
xbegin
clc
in
jnp
cmp
add
cmp
add
add
add
xor
add
imul
enter
clc
xchg
mov
add
xchg
pop
xor
add
test
mov
add
clc
sahf
bound
add
daa
clc
loop
in
repnz
cwtl
iret
lahf
mov
add
push
fsincos
data16
popa
add
cmpsb
clc
xabort
push
pop
clc
pop
sar
in
outsb
lods
je
clc
xor
add
int
add
out
fcoms
add
or
sub
aad
sub
arpl
add
clc
daa
clc
cmp
clc
and
add
push
jmp
dec
inc
add
lods
add
or
adc
add
clc
jle
sub
push
jo
add
sti
or
jns
lock
add
popa
add
push
pop
sub
xchg
cmp
add
pop
clc
insb
movsl
clc
xchg
test
dec
aad
ja
xabort
clc
lea
add
add
sbb
mov
cmp
pop
sub
ljmp
adc
add
dec
add
add
clc
popa
add
xor
add
aas
adc
add
add
das
mov
clc
loope
xchg
psrlw
fistl
clc
iret
gs
add
push
xchg
mov
cmp
clc
mull
add
cmp
stc
sub
lock
pop
or
add
sti
and
add
out
add
add
