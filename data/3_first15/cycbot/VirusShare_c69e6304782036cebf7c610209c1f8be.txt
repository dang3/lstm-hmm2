mov
call
mov
mov
in
mov
repnz
push
leave
mov
pop
shll
pop
lret
mov
add
mov
outsb
hlt
mov
push
shll
jbe
out
jbe
xorb
xor
jbe
xorl
mov
scas
mov
mov
mov
add
jbe
test
jbe
sbb
jbe
dec
mov
mov
mov
sbb
mov
mov
lds
mov
mov
icebp
jmp
mov
loope
mov
mov
xorb
dec
mov
xchg
shlb
jbe
xchg
mov
iret
add
jbe
scas
mov
call
mov
add
add
insb
push
out
jne
jns
jne
xchg
in
jne
lahf
out
jne
imul
loope
out
jne
pop
in
jne
loopne
jne
outsb
repz
add
add
add
ja
or
ja
sub
ja
sbb
ja
icebp
shll
ret
test
shll
shll
ret
adc
ja
add
ret
sub
ja
xor
ja
xor
ja
cmp
ja
adc
ja
xchg
shll
shll
ret
ja
push
ret
es
pop
ret
sub
ja
or
shlb
ret
mov
ret
inc
ja
pop
shll
shll
shll
shll
shlb
shll
ret
adc
ja
sub
ja
adc
ja
sub
ja
cmpsl
shlb
shlb
ret
ja
aad
ja
sbb
ja
int3
shll
shll
ret
shll
shll
shll
shlb
shll
ret
icebp
shll
add
and
daa
mov
cs
mov
cld
inc
mov
enter
dec
lcall
stc
mov
ja
loope
ja
daa
mov
inc
mov
ja
and
mov
ja
mov
ja
mov
add
jle
jecxz
dec
out
ja
mov
ja
add
ja
mov
ja
fsub
ja
mov
ja
mov
ja
movsb
int
jno
call
ja
mov
loop
pop
cld
loop
fwait
mov
ja
sub
ja
shl
ja
mov
ja
ljmp
popa
shl
ja
mov
loop
sub
loop
adc
ja
sbb
ja
sbb
ja
mov
in
push
xor
int
mov
jecxz
rcrb
jns
loop
shlb
ja
mov
ja
mov
ja
in
ja
xchg
jecxz
cltd
add
ja
shl
ja
add
add
fs
sahf
out
insb
addl
out
sub
add
fwait
or
lret
sub
out
jbe
inc
out
push
in
jbe
pop
or
out
int3
sbb
jbe
addl
or
or
add
add
jae
jbe
insl
push
jbe
int
jbe
lret
mov
push
jbe
bnd
lea
mov
mov
data16
pop
gs
lcall
mov
inc
data16
xchg
gs
jge
jbe
andb
icebp
gs
push
gs
gs
push
jbe
stc
gs
outsl
gs
insb
gs
mov
gs
cmpsb
gs
mov
gs
addr16
mov
mov
mov
addr16
inc
data16
scas
gs
or
push
movsb
gs
lea
js
data16
mov
gs
int3
gs
data16
nop
gs
cltd
gs
jno
jbe
jg
jbe
nop
gs
mov
add
sub
scas
shlb
inc
shlb
pop
shlb
aam
mov
shll
ljmp
and
shlb
dec
shlb
jecxz
jbe
call
shlb
loop
jbe
shlb
inc
shlb
jl
jbe
jecxz
jbe
inc
shlb
loope
jbe
or
jbe
js
jbe
loope
jbe
shlb
dec
shlb
inc
shlb
push
shlb
add
add
sbb
add
ja
fs
sbb
lods
ja
sub
stos
fs
lcall
ja
subl
rcrb
ja
mov
stos
ja
arpl
ja
shrl
ja
cmp
std
mov
push
arpl
ja
arpl
ja
aam
ja
shrb
ja
inc
mov
gs
lods
ja
lods
ja
arpl
ja
and
xor
add
add
test
ja
mov
ja
push
iret
ja
and
int3
ja
mov
lret
ja
dec
iret
ja
mov
ja
sti
shlb
push
iret
ja
push
into
ja
adc
ja
jle
ja
dec
iret
ja
push
into
ja
pop
iret
ja
push
iret
ja
push
iret
ja
xchg
xlat
ja
scas
shlb
sub
ja
ja
pop
iret
ja
push
shlb
cmp
ja
dec
iret
ja
push
iret
ja
fmul
ja
in
lret
ja
push
iret
ja
addr16
lods
icebp
shlb
xor
ja
xor
ja
scas
shll
xchg
shlb
int
mov
iret
ja
xchg
int
xchg
popa
int
rcrb
ja
mov
ja
ret
inc
push
iret
ja
pop
iret
ja
push
iret
ja
push
lret
ja
inc
into
ja
push
iret
ja
add
add
call
cmp
sub
jno
jbe
mov
cmp
jmp
jbe
cmp
clc
ss
push
cmp
out
ss
out
ss
mov
jbe
mov
cmp
sub
jbe
sti
cmp
jbe
cltd
cmp
flds
add
cmp
adc
jbe
sub
jbe
jmp
cmp
jbe
leave
ss
mov
aaa
jbe
inc
aaa
jbe
aas
cmp
les
jbe
mov
jbe
add
add
jbe
or
iret
insb
jbe
push
insl
jbe
outsl
jbe
test
fldcw
jo
jbe
outsb
jbe
xchg
insl
jbe
in
insb
jbe
cmpsl
insb
jbe
jnp
jbe
test
ljmp
jbe
cs
jbe
imul
in
jbe
imul
clc
pusha
insb
jbe
xchg
insl
jbe
loope
jbe
insb
jbe
push
insl
jbe
int3
insb
jbe
out
jbe
subb
sub
in
fisubrs
xor
insl
jbe
int
jbe
test
insl
jbe
mov
jbe
mov
insb
jbe
out
insl
jbe
enter
push
insl
jbe
push
outsl
jbe
je
jbe
repnz
jbe
cmp
neg
insb
jbe
popa
insb
jbe
lock
jbe
je
jbe
sub
xorb
testl
mov
insb
jbe
or
jbe
das
insl
jbe
or
stos
insb
jbe
ja
jbe
fildll
and
popa
push
insl
jbe
ljmp
leave
jnp
jbe
mov
jbe
lret
insb
jbe
dec
outsl
jbe
and
or
fimull
jbe
shrl
insb
jbe
aad
jbe
loop
jbe
subb
test
jbe
push
insl
jbe
add
add
neg
jbe
add
jbe
or
jbe
fcmovnu
jbe
ret
fidivl
rcr
jbe
jbe
pop
fstp
jbe
fcmovu
jbe
mov
jbe
mov
jbe
jbe
mov
jbe
dec
call
rcr
pop
jbe
mov
jbe
rcr
add
fidivl
aaa
rcr
scas
fcmovnu
jbe
sahf
fidivl
xor
jbe
fidivl
fidivl
xchg
fbstp
inc
inc
fdivl
add
jbe
repz
add
jbe
xlat
fdivl
neg
jbe
jmp
inc
cli
fidivl
mov
jbe
inc
cli
fdivl
or
add
jbe
outsb
loopne
push
lods
fidivl
rcr
jbe
xor
fidivl
stc
fidivl
cmp
jbe
mov
jbe
xor
jbe
add
fidivl
pushf
fidivl
mov
jbe
mov
jbe
sub
jbe
jmp
fidivl
fcomp
jbe
fdivl
out
jbe
adc
jbe
aam
jbe
mov
jbe
cwtl
rcr
jbe
test
fbstp
inc
add
add
xor
sbb
jne
fcmovb
ja
sbb
jne
cmp
xor
sbb
jne
sbb
jne
add
add
add
add
in
sub
sub
push
call
pop
call
push
call
pop
call
call
push
lea
push
call
add
call
mov
push
call
pop
lea
push
xor
push
push
call
call
lea
push
lea
push
call
add
lea
push
sub
push
mov
push
call
push
push
lea
push
call
lea
push
push
call
lea
push
sub
push
push
call
xor
push
call
pop
call
sub
push
call
pop
call
sub
push
call
call
push
call
pop
call
lea
push
push
call
lea
push
lea
push
call
add
lea
push
push
push
call
call
push
xor
push
call
add
push
lea
push
call
add
push
call
pop
push
mov
push
lea
push
call
call
push
call
call
push
push
call
add
call
call
call
push
call
pop
call
sub
push
call
lea
push
call
pop
mov
push
call
pop
call
push
call
pop
call
call
push
call
call
push
lea
push
call
add
call
lea
push
call
pop
call
lea
push
xor
push
push
call
call
mov
push
lea
push
call
add
mov
push
call
pop
push
call
call
call
call
mov
push
call
pop
push
call
pop
lea
push
lea
push
call
add
mov
push
call
pop
call
xor
push
call
lea
push
call
call
xor
push
call
call
mov
push
call
pop
call
call
lea
push
call
lea
push
call
push
call
pop
call
lea
push
call
call
lea
push
call
sub
push
call
pop
xor
push
call
call
push
call
mov
push
mov
push
lea
push
call
push
lea
push
call
add
leave
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
lea
push
call
call
push
mov
push
call
add
mov
push
call
pop
mov
push
push
lea
push
call
call
push
call
lea
push
call
pop
xor
push
call
push
sub
push
call
add
push
call
call
push
call
call
push
xor
push
call
add
call
lea
push
call
pop
push
call
pop
sub
push
call
mov
push
call
pop
mov
push
lea
push
call
add
call
push
call
call
lea
push
call
pop
push
xor
push
call
add
lea
push
call
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
push
call
pop
push
call
pop
lea
push
lea
push
call
add
mov
push
call
pop
lea
push
xor
push
mov
push
call
lea
push
sub
push
call
lea
push
call
call
mov
push
mov
push
lea
push
call
push
call
pop
push
call
pop
lea
push
call
pop
call
push
call
pop
push
call
call
mov
push
push
call
add
mov
push
lea
push
call
add
mov
push
call
pop
call
push
call
call
mov
push
call
push
call
pop
mov
push
lea
push
call
add
xor
push
call
lea
push
lea
push
call
add
sub
push
call
mov
push
lea
push
call
call
mov
push
push
lea
push
call
mov
push
call
pop
lea
push
xor
push
call
call
mov
push
call
pop
push
lea
push
call
add
call
call
xor
push
call
push
push
lea
push
call
lea
push
sub
push
mov
push
call
call
push
push
lea
push
call
leave
ret
nop
nop
nop
push
mov
sub
call
lea
push
call
pop
push
call
call
push
call
pop
lea
push
lea
push
call
add
call
push
call
pop
push
call
pop
call
push
lea
push
call
call
lea
push
lea
push
call
add
push
call
pop
leave
ret
nop
nop
nop
nop
nop
push
mov
sub
call
mov
push
call
pop
mov
push
mov
push
lea
push
call
lea
push
call
push
push
push
call
cmpl
jne
cmpl
jne
pusha
push
push
push
push
call
mov
push
push
push
call
cmpl
jne
mov
mov
movl
mov
add
add
add
mov
add
add
cmp
jne
call
push
mov
push
lea
push
call
lea
push
call
call
push
call
pop
lea
push
call
pop
sub
push
call
pop
push
call
pop
push
call
pop
lea
push
sub
push
call
call
call
call
mov
push
mov
push
lea
push
call
call
call
call
push
call
pop
call
leave
ret
nop
nop
nop
nop
push
movl
ret
stc
pop
mov
mov
aas
pop
push
faddl
add
push
xor
nop
mov
adc
mov
xor
xor
sbb
dec
lock
mov
dec
xor
jg
inc
cwtl
jge
push
inc
jnp
fistl
inc
jnp
je
mov
pop
fistl
push
inc
das
clc
sbb
xchg
xor
sub
fmuls
sub
mov
cmp
fisubrs
add
or
das
cmp
mov
mov
lods
dec
test
sub
ror
pushf
stc
pop
rcr
push
or
into
popa
xor
rcrl
jae
xchg
sub
call
sbb
imul
or
lahf
testl
jno
pop
cmp
or
test
das
mov
or
test
pop
push
dec
xor
aad
jb
push
mov
adc
lahf
mov
lahf
pop
and
rcll
daa
data16
pop
stos
test
and
dec
jle
cmpsl
inc
sub
cmc
pop
jp
xchg
cs
mov
mov
xor
xchg
hlt
rol
lods
pushf
fidivrs
jb
jl
push
les
add
icebp
fisttpll
and
lcall
pop
aaa
hlt
dec
add
lcall
adc
in
push
lock
dec
int3
lock
scas
mov
sub
push
cmp
cmp
sub
inc
in
and
sahf
fsubrl
and
or
mov
inc
sub
outsb
rcr
inc
loop
insb
mov
mov
hlt
int3
cmpsl
add
call
mov
fnsave
cli
xchg
lret
pusha
cmpsb
ffreep
imul
mov
lcall
out
mov
std
inc
cmc
pusha
loopne
rclb
push
incl
lea
repnz
sub
inc
mov
sbb
pop
repnz
dec
je
mov
mov
mov
jg
mov
mov
jle
lahf
icebp
fimull
sbb
or
fdivrp
aad
fisttps
les
lods
fs
inc
or
out
pop
outsl
xor
stos
mov
decl
in
leave
loop
inc
jl
std
icebp
or
xlat
movsb
adc
sti
iret
or
mov
int3
xlat
out
negb
iret
cmc
in
pushf
xchg
jae
int
xor
mov
mov
mov
or
lods
mov
jl
test
data16
test
je
jo
mov
adc
cmp
and
outsl
cmp
xor
das
push
loop
cmpsl
ss
push
push
cmp
les
leave
pushf
mov
dec
int3
pop
call
xor
sbb
imul
in
mov
rcll
ficomps
cs
push
dec
jg
pop
pushf
xorb
nop
sub
out
push
test
jbe
stos
dec
insl
cwtl
add
xor
dec
dec
push
push
mov
cmpsl
mov
leave
jns
lock
lret
push
and
xor
inc
loop
xor
inc
sbb
bound
test
inc
push
je
ss
ret
lods
jns
cmp
mov
sub
das
xor
mov
xor
loop
cmp
push
popa
dec
mov
test
pop
adc
xchg
cmp
inc
and
fwait
loop
mov
push
mov
xchg
pop
xor
xchg
in
std
mov
add
pop
and
pop
fwait
cli
mov
stos
xchg
push
cmp
gs
adc
shll
incl
scas
cmp
into
pusha
mov
sub
cmp
lods
arpl
mov
jno
arpl
or
xor
jg
xor
cld
jmp
out
fcoms
add
cmp
push
jbe
add
cmc
std
loop
cld
sbb
add
cli
lds
sbb
nop
and
pusha
push
std
xchg
inc
popf
jb
fstl
in
inc
xchg
xorl
mov
dec
mov
pop
dec
dec
mov
push
movsl
dec
add
cmc
and
sub
pop
sbb
push
ds
or
mov
or
lods
ret
stos
mov
push
sahf
add
not
xor
leave
cwtl
sub
xor
adc
xchg
jp
aam
pop
add
adc
orb
and
inc
outsb
add
out
daa
jp
leave
aaa
xor
int3
dec
mov
inc
pop
dec
sbb
inc
or
xor
test
dec
fld
mov
sbb
popf
sub
out
pop
sahf
and
lret
icebp
in
in
or
sbb
lahf
mov
mov
loopne
js
fsubl
jo
and
rclb
outsb
das
dec
xor
out
inc
cmp
pop
jg
mov
sub
inc
imul
out
push
inc
iret
push
mov
add
cmp
dec
xchg
push
in
lds
loopne
aas
aas
adc
mov
pop
mov
sbb
mov
add
inc
mov
int
sbb
push
push
or
stc
dec
mov
lds
and
dec
in
rorl
push
mov
cmp
cli
push
imul
fcoml
lock
add
mov
add
push
dec
xchg
daa
fisttpl
es
mov
pop
outsb
arpl
fistps
mov
xchg
repnz
xchg
test
mov
out
jns
push
mov
inc
hlt
test
cmp
fisttpll
pop
xor
loope
dec
mov
movsb
inc
push
dec
xchg
sub
mov
inc
adcl
or
arpl
jl
mov
test
add
mov
jne
sbb
sub
fdivrs
jae
testl
dec
out
movsb
fstpl
cwtl
sub
and
pop
cmpsb
jg
pusha
insl
int3
xchg
cmp
test
js
cmc
jmp
cmp
into
and
popa
negl
inc
jo
push
push
dec
scas
push
pop
outsb
pop
cwtl
scas
loop
pop
mov
push
inc
xchg
lret
mov
out
lret
inc
ss
les
cld
xchg
mov
cmp
cwtl
mov
xchg
or
stos
jmp
movsl
xor
jg
xlat
stos
lds
jecxz
in
jge
push
cmpsl
test
orb
aam
scas
scas
xor
dec
enter
cmp
adc
pop
mov
lea
les
loopne
jmp
push
or
cmpl
fcompl
adc
lcall
or
cmpsb
add
shufps
pop
fildl
xlat
mov
pusha
mov
and
or
or
ds
and
mov
mov
adcl
fwait
mov
jg
mov
fisubl
fs
adc
not
push
lods
lea
push
inc
movsb
pop
sarl
pushf
das
mov
xchg
cmpb
xchg
call
nop
sti
lret
icebp
data16
pop
mov
cs
fsts
cmp
cli
adc
lds
stc
shrl
loop
push
subb
mov
add
sbb
arpl
or
mov
aad
enter
cs
shrl
and
sahf
push
sbb
add
aad
popa
cltd
mov
dec
pop
and
push
sbb
or
lea
bound
jmp
fadds
jb
and
leave
mov
xor
push
inc
fld
sarl
pop
lret
nop
sub
movsb
stc
fcoms
jo
xchg
pop
lcall
int3
and
add
nop
xchg
pop
add
xchg
dec
lcall
xchg
rorl
imul
aad
xor
fmuls
mov
fisttpll
jmp
mov
xchg
pop
adc
imul
jg
fstpl
adc
das
test
mov
xor
aaa
xor
sub
sbb
xchg
fcmove
jl
sbb
out
mov
vmwrite
adc
mov
and
jbe
insb
jo
mov
icebp
cmc
pop
repnz
sbb
imul
sub
outsb
sbb
imul
lods
jl
cmp
add
scas
mull
jns
orb
scas
xor
loope
std
sub
cmp
outsb
in
and
shll
clc
pusha
shl
lret
int3
pop
loop
dec
hlt
jb
filds
loope
pop
or
outsl
outsb
sbb
int
pop
les
enter
ss
mov
push
cmp
popa
jb
arpl
fwait
in
add
sub
dec
stos
xchg
idivb
repnz
pop
push
ss
mov
hlt
adc
mov
add
push
xor
pop
dec
mov
xor
pushf
or
lock
cmp
rorl
mov
jp
cli
hlt
push
addr16
sbb
stos
mov
cmc
and
push
pushf
push
fcmovb
jnp
ljmp
xor
or
ret
add
pop
pop
add
das
pop
push
lret
mov
adc
shrl
jmp
std
sub
out
in
mov
add
and
push
and
repz
pcmpgtw
data16
dec
daa
cmp
sbb
xor
call
push
xchg
sbb
movsl
xchg
rorl
inc
popa
xor
push
shrb
in
dec
test
mov
mov
xor
andl
addr16
ret
cs
push
icebp
loopne
addl
cld
adc
sub
cmpsb
push
jae
lret
jb
inc
and
xchg
xchg
loop
jp
jl
ffree
lods
aam
pop
xor
mov
ror
and
mov
inc
bound
out
sbb
cmc
icebp
jg
or
out
dec
add
push
jle
mov
ljmp
test
or
cmp
cmp
int3
jmp
daa
fsts
xchg
sub
xchg
out
push
ds
sub
data16
jnp
mov
jge
orl
mov
adc
neg
and
jns
fldt
xchg
mov
jl
add
out
adc
jmp
xor
mov
mov
into
mov
data16
mov
gs
test
cmp
hlt
cs
and
enter
inc
pop
xlat
scas
gs
out
fisubrl
and
cli
insb
insl
fnstsw
mov
jg
jle
jmp
pop
jmp
fcmovu
ret
clc
pop
xlat
fst
jae
mov
fistps
mov
adc
cmp
or
insb
mov
out
or
pop
mov
iret
mov
pop
je
inc
mov
xchg
movsl
outsl
xor
mov
xchg
dec
cltd
xor
push
jnp
int
push
lcall
lcall
dec
push
fcomps
push
std
add
add
sbb
pop
mov
xchg
icebp
pop
cmp
lds
fisubrs
fisubl
push
bound
pop
add
lea
inc
jg
add
mov
insb
cmp
adc
xor
jno
mov
cli
mov
ja
cmc
loopne
adc
js
out
or
xchg
or
fldenv
or
leave
sbb
mov
mov
mov
frstor
push
repz
aas
arpl
jle
shrb
push
out
dec
adc
testl
xor
cmp
or
cmp
mov
ret
adc
in
dec
repnz
and
lret
mov
fidivs
adc
arpl
incb
cli
icebp
cmp
loopne
jne
std
ds
sbb
subb
cmp
in
push
mov
adc
aas
jo
add
rcrl
call
repz
and
jmp
dec
dec
test
cmovnp
fistps
pop
and
jne
add
imul
repnz
lock
dec
pusha
pop
push
clc
jns
sub
cmpsl
into
add
lret
inc
pop
inc
jo
ret
arpl
dec
cmp
push
mov
mov
adc
mov
push
test
loop
and
add
push
adc
jo
aas
sbb
xor
arpl
decl
xor
and
ja
jp
mov
cmp
pop
test
jl
add
jne
nop
add
sub
dec
gs
xchg
pop
sub
push
addr16
adc
int3
leave
cmc
cmp
mov
xlat
hlt
dec
inc
jge
cmp
sub
enter
mov
sahf
nop
cmp
pushf
rcrb
add
jo
imul
repz
and
xor
mov
push
inc
add
jge
dec
aad
add
sub
xor
mov
cmp
dec
mov
fstpl
das
loopne
mov
adc
sub
hlt
mov
lret
sub
xchg
rcl
adc
xlat
fldenv
cmpsb
mov
mov
xchg
test
aad
pop
aad
jno
pop
xchg
pop
inc
push
push
adc
mov
xor
jg
mov
push
xchg
dec
push
jne
adc
test
ficomps
inc
jg
jge
jle
sbb
mov
loop
xchg
jecxz
out
enter
lret
pop
pop
pop
inc
jp
pop
fdivl
jae
mov
push
jl
cmp
pusha
mov
aad
mov
jns
push
inc
jl
inc
lahf
sbb
mov
cld
imul
and
pushf
movsl
push
mov
fwait
xchg
add
stc
inc
icebp
dec
push
pop
pop
add
andl
jecxz
sub
into
adcl
sbb
mov
or
mov
aam
jl
sbb
aas
add
movsb
adc
or
inc
js
das
and
push
adc
loope
jp
xchg
sub
lock
jo
or
or
lcall
dec
sahf
jp
add
cwtl
notl
xchg
shlb
sar
sti
iret
push
js
inc
sub
stc
xchg
or
hlt
inc
dec
in
mov
daa
jge
js
sbb
icebp
jp
cmpsb
pushf
mov
addr16
jge
xor
sbb
fdivrs
xor
push
and
xchg
not
inc
out
xor
stc
js
xor
jb
pop
sbb
mov
or
sub
loop
push
mov
mov
lds
leave
add
add
dec
pop
xor
push
icebp
ljmp
pop
pop
ja
shr
test
dec
iret
ljmp
or
addr16
fldcw
push
fnsetpm(287
ret
inc
mov
add
incl
xchg
fldt
add
stos
pop
out
dec
sti
push
or
mov
adc
mov
subl
cli
add
xor
xor
push
outsl
mov
cmp
xchg
es
lods
cmp
lcall
add
cs
in
pop
pop
pop
add
repz
loopne
test
ret
jl
jne
pop
ljmp
xchg
notl
sarb
pushf
mov
cs
cmpsl
or
jecxz
cmp
xor
in
lret
lahf
lret
cs
lret
pop
add
pop
adc
out
ja
ljmp
clc
lahf
jmp
test
dec
test
shlb
pusha
push
fisubrl
dec
push
push
inc
xor
sti
xchg
insl
les
cld
lcall
xchg
stos
fdivl
cmp
and
mov
cwtl
cs
les
sub
jmp
xchg
xchg
push
lods
sbb
mov
shlb
or
cmp
testb
pop
fldl
mov
hlt
mov
push
and
test
insb
jno
outsl
sub
sbbl
push
gs
and
xchg
lods
arpl
mov
mov
into
out
or
add
int
lods
push
mov
mov
sub
pop
ret
stc
filds
xor
cmp
mov
sbbb
sbb
rorb
push
add
cmp
cld
mov
mov
jp
mov
xor
cmp
test
in
add
or
push
inc
mov
movsb
jb
or
adc
inc
je
jb
and
negb
and
push
insl
add
shl
xchg
int3
stos
mov
and
fidivs
adc
cltd
pop
imul
or
sbb
ds
popa
cltd
mov
loope
sbb
pop
pop
iret
and
or
int
mov
cli
fwait
cmp
aas
outsb
or
sub
stos
rol
repz
inc
push
int3
leave
mov
adc
sbb
and
int
sbb
rcll
xor
icebp
jno
stc
shlb
out
daa
mov
mov
in
mov
push
movsl
mov
dec
arpl
hlt
mov
xor
dec
xlat
mov
adc
add
outsl
sub
addl
jle
add
iret
int3
out
sbb
and
xchg
or
or
loopne
andl
jae
aam
mov
scas
xchg
sub
xor
cmp
or
lret
stos
jmp
incb
shll
fprem1
or
mov
lret
addr16
test
cltd
mov
inc
mov
adc
cmc
jl
insb
test
sub
lea
js
sub
xchg
cmp
jl
ret
adc
push
ret
dec
mov
pop
loop
add
movsb
push
outsb
sub
cs
and
into
stos
mov
outsb
cmp
out
cmp
imul
cmp
ficoml
pop
mov
and
cwtl
cmp
int
add
aad
incl
push
into
push
cmp
ss
mov
pop
or
pop
dec
sbb
sub
sub
pop
ds
dec
inc
in
dec
arpl
mov
adc
sub
outsb
daa
jo
aas
mov
mov
iret
pop
adc
dec
lods
out
xor
mov
call
arpl
mov
push
clc
and
xor
mov
int
adcl
icebp
push
out
aam
imul
and
js
sub
insb
xchg
mov
push
pop
es
xchg
xor
loop
add
imul
in
das
scas
lret
std
fcomp
mov
dec
add
pop
jmp
inc
dec
shlb
js
aas
jl
add
xchg
movsb
pushf
daa
loope
adc
jmp
mov
inc
cltd
mov
repnz
dec
aas
inc
out
jo
inc
js
mov
xchg
cmc
add
fisttpl
je
adc
sub
sti
pop
pop
ljmp
mov
std
dec
dec
sbb
add
add
es
pop
lret
fisubrs
aaa
fwait
xor
insb
jmp
pop
mov
and
mov
shl
int3
psubb
ss
dec
add
xlat
add
jns
pop
ja
in
icebp
xchg
sub
jp
or
cmp
mov
fmulp
pushf
mov
adc
cmp
les
fldcw
inc
sti
hlt
xchg
pop
pop
js,pt
cmpsb
pop
or
loopne
dec
adc
mov
push
sub
sub
jbe
imul
lret
test
dec
adc
repnz
imul
mov
xor
mov
fs
jbe
mov
and
pop
int3
mov
daa
cli
dec
push
and
ja
add
sahf
xor
adc
fsubs
jnp
mov
loope
mov
adc
lods
mov
inc
stos
lcall
xor
jne
shll
pop
sbb
mov
mov
mov
dec
lods
in
movsl
ret
sbb
arpl
or
neg
mov
xchg
lods
lock
sbb
cmp
stos
push
mov
into
push
push
pop
lea
cmpsl
or
push
and
subl
repnz
mov
repz
push
je
loop
lods
mov
add
dec
outsl
movl
ss
aas
push
pop
iret
dec
inc
sbb
lds
add
xor
add
std
mov
jg
mov
inc
jl
xor
xchg
je
mov
xor
insl
sahf
lret
nop
mov
lcall
add
xor
sti
cmp
mov
inc
pushf
ss
out
sbb
xor
add
cmp
push
xor
mov
jp
aas
nop
sbb
and
or
lods
adc
mov
das
jl
jmp
imul
add
sub
mov
cmp
movl
cli
fldcw
into
out
mov
mov
dec
repnz
adc
movsb
fdivrl
dec
inc
jmp
shlb
ljmp
out
fnsetpm(287
test
ss
out
dec
pop
push
or
pop
cmpsb
xor
lret
into
pop
jne
pop
push
outsl
leave
adc
mov
adc
dec
jne
repnz
pcmpeqw
lret
inc
ja
dec
int
fs
jl
mov
push
addr16
std
movsl
lds
mov
ljmp
pop
daa
rclb
jae
ds
out
data16
lods
mov
push
mov
mov
fdivl
in
mov
scas
sub
add
aas
push
cmp
jnp
dec
fidivs
mov
scas
lock
outsb
mov
cmc
xchg
mov
xchg
lahf
mov
jbe
pushf
adc
xlat
movb
pop
pop
ljmp
rolb
and
inc
sbb
das
dec
mov
mov
movsb
hlt
jge
icebp
stc
sbbl
clc
ja
pop
jb
stos
addr16
in
nop
mov
mov
xchg
dec
data16
ss
mov
jg
cltd
dec
adc
xchg
inc
xor
leave
fwait
mov
jns
dec
mov
jmp
leave
jmp
jmp
cmp
pusha
in
jmp
enter
shrb
hlt
jae
loope
shl
sarb
push
out
mov
and
mov
pop
mov
insb
into
jne
jb
mov
scas
mov
sahf
mov
lahf
sbb
sub
int
mov
inc
arpl
add
mov
push
and
adc
pop
push
cmp
xor
dec
movsb
int
mov
repz
jae
inc
mov
sbb
ja
cmp
mov
pop
xor
cltd
dec
adc
loop
xorl
shl
idivb
daa
pop
add
iret
and
sti
pop
repz
push
repz
xor
sub
mov
mulb
lcall
arpl
movsl
add
test
inc
add
mov
js
outsb
push
or
mov
or
sub
sti
fwait
arpl
inc
scas
mov
add
cmp
int
jge
mov
jg
mov
nop
sbb
int3
add
notl
lret
xchg
jno
mov
mov
lock
mov
mov
jg
fldcw
aad
lcall
out
lcall
cmc
mov
ficompl
inc
mov
adc
mov
mov
fmul
mov
fidivl
std
add
pop
insb
cmp
loop
pop
fldcw
fisubl
jae
and
in
adc
mov
shll
push
inc
insb
je
sbb
aam
inc
addr16
sub
fs
xchg
adc
push
dec
arpl
negb
and
add
test
orps
mov
out
xchg
out
push
testl
outsl
cmp
and
or
call
out
enter
shl
add
adc
inc
sub
add
rcll
sahf
lods
loopne
test
xchg
addr16
das
inc
out
push
fisttpll
push
lahf
push
sbb
jae
xchg
sbb
cltd
jb
adc
push
loopne
inc
cltd
adc
stc
add
fadds
repz
push
stos
fistpll
mov
or
jne
pop
loop
ljmp
stos
in
ljmp
mov
cwtl
xlat
test
mov
lcall
fwait
gs
sbb
add
shrl
rolb
fwait
mov
shll
nop
aad
setbe
mov
jno
inc
or
cmpsl
mov
lret
mov
jbe
in
ret
fnsave
hlt
loopne
out
mov
icebp
mov
push
add
aad
jp
add
aad
cltd
mov
std
adc
sub
iret
pop
lock
inc
push
pop
fsubrl
inc
hlt
sbb
jae
jle
lcall
add
adc
sahf
fimuls
and
jns
pop
push
enter
pushf
sbb
xlat
add
sub
push
push
adc
mov
shll
cmp
bound
xchg
dec
sbb
les
shll
aaa
stc
das
inc
pop
push
jo
bound
xor
sub
xchg
inc
scas
ja
ret
test
popa
adc
cmp
inc
pusha
aad
jns
ret
xor
mov
mov
sahf
stc
je
pop
outsl
sbb
push
add
jbe
pushf
xor
and
adc
imul
or
rcl
inc
and
or
into
mov
xchg
and
js
mov
loop
adcl
jmp
arpl
aad
dec
or
push
mov
jnp
lret
rcrb
fwait
mov
jmp
pop
sub
ljmp
xor
scas
sbb
push
cld
lret
push
xchg
mov
or
insb
into
cmpsl
add
cs
das
cli
xchg
lds
and
repz
ficoms
inc
dec
fbstp
xor
mov
xchg
in
shl
and
pop
fisttpl
rorl
mov
hlt
dec
cmp
add
mov
pop
dec
outsb
jge
inc
ret
stos
fisubrl
inc
push
outsl
cli
or
add
mov
dec
test
aad
lea
mov
stos
lahf
mov
ret
setnp
or
shrl
imul
jmp
or
cld
int
lock
pusha
test
cmpl
mov
int
mov
aaa
add
jg
adc
add
pop
push
nop
mov
cmpsb
popa
push
cmp
nop
btc
popa
loop
lcall
lods
sahf
pop
jecxz
incb
mov
dec
jo
push
rol
nop
and
adcl
in
aaa
filds
imul
xor
mov
xchg
mov
inc
daa
mov
add
cmp
iret
pop
repnz
fidivs
out
lahf
sbb
leave
cmp
cli
outsb
mov
jmp
mov
inc
nop
mov
imul
scas
mov
aas
sti
mov
push
sub
adc
mov
ret
into
jae
dec
cmp
inc
xchg
sub
or
icebp
pop
sub
pop
test
adc
jae
jmp
lret
gs
jne
or
lea
pop
into
cmpsb
sub
loop
scas
mov
int
adc
rorl
adc
js
je
or
into
hlt
insb
adc
fdivrl
sahf
fadds
adc
push
jbe
pop
push
and
idivb
icebp
sbb
push
les
loopne
and
enter
inc
stc
addl
fldl
in
mov
aam
scas
sbb
and
repnz
and
jb
cmpsl
push
das
enter
add
jp
int
mov
shll
movsl
fistpll
xor
imul
jnp
cmpsb
cli
mov
sti
xchg
jecxz
push
insl
stc
jmp
pop
mov
xor
xchg
pushf
and
xchg
in
fcoml
fidivs
xor
push
add
xor
daa
and
orb
lds
mov
in
fldenv
pop
mov
or
lret
fnstenv
add
pop
xchg
mov
cmpsl
fucomip
adc
jl
dec
xor
popf
sub
adc
loope
push
xchg
fistps
xchg
in
dec
inc
cmc
movsb
imulb
sub
fwait
cs
es
push
setb
add
cmp
int
jne
or
lret
insb
repz
data16
pop
lahf
mov
repnz
push
mov
or
mov
dec
cmp
push
xor
imul
cs
cmovg
mov
outsb
fdivs
jne
insl
notl
clc
fs
sub
cmpsb
js
cmp
mov
xor
repnz
inc
xor
fnstsw
lea
call
out
sub
push
pop
jl
and
shl
push
mov
xchg
adc
dec
rclb
stos
mov
dec
movsb
rol
js
add
mov
scas
insl
shrb
out
sbb
xor
xor
inc
imul
xor
sbb
adc
sbb
mov
fisubs
mov
mov
sbb
pop
frstpm(287
orl
lea
jno
push
mov
xchg
xor
jo
mov
daa
sbb
push
push
fstpl
and
scas
mov
cwtl
cwtl
or
mov
nop
ds
aas
mov
xor
aaa
cmp
je
scas
sub
push
dec
xchg
cmp
outsb
int3
lods
adc
add
push
inc
ja
addr16
jecxz
pop
fnstcw
pop
std
das
jno
xchg
movsb
leave
stos
pushf
mov
outsl
sbb
inc
in
cmc
lret
sti
hlt
mov
push
sub
push
jle
mov
and
mov
jge
scas
in
cmc
data16
rcrb
dec
mov
mov
enter
rorb
jle
sbb
cwtl
dec
iret
fdivs
xchg
shr
frstor
pop
cmpsl
aad
ret
cmp
stos
lcall
fisubl
dec
roll
lods
push
push
imul
xchg
add
fwait
push
jmp
es
ret
and
lods
adc
cld
enter
mov
push
loop
adc
mov
dec
push
adc
jne
test
ret
mov
xchg
test
push
cld
rcl
aas
lret
shrb
sbb
in
push
pusha
call
cltd
jl
hlt
cmp
dec
lcall
pop
call
inc
sub
mov
shlb
imulb
das
push
repnz
mulb
jmp
xor
pop
les
imul
cmp
push
cmpsl
mov
mov
test
outsl
or
clc
push
out
adcb
lds
pop
mov
xor
das
mov
cmpsl
mov
or
mov
fwait
nop
test
into
jae
lds
dec
cld
push
dec
pop
or
in
inc
enter
xchg
fimull
add
iret
xchg
add
rol
sub
xorl
jns
lock
mov
sti
adc
in
jo
lds
mov
fistl
cmpsb
aam
cmp
jmp
insb
inc
aas
sub
enter
dec
out
movsl
clc
xchg
loop
push
iret
addl
stos
aas
cmp
push
pop
push
inc
outsb
mov
arpl
aam
pop
jnp
mov
dec
mov
jb
jmp
push
lret
mov
incl
lret
mov
popf
and
dec
mov
dec
pop
jno
out
inc
push
into
xchg
push
xor
xchg
popf
xchg
mov
ret
out
cld
or
adc
pop
scas
sbb
pushf
cli
insb
cli
fbstp
rol
in
sbb
bound
add
jo
mov
sbb
jl
or
sbb
jg
xchg
pop
push
jle
sub
push
sti
mov
cmpsb
add
pop
repnz
pop
les
outsb
add
xlat
jb
ds
imul
hlt
shlb
push
pop
aad
jbe
addb
dec
cld
js
adc
outsl
scas
sbb
push
push
pop
mov
or
or
xchg
jl
cmp
lods
les
test
mov
lcall
push
mov
in
mov
popa
pop
add
pop
in
and
lods
cmovl
shrb
and
cli
lahf
adc
jne
pop
mov
lods
add
mov
dec
or
adc
pop
mov
pop
jg
jns
push
orl
data16
adc
fwait
xorl
data16
pop
leave
jmp
add
xor
lret
push
mov
mov
ss
cs
xor
aaa
lods
mov
push
adc
add
cmp
push
inc
decl
out
add
cmpsb
pop
and
leave
jnp
sub
cmp
lods
mov
sub
dec
adc
xchg
clc
repnz
add
sarl
cld
insb
mov
add
sbb
sarl
movsl
mov
push
pop
les
imul
cltd
push
dec
inc
mov
lret
js
dec
ret
xchg
cs
arpl
jo
cwtl
or
sahf
sub
leave
xor
push
insb
fists
or
rep
in
sbb
sub
les
jb
or
mov
ds
pop
lea
lret
arpl
mov
dec
add
scas
jl
mov
jae
jle
push
sub
pop
faddp
clc
lcall
add
in
jno
dec
fwait
sub
jo
inc
mov
je
mov
cs
aad
orl
or
ret
jmp
inc
hlt
lahf
sbb
daa
es
sbb
pop
xor
pop
jns
ja
dec
push
jge
mov
movsl
sahf
sbb
xor
mov
ja
cmp
mov
ss
dec
lret
sbb
sub
pop
cmp
xor
dec
xchg
in
dec
aas
mov
push
mov
jne
clc
test
or
cmp
mov
push
call
data16
scas
cmc
push
hlt
call
adc
mov
stos
loopne
sti
es
ljmp
push
insb
and
adc
jecxz
lcall
mov
xor
rcrl
cwtl
pop
jae
cli
mov
sub
pop
imul
adc
sbb
cmp
icebp
pushf
pop
sub
out
fisttpll
mov
out
bound
shlb
cmp
xchg
ficomps
cmp
sti
xor
mov
mov
popa
fidivrl
mov
push
test
cltd
ljmp
inc
insl
mov
jg
add
or
jae
test
rcll
dec
jp
movsl
or
and
mov
ficompl
push
adc
inc
mov
inc
mov
add
sbb
or
aaa
adc
cmp
ja
mov
int3
pop
stc
hlt
inc
mov
enter
xchg
data16
xor
adc
clc
test
clc
pop
fisubl
mov
aas
or
ja
lds
cltd
shll
or
mov
or
sub
push
dec
or
mov
jb
mov
shl
add
sub
push
loop
ss
aad
jecxz
add
ret
aad
sbb
push
push
and
in
jg
mov
jno
cmp
loop
jns
ja
xor
lds
cmp
push
sbbl
mov
mov
cmpsb
les
jmp
lods
daa
ret
dec
xchg
adc
jnp
cmp
pushf
xchg
push
cmpsb
adc
fldcw
addl
out
pop
outsb
cmpsb
fs
in
in
sbb
add
out
in
xor
adc
cmp
cmc
rcrb
jmp
enter
into
mov
cmpsb
inc
ja
lods
mov
cmp
pop
bound
mov
push
mov
ret
pop
fimuls
jge
les
adc
jle
leave
arpl
int
fwait
shrb
testl
out
mov
insb
ljmp
adc
pushf
test
ja
dec
mov
pop
or
ficomps
shrl
xchg
aad
push
fisubl
mov
shll
lcall
adc
gs
shll
add
out
mov
pop
scas
inc
daa
iret
push
fwait
inc
jne
ret
and
insl
sbb
clc
lods
jecxz
fidivs
xchg
std
insl
dec
std
std
sbbb
aaa
inc
repz
xorb
aam
loope
jg
mov
fdivs
outsl
js
push
push
orl
push
bound
mov
cmp
sbb
jmp
shl
out
clc
fidivs
xor
sub
repz
out
inc
movsb
xchg
and
sub
ss
sti
and
stos
add
mov
ss
int3
push
sbb
mov
add
push
adc
and
pop
push
mov
lods
mov
dec
pop
xchg
fidivrl
aad
cmp
cmp
call
jnp
sub
pop
or
or
xor
cltd
out
mov
data16
sti
test
pop
out
dec
push
cmpsb
cmc
xor
leave
repnz
or
pop
cli
outsl
inc
pop
aad
mov
and
cmc
in
add
jo
xchg
mov
jecxz
push
test
lea
inc
mov
inc
jns
xor
push
and
imul
enter
loop
das
push
xchg
pop
jno
jg
pshufw
repz
sub
mov
or
push
or
rcr
idiv
cmpsb
fs
aam
movsl
scas
js
test
push
bound
leave
cmpsl
add
je
push
or
jle
mov
repnz
cld
pop
fidivrl
and
ljmp
clc
cmc
sbb
stc
idiv
xchg
jg
int
pop
inc
sub
cwtl
mov
jge
outsb
add
nop
sbb
hlt
clc
xchg
mov
loop
xor
cmc
add
fs
sub
cmp
insl
sub
and
inc
sahf
jo
mov
jbe
imul
pop
mov
and
jge
pop
int
mov
push
cwtl
jb
je
loop
xchg
fnstcw
mov
adc
dec
repz
lcall
dec
adc
sbb
dec
cld
data16
cmpl
or
mov
nop
push
xchg
dec
cli
jecxz
xor
push
push
cmp
pop
mov
ret
rcll
pop
cmp
mov
iret
mov
int3
scas
add
push
fisttps
inc
repnz
repz
adc
inc
mov
in
sbb
xor
sbb
repz
xchg
adc
pop
cld
lcall
repnz
dec
ds
daa
out
push
jle
dec
movsb
jo
ffree
xchg
test
or
mov
lret
push
filds
push
pop
or
sbb
adc
or
push
shl
xor
jb
xchg
adc
mov
mov
cli
ss
push
cmp
ret
fwait
inc
mov
add
in
mov
jno
push
cmp
push
addr16
or
insb
cli
outsl
inc
sub
mov
mov
or
pop
ljmp
mov
cmp
push
or
jmp
push
ffreep
jns
xor
repz
divl
clc
fstps
mov
dec
out
test
das
testl
out
xchg
les
cmpsl
imul
aaa
movsb
icebp
out
mov
shrb
fmuls
jb
outsl
test
sbb
outsb
mov
das
fistps
aas
xchg
std
adc
shll
xor
add
fidivl
loop
mov
xchg
mov
xchg
pop
mov
stos
adcl
aam
and
mov
dec
aaa
push
aas
popa
or
and
nop
loopne
loope
cmp
imul
cmp
xchg
mov
dec
dec
and
mov
bound
mov
push
les
mov
sub
pop
mov
idivb
pop
repz
xor
pop
fst
mov
pop
cli
loopnew
push
je
stos
jmp
add
outsl
test
pop
pop
mov
mov
xchg
mov
xchg
xchg
ret
test
cld
add
and
aam
addr16
inc
mov
mov
insb
jp
cli
dec
jg
fistpl
out
pop
repz
cwtl
pop
inc
movsl
pop
movsl
jbe
xchg
mov
imul
ret
dec
cmc
push
pushl
dec
mov
cli
mov
int
je
mov
push
scas
filds
outsl
pop
push
js
pop
frndint
mov
dec
sbb
in
loopne
cmpsb
mov
xchg
rcll
push
sti
mov
mov
popl
pop
or
add
std
subb
mov
movsb
fdivrp
bound
repz
jne
inc
icebp
out
and
mov
push
cmp
fsubr
pop
push
sub
or
cmp
rol
insl
or
pop
inc
fldcw
add
imul
cmpb
sub
xor
jo
stos
adc
dec
add
mov
test
call
lods
cmpsb
repnz
jo
mov
cmp
xchg
imul
shll
xchg
mov
lea
setno
mov
add
imul
aam
mov
mov
mov
cmp
hlt
jle
shrl
push
pusha
das
mov
loop
push
lea
or
divl
push
adc
xchg
lods
push
fildl
and
adc
pmuludq
fimull
cli
jb
stos
lahf
mov
adc
mov
pop
jnp
push
flds
xchg
jmp
xchg
inc
mov
jp
inc
ds
sub
xor
loop
leave
aad
ljmp
mov
mov
cld
xchg
addl
mov
fisttpll
fbld
mov
loope
rclb
add
insb
jg
push
xchg
daa
dec
mov
and
cmp
mov
iret
call
fisubrl
pop
dec
push
pop
mov
pop
loopne
ds
push
pop
lcall
or
arpl
int3
mov
jae
das
push
and
inc
in
enter
or
icebp
add
cmpsl
adc
stc
mov
lea
loop
in
or
loopne
mov
dec
aas
ret
jecxz
mov
pop
out
mov
fstpt
xchg
push
inc
sahf
fs
shlb
jb
mov
pop
aaa
push
mov
push
adc
aad
inc
dec
sbb
add
andl
xchg
in
mov
mov
and
mov
mov
pop
push
or
cli
popf
mov
xchg
test
mov
xchg
insb
push
inc
ds
cmp
rep
cmc
and
arpl
and
addr16
dec
std
imul
sbb
pop
cltd
and
pop
xchg
push
add
cmp
sbb
outsl
lea
mov
xchg
pop
adc
dec
stc
adc
xchg
mov
push
iret
inc
jge
cli
jnp
out
inc
xchg
sbb
loopne
cltd
sub
sub
add
out
xchg
and
mov
jnp,pt
lret
sub
ficoml
mov
mov
cli
orb
movsb
sbb
xchg
xchg
stos
mov
addl
jl
dec
imul
int
pop
shl
cmpsb
lret
test
test
cmp
sub
mov
in
jecxz
pushf
pop
test
in
lcall
jecxz
lds
vmread
adc
or
aam
or
push
adc
cmp
sbb
fidivs
roll
jno
enter
cmp
push
pop
loop
pop
adc
cli
jmp
adc
leave
and
dec
dec
sbb
adcb
les
out
ds
cmp
mov
push
and
or
rcl
adc
adc
jmp
imul
js
inc
nop
lahf
jae
xor
sub
test
imul
stos
cli
hlt
cmp
xor
xchg
notb
aam
push
mov
and
cld
sub
stos
sbb
shl
inc
push
ret
push
gs
dec
or
sti
scas
mov
inc
sub
sbb
test
int
sub
push
or
xlat
and
pop
xor
mov
mov
stc
mov
push
outsb
mov
mov
jmp
jbe
xchg
jmp
lret
or
aas
dec
adc
jae
sbb
sub
pop
xlat
fdiv
add
lahf
mov
add
sub
clc
jbe
ds
std
add
bound
mov
push
outsb
and
ret
out
jp
call
frstor
fimuls
xchg
adcb
jp
xchg
xchg
cwtl
cld
sbb
adc
adc
mov
bound
pop
mov
add
inc
fistps
jge
xor
rorb
xor
pop
dec
std
inc
out
rcrb
cltd
popf
mov
lock
ret
or
mov
and
mov
hlt
jb
mov
mov
jecxz
sbb
jo
mov
lods
mov
xor
aaa
jns
clc
scas
pop
xchg
gs
adc
mov
sub
in
xchg
jmp
adc
jg
or
cmp
rol
ljmp
in
dec
lret
dec
lahf
or
jmp
loopne
or
push
xchg
lret
lods
mov
cmp
cmp
push
popf
sub
mov
in
cli
inc
mov
leave
fstl
adc
mov
daa
pop
sbb
and
cmp
add
or
xchg
sbb
sbb
imulb
sbb
push
mov
xchg
xchg
jmp
dec
lahf
sahf
cmp
out
add
div
dec
popf
jle
pusha
sub
inc
inc
pop
mov
cmp
in
sahf
data16
inc
daa
or
cmp
or
dec
lods
pushf
popf
cmp
arpl
outsb
lret
mov
out
mov
sahf
mov
shll
mov
push
dec
cltd
xchg
test
add
mov
pop
sbb
mov
inc
sbb
adc
sahf
inc
jbe
cmpsb
out
jae
sub
btc
or
sbb
shrl
mov
jo
aam
sub
dec
ljmp
add
mov
mov
add
jmp
dec
popf
test
mov
aam
pop
arpl
add
in
lcall
pop
or
dec
cmp
orl
sub
test
and
sti
je
jnp
inc
mov
pusha
cltd
scas
and
cltd
test
pop
pop
inc
in
jmp
insl
psubq
and
scas
pusha
adc
xchg
fildl
dec
stos
jmp
or
and
dec
rolb
aaa
ds
hlt
test
mov
stos
mov
insl
ret
decl
mov
cmp
insl
js
aam
dec
push
and
ret
xchg
cld
pop
or
sbb
loope
movsl
add
xlat
lods
xor
or
sbb
mov
adc
or
mov
mov
call
xchg
xor
xchg
mov
data16
insb
or
stc
ljmp
jp
into
imul
imul
je
insl
jmp
xchg
xlat
xor
xor
movsl
push
loope
loop
sbb
adc
stos
icebp
cmpsl
ror
int
repnz
cmp
in
fadds
adc
outsb
lock
jl
mov
xchg
push
loop
pop
xchg
mov
in
mov
ds
shll
iret
ss
mov
andb
loope
insb
and
push
js
out
xor
dec
dec
fstl
jle
gs
dec
sub
cmp
xchg
int
adc
pop
sbb
ljmp
int3
fldt
mov
pop
ficompl
cmp
or
stc
xchg
mov
push
jno
and
sar
test
mov
das
xor
push
insl
push
stc
push
iret
add
mov
xor
mov
sub
sahf
dec
test
pop
inc
jmp
adc
cmpsb
and
and
and
in
popf
xchg
pop
or
je
or
sbb
hlt
jle
jne
fwait
add
jb
mov
fld
dec
lods
imul
and
xor
jp
pop
daa
adc
loopne
jnp
fdivs
push
icebp
fbld
and
arpl
js
xor
hlt
mov
jecxz
pop
cmp
mov
jecxz
push
imulb
xor
mov
xor
in
or
adc
mov
outsb
lods
mov
xchg
adc
and
sub
jb
pushf
jmp
nop
lret
mov
imul
scas
adc
gs
dec
jne
adc
push
push
repz
jl
test
and
bound
jb
in
jae
xor
or
mov
sbb
dec
pop
cwtl
adc
push
popf
aaa
dec
out
jmp
pop
lds
out
lock
inc
les
aas
fistl
adc
outsl
stos
sarb
sahf
jae
inc
rorb
std
jo
xor
test
orb
sti
jecxz
and
sbb
stc
cs
fisubrl
sbb
mov
mov
rclb
xor
enter
cmc
jnp
insb
ss
seto
mov
mov
xor
inc
outsl
stos
adc
mov
mov
pusha
add
fbstp
adc
sbb
xchg
dec
pusha
stc
inc
and
add
and
cmp
pop
fwait
cli
cmp
mov
cmp
inc
bound
xchg
push
leave
and
adc
repnz
add
xor
fdivrp
cld
add
icebp
in
pop
pop
adc
fwait
adc
js
sbb
cmp
mov
pop
scas
loope
xchg
fdivrl
pusha
rep
cmp
test
jg
add
pop
mov
jle
in
insl
rorl
jecxz
hlt
lahf
mov
adc
mov
pushf
bound
pop
rorb
out
daa
push
insl
jno
mov
addr16
lret
mov
xor
rcl
fimull
mov
mov
pop
fisttpll
mov
jne
or
lods
sbbl
mov
fisttpll
jp
cltd
mov
pop
movsbl
test
mov
mov
sub
rcl
stc
mov
inc
mov
cmp
push
lods
outsb
andb
or
ljmp
inc
mov
rcrl
dec
add
sub
add
dec
add
mov
daa
inc
outsb
cmp
pop
cld
inc
sub
push
shll
out
or
jo
arpl
cmp
jp
jge,pn
xchg
cmp
cmpsb
mov
xchg
and
and
or
ja
xlat
xchg
movsl
lcall
jge
xlat
jg
push
mov
imull
push
adc
mov
test
push
dec
xchg
mov
pop
out
add
shll
repz
lods
pop
mov
jmp
std
ljmp
call
or
sbb
out
pop
push
ret
fnstsw
aad
or
push
insl
ffreep
pop
push
jns
mov
lods
pushf
mov
mov
sub
mov
or
fcomi
daa
ja
jp
pop
test
push
fldl
push
and
pop
bound
adc
mov
outsb
gs
add
out
jb
pop
ror
les
loopne
in
jno
aad
out
jecxz
pop
outsl
pusha
aam
loope
push
mov
mov
and
add
shrl
fnstsw
popa
add
test
dec
adc
out
adc
adc
dec
pop
cmpsb
stos
xchg
mov
pop
pop
adc
pop
cmc
push
call
out
xchg
sbb
sbb
xor
cli
push
adc
sti
lods
push
cmp
aaa
movsb
stos
in
jbe
push
cmp
sub
aad
jge
sbb
mov
pusha
fdivrs
rorb
mov
xchg
or
push
mov
mov
mov
cmp
hlt
fcoms
cmpb
push
sbb
or
addr16
stos
hlt
jmp
cmpxchg
ja
enter
mov
cwtl
imul
xchg
lcall
and
daa
push
ret
add
adcb
aas
pop
mov
in
xchg
lock
mov
push
xchg
xor
add
jae
js
adc
xchg
lret
mov
sahf
fildll
adc
incl
push
push
iret
popf
lret
int
mulb
jp
repnz
lods
shld
stos
in
push
iret
int
dec
int3
push
sub
je
xchg
js
dec
lret
xor
repnz
push
dec
js
jge
jle
and
sbbb
pop
xchg
dec
cs
les
and
les
sarl
mov
xchg
outsb
data16
jmp
jo
sbb
stc
push
mov
stos
aaa
jg
inc
out
dec
cmp
fwait
sub
loop
jp
add
js
into
inc
sbb
fs
xchg
push
out
mov
pop
adc
nop
pop
mov
test
cwtl
cmp
decl
loop
pop
in
ss
leave
or
sbb
pop
jp
jge
loop
iret
pop
out
into
mov
cmp
and
es
mov
or
insb
loope
jp
stos
test
sub
es
xchg
movsl
push
xchg
and
mov
sub
mov
movsl
mov
decb
mov
add
pop
movsb
leave
and
mov
jp
pop
out
and
xchg
into
cmpsb
cmp
cli
shl
js
adc
xchg
sbb
dec
loope
sub
inc
and
pop
lods
push
cld
addr16
mov
mov
jl
push
lahf
xorl
mov
mov
loopne
lcall
mov
or
dec
xchg
hlt
cmpsb
mov
pop
mov
mov
xor
loope
aam
pop
stc
clc
inc
jo
inc
jmp
cs
dec
sub
test
mov
and
jmp
mov
mov
dec
xlat
lret
lahf
sbb
pop
das
sub
rolb
mov
sbb
jecxz
cmp
jns
lahf
add
inc
rcll
lcall
push
inc
repz
dec
outsb
sub
lahf
daa
je
xlat
and
xor
adc
std
pop
imul
arpl
lods
xchg
sti
lds
cmc
les
and
test
sbb
push
mov
push
test
inc
mov
push
sbb
mov
cmp
mov
push
imul
loopne
add
test
or
push
push
sub
iret
ficompl
in
ret
into
adcb
js
push
xor
adc
add
bnd
xor
popf
mov
inc
push
add
loop
mov
mov
les
mov
out
jb
fisubrs
les
mov
leave
pop
xchg
and
sub
and
cmc
xor
fidivs
xor
cwtl
cmp
rolb
cld
jns
ret
gs
pop
je
rcll
xchg
in
int
popa
add
and
push
inc
lods
xor
mov
inc
mov
ja
adc
mov
sub
sub
ret
xchg
mov
sbb
test
movsl
and
xchg
sub
inc
push
mov
out
out
sbb
or
sti
daa
gs
outsl
or
loopne
or
mov
xorb
push
inc
shl
jae
ljmp
add
pop
stos
or
cmc
add
in
xchg
adc
pop
fildll
xchg
outsl
xchg
lahf
mov
xor
jnp
sbb
popf
inc
mov
sub
mov
xchg
call
push
aam
aas
cs
mov
jno
jno
js
sub
je
fnsave
sti
sub
movsl
xor
or
fidivrs
jbe
gs
push
mov
mov
mov
arpl
push
dec
mov
jecxz
adc
stos
jmp
inc
outsl
shl
mov
xlat
push
xchg
sbb
ret
scas
das
inc
lret
pop
or
dec
std
in
xchg
stc
mov
cs
test
jl
addr16
xchg
dec
andl
mov
pop
sbb
fidivs
push
and
ljmp
xlat
push
test
push
mov
xchg
mov
arpl
in
ljmp
and
test
jmp
lcall
xorl
or
cwtl
pop
cmp
push
call
sbb
mov
sbb
sub
pop
adc
inc
inc
inc
lods
loop
loopne
rcrl
mov
test
and
pop
ficoml
andl
mov
push
inc
jle
lock
aas
mov
sub
ljmp
and
lret
pop
jne
fs
sub
cmpb
jmp
rcl
stc
mov
insl
mov
push
adc
and
ffreep
xchg
cli
xchg
sub
icebp
dec
test
xlat
out
cmpsb
scas
jl
stos
stc
mov
addr16
or
mov
cmp
adc
cmc
adc
lock
xlat
test
or
push
sbb
pop
cwtl
push
mov
scas
subb
mov
mov
out
jmp
xor
jne
gs
adc
jb
jecxz
testl
push
jp
bound
xor
loope
test
shl
mov
mov
cmpsl
fidivl
imul
push
and
movsb
sbb
bnd
xchg
movsb
and
aam
test
out
std
or
loop
xlat
repz
je
dec
dec
setnp
pushf
inc
out
outsl
ret
sbb
out
leave
lahf
shll
push
mov
xchg
imul
push
xor
cld
mov
movsb
inc
inc
in
in
fsin
arpl
sbb
adc
fcmovbe
add
das
xchg
mov
lcall
xchg
daa
add
sbb
pop
sub
add
aas
sbb
sahf
dec
outsl
loopne
jbe
inc
xchg
inc
ljmp
loopne
mov
jae
jns
mov
mov
dec
imul
in
mov
pushf
push
adc
imul
test
movsl
xchg
pop
int3
jno
sbb
jb
in
inc
cmp
out
and
lods
pop
outsb
xchg
mov
push
xchg
arpl
sbb
mov
testl
lods
popf
add
add
retw
sarb
sarb
movsl
sbbb
sub
inc
xor
pop
mov
arpl
bound
test
lret
repz
or
out
jnp
nop
and
ret
filds
leave
mov
test
mov
xchg
pop
pusha
jne
fldl
imul
inc
mov
or
xchg
sbb
pop
add
mov
xchg
or
mulb
jl,pn
mov
out
das
jnp
loope
cmp
ss
cmp
popf
cmp
lea
mov
push
out
adc
jo
push
fs
or
push
clc
lds
lock
shll
xchg
xor
in
cltd
jmp
adc
mov
jb
cs
sti
pusha
xchg
test
dec
jl
je
mov
scas
jp
ja
mov
test
mov
imul
dec
shll
push
sbb
push
jne
and
out
icebp
jbe
mov
out
jle
jecxz
sub
inc
dec
jo
xchg
js
push
cltd
adc
cwtl
mov
dec
mov
roll
jl
cmp
out
addr16
or
out
push
aam
sub
jns
cltd
std
rclb
lods
dec
sahf
hlt
scas
mov
jae
sbb
aas
test
aad
in
push
test
push
lcall
mov
inc
lret
ss
mov
or
hlt
sbb
and
aam
ror
push
xchg
inc
pop
stos
pop
jecxz
jno
or
push
and
xor
outsb
sub
daa
in
cmp
and
pop
xchg
nop
lret
jg
or
and
xor
fsub
jmp
mov
stos
and
push
xchg
shl
js,pt
dec
lods
loopne
fbld
fimull
pop
mov
or
rol
push
cmp
bnd
jle
pop
in
mov
sub
fs
pop
and
jl
mov
add
adc
repz
mov
pop
iret
add
outsl
mov
lea
mov
mov
mov
xchg
mov
dec
mov
mov
stos
das
adcl
vpaddd
ja
xor
repnz
bound
add
fsubp
mov
dec
and
mov
push
pop
jmp
ljmp
pop
mov
andl
add
lcall
daa
xor
adc
xor
insl
mov
pop
test
mov
and
mov
fnstcw
shll
popf
mov
and
imul
shlb
sub
subl
push
in
stc
movb
loop
cltd
dec
mov
scas
pop
daa
jb
or
add
dec
stc
jl
and
inc
or
pop
jmp
xchg
fwait
outsl
cmpl
mov
push
leave
cwtl
push
nop
clc
sbb
test
jmp
cmp
jle
das
inc
sbb
fsubs
xchg
adc
xor
mov
dec
cmp
cwtl
mov
push
sbb
xor
lock
jne
ret
ficoms
jmp
cmp
mov
inc
fsubs
shlb
hlt
leave
mov
aad
jp
xor
pusha
jae
stos
pop
loope
aaa
fdivs
testb
popa
jne
mov
movsb
jecxz
inc
shl
adc
mov
mov
mov
loop
mov
or
sbb
fwait
inc
enter
rcll
fldl
bound
push
push
xchg
ret
sahf
mov
mov
sub
lahf
fstl
outsb
sbb
adc
sbb
push
cmpl
mov
pop
fistps
mov
mov
daa
push
mov
mov
mov
out
fs
push
or
xchg
push
push
or
add
push
test
lahf
mov
dec
pop
hlt
aad
aaa
adcb
inc
nop
xchg
dec
or
sbb
gs
xchg
mov
repnz
test
sub
mov
insl
mov
pushf
arpl
test
fisubrl
es
popf
xchg
in
outsb
sarl
andl
nop
pop
movsbl
pop
mov
and
pop
insl
insl
subl
xchg
or
pop
xrelease
or
ja
sbbl
xor
push
fists
jmp
adc
movsb
lods
add
test
sub
mov
sbb
xchg
xor
movsb
xchg
inc
inc
aaa
push
inc
push
mov
test
or
pop
lret
cmp
or
rclb
push
mov
add
fcmovbe
jae
fcompl
aaa
sbb
jae
int
enter
inc
mov
cmp
iret
nop
sub
bound
aam
or
xor
mov
aaa
and
mov
cmp
add
lds
bound
imul
aad
pop
push
xor
loop
rclb
rcrl
lods
add
or
js
mov
testl
es
stc
pop
aad
or
ret
cmp
js
scas
lret
jne
cmp
sub
adc
cmp
movsb
in
jmp
sbb
or
jno
pushf
and
cli
adc
cmc
ja
sti
ret
mov
pusha
inc
jo
xor
inc
mov
jbe
les
mov
push
fdivs
iret
mov
sbb
les
jns
xor
cld
add
mov
xchg
stc
push
xor
aaa
sbb
mov
int3
push
sbbl
inc
or
xchg
outsl
js
out
addr16
lahf
add
mov
jae
imul
bt
pop
ss
sbb
movzwl
int3
leave
xlat
gs
jae
jge
and
imulb
outsb
leave
push
add
out
mov
inc
out
cmc
imul
cmp
xchg
fcmovu
fscale
push
jl
or
pop
or
jns
aad
dec
sub
and
or
in
mov
and
std
aad
push
pop
sub
pop
push
or
adc
mov
and
cmp
mov
pop
std
mov
cmp
cs
add
cmp
andb
shrl
sub
pop
pop
jo
pop
cmpb
sub
adcl
mov
cld
xchg
push
inc
testb
xchg
cmp
dec
inc
rolb
loopne
mov
sub
lahf
jmp
xchg
or
cld
loop
add
das
xchg
lods
xchg
aaa
loopne
dec
pop
cmpsl
inc
vpbroadcastb
cwtl
arpl
ja
push
mov
push
adc
pop
sbb
in
mov
or
mov
fwait
and
sub
outsb
out
push
xchg
mov
lret
pop
mov
push
repz
int
push
xchg
mov
pop
lds
es
aaa
add
sub
mov
sarb
insb
mov
mov
xor
jno
cltd
and
cs
lret
subb
push
dec
mov
lds
fidivs
ficompl
push
scas
and
jbe
mov
push
push
mov
xchg
lds
mov
shll
dec
mov
outsl
stos
inc
int
push
adc
adc
sub
lret
rclb
pusha
aam
pop
daa
ret
data16
sub
test
jb
movd
mov
icebp
popa
icebp
adc
fisubl
loopne
or
mov
in
push
mov
add
pop
pushf
and
dec
adc
insl
adc
mov
cmp
push
lock
inc
push
aaa
xor
in
lea
push
es
and
and
lahf
xchg
sub
scas
inc
or
mov
jns
out
fwait
mov
pop
pop
insb
in
test
xchg
fildll
cmp
leave
or
mov
mov
out
notb
pop
fcoml
inc
ss
push
lods
lods
xor
mov
adc
jecxz
and
int
lods
fwait
sbb
ss
sub
inc
sbb
loope
push
pop
xor
scas
adc
and
cmp
shrb
push
cmc
and
shll
icebp
mov
imul
cmp
decb
mov
aad
pop
jo
jmp
xchg
jno
loope
inc
je
or
imulb
loope
iret
mov
ljmp
pop
ret
mov
or
xor
in
mov
pop
sub
pop
jno
into
dec
jnp
push
lahf
out
inc
and
inc
movsb
inc
cmpsb
adc
movsb
stos
pop
push
cli
insl
xchg
test
aaa
cmpsl
cmpsb
fidivl
fldl
ret
ss
mov
fwait
sub
test
das
xor
pop
push
push
lret
addr16
cmp
dec
sarl
add
dec
cs
in
dec
jle
push
sbb
inc
stos
addb
jbe
loopne
lods
mov
ret
push
jmp
daa
adc
jmp
push
mov
jg
aam
dec
in
call
push
jnp
jae
nop
into
sbb
or
pop
sub
mov
sti
lock
fistpl
push
lret
mov
mov
stos
mov
int
dec
ds
xchg
jecxz
rcr
outsb
mov
arpl
jnp
add
sbbl
arpl
loopne
cmp
push
out
xchg
ficompl
jnp
loopne
xor
mov
daa
int3
adc
shll
and
push
pop
andb
and
cmp
into
inc
aad
mov
pop
out
div
call
fistpl
sbb
and
xor
dec
pop
out
sbb
lea
sbb
aam
enter
insb
mov
hlt
repz
cmp
push
xor
repnz
lcall
pop
movsl
cli
xor
or
bound
fnstcw
push
xor
xor
outsb
mov
mov
add
adc
int3
int3
inc
mov
fnstsw
nop
sub
xchg
and
xor
aaa
mov
call
add
sbb
and
pushf
into
stc
popa
cmp
or
imul
jo
pop
jp
xchg
add
mov
push
iret
and
cld
fnstenv
test
xor
out
lret
scas
or
xorl
and
cmp
xchg
mov
test
dec
ror
outsl
ljmp
sbb
loop
icebp
ret
stos
into
mov
push
faddl
mov
dec
clc
cwtl
dec
pusha
in
int
in
mov
fdivrl
dec
pop
outsl
rcll
outsl
imul
mov
bound
movsb
xor
fdivr
shll
in
jnp
sub
shlb
mov
jno
or
dec
int3
aaa
int3
repnz
push
iret
popa
mov
aam
xchg
xor
inc
xor
sub
lods
dec
gs
mov
fdivrl
mov
repz
mov
dec
push
hlt
sbb
pusha
fbstp
cmc
jecxz
shl
lods
cmp
add
or
aad
mov
popf
push
and
cmp
repnz
sub
stos
aam
gs
in
lret
test
or
out
out
icebp
xchg
aas
cmp
aaa
stc
xor
xchg
shll
movsb
ss
pop
notl
jb
out
sbb
lcall
mov
mov
jp
mov
cwtl
loope
rclb
ds
sub
cmp
stos
cmp
cs
mov
sbb
push
mov
xchg
pop
mov
loopne
enter
mov
lods
sar
outsl
and
adc
dec
bound
mov
sbb
adc
or
xchg
imul
jp
jle
fucomp
cmp
pop
in
jl
insl
ss
inc
out
cmp
adc
addl
pop
cld
dec
dec
adc
mov
fwait
xchg
pop
std
out
mov
sub
fwait
test
stos
push
popf
lret
xlat
inc
cmc
push
pop
pop
sub
pop
jb
dec
test
mov
mov
pop
rolb
inc
mov
enter
icebp
lds
ss
ret
inc
fsubp
pop
pop
dec
dec
push
out
dec
sbb
lock
int3
dec
sub
jno
cli
sub
in
push
mov
inc
decb
ss
jne
mov
hlt
das
sti
mov
addr16
push
pop
in
xchg
dec
fs
xchg
jecxz
pushf
sbb
fsubs
sub
jo
pop
xchg
out
std
rcrl
jmp
stos
jno
insb
xchg
pop
iret
js
mov
dec
inc
lock
rol
int3
cmpl
lods
pop
mov
or
stos
notl
neg
lret
addr16
jns
pop
push
loop
xchg
mov
mov
push
lods
adc
inc
rcrb
rcrb
xor
add
sub
fldl
stos
out
fsubs
mov
sbb
mov
into
mov
jmp
xchg
insb
mov
fwait
xchg
insb
or
fnstcw
mov
push
mov
clc
adc
testl
pop
fstps
stos
pop
imul
rorl
xchg
cmp
lods
jge
sub
lods
push
je
lock
test
push
mov
pop
adc
loopne
inc
leave
lea
fisttps
movsb
push
or
xor
mov
push
aas
in
rorl
jno
mov
rorl
dec
and
fdivrl
xchg
xor
jmp
lea
push
sahf
push
xor
and
inc
add
sub
sbb
cmp
jne
jp
push
jmp
lret
add
pop
add
and
sbbl
in
add
test
xor
pusha
bound
pop
sbb
sar
xchg
or
sbb
imul
inc
push
and
roll
jns
jae
pushl
lods
iret
and
fistpll
aaa
addb
fnsave
test
lahf
inc
mov
cmp
cmc
test
mov
bound
rorb
sub
lods
mov
adc
popa
orb
daa
out
pop
cld
call
lret
sub
mov
adc
in
sbb
xor
lret
in
shll
jne
jecxz
xor
xchg
std
in
mov
xlat
cltd
leave
xchg
pushf
loope
push
cmp
cs
out
xor
les
negb
sarl
mov
xchg
inc
dec
pop
jle
leave
lods
mov
push
mov
mov
pushf
mov
int3
jge
mov
data16
xchg
mov
sub
shrl
lcall
ss
mov
or
aad
pop
inc
loop
incb
sbb
pop
inc
fwait
scas
inc
and
jbe
dec
dec
insl
iret
lret
push
mov
repnz
mov
and
mov
iret
popl
mov
sub
jecxz
mov
stos
loop
cvtps2pi
mov
jmp
sahf
or
adc
sbb
inc
fwait
xchg
fidivrl
sub
pop
xor
mov
iret
pop
add
sahf
sahf
xor
pop
xchg
jecxz
add
xchg
shlb
test
lret
jl
fs
call
push
inc
pop
int3
sbb
testb
aas
lock
jmp
loope
pusha
pop
out
clc
sti
cmc
aaa
or
leave
out
cmp
shrb
jno
sbb
mov
pop
scas
xchg
mov
shll
xor
mov
lds
pop
ds
dec
xchg
clc
in
loope
sub
orb
nop
add
push
xchg
in
jno
jmp
sbb
add
incl
mov
xchg
dec
aam
jmp
cmp
lods
add
xchg
cmp
and
xchg
adcl
or
add
negb
cmp
aad
fs
fs
out
into
inc
mov
es
and
xchg
push
dec
lock
sti
int
out
inc
sarl
jbe
mov
jnp
jnp
rcll
out
dec
in
mov
xor
sbb
or
lods
xor
mov
aaa
push
adc
mov
insb
je
adc
pop
insl
mov
nop
xor
or
sub
and
mov
lock
adc
cld
jne
mov
sub
xor
pushf
add
mul
dec
mov
pop
cld
and
imul
out
dec
xchg
addb
and
not
insl
jnp
test
pop
rcl
sbb
inc
mov
cmp
adc
mov
aaa
fsubrs
xor
ret
call
mov
in
in
in
cmc
push
test
jae
jecxz
dec
jge
imul
insb
mov
imul
test
push
arpl
xchg
pop
fstpl
add
push
or
pop
pushf
pop
and
fcmovnb
inc
insl
pop
ljmp
push
insl
xchg
aas
mov
pop
xchg
rorl
cltd
mov
addr16
leave
dec
pop
cmpsl
pop
and
push
add
nop
push
lret
mov
mov
test
nop
outsb
imul
mov
fnstsw
mov
icebp
or
sbb
movsl
sub
mov
icebp
pop
jmp
pusha
sbb
inc
test
mov
fisttpll
mov
aas
lds
std
imul
or
test
lods
leave
repz
lock
loop
es
fstp
out
sub
lods
inc
sub
and
in
adc
ja
cld
orl
test
imul
push
dec
rolb
inc
jnp
sub
loopne
data16
jnp
outsb
out
adc
sbb
imul
push
dec
pop
div
test
xchg
pinsrw
inc
insl
cmp
cs
ja
arpl
add
lds
inc
in
popf
jecxz
adc
sub
insb
or
aas
push
movsl
mov
shll
in
cli
lods
or
es
pop
mov
in
and
out
lret
arpl
dec
mov
ret
adc
call
sub
jns
in
inc
lds
pop
jae
push
test
pushf
neg
cmc
xor
mov
ret
jl
negl
adc
xbegin
xor
mov
xor
imull
cmp
in
mov
and
xchg
lods
lret
cld
push
lret
mov
stos
jmp
mov
js
ljmp
inc
dec
fistl
and
sahf
cmpsb
mov
sub
jnp
jae,pn
or
add
cmpsb
sar
mov
mov
push
xchg
ss
xor
jmp
dec
push
pop
lds
sub
jle
jae
aas
adc
shlb
mov
pop
loop
out
arpl
mov
lds
outsl
add
jp
pop
int3
movsb
mov
mov
xor
enter
int
adc
mov
cmp
mov
dec
pop
incb
dec
in
mov
lock
xchg
cmp
mov
scas
jae
push
sub
push
push
movsb
sbb
sbb
stos
sar
xchg
mov
xchg
sbbl
and
insb
je
fmul
clc
fwait
shll
mov
pop
mov
stos
cmpsb
jl
push
cwtl
jns
stos
adcb
or
cmp
sbb
scas
mov
add
movsb
add
and
mov
or
add
fidivl
insb
pop
data16
pop
mov
jg
xlat
int3
test
mov
push
mov
cwtl
enter
jbe
das
mov
pop
dec
jno
data16
jne
xchg
jno
push
jae
shrb
push
inc
mov
pop
jge
xor
ljmp
add
xchg
shrl
lret
ss
pop
xor
iret
in
push
aas
add
mov
mov
arpl
adc
xchg
sbb
inc
inc
arpl
les
xchg
fdivr
fimuls
hlt
loop
dec
aaa
cwtl
jb
clc
jle
loop
aaa
or
clc
nop
add
lock
push
pop
lock
fwait
or
inc
sub
dec
test
loopne
adc
fisubrs
inc
js
adc
fidivrl
xor
push
mov
shr
aas
movsb
sub
fs
cmpsl
les
or
jb
push
lea
cli
imul
jp
lock
jl
mull
sub
mov
pop
fidivrl
test
xor
and
in
mov
pusha
and
jae
mov
and
test
in
int3
mov
or
dec
das
aad
cmpsb
cmp
scas
pop
loop
or
daa
pop
mov
hlt
fdivrl
js
push
sbb
add
mov
sbb
xor
add
fnstsw
lods
or
movsl
pop
lods
or
pop
fsubs
in
js
clc
inc
sbb
mov
mov
fwait
mov
lret
mov
aam
xchg
fnstenv
sahf
dec
out
sahf
inc
scas
lock
aam
ret
sbb
push
xchg
jp
cmpb
jp
xchg
push
inc
mov
scas
in
mov
pop
adc
pop
ljmp
sub
inc
push
and
cmp
dec
jge
dec
mov
add
or
jmp
mov
orb
pop
lret
popa
je
jo
add
and
adc
mov
test
adc
aas
lret
icebp
mov
shrl
pop
test
aad
cmpsb
jle
out
cltd
movsb
shll
movsb
lods
data16
jecxz
push
adc
adc
lcall
out
divl
mov
int
push
xor
fsts
sbb
bound
in
adc
repz
lcall
cmp
push
xchg
mov
clc
pusha
stos
cmc
jns
out
xchg
insl
test
add
movl
push
ret
inc
inc
sbb
jo
jg
cmp
or
xchg
daa
dec
roll
test
stc
sbb
out
push
pop
decb
and
sbb
xor
hlt
mov
addr16
sbb
int
jp
and
push
mov
push
and
in
sub
xchg
repz
outsb
add
clc
jg
ljmp
dec
cmpsl
dec
mov
lahf
mov
loopne
jnp
jns
jae
outsl
or
jecxz
pop
jnp
cltd
loop
lock
cmc
mov
fisttps
cmpl
jb
sub
insl
in
jmp
xchg
mov
repnz
jmp
push
adc
mov
inc
or
xchg
or
fstpt
pop
adc
push
cmp
es
int3
into
mov
dec
push
adc
xchg
push
push
sub
mov
cmp
dec
push
push
jg
arpl
mov
pop
aaa
icebp
mov
jns
mov
aam
or
out
test
push
int3
dec
popf
loopne
lods
repnz
cmp
js
test
and
dec
lret
push
mov
mov
in
jno
nop
jno
inc
mov
pushf
pop
mov
out
add
push
ret
pop
lret
xor
inc
out
push
clc
repnz
push
mov
jecxz
sbb
xor
pop
mov
out
mov
inc
push
les
sahf
popa
lods
in
jae
adc
repnz
mov
xor
adc
out
fsubl
push
push
pop
sbb
dec
mov
js
jl
inc
enter
cmp
pop
sti
add
lock
loope
mov
mov
jne
subb
out
mov
mov
setno
prefetcht2
and
lods
lods
sub
fdivs
mov
fidivl
ficoms
and
movsb
push
jp
ficoml
jae
cmpsb
mov
push
jge
or
sbb
pop
arpl
lock
inc
gs
mov
loopne
adc
es
mov
inc
int3
sub
clc
pop
push
in
dec
std
cmp
pop
dec
les
outsb
inc
mov
jno
movsl
sub
test
adcb
xchg
dec
std
repz
fdiv
sub
add
push
sub
inc
out
or
adc
movd
and
push
mov
clc
fdivs
mov
out
sbb
xchg
jns
fwait
out
cmp
inc
mov
xchg
xor
daa
clc
cmc
inc
sub
ds
inc
push
add
pushf
idivl
lahf
cli
lds
pop
out
mov
or
push
push
sbb
lods
jle
inc
out
cmpsb
or
ret
jge
adc
xchg
sahf
jae
rcr
cs
adc
jae
in
inc
into
stos
adc
insb
mov
mov
mov
lods
mov
jne
xchg
jmp
rol
mov
or
aaa
adc
xchg
xchg
mov
push
xor
lret
jecxz
sbb
nop
dec
jge
int
out
pop
mov
movsb
lock
sti
lret
sbb
push
subb
jge
cmp
xchg
loopne
lds
mov
stos
cmp
sub
scas
sbb
ss
loopne
call
js
sbb
fbld
leave
ror
mov
subb
or
sub
idivl
xchg
dec
movlps
and
xchg
rolb
into
push
clc
push
dec
data16
movsl
jmp
cmp
jg
ret
ffree
loop
cmp
xchg
and
imul
mov
or
xor
int
cmp
or
outsl
adc
pushf
cmp
xor
add
push
jl
fidivs
sub
mov
mov
lods
push
mov
mov
or
out
in
jnp
cmc
nop
jmp
or
std
roll
cmpb
add
jnp
mov
bound
xchg
xor
lds
xor
jnp
sub
xrelease
mov
loopne
mov
out
or
push
es
adc
add
xchg
fstpl
sbb
adc
dec
out
push
jo
cmp
adc
jle
sbb
fdivrl
adc
das
je
lock
sbbw
mov
mov
sub
repnz
add
aad
pop
imul
inc
ret
lods
ja
mov
and
std
jmp
cwtl
out
sbb
mov
push
mov
adc
xchg
add
and
jbe
mov
imul
ficoml
ljmp
add
cmpsb
fmull
aad
adc
adc
pop
lds
orb
xchg
jmp
negl
bound
int
add
rcr
push
scas
hlt
pop
push
je
test
cs
add
subl
out
aaa
adc
lret
jne
cmpsl
iret
lods
ss
jge
std
mov
sysexit
push
int3
icebp
add
shrl
lods
add
fsubs
mov
inc
outsl
insl
dec
sbb
in
push
cmp
jb
in
sub
cwtl
imul
out
xor
mov
mov
jg
fsubrl
in
in
and
mov
jo
inc
dec
leave
xchg
pushf
lds
pop
sub
inc
dec
pop
mov
sub
std
mov
sahf
inc
xchg
push
mov
mov
dec
iret
in
push
testl
mov
loopne
dec
cmc
jmp
cmp
sbb
inc
pop
inc
fldl
iret
out
and
and
test
mov
and
ljmp
cld
lods
movsb
mov
jg
rcll
lods
call
fs
pop
fidivl
sub
icebp
jnp
xchg
int
xchg
inc
test
std
dec
orb
clc
push
psubsb
test
lock
mov
cltd
jg
push
mov
jb
rorl
fucomp
sub
mov
sti
data16
fs
loopne
out
mov
insl
jne
lcall
dec
or
aas
jbe
jno
adc
cmp
data16
lahf
scas
xchg
lret
inc
sbb
lret
addr16
aas
imul
imul
ja
inc
fcmovbe
popf
mov
dec
imul
or
test
xchg
pop
cmpsl
xchg
mov
mov
sbbl
cmc
scas
sub
sub
mov
outsl
lahf
test
cltd
incb
adc
xchg
push
sbb
mov
clc
adc
testl
nop
sub
inc
mov
or
sub
jmp
out
pop
pop
fwait
lods
mov
or
add
push
cmp
xchg
dec
push
push
dec
dec
push
jg
andl
adcb
mov
addr16
sbb
mov
lcall
mov
sub
adc
bound
push
sbb
jne
push
or
rcrl
sbb
fisttpll
fwait
imul
cmpsl
je
mov
lcall
out
mov
pop
adc
cmp
cltd
jge
xorl
adc
test
push
dec
js
jecxz
mov
mov
pop
mov
inc
push
jb
xchg
cwtl
in
orb
gs
push
and
and
incb
es
sbb
popa
adc
addr16
inc
xchg
nop
subb
push
or
sahf
cs
out
pop
je
jne
iret
mov
mov
xor
add
outsl
cwtl
lcall
outsl
aad
jmp
cmp
xchg
sbb
in
pushf
repnz
into
jg
ljmp
xchg
fimuls
lods
push
mov
and
mov
in
pop
dec
lahf
roll
fildl
aam
push
adc
into
popf
push
les
gs
dec
movsb
mov
mov
xchg
pop
lret
dec
pop
test
inc
lret
mov
sti
or
les
push
cmp
push
jl
mov
test
sub
jmp
mov
ja
adc
movsl
adc
arpl
lahf
in
mov
pop
push
pop
and
sbb
jbe
mov
mov
mov
mov
add
popf
aaa
lcall
cmp
inc
nop
ret
int3
sub
mov
add
out
mov
xchg
fincstp
int
adc
dec
add
mov
cmp
mov
jnp
add
fisttpl
or
cs
mov
mov
gs
mov
mov
test
mov
add
mov
inc
sbb
fs
fnstenv
fisttpll
and
adc
jne
fldenv
pop
xor
js
sti
dec
in
adc
insb
scas
test
or
int3
dec
jge
fsubl
xor
into
rolb
out
jne
std
jmp
stos
std
cmp
xor
or
adc
aas
loop
sub
push
hlt
sbb
mov
loopne
imul
ficomps
cmp
les
cmp
xchg
mov
and
hlt
imul
xchg
jne
dec
sahf
lock
out
movsb
add
rcll
xchg
jb
int
sub
jns
cmp
dec
fisttps
sbb
out
mov
xchg
push
dec
sahf
mov
add
mov
jle
in
and
xchg
fcoms
push
push
fdivrs
cmpsb
outsl
sarb
pop
and
jge
mov
dec
sub
push
inc
or
gs
scas
lods
in
in
pop
dec
jae
es
in
outsl
popa
xchg
loope
ret
cmp
mov
cmp
repnz
mov
loope
mov
jns
xchg
jg
add
mov
push
pushf
out
fldcw
pushf
or
movsl
add
bound
push
in
mov
adcb
jl,pn
mov
inc
mov
loopne
sbb
in
nop
push
sub
jbe
inc
sbb
mov
and
push
jg
mov
movsb
adc
add
adc
inc
mov
cmp
pop
mov
xchg
je
xor
pop
fldenv
repnz
inc
fcomp
into
shlb
lahf
aaa
jmp
andb
mov
push
push
inc
fldl
xor
mov
outsl
daa
fstpt
aam
mov
rep
jb
mov
lock
or
mov
mov
outsb
scas
aad
push
outsl
int3
shr
lret
jns
in
loop
push
fcmovnu
aam
nop
or
jns
fstpl
lcall
aam
xchg
stc
pop
sti
jnp
pop
popf
ffree
and
cwtl
mov
lods
dec
and
sti
jb
jp
loope
dec
lret
cmp
push
and
mov
lock
daa
ja
repnz
jle
arpl
push
test
xor
repz
popf
rcrl
dec
xchg
xchg
mov
inc
xchg
xor
aaa
mov
dec
pop
std
outsb
addb
xor
mov
xchg
cmpsl
sub
xor
fcompl
je
movsl
ret
in
pop
movsb
gs
shr
iret
adc
sbb
in
push
pop
mov
rcrl
loope
aam
imul
imul
popf
aas
out
jne
push
es
jne
sbb
xchg
ljmp
rorl
mov
je
fsubl
fdiv
cltd
pop
xchg
nop
push
dec
adc
or
ss
stos
dec
sub
lock
add
mov
jno
xchg
adc
pop
xchg
out
mov
ffreep
notb
add
imulb
outsl
mov
xor
dec
sbb
jg
pop
sub
dec
outsl
std
sbb
sete
rcrb
dec
or
vcvttsd2si
scas
mov
xchg
arpl
push
pushf
daa
sbb
or
subl
cwtl
push
imul
aam
pop
imul
addb
add
and
mov
push
adc
jp
mov
inc
ss
xor
adc
and
ffreep
adc
in
aas
leave
test
ljmp
add
and
aas
stos
xchg
loopne
cmp
pushf
shrl
jle
fdivl
sbb
es
add
test
xor
inc
int3
dec
dec
scas
std
and
push
mov
arpl
ljmp
mov
fbstp
js
inc
lret
ret
xlat
inc
or
adc
push
inc
inc
push
sub
jmp
dec
jg
xchg
xchg
mov
in
dec
xchg
scas
outsb
push
fdivp
dec
fiaddl
jecxz
jmp
jnp
cmp
xor
aaa
iret
cli
pop
out
ja
pushl
subl
adc
adc
push
orl
ja
stc
je
cmp
add
cli
mov
xor
ja
mov
dec
mov
out
inc
xorb
ficoms
cmpsb
popf
outsl
sub
xor
imul
flds
sub
lcall
dec
repnz
movsb
fmull
out
lcall
int
fcomp
lret
adc
dec
push
push
mov
push
shl
aaa
gs
dec
or
sbb
jecxz
sbb
mov
mov
hlt
int3
or
sbb
xchg
push
pop
jp
inc
nop
das
mov
popf
loopne
sti
jmp
mov
cmp
orl
sbb
pop
pop
push
cld
cmpsb
xlat
movsl
pop
or
lock
out
push
or
pop
xor
nop
aaa
add
lret
add
or
sub
cwtl
cs
inc
cmp
fstpl
sub
popf
shlb
divl
lods
lods
adc
sub
call
sub
loop
xor
ss
repz
icebp
call
adc
cmpsb
push
or
adc
pusha
pushf
adc
xor
sbb
sub
in
jb
mov
pop
ffreep
adc
outsl
mov
mov
push
xchg
push
xchg
cmp
call
jmp
enter
in
adc
inc
dec
xor
mov
aad
outsb
sbb
lahf
xor
inc
sbb
mov
adc
inc
inc
or
cmp
mov
loop
andl
fnstenv
sbb
xor
pop
testb
test
scas
in
cmc
or
lods
lret
aas
add
inc
cmp
jge
fcmovnb
inc
lret
push
mov
jecxz
nop
mov
lret
out
cmc
in
pop
std
out
int
movsb
pusha
xchg
mov
icebp
subb
out
repnz
lcall
sbb
jecxz
outsb
cmp
or
rorb
xor
mov
test
sub
xlat
imul
mov
push
pop
pop
cwtl
mov
bound
mov
call
in
ss
sub
mov
add
aam
daa
xchg
out
jg
lret
fwait
jmp
xchg
xor
dec
dec
popa
outsb
xchg
xor
pop
shlb
pop
inc
mov
mov
bound
inc
int3
lods
sbb
add
inc
xor
pop
repnz
cwtl
rcrb
insl
int3
cmpb
cmp
out
mov
sub
rcll
enter
in
add
inc
in
add
lods
xor
ret
push
imul
push
sub
repnz
movsl
xor
sbb
mov
cmc
pop
fwait
mov
push
test
jmp
les
xor
or
mul
hlt
mov
mov
repz
mov
mov
cmpl
stos
mov
ret
xor
pop
or
or
ja
fisttpll
pop
mov
mov
push
movsb
repnz
ret
and
push
mov
add
add
inc
rcr
sbb
fldz
hlt
mov
decb
mov
or
addr16
lea
cwtl
jae
sub
cld
xor
push
mov
mov
xchg
mov
je
stos
ljmp
inc
sbb
adc
pop
jbe
cmc
push
mov
popf
mov
pop
repnz
xor
loop
and
lahf
dec
movsb
push
dec
dec
repz
dec
pop
out
sahf
xchg
pop
mov
cmp
cmpsl
loopne
sbb
mov
push
mov
push
pop
fmuls
adc
sti
add
cmp
lahf
mov
xlat
cmp
push
mov
popf
ret
and
cmp
ds
loope
xchg
loope
inc
or
adc
cwtl
scas
mov
cltd
das
enter
mov
fsubr
cmpsb
jmp
push
cmc
inc
scas
pop
xor
ret
sbb
sbb
xor
int
inc
enter
scas
in
cmp
popf
mov
sahf
xlat
pop
adc
dec
sbb
pop
xchg
adc
xchg
pop
add
mov
icebp
cmpsl
mov
jg
or
pop
loopne
dec
adc
out
sub
sub
sub
lret
cmpsl
push
rcrb
mov
test
mov
adc
and
inc
outsl
mov
jns
fisttpl
les
xor
pop
push
or
add
testb
fs
or
push
cmpsb
pushf
mov
leave
push
pop
fidivl
sub
popf
xor
pop
inc
jo
push
and
aad
outsl
pop
inc
div
in
adc
out
xor
inc
dec
pop
dec
jmp
test
fs
aas
jns
jmp
mov
loopne
mull
sahf
inc
sbb
sbb
xchg
mov
loopne
inc
dec
aam
mov
jno
pop
rcll
push
scas
dec
pop
jle
push
hlt
xchg
adc
lret
adc
rcll
mov
add
push
lahf
lcall
leave
jl
fldcw
mov
xor
sub
nop
inc
roll
xchg
das
into
div
mov
mov
fwait
lock
dec
add
mov
lock
popa
or
push
in
push
cmp
adc
sbb
popf
adc
inc
repz
shr
lock
dec
mov
jne
popa
decl
or
fisubrl
sub
in
std
and
pushf
lahf
stos
mov
pinsrw
sub
sbb
shl
enter
lahf
pop
push
outsb
mov
dec
movsb
outsl
push
mov
loop
jmp
scas
push
mov
inc
mov
lcall
outsb
dec
mov
popa
out
lret
xchg
jo
lret
out
stos
mov
sbb
and
sbb
dec
inc
sub
cmp
test
stos
push
pushf
fmull
insl
add
in
adcb
push
xchg
sbb
int
idivb
mov
ret
cltd
inc
nop
sbb
adc
sbb
in
and
xlat
movsb
loope
fs
mov
and
ja
sbb
aas
fmul
and
add
dec
sbb
ror
and
pop
xchg
out
enter
jle
or
in
inc
or
dec
cs
sbb
pop
xchg
lods
sub
cmpsl
xchg
mov
test
fiadds
xor
and
outsl
leave
divb
cs
mov
jno
aad
roll
test
adc
or
pusha
mov
add
imul
xor
aam
mov
cmpl
int3
pop
inc
out
mov
inc
clc
mov
aam
add
dec
out
imul
sub
popa
xlat
mov
leave
je
xchg
jp
mov
int3
jge
sub
test
je
sbb
pop
cmc
mov
insl
jno
pop
imul
dec
pop
fadds
jl
jmp
pop
jle
mov
or
cmp
add
aaa
cmc
rcll
add
pop
push
mov
inc
aas
xor
mov
daa
int
inc
sub
fidivl
sbb
sahf
call
rcrl
xchg
xor
jmp
dec
int
xchg
mov
std
sbb
stos
and
in
mov
stos
int3
lea
jae
in
ja
sbb
push
cmpsb
ficomps
sub
in
sbb
pop
jo
ja
xchg
outsb
dec
mov
mov
xlat
sub
xor
testl
aam
sub
scas
scas
adc
cmpb
aad
push
test
inc
sbb
dec
pusha
cmpsb
test
lods
inc
push
ret
push
leave
dec
dec
pusha
xchg
mov
and
mov
clc
rorl
sbb
fst
mov
bound
jmp
sti
pop
sbb
loope
adc
xor
lods
mov
pop
loopne
outsl
loopne
mov
daa
in
sbb
aas
mov
movsb
jle
int3
dec
imul
fstl
jbe
inc
decl
testl
ficoms
mov
xchg
clc
push
xor
loop
and
das
aam
mov
int
insb
scas
mov
aam
dec
jp
dec
das
adc
inc
out
pushf
or
testb
sbb
xchg
lods
add
jp
cs
loop
xchg
jnp
adcl
cmp
std
and
add
mov
xchg
iret
out
mov
mov
or
dec
pop
ja
add
xor
xchg
dec
fptan
aas
xchg
cmp
jns
dec
mov
in
jo
testb
addr16
dec
in
and
jmp
mov
fs
cmpsl
dec
divl
in
pop
sbb
in
jge
lock
inc
shr
xchg
and
adc
jmp
in
mov
jns
xchg
xor
jge
push
jns
stos
addr16
sbb
and
ja
insl
cmpl
jl
pop
sub
data16
ret
mov
cmp
mov
jl
pusha
test
adc
push
iret
cli
in
xchg
and
adc
or
clc
xor
xchg
mov
mov
sub
and
push
cmp
inc
ret
mov
or
dec
ljmp
jo
into
lods
ret
mov
insl
xchg
adc
or
fcmovb
movsb
sbb
xchg
mov
xchg
adc
xor
sub
loopne
jge
mov
mov
xchg
aam
cmp
push
adc
push
insb
mov
out
rcl
jl
repnz
stc
mov
jb
and
mov
ljmp
cmpsl
outsl
mov
inc
pop
lods
cld
icebp
loope
in
push
pushf
push
cmpsb
rorb
push
dec
push
aaa
pop
fisubs
cmc
pop
adc
dec
sbb
lret
int3
jmp
mov
dec
fiaddl
mov
ds
sub
aad
mov
xor
in
aaa
sbb
xchg
negl
lea
arpl
mov
lret
inc
pop
jns
xchg
mov
fincstp
ljmp
adc
rolb
jg
inc
push
mov
scas
jg
or
dec
xchg
notb
add
imul
mov
xor
mov
test
testb
inc
mov
pop
sti
mov
add
insl
addr16
jo
sti
add
push
jg
negb
das
xrelease
jb
push
js
sub
or
adc
add
and
mov
ja
mov
fcoml
dec
outsb
sub
pushf
hlt
or
pop
xchg
adc
pushf
mov
pusha
cmp
fsts
cmp
testl
in
mov
out
cmp
cmc
mov
cmp
mov
or
pop
mov
sbb
mov
push
int
push
add
repnz
cli
in
mov
and
xor
sub
mov
dec
lret
push
push
push
cli
loopne
inc
pusha
out
in
insl
push
jbe
enter
pop
xchg
fisubs
adc
sar
adc
xor
inc
mov
lahf
fnstcw
inc
pop
xchg
push
push
sbb
shrd
pop
lret
addl
loopne
outsl
inc
add
adc
enter
push
leave
aam
jb
or
incb
push
push
test
xor
push
xchg
daa
int
aas
add
dec
cmpsb
pop
cmp
cmp
subl
stc
iret
fstp
sbbb
repnz
lods
stc
sub
loop
cli
lds
jbe
sub
lds
and
xor
or
div
roll
cli
iret
cli
push
jbe
leave
test
cmpsl
jb
pop
or
mov
das
rcrb
out
loop
stos
clc
mov
dec
xchg
mov
jmp
add
xchg
dec
in
lock
pop
jae
jmp
mov
mov
in
fistl
fistpll
shrb
cmp
lea
cs
test
call
pop
cmpsl
push
jnp
mov
arpl
sub
pop
lahf
add
mov
cmc
xchg
fldenv
push
lcall
push
jg
dec
fwait
imul
sbb
mov
mov
jae
fwait
dec
imul
push
inc
cmpsb
out
mov
push
pusha
jae
or
dec
stc
xor
movsl
cmp
xchg
xchg
insl
loopne
iret
es
add
pop
std
cmp
mov
push
or
nop
loope
incb
add
adc
and
ss
scas
sbb
ret
stc
pop
std
dec
movsb
sbbb
xor
mov
aaa
pop
push
cmpb
jo
je
lea
arpl
rcrl
lcall
je
mov
std
inc
inc
imul
pop
out
leave
cmp
iret
mov
pop
mov
jg
push
jno
movsl
sbb
mov
andb
mov
ljmp
sub
out
fisttpl
push
movsl
repz
xchg
xor
pop
enter
add
push
movsl
jle
jmp
addr16
mov
adc
fs
dec
cmpsl
adc
fstpl
ffreep
pop
pushf
aad
push
shr
and
addr16
pop
jecxz
add
sbb
pushf
xchg
cmpsb
jae
je
out
push
stos
fistps
pop
sbb
adc
insl
push
add
popf
loop
xor
movsb
and
xchg
sub
je
and
or
ret
jbe
adc
push
test
cmpsb
xchg
ds
cs
adc
xchg
jle
test
lcall
push
xchg
xlat
mov
xchg
cmpsl
fld
push
sbb
dec
push
dec
mov
and
inc
push
decl
sbb
std
pop
push
push
shl
xchg
movsl
aam
shr
scas
or
repnz
das
rolb
cli
fbld
mov
pop
sub
push
push
or
nop
xor
dec
adc
enter
xchg
cltd
add
xor
cld
fidivrl
es
test
push
out
fsubrl
cmc
mov
mulb
loop
or
sbb
dec
scas
fwait
jno
xchg
ss
insb
out
pushf
pop
shll
pop
jnp
and
sub
add
icebp
movsl
sbb
jmp
repnz
in
jns
lods
sub
cltd
orb
cmp
cmc
lret
inc
mov
adcl
ljmp
adcb
push
sbb
xchg
xor
mov
inc
push
push
out
dec
mov
mov
imul
aad
shll
loopne
test
rol
aad
xor
fs
enter
xchg
mov
mov
les
repnz
daa
xor
lahf
sahf
stos
sahf
in
sbb
scas
push
xchg
inc
cmp
pop
int3
add
cmp
lahf
cmpl
shll
out
sub
sbb
outsb
je
inc
repz
and
sbbb
icebp
sahf
and
mov
xchg
enter
and
mov
js
sbb
xchg
daa
fnop
xor
test
mov
lret
pop
outsl
adc
ret
xor
fcomps
cmp
xor
pop
cld
stos
cmc
adc
out
cld
out
inc
and
xor
in
adc
adc
lea
mov
or
inc
popa
sbb
rcl
int3
jo
push
stc
cmc
jb
sbb
add
jns
push
call
adc
sbb
cs
jae
sub
lods
jno
mov
jp
insb
repnz
iret
and
mov
mov
mov
cmp
mov
test
jno
mov
stos
add
pop
pop
gs
cmpsl
jg
mov
cld
push
push
jmp
fcomps
xor
inc
mov
sarl
loop
cmpsb
mov
icebp
call
into
in
mov
mov
movsl
test
cmc
xchg
loope
push
cmp
xlat
in
sub
outsb
pushf
aam
test
cld
out
push
jecxz
mov
std
or
mov
mov
add
mov
and
lds
movsb
out
hlt
aaa
insb
ljmp
cmp
jmp
lea
loope
xor
int3
scas
dec
dec
mov
dec
sbb
sub
movsb
pop
pop
xchg
cmp
dec
mov
jns
pop
ds
mov
cmp
ja
das
or
stos
fs
push
and
mov
fprem1
sbb
mov
xor
rcll
or
popa
dec
mov
incb
sbb
xchg
mov
push
jmp
icebp
xchg
xor
mov
fdivrs
fcompl
daa
push
movsb
out
mov
jns
aam
or
or
aad
gs
repz
popf
and
fsubr
add
add
loop
cli
xorl
aam
mov
std
pop
push
clc
lret
loopne
mov
aas
and
push
sub
sbb
je
pop
jnp
scas
xor
sbb
daa
inc
jmp
rclb
sti
add
in
imul
cmpsl
and
ret
cmp
mov
dec
mov
lcall
mov
jmp
aam
jne
mov
sbb
out
xchg
fwait
mov
mov
std
repz
test
dec
inc
cs
pop
xor
mov
lea
les
nop
jnp
in
outsb
xchg
sub
and
enter
dec
ror
aaa
test
outsl
les
std
mov
pop
mov
stc
sbb
pop
rcrl
inc
push
out
push
adc
gs
xor
enter
cwtl
outsb
movsl
xchg
ja
inc
push
in
negb
cmp
push
and
xchg
popa
fidivrs
js
mov
add
sub
jl
pop
and
outsl
xchg
mov
and
shlb
xor
xor
lahf
dec
inc
pushf
sub
dec
cmp
in
repz
sbb
les
ret
insb
inc
sti
cmp
out
xor
scas
fs
mov
jecxz
lahf
adc
adc
out
call
scas
mov
dec
idivb
scas
inc
cwtl
cmp
cld
sahf
add
test
inc
jns
ljmp
cmp
push
jg
xchg
test
fisubrs
subb
enter
add
ljmp
sub
mov
add
and
sub
int
fcoms
xchg
enter
fwait
data16
lret
sbb
loope
rorb
mov
push
and
xor
cli
insl
int3
bound
jle
inc
cmp
push
movsl
lcall
jl
fiadds
ds
mov
xchg
push
inc
ja
test
jp
adc
in
test
push
sub
push
mov
test
aaa
js
repz
cmp
add
dec
add
or
and
lcall
arpl
mov
jns
cli
ljmp
adc
inc
mov
out
cmp
xchg
adc
jb
cmp
dec
fsubs
pop
sub
cmpsb
adc
cli
push
xchg
fmuls
xchg
dec
sub
inc
cmp
fidivrs
sarb
int
cmpsl
ja
in
jge
js
fisttpl
sbb
push
mov
push
push
push
xchg
ljmp
xor
or
jbe
jno
fs
addb
push
mov
stos
dec
repnz
cmc
ljmp
les
int
out
addr16
sub
iret
dec
xlat
mov
icebp
in
inc
push
add
and
pop
test
inc
aad
push
inc
jmp
cmp
daa
cmp
sub
ret
subl
stos
xor
test
jle
cs
notb
inc
or
test
inc
incb
nop
push
shlb
insl
xor
divl
lret
or
outsb
dec
pushf
sbb
pop
mov
shr
mov
push
outsl
push
push
mov
movsb
push
dec
fnstcw
js
inc
mov
or
mov
pushf
orl
ljmp
ret
pop
xchg
fldt
imul
pop
sbb
loop
mov
daa
stc
cmp
fistpl
inc
leave
cld
shlb
xlat
xchg
es
scas
loope,pt
gs
lahf
inc
xchg
push
lret
sti
test
add
mov
cmp
xchg
push
orl
pop
cmp
shll
push
or
push
dec
jno
int
push
inc
push
lock
adc
mov
es
xchg
push
adc
adcb
into
lea
and
ret
or
cltd
out
out
sbb
in
mov
out
xchg
lods
push
jge
imul
dec
aas
adc
mov
inc
xor
jnp
xor
cmp
insb
out
das
sbbl
mov
mov
dec
mov
ja
pop
jnp
ss
add
mov
inc
cmp
xchg
jle
and
scas
inc
aas
jne
push
nop
je
pop
hlt
jo
jg
cld
dec
inc
sbb
repz
push
les
dec
js
mov
jle
sub
in
sbb
cltd
add
fldt
push
xchg
pop
lds
sahf
sub
shrb
divb
dec
sbb
fstpl
int
in
mov
pop
insl
sbb
loopne
jnp
sub
jb
outsl
mov
xchg
loopne
add
out
push
add
dec
sub
jmp
push
sbb
xor
jns
cwtl
jecxz
iret
repz
sbb
add
adcb
pop
jne
pusha
cmc
sbb
pop
stos
cmovp
rorl
out
mov
out
xchg
mov
push
cmp
addr16
push
dec
std
pop
mov
fs
xchg
insb
jne
sbb
ficoms
xor
lahf
cmpsb
or
clc
pushf
fpatan
fwait
js
leave
sub
pop
int
mov
xchg
aam
jp
ja
les
std
pop
dec
push
jns
jo
or
cmp
pop
jl
adc
in
xchg
dec
in
mov
push
popa
xchg
dec
es
repnz
mov
xlat
sub
mov
fildll
cmpl
test
cmp
adc
xchg
mov
outsb
stos
adc
fdivrl
mov
mov
ret
and
inc
cld
jg
and
clc
pop
or
lods
pop
aam
pop
push
adc
bound
or
stos
mulb
xlat
mov
popa
in
or
dec
sbbb
inc
iret
scas
pop
movsb
lcall
addl
sarb
fnsave
lock
pop
adc
mov
mov
lcall
rcll
test
jecxz
xchg
sti
imul
shlb
mov
aam
stos
aas
dec
cmp
cmp
addr16
lret
jbe
xchg
lds
xorl
pop
decl
mov
cltd
push
aam
sub
pop
jmp
enter
lcall
pop
in
xor
js
dec
test
mov
imul
pop
out
in
pop
or
lret
xchg
int
inc
adc
xchg
add
cmp
shrl
sbb
into
add
cmc
dec
out
fbstp
adc
and
repnz
jge
shrd
inc
push
xchg
daa
dec
cmp
mov
lods
xlat
push
sub
push
clc
or
mov
push
stos
addb
add
pmaddwd
sbb
mov
or
xchg
das
insl
sub
xor
mov
out
enter
gs
mov
adc
enter
les
adc
jl
mov
add
cmpsl
push
and
out
mov
lods
hlt
fistl
in
inc
mov
cmpsb
pop
cmp
mov
adcl
dec
add
or
data16
push
stc
das
scas
cmpsb
pop
jo
into
xchg
ja
pop
mov
mov
std
add
fcomip
jecxz
xchg
push
add
inc
sbb
cmp
sub
ds
out
repz
sbb
add
jnp
test
call
imul
mov
je
ret
sub
or
sub
add
lods
stos
call
imul
decb
das
mov
imul
mov
mov
cmp
and
out
xchg
mov
mov
dec
lcall
loopne
mov
test
cmp
adc
push
ds
xchg
jb
ljmp
pop
or
xchg
scas
lcall
jnp
outsl
lret
mov
push
stos
xchg
in
jp
push
test
jns
scas
add
adc
inc
pushf
insb
jp
icebp
mov
mov
cmp
addl
fdivrs
enter
scas
cmp
sbb
je
test
into
test
inc
and
lret
pop
notb
cmp
ljmp
dec
gs
dec
cmpsl
jmp
sti
and
fisttps
xchg
ret
pop
adc
xchg
jnp
call
cmp
movsb
and
test
mov
push
sahf
mov
loopne
or
sbb
cwtd
mov
push
pop
lret
std
sub
rcrb
dec
push
and
in
inc
das
hlt
mov
cli
inc
and
pop
outsb
xor
inc
sub
sub
orb
cmpsl
lods
sub
cltd
stos
pop
adc
xlat
adc
leave
fisubrl
cmp
add
mov
mov
pushf
cmp
sbb
adc
xor
jne
lcallw
sbbl
lods
jmp
jmp
push
and
idivl
test
das
aad
test
js
inc
dec
pusha
sub
sbb
push
xchg
pop
mov
xchg
xchg
clc
jo
xchg
lret
xchg
or
push
sub
push
ss
ljmp
mov
bound
cmp
pop
push
push
cli
mov
inc
neg
popf
cmpsb
jb
aaa
cmp
aad
inc
mov
add
out
mov
xchg
xor
pop
mov
jns
adc
mov
das
insl
mov
sbb
movb
fmull
popf
xor
flds
arpl
adc
jge
shll
add
aas
in
iret
insb
pop
cli
lahf
mov
cmp
cltd
fsub
movb
pop
jge
stos
pop
push
pop
lret
adc
mov
pop
sub
push
jp
dec
mov
imul
xchg
pavgw
jb
lods
push
mov
xchg
xor
movsl
sub
rcl
dec
jp
cwtl
mov
jmp
or
mov
fcompl
mov
outsb
mov
xor
xchg
add
call
sahf
stc
mov
call
and
push
aas
pop
mov
jle
test
ret
push
xchg
shrb
xchg
dec
mov
mov
pop
lahf
test
out
sbb
pop
xchg
call
sbb
mov
jno
jge
jmp
or
jg,pt
jl
arpl
sub
jbe
lods
aam
pop
clc
mov
push
dec
inc
lahf
dec
rcl
dec
dec
xchg
dec
mov
testl
movsl
xor
pushf
sbb
or
xchg
vucomisd
jae
out
fists
sub
es
in
call
adc
adcl
js
aam
js
xchg
and
xor
pushf
lret
adc
ss
xchg
mov
jne
aad
mov
aas
mov
hlt
push
jbe
ss
pusha
mov
adc
sub
sahf
mov
loop
loope
pop
stc
xor
or
les
sbb
cmpsb
pop
andb
fsubl
lret
fbld
cmp
push
roll
mov
cs
or
insl
pop
pop
jnp
mov
loopne
cmp
add
mov
pusha
sub
lods
mov
add
xor
call
sbb
mov
sub
mov
lds
mov
lahf
div
add
xchg
sbb
add
push
mov
cli
sub
xor
or
and
ret
ret
jge
xchg
jp
rorb
enter
dec
and
movsb
mov
popa
fcoms
and
test
xor
outsb
bnd
popf
add
mov
int
pop
sub
pop
f2xm1
outsb
jno
mov
mov
mov
lahf
xchg
adc
insl
add
lahf
cmp
or
aaa
add
cmpsl
xchg
daa
std
cmp
and
das
outsl
insl
jo
mov
mov
in
aam
daa
repnz
fbstp
cmp
jp
out
inc
cltd
jne
shr
lods
lods
inc
call
rsm
dec
jge
push
lea
cltd
mov
jae
jmp
lds
xor
xchg
imul
cltd
sub
xor
popa
popa
cmp
jl
dec
or
loopne
in
ret
ss
in
mov
sti
fists
mov
mov
and
rcl
and
dec
shll
inc
mov
imul
mov
leave
imul
sub
rclb
pop
sub
mov
rorl
scas
shlb
or
out
nop
sti
xchg
add
hlt
rorb
jo
repz
dec
pushf
into
in
jns
jb
arpl
xchg
es
ret
cmp
fldt
stos
add
and
mov
mov
jnp
mov
push
jmp
dec
es
mov
pop
mov
popf
test
int3
out
sub
inc
or
bound
sti
mov
sbb
adcb
out
fdivl
push
mov
xor
jecxz
mov
jb
mov
sub
jmp
lods
test
add
fcoms
daa
push
dec
aad
imul
jle
sahf
imul
scas
mov
mov
dec
daa
jnp
notb
mov
ja
hlt
or
ret
pop
and
sarb
jae
iret
je
scas
mov
out
aad
and
jno
xor
insl
adc
dec
sbb
dec
and
addr16
aam
stos
sub
pop
aam
pop
call
ljmp
mov
xchg
nop
mov
int3
es
lret
or
push
lret
mov
test
and
insl
stos
repnz
pop
in
popf
movsb
add
leave
mov
pop
lcall
add
mov
insl
jg
adc
mov
enter
popf
mov
dec
dec
dec
jne
adc
ds
jnp
mov
cmp
in
stos
lret
dec
in
in
sbb
pop
jmp
and
pop
jle
sbb
sub
in
lret
sub
outsb
ret
mov
mov
js
sbb
add
fbld
xchg
push
sbb
push
addl
push
ljmp
cmp
adc
inc
pop
cwtl
xlat
mov
pop
cli
fs
js
cwtl
addb
daa
loop
jmp
mov
mov
nop
test
fcmovb
int3
subl
mov
jecxz
icebp
cmp
data16
repnz
rolb
aaa
sub
add
xchg
xor
movsl
mov
adc
aad
inc
sti
lahf
jae
leave
iret
jmp
stos
outsb
pop
sbb
jmp
sbb
fs
add
mov
rcrl
inc
aam
jge
dec
adc
pushl
repz
add
icebp
mov
shl
je
jecxz
jl
inc
mov
lea
cmp
repnz
inc
shlb
xchg
xchg
aas
outsb
cmc
fcoml
aad
out
inc
test
sbb
jb
popa
xchg
nop
fisttps
jg
mov
jae
jmp
out
pop
mov
xor
sbb
stos
sub
cmp
pop
sbb
or
fdiv
and
stc
bound
popf
enter
sarl
data16
les
xor
pushf
out
and
add
lock
cmp
int
dec
pop
sti
or
cmc
out
out
shlb
mov
mov
imul
mov
dec
arpl
data16
sub
into
fcoms
push
jmp
cmp
pushf
fwait
xchg
adc
xlat
adc
mov
sbb
in
add
xor
scas
sub
pop
dec
rorl
add
push
iret
outsl
fdivl
inc
loopne
xor
xchg
mov
adc
add
loop
ss
flds
dec
test
inc
loope
push
mov
mov
sub
sarb
ljmp
dec
jbe
cwtl
ds
jmp
mov
stos
sbb
popw
rclb
xlat
popl
cmp
sub
add
mov
jbe
jmp
mov
ljmp
adc
hlt
dec
hlt
rcrb
xchg
scas
inc
xorl
les
sbb
cwtl
dec
sbb
mov
sbb
lcall
mov
sbb
shrb
addl
stc
gs
fs
cmpsl
or
jae
mov
jecxz
fcoms
loope
lods
cmpsl
and
inc
add
add
lahf
inc
data16
cmp
xchg
scas
pop
push
in
inc
fcom
cmp
mov
aaa
fincstp
fisubrs
lods
xchg
scas
adc
lods
out
mov
enter
aas
xor
shll
es
xchg
mov
mov
negl
sbb
pop
jae
daa
jmp
inc
pop
out
jg
adc
lcall
in
lcall
mov
fstl
loope
iret
mov
cld
add
sti
lock
cmpsl
iret
out
call
arpl
lret
push
imul
cmp
sbb
sub
and
jnp
in
lods
lcall
add
loop
hlt
xlat
xchg
repnz
dec
jne
jecxz
or
mov
in
mov
sbb
xchg
mov
xlat
and
movsl
push
mov
subb
jmp
es
dec
loope
outsl
push
jb
movsb
and
sbb
jo
xor
loope
xchg
xchg
mov
pop
fidivrl
ds
jo
xchg
adc
jecxz
and
cld
or
add
sbb
push
mov
lahf
out
pushf
jnp
fucomp
addl
jne
iret
or
mov
adc
test
jecxz
jl
pop
xor
push
inc
dec
imul
inc
adc
sub
mov
pop
cli
mov
jg
sub
ror
xchg
addr16
sub
notb
mov
mov
popa
subb
cmp
out
adc
dec
mov
mov
cmc
mov
inc
push
stos
jne
pop
xchg
lods
dec
cld
xchg
dec
dec
pop
and
std
xor
jge
jne
adc
xor
out
mov
add
sub
and
push
or
sub
cmp
sbb
rcl
cmc
out
mov
mov
stc
out
jno
push
jnp
mov
les
jle
outsl
loop
movsl
and
mov
add
scas
jl
sbb
notb
mov
popa
mov
push
divb
sub
push
das
jecxz
lret
ret
jae
test
add
stos
push
test
in
pop
fimuls
mov
enter
xor
push
mov
jecxz
mov
cmp
mov
xchg
fs
lahf
sub
es
mov
mov
popf
xchg
inc
inc
in
fidivs
les
pop
push
add
stos
push
xchg
lock
inc
jnp
dec
outsl
cmp
push
sub
adc
frstor
and
sbb
fbstp
call
movswl
int3
inc
mov
addr16
insb
jge
repnz
add
pop
inc
repz
add
out
outsb
test
jae
add
mov
daa
pop
and
jae
out
adc
lcall
sti
jg
das
loopne
mov
inc
jne
push
insb
das
sub
dec
daa
add
ss
add
inc
mov
jmp
iret
ret
jne
out
xchg
in
sub
pop
ficoms
add
mov
inc
pusha
adc
ja
jg
dec
insb
ljmp
lcall
ljmp
mov
adc
rcl
inc
xor
jb
dec
jle
xchg
fnstenv
mov
cltd
add
xchg
ret
jo
fists
pop
jmp
xchg
jno
dec
rcl
sarb
cmp
inc
enter
mov
sub
dec
sbb
ja
ret
push
pop
sbb
arpl
into
lea
xchg
imul
scas
sub
stos
out
daa
pop
mov
jnp
incb
adc
rcrl
out
mov
movsb
ss
jne
jbe
and
iret
shrb
loop
xchg
add
cmp
jns
dec
clc
mov
mov
roll
scas
ret
inc
add
mov
mov
dec
or
cmp
pop
clc
mov
xchg
mov
add
jmp
pop
fwait
and
adc
int3
mov
ljmp
sbb
sbb
mov
push
cmp
icebp
int3
push
ss
and
inc
mov
cmc
xchg
arpl
test
clc
pop
and
xchg
mov
mov
repz
sbb
out
cmp
and
aam
mov
sbb
inc
adc
aas
test
jmp
outsl
xchg
inc
fmull
rorb
sbb
xor
bound
or
sub
sub
gs
xchg
mov
fcomps
sbb
aad
mov
ljmp
cmp
sub
rolb
bound
cmc
jnp
cwtl
fisttpll
dec
xchg
lods
pop
clc
mov
leave
pop
popa
ficomps
arpl
imul
rcll
jmp
enter
lods
nop
fildll
cmp
mov
and
inc
mov
jle
dec
sahf
pop
and
stos
dec
mov
dec
adc
push
push
adc
mov
ljmp
pop
popf
mov
fdivs
cmp
lret
adc
mov
out
int3
mov
popa
cmpsl
icebp
pop
xchg
cmp
ds
sbb
test
stos
lret
lea
xor
in
xor
xchg
test
dec
ret
inc
lret
sub
ficompl
loopne
into
and
out
mov
pushf
inc
loopne
insl
adc
pop
fnstenv
adc
pop
push
ljmp
jge
out
jne
cmp
sti
mov
in
ss
pop
pop
mov
sub
clc
xchg
mov
pop
inc
gs
fsts
xor
adc
ja
lahf
mov
dec
pop
cmc
mov
add
and
sub
dec
loopne
orl
cli
xchg
stos
imul
lcall
adc
push
xlat
push
test
in
mov
fwait
cmpsb
repz
in
lcall
jge
sub
push
xchg
cmp
dec
aad
aad
xchg
lahf
leave
scas
adc
mov
sarb
xchg
fsubrl
sahf
inc
das
jns
push
fldl
dec
mov
mov
inc
jl
jmp
in
sub
arpl
sub
push
push
mov
lods
mov
mov
in
ljmp
sbb
loopne
ror
popf
jmp
cmpsb
or
test
and
and
ljmp
push
add
scas
cmc
push
repnz
mov
jecxz
xlat
sbb
cld
and
stos
sbb
scas
push
push
adc
lea
loopne
push
incl
imull
mov
adcb
mov
loopne
std
sbb
add
mov
xchg
inc
shlb
jno
test
pushf
ljmp
sbb
sahf
flds
call
shld
sbb
adc
pop
cmp
push
jp
dec
mov
mov
mov
test
movsl
dec
call
pushf
and
std
fsts
idivb
pop
aad
lods
xchg
test
jp
xor
insl
xor
cld
scas
dec
shlb
ret
nop
es
nop
mov
mov
mov
sbb
addr16
mov
lahf
out
outsl
ss
adc
xor
mov
insl
add
mov
es
adc
stos
sbb
lahf
mov
jno
inc
int
sbb
sti
add
pusha
fs
addl
inc
enter
fadds
dec
clc
js
push
cmp
mov
shll
jnp
inc
jo
add
addl
sahf
push
cmp
jnp
leave
push
std
test
or
pop
pushf
cltd
arpl
mov
cs
ja
jno
outsl
stos
lret
cmp
mov
jle
pop
mov
imul
and
cmp
jg
mov
shll
scas
loope
test
mov
scas
pop
push
mov
mov
and
adc
es
fs
jae
jae
cwtl
fucomp
aad
in
jl
mov
dec
xchg
cld
dec
push
aam
aas
sub
push
dec
jo
and
push
stos
js
je
xorb
sub
fiadds
push
xchg
xlat
sub
xlat
push
repnz
daa
and
mov
imul
cld
inc
outsb
pop
jno
cld
jg
adc
add
sbb
xor
cmpsl
add
add
out
push
lods
jns
mov
jge
and
gs
add
xchg
sti
je
movsl
loope
cmp
mov
cmp
dec
cmp
outsb
push
or
xor
push
dec
adc
cmp
insl
sbbl
adc
mov
pop
add
inc
dec
add
adc
jbe
push
out
ret
push
cwtl
and
fwait
stos
call
pushf
xor
pop
adc
mov
add
adc
aam
loopne
movsb
inc
and
enter
adc
push
stos
or
pop
mov
xchg
inc
mov
inc
mov
imull
jbe
decb
cmpb
ds
dec
mov
mov
mov
adcb
push
gs
enter
nop
stos
mulb
push
mov
mov
idiv
adc
jnp
inc
adc
adc
jecxz
cmpb
lahf
aad
insl
add
popf
dec
dec
aad
push
aas
xor
loopne
pop
add
mov
or
rcrb
mov
pop
repnz
subb
inc
add
lahf
xlat
or
imul
ljmp
out
inc
shll
jns
ficoms
lret
and
mov
out
in
and
sarl
inc
into
aas
std
ret
aas
es
enter
into
mov
testb
daa
or
pop
add
pop
add
leave
mov
int
push
int3
sbb
jg
jmp
push
or
cmp
inc
out
and
jo
pop
out
ror
jg
cmpsb
js
lods
test
pop
pop
sub
stc
outsb
xchg
testb
push
or
sub
fbld
mov
stos
mov
cwtl
loope
jo
fwait
cmpsl
stos
xchg
jecxz
mov
xor
mov
sbb
popa
inc
pushf
jnp
mov
frstor
daa
mov
and
sbb
nop
pop
pushf
addr16
dec
pop
add
inc
jmp
xchg
iret
pop
data16
imul
divl
test
push
int3
pushf
pop
jnp
repnz
xchg
ret
dec
sbb
mov
pop
sti
rorb
addr16
jecxz
sar
xor
mov
int3
mov
jecxz
jmp
xchg
test
imull
xor
subl
push
pop
sti
cmc
ljmp
add
in
fdivrs
test
mov
addr16
mov
aas
xchg
xor
outsl
iret
mov
out
xchg
or
adc
push
lods
or
and
pop
or
cld
sbb
cmp
das
in
dec
mov
shr
bound
push
push
popa
loop
sub
mov
adc
add
adcl
fs
dec
xchg
int
xchg
loopne
test
dec
adc
xlat
sbb
cmp
or
clc
pop
mov
outsb
movsb
push
xor
test
push
scas
push
dec
in
mov
mulb
aad
into
mov
movsb
or
inc
xlat
loopne
jne
xor
in
jecxz
test
call
ss
loop
lods
pop
or
mov
add
xor
sbb
ret
lret
pop
aas
fwait
add
rcr
xchg
xchg
gs
mov
xchg
lds
xchg
iret
pop
loop
fistps
jno
jnp
add
mov
sub
sbb
neg
or
setne
adc
inc
mov
in
jl
cmpsl
jne
jne
mov
imul
das
out
mov
aad
mov
les
adc
les
loope
js
dec
push
jne
push
in
cmc
movsb
imull
flds
xor
repnz
loop
in
sub
mov
cmpsb
lahf
xchg
adc
push
or
icebp
jmp
shll
in
fstpl
je
iret
xor
sbb
mov
and
out
lahf
xor
gs
stc
insl
in
push
in
bound
mov
lock
push
pop
adc
addb
and
shl
loop
movsl
arpl
arpl
push
dec
sbb
and
mov
or
ds
repz
test
cli
popa
fisubl
js
pop
push
cmp
sub
and
test
cmp
jl
add
xchg
fwait
dec
cmp
and
mov
pop
mov
js
mov
pop
mov
xchg
pop
jle
push
aas
mov
xlat
sahf
cmp
popf
push
mov
and
scas
out
sub
mov
push
iret
push
fldl
hlt
mov
fistps
xor
pop
loopne
mov
xor
jg
mov
xor
mov
imul
pushf
rcrl
addr16
xor
jne
into
ja
ja
add
mov
xor
mov
add
xor
mov
es
lret
imul
mov
inc
xor
fidivrs
xor
sub
pop
mov
ficoms
add
out
jle
leave
pop
test
cli
popa
hlt
sbb
cmp
add
lock
or
pop
and
cmpsb
xlat
adc
loope
push
jno
ja
dec
xchg
inc
mov
out
mov
into
mov
int
sub
push
rcl
dec
shll
or
push
pop
or
fisttps
mov
mov
add
lock
dec
in
inc
in
rcl
mov
dec
and
xchg
push
add
pushf
hlt
xchg
clc
pop
xchg
stos
jbe
mov
jecxz
cmovg
in
stos
push
aaa
mov
dec
lds
xor
aad
flds
icebp
jg
and
and
sub
jnp
mov
testl
mov
fmulp
xchg
and
imul
dec
and
aas
fwait
dec
in
out
inc
xor
outsb
fucomip
jbe
xchg
test
nop
jbe
iret
mov
fiadds
arpl
mov
and
mov
jmp
std
xor
fadd
jecxz
pop
rcrb
ficomps
inc
aam
mov
stos
push
xchg
lods
lods
adc
sarb
pusha
arpl
dec
movsb
sbb
jmp
stos
sti
mov
ret
insb
dec
add
cmpsb
les
jae
jb
enter
xchg
cmc
and
push
js
sahf
leave
inc
ljmp
push
sbb
jmp
pushf
dec
fnstcw
popa
lret
mov
js
cwtl
or
jl
orb
popa
pop
lret
mov
mov
xlat
pop
je
add
mov
push
cmpb
outsl
jbe
push
adc
push
xchg
pop
cmpsb
mov
jne
imul
xorl
sti
dec
mov
pop
in
insl
into
repnz
mov
andb
enter
stc
repnz
in
or
stos
loopne
mov
sub
inc
stos
fsubp
hlt
scas
cmp
popa
cmp
push
inc
jge
leave
out
dec
test
cli
dec
sbb
mov
lea
cmp
xchg
jbe
and
int
and
loopne
hlt
lea
sbbb
roll
adc
pop
mov
int3
dec
dec
adc
psubusw
in
push
mov
int
lsl
or
jb
mov
push
ja
in
pop
adc
lret
push
ja
cmp
addr16
mov
adc
xor
mov
pop
add
jge
push
inc
sbb
test
cld
shlb
popa
scas
les
aad
mov
adc
fisubrs
in
push
scas
mov
pop
sbb
data16
xor
mov
mov
call
push
push
pop
mov
sti
out
in
add
push
fdiv
loopne
mov
ret
cmp
xor
inc
push
mov
fcompl
add
aas
out
cmp
lret
popf
mov
pop
xor
cmpsl
shl
xchg
xor
icebp
and
mov
mov
gs
insb
dec
shrl
outsb
push
xor
mov
cmp
fistl
test
adc
inc
icebp
dec
pushl
mov
bound
lds
scas
jl
dec
or
push
xor
mov
addr16
xchg
orb
aas
sbb
rol
cli
mov
dec
rcrb
or
xchg
pusha
nop
scas
push
nop
adc
push
pop
fists
push
jae
mov
int3
rorb
lock
pop
lds
sbb
loop
sbb
dec
mov
roll
lret
in
aam
icebp
xchg
ss
lock
jge
push
push
cmp
pop
ds
pop
scas
and
cmpsb
movsb
icebp
or
push
sub
mov
or
leave
pop
cmp
push
sub
js
int
rcr
dec
shrb
xchg
jne
xor
and
mov
add
inc
dec
or
mov
or
idivb
pop
or
push
lds
xchg
sub
test
adc
push
es
mulb
gs
das
inc
ds
dec
and
jp
sar
pop
push
cs
rolb
or
insl
sbb
nop
xchg
gs
dec
enter
push
pop
sbb
pop
fidivl
out
add
lcall
mov
aas
cmp
sub
xchg
stos
sbb
lret
or
aam
repnz
insl
stos
ja
cmp
inc
cs
mov
xor
popf
cmp
add
int
mov
push
mov
sbb
xchg
mov
movsb
mov
sbb
xor
cmp
pop
push
fninit
bound
imull
sbb
jp
jge
repz
cwtl
push
pop
push
dec
dec
push
xchg
int
addr16
mov
add
inc
popa
inc
xchg
xor
lock
stos
and
icebp
scas
dec
lcall
aam
lea
adcb
outsl
mov
jb
cmp
les
mov
sahf
scas
adc
add
mov
jmp
add
add
jmp
lea
subl
push
ret
jne
ret
or
jecxz
outsb
sub
jne
mov
dec
push
push
lock
jne
push
insb
in
or
cwtl
mov
ret
push
rolb
loopne
adc
jecxz
icebp
outsb
sub
roll
out
mov
pop
outsl
icebp
int
sbb
rcrl
mov
ficoms
outsl
push
sahf
mov
mov
sub
mov
popa
mov
push
push
ret
mov
mov
sbb
cmp
and
pushf
push
xchg
mov
push
inc
fdivs
push
sub
int3
ficoms
fiaddl
shrb
fucomp
push
adc
lods
movsb
gs
xchg
aaa
sbbl
lahf
push
push
or
cmp
cmp
test
std
sti
insl
lahf
outsb
pop
mov
mov
add
inc
lods
push
pop
insl
pop
test
ljmp
into
dec
mov
adc
cwtl
roll
pop
mull
mov
mov
shl
jnp
lahf
fwait
jns
pushf
dec
imul
mov
fwait
cmpsl
aas
je,pn
aaa
pop
xor
or
xchg
xor
dec
sbb
in
mov
js
stos
daa
test
mov
xor
and
arpl
clc
and
dec
dec
les
imul
mov
out
gs
jns
jl
jp
push
cmpsl
into
lea
dec
and
arpl
outsl
dec
jle
cld
shll
adc
cld
clc
movb
je
out
out
xchg
xorl
dec
push
adc
iret
adc
push
in
iret
pop
pop
jmp
popf
stc
add
sbb
insb
pop
fisubl
cltd
xlat
enter
sub
and
ja
fisttpll
leave
jbe
out
ds
inc
out
push
xorl
xchg
dec
mov
mov
sbb
pop
mov
mov
pop
inc
popf
les
cmp
test
mov
les
sbb
jns
inc
jno
aaa
fmulp
mov
popf
lret
jns
xchg
and
push
nop
jbe
ds
push
lds
xchg
adcl
cmp
clc
das
mov
orl
sub
jbe
cld
jle
outsl
mov
cmp
or
pop
aas
inc
dec
test
push
cmpb
mov
jle
dec
cmc
cmpsl
sbb
movsl
aas
stos
fsubs
sub
and
lds
scas
jg
fucom
xchg
jne
mov
cmpsb
fistpll
popa
sub
imul
aas
sub
fisubs
hlt
mov
cmp
in
push
das
pop
iret
and
pop
fstl
mov
int3
sub
push
mov
push
push
je
adc
loop
shl
aam
and
and
sbbb
jae
test
and
lret
clc
push
ja
cmpb
jg
push
pop
std
adc
dec
cmp
pushf
inc
test
pushf
cmp
mov
sahf
ret
push
mov
mov
in
mov
pop
scas
mov
pop
jne
mov
int
jns
mov
jge
or
js
call
nop
xor
pop
icebp
aaa
fstp
lret
mov
push
push
add
decl
stos
jle
mov
xor
add
mov
cmp
and
or
pop
or
push
xor
movsb
pushf
cmpsb
setno
leave
pushf
fwait
mov
das
add
pop
cwtl
cltd
fimull
loop
and
mov
decb
stos
mov
call
scas
cmpsl
jb
dec
mov
xchg
cmc
or
test
stos
jo
mov
jl
aam
icebp
insl
dec
cltd
outsb
push
push
xor
stos
add
imul
lds
fdivl
adc
xor
mov
les
sub
add
std
mov
outsb
popa
jo
mov
or
fidivrs
out
rcrl
cmp
aaa
loope
push
cmp
push
sarl
mov
inc
sbb
les
mov
sbb
sbb
cmp
subb
inc
mov
ljmp
popf
sbb
xor
adc
adc
or
repnz
mov
pusha
xor
aam
or
cmpsl
jbe
jno
outsb
ds
add
fstpl
dec
iret
dec
push
or
mov
fwait
test
mov
push
stos
and
cltd
push
xor
push
nop
mov
jnp
mov
jle
or
cmp
in
enter
add
lret
dec
dec
test
inc
xchg
xchg
int3
adc
add
stc
xor
pop
adc
mov
mul
fidivl
aas
std
imul
pop
in
xor
dec
xchg
movsl
dec
push
int3
andl
cmp
ficoms
jnp
sub
dec
adc
push
enter
rep
pop
inc
lea
fistl
and
repz
cmp
fsubrs
and
adc
xor
mov
mov
mov
and
inc
movsb
xchg
mov
sbb
push
hlt
fimuls
dec
int3
pop
loopne
inc
insb
push
push
stos
or
repz
mov
cs
movsb
sub
fucomi
or
inc
lcall
hlt
cli
sub
fsubs
fstpl
fisubrs
push
imul
loop
xchg
add
je
pop
mov
loopne
or
adc
lock
test
sub
decb
xchg
sbb
into
mov
pushw
mov
cmp
fisttpll
adc
iret
jp
lock
mov
js
andb
push
cltd
jl
es
and
hlt
enter
add
test
out
mov
push
push
add
xor
mov
xor
cmpsl
orb
test
orl
pop
push
repz
insl
adc
pop
add
dec
pop
cmpsb
loop
mov
jge
cltd
push
dec
mov
out
sbb
jle
xor
in
repz
imul
mov
pop
outsl
cmp
sbb
inc
les
ror
sarl
imul
mov
lahf
jns
incl
incb
dec
xorl
xor
jmp
es
jl
pop
test
test
jno
xor
or
mov
xor
ljmp
mov
mov
and
shll
xchg
push
aad
dec
fsubs
out
cmp
and
je
add
addr16
mov
xor
leave
push
lcall
add
test
test
js
fwait
cltd
aam
push
sysenter
fadds
or
push
adc
leave
insl
fdivrp
mov
out
inc
xchg
dec
push
pop
cmp
cmpsb
push
dec
xor
jl
jmp
push
inc
loopne
aas
pop
in
pop
lea
add
jecxz
fs
sahf
xchg
pushf
dec
out
pusha
icebp
push
leave
mov
pop
inc
addl
std
mov
inc
inc
jmp
mov
pop
jmp
xlat
adc
outsl
lea
inc
mov
xchg
sub
adc
ja
outsb
mov
sub
mov
push
stc
icebp
repnz
inc
cs
imul
mov
push
cmc
int
faddl
icebp
adc
call
jbe
imul
or
cs
dec
fucomip
stos
mov
shlb
pop
sbb
adc
inc
fbstp
inc
sub
in
jle
outsl
out
jno
mul
jecxz
pop
mov
add
iret
stc
pop
jmp
and
lock
or
lret
fcomps
mov
rcr
dec
addb
cmp
loope
loope
jae
lods
nop
ljmp
outsb
ljmp
ja
mov
jns
movsb
jb
sub
rep
std
inc
jne
mov
jl
popa
mov
jmp
mov
clc
mov
outsb
addb
pusha
out
jae
sub
adc
lahf
fdivr
es
mov
lret
popf
mov
shll
push
jbe
lods
stos
sub
dec
dec
sub
jmp
xlat
push
cwtl
jb
mov
jb
pop
aaa
jae
pop
fnsave
iret
aaa
orl
test
mov
inc
xchg
lock
loop
in
fisubs
test
cmp
hlt
pop
or
lods
sub
push
movsb
lcall
jecxz
mov
push
mov
iret
adc
and
mov
ljmp
lahf
scas
pop
mov
dec
pop
sub
jb
xor
lods
sahf
cltd
mov
dec
sbb
adc
inc
inc
pop
inc
push
scas
popa
sbb
mov
arpl
add
adc
adcb
call
ret
in
fs
dec
sub
inc
pusha
jbe
js
mov
add
adc
addb
mov
scas
lea
push
jmp
xor
sbb
lods
cmp
mov
dec
gs
loopne
out
sbb
pop
js
push
sar
adc
fs
mov
pop
int3
mov
cwtl
sub
out
mov
fidivrl
rorl
sarb
mov
mov
into
dec
ja
shl
imul
pusha
adc
xchg
ljmp
inc
ficompl
sqrtps
out
xchg
int
jns
pcmpgtd
lods
je
fldenv
fcomps
push
and
test
in
and
adc
in
dec
inc
inc
stc
test
sarl
cwtl
fadd
sbb
lock
xchg
mov
push
mov
daa
ficoml
jg
cmpl
pop
add
cltd
rorl
mov
sbbl
or
cld
lcall
notl
cltd
insb
dec
mov
push
les
push
pop
bound
in
sbb
test
in
sbb
xchg
jne
stos
lret
xchg
std
jo
out
inc
jnp
push
fisttpll
out
xor
xor
sbb
arpl
sahf
inc
call
stos
xlat
loope
dec
mov
les
sub
mov
add
popl
clc
shrl
xchg
sbb
lds
sar
mov
mov
push
mov
dec
and
fs
in
notl
adc
mov
sbb
mov
addr16
mov
push
xlat
cmpsb
push
shrl
scas
or
shll
aam
xchg
mov
in
orb
mov
push
dec
and
sub
inc
inc
not
cmpsb
xchg
jecxz
sbb
je
and
pop
lahf
loop
hlt
js
adc
sub
aas
ficoms
inc
push
int3
add
xchg
enter
ror
xor
pop
cli
mov
stos
sub
mov
movsl
fists
lock
mov
add
jmp
jecxz
xchg
and
dec
inc
inc
out
push
mov
pop
insl
andb
dec
mov
and
dec
mov
call
clc
cld
inc
dec
adc
sub
clc
aaa
sbb
pop
sbb
scas
sbb
mov
aaa
enter
in
pop
test
insb
sub
jecxz
cmp
adc
stos
mov
lea
movsb
hlt
ljmp
cld
in
or
jecxz
lea
lods
xchg
pop
fsub
aas
inc
in
out
mov
push
xchg
sbb
adc
pop
dec
out
xor
inc
outsb
mov
pop
dec
cmpsb
push
inc
jb,pn
es
mov
into
shll
je
push
jmp
out
rorb
push
xchg
cmp
push
inc
mov
rol
add
movsb
pop
out
pushf
dec
and
cld
incl
sub
jb
lret
fwait
sbb
jne
sub
mov
inc
inc
out
sbb
insb
pop
mov
push
dec
sub
sbb
fs
jp
loop
fdiv
push
movsb
mov
jb
fwait
test
int
inc
jnp,pn
pop
ret
sbb
hlt
lret
xchg
dec
mov
jmp
in
popa
xchg
fbld
shrl
mov
xor
dec
pop
sub
xor
ret
mov
insl
jle
mov
mov
cmp
lods
shlb
outsb
cli
sub
fmull
dec
lret
aam
push
jno
cmp
and
dec
or
es
test
fs
test
adc
nop
orl
mov
shll
adcl
mov
in
pop
ret
aad
push
push
and
call
imul
bound
push
cmp
xchg
dec
and
sub
movsl
inc
bound
push
pop
dec
in
dec
inc
loopne
inc
push
inc
dec
mov
in
jbe
inc
dec
cmpsl
sbb
dec
test
insl
push
add
dec
push
push
leave
xchg
test
jl
or
jg
jbe
ret
cmp
push
notl
or
push
mov
jp
push
je
cli
fdivr
lock
in
xchg
xchg
sahf
mov
cmp
pusha
call
push
movsb
adc
sbb
push
es
add
stc
mov
dec
xchg
stc
ficomps
dec
hlt
sub
nop
adc
mov
push
push
shr
rcrb
sbb
dec
adc
fisttps
mov
and
cmp
jae
clc
mov
scas
stos
mov
adc
sbb
xchg
sarb
addr16
mov
adc
scas
loope
jae
push
fwait
mov
int
add
addb
mov
xchg
scas
lret
les
mov
movsl
fbstp
mov
insb
lea
jmp
xlat
in
dec
add
or
cmp
into
or
imull
jne
mov
xor
and
shr
adc
push
addr16
adc
pop
pusha
insb
mov
dec
and
arpl
nop
aad
pop
jge
in
call
adcb
int3
mov
ss
mov
or
ja
or
lods
jnp
lea
mov
subl
bound
sbb
sti
int3
fildll
nop
ds
jbe
sbb
and
xor
jns
faddl
xchg
jl
test
mov
mov
imull
push
rol
ret
sbb
dec
daa
push
push
je
mov
cmp
or
sub
loop
inc
cmp
push
das
jmp
lret
sub
pop
xor
test
or
mov
ret
out
mov
lds
outsl
jecxz
loope
cmpsb
inc
rorl
mov
inc
and
or
outsl
push
cltd
ficoml
stos
iret
flds
sti
ficoms
jo
loopne
jae
cs
xchg
test
cmp
mov
call
sub
xchg
sbb
out
push
hlt
je
int3
ds
jb
jae
xchg
adc
ror
pop
insl
jg
ret
int3
mov
xor
mov
lock
lods
sbb
lcall
mov
sar
jmp
add
inc
mov
sbb
das
in
mov
sub
into
or
mov
popa
mov
mov
inc
sub
enter
mov
lds
jb
shll
stos
pop
leave
outsl
xor
xor
ret
jbe
pop
jno
rcrb
cmp
cmpb
pop
push
xor
stc
dec
daa
out
movsl
xchg
cmpsb
and
inc
dec
enter
pusha
xchg
test
mov
mov
mov
mov
cmpsb
add
shr
fmuls
bound
cli
mov
sbb
pop
out
arpl
push
in
cmp
mov
push
imul
mov
sub
sti
inc
pop
mov
mov
cmpb
cwtl
repnz
cmp
push
scas
lds
mov
scas
roll
mov
fldenv
stos
out
mov
sar
or
scas
xchg
stc
mov
adc
adc
cwtl
mov
int3
sarl
fidivrl
iret
fidivrs
or
movsb
adc
push
sub
loop
stc
pusha
sub
cmp
xchg
mov
fistl
loop
mov
mov
xchg
scas
scas
pop
sub
jns
das
pop
fs
das
push
sub
sub
or
negl
lea
out
out
xchg
sbbl
mov
in
out
lods
mov
dec
stc
xchg
or
mov
adc
jbe
imul
jmp
cli
inc
cmp
sub
loope
lods
mov
scas
call
sub
in
idivl
xor
testb
push
and
aam
add
lret
mov
sqrtps
loop
data16
mov
aad
pop
test
pop
mov
fstpl
mov
enter
es
xchg
push
icebp
mov
pop
repz
push
and
out
mov
inc
jo,pn
pushf
add
jg
imul
mov
jg
or
add
mov
mov
mov
andl
in
mov
adc
pop
subb
sub
xchg
mov
xchg
push
jge
int3
dec
stos
mov
xor
add
pop
andl
push
cltd
loop
movsb
ljmp
inc
test
mov
out
jl
fdivrp
cwtl
movsl
cmpsl
jmp
enter
ja
pop
enter
xor
mov
arpl
roll
shrb
in
jg
into
sahf
and
out
das
adc
jg
mov
ljmp
lds
push
mov
sbb
loopne
fs
sbb
cs
push
in
data16
lea
xchg
lds
xor
cmp
push
pop
dec
dec
sbb
push
sahf
lret
cmp
sbb
adc
dec
hlt
cmp
mov
dec
pop
inc
add
push
cmp
in
hlt
hlt
or
push
cmpsl
cli
cli
dec
ret
add
adc
aas
pop
xlat
pop
aas
cmp
int3
stos
mov
cwtl
int
das
out
fisubs
iret
stc
pop
divb
ja
mov
arpl
cmpsb
aam
xor
mov
adc
mov
das
xchg
adc
cmp
js
stos
and
push
imul
adc
push
mov
mov
xchg
pop
push
stos
mov
orb
lods
test
mov
xlat
mov
pop
jo
mov
lock
xchg
pop
lea
pop
pushf
clc
add
cmc
andnps
mov
in
ds
ss
lods
sbb
aad
inc
jb
aam
push
mov
jmp
push
and
sub
iret
push
std
jecxz
loop
insb
mov
xchg
xor
orl
jbe
inc
call
xlat
xor
inc
and
xor
pop
inc
mov
or
jo
cmpsb
inc
je
addr16
shll
jbe
loop
xchg
cmpsb
jae
fidivrl
lods
repz
jnp
or
jmp
mov
fstpl
ljmp
cmc
out
adc
jno
jbe
dec
loope
push
popf
icebp
push
in
dec
imul
sub
imul
mov
ljmp
iret
jo
inc
xchg
shrb
fimull
and
insl
imull
pop
aam
rcrb
xchg
mov
jb
adc
out
pop
inc
add
mov
adc
xor
adc
in
adc
bound
cld
imull
stos
jns
je
fdivl
and
sbb
xchg
std
jno
xchg
mov
enter
push
cmp
cmc
xchg
adc
lods
xlat
and
or
adc
aaa
cmc
sub
insb
mov
push
xlat
lea
addr16
out
push
jle
sarb
xor
jno
pusha
sub
clc
jmp
jne
out
add
out
mov
hlt
cli
and
pusha
dec
mov
adc
mov
jmp
inc
addb
sub
sbb
movsb
jbe
mov
pushl
mov
leave
push
push
fmull
sub
fcompl
or
adc
mov
icebp
lock
xor
push
sti
and
mov
push
stc
aad
adc
dec
jb
or
push
ja
loop
jno
adc
xor
add
adc
insb
leave
loop
loopne
adc
frstor
lcall
nop
insb
or
pop
push
xor
xor
ret
fistpll
aad
mov
pop
add
xchg
daa
cmc
mov
jns
pop
in
jp
lret
dec
test
mov
sub
testl
pop
jb
or
movsl
mov
pop
add
ret
add
jl
ja
jmp
and
cmp
call
adc
repz
mov
dec
btr
pusha
aas
sbb
xor
fs
mov
mov
es
fstpt
and
push
push
jl
nop
fstps
cmpsl
fiaddl
out
cmpsl
jmp
aam
out
daa
test
inc
leave
mov
repz
jbe
jae
or
inc
or
mov
sub
in
notl
iret
xor
jns
push
cmp
push
sub
or
enter
mov
iret
jno
cmp
sbb
or
adc
cld
mov
lock
push
push
test
push
negb
push
push
stos
pushf
sbb
push
or
adc
test
pop
in
inc
int
test
scas
out
or
je
xchg
inc
push
pop
stc
and
divl
cmpsb
mov
or
and
jmp
incb
in
sahf
mov
cld
and
int3
mov
bound
add
jb
or
pop
dec
add
inc
add
jmp
xor
lret
xorb
ret
inc
mov
aaa
mov
call
add
icebp
lds
and
jle
test
lret
nop
roll
aam
in
jnp
enter
pusha
arpl
pop
push
cmc
repz
fcoms
dec
or
nop
sar
pop
jno
shrl
ret
and
mov
jae
pop
fsubrs
fidivs
lcall
xor
dec
test
lret
push
push
mov
popf
adc
adc
pop
arpl
jae
rcrb
pop
sub
scas
test
push
neg
push
enter
sbb
cmpb
iret
data16
nop
xchg
add
xlat
xor
pop
xor
ret
inc
sub
sbbb
cmp
add
fabs
xchg
in
mov
cmp
cmpsl
out
pop
imul
cli
fbld
inc
inc
leave
inc
call
int
jno
daa
fists
aam
ret
xor
push
add
add
dec
stos
aas
jg
nop
cmpsb
inc
dec
imul
int
aad
std
add
pop
mov
mov
test
sub
std
nop
jg
fidivrl
aaa
sub
gs
stos
inc
mov
sahf
sarb
scas
mov
repz
xor
mov
subl
add
jae
enter
aad
mov
xchg
sub
fdiv
std
rorb
es
stos
into
lahf
movsb
shlb
pop
arpl
cltd
cld
ja
fs
cmc
mov
in
repnz
lahf
into
adc
jmp
dec
hlt
cli
movsl
cmp
es
push
pop
movl
ds
xlat
dec
outsl
fisttpll
pop
jnp
dec
mov
rorb
aam
std
cmp
jbe
xorb
xchg
jge
in
arpl
adc
pop
pop
jbe
repnz
roll
lret
int3
add
mov
mov
sbb
testl
mov
hlt
les
cmp
add
sub
mov
cltd
xchg
mov
add
push
sub
loop
nop
or
xchg
mov
cmp
mov
cmc
push
fistps
imul
les
cmp
cmp
add
jle
pop
xor
lcall
test
icebp
xor
std
shrb
add
out
cmp
popa
mov
adc
lods
add
lds
add
mov
adc
stc
xchg
dec
outsb
pop
dec
mov
aad
std
sbb
mov
loopne
lods
scas
movsl
mov
pusha
call
fidivs
push
push
fs
clc
dec
pop
fs
insl
cli
dec
icebp
cwtl
add
loopne
loope
pusha
mov
push
cld
sbb
lahf
inc
cmpsb
mov
push
icebp
js
mov
scas
mov
add
pop
pop
mov
sbb
int
jb
outsl
cs
mov
imul
mov
std
push
stos
test
mov
icebp
cmc
pop
mov
xchg
aaa
inc
xchg
enter
daa
cltd
pop
rorb
push
inc
nop
cmp
jbe
push
cmpb
lcall
ss
and
sbb
cs
hlt
add
or
xorb
adc
rcll
xorl
lock
push
cmp
dec
pop
sti
sbb
jle
push
push
ljmp
nop
push
xchg
sbb
and
nop
daa
push
mov
bound
pop
mov
popl
fwait
and
pusha
sbb
or
mov
testl
cmp
das
ds
inc
fstl
cmc
jo
xchg
xchg
insb
or
cmp
lock
sub
xor
jb
lea
js
jge
imul
into
adc
push
popf
out
pop
mov
popa
lds
fldln2
bnd
pushf
int
sahf
xor
adcl
mov
and
addr16
xchg
xor
mov
and
sbb
jge
cs
stos
fcoms
dec
push
add
sbb
push
lock
in
rorb
cmp
adc
sarb
mov
stos
cmp
jle
mov
icebp
dec
cld
add
mov
and
sbb
xchg
fwait
test
jns
hlt
bound
dec
mov
ds
pop
out
shll
decb
ljmp
jbe
out
mov
inc
rcrl
dec
xchg
fstps
xchg
dec
lea
jae
mov
or
cmp
call
jg
mov
jo
pop
add
sub
or
sbb
mov
data16
popf
pop
mov
insl
or
mov
dec
adc
push
mov
ds
xchg
jecxz
test
ret
xchg
test
add
xchg
sbb
cmpl
pop
push
mov
ljmp
dec
aam
pop
pushf
inc
adc
sbb
jmp
xor
add
push
inc
add
pop
stos
cs
cmp
xlat
popf
jae
lds
and
out
adcl
int
sbb
cmp
pop
cmp
sbb
jge
xchg
addb
pop
loop
push
daa
push
mov
inc
jmp
inc
jmp
xor
int3
lea
ljmp
mov
push
testb
xchg
jg
ret
repnz
mov
insb
dec
rcr
sarb
push
shll
lods
addb
adc
jecxz
cltd
lods
addr16
push
sti
xor
cld
pop
mov
into
cmc
lock
or
sub
mov
push
sbb
addr16
call
loope
jp
xor
sbb
jle
test
loopne
add
xor
mov
cs
lahf
adc
pop
or
clc
cmpsl
mov
rclb
leave
in
push
xchg
add
push
xchg
mov
rcrl
pop
sahf
and
jb
cs
aaa
mov
in
sbb
lods
and
cmp
xor
sub
lods
aas
push
jg
pop
mov
mov
fdivl
inc
or
sbb
xor
xchg
xor
dec
pop
dec
or
or
aas
push
imul
jecxz
sub
or
out
int
and
mov
stos
mov
inc
pop
js
stc
cwtl
fsub
pop
fdiv
and
ffree
mov
ss
js
lret
add
dec
in
xor
hlt
jo
xor
mov
jae
mov
in
sbb
xchg
shll
std
push
jbe
sbb
push
mov
mov
into
pop
push
insl
popa
xchg
mov
sub
inc
mov
mov
imul
push
jg
jge
out
ss
and
jns
push
inc
xlat
cli
xlat
sbb
xor
mov
or
pushf
lret
aaa
pop
dec
fimuls
repz
inc
arpl
es
daa
dec
hlt
mov
lret
insl
add
lahf
add
into
popf
cmp
outsl
pop
xor
sbb
sub
aad
call
pop
cmp
jb
sbb
jge
jl
pop
movsl
add
jle
xchg
push
push
into
hlt
aaa
rcl
rcr
cltd
fildll
mov
movsb
out
cmp
mov
popf
jns
sub
test
adc
xchg
dec
pop
lea
sub
sahf
jmp
mov
pop
adc
inc
jl
scas
mov
scas
xchg
shrl
jge
push
cmp
cmp
mov
jp
mov
clc
or
into
pop
cld
pusha
inc
pop
sub
es
inc
mov
repz
mov
pop
fldl
xchg
push
jbe
je
mov
mov
fsubs
scas
fnstcw
fcmovnbe
mov
pushf
adc
popa
mov
xor
neg
pop
jns
fcoml
jb
ds
xchg
cltd
std
lods
daa
cmpsb
mov
dec
bound
xor
in
into
adc
jmp
cmp
adc
push
rep
sub
add
mov
mov
mov
push
pop
into
mov
sbb
icebp
add
add
pop
daa
iret
stos
pusha
mov
push
pushf
mov
and
int3
jbe
inc
push
imul
fimull
loope
les
push
loopne
dec
add
fs
je
sub
and
mov
adc
mov
or
inc
test
xor
fincstp
int
sti
jg
inc
jge
sub
sub
push
das
or
mov
ss
lods
add
jbe
pusha
lcall
iret
push
and
adc
pop
inc
imul
mov
fstps
stc
repnz
ja
imul
stos
push
in
lds
xor
mov
pop
mov
mov
push
popf
jmp
mov
cmp
cmp
addl
sub
rcrl
cmp
lret
mov
or
gs
mov
cmc
addl
cltd
push
mov
mov
mov
cmpsl
push
icebp
mov
ss
jge
sbb
jmp
out
dec
insl
sbb
xchg
cmpsl
dec
int
cmp
mov
cwtl
inc
cmc
test
mov
scas
cmpl
loopne
pop
add
push
out
cli
dec
push
repnz
pop
push
push
jae
fstl
lods
push
lods
call
sahf
es
xchg
xchg
and
pop
cmp
arpl
fidivrs
loop
in
lds
into
sbb
and
push
inc
mov
adc
cld
adc
fmuls
sub
mov
addr16
icebp
lock
sub
testb
sbb
mov
inc
bnd
notb
pop
xchg
cmpsl
in
test
aaa
jmp
cs
mov
insb
lahf
inc
jmp
ds
aaa
push
jb
inc
bound
sahf
sub
cmc
inc
adc
dec
xor
cmp
push
fidivs
adc
dec
add
jae
imul
cmc
js
ljmp
stc
scas
xor
std
decl
jne
mov
xchg
mov
cmp
pop
repnz
mov
stos
push
sti
pop
mulb
icebp
mov
add
movsl
ds
xor
inc
jo
push
pop
shlb
loope
dec
xchg
push
lret
jle
xlat
inc
push
js
cli
outsl
dec
in
scas
jne
mov
repnz
add
adc
imul
sbb
repnz
in
and
jg
mov
adc
inc
pop
or
inc
ffreep
test
xchg
test
sub
jns
cmp
lods
cwtl
mov
cltd
clc
imul
push
icebp
in
xor
mov
ja
dec
std
mov
jg
inc
push
or
jae
popf
dec
xchg
sbbl
movsb
loop
rcr
xor
aam
scas
jo
dec
int3
pop
fst
lret
xchg
inc
insb
clc
sub
mov
push
push
shrl
scas
ljmp
jg
adc
adc
adc
ret
dec
lret
cmpl
or
sub
or
add
dec
cmp
in
sub
fs
addl
cmpsl
lret
stc
cld
fs
in
fcomp
inc
cs
lcall
mov
pop
jns
sbb
mov
nop
and
add
outsl
mov
bound
xchg
test
push
outsl
call
stos
fldt
popa
and
sbb
sub
push
mov
sub
gs
aaa
push
dec
inc
mov
popf
subl
cmpsb
inc
jmp
xor
mov
mov
dec
aas
and
test
sbb
inc
testl
xchg
and
hlt
mov
dec
push
cmp
lahf
lods
adc
pop
in
bound
jmp
rolb
xor
lock
sub
cmp
pop
rcrb
rorl
iret
mov
mov
scas
out
pop
testl
xor
add
mov
xchg
sub
cmp
mov
jl
adc
pop
mov
xlat
xchg
adc
shrd
jl
cli
and
addr16
jl
jl
sahf
cltd
xor
or
cs
and
pop
imul
and
push
mov
pop
sub
dec
mov
insl
insl
or
mov
subb
sti
fidivrs
add
mov
mov
mov
sub
jns
inc
pop
mov
mov
adc
mov
ret
mov
gs
aaa
mov
and
add
mov
pop
arpl
mov
fwait
inc
jbe
cmp
insb
jecxz
imull
inc
pusha
pop
lods
in
pushw
mov
movsl
push
xor
jmp
movsb
in
ljmp
sbb
movsb
lcall
addr16
or
loopne
lds
je
sti
ja
dec
or
jmp
pop
mov
jne
and
mov
ja
sbb
or
inc
push
xor
push
mov
fldl
pop
pushfw
ret
push
lcall
and
adc
jle
cld
pop
ja
mov
push
pop
or
repz
add
lods
sbb
xor
mov
decb
ficompl
add
pusha
data16
mov
adc
test
xchg
std
jmp
sbb
pop
es
or
pop
jb
pop
or
mov
sub
roll
outsl
lahf
fstps
cmp
mov
hlt
ds
leave
lea
adc
cmp
xchg
add
sbb
das
inc
and
mov
and
and
xlat
shrl
mov
adc
jne
and
add
inc
sbb
imul
jne
les
inc
jmp
ret
bt
or
imul
sub
fistpll
push
jle
sahf
in
in
pop
xchg
fs
stos
mov
cmpsl
into
push
mov
xchg
scas
jg
or
cwtl
arpl
js
xchg
xor
mov
scas
mov
sbb
icebp
push
dec
test
jmp
std
mov
mov
scas
add
jno
pop
and
sub
xor
mov
pop
imul
mov
bound
jl
jmp
push
jmp
jns
jp
push
jne
or
gs
adc
insl
cli
xchg
adcb
mov
ror
inc
mov
jge
dec
shll
cli
sub
mov
xchg
aas
out
cli
push
xchg
xor
xchg
sti
cmc
fwait
shlb
clc
out
push
cmp
mov
mov
add
xchg
jns
pop
cmpsl
xor
mov
adc
mov
filds
sub
test
cmp
js
xchg
leave
xor
mov
gs
push
xor
pop
mov
mov
dec
cwtl
sahf
popa
jb
cmc
lret
sub
mov
sar
out
rcrb
sbb
push
in
scas
dec
loopne
pop
mov
cmp
xlat
add
imul
fwait
cld
mov
push
cmpsb
rcll
stc
cmp
pop
ret
sbb
push
call
add
pop
insl
xor
es
mov
pushf
dec
mov
movb
xchg
bound
insl
mov
add
test
xchg
shl
jle
sbb
imul
popl
xchg
scas
dec
push
dec
test
imul
repnz
stos
push
call
sbb
adc
std
cltd
mov
shll
cmp
iret
pop
daa
shll
xchg
test
repnz
test
data16
add
adc
sbb
dec
xor
into
cmp
or
fdivrs
and
pop
es
cmp
sbb
ds
mov
mov
xchg
popf
push
daa
cmp
mov
imul
or
sub
gs
rclb
inc
mov
mov
xchg
pop
xlat
jp
add
xchg
dec
fistpl
data16
xlat
xor
loopne
test
aaa
lock
dec
push
int3
stc
clc
mov
dec
shll
push
and
jge
add
daa
mov
pop
addr16
mov
mov
shr
xchg
notl
ljmp
scas
lret
jg
and
addr16
lock
cmp
push
xor
ss
pop
xchg
cwtl
jle
jno
cltd
neg
xchg
subb
clc
push
mov
jb
cmp
add
leave
mov
fnsave
mov
test
or
scas
add
pusha
int
sbb
stc
sub
lret
int
mov
inc
push
xchg
xchg
mov
push
data16
fdivl
fisttpl
mov
push
mov
inc
pusha
mulb
pop
xchg
insb
repnz
roll
inc
je
jge
lock
push
aas
push
push
lahf
push
and
cld
stc
xchg
mov
or
mov
rcr
or
leave
es
je
push
push
jl
dec
jno
sub
fsts
push
imul
leave
or
sahf
xor
sbb
int3
icebp
lret
enter
dec
adc
ja
shlb
outsb
push
and
int
popf
mov
inc
mov
cmp
loop
arpl
adc
iret
cmp
out
repnz
cli
das
mov
cli
jb
pusha
mov
fists
fdiv
or
xchg
mov
cltd
into
sbb
lods
pop
add
js
out
xor
and
out
push
dec
jo
lods
popa
roll
mov
adc
sbb
jno
clc
out
add
jl
or
adcl
jns
rcrb
neg
mov
int
cmc
shlb
mov
mov
add
outsb
sub
ficomps
fstpt
pop
test
faddl
in
jo
add
xchg
xlat
mov
mov
push
in
arpl
push
mov
cmpsb
test
push
je
and
mov
rorb
dec
fimull
sbb
xchg
push
xchg
jecxz
xor
or
jle
in
and
lods
xchg
fsubrl
pop
dec
fucomp
mov
push
lret
mov
jbe
imulb
call
stos
mov
idivb
mov
xchg
mov
adc
xor
rolb
int3
iret
mov
mov
inc
imul
test
pop
mov
insb
xorl
sbb
es
dec
repz
hlt
xchg
mov
jne
and
negb
mov
inc
mov
popf
mov
shlb
andl
mov
mov
mov
sub
mov
mov
shlb
cld
push
xchg
faddl
sub
lahf
or
fcompl
sbb
inc
stc
cmpl
loope
ret
scas
int3
scas
xor
sbb
add
aaa
rorl
mov
cmp
leave
xor
icebp
aam
or
mov
div
negb
jns
in
inc
gs
mov
loop
mov
bound
fbstp
cwtl
mov
out
jne
adc
das
jle
pop
push
das
pushf
adc
add
mov
into
mov
shlb
loope
xchg
fstps
jo
gs
mov
lods
vunpckhps
add
mov
or
lahf
out
lods
cmpsb
aaa
xchg
mov
test
xchg
movl
or
adc
faddl
or
adc
fs
test
rorl
cmp
push
arpl
int3
rcr
inc
sub
cmp
fisttps
add
cmp
hlt
pop
insb
pop
sbb
mov
ffree
cmp
lock
mov
mov
or
mov
mov
call
test
mov
int
fidivs
mov
push
aad
xor
xchg
loop
push
imulb
imul
jp
out
shll
jg
mov
roll
and
test
std
test
insb
lock
fisttps
xchg
aaa
jmp
xorl
mov
sbb
and
inc
aad
sbb
xchg
push
and
sarl
jnp
xchg
mov
sbb
cmp
in
mov
inc
lods
push
addl
ror
mov
xchg
cmp
sub
into
adc
outsl
or
iret
fwait
xor
in
jae
add
push
jo
add
fbstp
cmc
and
movsl
pop
adc
add
cmc
ds
mov
cwtl
and
outsl
frstor
dec
sub
lock
xor
sahf
subb
outsb
aas
xchg
mov
je
fs
pushf
pop
sbb
push
mov
ficoml
pop
pusha
sbb
clc
out
mov
psrlw
outsl
mov
sti
outsb
into
or
mov
inc
jns
stos
ret
pop
dec
inc
int3
push
mov
xor
mov
sub
mov
aam
xor
fsubl
sub
mov
jle
xchg
cmpsl
testl
and
push
jo
xchg
sbb
imul
movsl
xchg
fmull
and
xchg
movsb
fsubs
loopne
cmpsl
mov
inc
sarb
jno
jb
rcr
insl
jno
jns
popa
mov
sbb
pushf
imul
nop
js
cmp
mov
lcall
test
sub
mov
cmp
fistl
aam
mov
ret
fildll
mov
mov
jg
subl
cvtdq2ps
lahf
into
scas
sbb
add
loope
cmp
aas
push
arpl
mov
nop
leave
sbb
add
out
push
inc
out
lret
sub
aaa
jno
xor
cmp
sub
scas
adc
or
cmpsb
xchg
lods
ds
xchg
lcall
xchg
jmp
test
xchg
jnp
push
add
rol
mov
push
imul
test
stc
mov
adc
mov
xchg
fidivs
jecxz
xor
mov
push
enter
push
adc
mov
test
and
xchg
add
gs
test
pop
out
jg
imul
dec
dec
jno
fwait
mov
jmp
push
fwait
inc
test
mov
cmpsl
iret
lods
mov
std
jl
or
xchg
and
cmp
xlat
das
iret
xor
xor
push
xchg
stos
movsl
add
mov
xchg
lcall
mov
xchg
xchg
lock
inc
jns
das
add
mov
push
ud0
enter
push
out
loopne
in
sbb
test
ficompl
adc
and
in
cmpsl
sub
mov
mov
sub
cmp
jle
and
pop
mov
addr16
fimuls
ja
sub
in
hlt
jmp
sbbb
jg
ret
int3
inc
mov
adc
ss
jo
fdivr
lret
int
adc
mov
cwtl
mov
and
mov
pop
xchg
rep
dec
stos
xchg
mov
sub
cmp
aad
loopne
fs
into
fdivrl
test
cmp
loope
imul
inc
loop
es
je
adc
sub
cld
js
int3
xor
cld
clc
cmc
push
insb
push
rorl
rclb
pushf
js
jb
dec
test
push
mov
and
xor
xlat
push
stos
xchg
jo
lahf
cmp
dec
dec
in
mov
shlb
mov
xchg
push
or
push
dec
adc
or
sub
aam
and
jnp
sub
stc
mov
test
ret
mov
pop
shrb
adc
xor
outsl
or
sbb
pop
icebp
mov
mov
shlb
stos
sbb
cwtl
mov
lock
cmp
mov
ds
cmp
or
adc
movsl
cltd
jg
xlat
je
call
js
mov
adc
xchg
daa
aad
jb
addr16
popa
xlat
loope
enter
pop
dec
in
fsub
aam
mov
mov
call
sbb
aad
cld
cmpsb
jbe
mov
and
mov
ljmp
and
idivl
jl
xor
jno
add
jb
out
xor
out
dec
inc
inc
pusha
cmpsb
cmc
push
mov
aaa
mov
mov
jno
test
fwait
pop
mov
fucom
and
stos
addr16
rolb
xchg
fmull
clc
ret
pop
lods
inc
pop
lahf
lods
jmp
sub
or
cmp
or
arpl
les
ret
int
xor
shlb
dec
icebp
lret
push
into
push
aad
loopne
pop
sbb
mov
add
xor
imul
pusha
pop
lock
xor
sbb
lods
mov
add
mov
xchg
or
adc
stos
faddl
pop
adc
pop
cwtl
adc
mov
push
dec
idivl
push
mov
or
aam
mov
pop
push
xor
mov
push
mov
lds
jbe
in
bnd
inc
cli
enter
adc
pop
pop
cld
add
adc
leave
lret
stc
mov
lahf
push
push
pop
rcll
fisubrl
fs
xor
push
mov
fadd
or
mov
movsb
stc
pop
scas
adc
fcom
ret
jo
fldenv
hlt
add
nop
adc
push
push
lret
mov
adc
in
aaa
push
sub
cmp
ljmp
add
xchg
push
pop
fmul
cmp
jb
jo
inc
jnp
adc
es
or
loop
ficompl
adc
ss
pusha
push
icebp
pop
mov
mov
jecxz
mov
mov
mov
mov
push
dec
icebp
or
pop
popf
jnp
jae
mov
andl
jmp
cmp
in
cs
pusha
mov
and
popf
sarb
sbb
mov
fmuls
sub
cmp
push
sub
push
and
push
subb
sub
push
fnstcw
xchg
sub
push
mov
aaa
addr16
cwtl
jo
or
mov
add
jne
adc
cld
inc
lock
fcmove
jbe
mov
pop
rorb
mov
out
sbb
mov
in
mov
cltd
push
call
sbb
aad
movsb
jnp
stos
ljmp
or
scas
dec
fists
xchg
cmovp
push
xchg
inc
iret
shll
jne
xor
sahf
lahf
pop
pop
jle
jmp
push
sbb
mov
cmpsl
ds
dec
add
sbb
into
sub
ljmp
ds
mov
mov
movsb
insb
push
xor
mov
cmp
cmc
lret
into
mull
mov
pop
rcrb
or
jae
dec
add
jbe
jb
adc
add
stos
xor
lea
lret
push
rcrb
add
call
in
lahf
add
push
xchg
into
jecxz
es
leave
push
or
push
mov
and
xor
fnstcw
add
cmp
push
adc
in
cmp
imul
in
sbb
pop
pushf
addr16
mov
mov
pop
outsb
sti
repz
neg
leave
stos
jmp
je
mov
xor
xor
arpl
mov
xchg
pop
in
in
arpl
repnz
daa
inc
adc
add
les
mov
aam
push
xor
or
subl
ds
mov
adc
push
xchg
outsb
lds
enter
sub
dec
and
sbb
decb
sbb
inc
push
jle
sbb
lds
mov
in
mov
xchg
dec
aaa
data16
test
icebp
adc
imul
push
scas
sbbl
pop
mov
aad
xchg
and
lock
mov
test
aam
out
mov
jne
xchg
mov
mov
or
push
adc
inc
ds
adc
iret
fcomip
test
fdivl
xchg
push
scas
repz
stos
pop
sbbl
call
mov
aaa
orb
pushf
xor
dec
cmp
repnz
stos
iret
ljmp
vpcmov
mov
push
lock
ds
xor
out
xchg
loopne
sbb
mov
mov
sub
popf
cmp
fs
pop
dec
xchg
mov
das
pop
add
into
movsl
sbb
jl
daa
enter
add
sti
cmp
mov
ror
or
or
mov
movsl
inc
scas
cmpsb
ljmp
sbb
ret
in
jecxz
stc
out
mov
shlb
sbb
nop
stos
mov
rcr
add
pop
shl
das
aaa
jle
inc
fcmovne
push
addr16
sub
xchg
test
fdivrs
movzbl
xchg
dec
cmp
lods
pop
push
jae
sub
and
icebp
or
fs
mov
mov
pop
popf
sub
pop
inc
ljmp
pusha
push
jne
int3
sbb
imul
jmp
push
inc
fidivrs
mov
or
cmpsb
je
mov
xchg
push
inc
xor
scas
loop
push
aas
scas
mov
xor
and
ret
in
cmp
inc
mov
add
fwait
push
dec
inc
jb
clc
cmpsb
cmpsl
pop
xor
mov
add
leave
push
imul
mov
pand
pop
jae
iret
or
lret
pop
mov
jle
mov
stos
mov
and
or
out
or
mov
popa
mov
mov
es
adc
push
shlb
iret
and
cltd
out
mov
add
mov
adc
mov
pop
mov
mov
jae
jb
pushf
orb
mov
std
dec
and
pop
add
loop
adc
cli
push
jbe
cmp
mov
lods
in
mov
stos
mov
adc
fdivrs
push
stos
test
and
and
int3
mov
xor
and
adc
pop
jne
jns
imul
pop
push
jnp
adc
sbb
iret
enter
cmc
cmp
push
sub
dec
into
inc
jnp
loop
ds
adc
test
dec
cld
add
into
popa
xchg
cmc
loopne
push
jnp
xchg
scas
std
leave
dec
lcall
mov
out
imul
and
or
rcll
push
dec
pop
daa
rorl
or
sbb
in
mov
cmp
sbb
fiadds
out
es
mov
cmp
add
or
push
popa
dec
outsb
or
sbb
fsub
sahf
int
inc
pop
sbb
ficompl
mov
dec
lods
pop
adc
aaa
aaa
leave
lock
ret
call
xchg
pusha
loop
add
stos
lds
jecxz
xchg
pop
arpl
jmp
adc
rcl
cmpsb
les
add
jae
ja
inc
inc
test
cmpsl
jne
imul
dec
fsubl
adc
fs
movsb
and
xor
mov
aaa
imul
or
xchg
ja
pushf
sbb
ja
jne
inc
xor
mov
mov
push
test
ds
pop
movsb
int
fcmovb
js
pop
filds
scas
mov
std
xchg
mov
cmpsl
lcall
mov
inc
inc
daa
leave
sub
dec
fdiv
adc
fcoms
sbb
mov
pop
pop
aam
sbb
dec
xor
shll
adc
stc
rorl
rcll
sub
in
stos
movsl
repz
cmp
es
push
int
stos
es
xor
fnstsw
push
jmp
nop
jge
mov
sar
rcll
mov
daa
sub
pop
sbb
cmp
mov
jnp
jl
mov
inc
and
push
dec
repnz
dec
xor
fwait
mov
xor
fmul
xor
pop
sbb
mov
and
cld
push
pusha
in
iret
sarl
test
fwait
in
aam
imul
or
and
dec
jg
dec
mov
in
xchg
call
cltd
mov
dec
hlt
test
mov
xchg
pop
popf
mov
adc
and
sahf
imul
add
push
fdivrl
popf
decl
es
xchg
push
test
sub
shrl
test
pushf
daa
popa
xor
xchg
fiaddl
pop
mul
or
add
cmp
orb
mov
fnsave
mov
out
pop
inc
push
nop
xchg
fcmovb
cmp
or
dec
inc
lods
bound
sbb
insb
lret
mov
jno
jo
inc
or
cwtl
addps
xchg
je
outsl
jmp
push
clc
in
shlb
popa
sub
aam
add
cmp
les
push
pushf
jo
int
lretw
cwtl
jg
push
jl
adc
cmp
push
mov
out
xor
mov
cmp
aaa
outsl
mov
popf
xchg
lahf
loop
fistpl
push
cmp
repz
jbe
sub
jecxz
inc
sbb
add
jnp
mov
xchg
shrl
fwait
clts
es
gs
ljmp
mov
fsubrs
les
out
add
das
lods
adc
loopne
inc
nop
cmp
sbb
jnp
ret
popf
addl
inc
cmp
test
adc
inc
mov
orb
jge
mov
xchg
or
addr16
xchg
inc
push
mov
jge
xor
js
mov
cmp
rcrb
pop
xor
fistpl
mov
ret
jecxz
push
xchg
cmp
mov
int3
add
sbb
ret
pop
dec
jno
insl
popa
sub
in
mov
in
dec
es
adc
out
cmp
add
lcall
sub
mov
xlat
jae
pop
out
stos
jo
mov
loope
das
cmp
mov
and
scas
push
mov
leave
sbb
enter
psrad
jbe
std
xlat
ret
sub
mov
inc
gs
inc
insl
subb
imul
loop
mov
lock
popa
ljmp
test
subl
pop
pop
mov
loope
out
jg
movsl
mov
push
inc
or
pop
pop
cltd
mov
adc
lock
icebp
xor
cwtl
clc
inc
scas
scas
pop
xchg
leave
aas
mov
mov
ss
dec
push
and
jns
out
aaa
lahf
repz
loope
sub
jecxz
movsl
jo
push
in
xorb
insb
add
inc
es
pop
addb
mov
sbb
push
mov
sbb
sbb
jne
and
movsl
mov
jne
add
pop
movsb
push
push
lds
jmp
out
loopne
popa
xor
notl
leave
sub
mov
mov
sbb
fwait
adc
nop
dec
push
push
arpl
arpl
cld
xchg
mov
jp
sbb
cmp
sti
mov
orb
inc
fisubs
sub
imul
sahf
cvtdq2ps
jge
lea
push
xchg
mov
iret
sahf
sbb
mov
loopne
clc
jle
leave
jecxz
jle
jmp
jb
dec
adc
or
and
pop
in
mov
cs
das
sbb
or
pushf
sbb
adc
int
sbb
lcall
mulb
popf
popf
out
icebp
inc
fildll
sbb
sub
movsb
mov
xor
arpl
cmp
out
mov
orl
push
fdivs
adc
sbb
call
loop
mov
dec
stc
divl
push
ret
addb
mov
stos
and
loop
sbb
pop
jb
fdiv
sbb
cld
or
fistpll
pop
jno
inc
movsl
xor
les
push
into
jbe
mov
xor
shrb
push
sbb
xor
cmp
outsb
sub
iret
jnp
js
and
mov
mov
add
out
fs
icebp
in
andl
xchg
nop
lods
std
xchg
pop
pop
stos
lods
xlat
adcb
cmpsl
jmp
dec
inc
jg
into
es
and
and
pop
mov
mov
push
ljmp
imul
mov
push
ljmp
adc
xchg
jecxz
sub
lods
mov
xchg
movsl
sub
filds
loop
pop
xchg
lret
imul
cmc
aaa
mov
cli
inc
sti
fcompl
push
in
popa
sbb
fnstsw
je
ret
or
pushf
mov
jnp
and
leave
fcompp
sbbb
ss
rorb
stos
mov
mov
mov
fimuls
iret
int3
leave
mov
scas
cld
jecxz
dec
lret
leave
std
and
sti
jle
mov
mov
fwait
cmp
mov
fldenv
dec
mov
pushf
insl
ret
ds
lret
add
roll
xor
enter
popa
cmp
jmp
lock
sti
iret
mov
push
popf
or
cmpsl
inc
in
add
mov
rorb
rorl
push
cmpsl
fucom
or
das
bnd
cmp
mov
and
xchg
subb
adc
push
shlb
mov
in
sbb
inc
and
jg
cwtl
ja
jecxz
jbe
add
jge
mov
fdivl
mov
adc
sub
lret
jge
loop
test
fsub
push
popa
pop
adc
mov
cmp
jl
mov
push
out
xor
mov
pop
lahf
pop
sbb
fcoml
push
adc
adc
das
ss
push
mov
lret
sbb
test
mov
lock
xchg
sub
inc
jmp
pop
mov
inc
inc
or
xchg
push
push
add
inc
or
cmp
inc
inc
das
cs
in
rcr
mov
xor
sbb
dec
xor
add
or
loope
into
add
add
les
lret
mov
in
mov
pop
imul
push
sub
std
aaa
lds
jl
lret
lds
mov
cmp
sahf
in
cmpsb
cmp
shrl
or
fcmovb
inc
push
mov
push
jne
cld
push
pop
push
out
loopne
les
movsl
push
pop
enter
aad
push
pop
dec
dec
cmp
loop
sahf
push
xchg
sarb
cmpsl
sub
or
testb
inc
lds
cmp
xchg
je
mov
mov
lahf
popf
inc
xor
push
push
cmpl
push
inc
jbe
aas
repz
ja
bound
lea
mov
sub
insb
jle
arpl
adc
xor
movb
pop
mov
sbb
mov
adcl
rcrb
pop
and
sbb
xchg
inc
xchg
jb
aad
mov
push
movsl
int3
sub
add
cmp
jle
pushf
shll
outsb
in
out
inc
imul
push
jae
out
in
fmulp
aam
adc
popa
lea
pop
jno
jo
insb
jo
outsl
inc
movsb
cmp
popf
ret
repz
popa
jne
in
cs
stos
mov
jno
mov
loope
cmp
mov
cmpsl
push
mov
je
pop
int3
mov
in
js
xlat
jge
lret
fmull
loope
add
mov
jle
lds
push
jle
mov
xchg
sub
aam
push
adc
jl
je
jg
dec
iret
out
mov
mov
inc
or
cli
lock
xchg
push
pop
filds
mov
stos
push
fistps
loop
enter
inc
jnp
mov
in
push
xor
mov
adc
mov
hlt
loop
dec
xorl
mov
outsl
div
cli
fdecstp
pop
push
aam
pop
inc
imul
mov
and
punpckhwd
lahf
add
jbe
jmp
out
jbe
pushf
and
jp
add
push
scas
stc
aaa
lahf
mov
sarl
mov
sub
in
or
and
lret
mov
jg
adc
sti
inc
out
pusha
fimuls
jg
loope
add
dec
sub
mov
mov
xchg
dec
enter
mov
rolb
push
xchg
aad
pop
adc
cs
jecxz
pop
mov
mov
push
pop
loope
stc
xor
aaa
mov
and
adc
ret
mov
add
mov
adc
and
and
lods
fmuls
fs
adc
int
and
popl
add
call
sub
dec
sbbb
jmp
lret
and
outsl
call
lock
outsl
dec
test
cltd
aam
inc
out
push
sarl
arpl
fmulp
iret
mov
add
daa
dec
and
or
fucomip
rcll
mov
push
inc
xchg
cmp
and
or
dec
cmp
pop
sbb
ret
jns
subb
outsl
and
xor
add
mov
test
xchg
les
mov
subb
adc
testb
enter
out
jnp
loope
js
xorb
insb
daa
pop
pushf
test
push
pop
mov
cs
test
adc
push
xchg
cmp
xor
clc
insl
or
mov
push
lcall
cs
addr16
or
es
and
push
jmp
rorb
je
mov
xchg
sbb
lret
sub
bound
and
insb
in
lret
hlt
sbbb
cs
movhps
sbbb
inc
jnp
jecxz
cli
cmpsb
idivb
xchg
cmc
mov
lret
loopne
inc
rorl
mov
mov
movsb
mov
out
xor
inc
imul
and
mov
add
mov
and
test
mov
fimuls
nop
sbb
mov
insl
dec
movsb
mov
and
inc
cmp
sbb
jle
mov
push
add
dec
rcr
add
mov
int3
int
xchg
push
dec
xchg
dec
lret
aaa
jl
shll
sbb
sbb
imul
mov
dec
add
mov
addr16
fcomps
fs
loope
and
or
adc
sti
cmp
inc
jge
stc
scas
cmc
xchg
jg
rclb
jnp
mov
mov
popa
std
add
in
lods
nop
mov
les
mov
xchg
push
fstps
neg
xchg
xor
pop
pop
loopne
mov
fs
call
cmpsb
add
mov
or
out
pop
stos
or
stc
mov
sarb
outsl
adcb
mov
pop
or
lahf
stc
add
pop
push
sbb
in
outsl
cmp
jge
scas
int3
jae
pop
lret
and
mov
les
cli
mov
dec
sbb
push
sahf
cmpsb
dec
lods
out
mov
out
pop
data16
push
push
xchg
cli
dec
cltd
pop
int
push
andl
add
push
rcrb
fcmovnu
insl
cmp
or
rcrb
repz
outsb
popa
push
scas
dec
mov
sub
and
jle
out
xor
fs
cmp
int
mov
fwait
scas
test
jmp
and
adc
fxch
mov
icebp
daa
clc
mov
xor
push
lea
lods
dec
add
imul
mov
inc
in
xchg
xchg
mov
cwtl
sub
cmpsb
in
mov
outsb
gs
pop
iret
insl
cmpsl
pop
xchg
and
and
jo
mov
sub
xchg
or
scas
pop
sub
push
fstl
hlt
sti
push
dec
push
sub
es
inc
hlt
nop
and
addr16
test
out
aaa
sahf
jp
cs
dec
rolb
daa
jle
sti
sub
lods
inc
pop
pusha
and
xchg
aad
inc
das
jno
into
jmp
popf
push
loop
or
xor
stos
or
sub
test
mov
mov
pop
and
pop
loop
pop
pop
adc
dec
add
push
add
aaa
out
int3
iret
sarl
or
test
pop
std
pop
dec
loopne
xorl
sbb
scas
inc
shl
insb
jg
je
mov
lds
mov
inc
lret
mov
xlat
lods
jg
lods
xchg
jge
pop
gs
enter
lcall
mov
std
repz
xchg
mov
mov
mov
imul
lcall
adc
scas
or
xor
imul
jmp
fldt
popa
scas
pop
xor
insl
jnp
int
mov
mov
mov
adc
add
mov
adc
outsl
divl
lret
or
dec
inc
pop
jae
lret
mov
ja
lahf
pop
int
add
nop
rcll
je
xchg
dec
and
int
test
and
out
mov
popa
lcall
jno
push
xchg
je
pop
mov
push
test
add
repz
mov
mov
mov
inc
cli
in
bound
lahf
pop
or
push
dec
jecxz
js
xor
into
in
and
or
das
inc
sub
jno
mov
in
mov
add
adc
jne
lds
stos
xor
inc
imul
sti
adc
mov
fdivl
sub
rolb
sbb
push
cmp
fcompl
add
pop
fcoms
dec
pusha
mov
test
cmc
inc
repz
jbe
xor
sbb
mov
loop
mov
into
pop
dec
arpl
pop
xorl
out
push
testb
mov
repz
das
and
and
and
das
sub
sub
imulb
mov
aad
test
sub
addr16
test
push
cmp
add
xchg
fnsave
xchg
loope
mov
cmc
dec
sub
cmp
cmp
stos
dec
push
mov
bts
mov
jne
fisttpll
loope
mov
popf
inc
add
adc
add
jmp
decl
push
stos
ret
sub
or
cs
ja
shlb
pop
push
aas
mov
lods
movsb
je
lahf
notb
fidivrs
test
movsl
add
je
in
rcrb
rol
ds
mov
call
mov
lea
jns
je
ss
cmc
ds
pop
sbb
into
fstl
inc
sbb
push
and
pusha
fildl
push
mov
scas
jbe
jbe
pop
test
sarb
int
mov
out
mov
popf
mov
mov
pop
inc
mov
arpl
push
fdiv
cmpsb
and
sub
pop
push
addl
and
pop
insl
or
adc
cs
sub
pop
jp
loopne
cmpsb
int
xor
sub
adcb
xor
ret
pop
int
loopne
push
mov
mov
push
jo
cli
std
mov
sub
add
cld
test
test
mov
mov
rorb
mov
pop
loop
inc
inc
jl
mov
loop
shl
outsb
fwait
xchg
mov
ja
aas
decb
mov
rorb
aas
out
xor
sub
aas
mov
lods
adc
add
ret
loope
addl
insb
lods
pand
mov
in
inc
repz
dec
call
shr
cmc
sahf
out
adc
xor
ficomps
dec
sub
test
xor
lds
sub
outsb
cmp
xlat
cmp
shrb
cltd
adc
inc
fildll
mov
xchg
pop
xlat
xchg
or
mov
push
jp
mov
lret
add
addl
mov
mov
cmp
packsswb
call
ja
dec
push
mov
lea
ret
lret
mov
ficomps
je
cltd
loopne
cmpsb
addr16
cmp
adc
add
cmp
jmp
push
ret
and
adc
movsb
mov
loop
fisubl
je
cltd
loopne
movsb
add
and
lods
sub
aas
fists
testb
or
cmp
icebp
push
sbb
xchg
sub
ljmp
adc
mov
pusha
pushf
sbb
jmp
ja
mov
pop
or
xchg
jp
std
mov
js
cmp
shll
inc
ret
pop
cltd
ret
ret
stos
fdivrl
push
fldl
repnz
jmp
shrl
aam
jecxz
roll
xchg
mov
jg
cld
imul
call
addr16
adc
xor
mov
adc
jmp
mov
dec
jp
and
fs
cmovp
stos
and
lods
jb
or
mov
cmp
dec
movsb
sbb
inc
sbb
dec
push
sub
jb
push
jmp
pop
inc
pop
add
push
xor
sbb
pop
bound
not
xchg
dec
js
mov
test
fs
ljmp
icebp
jecxz
cld
xchg
popl
aas
popf
sti
lahf
and
cmp
add
mov
xchg
fwait
cmpsl
lods
pop
xchg
mov
rcrb
imul
pop
jns
xor
leave
and
and
aam
stos
cmp
loopne
inc
adc
cmp
pop
shrl
mov
in
dec
lea
lahf
jmp
mov
xchg
sbb
cltd
mov
fidivrl
aas
in
or
mov
jecxz
daa
test
or
cmp
mov
mov
cs
and
outsl
add
xchg
cmpsl
xor
ja
scas
or
cmpsb
jmp
adc
mov
mov
push
loope
repnz
mov
cmp
cs
pop
mov
out
lcall
and
xchg
and
out
cmp
pusha
adc
cs
push
cmc
adc
jo
dec
scas
inc
subb
sbb
test
sbb
cmp
mov
fwait
inc
mov
pushf
std
adc
insb
mov
stos
test
mov
cs
cmc
xorl
int3
mov
xchg
sarl
mov
std
in
repnz
cmp
or
add
or
in
out
je
mov
jmp
shll
mov
add
pop
sub
push
scas
inc
push
in
sbb
imul
test
in
lret
push
frstor
add
enter
mov
inc
adc
test
and
add
lret
inc
cmp
ret
mov
ret
mov
pop
aam
adc
jg
je
sub
add
adc
push
mov
dec
sub
and
lahf
xchg
subb
sahf
sub
test
int3
cmp
rcll
cmp
dec
test
jge
js
mov
insl
and
sbb
push
or
mov
or
fs
mov
inc
dec
repz
icebp
push
fs
sub
rorl
lret
arpl
and
sahf
dec
cmp
insb
or
mov
pusha
adc
es
and
mov
aad
ret
push
push
jp
lcall
faddp
xchg
shll
push
mov
xchg
sahf
pushf
mov
lahf
mov
enter
ljmp
sahf
shlb
es
pop
mov
rorl
out
push
add
or
test
adc
pop
jbe
or
mov
subl
cs
out
xor
fbld
jnp
in
pop
mov
push
pop
xchg
mov
mov
out
cltd
mov
xor
or
inc
inc
shlb
xchg
scas
leave
push
sar
or
or
das
mov
out
push
repnz
add
loop
jb
jle
push
pop
xor
daa
cmp
xor
mov
xor
mov
dec
push
lcall
addr16
imul
and
shr
adc
int
int3
add
sbb
adc
sbb
xchg
mov
mov
rcrl
call
test
cmp
dec
ret
inc
jno
push
and
nop
test
fnstcw
clc
or
pop
inc
dec
xchg
sbb
and
inc
arpl
dec
addl
movsb
pushf
insl
jge
in
xchg
sub
jnp
pop
jl,pt
aaa
int
mov
jbe
cli
add
sahf
mov
xorl
sbb
push
adc
jmp
mov
dec
pop
in
outsl
xor
nop
pop
jg
ljmp
add
rcll
mov
xchg
cmpl
mov
pop
fcos
mov
mov
adcl
mov
cmpsl
push
or
leave
mov
fcmovnb
mov
cli
xchg
in
push
jl
loopne
mov
pop
scas
sub
lcall
into
mov
dec
sub
pop
sub
arpl
xchg
mov
stos
inc
enter
std
movsl
add
inc
push
aam
jae
push
out
jecxz
jnp
and
xlat
xor
jbe
cmp
imul
adc
fldenv
rolb
sub
sbb
pop
insb
xchg
lds
or
cmp
subl
and
mov
sbb
aam
fmull
test
lods
popf
add
mov
sub
mov
add
cmp
shrb
push
les
xchg
sbb
lcall
pop
push
cld
inc
pop
mov
stc
pop
stos
push
cwtl
jg
push
adc
mov
shll
push
adc
cli
fsubs
mov
jecxz
pop
push
sti
divl
adc
ljmp
xchg
pushl
addr16
xorb
or
lahf
jnp
shlb
jns
leave
outsl
clc
cs
mov
mov
loope
addl
or
insb
add
lds
push
push
sbb
gs
mov
cs
push
jne
xbegin
adc
sbb
dec
sbb
push
sub
xor
push
ss
nop
or
insb
pusha
out
jbe
pushf
lcall
int3
adc
xlat
inc
dec
out
es
fmul
push
add
data16
gs
jbe
or
cmp
jae
icebp
add
mov
ror
out
or
dec
push
call
cmp
and
test
bound
sahf
push
dec
xchg
cmc
jbe
mov
lahf
mov
adc
push
and
lahf
sbb
mov
adc
pop
pop
dec
mov
sbb
add
push
push
imul
or
test
mov
clc
push
sub
bound
mov
aas
leave
pop
aas
push
inc
out
jne
popa
out
lret
cwtl
cmp
pop
adc
add
mov
je
movsl
jne
icebp
lods
dec
dec
jmp
test
scas
jns
pop
das
push
mov
test
mov
sbb
lds
cld
inc
es
xchg
xorl
mov
out
sub
and
xchg
or
push
cwtl
dec
int3
movsl
or
jbe
fstpt
cmp
adc
test
xor
or
mov
add
and
inc
dec
outsl
mov
roll
mov
clc
add
faddl
aad
sub
pop
or
xor
stc
fstl
or
and
enter
inc
cwtl
mov
jns
imul
jle
cld
insb
sbb
push
push
mov
inc
jp
xor
fsubs
imul
fwait
iret
sbb
shrl
cs
sbb
addr16
push
enter
popf
into
push
xor
mov
popf
jns
jb
jo
and
xlat
fistpl
std
iret
insl
ret
dec
sub
push
pop
mov
xchg
jb
push
dec
std
fs
push
xchg
loope
mov
loope
int
cmp
loopne
mov
push
fdivrs
add
rcrl
mov
dec
negl
sbb
sti
lcall
inc
adc
push
jnp
rolb
pop
in
xchg
fwait
mov
hlt
push
xor
stos
stos
adc
scas
repnz
int
cld
jnp
adc
xor
mov
ljmp
add
inc
jl
into
add
mov
adc
pop
adc
mov
mov
adc
sti
movsl
lods
mov
push
inc
adc
nop
xor
add
shl
aas
fcoml
fistl
cmp
clc
jnp
jbe
pop
mov
mov
shl
mov
out
loope
addr16
out
fisubl
adc
mov
lods
dec
push
das
xchg
or
add
cmp
dec
xchg
int3
fcompp
jge
push
gs
xor
pusha
in
nop
add
popl
cmp
inc
cltd
jp
lods
mov
icebp
lcall
in
dec
js
imul
into
pop
call
pop
lock
cmp
jmp
jge
jge
rol
jg
aad
add
movsb
shrb
enter
insl
cmp
aas
sbb
je
movsb
fadds
adc
jo
data16
mov
jmp
cld
jnp
xchg
pop
cmp
adc
fcmovne
scas
loopne
jb
out
xor
inc
out
rolb
jns
push
and
leave
jle
sub
hlt
test
cmp
outsb
jecxz
cmpsl
push
and
xchg
sub
mov
lret
fcmovnb
xchg
sub
in
xor
aad
aad
in
mov
push
xchg
xchg
sub
call
push
mov
popa
test
inc
mov
stc
jbe
pop
in
fimull
inc
mov
ficomps
jle
mov
in
mov
dec
sub
push
pop
outsb
xchg
pushf
jg
je
movsb
add
repnz
mov
xor
test
and
movsb
push
xchg
push
out
xchg
addr16
mov
ficomps
fidivrs
lock
jo
cwtl
ret
mov
sbb
sbb
mov
and
lret
and
fcompl
lahf
out
or
cs
jle
mov
out
iret
mov
mov
cmp
xchg
xor
mov
es
and
dec
cltd
mov
mov
pop
pop
stc
les
adc
mov
xchg
xchg
cmp
andb
push
add
insl
sahf
xor
dec
rorl
jo
sahf
sbb
dec
cwtl
sbb
cmp
hlt
mov
xchg
adc
out
inc
mov
mov
jne
cmc
sub
pop
mov
test
int3
dec
sarl
adc
das
mov
aam
cwtl
xchg
hlt
loopne
out
test
call
jb
repnz
out
je
scas
xlat
mov
pop
jae
hlt
and
ret
mov
cmp
mov
inc
pop
pop
adc
add
lods
scas
jecxz
pop
testb
jb
js
into
jns
dec
dec
lds
outsb
push
xchg
fisttpll
mov
cmpl
dec
outsb
adc
push
sub
mov
into
repz
mov
cwtl
xchg
fiaddl
pop
shrb
xor
arpl
fdivrp
mov
insl
fld
xchg
sub
notb
mov
or
jo
jl
enter
cmp
mov
les
enter
mov
cmc
nop
cmp
lea
sbb
sarb
mov
es
inc
loope
out
push
fisttpll
clc
mov
mov
lods
pop
inc
imul
stc
inc
add
jnp
jae
mov
xchg
jbe
inc
pop
icebp
addl
push
dec
pop
cmpsl
pop
dec
test
in
and
jecxz
adc
adc
push
adc
ss
mov
push
push
lods
pop
jno
add
pop
pusha
jmp
jl
roll
add
mov
js
sub
push
arpl
cmp
fwait
cs
outsb
lods
fadds
in
ret
lds
stos
push
xor
fs
push
outsb
push
jge
push
jnp
pusha
mov
xchg
fimuls
icebp
into
loope
jae
lea
adc
sub
or
repnz
daa
push
xchg
cmp
mov
xor
mov
sbb
fldt
mov
sbb
movnti
push
mov
or
out
sbb
outsl
dec
sbb
je
mov
mov
imul
in
jg
cmp
xchg
or
lret
cwtl
pop
jo
call
inc
push
sub
lock
das
mov
dec
xchg
cmp
inc
js
daa
sti
mull
loop
lds
sub
or
sub
out
mov
fadds
cmpsl
xchg
dec
mov
mov
and
mov
or
call
dec
push
xor
ret
sbb
mov
test
shll
lret
adc
shr
or
sbb
mov
mov
sbb
call
scas
popf
sbb
sub
iret
push
loop
cmp
cmpb
push
enter
cmc
push
clc
into
sub
into
push
sub
mov
pop
inc
mov
hlt
cmc
mov
mov
fisttpl
int
daa
adc
or
add
test
out
or
mov
push
jg
sahf
add
sub
arpl
pop
jg
cmc
xchg
movsl
popa
loope
or
xor
insb
xchg
xchg
sub
rcr
inc
icebp
repnz
and
mov
adc
cli
out
in
in
sub
mov
xor
dec
push
inc
in
fucomip
mov
push
xor
xor
lcall
pop
lea
pop
jecxz
xor
push
push
xchg
dec
sti
rol
pop
arpl
jnp
js
jl
push
out
add
cld
in
push
push
push
dec
sub
outsb
cmp
xchg
mov
sahf
imul
cmpb
out
imul
lea
imul
pop
sahf
in
sbb
aam
jp
and
pop
pushf
dec
jge
mov
cmp
mov
mov
xchg
rorl
sahf
sbb
or
repnz
fwait
dec
repnz
cli
push
adc
movsb
xor
mov
inc
pop
jg
rep
out
cmp
lods
adc
xchg
stos
sbb
testl
mov
inc
ret
mov
in
repz
dec
rcll
cli
pop
sub
sbb
lds
and
in
std
in
mov
lods
and
inc
out
mov
clc
sbb
movups
sub
scas
or
bound
out
sbbl
sarb
add
cmp
mov
dec
fwait
xchg
lret
call
inc
jg
push
out
adc
imul
mov
mov
fmulp
xchg
lods
inc
repz
rcrl
sti
stc
fldenv
mov
xchg
out
subb
lods
je
sbb
shlb
mov
jmp
testb
add
dec
xor
cltd
push
insl
xor
jnp
xor
xchg
sbb
xchg
sahf
ss
and
je
out
fdivr
ucomiss
fs
ja
test
lock
fs
inc
sub
push
gs
sbb
jne
push
cltd
push
stc
daa
xorl
mov
sbb
push
mulb
negl
cmp
or
shll
xchg
jb
std
mov
pop
fmulp
aam
push
rcr
add
dec
aaa
dec
mov
call
jl
in
cltd
and
jnp
aaa
xchg
lods
xor
ljmp
cmp
jp
fs
aaa
mov
mov
adc
testl
add
mov
sbb
adc
xlat
fs
xor
sbbl
cs
mov
xor
paddsw
inc
jns
inc
in
inc
inc
lea
inc
insl
cs
and
lea
dec
lcall
leave
in
dec
sbb
cmp
aad
fidivs
sbb
andl
jae
push
mov
sbb
sahf
pop
push
inc
cmp
pop
pop
pop
daa
pop
jb
out
pop
xchg
cmp
mov
in
orl
scas
xor
xchg
imul
std
jbe
and
jno
je
xchg
scas
mov
div
mov
jl
jge
ret
push
ret
push
imul
and
nop
divl
cltd
xor
cmp
addr16
shll
into
dec
xor
in
insl
mov
mov
cmp
into
push
mov
and
js
jo
or
push
and
shll
mov
pop
out
dec
hlt
and
lods
icebp
sub
sub
sbbb
pop
pop
inc
fsub
stos
pusha
mov
push
repz
jne
shll
jg
add
fimuls
mov
push
mov
adc
mov
xchg
imul
out
and
or
sti
mov
pop
gs
xchg
add
add
jle
cmp
lock
xor
dec
sub
fidivl
push
push
lret
mov
fidivrs
je
fnsave
mov
jnp
popf
icebp
addr16
add
cmp
or
popf
push
loopne
scas
lcall
push
sbb
hlt
xchg
push
rorb
rorl
push
dec
inc
mov
bound
stos
add
jbe
push
adc
mov
or
jno
pop
cwtl
lahf
sarl
dec
in
cltd
cmc
pop
or
mov
into
sbb
mov
sub
pop
imul
int
jnp
add
mov
shlb
xor
cltd
mov
pop
test
jp
cmpsb
aaa
xor
lods
pusha
jp
in
icebp
int
js
fwait
xor
out
icebp
sbb
xor
dec
push
fs
pop
sbb
xchg
jp
lret
xchg
sbb
mov
stos
push
sbb
add
or
in
pop
jecxz
or
in
xlat
push
dec
or
das
jae
and
add
dec
jo
adc
cmp
cld
stos
mov
iret
or
lods
adc
aaa
fprem
add
jecxz
ret
adc
imul
icebp
lcall
es
and
sub
arpl
aaa
xor
jp
out
fsubrl
cmp
aam
pop
jbe
mov
sub
addr16
clc
and
inc
loope
xorb
or
mov
sti
inc
and
lods
and
ja
cmc
and
stos
clc
cmpps
jno
dec
bound
add
inc
in
mov
xlat
sub
loop
sub
adc
dec
pop
insb
fwait
sbb
mov
daa
jne
pop
insl
inc
bound
mov
inc
fsubl
jnp
fisubrs
mov
sbb
stc
sbb
and
jne
sbb
scas
mov
pop
jbe
jno
mov
xchg
xor
push
cs
imul
adc
nop
cmpb
pop
dec
adc
and
addr16
push
call
push
pop
nop
sbb
stc
add
push
stc
enter
aaa
rep
pop
pop
pop
faddl
xchg
inc
xchg
inc
lahf
nop
mov
adc
mov
and
pop
into
pop
push
push
sbb
dec
dec
inc
jmp
fwait
sbb
push
cmp
jmp
xchg
insb
dec
sbb
mov
lods
cmp
push
xchg
aas
dec
jle
ret
cs
and
sub
cmp
push
insb
cmpsl
fld
lret
fld
dec
push
imul
mov
gs
jb
adc
mov
fldcw
loope
add
inc
shr
and
mov
movsl
dec
add
testl
sbb
hlt
adc
fs
lcall
add
pop
loopne
xor
mov
ss
cmp
andb
sub
loope
jnp
testb
xlat
or
pop
dec
enter
lods
inc
scas
sub
push
push
cmp
or
leave
cwtl
and
sub
sub
pop
lea
mov
mov
loop
mov
pop
insl
or
ja
xor
jmp
push
xor
xchg
pop
in
call
jb
adc
cmpsl
int3
mov
pop
push
adc
imull
fidivrs
pop
sub
cltd
pop
sbb
repnz
sbb
clc
fdivr
push
jne
aaa
and
inc
push
testl
es
mov
js
aam
add
push
test
and
adc
ds
sarb
xor
ret
ss
enter
stc
add
and
ret
das
cmpsb
lods
xchg
push
testb
mov
cmpb
inc
cli
pop
mov
std
xor
sbb
sub
push
stos
inc
gs
dec
aam
ja
mov
pop
xchg
xor
outsb
mov
pushf
les
mov
rcll
lea
jns
pushf
sarl
push
lock
xor
int3
push
lret
sub
push
in
int
mov
nop
jbe
xor
pop
or
into
orb
mov
imul
add
dec
lcall
sub
aas
scas
mov
cmp
jg
pop
adc
imulb
pusha
decl
add
nop
lcall
aas
or
movsl
xor
int3
clc
jmp
mov
xchg
mov
mov
add
mov
xchg
jnp
pusha
hlt
fcomps
ja
xlat
add
mov
mov
outsl
pop
stos
mov
cmpsb
inc
daa
int
pop
repz
es
cmp
pop
cmc
xchg
arpl
fmuls
out
mov
push
sbb
out
push
jmp
jne
fwait
sub
scas
outsb
lret
popa
fwait
and
aaa
mov
ss
std
popa
inc
add
insl
aad
dec
es
jae
sar
pop
sbb
pop
fistpll
mov
testl
pushf
sub
loope
popf
dec
push
add
cmpsl
cmp
cmp
imul
sti
or
mov
fwait
sub
mov
mov
mov
dec
or
cs
out
add
and
fwait
xchg
inc
or
xlat
scas
mov
ds
and
cmpsb
fstl
add
add
aad
stos
or
inc
adc
loop
jp
mov
or
xchg
dec
or
ret
and
leave
pop
ss
rorb
scas
jo
stos
xchg
add
cmp
push
dec
in
xchg
sbb
sbb
sbb
adc
or
inc
pop
push
jmp
sarl
xchg
push
sbb
or
addb
enter
pop
dec
outsb
cmc
mov
mov
push
cmp
xchg
int3
int3
enter
cld
imul
imul
jno
repz
dec
inc
mov
push
xchg
sbb
mov
pop
inc
repz
test
jae
jmp
sub
aam
and
sub
clc
or
adc
jle
sbb
adc
fwait
and
fwait
inc
cwtl
call
mov
test
add
test
jmp
adc
xchg
mov
inc
out
out
cld
xchg
xchg
mov
push
xor
ljmp
pop
xlat
clc
or
mov
xchg
lret
es
xor
xchg
sbb
adc
aad
jns
imul
mov
sarl
push
xorb
clc
lds
loope
pop
cld
add
dec
push
lahf
stos
mov
aam
or
sbb
inc
pop
mov
subb
jg
cmp
cmp
rorl
mov
add
sub
pop
add
int3
scas
push
gs
jno
sbb
adc
mov
mov
cmp
imul
adc
sbb
pusha
mov
pop
cs
stos
imul
mov
rcll
push
add
lds
andl
icebp
cwtl
cmp
jo
mov
cwtl
in
in
adc
cltd
jl
inc
mov
adc
adc
xchg
loope
jmp
xchg
adc
xchg
int3
rolb
cwtl
adc
xor
xchg
adc
lahf
jg
sbb
xor
jo
mov
add
add
cs
jo
xor
push
stos
gs
pop
test
and
push
inc
mov
fists
addb
xchg
and
xchg
sbbb
adc
popf
cmp
rcl
push
fidivrs
add
shrl
stos
out
loopne
mov
or
rcr
sbb
mov
cmp
xor
jo
int3
sub
cmpsl
out
insb
cmp
out
sbb
adc
call
daa
insl
mov
sbb
jle
cltd
jns
jle
dec
and
scas
push
out
push
sbb
mov
pop
and
das
sub
loopne
mov
cmp
xchg
push
push
mov
mov
cmp
popf
sar
cmp
xchg
stos
cmp
in
fcomps
test
cmp
cltd
lcall
push
push
rorb
xchg
out
loopne
mov
sbb
xor
sub
mov
roll
inc
pop
shlb
data16
inc
jns
shl
js
idivl
shll
mov
mov
and
xchg
popf
mov
sbb
cld
daa
adc
shrd
shrl
jbe
insl
pop
pop
movsl
sbb
into
fucomip
xchg
pop
sub
ja
sub
repz
add
cmpsl
nop
jne
adc
repnz
add
sbb
push
lret
ljmp
mov
sti
add
cmpsb
mov
xchg
es
outsl
call
jl
xchg
pop
lcall
fstps
cmp
jge
sub
sarl
adc
or
jns
sbb
js
lods
mulb
test
or
ss
jmp
adc
push
arpl
push
mov
and
jns
sti
lahf
negl
test
jno
test
into
lcall
dec
mov
cli
jo
je
sbb
dec
repnz
lret
adc
xchg
scas
mov
mov
pop
xor
sbb
jl
mov
shlb
jns
pop
data16
and
jmp
xchg
adc
jae
jmp
adc
and
ljmp
mov
in
and
xlat
xchg
mov
imul
dec
out
rclb
mov
pop
and
and
jbe
push
mov
dec
mov
xor
adc
jmp
pop
add
fs
dec
sbb
and
test
cmp
lcall
inc
aam
xor
in
divl
lods
stos
dec
jo
aad
add
pop
xor
push
jae
repz
xchg
aam
loope
push
outsl
pop
ret
shll
mov
adc
ret
pop
mov
dec
mov
jo
popfw
sub
xlat
push
cmc
addb
inc
jl
sbbb
push
test
pop
pop
arpl
xor
in
mov
jle
scas
mov
adc
push
mov
add
stc
mov
add
jl
xor
rorl
bound
mov
outsb
les
mov
out
dec
out
mov
outsl
inc
add
mov
xlat
and
and
je
ljmp
mov
xor
shl
pop
mov
sti
mov
sub
out
xchg
fidivs
loope
jecxz
sub
and
sub
xor
movsb
xor
sub
aaa
in
repnz
ljmp
sbb
shrb
ljmp
jnp
mov
pop
cwtl
addr16
ds
jne
xor
sbb
fisttps
sub
popf
sub
stos
mov
loopne
cld
mov
je
dec
out
scas
dec
adc
loope
shlb
sbb
and
push
mov
mov
mov
inc
idivb
daa
push
movsb
jl
bound
lret
js
adc
sahf
insl
add
pop
sub
int
lea
dec
push
repz
mov
cmc
xor
iret
mov
rcrl
cltd
in
ja
fdivl
or
xor
xor
rcrl
push
nop
xchg
mov
sub
sbb
push
or
xchg
imull
jle
adc
nop
cmpsl
fcoms
test
fwait
js
lds
mov
mov
cmp
test
inc
adc
jbe
nop
inc
stc
cmpsl
mov
sbb
mov
mov
je
fninit
leave
mov
mov
push
push
fidivrs
dec
mov
jl
lret
push
or
adc
mov
cmpsl
inc
lret
cmp
dec
mulb
aaa
repz
dec
jmp
das
es
mov
aas
aas
pop
add
mov
or
jo
mov
repnz
ret
sbb
lods
leave
ficomps
jecxz
or
imul
sahf
lds
scas
pop
lods
mov
sub
scas
dec
rclb
or
and
push
sub
jecxz
lods
inc
inc
mov
or
mov
icebp
add
pop
xor
adcl
insb
pop
mov
xchg
scas
adc
call
sbb
adc
rep
push
mov
cmp
test
jl
gs
dec
out
mulps
sub
loop
cs
dec
dec
repnz
mov
scas
xchg
ret
pop
inc
test
ret
jmp
xchg
xchg
std
in
into
cmp
jno
sub
ss
jno
sub
loope
xor
ja
fiaddl
rcl
pop
das
shll
shrb
es
sbb
loope
repz
ja
sti
dec
pop
shlb
fisttpl
adc
testl
sub
daa
orl
pop
push
imul
pop
xorl
aas
test
and
fidivs
xor
or
fidivl
ljmp
outsl
sub
test
cwtl
scas
cmc
mov
shlb
ljmp
in
out
icebp
sub
lock
bound
les
mov
js
push
pop
out
xor
dec
pop
aam
xor
and
jle
repz
adc
jecxz
adc
andb
xor
cmp
cmp
bound
orl
inc
xchg
mov
aam
xor
in
add
pop
pop
mov
in
pop
loopne
push
jmp
sti
daa
out
stc
nop
rcrl
cmp
push
cmp
jle
out
or
insl
popa
jmp
aad
jne
dec
and
dec
fldenv
setns
aas
sbb
test
ret
test
jns
and
jnp
pop
push
pusha
sbb
cmp
fisttpll
sub
jnp
or
out
sub
mov
loope
xchg
xorb
cmpsb
push
xor
aam
pop
lock
divl
dec
cmpsl
cmp
and
aaa
mov
adc
aas
ds
add
dec
arpl
scas
gs
sarl
xchg
mov
jo
cmp
pop
popw
sbb
popf
add
adc
cltd
ss
mov
and
cmp
push
fs
rcll
loope
rcrb
adc
notl
xchg
sbb
cmpsl
pop
rcrb
mov
xchg
aad
push
dec
fists
movsl
push
and
dec
jp
cmp
das
jp
inc
add
clc
in
sarb
iret
ss
and
mov
repnz
lock
mov
cmp
loop
imul
fnsave
pop
mov
jo
push
xor
pop
push
jae
adc
sub
test
out
mov
cmp
sbb
lret
shlb
out
lds
push
mov
ds
or
inc
cli
cmp
push
mov
jo
stc
aas
stos
jl
push
mov
mov
mov
sbbb
adc
xor
data16
inc
or
sbb
negb
in
mov
mov
in
and
mov
mov
xor
sub
insl
adc
outsb
iret
jge
je
xchg
mull
int
dec
or
push
rcrl
sbb
dec
and
ja
sub
cltd
dec
mov
sti
add
das
cmp
xchg
popf
pop
push
aam
lahf
or
cmc
cmp
jp
ffree
cmp
cli
inc
insb
shlb
cmp
outsl
jl
mov
push
fildll
out
push
in
jo
push
adc
loop
or
in
mov
int
cmpsb
mov
rcl
stos
adc
lahf
test
and
jecxz
stos
push
ret
addr16
cmp
sub
lret
adc
jns
xchg
lcall
sub
test
xchg
fldenv
std
cld
pusha
push
mov
mov
jg
iret
enter
push
add
jne
ret
xor
fimull
mov
daa
stos
stos
lods
loopne
mov
push
add
inc
dec
pushf
jnp
insb
imul
sub
clc
mov
xchg
clc
mov
jno
popa
cwtl
inc
xor
fimuls
inc
cld
xor
jg
icebp
cltd
inc
outsl
mov
xchg
fldt
imul
arpl
cmpsl
es
decl
add
pop
aam
popf
push
mov
jb
mov
std
fcom
pusha
jp
mov
popa
mov
adc
fadd
jnp
cmovo
push
pop
sub
xor
test
push
lret
xor
cmp
jecxz
imulb
pusha
xor
xlat
in
jb
imulb
test
inc
shrb
je
and
xorl
push
sarl
dec
cmp
pop
or
xor
jle
orl
or
cld
fs
mov
and
lock
dec
push
cmp
adc
ret
test
cmpsb
adc
push
dec
xor
sbb
jbe
fwait
mov
insb
jae
mov
popa
jle
inc
cmc
fldt
lret
or
cmpsb
or
add
cwtl
ret
push
mov
push
push
cmp
stc
cmp
in
xor
imul
jl
xlat
ljmp
mov
scas
ds
pushf
out
cmp
scas
cld
add
cmp
mov
cmc
pusha
xchg
jg
int3
movsb
push
mov
fs
popa
jle
test
js
shrb
scas
fcmovnb
add
or
sahf
in
mov
sub
out
stc
bound
inc
inc
dec
aad
mov
inc
push
mov
insl
repz
mov
adc
jnp
shlb
test
sti
ljmp
mov
sahf
jne
mov
adc
mov
and
xchg
sbb
add
inc
psllq
lret
or
rorl
mov
mov
mov
scas
jae
push
stc
aam
mov
mov
inc
sub
and
dec
fsubrl
jnp
adc
lods
rcrb
lret
test
jmp
lcall
dec
ljmp
daa
insb
outsl
mov
call
mov
mov
ja
xor
fxch
fmuls
jae
fs
mov
jp
into
xchg
lods
test
lahf
add
dec
ds
pop
and
and
sub
jbe
mov
cltd
sbb
push
lods
repz
pop
sbb
jg
cld
outsl
sbb
push
push
imul
or
mov
das
pop
mov
jecxz
out
cmp
inc
add
cmc
dec
das
mov
pop
and
insl
sub
aad
aas
and
gs
fstp
int3
leave
xor
test
lods
rdmsr
out
scas
loopne
dec
dec
popf
imul
icebp
push
mov
mov
into
aas
dec
lds
gs
adc
xchg
lea
xor
and
xchg
test
xchg
pop
mov
mov
jle
pusha
popa
add
jbe
fwait
pop
stos
pop
jno
bound
insl
jb
arpl
adc
aad
jbe
nop
pop
repnz
movsb
sbb
out
popf
xor
fcoml
xchg
aam
scas
sti
cmp
jo
fstpt
sub
imul
mov
dec
gs
test
or
sub
push
fidivl
mov
xchg
push
pop
lret
sbb
and
mov
push
mov
mov
sarl
movsl
push
in
push
orb
xchg
and
das
pop
cli
int
mov
or
test
inc
lcall
mov
pusha
or
int3
arpl
movsl
inc
aad
out
xor
ret
cmpsl
xchg
cs
jp
ret
pop
lds
push
push
or
roll
iret
sbb
pop
cmpsl
xchg
movsb
scas
jne
jmp
inc
mov
dec
pop
popa
rorb
xchg
in
ljmp
sbb
es
sbb
push
sbb
pop
lret
leave
pushf
xlat
pop
sub
adc
gs
jo
andb
gs
iret
scas
out
pushf
or
movsb
or
inc
scas
lahf
xchg
inc
and
psadbw
pop
fcmovbe
lret
mov
stc
repz
lahf
mov
push
mov
iret
or
xor
push
ss
dec
push
and
push
cmp
cmp
add
sub
pop
in
data16
shll
add
or
mov
movsl
xchg
adc
shlb
int3
scas
scas
pop
cmpsb
inc
scas
movsl
lret
pop
es
lods
jnp
mov
mov
pushf
adc
mov
mov
jmp
add
and
in
push
add
xchg
fcmove
sbb
lods
xchg
aas
subb
mov
fisttpll
sarl
notrack
push
push
cmp
push
out
cli
popf
pop
sbb
testl
jb
ja
dec
mov
cmp
and
jo
and
call
clc
ss
or
adc
dec
ficoms
push
push
scas
mov
aad
or
shl
xor
call
mov
lret
scas
or
xor
movsb
fisttps
xor
sub
xor
lret
mov
jne
adc
mov
fbld
add
shrb
lret
rcrb
aas
add
xchg
jecxz
cltd
pop
push
loopne
scas
dec
ficomps
add
mov
test
movsb
push
cli
xchg
insb
sub
jge
sbb
gs
fldt
shlb
mov
pop
mov
mov
popf
mov
adc
ljmp
daa
mov
lahf
jno
in
bts
xorl
lcall
cmp
sub
pop
sbb
mov
jecxz
push
mov
mov
pop
sbb
aam
fldl
sbb
cmp
ljmp
sbb
stos
test
xchg
pop
push
in
iret
cld
xchg
mov
test
in
mulb
leave
mov
sbb
popa
jge
mov
out
xorb
mov
test
mov
call
cwtl
xor
clc
sbb
je
std
inc
lods
addr16
cwtl
mov
pop
sarl
jb
popa
xchg
or
jl
xor
lods
nop
stc
mov
fs
pop
add
in
add
sbb
loopne
ret
scas
fldl
test
and
shl
shl
arpl
lea
mov
loop
dec
cmc
sub
decb
cmpsb
xchg
test
test
ret
adc
or
bound
andl
xlat
dec
in
add
repnz
mov
cmp
das
das
mov
subb
xchg
inc
add
jo
mov
pop
push
sub
ror
lret
dec
and
inc
pop
push
cmp
mov
pop
pusha
xchg
pop
mov
mov
roll
push
scas
adcl
loop
push
mov
outsl
insb
ds
push
inc
cmp
push
js
jnp
rcrb
fcoms
fmulp
xchg
jl
mov
popf
dec
es
popa
push
adc
xor
sbbb
orb
pop
jecxz
nop
mov
mov
cmp
cmc
mov
add
mov
xlat
in
push
inc
es
mov
outsl
sub
sub
cmpsb
pop
idivb
jnp
ja
ret
mov
int3
mov
es
pop
stc
lcall
jecxz
dec
xchg
in
cwtl
sbb
es
or
inc
scas
xchg
pop
xchg
in
nop
in
cmp
cld
mov
xor
push
mov
aas
lret
cmc
xlat
push
mov
pushl
push
repnz
push
mov
xorb
push
sbb
lea
orb
sbb
xor
jb
push
movsb
adc
cmpsl
sbb
icebp
xchg
push
test
add
push
xor
stc
fmuls
insb
sub
adc
mov
lea
movsl
xor
icebp
rorl
jo
mov
and
push
push
sub
clc
xlat
adc
iret
or
xor
and
fprem1
fildll
mov
jl
mov
std
ss
movsl
fiadds
jno
sub
sbb
test
test
subb
adc
sbb
push
test
fsubr
xchg
shlb
clc
in
mov
sub
jg
jo
and
insb
mov
mov
xchg
in
inc
cmp
test
ss
mov
mov
andb
das
sub
out
addl
testl
mov
mov
sub
adc
mov
les
cmp
in
jns
cmp
push
btc
mov
scas
mov
stos
lret
ret
xor
fcmovb
rorl
push
enter
pop
push
jmp
jne
inc
xor
pop
fmull
sub
ss
cmp
and
stos
mov
dec
cmp
and
jae
xor
imul
lret
outsl
jns
pop
jnp
mov
mov
adc
xor
cmpsb
xlat
xchg
pop
xchg
leave
mov
in
dec
stos
and
add
sbb
jp
sub
cmp
and
dec
xorl
adc
loopne
popa
in
sub
or
nop
xchg
clc
stos
cmp
push
loop
xchg
lods
lock
jns
cmp
pop
lock
cmp
das
dec
fnstcw
faddl
sub
cmpb
sub
add
testb
xchg
aad
imulb
jnp
out
je
jmp
sub
int3
imul
dec
aas
xor
and
fsub
cmpb
lcall
and
pop
rcrl
adc
sbb
out
dec
sub
movsl
stc
in
dec
icebp
mulb
dec
fldenv
pop
sbb
jb
or
jle
cltd
in
push
sti
push
orb
call
test
add
dec
rorb
sub
mov
sub
test
xor
push
inc
loope
fnsave
fstpl
mov
jae
ror
stos
xor
or
je
push
bound
xchg
inc
jae,pt
mov
movsb
mov
lds
push
jne
xlat
std
dec
mov
sub
int3
sbbb
and
xor
imul
cld
and
xchg
lret
cmp
repnz
cmp
cmp
cmpsl
or
sti
jb
mov
sarl
adc
popa
movsb
ds
inc
std
mov
adc
fidivrs
mov
sbbb
xor
cmpl
sbb
mov
daa
clc
add
mov
xchg
mov
and
cmp
inc
push
cmp
jb
shlb
jno
int
adc
ljmp
stos
adc
loop
add
mov
nop
mov
dec
andb
push
push
jnp
orl
sti
ljmp
scas
out
add
int
shlb
call
insb
xor
mov
lods
imul
cmp
stos
js
inc
sub
push
test
fimuls
mov
mov
popa
pop
mov
mov
pop
addl
sub
xchg
mov
push
notl
and
jge
jns
popa
cmp
xor
stos
movsb
cltd
sbb
in
icebp
dec
inc
sub
add
outsl
pop
sbb
std
adc
cwtl
arpl
in
sti
or
adc
psubusb
fs
xchg
cmp
mov
sbb
pop
jae
mov
push
inc
dec
xchg
mov
or
incb
mov
lcall
imul
or
fs
cld
inc
dec
loope
fdivl
iret
xchg
ljmp
and
and
or
xor
int3
pop
jle
jg
in
sar
pusha
scas
imul
jecxz
in
adc
xor
rclb
inc
pop
mov
ret
xchg
cs
inc
jge
pop
cmp
lahf
aad
je
xlat
mov
mov
pop
mov
stos
sub
ljmp
fstpl
stos
xchg
jnp
jg
xor
pop
stc
out
mov
mov
xorb
test
mov
push
sbb
test
cmc
sbb
nop
out
jae
cli
loop
fsts
ljmp
or
or
fs
popf
mov
cmpsb
dec
inc
inc
mov
sbb
test
or
fs
adc
sub
and
xor
push
lods
inc
add
push
sbb
out
addr16
jnp
jns
and
popa
xor
xor
inc
pop
push
enter
add
sub
loopne
rcrl
icebp
cli
jp
sbb
aas
mov
sub
sub
sahf
pop
push
test
ds
das
or
push
dec
movups
pushf
fxch
stos
inc
stc
rcll
xchg
daa
pop
lds
xchg
mov
xchg
es
ds
lods
jp
aas
ljmp
push
ret
inc
push
xchg
jb
jmp
je
fwait
push
xor
inc
ja
mov
jecxz
cmpsl
cltd
pop
test
or
scas
out
dec
outsb
fwait
mov
and
sbb
jno
xor
or
out
shlb
out
stos
push
stc
imul
rolb
jmp
dec
or
fcompl
push
push
imull
out
cmp
pop
dec
xchg
cwtl
scas
fisubl
and
jae
shll
scas
mov
push
nop
cld
cmp
mov
inc
inc
mov
sbb
clc
xor
sbb
jnp
rcrl
sub
ds
lcall
mov
pop
in
adc
mov
scas
mov
ret
push
dec
add
lcall
pop
mov
jns
lods
cmp
sub
jnp
and
and
das
imul
xor
cmpsl
push
cmpsb
cltd
pop
mov
fmull
pop
shl
add
mov
pushf
idivb
jae
add
loop
loope
popa
aam
add
xor
cs
sbb
push
imul
mov
stos
aam
ljmp
into
adc
fdivrl
push
das
dec
mov
xchg
cmpsl
xor
ficompl
sub
lock
mov
fucomi
lret
fldl
aam
cld
aaa
lea
fstps
adc
xchg
lret
mov
mov
add
in
je
das
xor
push
adc
inc
cltd
popf
add
mov
dec
in
xor
ret
fs
sbb
mov
outsb
mov
cld
pop
ljmp
and
nop
sbb
addr16
sbb
test
fwait
ror
cmp
inc
xchg
jbe
aam
dec
inc
call
flds
outsl
pop
sub
cs
faddp
pop
lods
pop
sbb
cmpsb
mov
outsl
xchg
out
xchg
push
sub
mov
xor
pushf
pop
push
lret
xchg
adc
dec
mov
movsl
mov
pop
lret
inc
push
push
jp
xchg
out
dec
jne
rorl
adc
mov
hlt
jge
fiadds
or
push
rcrl
pushf
cmp
or
pop
and
sub
push
ret
ss
xor
sbb
mov
movsb
push
and
adc
repz
fwait
je
in
out
mov
add
shll
cs
sbb
and
pop
out
faddl
mov
subb
xchg
xor
test
sarl
xchg
sti
sbb
push
lods
dec
lcall
sbb
sub
jns
push
movsb
dec
adc
cmp
outsl
repz
loopne
repz
imul
les
adc
movsb
insl
insl
and
or
mov
and
jge
call
mov
cmp
jbe
inc
inc
imul
int
out
call
cmp
test
pop
mov
xor
push
mov
clc
jge
push
insb
adc
adc
pop
cmc
or
xlat
mov
mov
push
lret
or
cmp
jns
in
shlb
enter
pop
icebp
outsb
dec
fcoms
push
adc
pop
push
scas
push
push
push
inc
jmp
inc
daa
loopne
add
mov
cmp
inc
fsubrs
icebp
push
outsl
dec
and
cmpsb
mov
inc
mov
add
repz
int3
add
inc
push
dec
or
aad
addr16
xor
adc
ljmp
pusha
int
daa
and
adc
or
xor
push
in
in
sub
flds
outsl
outsb
jp
mov
aaa
data16
lock
addr16
dec
and
cmpsb
leave
add
inc
mov
mov
enter
lahf
and
ret
stos
sbb
mov
dec
pusha
sub
ja
fcoml
popf
mov
shll
lods
ror
inc
insb
data16
inc
mov
sbb
mov
pop
insl
in
cmpl
cli
aad
fisubrl
pusha
jge
xchg
insl
fbld
daa
into
push
cltd
mov
adc
mov
lock
icebp
repnz
push
mov
jmp
dec
add
push
inc
inc
jmp
jns
add
sbb
or
sbb
stc
mov
adc
xor
mov
andb
pusha
add
push
cmp
cmp
fldt
mov
repz
int3
leave
inc
iret
add
mov
adc
aaa
sbb
push
jle
sub
mov
test
pusha
mov
test
lahf
adc
mov
mov
jbe
jg
fcompl
and
scas
push
and
aaa
add
lret
les
cmp
rcll
jo
mov
sbb
divb
and
inc
push
adc
bnd
repz
pop
or
dec
xor
or
jnp
std
ss
mov
je
bound
fcomp
xchg
xor
inc
lea
inc
mov
sub
push
cmpsb
pop
les
es
adc
sub
imul
pusha
lock
sti
push
mov
fistpl
pop
jge
lods
adc
fmul
les
mov
mov
movsb
sub
jmp
cmp
sahf
imul
adc
cmp
bnd
adc
xchg
stos
cmp
cli
and
iret
fmull
das
ds
dec
insb
pop
jg
xchg
adc
sub
jp
das
test
cmpsb
nop
push
mov
jno
sub
mov
lock
pop
insb
mov
mov
sub
cmp
cli
mov
mov
pushf
dec
cmp
shll
adc
jno
xchg
mov
insl
lahf
fisubs
repnz
dec
or
out
xchg
ret
jbe
push
sub
mov
movsb
dec
scas
lret
or
fmuls
xor
pop
and
or
cmp
popa
add
sub
adc
imul
and
sbb
pop
sub
xchg
lcall
xchg
mulb
jl
popf
or
adc
sbb
push
mov
xor
out
daa
cwtl
cmpsb
aad
xchg
cltd
add
into
cmpsb
out
mov
mov
outsb
push
data16
rcrb
out
cmc
cmp
out
push
xor
in
and
dec
pop
insl
xchg
inc
cmc
cwtl
mov
std
testb
mov
iret
and
shrb
and
push
pop
push
mov
mov
jno
adc
jne
in
fsubr
pop
sbb
or
dec
ficoml
sbb
bound
mov
pop
rorl
xchg
stos
xchg
jmp
xlat
mov
orl
push
pushl
cmp
out
ds
shrl
mov
subl
into
push
and
or
push
pop
jg
stc
pop
aad
movsb
lcall
jl
mov
movsb
push
jb,pn
mov
add
gs
pop
adc
daa
out
sbb
add
or
jb
sbb
push
icebp
test
xor
and
jl
js
mov
std
or
iret
stos
cmp
and
pusha
out
arpl
scas
addr16
mov
popf
xchg
or
fstps
and
jno
pop
in
cmp
insl
mov
cmp
das
cmpsl
mov
mov
dec
pushf
je
fs
mov
mov
cmp
cld
mov
inc
xchg
lods
mov
mov
pop
sub
sar
ds
mov
orb
jecxz
jge
jecxz
mov
or
sub
bound
dec
adc
rorl
dec
xchg
and
pusha
lods
pusha
push
jnp
aaa
xchg
fs
mov
scas
xor
lcall
daa
cmc
enter
sub
jbe
cmpsb
sbb
push
mov
ds
xlat
ja
dec
pop
mov
lahf
fmul
idivl
sub
push
js
subb
mov
jl
mov
mov
fwait
sti
stos
xchg
aaa
xchg
inc
inc
xchg
lret
addl
xor
lods
add
mov
push
dec
pop
sbb
sbb
add
jl
iret
or
mov
lahf
sbb
or
jle
mov
sub
arpl
inc
js
inc
and
leave
aad
mov
dec
pop
xor
xchg
dec
xchg
mov
rorl
dec
push
adc
stos
fidivl
nop
xorl
pop
xchg
fists
in
add
outsb
pop
repnz
mov
pop
ja
push
rcll
ss
cltd
loop
mov
jno
fwait
xor
call
cld
popa
inc
dec
mov
fstpt
or
shll
push
xor
push
xchg
push
jl
jo
mov
cmp
jae
jo
pop
pop
inc
cmp
scas
mov
ror
push
xlat
pusha
jb
xor
xor
mov
sarb
xchg
fwait
xchg
cs
jnp
pop
iret
mov
stos
or
xor
push
xchg
pusha
in
out
test
adc
xor
push
push
sbb
push
push
pop
imul
out
cwtl
xorb
stos
gs
mov
out
jle
int3
les
pop
add
mov
orb
xchg
pop
mov
out
sahf
pop
dec
sbb
jp
aaa
arpl
jae
dec
fwait
jecxz
out
jmp
ror
inc
inc
xchg
out
and
stos
mov
stos
mov
jp
and
and
fldl
in
or
cmp
mov
lock
mov
ret
xor
push
cmp
icebp
sub
adc
jl
dec
repnz
ret
or
gs
movsl
cli
add
mov
push
testb
cmp
rcrb
jp
test
push
cmp
popf
dec
icebp
sbb
repnz
mov
and
cwtl
dec
mov
push
in
cmp
in
or
sahf
hlt
mov
mov
imul
push
mov
int3
in
mov
jno
jns
sbb
pushf
adc
jp
dec
adc
in
sub
dec
and
lods
or
inc
sbb
cmp
push
mov
roll
loopne
jmp
std
lock
popf
cmp
inc
xor
sub
in
into
stc
add
in
sbb
and
xchg
aaa
mov
push
pop
dec
arpl
testb
xchg
mov
jo
dec
sahf
test
gs
mov
pushl
push
in
ret
mov
sbb
mov
mov
fsubs
fdivrl
sbb
mov
sub
mov
sbb
jb
inc
cmp
repz
pop
push
iret
out
mov
add
test
mov
and
fisubrs
push
test
xchg
mov
js
mov
out
or
mov
mul
jl
aad
leave
imul
iret
imul
mov
adc
das
movsl
sub
adc
cmp
add
aaa
mov
daa
out
inc
pop
loop
cmp
add
aam
movsb
arpl
cmpsb
adc
in
jnp
jle
je
mov
inc
iret
sbb
call
cmpl
cmpsl
or
push
pop
cmp
testl
push
or
jle
jo
insl
sbb
pop
sbb
femms
pop
clc
add
sub
and
dec
cld
sub
push
cwtl
nop
push
push
jb
ficompl
icebp
movsl
mov
mov
jo
pop
cmp
mov
ja
outsb
aas
pop
mov
dec
sbb
push
icebp
mov
and
push
icebp
cwtl
add
mov
in
add
add
in
fists
mov
and
aas
movsb
aaa
inc
cmc
inc
je
jg
in
xchg
adc
jl
hlt
fucomip
movsb
pop
jo
pop
sbb
pop
mov
data16
adc
fdivrl
mov
ss
pop
push
in
or
ret
es
xchg
cmp
push
vpmuludq
ret
into
inc
pop
sbb
cmp
hlt
inc
cwtl
lahf
sarl
cwtl
es
fwait
loop
iret
mov
xchg
popf
hlt
cmp
xchg
leave
pop
daa
pop
jbe
mov
cwtl
mov
stc
dec
pop
cs
ja
stos
ret
mov
ret
out
rcrl
pop
outsl
sub
outsb
dec
gs
inc
rolb
incl
loope
ja
or
aad
mov
push
pop
xor
jge
pop
inc
cltd
cli
stos
mov
test
push
lcall
sub
dec
fnstsw
fsubl
fisubrl
adc
inc
int
fbld
inc
xchg
mov
xchg
out
ror
rorl
xchg
inc
mov
pop
int
and
and
mov
shlb
ret
movups
cmp
movsl
lock
or
int3
xchg
cmp
adc
pop
dec
adc
pop
pop
xor
pop
pop
shl
jne
mov
pop
clc
sub
inc
and
push
jo
mov
add
xor
in
mov
sub
add
pushf
test
hlt
addl
xchg
jmp
xchg
mov
push
subb
dec
cwtl
fs
bound
das
mov
cmc
pop
push
mov
mov
into
cmp
pop
imul
pop
mov
jl
dec
push
mov
andl
adc
inc
push
je
stos
call
push
lods
rcl
inc
push
je
inc
push
je
stos
call
pop
mov
push
je
inc
push
je
stos
call
pop
cmpsb
mov
out
push
je
inc
push
je
cmpsb
mov
mov
mov
movsl
fstps
push
je
inc
push
je
cmpsb
mov
movsl
loopne
mov
mov
inc
push
je
mov
fdivs
stos
mov
inc
mov
mov
out
push
je
lods
mov
push
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
xchg
test
cmp
push
je
inc
push
je
inc
push
je
mov
xlat
dec
mov
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
mov
loopne
mov
push
je
inc
push
je
inc
push
je
xchg
lahf
roll
les
push
je
inc
push
je
inc
push
je
adcl
das
mov
les
xchg
movsl
enter
int3
aas
fwait
mov
dec
movsl
mov
dec
test
mov
out
mov
ljmp
test
push
jp
mov
out
push
je
inc
push
je
inc
push
je
int3
ds
shlb
mov
xchg
je
lret
xchg
xorb
jmp
lret
xchg
jl
xchg
sub
je
aas
push
fisubl
lahf
into
pop
dec
jg
out
push
pop
fxch
xchg
push
out
jg
mov
std
sub
xchg
mov
test
sub
xchg
inc
je
fisubl
loop
push
shll
inc
pop
sbb
inc
push
mov
mov
lret
push
out
inc
sbb
pop
loop
push
mov
jb
dec
ljmp
jge
rcr
filds
loop
push
ljmp
dec
jae
int3
lcall
leave
dec
jae
int3
xlat
cld
loope
push
ljmp
popa
push
rcr
loope
push
ljmp
dec
jae
int3
lcall
test
xlat
cld
loope
push
ljmp
pop
push
rcr
fnstsw
loope
push
cmp
jae
inc
push
je
lret
xchg
cmp
pop
stc
scas
push
psubsb
ljmp
add
push
jae
xchg
mull
or
je
dec
fnstsw
outsl
xchg
ljmp
dec
jae
inc
xchg
pop
idiv
pop
stc
scas
mov
ljmp
and
xlat
in
loope
push
pop
rorb
shl
inc
push
je
inc
push
pop
test
shl
inc
push
mull
cmp
jae
fisubrl
inc
fiadds
inc
cmp
jae
mov
imul
shl
inc
push
pushl
dec
jae
int3
data16
jmp
mov
cwtl
pop
out
push
je
mov
pop
lock
xchg
pop
push
push
std
sub
xlat
in
loope
push
out
int3
xlat
lock
push
ja
and
out
loope
push
ja
and
sbb
out
push
fcomp
loope
push
je
inc
cmp
fndisi(8087
inc
push
neg
inc
popa
stc
xchg
inc
push
je
scas
outsl
out
fiadds
dec
cmp
jae
mull
jno
mov
xorb
insb
jo
push
mull
inc
jge
xchg
std
imul
jae
les
aam
inc
push
jne
dec
fnstsw
loop
push
mull
inc
jge
xchg
std
imul
jae
les
aam
inc
push
ja
dec
fnstsw
loop
push
mull
inc
jge
xchg
std
imul
jae
les
aam
inc
push
jns
dec
fnstsw
loop
push
mull
inc
jge
xchg
std
imul
jae
int3
xlat
aam
inc
push
mull
cmp
jae
stc
push
jae
sub
mov
outsl
xchg
ljmp
add
mov
shrl
push
jae
inc
call
std
imul
jae
into
xchg
pop
aaa
stos
xchg
pushl
adc
jl
dec
jae
stos
push
fsub
push
push
je
xchg
ljmp
push
je
rcll
es
push
lds
push
or
xchg
sub
fdivr
cmp
jae
mov
je
inc
cmp
outsl
out
xor
leave
xlat
vrsqrtps
sub
push
jae
leave
xchg
jne
inc
mov
sarl
sarl
stos
outsl
out
sbb
out
pop
ljmp
and
xchg
pop
jb
mov
sarl
rcrl
out
push
out
lret
xlat
enter
ja
and
push
jae
lea
test
xlat
vrsqrtps
xor
push
jae
aam
sbb
inc
push
std
jnp
dec
jae
sub
mov
loope
push
ljmp
dec
jae
lret
loope
push
ljmp
adc
push
je
dec
xlat
insb
jmp
xor
stc
ds
jae
xchg
je
inc
push
pop
lock
xchg
xor
push
std
sub
fnstsw
and
mov
mov
stos
outsl
out
push
mov
jno
es
jo
push
je
lret
xlat
int3
loope
push
ja
std
fidivrl
stos
outsl
out
push
mov
jno
cmpsl
jo
push
je
lret
xlat
int3
loope
push
ja
std
fidivrl
fnstsw
loope
push
fsubrp
test
test
inc
fnstsw
call
inc
xchg
je
xchg
mov
outsl
out
fdivrl
jo
cmpsb
outsl
out
fidivrs
call
orl
out
push
je
xchg
outsl
out
xor
xchg
mov
outsl
out
fdivr
sub
jae
xchg
je
inc
push
pop
lock
xchg
xor
push
std
sub
fnstsw
loope
push
out
lret
xlat
mov
sub
fldl
aas
cmp
jae
lea
test
cwtl
pop
out
push
je
xchg
scas
imul
sub
inc
push
ljmp
dec
jae
inc
xchg
pop
div
pop
neg
jle
subb
push
je
inc
cmp
outsl
out
push
mov
aaa
int3
cmpsl
push
cmp
add
inc
push
imull
lret
loope
push
ljmp
dec
jae
inc
xchg
pop
div
lcall
pop
fsubs
inc
push
pop
or
xlat
mov
sub
mov
jae
rorl
out
push
jl
xchg
std
imul
out
xlat
mov
sub
aad
and
pop
cmp
jae
inc
push
je
sub
imul
pop
div
lcall
inc
call
imull
lret
loope
push
ljmp
dec
jae
inc
xchg
pop
div
lcall
pop
fsubrs
inc
push
pop
or
xlat
mov
sub
mov
jae
rorl
out
push
jl
xchg
std
imul
out
xlat
mov
movl
jae
cmp
cmpsl
leave
xlat
pushf
loope
push
ljmp
dec
jae
add
js
into
xchg
inc
adc
jmp
push
jae
int3
xlat
test
inc
push
test
lret
fildll
sbbb
jl
out
fidivrs
jno
ss
scas
int3
out
loope
push
imul
out
push
jle
xchg
xor
lret
jnp
dec
jae
lret
xlat
popf
loope
push
cld
sub
ljmp
and
lahf
pop
adc
fimuls
cmp
jae
jl
out
fstpt
lret
js
xchg
pop
and
push
jae
inc
shlb
push
ljmp
dec
jae
xchg
push
or
inc
shlb
push
ljmp
xor
jae
int3
xchg
pusha
jo
inc
ljmp
xor
stc
cmp
jb
push
out
fdivr
cli
cmp
jb
es
inc
push
je
bound
inc
fidivrs
call
dec
dec
jae
mov
push
jae
aas
fiadds
repz
test
push
and
or
test
or
je
dec
fnstsw
outsl
xchg
cmc
arpl
lds
xor
dec
jae
sub
cmp
jae
inc
push
je
lret
xlat
xchg
loopne
push
std
sub
mull
ret
out
push
je
mov
mov
out
push
je
xor
stc
idivb
push
jae
negb
jmp
inc
fmulp
lret
clc
sti
push
sbb
movl
xchg
loopne
push
ljmp
and
dec
jae
leave
fistps
sub
push
jae
aad
pushf
loopne
push
cld
jp
jp
out
fdivrp
push
cmp
jno
jns
out
fildl
in
push
int
out
sbb
push
cmp
out
push
je
jb
out
fdivrl
loopne
push
je
inc
push
pop
test
jl
inc
push
mull
cmp
jb
pop
outsb
out
mov
repnz
test
je
inc
fnstsw
or
je
leave
xchg
pop
jb
sbbl
ja
popa
dec
jae
ret
out
push
std
jae
dec
jae
int3
xchg
pop
jno
push
pushf
loopne
push
cld
jae
dec
jae
int3
xchg
pop
jb
jb
out
fisttpll
hlt
push
out
push
cmp
jb
jb
out
fldl
push
cmp
outsl
int
pushf
loopne
push
ljmp
and
jp
out
fimuls
pop
cmp
div
mov
cmp
ljmp
je
into
outsb
outsb
out
fdivrp
cmp
ljmp
sub
lret
out
loopne
push
sbbl
cmpsl
scas
int3
out
loopne
push
ja
dec
dec
jae
leave
pop
pop
or
jae
xchg
negl
inc
popa
stc
fadds
je
inc
mov
ljmp
adc
push
je
add
out
mov
and
inc
push
std
sub
fdivp
into
int3
fs
cmpsb
jbe
inc
push
mov
out
cmp
out
push
aam
roll
cmc
in
out
dec
sbb
inc
push
out
je
pop
dec
inc
push
je
pop
test
pushf
push
je
mov
daa
jmp
nop
push
je
push
adc
fnsave
cmp
out
push
lahf
mov
bound
push
je
imul
xchg
add
jl
sub
out
je
inc
push
out
rorb
inc
aad
mov
daa
fnstsw
lcall
mov
jmp
push
cwtl
xchg
sub
out
cmp
push
jae
mov
aaa
dec
add
fsub
rclb
inc
fnstsw
mov
jae
inc
fnstsw
jb
inc
pushl
xor
lahf
push
scas
xchg
je
inc
push
pop
lock
xchg
pop
push
push
std
sub
xchg
inc
pop
dec
fnstsw
scas
inc
push
je
inc
cmp
je
inc
push
pop
lock
xchg
pop
push
push
std
sub
push
je
mov
ljmp
xor
lahf
pop
ljmp
pop
ret
int3
xchg
push
jge,pn
rol
fdivrs
inc
push
je
inc
push
pop
test
js
inc
push
mull
cmp
jb
sbbl
dec
jae
mov
dec
jae
lods
adc
inc
dec
je
inc
fcmovne
mov
mov
ja
push
fildl
aas
cmp
jae
xchg
pushl
xor
loope
push
cmp
cmp
mull
int3
xchg
dec
jb
ss
cs
lds
inc
push
mov
loope
push
ja
and
cmp
jae
test
mov
in
imulb
inc
mov
incl
je
addl
call
jmp
pop
sbb
push
out
and
int3
int3
xchg
push
push
bnd
inc
push
subl
je
lret
xchg
push
jb
divb
ret
adc
inc
push
ja
xor
push
jae
xchg
ljmp
push
je
inc
lahf
push
out
fidivrs
adc
jbe
inc
fildl
sarl
push
jae
push
outsb
out
xor
leave
xlat
jo
inc
push
ljmp
dec
jae
int3
pop
std
jae
dec
jae
or
je
dec
fnstsw
outsl
xchg
ljmp
dec
jae
int3
lcall
jp
pop
pop
lahf
loop
push
jae
negl
jae
dec
jae
int3
xlat
fs
push
xor
ljmp
jae
push
and
push
stc
fidivrl
push
jae
test
imul
jae
int3
xlat
insb
loopne
push
out
inc
fbld
inc
push
jnp
dec
jae
lret
imul
jbe
dec
insl
out
ds
jno
dec
insl
out
fdivr
out
push
jae
push
outsb
out
xchg
inc
push
je
aaa
inc
stc
mov
inc
dec
jae
les
jbe
push
outsb
out
fdivrp
out
push
jae
jns
subl
jae
or
push
loopne
push
je
inc
push
pop
test
push
loopne
push
mull
cmp
lahf
inc
push
je
lds
subl
je
lret
xchg
push
push
shlb
push
jmp
out
fnstsw
ljmp
or
cmp
push
adc
mov
fistps
inc
push
ljmp
dec
jae
lret
mov
pop
add
je
ss
out
fidivrs
mov
ljmp
dec
jae
les
stc
lret
jae
mov
out
leave
loope
push
pop
stc
lret
xlat
pop
loopne
push
pushl
xor
loope
push
ljmp
dec
jae
int3
lahf
push
jae
dec
jae
int3
xchg
xor
inc
call
std
sub
movl
in
ljmp
or
je
dec
fnstsw
outsl
xchg
sub
inc
push
je
add
addr16
push
je
xchg
pushl
dec
jae
les
pop
push
int3
xchg
pop
jb
ret
inc
fimuls
out
shr
dec
xchg
pop
jb
ret
inc
fimuls
je
bound
mov
pop
cld
lret
xchg
pop
jb
ret
inc
fimuls
out
push
std
cmp
fidivrs
loop
push
or
xchg
pushl
dec
jae
lret
jb
pushl
dec
jae
les
inc
shrb
fidivs
inc
faddp
mov
inc
push
ljmp
push
je
lret
xchg
push
jb
jp
sub
fcmovnb
or
enter
cmp
sub
std
xor
std
cmp
aad
add
sub
cmpsl
inc
push
mov
sub
int3
xor
mov
cmp
out
pop
xchg
cwtl
ljmp
jae
int3
push
fadds
mov
sbb
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
jne
inc
push
push
xchg
cli
jne
pop
out
mov
sub
repz
sbbb
jmp
jbe
inc
cmp
mov
add
in
sbb
gs
fadds
push
rorb
and
adc
test
lods
mov
ljmp
push
lret
cmpb
mov
add
std
inc
fstpt
addr16
mov
push
arpl
std
call
inc
adc
mov
xchg
cmp
adc
sar
scas
cmpsl
arpl
gs
mov
dec
push
pusha
test
xor
cmp
jo
push
arpl
mov
jmp
cmp
rorl
jb
mov
adc
inc
ficomps
fldenv
add
sub
pop
sbb
inc
jmp
stos
aam
push
dec
push
rol
sbb
xor
mov
lret
scas
leave
xchg
push
and
fnstenv
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
aas
sub
push
xor
les
in
push
je
adcb
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
jne
inc
push
ja
inc
push
jae
inc
push
cwtl
out
push
mov
xor
dec
lods
mov
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
lret
jmp
dec
mov
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
je
inc
push
inc
pop
js
loopne
imul
cmp
in
xor
pop
adc
not
aaa
mov
iret
add
mov
cmp
mov
icebp
dec
sbb
enter
dec
jmp
imul
and
imul
inc
es
jecxz
mov
lret
leave
push
clc
in
aam
pop
cmp
dec
jge
and
rcr
rolb
jno
nop
push
push
adc
call
xor
push
adc
or
mov
jnp
xor
insl
jne
dec
xor
add
xchg
int
pushf
movsb
or
mov
aaa
rcl
jae
sar
jp
xchg
pop
xor
jp
push
sub
jb
or
push
xchg
push
and
mov
jne
jae
clc
arpl
push
mov
xor
sbb
subl
sub
push
stos
push
das
sbbb
cmp
loopne
orl
dec
aas
aaa
aad
cmp
mov
repz
popa
cs
mov
cmp
adc
or
adc
mov
push
push
shl
stos
fsubl
sub
fcmovnb
xchg
mov
fadd
dec
lock
fisubs
sub
cmp
loopne
and
filds
rcll
xor
andb
in
mov
add
in
add
add
add
add
add
add
add
test
add
and
add
js
add
mov
add
and
add
jns
add
mov
add
and
add
jp
add
add
and
add
mov
add
add
add
add
mov
add
and
add
add
bound
add
in
add
outsb
xchg
add
add
add
add
add
jo
add
lock
add
pushf
add
or
add
mov
add
add
add
add
sahf
add
fsubs
add
sbb
add
pusha
add
test
add
add
mov
addb
xor
add
loopne
add
out
addb
cld
addb
or
add
and
add
addl
add
add
add
addl
add
addl
add
addl
add
addb
adc
add
sub
add
cmp
add
push
addb
push
add
jbe
add
mov
add
mov
add
mov
addb
addb
in
add
out
addb
add
add
addl
xor
add
inc
addl
pop
addl
outsb
addl
jp
add
nop
addl
movsb
addl
mov
add
lret
add
addl
out
addl
clc
addl
add
add
push
test
add
test
add
test
add
add
test
add
add
test
add
add
add
test
add
test
add
test
add
test
add
add
cmp
add
dec
test
add
add
je
add
addb
add
test
add
test
add
test
add
test
add
xchg
add
xchg
add
xchg
add
xchg
add
add
add
outsb
xchg
add
add
mov
add
les
add
out
add
clc
xchg
add
xchg
add
xchg
add
add
inc
xchg
add
add
bound
add
test
add
lods
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
jle
add
mov
add
mov
add
mov
mov
add
add
add
mov
add
mov
add
mov
add
add
cmp
add
pusha
mov
add
add
test
add
mov
mov
add
mov
add
mov
add
mov
add
add
add
mov
add
mov
add
add
inc
mov
add
add
js
add
mov
add
mov
add
int3
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
orb
add
add
enter
in
add
repnz
add
mov
add
mov
add
mov
add
add
push
mov
add
add
js
add
mov
add
add
aam
add
in
mov
add
add
lea
add
add
pop
lea
add
add
add
add
test
add
stos
lea
add
lea
add
lea
add
lea
add
lea
add
mov
add
mov
add
mov
add
add
pop
mov
add
add
xchg
add
mov
add
les
add
add
add
cli
mov
add
popl
add
popl
add
popl
add
add
inc
popl
add
add
pop
popl
add
add
jle
add
xchg
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
popl
add
nop
add
sbb
add
xor
add
push
nop
add
bound
add
js
add
mov
add
mov
add
rclb
add
nop
add
clc
nop
add
push
xchg
add
adc
add
xor
add
dec
xchg
add
fs
add
outsb
xchg
add
jp
add
nop
xchg
add
test
add
mov
add
lret
add
xchg
add
lock
add
add
add
sbb
add
es
add
ss
add
dec
xchg
add
add
add
insb
xchg
add
adcb
add
xchg
add
rclb
add
clc
xchg
add
push
xchg
add
push
xchg
add
sub
add
inc
xchg
add
push
xchg
add
xchg
add
jl
add
mov
add
mov
add
enter
fcoml
add
add
add
add
cmp
add
dec
xchg
add
pop
xchg
add
add
add
jl
add
xchg
xchg
add
movsb
xchg
add
mov
add
int3
xchg
add
out
add
add
add
xor
add
dec
xchg
add
pusha
xchg
add
jle
add
mov
add
enter
fcoms
add
or
add
cmp
add
pusha
xchg
add
je
add
xchg
add
mov
xchg
add
cld
xchg
add
push
xchg
add
es
add
ds
add
push
xchg
add
bound
add
cmpsb
xchg
add
mov
xchg
add
in
xchg
add
add
add
sbb
add
ds
add
push
cwtl
add
push
cwtl
add
jl
add
mov
add
mov
cwtl
add
out
cwtl
add
add
add
xor
add
fs
add
jp
add
mov
add
mov
add
rcrb
add
clc
cltd
add
adc
add
inc
lcall
pusha
lcall
mov
add
enter
in
add
out
lcall
push
fwait
add
es
add
xor
add
bound
add
jl
add
cwtl
fwait
add
mov
fwait
add
lret
add
fwait
add
add
add
add
add
pushf
add
inc
pushf
add
pop
pushf
add
outsb
pushf
add
jle
add
xchg
pushf
add
test
add
mov
pushf
add
ficomps
add
popf
add
sbb
add
dec
popf
add
outsb
popf
add
test
add
scas
popf
add
popf
add
fcomps
add
add
add
and
add
cmp
add
dec
sahf
add
fs
add
js
add
mov
add
sahf
add
ficompl
add
cld
sahf
add
push
lahf
add
and
add
inc
lahf
add
push
lahf
add
bound
add
jle
add
mov
add
mov
lahf
add
fcomps
add
cli
lahf
add
push
mov
add
sub
add
inc
mov
add
pop
mov
add
jle
add
nop
mov
add
mov
add
les
add
in
add
clc
mov
add
adc
add
sub
add
dec
mov
add
mov
add
test
add
movsb
mov
add
shlb
add
mov
add
add
add
and
add
inc
mov
add
pop
mov
add
test
add
scas
mov
add
into
mov
add
call
mov
add
push
mov
add
inc
mov
add
bound
add
xchg
add
cmpsb
mov
add
into
mov
add
lock
add
adc
add
movsb
add
xor
add
add
add
pop
movsb
add
bound
add
add
jle
add
mov
add
add
mov
add
mov
movsb
add
into
movsb
add
fisubl
add
movsb
add
cld
movsb
add
or
add
sbb
add
sub
add
cmp
add
inc
movsl
add
push
movsl
add
pop
movsl
add
push
movsl
add
mov
add
mov
movsl
add
mov
add
lret
add
movsl
add
loop
add
in
movsl
add
mulb
add
or
add
push
cmpsb
add
sub
add
cmp
add
dec
cmpsb
add
push
cmpsb
add
pop
cmpsb
add
je
add
jl
add
test
add
pushf
cmpsb
add
stos
cmpsb
add
mov
add
shlb
add
cmpsb
add
loopne
add
repnz
add
cld
cmpsb
add
push
cmpsl
add
sbb
add
xor
add
inc
cmpsl
add
dec
cmpsl
add
push
cmpsl
add
pop
cmpsl
add
push
add
je
add
add
add
mov
add
scas
cmpsl
add
ret
add
cmpsl
add
call
test
add
test
add
add
add
push
popa
je
inc
jo
outsb
fs
add
push
je
push
outsl
dec
outsb
je
js
add
push
imul
add
je
inc
imul
dec
popa
insl
gs
add
push
insb
popa
je
jbe
push
add
push
je
inc
jo
dec
push
add
xchg
add
insb
push
outsb
gs
popa
jo
push
add
fadds
push
popa
je
push
gs
outsl
jbe
inc
imul
add
add
inc
gs
gs
dec
gs
add
xchg
add
je
inc
imul
jae
add
jo
imul
cli
add
inc
gs
gs
dec
gs
add
incb
push
dec
inc
gs
gs
push
popa
insb
jne
push
add
xchg
add
jae
jb
outsb
je
inc
add
xor
push
dec
push
gs
popa
insb
jne
push
add
push
inc
imul
add
je
inc
insl
jo
push
add
sbb
gs
gs
outsl
outsl
insb
push
push
push
popa
insb
jne
push
add
inc
add
jb
push
add
je
push
gs
outsl
jbe
inc
popa
arpl
insb
popa
jae
push
add
mov
push
popa
je
dec
jae
outsl
outsl
je
add
push
je
push
gs
outsl
inc
jne
push
add
aaa
add
push
je
inc
jne
push
add
push
popa
je
inc
fs
popa
arpl
insb
popa
jae
push
add
push
je
push
outsl
dec
outsb
je
add
push
inc
js
outsb
jae
outsl
outsb
push
add
xlat
add
je
push
gs
outsl
jbe
inc
js
outsb
jae
outsl
outsb
push
add
mov
push
inc
push
add
inc
add
jb
push
add
push
je
push
inc
push
jp
push
je
push
jb
insl
push
add
insb
add
je
inc
jo
outsb
fs
add
push
je
inc
jo
push
add
push
jb
inc
popa
outsb
outsl
outsb
imul
push
add
add
jb
popa
je
jne
push
add
push
jb
jbe
dec
jne
bound
push
add
dec
jae
add
outsl
add
jb
je
dec
push
add
push
add
jb
jne
push
add
add
je
push
je
imul
je
add
in
push
popa
je
push
je
imul
je
add
dec
add
jb
insl
jo
dec
push
add
inc
imul
outsb
jae
outsl
outsb
inc
add
aad
push
popa
je
push
gs
outsl
jbe
inc
insb
popa
outsb
imul
std
add
inc
gs
gs
push
popa
insb
jne
inc
add
test
push
jb
arpl
jns
add
xchg
add
je
inc
jb
popa
je
inc
jb
insl
push
jb
push
add
push
add
inc
gs
popa
insb
jne
push
add
push
je
push
je
push
add
push
je
inc
insl
jo
add
insb
ja
jo
cs
insb
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
sub
dec
insl
popa
addr16
imul
je
outsl
jns
sub
dec
insl
popa
addr16
imul
popa
je
add
push
add
outsl
jo
jb
jns
push
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
push
jb
jo
jb
jns
push
add
adc
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
add
add
popa
addr16
imul
ja
add
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
inc
push
dec
xor
cs
insb
add
jno
inc
gs
jns
je
insl
inc
imul
jns
add
gs
outsb
fs
inc
imul
jb
popa
je
inc
imul
gs
push
dec
outsb
outsw
add
inc
gs
je
dec
popa
outsb
fs
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
outsl
outsb
jae
insb
gs
outsl
fs
cmp
inc
gs
inc
dec
inc
push
add
jnp
inc
gs
jns
je
insl
push
imul
insb
gs
imul
jo
outsb
inc
jbe
outsb
je
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
imul
outsl
dec
outsl
arpl
inc
imul
ljmp
popa
insb
inc
insb
insb
outsl
arpl
add
insb
outsl
jae
dec
popa
outsb
fs
gs
add
je
imul
bound
gs
add
repnz
imul
jne
jb
add
jge
dec
jo
outsb
dec
jne
gs
add
mov
inc
jb
popa
je
inc
imul
outsb
addr16
add
cmp
inc
imul
je
imul
inc
imul
jne
arpl
add
add
insb
gs
jae
push
gs
popa
jo
outsl
jb
add
inc
add
arpl
push
add
push
je
inc
jns
gs
outsl
push
imul
aad
inc
gs
jb
jbe
push
jns
gs
add
popa
je
dec
jne
gs
add
jle
dec
jo
outsb
dec
jne
gs
add
in
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
dec
add
arpl
outsb
inc
add
add
inc
push
dec
jne
je
inc
jns
add
add
fs
imul
js
add
xlat
add
outsb
insl
popa
jo
imul
insb
gs
add
je
jne
jb
outsb
je
push
add
repnz
je
imul
out
add
je
jb
outsl
arpl
fs
js
push
add
add
arpl
inc
add
add
dec
jae
bound
addr16
jb
jae
outsb
je
clc
add
inc
popa
fs
gs
fs
je
add
mov
inc
gs
push
dec
outsl
arpl
add
push
gs
imul
gs
add
add
je
imul
bound
gs
add
sbb
inc
js
je
jb
arpl
jae
es
gs
imul
jae
gs
push
imul
insb
gs
imul
inc
gs
imul
imul
jns
add
jle
inc
jb
popa
je
inc
imul
jns
add
xchg
inc
gs
gs
jo
popa
je
inc
add
dec
add
outsb
fs
gs
jne
arpl
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
insb
outsb
inc
add
lock
imul
jb
je
arpl
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
fadds
inc
gs
gs
inc
imul
gs
insl
gs
push
add
movsb
add
je
gs
imul
dec
jne
jo
je
bound
push
je
imul
add
popa
fs
imul
gs
jns
je
insl
inc
imul
jns
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
push
dec
inc
dec
xor
cs
insb
add
sldt
je
jo
outsb
inc
imul
add
or
inc
gs
imul
inc
add
add
outsl
outsl
jae
inc
outsl
outsb
je
add
add
imul
add
add
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
push
popa
addr16
gs
jo
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
push
add
je
jo
outsb
inc
imul
add
adc
push
popa
addr16
gs
jo
insb
addr16
add
outsb
je
insb
addr16
add
add
imul
js
add
inc
imul
push
add
outsl
jae
inc
outsl
outsb
je
add
add
je
popa
jbe
inc
imul
add
adc
inc
gs
popa
jbe
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
inc
add
addr16
gs
gs
dec
gs
add
add
jns
je
gs
gs
jae
inc
outsl
outsb
je
js
add
popa
insb
imul
add
imul
jbe
arpl
popa
je
bound
add
inc
gs
arpl
imul
imul
outsb
je
outsl
insb
add
fldl
inc
gs
gs
push
gs
imul
jo
outsb
push
push
push
outsl
imul
xchg
dec
jae
popa
insb
imul
je
inc
gs
jb
jo
outsl
jb
pop
add
je
jb
arpl
outsb
popa
bound
insb
popa
addr16
add
push
outsb
insb
outsl
arpl
gs
imul
bound
add
add
gs
push
gs
imul
imul
gs
jne
jb
push
popa
insb
jne
inc
js
add
push
add
arpl
outsl
imul
gs
bound
jae
imul
gs
arpl
imul
imul
outsb
gs
add
add
popa
jb
push
gs
imul
inc
outsl
outsb
jbe
jb
push
je
imul
outsl
push
imul
jo
outsb
push
inc
dec
popa
outsb
popa
addr16
add
lods
add
inc
jb
gs
gs
outsl
jb
add
add
je
arpl
outsw
jb
popa
je
outsl
outsb
add
push
gs
outsb
jne
dec
gs
add
add
imul
insb
push
gs
popa
je
jbe
push
inc
add
dec
add
je
arpl
imul
imul
arpl
add
addr16
insb
jne
push
xchg
add
imul
arpl
jne
je
imul
je
jae
jb
popa
insl
gs
add
pop
add
je
imul
imul
je
outsl
jb
je
add
inc
gs
jae
jb
popa
insl
gs
add
addb
gs
gs
popa
insb
jne
inc
js
add
jg
push
gs
gs
popa
insb
jne
inc
js
add
cmp
push
gs
jb
popa
je
dec
gs
js
add
dec
jo
outsb
push
outsl
insb
imul
gs
outsb
je
imul
insb
push
add
pusha
add
je
jb
arpl
outsl
addr16
popa
outsb
fs
add
push
add
addr16
outsb
jne
dec
gs
js
add
add
addr16
jb
popa
je
dec
gs
add
inc
gs
imul
push
gs
imul
add
popa
outsb
addr16
gs
imul
imul
push
gs
gs
imul
jne
add
pop
add
je
outsl
imul
outsb
outsw
jb
popa
je
outsl
outsb
add
add
jns
je
outsb
push
popa
outsb
outsl
insl
add
fiadds
inc
gs
imul
outsb
je
outsl
jne
arpl
aas
add
addr16
gs
gs
dec
gs
add
push
gs
jo
outsb
dec
gs
add
push
inc
push
dec
xor
cs
insb
add
inc
add
inc
push
dec
outsl
je
data16
add
dec
inc
gs
outsl
insb
fs
popa
je
push
add
in
add
insl
insl
popa
outsb
fs
imul
addr16
add
sbb
inc
jb
addr16
jne
jb
inc
imul
push
dec
inc
gs
popa
insb
insb
outsl
arpl
outsb
add
inc
gs
imul
add
mov
push
push
js
arpl
gs
add
push
dec
inc
gs
gs
je
jo
outsl
insb
fs
add
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
push
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
gs
insb
inc
js
arpl
gs
add
add
inc
imul
jb
outsb
je
add
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
mov
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
push
add
insb
insb
inc
js
arpl
gs
js
add
add
addr16
jne
jb
inc
imul
push
dec
inc
imul
je
outsl
outsb
push
add
inc
add
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
push
dec
inc
dec
dec
xor
cs
insb
add
push
je
gs
push
outsl
fs
push
je
imul
jg
push
arpl
gs
imul
je
js
add
inc
jb
popa
je
inc
outsl
outsb
je
add
dec
imul
cli
add
insb
imul
inc
gs
imul
outsl
jb
add
push
gs
insb
imul
je
add
imul
arpl
jae
bound
sub
inc
gs
gs
inc
js
outsb
je
outsl
imul
add
inc
gs
gs
jb
jae
inc
outsl
insb
outsl
jb
add
insb
jns
imul
inc
gs
outsb
inc
outsl
js
jge
push
popa
jbe
inc
inc
add
repz
gs
dec
bound
arpl
pop
add
popa
jns
gs
inc
imul
jb
popa
je
dec
gs
inc
imul
gs
bound
arpl
add
add
je
gs
inc
insb
imul
dec
push
je
inc
push
add
mov
dec
popa
jo
outsl
fs
add
gs
je
inc
imul
add
gs
je
push
outsl
insb
imul
add
add
je
imul
add
gs
inc
inc
add
dec
add
insb
insb
push
outsb
add
jb
popa
je
push
arpl
outsb
add
inc
js
push
gs
arpl
imul
xor
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
jb
je
push
add
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
aas
add
gs
je
inc
inc
push
add
push
imul
dec
jb
inc
js
add
inc
imul
outsl
jb
add
outsl
dec
push
add
insb
add
arpl
insb
add
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
jne
push
add
sub
inc
insb
outsl
jae
dec
gs
inc
imul
je
gs
inc
js
outsb
je
outsl
imul
inc
jae
popa
jo
add
pop
add
gs
je
push
outsb
add
inc
jb
popa
je
push
popa
je
gs
inc
jb
jae
add
pop
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
je
jne
inc
add
dec
add
gs
je
inc
outsl
outsb
je
outsb
imul
test
push
gs
arpl
push
arpl
dec
add
gs
je
inc
outsl
outsb
je
outsb
imul
mov
push
gs
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
outsl
insb
outsl
jb
add
add
gs
je
inc
inc
inc
add
add
je
insb
je
add
push
gs
inc
insb
imul
inc
js
insb
jne
gs
insb
imul
pop
add
je
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
xor
cs
insb
add
imul
outsb
addr16
jns
gs
js
or
push
popa
jb
popa
outsb
je
insb
gs
jb
add
inc
insb
insb
outsl
arpl
jb
outsb
addr16
jns
gs
outsb
add
add
jb
popa
outsb
je
push
push
jns
add
add
je
arpl
gs
bound
arpl
add
gs
jb
popa
jns
jb
popa
je
add
add
gs
jb
popa
jns
gs
insb
gs
outsb
je
sbb
push
popa
gs
jb
popa
jns
jne
inc
insb
gs
outsb
je
movl
jb
outsl
jb
outsb
outsw
add
or
push
popa
jb
popa
outsb
je
outsl
jo
add
add
gs
jb
popa
jns
arpl
jae
inc
popa
je
add
add
jb
popa
outsb
je
outsl
jo
dec
outsb
add
leave
add
gs
je
inc
jb
outsl
jb
outsb
outsw
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
pop
add
jb
popa
outsb
je
outsb
imul
inc
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
dec
outsl
popa
fs
imul
add
add
gs
jb
popa
jns
outsb
popa
arpl
jae
inc
popa
je
add
je
imul
dec
outsb
add
adc
push
popa
gs
jb
popa
jns
gs
inc
outsl
jne
add
mov
fs
jns
gs
imul
jae
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
add
gs
jb
popa
jns
gs
inc
outsl
jne
add
add
inc
jb
gs
je
imul
gs
jb
outsl
jb
outsb
outsw
add
push
add
jae
je
imul
add
imul
jo
dec
imul
jne
xor
cs
insb
add
cmc
add
arpl
jb
outsb
addr16
imul
popa
jb
gs
add
pop
add
jb
insb
gs
jb
add
lahf
add
jb
insb
imul
insb
xor
add
add
jb
insb
insb
push
imul
outsl
js
add
add
outsb
imul
outsb
pop
push
gs
gs
jae
pop
push
jb
js
add
rolb
push
jo
push
gs
gs
jae
push
jb
je
gs
jo
add
repz
arpl
jb
outsb
addr16
imul
outsl
insl
jo
jae
push
add
roll
dec
fs
insb
insb
push
outsb
jb
imul
outsl
js
add
push
jo
inc
imul
gs
jne
push
push
add
add
fs
jb
insl
push
je
imul
push
jo
push
gs
gs
imul
je
dec
outsb
outsw
push
add
or
push
jne
fs
outsl
push
je
imul
dec
fs
je
bound
jb
popa
jb
imul
je
outsl
outsb
add
inc
push
je
push
je
bound
data16
pop
push
gs
gs
jae
add
or
push
jne
fs
outsl
push
je
imul
inc
push
je
push
je
bound
data16
inc
outsl
jne
je
gs
add
jo
gs
insb
jbe
inc
imul
adc
fs
je
bound
data16
inc
fs
gs
add
arpl
jb
gs
outsb
jb
imul
add
add
jb
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
push
jne
fs
jb
popa
je
add
mov
push
jo
push
popa
imul
jo
imul
jo
push
gs
jb
push
outsl
push
gs
data16
add
je
push
je
bound
data16
inc
outsl
outsb
outsb
arpl
jnp
push
jo
inc
imul
arpl
inc
jb
add
sbb
inc
push
je
push
je
bound
data16
inc
bound
push
gs
gs
gs
gs
jae
add
imul
outsb
pop
push
jne
jb
dec
outsb
je
jb
popa
arpl
push
jb
js
add
push
jo
inc
imul
jb
add
xchg
add
arpl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
add
je
push
je
bound
data16
dec
outsb
jbe
imul
add
jb
gs
gs
popa
insb
insb
xor
add
add
jb
insb
gs
insb
insb
outsl
arpl
add
les
push
jo
push
gs
gs
imul
inc
js
sbb
inc
push
je
push
je
bound
data16
inc
bound
push
gs
gs
jne
jb
dec
outsb
je
jb
popa
arpl
add
add
arpl
jb
outsb
addr16
jb
gs
add
and
dec
push
outsb
imul
outsb
pop
inc
fs
gs
push
jb
js
add
add
je
push
je
bound
data16
inc
imul
arpl
add
arpl
outsb
imul
push
je
imul
imul
push
inc
push
push
xor
fs
insb
add
inc
pop
pop
jae
jb
arpl
add
cmp
push
je
push
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
inc
arpl
pop
add
dec
popa
jo
imul
arpl
outsb
add
mov
dec
outsb
imul
push
imul
addr16
jb
outsb
je
add
popa
je
insb
add
int3
add
insb
inc
jb
popa
je
push
imul
add
inc
gs
gs
dec
gs
test
push
je
inc
outsl
outsb
jbe
jb
push
imul
outsl
fs
je
imul
push
je
dec
jo
outsb
inc
jne
jb
outsb
je
jae
jb
add
jne
jb
push
jns
bound
imul
bound
arpl
add
insb
inc
outsl
insl
jo
jb
dec
gs
outsl
jb
add
out
add
je
push
popa
insb
imul
je
inc
gs
jb
jo
outsl
jb
add
add
insb
dec
outsb
addr16
push
imul
inc
gs
popa
jns
js
arpl
imul
push
je
inc
js
outsb
fs
popa
jb
gs
outsb
je
addr16
imul
add
push
gs
arpl
imul
je
jp
dec
je
jo
outsb
push
push
push
outsl
imul
mov
dec
je
jne
jb
push
arpl
imul
je
pop
pop
pop
ja
jae
jo
add
add
je
push
jne
jb
inc
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
push
add
add
je
push
outsb
imul
dec
gs
dec
add
sub
je
dec
gs
push
outsl
push
outsb
imul
add
add
push
popa
imul
insb
gs
bound
arpl
add
insb
dec
outsb
jae
jb
inc
insb
gs
outsb
je
outsb
gs
arpl
insb
add
popl
push
je
inc
insb
gs
jb
imul
je
jne
insb
imul
imul
add
dec
je
jo
outsb
dec
gs
daa
add
je
dec
gs
push
je
imul
imul
jb
outsb
add
je
inc
outsl
jo
dec
jne
add
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
push
add
xchg
add
je
push
gs
popa
arpl
arpl
imul
imul
jnp
push
je
inc
jo
outsb
fs
outsb
imul
push
je
imul
ja
jae
insl
jo
add
pop
jae
ja
jb
outsb
je
add
ret
arpl
je
add
xchg
je
push
gs
popa
arpl
arpl
imul
imul
fldl
je
push
outsb
ja
outsb
add
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
push
jb
arpl
jae
in
add
insb
inc
gs
gs
push
gs
jne
arpl
pop
add
insb
inc
gs
arpl
aas
add
push
jb
je
inc
imul
insb
dec
outsb
imul
inc
outsb
gs
arpl
insb
add
jb
add
dec
je
jo
outsb
inc
imul
je
popa
imul
je
jo
gs
bound
arpl
add
jne
jb
push
jns
je
insl
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
jb
push
je
push
jne
inc
arpl
gs
outsb
imul
jb
outsb
add
gs
insl
outsl
jbe
add
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
outsb
je
insb
insb
cs
insb
add
push
je
imul
inc
dec
push
dec
inc
add
dec
insb
gs
gs
gs
imul
jne
add
dec
insb
gs
gs
gs
jae
jb
jns
add
inc
outsl
dec
outsb
imul
add
add
push
gs
gs
jae
dec
popa
jb
push
je
add
jno
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
push
je
dec
jae
je
jb
addr16
imul
gs
inc
insb
outsl
bound
inc
jb
insl
push
je
gs
insl
add
inc
add
gs
jne
add
sbb
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
inc
outsl
dec
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
inc
outsl
push
gs
jb
push
outsl
push
gs
data16
push
add
dec
popa
jb
push
je
jb
popa
arpl
add
popa
je
dec
dec
outsl
arpl
jns
gs
outsb
dec
inc
insb
outsl
bound
add
add
inc
gs
outsb
je
jb
popa
arpl
outsb
fs
gs
gs
jae
push
je
gs
insl
add
imul
jbe
imul
popa
jae
dec
bound
arpl
add
addr16
jb
popa
je
inc
outsl
arpl
insb
add
sbb
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
add
inc
jb
gs
outsb
jne
gs
imul
jae
inc
add
gs
gs
outsb
jne
push
gs
jae
dec
add
dec
outsb
imul
inc
js
add
inc
outsl
push
imul
popa
jae
dec
bound
arpl
add
inc
gs
popa
insb
insb
outsl
arpl
jae
inc
outsl
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
add
popa
je
dec
insb
gs
fs
jae
dec
outsl
insb
fs
dec
add
gs
outsb
imul
imul
imul
jae
inc
imul
popa
insl
add
xor
inc
outsl
inc
gs
insb
popa
jae
dec
bound
arpl
insl
add
push
gs
jb
js
inc
insb
popa
outsb
imul
jae
push
je
dec
jo
outsb
push
je
jb
add
push
add
dec
popa
jb
push
je
jb
push
dec
outsb
je
jb
popa
arpl
outsb
push
je
gs
insl
add
popa
je
dec
je
insl
dec
outsl
outsb
imul
inc
gs
jne
outsb
imul
arpl
bound
outsl
insb
xor
cs
insb
add
add
je
insb
addr16
je
insl
push
gs
inc
add
inc
push
popa
imul
outsb
add
pop
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
add
fs
je
imul
inc
gs
gs
popa
addr16
outsl
jae
xor
inc
gs
insb
addr16
je
insl
add
xor
inc
gs
insb
addr16
je
insb
dec
inc
add
jae
push
gs
gs
jae
inc
inc
add
add
outsb
dec
gs
jo
add
or
push
jb
outsb
jae
popa
je
dec
gs
popa
add
pop
add
imul
imul
inc
outsl
jb
popa
je
add
loop
inc
outsb
popa
bound
imul
adc
inc
imul
add
mov
inc
gs
jns
je
insl
dec
gs
imul
inc
gs
imul
add
add
insb
insb
push
arpl
inc
add
imul
jae
addr16
add
movsl
add
je
imul
popa
arpl
outsb
je
add
push
outsb
jb
imul
popa
jae
push
add
pop
add
jo
push
arpl
sahf
add
je
insb
addr16
je
insl
push
gs
push
add
push
imul
popa
jae
inc
js
add
in
add
insb
insb
push
imul
inc
jb
popa
je
push
imul
inc
add
push
outsl
jae
dec
gs
popa
addr16
add
js
inc
jb
popa
je
push
imul
push
add
add
insb
insb
dec
gs
dec
outsl
outsl
imul
add
inc
gs
je
jo
imul
fiaddl
inc
jb
ja
gs
push
add
push
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
popa
jb
jb
jbe
add
add
je
imul
jae
add
add
je
outsl
jb
addr16
jne
fs
imul
add
je
outsb
jne
adc
push
outsb
jb
imul
popa
jae
inc
add
add
je
gs
popa
addr16
add
jne
dec
outsb
jne
add
add
je
popa
jo
jne
add
loopne
inc
outsb
popa
bound
outsb
jne
je
insl
add
xor
dec
data16
je
arpl
lahf
add
je
imul
outsb
addr16
add
pop
add
fs
ja
imul
in
inc
outsb
fs
imul
add
je
imul
arpl
add
fs
jne
jae
jb
add
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
imul
js
push
add
dec
add
arpl
outsb
jne
je
insl
add
add
je
jb
arpl
arpl
add
je
insb
imul
je
pop
add
imul
popa
jae
push
add
mov
insb
popa
je
push
arpl
add
jae
popa
addr16
gs
fildl
dec
jae
arpl
imul
imul
outsb
outsl
ja
gs
popa
addr16
add
inc
add
popa
jb
jo
gs
add
scas
add
je
imul
jb
popa
fs
jb
arpl
jae
add
xor
inc
gs
insb
addr16
je
insl
push
gs
push
add
je
outsl
jns
arpl
add
add
push
imul
xor
inc
push
ja
jb
add
pop
add
imul
popa
jae
inc
js
add
jmp
insl
inc
push
imul
add
add
jae
popa
addr16
outsl
js
add
jo
je
push
popa
addr16
add
enter
jbe
insb
imul
je
add
add
je
imul
outsb
addr16
add
mov
inc
outsl
arpl
add
addl
inc
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
fs
insl
popa
addr16
add
dec
add
arpl
insb
addr16
jne
je
outsb
add
inc
add
je
gs
je
je
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
push
imul
outsl
outsl
imul
mov
inc
gs
jb
jns
imul
add
imul
popa
jae
inc
add
flds
push
gs
imul
js
push
add
add
inc
imul
outsl
ja
add
inc
jne
jae
jb
push
push
inc
push
xor
cs
insb
add
lods
add
jae
imul
add
jo
add
and
arpl
add
push
add
jae
jo
arpl
pop
add
arpl
add
add
je
add
addr16
outsl
imul
addb
outsl
insb
add
or
ja
jae
jo
add
popa
jb
push
je
outsb
arpl
add
ja
jae
jae
outsb
add
add
jae
imul
pop
je
insb
insb
add
add
imul
add
jae
insb
jo
popa
add
add
jae
popa
insb
jo
popa
add
sub
outsl
imul
adc
aas
aas
xor
inc
push
inc
pop
dec
inc
pop
add
incb
popa
outsb
add
roll
pop
pop
jo
outsl
imul
pop
ja
jae
jne
add
js
je
add
add
jo
pop
imul
jae
jb
arpl
add
add
gs
insl
outsl
jbe
add
imul
pop
popa
fs
jae
pop
imul
add
ja
outsl
insb
add
ja
jae
outsl
insb
add
adc
aas
aas
xor
gs
imul
inc
inc
inc
pop
pop
add
dec
add
jae
imul
add
add
je
popa
add
imul
pop
ja
outsl
jo
outsb
add
add
bound
outsl
ja
jae
add
pop
gs
gs
pop
push
gs
add
ret
add
jae
gs
bound
add
and
insl
insl
imul
arpl
jae
sbb
insb
outsb
add
lahf
add
insb
je
ja
add
insb
add
pop
ja
imul
jae
jo
imul
pop
inc
dec
jo
ja
add
ja
jae
outsb
add
call
insl
fs
outsb
add
add
jne
arpl
insb
add
outsl
ja
jb
add
outsb
je
add
pop
inc
js
push
push
js
gs
imul
jae
popa
outsb
add
jb
les
pop
pop
jo
pop
outsl
jae
gs
add
arpl
outsl
jne
add
popa
imul
imul
outsb
imul
pop
imul
filds
arpl
add
add
insl
jae
pop
gs
je
add
outsb
add
add
jae
je
popa
jo
pop
je
jo
add
pop
add
push
add
pop
gs
outsb
outsl
add
cmp
arpl
pop
jne
ja
outsb
xor
add
pop
inc
dec
popa
arpl
add
pop
ja
jo
imul
add
je
insl
add
ja
jae
jo
add
adc
pop
arpl
js
je
push
add
je
je
push
add
insl
jo
add
add
arpl
arpl
add
popf
add
insb
je
popa
add
xchg
add
data16
jne
push
jbe
jb
cs
insb
add
lldt
jb
jne
jb
push
popa
insb
jne
push
add
push
add
jb
jne
jb
push
popa
insb
jne
inc
add
or
push
gs
popa
outsb
addr16
addr16
popa
insl
gs
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
imul
push
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
imul
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
push
dec
dec
dec
cs
insb
