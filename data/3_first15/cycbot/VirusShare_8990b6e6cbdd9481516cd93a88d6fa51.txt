rorb
dec
clc
lea
repz
add
add
jnp
call
pop
popf
push
mov
pop
daa
mov
lods
fwait
bound
mov
or
add
push
add
add
add
test
adc
and
mov
js
mov
aas
sub
add
add
add
lods
loopne
dec
adcl
add
cmpsl
inc
add
sbb
das
in
sub
cmpsb
add
add
or
or
add
push
add
add
sbb
lahf
dec
fwait
imul
pop
sbb
leave
or
mov
and
ret
xor
pop
push
add
or
clc
dec
sbb
add
add
aas
adc
outsb
test
out
or
mov
add
je
fwait
test
mov
call
popa
pop
je
mov
add
add
mov
inc
add
jle
mov
add
add
adc
adc
lcall
dec
addr16
add
test
mov
add
ds
scas
mov
mov
jbe
cmc
test
mov
icebp
mov
add
xor
add
mov
add
xchg
lcall
sbb
or
add
mov
mov
add
add
icebp
mov
dec
sub
pop
fidivrs
mov
add
inc
and
arpl
add
and
mov
jno
add
add
adc
dec
movsl
test
or
mov
add
lahf
fadd
clc
fdivs
gs
add
add
xor
test
or
cwtl
sbb
int3
adc
out
push
mov
add
gs
sub
add
dec
popf
inc
add
add
das
jnp
add
aam
js
dec
in
movsb
add
aam
icebp
mov
repz
xchg
add
add
ja
add
mov
add
mov
jb
cli
or
cld
mov
iret
daa
xchg
daa
pop
lods
notl
ja
mov
add
cmp
add
mov
das
addb
sahf
xbegin
incl
dec
fsubs
mov
jb
lea
add
or
and
jno
test
pop
dec
insb
adc
mov
fdivrs
and
mov
test
and
lahf
lcall
cmp
mov
int3
std
add
mov
pop
cmp
push
and
add
add
cmp
test
int
repnz
add
add
add
push
aad
inc
inc
add
stos
addb
or
xlat
cmp
addb
add
inc
mov
in
sbb
movsb
add
add
mov
mov
add
pop
jo
xchg
mov
add
add
ret
dec
jmp
rolb
push
add
arpl
bound
mov
mov
add
mov
mov
push
add
dec
inc
xchg
dec
push
add
outsb
pop
push
add
add
lds
insb
add
call
jp
add
dec
pusha
add
mov
xchg
add
ds
push
add
mov
add
add
push
sub
fwait
dec
push
add
repnz
mov
dec
xchg
sbb
add
and
dec
add
push
add
fiaddl
push
inc
add
push
add
jl
imul
add
add
testb
int
dec
sbb
pop
stos
outsl
addl
add
cli
in
sti
mov
in
adc
lahf
xor
adc
fsubl
add
add
add
mov
loop
jmp
jle
lods
mov
in
sbb
pop
xchg
sbb
add
cltd
aam
dec
inc
add
adc
fcompl
add
fst
lods
ret
sbb
daa
jo
jg
imul
cmp
mov
js
mov
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
pushf
mov
push
loop
dec
xchg
addr16
rolb
pusha
add
mov
jne
add
mov
popf
popa
jae
pop
and
mov
jbe
xchg
push
add
enter
rolb
or
add
jmp
xchg
add
rolb
mov
mov
popf
xor
mov
out
ljmp
xchg
sti
test
inc
add
push
sub
outsb
je
sbb
add
jae
add
mov
add
add
xchg
add
pop
cmp
add
xchg
add
mov
ja
mov
cmpsl
lds
add
test
mov
dec
mov
add
lods
insb
inc
repnz
add
or
int3
sahf
push
cmp
push
dec
popa
jae
dec
xlat
lea
ret
add
add
inc
add
popa
and
mov
sbb
jbe
dec
arpl
movsb
add
rcll
fcmovu
popl
gs
cmp
mov
add
xor
mov
add
or
stc
cmp
lcall
xchg
add
pop
xchg
leave
inc
fwait
pop
clc
xchg
out
add
mov
shrl
addb
mov
loop
sbb
add
out
sahf
jae
xor
jl
add
add
gs
sti
repz
dec
sbb
add
mov
xor
iret
dec
xor
mov
xor
cmp
mov
adc
mov
jb
add
test
pop
aaa
ds
pop
stos
jl
add
repnz
dec
xchg
cmp
push
dec
dec
dec
mov
sub
add
add
push
ss
jne
sti
addb
xor
out
adc
push
add
add
mov
jnp
rolb
call
xlat
dec
scas
imul
fcompl
xchg
sub
xchg
lret
iret
add
cmp
add
imul
out
cmp
xchg
add
push
mov
inc
add
iret
mull
adc
fistpl
mov
adc
add
sahf
adc
mov
mov
data16
cmp
push
jmp
insb
and
mov
popf
sti
sub
add
cmpsl
lods
xor
lods
sti
fdivl
add
or
fsubp
lcall
mov
mov
xor
add
data16
add
xchg
insb
lret
addb
stc
test
add
jge
pop
cmp
add
add
pop
add
xchg
pop
sbb
add
add
test
cmp
add
add
xchg
movb
dec
out
subl
addb
pop
inc
mov
pop
sbb
movsl
add
int3
jb
and
mov
xchg
add
cld
repz
mov
mov
add
push
in
jno
dec
arpl
sub
repz
test
mov
push
add
adc
pop
inc
add
add
adc
addb
add
add
add
and
mov
add
scas
aas
xor
add
addb
mov
int3
int3
repnz
add
out
sti
cmp
fisttpl
mov
add
add
add
mov
rolb
sti
push
add
cld
imul
jecxz
sbb
add
jle
or
add
scas
fs
mov
add
rolb
pop
add
add
mov
add
and
lock
adc
push
add
jb
pusha
add
loope
add
add
mov
lahf
bound
mov
jp
iret
les
test
sbb
add
or
xchg
lock
mov
rolb
sbbl
mov
add
add
and
mov
dec
fcomps
stos
jb
cmpsl
popf
cmp
pop
iret
test
mov
jo
repnz
sahf
mov
add
mov
mov
add
jecxz
enter
sub
popa
loopne
addr16
mov
cmc
rcl
iret
xchg
pop
mov
mov
sarl
mov
ret
bound
mov
js
push
pusha
add
adc
and
out
gs
jg
add
add
pop
inc
add
add
pop
repz
in
into
mov
jge
jo
dec
push
adc
push
add
popa
fldl
add
fs
out
mov
add
mov
add
popf
pop
adc
js
add
pop
mov
cmc
addb
add
stos
into
mov
add
adc
mov
test
add
add
or
add
add
sbb
cmp
iret
pop
and
movb
add
xor
add
je
out
leave
addr16
add
xor
jecxz
mov
dec
dec
cmp
add
and
jle
add
cmc
mov
js
cwtl
add
add
or
lret
pop
mov
mov
add
ja
rolb
mov
mov
call
mov
add
add
add
jne
mov
clc
xlat
add
aas
pop
sub
add
add
rolb
dec
sbb
jno
bound
mov
add
or
add
sti
cmp
mov
add
mov
add
add
xchg
add
add
stos
jnp
jecxz
mov
jge
xchg
mov
and
addb
add
push
add
add
xor
push
in
mov
add
add
unpckhps
addb
aaa
cmp
adc
lock
jl
xchg
add
jmp
into
mov
jg
add
add
insl
popa
add
sbb
add
adc
mov
mov
aad
add
sbb
add
incl
mov
mov
outsb
addb
add
cld
xor
popa
xor
ja
insb
inc
pop
filds
add
add
add
add
dec
xor
jne
xchg
add
add
add
xchg
cmpl
cld
arpl
int3
ficomps
and
mov
add
dec
iret
sub
std
lds
push
jno
push
add
add
sub
rolb
bound
mov
add
aad
adc
mov
out
stos
or
addb
xchg
add
fldl
mov
jp
cmp
add
insb
les
call
add
push
add
movsl
jns
fdivrl
push
mov
add
push
add
movb
push
insl
mov
xchg
stc
add
faddp
add
lock
pusha
add
je
xchg
lock
rcrl
add
add
add
out
mov
test
adc
out
push
lea
pop
icebp
les
int
add
mov
push
sbb
lahf
out
ja
add
stc
inc
add
in
pop
pop
aam
pop
jnp
add
mov
ja
bound
mov
cmpps
lret
push
add
mov
lds
mov
add
decl
mov
jo
mov
mov
shll
add
es
add
add
mov
dec
fnstcw
add
or
mov
sbb
mov
xchg
jl
rolb
xor
or
add
and
ret
sub
mov
sbb
add
add
inc
and
mov
xchg
ja
add
add
add
add
enter
add
iret
enter
push
rolb
dec
push
pop
xor
dec
lahf
hlt
add
addr16
add
mov
imul
cmp
add
loopne
jns
add
ja
mov
fildll
bound
mov
xchg
dec
lahf
popf
mov
mov
mov
add
repz
enter
add
testb
cmp
add
cli
rorl
and
jecxz
cmp
insb
inc
cmc
xchg
add
loopne
sub
sbb
add
add
add
add
out
xchg
or
cmpsl
in
outsb
sub
add
add
inc
daa
fsts
pusha
add
add
mov
add
mov
jnp
jg
add
jg
and
mov
push
add
sub
cltd
xchg
add
scas
add
data16
cmp
add
mov
add
scas
std
dec
pop
mov
add
add
sub
rolb
insl
aam
mov
sbb
add
push
jae
cmpsb
add
add
dec
insl
xlat
jecxz
push
add
imul
rolb
mov
xchg
add
mov
int3
sahf
jecxz
lods
ds
inc
sbb
sub
sub
in
iret
pushf
inc
add
add
add
mov
add
push
add
in
mov
mov
add
ljmp
mov
add
push
add
add
lret
gs
add
sub
nop
add
or
adc
fcmovnu
std
addb
arpl
fistps
into
movl
enter
mov
push
enter
xor
ja
fcomps
sub
rolb
adc
iret
push
add
cmpsl
test
mov
or
adc
inc
mov
add
xchg
add
add
adc
fisttpll
mov
aas
pop
and
sbb
push
es
pop
cmp
add
jle
push
mov
fwait
popa
icebp
sub
dec
add
out
shrl
or
fisubrl
int
add
or
cld
sub
xchg
lods
popf
frstor
mov
pop
push
sub
lock
rcrl
loope
mov
gs
add
add
and
push
add
dec
pop
or
add
or
pop
fsubrl
add
adc
xchg
add
loope
pop
cltd
and
mov
sahf
cs
add
out
orl
jbe
lcall
add
xchg
sahf
cli
or
dec
movb
push
or
rorl
mov
mov
cmpsl
bound
mov
xchg
add
pop
or
adc
xchg
add
add
sub
add
mov
and
mov
mov
ljmp
lahf
or
or
add
js
enter
int
or
jb
repz
imul
mov
cli
in
icebp
mov
in
xor
add
add
mov
add
outsb
mov
rcrl
inc
clc
test
sti
dec
shrl
scas
mov
or
add
popf
xor
sahf
xor
adc
add
mov
add
sub
inc
add
add
add
push
divl
push
fdivrl
ret
add
or
xor
je
test
dec
mov
add
adc
mov
sbb
jp
add
fcmovb
icebp
rolb
push
dec
test
add
inc
add
dec
inc
clc
mov
push
xchg
les
arpl
lds
add
cmp
cld
and
mov
jle
add
add
fsts
jns
lods
sbb
add
sti
inc
add
jae
add
dec
mov
ret
add
jns
cmp
add
cmp
pop
or
addb
fisubl
test
adc
sbb
add
in
xchg
add
add
mov
mov
add
xor
cmp
add
mov
mov
loopne
xor
add
icebp
pop
xlat
movsl
fiaddl
fs
insb
cmp
push
pop
xchg
adc
mov
sahf
inc
add
add
testb
hlt
add
inc
add
sbb
sbb
inc
mov
xchg
xchg
mov
cmc
jae
repz
cmp
inc
add
pop
or
add
or
cmp
testb
fldenv
and
add
out
add
dec
lcall
insl
insl
cwtl
add
mov
add
add
stos
movb
xor
outsl
or
je
jg
fcmovb
popa
xchg
mov
xor
fnop
add
add
inc
add
inc
add
pop
iret
mov
mov
lret
fsubrl
ljmp
push
push
add
add
mov
aas
jb
xor
lcall
adcl
push
add
xor
cmp
nop
add
lret
mov
add
pop
loope
jmp
sub
xchg
dec
mov
add
arpl
xor
add
cmp
pusha
add
add
mov
add
rolb
rolb
out
std
fisttpl
icebp
inc
adc
add
rolb
sub
das
jmp
add
push
add
dec
mov
daa
jecxz
mov
ror
mov
add
or
sbb
add
movsl
and
mov
jb
adc
std
xchg
add
add
js
mov
cmp
in
dec
and
mov
add
mov
dec
sub
add
movsl
bswap
loope
enter
cltd
jl
add
jmp
add
jno
mov
jno,pt
sti
mov
add
cmp
add
and
aad
cmpsl
jb
mov
stos
test
jl
call
dec
mov
push
add
in
push
add
nop
add
add
mov
xor
cmp
fimuls
push
add
js
std
push
ds
cmp
dec
cs
pop
sub
pushf
xor
add
xchg
add
cmp
add
cld
xor
push
mov
add
add
scas
pop
dec
loope
add
adc
fbld
jb
or
jae
add
add
sbb
xor
dec
dec
and
dec
ret
and
mov
add
popf
cmp
pop
hlt
add
testl
add
adc
add
jle
mov
add
add
add
dec
out
mov
lret
push
aad
sbb
in
add
mov
sbb
add
rolb
add
adc
add
dec
cmp
xchg
push
add
movsb
add
rolb
test
cmp
add
cmp
add
add
add
leave
sub
xchg
testb
add
push
hlt
add
add
out
test
les
mov
mov
jb
xor
inc
add
outsb
xchg
add
add
add
add
scas
jecxz
add
add
mov
nop
add
bound
mov
xor
add
cmpsl
repnz
and
rolb
insb
pop
mov
cmp
rorl
hlt
add
pop
inc
stc
adc
add
arpl
lcall
fwait
cmp
add
xchg
enter
adc
add
jp
jne
add
xchg
sahf
repnz
add
add
pusha
add
cmp
mov
mov
lods
movsl
dec
loop
xor
jne
xor
addb
add
xor
add
std
dec
clc
call
out
addb
xor
adc
pop
inc
add
dec
inc
js
mov
push
add
or
jecxz
add
xchg
add
cmp
hlt
add
jmp
and
mov
mov
add
cmpsl
adc
int
out
lcall
and
add
dec
sub
mull
iret
jecxz
or
mov
inc
arpl
mov
ret
bound
mov
hlt
add
add
mov
add
jg
nop
add
mov
sti
mov
mov
mov
ds
add
cltd
add
add
adc
mov
push
add
xchg
cld
pop
outsb
mov
mov
cli
push
add
add
popa
xchg
add
push
add
push
adc
jmp
add
push
add
xor
lock
ljmp
lcall
sbb
dec
or
in
mov
add
add
bound
mov
xor
sbb
fs
int
add
scas
jo
jg
push
add
push
add
mov
in
pop
aas
test
mov
cs
hlt
add
repz
mov
repnz
int3
popa
hlt
add
dec
mov
in
iret
loopne
sti
cmpsl
push
push
add
push
cmp
push
add
push
mov
xchg
or
add
sub
testb
dec
jb
aam
mov
jge
mov
add
add
xchg
repnz
movsb
add
add
add
lea
add
add
add
pop
cmpl
add
add
add
and
out
or
add
add
push
addb
add
mov
sub
jbe
insl
ja
pop
gs
ljmp
inc
push
add
add
add
imull
jno
and
mov
loop
sbb
add
xlat
cmp
lahf
pop
push
fcoml
add
inc
add
jle
add
pop
addr16
add
rolb
outsl
fidivl
add
xchg
int
addb
add
sarl
cmc
sbb
push
add
fwait
popf
clc
js,pn
decb
sahf
sbb
add
add
add
pop
push
add
call
add
push
add
aas
add
mov
leave
mov
lock
vmread
add
mov
test
add
add
mov
int3
add
insb
jp
or
fistl
adc
iret
in
out
mov
loope
mov
xchg
add
xor
cld
mov
pop
sub
in
add
dec
shrl
pop
movsb
add
add
repnz
add
add
mov
add
add
add
and
fiadds
daa
adc
stc
add
add
ret
add
add
xor
push
jp
add
add
sbb
add
nop
add
rolb
sub
add
pop
mov
add
scas
xchg
add
sbb
add
mov
mov
add
add
mov
add
add
pushf
imul
out
mov
ljmp
in
cmp
or
popa
push
add
in
mov
add
lock
icebp
xchg
add
add
pop
xchg
fistl
outsb
popf
xchg
pop
insl
nop
add
add
mov
sbb
mov
outsb
xchg
hlt
add
fdivrl
push
mov
cwtl
push
add
cwtl
adcl
outsl
mov
int3
sbb
adc
jmp
int
fistl
jnp
fisttpl
shll
mov
add
and
repnz
sbb
mov
sti
sbb
lcall
add
imul
xchg
add
or
bound
mov
test
jecxz
fisubs
add
add
je
pop
int3
adc
mov
stos
les
data16
mov
add
pop
push
add
mov
add
roll
jmp
add
loope
add
mov
add
adc
push
add
rolb
inc
into
sub
dec
mov
aam
and
rolb
jnp
inc
add
jb
movsb
add
xor
pop
sub
add
add
add
out
push
repz
cmpsl
cmp
add
dec
cmovne
scas
and
add
mov
int
rorl
xchg
add
loop
in
push
in
test
cmpsb
add
loopne
shl
push
sbb
fsubrl
in
dec
lods
push
mov
repz
insb
cmpsl
xor
pop
lods
pop
add
add
rolb
gs
add
add
push
rolb
inc
pop
mov
add
add
cmp
sub
and
inc
add
add
daa
mov
jae
or
sbb
aam
push
add
dec
call
leave
inc
fdivrs
add
f2xm1
add
rcrl
mov
sti
mov
xchg
jo
filds
pusha
add
add
pop
mov
and
xchg
jp
add
es
nop
add
gs
popf
icebp
cmp
add
add
jle
in
push
ljmp
movsl
inc
cmp
cmp
ljmp
mov
loop
sub
push
cli
sbb
add
push
addr16
sahf
xchg
scas
xor
hlt
add
add
add
sub
push
ret
and
sti
int
add
push
add
insl
xchg
add
add
mov
cmp
add
repz
fiaddl
add
jb,pn
mov
inc
add
add
bound
mov
fidivrs
sbb
fdivrs
add
add
sub
pop
inc
out
stos
pop
adc
test
add
add
inc
push
mov
aam
call
mov
sbb
add
or
push
add
add
out
shll
mov
hlt
add
add
xchg
add
mov
leave
ret
jns
mov
and
mov
add
fmull
mov
push
add
mov
test
add
inc
push
add
cmp
mov
arpl
fiaddl
mov
mov
mov
clc
scas
daa
jp
and
shll
add
add
cmp
push
add
mov
mov
aas
mov
add
add
add
pop
mov
mov
add
add
movsb
add
icebp
lods
fcomi
jl
pop
xor
add
mov
add
int3
cmp
xchg
insb
pop
dec
xchg
add
test
jbe
scas
loope
push
add
insb
pop
out
addb
mov
jg
mov
push
xor
pop
inc
add
dec
les
sub
sub
push
add
xor
addr16
push
movb
add
jae
add
lahf
pushf
mov
in
dec
loopne
pop
xchg
add
sbb
aas
addb
pop
cld
mov
popf
cli
sbb
std
jnp
add
loopne
adc
lcall
xor
adc
add
add
add
add
add
cmc
mov
cld
movb
jmp
jno
ds
stos
pop
mov
arpl
insb
in
loope
inc
out
loopne
dec
int
add
mov
add
fistl
push
push
add
mov
sub
pop
cmp
out
into
push
add
je
or
mov
in
enter
inc
add
add
mov
sub
jbe
mov
scas
xchg
add
add
jnp
add
into
xchg
rcl
add
enter
or
fwait
scas
mov
mov
cmp
xchg
cs
addr16
adc
sahf
or
pop
cltd
push
pop
cmpsl
inc
add
dec
and
lock
add
add
scas
flds
xor
idivl
add
cmpsb
add
jne
mov
add
add
mov
add
add
pop
nop
add
add
xchg
mov
int3
lret
jg
and
and
add
dec
or
add
cmp
loop
mov
add
add
les
dec
push
add
aam
sbb
xchg
add
mov
xchg
jnp
dec
lock
sbb
add
and
loop
sub
add
clc
stos
lock
jnp
orl
and
mov
mov
add
xor
out
add
dec
lret
movb
pushf
mov
lds
add
addb
in
mov
pop
out
jmp
push
add
jle
or
pop
add
movsb
add
add
add
and
xchg
pop
repz
push
inc
add
lret
int3
in
lods
sub
add
dec
mov
or
dec
or
add
add
mov
lea
pusha
add
add
aas
lret
add
int3
push
sub
push
add
repz
add
sbb
inc
mov
repnz
in
sahf
add
add
add
rolb
lods
loopne
lcall
out
cwtl
sbb
stos
add
mov
cmpsl
dec
mov
jo
or
push
pop
sbb
data16
mov
add
fsts
mov
das
pop
sub
push
repz
jne
jmp
add
push
add
pop
mov
xchg
call
pusha
add
js
add
push
mov
aas
pop
mov
add
xchg
adc
jge
iret
ljmp
int
add
testb
sub
sbb
mov
sub
popf
mov
mov
push
add
jmp
cmp
add
enter
movb
mov
subl
push
lret
cmp
push
adc
jg
adc
and
push
add
add
imul
cmpsb
add
sub
add
add
add
ds
xchg
add
popf
pop
add
pop
jbe
add
add
add
gs
add
mov
add
cmc
testb
push
add
pop
adc
push
popf
mov
add
dec
cwtl
dec
enter
xchg
dec
cld
xor
in
push
add
add
add
add
or
add
xor
cmpsb
add
add
cmp
int3
cmp
jg
out
ja
mov
test
pop
inc
gs
std
adc
xchg
add
cmp
scas
push
add
sub
xor
xchg
jl
add
xchg
add
lock
test
lahf
dec
std
cmc
sbb
add
in
ss
add
icebp
adc
push
add
inc
pop
push
dec
cld
sbb
mov
imul
add
lret
pushf
xor
fwait
cmp
stc
sahf
popf
dec
stc
fcomps
jg
hlt
add
inc
and
mov
mov
shrl
js
ja
imul
add
add
sbb
scas
je
add
mov
cmp
add
mov
pop
jp
mov
xor
jnp
add
into
loop
ds
xchg
adc
movsl
sbb
shll
frstor
cmpsb
add
add
inc
add
lret
dec
mov
ret
jmp
lret
add
sub
jle
adc
mov
movb
in
subl
push
out
mov
jne
insl
ret
mov
or
ja
sbb
add
test
pop
xchg
ret
sub
mov
pop
inc
add
lea
dec
imul
dec
jae
add
out
cld
dec
call
add
add
sahf
inc
add
pop
pop
into
add
push
add
add
and
mov
inc
add
testb
add
add
mov
push
add
mov
xchg
add
and
add
add
dec
mov
in
loope
xchg
add
jno
lret
jbe
add
sahf
or
ficomps
add
out
or
add
js
add
add
xlat
push
add
add
shl
popa
mov
jns
das
insl
clc
lahf
inc
add
add
add
cltd
cld
in
lea
pushf
xor
shll
and
add
add
pop
pop
cmp
addb
mov
ficompl
fdivrl
and
mov
loop
notl
mov
xchg
je
iret
cs
mov
in
rolb
lods
rolb
movb
add
add
sub
adc
push
add
sbb
loope
xchg
sbb
ret
adc
testb
add
or
xchg
adc
xchg
imul
mov
add
hlt
add
xor
fsubrs
pop
mov
fcoml
add
mov
iret
pop
adc
pop
mov
cwtl
aam
and
cmpsb
add
or
mov
fnstenv
jg
jae
add
sub
mov
add
pop
sbb
dec
mov
ds
mov
add
into
jl
pop
icebp
ret
jne
add
add
daa
pusha
add
add
add
pop
scas
pop
sub
jle
inc
loopne
add
loop
daa
pop
xor
gs
aaa
fsub
add
pop
xchg
jmp
add
fwait
testl
rolb
insl
pop
push
add
mov
pushf
jns
push
cld
repz
xchg
add
int
pop
pop
ret
and
add
pop
dec
push
ds
add
pop
inc
mov
dec
pop
lods
sbb
add
ljmp
xchg
add
mov
mov
dec
add
mov
add
add
xchg
add
cmp
add
jmp
mov
jmp
jmp
adc
inc
add
in
aad
inc
xor
mov
and
test
fwait
xlat
imul
movsl
lods
jmp
inc
movb
mov
add
mov
out
or
or
inc
lahf
cmpsl
fidivl
insb
dec
xor
or
mov
lret
addb
add
add
add
add
add
add
add
fdivs
mov
add
outsl
or
jns
add
sar
addb
fldenv
and
icebp
rolb
lods
or
gs
daa
imul
inc
addr16
cmp
mov
rolb
jne
or
nop
add
push
fnstsw
xchg
ret
jo
daa
arpl
add
jg
add
daa
xchg
mov
arpl
push
add
test
int3
mov
cwtl
loop
push
add
dec
push
add
add
mov
in
add
add
pusha
add
lcall
add
scas
mov
mov
xchg
aad
scas
cmc
xor
outsl
push
and
outsl
hlt
add
stos
les
aas
bound
mov
sarl
cmp
jmp
mov
mov
fisubs
add
mov
jns
test
sbb
pop
inc
add
dec
mov
rolb
push
add
add
jecxz
cmpsb
add
or
add
jbe
int
xorl
shll
inc
add
mov
mov
add
add
lret
stos
xchg
xchg
inc
adc
add
add
adc
add
fwait
mov
into
xchg
ja
dec
jecxz
aaa
mov
add
add
add
and
mov
and
mov
clc
mov
xchg
add
int
sbb
add
lods
test
jg
lret
jb
jmp
mov
shll
fisttpl
mov
mov
xchg
add
rcrl
add
mov
test
repnz
pop
cltd
mov
add
xchg
lds
add
lahf
cli
xchg
inc
add
loope
push
add
scas
lret
mov
jae
rolb
ljmp
ljmp
add
sarl
dec
jno
cmp
add
add
add
xchg
xchg
jp
icebp
inc
lds
mov
cmc
sub
and
mov
mov
mov
insl
mov
ja
add
mov
add
dec
mov
cmp
ds
fldl2t
outsb
mov
out
jo
dec
cmp
lcall
dec
add
add
clc
lock
flds
add
inc
jnp
add
xor
dec
call
push
or
mov
add
ja
add
jg
jnp
push
cwtl
sbb
add
xchg
add
add
sub
nop
add
or
movb
std
aad
add
add
add
mov
mov
add
xor
pop
aas
jne
in
mov
out
add
adc
xchg
add
loopne
out
add
add
aad
add
add
icebp
imul
fcom
add
add
xor
test
aas
cwtl
xor
dec
xchg
push
add
or
xchg
add
add
movsb
add
add
loope
or
pop
mov
cmp
add
add
scas
fistps
jmp
add
mov
add
test
in
dec
xor
in
add
cld
repnz
pop
inc
add
cmc
push
add
xchg
cs
add
add
shll
add
or
gs
sbb
adc
rolb
out
fcompl
dec
jmp
add
dec
sbb
add
in
jo
xlat
shrl
or
sub
sbb
sub
add
pop
mov
or
stos
mov
aas
inc
add
sub
es
pop
dec
cwtl
cli
stos
cmp
lahf
fisubl
out
add
jg
lea
movb
jl
add
fidivs
mov
jmp
lahf
cs
add
pop
lods
loope
add
enter
cwtl
and
mov
mov
cmovbe
leave
mov
sbb
add
int3
mov
add
mov
jno
xlat
adc
jbe
or
je
ja
pop
mov
jb
mov
mov
fcmovbe
add
mov
push
dec
fisubrs
xchg
add
outsb
adc
lea
inc
frstor
sbb
mov
movsb
add
jb
add
cmpsb
add
sti
sahf
rolb
add
xchg
pop
shll
mov
outsb
and
inc
add
push
mov
cld
mov
add
dec
xor
sub
add
add
inc
add
inc
rolb
hlt
add
push
fisttpll
sbb
stos
movb
ret
fwait
cwtl
loope
inc
add
push
add
and
pop
pop
roll
mov
leave
rolb
push
jg
in
test
ret
cmp
iret
data16
dec
mov
mov
add
mov
and
push
add
mov
gs
xchg
add
jmp
push
add
insl
fcompl
aad
jb
adc
add
add
jle
adc
test
jg
add
pop
cmp
pop
daa
gs
add
mov
xor
add
add
leave
xor
add
jmp
sti
xchg
xchg
add
push
add
sub
addr16
repz
xchg
pop
xor
sub
and
add
sbb
mov
test
popa
imul
sub
add
movsl
shrl
fldcw
sbb
lret
cmp
mov
pushf
sbb
out
addb
xchg
or
add
add
iret
push
jp
add
mov
sbb
fld
int
pop
jmp
stos
jle
add
add
imul
in
cli
mov
adc
loope
leave
adc
loope
add
insl
xchg
popa
xor
in
inc
add
mov
push
inc
add
fldl
add
iret
adc
push
add
pop
cmpsb
add
mov
fwait
outsl
push
add
adc
push
add
add
pop
and
mov
adc
and
bound
mov
mov
stos
add
dec
push
add
jl
add
xor
add
xchg
add
mov
add
mov
pop
mov
mov
stos
xchg
add
add
mov
xor
xor
testb
lods
jmp
add
and
repz
lret
sbb
add
testb
add
mov
mov
xlat
or
popa
fdivrl
add
repz
add
push
mov
mov
lock
aam
faddp
add
add
add
jge
aaa
add
mov
fwait
insl
xchg
add
add
movb
cmp
mov
xor
fcoms
mov
add
lods
xchg
out
pop
loope
jl
ljmp
out
inc
add
sbb
jae
xchg
sbb
in
add
and
add
push
add
lds
add
rolb
push
mov
add
add
add
mov
rcll
add
mov
add
add
add
add
mov
xor
add
mov
inc
add
sbb
add
add
add
inc
cmp
in
mov
or
xchg
pop
xchg
jecxz
rorl
mov
popf
xor
xlat
sbb
add
add
mov
das
int3
xchg
add
imul
mov
add
scas
lcall
xor
xchg
iret
lock
pop
sub
pop
and
cmpsb
add
add
mov
pushf
dec
outsb
jae
cmp
sub
test
nop
add
rolb
or
leave
push
add
sbb
mov
int
push
add
mov
cwtl
fistps
xchg
sbb
add
add
xor
jle
and
mov
add
iret
out
filds
add
or
sbb
addr16
test
inc
rolb
aas
cmp
test
add
dec
lds
xchg
out
pop
xchg
add
sbb
sub
testl
pop
dec
pop
inc
push
add
shrl
push
lea
add
mov
xor
aaa
push
add
scas
cmpsb
add
sbb
cmc
jle
repnz
data16
mov
pop
dec
js
cmc
fstpl
add
cmp
bound
mov
add
mov
call
movb
rolb
fisttpll
ret
lcall
cltd
mov
mov
cmc
add
inc
add
push
add
mov
inc
add
add
add
add
loop
mov
mov
xlat
loopne
movsl
mov
popa
xchg
lahf
add
pushf
add
pop
xchg
std
adc
repnz
add
add
mov
mov
push
add
fidivrs
xchg
jae
add
dec
aas
rolb
jne
pop
mov
add
cld
mov
sbb
xor
fisubs
add
add
mov
add
repz
pop
push
in
mov
or
add
loope
dec
cmpsl
mov
sbb
scas
or
add
inc
xchg
add
xchg
xchg
xchg
xchg
pop
xchg
add
rol
add
stc
insb
jle
adc
lret
pop
cltd
into
or
adc
add
jecxz
add
inc
inc
add
add
mov
arpl
xchg
adc
and
mov
jo
add
jbe
shl
pop
push
adc
popf
stos
loop
lret
mov
sbb
add
push
add
inc
les
sub
jae
mov
lahf
rep
mov
sbbl
pop
inc
add
add
popa
addr16
ficoml
add
add
mov
add
push
cmp
out
and
mov
add
pusha
add
add
add
mov
inc
add
and
sbb
add
repz
testb
add
pop
dec
mov
jo
fldenv
les
push
or
xchg
addb
add
mov
std
lods
movsb
add
add
add
aas
imul
xor
add
addr16
add
je
dec
jl
add
cmc
in
jns
add
ror
add
add
add
jae
flds
add
xchg
add
xchg
jns
add
arpl
add
imul
sub
mov
pop
pushf
mov
add
mov
imul
xor
add
mov
adc
add
das
arpl
lds
leave
mov
mov
fisubs
cmp
add
lods
xchg
add
mov
je
add
in
sti
lock
xchg
cs
icebp
push
add
cwtl
fimuls
mov
or
jmp
add
add
add
and
mov
mov
bound
mov
add
mov
lea
lea
add
sbb
add
or
push
add
cwtl
outsb
jo
or
sbb
popf
sub
add
add
jp
xor
push
or
inc
add
pop
sbb
push
add
add
jae
push
cmp
pop
xor
arpl
icebp
fcoml
push
dec
frndint
je
ljmp
mov
xor
add
iret
push
add
jl
test
movb
stos
sub
fstsw
adc
cs
dec
arpl
add
loopne
dec
jmp
xchg
sbb
add
add
add
sub
mov
aaa
inc
push
xchg
add
add
add
cmp
out
xchg
add
mov
insb
scas
movsl
xor
add
pushf
rolb
xchg
add
ljmp
mov
push
add
rolb
frstor
and
jmp
add
fsubrl
and
cmp
pop
addb
int
mov
fiaddl
addr16
sbb
add
lods
pushf
add
add
or
js
cmp
mov
xlat
sub
add
sub
rol
add
cld
sub
inc
add
in
add
aas
mov
dec
je
or
fwait
jbe
add
add
jle
add
mov
xchg
enter
add
add
dec
sub
or
clc
notl
loopne
cmp
and
or
addb
mov
mov
into
jmp
add
imul
sbb
cltd
cmp
into
add
imul
add
out
add
in
addb
in
icebp
outsb
or
add
lea
adc
add
cmp
mov
jle
add
popa
add
mov
loope
add
lcall
add
mov
repnz
mov
repnz
inc
pop
mov
add
or
mov
fbstp
data16
add
xchg
mov
scas
test
cmp
insl
xchg
sahf
cmp
loop
das
fdiv
add
ja
mov
sbb
jo
push
add
inc
add
add
add
das
jb
gs
xor
add
roll
inc
add
adc
mov
sti
xchg
addb
inc
mov
mov
inc
js
iret
pop
imul
mov
pop
xchg
add
add
sub
add
or
add
fiaddl
add
dec
in
cli
push
and
mov
add
mov
xchg
xor
mov
add
mov
imull
cmp
inc
add
add
mov
add
mov
adc
mov
imul
stos
add
mov
add
dec
push
push
je
xor
add
xor
add
add
or
add
loop
aad
and
stos
jecxz
out
out
mov
scas
mov
add
lods
imul
adc
add
add
add
insl
jo
mov
add
pop
xchg
add
scas
lret
mov
test
add
add
add
pop
xchg
loopne
addr16
add
cmp
mov
add
mov
les
jo
fsts
stos
push
xor
in
lock
mov
xchg
mov
mov
jae
add
inc
das
pop
push
adc
inc
add
into
xchg
jg
mov
add
sti
mov
sub
add
aas
lds
fnstcw
pusha
add
addl
mov
add
bound
mov
pop
daa
dec
cmc
sub
add
add
add
add
mov
and
sti
iret
xor
cs
cmp
popf
mov
int3
inc
add
add
orl
in
sbb
out
pusha
add
stc
sbb
pop
xchg
add
lock
aam
loope
add
int
sbb
pop
movsl
cmp
scas
arpl
divl
enter
pushf
xchg
push
add
cmp
mov
fdivs
cmp
mov
sbb
add
dec
mov
mov
repnz
sub
add
add
dec
in
fwait
push
inc
pop
cmp
in
sub
jns
and
in
mov
in
add
cmpsb
add
notl
ljmp
add
cmp
xchg
add
iret
adc
lods
cmp
xchg
popa
lods
loope
add
cmp
add
add
or
outsb
out
sbb
xchg
divl
add
call
insb
adc
lahf
inc
xor
pushf
sub
mov
dec
cmp
add
mov
aad
pop
jns
pop
and
mov
add
add
push
xchg
add
add
dec
pop
dec
movsl
and
add
add
dec
cmp
pop
mov
in
cmp
sub
cmp
jnp
and
mov
mov
inc
push
cwtl
xchg
movsl
push
cmp
cld
adc
jne
sub
in
xorl
xchg
mov
bound
mov
nop
add
add
add
xor
rolb
adc
xchg
xchg
ljmp
iret
jmp
mov
add
sub
out
mov
mov
sbb
fidivrs
dec
hlt
add
dec
rolb
ja
adc
daa
ja
add
add
add
sub
outsb
add
push
mov
mov
push
movb
fildll
add
testl
add
add
inc
add
sbb
inc
sub
add
insb
inc
add
mov
xchg
add
add
or
bound
mov
add
add
mov
out
stos
rolb
push
add
out
dec
iret
cwtl
movsb
add
add
pushf
pushf
enter
xchg
cmp
aas
mov
sub
pop
cwtl
mov
jecxz
insl
inc
aam
adc
rcrl
in
cli
int3
sbb
jg
scas
mul
add
out
popa
pop
shll
adc
add
aam
incl
add
add
pop
or
insl
cmc
addb
or
mov
data16
add
add
dec
push
add
add
add
push
jle
shr
adc
hlt
add
push
fidivs
add
mov
sbb
in
arpl
bound
mov
aaa
lret
jne
fcmovne
insl
pop
sahf
in
mov
pop
pop
icebp
sahf
cmp
add
movsl
xchg
ret
push
aam
lcall
mov
or
mov
cmp
movb
xchg
add
je
data16
aam
mov
pop
pop
mov
dec
js
aad
jns
pop
hlt
add
xchg
or
int3
sbb
add
mov
aad
add
add
mov
add
pop
lock
or
cmp
pop
add
or
jb
cmp
jge
pop
inc
add
imul
mov
add
add
notl
push
dec
mov
mov
push
loope
add
jne
push
inc
add
scas
push
add
push
add
fsubrl
sbb
stos
hlt
add
adc
test
add
fsubrl
aam
pop
push
push
adc
fisubl
add
add
bound
mov
xchg
cli
int3
xchg
add
jb
data16
rcll
xor
add
mov
add
add
cmp
add
fstpl
add
xchg
rolb
push
cmp
add
inc
add
add
jmp
sbb
mov
or
add
add
dec
add
out
jne
or
mov
add
mov
adc
clc
push
xchg
in
add
add
add
sub
sbb
xor
add
adc
popf
or
add
sti
call
add
add
add
add
mov
movsl
js
stos
dec
testb
add
or
lock
add
mov
rolb
jbe
xor
jae
sti
out
in
imul
add
dec
mov
xchg
nop
add
xor
mov
dec
jge
fwait
xor
cmp
insl
movaps
out
cli
sub
add
jl
adc
nop
add
cwtl
lret
call
ret
daa
testb
add
fwait
out
and
xchg
out
les
shr
rolb
cmpsl
sub
adc
stc
out
lock
or
pop
dec
xchg
add
and
mov
leave
int3
sub
aam
lahf
cmp
mov
jge
repnz
add
loope
jge
jecxz
cmpsl
lods
add
int3
add
clc
sarl
cmp
add
repnz
add
lock
daa
sbb
fcomip
in
incl
xor
or
or
lret
inc
add
sbb
in
lcall
jg
mov
aas
fnclex
add
sbb
testb
rolb
dec
and
sti
xor
push
sub
push
push
rolb
mov
ljmp
mov
outsl
aas
addr16
lods
push
mov
push
adc
iret
flds
add
push
mov
add
add
mov
add
daa
add
cltd
leave
or
add
dec
mov
or
add
ja
cmpsb
add
jle
cs
jp
add
add
inc
add
add
addb
add
mov
sbb
cld
dec
mov
add
mov
add
jmp
int
add
rolb
sbb
mov
mov
rolb
pop
stc
ljmp
add
push
or
add
rcr
cmp
rolb
pop
rolb
adc
out
jle
xlat
sti
addb
xchg
mov
xchg
add
add
mov
xchg
add
add
add
add
inc
add
inc
xchg
add
leave
lret
push
add
add
jne
dec
mov
rolb
add
push
add
ret
add
mov
add
fldt
call
add
mov
add
addb
xchg
xchg
jno
add
jnp
jo
mov
add
and
mov
adc
decl
push
add
outsb
xchg
dec
inc
inc
sbb
lock
add
add
testb
xor
mov
or
rolb
andl
mov
add
js
int
subl
mov
pop
dec
cmp
add
add
iret
sub
sub
fsubl
mov
inc
add
adc
movb
fcomip
xchg
pop
mov
rolb
lods
gs
mov
add
add
out
and
mov
mov
outsb
and
mov
shrl
sbb
add
dec
cmpsl
rcll
jecxz
sub
mov
add
mov
add
je
scas
insl
cmpsl
notl
out
mov
push
cmp
mov
sahf
dec
dec
daa
sub
scas
mov
data16
leave
push
ret
add
in
cltd
adc
testb
pop
movsb
add
paddd
lods
xchg
jmp
add
add
and
roll
jnp
add
shll
imul
add
leave
mov
add
rolb
jge
inc
add
in
add
pusha
add
in
xchg
add
insl
enter
icebp
sub
jo
cmp
inc
jns
mov
loopne
sbb
cs
call
cmp
add
pop
and
int
push
dec
xor
inc
add
mov
cmp
bound
mov
clc
mov
jbe
bound
mov
add
mov
sbb
add
jbe
movb
divl
fcomip
icebp
test
loopne
mov
add
scas
mov
mov
add
push
add
mov
mov
mov
add
mov
loope
add
fwait
xlat
not
and
pop
scas
add
add
jl
mov
or
add
std
pop
mov
add
cltd
xor
sbb
add
add
add
je
add
mov
add
or
popa
cwtl
xor
sbb
loopne
adc
sub
mov
adc
pop
lcall
ja
outsl
lahf
push
pop
push
int3
loop
fmuls
out
gs
out
adc
jae
mull
std
xchg
add
clc
loopne
sub
xor
or
jecxz
add
add
aam
mov
mov
pop
xor
in
or
push
cld
jecxz
add
addb
add
aas
stc
dec
push
add
pop
ret
pop
mov
xor
add
cmp
xchg
push
xchg
jl
add
add
iret
cmpsl
adc
loope
lea
add
add
sub
sub
sarl
adc
rolb
add
push
add
add
push
lahf
add
aad
scas
jnp
mov
test
or
add
mov
xchg
add
out
aam
addl
inc
add
xchg
add
rolb
rolb
xchg
jp
add
mov
das
jge
sub
push
add
xchg
push
jecxz
pop
and
test
jns
add
xor
cmp
aas
fwait
mov
in
lcall
pop
addr16
iret
pusha
add
imul
add
into
push
arpl
iret
and
add
jo
xchg
push
add
movsl
insb
outsl
popf
jl
add
inc
add
gs
dec
add
add
pop
arpl
scas
sbb
mov
cmc
fcmovbe
repnz
xor
xchg
in
adc
mov
data16
addr16
mov
adc
mov
mov
scas
jns
add
jne
add
mov
sbb
and
stc
fcompl
mov
loope
sahf
inc
add
add
pop
push
add
mov
or
or
xchg
add
mov
dec
mov
dec
in
xchg
or
fistl
cmp
lret
sbb
push
add
sbb
and
bound
mov
add
mov
in
inc
push
ds
fsubr
mov
mov
jp
pusha
add
int3
mov
sub
in
outsl
dec
insb
inc
add
add
push
add
aad
push
add
add
adc
add
aam
sbb
add
jmp
sbb
imul
add
out
mov
mov
lea
add
xchg
mov
add
into
enter
inc
jl
add
dec
testb
pop
add
mov
add
pusha
add
jg
popf
cmp
mov
inc
add
add
test
jecxz
scas
xlat
adc
inc
lds
jge
add
inc
add
cmpsb
add
push
repnz
push
add
and
mov
lods
xchg
push
add
adc
and
jb
addb
xchg
add
mov
push
lods
adc
dec
xchg
add
xchg
shld
add
mov
add
push
mov
add
inc
lods
add
mov
dec
int
bound
mov
add
lea
push
insb
sub
sub
mov
xor
dec
add
mov
testb
add
add
xchg
jecxz
push
add
dec
mov
rolb
sub
mov
add
cmp
add
or
jp
or
repz
push
adc
xchg
add
add
add
das
add
adc
xor
mov
add
xlat
xchg
lret
mov
mov
jecxz
insb
dec
push
add
popl
add
add
inc
fnstenv
daa
flds
add
cmp
movsl
iret
popf
push
ret
in
add
lcall
add
push
add
mov
loop
mov
add
pop
mov
movsb
add
in
add
testb
add
mov
adc
cwtl
mov
sahf
sbb
pop
nop
add
mov
lea
add
add
test
testb
insb
cmp
rolb
push
add
or
push
xor
sbbl
jno
in
gs
add
cmpsb
add
data16
loope
pop
jmp
add
nop
add
and
mov
add
in
dec
rolb
push
add
or
scas
addb
add
iret
orl
pop
push
sub
scas
fadds
mov
cli
mov
into
and
mov
pop
pushf
sub
mov
lods
push
clc
jmp
mov
add
lret
sub
std
cmp
nop
add
push
cmc
insb
arpl
in
and
jecxz
add
fdivl
in
out
movb
inc
add
mov
add
insb
and
adc
jns
mov
sahf
repz
aad
sbb
xchg
push
addb
pusha
add
push
xlat
rcr
lret
sbb
xchg
xor
jle
jmp
sub
pusha
add
mov
dec
testb
add
popa
cmp
inc
add
fildll
sbb
loop
xchg
addb
cmp
outsl
adc
sbb
push
add
outsl
mov
out
movsl
inc
test
mov
pop
lods
leave
fwait
inc
addb
and
cmpsb
add
add
jp
stos
xchg
out
in
xor
pop
push
add
cli
xchg
repz
sti
test
mov
add
add
dec
and
mov
mov
imul
add
ds
add
cmp
mov
add
add
mov
add
add
cmp
xor
nop
add
icebp
push
xor
movb
int3
and
mov
cmpsb
add
add
mov
inc
jno
fmul
test
ja
scas
mov
loopne
push
add
xor
fs
mov
into
sub
add
mov
mov
xchg
test
jns
add
scas
add
and
add
sbb
icebp
cli
fstpl
mov
loop
cmp
add
add
in
dec
push
add
mov
jo
add
pushf
inc
pusha
add
rolb
xor
mov
mov
xrelease
sbb
add
mov
add
movsl
scas
js
fldenv
push
imul
mov
add
es
dec
xor
push
aad
add
xchg
pop
add
jecxz
into
sbb
and
inc
add
pop
fsub
add
and
mov
add
cmp
add
or
inc
add
addb
mov
insl
mov
aam
jmp
inc
add
adc
or
daa
mov
add
push
in
and
mov
mov
sbb
mov
add
sbb
jg
mov
cltd
cmp
add
faddp
add
addb
je
xchg
pushf
sbb
les
mov
pop
xchg
ret
jg
mov
adc
add
add
arpl
testb
dec
pushf
or
hlt
add
jae
data16
add
ret
push
push
add
add
add
add
xor
decl
addr16
fidivs
pop
inc
repz
test
add
outsl
sub
push
add
out
imul
add
loopne
repz
sub
add
sub
out
imul
dec
jne
repnz
add
sub
add
test
fnstsw
add
sub
mov
iret
dec
lret
pusha
add
sbb
mov
jmp
addb
fldt
cmp
mov
into
push
ret
jb
imul
push
add
cmp
cmp
push
mov
dec
xchg
jge
jne
testb
dec
push
or
add
xor
cltd
mov
or
add
sbb
add
jmp
xor
or
call
inc
add
add
mov
add
add
mov
add
data16
mov
xchg
add
add
xchg
testb
pusha
add
add
add
add
add
adc
sbb
scas
push
push
add
add
sub
into
movsl
and
dec
sbb
stc
push
add
or
ja
jb
data16
jae
add
rolb
or
inc
cmc
jge
add
adc
lock
out
jae
sbb
dec
dec
add
add
sbb
mov
mov
add
cltd
aam
jmp
add
add
mov
add
xchg
add
add
add
add
cmp
inc
xchg
add
inc
pop
mov
xor
sbb
inc
add
cmpsl
xchg
aam
insb
dec
notl
add
fidivs
add
inc
add
addr16
outsb
lea
jl
addb
add
add
jp
add
add
add
add
repz
lods
dec
fbstp
add
scas
clc
lea
add
dec
and
mov
mov
add
add
add
test
mov
xrelease
add
xor
lds
add
out
sub
add
add
add
fidivrl
add
cltd
dec
mov
inc
add
mov
add
xor
mov
fbstp
lock
and
mov
push
add
dec
cmp
mov
mov
leave
dec
xchg
cmpsb
add
mov
push
and
rolb
xchg
add
add
add
dec
and
mov
add
xchg
sbb
push
add
or
rolb
sbb
add
sub
int
add
pop
mov
jnp
and
mov
add
addr16
or
push
cmp
sbb
mov
lods
iret
das
push
rolb
test
add
sbb
add
insb
add
xchg
test
popa
xlat
stos
outsb
cltd
call
jle
mov
nop
add
pusha
add
inc
add
lcall
add
fcmovb
add
add
lea
fdivs
add
sub
add
push
add
mov
popf
mov
stos
cmpsb
add
incb
add
add
add
jecxz
fdivl
add
add
add
out
data16
add
add
add
cmp
jge
lret
lds
fmuls
lods
movb
xor
cltd
lahf
cwtl
pop
jnp
aas
das
std
je
sub
xchg
imul
add
or
lods
xor
and
popa
jecxz
add
add
mov
or
add
mov
loope
add
mov
sub
int3
push
add
jp
add
adc
pop
xor
add
sahf
pusha
add
testb
dec
pop
adc
sub
cmpsb
add
inc
add
jae
add
add
jno
inc
add
cmpsb
add
mov
test
js
testb
sub
push
repnz
mov
xor
ret
das
gs
add
and
add
nop
add
gs
and
mov
jp
scas
mov
clc
pop
out
add
mov
add
addr16
movsb
add
add
mov
daa
lahf
push
add
pop
add
call
xchg
sbb
mov
and
les
jnp
shll
add
pop
push
mov
iret
xor
add
movb
and
add
add
or
sub
xor
in
xor
sub
adc
insb
iret
mov
add
rolb
add
and
add
aas
fisttps
add
dec
or
bound
mov
add
cmp
push
cli
add
fisttpl
mov
aaa
or
add
add
add
inc
add
pop
data16
add
or
fcomp
lret
mov
mov
in
adc
decl
pop
sbb
test
jnp
sti
push
inc
add
popa
pusha
add
mov
outsb
adc
fsubs
cs
xchg
xchg
stos
inc
add
add
nop
add
add
add
jnp
add
or
nop
add
add
mov
mov
je
pop
scas
pop
add
add
dec
xchg
add
testb
and
mov
sti
repz
mov
dec
push
add
add
je
mov
add
mov
mov
add
add
rolb
cmp
jns
push
add
jo
sbb
mov
add
int
jg
add
cmp
mov
rolb
and
add
add
push
add
loopne
add
cmp
add
mov
mov
add
add
fidivrl
and
bound
mov
bound
mov
add
add
pushl
inc
clc
test
push
cmp
or
push
push
add
add
add
cld
lds
push
adc
scas
and
mov
add
dec
repz
sahf
out
add
lea
leave
aam
mov
sub
add
into
in
mov
pop
testb
push
add
out
push
xchg
adc
dec
pop
xchg
mov
xchg
add
mov
les
ficoms
rcrl
add
add
add
int
add
gs
mov
inc
add
add
add
mov
pop
add
mov
inc
add
fstl
add
cmpsb
add
fisubs
lret
leave
out
testb
adc
negl
pop
jecxz
xchg
out
outsb
in
push
xor
movsb
add
xchg
out
xlat
adc
in
cltd
gs
add
or
inc
add
into
mov
aad
add
lock
add
dec
movb
pop
ljmp
cmp
cmpsl
pop
xchg
cmc
mov
addb
pop
mov
xchg
add
dec
rolb
or
add
mov
jbe
in
addb
add
mov
pop
cs
add
add
xor
outsl
stos
mov
add
mov
dec
ret
dec
sub
jle,pt
nop
add
add
insb
imul
repnz
aad
add
add
dec
lret
jp
dec
mov
add
push
repz
fcomps
rolb
xlat
xchg
cmp
insl
into
xchg
inc
jp
add
cmp
cmc
mov
mov
or
rolb
dec
lock
scas
xlat
jmp
or
push
add
add
add
sub
add
pop
cmp
adc
sub
sbb
xlat
xchg
daa
dec
lods
push
add
mov
into
fucomip
mov
mov
add
nop
add
xchg
sub
push
mov
loop
enter
fsts
add
sub
jmp
cltd
je
push
add
xor
jmp
pop
jae
adc
jne
add
in
lahf
xor
add
in
fwait
or
das
fiaddl
pop
and
repnz
jecxz
mov
jns
add
or
fidivrs
hlt
add
add
stos
push
sub
pushf
fcoml
add
das
jp
jno
sbb
add
repnz
jecxz
cmp
in
cwtl
ret
mov
add
add
cs
out
mov
mov
test
mov
lret
aam
addb
mov
xchg
rolb
imul
daa
xchg
add
scas
jmp
daa
lds
test
cwtl
xchg
add
push
xchg
sub
add
jbe
add
mov
add
cmp
aad
push
add
jl
mov
sbb
add
fists
add
leave
push
rolb
mov
adcl
add
in
daa
scas
fs
sub
adc
pop
ret
pushf
jae
cmp
push
add
cltd
pop
enter
pop
mov
pop
ret
push
add
cltd
iret
push
sbb
ljmp
jecxz
stos
mov
daa
stos
addb
add
add
add
mov
add
ja
lds
xchg
daa
dec
scas
repnz
xchg
add
movsb
add
pop
aas
xor
jb
adc
movsb
add
dec
and
mov
add
mov
data16
rolb
testb
lret
add
add
arpl
add
lcall
mov
cmp
pop
movsb
add
add
fisubrl
jno
data16
ja
testl
popa
dec
das
lods
cmc
inc
add
and
into
std
lods
daa
cmp
cli
mov
or
add
ja
orl
mov
ficoml
push
cmpsb
add
pop
sbb
push
jne
add
add
add
add
xor
inc
adc
ficompl
inc
add
add
dec
loopne
aad
adc
add
data16
outsl
loop
lcall
sbb
add
sarl
cmp
lea
into
in
cmp
movsb
add
lods
aam
push
aad
out
fadd
sbb
daa
mov
pusha
add
lahf
gs
ret
add
and
sub
mov
loopne
jg
rolb
jae
sbb
add
imul
jo
addb
out
andl
add
mov
add
int3
arpl
dec
fsts
lods
dec
or
pop
mov
inc
add
jle
push
xlat
roll
cltd
testb
add
arpl
daa
add
mov
add
mov
add
adc
inc
inc
mov
add
and
mov
jno
mov
sbb
hlt
add
aas
jmp
ret
jl
add
iret
jle
mov
fildll
sbb
aad
insb
aad
stc
jns
push
add
add
fldl2e
pop
dec
jg
mov
mov
out
add
insb
inc
sbbl
mov
fucom
in
xor
xor
subl
sub
mov
loope
add
push
add
jp
add
fdivp
add
add
fldcw
add
mov
push
enter
arpl
jae
mull
aas
mov
addb
xchg
add
push
add
pop
push
inc
jae
xor
loopne
sub
rolb
test
pop
repnz
add
lret
jp
add
push
add
mov
add
xchg
add
inc
aam
inc
add
cmp
mov
push
add
xor
test
add
sub
sub
lcall
nop
add
add
pop
shll
ret
into
mov
add
mov
add
add
sti
test
add
push
jne
mov
add
insb
loop
xor
sub
dec
sbb
add
rcrl
sbb
xchg
sar
fnstenv
add
push
add
scas
inc
add
inc
push
add
mov
fucom
add
add
mov
mov
add
add
addr16
inc
add
nop
add
mov
dec
and
mov
movsl
pop
add
push
add
adc
add
nop
add
mov
add
fwait
stos
das
push
add
lock
xchg
add
add
mov
shrl
in
imul
add
sub
fnstenv
dec
sub
push
sti
movb
add
pop
pop
outsl
js
inc
add
add
mov
addb
cmp
dec
add
dec
cmc
iret
addl
pop
out
fists
and
pop
sbbl
add
filds
mov
add
add
jns
lea
pop
aam
pop
mov
add
cwtl
addb
add
xchg
push
xor
add
add
jno
mov
inc
add
push
fidivrl
std
inc
ja
add
lahf
icebp
repnz
movsl
stc
adc
int
pop
cmp
je
fisttps
mov
add
add
lods
cmp
sbb
fcom
add
stos
cmc
add
mov
pop
fbstp
mov
lock
push
pop
daa
sti
sbb
stc
mov
lods
les
aas
insb
mov
add
add
movb
add
jmp
add
pop
mov
mov
mov
sbb
loope
sbb
add
add
sbb
or
stc
dec
cmpsb
add
add
or
mov
push
pop
cmp
cli
mov
pop
push
add
loop
stos
mov
add
addb
add
add
in
stos
pop
inc
rolb
icebp
in
push
add
add
mov
pop
xlat
testl
andl
cld
ret
aas
outsl
loope
push
sub
add
popa
rdtsc
adcl
imul
add
push
adc
mov
and
in
mov
add
mov
scas
jecxz
add
mov
add
out
pop
mov
rcr
push
add
add
lahf
gs
xchg
outsb
xchg
pop
mov
iret
lahf
fcoms
insl
xor
clc
cli
sbb
nop
add
or
sbb
xor
shld
add
mov
mov
add
xor
inc
popf
adc
sbb
add
adc
jae
pop
sub
cmp
mov
pop
popa
out
adc
xchg
add
jnp
mov
aaa
or
std
test
add
mov
add
inc
jb
mov
add
add
xor
shrl
lahf
test
xchg
sbb
aam
addb
add
fidivs
jle
jne
xor
testb
add
addb
add
pusha
add
add
add
pop
and
mov
add
add
push
add
add
aad
and
mov
aam
shrl
add
mov
sbb
outsl
inc
and
cwtl
fcoml
add
jge
fsubs
repnz
in
mov
stc
ljmp
push
add
add
ljmp
nop
add
insl
ficomps
clc
fdiv
add
mov
stos
popa
or
js
mov
adc
cmp
test
mov
aad
xchg
dec
mov
jmp
add
add
add
popf
addb
rolb
push
add
das
fistl
adcl
mov
pop
push
add
inc
add
push
add
jae
add
les
jo
xchg
lods
push
jl
push
add
add
add
mov
add
adc
sbb
pop
and
xlat
aas
sub
inc
gs
add
dec
jmp
pop
mov
add
adc
xor
inc
add
mov
lahf
sub
push
and
mov
movb
add
add
lret
sub
out
cmp
jp
mov
add
add
addb
jge
test
mov
stos
jge
pop
arpl
add
arpl
testb
xor
mov
add
add
test
add
inc
add
flds
jl
pop
mov
aad
xor
stc
movsl
dec
xor
add
jle
lahf
je
icebp
aad
add
fnstenv
add
pop
enter
add
std
in
add
sbb
add
add
add
add
add
add
mov
in
dec
popa
inc
mov
jmp
rorl
movb
ja
mov
add
dec
js
jp
xchg
adc
loop
and
mov
lods
cmp
sub
lret
pop
push
xlat
cmp
dec
jb
mov
xchg
or
add
sbb
add
ret
loope
add
add
cmpsb
add
add
add
add
cmc
rolb
add
and
xchg
adc
xor
mov
paddsb
add
sbb
push
les
fdivs
add
add
testb
mov
add
rcrl
and
mov
add
add
add
cmp
pop
jno
add
mov
add
jnp
int
add
mov
add
lea
fstl
xchg
mov
mov
mov
movsb
add
add
mov
mov
movsb
add
add
add
pop
out
pop
mov
and
mov
jns
add
add
test
rcll
lock
pop
dec
stos
add
fsts
stos
movb
add
xchg
add
add
arpl
mov
test
add
pop
cltd
dec
jbe
addb
add
add
call
add
fisttpl
cs
fs
add
dec
inc
inc
add
add
mov
lea
jecxz
jo
out
lods
mov
mov
rolb
test
aas
mov
data16
mov
test
push
inc
sub
leave
call
sbb
add
xor
fildl
add
add
add
outsl
ds
add
add
mov
mov
add
add
xor
mov
aas
adc
loop
adc
or
jbe
jmp
sub
sbb
decl
sub
add
fiaddl
add
add
dec
mov
ficompl
dec
or
in
add
loope
inc
add
add
les
sbb
sbb
pop
ret
push
add
dec
popf
push
jae
add
test
add
pushf
adc
test
add
add
adc
cmp
mov
mov
or
add
add
cmc
jb
test
add
xor
add
push
add
imul
jo
mov
push
add
sub
mov
out
dec
adc
add
add
mov
mov
bound
mov
add
mov
pop
and
lock
add
jmp
aad
inc
test
add
add
add
add
movsl
cli
lret
add
testb
ret
mov
add
cmpsl
scas
sub
imul
push
dec
cmp
sub
push
mov
icebp
pop
mov
sahf
jae
add
ret
pcmpgtd
add
mov
hlt
add
lahf
lret
ljmp
pop
and
jge
add
adc
test
out
or
adc
add
test
add
push
mov
jae
add
loope
lods
leave
or
xchg
add
into
dec
rolb
scas
xchg
mov
add
inc
test
fsts
sub
mov
nop
add
xor
push
add
mov
std
inc
movb
mov
add
aam
call
mov
pushf
stos
ljmp
xor
adc
mov
jecxz
add
jns
out
in
test
dec
jo
xchg
xchg
xchg
cmp
jo
nop
add
push
kmovb
pop
dec
or
int3
xor
jecxz
push
ljmp
inc
add
js
movntq
cmp
add
pusha
add
mov
lea
cmp
je
cmp
add
repnz
insl
mov
push
add
sbb
add
cmp
add
push
add
mov
dec
daa
loop
enter
out
stc
jmp
and
add
mov
mov
xchg
ljmp
xor
fsubr
fisttpll
addr16
ret
add
sub
lods
bound
mov
sbb
mov
push
int
cmp
js
add
or
out
add
les
lret
mov
add
enter
or
add
add
push
add
mov
aad
addb
ljmp
add
les
gs
add
rolb
ja
scas
inc
and
bound
mov
cs
dec
mov
jecxz
or
add
ljmp
fidivs
add
add
add
mov
dec
dec
test
in
cltd
outsl
push
add
cmp
mov
mov
adc
sbb
add
jl
js
cmpl
cmc
pop
loop
xor
or
add
add
sub
mov
add
jg
add
cs
jnp
add
xor
daa
stos
sub
cmp
add
lahf
add
cmp
test
mov
pop
imul
bound
mov
add
jns
add
fwait
mov
rcrl
inc
nop
add
data16
add
rolb
jmp
add
xor
nop
add
add
out
icebp
sar
mov
add
call
pop
jae
and
mov
lret
adc
xchg
push
push
dec
sbb
add
mov
rolb
sbb
add
add
data16
add
int3
cld
inc
add
pop
xchg
les
shrl
push
mov
mov
add
in
js
or
add
out
push
add
add
testb
add
add
add
add
inc
pop
dec
shll
add
add
mov
cwtl
adc
addb
add
add
jbe
daa
psraw
loope
sarl
dec
mov
mov
ret
cmc
cmpl
push
add
adc
adc
add
lods
and
divl
add
call
pop
out
inc
in
pop
push
bswap
cmp
mov
cld
mov
rep
sub
add
sub
lret
ljmp
ret
insl
pop
icebp
sbb
inc
aas
testb
scas
fisttps
mov
mov
mov
addb
mov
add
je
inc
add
pop
je
fidivrs
lock
lret
arpl
lea
and
add
lds
mov
pop
les
pushf
orl
and
mov
sub
mov
and
add
add
aad
cli
popa
mov
xlat
sub
stos
fmuls
push
sub
add
enter
mov
outsb
pop
dec
pop
jb
xchg
arpl
push
add
test
outsb
mov
pop
or
scas
scas
sub
mov
and
mov
outsl
dec
loope
add
xchg
popa
idiv
into
ds
movb
ljmp
add
cli
repz
faddl
pop
dec
addb
jno
lods
pop
outsb
mov
add
add
clc
movb
or
repz
xchg
pusha
add
mov
xor
pop
pusha
add
add
rolb
imul
push
aas
sbb
add
jnp
movsl
cmc
cmpsl
xor
movl
add
add
xor
dec
sbb
addb
add
add
popf
cmp
les
dec
cmp
aam
outsl
iret
jle
push
cmp
mov
add
push
add
out
add
ret
fdiv
add
add
add
std
je
cmp
popa
sbb
pusha
add
sahf
mov
ficoms
roll
lret
xchg
add
pop
dec
mov
clc
repnz
jae
inc
test
les
lea
negl
adc
add
les
arpl
test
xchg
sub
fwait
cld
nop
jmp
mov
mov
push
mov
loopne
add
add
dec
lea
add
push
clc
repnz
jae
add
add
add
add
add
mov
push
mov
xchg
ret
add
add
add
add
clc
repnz
jae
sti
leave
add
jnp
add
push
or
repnz
jae
mov
add
pop
inc
add
movzwl
clc
repnz
jae
mov
pop
add
jle
dec
cmp
repnz
jae
add
les
add
push
mov
xchg
ret
mov
adc
scas
call
clc
repnz
jae
pop
jno
nop
jae
add
add
and
nop
jae
les
add
add
mov
xor
clc
repnz
jae
dec
dec
add
push
clc
repnz
jae
add
les
sbb
popf
add
popa
adc
add
repnz
jae
add
push
std
testb
add
add
push
add
lcall
insl
sbb
push
add
pop
inc
add
rolb
xchg
ret
add
mov
add
dec
or
add
sbb
add
add
out
push
xor
cmp
nop
jae
dec
jno
push
out
adc
aas
push
clc
repnz
jae
insb
insb
sub
arpl
add
push
mov
xchg
ret
and
pop
add
add
rcrl
je
clc
repnz
jae
xchg
insb
sub
jne
je
repnz
jae
mov
add
mov
xchg
rolb
mov
dec
fwait
cld
nop
jmp
leave
jnp
add
sbb
das
dec
clc
repnz
jae
add
sub
mov
push
lea
clc
repnz
jae
cmpsb
add
add
les
rep
popa
fwait
cld
nop
jmp
add
insb
add
scas
sub
inc
lea
fwait
cld
nop
jmp
pop
push
adc
lcall
and
add
add
add
nop
jmp
add
out
cmpsb
inc
add
mov
clc
repnz
jae
adc
adc
and
rorl
std
iret
inc
add
add
and
lret
push
mov
xchg
ret
inc
mov
add
add
mov
fwait
cld
nop
jmp
add
push
push
mov
xchg
ret
std
sbb
add
mov
xchg
add
nop
jmp
add
add
push
add
add
in
pop
mov
push
mov
xchg
ret
add
sub
add
pop
test
loop
add
add
add
add
add
add
fwait
cld
nop
jmp
add
add
xchg
and
outsb
test
fwait
cld
nop
jmp
push
sbb
jnp
sbb
lds
add
push
add
add
add
sbb
mov
clc
repnz
jae
push
add
cld
nop
jmp
sub
add
add
enter
jae
test
sbb
dec
and
icebp
stos
mov
clc
repnz
jae
add
popf
add
add
jne
clc
repnz
jae
add
pop
add
fwait
cld
nop
jmp
les
add
add
add
out
add
add
adc
sub
nop
jmp
push
sbb
mov
add
add
mov
sar
repnz
jae
jno
add
sub
jae
add
push
rolb
xchg
ret
add
sub
mov
into
cmp
jmp
sbb
jno
dec
add
and
mov
and
add
sbb
dec
sti
add
out
dec
add
in
add
push
mov
xchg
ret
popf
add
add
adc
adc
inc
add
add
add
add
adc
add
clc
repnz
jae
test
mov
push
mov
xchg
ret
add
adc
cmp
add
and
cmpsb
add
add
sub
push
add
arpl
out
mov
and
mov
insb
add
mov
pop
fwait
cld
nop
jmp
lahf
std
pop
add
jno
add
clc
repnz
jae
sbb
lahf
mov
lea
fwait
cld
nop
jmp
add
lahf
add
add
add
add
add
fwait
cld
nop
jmp
sbb
pop
add
add
aaa
jl
ja
outsb
je
cld
nop
jmp
xchg
push
and
pop
push
or
repnz
jae
add
mov
cmp
clc
repnz
jae
push
push
xchg
add
fwait
cld
nop
jmp
add
add
data16
addr16
add
mov
clc
repnz
jae
add
sub
and
sbb
add
clc
repnz
jae
add
in
decb
sbbb
add
push
add
add
add
enter
nop
jmp
into
add
add
add
sub
mov
fwait
cld
nop
jmp
adc
pop
rolb
repnz
jae
mov
arpl
add
loop
fwait
cld
nop
jmp
add
sub
jno
popf
or
pop
out
add
sub
add
xor
icebp
cmp
repnz
jae
and
push
xchg
add
add
repnz
jae
xchg
push
push
lods
push
mov
xchg
ret
and
add
lea
add
sbb
rcrb
sbb
add
push
add
add
mov
add
test
fwait
cld
nop
jmp
add
sarb
pop
add
pop
clc
repnz
jae
add
mov
in
call
clc
repnz
jae
test
and
clc
mov
fwait
cld
nop
jmp
add
js
clc
repnz
jae
add
add
sub
add
nop
jmp
pop
add
add
add
add
aad
push
add
mov
insl
mov
clc
repnz
jae
std
add
inc
add
add
add
dec
add
add
add
std
mov
add
clc
repnz
jae
mov
add
pop
push
mov
xchg
ret
push
out
std
add
add
clc
repnz
jae
xchg
push
add
rolb
lea
fwait
cld
nop
jmp
add
cmpsb
add
popa
add
mov
xchg
ret
add
dec
add
push
add
cmp
nop
jae
mov
add
jno
add
lods
push
mov
xchg
ret
lea
add
mov
add
or
stc
inc
add
movsb
add
fstl
andl
add
and
cmpsb
add
clc
repnz
jae
insb
add
add
dec
add
shr
clc
repnz
jae
adc
divps
stc
ljmp
sbb
add
add
mov
nop
jae
and
dec
insb
inc
add
cli
xor
clc
repnz
jae
add
push
sbb
and
nop
jae
leave
add
add
add
add
repnz
jae
mov
add
sub
mov
clc
repnz
jae
pop
add
push
push
mov
xchg
ret
les
cmpsb
rclb
jne
test
mov
clc
repnz
jae
fdivrl
xchg
add
movsb
clc
repnz
jae
push
cmp
push
add
mov
repnz
jae
into
add
jecxz
add
clc
repnz
jae
xchg
add
and
push
mov
xchg
ret
add
sbb
dec
das
mov
clc
repnz
jae
dec
add
add
mov
clc
repnz
jae
sub
add
pop
mov
clc
repnz
jae
add
mov
repnz
jae
mov
mov
add
fcmovne
inc
add
add
push
add
adc
push
push
mov
xchg
ret
and
add
inc
push
mov
xchg
ret
leave
cmp
and
adc
clc
repnz
jae
les
add
add
mov
add
inc
add
add
cmp
adc
sbb
test
mov
add
push
add
add
mov
add
repnz
jae
adc
mov
clc
repnz
jae
push
add
add
insb
test
add
pop
push
mov
xchg
ret
push
add
dec
sbb
add
inc
sub
repnz
jae
add
push
add
jmp
mov
fmull
add
add
nop
jae
adc
add
add
test
add
add
repnz
jae
mov
inc
addb
push
push
mov
xchg
ret
add
dec
dec
mov
lods
add
add
repnz
jae
lahf
add
jnp
mov
clc
repnz
jae
adc
je
fwait
cld
nop
jmp
add
mov
fwait
cld
nop
jmp
scas
out
add
add
jnp
clc
repnz
jae
jnp
into
add
sub
inc
mov
clc
repnz
jae
adc
add
add
xor
add
clc
repnz
jae
add
scas
push
clc
repnz
jae
add
dec
add
mov
in
dec
clc
repnz
jae
add
popf
add
add
movb
mov
fwait
cld
nop
jmp
add
mov
add
addr16
outsl
popa
fs
repnz
jae
mov
leave
add
mov
clc
repnz
jae
add
enter
push
mov
xchg
ret
and
out
sub
add
add
mov
xchg
ret
add
add
add
mov
xchg
ret
jnp
faddl
add
mov
jmp
mov
and
decl
test
cld
lcall
or
add
std
add
xlat
or
test
add
clc
repnz
jae
mov
in
iret
mov
clc
repnz
jae
jnp
mov
or
movsb
push
mov
xchg
ret
add
add
clc
repnz
jae
cmpsb
jnp
scas
add
enter
push
mov
xchg
ret
add
mov
popf
push
push
mov
xchg
ret
add
add
mov
clc
repnz
jae
add
dec
fcoml
mov
clc
repnz
jae
add
insb
add
ja
mov
jmp
add
add
add
add
add
add
dec
push
clc
repnz
jae
add
add
clts
add
clc
repnz
jae
sbb
insb
sub
daa
aaa
and
test
cmp
sldt
add
add
sbb
icebp
adc
cmpl
pop
add
add
add
stc
lcall
dec
add
add
sub
cli
sub
fwait
cld
nop
jmp
mov
add
mov
push
mov
xchg
ret
insb
add
sbb
ror
clc
repnz
jae
les
mov
mov
lret
inc
add
insb
dec
add
sub
or
fwait
cld
nop
jmp
add
add
add
add
pop
clc
repnz
jae
add
les
add
mov
xchg
ret
add
dec
add
jp
push
mov
xchg
ret
cmpsb
sti
add
xor
push
mov
xchg
ret
add
ljmp
roll
xchg
ret
push
add
in
push
clc
repnz
jae
sub
std
add
add
xchg
and
and
ss
clc
repnz
jae
add
add
add
mov
add
add
mov
sbb
add
idiv
jnp
insb
mov
lds
pop
add
push
mov
xchg
ret
sub
out
add
add
imul
clc
repnz
jae
add
insb
add
inc
push
add
popa
clc
repnz
jae
add
adc
aas
mov
clc
repnz
jae
add
sub
dec
or
cld
nop
jmp
add
jno
add
fisttpll
jmp
and
add
add
sub
add
cmc
icebp
inc
add
add
add
jg
clc
repnz
jae
add
add
sbb
fsubr
inc
add
add
add
add
add
add
add
clc
repnz
jae
add
add
out
add
call
repnz
jae
mov
add
add
popa
add
cld
nop
jmp
add
add
popa
push
mov
xchg
ret
adc
add
clc
repnz
jae
out
push
sub
add
push
fmuls
nop
jae
lea
sub
enter
clc
repnz
jae
cmpsb
and
add
ss
add
add
add
clc
repnz
jae
push
add
out
add
add
repnz
jae
scas
add
leave
jo
jns
shlb
jae
xchg
jnp
nop
jae
add
add
jp
popl
clc
repnz
jae
into
add
add
mov
push
mov
xchg
ret
dec
into
cmpsb
adc
add
fwait
cld
nop
jmp
add
add
add
xlat
cmp
fs
cld
nop
jmp
add
adc
mov
mov
push
mov
xchg
ret
add
push
add
push
fwait
cld
nop
jmp
insb
test
add
mov
clc
repnz
jae
sub
pop
and
add
or
icebp
cmp
test
je
clc
repnz
jae
sub
mov
mov
jae
add
add
add
add
add
xchg
push
add
add
add
push
mov
mov
cld
nop
jmp
sti
into
mov
out
add
add
adc
repnz
jae
out
push
out
add
push
push
add
mov
imul
nop
jae
add
leave
mov
add
mov
pop
push
mov
xchg
ret
lea
add
dec
out
test
lcall
sbb
add
sti
mov
fwait
cld
nop
jmp
leave
add
push
and
add
push
clc
repnz
jae
add
rolb
popf
add
jge
clc
repnz
jae
add
add
add
add
ret
clc
repnz
jae
std
and
add
add
add
mov
nop
jae
lahf
add
sub
add
clc
repnz
jae
add
lahf
cmpsb
add
add
repnz
jae
test
mov
pop
clc
repnz
jae
xchg
add
cmp
fcoms
pop
fiaddl
xchg
ret
add
add
push
jno
popf
clc
repnz
jae
sub
add
add
repnz
jae
add
add
add
sub
mov
jl
add
stos
xchg
lods
pop
jae
add
pusha
add
and
mov
xchg
ret
add
mov
mov
add
add
andl
add
mov
mov
push
clc
repnz
jae
insb
add
add
add
jg
inc
add
add
add
clc
repnz
jae
add
mov
clc
repnz
jae
jno
inc
mov
nop
jae
push
pop
adc
add
sub
mov
push
mov
xchg
ret
insb
sbb
rolb
jne
clc
repnz
jae
xchg
les
jg
clc
repnz
jae
rcrb
add
push
mov
xchg
ret
add
add
add
adc
add
or
add
mov
add
bound
mov
fildl
add
repnz
jmp
popf
mov
movzwl
clc
repnz
jae
add
pop
add
xchg
jae
pop
mov
clc
repnz
jae
push
dec
add
popf
add
add
clc
repnz
jae
and
add
repnz
jae
add
sub
and
add
add
pop
clc
repnz
jae
jnp
add
push
sbb
add
add
clc
repnz
jae
add
sub
push
push
sbb
filds
xchg
ret
mov
add
add
push
push
add
jle
lcall
sbb
add
add
lcall
or
add
add
add
xchg
repnz
jae
dec
adc
push
mov
mov
clc
repnz
jae
les
inc
sub
arpl
push
push
mov
xchg
ret
add
add
les
clc
repnz
jae
in
mov
and
imul
clc
repnz
jae
push
and
insb
shrb
and
add
clc
repnz
jae
add
mov
out
xchg
add
outsb
xor
clc
repnz
jae
into
dec
add
jne
je
fwait
cld
nop
jmp
cmpsb
mov
insb
mov
jae
insb
dec
les
add
adc
mov
add
add
mov
clc
repnz
jae
add
in
add
add
clc
repnz
jae
jno
add
cmp
fwait
cld
nop
jmp
add
push
dec
add
add
xchg
fiaddl
jmp
sub
add
add
into
add
roll
xchg
ret
mov
add
pop
jmp
clc
repnz
jae
popf
fdivrl
sub
add
clc
repnz
jae
xchg
xchg
add
pusha
add
mov
clc
repnz
jae
mov
inc
test
add
call
fwait
cld
nop
jmp
add
push
add
or
add
clc
repnz
jae
dec
sub
push
mov
xchg
ret
sti
adc
push
add
lea
jmp
add
adc
insb
add
lahf
add
add
mov
push
clc
repnz
jae
jnp
push
add
jnp
add
clc
repnz
jae
mov
add
je
clc
repnz
jae
pop
std
adc
rolb
xchg
ret
xchg
jnp
add
mov
in
mov
clc
repnz
jae
lahf
popf
add
sub
add
add
clc
repnz
jae
sti
adc
mov
add
clc
repnz
jae
sbb
add
dec
push
push
mov
xchg
ret
add
add
out
in
push
add
clc
repnz
jae
faddl
add
sub
add
add
les
jg
clc
repnz
jae
add
pop
leave
add
inc
push
sbb
cld
nop
jmp
add
test
add
and
mov
clc
repnz
jae
add
add
sar
nop
jae
insb
sbb
inc
adc
add
clc
repnz
jae
inc
and
add
add
pop
clc
repnz
jae
add
inc
pop
add
sub
movzwl
clc
repnz
jae
and
lahf
std
adc
add
stos
fwait
cld
nop
jmp
mov
insb
xchg
cmp
push
js
fwait
cld
nop
jmp
add
add
push
movb
add
nop
jae
add
add
mov
inc
add
cld
nop
jmp
mov
dec
add
pop
push
mov
add
add
add
add
add
xchg
add
mov
fwait
cld
nop
jmp
xchg
pop
push
add
add
out
pop
push
mov
xchg
ret
add
push
in
mov
clc
repnz
jae
add
adc
add
clc
repnz
jae
sbb
mov
clc
repnz
jae
add
add
add
fsubrp
into
push
add
fwait
cld
nop
jmp
add
mov
repnz
jae
scas
cmpsb
faddl
adc
add
cld
nop
jmp
pop
sbb
adc
add
push
push
push
mov
xchg
ret
fmull
and
fwait
cld
nop
jmp
adc
sbb
movsb
clc
repnz
jae
lea
xchg
adc
add
inc
and
push
mov
xchg
ret
add
sbb
pushf
pushl
push
mov
xchg
ret
les
add
clc
repnz
jae
mov
mov
clc
repnz
jae
scas
add
xchg
nop
jmp
add
rolb
add
add
dec
adc
repnz
jae
mov
movb
mov
clc
repnz
jae
add
lock
lock
add
inc
push
mov
dec
jecxz
cmpsb
add
clc
repnz
jae
mov
popa
clc
repnz
jae
mov
out
mov
add
push
mov
xchg
ret
sub
insb
add
push
mov
xchg
ret
push
lea
dec
add
out
ficoml
repnz
jae
add
add
add
add
lcall
add
jnp
dec
leave
inc
out
xchg
clc
repnz
jae
add
and
add
add
inc
add
mov
add
in
dec
clc
repnz
jae
add
std
pop
inc
inc
sar
cmp
cld
nop
jmp
inc
sub
ret
add
add
clc
repnz
jae
rolb
arpl
stc
mov
clc
repnz
jae
push
sub
add
push
clc
repnz
jae
add
sub
add
clc
repnz
jae
add
add
imul
in
incl
add
pop
add
pop
push
jbe
testb
add
clc
repnz
jae
mov
and
mov
add
fisttps
test
clc
repnz
jae
out
out
cmpsl
xor
iret
add
clc
repnz
jae
out
dec
adc
push
mov
xchg
ret
mov
les
lsl
push
mov
xchg
ret
add
aas
mov
clc
repnz
jae
add
sub
leave
mov
std
pop
fwait
cld
nop
jmp
arpl
add
push
out
insb
dec
inc
inc
add
inc
adc
cld
nop
jmp
cmpsb
cmp
add
sbb
add
fwait
cld
nop
jmp
leave
mov
std
mov
jge
sti
clc
repnz
jae
adc
add
add
test
jae
dec
arpl
add
pop
add
push
mov
ja
mov
clc
repnz
jae
add
add
mov
add
push
push
mov
xchg
ret
mov
add
xor
xchg
add
push
clc
repnz
jae
xchg
add
add
mov
addb
add
clc
repnz
jae
sbb
push
push
pop
xchg
clc
pop
push
mov
xchg
ret
dec
add
cltd
push
clc
repnz
jae
in
add
dec
push
add
inc
outsl
sub
clc
repnz
jae
cmp
add
push
dec
push
push
mov
clc
repnz
jae
add
add
nop
jae
add
adc
jne
clc
repnz
jae
add
jnp
subl
clc
repnz
jae
dec
add
add
or
sar
repnz
jae
add
add
popa
mov
and
fwait
cld
nop
jmp
dec
add
jmp
inc
fwait
cld
nop
jmp
add
xchg
out
push
out
cmp
mov
xchg
ret
add
add
dec
add
dec
add
sub
cmp
ret
les
inc
push
aas
add
clc
repnz
jae
les
insb
add
and
push
mov
clc
repnz
jae
xchg
les
test
enter
nop
jae
jnp
add
jnp
add
add
clc
repnz
jae
add
out
test
push
mov
add
add
add
aam
add
add
fwait
cld
nop
jmp
mov
add
add
push
mov
xchg
ret
add
add
add
repnz
enter
jae
dec
adc
out
push
fcompl
push
mov
xchg
ret
insb
add
add
add
loop
ds
clc
repnz
jae
leave
push
out
out
mov
add
lahf
mov
clc
repnz
jae
add
and
pop
add
aam
inc
add
add
push
scas
mov
add
movzwl
clc
repnz
jae
add
pop
clc
repnz
jae
dec
add
add
jmp
rorb
and
sbb
add
push
add
rep
clc
repnz
jae
add
push
dec
mov
clc
repnz
jae
add
add
xchg
add
loopne
mov
xchg
ret
adc
add
mov
flds
adcl
xchg
mov
cld
nop
jmp
add
and
add
mov
add
dec
fwait
cld
nop
jmp
les
and
arpl
add
mov
clc
repnz
jae
add
mul
add
add
xor
repnz
jae
add
add
push
add
in
adc
mov
add
add
adc
mov
cmp
add
jnp
mov
jae
add
add
and
add
inc
cmp
sub
inc
add
add
fsubrl
adc
in
and
add
clc
repnz
jae
into
les
test
icebp
lcall
ljmp
sti
fiadds
or
cmp
ret
add
arpl
add
add
jne
clc
repnz
jae
add
les
pop
push
mov
xchg
ret
add
add
and
push
mov
xchg
ret
add
add
add
mov
fwait
cld
nop
jmp
add
and
add
push
push
mov
xchg
ret
add
push
add
add
mov
clc
repnz
jae
adc
add
add
sbb
mov
or
add
or
add
add
add
push
mov
xchg
ret
sub
add
add
pop
xor
cmp
nop
jmp
in
add
out
arpl
mov
clc
repnz
jae
out
add
dec
inc
mov
repnz
jae
add
fdivr
push
ljmp
clc
repnz
jae
add
cmp
repnz
jae
push
add
sti
les
mov
xor
clc
repnz
jae
add
add
dec
inc
add
cltd
hlt
clc
repnz
jae
push
push
into
sbb
mov
fwait
cld
nop
jmp
sbb
add
sbb
pop
jnp
andl
jae
push
and
add
pushl
add
sub
add
sbb
fildl
nop
jae
add
cmpsb
push
arpl
das
pusha
push
mov
xchg
ret
adc
push
inc
add
add
add
mov
repnz
jae
into
push
add
mov
div
clc
repnz
jae
add
add
scas
mov
mov
xchg
ret
scas
add
dec
fdivl
mov
clc
repnz
jae
scas
add
lahf
mov
clc
repnz
jae
add
mov
movsb
add
sar
nop
jae
jnp
sbb
xchg
mov
push
clc
repnz
jae
sub
dec
mov
les
loopne
mov
xchg
ret
les
add
push
clc
repnz
jae
adc
add
mov
cld
pop
clc
repnz
jae
add
add
inc
push
add
and
and
add
mov
xchg
ret
into
dec
add
add
add
clc
repnz
jae
sub
add
inc
add
xor
fwait
cld
nop
jmp
add
add
xchg
adc
add
add
clc
repnz
jae
add
mov
adc
add
mov
clc
repnz
jae
inc
insb
lea
sti
clc
repnz
jae
inc
mov
mov
inc
xchg
add
push
add
add
push
adc
sub
movsl
clc
repnz
jae
test
stc
cmp
fwait
cld
nop
jmp
dec
sub
add
add
add
jno
add
repnz
jae
arpl
sbb
add
add
or
mov
xchg
ret
dec
push
dec
pop
mov
sbb
je
clc
repnz
jae
xchg
add
and
fwait
cld
nop
jmp
mov
mov
and
lahf
ret
add
test
or
nop
jae
les
mov
mov
xchg
ret
jno
add
repnz
jae
push
test
out
add
add
mov
push
push
mov
xchg
ret
dec
and
inc
add
fwait
cld
nop
jmp
insb
jno
dec
adc
sub
ds
clc
repnz
jae
dec
push
fsubrl
jnp
sbb
sbb
cmp
ret
leave
les
add
xchg
jp
loop
mov
xchg
ret
sbb
add
insb
mov
clc
repnz
jae
mov
mov
push
clc
repnz
jae
arpl
pop
out
inc
add
test
or
add
repnz
jae
into
sbb
add
add
add
mov
adc
repnz
jae
add
add
dec
push
mov
xchg
ret
add
cmp
add
in
decl
fsubrl
push
push
and
repnz
jae
jno
arpl
and
scas
adc
mov
movl
add
sub
add
sahf
movzwl
fwait
cld
nop
jmp
add
aaa
xor
pusha
fwait
cld
nop
jmp
lahf
add
faddl
add
mov
imul
fwait
cld
nop
jmp
scas
add
add
add
add
repnz
jae
scas
leave
push
add
stc
shr
clc
repnz
jae
add
add
xchg
xor
push
xor
push
mov
xchg
ret
inc
add
faddl
mov
mov
repnz
jae
rolb
add
push
pop
mov
clc
repnz
jae
mov
dec
call
fwait
cld
nop
jmp
sub
dec
add
inc
add
mov
xchg
ret
faddl
arpl
test
cmpsb
add
push
clc
repnz
jae
add
mov
add
add
cmp
fwait
cld
nop
jmp
sbb
add
insb
add
push
clc
repnz
jae
xchg
out
add
ficoms
in
add
add
incl
dec
mov
sub
fwait
cld
nop
jmp
add
dec
add
mov
push
mov
xchg
ret
add
les
and
fwait
cld
nop
jmp
dec
push
and
adc
push
inc
std
add
clc
repnz
jae
dec
add
sbb
nop
jmp
xchg
into
sbb
ja
fwait
cld
nop
jmp
sub
jno
fiadds
pop
cmp
repnz
jae
add
les
mov
mov
add
add
repnz
jae
insb
add
xchg
fwait
cld
nop
jmp
push
add
jno
mov
and
add
add
clc
repnz
jae
add
add
mov
add
fimuls
nop
jmp
mov
push
les
xchg
sub
add
clc
repnz
jae
jno
add
mov
add
push
pop
push
fwait
cld
nop
jmp
sbb
inc
add
add
sbb
call
clc
repnz
jae
push
add
lea
jae
add
dec
out
add
mov
and
repnz
jae
add
mov
fwait
cld
nop
jmp
push
dec
add
aas
cs
clc
repnz
jae
add
add
add
ret
clc
repnz
jae
and
add
mov
add
repz
repnz
jae
insb
les
addps
repnz
jae
add
add
and
sub
pop
push
mov
or
add
enter
addl
repnz
jae
push
add
add
add
rep
clc
repnz
jae
add
cmp
push
loopne
mov
xchg
ret
push
and
jno
clc
push
fwait
cld
nop
jmp
out
scas
push
into
add
in
repnz
jae
jno
inc
add
std
xor
loope
repnz
jae
add
testb
mov
add
fwait
cld
nop
jmp
faddl
and
pop
mov
clc
repnz
jae
add
add
xor
jae
repnz
jae
add
add
nop
jae
push
add
push
add
add
jo
in
shr
clc
repnz
jae
add
les
cmpw
fwait
cld
nop
jmp
scas
add
mov
testb
lea
push
mov
xchg
ret
out
push
sub
add
add
repnz
jae
add
sub
dec
add
mov
xchg
ret
add
adc
add
add
sti
clc
repnz
jae
shlb
dec
or
repnz
jae
add
repnz
jns
in
jmp
mov
dec
mov
clc
repnz
jae
dec
push
add
add
mov
dec
add
mov
xchg
ret
jno
add
mov
xchg
ret
add
add
mov
mov
push
clc
repnz
jae
add
rolb
add
add
ret
clc
repnz
jae
cmpsb
out
add
movzwl
clc
repnz
jae
add
jnp
mov
enter
cmp
ret
push
insb
lea
add
sti
mov
clc
repnz
jae
leave
add
add
repnz
jae
add
add
add
data16
add
mov
lods
add
push
mov
xchg
ret
add
lahf
add
mov
clc
repnz
jae
inc
out
mov
clc
repnz
jae
std
add
adc
cld
nop
jmp
faddl
add
push
arpl
out
adc
movb
xor
push
mov
xchg
ret
jno
add
sti
and
push
mov
xchg
ret
out
std
sbb
inc
add
mov
clc
repnz
jae
and
test
arpl
mov
fcomip
inc
add
sbb
add
push
js
mov
push
ljmp
add
insl
fwait
add
xchg
or
aas
clc
repnz
jae
add
sbb
add
and
repnz
jae
add
dec
add
ret
nop
add
add
insl
mov
fwait
cld
nop
jmp
add
add
pop
clc
repnz
jae
cmp
add
movb
add
repnz
jae
add
push
adc
lahf
sti
push
add
popa
jecxz
sbb
nop
jmp
add
lahf
add
add
cs
insb
clc
repnz
jae
add
push
add
add
mov
test
repnz
jae
add
add
add
stos
push
fwait
cld
nop
jmp
std
in
mov
scas
add
add
enter
jae
push
add
add
add
loope
mov
clc
repnz
jae
add
push
fmull
adc
repnz
jae
sub
les
shrb
push
mov
xchg
ret
mov
add
sub
add
add
add
push
add
faddl
call
push
mov
xchg
ret
xchg
add
jno
aam
sub
hlt
repnz
add
push
add
add
bound
mov
mov
inc
add
push
mov
xchg
ret
cmpsb
into
into
cmpsb
add
inc
mov
rcll
loop
add
adc
rolb
add
mov
dec
cmp
repnz
jae
add
adc
push
inc
ret
inc
cmp
repnz
jae
add
mov
add
mov
jmp
add
sti
pop
mov
adc
jle
clc
repnz
jae
add
add
test
push
mov
xchg
ret
cmpsb
add
shlb
push
mov
xchg
ret
popf
add
test
add
clc
repnz
jae
add
out
add
mov
add
add
repnz
jae
xchg
add
add
lock
stos
cmpl
fwait
cld
nop
jmp
add
add
push
push
cli
mov
fwait
cld
nop
jmp
inc
push
add
pushl
push
mov
xchg
ret
sbb
into
add
sub
cmp
inc
add
add
push
add
adc
mov
cld
nop
jmp
std
and
push
add
mov
push
mov
xchg
ret
pop
xchg
les
iret
test
fwait
cld
nop
jmp
inc
add
add
add
add
jmp
jmp
jno
mov
out
add
inc
adc
cld
nop
jmp
scas
add
insb
jno
or
nop
jae
mov
add
add
mov
xchg
add
add
repnz
jae
pop
add
add
adc
repnz
jae
add
add
mov
and
mov
xchg
ret
add
add
add
mov
push
mov
xchg
ret
sub
sub
add
pop
rep
fwait
cld
nop
jmp
and
std
les
push
sub
in
jmp
sub
jnp
les
out
add
add
out
mov
in
pop
jecxz
cmc
loop
mov
stos
xchg
push
add
sbb
pop
adc
into
add
clc
repnz
jae
add
add
add
add
mov
clc
repnz
jae
add
or
repnz
jae
popf
add
test
add
and
push
mov
xchg
ret
add
inc
add
add
add
push
mov
xchg
ret
add
and
jmp
add
repnz
jae
rolb
pop
add
sar
nop
jae
add
mov
jmp
push
sbb
add
sub
dec
rolb
add
subl
jp
jmp
add
add
clc
repnz
jae
sub
std
push
add
push
mov
fstl
inc
add
add
jb
dec
push
push
mov
xchg
ret
push
scas
test
xchg
shl
fisubl
xor
add
fwait
cld
nop
jmp
push
add
mov
mov
nop
jae
add
add
inc
add
add
pop
push
mov
xchg
ret
add
jnp
add
movb
mov
xchg
ret
sub
test
nop
jmp
add
add
loope
push
push
mov
xchg
ret
add
into
push
adc
push
jmp
push
mov
xchg
ret
sub
xchg
add
or
fwait
cld
nop
jmp
add
push
and
xchg
add
jae
test
push
adc
add
roll
sub
inc
and
repnz
jae
add
and
out
jo
inc
movb
mov
jmp
add
sub
add
add
add
add
push
mov
xchg
ret
add
add
dec
imul
sbb
ljmp
mov
add
add
mov
clc
repnz
jae
les
add
mov
mov
nop
jae
add
cmpsb
into
push
sub
filds
xchg
ret
add
dec
and
icebp
add
xor
push
mov
xchg
ret
and
sbb
add
lea
clc
repnz
jae
add
arpl
add
mov
nop
jae
leave
lahf
lea
add
push
clc
repnz
jae
push
sub
sub
dec
add
add
pusha
add
add
pop
or
repnz
jae
push
add
mov
popf
mov
fists
repnz
jae
cmp
add
add
std
pop
popa
clc
repnz
jae
add
add
add
les
jl
clc
repnz
jae
and
call
mov
xchg
ret
add
push
pop
pop
clc
repnz
jae
dec
dec
faddl
dec
and
sbb
mov
repnz
jae
shrb
adc
into
add
jb
sbb
clc
repnz
jae
push
into
add
xor
xor
and
repnz
jae
adc
add
cmpl
fwait
cld
nop
jmp
cmp
test
add
mov
repnz
jae
leave
sub
dec
stc
mov
push
mov
xchg
ret
mov
add
cmp
fwait
cld
nop
jmp
add
add
sub
cmp
mov
jne
fwait
cld
nop
jmp
add
add
push
add
add
mov
xchg
ret
add
xchg
cmpsb
add
pop
stos
mov
clc
repnz
jae
add
sub
mov
sub
js
add
out
add
xor
mov
loope
aaa
mov
add
adc
stos
stc
aad
ret
pop
addr16
cmp
mov
add
imul
insb
loop
fcomip
add
cwtl
xlat
jae
add
add
fidivrl
xchg
add
mov
mov
lret
jne
addb
ret
pop
rolb
push
mov
add
ret
xlat
dec
cmp
int3
rolb
ficoml
push
add
add
push
xchg
add
add
add
stos
cmp
add
push
add
mov
add
sbb
lahf
inc
popf
lret
movsl
out
add
add
add
cmpsl
in
inc
add
jb
adc
ret
je
imul
mov
pop
xchg
add
dec
push
add
cmp
push
scas
ret
jg
add
mov
jmp
lret
mov
add
add
xchg
add
in
hlt
add
cmp
dec
pop
jne
and
mov
addb
add
cmp
sbb
add
sbb
adc
push
add
add
mov
mov
pusha
add
enter
ficomps
add
add
mov
or
outsb
dec
pop
add
mov
js
in
cs
das
adc
hlt
add
daa
int3
mov
add
push
push
aaa
sub
add
add
dec
cmpsb
add
add
mov
dec
pop
repnz
cli
decb
add
sbb
add
aas
xchg
xor
out
outsl
push
add
inc
add
add
data16
add
sbb
cmp
cmpsb
add
popa
and
inc
jbe
movsb
add
add
ljmp
add
add
out
add
dec
or
add
ja
xchg
pop
pop
push
insb
lods
test
aad
mov
inc
add
mov
jb
or
cmp
xchg
or
nop
add
pop
call
xchg
add
or
pop
or
add
adc
inc
daa
add
cmp
stos
jnp
in
mov
sub
add
sub
dec
pop
push
lret
loop
adc
fadds
fmuls
and
cmp
lods
xchg
mov
popa
xchg
test
jo
adc
xor
jl
repz
add
sub
gs
add
hlt
add
add
aad
add
push
mov
xchg
dec
and
mov
add
xchg
jecxz
push
test
sbb
pop
and
adc
fwait
mov
and
lea
push
loope
jmp
loopne
cmp
push
add
add
xor
pop
call
pop
pop
pop
js
inc
add
push
add
cs
add
sub
mov
cmpsb
add
add
test
jmp
es
jmp
notl
adc
mov
pop
data16
sbb
mov
fsubrs
add
add
ljmp
out
outsl
iret
ja
int
adc
ret
xor
adc
rolb
fsubs
mov
or
loop
adc
negl
call
pop
lcall
in
mov
add
mov
or
mov
add
icebp
push
dec
sbb
addb
mov
in
sbb
fcomps
sbb
lret
cmpsb
add
pop
sbb
insl
xchg
cmpsl
int
sbb
lret
mov
jns
jns
bound
mov
ret
jbe
adc
cmc
push
pop
xlat
adc
mov
add
push
rcr
push
mov
cwtl
in
rolb
mov
add
inc
sub
cmp
int
aad
add
into
xlat
lock
rolb
loopne
lods
jecxz
push
mov
add
add
push
jecxz
stos
call
add
mov
out
je
sub
les
and
outsb
in
push
add
xchg
jl
add
clc
enter
cmp
fucomi
vpinsrw
mov
mov
fcmovb
add
rolb
in
dec
mov
mov
add
cmp
dec
cltd
outsl
mov
xchg
sub
nop
add
fbstp
add
mov
add
lret
roll
inc
add
pop
and
je
aam
lods
sbb
add
add
rcrl
ret
xchg
cltd
mov
imul
pop
jecxz
hlt
add
outsb
fdiv
and
mov
xchg
add
ds
push
add
push
add
add
add
add
bound
mov
ds
jge
fidivs
add
add
mov
dec
addl
add
mov
cmp
add
add
lock
testb
push
loopne
sub
lahf
das
push
add
adc
jl
lea
addb
pusha
add
add
add
cmpsb
add
add
add
imul
adc
push
add
in
lret
jo
adc
clc
jae
add
add
sbb
imul
gs
addb
jmp
add
or
add
and
das
ja
add
xchg
add
cmpsl
fld
add
pop
out
ret
out
mov
cmp
add
or
roll
mov
mov
sbb
lret
mov
subl
fdivrs
stos
and
mov
fdivl
add
add
add
aad
gs
dec
cmp
ficoms
gs
xchg
in
adc
add
push
add
add
xor
add
jge
add
add
or
fdivrs
cmp
add
mov
mov
add
mov
mov
add
add
and
mov
dec
shll
testb
test
add
dec
aad
adc
adc
sahf
mov
fcmovbe
add
add
add
mov
cmpsl
jg
lahf
fmuls
mov
add
jbe
fistpl
xorl
add
fdivrs
add
fnstcw
add
mov
add
pop
pusha
add
xor
in
adc
movb
add
jl
imul
inc
add
dec
scas
cmpsb
add
and
mov
add
inc
add
mov
testl
add
imul
lds
add
dec
imull
xor
repz
insl
dec
jo
rcr
sbb
sub
or
xchg
xchg
xor
cmpsb
add
xchg
mov
int
cli
in
cwtl
adc
jg
mov
add
mov
stos
fmul
pop
bound
mov
mov
and
in
cmpsl
xchg
fcompl
pop
add
ret
pop
inc
add
jl
add
mov
pushf
pop
mov
jbe
push
out
sbb
inc
add
loopne
sbb
add
push
add
push
add
add
loope
lret
hlt
add
mov
cmp
pushf
mov
inc
add
scas
insb
enter
xor
mov
jno
gs
inc
add
lods
dec
inc
add
insb
cmc
lahf
mov
xchg
add
inc
mov
jo
fsqrt
ljmp
inc
dec
testb
adc
notl
add
add
lcall
add
mov
cld
mov
fists
out
out
fcomp
fld1
fcoms
add
xor
nop
add
sub
xchg
lods
or
adc
sbb
sbb
add
push
subl
add
add
inc
xor
cltd
cmp
filds
mov
add
ja
decb
inc
add
push
add
add
add
lods
mov
icebp
push
add
pop
test
xlat
or
loope
mov
imul
cmp
daa
and
ss
add
mov
push
cld
inc
add
bound
mov
mov
scas
add
fisttpl
add
incb
call
and
add
aaa
mov
jmp
addr16
std
pop
xor
inc
repnz
jge
jle
sbb
add
cmp
mov
cmp
clc
les
addr16
incb
add
xchg
addb
pop
ror
jg
cmc
push
add
mov
add
add
add
iret
mov
aam
push
push
mov
add
add
add
add
cmp
add
insl
clc
jae
add
repz
mov
adc
hlt
add
mov
jns
pop
push
add
push
loope
popf
dec
mov
mov
add
dec
mov
arpl
or
int
add
mov
add
add
add
xor
xchg
add
add
outsb
push
add
mov
outsb
mov
sbb
add
cs
pop
mov
cmc
pop
pushf
push
add
add
cwtl
or
mov
cmc
mov
jg
mov
and
mov
add
add
jg
add
addb
jmp
sbb
daa
jmp
add
mov
and
mov
cmpsb
add
mov
mov
mov
add
jae
jl
in
cmp
pop
outsl
sbb
xor
popa
stos
mov
push
pop
add
enter
add
mov
pop
leave
lds
xor
js
add
out
js
jp
jnp
or
cmp
js
add
add
cmp
xchg
add
add
notl
or
or
add
and
xchg
add
adc
add
mov
imul
add
add
xchg
inc
repz
daa
sub
add
add
aam
adc
int3
cld
stos
lcall
xchg
insl
lods
aas
bound
mov
push
subl
add
mov
bound
mov
rolb
cmpsl
popf
lret
jo
jecxz
xor
adc
aam
mov
shll
adc
and
mov
add
push
add
mov
insl
add
sbb
pop
in
cs
inc
add
add
stos
push
add
adcl
jne
sahf
lret
add
sarl
cmp
sbb
incl
mov
rcl
add
mov
mov
cmpsl
fwait
mov
inc
inc
add
push
in
cmp
add
into
lods
push
hlt
add
mov
fdivrp
mov
add
add
imul
push
pop
inc
push
add
adc
jbe
aad
add
pusha
add
pushf
leave
cmp
aad
add
mov
xor
mov
dec
and
mov
test
push
add
add
jns
aas
mov
or
add
add
arpl
add
lahf
push
add
sub
mov
adc
repnz
loope
leave
out
xchg
add
push
add
fsubl
pop
in
pop
and
mov
js
rolb
shrl
adc
int3
or
add
mov
xchg
inc
add
add
jecxz
pop
pop
cmc
cmpsb
add
lcall
ret
mov
clc
cmpsl
jl
dec
cmp
movsb
add
xor
cmp
add
lret
cmpsb
add
and
mov
add
mov
mov
testb
movb
xchg
mov
loop
inc
rorl
addb
add
mov
sahf
fs
push
add
pop
xchg
mov
mov
add
add
out
rcr
ficomps
add
jmp
add
movb
pop
mov
sbb
xlat
ret
lods
add
and
jp
add
in
and
mov
add
add
xlat
adc
pop
sbb
add
push
addl
pop
push
add
jecxz
aas
roll
add
fcom
add
imul
lds
cld
jo
mov
inc
cmp
add
cmc
jg
mov
add
cli
lret
xor
loope
cli
or
or
inc
add
scas
add
inc
fcmovnu
out
and
add
pop
fsubr
push
cmpsl
ljmp
fdivrs
mov
xchg
mov
pop
pushf
sub
fnsave
xor
imul
add
push
add
xchg
and
mov
ss
add
loope
cmp
jnp
cwtl
mov
movb
xor
cmpsb
add
mov
pop
push
pmullw
movsb
add
lea
jo
insl
js
xchg
push
add
jmp
add
lret
dec
movb
add
pop
adc
lret
mov
dec
inc
add
add
mov
mov
xchg
jae
pop
cltd
adc
cmp
add
and
xor
cld
loop
dec
mov
add
sbb
add
mov
mov
or
or
add
add
xlat
das
roll
add
ret
mov
add
add
add
add
add
mov
rolb
data16
add
into
dec
pop
es
into
pop
push
add
adc
out
xor
shll
loope
dec
jno
aam
mov
or
rolb
pop
negl
aaa
mov
jbe
inc
add
movb
les
pop
cmpsb
add
jge
pop
jecxz
addb
daa
mov
add
notl
pop
adc
mov
fcmovnbe
add
inc
jecxz
jge
cld
push
imul
mov
xor
cmp
sub
add
add
add
add
movb
add
pop
mov
lcall
cmp
cmp
and
push
add
add
movsl
mov
repnz
fidivrl
xlat
sub
aas
sbb
dec
push
add
push
adc
xchg
add
adc
lret
movsb
add
dec
ja
add
stos
cli
jg
and
addb
add
sbb
in
mov
lea
add
cmpsb
add
in
adc
pop
jbe
cmpl
mov
cmp
add
add
out
mov
mov
sti
fsubs
add
sub
mov
jo
add
add
daa
lret
ret
fbstp
cmp
add
xor
clc
or
outsl
mov
add
add
fwait
push
sub
add
daa
cmp
add
add
add
mov
scas
push
dec
scas
pop
repz
push
add
sub
in
push
jnp
xor
or
add
add
jge
inc
add
test
sbb
dec
pop
aad
add
add
pop
mov
pop
and
mov
dec
jp
test
lds
add
mov
in
add
pop
add
sbb
jns
add
add
add
repz
xchg
out
push
add
imul
fmuls
inc
sub
sub
xchg
add
push
jge
idiv
mov
rolb
test
inc
add
add
add
add
out
sbb
call
mov
popf
jo
adc
fwait
dec
scas
lods
pushf
insb
push
movsl
add
inc
and
mov
add
pop
test
add
pop
das
testb
push
add
sub
testb
add
aam
lret
pop
icebp
fnstcw
xchg
popa
test
inc
add
cmp
add
xchg
add
cltd
pop
repz
push
add
into
push
add
add
xchg
enter
xchg
xor
xchg
add
mov
das
push
or
and
mov
add
adc
add
data16
sbb
mov
xor
xchg
lods
jl
adc
std
lods
mov
cmp
push
movsl
push
push
clc
ljmp
or
je
stc
addb
push
mov
enter
flds
sbb
add
clc
pusha
add
movb
add
lahf
in
movsb
add
xor
add
add
push
add
add
cmp
adc
pusha
add
rolb
add
jmp
iret
adcl
sub
movb
add
pushf
fwait
or
mov
sbb
mov
xlat
into
fisubrl
add
add
push
mov
jg
mov
jns
jo
lcall
sub
aaa
mov
add
mov
cmpsl
rcll
add
mov
arpl
cwtl
mov
cltd
xlat
mov
loop
mov
jns
mov
pop
jp
add
add
inc
add
push
mov
fidivs
in
mov
xchg
jo
aaa
mov
stc
sub
cmp
add
ret
ja
add
xor
sbb
mov
int
mov
int3
xor
int
add
nop
add
dec
shll
and
stos
push
mov
insb
and
mov
sbb
add
add
inc
jns
push
imul
jge
jmp
je
push
add
add
icebp
leave
in
lahf
mov
fdivrs
add
add
add
sbb
cmp
ret
add
add
add
sbb
mov
sub
xor
cmpsl
outsb
nop
add
jb
xlat
pop
lret
popa
xchg
push
jl
add
add
mov
scas
ljmp
in
aaa
jne
movb
or
sub
add
mov
xchg
aaa
adc
adc
mov
imul
xchg
movsb
add
ja
loop
outsb
xor
cld
sub
pop
cmpsl
popf
int
imul
and
mov
xchg
add
insl
xor
in
xor
add
xchg
dec
addb
xchg
pop
out
or
add
pop
and
test
sub
aas
cmpsl
mov
mov
sub
dec
jnp
add
pop
idivl
outsb
cmp
mov
cs
cs
in
lret
std
fsubl
xlat
ljmp
add
pop
lret
ret
xchg
inc
sub
add
add
lahf
scas
jns
jl
jecxz
push
add
imul
addr16
cmpsb
add
mov
mov
addb
mov
pop
cmpsl
scas
adc
cmp
dec
daa
cwtl
arpl
sarl
add
and
jns
push
add
fwait
mov
mov
cmpsb
add
or
mov
xchg
addr16
cltd
in
add
mov
add
add
push
sub
jbe
out
mov
add
in
xchg
push
popf
jmp
aaa
out
rorl
hlt
add
mov
add
add
or
hlt
add
push
ss
add
out
or
sbb
int3
cmp
add
bound
mov
stos
in
mov
add
les
inc
pop
sub
push
add
lods
aad
jo
dec
leave
mov
in
cmpsb
add
add
pop
jmp
mov
mov
add
loop
adc
gs
rolb
fsts
in
cmp
push
add
mov
ret
daa
out
popf
or
add
mov
dec
sub
add
dec
out
add
addb
add
push
push
add
push
add
add
rolb
jno
std
pop
aaa
sub
fwait
sbb
or
in
fcoml
clc
adc
lahf
stos
add
testl
add
shl
mov
jmp
mov
add
add
pop
jns
int
add
imul
cs
add
push
sbb
add
add
ficomps
adc
data16
adc
xchg
add
adc
into
pop
ja
pusha
add
mov
pop
fcoml
and
scas
mov
adc
fld
add
gs
aad
lret
lock
add
test
lret
je
add
fs
dec
shrl
out
nop
add
test
and
rolb
xchg
add
add
jo
mov
into
and
mov
push
jmp
test
add
mov
jne
add
add
and
add
cmp
pop
clc
js
outsb
adc
out
add
mov
mov
jmp
push
xchg
nop
add
addb
and
mov
add
mov
xchg
adc
ljmp
dec
cmp
mov
cmp
fidivrl
sub
dec
or
push
push
push
movsl
les
jnp
mov
or
add
adcl
add
jne
push
add
mov
push
add
cmp
cwtl
push
add
fimuls
pusha
add
ret
rolb
ret
je
repnz
hlt
add
movsl
mov
popf
sbb
movb
add
add
add
test
add
jmp
addb
jnp
add
movsb
add
push
lahf
xchg
add
pusha
add
cmpsl
imul
ja
mov
add
add
sahf
jae
cmpsl
daa
inc
dec
and
sub
into
daa
jl
pop
add
jbe
sbb
jmp
add
cmp
add
sbb
stc
mov
fidivrl
add
adc
dec
jns
out
add
aaa
loop
cmp
lds
cmp
xchg
add
mov
movsb
add
push
add
rolb
mov
jae
sbb
add
sub
int
and
mov
xchg
nop
add
add
add
lahf
cli
loope
add
add
cli
xor
adc
test
add
sahf
pop
sub
outsl
cwtl
cmpsb
add
jge
add
and
mov
mov
add
mov
inc
mov
add
mov
mov
xchg
add
add
loopne
jbe
cltd
movsb
add
add
add
add
add
mov
rcll
cmp
mov
adc
xchg
mov
adc
icebp
and
rolb
sbb
lret
add
scas
data16
pusha
add
lock
fimull
xchg
lods
notl
dec
or
nop
add
add
push
out
out
aaa
daa
lret
repnz
sub
jle
lcall
add
mov
in
mov
dec
cmp
dec
push
add
lods
cwtl
add
mov
fldcw
dec
xor
pop
inc
xchg
push
add
pop
inc
add
jmp
test
xchg
add
xchg
cmp
add
bound
mov
mov
add
daa
addb
add
test
cli
jl
or
fisttps
jmp
add
add
jg
add
add
mov
mov
adc
insl
add
mov
cmp
addb
fadd
cmp
aad
cli
mov
adc
lret
sub
out
lds
add
dec
aaa
sti
push
add
add
mov
push
movsl
pop
sbb
add
mov
leave
lds
dec
jb
mov
pushf
sbb
push
gs
jmp
gs
cmc
out
addb
addl
inc
add
mov
xor
cli
in
and
sbb
sub
fcomps
mov
mov
add
lock
add
adc
testb
pop
into
mov
push
xor
out
adc
push
mov
outsb
loop
loope
and
aad
and
mov
sti
xchg
adc
sbb
or
jae
fmul
ljmp
add
aas
addb
add
aad
imul
inc
add
xor
mov
pop
sbb
add
dec
add
fldl
ret
add
add
mov
inc
add
mov
add
shrl
test
ret
push
das
xchg
add
add
add
add
ss
test
mov
sbb
ljmp
adc
add
add
mov
add
lds
add
aaa
adc
insb
push
int3
and
mov
add
add
inc
add
add
enter
sbb
ficoms
stos
aaa
cmp
sub
pop
repz
push
add
or
pop
sbb
add
add
or
sub
adc
add
fcmovnu
inc
bound
mov
mov
inc
xor
add
mov
add
fadd
add
imul
add
add
inc
leave
pop
mov
icebp
mov
add
mov
sbb
movsl
mov
out
add
push
rolb
ret
jb
into
fsqrt
cld
push
add
xlat
cwtl
ljmp
lret
out
movsb
add
pop
add
mov
add
xchg
int
or
add
mov
or
lods
sbbl
mov
mov
add
sti
ljmp
dec
rolb
pop
pop
test
push
out
adc
add
sub
je
addb
ficomps
xchg
jle
or
add
xor
rolb
pusha
add
xchg
push
add
add
add
and
mov
in
jb
xchg
add
add
in
je
rcr
outsl
or
jbe
ret
cmp
jl
cmc
sub
out
add
mov
push
aas
or
pusha
add
stos
lcall
cmc
inc
add
pusha
add
mov
add
xchg
add
sub
jne
jnp,pt
push
add
add
pushf
aaa
movsb
add
mov
jg
fcmovb
add
data16
ljmp
add
mov
movsb
add
add
call
sti
mov
fildll
repnz
insb
insl
test
cmp
inc
add
cmp
xor
test
sbb
or
add
add
cmp
jns
add
fsts
addb
mov
cmp
add
add
add
vpshad
in
inc
daa
jae
add
add
add
addb
aad
add
pop
push
mov
addl
icebp
std
mov
add
xchg
add
data16
movsl
xor
into
dec
addr16
cmp
das
mov
nop
add
js
les
lcall
enter
add
out
jne
or
fwait
lret
push
add
rolb
cmc
mov
cmpsb
add
lods
xor
jne
mov
add
add
mov
jae
pop
push
mov
add
mov
fsubr
cmpsb
add
popf
add
pusha
add
xchg
add
sbb
mov
mov
add
je
pop
add
mov
loopne
insb
in
dec
jbe
mov
lds
cli
mov
or
add
jg
sbb
add
rolb
cltd
in
inc
add
add
mov
je
lods
push
popl
add
sbb
in
jecxz
fmull
sub
add
cmpsb
add
enter
lret
xor
push
mov
out
mov
push
add
out
fldl
mov
add
sub
push
add
mov
in
repnz
mov
cmpl
add
mov
jae
jnp
sub
sub
decb
add
xchg
mov
movsl
addb
add
add
add
enter
add
add
lahf
inc
push
inc
addb
add
xlat
popa
sar
js
add
cmp
add
add
addb
add
mov
rolb
in
jae
fisttpll
rolb
add
add
mov
adc
add
lret
sbb
add
sbb
test
add
add
add
add
cmp
mov
or
add
fstl
mov
sbb
sub
fucomip
xchg
add
add
add
add
pop
ret
add
xor
pop
inc
add
pop
pop
insl
dec
test
pop
ja
add
mov
and
mov
mov
addb
xchg
lock
sub
loop
push
pusha
add
jle
in
cld
fcomi
add
mov
fbld
cmc
mov
scas
xchg
add
add
and
out
lods
xor
add
add
out
lods
and
mov
fiadds
add
fwait
roll
mov
xchg
add
ret
add
in
outsb
cwtl
and
js
jns
add
mov
adc
add
sti
sbb
cmpsl
xor
jbe
popa
xchg
sbb
mov
add
fs
int
xorl
js
pop
mov
add
xchg
rcl
push
mov
add
sbb
add
aaa
mov
add
int
je
push
loop
fdivrl
loopne
addr16
mov
out
cmp
pop
mov
adc
movsl
jecxz
pop
sbbl
movsl
inc
add
add
add
cltd
pop
test
fwait
dec
cmp
mov
sbb
add
add
add
mov
or
mov
in
std
adc
dec
dec
lret
pushf
xor
ror
add
aam
stos
in
sub
cltd
stos
xor
jl
cmc
mov
pop
mov
scas
pop
xchg
call
xor
mov
jnp
sbb
xor
cmpsb
add
scas
jns
add
mov
inc
add
sahf
addb
adc
pop
lods
and
mov
push
je
mov
add
push
add
sahf
jbe
iret
out
mov
cld
out
mov
add
add
lea
add
mov
icebp
inc
add
push
insl
scas
mov
fldcw
add
push
mov
rolb
sbb
add
cmp
imull
imul
clc
or
add
or
add
or
outsl
stos
test
rolb
fwait
iret
mov
xchg
loope
incb
pop
ret
add
fisttpll
outsb
mov
add
mov
add
outsb
enter
xchg
pop
movsl
pop
add
add
add
xor
fbstp
addb
clc
fsubrs
jo
loop
data16
pop
mov
cmp
in
add
adc
mov
push
je,pn
xor
add
mov
inc
jp
shl
add
jne
add
add
mov
add
dec
sbb
movsb
add
pop
fistps
mov
inc
xlat
inc
xor
fsts
pop
ret
add
add
mov
imul
lcall
add
xor
add
dec
jbe
cmp
add
cmp
pop
fucomip
les
repz
xlat
add
mov
sbb
mov
pop
cld
clc
ja
nop
add
add
lcall
xchg
add
bound
mov
arpl
std
pop
aad
lods
ja
add
fwait
xchg
inc
add
add
incl
lea
add
iret
test
and
push
add
add
mov
add
repnz
out
movsl
xchg
dec
push
lret
gs
add
add
add
sti
adc
insl
add
mov
imul
arpl
loopne
mov
jb
cli
cmc
jp
movsb
add
insl
int
test
in
add
mov
add
icebp
cmpl
jge
add
out
add
pop
push
add
call
hlt
add
mov
sbb
and
add
into
dec
lock
fs
cs
cmp
add
add
fistpll
into
cmp
stos
outsb
xchg
add
clc
popf
dec
std
in
mov
inc
add
sub
pop
mov
jns
add
jmp
loop
jae
and
ret
jg
add
pop
xchg
aaa
pop
and
mov
imul
inc
add
add
dec
out
testb
sub
add
cli
jno
add
cmp
add
rolb
add
push
fwait
inc
mov
inc
adc
mov
loopne
in
add
mov
cs
add
add
addb
outsb
out
aaa
cmp
inc
push
add
into
ret
add
add
sbbl
mov
mov
add
push
sub
mov
sahf
xchg
mov
ds
and
imul
mov
cld
jno
add
add
int
enter
lret
xchg
mov
xchg
add
adc
add
or
jge
repnz
xchg
add
das
hlt
add
mov
add
call
mov
fsubs
mov
test
mov
xchg
add
mov
iret
inc
add
fcomi
add
mov
dec
int
insl
das
addb
sub
add
add
jnp
lahf
sub
xor
testb
add
call
sti
out
push
sub
lods
lahf
or
add
add
ret
lcall
data16
pop
fdivrl
cld
and
adc
test
xor
add
or
add
add
jecxz
add
or
mov
jecxz
xchg
loopne
sub
out
aad
adc
testb
and
fcomps
add
mov
in
in
mov
sti
xor
nop
add
pop
inc
add
add
insb
xchg
and
mov
hlt
add
scas
and
fildll
in
lcall
cli
dec
lock
add
pop
jl
in
in
mov
std
add
lods
mov
add
fildl
add
add
inc
add
mov
add
add
and
mov
adc
dec
push
mov
hlt
add
sbb
adc
mov
add
add
cmp
hlt
add
fwait
pusha
add
ss
add
mov
add
add
add
add
add
push
add
pop
mov
add
dec
jae
pop
push
mov
dec
pop
repz
or
cmp
int3
jae
movb
lea
add
call
push
add
dec
mov
add
imul
in
pop
add
mov
popa
fstpl
push
leave
xchg
enter
lds
mov
mov
xlat
sub
ss
add
test
cmp
mov
add
sbb
add
add
jp
stos
xchg
frstor
lock
mov
mov
inc
or
add
das
mov
mov
add
fucomi
addr16
adc
addr16
add
add
test
jnp
in
and
fsubs
mov
sbb
mov
in
loope
add
jmp
add
jg
mov
add
jmp
xlat
lret
push
jno
add
cmp
call
add
adc
or
add
addb
add
add
jo
sub
and
pop
movb
add
xor
in
adc
add
add
push
add
pop
sete
push
jae
add
in
xchg
aam
and
addb
add
in
add
std
ficompl
or
imul
add
or
int3
iret
cmpsl
adc
and
dec
jg
stos
daa
scas
ficompl
pop
push
ljmp
negl
in
jo
repnz
pop
rorl
add
cs
cmp
dec
repnz
add
clc
lods
dec
mov
add
mov
xchg
mov
outsl
xchg
add
pop
push
test
ss
add
testb
jns
movl
stc
out
add
fwait
mov
dec
cmp
sbb
dec
or
sbb
lcall
dec
adc
cmp
add
xchg
in
ret
or
add
xor
add
sub
add
add
dec
sub
or
adc
movsl
mov
xlat
cld
sbb
sahf
lds
add
add
popa
mov
xor
add
mov
testb
sbb
movb
add
cmp
ljmp
pop
in
int3
add
adc
mov
mov
add
xchg
push
aam
cmp
jns
and
pop
pop
mov
jno
push
add
add
push
add
jbe
push
fmull
imul
cli
aaa
icebp
or
add
lea
out
inc
add
jle
add
jl
add
add
mov
add
cwtl
push
lret
push
rolb
inc
mov
in
xor
add
push
bound
mov
add
add
dec
lret
mov
jo
push
mov
lods
jb
out
xchg
add
add
add
cwtl
sti
add
sub
sub
add
mov
add
xlat
mov
enter
pop
arpl
mov
add
mov
xchg
add
adc
lods
or
dec
sbb
push
add
orl
and
mov
cmpl
lock
mov
jg
insl
sub
out
jae
push
test
add
xor
mov
xor
add
add
mov
add
jae
or
add
add
jae
add
dec
adc
add
addb
cmp
add
jmp
subl
add
into
stos
jmp
fs
add
mov
fistl
add
add
dec
inc
add
mov
mov
push
add
add
sub
mov
dec
adc
sub
mov
add
add
inc
xor
mov
ficoms
add
and
push
outsb
add
mov
mov
dec
push
mov
mov
push
mov
jg
pop
in
pusha
add
test
std
aaa
mov
stos
adc
lods
inc
cwtl
mov
dec
add
fwait
cmpsl
xlat
scas
pop
frstor
inc
add
cmp
xor
addb
mov
push
cmp
or
add
add
lock
mov
xchg
add
add
fucomip
dec
inc
add
inc
add
add
dec
out
addb
add
daa
arpl
pop
pop
pop
push
rolb
arpl
add
inc
insl
sbb
add
mov
test
pop
jl
push
cltd
lret
mov
jne
repz
add
dec
cld
push
jnp
cmp
add
mov
jmp
xchg
add
add
and
mov
addb
inc
data16
aaa
xchg
xor
add
add
xchg
add
add
mov
sub
adc
jno
and
add
mov
mov
dec
mov
in
call
jge
mov
rol
jl
test
adc
xor
cltd
fcos
and
inc
add
cmp
fxch
push
add
pop
testb
cmpsb
add
add
add
pusha
add
add
dec
test
mov
sbb
add
pop
push
repnz
in
or
add
aad
lea
add
add
add
or
add
mov
movsb
add
mov
xor
pop
testb
add
inc
mov
je
mov
jp
movsb
add
movsb
add
push
mov
lea
sahf
icebp
pop
iret
and
add
add
test
xchg
add
push
push
add
hlt
add
cmp
add
movsb
add
pop
pop
ljmp
add
mov
add
and
pop
sbb
mov
fincstp
addr16
add
pop
scas
adc
in
std
into
and
add
add
jmp
in
cmp
add
or
stos
jp
add
add
rolb
cmpsb
add
mov
add
and
mov
cltd
subl
jno
hlt
add
ds
repz
push
add
add
fidivs
add
addb
add
push
lret
std
dec
pop
out
iret
mov
add
add
pop
jp
ds
add
mov
add
nop
add
add
movb
add
clc
or
jmp
xchg
lds
dec
stc
xor
cs
sbb
add
loope
inc
add
add
xor
push
add
push
inc
add
add
xchg
std
jae
fcmovbe
add
and
sub
add
jl
cmp
push
cmc
rolb
out
xchg
dec
xchg
add
test
sbbl
inc
jae
and
mov
mov
nop
add
or
add
add
add
enter
adc
je
xchg
inc
add
call
mov
into
dec
mov
cmp
fwait
rolb
movsl
cmp
pop
cmpsb
add
cmp
add
sahf
inc
add
add
pop
xchg
add
jge
mov
add
mov
popa
xchg
add
add
add
cmp
in
jae
add
sbb
mov
inc
add
add
mov
add
sahf
mov
stos
mov
add
test
jbe
test
icebp
add
add
lcall
sub
scas
aad
jns
add
lea
cli
lock
out
lods
insl
jnp
imul
add
xchg
inc
add
add
and
xorl
lods
push
mov
add
addb
ret
add
mov
jb
addb
xor
movb
mov
add
jns
add
add
add
xor
push
or
ja
jnp
mov
add
add
dec
mov
ss
xchg
add
ret
jg
arpl
push
jbe
fdivl
add
movb
pop
test
jb
dec
lahf
je
roll
or
out
insb
mov
xor
add
leave
jp
hlt
add
hlt
add
add
add
mov
pop
add
inc
mov
inc
add
pop
add
mov
xchg
push
add
in
aas
fisubs
add
lock
test
xchg
iret
hlt
add
arpl
pop
push
xchg
add
cmc
jmp
add
testb
add
or
mov
cmpsl
cmp
cs
loopne
push
add
xchg
sbb
cmp
push
add
jmp
mov
add
jle
add
movb
add
add
imull
add
add
mov
sub
add
xor
add
xchg
jae
fcompl
jecxz
pusha
add
add
adc
dec
enter
mov
call
mov
mov
add
or
add
or
mov
add
aas
mov
cmp
jmp
add
mov
testb
mov
stos
mov
xchg
mov
dec
dec
fstl
ret
jge
add
mov
sbb
add
mov
js
add
add
mov
cltd
add
mov
mov
lahf
jl
jbe
sti
push
add
add
sbb
or
inc
jae
add
cld
add
push
rolb
movb
inc
add
popf
aaa
je
cmc
dec
sbb
mov
jg
sti
cmp
add
xchg
cs
add
mov
dec
addl
add
add
push
addb
dec
jbe
lea
add
sarl
loopne
out
mov
aas
xor
jno
mov
mov
mov
mov
lods
repz
add
pop
pushf
stos
out
pop
fisubs
xchg
add
lahf
sub
add
add
std
data16
out
push
add
add
inc
add
add
mov
push
les
pop
insl
and
sub
add
addr16
out
sub
push
add
xchg
sub
mov
add
fistps
add
jle
rolb
mov
fsub
add
stos
push
bswap
pop
loop
cmp
add
add
test
push
int3
movsl
mov
repz
jns
adc
pop
dec
xchg
jne
add
adc
add
arpl
rolb
data16
add
mov
std
lds
jmp
cmp
add
add
dec
mov
inc
rcll
jmp
data16
mov
mov
pushf
in
rolb
lcall
das
js
fwait
dec
xor
add
sarl
add
pop
ud1
cmp
add
add
add
xor
mull
add
inc
add
scas
call
sbb
fstl
in
or
push
pop
pop
jp
frstor
add
lret
cmp
mov
xor
arpl
add
add
xchg
add
fisttps
add
cmp
in
jecxz
add
adc
add
add
add
aas
aaa
add
pop
das
push
add
and
lds
das
int3
dec
stc
in
add
add
add
loopne
mov
ds
add
stos
push
xchg
add
in
mov
cmp
add
add
pop
inc
add
jo
hlt
add
add
add
push
add
jp
or
add
add
cmp
xchg
pop
inc
sub
inc
add
lret
or
add
add
push
add
add
int3
mov
sahf
and
mov
add
add
add
lock
push
add
or
out
jmp
sbb
sub
cmc
arpl
add
mov
add
mov
scas
push
add
orl
mov
jnp
pop
sub
icebp
adc
jb
ffreep
adc
movb
and
aad
add
add
add
fdivl
add
test
add
sahf
arpl
test
fdivl
fildl
mov
xchg
sbbl
add
or
jbe
fwait
sub
add
add
fistpl
outsb
jle
and
mov
outsb
call
pop
int3
fidivl
popa
and
cmpsb
add
or
les
add
add
add
mov
add
ds
mov
pop
pop
pop
add
cmp
lret
add
mov
mov
add
sbb
fisubs
cmp
push
add
movb
bound
mov
aad
pop
mov
xor
in
cmp
or
adc
push
xchg
add
add
or
add
mov
cld
dec
int
xor
mov
add
add
rolb
add
sarl
inc
inc
add
mov
add
add
insl
jg
mov
xchg
add
jp
pop
fldt
cli
daa
jo
js
add
and
mov
fiadds
add
jbe
jp
sbb
add
adc
jg
xchg
inc
jge
jmp
add
add
clc
mov
inc
add
xor
call
mov
or
aad
inc
add
ds
bound
mov
add
add
aas
mov
dec
push
fwait
das
dec
inc
fisubrs
mov
push
aad
cwtl
sti
jae
xchg
add
ret
add
add
add
jmp
pusha
add
mov
mov
inc
add
add
or
add
add
add
mov
clc
inc
add
push
add
js
or
leave
add
dec
sub
mov
add
mov
add
add
and
adc
outsl
arpl
fucomp
jl
add
mov
adc
xor
jo
xchg
rolb
xor
jbe
fwait
mov
xchg
add
adc
pop
sbb
add
and
add
sahf
sub
arpl
dec
cld
adc
add
fildll
gs
hlt
add
ds
push
push
jnp
dec
mov
mov
add
mov
add
fstpt
out
flds
add
sti
mov
out
mov
add
or
mov
add
pop
mov
add
add
add
mov
cmp
popf
jge
mov
popf
les
cli
xor
add
mov
mov
mov
push
add
daa
inc
cmp
add
add
add
ds
imul
pop
cwtl
push
xor
in
in
lea
add
hlt
add
insl
and
mov
xor
inc
add
adc
jecxz
mov
or
add
add
mov
aam
adc
add
fisttps
inc
push
pop
les
cwtl
popf
int
mov
jno
aaa
out
mov
mov
sbbl
out
add
and
push
pop
sub
fldenv
icebp
jmp
inc
cmp
fdiv
dec
dec
xor
test
adc
mov
ja
dec
mov
and
mov
cld
push
add
fistl
jmp
mov
pop
and
mov
and
out
decl
insl
adc
sub
sbb
fwait
mov
sbbl
loop
mov
add
adc
repz
inc
add
add
add
add
add
add
dec
fwait
mov
cwtl
incl
pop
loope
add
jo
pushf
mov
mov
dec
pop
dec
dec
lahf
inc
loop
mov
aas
push
iret
popa
or
add
add
add
adc
into
scas
adc
test
sub
sbb
add
add
ja
inc
add
in
popa
mov
add
jp
add
add
add
addb
add
push
add
fidivl
add
jp
xor
add
shll
inc
add
add
addb
add
cltd
push
add
repnz
mov
add
js
xchg
add
add
ret
or
sbb
add
fimuls
lea
stos
movsl
pusha
add
sbb
mov
add
mov
add
mov
cmp
inc
add
xchg
lret
cmpsl
rolb
rolb
int3
add
jns
add
add
mov
cmp
test
xor
mov
setle
add
call
mov
addb
push
outsl
or
xor
add
sbb
sub
jmp
enter
and
mov
jne
lock
out
pmaxub
add
daa
out
pop
rcr
sub
adcl
imul
cmp
push
cli
movl
xor
xor
and
dec
or
and
mov
outsb
and
ror
mov
orl
jns
add
stc
push
imul
testb
je
lcall
push
pshufw
add
xchg
add
add
cmpsb
add
sti
push
fcoml
inc
in
test
add
popa
in
add
add
add
lods
adc
mov
data16
mov
in
daa
adc
push
mov
or
xor
mov
pop
or
enter
xor
mov
mov
mov
test
xlat
test
sub
push
add
add
outsb
jecxz
das
fists
aad
add
mov
faddl
lods
add
mov
aas
cmpsb
add
int3
enter
popa
cld
adc
movsb
add
push
mov
cmp
add
cwtl
push
push
sub
add
xchg
add
add
cmp
push
add
scas
sbb
xor
add
add
add
push
add
mov
popf
adc
in
mov
or
adc
inc
add
mov
leave
test
in
fstl
fmul
scas
cmp
mov
add
mov
adc
sbb
add
add
xchg
mov
xchg
add
jmp
or
stos
lahf
es
adc
mov
sub
sbb
test
neg
js
jnp
lahf
mov
addr16
xor
jno
cmpsb
add
pushf
xchg
fdivrl
lods
sub
mov
add
add
push
dec
out
mov
fnstenv
add
add
pop
shrl
cltd
mov
add
out
cmpsb
add
sub
add
add
sub
mov
pop
mov
std
dec
inc
enter
push
add
das
test
mov
xchg
cmp
inc
add
inc
add
gs
add
and
mov
lds
je
cmpsl
ja
sahf
cli
add
cmp
ja
sahf
push
mov
shrl
fisubs
mov
iret
or
lods
sahf
test
enter
arpl
filds
jecxz
mov
dec
jns
mov
dec
mov
iret
push
mov
sbb
add
mov
leave
push
add
add
add
inc
add
inc
push
sub
ss
sub
sub
add
mov
add
add
add
mov
adcl
mov
add
xchg
movsl
lret
mov
jg
add
add
out
add
movsl
rolb
repnz
inc
and
push
in
scas
das
in
add
jne
fisttpll
ret
lcall
inc
sub
mov
add
add
mov
push
aas
add
mov
out
in
cmpsb
add
push
add
add
add
add
or
decb
arpl
add
rolb
orl
stos
sub
test
or
xor
mov
add
mov
jecxz
add
jnp
jb
into
or
daa
fstl
addr16
mov
add
cmp
cmpsl
test
test
popf
fwait
movsl
iret
sti
stc
xor
rdpmc
pop
and
inc
add
jae
add
add
cmp
ficoml
add
push
add
add
push
add
lea
add
mov
add
pop
insb
daa
or
or
add
data16
fildll
inc
add
sbb
add
dec
mov
add
add
and
ret
and
inc
add
jl
cmp
notl
add
mov
cmp
jmp
ret
push
enter
cmpsl
mov
std
cmp
dec
jae
bswap
dec
mov
rolb
jmp
js
add
cmp
add
add
add
mov
pusha
add
into
insb
inc
add
adc
jp
add
sbb
popf
sbb
cmp
cmpsb
add
add
add
add
mov
outsb
cmp
push
cmpsl
or
in
lock
lea
add
or
ss
add
add
add
fdivr
arpl
ret
mov
add
add
jecxz
mov
mov
add
add
xor
add
test
mov
sbb
cmp
xchg
add
cs
xchg
add
mov
int
add
lret
rolb
sbb
add
dec
js
add
add
andl
movsb
add
repnz
sub
mov
lret
or
push
nop
add
xchg
add
push
cmp
add
add
adc
sbb
movsl
dec
sub
test
mov
xchg
cmp
pushf
ja,pt
pop
je
pusha
add
xadd
pop
int3
add
cltd
push
xchg
add
dec
lret
or
add
add
add
mov
pusha
add
aas
and
mov
fs
dec
pop
cmp
add
sti
dec
aaa
sub
add
or
add
mov
xchg
pop
aad
adcl
add
movl
and
mov
push
fnsave
xor
fmull
insl
aad
add
mov
add
inc
add
loop
int3
sub
add
add
adc
test
jge
push
lock
and
mov
mov
out
xchg
add
addb
pushf
cmp
inc
add
or
or
stos
mov
add
and
mov
mov
add
fdivrl
add
add
add
inc
add
and
shr
mov
data16
add
add
add
push
add
xchg
movsl
pop
pop
jnp
add
add
in
lret
or
add
dec
filds
add
cwtl
movb
cmpsb
add
add
push
or
int3
ret
pop
or
cmp
addb
lea
mov
cmp
add
in
cs
ret
inc
add
add
mov
or
dec
push
add
idivl
xchg
push
cmp
rolb
test
add
add
adc
stos
mov
pop
inc
jl
leave
xchg
xchg
xor
xchg
sbb
pop
and
inc
lds
addr16
movb
pop
mov
movsb
add
add
add
sbb
stc
hlt
add
xor
sbb
inc
push
add
lds
lret
ljmp
and
mov
lea
mov
push
add
dec
rcrl
ret
add
add
mov
imul
rolb
fwait
vpcmpeqw
xlat
push
add
inc
add
jbe
mov
push
cwtl
or
inc
add
or
sbb
add
sub
sbb
add
cld
dec
mov
mov
cmp
pop
in
outsl
test
add
mov
pop
int3
jae
sbb
add
aaa
jecxz
and
ficompl
mov
xchg
xchg
fcmovnbe
add
jp
xchg
sub
push
add
popf
inc
add
daa
into
stc
mov
add
jg
jb
push
add
xor
addb
add
add
add
push
add
add
lret
in
call
xchg
aaa
xor
xchg
add
insb
je
xor
inc
test
add
aad
jmp
sbb
add
pop
cmp
jbe
pushf
imul
inc
add
cwtl
sbb
dec
mov
add
mov
add
jo
cmc
sti
sbb
add
sub
sbb
scas
icebp
inc
add
add
push
out
pop
jne
scas
adc
xor
add
adc
rolb
adc
pop
adc
mov
mov
hlt
add
push
jge
daa
jmp
add
push
add
in
addl
daa
loopne
mov
add
add
add
xchg
add
push
mov
roll
add
add
lock
add
add
add
pushf
in
cltd
sub
mov
push
add
mov
aad
mov
cmpsb
add
addb
mov
add
xchg
add
add
add
xchg
add
add
hlt
add
ficoml
or
push
add
cmp
movsb
add
add
add
dec
stos
rolb
test
fcoms
jb
push
nop
add
fnsave
jge
dec
mov
add
ret
imul
subl
push
mov
add
add
scas
and
mov
add
add
call
mov
repz
jp
inc
add
add
icebp
hlt
add
sub
jl
test
jae
pop
aad
add
mov
ffreep
jbe
dec
aaa
mov
mov
add
add
data16
pop
cmp
xchg
test
add
push
add
push
add
fcoms
add
aad
popa
pusha
add
enter
call
in
push
add
roll
test
int3
lcall
cmp
in
into
mov
mov
add
fisubl
add
pusha
add
dec
outsb
push
add
jno
xor
mov
mov
add
mov
xorl
fstps
push
add
sbb
add
addb
jnp
inc
add
add
xor
addr16
pop
xor
inc
add
cltd
sbb
add
sarl
inc
cmp
add
add
xchg
cmpl
inc
xchg
add
add
push
add
lret
mov
test
cmp
or
xchg
call
dec
rolb
or
xor
loope
add
mov
popa
insl
repnz
int3
cs
add
pop
pop
xor
lods
pop
clc
jns
push
out
adc
add
rolb
add
and
mov
fldcw
js
sbb
lds
lret
mov
test
sbb
and
add
dec
sbb
inc
xor
mov
jle
std
ljmp
icebp
mov
add
out
mov
mov
test
sbb
add
xchg
xlat
cmpsl
lock
mov
in
inc
add
lock
pushf
mov
add
add
mov
jno
lret
add
add
jecxz
nop
add
addr16
nop
add
and
push
add
es
sub
inc
or
add
mov
add
cs
add
inc
add
jge
mov
add
add
addb
add
add
rolb
lods
add
mov
jne
pop
xor
adc
or
inc
add
aas
testb
dec
repz
sarl
les
popa
les
insl
lea
add
pop
and
inc
pop
test
add
mov
mov
add
add
add
pop
xor
aam
lods
rolb
inc
enter
inc
add
inc
int
mov
add
add
repz
stc
push
add
xchg
pop
mov
add
sbb
add
dec
out
push
adc
push
add
push
add
and
inc
or
add
cmc
mov
enter
fwait
lcall
add
jp
lods
rolb
shll
data16
add
adc
add
and
mov
loop
daa
jp
add
xor
loop
es
stos
pop
inc
sbb
mov
push
add
fsts
dec
cwtl
push
cltd
in
jg
lea
sbb
add
add
lret
dec
addr16
insl
sub
mov
popf
pop
dec
movsb
add
lds
dec
je
and
mov
dec
movsb
add
add
push
xchg
add
add
mov
push
idiv
mov
incl
in
cmp
pop
push
or
add
jecxz
xor
into
inc
pusha
add
adc
xor
push
add
stc
mov
mov
sub
sub
clc
into
mov
mov
in
sbb
test
inc
jno
pop
push
add
sbb
add
xchg
jge
xchg
add
bound
mov
int3
push
sbb
leave
je
aad
push
lahf
cmc
or
push
ds
cmp
adc
fildl
add
add
xchg
sbb
jno
add
add
jae
jnp
add
add
jg
aad
ja
add
add
add
ret
mov
add
mov
xchg
add
outsb
jge
pop
sbb
mov
push
add
or
adc
cmp
lret
pusha
add
adc
xor
add
add
mov
xchg
add
mov
add
out
in
dec
cmovbe
cltd
adc
add
add
xor
pop
sahf
mov
loope
je
add
add
ljmp
jmp
add
roll
add
popf
jmp
data16
add
xor
add
mov
sub
add
aas
mov
loop
cmpsl
aam
call
add
jnp
test
scas
rolb
mov
xchg
inc
add
mov
test
or
inc
add
in
push
cmp
jb
jno
cld
xor
jno
add
sub
repnz
add
mov
cmpsl
sub
mov
sub
add
or
bndldx
lds
xchg
pop
aam
scas
push
add
add
mov
adc
mov
jno
cmp
test
call
add
xchg
sbb
or
jo
fnop
add
add
loope
mov
or
je
ret
fists
mov
sbb
add
mov
js
idivl
lret
xchg
enter
add
cwtl
je
or
cmp
pop
aad
push
add
cmp
mov
pextrw
lea
add
add
push
add
fsubrs
pop
imull
sub
mov
add
jecxz
sub
sub
push
add
pop
adc
and
aas
pop
mov
out
fdivrl
rcll
sbb
jle
add
jl
into
je
mov
aad
cmp
mov
sub
add
call
add
pop
sbb
pop
pop
mov
mov
adc
add
movb
je
sub
xchg
adc
push
add
cltd
xor
xchg
add
nop
add
sti
in
fxch
aad
inc
add
xlat
jo
leave
fwait
dec
xlat
adc
cmpsb
add
cmp
sar
pushf
movb
popa
mov
fadds
mov
add
and
mov
outsb
inc
add
xchg
add
push
jae
je
sbb
jb
xor
sub
add
sbb
movsl
fildll
sub
add
xchg
jl
add
cmp
add
add
add
add
add
pop
or
stc
add
pop
scas
pop
pop
int
sub
push
add
stos
inc
add
xor
mov
jae
xchg
add
int3
and
fildl
add
sbb
mov
add
add
sahf
cmpsb
add
add
mov
lods
xlat
cmp
mov
je
test
mov
add
aam
dec
cmp
rolb
int3
and
and
into
test
jmp
add
mov
addb
fsts
add
not
add
mov
add
ja
add
pop
sub
mov
cmpsl
clc
and
xchg
rolb
jge
mov
add
add
movb
data16
xor
mov
ljmp
hlt
add
sub
aas
jecxz
ret
add
ret
lods
popl
adc
inc
add
imul
jecxz
adc
xchg
lret
jmp
int3
pop
and
mov
iret
xor
push
pop
push
add
mov
fisubs
mov
jne
pop
movsb
add
add
add
out
inc
arpl
add
sub
cmpsl
xchg
xchg
ret
add
mov
inc
add
nop
add
lods
cmp
call
xchg
xchg
test
jp
and
out
into
lods
cmp
add
add
push
nop
add
add
sahf
cwtl
movb
in
cmp
imul
add
add
fsubs
aaa
mov
add
int
lahf
nop
add
repnz
into
dec
leave
bound
mov
add
test
pop
sub
or
jecxz
jno
jmp
add
imul
les
mov
sub
movsb
add
push
xor
enter
sbb
and
mov
add
xchg
add
add
hlt
add
add
mov
and
add
lods
cmp
jne
add
loope
jecxz
loope
add
loope
test
push
lods
outsl
test
adc
out
add
ljmp
fcmove
aaa
addb
movb
adc
dec
xchg
data16
mov
and
fidivrs
add
mov
xchg
mov
xchg
add
addb
lret
and
mov
xor
mov
jo
popf
mov
jnp
fistpll
add
cmpxchg
cld
mov
aam
add
mov
jnp
fwait
pop
dec
lea
xor
mov
int3
jae
pop
xor
loope
xor
mov
jge
jo
adc
xchg
das
gs
insb
iret
sbb
xchg
add
les
repz
enter
mov
and
fcom
pushf
add
pusha
add
or
and
pushf
and
mov
add
pop
test
pop
mov
jg
std
and
mov
jp
add
adcl
fimull
adcl
xchg
jge
or
or
pop
rorl
mov
loope
cmp
add
popf
or
add
mov
add
mov
add
and
mov
add
cli
mov
imul
loopne
mov
jbe
add
mov
jae
faddl
add
fcomps
imul
mov
add
testl
push
add
dec
mov
in
dec
mov
push
add
or
loopne
sub
fcompl
test
mov
hlt
add
cmp
pop
push
add
in
add
add
sub
adc
pop
cmp
and
arpl
mov
jmp
dec
ret
mov
add
movb
hlt
add
add
je
test
sbb
lret
jb
mov
addr16
sbb
cwtl
jmp
pop
sub
add
or
add
add
and
push
add
imul
xor
in
aaa
push
scas
inc
sbb
add
cld
push
movsb
add
aam
push
add
sbb
rolb
sub
add
add
mov
xor
mov
dec
lret
in
cmc
int3
or
mov
cwtl
inc
add
xor
add
lahf
adc
jle
fcmovb
leave
xor
add
add
jmp
mov
lret
hlt
add
mov
call
pop
add
mov
mov
add
add
add
add
add
roll
aam
inc
mov
add
add
mov
ficoml
add
add
add
adc
jb
movb
add
outsl
mov
mov
movsl
rolb
add
les
mov
sahf
add
stos
or
in
ret
and
mov
aas
mov
cmp
push
inc
mov
stc
dec
testb
push
inc
mov
cmp
add
jb
xchg
sub
add
add
push
dec
pop
add
aam
lahf
add
pop
mov
push
mov
mov
lea
inc
add
cmpsl
test
lret
adc
jo
sub
pop
stos
add
jns
add
or
cmc
xchg
cmc
mov
push
hlt
add
sub
sub
rolb
lret
pop
mov
cli
out
imul
mov
inc
push
xor
fs
ret
addr16
dec
xchg
add
sbb
mov
add
ljmp
xor
add
push
add
fcmovnu
adc
xor
dec
inc
sub
mov
cmp
add
je
sub
data16
ror
mov
add
add
pop
dec
jg
sub
push
add
lods
fbstp
data16
and
inc
or
add
or
add
add
add
test
fistl
test
ja
jmp
enter
cmp
js
outsb
push
add
add
add
inc
add
cmpsl
mov
pusha
add
sub
mov
mull
add
lock
mov
cmpsl
jge
sub
add
add
mov
pop
inc
push
push
sub
jmp
lock
xrelease
push
add
lods
push
add
sbb
push
add
movsb
add
les
add
mov
add
dec
testb
xor
add
cmp
add
add
push
rolb
mov
push
fisttpl
mov
icebp
lea
add
fidivl
add
add
mov
add
add
decl
push
test
cltd
hlt
add
add
add
add
xor
add
add
add
cs
and
adc
add
data16
add
inc
fwait
lods
pop
or
cltd
mov
addb
sbb
cli
das
nop
add
cmc
icebp
sahf
lcall
inc
add
add
add
ds
add
scas
xchg
add
addr16
add
cmp
jne
les
cwtl
mov
xlat
stos
into
pop
mov
xchg
pusha
add
xor
inc
add
pop
cmp
cmc
enter
fldenv
add
sub
and
mov
add
xchg
lcall
add
data16
xchg
add
inc
add
add
add
dec
call
ja
adc
jl
add
ret
add
addb
add
rolb
add
or
sbb
sbb
fisubrs
je
inc
add
add
jmp
add
adc
fmuls
or
inc
add
mov
add
add
in
cwtl
mov
and
mov
lods
fs
adc
add
sbb
mov
hlt
add
test
add
push
imul
pop
loop
jge
push
add
arpl
arpl
mov
add
testb
fbstp
jmp
clc
mov
add
mov
jo
mov
cwtl
xchg
jne
lock
push
xor
adc
dec
jno
add
add
add
sbb
add
add
ja
push
add
add
mov
add
push
inc
add
and
mov
add
in
aaa
sbb
fisubl
pop
pushf
fmulp
cmp
add
add
loopne
in
dec
inc
test
push
add
loope
add
add
insb
dec
lcall
cli
paddusb
mov
fldt
inc
add
fwait
and
add
mov
cmpsl
sti
mov
nop
add
imull
cltd
inc
inc
add
or
sbb
inc
dec
inc
stos
hlt
add
add
xor
dec
pusha
add
and
inc
mov
outsl
fdivs
dec
or
addb
push
add
mov
jae
add
add
cld
inc
testb
or
pop
ljmp
jmp
adc
add
add
add
add
mov
jbe
das
sub
dec
xor
sub
or
xchg
mov
addb
add
or
scas
push
add
popa
push
mov
mov
mov
rolb
mov
ds
add
jbe
cmp
and
pop
sbb
cld
xchg
bound
mov
add
add
add
xchg
jmp
les
cmpl
add
enter
mov
jne
insb
dec
leave
movsl
add
inc
and
mov
and
xlat
xchg
add
add
inc
add
and
movsl
mul
add
pushf
pop
pushf
arpl
add
and
mov
stc
adc
in
inc
add
outsl
test
push
add
jns
add
fisttpll
add
add
rolb
push
jle
add
add
dec
dec
jg
add
inc
add
in
cmp
mov
push
mov
mov
sub
pop
and
xchg
mov
pop
push
sub
scas
lahf
mov
add
rolb
jnp
mov
xchg
mov
call
add
add
lret
pop
add
mov
or
mov
fdiv
add
popa
out
mov
mov
jbe
int3
fs
and
lods
and
sub
xchg
dec
mov
fstps
cmp
pop
xlat
add
pop
jb
pusha
add
outsl
data16
add
dec
fwait
or
pushl
pop
lcall
dec
xchg
ret
test
mov
pop
xchg
add
addb
ds
add
add
or
ljmp
jb
cld
repz
add
add
add
inc
add
add
pop
sub
aas
inc
push
xor
and
testl
add
addb
lods
movsl
popa
cmpsl
bound
mov
into
or
add
add
add
mov
roll
add
lea
add
test
push
add
mov
enter
fwait
aaa
dec
pop
fists
add
add
cmpsl
mov
rolb
int3
cmp
mov
out
xchg
jnp
mov
add
or
push
add
jge
inc
add
add
outsl
mov
cmp
mov
add
frstor
xor
aas
inc
inc
add
add
fnstenv
stc
test
jns
sbbl
cmp
imull
and
js
sti
and
add
cld
mov
mov
add
add
sub
add
add
std
push
add
fsubrl
insb
pop
int
add
sbb
frstor
add
add
cmp
pushf
outsl
lds
add
ja
les
mov
add
mov
jnp
inc
int3
mov
add
mov
jns
sub
add
popa
pop
push
add
add
jmp
sub
sti
inc
add
add
xor
test
dec
mov
or
push
les
iret
mov
cmp
fmull
mov
xchg
add
xor
into
adc
fildl
addb
lods
jle
std
sub
fcmovnbe
add
mov
fiaddl
sbb
inc
add
add
add
pop
mov
in
xchg
js
add
pop
insb
cs
add
std
mov
mov
add
add
jg
je
inc
inc
push
jp
add
add
add
mov
add
mov
lds
add
add
add
repz
cwtl
adc
popa
lret
add
rcll
jnp
mov
push
mov
inc
pop
and
add
mov
add
outsb
dec
jns
add
in
lock
add
bound
mov
pop
pop
dec
or
add
mov
js
pop
pop
popf
outsb
xchg
mov
les
cmp
fildl
mov
popf
and
mov
mov
stos
pop
push
add
add
add
push
add
stos
outsl
mov
add
jmp
imul
js
and
mov
add
add
popa
sub
inc
sbb
mov
aad
sub
rolb
add
dec
jl
add
clc
mov
dec
add
mov
rolb
loopne
cmp
jmp
xchg
add
sbb
sti
bound
mov
ljmp
add
add
inc
add
xor
sti
lock
cltd
rolb
into
adc
dec
je
or
xor
insl
add
xor
add
testl
add
mov
add
add
jne
dec
inc
dec
addr16
add
cmpsl
mov
repz
add
mov
mov
daa
add
push
sub
jle
xor
adc
add
add
sbb
add
xlat
ret
scas
jns
ss
repz
add
xchg
add
sbb
xchg
xor
int3
out
add
inc
add
dec
or
out
pop
adc
add
repnz
mov
mov
notrack
stc
xchg
add
mov
add
popf
xchg
add
push
fiadds
add
add
add
mov
stc
cmc
xchg
cli
cltd
jne
mov
xchg
xor
add
ret
sahf
mov
cwtl
mov
add
add
dec
push
insb
sub
call
mov
sub
add
sahf
xor
mov
add
test
sbb
mov
push
add
add
mov
mov
and
mov
sti
mov
mov
add
mov
add
mov
xchg
jecxz
add
mov
jmp
add
jmp
mov
push
add
mov
imul
int3
stos
out
data16
add
int
jo
out
push
mov
pop
push
push
add
add
imul
xchg
jge
add
jmp
loope
xor
jl
dec
mov
int
or
lret
add
js
mov
mov
inc
add
jne
test
add
scas
adc
add
jae
xor
add
add
add
add
cwtl
jp
es
add
lret
lock
ds
add
arpl
lods
outsl
and
add
into
mov
inc
add
add
test
jmp
ffree
add
loope
adc
rcll
mov
dec
dec
mov
jle
rolb
add
jge
loopne
nop
add
jmp
pop
sbbl
add
push
pop
mov
add
mov
mov
add
sarl
sbb
mov
imul
pop
add
add
popa
push
pop
lods
fcompl
fidivl
xchg
aaa
xor
iret
movb
test
and
add
add
mov
adc
arpl
add
jno
test
jge
fcompl
clc
fsubl
xchg
adc
add
and
mov
test
push
add
inc
add
mov
sub
mov
push
add
add
mov
imull
add
out
cmp
add
jmp
sbb
cs
xchg
add
add
and
jae
lods
hlt
add
std
xor
xor
add
add
push
add
repz
addr16
call
xor
jo
jnp
or
jg
add
mov
and
add
mov
push
xor
mov
repnz
inc
add
scas
pop
scas
movb
inc
add
mov
std
pop
lret
mov
imul
xchg
add
imul
aam
mov
cmp
add
loope
scas
jg
pop
inc
add
jns
add
mov
add
add
sub
jg
pop
in
into
or
jo
push
xor
xor
out
and
mov
jnp
movb
add
fcomps
lret
add
and
mov
add
fwait
lret
cltd
stos
data16
add
add
out
add
add
push
add
iret
add
decl
rolb
pop
or
stos
xchg
and
cmc
jge
add
add
mov
addb
jecxz
jae
add
mov
xorl
mov
cmp
sbb
xchg
jae
add
dec
cmpl
call
call
add
flds
add
add
add
and
mov
pop
mov
iret
sti
xor
aad
mov
push
add
push
add
mov
xchg
jl
xor
mov
test
xchg
add
sbb
add
pop
stos
mov
add
popf
sbb
add
sbb
insl
xchg
sub
dec
ja
pop
les
dec
ffree
or
add
add
mov
lea
rolb
jae
add
cltd
add
add
add
add
mov
subl
ret
movsl
cmpsb
add
add
jl
add
adcl
add
mov
les
and
mov
bound
mov
and
mov
clc
aas
sbb
je
dec
adc
dec
xor
xchg
mov
xlat
add
add
or
inc
jmp
cmc
push
enter
mov
jnp
add
adc
push
rolb
adc
xchg
leave
jo
pop
xchg
add
insb
iret
mov
les
lock
iret
sub
add
sbb
rcll
cmp
jge
pop
sub
xor
faddp
dec
push
out
insl
pop
outsb
mov
mov
add
add
push
mov
add
dec
aas
lods
hlt
add
fsubs
mov
xchg
add
out
scas
rolb
ljmp
int3
out
adc
dec
jne
cwtl
sub
into
test
add
xor
add
addb
add
orl
dec
sub
cmp
std
cmovge
dec
mov
jl
add
in
cmpl
pushf
or
add
rolb
dec
sbb
push
pop
mov
shll
add
outsl
rolb
imul
loope
add
fidivrs
pop
in
test
xorl
out
cmc
xor
int
gs
cmc
sub
js
jle
fldcw
push
add
popf
add
stos
inc
add
adc
add
add
dec
fimuls
cwtl
out
jb
mov
and
mov
add
add
add
add
fstpt
pop
add
mov
add
push
add
add
iret
dec
fisubl
cmp
mov
fcoms
data16
push
hlt
add
aaa
hlt
add
mov
add
movb
add
and
xor
cli
outsl
popa
loope
rolb
push
add
cmp
repz
mov
sub
inc
stos
cmp
add
and
mov
pusha
add
outsb
xor
loop
lods
mov
rolb
das
push
add
cmpsb
add
add
mov
rcll
add
add
add
cmc
dec
add
cmpsb
add
mov
or
outsl
jb
xchg
add
testb
mov
scas
jbe
push
add
cs
addl
mov
cmp
mov
mov
data16
rcll
sub
cmpsl
scas
sub
add
add
loopne
repnz
and
fdivs
in
xlat
loope
add
mov
ljmp
add
mov
add
movd
cltd
cmpsb
add
stc
out
paddq
push
sub
scas
pop
mov
mov
push
add
add
jmp
xor
add
call
lret
mov
add
loopne
in
cld
push
inc
lods
arpl
inc
add
add
xor
dec
mov
stos
or
mov
xchg
loop
leave
xor
add
scas
mov
cmp
lods
fnsave
add
mov
xor
hlt
add
add
mov
mov
loopne
fistpll
push
add
push
add
add
mov
push
mov
mov
test
mov
xor
xchg
jo
mov
push
jns
fs
mov
mov
aad
xchg
mov
lret
pop
popf
mov
iret
ret
push
push
add
lea
add
std
movb
add
nop
add
cld
vpsubq
sbb
push
add
mov
insb
ss
lea
aad
loop
add
add
add
cltd
cmp
into
mov
stos
mov
add
lret
aad
xchg
add
add
data16
add
xchg
and
dec
jecxz
rolb
xchg
cmpsl
loopne
jno
mov
cmp
add
add
push
add
jge,pn
pusha
add
outsb
jo
dec
out
xor
pop
icebp
lock
add
hlt
add
pop
out
popf
jle
ja
les
push
add
arpl
cmpsb
add
mov
add
scas
xchg
sbb
std
popa
outsb
add
pop
fwait
adc
insl
imul
cmc
movb
fsts
add
jo
or
cmpsl
push
data16
ret
rdpmc
inc
outsl
add
lret
or
mov
cwtl
js
add
add
add
add
add
sbb
or
push
adc
fsts
and
addb
xchg
test
addb
mov
rolb
pop
js
sbbl
cmp
add
mov
outsl
addb
add
pop
stos
and
mov
pop
nop
add
in
aaa
scas
add
add
add
add
stos
mov
inc
add
ret
rcl
add
icebp
les
repz
push
add
add
sti
jns
dec
std
daa
dec
adc
mov
fdivrp
xor
fcomps
call
jg
imul
stos
test
insl
jge
pop
lret
mov
fwait
arpl
dec
pop
jb
push
add
cmp
add
ret
mov
mov
lds
mov
add
mov
scas
jle
add
xor
add
cmp
aas
rolb
inc
add
mov
and
mov
cltd
popa
fcmovnbe
adc
pop
fmull
fwait
das
push
add
call
scas
add
add
mov
ret
and
mov
test
mov
add
cmpsl
adc
ja
sub
call
inc
add
push
add
xchg
add
std
push
xchg
fwait
mov
add
add
pop
loopne
or
mov
pop
mov
add
lret
rol
add
add
add
jmp
or
add
jmp
insl
sub
test
lds
mov
addb
inc
add
add
add
pop
sub
add
shl
xchg
popf
inc
add
cmp
cmpsb
add
testl
add
std
jne
out
push
add
dec
pop
icebp
push
in
cmpsl
pop
int3
mov
add
adc
lret
sub
addr16
push
add
inc
push
add
outsl
ret
add
in
dec
add
stc
dec
packssdw
adc
xor
movb
dec
mov
ret
mov
cmp
mov
add
mov
pop
imul
pop
add
mov
add
mov
rolb
addb
scas
rcpps
pop
outsl
fwait
cli
pop
bound
mov
fsubr
sti
mov
repz
cmp
add
rolb
pop
adc
popl
add
loop
pop
mov
aas
rolb
add
add
mov
sub
cmp
jae
adc
rolb
rorl
xor
pop
add
pop
mov
fwait
push
xor
add
add
xorl
sub
xchg
mov
pop
and
xor
add
aad
push
shr
ja
push
add
sub
inc
add
sbb
sub
pop
test
mov
loopne
addb
cld
cmc
lock
repnz
add
add
and
add
pop
inc
or
ds
sub
mov
cli
stos
sbb
iret
addr16
jp
add
cvttps2pi
add
movsl
int3
add
lret
into
loope
add
inc
dec
movsl
call
ret
add
add
fsubr
cmp
add
cmp
nop
add
or
ss
add
or
sub
lds
ljmp
jnp
add
in
test
lcall
jno
out
test
add
add
data16
cmc
xlat
pop
or
cmpsb
add
add
add
imul
and
mov
add
mov
enter
add
mov
lds
add
popa
popa
fwait
push
add
fld
ja
mov
insb
xchg
mov
incl
popa
sub
xchg
mov
xchg
add
pusha
add
repz
dec
xor
insl
add
mov
lods
jns
add
inc
mov
xchg
push
add
lods
cmpsb
add
pop
dec
lds
add
inc
add
cmp
mov
add
push
pop
inc
lret
push
add
mov
dec
bound
mov
xchg
push
and
cmp
xchg
mov
push
add
mov
insl
cmc
push
add
testl
add
mull
sbb
fidivrs
mov
out
jo
ficompl
sti
dec
je
adc
xor
leave
mov
test
lock
add
xlat
dec
sbb
cs
add
fs
mov
or
add
pop
dec
or
sub
xor
xchg
xchg
inc
adc
mov
pop
mov
mov
lcall
xchg
or
lret
mov
mov
or
add
stos
xor
sbb
aaa
data16
aas
fists
in
addb
mov
lods
arpl
les
pop
pop
sti
push
add
inc
pop
dec
jg
sbb
add
cmpsl
repnz
data16
loopne
sbb
fldcw
push
add
mov
sub
add
lds
add
push
jle
sbb
test
add
stos
jbe
movb
add
and
pop
fdivrl
add
addb
add
inc
mov
add
xchg
outsb
mov
sub
pop
and
pop
stos
shrl
or
cmpsl
fstl
cmc
aas
rcll
int
add
adc
adc
add
add
les
scas
iret
testl
pop
push
rolb
adc
add
test
cmpsb
add
stc
jp
loop
mov
add
push
sub
pop
cltd
inc
add
int3
inc
add
add
push
sub
out
xchg
sbb
jmp
cmpsl
or
mov
lock
iret
sbb
mov
fbld
cmp
mov
add
jo
add
mov
push
add
inc
jp
add
mov
add
sbb
fcomp
xor
push
add
add
add
add
and
xor
les
in
in
addr16
lea
into
ja
ret
mov
add
xchg
adc
setae
and
mov
jo
adc
mov
arpl
icebp
or
addr16
mov
or
je
fdivp
andl
add
or
aas
adc
inc
pop
js
mov
out
or
aam
pop
adc
pushf
nop
add
add
and
fwait
mov
sbb
add
add
push
add
hlt
add
or
xchg
add
repnz
cld
pop
testb
push
add
das
xor
in
adc
add
dec
pushf
push
add
dec
fistpl
adc
jnp
dec
mov
pop
mov
addb
add
sbb
cwtl
xlat
jecxz
inc
add
insl
repz
fdivl
sub
sub
mov
sub
add
add
and
mov
jmp
call
add
inc
add
fidivs
dec
ljmp
shll
aaa
jle
lcall
lds
xchg
push
add
pusha
add
mov
add
dec
movsl
and
lods
clc
stos
xchg
or
roll
addb
and
out
adc
adc
in
or
daa
fnstsw
xchg
dec
pop
push
add
lea
mov
inc
add
pop
je
add
jb
jbe
mov
add
add
loopne
in
and
es
and
mov
or
push
sbb
push
mov
data16
xchg
add
pop
cmp
pop
fldenv
stos
addb
add
add
not
add
pop
add
int
cli
xor
add
int
pop
add
mov
es
jbe
stos
inc
jg
add
sub
cld
or
add
in
std
rolb
add
cli
cmpsb
add
add
aas
cmp
pop
in
xchg
adc
add
sub
jge
sbb
add
aad
jne
pusha
add
push
add
fidivl
xchg
pop
push
repnz
test
add
nop
add
push
add
add
add
mov
in
adc
inc
add
add
mov
mov
push
jle
add
mov
add
add
icebp
fidivrs
mov
add
nop
add
pop
loopne
popa
rcll
xchg
jb
aas
jae
mov
fsubr
rolb
push
stc
mov
xchg
enter
out
push
decl
movb
add
mov
mov
cmp
add
add
int3
testb
add
add
add
add
lods
sahf
gs
inc
add
jns
add
in
add
adc
mov
out
xchg
cltd
cs
jne
add
roll
fnstcw
lods
ljmp
add
inc
add
add
sbb
dec
loope
add
add
data16
cmp
mov
inc
fidivl
inc
add
cmc
lea
push
add
dec
adc
test
into
lcall
add
jnp
movsb
add
xorl
pop
push
icebp
mov
add
mov
outsl
adc
jne
add
add
cmp
mov
adc
dec
movsl
imul
add
inc
add
nop
add
add
out
test
inc
add
ds
sarl
pop
cld
jo
fld
add
inc
fidivrl
cmp
out
and
add
inc
add
mov
dec
imul
mov
mov
mov
aam
xchg
or
xchg
add
and
mov
les
adc
mov
outsb
pop
fbstp
adc
cs
jl
add
pop
ljmp
sbb
add
mov
sbb
mov
out
aaa
mov
mov
add
sub
add
loop
mov
or
out
and
jns
pushf
cli
add
xor
mov
data16
dec
add
cmp
add
jb
insb
icebp
outsb
stc
mov
adc
fwait
aam
fimull
add
mov
add
add
add
aas
rolb
outsl
sub
bound
mov
or
lret
push
add
ret
aaa
imul
add
addb
int
bound
mov
add
call
in
and
add
add
fdivl
jns
add
pop
jmp
in
add
lds
fsub
add
add
jmp
sub
xor
push
outsb
sti
adc
add
add
inc
add
rolb
add
jae
add
add
add
cmp
mov
xchg
add
fwait
mov
fimuls
sub
sbb
pop
je
push
std
mov
mov
int
add
mov
outsl
jo
cmpsb
add
add
add
inc
aas
fmulp
cs
testl
push
add
gs
mov
add
sub
insl
add
jl
lret
popa
rolb
xchg
add
and
add
in
pop
cmpsl
mov
add
lods
mov
xchg
xchg
fldt
add
loope
add
nop
add
mov
jp
aam
mov
in
jmp
xchg
fcomp
fdivrl
jmp
negl
outsb
stos
aas
shr
jbe
daa
aaa
int3
stos
cmp
push
inc
add
out
mov
int
or
sbb
movb
cwtl
push
add
loope
add
add
sbb
inc
mov
mov
or
push
stos
dec
bound
mov
add
pop
lods
outsb
add
mov
jns
nop
add
add
add
pop
adc
popf
xchg
add
mov
popf
cmpsl
inc
add
add
add
and
mov
add
push
add
out
adc
pop
xchg
les
lret
add
pop
addb
and
add
add
add
inc
mov
and
lds
mov
mov
jl
add
out
and
mov
inc
add
pop
stos
pop
call
jg
add
stos
cmc
punpckhbw
mov
inc
out
sar
addb
add
add
test
add
out
mov
jb
pop
mov
add
add
add
add
add
inc
cwtl
pop
hlt
add
pusha
add
std
mov
add
test
adc
sbb
add
inc
add
jmp
xchg
jge
jg
fbstp
add
xchg
or
add
repz
mov
add
in
push
outsb
pusha
add
dec
outsl
dec
movsb
add
add
rorl
add
add
mov
outsb
add
in
fcompl
push
addb
add
insl
cmpsl
xchg
fwait
sub
call
add
mov
cmp
imul
jbe
sbb
fstpt
test
adc
lret
pop
loopne
inc
add
xchg
add
std
out
push
add
push
add
dec
les
out
xor
loopne
sbb
pushf
aam
outsl
and
add
je
dec
push
add
pop
push
xchg
ret
mov
leave
addb
mov
and
mov
lds
add
jle
insb
jp
js
jle
pop
iret
adc
sti
adc
mov
jg
add
aad
cmp
add
ret
jecxz
rolb
aam
jns
mov
out
lods
xchg
adc
add
into
daa
data16
add
cmpsl
adc
stos
xchg
fidivrs
cmpl
decl
cld
je
testb
jle
mov
les
test
push
add
add
test
add
in
in
sbb
loopne
inc
add
into
lods
jbe
pop
push
jecxz
cmp
add
lods
outsb
addb
add
and
inc
add
add
xchg
add
test
fistpll
arpl
xchg
jecxz
mov
add
mov
and
xchg
add
test
in
std
push
mov
mov
add
jb
push
cs
testb
shll
add
imul
add
mov
out
insl
arpl
push
imul
mov
add
add
add
add
das
popf
add
xor
lods
push
std
sbb
add
add
xchg
nop
add
cmpsb
add
in
rolb
xor
es
push
and
xchg
add
add
jl
add
mov
ja
jp
loop
arpl
in
mov
out
in
add
jp
sbb
xor
add
adc
push
add
add
mov
push
pushf
jp
or
into
addb
add
out
or
add
mov
testb
lret
mov
add
add
add
leave
xchg
ja
psrlq
addl
repnz
aam
pop
addr16
add
out
sub
loopne
mov
call
in
push
add
jo
add
add
cmp
movsb
add
mov
addr16
add
add
gs
push
aad
popa
hlt
add
int3
js
cmp
add
pop
movb
and
or
mov
mov
inc
imul
add
out
jbe
int3
mov
jne
xchg
popa
add
mov
jno
je
mov
insl
addr16
fistpl
xchg
push
add
mov
add
xor
xchg
add
pop
insl
jo
adc
push
add
mov
mov
mov
xchg
add
add
sub
add
loopne
xor
push
cmp
mov
jno
add
aaa
or
add
out
mov
add
xchg
add
adc
fwait
mov
sbb
add
adc
sahf
jg
pop
cmpsl
pop
leave
sub
dec
jl
scas
outsl
pop
in
cmp
jge
int3
jg
pop
jbe
lcall
add
cs
in
loope
add
cmpsl
pushf
xchg
add
add
scas
bound
mov
mov
dec
cltd
add
shrl
sub
add
xchg
add
jl
add
add
scas
sbb
add
jl
mov
sub
enter
and
add
jg
adc
jl
add
add
ljmp
in
hlt
add
add
mov
add
testb
add
add
fucomi
int
add
inc
push
add
xor
addb
add
popl
cmp
jmp
imul
xchg
mov
les
addr16
outsl
and
jp
pop
inc
popa
icebp
loope
add
outsl
ficomps
add
fiaddl
cmpsl
xor
mov
xchg
add
cmp
out
cmpsb
add
lds
push
mov
add
mov
pop
or
in
add
add
xor
gs
push
sbb
sbb
jmp
sbb
push
add
mov
lcall
arpl
add
add
jo
rolb
negl
jp
push
mov
add
mov
pushl
jnp
out
je
repz
push
add
pop
outsl
aam
mov
push
fistps
add
pop
sbb
arpl
and
dec
jne
add
lods
xchg
jmp
add
add
cmp
shrl
adc
xlat
xchg
outsl
enter
mov
mov
add
add
mov
add
movsl
jecxz
add
add
add
xchg
add
pop
test
add
add
add
add
add
clc
and
add
pop
imul
test
movsb
add
clc
movb
cwtl
std
movl
mov
sbb
add
xchg
push
std
aam
xchg
insl
std
mov
add
sbb
cli
stc
mov
mov
add
jae
add
or
sahf
xchg
xchg
jecxz
std
inc
add
sahf
xchg
lds
fwait
inc
popa
nop
add
push
add
je
lahf
jb
xchg
leave
ljmp
lods
adc
insl
inc
ficompl
pop
mov
mov
sub
xchg
add
sbb
dec
jl
pop
pop
cltd
sub
add
je
xor
cmpsb
add
mov
pop
and
mov
dec
test
mov
adc
gs
mov
add
dec
ds
loope
add
add
add
addb
sarl
or
jb
xchg
add
cmc
cmova
pop
inc
add
hlt
add
scas
lods
pop
bound
mov
dec
daa
or
jnp,pn
lret
add
xchg
ja
enter
push
hlt
add
rolb
push
sub
xor
dec
movl
loope
cmp
ja
pop
pop
int3
cmc
sub
dec
push
lods
adc
out
adc
jl
inc
add
addr16
add
cwtl
push
addr16
dec
jge
add
scas
stc
cmpsb
add
push
imul
daa
insl
inc
fnstsw
cmp
add
push
add
repz
xor
into
or
lods
mov
ja
push
add
add
adc
mov
into
je
fwait
and
mov
pop
dec
sti
jle
popa
inc
add
add
stos
rolb
imul
adc
add
test
sbb
add
add
std
out
sub
es
and
mov
out
mov
add
inc
mov
add
in
je
inc
add
add
cltd
popa
imul
dec
lcall
add
add
mov
out
cmpsl
stos
push
add
add
pop
xor
mov
or
fdivs
mov
fisubl
repz
adc
inc
or
mov
add
sti
cmpsl
push
add
mov
or
mov
sbb
sbb
jno
outsl
aad
cmp
addb
inc
int
add
and
mov
jb
inc
add
fwait
mov
ffree
or
lea
fstl
add
std
adc
clc
xchg
mov
ret
sub
clc
push
add
add
add
sub
dec
cmp
add
jecxz
add
jne
add
mov
fldt
xor
mov
mov
cwtl
dec
inc
add
xchg
add
icebp
in
sub
cmc
jb
push
add
sub
in
in
add
add
lahf
xchg
clc
and
mov
mov
add
data16
mov
lods
fwait
jb
into
push
ds
xchg
xor
ss
add
adc
or
mov
add
ss
xchg
add
jecxz
add
mov
add
mov
fsubr
cwtl
test
and
mov
add
stos
sub
add
ds
add
add
sub
add
mov
mov
add
add
ds
ficomps
aas
int3
mov
add
add
add
push
fidivrl
xor
add
xchg
in
jmp
add
repz
sbb
or
or
push
add
mov
add
insl
repnz
mov
add
add
je
jno
sti
rcrl
dec
pop
jno
add
rolb
mov
xor
mov
add
and
add
add
add
add
jne
aam
push
and
inc
add
add
test
sub
push
add
mov
add
fisubrs
cmpsl
jns
in
ds
mov
pop
sbb
pushf
aaa
jmp
or
in
or
pop
cli
inc
add
add
add
add
int3
aas
xchg
add
cmp
movsl
rolb
add
add
add
cmp
sbb
test
dec
pop
insb
jo
sub
add
mov
into
push
ret
sub
xor
out
push
add
int
call
or
cmp
mov
cmp
stc
mov
repz
add
mov
lock
sti
test
push
call
dec
out
mov
push
ljmp
pop
mov
add
push
add
add
mov
add
sti
rorl
add
add
data16
rcrl
mov
add
ret
mov
ret
int3
mov
enter
mov
lret
cmp
add
add
add
add
cli
ljmp
dec
adc
mov
add
stos
push
push
add
jp
aam
xchg
add
xor
imul
out
fdivr
cmp
add
pop
inc
add
add
add
ret
sub
loopne
mov
pop
aad
rolb
movsl
test
out
scas
mov
add
icebp
jo
or
add
add
data16
cld
jno
orl
rolb
je
pop
gs
enter
xor
btr
mov
push
jns
add
lahf
hlt
add
add
data16
xchg
add
xchg
fnsave
add
add
xor
sub
push
sub
cmp
push
add
xlat
rep
adc
leave
cmpsl
lret
out
call
pop
or
rolb
cmp
add
mov
shrl
or
rorl
cmp
add
and
mov
inc
add
lret
cwtl
std
sbbl
lods
or
imul
push
add
jns
sbb
cmp
cmpsl
xor
scas
push
add
repz
popf
call
clc
stos
add
ja
decb
mov
add
loop
jl
add
aad
mov
jbe
movb
add
jne
hlt
add
push
add
mov
add
inc
add
call
mov
out
or
lret
xchg
das
repz
and
inc
add
out
pop
insl
and
mov
out
adc
int3
movsl
fsubrs
mov
add
pmulhuw
mov
mov
mov
mov
outsb
push
add
add
es
push
fstl
jb
ja
add
aaa
popf
pop
js
repnz
add
mov
add
clc
int3
xchg
add
add
mov
jmp
inc
add
repnz
add
pop
cmp
insl
insb
incl
mov
add
ficoml
lahf
jge
add
mov
add
addb
outsb
lret
loop
mov
sub
cmc
xlat
lds
jmp
add
add
cld
out
add
mov
mov
add
add
add
fldl
push
arpl
push
add
push
add
sub
data16
mov
mov
or
pop
fcompl
mov
adc
xor
push
add
adc
lods
add
mov
xor
xor
jecxz
xchg
add
data16
fidivrl
pop
add
mov
add
dec
enter
add
add
gs
pop
xchg
add
add
repnz
stos
pop
ret
sbb
mov
add
mov
add
in
cmp
js
mov
xor
clc
sahf
outsb
or
clc
mov
xor
lea
daa
cld
mov
subl
add
nop
add
add
decb
icebp
pop
nop
add
aaa
and
add
add
add
add
fldl
mov
add
popf
pop
sub
fcmovu
adc
mov
mov
in
test
insl
aad
jae
das
stc
jae
inc
or
inc
add
xchg
or
add
imul
data16
ja
loopne
lahf
sbb
pop
popa
jne
jmp
xchg
add
mov
les
sub
adc
xor
cltd
out
add
cmpsb
add
xor
pop
xchg
add
push
rolb
jmp
call
je
lahf
dec
xor
scas
jp
add
inc
add
in
push
add
jge
pop
push
add
lods
mov
jno
dec
push
leave
lods
outsl
mov
ds
in
mov
pop
inc
add
pop
mov
popf
mov
xchg
add
pop
jecxz
mov
fdivrs
pop
rolb
push
jle
adc
inc
xor
add
in
sbb
aam
repnz
movsl
je
xchg
imul
adc
inc
add
lea
add
add
js
cli
cmpsl
mov
xchg
dec
ret
test
mov
dec
xchg
add
mov
or
sub
popf
add
xchg
xchg
add
les
pop
mov
scas
outsb
insb
jbe
lds
add
or
add
add
mov
clc
cs
sbb
mov
cmpl
mov
add
xchg
add
fsubs
mov
fistpll
or
jae
fbld
or
sahf
cld
inc
cmpsb
add
or
jae
xor
add
ljmp
jae
sarl
scas
push
mov
cmpsb
add
add
mov
add
add
add
loope
sbb
inc
pop
inc
cli
adc
aas
and
test
addb
mov
sbb
arpl
lds
add
test
add
cmp
les
push
add
push
add
lahf
fdivrs
fdiv
jecxz
cmpsb
add
xchg
cmp
pop
or
faddl
stos
jp
imul
movsb
add
xor
push
push
add
movl
add
xor
xor
stos
rolb
xor
pop
sbb
cmp
add
jb
fsubl
add
adc
cmp
xor
in
xchg
icebp
pusha
add
mov
inc
jne
fldl
inc
outsb
test
int
nop
add
mov
insb
aam
and
mov
sbb
add
dec
mov
pushf
and
lds
mov
movb
inc
mov
das
fdivs
push
jae
add
add
lods
sub
movsl
adc
or
mov
repnz
jb
out
rolb
add
inc
add
xchg
add
mov
scas
lret
and
mov
mov
out
add
xor
fldt
inc
add
add
loopne
add
mov
dec
cwtl
xchg
jmp
add
std
pop
fildl
push
add
ret
lret
sarl
pop
add
shrl
out
scas
popf
pop
pop
gs
scas
sub
push
add
inc
cmp
repnz
test
lret
lock
add
lret
fwait
lods
in
rolb
vmread
test
lret
loope
add
add
loopne
push
add
adc
rolb
cmpsb
add
pusha
add
mov
push
add
adc
lret
mov
sub
add
ljmp
dec
ja
add
and
mov
sar
add
insl
repnz
sbb
jno
jecxz
jmp
adc
mov
cmpl
jb
ljmp
add
mov
add
mov
data16
push
add
dec
mov
stos
jb
jle
jmp
hlt
add
add
addb
jp
sbb
cmpsl
push
cmp
pop
ficoml
jecxz
movsb
add
add
jo
pop
push
add
add
cmp
add
cwtl
inc
add
add
add
stos
jmp
xor
pusha
add
loopne
sub
add
add
sti
loopne
jmp
cwtl
testl
pop
mov
add
xchg
add
xchg
add
rcrl
call
and
jo
pop
daa
cltd
out
scas
add
add
jbe
les
rolb
mov
xor
add
shll
popa
sbb
pop
adc
lahf
out
mov
xchg
add
add
popa
testb
rolb
hlt
add
jge
and
mov
add
add
imul
mov
sub
mov
sub
xchg
push
add
test
sbb
add
xchg
pop
fldt
rolb
outsb
pminub
cmp
add
add
das
fidivs
out
push
or
dec
lock
add
xor
pop
pop
divl
add
mov
mov
clc
rolb
jmp
xor
mov
push
fldcw
outsb
push
rolb
test
int3
cmc
cwtl
rorl
adc
sbb
into
mov
xor
outsb
sub
push
es
add
mov
and
mov
add
cmp
lods
jle
test
sub
add
pop
filds
scas
adc
add
pop
sub
and
ret
or
mov
lahf
jle
es
add
add
push
add
mov
cmpsb
add
cmovnp
mov
lcall
ret
add
je
jno
mov
add
mov
add
adc
rolb
sub
jle
jno
add
aam
dec
sbb
xchg
add
in
mov
inc
jne
fstps
cmp
pop
sub
add
mov
pop
push
add
mov
cltd
ficoml
dec
fdivrl
inc
add
sbbl
dec
sbb
add
das
push
add
add
push
add
mov
nop
add
add
js
add
mov
add
repnz
cmp
cmp
ljmp
or
mov
inc
push
cmp
add
add
mov
xchg
out
scas
sbb
adc
or
add
pop
enter
rcr
insl
movsl
je
popa
push
sub
cmp
movsb
add
add
dec
cwtl
pusha
add
mov
pusha
add
sub
push
xor
daa
adc
push
push
add
jne
in
add
enter
or
push
test
and
mov
into
adc
and
arpl
sbb
stc
fldenv
mov
add
out
jb
add
mov
add
ds
loopne
cli
gs
adc
lcall
inc
add
icebp
inc
add
jae
inc
add
lock
lods
jbe
mov
push
pop
and
dec
out
daa
xchg
add
fnstsw
xchg
add
push
pop
dec
mov
add
add
pop
xchg
clc
adcl
rolb
add
in
xchg
bound
mov
add
adc
sub
sub
je
repz
fisttpll
xorl
mov
decl
int3
mov
add
add
fcmovbe
add
add
gs
add
loopne
sub
in
mov
add
decl
inc
stos
lahf
dec
push
add
movsb
add
rolb
add
add
inc
add
inc
add
adc
lods
cli
or
add
add
mov
cmp
repnz
add
dec
outsb
or
mov
add
montmul
cmpsb
add
mov
cmp
mov
and
add
and
mov
hlt
add
pop
pop
jbe
pop
lret
jmp
out
addb
add
stos
sub
mov
aaa
cltd
lret
add
out
mov
push
aaa
fstpl
test
add
jb
aas
stos
jns
xchg
add
in
cltd
stos
pop
jp
add
cmc
add
sysret
fsubr
data16
add
add
mov
cli
xchg
xchg
add
mov
xchg
test
jo
sbb
push
add
add
xchg
add
mov
add
mov
jp
add
mov
or
push
lret
push
mov
mov
push
syscall
dec
pop
cmp
adc
sbb
test
inc
add
mov
and
lcall
or
sub
add
imul
add
frstor
repnz
rcrl
or
cmc
dec
data16
mov
pop
mov
add
mov
add
add
jne
cltd
jg
pop
mov
mov
xchg
loope
dec
adc
jb
jl
addb
jmp
mov
push
data16
cmp
xchg
push
add
jg
test
jp
pop
fisubs
add
add
mov
arpl
xchg
add
sbb
sub
hlt
add
movb
add
mov
shr
adc
data16
pop
mov
inc
add
add
pusha
add
xchg
add
lcall
mov
into
push
sahf
add
loop
lcall
and
add
test
xor
jb
mov
lods
jecxz
add
mov
aam
in
mov
ds
add
into
iret
push
add
add
add
xchg
push
or
add
add
xor
aas
outsl
sub
int
add
mov
add
hlt
add
out
push
add
sbb
xchg
add
add
mov
inc
add
add
xchg
push
lods
or
xchg
add
cmpsl
ret
add
mov
push
add
add
xchg
lret
add
mov
mov
mov
jmp
inc
insb
fdiv
add
pushf
jb
jl
jnp
or
dec
repnz
add
addb
add
popa
add
mov
sbb
sti
mov
add
or
push
add
xor
test
cmp
in
mov
add
sbb
mov
add
xchg
cs
mov
ss
mov
xor
add
mov
xor
add
mov
add
and
mov
pop
or
mov
stc
xor
add
sahf
lret
add
add
add
int
ljmp
lret
rolb
repnz
add
sbb
mul
add
test
jmp
xchg
add
sahf
mov
std
add
in
xor
movb
pop
sti
imul
stc
mov
inc
jmp
addb
out
add
mov
mov
xchg
idivl
cmp
sbb
mov
add
dec
mov
cwtl
jne
nop
add
pop
inc
add
cltd
push
pop
xchg
fisttps
mov
add
aam
ja
dec
add
mov
rolb
sbb
xchg
add
add
in
mov
outsb
std
cs
inc
add
mov
add
add
add
mov
outsl
and
push
add
add
mov
pop
sub
jo
stos
pop
mov
pop
jne
push
imul
add
add
sbb
cmp
nop
add
mov
inc
add
add
add
loop
lea
push
int3
lcall
add
push
add
loope
mov
nop
add
sbb
out
lahf
loopne
jo
iret
mov
daa
inc
xchg
pop
lock
in
xchg
pop
add
mov
xchg
add
cmc
xchg
inc
add
add
lock
mov
dec
add
jle
adc
rolb
add
leave
enter
add
or
aas
xlat
popa
enter
aam
mov
ss
loope
rolb
aad
incb
cmpsl
inc
movb
add
add
addr16
ljmp
add
dec
add
les
xchg
iret
dec
pop
sub
add
lds
add
add
add
hlt
add
js
icebp
mov
inc
call
pop
sbb
dec
xchg
insl
push
cmp
movl
in
sar
push
dec
xchg
les
xor
dec
xchg
mov
lods
sub
cmpsb
add
jbe
cmp
movsb
add
add
add
push
imul
add
pop
lahf
xor
popf
xchg
dec
mov
mov
mov
rep
pop
xchg
add
imul
add
inc
add
pop
cmc
lock
inc
add
add
add
add
add
pop
imul
or
inc
jle
lods
out
inc
add
movsb
add
cmpsl
cmp
mov
les
and
mov
jmp
repnz
bound
mov
cmp
push
cmpl
add
lret
loopne
xor
jl
mov
mov
adc
add
xchg
add
add
mov
bound
mov
add
adc
push
add
add
mov
fildl
mov
dec
dec
pop
sub
sti
insb
in
cmp
sahf
xlat
mov
push
add
in
mov
add
add
add
push
add
cmp
rolb
cwtl
js
mov
aas
cmp
mov
mov
and
dec
or
adc
ret
xor
addb
mov
xchg
jl
outsl
cmp
dec
push
add
lret
adc
xchg
add
add
repnz
add
push
add
in
or
and
and
xchg
lret
insb
and
mov
mov
add
test
je
lcall
mov
iret
repz
rcll
add
jge
add
jbe
stos
xchg
mov
cld
and
loope
push
add
bound
mov
add
cmp
into
adc
insl
jb
adc
pop
push
lds
add
cwtl
adc
lret
jbe
out
dec
push
add
dec
cmp
jns
mov
mov
movsb
add
add
mov
add
mov
mov
sbbl
push
add
push
add
loop
call
mov
mov
push
pushf
icebp
and
jns
push
fs
xchg
pop
add
pop
testb
xor
insl
add
sti
call
dec
push
add
addr16
mov
lret
cmp
add
add
add
mov
add
lods
hlt
add
add
mov
loopne
pop
add
add
add
test
push
in
xor
arpl
fldcw
movl
mov
in
mov
jmp
and
mov
push
jne
daa
cmpsl
loopne
xchg
clc
sub
aaa
push
add
jb
or
repnz
ret
add
jecxz
add
lahf
add
insb
imul
xchg
add
cmp
sbbl
jbe
pop
xchg
mov
dec
aam
dec
decl
out
stos
mov
xor
add
pop
repnz
dec
push
add
add
add
push
clc
sbb
ja
add
lcall
lret
stc
jb
sbb
push
add
movsl
fidivrs
lcall
pusha
add
xor
xor
add
add
add
add
pop
addb
add
jle
dec
fsts
add
jae
ret
movb
add
xchg
pop
cltd
xchg
adc
adc
mov
xchg
dec
jge
add
mov
pop
mov
scas
adc
add
jnp
push
add
add
inc
sti
mov
add
add
or
jne
jno
cmp
sti
pop
mov
out
jnp
cwtl
movb
add
imul
jecxz
add
or
pop
mov
add
lods
sbb
mov
jecxz
add
imul
sbb
xchg
cmpsl
cmp
pop
push
add
mov
xor
cmp
pop
insl
mov
xchg
and
fldt
add
mov
push
jo
leave
mov
mov
js
pop
fsubrl
stos
push
icebp
sub
outsb
mov
add
mov
add
push
cwtl
jp
xchg
mov
mov
inc
sti
mov
cmp
add
add
aas
pop
into
xchg
les
testb
jb
out
lret
xor
sbb
ds
loopne
lods
dec
outsb
adc
popa
fsubrp
jge
fwait
movsl
mov
add
pop
sahf
stos
pop
les
cmp
les
inc
pusha
add
pop
add
add
pop
sub
mov
lods
stos
hlt
add
aaa
out
cmp
add
mov
aas
add
rcll
and
add
mov
lret
lahf
pop
push
add
pop
mov
add
add
daa
xchg
cld
mov
in
ja
inc
add
mov
inc
lret
cmc
imul
add
insb
or
pusha
add
or
xchg
xchg
gs
add
mov
jo
repnz
add
mov
std
sbb
aas
mov
add
mov
ja
dec
int
add
data16
and
add
mov
divl
inc
add
icebp
popa
cmpl
add
adc
mov
add
dec
shrl
sbb
cwtl
in
pop
jbe
hlt
add
jle
add
add
outsb
mov
mov
popa
fwait
and
dec
jo
mov
mov
and
mov
xor
sub
cmpsl
mov
ja
sub
fstl
add
fdivs
fisttpl
icebp
jle
add
mov
pushl
add
add
mov
push
add
mov
lea
sub
jb
mov
dec
rolb
mov
dec
lea
mov
xchg
jecxz
add
mov
add
cmc
xchg
lods
ror
adc
cmp
push
bound
mov
mov
add
hlt
add
xor
xor
jno
add
add
push
add
add
and
movsl
sbb
add
push
add
add
push
mov
dec
sub
add
inc
cmp
add
je
incl
mov
and
mov
add
lcall
push
aas
and
mov
ja
push
add
mov
jle
add
out
add
loopne
add
aad
lcall
fildll
je
mov
add
rolb
jl
fdivrl
add
mov
inc
push
add
add
push
add
add
mov
adc
and
mov
mov
mov
adc
mov
and
inc
add
jne
popa
mov
xorl
clc
rolb
adc
insb
jae
out
jne
stc
mov
xor
aam
insl
dec
jno
mov
std
adc
addb
inc
and
mov
jle
cmpsl
int3
aas
pop
ja
rolb
jnp
add
add
add
fsubl
lcall
stos
std
fsubs
add
add
mov
das
and
mov
add
mov
sti
inc
pushf
ret
xor
std
push
add
add
jb
lret
outsb
or
xchg
stc
clc
add
mov
add
mov
daa
pop
and
sub
add
mov
out
sbb
aaa
stos
jl
add
add
rolb
mov
add
mov
cmp
add
movsb
add
add
add
add
add
hlt
add
cmpsl
lret
rolb
rolb
mov
addb
jp
jle
add
lea
xchg
add
loop
push
and
mov
add
stos
lret
cmp
add
add
add
les
test
pop
xor
cltd
and
pop
push
mov
add
fstpt
lods
popa
insb
xchg
add
addr16
mov
icebp
lahf
outsb
out
sbb
add
out
ret
iret
mov
mov
or
rcrl
cmp
add
add
pop
addl
sbb
adc
mov
and
mov
sub
add
loop
jmp
mov
loope
pop
xchg
add
data16
or
cli
ljmp
push
add
adc
pop
pop
or
aam
dec
adc
cmp
jecxz
add
add
xchg
xchg
add
gs
add
xorl
add
in
roll
push
add
or
mov
sub
and
push
mov
mov
fimuls
sbb
addb
rolb
mov
dec
cmp
add
iret
ja
xchg
lcall
push
mov
int3
push
mov
adc
stos
aam
movsl
push
push
dec
fdivs
and
mov
jae
icebp
aaa
dec
xchg
add
add
mov
xlat
iret
nop
add
nop
add
add
out
mov
movsb
add
or
adc
out
stc
mov
add
mov
mov
scas
and
add
xor
sti
dec
xor
pushf
adc
push
lds
add
xor
or
or
add
jae
xchg
sub
movsl
outsl
sub
add
ret
jp
ja
leave
sahf
testb
fisttpll
xor
rolb
add
and
push
push
stos
dec
out
data16
cmp
lea
loopne
call
mov
add
add
mov
add
sub
add
les
icebp
insb
mov
add
lahf
int
push
add
rolb
mov
lret
mov
lea
lret
dec
add
lea
jbe
aas
bound
mov
mov
fucomi
adc
add
out
sub
pop
jge
pop
lock
and
push
add
mov
jle
add
xlat
add
xor
add
addb
add
add
clc
xor
movsb
add
sti
addb
test
pop
mov
add
mov
shll
outsl
add
mov
or
imul
add
add
and
mov
addb
cwtl
jle
add
mov
mov
add
popa
and
fnsave
jmp
cwtl
repnz
movb
add
fimuls
cmp
ja
push
mov
mov
out
add
dec
lods
aam
push
stos
dec
and
push
add
add
add
sbb
push
add
mov
nop
add
add
nop
add
stos
xchg
add
rolb
icebp
and
add
cs
aam
outsb
inc
cmpsl
sbb
add
cld
push
add
add
pop
inc
sbb
mov
lret
enter
and
stc
dec
lahf
aam
add
or
ljmp
andl
ja
popf
dec
xorl
add
pop
repz
inc
add
cld
pop
std
ds
and
push
push
add
add
add
add
mov
mov
insb
repnz
jl
shr
movb
addb
add
and
mov
sbb
add
add
jmp
add
mov
fwait
mov
insl
or
xchg
add
add
add
shll
mov
add
add
ljmp
push
inc
add
push
add
inc
add
fldl
mov
and
xchg
rep
xor
inc
add
add
and
mov
mov
push
add
add
add
inc
push
in
pop
sbb
xchg
push
pop
movsl
push
add
add
cltd
jns
add
or
add
push
add
pusha
add
sbb
dec
inc
add
ja
lods
xor
push
fimull
add
pop
push
add
sub
fcomi
add
movb
test
add
add
int3
mov
xchg
mov
ss
mov
jg
inc
add
popa
scas
jg
fwait
aad
addb
roll
out
xor
mov
fwait
movb
ljmp
add
pop
dec
pop
or
sbb
add
mov
xor
push
add
dec
stos
or
add
lahf
insl
imul
out
mov
daa
out
dec
data16
mov
fistpll
out
jnp
xor
jae
lods
enter
push
add
lret
add
repz
mov
lahf
lret
movsb
add
xor
mov
add
in
mov
dec
mov
sarl
les
jo
testl
add
pushf
das
scas
sub
aad
sti
popa
inc
add
dec
cld
adcl
enter
call
nop
add
jbe
mov
add
decl
sarl
iret
int3
jecxz
mov
inc
and
sbb
add
xor
fstps
pop
mov
push
rolb
add
add
mov
ficoms
mov
bound
mov
xchg
lahf
sub
mov
add
mov
xor
jge
add
int3
les
daa
jl
add
xchg
mov
lcall
add
xchg
add
inc
arpl
pop
repnz
test
stos
aas
mov
iret
call
mov
add
subl
fdivs
add
ljmp
mov
fwait
cs
and
mov
xor
inc
ret
lret
ljmp
sbb
mov
add
stos
fwait
loop
cmpsl
dec
icebp
mov
mov
push
push
xchg
pushf
iret
loop
mov
jno
data16
add
out
imul
out
mov
add
mov
jmp
jp
add
add
jne
add
ret
movb
cmp
add
add
jbe
add
jno
add
nop
add
das
js
jbe
js
mov
ja
or
jbe
sbb
je
mov
cmp
cmp
add
add
add
mov
xchg
sbb
add
add
das
lea
add
add
xchg
add
add
add
stos
rolb
pop
xor
jg
iret
testb
loop
repnz
sub
push
add
add
add
pop
jb
and
mov
xrelease
inc
insl
insl
scas
add
jno
add
adc
mov
add
inc
add
cld
or
lods
cs
push
add
cmpsl
int
adc
fwait
xchg
mov
scas
sbb
pop
imul
repz
aam
in
cmp
outsb
inc
add
pop
cld
dec
imul
ffreep
sbb
inc
add
cmp
xor
addb
xor
out
mov
jne
and
mov
flds
add
loopne
insl
cmpl
cmc
in
sub
inc
loope
add
ret
sub
add
jmp
das
sbb
add
add
and
mov
adc
adc
sub
cld
or
mov
cmovno
and
mov
add
add
add
ret
add
add
xchg
pop
ret
add
mov
popf
cmc
sbb
xchg
add
or
xlat
inc
add
dec
jo
outsb
pop
int
bound
mov
mov
stc
push
add
add
aam
mov
ret
daa
sbb
add
add
pop
xchg
test
lds
add
loope
out
and
mov
lret
mov
mov
push
add
lahf
ret
pop
xor
push
add
cmp
xchg
push
add
jecxz
repnz
dec
dec
outsb
rolb
pop
fcmovne
scas
push
jnp
xchg
jmp
or
add
adc
sub
lret
jp
out
cmp
or
add
and
mov
mov
and
fwait
pusha
add
clc
mov
push
add
add
add
add
add
mov
push
out
push
add
fisttpl
add
test
cmp
xchg
add
add
clc
add
in
push
add
add
add
add
filds
rolb
fidivl
lret
repnz
jl
mov
pushf
fdivrs
mov
adc
adc
pop
insl
in
mov
dec
ds
inc
add
push
add
adc
xchg
repnz
sub
lcall
xchg
add
add
out
scas
cmp
into
jae
or
cs
and
mov
mov
outsl
sub
or
mov
enter
stc
xchg
add
add
cmp
lahf
and
mov
nop
add
push
and
mov
add
push
add
add
clc
leave
dec
mov
sbb
jmp
mov
cmpl
pop
add
add
mov
add
add
mov
addr16
testb
adc
add
add
add
in
in
fucom
add
rolb
sbb
cwtl
aas
cmp
or
jnp
add
add
mov
lods
add
in
imul
lret
mov
cmp
add
add
add
jne
inc
add
mov
cmp
adc
jb
mov
call
push
add
and
lods
adc
jno
sbb
movb
mov
jmp
xor
sti
jmp
add
cmp
outsl
push
cli
testb
ret
adc
mov
into
cs
in
push
mov
cs
xor
mov
cmp
negl
into
jnp
pop
insl
das
xor
mov
jl
test
pop
jbe
xchg
add
insl
stc
cmp
les
cmp
add
lret
dec
stc
lods
xor
fcompl
das
jae
pop
adc
push
push
add
or
add
fistpll
popa
sub
add
aaa
mov
sub
add
nop
add
add
mov
xor
mov
add
cmp
add
fisttps
mov
jno
jg
cmp
pop
int
add
pop
push
mov
cmpsl
imul
pushl
bound
mov
push
add
iret
dec
sti
xor
adc
xchg
xchg
jge
mov
lret
add
sub
loopne
out
mov
adc
mov
sbb
arpl
rolb
or
add
mov
pop
jp
add
add
adc
mov
sub
add
jge
add
jmp
push
cs
add
xor
mov
inc
jp
fdiv
inc
inc
add
add
daa
out
sub
fmull
cmpsb
add
ljmp
insb
adc
movsl
mov
or
add
add
mov
mov
add
mov
rolb
add
pop
hlt
add
and
add
insb
mov
add
addb
rol
lds
leave
mov
mov
data16
outsb
cwtl
addr16
aas
sub
arpl
add
ret
jns
inc
add
loopne
filds
xchg
add
pusha
add
xchg
sbb
jle
rolb
jae
mov
das
adc
fstpt
xchg
add
in
ficomps
rolb
add
jecxz
inc
imul
ret
cmp
stc
pop
adc
adc
xchg
add
xchg
add
testb
add
mov
inc
add
cli
push
add
jo
std
rcll
scas
sbb
test
fwait
test
bound
mov
pop
out
ficoms
add
or
jo
pusha
add
add
add
addb
push
ret
jg
add
add
dec
xlat
rolb
adc
ret
and
mov
sub
mov
xchg
add
add
push
add
and
stos
dec
repz
pop
adc
sbbl
faddl
add
add
jns
add
and
lea
jno
adc
loop
xchg
xor
add
cltd
insb
xchg
jl
add
mov
cmp
add
mov
xchg
add
rcl
and
mov
add
mov
lods
mov
addb
out
mov
fsubrs
lcall
xchg
jg
les
pop
mov
add
add
mov
divl
aaa
push
xor
inc
jnp
jmp
mov
dec
repz
int
sub
lods
cmp
add
arpl
pop
arpl
add
add
add
aaa
out
mov
test
add
dec
mov
add
add
add
or
sub
stc
push
add
xor
cwtl
mov
in
jmp
xchg
dec
nop
add
mov
mov
add
push
add
sbb
jl
xchg
mov
mov
add
mov
ret
mov
cmpsl
inc
or
mov
add
int3
daa
pop
fcoml
int3
dec
add
add
data16
repz
mov
add
pusha
add
rolb
mov
add
xchg
add
sub
dec
push
inc
add
icebp
mov
xchg
add
cmpsb
add
add
dec
jbe
add
mov
icebp
add
sub
add
add
mov
imul
mov
aaa
into
sahf
mov
inc
mov
aas
and
testb
pop
fldcw
push
add
test
push
out
bound
mov
mov
inc
add
xor
jmp
jo
sub
add
add
test
lock
push
add
xlat
rolb
dec
inc
dec
ds
dec
iret
mov
movsb
add
and
loope
sahf
pop
mov
xlat
push
popf
addb
add
add
lcall
mov
push
dec
test
push
int
or
test
ror
lods
cmp
adc
add
add
push
jmp
jp
add
pushl
mov
xchg
jo
in
push
add
outsb
dec
nop
add
add
dec
fidivrs
std
pop
xlat
mov
or
std
rolb
js
je
movb
add
add
add
add
mov
imul
mov
popa
push
add
xlat
icebp
call
sti
ficoml
push
add
mov
cwtl
clc
sub
pop
js
leave
rolb
rcrl
add
subl
in
push
add
add
ja
or
add
add
jl
cld
into
or
pop
xor
cmp
test
mov
add
lcall
stos
xchg
addr16
add
fnstsw
cld
xor
jo
add
scas
push
add
mov
into
loop
cmp
push
cli
and
mov
fmuls
add
jae
jns
testb
xchg
adc
dec
mov
stos
mov
cld
aam
lcall
into
mov
add
add
cmpsb
add
pop
lret
aas
cmp
adc
pop
testb
pop
out
arpl
dec
andl
add
mov
sub
xlat
dec
cmp
nop
add
lea
add
shll
pop
repnz
sarl
add
or
add
movb
dec
add
xchg
in
pop
inc
sbb
scas
iret
fmuls
sti
xchg
add
add
shrl
inc
add
jnp
testb
popl
aam
cmp
in
pop
inc
add
dec
dec
push
aam
push
sbb
cmp
dec
mov
sahf
repz
mov
pop
in
xchg
dec
pop
mov
cmc
cmp
in
inc
lds
mov
push
test
add
jmp
push
mov
mov
adc
mov
add
push
flds
mov
add
movsl
dec
roll
imul
inc
mov
jecxz
mov
sbb
add
das
pop
loopne
fcomp
ja
testl
mov
in
mov
jo
in
iret
cmp
enter
orl
sub
arpl
inc
add
and
mov
ss
add
add
add
sub
and
mov
add
mov
add
add
stos
push
lods
adc
insl
mov
jle
jmp
add
inc
add
shll
mov
mov
sub
add
cmp
shl
add
add
and
xlat
dec
enter
mov
add
add
add
lea
inc
add
roll
call
add
add
jle
lret
adc
pop
cli
and
mov
lock
sub
add
mov
jl
adc
add
add
xchg
mov
dec
cmp
and
mov
add
add
add
mov
filds
cwtl
test
add
jle
loope
popa
icebp
mov
lcall
add
add
and
mov
add
testb
cmp
aaa
sbb
push
add
mov
dec
add
ret
pop
xor
add
in
pop
insb
mov
outsl
sub
push
mov
dec
rolb
sbb
add
xor
sub
cmp
out
mov
pop
sahf
pop
mov
mov
data16
xorl
mov
mov
pop
push
pop
cmpsb
add
in
inc
add
dec
push
add
fsts
xor
mov
add
adc
nop
add
add
add
add
hlt
add
adcl
add
ljmp
scas
ret
scas
out
xor
add
mov
mov
gs
nop
add
add
push
add
rol
add
sub
add
add
into
repz
fs
add
add
mov
mov
jb
push
add
mov
add
add
cmovns
and
xor
jb
ja
shll
insb
lea
sbb
in
inc
add
jnp
adc
dec
ja
xor
add
stc
pop
addb
ss
cs
push
add
mov
add
pop
inc
mov
dec
test
push
pop
scas
sub
add
cmp
add
pushf
push
add
gs
add
lds
hlt
add
cmp
mov
add
testl
fistps
xchg
add
jle
add
push
add
in
pop
rorl
add
pop
mov
mov
repz
imull
ljmp
ret
test
sbb
data16
pop
mov
cmp
out
add
fistpl
aaa
lods
xor
scas
js
mov
dec
pop
and
add
add
push
xor
movsb
add
mov
xchg
cmovo
mov
add
out
push
dec
xor
in
or
scas
in
into
mov
mov
sub
add
push
add
adc
les
rolb
push
push
add
add
jnp
jecxz
ja
les
sub
ja
lds
icebp
jg
jae
mov
inc
add
mov
add
mov
inc
add
mov
pushf
popa
dec
sub
enter
mov
add
xchg
add
inc
add
gs
add
adc
add
inc
add
mov
add
jne
mov
add
add
adc
cmp
push
rcrl
imul
add
inc
add
push
add
mov
adc
add
mov
clc
and
popa
insb
add
pop
lds
push
mov
dec
sbb
add
adc
add
mov
addb
movb
mov
mov
bound
mov
inc
and
stos
mov
jmp
loop
cli
mov
cld
xchg
inc
add
add
and
mov
dec
sahf
lods
push
xorl
hlt
add
mov
add
add
popa
loope
push
add
add
rolb
lret
cltd
adc
add
inc
add
fimuls
cs
int3
xchg
add
add
add
add
jae
mov
mov
cmp
add
add
and
mov
push
push
arpl
add
adc
inc
adc
mov
mov
lods
jecxz
or
add
rolb
