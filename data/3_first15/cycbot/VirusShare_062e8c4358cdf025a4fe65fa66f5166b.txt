dec
out
in
jmp
loop
test
loop
sub
loop
sbb
in
in
call
loop
cmp
loop
sahf
loop
in
out
in
loop
in
out
in
call
loop
sub
loop
int3
in
in
in
in
jecxz
in
out
in
loope
in
in
in
in
in
in
in
loope
in
out
in
out
in
in
in
out
in
in
in
loop
in
loop
in
in
in
loope
in
jecxz
in
loop
in
jmp
loop
out
loop
add
loop
loop
out
in
loop
in
call
loop
arpl
loop
arpl
loop
or
loop
out
in
in
in
jmp
loop
loop,pn
in
in
in
in
in
out
in
out
in
out
in
loope
in
in
in
loop
in
in
in
out
in
call
loop
jp
loop
cwtl
in
in
call
loop
jbe
loop
jecxz
loop
fsubr
loop
jecxz
loop
out
out
in
jecxz
in
in
in
in
in
in
in
loope
in
out
in
in
in
in
in
loop
in
in
in
call
loop
jge
loop
dec
jmp
loop
arpl
loop
in
in
out
in
in
in
in
in
jmp
loop
push
call
loop
and
in
loop
in
in
in
in
in
out
in
jmp
loop
loop
mov
loop
out
loop
jle
loop
and
loop
pop
out
in
out
in
jecxz
in
call
loop
xchg
loop
and
loop
xchg
in
in
call
loop
ss
loop
lahf
loope
in
out
in
jmp
loop
xchg
jecxz
in
in
in
out
in
out
in
jecxz
in
jecxz
in
jecxz
in
loope
in
out
in
loop
in
in
in
loope
in
in
in
in
in
jecxz
in
in
in
loop
in
in
in
in
in
jmp
loop
cld
loop
in
in
in
in
in
loop
in
in
in
loop
in
loop
in
in
in
in
in
in
in
out
in
in
in
out
in
call
loop
loop,pn
in
out
in
jecxz
in
out
in
loop
in
call
loop
mov
jecxz
in
out
in
in
in
in
in
loope
in
out
in
in
in
in
in
loop
in
call
loop
inc
out
in
jecxz
in
jmp
loop
repnz
in
in
in
jecxz
in
jecxz
in
out
in
out
in
out
in
out
in
out
in
call
loop
push
in
in
in
in
loope
in
in
in
in
in
loope
in
out
in
call
loop
sub
in
in
in
in
out
in
loope
in
in
in
in
in
call
loop
pop
loope
in
in
in
in
in
loop
in
out
in
call
loop
jecxz
loop
insl
out
in
out
in
in
in
out
in
in
in
in
in
out
in
loope
in
in
in
in
in
loope
in
jecxz
in
loope
in
in
in
call
loop
pop
jecxz
in
loop
in
loop
in
jecxz
in
out
in
out
in
out
in
loope
in
out
in
loop
in
out
in
jecxz
in
in
in
jmp
loop
or
in
in
jmp
loop
and
loop
and
in
loope
in
jecxz
in
loope
in
loop
in
jecxz
in
jecxz
in
out
in
in
in
jmp
loop
sub
loop
xchg
loop
xlat
jecxz
in
loop
in
in
in
jmp
loop
jne
loop
mov
loop
sti
in
in
loop
in
in
in
in
in
loop
in
loop
in
loope
in
loop
in
jecxz
in
call
loop
sub
loop
cmc
call
loop
mov
loop
cmpsb
jecxz
in
loop
in
loop
in
in
in
call
loop
sti
out
in
call
loop
xchg
in
in
in
in
in
in
loope
in
out
in
call
loop
inc
jmp
loop
mov
loop
jmp
loop
in
in
in
jecxz
in
loop
in
in
in
jecxz
in
in
in
out
in
in
in
call
loop
xor
loop
das
in
in
loope
in
in
in
loop
in
call
loop
mov
loop
xchg
in
in
in
in
out
in
jmp
loop
cmpsl
jecxz
in
loope
in
loope
in
jecxz
in
out
in
call
loop
popf
out
in
loope
in
in
in
out
in
jecxz
in
call
loop
mov
loop
int3
call
loop
pop
out
in
call
loop
xor
loop
pop
out
in
in
in
jecxz
in
loope
in
loope
in
in
in
jecxz
in
in
in
in
in
out
in
call
loop
cmp
loop
cmpsl
out
in
jecxz
in
out
in
loop
in
jecxz
in
out
in
jmp
loop
loop
cmp
loop
pushf
jecxz
in
out
in
in
in
jecxz
in
jecxz
in
loope
in
out
in
loop
in
out
in
call
loop
in
call
loop
sub
loop
add
loop
out
loop
push
call
loop
xchg
out
in
out
in
in
in
in
in
out
in
in
in
loope
in
loop
in
loop
in
jecxz
in
loop
in
loope
in
in
in
in
in
out
in
loop
in
in
in
jecxz
in
call
loop
nop
jecxz
in
jecxz
in
loop
in
out
in
in
in
in
in
in
in
in
in
jmp
loop
aaa
out
in
jecxz
in
loope
in
call
loop
add
loop
ret
in
in
in
loop
in
out
in
in
in
out
in
in
in
loop
in
in
in
in
in
in
in
loop
in
in
in
in
in
loope
in
call
loop
loop
es
in
in
in
out
in
jmp
loop
mov
jecxz
in
in
in
jmp
loop
movsb
loop
in
loop
in
jecxz
in
loop
in
call
loop
and
loop
dec
in
in
jecxz
in
in
in
in
in
in
in
in
in
loop
in
jmp
loop
sti
out
in
jmp
loop
cmc
call
loop
outsl
in
in
out
in
out
in
in
in
call
loop
xchg
out
in
in
in
jecxz
in
out
in
in
in
out
in
jecxz
in
loope
in
out
in
out
in
loop
in
call
loop
out
out
in
out
in
out
in
out
in
in
in
out
in
loop
in
jecxz
in
jecxz
in
call
loop
and
loop
adc
loop
xor
loop
jle
loop
pop
jecxz
in
jecxz
in
loop
in
call
loop
push
in
in
loop
in
loop
in
call
loop
mov
in
in
out
in
in
in
out
in
out
in
call
loop
or
loop
push
in
in
in
in
loope
in
out
in
in
in
call
loop
shl
loop
xor
loop
aas
out
in
in
in
loope
in
in
in
jmp
loop
pop
in
in
out
in
loop
in
call
loop
jo
loop
loop
loop
inc
jecxz
in
jecxz
in
out
in
loope
in
out
in
loop
in
jmp
loop
dec
out
in
out
in
loope
in
in
in
out
in
jmp
loop
and
in
loop
in
loop
in
out
in
loope
in
in
in
out
in
in
in
jmp
loop
add
loop
xlat
in
in
out
in
in
in
in
in
jecxz
in
call
loop
std
out
in
in
in
out
in
jecxz
in
out
in
in
in
jecxz
in
in
in
in
in
loope
in
jecxz
in
call
loop
dec
jecxz
in
jecxz
in
jmp
loop
xor
loop
fucom
loop
xlat
call
loop
xor
loop
out
in
in
in
jecxz
in
out
in
loope
in
out
in
out
in
loop
in
in
in
out
in
call
loop
xor
loop
mov
loop
loope
loop
cmp
loop
lret
loope
in
in
in
call
loop
mov
loop
pop
loop
in
jecxz
in
loop
in
in
in
jecxz
in
jmp
loop
das
jecxz
in
out
in
jmp
loop
jae
loop
stos
out
in
in
in
loope
in
loop
in
out
in
jecxz
in
out
in
jecxz
in
loop
in
in
in
out
in
in
in
jmp
loop
jl
loop
mov
loop
popa
loope
in
out
in
loop
in
in
in
call
loop
data16
in
loop
in
out
in
out
in
loop
in
out
in
jecxz
in
out
in
in
in
loope
in
call
loop
mov
loop
psubsb
in
loope
in
in
in
in
in
call
loop
popa
in
in
jmp
loop
jae
loop
in
in
in
in
out
in
in
in
in
in
jecxz
in
loop
in
out
in
loop
in
out
in
in
in
loope
in
out
in
call
loop
repnz
in
call
loop
sub
loop
in
in
jmp
loop
sub
loop
sub
loop
imul
loop
xchg
loope
in
out
in
in
in
out
in
call
loop
ljmp
in
in
in
out
in
in
in
jecxz
in
jecxz
in
in
in
call
loop
xchg
call
loop
push
jmp
loop
ftst
loop
push
out
in
jecxz
in
loop
in
in
in
in
in
out
in
out
in
out
in
jmp
loop
repz
in
jmp
loop
iret
in
in
call
loop
mov
loop
outsl
out
in
jecxz
in
out
in
in
in
in
in
jecxz
in
loop
in
loope
in
call
loop
imul
loop
daa
out
in
in
in
loop
in
call
loop
imul
in
out
in
jecxz
in
loope
in
loop
in
out
in
in
in
out
in
jecxz
in
out
in
in
in
out
in
jecxz
in
in
in
out
in
in
in
call
loop
inc
in
in
out
in
in
in
call
loop
inc
in
in
loope
in
call
loop
inc
in
in
out
in
jmp
loop
jnp
loop
dec
out
in
loop
in
loop
in
call
loop
add
loop
mov
in
in
call
loop
jne
loop
sbb
loop
loope
loop
aam
loop
in
in
in
in
in
call
loop
das
in
in
in
in
out
in
jecxz
in
out
in
out
in
in
in
loop
in
in
in
jecxz
in
in
in
loope
in
loope
in
in
in
in
in
out
in
loop
in
call
loop
or
loop
mov
loop
mov
loop
push
jmp
loop
mul
loop
in
out
in
out
in
out
in
loope
in
out
in
out
in
in
in
out
in
in
in
in
in
in
in
loop
in
in
in
jecxz
in
jecxz
in
in
in
loope
in
out
in
jecxz
in
out
in
in
in
loop
in
jecxz
in
call
loop
imul
loop
es
loop
and
loop
test
loope
in
out
in
in
in
out
in
in
in
call
loop
repnz
in
in
in
jecxz
in
loop
in
jecxz
in
out
in
loope
in
jmp
loop
loop
loop
sbb
loop
psubsw
in
call
loop
mov
loop
push
in
in
out
in
in
in
loop
in
in
in
out
in
jecxz
in
call
loop
pop
in
in
call
loop
xor
loop
dec
in
in
out
in
loop
in
loope
in
loop
in
out
in
out
in
loop
in
out
in
out
in
call
loop
and
loop
test
loop
sub
loop
adc
loop
inc
call
loop
mov
loop
fsub
loop
inc
call
loop
movsb
in
in
out
in
in
in
out
in
out
in
call
loop
mov
jecxz
in
loope
in
out
in
call
loop
sahf
jecxz
in
loope
in
in
in
in
in
in
in
in
in
jecxz
in
in
in
out
in
in
in
in
in
jecxz
in
call
loop
shl
in
jecxz
in
call
loop
fs
in
in
in
loope
in
loop
in
jmp
loop
mov
loop
pop
out
in
in
in
out
in
in
in
jecxz
in
loop
in
in
in
in
in
out
in
call
loop
or
loop
shr
loop
adc
jecxz
in
loope
in
in
in
jmp
loop
into
out
in
jecxz
in
out
in
call
loop
and
loop
test
loop
out
loop
loope
in
out
in
loop
in
loop
in
call
loop
outsb
loop
in
in
in
loop
in
jmp
loop
and
loop
in
loop
loop
into
loop
in
jmp
loop
jb
loop
adc
loop
into
out
in
in
in
jecxz
in
in
in
loop
in
in
in
call
loop
jns
loop
or
loop
fucom
loop
xchg
loop
push
out
in
call
loop
sub
loop
dec
in
in
in
in
loop
in
call
loop
inc
loop
in
in
in
out
in
jecxz
in
jecxz
in
in
in
in
in
jecxz
in
call
loop
add
loop
stos
in
in
call
loop
cld
jecxz
in
in
in
loop
in
loop
in
loop
in
loope
in
in
in
call
loop
out
out
in
call
loop
pushf
loop
in
out
in
out
in
out
in
in
in
in
in
loope
in
call
loop
cmp
loop
in
out
in
out
in
in
in
jecxz
in
loop
in
loop
in
out
in
out
in
out
in
in
in
jecxz
in
call
loop
push
out
in
jecxz
in
loop
in
out
in
loop
in
loop
in
out
in
out
in
in
in
jmp
loop
dec
call
loop
push
loop
in
out
in
call
loop
sti
in
in
jecxz
in
in
in
loop
in
loop
in
call
loop
mov
loop
in
in
call
loop
mov
call
loop
cmpsb
in
in
out
in
call
loop
into
out
in
loop
in
jecxz
in
jmp
loop
cmp
loop
jmp
loop
inc
out
in
loop
in
call
loop
cmp
loop
cmc
out
in
in
in
call
loop
cmp
loop
adc
loop
scas
jecxz
in
in
in
loop
in
loop
in
loope
in
out
in
in
in
call
loop
sahf
in
in
out
in
jecxz
in
out
in
in
in
in
in
in
in
jecxz
in
out
in
out
in
in
in
loope
in
loop
in
in
in
jecxz
in
out
in
in
in
jmp
loop
sub
loop
mov
in
in
in
in
call
loop
pop
call
loop
cmpsl
out
in
jmp
loop
ljmp
in
loope
in
jecxz
in
jecxz
in
in
in
in
in
in
in
jmp
loop
loope
in
call
loop
jmp
loop
in
in
in
out
in
call
loop
lock
in
loop
in
in
in
jmp
loop
xchg
out
in
call
loop
and
loop
push
call
loop
cli
in
in
loop
in
in
in
out
in
out
in
loope
in
in
in
jmp
loop
and
loop
adc
loop
mov
jecxz
in
in
in
out
in
in
in
out
in
out
in
call
loop
icebp
in
in
in
in
out
in
out
in
in
in
in
in
loope
in
jecxz
in
in
in
in
in
out
in
loop
in
out
in
in
in
in
in
jecxz
in
loop
in
out
in
jmp
loop
mov
loop
xchg
out
in
in
in
out
in
in
in
in
in
loop
in
call
loop
dec
in
in
in
in
loope
in
in
in
out
in
jecxz
in
out
in
loop
in
in
in
loop
in
loop
in
jecxz
in
in
in
out
in
call
loop
cmp
loop
jmp
loop
or
loop
mov
jecxz
in
out
in
jmp
loop
jecxz
loop
or
loop
loop
loop
loopne
loop
adc
loop
out
jecxz
in
out
in
out
in
loop
in
out
in
out
in
jmp
loop
in
call
loop
int
loop
pop
in
in
out
in
in
in
loop
in
jecxz
in
out
in
in
in
loop
in
out
in
loope
in
loop
in
out
in
jecxz
in
in
in
call
loop
hlt
jecxz
in
in
in
call
loop
pop
call
loop
jmp
loop
cld
loope
in
in
in
loop
in
out
in
out
in
loop
in
in
in
call
loop
out
loop
and
loop
push
jecxz
in
out
in
out
in
jecxz
in
out
in
out
in
in
in
call
loop
sub
loop
sub
loop
xor
loop
inc
jecxz
in
loope
in
loope
in
out
in
loop
in
jecxz
in
in
in
call
loop
popf
loop
in
call
loop
loop
cmp
loop
iret
loop
in
out
in
loop
in
out
in
jecxz
in
loop
in
out
in
loope
in
call
loop
jne
loop
add
loop
insb
out
in
loope
in
loop
in
in
in
in
in
jecxz
in
call
loop
cld
jecxz
in
call
loop
dec
out
in
out
in
out
in
loop
in
out
in
jmp
loop
inc
call
loop
mov
out
in
call
loop
mov
loope
in
in
in
loope
in
jecxz
in
in
in
in
in
in
in
call
loop
insl
out
in
in
in
loop
in
out
in
in
in
in
in
jecxz
in
in
in
in
in
out
in
jecxz
in
jecxz
in
in
in
loope
in
call
loop
daa
jmp
loop
inc
jecxz
in
loope
in
call
loop
aad
loop
cmp
loop
dec
call
loop
sub
loop
mov
loop
out
in
loope
in
loop
in
call
loop
xor
loop
xchg
in
in
in
in
out
in
in
in
in
in
out
in
loop
in
jecxz
in
in
in
out
in
jecxz
in
call
loop
jmp
out
in
loop
in
jecxz
in
in
in
in
in
jecxz
in
out
in
loop
in
out
in
loope
in
out
in
loope
in
in
in
call
loop
cwtl
loop
in
in
in
in
in
out
in
call
loop
pop
loop
in
jecxz
in
loop
in
in
in
loope
in
out
in
jecxz
in
jecxz
in
in
in
loope
in
call
loop
daa
in
in
jecxz
in
in
in
jmp
loop
cmc
loope
in
in
in
in
in
call
loop
popa
call
loop
inc
out
in
call
loop
pop
out
in
call
loop
and
loope
in
in
in
jmp
loop
es
in
in
in
in
in
loop
in
out
in
in
in
jecxz
in
in
in
out
in
loop
in
loope
in
jmp
loop
mov
loope
in
call
loop
std
loope
in
out
in
call
loop
xor
add
loop
xlat
pusha
add
syscall
clc
dec
pop
in
cmp
cmp
mov
sbb
inc
add
jae
add
clc
cmp
xchg
mov
fnsave
add
cmp
clc
lea
clc
xor
add
xor
add
clc
cmp
clc
test
add
add
xchg
fdivrl
mull
mov
fcomps
mov
jbe
clc
inc
add
mov
add
fsts
add
clc
pop
and
and
add
xchg
imul
add
mov
dec
movsl
clc
ja
fwait
repnz
loope
outsb
push
xchg
jle
dec
inc
add
sbb
add
xor
cli
cmp
icebp
inc
clc
xchg
dec
push
insl
inc
clc
xbegin
ret
test
inc
clc
movsl
clc
sub
push
add
jl
inc
clc
cmp
jl
or
test
gs
leave
test
in
imull
popa
add
push
add
es
pop
cmp
dec
push
js
xor
add
xlat
and
add
add
mov
sub
sub
and
je
js
add
jl
clc
cmp
cmp
clc
in
bound
add
dec
mov
data16
xchg
iret
cmp
rcrl
add
xor
mov
clc
imul
add
add
push
xor
add
clc
mov
lods
imul
jl
mov
loope
arpl
add
inc
clc
movsb
clc
xlat
sub
mov
clc
ret
clc
dec
cmp
add
sbb
xchg
clc
lea
jp
add
mov
stos
sub
add
or
cmp
add
mov
leave
scas
cmp
test
stos
sar
aas
out
pop
arpl
sbb
sub
push
mov
push
sub
push
push
push
call
test
jne
es
push
mov
and
xor
not
test
es
nop
nop
loop
pop
lea
xor
sub
xchg
es
es
ss
pop
add
movzbl
cs
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
xchg
lea
sub
mov
lock
lea
lock
ret
and
je
and
sub
test
nop
nop
nop
nop
nop
push
movl
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
push
mov
push
lret
jmp
add
push
add
xchg
or
clc
inc
add
inc
add
add
add
add
pop
mov
pop
arpl
add
clc
jae
add
cmp
clc
shrl
clc
jbe
clc
add
cmpsl
clc
std
sbb
add
dec
popf
cmp
push
add
dec
js
jne
cs
pop
jb
add
add
add
pop
ds
adc
clc
sbb
dec
out
xor
add
cmp
loope
out
and
add
outsb
stos
jmp
sbb
fdivrs
and
add
hlt
jl
movsb
clc
xbegin
add
and
add
add
sbb
adc
add
mov
clc
xchg
add
add
push
add
cmp
cmp
stos
js
clc
outsb
push
clc
push
add
fucomip
rorb
loopne
push
repz
fabs
clc
pop
test
pop
mov
add
xor
add
cmp
aad
jg
clc
shrb
xchg
sbb
sub
test
xchg
xor
add
xor
add
add
clc
xor
add
clc
add
add
clc
stos
xchg
dec
inc
clc
mov
xor
xchg
sub
add
mov
jmp
add
xchg
out
fs
arpl
add
clc
imulb
fsubr
mov
xchg
mov
insl
stc
sbb
and
add
bound
add
jp
xchg
ret
add
hlt
push
add
lock
aad
clc
out
mov
clc
sub
clc
cmp
xor
add
cs
clc
in
mov
jo
add
mov
add
add
mov
jnp
lods
ja
rcll
sahf
cmp
push
add
sub
clc
sub
ljmp
add
es
clc
loope
mov
push
jge
add
fs
mov
adc
push
ret
clc
sbb
add
clc
mov
neg
cltd
enter
clc
in
jae
add
sar
add
pusha
add
cld
mov
in
pop
sub
or
clc
xchg
jbe
pushf
jb
add
inc
clc
pushl
fwait
xchg
jecxz
scas
pop
test
mov
add
pop
enter
adc
add
shr
idivb
push
ss
add
xor
add
mov
clc
cmp
add
sub
push
add
lock
sub
fstp
xchg
adc
add
add
add
sbb
clc
pop
imul
pop
sub
dec
aad
pusha
add
sahf
add
add
clc
or
clc
cmp
add
lret
mov
add
sti
into
adc
add
clc
push
jo
add
add
pusha
add
add
add
out
das
xor
leave
icebp
adc
add
int3
jmp
adc
add
clc
clc
iret
jecxz
sbb
pushf
shl
clc
jmp
fildll
mov
mov
push
add
jge
clc
mov
scas
movd
cs
jle
imulb
sub
clc
ret
cmc
test
push
or
clc
lret
in
pusha
add
imul
add
pop
ret
jp
scas
mov
add
loop
mov
add
inc
clc
add
add
jg
mov
add
adc
movsl
clc
pop
loopne
popa
add
xbegin
dec
jns
and
xchg
mov
adc
add
add
xlat
mov
clc
fdivl
add
add
add
inc
clc
jmp
add
addr16
xlat
int
repz
add
adc
mov
cmc
fwait
add
add
lret
iret
aad
pop
mov
mov
jge
or
add
add
add
shrb
clc
xor
add
rcll
clc
ret
cmp
sbb
push
inc
clc
outsl
daa
clc
pushf
dec
inc
clc
arpl
add
clc
shrl
leave
stos
sar
push
inc
add
sar
cmpsb
clc
xchg
lret
clc
cmp
pop
clc
cli
push
shlb
clc
out
sub
add
cmp
jb
add
add
inc
clc
xchg
xlat
outsb
iret
and
add
out
xlat
sbb
clc
out
xchg
mov
das
leave
sbb
int3
xchg
push
xchg
ret
or
add
mov
pop
jo
add
add
pop
test
daa
clc
lret
enter
inc
clc
cltd
sub
add
mov
clc
clc
loop
push
repz
daa
clc
pop
mov
clc
add
add
push
add
sbb
clc
mov
clc
inc
add
xchg
xbegin
loop
xchg
cs
xor
inc
clc
mov
cwtl
std
nop
jmp
clc
enter
add
clc
or
add
lods
gs
cmp
push
clc
test
fdivrs
pop
cmpsl
clc
inc
add
inc
add
adc
bound
add
clc
imul
and
add
add
cmpsb
clc
jb
add
sbb
sub
add
das
push
sub
clc
cli
movsb
clc
mov
clc
xabort
dec
ss
shll
pop
jmp
clc
xchg
jecxz
fldl
clc
cmp
xchg
pop
lods
push
scas
mov
ret
clc
dec
jbe
mov
clc
pop
pop
sbb
add
jbe
outsb
push
add
add
out
push
fsubp
clc
sbb
clc
adc
add
add
add
clc
scas
pop
and
add
loope
xbegin
xor
add
cmp
clc
scas
enter
mov
lret
dec
or
leave
fnstsw
std
notl
jae
add
clc
mov
inc
clc
lret
add
sarb
clc
cwtl
inc
add
lret
scas
pop
jns
clc
xchg
fsubs
clc
in
popa
add
jae
add
clc
dec
notl
add
pop
jmp
sar
xchg
iret
inc
add
cld
inc
clc
mov
xchg
jge
clc
call
fwait
lcall
xchg
sub
imul
fdivrp
jecxz
push
jl
mov
iret
or
xchg
dec
cmp
add
jg
ficompl
movsb
clc
cmp
das
icebp
add
add
add
push
lods
lcall
or
mov
cmp
pop
es
push
add
data16
xchg
test
lcall
clc
call
pop
sbb
clc
ja
sti
push
add
in
mov
jnp
mov
clc
ljmp
mov
clc
shrl
inc
add
mov
sub
add
add
mov
clc
cwtl
sti
inc
add
imul
movsl
clc
insl
add
add
fldlg2
mov
mov
jnp
nop
stos
dec
xor
out
pop
clc
sahf
insb
int3
mov
add
add
inc
add
data16
vcvtdq2ps
in
jmp
push
clc
adc
add
sub
lods
stc
in
xchg
jns
xchg
out
or
add
movsl
clc
aas
adc
cmp
clc
outsb
call
add
mov
pop
mov
loope
int3
in
nop
fs
cmp
clc
xabort
lret
sbb
mov
xchg
jae
add
scas
xchg
test
xchg
cmp
scas
lcall
lcall
pop
or
add
adc
add
pop
clc
and
jmp
add
push
jo
add
add
call
daa
clc
xchg
xchg
inc
clc
loope
nop
jecxz
in
aad
clc
mov
insb
or
out
and
dec
fs
add
add
rcll
add
imul
sub
rcll
add
add
pop
mov
cmp
in
call
push
jo
add
jge
clc
jns
inc
clc
sbb
push
jge
sar
dec
sub
add
clc
jle
clc
test
mov
call
add
mov
insb
add
adc
add
add
push
clc
sub
clc
iret
mov
cmp
jecxz
cld
movsl
clc
sub
xchg
push
add
loop
inc
add
pop
mov
jl
sarl
cmc
out
in
mov
pusha
add
and
add
pop
inc
clc
rorl
clc
rolb
fmull
into
into
in
sub
stos
mov
dec
sar
clc
cmp
clc
stos
or
rclb
clc
aas
scas
mov
jmp
clc
fldl
add
aas
insl
xchg
insb
dec
sub
xchg
clc
sbb
clc
hlt
popf
xchg
int3
jae
add
mov
add
clc
xchg
scas
inc
clc
inc
clc
addr16
push
clc
mov
pop
lret
or
add
ljmp
add
adc
add
add
mov
push
add
cmc
lods
xchg
add
add
fdivrl
cmp
clc
mov
cs
add
add
es
sub
mov
clc
xchg
add
add
pop
je
ffreep
clc
leave
mov
jl
add
inc
clc
clc
aaa
mov
jp
sti
xchg
jae
add
add
dec
call
and
and
add
push
ss
push
add
inc
clc
or
aam
sbb
mov
aaa
int3
lahf
test
add
add
jnp
push
add
cmp
mov
cmp
mov
gs
jno
add
ljmp
pop
dec
inc
clc
xchg
pop
xor
sarl
inc
clc
xchg
jno
add
mov
clc
repnz
inc
clc
imul
mov
or
add
push
fists
sub
cli
fimuls
clc
sbb
add
pop
clc
mov
adc
add
aaa
adc
sub
add
sbb
lahf
imul
push
mov
insb
jns
pop
sbb
data16
hlt
test
cs
and
add
repz
clc
mov
jecxz
pop
add
in
sahf
out
popa
add
negl
sbb
add
inc
add
fbld
mov
clc
std
and
add
int3
jb
add
in
clc
inc
add
push
push
push
add
add
outsl
jbe
addr16
rorb
clc
jae
add
unpcklps
je
icebp
mov
cld
cmc
fldl
pop
lahf
pushf
cmp
aas
loopne
add
add
cmp
aad
cmp
test
add
mov
sarl
sahf
pop
clc
xchg
sarb
insl
or
pop
pop
aaa
repnz
add
inc
add
fisttpl
sbb
add
and
add
clc
mov
and
mov
bound
add
clc
mov
clc
dec
lods
mov
out
jle
inc
add
mov
in
cmp
aam
clc
push
add
sub
loope
movsl
clc
or
clc
outsl
adc
add
and
add
nop
ja
clc
mov
pusha
add
and
add
clc
sbb
add
xchg
sub
clc
roll
push
ret
clc
mov
clc
jae
add
add
shlb
add
dec
test
and
add
clc
xabort
add
push
loopne
stos
inc
add
pop
jge
mov
push
sahf
mov
add
and
add
popf
ljmp
popf
lcall
add
iret
movsl
clc
in
add
add
aaa
push
pop
xchg
lret
nop
mov
mov
xchg
xchg
fbld
and
add
dec
leave
clc
sbb
sar
call
sbb
clc
insb
arpl
add
cwtl
xor
add
pop
cmc
popa
add
pop
mov
imul
mov
or
add
add
shlb
mov
add
test
cmpsb
clc
ja
clc
and
add
stc
sar
clc
jne
clc
cmp
cmp
fcmovnbe
fcoml
aas
lods
xlat
xchg
push
add
mov
sbb
or
imul
add
aad
add
ja
clc
or
add
or
add
rolb
add
fwait
push
jge
es
imul
and
add
add
xlat
lock
lcall
fidivl
das
or
clc
outsb
cld
mov
imul
clc
dec
inc
add
ss
and
add
cmp
sub
push
add
jb
add
clc
mov
out
sti
or
add
sti
cli
aad
clc
mov
add
jo
add
clc
cli
jmp
clc
imul
in
movsl
clc
mov
add
test
xor
scas
out
adc
add
clc
xchg
ret
clc
in
clc
xchg
lret
add
cmp
mov
inc
add
pop
sbb
add
clc
pop
ljmp
push
add
rcrl
ds
mov
and
add
add
sbb
nop
in
test
pop
push
add
in
mov
clc
data16
into
push
jbe
sbb
es
xchg
aaa
lret
pusha
add
ror
das
xor
add
add
cmpsl
clc
inc
clc
dec
in
std
daa
clc
sub
add
pop
mov
add
push
icebp
int3
sti
jae
add
popa
add
add
add
clc
mov
add
scas
push
pop
clc
adc
add
gs
std
out
fwait
push
negb
pop
jl
fcmovnu
xchg
data16
pop
push
clc
or
clc
aaa
push
add
std
xchg
mov
fisubrs
add
adc
mov
push
shlb
sbb
add
clc
push
add
aaa
ljmp
add
repnz
add
push
clc
mov
jo
add
clc
xchg
push
clc
xor
add
add
fcomi
stc
mov
clc
add
add
add
insl
cmp
clc
ficompl
add
insl
fs
jle
mov
stos
pop
cmpsb
clc
jns
clc
jae
add
and
inc
clc
in
out
test
inc
add
clc
push
add
fmuls
pop
mov
clc
jbe
push
add
cmp
clc
pop
inc
clc
xor
add
inc
clc
adc
add
clc
pop
ret
cwtl
movsb
clc
in
push
add
sub
add
in
and
add
add
add
hlt
cmp
test
cmpsb
clc
mov
xor
clc
es
je
sar
mov
jae
add
test
xabort
mov
pop
sbb
add
lods
shlb
add
int
lret
jp
add
jmp
stos
jnp
mov
add
cmp
push
repz
add
clc
popa
add
inc
add
jg
clc
call
clc
std
ljmp
push
gs
fwait
xchg
lret
pop
imul
push
clc
xchg
aas
inc
add
sbb
add
pop
cwtl
loop
push
add
sarl
loop
push
add
add
add
lahf
push
ds
je
loope
mov
add
add
jns
add
mull
lods
or
jae
add
add
inc
clc
pop
sub
lcall
clc
sti
aam
clc
inc
clc
pop
iret
leave
pop
lock
add
lcall
dec
xor
add
es
or
clc
rol
clc
push
repnz
add
call
clc
xchg
mov
cltd
leave
sahf
add
add
and
add
iret
repz
leave
mov
leave
mov
clc
xchg
pop
clc
lods
aad
add
mov
add
mov
add
adc
add
push
ss
out
and
add
jg
imul
add
jo
add
js
pop
insl
sbb
int
add
ds
gs
roll
xchg
inc
add
test
clc
pushf
lods
and
add
ja
add
xchg
inc
clc
stos
pop
clc
xchg
sub
gs
and
lock
outsl
std
imul
add
add
inc
clc
call
mov
add
data16
push
or
mov
pop
pop
pop
clc
push
shlb
add
lods
cmp
ret
clc
dec
std
and
add
fisubs
ja
clc
push
pop
clc
jge
mov
add
xor
add
mov
mov
add
mov
ret
clc
or
add
mov
and
add
jecxz
push
clc
addr16
xor
clc
sub
addr16
pushf
sbb
clc
pop
sub
push
add
xor
lods
sbb
inc
clc
ret
clc
ficomps
push
clc
insb
fisttpl
clc
xchg
mov
notl
add
cmp
add
dec
push
add
imul
clc
xchg
mov
add
jle
sbb
clc
or
pushf
xchg
pop
test
pop
cmp
clc
rorb
xchg
jle
add
movsl
clc
add
gs
lcall
xchg
fsubl
jg
add
add
add
inc
add
mov
clc
fs
pop
xor
cmp
add
pop
cld
cmc
pop
aad
imul
clc
ljmp
add
inc
clc
adc
add
stos
push
add
push
add
mov
jns
clc
sub
clc
or
clc
adc
add
scas
loope,pt
adc
add
xchg
push
xchg
sbb
clc
rcrb
pop
xchg
clc
enter
ret
clc
sub
clc
inc
add
add
add
pop
pop
pusha
add
pop
in
mov
scas
inc
clc
aad
add
or
fidivrs
in
sbb
jno
add
nop
xchg
dec
add
fs
jg
clc
cmp
clc
mov
mov
aas
pop
je
fists
add
dec
iret
js
stc
add
add
into
outsb
jg
add
ret
clc
stos
scas
add
leave
aaa
cmp
ficoms
mov
pop
roll
add
sub
clc
stc
mov
add
mov
sarb
fxch
mov
or
clc
stos
test
push
ljmp
gs
mov
add
or
jnp
add
lret
clc
inc
clc
into
cmp
inc
add
loope
push
mov
add
notb
hlt
jecxz
jns
clc
cli
xlat
fistps
add
imul
clc
mov
and
add
add
add
xor
add
mov
clc
mov
add
add
negb
cmp
stos
jnp,pt
add
jne
inc
clc
je
clc
jns
adc
add
popf
push
clc
aaa
stc
rcrb
ljmp
adc
add
mov
inc
clc
mov
notl
stos
or
or
shrd
add
push
dec
scas
cmp
clc
jle
icebp
xlat
mov
bound
add
add
sub
sti
push
add
fisttps
loopne
sarl
jbe
add
xor
xchg
pop
iret
dec
inc
clc
loopne
pushf
xor
add
out
enter
sbb
daa
clc
and
add
xchg
shr
xor
dec
scas
jge
mov
clc
and
add
dec
inc
clc
adc
add
cld
xchg
ss
out
mov
movsl
clc
sub
sti
mov
xor
add
add
clc
jecxz
clc
adc
add
jmp
clc
ret
xbegin
clc
pop
iret
push
add
inc
add
insl
scas
cltd
xlat
cwtl
in
jno
add
fidivs
add
xchg
jae
add
xchg
scas
cmp
add
sbb
fucomp
push
add
sbb
clc
ds
mov
clc
or
sti
icebp
js
inc
add
cmp
jp
cmp
insl
mov
jecxz
fnstenv
add
iret
inc
add
rolb
add
or
mov
mov
and
add
ret
adc
add
inc
clc
mov
test
push
jnp
ret
add
xor
or
clc
bound
add
dec
jp
not
xor
add
loop
ljmp
adc
add
sbb
cwtl
push
cmp
sar
loope
fistpll
mov
clc
adc
add
popa
add
mov
jle
daa
clc
push
add
idivl
data16
xbegin
test
lock
add
add
xchg
sbb
mov
sar
xbegin
fs
movsb
clc
push
mov
inc
clc
mov
add
lahf
sbb
add
aas
mov
fdivrl
movsb
clc
cltd
cwtl
mov
clc
out
int3
mov
inc
clc
xchg
jb
add
add
fdiv
lahf
ds
xabort
popf
movsl
clc
inc
clc
or
mov
clc
imul
clc
lods
jnp
mov
xchg
sbb
mov
add
pop
addr16
push
add
sub
push
clc
cwtl
xchg
dec
mov
clc
mov
jno
add
push
add
xchg
nop
scas
pop
cmc
std
xchg
es
mov
fcmovu
pop
das
data16
pop
clc
sub
add
and
add
cmp
add
add
clc
mov
push
add
movsl
clc
cmp
clc
fmuls
insb
sub
clc
mov
xchg
in
inc
clc
je
add
jo
add
clc
pop
sbb
clc
dec
mov
clc
out
in
imul
mov
mov
cmp
mov
add
add
add
arpl
add
fistpl
sub
add
mov
pop
or
inc
add
jecxz
sub
add
ds
add
imul
xchg
and
stos
mov
clc
into
es
sar
xor
add
xor
add
add
gs
xchg
fnop
arpl
add
loopne
adc
add
xabort
imul
imul
out
mov
clc
sub
add
jb
add
mov
jle
add
fwait
jge
mov
lret
cmc
mov
mov
cmp
sub
pop
mov
clc
mov
data16
mov
clc
or
mov
push
add
jecxz
adc
add
shl
inc
clc
int3
cltd
iret
lahf
cmp
push
xchg
mov
mov
add
jmp
stos
cmpsb
clc
cltd
cmp
leave
pusha
add
mov
rolb
clc
pop
movq
add
add
popf
mov
hlt
popa
add
dec
inc
clc
jle
sub
xor
add
jb
add
stos
insl
dec
xchg
fs
mov
jmp
add
dec
xor
add
clc
inc
add
fs
push
add
pop
jl
clc
pop
outsb
dec
sar
push
sub
fdivl
dec
dec
jle
es
das
lret
add
add
addr16
push
scas
inc
add
push
push
clc
mov
mov
not
pusha
add
push
nop
popa
add
std
mov
clc
and
add
clc
jnp
pop
xor
loopne
lret
pushf
pop
jbe
mov
clc
pop
clc
inc
add
or
clc
fwait
in
loopne
mov
fdivrl
xor
scas
aas
repz
imul
clc
inc
clc
dec
test
pusha
add
dec
and
cmp
add
jne
in
xor
in
and
add
and
add
add
xor
xchg
push
add
sbb
inc
add
xchg
adc
add
frstor
add
rcr
cmp
and
in
test
test
mov
cmpsb
clc
negl
jnp
cmp
clc
sub
add
add
push
add
cli
cld
mov
clc
xor
clc
cmp
add
add
fstpl
shlb
rcrb
sti
jge
js
push
mov
outsl
cmp
pop
rdtsc
add
xlat
inc
clc
and
pop
clc
test
xchg
mov
xchg
mov
xchg
pop
xchg
jp
clc
xor
add
mov
xchg
mov
clc
add
gs
rcll
add
aam
and
ljmp
clc
loop
xlat
or
cmc
xchg
inc
add
mov
xchg
aad
clc
mov
fcmovbe
pop
clc
rclb
into
inc
clc
add
add
ja
add
addr16
loop
mov
pushf
push
xor
clc
or
clc
mov
add
push
xchg
mov
mov
pop
clc
pop
sub
clc
shl
clc
aad
enter
outsb
int
inc
clc
and
add
add
daa
clc
pop
cmpsb
clc
adc
add
clc
fs
jge
clc
push
clc
jbe
clc
mov
in
mov
call
mov
add
clc
xchg
inc
add
mov
sbb
add
push
clc
mov
nop
mov
clc
call
insl
mov
ret
cld
sar
outsb
xchg
mull
add
ds
cmc
out
xchg
fnsave
fs
shl
jge
mov
lock
mov
add
dec
in
test
fs
scas
imul
push
cmc
xchg
xchg
dec
lcall
push
add
add
add
add
lcall
clc
xbegin
clc
cs
mov
sti
xor
add
jg
add
insb
popf
xchg
sar
lret
clc
testb
in
mov
jbe
add
imul
cmp
sub
clc
adc
add
pop
mov
jne
cmp
stos
shrb
test
push
add
int3
pop
jo
add
ljmp
add
mov
dec
push
clc
pop
daa
clc
push
xor
add
jl
mov
repnz
adc
add
clc
fnsave
add
add
clc
add
add
push
jo
add
add
int3
mov
or
in
test
xor
add
add
add
add
add
pop
out
clc
cmp
mov
clc
sbb
xor
add
clc
pop
ret
clc
push
inc
add
jns
add
cld
sti
test
fsubr
cltd
lock
mov
add
xchg
and
add
xchg
cmp
mov
push
add
push
mov
clc
std
shrb
rcll
sti
roll
ret
clc
pop
xbegin
clc
dec
push
or
push
rcrl
clc
fyl2x
push
push
clc
ja
clc
addr16
ret
lret
sub
dec
xor
add
and
sbb
clc
push
add
repz
clc
or
movsl
clc
cmp
clc
sbb
pushf
pop
clc
mulb
and
add
add
lea
add
cmp
inc
clc
or
clc
mov
bound
add
ret
and
rcll
clc
adc
add
fcmovnu
push
jns
add
je
testl
pop
sub
adc
add
add
cmp
add
clc
jns
mov
js
cld
inc
clc
cli
fimuls
add
aas
lods
in
push
cmp
jne
add
repnz
out
sub
lahf
adc
add
jge
pop
daa
clc
adc
add
mov
and
add
clc
enter
in
mov
clc
arpl
add
add
push
and
add
dec
mov
clc
jle
clc
insb
mov
test
data16
rdtsc
add
mov
pop
xchg
pop
mov
add
jmp
push
or
rorl
iret
jecxz
fs
lret
inc
add
add
add
adc
add
lcall
aam
clc
jne
fwait
arpl
add
fstps
mov
dec
xchg
cld
fisubrs
add
add
add
stos
mov
clc
add
dec
insb
sti
mov
clc
pop
pushf
cltd
out
inc
clc
adc
add
in
loop
out
stos
js
es
mov
and
add
loope
in
dec
adc
add
clc
push
add
imul
cmp
jb
add
popf
ss
ficompl
aam
lahf
jmp
sbb
in
hlt
mov
add
xchg
jle
hlt
xchg
fisttpl
cmc
mulb
add
popf
and
add
or
clc
jle
clc
pop
clc
in
jae
add
rclb
loope
mov
cmp
clc
mov
cltd
dec
data16
and
add
pushf
push
pop
clc
arpl
add
xchg
xchg
or
xbegin
ja
add
dec
js
xor
clc
out
mov
jns
clc
xlat
dec
jb
add
add
ret
out
push
add
xchg
out
push
add
add
or
dec
push
pop
add
add
clc
das
cmp
je
fs
pop
push
add
and
add
clc
jp
mov
clc
lea
clc
cltd
mov
add
shll
or
ja
and
imul
scas
pop
aad
lock
scas
in
sahf
push
jp
add
add
add
add
clc
dec
mov
aas
xchg
lret
add
insb
lods
xor
add
pop
adc
add
stos
mov
addr16
lret
dec
xchg
aam
add
and
push
and
add
add
add
adc
add
imul
add
es
lret
popf
ja
add
scas
pop
mov
clc
sub
push
clc
bound
add
add
in
mov
clc
push
in
rorl
fcmovnb
clc
ss
clc
incl
add
add
add
clc
lods
lret
clc
stos
mov
add
add
add
cmp
aaa
add
inc
add
mov
testl
f2xm1
push
add
cmp
cs
clc
scas
divl
add
iret
pop
call
add
add
add
add
clc
std
cmp
clc
stos
pop
mov
clc
add
add
in
inc
clc
sbb
dec
or
cld
fwait
stos
dec
test
cmp
dec
data16
test
cmp
xor
add
add
test
add
jae
add
clc
xor
add
clc
movsl
clc
or
xchg
cmp
mov
add
add
mov
pop
mov
call
clc
pop
fwait
xor
add
add
push
icebp
push
pop
dec
iret
imul
xor
add
clc
mov
roll
mov
sub
std
stc
loope
jb
add
fs
insl
data16
jbe
add
stos
cmpsl
clc
xchg
dec
pop
push
dec
gs
add
add
nop
push
lcall
pop
mov
xchg
int
add
aas
nop
test
sbb
adc
loopne
nop
sar
xbegin
inc
add
test
add
sub
clc
pushf
call
cmp
add
lcall
add
lahf
cmp
loope
mov
add
clc
out
push
push
push
mov
clc
cmp
add
ficoms
fdivl
test
imul
lock
fldt
mov
cmp
add
add
clc
fwait
and
inc
clc
or
add
add
push
clc
jne
clc
int3
out
dec
mov
out
add
add
inc
add
mov
xor
add
xor
add
add
sete
cld
inc
clc
inc
clc
mov
add
mov
pop
sar
add
push
icebp
enter
mov
inc
add
testl
add
cmp
into
jae
add
add
mov
sub
cltd
mov
jg
clc
lock
add
sahf
xor
add
mov
clc
or
clc
inc
clc
jp
icebp
add
add
add
add
pop
add
add
mov
adc
add
xor
add
clc
push
imul
sbb
clc
sub
jle
ja
inc
add
dec
push
jge
mov
add
add
test
dec
mov
clc
mov
pop
fcomip
pop
clc
std
shll
add
dec
xor
add
icebp
xor
add
clc
loopne
add
xor
dec
adc
clc
inc
add
mov
dec
roll
add
fildll
adc
add
fstl
xor
add
clc
jp
clc
or
add
xchg
stos
mov
in
mov
add
sbb
pusha
add
jne
push
mov
jmp
clc
mov
inc
add
dec
cmp
add
push
add
popa
add
xchg
fcoml
push
jle
cs
cwtl
in
insb
cmp
mov
rorb
dec
add
add
clc
cmp
add
in
or
push
add
scas
enter
ljmp
clc
inc
add
inc
add
push
movsb
clc
jle
pop
clc
repnz
add
add
loope
xor
add
add
add
add
jg
pop
inc
add
add
add
add
cmp
jmp
repnz
mov
sahf
hlt
push
mov
jne
dec
inc
clc
sar
clc
jge
leave
and
add
add
or
clc
ds
inc
add
xchg
cmp
mov
add
xor
add
sar
xor
add
clc
icebp
cmpsb
clc
fsubrl
data16
jl
mov
add
clc
push
clc
lcall
pop
jle
repnz
imul
dec
push
lret
fsub
clc
hlt
sbb
add
sti
xchg
mov
pop
scas
xchg
push
in
pop
cli
sti
out
mov
and
add
add
insl
scas
arpl
add
pop
fstl
mov
into
negb
add
adc
add
push
clc
mov
add
outsb
rolb
add
clc
cmp
inc
add
int3
hlt
ret
clc
loop
test
push
mov
add
clc
mov
stos
push
add
xchg
sbb
hlt
sub
add
rcl
jp
pop
adc
add
and
add
mov
cmc
std
sub
clc
fcmovnbe
push
add
pop
jb,pt
add
dec
and
add
sub
mov
pop
pop
add
add
into
es
mov
push
scas
shll
clc
cmp
add
rorb
clc
pop
cmp
jecxz
jle
clc
or
add
add
add
mov
jne
and
add
daa
clc
jns
mov
add
imul
sub
jbe
clc
jp
sar
hlt
or
insl
mov
clc
test
add
data16
jp
hlt
jp
jg
stos
loopne
faddl
add
add
add
in
mov
xor
add
mov
daa
clc
lret
clc
cwtl
and
add
clc
xchg
xchg
aam
add
mov
mov
repnz
cmc
iret
fildll
mov
cmp
cli
and
add
mov
mov
sbb
push
xor
imul
stos
push
cmc
pop
and
add
and
add
sub
rorb
add
jnp
popf
fwait
sti
seta
shlb
inc
add
sar
idiv
dec
adc
add
jp
clc
cs
leave
sbb
clc
clc
lret
mov
cmp
bound
add
ror
inc
add
push
sahf
jmp
pop
cmpps
mov
clc
sub
add
cmp
mov
mov
push
add
xchg
aaa
scas
ret
repnz
clc
jle
in
dec
divb
add
clc
push
add
cltd
jmp
add
dec
add
add
clc
pusha
add
outsl
sbb
dec
repnz
cmp
add
out
jmp
add
jb
add
mov
fs
sub
add
xchg
lock
jge
add
add
sahf
icebp
mov
clc
out
leave
fs
fisubrl
sub
clc
fnstcw
mov
es
repnz
pop
jb
add
pop
pop
sub
xchg
cmp
pop
mov
clc
test
movsl
clc
adc
add
lods
stc
push
pushf
in
insl
mov
js
mov
cmp
pop
xchg
icebp
lahf
xchg
ljmp
clc
in
xchg
mov
gs
cwtl
xlat
mov
add
aaa
jnp
add
mov
sbb
clc
xchg
shl
jl
imul
pop
add
add
add
add
clc
and
add
jg
aam
dec
scas
pop
sub
movsl
clc
repnz
add
pop
test
cmpsb
clc
dec
mov
pusha
add
mov
ja
out
test
hlt
mov
repz
clc
ret
add
out
push
xabort
sarb
clc
pop
popa
add
jns
sub
ret
clc
out
mov
aad
jo
add
add
bound
add
repz
leave
cmp
mov
mov
scas
push
dec
fidivrs
adc
add
xor
cmp
cmc
add
add
lahf
xchg
leave
and
add
pop
adc
add
mov
or
clc
mov
xchg
mov
cmp
clc
das
or
outsb
sbb
add
xchg
rorb
clc
sub
test
mov
jo
add
push
add
jmp
add
test
add
add
lcall
add
jae
add
and
in
out
mov
repnz
xor
add
nop
jl
clc
mov
add
repnz
clc
xor
add
clc
pop
fisubl
sbb
int3
push
cs
data16
inc
add
pop
call
in
or
jbe
jne
clc
sub
mov
cmp
mov
mov
cmp
popf
push
sar
cli
vandps
clc
das
push
clc
sar
xchg
imul
adc
add
add
push
add
std
scas
dec
in
cmp
js
stc
mov
push
clc
sar
cltd
ret
movsl
clc
and
out
shll
cmp
add
fwait
xabort
fists
pop
cmp
sub
cmp
or
outsb
push
sbb
add
add
push
clc
leave
out
idivb
popa
add
test
xor
add
fbld
add
clc
inc
add
sub
repz
add
clc
mov
clc
adc
push
add
outsb
push
bnd
in
pop
xchg
outsb
inc
add
popl
add
or
mov
cltd
addr16
mov
clc
and
add
add
insb
lock
add
popa
add
jb
add
lcall
xchg
in
mov
add
inc
clc
sar
cmp
add
icebp
out
int3
cmpsb
clc
fcompl
jb
add
inc
add
mov
xchg
loopne
cwtl
and
add
xchg
jbe
inc
add
bound
add
lret
cwtl
test
cmp
add
add
add
cli
pop
adc
clc
fstl
add
lea
push
add
jle
dec
cmovns
clc
xchg
adc
add
lods
mov
clc
mov
add
sar
or
clc
das
xchg
mov
clc
or
lock
fwait
mov
mov
clc
test
movsb
clc
xchg
mov
jnp
lret
lahf
je
lods
aaa
int
and
add
add
std
ds
inc
clc
jle
loope
xchg
xbegin
lods
mov
add
add
add
push
jecxz
cli
cmp
clc
xor
add
clc
fists
mov
js
clc
inc
add
inc
add
mov
clc
add
add
inc
add
push
add
jl
cwtl
out
inc
add
in
fs
std
pop
and
add
mov
xchg
pusha
add
das
lcall
cmp
lea
add
sbb
add
xor
add
sbb
clc
xchg
sbb
add
clc
popf
call
sar
icebp
or
add
add
clc
xor
add
add
add
out
rclb
add
mov
clc
nop
cmp
test
insl
cmp
jbe
xor
add
sti
pop
sar
clc
ficoms
clc
jge
in
fmuls
shll
add
iret
icebp
pop
lods
jo
add
add
clc
mov
add
and
add
jmp
add
inc
add
xor
movsl
clc
aaa
sbb
into
xchg
ss
aad
pop
lock
shrl
clc
sbb
push
ja
std
insb
ret
clc
push
add
clc
jae
add
add
add
jmp
cmc
es
inc
clc
cmp
add
mov
add
pop
fdivl
add
push
clc
dec
mov
enter
mov
sub
cli
lret
scas
enter
mov
clc
xchg
aam
clc
xor
pop
xchg
scas
cmp
das
xchg
lods
cmp
add
adc
add
fld
clc
cld
sub
pusha
add
in
jmp
cmp
clc
xlat
xchg
gs
lcall
out
mov
jae
add
and
add
or
push
mov
in
xchg
dec
add
push
cmc
jge
movsl
clc
clc
adc
arpl
add
insb
je
clc
pop
mov
jb
add
faddl
dec
mov
clc
xchg
jmp
or
sbb
mov
add
adc
add
in
xor
add
sub
add
out
stc
mov
adc
clc
mov
insb
rclb
insb
cmp
vunpcklps
in
aaa
push
lret
add
clc
push
outsb
xor
add
clc
stc
loope
cmp
fiadds
pop
fidivrl
add
test
cmp
xchg
rorb
cwtl
clc
daa
clc
icebp
jno
add
clc
jo
add
mov
dec
arpl
add
dec
pop
int3
lret
adc
add
add
and
add
cwtl
mov
insl
mov
add
mulb
dec
pop
cmp
out
pop
cmp
dec
scas
inc
clc
and
xor
add
clc
test
outsl
or
add
add
add
add
xchg
nop
and
add
ret
sub
out
dec
mov
clc
sbb
or
add
add
clc
mov
mov
add
add
add
push
jg
popa
add
fcmove
dec
mov
in
mov
push
sbb
add
js
clc
mov
add
xor
add
add
jno
add
sub
inc
clc
roll
aad
clc
aaa
mov
or
inc
add
cmp
clc
and
jge
add
push
add
sbb
adc
clc
inc
clc
mov
ljmp
add
xchg
push
sub
repnz
add
mov
insl
sar
outsb
movsl
clc
mov
clc
xor
add
add
add
clc
iret
in
xchg
mov
clc
bound
add
dec
clc
mov
and
add
clc
push
lret
enter
add
scas
mov
mov
push
cmp
add
sti
mov
clc
stos
out
mov
add
add
add
sub
lods
fcompl
add
xchg
js
add
and
cmp
faddl
add
fcoml
add
jbe
out
jno
add
sub
mov
jns
dec
pop
push
clc
cmp
lods
sub
fstpl
xor
add
xor
add
or
mov
add
mov
add
add
jle
clc
cld
cmp
clc
aas
je
adc
add
add
mov
mov
add
iret
cltd
arpl
add
add
xor
add
add
xlat
loope
adc
add
sbb
add
in
cmpsl
clc
inc
add
cmp
cmp
add
leave
inc
add
push
je
xor
mov
repz
add
insb
cld
ret
clc
mov
loope
add
add
add
xchg
loopne
aad
cmp
clc
cli
testb
add
jno
add
add
lods
cmpsb
clc
dec
gs
push
clc
push
lcall
push
or
in
push
add
push
adc
add
or
add
add
add
clc
stc
inc
clc
mov
pop
clc
mov
add
inc
add
mov
gs
xor
or
clc
or
add
lret
pop
push
add
and
add
test
sub
clc
sar
clc
mov
clc
clc
push
add
cmp
cli
sub
inc
add
daa
clc
fistps
popf
pushf
cmp
clc
lcall
jae
add
clc
insb
xchg
cs
add
add
add
add
add
add
add
inc
clc
jmp
clc
stos
testl
add
push
fnstenv
cli
ret
dec
xchg
xchg
or
clc
pop
loopne
dec
cmp
dec
lods
arpl
add
dec
add
add
daa
clc
inc
add
jge
clc
mov
cmp
clc
xchg
push
add
lods
out
push
clc
or
jne
scas
addr16
or
clc
bound
add
clc
and
add
add
mov
cmp
insb
test
push
add
stos
push
push
clc
out
fdivl
cmp
clc
inc
clc
movsl
clc
xchg
loope
add
add
mov
test
jge
in
dec
and
add
add
lock
mov
mov
bound
add
xchg
fsubr
out
into
adc
add
in
dec
dec
pop
hlt
hlt
nop
jl
jnp
add
and
pop
aaa
test
xchg
mov
xlat
stos
popf
dec
dec
test
add
or
cmp
jb
add
add
clc
mov
clc
addr16
test
lock
add
sub
mov
idivl
sbb
imul
add
scas
and
add
push
mov
sbb
jle
pop
push
add
add
sti
cmp
add
sbb
add
clc
jns
fadds
add
dec
rclb
add
testl
push
cmc
sbb
cld
or
xor
jnp
icebp
arpl
add
add
insb
cmp
in
pusha
add
add
add
inc
add
and
xchg
mov
clc
push
sar
clc
inc
add
adc
add
jg
shll
add
jns
add
inc
add
xor
jns
add
add
push
jge
loop
cmc
clc
imul
nop
sti
fsubrs
lea
sbb
add
cmp
dec
cmp
clc
add
add
gs
mov
add
fidivrl
cmp
add
clc
mov
add
cli
stc
data16
ret
call
js
add
mov
add
dec
test
aaa
loop
sub
add
push
adc
add
or
in
or
clc
call
add
int3
or
das
push
add
ds
clc
cltd
lret
jmp
pop
sub
clc
push
clc
pusha
add
dec
fcmovne
je
imul
lret
mov
add
or
add
clc
shlb
out
out
push
mov
jle
nop
lahf
imull
dec
jbe
insl
xlat
xchg
fisttpl
add
jmp
clc
in
dec
mov
push
mov
add
int3
jg
sbb
clc
pop
dec
fdivrl
clc
loop
adc
add
ja
into
xor
add
fs
mov
mov
fcom
daa
clc
lods
or
clc
and
std
popf
jp
inc
add
pop
dec
dec
bound
add
clc
adc
clc
sbb
dec
adc
add
clc
fiaddl
clc
sar
in
test
clc
lret
faddl
add
nop
addr16
fsts
clc
rcrb
dec
shr
mov
popf
pop
clc
mov
sahf
imul
cld
in
mov
add
mov
xchg
aaa
mov
leave
aaa
mov
daa
clc
sbb
movsl
clc
mov
ljmp
jo
add
add
jmp
push
add
loopne
popa
add
mov
clc
dec
loope
iret
test
and
add
jns
repz
testl
clc
rorb
and
add
mov
add
lods
pop
dec
insl
mov
adc
add
fnstenv
clc
cmp
add
push
or
add
fs
cmc
insl
jo
add
ldmxcsr
faddl
add
xor
add
scas
mov
fwait
jbe
clc
mov
xchg
fwait
mov
clc
jmp
icebp
sahf
add
add
xbegin
clc
fstl
cmpsb
clc
adc
jns
movsb
clc
popf
dec
push
loop
xchg
scas
cmp
jo
add
add
add
add
clc
push
stos
mov
cmp
mov
add
int3
mov
clc
add
add
in
outsl
xor
clc
and
int
clc
inc
add
out
dec
out
rolb
add
in
jge
add
lahf
out
icebp
jp
test
add
add
add
add
popa
add
mov
xchg
fsubr
loop
ficomps
stc
pop
int3
cmpsl
clc
sbb
mov
inc
add
rolb
clc
aad
bound
add
test
add
inc
add
notl
add
scas
fisubl
divl
add
lock
iret
push
inc
add
push
add
or
add
adc
clc
call
clc
call
add
loop
sbb
arpl
add
movsl
clc
jno
add
add
inc
add
sub
add
test
loope
scas
nop
mov
or
clc
mov
xabort
std
fcompl
add
mov
ljmp
and
add
xchg
dec
adc
add
add
cltd
jnp
add
sbb
add
bnd
fs
aam
clc
clc
outsb
test
cmp
add
add
xor
daa
clc
cld
lock
adc
add
sbb
clc
lea
cmp
out
call
cmp
push
mov
push
add
scas
sar
add
jp
inc
add
out
in
mov
mov
repnz
add
clc
adc
add
add
lret
fldcw
arpl
add
imul
imul
lods
sar
clc
xor
or
add
iret
outsl
sar
cld
add
add
add
mov
mov
or
add
clc
push
add
cmp
cli
rcrb
cmp
mov
add
iret
imul
jg
clc
cmp
clc
add
add
clc
xor
add
add
sbb
clc
outsl
mov
add
roll
add
mov
add
in
popa
add
in
sbb
add
add
clc
insl
mov
add
cli
cmp
mov
test
gs
add
push
adc
add
clc
sar
jae
add
clc
popf
lea
and
add
clc
or
clc
mov
mov
aaa
xchg
pusha
add
clc
mull
add
jge
decb
call
add
add
ljmp
add
imul
jg
clc
pop
gs
mov
sub
lods
ret
clc
inc
add
loopne
mov
add
popa
add
fistpl
pop
push
push
cmp
add
lods
movsl
clc
cmp
fisttpl
dec
inc
clc
fistps
clc
sub
sar
add
push
pop
adc
add
aad
xchg
xchg
inc
add
clc
pop
data16
clc
xor
add
inc
clc
adc
add
pop
loopne
pop
adc
add
cmpsl
clc
das
inc
clc
pop
aad
push
add
add
add
add
ljmp
xor
add
add
mov
or
addr16
dec
int3
xchg
fcomi
icebp
mov
clc
jge
sub
and
add
add
inc
add
xor
add
mov
clc
add
add
cwtl
ret
mov
in
xchg
out
movsb
clc
movsl
clc
jle
clc
push
add
inc
add
jmp
add
inc
clc
pop
xor
add
push
cmp
into
mov
gs
cmpsb
clc
fldcw
mov
in
inc
add
lock
gs
mov
clc
sbb
pop
test
aas
inc
add
mov
add
scas
mov
push
popf
out
js
clc
mov
cs
pop
add
add
aas
call
repnz
add
hlt
arpl
add
xchg
jne
add
pop
fdivrl
add
fdivrl
add
sub
insl
clc
leave
mov
mov
mov
add
clc
pop
inc
clc
outsl
test
movsb
clc
mov
push
mov
lods
pop
and
add
iret
ja
clc
jecxz
jg
test
mov
add
imul
dec
aam
clc
clc
js
dec
and
or
into
ja
pushf
pop
loope
and
add
or
outsb
outsl
clc
jno
add
xlat
sub
gs
fistl
out
outsb
lcall
pop
dec
jmp
pop
lcall
add
pop
gs
dec
movsl
clc
scas
or
add
add
fstpl
add
icebp
push
mov
inc
add
and
add
add
cwtl
pop
pop
lods
jecxz
es
push
lock
cli
cmc
push
gs
or
add
add
lahf
mov
call
cmp
xchg
scas
test
clc
xchg
push
add
lret
rclb
add
jnp
pop
mov
push
mov
and
add
add
add
push
jns,pn
outsb
add
dec
xabort
out
lods
inc
clc
pop
clc
mov
jmp
mov
or
clc
mov
clc
mov
pop
es
sbb
sar
push
add
movsl
clc
sar
dec
mov
sbb
clc
pop
push
clc
out
jno
add
clc
repz
add
or
add
cmp
clc
fnsave
add
push
add
sahf
fwait
cmp
or
add
aam
sbb
jmp
xchg
xor
add
mov
clc
pop
sahf
xchg
sarl
mov
test
dec
mov
jo
add
add
sub
add
jg
add
mov
fisubs
add
sar
je
cmp
fstps
clc
cmc
ret
pop
es
mov
clc
xbegin
xor
jge
add
mov
add
mulb
add
jns
sbb
add
xor
add
xor
add
inc
clc
dec
dec
sbb
aaa
adc
aad
mov
clc
mov
stos
xor
hlt
or
fisubl
call
mov
hlt
add
add
fs
push
add
bound
add
push
xchg
sti
aam
and
add
clc
mov
clc
jmp
mov
stos
push
mov
dec
std
add
pop
sub
add
jne
or
add
lock
lods
or
add
cmp
add
dec
movsl
clc
ds
clc
xor
add
out
mov
sar
sub
cli
stc
fldenv
add
int3
xbegin
jmp
add
push
clc
sbb
jge
bound
add
add
cmp
add
dec
or
outsl
mov
add
pop
pop
and
add
cmp
outsl
xchg
repz
add
add
or
adc
clc
mov
mov
cmc
test
pop
imul
add
arpl
add
std
xor
add
scas
lock
add
in
fucomp
and
add
push
add
lahf
sbb
cmp
imul
js
add
lock
xlat
xchg
mov
push
add
jmp
clc
mov
clc
std
xchg
ret
clc
and
mov
add
add
add
add
dec
mov
add
adc
add
aad
movsl
clc
ljmp
clc
inc
add
inc
add
ljmp
clc
jmp
fs
mov
clc
aam
add
cmp
cmp
ds
add
sbb
ret
clc
jbe
sub
add
int3
sub
in
repnz
lods
dec
inc
add
mov
lret
lods
stos
and
push
fistpl
xchg
js
push
add
or
test
clc
pop
clc
mov
add
cmp
clc
jmp
sbb
and
add
clc
jg
add
sar
outsb
and
add
clc
aad
add
pop
inc
clc
or
mov
add
cs
into
fs
mov
das
sub
shrl
clc
rcrl
lock
mov
add
cld
mov
jo
add
xchg
pop
or
cwtl
push
add
jb
add
clc
out
test
sti
inc
clc
test
inc
clc
rolb
add
add
enter
clc
pop
xchg
cmp
push
add
stc
clc
mov
add
jno
add
clc
std
jns
aad
sbb
clc
clc
das
aam
clc
jge
lahf
dec
xchg
out
push
mov
clc
in
testb
scas
add
lcall
clc
fisubs
add
pushf
arpl
add
aam
add
jo
add
sub
clc
pop
xchg
pop
gs
imul
pop
xor
add
popa
add
dec
xchg
insl
xchg
outsl
or
sub
fxtract
repz
clc
sbb
fs
adc
ret
clc
enter
add
fcoml
sbb
incb
scas
or
add
xchg
es
lahf
and
add
add
mov
add
cmp
inc
add
jae
add
clc
mov
rcr
and
add
add
clc
daa
clc
imul
add
adc
je
inc
add
jnp
shll
cmpsl
clc
push
imul
lods
std
icebp
loope
xchg
adc
add
inc
add
sub
pushf
mov
cmp
insl
es
xor
add
pushl
test
push
clc
ljmp
lcall
pop
ljmp
mov
add
in
xbegin
int
jecxz
icebp
fs
ja
scas
pop
and
add
out
cmp
clc
gs
sbb
add
jne
add
into
sbb
add
movsb
clc
add
add
add
add
stos
bound
add
add
inc
clc
enter
clc
pop
pop
push
and
add
clc
mov
mov
xchg
xor
movsl
clc
push
cmp
xchg
outsb
cmp
js
pop
xchg
mov
add
sbb
jo
add
clc
cmp
add
sbb
and
add
clc
adc
add
add
add
xor
add
iret
add
add
xchg
imul
jb
add
pop
notl
repz
pop
or
add
aaa
call
sbb
daa
clc
gs
inc
add
outsl
mov
lea
add
add
test
push
mov
xor
add
mov
clc
xchg
data16
aam
std
fisubrs
xchg
stos
mov
jbe
fs
push
add
popa
add
xchg
or
cmpsb
clc
insl
sub
mov
mov
fsubrl
ret
clc
mov
add
xabort
push
add
js
std
fs
mov
out
rcll
add
add
cmp
pop
clc
inc
add
adc
add
test
int
add
mov
fisubs
add
aam
inc
add
xchg
gs
dec
movsb
clc
sub
clc
jno
add
sub
push
xchg
aam
add
push
in
pop
mov
clc
mov
cmpsb
clc
inc
add
inc
clc
cmp
clc
clc
sub
inc
clc
jg
inc
clc
iret
jecxz
ss
in
sahf
xchg
pop
xchg
sti
das
pop
stc
movsl
clc
cltd
dec
loope
stos
mov
clc
fistpll
mov
outsb
jmp
data16
addr16
stc
adc
add
xchg
dec
push
mov
and
add
dec
jo
add
add
es
cmpsl
clc
adc
add
clc
add
add
clc
lcall
leave
or
add
in
mov
clc
ljmp
test
clc
in
test
scas
adc
add
xchg
fidivrs
sbb
ds
cmp
clc
lea
clc
mov
scas
push
add
add
add
fs
mov
pop
iret
sbb
repnz
add
jbe
jo
add
clc
pop
inc
add
sbb
add
fdivrl
add
push
or
and
add
clc
je
es
mov
add
add
add
adc
add
add
push
add
jnp
push
add
sub
loopne
mov
clc
aaa
mov
push
ljmp
add
push
mov
sub
call
stc
add
add
mov
add
out
lods
xor
add
clc
divl
add
ss
xchg
pop
cmpsl
clc
adc
add
lret
lcall
xor
add
clc
jno
add
add
cmp
sar
sbb
mov
pmuludq
cs
jns
add
inc
clc
dec
cmp
test
jns
add
mov
test
adc
add
out
stc
add
fwait
dec
add
add
clc
push
push
adc
rorl
clc
add
adc
clc
iret
mov
insb
pop
sub
add
mov
clc
xchg
xchg
add
add
inc
clc
mov
clc
test
in
push
add
lods
dec
xlat
iret
out
loopne
dec
outsl
mov
push
add
mov
cmp
das
sbb
mov
mov
clc
int3
roll
add
lods
xchg
test
dec
mov
sti
enter
movups
add
mov
add
add
cmp
out
mov
out
push
add
mov
sar
sahf
mov
clc
mov
pop
scas
lods
jae
add
clc
xor
adc
add
add
fstp
inc
clc
stc
clc
pop
clc
ficoml
mov
sarl
push
add
int3
out
xor
add
add
or
add
int3
and
mov
add
jge
pop
xchg
cld
bound
add
cmp
push
mov
add
adc
int3
cmc
mov
add
and
add
int3
cmc
int3
inc
add
in
add
add
or
clc
inc
clc
jmp
je
push
jl
clc
mov
in
or
stos
cmpsb
clc
or
pop
cli
jbe
int
clc
mov
xor
add
add
sar
sub
push
cmpsb
clc
fdivl
add
add
sub
roll
add
fistpl
pop
and
add
push
lahf
pop
or
add
push
jle
mov
add
add
inc
clc
or
clc
sub
sub
dec
pushf
rorl
and
add
cli
ret
add
and
add
add
out
loopne
fidivrl
xchg
ljmp
cmp
clc
movsb
clc
in
pop
fdivl
jecxz
sub
aaa
mov
xor
add
add
loopne
xlat
cltd
fcmovu
fwait
inc
clc
cmp
add
fstl
xchg
test
lcall
clc
pop
into
mov
adc
daa
clc
or
sbb
dec
mov
or
data16
xor
add
or
push
outsb
mov
mov
add
cli
inc
clc
xor
add
es
mov
clc
jecxz
push
add
adc
add
push
aaa
xor
jge
and
add
clc
push
cmpsl
clc
inc
add
adc
push
add
div
cmp
add
xlat
cltd
cld
xchg
scas
into
jg
add
mov
gs
xor
add
add
sbb
clc
push
add
mov
clc
data16
clc
imul
mov
mov
sub
clc
filds
mov
test
add
not
lret
clc
jnp
aam
adc
clc
push
testl
sub
clc
scas
jge
pop
jle
mov
add
ss
mov
clc
cmc
mov
arpl
add
testb
push
mov
cmp
add
xor
popa
add
mov
add
cmp
clc
mov
lods
dec
popa
add
cmp
clc
pop
dec
movsb
clc
scas
or
pop
loope
mov
add
add
or
cmc
jp
clc
mov
or
add
jmp
inc
add
repz
add
clc
xchg
popa
add
cli
insl
adc
out
xchg
loopne
cmp
mov
add
xchg
mov
psubsw
movsb
clc
mov
add
add
add
xor
imul
mov
mov
inc
add
divl
stos
xchg
loopne
outsb
push
clc
mov
add
sub
lock
loopne
stos
mov
jno
add
mov
pop
scas
cwtl
test
dec
push
adc
add
adc
add
add
add
arpl
add
mov
dec
push
add
jo
add
stos
mov
add
jge
clc
jg
js
push
add
push
adc
add
xabort
lods
lret
cltd
mov
fsubrl
sbb
add
pop
mov
clc
insb
push
test
push
add
cwtl
jp
outsb
mov
out
in
mov
xor
add
sar
clc
push
sub
clc
xabort
add
rcl
mov
mov
and
add
aad
dec
dec
test
mov
xabort
clc
lods
push
ljmp
bound
add
clc
movsl
clc
push
add
sahf
and
enter
mull
add
insl
imul
sar
xchg
xor
pop
and
add
push
xor
add
cwtl
daa
clc
aam
add
jp
add
gs
push
add
dec
loope
dec
int3
insb
sub
push
mov
add
mov
clc
cmpsb
clc
loope
push
clc
mov
add
jne
fistpl
int3
sub
clc
mov
aad
cmp
xor
add
add
repz
add
leave
jecxz
daa
clc
adc
add
fnop
idivl
mov
xchg
inc
add
fdivl
cmp
fwait
add
add
mov
fldcw
jnp
stos
inc
add
cmpsb
clc
pop
adc
add
clc
stc
sub
xor
add
popf
mov
add
xchg
mov
clc
test
in
jg
xchg
fcmovu
pop
fisubl
pop
popf
sub
add
clc
xchg
add
jl
clc
insl
nop
add
dec
arpl
add
pop
lret
dec
bound
add
add
cmp
test
dec
xchg
data16
push
rol
clc
mov
clc
inc
clc
scas
shrb
pop
repz
add
add
pushf
pop
mov
ja
clc
inc
add
mov
clc
cmp
loopne
push
leave
push
add
inc
add
nop
push
clc
add
lock
sbb
je
jb
add
adc
add
clc
arpl
add
xor
add
add
cmp
add
xchg
cmp
jnp
ja
clc
cmp
clc
and
add
clc
lret
repz
sbb
clc
pop
insl
ret
add
popf
cmp
jge
push
add
data16
xchg
pop
clc
mov
add
xor
add
clc
lcall
jge
adc
imul
mov
clc
xor
xchg
lods
jg
clc
cmp
inc
clc
mov
push
adc
mov
xchg
cli
xchg
out
adc
add
cmp
stos
mull
out
stc
icebp
mov
shlb
and
add
popf
cmp
fwait
xor
add
clc
aas
mov
aas
xor
add
add
mov
xor
add
mov
ret
clc
cwtl
mov
add
insb
mov
inc
add
add
add
sar
call
mov
mov
mov
pop
pop
icebp
jge
xor
sahf
mov
inc
clc
adc
add
xor
add
shlb
add
add
shlb
fadd
clc
cmpsb
clc
cmp
sbb
cmpsl
clc
xor
pop
lret
clc
lock
clc
in
push
fists
add
sar
clc
lods
sar
clc
cmp
dec
inc
add
mov
repnz
add
clc
cmp
mov
add
sar
cltd
ljmp
inc
add
in
mov
mov
out
mov
outsl
dec
push
add
add
add
xbegin
cmovl
push
in
cmp
mov
pop
jge
clc
mov
mov
add
push
add
es
xlat
out
xor
add
add
mov
add
jecxz
mov
jne
push
loop
lods
sahf
lahf
xor
add
cltd
nop
into
or
adc
sbb
insl
shll
sbb
mul
clc
cli
pop
clc
and
push
clc
dec
sub
add
pop
insl
dec
push
add
add
add
cld
jbe
add
push
add
mov
inc
clc
dec
xor
int
outsb
lcall
outsl
je
enter
insb
inc
clc
add
add
pop
fwait
ds
movsl
clc
xchg
inc
add
filds
clc
aaa
clc
mov
clc
std
dec
int
add
mov
js
clc
mov
clc
cwtl
push
mov
clc
cmp
add
repz
lret
test
inc
clc
mov
add
mov
mov
add
mov
cmpsb
clc
xchg
loop
xor
add
add
loope
enter
adc
mov
mov
jo
add
add
pop
nop
lock
ss
je
pop
xor
add
add
nopl
push
mov
in
sti
pop
jl
and
add
fabs
clc
cmpsl
clc
mov
add
xchg
lods
clc
dec
cmp
sub
clc
das
shrl
loope
mov
clc
inc
clc
dec
sub
xchg
lahf
fldenv
inc
add
cmp
ja
mov
jle
call
ds
cwtl
add
add
or
pop
push
add
pop
mov
add
mov
or
shll
add
data16
pop
je
clc
dec
stc
jnp
pop
popf
mov
imul
mov
mov
cwtl
aas
in
xchg
jp
fcompl
inc
add
sbb
or
lods
fbstp
add
call
sub
out
cmp
decb
inc
clc
xchg
push
pop
je
clc
popa
add
enter
repnz
clc
addr16
push
out
clc
pop
lahf
icebp
jge
js
out
cmpsb
clc
adc
add
das
pop
xor
add
mov
or
clc
cltd
adc
in
xor
add
cmp
call
adc
add
xchg
icebp
inc
clc
xor
push
add
lock
xor
clc
or
dec
in
loop
pop
xor
add
sbb
add
add
push
xor
push
add
add
add
adc
add
in
and
add
pusha
add
es
data16
or
add
mov
or
insb
lock
mov
mov
aaa
cltd
ret
outsb
jl
mov
daa
clc
xor
add
add
add
sbb
mov
popa
add
imul
clc
mov
clc
idiv
cltd
stos
ja
clc
mov
pop
clc
xchg
pop
clc
gs
adc
add
add
das
cmp
sbb
xchg
jle
clc
inc
clc
mov
clc
out
add
add
add
jge
jp
and
add
adc
add
add
mov
out
daa
clc
dec
test
xchg
shrl
mov
push
ss
xor
pop
clc
loop
mov
jl
shlb
stc
push
outsl
ret
clc
loop
lahf
xlat
xor
add
or
xor
add
fsts
add
add
cmp
das
add
add
mov
mov
clc
xor
scas
pop
mov
add
cmovae
add
rorb
pop
clc
push
add
cmpsl
clc
mov
add
add
fucomp
or
sub
push
into
fsub
clc
arpl
add
aaa
out
jne
pop
push
test
clc
pop
adc
add
and
add
clc
mov
clc
cmp
add
es
js
add
mov
inc
add
mov
add
ljmp
ljmp
clc
sti
sti
add
scas
sbb
clc
ljmp
lcall
repz
clc
stos
addr16
and
add
xchg
mov
add
jmp
jle
aad
jne
test
push
add
js
add
inc
clc
push
xchg
call
push
add
call
add
daa
clc
add
sbb
je
adc
add
call
fmull
push
and
cmp
jge
lods
mov
fldl
clc
push
jns
add
hlt
add
add
mov
pop
clc
out
imul
add
clc
add
xor
add
sbb
fbld
add
adc
add
clc
cmp
clc
and
add
nop
and
add
aam
clc
movsb
clc
jl
test
xchg
ret
clc
stos
jmp
cmp
lods
inc
clc
lock
loopne
mov
add
push
add
mov
loope
and
add
clc
pop
mov
in
push
add
mov
push
clc
inc
add
ljmp
nop
jbe
push
inc
add
in
lahf
pop
jns
add
mov
push
add
outsl
dec
sub
pop
jb
add
xchg
mov
pop
and
cmp
cs
sbb
sbb
pop
clc
iret
adc
add
xchg
cmp
clc
test
sub
clc
push
das
lods
sub
clc
add
add
aas
clc
mov
notb
add
add
enter
call
mov
clc
cli
call
mov
jp
xor
add
sub
clc
icebp
or
insl
std
into
faddl
jae
add
add
inc
clc
sbb
add
xor
cmpsb
clc
das
mov
clc
adc
add
int3
movsl
clc
fwait
aaa
fwait
pop
inc
clc
scas
int
out
mov
clc
clc
cmp
stos
dec
mov
xchg
loopne
sar
popf
mov
add
clc
insb
mov
movsb
clc
xchg
cmpsl
clc
scas
divl
clc
cli
pop
clc
stos
je
stc
pop
push
cmp
add
dec
int3
lcall
jo
add
add
sub
dec
sti
ficomps
cmc
movsl
clc
jge
test
enter
cmp
add
sub
clc
movsl
clc
int3
xor
add
add
addr16
inc
add
jnp
clc
test
insb
into
inc
clc
sar
bound
add
mov
add
add
clc
inc
clc
hlt
pop
ja
mov
pushf
gs
ret
fadds
icebp
lock
inc
clc
movsl
clc
jo
add
clc
pop
adc
clc
jne
ss
ja
clc
lods
xbegin
mov
jnp
addr16
push
add
pop
clc
js
jno
add
test
test
and
push
stc
out
std
insl
out
push
xor
add
test
pop
push
add
inc
add
stos
out
jecxz
cltd
clc
pop
clc
xchg
sbb
mov
add
lret
push
add
out
cmc
dec
adc
clc
mov
add
decb
lahf
cmp
clc
xchg
pop
fdivr
push
dec
cmpsl
clc
shlb
add
adc
add
add
add
and
add
mov
es
cmpsl
clc
xchg
pop
fdivl
hlt
cmp
clc
mov
leave
int
add
add
add
inc
clc
cmp
clc
xchg
sar
add
cmp
add
mov
clc
cltd
cmp
mov
cmp
or
data16
ret
clc
rorb
jg
fidivrs
add
test
rolb
clc
ja
clc
mov
clc
gs
popf
out
push
add
push
jbe
clc
push
add
bound
add
add
sar
jl
clc
pop
aas
cwtl
jge
clc
out
ss
mov
aam
add
push
push
addr16
dec
jb
add
mov
test
mov
aad
mov
push
je
clc
jo
add
lcall
clc
lcall
add
clc
mov
add
mov
iret
push
add
mov
add
cwtl
mov
mov
das
ret
clc
in
push
cmp
jae
add
out
shrl
imul
hlt
clc
jnp
clc
xor
add
push
push
xabort
clc
jp
cmp
clc
and
add
add
clc
push
lahf
js
clc
lods
jle
clc
sub
clc
mov
or
clc
mov
clc
in
fwait
add
add
clc
out
xchg
inc
add
mov
clc
ret
clc
jmp
scas
fisubrs
add
add
clc
inc
clc
cld
cltd
test
add
addr16
dec
mov
xchg
test
jns
cmp
add
jg
inc
clc
jg
mov
add
fistl
add
clc
cmp
add
jmp
sub
or
clc
es
jp
xbegin
add
cmp
clc
dec
mov
clc
sbb
add
mov
clc
mov
js
cmpsb
clc
xchg
int
add
clc
jo
add
xabort
push
push
arpl
add
clc
push
sbb
pop
mov
clc
pop
mov
clc
push
add
or
lcall
mov
test
push
add
bound
add
addr16
gs
imul
sbb
jne
add
and
add
add
inc
add
push
clc
jmp
jo
add
mov
out
ja
ss
or
inc
clc
imul
and
add
mov
inc
clc
test
adc
add
jno
add
cld
hlt
lret
jge
clc
test
test
aas
into
adc
add
mov
add
mov
cmp
add
jae
add
ret
clc
add
add
xchg
xchg
mov
jmp
sub
add
fmuls
clc
mov
clc
int
jo
add
xchg
add
add
mov
mov
loopne
push
jb
add
push
pop
push
inc
add
mov
mov
mov
push
add
mov
clc
and
add
adc
add
xchg
add
in
lret
dec
sar
add
testl
xor
add
mov
clc
scas
xchg
push
rorl
ret
clc
add
int3
adc
add
es
movsl
clc
cmp
add
add
add
mov
repnz
popa
add
into
xchg
dec
addr16
cwtl
xchg
xor
add
cmp
add
xchg
lcall
imul
add
mov
jbe
stos
ret
clc
arpl
add
add
movsb
clc
xor
cwtl
jnp
sar
je
mull
add
add
call
ss
hlt
xchg
mov
add
add
xabort
inc
clc
outsl
inc
clc
mov
add
and
add
dec
adc
add
add
mov
add
or
sar
add
dec
mov
add
xor
add
pop
adc
add
push
clc
lret
mov
sbb
mov
in
xchg
movsl
clc
xbegin
add
add
add
add
add
add
push
add
add
jne
inc
add
adc
add
cmp
clc
cmp
clc
pusha
add
xchg
dec
imul
cmp
push
add
dec
aad
clc
inc
clc
cwtl
sub
fs
inc
add
jmp
add
cmc
xor
add
dec
push
jne
insl
cwtl
push
pop
mov
int3
dec
ds
insl
inc
clc
xbegin
ret
clc
insb
shll
add
push
adc
add
mov
add
cmpsb
clc
xor
clc
mov
xor
add
add
pop
lock
add
fists
add
and
add
pop
clc
test
clc
cmp
idivl
push
add
jbe
mov
cmpsb
clc
push
add
pop
loopne
or
add
add
fstl
jns
scas
adc
add
xor
add
xor
add
jne
clc
fmuls
aad
aaa
jecxz
cmp
sub
repz
je
clc
xor
add
hlt
mov
pop
daa
clc
inc
add
xchg
xor
jle
sahf
mov
add
clc
cmp
add
add
cltd
xor
add
add
unpcklps
add
pop
cs
jl
clc
fistl
add
mov
clc
xchg
cltd
mov
clc
inc
add
scas
movsl
clc
inc
clc
pusha
add
xchg
xchg
pop
and
add
add
push
dec
mov
or
ds
pop
clc
add
add
adc
add
test
out
dec
loop
xchg
add
add
add
mov
and
dec
cmp
clc
jmp
mov
inc
add
mov
pop
or
pusha
add
jo
add
in
dec
fiadds
clc
mov
push
add
mov
jb
add
aad
mov
xor
add
add
mov
add
jne
jae
add
clc
cld
je
clc
add
sbb
add
dec
loopne
cmovle
das
push
add
data16
jno
add
add
je
sbb
jg
add
add
push
add
mov
pop
jno
add
fwait
call
pushf
inc
add
adc
data16
outsl
aaa
ds
jmp
aad
add
lock
ds
loopne
sub
ljmp
clc
lods
jns
fwait
ret
clc
daa
clc
insb
mov
stc
cmp
sbb
inc
clc
lods
cwtl
dec
mov
inc
clc
daa
clc
mov
add
clc
movsb
clc
cmpsb
clc
push
mov
mov
mov
clc
stc
aam
add
add
add
inc
clc
and
add
outsl
outsl
lret
pop
in
pop
pop
mov
clc
inc
add
push
out
ja
add
mov
add
add
cmp
cmc
outsl
fadd
clc
icebp
xor
xor
mov
lahf
sar
mov
clc
mov
mov
clc
clc
mov
xor
add
xor
clc
test
clc
outsl
sahf
aas
inc
add
inc
add
or
cmp
and
mov
shrb
clc
rclb
out
js
cmp
add
sbb
ret
clc
in
addr16
mov
jp
movsl
clc
aad
inc
add
push
clc
push
mov
cs
adc
add
add
and
add
mov
clc
cmp
add
sub
leave
dec
js
add
pop
mov
inc
add
xchg
cmp
icebp
scas
mov
clc
cmp
mov
xor
add
jb
add
xchg
pop
sbb
add
cmp
das
mulb
add
mov
add
mov
add
add
clc
inc
clc
adc
xor
and
cmp
push
mov
outsb
pop
gs
sbb
add
clc
mov
jmp
ror
movsl
clc
cli
push
jns
clc
xchg
ja
cltd
cmp
xchg
xbegin
add
sub
mov
pop
cmp
clc
xchg
insb
push
add
sbb
cmp
mov
xor
add
pop
xor
add
add
clc
dec
add
pusha
add
cmp
arpl
add
and
add
sar
add
decb
adc
add
add
sbb
cmp
clc
push
add
icebp
stos
add
add
outsb
and
add
push
pop
scas
xor
push
add
add
add
clc
pop
inc
clc
inc
add
pop
enter
clc
in
fildl
out
fstl
mov
lea
hlt
and
js
clc
mov
shr
ljmp
jg
jp
sti
push
add
stos
cli
fsin
cld
push
cmp
inc
add
pop
ds
dec
je
cmp
ja
lcall
add
add
add
adc
add
add
dec
jb
add
pop
sub
pop
sub
add
test
in
cmp
add
lret
adc
add
add
repz
clc
cs
xabort
clc
inc
add
enter
cmp
mov
mov
or
cld
xchg
xor
add
pushf
dec
outsl
xchg
dec
adc
add
add
push
sub
cltd
jge
fs
loopne
ss
cltd
insl
sti
icebp
jg
add
fimull
mov
add
movsl
clc
inc
add
push
add
in
imul
add
imul
frstor
add
into
cmp
and
add
clc
fs
vpshlb
xor
add
add
lods
popf
jno
add
add
mov
pop
dec
cmp
jno
add
ja
pop
adc
sar
fs
push
mov
nop
jmp
or
add
loope
push
dec
pop
clc
xlat
hlt
xchg
push
add
fnstcw
mov
nop
jmp
xor
jo
popa
add
add
add
dec
cmp
aaa
pop
push
data16
sbb
jle
mov
int3
dec
lahf
xchg
in
sbb
movsb
nop
jmp
sub
pop
mov
clc
bound
add
inc
add
faddl
clc
push
push
jmp
cmp
push
out
scas
scas
out
jl
fcompl
xor
add
add
inc
clc
cmp
clc
mov
clc
mov
clc
fwait
push
xor
nop
jmp
adc
js
and
add
xor
mov
cmp
loopne
cmpsl
clc
sahf
jmp
lods
shlb
add
popa
int3
xor
push
xor
and
clc
lods
jmp
ficompl
xchg
jecxz
add
add
clc
arpl
add
nop
cli
cli
cmp
or
mov
pop
shll
add
jg
or
fcoml
add
add
dec
adc
add
push
mov
nop
jmp
inc
push
or
pop
add
add
mov
popa
add
lret
or
clc
fmuls
cmp
add
add
add
clc
fadds
add
adc
add
mov
cmc
nop
jb
add
xor
add
jbe
jmp
das
mov
dec
pop
lods
js
cmpsl
clc
or
xabort
clc
incl
nop
jmp
add
mov
call
add
add
cmpsb
clc
mov
and
add
or
adc
add
add
clc
movsb
clc
scas
sarb
dec
sahf
lea
pusha
add
pop
sbb
mov
jns
xchg
clc
lea
mov
int3
cmp
xor
nop
jmp
mov
cmpsb
push
outsl
mov
or
ret
jge
test
mov
popf
cmp
clc
mov
repz
xchg
or
nop
jmp
sub
mov
lret
data16
out
pop
push
add
rclb
mull
add
scas
test
add
sub
nop
jmp
lock
sar
and
add
clc
mov
add
sub
clc
xchg
adc
iret
cmc
int
add
daa
clc
aas
pop
cmc
sar
cli
fsubrl
push
adc
push
add
add
add
xor
add
jne
data16
jp
das
in
cltd
fs
pop
push
add
mov
jge
mov
pop
jbe
fistl
clc
or
movsl
clc
std
out
inc
clc
mov
clc
push
icebp
sahf
jb
add
clc
stos
mov
or
adc
add
fs
in
fcompl
add
hlt
out
xabort
clc
push
in
popa
add
xor
add
clc
lret
add
lods
mov
jbe
jnp
inc
add
and
add
xor
add
add
loope
cmc
insl
mov
pusha
add
adc
clc
lahf
pop
popa
add
leave
je
test
xchg
clc
mov
add
add
insb
pop
repnz
inc
clc
cmp
add
cli
test
clc
xor
mov
pop
cmp
icebp
xchg
ss
add
add
add
or
jne
mov
add
add
add
push
mov
xchg
ret
cmpsl
cwtl
incb
add
int
mov
clc
or
clc
inc
add
or
clc
lods
js
add
push
aad
adc
add
and
add
clc
sub
inc
clc
sub
and
add
clc
lret
xchg
mov
fwait
ss
clc
pop
cmpsl
clc
lahf
je
clc
jno
add
add
cmp
pop
clc
dec
xor
add
add
add
clc
lcall
clc
or
xor
add
clc
cmc
addr16
mov
clc
xchg
sub
jbe
lods
fpatan
lods
into
or
add
fxch
stc
rcrl
sub
nop
jmp
jns
pop
inc
add
fdivs
std
mov
clc
cmp
add
push
dec
test
add
dec
add
add
clc
sbb
mov
or
clc
dec
inc
clc
addr16
xor
add
out
sbb
add
push
outsl
out
mov
add
fbld
add
inc
clc
sub
mov
clc
sti
push
imul
pop
xchg
das
mov
mov
in
inc
add
push
test
add
inc
clc
xchg
aad
outsb
lret
clc
dec
loope
add
add
add
fwait
aaa
cmp
add
add
add
sub
mov
in
lods
xbegin
add
jnp
add
and
mov
add
clc
jbe
add
dec
add
add
sbb
arpl
add
clc
cmpsl
clc
or
add
aas
fiaddl
mov
jmp
add
out
icebp
jp
fstpt
fbstp
add
jge
leave
mov
mov
mov
sbb
cmp
push
add
mov
ret
clc
lods
push
add
jno
add
dec
cmp
roll
add
add
clc
xor
add
clc
pushf
call
jmp
daa
lea
or
xor
outsl
loope
test
icebp
mov
leave
lcall
dec
iret
cmp
mov
nop
jmp
bound
jp
xor
xchg
divl
cs
bound
add
clc
xchg
mov
adc
add
add
sar
pop
jle
clc
addr16
fisttpl
in
xor
clc
test
hlt
add
add
add
clc
xor
add
clc
xbegin
clc
jno
add
clc
js
xchg
insb
repz
fstpt
jne
ret
mov
clc
pop
das
fisttps
clc
stos
lods
push
add
xchg
push
inc
test
add
cmpl
add
dec
mov
mov
clc
aam
scas
or
dec
and
and
add
divl
push
add
fwait
dec
scas
sbb
out
arpl
add
fldcw
xchg
add
add
pop
cmp
and
add
clc
mov
mov
addr16
in
movsb
clc
cmp
mov
xor
add
add
fdivrs
fmuls
add
dec
add
jae
add
cmc
mov
mov
add
jnp
jle
decl
test
add
nop
jmp
sti
test
stc
popa
add
xor
add
cmp
add
dec
jo
add
pop
in
sub
addr16
xor
stos
rep
push
mov
xchg
ret
cmp
aad
cmp
jmp
add
daa
sti
pop
xor
pop
testl
add
mov
inc
add
jmp
enter
clc
ljmp
lods
addr16
jl
sbb
add
adc
add
ret
clc
mov
clc
fucomp
add
add
mov
dec
pop
lcall
clc
hlt
pop
mov
clc
enter
hlt
push
icebp
ret
push
dec
cmp
mov
xchg
ret
idiv
mov
lock
bound
add
add
mov
leave
cmc
movsl
clc
loope
fwait
cmp
je
sbb
mov
clc
daa
clc
xabort
clc
sub
pop
jl
ss
push
add
add
add
inc
clc
cmpsb
clc
stos
lods
jae
add
add
jle
cld
data16
jg
cltd
xchg
push
cwtl
pop
fmuls
add
lcall
add
xchg
jb
add
or
push
clc
loop
add
pop
data16
fs
shr
cmp
jbe
add
fwait
jnp
xchg
sub
clc
inc
add
das
mov
pop
jp
repnz
dec
push
lahf
leave
imul
pop
jmp
clc
negl
add
add
add
and
add
das
loopne
mov
clc
cmp
add
pop
or
clc
fimuls
jg
dec
pop
push
pop
lock
fistpll
push
clc
in
cmp
jnp
out
xchg
sbb
jmp
mov
jo
push
leave
lea
in
loope
dec
push
add
movsb
clc
aas
inc
add
es
aaa
pusha
add
pop
sub
sbb
clc
stos
scas
repnz
add
outsl
xor
add
add
mov
loop
sbb
add
out
dec
fstps
scas
lret
cwtl
sub
outsl
jb
add
clc
dec
das
sar
in
cmp
clc
mov
ficoms
clc
mov
ret
add
ja
addr16
add
add
clc
test
mov
loope
jecxz
push
mov
fistpl
clc
fiadds
add
cmp
inc
add
pop
clc
pop
sub
mov
popf
in
ss
add
nop
jmp
aam
add
adc
and
mov
xchg
ret
aad
inc
clc
sbb
out
sar
mov
clc
xor
imul
lahf
xor
pushf
fldl
int3
jne
push
mov
nop
jmp
add
mov
clc
mov
jnp
add
add
iret
data16
movsb
clc
int
add
lock
mov
popf
dec
push
clc
xchg
sbb
scas
and
or
int3
nop
sub
xor
add
add
cmpsb
clc
fs
into
add
xor
add
xlat
push
jbe
clc
xchg
push
out
push
add
mov
or
or
add
lods
test
ljmp
add
call
add
loop
xchg
push
add
dec
add
sub
dec
adc
add
or
inc
add
sub
clc
xchg
jae
add
pop
push
add
adc
add
add
jne
mov
xor
add
cmp
add
mov
outsl
out
jnp
mov
loopne
rorb
clc
in
add
movsl
clc
incb
mov
jnp
cmp
daa
clc
sub
add
xor
add
out
lcall
add
pop
dec
frstor
add
nop
inc
add
add
add
daa
clc
lahf
int
mov
add
push
mov
xchg
ret
sti
int3
insb
or
nop
sub
mov
fs
mov
clc
mov
clc
xor
add
sbb
icebp
xor
add
nop
jmp
push
add
dec
or
mov
adc
add
push
clc
test
sbb
jmp
jmp
or
testl
clc
rcrl
cmp
fucom
clc
aam
jae
add
leave
sub
ja
bound
add
clc
mov
add
sub
add
add
ja
fdivrl
inc
clc
fists
bound
add
add
jg
clc
mov
rorl
clc
xchg
test
pop
xchg
dec
out
add
add
xor
add
xchg
jb
add
add
mov
xchg
add
add
add
aaa
mov
incb
add
jp
insl
adc
pop
mov
add
pushf
sbb
add
fistpll
loop
add
testb
add
fiadds
sbb
ficomps
add
add
cmpsb
dec
insb
xchg
sar
push
inc
clc
data16
in
xor
or
fcmovu
test
clc
sbb
add
dec
jno
add
clc
push
add
clc
mov
clc
push
add
arpl
add
lret
das
pop
sub
and
add
sbb
add
push
add
or
xlat
rorb
insb
jae
add
add
inc
clc
arpl
add
add
add
dec
cmp
sbb
jb
add
or
data16
mov
add
dec
out
cmc
mov
mov
clc
cmp
sub
add
add
clc
xabort
add
push
dec
mov
pop
int3
add
add
add
lcall
cmp
add
dec
inc
add
jno
add
jb
add
add
add
rcr
or
mov
inc
add
imul
insl
sahf
dec
clc
adc
add
clc
dec
ljmp
lcall
clc
popl
xor
add
add
and
add
xabort
fidivs
push
add
outsl
std
jb
add
cmc
inc
add
push
dec
push
mov
xchg
ret
and
adc
add
push
mov
xchg
ret
and
jae
add
clc
add
add
add
mov
stos
stos
cmp
pop
sub
clc
mov
in
inc
add
mov
rorl
jo
add
pop
or
imul
mov
imull
add
or
add
ds
fidivrl
add
jne
mov
clc
inc
add
jb
add
cmp
nop
jmp
add
add
outsl
and
add
js
add
and
add
shll
loopne
pop
lcall
jb
add
jmp
mov
add
clc
hlt
pop
push
test
es
pop
xor
add
xor
add
clc
and
add
out
popl
push
add
add
push
lea
dec
jno
add
add
lock
mov
mov
call
add
sub
add
mov
add
loop
pop
add
add
call
sub
push
loopne
fadds
add
add
cmpl
nop
jmp
cmp
add
push
cmp
cmc
cmp
clc
out
test
mov
xor
inc
add
rolb
add
clc
push
clc
cmp
clc
pop
clc
xchg
mov
adc
add
loop
push
mov
xchg
ret
add
clc
mov
lock
add
int
add
push
testb
inc
clc
pushf
xlat
fistps
and
add
add
loop
xor
add
clc
inc
clc
lods
or
push
add
cs
cmp
dec
in
in
inc
clc
aaa
outsl
mov
push
cmp
and
add
add
push
mov
jb
add
clc
sar
clc
mov
mov
xor
add
cmp
sarb
add
popf
push
rep
nop
jmp
ficomps
aad
add
push
push
clc
mov
add
fidivl
add
ret
add
test
add
clc
sahf
inc
clc
pop
jne,pt
mov
btr
and
add
add
pop
ss
setbe
cmp
loopne
dec
aas
adc
jmp
or
movsb
clc
daa
clc
out
xor
add
hlt
lret
xor
add
add
add
test
aaa
sub
clc
push
add
mov
mov
clc
insb
dec
jo
add
inc
clc
lods
push
cmp
stc
fsts
dec
fldt
add
adc
add
in
popa
add
test
aad
push
movsb
clc
frstor
or
xor
add
jmp
sti
xor
dec
sti
add
add
nop
jmp
and
icebp
nop
jmp
push
push
sub
add
jmp
jecxz
aas
insl
insb
dec
roll
stc
rcrl
add
sub
add
add
in
add
add
clc
jge
shll
mov
and
movsl
clc
pop
fsubrs
inc
nop
jmp
add
pop
add
add
arpl
add
cmp
pop
add
add
adc
inc
add
pushf
xchg
jg
jne
add
mov
add
add
mov
call
and
add
adc
clc
mov
add
popf
xchg
or
repnz
add
mov
add
jmp
je
nop
jmp
or
aad
sar
cmp
sbb
clc
mov
in
lock
mov
clc
in
pop
sub
add
add
cli
sub
mov
jns
cli
arpl
add
mov
nop
jmp
insb
pop
add
jp
inc
clc
lods
lret
or
lods
dec
dec
ljmp
outsl
mov
sbb
nop
jmp
bound
or
cmp
jecxz
or
mov
clc
push
js
jge
clc
jmp
cmp
test
mov
mov
jmp
mov
pop
pop
lock
cmp
aad
add
popa
add
push
fldcw
insl
imul
jne
js
insb
inc
clc
scas
push
add
nop
jmp
cwtl
cmp
push
add
in
jns
add
sub
clc
iret
push
add
sub
clc
jecxz
adc
add
push
clc
inc
clc
pop
sub
decl
jmp
add
dec
jmp
jg
nop
jmp
jns
adc
jge
xlat
aam
xchg
sti
mov
mov
loop
or
icebp
cwtl
xor
add
hlt
imul
jmp
jno
pop
push
lock
xor
sub
call
pop
jg
shr
loope
push
fsubl
push
add
xor
add
add
lret
dec
sbb
int
fisttps
fcmovnbe
sub
sub
mov
clc
push
clc
notl
test
lods
pop
clc
sar
int3
jmp
add
add
sbb
mov
or
lea
lret
pop
iret
fldl
add
inc
clc
xor
add
dec
fldt
sar
clc
cld
notl
rorl
adc
add
pushf
sbb
clc
or
mov
clc
push
add
pop
clc
mov
sar
sar
jge
add
pusha
add
mov
aam
add
int3
cmp
ljmp
add
pop
push
add
mov
clc
sbb
add
dec
pop
sti
jb
add
mov
jae
add
add
fiadds
loop
mov
add
dec
shll
add
add
ss
nop
js
clc
cmc
sbb
clc
inc
add
scas
imul
dec
outsl
imul
jb
add
outsl
push
outsb
push
add
fidivs
add
fistpll
clc
jle
clc
cli
dec
test
pop
outsb
loop
mov
pop
inc
clc
jne
ret
add
jo
add
or
push
clc
imul
imul
fldt
add
out
pop
clc
or
add
sub
add
test
lods
mov
jo
add
add
mov
add
nop
jmp
add
xchg
fs
repnz
add
xchg
pop
xabort
punpckhwd
clc
add
adc
aam
or
sub
clc
jmp
outsl
testl
stos
jns
in
pop
adc
add
add
add
sti
mov
or
add
lcall
xor
sub
add
jb
add
inc
add
fbld
pusha
add
sub
sbb
fldenv
add
aad
clc
out
push
jg
push
xbegin
notb
add
sar
stc
clc
divl
repz
add
mov
ret
popf
add
popa
pop
jns
aad
xor
add
clc
imul
clc
jno
add
add
jge
insl
mov
lret
mov
fimuls
cmp
clc
lcall
jmp
and
pop
aas
hlt
lea
clc
mov
inc
nop
jmp
add
dec
xor
in
sti
push
add
push
add
adc
add
add
mov
sub
mov
pop
into
push
call
clc
invd
or
add
add
clc
cmp
pop
adc
add
add
clc
push
adc
add
mov
daa
clc
push
mov
nop
jmp
add
sti
mov
pop
dec
add
add
add
push
dec
mov
add
imul
repz
add
lock
add
in
dec
and
add
clc
and
add
pop
mov
xchg
push
push
sbb
sub
jecxz
ss
and
add
clc
cmp
fwait
popl
add
add
clc
call
movsl
clc
stc
jbe
push
add
add
jp
dec
cltd
mov
inc
clc
jb
add
bound
add
clc
jmp
sar
sar
clc
or
inc
add
mov
add
jno
add
gs
or
daa
clc
mov
cmc
mov
add
adc
add
rcrb
lods
cmp
add
add
push
outsb
add
add
jns
push
jo
inc
clc
je
clc
in
cli
dec
jne
inc
clc
mov
clc
dec
sbb
clc
or
jnp
mov
add
pop
add
add
xor
add
iret
or
stc
mov
leave
pushf
cmp
add
clc
mov
mov
add
ljmp
clc
sbb
loop
movsb
clc
sar
sar
add
inc
clc
std
scas
in
sbb
xchg
test
pop
fs
mov
test
pop
icebp
inc
clc
sub
mov
push
mov
xchg
ret
jp
add
clc
inc
clc
jg
add
xchg
xor
add
pop
jo
add
add
in
iret
loop
jno
add
shrl
dec
cmp
add
push
jo
add
stc
cmc
call
js
fdivrl
fs
cmp
daa
clc
negl
xchg
sbb
inc
clc
testl
push
cli
adc
add
pop
jbe
cmpsb
clc
sub
data16
push
clc
add
add
add
xchg
imull
clc
idivb
add
xchg
mov
cmp
add
inc
clc
and
pop
xchg
xchg
or
sbb
mov
push
clc
cld
stos
test
stc
cmp
test
scas
mov
and
add
nop
ss
add
loope
jl
dec
jne
std
dec
jne
je
jno
add
mov
sbb
inc
xor
nop
jmp
jp
xor
cld
add
add
push
jmp
daa
sti
and
add
clc
adc
pop
ljmp
add
jno
add
xlat
push
or
add
test
add
mov
add
stos
fucom
clc
scas
icebp
loope
mov
add
ss
arpl
add
adc
add
clc
xchg
jge
sub
or
push
add
xlat
fwait
xor
add
in
cmp
clc
imul
es
lods
mov
nop
jmp
movl
int
data16
mov
mov
lods
das
jecxz
hlt
cwtl
enter
test
inc
add
nop
jmp
add
dec
xchg
jl
jno
add
stos
mov
insb
cmp
repz
sarb
jmp
add
aaa
add
xor
add
ja
clc
mov
add
rorb
out
dec
and
add
jle
add
cmc
fcompl
pop
pop
fs
shlb
add
imul
leave
pop
hlt
push
add
or
or
or
add
adc
add
clc
lret
in
adc
add
clc
repnz
xor
add
add
loope
and
out
xchg
int
xchg
sbb
sbb
test
mov
jno
add
sbbl
sar
test
sub
add
ss
clc
in
mov
clc
sbb
add
clc
sbb
bound
add
xor
jns
push
test
popf
clc
ss
pop
cmpsl
clc
loop
cltd
xor
add
add
clc
sar
or
and
add
clc
daa
clc
sub
add
mov
aaa
iret
mov
add
add
daa
clc
popa
add
xlat
ds
into
sub
add
clc
cmp
clc
ror
adc
add
add
adc
add
sub
clc
ds
in
xchg
and
add
add
add
add
aaa
mov
out
add
and
mov
push
sbb
add
mov
push
cmp
add
pop
pop
dec
mov
sub
nop
jmp
push
add
xchg
dec
cmp
jp
mov
nop
jmp
add
add
add
cli
or
add
add
cli
test
aam
popa
add
adc
add
jne
cmp
cmp
mov
xchg
inc
add
in
push
xor
add
clc
sub
mov
or
pop
mov
add
fsts
add
jmp
mov
cmp
clc
push
jne
clc
ljmp
add
add
clc
xchg
jo
add
mov
imul
scas
dec
xor
add
add
xor
add
in
movsl
clc
pusha
add
lahf
pop
popf
fisubrl
fs
pop
inc
clc
std
xor
add
add
clc
clc
or
add
clc
stc
mov
dec
fsts
or
sahf
xor
add
add
arpl
add
clc
punpcklbw
add
ror
sar
add
outsb
popa
add
fmuls
add
hlt
and
dec
fdivs
clc
pop
insb
mov
add
daa
clc
pop
ss
dec
test
bound
add
add
cli
adc
add
add
jle
leave
pop
xchg
jp
lret
add
loopne
nop
jmp
jno
test
xor
cmp
or
mov
xchg
xor
fcomip
xchg
inc
clc
cmp
add
jp
jb
add
or
xchg
data16
inc
clc
cwtl
pusha
add
push
mov
inc
clc
push
add
nop
jmp
jno
and
test
fisubs
add
in
nop
jb
add
jp
fwait
xchg
fidivrl
repz
add
add
add
add
add
sbb
lock
mov
add
pop
dec
sbb
sbb
sbb
pop
clc
pop
imul
clc
mov
clc
sbb
adc
add
add
add
mov
clc
adc
clc
mov
clc
loopne
loopne
sar
xchg
pop
repnz
add
loop
mov
mov
enter
repnz
add
in
mov
test
arpl
add
enter
insl
add
int3
cmpsb
push
xor
sti
sti
daa
clc
jnp
lods
jecxz
cld
nop
loop
icebp
rol
clc
dec
mov
adc
add
insl
pop
push
clc
jnp
jmp
push
cmp
fbstp
clc
sbb
pusha
add
das
xchg
arpl
add
clc
adc
mov
clc
mov
clc
test
clc
dec
icebp
push
pop
mov
push
repz
bound
add
add
pop
mov
sub
adc
add
fwait
pop
lock
mov
xchg
ret
mov
fwait
cltd
insl
dec
xlat
pop
inc
clc
sub
mov
mov
stc
cmp
add
enter
add
clc
xchg
insb
xor
add
add
popf
outsl
push
adc
add
dec
inc
add
or
daa
add
clc
mov
add
add
fcomps
sar
testb
mov
add
rolb
or
cmp
in
je
dec
mov
add
fsubr
arpl
add
add
inc
clc
clc
sbb
fwait
outsl
mov
hlt
lret
mov
xchg
lock
fwait
mov
add
sbb
addr16
add
sti
xor
popa
xchg
adc
add
push
mov
nop
jmp
add
add
bound
add
add
in
adc
add
cmp
fmull
fsubl
add
clc
arpl
add
xchg
pop
xbegin
push
dec
nop
jmp
or
push
add
mov
and
add
add
pusha
add
test
xabort
lock
lods
dec
mov
pop
cmp
sub
pop
jb
add
jns
scas
xor
add
clc
push
cli
repz
cmp
add
add
add
xor
add
ja
loopne
inc
clc
sub
jle
stc
loopne
cwtl
shlb
mov
mov
add
add
add
sar
jnp
add
push
sub
push
mov
dec
xchg
push
int
clc
lea
scas
mov
clc
je
jno
add
inc
add
nop
jmp
aaa
cld
pop
cmp
mov
neg
rcrl
pushf
repnz
sub
dec
mov
clc
cmp
push
add
push
pop
push
mov
xchg
ret
cmp
add
stc
popf
test
add
xchg
xchg
std
sar
add
mov
pop
push
add
daa
clc
sar
in
inc
clc
inc
clc
dec
pop
clc
xbegin
add
pop
in
cmp
clc
pop
leave
fistpl
clc
mov
pop
ret
clc
in
movsb
clc
or
out
sti
push
cmp
xchg
ret
push
divl
out
int
nop
pop
ja
in
mov
and
add
cmp
out
sub
or
stos
adc
add
js
add
stc
rorb
cmc
pop
jnp
lret
cmp
clc
das
fisttpl
dec
inc
add
loopne,pn
or
and
add
add
int
clc
repz
clc
dec
jb
add
mov
cmp
out
jg
add
push
clc
push
cmp
nop
jmp
push
or
and
popa
mov
loop
imul
clc
loope
repz
jmp
jle
sub
clc
mov
add
jp
clc
or
xor
add
nop
jmp
mov
add
clc
mov
clc
aas
adc
add
xlat
and
add
add
nop
jmp
push
xor
js
add
xchg
adc
add
adc
add
clc
pop
xchg
icebp
add
add
push
push
mov
push
mov
xchg
ret
daa
aam
add
outsl
cmp
addr16
movsb
clc
test
cwtl
xchg
add
add
je
aad
sar
add
daa
clc
mov
mov
stos
sub
dec
push
fisttpll
adc
add
nop
inc
clc
clc
jl
mov
add
inc
clc
test
das
insl
insl
xor
add
dec
mov
clc
test
insl
cltd
and
add
sub
and
add
mov
imul
imul
clc
xchg
notb
lcall
inc
add
cmpsl
add
push
add
adc
add
clc
fnsave
add
mov
lahf
cmp
and
add
clc
and
add
jbe
inc
add
filds
add
add
inc
clc
xchg
repnz
ss
sub
clc
jnp
clc
lea
clc
xchg
sub
inc
add
ficoml
nop
jmp
jo
add
add
mov
mov
add
test
clc
push
popa
add
bound
add
clc
fisubrs
mov
ds
fs
inc
clc
pushl
rclb
add
jno
clc
mov
sub
xchg
jecxz
insl
pop
or
imul
test
push
mov
xchg
ret
add
jae
add
push
xor
add
inc
clc
xlat
xchg
in
sub
clc
sbb
lcall
add
pop
mov
cld
pusha
add
xor
add
add
xchg
test
loop
ja
sbb
stos
inc
add
mov
mov
add
mov
add
add
or
mov
add
je
nop
jmp
dec
jns
lcall
clc
imul
lahf
fisttpll
clc
and
add
lret
fwait
scas
sbb
repnz
movsl
clc
push
add
fisubs
add
sbb
add
pop
inc
add
pop
sub
push
sahf
xchg
je
cmc
sahf
test
rdpmc
add
jb
add
lock
ljmp
loopne
mov
add
add
add
cmp
clc
cmp
clc
test
jo
add
clc
sarb
dec
cmp
add
mov
clc
xchg
scas
sbb
clc
xchg
sbb
mov
scas
fisubrl
inc
clc
ficompl
imul
sub
adc
xchg
mov
jb
add
sub
dec
cmp
into
xchg
mov
clc
or
clc
mov
cmp
pop
clc
aas
lret
pop
xchg
sar
push
sbb
add
mov
pop
clc
fwait
push
mov
push
mov
xchg
ret
fimuls
xchg
je
popa
add
mov
clc
mov
mov
jg
add
loopne
and
popf
mov
jbe
clc
mov
aas
dec
loope
test
clc
push
out
cmp
add
movsb
clc
xor
add
cmc
inc
clc
call
jmp
add
fs
and
jle
push
xchg
out
out
iret
incb
jg
dec
sbb
adc
xchg
ret
cmpsl
cmpsb
cmpsl
xabort
movsb
clc
loop
xchg
lods
loope
lock
mov
hlt
adc
add
clc
rcrl
lock
xor
cmpsb
clc
sbb
shlb
dec
movsb
clc
leave
ret
clc
add
add
mov
cmp
add
mov
in
adc
add
clc
add
xchg
dec
xchg
sbb
pusha
add
aad
jne
nop
jmp
add
stos
add
add
inc
clc
std
clc
mov
or
xchg
cmp
clc
mov
sub
add
inc
add
xor
add
add
add
push
fdivs
iret
pop
popf
jg
lret
jecxz
scas
cmp
jae
add
add
add
clc
pop
cmp
clc
sbb
jl
fs
inc
add
cwtl
cld
insl
jne
xlat
adc
add
add
cmp
pop
clc
and
test
notb
xchg
fsubrp
inc
add
dec
inc
add
lss
add
add
add
jl
clc
dec
xchg
lea
push
add
jg
sub
out
inc
add
add
add
add
jae
add
add
inc
clc
or
clc
cmp
sarb
icebp
xlat
dec
arpl
add
outsl
xor
add
add
ljmp
movsb
clc
push
mov
call
add
add
inc
clc
cmp
add
stos
mov
cmpsb
clc
add
add
jno
add
clc
out
pusha
add
repnz
add
clc
and
add
cltd
dec
fwait
xor
add
inc
clc
sahf
iret
pushf
lcall
add
clc
call
inc
add
jb
add
jbe
add
pop
clc
sti
pop
and
add
clc
push
sub
nop
jmp
add
add
xor
add
add
inc
clc
sub
shlb
add
sub
add
dec
cmpsl
clc
sbb
add
add
cltd
gs
cmp
add
lahf
or
add
test
dec
xchg
mov
clc
cmc
lret
jl
mov
add
nop
jmp
aad
add
clc
pop
fstl
mov
cmp
popf
cmp
mov
add
mov
sub
pushf
add
add
jae
add
and
add
add
add
or
clc
push
adc
add
fcom
and
add
mov
and
clc
pop
imul
clc
push
add
cld
sub
notb
add
push
inc
nop
jmp
aad
add
add
popa
inc
xchg
dec
insb
in
inc
add
lahf
iret
testl
xchg
sbb
add
add
or
gs
lret
xchg
push
add
test
add
pusha
add
pusha
add
addr16
jns
bound
add
mov
cmp
add
xchg
mov
jle
add
out
call
pop
pop
fsubrl
jecxz
testl
fabs
clc
aaa
xor
and
inc
add
mov
add
add
popa
add
pop
cltd
mov
add
pop
mov
add
add
clc
out
and
add
and
add
lret
add
mov
iret
jns
pusha
push
mov
xchg
ret
add
xor
stc
int
outsb
cld
insb
sbb
js
mov
data16
jnp
add
xlat
into
jg
clc
pop
fidivl
add
clc
push
add
clc
cmpsl
clc
or
outsb
push
and
movsb
clc
push
mov
and
add
jl
sub
cmpsl
clc
pop
mov
and
add
scas
mov
and
test
add
dec
sar
mov
nop
jmp
jno
mov
aaa
dec
and
jbe
add
sub
push
add
rol
clc
jne
add
mov
orb
ret
push
add
add
clc
out
in
out
jge
fincstp
cwtl
pop
idivl
clc
sbb
add
std
scas
push
push
add
popa
add
xor
xabort
cmp
or
pushf
and
add
out
pop
inc
add
frstpm(287
clc
push
clc
jo
add
xchg
data16
mov
push
dec
test
clc
sti
popf
jle
cld
mov
in
add
xchg
add
add
movsl
clc
mov
jle
clc
in
mov
pop
dec
pop
xchg
dec
adc
add
clc
fwait
add
mov
pop
pop
int3
cli
push
cmp
add
jno
add
loope
sub
mov
mov
clc
out
lods
imul
add
out
xor
add
add
cmp
clc
lret
fcomp
in
cmp
clc
dec
pop
inc
add
cltd
call
xor
add
lock
mov
repz
add
and
sbb
jecxz
addr16
pop
das
sbb
nop
jmp
add
jge
pop
and
mov
leave
push
add
inc
clc
sub
das
xor
add
sub
inc
add
dec
cwtl
psllw
xchg
adc
add
push
push
and
add
add
add
jp
cmp
test
dec
std
sub
add
add
add
ret
clc
xchg
jno
add
pmaxub
clc
jnp
clc
inc
add
sbb
jmp
cmp
push
jno
daa
daa
dec
xlat
xchg
lret
add
add
and
add
mov
movsb
clc
xchg
scas
mov
push
add
mov
inc
clc
aam
int
xabort
ljmp
clc
movsl
clc
and
popf
lahf
and
xabort
inc
clc
movsl
clc
test
mov
add
nop
jmp
pop
add
imul
add
mov
lahf
pop
test
repz
cmp
push
clc
cmpsl
clc
out
cmp
scas
xchg
cmp
push
push
mov
xchg
ret
add
insb
sub
push
add
imul
cmp
clc
clc
test
fdivrl
dec
nop
jmp
add
lock
cmp
clc
pop
cmp
hlt
rcl
cltd
add
add
jg
fstps
clc
xor
add
and
nop
push
fiadds
add
xor
add
add
lods
push
jmp
and
add
sbb
jne
fstpl
ret
dec
xchg
inc
add
adc
add
push
add
lea
orb
mov
pop
jns
pop
lahf
adc
clc
cmp
jecxz
xchg
fimuls
inc
add
data16
jmp
clc
add
clc
test
out
jecxz
stos
jp
mov
sub
pop
ds
add
fdivl
add
pop
fistpll
push
clc
cmp
clc
mov
add
adc
add
dec
testb
cmp
clc
xchg
test
mov
add
stos
mov
pop
clc
cmp
popa
add
xor
add
xchg
dec
mov
clc
out
outsb
inc
clc
push
pop
ss
clc
jne
push
add
add
add
pushl
nop
jmp
add
cmp
add
mov
cmp
fists
add
sbb
push
addr16
int3
hlt
cs
lahf
jp
add
sbb
clc
pushf
aas
and
add
mov
add
mov
clc
and
add
add
mov
clc
sbb
xchg
enter
add
mov
xbegin
clc
inc
clc
mov
dec
pcmpgtb
iret
dec
ss
ret
clc
adc
add
outsl
leave
mov
jnp
daa
clc
xchg
outsl
dec
sbb
clc
je
push
clc
pop
xlat
jmp
flds
add
add
xchg
cwtl
jmp
jle
dec
into
int3
xor
add
mov
cmp
daa
clc
call
ljmp
jne
inc
add
je
clc
mov
pop
loop
dec
sub
push
mov
nop
jmp
aam
add
sub
clc
mov
xor
and
int3
push
inc
clc
and
xchg
es
cs
cmp
pusha
add
push
xchg
insl
imul
loop
push
adc
add
movsb
clc
fs
dec
leave
mov
bound
add
gs
add
pop
fdivp
pop
cmc
std
xor
add
cmpsb
clc
push
dec
jg
mov
add
mov
clc
mov
clc
dec
rcrb
mov
add
imul
clc
inc
clc
stc
mov
clc
cmpsb
clc
xor
add
xchg
and
add
dec
sti
mov
cmp
push
add
rcrb
call
add
pusha
add
bound
add
clc
jl
jmp
jnp
lods
or
sub
rdseed
in
jg
jne
xor
add
clc
aas
inc
clc
std
adc
add
aam
add
fs
jo
sar
int
inc
clc
iret
dec
aas
xchg
outsb
lahf
sarb
add
pop
insb
aas
sbb
lock
add
cmp
jge
mov
and
add
test
clc
stc
xchg
clc
inc
clc
mov
out
mov
gs
pop
dec
pop
clc
in
cmp
jecxz
xchg
lahf
mov
rcll
loope
dec
ret
clc
inc
clc
and
add
popf
add
add
fwait
mov
add
and
add
pop
adc
add
add
clc
mov
clc
push
dec
pop
add
mov
dec
sti
nop
jo
add
adc
add
add
mov
add
incl
mov
or
xchg
repnz
add
push
movsb
push
mov
xchg
ret
popa
cmp
push
jmp
nop
jmp
cld
push
xor
lock
mov
clc
push
mov
movzwl
nop
jmp
mov
jb
add
add
clc
sbb
add
xor
add
jns
inc
add
jns
add
push
add
cmp
mov
clc
and
add
getsec
mov
aas
imul
adc
add
add
xor
add
clc
jmp
sbb
lea
push
add
repnz
cmp
clc
gs
popf
in
sti
cmp
xchg
movsb
clc
xbegin
inc
add
jge
pushf
mov
jns
sahf
jl
clc
mov
jp
fldcw
sub
add
mov
or
jmp
mull
imulb
test
push
add
jbe
clc
mov
cmpsb
clc
push
notl
inc
add
js
mov
clc
sub
add
jns
ret
clc
xor
clc
stos
mov
pop
mov
push
add
jmp
cmp
or
xbegin
inc
add
inc
clc
add
add
add
into
icebp
aas
add
add
add
int
xor
add
push
nop
jmp
xor
and
add
xorl
and
mov
xchg
ret
cmpsl
insb
addr16
cmpsl
clc
add
jmp
insb
fcoms
add
sar
clc
push
or
faddp
aam
aad
test
ljmp
push
lret
lea
add
clc
pop
cmp
insb
mov
mov
adc
jmp
add
xor
add
ja
cmp
mov
add
mov
mov
lcall
movsb
clc
sar
push
mov
jb
add
add
ret
clc
sti
cli
addr16
clc
jns
add
stos
std
lret
data16
cwtl
push
outsb
jne
lret
add
ljmp
fnstcw
loope
incl
add
push
mov
xabort
add
cs
jns
add
xor
sub
cmpsb
clc
movsb
clc
xchg
icebp
fnstenv
add
das
stc
shlb
add
add
repnz
test
push
add
in
aas
ret
add
push
add
sbb
or
popf
mov
mov
add
hlt
inc
clc
and
add
add
clc
adc
dec
xchg
or
mov
cmp
add
push
add
cli
xbegin
sti
inc
clc
push
stc
mov
mov
and
jmp
add
lock
clc
adc
push
lock
clc
in
adc
imul
in
push
clc
into
sub
icebp
imul
clc
jecxz
aaa
outsl
xabort
sbb
clc
cwtl
push
sub
xchg
ds
and
add
or
mov
add
nop
jmp
gs
sbb
insb
push
add
aas
int3
stc
sub
add
dec
test
adc
push
pop
into
lods
inc
clc
test
xor
add
clc
test
test
out
inc
clc
sub
rclb
inc
add
data16
inc
add
test
out
pop
and
and
add
enter
stos
rcrl
and
add
xlat
jo
add
inc
clc
mov
clc
mov
and
add
add
add
inc
add
or
ljmp
xor
add
clc
cld
dec
aas
and
add
int
data16
inc
clc
nop
mov
add
sub
lret
add
aad
jbe
add
jnp
clc
cld
jmp
fsubrl
pop
clc
pop
inc
clc
mov
xor
add
mov
sahf
es
lret
xor
add
add
add
fstps
fwait
shrb
cmp
add
int
testb
add
scas
and
add
clc
bound
add
mov
clc
cmc
pop
cs
lahf
ss
clc
clc
ret
clc
divb
add
clc
sti
pop
jge
sar
or
cmp
add
add
cmp
cmp
cld
adc
add
add
testb
jecxz
inc
clc
cmpsb
clc
in
enter
add
lahf
pop
inc
clc
jno
add
or
insl
fs
out
xor
add
clc
out
mov
mov
clc
pop
cmp
out
ja
rcll
clc
sub
xbegin
add
add
clc
lret
adc
add
xor
add
clc
push
inc
clc
cmc
jge,pt
aad
pop
clc
in
jmp
rclb
add
jp
ds
clc
cmp
add
jmp
clc
xlat
jecxz
and
add
adc
add
cmp
das
idivl
xchg
adc
add
clc
and
add
clc
arpl
add
clc
push
lods
push
mov
xchg
ret
imulb
idivb
lcall
clc
lea
loopne
xchg
add
add
inc
add
bound
add
add
xbegin
mulb
add
pusha
add
dec
ss
rclb
xchg
inc
add
bound
add
or
jae
add
mov
or
mov
pop
sub
shll
clc
xchg
in
stc
fs
aam
mov
loop
xbegin
clc
mov
clc
cmp
shl
clc
ss
mov
xabort
clc
in
xchg
pop
mov
sub
add
shlb
sub
fdivrl
addr16
mov
clc
cmc
cmpsb
clc
xchg
sub
popa
add
lcall
pop
xchg
cmp
add
add
popf
adc
xchg
push
clc
and
add
sbb
jmp
push
push
aaa
sub
sbb
mov
xchg
test
or
add
in
shlb
sbb
jmp
add
mov
add
pusha
add
stos
push
add
in
loop
in
in
test
aam
inc
clc
push
add
fbstp
pusha
add
mov
aaa
call
add
xor
or
dec
jnp
stos
in
adc
add
add
clc
cmp
pop
inc
add
mov
clc
outsb
mov
pop
inc
add
sbb
mov
clc
mov
clc
pop
out
aad
clc
outsl
jns
jmp
nop
jmp
popa
push
sbb
cmpsl
clc
outsb
sar
add
pop
aas
sub
add
call
mov
nop
jmp
or
daa
sti
test
xchg
cmp
dec
mov
jns
add
push
add
shr
cmp
push
add
inc
clc
sub
add
jbe
bound
add
add
scas
sub
clc
shrb
out
cmp
add
idivl
xor
add
push
xor
add
add
mov
clc
xbegin
pop
int3
mov
mov
add
add
push
push
add
jle
fildll
inc
add
xchg
ljmp
jae
add
pop
or
push
add
inc
add
mov
clc
fiadds
test
add
int
mov
test
clc
loop
fcmovb
clc
cmp
push
or
aam
push
dec
or
add
mov
clc
lods
jmp
sti
push
shll
aad
ror
mov
sbb
add
pop
dec
inc
clc
sbb
add
fmul
gs
js
fsubrs
jb
add
in
lcall
sbb
add
add
pop
pop
sahf
in
inc
add
push
cmp
fdiv
popa
add
xor
add
cmp
jns
add
add
arpl
add
add
push
add
add
or
enter
adc
add
icebp
push
add
push
mov
xchg
ret
adc
add
fnstsw
sahf
sub
add
add
add
push
inc
add
sti
xchg
push
add
pop
clc
adc
add
mov
push
add
loope
mov
clc
pushf
sar
jnp
clc
clc
fstl
add
test
clc
adc
add
clc
add
add
adc
add
add
lea
push
jns
es
adc
add
push
clc
notl
add
cmpsl
clc
roll
ficoml
jbe
mov
mov
inc
clc
clc
cmp
add
dec
bound
add
clc
xor
add
clc
popf
cmp
jno,pt
add
clc
lret
push
add
jae
add
push
add
pop
clc
and
add
dec
cmp
lret
clc
lahf
arpl
add
jmp
sahf
push
clc
xchg
cmp
clc
or
clc
or
clc
xor
add
int
push
add
cli
outsl
or
xor
add
hlt
add
add
clc
pusha
add
imul
xchg
mov
inc
add
xlat
dec
divl
add
jns
cmp
sahf
inc
clc
sub
add
into
fists
adc
xabort
inc
add
mov
jp
shll
add
add
clc
jecxz
xchg
movsl
clc
mov
pop
aad
pop
xchg
popa
add
adc
add
test
add
insl
sar
clc
cmp
sub
add
add
out
cltd
cmp
in
pusha
add
mov
add
call
stos
pop
push
clc
loopne
fs
sarb
flds
add
xor
add
add
cmc
mov
pop
mov
mov
aaa
es
and
add
clc
sbb
clc
pop
mov
jmp
add
add
adc
or
or
stos
das
push
clc
clc
fnstenv
dec
jl
add
dec
aas
sub
clc
inc
add
mov
xchg
dec
and
add
data16
decl
test
jmp
sub
adc
clc
xbegin
add
xabort
dec
cmp
inc
nop
jmp
xor
cmp
mov
cld
fiadds
test
add
nop
jmp
pop
daa
data16
addr16
stc
mov
iret
sarl
data16
inc
clc
out
call
shll
add
and
add
incl
pause
jmp
adc
jp
or
inc
clc
in
in
addr16
sbb
jmp
jp
xor
xchg
sar
clc
xor
add
add
clc
push
inc
add
ja
out
shll
add
xchg
out
sub
dec
xlat
cmp
xor
add
xchg
and
add
fistpll
lahf
rolb
popa
add
dec
jge
mov
clc
arpl
add
clc
inc
clc
mov
into
pop
push
mov
nop
inc
add
testl
rorb
rorb
mov
add
pop
xchg
out
jno
add
cli
and
add
add
jle
push
in
mov
lret
in
lods
mov
lods
lahf
xchg
adc
add
adc
add
cltd
lret
clc
push
aam
clc
and
add
sti
jnp
xchg
frndint
clc
sahf
enter
in
das
mov
cmp
ljmp
add
xchg
mov
test
clc
inc
clc
jg
clc
or
sub
lret
fnstsw
sbb
clc
cmp
clc
push
pusha
add
prefetchw
or
clc
sbb
mov
xchg
ret
add
cmpsl
cmpsl
popf
stc
lods
cmp
add
aad
mov
adc
add
jecxz
cmp
cld
sub
bound
add
xabort
into
cwtl
aam
icebp
test
lods
sbb
mov
clc
or
add
adc
add
add
add
add
add
clc
cmp
dec
add
pop
and
test
test
sub
sbb
scas
push
bound
add
mov
add
es
push
add
xchg
jb
add
mov
clc
dec
xor
add
clc
push
add
mov
xor
add
or
add
enter
and
add
mov
ret
jge
fiadds
imulb
xor
add
cli
clc
sarl
sbb
add
enter
pop
cmp
cwtl
cmc
iret
xchg
pop
aam
or
adc
aam
add
and
add
pop
mov
add
clc
ret
clc
or
jmp
fimull
aad
add
xchg
adc
add
xchg
mov
cmp
clc
inc
add
xchg
imul
into
in
dec
push
outsl
add
xor
lea
insb
test
pop
imul
in
cmp
mov
nop
jmp
jno
adc
push
mov
add
push
add
or
pop
sbb
pop
insl
das
lock
fiaddl
clc
loopne
sub
or
ret
cmc
inc
clc
call
nop
jmp
mov
clc
and
add
jecxz
lret
lret
stos
jo
add
clc
movsb
clc
test
add
add
pop
cmp
jmp
add
dec
jge
sub
or
inc
add
push
push
cld
mov
mov
cmp
mov
xchg
aam
clc
fisttpl
gs
fisubs
add
fs
fstps
inc
nop
jmp
int3
mov
js
cmpsl
clc
add
xor
add
mov
mov
pmuludq
rcll
pop
loope
mov
xchg
lock
stos
das
incl
jg
nop
jmp
cwtl
or
ds
popa
push
mov
xchg
ret
jp
add
or
nop
jmp
popa
dec
push
fisubs
add
cld
stos
sbb
push
jmp
push
add
dec
sub
add
stc
nop
jmp
add
lea
sti
int3
aam
adc
add
add
add
add
dec
fcoml
add
mov
pop
sbb
clc
dec
xchg
adc
add
add
out
data16
scas
inc
add
jge
pushf
arpl
add
imul
nop
jmp
add
dec
cmp
add
clc
dec
xchg
pop
lret
fsubrl
jl
add
call
clc
xchg
enter
cmp
add
sub
or
lods
inc
clc
aam
enter
std
mov
adc
enter
clc
xbegin
dec
adc
clc
nop
scas
out
adc
add
push
call
nop
jmp
adc
pop
mov
ja
decl
ret
inc
add
add
dec
sbb
imul
lcall
cmp
ljmp
sub
xlat
add
add
add
call
nop
jmp
push
or
lcall
call
and
push
jns
adc
insl
hlt
bound
add
add
je
leave
sub
add
add
clc
mov
add
xchg
dec
jmp
add
add
push
pop
push
add
andl
mov
dec
adc
out
xor
mov
add
mov
lea
pop
cmpsb
clc
mov
sar
clc
jae
shlb
clc
call
fildll
pushf
lret
sub
divb
add
loopne
inc
clc
popf
imul
clc
adc
add
popf
mov
jb
add
push
clc
pop
clc
notb
je
sub
es
sar
and
inc
add
icebp
mov
xchg
dec
push
clc
xchg
mov
xchg
nop
jnp
das
imul
add
clc
pop
clc
and
add
movsb
clc
dec
xchg
mov
dec
hlt
aas
xchg
outsl
clc
lahf
fnstsw
popa
add
mov
nop
jmp
add
sub
lea
or
add
inc
add
push
ja
scas
cmp
add
add
pusha
nop
jmp
sub
add
add
cwtl
cld
jne
jle
bound
add
push
clc
push
inc
clc
dec
mov
xor
push
add
adc
add
jmp
clc
data16
inc
clc
sbb
addr16
pop
add
add
clc
or
inc
clc
movsb
clc
sbb
jmp
or
adc
in
in
aas
jecxz
jb
add
clc
call
clc
jle
clc
or
push
mov
mov
push
add
and
add
int3
out
xorps
add
xchg
inc
clc
inc
add
and
loope
jl
add
rol
clc
dec
mov
add
add
xchg
cmp
popf
aaa
sar
inc
add
push
add
or
adc
add
mov
add
rcl
mov
add
jle
clc
sbb
jl
jo
add
addr16
ds
sub
push
add
sub
inc
add
push
ds
add
dec
sbb
loop
cmp
inc
add
jle
clc
xchg
nop
push
aas
pop
and
add
xchg
cmp
mov
pop
negb
mov
cmp
add
mov
nop
jmp
cmpsb
fidivrs
lret
mov
or
cmpsl
clc
fnstsw
mov
sbb
insb
into
call
add
mov
clc
cmp
inc
clc
and
add
stos
lret
aad
add
jg
sub
cwtl
mov
add
icebp
ffreep
clc
mov
es
xchg
xchg
xchg
push
adc
add
adc
add
sbb
clc
inc
add
xor
xor
add
fidivs
add
cmp
or
cmp
pop
clc
xchg
lcall
clc
jle
push
clc
or
push
call
nop
jmp
jns
push
or
pop
xchg
decl
aaa
add
add
test
jno
mov
push
test
cmp
or
jnp
sar
clc
xchg
lret
xor
add
clc
xor
clc
mov
fs
loop
data16
adc
add
add
nop
jmp
jns
aad
add
inc
add
cli
pop
sub
movsl
clc
cmp
andnps
add
gs
add
mov
jae
add
xchg
jmp
dec
add
jb
add
clc
ret
clc
cmp
clc
int3
mov
shrb
sub
add
enter
jl
dec
cmp
leave
aad
clc
jp
call
cmc
cmp
jg
push
sub
sar
popl
clc
sub
inc
clc
aaa
dec
mov
sti
mov
dec
pop
arpl
add
enter
dec
fistpll
pop
sarb
xchg
pop
jl
clc
fiaddl
clc
sbb
es
aaa
push
add
decl
daa
cmpsl
add
dec
mov
int3
out
mov
push
add
out
xor
add
sub
add
int
clc
and
xor
add
pop
pop
lcall
clc
push
add
cwtl
aad
mov
push
clc
cwtl
push
clc
push
or
adc
add
fisubl
add
std
data16
cmp
add
jp
mov
mov
xchg
ret
bound
mov
dec
out
movsb
clc
mov
int3
scas
dec
cld
inc
add
cmpsb
clc
jne
pop
mov
add
call
xor
sbb
dec
sbb
clc
push
push
push
push
mov
xchg
ret
int3
add
popa
lcall
enter
clc
std
ja
data16
cmp
add
mov
clc
pop
clc
sub
add
fists
clc
out
push
pop
bound
add
clc
mov
inc
clc
jp
pop
out
cwtl
xchg
movsl
clc
divb
add
popf
fidivrl
repnz
hlt
outsb
loop
cmp
add
sbb
xchg
xbegin
add
push
push
pusha
nop
jmp
add
testl
movsb
clc
sbb
mov
xchg
ret
cmpsl
or
or
fcompl
clc
push
pushl
nop
jmp
mov
sti
psubb
fldt
mov
add
jl
clc
mov
jae
jmp
cmp
pop
add
dec
mov
inc
add
mov
clc
and
add
sbb
add
jge
add
fs
adc
clc
bound
add
mov
fidivs
daa
clc
fsubrl
test
add
nop
jmp
mov
inc
add
and
add
rcll
clc
fdivl
add
add
test
fwait
pop
mov
clc
mov
js
decl
das
inc
add
mov
sarl
clc
xor
add
xchg
xor
add
pop
push
add
sub
mov
clc
adc
xchg
mov
add
sbb
mov
cmp
ficomps
add
clc
ficomps
stos
out
dec
lock
add
call
pushf
pop
pop
aaa
push
xchg
sub
xchg
ret
popa
cmp
fxch
cmc
lcall
cmp
js
add
xchg
inc
add
adc
clc
movsl
clc
push
ficoml
add
add
clc
je
imul
lock
sub
clc
out
mov
add
xor
add
clc
imul
add
mov
lea
add
push
add
xbegin
mov
clc
loopne
adc
add
stos
enter
add
clc
imul
add
insl
fiaddl
aad
mov
xchg
push
add
fists
push
or
add
push
add
or
int
test
mov
jno
add
add
add
and
add
add
add
dec
jno
add
clc
ljmp
and
add
add
mov
add
add
add
add
clc
outsb
outsl
roll
bsr
clc
or
aaa
lock
icebp
mov
clc
decl
incl
xchg
ret
mov
add
sar
clc
add
add
xor
popf
sbb
add
cmp
mov
nop
jmp
add
and
add
fwait
scas
lcall
add
or
ss
iret
jb
add
clc
mov
cmp
sbb
add
jnp
sbb
stos
pop
add
nop
jmp
mov
add
inc
clc
pop
mov
clc
ret
clc
jne
clc
and
add
add
ret
add
addr16
mov
inc
clc
mov
clc
aam
mov
in
cmp
push
nop
jmp
lea
cmpsl
sub
add
xchg
sub
repnz
cmp
push
jmp
sbb
inc
sti
adc
mov
jmp
nop
jmp
add
jno
xchg
in
or
cmp
nop
jmp
or
movl
sti
nop
jmp
push
jp
cmpsb
jns
mov
sar
movsb
clc
mov
clc
nop
popf
data16
test
ljmp
add
clc
into
jne
and
add
enter
add
pop
pop
pop
push
cmp
cmp
pop
fwait
lcall
imul
inc
add
jnp
clc
hlt
nop
mov
pop
inc
clc
shrd
cmp
inc
add
xor
arpl
add
clc
pop
loope
gs
leave
idivb
push
call
nop
jmp
add
or
out
ja
and
add
js
and
add
test
ljmp
outsb
divl
add
nop
jmp
aam
add
adcl
sbb
or
clc
rcrl
negb
or
clc
adc
add
clc
incl
add
ljmp
aad
add
add
add
dec
dec
inc
clc
xor
clc
cwtl
push
add
xor
add
mov
clc
nop
fs
movsl
clc
fcmovu
rolb
pusha
add
clc
out
dec
insl
dec
xchg
inc
clc
sahf
sarl
cmpsl
clc
inc
add
push
push
mov
int3
or
xor
clc
int
add
add
sub
dec
cmp
ljmp
add
or
mov
js
pop
fidivl
and
sub
dec
xlat
cmc
and
add
and
add
int
clc
add
add
in
sub
add
mov
pop
sub
mov
arpl
add
clc
es
rolb
clc
clc
dec
push
jl
clc
and
and
jbe
clc
icebp
insl
movsb
clc
inc
add
dec
pop
add
add
xchg
aas
cmpsb
clc
pop
dec
mov
stos
cmp
add
jns
cmp
lcall
fmull
mov
test
add
mov
xchg
ret
imull
test
fcmovu
or
sub
js
clc
scas
add
add
lret
lods
inc
clc
mov
pop
sahf
inc
add
pushf
cmp
clc
pop
mov
data16
fcoml
add
clc
jmp
fadd
clc
cwtl
loop
jb
add
clc
adc
call
add
daa
cmpsl
and
add
mov
cltd
dec
xlat
shlb
add
sahf
jg
cwtl
jno
add
add
popf
adc
add
mov
sti
xor
add
mov
or
leave
mov
nop
jmp
jo
add
int3
push
add
jns
clc
iret
std
iret
or
repnz
jmp
nop
jmp
add
or
aaa
jecxz
push
xbegin
clc
fyl2x
mov
clc
js
add
sahf
enter
ror
clc
cltd
cmp
leave
stos
cmp
fdivl
add
mov
add
outsl
shll
add
repz
mov
xchg
ret
xor
add
ss
add
sarl
add
imul
mov
int
pop
adc
add
clc
fs
aas
sbb
and
add
sbb
shr
fcompl
push
dec
sub
mov
movsb
clc
shl
clc
outsl
inc
clc
fdivs
add
rcrl
or
xor
add
je
add
xor
add
inc
clc
mov
or
add
insb
or
clc
test
push
pop
mov
xor
add
mov
sbb
cmp
clc
jmp
in
scas
test
pop
movsb
clc
or
clc
xchg
test
jmp
add
push
addl
clc
rorl
cmpsb
clc
sar
clc
scas
cmp
add
mov
xor
add
push
mov
out
mov
add
clc
xchg
cmp
xor
add
adc
nop
jmp
adc
xor
add
nop
jmp
pop
inc
mov
sub
in
inc
add
jmp
out
imul
clc
jae,pn
add
stos
mov
fstpt
jmp
mov
lock
mov
test
testb
clc
dec
test
inc
add
jmp
clc
inc
add
cmp
and
add
add
outsb
ds
fists
mov
add
data16
and
add
clc
js
clc
pop
or
cmp
clc
sar
lock
add
clc
mov
test
inc
add
pushf
xor
add
add
std
sub
lods
xor
add
mov
mov
clc
pop
clc
pop
pop
cli
call
jo
add
clc
imul
repnz
jmp
add
aam
push
xor
cmc
leave
push
add
push
mov
clc
mov
or
movsl
clc
dec
mov
clc
jle
out
sub
clc
mov
jo
add
adc
add
clc
and
jne
nop
jmp
xor
mov
add
enter
clc
std
clc
pop
push
mov
or
add
aad
lret
ljmp
mov
add
mov
push
ja
sbb
add
add
test
xbegin
add
sub
dec
add
add
clc
cmp
pop
jg
pusha
add
dec
clc
hlt
cmp
int3
sbb
xchg
xabort
xchg
lret
push
add
pop
ljmp
sub
push
push
add
ljmp
push
and
add
sub
addr16
dec
mov
ss
mov
idivl
add
nop
jmp
or
daa
and
add
add
adc
add
stc
add
add
add
add
add
cmpsb
clc
jne
iret
sub
add
dec
or
cmp
xchg
jecxz
sbb
adc
nop
jmp
insb
js
xchg
dec
inc
add
sub
add
jo
add
add
lret
inc
clc
mov
and
call
add
dec
jp
sub
scas
es
xchg
popa
add
sub
clc
bound
add
clc
sub
sbb
mov
clc
iret
hlt
sti
lock
sbb
or
pop
clc
jo
add
jp
dec
mov
xchg
sar
or
add
imul
or
mov
clc
clc
lods
arpl
add
out
fcoms
clc
in
push
dec
cmp
stos
enter
xchg
jecxz
ss
jecxz
ret
add
mov
add
mov
nop
jmp
xor
cmp
pop
clc
int3
out
ss
js
fwait
adc
negb
clc
cmp
clc
outsb
ficompl
test
and
add
clc
daa
clc
adc
add
add
push
jae
add
clc
loopne
cmp
mov
jp
push
test
add
lret
sbb
push
add
and
add
mov
xbegin
cmpsl
clc
push
clc
dec
rclb
xor
push
mov
xchg
ret
pop
xor
xor
je
clc
imul
jnp
cmpsb
clc
mov
cmp
xor
add
clc
stos
push
mov
dec
xlat
dec
icebp
jo
add
add
test
pop
clc
push
sub
cmc
cmp
cmp
notb
clc
jmp
testl
sbb
mov
rcrl
clc
mov
clc
stos
cltd
ret
clc
nop
dec
into
dec
int
std
fisubl
add
aas
adc
lods
cmp
add
xor
add
clc
cmp
add
inc
add
fdecstp
mov
or
fidivrs
clc
push
add
sar
sub
add
nop
jmp
pop
xor
scas
sub
add
dec
mov
clc
mov
clc
cld
loope
vmovhps
ret
clc
adc
add
clc
imul
add
mov
add
xor
add
outsb
in
cmp
jae
add
add
xor
add
mov
ljmp
in
sbb
fistpl
xor
add
pop
cmp
add
xchg
add
add
stc
mov
add
push
add
mov
sar
jns
lock
add
push
daa
push
pushl
daa
add
and
xchg
or
cmpsl
clc
leave
jno
add
in
cmp
add
loopne
div
jmp
sbb
mov
or
add
lods
in
call
mov
xchg
ret
push
add
add
out
xlat
popf
dec
adc
add
mov
or
xlat
imul
jnp
cltd
clc
sbb
fcmovu
call
add
cmp
cltd
xor
add
mov
add
pop
adc
add
data16
push
add
cs
hlt
xchg
in
pop
add
add
add
shlb
add
xor
repnz
add
push
imul
jmp
add
or
mov
xchg
ret
aam
xor
add
jmp
adc
add
nop
jmp
or
adc
add
movsb
clc
dec
bound
add
clc
scas
and
add
sbb
add
add
sub
enter
popf
dec
mov
add
add
add
add
sub
clc
data16
in
mov
jno
add
outsb
mov
stos
lret
xchg
ret
mov
or
icebp
add
or
je
add
jp
xchg
jae
add
clc
mov
clc
inc
clc
scas
cmp
pushf
xor
xabort
test
add
mov
iret
or
pop
mov
jmp
sbb
mov
inc
clc
fcmovnu
lods
jl
clc
xchg
out
xchg
sub
rcrb
movsb
clc
jns
in
and
mov
add
add
add
sbb
scas
outsl
push
into
and
add
adc
add
add
out
ret
clc
sbb
sbb
inc
add
adc
add
push
add
add
clc
aaa
jbe
aas
push
add
call
lret
cmp
clc
xchg
jmp
mov
nop
jmp
add
pop
lea
push
sahf
arpl
add
add
add
dec
pop
dec
jecxz
inc
add
adc
add
cs
or
int3
das
xchg
mov
fnstenv
mov
mov
clc
cmp
mov
add
sarl
cli
jg
inc
clc
xchg
xor
add
add
aam
mov
mov
cmp
loop
mov
jl
clc
lea
inc
add
int3
fs
stc
iret
add
add
jl
mov
clc
mov
cmp
jnp
xor
add
mov
xchg
pop
xbegin
nop
jmp
bound
subl
add
mov
add
call
mov
sar
mov
sub
add
xchg
cmc
sub
add
leave
adc
add
pop
mov
sbb
clc
push
jbe,pt
xor
add
clc
jp
add
test
add
jp
cwtl
sbb
dec
mov
sti
ss
add
lods
xchg
pusha
add
mov
clc
and
lret
add
es
sbb
cwtl
and
add
test
sahf
add
add
add
out
mov
clc
imul
sub
out
lods
push
cmp
clc
sub
loopne
mov
out
jmp
std
jb
add
nop
push
outsl
and
addr16
sbb
mov
popa
notb
pop
pop
mov
aaa
sbb
jns
mov
clc
ds
test
ljmp
mov
pop
ljmp
stc
mov
push
clc
repnz
imul
add
add
aad
jns
push
ss
repnz
repz
add
cmp
adc
add
outsb
jae
add
add
add
push
add
es
cmp
cmc
int
daa
clc
inc
clc
add
add
sbb
xor
add
fcmovbe
fstpt
clc
lock
add
add
clc
das
in
jb
add
jne
cmp
add
repnz
add
clc
adc
add
clc
jne
clc
js
dec
clc
jl
mov
push
add
dec
bound
add
clc
stos
xchg
fisubrs
add
shrl
inc
clc
sub
mov
clc
test
repnz
mov
dec
sar
lock
inc
clc
addr16
sub
fidivrs
clc
push
add
clc
loopne
cmp
clc
mov
std
mov
add
jmp
sub
lea
aam
clc
lcall
add
add
mov
mov
xchg
push
add
aam
inc
clc
pop
vmovaps
add
sahf
cltd
std
jmp
add
mov
pop
xor
xor
add
pop
pop
sbb
add
add
mov
xchg
fcmove
test
add
lea
xchg
push
xchg
ljmp
or
add
jne
pop
mov
fwait
cmp
clc
xchg
adc
add
lods
push
push
add
daa
clc
in
jg
clc
jne
ljmp
clc
mov
movsb
clc
and
add
inc
add
cmp
iret
outsl
loop
test
setge
clc
pop
lahf
loope
mov
add
lret
mov
adc
add
add
cmp
into
movsb
clc
insl
xor
add
xor
add
jg
nop
jmp
add
add
pop
sahf
mov
mov
nop
jmp
jo
xor
clc
jp
add
and
add
add
ds
pop
sub
add
sbb
sub
fisubl
add
lcall
clc
outsb
inc
clc
movsl
clc
mov
fucomip
mov
jl
add
and
add
mov
nop
jmp
xor
add
xchg
test
jmp
jo
add
pusha
add
xor
add
repz
jle
add
jnp
xchg
out
clc
xchg
inc
clc
lock
add
scas
loop
lahf
es
daa
clc
mov
jmp
add
gs
push
add
ljmp
mov
daa
lret
popa
add
fcmovnb
clc
es
mov
add
inc
clc
jecxz
pop
clc
inc
clc
adc
add
popf
ljmp
add
inc
add
and
add
and
add
add
sbb
repnz
stos
mov
clc
add
xchg
pusha
add
xchg
lret
sub
int3
mov
add
in
pop
jns
sbb
jmp
int3
sti
jp
push
outsl
sub
push
nop
jmp
or
pop
sub
add
add
and
add
mov
nop
jmp
sub
jo
aaa
or
xabort
mov
lret
in
nop
push
clc
mov
jg
jae
add
push
add
iret
cmp
sub
inc
push
mov
xchg
ret
int3
mov
push
ljmp
push
mov
xchg
ret
lea
jns
push
js
jmp
lea
insb
or
clc
daa
clc
cmp
clc
lods
cmp
push
add
adc
add
popa
add
sbb
out
enter
inc
add
lcall
add
mov
sar
clc
filds
clc
xlat
mov
repnz
add
rclb
add
dec
cmp
add
jle
mov
add
imul
pushf
cmp
jne
clc
cmp
divb
add
or
ret
clc
data16
cmp
xbegin
pop
jae
jmp
cld
add
aaa
jge
xor
in
imul
add
xchg
dec
adc
clc
icebp
movsb
clc
es
adc
add
clc
inc
clc
mov
ret
clc
dec
add
add
dec
out
adc
lret
add
add
push
popl
nop
jmp
aaa
pop
pop
test
daa
xbegin
jno
add
fsubrs
clc
lret
clc
or
jae
add
jge
sar
mov
out
or
std
add
add
inc
clc
fisttps
pushl
nop
jmp
push
jns
pop
sbb
clc
xor
add
xabort
sub
movsb
clc
cmp
inc
add
add
add
clc
adc
add
mov
sub
push
add
or
add
in
pop
notl
add
mov
xchg
mov
sbb
into
adc
add
add
cmp
sub
cmp
lret
add
bound
add
cmp
sub
add
into
push
clc
add
add
clc
jmp
sbb
xor
add
push
insb
int3
lock
clc
dec
rcrl
pop
jae
add
mov
test
popf
sub
add
in
cmp
cs
mov
insb
insb
nop
jmp
or
or
mov
clc
and
add
inc
clc
ds
mov
add
testb
xor
add
sub
push
clc
movsl
clc
add
sbb
mov
xchg
ret
or
jns
add
cmp
add
cmp
mov
dec
test
cmp
sbb
sti
add
push
or
sbb
add
dec
into
or
je
xor
ds
sub
mov
push
add
pop
into
gs
arpl
add
clc
lahf
aaa
adc
add
clc
movsb
clc
ljmp
decl
push
add
addr16
scas
inc
clc
clc
xor
jae
add
imul
call
les
jmp
aam
cmpsb
aad
pop
test
push
cs
add
pop
inc
clc
mov
call
nop
jmp
cmpsl
cmp
clc
mov
fdivrs
clc
pushl
nop
jmp
sub
gs
dec
add
nop
and
add
add
clc
cmp
add
xor
add
nop
jmp
add
aad
mov
nop
mov
add
add
mov
xchg
push
add
clc
sub
add
sub
add
add
nop
jmp
add
adcl
fs
jo
add
in
mov
rol
clc
mov
xor
add
dec
and
add
clc
push
add
cmp
pop
cmpsb
clc
push
add
xabort
clc
outsl
bound
add
add
pop
cmc
mov
and
add
movsb
clc
add
add
rcll
jmp
pop
test
mov
clc
dec
fldenv
add
push
add
stc
cmp
clc
roll
sar
add
sbb
test
pop
in
mov
add
cli
in
jmp
push
addr16
dec
scas
lret
add
ret
clc
sti
push
and
fidivl
add
add
mov
add
ljmp
nop
jmp
mov
or
test
cmp
adc
push
add
insb
cmp
xchg
mov
ret
xchg
jecxz
clc
and
add
adc
add
mov
xor
add
test
add
clc
add
add
sub
add
int3
push
jb
add
sahf
cmp
add
jmp
sub
mov
sub
ret
sti
adc
add
add
add
cmpsl
clc
jbe
clc
call
clc
loope
flds
adc
add
clc
cmp
inc
clc
cmp
sub
roll
add
jecxz
mov
clc
stos
pushf
jmp
add
sub
aas
push
clc
and
loopne
mov
sar
or
clc
pop
out
xchg
cmp
add
add
jne
cmp
add
jmp
cmp
and
add
aad
mov
xchg
fistpl
add
fldenv
add
into
fwait
dec
test
xchg
in
insb
test
inc
add
sarb
add
sub
pushl
push
mov
xchg
ret
pop
aaa
adc
add
push
movsb
clc
sar
mov
jbe
add
call
add
bound
add
clc
pop
inc
add
jmp
add
shrl
je
ljmp
add
sub
clc
cmc
sbb
inc
pop
add
sbb
aam
sbb
mov
and
xor
add
clc
dec
nop
sar
imul
adc
add
clc
ljmp
nop
jmp
dec
mov
push
jns
xor
arpl
add
imull
mov
add
fcmovnb
clc
or
shlb
add
fnstcw
sub
mov
mov
popf
mov
imul
clc
int
add
test
jecxz
int3
in
jl
and
add
add
push
sbb
add
add
mov
clc
lret
pusha
add
sbb
add
mov
jmp
aaa
jo
or
clc
pushf
xlat
test
sar
loope
filds
add
push
add
mov
push
je
clc
imul
add
cmp
stos
test
pusha
add
repz
mov
or
add
push
push
testl
mov
jle
mov
add
aaa
and
add
stos
jbe
jne
xor
add
mov
clc
mov
clc
mov
movsb
clc
fs
xchg
es
into
iret
or
dec
jno
add
cmc
push
push
nop
jmp
xor
gs
bound
decl
jmp
jns
and
insb
add
sbb
add
mov
dec
cmp
clc
lcall
and
add
clc
repnz
add
clc
jne
clc
cmp
mov
add
sbb
jmp
mov
aam
aam
js
push
add
out
xor
add
inc
clc
fbld
imulb
mov
je
shll
add
adc
add
mov
add
add
movl
xlat
pop
xchg
dec
xor
add
add
es
loop
sbb
push
add
cs
xchg
ret
clc
dec
imul
add
clc
lcall
clc
jmp
add
ret
clc
inc
clc
push
xor
jecxz
in
mov
lods
mov
pop
clc
lcall
cmp
clc
in
cmp
add
enter
out
push
sub
nop
jmp
or
sub
xor
add
add
sub
jmp
js
mov
js
int3
fldcw
dec
test
pop
jnp
mov
and
add
das
mov
cld
sbb
jmp
push
jo
imulb
add
fcmove
push
jl
nop
jmp
int3
aam
aas
frstor
add
outsb
test
dec
cmp
xchg
mov
add
incl
divl
or
clc
adc
mov
clc
or
jae
add
add
test
shlb
add
sbb
nop
jmp
pop
jns
xor
stc
lret
jle
clc
xchg
daa
clc
and
add
xchg
out
xor
xchg
inc
clc
icebp
mov
lea
data16
mov
cmp
int
hlt
and
add
xchg
mov
clc
jne
add
sbb
hlt
lcall
adc
add
testl
add
or
and
add
clc
imul
nop
jmp
add
idiv
sti
add
mov
sbb
nop
jmp
aam
or
aas
into
cmp
int
cmpsb
clc
and
or
add
jo
add
lea
imul
add
add
out
push
push
add
cmp
mov
push
add
jmp
clc
gs
inc
clc
sub
add
sbb
xor
add
inc
add
repnz
out
xchg
es
mov
lea
add
push
mov
nop
jmp
add
jns
add
in
xabort
insb
mov
and
std
inc
add
push
lcall
mov
xchg
ret
pop
and
mov
clc
push
add
rcrl
jp
clc
lcall
add
jle
add
mov
add
cmp
jecxz
call
cli
imull
sub
dec
sub
fstp
aam
xchg
enter
clc
add
mov
pop
aam
xor
add
clc
cld
ret
loop
addr16
test
pop
ret
clc
adc
add
clc
xchg
inc
add
mov
jne
sti
out
cmpsl
clc
fs
or
add
mov
add
clc
or
clc
outsl
mov
xchg
or
clc
fiaddl
add
jo
add
aas
xor
add
clc
lret
stos
sbb
mov
clc
sahf
dec
test
add
push
xor
add
bound
add
std
or
sarb
mov
push
add
lret
add
sbb
data16
mov
clc
xchg
and
cmpsb
clc
in
and
add
push
xabort
push
add
jp
clc
fs
pop
cmp
insl
adc
add
add
add
mov
clc
outsb
fdivrs
sbb
clc
cmc
ret
clc
sub
add
add
inc
add
adc
add
clc
mov
fldt
or
clc
fimull
clc
dec
xbegin
add
popf
adc
add
fwait
mov
xabort
clc
inc
add
ret
clc
and
add
add
or
clc
out
and
add
mov
fs
jmp
sbb
push
push
xchg
out
setb
clc
jl
idiv
sar
cmpsl
clc
mov
push
clc
mov
clc
inc
clc
inc
clc
cmp
and
repz
out
mov
pusha
push
mov
xchg
ret
jno
cld
add
clc
mov
clc
or
clc
xchg
notl
xchg
xor
add
fsubrs
nop
jmp
push
or
add
dec
jne
pop
push
add
call
jmp
insb
mov
push
sbb
pop
jp
dec
jge
clc
cmpsb
clc
daa
clc
cmp
xchg
jno
add
add
shl
out
loopne
mov
sti
out
pop
icebp
mov
jmp
fsub
clc
pusha
add
sar
data16
ret
clc
loop
ljmp
add
jle
clc
enter
push
repz
div
mov
add
out
negb
clc
jge
into
adc
add
add
jnp
xchg
ja
clc
add
add
js
clc
mov
add
divl
add
add
add
pop
cmp
clc
cmp
in
push
lock
add
clc
aam
dec
decl
test
add
nop
jmp
aam
add
mov
push
cmp
sub
dec
dec
xor
add
and
add
xchg
das
xchg
clc
jp
sbb
adc
add
add
frstor
insl
pop
sub
clc
shrb
jno
add
sti
imul
add
lahf
cmpsl
clc
insb
in
adc
add
fimull
imul
nop
jmp
add
add
sub
add
mov
ficoms
add
clc
decl
sbb
add
pop
add
aaa
add
adc
add
mov
inc
clc
mov
addr16
int3
ret
push
mov
add
add
cmp
idiv
test
loope
jb
add
add
out
pop
pop
insl
mov
xor
add
add
pop
out
inc
add
dec
inc
clc
sub
dec
test
add
ja
adc
add
clc
int
add
decl
mov
mov
int3
push
cmp
add
cmp
clc
mov
pop
hlt
clc
xabort
popf
jecxz
push
add
mov
clc
xchg
cmp
clc
mov
xchg
out
lods
or
clc
adc
add
jle
clc
add
mov
add
cmp
jp
mov
push
setae
insb
pusha
add
std
ljmp
add
pop
fisttpll
pop
mov
ret
clc
push
data16
rcrb
add
clc
push
add
mov
add
jp
cmp
mov
add
fidivrs
dec
sti
lcall
sbb
xchg
mov
movsl
clc
addr16
aam
mov
add
add
add
add
insb
sub
sub
add
clc
xor
add
mov
sub
add
add
add
add
mov
fs
pop
clc
lret
je
in
hlt
roll
push
push
push
mov
xchg
ret
add
fisubs
mov
lret
cmp
clc
pop
mov
in
cltd
neg
cmp
clc
stos
clc
push
add
ljmp
cmp
dec
cmp
mov
push
mov
add
mov
clc
bound
add
clc
push
es
popa
add
ja
clc
sbb
dec
cmp
jmp
add
inc
insb
cwtl
add
cmp
pop
xchg
jnp
sar
xor
add
arpl
jmp
bound
das
sub
add
or
add
add
mov
add
clc
in
pop
fadd
clc
push
add
shl
fcomip
pop
push
add
nop
jmp
aad
js
clc
sub
xchg
add
add
dec
sbb
add
lods
mov
repz
add
add
add
shrl
pop
jb
add
clc
mov
clc
sahf
push
xabort
and
add
filds
cmp
add
sub
clc
aam
cmp
clc
mov
xchg
pop
clc
cs
fnstcw
inc
add
sbb
jae
add
adc
jl
add
es
xlat
outsb
loopne
std
jmp
nop
jmp
jp
pop
jns
dec
pop
cmp
clc
jae
add
push
or
mov
mov
fs
outsl
jno
add
clc
rcll
jmp
jno
notb
jo
sti
cmp
add
clc
cmp
repz
out
pop
push
clc
insl
pop
cmp
jns
gs
jns
add
scas
mov
inc
add
imul
add
clc
pop
mov
clc
repz
cli
clc
mov
cmp
clc
gs
adc
add
shlb
push
fdivr
cmp
and
xchg
lret
loop
lcall
mov
push
std
icebp
pusha
add
mov
add
xor
add
repz
jge
clc
adc
add
popa
add
jo
add
aam
data16
mov
lods
icebp
clc
das
add
add
loope
pop
sarl
lahf
mov
add
adc
add
add
int
sbb
adc
add
clc
test
fildl
add
aad
loop
pop
adc
jae
add
in
push
scas
sar
js
push
add
out
push
jmp
xor
cmpsb
clc
dec
gs
inc
clc
mov
adc
jmp
fs
daa
add
add
mov
add
add
lods
out
insl
mov
pop
add
nop
jmp
gs
xor
adc
add
scas
ret
add
es
xor
add
icebp
es
dec
or
pop
jmp
in
rorl
gs
fst
inc
add
jae
add
clc
xchg
in
movsl
clc
jmp
xchg
sahf
xchg
outsl
fsin
int
out
sbb
popa
add
mov
jl
xbegin
push
mov
cmp
push
dec
jl
jle
pop
lcall
and
add
sbb
inc
add
mov
add
sti
cwtl
xor
or
add
and
jno
add
nop
jmp
pop
adc
adc
add
lock
scas
xchg
push
add
inc
clc
push
outsb
mov
push
mov
xor
clc
movsb
clc
ja
clc
mov
mov
cmpsl
clc
or
add
clc
inc
add
jmp
clc
mov
mov
clc
repz
and
add
clc
loop
loop
jbe
shr
jle
xor
add
stc
clc
pushf
outsl
cmp
push
add
mov
jb
add
ds
add
scas
sbb
fiaddl
add
inc
clc
dec
jl
clc
mov
es
int3
jnp
inc
clc
lret
outsl
inc
clc
sbb
push
adc
add
add
pop
adc
xor
add
ja
mov
cmp
cmp
popf
cld
xor
scas
mov
add
add
push
add
xlat
pop
scas
adc
lret
jge
push
lea
nop
jmp
pop
jp
add
jle
adc
add
ja
clc
mov
mov
scas
addr16
mov
add
dec
inc
clc
ljmp
push
sub
clc
cmpsl
clc
sub
clc
or
jl
xor
add
sub
add
cmp
clc
pop
mov
mov
dec
pop
clc
scas
mov
push
ja
pop
cmp
jecxz
das
data16
xor
add
inc
clc
mov
xabort
clc
fs
jne
push
nop
jmp
lock
add
fildl
clc
and
add
test
loope
jl
fidivs
outsl
iret
cld
pop
incb
dec
xchg
popf
sbb
imul
nop
jmp
xor
push
sti
fdivp
jmp
fbstp
cmpsl
clc
mov
ss
cmpsl
clc
dec
jbe
jnp
dec
notl
add
inc
add
std
fiaddl
add
jno
add
adc
add
push
add
movsl
clc
stos
loope
cli
inc
add
mov
clc
or
xbegin
push
clc
sub
add
dec
dec
test
pop
sub
push
sbb
mov
rcll
add
lahf
adc
add
adc
sub
add
stc
js
test
add
loop
aam
mov
in
fistpll
xchg
inc
clc
aas
xchg
inc
clc
enter
add
js
sub
and
add
sahf
jecxz
test
in
mov
sar
arpl
add
or
jl
jb
add
add
add
push
add
sbb
jmp
aam
aam
pop
popa
mov
or
clc
popa
add
inc
add
push
xor
add
add
add
xchg
add
add
clc
inc
clc
lods
scas
iret
data16
cmp
mov
cs
clc
xchg
fwait
mulb
add
add
mov
add
pop
xor
add
jg
clc
ljmp
je
cmp
enter
clc
dec
mov
fcompl
clc
and
add
loope
and
add
mov
mov
clc
imul
es
ljmp
jne
pushf
aas
test
mov
loop
jle
xbegin
inc
clc
in
test
clc
sbb
nop
jmp
fidivrs
mov
mov
xchg
std
mov
xchg
cmp
cmp
clc
push
add
sar
decb
or
add
sub
pop
push
add
popf
movsb
clc
js
or
cmp
add
add
xchg
sbb
xor
add
lock
mov
aad
lods
adc
add
add
xchg
mov
imul
add
push
lahf
xchg
sbb
adc
add
sub
sub
cld
jne
add
and
add
mov
xor
add
push
icebp
frstor
pop
and
add
add
add
xor
cmp
arpl
add
pop
sar
add
in
mov
loope
pop
xchg
xchg
cwtl
xlat
adc
add
lods
adc
add
rcrl
dec
push
add
cmc
clc
sub
add
add
sbb
add
mov
lahf
xor
add
push
clc
and
add
add
rorb
clc
nop
insb
repz
xchg
or
add
sbb
or
add
jmp
add
popa
jo
int3
dec
sar
clc
outsb
push
sub
add
or
add
decb
lret
sbb
add
clc
cmp
clc
add
xchg
ds
push
mov
xchg
ret
negl
mov
add
inc
clc
mov
aas
xchg
dec
mov
imul
lods
insl
mov
cmp
test
mov
add
cwtl
inc
add
push
ret
into
add
add
adc
add
inc
add
cmp
fcoms
inc
clc
dec
ret
outsb
int
clc
insl
movsl
clc
cmp
fdivrs
jb
add
imul
clc
xchg
jmp
int
lahf
clc
inc
clc
mov
test
dec
inc
add
or
aad
add
sbb
rclb
cmpsb
sbbl
add
lods
ret
imul
vaddps
mov
fldenv
add
add
test
cmpsb
clc
cmp
jle
mov
add
mov
add
add
mov
nop
jmp
cmp
cld
push
mov
cmpl
mov
inc
add
loop
xor
add
clc
dec
dec
inc
add
sbb
add
push
mov
ret
nop
jmp
js
js
lock
push
push
cmpsb
clc
sbb
add
stos
cltd
std
cmpsb
clc
xchg
sub
jmp
nop
jmp
testb
cld
jp
push
cmpsb
clc
add
data16
fnstsw
sub
mov
dec
push
clc
bound
add
cwtl
notb
add
add
add
and
add
xor
clc
lcall
mov
xchg
ret
bound
xchg
nop
push
add
mov
add
xor
add
mov
add
sub
mov
inc
add
sar
clc
lcall
pop
add
add
xchg
lcall
add
gs
mov
popf
push
add
stc
pop
cltd
cld
test
cwtl
mov
add
shll
add
adc
add
push
jp
push
add
sub
clc
adc
add
add
and
pop
sar
pusha
add
jnp
jg
dec
mov
add
cld
out
pop
clc
mov
push
stos
ja
add
mov
xabort
dec
fsubl
add
add
pop
xchg
jno
add
mov
jecxz
ret
clc
stos
xor
add
add
ds
pop
mov
clc
inc
clc
fwait
repnz
insl
test
cmp
aas
nop
jmp
int3
add
or
fadd
clc
pop
clc
scas
arpl
add
test
push
add
pand
add
or
xor
add
sub
or
je
add
jnp
add
aad
clc
sarl
lcall
add
ja
add
dec
popa
add
loopne
frstor
cmc
xlat
inc
add
pop
jp
int
add
rcrl
mov
pop
jge
cltd
ja
add
sub
cld
mov
xlat
ret
clc
mov
add
inc
add
adc
add
sar
clc
cld
xor
clc
es
in
mov
cmp
es
mov
mov
and
add
jno
sbb
jmp
sub
adc
outsl
iret
cmp
ret
clc
and
add
je
aam
clc
iret
inc
add
xabort
push
add
and
add
clc
pop
loopne
fbld
int3
sbb
clc
xabort
inc
clc
cmpsb
clc
xchg
jp
add
inc
add
hlt
in
adc
add
pop
cmp
nop
shrl
cmp
mov
inc
add
nop
jmp
aam
jno
imul
arpl
add
clc
adc
add
repnz
add
dec
call
add
mov
nop
cmp
adc
add
js
inc
add
cli
or
clc
dec
lock
clc
lret
sarb
mov
nop
jmp
push
xor
dec
mulb
aas
mov
jnp
inc
clc
sbb
sbb
or
jns
jg
add
sub
lods
dec
div
sbb
push
outsl
nop
jmp
add
or
insb
add
add
add
clc
jno
add
pop
inc
add
shrb
movsb
clc
mov
push
xor
add
sti
sbb
clc
pop
or
xor
clc
jle
cmp
int
inc
add
and
add
add
cmp
clc
popa
add
aaa
xchg
movsl
clc
dec
pop
adc
add
add
into
dec
ss
add
xchg
or
jge
or
cmp
xchg
sub
nop
jmp
inc
add
and
sar
mov
pop
clc
or
clc
mov
faddp
clc
push
xchg
cli
arpl
add
add
movsb
clc
add
add
clc
cli
cmp
add
ret
clc
pop
clc
mov
mov
test
js
xor
add
push
mov
xchg
ret
cmp
push
add
xchg
xor
and
add
mov
popa
add
xchg
or
out
jmp
je
add
xchg
cli
xor
add
jnp
add
out
call
jmp
xor
push
pop
add
in
test
add
xor
add
clc
push
and
sbb
dec
enter
add
xor
add
loopne
pop
xor
add
add
xchg
into
imul
loope
mov
test
filds
add
enter
jmp
aam
sub
add
jmp
gs
sbb
xor
add
aam
jmp
fwait
mov
and
ror
inc
clc
inc
clc
out
das
xor
add
clc
xor
push
mov
nop
jmp
or
add
add
add
clc
pop
clc
mov
clc
lock
add
das
mov
add
ss
xchg
cmp
mov
add
imul
sbb
mov
clc
mov
xlat
mov
add
clc
inc
clc
je
clc
mov
push
clc
fwait
jns
add
je
mov
add
mov
jg
adc
add
clc
push
inc
add
insb
fldcw
insb
and
add
clc
mov
add
adc
out
cmovbe
lcall
add
cltd
push
add
sub
pop
dec
lods
sar
clc
popf
xor
iret
mov
jl
pop
mov
pop
mov
scas
ror
sbb
clc
and
add
clc
xlat
add
add
add
push
add
nop
jmp
mulb
aad
clc
push
cmp
mov
push
mov
xchg
ret
sub
add
fwait
cli
out
in
xchg
add
add
and
add
add
iret
or
dec
push
mov
adc
add
pop
dec
or
enter
add
icebp
jne
clc
push
jecxz
add
add
flds
aas
fdivrp
push
nop
jmp
push
insb
cmpsb
sub
push
add
jno
add
gs
outsb
icebp
out
xchg
push
shr
nop
jmp
aam
divl
add
add
inc
clc
pop
sbb
mov
xchg
ret
divl
sti
and
add
rcrb
pop
and
add
add
arpl
add
clc
mov
mov
xchg
ret
add
clc
mov
clc
inc
add
xchg
push
data16
add
add
or
insl
xor
add
xchg
pop
test
cld
aaa
in
cmp
adc
stos
in
jmp
outsl
arpl
add
add
jns
xor
add
push
scas
das
mov
inc
add
cmp
and
jmp
add
cld
pop
insb
push
or
call
jl
add
sar
pop
add
add
clc
push
jl
add
aad
testl
mov
add
enter
ret
clc
in
mov
add
test
jmp
add
cltd
ja
push
sub
loop
arpl
add
add
add
add
xchg
jno
add
clc
cwtl
sar
out
lcall
or
test
and
add
scas
push
add
jmp
movl
xor
and
add
fstpl
sbb
mov
or
jmp
pop
sub
int
jle
add
sbb
add
cwtl
jbe
outsl
loopne
aam
add
mov
add
push
dec
pop
mov
xor
add
mov
jne
cmp
mov
out
xchg
mov
clc
xchg
xor
jmp
insb
cmp
clc
mov
jge
stc
fucom
clc
xabort
mov
incl
jmp
movl
add
fdivrl
int
adc
push
bound
add
or
cmp
add
and
push
mov
xchg
ret
push
repz
dec
cmp
jne
dec
or
clc
or
cwtl
push
add
and
add
jle
add
int
cmp
popa
add
or
xchg
in
js
addr16
pop
cmp
clc
or
push
dec
push
add
pop
jl
mov
negl
push
and
add
or
call
ljmp
add
add
jecxz
aam
fistps
add
inc
add
cltd
jge
gs
or
clc
in
mov
call
data16
and
add
add
in
sahf
adc
clc
cmp
mov
clc
cmp
clc
cmp
pusha
add
cmp
cmp
xchg
cmc
mov
cmp
clc
scas
cwtl
aad
clc
jl
sarl
mov
add
ret
clc
xchg
push
add
ror
mov
clc
jns
clc
dec
lea
jae
add
add
rclb
out
sub
xchg
ret
pop
aaa
xor
mov
fnstsw
clc
inc
clc
cmpsl
clc
lods
lret
inc
add
imul
xlat
xchg
adc
mov
xchg
dec
sar
das
push
sub
mov
add
xor
add
mov
add
je
add
jb
add
jle
clc
xchg
sub
nop
cmp
clc
mov
test
add
mov
nop
jmp
push
aam
dec
rclb
add
gs
xlat
ret
mov
add
out
ficompl
movsl
clc
pop
int
adc
lahf
pop
into
cmp
inc
add
sahf
fstpl
add
sar
add
cmp
add
push
mov
nop
jmp
cmpsb
testl
sub
clc
sbb
stc
iret
cmp
add
sbb
test
out
fisubl
add
xlat
mov
add
cmp
add
clc
sub
add
fildl
add
mov
jle
mov
clc
xchg
loop
dec
rcrl
clc
sti
jbe
add
adc
add
loop
xchg
fs
push
add
cli
mov
sbb
add
pop
sbb
or
nop
jmp
add
and
add
and
add
adc
add
mov
add
aaa
into
dec
dec
mov
add
add
out
ret
adc
add
add
add
xchg
je
clc
push
add
xor
add
mov
stc
int3
inc
add
sahf
fldt
xchg
sbb
jbe
clc
mov
test
mov
cmp
clc
xor
add
cmp
dec
icebp
mov
jmp
push
pop
jp
add
add
lret
pushf
sub
add
clc
aam
clc
ror
inc
clc
icebp
mov
bound
add
add
push
push
mov
clc
add
add
add
xor
clc
pop
shll
add
enter
cmp
clc
aaa
mov
jns
movsb
clc
jbe
icebp
aaa
cmp
sarl
jmp
sub
dec
out
arpl
add
mov
mov
xchg
mov
mov
sub
clc
fnstcw
test
jmp
lock
dec
pushf
test
add
xchg
add
add
clc
jmp
pop
cmp
enter
mov
pop
nop
jmp
mov
add
aam
mov
mov
xchg
cmp
add
add
or
cltd
icebp
mov
pushf
test
or
clc
mov
enter
fsubl
dec
adc
xchg
hlt
ja
jl
clc
popf
sbb
jmp
js
jns
or
mov
lods
lock
add
adc
add
add
loopne
add
add
clc
pop
insl
add
add
add
and
add
xor
add
add
inc
clc
mov
clc
jae
add
out
ss
aas
mov
add
add
add
clc
dec
mov
inc
add
jg
nop
cwtl
test
ret
clc
aad
imul
mov
int3
imul
pop
sbb
push
mov
xchg
ret
add
add
cmpsb
clc
or
clc
enter
clc
jnp
jne
nop
jmp
push
mov
gs
cmp
in
sahf
pop
hlt
adc
add
push
xchg
addr16
push
clc
mov
clc
or
clc
xchg
addr16
imul
pop
js
clc
es
sub
bound
add
mov
xchg
ret
add
dec
cmpsb
clc
add
add
lods
gs
ss
into
stos
cmpsl
clc
push
add
mov
dec
jno
add
int
call
xchg
push
push
add
pop
repz
inc
clc
dec
dec
lods
jno
add
fld
clc
stc
sub
add
pop
outsb
dec
mov
loope
or
gs
fstps
imul
nop
jmp
adcl
insl
sub
clc
scas
dec
aam
xchg
data16
push
add
add
mov
repnz
rol
clc
scas
jg
mov
push
dec
xlat
cmp
clc
jecxz
adc
push
nop
jmp
cmp
sbb
dec
movl
add
stos
adc
cmp
add
aam
add
jmp
add
xchg
hlt
lret
test
into
cmp
add
sub
add
inc
clc
and
loop
jno,pt
add
add
add
sub
cmpsb
sub
repz
push
jmp
add
nop
jmp
cmpsl
add
cltd
sbb
add
aaa
stc
inc
clc
cmp
jecxz
fisubs
add
cmc
popa
add
imul
push
sbb
clc
rep
clc
es
unpcklps
data16
cmp
fstl
add
adc
add
clc
push
xbegin
xabort
inc
clc
sbb
add
fsts
adc
add
add
jo
add
shl
clc
xor
add
fists
add
hlt
std
push
or
jne
add
mov
adc
add
dec
adc
add
or
imul
mov
dec
xbegin
nop
jmp
add
add
mov
daa
xabort
arpl
add
clc
cmp
clc
push
dec
outsl
aam
fnsave
data16
cmp
out
pavgw
jne
clc
dec
inc
clc
or
sub
ja
xor
add
dec
sub
add
cmp
mov
jg
add
mov
adc
add
jg
call
dec
ja
clc
xchg
jae
add
movsb
clc
cltd
push
add
xbegin
je
clc
pop
sbb
nop
jmp
lock
or
add
xchg
clc
test
movhps
add
mov
mov
nop
jmp
bound
aaa
pop
daa
clc
clc
fldcw
pop
push
jmp
aaa
popa
bound
add
jne
add
arpl
add
add
dec
pop
lret
pop
jno
add
add
test
loope
mov
jecxz
test
test
fwait
mov
or
add
mov
addr16
jl
clc
test
sbb
ret
xchg
fs
movsl
clc
xor
add
add
clc
cwtl
loope
sub
add
or
cmp
mov
dec
aad
clc
mov
or
push
add
nop
push
arpl
add
add
cmpsb
clc
inc
clc
cmp
add
iret
mov
add
add
clc
jbe
clc
dec
clc
lret
pop
nop
jmp
add
aaa
test
sub
leave
and
add
mov
nop
jmp
sub
cmp
clc
sbb
pop
jo
add
clc
imul
fs
sar
add
out
push
dec
arpl
add
cwtl
mov
fnsave
cmpsl
clc
jl
clc
inc
add
sahf
imul
add
add
clc
xor
add
clc
dec
inc
add
sbb
cli
or
icebp
push
add
into
add
add
clc
clc
int
add
mov
imul
add
lret
mov
icebp
jp
xor
cli
std
imul
clc
adc
clc
mov
push
add
outsb
dec
aas
push
add
nop
jmp
add
aaa
pop
cld
jp
test
cltd
cwtl
fwait
std
hlt
lods
or
popa
add
sahf
cmp
add
add
cmp
clc
xor
add
add
and
sbb
jmp
or
popa
add
and
out
jl
and
clc
lret
adc
add
xabort
add
dec
call
subb
add
add
into
sbb
stos
ljmp
cmp
adc
add
adc
add
clc
fimuls
sub
add
add
scas
hlt
pop
fwait
mov
pop
and
add
add
add
pop
clc
cmp
add
or
jo
add
test
push
sti
fnstsw
clc
out
or
clc
cmp
inc
add
add
add
in
fwait
sub
outsb
pop
in
imul
clc
cmp
sti
xor
add
and
add
inc
add
mov
inc
add
aad
add
ljmp
bound
add
sub
in
or
add
jp,pn
sub
clc
and
add
add
dec
sti
xchg
repz
out
sbb
clc
lret
mov
clc
call
and
add
jmp
pop
js
aam
mov
add
add
and
add
cmp
jo
add
inc
add
dec
jae
add
int3
adc
add
adc
dec
adc
add
mov
jmp
add
or
movl
inc
add
fwait
xor
xchg
loop
hlt
dec
jns
pop
clc
nop
aam
inc
add
daa
clc
dec
sub
cli
loopne
movsb
clc
inc
clc
jno
add
cmp
add
add
add
ret
int3
xchg
mov
clc
in
jo
add
mov
clc
sar
add
loope
mov
popa
add
add
add
add
fisubl
mov
clc
and
sti
cmp
dec
xabort
mov
mov
adc
add
loope
ret
clc
leave
or
push
add
adc
adcb
sub
or
add
jecxz
cmp
lods
xor
add
adc
add
loope
sar
mov
aaa
aam
clc
enter
mov
add
fadds
add
add
clc
pop
clc
xor
add
cmp
sub
jmp
fimuls
ja
arpl
add
add
clc
mov
loope
je
clc
ds
add
leave
cmp
test
add
sub
clc
daa
clc
and
mov
cld
stc
push
stos
xchg
enter
xchg
sar
add
add
repnz
leave
xor
add
add
add
out
lods
mov
rcrl
clc
in
mov
add
lret
mov
clc
fimull
ret
clc
dec
xor
add
nop
jmp
idivb
fisubrs
fadds
add
loopne
xor
lret
pop
jae
add
jp
cmp
or
clc
mov
xor
add
sub
ja
movsl
clc
push
mov
nop
jmp
addl
rorl
clc
fwait
test
add
nop
xchg
push
add
add
add
add
adc
push
jmp
nop
jmp
mov
add
add
pop
lret
decl
outsb
inc
add
aaa
add
fnstsw
inc
clc
neg
shrl
xor
add
clc
aam
xchg
mov
mov
pop
mov
add
shl
inc
add
out
clc
in
mov
jmp
sbb
gs
sti
add
movsb
clc
in
popf
call
clc
bound
add
add
mov
clc
pop
mov
scas
mov
xchg
cmpsb
clc
xor
add
xchg
cmp
mov
fiadds
add
outsb
leave
mov
add
shrb
add
out
test
jo
add
addr16
mov
xor
add
cmp
mov
push
test
and
add
xor
add
mov
clc
fcom
and
add
clc
outsl
jecxz
push
xchg
mov
add
add
scas
bnd
pop
cmp
and
add
es
push
xchg
push
jne
nop
jmp
mov
cmpsb
clc
add
add
add
lret
sub
clc
out
fs
mov
data16
and
add
sub
clc
lahf
jo
add
add
mov
clc
cmp
clc
push
sahf
xchg
in
push
cmp
xchg
adc
inc
add
in
jg
clc
fcomip
jp
xchg
clc
scas
dec
test
fdivrp
jmp
clc
loope
and
push
and
jmp
jns
inc
test
sti
pop
aam
cmp
sti
call
cwtl
pop
add
cmp
es
lcall
popf
cmp
imul
std
sbb
nop
jmp
push
inc
mov
add
add
sub
gs
fldenv
add
mov
jnp
clc
sti
imul
lea
fsubl
bound
add
rcrl
push
add
and
add
in
jle
lcall
add
leave
xchg
xchg
cs
sbb
sub
dec
fs
jno
repnz
clc
inc
add
cltd
and
add
nop
jmp
add
test
add
out
adc
add
cmpsb
clc
lods
sar
aam
mov
add
and
add
clc
dec
into
jmp
lock
das
test
clc
push
cmp
stos
cmp
divl
jle
add
divb
xchg
fxch
pushf
pop
xchg
cmp
ss
int3
mov
mov
and
add
cmp
lcall
mov
add
xlat
cmp
push
fldl
add
push
add
nop
jmp
add
add
fimuls
push
clc
stos
mov
nop
jmp
add
jns
test
fcoml
fsubrl
sar
and
add
add
or
inc
add
push
adc
xchg
js
or
add
nop
jmp
not
mov
add
add
fisttps
inc
clc
hlt
dec
mov
clc
jo
add
fs
mov
es
out
pop
hlt
push
xor
fdivrp
jns
cmpsb
cmp
scas
add
add
fisubrl
sbb
add
add
nop
jmp
insb
and
bound
sbb
jmp
ficomps
bound
or
jns
imul
clc
int
fisubs
clc
lcall
mov
push
mov
push
add
add
add
lcall
xor
add
int
jl
stc
out
movlps
add
sahf
pop
sub
clc
adc
add
add
add
or
clc
adc
add
test
cmp
xor
add
dec
xchg
mov
lods
sar
ds
enter
pushf
mov
clc
pop
int
add
mov
fs
pusha
add
mov
clc
cmp
or
mov
add
daa
clc
mov
inc
add
insl
stos
dec
arpl
add
mov
jmp
adc
add
aas
push
inc
clc
movsb
clc
test
popa
add
mov
std
sbb
scas
lods
imul
clc
jns
add
add
loop
fistps
jecxz
stc
jecxz,pt
insl
inc
add
pop
pop
pop
jns
push
add
clc
das
sbb
lods
nop
jmp
aam
push
push
test
sti
and
mov
nop
jmp
popa
sti
add
shll
add
add
jge
cs
cmp
nop
jmp
add
mov
pushf
push
mov
add
fisttpll
test
out
adc
add
clc
adc
popa
add
jecxz
aam
sbb
rclb
xchg
xchg
ret
adcl
add
nop
jmp
and
cmpsl
xor
pop
and
add
adc
insb
sbb
cmp
insl
and
add
movsl
clc
ret
clc
jecxz
movsb
clc
int
clc
je
xchg
jecxz
xchg
jmp
add
loope
lret
jp
inc
clc
cwtl
or
mov
push
jns
clc
lock
add
repz
repz
mov
in
lret
add
sar
mov
dec
and
add
mov
add
addr16
lods
xchg
jae
add
add
xor
outsl
into
ror
mov
xor
add
scas
fcmovu
mov
push
add
sbb
mov
add
add
out
popa
add
push
add
loope
shll
add
or
clc
in
sar
sub
mov
sahf
insb
ljmp
mov
ret
clc
mov
add
dec
mov
addr16
fldcw
shr
nop
jmp
adc
add
stos
mov
push
add
add
add
lods
adc
clc
insb
scas
inc
add
and
add
adc
add
mov
mov
add
lcall
add
repnz
add
clc
push
cmc
add
add
bound
add
test
pop
into
fs
sar
xchg
jp
adc
add
adc
add
loop
push
sub
clc
cld
and
add
and
add
push
mov
xchg
ret
xor
push
mov
shll
mov
add
jo
add
add
jne
add
nop
jmp
test
or
cwtl
daa
mov
fnstcw
dec
add
add
out
add
or
loope
cld
xchg
push
clc
gs
sub
clc
xchg
or
lcall
add
sbb
sub
add
sti
aam
jmp
test
mov
test
es
inc
add
mov
push
nop
jmp
orl
add
cmp
lahf
cmp
push
clc
cld
push
jb
add
clc
add
add
push
out
cli
ret
add
mov
cmp
incl
add
pop
cs
clc
pop
test
es
or
inc
clc
sahf
scas
cltd
xor
aaa
nop
std
mov
add
add
int3
int3
lock
mov
dec
pushf
popa
add
xchg
ljmp
clc
and
add
enter
sbb
in
adc
add
mov
pop
aas
xor
clc
cmp
clc
sahf
test
sub
push
test
nop
jmp
push
inc
add
push
jno
rol
clc
jo
add
add
divl
add
sub
add
stos
jg
sub
push
int
inc
add
sub
push
mov
push
mov
xchg
ret
dec
jno
dec
mov
sub
ja
ja
outsb
mov
mov
aam
push
pop
lea
dec
mov
add
add
fidivl
add
jnp
add
add
add
add
sub
add
clc
pop
adc
add
clc
cmp
sub
mov
data16
add
add
pop
into
ljmp
jmp
push
and
ja
dec
cmp
inc
add
sbb
mov
ljmp
xor
add
clc
out
and
add
or
or
or
test
fs
dec
out
sar
push
clc
jbe
clc
iret
jp
pop
sahf
add
add
add
inc
clc
and
imul
popa
add
test
push
ret
clc
pop
stos
adc
add
cmp
add
add
mov
in
cmp
add
pop
jae
add
mov
adc
daa
clc
es
xchg
dec
sub
jo
add
sbb
jge
sar
add
fs
mov
xchg
cmpsl
clc
test
push
add
pop
xor
add
insl
push
mov
cli
shlb
add
insb
roll
add
cmp
add
fwait
jecxz
test
add
push
add
inc
clc
cli
sbb
dec
add
inc
clc
xchg
mov
sbb
int3
sahf
or
add
lods
nop
jmp
add
add
and
add
clc
jmp
push
clc
and
add
clc
lcall
shrl
add
inc
add
mov
jmp
sub
in
push
cmpsl
clc
outsb
fisubrl
data16
mov
cmc
sbb
clc
push
push
nop
jmp
and
and
add
xor
add
fisubs
pop
and
add
pop
ss
stos
push
add
inc
add
sub
xor
add
add
add
cld
je
shl
outsl
pop
push
push
add
pop
sbb
imul
add
xor
dec
jbe
sbb
pop
popf
or
or
inc
add
gs
out
inc
add
push
clc
pop
fs
mov
clc
and
add
clc
mov
nop
jmp
add
add
add
clc
in
stc
sbb
inc
add
mov
add
aad
jae
add
mov
shlb
pop
pop
mov
xchg
pop
or
clc
or
int3
sbb
clc
push
push
add
mov
add
mov
add
cld
and
xor
add
clc
mov
clc
xor
add
mov
pop
cmc
test
je
xchg
jne
clc
cmpsl
clc
jne
add
cld
aas
jne
mov
clc
pop
clc
sub
xchg
sti
or
add
mov
xchg
dec
cmp
add
mov
mov
add
pop
fdivrs
loope
int3
out
into
push
add
mov
add
in
stos
in
jp
aaa
repz
jge
or
clc
rorb
ss
test
push
pop
lahf
cli
xchg
shr
call
add
add
clc
test
and
scas
jnp
pop
jp
xchg
outsl
mov
fbstp
popa
add
notb
add
push
mov
nop
jmp
cmpsl
ficoms
aam
add
mov
into
ss
lods
cld
sti
in
and
add
add
lea
add
mov
add
inc
clc
outsb
sbb
adc
add
add
mov
add
xor
add
add
adc
decl
call
jmp
add
add
fisttps
outsl
mov
mov
push
add
jns
clc
add
add
dec
add
aam
clc
enter
cmp
lahf
xlat
mov
insb
rcl
cmpsb
clc
bound
add
add
dec
mov
inc
clc
aas
push
add
push
jb
add
clc
xabort
mov
test
mov
insl
push
clc
iret
clc
enter
sar
inc
clc
test
clc
and
add
ss
shl
clc
jmp
xchg
or
jnp
clc
pop
sahf
or
sbb
mov
push
xlat
clc
mov
adc
add
sar
out
xor
mov
add
bound
add
clc
dec
cltd
sbb
inc
add
mov
add
dec
adc
add
enter
push
cmp
add
add
fs
inc
add
sbb
clc
add
add
out
mov
sbb
js
cld
sbb
mov
and
or
lcall
add
insb
pop
mov
add
cmovbe
movsl
clc
xlat
stc
stc
cmp
dec
arpl
add
movsl
clc
mov
add
xchg
insb
inc
add
cld
nop
cmp
or
mov
nop
shlb
add
clc
push
cmp
cmp
sub
sahf
aad
clc
fisttpll
addr16
xor
clc
loopne
mov
jp
clc
sahf
dec
sub
clc
movsb
clc
jg
out
and
add
clc
xor
adc
add
shlb
mov
add
push
add
test
add
aam
or
add
cmpsl
clc
xor
add
add
add
nop
jmp
and
aam
ljmp
cmc
inc
clc
xchg
fsts
add
and
clc
bound
add
clc
sbb
imul
clc
and
add
add
clc
pop
xor
add
fildl
inc
clc
std
decl
test
idiv
call
add
daa
idivl
add
xchg
icebp
aas
call
or
movsb
clc
adc
mov
pop
push
add
pop
mov
add
pop
add
add
inc
add
mov
pop
nop
jmp
xor
mov
scas
into
sbb
inc
cmp
mov
xchg
ret
inc
add
scas
popf
cmp
push
add
inc
add
and
add
clc
pusha
add
fwait
xchg
lock
es
lcall
pop
pop
jle
in
sar
clc
jbe,pt
mov
popf
aaa
or
clc
dec
xchg
inc
clc
xchg
hlt
push
pop
push
mov
xchg
ret
push
add
ret
clc
lret
insl
adc
add
add
add
sar
jne
nop
jmp
xor
push
add
mov
add
cmp
mov
add
push
gs
movsb
clc
out
pop
xor
add
or
bound
add
inc
add
jo
add
fildl
add
lret
out
mov
clc
ds
mov
add
jo
add
mov
nop
jmp
add
xchg
repz
inc
add
jecxz
pop
dec
push
nop
jmp
aam
mulb
sub
dec
push
xchg
mov
arpl
add
clc
jae
add
cli
mov
aas
pop
lock
add
xbegin
lods
lcall
add
incb
add
jb
add
cmp
jle
or
dec
xbegin
in
out
mov
add
jae
add
add
sbb
sbb
sti
outsb
dec
sahf
sub
dec
nop
jmp
add
add
aam
sti
xchg
mov
loopne
cmpsl
clc
xor
xchg
ds
xchg
mov
add
push
incb
add
aaa
push
pop
aaa
lods
and
add
ljmp
add
add
add
dec
mov
cmp
add
jbe
pop
repz
mov
add
clc
fcompl
add
and
add
bound
add
lods
leave
stos
xor
inc
clc
and
add
clc
mov
cmp
out
nop
jmp
sub
mov
pop
push
mov
xchg
ret
add
and
clc
jb
add
clc
push
clc
dec
xchg
xchg
push
call
jns
test
aaa
fs
or
mov
push
mov
nop
jmp
mov
add
xchg
xchg
and
add
clc
iret
mov
iret
sub
clc
and
add
sbb
mov
mov
dec
popa
add
push
and
add
pop
hlt
sub
add
scas
repz
into
mov
pop
xabort
mov
add
scas
jecxz
sbb
push
in
inc
clc
lahf
je
jo
add
add
nop
jmp
aaa
sti
xor
clc
dec
in
jns
clc
pop
ss
mov
nop
jmp
add
jno
add
or
lea
clc
push
add
ljmp
xlat
xor
add
dec
sub
pop
fmull
push
cmp
ret
dec
loopne
int3
imul
add
add
clc
lcall
out
clc
mov
dec
push
push
nop
jmp
js
add
lock
jns
adc
add
mov
loope
test
jb
add
inc
add
icebp
mov
je
addr16
xor
push
clc
cmp
add
clc
inc
clc
stc
fisubrl
test
jmp
test
fimuls
mov
sub
cmp
mov
mov
clc
mov
sbb
jmp
dec
inc
add
lock
cmp
mov
inc
clc
gs
jae
add
push
or
mov
inc
clc
mov
testb
out
jnp
inc
add
mov
push
add
cmp
add
out
dec
dec
and
add
push
xor
adc
add
and
add
fdivp
movsl
clc
cmp
xchg
test
popf
dec
push
call
fwait
push
add
pop
cwtl
push
leave
aad
fimull
add
jle
and
ja
add
dec
stc
add
add
inc
clc
addr16
std
pop
xor
xabort
add
ss
mov
adc
add
clc
lock
pop
push
jl
lcall
jp
add
cmp
pop
xor
icebp
mov
clc
pop
mov
add
fildl
add
jge
clc
xor
add
add
idivb
push
jmp
jns
cwtl
add
adc
add
lret
fs
push
and
add
daa
test
mov
add
add
push
add
shll
add
cmp
clc
cmp
add
cwtl
sar
clc
cmp
out
jg
pop
add
add
dec
adc
add
mov
divb
pusha
add
or
mov
clc
adc
clc
mov
int3
dec
cltd
pop
cmp
add
add
add
add
scas
ds
jl
test
clc
xlat
sub
out
test
jnp
aas
arpl
add
push
jg
mov
jp
mov
add
add
add
mov
clc
adc
sti
adc
add
add
add
inc
add
jl
clc
jnp
add
jmp
clc
mov
add
pop
int3
cmp
daa
clc
sar
ret
cmp
add
jle
jae
add
push
add
mov
stos
xchg
in
mov
sbb
mov
adc
add
inc
clc
adc
clc
jle
or
mov
clc
mulb
repnz
add
and
add
sti
sarb
add
fisubs
push
or
add
mov
mov
mov
rcl
inc
add
cmp
jae
add
add
fistps
sub
pop
addr16
pop
sarb
clc
aam
icebp
out
out
jg
mov
add
pop
pop
mov
gs
js
mov
add
pusha
add
ljmp
fwait
daa
clc
clc
mull
jecxz
testb
sbb
jne
add
sub
clc
in
cli
insb
jp
movsl
clc
xor
mov
mov
clc
gs
fwait
or
add
jg
clc
xchg
addr16
cs
and
push
add
sub
add
mov
mov
inc
clc
or
mov
push
add
fidivrs
add
test
add
xchg
outsl
cmp
mov
push
mov
xchg
ret
add
add
push
add
xchg
adc
add
and
add
enter
insb
jns
clc
js
je
jmp
nop
jmp
add
negb
mov
out
nop
test
push
add
add
add
cmp
test
xlat
and
add
scas
push
add
inc
clc
iret
xchg
cmp
clc
cli
aam
test
sti
pop
dec
cmp
xor
inc
add
dec
mov
jg
push
mov
xchg
ret
jp
divl
add
adc
add
add
testb
add
sbb
imul
clc
repnz
sahf
jbe
aad
jbe
mov
enter
movsl
clc
push
cmp
push
add
hlt
in
jb
add
clc
ss
add
or
mov
add
xor
add
push
jle
clc
jb
add
clc
sub
cmp
clc
cmc
pop
jb
add
push
adc
add
aam
jo
mov
adc
add
inc
clc
add
dec
out
loop
dec
inc
clc
sahf
into
sbb
jge
clc
push
clc
clc
push
add
dec
or
push
and
jmp
add
popf
dec
lret
in
mov
clc
bswap
inc
clc
pop
dec
push
jge
clc
arpl
add
loop
inc
clc
out
dec
adc
add
mov
clc
inc
clc
lret
mov
stos
mov
add
clc
cmp
clc
sub
mov
pop
clc
jae
add
mov
fcmove
jmp
jne
clc
jo
add
and
add
push
xor
out
sahf
mov
rcrb
xor
xbegin
and
xbegin
mov
clc
mov
add
mov
mov
mov
data16
aaa
cmp
sti
loop
test
jmp
clc
pop
mov
push
clc
add
add
clc
lea
jbe
clc
mov
in
add
stos
std
mov
add
mov
aaa
jo
add
mov
xchg
ret
cmp
cwtl
rcrb
out
nop
jmp
add
sub
clc
jns
dec
mov
ror
fwait
cmp
out
stos
cmp
js
add
fdivrs
int
mov
nop
jmp
add
add
jns
pop
lods
pop
inc
clc
gs
or
dec
xabort
add
add
add
add
imul
add
add
push
mov
xchg
ret
add
mov
cmp
xchg
mov
xor
add
lea
add
cmp
clc
push
add
mov
out
stc
pushf
push
out
leave
std
lods
inc
add
idivl
out
jge
imul
add
push
cmp
pop
push
add
nop
jmp
jo
pop
aam
push
fdivp
adc
add
gs
inc
add
pusha
add
jae
add
add
push
dec
and
add
add
lock
mov
mov
cmp
scas
fcoms
add
mov
mov
add
fnstenv
pop
pushl
add
push
mov
xchg
ret
sti
fs
cmp
add
jle
clc
scas
icebp
stc
gs
mov
sub
es
arpl
add
ret
hlt
add
add
clc
fxch
inc
clc
xchg
fnstenv
lret
clc
out
cmp
imul
cmp
lock
cmp
clc
and
add
xchg
in
test
movsl
clc
leave
inc
clc
mov
imul
adc
add
loop
jge
pop
stos
outsb
sbb
decl
add
add
push
adc
clc
sub
test
adc
add
add
jb
add
add
clc
dec
bound
add
mov
mov
add
stos
cltd
pop
pop
sbb
fdivrl
rclb
decl
or
sti
sbb
ja
movsb
clc
inc
clc
int3
add
clc
and
test
test
bound
add
cld
adc
add
and
add
add
mov
clc
pop
adc
jl
clc
xor
add
clc
push
xor
add
inc
add
fsubrs
jns
xchg
mov
add
xabort
add
pop
inc
clc
test
fcmovu
and
sahf
sysenter
mov
clc
mov
loop
kmovw
clc
cs
clc
push
add
mov
stos
lods
insb
mov
addr16
repz
bound
add
mov
cmp
or
clc
adc
add
clc
hlt
mov
into
mov
sar
in
sbb
sbb
test
adc
clc
lock
inc
clc
push
scas
iret
clc
xchg
dec
cmp
clc
rolb
cld
or
clc
sbb
cltd
xchg
sbb
mov
js
fidivrl
clc
fldt
jne
clc
ss
add
movsb
clc
mov
clc
or
clc
jecxz
movsb
clc
fwait
ljmp
mov
xor
lahf
es
adc
add
rcl
inc
add
cmp
sub
outsb
cwtl
mulps
outsb
sar
add
or
or
clc
inc
clc
loope
jp
add
mov
in
add
clc
cld
test
lods
hlt
test
xchg
and
push
ljmp
test
dec
add
add
jnp
fiaddl
cmp
jl
shll
push
and
mov
push
add
and
add
mov
nop
jmp
cmp
add
adc
add
std
fdivrl
movsb
clc
iret
mov
pop
add
fwait
xchg
outsl
inc
clc
aad
pavgb
mov
ja
test
out
cmp
pop
lret
jecxz
dec
or
clc
idivl
jns
stos
inc
clc
mov
add
add
add
add
push
push
nop
jmp
cwtl
add
add
fiadds
fisubs
cwtl
fwait
add
add
xchg
aaa
mov
add
scas
sub
clc
sbb
fstpt
lea
or
and
insb
cwtl
lret
clc
movsb
clc
ds
inc
clc
push
clc
jle
add
out
aam
loop
mov
clc
push
add
repz
rcrb
cmp
lahf
test
pop
pop
or
clc
into
add
add
add
mov
mov
loop
mov
fwait
cmp
clc
insb
pop
mov
clc
ss
stc
inc
add
add
adc
add
add
arpl
add
pop
ds
ficoml
mov
add
sbb
add
scas
lock
or
shl
clc
out
and
dec
sti
mov
js
ljmp
or
add
mov
out
repz
sbb
clc
fwait
out
repz
inc
clc
add
add
add
and
sbb
add
fs
nop
push
test
nop
jmp
int3
aam
or
add
clc
ffreep
clc
xor
add
inc
add
mov
clc
mov
movzwl
nop
jmp
push
jns
xor
imull
add
xbegin
adc
add
add
out
add
aam
out
adc
clc
xbegin
fcmovb
clc
ret
clc
mov
iret
mov
clc
fs
es
iret
int
jecxz
loop
movsl
clc
jecxz
lahf
dec
inc
clc
mov
adc
add
lods
xchg
add
fxch
xchg
ret
stos
ja
mov
add
xor
inc
add
imul
add
add
add
mov
inc
add
out
ret
and
add
clc
lock
mov
sub
aad
add
cmp
or
inc
add
xchg
into
jl
test
dec
stos
jecxz
mov
push
push
jmp
mov
daa
scas
icebp
pop
jp
enter
dec
sbb
add
add
xabort
clc
addr16
mov
clc
adc
add
das
loope
mov
pop
out
and
cld
mov
push
js
clc
cmp
pop
loope
clc
lahf
pusha
add
cmpsb
clc
mull
add
push
pop
mov
mov
sahf
aad
clc
cwtl
ficompl
es
jl
in
clc
dec
dec
sub
clc
jae
add
add
push
sub
or
clc
pop
out
stc
and
add
loopne
jl
lods
cmp
add
ss
out
out
testl
pusha
add
ljmp
loop
int3
and
add
mov
jl
insb
pop
sbb
add
add
xabort
clc
pop
enter
clc
sahf
out
fcmovu
fucomp
leave
out
stos
mov
push
jae
add
xchg
cmp
add
or
add
add
mov
inc
add
clc
sub
test
jg
clc
iret
test
xchg
mov
add
jbe
clc
push
mov
nop
jmp
daa
xor
jns
sbb
add
jge
add
push
je
nop
jmp
jns
xor
aad
clc
gs
lcall
pop
clc
xor
rcll
add
add
add
add
out
aas
inc
clc
out
push
push
nop
jmp
test
sub
cmp
jnp
mov
sub
nop
jmp
add
or
flds
shr
call
add
xor
add
add
mov
in
jnp
jp
clc
push
cmc
dec
in
cmp
clc
sbb
adc
add
cltd
xbegin
mov
add
jle
inc
add
cmp
arpl
add
jne
ret
clc
in
das
stos
jecxz
pop
jle
lods
cmc
rcrl
cmp
dec
pinsrw
clc
mov
add
out
out
inc
add
jge
ss
std
or
pop
clc
mov
nop
testb
mov
aam
addr16
cs
sub
lahf
xor
add
test
sar
cld
movsb
clc
out
or
push
cmp
mov
add
push
add
cmpsb
clc
mov
fdivs
fadds
add
add
clc
mov
push
fistpll
jb
add
clc
mov
add
test
add
insb
out
jge
jb
add
add
cmp
add
push
push
clc
rclb
clc
xor
xor
add
ret
clc
lods
loope
jns
mov
jne
pop
clc
pop
data16
and
add
cli
mov
popa
add
scas
outsb
leave
negb
aam
in
jo
add
and
add
add
add
jg
cld
std
decb
inc
add
insl
dec
call
jb
add
clc
and
add
test
nop
jmp
test
not
push
add
adc
add
mov
jl
inc
add
push
xor
mov
xor
add
pop
jl
xchg
stos
and
xbegin
clc
divps
mov
clc
mov
cmp
rolb
add
add
dec
pop
icebp
jecxz
mov
lods
fldl
mov
xchg
gs
jl
clc
cmc
jnp
ljmp
xor
add
psubusb
icebp
out
sbb
clc
scas
loop
xchg
ret
jge
clc
and
add
sub
add
add
clc
xchg
das
xchg
int3
dec
rorb
mov
mov
clc
iret
inc
add
cmp
clc
sar
clc
jge
hlt
mov
add
add
arpl
add
clc
xchg
movsb
clc
outsb
dec
ss
xor
inc
clc
dec
shl
push
jne
clc
daa
clc
clc
and
add
clc
hlt
and
add
ret
clc
sbb
nop
jmp
jns
add
or
xor
or
mov
push
mov
xchg
ret
add
fs
movsl
clc
lret
xor
add
mov
jns
clc
mov
ret
clc
popf
mov
add
je
add
pop
clc
pop
cmp
clc
arpl
add
xchg
or
dec
or
cmp
sub
clc
mov
or
shlb
add
and
xchg
xor
add
clc
dec
cld
clc
je
inc
add
lcall
sbb
clc
sub
clc
push
sbb
es
or
iret
jno
add
mov
mov
add
lahf
aas
jmp
cmp
int
xchg
fcoml
clc
jb
add
clc
sbb
cmp
push
nop
jmp
or
pop
dec
lea
add
and
add
add
incb
mov
pop
nop
jmp
gs
aaa
dec
mov
add
add
stos
aas
mov
pushf
testl
add
add
pop
clc
int
rolb
add
pop
mov
add
sahf
aas
dec
mov
pusha
add
jo
add
add
je
dec
fs
dec
bound
add
cmp
gs
icebp
stos
lcall
cwtl
push
add
neg
xlat
jp
add
sbb
add
inc
add
xchg
jmp
xor
add
out
pop
lock
and
add
jecxz
imul
mov
xchg
ret
negl
add
pop
push
mov
xchg
ret
xor
xor
imul
sar
mov
in
pop
cmc
xchg
add
add
imul
clc
faddl
add
add
add
mov
clc
jbe
mov
and
pop
std
xchg
jae
add
clc
xor
push
xchg
sahf
lock
fisubrl
push
cmp
daa
clc
data16
ret
clc
in
push
clc
sbb
jbe
nop
jmp
cld
xor
loopne
push
jmp
bound
cld
fs
add
ja
add
out
insl
mov
or
das
repz
adc
add
add
stc
or
clc
sbb
outsl
sar
fadd
clc
pop
xor
clc
inc
clc
clc
jnp
dec
in
out
xor
add
fistpll
push
add
jb
add
add
jne
mov
add
adc
mov
jle
incl
push
cwtl
mov
add
xlat
pushf
jno
add
adc
clc
push
add
sahf
xor
add
mov
clc
mov
add
sahf
xlat
test
mov
clc
fs
jne
insb
inc
clc
stos
fs
ror
xchg
jb
add
add
clc
sub
add
sub
add
clc
call
imul
clc
cld
lods
jl
in
negb
cmc
mov
clc
adc
add
clc
xchg
cmp
mov
cltd
inc
clc
jnp
add
xor
jg
mov
cvtdq2ps
clc
repnz
pop
cmp
xor
clc
in
cmp
sub
add
add
fs
inc
add
scas
dec
cmp
decl
dec
mov
add
mov
push
add
push
mov
add
sar
adc
fstps
clc
cmp
add
clc
mov
sbb
hlt
mov
add
mov
sbb
out
lcall
cmpsb
and
add
clc
push
add
pop
fidivrs
mov
push
clc
cld
jae
add
sar
add
inc
add
jge
dec
mov
clc
sar
mov
push
aaa
int3
dec
pop
add
clc
addr16
out
add
add
outsl
mov
jmp
jp
jns
fidivrs
lret
dec
insb
dec
jbe
xchg
adc
adc
pushl
sub
and
add
incl
out
lds
xchg
ret
add
test
add
add
add
jge
inc
clc
or
add
jae
add
push
xabort
clc
filds
add
lock
add
push
mov
xchg
ret
aaa
lock
sbb
clc
popf
or
cmp
clc
sbb
jmp
add
push
and
and
rclb
pusha
pop
call
jmp
add
add
out
xchg
loopne,pt
movsb
clc
hlt
out
aas
push
clc
fwait
pop
mov
adc
add
ja
aad
clc
aas
pop
adc
movsl
clc
popa
add
mov
rcr
mov
out
sub
mov
sub
popa
add
xchg
jge
jb
add
cltd
jmp
clc
sub
xor
outsl
xchg
jp
pop
out
add
add
clc
loopne
test
test
fld
clc
cmp
add
mov
ret
clc
and
stos
fidivs
scas
xabort
enter
add
cmp
mov
in
mov
clc
adc
add
clc
xor
mov
pushf
jmp
jne
and
lret
dec
clc
and
add
add
xchg
ror
sbb
das
out
in
lret
jo
add
or
in
xbegin
mov
xchg
jmp
push
cmp
clc
idiv
mov
nop
jmp
fimuls
mov
icebp
sarb
clc
nop
movsb
clc
mov
sldt
push
sub
push
inc
cmp
clc
xchg
cmp
clc
jle
clc
push
out
pop
jmp
fsub
clc
in
xor
add
cmp
add
add
mov
nop
jmp
bound
push
cmp
inc
clc
insl
xor
add
out
pop
int
daa
clc
xabort
add
lret
cltd
jo
add
mov
clc
bnd
je
mov
jo
add
fidivl
add
lcall
fimull
fistps
cmc
mov
pop
sub
add
rcrl
push
pop
or
call
mov
clc
jmp
add
push
add
adc
add
pusha
nop
jmp
cld
jo
add
aaa
push
fstps
movsb
clc
cmp
add
adc
add
add
dec
mov
add
add
ljmp
repz
jecxz
dec
loopne
mov
pop
nop
jmp
cmp
movl
add
adc
call
mov
nop
jmp
add
cmpsb
add
lods
addr16
inc
add
mov
cmp
clc
pop
xchg
movsl
clc
xor
add
fnstenv
movsb
clc
jne
inc
add
cmpsl
clc
or
inc
clc
mov
outsl
pop
or
inc
clc
mov
mov
push
mov
test
jb
add
dec
jp
or
mov
fadd
clc
decb
push
add
sar
clc
sahf
xlat
jg
and
add
add
in
or
dec
fucomip
je
clc
add
es
clc
or
inc
add
icebp
xchg
inc
add
xchg
pop
add
add
cmp
xbegin
popf
cmpsl
clc
test
push
add
mov
add
cltd
iret
inc
clc
mov
xor
add
add
jno
add
and
add
leave
nop
jmp
add
cld
sub
add
sub
clc
mov
nop
jmp
add
pop
push
test
push
pop
stos
stc
insl
outsl
cmpsl
clc
rol
clc
adc
add
mov
sti
push
addr16
data16
shlb
add
lods
incl
pop
and
jmp
sti
popa
push
dec
jo
lods
dec
icebp
and
add
xor
add
clc
jne
pop
sub
add
add
fisttps
pusha
add
add
add
cmp
add
sub
mov
clc
adc
inc
clc
or
mov
ficomps
xchg
dec
push
add
xor
in
shl
clc
push
lret
scas
xchg
sub
mov
jae
add
xchg
mov
outsb
cli
xor
cmpsl
clc
xor
add
add
xor
add
lods
ljmp
rcll
fildl
xchg
ret
testl
cs
nop
jmp
adc
pop
jno
test
cmpsl
clc
xchg
mov
mov
xor
add
mov
inc
add
xor
add
clc
pop
addr16
xor
add
daa
clc
sub
push
add
shl
clc
js
clc
xchg
add
add
call
dec
push
mov
lods
inc
clc
rorb
daa
clc
pop
or
jae
add
clc
cmp
pop
sahf
inc
add
push
aam
clc
jle,pn
pop
stc
cld
and
shlb
cmpsb
clc
sbb
arpl
add
push
push
lock
inc
add
not
pop
inc
add
lea
popa
add
push
clc
mov
clc
pop
ds
push
es
int3
cli
mov
test
lahf
sbb
clc
aas
pusha
add
fcmovnbe
jne
ret
clc
push
or
in
test
clc
cmp
mov
xchg
xchg
xor
add
rclb
not
cmp
sbb
add
clc
or
add
sbb
add
add
dec
pop
pop
sbb
add
loope
xor
add
fsubrs
mov
jl
aam
mov
sub
pop
mov
add
mov
daa
clc
lods
lea
loope
mov
cmc
fsubp
clc
mov
test
cmp
push
clc
lret
clc
dec
sbb
inc
clc
jo
add
clc
mov
add
shrl
xabort
clc
imul
dec
xor
add
clc
call
jmp
cmpsl
int3
add
fidivrs
mov
clc
aaa
jmp
add
mov
clc
in
adc
add
lock
test
mov
nop
jmp
sub
sti
sti
xor
clc
mov
mov
dec
in
jbe
push
add
xor
add
pop
fstpl
test
xor
clc
test
stos
iret
add
add
dec
push
negl
in
scas
mov
fdiv
insb
mov
add
add
jle
add
fstpl
push
add
and
push
outsl
or
outsl
sar
not
cmp
or
mov
clc
cmpsl
clc
push
add
jbe
sti
push
add
sahf
ss
push
fs
jmp
div
sti
push
xor
mov
add
xchg
movsb
clc
and
add
sub
sub
xbegin
data16
mov
nop
iret
imul
cmp
cmpl
ljmp
push
cmp
mov
mov
clc
stos
nop
test
rcll
inc
clc
stc
jne
clc
mov
pusha
add
enter
addr16
test
mov
xor
add
push
iret
cmp
negb
clc
ss
jg
ja
movsl
clc
test
xchg
lcall
inc
clc
or
add
int3
mov
clc
sub
or
add
clc
pusha
add
adc
jns
dec
push
push
add
fmull
jle
adc
or
add
push
popa
nop
jmp
aaa
add
cld
xor
or
add
mov
add
lock
clc
push
dec
xchg
and
scas
cltd
stos
int
add
adc
movsl
clc
movsb
clc
jg
mov
nop
jmp
test
add
add
add
sub
clc
cs
clc
xlat
clc
or
adc
add
clc
ja
clc
test
aaa
push
add
jne
add
inc
clc
add
clc
push
out
cmp
add
add
dec
dec
test
loope
in
loop
adc
add
adc
add
inc
adc
jmp
int3
adc
ss
xchg
xor
add
mov
cmp
xor
add
lods
sbb
cmp
push
add
out
fistpl
clc
mov
out
repnz
rcrl
push
or
jne
add
add
jge
lcall
pusha
add
pushf
cwtl
lods
push
jl
add
hlt
push
push
push
mov
xchg
ret
mov
sti
push
jnp
rcrl
call
nop
jmp
sti
add
cmp
clc
enter
cmp
outsl
add
add
lock
and
add
push
add
nop
jmp
sub
add
clc
mov
iret
test
aas
call
add
repnz
scas
and
add
clc
and
add
sub
xor
add
mov
xchg
ret
push
add
push
add
fstl
dec
loope
dec
jo
sbb
cld
pop
aad
push
clc
add
add
xlat
mov
and
lahf
jne
clc
pop
push
add
jnp
mov
dec
sub
inc
clc
int
clc
test
dec
mov
jmp
push
jo
jns
add
jmp
cmp
mov
push
mov
xchg
ret
add
nop
cmp
mov
inc
add
lods
cmc
push
clc
jg
pop
jecxz
insb
mov
dec
push
call
decl
bound
lods
imul
clc
shrl
add
clc
fsubl
push
add
aaa
xchg
fldcw
add
aas
repnz
clc
fsub
clc
imul
clc
mov
out
ds
clc
fnstcw
scas
cwtl
int
clc
clc
xor
add
aas
mov
xchg
cmp
push
add
push
int3
add
into
pusha
add
mov
push
cmp
addr16
aaa
call
mov
cli
ss
mov
dec
mov
cmp
test
push
ss
dec
xor
clc
inc
add
pop
neg
insl
or
pop
cmp
add
jns
clc
hlt
ret
add
out
scas
pushf
mov
out
xchg
cmovg
or
clc
in
xor
clc
or
clc
lret
or
mov
fbstp
add
mov
clc
or
xor
add
push
bound
add
clc
cmp
stos
sub
inc
clc
cmpsl
clc
and
add
and
jns
clc
and
mov
mov
scas
adc
add
clc
dec
pop
pushf
shll
add
add
cmpsl
clc
inc
add
ljmp
add
push
add
adc
call
shr
jbe
clc
adc
add
das
test
fisttps
inc
add
divl
sbb
adc
add
cmpsb
clc
inc
clc
rorl
in
out
xor
clc
jnp
clc
or
fwait
add
add
std
rcrl
cmp
not
nop
jmp
fiadds
aad
test
add
clc
bts
clc
mov
sahf
fnop
andps
rclb
cwtl
sbb
jns
and
clc
mov
cmp
decl
test
jmp
add
cwtl
mov
clc
stc
stos
mov
add
inc
add
addr16
fwait
xchg
ret
or
pop
into
es
rclb
sbb
bound
add
fisubrs
sti
add
add
jns
test
insb
lahf
xchg
stos
dec
mov
cmp
cmp
xchg
inc
clc
cmp
cmp
push
adc
nop
jmp
jns
xor
and
add
cmp
sbb
xbegin
loop
cli
xabort
push
clc
jp
clc
pop
mov
add
fstp
inc
add
push
and
add
clc
push
mov
push
mov
xchg
ret
xor
sub
clc
xor
add
jg
lcall
jbe
clc
cli
jae
add
nop
jmp
jp
add
aam
pushf
aaa
out
cmp
xlat
in
mov
xchg
lods
pop
clc
mov
cmp
add
clc
xchg
aaa
cmp
leave
call
nop
jmp
cld
aam
sub
ljmp
adc
add
mov
xchg
ret
sub
clc
iret
push
xchg
xor
inc
clc
cmc
and
add
ret
clc
inc
clc
pop
imul
adc
add
add
out
lcall
out
mov
nop
jmp
int3
add
and
add
cmp
stos
adc
add
xchg
psubw
inc
clc
xchg
outsl
cmpsb
clc
mov
aad
add
sar
clc
push
add
es
pop
push
clc
into
xchg
cmp
xor
mov
nop
jmp
aam
cmpsb
push
mov
stc
sub
add
xlat
sub
stos
movsl
clc
adc
xchg
into
xchg
iret
cld
scas
je
clc
mov
in
add
add
cltd
push
clc
xchg
rcrl
dec
mov
add
clc
dec
faddl
add
pop
enter
clc
mov
xchg
aaa
ljmp
push
popf
in
cmp
pop
xchg
scas
in
sbb
mov
add
jmp
sti
xor
add
and
pushf
inc
add
mov
push
add
enter
add
test
mov
clc
shl
clc
in
inc
add
sub
lahf
call
xchg
xor
add
bound
add
clc
cmp
clc
and
add
and
adc
add
out
test
ss
xchg
test
clc
pushf
xchg
in
or
in
cmp
pop
ljmp
fdivp
jg
add
mov
scas
aad
insb
fstps
cmp
clc
jp
loop
cmp
mov
nop
jmp
or
clc
test
leave
push
dec
mov
nop
jmp
or
xor
dec
push
call
decl
dec
or
clc
pop
pop
imul
pop
clc
add
and
add
pop
test
clc
or
add
aam
clc
inc
clc
loop
shll
add
adc
mov
clc
mov
cmp
push
cmp
or
test
push
add
add
sub
clc
xabort
add
decl
jno
ljmp
cmpsl
add
adc
add
add
out
loope
mov
ret
call
decl
add
add
add
push
mov
sub
nop
jmp
add
or
rorb
outsl
cmp
xor
xbegin
jge
nop
jmp
and
xor
and
add
cmp
clc
mov
pop
insb
sbb
shll
add
sub
fidivl
add
push
cltd
sub
clc
out
pusha
add
xchg
mov
add
cwtl
and
add
clc
rclb
fst
xor
add
add
add
data16
add
and
add
clc
ret
clc
popf
lahf
sbb
sbb
test
xor
clc
mov
sahf
and
add
xchg
adc
jno
add
addr16
fistl
add
mov
dec
lods
jmp
add
nop
jmp
aaa
xor
in
cltd
int3
imul
pop
sbb
add
add
cmp
jle
clc
cwtl
sahf
pop
pop
xabort
pop
pop
dec
xor
clc
mulb
add
add
sbb
lea
nop
jmp
daa
fs
push
jo
inc
add
sbb
mov
xchg
ret
sub
sbb
or
mov
clc
lods
gs
and
and
add
xlat
mov
test
mov
add
cmp
clc
clc
cmc
into
aam
clc
loop
sub
out
insl
jae,pn
add
or
clc
imul
push
add
movsb
clc
xlat
insl
sub
adc
add
push
cmc
jge
clc
xor
add
push
add
nop
jmp
aam
idivb
add
adc
add
popa
add
and
sti
and
cmp
clc
fldln2
pop
pop
shll
cs
inc
add
jmp
daa
clc
or
stos
cmp
loopne
jae
add
clc
insl
lret
jne
aaa
pop
mov
aad
add
add
nop
xchg
sbb
incl
int3
mov
adc
js
call
nop
jmp
add
cmp
push
sbb
push
ret
nop
jmp
or
push
daa
pop
sub
add
lock
mov
mov
in
mov
add
inc
clc
mov
sbb
push
jmp
add
add
jne
clc
lods
push
add
jge
inc
clc
in
xor
xchg
sbb
addr16
idivl
movsb
clc
insl
cmp
add
mov
clc
stc
or
fisubl
add
ja
cmc
ja
push
xor
mov
in
inc
clc
out
lahf
loop
pop
xchg
xchg
mov
clc
sbb
mov
add
jge
in
dec
stos
pop
xchg
xor
add
inc
clc
ds
push
hlt
imull
cli
mov
xor
add
adc
add
fcoms
aas
jne
adc
add
mov
xchg
cwtl
cs
pop
pop
sti
mov
mov
inc
clc
enter
out
push
sti
dec
ljmp
add
push
mov
decl
jmp
add
or
sti
mov
add
not
jns
mov
lods
jnp
adc
add
add
and
add
es
test
jno
add
cmp
add
out
pop
insl
push
add
cmp
push
mov
nop
jmp
int3
popa
xor
add
stos
aam
add
incl
dec
cmp
jmp
cmp
insb
insl
out
or
lret
lcall
xabort
clc
xchg
cs
clc
ret
add
hlt
jnp
leave
cmp
add
dec
call
stos
mov
repz
add
sub
into
fiaddl
sub
sub
add
add
inc
adc
decl
sbb
sub
in
pop
clc
std
hlt
sub
fisttpl
out
add
mov
add
cwtl
clc
mov
push
push
push
push
mov
xchg
ret
and
clc
lea
push
jmp
add
sbb
push
jl
or
ret
addr16
cmp
bound
add
imul
and
or
add
xchg
popf
mov
push
add
cmpsb
clc
inc
add
out
negb
cld
push
xchg
es
add
and
add
add
mov
add
addr16
addr16
icebp
aad
loop
mov
xor
add
sarb
jmp
sbb
cmp
mov
dec
add
xlat
cmp
jnp
add
in
xlat
add
add
loope
sbb
mov
xchg
ret
fiadds
dec
or
or
and
mov
mov
lret
sbb
clc
mov
clc
ljmp
add
sub
add
add
sub
clc
sbb
mov
sub
add
xchg
dec
js
jl
hlt
inc
clc
imul
pop
mov
add
add
call
clc
add
add
ds
pop
dec
movsl
clc
loop
and
add
clc
aad
mov
clc
scas
jmp
cmp
clc
jecxz
push
add
cli
clc
popf
pop
ljmp
mov
sub
call
ss
cmp
xor
add
jle
jno
add
clc
pop
gs
sti
cmpsl
clc
jo
add
insl
je
icebp
push
pop
nop
jmp
add
jns
cmp
add
test
adc
add
adc
push
nop
jmp
cwtl
insb
jp
push
cwtl
jno
dec
inc
add
daa
clc
jmp
pop
enter
add
mov
add
pop
sbb
leave
jmp
pop
or
xchg
jae
add
inc
clc
push
ljmp
nop
jmp
mov
movsl
clc
xlat
xor
in
data16
out
shrd
clc
lods
js
clc
mov
add
mov
clc
inc
clc
pop
push
mov
nop
jmp
pop
aad
or
add
add
mov
pop
xchg
outsl
clc
and
push
mov
or
nop
jmp
jo
cmpsb
cmpsl
or
loopne
std
data16
das
mov
lock
clc
xor
and
add
and
add
add
outsb
dec
fnstsw
add
inc
add
mov
push
clc
iret
adc
push
add
push
clc
ds
enter
icebp
inc
clc
test
sub
push
fadds
clc
clc
cmp
clc
xchg
push
clc
fs
fadds
push
add
daa
clc
icebp
clc
cmp
scas
popa
add
fwait
stc
out
push
add
faddl
push
add
aam
es
push
add
sbb
add
js
clc
xbegin
fs
in
or
pop
jnp
enter
sti
in
mov
add
out
pop
aas
insl
or
add
dec
or
xor
add
clc
xor
inc
clc
cmp
clc
loope
or
mov
push
push
add
leave
mov
add
jbe
lret
clc
mov
push
clc
mov
add
add
outsb
jecxz
xchg
ljmp
push
add
add
movsl
clc
fwait
pusha
add
sahf
iret
flds
add
add
fisttps
inc
clc
sbb
daa
clc
jp
imul
add
clc
jmp
scas
mov
in
and
add
imul
loop
fisubrs
clc
mov
scas
and
add
xor
jg
clc
addr16
inc
add
jae
add
add
or
or
ficoml
add
pop
mov
je
nop
jmp
popa
cmp
pop
dec
stos
sar
inc
add
sar
clc
call
clc
ljmp
loope
cmp
daa
testl
jecxz
xor
pusha
add
sbb
add
jg
lods
pushl
call
incl
sub
mov
add
add
mov
push
pop
iret
xchg
pop
sub
repnz
aam
add
add
clc
pop
cmp
jl,pt
mov
mov
xchg
ret
pop
add
test
sar
clc
sub
add
push
xor
nop
jmp
mov
test
cmp
in
or
add
stc
dec
aad
jo
add
pusha
add
lret
xchg
or
xbegin
add
adc
add
add
in
inc
add
push
add
cmpsb
clc
pop
jbe
inc
clc
test
clc
aam
gs
lahf
cltd
mov
cmpsb
clc
mov
clc
into
int
adc
add
mov
cmp
cmp
test
adc
pop
repz
clc
sub
xchg
sub
shrl
add
add
add
clc
push
add
cmp
add
clc
xchg
pop
push
add
xchg
xchg
push
clc
cmp
add
xchg
mov
clc
notb
jp
rorl
add
jne
push
pop
xchg
add
clc
cmc
xbegin
clc
stos
or
mov
jmp
jns
push
sub
and
add
aam
sub
push
stc
xchg
add
add
idiv
in
mov
push
rep
nop
jmp
xor
sti
cli
fucomip
xor
xor
add
xchg
sbb
call
mov
mov
push
add
push
rolb
add
push
add
xchg
inc
clc
cli
stc
cmp
cltd
cmp
add
add
inc
clc
inc
clc
adc
jecxz
cmp
add
jmp
int
gs
mov
call
jmp
decl
mov
incl
push
cmpsb
sti
sbb
lea
daa
clc
jge
add
add
add
xabort
clc
aaa
cli
sub
xor
add
clc
clc
ret
mov
lahf
dec
sar
add
xbegin
add
add
xor
add
stc
inc
add
in
dec
jmp
add
add
testl
or
pushf
xchg
data16
push
lret
cmpsl
clc
test
insl
js
enter
clc
add
add
jno
add
sub
clc
rcrb
clc
fwait
push
add
push
mov
sub
ficomps
add
clc
pop
inc
clc
push
dec
roll
xchg
ret
sti
add
in
inc
add
inc
clc
fdivp
adc
add
add
clc
or
mov
pop
jae
add
add
add
add
mov
outsl
adc
add
sub
clc
hlt
rorl
data16
stos
rorb
add
rcll
or
out
call
add
add
clc
xbegin
cmp
inc
clc
mov
es
sar
movsl
clc
push
inc
clc
psubw
add
repz
and
add
clc
sub
mov
push
add
fstps
lods
xor
add
sbb
daa
inc
add
xor
mov
iret
and
push
add
mull
add
xor
add
stos
ljmp
aad
add
pop
or
nop
jmp
xor
add
push
sbb
pop
clc
cmp
mov
pop
xchg
in
sar
add
lcall
sbb
xor
add
loope
push
push
aaa
and
add
add
inc
nop
jmp
sti
neg
or
xor
sub
js
leave
xchg
scas
insb
mull
std
lcall
and
add
fdivrl
add
push
add
pop
jnp
and
add
add
or
add
mov
test
clc
aad
mov
clc
fdivs
jae
add
insl
in
cmp
add
push
clc
loop
jns
push
mov
sbb
clc
inc
clc
add
add
add
jg
ret
fiadds
add
clc
pop
call
ja
mov
lret
add
add
push
add
fdivl
mov
clc
fidivl
dec
push
cmp
bound
add
add
lods
sbb
aad
insl
fcoml
add
addr16
adc
or
add
addr16
lahf
hlt
inc
clc
mov
lret
jl
add
pusha
add
stos
jnp
add
push
add
cmp
sub
cmp
pop
adc
add
nop
jmp
add
daa
clc
xbegin
cmp
jmp
inc
add
cmpsb
js
clc
jp
je
loope
icebp
loop
lcall
test
jb
add
mov
nop
jmp
inc
pop
sub
cld
test
clc
mov
in
loope
push
mov
clc
xbegin
lods
pop
ss
arpl
add
sub
cmp
add
xchg
cmp
scas
jnp
clc
pushf
addr16
inc
clc
lods
jecxz
pop
lcall
add
add
add
cmp
and
add
mov
and
add
and
mov
clc
jecxz
adc
add
clc
fistps
fstp
test
mov
int3
or
mov
mov
mov
adc
clc
xor
mov
out
sar
add
fsubr
add
add
add
and
add
clc
add
add
pop
mov
sarb
jg
mov
push
mov
xchg
ret
add
add
lods
and
add
add
dec
sbb
inc
and
jmp
lock
je
add
int
test
add
sar
or
xchg
in
pop
clc
sbb
out
imul
add
clc
or
sbb
and
push
imul
call
loop
jmp
sub
and
adc
pop
xor
add
idivb
nop
out
add
cmpsb
clc
clc
and
fsubs
sub
ds
cmp
jle
add
cld
jnp
cmpl
nop
jmp
js
testl
pusha
add
cmp
add
sub
popf
xbegin
or
add
jae
add
loope
add
add
pop
push
add
inc
clc
push
clc
dec
sub
clc
push
add
add
add
pop
clc
lret
add
add
add
add
fidivs
add
cli
test
jmp
repz
clc
in
rolb
push
add
test
mov
add
adc
nop
jmp
insb
or
add
clc
daa
clc
leave
jae
add
xchg
inc
clc
test
mov
jmp
clc
pop
outsb
push
aaa
call
add
fs
mov
add
add
add
mov
nop
jmp
add
cld
push
bound
pushf
icebp
sub
outsl
cli
faddl
rdmsr
add
leave
das
cmp
add
aad
clc
dec
or
push
ljmp
cmp
clc
mov
insb
mov
sbb
mov
popf
nop
jmp
add
movsl
clc
dec
jae
add
stos
imull
repnz
mov
add
add
rcrb
les
nop
jmp
addl
cmp
ret
clc
add
clc
pop
out
std
in
xor
add
add
push
clc
or
aad
clc
bnd
clc
inc
add
mov
mov
call
incl
bound
clc
mov
negb
cmc
mov
clc
sub
dec
mov
add
pusha
add
mov
ret
clc
mov
mov
cs
clc
add
mov
iret
outsl
cli
pusha
add
dec
pop
and
cmp
mov
jecxz
push
add
mov
add
shl
bound
add
sub
push
add
js
lret
mov
pushf
push
add
sar
mov
loopne
js
adc
clc
xchg
xchg
cmp
xor
add
add
push
clc
mov
insb
adc
add
bound
add
cs
sbb
xchg
inc
add
fdivrp
into
push
add
push
cmp
push
mov
xchg
ret
push
cld
push
aaa
das
mov
add
lods
clc
rcl
or
add
mov
cmp
mov
add
das
sbb
cmpsl
clc
cmp
add
cwtl
repnz
add
xlat
pop
push
ret
movsl
clc
inc
add
js
das
ljmp
add
xchg
mov
pusha
add
and
jl
loope
fildl
out
adc
add
call
xbegin
add
push
dec
into
das
fdiv
into
pop
bound
add
and
add
clc
xchg
cmc
mov
leave
inc
add
jg
dec
sti
fs
sar
gs
insl
inc
clc
jecxz
push
es
out
mov
clc
inc
add
lock
in
call
or
adc
mov
add
add
sub
jbe
stc
shll
add
scas
stos
lret
add
mov
clc
xchg
mov
inc
clc
add
add
jmp
clc
xor
add
push
mov
nop
jmp
xor
cwtl
mov
mov
outsb
faddp
aam
sub
pop
dec
cmp
call
jecxz
out
idiv
cs
push
jne
leave
xor
add
cmpsl
clc
daa
clc
cmp
xor
dec
and
mov
lods
lret
cmp
aam
clc
sbb
out
test
addr16
pop
enter
or
inc
clc
imul
mov
add
adc
add
imul
test
imul
icebp
push
mov
clc
nop
ret
jle
test
mov
xchg
cmpsb
clc
je
mov
add
add
in
xor
add
clc
fisttpl
and
add
add
iret
inc
add
das
jecxz
xchg
jg
clc
jmp
clc
fdivl
add
sar
mov
clc
mov
cs
clc
mov
add
inc
add
or
jbe
inc
add
jnp
dec
push
or
xchg
dec
xor
add
clc
inc
clc
into
insl
inc
add
js
add
popa
add
mov
xbegin
clc
push
cmp
cmp
add
clc
mov
ret
clc
in
test
inc
add
push
add
inc
add
fcoms
add
add
data16
sbb
clc
imul
clc
mov
cld
insb
adc
add
clc
fmull
fcmovnu
pop
in
add
add
add
aaa
pop
dec
pop
js
clc
cs
add
add
clc
ss
add
mov
add
add
add
pop
and
add
clc
outsb
inc
add
mov
shlb
add
add
cwtl
adc
add
add
sbb
push
clc
jne
add
xchg
xchg
mov
add
add
pop
test
clc
cmp
add
cmp
and
add
sti
jge
add
add
add
hlt
int3
in
repnz
or
clc
ljmp
mov
mov
out
sar
xchg
cmp
clc
stos
adc
add
cmp
mov
clc
fbstp
add
adc
add
adc
sbb
add
sbb
setae
imul
cmp
into
imul
notb
fiadds
cmp
icebp
push
cmp
aad
test
jno
add
fsubrl
mov
adc
add
sub
add
data16
inc
clc
nop
out
fldenv
sub
mov
mov
mov
add
jmp
test
sbb
add
add
add
clc
test
mov
filds
add
lret
mov
jns
clc
push
add
sub
add
or
jmp
icebp
sbb
add
icebp
sub
inc
clc
test
push
add
aam
add
rolb
sar
jb
add
push
add
in
or
cmp
clc
pop
out
cs
sti
test
and
add
pushf
xor
xchg
mov
add
pop
lock
adc
add
cmc
pop
fimuls
clc
test
push
jb
add
add
xchg
jae
add
add
clc
dec
dec
mov
xlat
mov
clc
mov
clc
arpl
add
clc
movsb
clc
mov
cltd
and
add
data16
roll
clc
int
mov
mov
sub
repz
add
mov
xbegin
lcall
test
clc
sub
or
add
xlat
movsb
clc
xor
clc
mov
roll
cli
pop
jg
pop
hlt
pop
or
add
xchg
sub
clc
ljmp
es
jmp
and
add
add
adc
clc
xlat
jno
add
clc
jae
add
mov
add
xor
add
and
add
push
add
int
in
mov
clc
xor
pop
mov
push
adc
add
mov
add
test
sub
mov
add
pop
test
sub
out
mov
jecxz
dec
push
add
repnz
aad
pop
xor
add
dec
shlb
cltd
dec
ds
clc
ret
std
jns
jae
add
inc
clc
add
xlat
or
shll
test
inc
add
lcall
add
frstor
add
add
add
pop
xor
int3
stc
mov
clc
sbb
mov
jb
add
add
xor
clc
cmp
push
jae
add
clc
pushf
xor
push
fcoml
add
add
adc
add
int
jmp
fdecstp
pop
mov
add
add
add
test
clc
imul
xchg
loopne
add
add
add
add
add
mov
adc
add
add
in
ljmp
sar
xchg
sbb
shl
clc
in
mov
flds
aas
sar
inc
add
scas
ror
and
add
mov
jl
xchg
jb
add
jns
idiv
cmp
jno
add
push
clc
mov
out
mov
clc
jecxz
pop
clc
push
add
push
add
aam
cld
cmp
sahf
or
clc
and
add
hlt
imul
clc
push
add
fmulp
imul
add
push
add
push
clc
arpl
add
fidivl
repz
mov
clc
and
add
jmp
clc
pusha
add
inc
clc
jne
add
jl
sub
clc
hlt
dec
xor
in
pop
out
xabort
cld
jbe
add
jg
fwait
adc
add
add
ds
or
clc
mov
clc
push
add
js
scas
and
add
int3
movsb
clc
lahf
pop
insb
pop
adc
add
add
clc
cmp
scas
jb
add
adc
adc
add
add
popf
inc
clc
push
clc
and
add
cmp
mov
ret
dec
pop
enter
inc
add
push
add
xabort
scas
test
test
into
mov
sub
sbb
jecxz
pushf
adc
add
fadds
add
lret
add
cmp
xchg
and
adc
add
jl
mov
add
or
int3
jo
add
mov
mov
clc
in
cmp
cmp
pop
fistl
mov
out
jns
jbe
mov
clc
cli
ss
enter
clc
inc
clc
into
clc
jae
add
add
xchg
stos
jns
push
and
add
in
sub
cmpsb
clc
sub
cmp
into
stos
test
clc
out
xor
add
ret
clc
push
add
test
cmp
gs
loopne
lret
loop
out
out
sar
pop
clc
pusha
add
xchg
inc
clc
xchg
mov
popa
add
leave
sub
clc
cs
decb
fcoml
loopne
or
sbb
clc
data16
cmp
push
cli
push
lahf
xor
add
pop
push
cmp
int3
cmp
add
add
clc
aas
jg
or
clc
lcall
add
out
jno
add
clc
push
push
add
jl
add
add
xchg
push
rorl
clc
jb
add
lock
mov
mov
dec
addr16
lods
dec
enter
add
xchg
xchg
cld
mov
push
in
decb
jns
pop
in
xchg
test
fcomi
repnz
mov
jecxz
std
or
aad
divl
sub
inc
clc
xor
add
clc
scas
jl
gs
mov
loopne
imul
clc
enter
xchg
mov
add
cmp
pop
push
add
jg
dec
xchg
inc
clc
cs
adc
mov
pop
mov
add
cmp
mov
push
sbb
pop
adc
add
push
vunpckhps
clc
pop
lahf
aad
mov
add
or
cmpsb
clc
xchg
in
dec
insl
and
add
clc
inc
add
xor
add
popf
jmp
xchg
clc
mov
test
push
add
mov
add
cs
iret
mov
add
add
add
clc
inc
add
mov
imul
mov
clc
pushf
pop
pop
sbb
mov
add
xor
add
mov
clc
xlat
jg
out
aam
mov
cmc
push
add
mov
call
clc
jo
add
clc
inc
clc
das
mov
clc
and
add
sub
jecxz
mov
sahf
push
clc
cmp
pusha
add
mov
add
push
add
test
pushf
xbegin
mov
repnz
jg
out
dec
js
jb
add
rcrl
push
add
push
idivl
sbb
out
push
out
test
fwait
lahf
inc
clc
scas
femms
adc
add
add
insb
mov
add
sar
jns
xlat
jns
xor
add
xchg
popa
add
das
je
clc
mov
test
add
add
add
clc
push
add
add
add
add
or
aaa
out
repnz
test
add
add
and
jle
clc
jmp
clc
stc
lahf
fimuls
jge
clc
add
add
stc
xbegin
or
xor
add
data16
mov
cmp
sarb
mov
add
add
cmpsb
clc
scas
int
ret
clc
adc
add
clc
mov
add
enter
test
clc
xabort
add
loopne
lret
and
mov
add
cmp
cmpsl
clc
shlb
add
hlt
mov
mov
push
jae
add
cmp
outsb
fidivs
mov
fisttpll
leave
add
add
fs
pop
lock
add
imul
jb
add
clc
jne
clc
fildl
add
jmp
add
add
loope
pop
cmp
icebp
aam
clc
mov
lods
lods
mov
push
add
leave
jp
cmp
mov
ja
add
lods
fsubl
clc
fistl
mov
clc
int3
loop
sbb
add
add
add
cli
dec
pop
sub
mov
add
cmp
add
cmp
mov
sub
je
cmpsb
clc
inc
clc
cmpsb
clc
dec
jmp
pop
and
cmp
add
sub
add
add
xchg
popf
call
add
add
clc
cmp
xlat
cld
lret
clc
jnp
inc
clc
sbb
add
fldl
add
add
pusha
add
dec
sar
clc
aad
into
adc
add
xchg
fcmovnb
clc
data16
addr16
sahf
aad
mov
xchg
pop
push
clc
ljmp
pushf
fstpt
or
clc
sub
add
dec
lret
ja
fwait
ljmp
add
int3
sbb
add
lock
xchg
mov
dec
pop
and
add
clc
in
popf
add
ret
in
call
clc
int
out
jae
add
clc
inc
clc
insb
add
repnz
outsl
das
mov
add
cmp
add
push
or
outsb
scas
push
hlt
pop
dec
sub
dec
pop
xchg
inc
add
fstpt
pop
xchg
dec
nop
movsb
clc
pop
mov
test
mov
fisubrs
call
add
into
movzbl
clc
fisubrl
add
enter
clc
inc
clc
jb
add
out
dec
adc
add
clc
aas
sbb
sar
jle
clc
cld
lea
add
xor
aaa
mul
clc
lods
xchg
imul
dec
add
add
cld
fucomp
sub
and
add
fwait
enter
lea
add
add
outsl
inc
clc
mov
add
imul
fs
jae
add
ds
adc
fiaddl
add
mov
add
cmp
cmp
mov
jnp
clc
outsl
aas
in
xchg
fwait
hlt
mov
cmp
add
pop
sub
in
enter
add
call
clc
lret
cmp
add
test
je
clc
mov
add
clc
jg
add
push
mov
add
out
xchg
jle
add
mov
clc
cmp
ljmp
clc
and
add
pop
outsb
sar
add
insb
das
push
push
and
add
sar
pop
ret
sahf
mov
adc
add
mov
fstl
loopne
fsubs
add
test
cs
add
loopne
gs
stc
xchg
and
add
add
imul
push
xbegin
xchg
mov
sbb
enter
pop
sahf
arpl
add
add
arpl
add
js
scas
sub
add
jae
add
lret
sar
cld
dec
repz
clc
xchg
sub
fsub
clc
mov
jmp
fbstp
in
cwtl
inc
clc
mov
clc
movsb
clc
call
clc
push
xlat
daa
clc
jge
mov
add
sbb
jmp
js
je
add
add
jmp
adc
add
ds
clc
decb
addr16
jnp
jl
adc
out
popa
add
push
es
stos
in
mov
fs
pop
add
add
add
out
and
add
add
fstps
cmp
clc
fxch
loop
clc
mov
adc
add
push
add
mov
clc
icebp
mov
clc
cmp
clc
mov
clc
inc
clc
inc
clc
test
enter
add
add
test
dec
ds
jmp
rcll
push
repnz
add
clc
mov
inc
add
in
push
icebp
mov
mov
and
add
or
outsb
or
pop
outsb
enter
loope
incl
clc
or
or
jmp
in
jae
add
imul
clc
pop
ret
clc
add
pop
pop
int3
add
add
clc
in
xor
add
clc
inc
clc
imul
clc
xchg
inc
clc
out
decb
dec
out
cmp
mov
add
add
add
jl
clc
pushf
sbb
loopne
jno
add
mov
pop
mov
mov
add
mov
stos
cli
repnz
cmp
std
popa
add
clc
roll
add
dec
fwait
pop
push
es
xabort
pop
mov
add
bound
add
add
xchg
xor
add
add
ja
cmp
or
popa
add
and
adc
add
aad
es
inc
clc
xbegin
sub
inc
add
xbegin
add
push
add
dec
ror
ss
clc
test
or
dec
dec
out
inc
add
jecxz
hlt
aas
push
xchg
xchg
insb
add
add
cmp
clc
jmp
sahf
push
sub
add
mov
add
clc
dec
js
cltd
test
mov
add
mov
bound
add
es
push
add
jl
adc
add
add
add
outsl
ds
jb
add
dec
std
push
clc
xchg
and
add
add
cmp
in
int
test
xor
add
data16
aaa
and
add
into
jle
mov
xchg
jg
mov
mov
add
into
jg
clc
dec
inc
clc
lea
cmp
test
dec
push
gs
cmc
mov
xchg
call
add
add
clc
pop
mov
clc
mov
add
test
clc
lods
popf
aam
nop
scas
insb
sub
add
push
add
adc
cld
push
push
pop
sbb
clc
jno
add
movsb
clc
adc
add
add
and
sbb
lahf
lret
pop
push
pusha
add
fcmovbe
jb
add
cmpsl
clc
lret
cmc
adc
add
push
jae
add
jp
add
cmc
sbb
fnstsw
mov
push
add
test
inc
clc
insl
aad
inc
add
das
jl
clc
xchg
sarl
add
push
add
push
cltd
outsl
cli
xor
and
add
clc
mov
fisubs
add
mov
movsb
clc
sbb
sbb
add
call
mov
add
imul
je
pop
out
cmpsl
clc
or
dec
call
mov
mulb
cmp
adc
xor
add
add
xchg
iret
or
jge
or
sub
bound
add
psrld
clc
ljmp
cmp
clc
or
clc
loop
inc
clc
mov
add
movsl
clc
push
and
add
scas
push
lahf
adc
add
scas
inc
clc
jge
je
fists
popa
add
hlt
call
mov
add
sarl
cmp
add
into
lods
mov
push
fdivs
clc
mov
fldl
clc
sahf
push
jb
add
push
add
jno
add
clc
xchg
mov
add
xor
add
push
das
push
add
insb
jb
add
push
movsl
clc
out
pop
adc
enter
push
clc
jnp
push
in
dec
push
add
cmp
add
cmp
push
clc
clc
insb
ja
xchg
enter
inc
add
inc
clc
fdivp
nop
inc
add
fimuls
push
add
pusha
add
and
add
jecxz
cmp
sbb
cmp
mulb
dec
push
clc
out
sub
repnz
clc
and
push
pop
pop
popf
jae
add
outsl
mov
idiv
cmp
mov
add
mov
cs
clc
ffreep
clc
call
add
add
int3
cmp
mov
add
or
dec
or
sub
push
insb
and
add
add
lods
pavgw
scas
sbb
dec
inc
clc
xchg
mov
add
rorb
dec
sbb
clc
mov
clc
cmp
add
out
add
clc
rcr
and
clc
out
gs
lea
add
xor
add
cmpsl
clc
adc
adc
add
loope
shl
clc
mov
add
sub
clc
mov
clc
fcoms
add
push
adc
add
add
pop
out
loope
cmp
adc
add
jb
add
and
add
dec
cmp
outsb
popf
repz
call
fidivrl
clc
cltd
and
mov
aaa
sbb
and
add
xlat
dec
ljmp
mov
pop
push
ret
add
sti
or
add
push
sub
add
aam
add
add
ret
clc
xchg
jns
shll
add
je
add
mov
jmp
clc
mov
add
or
insl
aaa
xor
add
mov
or
fs
pushf
into
cwtl
jmp
jge
clc
add
lcall
clc
push
add
xor
jg
pop
cmp
xlat
shrb
sbb
clc
in
rcr
std
imul
test
add
xor
clc
inc
clc
mov
inc
add
jmp
and
push
add
adc
add
push
jno
add
add
sahf
and
add
clc
js
sbb
sbb
add
push
jnp
mov
add
test
cmp
clc
stc
insl
faddl
call
clc
mov
aam
cmc
lcall
sub
add
mov
clc
test
add
jl
test
mov
pop
jae
add
imul
clc
push
jne
clc
and
cmp
cld
enter
add
cmp
add
sti
pusha
add
lods
cmp
std
mov
aam
sub
inc
clc
cmp
loop
jo
add
add
rcrb
inc
clc
cwtl
aas
jb
add
add
fs
ljmp
ret
clc
cmp
clc
addr16
repz
repnz
add
add
test
xor
bound
add
clc
jns
clc
jbe
loop
mov
clc
mov
stos
lcall
push
dec
ss
mov
clc
mov
add
push
clc
imul
sahf
iret
icebp
std
mov
add
aam
aaa
loope
stos
shl
popa
add
or
fs
rcrb
rcl
lahf
xchg
es
into
xchg
insb
test
mov
arpl
add
xchg
sbb
sub
and
add
mov
push
mov
movsl
clc
jmp
add
addr16
and
add
mov
clc
ficoms
clc
mov
cmp
add
mov
sub
add
mov
pop
cmp
cmc
mov
push
in
ljmp
jmp
clc
nop
ds
jl
add
inc
add
or
xor
add
add
add
add
dec
mov
mov
aam
and
in
mov
add
loop
pushf
jae
add
mov
add
add
jnp
jno
add
inc
clc
pop
cmc
gs
lods
fwait
sbb
clc
xchg
lods
mov
clc
mov
roll
mov
clc
add
aaa
mov
mov
add
sbb
test
sub
mov
ret
clc
je
and
add
test
iret
inc
clc
fs
cmp
add
add
std
sbb
sbb
xor
add
test
div
sub
push
mov
clc
sub
lods
sahf
stc
adc
cmp
or
sub
add
clc
dec
adc
loopne
xor
add
movsb
clc
adc
add
add
hlt
mov
fdiv
fiadds
cmp
mov
daa
clc
sub
sti
dec
dec
jge
push
dec
stos
in
cmp
add
mov
mov
push
nop
and
popa
add
test
add
add
dec
test
repnz
xor
clc
xbegin
sar
pop
int3
jg
jns
clc
mov
stos
es
sub
sbb
sahf
lret
and
add
add
clc
mov
clc
test
clc
out
int3
xchg
xchg
enter
add
add
rcrl
add
js
clc
xchg
out
jnp
add
aaa
inc
add
cmovno
add
add
xor
clc
cld
test
popf
add
add
lock
add
pop
jge
or
add
mov
jge
rcl
push
js
adc
add
add
shrl
in
mov
add
adc
add
pop
clc
jmp
ret
clc
xchg
fnsave
mov
push
pop
xchg
enter
push
mov
sbb
in
pop
jo
add
xor
add
add
je
cmp
clc
inc
clc
loopne
dec
mov
lods
test
inc
clc
call
jg
stos
cmp
add
and
popf
cmp
clc
cmc
or
add
int3
inc
clc
pop
fimull
clc
into
cmp
add
xchg
aam
and
add
xchg
int3
dec
out
int3
mov
shrb
clc
sahf
xor
xabort
push
cmp
add
mov
add
push
add
cli
mov
clc
xchg
xbegin
imul
pusha
add
xabort
flds
add
clc
inc
add
ja
dec
or
pop
in
pop
sbb
stos
push
add
xchg
daa
clc
notl
clc
cmp
clc
mov
add
pop
aad
test
pusha
add
jge
or
add
lods
cmp
test
add
add
add
add
clc
call
repnz
add
add
aam
clc
sar
lahf
arpl
add
add
inc
clc
push
mov
push
clc
bound
add
sub
cwtl
addr16
repz
shll
jo
add
ret
clc
sbb
add
or
cmp
clc
dec
in
into
mov
add
mov
je
mov
jge
adc
add
movsl
clc
dec
jecxz
insl
hlt
sub
mov
add
ds
add
mov
and
sbb
cwtl
and
add
clc
push
add
push
clc
gs
xchg
pop
xor
add
add
clc
mov
clc
in
imul
clc
sti
cs
add
add
movsl
clc
push
loop
sbb
add
pushf
sub
clc
jbe
jle
push
clc
loope
jmp
add
add
add
stos
pusha
add
xchg
movsl
clc
jecxz
sahf
mov
add
clc
inc
clc
jns
test
push
add
shl
add
jbe
out
adc
add
add
stc
cmova
sahf
stc
mov
scas
push
jmp
rorl
push
je
clc
loopne
fnstcw
out
push
add
in
fldln2
jne
aaa
dec
into
into
clc
call
fcmovne
lret
in
mov
sbb
pop
mov
sbb
add
mov
mov
stc
xchg
sbb
jmp
clc
fistl
sub
add
adc
add
leave
jne
out
cltd
gs
inc
clc
stos
icebp
pop
lods
inc
add
or
je
mov
sbb
xabort
and
add
lret
into
dec
pop
fidivrs
add
push
pop
inc
add
mov
sbb
divl
outsl
clc
xchg
repz
add
add
mov
clc
cmp
dec
sti
mov
or
shl
dec
outsl
addr16
xor
add
add
xchg
scas
push
out
mov
cltd
push
add
mov
into
mov
clc
pop
add
mov
clc
dec
cwtl
sub
pop
into
pushf
das
pop
iret
xor
add
add
xchg
adc
sbb
clc
sbb
add
pop
fsubp
clc
fdivl
add
inc
clc
inc
clc
mov
iret
imul
es
inc
clc
jnp
adc
add
xchg
hlt
inc
add
ds
add
add
jl
cmpsb
clc
movsl
clc
mov
fwait
das
add
fisttpll
and
add
cmp
cmp
xchg
push
add
and
fsubp
clc
fdivs
add
jmp
mov
clc
mov
nop
xchg
test
clc
xabort
clc
out
fcomps
clc
mov
add
mov
sub
dec
repz
xor
add
add
clc
mov
adc
add
xabort
clc
aaa
mov
mov
clc
inc
add
lret
mov
loop
clc
sub
push
mov
in
sub
dec
add
add
push
add
xchg
add
sbb
add
xlat
lret
add
jmp
mov
clc
or
clc
push
add
lods
mov
into
sub
sar
fs
mov
add
lods
mov
push
cmp
out
xchg
dec
inc
add
inc
clc
stos
dec
pop
lret
add
add
push
mov
add
and
add
fwait
xabort
clc
fmuls
pusha
add
popf
inc
add
shll
add
inc
add
ja
sbb
mov
xor
add
add
cmp
add
push
clc
xchg
and
add
mov
adc
add
add
or
clc
arpl
add
clc
cmp
icebp
inc
clc
adc
sub
cwtl
aad
lret
jo
add
add
lods
add
add
clc
lods
mov
stos
mov
add
test
clc
xor
add
clc
lcall
jnp
add
and
cmp
add
push
dec
add
add
add
jmp
push
ret
clc
or
lea
clc
hlt
in
ss
xlat
cmp
add
jo
add
cmp
imul
add
inc
add
add
add
lret
clc
sub
add
lock
xchg
xchg
sbb
add
aam
add
lahf
and
add
pusha
add
mov
in
in
stos
loope
cmpsl
clc
mov
push
outsb
cmp
sub
jl
lret
add
call
jno
add
add
and
jge
add
push
pusha
add
in
adc
add
jmp
ss
out
sbb
cmp
loop
test
clc
xor
add
add
pushl
add
dec
jno
add
adc
add
lret
stc
vunpckhps
add
loope
cmp
dec
mov
clc
pop
clc
cmp
clc
xabort
add
add
repz
in
lods
mov
pop
lahf
shll
lahf
inc
add
test
add
clc
and
add
fcomps
clc
cmp
int
adc
add
fmull
adc
add
push
add
xor
add
clc
sbb
adc
add
add
aad
call
clc
cld
mov
lods
push
and
clc
movsl
clc
adc
add
dec
ljmp
clc
xlat
hlt
test
add
sub
fcmovnb
clc
cwtl
push
mov
add
aad
gs
cli
dec
push
add
es
out
imul
add
pop
add
add
jp
mov
mov
cmpsl
clc
mov
test
clc
popl
add
fnstcw
add
dec
xchg
push
clc
mov
add
jge
cmp
jecxz
or
add
ds
and
add
int
clc
sub
clc
movsl
clc
rcll
clc
aaa
jnp
add
push
sbb
push
push
add
fdivs
xchg
xchg
and
add
bound
add
sub
test
scas
lods
dec
mov
xchg
mov
dec
push
clc
push
push
clc
sub
mov
popa
add
cmpsb
clc
dec
jecxz
add
mov
add
repz
dec
je
clc
cmp
test
ud2
pop
xchg
fcomps
js
xor
add
xchg
mov
add
push
mov
xchg
leave
mov
clc
xor
add
add
jle
push
aam
add
enter
jge
xchg
inc
add
pop
jne
xabort
cmp
xor
add
push
jmp
dec
nop
out
push
clc
xchg
sbb
adc
fildl
in
add
add
clc
cmp
xchg
xor
test
ficompl
insl
bound
add
pop
mov
add
clc
dec
or
add
pop
cmp
dec
fcomps
filds
jg
clc
jmp
notb
mov
fidivrl
add
xor
add
inc
add
rcr
xchg
jmp
add
or
arpl
add
js
push
add
mov
clc
cwtl
cli
inc
add
push
xchg
ret
clc
in
fs
jecxz
arpl
add
add
or
sub
push
ja
mov
jle
dec
outsb
sbb
clc
nop
cmp
mov
insl
rclb
clc
sbb
pop
jnp
clc
and
add
add
and
jno
add
xchg
jge
add
psraw
sar
clc
jle
clc
loopne
lret
mov
mov
add
add
add
in
push
clc
push
pop
imul
cmp
add
mov
clc
cmc
inc
add
push
clc
jo
add
sahf
or
clc
test
fidivl
clc
enter
add
add
push
cmpsb
clc
mov
add
add
nop
ljmp
mov
loop
cmp
add
xchg
mov
add
jle
clc
ret
fbstp
add
clc
in
sub
add
pop
mov
xchg
adc
int
sub
mov
bnd
aaa
cmpsb
clc
inc
clc
add
inc
add
cmp
xor
add
jnp
clc
cs
clc
mov
sub
clc
cmp
clc
test
add
inc
clc
inc
add
cmp
clc
sbb
add
cld
inc
add
enter
push
aas
sbb
or
add
clc
and
add
push
clc
leave
xchg
data16
pop
xchg
int
mov
lods
insb
dec
add
popa
add
push
add
jb
add
clc
push
mov
mov
xor
add
mov
rclb
clc
enter
dec
loope
dec
es
sbb
push
clc
stos
sub
push
add
pop
lods
popf
xchg
and
dec
loop
aaa
pop
xchg
sbb
mov
mov
dec
pop
scas
popa
add
xor
add
in
pop
clc
sbb
lods
bound
add
xor
add
jmp
ljmp
imul
testb
idivl
inc
clc
mov
cmp
repz
mov
add
lea
add
push
adc
add
lock
clc
sub
mov
aas
loopne
pop
mov
add
pop
pop
push
aam
cmc
hlt
adc
add
icebp
jg
push
clc
ljmp
add
sar
add
fisubrl
popa
add
inc
clc
inc
add
mov
stos
xor
add
cmp
mov
pop
add
imul
add
adc
add
lahf
push
mov
add
xor
add
and
bound
add
mov
divb
clc
mov
add
sbb
popa
add
xbegin
add
std
xchg
rolb
add
inc
clc
aam
and
and
clc
xchg
aas
adc
sbb
clc
cmc
sbb
pop
loopne
bound
add
sar
add
add
jecxz
mov
mov
sbb
clc
cs
fcoml
clc
dec
rcrl
test
add
dec
loop
ret
clc
xchg
test
pop
daa
clc
das
sub
add
xchg
inc
clc
pop
shl
clc
cmp
add
and
add
sahf
es
jp
jns
mov
add
sbb
bound
add
jp
cwtl
sti
pusha
add
mov
out
xor
add
add
pop
add
add
dec
or
add
and
in
mov
inc
clc
sar
add
dec
mov
aaa
adc
push
pop
daa
clc
push
clc
mov
clc
lock
loopne
pushf
cmp
sbb
add
lods
repz
cmp
popf
cmc
cld
push
xchg
icebp
mov
add
fnsave
add
dec
out
stos
dec
cmp
add
add
push
cmp
test
pop
out
aas
stos
es
pop
jl
add
fldcw
mov
jge
add
inc
add
pop
rolb
add
clc
pop
cmp
pop
mov
or
add
nop
xor
add
jns
add
dec
cs
add
jge
iret
fcomp
dec
add
lods
insl
xchg
inc
clc
xchg
inc
add
arpl
add
clc
or
add
imul
ss
icebp
sbb
ficoml
sub
clc
cld
mov
clc
push
int3
jp
add
sti
imul
ret
clc
js
push
sbb
clc
es
add
add
push
mov
cmp
add
addr16
mov
clc
jne
mov
fsubp
clc
jmp
fisttpl
or
clc
data16
pop
leave
roll
add
dec
mov
mov
clc
pop
jb
add
dec
cs
dec
dec
xor
add
jecxz
cs
add
aaa
loope
vunpckhps
clc
add
add
sub
add
clc
int
mov
xabort
clc
test
push
add
paddsb
clc
ljmp
add
adc
add
loopne
fnstenv
add
add
add
clc
dec
xchg
decl
popa
add
xchg
loop
aad
clc
ret
clc
data16
sti
push
clc
data16
mov
call
add
add
sarl
in
mov
mov
inc
add
mov
add
add
pop
sbb
clc
mov
sbb
stos
push
add
jo
add
clc
xbegin
cwtl
dec
push
add
xlat
push
add
and
xor
add
ret
clc
lods
sahf
negl
pop
or
add
add
insb
xchg
jnp
xchg
rcrb
add
or
add
jmp
and
sbb
clc
cmpsl
clc
nop
jl
jmp
pushf
mov
clc
fnstsw
add
inc
add
iret
jb
add
clc
out
mov
dec
add
jne
add
add
clc
fwait
int3
push
add
cmp
inc
add
dec
ja
shl
icebp
xchg
dec
sub
insb
inc
clc
push
push
iret
add
add
cmp
clc
jne
es
inc
add
fbstp
add
jb
add
ret
ljmp
jo
add
add
clc
mov
add
dec
in
sub
clc
or
add
in
aad
clc
cld
sub
dec
imul
xor
add
add
add
jnp
data16
fdivl
clc
flds
repnz
and
add
clc
test
insb
push
add
jecxz
mov
add
movsb
clc
or
pop
dec
mov
test
adc
je
sti
cmc
xchg
cmp
add
ljmp
jge
rcrb
clc
inc
add
ffreep
clc
jp
js
adc
add
pop
bound
add
clc
imul
xchg
mov
clc
scas
adc
add
pop
loope
fbstp
inc
add
xor
add
add
push
add
dec
sbb
dec
call
ret
clc
inc
clc
clc
int3
pop
adc
add
mov
test
pop
in
push
popl
clc
lret
sahf
dec
popa
add
or
int3
out
xor
add
xchg
xor
add
dec
addr16
inc
clc
movsb
clc
cmp
adc
int3
stos
jns
pop
fistl
dec
out
fiaddl
xchg
lret
scas
mov
cmp
mov
out
stos
jl
clc
cmp
jge
xabort
or
out
in
out
mov
mov
add
sahf
hlt
sbb
jae
add
dec
cmpsb
clc
jns
rcrl
mov
jnp
adc
add
cld
xor
mov
add
lcall
aad
clc
jp
adc
add
inc
add
aam
jmp
jp
add
fists
dec
and
clc
and
int3
jg
out
fldt
clc
ret
mov
add
enter
add
movsb
clc
cwtl
sar
clc
icebp
out
in
push
ret
clc
push
into
push
clc
add
sbb
jne
xor
add
hlt
out
push
add
cmp
popf
ret
clc
cmp
add
fdivp
es
adc
add
push
clc
outsb
lods
jmp
add
and
into
jno
add
sbb
add
xbegin
jne
test
clc
mov
clc
push
add
ss
gs
das
nop
jb
add
sub
clc
data16
fiaddl
add
clc
xchg
or
add
xchg
pop
cmp
dec
cmp
clc
pop
das
mov
xchg
lret
inc
clc
push
mov
cmpsl
clc
mov
add
add
add
lret
jp
xchg
sbb
add
clc
cmp
or
sub
jl
clc
pop
mov
data16
and
add
scas
mov
jp
fcoms
add
jecxz
fisttpll
dec
lods
and
pushf
inc
clc
js
add
xchg
xchg
decl
jne
sti
pop
or
outsl
sub
add
adc
add
cld
clc
pop
data16
enter
add
xabort
repz
stc
cmp
cli
cmp
dec
push
out
push
stc
mov
push
out
sbb
pop
out
insl
std
ret
adc
bound
add
inc
add
mov
mov
push
xchg
or
add
add
add
add
adc
stc
incb
add
add
or
adc
add
adc
add
add
test
xor
fdivs
xor
add
fbld
clc
in
push
xabort
clc
cmp
cli
xchg
add
cwtl
sahf
sbb
clc
sub
fdivs
add
sbb
repz
add
fildll
push
push
xchg
mov
lret
sub
add
arpl
add
or
aas
and
add
adc
shr
pushl
cmp
clc
jbe
in
or
pop
xor
add
clc
aam
add
clc
rcl
rcl
jae
add
or
clc
push
add
dec
xchg
xchg
mov
or
xor
jecxz
push
add
inc
clc
loopne
mov
cs
mov
adc
add
cmp
add
and
add
data16
sub
clc
and
add
daa
clc
jge
add
mov
pushf
cmp
clc
icebp
and
add
mov
imull
mov
xchg
movsl
clc
loopne
scas
cmp
add
add
add
pop
out
sbb
jmp
push
add
lea
add
adc
add
add
sub
add
test
mov
clc
setge
add
fildll
inc
clc
pop
dec
push
add
sahf
cmp
push
fistpll
adc
push
add
inc
clc
fcompl
clc
pop
mov
clc
testl
mov
mov
add
add
ficoml
mov
clc
imul
ret
xchg
cmp
clc
addr16
sbb
add
cmp
jle
add
sbb
push
mov
fimull
clc
loope
xchg
es
and
add
add
sub
clc
popf
xor
in
pop
clc
and
inc
clc
clc
ds
xchg
and
add
adc
add
or
or
mov
add
pop
mov
pop
cmp
push
push
and
leave
push
add
or
push
out
addr16
adc
add
in
jo
add
clc
in
insb
or
cmp
ficomps
add
adc
add
add
outsl
push
fmul
inc
clc
leave
cmc
mov
clc
adc
add
add
adc
add
add
add
cwtl
mov
cwtl
cmp
aaa
sub
lods
or
clc
sbb
mov
add
xor
add
clc
xor
add
clc
gs
leave
mov
or
movsb
clc
rcr
jno
add
outsb
pop
sub
es
xor
push
outsl
enter
popa
add
cmp
pop
mov
in
jmp
clc
xlat
in
dec
lods
xchg
adc
sbb
clc
xchg
ljmp
add
clc
mov
cmp
add
test
rcrl
data16
push
pop
lahf
stc
push
pop
clc
mov
add
add
insl
ds
ret
clc
and
add
add
add
clc
inc
clc
sbb
add
lock
cmpsb
clc
sar
cmp
clc
das
sbb
sahf
data16
dec
pop
ret
clc
lods
push
push
mov
mov
ljmp
out
jb
add
clc
repz
fisubs
add
sbb
mov
clc
xabort
clc
mov
mov
add
out
addr16
outsb
hlt
add
add
vxorps
je
sbb
add
clc
lea
push
add
jne
push
add
loopne
stos
ljmp
sub
add
push
jne
dec
stos
lret
add
sub
icebp
pop
fsubs
lcall
daa
clc
pop
mov
push
add
mov
ss
pop
sub
add
cmp
pop
int3
into
sub
clc
mov
cmp
mov
je,pn
add
daa
clc
fwait
cmp
data16
ja
and
add
clc
fsubp
clc
dec
insl
or
cmp
clc
pop
jle
clc
mov
add
and
add
mov
add
loope
stos
popa
add
push
outsb
gs
js
add
mov
lret
add
clc
dec
mov
sbb
clc
inc
add
push
clc
aaa
add
pop
cmp
clc
jb
add
sar
add
mov
clc
divb
int3
lcall
mov
mov
fwait
clc
daa
clc
jb
add
add
shrb
bound
add
xor
add
call
add
clc
fs
cmp
add
xchg
aad
clc
movsl
clc
pop
mov
repnz
cld
mov
xor
add
clc
sar
stos
cltd
cltd
fdivl
add
sub
ja
pop
ret
clc
popf
sar
clc
or
sar
add
xchg
cmp
add
add
add
add
clc
xchg
inc
add
cmp
clc
jle
clc
jp
add
push
sti
add
add
loop
mov
ss
enter
push
daa
clc
dec
and
add
clc
ret
push
pop
cli
aam
add
jl
add
xchg
shll
add
sbb
imul
ja
or
clc
call
mov
gs
adc
out
jg
int
ds
cmp
add
add
add
xchg
lea
ljmp
je
inc
add
adc
add
mov
add
clc
dec
sub
cld
mov
fimuls
popa
add
mov
add
or
xor
add
mov
add
rcll
add
fs
aas
ror
mov
loop
pop
xlat
in
sub
clc
sub
add
xor
clc
xbegin
adc
lea
add
cmp
nop
jnp
clc
outsl
dec
aam
push
dec
mov
add
jle
clc
roll
clc
jbe
xchg
and
add
clc
jecxz
mov
mov
xchg
lods
and
add
clc
cltd
xor
push
add
nop
scas
dec
sbb
pop
jbe
clc
dec
sar
cmp
adc
add
add
clc
pop
add
add
outsb
pop
cmp
or
jge
aas
pop
dec
out
mov
add
dec
jb
add
cmp
test
add
mov
add
push
test
push
push
sub
push
in
inc
add
aaa
xchg
xor
clc
lret
add
cmp
and
add
add
fs
xchg
jnp
add
mov
push
clc
mov
dec
sub
add
add
add
clc
jl
or
jae
add
push
rorb
js
imulb
clc
test
pop
jno
add
clc
xchg
cli
jg
fnsave
push
popf
xbegin
fneni(8087
clc
xor
add
dec
push
lret
mov
xchg
jns
add
shrb
cmp
mov
mov
mov
jno
add
mov
jo
add
add
mov
xchg
leave
imul
clc
mov
ss
cmp
push
pop
jae
add
insl
sbb
test
repz
and
add
test
mov
sub
jb
add
and
add
clc
lcall
add
xchg
sub
shll
add
add
xchg
inc
add
pop
inc
clc
xchg
cmp
clc
jmp
cmp
add
add
add
add
repnz
in
iret
es
or
jmp
clc
mov
clc
idivb
jbe
clc
ss
push
clc
cld
loope
pusha
add
xchg
xor
clc
stc
add
add
loope
mov
inc
add
sub
push
add
sub
add
fsubp
clc
cltd
out
cltd
jno
add
jae
add
jecxz
jmp
pop
lahf
cmp
add
add
fimull
sub
sbb
adc
add
xor
add
clc
jo
add
clc
imul
dec
sbb
sub
add
xchg
xchg
mov
xchg
mov
dec
mov
outsl
xbegin
sbb
xchg
xor
add
xor
clc
sahf
arpl
add
cmp
add
push
add
imul
inc
add
mov
xorps
stc
aaa
test
pop
cmp
dec
mov
and
jmp
mov
jle
cmp
xor
add
clc
push
add
movsl
clc
mov
push
clc
sub
out
loop
lahf
xbegin
imul
xchg
out
ljmp
icebp
data16
push
clc
lcall
es
xor
add
jo
add
push
pop
std
scas
and
add
cmp
add
add
fdivrs
jmp
mov
cmp
clc
or
clc
test
test
aaa
xchg
adc
add
mov
add
mov
inc
add
out
fbstp
add
stos
push
push
clc
mov
enter
add
add
lock
add
out
lret
pop
movsb
clc
mov
add
cs
scas
sbb
fiaddl
add
jns
clc
push
out
adc
add
clc
clc
dec
jne
add
movsl
clc
movsl
clc
xchg
sbb
lock
insb
das
mov
clc
pop
push
pop
insl
sar
mov
mov
add
clc
mov
clc
jns
clc
push
add
sbb
pop
clc
nop
stos
imul
gs
xlat
fwait
fwait
xchg
jae
add
iret
adc
add
clc
adc
clc
and
add
sti
mov
xor
jae
add
add
inc
clc
adc
adc
add
clc
movsl
clc
jne
push
add
push
add
adc
add
cmpsb
clc
into
xchg
daa
clc
mov
add
xor
add
add
add
adc
add
or
insb
add
cld
mov
pusha
add
out
cltd
push
nop
xchg
mov
jg
clc
add
add
ss
je
push
push
push
hlt
xor
add
clc
jmp
clc
insl
pop
ret
clc
sti
dec
cld
lahf
xchg
mov
pop
clc
or
jecxz
iret
adc
add
add
mov
dec
mov
int3
cltd
bound
add
sbb
add
xchg
fsubs
stc
pop
clc
pusha
add
push
xor
add
clc
pop
sub
clc
mov
fcoml
add
jb
add
fmul
lret
clc
fs
or
dec
and
add
clc
sbb
add
bound
add
add
aas
xchg
data16
aam
outsl
mov
lock
add
push
sub
and
mov
adc
leave
mov
ret
ss
lock
popl
add
xchg
clc
mov
jne
add
mulb
mov
clc
dec
pop
cmp
add
and
add
shll
add
ret
clc
fcomp
mov
test
jnp
nop
into
fldt
xor
data16
outsl
mov
clc
sti
cli
mov
cmpsb
clc
ds
dec
jmp
add
test
stos
inc
clc
sub
lret
cld
cwtl
gs
js
clc
pop
clc
xor
add
fsubs
into
inc
clc
loope
arpl
add
std
fcmovbe
ret
repz
mov
xlat
and
add
clc
test
adc
enter
cld
mov
jp
adc
add
add
sub
add
divb
clc
arpl
add
pop
rcrb
add
add
mov
add
push
dec
fs
pop
mov
loope
cmp
sahf
add
add
or
hlt
loop
pop
jle
je
sub
and
test
clc
mov
cmp
dec
dec
popa
add
cld
in
gs
pop
pop
and
add
pop
and
add
in
test
lahf
or
jmp
dec
xor
add
pop
adc
add
cmp
adc
add
mov
clc
decb
in
cmp
js
add
pop
xabort
or
clc
bound
add
stos
es
and
add
iret
mov
js
clc
or
stc
dec
push
testl
and
add
out
push
in
nop
cmp
xchg
dec
mov
and
add
clc
mov
mov
mov
add
add
add
rorl
jmp
xchg
icebp
mov
clc
in
cltd
nop
push
mov
add
mov
xchg
loope
clc
in
insb
push
and
add
nop
std
xor
add
clc
xchg
and
add
movsb
clc
mov
ret
jmp
das
xchg
loop
repnz
lret
fistl
add
adc
add
clc
stc
cltd
sbb
add
cmp
test
add
clc
pusha
add
clc
out
aam
aaa
ret
clc
inc
clc
xchg
xor
add
jmp
lods
test
out
js
jmp
fs
dec
std
out
mov
cmp
add
jno
add
cmp
mov
sbb
cmp
add
inc
add
push
ss
cwtl
fs
fsubrs
sbb
add
xor
add
scas
lock
cmp
enter
mov
push
add
popa
add
push
sahf
mov
adc
add
pop
cmp
clc
fs
jbe
or
das
imul
out
mov
inc
clc
testl
adc
add
add
add
cmpsb
clc
into
lahf
pop
das
sbb
clc
fxch
mov
jne
add
add
out
pushf
mov
je
push
sub
aam
add
sbb
adc
popf
jne
stc
pop
fcompl
clc
lret
iret
push
add
lea
clc
insl
jnp
notb
add
mov
jp
dec
jmp
add
clc
mov
mov
clc
xchg
fisubrs
in
fidivl
add
add
cmp
je
cli
icebp
imul
sbb
mov
add
push
jecxz
ret
add
push
add
dec
js
clc
enter
gs
push
push
dec
lods
and
add
add
pop
xchg
push
daa
clc
pop
clc
iret
xchg
icebp
cld
xchg
mov
jnp
jmp
leave
data16
jmp
xor
jg
pop
mov
add
cmpsl
clc
xor
adc
lahf
adc
add
clc
aad
incl
fnsave
add
pushf
pop
jle
js
clc
fdivrl
in
cmp
push
cmp
clc
xchg
imul
push
hlt
outsb
adc
add
add
icebp
mov
ss
add
jp
clc
ds
clc
xchg
sbb
repz
add
push
clc
out
jnp
clc
daa
clc
test
das
int3
push
clc
push
inc
clc
push
sub
daa
clc
dec
out
test
iret
xchg
movsb
clc
rsm
mov
mov
clc
es
sub
jl
sbb
pop
xchg
out
outsl
add
fists
push
sub
fisttpll
xchg
leave
mov
sbb
loopne
dec
pop
cli
lock
hlt
out
and
into
inc
add
pop
mov
mov
add
sti
stos
ret
clc
xchg
jno
add
mov
add
clc
cmp
gs
in
sub
clc
sub
shlb
add
cmp
scas
adc
clc
sbb
add
mov
adc
add
getsec
mov
out
inc
clc
push
cli
sub
add
int3
stos
sbb
imul
clc
adc
lcall
insb
push
add
movsb
clc
fsqrt
inc
clc
jb
add
jne
add
inc
add
mov
dec
add
add
mov
or
sub
add
clc
xchg
nop
lcall
mov
test
push
and
add
dec
xabort
adc
add
clc
mov
add
push
clc
lcall
cmp
add
repnz
push
clc
outsb
mov
lret
or
add
in
aaa
mov
add
adc
clc
inc
add
inc
clc
jge
sti
push
mov
add
aad
lcall
add
mov
add
sbb
add
push
add
inc
clc
pop
lret
jae
add
add
iret
test
and
fs
cmc
sahf
jg
jns
dec
dec
outsl
hlt
mov
cmc
test
sub
push
cmpsb
clc
clc
bound
add
js
sub
push
mov
add
push
inc
clc
cmp
clc
xchg
hlt
mov
clc
lcall
cmp
shl
clc
mov
add
ret
clc
frstor
add
lcall
out
outsl
push
clc
cmp
rcrb
sub
add
hlt
mov
clc
cmp
push
xchg
sub
clc
jmp
add
mov
mov
add
xor
add
add
sahf
fiaddl
imul
clc
repz
clc
adc
add
add
pop
in
push
add
test
push
mov
psraw
in
push
icebp
imul
pusha
add
push
mov
pop
in
popa
add
or
clc
mov
add
mov
outsb
je
add
movsb
clc
incl
add
jecxz
jnp
clc
mov
ret
clc
or
clc
dec
aam
xbegin
mov
add
test
or
mov
jb
add
ret
clc
in
clc
fwait
push
add
std
dec
jp
nop
xor
add
pop
aaa
clc
aad
or
mov
clc
imul
xor
add
mov
imul
enter
dec
jae
add
add
pushf
push
mov
in
sahf
xchg
pop
nop
pop
lret
clc
mov
mov
clc
lahf
mov
add
xchg
gs
or
dec
clc
pop
or
loopne
xor
add
mov
add
pop
pop
stos
xchg
repz
leave
push
or
add
or
dec
mov
cmp
sar
jge
clc
insl
out
jmp
clc
cmp
mov
add
sbb
fistps
dec
es
jle
mov
push
add
divl
add
out
pop
mov
outsb
sti
cmp
inc
clc
mov
adc
add
cltd
jmp
gs
cmp
out
scas
dec
stos
icebp
adc
jecxz
sub
arpl
add
clc
cld
inc
clc
and
add
jp
addr16
es
mov
clc
stc
mov
clc
inc
clc
sbb
sub
inc
clc
daa
clc
aam
fstl
add
loop
jg
add
aad
add
mov
add
or
rcll
add
pop
or
add
addr16
add
cmpsl
clc
shrb
add
dec
mov
add
fdivrs
in
je
clc
mov
or
add
shlb
fcompl
mov
xchg
jbe
push
push
out
xor
add
arpl
add
cwtl
repnz
sub
or
clc
out
pop
or
clc
mov
xchg
bound
add
xor
jnp
dec
notb
add
movsl
clc
fldcw
clc
pop
mov
or
adc
mov
xchg
cmp
and
clc
adc
add
shlb
imul
repz
movsl
clc
mov
push
mov
clc
mov
cmc
lret
dec
jno
add
movaps
add
clc
add
add
add
xbegin
imul
fwait
push
enter
popf
pop
cld
xor
add
jl
jmp
xchg
pop
push
jne
fsubrl
jge
add
dec
mov
clc
mov
fcmovb
clc
inc
clc
sbb
mov
stos
repz
mov
add
aas
int
clc
out
mov
clc
fsubs
add
inc
clc
insb
lea
add
not
dec
inc
clc
lods
dec
ss
ds
xchg
sbb
clc
ret
aam
add
or
clc
rcl
leave
xchg
jae
add
mov
sub
arpl
add
lods
cmp
clc
bound
add
xchg
daa
clc
es
loope
jmp
popa
add
sub
repz
add
js
adc
aaa
lret
clc
or
add
inc
clc
pop
or
clc
cmc
push
je
jecxz
xbegin
stos
mov
cmp
add
add
clc
mov
std
jne
or
js
push
out
fldl
clc
jae
add
mov
sbb
aam
clc
ljmp
clc
push
pop
mov
adc
add
xchg
pop
dec
cli
into
inc
clc
flds
jnp
repz
add
add
mov
es
movsb
clc
dec
add
add
clc
mov
xbegin
mov
add
lea
sar
clc
or
add
cmp
push
aaa
insb
cmp
cmp
roll
add
pop
adc
add
out
lret
in
jp
mov
xor
add
xor
add
sar
clc
cli
cmp
je
clc
nop
push
add
adc
clc
or
add
lock
clc
dec
pop
xchg
push
clc
mov
pop
ficomps
push
mov
es
aad
clc
xor
add
cmp
clc
fwait
test
cs
push
add
jns
add
mov
jp
cmpsb
clc
ret
clc
cltd
mov
add
dec
xor
add
fnstcw
nopl
push
inc
clc
push
lods
mov
mov
add
int
clc
in
mov
daa
clc
std
sbb
mov
clc
sub
gs
push
clc
xchg
xabort
sub
xchg
cmp
stos
out
and
test
xor
add
add
mov
adc
add
rol
clc
mov
add
add
xchg
jmp
jl
jae
add
pop
scas
fcoml
add
lods
in
push
add
and
das
pop
mov
add
add
movsl
clc
mov
jl
push
pop
xor
add
add
inc
clc
dec
popa
add
mov
clc
sar
sbb
mov
push
into
lods
push
lahf
xchg
cld
mov
jle
mov
pushf
fmul
mov
clc
pushf
dec
std
movsl
clc
push
sub
aaa
insb
int
sbb
scas
or
inc
add
cmc
xchg
repnz
fstpl
xor
mov
outsl
imul
add
mov
stc
clc
sahf
ss
into
pop
xabort
mov
lahf
jns
add
iret
fs
mov
pop
push
clc
push
push
add
push
add
pop
rorl
pop
mov
mov
add
movsl
clc
sbb
mov
add
fadds
mov
add
cltd
mov
jl
add
js
clc
cmp
sti
and
add
repz
dec
in
cmp
popf
dec
mov
add
cmp
outsl
fs
sbb
fldt
gs
xor
add
clc
popf
pop
int3
fistps
mov
es
int3
push
dec
fdivrs
pusha
add
imul
stc
pop
stos
xchg
cs
push
pop
clc
nop
int3
jg
adc
scas
out
clc
mov
xabort
add
mov
add
push
add
push
pop
fstpl
add
jle
outsl
push
add
fsubrl
mov
rclb
add
mov
clc
popa
add
mov
jns
int
adc
add
clc
iret
xchg
sbb
mov
pop
adc
add
or
clc
jp
and
aad
leave
and
add
mov
std
clc
dec
addr16
add
add
imul
mov
cs
rcll
add
aas
or
add
aad
cmp
add
aaa
dec
mov
stos
mov
sar
cmp
clc
repnz
add
add
jns
cmp
std
push
add
adc
add
clc
push
add
push
movsl
clc
out
and
pop
xor
add
clc
jecxz
cmp
sub
clc
xlat
sub
add
mov
ja
and
add
add
sti
add
add
cli
sub
add
scas
ja
clc
xor
add
add
clc
jg
cmp
mov
clc
jnp
add
mov
ret
clc
pop
pop
push
push
push
add
xchg
cmp
loope
push
fwait
lret
add
jnp
add
push
add
dec
and
add
clc
push
mov
hlt
clc
pop
jb
add
clc
cmp
mov
mov
cwtl
xor
leave
call
cmp
push
dec
adc
add
mov
clc
xor
mov
xchg
aam
add
fs
enter
imul
add
lret
cmp
clc
sbb
cmp
add
add
push
add
xor
clc
or
clc
lock
mov
xchg
pop
daa
clc
stos
ljmp
add
pop
sub
jbe
clc
push
lock
into
or
cmpsb
clc
mov
icebp
insb
fdivp
stos
rorl
mov
dec
mov
test
jo
add
dec
addr16
sarb
ss
push
add
and
add
add
push
add
stos
jmp
out
das
inc
add
ret
in
sar
arpl
add
add
xor
add
clc
or
add
cltd
divl
add
add
and
add
clc
mov
clc
clc
testb
sbb
xchg
mov
sbb
out
fldl
add
cmp
clc
imul
clc
jecxz
mov
pop
mov
add
in
pop
test
xchg
mov
clc
inc
clc
push
add
test
cld
push
mov
pop
xbegin
cmp
add
mov
fnsave
add
inc
add
pushf
sahf
sbb
mov
sbb
aam
cs
loop
in
push
add
add
rorb
mov
adc
add
mov
adc
clc
mov
push
add
and
cmp
adc
or
add
clc
mov
push
cwtl
mov
push
jge
cltd
adc
adc
clc
stos
xlat
pop
jae
add
loope
dec
fsubp
clc
aad
jo
add
nop
pusha
add
mov
add
dec
and
add
clc
add
push
mov
mov
or
add
in
in
inc
clc
xchg
pop
es
adc
add
add
inc
add
lret
pop
cmpsl
clc
movsl
clc
in
es
in
cs
hlt
push
clc
ret
stos
jbe
sbb
and
add
add
or
decb
add
push
jmp
lock
and
add
add
clc
pop
loope
daa
clc
es
and
add
clc
call
test
lret
data16
push
add
dec
and
rcll
push
add
inc
add
push
mov
mov
add
mov
pop
fs
scas
cwtl
add
add
arpl
add
adc
fldcw
clc
lcall
clc
sub
enter
or
clc
xchg
push
cmp
clc
or
bound
add
daa
clc
in
pop
dec
jnp,pn
sti
mov
bound
add
add
sbb
cmp
add
fistps
mov
cmp
cld
in
jp
int
xor
add
push
mov
clc
xchg
loope
clc
mov
add
ss
add
or
push
inc
add
jne
shll
add
dec
jb
add
imul
add
out
adc
fs
and
add
addr16
loopne
aas
in
popa
add
std
mov
mov
xchg
add
jecxz
inc
clc
adc
add
cmp
add
test
sar
ja
cmp
mov
push
mov
xchg
cmp
jl
or
clc
dec
out
cmpsl
clc
adc
add
pop
clc
inc
add
push
xlat
lods
cmc
and
add
cmp
int
jp
clc
test
add
add
rol
clc
jle
clc
popf
cmp
nop
mov
add
push
clc
cmc
push
xor
push
clc
xor
add
add
aam
add
out
push
add
cmp
push
add
cs
outsb
xchg
mov
add
add
je
dec
adc
add
dec
cmpsl
clc
fidivl
mov
clc
add
add
clc
fxch
cmp
out
icebp
loope
jmp
clc
mov
dec
xchg
sub
and
adc
add
xbegin
cmp
and
add
or
iret
mull
clc
iret
or
add
push
rorb
imulb
loopne
daa
clc
cmp
mov
add
jae
add
xchg
in
sbb
add
jne
cmpsb
clc
pop
clc
dec
mov
add
aad
fisubrl
inc
clc
out
dec
add
add
imul
or
clc
mov
add
xabort
inc
add
push
add
test
lock
mulb
fidivrs
push
sysexit
push
jl
sbb
cmp
cmp
add
leave
inc
add
int3
xchg
ljmp
mov
shl
clc
movsb
clc
xor
add
js
sbb
add
pop
sub
add
mov
clc
fs
xor
enter
add
sar
xchg
decl
jb
add
add
mov
inc
clc
push
clc
iret
test
jo
add
adc
add
fwait
in
pop
jecxz
lock
adc
add
clc
push
add
mov
loope
sbb
add
into
pop
addr16
push
pop
pop
push
sbb
jge
xor
lahf
sahf
jns
add
or
clc
daa
clc
sti
fcmovbe
mull
add
inc
clc
jne
rclb
clc
xor
add
mov
clc
inc
add
inc
clc
adc
add
add
sbb
pop
test
mov
ljmp
mov
or
add
cmp
add
test
mov
inc
add
imul
pop
jb
add
add
sbb
clc
cmp
es
mov
jns
xchg
push
test
scas
jmp
test
clc
loopne
nop
adc
add
cmp
xchg
fsub
clc
lret
mov
xor
add
adc
add
sahf
cmp
loopne
fsubrl
jmp
push
push
in
jmp
jg
add
out
std
movsb
clc
and
add
lret
data16
sub
clc
push
add
push
rcrb
clc
jmp
jecxz
aad
jb
add
add
clc
fnsave
add
stos
es
imul
adc
add
clc
cmp
xchg
in
xchg
sar
insl
addr16
out
add
push
cs
pop
enter
add
dec
cmp
mov
xor
add
outsb
adc
add
in
dec
lcall
inc
add
mov
add
add
xchg
or
clc
mov
clc
jecxz
push
or
clc
mov
clc
dec
mov
clc
cmp
inc
add
insl
sbb
add
mov
mov
clc
push
rcrb
mov
clc
or
js
sub
xor
add
clc
scas
insl
pop
pushf
and
add
pop
jmp
ret
leave
out
add
cmp
ret
push
out
shr
cmp
add
add
add
out
int3
lret
sbb
jne
add
clc
xor
clc
aad
clc
and
add
jle
clc
xabort
clc
cmc
cmp
or
clc
je
fnsave
push
jg
pop
clc
stos
xabort
mov
mov
sahf
ret
xchg
dec
xabort
or
clc
add
add
add
push
add
and
iret
push
add
nop
push
clc
sti
scas
pop
cmc
xchg
lock
sub
repz
clc
mov
fiaddl
pop
and
add
decb
mov
clc
notl
lods
stc
pop
mov
jne
hlt
adc
add
test
rcll
cmp
mov
add
gs
dec
xabort
clc
pusha
add
mov
cmp
clc
xchg
add
mov
clc
fbld
dec
test
out
into
in
xchg
cwtl
bound
add
add
fcomp
xchg
add
add
jle
adc
lock
add
add
clc
adc
add
mov
imul
add
leave
and
push
add
icebp
loopne
mov
nop
pop
inc
clc
push
add
mov
sbb
pop
cltd
stos
cltd
lret
xor
add
scas
jmp
add
cmp
clc
mov
add
cmp
jecxz
xchg
push
dec
loop
xchg
shlb
add
xchg
add
flds
repz
push
add
ret
clc
sti
clc
shrl
hlt
mov
dec
in
loopne
lods
add
add
or
cli
mov
cmp
fisttpll
add
add
add
clc
cmp
gs
cmp
clc
iret
push
cld
push
add
dec
jg
sub
mov
sub
clc
bound
add
sub
out
xchg
out
push
enter
dec
fst
inc
add
pop
push
add
aas
in
or
adc
in
lret
push
xchg
xchg
imul
mov
test
ja
in
sub
pop
inc
clc
and
cmp
add
pop
jmp
add
cmp
js
loope
or
jg
add
jb
add
aam
test
clc
outsl
sub
xor
es
and
add
cmp
clc
pop
in
add
add
clc
cmp
mov
add
mov
clc
cwtl
lods
xchg
xlat
nop
mov
pop
repnz
jl
add
add
pop
clc
mov
daa
clc
fs
sbb
insl
out
mov
xchg
into
pop
rcll
add
cltd
cld
adc
add
xchg
das
aad
pop
dec
mov
pushf
xbegin
clc
mov
xchg
mov
stc
xchg
in
push
push
clc
std
inc
clc
xor
ljmp
mov
xchg
dec
insb
mov
clc
int
add
xchg
sahf
mov
clc
icebp
test
clc
inc
clc
mov
add
sub
clc
mov
sub
inc
clc
inc
add
jb
add
mov
clc
lods
and
pop
pop
sahf
addr16
xchg
scas
mov
add
xchg
lahf
xchg
pop
popl
add
clc
mov
inc
add
aad
clc
mov
xor
add
std
mov
xor
add
clc
sbb
clc
add
insb
cmp
lcall
inc
clc
lret
sbb
mov
mov
add
test
xor
add
add
test
xchg
out
and
add
xchg
adc
add
add
pop
pop
jbe
clc
mov
clc
clc
xchg
popf
or
xchg
cmc
jge
sar
sbb
push
add
bound
add
clc
lods
in
ss
jnp
add
adc
outsl
arpl
add
mov
add
and
add
in
add
add
add
roll
add
xchg
icebp
xchg
mov
ret
cmp
add
mov
cmp
add
push
push
add
ror
cwtl
es
jle
clc
js
shl
clc
jle
lahf
cli
daa
clc
pop
inc
add
add
add
clc
mov
or
adc
add
add
xor
cmp
in
fstl
add
imul
jmp
add
test
add
pop
popa
add
insb
test
pop
cmp
lret
inc
clc
lret
cmpsl
clc
xchg
dec
js
dec
sti
pop
xchg
cmpsl
clc
sbb
clc
sbb
mov
add
fs
out
lods
jb
add
mov
mov
daa
clc
dec
mov
fadds
add
clc
sbb
mov
clc
dec
pop
test
dec
jle
mov
add
add
add
clc
dec
mov
out
jns
xor
cltd
mov
xlat
repnz
clc
xor
add
ret
clc
dec
mov
mov
add
mov
sar
xabort
cmpsb
clc
xor
add
inc
clc
push
or
cltd
or
clc
inc
add
lods
sub
push
add
nop
xchg
push
add
mov
fstpl
adc
add
add
icebp
jge
fbld
dec
lret
add
pop
test
idiv
mov
cmpsb
clc
xor
add
fs
mov
add
dec
fstpt
lret
add
movsl
clc
jl
xor
push
add
out
movsb
clc
fs
adc
mov
sub
add
mov
add
add
mov
idivb
iret
mov
add
add
clc
adc
add
add
ret
clc
pusha
add
jo
add
mov
add
push
clc
sar
movsb
clc
dec
pop
pushf
adc
add
cmp
out
jno
add
add
mov
adc
add
dec
mov
mov
mov
add
cmp
add
jae
add
clc
ret
pop
mov
ss
clc
jnp
not
dec
xor
clc
jle
rolb
or
add
inc
clc
add
add
inc
add
adc
jb
add
and
add
mov
add
aas
mov
add
repnz
add
jp
popa
add
push
add
lods
cmc
pushf
shrb
outsb
loope
inc
add
push
xchg
testl
cmp
add
lret
and
add
add
idivb
test
lret
ret
clc
test
add
bound
add
add
ret
clc
mov
fs
push
stos
sub
add
mov
push
clc
jo
add
clc
stc
push
clc
and
add
mov
cmp
clc
mov
add
mov
aas
and
add
push
lock
clc
outsl
xor
jne
clc
sbb
clc
fimull
sub
clc
jnp
push
add
xchg
sbb
add
sbb
mov
clc
sbb
add
pop
mov
cmpsb
clc
push
clc
int3
out
test
mov
adc
add
clc
adc
ret
clc
mov
sub
pop
in
clc
stos
in
jg
clc
pop
clc
add
cmpsl
clc
aam
push
add
adc
add
sub
and
inc
clc
stos
es
mov
mov
sbb
lods
je
add
lahf
or
cmp
adc
add
dec
push
add
ret
clc
sar
iret
cmp
clc
jl
lock
xbegin
jae
add
add
in
push
add
add
fldl
add
add
daa
clc
add
add
ja
clc
out
lods
add
add
add
add
add
xbegin
add
mov
lods
cmp
add
in
jp
clc
stos
sub
clc
push
adc
push
sbb
clc
data16
repz
addr16
faddp
clc
in
jnp
popa
add
jne
jns
inc
add
hlt
or
rolb
cmp
clc
aas
leave
filds
add
fistpll
cmp
clc
iret
setns
sub
call
clc
sar
fwait
sbb
sbb
scas
jmp
sub
dec
cmpsb
clc
ja
aam
clc
fistpll
pop
sub
push
movsb
clc
test
jecxz
or
clc
iret
popf
jmp
xchg
test
mov
jl
call
add
add
ret
aas
es
imul
add
sbb
push
add
sbb
add
dec
in
mov
mov
clc
mov
mov
movsb
clc
xchg
jns
filds
add
mov
inc
clc
and
add
jo
clc
jno
add
clc
lret
mov
add
xor
aad
hlt
push
push
clc
mov
xchg
ret
clc
dec
sar
inc
clc
add
nop
rolb
add
add
pop
daa
clc
xchg
arpl
add
aaa
dec
scas
scas
leave
in
xor
jmp
add
add
add
add
fld
clc
mov
clc
lock
add
add
scas
pop
ds
sub
fiadds
add
cli
mov
mov
out
stos
icebp
outsl
mov
lret
push
adc
add
mov
add
add
sbb
mov
clc
inc
clc
pop
stc
nop
pop
push
clc
dec
movsb
clc
lock
add
movsl
clc
fldenv
dec
stos
adc
add
xchg
pop
cmp
add
popa
add
adc
mov
jb
add
push
cli
xbegin
add
add
arpl
add
pop
or
add
pop
es
test
jmp
sar
xbegin
jo
add
push
inc
add
int3
cmpsb
clc
adc
test
cwtl
imulb
add
add
add
ds
pop
arpl
add
out
sahf
ja
clc
fbld
add
leave
jb
add
test
dec
addr16
movsb
clc
pushf
xchg
adc
add
sbb
clc
cli
lods
shll
add
and
add
sahf
ss
mov
stos
mov
sar
fildl
pop
int3
push
stc
mov
pop
clc
lret
add
add
ds
dec
lahf
loope
xor
add
push
jno
add
clc
add
add
aaa
fcom
lahf
or
add
mov
clc
insb
mov
push
add
add
clc
mov
add
rcll
add
cmp
stos
add
add
ss
add
push
clc
imul
nop
leave
xchg
adc
or
test
and
add
add
clc
xchg
inc
clc
int
and
add
add
add
push
add
xchg
sub
add
add
and
cs
dec
out
shll
clc
sahf
or
cmp
scas
sub
cmp
pusha
add
imul
cmp
mov
outsl
sar
push
clc
pop
imul
mov
add
mov
cmp
cltd
mov
dec
cmp
add
cmp
add
sub
insl
xchg
inc
clc
imul
jecxz
jle
and
add
jecxz
scas
repz
clc
mov
adc
add
add
add
mov
cmp
cli
fisttpl
add
xchg
test
ds
and
add
jle
pop
mov
clc
lret
fdiv
ja
add
mov
add
bound
add
cmp
fucomi
cmp
call
clc
pop
xchg
and
in
pop
sarl
inc
add
clc
dec
pusha
add
test
sub
cmpsl
clc
sti
stc
lea
add
cmpsl
clc
mov
jae
add
add
bound
add
clc
dec
pushf
mov
add
dec
popf
pusha
add
in
adc
ret
clc
add
lret
fs
xor
add
xlat
dec
and
add
add
clc
cs
sub
ss
repnz
clc
cmp
add
jg
clc
shll
aaa
js
cmc
adc
out
sbb
fwait
push
lock
pop
xchg
cmc
jmp
clc
mov
clc
ret
rep
xchg
nop
sub
inc
add
xor
clc
mov
add
add
add
add
xchg
pusha
add
add
add
add
sub
add
ljmp
stos
mov
fs
dec
ret
clc
int3
hlt
cmp
mov
or
clc
jae
add
jae
add
clc
xchg
jl,pt
lret
add
dec
xchg
aas
clc
cmp
and
xchg
outsl
stc
mov
mov
out
or
jno
add
pop
xchg
imul
mov
jg
xchg
dec
stc
and
add
test
cmp
jmp
clc
cs
clc
cli
jb
add
cwtl
mov
dec
push
fldenv
clc
lret
jno
add
cli
out
shrb
xchg
dec
or
mov
and
add
lods
outsb
outsl
xor
or
sahf
pop
mov
and
add
inc
clc
adc
add
sbb
clc
mov
add
mov
mov
and
pop
xchg
nop
fs
or
iret
dec
jbe
stc
xchg
js
sahf
xor
add
fidivrl
in
ret
clc
movsl
clc
aad
clc
mov
mov
clc
jmp
add
add
add
add
clc
lahf
jl
mov
idivb
movsb
clc
pop
lret
adc
add
clc
and
add
iret
xchg
jp
clc
push
enter
mov
fwait
data16
lods
push
mov
mov
outsb
loope
dec
push
sbb
lret
fisttps
pop
clc
sbb
fcmovnbe
xchg
xbegin
add
add
jp
clc
dec
iret
pop
mov
js
mov
insb
jb
add
mov
adc
add
push
sub
add
or
add
and
sbb
cmp
add
add
pop
dec
negb
mov
clc
adc
sbb
into
clc
cmc
fst
sub
jmp
or
clc
call
clc
popf
fwait
cld
sar
jmp
add
fisubrl
inc
add
lock
add
test
pop
movsb
clc
jecxz
dec
push
add
clc
push
mov
lret
ja
mov
clc
lods
adc
add
add
lock
sub
ds
clc
addr16
cmp
in
sahf
jb
add
scas
mov
add
mov
clc
mov
stos
scas
xor
dec
lret
dec
repnz
add
or
add
fisubl
or
mov
or
clc
jmp
fistps
mov
add
mov
pop
cmp
add
add
mov
clc
ss
clc
mov
sub
scas
fs
mov
ficoml
add
add
add
int3
sub
fldenv
add
stos
sbb
xchg
or
jge
in
xchg
insl
cmp
clc
inc
add
leave
in
xbegin
xchg
push
daa
clc
fisubrl
in
int
pop
jl
dec
mov
add
cmp
daa
clc
pop
sbb
add
push
add
es
xchg
mov
add
fsubs
mov
xor
scas
jp
jp
ja
ret
clc
cmp
dec
push
clc
icebp
int
clc
cmp
jge
mov
mov
add
dec
or
add
clc
xchg
sbb
mov
sub
add
rcr
pop
sbb
clc
mov
add
imul
add
sar
js
cs
inc
add
jecxz
mov
add
clc
dec
aad
jae
add
add
ret
clc
xor
add
repnz
mov
mov
inc
clc
inc
clc
clc
mov
std
xabort
in
pop
clc
rol
clc
mov
ljmp
push
add
push
adc
add
out
sar
jno
add
int3
aaa
aad
clc
mov
and
add
mov
cmp
lods
sub
add
add
xchg
loope
data16
popa
add
pop
clc
es
and
add
cmpsl
clc
insb
xor
or
add
popf
mov
push
out
xchg
cltd
in
addr16
or
add
or
clc
mov
clc
aad
pxor
add
data16
mov
clc
dec
fucom
clc
jne
clc
adc
add
add
add
clc
push
add
scas
adc
cmp
sbb
add
scas
data16
popf
fsubl
add
clc
lret
add
in
xchg
jne
add
ja
jmp
add
clc
aaa
dec
jle
push
repz
xchg
ret
adc
add
xchg
sbb
lcall
pusha
add
dec
decl
clc
jo
add
xabort
clc
sar
add
xchg
or
out
pop
jb
add
add
xor
mov
add
push
lahf
push
popf
clc
mov
insl
je
clc
lret
clc
cmc
cmpsb
clc
fisubs
add
jl
add
xbegin
sar
incb
inc
add
mov
add
sub
add
push
dec
imull
mov
pop
add
add
push
clc
int
into
gs
dec
loope
movsb
clc
repz
mov
mov
data16
cmp
add
data16
mov
clc
fcmovbe
cmp
push
add
or
clc
icebp
jae
add
lods
xor
add
add
fistps
hlt
jle
lods
jb
add
xchg
push
jl
cli
xchg
daa
clc
cmp
inc
clc
and
add
xor
add
or
inc
add
vsubps
add
jge
jns
aas
inc
clc
sbb
add
out
push
ds
adc
add
pop
push
pushf
scas
dec
add
add
data16
mov
clc
je
fdivrs
add
loope
cmp
mov
add
and
add
addr16
shr
addr16
mulb
add
and
add
clc
inc
add
aam
in
mov
scas
sar
fucom
clc
mov
jl
push
dec
add
add
add
jecxz
roll
cwtl
or
test
mov
add
pop
dec
xor
add
clc
ljmp
fdivs
add
cmp
sbb
imul
add
imul
clc
xlat
fstpl
add
add
mov
negb
clc
cmp
imul
adc
add
out
fnsave
jp
divl
xor
add
add
outsl
pop
clc
xbegin
call
add
pop
xor
add
das
dec
dec
data16
cmp
rclb
cmp
clc
add
pop
cmpsl
clc
rclb
add
enter
in
bound
add
clc
test
lret
outsl
cltd
cwtl
sbb
add
lahf
inc
clc
lods
jmp
lods
mul
clc
clc
fwait
sub
clc
mov
sar
dec
ja
loop
mov
cltd
jbe
fsubrl
dec
push
add
xchg
cmp
xchg
test
scas
xchg
iret
ds
xchg
xchg
dec
scas
jecxz
xchg
inc
clc
mov
push
call
clc
mov
clc
or
add
sub
add
xchg
jmp
cwtl
aaa
cs
fstpl
sbb
pop
mov
adc
add
add
add
bound
add
mov
popf
imul
cli
mov
lock
mov
or
or
add
add
push
add
cmp
add
mov
jg
clc
mov
in
out
pop
sbb
scas
add
sbb
add
xchg
jne
clc
in
lock
add
ss
test
sti
loope
push
in
cmp
stc
jle
stos
mov
push
add
xchg
dec
or
sar
add
arpl
add
sub
aas
jecxz
int3
inc
clc
insb
lock
add
mov
jl
jmp
popf
arpl
add
add
arpl
add
add
cmp
movsb
clc
jmp
clc
out
sub
add
pop
or
add
add
cmpsl
clc
fs
popf
int3
bound
add
or
mov
fs
inc
clc
arpl
add
pop
rorb
add
movsb
clc
xabort
sub
add
mov
imulb
clc
sub
dec
cmp
add
push
in
js
rcrb
add
imul
add
mov
add
xchg
xor
add
push
pop
or
add
clc
cmp
add
popa
add
pop
inc
clc
push
add
adc
mov
clc
cmp
clc
cmp
pushf
inc
clc
push
test
test
mov
cmp
pop
popf
adc
add
clc
xbegin
clc
mov
add
aas
push
dec
mov
sub
ss
stc
ljmp
mov
dec
lods
inc
add
lods
fucomip
je
stc
loop
popf
or
cmp
add
add
clc
cwtl
fcomip
add
add
ja
clc
js
add
test
push
add
or
cmpsb
clc
mov
add
inc
clc
mov
add
xchg
hlt
or
movsb
clc
mov
pop
dec
add
test
and
add
je
sub
ja
test
jo
add
lods
jns
add
dec
xchg
or
add
jo
add
fucom
clc
stc
dec
rclb
icebp
das
jne
or
bound
add
cmp
out
inc
clc
ja
xor
add
clc
js
cmp
clc
cmp
clc
cmp
pop
leave
add
xchg
pushf
pusha
add
lcall
pop
dec
test
pop
aam
xchg
loop
imul
cmp
xchg
fsts
add
in
pop
ret
mov
sub
rolb
clc
outsl
das
aam
clc
xor
clc
adc
add
add
pop
mov
mov
mov
fdiv
or
pop
cmovl
je
mov
cmp
jmp
clc
in
out
dec
fisubs
dec
mov
adc
clc
call
mov
sub
clc
test
add
inc
clc
push
fdivrp
sbb
pop
xor
add
add
cmpsb
clc
cmpsl
clc
xchg
cs
jne
pop
sar
enter
push
add
movsl
clc
cltd
fnstenv
arpl
add
add
add
clc
xchg
out
notb
add
insl
scas
jae
add
pop
mov
add
adc
add
mov
clc
clc
sub
pop
lods
inc
clc
pop
xor
add
dec
xor
add
stc
adc
add
clc
aas
xchg
dec
push
push
add
lcall
sub
add
push
fs
bound
add
clc
arpl
add
add
pusha
add
decl
cmc
in
sbb
clc
inc
add
cmp
insl
shll
enter
xbegin
xor
add
push
add
aaa
imul
sub
add
push
clc
iret
enter
xor
add
mov
inc
add
xchg
and
add
push
add
dec
or
out
or
inc
add
insb
adc
cmp
add
imul
outsb
repz
jns
vpmacswd
clc
imul
aam
aam
clc
fimull
clc
aam
in
clc
pusha
add
sar
fwait
lea
in
divl
add
aam
out
adc
add
pop
cmp
add
xchg
dec
outsl
lret
or
xchg
mov
add
inc
clc
xchg
int3
rorl
add
add
pop
scas
xor
enter
out
lret
clc
daa
clc
push
add
incb
call
xor
add
pop
iret
xor
inc
add
je
clc
push
jns
and
add
adc
push
cmp
add
xor
add
movsl
clc
lods
adc
add
clc
jge
clc
ret
push
and
add
clc
js
clc
xor
add
add
fistl
xchg
sar
clc
cmp
add
js
add
std
cld
gs
pop
call
mov
adc
clc
xor
cmp
add
mov
jne
aam
add
xbegin
jle
mov
inc
clc
dec
repnz
clc
mov
pop
dec
fdiv
xchg
jae
add
data16
scas
call
push
loope
or
add
repz
add
mov
clc
xchg
dec
sub
inc
clc
fsubrs
xchg
push
scas
and
xor
add
iret
test
add
js
movsl
clc
je
jecxz
repz
add
add
clc
fwait
repz
clc
jmp
push
add
adc
add
adc
clc
xchg
sub
or
add
mov
int
imul
jnp,pt
mov
fadds
or
add
clc
pop
notl
push
xor
pop
xbegin
jae
add
xlat
mov
clc
pop
adc
cmp
xchg
inc
clc
sti
call
cmc
call
inc
add
mov
and
add
call
mov
out
add
add
xchg
mov
add
mov
add
aam
add
add
push
pop
jns
mov
bnd
insl
out
mov
xchg
push
dec
cmp
clc
test
mov
adc
lock
sti
inc
clc
sar
xchg
mov
fidivs
add
clc
push
add
push
lods
cmp
out
jmp
clc
call
aad
pop
and
add
test
stos
add
add
fildl
add
pop
mov
cmp
fneni(8087
clc
mov
jp
sar
mov
xchg
mov
mov
leave
sar
jle
sbb
add
lock
add
jg
clc
and
add
clc
push
push
clc
xor
add
push
scas
mov
repz
mov
dec
bound
add
cmpsl
clc
leave
pop
or
clc
and
pop
and
add
push
add
add
add
jo
add
sub
out
sub
dec
pop
faddl
jne
mov
jne
repz
cmp
mov
sahf
xor
mov
add
sbb
clc
sbb
clc
pop
call
lea
shl
clc
aam
push
add
arpl
add
add
xchg
cli
or
dec
and
clc
or
arpl
add
lock
mov
cmp
cltd
add
add
fidivrs
add
aas
push
loope
shrl
scas
stos
cmp
add
inc
clc
iret
arpl
add
outsl
pop
sub
clc
cmp
add
jl
clc
gs
push
add
test
mov
data16
ljmp
clc
ret
clc
and
into
shlb
test
movsl
clc
aad
adc
lea
clc
cmp
xchg
cmp
add
outsl
pop
cmp
cmp
scas
push
clc
test
clc
dec
sbb
into
loop
xchg
jne
and
add
pop
scas
inc
add
fisubl
popf
fsts
das
in
test
cmp
cwtl
inc
add
xchg
jns
clc
ds
add
mov
add
mov
pusha
add
cmp
add
mov
sti
fstps
cmp
mov
clc
test
and
add
lea
add
stc
in
lret
xlat
or
mov
xchg
inc
clc
or
in
push
add
sub
sub
clc
dec
into
aaa
ds
jno
add
clc
xchg
out
fstps
add
clc
xchg
cltd
es
and
add
clc
sub
and
add
mov
xchg
ja
ss
add
add
jp
clc
mov
clc
adc
add
add
scas
popf
jl
mov
add
add
out
std
xchg
xor
add
ret
mov
clc
xchg
add
add
jmp
clc
dec
pop
sbb
stos
or
fdivl
clc
in
mov
faddl
lods
movsb
clc
stos
inc
add
gs
imul
add
pop
test
call
xchg
lods
repz
xchg
iret
inc
clc
clc
inc
add
cli
cmp
push
data16
cmp
add
add
and
add
test
or
aam
mov
jl
add
dec
or
pop
xchg
sti
sub
or
clc
jp
mov
ss
mov
clc
lss
add
push
jnp
lret
mov
push
and
xor
add
add
cmc
or
insb
int3
outsl
clc
xlat
mov
cli
shlb
clc
cmp
sbb
lahf
cwtl
lret
add
or
clc
mov
jns
add
add
add
push
jo
add
or
sar
cmp
aas
mov
pushf
bound
add
clc
loope
cmp
clc
adc
clc
cmp
pop
clc
in
xbegin
or
pop
fidivrl
push
add
or
clc
lock
test
stos
or
clc
mov
clc
mov
add
adc
add
mov
imul
sti
sub
clc
fs
scas
sahf
cmp
fisubrl
add
add
repz
clc
cmp
sahf
cmp
clc
push
add
enter
jge
cmp
add
jmp
clc
dec
cmp
clc
stos
pushf
test
arpl
add
add
jne
xor
add
add
das
jmp
add
inc
clc
ja
clc
lea
add
add
cmc
adc
push
fs
mov
xchg
or
mov
adc
fcompl
data16
jns
xchg
cld
cmp
clc
jmp
sti
cmpsb
clc
sbb
clc
ss
add
push
add
fs
outsb
dec
cs
sti
dec
sar
add
push
dec
inc
clc
sub
add
mov
or
push
add
or
clc
inc
add
cmp
clc
jns
jmp
mov
clc
nop
fidivl
jnp
clc
into
inc
add
push
xor
add
xor
add
sub
mov
jne
add
movsb
clc
jecxz
xbegin
or
cltd
int3
and
loopne
push
cmp
xchg
dec
fistps
repnz
pop
jmp
jno
add
add
clc
popf
xbegin
clc
sahf
into
cs
clc
mov
adc
add
mov
es
imul
pushf
test
clc
mov
shll
aam
repz
and
add
clc
push
xchg
das
clc
pop
adc
add
add
cmp
scas
sar
inc
clc
clc
mov
into
testb
pop
mov
add
jns
add
mov
sbb
jp
dec
inc
add
ret
out
jecxz
or
clc
out
and
add
popf
push
ljmp
add
in
adc
cmpsb
clc
rcrl
mov
mov
clc
dec
gs
rcrb
fildll
or
jg
shrl
mov
enter
and
pop
mov
add
add
ljmp
mov
add
into
push
fwait
dec
push
add
xor
add
pushf
mov
pop
clc
pop
clc
jno
add
test
ds
sbb
add
add
sbb
sbb
sbb
add
mov
clc
enter
dec
cwtl
mov
sbb
add
pop
mov
clc
pop
jns
jb
add
jne
sub
out
and
add
add
jle
add
or
sbb
inc
add
sub
mov
loope
xor
xlat
leave
mov
xor
or
int3
cmp
std
aaa
cli
and
add
and
add
dec
aas
aas
aas
mov
add
add
insl
push
dec
movsb
clc
dec
fiadds
clc
xchg
push
cwtl
sub
cmpsl
clc
in
mov
push
add
sbb
xchg
add
loope
add
add
icebp
cmp
in
xor
mov
add
out
add
or
fisttpl
inc
add
ds
add
push
aam
or
add
dec
scas
gs
pop
clc
repnz
add
dec
xchg
or
jne
test
jmp
clc
enter
cmpsb
clc
js
mov
loope
xor
clc
dec
mov
adc
add
pop
std
mov
stos
jle
into
push
add
fs
call
add
clc
cld
xchg
je,pn
pop
imul
cmp
loope
sar
pop
lea
xchg
fs
push
push
push
adc
mov
mov
or
fdivrl
loopne
lahf
das
clc
cmp
adc
mov
clc
lcall
pusha
add
int3
xlat
cmp
add
jne
lea
fs
movsb
clc
lcall
add
jb
add
pushf
aas
leave
fwait
das
nop
pop
add
add
clc
out
cmp
aas
enter
clc
ret
clc
xchg
test
add
push
cmp
push
sbb
lahf
clc
push
xchg
inc
clc
sahf
pop
mov
dec
jmp
dec
loope
push
add
icebp
mov
and
add
in
xlat
add
add
add
daa
clc
jns
add
dec
and
add
out
jmp
or
pusha
add
jbe
out
fbld
push
pushf
xchg
mov
inc
add
cs
sbb
shlb
jb
add
add
xchg
and
mov
testl
fsqrt
cwtl
lret
stos
nop
sub
das
pop
mov
cmp
add
js
hlt
inc
add
aas
mov
xabort
clc
mov
and
add
clc
test
inc
clc
cmc
in
pushf
hlt
mov
add
jne
lret
jmp
sar
xor
aad
jnp
and
mov
add
add
add
rorl
mov
cmp
add
shlb
add
popf
push
in
xor
add
js
clc
cmc
xor
add
add
add
jecxz
rorl
add
add
loope
jge
pop
scas
mov
fnsave
jge
mov
sub
push
inc
clc
sub
fs
lret
add
pusha
add
adc
add
and
add
add
pusha
add
xchg
sar
popf
adc
add
add
xchg
rcl
fwait
pop
icebp
jg
clc
jp
clc
pop
inc
add
imul
aaa
xchg
jmp
add
aas
out
ret
clc
mov
jb
add
add
sub
pop
sar
mov
clc
xchg
mov
add
xor
jns
mov
mov
in
jb
add
decb
push
iret
arpl
add
cmp
fwait
dec
adc
add
clc
jecxz
bnd
xabort
push
add
out
jnp
je
int3
push
add
jne
roll
add
repnz
xor
clc
int
sar
nop
call
insb
pop
push
add
xor
add
xor
add
lcall
dec
lret
mov
push
add
pusha
add
jmp
mov
inc
clc
rorb
sbb
sub
mov
test
cwtl
movsb
clc
adc
clc
movsl
clc
mov
add
int3
jl
push
cwtl
cmp
iret
ss
adc
out
icebp
and
add
clc
dec
xor
add
clc
int
leave
mov
clc
mulb
clc
sub
push
jge
or
mov
jae
add
fwait
sub
pop
enter
fadd
clc
es
mov
clc
pop
add
add
add
jle,pt
mov
or
or
jp
into
jmp
clc
lret
sbb
clc
daa
clc
mov
inc
add
es
xchg
xchg
gs
mov
call
test
addr16
dec
stos
push
add
pop
mov
add
add
add
add
clc
rdtsc
add
mov
add
data16
jle
clc
adc
add
fildl
add
clc
xchg
mov
dec
pop
jecxz
aas
push
jmp
clc
jmp
lods
pop
pop
add
add
leave
push
faddl
add
clc
jne
fisubrs
outsb
inc
add
xor
add
jb
add
push
clc
fldl
insb
add
add
push
je
lea
setnp
add
add
xchg
iret
repnz
clc
jno
add
leave
mov
in
dec
or
idivl
clc
lret
xor
add
fmull
ss
lret
add
clc
xor
add
daa
clc
jp
clc
gs
fisttps
xabort
push
add
addr16
cmp
test
pop
mov
lods
repz
int
mov
clc
mov
inc
clc
cli
clc
inc
add
dec
mov
js
adc
add
movsb
clc
mov
add
fimuls
or
je
into
ss
mov
add
ljmp
sti
cmp
mov
add
mov
or
cs
test
add
fisttps
repz
add
sub
shll
or
add
add
mov
aam
clc
nop
and
add
xor
add
xchg
fbstp
mov
mov
clc
and
test
push
add
cli
lods
aas
mov
add
ds
add
inc
clc
and
add
clc
xchg
aaa
inc
clc
test
jle
push
clc
pop
cmp
add
add
xchg
mov
xchg
movsb
clc
lret
push
jge
sub
add
fs
mov
or
clc
pop
std
cmp
add
xor
add
dec
sub
xbegin
adc
add
clc
cmpsb
clc
movaps
add
add
gs
inc
clc
decb
sar
leave
lret
sti
scas
jo
add
and
add
add
mov
dec
or
jg
add
mov
fcompl
mov
and
add
and
push
add
mov
add
jbe
fs
loop
push
lahf
ret
clc
out
out
insl
outsl
jno
add
push
add
ret
clc
iret
jno
add
clc
add
add
inc
clc
ret
movsl
clc
cld
xchg
sbb
clc
ret
clc
xchg
frstor
add
cmp
add
sbb
jbe
add
adc
add
mov
add
clc
inc
clc
adc
add
mov
add
push
mov
shrl
and
add
dec
and
stc
test
stos
imul
add
inc
clc
pop
jl
add
ja
cwtl
xor
add
jbe
pop
in
fiaddl
movsb
clc
cmp
or
sarl
cs
clc
cld
mov
xlat
cmp
clc
xchg
pop
clc
movsb
clc
stos
mov
mov
mov
clc
jmp
clc
cli
lahf
and
add
clc
mov
clc
sub
mulb
add
add
jg
mov
out
push
clc
and
stc
xabort
add
push
add
mov
daa
clc
inc
clc
xchg
xor
and
add
add
fistpll
inc
add
bound
add
jo
add
aaa
stc
or
clc
jb
add
bound
add
inc
clc
push
add
xchg
push
add
mov
mov
clc
pop
ficompl
cmp
clc
cwtl
negb
add
and
add
xchg
xchg
push
sar
lret
push
add
sahf
jns
add
adc
add
jns
clc
xchg
mov
sub
imul
test
jb
add
ja
call
sti
mov
jp
call
ret
clc
out
imul
sub
jno
add
in
incl
shll
mov
aaa
popl
add
pop
enter
xor
ficoml
add
aaa
mov
xchg
test
and
add
aaa
out
and
clc
mov
repnz
push
add
push
cmp
clc
lea
ljmp
or
pusha
add
rolb
stc
rorl
clc
jae
add
add
cmp
clc
test
clc
dec
sar
add
pop
mov
xor
dec
pop
mov
jae
add
shrb
and
add
outsb
decl
push
add
sbb
mov
pop
dec
sbb
inc
add
imull
add
sbb
lret
lods
inc
add
mov
test
pop
xchg
out
ds
add
adc
add
clc
dec
iret
adc
add
sbb
out
popa
add
clc
and
add
fstpl
fnsave
add
fistps
add
sub
mov
mov
ljmp
call
das
cmp
xabort
daa
clc
push
add
ljmp
in
xchg
dec
xchg
jl
jle
add
xor
add
clc
cmc
cmp
clc
into
dec
or
mov
clc
adc
cs
sar
cld
push
dec
add
leave
mov
mov
clc
testl
sti
repz
in
aam
sbb
or
push
dec
in
mov
push
insb
inc
clc
pop
data16
jle
and
add
fmul
insb
fs
sti
xchg
mov
jo
add
xbegin
add
int
clc
rclb
leave
rcr
stos
mov
in
jecxz
aad
movsb
clc
in
pop
mov
nop
dec
sti
repz
dec
xchg
inc
clc
pusha
add
and
daa
clc
cmp
imulb
adc
add
and
add
add
cmp
and
std
fwait
dec
popf
xor
repz
cmp
clc
mov
add
int
pop
cmc
mov
add
into
or
xchg
and
clc
jbe
int3
clc
mov
dec
pop
clc
mov
sub
clc
dec
in
or
sbb
clc
adc
cwtl
sti
inc
clc
movsl
clc
in
mov
add
leave
stos
stos
outsb
clc
mov
clc
ss
add
mov
or
push
add
mov
fsubr
rorl
sub
xlat
es
mov
xchg
inc
clc
pop
pop
clc
lock
test
inc
add
push
dec
jns
add
adc
add
add
sar
add
sbb
mov
cld
aam
ss
ss
hlt
jae,pt
add
add
clc
push
mull
add
clc
mov
inc
add
and
inc
clc
xchg
cwtl
shlb
inc
add
jmp
add
dec
dec
sub
cltd
dec
pop
cmp
popf
push
aas
stos
loopne
leave
in
xchg
popf
push
adc
repnz
mov
sahf
lcall
and
add
add
icebp
loope
fisttpll
sub
data16
std
jb
add
andnps
xlat
test
in
mov
clc
sub
mov
jmp
add
xor
add
xchg
fsubs
add
inc
clc
mov
jnp
xabort
mov
mov
adc
add
ret
clc
in
dec
enter
dec
pop
mov
mov
add
xor
add
xchg
fs
xor
add
add
leave
xchg
cmp
clc
mov
add
add
loop
or
icebp
adc
add
cli
inc
add
push
add
addr16
mov
insb
mov
add
jg
jo
add
and
add
jae
add
mov
push
xchg
cmp
clc
cwtl
xchg
xchg
sar
clc
in
dec
mov
sub
dec
xchg
sahf
mov
lods
loopne
enter
push
in
sub
mov
add
filds
add
cmp
mov
dec
sbb
add
fiaddl
cmp
add
std
movsb
clc
lcall
mov
sub
jo
add
mov
add
push
pusha
add
jne
clc
ds
idivb
push
daa
clc
cmpsb
clc
push
jae
add
clc
fcmovnbe
or
mul
clc
bsr
add
idivb
cmpsb
clc
repnz
add
notb
daa
clc
clc
aad
clc
lcall
add
xabort
cmp
xor
add
add
add
cmp
or
arpl
add
and
add
fdivrs
lcall
mov
add
add
add
mov
aam
add
dec
lods
shll
mov
ret
clc
ja
pop
and
add
add
add
stos
mov
mov
test
insb
sar
clc
jno
add
add
xor
add
add
ret
push
loop
inc
add
cmp
sbb
clc
outsl
sub
push
add
push
mov
scas
popf
out
mov
clc
mov
add
cmp
clc
dec
dec
es
in
mov
or
add
jg
or
mov
lods
aam
clc
mov
add
sbb
ret
mov
inc
add
or
fldcw
sbb
mov
data16
pop
fstps
sarb
add
loopne
into
cmp
das
js
mov
enter
add
repnz
aaa
cmp
sbb
inc
clc
xchg
aaa
xchg
inc
add
cmp
clc
dec
sbb
cltd
imul
add
jnp
clc
xor
clc
mov
clc
vzeroupper
and
xor
jbe
out
ret
add
sub
push
jmp
add
or
clc
insb
xchg
inc
clc
scas
push
add
in
dec
cs
push
clc
jnp
xor
mov
dec
popa
add
push
add
popf
addr16
and
jge
js
sub
clc
sub
ret
clc
dec
xchg
jb
add
clc
ret
clc
xchg
clc
das
dec
mov
fisubs
arpl
add
inc
clc
ja
pshufw
sbb
push
clc
mov
mov
cmp
jl
push
add
cmpsl
clc
pushf
cmp
in
std
mov
xchg
ss
dec
jns
adc
nop
stos
loope
push
ja
clc
push
add
push
xor
add
sbb
clc
jp
clc
imul
add
dec
cmp
insb
sub
adc
add
xor
add
add
dec
mov
cli
mov
cmp
push
add
xlat
xchg
stos
movsb
clc
xor
add
add
sbb
fadd
clc
movsb
clc
cmp
add
cmp
add
clc
cmp
std
inc
clc
into
dec
cmpsl
clc
mov
mov
fdivp
mov
or
mov
add
clc
push
add
es
ret
clc
and
add
add
pop
clc
sub
pop
out
inc
clc
aas
sub
add
dec
pop
jo
add
sar
or
clc
inc
clc
cmp
clc
sub
clc
fstl
add
cs
neg
xor
add
xchg
lea
scas
mov
clc
jns
std
popf
sarl
inc
add
mov
mov
add
xor
or
ljmp
stos
testb
jecxz
icebp
addr16
push
clc
data16
sub
add
add
shrb
clc
test
mov
jns
inc
clc
mov
insb
jge
mov
add
add
add
sbb
clc
adc
add
clc
lret
add
in
xchg
cmp
mov
jbe
sbb
and
add
add
clc
jmp
insb
jne
clc
xchg
inc
add
scas
loopne
cmp
clc
iret
lea
repnz
and
jns
clc
loopne
push
xchg
dec
lock
or
jnp
cmp
stos
xchg
cwtl
scas
mov
clc
outsl
imul
clc
mov
lret
or
clc
xbegin
fldenv
sbb
clc
sahf
popa
add
cmp
add
clc
int
adc
add
clc
stos
or
clc
xchg
jo
add
clc
mov
pop
jae
add
clc
push
add
in
sbb
push
add
jo
add
add
mov
mov
clc
pop
clc
dec
mov
sbb
xor
add
add
xor
add
mov
add
add
clc
ljmp
add
mov
xor
add
ljmp
clc
pop
clc
das
pop
mov
add
repnz
clc
mov
bound
add
add
pop
inc
clc
pop
dec
mov
sbb
psraw
lahf
gs
mul
clc
imul
into
push
pop
inc
clc
fildll
add
inc
add
sar
push
add
pop
clc
jae
add
pop
lock
clc
stc
or
cld
sarl
sbb
add
add
add
xchg
inc
add
xchg
lret
jbe
pop
sbb
add
add
add
sub
mov
clc
push
aas
xor
xor
add
add
mov
add
faddl
add
add
iret
sar
add
mov
mov
mov
sbb
clc
mov
xor
add
add
clc
loopne
rolb
cmp
hlt
aad
je
ss
add
loopne
xchg
cmp
clc
sbb
mov
test
popa
add
dec
pop
clc
out
imul
add
sbb
clc
push
mov
divl
dec
dec
loope
sub
mov
xchg
mov
clc
ds
add
add
js
cmp
jg
add
clc
in
mov
dec
daa
clc
mov
div
sbb
clc
int
test
in
xchg
adc
add
clc
mov
stos
das
bound
add
cmpsl
clc
leave
stc
data16
leave
int3
daa
clc
fisttpl
jnp
clc
cmp
clc
popl
add
loop
mov
call
dec
xor
clc
addr16
jo
add
insb
mov
add
and
in
adc
add
hlt
inc
clc
sbb
sub
mov
pop
outsl
aam
inc
add
mov
sbb
int3
dec
sub
cwtl
outsb
xchg
out
dec
insb
iret
cwtl
cwtl
scas
add
clc
nop
mov
push
add
aaa
add
add
add
sar
xor
add
xchg
aaa
push
add
cmp
xor
add
add
clc
push
add
add
add
clc
add
push
add
push
scas
push
xabort
pop
clc
shll
outsb
pop
enter
out
add
add
icebp
adc
add
mov
inc
add
scas
outsb
stc
int
rcrb
dec
lock
jns
clc
fiadds
clc
dec
push
clc
aad
jo
add
lea
clc
mov
mov
sbb
mov
jle
pop
je
mov
push
add
fs
mov
lea
pop
leave
insb
xchg
xor
add
sub
ret
clc
xchg
dec
jb
add
pop
add
adc
add
adc
add
add
jne
clc
xabort
cltd
notb
inc
add
mov
imul
add
and
add
add
fsubs
clc
mov
add
adc
and
add
pop
filds
add
dec
and
clc
jg
clc
loope
loop
push
add
fmull
add
dec
cmp
clc
out
xbegin
popa
add
lea
rcrl
add
stc
and
add
clc
push
clc
insb
das
jns
mov
add
jl
iret
das
mov
vcvtdq2ps
in
out
stc
jo
add
xor
add
pop
std
push
add
popf
sub
clc
push
push
add
xchg
lods
fildl
add
push
clc
in
and
mov
add
jmp
clc
jge
add
fs
mov
add
pop
xor
add
emms
pop
shll
fs
mov
push
iret
dec
mov
add
int
add
jle
gs
std
loop
inc
clc
hlt
pop
in
mov
pop
pop
fisttps
clc
fstpt
stos
ret
add
add
add
add
or
adc
add
clc
mov
mov
fsubs
add
das
data16
pop
add
lret
clc
mov
call
add
cmp
clc
mov
jo
add
xchg
jl
clc
push
add
into
xlat
push
clc
vmwrite
clc
mov
add
cmp
push
add
xbegin
repz
xchg
and
add
add
add
xchg
cmpsl
clc
stos
jbe
gs
add
add
add
pop
jbe
mov
nop
es
add
add
clc
jge
clc
xchg
adc
inc
clc
popf
push
jae
add
in
je
ret
clc
xbegin
rorb
shll
dec
int
pop
xchg
xchg
mov
pop
vrcpps
add
mov
clc
mov
add
xchg
push
ljmp
push
pusha
add
dec
aas
cltd
mov
sub
sar
cs
add
outsl
push
add
jg
mov
sar
jge,pt
mov
int3
dec
sub
push
mov
clc
cmp
sbb
clc
lods
mov
inc
add
out
enter
jmp
clc
mov
cmp
cmpsb
clc
in
arpl
add
mov
clc
mov
lods
and
add
mov
data16
push
adc
add
rcl
sbb
add
cwtl
xchg
add
add
iret
mulb
add
cmp
clc
decb
add
leave
jg
call
imul
shlb
add
and
dec
aam
clc
or
add
add
rorl
or
sbb
fwait
clc
cmp
clc
mov
push
add
jmp
clc
rep
test
movsl
clc
mov
loopne
xchg
jle
sar
mulb
xlat
cmp
pop
xchg
mov
out
push
add
in
xor
add
sarb
jp
sbb
add
mov
push
lea
cmpsl
clc
es
das
lods
mov
and
ja
scas
xor
add
stc
mov
add
test
inc
add
fwait
data16
or
dec
and
add
add
lea
add
sar
fninit
clc
mov
cmp
in
sti
fbstp
mov
add
lea
jb
add
test
aas
and
add
clc
pop
clc
cmp
add
idiv
push
loope
xchg
int3
test
mov
shrb
nop
aas
inc
clc
push
mov
or
cli
sbb
add
gs
pop
cs
clc
aaa
lock
mov
cmpsb
clc
cmp
add
ljmp
sub
add
add
push
add
loop
loopne
jnp
clc
push
sbb
add
or
pop
pushf
sahf
sar
clc
iret
stos
mov
add
fwait
cli
inc
add
insb
sar
xor
add
mov
ficompl
adc
add
mov
clc
imul
add
add
mov
add
add
add
mov
clc
pop
popa
add
clc
mov
sbb
add
xor
add
outsb
popf
mov
sti
dec
sahf
movsb
clc
cmp
add
jge
mov
sar
clc
xchg
add
add
mov
cmp
add
sbb
clc
cli
insl
and
pop
cmp
clc
loopne
push
add
jle
insl
xchg
clc
repnz
inc
clc
je
xor
add
inc
clc
mov
clc
nop
outsb
sub
xchg
cmp
add
enter
add
push
add
fldcw
xlat
mov
add
cmp
mov
jg
xabort
adc
add
add
mov
call
in
pop
cmp
and
add
add
popa
add
sbb
clc
add
jno
add
clc
stos
xchg
je
clc
jmp
adc
add
ja
outsb
adc
add
fcoml
push
add
ss
outsb
jmp
add
in
aad
cmp
scas
inc
clc
jg
xbegin
add
cmc
arpl
add
insl
push
add
mov
adc
add
clc
fdivs
repnz
cli
fwait
jbe
jo
add
das
push
outsb
sti
adc
add
adc
clc
movsl
clc
ds
ja
jmp
add
movsl
clc
cmp
inc
clc
sti
sbb
push
clc
into
mov
add
inc
add
adc
add
jl
add
aaa
lock
and
add
clc
dec
mov
ficoml
lods
and
clc
jo
add
or
add
cmp
clc
sub
inc
clc
fxch
dec
mov
in
dec
ja
clc
and
add
pop
cs
mov
je
clc
testb
out
fs
cmpsb
clc
xchg
mov
and
jne
add
inc
clc
mov
outsl
mov
add
fdivl
cmp
sub
clc
xchg
in
mov
pop
add
add
test
dec
mov
add
xchg
inc
clc
mov
clc
inc
add
xor
clc
daa
clc
stos
push
add
test
mov
clc
rorb
insb
xchg
inc
clc
push
push
add
sbb
dec
xor
add
add
es
lret
sbb
int
push
add
dec
cld
or
sbb
stos
inc
add
popf
call
add
lea
data16
xor
add
das
xbegin
jp
xabort
push
fsts
mov
xchg
cmp
ja
clc
push
adc
add
or
add
pop
xor
xchg
inc
add
ss
fidivrl
add
hlt
pop
lea
xor
add
popf
movsl
clc
addr16
push
add
lret
pop
mov
cld
mov
push
push
stos
rcr
mov
repz
out
adc
add
iret
sbb
imul
nop
rcl
mov
clc
fs
sbb
xchg
jmp
sub
add
or
and
das
jg
clc
cmp
shlb
mov
xor
push
add
add
clc
inc
add
pop
cmp
mov
cmp
clc
inc
add
aaa
sbb
in
rcr
cmp
insb
test
push
shlb
lea
insl
push
add
or
adc
add
sahf
es
cmp
pop
dec
push
add
sub
add
mov
lret
jns
lcall
add
add
xchg
or
xchg
push
mov
add
into
add
add
arpl
add
mov
add
add
dec
sbb
clc
adc
add
dec
addr16
pop
pop
addr16
sub
push
push
mov
add
inc
clc
test
mov
bound
add
clc
fs
in
ret
clc
rcrl
or
add
cmp
clc
xchg
out
adc
add
out
xchg
daa
clc
pop
push
clc
and
xchg
incb
add
adc
add
inc
clc
pop
pop
jns
outsb
lahf
jp
add
adc
cwtl
aam
add
add
sub
cmp
sbb
stos
lods
mov
xchg
inc
clc
xbegin
add
mov
rol
clc
fsub
clc
pop
stos
fstl
add
clc
xchg
out
xor
add
cmp
cmp
add
lcall
clc
test
cltd
cmp
add
sub
add
pop
test
in
pop
mov
add
adc
add
or
clc
xadd
xchg
cmp
clc
sbb
clc
sbb
add
repz
push
ljmp
add
xor
ds
add
and
imul
inc
clc
add
add
push
clc
sahf
sub
adc
jmp
lret
lret
std
das
push
or
sub
jmp
add
clc
dec
inc
clc
or
pusha
add
mov
clc
inc
clc
adc
add
add
leave
testb
inc
add
xor
add
clc
ret
xlat
xor
add
dec
xor
add
or
clc
sub
mov
clc
push
popa
add
call
push
in
cs
add
movsl
clc
jle
add
add
add
jl
rorl
test
ret
clc
rclb
add
add
mov
push
add
push
add
pop
out
adc
pop
jae
add
pop
adc
clc
or
adc
add
xchg
lahf
xchg
dec
fnclex
clc
mov
inc
clc
pop
or
add
filds
add
xchg
or
mov
add
jae
add
and
add
leave
lods
jns
jnp
cmpsl
clc
lret
clc
int3
jns
mov
add
sub
test
adc
add
jae
add
cmp
sahf
loop
cwtl
lods
leave
sti
aas
pop
xchg
mov
push
add
mov
clc
or
clc
inc
add
push
add
icebp
loopne
jmp
add
clc
dec
mov
jecxz
cmpsl
clc
mov
add
mov
pop
push
ss
add
scas
cmp
mov
cmp
add
cmp
inc
add
mov
fs
xchg
cmp
jmp
add
xbegin
or
ljmp
clc
sar
clc
enter
clc
lea
add
je
std
clc
xchg
gs
add
add
in
add
add
dec
jp
cmp
fldt
clc
push
add
jl
lea
add
clc
pop
pop
enter
clc
outsb
mov
clc
cli
ljmp
clc
xlat
addr16
jno
add
sti
xlat
xbegin
add
push
clc
push
add
dec
jno
add
add
push
imul
add
dec
or
insl
cld
je
divl
clc
in
loop
ds
cmp
add
cltd
test
clc
mov
add
add
xor
add
add
add
mov
sahf
inc
add
fldcw
inc
add
add
shrb
jnp
add
add
mov
add
lahf
in
jne
lret
ret
clc
and
add
rolb
add
stos
pop
data16
xchg
jecxz
ret
add
stc
jmp
in
mov
sbb
add
repnz
sub
clc
pusha
add
out
mov
clc
addr16
in
push
insb
mov
add
sbb
clc
test
jnp
clc
jmp
mov
clc
dec
stc
sar
clc
clc
inc
add
stos
xchg
push
add
push
jo
add
mov
je
push
xchg
or
add
jle
inc
add
mov
jb
add
clc
nop
push
in
xor
xlat
adc
add
xor
add
add
jg
clc
or
mov
cmp
mov
add
add
lret
push
add
fdivrl
icebp
mov
cwtl
mov
add
jl
dec
ret
clc
into
int3
xchg
and
add
add
jns
add
out
pop
pop
add
add
add
fcmovnu
fxch
lods
xchg
insb
shlb
adc
add
clc
pcmpeqb
mov
data16
push
add
data16
into
dec
push
jp
xchg
jns
push
add
ja
jmp
aas
sub
add
cmp
clc
enter
repz
clc
adc
add
cmp
mov
insb
fcmovnu
and
add
sub
add
push
cmp
pop
or
lret
lret
add
inc
clc
inc
clc
mov
clc
mov
pop
int3
jge
or
clc
mov
add
out
push
mov
clc
test
add
test
lahf
inc
add
jnp
add
lcall
add
jb
add
cmp
std
repnz
push
add
push
or
fsts
dec
push
add
ds
insb
dec
add
add
adc
add
clc
fs
and
add
mov
push
jns
clc
cmc
clc
push
call
clc
jns
mov
ret
clc
in
sti
mov
sbb
test
add
es
jns
aad
jg
clc
or
mov
pop
pop
jne
clc
sub
out
or
ljmp
aaa
sub
out
push
and
dec
fidivl
in
sbb
stc
neg
mov
fistps
mov
int3
cmp
add
xchg
cmp
add
jb
add
clc
stc
loope
jno
add
xlat
lods
cmp
dec
lahf
ljmp
clc
psraw
add
add
test
clc
ja
clc
cmc
in
mov
fsubrp
test
inc
add
inc
add
jp
repz
jns
jo
add
cwtl
bound
add
mov
pop
or
lcall
mov
dec
lcall
test
add
push
into
push
dec
xchg
out
sar
lcall
add
add
and
add
add
adc
add
clc
loop
xchg
sbb
repz
cltd
push
stc
pusha
add
push
popf
and
add
xchg
mov
add
clc
sub
sbb
sbb
ljmp
clc
inc
add
sub
and
add
dec
and
insl
xor
add
mov
std
adc
add
clc
and
add
add
imul
add
enter
clc
xchg
fmull
clc
xchg
mov
insl
aad
add
add
in
pop
iret
xchg
mov
fstl
add
jmp
clc
xchg
loopne
push
adc
add
sbb
sbb
cmp
fistl
iret
cmp
lret
fwait
out
mov
lahf
pop
clc
jns
clc
adc
add
scas
fcoms
jo
add
ret
clc
push
mov
clc
mov
clc
imull
out
sbb
add
adc
add
cld
pop
pop
insb
jmp
cmp
xlat
sub
mov
clc
and
add
clc
js
aam
adc
add
add
ffreep
clc
pusha
add
cmp
clc
adc
add
das
mov
clc
mov
push
add
and
add
loop
pop
xchg
xchg
dec
pop
cmp
mov
or
xor
add
add
lods
loop
mov
es
ficomps
add
sbb
or
dec
mov
add
jp
ficompl
fs
sar
aad
imul
xor
add
sub
jo
add
es
and
fs
sub
clc
cmp
cwtl
cmp
clc
cmp
jl
add
bound
add
test
sbb
push
and
jp
loope
dec
fsubrl
outsb
or
add
data16
add
add
sti
mov
addps
fdivs
clc
int
mov
fisttpl
shlb
add
daa
clc
aaa
mov
adc
jmp
sbb
mov
or
inc
clc
and
add
add
or
mov
add
mov
or
clc
pop
mov
push
sahf
jnp
mov
push
dec
jp
fsts
into
jne
fmul
push
jmp
add
xchg
lret
cmp
add
and
add
in
push
add
stos
push
fwait
dec
mov
or
scas
add
push
add
add
sub
xchg
fldenv
mov
inc
add
popl
pop
jne
sub
in
xchg
cmpsb
clc
pop
cs
mov
fidivl
add
lret
mov
add
jae
add
push
mov
sbb
cli
in
mov
fsubrl
mov
sar
add
popa
add
and
add
push
mov
fdivrs
xchg
mov
clc
xchg
fnsave
add
and
add
xor
clc
mov
clc
sbb
filds
add
mov
add
pop
sar
mov
add
pop
dec
out
stc
sahf
push
add
add
pop
or
mov
xor
add
add
dec
divb
lahf
dec
cld
pop
dec
dec
cld
in
jl
inc
clc
gs
sbb
clc
nop
clc
sub
jle
clc
xchg
pusha
add
mov
jns
adc
add
scas
pop
icebp
push
xchg
mov
jns
clc
mov
push
add
aaa
mov
hlt
sbb
clc
pop
push
pop
data16
testl
clc
cmp
sub
clc
jo
add
xor
add
clc
push
cmp
add
lcall
pop
int
clc
in
mov
in
xor
add
jmp
ja
clc
xchg
inc
add
je
dec
ret
clc
arpl
add
add
cmp
scas
leave
mov
sar
mov
gs
and
add
mov
jns
incb
add
ret
mov
add
pop
jg
or
jg
adc
add
add
cmc
and
add
inc
add
popa
add
loope
sbb
add
cmp
mov
jecxz
js
push
add
mov
sti
clc
mov
clc
jae
add
int3
mov
push
data16
addr16
jae
add
add
clc
cmpsl
clc
mov
and
cld
sbb
sbb
add
and
add
add
mov
clc
add
add
sub
sub
add
push
add
jecxz
add
outsl
and
xor
add
clc
ds
flds
add
fsts
add
nop
xor
rcll
add
insl
lret
mov
sbb
sbb
clc
lods
aas
inc
add
iret
push
xabort
mov
cmp
add
arpl
add
sub
push
push
add
add
add
jnp
lock
cmovb
add
push
clc
cltd
inc
add
mov
push
add
adc
ja
add
int3
xchg
xor
add
cwtl
cmp
clc
cli
dec
adc
add
mov
loop
cmp
lret
push
add
xbegin
out
sar
cmp
ss
push
add
add
add
fimull
dec
or
add
jmp
dec
mov
stos
jecxz
cmove
icebp
jbe
fdivrs
sbb
iret
xlat
ds
xchg
aad
mov
or
inc
add
push
popf
push
jmp
add
test
sbb
popa
add
fsubrl
leave
pop
or
add
add
add
push
add
xor
add
clc
int
sar
mov
clc
fs
scas
imul
sahf
imul
add
sub
add
addr16
adc
add
clc
push
clc
insb
stc
test
mov
inc
add
dec
sub
mov
clc
cld
jns
lcall
mov
cmpsl
clc
add
add
pop
adc
add
aam
dec
int
clc
test
push
add
jg
add
add
add
fidivrl
add
add
clc
adc
jnp
clc
in
ds
add
imul
sbb
test
repz
data16
adc
add
int3
fstps
imul
xlat
sub
xchg
pop
out
dec
jecxz
cmpsl
clc
dec
sbb
rcrl
fstps
test
pop
popf
push
cmp
adc
add
std
push
add
sar
ss
nop
aaa
push
add
cmp
sar
sar
cmp
inc
clc
ja
xchg
push
cmp
clc
adc
add
add
jns
jne
sti
mov
clc
test
inc
clc
pop
clc
mov
sar
mov
ret
sbb
adc
and
adc
add
clc
pop
clc
leave
mov
out
mov
push
fidivrl
ljmp
push
add
sub
clc
add
fstl
jo
add
or
inc
clc
mov
add
push
in
outsl
dec
out
sbb
dec
mov
xchg
xor
add
clc
xbegin
sbb
add
packsswb
add
lcall
add
bnd
pop
xlat
mov
dec
mov
addr16
mov
loop
xor
add
add
arpl
add
repnz
add
cmp
add
test
xchg
pop
iret
adc
add
es
mov
adc
add
outsb
jecxz
leave
inc
add
push
add
mov
add
loop
out
rorb
add
pop
xor
add
enter
inc
add
ret
clc
xor
clc
lcall
int3
cmp
add
lods
pop
dec
xbegin
sar
or
ret
clc
fmuls
std
cmp
rolb
add
loope
lock
xchg
push
add
xor
add
in
out
and
mov
clc
push
add
mov
shlb
add
and
add
mov
rol
clc
in
sub
into
sarl
add
add
clc
das
push
push
sahf
hlt
negb
lret
sub
fcompl
push
mov
clc
sbb
clc
sbb
mov
je
in
sbb
clc
fwait
cmp
inc
clc
or
clc
mov
popf
shlb
mov
clc
or
sbb
inc
add
sbb
arpl
add
fwait
data16
fmuls
test
and
add
jp
clc
faddl
add
clc
enter
inc
add
xor
mov
xchg
stos
je
add
jno
add
add
sbb
or
daa
clc
sti
sar
cmpsl
clc
jp
xabort
cs
mov
clc
aad
adc
add
sub
dec
or
icebp
addr16
cmp
aas
inc
clc
int3
sahf
adc
add
clc
stc
jp
fdivr
aas
loopne
and
jge
notl
js
test
or
clc
insl
in
test
js
fists
outsl
clc
shll
and
add
fstp
cmp
in
and
add
shrl
add
clc
dec
sub
cmc
mov
add
add
into
shll
add
popa
add
insl
bnd
mov
sub
outsb
xbegin
push
add
mov
clc
dec
jne
or
adc
aas
insl
xchg
sbb
add
mov
cmp
sbb
and
add
cmpsb
clc
jg
jae
add
test
clc
cmp
add
fs
fidivrl
mov
jbe
clc
repz
or
int
in
rcrl
add
add
jnp
add
sub
aam
clc
out
repnz
insl
fimuls
pushf
aad
clc
imul
add
xor
add
add
xor
add
lret
mov
jo
add
clc
sahf
in
rcl
je
insb
std
fcmovu
sbb
sar
add
add
add
clc
test
clc
mov
push
pusha
add
aad
int
clc
mov
cltd
idivl
xabort
mov
fwait
and
add
clc
push
jbe
mov
fisubrl
scas
xor
clc
outsl
popf
aad
push
xchg
popa
add
cwtl
ret
clc
push
clc
call
add
scas
jae
add
pop
dec
dec
fbld
pop
clc
fcompl
xor
add
popa
add
xor
add
lret
add
lcall
and
add
add
pop
clc
inc
add
push
add
fistl
add
cwtl
das
jmp
sar
mov
inc
clc
push
scas
push
add
sar
mov
test
sbb
add
add
add
cmp
fnstcw
cmp
mov
ret
clc
in
lcall
add
xchg
leave
out
clc
vcomiss
xor
add
sbb
add
out
or
clc
xor
add
clc
inc
clc
jle
mov
push
clc
jae
add
xchg
jmp
pop
or
dec
cmp
dec
repz
inc
add
cmp
stos
loope
imul
add
push
clc
test
and
add
sub
clc
mov
clc
cs
mov
clc
dec
test
test
add
imul
pop
cltd
cwtl
aaa
sar
scas
aas
cmp
sar
aam
add
stos
lods
sbb
sub
clc
pushf
push
adc
add
insl
cltd
push
loopne
bound
add
clc
inc
clc
jle
sub
mov
fsts
clc
clc
test
adc
clc
push
add
sahf
cmp
lock
mov
dec
and
add
add
aaa
sub
fdivl
pop
mov
clc
imul
add
sar
add
jb
add
sub
clc
cmp
clc
push
imul
mov
clc
inc
add
dec
xchg
lahf
pop
cwtl
shl
ficomps
jge
clc
push
mov
jno
add
adc
add
clc
xchg
nop
cmp
ret
mov
ds
xlat
xchg
mov
add
dec
clc
cmp
clc
icebp
cmp
jb
add
cltd
push
sti
add
add
clc
adc
add
add
clc
lret
add
outsb
xlat
test
or
add
jge
jae
add
mov
or
lahf
xchg
jne
clc
sahf
or
sub
mov
stos
ja
mov
mov
bound
add
js
in
test
repnz
repnz
xchg
scas
dec
lahf
sbb
mov
addr16
cmp
cmp
dec
xchg
mov
push
push
scas
push
add
cwtl
cmp
clc
scas
in
and
add
gs
dec
test
mov
add
clc
sbb
add
add
cld
gs
pop
stos
enter
mov
lcall
sahf
sti
scas
mov
xlat
lret
xchg
jne
add
repz
clc
arpl
add
mull
add
out
cltd
inc
clc
cmp
add
xchg
add
xchg
dec
jg
or
xchg
jg
clc
cmpsl
clc
cli
cwtl
push
movsb
clc
mov
aaa
movsl
clc
jle
cmp
pop
in
add
add
inc
add
push
add
lret
sub
clc
insl
cmp
adc
add
sbb
sbb
clc
cmp
idivl
ljmp
add
push
mov
ret
clc
enter
ret
clc
or
add
out
int3
hlt
xlat
test
in
lret
cmp
clc
pop
push
add
cmp
clc
xchg
sar
mov
push
sub
movsl
clc
pushf
dec
imul
mov
jns
cld
mov
clc
loope
add
add
lea
add
push
add
leave
lcall
lock
push
hlt
std
pop
jmp
add
pop
mov
add
popl
add
stos
loopne
cmp
add
and
clc
jge
clc
cmc
xchg
ret
pop
rorb
add
push
movsb
clc
insl
insb
adc
add
add
push
ret
clc
or
clc
je
sar
xchg
push
test
clc
mov
clc
and
mov
cwtl
out
xchg
arpl
add
clc
push
aad
clc
dec
js
jecxz
push
add
jbe
pushf
xbegin
add
add
cmp
add
dec
or
clc
ss
clc
xor
add
clc
test
cmp
mov
add
add
dec
hlt
loop
cmpsl
clc
mov
adc
xor
add
add
popf
cmp
or
add
add
mov
daa
clc
mov
lret
lret
repz
cmp
clc
mov
cmp
xor
add
pushf
jne
add
dec
and
add
test
mov
sar
add
data16
xlat
outsl
iret
out
pop
sbb
clc
bound
add
push
inc
clc
inc
clc
push
bnd
bound
add
sbb
clc
sahf
add
add
clc
movsb
clc
push
add
filds
cmp
clc
mov
pop
cmp
aaa
push
mov
mov
clc
cltd
cmc
pop
shll
add
add
clc
jmp
cmp
xchg
jnp
dec
out
push
into
cwtl
fldcw
or
clc
jno
add
cmp
add
jo
add
add
shrb
fnstsw
mov
clc
or
xor
add
clc
scas
cmp
add
add
rclb
add
adc
add
jmp
clc
xchg
sbb
sar
xor
add
add
popf
add
add
add
lods
cmp
clc
adc
popa
add
movsb
clc
addr16
data16
or
add
imul
jp
stos
mov
test
jmp
sti
sub
clc
loop
xbegin
mov
or
imul
or
xlat
cmc
aas
loop
inc
clc
sti
ss
clc
mov
add
mov
js
pop
aad
out
imul
xchg
cmp
xor
add
bswap
mov
cmp
cmpsl
clc
mull
aaa
add
add
nop
testl
clc
jb
add
add
or
jns
push
sbb
mov
mov
inc
clc
shll
clc
ret
clc
cmp
push
pop
and
add
clc
dec
cmp
add
sar
mov
pop
clc
add
add
clc
or
jbe
dec
ds
fimull
mov
std
or
jecxz
adc
add
mov
clc
adc
add
push
test
cwtl
lods
inc
clc
lret
jmp
sub
sub
dec
rcrb
dec
push
lret
outsb
lahf
pop
xchg
maxps
aaa
test
cwtl
adc
add
add
xlat
cmp
clc
clc
or
out
stos
sub
aaa
or
clc
jg
insb
outsl
or
or
test
clc
xchg
inc
add
xabort
clc
push
add
and
mov
or
scas
xchg
mov
jmp
clc
adc
add
outsb
test
pop
lods
pop
dec
xchg
xor
add
dec
sar
icebp
adc
add
sahf
scas
and
add
clc
push
add
xchg
insb
test
add
mov
and
add
xchg
loopne
popa
add
and
add
add
and
test
lea
cmpsl
clc
in
aam
ficoml
imulb
arpl
add
clc
ljmp
adc
add
clc
sub
cltd
pop
idiv
push
pop
xbegin
lret
in
rcrb
adc
add
rcrl
ljmp
add
sar
mov
dec
inc
add
xchg
dec
sub
add
push
add
xchg
mov
add
leave
dec
xchg
test
mov
clc
adc
add
clc
mov
testl
imul
add
add
out
jbe
fldenv
add
add
push
lret
push
mov
jecxz
jne
xor
add
xor
add
es
mov
clc
aad
clc
shr
sbb
add
cmp
repnz
add
adc
add
movsb
clc
sub
add
pop
cmp
mov
repnz
sbb
insb
stc
dec
enter
mov
fdivrs
or
mov
or
clc
lret
push
add
scas
jne
jp
mov
pop
data16
xor
fs
loope
popf
sbb
clc
test
inc
add
dec
bound
add
mov
sar
inc
clc
mov
xchg
xchg
int3
lret
movsb
clc
dec
add
and
add
clc
mov
add
cmp
mov
clc
imul
lods
pop
hlt
or
add
add
fs
sahf
sbb
repz
adc
add
and
add
add
add
add
clc
sbb
enter
stos
jo
add
clc
das
jno
add
ret
mov
push
clc
xor
add
es
aas
dec
test
clc
jnp
jae
add
cmp
mov
clc
fs
repz
out
fisubrs
add
mov
clc
xor
add
adc
add
mov
call
add
sub
dec
and
add
xchg
pusha
add
sbb
add
xchg
jg
xabort
mov
add
xor
add
push
add
xlat
sbb
xabort
add
sahf
inc
clc
and
add
inc
clc
jp
clc
ret
clc
pop
pop
mov
mov
clc
mov
enter
rcl
cmp
adc
add
add
xchg
add
add
add
dec
fs
iret
mov
rcr
or
mov
test
clc
scas
cmp
clc
cmp
lods
sahf
sbb
add
outsb
add
movsb
clc
adc
add
push
add
and
add
add
add
clc
popa
add
test
add
jge
clc
mov
insl
mov
call
test
sub
movsb
clc
sub
dec
push
lahf
repz
int3
mov
int3
cld
loope
adc
insl
cmp
inc
clc
test
dec
popf
push
insb
add
add
clc
jmp
or
cltd
sub
add
icebp
loope
das
adc
cwtl
bound
add
out
cs
test
add
dec
bound
add
mov
mov
add
fadd
clc
add
add
add
mov
fldt
add
cmpsb
clc
stos
add
add
ss
ss
pop
sar
clc
insl
xchg
test
repz
clc
jmp
cmp
pop
adc
cmp
cmc
int
cld
jp
clc
dec
jg
das
cmp
pop
test
xor
add
aaa
cltd
push
add
ds
jl
mov
clc
pop
jb
add
clc
xabort
mov
clc
inc
add
jmp
jle
icebp
cmp
and
xchg
push
ds
pop
clc
icebp
lret
in
in
sar
sbb
adc
add
ja
rcll
stos
test
es
mov
add
ljmp
or
add
ret
clc
xchg
push
clc
seto
add
jle
inc
add
lods
adc
add
add
jge
pop
pop
clc
sar
bound
add
adc
add
aaa
nop
outsb
inc
add
shlb
jge
add
rolb
mov
arpl
add
and
mov
inc
add
xchg
repnz
dec
or
clc
ds
loopne
inc
clc
xchg
sub
add
cmpsb
clc
nop
in
push
pop
and
add
mov
clc
jmp
enter
add
lret
add
add
bound
add
and
add
add
mov
add
out
out
popa
add
cmp
add
rcrb
cwtl
or
cmp
add
push
ds
aad
clc
jl
imul
add
repnz
clc
in
mov
cli
xabort
clc
cwtl
push
clc
clc
cmpsl
clc
add
pop
sbb
add
add
or
imul
clc
push
add
xor
push
add
pop
xchg
jnp
add
jbe
clc
adc
add
add
add
jb
add
cmp
outsb
and
add
sub
add
push
adc
clc
dec
jp
add
pop
dec
in
bound
add
hlt
push
add
mov
sub
ret
test
clc
fsubr
stc
test
clc
inc
add
bound
add
clc
rcrl
add
push
add
lret
sbb
int
xor
add
imulb
ret
lret
jmp
sub
ret
mov
clc
aad
jl
add
xchg
or
xchg
push
mov
stos
pop
dec
ss
add
lret
add
xor
add
cmpsb
clc
xchg
jecxz
movsl
clc
mov
jmp
mov
clc
push
out
push
jae
add
xor
add
test
mov
xchg
into
sub
adc
add
scas
push
adc
add
pop
clc
cmp
cmp
add
and
and
clc
ljmp
clc
das
xchg
cld
cmp
xchg
cmp
clc
mov
stos
lods
es
adc
add
adc
add
cmp
add
arpl
add
sbb
and
add
clc
addr16
jle
clc
outsl
or
in
ficomps
cld
mov
adc
add
add
xor
add
ret
clc
mov
add
lods
pusha
add
mov
clc
lods
or
cmp
pop
icebp
xchg
rclb
add
add
aaa
pop
dec
xor
add
loopne
xchg
xchg
clc
or
jnp
leave
push
test
fldenv
add
sub
push
clc
mov
xchg
sar
movsb
clc
test
clc
mov
add
lods
cmp
icebp
adc
add
cmp
aas
xor
clc
aad
cmp
add
cmc
cld
fstpt
clc
mov
fwait
xchg
bound
add
std
pop
outsl
or
pop
lods
stos
iret
aad
clc
push
insl
int3
adc
add
add
mov
gs
in
adc
add
jg
mov
clc
imul
inc
add
es
cmpsl
clc
pop
dec
pop
jne
clc
pop
inc
add
adc
add
mov
mov
insl
sbb
xor
add
mov
or
add
cwtl
sub
jp
add
imul
lahf
outsl
movsl
clc
jno
add
xor
add
sbb
clc
outsb
insl
dec
adc
add
jne
lcall
add
cli
in
mov
dec
dec
pop
pop
jp
dec
push
lea
cwtl
jae
add
in
jle
lret
int
clc
lods
push
mov
clc
inc
add
and
add
lods
xchg
mov
insl
jne
or
out
movsb
clc
add
add
fsubrs
jge
aad
jo
add
sbb
clc
rcrl
dec
sub
add
xchg
js
clc
add
add
jns
lea
dec
rorb
sbb
add
lock
shr
mov
data16
filds
sub
fmull
clc
pop
sbb
push
mov
es
faddl
cwtl
or
push
pop
aaa
fisttpll
hlt
aas
mov
xor
clc
js
je
inc
add
dec
mov
clc
cld
aam
clc
dec
mov
mov
pop
adc
add
clc
iret
lea
xchg
pop
dec
mov
add
js
mov
mov
cs
scas
repz
hlt
cmp
test
jae
add
push
das
dec
mov
dec
iret
adc
test
repz
clc
leave
movsl
clc
popa
add
push
or
loope
pop
push
add
add
clc
sbb
add
cmpsl
clc
adc
add
mov
jb
add
push
pop
push
cmpsl
clc
cwtl
gs
in
xor
add
sub
clc
inc
add
dec
cmp
sar
cmp
loopne
ljmp
fimull
filds
imul
negb
loopne
jno
add
clc
xchg
sti
jb
add
xor
add
add
add
es
shrl
push
fdivrl
mov
add
loopne
imul
add
fstp
dec
int3
cmp
clc
and
add
lret
clc
add
clc
xor
add
add
add
add
xchg
sub
add
clc
in
mov
add
js
sar
mov
clc
dec
das
dec
fs
mov
jbe
clc
or
xor
inc
add
pop
sub
clc
pusha
add
jno
add
add
sub
add
clc
ja
add
sub
sar
jns
test
dec
sub
xchg
ds
dec
loop
fwait
repnz
sub
cmp
add
clc
clc
fbstp
aaa
adc
add
leave
xor
add
clc
xchg
xchg
fistps
das
jg
inc
clc
repnz
cmp
sti
push
pop
add
add
mov
push
add
addr16
in
fwait
push
clc
pop
loope
ss
fdivrl
mov
add
push
dec
dec
jnp
dec
aas
test
cli
inc
clc
loopne
push
add
daa
clc
pop
fimuls
clc
inc
add
xchg
daa
clc
xor
add
lahf
xchg
in
aas
sbb
jle
push
or
adc
add
add
inc
clc
enter
mov
jge
or
repnz
push
in
inc
clc
and
add
or
jo
add
rep
mov
clc
shll
pop
clc
cmp
add
stos
arpl
add
push
add
jbe
mov
fsubrl
sbb
pop
bound
add
clc
mov
jno
add
add
xabort
xchg
jge
or
and
add
xor
add
fbstp
add
add
add
clc
cld
push
add
jo
add
add
mov
lahf
scas
jmp
pushf
es
jmp
sahf
imulb
ja
bound
add
clc
mov
clc
cld
mov
mov
sahf
adc
add
or
clc
inc
clc
daa
clc
xor
add
jge
cmp
mov
add
das
fs
ret
cltd
aaa
and
add
clc
lea
adc
pop
out
mov
popa
add
mov
inc
add
test
clc
clc
sar
icebp
sarb
xchg
adc
add
add
xor
add
data16
push
pop
and
add
add
dec
push
idivl
jo
add
add
pop
mov
push
loopne
addr16
imul
clc
inc
clc
mov
add
insl
int3
push
mov
mov
divl
mov
movsl
clc
inc
clc
call
pop
inc
clc
fsubrs
sub
es
cmp
and
add
hlt
push
clc
mov
aad
xor
add
inc
add
jge
fldl
pop
adc
add
clc
jge
clc
fwait
pop
out
fwait
inc
add
jmp
adc
add
clc
dec
and
or
mov
xchg
jmp
sbb
clc
push
sbb
add
pop
sub
js
clc
and
push
push
sar
and
add
clc
test
popf
mov
data16
inc
clc
arpl
add
add
clc
jp
pop
cld
pop
jb
add
add
int
clc
or
add
xlat
and
add
shll
out
or
in
cs
add
sub
add
jecxz
or
mov
add
pop
stos
lock
push
jns
jp
ja
clc
mul
clc
dec
jb
add
add
mov
clc
addr16
xor
add
clc
notl
add
cmp
nop
int
sub
pop
jo
add
clc
sbb
clc
int
add
in
push
xlat
push
add
or
inc
clc
inc
clc
bound
add
popf
sub
mov
adc
add
hlt
sub
jg
clc
imul
clc
insb
lcall
pop
cli
cwtl
lcall
insl
out
mov
mov
add
icebp
push
add
mov
gs
movsb
clc
lret
sbb
ja
adc
add
clc
je
push
cwtl
mov
sub
add
shll
lahf
cmpsb
clc
out
in
dec
pop
aaa
nop
jbe
fldt
sub
outsl
enter
stos
clc
xor
add
out
adc
add
xor
add
in
das
and
add
cmp
adc
add
lret
clc
sarb
cwtl
stos
inc
add
stos
cmp
add
loop
xlat
loopne,pn
shlb
add
mov
cmp
mov
or
ja
clc
dec
adc
insb
cli
dec
mov
mov
repz
std
xor
add
push
add
sbb
or
jp
in
fucom
clc
cmp
add
add
sub
mov
add
mov
clc
scas
mov
clc
xchg
lock
add
clc
sbb
add
je
xchg
xchg
pop
adc
ljmp
clc
xor
add
data16
jmp
add
testb
jne
mov
mov
clc
cltd
pop
repz
data16
adc
dec
jnp
adc
clc
jnp
cmp
mov
lret
clc
jae
add
jae
add
clc
pop
mov
add
pop
clc
mov
clc
ja
mov
repz
clc
mov
leave
xchg
pop
clc
xor
add
adc
clc
repnz
es
sarl
add
sub
ljmp
icebp
push
push
add
je
clc
or
clc
jo
add
stos
mov
clc
mov
add
cmp
mov
fistl
add
mov
dec
mov
xchg
adc
add
inc
clc
xor
add
push
in
fsubrp
inc
add
cltd
xor
hlt
cmp
clc
ss
push
sbb
xchg
cmp
into
in
or
sbb
add
add
jl
test
icebp
in
cmp
clc
hlt
data16
push
add
fstps
arpl
add
in
jnp
clc
xor
add
or
mov
ja
or
jns
clc
rcrb
clc
jge
dec
lods
bound
add
fs
mov
cs
mov
add
popf
loopne
cli
cmp
mov
mov
add
add
add
adc
add
sbb
add
sti
jle
mov
cmp
add
add
xchg
test
rorb
push
ret
xchg
dec
lea
add
mov
or
jo
add
add
clc
and
fistl
add
sbb
sub
add
mov
mov
push
xor
add
daa
clc
lods
shl
mov
es
inc
clc
fnstenv
test
xchg
mov
cmp
test
mov
imul
mov
clc
cmpsl
clc
popa
add
mov
clc
pusha
add
out
mov
pusha
add
hlt
mov
stc
test
cmp
aaa
ret
clc
mov
scas
mov
sar
xor
add
xchg
or
clc
inc
add
xabort
clc
ja
sub
add
loop
or
and
add
clc
enter
clc
test
xor
add
add
cmp
add
xor
add
cmc
test
dec
mov
cwtl
and
add
xabort
loopne
or
mov
cmc
and
add
popa
add
mov
xchg
cltd
out
xchg
cmpsl
clc
inc
clc
insl
push
mov
add
add
sarl
dec
call
mov
lret
cmc
mov
cmp
clc
sub
cmpsb
clc
addr16
pop
xchg
mov
repnz
pusha
add
xchg
jnp
out
lods
ret
mov
add
push
fs
or
jp
jne
jle
out
mov
mov
clc
mov
lret
push
add
decb
test
push
jmp
out
lods
leave
or
cmpsb
clc
cmp
push
in
mov
add
jl
pop
data16
std
test
leave
mov
jo
add
fmuls
jmp
jecxz
push
add
adc
add
add
dec
add
add
rcll
add
add
cmp
clc
ja
add
sub
mov
clc
jae
add
add
das
lret
sahf
xchg
mov
jp
add
gs
mov
add
clc
mov
out
adc
add
mov
mov
xabort
clc
scas
and
add
add
pop
adc
add
cmp
fisubrs
in
jl
clc
jb
add
add
popa
add
inc
clc
or
clc
dec
cmpsl
clc
and
adc
add
xor
add
cmp
lret
ds
aam
clc
inc
clc
sahf
jne
lret
call
pop
cmp
add
clc
inc
add
adc
add
clc
dec
das
int3
xchg
lock
clc
sbb
cli
clc
das
cld
in
fildll
enter
add
add
pop
fwait
rcrl
xchg
mov
dec
inc
clc
inc
add
popa
add
loop
pop
jmp
roll
add
clc
pop
loop
push
ja
pop
clc
popa
add
imul
pop
imul
notb
add
add
ficoms
clc
jnp
insb
or
je
das
lcall
hlt
xor
add
std
cld
in
out
sub
mov
dec
inc
clc
push
add
push
xadd
fnsave
enter
mov
clc
test
scas
int3
xbegin
sar
mov
adc
add
cmp
push
sbb
xor
add
sbb
inc
clc
adc
add
clc
cmpsl
clc
mov
clc
in
daa
clc
adc
add
popf
push
sar
sub
mov
xor
add
and
add
pop
sbb
je
idivb
clc
xchg
inc
clc
mov
add
xchg
stc
rcrb
add
outsb
dec
add
loop
mov
aas
icebp
std
pop
xchg
je
arpl
add
fwait
movsb
clc
jmp
push
add
push
add
mov
dec
mov
add
clc
jg
jmp
inc
clc
rcrl
xchg
jo
add
stos
xchg
clc
movsl
clc
mov
insb
jnp
dec
pop
xchg
adc
add
add
pop
xor
add
cmp
clc
mov
js
clc
push
add
lods
mov
ds
popa
add
mov
sub
xor
add
mov
shrl
shufps
add
lcall
into
repz
add
fs
loop
or
je
enter
pop
xbegin
add
clc
xchg
lock
clc
int3
mov
add
add
movsb
clc
dec
in
mov
popl
add
xchg
jmp
scas
in
xchg
pop
ljmp
mov
rorl
mov
add
in
mov
fcompl
sub
ljmp
clc
push
add
repnz
pop
push
add
imul
add
into
pop
clc
jg
aad
clc
add
add
jmp
fiadds
clc
push
mov
cmp
fldl
add
add
idivb
movsl
clc
mov
pop
call
add
add
jge
clc
jmp
clc
shlb
clc
test
clc
das
adc
dec
jmp
loop
pop
stos
inc
clc
mov
sub
jg
or
add
ficomps
js
mov
mov
in
xor
add
add
add
clc
loope
jb
add
in
add
or
mov
clc
and
add
clc
push
cmp
sar
push
sbb
lods
testl
clc
pusha
add
add
add
jmp
testl
mov
clc
mov
push
cmpsl
clc
sub
xor
add
or
xchg
dec
and
add
cmpsb
clc
lcall
add
test
clc
iret
dec
adc
call
mov
push
add
outsl
push
add
outsl
arpl
add
clc
inc
clc
adc
add
out
jns
push
xor
add
or
add
add
cmp
adc
clc
xchg
lcall
add
cltd
mov
jge
js
xor
add
clc
push
add
bound
add
add
xchg
adc
add
jno
add
adc
bound
add
loop
pop
cltd
std
in
out
adc
xor
fwait
repz
into
add
cmp
clc
inc
clc
pop
insb
pop
lret
push
inc
clc
jecxz
jo
add
jo
add
inc
add
jg
imul
insl
add
pop
push
add
jnp
jl
clc
inc
clc
sti
mov
clc
jecxz
scas
pop
aam
sub
xchg
lret
clc
mov
shlb
add
sar
repz
add
clc
or
lahf
push
pop
pop
clc
pop
sub
add
cmp
pop
call
xchg
testb
in
mov
jl
cmp
aad
int
sar
add
fwait
mov
sti
in
dec
sub
das
pop
push
add
xchg
jno
add
xchg
fnsave
insb
pop
pop
bound
add
sub
stos
ret
pop
inc
clc
push
roll
add
cmp
cmp
pop
mov
mov
add
mov
clc
aad
adc
add
bound
add
sbb
std
pop
jo
add
clc
bnd
clc
jne
clc
jg
and
add
gs
aas
mov
add
rclb
js
inc
add
cmp
add
stc
repnz
clc
inc
add
push
add
or
add
jo
add
add
mov
idiv
pop
ret
clc
and
add
add
push
mov
jl
add
mov
es
ljmp
clc
xchg
mov
mulb
jmp
xchg
insl
jge
data16
jecxz
mov
repz
inc
add
test
jbe
cmp
inc
clc
push
add
into
xbegin
mov
clc
cmc
fidivrs
cwtl
fcompl
clc
std
out
mov
outsl
arpl
add
sub
jge
clc
xor
clc
mov
xchg
ret
clc
xor
add
sar
add
jg
add
out
adc
or
add
lods
in
in
dec
jmp
pushf
movsl
clc
ss
jno
add
jno
add
lret
scas
inc
add
push
add
add
fwait
mov
pop
addr16
mov
jne
repnz
iret
int
xchg
jmp
clc
adc
add
add
je
add
push
jge
clc
out
cltd
dec
test
aad
clc
inc
add
dec
lods
sar
clc
loope
lahf
jnp
add
adc
jecxz
mov
and
add
clc
fiaddl
pushf
jno
add
push
add
or
sbb
add
lock
add
enter
sbb
pop
pusha
add
cld
jb
add
fdivrl
sbb
xor
add
add
add
scas
pop
pop
fsub
clc
jns
clc
inc
clc
aaa
gs
pop
std
push
pop
cmp
or
sar
mov
push
or
mov
in
cmp
add
repnz
ljmp
jb
add
add
inc
clc
fistps
add
jnp
into
and
add
cmc
loop
imul
clc
sahf
lcall
clc
xor
add
sub
out
xor
add
repnz
clc
addr16
push
imul
push
xchg
or
clc
roll
jae
add
clc
nop
sbb
clc
xchg
xchg
fs
cmp
insl
inc
clc
cli
lods
stos
push
add
ljmp
cmp
stos
cmc
dec
clc
incb
cmp
fldl
add
xor
adc
clc
jo
add
add
xabort
and
push
scas
and
add
xchg
xor
add
add
popf
jge
add
push
add
lods
xor
add
lods
jno
add
add
push
fists
add
xchg
cmp
dec
jmp
add
sbb
xor
add
add
cltd
and
mov
pop
mov
lock
inc
add
sub
ja
and
add
mov
xchg
sub
jp
add
add
mov
push
add
fcmovnb
clc
lahf
cmp
clc
or
clc
int
add
and
add
add
shll
xchg
and
add
add
test
decb
xabort
dec
cmp
clc
je
sahf
jae
add
in
sub
jecxz
pusha
add
fwait
cmp
lret
decl
mov
add
inc
clc
xor
add
icebp
movsl
clc
es
jnp
jo
add
clc
mov
iret
jle
jb
add
test
in
mov
add
xchg
movsb
clc
das
mov
clc
pop
add
add
push
dec
outsl
call
das
jmp
clc
sar
sbb
mov
sub
xor
lods
dec
loope
xabort
xor
add
outsl
movsb
clc
es
repz
add
push
add
add
test
mov
add
sarl
aad
add
repz
add
jmp
stos
or
push
add
out
gs
data16
xor
add
fildll
clc
ss
cmp
lahf
mov
add
xchg
xor
add
xchg
and
add
xchg
add
add
dec
cltd
rcrb
or
mov
clc
stos
jle
clc
js
and
add
add
xchg
cltd
and
add
clc
imul
in
push
nop
mov
or
add
sub
clc
mov
loope
xor
clc
and
arpl
add
add
jle
clc
mov
sub
clc
imul
xor
add
clc
jp
clc
xchg
lahf
fnstcw
push
add
repnz
lock
or
add
mov
adc
add
add
jns
clc
or
jle
mov
add
cld
add
add
int3
fdivrp
dec
popa
add
fadds
add
mov
add
clc
push
cmp
cmpsb
clc
sbb
add
add
sar
add
add
daa
clc
cmp
out
add
xchg
push
clc
sbb
lock
clc
repnz
mov
dec
and
add
add
clc
cvttps2pi
xchg
sub
or
pop
aam
clc
add
xchg
add
add
sbb
add
arpl
add
repz
clc
inc
add
xor
outsb
pop
jne
jmp
clc
out
xchg
mov
add
cli
xchg
in
call
xchg
jo
add
movsl
clc
or
xchg
pop
jl
add
stc
inc
add
movd
in
aas
mov
loopne
sbb
clc
mov
clc
int3
lea
popa
add
push
pop
sub
jo
add
mov
ljmp
clc
pop
push
jb
add
js
jbe
clc
hlt
rcr
and
clc
jne
clc
dec
xbegin
test
push
aam
out
cmp
fs
cli
insb
xchg
xbegin
clc
sub
add
test
sar
mov
clc
mov
clc
jle
ret
push
add
jmp
clc
sbb
clc
arpl
add
clc
pop
add
add
mov
dec
mov
cs
pusha
add
sbb
add
lret
clc
cmpsb
clc
lock
mov
gs
int
clc
mov
cli
shl
clc
sar
inc
clc
pop
repnz
pushf
push
mov
xchg
mov
push
push
movsb
clc
adc
add
test
or
loopne
insl
mov
pop
cmc
and
into
xchg
scas
mov
js
add
inc
clc
inc
clc
aas
sbb
loope
cmpsl
clc
xor
mov
fsubr
mov
add
xchg
adc
add
add
pop
and
add
ljmp
mov
pop
notb
add
cmp
insl
dec
stc
pop
clc
clc
mov
clc
mov
ss
mov
add
mov
sbb
add
jbe
sbb
sub
add
push
lret
add
sbb
clc
dec
aam
xchg
cmp
clc
push
outsl
add
clc
fsts
fucomip
push
add
in
sub
clc
bound
add
add
xbegin
add
clc
out
or
add
in
xor
add
add
cwtl
push
cltd
push
add
repz
add
cmpsl
clc
movsl
clc
and
add
xchg
or
mov
and
mov
repnz
sahf
lret
lahf
jo
add
adc
add
add
lret
sti
daa
clc
cmp
add
arpl
add
push
and
add
mov
rcrb
iret
nop
stos
add
add
add
clc
inc
add
cwtl
adc
add
clc
jae
add
clc
cltd
mov
mov
clc
lods
jp
xbegin
xchg
jecxz
push
clc
mov
clc
sbb
clc
mov
clc
or
clc
jp
add
mov
lahf
enter
add
and
add
xchg
mov
test
cltd
jbe
pop
or
clc
ret
dec
cmp
xor
add
jo
add
add
dec
pop
aad
outsb
sub
cmp
add
clc
push
add
out
dec
xor
add
fcompl
fs
sub
add
jge
adc
add
gs
stc
lods
push
or
lock
mov
add
inc
add
icebp
dec
clc
aad
add
mov
xabort
gs
and
add
cltd
icebp
outsb
cli
sti
add
add
std
into
adc
xchg
jbe
xchg
not
shlb
add
add
dec
insl
pop
sbb
jae
add
push
add
in
sub
inc
clc
sbb
lods
jmp
clc
jbe
jmp
clc
and
add
scas
adc
add
clc
cmp
xchg
aad
jl
xchg
sbb
add
dec
push
daa
clc
mov
add
xchg
and
add
mov
fisubrl
test
clc
push
clc
sub
clc
data16
sub
add
clc
lock
push
inc
add
inc
clc
outsl
push
xchg
lods
gs
in
sahf
jl
add
add
push
cmc
cli
leave
xchg
sub
cmp
cmp
xlat
es
in
jo
add
clc
aaa
sbb
add
rcrb
jb
add
add
leave
data16
push
into
xor
ret
clc
in
cmpsl
clc
pushf
adc
add
mov
clc
jb
add
adc
add
mov
push
add
dec
or
clc
int
mov
add
mov
fstpl
dec
sub
imull
clc
mov
push
sbb
adc
add
div
or
fsubr
cmp
out
mov
daa
clc
jb
add
add
or
add
add
in
or
clc
popf
jns
add
add
lcall
add
jb
add
add
fildll
xchg
aad
clc
sahf
popa
add
xchg
sub
mov
clc
cmp
cmp
clc
or
sar
mov
das
mov
or
add
jecxz
cmpsb
clc
jne
inc
add
push
fidivrl
mov
clc
mov
out
imul
add
xor
add
xor
add
add
lods
add
push
fildl
cmp
cmp
movsb
clc
mov
and
int
adc
add
add
icebp
dec
imul
add
pop
clc
inc
add
adc
jno
add
iret
adc
adc
add
cmpsb
clc
loope
in
mov
push
jb
add
add
add
clc
sbb
add
add
add
in
fdivrs
cltd
mov
or
rcr
cmp
add
pusha
add
xor
add
add
jb
add
cmp
mov
leave
mov
pop
push
clc
dec
sbb
daa
clc
mov
add
cmp
xor
add
dec
mov
clc
fsubp
clc
testl
test
sub
cmp
es
fs
mov
add
std
insl
dec
scas
aad
xchg
data16
aaa
jb
add
xchg
rorl
or
lock
add
add
sar
clc
cmp
movsl
clc
mov
xor
cmpsb
clc
bound
add
xchg
mov
mov
dec
cmc
jle
sar
clc
push
clc
test
add
add
add
add
mov
pop
hlt
insb
mov
add
push
outsl
xchg
inc
add
pusha
add
xor
add
clc
icebp
lock
add
jmp
add
add
cmpsb
clc
mov
pop
xchg
jl
add
xlat
push
mov
jae
add
xchg
and
add
xchg
into
repnz
call
cmp
dec
jns
clc
xchg
cmp
add
add
ljmp
jmp
cmp
clc
adc
lock
add
cwtl
push
push
add
fdivrs
in
cmp
add
stos
push
dec
jno
add
pop
hlt
inc
clc
dec
fisubrl
clc
psrad
xchg
xor
dec
mov
add
add
test
push
add
loopne
fdivl
add
clc
push
in
pop
ja
clc
clc
pop
mov
add
add
xchg
sub
lods
mulb
mov
loope
pop
mov
mov
adc
or
lods
sub
add
clc
sub
insl
xor
add
add
stos
notl
add
add
add
leave
cli
xor
add
pusha
add
jb
add
cwtl
cmp
and
gs
mov
jle
std
ret
clc
add
add
clc
dec
mov
add
xbegin
push
pop
outsl
out
stos
sub
bound
add
sbb
or
mov
dec
xchg
movsl
clc
cmp
jl
lret
sbb
add
xabort
cwtl
lock
add
mov
mov
testl
inc
add
mov
popf
shl
es
rol
clc
cli
mov
mov
sub
divl
int
jle
clc
call
clc
pushf
cmp
clc
icebp
pop
xchg
mov
sbb
pusha
add
dec
jge
stos
push
add
sbb
dec
imul
loopne
pop
push
jle
add
cmp
mov
jl
xchg
adc
add
adc
adc
clc
cmp
clc
shlb
shrl
sub
add
push
or
push
push
gs
adc
add
sub
clc
jbe
clc
ret
clc
je
nop
mov
add
sub
jle
clc
push
xchg
iret
mov
add
xlat
push
add
xabort
adc
add
icebp
or
or
jb
add
mov
sub
inc
clc
fs
push
lods
frstor
clc
sbb
add
push
add
sub
sbb
add
jmp
clc
push
mov
hlt
and
clc
pushf
xchg
inc
clc
xchg
mov
fistpll
sbb
add
enter
push
mov
and
pop
fwait
cli
jo
add
add
clc
and
dec
push
mov
mov
add
cwtl
pop
int
call
popf
cmp
gs
lcall
sub
sbb
cmp
outsb
imul
in
out
mov
add
divl
jmp
adc
add
lods
cltd
add
pop
pushf
jecxz
mov
add
aad
cwtl
push
add
and
add
inc
clc
mov
mov
mov
ds
add
mov
add
clc
sarl
clc
dec
mov
clc
iret
daa
clc
pop
cmovno
add
clc
imul
add
and
add
xchg
aad
gs
shl
jp
sub
fsts
add
mov
add
jno
add
add
push
add
inc
add
pop
scas
or
add
je
sar
lock
fcomp
mov
sub
movsb
clc
mov
add
jnp
cmp
sti
xor
add
clc
adc
add
cmp
clc
ljmp
mov
add
add
push
clc
mov
add
stos
lret
ja
pop
imul
repnz
sbb
add
ss
fisubrl
sahf
dec
cmp
add
jecxz
sbb
add
imull
jg
scas
fmuls
xor
add
mov
add
and
add
add
fcmovnb
clc
cmpsb
clc
push
add
addr16
mov
push
lret
fwait
sti
pop
nop
gs
xor
add
push
sbb
add
or
icebp
mov
insb
aad
or
pop
out
aad
nop
mov
cmp
clc
in
sub
out
push
pop
or
pop
clc
sbb
pop
stos
sar
lock
add
add
inc
clc
hlt
dec
into
dec
jne
sub
in
mov
add
jmp
mov
ds
add
pushf
xchg
sbb
add
add
sar
clc
xlat
adc
add
cld
cmpsb
clc
cld
hlt
mov
int3
mov
iret
arpl
add
adc
add
jmp
testb
push
xchg
enter
jns
xor
add
mov
add
aaa
dec
mov
add
add
mov
add
add
add
add
add
addr16
test
add
add
clc
cld
mov
push
cmp
clc
jae
add
clc
xchg
movsb
clc
sub
jg
or
clc
iret
clc
xchg
sbb
add
data16
inc
clc
pusha
add
popf
lods
lahf
addr16
cmpsb
clc
daa
clc
mov
add
test
out
push
mov
clc
cmp
clc
ss
loope
cld
dec
push
add
push
clc
inc
add
push
jmp
add
dec
lret
inc
add
cmp
add
add
xchg
xabort
inc
clc
cmp
clc
xbegin
cmp
jno
add
clc
sub
pop
pop
clc
cmp
clc
pop
inc
add
xor
add
xchg
jb
add
popa
add
out
jmp
xor
add
sbb
clc
adc
add
add
icebp
pop
mov
clc
cmp
add
add
add
das
adc
cmp
clc
jp
jno
add
ret
cmp
clc
or
in
sar
arpl
add
out
testl
mov
int3
in
dec
jbe
clc
xchg
je
scas
daa
clc
cwtl
jnp
dec
add
jg
out
adc
je
xchg
or
clc
imulb
ljmp
add
pop
clc
cmp
push
add
pusha
add
push
add
in
push
sti
cmc
xchg
jmp
clc
js
add
mov
add
fadds
add
cmp
add
outsl
js
das
in
xchg
mov
fstpt
clc
out
mov
push
add
out
sub
mov
add
mov
clc
fstl
mov
mov
cmc
inc
clc
push
add
stos
fwait
lahf
ficoms
sahf
movsb
clc
lods
jmp
add
sub
xchg
push
xchg
or
clc
cmp
add
adc
dec
ret
clc
xor
add
movsb
clc
scas
mov
add
hlt
inc
clc
jl
lock
clc
stos
cmp
jbe
dec
cmp
clc
aas
idivb
mov
xchg
cld
aam
or
add
adc
aaa
roll
mov
add
in
jne
add
jecxz
inc
add
or
in
jl
outsl
pop
inc
add
xor
add
add
push
add
sbb
shll
popf
and
add
xor
add
mov
mov
clc
test
and
add
clc
mov
pop
cwtl
jecxz
pop
cmp
lock
lfs
outsl
sbb
clc
fwait
cmp
cmp
clc
aas
mov
add
ret
clc
outsl
xchg
hlt
jmp
cmp
adc
add
imul
jmp
add
add
add
sub
popa
add
out
push
add
push
outsl
pop
xbegin
clc
int
and
add
iret
cmp
xchg
scas
and
add
clc
mov
add
push
add
pop
outsb
test
add
mov
clc
pause
inc
clc
xchg
js
mov
add
jecxz,pt
or
clc
arpl
add
adc
add
cmp
mov
pop
jne
add
mov
pop
cmp
or
clc
inc
clc
pop
mov
enter
clc
je
clc
adc
add
add
cmpsl
clc
leave
dec
cld
lods
cmpsb
clc
repz
jmp
push
add
jg
clc
mov
je
clc
fbld
dec
sub
xchg
fnstsw
push
sub
clc
sbb
adc
clc
jmp
add
mov
xbegin
pop
jnp
push
jno
add
clc
clc
outsl
or
and
add
clc
jo
add
cmp
clc
push
imul
dec
outsl
mov
or
add
dec
stc
incl
leave
ljmp
mov
add
add
add
sub
add
add
ret
cmp
mulb
pop
jnp
sub
jle
dec
sub
clc
mov
add
adc
add
add
xchg
nop
and
add
xchg
dec
mov
add
cmpsl
clc
adc
in
add
add
add
add
jge
xor
add
jl
clc
pop
cmpsl
clc
arpl
add
out
mov
call
push
mov
loope
daa
clc
test
add
out
pop
sub
mov
add
mov
pop
mov
add
fimuls
sti
cmp
add
add
clc
test
shl
clc
mov
clc
push
jbe
add
fnsave
add
mov
clc
push
das
pop
mov
xchg
xchg
xor
add
pushf
sarb
jo
add
add
add
add
add
add
and
add
and
add
jae
add
add
cmp
add
inc
clc
or
clc
mov
xchg
cmp
cmp
clc
jbe
xlat
shrb
das
xchg
add
add
add
lock
mov
add
cmp
add
popf
xor
add
add
out
iret
insb
pop
es
add
add
movsb
clc
paddusw
sub
scas
pop
xchg
dec
fcoms
add
ljmp
add
jne
sahf
jno
add
clc
xchg
or
fneni(8087
clc
repnz
xor
add
add
clc
adc
clc
push
testb
mov
or
mov
add
add
mov
mov
iret
add
add
or
xchg
xchg
hlt
push
mov
clc
pop
jp
add
stos
jecxz
clc
pop
cmp
adc
push
xor
push
add
leave
shl
clc
pop
inc
clc
out
cmp
sbb
mov
adc
add
xchg
mov
out
jne
inc
clc
fnstcw
clc
xlat
jnp
movsb
clc
ja
test
push
sub
clc
icebp
adc
add
jle
clc
scas
std
lods
and
add
mov
out
push
add
mov
rclb
clc
loopne
dec
xchg
sub
and
add
aam
popa
add
lea
clc
mov
jg
movsb
clc
data16
cmp
and
sti
dec
cmp
inc
add
add
add
mov
mov
clc
dec
xor
add
add
adc
add
pop
or
add
mov
clc
cmp
dec
lods
mov
lret
test
inc
clc
mov
loopne
push
xlat
or
clc
jp
clc
mov
clc
fisttps
sub
add
clc
sbb
pop
cmp
add
mov
pop
outsb
lret
test
mov
jno
add
or
nop
cmp
mov
adc
add
fildl
add
loop
fistps
clc
mov
xor
add
add
hlt
pop
mov
clc
lods
jge
mov
clc
xbegin
imul
jbe
and
push
xchg
shll
clc
jo
add
add
add
stos
cmp
clc
dec
pop
clc
xor
xor
add
jle
add
shrl
pop
and
sub
clc
mov
out
sarb
jg
jbe
dec
sbb
add
add
clc
xchg
into
adc
add
or
jge
push
clc
mov
add
lea
clc
push
fwait
insl
loop
and
lea
clc
jmp
or
icebp
loopne
mov
push
add
je
pop
test
pop
xabort
clc
incl
in
fst
sub
cmpsb
clc
push
add
sti
adc
add
clc
cmp
or
mov
scas
inc
add
jo
add
cmp
clc
mov
dec
adc
add
clc
add
add
add
xor
add
adc
clc
add
add
add
add
push
add
dec
addr16
sub
clc
adc
add
mov
cmp
loop
xor
xabort
stc
test
dec
imul
add
adc
imul
add
stos
add
add
adc
jl
clc
xbegin
clc
cltd
jo
add
mov
fs
stos
xlat
mov
add
push
inc
clc
iret
enter
clc
mov
in
sar
das
notb
mov
or
jo
add
test
inc
add
ds
inc
add
mov
sbb
pop
jo
add
mov
clc
out
xor
inc
add
fstpt
dec
cltd
jno
add
cmpsl
clc
outsb
clc
jo
add
clc
jl
in
roll
add
pop
fidivl
add
dec
cmp
pop
jmp
add
mov
cmp
popf
stos
outsb
lahf
ss
add
add
and
add
sar
add
xchg
ret
clc
outsl
and
clc
mov
add
dec
xor
add
and
add
push
mov
add
clc
push
mov
imul
xor
clc
xchg
or
and
add
push
dec
xbegin
add
sahf
xchg
add
add
pusha
add
roll
xchg
xchg
loopne
jle
xchg
xor
test
repz
sub
mov
scas
lods
pop
and
add
inc
add
and
add
push
sbb
or
repz
lret
enter
add
icebp
add
lods
and
add
pop
add
xor
add
imul
or
outsb
pop
cmp
sbb
int
pop
dec
decb
clc
jecxz
aaa
cmp
clc
mov
mov
imul
mov
inc
clc
mov
jnp
test
dec
sbb
clc
in
clc
std
pusha
add
pop
clc
cmpsl
clc
sub
and
add
out
sub
clc
and
add
add
mov
clc
fstpl
mov
add
in
sub
clc
das
sbb
in
es
mov
sub
scas
fiadds
es
ds
imulb
std
fwait
pop
and
add
clc
push
add
add
xchg
out
int
clc
sbb
add
add
addps
add
add
cmp
mov
add
add
add
inc
add
or
popf
pop
inc
add
mov
add
add
push
jnp
clc
jl
mov
flds
push
add
or
add
stos
mov
add
push
mov
add
clc
adc
add
faddp
clc
or
cmp
and
insb
or
mov
inc
clc
push
add
pop
clc
rcl
xor
lcall
repnz
jge
shlb
xchg
pop
addr16
popa
add
cs
cmp
mov
clc
sub
mov
ja
in
clc
sti
movsb
clc
sub
lock
pop
ret
clc
cld
testl
dec
sub
mov
stc
pop
jbe
mov
add
add
lock
cmp
add
psllw
pop
mov
pop
cmp
push
mov
sbb
mov
add
xor
add
clc
daa
clc
cmpsl
clc
or
aas
ja
aam
loop
sub
cmp
clc
ret
clc
enter
clc
mov
and
add
adc
add
ss
iret
loopne
inc
add
fcmovb
clc
pusha
add
xbegin
sub
add
cmpsb
clc
sar
cmp
add
xchg
outsl
bound
add
clc
mov
repnz
movsb
clc
sub
add
add
clc
lock
mov
mov
mov
aam
push
add
and
add
add
mov
jnp
jbe
dec
inc
clc
cmp
clc
sub
clc
loope
mov
sti
stos
adc
add
out
sti
lcall
movsb
clc
mov
add
sub
add
jb
add
dec
push
or
clc
sub
add
pop
xchg
ss
cmp
clc
jg
mov
and
ret
jno
add
cmp
mov
xor
add
loop
daa
clc
cmc
pop
aad
xlat
push
loop
movsb
clc
dec
nop
outsb
add
or
popa
add
out
and
mov
clc
push
or
clc
push
movsb
clc
sbb
hlt
dec
sbb
add
add
clc
das
lods
pop
fiadds
add
sub
clc
call
inc
add
xlat
sbb
clc
sar
clc
cmp
sub
clc
insb
or
clc
push
xchg
jge
loopne
dec
jl
clc
shll
add
movsb
clc
insb
sub
clc
and
add
xchg
pop
pop
outsb
mov
push
xchg
sbb
cwtl
daa
clc
or
clc
cmp
clc
jge
addr16
outsl
stc
mov
cmc
xor
add
push
add
add
add
loope
fs
cmc
outsl
dec
das
sar
jno
add
jnp
fcomps
add
add
mov
push
mov
inc
add
clc
mov
add
fdivr
dec
rdpmc
add
mov
clc
add
bound
add
add
sub
enter
push
add
cmp
add
sub
clc
push
ficoml
mov
mov
sub
cwtl
lods
iret
adc
add
out
dec
mov
cmp
pop
clc
jle
ficomps
popf
add
add
or
movsl
clc
xchg
or
add
add
and
rol
clc
int
dec
loope
popa
add
cmp
shll
std
es
mov
add
add
add
xor
add
aas
out
ds
pop
or
jne
ljmp
dec
loope
in
dec
cmp
clc
and
add
add
mov
clc
mov
add
pusha
add
pop
in
mov
scas
pop
clc
push
add
pop
adc
add
lock
push
or
add
add
sub
xor
add
add
ret
clc
adc
add
mov
lods
sbb
clc
stos
fldl
add
clc
scas
add
add
adc
dec
mov
jns
push
popf
mov
add
mov
in
jbe
add
daa
clc
imul
out
mov
xabort
sar
push
aas
or
xor
add
testb
call
cmpsl
clc
cmpsb
clc
jb
add
mov
add
add
das
cmp
xor
add
add
cmp
scas
repnz
sbb
fs
repnz
xor
cmpsb
clc
insb
and
add
movsb
clc
mov
add
jnp
mov
fbstp
add
cmp
add
add
insl
inc
clc
loopne
loopne
movsl
clc
cmp
clc
hlt
jp
clc
imul
mov
push
add
nop
dec
sar
clc
je
clc
xchg
cmp
jb
add
add
mov
xchg
movsb
clc
jmp
sbb
jmp
clc
mov
jo
add
push
clc
fs
nop
repnz
fcomps
scas
pop
cmc
in
insl
or
pop
jge
clc
jns
clc
dec
adc
add
add
fmulp
add
add
mov
xbegin
jns
lret
mov
lret
in
ja
mov
inc
clc
rolb
add
je
repz
push
clc
push
mov
jp
xabort
es
shl
clc
pop
sbb
lods
sub
add
inc
clc
call
add
sub
sbb
clc
lock
add
xbegin
addr16
addr16
dec
mov
dec
or
arpl
add
stc
lods
inc
clc
push
clc
mov
scas
inc
add
sub
clc
cld
std
push
scas
cmp
je
xchg
add
add
xbegin
push
cltd
inc
clc
out
cs
clc
mov
cmp
add
mov
or
clc
mul
clc
cli
pop
hlt
lods
test
clc
test
and
add
aaa
cmc
lods
mov
add
add
jo
add
add
push
clc
int3
mov
clc
scas
jnp
add
roll
add
pop
xchg
push
stos
and
add
add
push
call
clc
push
add
jns
add
dec
push
pop
clc
imul
mov
add
mov
mov
add
mov
clc
adc
add
bound
add
clc
inc
clc
ss
loop
lret
add
pop
mov
adc
mov
jno
add
pop
filds
clc
xchg
idivl
add
push
jg
adc
add
clc
dec
mov
clc
xor
add
cmp
add
xchg
es
jl
add
xchg
rcl
push
pop
ds
xor
cmpsb
clc
push
mov
jp
mov
lahf
dec
xchg
addr16
mov
inc
add
insl
cmp
mov
bound
add
fsubs
clc
jg
clc
mov
xor
add
leave
push
push
push
lea
xabort
movsl
clc
and
add
dec
clc
scas
test
jne
clc
cwtl
mov
add
xchg
jnp
clc
pusha
add
add
add
clc
mov
and
add
clc
lcall
imul
mov
jp
add
scas
cmp
adc
add
loope
movsb
clc
mov
add
add
push
add
sti
sar
mov
push
lret
add
add
xchg
bound
add
clc
outsl
out
dec
cmp
call
mov
cld
mov
jne
add
xchg
mov
clc
sbb
add
adc
add
test
mov
ss
xchg
data16
pop
and
xchg
mov
xchg
dec
dec
push
cmpsl
clc
sbb
ljmp
sar
jbe
addr16
cmp
add
mov
fs
dec
cmp
data16
xor
and
add
add
cltd
cmp
sbb
add
xchg
mov
outsl
aaa
jo
add
add
stos
clc
int
add
adc
fistl
clc
jnp
add
mov
mov
inc
clc
push
dec
xbegin
inc
add
jno
add
add
clc
cmpsl
clc
clc
fcomps
lea
mov
mov
scas
and
add
clc
xor
add
xabort
leave
lcall
inc
clc
pop
in
mov
xchg
aas
aam
jnp
clc
or
aam
clc
mov
add
and
add
clc
pop
push
into
outsl
cmpsl
clc
pop
popa
add
or
mov
inc
add
push
jmp
call
clc
pop
cmp
clc
pop
mov
loope
cmp
aam
sub
sub
movsb
clc
aaa
xchg
stos
ljmp
outsl
push
jb
add
mov
out
xor
add
data16
adc
clc
jp
sar
divb
dec
xchg
out
inc
add
push
or
clc
fildll
inc
clc
imul
add
fsubs
add
mov
clc
scas
ljmp
jg
xor
add
mov
add
add
push
clc
into
xor
add
clc
out
push
clc
sbb
cmpsb
clc
sbb
idivl
outsb
adc
add
xor
add
ljmp
clc
imul
clc
jbe
clc
icebp
outsl
jge
clc
jecxz
loopne
cmp
daa
clc
xor
add
and
mov
clc
mov
clc
jo
add
pop
ficompl
add
pop
lods
cmpsb
clc
sbb
loop
clc
pop
cmp
sar
lods
pop
pop
bound
add
loope
mov
mov
fsubrl
daa
clc
xchg
jne
push
push
add
clc
mov
cmpsl
clc
ss
and
add
mov
adc
add
add
mov
xor
add
dec
mov
lods
scas
enter
add
stos
xchg
sbb
js
add
adc
add
dec
sbb
jns
pop
jno
add
add
pop
push
add
xlat
mov
in
xlat
popf
pop
xchg
or
add
sub
imul
dec
mov
jbe
pop
push
add
push
pop
out
adc
add
push
add
jb
add
mov
int3
test
out
insb
sar
clc
sar
jmp
sub
sahf
xor
add
sbb
add
test
push
add
mov
add
leave
cwtl
movsb
clc
adc
add
leave
rclb
mov
clc
xchg
shlb
add
add
clc
push
aam
scas
add
call
inc
clc
lahf
pop
xabort
clc
sbb
lret
pop
movsb
clc
push
mov
clc
jecxz
lret
mov
ja
jmp
add
push
cmp
out
stc
ljmp
or
fwait
enter
lret
pop
pop
repz
or
push
clc
dec
lea
cmp
jno
add
add
arpl
add
add
imul
adc
clc
cmp
cmp
and
push
ds
pop
clc
inc
clc
loope
jge
scas
imul
add
dec
mov
add
jns
sbb
clc
out
dec
sbb
push
and
add
clc
dec
int
clc
adc
add
pop
xchg
pop
or
add
lcall
iret
adc
add
add
jb
add
add
scas
aam
lcall
mov
jg
cmp
cmp
int3
sar
xchg
stos
or
add
cmp
out
mov
push
mov
xor
add
inc
add
ffree
clc
faddl
test
pop
mov
clc
shrb
lods
into
sub
or
clc
adc
add
add
cmp
xchg
pop
clc
scas
mov
add
add
mov
clc
pop
scas
insb
xchg
jno
add
adc
sub
sbb
repz
mov
hlt
cmp
call
and
aam
clc
or
add
mov
stc
xor
add
add
add
add
add
add
call
jno
add
xor
and
add
add
clc
loope
insl
adc
add
clc
and
pop
jg
add
lcall
add
add
in
stos
pop
xlat
cmc
pop
pusha
add
aam
xchg
icebp
inc
clc
push
add
out
fdivr
sar
and
add
inc
add
lcall
hlt
add
add
adc
add
clc
inc
add
jle
clc
sub
sti
imul
adc
push
dec
ljmp
fnstcw
or
push
add
dec
cmp
out
sbb
add
xchg
push
pushf
ja
clc
cmp
xchg
ja
iret
mov
movsl
clc
clc
sub
je
ss
pop
inc
clc
lock
dec
out
rol
clc
loopne
cmp
clc
lret
pop
jmp
unpcklps
fsubrl
add
clc
dec
mov
sub
mov
add
add
dec
push
pop
cli
adc
sub
clc
mov
in
push
or
pop
in
fadd
clc
and
jecxz
jmp
clc
mov
js
add
ds
push
iret
or
add
nop
jle
sbb
clc
ret
clc
xabort
mov
add
mov
mov
push
jb
add
push
jmp
cmp
lock
jle
clc
hlt
out
imul
push
mov
or
and
add
cmp
in
fs
inc
clc
inc
clc
stos
dec
cmp
dec
lock
ljmp
xchg
fnstsw
xchg
xchg
push
add
dec
pop
es
addr16
push
loope
inc
clc
inc
add
shrl
bt
lea
aas
mov
add
hlt
cmp
std
stos
int3
push
imul
add
testl
add
add
jp
add
xor
add
lods
cmc
into
jne
clc
enter
xor
xchg
pop
xor
add
xor
add
or
clc
out
pop
inc
clc
xor
add
call
xchg
fdivrl
icebp
lods
jl
xor
clc
insb
gs
add
add
clc
sub
ds
clc
rolb
add
test
and
add
add
jl
int
mov
jns
push
mov
scas
popa
add
sub
pop
inc
clc
aaa
iret
out
mov
clc
popa
add
push
add
bound
add
clc
pop
testl
test
mov
xchg
aad
pop
nop
ret
aad
cmp
adc
add
clc
jnp
jnp
in
inc
add
pusha
add
rcll
add
pop
dec
jmp
push
pop
xor
add
add
mov
xor
shr
sbb
clc
xchg
mov
xor
add
inc
add
test
push
add
mov
add
mov
mov
out
push
add
out
loope
filds
add
in
pop
std
jp
hlt
aam
xor
add
movntq
out
dec
repz
inc
add
sti
xchg
mov
repnz
sbb
clc
aas
cmpsb
clc
xchg
mov
add
sbb
clc
jnp
add
js
add
jmp
add
add
cmp
xabort
cmp
rorl
pushf
add
add
clc
mov
jnp
stos
call
or
add
cmp
adc
add
clc
fsubl
call
repz
jne
pop
dec
stc
imul
add
pop
out
cmp
mov
clc
jae
add
inc
clc
mov
pop
inc
clc
stc
call
out
mov
clc
test
aam
clc
lods
and
add
inc
clc
scas
stos
fiaddl
xor
mov
mov
imul
add
pop
std
into
in
and
add
fstl
add
xabort
cmp
clc
insl
sar
xchg
pop
fidivl
clc
cmp
cmp
inc
add
ja
inc
clc
xchg
sub
jecxz
mov
add
add
add
cmp
scas
scas
aas
sar
xchg
add
add
add
mov
jb
add
clc
pushf
cmp
add
sub
adc
add
clc
mov
clc
pop
clc
adc
add
xabort
add
cmp
fwait
dec
outsl
dec
mov
mulps
mov
stos
inc
add
sti
sahf
test
mov
sar
packuswb
xor
clc
mov
clc
sbb
clc
je
add
movsb
clc
xchg
cwtl
and
add
add
enter
inc
add
cs
mov
add
xchg
push
add
jns
dec
in
fimull
stos
inc
add
pop
ds
inc
clc
scas
ds
add
inc
clc
pop
pop
cli
stos
bound
add
mov
add
data16
and
add
rorb
cmp
icebp
inc
clc
out
mov
xchg
int
inc
add
jae
add
add
xor
add
add
push
pop
cmpsl
clc
fsts
push
clc
in
insl
xchg
js
loopne
xor
mov
push
add
push
add
fwait
push
add
add
pop
mov
cmp
add
shlb
mov
rclb
cli
pop
jg
in
pop
test
int
aad
push
clc
adc
add
clc
inc
add
ja
push
add
out
pop
clc
pop
sar
and
clc
push
mov
add
dec
mov
clc
mov
in
dec
jae
add
add
push
mov
add
clc
and
add
imul
adc
add
clc
imul
xchg
sub
cmp
scas
loope
jno
add
clc
cmp
push
sahf
hlt
pusha
add
sbb
movsl
clc
shlb
add
cmp
jp
pop
xbegin
je
add
add
add
clc
clc
hlt
push
add
js
inc
add
push
add
cmpsl
clc
or
clc
aad
dec
adc
add
sub
aam
mov
inc
clc
data16
pushf
popf
xchg
cmpsb
clc
dec
scas
clc
cmp
xchg
mov
xor
add
push
add
cmc
adc
add
add
dec
jecxz
pop
cld
push
mov
add
jno
add
clc
outsb
outsl
fsubrl
xor
add
pop
push
add
pop
clc
dec
addr16
and
add
add
jbe
add
into
jne
clc
push
mov
sbb
xlat
idivl
clc
rcl
stos
push
add
std
adc
fidivs
add
add
mov
sbb
cmp
lcall
leave
gs
xlat
loopne
pop
sahf
cmp
mov
jg
clc
mov
jmp
lods
fcom
aaa
cmp
clc
lcall
add
loope
lods
sub
scas
aas
jecxz
xchg
idivl
fcompl
rcll
add
aaa
jne
int3
pusha
add
add
js
clc
pop
xchg
iret
hlt
aaa
es
jecxz
mov
add
test
mov
and
add
clc
sbb
add
add
clc
sar
xchg
scas
mov
xchg
daa
clc
sub
mov
aas
popf
pop
mov
or
lcall
add
clc
cwtl
mov
dec
notl
clc
int3
js
inc
clc
jg
aas
ss
mov
clc
xabort
clc
adc
add
hlt
int
clc
divl
add
sub
mov
pop
xor
add
xor
add
pop
jp
es
adc
add
add
add
mov
add
sbb
test
clc
xchg
fimuls
clc
xchg
insb
in
and
mov
add
aam
dec
movsb
clc
xbegin
imul
mov
and
add
and
add
clc
jno
add
out
insb
out
jg
xbegin
xlat
push
push
add
aaa
xchg
cmp
pop
mov
fdivs
add
call
jle
clc
pop
lret
ret
sub
jmp
push
add
or
ljmp
imul
je
dec
mov
jmp
clc
lock
test
add
mov
mov
mov
in
xor
add
xchg
mov
clc
sbb
iret
ss
mov
outsb
es
inc
clc
cmpsl
clc
jnp
add
fidivrs
pop
pop
clc
stc
mov
add
lret
test
add
add
add
out
sub
push
add
push
fmulp
dec
cmpsb
clc
lods
dec
in
cmp
add
mov
outsb
inc
clc
push
add
out
jle
inc
add
sub
jae
add
clc
sar
mov
sbb
xchg
pop
clc
mov
neg
out
xchg
jb
add
icebp
ret
sub
ret
clc
add
loopne
sub
xchg
ljmp
xabort
clc
pusha
add
das
xabort
clc
cs
cmpsl
clc
cmp
clc
frstor
xor
add
pop
jmp
cld
jle
clc
fs
adc
push
add
lods
sub
mov
fisubrs
pop
clc
aaa
xor
clc
mov
and
xor
add
ret
xor
add
add
pushf
xchg
fisubrs
in
push
add
mov
clc
out
xor
ret
aas
adc
add
add
add
sbb
and
add
rorl
sahf
int
clc
lods
mov
clc
add
add
ds
clc
jl
jmp
push
mov
xchg
add
xlat
fisubrl
mov
in
lock
xchg
ds
pop
popf
xchg
pusha
add
dec
popa
add
es
push
add
pop
js
clc
mov
in
pusha
add
mov
xlat
lahf
pop
or
in
iret
dec
jecxz
repz
add
fsts
repnz
clc
inc
add
aaa
lea
add
dec
mov
add
push
out
arpl
add
add
and
add
add
adc
xor
add
adc
add
mov
cmpsl
clc
aas
gs
jge
into
addr16
mov
inc
clc
icebp
adc
add
cmp
cwtl
mov
push
clc
xchg
xor
add
sub
clc
ss
add
cmp
divl
add
shlb
add
add
clc
aas
movsb
clc
and
add
xchg
add
cmp
sar
xor
clc
and
add
sbb
repz
add
bound
add
int
sahf
mov
ljmp
xor
add
aam
outsb
mov
pop
fidivrl
push
add
fsubl
add
and
dec
xchg
mul
clc
mov
clc
lcall
test
add
xchg
adc
clc
jmp
adc
add
inc
add
push
add
bound
add
mov
in
lock
cmp
sub
mov
lods
gs
hlt
in
cmp
ret
clc
loope
and
add
sar
add
mov
add
out
cmp
jno
add
add
add
push
xchg
test
clc
push
add
mov
fstp
sbb
add
clc
and
add
add
sahf
xlat
sub
push
add
into
xor
add
xchg
dec
repz
rorl
clc
push
fnstsw
test
clc
push
jmp
add
mov
add
mov
ja
shlb
cmp
add
push
clc
jmp
int3
aaa
sub
dec
loopne
xchg
insb
outsl
pop
clc
push
add
lods
lock
and
xchg
fdivs
add
mov
xor
add
mov
clc
int
mov
fidivs
int
clc
push
xchg
jecxz
je
mov
mov
xchg
outsl
fwait
mov
out
ds
cmpsb
clc
mov
sbb
and
add
leave
adc
add
movsb
clc
ss
pushf
fdivs
mov
add
mov
sarl
clc
leave
in
addr16
mov
add
xchg
movsl
clc
std
dec
dec
jb
add
jle
push
add
sub
bound
add
add
mov
add
sbb
add
cmpsl
clc
jle
sub
outsl
dec
rcrl
push
mov
xor
add
xlat
adc
add
clc
xlat
sbb
adc
add
xchg
mov
fisttpl
cmc
dec
dec
movsl
clc
xor
add
incb
mov
outsl
mov
sub
cld
bound
add
push
cmp
sar
clc
sahf
dec
add
add
add
movsb
clc
pop
inc
add
xchg
ss
jb
add
enter
xabort
faddl
add
rep
fs
adc
add
sbb
ljmp
in
das
movswl
pop
insb
jg
dec
imul
mov
clc
jb
add
push
sbb
add
notb
clc
repz
ret
clc
call
mov
sub
inc
clc
mov
loopne
lahf
mov
pushf
pop
push
dec
sub
ret
clc
leave
xor
push
and
add
add
mov
add
jbe
clc
js
fisubl
add
add
pop
clc
pop
addr16
fdivs
clc
and
add
mov
sbb
add
add
das
ficoml
add
in
cld
adc
or
add
xor
add
pop
clc
fmull
add
testb
mov
xchg
mov
cmp
mov
clc
xchg
xchg
mov
scas
or
add
mov
add
jmp
lock
sbb
stc
clc
in
aaa
pop
loope
test
push
dec
out
jmp
inc
add
aas
pop
and
add
add
dec
aaa
shll
add
push
or
outsb
xchg
inc
clc
jmp
test
ret
add
mov
or
dec
popf
push
mov
into
sbb
or
push
ret
add
mov
clc
cmpsb
clc
and
add
clc
and
in
in
lret
xabort
xor
add
clc
outsl
sbb
jb
add
add
add
or
popa
add
xchg
fnstsw
clc
pop
cmp
adc
add
arpl
add
inc
clc
add
add
pusha
add
arpl
add
clc
jecxz
and
add
clc
and
add
dec
jl
clc
cmp
fisubs
add
cmc
mov
xor
enter
push
add
jl
add
fcom
int
jae
add
clc
imul
lahf
lods
mov
inc
add
aam
clc
out
push
fdivrs
movsb
clc
push
add
scas
or
add
repz
jne
mov
add
lahf
test
add
cli
inc
clc
or
stos
stos
or
jmp
push
push
cmp
clc
mov
clc
mov
sub
clc
cmc
lock
sbb
adc
add
pop
add
add
sbb
iret
mov
pop
popf
in
xor
clc
sbb
xchg
loope
xor
add
add
jbe
clc
stos
mov
clc
xor
add
add
mov
xchg
cltd
cwtl
out
push
clc
dec
xchg
movsl
clc
scas
xor
add
mov
clc
mov
mov
nop
repz
jg
cmp
add
dec
sub
clc
stos
outsb
negb
stos
arpl
add
add
push
push
lea
shlb
add
nop
jne
adc
and
add
jae
add
stos
jmp
fmul
adc
add
jg
cmp
add
clc
addr16
push
clc
mov
add
cmp
aas
pop
mov
cmp
js
lret
lret
pop
mov
mov
leave
data16
rorb
jbe
pusha
add
inc
clc
and
repnz
dec
pop
std
fmull
sub
or
sbb
inc
clc
mov
mov
add
das
test
mov
add
clc
nop
sub
add
fs
mov
add
aad
inc
add
sub
add
mov
jne
in
enter
cmpsb
clc
mov
push
clc
negl
sar
clc
mov
inc
clc
jb
add
xchg
scas
ljmp
cmp
inc
add
cld
adc
add
add
inc
clc
push
dec
rclb
add
xor
add
dec
lret
adc
add
adc
add
clc
xchg
jp
adc
sahf
pop
inc
clc
addr16
vmovhps
iret
pop
leave
inc
clc
jns
add
rolb
adc
add
clc
fmull
mov
lret
add
filds
dec
mov
add
and
add
cmc
repz
repz
mov
add
add
icebp
cli
inc
clc
in
or
push
mov
add
inc
clc
sbb
xbegin
add
ljmp
cld
out
cli
fdivs
add
pop
js
aad
push
add
inc
clc
data16
add
add
lods
std
dec
stos
sbb
clc
vphaddubq
dec
popa
add
inc
clc
daa
clc
cmp
add
sub
clc
insb
loopne
into
scas
insb
out
push
add
mov
add
roll
add
mov
add
cwtl
inc
add
push
add
xor
add
lcall
add
cmpsb
clc
mov
add
fidivrl
add
add
fxch
lods
iret
bound
add
ljmp
daa
clc
or
dec
in
into
push
jge
dec
rcl
sar
jae
add
jne
test
mov
clc
xchg
je
dec
jns
ktestw
out
sub
pop
lcall
repnz
add
out
pop
mov
aam
clc
sub
add
fsts
add
dec
std
push
add
push
push
clc
dec
jnp
and
add
enter
clc
in
stc
jmp
mov
add
add
clc
pop
jmp
aad
mov
into
sarl
insl
jecxz
daa
clc
or
fidivrs
add
frstpm(287
clc
imul
clc
mov
xbegin
cld
xchg
imul
push
or
xchg
mov
into
xchg
pop
rcrb
push
pop
push
add
test
adc
xchg
out
sbb
je
push
add
scas
mov
testb
push
add
cmp
add
xchg
mov
movsl
clc
pushf
lods
out
mov
push
add
xbegin
js
icebp
sahf
jmp
jge
popl
add
cwtl
mov
out
dec
add
sar
clc
in
jge
pop
dec
scas
hlt
add
mov
sar
add
sahf
cs
add
mov
ret
daa
clc
inc
clc
sbb
adc
lock
pop
arpl
add
sbb
add
enter
sbb
clc
int3
jae
add
add
xchg
lret
add
and
add
clc
mov
clc
jo
add
sar
ja
sti
xchg
push
add
add
mov
int
sbb
dec
mov
or
add
sbb
lret
mov
jp
clc
mov
shrl
lret
clc
mov
clc
bound
add
add
jne
cmp
push
clc
mov
add
add
clc
adc
add
and
pushf
xor
add
push
shll
enter
add
add
add
cmp
jno
add
and
add
add
insb
cmp
push
repz
clc
sub
or
xchg
loopne
iret
mov
lret
dec
pmovmskb
inc
add
cmp
adc
mov
mov
clc
cmp
cmp
sub
xabort
in
pushf
dec
sub
clc
dec
cmp
mov
add
pop
and
add
clc
sbb
cmp
clc
mov
add
jnp
jmp
xor
add
push
mov
xchg
wrmsr
add
mov
or
fldcw
and
add
clc
cwtl
lgs
xor
add
clc
out
sbb
mov
aaa
xchg
adc
add
add
xchg
sar
clc
jmp
mov
xchg
cltd
adc
add
ds
ret
test
add
add
add
add
in
xchg
add
add
add
add
pusha
add
testb
frstor
add
clc
xor
add
fdivs
add
push
add
push
fidivl
cmc
sub
add
and
add
clc
stos
jae
add
clc
add
add
clc
xchg
adc
add
clc
ret
clc
inc
clc
or
and
add
add
in
mov
nopl
in
loopne
stc
stos
mov
add
and
add
inc
add
cmp
test
or
add
mov
cmp
clc
jmp
out
cwtl
mov
clc
fwait
stos
int3
xchg
pop
pushf
inc
add
cwtl
push
add
push
out
cmp
add
and
adc
movsl
clc
rcl
cmp
fnstenv
and
inc
clc
push
add
out
mov
clc
test
xabort
and
add
addr16
cmp
es
insb
repz
add
xchg
sub
push
clc
xor
add
add
divl
add
mov
clc
sti
in
maskmovq
negl
cmp
push
das
adc
add
add
add
inc
add
cmp
out
add
add
jae
add
xchg
shr
mov
lea
sub
clc
xchg
lea
add
or
dec
fsts
add
xchg
pop
mov
clc
cmp
insb
jmp
in
xchg
mulb
add
adc
add
dec
shll
clc
jle
int3
std
pop
cmp
adc
add
clc
shll
add
cs
xchg
std
test
in
sar
fs
inc
clc
sarl
add
pop
push
or
clc
cmp
sub
or
clc
repz
divb
dec
leave
xchg
loopne
mov
fnstcw
add
add
add
add
add
ret
mov
mov
rolb
add
or
dec
jns
clc
mov
aad
ljmp
clc
ss
jecxz
rclb
cmp
push
dec
inc
add
bnd
mov
mov
mov
loop
xchg
outsb
adc
add
addr16
sahf
lods
insb
sar
add
mov
test
push
clc
push
sub
clc
in
mov
test
fsubrs
jecxz
sbb
fs
and
add
inc
add
mov
and
add
mov
loope
sbb
add
nop
ss
sbb
in
es
pop
std
jb
add
push
insl
sarb
pop
xor
add
scas
cwtl
lods
fists
add
daa
clc
mov
clc
adc
add
or
in
cld
mov
add
push
dec
mov
add
clc
repz
cltd
pop
xchg
inc
clc
cmp
add
add
dec
insl
sbb
stc
cmp
pop
hlt
mov
sbb
stos
cmpsb
clc
lahf
xchg
fcompl
and
add
clc
pop
fisubrl
add
clc
mov
adc
add
ljmp
into
int3
xchg
loope
in
in
dec
lods
fsubl
push
xchg
mov
clc
inc
clc
mov
sbb
clc
pop
clc
jo
add
add
insl
push
clc
imul
ret
clc
je
stos
repz
mov
clc
inc
add
lods
xchg
cmp
or
iret
jle
xor
cmp
clc
popf
push
clc
mov
nop
mov
add
test
mov
test
add
or
pusha
add
outsl
xabort
sub
clc
inc
add
inc
clc
das
cmc
inc
add
stos
jle
mov
and
add
add
fwait
xlat
in
out
mov
imul
cmp
xchg
inc
add
loopne
xchg
cmp
clc
movsl
clc
mov
clc
push
add
lahf
mov
pop
cltd
push
sub
add
clc
loopne
push
fildll
aad
clc
lret
cmp
out
mov
mov
mov
es
stos
cltd
lods
jo
add
notl
clc
xchg
push
aas
cmp
inc
clc
aad
jl
lods
cmp
mov
inc
clc
xchg
mov
test
pop
jb
add
popa
add
je
clc
clc
mov
clc
mov
push
pop
dec
xchg
add
jnp
clc
sub
or
arpl
add
add
add
lret
mov
cmp
nop
shl
inc
add
fwait
jno
add
sti
ss
es
mov
or
clc
fsubs
add
push
jg
xchg
fmull
jmp
dec
xchg
inc
add
sub
cmpsl
clc
jge
add
inc
clc
mov
shrl
jl
ja
stc
decl
xor
add
add
and
add
clc
inc
clc
scas
xchg
mov
sub
dec
pop
repz
clc
push
add
mov
das
mov
and
add
jo
add
clc
sti
aas
lahf
sbb
clc
icebp
mov
repnz
clc
mov
ret
clc
and
add
add
mov
jno
add
out
sbb
gs
adc
add
sub
add
scas
jnp
clc
xchg
aaa
push
add
pop
sub
mov
and
sbb
int
mov
clc
cmp
add
ret
clc
dec
insb
mov
fcoms
add
push
clc
lods
mov
sub
clc
xchg
cmp
sbb
add
cmp
add
dec
mov
and
add
clc
or
iret
dec
stos
fstpl
and
cmp
sar
clc
ret
clc
cmpsl
clc
stos
scas
int3
push
clc
jae
add
daa
clc
cmc
or
mov
cmp
add
in
mov
fs
jns
jns
fnstenv
out
and
add
xchg
sahf
jmp
add
xchg
adc
add
mov
stos
mov
clc
xchg
insl
xchg
call
jmp
mov
mov
cmp
clc
sbb
add
xor
add
sti
fucomp
jl
xor
add
add
mov
sbb
stc
sar
inc
add
ret
int
clc
mov
clc
loope
scas
mov
and
add
cmp
pop
cli
inc
clc
es
lods
xchg
cmp
rcrl
es
addr16
push
push
int3
xchg
sar
xchg
cmp
add
clc
xor
add
pushf
das
jecxz
mov
bound
add
sub
sub
enter
add
clc
stc
cmp
icebp
cs
inc
add
push
daa
clc
stos
mov
add
adc
add
loope
or
addr16
clc
mov
cmp
out
aam
add
pop
pop
mov
cs
clc
call
lods
sub
clc
push
clc
lea
loop
loopne
cmc
push
lcall
add
scas
in
adc
add
push
shll
and
add
clc
xchg
xor
add
icebp
popf
lret
inc
add
mov
rorl
adc
add
jae
add
sbb
clc
hlt
xchg
lea
mov
add
test
fldl
add
add
jl
add
mov
lods
mov
fnstenv
clc
pop
add
add
add
std
add
clc
stos
pop
call
clc
or
scas
and
add
mov
add
lcall
clc
jl
add
sub
add
sbb
add
clc
jbe
clc
dec
mov
or
ffreep
clc
stos
add
add
or
mov
add
sbb
xor
add
jmp
clc
xchg
adc
add
in
inc
add
mov
add
sub
stos
xchg
ret
clc
ds
movhps
add
dec
mov
bound
add
push
jmp
shrb
pushf
int
cmp
add
cmp
ds
sti
push
inc
clc
mov
add
repz
add
push
stos
push
lret
out
mov
add
icebp
or
clc
clc
push
clc
cli
mov
adc
add
add
add
add
sbb
add
jae
add
and
add
push
stos
pusha
add
sub
loope
jno
add
imul
add
clc
mov
into
xlat
hlt
test
mov
clc
push
add
insb
jnp
add
cld
adc
add
inc
add
xbegin
clc
pop
sbb
clc
cli
push
clc
sbb
cmp
daa
clc
loopne
mov
mov
cmp
add
aad
add
and
add
mov
stos
jae
add
add
pop
ja
add
mov
cmpsl
clc
dec
inc
add
int
mov
sbb
add
inc
clc
ror
mov
clc
fists
fmuls
clc
stos
rolb
clc
std
sar
clc
xchg
dec
jmp
into
push
and
icebp
push
dec
bound
add
clc
jns
push
add
push
js
clc
std
lods
lods
gs
imul
dec
sar
bswap
lods
xchg
adc
add
jl
clc
push
add
ja
clc
das
rorl
clc
xchg
sbb
sub
in
sub
clc
mov
add
clc
cmp
lret
or
fldl
add
ficoml
clc
and
add
imul
fwait
inc
clc
add
xor
add
and
ret
clc
repz
out
sarl
in
out
mov
cltd
mov
push
clc
add
jns
sub
add
mov
clc
addr16
cmp
adc
add
sahf
cmc
xor
add
decb
xchg
dec
stos
sub
cmpsl
clc
dec
stc
insl
cmp
pop
xchg
add
add
add
dec
popa
add
jg
clc
sar
lods
push
add
add
add
clc
out
sbb
clc
cmp
and
add
test
clc
push
add
stos
sub
add
jno,pt
add
add
add
add
and
jne
sbb
add
pop
add
push
clc
loop
pop
stc
mov
mov
out
lock
dec
xchg
ljmp
clc
mov
das
mov
shll
add
xchg
sub
jge
pop
inc
clc
mov
sub
add
jg
sar
loop
jmp
jns
sub
repz
or
lods
sub
ds
clc
sub
and
add
clc
lret
cmp
clc
cli
aad
mov
add
test
sbb
cltd
ret
clc
test
sbb
add
gs
clc
gs
pop
imul
inc
clc
xchg
int
xchg
or
aam
add
mov
stos
add
add
clc
out
push
lock
xchg
out
shlb
outsb
lea
pop
jl
mov
add
mov
clc
or
jmp
cmp
clc
test
fyl2x
clc
jge
add
jbe
ret
in
pop
cwtl
cld
lock
sub
clc
sar
out
xchg
je
sar
add
jb
add
add
leave
idivl
clc
xchg
pop
clc
push
add
js
cmp
add
jo
add
xchg
xor
inc
add
add
add
mov
add
sbb
add
xor
clc
sahf
scas
fsubrs
dec
add
add
clc
pop
gs
insl
popa
add
sbb
and
add
add
sbb
mov
cs
add
xor
add
lret
mov
cld
aad
gs
mov
mov
fists
add
xor
add
std
push
push
out
jns
clc
dec
mov
pop
jb
add
add
shr
dec
imul
clc
xor
add
mov
or
clc
sbb
mov
pushf
cmp
clc
xabort
sub
cmp
clc
movsb
clc
mov
loopne
iret
shrb
addr16
lods
xor
sti
sarl
inc
clc
imul
pop
addr16
sar
jle
add
pop
clc
sub
clc
clc
call
add
fistpll
mov
addr16
sbb
mov
xor
add
cmp
dec
adc
add
add
mov
add
loopne
sub
add
imul
data16
mov
add
add
add
add
add
clc
lahf
add
add
add
add
add
xchg
jl
and
add
repz
dec
inc
add
repnz
jnp
cmp
out
loop
xor
add
cmp
clc
addr16
cwtl
fstpt
clc
cld
test
pusha
add
jnp
clc
lret
add
fidivs
add
dec
jle
cmp
popf
ret
clc
xchg
xchg
in
in
lret
cmp
add
mov
cmp
or
jbe
icebp
mov
add
or
push
add
jg
clc
xbegin
fdivrs
cmp
clc
push
mov
clc
iret
xor
add
add
psubusw
cltd
xor
add
add
test
clc
cmpsb
clc
clc
notl
add
stos
sar
in
stc
jmp
clc
cmp
clc
pop
add
add
xor
add
lods
sbb
add
jbe,pt
cmp
xlat
fs
fisubrs
clc
fcmove
pop
push
out
ret
clc
int3
xlat
int3
pop
mov
clc
and
call
pusha
add
fs
sbb
pop
cltd
mov
fwait
adc
add
jmp
clc
mov
add
and
add
xor
add
clc
cmp
in
mov
testb
add
cmpsl
clc
dec
lock
clc
popf
jo
add
imulb
mov
loop
cmp
add
inc
clc
xlat
sub
add
adc
add
jne
clc
dec
loopne
cli
adc
add
jl
clc
hlt
adc
add
cmc
dec
out
pop
clc
adc
add
sbb
testb
add
cmp
daa
clc
shl
clc
push
jne
jb
add
push
lahf
lods
frstor
clc
sbb
aas
lret
mov
mov
cmp
clc
daa
clc
jl
mov
clc
xor
pusha
add
rclb
stc
jo
add
pop
flds
xor
in
invd
fcompl
test
xlat
hlt
add
add
xchg
mov
inc
add
into
adc
add
add
scas
cmp
and
add
add
enter
fimuls
lret
add
add
mov
movsl
clc
mov
inc
add
jge
clc
xchg
sub
add
cmp
or
test
push
jp
add
jmp
mov
jmp
pop
cmp
packsswb
add
add
cmc
and
add
xor
stc
sbb
clc
and
add
clc
data16
or
add
push
flds
mov
cmp
cmp
gs
adc
add
cmp
stc
test
cltd
jo
add
add
add
daa
clc
xchg
das
int3
aam
add
repnz
mov
pop
jle
stc
mov
dec
out
cmpsb
clc
xbegin
push
clc
xchg
fiadds
add
xor
add
xchg
insb
sbb
and
add
add
cmc
imul
add
add
add
call
adc
add
ds
clc
mov
xor
mov
jecxz
lret
test
lret
pop
enter
add
ja
xor
add
push
mov
jo
add
aaa
fs
fsub
clc
mov
jmp
clc
je
pop
cmp
lahf
pop
mov
cmp
bound
add
mov
add
sub
int3
xchg
popf
jl
fcmovnb
clc
pop
adc
lea
sub
clc
je
clc
sbb
int
cmp
mov
pop
or
sub
xabort
rorl
add
icebp
fisubrs
push
add
push
scas
std
out
mov
clc
hlt
out
decl
add
cmp
loop
jbe
test
into
push
hlt
inc
add
or
fs
notl
add
jmp
push
add
or
daa
clc
enter
int3
xor
add
add
enter
dec
ret
dec
js
add
or
bound
add
clc
fidivs
add
shrl
notl
clc
imul
add
push
or
pusha
add
ds
add
out
push
add
comiss
xabort
clc
and
add
pop
clc
fidivl
add
mov
sub
bnd
mov
imull
clc
in
dec
or
add
in
ja
inc
clc
sub
insb
call
clc
movsb
clc
je
xabort
push
add
cwtl
aas
and
scas
mov
clc
stos
js
insl
mov
test
or
stos
stos
stc
gs
mov
fwait
push
add
in
cmp
lods
test
fisttpl
movsl
clc
xchg
sbb
mov
clc
popa
add
mov
int
jmp
cwtl
pop
jg
lea
popa
add
lret
xchg
sub
mov
lret
add
inc
clc
sbb
adc
add
ss
repnz
add
or
mov
push
data16
mov
cmp
fbld
add
push
clc
gs
mov
clc
mov
add
dec
jp
and
add
in
jge
lods
fiadds
clc
ljmp
enter
fwait
rorl
repnz
and
add
ss
or
test
aaa
ljmp
add
add
add
out
xchg
lret
clc
repnz
bound
add
inc
clc
ss
clc
lods
negb
cwtl
lret
nop
es
xbegin
add
xor
xchg
add
xor
lock
es
imul
clc
arpl
add
sar
pusha
add
pop
inc
add
xchg
and
mov
test
and
xchg
mov
clc
jge
inc
clc
int
clc
jmp
imul
add
add
mov
push
and
add
dec
xlat
cwtl
fdivrs
sbb
pop
popa
add
or
xchg
mov
add
mov
insb
hlt
sbb
clc
cmp
push
push
fnsave
clc
cmp
push
push
clc
sub
adc
add
sysexit
cmp
in
scas
clc
loopne
out
cmp
or
dec
fcomps
lcall
add
mov
clc
jecxz
fstl
mov
clc
ss
pop
adc
add
xchg
and
add
add
push
call
and
jge
adc
mov
or
sub
clc
xchg
ret
clc
stos
pop
xor
add
insl
cwtl
add
push
adc
add
add
push
stos
push
add
xchg
sbb
fcoms
add
outsb
punpckhdq
add
psubusw
clc
adc
pop
mov
add
jle
inc
add
jne
clc
movsb
clc
test
clc
xchg
mov
clc
push
xchg
mov
and
add
pop
xor
add
hlt
jbe
pop
cmp
nop
scas
mov
add
cmp
add
mov
clc
addr16
inc
add
ds
cs
pop
adc
dec
mov
xor
add
or
test
mov
daa
clc
cmp
sbb
clc
fcmovu
data16
insl
inc
clc
and
inc
add
adc
add
push
add
mov
add
addr16
lock
ja
xor
add
jbe
in
mov
add
in
rolb
add
out
adc
sub
sar
jnp
ficomps
cmp
nop
fcomip
ds
stc
push
testl
fdivrl
filds
add
jns
int
push
add
cmp
movsl
clc
mov
mov
clc
call
add
mov
clc
mov
xchg
mov
add
adc
add
pavgw
lods
loopne
jne
clc
leave
iret
inc
add
dec
loopne
dec
pusha
add
enter
mov
cmc
add
add
cmp
mov
mov
add
add
clc
pop
je
es
pop
adc
add
and
add
inc
add
xabort
rol
clc
daa
clc
cmp
dec
fdivrs
lock
clc
push
add
out
div
mov
clc
test
xor
add
addr16
ds
divb
add
jmp
clc
jo
add
clc
adc
add
clc
dec
sti
popa
add
add
ret
ret
clc
push
inc
clc
movsb
clc
xchg
inc
clc
out
add
add
clc
jge
dec
adc
add
add
jmp
clc
loope
cmp
clc
insb
in
out
imul
add
push
mulb
add
push
stos
lods
cmp
add
imul
mov
cs
flds
add
std
inc
clc
stc
aad
lahf
pop
arpl
add
push
ja
dec
mov
dec
stc
adc
mov
test
clc
jle
add
mov
clc
push
movsl
clc
jl
add
mov
xor
add
add
clc
aad
ret
dec
scas
xchg
inc
clc
test
xbegin
adc
mov
bound
add
scas
push
sub
xchg
sar
clc
mov
mov
testl
in
jo
add
aaa
mov
clc
mov
scas
call
pop
cwtl
adc
clc
add
add
aaa
or
clc
inc
clc
fsubrs
mov
js
sbb
add
fldcw
push
add
cmc
cs
clc
ds
add
and
fmull
add
outsb
push
add
out
sbb
mov
or
clc
xor
add
cmp
clc
test
dec
push
adc
cmp
repz
xchg
inc
clc
inc
clc
int3
enter
clc
sar
mov
test
das
lods
outsl
clc
pop
aas
test
clc
mov
add
jbe
mov
dec
cmp
add
clc
fidivrs
clc
int3
inc
add
lret
std
ret
clc
outsb
sub
clc
call
or
inc
clc
push
add
inc
add
mov
cli
xchg
clc
adc
add
add
shrl
fcoms
or
jb
add
call
mov
pop
data16
into
pop
sub
mov
inc
clc
mov
clc
add
add
jno
add
in
loop
js
stos
sbb
aaa
push
insl
imul
add
add
dec
js
shrb
xchg
pop
outsl
pop
and
add
mov
add
push
clc
jp
popf
xor
add
add
add
out
adc
add
ja
add
cmc
mov
jg
add
mov
xchg
shll
into
push
add
inc
clc
divb
add
add
cld
xor
loopne
stos
mov
add
mov
xor
clc
add
add
pusha
add
hlt
int
add
fwait
mov
push
xabort
clc
xor
add
rcl
cmpsb
clc
mov
out
push
clc
ret
in
jne
cmp
add
lods
jae
add
adc
add
add
clc
dec
insl
mov
rol
clc
hlt
arpl
add
clc
cltd
push
add
sub
push
in
out
mov
rolb
clc
push
add
lods
jle
add
addr16
jle
jg
clc
inc
add
es
ja
mov
loop
push
xchg
or
clc
sbb
clc
clc
cmpsb
clc
pop
lret
aam
clc
cmpsb
clc
aad
stos
pushf
outsl
xchg
xchg
pop
rcrb
cli
insb
or
clc
cwtl
insl
mulb
jnp
clc
test
xor
add
lret
jp
clc
in
mov
call
out
lods
adc
add
clc
fldcw
jae
add
insl
ljmp
lahf
clc
and
add
add
cld
mov
add
movlps
add
xchg
out
inc
clc
dec
xlat
test
clc
cmc
clc
xchg
inc
add
fwait
cwtl
fisubl
clc
sar
inc
add
fwait
lods
and
add
dec
jbe
clc
out
nop
lret
rcrl
ss
repnz
clc
mov
cmp
data16
add
inc
clc
mov
sar
add
clc
ret
clc
push
add
add
test
clc
clc
push
fs
fidivs
add
inc
add
cs
mov
and
add
add
aam
and
enter
sub
jmp
pop
adc
jb
add
fistl
add
jmp
fstl
sbb
add
cmp
add
popf
imul
or
add
rcl
out
mov
int3
int3
add
add
lcall
add
dec
aad
cli
addr16
gs
sbb
add
add
bound
add
mull
sub
add
lods
mov
rorb
add
xor
add
add
pushf
mov
clc
test
mov
add
add
add
push
in
js
cmp
enter
sbb
outsl
sub
add
imul
scas
leave
jle
add
lahf
jno
add
add
add
enter
mov
clc
adc
clc
movsl
clc
dec
nop
sti
sbb
add
clc
mov
add
adc
add
repz
iret
aad
clc
dec
inc
clc
nop
inc
clc
dec
lods
in
jle
sar
dec
or
dec
lea
cld
dec
adc
add
jg
clc
cmp
cwtl
mov
and
int
clc
lret
cli
xchg
fcmove
sbb
sub
jnp
add
mov
add
ficoml
sub
clc
mov
pop
ss
jmp
add
stos
ss
xbegin
xchg
mov
dec
insl
mov
lahf
sbb
clc
jns
add
push
jns
add
sbb
out
in
out
cli
mov
flds
or
lcall
adc
clc
add
add
ss
clc
test
cmp
clc
cmp
clc
movsb
clc
cmp
es
fildl
add
inc
add
xchg
shl
clc
hlt
inc
add
mov
inc
add
add
add
clc
inc
clc
clc
xbegin
clc
bts
fistps
clc
stc
iret
xor
mov
inc
clc
repnz
lret
xchg
cs
push
inc
add
inc
clc
mov
daa
clc
or
add
clc
fs
add
jmp
clc
fldt
clc
jp
mov
psrlw
aam
mov
clc
mov
xchg
adc
cmp
mov
add
stos
incl
clc
sbb
mov
add
imul
add
inc
clc
pop
xchg
cli
not
xabort
daa
clc
push
cs
sti
mulb
add
pop
sbb
mov
in
lods
mov
inc
add
cmp
clc
pop
jb
add
daa
clc
mov
data16
cmp
clc
jno
add
lret
fcompl
fists
add
rclb
add
insb
xor
jp
cmp
add
clc
cmp
clc
fstps
or
in
out
mov
add
sbb
clc
ja
pop
clc
into
mov
inc
add
dec
mov
loopne
cmp
add
daa
clc
cmp
and
add
mov
add
insb
testb
add
add
hlt
lret
cmpsb
clc
fadds
mov
mov
testb
xor
add
add
in
cltd
adc
add
add
mov
add
jmp
loop
dec
ljmp
mov
add
dec
inc
add
and
add
fcomps
cmc
sar
clc
inc
clc
std
cmp
ljmp
clc
mov
aad
jnp
jmp
jne
add
das
push
xchg
push
add
stc
sar
pop
clc
notrack
mov
xchg
pushf
cli
mov
sbb
cwtl
mov
mov
loop
mov
stc
test
and
dec
xchg
dec
jge
je
add
mov
add
scas
in
mov
add
cmp
imul
jmp
xor
add
add
repnz
add
clc
fcoms
jns
sub
add
clc
and
jno
add
popa
add
stos
test
or
jmp
clc
sar
clc
mov
clc
cmp
test
mov
add
add
gs
lret
clc
add
pushf
cmp
adc
add
add
leave
shl
and
add
enter
cmp
clc
cmp
dec
mov
add
add
mov
add
stc
mov
clc
inc
clc
repz
out
stc
inc
add
cmp
clc
mov
mov
add
fs
dec
gs
push
add
or
clc
popf
es
idivl
add
xchg
push
stos
cmp
movsb
clc
dec
jl
clc
fsubl
add
add
clc
stos
jmp
add
add
inc
clc
lcall
out
mov
add
das
or
clc
loop
cmp
stos
push
clc
push
test
add
jmp
clc
frstor
dec
es
gs
xor
add
aam
jb
add
push
add
std
and
add
clc
push
test
add
add
clc
dec
ret
jl
dec
inc
clc
push
sbb
fwait
fs
adc
out
mov
jns
lret
push
clc
call
add
xchg
lea
adc
add
lock
xlat
cmpsl
clc
push
add
cmp
add
cltd
lods
ret
clc
vmovaps
and
add
mov
mov
add
lea
add
clc
cmp
ja
jbe
into
push
mov
sbb
and
add
movsl
clc
vmovaps
add
sub
dec
in
jno
add
add
jne
jbe
scas
xor
add
jp
add
jb
add
ljmp
pusha
add
clc
cld
addr16
fwait
push
add
xor
loopne
lock
add
add
test
fs
pop
daa
clc
cmp
shll
add
lahf
jecxz
push
add
cmp
add
xlat
negl
cmpsl
clc
pop
cmp
ret
cmp
clc
cmpsl
clc
cli
pop
fildll
lock
test
push
outsl
mov
jnp
clc
sar
dec
leave
loope
sub
add
loop
clc
stos
lret
mov
mov
leave
mov
mov
xchg
jo
add
mov
in
addr16
xchg
int
add
pop
mov
jp
cmp
clc
fidivrs
mov
add
add
adc
add
data16
mov
clc
mov
jl
xchg
repnz
aad
clc
lods
lods
pop
arpl
add
adc
ja
bound
add
pop
stos
add
add
lock
add
cld
cwtl
dec
lahf
add
add
push
jg
add
sbb
shll
test
lret
out
inc
add
leave
pop
add
add
add
xchg
xchg
pop
push
add
test
add
xor
add
add
xor
add
clc
js
int
inc
clc
push
lcall
clc
cmp
add
pop
dec
ljmp
cmc
adc
add
sbb
clc
loopne
pop
xchg
mov
or
clc
xor
add
leave
outsb
aaa
sbb
movsb
clc
xor
cmp
jae
add
clc
xor
add
bound
add
mov
lock
add
cmp
in
mov
add
ljmp
clc
in
mov
cmp
inc
clc
adc
add
outsl
out
mov
inc
add
je
stos
roll
clc
cli
push
or
mov
add
add
loope
add
add
imul
add
scas
cmp
xchg
loop
cmp
add
pushf
mov
cmp
cmp
xbegin
clc
das
xchg
or
iret
pop
js
clc
loope
add
xabort
enter
lret
push
clc
imulb
sbb
loop
fdivl
add
dec
divl
add
iret
repnz
or
adc
add
jno
add
pop
outsb
pop
dec
jmp
add
or
cltd
cld
cmpsl
clc
xchg
dec
and
add
ja
push
mov
cmp
xchg
fdivrs
out
pop
add
add
fwait
fs
xchg
cmpsb
clc
dec
push
add
cltd
repnz
jge
icebp
aam
inc
add
mov
clc
xchg
popa
add
mov
insl
imul
sbb
add
stos
fdivrl
cli
pop
clc
sti
push
call
pushf
repz
pop
inc
clc
ds
lahf
add
add
add
sbb
clc
ss
jno
add
add
add
lahf
inc
clc
dec
jge
add
jmp
cmp
xchg
loop
out
sarb
fadds
push
sbb
cmp
clc
mov
mov
sahf
mov
push
dec
sbb
add
dec
scas
iret
test
shlb
addr16
jo
add
add
cmp
js
add
add
clc
pop
mov
jbe
int
aaa
sarl
mov
dec
cmp
cltd
es
inc
clc
dec
cwtl
or
inc
add
outsl
mov
add
int3
movsl
clc
add
add
add
cmpsb
clc
std
xchg
sub
cmc
sub
clc
pop
pop
fwait
or
add
clc
mov
lods
jae
add
clc
cmp
mov
and
inc
add
leave
jnp,pt
jle
mov
sbb
sub
add
faddl
xchg
xchg
mov
add
repnz
popa
add
and
mov
add
dec
jb
add
clc
and
add
call
fs
in
mov
xor
add
test
out
mov
add
mov
add
mov
iret
push
mov
jle
add
imul
imul
adc
mov
adc
add
insb
and
add
add
jb
add
add
sub
mov
je
xlat
dec
sub
clc
sar
lock
mov
cmp
jge
outsl
sub
xor
add
je
jbe
sub
clc
and
add
arpl
add
out
add
add
pop
pushf
mov
add
or
jbe
add
jne
mov
lock
rcll
jge
add
push
clc
push
add
dec
mov
dec
dec
sub
and
add
jmp
pop
std
jno
add
adc
add
scas
outsl
push
add
data16
fsubs
lods
insb
lock
mov
xchg
inc
add
js
clc
sbb
ret
clc
not
fnstsw
scas
lcall
add
clc
dec
inc
add
mov
pop
cmp
or
clc
lea
cmp
dec
jmp
clc
sub
sbb
fimuls
sbb
mov
fwait
sub
push
dec
sub
add
adc
sahf
cmp
in
cmp
add
add
xchg
jp
dec
repz
in
cmp
push
clc
cmpsb
clc
push
xor
add
sub
cmp
or
jl
clc
lret
mov
inc
clc
shrl
inc
add
xchg
pusha
add
pop
push
inc
clc
xchg
sar
data16
adc
add
sub
push
add
fistpl
clc
xabort
pop
lods
mov
xchg
push
add
out
xor
cwtl
cmp
lret
out
xchg
rolb
clc
ljmp
xchg
repz
clc
sbb
ja
sti
mov
add
shrb
stos
out
mov
add
mov
add
jae
add
clc
fstps
rcll
add
lcall
clc
push
clc
rcr
in
mov
clc
sub
int
add
sbb
pop
rdseed
inc
add
sar
clc
fdivl
add
add
clc
push
add
push
push
add
cmp
cmp
add
jb
add
add
mov
add
and
clc
dec
jo
das
gs
xchg
movsl
clc
jnp
add
push
mov
pop
test
inc
add
in
add
xor
mov
jge
add
add
add
xchg
sbb
clc
mov
fisubrl
jno
add
fwait
pop
add
add
clc
pop
push
add
sub
cmp
xchg
pop
ss
test
ljmp
cld
incl
pusha
add
mov
clc
inc
clc
inc
add
jmp
dec
sbb
add
add
lret
push
mov
lods
lahf
lcall
shrb
add
imul
call
ret
adc
add
add
testl
pushf
fidivrs
add
push
clc
das
jo
add
pop
rcrl
test
add
add
test
out
jns
lahf
movsl
clc
mov
pop
adc
add
clc
or
imul
add
ja
clc
add
add
clc
cmp
clc
adc
add
or
clc
jb
add
add
lea
add
lods
jl
call
clc
std
scas
pop
push
inc
clc
xor
add
daa
clc
or
dec
loopne
mov
xchg
mov
add
mov
add
add
je
lods
mov
add
fsubs
add
mov
clc
cli
xchg
mov
pmuludq
cli
cli
dec
jbe
dec
pop
clc
cmp
pop
or
xchg
jnp
push
daa
clc
in
clc
repz
add
clc
iret
fwait
mov
out
mov
cmpsl
clc
dec
and
add
fs
paddusb
fs
in
lods
loop
add
add
jp
cs
add
idivl
mov
clc
lods
add
add
clc
cmp
add
repz
sub
add
add
add
out
aaa
fnstsw
clc
fxch
es
fsubrs
mov
xor
sbb
sub
xchg
test
add
cmp
pop
jge
hlt
adc
clc
in
pop
clc
loope
dec
mov
cmp
push
add
int
arpl
add
xor
add
add
mov
clc
nop
lock
movsl
clc
cmp
push
add
into
arpl
add
adc
add
cld
data16
pushl
pop
scas
dec
in
popa
add
xchg
rorb
lret
clc
mov
mov
sbb
jae
add
clc
jle
clc
inc
clc
iret
test
jmp
add
fisttpl
fwait
dec
adc
pushf
pusha
add
mov
push
inc
add
adc
add
sub
add
out
iret
fstps
sbb
xchg
sbb
mov
clc
arpl
add
fstpt
mov
xchg
imul
clc
xchg
leave
add
add
popa
add
mov
inc
add
xchg
cmpsl
clc
mov
jns,pt
pusha
add
mov
add
mov
push
pusha
add
insl
clc
xor
add
clc
es
or
push
add
jne
clc
push
ljmp
int
add
notl
add
dec
cmpsb
clc
cli
jb
add
add
add
add
add
sbb
pop
jbe
insb
out
xor
sahf
xor
jmp
push
push
adc
add
add
adc
add
mov
mov
fs
mov
filds
ljmp
clc
mov
mov
dec
das
gs
inc
clc
jne
sbb
mov
jp
sarb
add
jae
add
jle
dec
inc
clc
and
add
add
aad
clc
in
pcmpeqd
add
clc
push
adc
push
clc
lahf
or
rclb
add
imul
test
dec
dec
leave
mov
xchg
sub
dec
mov
add
and
clc
int
mov
xor
add
add
xor
add
xchg
dec
add
fucom
clc
int3
mov
aad
rcrl
outsb
sahf
xabort
add
adc
inc
add
mov
cmp
sbb
sub
add
daa
clc
xabort
lret
xchg
data16
mov
clc
sbb
mov
ja
sbb
mov
mov
clc
cmpsb
clc
pop
or
clc
or
mov
add
add
sbb
fsubs
clc
in
jmp
clc
jae
add
add
add
dec
pusha
add
jnp
inc
add
cld
mov
sgdtl
add
mov
add
xor
xchg
cld
fnstcw
add
repz
clc
out
mov
pop
mov
call
add
clc
aam
adc
clc
out
sbb
call
cmp
add
fiaddl
add
mov
clc
xor
add
inc
clc
aam
cmp
add
pushf
and
add
add
xor
aas
cmp
clc
cmp
in
mov
dec
jne
add
cmp
mov
dec
fdivrl
repnz
loope
je
leave
cmp
sar
loopne
mov
sub
xor
clc
adc
add
dec
cmc
cs
pop
mov
xchg
jl
mov
add
jle
or
push
ret
cmc
fsubl
xabort
clc
jmp
add
add
into
data16
sar
add
xchg
adc
dec
jl
clc
lock
push
add
cmp
mov
clc
cli
jns
cwtl
call
clc
test
xchg
jle
add
mov
clc
push
add
sar
xor
jecxz
sub
add
cmp
add
insb
mov
sub
clc
sbb
inc
clc
aad
sbb
clc
pop
add
add
add
inc
clc
mov
clc
pop
add
movzbl
mov
push
add
inc
clc
movsl
clc
pop
loope
sub
clc
dec
std
in
fldl
add
dec
ret
clc
fcomps
jmp
mov
clc
dec
push
inc
clc
sbb
repz
add
pop
addr16
xchg
inc
clc
push
add
and
jl
add
jne
dec
popa
add
jmp
add
add
std
inc
clc
xor
fwait
push
xor
add
dec
leave
popf
sub
rcrl
push
aas
aas
fdivs
addr16
repz
adc
add
push
pop
cs
mov
clc
hlt
cwtl
cmp
ja
scas
cmp
stc
pop
into
or
outsb
jae
add
add
add
add
add
aaa
movsb
clc
into
jg
dec
push
sub
clc
xor
add
clc
int3
inc
clc
ret
jge
and
inc
add
out
adc
add
add
cmp
cmc
jecxz
sub
mov
sar
mov
fiadds
xabort
clc
push
sarb
gs
call
and
push
fucomp
pop
movsb
clc
imul
mov
lahf
xchg
xchg
ret
clc
mov
mov
add
add
adc
add
adc
add
add
gs
sahf
add
add
clc
out
test
cmp
xor
cwtl
xor
add
mov
adc
add
mov
push
add
cld
mov
aas
clc
dec
pop
mov
ja
sbb
inc
add
mov
daa
clc
fwait
adc
add
clc
jbe
push
push
inc
clc
xor
ja
dec
scas
jge
jecxz
lret
clc
icebp
jns
push
add
push
add
in
xchg
adc
add
cltd
pusha
add
sbb
aas
add
xor
add
jno
add
xor
xbegin
push
out
int3
lahf
int3
push
add
jmp
add
mov
jbe
add
pop
sar
clc
repz
pop
adc
add
clc
je
cld
insl
insl
inc
add
das
addr16
nop
lock
aad
push
cmc
inc
clc
popf
add
add
mov
fcoms
shll
mov
cli
dec
mov
jbe
xchg
cmc
imul
dec
ss
add
sub
vmaxps
out
cmpsb
clc
sar
cmp
lcall
jg
lret
es
cs
cs
cmp
add
mov
outsb
jo
add
add
xchg
add
add
add
inc
clc
xchg
test
lods
lods
in
mov
bound
add
jl
imul
lea
add
rorl
clc
test
add
push
clc
aad
sub
pop
mov
test
xchg
mov
add
add
add
insb
lea
add
fucomip
aad
add
inc
add
mov
add
mov
clc
add
xor
add
loop
pop
fsubrs
insl
and
add
ljmp
nop
add
not
push
add
sar
clc
sarl
flds
add
loop
scas
idivl
fdivl
jo
add
fs
cltd
cmpsb
clc
xchg
push
pushf
xor
add
dec
cmp
add
dec
aam
in
mov
imul
or
add
or
pop
jmp
clc
das
scas
mov
and
add
clc
mov
clc
inc
clc
lret
and
add
xchg
pop
fs
mov
cli
icebp
mov
add
jo,pt
add
push
jns
clc
aam
gs
push
dec
push
add
or
stos
ljmp
xchg
loopne
add
lods
dec
mov
add
jnp
add
ret
clc
cmp
pop
or
add
add
adc
xor
add
jmp
data16
jb
add
add
pop
ret
jg
jb
add
push
out
sbb
pop
clc
push
add
movsl
clc
mov
add
mov
xbegin
add
jge
mov
adc
clc
lea
imul
clc
mov
mov
inc
clc
sti
ljmp
aam
clc
stc
outsb
imul
lret
xchg
repnz
add
or
mov
add
add
mov
xor
add
sbb
loope
mov
add
aas
dec
jg
or
es
push
jge
int
add
or
clc
sub
add
cmp
outsl
jmp
vsqrtps
add
outsb
sahf
es
xchg
rcrb
or
or
clc
inc
add
repz
cmp
cld
shrl
add
or
jecxz
enter
add
clc
into
mov
stc
sahf
sub
fidivrl
clc
leave
je
add
fwait
test
adc
add
sbb
add
addr16
adc
add
clc
and
add
pop
push
add
cmp
dec
cmp
pop
sbb
push
add
pop
clc
je
mov
out
xchg
ret
push
dec
and
add
sahf
out
mov
out
cltd
lret
arpl
add
aad
clc
jle
je
mov
std
mov
dec
push
clc
jl
or
clc
xor
clc
movsb
clc
pop
xchg
sar
test
cwtl
sar
add
cmp
add
cmc
addr16
addr16
icebp
xchg
sbb
fidivs
xor
add
mov
inc
clc
loopne,pt
pop
sub
and
add
add
or
add
imul
clc
xchg
test
out
enter
loop
mov
add
push
mov
add
mov
add
mov
jae
add
fildll
sub
add
data16
adc
add
or
fimull
push
sahf
popa
add
mov
fwait
lods
mov
stc
dec
cmpsl
clc
cwtl
push
add
mov
ss
cmp
add
ja
add
lcall
movsl
clc
jne
clc
jnp
clc
or
nop
fs
inc
add
fsqrt
popa
add
and
add
jnp
add
sub
mov
test
clc
cmp
daa
clc
cwtl
sbb
add
clc
push
add
cmp
je
out
mov
clc
mov
add
or
add
pop
xchg
data16
mov
add
clc
cli
repz
sbb
fcmovb
clc
jae
add
or
add
pop
mov
clc
mov
ret
loope
adc
test
mov
xchg
jle
adc
add
or
popa
add
cmp
add
xchg
aam
push
cwtl
mov
xabort
sbb
jo
add
add
sahf
cmp
clc
jb
add
fs
bnd
clc
adc
add
and
add
inc
add
das
inc
add
mov
in
sbb
repz
sub
fcompl
clc
cmp
mov
add
add
shlb
ljmp
lahf
nop
push
add
dec
test
dec
inc
add
sbb
clc
aaa
call
add
add
movsb
clc
pop
jge
adc
add
inc
clc
int
add
arpl
add
mov
clc
pushf
adc
add
pop
fnstenv
add
xabort
add
adc
add
clc
ja,pn
and
add
push
je
inc
clc
mov
clc
nop
cmp
clc
jp
cmp
clc
pop
lahf
movsb
clc
mov
jp
sbb
mov
das
ss
in
out
inc
clc
jae
add
jle
add
inc
add
pop
push
clc
xor
add
aam
stos
or
add
daa
clc
or
add
mov
xchg
aam
mov
sub
addr16
sbb
pop
mov
and
add
iret
imul
pop
scas
stos
mov
pusha
add
pop
jne
ret
clc
push
add
push
sub
add
inc
clc
test
pop
pop
xabort
mov
ret
inc
add
inc
add
loopne
sahf
fmul
popa
add
sbb
arpl
add
add
add
add
xchg
icebp
mov
clc
popf
sub
adc
dec
xchg
pop
test
loope
lods
mov
cmc
movsl
clc
sub
aad
add
mov
cmp
push
clc
dec
out
xchg
loopne
addr16
jno
add
movsb
clc
sbb
add
jnp
addr16
sub
mov
add
sub
add
add
mov
add
add
cmp
xchg
sub
out
cmp
sub
sub
add
bound
add
scas
sub
sub
cs
jnp
imul
add
add
clc
xabort
add
sar
into
mov
and
jmp
clc
cmp
jns
add
add
add
fidivrl
inc
add
jl
add
hlt
outsl
mov
enter
fistl
clc
mov
bound
add
ds
pop
inc
add
lahf
xor
add
inc
clc
dec
fdiv
dec
jae
add
popf
loope
sahf
je
dec
jns
and
movsb
clc
push
add
cmc
jmp
dec
out
mov
jg
sbb
imul
rolb
jne
sub
ljmp
sbb
add
cli
jns,pn
or
xbegin
mov
clc
stos
into
pushf
sub
add
or
clc
repz
clc
ficompl
mov
xchg
lods
or
add
in
repnz
add
clc
jp
add
sub
idivl
test
daa
clc
mov
mov
pop
jnp
lea
add
add
enter
cmpsl
clc
add
mov
jecxz
mov
mov
aad
out
cmp
sbb
enter
pop
mov
add
pop
mov
add
stc
xchg
pop
clc
mov
lcall
clc
outsl
sub
mov
out
js
add
into
cmp
pop
js
add
adc
add
mov
jecxz
cwtl
push
scas
sbb
add
rclb
add
or
cmp
movsb
clc
cltd
or
add
pop
fwait
mov
push
add
es
loopne
jb
add
pusha
add
sbb
aam
dec
jbe
lea
add
xchg
ret
clc
aam
add
add
add
cli
fld
clc
adc
cltd
lock
clc
sar
clc
xor
jo
add
pusha
add
ss
add
inc
add
inc
add
std
fnsave
add
scas
cmp
clc
mov
inc
clc
sar
xchg
pop
dec
in
cmp
clc
inc
clc
sar
mov
or
ds
add
sbb
jg
clc
cmp
xabort
das
aas
and
mov
push
gs
sbb
xor
add
clc
jp
cmp
xchg
ljmp
clc
inc
add
dec
cld
xchg
mov
jno
add
mov
add
stos
pop
jl
mov
add
push
mov
and
add
icebp
xchg
inc
add
inc
clc
lods
mov
movsl
clc
push
sbb
mov
add
add
jne
ficoms
clc
insl
mov
out
pop
movsb
clc
fisubs
add
push
imul
call
clc
mov
inc
add
xchg
insl
fmul
adc
clc
jl
pop
rcrl
fcomps
leave
cmp
sub
add
dec
mov
add
mov
add
add
lods
pop
sub
xchg
and
xor
clc
sbb
xchg
test
mov
add
add
imul
jb
add
mov
std
sbb
ja
clc
xchg
and
add
int
xor
add
js
bound
add
add
movsb
clc
call
clc
xor
add
pushf
mov
pop
pop
cld
push
ja
add
mulb
add
fs
cmp
popf
jecxz
faddl
in
cmp
or
add
push
pop
scas
negb
mov
inc
add
sahf
push
pop
or
clc
fcomps
lret
insb
mov
clc
push
cmp
fnstsw
add
dec
sti
jmp
dec
sar
scas
xor
add
sub
aam
add
add
add
cmp
jecxz
sub
inc
clc
jg
add
push
add
fwait
icebp
call
je
clc
fs
jne
clc
xchg
sub
daa
clc
loopne
mov
inc
add
out
inc
clc
mov
clc
xchg
inc
add
test
popa
add
cmp
insl
jmp
setns
fisttpl
mov
add
add
dec
in
sbb
jmp
push
clc
xabort
add
mov
in
stc
push
cmp
cmp
jnp
push
sahf
cmp
add
inc
add
repz
imul
clc
daa
clc
adc
clc
cmp
clc
pop
pop
iret
test
clc
xchg
lret
sbb
shlb
pop
clc
dec
in
push
jns
jmp
in
pop
dec
pop
clc
jno
add
cmp
push
add
gs
dec
mov
add
cmp
clc
notl
sti
adc
scas
dec
in
xor
sbb
add
add
add
clc
pusha
add
xor
add
jmp
inc
clc
jl
into
cmp
enter
fst
push
add
add
clc
fldl
add
add
clc
cltd
and
add
add
clc
aas
rcrl
jmp
mov
clc
pop
stos
int3
pop
cmp
inc
add
cmpsl
clc
test
add
sbb
add
cmpsl
clc
sbb
add
lret
lcall
add
pop
adc
add
fs
dec
cmp
cmp
add
xor
add
mov
clc
je
call
jle
clc
xchg
in
pop
xor
add
clc
mov
add
xchg
cmp
clc
cli
movsb
clc
push
add
out
push
clc
out
sub
clc
rcrb
in
sbb
add
mov
imul
add
test
aam
sti
add
add
add
out
mov
or
sub
aad
clc
fdivrs
jecxz
mov
dec
sar
repnz
pop
xchg
cmpsl
clc
pop
sbb
movsl
clc
imul
arpl
add
aad
cmp
add
push
add
mov
cs
pop
stc
imull
data16
ret
clc
inc
add
js
in
ja
add
lret
mov
test
cmp
clc
aad
lods
es
imul
cmp
ret
mov
sbb
pop
ret
add
leave
or
cltd
sbb
add
imulb
add
xchg
jo
add
pop
inc
add
pop
add
incb
sti
jno
add
add
popa
add
cltd
stc
or
inc
add
mov
fiaddl
mov
push
clc
pop
aad
insb
out
adc
das
adc
add
add
push
clc
lock
add
aaa
das
stos
sub
pop
mov
jnp
mov
or
fs
dec
xor
add
add
test
jecxz
dec
add
add
add
cwtl
sar
clc
jl
adc
add
cmpsb
clc
fstpl
xchg
loope
dec
cmp
xor
xchg
mov
add
mov
mov
cmp
data16
inc
add
in
mulb
add
and
jne
cmp
test
ret
clc
out
mov
add
add
loope
icebp
lods
lea
add
clc
clc
push
mov
mov
lret
mov
xchg
bound
add
add
clc
mov
jae
add
jns
push
add
popf
or
xchg
add
adc
add
int
cltd
lea
push
cltd
mov
ljmp
add
lods
or
push
clc
lahf
ja
in
movsl
clc
sub
xor
add
data16
insb
mov
aam
popf
fsts
clc
fsubs
add
jp
clc
jo
add
clc
outsb
mov
add
xchg
pop
in
clc
stos
cmp
pop
xor
clc
push
clc
pop
shlb
push
arpl
add
add
xchg
ret
clc
outsl
nop
xor
ljmp
pop
dec
xor
add
cmp
in
xchg
adc
mov
or
add
xor
add
clc
mov
clc
gs
jns
imull
mov
xchg
xor
push
and
clc
call
add
pop
sbb
clc
dec
pop
inc
clc
mov
mov
xor
clc
addr16
insb
lahf
outsl
jl
cmp
xor
add
mov
add
dec
mov
bound
add
xor
add
fadds
clc
mov
test
dec
fmull
xchg
mov
lods
adc
adc
add
outsl
jl
pop
add
push
and
add
clc
push
add
fmuls
lods
jmp
add
cmp
xor
add
sub
cwtl
repnz
xchg
jae
add
jg
add
imul
adc
add
cmp
add
add
jnp
dec
pop
bound
add
clc
rcll
add
add
movsb
clc
add
add
clc
jae
add
nop
xabort
pop
jns
js
jno
add
movsl
clc
jbe
jg
xor
xchg
sar
clc
jns
cmp
add
add
add
add
sub
add
loop
xor
add
add
sbb
mov
clc
or
cmpsb
clc
pushf
xor
add
pop
mov
cmp
add
pop
pusha
add
movsl
clc
fs
dec
jle
clc
div
cmp
and
dec
mov
test
sbb
mov
add
jno
add
clc
add
add
dec
add
rcll
add
iret
punpckhwd
clc
mov
clc
xchg
lods
cmp
push
add
rcr
dec
inc
clc
or
and
int
int3
xchg
push
fbld
add
ljmp
add
dec
mov
clc
jp
add
sub
add
add
add
dec
outsb
lret
add
test
test
in
ds
mov
popf
xchg
cwtl
mov
outsl
repz
add
cmp
mov
pushf
outsb
cmp
sbb
xchg
loopne
jne
movsl
clc
add
cmp
clc
dec
or
addr16
pop
push
clc
dec
mov
adc
add
bound
add
clc
pop
xchg
mov
xor
add
in
cmp
sub
add
icebp
sub
xchg
and
add
int3
ljmp
adc
add
fs
inc
add
push
jle
clc
mov
clc
and
add
add
clc
test
clc
call
clc
int
clc
in
cmp
fwait
outsl
loope
fcomp
inc
add
inc
add
jp
add
add
ss
cmp
add
add
scas
inc
clc
imul
xabort
or
xchg
cmp
or
add
clc
insl
ret
clc
in
cmp
add
pop
push
and
push
sub
add
add
jne
pop
sar
clc
outsb
test
xlat
push
or
scas
pop
sbb
add
mov
inc
clc
test
fldenv
add
into
pop
fsubrs
add
mov
clc
cmp
add
xabort
add
jne
sbb
add
incb
add
clc
adc
mov
testl
lret
mov
ljmp
sahf
pop
nop
pushf
xchg
dec
mov
testb
add
ffreep
clc
dec
aad
add
call
clc
jnp
enter
cmp
adc
add
clc
enter
add
pop
jo
add
clc
int
addr16
cmp
add
pop
nop
add
add
gs
hlt
enter
enter
and
add
add
rcrl
out
ret
nop
push
sbb
pop
in
sub
repnz
jp
jnp
sbb
clc
setle
mov
mov
sbb
add
jno
add
jae
add
sub
enter
fstpt
pop
ds
jbe
or
imul
cmpsl
clc
sbb
clc
xchg
or
xbegin
rorb
stos
mov
data16
inc
clc
xchg
jmp
dec
clc
cmp
xchg
inc
clc
pop
gs
jb
add
insl
mov
pop
mov
mov
clc
jmp
add
shlb
add
mov
clc
push
mov
mov
out
cltd
popf
cld
movsl
clc
pop
jl
pusha
add
test
fidivs
dec
pushf
mov
add
call
and
add
xor
add
add
add
add
jbe
fldt
shl
clc
and
add
add
test
clc
push
add
mov
dec
dec
loop
cli
imul
pop
push
add
es
aaa
neg
pop
mov
cltd
xor
add
mov
loope
ficoml
add
pop
cmpsl
clc
leave
cld
lcall
add
jo
add
mov
mov
clc
sub
clc
sar
addr16
imul
clc
cmp
add
add
add
mov
clc
mov
add
jecxz
sub
jecxz
aas
or
in
jge
lods
jl
add
pop
sbb
lcall
mov
clc
clc
das
adc
stos
aad
add
xchg
idivb
cmp
inc
add
mov
clc
add
mov
add
bound
add
aaa
stos
pop
inc
add
lret
sbb
cmp
pusha
add
cltd
test
inc
clc
daa
clc
xchg
add
add
add
cmp
clc
and
add
sbb
test
adc
add
sub
add
test
push
cs
loop
adc
inc
clc
daa
clc
mov
clc
dec
lret
add
add
dec
in
sub
idivl
js
add
lret
add
iret
xor
add
pop
mov
sub
out
pop
cltd
dec
adc
add
clc
inc
clc
sar
push
daa
clc
mov
fisubrs
dec
in
scas
mov
mov
ror
loopne
inc
clc
push
clc
push
cmp
add
cmp
cwtl
jb
add
pop
adc
add
clc
jecxz
pusha
add
leave
and
add
add
sub
add
push
add
pop
mov
add
push
add
fld1
stos
adc
add
add
pop
dec
mov
test
push
loope
push
add
add
add
push
imull
bound
add
aaa
mov
cli
mov
mov
iret
add
inc
add
push
clc
dec
sbb
sar
insb
sar
sub
adc
add
and
add
push
repz
or
xchg
int3
test
pop
ret
clc
mov
add
clc
aam
mov
add
push
rcl
scas
mov
cld
or
and
adc
push
imul
or
fwait
sub
xor
add
clc
arpl
add
jmp
nop
mov
clc
test
notl
clc
jno
add
add
xchg
add
xchg
mov
adc
add
and
add
xor
add
pop
sbb
xchg
test
movsb
clc
pop
jne
pop
icebp
dec
icebp
mov
mov
inc
clc
cmp
fldl
add
add
pop
cmp
mov
outsb
js
clc
xor
mov
out
movsl
clc
jp
sbb
sbb
roll
add
inc
add
gs
arpl
add
lcall
xchg
jae
add
pop
mov
add
lods
xchg
inc
add
sti
xor
add
clc
jecxz
movsb
clc
and
add
cmc
fcomip
lret
add
push
inc
add
ss
cmpsl
clc
sub
add
mov
clc
push
insb
icebp
adc
add
sub
mov
clc
imul
add
add
add
cs
loopne
in
mov
enter
pop
sbb
addr16
add
add
clc
out
movsb
clc
dec
fnstsw
mov
and
add
popa
add
call
clc
movsb
clc
lods
call
cmp
dec
clc
or
add
clc
scas
jnp
add
pop
cmp
or
xor
add
stos
add
add
clc
and
add
add
mov
add
pop
outsb
enter
cmc
testb
clc
mov
test
jne
clc
dec
cmpsl
clc
mov
xor
add
clc
jnp
add
repnz
inc
add
xor
add
imul
push
add
cmp
addr16
xchg
imul
dec
pop
es
lods
and
add
cmp
clc
aam
add
dec
inc
clc
lods
push
push
mov
aad
lret
mov
clc
dec
clc
jge
add
pop
pop
xor
add
add
or
dec
lahf
nop
call
adc
add
mov
sbb
clc
ret
add
leave
adc
add
add
stos
pop
jl
clc
and
add
xor
add
push
cmpsl
clc
inc
clc
data16
fidivrs
fldlg2
repnz
enter
push
arpl
add
push
out
mov
call
inc
add
imul
add
mov
das
pop
in
xchg
jge
out
aaa
cmp
push
add
ja
lea
add
push
sbb
sub
mov
into
xabort
movsb
clc
mov
add
mov
roll
std
push
add
xor
icebp
xor
add
mull
add
clc
popf
xor
add
out
adc
add
add
dec
sar
xchg
and
push
out
and
add
mov
add
jno
add
or
scas
lock
clc
int
scas
mov
pop
in
inc
clc
fwait
jb
add
add
fistpll
clc
jo
add
clc
rcl
mov
testl
xchg
cmp
cmp
add
pop
push
add
imul
cmp
ret
clc
dec
mov
add
cmp
clc
mov
pop
out
out
pop
jnp
mov
loop
sbb
test
pusha
add
dec
or
or
clc
and
dec
add
shll
mov
or
xchg
inc
add
icebp
adc
and
add
clc
pop
out
out
fistps
mov
clc
or
cmp
insl
cmovbe
push
imul
repnz
clc
mov
stos
sub
in
mov
lods
iret
add
add
add
insb
mov
add
outsl
outsb
outsl
mov
add
cmp
clc
dec
cmpsl
clc
jecxz
mov
out
inc
add
mov
clc
dec
cli
repz
add
ret
clc
cmp
out
repz
clc
or
icebp
mov
add
push
add
xchg
cmp
clc
mov
cmp
insl
shlb
add
push
add
and
add
aad
jnp
roll
add
push
mov
stos
mov
clc
and
add
stos
repnz
add
lea
xor
add
clc
xor
clc
dec
jno
add
out
dec
push
stc
in
addr16
loop
mov
add
sti
fs
popf
mov
out
mov
scas
adc
add
add
aas
int3
mov
add
fwait
xchg
dec
inc
add
ljmp
cmp
hlt
rcrb
in
xchg
push
jg
jnp
sbb
push
cmp
and
clc
xchg
mull
add
in
xchg
dec
in
mov
add
mov
fisttpl
add
cmp
clc
cmc
push
shlb
lods
xor
cmp
mov
xchg
or
stos
lods
push
adc
add
clc
push
xchg
stos
iret
es
adc
add
popf
hlt
or
gs
gs
fs
dec
sub
sub
pop
inc
clc
std
xor
mov
sub
add
push
add
repz
sub
push
add
mov
or
add
popf
xchg
jmp
test
rorb
fidivrl
add
insl
mov
add
clc
jecxz
std
and
xor
clc
sbb
add
xor
cmpsl
clc
push
inc
clc
outsl
inc
add
pusha
add
mov
xchg
xabort
add
mov
add
add
push
mov
cmp
lret
add
dec
inc
add
roll
clc
lcall
clc
mov
pop
pop
adc
add
out
jno
add
add
add
cmp
xchg
aam
lods
shrb
mov
jp
clc
xor
push
add
sar
addr16
mov
into
pop
add
add
sbb
add
daa
clc
and
gs
xchg
pop
imul
dec
mov
and
add
add
clc
shll
add
ljmp
lret
xchg
cld
cltd
sbb
pop
shrb
mov
mov
add
and
jge
test
jno
add
sbb
add
test
out
jno
add
add
jmp
test
add
ljmp
inc
add
cmp
lods
cli
out
ljmp
shrb
mov
xbegin
lret
pusha
add
or
pop
ret
add
or
mov
lods
pop
push
sub
mov
dec
jno
add
add
clc
inc
clc
std
cltd
aam
clc
out
xchg
popf
mov
cmpsl
clc
stos
xor
add
jl
and
dec
mov
add
imul
clc
cmp
cld
push
sarb
das
push
clc
xchg
mull
add
cmp
adc
add
add
lahf
in
mov
add
add
push
into
cmp
clc
fisttpll
pop
cmp
xchg
mov
add
fsubl
clc
rol
clc
sahf
rolb
clc
insb
jo
add
clc
xchg
out
xchg
cmp
add
add
inc
add
cmpsl
clc
jle
out
and
add
mov
mov
add
stc
push
sub
mov
jmp
cltd
jp
fwait
mov
add
out
pushf
repnz
jnp
sahf
or
sub
pushf
push
pop
movsb
clc
movsb
clc
divb
clc
jle
xor
add
and
add
mov
mov
pop
mov
scas
sbb
idivl
aam
clc
pop
xor
add
clc
mov
or
push
mov
push
clc
push
add
and
add
out
das
mov
sbb
insb
cwtl
cmp
xor
add
cmp
aaa
inc
clc
mov
jg
add
jle
addr16
into
gs
push
add
and
add
clc
fldenv
int3
push
add
ja
hlt
arpl
add
clc
mov
loope
dec
loope
pop
hlt
hlt
mov
add
loopne
mov
mov
mov
xchg
cs
clc
jns
sbb
add
divb
mov
push
or
add
inc
clc
mov
repz
dec
and
sar
or
jae
add
pop
arpl
add
pop
cmp
clc
adc
add
ja
and
sbb
add
idivl
xchg
nop
xchg
or
add
push
nop
popl
clc
mov
add
xor
add
push
add
addr16
ret
add
jb
add
add
add
mov
clc
inc
clc
fistpll
std
arpl
add
clc
adc
add
loop
push
cmp
mov
rol
clc
ficoms
add
dec
fs
mov
int3
pop
sbb
out
jmp
clc
imul
clc
sbb
add
in
lea
adc
add
pop
clc
ret
clc
imul
in
inc
add
gs
sbb
jb
add
outsl
jbe
pusha
add
out
dec
das
dec
jb
add
clc
shll
mov
add
jbe
or
or
add
mov
xor
cmp
xchg
xor
add
add
stc
adc
add
dec
fs
hlt
add
add
loop
in
rcrl
dec
popa
add
cmpsl
clc
mov
inc
add
movsl
clc
insb
in
cmp
and
lret
cltd
add
add
out
mov
and
mov
pop
stos
cmp
clc
out
sub
inc
add
cld
jns
cmp
add
aad
add
inc
clc
inc
add
adc
add
cmc
fs
mov
sub
inc
add
jg
add
cmc
fcmovbe
pop
clc
xlat
mov
mov
clc
std
xor
add
ret
clc
sar
lret
jnp
xor
add
mov
int
jns
inc
add
jo
add
add
add
add
pop
fcoms
nop
push
push
sbb
add
fsub
clc
and
add
sar
pop
cmp
add
and
cmc
xbegin
add
add
clc
xchg
stos
bound
add
clc
adc
mov
add
enter
aam
add
mov
sbb
sahf
fistps
arpl
add
add
or
clc
push
sbb
and
add
clc
fs
ffree
clc
scas
pop
or
cltd
fsts
jnp
mov
add
mov
clc
dec
sub
icebp
mov
mov
clc
mov
jp
ficomps
sub
add
pop
addps
mov
and
push
add
add
add
enter
add
clc
loope
popf
pop
xchg
or
xchg
clc
cmpsb
clc
inc
add
ficoms
add
aad
add
add
add
add
dec
loop
imul
add
sbb
data16
mov
clc
lret
dec
dec
xlat
xabort
nop
aam
add
xchg
xor
clc
scas
fisubl
xchg
xchg
dec
inc
add
jge
adc
add
test
mov
add
popa
add
add
stos
pop
lea
add
add
jp
push
add
sbb
or
inc
clc
mov
ljmp
push
cmp
clc
sahf
sub
push
clc
movsb
clc
test
jbe
mov
cld
mov
nop
repz
add
int
push
clc
mov
cmp
out
clc
pop
and
lret
into
out
je
jecxz
adc
add
push
jno
add
addr16
inc
clc
cmp
loop
jg
jns
clc
int
mov
sbb
popa
add
cwtl
sub
push
clc
xor
add
add
push
rcrb
xor
add
es
stos
enter
loope
dec
test
cwtl
adc
add
add
lret
clc
sar
clc
cmc
jge
jae
add
mov
cmc
lock
mov
scas
push
ja
xor
add
clc
cmp
lret
sbb
lret
clc
ljmp
popf
iret
sti
inc
add
mov
test
loop
cmp
jb
add
frndint
xchg
leave
cmp
pop
sbb
dec
scas
push
cltd
mov
clc
xchg
mov
repnz
dec
pop
jmp
out
sub
clc
dec
push
scas
lcall
add
cmp
and
add
outsl
dec
repnz
xor
add
lods
movsb
clc
dec
inc
add
hlt
ret
clc
mov
stc
push
add
fwait
lahf
xchg
mov
jnp
adc
add
add
lods
mov
clc
xchg
sbb
jge
clc
dec
jmp
jge
popf
ret
clc
adc
add
jge
clc
sub
cmp
clc
inc
clc
xchg
mov
popa
add
ret
clc
push
add
push
mov
mov
clc
add
and
add
or
sarl
adc
add
lcall
test
add
adc
add
clc
fadds
clc
lret
adc
add
clc
mov
or
mov
add
add
clc
pop
aam
outsb
sar
lock
mov
pop
pop
sbb
clc
jmp
lea
add
mov
clc
pop
ja
clc
xchg
mov
clc
adc
add
add
testb
cmp
addr16
mov
add
clc
push
sar
mov
clc
movsl
clc
enter
popa
add
dec
dec
inc
add
ret
aaa
imul
add
cmp
dec
loop
cmpsl
clc
sahf
adc
jl
push
add
int3
in
push
add
sbb
add
inc
clc
sub
add
push
cld
ret
or
adc
and
add
xor
mov
cmp
cmp
aam
pop
mov
sbb
add
stos
xchg
push
add
daa
clc
dec
outsl
lea
jns
clc
pop
and
add
bound
add
adc
add
loopne
test
inc
clc
xbegin
in
pop
push
add
xchg
sub
clc
push
add
cmp
loopne
cmpsb
clc
cmp
rcr
add
clc
fcompl
clc
stos
sbb
clc
out
adc
add
push
aam
add
jge
xchg
cmp
cmp
shlb
push
jnp
clc
or
add
jecxz
xor
add
clc
mov
add
popf
push
sbb
add
clc
insl
fdivrs
push
shl
clc
daa
clc
cli
dec
pop
clc
mov
add
add
es
cmc
xchg
fcompl
out
mov
xchg
enter
cwtl
inc
add
fistpl
jl
clc
ret
clc
fwait
outsl
arpl
add
xor
add
adc
or
clc
mov
je
out
adc
or
lods
cltd
cmp
clc
push
sub
in
ss
add
clc
cld
rcrl
inc
clc
mov
mov
in
add
add
add
jg
lahf
jne
sbb
imul
add
in
sub
push
cltd
cmp
add
pop
fxch
or
frstor
fcoms
test
repnz
repz
sahf
mov
jae
add
popa
add
adc
gs
dec
jg
add
add
add
fmuls
push
push
add
bound
add
add
loop
daa
clc
stos
xabort
add
into
xchg
scas
hlt
dec
rolb
add
push
leave
fucomp
gs
jb
add
fimull
clc
dec
js
out
das
adc
xchg
adc
lods
pop
cmp
clc
out
xor
test
xchg
or
cmp
xor
add
sub
ds
das
and
mov
add
jne
iret
add
add
adc
add
inc
add
je
fwait
push
add
xchg
movsb
clc
pop
sub
mov
clc
cmp
xabort
add
stos
cmp
xchg
push
dec
gs
loop
dec
add
add
pushf
mov
sub
inc
add
adc
add
add
pop
imul
sbb
dec
sub
pop
test
bound
add
mov
add
add
xor
add
fnsetpm(287
clc
mov
clc
xor
add
clc
xbegin
add
jns
clc
pop
inc
add
adc
add
add
fcompp
das
pusha
add
xchg
sub
sub
push
mov
clc
mov
clc
jle
ds
and
add
clc
test
imul
add
fisubrl
pop
xchg
mov
aad
aaa
mov
aaa
cltd
rol
clc
pop
xor
daa
clc
push
push
clc
in
jno
add
add
cmp
stc
xchg
cmp
add
int3
ret
add
stc
rol
clc
jle
clc
xchg
or
mov
push
clc
out
addr16
xor
add
aas
mov
aas
jbe
pop
cmp
test
inc
add
push
add
lcall
clc
popf
jb
add
add
clc
cmp
jnp,pn
loop
push
pop
jbe
lods
pop
lret
pop
adc
add
clc
fists
add
pop
and
add
and
add
xor
add
pop
fdiv
cmpsb
clc
cmp
xchg
cmc
pop
pop
mov
shr
push
dec
js
add
mov
add
cmp
xchg
adc
add
jp
jb
add
dec
mov
rorl
iret
add
add
add
cmp
mov
clc
or
clc
and
add
clc
aad
add
ds
xchg
gs
leave
xchg
ss
sbb
clc
and
add
imul
mov
clc
jle
xchg
cmp
ljmp
test
dec
dec
repz
add
dec
movsl
clc
sub
dec
push
add
push
clc
outsb
jmp
clc
pop
xabort
mov
xabort
jbe
push
clc
arpl
add
js
add
ficompl
mov
push
clc
lock
rorl
cmc
xabort
in
mov
cmpsl
clc
xchg
shr
mov
pushf
aad
clc
jle
clc
mov
clc
inc
clc
es
js
push
add
dec
push
jl
clc
xor
add
add
lea
clc
fwait
movsl
clc
jl
clc
adc
add
pop
popf
mov
jl
push
clc
int
clc
cmp
add
pop
push
clc
cmp
jmp
imull
cmp
add
lret
aad
arpl
add
add
pusha
add
adc
add
hlt
cld
push
xlat
lret
mov
dec
ret
clc
mov
clc
repnz
iret
adc
add
add
mov
inc
add
jge
clc
or
clc
ds
cld
gs
xor
add
add
fildll
clc
cmp
xor
cmp
or
clc
std
hlt
icebp
aam
push
mov
out
fists
add
add
inc
clc
dec
test
clc
loop
xchg
pop
fisubrl
decl
xor
push
pop
lcall
je
add
xor
add
add
pop
mov
sub
adc
nop
jno
add
cmp
xor
add
add
jb
add
jo
add
clc
ficoml
add
sbb
clc
outsb
gs
lock
repz
add
add
lahf
xlat
push
push
add
mov
clc
ja
clc
ljmp
pop
sub
rolb
xor
js
jge
fcomps
and
add
aad
fs
iret
pop
in
xchg
push
pusha
add
and
add
clc
in
imul
add
add
cmp
push
inc
add
inc
add
xor
add
dec
jmp
push
add
lods
sub
repnz
addr16
inc
clc
mov
shll
nop
sar
jmp
test
adc
add
in
jns
popa
add
add
add
mov
nop
insb
inc
clc
ss
roll
clc
scas
push
add
mov
mov
add
lahf
daa
clc
test
sahf
sbb
add
enter
add
or
add
arpl
add
add
clc
push
adc
clc
push
outsl
leave
sbb
clc
push
stos
shrb
clc
gs
xor
add
clc
mov
cmp
cmp
inc
clc
sbb
jge
sbb
sub
add
add
dec
dec
out
pop
fcomp
outsl
xchg
imul
add
add
clc
inc
add
jp
clc
nop
jl
filds
add
push
add
jno
add
data16
js
add
sbb
sbb
push
add
mov
adc
add
scas
inc
add
dec
push
add
mov
add
mov
aas
xchg
mov
lret
mov
and
add
mov
ds
sub
in
pop
out
notb
add
inc
add
js
fidivs
add
jecxz
jnp
sbb
pop
int
xor
add
add
cmp
movsb
clc
je
add
mov
mov
dec
or
add
add
add
add
or
cmp
mov
cmc
fs
mov
clc
jge
clc
push
add
clc
add
add
add
pop
push
jl
ret
clc
mov
adc
add
add
add
add
jne
push
xabort
clc
out
pop
dec
add
es
vcvtps2pd
int
clc
movsl
clc
aas
mov
add
add
mov
add
das
adc
add
fisttpl
add
gs
jmp
dec
ret
push
es
or
xchg
data16
add
add
incb
add
repnz
bound
add
inc
add
add
cmp
xchg
jecxz
mov
popa
add
inc
add
jnp,pn
add
insb
out
and
add
xor
add
clc
sbb
add
add
clc
fidivrl
ret
cwtl
roll
add
gs
pop
mov
clc
push
cmpsb
clc
fdivrl
icebp
xor
add
ficoms
add
movsb
clc
outsb
lock
add
push
add
ret
pop
gs
mov
insl
sbb
clc
call
cmp
add
imul
mov
dec
lods
xbegin
mov
clc
lret
sbb
add
pop
das
mov
cld
clc
push
sbb
fsubs
add
push
movsl
clc
jo
add
gs
mov
hlt
jle
mov
testb
xchg
cmp
clc
sar
add
pop
push
fisttpl
ret
clc
jp
jno
add
clc
pop
or
mov
jp
cmp
stos
add
add
add
ret
add
pop
clc
test
fisubl
clc
dec
scas
mulb
add
cmp
add
test
jbe
gs
cmp
clc
outsl
and
add
clc
jne
add
push
out
out
push
add
push
clc
pop
and
in
lods
clc
inc
clc
dec
push
inc
clc
insb
cmp
aaa
mov
cmp
rorb
mov
add
jp
xchg
insb
in
ret
clc
mov
clc
mov
clc
xor
add
mov
add
jae
add
add
jp
fistps
clc
xor
add
int3
pop
mov
add
int
sbb
jmp
clc
test
loopne
jns
xchg
or
cld
scas
aaa
jns
mov
sar
add
adc
push
popf
dec
mov
cmp
ss
add
or
push
inc
clc
cmc
clc
fcoms
add
add
add
add
out
push
jnp
add
add
in
lahf
addr16
leave
inc
clc
cmpsb
clc
xor
gs
ja
clc
stos
cmp
clc
mov
add
flds
clc
dec
inc
clc
xchg
adc
test
mov
lahf
or
add
mov
in
clc
inc
add
xabort
clc
mov
mov
clc
scas
pop
jl
xor
add
xchg
adc
test
jmp
xchg
scas
cmp
xchg
ja
ds
dec
in
xor
add
daa
clc
xor
add
aas
cmp
add
mov
sar
xor
add
jmp
sub
lods
pop
pop
add
add
cld
sub
sahf
int3
push
iret
pop
pop
ljmp
aad
mov
frstor
add
xor
add
add
arpl
add
add
cmp
xbegin
push
add
pushf
lods
mov
mov
pop
clc
test
push
xor
clc
jnp
add
sbb
inc
clc
mov
test
jnp
cmc
out
inc
add
scas
int
insb
clc
fwait
inc
clc
pop
cmp
xbegin
add
clc
fcmovnu
cmp
imul
ret
cwtl
mov
jae
add
add
shll
add
decb
add
loop
and
add
or
clc
insb
mov
hlt
pop
fsubs
daa
clc
sar
inc
add
inc
add
int3
push
cli
push
xchg
push
xchg
and
add
icebp
or
xchg
adc
clc
push
dec
xchg
jne
add
mov
clc
cmpsl
clc
push
add
inc
add
xor
add
clc
vcvtps2pd
or
add
rcl
inc
add
data16
out
mov
push
idivb
clc
mov
xchg
sub
add
adc
add
leave
and
add
add
mov
add
sbb
clc
mov
es
imul
add
mov
clc
cmp
add
movsl
clc
cmp
clc
xor
push
ljmp
clc
push
add
js
add
jg
add
ljmp
add
xor
add
movsb
clc
inc
clc
in
push
push
clc
mov
clc
push
ficoms
cltd
fs
sbb
ljmp
pop
xor
loop
jge
add
arpl
add
adc
add
mov
cmp
mov
add
add
sub
daa
clc
outsl
icebp
add
add
add
int3
mov
push
add
imul
enter
cmp
cmp
jo
add
pop
in
xchg
das
dec
or
sbb
popa
add
push
jbe
clc
mov
stos
int3
add
add
cwtl
test
push
add
arpl
add
add
test
sub
cmp
clc
mov
call
push
repnz
push
dec
fisttpl
sub
add
xor
add
add
sbb
fmul
aam
clc
mov
cmpsb
clc
mov
ret
fcmovb
clc
cmp
add
clc
cmp
add
cwtl
repnz
fwait
pushf
sar
add
add
add
add
cmp
pop
pop
ret
jns
xchg
mov
xchg
and
add
gs
outsl
push
add
in
sub
add
jbe
add
adc
add
loopne
pop
aam
clc
jo
add
flds
add
add
add
test
add
add
push
daa
clc
dec
insb
jp
test
in
add
add
add
clc
rcrb
lock
incb
add
mov
add
sar
clc
xlat
push
iret
jae
add
add
int3
inc
add
sub
in
and
add
and
or
cvtdq2ps
dec
stos
and
add
clc
cmp
push
add
pushf
mov
clc
fimull
jecxz
fcmovnbe
push
add
or
imul
add
mov
clc
inc
clc
mov
mov
add
pop
inc
add
xchg
fwait
mov
mov
enter
cltd
clc
inc
clc
sti
xchg
or
aad
adc
cs
mov
add
sbb
lock
add
clc
std
ss
clc
cltd
ret
cmp
add
popf
scas
and
add
dec
and
mov
pop
fstl
mov
cmp
clc
in
pop
sar
bound
add
mul
clc
es
mov
lock
in
cmp
test
test
or
lahf
or
clc
sbb
repz
dec
vorps
jecxz
inc
clc
stos
push
js
repnz
clc
sti
and
out
out
hlt
cmp
sub
add
fiadds
add
in
xchg
or
clc
and
add
loopne
movsb
clc
std
lock
out
dec
sbb
add
add
fistps
add
dec
cmc
sub
aas
jp
add
pop
mov
clc
mov
lahf
bound
add
add
add
clc
pop
pop
rcll
clc
sbb
add
std
xchg
push
add
xabort
clc
enter
adc
add
sahf
lea
add
pop
clc
adc
add
clc
xabort
push
lahf
sbb
add
mov
sub
loopne
dec
dec
std
inc
clc
mov
enter
jmp
cwtl
mov
sub
clc
cld
ja
inc
clc
xchg
jle
add
in
icebp
outsl
add
xchg
jg
push
or
add
cltd
and
cmp
push
int
ljmp
jmp
das
adc
add
add
sub
clc
jbe
clc
adc
clc
inc
add
fisubl
clc
fisttpll
sub
daa
clc
lret
clc
nop
fildll
adc
jmp
dec
mov
xchg
jecxz
xchg
sti
sar
add
jo
add
xchg
cs
jnp
clc
sbb
and
add
push
jmp
fs
scas
into
add
test
add
add
shrb
add
cli
testl
stc
lods
loopne
movsl
clc
pushf
cli
xabort
stos
pop
xor
mov
sub
mov
push
jmp
inc
add
movsl
clc
jle
bound
add
jmp
clc
clc
leave
repnz
add
inc
add
inc
add
xabort
or
inc
add
ss
and
add
clc
push
add
call
sbb
pop
loopne
fsubrs
clc
sarb
xchg
fiadds
add
clc
jnp
sti
inc
add
inc
add
in
pop
jno
add
adc
add
lret
xabort
daa
clc
jge
pop
xchg
lods
std
fisubl
add
xchg
xchg
gs
adc
add
mov
daa
clc
cmpsl
clc
scas
repnz
clc
ret
clc
adc
lea
cmp
mov
repnz
add
jge
cmpsb
clc
xchg
insl
sbb
clc
mov
mov
push
add
mov
test
or
sahf
push
add
loop
xor
add
das
dec
mov
loope
aas
cmp
xchg
cmp
ds
movups
add
clc
mov
xchg
stos
pop
dec
mov
add
push
add
jmp
ja
gs
jg
clc
mov
add
sub
xchg
cmp
sub
adc
add
xor
add
pusha
add
jp
mov
adc
add
clc
bound
add
add
jmp
add
ja
nop
dec
or
add
je
clc
daa
clc
push
sar
sub
clc
addr16
fbstp
add
shr
jp
outsl
sbb
add
xor
adc
add
push
iret
cmpsb
clc
pop
push
mov
add
je
add
lret
and
mov
add
sarl
sbb
add
std
pushf
popa
add
jbe
clc
sar
jl
clc
mov
add
cli
add
add
sahf
testb
clc
xor
add
repz
clc
mov
add
or
clc
pop
clc
xchg
cmpsb
clc
or
test
hlt
jbe
add
sub
add
loop
adc
add
sbb
jge
jne
jns
clc
lcall
sbb
cli
iret
or
jne
jns
add
xchg
rcrb
cmc
mov
add
int3
in
jge
add
jo
add
add
gs
mov
inc
add
loop
inc
add
xor
add
hlt
sub
cmp
xor
add
mov
ret
fnstenv
and
add
adc
add
add
dec
icebp
ret
clc
ffree
clc
mov
or
add
pop
inc
add
inc
add
cmp
adc
add
add
sbb
add
sar
add
int
clc
stc
cmp
mov
clc
gs
mov
adc
add
testl
clc
int
clc
xor
enter
adc
add
ret
add
push
push
testb
add
add
cmp
clc
fcomi
mov
or
lahf
add
jp
icebp
repnz
pop
pop
test
loop
xchg
fstl
roll
add
clc
sub
clc
lret
cmc
mov
lods
icebp
fadd
clc
jl
incb
add
stos
jbe
popf
cmp
clc
out
jb
add
add
add
in
inc
clc
jg
cmp
clc
push
add
sbb
mov
add
add
faddl
imulb
clc
dec
aam
add
push
add
fnstcw
shl
cwtl
inc
add
mov
clc
fwait
in
imulb
fldt
push
dec
add
add
hlt
push
fdivl
add
lods
pop
sub
ss
lock
clc
push
xchg
sar
test
iret
fistpll
inc
add
mov
clc
sbb
add
in
sbb
adc
add
clc
push
add
addr16
lret
sub
test
inc
add
out
xabort
cmp
cmp
add
jmp
sub
add
xchg
mov
pushl
add
lea
add
clc
aam
clc
push
clc
ds
pop
int
jns
add
cmp
cmp
add
sbb
cmp
add
jecxz
adc
push
rcrl
test
in
out
sub
add
in
push
mov
clc
jbe
clc
cmp
fisubrs
pop
daa
clc
and
inc
add
jbe
clc
mov
addr16
inc
clc
mov
cmpsb
clc
jb
add
add
mov
movsb
clc
pop
lods
and
add
and
add
lahf
sbb
add
ja
clc
cli
dec
inc
clc
faddp
clc
push
inc
clc
pop
xbegin
cld
fsubp
clc
pop
clc
xbegin
aam
add
xor
add
fdiv
lods
sti
adc
add
sub
add
add
xchg
cmp
jmp
or
cltd
and
add
clc
out
xchg
or
dec
popf
call
out
ja
clc
fcoms
or
add
add
add
xor
add
xchg
mov
rol
clc
iret
test
in
sub
add
add
