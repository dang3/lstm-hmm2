xchg
jl
dec
bound
mov
insl
movsb
mov
cmpsb
icebp
sub
xchg
push
hlt
bound
mov
push
xor
jne
jae
movsb
xchg
mov
mov
or
in
add
movsb
mov
mov
push
xor
mov
sub
sahf
push
std
push
add
lcall
push
jl
adc
mov
add
fs
jnp
pop
sti
movsl
cltd
es
ds
lret
mov
jbe
pop
outsl
jmp
sub
leave
sub
jle
push
mov
or
mov
jmp
inc
lret
int
ret
mov
jae
adcl
inc
cltd
lret
stos
mov
or
dec
fcompl
lock
add
out
addb
cmp
cltd
mov
imul
mov
add
pop
cmp
leave
add
mov
mov
mov
test
sub
jg
add
mov
mov
pop
gs
add
mov
imull
cs
inc
out
xchg
add
stc
bound
mov
rcl
popf
adc
or
add
out
sub
std
imul
push
jp
cmp
fisttpll
push
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
arpl
add
stos
lods
out
add
sub
add
push
outsl
outsl
push
add
pop
adc
scas
xor
std
cli
dec
inc
add
mov
and
popf
popa
xor
cmpsb
mov
mov
add
ret
mov
loope
pop
mov
sub
pop
jmp
add
mov
add
jge
mov
jmp
scas
pop
mull
fimuls
iret
xchg
je
in
cltd
jecxz
popa
push
add
mov
sub
or
rcl
mov
sbb
add
loop
mov
test
pop
ret
pushf
cld
mov
cmp
out
dec
push
popa
hlt
lahf
icebp
mov
mov
add
pop
add
and
mov
sbb
loopne
mov
popf
fisttpll
sub
xor
mov
insb
adc
push
add
call
mov
ja
mov
out
push
jbe
push
nop
add
push
aad
ds
addr16
pop
push
mov
mov
mov
add
inc
insb
addb
mov
pop
add
add
inc
int3
test
add
lea
mov
add
mov
mov
push
push
test
jl
scas
mov
xchg
inc
mov
push
xchg
mov
mov
in
repz
je
sti
xchg
add
mov
sahf
sti
pop
imul
add
inc
icebp
jmp
add
cmp
add
repz
and
ss
jmp
add
or
lds
enter
xorl
add
je
pop
or
in
inc
aam
outsl
add
imul
inc
and
mov
lcall
add
mov
mov
aas
add
dec
push
xchg
add
ret
int3
in
test
je
pop
push
les
das
rolb
mov
push
repz
fnstcw
and
loope
rcll
mov
adc
cmp
add
jae
or
mov
mov
inc
jne
dec
sub
xchg
inc
sub
push
mov
push
xor
push
or
jmp
mov
xchg
xor
jbe
testl
add
inc
push
inc
das
sti
icebp
scas
sbb
add
jmp
add
mov
xor
push
push
aas
fcmovnbe
add
cs
mov
mov
inc
or
sahf
dec
pop
out
loop
mov
rorl
mov
repz
mov
mov
mov
add
jbe
sti
popa
and
bound
mov
add
scas
or
add
lret
rolb
mov
mov
sub
sti
lock
mov
sub
jbe
es
das
cli
inc
out
jne
popf
xchg
xchg
loop
mov
lods
jmp
or
ret
push
sbb
dec
icebp
divb
dec
mov
add
out
outsb
cltd
pop
outsl
out
push
jle
and
mov
jmp
add
mov
push
mov
rorl
pop
repnz
scas
xlat
clc
out
xchg
push
mov
orl
cmp
add
push
call
mov
std
clc
out
push
add
add
lcall
adc
xor
mov
mov
and
fisttps
add
rep
movsl
or
jge
add
imul
ret
xor
add
ret
push
xor
mov
adc
mov
xchg
lds
fsts
and
jp
inc
outsl
xchg
mov
sahf
push
add
and
fsubrs
out
nop
add
add
mov
or
mov
hlt
sbb
add
outsb
and
mov
aas
cltd
and
sub
add
mov
popa
imul
bound
mov
add
jno
push
inc
add
jg
add
dec
and
jo
mov
mov
popa
leave
push
or
add
ja
inc
icebp
pop
sbb
repnz
pop
or
insb
in
lea
imul
stos
jmp
mov
out
fsubrs
fwait
or
loope
in
popf
add
jae
fstl
rolb
mov
mov
pop
pusha
add
fs
jp
movl
out
ljmp
mov
addb
add
xlat
adc
mov
or
add
add
into
pushf
add
mov
das
sti
inc
push
ffree
mov
mov
jmp
cmp
addr16
jl
or
pop
fdivrl
mov
sbb
add
addr16
iret
rolb
mov
std
in
bound
mov
enter
sbb
out
outsb
sub
xlat
and
pop
add
add
sahf
and
mov
xor
pop
mov
inc
cs
xchg
add
and
xchg
jb
mov
addb
mov
adc
filds
or
mov
dec
add
jecxz
loop
mov
dec
jne
push
add
mov
mov
frstor
mov
add
popf
cmp
imulb
jecxz
imul
sub
in
push
es
mov
and
mov
in
jmp
push
fmull
inc
inc
add
leave
je
jns
out
mov
fstps
dec
ret
outsb
add
aaa
rolb
mov
mov
inc
test
icebp
mov
scas
mov
jbe
jne
fsts
cmp
jae
js
addb
imul
ss
cmp
arpl
inc
arpl
add
mov
pop
pop
mov
mov
mov
inc
sub
add
out
sti
inc
mov
jmp
add
mov
add
mov
dec
push
fdivl
data16
inc
inc
add
mov
out
insb
icebp
adc
dec
inc
movsb
or
xor
mov
add
mov
push
add
xor
xchg
dec
cmp
in
imul
mov
cs
cmp
rolb
mov
mov
ds
stos
out
and
adc
ja
cmp
push
xchg
rolb
mov
test
pop
or
push
mov
push
xor
mov
rolb
mov
nop
add
in
cmp
fs
xlat
outsl
sbb
add
fcompl
loop
mov
add
or
aaa
test
cmp
mov
std
push
in
test
test
inc
jo
mov
mov
lcall
imul
imul
scas
and
mov
pop
jae
add
fldl
cmpsl
inc
add
lahf
rolb
push
add
push
xchg
shrl
pop
adc
mov
rolb
sbb
ds
inc
xchg
add
add
jge
add
int
fnstenv
imul
xchg
enter
jnp
cmp
add
out
jns
in
data16
sti
pusha
add
outsb
adc
mov
dec
push
out
rolb
mov
add
out
xchg
push
lds
popf
fwait
in
aas
dec
cmp
mov
pusha
add
mov
jp
jnp
cmp
imul
xchg
lret
mov
jnp
jo
mov
pop
call
push
push
adcl
dec
ficoml
cmpsl
adc
mov
ja
ds
pusha
add
mov
addr16
fwait
aas
cld
sub
sbb
mov
jne
sbb
sbb
out
pop
push
xchg
addb
xchg
xchg
lea
cld
aaa
xor
int3
sarl
unpcklps
add
mov
sub
mov
leave
jb
mov
sbbl
mov
add
ffreep
add
dec
inc
out
and
mov
add
inc
add
cmp
add
sub
pop
loop
mov
enter
add
xchg
push
cmpsb
inc
gs
fisttpl
jmp
add
and
mov
mov
enter
push
inc
sbb
wbinvd
mov
addb
inc
jae
jo
mov
inc
mov
add
add
add
sub
popf
mov
add
jb
mov
addb
mov
mov
fisubs
dec
sub
add
push
jecxz
sub
mov
cld
jp
test
outsb
and
add
add
add
cltd
or
inc
add
mov
les
push
rolb
mov
mov
xlat
and
mov
testl
inc
adc
dec
or
dec
lret
cmpsb
push
push
jne
daa
lea
or
loopne
mov
sub
adc
inc
fisubrs
shl
mov
sahf
cltd
lret
out
sub
mov
or
mov
pusha
add
mov
cmp
or
mov
add
int3
jnp
stos
arpl
ss
add
pop
mov
push
std
dec
cltd
rolb
xor
mov
push
leave
fdivl
mov
mov
pop
xor
push
and
pop
mov
xchg
arpl
fstpt
divl
add
mov
daa
mov
addb
fcoms
jo
mov
and
mov
test
out
or
sbb
imul
sbb
pushf
and
add
add
in
mov
add
and
push
add
test
lret
std
lea
push
add
mov
add
push
loopne
mov
xor
inc
add
adc
fidivl
insb
pushf
jge
in
sar
daa
movb
mov
lock
add
add
add
mov
add
lahf
leave
cmp
stc
and
test
push
or
call
outsl
mov
mov
arpl
mov
sti
gs
inc
dec
popa
pop
add
bound
mov
scas
movsb
dec
shrl
inc
mov
out
ret
xlat
testl
fcmovnu
inc
mov
mov
sbb
push
orl
sub
lret
repz
cs
adc
add
cld
fnstsw
aad
addl
add
call
cli
add
xor
nop
add
pop
test
push
add
cmpsl
bound
mov
cmp
stc
aas
dec
rolb
mov
in
add
pusha
add
mov
mov
add
mov
jno
mov
in
cmp
dec
aaa
scas
arpl
jmp
sub
inc
imul
pop
push
js
rolb
mov
mov
jbe
add
sbb
test
insl
movsb
add
mov
imul
clc
mov
push
add
and
mov
mov
add
addl
mov
ljmp
add
mov
idivl
xchg
xor
mov
enter
imul
add
pop
out
cmc
xor
das
dec
cmpl
push
add
mov
arpl
xchg
and
or
dec
repz
sti
dec
sbb
sub
jp
lret
xor
mov
in
cmpsb
jle
adc
mov
and
jne
push
jmp
push
xchg
pusha
add
sti
sbb
scas
icebp
add
mov
popl
lretw
mov
adc
lret
push
mov
add
out
jb
mov
lcall
ljmp
add
pop
int3
mov
rolb
mov
mov
cltd
add
sub
mov
cmp
rorl
dec
pop
addb
jnp
add
enter
push
mov
mov
xor
enter
inc
nop
add
lret
lret
adc
add
aad
mov
dec
pop
push
cmp
stos
jg
add
mov
or
in
and
cmp
lahf
mov
pop
in
lahf
add
mov
push
cmp
pop
push
inc
add
and
mov
sti
adc
enter
insl
rolb
mov
jg
lods
xchg
mov
out
cmp
fs
shll
add
jge
mov
add
inc
add
loopne
mov
xor
mov
mov
xor
mov
mov
mov
adc
mov
imul
add
lret
xchg
aad
mov
push
test
mov
dec
adcl
add
add
mov
pop
lock
and
or
sahf
mov
xchg
out
ljmp
adc
icebp
das
es
jb
mov
mov
sub
inc
bound
mov
mov
mov
pop
fdivrp
xchg
pushf
jb
mov
not
rolb
mov
add
sbb
mov
mov
jae
or
xchg
icebp
cs
pop
mov
add
jae
adc
mov
or
out
fdiv
ficompl
add
xchg
in
xor
popf
in
test
popa
outsb
mov
aas
adc
pop
mov
jg
add
add
je
out
sahf
add
ds
clc
cmp
rolb
mov
cmpsl
test
add
xor
test
je
cmp
sbb
cmp
mov
mov
pop
jl
mov
adc
mov
in
xchg
jge
lock
sbb
mov
daa
add
add
inc
sub
cltd
xor
mov
mov
pop
sbb
imul
inc
add
mov
mov
dec
std
sahf
inc
push
add
std
dec
movb
cmp
aas
xor
add
jmp
je
insl
js
push
inc
addb
and
pusha
add
les
addr16
int3
lcall
jbe
jbe
sub
push
jmp
lar
mov
mov
rolb
mov
add
push
push
popl
push
orl
cmpsb
addr16
mov
lds
jns
add
mov
xchg
add
push
xor
inc
or
mov
mov
inc
stos
aas
mov
int3
and
enter
push
sub
push
pushf
stos
mov
pop
outsl
in
mov
add
aas
mov
dec
shll
fwait
scas
fcoml
loop
mov
mov
mov
sbb
mov
add
std
jb
mov
cmp
aad
rolb
mov
push
jno
cmp
in
xchg
ficoml
jecxz
add
ds
push
cmpsb
sahf
dec
push
mov
or
xorps
or
jno
mov
mov
fs
or
nop
add
cmpsb
sbb
jb
mov
adcl
jecxz
cmc
xchg
add
imul
add
enter
jb
mov
cli
fcomps
xor
push
or
xchg
lret
pusha
add
mov
add
sub
add
add
pop
pop
imul
mov
push
mov
repz
repnz
and
mov
adc
mov
mov
add
out
pop
in
in
xchg
inc
mov
out
add
ds
mov
sbb
add
cmpsl
lret
lcall
mov
je
fdiv
dec
push
ds
mov
rolb
mov
gs
sub
jecxz
ret
fildl
add
mov
jle
enter
addb
pop
mov
arpl
ss
testb
sbb
aam
add
mov
mov
or
jg
into
sahf
push
lahf
in
xchg
add
add
sub
das
pop
sub
add
sub
add
push
mov
push
iret
out
mov
addb
ret
jge
jno
out
aad
add
addr16
pop
pop
mov
sub
dec
or
js
add
push
stc
mov
popa
aad
add
add
mov
and
into
lahf
adc
scas
pusha
add
xor
cmp
add
dec
aam
std
addb
pop
fists
sbb
cwtl
cld
in
insb
mov
cmp
mov
scas
aad
jg
add
jo
mov
stc
mov
push
and
xor
mov
xor
mov
mov
add
xchg
out
xchg
and
fcomps
and
add
mov
cmp
add
mov
xor
loop
mov
enter
add
mov
pop
pop
cld
dec
sub
mov
inc
mov
sar
pop
rolb
mov
add
mov
cld
idivb
out
fisttpll
sbb
scas
xchg
repnz
mov
js
fmull
mov
xchg
add
mov
jb
mov
pop
sahf
pop
test
mov
or
add
sub
cwtl
lock
mov
cs
or
xor
into
inc
arpl
fidivl
add
mov
add
fbstp
mov
mov
xchg
std
out
test
dec
ja
add
mov
push
adc
adc
test
jbe
stos
and
mov
sub
jne
mov
add
loope
repz
or
push
xchg
mov
pop
cmp
add
dec
add
and
add
mov
add
inc
add
mov
outsl
mov
aas
cmp
xchg
jb
mov
add
fs
cwtl
lcall
add
mov
mov
mov
or
adc
inc
add
jg
pop
jecxz
movsb
add
lods
into
pop
add
int
push
or
sub
sub
add
mov
lds
add
add
adc
or
sbb
add
lahf
mov
je
icebp
movsl
and
mov
or
mov
scas
cmpsb
mov
or
sub
jae
pusha
add
add
mov
adc
mov
insl
xor
add
decl
cmp
mov
dec
orps
xor
add
cwtl
inc
inc
cmp
iret
hlt
pop
jmp
mov
mov
cmp
lods
dec
loop
mov
scas
ret
xor
cs
xchg
movsb
scas
xlat
dec
mov
cmp
lret
mov
mov
mov
stos
aad
sbb
sbb
add
push
add
iret
inc
add
sahf
add
mov
mov
clc
add
inc
testl
cmpsb
dec
push
lock
dec
pop
mov
xorl
aas
and
push
add
in
bound
mov
sub
rolb
mov
cmpsl
std
mov
jbe
pop
jmp
mov
add
popa
mov
ds
lret
push
iret
xchg
fdivrp
sub
mov
mov
mov
into
jp
in
in
add
mov
pop
lahf
les
leave
and
in
push
adc
jnp
pop
cmpsl
repnz
mov
leave
pusha
add
popa
lock
mov
lods
mov
cmp
rcl
mov
stos
rcll
lock
jg
rolb
sub
add
mov
mov
sbb
in
push
leave
shl
test
add
in
add
lods
mov
add
jl
add
lret
rolb
mov
movl
inc
cmp
stos
or
repz
mov
shll
mov
mov
xchg
jbe
add
mov
dec
xor
jge
scas
mov
jae
cmp
rol
add
and
dec
xlat
jns
je
pop
lods
inc
jecxz
inc
add
jle
mov
jmp
vsqrtps
stc
adc
mov
filds
lret
lods
cmp
pop
or
jecxz
pop
lret
fsubs
inc
add
jle
mov
mov
mov
ds
aaa
push
cs
in
sbb
out
lods
ljmp
xchg
imul
lods
std
add
sub
push
push
cmpsl
and
dec
or
lret
mov
push
inc
or
test
mov
inc
push
add
mov
movsl
fisubrs
addb
inc
pop
lods
xchg
add
cmp
mov
js
lcall
push
int
add
daa
mov
in
mov
rolb
dec
arpl
stc
adc
mov
xor
sub
mov
jge
rolb
mov
ror
add
adc
cmpsb
flds
cmp
out
ret
mov
mov
fs
imul
addb
or
add
mov
roll
js
xor
or
mov
jmp
out
paddusw
mov
nop
add
dec
pop
sbb
mov
fists
fidivrs
adc
mov
cmc
inc
cmp
rolb
mov
add
out
mov
setbe
and
mov
mov
inc
cmpl
ret
mov
pushf
nop
add
inc
add
jle
cmc
ret
push
add
repnz
mov
adc
mov
lret
sub
jle
hlt
inc
add
mov
pop
jb
mov
add
lret
stos
bound
mov
les
jbe
xchg
pop
iret
test
into
cld
add
push
cmp
dec
xchg
add
add
jns
in
or
popa
push
out
push
xor
and
mov
xchg
dec
data16
sti
adc
add
pusha
add
js
repnz
add
pushf
je
subl
mov
lock
mov
cs
add
push
lds
jle
push
cli
scas
pusha
add
add
lahf
stc
jo
mov
insl
daa
fdivrp
mov
mov
clc
jmp
mov
xchg
add
in
push
add
add
add
mov
add
mov
mov
and
mov
lcall
push
xchg
pop
and
dec
call
addb
addr16
std
daa
xchg
in
add
dec
dec
outsl
mov
outsl
sbb
cwtl
jl
add
push
out
in
pop
fwait
js
add
jp
add
enter
xchg
fwait
mov
cs
or
jb
mov
rolb
mov
add
mov
int3
rolb
mov
movsl
mov
and
adc
sbb
cmp
ret
loopew
imul
inc
mov
pop
imul
lock
adc
mov
add
dec
inc
pop
aad
int
addr16
lcall
push
inc
ret
fsubl
add
outsl
dec
nop
add
nop
add
dec
std
arpl
jge
add
add
jnp
cmp
mov
add
mov
jmp
sub
popl
out
in
sub
insl
cmp
test
lfs
mov
in
jg
loopne
mov
xchg
ret
push
xor
mov
add
mov
pop
rolb
adc
jns
aad
or
shr
enter
sbb
stos
stos
xchg
mov
addb
or
jp
add
jg
add
jmp
dec
scas
imul
mov
dec
les
jmp
add
add
in
dec
fmuls
inc
mov
sbb
frstor
push
push
mov
mov
inc
xchg
mov
add
mov
leave
jns
sbb
xor
jl
or
add
pop
or
mov
add
add
lcall
add
sbb
add
add
and
xchg
stos
in
add
add
fldcw
cltd
cmp
leave
mov
cmpsb
inc
jns
add
add
mov
add
mov
mov
mov
mov
and
aaa
rolb
cmp
fcomp
pusha
add
add
xor
jno
add
rolb
jecxz
cmp
add
adc
js
sbb
mov
aaa
adc
cmp
movsl
cmpsb
add
pushf
out
inc
stos
mov
in
lock
jmp
add
stos
test
out
test
add
arpl
add
mov
mov
sbb
add
and
add
sti
mov
xchg
pop
sub
in
mov
mov
dec
xor
push
repz
xor
mov
pushf
out
mov
mov
out
mov
mov
cmc
sti
loopne
mov
add
add
inc
jo
mov
xchg
dec
outsb
mov
and
mov
mov
mov
xor
xor
mov
xchg
add
xchg
addl
pop
jae
scas
push
add
or
add
fsub
popa
roll
sbb
pop
aam
insl
pop
sbb
mov
add
mov
cmp
mov
movsb
sbb
dec
pop
jae
loopne
mov
push
add
cmc
xlat
pop
sub
add
add
and
imul
into
sub
xchg
add
mov
into
pop
mov
mov
aas
pop
addb
add
mov
add
push
and
mov
mov
rolb
int
dec
mov
and
mov
jl
add
dec
scas
dec
es
das
fbld
add
add
add
mov
mov
push
call
add
push
cmp
enter
mov
mov
mov
mov
inc
inc
adc
mov
mov
jae
add
mov
jp
xor
mov
and
scas
pushf
jp
sbb
adc
mov
xor
cmpsb
add
mov
mov
loop
mov
in
out
pushf
aaa
sti
xchg
shrl
mov
addb
adc
push
xor
mov
cwtl
aas
addb
lds
popa
pushf
inc
and
xchg
cltd
ss
ds
dec
out
xchg
insb
cmp
fsubr
jge
ret
not
and
int
cmc
outsb
int3
int
xor
out
mov
mov
dec
jecxz
push
add
add
insl
dec
mov
ficoml
mov
fadds
mov
mov
adc
testl
insl
rcrl
mov
add
test
dec
and
mov
add
push
xchg
xchg
mov
xor
cli
push
xchg
inc
loope
aas
add
dec
mov
add
dec
ljmp
addb
insb
add
add
sub
add
stos
and
test
cld
and
mov
sbb
mov
imul
aam
popf
jle
ds
sbb
adc
mov
adc
mov
out
call
pop
xchg
cmc
mov
adc
test
addr16
mov
stos
test
dec
sbbl
stc
sub
add
cwtl
push
lret
mov
sub
insl
lret
dec
cmc
iret
pusha
add
fwait
sub
out
sub
lock
add
jp
or
inc
test
xchg
add
fs
punpckhdq
adc
add
iret
insl
ret
dec
pusha
add
popf
mov
add
mov
std
add
mov
mov
mov
stos
and
out
add
mov
cltd
mov
add
test
push
inc
jbe
in
test
rolb
mov
inc
cltd
inc
push
loop
mov
pop
push
shll
fimull
push
or
push
and
mov
dec
xlat
test
sti
mov
cmp
mov
es
mov
mov
mov
je
repnz
dec
push
outsb
fisttps
dec
into
mov
mov
mov
pop
rolb
mov
into
jle
xor
sub
add
mov
mov
mov
fdivrl
inc
leave
sti
dec
imul
addb
xor
or
inc
ja
jecxz
into
mov
jge
mov
or
mov
add
pop
sbb
mov
ss
mov
adc
mov
add
ss
mov
mov
out
clc
pop
fs
mov
bound
mov
adc
pop
cmpsl
adc
jecxz
add
push
les
xchg
ja
xor
clc
mov
arpl
cmp
int3
or
sbb
cltd
addb
cmc
out
push
and
mov
in
movsb
cmp
sbb
jl
fistpl
xchg
outsl
push
xlat
sbb
add
mov
xor
cmp
push
add
jo
mov
mov
addr16
iret
mov
mov
stos
test
lcall
pop
lods
fildl
add
mov
scas
push
dec
cs
push
jae
imulb
sahf
inc
int3
lret
ss
add
mov
adc
xchg
loope
jno
add
dec
cmpsl
mov
add
mov
sub
addb
cwtl
xchg
pop
jnp
jmp
pop
ss
loopne
mov
rolb
mov
adc
mov
mov
mov
nop
add
mov
call
jne
cld
pop
testl
mov
mov
add
xor
jl
dec
jmp
mov
mov
test
and
or
mov
insb
push
idiv
scas
sbb
jge
or
out
mov
add
mov
icebp
mov
mov
inc
ljmp
pop
aaa
fsubrs
jnp
add
push
mov
sub
lods
or
les
add
sti
out
dec
movsl
pushl
add
xor
mov
add
jb
mov
push
in
cld
jg
jnp
add
ja
sub
repnz
fisubrl
sbb
inc
sub
in
mov
mov
and
add
test
lret
mov
sub
sahf
push
rol
mov
cmp
leave
pop
cmpsb
cs
add
and
push
dec
sub
stos
mov
jmp
and
mov
das
jmp
xor
mov
ljmp
mov
add
sbb
rolb
mov
pop
dec
imul
xor
push
hlt
fstpl
scas
sub
adc
mov
aaa
test
hlt
jp
add
mov
sbb
fcomp
jecxz
mov
popa
scas
ja
fsubrs
xchg
in
std
adc
jmp
inc
xchg
sbb
and
sahf
push
xchg
push
stos
sub
data16
in
inc
add
cltd
insl
mov
xor
addb
nop
add
cmp
xchg
call
fisttpll
call
ret
pushf
fcomip
add
mov
sub
icebp
add
sub
push
sub
outsl
je
pop
or
or
mov
mov
dec
inc
sbbl
add
fmuls
push
addb
pop
fdivrs
popa
lret
fldcw
push
pop
fsubl
sub
scas
es
loop
mov
cld
repz
out
mov
sbbl
mov
sti
adc
out
leave
push
cmp
inc
xlat
pop
pop
dec
mov
pop
lahf
pop
inc
paddq
fwait
rorl
ja
test
add
mov
movsl
nop
add
adc
mov
jmp
cmpsl
dec
fstl
add
mov
movsb
ds
dec
cmpsb
and
mov
dec
fdivl
mov
add
std
xor
add
loop,pt
mov
jecxz
add
les
push
lret
and
dec
or
add
dec
std
and
add
cmpsb
or
or
add
add
ja
leave
pop
scas
xlat
ret
add
mov
out
push
cmp
popf
mov
fisubrs
pop
lds
add
push
pusha
add
mov
jmp
fstps
nop
add
mov
into
push
mov
adc
mov
inc
mov
mov
ss
mov
add
lds
xchg
pop
rcll
loop
mov
add
mov
cmp
jb
mov
add
xchg
sbb
std
out
sbb
cmp
movsl
pop
lret
sub
lcall
mov
xchg
insb
fwait
and
mov
fcompl
aam
sub
dec
data16
fidivs
mov
inc
xor
mov
dec
add
js
out
movsl
jnp
push
cmpsl
xor
add
adc
cmpsl
fwait
jl
and
mov
stos
inc
aam
lock
adc
mov
dec
or
cmp
ljmp
nop
add
mov
add
lods
cwtl
fsubrp
jg
sbb
pusha
add
add
mov
push
shrl
and
xchg
push
jno
mov
jno
repz
ja
cmp
stos
cmp
cld
aam
add
add
jg
push
dec
loope
repz
mov
cmp
add
mov
pop
push
jae
mov
test
mov
aam
jg
subl
sub
sub
clc
xchg
jl
cmp
dec
addps
pop
movsb
jecxz
mov
and
mov
xchg
mov
insl
cmp
loopne
mov
dec
cmp
pop
in
in
pop
fs
fstl
add
xchg
lds
adc
mov
push
add
mov
add
sti
jo
mov
push
iret
mov
add
push
adc
mov
xchg
add
out
xchg
add
dec
mov
mov
jo
mov
sbb
xor
int
shll
jg
inc
push
fs
sbb
sub
add
mov
loop
mov
or
sarl
rolb
ret
xchg
push
xor
sub
mov
pop
cltd
push
mov
add
inc
add
mov
aad
jl
dec
push
or
lret
or
cmp
insb
lock
add
xchg
add
add
add
subl
add
mov
inc
add
xor
mov
push
mov
mov
mov
sbb
jno
in
pop
jae
add
mov
and
data16
scas
movsb
or
add
add
sbb
add
popa
cli
mov
mov
add
cltd
adc
mov
mov
stos
lods
mov
mov
icebp
outsl
testb
fs
mov
jae
pop
mov
sti
btr
lods
xchg
jns
cltd
xchg
xor
fcom
add
mov
sub
inc
jne
fmuls
cltd
and
mov
in
insb
or
inc
lods
cs
xchg
add
xchg
dec
dec
jmp
or
cli
xchg
add
dec
movsb
in
repnz
mov
adc
mov
adc
mov
movsl
push
sbb
movsb
les
stos
repz
frstor
sub
add
add
mov
cmp
mov
push
xchg
jge
push
add
mov
xor
movntps
or
pop
lods
sub
sbb
lods
add
mov
add
into
mov
cld
fs
jge
imul
sbb
mov
jnp
inc
sub
or
add
xchg
sub
aad
js
adc
mov
push
sbb
add
mov
or
fsts
call
push
add
or
dec
xchg
cmpsb
mov
xchg
hlt
dec
push
mov
add
xor
jle
and
or
sub
je
push
in
sti
or
add
fsubrp
sub
mov
cmp
das
sub
popa
jns
add
mov
add
fimuls
add
jp
mov
add
sarl
mov
mov
inc
sahf
arpl
and
mov
mov
sbb
mov
mov
call
pushf
cld
or
movsl
or
aam
add
mov
fucomip
dec
std
mov
mov
and
mov
out
xchg
add
jge
xchg
icebp
pop
push
lahf
pop
jbe
mov
inc
jnp
jns
fidivl
pop
jle
add
repz
xchg
xchg
lcall
mov
scas
xor
shll
cmp
movsb
cs
lret
add
mov
mov
cwtl
fdivrs
es
js
aas
rolb
mov
adc
mov
add
mov
dec
add
icebp
stos
pushf
mov
jle
add
xlat
stos
test
fisubrs
or
mov
sbb
sbb
xchg
push
movsb
inc
adc
xor
mov
das
scas
mov
test
jnp
add
dec
insb
fstpt
test
cltd
push
daa
popf
jecxz
mov
xchg
cli
jle
jmp
mov
xor
add
sub
arpl
inc
mov
das
cmc
ss
jae
leave
sti
repnz
add
dec
jp
shll
xchg
sub
out
movsb
dec
hlt
jle
add
jmp
cmp
stc
xchg
lods
mov
scas
cs
xchg
cmp
stc
pop
jle
push
add
ljmp
icebp
inc
repnz
jnp
sti
xlat
ja
add
mov
add
in
sbb
loop
mov
inc
add
mov
mov
add
pop
jmp
add
mov
out
ljmp
icebp
jb
mov
scas
xchg
add
push
incb
rolb
mov
dec
or
out
scas
push
jmp
mov
jb
mov
adc
mov
adc
xlat
sbb
mov
jns
and
mov
rolb
mov
mov
push
push
jns
push
sub
add
mov
mov
mov
clc
int
jne
push
fisubrl
repnz
mov
xor
test
adc
cmp
int
add
pop
xor
cmp
or
sahf
xor
mov
mov
pop
popf
imulb
fnstcw
lahf
es
rorl
add
stos
je
hlt
mov
fs
push
add
mov
mov
out
mov
mov
les
hlt
ljmp
in
push
add
cmp
adc
add
push
test
aaa
vpunpckhwd
or
inc
mov
mov
and
cmp
add
xchg
add
jmp
mov
imul
mov
and
out
adc
mov
fisttpl
mov
pop
pop
cmp
push
jbe
add
faddl
mov
in
pop
divb
xchg
cwtl
dec
std
fwait
into
loopne
mov
sub
push
add
xor
arpl
mov
jle
add
mov
sbb
add
adc
mov
pusha
add
out
leave
call
loope
xchg
mov
cwtl
leave
or
cmp
cmpsb
lods
pop
pop
bound
mov
lahf
sti
hlt
pop
lds
imul
jp
mov
dec
mov
insl
xor
inc
imull
jge
jg
push
add
frstor
outsl
into
fisubrs
sbb
hlt
xchg
and
mov
adc
das
ss
add
repz
lds
les
add
mov
add
mov
sub
das
sub
add
dec
cli
lret
sub
adc
mov
add
out
sbb
xchg
fwait
sub
mov
sub
sub
dec
xlat
lcall
add
fbld
xchg
inc
outsl
sti
subl
loopne
mov
add
cmp
fwait
ret
fld
and
lock
inc
mov
sti
ret
dec
mov
mov
xlat
adcl
inc
add
mov
iret
loopne
mov
rolb
mov
mov
add
mov
jp
mov
add
mov
subl
clc
js
xor
push
ret
cmc
inc
daa
push
or
add
mov
add
dec
popf
daa
mov
jge
or
mov
data16
jl
inc
add
pop
enter
jnp
ljmp
add
add
enter
or
push
ljmp
test
iret
das
adc
mov
or
mov
mov
int3
fistps
add
std
mov
call
cmpsl
cmp
cld
dec
popf
lret
xor
add
fisubrs
jno
push
ljmp
into
test
mov
adc
mov
mov
sbb
cmp
cmp
add
insb
es
mov
cltd
in
test
push
pop
lods
jnp
and
das
movsb
adc
lds
mov
xor
mov
mov
add
push
sub
out
and
mov
les
out
add
add
mov
mov
jge
jae
insb
aam
cld
movsl
push
add
add
loope
cs
call
lahf
shrl
sub
xchg
add
add
daa
sbb
outsl
cwtl
or
dec
repnz
repz
add
mov
cmpsl
aas
daa
pop
jg
jp
adcl
xor
cmp
adc
cmp
add
push
pusha
add
push
test
sub
mov
add
xchg
adc
mov
add
add
lahf
cltd
mov
mov
add
mov
ja
mov
lcall
mov
arpl
sahf
inc
pop
mov
mov
add
mov
leave
cmp
add
test
sbb
pop
push
addb
hlt
xor
add
and
or
mov
mov
mov
sub
or
div
add
mov
inc
fcomp
lret
sub
add
sbb
add
cwtl
movsb
inc
pushf
fistps
loopne
mov
movsl
iret
loope
sbb
mov
jge
stos
iret
push
and
and
or
mov
iret
adc
cmp
fldenv
mov
mov
iret
lds
sbbl
push
mov
rolb
mov
clc
pushf
jo
mov
arpl
std
and
stc
ljmp
add
sbbl
jmp
addb
add
xor
mov
mov
mov
inc
add
sub
movsb
cmp
dec
inc
add
cmp
loopne
mov
popa
mov
roll
add
and
add
repz
cld
push
add
mov
cmpsl
inc
add
adc
jmp
sbb
pop
mov
mov
add
inc
les
popa
jb
mov
incl
dec
xlat
add
add
xor
mov
pop
test
aaa
pop
enter
dec
lret
push
das
pushf
jle
push
add
mov
sbb
mov
test
lret
pop
pushf
push
je
nop
add
lea
rolb
mov
add
add
sub
add
cwtl
ja
add
sar
pop
fwait
test
inc
add
xchg
sub
adc
ret
pushf
ret
mov
mov
add
jno
xchg
add
adc
add
xor
mov
add
lret
ret
jno
jb
mov
mov
stos
ret
scas
into
test
inc
xor
loopne
mov
lea
aam
fs
lds
loop
mov
fsubrs
add
add
add
in
test
cmp
add
add
mov
out
jl
add
adc
mov
lods
dec
addb
xor
mov
xlat
and
inc
test
aas
fnsave
push
add
out
add
inc
cmp
mov
add
mov
div
or
mov
xor
fisubrl
loopne
mov
jp
inc
cmp
fucomip
movsb
test
mov
add
lock
fistl
test
repnz
add
mov
stc
sub
aad
pop
push
jno
scas
imul
jmp
xor
sub
mov
psllq
xchg
in
push
in
fsubrs
fwait
cs
pop
and
push
add
add
bound
mov
mov
shll
adc
mov
cmp
xor
inc
mov
je
add
cmp
add
mov
xor
mov
mov
lods
hlt
add
mov
mov
inc
add
adc
mov
test
add
push
shr
mov
sti
mov
add
push
inc
inc
mov
mov
push
jb
mov
jae
xor
mov
and
mov
call
push
xchg
mov
mov
jmp
popa
add
xor
pop
mov
andl
mov
cmp
repnz
mov
add
add
cwtl
inc
popf
pushf
ret
dec
pop
mov
add
mov
add
idivb
or
adc
mov
xor
mov
xchg
xchg
inc
hlt
ss
xchg
xor
das
pop
sbb
mov
adc
mov
cwtl
pop
lret
mov
rcll
xchg
cli
lret
xor
dec
mov
jge
fs
mov
sbb
mov
add
cmpsb
int3
pusha
add
das
adc
mov
jb
mov
les
addr16
lret
or
mov
push
jns
xchg
add
or
push
aas
pusha
add
pop
lods
jecxz
pop
call
mov
jle
sbb
pop
out
shl
fldt
jge
iret
pop
fildl
add
add
mov
lahf
push
and
mov
mov
scas
push
enter
mov
xchg
dec
jl
and
add
mov
add
mov
dec
icebp
leave
xchg
dec
imul
jl
aam
loope
mov
push
bound
mov
mov
add
jp
pop
pop
jb
mov
cmp
add
adc
mov
into
push
in
sbb
dec
pop
icebp
mov
push
pop
sub
add
rolb
fwait
insl
sbb
mov
add
mov
incb
mov
push
sub
stc
js
pop
mov
mov
cmp
cwtl
enter
jns
add
add
roll
add
mov
add
jns
add
add
mov
int3
das
das
rcll
loope
jl
mov
and
or
mov
mov
add
scas
pop
movsb
stos
cmp
dec
loopne
mov
lods
mov
lock
sbb
mov
jo
mov
mov
js
add
daa
popf
out
push
in
adc
addb
out
or
add
arpl
push
cld
rcll
sub
add
sti
clc
sub
outsl
xor
dec
testl
push
xor
xor
or
jb
mov
add
mull
add
add
mov
lods
xchg
mov
pop
xor
repnz
enter
cmpsb
push
cmp
test
mov
stos
dec
inc
sub
fbld
pop
xchg
int
rolb
mov
add
mov
mov
leave
das
push
mov
mov
cltd
xchg
add
andl
mov
fisttpl
jecxz
pop
pop
jecxz
lahf
out
ljmp
or
cmp
fs
hlt
stos
iret
leave
or
add
xor
or
mov
dec
outsb
push
xchg
sbb
loopne
mov
dec
xchg
adc
mov
mov
add
add
xor
mov
mov
mov
fcomi
add
daa
test
int3
addb
jnp
dec
adc
aam
xchg
rolb
mov
add
cmp
mov
adc
xor
rolb
mov
mov
cmp
rolb
mov
and
jae
pop
push
in
test
inc
leave
out
cmp
add
out
out
pop
addb
xchg
popa
push
add
and
mov
add
and
mov
mov
add
or
push
pop
sbb
cmpsl
adc
mov
gs
mov
sbb
test
insb
out
in
inc
add
out
jp
add
add
mov
mov
jmp
add
mov
testb
jae
divps
test
add
pop
xor
mov
mov
add
mov
mov
fnstenv
mov
stos
adc
out
test
mov
out
pop
in
gs
es
and
loope
xlat
ret
icebp
aad
jo
mov
add
mov
sbbl
cli
pop
jnp
xchg
mov
mov
push
repz
movsl
negl
adc
mov
add
xchg
sahf
mov
loop
mov
cmpsb
add
or
add
mov
xchg
push
arpl
fcmovne
jne
jnp
aad
in
jl
xor
mov
xor
leave
jnp
jne
mov
xchg
or
mov
testl
adc
mov
add
mov
push
add
mov
clc
shrl
mov
out
xchg
or
ffreep
xchg
aas
sub
inc
inc
pop
adc
mov
repz
mov
add
inc
add
add
add
xor
es
idivl
addb
es
shll
scas
cmc
jnp
ja
add
add
add
mov
add
add
mov
xchg
sbb
mov
adc
insl
out
mov
mov
aad
jne
bound
mov
mov
mov
hlt
xor
mov
out
push
inc
sbb
inc
orl
repz
mov
mov
push
out
xchg
les
add
or
dec
mov
cmp
imul
aas
or
add
pusha
add
ss
jo
mov
jno
inc
pop
loope
ds
sbb
aaa
mov
mov
mov
mov
add
in
sbb
sbb
add
mov
inc
add
add
add
loopne
mov
sbb
mov
idiv
fidivrs
mov
imul
popf
rolb
add
mov
xchg
cmp
push
in
arpl
mov
dec
ret
lods
inc
mov
add
cmp
pop
ss
daa
mov
bound
mov
mov
or
jmp
or
icebp
inc
ret
push
pop
lods
out
rolb
mov
mov
lahf
mov
mov
jp
mov
es
mov
push
std
jg
and
mov
mov
jno
ja
sub
cmp
add
fcoml
and
mov
mov
lret
mov
add
shll
cwtl
pop
and
lods
or
aaa
mov
mov
js
cmp
add
fsubrl
mov
mov
pop
mov
jne
add
inc
add
jb
mov
jnp
rolb
mov
add
pop
cwtl
fistpl
adc
mov
xor
sbb
test
mov
lods
aaa
xlat
out
jo
mov
outsl
mov
imul
sub
icebp
or
jmp
lcall
les
ds
jle
pop
mov
loopne
mov
or
and
mov
add
mov
js
lret
hlt
inc
add
add
rolb
mov
push
mov
mov
xor
mov
int
insb
iret
dec
addb
mov
adcl
aam
mov
add
xchg
inc
mov
cmp
or
add
aaa
inc
mov
lods
mov
dec
and
lret
lock
aas
stos
push
or
add
mov
leave
jge
idiv
push
test
and
mov
mov
cltd
sbb
and
dec
cmp
sbb
mov
push
add
pop
loope
aaa
aas
idivb
mov
and
mov
add
mov
add
inc
cwtl
aas
xor
dec
mov
cmp
pop
push
add
push
jne
or
add
push
pop
push
mov
add
mov
inc
add
aaa
fsubrl
arpl
add
inc
add
scas
gs
jecxz
addr16
leave
xchg
xchg
dec
loop
mov
add
imul
clc
pop
mov
das
shll
jne
sarl
sbb
xchg
rcrl
std
rcll
fs
add
pop
cmpsl
sub
pop
xor
setle
ret
adc
movaps
add
mov
jb
mov
mov
mov
jmp
loopne
mov
fcmovnu
jl
add
cmp
mov
les
fstl
hlt
pop
cmp
addb
fdivs
mov
daa
lret
int3
xor
mov
add
ds
and
mov
mov
mov
jp
test
push
aaa
iret
cmpsl
dec
add
mov
add
sub
mov
add
repz
fxch
hlt
mov
sbb
loopne
mov
ds
addb
cmpsb
imul
sbb
add
fisttpl
test
pop
stos
bound
mov
inc
les
inc
add
adc
daa
jne
sbb
mov
mov
mov
aad
enter
mov
mov
xchg
push
or
mov
jns
les
es
add
xchg
ljmp
push
aam
mov
mov
negl
mov
adc
das
pop
pop
jo
mov
fsts
je
dec
loope
add
sahf
mov
pop
pop
jns
aam
dec
pop
and
cmp
dec
addb
or
cltd
and
mov
and
cmc
out
or
sarl
add
push
lock
push
push
stc
addb
adc
sbb
lcall
mov
cmp
jb
mov
add
add
and
mov
sub
add
mov
fisubl
pop
cmp
add
mov
add
in
inc
inc
add
mov
mov
dec
cld
loope
cmpl
mov
push
in
push
push
fdivr
mov
mov
mov
push
push
ficoml
insl
das
aas
fwait
out
cs
popa
inc
xor
cld
xchg
add
lock
mov
mov
bound
mov
and
es
or
sub
mov
mov
rolb
mov
mov
incl
int3
sbb
mov
jmp
movsl
cmp
rolb
mov
movsl
not
add
add
mov
daa
mov
add
mov
out
jo
mov
sub
sbb
scas
jb
mov
outsl
pop
mov
push
adc
bound
mov
inc
and
mov
jnp
add
jle
sub
add
ret
sbb
and
mov
fdivrl
add
imul
les
out
hlt
inc
inc
push
outsl
lret
lret
add
dec
dec
xor
add
sub
add
mov
jp
lret
mov
cltd
push
movsbl
icebp
dec
loope
add
out
add
adc
mov
lock
insl
cmp
pushf
mov
cld
fnstenv
dec
inc
add
mov
int
mov
mov
inc
test
out
add
push
loopne
mov
add
andl
mov
mov
in
in
push
lods
cmp
lods
and
mov
add
dec
add
mov
xor
cs
inc
pop
sub
cmp
leave
roll
adc
mov
ret
sbb
call
clc
test
add
mov
sub
jns
nop
add
mov
daa
sahf
jb
mov
mov
add
xor
add
insl
adc
lea
ljmp
or
clc
rolb
xor
add
push
or
jne
push
pop
inc
lcall
ret
push
add
add
insl
outsl
addb
push
add
mov
sbb
add
jnp
add
mov
jg
dec
in
jbe
repnz
lods
jg
jnp
enter
outsb
sbb
jns
ss
nop
add
mov
das
sub
mov
dec
ret
test
mov
xchg
lock
mov
rolb
cmp
mov
or
inc
add
mov
mov
jo
mov
fdiv
stos
out
xchg
inc
call
mov
hlt
outsl
repz
add
add
jnp
imul
and
mov
adc
mov
les
mov
pop
insb
jp
aas
fnstsw
and
mov
mov
mov
mov
mov
ss
cmp
in
add
imul
mov
mov
cwtl
adc
xchg
pusha
add
xchg
scas
loop
mov
cltd
rolb
mov
jmp
mov
sub
add
mov
add
mov
mov
shrl
jnp
sbb
mov
mov
add
mov
cmp
add
xchg
add
mov
movsb
cld
sahf
roll
or
loope
add
mov
orl
mov
mov
jnp
push
popa
sub
add
add
add
inc
mov
jb
mov
mov
imul
incb
lret
xor
and
lcall
xor
push
dec
inc
add
jb
mov
add
add
pushf
incl
data16
icebp
test
add
inc
jecxz
movsb
sbb
clc
sub
pushf
jb
mov
hlt
lock
fldenv
shll
pusha
add
dec
mov
ja
testb
xchg
inc
add
xchg
arpl
pop
or
or
sub
testl
push
or
mov
jmp
add
mov
add
iret
or
push
fsubl
iret
arpl
add
pop
push
stos
cmp
add
je
add
mov
add
fildl
outsl
orl
add
mov
and
lahf
sub
rolb
mov
add
xchg
or
sahf
jecxz
fidivrs
jbe
cltd
jle
int3
mov
enter
rolb
mov
mov
jno
sbb
dec
cli
pop
inc
mov
and
mov
arpl
stc
push
add
mov
stos
pop
pop
adc
mov
pop
shll
sub
ja
push
mov
mov
jb
mov
xlat
cmp
rolb
mov
mov
data16
in
add
sub
fwait
dec
or
aam
lods
iret
add
add
pop
icebp
test
add
push
sub
xor
mov
inc
add
rolb
in
out
or
sbb
add
js
ja
add
jl
into
push
popa
loop
mov
fdivrs
cli
dec
jle
nop
add
sarl
inc
add
inc
stc
dec
in
stos
inc
or
push
jp
lock
mov
aaa
and
out
call
ds
loope
fadds
es
push
aaa
mov
mov
enter
mov
clc
pop
adc
mov
mov
je
fstps
es
in
jnp
xchg
fstps
add
adc
fldcw
push
add
mov
int3
sub
imul
mov
inc
frstor
sbb
movsl
xor
dec
xchg
dec
push
loope
adc
add
lds
add
mov
sub
pushf
stos
addb
push
fbstp
add
pop
xchg
sti
rorl
xchg
std
shll
dec
adcl
mov
nop
add
add
incb
leave
jmp
add
add
mov
mov
dec
push
sti
and
mov
add
mov
ret
or
mov
mov
jno
mov
push
xlat
mov
mov
and
and
insl
in
cmc
push
mov
jecxz
jl
sahf
cmp
rolb
mov
addb
je
adc
add
pop
mov
xchg
jae
decb
adc
leave
mov
iret
pop
cmp
add
sub
adc
mov
sbb
xor
sub
dec
lwpins
mov
ljmp
shll
and
mov
inc
mov
ljmp
mov
push
in
jge
nop
add
adc
mov
adc
test
repnz
push
add
xor
push
lret
mov
pop
inc
movsl
adc
add
add
cltd
add
mov
cwtl
push
shrl
repnz
cmp
add
in
push
rolb
mov
mov
fwait
dec
xor
mov
cmp
xor
mov
movsl
sbb
test
pop
sti
and
pop
or
push
bound
mov
or
add
pop
addb
int
nop
add
mulb
scas
fldcw
and
add
adc
mov
add
lret
popf
xor
mov
fisubl
xlat
enter
jg
into
add
cmp
jb
mov
mov
popf
or
mov
addb
ret
sbb
add
mov
rolb
mov
add
hlt
xor
add
xor
hlt
cmp
arpl
cld
out
push
pop
scas
out
cld
sub
sub
lret
mov
outsb
cmc
mov
mov
mov
push
out
call
mov
add
add
repnz
jle
pop
mov
cmp
rolb
cmp
int3
or
mov
mov
add
rcrl
mov
add
cmp
in
lea
mov
imul
mov
call
and
mov
lds
dec
mov
insl
sbb
std
test
stos
inc
add
jb
mov
rolb
cmp
pop
dec
adc
imul
mov
cmp
test
add
cmp
xor
jle
xor
jg
inc
int3
sbb
or
ret
inc
add
out
dec
add
adc
mov
mov
les
rolb
mov
push
xor
mov
add
test
neg
adc
rcll
lret
je
pop
or
cmp
pushf
sub
outsb
sbb
int
push
insl
outsb
faddp
add
mov
add
or
jmp
adc
mov
adc
mov
add
mov
mov
rolb
mov
add
outsb
call
add
or
pushf
js
out
and
mov
mov
xchg
fs
cmp
add
adc
mov
shrl
pop
imul
mov
jnp
out
mulb
test
and
inc
loope
or
mov
ficomps
movsb
xchg
inc
adc
mov
adc
mov
das
div
add
icebp
not
add
jnp
mov
add
movsl
or
mov
mov
inc
add
hlt
ja
lds
add
loop
mov
hlt
hlt
aaa
push
add
add
fidivrl
sbb
adc
jge
add
mov
cmpsb
adc
andl
ret
sahf
les
inc
xor
mov
lcall
inc
rorl
dec
and
mov
int
mov
add
pop
cld
mov
sub
add
stc
push
dec
sbb
mov
mov
lods
in
jo
mov
popa
dec
cmp
add
mov
add
pushf
or
add
pop
jno
fs
pop
push
mov
add
push
cs
push
xchg
repnz
inc
add
cltd
loope
fiaddl
fcoms
push
rolb
or
add
scas
push
and
mov
sbb
mov
mov
push
add
in
mov
jle
mov
mov
sub
push
pop
scas
push
dec
or
push
mov
jae
repnz
add
lea
mov
out
mov
rorl
mov
fdivs
rolb
xor
aam
mov
and
add
mov
push
mov
push
fdivrs
mov
mov
cwtl
js
addr16
add
mov
xor
mov
dec
mov
cmp
std
idivb
push
push
cltd
mov
inc
jmp
out
adc
dec
cmpsl
hlt
clc
xor
mov
pop
mov
add
mov
xor
sbb
dec
scas
aas
push
lcall
ja
popf
mov
mov
or
je
adc
ss
add
add
and
fs
outsb
push
mov
jmp
clc
in
pop
insb
ja
sub
sub
retw
ror
xor
mov
sbb
or
add
pop
sub
add
push
sub
add
outsl
movsl
cmp
mov
add
pop
jns
pop
push
hlt
push
jg
add
ret
jg
add
test
inc
xchg
in
mov
mov
inc
sbb
push
add
xchg
and
adc
mov
xor
fwait
daa
sbb
ret
sbb
inc
add
sub
add
sbb
mov
aas
pop
and
mov
test
fists
nop
add
loopne
mov
add
ficoml
mov
jmp
add
mov
jge
add
mov
neg
fsub
add
leave
rorl
push
js
add
sub
xchg
divl
or
or
and
mov
add
aas
mov
cmp
pop
mov
je
pop
cmp
dec
addb
xchg
movsb
cltd
fs
mov
or
mov
aad
in
xor
and
pop
jge
sbb
cmc
jnp
cmpsb
pusha
add
arpl
sub
enter
mov
inc
or
clc
out
or
mov
in
enter
sub
add
lds
bound
mov
mov
ret
sbb
jge
mov
and
cmpsl
and
dec
mov
add
sbb
inc
loopne
mov
stc
or
xchg
xor
aas
inc
jns
mov
cmp
mov
rolb
mov
es
dec
leave
dec
cmp
out
fdivl
pop
in
xor
mov
xorl
cmpsb
shl
ds
xor
mov
sbb
cltd
out
add
push
and
mov
jne
fimull
adc
mov
pop
adc
mov
icebp
mov
mov
hlt
test
inc
inc
lea
pop
mov
call
add
lcall
cwtl
jbe
das
dec
les
mov
xchg
in
nop
add
inc
out
mov
das
push
enter
cmpsb
sbb
mov
test
lds
data16
stos
loopne
mov
jecxz
add
mov
int
cmp
jmp
mov
sti
pop
adc
lds
mov
push
push
push
outsl
icebp
adc
push
movsb
push
add
pop
je
pusha
add
nop
add
adc
add
mov
and
xchg
add
add
sbbl
jae
add
stc
stc
les
les
and
stc
mov
call
mov
out
cmp
xlat
es
and
and
push
mov
jnp
jl
test
xlat
hlt
and
mov
fxch
mov
pop
push
mov
dec
dec
mov
rolb
adc
mov
ljmp
in
rolb
mov
xor
adc
mov
out
test
pop
loop
mov
dec
ja
add
add
add
out
imul
sti
repnz
loope
sahf
jg
in
dec
in
icebp
push
fisubrl
sbb
rolb
mov
ljmp
mov
mov
adc
mov
fisttps
fsubrp
mov
mov
adc
mov
add
mov
pop
push
pop
cld
test
mov
pop
rolb
mov
add
lods
stos
test
int
xor
daa
daa
or
push
push
sub
add
mov
mov
out
add
iret
sbb
rolb
mov
shrl
fwait
test
mov
pusha
add
adc
mov
movsl
jno
xor
mulb
mov
push
cld
dec
imul
cmp
mov
add
xor
xchg
ljmp
adc
pusha
add
mov
mov
xor
mov
jp
push
sbbl
add
push
pusha
add
mov
mov
sbb
int
pop
add
sub
cld
jg
aad
add
push
xchg
mov
inc
call
adc
push
add
cwtl
hlt
pop
mov
fisttpl
mov
mov
pop
je
add
mov
fdivrl
mov
fmulp
ds
test
cmp
push
bswap
iret
lods
mov
add
cmp
push
int3
imul
add
mov
and
mov
mov
addl
add
jmp
movsl
add
stos
jb
mov
int
lahf
mov
push
addr16
inc
loope
add
mov
mov
les
push
add
in
test
addl
mov
add
pop
mov
mov
cld
push
jo
mov
mov
iret
inc
pusha
add
fnstcw
mov
add
repz
add
mov
shll
inc
arpl
in
popf
mov
dec
imul
xor
mov
add
inc
stc
pop
or
jle
lea
call
mov
addb
and
mov
add
ja
pop
jl
rolb
mov
mov
jo
mov
push
add
test
js
pop
std
test
cs
in
lock
stos
jo
mov
jmp
mov
sub
add
es
cmp
push
or
push
xlat
xchg
jbe
negb
add
add
lcall
dec
xabort
add
mov
stos
inc
sahf
rcrl
sbb
rolb
mov
notl
mov
add
mov
mov
cmp
push
mov
push
mov
add
add
add
daa
scas
js
xor
xor
mov
add
pop
xchg
push
and
mov
sbb
jno
add
jp
repz
adc
push
outsb
adc
outsl
loop
mov
shrl
rolb
clc
out
xchg
mov
add
mov
pop
dec
jle
int3
imul
add
movsb
pop
das
xor
cmp
add
xchg
add
mov
loop
mov
add
xor
mov
test
mov
sahf
gs
cmp
dec
int
sbb
pop
inc
add
test
movsb
scas
add
mov
fdivl
add
jl
loopne
mov
in
test
outsl
shll
add
add
loope
add
add
xchg
push
add
mov
xchg
add
push
rcrl
sub
cwtl
sbb
sbb
add
add
popf
pxor
jae
mov
add
mov
int
movsl
roll
mov
adc
add
xor
cli
mov
addr16
inc
add
inc
add
add
fstpt
jl
lods
dec
ret
mov
mov
movsb
cmpsb
xchg
dec
push
cmp
std
push
data16
cmp
push
fs
mov
jne
add
ficompl
push
add
or
stc
cmp
adc
pop
jle
xchg
xchg
hlt
pusha
add
add
push
adc
xchg
add
add
in
or
sub
cld
cmp
sbb
call
mov
in
sbb
add
pushf
cmp
dec
cmpsb
dec
push
push
fidivrs
leave
insb
je
push
and
mov
int3
jae
xchg
push
enter
mov
mov
mov
cmpsb
mov
jle
inc
cmpsl
dec
iret
inc
clc
cmc
iret
mov
or
mov
out
icebp
imul
pusha
add
add
push
pop
lahf
bound
mov
push
add
xchg
xchg
and
movl
cmp
add
add
int3
and
leave
adc
add
dec
xor
mov
fs
add
add
and
push
sbb
and
mov
add
add
movsl
push
jne
cmp
loope
les
pop
adc
add
mov
subl
loop
mov
aam
push
xor
mov
mov
mov
xor
mov
add
inc
add
mov
cs
add
out
scas
mov
les
in
mov
add
add
adc
mov
aam
jl
addb
push
or
imul
dec
add
mov
in
fcoms
sbb
rcrl
sti
cltd
inc
adc
add
and
movsl
cmc
push
loope
imul
addb
jno
rolb
mov
stos
stos
adcl
mov
adc
cli
ret
lcall
cs
test
add
adc
add
add
lods
and
pop
push
jp
add
mov
pop
sbbl
push
mov
xchg
sub
pop
mov
mov
mov
add
sub
das
daa
xchg
push
xor
mov
xchg
sbb
repnz
rolb
mov
lds
pop
jmp
and
push
dec
movb
into
jg
sub
aas
in
in
fisubrl
mov
insl
mov
pop
jmp
addb
fstpl
add
add
mov
rcll
ljmp
cltd
cmpsb
add
jne
and
test
jo
mov
lods
repz
jo
mov
shll
push
mov
push
inc
out
add
mov
stos
mov
mov
rolb
mov
data16
mov
add
inc
aaa
mov
and
pop
lock
add
cli
cltd
add
mov
add
adc
mov
add
add
add
inc
adcl
in
push
scas
out
es
add
cmp
inc
add
add
je
cmp
sbb
cmp
enter
mov
addb
push
test
cmp
rep
insl
pop
push
add
cs
add
add
fiaddl
mov
mov
scas
test
pop
mov
xchg
or
mov
ds
jns
test
and
mov
dec
sub
xor
jb
mov
jmp
es
leave
in
fisubs
mov
stc
dec
mov
cmc
inc
fwait
xchg
push
imul
add
add
pop
add
mov
push
push
add
pop
mov
xor
mov
scas
cpuid
add
mov
iret
and
mov
adc
or
loop
mov
dec
daa
negb
in
in
xchg
lds
divps
fwait
adc
mov
xlat
sbb
add
or
add
inc
cmp
dec
fldt
pop
and
mov
adc
sbb
add
adc
mov
stos
addb
daa
mov
mov
xor
mov
xor
mov
mov
inc
xlat
dec
pop
push
shll
fisubl
out
mov
mov
out
mov
add
mov
stc
sarl
xchg
outsb
nop
add
add
add
mov
lahf
stos
cmp
jmp
data16
push
ret
xor
dec
xchg
imul
mov
enter
push
aad
das
imul
mov
js
adc
mov
insl
push
pop
xchg
and
xchg
jo
mov
stos
inc
dec
dec
fbstp
sbb
sbb
mov
and
sub
mov
and
or
in
mov
jecxz
xchg
enter
inc
cmp
lea
ja
xor
mov
add
mov
add
mov
sbb
add
cld
scas
sbb
jge
mov
stos
pop
push
push
add
mov
mov
sbb
scas
or
jecxz
into
and
sub
and
mov
call
pop
addr16
out
fstp
stos
sub
add
cltd
xor
or
test
mov
mov
add
les
xor
out
lods
or
add
push
add
es
fdivs
in
dec
lods
pop
fsub
adc
xchg
xchg
daa
mov
add
movl
push
pop
adc
add
jno
xchg
add
xchg
adc
pop
inc
add
ja
pop
sahf
push
or
fstps
int3
pop
lahf
leave
outsb
imul
sub
ljmp
sbb
icebp
mov
sti
push
add
adc
insl
in
mov
add
sbb
loop
mov
push
out
xor
movsl
mov
mov
mov
sbb
pop
sbb
add
shll
arpl
outsl
sbb
mov
mov
xchg
pushf
test
pop
lcall
add
in
aaa
nop
add
jge
sbb
or
enter
pop
cmpsb
add
mov
cmp
jne
add
out
pop
add
mov
fidivs
jne
push
leave
lahf
out
xor
sub
lcall
mov
cs
dec
push
scas
pop
jp
out
sub
and
mov
sub
scas
and
mov
add
sbb
daa
xchg
addb
arpl
inc
push
outsl
fcom
mov
xchg
jp
data16
ja
arpl
xlat
ss
add
loop
mov
or
in
popf
dec
mov
rolb
mov
jns
add
inc
add
repnz
nop
cld
jae
repnz
push
sahf
mov
repnz
nop
cld
jae
add
lret
lds
add
cmpl
push
mov
nop
leave
nop
jmp
add
sbb
popa
add
mov
xchg
ret
add
lds
lret
pop
clc
repnz
nop
cld
jae
add
add
add
xorl
mov
push
dec
and
clc
repnz
nop
cld
jae
add
int
shrb
imul
add
pop
pop
mov
sub
mov
mov
push
mov
nop
leave
nop
jmp
mov
add
enter
nop
cld
jae
add
dec
add
and
pop
lods
clc
repnz
nop
cld
jae
xlat
push
add
add
lods
and
imul
nop
nop
cld
jae
insl
pop
add
or
add
repnz
nop
cld
jae
mov
add
mov
nop
leave
nop
jmp
add
inc
iret
or
cld
jae
xor
repnz
and
push
clc
repnz
nop
cld
jae
add
pop
add
mov
daa
xchg
test
add
clc
repnz
nop
cld
jae
mov
lds
add
adc
mov
nop
leave
nop
jmp
pop
mov
sbb
dec
das
add
clc
repnz
nop
cld
jae
lds
mov
push
clc
repnz
nop
cld
jae
add
pop
add
clc
repnz
nop
cld
jae
mov
sub
aas
add
add
clc
repnz
nop
cld
jae
xchg
add
add
repnz
nop
cld
jae
add
inc
leave
add
int3
lea
push
mov
xchg
ret
pop
add
mov
cmpl
add
stc
add
incb
and
fmull
nop
nop
cld
jae
mov
xchg
add
insl
in
in
jne
clc
repnz
nop
cld
jae
add
add
jl
clc
repnz
nop
cld
jae
lock
data16
push
push
mov
xchg
ret
les
add
pop
lds
add
jge
aas
adc
in
nop
leave
nop
jmp
add
repnz
add
clc
repnz
nop
cld
jae
mov
sub
add
mov
sub
inc
add
sbb
add
out
add
push
mov
xchg
ret
add
mov
mov
clc
repnz
nop
cld
jae
pop
sub
pop
inc
jno
call
clc
repnz
nop
cld
jae
add
lds
add
fmul
inc
add
rorb
pop
and
mov
enter
repnz
nop
cld
jae
daa
lock
test
push
mov
nop
leave
nop
jmp
sub
add
add
add
jl
push
mov
xchg
ret
add
add
add
add
add
clc
repnz
nop
cld
jae
add
add
add
xor
mov
sbb
add
or
sub
add
mov
jo
mov
popl
clc
repnz
nop
cld
jae
add
repnz
data16
mov
clc
repnz
nop
cld
jae
mov
add
inc
pop
mov
add
loopne
repnz
nop
cld
jae
loope
add
add
hlt
ds
clc
repnz
nop
cld
jae
xor
lock
stos
mov
clc
repnz
nop
cld
jae
add
inc
inc
cmp
in
nop
leave
nop
jmp
add
push
pop
add
mov
xchg
ret
test
and
ficoms
in
nop
leave
nop
jmp
sahf
add
add
add
call
add
clc
repnz
nop
cld
jae
fistl
add
add
leave
nop
jmp
daa
add
sub
add
inc
aam
mov
mov
nop
leave
nop
jmp
loope
add
sub
push
mov
xchg
ret
add
leave
xor
mov
lea
push
mov
nop
leave
nop
jmp
pop
add
push
and
add
clc
repnz
nop
cld
jae
add
sub
jmp
call
pop
add
stc
rolb
repnz
nop
nop
cld
jae
and
icebp
add
add
add
repnz
nop
cld
jae
pop
rep
push
mov
xchg
ret
fldt
add
add
sub
lret
or
repnz
nop
cld
jae
xlat
or
and
repnz
nop
cld
jae
repnz
mov
pop
add
loopne
mov
push
clc
repnz
nop
cld
jae
add
add
leave
add
push
das
stos
push
mov
xchg
ret
add
add
daa
repnz
add
push
mov
nop
leave
nop
jmp
add
iret
add
call
mov
nop
leave
nop
jmp
lds
decl
loop
add
add
pop
dec
add
cld
jae
add
add
add
ret
ds
clc
repnz
nop
cld
jae
leave
add
add
mov
and
clc
repnz
nop
cld
jae
add
add
pop
mov
mov
nop
leave
nop
jmp
add
xchg
add
add
clc
repnz
nop
cld
jae
iret
add
xor
push
mov
xchg
ret
xlat
lret
and
clc
clc
repnz
nop
cld
jae
add
add
jb
mov
mov
push
mov
xchg
ret
add
les
fidivrl
clc
repnz
nop
cld
jae
mov
push
clc
repnz
nop
cld
jae
add
aam
sub
push
mov
nop
leave
nop
jmp
and
incb
test
adc
mov
inc
add
gs
add
mov
nop
leave
nop
jmp
add
pop
xor
add
leave
clc
repnz
nop
cld
jae
xchg
add
add
add
cmp
repnz
nop
cld
jae
push
mov
jo
mov
or
push
mov
xchg
ret
push
xchg
xchg
orl
add
ss
repnz
nop
cld
jae
add
rclb
sbb
push
mov
xchg
ret
mov
add
sbb
scas
enter
nop
cld
jae
mov
add
pushl
clc
repnz
nop
cld
jae
xor
add
imul
clc
repnz
nop
cld
jae
pop
lds
add
sub
nop
cld
jae
xchg
test
add
dec
call
clc
repnz
nop
cld
jae
add
imul
xor
mov
clc
repnz
nop
cld
jae
add
add
add
incl
push
mov
nop
leave
nop
jmp
add
add
xor
nop
leave
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
lret
sub
nop
nop
cld
jae
push
add
add
add
mov
clc
repnz
nop
cld
jae
aas
iret
add
add
add
clc
repnz
nop
cld
jae
lock
add
inc
add
clc
repnz
nop
cld
jae
and
add
js
sar
nop
nop
cld
jae
lds
icebp
mov
add
push
mov
xchg
ret
add
add
lds
and
add
add
clc
repnz
nop
cld
jae
mov
iret
pop
xchg
add
repnz
nop
cld
jae
xchg
xlat
push
daa
mov
and
repnz
nop
cld
jae
add
iret
push
add
xor
mov
mov
push
mov
nop
leave
nop
jmp
or
sbb
sar
mov
clc
repnz
nop
cld
jae
push
int
add
mov
push
mov
xchg
ret
add
pop
add
pop
push
mov
sbb
bound
add
xchg
xchg
mov
add
or
add
repnz
nop
cld
jae
pop
mov
adc
mov
push
mov
nop
leave
nop
jmp
daa
imul
push
mov
nop
leave
nop
jmp
adc
repnz
add
repnz
nop
cld
jae
xor
add
test
mov
xchg
ret
mov
add
mov
push
clc
repnz
nop
cld
jae
push
add
imul
rep
clc
repnz
nop
cld
jae
mov
add
add
shrb
repnz
nop
cld
jae
inc
add
jbe
clc
repnz
nop
cld
jae
add
add
add
mov
push
mov
nop
leave
nop
jmp
pop
mov
mov
sub
clc
repnz
nop
cld
jae
xlat
add
add
push
mov
xchg
ret
sub
add
sbb
clc
repnz
nop
cld
jae
fs
adc
nop
nop
cld
jae
lds
inc
mov
lret
clc
repnz
nop
cld
jae
push
inc
add
add
fidivl
sar
nop
nop
cld
jae
add
daa
lret
add
add
jmp
add
push
mov
nop
leave
nop
jmp
add
and
cmpl
nop
nop
cld
jae
dec
add
add
push
fs
scas
mov
clc
repnz
nop
cld
jae
add
icebp
iret
push
mov
repnz
nop
cld
jae
iret
add
add
lea
push
mov
xchg
ret
fildl
pop
add
push
sub
pop
clc
repnz
nop
cld
jae
sub
and
and
clc
repnz
nop
cld
jae
leave
add
add
je
clc
repnz
nop
cld
jae
sbb
clc
add
in
nop
leave
nop
jmp
add
adc
xchg
mull
repnz
nop
cld
jae
add
pop
add
pop
clc
repnz
nop
cld
jae
push
pop
pop
mov
add
push
nop
nop
cld
jae
add
add
inc
lret
sti
clc
repnz
nop
cld
jae
lret
xchg
dec
movzwl
clc
repnz
nop
cld
jae
add
xchg
adc
cmp
clc
repnz
nop
cld
jae
add
pop
mov
outsl
add
clc
repnz
nop
cld
jae
add
lret
xchg
mov
nop
cld
jae
popl
push
xlat
stc
incb
add
add
mov
sarb
mov
pop
add
add
mov
repnz
nop
cld
jae
rclb
add
add
add
push
mov
xchg
ret
add
lock
add
movsb
addb
mov
repnz
nop
cld
jae
add
mov
xor
push
mov
nop
leave
nop
jmp
lret
and
add
mov
push
mov
nop
leave
nop
jmp
add
stc
pop
add
in
aad
add
repnz
nop
cld
jae
inc
mov
add
iret
lds
inc
sub
nop
nop
cld
jae
add
mov
sbb
repnz
nop
cld
jae
mov
xchg
add
xchg
add
js
ret
clc
repnz
nop
cld
jae
add
add
les
cmpsb
and
repnz
nop
cld
jae
and
add
daa
outsl
dec
clc
repnz
nop
cld
jae
xor
add
les
sti
add
add
in
nop
leave
nop
jmp
inc
sbb
sub
in
inc
add
pop
stc
mov
test
push
mov
xchg
ret
add
icebp
add
push
clc
repnz
nop
cld
jae
mov
add
add
je
clc
repnz
nop
cld
jae
lock
call
clc
repnz
nop
cld
jae
push
add
jnp
clc
repnz
nop
cld
jae
lds
add
loopne
mov
movl
add
add
add
add
clc
clc
repnz
nop
cld
jae
fcmovne
sub
add
adc
daa
lret
inc
add
sahf
and
mov
call
clc
repnz
nop
cld
jae
add
add
mov
inc
add
xlat
adc
add
pop
add
cmpsl
add
repz
repnz
nop
cld
jae
add
shlb
mov
sub
rclb
lds
xchg
ret
mov
add
mov
push
mov
js
adc
add
mov
mov
and
push
mov
nop
leave
nop
jmp
add
add
gs
cmc
pop
push
push
mov
xchg
ret
add
stc
mov
xor
sub
repnz
nop
cld
jae
add
add
jne
clc
repnz
nop
cld
jae
pop
add
dec
push
clc
repnz
nop
cld
jae
daa
xchg
add
add
push
mov
xchg
ret
add
add
mov
add
stc
add
push
mov
xchg
ret
mov
stc
add
add
add
repnz
nop
cld
jae
aas
mov
iret
add
rolb
mov
nop
cld
jae
popl
sbb
add
xchg
xchg
add
add
in
in
add
add
dec
jne
mov
clc
repnz
nop
cld
jae
daa
loope
mov
mov
in
inc
add
popl
add
add
xchg
in
push
mov
add
add
add
add
pop
mov
clc
repnz
nop
cld
jae
or
xor
decb
int3
inc
add
mov
add
add
push
jne
clc
repnz
nop
cld
jae
sub
and
repnz
nop
cld
jae
xlat
add
add
add
add
clc
repnz
nop
cld
jae
stc
insl
add
lret
mov
clc
repnz
nop
cld
jae
mov
add
mov
loop
clc
repnz
nop
cld
jae
incb
add
mov
xor
add
add
adc
repnz
nop
cld
jae
repnz
add
add
mov
push
mov
nop
leave
nop
jmp
fildl
inc
add
xor
clc
repnz
nop
cld
jae
mov
xor
add
add
clc
repnz
nop
cld
jae
add
rolb
add
push
inc
push
mov
push
mov
xchg
ret
int
add
lock
cli
call
push
mov
nop
leave
nop
jmp
and
js
clc
repnz
nop
cld
jae
leave
mov
add
push
and
jne
push
mov
nop
leave
nop
jmp
add
mov
icebp
cmp
add
repnz
nop
cld
jae
add
mov
xlat
out
add
clc
repnz
nop
cld
jae
stc
and
add
mov
clc
repnz
nop
cld
jae
add
pop
leave
pop
add
clc
repnz
nop
cld
jae
push
lret
add
stos
pop
jmp
add
push
add
fs
sbb
sub
add
pop
clc
repnz
nop
cld
jae
add
gs
add
pop
jmp
mov
add
add
mov
add
lock
add
test
repnz
nop
cld
jae
add
sub
pop
push
mov
xchg
ret
xor
lds
mov
call
clc
repnz
nop
cld
jae
fs
xlat
add
push
push
mov
xchg
ret
mov
add
pop
clc
repnz
nop
cld
jae
add
loope
xchg
sbb
cmp
add
clc
repnz
nop
cld
jae
push
add
cmp
clc
repnz
nop
cld
jae
push
add
frstor
xor
add
clc
repnz
nop
cld
jae
add
fildl
nop
nop
cld
jae
inc
stc
add
add
add
push
mov
xchg
ret
lock
mov
mov
push
mov
nop
leave
nop
jmp
daa
add
pop
mov
xor
push
xor
clc
repnz
nop
cld
jae
mov
lret
add
pop
add
clc
repnz
nop
cld
jae
push
add
repnz
lret
dec
add
xor
inc
add
add
push
sbb
mov
clc
repnz
nop
cld
jae
rolb
ret
jmp
incl
and
add
add
xchg
add
pop
clc
repnz
nop
cld
jae
add
pop
add
add
nop
nop
cld
jae
and
dec
push
add
jle
clc
repnz
nop
cld
jae
mov
add
dec
clc
repnz
nop
cld
jae
imul
out
add
xor
clc
repnz
nop
cld
jae
pop
mov
add
cmp
push
mov
xchg
ret
add
add
add
add
pusha
clc
repnz
nop
cld
jae
iret
sub
add
lods
clc
repnz
nop
cld
jae
mov
stc
push
inc
add
dec
add
clc
repnz
nop
cld
jae
pop
gs
cmp
test
repnz
nop
cld
jae
add
shr
jmp
ljmp
add
lock
add
add
fsubs
repnz
nop
cld
jae
addl
icebp
or
add
clc
repnz
nop
cld
jae
add
insl
add
dec
add
rolb
sbb
add
add
gs
add
inc
add
add
add
clc
repnz
nop
cld
jae
mov
mov
movl
nop
leave
nop
jmp
stc
add
icebp
push
mov
nop
leave
nop
jmp
add
add
add
loope
mov
push
mov
xchg
ret
add
mov
mov
add
repnz
nop
cld
jae
sbb
pop
sbb
add
repnz
nop
cld
jae
pop
add
xor
mov
imul
push
mov
nop
leave
nop
jmp
add
repnz
mov
jmp
add
popl
int
add
adc
inc
jno
addb
fnstsw
clc
repnz
nop
cld
jae
push
add
dec
adc
cmpsb
jbe
push
clc
repnz
nop
cld
jae
loope
adc
lds
mov
add
clc
repnz
nop
cld
jae
add
mov
push
mov
call
add
subl
mov
push
mov
nop
leave
nop
jmp
add
nop
nop
cld
jae
add
sahf
xchg
push
jle
inc
call
inc
add
pop
add
add
mov
call
in
nop
leave
nop
jmp
loope
add
inc
and
push
mov
xchg
ret
add
add
add
mov
add
clc
repnz
nop
cld
jae
sbb
inc
add
mov
xchg
ret
loope
sahf
mov
sub
add
push
mov
xchg
ret
aas
add
leave
add
add
push
push
mov
xchg
ret
pop
xlat
les
add
orl
lock
mov
xchg
ret
stc
icebp
push
aas
add
iret
repnz
mov
xchg
ret
add
add
add
shlb
pop
push
mov
nop
leave
nop
jmp
add
mov
xchg
repnz
nop
cld
jae
mov
add
inc
clc
repnz
nop
cld
jae
add
xor
loope
mov
clc
repnz
nop
cld
jae
lds
add
add
mov
add
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
incb
add
imul
mov
xor
add
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
xchg
mov
push
add
clc
repnz
nop
cld
jae
or
mov
int
in
fs
jp
push
mov
xchg
ret
mov
and
add
mov
push
mov
nop
leave
nop
jmp
add
pop
add
loope
and
push
mov
xchg
ret
add
add
add
sub
pop
mov
push
mov
xchg
ret
sub
add
mov
add
and
clc
repnz
nop
cld
jae
add
add
pop
icebp
enter
push
mov
xchg
ret
add
add
push
xchg
add
pusha
push
mov
xchg
ret
sahf
lds
mov
repnz
add
dec
push
push
mov
nop
leave
nop
jmp
mov
sub
add
insb
add
clc
repnz
nop
cld
jae
add
add
movsb
xor
mov
add
jne
clc
repnz
nop
cld
jae
mov
lock
clc
repnz
nop
cld
jae
add
pop
mov
in
dec
clc
repnz
nop
cld
jae
add
pop
sar
jns
add
in
nop
leave
nop
jmp
loope
add
add
repnz
nop
cld
jae
fs
mov
add
mov
push
clc
repnz
nop
cld
jae
push
mov
insl
add
pop
push
jg
add
add
lds
add
sbb
rcrl
mov
push
add
cltd
add
lcall
fdivrl
std
and
push
mov
xchg
ret
add
add
mov
sub
clc
repnz
nop
cld
jae
icebp
sub
mov
push
test
jmp
fs
add
add
add
xor
sub
add
add
in
nop
leave
nop
jmp
push
pop
lahf
push
clc
repnz
nop
cld
jae
shl
add
add
add
repz
mov
nop
leave
nop
jmp
add
add
add
test
rolb
add
repnz
nop
cld
jae
lock
pop
or
mov
jmp
add
add
imul
mov
dec
pop
clc
repnz
nop
cld
jae
add
add
add
mov
rol
push
mov
xchg
ret
add
lock
add
dec
push
mov
xchg
ret
add
add
add
sub
clc
repnz
nop
cld
jae
pop
push
add
add
sub
jne
clc
repnz
nop
cld
jae
lock
loope
and
sbb
repnz
nop
cld
jae
push
repnz
add
dec
imul
leave
nop
jmp
add
mov
iret
mov
clc
repnz
nop
cld
jae
add
add
add
mov
mov
nop
leave
nop
jmp
imul
add
clc
repnz
nop
cld
jae
add
mov
add
stc
sti
add
clc
repnz
nop
cld
jae
add
gs
pop
push
add
cmp
push
mov
xchg
ret
aas
pop
xchg
add
mov
xor
nop
nop
cld
jae
add
xor
ret
xchg
xor
mov
pop
add
clc
repnz
nop
cld
jae
xchg
leave
xlat
add
add
mov
push
mov
xchg
ret
lds
iret
mov
pop
imul
mov
test
add
movl
fldl
pop
mov
clc
repnz
nop
cld
jae
daa
add
add
movsb
push
mov
xchg
ret
add
or
daa
or
stos
dec
push
mov
nop
leave
nop
jmp
add
add
stc
add
and
clc
repnz
nop
cld
jae
add
daa
mov
sbb
repnz
nop
cld
jae
add
lret
iret
mov
cmp
test
nop
nop
cld
jae
sub
shlb
mov
nop
nop
cld
jae
add
xor
mov
push
push
mov
xchg
ret
iret
stc
and
add
pop
pop
xchg
pop
clc
repnz
nop
cld
jae
mov
mov
stc
leave
xlat
add
pop
pop
clc
repnz
nop
cld
jae
mov
add
mov
add
out
shl
push
mov
xchg
ret
mov
add
add
add
push
mov
nop
leave
nop
jmp
add
pop
mov
loope
push
xchg
dec
push
clc
repnz
nop
cld
jae
add
rcrb
mov
inc
push
mov
nop
leave
nop
jmp
pop
popl
add
add
xchg
subl
and
incl
sahf
inc
add
fistpl
inc
add
cmp
test
add
add
repnz
nop
cld
jae
and
add
mov
xchg
and
push
push
mov
xchg
ret
add
or
add
add
add
in
add
add
clc
repnz
nop
cld
jae
leave
fs
iret
jmp
add
push
add
fs
dec
mov
test
repnz
mov
nop
leave
nop
jmp
leave
incb
daa
fisttpl
mov
xlat
xchg
dec
push
push
mov
xchg
ret
imul
add
inc
add
mov
xchg
ret
add
xor
push
add
nop
nop
cld
jae
fs
adc
add
mov
push
mov
nop
leave
nop
jmp
add
lds
add
sub
sbb
inc
add
pop
icebp
inc
add
add
addb
jp
popa
jo
cs
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
lock
add
add
push
rep
clc
repnz
nop
cld
jae
xlat
sub
add
add
push
mov
xchg
ret
push
add
sahf
add
roll
jle
push
mov
nop
leave
nop
jmp
pop
add
xor
mov
add
mov
xchg
ret
icebp
aas
add
sub
subl
push
mov
xchg
ret
push
pop
add
add
test
push
hlt
inc
add
add
add
add
add
clc
repnz
nop
cld
jae
add
push
add
add
mov
repnz
nop
cld
jae
mov
iret
push
add
add
pushl
rclb
aad
add
add
add
add
nop
nop
cld
jae
sub
add
inc
daa
add
mov
clc
repnz
nop
cld
jae
and
lock
xchg
pusha
add
mov
nop
leave
nop
jmp
xlat
add
add
add
insb
insb
add
repnz
nop
cld
jae
stc
add
mov
pop
push
mov
xchg
ret
pop
add
add
xchg
add
add
clc
repnz
nop
cld
jae
mov
popl
and
add
mov
clc
repnz
nop
cld
jae
mov
and
add
mov
clc
repnz
nop
cld
jae
xor
add
mov
clc
repnz
nop
cld
jae
lret
add
hlt
mov
jge
push
mov
nop
leave
nop
jmp
add
jo
mov
add
add
adcb
nop
leave
nop
jmp
xchg
add
dec
fdivl
push
mov
nop
leave
nop
jmp
sub
xlat
add
jbe
clc
repnz
nop
cld
jae
mov
add
add
push
mov
xchg
ret
rolb
sub
add
clc
repnz
nop
cld
jae
mov
dec
inc
add
in
add
and
push
mov
nop
leave
nop
jmp
xchg
add
mov
adc
repnz
nop
cld
jae
or
iret
add
movzwl
clc
repnz
nop
cld
jae
add
add
repnz
add
or
clc
repnz
nop
cld
jae
adc
sbb
clc
repnz
nop
cld
jae
iret
pop
mov
add
mov
push
mov
nop
leave
nop
jmp
mov
mov
fisttpll
mov
nop
nop
cld
jae
add
mov
add
mov
push
mov
nop
leave
nop
jmp
add
leave
clc
or
clc
repnz
nop
cld
jae
add
push
add
fildl
jbe
daa
dec
add
push
mov
nop
leave
nop
jmp
add
sar
jmp
pop
incb
add
add
icebp
add
iret
add
add
pop
push
mov
xchg
ret
xlat
add
push
add
shr
clc
repnz
nop
cld
jae
leave
mov
je
clc
repnz
nop
cld
jae
icebp
addl
pop
mov
clc
repnz
nop
cld
jae
loope
add
clc
repnz
nop
cld
jae
int
add
les
test
or
add
repnz
nop
cld
jae
fisttpl
in
add
xor
add
add
ja
add
mov
nop
nop
cld
jae
sbb
add
jmp
mov
push
mov
nop
leave
nop
jmp
add
loope
add
push
mov
nop
leave
nop
jmp
pop
and
iret
sub
push
mov
nop
leave
nop
jmp
add
inc
mov
iret
or
nop
cld
jae
mov
fistpl
xorl
clc
repnz
nop
cld
jae
adc
or
clc
repnz
nop
cld
jae
add
push
pop
jns
sti
push
mov
nop
leave
nop
jmp
add
add
stc
sub
xlat
popf
lea
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
add
sub
ficoml
mov
nop
leave
nop
jmp
add
mov
add
add
pop
cld
push
push
mov
xchg
ret
push
pop
xor
adc
jne
push
mov
nop
leave
nop
jmp
add
cmp
push
mov
nop
leave
nop
jmp
stc
icebp
sub
add
sub
push
mov
xchg
ret
add
sub
sub
add
mov
mov
nop
leave
nop
jmp
repnz
popl
sahf
mov
clc
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
add
add
aas
insl
add
push
mov
nop
leave
nop
jmp
add
insl
add
add
add
idiv
clc
repnz
nop
cld
jae
incb
insl
in
jmp
in
nop
leave
nop
jmp
mov
stc
add
mov
sub
in
nop
leave
nop
jmp
add
movb
jmp
and
add
add
and
nop
nop
cld
jae
add
leave
add
je
js
repnz
nop
cld
jae
fs
add
dec
rep
clc
repnz
nop
cld
jae
imul
mov
push
clc
repnz
nop
cld
jae
mov
test
mov
rcll
nop
leave
nop
jmp
popl
imul
iret
or
add
add
add
add
lds
sub
add
or
clc
repnz
nop
cld
jae
xchg
add
add
cmp
mov
nop
leave
nop
jmp
add
mov
add
mov
mov
data16
call
clc
repnz
nop
cld
jae
and
mov
in
adc
add
add
test
lea
push
mov
nop
leave
nop
jmp
pop
int
add
push
scas
xor
clc
repnz
nop
cld
jae
add
sub
and
mov
nop
leave
nop
jmp
add
add
sahf
add
das
add
clc
repnz
nop
cld
jae
add
in
mov
clc
repnz
nop
cld
jae
mov
sub
repnz
nop
cld
jae
add
add
pop
mov
push
mov
xchg
ret
add
add
xor
push
mov
xchg
ret
insl
lret
add
pop
add
nop
cld
jae
add
decb
dec
dec
push
mov
nop
leave
nop
jmp
icebp
add
add
pop
fs
cmpsl
ret
or
jmp
stc
daa
pop
lret
add
sahf
add
mov
push
mov
xchg
ret
addl
add
cltd
push
push
mov
xchg
ret
insl
add
add
sbb
add
add
push
mov
xchg
ret
add
add
sub
leave
ja
cmpl
push
mov
nop
leave
nop
jmp
iret
add
mov
ret
add
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
rolb
daa
mov
aam
mov
clc
repnz
nop
cld
jae
mov
pop
add
mov
nop
nop
cld
jae
test
sahf
es
clc
repnz
nop
cld
jae
daa
dec
jne
clc
repnz
nop
cld
jae
popl
mov
in
nop
leave
nop
jmp
imul
sub
push
mov
xchg
ret
mov
pop
add
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
add
add
add
push
push
mov
nop
leave
nop
jmp
addl
add
test
add
clc
repnz
nop
cld
jae
fs
sbb
loope
adc
adc
repnz
nop
cld
jae
add
add
jnp
adc
repnz
nop
cld
jae
pop
xor
fwait
mov
push
mov
nop
leave
nop
jmp
push
mov
xlat
add
sahf
jge
pop
call
in
nop
leave
nop
jmp
fs
daa
notl
inc
and
repnz
nop
cld
jae
insl
add
pop
mov
add
mov
movsb
clc
repnz
nop
cld
jae
add
push
mov
sbb
add
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
lret
add
popl
decb
repnz
nop
cld
jae
inc
add
les
bound
mov
je
clc
repnz
nop
cld
jae
mov
repnz
nop
cld
jae
add
add
sbb
add
repnz
nop
cld
jae
add
mov
jecxz
inc
add
mov
nop
leave
nop
jmp
stc
push
sbb
adc
mov
xchg
mov
test
repnz
nop
cld
jae
mov
sub
mov
push
mov
xchg
ret
mov
pop
int
lret
dec
push
clc
repnz
nop
cld
jae
add
rolb
and
sub
inc
add
inc
push
add
pop
jne
clc
repnz
nop
cld
jae
add
lods
mov
push
mov
nop
leave
nop
jmp
lds
pop
mov
mov
nop
nop
cld
jae
add
sub
clc
repnz
nop
cld
jae
sahf
and
add
mov
subl
inc
clc
repnz
nop
cld
jae
add
mov
mov
nop
nop
cld
jae
xchg
loope
popl
add
cs
push
mov
nop
leave
nop
jmp
orl
out
mov
clc
repnz
nop
cld
jae
mov
add
sar
repnz
nop
cld
jae
add
iret
pop
add
clc
repnz
nop
cld
jae
les
add
xor
and
repnz
nop
cld
jae
daa
pop
inc
pop
add
pop
std
mov
push
mov
nop
leave
nop
jmp
les
add
daa
imul
in
nop
leave
nop
jmp
xor
imul
pop
push
mov
xchg
ret
mov
xor
add
popl
xchg
rcll
sub
repnz
nop
cld
jae
incb
add
leave
adc
jne
clc
repnz
nop
cld
jae
sbb
daa
sti
mov
clc
repnz
nop
cld
jae
add
add
insl
mov
clc
repnz
nop
cld
jae
popl
add
mov
clc
repnz
nop
cld
jae
lret
fildl
add
nop
nop
cld
jae
iret
add
xor
add
push
push
mov
xchg
ret
add
add
add
add
pop
jl
adc
repnz
nop
cld
jae
add
sbb
or
test
add
clc
repnz
nop
cld
jae
add
aad
push
clc
repnz
nop
cld
jae
rolb
lock
add
add
mov
mov
clc
repnz
nop
cld
jae
inc
pop
and
add
clc
repnz
nop
cld
jae
les
nop
add
push
mov
xchg
ret
test
les
pop
call
push
mov
nop
leave
nop
jmp
add
mov
mov
push
mov
xchg
ret
add
rcr
lds
nop
nop
cld
jae
add
add
mov
punpcklwd
repnz
nop
cld
jae
sahf
add
add
add
push
fs
repnz
nop
cld
jae
pop
mov
inc
clc
repnz
nop
cld
jae
int
add
add
add
inc
fsubr
stos
add
add
repnz
nop
cld
jae
sub
mov
add
add
repnz
nop
cld
jae
add
popa
add
repnz
nop
cld
jae
imul
pop
xchg
clc
repnz
nop
cld
jae
add
mov
jnp
popa
add
mov
xchg
ret
test
add
pop
mov
clc
repnz
nop
cld
jae
mov
iret
add
push
loopne
mov
mov
clc
repnz
nop
cld
jae
xchg
les
test
clc
repnz
nop
cld
jae
push
pop
mov
leave
clc
repnz
nop
cld
jae
add
or
add
add
iret
je
clc
repnz
nop
cld
jae
mov
mov
sub
repnz
nop
cld
jae
rolb
fs
add
push
mov
xchg
ret
add
iret
xchg
add
add
push
mov
push
mov
xchg
ret
xchg
add
add
icebp
add
mov
popa
add
mov
xchg
ret
add
add
add
add
inc
add
iret
mov
add
je
clc
repnz
nop
cld
jae
mov
sahf
sbb
nop
leave
nop
jmp
push
sub
add
pop
sub
pushf
popa
push
mov
xchg
ret
pop
sub
push
pop
popl
dec
lds
add
clc
repnz
nop
cld
jae
loope
aas
adcl
cmp
mov
xchg
ret
add
les
aas
add
sub
mov
nop
leave
nop
jmp
add
inc
add
add
repnz
nop
cld
jae
lds
lds
push
add
xor
add
push
mov
nop
leave
nop
jmp
push
add
add
add
clc
repnz
nop
cld
jae
sbb
sahf
add
add
repnz
nop
cld
jae
push
rorb
lods
and
push
mov
nop
leave
nop
jmp
add
or
add
and
mov
mov
repnz
or
nop
leave
nop
jmp
and
mov
call
push
mov
nop
leave
nop
jmp
iret
xor
les
pop
mov
clc
repnz
nop
cld
jae
lret
icebp
stos
cmp
push
mov
nop
leave
nop
jmp
int
sub
addb
mov
repnz
nop
cld
jae
add
in
add
push
mov
xchg
ret
int
mov
popl
add
mov
clc
repnz
nop
cld
jae
sbb
push
add
push
push
mov
xchg
ret
add
add
les
incb
js
push
mov
nop
leave
nop
jmp
add
push
add
call
clc
repnz
nop
cld
jae
leave
add
stc
fucomp
out
jmp
add
sub
inc
leave
leave
add
sub
add
push
mov
nop
leave
nop
jmp
fcmovnbe
add
mov
clc
repnz
nop
cld
jae
repnz
iret
add
add
shr
push
mov
nop
leave
nop
jmp
adc
repnz
and
std
jmp
push
add
cmp
jmp
aam
out
add
mov
push
mov
nop
leave
nop
jmp
or
rol
add
mov
loope
mov
nop
leave
nop
jmp
repnz
icebp
add
and
lret
mov
repnz
nop
cld
jae
iret
xchg
or
mov
push
mov
nop
leave
nop
jmp
add
xchg
cs
mov
add
jo
add
or
push
int
add
push
mov
xchg
ret
add
sub
sub
gs
fs
or
leave
nop
jmp
add
xor
mov
add
clc
repnz
nop
cld
jae
aas
popl
mov
add
clc
repnz
nop
cld
jae
add
adc
repnz
nop
cld
jae
add
sub
add
push
push
mov
xchg
ret
mov
add
pop
daa
add
xchg
mov
jmp
mov
add
add
lds
add
xchg
inc
int
add
call
jmp
add
inc
add
sub
add
ja
ljmp
cld
jae
les
lock
add
mov
clc
repnz
nop
cld
jae
add
mov
pushl
push
mov
xchg
ret
insl
add
add
push
inc
add
sbb
mov
nop
leave
nop
jmp
add
add
pop
in
mov
clc
repnz
nop
cld
jae
add
xchg
jb
mov
mov
push
mov
xchg
ret
xlat
add
icebp
sub
mov
push
mov
xchg
ret
and
add
pop
clc
repnz
nop
cld
jae
add
or
add
daa
imul
nop
nop
cld
jae
add
imul
push
mov
add
add
add
sub
add
sar
repnz
nop
cld
jae
icebp
icebp
xor
mov
mov
mov
and
push
mov
xchg
ret
xlat
add
xchg
xchg
stc
icebp
cs
push
mov
xchg
ret
add
and
subl
fwait
add
clc
repnz
nop
cld
jae
push
inc
leave
icebp
test
nop
nop
cld
jae
xchg
and
lock
add
clc
repnz
nop
cld
jae
mov
add
xlat
add
mov
push
mov
xchg
ret
sub
pop
add
add
clc
repnz
nop
cld
jae
lret
add
add
push
aam
inc
xchg
xor
mov
inc
add
nop
nop
cld
jae
add
add
mov
mov
mov
add
push
push
mov
xchg
ret
and
sbb
push
mov
scas
mov
push
mov
xchg
ret
add
add
add
das
je
clc
repnz
nop
cld
jae
add
mov
nop
leave
nop
jmp
mov
xchg
add
in
nop
leave
nop
jmp
add
stc
mov
xor
add
push
mov
xchg
ret
xor
add
and
clc
repnz
nop
cld
jae
add
sub
mov
gs
inc
or
mov
xchg
ret
gs
push
icebp
iret
add
add
xor
inc
add
lds
add
push
push
mov
xchg
ret
iret
loope
push
add
dec
loope
mov
mov
push
push
mov
nop
leave
nop
jmp
add
sub
mov
cmpsb
jge
leave
push
mov
nop
leave
nop
jmp
imul
pushl
clc
repnz
nop
cld
jae
add
and
pop
push
push
mov
nop
leave
nop
jmp
add
sub
mov
add
sub
nop
nop
cld
jae
aas
add
sub
pop
mov
clc
repnz
nop
cld
jae
mov
push
lret
adc
ja
pusha
push
mov
xchg
ret
lock
add
push
inc
jne
mov
push
mov
xchg
ret
add
add
leave
add
clc
mov
clc
repnz
nop
cld
jae
add
xchg
add
sub
add
push
mov
xchg
ret
mov
and
mov
add
push
mov
nop
leave
nop
jmp
add
mov
clc
repnz
nop
cld
jae
adcl
add
cs
clc
repnz
nop
cld
jae
adc
loope
mov
clc
repnz
nop
cld
jae
add
lret
add
movzwl
clc
repnz
nop
cld
jae
add
insl
int
xchg
mov
clc
repnz
nop
cld
jae
xchg
stc
add
mov
add
in
nop
leave
nop
jmp
xchg
mov
add
add
lds
add
add
mov
clc
repnz
nop
cld
jae
add
mov
jmp
add
xor
inc
add
pop
or
add
push
mov
xchg
ret
lock
iret
add
adc
xor
mov
clc
repnz
nop
cld
jae
imul
xchg
ret
add
gs
aas
add
mov
jmp
add
mov
add
mov
push
in
out
clc
repnz
nop
cld
jae
xchg
xor
mov
repnz
nop
cld
jae
add
and
push
push
add
lcall
faddl
add
and
push
add
add
mov
xchg
ret
add
lret
mov
push
clc
repnz
nop
cld
jae
pop
and
mov
mov
movzwl
push
mov
nop
leave
nop
jmp
mov
jb
mov
push
mov
clc
repnz
nop
cld
jae
rclb
add
push
mov
xchg
ret
add
add
lds
add
mov
push
mov
nop
leave
nop
jmp
mov
popl
dec
push
clc
repnz
nop
cld
jae
adc
adc
mov
add
push
mov
xchg
ret
sub
add
inc
xor
push
mov
add
mov
add
shll
pop
in
jle
in
test
lahf
or
push
icebp
mov
outsb
cmp
gs
add
inc
imul
inc
inc
test
jno
stc
mov
cmp
jne
xchg
mov
insb
fsubr
lret
dec
add
mov
jl
add
pop
movsb
imul
mov
mov
pop
stos
out
cmpsl
nop
add
mov
mov
pop
jb
mov
cs
sub
mov
push
out
rolb
mov
xchg
add
mov
mov
addb
pop
add
jno
add
add
rolb
mov
cmp
xor
cmpsl
test
pop
sbb
sti
rolb
mov
int
ret
test
mov
add
fdivs
mov
mov
push
cmp
mov
mov
pop
std
vrcpss
add
xchg
addl
ljmp
sub
jns
fsub
add
subl
stos
and
pop
addb
cmp
cli
add
mov
popfw
icebp
rolb
loop
mov
inc
add
pop
mov
lahf
addb
ficoms
jmp
mov
jnp
pushf
mov
add
test
xor
cmp
out
rolb
mov
jge
pop
mov
push
ret
jmp
add
or
cmp
lods
and
mov
add
addb
sub
add
mov
popf
xchg
add
cld
mov
mov
addb
rolb
stos
pop
repnz
mov
mov
out
push
aad
xchg
add
repnz
addb
addb
addb
add
mov
scas
sbb
mov
shr
sbb
dec
mov
cmp
add
add
repz
xchg
xchg
xor
sbb
inc
mov
mov
mov
xor
mov
mov
stc
sub
mov
ja
sbb
add
mov
stc
mov
aam
add
incl
mov
mov
mov
mov
add
movsl
jge
ja
sub
xor
xor
in
add
fimuls
stos
adc
xor
mov
jmp
mov
adc
test
lods
xchg
add
roll
int
or
lock
scas
in
jg
cmp
xchg
pop
scas
pusha
add
mov
add
iret
adc
in
push
rorl
aad
int3
out
mov
mov
xchg
pop
cmp
popf
rcrl
sub
mov
mov
xchg
push
stos
out
in
jae
and
mov
adc
jo
mov
push
xlat
lods
bound
mov
mov
movsb
mov
mov
add
enter
in
imul
add
pop
pop
inc
dec
jns
ret
cmp
ljmp
mov
or
pop
mov
je
arpl
fdivl
call
mov
xchg
fnsave
insl
fsubp
add
add
jb
mov
jnp
add
test
outsl
xchg
mov
repz
or
add
test
stos
mov
mov
dec
sbb
mov
xchg
cmp
add
cmc
rolb
mov
add
adc
inc
test
jge
js
mov
xchg
add
cmovs
cmp
add
xchg
jp
dec
lods
jp
mov
cmpsb
popf
fsubrs
leave
ret
dec
cmp
xchg
jno
add
mov
movsb
xor
mov
sub
add
push
push
sahf
out
mov
orl
out
inc
fldenv
imul
mov
test
scas
nop
add
in
inc
sti
rorl
ds
push
xor
ret
push
add
dec
push
add
mov
add
sbb
in
inc
add
mov
jbe
sub
xchg
inc
sbb
cmpl
push
rolb
mov
xchg
psrlw
mov
rcr
sbb
lock
test
fwait
stos
das
js
jne
aaa
mov
jb
mov
mov
mov
mov
pop
inc
add
mov
mov
adc
add
movb
repz
mov
nop
add
loop
mov
mov
out
in
int
adc
enter
mov
ja
lds
xchg
fwait
inc
mov
lods
cli
outsl
dec
adc
push
stos
inc
out
lahf
imul
mov
je
add
mov
add
mov
mov
test
orl
xor
push
add
addb
roll
addb
scas
fadd
lea
push
cmp
push
jo
mov
mov
pop
sbb
insb
rolb
in
lret
int3
dec
pop
fcoms
bswap
xchg
add
fdivl
pop
xor
add
adc
mov
or
add
add
out
dec
cmp
mov
cmp
xorl
add
adc
inc
add
add
test
cmp
xor
cld
mov
in
nop
add
mov
add
add
fcoml
add
xchg
jmp
je
lahf
push
scas
push
and
mov
and
jle
mov
sbb
loopne
mov
add
arpl
mov
xor
inc
or
jne
adc
mov
sub
mov
sti
sbb
repnz
and
mov
int3
jne
sbb
add
mov
xchg
add
mov
out
ret
fidivrs
add
fsts
bound
mov
mov
inc
mov
rcrl
mov
mov
xor
xchg
inc
jg
js
inc
mov
mov
xorl
add
xchg
mov
pusha
add
mov
jp
stc
lret
mov
fdivrl
push
repnz
and
mov
mov
jle
testb
scas
push
add
das
cmp
add
mov
mov
fcom
add
dec
mov
in
addr16
push
add
add
pop
mov
add
sub
test
cs
outsl
jmp
scas
jg
loope
add
xchg
and
mov
scas
pop
das
fwait
mov
mov
cmp
mov
cmp
int3
cmc
ret
cmc
int3
das
xchg
sub
dec
inc
repnz
test
push
test
lea
dec
jmp
mov
mov
lcall
add
mov
sbb
pop
mov
mov
pop
add
xchg
add
iret
xor
add
push
add
mov
adc
mov
imul
bound
mov
dec
mov
js
dec
pop
scas
push
ror
inc
and
popa
out
mov
nop
add
inc
add
jb
mov
nop
add
xchg
dec
int
fwait
bound
mov
add
xor
lret
mov
pop
mov
mov
push
lret
mov
aad
push
je
add
and
add
jb
mov
cmp
push
test
mov
mov
jnp
push
outsb
push
mov
mov
add
jecxz
aam
shll
add
mov
mov
add
filds
popf
lahf
or
inc
add
aam
xlat
jb
mov
sbb
push
sahf
lahf
jl
adc
mov
xor
mov
mov
add
xlat
and
mov
add
sbb
movsl
sbb
cmp
data16
cld
xor
mov
mov
or
pop
and
mov
add
and
mov
add
mov
add
aad
and
push
ficomps
xchg
hlt
mov
jae
xchg
jns
push
mov
sbb
jle
ljmp
add
mov
hlt
into
outsb
lea
lods
xchg
inc
lahf
mov
mov
in
push
jbe
mov
xlat
dec
sub
add
mov
xor
mov
ss
inc
ret
mov
add
mov
mov
int
imul
hlt
sbb
add
add
mov
push
lea
jo
mov
adc
mov
add
mov
and
xor
cmp
movsb
mov
mov
mov
sub
mov
outsl
lea
orl
mov
lds
add
js
leave
push
in
daa
push
jae
add
addb
mov
lret
aad
xchg
mov
xor
mov
jbe
stos
jle
xchg
dec
or
inc
add
mov
cmp
fmuls
add
add
enter
addr16
fildll
pushf
adc
add
lret
sbb
mov
pop
dec
cwtl
fst
add
cmp
add
add
and
xchg
sbb
xor
mov
sahf
std
cli
xor
add
pop
fistl
mov
xchg
xchg
loop
mov
mov
xor
mov
add
xchg
in
mov
mov
into
push
fwait
pop
lahf
rolb
mov
add
fwait
sbb
fisubrl
or
adc
mov
mov
add
insb
mov
mov
mov
cmp
or
in
adc
mov
xor
mov
ret
jbe,pn
dec
les
xlat
xchg
add
rcrl
mov
fsub
add
mov
fnstenv
pop
test
loopne
mov
pavgw
test
hlt
add
mov
mov
push
cmc
jecxz
sbb
jne
cmp
mov
mov
xlat
mov
inc
std
and
mov
mov
and
popf
mov
addb
sahf
pop
pop
xchg
mov
add
mov
sbb
sub
xor
add
add
add
scas
mov
lock
add
test
push
aam
loopne
mov
sub
int3
ret
dec
jb
mov
jns
mov
add
jo
mov
sub
xchg
xor
pop
and
pop
jns
mov
loop
mov
mov
jge
adc
mov
sub
enter
and
jge
pop
or
mov
mov
hlt
dec
push
jmp
fldl
mov
imul
add
mov
inc
inc
xlat
sub
inc
add
bound
mov
insl
pop
cli
imul
je
sahf
cmp
add
xchg
mov
jnp
xor
mov
fdivl
ss
mov
dec
movsb
inc
fmul
hlt
int3
sbb
sbb
mov
or
cld
scas
mov
mov
mov
cmp
add
mov
in
sub
sti
dec
call
cltd
adc
mov
jmp
push
add
add
push
lock
xchg
movsl
je
xor
mov
fsubrp
mov
add
rolb
mov
add
mov
les
aam
nop
add
lahf
jmp
xchg
dec
sbb
add
or
mov
sbb
jns
movsb
movsb
dec
movsl
das
imul
fstpt
iret
dec
push
add
cmp
xlat
test
add
test
dec
mov
mov
imul
addb
inc
mov
les
add
xorl
add
daa
leave
pop
negb
popf
adc
inc
xor
mov
addr16
xchg
aaa
daa
ja
xor
add
adc
mov
or
jbe
mov
add
push
add
push
mov
in
rcll
xor
add
mov
lret
xor
add
jno
jg,pn
pusha
add
movsl
xchg
and
add
jbe
push
inc
fldcw
in
out
mov
sub
ja
add
pusha
add
sahf
xchg
stc
lds
push
pusha
add
add
inc
add
je
mov
inc
cmp
add
fistl
dec
or
xchg
push
dec
sbb
mov
push
nop
add
rolb
mov
mov
or
mov
mov
in
dec
add
xor
inc
lahf
sbb
add
push
cs
sub
and
mov
add
leave
xchg
lahf
jnp
adc
adc
mov
cmpsl
rcrl
push
dec
mov
pop
sub
mov
mov
iret
aaa
call
popa
add
jg
aas
cld
push
mov
lds
add
push
mov
mov
adc
push
add
addb
aaa
dec
insl
nop
add
cmp
sti
xor
call
mov
test
mov
mov
lds
js
movsb
mov
xchg
jbe
neg
sub
mov
daa
pop
cmp
mov
lds
in
mov
dec
ret
cmp
call
stos
mul
mov
out
loopne
mov
sbb
mov
ret
popf
mov
sbb
popf
jecxz
test
sbb
add
inc
add
mov
fucomi
int3
add
add
or
hlt
mov
mov
int3
xlat
xchg
xchg
ds
xchg
add
jecxz
ret
stc
faddl
add
jae
es
int3
pop
xchg
xchg
lcall
sub
sbb
push
popf
xchg
dec
mov
inc
popf
adc
mov
pushf
pop
rolb
pop
sbb
cmp
xor
repz
adc
xor
mov
cltd
pop
mov
mov
pop
xchg
in
test
icebp
test
sub
mov
add
adc
movsb
adc
mov
cltd
movsb
mov
mov
das
cld
adc
mov
aas
add
mov
mov
in
pop
adc
sti
and
mov
clc
mov
inc
pop
mov
out
xchg
or
add
add
out
fdivrs
add
xchg
ficoml
fsubs
mov
test
sub
dec
lcall
xor
mov
movsb
cltd
out
icebp
mov
add
scas
addr16
mov
pop
or
mov
cmp
out
rolb
mov
call
add
inc
mov
mov
rolb
and
dec
push
mov
arpl
push
add
push
mov
leave
push
dec
adc
mov
add
add
add
or
jl
xor
add
add
mov
mov
jno
sbb
xor
mov
mov
cmp
xlat
lret
jb
mov
pop
or
xchg
and
mov
subl
dec
insb
mov
fwait
call
xchg
fxch
mov
mov
mov
add
add
loope
fisubs
push
jg
sub
addb
mov
add
fucomi
lods
lods
jae
jae
dec
rolb
mov
pushf
outsb
jnp
cli
out
addb
or
or
mov
iret
aad
incb
mov
adc
adc
push
mov
data16
das
pop
push
add
imul
sub
add
stos
decl
add
cmp
mov
add
add
hlt
inc
add
mov
cwtl
dec
sub
xchg
insl
push
add
inc
pop
push
add
add
out
or
add
cmp
imul
push
fsubrp
outsl
data16
jmp
xchg
testb
stos
jp
call
daa
inc
aaa
cmc
nop
add
fstpt
jl
add
lock
jge
xchg
push
add
mov
das
cli
scas
cmp
push
out
jle
movsb
sbb
iret
scas
pusha
add
mov
bound
mov
cmp
sbb
mov
add
pop
or
add
add
or
add
add
mov
jecxz
lahf
mov
sub
jmp
cmp
cli
inc
sbb
pop
rol
cld
insb
in
cmp
rorl
push
jp
add
sbb
pop
xor
daa
pop
inc
addr16
cli
repz
add
inc
out
aad
pop
out
add
imul
mov
mov
add
inc
mov
repz
mov
popa
pop
add
inc
jbe
add
mov
mov
add
rolb
mov
pop
int3
loope
shl
or
mov
add
call
push
lret
out
fwait
outsl
jbe
popf
pop
add
mov
mov
jo
mov
mov
repz
xchg
lahf
jp
add
mov
nop
add
mov
pop
ss
pop
and
mov
sub
out
cmp
sbb
push
add
jmp
mov
pusha
add
sub
sahf
lret
dec
into
mov
push
arpl
inc
add
mov
mov
mov
data16
cmpsl
popa
mov
sbb
in
jnp
add
push
xor
add
add
fs
mov
jmp
add
mov
mov
cli
rolb
mov
daa
rcrl
js
out
fwait
sub
mov
in
add
cmp
pop
cmc
dec
in
mov
mov
mov
aas
mov
pop
and
cli
insl
cmp
push
pop
addr16
sbb
adc
enter
stc
jns
jl
pop
adc
mov
call
sbb
js
pop
push
add
xchg
outsl
adc
and
mov
rcrl
jns
cmp
clc
data16
push
add
scas
jg
fldcw
dec
push
into
lods
or
add
js
lahf
pop
scas
xchg
add
dec
pop
dec
outsb
js
jmp
xchg
insl
push
mov
dec
dec
mov
sahf
lea
fstps
ljmp
pop
mov
ret
push
sbb
mov
inc
add
arpl
jle
add
mov
mov
sbb
addr16
add
incl
in
nop
add
inc
push
out
add
and
inc
push
push
pop
es
inc
add
pop
stos
test
loope
add
xchg
in
sbb
mov
add
mov
xchg
test
int
or
add
add
inc
cmp
inc
lret
scas
push
pop
je
dec
push
mov
push
add
jae
gs
jbe
mov
jae
pushf
xchg
mov
mov
mov
scas
ficoml
or
es
cli
fstps
add
inc
imul
mov
mov
dec
mov
jbe
mov
hlt
das
jmp
or
jle
add
cmc
and
addr16
mov
mov
mov
add
adc
repnz
adc
mov
mov
movsl
xchg
ja
out
jb
mov
add
mov
cltd
dec
xchg
and
adc
mov
mov
jg
out
mov
pop
lock
ret
dec
popf
and
add
addb
pop
cltd
leave
cld
inc
mov
insb
pop
pop
sbb
mov
sbb
fwait
iret
xor
add
iret
lahf
aad
cmp
add
aas
or
and
movb
xchg
add
cwtl
sub
xchg
int
add
mov
or
mov
adc
mov
scas
hlt
mov
test
aam
xor
sbb
clc
mov
mov
fdivl
popl
xor
mov
sub
aas
sbb
sub
movsl
dec
and
mov
adc
iret
push
ror
jmp
dec
mov
adc
add
lret
mov
dec
mov
pop
out
test
add
add
call
test
mov
stos
clc
pusha
add
mov
rolb
mov
cmpsl
or
cli
jp
lea
in
lcall
cmp
mov
mov
cmp
cmpsl
aad
xlat
movsb
pop
sub
inc
fstp
stc
add
push
jb
mov
mov
xor
aaa
push
and
inc
stos
loope
inc
das
pop
lret
icebp
in
sar
push
movsb
jne
add
add
inc
lret
mov
je
addb
stos
faddl
mov
jae
pop
mov
insl
je
sbb
test
add
mov
leave
xchg
aaa
in
fwait
pushf
cmp
jo
mov
and
mov
mov
push
add
pop
mov
xlat
mov
add
add
divl
sahf
mov
mov
cmp
add
cmpsl
mov
xor
mov
mov
bound
mov
mov
add
outsb
and
xor
push
pop
cli
dec
sbb
add
add
imul
in
inc
pop
mov
xor
mov
inc
rolb
mov
mov
mov
xchg
push
adc
mov
add
pushf
enter
mov
mov
sbb
loope
in
mov
cmpsb
ja
stos
inc
add
add
push
repz
adc
mov
pop
cmpsl
push
add
mov
pop
daa
frstor
mov
mov
cmp
sbb
pop
jne
in
sbb
test
push
and
ja
pop
xor
sbb
ss
add
mov
add
jle
adc
scas
out
xchg
xchg
cmc
pop
and
inc
and
mov
pop
sbb
xor
mov
gs
gs
hlt
gs
pop
add
mov
add
xor
add
or
ss
lods
jno
dec
stc
mov
mov
push
or
leave
ja
sbb
cmc
nop
add
push
sub
mov
add
jbe
insb
pop
pop
pop
loop
mov
inc
push
aas
pusha
add
jmp
pop
rolb
mov
add
push
outsb
cmpl
mov
jns
pusha
add
div
add
cmpsb
lret
xor
mov
push
lods
push
jmp
and
jns
rolb
mov
addb
js
add
xchg
cmc
mov
insb
push
jl
add
sub
add
pop
mov
loop
mov
mov
xchg
std
ds
aad
imul
fcompl
mov
mov
or
shll
add
mov
mov
scas
imul
cmp
add
or
sbb
xchg
pushf
mov
mov
or
mov
outsl
and
les
jmp
cwtl
lret
sub
or
add
fwait
push
in
fldl
mov
cmp
xchg
xchg
mov
xchg
addb
adc
push
sub
out
ret
std
mov
and
add
dec
and
imul
lods
xor
inc
push
mov
mov
add
mov
add
adc
lahf
test
push
push
sub
add
leave
push
dec
or
xor
add
repnz
and
and
rolb
mov
mov
sti
cs
cmp
add
inc
into
ret
dec
jmp
add
add
mov
mov
iret
pop
pop
cwtl
pop
ret
mov
mov
cmp
and
sub
add
mov
sub
ja
iret
sahf
sbb
call
cmp
cmp
inc
aam
adc
sub
lods
push
push
lahf
icebp
push
pop
rolb
scas
jns
xchg
add
and
add
xchg
lea
ficomps
mov
sub
jne
pop
jecxz
imul
push
lahf
icebp
add
loopnew
mov
mov
je
pusha
add
add
cmp
mov
sarl
xor
mov
adc
mov
sub
dec
cmp
add
mov
push
int
jae
add
pop
jbe
mov
add
inc
add
inc
jg
sub
sub
addb
call
lea
add
jge
sub
pop
xor
mov
leave
sub
mov
dec
arpl
sti
jnp
jo
mov
jbe
add
mov
mov
inc
xor
addb
lret
mov
mov
mov
scas
push
add
sub
shrl
or
insl
sti
push
cmp
mov
mov
dec
and
std
leave
lret
call
and
das
dec
inc
fstp
fists
cmc
aaa
cld
pop
push
cld
lea
adc
and
mov
mulb
out
xchg
mov
int
iret
fadds
mov
pop
test
mov
addb
js
mov
push
fs
dec
lret
sub
test
or
and
adc
mov
add
mov
test
pop
and
mov
out
xchg
pop
lret
cmp
in
and
jae
push
xor
mov
sbb
cmpsl
mov
clc
andl
daa
jmp
lahf
scas
sbb
xor
mov
bound
mov
pushf
pop
pop
and
sub
xchg
test
hlt
cmpl
xchg
jge
adc
cli
or
jne
out
repz
or
jnp
jge
enter
mov
push
sub
int
addb
sub
mov
cmpsl
mov
aaa
inc
add
cwtl
inc
addb
pushf
rorl
outsl
scas
push
adc
mov
sub
ficoms
cmp
and
add
mov
addb
dec
push
punpckhdq
mov
pop
ds
dec
cmpsb
mov
pop
mov
pop
insb
hlt
testb
mov
add
add
rcr
sub
mov
mov
add
faddl
xchg
or
lahf
repnz
ret
mov
mov
int
fs
add
mov
es
mov
sub
in
add
sub
or
cmp
pop
xchg
mov
ret
rorl
add
aad
out
popa
lods
cld
fidivrs
test
in
push
insb
iret
aad
cwtl
rolb
push
inc
add
bound
mov
cmp
add
aad
int
mov
or
add
lods
inc
adc
mov
mov
mov
mov
pop
jns
int3
sbbl
int3
cmp
sub
xchg
in
lcall
loop
mov
mov
test
adc
mov
mov
inc
sub
in
stos
push
add
sub
pop
int3
in
addb
xor
or
mov
adc
mov
gs
cmp
sub
jnp
push
out
lock
cwtl
ds
adc
adc
ret
cmp
mov
mov
mov
mov
mov
xchg
jp
pop
scas
lahf
push
cmpsl
pop
mov
repnz
fsubrp
out
je
in
ret
test
sbb
mov
push
mov
sub
fadds
add
insb
enter
lahf
sbb
sub
add
mov
add
mov
mov
decl
aam
mov
mov
lock
add
xchg
adc
add
pop
sbb
jne
add
fst
pop
nop
add
mov
push
push
or
lods
out
inc
xor
mov
xchg
addb
addb
and
clc
call
jb
mov
add
mov
mov
xchg
add
fbstp
or
test
leave
dec
cli
loope
es
add
add
dec
cmpsb
jne
call
jl
mov
add
out
shll
adc
add
add
inc
mov
mov
add
add
sar
ud1
fldl
mov
addb
pop
xchg
scas
lock
lcall
add
xor
mov
add
and
mov
xchg
movsb
dec
outsb
and
xchg
push
add
loope
or
enter
repz
scas
das
mov
mov
mov
add
mov
or
push
int
add
push
aas
cmp
mov
add
mov
in
dec
sub
lret
clc
fmuls
xchg
dec
or
js
add
in
jmp
pop
ror
dec
mov
add
js
rolb
cs
sub
adc
mov
pusha
add
insl
inc
test
pushf
pop
ljmp
outsl
fldcw
aaa
jle
add
ficomps
add
es
xor
push
jmp
push
add
inc
add
mov
das
mov
pop
incl
xor
mov
fwait
push
inc
pushf
mov
rcl
popa
int
movsl
xchg
add
and
cmp
sub
dec
mov
mov
mov
mov
push
xor
int3
adc
mov
lcall
mov
mov
inc
add
pop
sub
sbb
aad
jo
mov
divb
add
add
add
addb
test
jne
add
ss
inc
dec
xchg
mov
xlat
pushf
add
and
add
mov
cmpsl
mov
add
movsb
mov
mov
push
fs
sbb
stos
test
or
pop
dec
shll
mov
jb
mov
add
mov
xchg
cltd
iret
cltd
insb
mov
or
fisubrl
or
inc
add
add
repz
add
add
add
mov
arpl
insb
sti
pop
mov
repnz
mov
push
fs
imul
adc
and
mov
aaa
dec
pop
cld
in
insl
loop
mov
mov
stc
push
add
mov
loop
mov
mov
cmpsl
push
repnz
or
mov
mov
and
mov
add
pop
mov
lcall
adc
jb
mov
pop
daa
std
mov
fimull
cli
xchg
sub
mov
mov
lcall
add
sbb
cwtl
aaa
dec
cmpsb
adc
mov
pop
popf
lea
fidivrl
xor
mov
add
mov
mov
int3
add
leave
cmp
pop
and
mov
imul
add
out
fistl
test
mov
add
add
fldcw
nop
add
fildll
clc
push
xchg
mov
fcompl
adc
add
in
fs
iret
and
decl
or
nop
add
call
jne
sahf
sub
and
mov
iret
xchg
stos
mov
add
in
aad
push
mov
lcall
adc
adc
mov
mov
dec
pop
dec
test
mov
sbb
xchg
das
lock
jmp
sbb
add
xchg
mov
add
mov
add
xor
pop
les
psrld
mov
in
divl
inc
cmpsl
cli
mov
inc
sbb
fadds
inc
inc
add
sub
cmp
mov
movsl
sub
outsl
test
adc
mov
sub
push
jae
cmpsb
data16
popf
cmp
mov
sbb
or
add
out
mov
iret
cltd
inc
push
add
ret
mov
pop
adc
adc
lret
mov
loope
in
sub
in
sub
xchg
je
push
inc
xor
fisubl
add
xchg
dec
sbb
dec
sub
lods
pop
lret
lock
mov
mov
mov
andl
mov
mov
lret
rolb
mov
mov
pop
testb
jbe
or
cmp
jns
cmp
addb
test
mov
xchg
stos
out
ret
clc
call
add
mov
pcmpeqb
add
mov
in
push
add
xor
push
add
push
and
mulb
pop
xlat
lods
test
sub
xchg
inc
add
mov
leave
push
inc
xor
mov
mov
mov
mov
xor
mov
popa
lock
nop
add
lock
dec
mov
mov
sub
add
add
pop
sbb
add
push
fimull
es
movsl
es
inc
add
sbb
xchg
cmp
sbb
or
data16
add
pop
add
sub
inc
jb
mov
dec
jno
dec
iret
ficoml
pop
sahf
int
jg
add
mov
cmp
dec
sbb
mov
cmpsb
scas
and
adc
enter
pop
dec
test
scas
xchg
pop
pop
shll
mov
test
mov
mov
and
mov
pusha
add
add
out
mov
jge,pn
add
lea
add
add
add
jle
cmpsl
cmp
xchg
adc
popf
cmpsb
in
popf
or
mov
mov
xor
jecxz,pn
jnp
and
add
cmp
pushf
cmc
sub
adc
outsl
inc
add
jae
cmc
bound
mov
and
mov
rcll
jecxz
loopne
mov
xlat
stc
pushf
adc
or
add
xor
sbb
enter
in
inc
cmc
inc
out
sti
or
mov
add
xchg
imul
adc
add
mov
addb
std
inc
add
mov
sub
lret
cld
jns
ret
inc
test
mov
mov
lret
fidivs
stc
jg
add
fmuls
mov
in
rolb
pop
xchg
xchg
mov
or
add
mov
push
sub
dec
sbb
jp
adc
stc
leave
mov
pop
insb
out
cmp
add
out
add
loope
gs
imul
nop
add
arpl
push
xchg
stos
pop
es
dec
roll
and
jecxz
popf
inc
bound
mov
cmc
js
push
mov
add
nop
add
std
push
scas
pusha
add
mov
mov
add
test
and
or
movsb
inc
jbe
jg
int
add
sub
jp
mov
neg
xchg
pop
xchg
mov
dec
das
jmp
fldenv
jg
add
pop
lcall
aaa
or
jl
inc
jno
ja
sbb
mov
sub
xchg
mov
dec
xor
xor
loopne
mov
iret
mov
xchg
in
push
std
mov
cmp
mov
arpl
aad
dec
lret
push
cmp
dec
pop
popa
or
iret
clc
xchg
rolb
rolb
mov
sub
xor
mov
add
into
insl
mov
rolb
mov
fs
add
cmpsl
aad
dec
jae
lret
cltd
xlat
jmp
sbb
mov
lcall
inc
add
test
dec
dec
mov
dec
add
insl
fdivrl
add
mov
add
fildl
dec
dec
in
leave
rcl
loop
mov
pop
fdivr
xchg
movsb
lea
test
dec
cld
mov
pop
imul
std
inc
add
jl
ss
popf
nop
add
add
mov
xchg
pop
sub
add
nop
add
mov
push
adcl
mov
cwtl
mov
es
pop
push
pop
mov
lea
add
mov
adc
sahf
xor
test
or
mov
cmc
enter
and
adc
mov
scas
notl
mov
rolb
outsb
dec
inc
cmpsb
hlt
in
mov
lret
cwtl
inc
insl
push
sti
clc
and
mov
or
popa
inc
dec
aad
rolb
mov
mov
lret
cmp
adc
pushf
ret
xchg
add
push
andl
add
mov
add
mov
push
stc
into
push
push
and
pop
mov
dec
mov
and
mov
sahf
jne
repnz
icebp
iret
nop
add
ljmp
or
in
sbb
inc
add
mov
push
lcall
loope
jnp
lods
xor
mov
xor
mov
adc
stos
cmp
mov
add
sbb
ss
clc
add
mov
lods
wrmsr
add
fdivl
mov
nop
add
fsubr
adc
mov
dec
pop
popa
mov
mov
leave
addr16
fdivrs
push
xor
mov
add
mov
mov
jl
fistl
jae
cmp
xor
sub
add
cmp
mov
mov
sbb
add
es
std
xchg
fiadds
in
cmp
inc
insb
xlat
into
movsl
dec
and
mov
enter
lret
add
repnz
inc
add
cmovs
mov
add
mov
dec
jns
and
repnz
repz
pop
dec
pop
hlt
sbb
xchg
push
add
lods
jmp
inc
mov
dec
dec
or
mov
mov
mov
push
xchg
inc
add
and
lods
in
aam
ja
pop
and
pop
sbb
insl
testl
push
sbb
dec
mov
sub
mov
movsb
xchg
aad
mov
mov
mov
stos
gs
mov
sbb
out
movsl
fwait
jge
rolb
mov
mov
sub
xor
jnp
ss
add
test
js
add
repnz
mov
test
add
add
orl
or
je
inc
stos
std
mov
xchg
push
add
int
sbb
add
mov
lea
add
push
push
mov
sbb
push
add
divl
mov
adc
add
add
je
and
mov
push
and
mov
inc
repz
dec
mov
out
in
jns
cmp
xor
jecxz
cmpsb
testb
add
xchg
stos
imul
bound
mov
idivb
adc
add
mov
jbe
add
gs
lret
sub
fs
mov
insl
dec
or
mov
notl
out
xchg
sti
mov
popf
inc
pop
nop
add
xor
sub
cwtl
and
mov
sbb
add
add
ljmp
jge
jl
cmpl
lret
addr16
inc
push
mov
mov
sbb
jne
inc
bound
mov
mov
mov
sbb
push
hlt
sahf
ds
lret
add
ja
mov
sahf
add
dec
cmp
add
aas
mov
kxnorw
add
dec
addr16
sub
mov
jl
repz
cs
xor
mov
fwait
or
insl
rolb
mov
mov
xchg
add
add
xor
and
add
add
mov
mov
jmp
stc
add
cmp
clc
stc
mov
sbb
pop
bound
mov
or
nop
add
push
or
pusha
add
mov
fnstsw
xchg
mov
add
clc
addb
sbb
aam
add
into
pop
in
add
push
mov
mov
inc
mov
mov
sahf
lods
mov
xchg
lahf
mov
add
sub
cli
jmp
add
dec
sub
add
inc
rolb
mov
add
lods
cld
inc
add
push
mov
jb
mov
push
mov
xchg
push
mov
aas
mov
add
push
loopne
mov
pushf
add
mov
mov
sahf
into
fnsave
sbb
push
add
xchg
add
push
xor
add
jno
dec
cmp
lds
mov
das
and
push
dec
adc
add
add
push
insb
xchg
mov
scas
lea
mov
pop
lret
mov
add
dec
push
in
outsl
adc
mov
rolb
cmpsb
adc
mul
call
lret
add
fwait
sub
test
add
sbb
insl
ja
jl
add
out
mov
ret
adc
jge
jmp
jp
add
mov
xor
das
pop
lods
mov
cmp
add
add
dec
jae
or
pop
mov
sbb
das
je
or
add
int3
xchg
push
push
pop
jb
mov
pop
xchg
inc
jg
sbbl
sbb
out
je
imul
mov
addb
inc
adc
dec
scas
mov
add
jnp
ret
jo
mov
add
or
fdivl
mov
add
adc
mov
add
adc
sbb
popf
in
cmc
fldl
mov
ret
scas
sub
add
and
mov
jle
das
mov
mov
xchg
add
fldcw
or
daa
sub
jns
lret
rorl
add
jo
mov
test
add
mov
insl
adc
adc
mov
sbb
push
push
test
stos
ss
add
push
mov
add
cmc
cwtl
movsb
sub
rolb
stos
jmp
ret
pop
fwait
sub
add
push
add
insb
rolb
cmp
adc
add
cmp
in
stc
fisubrs
fldl
inc
add
rcll
add
jnp
add
mov
adc
mov
sbb
mov
pushf
cmpps
or
mov
pusha
add
cltd
insb
mov
rcrl
mov
sbb
test
loop
mov
or
cmp
sub
dec
iret
fcoml
outsb
push
scas
popf
push
popf
jecxz
dec
push
xor
out
cmp
rolb
mov
add
dec
addb
ret
cs
nop
add
sbb
dec
cs
mov
fbld
rolb
mov
xor
mov
addb
insl
add
add
lret
xchg
xor
mov
cmpl
xlat
ds
mov
pop
cltd
sub
mov
icebp
inc
lods
ret
push
pop
xor
fistps
test
aas
and
test
xor
addb
movsb
mov
jge
stos
iret
in
push
cld
cld
mov
andl
mov
mov
inc
add
push
daa
mov
add
add
add
es
mov
pop
jne
mov
mov
xchg
adc
mov
call
frstor
xchg
fisubrl
pop
dec
faddp
leave
insl
xchg
sti
rol
add
dec
push
mov
mov
cltd
inc
xchg
add
mov
pop
pop
in
mov
mov
jne
fisubl
add
sub
xor
mov
ficomps
add
mov
jmp
movb
jmp
and
adc
mov
add
int
jae
add
mov
push
add
add
shrl
fucom
adc
jae
rcrl
push
loop
mov
add
pop
mov
out
pop
jg
movsl
inc
add
mov
dec
stc
cmp
push
std
cmp
mov
sub
inc
je
add
mov
insb
adc
mov
adc
inc
lcall
add
int3
cmp
cmc
pop
xrelease
add
jb
mov
mov
add
mov
or
mov
push
arpl
mov
pop
fsubrs
add
pop
push
bound
mov
fwait
xchg
dec
mov
aaa
dec
sub
movsb
jns
cld
rolb
mov
repnz
int3
enter
or
push
add
add
and
adc
mov
lds
xchg
jb
mov
enter
lock
mov
xchg
xor
xor
cli
pop
int3
in
mov
mov
inc
hlt
js
dec
and
out
adc
jmp
mov
lods
aas
ror
add
rolb
dec
dec
iret
stc
dec
incb
inc
repnz
rcrl
sahf
loopne
mov
mov
dec
out
mov
sub
add
mov
add
mov
pop
stc
pop
inc
or
add
stos
push
add
cmp
aaa
jb
mov
mov
jne
rcrl
xchg
add
mov
stc
mov
adc
int3
out
je
sub
mov
mov
mov
mov
rcr
add
push
outsb
pmullw
sbb
sub
add
mov
mov
enter
jecxz
lds
add
aaa
rolb
xchg
add
addb
fs
aad
add
jmp
lret
xchg
pop
rolb
mov
sub
mov
xor
or
les
sbb
out
xor
mov
lock
int3
hlt
jns
jmp
mov
ret
sbb
add
mov
pop
xlat
mov
mov
fsubrl
loope
flds
mov
imul
cmp
ret
pop
inc
add
jno
imul
xchg
imul
outsb
xor
mov
cmp
pop
cli
inc
rolb
xor
mov
insl
popa
pop
rolb
mov
mov
insb
xor
neg
je,pt
icebp
pop
cld
pop
das
pop
xchg
add
ret
mov
xchg
mov
lret
hlt
sti
mov
dec
adc
add
add
repz
mov
cmc
xchg
cs
loopne
mov
and
mov
and
imul
add
mov
sahf
fs
or
or
icebp
and
mov
popf
sarl
xchg
adc
xchg
bound
mov
imul
or
and
add
leave
jnp
xor
dec
test
aaa
sub
push
test
pop
pop
jbe
cmp
ret
lods
add
mov
jno
mov
sti
or
push
fiadds
cmpsl
or
mov
inc
fistpl
add
aas
test
je
push
add
add
mov
mov
mov
ljmp
cltd
jae
int
outsb
scas
sbb
lcall
outsl
jo
mov
ret
and
mov
cmc
inc
orl
push
fisubrs
gs
cmp
pop
movsb
test
cltd
stos
xor
or
out
icebp
loope
mov
sbb
xor
mov
push
push
rol
jnp
inc
aam
pushf
cmp
dec
xchg
jnp
pushf
imul
dec
cld
xchg
stos
push
lret
dec
lds
aam
add
mov
lock
sti
or
mov
or
fs
mov
xor
mov
and
icebp
adc
or
add
mov
add
mov
fildll
and
out
lods
cmpsl
mov
repz
insl
sub
and
mov
not
add
sbbl
test
aas
xlat
dec
push
in
sub
cmpsb
add
push
pop
aaa
repz
jle
xor
add
pop
scas
hlt
out
mov
leave
xor
add
mov
cli
fwait
jne
or
xchg
push
mov
push
sbb
jg
push
cmp
add
mov
add
jns
int3
mov
and
xchg
call
fwait
mov
adc
jl
inc
jb
mov
imul
loop
mov
jbe
fstps
test
mov
jl
aas
or
jmp
in
xor
mov
out
ret
lahf
push
in
das
nop
add
call
cmp
aaa
lahf
rolb
mov
push
add
pop
pop
pop
sbb
cmp
add
add
sti
dec
mov
mov
inc
jno
dec
dec
enter
inc
insb
cld
imul
add
adc
iret
mov
cltd
add
mov
jp
add
pop
cmp
add
mov
add
lods
fcoms
add
js
xchg
fcomi
inc
add
insl
adc
mov
add
out
dec
mov
cmp
inc
jno
add
call
push
push
lahf
cmp
insl
dec
and
add
dec
add
adc
mov
test
jno
cltd
cmpl
xchg
ficompl
insb
fpatan
iret
or
add
add
faddl
xor
test
add
add
inc
add
add
mov
cmpl
add
pushf
sbb
int3
add
push
pusha
add
add
jno
in
mov
in
xor
or
add
adc
mov
sbb
pop
inc
add
adc
fmuls
cmc
pop
lea
add
dec
inc
fsub
mov
popf
add
mov
sbb
mov
mov
add
jae
xchg
mov
mov
js
add
xchg
movsb
fsubl
in
add
ljmp
pop
mov
orl
fsubr
daa
out
adc
cs
xchg
inc
add
cmp
mov
in
jg
mov
add
cs
inc
sbb
xor
mov
adc
push
mov
add
adc
or
rolb
mov
into
or
mov
adc
xchg
xor
mov
cmpsb
bound
mov
xor
mov
xlat
lds
mov
fs
mov
jns
add
lret
jnp
cmp
fstpt
adc
xor
mov
pop
jge
dec
mov
lcall
ret
test
dec
movsl
stc
cmp
mov
cmp
pop
jge
sbb
xchg
bound
mov
add
add
pop
cli
fmuls
ljmp
ss
mov
inc
push
push
add
add
movsl
cli
push
push
outsb
insb
or
adc
lock
js
xchg
jg
push
add
add
orl
add
pop
add
add
add
add
std
pop
add
jo
mov
and
add
jl
sub
sbb
add
push
mov
add
addb
and
add
pop
mov
fnstsw
xor
mov
pop
jns
loop
mov
and
mov
dec
mov
popa
sahf
outsl
in
mov
add
loope
add
popa
or
ret
and
popa
insl
jnp
add
mov
repz
sub
sbb
push
mov
jnp
in
jmp
lret
mov
mov
xchg
out
out
push
cmp
dec
lahf
ja
mov
jmp
and
mov
addl
add
mov
mov
push
and
or
mov
mov
add
add
stc
rorl
repz
mov
pop
push
add
fs
jno
ficomps
sti
into
ss
add
lock
rolb
into
adc
mov
std
jecxz
add
mov
faddl
mov
push
jge
adc
jne
stos
adc
mov
add
add
aaa
hlt
rolb
mov
les
test
add
mov
add
mov
test
cmc
nop
add
in
sbb
mov
mov
mov
loop
mov
adc
mov
add
inc
add
orl
fistpl
hlt
sub
fistpll
and
lcall
add
jne
in
cmc
in
push
and
mov
stc
push
jle
push
add
cmp
inc
lahf
in
add
jae
xlat
xor
mov
and
mov
add
add
push
xor
icebp
es
gs
xor
pop
xor
pushf
xor
mov
add
lods
and
out
rolb
mov
cwtl
mov
mov
in
ds
mov
ds
das
xchg
mov
add
rcll
cs
enter
cwtl
scas
push
mov
cmp
es
mov
and
jns
mov
sti
mov
add
add
in
add
and
mov
int3
scas
fmuls
or
add
xchg
outsb
addl
push
push
fdivl
xor
mov
aas
aam
scas
fdivr
aaa
jno
push
ja
push
xor
ds
mov
add
movsb
push
ja
cli
pop
ffree
aas
mov
inc
ja
add
push
add
movsb
mov
loope
icebp
jg
dec
lcall
test
dec
mov
popa
loope
add
jae
push
dec
pusha
add
scas
and
aam
test
outsb
xchg
mov
movsb
cmpsl
push
cmpsb
jno
mov
popf
mov
addb
or
add
loop
mov
add
add
movsl
xlat
cld
lea
mov
adc
addb
pop
mov
xchg
ret
js
and
jg
xor
mov
add
mov
add
nop
add
fnstsw
add
in
add
jmp
or
jle
add
pop
jae
sub
pop
js
push
ficoml
xchg
push
lahf
jae
lock
push
pop
mov
mov
aaa
add
add
mov
add
lods
push
das
popf
arpl
stc
in
mov
inc
jo
mov
shll
pusha
add
xlat
call
push
jno
push
add
jno
add
js
cmpl
mov
mov
sub
add
xchg
xor
mov
test
in
ljmp
cmpsl
pop
sbb
add
adc
mov
xchg
pop
push
sub
cmpsl
out
aas
push
rolb
mov
xor
jnp
push
add
sub
dec
divl
lret
lods
fimull
dec
jg
mov
add
xchg
lods
xchg
or
addl
mov
inc
pop
stos
cld
fs
dec
inc
addr16
sub
inc
sub
add
mov
push
loope
add
add
add
cmpsb
scas
icebp
inc
mov
mov
inc
mov
ljmp
shrl
mov
mov
js
mov
iret
sub
add
mov
add
mov
add
iret
movups
sbb
add
mov
imul
idivb
lret
mov
mov
in
sarl
cmp
fwait
testl
fcomp
or
cld
cmp
add
adc
mov
adc
mov
add
stos
dec
mov
sbb
pop
xor
inc
jle
addr16
std
push
ljmp
adc
adc
mov
mov
add
aas
mov
lds
ds
lock
cmp
lcall
push
add
inc
add
sub
and
mov
mov
leave
sbb
mov
lret
mov
mov
add
mov
std
sbb
int
dec
popf
fstps
rcll
les
add
add
inc
movsb
mov
in
mov
dec
scas
test
sub
in
adc
inc
lods
shr
push
add
sub
jg
outsl
xchg
xor
sub
mov
mov
xchg
add
mov
push
jge
addb
sub
aam
add
add
pusha
add
mov
cmp
adc
mov
or
leave
je
or
add
add
stc
fisttps
or
mov
in
jae
pop
xor
fcmovb
add
data16
cmp
clc
testl
jl
add
sbbl
outsl
insb
sub
jg
out
jg
imul
outsb
dec
in
into
fisubrs
lcall
stos
and
mov
adc
mov
sbb
xchg
push
cmp
in
inc
add
mov
add
cmp
adc
sbb
fistps
rolb
mov
mov
add
mov
jl
ja
and
shr
mov
add
lods
adc
adc
mov
ds
inc
mov
insl
addb
sub
xchg
loope
pop
test
dec
out
jmp
or
add
pushf
xchg
pop
xor
pop
jle
jns
jmp
bound
mov
lods
loop
mov
push
xor
add
sub
fisttpll
jle
xchg
pop
xchg
pop
out
adc
mov
pop
dec
fnstsw
or
or
dec
imul
mov
mov
lods
jge
cvtps2pd
fnstcw
arpl
dec
frstor
mov
mov
add
dec
xor
mov
add
xchg
adc
addb
test
jmp
repnz
mov
add
es
mov
add
sub
mov
ja
add
ljmp
movsl
mov
cmp
xor
movsb
jb
mov
jbe
insl
lea
xor
mov
add
mov
sbb
mov
cwtl
mov
pushf
les
or
aad
sub
or
in
cli
in
add
add
add
pop
or
rolb
mov
push
mov
idivl
cltd
lahf
pop
lea
add
mov
mov
jmp
fnstsw
pmuludq
xchg
push
xchg
mov
das
jge
mov
adc
jge
add
or
hlt
push
out
pop
rorl
and
imul
and
mov
das
nop
add
pop
mov
cmp
xchg
sbb
addr16
cmp
lock
stos
in
jo
mov
mov
std
lock
mov
mov
add
fdivl
add
mov
add
xchg
add
jmp
xchg
xchg
addb
addr16
repz
lea
fnsave
cmp
pop
in
icebp
mov
add
mov
mov
xchg
test
lahf
push
xor
ss
aad
ret
xchg
cmp
lret
pop
or
push
jecxz
dec
fwait
adc
jnp
les
cltd
out
sbb
inc
add
push
jnp
add
mov
popa
xor
add
xchg
stos
cwtl
mov
insl
icebp
jbe
std
movsl
aas
pusha
add
mov
jp
add
les
xor
mov
add
pop
cmp
js
stc
dec
mov
mov
mov
sub
push
add
dec
dec
popf
xor
jne
xchg
rolb
and
adc
mov
add
cs
or
inc
add
mov
repnz
rolb
mov
stos
add
dec
movsl
inc
add
xor
out
pop
or
negb
cs
and
mov
sbb
int
dec
insb
scas
or
add
mov
add
xor
jmp
add
cmp
mov
dec
ss
adc
addb
movsb
shl
jae
movsb
out
cmp
add
add
jecxz
jge
pop
mov
ret
and
fdivrp
or
mov
and
cmp
jnp
add
xchg
aaa
sbb
jbe
and
rolb
mov
add
test
mov
xor
lcall
push
pushf
stos
adc
mov
jne
dec
jl
imul
add
push
sbb
inc
add
jge
or
cld
fnsetpm(287
cmpsl
negl
adc
add
mov
add
mov
pop
xchg
gs
dec
jne
gs
test
pop
pop
mov
imul
push
inc
je
jl
pop
or
fwait
push
in
pop
push
mov
fmul
fiaddl
mov
jnp
addr16
loopne
mov
daa
push
or
push
add
popf
push
mov
pop
mov
push
loope
in
sbb
dec
leave
aam
in
and
mov
dec
pop
loope
fldenv
add
or
add
ss
pusha
add
popa
xchg
mov
xchg
jl
xchg
add
test
mov
add
add
adc
mov
pop
xor
add
jb
mov
ja
add
aas
cmp
pop
push
inc
inc
into
add
mov
add
fsubl
jo
mov
pop
iret
jno
lock
adc
add
jle
inc
push
aas
xchg
add
or
sub
adc
outsb
or
lods
ret
mov
push
fidivrl
jle
add
testb
add
add
outsb
pop
cmpsb
push
sti
push
xor
mov
dec
hlt
dec
lods
cs
cmp
xchg
aas
xor
mov
or
mov
in
loopne
mov
adc
notl
xchg
inc
add
scas
adcl
outsb
mov
imul
fisubs
jnp
inc
add
rolb
mov
mov
jecxz
stos
cs
lret
into
pop
push
mov
fmull
add
dec
mov
sbb
xchg
insb
push
pop
pop
mov
mov
mov
mov
mov
bound
mov
ret
into
mov
ret
lret
das
invd
mov
add
scas
dec
mov
mov
add
call
mov
insl
mov
rorl
push
pop
repnz
push
not
push
imul
mov
mov
add
and
outsb
lcall
jge
push
mov
cmp
imul
mov
jmp
rolb
mov
mov
xchg
pop
arpl
cmc
or
faddl
add
mov
mov
mov
xchg
popf
mov
loope
add
xchg
jnp
orl
jno
sub
pop
pusha
add
inc
rolb
xchg
add
fldenv
push
pusha
add
cmp
inc
add
std
fucomp
movsb
movsb
insl
pop
movsl
jno
xor
mov
sbb
shll
inc
test
cli
in
and
add
sub
out
mov
test
fwait
cli
pop
xchg
dec
fsubs
dec
clc
push
add
cmp
stos
xor
add
mov
int3
shl
pop
insb
loope
add
mov
sbb
into
dec
mov
mov
std
xchg
sub
enter
xchg
aaa
arpl
mov
mov
add
ret
int3
sbb
push
xchg
push
test
xor
mov
mov
loop
mov
add
adc
pusha
add
pushf
mov
cld
test
push
stos
jnp
movsb
pop
jae
add
in
or
add
call
rolb
xchg
mov
jp
jp
shl
mov
loope
add
mov
sub
push
add
add
mov
addb
xchg
mov
xor
mov
cmpsl
bound
mov
mov
pusha
add
add
pop
jmp
mov
or
cmp
mov
adc
mov
loope
mov
jno
push
inc
sbb
mov
sub
insb
and
add
repnz
sub
adc
mov
je
jbe
adc
mov
jae
fcomps
mov
mov
xor
cli
xor
and
mov
xor
or
test
movl
add
dec
pop
push
enter
cli
shl
clc
fistl
push
add
std
popa
insl
inc
add
adc
mov
jbe
add
out
add
mov
fs
mov
pop
bound
mov
mov
lds
add
mov
or
jns
push
jp
repnz
pop
adc
and
dec
out
in
push
inc
imul
sub
pop
ja
mov
add
mov
add
leave
xrelease
adc
mov
in
add
mov
xchg
mov
add
popf
xor
mov
sbb
add
or
mov
or
jecxz
stos
adc
mov
sub
cmp
xlat
lahf
push
adc
mov
add
insb
xchg
aam
inc
cwtl
push
or
add
pop
jecxz
push
popa
dec
push
loope
pop
xor
pop
aaa
push
xor
mov
repnz
pop
cli
adc
mov
jg
and
hlt
mov
mov
pop
mov
pushf
out
sbb
mov
xchg
stc
cmp
loop
mov
add
addb
cltd
push
loope
mov
xor
or
mov
std
loope
rolb
mov
mov
mov
mov
pop
cmp
jle
jg
addr16
push
jle
dec
adc
and
add
xor
mov
inc
fcomi
xchg
nop
add
rolb
mov
jmp
outsb
inc
aas
dec
jmp
inc
add
jecxz
and
test
add
jmp
dec
pop
or
mov
add
rolb
mov
stos
ficomps
movsb
xchg
mov
cli
xor
add
add
add
jecxz
add
pop
frstor
add
mov
rolb
cmc
cmp
iret
push
xchg
add
and
add
rolb
cmp
add
in
pop
jae
mov
add
mov
pop
repz
out
add
lret
push
or
fidivs
jecxz
ds
hlt
cld
fldt
add
lcall
add
add
test
movsl
repnz
mov
mov
out
push
add
mov
add
mov
cmp
mov
addb
and
loop
mov
icebp
inc
addb
push
xor
cmpsb
loopne
mov
push
pop
adc
xchg
fstp
clc
addl
rolb
mov
mov
push
add
add
or
add
add
xchg
add
push
xor
mov
test
and
mov
xchg
add
dec
push
stos
inc
add
jnp
sbb
es
fmull
nop
add
out
pop
push
adc
mov
arpl
mov
and
add
push
cmp
lods
adc
mov
pop
jmp
pushl
xchg
push
cmc
inc
mov
or
xor
xor
mov
jg
popf
xor
or
mov
add
dec
push
daa
mov
jae
sti
jb
mov
or
addb
mov
mov
or
lods
loop
mov
js
push
shl
popa
test
inc
mov
mov
mov
mov
or
adc
xchg
add
mov
inc
jecxz
inc
or
enter
pusha
add
jg
arpl
push
ja
jno
stc
push
mov
jne
xor
test
test
or
jmp
enter
jmp
mov
pop
xor
imul
fwait
popf
or
add
add
xlat
jecxz
out
cmpsl
add
mov
test
mov
test
mov
xchg
fadds
mov
mov
mov
mov
xor
clc
xchg
stos
dec
cmp
jle
add
jp
add
mov
insl
sbb
mov
mov
add
rolb
pop
mov
jge
xlat
lret
pop
gs
and
pop
or
addb
fucomi
mov
int3
jmp
xlat
out
jle
jb
mov
inc
push
mov
outsb
mov
cmp
xchg
mul
jle
dec
repz
mov
lret
shl
add
mov
pushf
sbb
cli
ds
jo
mov
jnp
jo
mov
mov
add
dec
inc
ret
adc
mov
add
cmp
daa
cmp
add
rolb
mov
add
add
and
or
outsb
rolb
mov
mov
cld
jmp
dec
test
cmpsl
lcall
add
iret
cld
repz
sub
ret
lret
xchg
add
mov
mov
sbb
adc
fld
push
inc
add
sbb
outsl
mov
push
je
dec
sbb
out
add
push
pusha
add
pop
repnz
jne
add
add
mov
mov
add
dec
shll
icebp
fsubrs
test
mov
idivb
mov
add
cwtl
loop
mov
jp
lret
sub
add
mov
in
sub
add
outsb
mov
fprem1
pop
cmp
add
sub
sub
add
popa
ret
dec
dec
push
sbb
jle
lret
sub
syscall
add
mov
add
add
mov
lods
mov
aad
mov
jp
stos
add
mov
mov
popa
mov
jl
fsubr
out
and
mov
mov
sbb
push
std
rolb
mov
add
ret
jbe
enter
bswap
movsl
rolb
mov
pop
push
add
jmp
popa
mov
push
pop
dec
insb
push
xor
push
mov
stc
bound
mov
mov
mov
mov
mov
or
and
jl
rolb
daa
repz
mull
dec
pop
sub
mov
sbb
add
cmp
mov
adc
and
rolb
sub
ret
cltd
add
push
neg
cltd
dec
arpl
pop
les
push
mov
pop
mov
rolb
aas
sti
movb
push
jl
dec
jo
mov
sbb
sub
out
test
mov
sbb
inc
jg
or
add
mov
je
popa
ss
mov
inc
mov
jnp
inc
push
ret
iret
add
addl
mov
sahf
sbb
mov
movsb
adc
mov
cmpsb
adc
mov
add
push
test
or
mov
jp
mov
data16
notl
xorl
popf
and
pop
arpl
xchg
jecxz
jle
jmp
loope
add
es
push
loop
mov
test
mov
mov
mov
clc
in
daa
mov
repnz
pop
cltd
lds
add
stc
lock
icebp
repnz
xor
mov
enter
mov
xor
mov
stc
ja
rolb
mov
add
insb
pop
lods
dec
arpl
cmc
repnz
push
add
add
addr16
dec
loop
mov
scas
add
mov
adc
adc
mov
add
stos
or
rol
mov
mov
mov
add
mov
mov
add
jns
pusha
add
popa
js
fsub
inc
mov
cld
data16
mov
mov
add
cmpsl
insl
int
add
mov
add
je
dec
cli
ss
js
add
insl
rolb
call
daa
jnp
rolb
mov
push
add
ss
push
or
cmp
mov
test
mov
daa
cld
dec
cmp
mov
mov
mov
mov
xchg
jmp
lcall
mov
lcall
xchg
sub
mov
xchg
sub
clc
or
or
xor
mov
es
dec
mov
sbb
aam
lea
xorl
cli
scas
out
and
mov
mov
out
push
ret
enter
in
ja
pop
faddp
add
in
xor
mov
popa
cmp
mov
mov
and
mov
repz
mov
add
rol
mov
push
addl
mov
jae
xlat
or
sbb
xchg
stos
mov
mov
add
bound
mov
xor
mov
cmp
mov
mov
mov
mov
scas
cltd
rolb
mov
or
add
add
dec
and
push
jo
mov
enter
movsl
in
lret
cmp
or
sub
and
mov
lock
mov
push
jns
arpl
add
fisttps
mov
mov
mov
xchg
adc
add
scas
ss
inc
xchg
adc
icebp
jge
lods
xchg
xor
mov
leave
pusha
add
sahf
js
add
mov
nop
add
repz
ret
into
in
mov
lret
mov
pop
enter
jbe
addb
xor
pushf
push
add
mov
jno
inc
aad
rcr
arpl
pop
and
ljmp
popa
inc
xchg
jecxz
add
mov
stc
popa
sub
int3
and
adc
inc
add
mov
dec
dec
es
xchg
dec
dec
sbb
or
add
mov
or
mov
jns
lret
pop
dec
ror
in
cmp
in
sbb
push
add
mov
leave
dec
out
loopne
mov
add
fs
or
jnp
push
repnz
mov
mov
mov
arpl
outsl
out
dec
lods
cs
inc
and
in
dec
sub
ret
and
and
mov
mov
movsl
outsb
cmpsl
pop
and
mov
xorl
xchg
mov
xchg
jne
stos
addb
push
shl
add
mov
sbb
add
call
or
cmpsb
aaa
xor
mov
xchg
xlat
and
movsb
push
cli
mov
mov
test
aam
mov
mov
add
in
xor
mov
out
out
filds
xchg
sbb
je
and
add
xor
mov
stos
dec
push
mov
loopne
mov
add
mov
add
ds
mov
mov
or
push
xlat
push
jmp
and
mov
iret
cmp
mov
lret
fstpl
out
test
fiadds
dec
jns
incb
add
push
push
mov
es
mov
movsl
das
addb
sbbl
xor
mov
lock
mov
mov
addl
jae
dec
je
mov
enter
mov
add
sub
add
mov
jp
lods
loope
add
dec
clc
pop
adc
rolb
mov
pop
dec
mov
mov
aam
inc
push
mov
insb
xchg
loope
ja
add
inc
add
jnp
sti
pop
mov
mov
and
fisttps
loop
mov
mov
mov
add
push
or
rcrl
push
mov
xchg
jle
gs
dec
daa
and
cmp
pop
xlat
jae
push
sub
mov
cmp
lds
sti
repz
int3
out
addb
gs
leave
add
rolb
push
add
jne
repnz
mov
dec
sbb
cmp
enter
outsl
std
mov
xchg
push
add
repnz
pop
flds
mov
negl
sub
or
pop
in
add
lods
dec
jno
cld
bound
mov
jle
xchg
loopne
mov
add
dec
scas
mov
mov
jnp
add
mov
int
in
cli
in
add
pop
loopne
mov
dec
rolb
mov
loop
mov
cld
daa
mov
addb
pop
pop
xchg
out
adc
add
mov
mov
add
push
add
mov
cmp
bound
mov
add
icebp
jo
mov
mov
test
push
adc
sub
adc
dec
jl
aam
andl
stc
xchg
movsl
loope
jb
mov
mov
pushf
mov
lds
mov
or
lods
jns
add
add
xchg
adc
leave
out
divl
mov
cmp
push
cltd
fidivrl
pop
cmpsb
divb
or
iret
imul
in
popf
push
faddl
jmp
or
jno
push
or
popf
xor
ljmp
rolb
mov
xor
insb
repz
push
dec
pop
lret
xchg
sub
insb
adc
mov
mov
mov
mov
inc
out
add
push
fs
dec
xor
outsb
cmp
add
mov
mov
mov
jno
xor
cmpsb
pop
loop
mov
pop
sbb
add
cmp
scas
dec
addb
fcmovb
and
and
mov
mov
aas
lcall
rolb
mov
add
mov
mov
add
addb
repz
bound
mov
and
imul
mov
test
add
and
mov
enter
lds
enter
add
ja
inc
add
mov
stos
mov
mov
add
add
out
nop
add
loope
push
iret
test
es
loope
jp
cmp
add
mov
jg
call
mov
jns
nop
add
pop
adc
mov
test
int3
cmp
lods
and
sub
scas
std
fisubrl
add
dec
jmp
test
xchg
or
rolb
xor
mov
popf
fcom
cltd
push
add
mov
mov
pop
inc
int3
stos
addb
inc
rolb
mov
shrl
addr16
lods
jle
inc
push
lds
push
add
enter
push
in
les
jle
adc
aad
mov
mov
push
mov
int
pop
inc
rolb
jl
sub
add
mov
addr16
add
mov
add
movsl
insb
sub
sbb
add
lcall
add
mov
mov
cs
es
mov
mov
rorl
std
sbb
test
decl
fdivp
fadds
mov
sbb
loop
mov
rolb
mov
add
rolb
daa
stos
jp
mov
popa
nop
add
data16
fs
add
mov
sbb
jmp
int
stc
loope
hlt
jmp
arpl
mov
lcall
addb
mov
es
pop
repnz
mov
mov
dec
stos
mov
add
stos
mov
lret
cmp
out
notl
mov
sbb
mov
lahf
loopne
mov
aad
or
add
adc
lods
mov
jnp
cwtl
fbstp
add
std
sahf
sbb
fsubrs
repnz
cmp
jb
mov
add
add
mov
sti
jnp
inc
xor
ret
mov
sbb
add
jg
notb
psubusw
add
jnp
stos
jmp
xchg
add
es
mov
mov
loope
fldcw
jns
jp
add
dec
xchg
insl
mov
xchg
xlat
xchg
outsl
cmp
sub
lock
imul
mov
out
push
dec
inc
add
and
mov
push
cmp
mov
xchg
les
add
add
add
dec
push
add
nop
add
add
lods
and
mov
in
popl
add
sub
xor
mov
icebp
jp
add
mov
inc
int3
mov
push
or
sbb
in
std
push
cmpsl
call
cmp
cmp
je
xchg
add
or
add
inc
xlat
inc
add
testb
push
jge
add
xor
sbb
lcall
pop
xorl
mov
jle
push
xor
dec
mov
cmp
add
es
pop
jmp
scas
pop
lret
sti
test
or
cmpsb
xor
mov
sub
add
sub
test
fwait
mov
lds
scas
mov
add
mov
or
add
cld
sbb
adc
mov
scas
jb
mov
pop
mov
xor
mov
and
push
incb
mov
pop
jmp
push
add
jne
imul
and
inc
scas
push
inc
fdivs
and
mov
lods
sarl
mov
mov
or
jns
add
xchg
test
das
adc
mov
pop
imul
rolb
mov
sub
loopne
mov
dec
out
dec
js
add
adc
pop
dec
std
pusha
add
mul
add
popa
cmp
pop
cmp
mov
pop
pushf
mov
cs
mov
bound
mov
popa
cmp
mov
xor
dec
mov
add
out
dec
cld
add
inc
or
in
cltd
insl
jbe
sbb
mov
add
ja
loope
add
add
mov
pushf
xor
mov
pop
les
icebp
cmp
sbb
jbe
std
sahf
pop
xchg
dec
gs
jo
mov
mov
add
jp
mov
test
cmp
add
popf
xlat
add
jae
dec
lock
mov
or
out
fdivl
xchg
js
data16
pop
sub
or
add
mov
sbb
gs
hlt
adc
push
add
xchg
add
xor
js
add
mov
lcall
sub
xor
mov
addr16
insb
jnp
add
jbe
or
cwtl
aas
in
add
mov
xchg
add
fists
gs
or
mov
or
jae
movb
jo
mov
jo
mov
mov
xchg
and
mov
arpl
movsl
lret
jp
enter
or
enter
mov
mov
pop
aam
lods
out
xchg
icebp
adc
pop
pop
rolb
mov
fucomi
jno
jmp
test
add
mov
mov
negl
nop
add
dec
aaa
adc
mov
add
mov
test
jmp
bound
mov
add
mov
inc
cmp
add
or
pusha
add
mov
inc
lea
loop
mov
fstpt
sbb
mov
loop
mov
pop
or
push
mov
xor
sar
dec
stos
call
mov
mov
nop
add
mov
popf
jne
fisttpll
addb
add
popf
mov
mov
inc
cmc
je
add
mov
push
aam
mov
xor
add
out
inc
pop
rcll
pop
loopne
mov
scas
addb
push
or
cwtl
mov
mov
add
push
rorl
and
js
sbb
pop
mov
inc
fcomi
inc
roll
popf
iret
insb
xor
mov
jno
push
xor
mov
mov
adc
mov
dec
lret
mov
clc
stos
daa
lea
out
scas
cld
dec
dec
or
add
jle
stc
inc
add
add
xor
mov
mov
cmp
and
mov
cltd
adc
add
addb
or
mov
icebp
loope
or
pop
adc
rolb
mov
xor
sbb
outsb
xchg
leave
mov
stos
stos
fisttpl
xchg
aad
mov
add
dec
cltd
or
out
dec
jg
pop
out
scas
mov
adc
pop
daa
pop
mov
dec
shrl
jg
push
jp
pusha
add
gs
mov
das
xchg
xchg
sbb
dec
scas
sarl
aaa
inc
pusha
add
mov
add
add
add
xor
mov
add
into
jb
mov
push
inc
add
lea
xchg
stos
insl
cmp
mov
dec
mov
sbb
dec
cld
add
aam
adc
mov
dec
fistpll
and
mov
xchg
add
lods
push
add
jle
adc
in
popa
mov
fstpt
fs
sti
int3
xchg
sub
add
mov
daa
in
popa
xchg
add
or
add
mov
add
aas
loop
mov
add
add
ret
sub
mov
mov
imul
mov
mov
xchg
cmp
inc
add
add
add
ds
mov
mov
jg
jmp
mov
add
mov
pop
mov
mov
iret
xchg
add
dec
lods
loop
mov
shll
cmp
add
shld
jno
sbb
enter
mov
jg
xchg
add
mov
jo
mov
add
and
mov
nop
add
div
outsl
out
lret
rolb
sbb
mov
jle
imul
xchg
adc
test
xchg
inc
dec
xlat
loope
stc
dec
sbb
adc
xchg
or
push
add
inc
adc
mov
and
in
and
xchg
int3
sbb
std
rolb
jmp
jecxz
mov
add
sub
mov
lds
mov
cmpsb
adc
mov
push
mov
push
inc
add
add
inc
xchg
das
sub
add
dec
popa
adc
pmaxub
loopne
mov
leave
inc
fcomi
vpsrad
mov
and
mov
inc
rolb
push
add
mov
stc
mov
mov
les
ljmp
mov
enter
mov
aas
cld
ljmp
into
je
pushf
mov
fucom
add
xchg
add
repz
mov
add
in
in
daa
mov
mov
nop
add
add
xchg
jo
mov
mov
add
fwait
adc
addb
shrl
sub
add
int3
sbb
mov
mov
mov
out
jle
dec
pop
test
pop
push
add
lock
add
loop
mov
lods
sbb
add
jge
sub
bound
mov
pop
inc
lds
jnp
xor
clc
ljmp
xchg
lcall
mov
push
in
push
xor
pop
cmpl
jl
dec
ret
pushf
test
jge
js
loop
mov
xchg
push
add
mov
mov
stos
gs
add
mov
iret
cmp
outsl
jnp
loope
jmp
cmp
mov
sbb
das
movsb
lret
mov
mov
dec
sbb
enter
add
sbb
add
add
cmp
and
mov
mov
and
lret
push
lods
lcall
xor
cltd
mov
out
cli
pop
jge
add
cmp
mov
xchg
out
push
dec
mov
add
xchg
add
pushf
push
lret
mov
xlat
lret
mov
mov
pop
or
movsl
jle
xchg
add
push
rolb
cld
jae
cmp
mov
push
add
and
mov
enter
gs
lods
dec
sub
je
out
in
popa
dec
and
shll
pop
push
sub
mov
dec
pop
dec
lcall
mov
jno
repz
add
cmpsb
mov
add
adc
lret
push
ja
arpl
push
cwtl
jno
inc
js
add
xchg
pop
lods
push
cs
rolb
mov
xchg
add
enter
int3
xor
sbb
cli
test
loop
mov
mov
addl
je
xor
or
daa
sti
xchg
out
add
add
rolb
fistpl
add
mov
add
push
dec
in
adc
aam
and
enter
inc
xchg
jno
outsl
pop
and
add
inc
scas
push
imull
add
pusha
add
push
lret
dec
xor
mov
cmpsb
mov
add
mov
outsl
xchg
faddl
scas
push
pop
cmp
push
outsb
dec
jb
mov
rcl
add
inc
mov
add
test
addb
ret
popa
movsb
rcrl
fisttps
scas
jne
sbb
out
into
jne
test
aaa
repnz
mov
mov
imul
lds
adc
add
dec
lret
gs
idivb
call
rolb
pop
stos
mov
cmp
sbb
add
cmp
push
dec
movsb
fcmovnb
rolb
mov
dec
sub
je
mov
sub
cmp
xchg
add
fiaddl
add
push
jl
mov
mov
fwait
and
mov
add
outsl
insb
cmp
or
mov
inc
je
push
lods
xchg
sub
ss
jl
ret
movsl
rolb
fisubs
add
mov
mov
push
mov
push
adc
push
pop
mov
xchg
ror
xchg
fsubr
in
notb
dec
xor
mov
fs
xor
mov
leave
out
cmpsl
sub
stc
repz
in
and
and
mov
in
xchg
push
in
or
sbb
stos
push
jp
lret
mov
loope
lret
add
lret
and
add
jg
cmp
add
mov
mov
mov
rolb
mov
sub
loopne
mov
loop
mov
sub
push
jne
hlt
addl
and
mov
mov
cmc
adc
mov
xor
inc
add
je
cmp
les
xchg
mov
mov
nop
add
fucom
add
mov
scas
rolb
mov
or
adc
add
mov
push
fistpl
nop
add
shl
mov
or
sub
inc
and
cmpsl
sub
int3
mov
cwtl
lock
outsl
xchg
stos
popf
pop
das
pop
mov
stos
pusha
add
imul
in
int
push
xor
mov
sub
ficoms
stos
mov
sbb
push
push
cmp
ret
xchg
fwait
adc
mov
outsb
cmpsl
call
fwait
cmp
mov
adc
cld
in
xor
push
push
sbb
out
add
test
xchg
mov
ss
addb
fdivl
mov
imul
call
xchg
jecxz
add
add
adc
add
es
rolb
mov
mov
addr16
add
mov
cli
ja
adc
mov
jg
dec
xchg
loopne
mov
mov
xlat
push
xor
xchg
mov
mov
repnz
enter
mov
xor
xor
inc
sub
pop
or
mov
sti
push
jg
sbb
cmp
jle
mov
dec
sub
add
xchg
loopne
mov
or
add
add
jae
push
pop
enter
mov
scas
pop
or
sbb
xchg
dec
and
push
cmpsl
clc
and
mov
dec
mov
add
cmp
mov
mov
inc
add
xchg
sbb
add
sub
xchg
inc
pushf
xchg
in
cvtdq2ps
scas
clc
jno
addb
sub
popf
stc
push
daa
xchg
cltd
pop
scas
xchg
jno
loope
inc
add
xlat
and
imul
or
clts
xchg
add
xchg
fildll
in
gs
imul
mov
sahf
jmp
add
or
wbinvd
popf
popf
cmp
pop
rcll
fsubrl
inc
add
add
xor
pop
loopne
mov
pop
daa
inc
loopne
mov
shll
mov
scas
jge
push
mov
rorl
stc
push
aam
add
in
movsb
imulb
int
sub
cmpsb
push
inc
pop
lret
add
inc
pop
mov
mov
inc
mov
inc
add
shrl
jge
push
rolb
mov
mov
call
add
inc
xchg
xor
call
add
and
mov
adc
push
add
adc
add
sbb
ja
mov
push
add
cltd
pop
sub
leave
sbb
insl
xchg
add
ret
mov
paddw
nop
add
dec
loope
loope
outsb
mov
gs
out
dec
ret
fcomps
into
or
cwtl
fidivrl
add
mov
add
push
push
add
mov
mov
es
xorl
xor
mov
push
add
mov
add
aas
lcall
inc
addb
je
clc
dec
sub
mov
repnz
ficoml
xor
test
add
mov
mov
dec
adc
roll
mov
pop
mov
fnstcw
mov
pop
mov
add
jl,pn
pop
inc
clc
scas
pmulhuw
or
dec
fldl
stc
or
mov
sub
sbb
inc
pusha
add
sub
sbb
dec
mov
mov
lahf
sub
mov
stos
and
mov
mov
xor
dec
add
add
into
pop
nop
add
arpl
movsb
inc
popa
jmp
out
out
jnp
hlt
adc
mov
push
bound
mov
movsl
scas
or
mulb
or
and
mov
cmp
repnz
add
mov
mov
add
jbe
ror
pop
repz
sbb
lods
cmpsl
bound
mov
jae
js
outsl
loopne
mov
xor
mov
addb
pop
pop
mov
lret
rcr
js
in
in
add
and
outsb
xor
repz
test
ret
dec
fsts
push
insb
or
aas
div
lcall
mov
add
icebp
mov
add
lock
cmpsl
sbb
pop
and
add
mov
xchg
cmpsl
xchg
and
push
mov
test
scas
add
mov
jae
les
movsl
decb
xor
jle
inc
add
or
add
mov
add
int
push
jge
sbb
aaa
repz
stc
push
fs
adc
imul
jno
fwait
dec
or
jbe
test
mov
inc
mov
ljmp
neg
shl
popf
add
mov
outsl
cs
loope
lcall
mov
out
aaa
push
inc
add
add
pop
xchg
add
mov
hlt
out
xor
mov
lock
jg
or
add
pop
movb
bound
mov
mov
mov
lcall
addr16
ja
add
mov
lcall
xchg
cmp
jp
lods
clc
mov
add
or
aad
pop
mov
fsubs
mov
cltd
out
add
cs
lcall
test
cmp
add
add
test
xor
jbe
jno
in
push
push
movsl
fsts
mov
loopne
mov
ds
cmp
push
mov
or
and
jl
rolb
adc
test
dec
push
inc
xor
aaa
xor
aad
les
sub
icebp
jo
mov
add
mov
add
dec
jp
jo
mov
fildl
add
jge
nop
add
ja
mov
hlt
popf
lcall
sub
loop
mov
sub
or
inc
addr16
or
mov
mov
cld
xchg
push
insl
loope
xchg
add
add
aam
adc
mov
cmpsl
cwtl
ror
lods
movsb
dec
nop
add
push
dec
mov
sbb
add
fisubrs
call
jg
pop
inc
cmp
xchg
push
das
lods
add
add
mov
lcall
mov
mov
mov
add
and
push
push
add
rcl
aas
imul
mov
enter
test
xchg
push
ret
cmp
cmpsb
loope
adc
pop
scas
and
adc
mov
xlat
stos
jmp
add
push
addl
lret
lea
inc
test
push
call
insb
sbb
inc
or
add
mov
fmul
sbb
mov
pop
bound
mov
scas
or
sbb
inc
cmpsl
inc
add
enter
cmpsl
jae
mov
or
fcompl
inc
ss
in
add
leave
repnz
fnsave
fmull
mov
sahf
fs
out
dec
mov
jnp
jmp
pop
out
cmp
mov
insb
std
fcmovnbe
je
fists
add
xchg
cs
add
mov
out
std
mov
jns
xchg
int
enter
imul
bound
mov
cld
outsb
roll
push
mov
jae
bound
mov
and
mov
jnp
add
mov
push
and
sbb
pop
pop
mov
mov
mov
add
cmpsl
inc
add
mov
add
xor
mov
xchg
jl
xchg
movsb
mov
rolb
mov
mov
add
pop
push
adc
add
add
test
ljmp
cmp
andl
push
dec
in
xor
mov
addr16
xor
sub
sub
lcall
add
fs
add
dec
and
mov
inc
ror
rolb
mov
pop
in
addb
jmp
es
aas
idivb
outsb
addr16
add
arpl
test
nop
add
dec
inc
add
pusha
add
ret
sbb
inc
pop
mov
mov
aaa
fbld
leave
mov
pop
out
jns
mov
add
dec
ja
sub
cmp
pop
push
icebp
in
add
add
aam
aam
dec
ret
repnz
mov
fnstsw
lock
mov
test
add
jns
inc
dec
xor
mov
dec
cld
scas
push
push
add
mov
jge
leave
insl
ret
fcmovnbe
cmp
and
dec
xor
fldenv
icebp
js
cmp
loope
dec
xchg
bound
mov
mov
shrl
add
lods
push
imul
jne
push
pop
sbb
aas
loopne
mov
mov
notl
insb
icebp
mov
mov
add
out
mov
fwait
aad
sbb
jge
mov
out
xchg
add
rolb
mov
fldenv
mov
mov
xchg
sub
and
mov
sbb
iret
inc
iret
adc
mov
dec
mov
clc
jb
mov
push
hlt
jecxz
js
sahf
popl
adc
mov
sti
bound
mov
add
cwtl
and
mov
pop
mov
or
mov
xchg
inc
add
add
add
add
lock
sub
xlat
or
push
add
jmp
mov
mov
add
mov
mulb
cmp
add
mov
and
mov
cmp
sbb
add
xor
mov
aad
jns
pop
int3
jp
icebp
add
mov
neg
fs
sub
add
dec
out
push
leave
cmpsl
addb
cs
pushf
icebp
aaa
xchg
sub
lods
sbbl
sub
pushf
pop
pop
inc
out
add
out
repz
sub
test
mov
mov
add
es
dec
lods
xchg
stos
std
lret
negl
mov
test
inc
add
mov
add
das
xchg
xchg
sub
ja
test
pop
push
das
dec
and
mov
int
mov
and
mov
cmp
mov
mov
mov
pushf
sahf
sbbl
pop
xchg
dec
les
mov
add
jnp
bound
mov
jo
mov
fwait
xchg
shr
xchg
mov
add
mov
add
mov
add
or
fnsave
add
mov
outsb
xor
inc
movsl
stos
cwtl
and
mov
jmp
add
test
jl
push
mov
addb
mov
dec
and
lcall
xor
mov
sahf
pop
pusha
add
dec
adc
incl
out
jno
stos
sbb
adc
adc
add
add
jno
mov
dec
cli
cs
cmp
xor
mov
pop
ss
cmp
add
and
push
mov
hlt
sbb
int
and
add
scas
jmp
pop
dec
scas
jbe
out
repnz
mov
add
mov
xor
jo
mov
add
dec
insl
fwait
mov
lret
mov
addb
xchg
mov
sub
cs
mov
xorl
adc
mov
mulb
pop
push
out
stos
test
aas
addr16
dec
mov
outsb
adc
sub
push
bound
mov
inc
xor
mov
lret
loopne
mov
cld
jno
or
icebp
sub
out
loopne
mov
jecxz
fstl
psllq
lea
add
pop
repnz
cwtl
loopne
mov
mov
scas
xor
cmp
es
out
cmp
add
push
push
sub
in
xchg
cmp
add
mov
fcoml
mov
mov
mov
mov
mov
pop
data16
aaa
iret
add
mov
mov
mov
dec
ss
mov
fnstenv
add
call
pushf
mov
add
mov
je
add
mov
xchg
bound
mov
jne
or
or
xor
mov
sub
xchg
aaa
pop
dec
les
xor
cltd
sub
sti
or
or
lods
mov
mov
add
testl
daa
pop
mov
mov
dec
ljmp
add
mov
int
cmp
xor
push
jno
fcmovbe
add
fwait
push
jmp
mov
push
pop
mov
add
stos
cmp
push
add
add
and
push
add
mov
add
and
inc
test
and
mov
fcmovnu
jp
inc
ss
adc
mov
push
ret
adc
add
repz
fcomi
cli
and
mov
jae
add
or
es
loopw
mov
xor
add
cld
inc
int3
in
jg
cli
mov
das
xchg
dec
push
xchg
add
mov
mov
ret
call
inc
add
add
jmp
add
ljmp
scas
incb
add
scas
sti
rolb
rcrl
bndldx
add
mov
repnz
stos
gs
and
add
jo
mov
push
add
lcall
mov
mov
scas
lea
add
jne
insl
ret
and
mov
lret
sub
fs
fcmovbe
mov
lea
dec
lock
add
sbb
loope
and
mov
mov
add
mov
iret
inc
add
mov
loopne
mov
xchg
out
xchg
add
cmc
addb
xchg
cld
cmp
mov
inc
add
xor
outsb
cli
mov
cmp
jge
add
lret
imul
repz
mov
cmp
mov
insl
adc
adc
mov
es
adc
mov
or
push
mov
and
cmpsb
jbe
repnz
push
xor
stc
cs
or
add
mov
jecxz
icebp
ljmp
clc
gs
test
sti
addb
fmuls
jge
xchg
mov
add
out
or
add
mov
fldenv
mov
mov
add
add
xor
mov
mov
pop
mov
shll
mov
jg
xchg
sti
jg
add
int
cwtl
xchg
ret
xchg
ss
push
dec
and
mov
cmpsl
mov
repnz
jnp
sub
sub
sbb
rolb
mov
in
dec
or
mov
add
push
out
div
cmpsl
mov
mov
push
out
mov
jg
and
mov
mov
and
pop
cmp
mov
pop
push
ficompl
loop
mov
ja
add
push
pop
xchg
leave
xor
mov
imul
jno
xchg
out
cli
pop
sbb
addb
adc
dec
loope
mov
jmp
add
in
repnz
call
test
add
lods
inc
adc
mov
pop
mov
mov
lcall
inc
nop
add
jns
adc
push
sub
decl
or
or
xchg
daa
es
or
xchg
aam
or
xor
test
add
pop
scas
scas
jmp
add
jmp
in
out
in
xchg
and
add
sbb
pop
lret
add
add
push
and
pop
popf
pop
in
fimuls
pop
cmp
sub
add
xchg
push
fst
imul
popf
and
mov
push
sub
sar
xorl
mov
cmp
mov
cmp
lods
int3
push
icebp
fucomp
faddl
cmp
imul
int
pop
aaa
dec
stos
dec
jg
in
lahf
adc
jno
lds
sbb
or
push
imul
adc
inc
arpl
add
pop
adc
push
add
loopne
mov
add
xor
loopne
mov
ss
add
add
mov
mov
lods
jl
xor
mov
das
pop
xchg
or
in
les
movsb
jle
hlt
outsb
call
add
enter
test
dec
lahf
lock
fisttpll
dec
pop
das
or
push
mov
pop
out
enter
lahf
mov
push
sub
add
cmp
push
dec
add
mov
mov
dec
push
movsb
aam
rorl
bswap
add
addb
leave
mov
mov
jp
and
jecxz
add
xchg
jnp
jae
lea
xchg
jne
mov
push
mov
add
rolb
mov
add
cmp
dec
jge
pop
rdmsr
add
out
inc
jg
add
ss
loope
mov
in
dec
adc
add
mov
mov
aaa
out
adc
pop
inc
pop
mov
fimull
jbe
inc
dec
outsl
jg
jns
in
out
or
cli
pushl
test
sbb
add
mulb
add
mov
push
add
mov
out
or
lds
mov
ret
sub
je
xlat
inc
popf
sbb
lds
into
push
mov
je
decb
mov
cmp
add
mov
mov
out
mov
add
add
add
mov
jns
mov
cmc
push
adc
dec
int
loopne
mov
mov
fstl
adc
mov
leave
xchg
es
jecxz
and
mov
push
cltd
popa
inc
dec
ds
add
jle
add
mov
inc
add
add
add
mov
dec
popf
jo
mov
add
add
std
jecxz
xor
jl
push
sbb
loop
mov
mov
add
adc
add
shll
jbe
adc
mov
cmp
mov
xchg
test
jb
mov
push
imul
outsb
loop
mov
jle
lods
and
mov
cld
push
movsl
sub
add
addb
mov
jge
lcall
lea
stos
push
fisubs
daa
in
xchg
outsl
sub
repnz
jl
sbb
inc
cmp
ds
loop
mov
jg
mov
aam
push
xchg
inc
add
test
add
add
mov
fstl
add
out
imul
jecxz
add
stc
test
push
sbb
cmp
xor
cmp
js
lret
aam
adc
imul
add
add
vpshaw
imul
in
add
iret
mov
mov
or
pushf
sub
mov
xchg
cmpsl
and
icebp
fnsave
add
or
xchg
xor
mov
das
mov
in
mov
cmp
dec
cmp
add
in
fs
test
aad
fldt
aas
icebp
fsubr
add
mov
aam
add
arpl
add
dec
out
jge
sbb
add
add
pop
jmp
mov
add
movsl
jle
ds
dec
and
mov
sahf
ret
aam
pop
jae
lods
std
xchg
clc
xchg
scas
lcall
lea
add
add
je
rolb
jae
mov
pop
dec
imul
mov
push
lea
sub
je
aas
movb
add
add
pusha
add
orl
adc
add
mov
push
mov
push
add
push
push
popf
clc
mov
ret
adc
inc
mov
mov
ret
sub
sti
and
incb
add
pop
cmc
xlat
hlt
and
jne
leave
xchg
lock
js
jg
test
loop,pt
mov
out
test
inc
and
mov
ret
je
sub
call
sub
or
insl
cmpl
mov
xchg
push
push
add
jl
add
mov
andl
sbb
icebp
mov
or
mov
add
lock
repz
jnp
or
inc
mov
jne
xcrypt-ctr
cmpsl
pop
insl
fistps
ret
xor
mov
lret
rolb
mov
mov
mov
std
out
dec
stc
xor
adc
outsb
daa
dec
jp
mov
mov
out
ret
sub
jmp
mov
push
or
sbb
sbb
lahf
popf
lahf
scas
dec
addb
cmpsl
cmp
sti
mov
add
mov
and
lahf
and
repz
sbb
jecxz
xor
push
testb
mov
test
fwait
pop
sti
loop
mov
mov
push
sub
jbe
out
shr
inc
rolb
mov
and
mulb
add
mov
add
bound
mov
add
repz
test
inc
push
pop
push
stos
or
into
outsl
mov
push
fwait
sbb
mov
mov
outsb
jge
iret
test
mov
cli
popf
xchg
pusha
add
pop
or
add
lods
cmp
cmp
mov
xchg
jecxz
add
push
andl
pop
jne
add
int3
xor
ret
int
add
sbb
push
adc
jmp
add
repz
mov
pop
inc
add
add
mov
sbb
mov
mov
fbstp
mov
jb
mov
push
mov
mov
ret
ds
pop
jmp
mov
lods
icebp
push
lds
add
sbb
mov
rolb
cmp
mov
xor
xchg
ja
jle
dec
popa
fs
cmpsb
dec
repz
pop
adc
xchg
add
aad
add
add
add
add
sti
popa
icebp
xchg
std
dec
hlt
mov
cmp
add
mov
cli
popa
xor
fimull
pop
iret
push
xchg
lods
and
add
add
mov
std
or
adc
mov
arpl
mov
addb
out
xorl
xor
adc
mov
push
add
mov
fidivs
outsb
ljmp
test
jecxz
xor
add
mov
jns
aaa
dec
xchg
push
es
js
jge
add
add
add
mov
insl
ja
ficomps
mov
and
loope
add
loopne
mov
jecxz
adc
into
arpl
das
fisubrs
cmp
xor
or
pop
rolb
sahf
mov
dec
inc
stc
nop
add
and
xchg
add
add
mov
in
lret
add
sub
ret
mov
add
das
ja
mov
roll
pop
fisubs
bound
mov
jle
add
sub
mov
das
xor
mov
mov
and
mov
mov
andl
fdivl
xor
scas
add
jp
mov
cmp
std
mov
ds
movsb
push
gs
imul
dec
mov
add
dec
pop
pop
insl
xor
jb
mov
mov
mov
push
add
cmp
mov
xchg
addb
sbb
cltd
sbb
test
addb
mov
xlat
in
hlt
repz
movzwl
push
pop
adc
mov
add
and
mov
mov
pushf
cld
sbb
xchg
add
pop
sarl
pop
mov
mov
add
pop
push
cmp
out
test
scas
rcl
and
mov
adc
mov
mov
in
jae
add
push
push
push
pop
jmp
call
pop
leave
mov
xchg
xabort
jne
sbbl
mov
repnz
mov
mov
add
pop
mov
test
out
inc
add
ret
clc
dec
inc
xchg
scas
add
mov
push
mov
popa
stos
fwait
daa
sbb
daa
fimull
add
mov
adc
mov
add
jb
mov
add
jnp
push
xchg
or
add
mov
cmp
fsubl
add
inc
cld
pop
cmp
add
mov
cmp
popf
insl
sti
int
xchg
stos
and
fucomp
lods
mov
add
movsl
and
mov
jo
mov
add
mov
mov
pop
xchg
add
aas
jl
int
jecxz
bound
mov
andl
movsl
jmp
mov
xlat
cmp
mov
mov
mov
mov
faddl
add
mov
mov
pop
jp
sbb
testl
mov
std
jo
mov
xchg
add
and
outsb
or
xchg
pop
lock
add
test
mov
xor
out
jbe
in
scas
lcall
add
or
inc
or
mov
mov
and
imul
jmp
mov
loop
mov
or
add
add
mov
jmp
jl
add
xor
mov
and
mov
mov
pop
mov
cltd
rdtsc
pusha
add
push
add
mov
add
lret
cmp
or
add
lock
inc
lahf
icebp
loope
dec
hlt
aad
shll
mov
outsl
push
fildl
mov
sbb
loopne
mov
add
orl
dec
cltd
sahf
jg
mov
pop
mov
add
lock
add
mov
xor
arpl
out
jo
mov
iret
sub
push
pop
cmp
jno
xor
mov
add
jg
dec
xlat
stos
lock
inc
fistpll
lds
sahf
pop
pop
mov
add
test
xchg
cmp
iret
push
hlt
pop
into
fs
add
and
jbe
mov
add
or
lods
inc
add
jo
mov
std
mov
sub
add
mov
cld
scas
mov
mov
out
stc
insl
adc
jp
les
nop
add
mov
sbb
lahf
xchg
andl
mov
pop
add
mov
mov
cmpsl
cmp
cld
push
jae
cld
mov
loope
jb
mov
fwait
or
imul
or
stc
sub
and
mov
mov
jg
push
repz
jp
add
in
push
add
add
mov
pop
sub
test
pop
js
jge
sub
add
push
adc
or
dec
push
dec
lea
lods
lock
xor
mov
insl
call
xor
fdivrl
jmp
adcl
stc
cli
cli
lcall
icebp
aad
jns
cmc
cld
loope
add
mov
dec
sbb
add
mov
add
mov
jo
mov
mov
call
ljmp
mov
xchg
daa
outsl
movsl
das
push
dec
test
dec
inc
fcoml
add
mov
or
and
dec
dec
divb
repnz
mov
repz
mov
addb
test
aas
addb
out
and
lretw
add
add
stc
sahf
xchg
test
mov
add
xor
mov
sub
mov
xchg
pop
repz
outsl
sbb
mov
add
pop
mov
mov
aad
daa
mov
mov
add
jle
and
into
imul
ja
add
call
mov
adc
jg
bound
mov
pushf
addr16
lds
aam
and
movsl
enter
cmp
cmc
ret
push
add
mov
xor
cmp
inc
jp
test
in
hlt
aad
push
mov
test
dec
fistpl
lret
add
xor
jne
and
pushf
testl
pop
mov
xor
push
shll
iret
mov
add
leave
fsubl
sub
sub
add
mov
push
add
idivb
scas
sub
add
inc
add
leave
mov
jne
lds
pushf
xchg
aam
stos
in
test
add
mov
xchg
outsb
and
rolb
mov
push
and
add
pop
inc
je
mov
clc
cmp
lcall
add
inc
add
push
das
jge
iret
jg
jns
sti
cmp
jne
push
repnz
cmpsl
inc
push
stc
jmp
enter
add
xchg
mov
mov
ljmp
int
jge
aaa
and
cmp
in
outsb
fisubrl
adc
lret
add
shrl
mov
add
mov
out
stos
xor
mov
xor
add
shll
and
mov
dec
inc
add
jle
adc
push
cmp
add
and
mov
popf
aas
lret
mov
jo
mov
sbb
jns
jg
stos
lcall
xchg
mov
jge
das
pop
cmp
inc
scas
jo
mov
out
ja
push
lahf
inc
mov
mov
loopne
mov
popf
add
out
cmpsl
add
mov
ret
leave
lock
xchg
out
adc
push
cmp
roll
leave
aaa
sahf
or
push
sub
xor
mov
mov
xchg
ret
movsb
mov
mov
mov
add
add
stos
cmp
outsb
ljmp
add
add
add
mov
jmp
add
ret
test
out
cld
fbld
icebp
mov
xchg
mov
add
xchg
add
add
sbb
pushf
cmpsl
push
sbb
rolb
mov
add
mov
js
rcll
cli
xchg
add
rcrl
add
ret
into
xchg
scas
xchg
jge
movl
mov
pop
test
shll
and
mov
add
jle
loopne
mov
mov
mov
fisttpl
xchg
add
int
cmp
jmp
push
add
lock
mov
mov
mov
xchg
fsub
cmp
add
jg
mov
mov
mov
xchg
pcmpeqb
and
bound
mov
inc
aaa
aam
add
mov
mov
bound
mov
pop
js
cmc
rcrl
adc
shll
mov
add
add
out
xor
mov
out
pop
mov
pop
cmc
mov
mov
das
mov
lret
xchg
add
adc
mov
adc
out
adc
mov
add
push
mov
rorl
sub
stos
adc
mov
pop
push
rolb
push
test
add
xor
sbb
cmc
cli
xor
or
mov
push
add
xchg
in
in
mov
mov
add
cmp
fxch
lods
mov
aaa
push
push
sbb
mov
mov
jecxz
xchg
mov
mov
and
mov
add
aam
sbb
xor
mov
mov
in
hlt
inc
add
cmpsb
jns
movsl
dec
fimuls
fwait
je
bound
mov
psllw
das
call
cmp
xor
mulb
lcall
add
cmp
fisubrl
add
add
xor
mov
dec
clc
push
mov
rolb
mov
lods
and
xor
jl
xchg
fcomps
insl
cltd
int
shll
mov
xchg
jb
mov
mov
scas
sbb
test
cwtl
and
inc
pop
add
jae
dec
inc
add
add
ja
push
mov
and
mov
fwait
add
add
js
lret
mov
cld
inc
xor
add
add
lret
mov
add
ss
mov
dec
into
movb
idivl
dec
cltd
neg
popf
incb
mov
lret
cmp
leave
dec
jne
xorl
mov
xlat
push
add
divl
sub
pusha
add
mov
pop
cli
jnp
jb
mov
mov
movsl
addb
xchg
rcrl
push
jae
add
repz
jecxz
stos
mov
add
add
ja
inc
sub
push
rol
jecxz
jbe
ror
sbb
push
push
add
mov
inc
add
mov
stc
jns
cmpsl
and
divl
mov
ds
sbb
mov
inc
mov
jne
cmp
push
inc
add
and
mov
add
add
sarl
push
mov
add
mov
mov
add
aad
imull
cld
sbb
cld
mov
je
bound
mov
mov
out
ja
add
mov
icebp
inc
dec
cmp
cld
test
loope
add
shll
mov
add
mov
mov
pop
icebp
jmp
fstps
lods
inc
mov
imul
push
repz
push
push
xchg
mov
js
scas
xor
sub
aam
xchg
pop
fidivs
push
and
addb
sub
mov
ret
push
inc
cmp
js
add
imul
mov
cwtl
dec
sub
and
mov
xchg
pushf
sahf
insl
stos
mov
pop
mov
test
xchg
mov
fstps
cmpsb
xchg
ljmp
punpcklwd
shrl
sbb
or
lea
and
push
movsb
sbb
aas
inc
mov
jae
cld
cwtl
stos
cmpsl
cmpsl
push
inc
mov
repz
sbb
and
mov
outsl
cmpsl
and
divb
add
and
mov
adc
mov
cmpsl
adc
xchg
lea
inc
add
insb
dec
ds
adc
es
gs
or
xor
mov
fiadds
fmulp
cmp
xor
mov
ret
test
sbb
sub
add
mov
add
push
mov
dec
ja
push
add
xchg
mov
mov
ret
add
clc
xchg
or
lea
add
add
test
and
rolb
mov
sti
mov
mov
lcall
push
mov
add
or
mov
pop
add
mov
gs
les
add
mov
int3
mov
out
repnz
lret
test
push
add
loop
mov
scas
inc
fstpl
mov
fwait
mov
sub
adc
mov
xor
mov
pop
xor
add
mov
stos
push
pop
movsl
pop
ljmp
popf
les
sub
add
bound
mov
cmp
out
arpl
sub
or
jg
sub
xor
mov
mov
div
inc
rolb
mov
addb
sub
xchg
repnz
nop
add
js
das
pop
mov
mov
sbb
test
loopne
mov
ds
cwtl
fwait
mov
mov
cltd
mov
add
movsl
lret
mov
adc
and
mov
loop
mov
add
mov
imul
int3
sub
sbb
mov
and
int3
in
leave
xor
jmp
call
mov
dec
out
add
push
dec
mov
sbb
sbb
bound
mov
xchg
jle
cmp
cli
sbb
xchg
jo
mov
insb
push
ljmp
mov
dec
sub
cmpsl
jge
jmp
rep
pusha
add
pop
sub
mov
bound
mov
adc
mov
and
mov
add
push
rolb
mov
aad
data16
mov
xor
jns
cmpsb
repnz
leave
jno
sbb
mov
push
add
das
jno
into
jmp
out
ja
mov
fiaddl
stc
adc
add
xchg
add
mov
test
icebp
add
mov
mov
mov
mov
aaa
jae
stc
add
mov
or
add
adc
mov
cmp
icebp
pop
clc
or
popa
jmp
lret
clc
rolb
mov
in
sbb
pop
mov
add
push
daa
scas
xchg
fwait
cltd
in
stc
or
sub
das
xor
jne
pop
cmc
jecxz
add
and
mov
dec
out
cmp
pop
add
pop
leave
xor
mov
mov
repz
mov
pop
in
add
mov
push
lahf
pop
lret
sbb
push
cwtl
mov
adc
jb
mov
rolb
mov
adc
mov
jmp
push
fstpt
cmp
aas
lcall
test
lea
add
add
xchg
add
jo
mov
mov
cmp
inc
in
xchg
push
or
mov
movl
lahf
push
hlt
sub
or
popa
inc
add
mov
dec
inc
add
jo
mov
aas
int
mov
mov
mov
jp
add
out
sub
test
mov
and
push
add
add
mov
cmc
dec
mov
mov
add
or
ret
mov
add
sbb
mov
addb
test
add
mov
mov
mov
loope
loope
sbb
lds
mov
ret
lea
sub
mov
adc
mov
add
or
add
adc
mov
in
xlat
sub
push
mov
mov
out
xorl
jnp
mov
out
inc
pop
sub
sbbl
lock
test
ret
test
in
lods
push
inc
jne
add
icebp
xchg
dec
aam
lcall
test
lretw
fsubrs
mov
fidivrl
add
mov
sbb
push
cmc
cmp
testb
lods
mov
ret
jbe
xchg
rol
add
mov
test
loopne
mov
add
mov
aas
lock
inc
test
gs
cmc
ret
dec
adc
ljmp
xlat
or
in
cmp
xor
pushf
sbb
mov
stos
rolb
nop
add
fcmovb
aas
jnp
out
mov
add
add
enter
inc
add
mov
mov
add
jno
add
mov
lods
and
mov
mov
arpl
std
dec
fdivrs
add
mov
add
or
add
ljmp
mov
add
jp
fstpt
mov
popa
test
jb
mov
pushf
lea
and
int
sbb
dec
cmp
add
out
imul
flds
xor
mov
imul
pop
xor
mov
add
add
xor
jns
add
push
or
in
iret
sub
xor
push
adc
sahf
repz
cmc
lahf
xchg
xchg
add
or
jns
outsb
decl
or
aad
lods
and
mov
jmp
cmp
mov
pushf
or
lods
xchg
sarl
loop
mov
add
mov
dec
mov
lea
mov
pop
push
add
mov
jmp
jae
jle
inc
add
mov
xor
jmp
pop
jle
add
cmpsb
mov
btr
repnz
mov
movlhps
fbstp
ss
sub
mov
xor
shll
out
fisubrl
ret
mov
jb
mov
xor
out
xor
xchg
mov
idiv
test
xor
inc
das
fimull
push
cmp
loop
mov
int3
loopne
mov
add
mov
add
mov
iret
pusha
add
mov
sbb
lock
mov
rcll
add
dec
sbb
stos
inc
add
stos
lret
mov
add
jae
adc
lahf
jg
dec
and
nop
add
fldenv
adc
mov
mov
nop
add
mov
sahf
je
clc
dec
adc
in
je
aaa
icebp
frstor
add
sti
pop
cs
aaa
mov
add
add
xchg
rolb
rolb
test
cli
xchg
inc
add
mov
sub
push
dec
sbb
mov
mov
add
sub
das
and
mov
add
jge
sbb
rorl
cmp
cmp
nop
add
mov
dec
mov
cmp
add
sbb
mov
add
dec
push
inc
or
aas
ret
iret
pop
pop
push
mov
int
push
test
mov
packssdw
daa
mov
popl
cmp
jae
push
add
fxch
popf
mov
jno
adc
mov
out
ss
mov
cli
add
add
add
outsb
or
add
mov
mov
int
imul
sub
mov
loope
and
cltd
movsl
or
add
mov
adc
mov
mov
mov
sbb
jb
mov
add
mov
mov
imul
dec
lret
mov
clc
pop
iret
sbb
xor
add
or
mov
mov
into
add
lahf
jle
imul
inc
add
or
push
lret
imul
sub
jmp
mov
inc
lds
add
loopne
mov
jge
xlat
aaa
bound
mov
adc
mov
xchg
add
add
aad
and
je
and
lock
add
cs
add
mov
cmp
and
sbb
push
xor
mov
int3
aaa
mov
jbe
out
add
out
arpl
dec
and
mov
testb
sbb
add
mov
adc
out
in
aaa
xchg
lea
out
cmp
cmpsl
cmp
sbb
les
jge
stc
or
inc
push
loopne
mov
add
add
add
faddl
mov
add
sbb
mov
insl
pop
mov
mov
mulb
mov
imul
pop
push
lds
add
mov
fbld
inc
int3
fsub
adc
mov
pop
pop
fmul
dec
idivb
add
jge
shll
test
mov
add
imul
pop
add
aam
je
add
push
add
mov
jns
push
add
dec
roll
add
scas
out
outsb
je
add
lods
movsl
fnstsw
into
and
pop
sbb
lcall
int
lret
dec
les
lods
jp
stc
mov
mov
rcrl
dec
mov
push
inc
add
and
cli
ljmp
mov
dec
icebp
mov
test
push
fcmovne
out
inc
pop
test
add
xchg
test
add
outsl
cmp
je
push
ret
and
mov
mov
sbb
aaa
push
cli
leave
sbb
mov
mov
je
addl
repnz
add
add
popa
xchg
add
les
add
adc
mov
ret
mov
dec
push
cmp
mov
pop
mov
sub
aas
xchg
sub
pop
outsl
addr16
dec
jb
mov
jns
js
mov
add
dec
cmc
mov
lret
mov
mov
xchg
in
mov
mov
mov
add
out
stos
mov
imul
sahf
rolb
mov
loop
mov
jp
fcoml
icebp
push
call
add
add
add
test
mov
or
sbb
pop
iret
data16
xchg
add
in
std
cmp
push
test
cmpsl
popa
sub
inc
sbb
inc
sub
mov
pop
hlt
pusha
add
add
dec
test
sub
and
outsb
aam
out
loop
mov
jle
cld
or
mov
adc
mov
sbb
cs
mov
xchg
add
popf
vpmaddwd
into
test
pop
lret
mov
sbb
jno
das
jp
add
cmp
pop
mov
shl
cmpsb
and
lea
addb
lea
mov
fnstsw
add
pushf
inc
repz
pop
xor
mov
out
xor
mov
ficoml
mov
fucom
cld
pop
or
push
add
adc
mov
add
fs
xor
and
cmc
add
mov
pop
jnp
pop
cs
add
mov
sub
inc
stc
mov
push
jecxz
testl
and
mov
fxch
daa
popf
sub
add
add
add
sti
mov
inc
add
inc
add
adc
add
mov
es
add
loop
mov
lds
in
arpl
mov
mov
dec
inc
pushf
in
dec
dec
enter
bound
mov
add
add
mov
pop
add
add
pop
pop
inc
add
in
adc
popf
icebp
mov
mov
fdiv
xchg
inc
add
aad
lret
out
iret
and
inc
add
fmuls
dec
adc
mov
add
mov
pop
xor
or
mov
mov
push
jg
fadd
dec
aad
push
mov
mov
add
mov
je
fcompl
push
push
push
test
repnz
xor
add
xchg
mov
mov
lcall
popf
loop
mov
cmovo
mov
sbb
push
add
mov
mov
mov
in
push
add
mov
pop
ds
sbb
cmp
lret
pop
aad
pop
and
add
mov
mov
pushf
cmp
mov
add
scas
mov
pop
jge
inc
das
pop
in
or
mov
mov
dec
or
imul
jle
jp
cld
and
cli
sbb
add
mov
cld
and
mov
jmp
mov
imul
int
jo
mov
mov
movsl
fucomi
pop
mov
mov
daa
pop
pushf
mov
add
pop
insl
leave
pop
jo
mov
add
sbb
lock
loopne
mov
push
mov
add
int3
pop
cmc
sub
jnp
loope
test
push
lds
sbb
int
add
test
lods
pop
cld
mov
add
mov
mov
addr16
adc
aas
and
mov
xchg
in
mov
or
ljmp
pop
push
pop
out
pushf
divl
push
movsb
and
enter
add
std
scas
nop
add
sub
add
mov
jae
out
or
pop
je
rolb
mov
push
push
rcr
sub
mov
notl
sub
stc
fadd
mov
fwait
and
add
repnz
adc
mov
push
xor
mov
mov
mov
and
pop
sti
push
push
inc
lret
add
bound
mov
pop
lret
mov
sub
add
sahf
mov
sbb
pop
fwait
jb
mov
add
add
mov
xor
mov
mov
in
ljmp
mov
test
dec
push
outsl
test
mov
dec
push
gs
add
sub
mov
adc
mov
add
movsl
roll
inc
push
ffreep
mov
add
and
and
mov
add
push
add
sbb
jo
mov
divl
add
and
xchg
mov
mov
mov
xor
mov
add
daa
jns
add
push
or
mov
lock
adc
mov
movsl
xor
push
push
pop
inc
jl
rcr
mov
mov
imul
sbb
push
scas
and
in
das
or
das
fnstcw
cmp
mov
adc
mov
aas
lcall
mov
in
cmpsb
or
add
push
aad
xchg
stos
ret
mov
leave
es
sti
and
mov
add
adc
fiaddl
push
xor
mov
loopne
mov
cld
out
jo
mov
add
jb
mov
sbb
jle
in
push
xchg
xor
das
xor
inc
push
adc
add
loope
mov
outsb
nop
add
ret
bound
mov
add
xchg
aad
mov
mov
add
mov
add
cld
test
cmp
js
push
repz
cmp
add
mov
jl
out
sub
test
adc
mov
out
xor
scas
jge
cmp
lret
out
mov
pusha
add
mov
movsl
in
mov
fistpl
mov
mov
or
mov
or
movsb
test
and
mov
jb
mov
fsubs
mov
and
sar
pop
xchg
dec
push
addb
xchg
pop
dec
push
add
repz
add
addr16
add
push
stos
leave
fisttpl
mov
mov
add
rolb
fldl
out
push
add
repnz
push
outsl
jmp
ret
jno
mov
aaa
aam
xchg
add
mov
inc
jp
cmp
sbb
push
mov
fadd
add
xchg
push
add
or
outsb
arpl
add
mov
sbb
test
jp
imul
and
mov
lds
pop
push
mov
cmp
or
add
add
mov
jmp
fwait
inc
insb
mov
sub
add
add
mov
add
lret
test
xor
mov
add
mov
aad
and
vmwrite
mov
cmp
add
mov
lahf
addb
loopne
mov
add
aad
jge
rolb
test
add
push
addr16
add
bound
mov
mov
and
mov
ds
mov
add
cmp
and
mov
mov
sub
pop
fcmove
jb
mov
add
out
lods
inc
jne
and
mov
or
or
add
mov
fs
or
add
mov
int3
mov
dec
inc
sbb
and
cmp
loope
cmp
addb
add
lock
push
and
mov
push
inc
add
das
adc
arpl
imul
mov
loop
mov
sbb
negl
jb
mov
mov
add
mov
pop
sbb
add
add
adcl
mov
mov
les
lret
or
lods
xor
mov
mov
adc
mov
sub
adc
or
sbb
loop
mov
xchg
jmp
mov
cmp
xchg
add
test
pop
sub
inc
jnp
xchg
pop
sahf
or
push
aaa
and
mov
cmp
outsl
mov
pop
or
sbb
stos
out
arpl
ret
sbb
or
pop
das
mov
out
adc
add
mov
jno
je
add
cmp
sbb
stos
repz
mov
add
dec
cmp
cmpsb
hlt
lcall
mov
aad
imul
inc
add
mov
mov
add
sub
dec
adc
mov
cmp
adc
pop
sti
stos
cmp
and
int3
push
jp
in
repz
jp
test
fwait
dec
mov
mov
lock
inc
add
mov
push
xlat
aaa
cld
add
sub
add
mov
add
add
call
bound
mov
add
push
out
les
mov
push
mov
repnz
icebp
sahf
test
add
es
add
add
dec
fisttps
add
pushf
inc
int
nop
add
add
ds
add
mov
push
inc
fst
cmpsb
sub
push
add
in
pushf
and
mov
popf
aas
rolb
mov
adc
aam
jne
mov
fsubl
mov
mov
inc
jbe
repz
fwait
inc
mov
repz
xchg
subl
out
outsl
sbb
mov
pop
and
mov
pop
pop
notl
pop
jle
inc
aaa
inc
inc
xchg
dec
mov
pop
pop
and
mov
add
cs
fistpll
out
les
jge
jns
es
sub
aam
add
adc
mov
in
jb
mov
mov
add
add
test
int3
xchg
inc
add
cli
mov
pop
sbb
jmp
popa
push
add
cmp
cmp
push
add
ret
repz
mov
and
mov
mov
imul
jnp
xchg
add
mov
mov
push
sbb
mov
add
ljmp
and
mov
gs
mov
inc
mov
and
das
push
add
add
rolb
mov
push
adc
sbb
add
mov
sub
addb
pushf
pslld
mov
or
mov
mov
xchg
stc
sub
jg
mov
divb
out
scas
or
sbb
mov
mov
push
dec
ljmp
jno
inc
jo
mov
fidivl
lret
jo
mov
jbe
add
push
add
je
or
leave
pop
addb
and
clc
and
mov
inc
scas
ret
dec
pop
cs
dec
rolb
mov
mov
xchg
inc
and
mov
into
jnp
add
mov
add
fstpt
push
add
aas
adc
cmp
add
adc
mov
jo
mov
dec
imul
addb
imul
pop
add
mov
rolb
mov
xchg
push
pop
mov
sbb
pop
mov
ret
leave
sbb
rcll
add
mov
xchg
stc
mov
jge
lock
rolb
lret
iret
movsb
inc
aam
das
enter
add
mov
arpl
mov
xchg
add
mov
popa
or
sti
int
sbb
inc
mov
out
mov
xor
add
idiv
or
imull
test
call
in
sub
cmp
xchg
pop
out
xor
mov
add
jb
mov
gs
cmpsl
jbe
sbb
pop
xor
mov
lret
sbb
add
add
scas
test
and
sbb
jecxz
pop
mov
pop
adc
addb
outsl
add
ljmp
into
std
push
rorl
mov
pop
or
or
add
xor
out
pop
rol
pop
fistl
add
aad
test
add
inc
daa
push
pop
lock
ret
jne
xor
push
outsl
fwait
rolb
popf
or
pop
jg,pn
test
xchg
cli
fdivr
ror
jbe
push
cmp
into
outsb
cwtl
cmpsl
dec
cmp
test
jno
outsl
out
jne
daa
int
push
inc
out
mov
add
add
movb
mov
add
mov
push
popf
xor
into
fsub
inc
add
rolb
ljmp
movsl
xor
cmp
rcll
add
xchg
add
mov
push
dec
cmc
cmp
add
mov
fxch
aam
jp
mov
mov
mov
jns
jo
mov
loope
push
pop
and
decb
fstl
jl
add
mov
or
add
jb
mov
lock
mov
and
push
cmp
sub
lods
ret
jp
add
rolb
mov
lock
lds
or
lea
mov
dec
and
mov
rolb
mov
mov
mov
sbb
add
add
mov
sub
dec
fucom
add
and
jmp
and
mov
adc
arpl
push
add
sbbl
bound
mov
je
data16
push
and
mov
add
cmp
repnz
mov
and
lods
sub
popa
or
repnz
scas
pop
cmp
mov
test
jp
std
xor
in
js
cmp
mov
jne
adc
bound
mov
add
addb
xor
mov
push
js
sbb
loop
mov
cmp
lods
inc
jno
add
push
jge
imul
sbb
mov
pop
sub
pop
pop
jge
lock
jns
sub
jb
mov
data16
mov
jecxz
popf
int3
loope
in
mov
dec
fwait
mov
lret
imul
inc
cmc
cmp
jg
pop
inc
add
pushf
jmp
cmp
mov
cmp
add
sbb
fldenv
rolb
mov
add
popw
and
mov
int3
and
out
and
sahf
in
aam
add
dec
sub
mov
test
fdivrl
cmp
loope
add
add
xchg
cmpsl
gs
in
ds
pushf
cwtl
push
ja
lret
test
add
mov
jle
jnp
xchg
scas
or
push
mov
push
push
add
jg
mov
mov
mov
mov
dec
lret
in
inc
ds
pop
sbb
aaa
and
mov
repz
mov
mov
cld
add
mov
jae
int3
xchg
xor
out
xchg
sub
xor
call
int3
jb
mov
addb
or
es
ja
add
mov
add
jae
inc
push
add
jno
adc
flds
cmpsl
fdivs
sarl
xchg
mov
push
add
sbb
adc
mov
sbb
adc
mov
lea
add
add
xchg
and
mov
mov
xchg
xor
cli
lods
outsl
push
push
add
push
xor
mov
jmp
outsl
cmp
mov
push
cmpsl
jecxz
add
rolb
mov
xchg
divl
add
mov
sub
loope
aaa
xor
inc
int
add
pop
bound
mov
mov
in
dec
jmp
xlat
sahf
jmp
jmp
lock
in
les
inc
scas
in
cmp
mov
faddp
fbld
stc
jp
jne
shl
sub
pop
adc
inc
pop
int
insb
insb
mov
or
jge
add
mov
pop
jne
jg
and
int3
loopne
mov
xor
sbb
lret
mov
pop
xchg
jl
dec
repz
stos
scas
repz
xchg
dec
sbb
stos
push
mov
mov
add
add
lock
dec
fidivl
aam
add
or
push
addr16
in
xor
mov
xor
mov
push
cmpsl
push
movsb
loop
mov
mov
add
icebp
lret
das
lret
out
out
loop
mov
addb
inc
lcall
sub
mov
inc
popf
lret
or
pusha
add
push
cmp
repz
jno
add
cs
add
and
mov
imul
push
lods
push
add
mov
and
mov
inc
test
jle
push
add
jge
mov
fwait
add
adc
inc
filds
mov
mov
int3
or
mov
mov
sub
dec
mov
es
dec
dec
and
mov
push
dec
inc
sub
iret
enter
jp
es
psllw
add
mov
aam
pop
adc
fwait
repnz
roll
pop
fistl
mov
popf
dec
rcrl
add
movsb
movsl
push
push
pop
int3
orl
bound
mov
mov
add
mov
add
out
lea
sbb
add
jg
dec
fcmovnu
and
mov
repz
jb
mov
sbb
mov
callw
mov
xor
nop
add
and
mov
sbb
add
mov
jbe
mov
cmp
pop
out
cmp
data16
and
mov
add
ljmp
xchg
add
and
mov
lcall
mov
add
jmp
pop
ds
adc
or
imul
mov
mov
enter
mov
das
pop
push
imul
push
add
xor
or
mov
mov
add
les
bound
mov
repnz
mov
adc
in
inc
lods
inc
mov
fisubrs
add
mov
mov
aaa
jge
mov
fwait
inc
jmp
loope
xor
mov
popa
or
cmp
or
or
cmc
dec
rolb
lcall
mov
addb
push
and
mov
shll
pusha
add
dec
push
fsubp
add
pusha
add
mov
lcall
jl
inc
add
outsb
add
rolb
mov
inc
hlt
xchg
mov
add
cmp
push
ret
arpl
fisttpll
or
mov
sbb
add
out
inc
add
rcll
mov
sub
sub
movb
push
add
jb
mov
mov
int
test
sub
aam
add
mov
lds
out
popf
mov
dec
fisubs
mov
cmc
int
sahf
in
hlt
fcomip
add
add
fptan
add
cmp
xchg
loope
push
cwtl
jg
aaa
imulb
xor
mov
outsb
out
add
jle
popa
jp
popf
ds
sub
add
and
mov
scas
aam
xchg
jecxz
jg
or
add
or
mov
rolb
lcall
sub
dec
xchg
and
mov
adc
mov
repnz
mov
das
add
inc
inc
dec
dec
cmc
out
jp
and
push
fmuls
clc
popl
lahf
cmpsb
lahf
fistl
mov
add
test
lcall
add
icebp
add
or
push
in
imul
rolb
mov
mov
lahf
stc
cmp
dec
push
shll
jb
mov
lods
pop
inc
sbb
movsl
js
pop
rolb
mov
and
cmp
sub
in
cli
jb
mov
mov
mov
pop
mov
push
add
mov
mov
pop
les
jge
jge
lea
fsts
inc
xchg
add
mov
jae
xchg
push
int3
lods
stc
push
cmc
mov
add
gs
or
pop
mov
adc
call
test
jg
sbbl
cmp
pop
out
ljmp
add
orl
imul
add
xor
xchg
pusha
add
mov
lahf
mov
xor
mov
cmp
mov
add
aam
xor
mov
jge
aam
mov
mov
sub
xchg
add
inc
add
mov
and
mov
sbb
js
xchg
cmc
jmp
and
mov
pop
pop
hlt
in
jl
add
push
mov
sbb
pop
fstpl
daa
push
mov
add
or
insl
lods
in
cmp
and
adc
out
push
add
mov
push
add
mov
add
es
xchg
lret
add
cmpsl
iret
pop
and
popa
dec
popa
push
add
add
ljmp
insl
jle
repz
xor
add
mov
lods
rcl
push
add
xor
and
adc
dec
addr16
ss
fimull
mov
mov
dec
sub
and
mov
pop
jnp
mov
push
add
mov
mov
call
sub
imul
add
sub
iret
add
mov
xor
mov
ds
jge
lcall
add
sahf
fucom
push
mov
add
fsin
cmp
mov
push
or
inc
clc
sbb
pop
mov
sub
insl
je
add
cmp
insl
push
divl
lock
fdivrp
aad
add
mov
cltd
and
mov
fmull
enter
test
int3
pop
adc
sbb
mov
cmc
cmp
mov
add
loopne
mov
notl
hlt
fsubr
mov
out
out
mov
imul
pop
or
stos
push
lcall
fwait
inc
fsubrl
out
fistpll
call
adc
add
aaa
addb
add
inc
cmp
adc
mov
jo
mov
test
test
push
add
push
add
mov
push
dec
or
add
aas
rcll
xchg
int3
push
pop
sub
mov
add
jl
mov
add
add
add
test
addb
mov
imul
jns
xchg
add
pop
jge
aam
jnp
out
mov
test
in
enter
mov
or
ds
push
push
xchg
nop
add
mov
add
xchg
add
mov
mov
out
lds
mov
in
push
iret
jae
add
pop
inc
mov
mov
mov
in
mov
repz
add
add
mov
adc
inc
addb
push
inc
push
xchg
cs
mov
mov
cli
mov
mov
add
cmp
or
arpl
add
mov
push
ret
int3
or
mov
imul
xchg
lds
pop
mov
mov
stc
aaa
add
addr16
add
cmpsb
cs
repnz
leave
sub
pop
test
dec
mov
mov
dec
push
into
ljmp
add
dec
mov
mov
mov
push
jnp
sbb
mov
add
data16
sbb
mov
add
mov
and
mov
mov
neg
and
add
push
add
cmpl
inc
mov
xor
push
fiaddl
