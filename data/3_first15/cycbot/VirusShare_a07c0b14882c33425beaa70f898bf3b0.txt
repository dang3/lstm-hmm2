and
loop
xchg
add
mov
ja
cwtl
in
mov
cwtl
lods
inc
add
add
inc
add
shll
mov
out
add
in
add
mov
add
in
data16
out
int3
lock
add
push
out
inc
repz
adc
les
lret
add
and
inc
add
add
and
dec
data16
dec
inc
add
xor
add
add
add
movsb
add
add
or
andl
gs
lock
add
mov
add
mov
imul
out
test
clc
int
and
fisttpll
cmpsl
inc
add
ljmp
stc
arpl
xlat
jl
push
addr16
les
cmpsl
sub
bound
mov
add
push
add
add
xchg
add
lods
test
sub
add
rolb
icebp
or
testb
sbb
add
add
sbb
add
adc
cmpsb
add
pop
and
mov
shll
add
adc
xchg
add
or
hlt
add
jno
pop
lea
add
sub
adc
int3
cld
or
adc
dec
inc
xor
andl
cmp
pop
sub
add
mov
add
mov
add
popa
mov
lret
add
hlt
add
mov
add
add
add
aad
add
mov
std
jb
xlat
adc
pop
rolb
flds
lret
ds
xorl
add
out
cltd
jno
lret
movsl
sbb
lcall
add
push
push
add
jge
test
pop
sbb
push
dec
fcoms
mov
xor
pop
inc
ficomps
sub
jae
add
lods
or
test
hlt
add
movsb
add
popa
rcll
mov
add
xchg
cmc
and
imul
imul
lcall
lret
lock
add
ja
imul
inc
add
or
mov
pop
push
insl
fdivs
test
add
xchg
addb
add
pop
fisubrs
sub
add
add
add
add
xor
pop
mov
mov
adc
sub
xor
inc
add
jp
add
mov
and
and
cmp
add
add
xchg
mov
add
cmp
sub
adc
lock
in
roll
add
add
mov
mov
adc
mov
testb
pop
add
sarl
aad
add
rolb
daa
into
iret
pop
xchg
xchg
add
lds
loop
shll
add
addb
add
mov
add
cmp
push
pop
movb
stos
push
adc
loope
add
or
adc
imul
nop
add
push
sub
xchg
xchg
add
sbb
mov
sahf
mov
xchg
jae
adc
movb
add
add
jne
jo
bsf
fmul
or
add
fucom
cld
ret
add
int3
mov
repnz
add
scas
rcll
push
dec
dec
or
fnstenv
add
jmp
add
mov
mov
inc
add
ret
add
mov
add
mov
add
aad
repz
loope
mov
repnz
push
out
mov
into
xchg
outsb
rolb
add
sbb
loopne
movsb
add
or
add
add
add
sub
add
fstl
add
add
mov
inc
add
mov
mov
mov
out
pop
pop
repnz
mov
fidivrl
adc
fcompl
cmp
add
mov
adc
pop
fmuls
ljmp
dec
addb
add
mov
insb
lock
add
mov
lods
xchg
add
bound
mov
fildl
cmpsb
add
mov
add
sbb
add
add
jbe
lret
push
add
add
ja
test
aas
xchg
add
mov
adc
mov
dec
cmc
fdivrl
add
add
add
sahf
push
add
loop
mov
cmp
dec
sub
fistpll
lods
inc
add
xchg
ja
xchg
mov
imul
out
push
add
add
movb
pop
pop
in
mov
data16
add
add
xor
ret
fwait
pop
xchg
add
popa
push
dec
inc
add
cmp
and
add
inc
hlt
add
sub
movb
cmp
es
daa
std
add
rcl
push
add
loopne
and
mov
add
inc
add
add
add
mov
mov
je
ret
and
mov
and
rolb
lods
imul
mov
jmp
add
add
lret
adc
movl
and
add
sub
mov
mov
mov
and
add
inc
adc
mov
call
mov
or
dec
sbb
add
in
jg
add
add
add
popf
or
and
les
fdivr
push
add
fildl
add
add
mov
sbb
rolb
nop
add
add
xchg
add
outsl
dec
mov
jl
lods
ds
arpl
out
hlt
add
rorl
imul
or
add
mov
add
inc
add
cmpsb
add
adcl
cwtl
mov
les
mov
enter
add
pop
push
inc
add
xor
push
mov
add
or
pop
imul
cmp
adc
in
fcompl
imul
push
xchg
daa
cmp
mov
add
add
push
add
cli
aas
lret
out
bound
mov
add
aaa
cmp
add
add
bound
mov
sub
sub
or
add
cmc
inc
add
mov
jmp
push
jmp
jle
add
nop
add
mov
cmc
jmp
addl
push
add
sub
ds
dec
mov
jae
cmp
mov
dec
and
xor
jecxz
add
push
add
jl
daa
nop
add
add
shll
push
ds
xchg
jmp
and
mov
cwtl
ds
cwtl
mov
add
mov
push
dec
xchg
add
fsubrs
dec
and
movb
add
add
dec
repz
cwtl
pushf
cmp
xchg
push
mov
es
dec
aas
daa
mov
add
mov
add
cmp
add
daa
fiaddl
mov
dec
aad
mov
dec
stc
cli
lock
inc
add
flds
nop
add
mov
adc
iret
test
fisubrs
xchg
add
add
xor
enter
add
std
call
rolb
loop
outsl
in
add
add
clc
adc
and
loope
imul
leave
pusha
add
cmp
add
add
mov
test
stc
mov
and
ret
or
std
clc
sahf
mov
add
loope
sbb
mov
xchg
push
negl
mov
add
jb
jmp
push
add
add
rolb
add
sbb
mov
xchg
add
jns
add
add
add
add
add
mov
test
scas
popl
add
add
add
jb
addb
add
push
xchg
add
push
pop
dec
mov
data16
add
cmpsb
add
pop
and
push
add
xchg
or
add
jle
shll
add
out
mov
lds
std
lahf
add
xchg
add
mov
cmp
call
rolb
or
int
imul
fnsave
add
sub
jmp
pop
aad
out
push
add
movb
mov
mov
in
popa
cld
enter
movsl
jno
xchg
popf
add
ret
ja
add
sub
fiadds
inc
add
add
add
push
add
lea
out
bound
mov
mov
mov
mov
add
add
add
int3
lahf
imul
sub
add
add
add
mov
call
lds
scas
imul
fildl
ret
xchg
jmp
add
add
test
add
lret
das
aam
decb
inc
add
in
stos
shrl
adc
mov
mov
sub
mov
addb
scas
pop
jmp
pop
sbb
dec
add
psubw
pusha
add
mov
lcall
test
jge
xor
jns
sbb
cmp
add
cld
pop
adc
jl
dec
mov
int3
sub
add
mov
push
add
push
ret
sti
dec
sub
bound
mov
mov
lcall
dec
add
add
movb
add
add
add
cwtl
add
shll
mov
into
mov
mov
mov
push
add
pop
pop
sbb
mov
inc
lret
les
iret
ret
bound
mov
add
jecxz
add
jae
xlat
fxch
test
or
jmp
push
out
imul
pop
dec
scas
mov
jl
add
add
jmp
rcll
add
xchg
jo
in
cmp
stc
hlt
add
mov
clc
cmp
sub
add
sti
out
sbb
pop
test
xchg
shll
popa
pop
dec
aad
lret
js
xchg
bound
mov
je
rorl
pop
add
mov
mov
add
fwait
lret
popa
leave
add
add
mov
mov
addb
jle
dec
movsb
add
mov
sub
add
cmpsl
stc
jnp
stos
xchg
add
arpl
xlat
mov
icebp
aas
xchg
add
push
in
adc
jb
dec
mov
jle
add
add
add
inc
imul
pop
fsubs
mov
add
mov
add
add
mov
mov
scas
mov
push
add
arpl
and
jbe
roll
pop
lds
inc
mov
test
mov
push
mov
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
scas
push
or
add
push
push
mov
add
rolb
sahf
mov
subl
adc
cltd
jnp
add
add
or
lcall
data16
mov
mov
daa
xlat
pop
addb
add
daa
cmc
pop
and
ds
cmp
add
add
or
insl
xor
cmpsb
add
enter
cmp
add
lods
sub
mov
jg
add
mov
mov
inc
add
fdivr
rolb
nop
add
mov
aam
pop
mov
mov
add
add
push
mov
add
jle
add
mov
cmp
pop
stos
cmp
cmp
test
push
std
lods
adc
inc
out
inc
add
lahf
aaa
xor
mov
shrl
mov
add
mov
dec
lea
add
stc
push
add
add
mov
add
push
add
add
xchg
add
add
call
add
daa
mov
adc
jbe
fidivs
inc
xchg
add
add
cmpsl
push
add
add
add
push
add
add
add
xchg
loop
sub
pop
lea
add
and
mov
add
lods
mov
test
xor
into
ds
add
mov
aad
in
addr16
pusha
add
sar
sub
out
add
add
jle
add
mull
rolb
add
je
xchg
add
cmp
add
mov
nop
add
movsl
xchg
loop
test
or
lds
jo
pop
adc
xor
add
and
mov
das
in
filds
jb
rolb
push
jnp
add
add
adc
ret
stos
mov
fwait
xchg
add
add
in
iret
mov
fisubrs
jns
ljmp
adc
nop
add
add
fptan
add
aad
add
add
je
add
inc
add
mov
out
testb
push
and
scas
cltd
xchg
add
sub
add
mov
xchg
jo
adc
outsl
addr16
add
test
gs
or
repnz
rolb
data16
jb
in
lock
ret
add
pop
fsubrs
and
sahf
lret
fmull
or
cltd
cmp
add
cmp
clc
pop
sahf
push
mov
sbb
out
loop
mov
cwtl
rcrl
add
lahf
push
add
mov
push
add
add
shll
fwait
pop
pop
lods
arpl
push
add
add
add
lahf
js
out
iret
push
adc
dec
rcr
andl
inc
add
jg
mov
fnsave
icebp
push
sar
scas
mov
mov
orl
jp
add
add
dec
hlt
add
ret
jg
add
jno
mov
in
mov
jge
add
add
lret
ss
add
dec
pop
test
xor
sub
outsl
mov
add
cmp
add
fidivl
add
pop
aaa
lds
out
sub
in
ret
fidivrs
lcall
dec
mov
addb
jmp
add
mov
jl
add
in
ljmp
inc
add
add
push
addr16
cltd
js
sub
aad
aad
inc
add
mov
jno
cmp
xchg
add
mov
add
ljmp
add
add
mov
dec
xor
mov
jns
out
adc
adc
push
jb
cmp
imul
arpl
add
pop
dec
loop
sub
fsubl
add
mov
js
leave
jns
pushf
add
add
cmc
les
or
rol
add
add
add
add
in
jno
out
mov
rolb
int3
loope
cmp
add
add
sahf
icebp
dec
xor
stc
leave
push
add
adc
int
add
push
add
cld
add
xor
aaa
mov
pop
testb
mov
mov
jp
push
cmc
inc
lods
fcmovb
test
push
push
mov
pusha
add
scas
mov
les
insl
imul
jne
add
sub
add
mov
push
add
push
fwait
jecxz
xchg
add
add
add
mov
inc
add
add
add
daa
nop
add
pop
xor
test
pop
lock
add
push
add
cwtl
lock
mov
fs
add
add
push
pop
sub
or
add
rolb
mov
mov
icebp
inc
add
outsl
mov
add
jmp
dec
and
stc
pop
fimull
daa
int
dec
dec
sbb
jmp
and
add
cwtl
js
outsl
outsb
repnz
cmp
arpl
mov
arpl
cmpsb
add
add
add
aad
push
add
xchg
testb
jg
jge
add
sar
scas
xor
adc
jle
adc
outsb
hlt
add
test
push
data16
add
push
dec
sbb
add
lock
les
imul
fnstenv
mov
mov
push
or
stos
ja
sbb
ja
add
call
ret
jp
mov
stos
cmp
add
add
cmpl
jmp
jg
add
add
add
mov
jge
push
add
or
nop
add
inc
add
call
sbb
add
fwait
sbb
aas
mov
test
imul
test
mov
pop
inc
or
test
cmp
add
add
rolb
add
add
add
sbb
add
push
adc
push
add
xor
and
mov
test
rolb
sbb
rolb
add
sbbl
dec
stc
pop
push
add
addb
lds
or
mov
adcl
adc
and
repnz
aam
nop
outsl
sbb
add
jmp
add
xchg
add
add
add
fildll
jne
cli
ljmp
enter
lcall
add
fimull
scas
dec
dec
mov
add
add
pop
daa
pushf
fdivrl
cs
adc
lods
mov
add
mov
add
and
add
rolb
add
cmpsl
adc
rolb
and
push
cmc
out
jo
inc
add
add
pop
inc
add
stos
and
dec
stos
addb
add
add
add
rolb
hlt
add
hlt
add
jecxz
imul
sub
cmpsl
mov
dec
adc
lods
mov
ds
pop
push
add
add
jb
rolb
loopne
push
mov
push
add
adc
pop
aad
mov
add
add
or
xchg
xor
inc
add
pop
int3
aad
add
xchg
add
add
push
sbb
add
add
sbb
cmp
pushf
inc
jns
push
iret
xchg
mov
push
cmp
lea
mov
inc
flds
mov
incl
sbb
inc
dec
mov
push
add
add
lret
sub
cmp
test
inc
pop
push
mov
add
add
sub
ret
add
mov
xor
xchg
inc
add
or
imul
add
mov
rolb
stos
sbb
mov
fiaddl
gs
stc
call
add
mov
arpl
lahf
adc
in
outsl
mov
add
xor
outsl
jg
cwtl
rcrl
add
jbe
scas
xchg
sub
mov
add
add
ja
dec
xchg
adc
mov
mov
or
add
mov
cmp
mov
fiaddl
mov
adc
add
pop
inc
add
add
pop
loop
je
stc
jge
and
xchg
imul
add
iret
push
add
pop
pop
adc
add
add
inc
testb
push
adc
aam
xor
adc
xlat
ret
testb
inc
jae
sub
in
xchg
add
lods
insl
push
add
mov
out
push
inc
add
add
add
add
pop
mov
add
scas
dec
int3
adc
sbb
pop
enter
pop
and
mov
add
add
icebp
xor
jl
add
cli
inc
cmp
add
mov
add
repnz
add
add
push
add
fdivl
jp
andl
add
out
push
add
mov
js
mov
mov
xchg
add
add
lret
ret
cmp
mov
jbe
dec
aam
add
arpl
movsl
xor
inc
add
add
iret
and
cmpsl
cmp
in
inc
add
mov
in
lock
notl
les
pop
data16
add
out
xchg
inc
out
jno
lock
add
je
push
add
sahf
fwait
sbb
add
mov
adc
inc
dec
cmp
jle
jo
xor
mov
xor
xor
mov
adc
mov
jno
add
push
hlt
add
cli
popa
addb
bound
mov
repnz
xchg
add
dec
cmc
push
add
mov
ja
jl
popa
sbb
dec
add
clc
fdivrs
add
add
add
lods
lock
mov
adc
in
xchg
sub
inc
add
jbe
pusha
add
xlat
sub
rolb
inc
add
lea
add
ds
test
pushf
jecxz
lods
lods
sti
sub
add
push
add
xor
cmpsl
aam
movsb
add
add
add
test
lea
add
xchg
pop
ja
add
mov
clc
push
add
add
add
mov
push
add
push
inc
add
in
int
cmp
cltd
addb
rolb
ret
add
mov
add
rcl
stc
xor
pslld
jnp
jmp
mov
add
cmp
jne
pop
jge
add
add
or
add
mov
xchg
add
jg
test
hlt
add
fstpt
mov
add
add
out
das
in
cli
mov
add
add
add
leave
fwait
lods
xor
add
cmpsb
add
data16
add
or
lds
add
mov
add
cmp
add
add
mov
rolb
jmp
sbb
stc
aad
push
and
add
push
add
fwait
ljmp
jae
cwtl
insl
push
movsl
jmp
add
popa
or
in
scas
rolb
add
iret
arpl
add
add
cli
mov
je
cli
xchg
iret
lahf
inc
add
xchg
add
sub
les
sbb
cmp
or
sahf
xor
bound
mov
add
mov
mov
push
inc
sub
add
add
add
mov
outsb
cmc
xor
sub
push
inc
iret
testb
dec
ja
add
pop
mov
inc
add
cmp
ja
pop
dec
loopne
mov
inc
add
test
stos
or
mov
dec
rolb
add
mov
cmp
in
sbb
mov
add
add
sbb
dec
mov
add
dec
rcrl
add
pop
int3
fisttps
and
add
imul
mov
push
add
test
inc
xchg
add
roll
sub
add
lret
add
lods
and
pushf
pushf
int3
cltd
push
add
bound
mov
push
add
and
es
jno
add
xor
jmp
add
add
mov
lds
dec
fisubs
add
add
adc
test
or
add
pop
les
dec
jb
fstl
add
test
aam
in
addb
cmp
add
add
add
mov
or
mov
add
sbb
xor
in
movb
jle
xchg
xchg
data16
add
sbb
mov
add
fsubrs
test
add
mov
sbb
add
ret
mov
aam
cmpsb
add
sub
push
add
sti
and
push
pop
imul
out
cmp
add
cmpsl
sbb
mov
add
mov
and
add
add
inc
add
sbb
mov
nop
add
cmp
xlat
mov
daa
sbb
add
adc
pmaxsw
mov
push
add
je
inc
addl
mov
mov
xchg
add
fwait
imul
add
adc
push
arpl
sub
out
movl
add
add
add
cmp
add
add
xchg
add
xor
xchg
add
imul
js
add
and
mov
jae
push
add
and
jge
add
or
imul
and
mov
std
push
fists
lods
add
test
sub
pause
add
mov
add
mov
rolb
inc
add
add
push
pop
in
sarl
add
call
inc
clc
in
push
addb
add
mov
inc
add
xchg
add
mov
add
add
add
add
add
xchg
or
xchg
add
cmp
ljmp
dec
outsl
cmp
add
inc
jmp
cmc
fsubl
add
repz
mov
jb
xchg
lock
cltd
push
add
mov
pop
and
mov
shrl
std
pop
add
sarl
add
add
jb
push
add
add
out
mov
pop
cmp
mov
ja
mov
xorl
sbb
dec
test
add
or
je
xchg
and
aad
add
xchg
mov
or
inc
add
mov
dec
nop
add
push
add
shrl
add
fisttpll
dec
add
movb
cltd
std
bound
mov
mov
loope
cs
cli
gs
push
add
or
push
add
add
hlt
add
mov
jo
dec
xchg
imul
pusha
add
cld
mov
mov
xor
push
mov
data16
pop
arpl
mov
dec
jb
lock
mov
xchg
mov
stos
orl
sbb
xor
and
mov
lret
nop
add
mov
add
and
jbe
xadd
call
xor
out
sbb
leave
or
add
inc
add
fidivrs
sbb
add
adc
add
sbb
add
pop
add
cld
sbb
loopne
add
mov
mov
xchg
xor
add
pop
imul
add
lret
mov
add
add
inc
push
movsb
add
addb
leave
mov
popf
push
xlat
repz
push
lods
loop
adc
add
into
jb
push
popa
enter
sub
daa
push
out
lds
xor
pop
pop
repz
add
inc
add
mov
or
stos
cmp
mov
push
mov
nop
add
idiv
push
add
jae
add
mov
lret
jbe,pt
pop
or
daa
stc
ds
orl
add
test
pop
scas
dec
cmpsb
add
int3
bound
mov
mov
rorl
cmp
stos
adc
add
or
mov
loope
dec
adc
andl
add
or
nop
add
stos
pop
pop
cmpsb
add
cld
cmpl
mov
cmp
add
add
add
mov
add
adc
push
add
out
inc
add
sbb
lds
leave
cli
iret
mov
add
sbb
jge
adc
inc
add
push
add
pusha
add
adc
faddp
stc
pop
and
mov
add
and
mov
push
sub
decl
mov
sub
insl
lds
movb
out
xor
pop
push
outsb
add
cmc
inc
adcl
lods
jno
add
add
add
add
mov
add
addb
add
push
add
das
fnsave
jp
add
push
inc
add
add
mov
add
pop
stos
push
add
ret
mov
hlt
add
add
add
add
mov
add
fbstp
add
add
add
add
sub
add
cmpsb
add
push
add
add
sbb
mov
add
mov
inc
dec
xchg
add
loopne
pop
jge
outsl
or
add
add
fbld
bound
mov
add
aad
inc
jno
test
pop
stos
sbb
xor
shrl
push
add
mov
aas
sbb
lods
iret
loope
push
rolb
arpl
in
mov
xchg
push
insb
adc
add
out
pop
fildll
mov
or
add
add
add
inc
sub
imul
cmp
mov
add
and
add
or
xchg
add
add
mov
daa
data16
xor
add
iret
sub
push
add
pushf
jecxz
sub
add
cmp
outsb
jl
add
ret
imul
popa
inc
add
ret
add
add
cmp
lods
pushf
mov
aaa
cli
or
mov
testb
outsb
into
cli
call
xchg
add
add
add
dec
jns
pop
mov
cmp
add
insb
pusha
add
and
mov
pop
sbb
dec
xor
mov
add
pusha
add
add
jg
lods
arpl
mov
js
push
add
mov
fs
ret
imul
pop
push
in
fcoml
cmc
outsl
mov
add
jg
clc
gs
xchg
into
adc
lock
and
add
pop
pop
jg
bound
mov
add
inc
clc
inc
add
mov
add
add
cmp
jo
xor
les
or
cltd
jecxz
mov
les
fmuls
or
test
cmpsl
and
mov
sub
outsl
pop
xor
add
add
xlat
add
add
mov
cmp
adc
xor
mov
lret
inc
add
add
add
mov
loop
les
jns
add
test
sti
je
cli
or
mov
loope
inc
loop
mov
fnsave
add
jno
add
dec
in
enter
mov
sahf
movsl
or
inc
add
cwtl
jae
sbb
add
in
lock
jmp
mov
pop
rolb
mov
add
dec
xchg
mov
loop
push
rcll
repz
mov
add
add
out
or
add
xlat
movsb
add
jo
jmp
add
add
add
pop
mov
faddl
push
add
xchg
add
adc
add
xchg
outsl
ds
mov
mov
add
pop
aas
lods
pop
lods
jge
ja
add
bound
mov
xchg
add
push
add
inc
push
mov
sub
addb
add
mov
pusha
add
gs
add
call
or
les
mov
stc
add
movsl
mov
and
sub
mov
dec
sbb
mov
xor
push
mov
test
and
add
cltd
outsb
mov
test
js
sub
mov
xchg
add
and
mov
movb
dec
loope
add
leave
aaa
mov
xchg
mov
add
add
mov
lret
add
dec
pop
cmp
add
and
jecxz
and
xchg
jge
push
add
push
jno
add
ret
mov
add
sub
out
out
add
add
xor
pop
or
add
addl
add
stc
addb
and
mov
or
sbb
nop
add
inc
fcomps
add
repnz
test
add
iret
test
add
mov
sbb
pusha
add
pop
inc
add
repnz
and
adc
add
addb
add
add
sub
add
add
mov
add
loop
mov
add
inc
add
add
add
sub
jmp
pop
out
pop
add
mov
pop
sbb
xor
xchg
add
or
int
in
jle
clc
add
mov
add
add
mov
loopne
cs
add
movsl
inc
sub
or
mov
add
dec
jnp
add
mov
push
add
add
cmpsl
mov
sub
add
sub
add
adc
insb
add
rolb
xchg
subl
int
add
add
in
xchg
int3
rcl
add
shrl
mov
movsb
add
add
push
or
imul
add
jmp
pushf
or
inc
add
fimuls
fiaddl
mov
dec
push
add
add
sbb
jge
push
add
mov
lahf
dec
jnp
add
mov
out
aam
cli
in
sbb
movsb
add
adc
gs
leave
jle
mov
addr16
mov
cmp
jl
test
or
adc
xor
add
add
add
jb
lahf
push
and
mov
and
popa
incb
pop
dec
addb
add
inc
inc
add
lret
jl
pop
ja
stos
xchg
push
add
sbb
add
add
rolb
or
add
push
add
adc
aam
movb
xchg
popa
jne
fildll
roll
in
mov
enter
inc
mov
mov
jbe
test
dec
aad
bound
mov
inc
in
lcall
push
fisubs
rolb
add
scas
and
pop
ficompl
mov
add
push
add
add
push
mov
xor
or
add
sbb
add
jns
gs
add
mov
pop
fsts
mov
add
out
pop
sub
aad
add
add
mov
jg
iret
or
add
add
scas
adc
xor
incb
pop
pop
xchg
add
add
rolb
out
jbe
mov
dec
inc
adcl
xor
jge
add
sbb
mov
mov
pop
cmc
lea
pop
or
add
add
add
xchg
add
add
jno
add
sbb
test
inc
mov
cld
fsubrs
jmp
stos
push
call
lahf
mov
in
out
add
sbb
add
add
aam
jg
imul
mov
xlat
push
add
stc
fisttpl
add
hlt
add
dec
stos
push
out
add
mov
aam
pop
movsl
xor
js
add
in
aas
xor
lds
add
scas
mov
repnz
or
or
pushf
jb
dec
cmpsb
add
shll
add
int3
ret
jne
xchg
xchg
add
add
add
push
lea
sub
mov
add
add
cmp
and
mov
push
add
lret
imul
lds
mov
push
fstp
sub
dec
and
xchg
add
add
add
add
mov
add
in
or
push
bound
mov
cmp
add
pop
mov
add
lods
jbe
aas
cs
xchg
add
ret
push
add
add
push
add
add
scas
and
xchg
add
or
add
lahf
in
inc
add
lock
mov
add
xor
lret
mov
add
mov
sahf
lods
frstor
add
out
adc
fdivrs
sbb
inc
add
rolb
add
rolb
cmp
pop
test
xchg
int3
aaa
rolb
mov
push
loopne
and
bound
mov
xchg
add
add
sbb
mov
rolb
add
xor
pop
add
add
mov
or
jecxz
pop
fldenv
pop
outsl
pop
inc
xor
cmc
loopne
gs
add
mov
jae
addb
add
mov
adc
cli
in
add
add
imul
add
add
add
je
mov
cmp
mov
adc
xchg
rolb
and
mov
icebp
sub
jbe
ret
xchg
and
mov
add
mov
add
add
mov
adc
push
sub
pop
cltd
adc
fsubl
sahf
add
mov
cmp
sbb
add
pop
xchg
xor
scas
loop
add
add
jle
add
mov
mov
lcall
add
add
clc
popa
pop
sub
shrl
inc
add
aam
out
mov
add
add
daa
pop
add
mov
cmp
add
jno
xchg
push
add
addr16
pop
lock
repnz
xor
rolb
jo
add
lods
adc
jbe
mov
mov
mov
and
mov
mov
push
fwait
mov
pop
insb
aaa
pop
fiaddl
cmp
inc
add
add
mov
mov
imull
push
jl
daa
add
movsb
add
aaa
inc
add
clc
or
fmulp
clc
sub
cmc
or
add
mov
clc
aas
shr
mov
decl
add
inc
mov
add
xor
add
mov
aaa
stc
jle
pop
mov
mov
add
and
out
add
jecxz
or
pop
test
add
aaa
inc
add
push
push
add
jecxz
add
add
and
mov
add
adc
out
stc
and
mov
cmp
add
mov
mov
add
add
add
or
add
or
aad
popf
repnz
mov
cmp
adc
xchg
sbb
add
pop
out
insl
pop
jg
pushl
test
pop
push
add
insl
or
add
mov
rolb
add
test
add
mov
or
mov
sbb
push
add
inc
mov
add
mov
jmp
dec
daa
into
and
mov
adc
les
xchg
add
push
cmpsb
add
mov
repnz
enter
add
call
add
add
pusha
add
cmpsl
sbb
add
in
out
insb
inc
add
add
add
add
fcom
cmpsl
aas
and
mov
dec
dec
mov
in
inc
outsl
pop
dec
push
pop
int3
sub
push
add
insl
cmp
jmp
jmp
add
out
lods
addb
ret
add
aad
cwtl
rolb
push
add
add
loope
add
pop
test
cmp
add
add
test
add
mov
adc
test
insl
shll
addb
pop
in
add
mov
xchg
cltd
data16
pop
xor
add
pop
or
les
outsb
fisubrs
sbb
pop
pusha
add
fdivs
add
jecxz
pop
inc
out
jle
inc
add
xchg
add
add
mov
and
mov
arpl
fxch
ret
add
and
mov
bound
mov
add
xchg
mov
add
add
push
movsb
add
and
and
jo
jbe
pop
movsl
cli
xchg
aaa
addb
cs
cmp
mov
inc
sbb
testl
add
add
enter
xchg
add
push
add
aad
add
add
mov
push
push
cltd
xor
cmpsb
add
add
push
add
inc
add
mov
jnp
add
and
jno
and
mov
sbb
add
ds
add
ficoms
mov
dec
popa
fisttps
add
xlat
mov
jl
jp
mov
mov
test
inc
add
sub
mov
inc
pop
mov
and
insb
fucompp
jl
clc
daa
or
jl
pop
xchg
leave
push
inc
add
inc
jl
in
mov
dec
push
add
xchg
cmp
push
lock
add
je
fnstsw
push
ret
fwait
jmp
stc
lret
das
dec
dec
rolb
or
nop
add
push
lods
jo
aaa
mov
mov
lods
lcall
add
loop
movsb
add
daa
out
iret
mov
pushf
cmpsb
add
mov
sub
add
add
sub
add
add
sub
cltd
cmp
add
add
add
add
into
faddl
incl
das
faddp
stos
arpl
sarl
mov
jp
fnstcw
je
pop
add
mov
testl
cmp
fiaddl
insb
pop
adc
jnp
add
add
push
sbb
jl
add
and
sbb
xchg
add
in
addb
add
add
add
xor
add
xor
icebp
arpl
add
jmp
adc
or
add
lea
add
test
int3
scas
adc
pop
out
sub
mov
add
adc
pop
push
pop
arpl
add
cmp
sti
jne
sbb
int3
nop
add
push
add
add
data16
mov
repz
add
mov
cmp
and
pushf
mov
add
addb
loope
testb
pop
push
inc
sahf
cli
mov
adc
aam
sbb
aaa
inc
inc
loopne
data16
repz
mov
mov
jecxz
aaa
loopne
add
mov
add
cmp
add
dec
mov
and
mov
iret
or
mov
pop
aas
cli
pop
ficoms
movb
imul
fsubl
test
sub
add
mov
fiaddl
inc
iret
jne
lea
pop
rolb
je
sub
jecxz
repnz
into
fwait
inc
fildl
pop
aad
jne
adc
and
mov
add
add
sbb
xchg
add
mov
add
jnp
lea
adcl
sub
adc
add
mov
or
push
lods
sarl
mov
test
rcrl
xlat
lock
add
test
mov
leave
add
cmp
clc
dec
rolb
movb
mov
push
add
ficoms
add
mov
cmc
stos
bound
mov
pop
int3
repz
sbb
in
lods
inc
add
lock
pop
xchg
jmp
cmp
add
xchg
add
hlt
add
lahf
sub
call
fdivr
cmp
jl
cwtl
push
add
xchg
push
sarl
cmpsl
or
movsl
sub
aaa
push
add
mov
add
and
mov
fadd
jp
push
adc
inc
loopne
xor
mov
cmc
fisubl
popf
scas
inc
add
dec
popa
frstor
add
pop
mov
inc
lret
mov
cwtl
mov
mov
ret
or
je
lock
nop
add
sti
jmp
lea
fisttpll
lds
adc
data16
ret
testb
add
push
xor
add
add
lret
mov
add
std
iret
mov
adc
adc
movb
add
xor
fistps
movsb
add
inc
pop
stos
out
jnp
add
add
add
add
or
dec
push
add
into
cmc
add
add
add
add
sbb
mov
fidivl
add
add
add
xchg
or
les
addr16
das
pop
not
rolb
xchg
add
add
add
mov
add
fwait
popa
jecxz
ljmp
cmp
push
and
mov
add
aas
scas
sub
add
or
mov
jmp
add
jle
cwtl
icebp
lea
jnp
add
mov
add
push
sbb
add
ret
jo
push
mov
add
jb
icebp
cld
insl
rdmsr
add
dec
mov
add
mov
add
adc
xchg
mov
leave
sbb
push
add
add
pushf
mov
xchg
add
add
aaa
dec
rolb
pop
in
cli
lds
sahf
pusha
add
ds
mov
and
mov
gs
icebp
out
loope
add
movsl
das
push
add
add
adc
rcrl
sar
add
ret
push
add
add
pop
sbb
add
popf
pop
mov
push
add
mov
pop
stos
movb
add
sti
std
rolb
ret
out
idivl
pop
stos
add
mov
jne
dec
jne
add
push
jmp
dec
fidivl
jg
sbb
add
add
je
dec
dec
sbb
add
cmp
adc
lahf
pop
push
repz
add
inc
add
in
data16
mov
push
mov
out
xchg
daa
cmc
aaa
clc
les
add
addl
or
add
jmp
movb
sbb
sbb
addb
arpl
dec
add
mov
add
add
nop
add
mov
jp
inc
add
popa
fs
add
sub
mov
add
cwtl
add
pop
aaa
pop
sub
add
add
mov
or
imul
les
mov
add
pop
scas
loop
or
and
aaa
push
sub
mov
imul
add
mov
scas
pop
rolb
jnp
mov
mov
add
ret
lods
mov
sbb
dec
lock
adc
jg
add
push
add
adc
xchg
loope
loope
xchg
dec
aad
add
mov
add
aad
mov
mov
add
dec
xchg
xor
out
xor
sbb
or
mov
fcoms
add
jo
dec
divl
push
add
mov
addb
popa
push
add
cmp
add
or
pop
fidivrs
or
xchg
mov
cmpsl
fnstsw
add
mov
add
add
add
popf
sub
mov
cwtl
lods
xor
ret
jbe
dec
xchg
add
mov
inc
dec
test
rcr
inc
or
sub
xchg
add
push
cmc
lods
pop
popl
xor
pop
out
sub
jbe
movsb
add
add
add
in
xor
add
add
addr16
jmp
add
xchg
add
mov
add
call
lods
jmp
movsl
movsl
out
sar
enter
add
xorl
add
inc
mov
mov
cmpsl
clc
dec
jle
add
cmp
add
add
cmp
in
add
inc
dec
dec
mov
jle
inc
add
movsb
add
data16
add
add
adc
shrl
lods
sub
repz
stc
xor
data16
jno
add
mov
in
pop
int
dec
add
mov
add
add
addb
mov
push
aad
add
jmp
bound
mov
in
lods
xor
shr
dec
push
imul
jb
icebp
jle
cmpsb
add
in
pop
cmpsl
xchg
add
add
scas
pop
pop
dec
jnp
add
add
cmp
testb
mov
add
jecxz
ja
add
int
add
dec
fs
jecxz
push
inc
add
out
test
add
nopl
push
add
push
sub
xlat
loop
sub
add
add
add
add
mov
outsl
mov
add
add
mov
dec
jg
add
cmp
andl
fucom
aaa
pop
sbb
cmp
mov
add
add
xchg
sub
fdivs
xor
test
add
add
jb
shrl
mov
add
in
xor
add
mov
daa
or
sbb
jb
iret
cmc
xchg
sbb
fstl
cmpsb
add
add
rcll
in
in
add
xchg
add
mov
push
cs
je
jl
jns
mov
dec
sbb
cmp
cmc
xchg
lods
add
and
enter
jle
call
add
testb
and
mov
adc
cmpsl
mov
lret
cmc
add
add
mov
dec
pusha
add
aam
add
arpl
sbb
sbb
sbb
sbb
pop
cmpsb
add
fsubs
mov
add
dec
jb
sahf
lea
sub
cs
insb
fwait
ljmp
xor
pop
bound
mov
add
add
xor
fsubp
add
jae
jo
cmp
xor
push
add
insb
ret
inc
add
mov
cmpsl
flds
xchg
add
in
es
inc
add
add
add
add
outsb
repnz
nop
add
push
add
dec
sti
jns
push
adc
push
add
lahf
test
adc
add
jns
adc
push
imul
icebp
mov
push
add
add
ljmp
dec
inc
add
push
add
int
fidivrs
add
add
sub
dec
sbb
incb
mov
add
sub
inc
mov
xchg
add
aad
fistps
bound
mov
sub
data16
mov
pop
xchg
add
mov
add
pop
ja
add
xor
xchg
jmp
add
add
add
sbb
mov
dec
mov
add
sbb
add
add
add
out
mov
add
sub
mov
xchg
addb
cmp
outsl
jle
add
out
xor
xor
and
pop
push
add
mov
push
add
std
insl
rol
add
add
dec
lock
mov
add
jmp
add
sub
mov
jnp
push
add
addb
cmp
xchg
add
pushf
add
stc
lods
jmp
fsubrl
inc
add
pop
mov
xchg
add
xlat
push
add
add
add
add
add
inc
add
pop
push
add
imul
add
add
mov
xor
enter
push
add
add
fmulp
stos
pop
add
add
clc
inc
add
add
daa
mov
jmp
sti
inc
add
add
push
adc
jae
xchg
dec
arpl
incb
mov
add
addb
add
push
pop
jge
xchg
push
inc
add
pop
je
xchg
add
pop
cmp
das
inc
add
test
mov
xchg
mov
in
jmp
add
pop
xchg
add
add
add
mov
aas
insb
adc
popa
cmp
fucom
or
add
add
cmc
cld
add
inc
add
clc
xlat
call
xor
inc
add
loope
xlat
clc
lret
mov
mov
add
add
adc
call
hlt
add
mov
mov
add
pushf
test
add
push
add
pop
pop
jmp
mov
sbb
add
mov
jge
dec
call
or
jne
add
adc
inc
add
add
add
mov
leave
imul
cmp
add
ret
add
into
sbb
or
mov
and
inc
jo
ret
mov
xor
cs
fcmovnbe
mov
add
pop
into
push
les
adc
cs
and
mov
pushf
addr16
lcall
rcrl
add
aam
lock
adc
daa
shll
add
inc
add
add
bound
mov
pop
mov
add
add
add
sbb
sub
cmp
clc
jp
imul
inc
add
add
mov
add
mov
lods
outsl
mov
dec
in
js,pn
adc
iret
xor
loop
xor
test
jae
adc
add
mov
sub
dec
or
inc
dec
js
int
add
add
loop
test
cltd
adc
dec
and
movb
xchg
sbb
add
add
add
add
clc
mov
rolb
dec
lods
xor
add
je
enter
cmp
incl
add
jbe
data16
inc
jle
add
dec
lods
adc
add
or
jo
fs
or
add
jae
iret
xchg
nop
add
add
fwait
pop
or
js
sub
add
jne
sbb
dec
mov
jle
add
and
add
leave
sahf
pop
mov
add
add
repnz
arpl
add
add
addr16
xor
xor
push
fbstp
add
dec
mov
mov
fwait
out
or
xor
nop
add
push
mov
mov
daa
cltd
adc
cmp
pop
clc
jnp
add
add
loope
jnp
xor
sbb
call
andl
xor
add
add
inc
add
les
flds
cld
fucomi
pop
clc
ss
addb
add
fnstsw
icebp
lods
nop
add
sbb
les
in
push
add
add
and
testb
stc
jmp
jmp
mov
sbbl
add
adcl
add
stos
lcall
jae
push
add
lods
sbb
mov
add
mov
mov
add
pop
scas
or
add
or
xchg
inc
popa
daa
sub
mov
jno
push
dec
jnp
pop
aas
add
add
in
pop
cmp
xchg
add
adc
mov
lock
add
ret
sub
into
jae
push
add
mov
lods
mov
cmpsl
jo
xchg
gs
popf
mov
lahf
push
or
add
xor
nop
add
add
dec
xchg
add
cmp
adc
pusha
add
xchg
add
add
add
add
jge
loop
pop
inc
add
pop
shll
jnp
add
int3
neg
ja
add
add
add
mov
decb
cli
inc
add
bound
mov
mov
add
lea
add
jl
daa
arpl
add
add
add
js
cmp
out
jge
and
pop
orl
add
ret
mov
mov
add
ljmp
mov
ficomps
dec
in
daa
jle
testl
scas
xchg
mov
out
in
inc
sahf
movb
sti
jg
add
add
add
add
add
add
jle
addb
enter
push
inc
add
inc
add
cwtl
insb
mov
push
add
mov
add
repz
cmpl
add
test
sub
pop
jl
xchg
sbb
rolb
xchg
dec
lcall
rolb
jns
lret
mov
add
mov
cmp
add
aas
movsl
and
mov
test
stos
rolb
rolb
add
and
enter
add
add
jg
mov
test
inc
loopne
fdivs
mov
je
gs
add
add
pop
mov
pop
xor
pusha
add
cmp
add
inc
add
roll
push
add
add
sub
addr16
xchg
aam
xor
and
mov
inc
add
add
rolb
jo
pop
out
add
insl
fs
add
adc
stos
adc
add
mov
add
pop
cmp
pop
cwtl
daa
mov
les
push
add
ret
lcall
daa
iret
inc
lret
add
mov
sbb
add
jbe
sub
add
fwait
dec
jg
add
lods
xchg
add
dec
mov
jb
add
stos
inc
add
mov
add
mov
mov
add
add
fs
orl
mov
in
mov
shl
arpl
jnp
xor
lret
fistl
mov
jae
or
cmp
jo
jp
add
mov
push
scas
mov
dec
push
add
sbb
adcl
add
or
add
add
add
add
add
add
movb
jle
xor
sbb
ret
mov
nop
add
or
mov
add
les
push
add
push
add
mov
cmp
add
je
add
mov
xchg
jnp
divl
add
add
out
sti
sub
push
fistps
jnp
mov
std
mov
add
xchg
add
pusha
add
mov
pop
imul
add
add
push
push
sub
lds
mov
xor
adc
mov
cltd
jno
daa
dec
jl
inc
add
inc
add
add
loop
adc
add
dec
and
push
add
movsb
add
add
add
add
pop
add
cs
jbe
in
andl
jge
or
loopne
xlat
das
outsl
int3
cltd
pusha
add
add
and
mov
jnp
add
stos
mov
mov
and
add
add
repnz
fldl
cltd
mov
xor
add
add
andl
ret
add
jp
jnp
or
dec
sti
xchg
enter
xchg
adc
dec
xor
xor
adc
lret
cmp
das
pop
mov
pop
pop
cltd
jl
sbb
add
pop
fwait
adc
push
enter
rolb
mov
xchg
in
outsl
push
add
or
addb
jl
int3
or
pop
add
mov
sbb
mov
dec
sub
add
repz
mov
jmp
add
adc
inc
add
and
add
xor
int3
mov
pushf
xchg
add
add
add
popf
popf
daa
loope
js
add
xchg
cmpsb
add
aaa
cltd
jb
pushf
and
mov
mov
outsb
or
loop
into
add
mov
mov
add
out
jno
mov
cmp
loope
add
add
mov
add
mov
lcall
mov
sub
add
push
add
rolb
pop
cmp
and
testb
add
add
pop
sub
push
in
scas
push
lock
adc
arpl
add
or
add
incl
mov
sti
hlt
add
sbb
push
add
das
mov
std
sbb
inc
add
outsl
insb
jecxz
add
add
ret
mov
scas
dec
adc
add
or
sbb
cs
and
or
rolb
add
push
movb
inc
add
sub
sbb
add
loope
add
out
loop
mov
sahf
mov
stos
loope
fidivrs
xchg
add
add
sub
xlat
lahf
cli
dec
aas
fmuls
jae
xor
sbb
mov
inc
add
push
add
shll
or
fbstp
jmp
test
xchg
add
add
ficoml
adc
int3
inc
xchg
push
enter
fwait
cmp
xor
arpl
rolb
ror
dec
insb
rolb
std
cmc
icebp
lods
adc
hlt
add
mov
sbb
xchg
add
add
in
jns
fsubs
jecxz
push
add
mov
inc
outsl
jbe
inc
lods
aam
in
jne
test
adc
push
add
movsb
add
fucomip
stos
popa
jno
add
addb
pop
data16
addr16
add
add
ret
or
shrl
mov
mov
xchg
xchg
add
sti
jle
add
inc
pslld
rolb
or
sub
push
add
xchg
mov
add
add
fisubl
add
pushf
mov
fadd
add
add
jl
add
aam
or
or
std
or
mov
pusha
add
and
mov
pop
popf
mov
mov
add
jb
sbb
cmp
and
mov
jl
data16
sub
mov
stos
mov
cmp
rolb
mov
add
inc
add
add
jmp
outsb
lret
or
mov
push
add
sti
sbb
insl
out
dec
test
inc
add
mov
add
lock
add
lods
push
add
out
xor
clc
pop
dec
and
add
ljmp
clc
nop
add
add
add
cli
pop
out
adc
pushf
sub
mov
dec
sbb
cmp
mov
addr16
mov
add
in
dec
jcxz
add
enter
xchg
add
add
int
xorl
test
repz
jl,pn
xchg
add
loopne
sbb
inc
jb
add
mov
add
rolb
cmp
push
cli
movsb
add
rolb
rolb
call
jle
sbb
add
int
mov
add
inc
add
mov
ljmp
xchg
add
add
add
mov
jne
cmp
add
arpl
iret
test
add
add
push
inc
add
add
pop
sbb
mov
aam
psubusw
cmp
add
in
call
add
aam
inc
push
into
jae
dec
pop
mov
cld
cli
jp
aam
data16
add
adc
mov
lock
xchg
add
add
add
andl
iret
cmpsl
mov
icebp
cltd
ss
push
add
inc
lahf
icebp
scas
mov
push
add
or
mov
lahf
arpl
fadd
add
add
mov
add
nop
add
xor
add
mov
pusha
add
cmp
les
mov
add
adc
add
inc
add
inc
cmp
add
cmp
cmpsl
add
add
mov
mov
data16
pop
push
add
sub
movsb
add
jle
jle
mov
nop
add
and
mov
sbb
in
sbb
insb
add
add
sub
mov
add
add
add
sbb
mov
cmp
test
cmp
or
add
add
cli
into
arpl
or
adc
adc
pslld
cmpsb
add
add
push
sbb
add
inc
add
add
lds
sti
cltd
mov
pop
jae
adc
or
scas
mov
data16
data16
je
xor
icebp
into
js
add
and
add
or
lcall
dec
cmpsb
add
add
test
mov
add
mov
data16
mov
push
add
pop
sarl
mov
xor
cmc
pop
addb
push
add
add
xor
add
mov
loope
loop
out
pop
push
insl
bound
mov
add
add
add
add
pop
pop
add
lret
mov
adc
gs
adc
jmp
add
in
add
dec
fdiv
add
add
add
add
inc
add
add
add
add
scas
jbe
shl
cmp
add
cmp
add
and
add
push
jns
add
add
cmp
loop
jge
inc
add
insl
xchg
mov
jge
mov
icebp
adc
out
les
ja
sbb
fcoml
jmp
add
call
frstor
cmpsb
add
insb
add
add
add
mov
jne
jb
pop
aas
add
rolb
sbb
add
lret
dec
pop
adc
fidivrl
xor
jno
mov
mov
sbb
int3
add
mov
test
xchg
add
shrl
data16
add
add
out
xchg
mov
mov
nop
add
pop
mov
add
cltd
sub
int3
fs
cmpsl
inc
add
add
add
daa
sub
add
cmpsb
add
imul
add
int3
add
mov
add
nop
add
arpl
cld
pop
or
testb
sub
mov
lcall
jmp
sbb
add
add
loope
push
add
xor
fdiv
add
add
add
add
popa
aas
mov
add
or
mov
addb
loope
fdivrs
or
addb
jbe
push
add
xor
mov
inc
aam
add
aam
push
andl
add
hlt
add
add
and
add
mov
add
mov
rcll
icebp
cltd
int
add
mov
fwait
xor
pop
jmp
sbb
add
int3
sarl
sbb
cmp
dec
xor
xor
pop
hlt
add
add
mov
repnz
add
add
cld
lods
jo
sub
and
mov
add
jge
fwait
adc
add
jge
cld
add
dec
mov
pusha
add
add
flds
add
rolb
mov
add
daa
adc
mov
rcrl
add
jmp
ds
add
int3
cmpsl
add
adc
fsubl
cs
add
add
add
rolb
arpl
mov
fwait
add
cld
imul
sub
add
bound
mov
mov
in
sub
push
mov
jle
add
push
popf
add
pop
imul
add
cmp
mov
lret
sub
adc
mov
insl
and
mov
into
lahf
out
mov
xor
icebp
mov
xor
fnsave
pop
add
mov
push
add
out
add
ja
aam
lods
adc
mov
bound
mov
in
outsb
in
icebp
pusha
add
nop
add
scas
pushf
nop
add
add
add
es
add
or
xor
mov
cli
xchg
mov
and
out
stos
cmp
xor
std
lahf
pushf
push
add
fistps
pop
lds
test
add
or
aam
jmp
jno
mov
and
dec
mov
lcall
xor
subl
add
sub
mov
mov
add
cld
cld
add
push
add
add
test
add
mov
ljmp
rolb
xchg
add
add
loopne
and
mov
call
cld
mov
add
pop
and
add
adc
pop
add
adc
sbb
add
sbb
add
psubusw
sub
icebp
dec
ja
addr16
add
inc
add
addb
xchg
add
jbe
dec
int
pop
dec
mov
pop
sysret
mov
add
xchg
add
jecxz
xor
imul
enter
lods
jmp
add
jns
add
and
add
add
clc
aas
hlt
add
add
xchg
int3
or
add
add
dec
loope
rolb
data16
adc
push
add
add
add
add
add
ret
out
addb
ficoms
cmpsl
or
add
add
pop
in
cwtl
scas
fsubl
loopne
enter
sub
ljmp
aaa
das
data16
jecxz
add
add
stos
js
add
les
adc
jbe
mov
or
inc
mov
add
adc
add
xchg
inc
add
mov
xlat
pop
dec
push
mov
cmpsl
add
sub
inc
add
add
repnz
cltd
aam
fildl
xchg
add
mov
xchg
addb
out
lret
add
xor
dec
jno
sub
jno
dec
xchg
cmc
stos
pushf
movsb
add
add
add
add
xchg
mov
aam
mov
in
pop
mov
imul
jb
imul
pop
fidivrl
mov
cmp
mov
js
push
add
sbb
mov
lret
in
mov
xchg
add
lret
mov
es
xchg
in
sbb
add
jle
add
js
add
mov
gs
push
add
mov
mov
js
add
xor
mov
add
dec
push
add
xchg
add
xchg
push
aas
rolb
rolb
mov
frstor
add
add
add
mov
je
enter
lret
push
bound
mov
mov
add
add
mov
sub
add
into
call
mov
pop
xchg
ds
xchg
les
or
add
or
lods
add
xchg
int
add
xor
add
inc
jecxz
push
testb
add
xor
add
addb
add
inc
add
dec
mov
add
add
add
xchg
add
cmp
push
xchg
add
imul
fildl
sbb
dec
mov
pop
and
jecxz
dec
cwtl
jae
add
mov
add
add
add
inc
add
and
mov
inc
orl
lock
mov
addr16
pop
sub
push
add
sub
dec
or
xchg
std
ret
out
das
pushf
data16
jge
xor
std
jne
mov
push
add
pop
iret
mov
push
add
testb
ret
sbb
loope
add
cmp
add
fistl
add
bound
mov
adc
fnstcw
add
add
mov
add
cmc
mov
add
imul
inc
jl
xlat
xor
fsts
add
add
shrl
movsl
sbb
ret
add
test
or
sub
dec
mov
adc
add
adc
js
jnp
lods
addb
ret
fldt
decl
push
add
xchg
add
add
add
fmulp
dec
mov
leave
testl
int
outsl
mov
pop
cmp
sub
test
push
add
inc
add
popa
dec
outsb
cmp
bound
mov
add
sub
scas
lds
test
sub
scas
sub
cmp
add
rolb
loopne,pt
inc
xchg
pop
push
out
cmpsb
add
add
movb
cmp
mov
add
sbb
dec
push
add
cmpl
lock
ret
add
fisttpl
movsb
add
mov
js
imul
stc
fcmovb
hlt
add
add
add
mov
add
les
push
add
add
jnp
cmp
in
scas
adcl
mov
and
mov
lds
add
push
add
sti
push
popa
dec
xchg
xchg
enter
pmulhuw
lds
loopne
pop
js
add
jecxz
scas
mov
popf
jecxz
add
movsb
add
or
je
fimuls
lret
add
out
push
test
test
inc
add
shrl
jno
stc
mov
push
pop
pop
add
xor
in
xchg
lcall
add
mov
mov
jle
jg
cmp
or
lea
andl
in
or
add
sub
mov
mov
mov
adc
imul
add
add
aaa
mov
testl
in
adc
pop
dec
mov
add
in
movl
cmp
push
add
add
inc
add
sbb
fbld
mov
jp
adcl
jns
add
cmp
int
stos
cmp
push
out
movsb
add
mov
stos
addb
sti
ljmp
sbb
mov
ficoms
add
add
pusha
add
outsl
shl
add
imul
add
dec
mov
sbb
add
jmp
mov
add
mov
cmp
int3
mov
mov
add
and
mov
lds
in
or
jle
and
lods
sahf
outsl
sbb
add
add
sub
add
sbb
aaa
and
mov
test
mov
add
icebp
sahf
lret
dec
and
loope
add
leave
or
rcll
add
sahf
inc
add
xchg
push
add
inc
and
in
rolb
and
mov
cmp
add
add
mov
add
cltd
mov
mov
add
adc
insb
mov
mov
add
jmp
cs
mov
cltd
addr16
leave
fnstenv
cli
and
add
sbb
mov
and
mov
fdivl
add
add
add
adc
add
mov
add
das
cmp
popf
test
mov
repz
add
xchg
scas
inc
sbb
add
lds
stc
mov
iret
mov
ds
js
cmpsl
mov
pop
pcmpeqd
ds
inc
add
dec
lods
xchg
add
jg
push
jg
sbb
add
cmp
pop
testb
stc
jno
or
lahf
cs
test
add
dec
outsl
xor
jmp
roll
add
xchg
add
xchg
mov
add
lahf
mov
cmpsb
add
and
mov
xchg
add
lods
adc
add
rolb
dec
sub
or
adc
mov
add
xlat
jg
xchg
mov
add
das
test
push
add
sti
mov
sbb
xchg
out
sub
add
adc
pop
xchg
adc
xchg
cmp
add
sbb
add
add
mov
mov
das
fsubl
leave
xchg
xor
pop
cltd
sahf
mov
or
adc
cmp
fstl
les
stos
pushf
pop
fsubr
push
sbb
lret
cmp
add
push
add
lcall
jg
add
add
cli
pusha
add
mov
jecxz
sub
add
addb
add
lret
scas
fstps
pop
lret
int3
jg
cmp
fwait
mov
outsb
or
test
adc
jnp
rcll
add
cmp
add
and
pop
movsb
add
mov
push
add
pop
fwait
jbe
cltd
jo
inc
outsb
push
insl
jns
add
jmp
jg
jb
mov
cmc
sub
push
add
mov
push
add
add
rolb
xchg
sub
push
add
mov
cmp
inc
add
add
dec
insb
movb
jne
add
add
mov
add
pop
icebp
jns
aad
add
add
mov
dec
fcoml
and
ret
lcall
in
inc
add
add
adc
adc
or
add
inc
or
scas
frstor
mov
add
adc
mov
jnp
mov
xor
or
data16
mov
add
xor
lods
lret
mov
dec
int3
push
imul
shll
mov
lock
leave
cs
les
xor
add
iret
in
mov
add
mov
inc
add
dec
sarl
out
in
mov
xor
xchg
add
add
loop
and
mov
jle
rolb
and
mov
add
pop
popa
mov
mov
adc
mov
lret
rcll
lret
hlt
add
cwtl
bound
mov
add
push
add
mov
cmpsl
outsb
push
add
and
rolb
and
mov
cli
pop
cmpsb
add
out
push
add
negl
lret
loop
sbb
mov
mov
add
add
in
xchg
xchg
daa
fisubrs
sub
push
mov
iret
out
add
loop
xor
mov
dec
and
daa
and
add
loop
inc
pop
dec
out
jg
lret
sbb
sbb
add
push
add
add
rolb
xchg
cld
mov
adc
ret
test
push
add
sub
add
add
add
push
jbe
xchg
add
add
pop
lea
shll
cmc
mov
movsl
sbb
add
scas
adc
add
je
push
loop
sti
dec
xchg
add
xchg
xchg
add
add
popa
push
or
add
pushf
cmp
add
sbb
aas
pop
out
mov
add
mov
sbb
add
daa
mov
jmp
lahf
mov
cwtl
pushf
push
xchg
add
daa
mov
popf
mov
cmpsl
xchg
add
fists
lret
out
aad
popf
inc
add
push
add
or
xchg
aas
cmp
push
add
add
fucomi
clc
data16
imul
icebp
idiv
adc
std
cmpsb
add
repnz
add
mov
add
xchg
add
out
push
add
out
pop
jge
mov
gs
push
add
or
in
movsl
cmp
clc
lret
lods
div
add
add
jae
push
add
add
dec
out
lods
jmp
add
mov
loop
out
fcmovb
add
and
popa
mov
push
add
icebp
add
mov
add
mov
add
pop
mov
lds
jo
lahf
and
xor
fnsave
iret
dec
int
les
addb
mov
add
add
movsl
mov
setb
loope
mov
test
xor
movsl
pop
mov
pop
jmp
mov
mov
pop
xchg
dec
add
movsb
add
cs
jb
insl
jo
push
xor
xchg
add
mov
push
add
adc
fdivrs
mov
add
mov
add
mov
add
fs
mov
add
mov
in
xor
pusha
add
mov
add
pushf
xor
add
cmpsl
mov
sbb
add
lods
jae
decb
add
push
lods
fcompl
jno
xchg
or
xchg
xlat
mov
test
and
cmpl
add
std
xor
add
add
pop
pop
add
aad
ficomps
add
add
add
xor
add
push
add
cmp
jne
pop
sub
and
pop
sahf
gs
addb
in
inc
xchg
add
xchg
add
add
add
and
xchg
or
jbe
and
scas
mov
in
dec
nop
add
mov
mov
jnp
imul
insl
jmp
pop
sub
push
mull
add
and
add
mov
cmp
mov
icebp
cmpsl
rolb
iret
clc
cmpl
sub
mov
pushf
pop
fistpll
cmpsb
add
mov
add
les
jne
popf
ret
lock
adc
push
add
jecxz
add
sub
cmp
mov
inc
add
inc
shll
test
add
mov
adc
fsubrs
add
dec
jmp
sub
sti
and
mov
dec
jno
cli
push
mov
aam
mov
in
faddl
add
xchg
out
push
add
scas
sub
add
inc
add
add
jle
mov
add
dec
pusha
add
bound
mov
mov
cmp
add
inc
mov
sbb
pop
out
jae
xchg
xchg
push
std
mov
mov
add
iret
dec
fistl
in
js
jb
push
daa
mov
cltd
sbb
rolb
pmuludq
mov
out
outsb
sub
int3
aas
in
dec
fisttpl
sub
add
add
xchg
add
add
push
add
std
cmp
ret
xor
mov
add
adc
dec
out
aaa
jo
ss
add
add
add
inc
daa
and
mov
fisubrl
loopne
and
mov
push
add
mov
pop
idivl
mov
out
daa
inc
fstpt
add
test
call
dec
lock
aam
or
add
mov
xlat
addb
je
les
mov
mov
hlt
add
jae
jb
icebp
movb
out
mov
out
ja
xchg
add
bound
mov
pop
fs
aam
aas
fistl
add
jge
add
lods
inc
test
mov
add
jmp
sbb
push
ficoml
add
cmpsb
add
imul
lods
popa
adc
or
movb
sub
xor
popf
mov
xchg
imul
test
cmp
rolb
out
jg
lock
inc
fwait
icebp
out
fdivs
sbb
add
gs
jg
inc
add
mov
loop
xchg
jae
in
dec
mov
sub
scas
mov
inc
pushf
adc
dec
add
imul
adc
cmc
push
rorl
add
add
outsb
inc
imul
stos
sub
jae
xor
sbb
cli
sbb
sub
sbb
fnstcw
dec
xor
mov
daa
add
push
lret
movsl
jecxz
add
js
in
dec
addb
jecxz
sbb
push
add
and
add
mov
lods
pop
jns
xor
sbb
outsl
jmp
add
or
mov
mov
cmpl
add
outsb
pusha
add
add
jo
adc
jb
lret
pop
movsl
lret
pushf
imul
add
xchg
add
add
fstl
add
mov
xchg
add
cmc
iret
jecxz
cmc
inc
add
movsb
add
add
pop
cmp
push
add
adc
fcoml
fsub
mov
push
jo
fsubr
or
xchg
xor
sbb
push
add
dec
stos
xchg
add
ret
inc
and
enter
or
add
add
mov
add
mov
clc
test
adc
jb
mov
mov
dec
xchg
lods
lea
jecxz
int
mov
dec
into
adcl
add
jno
jb
jmp
jns
into
test
mov
mov
insb
jno
repz
sub
xchg
pop
movsl
into
xorl
add
jl
add
pop
subl
out
jg
lock
pop
sbb
jge
pop
mov
jne
movsb
add
jns
mov
movsb
add
sub
mov
pop
lret
rorl
fmul
jno
adc
insl
cmp
sub
add
add
add
mov
aad
and
mov
xor
pushf
fwait
leave
lods
or
add
mov
pop
or
jle
fsubs
add
cwtl
loop
inc
add
add
inc
dec
testb
gs
ljmp
testl
out
sub
add
add
mov
add
clc
inc
add
nop
add
mov
add
jecxz
sbb
add
adc
push
inc
lret
addr16
lret
mov
cmpsl
mov
and
mov
test
aaa
and
mov
add
xchg
int3
jg
add
xchg
add
inc
add
add
call
leave
mov
cli
fiadds
std
xchg
loopne
imul
popf
or
add
add
xchg
add
add
add
mov
xchg
add
iret
clc
mov
mov
add
add
inc
clc
sarl
ret
push
add
add
popf
jb
rorl
xchg
add
add
add
adc
aad
mov
mov
rol
add
add
cmp
pop
shll
sub
lcall
inc
add
lds
sbb
add
jmp
icebp
jecxz
add
out
dec
cmc
outsl
shll
sbb
xchg
add
insl
mov
dec
inc
sbb
add
add
loopne
add
sti
xchg
adc
cmp
dec
inc
or
and
add
add
add
add
add
dec
rolb
and
data16
test
mov
mov
fnstcw
mov
nop
add
add
xchg
cmp
add
push
add
mov
mov
add
add
pushf
xchg
insl
mov
and
into
sbb
jmp
testb
ljmp
add
add
dec
loop
jnp
stos
sbb
aad
or
add
mov
xchg
or
add
push
mov
add
and
mov
mov
jle
sub
int
pop
mov
sub
in
mov
movsl
aaa
jb
push
add
je
lea
dec
dec
pop
xor
loop
sbb
add
fidivs
sub
add
sbb
repz
addb
lea
lret
xchg
mov
add
mov
sahf
jae
add
sub
mov
test
sub
or
mov
inc
mov
rcrl
or
repnz
popf
lcall
or
add
in
repz
push
or
xchg
jl
pop
je
fwait
inc
add
mov
or
out
shl
repnz
flds
mov
mov
in
adc
mov
xchg
jmp
xor
fldenv
pop
or
nop
add
sub
lea
loope
and
ret
lds
rcll
dec
repnz
jb
addb
fs
mov
rolb
in
ss
add
js
add
add
rolb
xor
ret
adc
stos
ret
xor
xor
mov
jbe
xchg
dec
stos
push
mov
jg
add
add
add
pop
mov
mov
add
add
mov
lods
sahf
add
cltd
sbb
sub
testl
inc
add
jns
dec
or
pop
lahf
insl
cltd
push
lret
addb
add
testl
popa
dec
stos
cltd
les
jnp
mov
bound
mov
add
add
cmp
pop
loop
mov
outsl
jg
mov
stos
and
dec
mov
stos
push
push
jg
call
mov
int
jmp
add
add
daa
lret
xchg
adc
lahf
jae
mov
addr16
mov
in
ret
in
loope
int3
and
mov
add
loopne
xchg
add
in
loop
push
add
dec
and
add
push
add
add
mov
cmpsb
add
add
dec
pop
and
mov
add
sahf
mov
aaa
repz
addb
addb
add
fcmovnbe
add
repnz
mov
dec
rolb
idivl
hlt
add
rolb
push
pop
cmc
adcl
and
les
mov
add
lahf
push
xchg
add
jle
add
xor
enter
xor
fwait
jmp
mov
loop
scas
xchg
add
inc
cltd
mov
pop
mov
inc
add
add
add
mov
add
add
and
add
leave
cld
cmp
add
add
add
cmp
lret
and
mov
dec
je
mov
fcmovbe
pusha
add
or
or
lret
xor
test
sub
add
sbb
add
add
sub
imul
and
scas
inc
add
pop
fstpt
mov
mov
xlat
mov
xchg
mov
sub
stos
sbb
add
pop
loope
mov
aaa
lret
mov
xchg
mov
add
imul
mov
jl
pushf
ret
xchg
add
add
pop
bound
mov
ret
push
add
add
outsl
xchg
or
add
mov
cwtl
aas
sbb
mov
imul
add
add
xchg
jae
out
jg
int
filds
jnp
mov
xor
xor
pop
inc
mov
cmpsb
add
and
jp
lret
dec
int3
or
sahf
cmpsb
add
fsubr
xor
cmpsb
add
add
dec
pop
out
imul
stos
call
loope
je
das
call
mov
pusha
add
adc
into
cmp
sbb
adc
inc
add
repnz
xlat
and
dec
cmpsl
mov
inc
jnp
add
add
mov
add
xor
sahf
test
mov
testb
ja
addr16
lock
cs
dec
xor
mov
cmp
hlt
add
jmp
push
add
cmp
imul
xchg
leave
or
in
cmp
adc
sbb
add
xorl
fisttpll
or
clc
pop
mov
cs
cltd
movsb
add
jp
test
push
add
inc
add
fimuls
dec
lcall
lods
out
sarl
add
out
add
mov
fildll
add
add
mov
insb
pusha
add
xor
mov
je
cmp
add
mov
add
add
add
add
add
add
add
sahf
daa
jmp
xor
add
bound
mov
cmp
add
mov
lcall
addb
fimuls
cmc
lds
into
pop
cmc
lcall
push
loop
mov
jecxz
add
or
cmp
test
jmp
sub
or
push
imul
movsb
add
jl
and
loop
jno
ljmp
in
test
aas
xchg
cmp
leave
or
push
push
add
xchg
test
add
mov
sub
add
add
xlat
and
mov
mov
sub
add
add
js
add
sbb
add
in
jb
imul
inc
and
stc
int
xor
add
mov
xor
add
ja
xchg
aas
test
repnz
dec
lods
inc
add
repnz
sbb
fldt
sub
cs
arpl
xchg
or
adc
jl
add
out
mov
push
add
add
cmp
add
push
add
in
add
add
push
add
daa
or
add
out
addr16
fucomp
arpl
jo
cmp
add
mov
add
mov
movb
or
pop
popa
mov
add
add
add
add
add
mov
les
mov
sub
out
jge
inc
add
add
gs
add
dec
mov
repz
add
imul
fildll
add
add
test
dec
inc
add
test
loopne
je
in
addr16
add
or
movsb
add
loope
in
pop
cmp
out
add
fisttps
pop
mov
in
ss
loop
inc
add
dec
cmp
add
mov
add
popf
icebp
mov
push
add
add
xor
inc
add
push
cmpsl
push
add
pop
or
add
add
js
cmp
dec
jo
imul
rolb
divl
add
mov
and
mov
and
pop
or
add
add
add
pop
ja
test
adc
movsb
add
add
lcall
adc
jp
repnz
dec
push
add
cmp
scas
pop
xchg
out
mov
out
xor
cmp
lret
sbb
dec
sbb
cmp
out
mov
mov
rcll
add
pop
push
add
sub
add
mov
mov
mov
jg
push
jnp
inc
add
add
mov
aas
mov
fsubs
popa
mov
sub
fsts
rolb
dec
jmp
add
add
negl
or
repnz
cltd
data16
add
pop
lods
addr16
add
adc
movsl
cmp
add
mov
add
mov
xor
dec
das
xorl
push
add
xor
and
add
ljmp
add
lods
insl
call
add
add
add
add
pop
in
mov
jb
dec
xor
mov
sub
rolb
daa
adc
out
test
and
mov
or
add
mov
add
push
add
add
testb
insl
sbb
cmc
loope
or
sbb
lret
repnz
add
daa
pop
fsubrl
add
vzeroupper
cmpsl
mov
dec
sbb
xchg
adc
ja
add
dec
jmp
inc
add
call
jmp
fidivrl
lods
int3
and
sub
pusha
add
stos
frstor
pop
or
add
clc
repnz
jae
add
add
cld
nop
jmp
sti
sbb
add
testb
loope
sub
push
mov
xchg
ret
jge
sbb
add
cmp
nop
jae
icebp
add
add
fisttps
jae
add
lock
add
add
lea
clc
repnz
jae
add
mov
mov
fwait
cld
nop
jmp
add
add
add
add
mov
mov
clc
repnz
jae
add
inc
pop
add
add
sahf
and
add
repnz
jae
dec
add
add
add
xor
add
clc
repnz
jae
add
test
rclb
popa
xlat
inc
add
add
adc
jbe
aas
xor
clc
repnz
jae
fs
aam
fiaddl
fwait
stos
pushl
clc
repnz
jae
add
std
add
jne
add
leave
push
mov
xchg
ret
mov
add
dec
jmp
add
sbb
addr16
adc
test
fwait
add
call
clc
repnz
jae
or
jnp
adc
popa
add
repnz
jae
fwait
sbb
mov
fs
cld
nop
jmp
add
sbb
rdpmc
sar
nop
jae
inc
iret
add
into
inc
push
add
pop
clc
repnz
jae
lock
add
add
add
jae
add
jne
add
neg
pusha
push
mov
xchg
ret
push
xor
aad
add
push
clc
repnz
jae
fwait
add
add
add
xor
add
clc
repnz
jae
fs
add
add
lods
in
inc
add
or
add
add
repnz
jae
add
add
fiaddl
pushf
push
push
mov
xchg
ret
lock
add
inc
add
lcall
repnz
jae
jge
sbb
loope
add
add
repnz
jae
add
sbb
lock
fsubrl
sbbl
add
sbb
pop
lea
add
add
mov
clc
repnz
jae
adc
or
mov
xchg
ret
add
lock
clc
repnz
jae
add
add
fs
call
sbb
sbbl
add
add
add
inc
outsb
pusha
push
mov
xchg
ret
test
jnp
add
add
nop
jmp
add
add
add
aam
das
push
clc
repnz
jae
fiadds
lea
jmp
nop
jmp
sti
std
std
add
mov
mov
fwait
cld
nop
jmp
iret
dec
add
add
insb
lods
add
push
mov
xchg
ret
mov
pusha
icebp
add
push
mov
xchg
ret
inc
add
jne
add
and
mov
mov
xchg
ret
add
add
pop
push
mov
xchg
ret
add
iret
iret
add
add
jmp
and
add
sbb
or
nop
jae
add
aam
adc
push
mov
xchg
ret
add
add
testb
outsl
pop
fwait
cld
nop
jmp
add
add
add
pop
mov
mov
xchg
ret
insb
add
adc
jg
clc
repnz
jae
add
pusha
add
xchg
nop
jae
xor
cmp
mov
sub
or
inc
add
lock
scas
push
clc
repnz
jae
movb
add
add
mov
jae
add
adc
xor
sub
nop
jmp
inc
movb
jb
mov
nop
jmp
add
sbb
or
push
fwait
cld
nop
jmp
add
jmp
add
mov
clc
repnz
jae
add
add
ss
push
clc
repnz
jae
add
jge
add
mov
fwait
cld
nop
jmp
lea
sbb
popf
fwait
cld
nop
jmp
sbb
add
xor
xor
lcall
ret
adc
add
add
add
xor
add
add
push
clc
repnz
jae
add
inc
icebp
sbb
mov
push
mov
xchg
ret
adc
add
sbb
xor
mov
ret
clc
repnz
jae
mov
fidivrs
mov
ds
test
add
into
mov
add
xor
pop
call
clc
repnz
jae
movb
add
xor
clc
repnz
jae
cwtl
add
add
in
mov
fwait
cld
nop
jmp
insb
mov
sti
fisttps
nop
jae
mov
mov
jmp
sbb
jge
add
add
add
mov
lods
jne
clc
repnz
jae
add
das
push
push
mov
xchg
ret
add
add
add
push
jne
lods
add
clc
repnz
jae
fisubl
daa
add
add
imul
nop
jae
mov
fwait
icebp
xchg
in
push
clc
repnz
jae
add
add
idivl
add
add
inc
add
fs
rep
fwait
cld
nop
jmp
add
lea
cmpl
fwait
cld
nop
jmp
insb
adc
pop
push
clc
repnz
jae
lock
div
add
jb
jne
clc
repnz
jae
add
or
in
mov
add
add
jp
xchg
add
jb
xchg
fisttpl
mov
nop
jae
lock
add
lock
push
nop
jmp
add
add
add
sbb
inc
adc
repnz
jae
addr16
mov
or
cli
mov
clc
repnz
jae
add
test
mov
push
mov
xchg
ret
mov
inc
add
testl
fwait
cld
nop
jmp
dec
pusha
fidivrs
jne
clc
repnz
jae
mov
add
clc
repnz
jae
add
add
icebp
add
pop
push
mov
xchg
ret
add
into
add
add
insb
add
clc
repnz
jae
add
add
add
and
clc
repnz
jae
fs
add
push
pop
xchg
clc
repnz
jae
add
sbb
pusha
add
mov
push
mov
xchg
ret
add
aam
and
mov
call
clc
repnz
jae
add
pop
add
add
fwait
cld
nop
jmp
icebp
add
add
xor
xlat
js
rclb
fadds
xchg
ret
jnp
add
add
clc
repnz
jae
pop
mov
add
dec
mov
clc
repnz
jae
add
jmp
fisubs
add
add
add
ficompl
jae
add
jb
add
clc
repnz
jae
jne
add
add
fisubrs
jmp
add
into
xor
add
xchg
or
nop
jae
jne
add
add
pop
mov
clc
repnz
jae
aam
add
icebp
add
add
dec
mov
push
mov
xchg
ret
add
add
dec
test
clc
repnz
jae
aam
add
in
in
ret
clc
repnz
jae
add
xor
add
call
clc
repnz
jae
push
add
dec
mov
add
repnz
jae
iret
add
mov
clc
repnz
jae
push
add
jbe
aas
pop
clc
repnz
jae
add
mov
add
mov
add
add
clc
repnz
jae
add
add
pop
and
lea
push
mov
xchg
ret
add
add
add
pusha
jmp
incl
into
iret
sti
add
insb
inc
mov
mov
clc
repnz
jae
add
cmpsb
lock
stos
mov
clc
repnz
jae
dec
pop
add
add
mov
clc
repnz
jae
add
dec
not
add
add
sub
clc
repnz
jae
sbb
lock
adc
repnz
jae
add
or
add
mov
testb
add
adc
movzwl
fwait
cld
nop
jmp
xor
inc
add
jge
rcrb
idiv
sti
jmp
add
add
add
jmp
incl
add
cwtl
jmp
and
push
mov
xchg
ret
test
iret
add
mov
push
clc
repnz
jae
add
push
lock
mov
push
mov
xchg
ret
add
jmp
outsl
arpl
add
repnz
jae
add
cwtl
fisttpll
jae
pusha
cmpsb
jb
add
add
add
mov
adc
cld
nop
jmp
push
mov
test
cld
nop
jmp
ss
movsb
aam
add
mov
add
add
add
add
bnd
mov
clc
repnz
jae
daa
add
add
inc
sbb
add
push
add
add
add
fadd
fwait
cld
nop
jmp
cmpsb
add
sti
fs
add
push
mov
xchg
ret
add
inc
add
das
cmp
fwait
cld
nop
jmp
jb
add
jmp
pop
inc
clc
repnz
jae
std
mov
add
add
or
mov
repnz
jae
xor
add
add
dec
rep
fwait
cld
nop
jmp
jge
add
cmpsb
fs
pop
push
mov
xchg
ret
add
add
add
xor
add
clc
repnz
jae
dec
divb
leave
fwait
cld
nop
jmp
add
jnp
add
ss
ret
push
shr
clc
repnz
jae
testb
iret
add
in
add
sbb
add
repnz
jae
or
add
je
clc
repnz
jae
movsb
add
in
mov
clc
repnz
jae
std
add
xor
add
nop
jae
add
add
fwait
cld
nop
jmp
add
add
add
add
aaa
mov
push
mov
xchg
ret
mov
add
cmpsl
add
mov
push
push
mov
xchg
ret
add
add
add
cs
clc
repnz
jae
fs
pop
sbb
repnz
add
fwait
cld
nop
jmp
jne
lea
jnp
clc
repnz
jae
add
mov
ss
sbb
pop
jne
clc
repnz
jae
lea
cwtl
mov
add
mov
xchg
ret
add
add
pop
in
add
add
clc
repnz
jae
mov
pop
inc
push
add
mov
mov
push
mov
xchg
ret
testb
dec
add
dec
push
clc
repnz
jae
adc
sti
pusha
add
mov
adc
repnz
jae
add
pop
add
gs
inc
add
add
lea
test
lea
add
add
lea
sti
or
add
push
push
mov
xchg
ret
add
add
popl
pop
outsb
mov
fwait
cld
nop
jmp
add
xor
ss
add
xor
clc
repnz
jae
add
movsl
stos
inc
clc
repnz
jae
test
fiadds
aam
add
mov
add
clc
repnz
jae
fwait
add
add
sbb
mov
push
mov
xchg
ret
inc
add
add
mov
lret
repnz
jae
fiaddl
into
icebp
add
or
jmp
jae
pop
add
addb
add
fwait
cld
nop
jmp
jge
add
add
mov
add
mov
adc
xor
add
clc
repnz
jae
add
push
mov
xchg
ret
add
cwtl
add
icebp
mov
add
sti
fwait
cld
nop
jmp
add
add
test
fs
cld
nop
jmp
sbb
std
ficoms
test
mov
or
mov
nop
jmp
aam
cmpsb
add
addr16
clc
repnz
jae
add
add
cld
sub
clc
repnz
jae
lock
push
jno
jne
fwait
cld
nop
jmp
add
fs
repnz
jae
add
lea
mov
cmpb
add
repnz
push
add
add
jne
fwait
cld
nop
jmp
fcmovbe
lea
lods
xchg
clc
repnz
jae
sbb
jnp
clc
repnz
jae
mov
add
add
std
push
clc
repnz
jae
inc
sbb
mov
scas
xchg
clc
repnz
jae
fisubl
cwtl
add
push
push
mov
xchg
ret
cwtl
add
add
inc
adc
and
fwait
cld
nop
jmp
add
pop
mov
mov
adc
repnz
jae
xor
aam
sub
mov
xchg
ret
mov
add
push
add
push
cmc
mov
dec
popa
add
jno
add
jmp
add
add
jmp
add
icebp
icebp
pop
sub
clc
repnz
jae
sbb
mov
push
clc
repnz
jae
fs
add
push
clc
repnz
jae
jb
fisubs
mov
das
ret
clc
repnz
jae
add
sti
xor
add
pop
add
mov
push
mov
scas
lds
les
stos
add
jae
cmc
add
jmp
add
ss
inc
cmpsb
std
add
add
loop
mov
je
clc
repnz
jae
mov
les
add
add
adc
add
test
add
add
fwait
cld
nop
jmp
add
pusha
mov
push
fs
repnz
jae
add
rclb
jmp
add
add
add
out
rolb
sbb
clc
push
mov
xchg
ret
pusha
add
add
fiadds
fisttps
nop
jae
iret
pusha
adc
into
fisubs
add
cmp
repnz
jae
lock
std
iret
scas
push
push
mov
xchg
ret
add
mov
jne
clc
repnz
jae
sbb
into
test
jmp
lcall
add
pusha
test
add
push
add
push
mov
xchg
ret
jge
jne
add
repnz
jae
add
xor
pop
mov
add
in
cmpl
fwait
cld
nop
jmp
add
dec
fwait
cld
nop
jmp
add
dec
sbb
cmpsl
jno
add
push
add
clc
repnz
jae
add
adc
sub
add
clc
repnz
jae
add
add
add
clc
repnz
jae
lock
xchg
mov
add
add
push
add
add
mov
xchg
add
je
mov
ret
insl
push
clc
repnz
jae
popl
into
ss
lock
mov
dec
insb
add
add
add
add
add
repnz
jae
add
mov
sbb
jg
fwait
cld
nop
jmp
add
insb
add
repnz
aad
add
dec
adc
repnz
jae
std
lock
add
popf
mov
clc
repnz
jae
add
stos
mov
fwait
cld
nop
jmp
add
jb
fiadds
jne
movsb
add
fwait
push
clc
repnz
jae
add
add
add
jae
add
clc
repnz
jae
mov
popl
sti
xor
mov
clc
repnz
jae
add
add
jl
push
mov
xchg
ret
lock
fiadds
add
movzwl
clc
repnz
jae
jge
sbb
and
clc
repnz
jae
add
mov
repnz
cmc
add
mov
repnz
jae
mov
sbb
and
clc
repnz
jae
daa
add
add
xchg
or
fwait
cld
nop
jmp
into
add
add
pop
pop
push
add
enter
clc
repnz
jae
add
fdivp
adc
add
clc
repnz
jae
sbb
adc
fiadds
fwait
mov
clc
repnz
jae
add
mov
jne
xchg
xchg
xchg
sbb
mov
xchg
ret
add
jne
clc
repnz
jae
mov
add
add
dec
clc
repnz
jae
add
testb
add
add
jbe
clc
repnz
jae
add
add
add
mov
add
mov
clc
repnz
jae
add
sbb
add
add
fwait
cld
nop
jmp
add
cmpsb
adc
iret
sbb
push
mov
add
add
add
add
add
add
adc
sbb
mov
xchg
ret
add
add
mov
adc
add
add
pop
add
jnp
stos
sub
clc
repnz
jae
add
fimuls
cld
nop
jmp
cwtl
aam
dec
sbb
in
add
mov
clc
repnz
jae
jmp
add
int
pop
jae
repnz
jae
std
mov
add
add
adc
xor
inc
add
add
lea
fldl
xchg
ret
fiaddl
mov
add
cmp
repnz
incl
ss
add
inc
jmp
add
test
xor
sbb
push
fwait
cld
nop
jmp
add
jge
add
mov
push
add
cmp
xor
add
clc
repnz
jae
add
fstl
in
add
inc
push
add
stos
pusha
lock
shl
fstl
in
cmp
sub
in
or
add
xchg
xor
adc
repnz
jae
add
adc
add
pop
mov
clc
repnz
jae
xor
test
cmpsb
sbb
mov
clc
repnz
jae
jne
pusha
fs
sbb
clc
repnz
jae
into
pusha
fwait
test
mov
xchg
ret
add
sbb
or
jmp
add
icebp
mov
push
mov
xchg
ret
fcmovbe
mov
idivl
cld
nop
jmp
add
add
add
and
mov
jmp
add
test
add
or
aam
add
and
push
mov
xchg
ret
add
add
add
xor
clc
repnz
jae
add
mov
push
add
mov
clc
repnz
jae
fwait
add
add
push
add
je,pn
clc
repnz
jae
mov
lock
add
fwait
cld
nop
jmp
add
add
imul
adcl
add
add
add
sub
nop
jae
add
cmpsb
pusha
add
add
add
push
mov
xchg
ret
lock
icebp
pop
les
xor
dec
push
add
clc
repnz
jae
sbb
clc
repnz
jae
jmp
test
push
push
mov
xchg
ret
add
sbb
or
repnz
jae
aam
add
add
add
mov
push
jae
jge
add
mov
mov
add
clc
repnz
jae
add
jne
mov
fwait
cld
nop
jmp
test
add
add
es
fwait
cld
nop
jmp
fwait
add
or
clc
repnz
jae
add
xchg
fimull
jae
push
mov
add
imul
clc
repnz
jae
add
std
add
cwtl
call
fwait
cld
nop
jmp
add
ss
add
test
pop
add
clc
repnz
jae
add
cmpsb
repnz
push
stos
fwait
cld
nop
jmp
pop
jmp
add
rolb
rcrl
xor
clc
repnz
jae
add
dec
mov
add
cld
nop
jmp
test
add
std
add
add
push
clc
repnz
jae
dec
or
mov
je,pn
clc
repnz
jae
add
add
repnz
jae
add
add
add
xor
mov
repnz
jae
sbb
add
clc
repnz
jae
add
add
std
add
add
mov
clc
repnz
jae
mov
mov
add
ror
clc
repnz
jae
sbb
add
add
push
push
mov
xchg
ret
add
mov
test
push
add
push
cmpl
fwait
cld
nop
jmp
jge
add
add
push
mov
xchg
ret
add
test
pushl
clc
repnz
jae
inc
sbb
mov
push
mov
xchg
ret
inc
add
add
test
add
clc
repnz
jae
add
add
push
fwait
cld
nop
jmp
addr16
lock
mov
fwait
cld
nop
jmp
iret
fwait
adc
add
jae
add
mov
addr16
xor
inc
mov
loop
cld
nop
jmp
or
add
mov
call
inc
add
add
xor
int
clc
repnz
jae
xor
add
dec
add
outsb
and
repnz
jae
iret
addr16
mov
push
push
mov
xchg
ret
mov
add
in
popa
fwait
cld
nop
jmp
notb
mov
add
iret
ss
jns
jne
push
mov
xchg
ret
lea
xor
arpl
add
leave
sub
repnz
jae
add
xor
sbb
clc
repnz
jae
add
movb
sbb
add
adc
jb
sbb
jb
shll
dec
rep
clc
repnz
jae
movb
add
add
incl
fwait
cld
nop
jmp
inc
cwtl
sbb
add
add
repnz
jae
add
cmp
pop
cmp
repnz
jae
test
add
add
into
mov
clc
repnz
jae
add
sbb
mov
repnz
jae
xor
add
clc
repnz
jae
mov
dec
inc
pop
repz
cli
call
clc
repnz
jae
inc
add
daa
lods
mov
clc
repnz
jae
add
add
fs
test
xabort
nop
jae
fwait
mov
movsb
dec
je
clc
repnz
jae
sbb
les
clc
repnz
jae
sbb
add
fs
add
xor
clc
repnz
jae
sbb
fisubs
pop
stos
push
fwait
cld
nop
jmp
add
addr16
add
add
fsubrp
imul
clc
repnz
jae
dec
sbb
xor
into
test
fwait
cld
nop
jmp
add
jmp
add
xor
clc
repnz
jae
inc
or
mov
xchg
ret
xor
into
addr16
popa
push
add
mov
adc
inc
add
std
insb
or
pop
add
inc
add
nop
jae
add
insb
pop
add
push
fwait
cld
nop
jmp
sbb
add
mov
add
add
push
mov
xchg
ret
xor
push
add
sti
fwait
cld
nop
jmp
lea
mov
das
xorl
clc
repnz
jae
movb
lods
xor
clc
repnz
jae
mov
add
add
sbb
pop
clc
repnz
jae
add
add
add
daa
std
clc
repnz
jae
or
push
add
or
cld
nop
jmp
add
or
add
mov
std
clc
repnz
jae
add
add
clc
repnz
jae
jmp
add
add
fwait
cld
nop
jmp
std
add
icebp
add
add
add
push
mov
xchg
ret
sbb
lcall
add
daa
add
test
add
in
incl
add
sbb
add
xchg
mov
repnz
jae
xor
testb
sbb
fs
call
clc
repnz
jae
lock
aam
and
mov
cld
decl
push
mov
xchg
ret
movsb
daa
add
add
adc
leave
add
clc
repnz
jae
push
add
scas
shl
clc
repnz
jae
add
add
add
mov
fwait
cld
nop
jmp
mov
fs
xor
add
add
push
mov
xchg
ret
aam
fwait
add
add
mov
clc
repnz
jae
inc
test
or
cld
nop
jmp
add
add
enter
pop
jae
repnz
jae
add
push
clc
repnz
jae
movsb
add
cmpsb
fdivp
mov
mov
push
clc
repnz
jae
add
add
add
add
jne
clc
repnz
jae
inc
sbb
add
inc
push
xchg
clc
repnz
jae
insb
repnz
into
iret
add
outsl
jl
clc
repnz
jae
mulb
mov
clc
repnz
jae
add
into
add
mov
add
mov
clc
repnz
jae
pop
pop
add
xlat
ja
lea
clc
repnz
jae
add
sti
add
in
mov
push
mov
xchg
ret
popl
add
ficoml
mov
nop
jae
pop
add
add
lds
jb,pt
fwait
cld
nop
jmp
fwait
add
mov
repnz
jae
daa
sbb
icebp
add
pop
mov
fwait
cld
nop
jmp
dec
into
test
add
int
clc
repnz
jae
push
fiaddl
add
rolb
repnz
jae
add
add
push
mov
xchg
ret
insb
aam
add
lock
fildll
clc
repnz
jae
add
add
add
mov
and
mov
call
fwait
cld
nop
jmp
add
addr16
shl
clc
repnz
jae
sbb
mov
add
push
clc
repnz
jae
pop
lock
jge
add
mov
clc
repnz
jae
pop
xor
add
cmp
rclb
jecxz
add
insb
add
jb
add
insb
inc
jb
clc
repnz
jae
xor
mov
or
jae
xor
fwait
je
clc
repnz
jae
add
add
repz
add
add
add
mov
xchg
ret
add
add
rclb
roll
xchg
ret
push
pop
sbb
add
ret
push
mov
xchg
ret
adc
lock
add
mov
jae
mov
add
add
add
or
clc
repnz
jae
add
xor
and
cld
cmp
fwait
cld
nop
jmp
add
and
push
push
mov
xchg
ret
add
add
lea
cmp
shlb
jae
add
cltd
add
fwait
cld
nop
jmp
mov
add
push
sbb
cmp
jae
fwait
add
mov
add
clc
repnz
jae
jmp
sub
pusha
call
and
lock
add
jg
cmpl
sbb
lea
clc
repnz
jae
add
lock
ljmp
clc
repnz
jae
add
rolb
and
clc
repnz
jae
aam
add
sbb
clc
repnz
jae
add
movsb
add
add
js
repnz
jae
add
add
sub
add
inc
add
add
pop
add
push
xor
fldt
inc
and
repnz
jae
mov
mov
cld
nop
jmp
into
add
add
lock
mov
xchg
ret
add
std
add
add
fisubrl
mov
nop
jae
mov
fisubl
clc
repnz
jae
dec
icebp
fiaddl
pop
and
fidivrs
fwait
cld
nop
jmp
adc
movsb
adc
mov
fwait
cld
nop
jmp
add
add
movsb
fwait
cld
nop
jmp
add
add
iret
daa
adc
sbb
and
inc
add
aam
add
in
cltd
cld
push
mov
xchg
ret
xor
add
add
call
fwait
cld
nop
jmp
dec
add
iret
add
mov
xchg
ret
lock
movsb
add
rcrl
incl
add
add
jae
jmp
add
mov
mov
add
mov
or
add
or
add
add
add
sbb
cld
inc
add
add
add
fimull
clc
repnz
jae
repnz
add
scas
dec
push
mov
xchg
ret
add
add
add
add
mov
xchg
ret
add
add
xor
add
clc
repnz
jae
add
test
sub
nop
jae
adc
add
adc
in
mov
fwait
cld
nop
jmp
fs
sbb
jb
add
clc
repnz
jae
sbb
daa
std
add
clc
repnz
jae
add
testb
fidivs
add
enter
jae
dec
adc
add
or
dec
fwait
cld
nop
jmp
into
add
add
mov
xor
push
mov
xchg
ret
lock
add
fistpl
add
add
add
pop
dec
add
push
add
pop
clc
repnz
jae
jb
add
add
cmpl
jne
clc
repnz
jae
add
add
iret
aaa
sbbl
fwait
cld
nop
jmp
inc
sbb
inc
add
aam
mov
jmp
dec
std
pushl
add
mov
fidivs
add
clc
repnz
jae
icebp
sbb
inc
add
add
cmpw
fwait
cld
nop
jmp
jb
add
sbb
and
push
mov
xchg
ret
popl
add
adc
fwait
cld
nop
jmp
inc
add
add
add
nop
jae
test
add
jne
clc
repnz
jae
add
sub
clc
repnz
jae
add
add
jge
add
add
add
call
clc
repnz
jae
add
lea
inc
or
mov
xchg
ret
xor
add
std
sbb
nop
jae
add
add
clc
repnz
jae
add
add
add
pusha
add
add
adc
mov
cmp
ret
xor
add
add
add
clc
repnz
jae
jge
dec
pop
add
bound
mov
push
clc
repnz
jae
mov
adc
add
add
mov
add
repnz
jae
addr16
add
inc
adc
repnz
jae
add
add
lods
clc
repnz
jae
add
fs
ficoms
testb
add
cld
nop
jmp
add
add
xchg
add
add
nop
jae
add
add
add
aaa
fisttpl
xchg
repnz
jae
sbb
pop
push
mov
xchg
ret
into
add
lock
popl
add
push
clc
repnz
jae
push
ss
add
mov
add
add
jmp
add
add
push
clc
repnz
jae
add
lea
sbb
les
clc
repnz
jae
add
inc
add
add
mov
fwait
cld
nop
jmp
cwtl
pop
add
sbb
clc
repnz
jae
jne
adc
mov
jns
add
pop
ja
out
mov
add
jmp
icebp
inc
jb
add
add
movsb
in
repnz
nop
jmp
adc
sbb
aam
daa
das
jne
clc
repnz
jae
daa
add
jmp
cli
cmp
nop
jae
add
sbb
cld
nop
jmp
add
lea
add
xor
add
inc
add
and
pop
clc
repnz
jae
movsb
add
fiaddl
xor
or
repnz
jae
xor
add
mov
clc
repnz
jae
add
repnz
add
call
clc
repnz
jae
pop
std
add
cmp
jmp
add
lock
fiaddl
icebp
add
enter
cld
nop
jmp
add
add
daa
mov
decl
push
mov
xchg
ret
mov
add
add
nop
jmp
push
add
add
sub
jae
pop
std
add
test
popl
sub
test
jecxz
clc
repnz
jae
add
add
mov
xor
add
clc
repnz
jae
add
movb
add
div
clc
repnz
jae
inc
inc
addr16
inc
test
movb
add
clc
repnz
jae
add
test
lret
popa
clc
repnz
jae
add
icebp
add
add
add
push
mov
xchg
ret
pop
pop
add
mov
fmuls
nop
jae
add
add
decl
add
sbb
add
add
mov
icebp
inc
add
inc
add
add
add
push
add
lea
push
mov
xchg
ret
add
lock
fwait
cld
nop
jmp
lea
pop
fmuls
test
repnz
jae
lock
addr16
sub
loop
add
mov
add
add
push
clc
repnz
jae
add
jne
mov
iret
add
jb
dec
mov
push
mov
xchg
ret
add
daa
add
add
cmp
fwait
cld
nop
jmp
or
mov
pop
imul
jo
incl
dec
sbb
add
je
add
fwait
cld
nop
jmp
inc
jge
add
cmp
test
hlt
clc
repnz
jae
jmp
add
push
mov
xchg
ret
pop
dec
add
lret
pop
push
mov
xchg
ret
inc
sbb
daa
inc
sahf
mov
clc
repnz
jae
daa
add
add
add
add
clc
repnz
jae
sbb
jne
ljmp
jae
inc
mov
sti
add
sub
fwait
cld
nop
jmp
sbb
add
repnz
jae
mov
add
add
add
mov
clc
repnz
jae
add
add
lret
lock
mov
xchg
ret
add
add
repnz
jae
add
popl
jne
and
call
nop
jae
push
movsb
add
daa
std
mov
clc
repnz
jae
std
add
das
mov
clc
repnz
jae
daa
lea
sub
repnz
jae
sbb
lock
or
add
mov
adc
cld
nop
jmp
jnp
add
repnz
clc
repnz
jae
mov
iret
add
test
push
fwait
cld
nop
jmp
add
lea
fwait
add
xor
fwait
cld
nop
jmp
add
notb
add
clc
repnz
jae
add
jge
add
test
add
add
mov
clc
repnz
jae
pusha
jb
rolb
xlat
testb
andl
mov
add
ljmp
add
jg
clc
repnz
jae
mov
add
mov
push
mov
xchg
ret
add
fiadds
add
add
xor
clc
repnz
jae
add
add
push
bnd
add
repnz
jae
add
add
jge
mov
clc
repnz
jae
lock
mov
pushl
push
mov
xchg
ret
fs
popf
add
clc
repnz
jae
mulb
add
mov
xor
xor
push
mov
xchg
ret
into
sbb
cwtl
mov
clc
repnz
jae
adc
sbb
adc
sub
jae
add
adc
fwait
out
add
clc
repnz
jae
sbb
lea
lock
add
in
add
pop
push
inc
pop
in
or
ss
lea
push
mov
xchg
ret
mov
mov
movsb
mov
repnz
jae
lock
add
jne
mov
clc
repnz
jae
add
jge
icebp
movb
clc
repnz
jae
add
test
add
xlat
loop
pop
mov
clc
repnz
jae
add
into
mov
sbb
jno
add
mov
xchg
ret
pop
push
cwtl
sbb
add
addb
add
clc
repnz
jae
add
add
add
nop
jae
inc
cmpsb
sbb
inc
into
mov
or
and
add
add
movsb
repnz
test
fwait
cld
nop
jmp
sbb
lea
cmp
repnz
jae
cwtl
jnp
daa
add
add
cmpl
fwait
cld
nop
jmp
push
ficomps
add
jnp
xchg
incl
dec
cmp
repnz
jae
inc
or
ss
xor
int
push
mov
xchg
ret
add
add
sbb
inc
js
in
push
mov
xchg
ret
add
add
add
mov
mov
clc
repnz
jae
sbb
fs
add
jmp
add
insb
mov
iret
ja
add
popl
insl
out
inc
add
sbb
add
sub
cld
nop
jmp
add
add
in
add
add
add
cmp
repnz
jae
test
add
push
add
clc
repnz
jae
icebp
add
add
mov
cmp
xor
add
clc
repnz
jae
add
and
add
mov
repz
add
sbb
add
add
xor
add
dec
cmp
push
mov
xchg
ret
add
sbb
add
add
xchg
cmpl
sbbl
lcall
add
mov
clc
repnz
jae
pusha
lock
fs
mov
cmpl
push
mov
xchg
ret
add
add
add
clc
repnz
jae
icebp
add
add
dec
out
adc
or
incl
jb
insb
add
add
add
movsb
fisttpll
jmp
adc
inc
add
add
pop
lea
clc
repnz
jae
jge
cwtl
jmp
aas
idiv
jmp
inc
jge
or
sti
add
mov
clc
repnz
jae
mov
add
add
add
add
add
nop
jae
add
sti
adc
and
push
add
and
push
mov
xchg
ret
repnz
add
fld
jmp
jae
fs
add
add
rep
clc
repnz
jae
add
add
into
xor
dec
push
push
mov
xchg
ret
mov
add
fcomip
movsb
push
mov
xchg
ret
add
add
sbb
test
repnz
jae
pop
add
push
add
pop
push
mov
xchg
ret
add
aam
jmp
repz
repnz
jae
add
add
add
push
daa
jecxz
xor
clc
repnz
jae
add
add
mov
cld
nop
jmp
add
add
add
int3
mov
clc
repnz
jae
cwtl
jge
lea
add
fisttps
jae
add
dec
jmp
mov
nop
jae
pop
jne
fiaddl
jnp
divl
daa
push
mov
insl
mov
clc
repnz
jae
add
call
push
mov
xchg
ret
lock
test
add
jae
add
add
mov
call
clc
repnz
jae
movsb
sti
add
xchg
add
add
add
clc
repnz
jae
add
pop
add
add
pop
sub
sar
repnz
jae
add
lea
add
data16
movsb
push
mov
xchg
ret
pop
add
add
fwait
cld
nop
jmp
pop
repnz
xor
popa
clc
repnz
jae
add
add
cwtl
dec
jne
mov
fwait
cld
nop
jmp
pop
dec
sbb
add
mov
repnz
jae
add
lock
add
xchg
aam
das
mov
clc
repnz
jae
insb
add
pusha
fidivl
xchg
cmp
repnz
jae
add
add
add
clc
repnz
jae
add
dec
add
pop
insl
mov
clc
repnz
jae
ss
pusha
pop
mov
pop
push
push
mov
xchg
ret
adc
jge
mov
clc
stos
push
mov
xchg
ret
pop
iret
add
movsb
bnd
fwait
cld
nop
jmp
add
cwtl
sbb
inc
add
nop
jae
add
lea
xchg
popa
mov
hlt
inc
add
adc
add
lock
cld
nop
jmp
add
add
lods
push
mov
lock
inc
fisttpll
push
in
and
cmp
mov
jo
data16
stos
jmp
gs
dec
jno,pn
add
sub
pop
sub
stos
jns
add
sbb
ret
sub
movb
clc
ss
test
mov
and
add
xor
mov
add
or
mov
xor
testl
or
add
add
aam
push
add
ss
add
shrl
iret
sbb
dec
into
adc
rolb
push
cs
repnz
movsb
add
add
add
sub
mov
jb
repz
lcall
outsb
mov
pop
sbb
push
mov
inc
rolb
test
mov
scas
scas
cli
xchg
add
bound
mov
out
and
mov
inc
add
into
lock
insb
add
mov
rolb
cmp
jns
xchg
out
scas
in
push
add
loop
jmp
fs
add
iret
jb
jmp
test
mov
stos
lock
and
mov
add
fisttps
jecxz
add
fwait
inc
in
add
add
push
add
add
ljmp
add
inc
mov
iret
cmp
sbb
add
add
pushf
mov
call
add
add
cwtl
popf
out
es
jle
fwait
in
repnz
pcmpeqw
dec
pop
mov
bound
mov
add
idivl
aad
in
aam
jmp
add
dec
repz
movb
rolb
jmp
add
dec
and
mov
daa
test
mov
add
add
add
and
mov
add
pop
lahf
fdivr
mov
out
fwait
xorl
add
mov
dec
or
adc
nop
add
add
arpl
mov
and
mov
add
jae
inc
add
mov
add
repz
mov
dec
out
sbb
addb
fdivr
dec
into
xchg
movsb
add
cmp
cmp
add
fs
popf
out
push
add
adc
mov
aad
or
add
add
mov
cmp
ficompl
in
add
movups
cld
jb
rolb
sub
imul
add
add
cltd
push
add
das
popf
or
xchg
add
data16
xchg
cltd
dec
rolb
mov
mov
add
jno
ret
cmc
iret
testb
lcall
add
iret
push
pop
les
fwait
data16
insl
push
add
jmp
repz
clc
aad
add
sbb
insl
sahf
lret
fld
add
add
mov
jmp
jo
pop
add
mov
add
mov
testb
xor
clc
popf
cli
popa
push
add
add
add
mov
cmc
mov
popf
jge
movb
add
sarl
inc
add
xor
add
jle
lods
lret
shll
jnp
jl
imull
popa
mov
mov
add
sbbl
sub
sbb
ret
and
mov
add
in
repnz
adc
fwait
push
xchg
mov
mov
add
test
adc
add
add
mov
repz
insb
movb
add
ja
xchg
push
cmp
dec
inc
add
cli
or
add
and
mov
lock
add
lret
addb
mov
xchg
add
jne
add
add
mov
iret
cmp
or
cmpsl
shll
add
imul
call
add
mov
and
mov
pop
addr16
sbb
add
leave
sbb
add
into
lds
mov
mov
add
add
xor
dec
jmp
leave
repz
ljmp
cmp
jbe
fwait
test
jl
and
mov
lock
add
push
rolb
pushf
fidivl
add
mov
mov
add
add
pop
mov
add
xchg
adc
add
add
and
mov
fptan
add
outsb
daa
mov
pop
mov
sub
scas
daa
add
sub
and
mov
int3
xor
movsl
out
xor
add
mov
xor
data16
add
mov
add
jmp
aaa
xor
push
add
addr16
sahf
or
addl
cmp
aad
pop
roll
mov
fnsave
sub
add
add
push
add
lods
jno
stc
sbb
or
mov
cmpsl
out
test
iret
fldl
fwait
ja
vorps
push
call
and
cmp
add
test
aas
jns
push
scas
addr16
into
push
inc
add
add
xchg
cmp
xchg
dec
lcall
lret
mov
mov
mov
xchg
outsb
pushf
cltd
mov
add
add
aam
pop
mov
xchg
or
addb
xchg
rolb
pop
loope
xor
data16
and
mov
mov
out
dec
scas
movsb
add
xchg
add
add
loope
inc
add
bound
mov
int
sub
add
pop
les
stos
jne
add
inc
add
add
cmc
jmp
pop
in
inc
arpl
inc
push
add
cmp
xchg
lcall
add
cmp
mov
ret
cmp
mov
dec
adc
xorl
lods
mov
push
add
sbb
add
std
mov
jbe
mov
cmp
sahf
mov
dec
jo
mov
les
out
cmpsl
sub
shr
dec
repnz
lods
mov
pop
outsb
push
add
mov
push
add
add
xlat
push
add
daa
imul
pushf
mov
call
add
add
xchg
add
mov
inc
flds
fsts
xlat
xlat
call
mov
stos
push
add
add
xor
mov
leave
in
add
jb
xor
xchg
dec
cmp
add
gs
mov
invd
ljmp
add
mov
in
out
add
dec
addb
add
pop
jg
cmp
add
cwtl
enter
and
mov
movb
mov
add
imul
add
vhsubps
add
add
inc
add
add
popf
nop
add
xchg
jnp
mov
js
add
add
add
in
cmpsl
or
xchg
arpl
inc
and
imul
out
add
add
lcall
mov
cs
inc
test
sbb
test
sbb
add
loope
add
add
add
sbb
mov
insb
call
mov
mov
ja
jg
out
inc
add
jl
faddl
orl
add
jl
jno
jnp
lock
add
add
pop
xchg
add
add
stos
xchg
cmp
add
testb
mov
movsl
lahf
imull
jg
mov
pushf
dec
addb
shrl
push
xchg
add
aam
repnz
add
xor
add
add
add
lock
nop
add
mov
pushf
dec
push
add
push
add
outsb
into
cmpl
lret
stc
ds
add
aaa
shl
add
add
mov
sub
lret
popa
popf
insb
rcll
addb
ljmp
add
jmp
add
xchg
add
add
adc
jo
aad
in
push
add
sub
add
stc
in
into
jp
lods
cltd
push
add
fcompl
mov
jle
jns
add
mov
and
and
xchg
pop
jle
mov
add
add
sbb
xor
repnz
popa
lcall
add
xchg
add
mov
add
in
push
clc
or
xor
mov
mov
jle
fwait
pushf
loopne
scas
loope
lea
pop
in
mov
inc
add
gs
out
xchg
add
or
add
pusha
add
add
sbb
add
jbe
push
add
jg
fistl
add
mov
dec
pop
cs
dec
je
xor
mov
cmp
add
fmuls
testb
testb
push
push
inc
jmp
add
cmc
push
add
mov
add
inc
add
test
xlat
in
lods
fistl
sbb
dec
out
push
repnz
in
xor
inc
add
xchg
mov
add
stos
and
test
xor
add
or
push
add
pop
xchg
add
scas
sahf
mov
add
xor
or
pop
or
pop
ja
push
add
and
fcompl
lret
das
mov
sbb
add
or
mov
add
add
mov
push
add
cmp
add
add
pmaxsw
add
add
pop
xchg
enter
xor
cld
sahf
insb
sub
in
jne
and
push
mov
les
sub
int
inc
mov
leave
jecxz
mov
outsl
cmp
loopne
xchg
add
add
push
add
sbb
stos
xchg
hlt
add
add
add
add
add
into
mov
rolb
xchg
push
add
ja
push
add
add
add
xchg
dec
mov
lock
add
add
push
hlt
add
out
adc
cltd
pop
icebp
lea
add
cs
cltd
hlt
add
or
pop
rolb
mov
sub
cli
pushf
add
add
out
xchg
lret
add
add
push
push
add
fcomps
add
call
fcmovbe
xchg
cmp
lds
repnz
xlat
adc
xchg
out
inc
add
stos
mov
add
adc
mov
movb
add
add
add
add
add
jb
mov
add
add
adc
rorl
sti
ret
lea
rolb
xchg
add
mov
add
add
add
cli
lods
sub
mov
add
stos
jnp
add
mov
sbb
movb
lahf
rorl
das
addb
dec
rcll
sub
cmp
push
add
repz
add
add
cmp
and
dec
inc
cmp
jns
testl
pop
pop
jbe
jle
push
add
add
pushl
out
movsl
jp
test
sbb
add
xor
jl
add
add
pop
and
add
repnz
add
add
fstl
add
movsl
xchg
xor
fisttpll
xor
dec
movb
cmp
add
xchg
cld
jbe
enter
sub
add
test
testb
mov
cmp
add
jo
push
add
cmp
and
mov
mov
psadbw
or
je
sbb
cmp
add
shll
or
xchg
lea
ret
xchg
add
add
cli
stos
push
add
aam
inc
add
add
fcoml
mov
dec
inc
add
xor
hlt
add
add
mov
jp
add
popa
es
cmp
test
add
xchg
cmp
mov
std
scas
fmul
sub
push
add
sub
enter
xor
lods
test
mov
mov
add
add
mov
xlat
mov
jne
cmp
mov
ja
movb
ret
lods
arpl
add
add
mov
pop
enter
jmp
add
lods
jmp
das
xor
mov
fdivrp
mov
pop
lahf
jo
incl
mov
add
pop
xchg
int
cwtl
jne
dec
pushf
mov
add
push
or
add
jmp
xchg
add
add
add
xchg
add
in
push
add
test
xor
add
add
add
mov
add
or
adc
xchg
add
sub
add
jbe
jo
dec
cmp
sub
adc
cld
stc
pop
sub
mov
sub
xor
je
call
ja
mov
add
mov
add
inc
add
push
dec
pop
call
add
xor
cs
pushf
sbb
add
add
push
add
pop
adc
test
mov
add
push
fdivs
add
mov
fldenv
ret
mov
add
add
addb
jnp
cmp
lods
popa
sub
add
inc
add
mov
inc
ret
mov
add
add
adc
movsl
push
add
or
cmp
outsb
push
add
clc
adc
add
add
jp
data16
add
movsl
add
or
into
jle
sbb
add
add
xchg
add
add
aam
dec
pop
lea
add
add
add
outsl
inc
add
in
out
clc
hlt
add
push
add
mov
and
cmp
adc
add
repnz
sbb
repz
add
call
cs
mov
add
adcl
add
add
pushl
push
add
dec
rolb
inc
add
sub
add
movb
add
test
add
repnz
pushf
js
ja
pop
cmp
add
xchg
sbb
mov
lret
pop
sbb
cmpl
out
ficomps
add
daa
sub
std
sbb
movsb
add
add
mov
sahf
fisttpl
add
pop
pop
aaa
in
data16
cli
loopne
xor
movb
add
mov
sbb
add
hlt
add
dec
and
mov
and
add
add
add
in
cs
add
pusha
add
add
xchg
add
mov
mov
jae
mov
mov
mov
add
mov
dec
ljmp
mov
mov
add
sahf
in
movsl
cmpl
stos
add
daa
cwtl
inc
sti
sub
add
or
enter
mov
add
mov
insl
or
add
test
add
add
mov
lea
ljmp
inc
mov
pushf
out
mov
imul
add
jbe
int3
repnz
lods
cltd
popf
dec
enter
pop
arpl
add
addr16
sahf
aas
sub
cwtl
les
ret
adc
cmpsl
xchg
add
jecxz
cwtl
into
pop
icebp
mov
xchg
add
fistps
add
add
add
add
add
push
add
das
imul
add
cld
jecxz
rolb
lock
mov
cmpsl
jb
cltd
lahf
stos
mov
ljmp
cmc
or
xchg
xchg
xchg
std
and
mov
xor
lock
jmp
add
or
movb
add
add
add
stos
mov
add
sbb
push
iret
xchg
mov
jno
add
add
pop
xor
sbb
add
jnp
dec
insl
add
add
pop
mov
add
repz
add
scas
or
add
mov
lock
ja
add
mov
jmp
jbe
lods
sbb
add
add
in
add
in
add
add
add
sahf
pop
add
and
mov
mov
add
cmpsl
inc
add
or
out
xchg
aad
add
jmp
pop
into
and
mov
dec
push
add
push
add
or
aaa
inc
int3
xchg
push
fcoms
jne
mov
add
mov
cmp
push
push
add
sub
in
rolb
mov
sti
xchg
loopne
outsl
xchg
add
je
adc
lea
xlat
addb
mov
xchg
add
cmp
scas
testb
xchg
cmp
add
loopne
sbb
add
inc
cmp
mov
jle
add
lods
ljmp
jbe
pop
cmp
sub
mov
jecxz
add
rorl
jo
xchg
add
add
xor
mov
hlt
add
hlt
add
add
sahf
fcomps
mov
jmp
das
mov
sahf
add
outsl
loopne
popf
push
add
cmpsb
add
loope
add
pop
add
dec
div
adc
or
add
pop
push
mov
mov
ss
add
mov
add
add
je
mov
add
xchg
dec
or
mov
outsb
adc
sahf
aas
xchg
fsubrp
lock
add
add
ja
lods
loopne
lock
out
mov
dec
add
mov
mov
sbb
mov
dec
aam
xor
sub
sti
or
push
add
insl
push
aas
pop
movsb
add
mov
imul
rolb
test
scas
arpl
test
add
add
or
sbb
fs
in
fldcw
add
mov
adc
add
popf
movsb
add
and
sbb
pop
add
add
add
sbb
mov
mov
imul
cmp
loop
loop
test
jge
enter
rcrl
ret
add
and
xchg
lret
scas
push
add
inc
add
xchg
mov
jbe
das
pop
cmpsb
add
testb
add
jb
lret
ret
in
cmc
popa
xor
inc
add
mov
add
add
repnz
in
ficomps
add
loopne
aad
add
rolb
mov
test
mov
inc
add
add
add
loop
mov
test
add
mov
cli
andl
add
inc
add
add
dec
les
cmpsl
and
movsl
mov
adc
pop
pop
sti
cmp
jb
test
add
daa
pop
sub
in
fidivrl
mov
and
adc
data16
in
insl
js
aas
xchg
add
lock
sub
mov
add
mov
lret
les
dec
outsb
rolb
in
xlat
xlat
xchg
mov
into
mov
sbb
add
out
and
and
push
and
mov
mov
xor
stos
outsl
pushf
xchg
pop
jg
or
add
adc
inc
add
xchg
xchg
add
cltd
xchg
xor
fcoms
mov
add
inc
dec
cwtl
addb
fsubrs
add
sahf
mov
sbb
add
or
sub
xchg
jp
add
add
mul
push
add
sub
add
addb
jb
lcall
add
iret
push
pusha
add
add
add
add
mov
or
add
add
out
add
pop
push
add
add
sub
add
add
and
add
add
inc
cli
ficompl
add
fwait
push
add
xor
inc
aas
and
jge
add
cmpsb
add
out
jno
add
mov
xchg
lcall
adc
stc
ret
cmpsb
add
xor
loope
loop
rolb
inc
add
mov
add
add
jo
ds
add
add
cmp
out
rcll
inc
iret
pushf
sbb
adc
pushf
lret
rolb
sbb
adc
jmp
xchg
add
add
les
sub
add
xor
andl
add
stos
xchg
gs
or
xlat
adc
arpl
add
iret
insl
std
mov
add
add
in
push
ja
add
filds
pop
or
je
negl
add
popf
sbb
or
enter
mov
addb
imul
std
rep
add
outsl
inc
add
add
inc
add
jae
mov
mov
hlt
add
add
not
dec
adc
fldl
jp
pushf
daa
adc
aas
cmp
add
push
add
jne
addb
jmp
xchg
mov
add
mov
arpl
jo
cmp
decl
repz
or
push
add
add
xchg
out
inc
add
repz
add
mov
mov
mov
xchg
ja
add
add
inc
add
push
js
sbb
imul
sbbl
inc
add
xor
push
add
sub
mov
adc
stos
xchg
add
inc
mov
inc
mov
andl
mov
leave
dec
call
addr16
inc
inc
add
add
ss
in
add
add
je
jle
rolb
add
add
push
mov
pop
sbb
inc
add
mov
arpl
mov
fwait
insb
add
fiaddl
sub
mov
jne
mov
add
insl
mov
rcrl
sbbl
sub
add
add
out
mov
cmp
jmp
add
pop
cld
int3
jecxz
add
cltd
push
add
xchg
repz
add
add
mov
sub
pop
fisttps
push
inc
add
jo
sbb
in
mov
add
sub
dec
or
mov
mov
loop
scas
in
jno
add
adc
push
add
lods
cmp
sub
mov
mov
add
add
mov
dec
dec
gs
add
xor
push
scas
add
mov
leave
push
add
xrelease
daa
cmp
test
cltd
jno
add
xor
xchg
add
testb
mov
cmp
add
add
add
leave
cmp
xor
inc
add
push
pop
out
jle
sbb
add
mov
xchg
dec
out
mov
fildll
mov
sbb
add
mov
add
add
add
add
add
add
mov
jno
push
add
add
jae
mov
cmpsl
push
stos
sub
add
int3
imull
fwait
jnp
test
xor
loopne
js
add
into
pop
jnp
xchg
add
mov
xchg
mov
add
decb
imul
rolb
add
and
mov
xchg
mov
ja
mov
jecxz
push
andl
add
jne
je
jp
repz
add
push
mov
add
adc
repz
mov
jnp
mov
add
mov
add
gs
popf
lahf
shrl
dec
jns
add
mov
pop
shl
xchg
pop
cmc
jae
add
lcall
test
dec
cmp
clc
push
sub
js
add
or
adc
add
lahf
and
faddl
add
hlt
add
jb
pop
aaa
jo
das
sbb
push
add
push
add
add
sub
fs
push
lcall
mov
sub
sbb
add
ret
or
in
add
daa
arpl
add
imul
stos
arpl
add
add
cmc
xor
out
fcoms
stc
mov
add
add
add
xlat
cmp
add
movsb
add
outsl
hlt
add
testb
sbb
xor
je
push
imul
mov
add
test
push
loope
popf
jns
inc
add
mov
imul
add
out
sbb
fstpt
mov
jmp
add
lea
adc
mov
add
cmpsl
repz
cltd
inc
mov
mov
add
mov
les
add
mov
dec
sbb
sahf
inc
add
mov
sub
add
jnp
add
sbb
gs
add
insl
icebp
lods
shrl
call
bound
mov
add
movb
sub
lcall
mov
mov
addb
pop
adc
insb
aaa
or
outsl
mov
add
add
sub
add
shll
add
pop
cld
int3
pop
xlat
jp
add
jne
cwtl
fstpt
loopne
hlt
add
sbb
xor
popf
leave
mov
xchg
in
add
mov
add
xchg
fnstcw
jo
mov
or
mov
mov
cmpsl
jnp
add
mov
add
iret
cmp
hlt
add
insb
test
inc
add
add
fildl
mov
or
add
mov
xlat
inc
add
inc
test
fsubrs
fbld
add
sub
jns
adc
scas
sti
mov
add
mov
mov
mov
add
add
add
mov
inc
pop
call
enter
push
rcl
cmp
inc
add
push
add
add
out
pop
call
xor
add
movq
xchg
add
lock
add
gs
lds
mov
add
mov
faddp
dec
xchg
jne
add
add
add
jmp
pushf
les
stos
sbb
data16
addb
dec
pop
leave
in
mov
or
pop
testb
add
jo
mov
add
or
xchg
mov
push
hlt
add
fs
pusha
add
sbb
cmp
sbb
xchg
test
pop
jns
jmp
cmp
ficompl
add
add
out
adc
mov
add
add
mov
sub
push
add
or
sbb
add
repnz
add
lret
in
addr16
adc
sbb
mov
lock
jae
pop
data16
or
inc
mov
push
push
cmp
sti
sub
movb
add
dec
test
jl
add
mov
dec
push
add
fisttps
pop
addb
add
sbb
mov
testb
mov
add
mov
ret
add
add
add
add
arpl
mov
add
mov
fildll
mov
jp
sub
cld
push
inc
and
mov
push
jb
fcmovb
adc
lods
cli
fisttps
mov
add
fcompl
pop
ror
xor
sbb
add
pop
jecxz
dec
shll
jp
dec
jns
add
data16
jecxz
xor
scas
push
add
fcmovnb
add
add
or
adc
add
add
push
push
push
or
inc
add
add
add
loope
push
cs
add
sbb
test
lret
sahf
push
or
and
cmp
sub
flds
mov
add
add
dec
add
add
ja
adc
das
js
add
int
dec
inc
add
int
data16
cmpsb
add
addr16
or
ret
sub
mov
enter
test
icebp
popf
testb
or
or
addb
add
add
xor
mov
testb
stos
cmp
push
add
add
add
rol
jl
add
popf
leave
lahf
test
in
stos
lcall
inc
fwait
ja
cli
fsubrs
mov
add
dec
bound
mov
add
mov
popf
mov
gs
sti
out
outsl
xor
loope
jge
aam
pop
outsb
adc
inc
add
sub
add
xchg
add
fisttpll
mov
dec
mov
clc
or
daa
push
out
mov
popa
push
fsubs
push
dec
and
xchg
pusha
add
sbb
mov
add
cmp
add
add
add
push
add
dec
cmc
cli
rolb
add
add
add
mov
push
out
icebp
add
add
add
outsl
and
mov
arpl
inc
add
add
mov
sub
je
mov
lds
cmp
add
dec
ret
mov
ficompl
push
add
movb
and
xor
jno
lock
add
add
cld
call
add
cmp
pop
mov
sbb
pop
clc
ret
movsl
testb
push
add
add
add
lea
xchg
add
testb
ret
add
loopne
dec
pop
clc
repz
add
testb
or
cmp
ljmp
jne
into
and
mov
in
daa
mov
add
add
pusha
add
add
cmp
fldl
inc
add
icebp
and
add
jne
inc
jbe
push
ficompl
mov
scas
xor
pusha
add
in
add
sbb
add
rolb
and
push
mov
imul
and
add
add
and
lock
jmp
mov
loopne
ja
jae
ret
push
add
push
add
add
imul
add
movsb
add
shrl
jp
xor
push
add
add
xor
fidivrs
pop
jmp
sbb
cmp
add
add
add
mov
mov
repnz
cmp
add
cmp
mov
je
sbb
leave
scas
mov
mov
pop
mov
test
add
mov
subl
or
add
mov
add
in
add
xchg
out
iret
jns
add
add
lea
inc
add
daa
into
inc
lret
jne
and
mov
xchg
jo
ljmp
dec
pop
or
add
sbb
add
add
mov
push
add
clc
out
add
mov
sbb
add
adcl
and
lods
or
push
nop
add
in
mov
jge
add
add
imul
sub
or
mov
add
inc
add
add
test
mov
add
call
jmp
fs
cld
sbb
lock
xor
jae
add
mov
cmp
lods
pop
cmp
cmp
dec
stc
jl
bound
mov
mov
lock
jae
mov
std
dec
ret
cmp
fcmovnu
jns
push
add
inc
add
push
add
add
pop
sub
add
and
popf
outsl
cmp
dec
mov
xchg
and
mov
pop
add
dec
addb
add
cld
jge
push
call
nop
add
inc
addl
add
fidivl
repnz
add
push
add
add
mov
mov
jae
daa
push
mov
add
fistps
lods
inc
push
pop
add
push
add
call
add
xor
out
loop
aad
dec
mov
cmp
mov
jg
and
mov
add
dec
or
fbld
add
add
add
sub
add
stc
add
add
mov
add
sbb
fucomp
jecxz
cld
out
cltd
fwait
xor
mov
iret
incb
add
push
dec
data16
xchg
add
add
lret
adc
dec
inc
add
add
sub
pop
data16
add
imul
push
xor
imul
add
add
cmp
add
mov
sbb
cmp
add
sbb
add
add
add
rolb
sub
lock
add
add
add
js
arpl
pop
clc
mov
or
fstpl
mov
xchg
sub
jp
fldt
mov
add
cmp
ror
add
mov
xor
out
lock
clc
clc
xor
xor
hlt
add
int
pusha
add
push
add
mov
cmp
mov
add
sbb
sub
adc
test
movb
sbb
add
sub
cmovne
shll
add
mov
fmull
arpl
pop
xlat
pusha
add
xchg
aaa
or
add
ja
aam
or
xchg
xor
outsb
lock
dec
add
mov
and
lret
test
dec
xchg
add
test
inc
add
aaa
mov
ret
push
add
mov
mov
ja
add
add
jno
mov
xor
jl
add
jle
xor
dec
push
add
movsl
dec
call
or
add
mov
add
or
repz
je
and
mov
add
dec
xchg
add
popf
push
add
rcr
roll
add
and
mov
xchg
or
pop
pop
xchg
pop
leave
imul
or
dec
lret
ret
inc
cmpl
add
mov
add
testb
aas
add
mov
pop
inc
add
scas
cmp
add
mov
sbb
addb
sbb
dec
js
add
jp
cwtl
ret
bound
mov
out
les
xlat
xchg
push
adc
sbb
add
gs
or
push
add
sahf
cmp
pusha
add
add
decb
add
pop
mov
or
es
add
jo
mov
test
add
xor
jecxz
enter
inc
addb
add
add
add
add
rolb
push
add
add
lcall
ret
jge
loopne
jp
pusha
add
mov
les
mov
jmp
scas
lods
lds
jne
sub
popf
mov
enter
call
add
add
dec
jno
repz
dec
add
shl
xchg
mov
add
mov
fwait
mov
add
cwtl
cmpsb
add
add
add
add
pusha
add
push
add
add
add
mov
jp
add
pusha
add
call
btr
pop
popa
inc
jne
dec
roll
fisubrl
add
scas
xor
add
add
xchg
adc
loopne
idivl
jl
add
cmp
les
jle
dec
daa
jbe
sub
es
add
adc
mov
xor
add
mov
inc
add
jns
mov
push
add
les
mov
mov
fnstsw
in
in
add
add
add
ret
lods
cld
movsb
add
sub
fimuls
add
rcrl
mov
dec
insl
pushf
sbb
nop
add
and
mov
pop
pop
inc
add
xchg
add
enter
adc
add
inc
add
sbb
pop
push
ds
add
stc
inc
dec
sti
lret
pop
xchg
xchg
cmp
into
fldl
inc
add
imul
add
add
xor
jne
mov
add
mov
pop
sub
add
outsl
dec
cmpsl
dec
shl
inc
add
daa
cmpsl
cltd
and
xor
mov
shr
jbe
xor
lret
outsb
cltd
mov
add
mov
mov
sbb
roll
sub
push
add
push
sub
sbb
add
dec
push
cmpsb
add
mov
pop
xor
pop
ret
add
mov
add
add
add
xchg
jmp
sbb
shll
push
scas
add
mov
mov
mov
add
or
jno
add
icebp
lock
xor
add
lret
ds
bound
mov
sbb
aaa
sarl
xrelease
xlat
dec
cmpsl
aaa
sbb
add
xchg
add
out
sbb
out
cwtl
sbb
int
add
sbb
add
add
push
cmpsb
add
fadds
add
out
and
mov
dec
jmp
or
mov
rcrl
daa
ds
das
or
add
stc
stos
cmpsl
cmpsl
xchg
mov
and
mov
add
test
aaa
xor
add
add
add
inc
add
lret
aaa
mov
cmp
push
mov
jge
add
add
in
push
add
push
push
add
lret
adc
rolb
ljmp
pop
and
xor
xchg
arpl
add
out
ja
mov
add
sbb
lcall
out
push
leave
popf
daa
roll
xchg
add
xor
data16
xor
scas
mov
int3
pop
std
in
ficompl
sbb
inc
add
lret
clc
or
aas
rolb
cmp
add
cmc
addb
mov
and
add
roll
int3
jl
add
inc
lcall
jecxz
pxor
outsb
testb
add
adc
das
roll
push
add
mov
add
jo
jmp
pop
mov
add
fadds
rcl
add
movsb
add
mov
div
cs
jb
push
add
fmuls
add
sahf
inc
fiadds
add
ret
add
cmc
jg
fdivrs
movsl
add
test
push
add
stc
imull
cmp
or
add
add
addl
rolb
les
int3
pop
xchg
dec
out
test
mov
sbb
and
push
jb
sub
sbb
cld
mov
cmp
add
sbb
add
test
dec
push
add
dec
addr16
cmp
jmp
rolb
out
jecxz
mov
adc
mov
adc
xor
cs
add
add
mov
cli
pop
pop
in
out
pop
mov
pop
call
jne
lcall
gs
rolb
addl
clc
ffree
add
mov
fdivl
mov
add
add
mov
or
mov
xor
cmpsb
add
sahf
popf
rolb
lret
inc
std
mov
mov
add
cmc
jecxz
jp
add
add
cmp
sub
mov
sbb
add
add
mov
xchg
add
push
add
push
cmc
push
and
mov
sub
sbb
dec
mov
add
les
mov
pop
xor
sub
add
add
inc
xchg
push
add
adc
mov
lret
add
add
mov
outsl
rolb
std
rolb
push
outsl
mov
xor
andl
outsl
loopne
mov
jge
rcr
add
dec
ret
add
mov
addb
addr16
jne
add
pushf
fistps
dec
sub
jp
pop
xor
rolb
push
and
stos
in
jle
add
add
add
mov
add
add
add
mov
push
add
add
lods
cmp
add
inc
add
add
sub
add
mov
fldcw
lods
jno
add
inc
add
jnp
adc
xchg
add
std
test
ljmp
cmpsl
and
mov
addl
iret
cmc
push
add
add
add
pop
pop
jo
data16
outsl
sbb
add
add
popf
jne
add
bound
mov
add
jg
dec
and
sar
enter
fadd
add
mov
add
movhps
or
repz
sti
ljmp
add
add
clc
xchg
jnp
in
lret
mov
mov
imul
out
xor
jl
add
add
lahf
sbb
pop
mov
inc
add
mov
xchg
add
mov
mov
add
mov
add
cmp
xchg
add
pop
into
add
ss
add
add
mov
add
mov
lods
hlt
add
add
bound
mov
mov
call
rcl
adc
jne
jbe
test
xor
fldenv
add
mov
loop
and
xchg
xlat
jbe
pop
pop
add
mov
mov
in
push
lds
add
repz
sub
add
mov
mov
add
mov
mov
popa
test
add
dec
add
mov
dec
lret
sub
add
xchg
sbb
add
jno
in
xor
push
pop
mov
dec
nop
add
repz
add
add
add
pop
push
fmull
dec
and
mov
add
add
adc
mov
add
add
push
ret
cmpsl
mov
aaa
repz
mov
les
int3
outsl
xchg
pop
sbb
lea
mov
cwtl
out
xchg
dec
dec
lods
je
add
add
vmovhps
add
mov
ffree
xor
fmulp
scas
movsl
icebp
pop
rcll
mov
mov
xchg
add
jl
pop
mov
add
xchg
add
add
add
sbb
rolb
push
icebp
mov
imul
add
sahf
call
add
fnstsw
into
adc
addb
js
push
or
or
adc
fucom
add
int
and
mov
and
mov
pusha
add
aad
addb
inc
add
mov
adc
cmp
or
lods
jnp
add
xor
xor
out
roll
outsl
xchg
add
mov
std
pop
adc
cs
repnz
addb
adc
add
push
add
add
insl
lods
push
add
pushf
sar
pop
sub
addb
in
pop
call
add
lret
icebp
dec
push
add
xor
andl
outsb
sub
add
cmp
add
mov
add
mov
int3
inc
ds
test
pop
push
add
push
add
add
add
add
pusha
add
pop
cs
and
mov
adc
in
ljmp
sbb
mov
pop
xor
mov
cmp
gs
dec
clc
dec
int
add
mov
mov
dec
rolb
movb
pop
sti
pop
jmp
ss
pop
movb
dec
and
mov
pop
test
sub
xchg
and
rorl
add
xchg
xor
add
pop
adc
idivl
xchg
sub
sub
and
popa
xchg
add
add
dec
cmovle
pop
push
xor
xchg
in
ret
sbb
add
cmc
fdiv
add
mov
in
cmp
lock
adc
mov
pop
aaa
popf
xchg
arpl
mov
xchg
add
pop
ds
add
add
add
addb
vpor
add
add
mov
jge
and
mov
lret
bound
mov
mov
push
cs
pop
out
sub
insl
add
inc
dec
test
sbb
push
add
add
mov
add
test
add
sbb
inc
and
mov
push
add
xorl
pop
ds
pop
jl
add
add
sub
push
cmp
mov
jl
pop
jecxz
aas
mov
arpl
add
xor
das
test
lods
adc
add
jge
add
xor
add
iret
int
or
add
das
cmp
pop
in
mov
push
cmp
std
jp
add
js
jmp
mov
add
or
dec
outsb
in
fistpll
xchg
add
add
mov
xor
jecxz
lea
int3
sbb
add
and
in
mov
movsl
or
leave
fistpl
add
or
add
in
add
jne
mov
lods
sti
popf
cmpsl
sbb
scas
or
add
fsubl
in
add
testb
add
mov
add
add
add
xor
add
add
ja
dec
inc
lret
add
add
and
or
mov
add
add
add
add
add
sbb
out
push
add
mov
pop
adc
pushf
sbb
cwtl
fsts
jg
mov
fisttpll
mov
inc
add
ljmp
mov
push
or
cmp
leave
in
insb
gs
dec
pop
dec
pop
insl
mov
mov
dec
or
rolb
mov
sub
add
mov
aas
call
add
lret
add
mov
add
push
add
xor
cmp
adc
mov
cmc
jl
xchg
add
jmp
add
roll
movb
add
js
add
jbe
and
mov
inc
sub
jb
popa
je
gs
mov
sbb
outsl
jge
mov
or
and
mov
add
add
icebp
xor
mov
addr16
mov
add
test
sbb
add
mov
loop
test
rcll
sbb
sbb
sub
insb
jbe
js
mov
sub
loop
fiaddl
adc
add
add
loope
addr16
ljmp
push
add
add
add
add
jecxz
jecxz
jle
add
jg
cmp
add
movsb
add
and
mov
movb
addb
add
add
mov
xchg
lock
pop
sub
add
pop
cmc
pop
outsl
out
popf
mov
sysenter
add
add
cli
das
icebp
mov
sbb
add
add
xchg
add
jbe
dec
fiadds
push
add
mov
out
xchg
repz
hlt
add
cmp
dec
dec
scas
lds
add
jnp
add
jne
push
loopne
add
mov
add
mov
xchg
rolb
hlt
add
out
adc
jno
ds
adcl
add
or
push
ds
lock
dec
pop
mov
xchg
add
add
mov
xor
iret
add
dec
dec
xchg
mov
add
mov
movsb
add
pop
cmp
xor
stos
jl
pop
push
mov
outsl
lds
and
cmp
data16
add
ficoml
add
inc
sub
xchg
test
add
test
fdiv
push
rolb
pop
mov
cmp
rcl
filds
mov
add
add
out
cli
xor
and
mov
add
add
xor
cmc
mov
dec
jnp
adc
push
add
add
xchg
push
adc
add
sbb
pop
stos
aas
push
dec
rolb
fwait
sub
push
repnz
add
and
outsl
cmp
mov
add
cld
sti
leave
and
add
xchg
rcll
stos
pop
mov
ljmp
sbb
add
fmull
xchg
pop
or
cld
daa
rolb
scas
movsl
out
inc
add
add
repnz
push
add
sti
mov
inc
inc
add
shll
lods
sub
data16
pop
cwtl
loop
inc
cmpsl
ja
add
xchg
in
xchg
bound
mov
aaa
adc
xor
jae
sub
xor
insl
rolb
jl
aaa
inc
add
incl
add
imul
add
add
ficompl
jmp
add
add
pop
mov
iret
lret
add
add
add
clc
xchg
xor
jle
int3
arpl
in
movsb
add
std
mov
dec
inc
add
rorl
mov
daa
cmp
add
xchg
add
test
add
xor
pop
in
mov
lret
aad
mov
aaa
notl
inc
add
idivl
and
mov
jnp
add
pop
in
dec
and
mov
out
push
add
cmp
add
and
mov
xchg
add
add
xor
rolb
movsl
fs
add
add
lods
rcll
add
add
dec
pop
pop
inc
add
add
mov
mov
xor
lahf
test
push
adc
pop
or
sub
scas
sub
mov
mov
add
fnstenv
xor
out
fstpt
or
push
add
add
inc
add
sub
add
int
clc
movb
lahf
cmp
icebp
lahf
mov
enter
pop
push
add
pop
or
mov
pop
mov
imul
mov
add
int
pop
aas
pop
out
add
dec
data16
inc
add
or
fldt
pop
pop
inc
add
adc
jno
push
js
xchg
out
add
mov
imul
insl
xchg
add
js
popf
xchg
lods
or
xchg
mov
addb
add
add
sub
add
movsl
sbb
cs
lods
rolb
lahf
fisttpll
leave
lcall
and
mov
jg
aaa
xchg
pop
push
cli
xchg
add
add
xor
testb
add
dec
jae
add
add
and
jo
cmp
inc
xor
mov
je
xchg
mov
fadd
pop
outsl
and
mov
nop
add
inc
ret
add
jmp
fidivl
aas
sbb
add
mov
and
mov
lods
aas
bound
mov
xor
jle
xor
fcomip
addr16
xchg
add
add
adc
push
add
dec
inc
ret
add
rolb
fstpl
lds
xor
movb
inc
add
sti
mov
rolb
mov
add
fistps
cmpsl
test
cmp
add
add
mov
sbb
mov
add
sub
xchg
testb
mov
xor
jg
add
or
pop
lahf
lock
mov
add
xchg
add
in
push
add
add
mov
pop
test
mov
sbb
add
shll
aam
push
aam
pop
or
nop
add
lea
mov
inc
add
fdivrs
xlat
stos
sbb
xchg
sbb
les
mov
cmp
add
testl
out
rolb
scas
sbb
ljmp
pop
jno
cmp
add
add
adc
std
mov
jecxz
in
mov
shll
pusha
add
testb
sub
loopne
mov
outsb
data16
jmp
in
repnz
sub
xor
or
pop
sahf
mov
add
mov
jae
scas
dec
mov
mov
jae,pn
lcall
adc
add
add
jle
movb
cmp
add
add
loopne
cmp
ficoms
jbe
or
push
sub
testb
data16
add
cwtl
cltd
pop
adc
add
add
dec
xchg
add
testb
mov
mov
rolb
sbb
pop
test
outsl
xor
add
add
loopne
and
mov
add
pusha
add
and
or
add
add
pop
xor
add
in
sub
add
mov
push
add
xor
mov
dec
push
data16
mov
outsl
cmc
popf
add
sbb
int
add
out
cltd
mov
lcall
add
mov
test
add
in
iret
addb
push
add
add
xchg
les
scas
add
and
mov
inc
or
je
pop
inc
pop
fs
sahf
mov
add
into
sub
add
add
mov
add
out
add
seto
out
ljmp
mov
roll
add
add
add
imul
shll
movl
and
add
xlat
cld
pop
pop
xor
imul
enter
add
js
pop
loope
movb
or
add
mov
pop
adc
mov
in
les
pop
mov
and
movb
sbb
add
mov
jmp
lret
cli
int3
mov
inc
std
stos
push
or
arpl
add
cli
xchg
aam
in
rolb
stos
inc
add
repz
inc
add
add
rolb
mov
cmp
jmp
push
add
mov
ljmp
mov
rolb
push
add
gs
cmp
stos
mov
xor
add
clc
loope
add
adc
add
and
add
add
pop
xor
push
add
cmpsb
add
or
or
and
mov
add
pop
ret
insb
movsl
mov
inc
add
add
add
mov
test
pushf
pop
mov
mov
push
add
lcall
add
sub
add
enter
loopne
mov
stos
dec
mov
pop
sbb
fbld
mov
pop
sarl
movsl
inc
add
add
popa
inc
add
mov
js
add
dec
loopne
imul
push
insl
cmpsl
test
lcall
and
mov
out
xor
sub
or
push
jle
add
or
sub
adc
add
add
dec
data16
add
add
inc
push
lock
jecxz
add
push
aaa
mov
in
cld
dec
repnz
add
add
ficomps
jg
add
fwait
rolb
dec
xor
add
mov
in
xchg
add
mov
aas
movl
movsb
add
out
loopne
repz
jg
add
mov
adc
inc
mov
das
mov
sub
add
add
mov
or
xchg
add
add
test
add
mov
call
mov
push
into
mov
cld
mov
lahf
adc
mov
jae
jae
scas
rcrl
add
cmpsb
add
dec
xchg
rolb
mov
cmpsl
jb
pop
push
mov
add
fldenv
add
mov
push
xchg
add
add
jecxz
adc
fs
add
xchg
add
mov
aaa
lods
mov
push
add
add
push
add
dec
aad
out
push
add
and
add
xor
cld
inc
add
mov
add
pop
jb
cs
add
xchg
add
push
fistps
sbb
mov
inc
mov
add
mov
inc
adc
inc
sbb
add
addb
add
add
add
jno
add
mov
mov
out
mov
outsl
jl
add
mov
sti
push
fwait
and
mov
add
mov
lret
mov
push
sarl
fnstsw
fsubl
add
mov
push
add
mov
lods
data16
add
add
sbb
popf
add
jae
cmp
add
mov
inc
pop
testb
cmp
dec
pop
int
add
add
add
sub
and
pop
push
add
add
xor
bound
mov
lahf
pop
or
add
add
fnstsw
dec
fs
loope
mov
subl
add
xchg
ret
xor
call
lcall
std
loopne
add
cmpsb
add
fiadds
push
xorl
out
sub
xor
dec
int3
sbb
pushf
repz
icebp
stos
sub
and
scas
or
fcoms
adc
push
repnz
in
das
xor
fisubs
mov
dec
test
inc
add
mov
in
and
mov
adc
xor
add
in
lret
out
xchg
add
add
jmp
mov
aad
xchg
jg
movl
scas
xchg
dec
cmpsb
add
add
leave
repnz
testb
or
in
add
movsb
add
push
add
lret
in
out
fsubrs
add
add
sub
add
mov
add
inc
add
scas
pop
sbb
add
jg
in
and
pop
ds
testb
add
cmp
test
loopne
sahf
jl
inc
or
bound
mov
cmp
gs
add
fwait
imul
and
mov
clc
test
and
and
add
mov
pop
movsb
add
cmp
scas
or
mov
push
add
add
xor
hlt
add
mov
and
mov
and
stos
and
aad
pop
ret
add
cmp
inc
add
repnz
mov
add
stc
rcll
mov
gs
inc
add
je
mov
push
hlt
add
cmpl
mov
cmp
imul
add
or
mov
add
fcmovnb
add
pop
xor
xchg
sarl
push
cmc
mov
pop
fsts
or
cltd
mov
int3
inc
and
mov
add
rolb
sbb
mov
add
add
mov
imull
jle
add
mov
cmp
cwtl
sub
cmpsb
add
and
mov
add
add
add
mov
ds
push
add
adcl
leave
adc
out
dec
sub
lret
add
add
frstor
ljmp
sbb
shll
mov
lea
mov
push
add
mov
add
inc
pop
and
add
jmp
loop
icebp
sub
sbb
jno
dec
data16
jae
add
add
add
add
add
xchg
mov
outsl
nop
add
jo
test
cmp
add
movsl
sub
test
add
mov
test
or
jno
add
bound
mov
fidivrs
mov
add
les
repz
jo
sub
or
insl
iret
pop
fdivl
scas
mov
cwtl
push
xchg
add
pop
mov
mov
inc
add
sbb
adc
insl
movl
add
cmp
jle
mov
adc
jl
sbb
add
add
adc
jle
push
inc
add
add
mov
loop
add
xor
aas
ljmp
dec
sahf
daa
mov
add
add
andl
shll
add
mov
jbe
xor
inc
stos
pop
and
mov
add
jne
add
add
add
outsb
enter
add
movsb
add
mov
add
add
lahf
pop
pop
jno
outsl
and
addb
jecxz
lahf
nop
add
inc
add
add
pop
arpl
or
out
jnp
add
lea
add
test
std
pop
xchg
fidivrs
add
mov
add
and
mov
leave
movsb
add
rolb
and
cwtl
xor
jmp
sub
jle
add
add
mov
or
sbb
jp
pop
fldenv
cmp
add
add
adc
add
mov
add
loop
int
fs
xor
xchg
add
push
add
xchg
add
add
add
mov
mov
aas
add
mov
insb
jl
int
mov
pop
pop
mov
rolb
add
mov
frstor
and
mov
or
lcall
cmp
mov
adc
or
and
outsl
imul
add
pop
movb
mov
add
push
clc
mov
test
into
inc
add
leave
dec
test
xor
hlt
add
inc
add
add
jns
rolb
pop
lods
movsl
sub
out
mov
push
add
rcll
add
xchg
add
dec
loop
pop
add
xor
mov
cmpsb
add
fdivs
out
in
call
add
mov
mov
mov
add
add
cmc
int
pop
and
mov
add
inc
or
cli
cmpsl
xchg
add
std
push
add
fstl
jbe
push
add
mov
add
movsb
add
add
sub
xchg
add
mov
in
lds
in
popf
dec
cmp
fwait
pop
out
gs
adc
dec
add
aas
adc
in
nop
add
jg
add
jnp
pop
fxch
ds
int
rolb
cmp
jmp
add
imul
xchg
ret
inc
add
fwait
adc
xchg
dec
loop
mov
add
add
sub
push
add
add
out
cmp
lret
xchg
add
pop
cmp
jp
mov
add
les
icebp
dec
dec
sub
and
cmp
pusha
add
xor
sub
xor
movsl
push
mov
cmp
dec
fstpl
mov
ljmp
cmpsl
mov
add
mov
jecxz
je
pop
ret
fstps
pop
test
add
loope
sub
xchg
int3
lods
lahf
arpl
add
jo
mov
mov
sub
stos
fsubrp
cmp
xlat
lret
dec
pop
dec
xchg
add
stc
pop
sbb
cltd
sbb
mov
jecxz
add
aaa
and
mov
mov
dec
pushl
insl
mov
in
jb
add
add
add
jno
jae
add
cld
inc
adc
aaa
jecxz
decb
mov
push
pop
cli
push
add
add
add
test
outsl
push
repnz
pop
pop
scas
xchg
test
fdivs
sub
push
mov
xchg
add
push
iret
insl
sub
xor
loopne
jmp
add
scas
js
add
add
mull
dec
mov
mov
out
rolb
mov
sub
fucomi
inc
add
dec
mov
cmp
pop
push
push
push
add
xor
dec
or
add
rolb
mov
mov
shll
jle
add
add
xchg
cli
push
addr16
ljmp
aaa
lods
pop
nop
add
dec
add
mov
or
pop
leave
push
add
lret
cli
sub
mov
fsubl
mov
add
pop
movsl
cmp
mov
icebp
sbb
movsl
jae
add
into
jns
insl
pop
inc
jnp
mov
lods
mov
test
hlt
add
add
inc
stos
pop
add
mov
mov
movb
imull
inc
aas
xchg
inc
add
add
push
sbb
add
add
dec
xor
add
pusha
add
sub
clc
add
xchg
xchg
add
inc
push
add
loope
add
push
cmp
jg
and
dec
pop
adc
adc
rolb
xlat
incl
mov
mov
add
jmp
scas
mov
sbb
push
add
jnp
cmp
imul
add
add
es
xor
push
aad
lret
fwait
adc
je
mov
ror
mov
out
popf
mov
add
out
sub
cli
xor
je
xchg
add
mov
add
dec
aas
mov
mov
jno
or
add
repnz
int3
std
jl
outsl
fwait
add
sbb
add
pop
jno
add
add
or
sbb
add
add
add
xor
pop
sahf
sbb
mov
add
lods
aam
push
add
sahf
push
or
jmp
pmaxub
pop
xor
xchg
mov
add
mov
mov
add
mov
add
push
add
dec
outsl
dec
ljmp
dec
push
add
fmull
add
jge
inc
add
repnz
pop
or
mov
jae
add
js
push
or
imul
neg
add
jno
adc
dec
fnstcw
aad
and
jl
push
lods
and
cmp
add
sub
mov
mov
cmp
je
test
add
mov
and
mov
add
cli
add
mov
jp
add
add
add
inc
aaa
dec
jmp
add
sbb
add
pop
icebp
dec
rcll
xor
and
cmp
add
aad
add
add
mov
add
stos
je
xchg
mov
repz
add
flds
subps
and
add
add
dec
dec
scas
daa
cmp
stos
psubsw
dec
rolb
aam
hlt
add
test
add
in
arpl
cld
dec
push
add
mov
add
test
stos
jle
add
mov
push
add
xor
lret
add
adc
iret
pop
jp
add
lea
xor
xchg
dec
inc
add
mov
add
sbb
dec
movb
add
cmp
add
mov
nop
add
add
add
add
das
mov
mov
sub
mov
rolb
mov
movsl
xchg
add
sub
insb
push
add
add
jns
add
pop
jecxz
rolb
call
add
inc
sub
add
in
add
je
std
dec
push
add
add
repnz
jb
inc
add
scas
sub
mov
add
cltd
stc
sub
xor
ljmp
add
add
add
pushf
and
mov
push
add
addb
add
add
repnz
sub
inc
mov
add
add
dec
xchg
shrl
shr
add
mov
push
lret
mov
push
scas
xchg
or
fcom
adc
add
push
das
arpl
add
xchg
add
jle
pop
or
sahf
inc
xor
cld
xchg
mov
jne
add
insl
sbb
pop
icebp
mov
int
add
add
add
cmpl
call
cmc
fcomp
sbb
in
mov
shll
das
mov
sub
in
dec
mov
aas
pop
mov
repz
lcall
int3
lret
cmp
sbb
add
lds
das
xor
cmp
inc
xor
add
add
int3
enter
cmp
push
push
add
inc
loop
out
add
repnz
adc
mov
sbb
add
mov
fisttpl
mov
inc
cmpsb
add
add
testb
es
adc
icebp
inc
add
add
sbb
ret
jne
jb
jnp
xchg
dec
pop
out
lret
push
add
add
lret
adc
addr16
cmpsb
add
cmpsl
out
pop
shll
add
scas
push
mov
adc
pushf
bound
mov
xchg
mov
out
stc
in
popa
jmp
jno
loopne
movsb
add
pop
testl
leave
sbb
add
mov
mov
add
add
leave
push
add
popf
push
add
hlt
add
scas
nop
add
outsb
or
cs
add
mov
das
ja
cmovp
xor
lahf
xchg
add
mov
adcl
rorl
rcll
std
xlat
stc
js
aad
movsb
add
lds
iret
mov
pop
xchg
scas
clc
inc
cmp
jg
and
mov
pop
xlat
cmp
jge,pn
add
add
add
nop
add
rcll
add
lds
mov
cmp
in
add
push
add
jecxz
add
rolb
cmpsb
add
mov
add
add
dec
adc
xlat
xchg
js
add
add
fldenv
add
add
add
mov
add
add
ret
lahf
push
pop
mov
xchg
or
cwtl
or
fiadds
mov
xchg
cmp
pop
cmpsb
add
out
add
add
dec
push
cmp
sbb
repnz
add
loop
lahf
loop
cld
mov
add
push
dec
add
mov
adc
xchg
push
add
adc
inc
add
inc
addr16
add
aaa
xchg
add
les
cmp
sub
out
xchg
jns
inc
mov
add
add
add
jmp
jnp
add
in
mov
loope
decb
add
xchg
dec
das
test
fwait
negl
movsl
ret
js
jle
xor
add
in
dec
mov
push
inc
and
jecxz
adc
add
mov
xor
ja
jge
add
mov
add
cmp
add
add
mov
add
inc
add
add
addb
add
rolb
mov
mov
add
addb
sub
dec
mov
cli
jmp
rcr
jl
push
push
push
add
cmp
insl
pop
roll
add
jg
cmp
add
inc
add
xor
mov
mov
jbe
std
xchg
mov
push
insb
adc
les
add
add
faddl
adc
inc
add
and
adc
adc
cmp
add
jb
lret
ret
ja
and
mov
addr16
push
mov
daa
xor
ds
out
jnp
mov
ds
or
push
add
add
xor
hlt
add
add
add
push
add
add
add
add
add
cmp
loop
lock
popa
mov
outsb
or
add
sub
add
leave
sbb
movl
cmp
add
dec
mov
push
add
mov
and
add
flds
movsl
lock
add
pop
rol
adc
jne
xor
xchg
lea
pop
add
jmp
and
inc
add
loop
add
mov
inc
je
ret
add
mov
addb
sub
add
pop
sub
sbb
and
lcall
push
mov
shll
add
add
popf
cmpsb
add
scas
addb
mov
fcmovnbe
xor
xchg
add
mov
add
add
cltd
or
push
add
add
pop
or
add
enter
add
inc
add
arpl
stc
xchg
aam
sub
push
add
imul
adc
add
jmp
ljmp
fwait
imul
add
add
clc
jl
xchg
add
mov
mov
ret
inc
add
add
mov
pop
cmpsb
add
push
add
add
sbb
adc
pop
mov
hlt
add
mov
aad
out
leave
mov
xchg
add
test
scas
psubq
or
sbb
fxch
daa
mov
xor
and
ds
mov
in
cltd
movsb
add
xor
add
lret
jne
mov
clc
pop
bound
mov
sub
es
add
mov
push
mov
lock
call
rolb
movsb
add
push
hlt
add
sub
add
add
lods
cmp
sub
dec
inc
in
sub
add
gs
and
mov
add
mov
fisttps
add
add
daa
inc
test
adc
adc
jmp
adc
add
jmp
mov
aas
dec
pop
xchg
add
test
jg
add
dec
pop
mov
mov
xor
add
mov
jae
jg
bound
mov
je
test
movsl
mov
or
fcmove
popa
and
mov
add
jp
add
mov
in
fstps
les
adc
mov
push
aas
dec
push
shll
add
arpl
add
lea
jg
lods
xchg
push
add
ficompl
adc
add
loopne
dec
inc
aam
add
lret
add
lcall
arpl
mov
dec
and
ret
jns
add
push
out
rolb
sub
mov
icebp
jge
rolb
fistps
jl
lds
shll
cmp
incb
pusha
add
dec
sbb
xchg
sbb
add
loopne
lret
je
scas
mov
add
add
add
push
add
bound
mov
add
add
jl
push
testb
imul
add
add
add
in
aas
add
cmp
add
xchg
sbb
add
lret
adc
addb
std
dec
push
add
mov
add
dec
fs
push
add
gs
push
add
andl
add
fwait
aam
or
outsl
jle
not
sub
push
sbb
int
add
mov
sub
pop
mov
or
add
rolb
add
mov
fdivp
add
dec
push
inc
add
stos
pop
push
aam
adc
cmp
add
dec
leave
in
mov
fcoml
add
sbb
jle
mov
mov
add
add
add
lahf
call
adc
ficomps
jmp
fisubs
stos
cmpsl
push
pop
sti
or
push
add
mov
bound
mov
dec
xchg
jg
iret
testb
lret
rolb
jl
out
fsubr
call
fdivr
test
or
add
testb
insl
adc
rolb
push
add
jle
inc
cmp
jge
add
loope
add
adc
cld
mov
fnstcw
push
jne
call
add
push
add
sbb
xchg
add
stos
sti
ds
add
jl
add
cmp
shll
add
fildl
out
mov
push
add
add
xor
or
pop
in
xchg
scas
pushl
jle
inc
loop
aas
jl
add
notl
fbld
mov
sbb
add
add
cld
mov
call
or
hlt
add
add
pop
stos
addb
sahf
test
cmp
call
add
add
inc
add
mov
sub
dec
ret
pusha
add
add
xchg
add
add
add
arpl
pop
imul
add
push
mov
add
add
add
xor
mov
int
and
daa
pop
add
add
lds
inc
int3
dec
inc
call
nop
add
add
mov
mov
push
add
xchg
add
add
je
cmpsb
add
dec
xchg
add
mov
es
cld
arpl
imul
je
ljmp
jg
stos
cmc
add
pop
dec
cmp
cmpsb
add
mov
out
aas
push
push
add
cmpsb
add
jl
lods
mov
repz
add
add
pop
push
add
mov
pop
ljmp
cmp
ret
ja
mov
out
rcll
mov
insb
jno
inc
ljmp
mov
outsb
mov
cwtl
ret
rolb
mov
push
add
dec
addb
mov
stos
or
mov
add
pop
xchg
add
jo
repnz
add
add
je,pn
cmp
cmp
jp
jo
rolb
mov
add
outsb
lcall
int3
jns
add
sahf
icebp
dec
and
mov
add
dec
loope
jecxz
add
aam
mov
in
rolb
adc
mov
mov
inc
addb
inc
add
push
add
ret
aam
stos
stos
insl
mov
push
add
out
rolb
and
add
add
ja
add
in
sahf
mov
jg
add
loope
add
and
mov
rorl
lock
addb
outsl
out
ds
mov
clc
add
push
dec
out
add
add
sub
add
dec
movsl
xchg
add
jecxz
inc
dec
pop
cmpsb
add
lds
jmp
mov
add
add
mov
aam
lds
add
mov
arpl
adc
cwtl
xchg
sahf
add
stc
mov
nop
add
sbb
aam
xchg
add
mov
and
lret
mov
or
dec
mov
add
add
sbb
sahf
lret
add
inc
clc
xor
xchg
es
xchg
add
jl
push
movsb
add
lea
add
iret
das
in
out
test
bound
mov
add
add
add
mov
add
pop
mov
add
in
fdivrl
inc
add
std
push
add
mov
lock
and
mov
ljmp
aam
xchg
add
add
add
add
pop
jno
hlt
add
pop
popf
add
xor
loop
inc
insl
sub
add
mov
pop
xlat
enter
add
add
add
push
stos
fnstsw
js
scas
mov
sbb
lar
mov
jmp
add
push
and
mov
lahf
cmp
inc
add
add
arpl
add
mov
mov
cmp
add
sbb
mov
add
or
out
pop
dec
lea
fwait
js
add
add
dec
movsl
cmpsb
add
and
mov
add
add
or
sbb
mov
inc
xchg
add
outsl
jne
hlt
add
push
add
add
scas
mov
out
out
pop
mov
lahf
imul
cwtl
daa
mov
mov
filds
sub
add
jl
cs
add
scas
adc
cmpsl
and
test
ss
sti
out
xchg
add
int3
out
and
mov
add
add
daa
xor
sbb
sti
pop
or
mov
bound
mov
add
sub
add
lods
xchg
xchg
stos
or
rolb
jae
xor
repnz
add
mov
mov
pop
ljmp
sub
or
pop
xchg
push
sbbl
add
add
add
add
scas
fistpll
jl
loopne
outsl
in
in
inc
setbe
jo
mov
mov
add
jno
mov
sti
sbb
fdivs
cmp
add
and
mov
xchg
add
pop
xchg
lock
scas
dec
out
xchg
add
push
sbb
add
add
lret
jle
std
ljmp
rcrl
out
jmp
cltd
lods
add
add
pop
mov
xor
mov
add
inc
add
dec
pop
inc
add
add
ret
sub
add
xor
cmp
mov
pop
dec
jmp
mov
add
in
and
adc
arpl
in
ds
add
mov
jns
add
jb
jmp
mov
add
add
pusha
add
xchg
add
scas
mov
pop
daa
sub
add
mov
mov
add
dec
cmp
jl
add
andl
ds
rol
push
add
pop
push
add
out
aad
sti
cmp
xchg
add
insb
mov
or
push
ja
mov
ja
add
push
addb
je
xchg
jnp
add
add
flds
mov
add
ljmp
add
add
add
add
insb
adc
push
and
add
shll
movb
rolb
adc
add
inc
add
add
add
xor
rolb
jb
out
ljmp
mov
rolb
ljmp
scas
dec
in
inc
add
lret
in
add
mov
jns
repnz
outsl
or
add
cli
dec
jno
mov
add
mov
adc
inc
add
push
add
lock
add
mov
pop
push
add
out
rolb
cmp
add
add
dec
inc
or
cmpsl
xchg
add
add
add
add
mov
push
aas
sbb
push
push
mov
jbe
cltd
xchg
add
repnz
add
insb
rorl
int
mov
xor
sub
cmp
pop
js
jb
adc
das
mov
dec
jge
fcompl
mov
pop
jmp
out
aam
les
lcall
add
ficoms
adc
add
mov
out
outsl
rcll
mov
ja
or
mov
add
repz
mov
add
jb
mov
jp
add
dec
inc
mov
cmpl
call
addb
mov
add
add
or
out
in
and
xchg
sbb
ds
xchg
cltd
into
add
mov
in
add
loope
andl
adc
push
add
arpl
into
add
adc
add
push
add
add
gs
push
pop
repz
mov
sbb
dec
iret
or
shrl
outsb
mov
add
sub
push
mov
add
add
mov
add
fs
imul
pusha
add
cmp
jle
add
inc
out
inc
and
iret
add
mov
add
mov
add
mov
addb
insl
movsb
add
fcom
lret
imul
jp
add
int
push
sbb
add
dec
sbb
add
sbb
mov
adc
xchg
testb
mov
mov
mov
xchg
hlt
add
add
ret
sub
sub
mov
stos
in
aam
add
mov
test
mov
add
and
repz
popf
ficomps
add
pop
std
sbb
je
movsb
add
add
add
add
push
add
pop
insl
and
mov
jecxz
xor
cmc
push
add
and
add
call
fldl
mov
add
or
adc
dec
shll
jge
add
outsl
in
and
mov
adc
movsl
fst
dec
les
stos
inc
add
popf
or
jo
push
add
mov
jae
jo
cmp
dec
int
cmove
mov
sub
add
add
add
mov
loope
hlt
add
mov
add
mov
jg
mov
add
cld
jl
cmp
adc
add
mov
xor
jl
aas
lret
xchg
add
adc
pop
cmp
ja
sbb
dec
inc
add
mov
aad
inc
add
pop
cmp
cld
pusha
add
sub
mov
mov
cmp
js
cli
ja
pop
add
mov
add
rolb
out
aaa
roll
add
mov
add
mov
add
xlat
xchg
sub
arpl
jp
cmpsb
add
sbb
cmp
dec
dec
push
add
add
add
and
xchg
add
scas
jns
stos
adc
mov
popf
loopne
and
mov
dec
cltd
outsl
push
shrl
fisubs
add
test
int
cwtl
sub
xor
movb
mov
movsb
add
fstps
addb
repz
xchg
lds
add
mov
and
mov
roll
stos
hlt
add
mov
mov
inc
xchg
add
pop
insl
je
adc
cmp
daa
addr16
addr16
jo
push
js
xor
mov
add
add
inc
add
cmp
add
jp
add
hlt
add
add
add
mov
lds
mov
jl
add
adc
mov
into
mov
and
cmp
jae
adc
dec
movb
adc
lret
or
movsl
inc
add
out
xlat
dec
cmp
push
add
add
and
negl
push
add
in
inc
xchg
add
add
and
mov
jg
stc
sti
jg
cltd
xchg
add
insl
mov
add
add
sbb
hlt
add
mov
lahf
push
add
add
mov
clc
pop
clc
addb
sub
lea
push
aam
test
cli
add
add
lds
or
je
in
icebp
leave
call
pop
iret
stos
sbb
add
nop
add
add
mov
repz
add
mov
nop
add
iret
and
mov
lret
inc
mov
add
jno
imul
cmpsl
or
add
add
push
mov
add
sub
ja
daa
shl
add
cmpsb
add
jg
enter
add
in
into
pushl
add
mov
arpl
add
add
add
mov
fldcw
inc
add
xchg
rol
xchg
add
add
jmp
dec
neg
mov
push
outsb
pop
mov
lds
add
or
xchg
add
in
xor
in
sub
xchg
loope
add
dec
adc
mov
mov
add
lcall
add
test
loopne
ret
add
or
data16
aas
xchg
add
inc
adc
add
out
mov
push
add
add
add
jns
or
mov
lret
mov
xor
pop
adc
add
fs
mov
das
dec
dec
fcmovb
add
add
mov
add
push
add
add
add
add
add
mov
mov
pop
jl
in
pop
push
lret
loope
sbb
ljmp
jg
frstor
add
mov
mov
cmp
add
test
jnp
add
sub
add
add
daa
cltd
clc
dec
clc
adc
add
add
imul
xchg
in
sbb
call
xchg
push
adcl
fwait
push
arpl
add
adc
rolb
jp
add
mov
and
mov
push
add
or
in
mov
adc
outsl
pop
arpl
add
or
ja
pusha
add
scas
inc
add
movsl
dec
xchg
add
into
pop
xchg
loope
add
or
ja
xchg
add
scas
lahf
stc
push
fistpl
dec
stos
movb
lds
add
addr16
das
push
add
pop
in
addb
push
add
mov
or
or
add
mov
mov
aam
addr16
lret
fsub
aas
push
add
mov
fwait
dec
addb
add
add
lods
mov
add
mov
cmp
add
mov
test
test
xlat
adc
cmc
jmp
insb
push
add
mov
inc
repnz
bound
mov
add
mov
cmpsb
add
sbb
mov
xchg
dec
mov
movsl
xchg
into
mov
sub
add
int3
push
jp
add
stos
xor
cmc
es
jmp
adc
outsb
push
scas
les
push
add
lahf
inc
cmp
leave
jo
xchg
xchg
cmp
sahf
mov
mov
cmp
add
test
add
mov
mov
repz
repz
add
xchg
lahf
icebp
jns
pusha
add
sets
cld
movsl
sbb
add
pop
or
add
out
add
add
add
add
push
jl
sarl
add
cmc
add
bound
mov
push
add
scas
dec
in
dec
loop
sbb
pop
in
add
int3
addb
aaa
aas
dec
mov
inc
adc
adc
inc
das
js
pop
sub
jnp
push
add
add
add
xor
add
add
jmp
add
cwtl
pushf
rolb
add
push
xor
in
jp
call
mov
filds
add
dec
push
call
pop
add
scas
pushf
cmp
je
pop
and
pop
xchg
mov
add
add
add
add
mov
enter
xchg
popa
xchg
bound
mov
out
daa
jmp
movb
add
push
xchg
push
add
rolb
add
aad
clc
stc
fwait
pop
push
add
adc
test
sbb
push
mov
shll
inc
gs
int3
dec
mov
daa
and
mov
adc
add
jno
add
mov
or
sbb
add
add
mov
pushf
and
mov
add
mov
mov
scas
dec
push
mov
cwtl
or
and
mov
xchg
add
xor
mov
jle
orl
add
fadds
jo
lock
add
test
dec
xor
push
mov
movzwl
mov
add
pop
dec
mov
icebp
movsl
add
subl
scas
pushf
and
add
or
xchg
sbb
add
add
pop
addb
pop
addr16
cltd
lret
xor
add
add
decl
inc
dec
arpl
add
mov
inc
push
xlat
mov
add
mov
add
add
in
sbb
aas
xchg
js
jecxz
ret
add
out
cmp
inc
add
lock
jp
cmpsl
sbb
add
sti
lret
jbe
pushf
fnstsw
jb
js
sub
add
add
testb
mov
cwtl
outsl
pop
sbb
add
and
mov
dec
jl
push
pop
pop
mov
data16
adc
outsl
mov
fsts
cmp
adc
into
cmp
arpl
scas
int
aas
inc
sahf
in
and
out
fcmovbe
push
call
add
lock
mov
xchg
add
mov
ftst
add
xchg
add
add
sub
add
movb
sarl
daa
mov
jmp
rcll
mov
add
mov
mov
add
add
andl
add
in
or
out
fstpt
std
leave
dec
or
movsl
jmp
add
add
add
aam
jecxz
add
int
add
and
mov
cmp
add
cltd
jl
ffreep
add
xchg
add
sbb
mov
add
and
add
jl
lahf
loopne
cld
data16
add
clc
loope
fiaddl
add
movsl
pop
testb
popa
rolb
lea
icebp
mov
pop
lcall
add
jo
and
add
cmp
std
call
add
dec
lea
jns
add
aaa
dec
jno
add
ret
mov
xchg
add
or
add
add
add
add
pop
jmp
sub
cmp
jbe
mov
cmp
dec
fiadds
inc
add
sbb
stos
pop
or
add
fidivrl
mov
and
add
mov
sbb
dec
and
fmull
mov
imul
add
sbb
mov
pop
xor
add
bound
mov
adc
pop
xlat
pop
test
pop
call
pop
push
mov
fcmovnu
inc
add
inc
add
das
dec
out
cmp
add
ja
and
mov
in
xor
add
add
decb
mov
add
scas
xchg
pop
xchg
mov
hlt
add
or
add
add
in
mov
push
je
mov
mov
cmp
add
mov
add
jae
cltd
cmp
mov
jge
sahf
lds
add
xchg
pop
push
clc
das
dec
inc
jbe
outsl
xchg
mov
aad
enter
jns
add
and
mov
add
out
sbb
pusha
add
mov
cld
clc
inc
add
scas
mov
mov
cmp
mov
rolb
adc
scas
int
shll
js
add
mov
mov
dec
out
fildl
or
sub
jle
add
cmp
jbe
push
mov
cmc
adc
add
popa
push
jge
insl
dec
in
xchg
lret
inc
add
push
fidivrl
out
inc
add
loope
pop
push
add
fstpl
jb
hlt
add
mov
int
cld
movb
add
nop
add
add
sbb
inc
or
mov
mov
jno
in
repnz
add
lret
fmuls
aaa
push
sbbl
push
mov
pop
mov
loope
lahf
jne
or
mov
add
add
lret
dec
mov
ja
mov
insl
pop
mov
int
mov
aam
add
stos
add
into
fsubr
das
lock
mov
cmp
add
adc
shl
sbb
add
add
cwtl
ljmp
add
jecxz
add
sbb
adc
sub
lods
add
test
xchg
and
push
add
fwait
out
mov
add
inc
jp
jne
daa
xor
test
test
dec
sub
push
or
aaa
or
adc
push
add
mov
test
push
add
add
cmp
add
sub
pop
test
mov
add
sbb
insl
cld
stos
lds
add
sbb
add
mov
add
cmp
add
pop
mov
add
cmpsb
add
lock
out
mov
add
pop
xchg
shll
add
pop
aad
add
fists
in
lods
icebp
and
mov
popf
das
out
dec
adc
xlat
insb
pop
int
xor
in
xchg
lret
adc
ljmp
out
sbb
sub
jle
aaa
pop
sub
je
daa
out
add
add
cmp
repz
testb
pop
xchg
dec
jno
add
scas
xor
fsts
mov
cmp
add
add
scas
negl
out
mov
std
and
add
inc
add
test
lea
movsl
jge
jae
cmc
test
mov
out
pop
xchg
add
or
add
shll
test
add
push
add
xor
jg
add
addb
add
or
jecxz
sub
insl
jb
jo
dec
push
add
pop
and
mov
inc
add
add
in
subl
mov
adc
jmp
sub
add
xchg
test
pop
cmpsb
add
or
popa
icebp
cmp
jp
add
test
test
ja
inc
and
jns
out
inc
add
inc
add
push
add
add
mov
cmpsl
scas
out
iret
flds
data16
cmc
xchg
add
jno
push
add
out
xchg
sub
xchg
add
pop
loop
inc
xchg
add
add
adc
test
icebp
mov
clc
sbb
add
add
pop
mov
mov
cmp
fnstcw
mov
aad
adc
arpl
and
ret
mov
adc
push
sub
mov
mov
push
add
add
mov
out
sub
add
mov
add
add
adc
jbe
outsb
jle
insl
push
mov
add
mov
pop
incl
xor
in
sbb
mov
pop
stos
out
dec
jmp
outsb
ljmp
sbb
add
mov
xor
ja
or
ret
cmp
pmulhw
add
out
and
mov
mov
mov
repnz
inc
mov
jno
add
adc
mov
test
loopne
cmp
sub
jae
mov
inc
leave
rcrl
int3
fwait
rolb
jne
adcl
ret
or
jnp
mov
mov
pop
jge
add
or
pop
sub
fisubl
sub
rolb
add
jnp
add
jle
and
cmc
push
add
pop
call
add
out
dec
and
enter
rcll
data16
add
add
loopne
pusha
add
add
or
out
jb
lea
jae
fld1
pop
daa
add
sub
js
aaa
cwtl
jmp
mov
std
or
mov
xchg
das
sbb
ror
add
add
add
addb
add
jnp
sysret
adc
mov
cltd
ds
xchg
fstps
mov
jns
xchg
mov
out
ret
or
out
daa
je
data16
enter
add
mov
xor
out
sbb
add
cwtl
fbld
mov
test
add
incl
xchg
add
lods
or
ficoml
data16
cmp
pop
or
add
sbb
jae
add
les
pop
cs
enter
add
addb
add
add
gs
add
std
push
inc
or
cmpsb
add
cmp
mov
pop
mov
add
mov
orl
push
sub
pushf
jns
add
push
mov
andl
js
add
movsl
lock
add
cmp
dec
push
lods
xchg
add
add
add
scas
into
mov
cmp
aad
pop
cmp
scas
and
mov
jb
iret
idiv
adc
mov
sub
push
dec
aad
cli
test
outsl
rolb
jge
xchg
ficoml
push
add
lods
or
dec
imul
ret
ret
pop
jns
mov
add
add
js
daa
pop
jne
sub
rolb
mov
inc
add
add
lcall
cmp
lea
xchg
jmp
aaa
and
mov
jle
push
add
mov
mov
cld
xor
mov
add
add
mov
adc
les
jno
add
lods
pop
test
and
mov
outsl
cmp
add
add
pop
shll
xchg
xchg
add
xchg
mov
jno
sub
loopne
jle
add
add
push
pop
fstl
adc
je
and
add
xor
rolb
test
dec
fidivrs
in
ja
ret
or
add
add
cmp
neg
pop
sbb
mov
pop
fcomps
stos
fwait
int3
dec
ja
pop
jge
scas
testb
movsl
cwtl
test
insb
popa
pop
jl
xor
xor
dec
stos
mov
dec
add
rolb
push
shll
and
mov
int3
mov
add
dec
sahf
lea
jmp
mov
repnz
out
xchg
add
enter
pop
mov
in
add
dec
xchg
pop
pop
sbb
das
mov
gs
rcll
mov
xchg
add
fsubs
dec
in
jnp
sub
jmp
sti
enter
adc
adc
insb
jb
outsb
loopne
jb
aaa
adc
pop
add
or
repnz
leave
cli
cmp
add
add
add
add
cli
lret
out
imul
mov
mov
xor
add
add
add
mov
lock
adc
add
mov
adc
or
std
loope
scas
icebp
add
mov
in
call
dec
mov
filds
mov
add
push
add
mov
xor
cld
idivl
add
out
add
sub
pop
daa
dec
xchg
fwait
jae
bound
mov
insl
mov
xor
dec
ss
les
rcll
add
add
push
add
mov
xchg
inc
add
add
cwtl
adc
inc
add
psrad
jge
insl
aam
pop
adc
and
sub
bound
mov
lea
add
pop
data16
add
out
push
dec
or
sahf
movb
lret
push
outsb
and
mov
cli
xchg
add
inc
or
mov
push
out
sbb
add
adc
add
add
icebp
cltd
das
fucomi
sub
inc
cli
xor
sub
stc
cmp
push
nop
add
xchg
add
loopne
pop
sbb
gs
cmp
add
add
pop
cmpsl
js
loop
cmp
popa
rolb
mov
add
add
mov
add
xchg
add
das
pusha
add
fldenv
add
popf
jo
gs
add
add
mov
add
cmp
add
add
in
cmp
add
call
add
loop
les
leave
insl
jo
or
pop
mov
dec
add
and
sub
add
add
cmp
addb
mov
adc
xor
cmp
loop
repz
add
add
xchg
add
fiadds
add
adc
mov
or
divl
int
call
mov
mov
add
mov
mov
add
mov
add
add
sub
add
std
jae
add
out
fsts
add
testb
sub
add
add
mov
or
mov
jl
add
pushf
mov
in
push
add
pushf
stos
daa
add
add
add
add
add
mov
mov
out
rolb
pop
xchg
cmpsl
aad
add
jmp
scas
pop
out
mov
add
pop
and
or
add
adc
mov
push
add
jns
cmp
iret
test
lret
mov
clc
pop
inc
in
push
push
int
hlt
add
add
push
adc
pop
or
mov
js
add
mov
aaa
std
cmpsl
rcll
clc
fwait
jbe
mov
imul
sub
rcl
xchg
into
or
notl
cmp
pop
cmpl
loopne
sbb
add
add
mov
dec
fabs
sbb
in
pop
cmp
jb
pop
jmp
mov
push
add
into
lcall
add
pop
std
cmovp
in
adc
add
xchg
add
ret
sub
data16
testb
fcoml
imul
punpckldq
mov
add
mov
sub
inc
add
add
mov
pop
bound
mov
ret
add
mov
scas
imul
aaa
inc
add
add
outsl
xchg
or
adc
out
test
xchg
dec
push
insb
xchg
mov
add
testb
add
xor
jae
mov
add
dec
out
mov
loopne
rolb
cmp
add
add
icebp
pop
push
jg
bound
mov
js
fwait
jl
inc
add
jecxz
jge
nop
add
jge
stos
sarl
add
add
xchg
mov
das
pushf
push
inc
add
jne
add
je
cwtl
dec
test
lret
jp
add
gs
lcall
lahf
xor
sub
imul
loopne
pop
rcrl
pushf
out
sbb
cli
mov
add
push
add
ja
ss
add
mov
inc
mov
adc
arpl
xchg
add
sub
add
mov
pusha
add
add
jnp
add
nop
add
dec
mov
stc
popa
mov
fadd
add
lea
add
inc
test
lahf
sub
fisubs
add
das
in
jnp
mov
mov
es
rolb
mov
pop
aam
inc
add
rolb
adc
and
mov
xchg
add
add
mov
test
add
in
inc
add
or
loopne
iret
sti
aad
inc
add
mov
add
dec
je
push
les
add
add
mov
pop
sub
jg
jno
scas
push
add
mov
add
pop
sahf
enter
es
ret
add
add
mov
add
mov
add
cmp
pushf
cli
test
xor
loope
pop
stc
rolb
addb
jo
std
std
fsubs
add
lahf
dec
pop
add
mov
cmc
mov
add
test
add
jae
add
and
mov
fisttps
xchg
repnz
and
add
adc
mov
pop
inc
add
jecxz
cmpsl
pop
jo
mov
ficoms
add
add
push
add
cmp
pop
fisttps
lret
insb
add
inc
add
and
out
aas
or
add
outsl
cmpsb
add
out
cs
cmc
loopne
pop
ret
adc
pop
pushf
out
cmp
mov
ja
add
xchg
add
xor
add
fldcw
addl
xchg
add
outsl
adc
add
add
jno
add
mov
add
addb
lcall
clc
add
cmp
jo
mov
call
pop
arpl
mov
add
mov
stos
adc
add
sub
inc
add
and
mov
mov
js
sub
add
adc
in
stc
int3
out
lea
sti
xor
mov
add
repz
pop
and
add
add
pinsrw
stc
sub
into
testb
jae
daa
adc
xchg
lret
mov
pusha
add
jge
add
insb
mov
adc
push
outsb
out
pop
pop
insb
sti
dec
inc
outsl
dec
fs
rolb
cwtl
ret
lret
push
lock
add
fiadds
mov
mov
inc
pop
sar
push
add
mov
add
jo
ret
js
inc
add
stc
mov
and
add
push
add
jae
test
add
scas
pushl
addr16
add
xchg
clc
pushf
lea
add
add
pop
insb
mov
je
add
sahf
dec
jns
fsubrp
mov
gs
add
add
add
mov
xlat
cmpsl
cmp
dec
inc
add
int
testb
mov
stc
mov
add
ljmp
xlat
outsb
mov
sbb
sbb
inc
mov
lcall
jmp
fcoms
ficoms
movsl
xchg
add
add
add
scas
bound
mov
add
mov
or
stc
inc
mov
xor
mov
pushl
pop
cmp
jmp
sub
mov
or
or
faddp
add
mov
loopne
cmp
add
je
imul
ret
out
mov
add
xchg
add
in
lret
fstpt
push
jne
in
dec
pushf
daa
loopne
fnstenv
mov
sti
adc
mov
adc
shll
leave
pop
and
cs
shrl
bound
mov
fs
js
sub
push
fidivrl
push
add
cmp
in
jge
or
add
add
mov
mov
addb
xor
xchg
in
es
or
mov
popf
testb
adc
xor
dec
push
out
imul
add
ss
add
in
sub
lahf
adc
mov
dec
sahf
fidivrs
addb
jo
fistpl
ret
inc
add
aad
mov
and
mov
cmc
jb
pop
cmp
stos
repnz
dec
aas
mov
aas
rcll
cmp
mov
inc
add
scas
add
mov
and
mov
shr
add
mov
int
pop
fisubrl
dec
xchg
add
add
add
inc
rorl
stc
mov
fwait
push
daa
xchg
or
add
int3
lcall
faddl
into
add
mov
clc
ds
mov
and
mov
xchg
pop
testb
nop
add
add
or
push
and
mov
sub
add
test
add
add
add
sahf
int3
mov
loopne
mov
add
add
xor
popf
dec
xchg
pop
js
lret
dec
mov
pop
or
and
mov
inc
movsb
add
lret
sub
aad
add
push
add
and
mov
mov
popf
imul
add
add
jp
cmp
mov
addb
adc
add
sti
mov
ljmp
dec
inc
hlt
add
push
add
inc
push
lcall
jne
and
mov
lahf
scas
aaa
xchg
ds
arpl
jo
xchg
mov
add
pop
mov
cmc
js
in
daa
popf
add
and
inc
add
jno
jp
add
out
lock
inc
add
dec
mov
pop
add
mov
nop
add
add
leave
jnp
add
add
and
add
add
xchg
leave
push
add
inc
add
add
push
and
out
add
jp
cmp
gs
add
cmpsb
add
xor
adc
insl
mov
fmull
xor
pop
sub
mov
and
loope
add
mov
xlat
enter
mov
cmp
xor
jbe
add
out
loopne
int
add
mov
add
or
loop
cmp
mov
stos
test
fdivrs
testb
add
repz
add
mov
mov
add
in
test
adc
add
pop
lahf
inc
jns
or
sbb
dec
in
adc
ss
rolb
jns
add
rcr
inc
inc
add
add
mov
sub
add
add
push
add
add
std
pop
sbb
add
jg
mov
add
mov
das
loope
push
jno
stos
popf
cmp
fstl
pop
xlat
add
mov
mul
add
jns
pop
sub
insb
and
add
mov
orl
mov
rolb
fcompl
xor
xlat
pop
and
add
mov
xchg
add
aaa
xor
lods
sub
inc
add
stos
pop
mov
pop
jo
inc
add
mov
xor
push
add
faddl
aaa
jno
add
loope
add
hlt
add
add
mov
push
push
xor
mov
add
mov
inc
add
sahf
xor
add
or
push
imul
adc
cmc
push
test
sub
mov
insl
sti
jbe
and
mov
add
add
mov
jbe
inc
add
fwait
xor
repz
rolb
enter
popa
call
add
mov
aam
sbb
jns
frstor
add
add
jl
or
add
and
add
fucom
cmc
ret
adc
cmp
add
xor
add
in
das
mov
or
ljmp
add
add
jmp
mov
fnstcw
fildll
lret
js
out
add
add
pop
mov
add
and
pop
and
fcompl
jo
popf
bound
mov
add
cld
sub
out
bound
mov
cli
out
icebp
mov
aad
add
mov
sbb
out
cli
test
ljmp
inc
and
add
pop
mov
xor
std
inc
add
addb
cmp
add
into
and
add
jl
in
and
mov
dec
and
mov
ja
add
sahf
xchg
dec
push
mov
gs
add
stos
iret
fidivrl
add
ret
dec
pop
jl
shll
fnsave
insl
movsb
add
push
add
test
add
push
add
xor
mov
add
fcmovne
data16
xor
mov
add
add
push
rolb
jnp,pn
xchg
das
cmp
sub
cmp
inc
mov
add
mov
mov
fcoml
mov
add
mov
or
outsl
mov
add
sub
loopne
js
addr16
jb
stos
leave
popf
aam
in
mov
cmc
lahf
pop
adc
add
testb
add
rolb
lds
mov
add
sub
shrl
jno
pushf
mov
push
xchg
in
scas
jnp
mov
les
cmp
and
xchg
xchg
add
repnz
cwtl
addb
sub
add
add
add
add
add
add
sbb
add
push
shll
xchg
stos
inc
add
add
int3
push
jns
push
add
add
imul
pop
xchg
xchg
sbb
or
add
push
mov
inc
add
add
cltd
clc
xchg
repz
addl
inc
clc
adc
scas
js
aaa
test
arpl
pusha
add
add
sub
pop
cmpsb
add
inc
stos
cltd
test
pop
jne
add
jge
mov
scas
add
add
les
sub
push
je
cwtl
xchg
mov
mov
pop
jmp
gs
jle
cli
and
mov
rolb
mov
push
add
xchg
mov
jns
or
mov
pushl
mov
jge
outsb
mov
sbb
add
add
sbb
mov
add
mov
jne
das
xchg
ret
scas
xchg
scas
scas
out
mov
push
add
add
bound
mov
daa
hlt
add
add
mov
pop
sbb
mov
lahf
aad
fidivs
add
add
add
shr
stc
xchg
add
in
mov
mov
movb
call
jns
mov
outsb
inc
call
aaa
push
je
jl
add
insl
cmp
add
jp
inc
rcl
ja
add
add
lcall
pop
jmp
out
or
mov
aad
add
pop
pop
or
clc
fmuls
dec
sub
pop
lcall
icebp
xlat
add
add
xchg
fucomi
fmulp
sub
jg
push
jb
push
add
pop
out
loope
out
sbb
xor
test
fstpl
std
lds
iret
loope
bswap
addb
mov
mov
jbe
push
mov
add
and
mov
mov
ret
fidivrl
xchg
and
push
xchg
and
mov
les
cmp
add
pushf
dec
xor
mov
popa
jp
add
mov
pop
cmp
add
add
mov
add
add
jb
mov
movb
mov
bound
mov
add
push
add
adc
xor
loop
or
out
sahf
mov
add
stos
inc
adc
dec
mov
sub
addb
aaa
gs
arpl
jae
mov
loop
into
es
add
add
push
cs
xchg
pusha
add
sbb
push
add
add
flds
add
add
sub
in
aas
or
ja
out
add
add
or
fidivrs
cmp
add
add
mov
addr16
rolb
add
daa
pusha
add
insb
dec
sbb
sarl
add
adc
add
fs
add
xor
iret
stos
gs
mov
push
add
test
pop
pop
xor
leave
testb
leave
xor
cmpsb
add
jno
add
jmp
dec
fisubrs
push
add
cltd
out
cmp
add
add
add
mov
pop
testb
add
sbb
ffree
add
mov
testb
add
add
scas
jb
sbb
or
lret
fxtract
add
scas
pop
aam
cs
in
in
sub
movb
add
jge
leave
and
mov
in
popf
adc
or
stos
js
mov
add
add
dec
ds
and
cmp
add
adc
add
stos
xchg
insb
pop
and
add
mov
cwtl
sub
add
xchg
mov
mov
add
mov
sbb
sub
sbb
add
gs
fsub
add
pop
mov
xor
jecxz
add
mov
add
add
xchg
xorl
mov
mov
inc
bound
mov
adc
sub
lea
mov
dec
or
rolb
les
add
movsl
or
dec
mov
push
add
add
mov
add
add
leave
movb
pop
fsts
add
mov
add
cmp
add
mov
cmp
xchg
cwtl
stc
push
add
cmpsl
pop
xor
scas
loope
jo
lret
add
ja
aad
bound
mov
pop
jbe
mov
xchg
dec
out
push
mov
scas
add
sbb
jae
add
jle
add
test
jb
jg
fisttpll
in
int
add
add
inc
ret
cmp
ror
lods
enter
repz
push
lock
adc
lds
loopne
xor
mov
lods
into
dec
cwtl
xchg
outsb
inc
add
lahf
cld
loop
scas
pop
test
pop
mov
testb
add
add
push
das
inc
add
and
mov
push
add
or
loope
fiaddl
sbb
mov
lahf
into
inc
xchg
or
add
sub
inc
add
xchg
sbb
add
jne
rolb
movsl
mov
hlt
add
add
add
jmp
ret
stc
push
add
add
sub
push
cmpsl
pusha
add
add
inc
pop
inc
or
jo
nop
add
jbe
add
add
add
icebp
push
dec
fucomi
jl
add
lahf
adc
cmp
stc
add
movb
rcl
lahf
arpl
enter
pop
outsl
jae
out
pushf
iret
or
dec
xor
cmp
loopne
and
mov
xlat
jo
call
mov
ror
in
push
imul
push
add
movsl
insb
sbb
or
push
testb
arpl
jp
mov
push
add
adc
int
add
sub
pop
or
mov
rolb
pminsw
pop
addr16
sti
dec
push
add
push
add
inc
add
jae
cmp
les
jp
mov
xchg
add
mov
addr16
cmp
add
mov
add
pop
push
xlat
lret
mov
int
push
mov
clc
or
addr16
add
mov
push
cs
add
pop
pop
cmp
ud0
cmpsb
add
add
mov
mov
add
jmp
add
rolb
adc
xchg
xchg
roll
aad
add
add
lret
add
lea
insl
xchg
add
jbe
fnstcw
movsl
mov
test
mov
add
xor
mov
shrl
mov
ret
and
add
sbbl
insl
xchg
inc
add
iret
pop
xchg
add
jge
add
xor
cmp
fdivr
ljmp
test
add
add
add
add
jecxz
add
mov
jle
add
mov
test
add
popf
aam
sub
and
sub
adc
xchg
add
inc
add
sbb
out
mov
daa
xchg
pop
adc
mov
add
add
faddl
jae
mov
add
popf
cmp
mov
xchg
add
loope
add
inc
add
cs
push
add
cmp
addr16
dec
xor
mov
add
testb
dec
push
add
push
add
add
mov
add
mov
adc
repz
mov
or
add
jae
add
add
push
add
add
in
cmp
add
inc
jmp
mov
rolb
mov
xor
and
and
jle
fildll
or
fdivl
push
add
or
js
cmpsb
add
popa
mov
jns
add
xchg
add
aaa
das
mov
push
notl
add
fsubp
add
add
test
sub
add
sub
aas
push
sarl
push
add
adc
std
ja
xor
mov
cmp
add
sub
add
sub
lds
jmp
mov
jo
sbb
and
pop
pop
ret
testb
lock
ljmp
add
es
add
ljmp
and
xchg
add
rorl
mov
mov
hlt
add
add
add
lret
fwait
sbb
jecxz
stc
sub
nop
add
pusha
add
add
cmp
sub
inc
addb
add
sbb
ja
fildll
add
imull
sub
pop
add
lock
add
add
add
aam
lea
add
scas
fisttpl
sbb
xor
add
addb
mov
cli
push
add
and
mov
mov
shll
add
xchg
cli
icebp
push
cmp
mov
add
cmp
cmc
or
mov
mov
fidivrs
jl
stos
out
xor
xor
add
add
add
enter
incb
and
lret
add
add
mov
add
gs
or
add
add
and
mov
cmpsb
add
out
inc
out
in
lahf
xchg
add
pop
stc
leave
mov
pusha
add
test
add
mov
xchg
add
ss
mov
aas
fcoml
push
pushf
leave
cmpsl
sbb
in
push
xchg
add
loop
mov
xchg
jl
imul
dec
pop
mov
mov
enter
add
mov
sbb
repnz
add
dec
xchg
ljmp
add
jle
push
movsl
push
dec
inc
add
insb
mov
add
add
icebp
mov
mov
repz
xor
add
pop
into
mov
add
fcoms
je
jne
add
mov
add
add
add
sub
adc
mov
mov
add
push
add
sub
push
add
sbb
push
add
add
cmpsb
add
sbb
loop
stc
mov
push
and
adc
sahf
push
add
outsl
in
and
pop
dec
xor
add
js
add
leave
xchg
lock
bound
mov
jl
push
add
lret
cmp
mov
push
xchg
add
add
aam
inc
add
jp
ret
fcoms
iret
pop
mov
daa
and
inc
mov
push
xor
leave
mov
movsb
add
add
add
aam
jmp
sub
inc
add
int
fs
add
cmp
inc
sub
mov
pop
insl
std
mov
add
add
outsl
xchg
add
hlt
add
dec
adc
add
xor
or
mov
add
mov
push
lds
add
add
add
addr16
cli
inc
call
mov
or
mov
jge
rcrl
lret
in
jne
add
push
add
add
xlat
dec
xlat
lret
mov
stos
add
mov
mov
add
rolb
xchg
loop
mov
jp
add
fwait
add
adc
xor
fstpt
xchg
add
pop
leave
adc
xchg
pop
insl
in
std
jge
add
jle
addb
sub
in
out
dec
dec
les
mov
ret
jmp
add
mov
loope
movsl
out
mov
xor
lahf
aad
add
mov
mov
stos
dec
mov
mov
add
mov
add
test
xor
hlt
add
add
cmc
or
dec
sbb
add
add
mov
mov
cmc
enter
push
add
add
add
add
add
outsl
test
pop
xchg
add
bound
mov
adc
lahf
call
add
add
adc
in
add
loop
and
mov
scas
inc
push
add
push
push
fldt
xor
cmp
push
repz
cltd
add
icebp
cld
pusha
add
push
test
jae
mov
add
or
mov
adc
add
pop
dec
inc
add
add
int
jae
add
mov
or
addb
sub
int3
call
adc
dec
add
mov
mov
xchg
adcl
push
mov
cmp
cmp
mov
in
inc
pop
rolb
push
add
add
sbb
add
leave
push
add
push
add
in
push
add
fistpll
repz
mov
insb
pop
addb
cs
xchg
add
mov
ficoms
fistl
dec
stos
sbb
mov
out
std
imul
mov
in
pop
repz
add
or
fnstcw
sub
movsl
mov
sub
add
xchg
add
add
clc
lods
inc
sub
add
or
cmp
mov
ror
into
pushf
sahf
cmp
add
icebp
cmp
or
add
or
in
mov
mov
cmp
add
add
lcall
add
add
mov
shll
mov
add
data16
add
mov
js
push
add
pop
sbb
add
pop
push
add
add
xchg
mov
add
mov
pop
xchg
add
inc
add
cmp
jbe
fwait
cmpl
add
add
add
xchg
add
add
add
int
dec
xlat
sub
int3
push
add
pusha
add
insb
xlat
adc
rcl
add
aaa
adc
movsb
add
add
and
mov
inc
add
add
bound
mov
mov
add
or
sub
lods
mov
add
add
test
dec
in
lret
gs
and
add
mov
mov
xchg
aam
fldt
add
mov
shrl
repz
add
inc
add
jnp
add
add
push
test
test
inc
add
add
imul
and
add
push
sub
push
testb
mov
adc
xchg
shrl
add
xchg
pop
jecxz
add
add
sbb
inc
add
pusha
add
pop
nop
add
pop
xchg
add
inc
add
jae
push
das
ljmp
adc
cld
sbb
cltd
ljmp
sbb
inc
add
jbe
stc
repnz
fmul
std
jmp
popl
loope
out
mov
data16
daa
dec
inc
add
arpl
rolb
dec
pop
call
and
adc
mov
or
ds
popl
xchg
pop
into
add
jl
mov
push
es
add
add
movb
adc
in
dec
pop
les
cmpsl
add
pop
lods
nop
add
add
add
out
xor
icebp
ljmp
popf
jp
xor
or
and
or
sahf
and
add
repnz
imul
cmp
push
push
push
jecxz
pop
sbb
jae
xor
mov
sub
repz
sbb
add
mov
repnz
pop
mov
and
mov
dec
popf
adc
test
jns
cmpsb
add
rolb
cmp
add
add
in
mov
add
jno
add
xor
add
xchg
add
in
add
inc
mov
pushl
testb
jge
xlat
mov
push
xor
rolb
test
popf
and
cwtl
mov
rcll
add
add
mov
out
js
lods
or
outsb
gs
shrl
add
push
data16
cld
mov
or
dec
scas
xor
cmp
pushf
mov
out
pop
repz
cmp
das
js
call
lret
cmp
incl
add
mov
repz
add
aas
pop
and
inc
add
jno
add
arpl
cmp
mov
mov
add
mov
add
lret
mov
xrelease
add
mov
mov
add
inc
add
add
or
jo
mov
pop
sub
call
gs
jle
addb
xchg
jecxz
pop
mov
add
mov
fiadds
add
mov
add
dec
mov
data16
and
add
push
add
adc
dec
ret
and
jmp
add
sbb
jbe
pop
cmp
xchg
add
faddl
mov
add
add
stc
xchg
fdivrs
test
add
add
daa
jecxz
pop
xor
inc
add
mov
mov
pusha
add
add
mov
gs
add
add
cmp
add
jns
addb
inc
jb
jnp
test
lret
daa
inc
stc
xchg
in
pop
jne
outsb
in
xorl
dec
out
adcl
and
mov
lods
jmp
adc
int3
stc
mov
mov
add
aaa
add
inc
add
add
add
mov
add
add
movsb
add
cmp
or
jp
add
sub
add
sub
repz
add
fildll
int
insb
in
addb
add
add
push
add
add
mov
add
test
push
fwait
push
int3
mov
pop
sahf
add
jmp
inc
leave
rolb
add
add
inc
adc
out
add
pop
orl
add
jo
pop
sub
fs
jae
mov
add
movb
add
stc
push
add
test
popf
mov
inc
add
cmp
mov
mov
mov
xor
sub
or
add
out
adc
aaa
addb
inc
pop
aaa
mov
and
add
cli
les
fsubrs
mov
inc
repnz
add
jge
cmpsl
cmp
rolb
and
mov
add
cmc
dec
pop
dec
ljmp
inc
scas
xchg
sahf
and
mov
add
add
xor
addb
add
push
test
ja
inc
add
rolb
or
push
add
add
add
pop
cmp
scas
push
mov
inc
xor
xchg
add
add
push
add
test
jne
push
lock
mov
add
add
loop
mov
and
mov
add
pushl
add
bound
mov
aam
stos
lock
nop
add
or
mov
dec
adc
shll
add
add
sarl
add
pop
add
add
mov
or
outsl
js
add
add
add
add
repz
adc
xchg
push
add
dec
inc
add
jle
ds
xchg
pop
popa
bound
mov
mov
add
add
mov
add
or
in
testb
repz
adc
add
pop
jge
arpl
add
mov
and
mov
add
dec
fwait
aaa
jns
aas
ffreep
add
les
lods
lret
mov
jne
dec
loopne
inc
add
cmp
cs
lahf
xchg
push
add
or
pop
pop
ja
stos
inc
add
jns
std
xor
mov
cli
push
add
out
dec
add
aam
and
ss
bound
mov
jae
cmp
add
jp
and
dec
and
mov
movb
idivl
or
repnz
add
sar
ds
mov
pop
test
mov
imull
add
add
or
js
and
mov
nop
add
test
xchg
fcoml
ljmp
pop
aas
loopne
rolb
mov
mov
add
or
ret
rolb
sbb
xchg
add
add
add
int
xchg
mov
je
adc
imul
outsb
pop
rolb
mov
or
xor
add
push
add
add
xor
mov
add
test
inc
add
dec
ret
mov
add
add
xorl
add
movsb
add
cs
inc
add
les
jb
pop
outsl
adc
or
sbb
ljmp
add
hlt
add
mov
add
lods
or
add
add
icebp
fsubs
add
cmpsl
mov
jo
dec
and
mov
and
int3
dec
sbb
mov
xor
inc
mov
jg
aad
add
sti
out
je
and
jmp
ret
or
dec
loopne
jl
lret
cmpl
add
popf
jae
add
into
add
mov
add
xor
test
add
repnz
add
mov
add
ljmp
add
arpl
ret
push
add
repnz
fxch
jns
shl
add
push
add
add
sbb
stc
inc
mov
test
ret
mov
setno
out
das
dec
int3
pop
int
repz
addr16
push
add
ret
addb
movb
sub
add
add
sbb
sti
out
xor
add
add
inc
sbb
xchg
inc
add
iret
sbb
lock
xor
mov
xor
inc
add
add
lea
enter
add
add
mov
mov
mov
and
mov
xor
hlt
add
sarl
sbb
push
fisubrl
pusha
add
sbb
gs
fsubrp
pushf
sysret
data16
add
add
jo
mov
jecxz
add
lahf
xchg
cmp
add
nop
add
cmp
add
add
arpl
add
xor
fxch
push
xchg
add
xchg
xchg
and
mov
ds
mov
aam
add
iret
xor
or
addb
incl
add
mov
add
pusha
add
scas
sbb
rolb
xor
out
mov
xchg
add
in
stc
cmp
dec
add
add
xchg
add
sbb
ja
out
inc
add
add
push
imul
pop
in
add
add
mov
xchg
adc
int
movb
add
leave
addb
dec
pop
push
add
add
inc
add
add
xor
add
das
push
add
aas
pop
add
mov
mov
add
adc
add
mov
scas
jbe
xor
js
outsb
lods
hlt
add
jbe
sub
add
cmpsb
add
add
jo
dec
jg
or
add
add
movsb
add
mov
pop
xchg
mov
loope
add
add
sahf
xlat
cs
xor
cmp
inc
mov
jns
repz
add
and
mov
ret
test
ret
nop
add
shl
add
or
sub
inc
outsb
popf
dec
lea
cmp
add
push
or
jp
and
mov
add
add
add
inc
mov
and
mov
xor
push
add
mov
push
xchg
movsl
sub
inc
add
mov
das
mov
movsl
movsb
add
std
cmp
sub
jae
push
xlat
xor
sub
sbb
pop
ja
xchg
add
lods
cmp
mov
cmp
lcall
mov
mov
lods
cwtl
sub
mov
mov
push
mov
pushf
fisttpl
ds
inc
add
add
cmp
adc
add
out
or
addb
xor
add
sarl
sbb
jns
scas
mov
push
jbe
stos
imul
dec
mov
arpl
in
hlt
add
and
mov
add
mov
mov
mov
add
rorl
add
movsb
add
test
add
add
sbb
mov
push
mov
mov
jg
add
lret
cs
add
add
scas
ja
or
add
cwtl
mov
arpl
ret
push
xor
addr16
in
sbbl
addb
add
testb
add
jb
ret
adc
sbb
add
mov
clc
or
add
add
and
jbe
cmp
cmpl
pop
addb
sub
add
add
addr16
add
add
rolb
mov
xchg
cmp
addb
mov
inc
add
push
sti
xchg
add
in
mov
ds
daa
or
add
test
pop
mov
call
mov
add
mov
rolb
cmp
add
inc
ret
and
out
xchg
dec
aas
mov
lock
aad
xchg
add
outsl
pop
xchg
add
aad
stos
pop
push
add
mov
mov
jbe
in
arpl
pushf
mov
adc
fmuls
outsb
inc
xchg
add
inc
into
xlat
jge
out
lea
xsave
out
add
add
lods
add
mov
and
mov
adc
loop
inc
add
dec
cmp
add
push
add
cmpsl
mov
cmc
cmc
stos
add
push
icebp
cmpsl
in
push
push
add
adc
pop
out
popf
cltd
lsl
mov
push
test
cmp
and
inc
cmp
les
jecxz
out
xor
scas
sub
jb
data16
mov
stos
addb
xor
add
add
mov
pop
fmuls
pop
inc
add
scas
mov
dec
pop
les
xchg
idivl
ficoms
xlat
inc
in
adc
shr
dec
loop,pn
out
ret
daa
inc
add
jge
testb
or
push
scas
ret
add
xor
pop
movl
mov
pop
adcl
add
mov
data16
add
add
dec
or
sbb
adc
mov
push
add
out
fistps
jbe,pn
stos
adc
mov
lods
mov
xor
loop
add
cmp
add
outsl
mov
lods
mov
fisttps
add
dec
pop
aam
daa
and
enter
add
and
mov
cld
fwait
add
mov
sbb
addb
movsb
add
push
add
mov
scas
pop
xchg
jmp
add
mov
xor
xor
mov
lds
add
jae
addb
inc
add
insb
pop
push
sub
xor
nop
add
outsb
mov
sub
add
add
add
mov
mov
add
aam
add
mov
in
xchg
or
xchg
add
adc
cmp
push
xchg
add
and
mov
mov
pop
sbb
cmp
fstpt
adc
add
mov
dec
cltd
sbb
pop
push
xor
jbe
sub
xor
add
loop
mov
push
add
or
xchg
adc
adc
icebp
ret
add
jle
jmp
add
loope
pop
rcl
lds
test
jae
sub
pop
aaa
push
sbb
adc
or
dec
push
add
add
pop
dec
inc
xchg
add
shll
add
lret
mov
add
jmp
add
add
add
jnp
add
add
add
add
mov
cmpsb
add
ds
mov
aaa
or
mov
add
subps
mov
add
mov
rolb
xchg
add
push
add
fs
dec
xchg
add
add
fstps
and
mov
nop
add
stos
push
add
add
dec
ret
in
xchg
int
pop
inc
xor
mov
test
add
mov
mov
add
mov
out
and
hlt
add
or
cmp
add
add
je
cmp
dec
cmp
mov
or
add
add
add
inc
fildl
add
addl
jg
add
mov
sti
in
or
leave
sub
adc
inc
lds
add
arpl
add
lret
pop
adc
add
dec
or
pop
movb
dec
jl
lahf
nop
add
lcall
stos
cmp
inc
jns
add
inc
fcoml
add
add
scas
jmp
add
loope
and
mov
popf
and
mov
add
add
add
add
dec
out
add
mov
loop
or
add
add
arpl
adc
and
mov
add
in
sub
shll
xor
push
add
add
add
mov
add
and
mov
daa
mov
mov
ja
xor
jns
mov
adc
dec
or
adc
mov
and
mov
es
xlat
insl
and
add
mov
mov
mov
inc
add
pop
xchg
mov
add
mov
scas
jo
decl
into
test
ja
lea
fiaddl
push
jg
fimuls
js
stos
pop
dec
adc
mov
add
repz
add
lock
ds
xchg
hlt
add
sti
fsts
fidivs
xor
add
ret
pop
ret
inc
mov
add
pop
sbb
loopne
add
mov
cmp
or
and
mov
rolb
xor
sti
fistl
test
dec
and
mov
or
movsb
add
add
movsb
add
sbb
or
cmp
add
add
add
flds
add
xor
sahf
daa
fiaddl
add
jg
cmp
add
ja
mov
scas
fadds
fildll
hlt
add
add
xchg
add
jnp
mov
add
add
pop
cltd
popf
push
js
xor
je
test
fcoml
xchg
jb
lea
add
mov
mov
pop
ficomps
add
add
jb
jmp
push
add
jge
xchg
add
cmp
xor
lods
out
pop
and
mov
add
add
lods
shll
add
jo
fimuls
imull
fistl
lods
fimull
mov
popf
or
ret
ljmp
rolb
jl
add
add
xchg
add
add
fcoms
push
add
mov
add
scas
adc
fidivrl
ds
add
mov
push
push
push
add
add
lret
fwait
mov
cmpsb
add
or
mov
mov
scas
scas
adc
testb
add
and
mov
imul
add
dec
scas
dec
lahf
and
jmp
dec
sbb
shll
and
mov
out
sbb
roll
add
or
add
movsb
add
testb
cli
and
imul
mov
add
cmp
lods
call
and
pop
inc
add
push
movb
add
lret
loop
je
int
rolb
cmpsl
nop
add
and
mov
pusha
add
xchg
add
add
add
dec
cltd
xchg
push
add
jb
loop
jle
std
dec
out
ja
or
lods
dec
imul
sub
mov
add
clc
jl,pn
add
iret
mov
cmpsl
mov
add
push
add
add
jecxz
add
lret
rolb
xchg
add
enter
add
je
xlat
dec
push
arpl
or
mov
add
mov
arpl
adc
mov
popa
aas
outsl
cmpsb
add
loop
test
jl
lahf
push
sbb
and
fxch
daa
fwait
xor
mov
xchg
add
inc
xor
push
add
push
cs
add
push
add
mov
add
inc
add
add
xchg
das
fstps
add
add
shr
and
pop
dec
xchg
pusha
add
add
add
dec
jmp
xchg
addb
cmpsb
add
test
push
add
add
lret
push
add
add
push
add
mov
test
add
add
add
pop
pop
movl
push
mov
mov
sbb
add
fidivrs
add
pop
mov
hlt
add
mov
pusha
add
dec
add
push
outsl
dec
jmp
insb
xor
inc
add
or
xor
cmpsb
add
mov
fcmove
js
popa
lods
pushl
in
test
or
dec
leave
lea
out
lds
add
sahf
mov
add
add
insl
cmp
push
add
enter
push
jo
lds
lcall
in
xchg
add
jae
add
add
mov
jmp
leave
xchg
lret
filds
cmp
xchg
shl
add
cwtl
add
jnp
push
daa
jl
add
in
mov
fwait
sbb
cmp
sbb
jge
movaps
out
jne
xor
pop
popa
push
add
loopne
cmp
pop
std
mov
pop
shl
add
add
in
lcall
push
xchg
add
add
test
sub
mov
into
call
fcom
add
outsb
and
mov
inc
add
stc
lret
jmp
add
mov
out
add
or
and
add
popf
jbe
adc
movb
or
mov
add
mov
push
add
dec
sub
or
lret
int3
in
pop
shrl
add
aad
add
or
scas
icebp
fmul
add
mov
out
pushf
mov
mov
mov
and
or
add
jmp
adc
pushf
push
inc
add
in
sbb
xor
sub
cmc
out
mov
dec
arpl
jp
mov
xlat
aam
adc
jle
inc
add
ja
bound
mov
add
mov
sub
add
jbe
arpl
add
ja
add
in
dec
jg
add
sbb
iret
inc
cwtl
mov
jecxz
add
mov
fstps
add
adc
cmp
adc
icebp
scas
rcrl
add
mov
add
scas
mov
add
xor
mov
xchg
add
add
inc
add
or
addb
mov
aaa
xor
dec
jl
add
mov
xor
or
imul
dec
rolb
adc
xchg
gs
add
adc
mov
add
dec
jge
int3
stos
xchg
add
lret
les
adc
imul
add
fmull
sahf
leave
dec
inc
add
xor
sbb
sahf
mov
test
ljmp
pop
lods
imul
push
incl
xchg
mov
aaa
nop
add
out
add
add
mov
xchg
add
add
les
sbb
xchg
add
sub
pop
in
pop
inc
pop
jnp
cmp
add
mov
fwait
int
and
mov
outsl
dec
add
ljmp
adc
mov
rolb
cld
mov
daa
xlat
jb
add
mov
add
std
hlt
add
cmp
jo
rcrl
sbb
movsb
add
jl
add
mov
add
iret
clc
movb
aad
add
mov
add
pop
popa
daa
push
add
pop
sbb
sub
inc
add
jl
fs
add
movsb
add
xchg
xchg
push
add
mov
scas
daa
mov
sbb
add
mov
addb
push
outsl
xchg
loope
or
or
repz
rolb
divl
insb
insl
addb
or
add
fisubrs
jae
add
mov
mov
testb
add
push
push
inc
fistl
xor
sub
arpl
add
call
add
add
add
add
mov
jae
out
addl
xchg
push
mov
xor
jae
shll
cmpsl
dec
and
jle
xlat
adc
or
inc
push
push
add
lret
mov
jmp
add
or
mov
rolb
in
sub
add
cmp
shll
rolb
xor
les
testb
xchg
add
cmpsl
or
and
mov
add
mov
add
add
inc
add
push
add
add
add
sub
mov
adc
pop
outsb
fdivs
aaa
repz
mov
add
mov
imul
popf
pop
std
ljmp
add
in
cmpsl
and
cmp
add
add
cs
hlt
add
loop
stos
cmp
add
sahf
test
cmc
lea
out
out
adc
adc
sbb
push
add
mov
jp
jl
add
push
daa
stc
in
mov
ret
shrl
add
xor
sub
add
mov
push
add
sub
add
or
jnp
add
add
gs
or
mov
mov
popl
nop
add
mov
lahf
pop
sub
or
inc
add
aam
or
xor
je
pop
inc
add
inc
sysenter
add
add
jbe
xor
sahf
ret
addr16
sbb
add
loop
lret
sub
push
push
sbb
sbb
push
pop
sub
and
movsb
add
jp
leave
gs
or
dec
cltd
sbb
add
mov
add
cmp
add
cmp
add
sbb
hlt
add
mov
mov
aaa
sub
daa
aaa
imul
and
add
mov
add
xchg
mov
cmp
out
mov
aas
push
repnz
hlt
add
push
add
add
add
