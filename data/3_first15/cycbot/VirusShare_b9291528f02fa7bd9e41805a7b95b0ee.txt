add
mov
mov
mov
ret
addb
addb
addb
addb
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jp
jp
jp
jp
jp
jp
mov
test
test
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
repnz
repnz
repnz
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcomp
fcomp
fcomp
fcomp
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
fs
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
cli
cli
cli
cli
div
imul
imul
imul
imul
nopl
push
push
push
mov
mov
mov
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmp
cmp
cmp
cmp
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jl
jl
dec
dec
dec
add
add
add
add
add
add
add
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
sarl
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
push
push
push
push
push
and
nop
or
or
or
or
or
or
or
or
or
ss
ss
xchg
xchg
loope
loope
loope
loope
loope
loope
loope
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
hlt
hlt
es
es
es
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
mov
mov
or
or
or
or
or
ret
ret
ret
ret
ret
ret
ret
ret
ret
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
in
in
in
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
and
and
vpsubw
stc
stc
stc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
into
into
into
into
mov
mov
mov
mov
mov
mov
mov
mov
mov
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
xor
xor
xor
imul
imul
imul
imul
imul
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fsts
cmp
cmp
loopne
loopne
loopne
loopne
loopne
loopne
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
xor
xor
xor
xor
adcb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
fmull
lea
lea
and
in
in
in
in
in
in
loop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
in
in
in
in
in
rol
rol
rol
shll
mov
nop
nop
nop
cmp
cmp
cmp
cmp
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
adc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
rcl
rcl
rcll
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
mov
cltd
cltd
cltd
cltd
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
vpsraw
loope
loope
loope
loope
loope
loope
loope
jle
mov
mov
mov
mov
mov
mov
mov
ja
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
data16
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loop
loop
loop
loop
loop
loop
addr16
jecxz
jecxz
jecxz
jecxz
nop
nop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
mov
es
es
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
loopne
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
js
js
js
js
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
adc
adc
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
div
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
push
push
push
push
ljmp
addb
addb
addb
mov
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
arpl
arpl
arpl
arpl
arpl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
nop
nop
nop
jle
push
push
push
push
push
push
push
push
push
push
push
push
cmpsb
cmpsb
addl
addl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
jbe
jbe
jbe
jbe
jbe
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ss
cli
cli
cli
cli
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
mov
imul
imul
imul
imul
imul
aam
aam
aam
mov
push
sbb
mov
mov
mov
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
std
std
std
std
std
std
jo
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
xor
xor
xor
xor
test
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
ss
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
std
sbb
sbb
sbb
dec
dec
dec
dec
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
nop
nop
nop
nop
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
lret
lret
lret
lret
lret
push
fs
das
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz
pfcmpge
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcrb
sahf
sahf
sahf
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
rcl
rcl
rcl
rcl
jnp
jnp
jnp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
data16
cmp
cmp
cmp
jg
jg
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addb
addb
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
jle
jle
jle
jle
jle
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addb
addb
xorb
jno
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repnz
adc
adc
adc
adc
adc
cmp
nop
nop
nop
nop
nop
nop
nop
aam
iret
iret
iret
iret
iret
iret
iret
iret
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
imul
js
js
addl
addl
addl
addl
addl
addl
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
sbb
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fists
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loope
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
sarb
cmp
in
in
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
or
or
or
or
or
or
or
mov
mov
mov
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
and
inc
inc
jl
jl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lock
lock
lock
lock
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rcrb
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
outsb
outsb
nop
nop
nop
nop
addr16
addr16
addr16
addr16
dec
dec
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
arpl
arpl
arpl
arpl
arpl
nop
nop
nop
nop
nop
nop
gs
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
out
out
out
out
out
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
imul
sub
sub
sub
sub
sub
sub
sub
sub
adc
adc
adc
adc
adc
adc
adc
nop
arpl
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
div
div
div
div
div
div
div
div
div
div
divb
xor
xor
xor
xor
xor
xor
xor
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
add
add
add
add
in
in
in
in
in
in
in
in
in
in
in
in
in
push
push
push
push
data16
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
lahf
lahf
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
add
add
add
add
add
add
add
add
sbb
sbb
sbb
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
lret
lret
lret
lret
xchg
xchg
xchg
xchg
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
div
div
div
div
div
int
int
int
int
int
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
in
mov
mov
mov
mov
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lcall
lcall
test
test
test
lret
lret
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
in
in
in
in
in
in
in
in
in
in
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jnp
jnp
nop
nop
nop
nop
nop
nop
nop
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
loop
loop
loop
loop
loop
and
and
and
and
insb
insb
insb
insb
insb
insb
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
out
out
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
insl
insl
insl
insl
insl
insl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
ja
ja
ja
out
out
es
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
nop
nop
rol
rol
nop
nop
nop
nop
nop
into
into
into
mov
mov
mov
mov
mov
nop
nop
nop
nop
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
add
add
add
add
add
add
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
push
push
push
push
push
push
push
push
push
push
push
push
push
rol
rol
rcll
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sti
sti
sti
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
or
or
or
mov
mov
mov
nop
nop
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
les
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
rcl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
faddl
adc
or
lods
cmpl
add
outsb
add
repz
loopne
rcll
add
add
cwtl
test
inc
outsl
dec
mov
or
add
bound
lret
pop
add
add
add
add
xchg
ret
aam
hlt
cltd
out
mov
add
adc
loop
xor
add
dec
add
mov
pop
add
inc
add
cmc
stos
sarl
jge
add
add
and
mov
add
mov
dec
or
mov
xor
jb
leave
loopne
add
data16
add
out
fstpl
jno
jl
lret
adc
cmpsb
lcall
add
iret
test
add
mov
add
or
sub
aad
mov
xchg
leave
push
add
clc
fbld
ret
hlt
push
call
inc
add
cmp
add
mov
cmp
test
rcrl
push
add
pusha
add
dec
mov
rcll
jno
aas
xchg
push
ret
mov
adc
push
add
hlt
add
nop
mov
add
add
mov
add
aaa
add
lods
sbb
fistps
bound
mov
mov
shl
xchg
push
add
and
loope
inc
add
aas
xchg
adc
xchg
jno
add
pop
jecxz
add
sti
dec
add
add
push
inc
and
gs
gs
xlat
fnstcw
cmp
cmc
mov
lock
adc
jmp
cmp
out
push
add
into
jns
addr16
aaa
mov
cwtl
cmpb
mov
add
lcall
hlt
lcall
lret
cmpb
pop
inc
add
test
add
push
mov
xchg
sar
jg
xchg
pop
add
dec
add
enter
frstor
jl
icebp
adc
inc
add
jb
push
add
data16
int
loope
add
mov
push
out
mov
add
lcall
mov
shlb
add
dec
add
mov
in
or
or
mov
add
jg
movsb
add
xchg
add
push
add
je
dec
add
sti
sub
lahf
jmp
stos
cmpsl
in
jp
mov
push
frstor
repz
sbb
cmpsl
xor
jb
and
iret
outsb
add
xor
sub
add
add
mov
arpl
fisttps
insb
add
xor
xchg
mov
cmp
scas
into
sbb
mov
add
add
stos
test
testl
and
mov
add
add
sbb
sub
dec
add
mov
add
add
mov
xchg
pop
pop
scas
xchg
or
jo
fdivr
jmp
aaa
jne
mov
mov
add
cmc
and
fcmovne
lods
in
sub
jp
mov
mov
add
jne
out
pop
add
xchg
cltd
mov
cmp
add
add
cltd
sysexit
pop
orl
pushf
sti
dec
add
add
xor
sub
xor
and
adc
jnp
aam
sub
mov
xor
test
add
add
push
add
add
mov
mov
add
in
mov
add
mov
adc
jmp
repnz
inc
inc
add
mull
testb
add
iret
sarl
add
cmp
pop
sarl
mov
add
or
in
outsb
add
add
add
adc
adc
shrb
arpl
or
xchg
shll
push
add
jnp
out
cmpsb
lods
mov
add
and
mov
adc
fcmovbe
jle
out
in
xchg
cmp
lahf
add
divl
add
cwtl
lret
inc
add
add
inc
out
sahf
nop
sbb
outsl
cmpsl
ret
popa
repz
push
push
inc
add
ficoml
or
jp
cmp
add
push
add
push
add
and
aam
jo
scas
push
lret
mov
add
add
ffree
mov
push
pop
call
mov
insb
add
out
in
in
arpl
xchg
repz
ficoml
cli
popf
jns
outsl
and
dec
add
ficoml
add
sub
pop
xor
lods
cmpsl
mov
add
jp
sub
cmp
lahf
sbbl
sub
dec
add
add
sti
inc
add
js
in
roll
dec
rcll
push
xchg
add
add
imul
mov
cmp
jmp
pop
aad
dec
add
add
mov
movsb
das
xor
sub
push
add
sub
add
cmp
add
lds
mov
add
jne
cwtl
scas
rcrb
add
add
fisubl
add
fnstsw
mov
and
sarb
repz
out
sub
add
add
test
xor
mov
setae
xchg
pop
xor
ja
add
dec
jne
rorl
cmp
and
xlat
mov
pop
lret
iret
jnp
adc
hlt
out
add
mov
mov
and
movsb
into
ret
mov
fwait
lods
jne
inc
add
add
fidivl
lahf
jno
mov
push
xor
les
xchg
push
sbb
addr16
sub
add
leave
sub
daa
jle
test
imul
add
xor
mulb
sbb
loopne
add
movsb
scas
xor
aas
or
clc
inc
add
loopne
fwait
pop
mov
add
add
add
mov
add
add
loop
jp
add
jns
cmpsl
add
adc
jbe
fcmove
data16
add
adc
jb
out
rcl
pusha
add
xchg
les
add
leave
jb
and
push
add
push
add
cli
mov
cwtl
mov
testl
mov
jg
jne
repz
shrl
jae
add
add
add
push
sahf
dec
xchg
dec
add
or
inc
add
push
test
mov
dec
add
push
add
cmp
push
add
sub
not
cmp
xor
mov
stos
aam
mov
xor
adc
out
and
cli
xlat
mov
add
jo
fldenv
adc
pop
jp
out
jne
stos
push
add
stos
xchg
sbbb
pop
cltd
xor
cwtl
inc
add
push
int3
lret
push
cmp
add
add
popa
mov
jecxz
loop
xor
movsb
jae
add
cmc
fidivrl
add
test
and
sbb
and
sti
xchg
mov
pusha
add
icebp
xchg
andl
cmc
and
fwait
call
add
cmp
push
mov
cmp
pop
jno
xchg
lds
pop
add
xchg
test
add
xchg
and
or
mov
inc
add
insl
mov
and
add
pop
jne
dec
xchg
cmpsl
or
in
mov
xchg
sub
push
add
add
loope
aam
add
das
iret
in
mov
add
and
adcb
xor
adc
sahf
mov
add
add
or
std
movl
mov
test
add
stos
jecxz
inc
lea
loopne
cmpsb
xchg
and
push
push
add
pop
add
les
add
mov
add
fnsave
scas
js
push
adc
mov
add
scas
push
add
mov
add
add
add
les
dec
movsl
sbb
rcrb
push
xor
inc
loopne
dec
add
sbb
push
ds
inc
dec
add
xlat
sbb
movsl
mov
xchg
and
rcr
test
add
scas
enter
adc
mov
clc
sbb
mov
ret
insl
cli
lock
cld
mov
add
push
add
stos
jmp
popa
roll
add
mov
push
add
add
rcrl
jl
mov
inc
je
inc
add
jno
stos
out
lds
sub
mov
addb
jb
xor
add
add
into
push
add
insl
xchg
push
cmp
jg
add
sub
mov
mov
adc
sarl
adc
cmc
pmullw
add
add
stos
push
mov
sar
jg
xor
sarl
add
add
add
mov
or
jo
mov
loope
mov
or
cmpsb
dec
add
xor
add
add
mov
and
push
or
je
dec
rorl
dec
xor
out
cmp
in
les
add
cli
jge
repnz
sbb
add
add
push
add
sahf
in
mov
add
cwtl
cmp
cli
mov
sbb
adc
xchg
test
sbb
push
add
addr16
add
push
pop
adcb
add
mov
add
daa
xor
add
add
icebp
add
loop
dec
add
add
das
subb
inc
add
add
mov
fnstenv
add
in
dec
add
mov
stc
mov
imul
test
and
shrl
add
mov
add
xchg
add
aam
leave
enter
cmp
xchg
outsl
and
cli
pusha
add
sbb
pushf
cmp
inc
add
ret
int3
gs
and
mov
add
ljmp
sub
fidivrl
add
loop
add
dec
fdecstp
out
mov
mov
add
mov
jp
rcll
pusha
add
icebp
data16
push
add
dec
jae
add
int3
sub
cmp
add
loop
add
xchg
sbb
cmp
cmp
mov
add
adc
sbb
and
js
jns
inc
add
inc
add
add
push
add
mov
or
call
mov
jg
mov
not
lcall
add
pop
add
stos
rol
and
fnclex
push
lret
sbb
add
add
inc
add
add
stc
cmp
xchg
jo
dec
insl
fnstenv
aad
cmp
loopne
test
jecxz
pop
add
xchg
leave
icebp
push
jae
add
popf
mov
pop
add
test
inc
daa
jmp
and
inc
add
mov
add
js
pop
nop
sub
xchg
sub
cltd
lods
out
push
add
add
cmp
pop
mov
dec
add
nop
inc
jne
pop
add
mov
add
add
mov
inc
add
add
xchg
clc
mov
repnz
cmp
cwtl
pop
add
mov
test
inc
add
sbb
xor
add
add
and
sub
xchg
adc
add
das
nop
mov
sbb
jmp
add
fwait
dec
add
add
xchg
xor
cmp
int3
xor
mov
add
push
add
bound
lea
data16
add
add
aam
insb
add
sub
loope
add
test
cmc
jmp
inc
add
add
out
xchg
mov
jp
add
xorl
lock
sbb
fbld
in
lock
add
sbb
mov
add
dec
divb
loopne
xor
gs
rcrl
add
out
dec
xchg
fisttps
cltd
mov
std
adc
outsb
add
stos
jae
cmpsb
add
ja
dec
jo
jp
into
mov
add
test
add
testl
test
out
sbb
xor
pop
inc
outsl
xlat
divl
imul
and
fbstp
rcrl
xor
xchg
sub
jmp
add
popf
mov
shll
add
movsb
shll
add
add
mov
add
stos
fwait
push
repz
mov
repnz
dec
add
add
xor
js
lods
pop
add
add
ffree
inc
add
add
add
int3
cmp
xorl
popa
xchg
std
mov
cmp
adc
in
add
xchg
add
loopne
mov
jg
stos
aas
stos
mov
add
scas
pop
add
fdivs
add
add
sarl
outsl
add
add
add
xchg
push
add
in
js
in
jp
add
add
movsl
xchg
scas
jb
xchg
daa
sub
test
mov
add
jno
lcall
pusha
add
inc
add
pop
in
push
add
jns
mov
add
div
pop
movsl
nop
adc
xor
pushf
inc
push
push
xchg
lcall
es
push
int3
daa
dec
add
add
loope
xor
flds
bswap
inc
add
add
pushf
jmp
add
out
bound
xchg
das
in
xchg
jnp
rcll
insl
push
movsl
das
stc
xchg
lods
arpl
push
add
popf
fildl
es
pshufb
imul
loop
add
nop
leave
pop
xchg
add
add
or
test
insl
jge
adc
or
add
xor
stos
test
cwtl
jecxz
in
movsb
adc
adc
jp
mov
inc
hlt
cmp
add
add
add
pop
cmc
dec
add
or
popa
fdivrp
adc
std
fldenv
pushl
movsl
popa
jle
lods
sahf
mov
add
add
mov
pop
add
pop
lahf
adc
xchg
push
add
inc
rcr
mov
andl
sub
add
xor
sahf
mov
xlat
pop
xor
adc
add
add
push
dec
add
add
inc
add
add
add
add
loop
out
test
adc
int3
xor
loope
ljmp
notb
daa
mov
popf
icebp
outsl
mov
add
call
fucomp
jmp
add
or
lock
decl
add
add
sti
push
add
sbb
xor
mov
cwtl
jo
adc
inc
scas
pop
jmp
loope
divl
add
cwtl
jno
mov
push
add
enter
add
add
xchg
xchg
add
jne
inc
add
cltd
cmc
dec
add
test
andb
aaa
mov
ljmp
add
mov
aad
stc
xor
push
add
aam
sbb
jmp
add
jns
cmc
or
add
add
add
add
cltd
dec
test
add
clc
cmp
push
add
add
cmp
pop
jb
subb
lcall
add
orb
inc
add
in
sub
xchg
mov
pop
popa
ficompl
cmp
into
adc
add
add
push
pop
shll
cmc
in
and
cwtl
fcmovnu
xor
cmpsb
std
xchg
arpl
add
cli
xchg
dec
inc
add
add
in
add
add
add
add
call
icebp
push
add
mov
fidivrl
add
popf
xor
mov
inc
push
cwtl
inc
add
cmp
data16
in
xor
pop
add
inc
jmp
xchg
cltd
xor
repnz
mov
test
add
sbbl
sbb
add
cmp
add
add
mov
scas
lock
add
loope
jp
mov
push
add
add
pop
sbb
or
sar
adcl
add
adc
push
inc
stos
xor
sbbb
add
jecxz
mov
movsb
cmpsb
test
sub
push
mov
or
sbb
jle
mov
add
imul
mov
cmp
sub
fdivs
add
in
inc
adc
sub
jae
loope
push
add
add
ret
faddp
sub
imul
scas
daa
adc
faddl
mov
or
sti
push
add
mov
cmp
jae
repz
movsl
mov
aam
jmp
push
orb
cmc
lahf
jp
pop
sbb
adc
jmp
mov
enter
and
add
int
push
add
add
sub
popf
sub
add
jae
add
add
add
daa
sbb
jmp
jmp
mov
aad
add
cmp
data16
jbe
add
inc
add
xlat
int
add
ror
or
pop
cmp
lcall
add
inc
add
gs
jbe
adc
lods
mov
jl
cmc
push
add
dec
cmp
subb
or
add
push
add
inc
add
add
jo
mov
adc
into
mov
mov
xchg
imul
daa
xchg
bnd
mov
add
pop
and
add
scas
xor
mov
add
std
adc
jnp
outsb
add
add
dec
dec
outsl
hlt
arpl
add
sub
out
push
js
pop
add
push
add
add
add
mov
pop
mov
add
inc
add
add
mov
rorl
xchg
adc
pusha
add
nop
mov
add
jmp
mov
sub
add
push
add
je
pop
xchg
and
clc
push
add
and
fcoms
xchg
mov
in
ret
jp
xchg
add
xchg
inc
add
fsub
fadd
aam
cli
icebp
or
xchg
mov
outsb
add
add
xchg
fdivr
dec
and
out
push
jl
dec
ficomps
aas
or
inc
shr
dec
cmp
jecxz
adc
add
mov
outsb
add
add
add
inc
add
aas
add
add
imulb
add
mov
or
jg
add
sbbl
push
add
adc
adc
xchg
mov
fwait
leave
and
add
fcomps
cld
mov
push
add
pop
add
xor
xor
mov
add
rcrb
fldt
dec
int3
lret
xor
aaa
ret
mov
jg
jecxz
add
arpl
test
add
adc
add
dec
xchg
fmuls
add
push
inc
add
lret
add
in
sbb
jg
lcall
or
iret
popf
cltd
add
fldl2e
data16
mov
add
add
xor
sub
fidivrs
popl
fsubl
mov
push
sbb
out
mov
sbb
add
jb
xchg
or
leave
inc
add
xlat
aam
add
xor
mov
cmpsb
and
and
add
rolb
fs
mov
cmp
outsl
iret
xchg
cmp
lret
lret
dec
add
or
cmpsl
imul
ljmp
add
add
movsb
gs
popf
xor
fstl
cmp
add
add
aas
negl
pop
js
ficomps
add
add
add
out
push
outsb
add
shr
add
add
xlat
dec
add
fadds
arpl
jbe
mov
mov
add
flds
insl
fldenv
add
inc
add
icebp
lds
mov
mov
int
add
sub
pop
setp
jbe
pop
add
xchg
sbb
movsb
and
clc
mov
dec
imul
pushf
ret
lea
add
rcrl
nop
mov
in
aaa
cmp
add
gs
add
mov
cmp
negb
jge
sbb
sahf
lcall
add
into
mov
xor
inc
add
push
add
xor
sbb
clc
iret
roll
fists
aam
or
adc
push
add
test
pop
cmp
lcall
push
add
repnz
add
repnz
add
xchg
out
cmp
mov
add
cmp
mov
and
jecxz
in
jle
xchg
jne
add
clc
lods
lret
rclb
add
imul
push
add
jp
push
mov
and
fucom
dec
pushf
and
jle
aad
mov
add
push
add
or
clc
aad
addr16
mov
outsl
int3
nop
lods
nop
xchg
pop
jno
add
add
push
adc
add
dec
lcall
cmp
fwait
stos
jns
cmp
mov
add
icebp
std
push
add
push
shr
add
or
add
js
mov
pop
not
sub
push
add
dec
mov
add
sub
cmp
mov
push
push
inc
sub
ja
in
fiaddl
and
aad
add
mov
stos
mov
add
lahf
cmp
push
add
sbb
jnp
dec
xchg
cmp
test
movsb
stc
lahf
mov
cmpsl
iret
sbb
pop
add
jg
jnp
jnp
jp
mov
lcall
test
push
add
mov
mov
sub
jecxz
add
insl
leave
div
dec
add
add
add
xor
push
sub
jmp
sti
int3
mov
dec
add
sub
ljmp
push
mov
repnz
repnz
out
push
and
cmp
inc
jmp
mov
js
add
repz
add
xchg
fs
pop
add
add
add
jmp
cmpsl
pop
push
add
sbb
data16
cmp
out
dec
lahf
fwait
sti
fildl
and
cmpl
stc
bound
aad
stc
int3
pushl
mov
adc
add
mov
add
xor
pmulhw
add
add
add
jl
incb
jne
adc
mov
stos
fisubs
pop
std
jecxz
outsl
mov
gs
imul
jp
xor
scas
sti
iret
pop
popa
aam
push
add
sbb
mov
mov
add
sbb
add
add
rcrl
notb
incb
add
push
push
pop
jb
push
mov
mov
sub
movl
lea
push
clc
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
xor
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jne
in
xor
imul
add
add
add
push
add
cmp
or
or
xor
aam
pop
in
add
pop
stos
bound
inc
add
gs
add
pop
sbb
fcoms
add
popa
sbb
or
iret
in
bound
pop
addb
fwait
into
cmp
sbb
mov
add
jo
jae
pop
in
add
cmp
int3
lea
add
add
shl
mov
mov
inc
jno
add
push
add
or
inc
add
repnz
add
add
loop
and
rorl
cwtl
jbe
aad
mov
shlb
imul
add
leave
mov
add
pop
imul
cmp
cmpsl
dec
sub
jmp
add
add
push
arpl
add
dec
iret
pop
add
jge
or
add
rorb
add
mov
lods
dec
add
mov
sahf
lcall
nop
jecxz
jne
jbe
mov
jecxz
xchg
test
dec
add
xchg
bound
repnz
popa
ljmp
mov
push
add
add
imul
add
xor
sar
adc
push
dec
pop
fidivl
addr16
cmpsl
push
add
add
jg
jbe
jmp
lods
mov
add
inc
add
ja
clc
aam
cmp
mov
add
push
pop
add
dec
add
ffree
add
scas
into
jnp
xlat
pop
mov
xchg
les
add
dec
adc
add
pop
sub
int3
les
scas
fsubs
movsb
out
fsts
icebp
gs
or
daa
mov
not
push
add
add
icebp
jmp
add
jle
and
ja
mov
xchg
add
add
icebp
jno
add
sahf
add
add
and
sbb
add
mov
movzwl
lret
bound
sub
cwtl
stc
movsb
lds
mov
add
add
adc
nop
push
aam
add
push
shlb
aam
add
jb
mov
scas
in
push
add
xorl
out
inc
push
add
js
sub
sub
add
jp
shr
add
jmp
add
and
add
bound
xchg
sti
fisubrs
movb
mov
push
lahf
cmc
sbb
add
test
je
popf
aas
bound
out
mov
add
mov
and
cwtl
pop
mov
pop
add
mov
add
jmp
add
inc
or
xor
add
pop
cltd
xchg
pop
add
and
add
pop
add
inc
add
add
les
in
in
lea
add
add
jge
mov
or
mov
xor
add
xchg
pop
cmc
or
inc
shrl
mov
add
jns
iret
or
add
hlt
push
fstpt
ficoml
in
add
sbb
cmp
push
add
loope
js
sbb
fidivrl
xor
xor
jno
inc
add
shll
add
mov
sbb
add
xchg
push
sti
ja
sub
mov
sub
enter
add
add
mov
fwait
xlat
add
daa
mov
xorb
add
and
sbb
loop
bound
sarl
adc
fcomps
inc
add
je
pusha
add
xchg
push
push
add
int3
jmp
cmp
cwtl
pop
mov
clc
push
add
adcb
push
add
ljmp
daa
or
pop
mov
ljmp
add
push
add
sbb
xchg
scas
fdivl
cmp
iret
lods
mov
scas
or
ret
into
sbbl
push
push
add
ret
add
add
stos
push
add
mov
add
ja
xor
pop
stc
in
repnz
add
cmpsl
sti
std
mov
stos
sbb
test
int3
sbb
and
daa
mov
out
or
dec
cld
nop
movsl
sbb
fadds
pop
pop
iret
sub
pop
ret
dec
aam
xchg
notb
push
add
bound
pop
add
push
add
add
add
insb
add
add
repnz
or
or
cmp
or
xchg
int3
inc
add
mov
add
jno
xor
in
arpl
xor
imul
mov
js
xchg
jae
add
jnp
add
cld
pop
jmp
dec
or
inc
xchg
iret
add
data16
fdivrl
jns
stc
xlat
xchg
hlt
repnz
lods
adc
xor
fstps
xor
ds
rorb
push
add
dec
add
add
jnp
sbb
insb
add
lds
lret
pusha
add
jb
mov
std
pop
adc
xchg
push
add
ficomps
lods
sbb
add
lcall
add
pop
out
addr16
cmp
clc
mov
sbbl
shrl
imul
xor
xchg
das
jb
adc
cmp
adc
fsubl
out
mov
push
lret
fdivp
jle
pop
add
test
pop
dec
add
dec
add
add
ret
pop
pop
mov
dec
add
enter
add
mov
sahf
mov
loopne
jl
aaa
dec
jo
test
mov
cwtl
ja
dec
add
push
inc
jbe
loopne
fucom
data16
and
mov
lds
xchg
test
les
add
xor
sub
loop
data16
fsincos
push
add
add
loopne
pushl
add
xor
test
add
data16
cmp
orb
add
pop
ja
mov
sbb
sub
add
pop
subl
add
imul
sub
sti
imul
int3
sbb
jl
mov
and
add
and
inc
add
add
sub
arpl
or
arpl
push
add
add
outsl
shrl
fbld
or
dec
in
ficomps
ret
or
xchg
scas
xchg
dec
add
mov
sub
aas
scas
dec
add
xor
je
loope
push
sub
jbe
lds
cs
lret
pop
fadds
fiadds
dec
add
jge
push
add
add
setb
lea
cmpsl
jo
adc
insl
xchg
out
lret
gs
push
xorb
add
add
mov
cmp
mov
add
hlt
inc
mov
mov
in
add
ljmp
push
add
int3
inc
add
aaa
xor
and
add
mov
pop
js
lahf
fidivl
movsl
dec
test
aam
xchg
add
add
xor
insl
cmc
fistl
adc
xchg
push
jmp
add
bound
or
cmp
add
xchg
jecxz
add
ret
loopne
add
pop
add
pushl
add
daa
sbb
add
dec
xchg
pop
int3
and
lcall
fs
push
cs
neg
pop
mov
repnz
push
add
bound
into
loop
add
pop
add
stc
mov
je
jne
imul
pop
add
cmpsb
mov
add
add
add
loope
adc
loopne
add
scas
sub
gs
inc
mov
jg
mov
lock
push
add
and
cmp
add
xchg
cmp
out
outsb
add
pusha
add
mov
add
xchg
jnp
xor
lret
sub
sbb
jmp
add
cmp
add
xor
mov
add
enter
lock
add
mov
push
add
cmpsb
mov
push
add
in
push
add
rcl
iret
mov
fwait
clc
sbb
mov
add
dec
add
add
imul
add
jb
dec
add
jp
cmp
in
jbe
jnp
add
or
mov
dec
add
mov
inc
add
movsb
jns
fmull
pushf
cltd
add
mov
add
mov
mov
cld
repnz
add
pop
add
aad
dec
ljmp
add
enter
add
mov
add
outsl
loop
leave
nop
pop
add
add
dec
fxch
loopne
add
add
mov
add
add
add
push
add
pop
pop
add
inc
add
stos
aad
out
add
push
add
add
pop
push
mov
mov
pop
mov
pop
jb
adc
fnstsw
push
sub
int
add
mov
idivl
or
push
add
cmp
orl
mov
cmp
add
inc
add
add
add
or
and
adc
scas
mov
add
shll
pop
add
add
sbb
negl
pop
jmp
xchg
in
add
lods
int
xor
xor
add
add
add
add
loop
push
add
sbb
cs
add
lods
aas
imul
call
add
sbb
popa
ljmp
add
test
dec
add
fwait
sub
insl
iret
arpl
adc
add
push
add
cmc
cwtl
out
iret
je
add
daa
mov
add
add
jne
fistps
fimuls
mov
sbb
fisttpl
int
mov
mov
adc
xor
push
dec
add
sahf
dec
shlb
ror
testl
mov
in
add
adc
pop
ret
decl
rcrl
sarb
add
add
mov
sub
push
add
addr16
or
ljmp
lods
call
push
xchg
lock
pop
fdivs
mov
xor
xchg
or
dec
sarb
push
add
xchg
pushl
add
sub
lea
and
cmp
cmp
adc
and
sbb
aaa
fisubs
add
mov
push
stc
jl
jp
std
stos
sub
scas
cli
or
jle
aas
cmpsb
adc
loopne
andb
jbe
data16
dec
add
add
pop
add
add
add
xor
fsqrt
shl
pop
repnz
inc
add
add
add
pop
cltd
xor
or
icebp
das
jmp
add
fidivrl
add
outsb
add
add
test
adc
xlat
fldl
mov
aaa
in
into
ret
bound
pop
add
mov
add
add
inc
add
loopne
insb
add
add
lea
filds
dec
add
add
add
fistl
fsubrl
mov
pop
or
dec
cmp
mov
clc
inc
add
add
mov
int
jb
adc
cmpsl
xchg
inc
add
movsb
lds
and
jbe
inc
add
pop
add
add
or
dec
dec
add
movsl
and
and
add
add
add
xchg
push
add
or
inc
add
mov
fbstp
add
push
add
cmc
xchg
cld
lahf
ret
pop
mov
jecxz
push
add
insl
add
pop
xor
mov
inc
mov
sub
adc
mov
int
inc
lahf
dec
adc
xor
xchg
add
add
pop
and
add
xor
cli
xor
xchg
test
add
fbld
dec
in
mov
add
lds
add
imul
add
sub
neg
scas
add
inc
jecxz
add
xor
fnstenv
add
cltd
rol
fidivrs
add
inc
loope
pop
add
mov
pushf
mov
sbb
sub
and
test
add
jg
nop
out
lds
cld
pop
lds
pop
jno
xchg
sbb
testb
add
mov
fistl
mov
add
add
sbb
add
cmpb
int
mov
jne
or
in
imul
sub
cmp
mov
outsl
jnp
cwtl
lret
ret
repnz
add
inc
mov
lock
lods
jnp
loope
inc
xlat
dec
push
add
fcomps
or
pop
sub
cmp
int3
mov
cmp
mov
xchg
sub
cmp
mov
fucom
out
add
mov
add
mov
shrb
clc
enter
lods
repz
mov
mov
add
rcl
adc
cmp
xor
jo
jns
and
cmc
orl
pop
pop
mov
cwtl
popa
jbe
cltd
jns
push
add
sub
pop
push
cmp
icebp
dec
add
shl
pushf
dec
push
jg
pushf
test
hlt
lcall
pushf
sti
mov
mov
or
testl
or
mov
or
push
add
pop
add
fwait
iret
gs
add
add
xor
jns
cmp
cmpsl
and
lods
or
pop
add
das
push
add
add
add
outsb
add
add
add
dec
add
jo
adc
sbb
sbbb
add
xchg
lret
xchg
add
inc
add
out
xor
adc
mov
lret
leave
cmp
in
adcl
lods
or
sbb
adc
enter
add
mov
adc
out
dec
sbb
add
cmp
xchg
pop
add
add
add
inc
add
add
imul
mov
add
leave
adc
cltd
inc
add
adc
outsl
xlat
test
or
fildl
dec
add
adc
shrb
add
cmp
jns
in
imul
fcoms
addr16
or
mov
pop
add
jp
sub
jl
lret
fidivrs
or
cmp
adc
movzwl
mov
mov
dec
xor
imul
add
jno
cmp
add
xor
pop
add
lods
sbb
add
jb
mov
mov
nop
dec
stc
sub
add
sbb
ljmp
xchg
mov
pop
jecxz
nop
and
xor
sub
mov
popf
loop
xchg
repnz
or
gs
add
add
xor
daa
sbb
out
clc
repnz
nop
nop
jae
in
mov
add
leave
nop
push
mov
leave
nop
jmp
pop
sub
jp
dec
mov
clc
repnz
nop
nop
jae
add
in
shl
jnp
mov
clc
repnz
nop
nop
jae
add
add
add
push
das
push
push
mov
xchg
ret
dec
int
inc
dec
ret
add
call
clc
repnz
nop
nop
jae
addr16
add
clc
repnz
nop
nop
jae
ret
jnp
add
jle
cmp
nop
push
mov
leave
nop
jmp
add
add
add
popf
mov
clc
repnz
nop
nop
jae
add
filds
dec
dec
mov
pushf
fsubl
mov
test
clc
repnz
nop
nop
jae
inc
and
pop
push
clc
repnz
nop
nop
jae
rorl
add
push
mov
leave
nop
jmp
add
bound
push
nop
push
mov
leave
nop
jmp
out
ret
pop
dec
mov
push
mov
leave
nop
jmp
add
dec
add
sub
clc
repnz
nop
nop
jae
sub
inc
jmp
clc
repnz
nop
nop
jae
loop
jle
jnp
pop
push
mov
xchg
ret
push
add
test
movb
and
mov
clc
repnz
nop
nop
jae
add
add
rorl
nop
jae
dec
add
faddl
add
sub
in
leave
nop
jmp
int
add
jg
add
movb
mov
xchg
ret
jg
add
and
and
stos
movzwl
clc
repnz
nop
nop
jae
dec
jbe
add
add
clc
repnz
nop
nop
jae
in
add
add
repnz
nop
nop
jae
add
jnp
add
add
add
or
add
mov
jnp
jp
add
add
and
add
add
repnz
nop
nop
jae
push
adc
add
daa
lea
push
mov
xchg
ret
add
xchg
add
dec
mov
pop
clc
repnz
nop
nop
jae
sub
add
add
add
das
sub
clc
repnz
nop
nop
jae
rcl
rcll
in
add
addl
add
add
add
mov
repz
mov
xchg
ret
add
add
pop
clc
repnz
nop
nop
jae
testl
mov
clc
repnz
nop
nop
jae
movb
leave
xor
outsl
mov
clc
repnz
nop
nop
jae
or
jbe
leave
add
push
mov
xchg
ret
add
dec
add
loop
pop
cli
inc
add
call
nop
push
mov
leave
nop
jmp
add
add
dec
and
nop
push
mov
leave
nop
jmp
push
add
add
add
call
inc
add
xchg
add
add
pop
add
mov
add
in
call
nop
jae
add
filds
idivl
add
clc
repnz
nop
nop
jae
xor
or
dec
fld1
clc
repnz
nop
nop
jae
faddl
and
dec
add
cld
nop
nop
jae
add
dec
adc
add
clc
repnz
nop
nop
jae
add
mov
push
mov
leave
nop
jmp
add
and
pop
push
mov
xchg
ret
fmull
mov
push
fsubl
mov
cld
nop
nop
jae
add
dec
icebp
loop
jle
push
push
mov
xchg
ret
mov
jnp
add
cmpsl
push
push
mov
xchg
ret
add
add
add
in
and
repnz
nop
nop
jae
movb
jnp
and
add
add
mov
xchg
ret
add
add
ret
int3
push
add
push
clc
repnz
nop
nop
jae
add
add
filds
jp
push
add
nop
nop
jae
add
shl
add
and
nop
nop
jae
ret
add
add
in
repnz
mov
nop
nop
jae
add
add
das
add
nop
push
mov
leave
nop
jmp
add
jnp
xor
jne
inc
add
add
jecxz
in
add
mov
leave
nop
jmp
jle
add
dec
add
test
repnz
nop
nop
jae
ret
jp
movl
in
leave
nop
jmp
add
add
add
xchg
add
nop
push
mov
leave
nop
jmp
ret
add
pop
clc
repnz
nop
nop
jae
repnz
leave
loop
inc
add
repnz
nop
nop
jae
add
icebp
add
adcl
adc
pop
mov
clc
repnz
nop
nop
jae
addl
push
add
repnz
nop
nop
jae
xchg
add
add
push
add
mov
push
mov
xchg
ret
out
add
push
es
jecxz
repnz
nop
nop
jae
jecxz
and
mov
xchg
ret
jnp
and
add
repnz
adc
xchg
mov
xchg
ret
add
test
loop
sbb
push
mov
leave
nop
jmp
movb
add
jle
add
inc
push
adc
nop
push
mov
leave
nop
jmp
add
sub
push
mov
xchg
ret
jg
add
or
push
clc
repnz
nop
nop
jae
icebp
xchg
add
mov
in
mov
nop
nop
jae
add
add
xchg
add
push
add
movzwl
clc
repnz
nop
nop
jae
jbe
dec
jp
arpl
aad
call
nop
jmp
inc
adc
xchg
mov
clc
repnz
nop
nop
jae
leave
ret
add
push
fistpl
nop
push
mov
leave
nop
jmp
faddl
add
add
add
push
inc
sbb
repnz
nop
nop
jae
roll
pop
mov
clc
repnz
nop
nop
jae
xor
bound
add
movsb
sbb
mov
sub
clc
repnz
nop
nop
jae
xor
add
add
pusha
add
mov
clc
repnz
nop
nop
jae
bound
add
fisttpl
pop
pusha
inc
add
or
adc
sbb
in
sbb
add
nop
push
mov
leave
nop
jmp
xchg
push
out
xor
mov
mov
nop
push
mov
leave
nop
jmp
xor
stos
jne
xor
add
jp
ret
pop
or
jg
addr16
and
nop
push
mov
leave
nop
jmp
add
xchg
movb
stos
lds
test
adc
add
repnz
nop
nop
jae
xchg
ret
add
push
clc
repnz
nop
nop
jae
in
add
add
leave
add
mov
push
mov
xchg
ret
jg
loop
and
push
mov
xchg
ret
add
add
sub
rcl
test
mov
inc
add
add
xchg
jg
test
roll
jmp
clc
repnz
nop
nop
jae
add
inc
and
repnz
nop
nop
jae
and
add
mov
data16
push
mov
xchg
ret
inc
jle
jle
add
add
stc
nop
push
mov
leave
nop
jmp
and
add
add
xchg
add
pop
push
mov
xchg
ret
add
add
test
nop
jae
inc
xchg
xchg
add
mov
clc
repnz
nop
nop
jae
mov
adcl
or
mov
add
repnz
nop
nop
jae
add
add
jo
adc
mov
xchg
ret
jnp
add
shl
pop
add
add
cltd
add
nop
push
mov
leave
nop
jmp
add
xchg
repnz
mov
int
pop
jae
repnz
nop
nop
jae
add
add
sub
xchg
xchg
ret
mov
xchg
addr16
add
sub
mov
clc
repnz
nop
nop
jae
dec
fdivp
ss
je
mov
add
clc
repnz
nop
nop
jae
addl
sub
sbb
cld
nop
nop
jae
xor
add
sub
repnz
nop
nop
jae
add
xchg
add
faddl
or
inc
jne
clc
repnz
nop
nop
jae
add
jecxz
mov
clc
repnz
nop
nop
jae
jbe
add
in
hlt
dec
movzwl
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
add
test
jbe
lods
push
mov
xchg
ret
jnp
in
add
add
icebp
push
cmp
nop
push
mov
leave
nop
jmp
add
xchg
add
add
add
repnz
nop
nop
jae
add
xorl
nop
nop
jae
add
push
push
jle
pop
and
nop
push
mov
leave
nop
jmp
add
add
add
mov
xchg
ret
add
xchg
add
repnz
lea
clc
repnz
nop
nop
jae
faddl
inc
push
add
popa
lea
push
mov
xchg
ret
mov
lret
movzwl
clc
repnz
nop
nop
jae
shll
add
add
cs
clc
repnz
nop
nop
jae
push
or
leave
add
in
push
mov
xchg
ret
add
add
add
lea
repnz
nop
nop
jae
bound
add
xor
clc
repnz
nop
nop
jae
add
add
add
shrb
mov
xchg
ret
jp
add
push
push
mov
xchg
ret
out
in
int
add
dec
cmpsb
mov
add
nop
push
mov
leave
nop
jmp
add
pop
jp
add
fidivs
es
repnz
nop
nop
jae
xchg
and
sub
repnz
nop
nop
jae
inc
add
in
jne
clc
repnz
nop
nop
jae
add
add
add
jp
nop
push
mov
leave
nop
jmp
fdivrl
ret
call
nop
jae
xchg
add
add
dec
add
add
ljmp
mov
xchg
ret
add
and
add
add
clc
repnz
nop
nop
jae
add
add
add
cld
mov
or
nop
jmp
add
add
out
loop
push
mov
xchg
ret
repnz
add
pop
fldcw
clc
repnz
nop
nop
jae
add
aad
xor
add
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
push
mov
dec
add
add
bound
push
add
mov
pop
fwait
clc
repnz
nop
nop
jae
add
add
pop
clc
repnz
nop
nop
jae
add
imull
mov
ret
jmp
add
add
add
filds
leave
dec
ret
jle
add
notl
repnz
nop
nop
jae
adc
ficoms
mov
xchg
ret
add
add
out
test
imul
nop
nop
jae
add
jnp
in
inc
add
repnz
nop
nop
jae
icebp
xchg
jp
add
dec
int
jbe
clc
repnz
nop
nop
jae
add
xchg
jle
pop
clc
repnz
nop
nop
jae
add
jg
add
int
iret
push
clc
repnz
nop
nop
jae
pop
dec
add
add
add
add
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
in
movb
fidivrs
mov
clc
repnz
nop
nop
jae
xor
add
fmull
jne
push
mov
xchg
ret
jnp
add
bound
cltd
fld1
push
mov
xchg
ret
movb
xchg
inc
xchg
add
xlat
call
clc
repnz
nop
nop
jae
mov
add
lods
mov
clc
repnz
nop
nop
jae
jle
add
roll
or
mov
pop
clc
repnz
nop
nop
jae
jnp
inc
add
mov
mov
nop
push
mov
leave
nop
jmp
sub
jle
or
add
add
clc
repnz
nop
nop
jae
add
mull
mov
jb
nop
push
mov
leave
nop
jmp
in
push
mov
dec
add
pop
pop
push
mov
xchg
ret
add
add
loop
add
loop
mov
clc
repnz
nop
nop
jae
add
jecxz
add
jnp
mov
jmp
add
fcoml
ret
add
and
mov
nop
push
mov
leave
nop
jmp
add
mov
addr16
add
nop
push
mov
leave
nop
jmp
rcll
add
xchg
iret
shl
clc
repnz
nop
nop
jae
add
fiadds
jg
mov
push
mov
xchg
ret
add
fidivrs
add
add
lds
dec
cmp
repnz
nop
nop
jae
jp
push
add
ljmp
inc
add
nop
push
mov
leave
nop
jmp
movb
xor
nop
nop
jae
icebp
mov
add
add
inc
push
mov
xchg
ret
add
and
add
add
lret
popa
clc
repnz
nop
nop
jae
add
dec
or
jnp
add
add
push
mov
xchg
ret
pop
add
mov
xor
jle
int
xor
add
nop
push
mov
leave
nop
jmp
jle
add
add
or
fdivl
fsubr
test
nop
push
mov
leave
nop
jmp
add
out
add
repnz
nop
nop
jae
xor
movb
loop
xchg
mov
clc
repnz
nop
nop
jae
jbe
add
imul
mov
xchg
ret
jnp
mov
dec
pop
roll
shlb
repnz
nop
nop
jae
leave
adcl
add
ds
push
mov
xchg
ret
addr16
add
adc
jl
sbb
repnz
nop
nop
jae
testl
xchg
nop
push
mov
leave
nop
jmp
add
add
add
loopne
push
mov
xchg
ret
add
add
inc
add
cli
xchg
call
repnz
nop
nop
jae
fiadds
or
ja
clc
repnz
nop
nop
jae
xchg
push
mov
mov
leave
nop
jmp
add
add
sbb
nop
nop
jae
pop
bound
pop
ret
hlt
mov
mov
leave
nop
jmp
add
mov
add
rcr
sbb
clc
repnz
nop
nop
jae
and
sub
add
add
ret
mov
xchg
ret
ret
add
add
ret
fwait
add
push
mov
xchg
ret
sub
addr16
pusha
nop
push
mov
leave
nop
jmp
add
add
faddl
mov
leave
nop
jmp
add
and
sub
les
push
mov
leave
nop
jmp
repnz
ret
inc
add
popa
clc
repnz
nop
nop
jae
int
mov
push
dec
ret
nop
push
mov
leave
nop
jmp
sub
orl
pop
pusha
clc
repnz
nop
nop
jae
add
add
mov
add
nop
nop
jae
inc
int
jp
add
test
cld
nop
nop
jae
mov
icebp
sbb
stos
out
add
add
leave
nop
jmp
mov
push
push
mov
xchg
ret
roll
testl
xchg
push
push
mov
xchg
ret
add
add
add
add
call
clc
repnz
nop
nop
jae
adc
dec
xchg
push
or
repnz
nop
nop
jae
add
add
sub
pop
clc
repnz
nop
nop
jae
add
add
mov
lret
push
clc
repnz
nop
nop
jae
jg
add
test
or
fbstp
sar
repnz
nop
nop
jae
add
dec
add
add
pop
mov
clc
repnz
nop
nop
jae
add
add
add
add
add
nop
jmp
add
add
mov
adc
nop
nop
jae
dec
add
testl
sub
mov
clc
repnz
nop
nop
jae
ret
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
mov
pusha
push
mov
xchg
ret
add
add
adc
mov
nop
nop
jae
add
add
test
mov
xchg
ret
add
jle
add
add
and
jg
nop
push
mov
leave
nop
jmp
add
add
ljmp
sar
cld
nop
nop
jae
add
mov
add
js
push
add
xchg
adc
mov
pop
std
clc
mov
add
popl
sti
clc
repnz
nop
nop
jae
roll
fcomip
int
jge
clc
repnz
nop
nop
jae
add
jle
add
add
test
add
clc
repnz
nop
nop
jae
add
add
mov
xchg
ret
leave
xchg
in
add
mov
and
daa
push
nop
push
mov
leave
nop
jmp
inc
xchg
add
movb
addl
mov
xchg
ret
in
int
add
mov
repnz
nop
nop
jae
out
jg
mov
mov
jecxz
ret
clc
repnz
nop
nop
jae
icebp
ret
add
add
clc
repnz
nop
nop
jae
add
in
jp
jp
add
mov
clc
repnz
nop
nop
jae
in
add
push
add
mov
xchg
xchg
clc
repnz
nop
nop
jae
dec
add
and
push
push
mov
xchg
ret
int
and
add
roll
mov
xchg
ret
add
jle
out
rcll
in
scas
cmpsb
lahf
test
inc
loop
add
add
add
in
fisttps
jle
add
add
add
jp
xor
mov
leave
nop
jmp
inc
add
add
nop
nop
jae
faddl
jnp
add
add
xor
clc
repnz
nop
nop
jae
add
repnz
nop
nop
jae
add
jbe
mov
add
push
mov
xchg
ret
add
add
addl
add
push
mov
cmpsl
das
add
faddl
lret
add
rorl
cld
nop
nop
jae
int
add
add
add
call
push
mov
leave
nop
jmp
add
jg
and
pop
adc
mov
cmp
ret
jg
add
add
add
push
mov
xchg
ret
xor
addl
jp
iret
mov
clc
repnz
nop
nop
jae
add
add
add
xor
repnz
nop
nop
jae
push
filds
jle
addl
clc
repnz
nop
nop
jae
add
icebp
add
scas
mov
nop
push
mov
leave
nop
jmp
add
add
hlt
push
add
push
mov
add
insb
add
mov
add
add
leave
nop
xor
add
clc
repnz
nop
nop
jae
add
add
sub
cld
nop
nop
jae
inc
orl
add
pop
je
nop
push
mov
leave
nop
jmp
mov
cld
or
in
leave
nop
jmp
xchg
mov
fwait
clc
repnz
nop
nop
jae
jbe
xor
add
push
push
repnz
xchg
add
add
add
add
add
add
pop
clc
repnz
nop
nop
jae
add
add
mov
add
clc
repnz
nop
nop
jae
icebp
in
jp
imul
clc
repnz
nop
nop
jae
jnp
push
repnz
add
xchg
clc
repnz
nop
nop
jae
add
pop
add
mov
mov
repnz
nop
nop
jae
add
in
add
dec
add
nop
push
mov
leave
nop
jmp
mov
add
push
mov
xchg
ret
add
ret
xchg
dec
add
icebp
mov
mov
xchg
ret
dec
add
add
push
jge
test
add
nop
push
mov
leave
nop
jmp
addl
pop
je
nop
push
mov
leave
nop
jmp
jp
test
mov
nop
push
mov
leave
nop
jmp
add
mov
and
mov
xchg
ret
add
add
std
dec
clc
repnz
nop
nop
jae
add
bound
jg
jp
pushf
sahf
mov
cld
nop
nop
jae
add
add
out
add
movswl
clc
repnz
nop
nop
jae
push
sbb
addl
nop
jae
sub
add
add
pop
leave
je
clc
repnz
nop
nop
jae
push
or
clc
repnz
nop
nop
jae
add
jp
dec
subl
nop
push
mov
leave
nop
jmp
test
add
add
jl
add
add
add
and
push
mov
leave
nop
jmp
add
pop
add
push
add
add
clc
repnz
nop
nop
jae
add
jg
pop
add
add
clc
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
fdivp
addr16
and
push
mov
clc
repnz
nop
nop
jae
bound
movb
insl
pusha
nop
push
mov
leave
nop
jmp
and
add
add
leave
mov
fwait
clc
repnz
nop
nop
jae
in
add
add
add
imul
nop
push
mov
leave
nop
jmp
roll
xchg
pop
dec
and
nop
inc
add
add
add
mov
repnz
nop
nop
jae
rcll
add
push
clc
repnz
nop
nop
jae
fcoml
dec
mov
loopne
push
push
mov
xchg
ret
add
jg
int
add
repnz
nop
nop
jae
jle
icebp
repnz
push
push
push
mov
xchg
ret
sbb
add
faddl
repnz
or
mov
xchg
ret
adc
loop
loop
addr16
nop
push
mov
leave
nop
jmp
inc
jg
add
ret
add
fisttpll
cld
nop
nop
jae
add
loop
add
and
inc
add
add
jp
xor
add
add
push
mov
xchg
ret
mov
and
add
push
mov
xchg
ret
jg
jle
add
pop
nop
push
mov
leave
nop
jmp
add
ret
add
xor
pop
nop
push
mov
leave
nop
jmp
and
addr16
adc
pop
add
add
jmp
add
in
add
test
add
add
fwait
mov
clc
repnz
nop
nop
jae
add
dec
add
call
clc
repnz
nop
nop
jae
mov
push
clc
repnz
nop
nop
jae
adc
mov
xchg
loopne
add
dec
add
repnz
nop
nop
jae
add
add
add
add
sbb
push
mov
xchg
ret
add
or
add
sahf
add
loope
je
xor
clc
repnz
nop
nop
jae
and
push
sbb
mov
repnz
nop
nop
jae
add
add
test
add
clc
repnz
nop
nop
jae
add
sub
repnz
nop
nop
jae
and
add
adc
dec
dec
clc
repnz
nop
nop
jae
add
add
mov
push
jne
add
add
add
add
repnz
nop
nop
jae
bound
add
add
in
dec
clc
repnz
nop
nop
jae
and
add
sub
xor
repnz
nop
nop
jae
xchg
inc
fiadds
pop
add
push
clc
repnz
nop
nop
jae
add
add
add
push
filds
sub
repnz
nop
nop
jae
in
pop
add
mov
clc
repnz
nop
nop
jae
in
sub
fsubs
jo
je
sbbl
mov
leave
nop
jmp
icebp
add
sub
inc
clc
repnz
nop
nop
jae
pop
adc
dec
mov
adc
nop
jae
mov
call
clc
repnz
nop
nop
jae
or
sbb
push
add
push
push
mov
xchg
ret
dec
fdivl
add
add
adc
repnz
nop
nop
jae
add
icebp
mov
out
sbb
nop
jae
add
imul
jae
inc
in
testl
mov
add
iret
ret
clc
repnz
nop
nop
jae
add
mov
add
sar
repnz
nop
nop
jae
fsubl
jle
xor
push
nop
push
mov
leave
nop
jmp
jle
push
add
faddl
mov
dec
cmp
push
mov
leave
nop
jmp
addr16
ret
jnp
add
popa
shl
clc
repnz
nop
nop
jae
leave
add
dec
add
sbb
mov
xchg
ret
add
addl
test
xchg
scas
mov
nop
push
mov
leave
nop
jmp
and
jp
jmp
or
clc
repnz
nop
nop
jae
add
inc
mov
scas
scas
mov
clc
repnz
nop
nop
jae
dec
jg
leave
dec
add
nop
nop
jae
fcompl
loop
inc
sbbl
mov
clc
repnz
nop
nop
jae
roll
adc
iret
add
cld
nop
nop
jae
addr16
add
lcall
clc
repnz
nop
nop
jae
mov
add
nop
push
mov
leave
nop
jmp
dec
add
add
ret
and
add
add
mov
sub
rcll
clc
inc
and
clc
repnz
nop
nop
jae
add
add
sbb
repnz
nop
nop
jae
int
inc
mov
jp
jbe
nop
push
mov
leave
nop
jmp
repnz
cmp
xchg
mov
push
mov
xchg
ret
cmpl
mov
andl
nop
nop
jae
int
leave
push
js
add
test
nop
push
mov
leave
nop
jmp
jnp
in
add
fdivl
push
nop
push
mov
leave
nop
jmp
add
sub
add
in
add
mov
clc
repnz
nop
nop
jae
in
xchg
faddl
dec
push
push
mov
xchg
ret
xchg
mov
inc
addl
je
clc
repnz
nop
nop
jae
add
cld
mov
push
mov
xchg
ret
loop
repnz
in
add
add
add
cmp
repnz
nop
nop
jae
out
add
xchg
hlt
ret
iret
or
inc
add
add
inc
push
nop
push
mov
leave
nop
jmp
add
jle
add
add
add
repnz
nop
nop
jae
mov
arpl
cld
nop
nop
jae
add
addl
movzwl
clc
repnz
nop
nop
jae
fdivp
and
ret
call
mov
leave
nop
jmp
pop
jg
movb
push
scas
push
mov
clc
repnz
nop
nop
jae
adcl
push
clc
repnz
nop
nop
jae
mov
add
add
fbstp
xchg
pop
ret
push
add
add
jnp
inc
cmp
push
mov
xchg
ret
fmull
testl
push
mov
xchg
ret
add
add
sub
add
sbb
mov
leave
nop
jmp
add
test
rcll
and
test
dec
add
bound
mov
in
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
ret
add
add
jp
xor
into
outsl
inc
add
movb
ret
add
mov
cmpw
clc
repnz
nop
nop
jae
icebp
add
pop
ja
test
mov
leave
nop
jmp
mov
add
mov
clc
repnz
nop
nop
jae
jp
dec
add
add
push
mov
xchg
ret
leave
fistpll
bound
addl
mov
clc
repnz
nop
nop
jae
add
add
add
int3
popa
pop
push
mov
xchg
ret
fisubs
movb
movb
jno
jmp
mov
xchg
ret
add
jle
add
add
push
add
roll
repnz
nop
nop
jae
add
jle
shll
iret
jne
clc
repnz
nop
nop
jae
add
xchg
xor
clc
repnz
nop
nop
jae
jnp
add
add
mov
clc
repnz
nop
nop
jae
dec
jbe
add
add
jb
clc
repnz
nop
nop
jae
add
add
push
push
mov
xchg
ret
add
xchg
jle
and
mov
add
clc
repnz
nop
nop
jae
add
test
add
leave
mov
nop
push
mov
leave
nop
jmp
andl
pop
xchg
add
xchg
inc
add
add
loop
mov
data16
div
clc
repnz
nop
nop
jae
add
add
jp
adc
add
call
nop
push
mov
leave
nop
jmp
add
idivl
add
xor
push
mov
xchg
ret
add
add
faddl
add
mov
repnz
nop
nop
jae
jg
add
jecxz
inc
repz
clc
repnz
nop
nop
jae
shll
clc
repnz
nop
nop
jae
xor
add
sti
rep
clc
repnz
nop
nop
jae
add
out
fsubl
stos
sbb
xchg
inc
add
add
add
faddl
add
inc
fistpl
push
mov
xchg
ret
addr16
jle
or
clc
repnz
nop
nop
jae
add
rcl
sarl
add
add
shrl
adc
add
jp
push
nop
push
mov
leave
nop
jmp
add
push
or
add
push
mov
out
add
add
dec
add
adc
add
add
call
clc
repnz
nop
nop
jae
dec
add
sbb
lods
orb
clc
repnz
nop
nop
jae
add
fmull
out
adc
lret
mov
leave
nop
jmp
sub
add
add
inc
add
ja
clc
repnz
nop
nop
jae
add
add
adc
jne
sbb
clc
repnz
nop
nop
jae
add
mov
ret
dec
xchg
clc
repnz
nop
nop
jae
add
add
in
add
pop
xor
clc
repnz
nop
nop
jae
faddl
add
add
fistl
mov
leave
nop
jmp
out
add
jnp
in
daa
add
nop
push
mov
leave
nop
jmp
in
icebp
and
mov
push
mov
xchg
ret
push
jnp
test
jecxz
lea
clc
repnz
nop
nop
jae
add
add
test
clc
repnz
nop
nop
jae
out
add
shll
and
or
push
mov
leave
nop
jmp
dec
add
in
push
jle
fcmovnu
call
inc
add
add
in
add
dec
out
mov
nop
push
mov
leave
nop
jmp
add
mov
dec
sub
xor
nop
push
mov
leave
nop
jmp
add
push
sub
fiadds
and
pop
mov
xchg
ret
add
mov
add
jle
add
pop
clc
repnz
nop
nop
jae
jnp
and
in
add
clc
repnz
nop
nop
jae
add
xchg
add
test
repnz
nop
nop
jae
jbe
add
aaa
push
push
mov
xchg
ret
push
mov
mov
clc
repnz
nop
nop
jae
add
add
add
out
sbb
cld
nop
nop
jae
out
dec
filds
in
sub
push
mov
xchg
ret
add
add
jecxz
divl
repnz
nop
nop
jae
addl
xchg
inc
add
jne
push
mov
xchg
ret
in
xchg
push
add
push
nop
push
mov
leave
nop
jmp
jle
add
add
dec
and
push
mov
xchg
ret
add
roll
in
loopne
inc
rol
push
mov
xchg
ret
jecxz
jecxz
add
lahf
mov
nop
push
mov
leave
nop
jmp
repnz
and
add
nop
nop
jae
add
add
add
add
push
add
js
clc
repnz
nop
nop
jae
in
add
inc
add
add
jl
nop
push
mov
leave
nop
jmp
add
add
push
push
mov
xchg
ret
mov
add
fmulp
jg
inc
adc
repnz
nop
nop
jae
sub
bnd
add
add
mov
xchg
ret
add
add
cwtl
out
bound
xchg
mov
clc
repnz
nop
nop
jae
add
add
add
adc
push
mov
leave
nop
jmp
pop
add
dec
add
sbb
sbb
nop
push
mov
leave
nop
jmp
dec
in
add
test
repnz
nop
nop
jae
mov
add
jp
arpl
shr
clc
repnz
nop
nop
jae
in
loop
int3
or
repnz
nop
nop
jae
jnp
jg
add
add
cld
nop
nop
jae
mov
in
jno
jmp
nop
nop
jae
xchg
add
and
dec
pop
push
mov
xchg
ret
fbld
dec
add
add
add
cmp
nop
push
mov
leave
nop
jmp
roll
jg
xorl
add
call
xorl
dec
add
add
movsb
push
mov
xchg
ret
add
add
add
xchg
and
in
sbb
add
nop
jmp
add
xchg
jbe
cltd
fwait
push
mov
xchg
ret
add
add
mov
les
push
clc
repnz
nop
nop
jae
add
add
jnp
add
lods
xor
clc
repnz
nop
nop
jae
icebp
ret
xchg
sub
cmp
cli
sbb
repnz
nop
nop
jae
add
add
leave
add
or
repnz
nop
nop
jae
ficomps
add
xchg
add
clc
repnz
nop
nop
jae
faddl
leave
add
mov
cld
nop
nop
jae
add
inc
jnp
add
sti
push
nop
push
mov
leave
nop
jmp
add
add
cld
nop
nop
jae
add
xchg
mov
mov
xchg
ret
fcoml
add
and
repnz
nop
nop
jae
jnp
ret
out
add
xchg
mov
mov
xchg
ret
add
adc
repnz
test
repnz
nop
nop
jae
mov
xchg
push
clc
repnz
nop
nop
jae
pop
addr16
movb
pop
mov
xlat
mov
clc
repnz
nop
nop
jae
jp
loop
fadd
jbe
push
clc
repnz
nop
nop
jae
rcr
pop
call
nop
jmp
fisttps
inc
add
clc
repnz
nop
nop
jae
add
add
jecxz
mov
clc
push
mov
xchg
ret
mov
add
add
jb
repnz
nop
nop
jae
inc
add
jg
sar
repnz
nop
nop
jae
add
add
repnz
ljmp
inc
add
in
mov
add
and
inc
pushl
nop
push
mov
leave
nop
jmp
push
add
adc
clc
repnz
nop
nop
jae
dec
add
addl
add
push
add
pusha
inc
add
add
pop
add
jnp
pop
and
clc
repnz
nop
nop
jae
add
cmp
mov
leave
nop
jmp
add
mov
add
add
mov
leave
nop
jmp
in
fcomip
dec
mov
andb
add
dec
add
push
je
clc
repnz
nop
nop
jae
sub
add
xchg
add
repnz
nop
nop
jae
mov
push
mov
xchg
ret
or
ret
add
add
add
inc
adc
mov
xchg
ret
add
bound
test
arpl
cld
nop
nop
jae
add
jp
jp
sarl
clc
repnz
nop
nop
jae
jle
add
adc
lods
add
clc
repnz
nop
nop
jae
mov
add
mov
sub
add
fldcw
add
add
ret
movsl
add
clc
repnz
nop
nop
jae
add
fimuls
cmp
in
lods
add
add
in
add
int3
and
mov
repnz
nop
nop
jae
add
addl
add
mov
xchg
ret
add
mov
repnz
push
rcrl
repnz
nop
nop
jae
adc
add
in
xor
sbb
mov
inc
in
push
mov
xchg
ret
add
sub
shlb
dec
test
nop
push
mov
leave
nop
jmp
pop
sub
add
jmp
clc
repnz
nop
nop
jae
add
repnz
testl
call
clc
repnz
nop
nop
jae
in
add
add
loop
push
push
mov
xchg
ret
rol
add
add
add
mov
lret
clc
repnz
nop
nop
jae
dec
add
add
jnp
xor
clc
repnz
nop
nop
jae
cmpl
leave
add
inc
push
mov
xchg
ret
mov
dec
dec
add
jmp
in
leave
nop
jmp
fmul
inc
in
add
or
xlat
inc
push
mov
xchg
ret
xor
sub
and
add
sub
nop
nop
jae
add
jnp
add
add
push
clc
repnz
nop
nop
jae
jle
jg
in
add
add
xchg
cmpl
nop
jae
add
add
jecxz
ret
jmp
add
add
fdivl
in
stos
clc
nop
push
mov
leave
nop
jmp
adc
add
and
shlb
add
mov
inc
add
add
xchg
add
jbe
xor
in
sub
cmp
adc
add
test
add
aaa
push
add
push
jmp
add
addr16
dec
jnp
add
add
add
add
int
add
xchg
clc
repnz
nop
nop
jae
add
sub
mov
xchg
ret
push
addl
cmpl
repnz
nop
nop
jae
add
adc
out
inc
add
pop
add
ror
mov
int3
cmp
addb
cmp
ret
jecxz
add
add
test
and
sti
pop
push
mov
xchg
ret
add
xchg
add
add
mov
clc
repnz
nop
nop
jae
leave
dec
int
pop
testl
inc
push
mov
xchg
ret
jp
add
add
in
fdivl
jmp
cmp
ret
add
icebp
add
inc
jnp
jmp
mov
xchg
ret
add
addr16
in
add
add
xor
clc
repnz
nop
nop
jae
push
mov
add
add
sub
clc
repnz
nop
nop
jae
addr16
add
xor
mov
xchg
ret
inc
add
add
add
fcompl
add
inc
xchg
inc
add
add
fists
mov
nop
push
mov
leave
nop
jmp
add
int
add
jmp
nop
nop
jae
int
sub
cld
clc
repnz
nop
nop
jae
mul
dec
add
jp
add
jae
repnz
nop
nop
jae
leave
xor
jg
inc
in
repnz
nop
nop
jae
add
inc
jnp
add
imul
mov
xchg
ret
int
ret
xchg
jl
fisttpll
test
in
clc
repnz
nop
nop
jae
leave
fadd
xlat
jmp
xchg
jg
add
orl
add
xchg
in
jecxz
add
add
push
mov
xchg
ret
add
and
repnz
imul
clc
repnz
nop
nop
jae
add
inc
dec
push
mov
xchg
ret
add
push
add
ret
add
lea
nop
push
mov
leave
nop
jmp
faddl
adc
jne
clc
repnz
nop
nop
jae
add
and
add
clc
repnz
nop
nop
jae
jp
xorl
cmp
push
inc
add
clc
repnz
nop
nop
jae
jle
add
add
nop
nop
jae
roll
xchg
push
push
or
push
nop
push
mov
leave
nop
jmp
add
or
imul
cld
nop
nop
jae
in
in
xor
add
in
leave
nop
jmp
filds
add
jg
faddl
inc
add
clc
repnz
nop
nop
jae
in
add
test
xor
int
add
xchg
push
push
mov
xchg
ret
leave
testl
and
pusha
clc
repnz
nop
nop
jae
in
sub
mov
push
add
clc
repnz
nop
nop
jae
add
testl
repnz
nop
nop
jae
jnp
in
add
add
cmpl
nop
push
mov
leave
nop
jmp
shr
jp
pop
fisubrs
push
mov
xchg
ret
add
add
jg
xchg
add
popa
clc
repnz
nop
nop
jae
loop
add
add
out
jne
clc
repnz
nop
nop
jae
jg
in
cmpsl
add
nop
push
mov
leave
nop
jmp
mov
inc
jo
dec
add
xchg
inc
add
and
and
add
push
mov
xchg
ret
add
roll
add
add
add
push
mov
xchg
ret
add
xchg
add
add
loope
rclb
pop
jp
add
mov
int
sbb
repnz
nop
nop
jae
in
addl
ret
call
clc
repnz
nop
nop
jae
add
add
push
add
fs
xchg
pop
clc
repnz
nop
nop
jae
add
fadd
add
sub
pushl
push
mov
xchg
ret
add
add
add
dec
fwait
clc
repnz
nop
nop
jae
add
add
or
jmp
addr16
inc
add
add
add
add
add
nop
nop
jae
mov
mov
imul
cld
nop
nop
jae
add
add
add
push
mov
xchg
ret
in
in
pop
add
add
mov
push
mov
xchg
ret
xchg
mov
dec
test
repnz
nop
nop
jae
faddl
jle
mov
lods
mov
clc
repnz
nop
nop
jae
add
in
jle
pop
aas
mov
push
mov
xchg
ret
ret
add
jnp
call
nop
push
mov
leave
nop
jmp
add
add
es
clc
repnz
nop
nop
jae
notl
jae
clc
repnz
nop
nop
jae
movb
jnp
ret
icebp
or
sbb
add
clc
repnz
nop
nop
jae
add
fisttps
rep
clc
repnz
nop
nop
jae
ret
dec
mov
sbb
cld
nop
nop
jae
jle
add
fsubrl
sbb
clc
repnz
nop
nop
jae
jle
xchg
xchg
jnp
ret
mov
clc
repnz
nop
nop
jae
add
add
add
and
js
ljmp
add
add
add
mov
sub
ja
popa
inc
add
add
add
add
push
mov
leave
nop
jmp
add
filds
add
add
add
add
lea
nop
push
mov
leave
nop
jmp
fdivl
add
and
pop
push
mov
xchg
ret
xchg
mov
and
add
mov
call
push
mov
leave
nop
jmp
adc
add
ds
push
clc
repnz
nop
nop
jae
xor
add
in
mov
add
add
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
repnz
fdivr
fistpl
clc
repnz
nop
nop
jae
add
jle
xchg
jle
pop
clc
repnz
nop
nop
jae
dec
add
add
mov
rclb
daa
ja
add
add
test
addr16
add
mov
push
mov
xchg
ret
repnz
add
sub
fdivrs
push
push
mov
xchg
ret
add
add
add
aaa
xor
clc
repnz
nop
nop
jae
add
add
jnp
jbe
mov
clc
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
add
dec
add
sti
add
add
nop
push
mov
leave
nop
jmp
mov
add
lods
sti
fistpl
push
mov
xchg
ret
add
add
add
loope
call
inc
add
add
bound
testl
cld
nop
nop
jae
loop
mov
add
call
nop
push
mov
leave
nop
jmp
add
add
adc
outsb
add
add
clc
repnz
nop
nop
jae
add
add
add
add
decl
push
mov
xchg
ret
add
out
mov
clc
repnz
nop
nop
jae
jnp
add
add
arpl
add
repnz
nop
nop
jae
in
add
clc
repnz
nop
nop
jae
test
sub
rcrl
stos
clc
repnz
nop
nop
jae
add
inc
and
leave
pop
xchg
lods
gs
clc
repnz
nop
nop
jae
add
add
out
jne
clc
repnz
nop
nop
jae
filds
add
clc
nop
push
mov
leave
nop
jmp
add
add
add
mov
clc
repnz
nop
nop
jae
icebp
add
add
fistpl
clc
repnz
nop
nop
jae
fsubr
add
jnp
sub
clc
repnz
nop
nop
jae
add
ret
push
add
fwait
clc
repnz
nop
nop
jae
mov
jle
sbb
repz
repnz
nop
nop
jae
faddl
sub
add
add
push
mov
xchg
ret
movb
cmp
decl
cld
nop
nop
jae
dec
pop
add
add
fwait
clc
repnz
nop
nop
jae
add
addr16
jp
add
pop
push
mov
xchg
ret
addr16
fimuls
push
add
repnz
nop
nop
jae
add
add
mov
mov
xchg
ret
mov
mov
and
rcll
repnz
nop
nop
jae
add
jg
add
fwait
mov
clc
repnz
nop
nop
jae
xchg
add
add
in
movzwl
nop
push
mov
leave
nop
jmp
sub
add
lcall
mov
in
xor
icebp
loop
add
add
sbb
repnz
nop
nop
jae
repnz
add
repnz
nop
nop
jae
add
add
mov
add
repnz
nop
nop
jae
jle
or
add
es
nop
push
mov
leave
nop
jmp
inc
movb
add
sahf
xor
lods
sub
or
jae
nop
push
mov
leave
nop
jmp
add
add
sub
rol
clc
repnz
nop
nop
jae
andl
push
mov
mov
clc
repnz
nop
nop
jae
mov
in
inc
nop
push
mov
leave
nop
jmp
or
add
fmull
push
mov
xchg
ret
add
rol
ret
jle
sub
adc
nop
push
mov
leave
nop
jmp
sarl
add
roll
addb
cmp
ret
push
add
add
add
mov
push
mov
leave
nop
jmp
mov
mov
inc
adc
push
mov
leave
nop
jmp
jle
add
xorps
xchg
ret
add
or
clc
repnz
nop
nop
jae
add
add
movsl
clc
repnz
nop
nop
jae
add
jle
jp
jns
dec
adc
push
mov
xchg
ret
add
mov
add
loop
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
add
jp
add
mov
xchg
ret
int
loop
add
sub
loopne
sbb
clc
repnz
nop
nop
jae
xchg
add
add
out
add
sbb
fistl
repnz
nop
nop
jae
add
add
add
sar
incl
inc
inc
ror
add
add
xchg
pop
mov
outsb
add
dec
push
nop
push
mov
leave
nop
jmp
adc
test
clc
repnz
nop
nop
jae
jle
add
ret
push
add
add
push
mov
leave
nop
jmp
ret
roll
add
mov
push
nop
push
mov
leave
nop
jmp
mov
add
push
push
mov
xchg
ret
and
xchg
mov
add
bound
sbb
arpl
call
inc
add
push
xchg
add
fiadds
add
call
clc
repnz
nop
nop
jae
loop
xchg
add
nop
nop
jae
mov
sub
mov
sub
lea
test
clc
repnz
nop
nop
jae
add
dec
lsl
clc
repnz
nop
nop
jae
icebp
add
add
inc
add
sahf
add
verw
mov
push
add
sub
adc
jb
std
fidivl
push
add
and
data16
sbb
ja
dec
sti
sub
jo
test
add
rcrb
adc
add
xchg
mov
arpl
popf
adc
ret
sub
adcb
sbbb
add
mov
or
mov
add
loopne
mov
into
inc
add
mov
sbb
add
clc
pop
scas
or
fcoms
add
dec
or
jo
hlt
dec
add
pusha
add
inc
cmpsb
movsl
pushl
rcrl
lds
push
add
cli
enter
pop
dec
stc
repnz
sahf
outsb
add
sarb
dec
pop
add
mov
mov
add
mul
repz
xchg
out
repz
add
sub
push
jmp
xchg
jo
enter
adc
in
add
add
sahf
push
add
add
fisttps
add
mov
jo
iret
cmpsl
popf
jbe
icebp
lcall
add
out
les
gs
add
add
jno
and
mov
aas
ja
loopne
add
das
mov
add
and
xchg
adcb
add
add
push
pop
add
add
mov
mov
adc
rcrl
stos
adc
jnp
add
add
cmpsl
add
in
ret
and
insl
fildl
mov
popf
dec
add
jb
cmc
shll
push
das
es
add
xor
pop
flds
xlat
fstpt
add
popa
in
xor
add
xchg
sahf
xchg
fisttpl
jns
sbb
push
aaa
call
xor
jbe
adc
add
lds
outsl
mov
adc
push
adc
and
xchg
mov
mov
cmp
push
sub
jge
mov
stos
inc
out
add
push
jno
xchg
push
push
add
add
out
shrb
movsb
stos
dec
test
fwait
push
or
shlb
sahf
clc
cmp
push
dec
add
xor
inc
add
pop
dec
add
sbb
daa
or
or
fsubrl
and
icebp
or
sbb
movsb
xchg
pop
iret
sahf
inc
ja
add
add
nop
adc
add
add
or
xlat
out
mov
jbe
enter
inc
add
add
js
mov
adc
call
jge
pop
add
lahf
mov
mov
xchg
stos
push
add
adc
test
movsl
enter
fisubl
add
aad
mov
xchg
stc
mov
add
add
add
sti
cmpsl
cmc
xor
pop
add
add
add
adc
mov
or
lods
xor
pop
add
cmpsl
pop
xchg
int3
mov
ret
in
pop
cld
data16
adc
push
add
test
xchg
imul
popa
fstps
inc
add
add
int
add
add
shrb
mulb
add
aam
add
fnstsw
mov
add
or
mov
fabs
push
mov
push
add
leave
arpl
add
pop
rolb
xor
call
push
arpl
add
lds
arpl
mov
add
shl
lds
aaa
cmc
xor
pop
cmpb
stos
push
cli
lock
and
loope
aad
add
cmp
lods
mov
cmp
cwtl
pop
inc
nop
xchg
pushf
scas
gs
add
jns
dec
mov
or
int
add
nop
dec
add
in
adc
jne
icebp
push
push
add
lret
mov
mov
lods
push
add
and
dec
add
xor
pop
ja
add
dec
mov
mov
test
or
add
dec
add
mov
addr16
add
jne
add
pop
cvtps2pd
pop
add
and
jmp
cmp
mov
and
test
push
add
push
pushf
and
adc
mov
inc
icebp
dec
add
mov
test
cmpsb
xchg
pushf
daa
adc
mov
adc
inc
adc
or
or
add
add
stos
data16
loope
aam
add
add
xor
push
fs
push
out
fstpt
xchg
xor
mov
insb
add
add
inc
lds
scas
flds
sbb
and
jne
add
add
cld
mov
or
fmul
gs
sub
in
popa
clc
mov
fimull
add
mov
inc
movsl
int
and
sbb
add
out
imul
push
mov
pushf
rcl
add
add
xchg
clc
enter
or
or
sbb
bound
pop
sub
add
add
jns
add
cmpsb
dec
add
daa
xchg
inc
add
flds
add
icebp
clc
pop
add
pusha
add
cmp
adc
cmpsb
sbb
data16
int3
cmpsl
clc
xchg
pop
add
sbb
push
add
shlb
cmp
or
stos
xchg
mov
or
pop
add
jp
adc
jae
add
pop
add
push
add
add
imul
add
pop
and
mov
cmp
push
bound
and
jnp
add
add
jae
add
add
or
cmp
and
loopne
and
gs
add
inc
adc
mov
rcl
cs
sbb
cmpsb
mov
and
iret
sub
lods
sbb
mov
jg
rclb
jno
xor
adc
push
add
add
dec
add
mov
ret
lea
xchg
leave
out
xor
ret
call
add
fdivrl
add
lret
gs
in
mov
adc
add
and
xchg
jmp
sbb
ja
add
add
dec
add
add
or
mov
add
aad
add
jo
push
out
adc
add
jne
mov
push
add
jnp
jp
dec
or
push
add
enter
add
push
jae
add
mov
sahf
dec
mov
add
js
xor
mov
mov
add
js
mov
push
lea
movsl
aad
add
dec
add
insl
repnz
sti
into
sub
xchg
push
add
or
mov
add
xorl
pop
mov
jle
add
add
sbb
sbb
add
lods
into
jmp
add
enter
nopl
add
add
insb
add
inc
add
subl
stc
jecxz
add
shlb
add
js
mov
add
jno
pop
add
adc
add
gs
mov
andl
dec
add
add
or
pop
add
inc
add
jnp
mov
add
cmp
add
jge
leave
inc
aam
add
pop
inc
in
lods
push
cmp
sub
push
add
pop
add
fimuls
mov
notb
lods
arpl
inc
add
aam
adc
imul
mov
pushf
movsl
into
lea
cli
mov
adc
adc
add
add
add
mov
arpl
sbb
sahf
fsubl
add
pop
add
xchg
aaa
in
add
ret
pop
mov
mov
mov
mov
add
lods
iret
add
pop
jge
xor
pop
mov
jmp
notb
add
icebp
inc
add
int
add
fwait
mov
dec
add
sti
xor
add
add
xor
daa
mov
arpl
inc
sbb
mov
add
test
jnp
add
add
adc
test
add
jl
daa
push
add
push
sbb
ljmp
test
ret
or
add
cmpb
stos
in
jnp
sarl
loope
add
imul
cltd
nop
jmp
add
pop
sahf
aas
push
add
add
test
dec
add
into
roll
cmpsb
sarb
loopne
mov
repnz
add
add
lock
sub
nop
push
add
lea
add
dec
or
roll
aad
in
fcomp
shr
mov
or
lahf
push
add
addb
psrlq
cld
ss
push
cmp
jmp
daa
aad
add
fdivrp
push
add
add
dec
add
xor
xchg
nop
mov
mov
jnp
add
sub
movsb
movsb
cld
and
rcrb
iret
enter
notb
add
add
xchg
dec
lcall
cli
and
dec
inc
lock
add
jns
add
pop
add
jns
addl
jo
loope
fsubl
add
adc
sub
xlat
outsb
add
add
pop
xchg
outsb
add
jp
lock
add
pop
adc
add
popf
sub
add
cmp
lahf
ja
and
sbb
add
add
icebp
jb
rorb
add
mov
add
add
add
dec
add
or
insl
push
cmp
insl
sub
repnz
dec
adc
push
add
fdivrl
add
dec
add
inc
add
ljmp
add
movsb
dec
jecxz
sbb
out
add
mov
xchg
inc
or
es
adc
adc
clc
lds
fcoml
nop
xchg
js
clc
int3
ja
ja
fnsave
add
sbb
add
add
test
add
std
add
in
jnp
fsubs
jnp
push
shl
add
pop
sti
out
faddp
decl
cmpsb
mov
jno
jmp
push
add
pusha
add
fdivrs
add
stc
mov
and
add
cmp
add
popa
sti
cmp
mov
xchg
pop
mov
jno
cmpsb
xchg
pop
add
fdivl
ljmp
sarl
repz
or
loopne
cmp
add
jg
out
add
insl
adc
mov
add
ja
xchg
mov
mov
or
push
jg
movsb
xor
test
adc
lret
lock
lret
adc
hlt
add
hlt
sub
add
push
repz
add
sub
sub
in
adc
loope
inc
data16
pop
inc
add
and
scas
or
pushf
adc
mov
xlat
outsb
add
and
je
xor
dec
add
or
rdtsc
shrl
out
sbb
adc
add
mov
jecxz
push
aad
sub
jl
mov
jbe
adc
stos
cmp
fdivl
shll
add
sti
cmp
push
add
adc
testb
cmp
aaa
lods
inc
add
add
add
add
xor
int3
fisubrl
sbb
sbb
scas
cmp
cmp
fsubs
adcb
add
add
sub
cmp
add
add
andl
add
xchg
je
mov
sbb
sbb
sbb
xchg
xor
aad
pop
add
add
fidivrl
jbe
sub
mov
adc
sbb
add
add
cmp
jp
sbb
add
dec
add
or
negb
ljmp
add
lods
jb
adc
loop
add
fstl
add
jns
add
add
fucomip
jo
in
es
lods
in
add
add
or
ffreep
cltd
and
daa
insl
xor
movsl
lahf
call
add
js
cmp
int
add
mov
adc
add
aad
add
add
pop
lcall
sbb
jae
leave
sarb
sub
outsl
pop
stos
sbbb
repnz
test
and
and
jecxz
add
add
sbb
add
cld
insb
add
add
add
push
add
clc
dec
add
add
add
in
pop
cltd
das
stos
ret
insl
aas
pop
add
sti
mov
fucomi
mov
push
test
add
jmp
cmp
and
mov
add
imulb
mov
pusha
add
insl
stc
mov
add
mov
add
jo
imul
add
cmp
add
mov
and
or
lret
je
sbb
test
add
xchg
hlt
leave
stos
xor
xchg
mov
push
add
cmp
dec
add
jbe
xchg
add
rcrl
aam
test
add
add
add
imul
movsl
mov
add
add
cwtl
lods
mov
add
adc
xor
add
add
adc
out
fs
popa
in
cmpsl
xchg
mov
leave
leave
fistps
xchg
mov
seta
push
addl
les
cmp
jp
jns
jno
add
pop
add
andl
int3
cmp
test
int3
paddb
js
sbb
cmc
lock
hlt
mov
shlb
mov
and
mov
mov
mov
out
mov
sbbb
ror
and
shlb
test
or
sub
sub
cli
dec
add
outsb
add
cmp
fidivrl
xchg
xor
out
cwtl
imul
insl
into
das
push
add
jbe
push
sar
data16
push
add
add
jo
dec
add
pop
and
mov
jmp
add
int
icebp
mov
add
fs
mov
push
pop
mov
cmp
adc
pop
sti
subl
add
add
aas
adc
add
icebp
lock
sbb
inc
imul
xchg
in
add
test
jge
add
adc
vrcpps
add
fbstp
adc
lret
repz
outsb
add
loopne
iret
inc
add
xchg
lahf
gs
add
add
xsavec
add
or
cmp
rcll
add
daa
sti
mov
add
rolb
sub
add
cmpsb
jno
sub
mov
push
inc
push
add
pusha
add
add
out
xor
dec
add
add
cltd
lods
in
shlb
xor
add
lcall
les
xchg
sub
pop
add
add
add
aas
hlt
mov
add
loope
stos
pop
xchg
out
mov
mov
js
stos
hlt
aaa
mov
add
mov
in
add
cwtl
push
add
add
and
shrb
stc
dec
and
dec
xlat
xchg
test
push
sbb
sbb
add
sbb
or
sub
add
add
loopne
dec
push
add
or
xor
loope
popf
mov
pop
add
aaa
xor
xor
outsb
add
add
mov
cmp
call
popa
cmp
add
add
je
inc
movzwl
fwait
divl
shl
xchg
cmp
cmp
dec
add
add
add
push
loopne
loop
daa
sbb
test
rorl
fnstcw
add
lock
dec
add
int3
pop
cmc
xor
dec
add
mov
data16
outsl
dec
add
in
out
add
adc
mov
adc
xor
popf
sub
cmp
sbb
cmp
in
and
daa
sarb
mov
lahf
dec
hlt
xor
dec
push
add
add
jo
pop
notl
add
push
add
cmp
add
add
add
or
or
mov
add
scas
add
jle
lds
ja
fildll
iret
sub
jl
xchg
jbe
add
mov
sub
add
xchg
cmp
dec
add
dec
repnz
add
add
test
xchg
stos
fstl
xor
push
add
inc
add
mov
mov
iret
dec
lds
lahf
adc
inc
stc
shr
popa
in
mov
scas
popf
jne
mov
testl
lds
loope
fldt
add
add
add
jae
add
repz
imul
sub
cmp
inc
test
push
add
sbb
mov
jne
adc
add
or
pushf
sub
loop
lds
data16
or
add
and
insb
add
daa
add
sbb
outsl
rol
xor
clc
lret
andb
loope
out
aas
and
in
mov
sub
aad
mov
outsb
add
add
add
arpl
repz
push
mov
add
lock
scas
int
insl
cltd
jmp
push
add
test
mov
pop
decb
mov
xor
shrb
sbb
roll
loopne
aaa
aas
pop
add
add
cmp
push
add
inc
xchg
add
and
neg
add
roll
add
andl
inc
add
repz
add
sbb
lds
jecxz
jmp
mov
xchg
mov
add
add
and
xchg
xchg
gs
add
pop
add
add
movsl
and
xchg
jp
lret
mov
sbb
fcoml
fcmovnu
or
pop
xchg
add
jmp
mov
mov
lock
xchg
push
dec
add
add
add
pushf
aad
add
pop
push
add
in
add
jmp
add
jae
cmp
jmp
or
cld
clc
in
test
add
fidivrl
inc
add
add
subb
fistps
sbb
add
stc
inc
push
add
fwait
xor
cld
aad
ljmp
xor
adc
cmc
outsl
cwtl
lahf
hlt
xchg
enter
mov
mov
add
bound
outsl
jecxz
add
add
aas
xor
or
fimull
in
add
jg
daa
out
push
xor
scas
sub
add
pop
mov
adc
movsb
push
add
add
push
xlat
xor
dec
cmpsl
push
mov
mov
inc
add
jbe
inc
add
add
add
cmp
mulb
sbb
lds
add
push
scas
xor
add
push
add
mov
add
addr16
adc
fdivs
add
mov
add
add
jno
nop
into
dec
cmp
push
add
sub
dec
add
add
cltd
and
add
scas
xchg
push
add
lcall
sub
mov
sbb
pushf
mov
add
cmp
loope
inc
stc
js
adc
insb
add
lods
mov
outsb
add
mov
adc
lret
sub
jl
aas
push
cmp
popf
ret
out
mov
pop
add
add
jns
fldenv
add
add
add
add
add
repz
push
add
xor
mov
insb
add
cli
fsubs
dec
push
add
push
add
add
add
movsb
pop
add
add
adc
sbb
xchg
mov
pop
cmc
cmp
sub
pop
add
jl
in
push
add
sbb
mov
lret
stos
es
flds
lea
mov
push
add
xchg
mov
push
std
sub
sbb
push
add
rcll
sub
or
add
add
lea
mov
add
lds
in
pop
jnp
shr
mov
add
add
add
adc
dec
add
dec
rcrb
mov
pop
js
xchg
add
inc
mov
add
icebp
test
sbb
loopne
dec
fnstsw
int
mov
add
sub
cmp
push
cmp
sti
jne
aaa
inc
add
icebp
xchg
jl
into
add
popl
mov
sub
imul
icebp
iret
test
add
insl
aad
xchg
sbb
mov
xlat
sub
sub
gs
push
add
mov
add
mov
xchg
mov
movsb
xor
mov
mov
push
add
jmp
pop
cmp
mov
push
xlat
push
add
adc
sub
inc
adc
jg
xor
cli
sbb
scas
xor
cmp
add
inc
add
and
cltd
hlt
mov
jnp
add
xchg
push
add
add
addl
add
or
xchg
lods
or
mov
jns
or
scas
sub
pushf
inc
sbb
scas
popa
in
pop
push
aad
mov
pop
fwait
jl
or
inc
add
loop
ffreep
fisubl
add
test
int3
fwait
outsb
add
bnd
add
jno
test
adc
push
dec
add
xor
aam
std
outsl
jae
gs
push
add
inc
add
fsts
add
sbb
cld
sbb
in
cmp
xchg
leave
push
add
or
mov
add
mov
push
jb
into
clc
push
pop
pop
add
add
jnp
dec
add
jp
adc
je
lcall
arpl
neg
cmp
rcll
jno
stos
jb
aad
add
data16
jae
add
movsl
rclb
pop
adc
lods
test
add
push
add
sub
mov
mov
add
sub
test
jo
in
add
push
add
mov
add
mov
sub
cmpsb
mov
adc
or
inc
add
pushf
jg
add
scas
and
movsl
or
dec
mov
push
jecxz
mov
mov
enter
add
adc
loope
ja
int
add
add
xchg
cs
insb
add
inc
add
add
add
mov
push
mov
add
and
xor
pop
xchg
ds
push
sub
xchg
push
add
inc
add
add
add
fsubr
jecxz
sbb
jo
addr16
repz
movsb
inc
add
popa
pop
add
into
pop
mov
cwtl
push
add
sub
insl
pop
subb
add
mov
outsl
movsl
arpl
fldcw
jns
mov
cmp
cmp
xor
adc
xchg
pop
push
add
jg
add
je
dec
out
call
mov
add
xchg
mov
pop
call
mov
rol
add
lcall
xchg
insl
jno
dec
add
push
add
xchg
dec
add
or
xor
add
xchg
push
mov
xor
add
and
push
add
add
mov
or
fildl
mov
imul
pop
add
and
std
iret
call
inc
add
jecxz
push
sbb
js
sub
lahf
xor
pop
fstpt
push
fadd
mov
nop
push
movsl
jnp
inc
sbb
cmp
xchg
cmpsb
dec
jmp
add
add
sti
call
sbb
test
cmp
jae
add
dec
mov
aad
add
add
ja
sub
inc
test
add
push
add
add
add
add
mov
imul
jge
or
push
loop
call
add
insb
add
fiaddl
adc
mov
add
add
aas
sub
jns
xchg
out
sbb
clc
push
cld
push
add
add
dec
and
add
push
add
xlat
mov
cli
cmc
dec
imul
add
sub
push
add
add
add
ja
mov
add
outsb
add
sarb
out
add
daa
and
test
mov
inc
add
ret
inc
adc
sub
dec
add
pop
cwtl
push
add
jb
dec
add
xchg
imull
xchg
cmp
mov
push
int3
jp
add
arpl
push
test
add
clc
std
into
in
cmpsl
repz
adc
and
or
mov
pop
aas
fs
cmp
in
pop
js
dec
add
add
or
jecxz
dec
mov
add
dec
pop
add
ja
add
adc
pop
push
imul
sti
test
add
jle
lahf
cmc
dec
add
arpl
imul
jbe
mov
and
sub
xlat
imul
insl
out
add
pop
enter
test
add
add
ret
cld
dec
add
jmp
xchg
js
and
mov
hlt
push
add
push
add
add
add
popf
ret
add
add
xor
aam
into
ja
add
loop
stos
adc
ljmp
add
scas
xor
jae
add
movsb
cmp
in
or
in
sahf
ljmp
or
scas
sbb
or
xchg
rcrb
in
mov
and
ror
add
add
jmp
lcall
fbld
cs
mov
stos
bound
hlt
mov
xor
pop
add
add
xchg
loope
repnz
xchg
push
int
xchg
add
data16
dec
sti
iret
andb
add
xchg
adc
sbb
and
add
arpl
inc
push
add
xor
arpl
imul
adc
lods
stos
je
roll
repnz
add
pop
bound
loope
das
sti
add
sbb
inc
inc
gs
add
pop
adc
pop
add
add
xchg
xor
loop
add
andl
stos
mov
add
jp
mov
add
out
mov
push
add
aam
add
add
add
sub
in
add
int
dec
add
add
sbb
cmpsb
loopne
jge
iret
test
pop
xchg
movsb
pusha
add
push
sbb
xchg
adc
data16
scas
add
aam
add
int3
in
rorl
test
movsb
jge
push
sub
stos
and
adc
xchg
aas
xchg
aaa
dec
add
pop
add
inc
lock
jge
xor
lahf
shr
xchg
js
mov
mov
mov
add
mov
add
aas
movsb
sbb
mov
mov
add
xor
pop
pop
pop
or
mov
add
dec
add
mov
sarb
mov
add
test
or
int3
push
add
add
shr
add
add
push
add
and
pop
add
or
add
sbb
scas
dec
adc
mov
test
das
and
add
pop
add
xchg
cmp
cmp
add
fisubl
mov
movb
add
jmp
add
pop
cld
iret
hlt
ja
data16
add
add
xorb
add
shl
cli
xor
ja
clc
repz
sub
insb
add
or
fidivrl
inc
add
sub
sti
push
add
jbe
xchg
loop
add
push
add
add
sbb
add
add
daa
xchg
into
loope
xchg
dec
add
shl
clc
jno
and
mov
data16
push
add
mov
popa
dec
add
les
jle
dec
add
xchg
mov
ret
in
and
xchg
inc
add
pop
xchg
std
pop
ja
add
fbstp
add
mov
push
call
or
pusha
add
jbe
bound
mov
in
incl
add
ret
imul
mov
mov
mov
jp
or
loopne
xor
add
push
cmpsl
sbb
sub
sahf
leave
add
mov
lock
mov
fbstp
pop
call
ljmp
mov
and
xor
push
add
sbb
insl
push
aam
adc
jl
push
mov
lcall
add
mov
rcll
in
sbb
test
inc
mov
int
mov
add
lret
and
jg
mov
fldenv
mov
sbb
daa
inc
add
loopne
jne
add
add
add
popf
bound
xor
pop
add
inc
add
mov
cwtl
cmp
jns
fsubs
add
arpl
push
add
add
mov
cmpsl
jne
out
aam
mov
adcl
add
add
inc
ret
xchg
and
add
adc
inc
add
lret
popa
xchg
outsl
jno
pushf
jnp
fs
mov
shr
sbbl
pop
add
cwtl
jo
jp
stc
ret
mov
inc
cmp
add
dec
add
add
add
adc
mov
add
add
incl
lods
lret
dec
add
sahf
push
add
mov
and
popf
sbb
inc
add
add
lcall
inc
add
fwait
push
add
pop
add
subl
mov
lds
arpl
inc
mov
jl
inc
pop
push
add
add
add
loopne
inc
add
push
add
movsb
and
pop
imul
jg
xor
add
ja
call
leave
jge
xchg
mov
add
mov
inc
loope
mov
lea
mov
add
add
cmpb
js
ficoml
sbb
dec
add
arpl
sbb
add
jp
pop
loopne
add
into
inc
mov
add
fldt
add
inc
add
add
enter
into
fnsave
add
add
add
imul
add
jg
mov
dec
add
stc
shll
add
cmpb
int3
pop
add
into
jnp
add
add
sub
pop
cmpsl
and
outsl
lcall
ret
dec
add
add
and
loop
lds
xchg
nop
int3
cmp
jo
test
mov
fisttpll
iret
int
lcall
out
test
test
mov
movsl
lods
add
repnz
repnz
stc
lds
fsubs
add
add
xor
push
addr16
inc
lea
add
ljmp
add
pop
test
sbb
pop
add
add
mov
add
xchg
mov
add
js
mov
add
add
sbb
lds
xor
push
test
out
jo
fistl
sbb
cmp
or
add
add
outsl
fisttpll
push
xor
dec
pushf
mov
xor
sti
adc
pop
xchg
nop
add
pop
add
pop
stos
adc
xchg
insb
add
aas
ss
inc
in
pop
add
add
insl
fcoms
test
add
test
add
mov
add
dec
add
int
add
add
dec
dec
loopne
add
mov
add
add
out
incb
add
mov
out
mov
mov
jle
cmpsl
repz
cmp
outsb
add
into
ljmp
add
hlt
pop
or
cmpsb
je
cs
add
mov
sbb
pop
cmp
insb
add
fistps
jmp
das
lods
test
push
sub
and
pop
xlat
nop
mov
pushf
pushf
aaa
jmp
mov
in
xor
add
arpl
adc
inc
xchg
aad
sub
sbb
pop
add
add
pusha
add
xchg
stc
jbe
repz
add
dec
add
add
sub
mov
jge
test
and
sub
cwtl
idivl
pop
add
and
daa
push
popf
std
ljmp
or
mov
leave
jne
std
or
sub
adc
sub
std
loop
loop
add
add
jb
out
push
out
cmpsl
clc
mov
push
testb
dec
pop
add
add
idivb
dec
add
mov
neg
leave
adc
ret
xchg
mov
sqrtps
insl
out
ja
adc
cltd
push
add
push
add
add
jmp
mov
inc
add
fisttps
xor
jae
xchg
inc
jns
jg
add
add
sar
fmulp
and
sub
dec
dec
add
xchg
add
jle
iret
cltd
popa
pushf
pop
add
mov
add
add
or
add
mov
cmp
and
xchg
test
adcb
xor
dec
or
les
imul
fstl
add
mov
add
fsubrs
push
add
jb
iret
xor
sti
shrb
bound
aas
cmp
jo
jge
and
jp
outsl
mov
mov
scas
push
out
or
dec
add
add
add
dec
add
iret
jg
add
mov
add
out
popf
jecxz
pop
add
or
fistpll
lock
lcall
mov
adc
ja
add
fdivrl
xchg
jns
add
and
add
add
add
add
insb
add
inc
mov
pop
add
add
add
jo
aaa
sub
cmp
mov
add
adc
loop
xor
add
shlb
lods
lea
cmc
inc
add
add
jp
add
nop
xor
add
xor
les
mov
fcomp
repnz
fwait
pop
orl
add
std
dec
add
aaa
rcrb
je
testb
aaa
outsb
add
and
roll
pop
iret
in
mov
cmc
push
sti
lock
add
add
loopne
mov
sbb
lea
cwtl
aaa
or
mov
dec
adc
aas
push
add
or
outsb
add
dec
add
cmc
push
add
jg
push
cld
mov
xchg
movsb
lods
icebp
mov
add
add
jae
xor
std
lds
cmp
into
stos
inc
add
mov
subb
popf
inc
sbb
fwait
and
insl
stc
fsubl
lahf
test
add
adcb
add
add
push
test
dec
xchg
jae
mov
add
add
pop
add
ja
lcall
push
add
xor
mov
mov
pop
push
and
mov
out
add
popf
xlat
fwait
lahf
push
add
add
add
push
shl
fisubl
mov
addr16
pop
mov
xor
sbb
int
lock
mov
xchg
mov
repz
out
push
and
in
add
and
push
add
sbb
add
add
adc
rcll
add
add
dec
add
xor
sahf
add
push
add
add
inc
add
push
sahf
push
js
leave
pushf
cmp
loope
add
add
ret
xchg
sub
insl
shr
mov
popa
hlt
xchg
mov
add
add
fcmovne
pop
xchg
loope
inc
data16
cli
adc
pop
cmpsb
dec
idivb
add
test
add
add
add
dec
xor
dec
push
add
cmp
js
sbb
add
adc
sti
pop
push
add
insb
add
add
xor
addr16
aad
add
push
xor
add
add
add
fdivrs
cmp
into
lods
lea
and
and
and
scas
lahf
adc
mov
lds
add
addr16
add
sbbb
cmpsl
cmpsl
inc
pop
mov
add
repz
lahf
rorl
add
pop
ja
lds
and
push
add
cmc
cmp
in
and
movsb
insl
and
pop
push
add
add
xor
mov
xchg
andb
add
clc
ljmp
sub
inc
add
add
add
sbb
jmp
scas
and
lods
scas
inc
add
add
add
inc
add
add
push
add
lock
mov
inc
aaa
das
daa
int
add
stos
mov
inc
add
push
lret
push
push
add
aaa
out
mov
jle
pop
pop
dec
add
ret
xor
cmpsb
adc
jno
mov
fiadds
outsl
add
add
xchg
jae
iret
fisttps
mov
cld
sarb
add
jg
and
add
mov
rcrb
sbb
or
scas
adc
xchg
imul
mov
sub
pop
movsb
loopne
add
sub
push
push
add
add
push
add
add
mov
jb
loope
data16
movsb
adcb
add
mov
jge
add
add
add
inc
add
add
add
clc
lcall
scas
sbb
negb
jbe
mov
jmp
jns
add
sub
add
mov
sbb
hlt
adc
lcall
add
push
iret
jmp
leave
fwait
repnz
or
jp
jp
sub
pusha
add
sbbl
fisubrs
cmp
popa
scas
xchg
cli
add
into
scas
mov
popf
insb
add
jmp
cli
add
mov
add
lds
xchg
pop
inc
xorb
add
mov
data16
add
jb
jo
out
add
add
stc
add
add
addr16
xchg
loopne
vsubsd
cmc
mov
insb
add
xlat
cmp
xor
xchg
stos
push
dec
add
pop
gs
movsb
leave
cld
or
mov
sbb
hlt
inc
fstp
push
add
pop
pusha
add
std
test
sbb
arpl
lahf
add
roll
add
add
adc
aaa
add
dec
xchg
js
scas
adc
add
cmp
mov
cmc
mov
dec
add
mov
add
or
lods
and
pop
add
notl
fidivrs
add
les
add
add
ficompl
lds
dec
xchg
popa
add
add
add
out
sti
mov
add
lret
call
jns
push
add
repnz
add
push
cmpl
add
add
inc
stos
aaa
push
add
imul
lock
arpl
or
inc
add
mov
testb
fwait
and
push
rcrb
xchg
sub
or
mov
in
add
mov
mov
add
int3
bound
loop
inc
pop
add
pushf
jo
das
or
sub
or
jnp
add
into
dec
add
sarb
leave
lcall
adc
idivl
imul
add
add
mov
rcrl
andl
les
add
in
add
add
aaa
pop
inc
or
lods
xchg
leave
fidivl
dec
add
and
mov
jo
push
jmp
inc
std
sbb
xorb
out
rolb
add
bnd
sub
aas
ss
test
stc
lcall
mov
mov
arpl
pop
add
jo
aaa
leave
or
pop
jg
add
xchg
lret
add
cltd
stos
fmull
jbe
add
sub
xor
xor
lock
add
inc
add
push
add
pop
add
pop
add
pushf
hlt
repnz
add
or
jno
cmp
sub
mov
insb
add
lret
lcall
xor
jg
sub
mov
pop
mov
loop
add
scas
cmp
dec
add
sub
popf
cmp
push
add
or
shlb
mov
sub
ret
jp
adc
popf
add
lahf
aam
add
cmp
jmp
or
sub
repz
not
fsubr
dec
add
cmp
and
stos
aas
idivb
push
add
mov
dec
bound
stos
or
cltd
mov
add
add
jmp
cwtl
and
sbb
mov
add
ret
data16
jp
mov
add
sub
lods
clc
inc
add
dec
inc
add
mov
add
mov
add
mov
cmp
mov
clc
cmc
pop
add
shlb
cmpsb
sub
xor
sub
add
hlt
pop
add
xor
movsl
add
roll
dec
add
or
sarl
mov
imul
fdivrp
jnp
sub
add
jle
and
rolb
shrl
pop
addr16
aad
add
push
add
dec
add
mov
add
add
repnz
add
ja
push
add
icebp
out
clc
into
cmp
push
add
xchg
add
pop
push
jb
adc
jmp
int
add
xchg
xchg
inc
add
add
ja
outsb
add
adc
testb
add
add
mov
jae
add
push
xor
popf
dec
iret
popl
xchg
lcall
add
xor
xlat
pop
aaa
inc
add
loope
pop
add
mov
decb
add
sti
jg
lret
add
pop
add
les
mov
add
sub
add
mov
fstps
add
add
mov
push
enter
shrl
enter
icebp
mov
add
pop
inc
pop
add
insb
add
clc
pop
inc
movb
arpl
daa
adc
sub
pop
daa
jno
inc
add
mov
fwait
xlat
mov
mov
add
xchg
ss
lods
test
add
lea
mov
xchg
in
dec
add
mov
out
out
aad
add
mov
and
lods
mov
je
outsb
add
cmp
mov
push
add
dec
xor
addr16
lea
xchg
loopne
into
nop
mov
push
add
add
sub
cmp
mov
ror
push
add
and
aad
or
mov
enter
aad
pop
sub
cmc
xor
or
jecxz
js
jl
lea
adc
mov
cmc
fcmovne
push
jo
lea
inc
add
sub
push
add
pop
neg
fisttpl
add
lds
pop
add
lock
jmp
inc
xor
add
jmp
ja
lret
scas
mov
rcll
fadds
add
lret
add
add
ficoml
mov
and
add
cmp
in
jne
movsb
fcmovnbe
jecxz
lcall
lods
mov
imul
sub
outsb
add
add
dec
add
in
add
fistpll
add
sub
mov
add
push
nop
sub
out
push
adc
into
cltd
pop
add
dec
add
push
add
and
adcb
add
add
add
loop
mov
push
add
or
xchg
push
add
imul
add
sub
sbb
mov
and
scas
iret
into
xchg
call
scas
jnp
adc
fbld
addr16
xlat
popa
and
sbb
mov
sub
add
jp
dec
add
mov
ja
jae
cltd
push
add
add
xlat
jp
dec
add
add
idivl
mov
jmp
add
add
xor
add
scas
andl
mov
push
push
inc
add
pop
add
aad
add
xchg
adc
jmp
mov
add
lahf
cmp
repz
pusha
add
cltd
ret
ret
add
lock
pop
add
insl
jne
add
in
add
or
add
aas
rcrl
jns
pushf
dec
add
inc
jmp
ss
cmp
add
xor
pop
add
add
add
sbb
sub
testb
sarl
xchg
cli
mov
add
mov
add
sbb
daa
out
cmc
cmp
sti
or
add
add
add
mov
loopne
stos
cltd
arpl
add
jmp
insb
add
or
in
cs
mov
inc
dec
roll
pop
jne
pop
aam
adc
lds
cmp
add
pop
add
mov
adc
mov
add
mov
dec
add
add
add
add
dec
add
add
inc
mov
add
add
test
push
add
mov
pop
push
add
cmp
das
inc
add
dec
push
add
add
cmp
cmpsl
dec
test
mov
add
add
add
pop
xchg
scas
sub
cmpsb
add
xorl
addr16
add
mov
mov
repz
aam
fmul
mov
ljmp
ret
in
add
loopne
out
stc
fsubs
dec
push
add
push
add
jbe
repz
adc
jae
fimull
add
cmp
das
lods
insl
mov
cmp
add
faddp
loope
popa
adc
sahf
cli
dec
sbb
mov
daa
pop
insl
adc
and
add
add
add
dec
add
add
adc
in
jp
pusha
add
xchg
dec
add
aam
add
mov
add
jb
inc
jnp
sbb
mov
popf
lahf
dec
add
movsb
cli
sub
in
les
add
mov
shl
sub
fmuls
push
add
add
je
and
add
int3
aaa
rcr
sbb
in
cmp
push
add
add
movsl
or
jecxz
add
les
jbe
pop
add
leave
xchg
sub
cmp
enter
cmc
mov
add
xor
cmp
lods
nop
and
lret
ret
cld
cmp
sub
add
add
dec
mov
add
cli
dec
add
in
add
xor
jae
test
cmp
add
jp
adc
sub
dec
xor
sub
add
lds
std
jb
cmp
sbb
jg
popa
test
add
add
fldenv
test
sub
xchg
fnstcw
add
add
cmpsl
add
lea
push
add
mov
pop
into
jg
add
das
stc
dec
xchg
add
add
mov
jnp
adc
mov
dec
and
fcmovne
sbb
add
xchg
sbb
jge
add
in
enter
add
push
add
add
lods
rcrl
add
cmp
lods
pop
lock
mov
pop
inc
add
lods
in
add
add
push
add
mov
push
add
cwtl
add
add
add
mov
cmp
add
add
jbe
mov
add
pop
add
add
mov
stos
adc
adc
xor
fcoml
pop
add
add
push
add
lahf
mov
jg
mov
lcall
add
es
sbb
add
pop
add
in
jnp
add
lret
mov
mov
add
outsb
add
ljmp
pop
rcl
mov
mov
ret
rcll
add
mov
cmp
lcall
add
adc
add
add
dec
xchg
xlat
repz
dec
enter
push
add
icebp
cmc
lods
inc
pop
add
mov
add
add
out
cli
arpl
add
lds
jg
pop
pop
int
mov
add
add
add
int3
mov
sbb
dec
xchg
int
lds
cltd
xor
dec
add
add
lods
push
add
jmp
sahf
das
in
dec
add
out
shll
add
mov
leave
cmpsl
rcr
out
pop
out
add
add
add
pushf
adc
pop
movb
ljmp
cli
gs
dec
add
mov
dec
mov
mov
add
pop
add
std
jle
loopne
pop
lock
sbb
or
dec
push
add
lahf
xchg
pop
inc
add
add
cmp
das
mov
xchg
cmp
jne
mov
xor
jne
movl
add
popa
push
add
fsubp
divl
add
add
aas
pop
add
jbe
sbb
mov
mov
imul
movsb
mov
out
add
add
int
inc
add
lahf
in
add
add
testb
add
mov
jbe
sti
or
setns
cmpsb
pop
add
mov
add
and
jmp
jge
sub
mov
xor
cmp
fnstenv
jb
scas
icebp
xorb
push
add
bound
inc
add
push
add
movb
jne
add
push
add
sub
lahf
popf
mov
push
add
sub
pop
movsb
push
add
add
jno
insl
pushf
lds
add
xchg
lock
fnstsw
jge
mov
add
push
jg
sbb
inc
movsb
or
sbb
jne
add
and
cmc
cmp
lret
das
add
inc
add
jge
add
add
add
xor
add
cmpsb
jecxz
xor
xor
mov
dec
imul
sti
aas
lret
nop
inc
idivb
nop
mov
ficompl
int
dec
add
scas
scas
test
add
jecxz
adc
or
call
mov
add
repz
add
das
sbb
das
xor
sahf
pop
add
adc
push
or
sbb
movsl
add
add
add
dec
into
or
push
cli
movsb
lret
lds
inc
inc
add
clc
mov
add
add
add
push
add
add
aas
std
jns
adc
sti
jo
bound
dec
add
add
and
nop
sbb
xchg
or
pop
xor
sbb
stc
cmp
inc
add
add
or
xchg
dec
add
push
roll
pop
add
add
mov
push
pop
add
not
push
add
cmc
imul
and
sub
sbb
std
out
sarl
arpl
loope
lahf
mov
cmpsb
jmp
leave
jnp
mov
mov
jp
icebp
adc
jb
inc
add
xlat
ja
xchg
pop
aam
xor
mov
ljmp
addl
add
jge
adc
popf
mov
insb
add
and
js
repz
repnz
mov
add
fdivrl
sbb
data16
sbb
lcall
sub
mov
add
sub
ret
mov
int3
inc
fisttpl
outsl
mov
outsb
add
add
hlt
movntps
jbe
inc
add
and
mul
sub
outsb
add
lods
xor
je
inc
add
add
ret
push
add
dec
add
popa
lahf
testb
es
push
add
cltd
loope
add
data16
out
icebp
jnp
jecxz
movsb
push
mov
add
add
mov
sbb
or
out
pop
adc
mov
mov
add
inc
add
mov
and
int3
divb
loopne
hlt
xor
ljmp
xchg
dec
fisubs
add
add
inc
mov
movsb
or
pop
add
insb
add
add
mov
nop
xor
inc
add
mov
add
add
into
jmp
mov
hlt
cmovp
sbb
mov
jae
aad
jnp
pop
add
fwait
dec
add
add
cmp
rcll
sub
inc
gs
arpl
pop
add
cli
inc
ljmp
jbe
arpl
pop
add
out
add
sbb
add
stc
out
xchg
pop
pop
and
push
stos
cs
mov
xor
sarb
add
aas
imulb
les
shl
out
cli
loope
sub
add
add
sbb
aad
add
cmp
and
sarl
add
fisttpll
inc
add
sub
add
cmp
ret
lock
mov
add
add
jnp
sub
pop
add
sbb
adc
or
fldl
mov
fsubrs
or
sahf
popa
je
pushf
shrl
in
lock
in
sub
add
add
mov
push
gs
fdivrl
into
dec
mov
xchg
in
add
hlt
or
jp
stos
cmc
mov
push
add
loopne
add
repz
add
add
add
sub
popf
fucomi
stos
push
add
and
push
add
inc
add
add
movsb
xlat
out
add
pop
shrl
add
cltd
clc
xor
add
test
fcompl
and
iret
jge
and
mov
add
mov
jb
pop
sahf
mov
add
add
aad
jp
imul
dec
add
hlt
addr16
mov
inc
push
add
in
stc
testb
jb
inc
mov
nop
out
add
and
cmp
ret
push
add
sub
jmp
dec
add
pop
add
jno
mov
add
mov
out
sub
push
add
in
out
fsubrs
das
push
mov
mov
sbb
add
cmpsl
adc
lret
jbe
or
inc
roll
push
xchg
cmp
add
inc
add
xchg
mov
addr16
cwtl
mov
inc
add
mov
int
data16
jmp
arpl
vmulss
movsb
lcall
test
add
add
sub
jg
add
and
adc
push
add
add
add
add
add
cmp
sub
add
xorl
cmpsl
adcb
jnp
rolb
add
add
aad
mull
add
fsubrs
fisubs
add
jae
sti
fnstenv
add
jg
xchg
hlt
pop
mov
inc
add
neg
and
mov
psubb
scas
scas
movsb
pop
add
pop
add
adc
sub
sub
lret
lods
and
icebp
roll
add
fsub
xchg
movsl
mov
rclb
xlat
sbbb
cmp
cmpsb
cmpsb
outsl
daa
add
pop
enter
add
fstpt
add
fdivrl
add
jp
xorb
cmpsl
pop
rorb
loop
push
add
lea
xchg
add
dec
add
gs
add
cmc
jp
push
add
dec
aad
push
pop
mov
add
add
dec
add
add
add
add
es
cmp
shll
sub
add
loopne
cmp
add
test
sbb
addb
out
mov
mov
mov
add
lock
add
add
fidivl
push
add
xchg
andb
push
add
sbb
mov
add
pop
add
xchg
mov
lret
cli
lahf
adc
mov
dec
shlb
add
sbb
adc
enter
add
inc
add
add
shl
or
lret
push
add
mov
jns
popf
jnp
ss
fdivrs
jecxz
add
push
js
test
add
add
dec
add
sub
mov
add
mov
push
jno
int
pop
and
mov
lret
jmp
in
sbb
inc
add
or
inc
add
sub
dec
add
add
lcall
outsb
add
add
jmp
out
push
mov
sbbl
jmp
popa
and
nop
lods
and
pop
add
in
pop
add
dec
lods
ja
clc
fcomp
add
iret
xor
cmp
and
add
push
fstpl
sti
jmp
cmc
lods
in
push
repz
stos
adc
cs
test
test
xor
add
pop
in
push
enter
add
cwtl
mov
add
adc
cmpsl
std
iret
inc
pop
movsl
stc
aaa
iret
mov
add
mov
or
add
xchg
frstor
add
aad
add
imul
dec
add
mov
mov
out
shrb
pop
aad
jns
jp
mov
cld
jb
int3
nop
data16
std
adc
or
pop
push
add
aas
decb
inc
adc
aaa
icebp
dec
add
sub
adc
add
insb
add
lock
push
add
add
cwtl
mov
inc
xchg
mov
mov
pop
add
sbb
nop
outsl
pop
jle
fdivs
test
or
pop
iret
cmp
push
hlt
sub
sub
mov
test
add
popa
xchg
pop
in
mov
in
add
xlat
sbb
cli
push
dec
jecxz
sbb
inc
add
sti
ljmp
scas
sti
pop
xchg
fstpl
add
out
lret
cmp
popa
insb
add
mov
in
out
adc
xchg
lahf
ret
enter
mov
add
add
andb
stc
int
or
mov
ljmp
sahf
mov
xor
sub
fistps
inc
jnp
add
cmpsb
in
mov
adc
and
jno
push
add
add
jae
add
and
xlat
jp
in
add
add
and
add
add
movsl
into
test
jg
jecxz
ret
xor
cmp
xor
lods
mov
out
popa
nop
or
pop
xchg
lahf
sbb
sub
into
pop
cld
cltd
outsl
ljmp
stc
mov
lds
xor
loop
lods
adc
add
iret
dec
add
mov
add
mov
xchg
imul
mov
pop
jno
add
nop
fwait
dec
mov
lahf
jg
ljmp
add
add
inc
add
in
shrl
lret
fisubrs
mov
lods
sbb
sarl
add
add
add
xchg
mov
sub
mov
add
aas
xchg
cmc
inc
jmp
add
mov
sub
sahf
push
add
js
out
add
add
adc
leave
ret
pop
add
add
outsb
add
add
lret
xchg
cmp
add
lods
int
pushf
jp
jae
insb
add
add
in
adc
pusha
add
inc
sti
cld
js
pusha
add
sbb
mov
gs
mov
fnstcw
jnp
adc
jo
or
add
pop
data16
mov
mov
add
add
insb
add
and
hlt
sahf
shr
std
js
xor
push
add
add
dec
add
mov
dec
pop
add
ljmp
add
clc
jecxz
aas
mov
adc
pop
inc
mov
fnstcw
cmp
add
xchg
leave
or
mov
pop
add
jecxz
add
add
aam
add
adc
add
in
out
dec
add
add
sub
add
adc
cwtl
ret
add
add
and
lods
inc
add
xchg
push
pushf
je
cmpl
xchg
jbe
test
cltd
arpl
fwait
imul
fimull
iret
mov
add
test
add
mov
push
add
fucomi
xchg
lds
mov
add
push
add
out
add
pop
add
add
add
or
adc
adcl
jns
add
dec
add
mulb
add
imul
cs
mov
adc
add
or
cmp
add
ret
leave
clc
jo
sub
or
pop
jp
add
lods
sahf
jo
dec
add
jae
add
lods
leave
inc
fwait
add
fldenv
add
data16
inc
add
jp
jmp
fisttpl
jne
or
jp
sub
insl
aaa
and
and
sub
lcall
or
jno
out
imul
mov
jg
andb
add
or
add
add
push
lcall
xor
fs
cmp
mov
xchg
pusha
add
inc
add
loop
add
fwait
push
add
mov
or
fisttpll
xchg
add
dec
leave
dec
lock
push
add
adc
add
and
adc
outsl
int
sahf
repnz
std
lret
mov
int3
inc
pop
sub
add
push
add
xchg
mov
inc
test
add
sub
mov
iret
and
sarb
popf
int
jecxz
mov
dec
sub
mov
add
shrb
xor
sbb
xchg
mov
insb
add
cwtl
sbb
add
pop
add
xor
out
test
add
mov
movlps
popa
jae
add
xor
lret
in
jle
push
add
stos
lock
scas
test
add
shrb
mov
cmp
clc
fimuls
jecxz
sub
mov
add
out
ja
add
stc
xchg
sbb
cmp
pop
add
and
adcl
mov
imul
nop
into
sbbl
push
add
ljmp
add
lods
mov
add
aas
pop
insl
jge
aas
xchg
lods
inc
push
das
cmpsb
insl
push
add
and
add
and
sbb
add
lcall
pusha
add
mov
jns
mov
lahf
ljmp
add
add
fistpll
push
add
add
add
out
adc
inc
inc
add
push
jo
cmp
rorl
xlat
adc
fistpll
incb
adc
dec
add
add
xor
sub
add
add
andb
add
xlat
pop
add
fs
mov
add
add
cmp
dec
xlat
mov
add
add
int3
dec
add
sub
xor
lret
and
sub
pop
inc
add
sbb
filds
std
or
mov
add
add
and
add
cmpsl
inc
pop
inc
mov
xchg
add
add
test
mov
jo
xchg
imul
sub
add
iret
movsb
adc
sbb
je
sbb
scas
xor
mov
stc
pop
add
add
add
push
test
add
add
add
xchg
pop
dec
add
sub
add
sbb
test
add
add
mov
inc
add
add
ret
daa
inc
pop
add
cmp
in
pop
add
nop
out
add
add
add
add
subl
add
loop
sti
adc
adc
pushf
mov
add
xchg
test
test
sub
adc
adc
and
sbb
add
xchg
stos
and
fcmovbe
repz
add
pop
add
inc
add
add
mov
movsb
push
jecxz
and
xchg
sti
aaa
popf
lods
xor
repz
cwtl
and
fwait
or
xor
mov
inc
in
push
add
shlb
add
ret
add
xor
ret
cmp
cmp
jbe
shr
rcrl
stos
lcall
add
test
add
and
jbe
fidivs
add
pop
call
mov
into
fisubl
rcll
add
add
push
cmc
clc
fnstsw
rcll
add
inc
orl
add
push
add
lret
mov
push
add
outsb
add
add
stos
push
push
add
adc
mov
out
enter
gs
pop
adc
cli
push
push
add
cmpsb
cli
push
add
cmp
xor
into
xchg
jecxz
add
sbb
loopne
stc
mov
dec
add
add
push
pop
add
add
pushf
and
mov
cwtl
dec
int3
jge
and
add
aaa
mov
ret
dec
add
add
js
scas
jbe
call
rcrl
add
cmp
or
and
xchg
shr
jno
add
into
pop
scas
adc
arpl
xor
jne
sbb
push
add
xchg
add
adc
mov
xor
add
jl
mov
xchg
pop
int3
or
mov
insl
mov
add
add
sub
fistps
lcall
mov
add
clc
cwtl
mov
stos
mov
dec
fstps
cwtl
rorb
adc
xchg
mov
mov
add
push
adc
cmp
stos
loope
test
add
add
dec
add
add
mov
add
inc
cmp
jg
cmpsb
stos
aad
xchg
add
nop
nop
loopne
mov
scas
aam
mov
add
add
pop
iret
int3
and
mov
add
add
add
add
mov
inc
add
outsb
add
addb
or
bound
movsl
mov
mov
jns
pusha
add
fwait
lret
sarb
dec
add
sub
cmp
in
add
movsl
les
enter
cmpb
sbb
add
add
add
hlt
pop
imul
push
mov
scas
sbbl
add
addr16
fptan
push
sar
push
js
cmp
add
add
ljmp
mov
add
xchg
jmp
push
add
add
dec
sub
icebp
and
orb
rorb
cmp
and
push
hlt
lret
stos
outsl
loop
add
clc
ljmp
add
add
imul
pop
add
push
add
mov
push
add
add
fdivrl
jb
scas
add
sbb
xor
aad
cmp
inc
dec
add
stos
repnz
add
lods
cwtl
jno
ret
jp
shlb
add
sub
mov
loopne
scas
adc
fstl
pop
out
pop
add
cmp
pop
adc
pop
add
repz
add
outsl
dec
add
add
adc
lahf
rorb
leave
sub
not
push
add
cs
jg
call
lds
addl
xor
xor
xchg
xchg
pop
mov
add
dec
add
cmp
mov
add
cwtl
sbb
stos
loop
add
lcall
mov
push
add
sub
adcl
push
add
push
pop
xorl
icebp
divl
clc
pop
add
leave
jmp
dec
add
lcall
add
cmpsl
inc
icebp
add
mov
push
add
mov
add
add
push
mov
jg
add
sbb
inc
adc
add
mov
or
add
adc
push
add
shrb
lds
add
add
xchg
adc
add
push
dec
add
add
aad
and
jmp
inc
jmp
add
mov
jge
fistpll
cwtl
push
add
fs
out
negb
insl
add
sub
gs
gs
add
js
push
mov
add
add
add
add
pop
pop
add
and
mov
cmp
dec
add
add
xchg
iret
mov
xchg
xor
inc
add
mov
add
mov
ret
aad
inc
mov
dec
add
sbb
gs
dec
out
add
add
push
add
sub
adc
mov
andl
xchg
gs
repnz
add
add
jne
les
cli
dec
leave
negb
data16
and
lea
mov
add
add
mov
repnz
cmp
dec
add
add
jmp
add
mov
add
cmp
add
add
mov
add
add
xor
push
jmp
pop
icebp
cmpl
ds
sub
shl
les
daa
leave
fimull
add
or
ror
and
adc
add
add
sub
jle
fsubl
add
add
mov
add
imulb
daa
sbb
mov
repnz
and
inc
icebp
sbb
cltd
cmp
in
or
add
imul
add
add
pop
rolb
xchg
sahf
and
inc
add
add
push
add
shrb
add
add
add
jecxz
repz
test
fcomps
ljmp
xchg
pop
movsl
inc
and
add
addr16
add
push
add
xor
mov
adc
mov
add
add
sbb
aad
xor
push
fcom
cmpsb
aas
jnp
add
ret
loope
pop
cwtl
mov
mov
add
add
xor
imul
add
out
data16
add
add
add
je
leave
mov
scas
andb
or
sbb
inc
add
xchg
add
and
add
stos
cmp
ja
adc
sbb
add
shll
data16
idiv
stos
in
add
xor
test
mov
fnstenv
mov
addb
cmp
xlat
outsb
add
ret
shl
aas
inc
fists
cmp
lods
mov
add
clc
cmpsl
inc
add
cmpsl
outsl
sub
dec
xor
mov
imul
add
pop
mov
popa
fs
cli
adc
ljmp
clc
daa
xchg
lods
in
mov
add
lret
insb
add
or
add
push
add
loopne
sbb
ljmp
dec
add
cld
cmp
add
mov
add
xchg
popa
sbb
add
sub
mov
add
add
arpl
jns
add
jmp
cmp
mov
inc
add
xor
sahf
jbe
mov
pusha
add
mov
add
inc
add
cmp
pushf
repnz
das
aas
arpl
add
add
push
add
lret
fsubrl
jg
mov
xchg
inc
pop
in
cmp
inc
add
inc
add
imul
mov
enter
pop
add
fnop
je
xor
cmpsl
push
add
adcb
fcompl
iret
cmp
hlt
cmp
sub
adcl
xchg
push
push
adc
jp
mov
push
add
lods
adc
mov
add
add
add
mov
fsubrs
mov
push
add
push
mov
cmp
add
pop
inc
add
cmp
add
inc
test
cmc
xchg
dec
add
push
outsb
add
jge
jp
lret
and
stos
loop
add
and
inc
add
bound
jle
cwtl
mov
add
mov
mov
das
jne
dec
xchg
jp
cmpsb
repz
mov
ljmp
test
ljmp
push
sub
mov
push
add
add
mov
add
shlb
sub
clc
xor
add
lret
sbb
popa
inc
jle
jg
scas
cmp
or
and
bound
and
add
xor
xchg
mov
add
add
add
jb
test
imul
sub
fmull
add
jecxz
adc
mov
cmpl
sub
inc
pusha
add
jge
iret
push
add
add
lahf
pop
test
out
das
xchg
xor
adc
je
shr
outsl
mov
mov
ret
shrb
add
cmpsb
stc
mov
add
add
add
shrb
push
add
jne
sub
mov
aaa
mov
icebp
data16
add
jo
jmp
loop
pop
sbb
or
jns
mov
add
add
add
inc
insl
lods
inc
add
cmp
jbe
inc
and
les
jge
push
add
add
lahf
and
add
pop
add
push
add
xchg
les
inc
add
adc
pop
inc
add
or
xchg
fildll
add
add
inc
add
adcl
loopne
add
add
add
add
out
add
sub
aad
jb
sub
out
testb
jp
mov
jns
xchg
pop
add
cmp
mov
add
movsb
sbb
mov
mov
inc
xor
scas
test
add
sub
sbb
mov
add
fisubrs
or
add
xchg
add
add
into
stos
jmp
push
add
add
add
mov
add
jecxz
mov
xor
jne
add
sbbb
in
mov
add
addr16
xor
or
push
add
mov
mov
dec
inc
add
xchg
xor
sbb
cmp
loopne
add
lahf
jecxz
add
test
push
add
mov
jecxz
add
or
ljmp
lea
loop
mov
loop
and
scas
or
in
push
add
into
adc
add
add
pop
add
daa
sub
mov
xchg
add
push
add
xor
sub
add
add
add
inc
push
add
dec
fisubrl
sbb
lahf
rclb
add
sbb
mov
add
ds
push
inc
add
or
lcall
lret
jae
sub
stos
push
add
test
add
repnz
cmpsl
sbb
dec
int3
or
imul
int
pushf
pop
stos
outsl
into
xchg
pop
ret
push
inc
xlat
shr
sub
popf
scas
inc
scas
scas
lds
mov
jne
add
add
aad
shlb
ret
add
mov
push
daa
les
pop
add
dec
xchg
lahf
add
jne
mov
add
jno
icebp
mov
int3
imul
addr16
in
loopne
or
pop
fdiv
or
stc
andl
jle
in
outsl
ret
cmc
pop
add
pop
cmpsl
jecxz
xor
and
scas
lds
xor
pop
xlat
insl
fdivl
and
or
addl
xor
loope
jl
jae
add
xchg
data16
data16
dec
jle
xchg
test
sub
sub
pop
and
jp
mov
adc
jle
sub
js
jg
stos
outsb
add
inc
and
add
mov
jmp
dec
add
stos
leave
push
add
in
add
test
loop
add
add
add
and
stc
add
add
pop
mov
sbbl
jbe
inc
add
inc
add
and
add
mov
add
push
add
sub
add
xchg
test
add
in
jge
dec
add
stos
mov
add
mov
loopne
adc
adc
cmp
fistpl
pusha
add
or
jae
idivb
add
or
add
pop
negb
sub
xor
lods
inc
add
into
pop
in
sbbb
add
add
pusha
add
push
cltd
movswl
ljmp
loopne
add
clc
std
mov
imul
and
add
adcb
add
mov
mov
icebp
dec
add
push
add
loopne
and
fstp
shl
pop
jns
aas
dec
add
xor
fadd
xchg
mov
orl
add
mov
add
xchg
cwtl
mov
mov
and
xchg
pop
mov
push
add
add
rol
sbb
add
jl
inc
add
nop
add
out
add
test
call
ds
or
push
cmp
or
sub
or
add
add
loop
cli
test
jnp
sub
mov
xchg
add
in
loop
data16
dec
add
dec
add
jae
push
add
add
xchg
add
add
mov
add
add
stc
add
or
pop
add
pushf
sbb
mov
mov
xor
add
jmp
mov
movsl
in
mov
add
insl
push
add
and
addl
in
mov
add
loope
add
add
in
mul
jmp
adc
test
add
jae
add
or
loopne
std
aaa
mov
add
mov
fidivs
rcrb
add
in
add
mov
sbb
cmovg
dec
add
add
mov
add
sbb
mov
adc
nop
dec
and
mov
shrl
add
cmpsl
mov
fucomip
jae
push
pop
sbb
jl
imul
insb
add
add
add
test
push
add
movsb
daa
and
pusha
add
idivb
add
dec
inc
test
sub
add
ljmp
push
sti
mov
and
sbb
fsubl
jl
push
add
add
aad
add
outsl
jb
or
pop
add
add
lahf
dec
mov
add
xor
sbb
fidivs
or
add
adc
in
add
add
pushf
cltd
das
popa
out
jecxz
add
ljmp
add
add
mov
dec
dec
add
orl
cld
mov
add
cltd
adc
jbe
xchg
cmc
cmp
jle
andb
fidivl
add
outsb
add
rcll
add
add
dec
add
add
mov
dec
add
das
xor
xor
and
and
arpl
subb
popa
inc
add
push
add
scas
stc
inc
add
add
cmp
add
xor
enter
add
add
ljmp
add
aam
add
aad
add
int3
sbb
mov
xor
sbb
lds
out
loope
sahf
adc
scas
cmp
aaa
test
in
test
icebp
add
sti
mov
push
add
cli
jg
add
repnz
add
out
xchg
pop
xchg
and
sub
ja
ss
sbb
pop
jge
add
add
mov
mov
dec
add
sub
aaa
pop
add
add
scas
xor
int
add
xchg
icebp
sub
add
jo
in
add
out
add
in
aad
popf
add
lret
mov
dec
jo
inc
xchg
push
add
cmp
lds
insb
add
adc
inc
push
lret
fldenv
pop
into
xchg
fadds
lock
add
xchg
add
adc
in
stos
dec
add
clc
test
add
jp
jnp
and
mov
mov
add
ficomps
add
shrl
jg
add
fdivl
add
data16
sarl
add
add
jle
insb
add
arpl
add
xor
pop
into
sbb
cli
push
add
add
nop
sbbl
hlt
gs
jae
fcmove
push
dec
repnz
sub
add
cmp
add
mov
push
xor
or
push
add
add
add
add
loopne
xchg
or
incl
add
inc
add
push
add
dec
add
repz
add
pushf
push
add
cmpsb
adc
push
add
and
xor
xor
cmc
add
sbb
out
add
jb
repnz
in
add
add
in
lock
jecxz
add
add
or
cmp
rclb
pop
add
add
pop
xchg
out
cmp
dec
add
dec
add
push
add
add
mov
fidivrl
add
add
jl
adc
insb
add
in
lock
add
add
aas
or
gs
jecxz
out
arpl
add
sbb
js
pop
push
add
jp
push
add
add
xchg
fcoms
xchg
lea
mov
sbb
jg
add
jb
or
adc
adc
into
gs
add
add
add
cmp
adc
sbb
insl
add
popa
ja
add
add
jnp
add
int
add
add
loope
and
jno
fnsave
add
add
adc
add
loope
cwtl
add
mov
mov
dec
sti
mov
mov
push
add
adc
or
push
add
pop
std
stc
adc
add
xor
add
jno
inc
insl
fnstcw
xchg
movsb
cld
pusha
add
add
add
xor
lahf
sub
fisubrs
das
pusha
add
pop
outsl
jae
loop
cmp
pop
add
and
add
xchg
in
xor
push
jb
adc
in
sub
mov
add
jne
add
add
add
adc
sbb
cmp
inc
add
je
out
dec
add
add
push
mov
sbb
xchg
mov
pop
loopne
out
add
add
dec
add
pop
fcoml
mov
jno
call
sub
pop
adc
mov
add
mov
pop
xchg
lods
lock
add
imul
add
movsl
mov
xchg
loope
push
sbb
add
and
aaa
lds
add
jle
iret
xor
and
cmp
cmpsl
and
rclb
add
jmp
add
mov
aad
add
fistl
xchg
lret
xchg
mov
add
or
add
add
data16
mov
out
push
add
jb
sub
mov
je
out
aaa
xchg
inc
lock
add
jb
jb
std
jge
mov
lret
sarb
shr
cmp
lcall
out
ror
add
inc
inc
add
test
hlt
cmp
cmp
fwait
cmp
pop
add
lods
mov
add
dec
and
sbb
mov
mov
add
add
pop
add
and
xor
call
fsts
jmp
lcall
enter
inc
add
pop
add
mov
pushf
addr16
inc
xor
dec
add
in
es
clc
out
xchg
icebp
out
add
cwtl
cmp
jl
pop
mov
add
call
lods
and
sub
cmpsl
cld
mov
in
icebp
add
rol
add
into
jb
jmp
popa
mov
mov
adc
pop
add
add
in
push
add
add
add
xchg
dec
add
into
scas
and
mov
hlt
loope
sbb
mov
aad
pop
shlb
add
add
addr16
inc
outsl
pusha
add
fadds
add
add
mov
jnp
and
ljmp
in
push
add
add
add
sahf
pop
add
adc
pop
inc
sbb
mov
mov
pop
add
sub
add
xchg
jnp
add
dec
add
adc
mov
out
xor
insb
add
add
cmp
outsb
add
mov
test
scas
cmp
cmp
add
add
add
mov
mov
daa
sarb
inc
add
add
add
adc
mov
xor
jns
jae
lahf
ret
mov
mov
pop
pop
ret
imul
add
mov
add
stc
out
js
push
add
or
adc
movsb
outsl
pop
add
mov
sub
imulb
cmp
add
dec
add
lahf
jb
mov
add
fisubrl
jg
data16
arpl
sbb
fists
call
pop
xor
jo
or
sub
imul
mov
add
dec
lods
xor
add
add
ret
je
add
inc
cmp
adcb
popa
xor
add
fwait
in
add
cmp
pop
daa
pop
repnz
xchg
sub
sbb
fistpll
sub
jb
sub
adc
push
inc
add
jnp
jmp
add
cwtl
data16
add
mov
add
and
push
add
xchg
or
scas
sarl
add
int3
inc
ss
stc
mov
ret
add
sub
inc
add
pop
sub
mov
push
add
add
adc
pop
scas
adc
xor
pop
push
add
add
pop
add
inc
stos
dec
add
rol
sbb
add
mov
and
lods
scas
sbb
jp
push
inc
add
add
inc
add
add
add
or
vmovlps
dec
add
jg
add
sub
cmp
jo
fstl
add
add
pop
leave
cwtl
add
leave
loop
enter
mov
in
sbb
das
int3
adc
cmpb
mov
sub
int
add
xlat
xchg
cld
xor
mov
mov
xchg
add
stc
jbe
jp
mov
push
test
adc
cmpsb
fadd
shl
in
jp
fdivs
add
fnsave
push
add
loope
mov
mov
inc
shrl
fs
pop
int3
adc
cmpsl
sub
stos
negb
jnp
inc
add
sbb
mov
add
idivb
shlb
jo
xor
sbb
jns
sub
add
add
mov
icebp
cs
test
repz
pop
add
pusha
add
xlat
gs
mov
push
inc
pusha
add
popf
js
or
movsl
mov
add
stos
mov
add
add
add
pop
add
ret
sub
nop
test
add
ror
test
inc
inc
add
inc
scas
jmp
add
sti
je
loope
push
add
add
lahf
mov
add
xor
add
add
mov
mov
movsl
inc
add
push
add
mov
test
scas
push
mov
inc
add
mov
jo
lcall
add
sub
adcb
in
dec
add
les
add
or
in
push
mov
ja
ret
pop
aad
add
or
pop
add
xor
bound
adc
pop
sbb
scas
cwtl
rcrb
cmpl
mov
clc
int3
pop
hlt
lcall
lcall
sbb
add
cmpsb
sub
add
sub
sub
add
sarb
mov
sub
push
add
add
sub
add
add
jle
mov
add
pop
loope
jns
out
lahf
dec
insl
notl
add
cmp
pop
add
sbb
jae
and
mov
call
scas
decb
in
add
push
add
and
cwtl
rorl
add
jmp
test
adc
dec
add
ljmp
add
inc
insb
add
push
add
outsl
rcrl
add
add
cltd
inc
dec
aas
inc
push
add
xchg
repz
adc
incl
mov
xchg
pop
push
jmp
add
inc
add
add
push
add
xlat
or
adc
aad
sahf
test
mov
sbb
insb
add
jno
add
out
imul
add
outsb
add
jp
sbb
mov
add
mov
xor
stos
lcall
mov
add
add
mov
imul
inc
add
mov
mov
and
adc
jno
inc
push
add
out
arpl
add
shrl
mov
test
add
dec
test
outsb
add
add
or
aas
xchg
cmpsb
add
xchg
jno
jmp
add
add
mov
mov
add
add
sahf
pop
add
into
les
pop
fildl
inc
sbb
xchg
jae
insl
out
inc
addr16
adc
or
adc
add
pop
add
shlb
lahf
aas
jnp
daa
xorl
cmpsl
adc
clc
sbb
cmc
lods
mov
add
jb
test
andl
add
int3
dec
add
in
mov
mov
cmp
mov
add
mov
insb
add
aas
sbb
in
lcall
add
fisttpll
pop
add
out
pop
add
sbb
imul
mov
jg
add
loopne
sets
arpl
scas
call
adc
adc
roll
lcall
ja
gs
cmp
pop
cmc
and
add
add
xor
add
sbb
sub
cld
orl
pop
add
mov
or
jne
jns
add
add
jl
jb
mov
repz
xor
add
add
adc
pop
add
add
pop
lods
lahf
and
pushf
loope
add
add
aad
add
fistps
mov
add
add
jge
xor
cmp
out
xchg
add
clc
add
cltd
mov
inc
add
jnp
out
add
jl
mov
test
int3
pop
outsb
add
add
jo
adc
inc
jb
xchg
cltd
cli
pop
in
lret
add
repz
data16
mov
in
pop
add
add
pop
mov
add
scas
aam
cmc
add
outsl
repnz
cmp
aad
inc
out
rcr
add
pop
add
or
adc
cli
dec
shl
and
rclb
add
mov
add
andb
jo
mov
fnstenv
add
lea
jnp
add
loop
fmuls
cmp
cmc
or
divl
clc
rorb
xchg
dec
add
add
pushf
pop
fisubs
leave
xor
add
fsubl
cmp
lcall
push
add
jle
daa
mov
add
fdivs
cmp
cs
popf
mov
lcall
jne
xor
add
outsb
add
in
sbb
add
arpl
add
out
pop
add
jnp
add
fcomip
pop
cmpl
add
add
lahf
fmul
loope
mov
gs
add
dec
scas
pop
add
fdivrl
add
mov
or
sub
sbb
lods
and
push
test
mov
mov
pop
shl
add
dec
add
inc
add
pop
sbb
int3
divb
shll
add
insl
popa
sub
pop
add
add
add
int3
mov
jg
ret
add
or
add
ficoml
add
cmp
cld
daa
test
jle
or
sub
mov
cmp
daa
mov
fidivs
out
pop
inc
inc
add
jmp
add
sbb
jge
outsb
add
popl
mov
inc
sub
or
dec
mov
xchg
fmull
add
out
imul
cmp
cmp
testl
scas
test
aaa
add
aam
add
andb
adc
mov
jp
dec
add
jl
fcomps
jae
enter
dec
add
cmp
inc
fsubl
movd
mov
cmpsl
insl
jmp
ficoms
out
data16
clc
pop
flds
pusha
add
loop
jl
aas
adcb
add
pop
mov
add
cmp
add
jge
and
fwait
jg
add
out
int3
arpl
pop
add
add
adc
ret
add
sbb
and
add
add
mov
add
loopne
out
shrb
add
cmpsb
cmp
insl
jno
xchg
jae
inc
add
hlt
cli
pop
add
addb
add
sti
iret
gs
add
jns
add
jno
add
lods
clc
xchg
xor
aaa
popl
add
sbb
sub
in
sub
jb
mov
js
and
add
loopne
pop
add
inc
add
add
aaa
lret
mov
cli
lahf
sahf
jg
add
in
pop
mov
ljmp
dec
add
cmp
add
insl
and
mov
mov
add
add
xlat
fcomps
insb
add
or
or
lock
jb
cmpsb
pop
add
push
add
and
test
into
pop
and
pop
or
fcmove
dec
add
mov
repz
xor
repnz
mov
lret
dec
add
stos
lcall
hlt
adc
push
add
xchg
lret
add
sbb
sbb
fwait
sbbl
shrb
addl
and
mov
scas
lret
xchg
pushf
inc
add
aam
test
lahf
xchg
sti
sbb
add
add
cwtl
push
hlt
xchg
inc
add
mov
fcom
mov
mov
jne
mov
jbe
loop
and
pop
add
add
add
adc
add
push
add
sbb
fcoms
faddl
add
out
push
add
sbb
cmpsl
dec
stos
xchg
stc
add
out
popf
cli
hlt
xchg
clc
int
jp
fistl
outsb
add
je
xchg
add
in
add
push
adc
cmp
xor
pop
add
jle
mov
rclb
test
add
push
or
jp
ror
or
mov
add
dec
add
js
or
out
js
repz
jbe
fwait
dec
or
add
add
add
mov
add
mov
xchg
popa
xor
sub
add
cli
jp
xchg
fdiv
rolb
add
cwtl
fmull
jp
sbb
lcall
repnz
push
add
in
sbb
inc
add
jns
xchg
add
sub
out
nop
or
outsb
add
jns
call
mov
sub
fisttpl
mov
add
and
push
xor
add
xchg
sub
and
xor
mov
fnstsw
repnz
movsb
ret
push
mov
cmp
adc
mov
scas
dec
add
sub
push
mov
mov
add
ljmp
pop
hlt
daa
dec
add
push
lds
add
dec
or
jg
sbb
std
dec
add
int
add
pop
add
add
xchg
inc
add
mov
fcmovne
sub
push
add
cmpl
in
pop
mov
leave
scas
inc
add
push
add
pop
mov
add
add
out
inc
add
inc
add
sub
dec
add
and
ja
mov
pop
faddl
loope
add
test
inc
sub
jnp
fadd
xchg
xchg
cmp
xor
or
sub
and
fsub
mov
push
add
add
add
adc
test
loopne
add
cmpsb
mov
movsb
leave
lahf
adc
inc
sub
and
inc
loopne
add
in
add
add
into
test
xchg
add
mov
push
cmp
subl
add
cmp
ljmp
xor
jnp
daa
fsubrs
add
adc
and
inc
add
aaa
sahf
movsb
testl
add
add
pop
mov
outsl
jle
or
hlt
xchg
ret
in
adc
xchg
stos
jl
mov
sub
push
push
add
add
arpl
into
in
insl
push
add
add
fbld
sahf
cmpsl
sub
out
pop
adc
dec
add
dec
adc
add
inc
push
mov
add
adc
int
xor
mov
dec
pop
movsb
add
xchg
mov
push
shll
xor
add
add
loopne
enter
jae
mov
add
jge
pop
add
and
jo
sbb
or
shrl
insb
add
hlt
pop
out
fmul
call
sub
adc
adc
add
push
shlb
and
and
jg
sahf
hlt
push
add
add
add
and
fisubs
jne
push
add
xchg
jnp
add
sub
mov
insl
popa
mov
pusha
add
inc
add
adc
xor
popf
cmp
add
movsb
jne
or
dec
add
out
adc
pop
int
add
rcl
or
pop
add
daa
add
int3
xchg
stos
fcompl
ja
add
and
add
push
add
push
cmpsb
and
cmp
popf
sbbb
add
add
stos
orl
stos
push
pop
lods
mov
add
lret
outsl
sbb
jmp
add
cmpsl
jo
rol
or
leave
std
pop
push
lock
add
test
call
mov
sub
mov
pop
lea
lock
sti
sbb
in
out
add
fdivrl
in
push
add
cmp
outsl
inc
jg
iret
popf
in
insb
add
pop
add
mov
mov
popa
mov
mov
mov
jns
add
mov
push
add
xor
cld
or
and
int3
popa
fstpl
jp
int3
addl
add
xchg
js
das
pop
xlat
mov
add
add
and
jnp
xchg
loopne
aam
add
scas
fisubrl
add
add
push
add
arpl
add
shlb
pop
add
add
inc
add
lea
xor
stos
xchg
shlb
je
cs
jns
add
in
les
mov
push
add
aas
push
add
jb
jg
data16
dec
add
add
sahf
mov
and
les
enter
lods
cmp
addl
cmp
or
mov
and
push
add
pop
add
xchg
clc
popf
and
outsl
xchg
mov
or
add
pop
add
xor
add
jno
mov
addr16
out
or
pop
jae
ret
popa
mov
mov
daa
xor
stos
jmp
pushf
mov
fs
into
and
enter
movsb
xchg
fcoml
add
aam
outsl
mov
and
jmp
add
adc
mov
je
fdecstp
fwait
rolb
cmp
cltd
dec
lock
add
add
and
mov
popf
xchg
data16
addr16
jnp
add
ret
sbb
jmp
mov
in
jo
leave
pushf
call
shlb
pop
popf
pop
add
add
mov
add
cli
stos
scas
cmp
sbb
rorl
add
pop
and
fisubs
add
adc
js
cmp
inc
add
mov
sbb
lcall
jmp
add
mov
and
jb
jmp
or
or
pop
mov
add
add
insb
add
lret
cmp
xor
jp
les
jbe
stos
popa
ja
adc
push
add
add
iret
arpl
ret
cmp
in
dec
mov
and
pushf
jp
xor
mov
jl
push
call
push
add
sbb
add
pop
ljmp
inc
add
andl
mov
mov
xor
neg
and
add
xchg
dec
pop
add
sti
xchg
and
cmp
add
movsl
dec
add
jge
sub
fwait
push
jae
adc
add
add
out
sarb
add
add
ret
fcoml
test
inc
add
jmp
inc
pop
add
imul
jne
add
nop
jecxz
sti
loopne
sti
fisttps
jmp
mov
and
add
fsubl
sti
stos
outsb
add
jecxz
out
and
test
or
add
add
sub
insl
adc
mov
cld
sti
pop
cli
imul
fwait
xor
adc
xchg
jae
cmp
roll
push
cli
scas
sub
sti
data16
movsb
add
jmp
lea
negb
add
insl
cmovae
sbb
push
add
add
scas
loopne
xchg
popl
into
loop
add
mov
cwtl
inc
add
dec
mov
aaa
mov
push
add
mov
add
mov
jp
sbb
add
sbb
add
or
mov
mov
fsts
add
hlt
sub
mov
jp
test
add
inc
and
ret
mov
and
pop
inc
add
sarb
shl
xchg
sbb
adc
mov
cs
insl
mov
fisttpl
add
push
add
fldl
add
add
movsb
adc
add
jae
add
add
cmp
xlat
push
stos
shl
loop
xchg
jge
inc
sub
pop
add
stc
inc
add
std
inc
rolb
shlb
add
loope
add
xor
pop
cmp
inc
add
in
jp
jecxz
add
push
push
add
cmp
sbb
add
nop
xchg
and
adcl
push
cmp
push
add
push
or
int
rclb
pushf
xor
inc
add
mov
add
bound
xor
ljmp
mov
push
add
add
add
jno
mov
sub
mov
add
call
bound
sbb
mov
xchg
cltd
iret
xchg
mov
and
add
jnp
jmp
or
add
add
mov
aaa
sub
and
add
push
add
inc
add
add
push
add
inc
cmp
jne
bound
aam
lcall
insb
add
add
mov
mov
jl
imul
in
or
sbb
fnstsw
add
aam
push
add
add
xchg
mov
add
add
dec
add
adc
add
insl
arpl
mov
mov
mov
inc
xor
popa
imul
inc
out
ljmp
out
add
aad
and
xchg
lock
mov
cmp
xchg
dec
xor
mov
inc
add
pop
sbb
push
add
adc
sub
push
mov
add
cmpsl
imul
sbb
mov
gs
add
sub
stos
xchg
jmp
mov
add
xor
pop
mov
in
xchg
inc
jns
add
dec
fnstenv
add
sub
xchg
mov
iret
sub
leave
jne
push
add
insl
xor
mov
add
and
das
mov
xchg
dec
add
add
aas
test
sub
xor
adc
in
push
push
add
push
lret
imul
add
adcl
mov
add
add
pop
lea
jmp
sbb
jno
inc
add
in
pusha
add
mov
add
xor
jle
cwtl
je
mov
add
xor
push
lock
adc
add
add
mov
lcall
sbb
icebp
outsb
add
mov
adc
dec
add
push
arpl
add
scas
mov
xor
dec
add
stos
in
mov
insb
add
add
add
js
orl
and
dec
inc
add
cs
cmc
js
cmp
adc
out
clc
fldt
xlat
inc
add
cmp
inc
cmp
repz
fstpl
or
pop
jmp
or
jbe
and
stc
dec
dec
mov
push
add
add
les
add
lret
xchg
push
aas
subb
sbb
sti
cmc
push
cmc
push
add
sbb
mov
pop
add
sub
lods
cmp
add
add
dec
add
ret
pop
dec
add
mov
add
jnp
push
xchg
loop
adc
jecxz
mov
or
mov
stos
iret
mov
rclb
add
add
xor
xor
mov
test
pop
add
lods
icebp
popf
mov
add
movsb
mov
mov
dec
out
jmp
add
pusha
add
xlat
gs
dec
add
dec
add
add
mov
test
jp
sub
mov
add
add
add
or
or
shll
les
inc
add
rorb
les
add
mov
inc
add
add
adc
add
dec
mov
add
lahf
lock
pop
inc
add
add
add
xchg
jb
mov
pusha
add
add
movsl
mov
jns
jp
lock
jp
insb
add
sahf
enter
loop
xor
add
pop
dec
jb
xchg
and
add
nop
xor
in
loop
jo
pop
sbb
push
add
add
push
ret
in
pop
add
mov
in
mov
add
pushf
jo
xor
jo
aaa
incb
add
repnz
add
arpl
push
push
add
add
add
or
or
test
sub
mov
xchg
or
push
jl
mov
iret
mov
je
xchg
lods
movsl
pop
lods
xor
xor
mov
cltd
add
add
add
and
mov
push
add
sub
jl
cs
xchg
pop
add
stc
repnz
add
inc
add
adcb
and
sub
add
pop
add
add
add
add
sbb
sbb
mov
jbe
into
scas
xchg
sbb
add
ljmp
add
sub
sub
aaa
pop
cmp
pop
add
xchg
jns
cmp
int
add
push
leave
push
add
mov
jl
sub
popa
movsl
cmp
out
pop
xor
cld
push
sti
mov
add
lock
add
add
add
into
mov
add
sbb
fcomip
jmp
add
push
add
ljmp
fdiv
outsb
add
push
jecxz
xor
and
js
fsubr
push
cli
in
jmp
imul
fldcw
stc
stos
fwait
mov
and
jmp
fwait
pop
aaa
add
scas
and
idivl
fcompl
sbb
sub
aaa
adc
adc
xor
fnsave
pop
lods
jns
add
iret
mov
pop
shl
inc
movsl
in
xor
or
mov
stos
cmc
ret
jp
lret
test
add
in
cmpsl
mul
push
add
xlat
imul
adc
or
or
add
add
add
scas
mov
sbbb
cwtl
xchg
jns
out
and
add
into
inc
jns
les
aas
mov
add
mov
add
adc
jmp
dec
add
inc
and
fldcw
jbe
dec
add
jne
add
das
and
shll
xchg
jg
addr16
pop
add
loopne
out
data16
insl
pop
add
or
fucom
push
add
ret
aaa
inc
add
add
enter
add
pop
inc
add
stos
mov
push
add
int3
add
add
bound
repnz
lret
add
add
push
add
or
sub
scas
pop
adcb
add
je
faddp
enter
add
add
add
sub
sti
mov
lock
mov
lods
jle
cmp
and
jb
sbb
test
add
aaa
inc
mov
add
inc
add
popf
push
pop
mov
jno
push
push
add
or
imul
pop
in
mov
mov
ret
push
ljmp
fdivrl
add
movsb
shrb
add
add
adcl
sbbl
add
ret
scas
movsl
ret
adc
push
add
insl
or
test
cld
add
xor
or
nop
mov
pop
mov
add
or
lea
sub
pushf
push
jle
jge
addr16
fwait
inc
add
in
jle
int
sub
push
outsl
scas
std
cli
sbb
add
test
add
mov
stc
addr16
push
add
fisubrs
rcrb
repz
add
pop
add
add
xchg
sbb
test
add
aad
pop
pop
add
dec
add
mov
mov
add
dec
add
push
movsb
icebp
mov
fstpt
pop
sub
out
xchg
bound
xor
mov
mov
add
adc
add
mov
push
add
cli
stos
cmp
and
pop
add
cmp
add
jl
mul
scas
cmp
cld
cmpsb
adc
shrb
xor
testl
add
add
dec
add
test
aas
cmp
test
add
hlt
xorps
js
insb
add
aam
add
push
add
push
add
add
add
int3
jb
add
ret
ljmp
in
orl
mov
push
cmp
cld
xor
ja
lahf
subl
adc
fsubrs
or
ret
add
scas
add
add
nop
mov
add
dec
add
add
add
or
loope
test
std
mov
rcll
shlb
test
data16
imul
add
add
sub
pop
add
jne
stos
std
inc
cmpsb
movsb
jmp
sti
stc
roll
loopne
imul
adc
cmp
int3
pop
incl
add
adc
add
mov
adc
xchg
sbb
add
add
jb
mov
sub
xchg
mov
and
ss
add
jb
dec
add
and
lds
add
add
addr16
bound
xchg
dec
aam
test
lods
fldl2e
cmp
push
add
out
sbb
add
mov
mov
mov
push
insl
loopne
and
sub
pusha
add
imul
mov
mov
scas
jb
cli
aam
data16
jecxz
das
xchg
ds
adc
jmp
hlt
mov
xor
pop
cmp
cmp
loope
jns
movsb
scas
mov
test
add
in
push
add
je
pushf
mov
sti
lcall
pop
cmpl
sub
cltd
inc
dec
je
imul
pop
add
add
add
scas
add
mov
bound
out
arpl
mov
add
add
xchg
mov
sub
xchg
cmp
hlt
dec
add
add
data16
add
xchg
aam
add
rorl
inc
add
int3
jle
cmp
add
push
add
into
jp
inc
adc
lock
cmp
jecxz
add
ja
rcrl
or
jp
jnp
add
xor
add
aaa
popa
push
cld
pop
mov
outsl
out
mov
aad
add
xchg
push
add
inc
mov
jb
lock
lds
add
jb
mov
pushf
sub
je
popf
int3
test
push
add
imul
add
inc
add
add
dec
add
add
add
mov
add
fadd
inc
add
add
add
lea
loope
pop
add
addr16
test
add
xchg
xchg
dec
add
sub
sub
bound
popf
xchg
add
out
iret
in
popf
pop
clc
dec
add
sahf
adc
cld
insb
add
cmp
jne
add
push
aad
data16
add
mov
add
add
add
add
inc
add
mov
jp
sti
pop
insl
cld
sbb
push
adc
jecxz
add
add
lcall
add
out
mov
mov
add
push
add
imul
inc
add
mov
mov
and
cmp
or
or
adc
add
data16
test
add
mov
cwtl
dec
add
push
jle
mov
lea
sbb
push
ja
je
mov
adc
lea
mov
call
call
add
add
sbb
dec
add
push
add
add
add
pop
push
add
add
inc
add
push
add
pop
add
leave
adc
pop
sub
jns
mov
cld
sti
dec
divl
das
push
add
jns
add
mov
push
add
enter
lcall
push
add
xor
add
pop
xchg
mov
mov
dec
push
add
js
cwtl
pop
fsubrs
pop
adc
inc
add
inc
add
jne
aas
and
call
movsb
imul
cmp
mov
xchg
insl
aam
sahf
notb
pop
stos
jmp
add
movsb
negl
push
add
cmp
js
dec
add
data16
test
push
fdivrs
nop
cmpsl
rorl
mov
icebp
adc
push
test
xor
out
mov
lahf
addr16
add
data16
outsb
add
cld
jnp
movsl
inc
cmp
mov
and
push
xor
add
sbb
jbe
adc
dec
pusha
add
icebp
data16
aad
dec
add
xchg
inc
dec
mov
call
mov
dec
gs
add
xchg
pop
xor
add
pop
add
lock
push
add
cmc
in
dec
mov
inc
add
add
xchg
jb
lret
std
sbb
sub
xor
sbbl
add
dec
in
jg
xchg
mov
pusha
add
add
cmp
pop
jno
add
add
test
xchg
push
add
dec
add
fucomp
jae
lahf
xor
leave
into
notb
add
xlat
sbb
lahf
mov
push
xor
mov
movsl
imul
add
sub
mov
cmpsl
orl
je
mov
sahf
xchg
bound
loopne
jl
and
adc
std
cmp
add
jne
or
jo
ljmp
add
andb
or
stc
and
jne
add
fidivl
lret
pop
add
jp
imul
movsl
add
xor
xor
push
test
mov
dec
inc
cmp
mov
mov
add
add
cmp
insb
add
mul
sbb
xchg
dec
mov
ficoms
cwtl
xchg
xchg
adc
or
push
xor
sbb
imul
hlt
leave
pop
sub
add
add
add
add
lahf
push
push
cwtl
jl
xchg
dec
in
rol
add
add
cmp
add
add
mov
add
push
mov
in
mov
push
push
add
add
sbb
or
imul
rcl
add
add
sub
adc
out
push
movl
data16
cmp
lock
sbb
leave
scas
mov
add
repnz
sti
cmpsb
jmp
add
xchg
test
repz
add
mov
fisttpll
ljmp
aad
cmp
les
jl
jmp
stc
sti
pop
add
or
sub
xlat
mov
xor
ds
shlb
jp
nop
xor
add
int
or
add
dec
add
add
xchg
fistl
add
or
mov
and
add
add
or
add
add
add
push
add
push
pushf
cmp
lock
stos
push
add
sbb
imul
adcl
xchg
fistl
add
push
fwait
xor
push
fcmovbe
sti
das
xor
inc
fmul
lret
add
fldt
add
add
mov
insb
add
sub
cmp
sub
mov
pop
push
push
mov
inc
add
xlat
bound
inc
xchg
mov
cltd
insb
add
adc
push
sub
lock
mov
inc
cmp
imul
lahf
mov
pop
lret
jb
push
add
insl
sub
pop
mov
loop
daa
pop
add
add
jo
add
or
inc
push
add
jp
cmp
insl
xchg
das
add
insl
shrb
xchg
sub
add
leave
pop
ret
loopne
xchg
jns
and
movsb
out
jge
add
negl
add
neg
jmp
add
repnz
xchg
and
mov
xchg
adc
outsb
add
add
fmull
lret
pslld
sub
push
add
mov
jge
add
jae
add
dec
jge
add
fidivl
add
fsts
add
shrl
add
dec
sub
add
insl
loope
and
jp
push
add
shlb
in
icebp
xor
sbb
js
xchg
test
fwait
outsb
add
cmc
and
lcall
xor
mov
add
ja
xlat
xor
xchg
stos
insl
pop
jmp
xchg
adc
rclb
xchg
hlt
sbb
imul
add
add
add
inc
add
dec
add
add
lcall
add
jle
jne
adc
dec
add
addr16
add
add
lds
add
xchg
mov
add
test
add
add
scas
data16
add
mov
add
jge
mov
push
cli
arpl
add
movsb
mov
add
add
sbb
mov
sbb
lods
mov
dec
add
mov
add
pop
add
sbb
cmpsb
stc
fiadds
cmc
out
mov
mov
testl
add
arpl
push
add
push
add
ljmp
mov
add
mov
and
popf
cmc
add
add
add
add
add
sub
in
cmpsl
ja
cmp
jle
int3
sahf
imul
jge
add
adcl
add
add
mov
add
push
add
mov
int3
je
das
push
push
daa
sub
jl
pop
jno
adc
mov
mov
mov
push
add
add
pop
add
add
xchg
pop
add
sub
cs
std
pop
add
popa
xor
sbb
int
mov
add
jecxz
add
cmp
and
add
cmp
lahf
jo
jae
add
xchg
xor
add
repnz
cmpsb
cmp
frstor
jnp
mov
mov
pop
add
not
mov
mov
ret
subb
add
cmp
in
ss
imul
add
add
inc
rorb
jno
mov
and
cmpsb
mov
inc
add
push
out
push
or
adc
mov
out
lahf
repnz
add
push
add
add
shll
add
out
daa
jmp
sbb
mov
xor
jbe
and
roll
loopne
add
jle
bound
jnp
add
scas
fs
cmp
je
mov
add
adc
push
ret
loope
add
push
rcll
add
add
add
bound
or
inc
lods
mov
test
add
xchg
cmpl
sbb
push
add
ss
loopne
jmp
cmp
faddp
fsts
iret
icebp
mov
idivb
add
add
incl
push
mov
add
push
add
arpl
sahf
sahf
cmpsl
mov
add
add
push
add
jnp
add
add
add
push
add
add
nop
dec
add
scas
dec
add
add
adc
xlat
mov
movaps
cmp
js
pop
or
dec
leave
andb
sub
cmp
add
into
add
add
or
mov
lods
ljmp
std
std
outsl
jno
sub
in
outsb
add
lret
iret
cmp
jg
add
and
add
add
in
add
fninit
clc
ljmp
xchg
add
scas
sti
cmp
js
sub
clc
push
nop
gs
add
cmp
stos
mov
sub
hlt
div
add
fsubrs
or
adc
outsl
mov
cltd
movsl
sub
adcl
gs
add
sbb
or
jmp
cmpsl
aam
mov
movsl
mov
adc
popf
loopne
daa
call
add
add
sub
add
add
or
dec
add
cmp
inc
xor
mov
mov
mov
mov
add
add
add
mov
add
aam
add
xchg
fstps
pop
nop
add
pop
mov
cld
aad
dec
add
mov
mov
sbb
and
pop
addr16
push
add
jnp
add
movsl
push
push
add
adc
push
mov
int3
mov
add
add
jle
xchg
das
push
add
add
add
xchg
in
jle
jp
insb
add
lret
call
stos
sbb
cmc
gs
push
add
cli
in
push
add
ficoms
mov
jge
add
imul
add
add
mov
iret
into
adc
pop
add
popf
and
mov
xlat
pop
add
loopne
imul
add
jl
lods
mov
call
add
add
adc
cltd
xor
push
add
add
xor
dec
add
dec
add
add
imul
add
xchg
shrb
js
dec
add
jg
push
xchg
sbb
pop
xor
cli
or
add
add
fsts
inc
add
mov
add
in
xor
rclb
add
add
push
mov
pop
adc
fstpt
fbstp
pop
add
call
out
imul
aam
add
adc
push
add
dec
sub
dec
add
or
jp
cmp
mov
mov
scas
mov
add
push
add
add
into
pop
cld
and
add
dec
add
add
bound
pop
call
nop
scas
jbe
inc
add
add
dec
push
add
add
addb
mov
lret
sub
push
or
cmp
das
cli
xchg
lock
mov
fdivr
xchg
dec
pop
and
add
add
add
out
cld
mov
or
repnz
push
outsl
pusha
add
xchg
jns
fld
add
arpl
lahf
fs
mov
add
add
imul
cmp
out
add
push
add
add
sub
xchg
cmp
add
fdivrs
jp
sub
pop
ja
add
movsb
adc
pop
add
jo
lret
mov
xor
insb
add
test
add
scas
pop
add
push
add
lahf
lock
out
push
sbb
xchg
add
lods
loopne
pop
add
add
fstps
dec
add
xchg
out
add
hlt
icebp
icebp
add
jnp
or
fdivrs
inc
add
add
out
pop
add
xchg
push
add
add
add
jmp
aad
add
sbb
test
aad
popa
ja
dec
pop
cltd
outsl
xchg
mov
cmpsl
dec
test
leave
sbb
cmp
pop
push
add
and
or
add
call
adc
sub
notb
xor
add
pushf
lcall
pop
add
add
pop
fs
sbb
rol
out
mov
mov
xor
mov
imul
mov
ficompl
add
add
xor
pushf
add
xchg
rorb
cli
into
pcmpgtw
add
add
lcall
dec
add
jo
mov
in
xchg
imul
cmp
add
shl
add
mov
add
pop
add
xor
jecxz
add
clc
push
pop
sbb
sti
fimuls
xchg
cmp
dec
add
adc
sub
xchg
clc
push
mov
movsl
add
pop
test
stos
mov
push
jg
lods
insl
cwtl
loopne
add
lret
add
or
rcrl
push
jle
inc
or
lods
cmpsb
aad
mov
push
mov
gs
andb
xchg
xor
test
add
add
cwtl
mov
add
fildl
push
pop
insb
add
sbb
leave
push
or
adc
lcall
outsb
add
mov
ljmp
pop
adc
add
jl
test
xor
and
out
xchg
insl
inc
ljmp
push
add
add
xchg
daa
sub
add
lret
xor
div
xchg
mov
adc
adc
or
jecxz
aad
int
cmc
subl
iret
adc
add
add
and
stos
repz
dec
jge
push
add
mov
loop
add
push
add
add
add
mov
gs
lea
data16
and
mov
cwtl
cmp
testl
add
and
jg
add
add
sbb
mov
cmp
mov
inc
add
jo
loopne
add
stos
loop
add
data16
add
inc
add
test
mov
add
test
dec
stos
and
lods
pop
adc
in
adc
or
ret
sarl
cmpsl
stos
inc
add
add
fdiv
pop
and
add
dec
add
fninit
pop
add
add
mov
pop
jb
in
add
add
dec
add
add
sbb
testb
or
pushf
std
mov
arpl
add
hlt
lret
je
enter
xor
andl
sub
clc
jg
add
lcall
add
jo
decb
stc
inc
lea
dec
add
xor
ja
add
inc
std
pop
sahf
and
insb
add
and
add
add
add
add
jb
cmp
lahf
fwait
sarl
mov
adc
pop
sbb
jno
add
popf
push
add
add
xchg
add
add
add
vdivss
pop
add
lock
xor
xor
pop
insl
mov
add
add
sti
inc
ja
add
add
clc
jecxz
mov
mov
add
push
lret
inc
enter
fwait
and
pop
add
mov
test
mov
xor
sbb
cmpsl
jb
pushf
sbb
imul
adcb
inc
or
in
int3
or
mov
add
add
mov
cmp
cmp
sbb
add
les
jb
push
ret
cmp
mov
cmpsb
and
sbb
rcrl
mov
cmpl
sarl
inc
add
xchg
out
ss
mov
mov
mov
push
add
add
add
xor
mov
adc
xor
mov
add
push
leave
dec
sbb
add
test
out
and
add
loope
test
inc
add
jae
add
push
add
pop
xor
sub
cmpl
add
imul
in
decl
loopne
pushf
cmp
add
mov
push
add
daa
or
add
add
divb
jnp
fdivr
subb
add
cltd
push
clc
movl
in
lods
or
adc
adc
gs
das
add
lds
dec
insb
add
insb
add
jle
lds
xor
ljmp
add
lret
scas
xchg
sub
cmp
mov
clc
aaa
loope
push
add
add
add
and
add
test
sub
sbb
push
jle
outsl
mov
add
mull
add
in
jecxz
sbb
movsb
add
fcmovne
push
add
add
add
add
imul
lods
dec
add
nop
pop
add
lahf
push
add
out
mov
mov
inc
and
aad
orb
outsb
add
hlt
and
subb
jbe
add
jno
sbb
inc
sbb
insl
mov
fistpl
add
xor
shrb
shll
dec
pop
repz
stos
inc
int
outsb
add
sahf
imul
scas
into
add
movsl
and
xchg
test
lahf
lret
inc
add
add
cmp
add
add
rorb
loopne
adc
mov
in
std
mov
cmp
mov
testl
and
lret
push
add
sarl
imul
xor
adc
repnz
xor
mov
mov
add
add
xchg
ret
cmp
neg
shrb
adc
cmp
incb
jno
popa
mov
sub
outsb
add
mov
outsl
mov
adc
js
scas
or
mov
add
mov
add
in
pop
mov
push
popf
cmpsl
pop
out
add
pusha
add
add
jnp
mov
lods
mov
loope
inc
add
jbe
mov
add
dec
add
mov
add
push
add
add
or
sahf
jnp
fnsave
xchg
dec
mov
pop
and
add
pusha
add
add
subl
add
sub
fmul
jmp
stos
imul
push
jg
add
in
push
add
jbe
rcll
bndstx
repnz
jbe
repz
sbb
imul
add
add
add
arpl
pushf
ret
mov
add
pop
xchg
gs
scas
pop
add
test
loope
xor
and
gs
fmul
xchg
cmp
popf
inc
add
mov
pop
aam
add
loop
pop
jg
sbb
mov
mov
dec
in
mov
xorl
loopne
data16
adc
add
cmc
icebp
mov
in
pop
loop
ja
mov
jg
add
pop
add
lret
shll
jne
popf
mov
cmpsl
nop
cmp
test
inc
loopne
add
dec
outsl
fwait
out
add
sahf
lret
sub
repnz
data16
xchg
add
iret
inc
call
ds
xchg
dec
add
and
pop
and
out
add
add
pop
mov
add
inc
add
jnp
add
sbb
sbbl
or
outsb
add
jo
lret
clc
mov
xchg
pop
dec
add
test
pop
add
int
jbe
inc
add
add
add
test
aam
shrb
hlt
loope
frstor
xchg
xchg
jmp
add
in
add
pop
add
add
out
add
insl
mov
add
mov
or
cmp
pop
jne
add
add
aas
mov
pop
sbb
fdivl
add
scas
mov
adc
cmpsl
mov
sub
add
sbbb
add
ds
ret
in
ja
or
mov
fsubs
add
movsl
pop
xor
sbb
mov
add
pop
adc
mov
mov
or
jecxz
stc
mov
or
ljmp
jmp
add
stc
pop
add
out
bnd
mov
add
cmpsl
pop
or
leave
lds
add
mov
aaa
mov
add
inc
add
rdpmc
aaa
or
push
add
add
add
repnz
or
xchg
aam
fs
out
add
jle
cmp
add
xlat
gs
dec
add
loopne
aas
jmp
add
add
or
add
push
add
sub
or
popa
and
adc
idiv
add
dec
inc
add
aam
add
pusha
add
add
adc
xor
in
add
mov
add
adc
idivb
add
xor
aam
out
fs
cmp
orl
adc
mov
sub
pop
aas
inc
popa
inc
movsb
xchg
cmpsb
mov
add
or
repnz
push
add
sbb
in
les
add
test
outsl
lock
mov
add
int
repz
jl
xorl
addr16
add
mov
add
xchg
shr
add
xor
sbb
xchg
rcrb
add
cmc
xchg
cwtl
shr
sbb
mov
repz
push
add
pop
fwait
mov
adc
adc
in
sbb
lret
xor
mov
add
add
add
add
mov
fldenv
add
pop
mov
push
stc
add
or
lret
rorl
add
pop
add
xorb
mov
sbb
leave
test
jne
add
popa
scas
bound
fwait
in
sub
sbbl
mov
add
add
pop
scas
pusha
add
add
icebp
adc
dec
xor
loopne
in
add
das
cmp
lods
cmp
mov
add
sarl
add
shll
lea
push
add
add
dec
add
adc
add
aam
popf
lret
cmc
or
and
mov
and
fwait
or
in
add
push
add
adc
jle
stos
and
pop
push
add
adc
and
sub
test
stos
mov
mov
and
jp
enter
mov
cmp
loop
add
add
mov
sub
pop
add
add
pop
add
jns
xchg
shlb
popf
mov
sbb
sbb
ficomps
sbb
imul
add
xor
add
mov
out
mov
add
adc
jle
stc
mov
add
psubd
fsts
add
clc
sarb
cmp
dec
add
add
pop
cmp
cli
ss
leave
les
add
inc
add
int
add
insb
add
add
xchg
in
dec
sbb
jmp
xor
lock
mov
and
add
adc
ret
mov
iret
xor
inc
movsb
pop
mov
add
xchg
push
add
iret
sbb
dec
add
adc
cltd
push
add
push
out
pop
add
sbb
mov
add
add
inc
add
pop
add
insl
pusha
add
pop
cmp
scas
int
lret
xor
xchg
lods
stos
dec
add
rol
add
icebp
movsl
xchg
jecxz
cmpl
push
or
mov
mov
shlb
into
or
aad
fadds
fnstenv
rorl
cmp
add
insl
add
vcvttsd2si
sub
mov
clc
fbstp
test
cmpsl
xlat
lds
add
das
mov
sbb
sarl
push
jg
add
adc
dec
add
adc
dec
add
je
imul
add
call
inc
xchg
and
clc
add
add
jp
fmulp
mov
add
push
add
add
clc
mov
hlt
push
push
dec
add
add
add
add
lcall
add
test
add
add
outsb
add
xorb
push
cmc
out
sarb
pop
sub
roll
fxch
mov
call
add
adc
cmpsl
sub
add
cwtl
flds
cs
fildll
sbb
test
stos
arpl
stos
cmp
pop
xor
std
cmpsl
push
decb
add
pop
jmp
inc
add
bound
inc
add
pop
loop
lret
add
add
jb
lret
dec
add
sub
push
and
repnz
add
xor
dec
add
add
add
xchg
xchg
subb
test
sbb
lret
adc
cmp
sbb
xchg
aad
add
xchg
decl
add
bound
mov
add
add
nop
out
mov
dec
jmp
xchg
mov
adc
xchg
inc
add
push
add
mov
testl
add
mov
add
out
mov
jnp
sub
aam
leave
and
or
and
mov
fadds
add
and
or
scas
sub
inc
stos
xchg
andb
xchg
push
jnp
repnz
or
test
add
push
ss
add
jle
hlt
jns
add
add
out
cmp
add
inc
add
dec
xchg
xchg
aad
jo
push
add
daa
mov
mov
adc
or
add
add
cmp
add
add
fistpll
xchg
add
push
add
xchg
mov
shr
movsb
lods
bound
dec
sti
loope
pop
add
in
outsl
xchg
sub
sti
aad
scas
stos
sub
pop
add
mov
or
add
mov
pop
add
add
daa
imul
sbb
add
add
scas
xchg
fisttps
mov
cmpsl
sbbb
add
add
adc
add
sbb
rcr
dec
add
popa
std
stos
jp
ret
add
pop
add
add
push
add
cmp
imul
out
adc
xor
hlt
push
add
jbe
out
pop
sbb
andl
repnz
cmp
daa
sti
pushf
js
pushf
call
lcall
add
mov
insb
add
stos
xchg
push
cmp
movsb
into
jnp
add
add
add
pusha
add
bound
jno
add
pop
add
mov
xchg
adc
scas
mov
push
add
add
lods
push
add
movl
inc
add
add
lret
pop
mov
pop
dec
add
daa
push
add
push
add
or
xor
add
add
jmp
add
test
xchg
roll
pop
cmc
in
shl
push
and
add
xor
and
cmp
mov
cmp
pushf
aas
shr
dec
pop
call
sti
loopne
mov
pop
adc
sub
xlat
push
add
pop
add
add
jge
fists
add
jb
popa
sub
aaa
jno
add
outsl
das
test
xor
lock
cmp
inc
fcomps
push
add
dec
add
movsb
push
add
fwait
push
add
aad
clc
sahf
cld
stos
dec
add
add
add
xchg
cmp
jns
add
mov
mov
and
mov
inc
add
sbbb
add
ret
jb
in
mov
pop
add
add
rolb
add
addr16
mov
inc
add
push
add
adc
xchg
xor
add
add
and
out
xor
pop
add
push
je
pop
add
mov
mov
lods
inc
mov
mov
ret
cwtl
jns
add
inc
add
sub
and
xor
and
aam
push
andb
fwait
xchg
mov
xlat
outsb
add
ljmp
scas
push
inc
xor
mov
inc
fsubrl
add
mov
outsl
scas
adc
sub
pop
pop
add
sbb
pop
mov
fwait
or
mov
mov
pop
mov
arpl
sub
push
add
add
cmpl
add
xchg
popf
movb
aas
cmpsl
shll
add
loope
jl
mov
push
add
fimull
jno
inc
add
pop
int
xchg
in
xor
fnstsw
add
daa
sub
add
outsb
add
fisubrl
out
or
movsl
test
xchg
lds
xchg
popf
rorl
aad
add
mov
pop
cld
pop
add
add
fstps
in
idivb
add
add
xbegin
scas
push
gs
add
push
add
add
push
add
add
jb
or
push
add
cmpsb
cmp
add
xor
add
cmp
in
test
add
inc
jbe
mov
dec
popa
int
push
add
js
mov
add
dec
add
add
add
dec
or
add
aad
aas
clc
movsb
dec
js
sbb
neg
loope
xor
out
mov
jg
lret
xor
nop
inc
push
or
inc
add
je
stos
out
aaa
cwtl
dec
add
add
repz
pop
add
les
mov
dec
add
add
fucomp
lahf
push
jecxz
cmp
test
pushf
lds
xchg
shll
and
jle
inc
pop
dec
int
adcb
emms
mov
loop
lret
and
jns
add
out
lahf
lret
ja
mov
add
add
mov
das
mov
add
test
add
pop
pop
add
cmp
mov
orl
ffree
sbb
scas
mov
and
pop
jb
sbb
mov
add
add
add
add
jo
jmp
outsb
add
sbb
out
mov
adc
call
arpl
jg
add
jns
xlat
xchg
addr16
pop
cmp
mov
js
pop
add
push
add
xlat
mov
add
add
lcall
add
jge
push
pop
ret
cmp
add
or
mov
push
stos
outsl
jecxz
int
mov
mov
add
scas
and
and
scas
jle
xchg
or
add
add
mov
inc
add
outsl
and
into
pop
add
push
xorl
int3
mov
iret
mov
xchg
repnz
mov
inc
popf
mov
jae
push
and
add
pop
add
xchg
test
mov
shl
roll
add
dec
add
rcl
push
add
push
add
out
aas
jp
iret
movsb
push
ja
cli
fdivl
adc
jl
pop
mov
add
dec
add
jmp
mov
add
jecxz
clc
jge
dec
pop
add
add
jecxz
add
mov
pop
pop
fstl
cmpsb
mov
aaa
sbb
pop
add
clc
mov
xchg
bound
imul
ret
out
add
orl
add
fldcw
pop
add
add
cmp
add
je
push
add
jo
inc
add
rcl
add
sbb
or
xchg
jnp
add
mulps
dec
sub
mov
int3
frstor
add
loope
test
sbb
xlat
xlat
pop
xor
sbb
scas
pop
jbe
cwtl
push
push
cmp
inc
add
pop
push
in
add
test
jecxz
es
jp
enter
add
mov
cmpsb
push
add
jne
add
loope
cltd
and
loope
mov
add
mov
xor
add
mov
add
add
push
das
mov
mov
cmp
jae
mov
pop
repnz
add
in
sahf
xor
xchg
data16
shlb
add
cltd
add
pop
add
test
jnp
pop
add
in
sub
stos
mov
add
mov
fdivrs
add
add
pusha
add
and
mov
add
push
add
add
add
stos
mov
mov
pop
pop
or
iret
fisubrs
gs
add
je
cmpsb
aaa
push
add
jnp
push
cmp
add
lods
orb
add
add
ljmp
mov
inc
add
inc
cli
sbb
xchg
std
enter
daa
add
add
cwtl
lods
cwtl
dec
aas
or
mov
rcrl
stos
pop
add
js
jae
mov
push
mov
add
add
cld
xchg
cmp
sarb
xchg
idivl
add
add
sbb
add
jns
inc
in
mov
ds
jo
ficoms
add
adc
jmp
loope
mov
addl
fwait
mov
push
pop
add
shlb
pop
add
sbb
pop
xchg
add
inc
add
add
fsubrp
lea
sub
jg
popa
mov
push
scas
fwait
cmpsl
iret
dec
add
add
adc
xchg
dec
add
test
data16
jle
sbb
push
and
mov
movl
xchg
mov
roll
add
std
inc
pop
add
and
jb
xor
sar
ret
add
xchg
pusha
add
add
adc
add
mov
arpl
lock
clc
cmp
pop
push
add
add
faddl
jg
lret
mov
push
add
add
jbe
leave
xor
add
fs
sbb
add
jge
fisubrs
add
fstl
add
aam
in
push
add
popf
movsl
icebp
mov
xchg
jecxz
add
add
lea
loop
orb
sarl
xchg
pusha
add
xchg
pop
dec
add
movb
and
fisubrs
add
insb
add
jl
jnp
mov
test
push
xor
and
imul
aaa
adc
call
add
mov
add
iret
xchg
sbbb
mov
aad
xchg
add
movsl
pop
add
lcall
mov
push
fs
dec
inc
shl
add
pop
iret
iret
pop
mov
call
sti
mov
dec
mov
or
xchg
add
add
inc
sbb
or
stos
stc
addr16
cmc
dec
add
je
dec
cld
xor
cltd
ljmp
xor
stos
js
outsb
add
outsb
add
js
push
add
sti
lock
add
gs
mov
out
add
shl
pop
xor
test
mov
lods
leave
out
pop
imul
testb
add
add
add
out
in
mov
and
in
lds
push
or
inc
inc
add
dec
jae
add
xor
shll
xchg
push
and
jle
les
jne
add
aad
mov
shlb
mov
xchg
mov
cmp
jmp
push
iret
add
jmp
movsb
push
add
stc
jne
leave
aam
xor
in
xor
aas
cltd
or
add
xchg
add
js
push
add
jns
add
shl
enter
add
cli
lods
push
add
cmp
aas
mov
add
push
leave
lcall
imul
shll
test
jge
cltd
jle
cmp
std
sahf
mov
add
add
adc
fwait
out
les
aaa
pushl
add
add
add
cld
xor
imul
int
adc
mov
sub
adc
add
add
sbb
dec
add
jge
orb
add
add
sub
repz
xor
in
push
add
mov
mov
pmaxsw
fwait
cmpsb
jne
fdivs
mov
sbb
in
ds
aam
mov
mov
imul
inc
jb
jle
or
cltd
sti
inc
add
test
xor
jle
repnz
add
add
fmulp
imul
xlat
xchg
sbb
push
add
add
add
add
mov
ret
movsb
aam
add
stos
push
push
aaa
mov
mov
adc
in
lods
inc
add
cli
push
cmp
cmc
inc
testl
insb
add
das
sub
xor
inc
notb
inc
and
sub
ja
lock
inc
add
enter
xor
dec
add
add
pop
add
sbb
andb
rorb
aad
shll
mov
mov
out
push
push
add
jl
in
popf
mov
pop
add
add
sub
sbb
push
xor
xchg
arpl
lcall
add
inc
int3
jae
jne
lock
add
add
and
xchg
aaa
stos
lret
rep
data16
or
cld
jb
add
mov
ja
lret
adc
outsb
add
add
add
in
sub
add
add
add
pop
add
add
push
add
inc
test
lcall
mov
add
rcrb
test
push
add
test
add
aam
cmp
inc
add
inc
dec
fcoms
cmp
movsb
pop
pop
xor
mov
imul
fsubr
sub
das
pop
inc
imul
mov
test
cs
test
add
dec
add
add
add
adc
push
call
sahf
adc
push
daa
cmp
scas
fptan
rcrl
mov
pushf
push
xchg
pop
cmp
add
enter
adc
xorb
jl
mov
in
xchg
cmp
inc
cwtl
lahf
rcll
and
inc
sub
in
mov
adc
fistpll
les
add
add
add
shlb
pop
add
inc
add
in
mov
shrb
mov
lods
xor
add
daa
ffree
jae
or
movsb
aaa
and
les
cmp
fwait
int3
sub
test
js
cmp
lea
loope
dec
add
pop
cmc
sub
push
add
xor
mov
sub
xor
mov
add
cmpsl
xchg
dec
fwait
call
and
add
xor
jp
in
loope
add
ds
insl
pop
fnstenv
add
fwait
rclb
and
xorb
add
mov
bound
stos
test
xchg
call
add
adc
jo
push
add
add
cmc
inc
loope
add
and
loop
push
test
out
add
movb
loop
inc
add
add
add
int
add
add
or
insl
jle
cwtl
negl
pop
cmpsb
sub
add
mov
push
sbb
nop
icebp
adc
xor
cs
add
sbb
jns
add
mov
add
mov
sub
push
add
inc
stc
cmp
add
and
fiaddl
cld
xor
int
add
xor
xor
pusha
add
les
cmp
jmp
add
adc
notl
in
sbb
sbb
push
add
shl
sbb
add
cmp
inc
dec
jle
outsb
add
movsl
insl
push
add
add
push
sub
dec
sub
cmp
jbe
and
add
or
outsb
add
jnp
add
cmp
pop
sbb
xchg
xorl
add
adc
xchg
jl
rcrb
sbb
aaa
std
pop
add
add
cli
jl
push
add
out
pop
mov
jo
add
sbb
sbb
inc
movsl
repz
cwtl
shlb
push
add
add
jnp
add
and
xchg
imul
decl
movsb
popa
ficompl
add
sbb
pop
add
add
sub
out
add
add
or
sbb
sti
imul
add
xchg
xchg
shlb
push
add
pop
add
shlb
add
cmp
sbb
dec
jp
repnz
pop
dec
add
rorl
add
add
inc
jnp
repz
add
cli
outsl
in
mov
xor
cmp
mov
fsubrl
xor
mov
add
adc
add
sbb
push
add
cmp
push
add
int
adc
dec
add
pop
add
movsb
inc
add
dec
add
lahf
pop
add
xchg
aas
xlat
dec
or
cmp
xchg
daa
pop
mov
add
insb
add
adc
adc
inc
scas
jnp
mov
cmp
add
mov
add
and
mov
aaa
pusha
add
push
dec
test
add
push
imul
outsb
add
call
xorb
add
xchg
into
fwait
adc
sub
sub
sbb
and
daa
adc
add
pcmpeqw
mov
add
xchg
jecxz
add
dec
add
shl
sahf
push
add
adc
dec
inc
addl
bound
fbstp
add
in
xchg
clc
ret
inc
sti
jne
loope
add
stos
cltd
adc
add
lcall
out
add
add
or
xor
jae
add
push
add
add
mov
add
pop
add
add
cli
cmp
sbb
push
imul
out
mov
fiadds
test
add
cmp
int3
jns
inc
add
int3
mov
sbb
repz
dec
rolb
in
xor
lock
das
mov
xchg
mov
add
dec
add
add
pop
cmpsb
xor
bound
cmp
lfs
data16
icebp
ja
sahf
mov
pop
add
mov
and
aaa
pop
jo
push
add
mov
in
in
or
shlb
fwait
mov
popf
jmp
jbe
sbb
sub
inc
mov
imul
cwtl
sub
mov
shll
add
nop
pop
dec
adc
mov
fdivl
sub
jle
add
fisubl
cmp
adc
or
jb
sarl
add
iret
xchg
adc
push
insb
add
fistl
adc
sub
cmp
add
add
and
jnp
add
push
add
xor
mov
add
add
add
inc
add
call
push
and
push
add
xchg
std
inc
and
scas
ja
jbe
xor
pop
add
aad
add
xlat
data16
mov
pop
mov
scas
aas
into
pop
add
in
add
add
add
jecxz
sub
in
sub
push
add
add
cmp
popa
push
add
xchg
outsb
add
inc
add
inc
dec
add
popf
jne
iret
push
add
clc
loop
add
mov
scas
cmc
sbb
scas
sub
add
ja
sbb
mov
icebp
cmpxchg
ja
mov
add
gs
xchg
cld
in
sbb
loopne
shrb
add
jmp
cmp
add
adc
dec
jg
add
out
add
jmp
sub
xor
add
clc
push
add
enter
xchg
mov
sbb
sbb
jbe
pop
sub
cmpb
sub
test
repnz
fwait
mov
arpl
xchg
arpl
lea
mov
xchg
add
mov
dec
add
dec
dec
cmp
out
add
cmp
jne
dec
add
add
je
mov
pop
add
push
add
in
pop
add
add
add
add
adc
and
sub
add
xor
cld
call
add
mov
cmp
add
jne
mov
and
or
sbb
out
inc
mov
push
add
jns
jl
dec
stos
cmp
mov
push
add
movsl
mov
jnp
clc
nop
jl
sbb
rcr
lds
pop
shrb
xor
je
cwtl
pop
sbbl
or
into
mov
into
pop
inc
dec
cmp
cld
in
add
daa
sbb
add
outsb
add
arpl
inc
imul
add
mov
mov
aad
add
repnz
add
fists
add
repz
add
fld
lea
add
sbb
jge
movzbl
cwtl
xchg
rorl
or
bound
adc
je
dec
push
add
add
sub
add
sub
push
add
add
or
and
push
and
add
add
or
jle
dec
popa
and
shll
pop
xor
sbb
add
arpl
jno
shr
jbe
add
xchg
imul
int3
int
xor
push
jp
lods
push
and
dec
add
add
push
insb
add
and
cmp
add
or
leave
lods
fwait
jo
movsl
sbb
aam
or
dec
pop
push
add
je
xchg
mov
mov
xchg
dec
add
and
push
clc
inc
add
add
push
add
dec
add
imul
mov
in
and
cwtl
mov
push
add
ret
aas
lock
ja
add
jg
fistl
add
lock
adc
fstl
jb
dec
add
sahf
fildl
int3
inc
add
add
pop
cld
mov
add
and
add
mov
adc
mov
xor
adc
stc
test
xchg
scas
out
daa
sbb
imull
add
aam
add
iret
sbb
sbb
push
add
and
push
pop
add
pop
xchg
fcoml
inc
add
sahf
mov
fwait
xor
shll
repz
or
xchg
xchg
and
pop
add
sbb
sub
xor
push
add
gs
bound
adc
pop
add
add
push
push
add
mov
incl
mov
add
add
dec
pop
add
bound
jns
sbb
aas
dec
pop
add
pop
add
lahf
xchg
push
add
lock
or
ja
das
jns
mov
push
add
inc
insl
and
lcall
aaa
dec
add
pop
fs
add
mov
fwait
add
movsl
sbb
imul
mov
cmc
fistpll
add
add
add
xor
pop
add
ret
pop
push
add
add
mov
add
in
ljmp
add
shrl
add
or
or
jl
stos
xchg
dec
das
call
jne
add
rcrb
ljmp
sub
ss
andb
out
in
add
or
xor
pop
loop
or
pop
add
or
cmc
jp
and
pop
push
mov
outsl
sub
pushf
cli
in
xchg
push
add
std
adc
fldcw
lret
add
adc
arpl
pushf
test
clc
cltd
sahf
negb
add
repnz
add
int3
lods
enter
test
cltd
sub
mov
pop
add
add
iret
mov
adc
sub
add
inc
add
enter
dec
aad
ficoms
add
push
add
inc
int
dec
insb
add
addr16
addr16
add
inc
ds
inc
add
mov
pushf
xchg
flds
add
mov
add
loope
cld
clc
adc
xchg
mov
push
add
ljmp
enter
add
jg
xor
dec
push
push
add
iret
in
fstl
mov
xchg
dec
add
lock
insb
add
mov
cmp
ja
insb
add
loopne
js
push
jmp
xor
xchg
scas
mov
lock
mov
add
pop
mov
jae
xlat
test
add
aad
lock
sub
adc
decb
add
loop
lret
jle
inc
add
dec
loop
scas
add
mov
imull
shlb
jne
mov
jecxz
add
cmp
lea
add
mov
mov
add
adc
and
cmp
insb
add
add
add
loop
xor
mov
dec
das
cmp
mov
add
mov
add
sbb
sarl
add
jno
and
add
sub
adc
shll
out
push
mov
lret
push
into
push
out
jl
test
add
add
adc
cli
leave
fcomps
pusha
add
shlb
imul
jb
notl
ret
cmpsb
inc
fndisi(8087
xchg
add
xchg
imul
shlb
add
mov
ljmp
dec
add
ss
movsb
jnp
sub
inc
out
push
add
mov
add
sahf
sub
add
push
add
add
mov
add
sub
mov
lret
shll
pop
xor
push
or
outsb
add
xchg
sahf
cwtl
pop
outsb
add
mov
nop
divl
add
les
add
xchg
sbb
repnz
mov
add
add
mov
loopne
cld
and
xchg
paddw
add
mov
sub
adc
js
fdivr
pusha
add
adc
add
and
inc
je
aam
add
and
inc
add
int3
scas
xchg
sbb
xchg
test
add
pop
mov
dec
add
add
add
add
inc
push
add
xor
inc
pop
adc
add
cltd
jae
sti
scas
dec
add
or
mov
or
sbb
pusha
add
push
add
add
add
mov
xor
jno
push
jne
les
add
lret
fdivrs
je
inc
jmp
add
sbb
testl
jbe
popf
jl
pop
or
mov
mov
jne
cmp
mov
add
lds
in
add
aaa
xor
enter
fisubl
add
sahf
daa
pop
add
xchg
add
or
add
cmp
lea
mov
add
jmp
add
mov
add
push
stc
jo
lods
out
insl
ror
and
subl
add
out
jg
dec
add
sub
test
ret
fwait
xchg
push
add
aaa
mov
jecxz
add
repz
adc
add
sbb
add
xchg
xchg
orl
sahf
in
fcmovbe
iret
cli
xchg
or
stos
jmp
imul
adc
jmp
fwait
xor
fucomp
shll
sarb
add
sub
inc
add
ret
jg
dec
inc
add
pop
out
xor
ja
xlat
mov
jnp
push
popa
orl
aam
hlt
mov
fistpl
das
push
add
mov
add
add
add
cmc
jg
leave
jne
jne
add
mov
sar
pop
fstl
mov
pop
add
push
add
fwait
dec
add
idiv
pop
ja
std
bound
fldt
enter
imul
mov
add
add
dec
add
push
add
cli
pop
sub
xchg
mov
in
pop
add
and
and
js
mov
jne
xchg
lahf
clc
sbb
in
add
add
mov
packsswb
cmp
add
xor
out
cli
mov
add
add
add
cmp
xor
and
xchg
in
push
add
cmp
fildl
fmull
sahf
inc
add
mov
add
sbb
pop
push
add
jmp
jmp
add
add
add
fsubrl
leave
pop
test
add
mov
dec
push
add
add
jg
arpl
nop
pop
add
and
or
lret
cmp
dec
add
test
es
mov
add
js
inc
add
add
clc
pushf
ja
lods
ret
adc
and
jae
add
mov
addl
mov
mov
add
dec
outsl
cmp
dec
in
lods
xor
add
cmp
sub
jecxz
and
adcb
push
add
jle
jne
add
inc
add
cmpsb
sar
invlpg
and
repnz
add
add
fdivl
stos
xor
adc
enter
testb
cmp
and
jbe
lods
pop
add
xlat
pusha
add
add
insl
pushf
lahf
add
lds
adc
loopne
daa
lock
jle
xor
push
add
pop
imul
add
mov
inc
mov
out
jo
aas
pop
add
pop
test
loope
scas
mov
mov
orb
cmp
addl
push
add
add
sbb
fucomp
notl
add
addr16
add
lcall
add
pop
inc
add
add
adc
fsubrs
mov
icebp
push
add
daa
xchg
cmpsb
mov
jl
pop
mov
adc
test
dec
add
add
push
add
xor
push
mov
mov
cmp
test
xor
jle
iret
lock
push
add
popf
ljmp
pop
cmp
and
jb
fsubl
out
sub
dec
std
add
add
out
adc
outsl
push
push
add
outsb
add
int3
add
add
add
adc
add
dec
add
and
xchg
out
and
clc
dec
add
mov
mov
add
lret
sti
sbb
js
xor
arpl
test
mov
enter
jge
cmp
test
mov
dec
pop
cmpl
test
adc
sbb
scas
rcrb
int
add
jne
mov
or
add
mov
xor
lcall
add
add
adc
cmp
push
cltd
inc
xor
testl
lret
cwtl
pop
cmp
call
dec
mov
daa
call
add
adc
negl
sbb
xor
adc
add
add
inc
test
sub
scas
xchg
out
ror
mov
push
cmp
xchg
or
pushf
js
ljmp
sub
pop
push
add
add
test
pop
add
or
sbb
xchg
mov
inc
add
pop
movsb
dec
add
adc
mov
add
mov
mov
add
negl
sarl
cs
mov
add
mov
hlt
orl
sbb
and
and
add
sbb
sahf
fnstsw
add
pop
iret
xor
add
lret
add
popf
push
add
dec
scas
jae
scas
repz
pop
pop
add
cmc
in
hlt
data16
arpl
cltd
cwtl
mov
mov
sub
push
add
adc
aad
jmp
add
inc
add
dec
call
iret
inc
add
pop
lret
add
lods
jne
in
rcl
and
pop
jb
repnz
or
xchg
pop
add
add
lret
dec
xor
pop
js
mov
lret
jge
jnp
sub
add
and
cmp
fisubs
mov
sub
jmp
cmp
scas
mov
gs
mov
mov
add
sub
cmc
nop
mov
add
jp
lahf
shlb
sub
dec
scas
cltd
mov
lods
cmp
add
adc
ret
cmp
lock
mov
add
and
and
dec
add
std
int3
in
outsb
add
or
sub
loop
std
adc
movsb
lds
aaa
vpmulhw
push
add
add
mov
cli
repnz
ja
shlb
ja
mov
fsubl
add
mov
clc
je
dec
and
add
sub
sub
push
add
xchg
pusha
add
add
pop
jge
add
sti
inc
out
lods
cli
and
mov
mov
out
dec
add
lods
ljmp
jg
daa
outsb
add
add
dec
add
fs
push
add
or
fidivrl
add
add
jns
fisubs
ljmp
xchg
out
test
rorb
test
and
and
iret
lods
sahf
jge
push
add
hlt
adc
cmp
xchg
clc
add
mov
scas
xchg
mov
xlat
js
jecxz
jmp
mov
add
fsubrp
add
or
gs
test
jle
cld
sbb
out
jmp
add
add
daa
dec
add
add
pop
sub
test
jno
sbb
push
add
pop
or
add
xchg
notb
add
jnp
sbb
adc
std
dec
add
jp
sahf
cmp
lret
sbb
or
mov
add
in
push
add
push
add
add
add
cmp
fstps
out
sub
sahf
mov
adc
ljmp
add
or
test
lret
add
pop
shlb
fucomi
jnp
jmp
jmp
mov
enter
inc
push
add
imul
add
ret
aam
adc
flds
imul
xor
pop
xchg
movsl
out
sbb
enter
push
or
into
int
add
adc
xchg
cwtl
push
add
lea
mov
add
xlat
pshufb
xor
mov
inc
nop
sahf
fldl
aaa
lret
adc
dec
add
lret
mov
dec
cmp
sbb
add
or
sbb
add
xlat
fwait
inc
add
outsl
inc
add
add
cmc
stos
outsl
add
ds
sbb
add
add
jns
mov
jns
pushf
test
mov
xchg
mov
outsb
add
sub
imul
fisubl
gs
popa
icebp
test
lret
insb
add
test
ja
add
sub
loop
insb
add
add
loopne
clc
jb
mov
add
movsb
in
inc
push
mov
inc
inc
add
and
xchg
inc
add
ljmp
sbb
test
dec
add
pminsw
imul
sub
outsl
push
sbb
int
rcll
sbb
add
loop
add
push
add
push
add
add
add
outsl
lret
shrl
aad
icebp
mov
adc
sbb
add
jecxz
jns
movsl
xchg
xchg
enter
lods
rol
mov
cmp
mov
add
xchg
add
sub
jmp
push
add
je
fwait
inc
shl
mov
push
add
rcr
pop
add
push
add
testl
add
add
das
insb
add
pop
push
add
je
and
add
inc
add
data16
xchg
cltd
imul
into
inc
add
ficoms
inc
stc
dec
movsb
inc
push
and
push
add
adc
into
add
mov
add
insl
int3
dec
sub
xchg
mov
adc
inc
add
or
add
gs
cmp
inc
add
outsl
lcall
out
add
mov
and
pop
dec
pusha
add
aad
pop
outsl
dec
dec
or
aad
repz
pop
add
jl
add
add
idivb
push
add
data16
or
pop
add
lret
fs
adc
pop
add
gs
shr
xchg
movsl
pop
add
add
xor
add
mov
xor
add
xchg
jno
or
mov
out
cmp
lods
scas
inc
add
sarl
sub
and
push
std
add
dec
and
gs
mov
add
inc
icebp
jp
cwtl
aaa
mov
jmp
test
add
scas
jo
sub
les
add
and
mov
rcr
or
fcmovnbe
negb
int3
cltd
mov
adc
lcall
dec
fisubs
or
mov
insl
xor
lock
xor
or
scas
xchg
ljmp
out
add
xor
mov
add
outsb
add
imul
nop
fwait
loop
add
nop
adc
add
push
jae
sbb
clc
cmpsl
lds
fwait
lahf
jl
ret
lock
lahf
sub
stos
jae
decl
inc
add
xchg
or
pusha
add
addr16
mov
pop
fisttpll
add
addr16
jns
add
sub
sub
jno
add
adc
idivb
mov
pop
or
negb
pop
pop
add
andb
sbb
imul
xchg
jbe
inc
xor
mov
into
out
iret
mov
add
add
addr16
push
pop
add
xchg
sbb
pop
pop
add
add
and
pop
add
lods
sub
push
testl
add
mov
add
out
inc
push
test
jns
add
push
add
int3
xor
roll
std
out
dec
add
mov
in
add
js
dec
pop
divb
inc
add
add
xchg
adc
adc
rorb
pop
mov
pop
push
mov
add
add
add
add
out
push
add
push
add
jg
iret
mov
stc
cmpsl
jnp
add
stos
cmp
scas
mov
lea
jb
cmpsb
xorl
push
mov
push
add
leave
xchg
ficoml
cmp
add
mov
push
cli
ja
add
pop
add
mov
test
insb
add
add
daa
push
ja
std
xchg
pop
add
cmc
xor
add
add
push
add
test
in
or
sbb
data16
jb
jge
pop
rol
rcr
int3
pop
add
insb
add
add
bound
or
xor
loope
push
add
lcall
or
cli
insb
add
jecxz
clc
push
scas
sbb
cltd
sbb
add
cmpsl
aam
outsl
adc
mov
jns
add
sbb
in
add
test
add
dec
cwtl
lock
add
and
pop
add
jae
sub
add
push
add
xor
add
cmovns
add
add
add
add
cmp
pop
mov
hlt
fistl
cmp
pop
add
stos
inc
add
loopne
push
insl
repz
lds
add
xchg
adc
mov
cmp
xor
push
jge
push
add
mov
ret
mov
add
sbb
push
sub
adc
cwtl
mov
add
cmp
or
loopne
shrb
add
test
mov
mov
adc
cmpsl
xchg
xlat
pusha
add
add
mov
clc
add
jno
leave
movsl
dec
add
dec
ret
add
add
out
and
pop
add
push
dec
adc
stc
add
pop
xchg
mov
add
mov
and
add
inc
add
add
cld
stos
mov
pusha
add
lds
add
add
add
add
add
sub
ret
mov
add
out
mov
addl
data16
add
add
adc
and
fidivs
lea
insb
add
dec
enter
mov
push
add
in
pop
add
aad
leave
mov
add
idivb
add
cmp
push
add
ret
or
jp
lds
out
das
fnsave
add
and
adc
aad
add
xlat
xlat
clc
insl
xchg
fsubrs
rolb
push
add
lods
std
inc
jno
call
add
je
cmpsl
lods
sub
add
clc
add
add
xchg
add
push
mov
cmp
ljmp
add
add
jmp
add
lds
add
adc
call
movsl
push
add
pop
xor
add
add
push
add
mov
es
adc
xchg
add
xor
insb
add
nop
push
add
into
sahf
rcl
and
sbb
pop
cmp
adc
repz
add
add
sub
add
out
mov
jecxz
add
mov
ljmp
mov
testl
xchg
fdivrs
loope
fwait
xor
daa
ficoml
add
inc
add
fstps
mov
add
sub
dec
add
inc
add
daa
or
mulb
fs
out
sub
repz
xchg
loope
add
mov
adc
push
add
pop
jb
sbb
mov
add
jns
xor
add
sbb
jmp
jp
add
add
add
mov
adc
jmp
rcl
add
hlt
jns
test
pop
add
pop
fimull
add
je
shl
adc
inc
or
xchg
add
add
cmc
lock
lea
fmuls
addr16
sbb
ret
or
mov
cmp
add
outsb
add
movsb
dec
dec
adc
lcall
add
fdivrs
xchg
mov
push
add
add
mov
cmp
sub
repz
mov
xchg
push
add
mov
dec
jp
enter
std
dec
loope
imull
imul
dec
or
xor
mov
and
push
push
sub
pushf
sbb
bound
dec
add
outsl
cmpsb
mov
cld
pop
rorl
out
out
add
add
add
add
add
add
add
rcll
das
mov
adc
jp
dec
jb
lock
inc
add
add
enter
add
mov
mov
imul
pop
push
add
jle
adc
mov
add
add
mov
data16
add
add
add
sub
add
and
movsb
leave
mov
fimuls
outsb
add
mov
sbb
pop
outsl
divl
add
and
cmp
mov
addl
add
or
bound
mov
dec
add
xchg
cmp
orb
cwtl
push
add
xchg
out
cld
dec
add
sbb
movsl
cwtl
or
pop
add
jle
movsb
mov
fnsave
add
add
add
mov
jbe
aam
jl
xchg
sbb
inc
pop
push
add
cs
cmc
push
add
stos
fildll
add
push
or
pop
sub
pop
push
and
nop
jae
sbb
out
add
rorb
add
mov
push
lds
add
add
les
or
ret
mov
iret
dec
add
push
add
shlb
cmp
pushf
dec
add
add
mov
cmp
or
mov
icebp
push
add
clc
movsb
xchg
dec
lds
lahf
gs
mov
pusha
add
cmpb
add
mov
shll
adc
movsb
inc
sbb
adc
push
add
push
rcrl
add
add
daa
popf
push
lahf
mov
add
fcomi
or
andl
aaa
pusha
add
sub
sbb
sarb
mov
xchg
push
add
add
xor
xchg
rol
jns
jg
xor
jno
adc
add
mov
add
jne
add
cmp
arpl
pop
add
icebp
cmpsl
les
test
icebp
and
push
add
les
add
imul
popf
sbb
cwtl
out
mov
jns
push
add
push
mov
dec
add
add
mov
cli
jecxz
pushf
mov
test
fiaddl
stos
cmp
mov
jns
jo
mov
fcompl
add
mov
add
clc
das
inc
orb
cmp
js
lret
outsl
pop
insl
and
imul
cmp
lahf
xor
das
addr16
out
pop
add
or
sub
test
xor
outsb
add
jle
cld
packsswb
fwait
loopne
and
data16
insl
xor
push
push
add
cmpb
add
notb
add
xchg
pusha
add
lods
adc
add
add
mov
add
add
sub
mov
pop
or
iret
fwait
and
add
aaa
cmp
cmp
loop
and
test
xchg
inc
add
sub
imul
lea
add
jle
or
xor
sbb
test
xchg
xorb
movsb
push
add
sahf
cmp
jo
andl
or
into
dec
add
sti
daa
inc
add
add
push
add
mov
mov
xor
xchg
test
sub
and
xchg
sbb
arpl
pop
imul
adc
add
adc
gs
add
push
test
rclb
sbb
mov
jp
lahf
dec
add
sub
add
test
xchg
mov
adc
push
add
mov
fcoml
cltd
mov
sub
popa
or
mov
push
add
pop
not
rorb
ja
or
fxtract
sbb
ret
inc
mov
add
mov
add
add
mov
xor
mov
adc
mov
jmp
add
aaa
icebp
out
cmp
mov
dec
add
mov
push
inc
add
add
push
jmp
aaa
add
add
shrb
add
add
lea
aaa
lret
mov
xor
mov
add
divb
mulb
incl
add
lcall
xchg
insb
add
add
jae
dec
popf
jne
add
add
shlb
das
les
add
jae
add
sbb
repz
jb
add
jnp
mov
or
in
add
nop
inc
add
and
mov
add
cli
pop
add
pop
loopne
andb
test
add
pop
pop
mov
mov
in
scas
cmp
lods
mov
push
iret
pop
add
mov
push
mov
in
adc
add
adc
test
xchg
js
push
stos
dec
std
movb
xor
jb
inc
in
mov
lret
bound
push
add
jae
xchg
popf
iret
or
add
inc
add
xchg
idivl
add
jno
add
pushf
je
push
add
add
and
inc
sbb
sbb
mov
aad
jle
push
out
dec
xor
add
add
sub
jp
fcmove
jecxz
lcall
add
add
dec
xchg
adc
imul
add
insb
add
shlb
add
pop
je
or
xor
push
mov
or
jecxz
xor
int
add
sbb
mov
add
push
jne
mov
lock
add
cmp
add
or
leave
push
add
add
fcoml
add
push
add
sub
add
sub
andb
test
add
testl
add
int
cmp
rol
cwtl
shlb
mov
push
add
xor
add
adc
jg
mov
cltd
outsl
test
add
add
push
jne
mov
xchg
sahf
and
leave
repnz
cld
and
mov
mov
xchg
add
add
mov
add
xchg
mov
inc
add
leave
push
aaa
jge
or
out
add
sbb
push
add
lods
and
or
pop
add
add
std
dec
pop
add
int
push
add
sbb
add
jge
sti
mov
pushf
xor
add
add
sti
cmpb
loopne
push
add
pop
ja
orb
ret
lock
out
out
jmp
pusha
add
or
dec
fsubrl
mov
loop
icebp
and
cmp
push
add
jae
xor
xchg
dec
add
add
push
add
mov
xchg
add
add
and
jecxz
sbb
or
pop
pop
jae
cmovs
sti
and
test
cmp
add
dec
push
add
adc
or
pop
testl
sbb
fcompl
cmp
add
add
push
add
loope
mov
add
jo
xchg
add
sbb
mov
scas
lahf
jge
pop
add
mov
dec
ljmp
fnstsw
adc
pop
mov
out
push
add
imulb
add
dec
mov
push
add
jno
add
inc
lahf
std
lret
rolb
add
mov
add
add
das
xchg
cmpsb
movsb
pop
add
test
inc
add
add
add
xlat
pop
movsb
sbb
adc
lods
dec
add
arpl
lods
in
pushl
add
xchg
out
add
daa
into
cmpsb
mov
stc
sarl
andl
scas
rcrl
xlat
and
and
lock
mov
sbb
push
aas
adc
cmp
ds
pop
and
add
aas
pushl
jb
mov
add
mov
add
inc
adc
mov
scas
stos
add
lods
mov
in
aad
add
clc
loope
ja
sub
mov
insb
add
push
add
addr16
dec
push
fwait
xchg
movsl
sti
leave
xorl
mov
add
in
add
add
pop
add
dec
add
sbb
sub
mov
hlt
adc
add
std
jbe
lahf
sbb
dec
add
mov
lock
dec
sbbb
add
add
out
push
pop
add
pop
add
iret
fidivs
add
add
iret
sbb
pop
fsubs
add
leave
ss
int3
pop
sti
hlt
jge
add
les
test
pop
pop
inc
outsl
lea
mov
inc
add
mov
stc
mov
arpl
add
or
mov
ja
add
or
add
aaa
pop
lret
add
xor
add
push
add
xor
jl
das
repz
fmuls
int3
lods
fwait
imul
add
movsl
push
add
and
into
mov
pop
inc
mov
add
push
add
and
ds
adc
lods
in
jns
lcall
add
ror
sbb
loope
push
add
add
sti
outsb
add
sbb
xchg
inc
lcall
or
mov
add
loop
add
cmp
add
xchg
inc
out
icebp
mov
popf
jno
add
add
push
add
add
jp
jmp
mov
and
orl
sahf
mov
popa
adc
add
pushf
sub
pusha
add
in
add
fcompl
jp
sbb
add
fmulp
mov
psrld
fwait
mov
jae
add
pop
dec
cmp
int3
dec
add
test
and
in
add
mov
mov
sbb
adc
adc
add
add
sbb
add
das
iret
adc
inc
or
nop
inc
add
add
pusha
add
rolb
mov
adc
test
add
fisubl
dec
push
add
les
lret
jge
lahf
sti
and
add
lahf
push
add
add
dec
add
arpl
cmp
ja
out
pop
mov
loopne
fistpll
add
aas
cmp
add
clc
add
mov
dec
out
xor
in
inc
adc
mov
add
aaa
outsb
add
sub
mov
add
add
shr
pop
pop
loopne
add
add
add
inc
add
cmpsb
pushf
test
out
rcl
lods
clc
subb
add
bound
outsb
add
dec
add
mov
inc
add
out
mov
sub
sti
push
repnz
movsb
cmp
jb
mov
pop
jne
ja
add
aad
add
jno
icebp
leave
jp
mov
pop
xchg
je
fsubrp
loopne
sahf
adc
cmp
xchg
cs
lods
in
add
mov
mov
cmp
jecxz
jle
cltd
and
and
sbb
xor
and
add
shrl
adc
sub
lret
dec
add
add
stos
fdivrp
or
mov
add
add
add
test
cmp
rcl
andl
insb
add
add
jb
rol
cmp
pop
fistl
add
xchg
adc
sub
mov
andb
inc
add
push
add
ficompl
or
xchg
inc
add
xchg
mov
setno
add
fldt
mov
xchg
ror
aas
xchg
das
and
adc
shll
insl
jp
add
jns
data16
add
pop
add
sti
jb
add
repnz
inc
add
cmp
test
add
dec
dec
mov
aas
push
add
fldt
icebp
push
add
ret
xor
add
sbb
sbb
cmp
add
repz
add
pop
test
xchg
add
andl
test
pop
mov
fnstenv
mov
add
xor
inc
or
push
mov
sub
das
sub
sbb
mov
add
inc
add
hlt
pop
add
in
xor
mov
inc
dec
add
add
push
add
lds
jb
mov
add
xlat
adc
data16
add
add
add
push
and
dec
subb
add
add
jnp
fcmovne
mov
add
inc
push
add
cmpsb
pusha
add
add
add
lods
pop
add
add
add
mov
add
sub
in
adc
fidivs
push
mov
mov
mov
test
add
sub
jo
adc
dec
lea
xchg
les
adc
cld
aam
and
sbb
sbb
idivb
add
jp
inc
jecxz
scas
add
add
mov
shlb
adc
add
orl
in
enter
push
add
shll
cltd
dec
add
inc
lock
push
jge
mov
call
adc
fwait
push
test
add
add
enter
add
mov
add
addr16
jg
add
mov
add
test
fnstcw
rorl
mov
pop
lahf
in
popa
xchg
outsb
add
xchg
std
jecxz
enter
lds
add
out
cli
gs
fidivs
push
add
test
add
cmp
and
cmp
xchg
aas
jne
les
add
stos
cwtl
in
inc
stos
mov
add
inc
sub
mov
clc
lcall
fwait
mov
mov
push
add
jo
outsb
add
xor
jno
daa
daa
and
not
push
mov
aad
add
jae
add
or
int
insl
push
outsl
sub
fildl
push
add
add
and
aas
mov
in
add
mov
out
mov
data16
pop
jne
orb
add
sub
lods
cmp
sub
popf
sbb
cmp
mov
add
xchg
aad
add
mov
add
add
mov
iret
fstl
add
add
mov
add
mov
ficoms
push
add
outsb
add
dec
push
out
xor
or
daa
mov
add
gs
add
fldlg2
mov
add
icebp
jno
add
in
cld
sbb
add
dec
xor
stc
mov
mov
cmp
add
and
mov
add
add
enter
out
sbb
adc
mov
jmp
or
outsl
dec
add
jmp
add
clc
call
jp
pop
mov
add
pop
mov
rorl
xor
jne
fdivrl
in
ret
imul
add
push
pop
add
lcall
add
cmpsl
mov
push
orps
adc
rol
in
mov
ljmp
add
add
add
loopne
lahf
jge
in
or
adc
movsl
nop
lods
xchg
ljmp
pop
add
into
cli
sbb
xor
xchg
ffreep
jbe
xchg
jmp
cmp
add
sub
jo
jmp
adc
xchg
clc
adc
pop
add
add
movsl
mov
add
xor
lds
add
add
add
call
call
mov
adc
add
bound
cmp
add
add
jge
add
add
add
jb
inc
add
outsb
add
dec
add
push
add
leave
aam
add
cwtl
mov
inc
dec
add
add
outsl
mov
pop
add
add
add
add
add
add
add
test
xchg
jge
pop
dec
add
ljmp
add
je
lahf
xor
fldt
mov
push
add
aaa
shl
xchg
fisubs
xlat
popa
mov
mov
nop
mov
push
add
add
add
and
sbb
add
dec
jmp
clc
xchg
cmp
xor
xchg
fisttpll
add
into
stc
cmp
inc
add
addr16
add
lahf
daa
xchg
ja
add
ret
fisttps
or
imul
test
lods
jge
and
jge
add
add
push
xchg
mov
add
add
test
push
add
sub
mov
mov
jl
inc
cltd
movsl
sbb
xor
push
add
add
add
add
repz
add
sarb
add
fmuls
lods
out
add
scas
and
jno
mov
xchg
push
add
mov
out
mov
add
add
daa
mov
push
add
jmp
nop
or
xchg
mov
ss
cmpsl
pop
fwait
mov
loope
add
in
sbb
jbe
cltd
sub
cmp
dec
add
ja
dec
add
call
in
lret
cli
add
stc
movsl
fistl
in
jecxz
out
in
neg
xor
xor
gs
out
push
add
jnp
add
sbb
sarb
add
out
push
add
xchg
ret
xchg
rcrl
mov
fadd
out
lret
add
ret
or
add
cmpsb
cmpsb
mov
ja
add
loope
test
testb
ror
lock
xor
mov
or
shl
cmp
out
xchg
mov
push
add
add
pop
xor
test
lds
add
popa
sbb
nop
cmp
mov
or
sbb
adc
nop
xchg
enter
lret
push
add
jmp
sahf
inc
push
add
adc
pusha
add
xchg
aaa
call
inc
add
mov
adc
imull
mov
aaa
dec
add
lods
sbb
add
jbe
movsl
js
xchg
xchg
insl
xor
add
cmp
add
add
pushf
xchg
rorb
add
outsl
repz
inc
scas
mov
add
push
mov
rcr
orl
std
loop
xor
and
je
mov
cmpsb
daa
cmc
push
add
bound
bound
rcrl
cmp
sub
add
sub
popf
mov
inc
add
mov
pop
push
add
pop
adc
add
mov
loope
jmp
jl
fcomip
into
out
stos
sub
push
xchg
push
repz
or
fsubs
and
mov
aas
repnz
arpl
mov
lahf
mov
dec
fs
scas
mov
adc
mov
add
loopne
add
add
add
add
xor
push
notb
pop
ret
sub
push
add
pop
add
add
sub
jecxz
add
shrl
dec
add
mov
add
sub
cli
rcrb
inc
add
mov
and
imul
add
leave
push
add
push
add
add
rcrl
addr16
add
add
add
loop
stc
adc
sbb
mov
flds
add
jns
mov
xor
lahf
negb
icebp
cmc
add
xor
push
repz
add
cmp
xor
cmp
cmpsl
lcall
in
pop
mov
add
add
add
dec
arpl
jecxz
lods
aas
push
add
pop
stos
jecxz
icebp
cwtl
hlt
mov
loope
data16
jp
sub
rolb
add
add
cmpl
scas
sahf
dec
add
add
lods
or
lods
and
ljmp
hlt
cmp
cli
adc
into
in
dec
leave
rclb
inc
add
adc
mov
stc
cmp
popf
mov
xor
add
or
out
dec
ret
ljmp
fisttpll
xor
lea
inc
add
xor
add
pop
push
add
add
aaa
rclb
add
sub
mov
and
btc
add
mov
pop
pop
shll
or
adc
inc
add
inc
stos
clc
mov
jecxz
add
dec
sub
mov
je
mov
xlat
mov
ljmp
and
outsl
bound
sahf
pop
jg
lret
sub
cld
mov
popa
pop
add
xchg
dec
add
pop
sub
mov
pop
mov
add
push
out
jb
aas
scas
inc
add
push
add
add
rcl
push
add
sub
lods
push
add
andl
cmp
add
popa
cmp
xchg
imul
and
in
jecxz
xor
hlt
in
aaa
call
iret
sub
mov
out
cmpsl
outsl
stc
loope
test
and
std
aad
shll
mov
add
pop
xlat
test
test
sbb
mov
insb
add
icebp
test
rcr
dec
add
add
pop
add
aad
insb
add
pop
xchg
in
inc
fldl
movsb
mov
mov
ljmp
xchg
or
cwtl
mov
add
insl
mov
inc
out
add
subl
aas
call
out
rcll
mov
adc
and
mov
add
add
push
mov
sub
dec
inc
add
cwtl
xor
lods
rolb
jne
xor
movsl
pop
in
add
imul
test
movb
add
stc
adc
adc
add
stc
jp
dec
add
add
data16
adc
pop
and
add
add
ljmp
pop
add
jg
mov
mov
add
jbe
pop
mov
add
leave
or
inc
cltd
mov
xchg
ja
repnz
enter
ja
add
out
add
add
imul
cmp
jbe
repz
cli
test
add
push
add
fcomps
sahf
and
mov
jb
test
add
dec
xchg
mov
lods
pop
and
cmp
mov
rorl
add
das
aaa
data16
in
cmc
les
add
inc
bound
push
add
add
rorb
aam
add
dec
into
add
lods
add
mov
add
mov
xchg
data16
jmp
add
sub
push
xchg
in
adc
and
or
mov
das
adc
add
add
aam
inc
or
mov
push
cli
mov
and
scas
adc
icebp
xchg
out
jmp
add
mov
mov
add
mov
sbb
bound
cmp
fdivrp
scas
dec
add
jnp
mov
add
sub
push
add
xchg
popa
repnz
jmp
xor
dec
add
in
sti
icebp
addl
push
add
insb
add
add
push
mov
mov
xor
cmp
stc
inc
add
test
add
out
movsb
or
nop
add
push
add
cmc
sbb
or
xchg
mov
add
add
in
mov
add
pop
aaa
not
clc
cmc
call
jge
jne
rcrl
call
pop
add
xor
mov
call
push
add
mov
xlat
iret
ljmp
or
into
addr16
aaa
or
lret
out
or
test
pop
fwait
mov
pop
out
cld
clc
jns
add
in
pop
add
ds
test
mov
mov
leave
push
add
adc
or
pop
xor
aam
xchg
rol
inc
iret
and
add
xor
jb
push
repz
add
sbb
add
xchg
sub
int
bound
cmp
lods
rcrb
in
sbb
cmp
sbb
aas
jle
push
sub
mov
add
mov
cmp
jl
mov
adc
push
add
cmp
and
repnz
add
cmp
aaa
pop
shrb
add
jno
sti
mov
xchg
sbb
das
inc
sahf
rorb
mov
insl
daa
mov
add
add
add
jne
or
out
lds
stos
in
nop
mov
push
in
add
xchg
out
add
mov
imul
fistpll
add
cltd
push
sti
jne
add
idivl
add
cmp
inc
mov
jae
in
xchg
jl
sti
sarl
pop
out
out
push
add
rolb
and
aam
bound
insb
add
mov
out
push
ret
sbb
xorb
je
sahf
or
add
add
push
add
pop
add
dec
add
add
data16
and
adc
pop
add
add
add
add
fwait
sbb
jp
aas
int3
jg
add
test
sub
pop
xor
push
add
rcl
sub
jne
out
and
jg
add
clc
ret
aaa
mov
inc
adc
out
test
daa
shrl
sub
lds
add
xor
add
lcall
xchg
push
add
jecxz
dec
dec
ret
loopne
add
dec
sub
aaa
call
scas
or
sbb
fwait
inc
add
in
add
add
cmp
sub
or
add
pop
repnz
mov
js
out
mov
add
nop
pusha
add
and
pop
dec
rorb
jnp
fldt
mov
add
add
xor
cmp
and
jnp
add
addr16
dec
cmp
insb
add
andl
adc
sbb
add
cmc
loop
add
push
add
or
xchg
mov
sub
dec
add
xor
pop
add
add
movsb
jmp
mov
iret
rcll
out
xlat
pop
add
nop
pop
cmp
jl
ret
test
pop
add
rolb
scas
jp
loopne
cmpsb
inc
add
add
xchg
lods
out
push
add
xor
jb
orl
pop
add
dec
add
jp
add
sub
add
jae
add
pop
add
add
xchg
add
inc
add
add
popf
jmp
jno
mov
add
add
xchg
jno
cmp
loope
cltd
sub
outsb
add
add
lahf
pop
add
push
add
xor
push
lock
dec
or
cli
test
rcl
int
add
add
pusha
add
mov
xchg
pop
add
jnp
dec
add
pop
add
adc
add
jne
pop
notl
add
jg
jmp
add
sahf
shld
jne
dec
add
jno
add
add
data16
inc
add
lea
mov
add
insb
add
pop
test
or
push
add
sbb
adc
gs
inc
add
cmpsl
jecxz
push
or
out
lods
sbb
and
or
add
icebp
bound
push
add
sub
mov
ja
std
dec
add
rcrl
add
add
jo
jge
add
sub
add
mov
push
or
stos
pop
add
mov
ficompl
inc
testb
ljmp
and
pop
or
pushf
and
popa
or
insb
add
testb
xor
insb
add
or
push
mov
push
add
imul
aaa
and
stc
lret
push
add
cli
push
div
imul
out
pop
call
push
push
add
add
inc
icebp
cmp
stc
jnp
popf
sbbb
out
add
fildll
and
cld
jno
outsb
add
add
cmpsl
lods
mov
cmp
jb
adc
add
xor
repnz
add
add
je
jnp
sub
loop
mov
xor
dec
std
push
dec
das
lcall
mov
push
add
or
jne
add
jae
add
add
lock
jae
add
out
arpl
test
add
fmulp
cmpsb
mov
jns
cld
mov
sbb
bound
jnp
add
ds
xchg
enter
lret
mov
dec
sbb
push
mov
add
adcl
pushf
and
loopne
fdiv
rol
add
dec
add
leave
jae
add
xorps
frstor
sub
jns
pusha
add
and
or
sub
and
imul
notl
shlb
imull
inc
inc
add
scas
int3
xchg
xor
ljmp
cmp
add
rorl
nop
push
jmp
add
adc
mov
pop
and
push
dec
pop
popa
sub
aad
hlt
jmp
and
cmc
lds
sub
xchg
or
add
mov
inc
add
or
sti
into
add
mov
mov
fwait
mov
dec
add
jle
or
scas
dec
add
add
adc
adcl
pop
add
push
add
xchg
ret
sbbb
xchg
add
pusha
add
push
not
int
sahf
jne
stos
cli
and
imul
add
add
push
pop
add
sti
adc
fldcw
or
dec
add
cmpsb
and
add
sub
jo
inc
add
add
fcmove
jle
sub
mov
add
adc
jge
xchg
ds
lret
rclb
test
add
cld
and
aad
add
push
fcoml
add
add
pop
and
push
add
lcall
add
add
mov
or
and
fsubrl
add
xor
jae
add
loope
jmp
mov
cld
push
add
in
mov
add
dec
add
pop
sarb
add
add
js
out
mov
in
sbb
mov
and
pop
in
push
stos
loop
mov
mov
pop
add
add
adc
pop
add
mov
sub
shlb
add
pop
sub
mov
add
add
xor
addr16
dec
add
or
addr16
add
ret
notl
add
enter
cmp
xor
sbb
jg
scas
fnstenv
xchg
mov
pusha
add
add
add
repnz
mov
fisubs
add
pop
int3
imul
rcr
sbb
xor
add
xchg
subb
adcl
add
add
mov
hlt
add
iret
xchg
test
sub
movsl
fdivl
imul
sub
pop
add
add
add
add
add
ffree
repz
add
push
add
inc
add
add
fwait
sbb
and
add
shrb
cld
pusha
add
add
push
add
or
push
add
jb
std
jmp
pop
push
add
inc
add
nop
pushf
push
add
add
ret
add
pusha
add
add
add
idivb
push
xchg
lods
fadds
add
add
xor
jb
ror
jecxz
add
add
add
add
lcall
cld
arpl
cmpsl
shlb
push
add
cmp
adc
and
mov
mov
sbb
loop
outsb
add
add
scas
push
add
test
cltd
dec
jns
jl
call
pop
push
fwait
and
sub
outsl
js
lods
mov
mov
add
add
add
jl
or
stos
loope
sahf
aad
jne
mov
add
add
add
into
fs
mov
cld
aas
call
jle
push
fnstsw
jae
add
add
cmp
mov
popa
xor
lods
loopne
out
or
outsb
add
mov
add
mov
pop
lcall
xor
in
popa
call
loop
push
repz
imul
dec
add
sbb
int
scas
cmpsl
jl
fwait
outsb
add
add
in
add
cmp
add
notb
mov
push
add
sub
xor
pop
adc
cwtl
test
dec
add
mov
mov
xchg
cwtl
push
add
cmp
add
insl
hlt
sbb
push
sbb
push
add
push
in
mov
repz
add
xlat
outsb
add
add
ret
xor
test
add
test
xor
clc
mov
fcompl
add
aas
or
add
lret
divl
iret
push
xchg
xchg
inc
add
xor
add
pop
ds
or
outsb
add
stos
cmp
clc
jbe
jne
pusha
add
nop
cmpsl
nop
rcll
imul
jge
add
rcll
fnstenv
add
jmp
add
mov
mov
es
lock
cmp
add
rolb
jg
mov
adc
adc
add
sahf
jge
xchg
lock
inc
jp
dec
add
mov
cmp
add
xchg
jbe
cmp
dec
enter
shll
inc
je
lret
inc
add
add
popa
or
cltd
roll
push
data16
add
pushl
shrb
and
lea
pusha
add
and
or
and
int3
xchg
pop
add
aaa
and
add
jle
jp
mov
cmp
aas
add
pop
add
add
sti
clc
push
lcall
sahf
push
mov
movsb
adc
add
mov
pop
push
add
mov
lahf
lret
and
add
or
sub
cli
pushf
push
add
add
jmp
rcrl
add
mov
mov
push
add
popf
cmpsl
std
aaa
faddl
fwait
das
out
in
push
add
lea
mov
mov
add
add
imul
push
xlat
xchg
movsl
mov
movsb
bound
loopne
mov
add
adc
imul
cmp
clc
rcrl
data16
add
test
repz
cmp
imul
add
cmp
add
sub
sbb
or
pop
pop
add
add
add
fwait
data16
mov
shl
adc
sub
jge
mov
dec
add
rorl
out
inc
dec
cmp
popa
adc
adc
ljmp
loope
in
add
push
add
push
pop
add
out
push
add
add
xor
repz
mov
xor
jge
mov
xchg
cmp
dec
jecxz
rclb
mov
lret
adc
dec
add
insb
add
movsl
mov
inc
add
mov
mov
add
mov
add
mov
push
add
inc
add
fdivs
add
in
in
add
pop
aas
hlt
or
pusha
add
subl
add
lret
aas
lret
xchg
test
mov
pop
adcl
add
mov
push
xchg
inc
add
add
add
add
jg
add
xchg
push
xor
out
and
add
push
add
inc
add
mull
adc
enter
enter
add
xor
scas
lock
add
jne
fisttpll
mov
add
add
mov
add
add
out
add
add
add
ja
data16
dec
test
inc
shll
cmp
or
and
lcall
fwait
cli
adc
push
xor
sbb
fwait
aaa
inc
add
mov
inc
add
and
daa
int3
or
pop
add
add
icebp
mov
scas
or
mov
cmp
hlt
mov
leave
in
jle
test
mov
das
mov
dec
add
add
cmp
add
add
add
in
adc
testb
push
add
mov
cmp
push
mov
and
inc
outsb
add
lds
rol
and
xor
xor
js
add
xor
testl
std
ret
add
leave
mov
xor
movsl
xchg
mov
xchg
sub
mov
xor
jge
add
enter
add
add
pop
je
ljmp
pop
jae
cmp
sub
out
add
adc
add
add
ret
sbbb
add
add
in
loope
sub
test
enter
mov
jp
in
mov
cmpsb
jge
push
push
idivl
and
inc
add
xchg
out
xchg
jb
sub
push
lock
add
add
popa
jbe
test
add
add
add
add
out
push
sbbl
xchg
fldt
repz
mov
pop
or
das
push
add
pop
add
add
nop
mov
jne
add
add
ret
arpl
das
dec
add
int
mov
repz
add
ljmp
or
out
jmp
fcoml
test
test
jns
xchg
jo
pop
mov
gs
add
add
loope
std
and
int
add
push
add
adc
and
ljmp
test
outsb
add
add
mov
sti
fisubl
or
dec
mov
in
mov
sub
test
jbe
hlt
xlat
mov
push
hlt
mov
mov
add
lret
xor
fisubs
dec
add
repnz
add
xchg
mov
cmc
mov
add
inc
add
lcall
add
push
rcrb
test
out
mov
mov
aad
cmp
jp
addr16
sbb
daa
mov
pop
add
iret
inc
add
testl
or
test
test
mov
xor
or
iret
mov
add
add
cmp
pop
subb
aad
or
test
shr
data16
out
dec
add
add
add
scas
sar
add
add
aaa
xchg
inc
add
add
mov
add
imul
mov
sub
pop
push
sub
pop
mov
xchg
jecxz
sahf
lahf
mov
loope
sub
mov
add
gs
sti
cmp
ret
sub
addl
call
test
into
dec
dec
iret
pushf
jo
mov
add
add
sub
popa
ret
lods
mov
aas
or
popf
add
mov
inc
add
pop
sbb
insb
add
inc
add
pop
add
loop
inc
mov
add
jae
hlt
mov
sub
pop
add
stc
pop
out
cltd
sub
xchg
dec
mov
add
jmp
repz
push
xor
loop
sub
lock
add
dec
add
add
add
add
fcomip
repz
adc
and
scas
dec
adc
mov
cmp
loop
cmp
fildll
fimuls
xchg
fcomi
dec
repnz
dec
add
dec
add
cmc
out
mov
push
add
xchg
mov
cmpsb
mov
ficomps
add
pop
add
dec
fsts
stc
aas
mov
insl
inc
in
push
ss
ret
xor
jno
cmp
add
add
pop
add
add
add
inc
popa
insb
add
sub
rorl
push
mov
add
ljmp
and
push
add
jne
add
cld
inc
add
fdivs
inc
add
pop
add
pop
mov
sahf
loope
add
fdivrl
repnz
popf
xchg
add
add
mov
add
pop
add
ret
add
add
jecxz
inc
pop
add
icebp
test
mov
or
sti
test
and
mov
xchg
pop
gs
int
and
ret
cmc
outsb
add
xchg
pop
mov
jo
cmp
stos
fsubs
cmp
jb
adc
cmp
push
add
adc
and
mov
ret
mov
sub
popa
out
mov
cli
stos
mov
mov
decb
aaa
jp
mov
stos
pop
lahf
dec
add
addr16
fldenv
push
jnp
lcall
sub
sub
js
lret
test
sbb
int
and
icebp
test
add
loop
cmc
fld
mov
scas
or
and
add
repz
pop
add
add
into
mov
aad
mov
xchg
mov
dec
add
add
jbe
jl
cmpsl
and
and
fcmovne
cmp
add
popl
pop
pushf
btr
mov
out
add
adc
sub
add
data16
mov
add
sbb
sub
add
add
cld
jmp
aas
jle
fldcw
leave
out
add
add
daa
out
xlat
ret
lock
add
clc
das
dec
mov
fldt
and
xchg
xchg
cmp
testb
fists
add
add
push
add
nop
cmc
insb
add
iret
xor
icebp
pop
add
push
add
bnd
push
add
decl
lcall
std
pop
add
gs
pop
add
movsl
jecxz
inc
add
xor
loope
jno
test
faddp
fdivrl
icebp
lods
out
mov
sub
xchg
push
and
jle
sti
fsubrs
xor
add
xchg
mov
nop
sbb
fcoml
test
lds
bound
aad
add
add
sbb
mov
add
xchg
adcb
testb
inc
add
mov
xchg
mov
dec
add
add
insl
je
les
add
jae
fnsave
add
cmp
dec
outsb
add
stc
sbb
or
movsl
xchg
jmp
add
pop
push
push
add
add
jae
add
mov
add
or
ja
sbb
int
dec
pop
add
push
push
add
pop
aaa
add
dec
data16
pop
xchg
ja
jl
in
xor
push
add
sub
push
add
cmc
jle
pop
add
std
loopne
out
xor
jnp
add
add
or
xchg
filds
lret
int3
xlat
sti
mov
addb
xchg
pop
testl
addr16
and
add
or
xchg
sbb
into
and
xchg
mov
call
mov
out
imulb
jl
fsubl
test
in
add
push
inc
add
add
mov
test
push
add
cld
or
fcoml
jns
add
icebp
and
fwait
pop
dec
add
push
add
add
add
sbb
cld
sahf
sbb
pop
add
xchg
adc
cld
aad
mov
add
jno
add
add
mov
add
mov
add
into
call
jecxz
push
add
arpl
mov
int
add
sbb
add
cmp
mov
add
and
bound
pop
add
cmp
sbb
mov
add
out
int
add
in
dec
mov
mov
jne
loope
xlat
xchg
shl
dec
add
add
adc
and
add
add
mov
fsubrl
add
add
leave
xchg
fwait
adc
or
sub
lahf
daa
lods
pop
add
inc
add
xchg
sbb
loopne
add
add
pop
aaa
inc
add
add
sub
divb
sub
enter
cld
fisttpll
xor
xchg
sti
subl
inc
mov
loopne
push
dec
add
add
int3
jl
mov
fisttpll
push
xchg
xchg
xchg
arpl
jae
dec
push
add
mov
cwtl
push
ss
aam
scas
inc
mov
add
sub
aad
test
pusha
add
add
pop
add
push
add
stos
lea
add
jae
add
and
data16
or
bound
xor
cwtl
and
cmpsb
jge
sbb
dec
add
popa
sahf
mov
or
add
and
mov
pop
add
dec
add
jge
insl
mov
loopne
mov
imul
add
inc
add
add
enter
dec
add
mov
and
mov
in
adc
dec
aas
cld
inc
add
add
ror
sub
cmp
add
add
inc
add
mov
jno
jbe
inc
add
dec
rorb
fwait
mov
add
add
add
mov
add
and
cmpsb
movsb
cmpsb
fwait
enter
lret
movsb
adc
add
push
add
inc
add
outsl
cmpsb
aad
add
aam
xchg
enter
add
ja
pop
bound
sbb
xchg
cmp
nop
stos
hlt
xchg
orb
cmpsb
mov
insl
push
mov
sbb
lcall
daa
and
lods
sub
jle
icebp
stc
fcomps
sub
js
push
add
pop
add
mov
pushf
pusha
add
sbb
outsb
add
add
sbb
add
pop
jmp
push
aas
xor
push
insl
xor
and
loopne
pop
je
loope
add
xchg
and
sbb
loop
add
inc
xchg
mov
jno
aas
xchg
jno
dec
sahf
in
xorb
fwait
js
enter
add
add
add
mov
adc
popa
adc
dec
add
or
fidivl
inc
add
cmpsb
mov
repnz
dec
add
mov
movsb
inc
cmp
shll
sahf
ffree
or
cmc
scas
scas
stos
xchg
push
scas
outsb
add
incb
loope
add
add
shll
mov
mov
jne
inc
add
lods
aam
add
push
add
jmp
sub
ss
mov
add
cmpsl
mov
xchg
popl
shlb
aaa
pop
add
ficomps
push
or
sub
inc
sti
lret
push
add
add
pop
mov
add
out
arpl
add
pop
add
shlb
lods
loopne
add
out
and
jmp
mov
add
sahf
push
push
add
add
add
jbe
ja
insb
add
add
dec
adc
in
div
xorb
mov
rolb
bound
nop
out
add
test
loope
repnz
mov
cmp
sbb
rcll
ljmp
sub
mov
push
add
push
add
push
pushf
in
push
pop
sub
outsl
sbb
jmp
ret
mov
add
out
sub
mov
pop
add
add
sub
bound
inc
add
repz
add
dec
add
inc
iret
inc
push
jecxz
cmp
ja
mov
add
shll
add
lret
mov
sub
ja
js
jne
add
cmp
cltd
xorb
add
dec
enter
rcrb
aad
push
inc
mov
add
loopne
xchg
into
sbb
jbe
adc
cmp
into
mov
aas
scas
mov
in
jmp
add
cltd
xchg
call
bound
in
jg
sbb
add
xchg
stos
pop
push
add
cmpsb
pop
imul
xchg
dec
add
mov
aaa
cltd
sub
jle
pop
add
push
add
in
add
pop
scas
ljmp
je
bound
cmp
push
add
mov
call
in
jae
xchg
mov
pop
out
add
int3
adc
cmpsl
mov
in
prefetchnta
repz
stos
xchg
jae
mov
orb
or
adc
adc
fbld
sahf
inc
add
inc
add
fwait
int3
dec
mov
aam
cld
je
in
mov
mov
jae
adc
cmp
add
mov
jp
lods
pop
add
scas
fwait
xor
cld
xor
or
xchg
mov
ss
shlb
inc
add
push
jnp
add
mov
jnp
sub
add
test
add
add
push
inc
add
jmp
cmp
add
inc
out
out
sub
mov
rcrb
scas
push
add
cwtl
push
add
inc
add
hlt
and
pop
and
add
add
movl
outsb
add
add
ret
sahf
pop
add
bound
mov
std
adc
mov
out
cld
jns
idivl
js
ret
adcb
push
add
mov
mov
push
add
dec
add
add
add
mov
std
fbld
popf
xor
test
sub
inc
icebp
rolb
pop
add
inc
add
sbb
and
mov
in
out
into
mov
pop
jmp
adc
les
add
data16
add
pop
add
cld
sti
pusha
add
inc
add
add
xchg
inc
add
stc
mov
aad
fimull
add
in
xchg
pushf
jl
shl
adc
xor
xchg
std
mov
test
cmpsb
cwtl
sbb
jno
in
add
inc
add
sbb
fsubp
push
add
xchg
sub
data16
add
arpl
xchg
adc
repz
mov
std
push
add
and
insb
add
xor
jae
jmp
add
add
imul
aas
addl
daa
adc
inc
add
fbstp
fnop
ljmp
movsb
cmp
cmp
jle
jae
add
add
add
xchg
sub
jns
loopne
add
push
add
xchg
mov
add
mov
pop
shll
or
adc
mov
xchg
sbb
adc
mov
xchg
mov
loopne
inc
pop
add
cltd
subl
mov
into
pop
push
xor
push
add
sbb
adc
out
into
stos
or
xchg
data16
and
add
leave
lret
repz
pop
add
sbb
ja
out
jp
subb
add
subl
addr16
imull
mov
negl
aam
cltd
mov
in
lret
inc
cmp
xchg
push
add
and
cmp
ret
mov
push
add
push
sbb
pop
lea
jnp
fcmovb
push
add
es
jle
mov
push
add
aad
ds
adc
inc
add
mov
mov
add
add
les
add
in
cmc
adc
aad
filds
sbb
shr
outsl
out
add
add
fisttpl
mov
adcb
mov
adc
add
add
mov
lret
push
add
mov
pop
icebp
js
std
mov
inc
add
outsb
add
pop
add
xor
movsl
andl
mov
mov
pop
add
ret
push
mov
std
xor
test
add
movsl
fmull
js
xchg
adc
scas
dec
add
mov
lret
mov
insb
add
repnz
add
sub
int
inc
cmp
jo
mulb
clc
jle
fwait
ret
imul
loope
add
jp
les
orl
add
shlb
sarb
add
lods
roll
add
cld
push
add
lods
mov
push
mov
stos
jle
rclb
lods
ficoml
add
out
sbb
mov
mov
jnp
add
insb
add
add
cs
lcall
add
pop
add
xchg
outsl
or
shlb
loope
add
add
pop
add
jecxz
jo
aas
arpl
ret
daa
jb
iret
out
bound
shrl
add
inc
into
les
add
mov
cmpsb
aad
bound
sbb
mov
add
cmpsl
arpl
mov
jo
xor
push
pop
inc
mov
add
sub
add
add
add
sbb
mov
jmp
sarl
mov
frstor
cmpsb
adc
lcall
inc
or
add
add
add
negb
fcomps
and
lret
add
push
fs
xchg
icebp
out
ret
jne
xor
test
add
in
je
sub
dec
add
or
sbb
cmp
aam
repz
push
add
mov
add
std
xchg
je
jl
ds
out
je
xchg
push
call
add
add
cmp
push
add
add
and
inc
mov
push
add
adc
adc
out
xchg
loop
add
mov
inc
add
outsb
add
xor
mov
loop
hlt
dec
lret
pop
cmp
insb
add
cmc
push
add
jno
adc
sarl
dec
or
pop
add
cmp
add
leave
dec
add
push
add
push
out
add
daa
xor
call
sarb
js
imul
call
divb
add
adc
pop
add
imul
aam
xor
sub
fwait
dec
mov
jbe
xchg
lret
pop
add
fdiv
jae
inc
add
add
mov
and
sbb
ja
call
add
add
addr16
add
inc
add
add
add
pop
loop
in
and
mov
add
pop
jb
setbe
pop
inc
add
add
rcrl
repz
add
daa
lcall
add
add
nop
xor
xchg
mov
add
xchg
pop
add
jbe
lcall
fidivrl
add
xor
jecxz
fcompl
xor
xchg
cmp
roll
push
add
je
inc
add
cmp
ss
mov
push
jno
add
loop
xlat
in
sub
lds
add
inc
add
in
test
jnp
jp
jge
shl
push
push
add
pop
add
inc
lahf
xlat
sbb
fildl
inc
add
rcrl
adc
loop
cmp
fucomi
ret
outsb
add
std
add
jno
sub
int3
sbb
lea
nop
outsb
add
mov
mov
fbld
xchg
adc
xor
pusha
add
or
notb
fadd
or
subl
add
sub
mov
nop
and
adc
add
lods
add
cmp
inc
mov
pop
imul
xchg
push
add
sub
push
add
or
sahf
scas
aam
lret
mov
push
add
adc
add
add
add
jmp
fldenv
adc
push
add
popf
xor
add
push
add
cmp
xchg
pop
add
sahf
out
add
add
mov
add
shll
out
pop
pushf
arpl
roll
add
add
ja
add
cmp
leave
xchg
pop
pop
repnz
cmovb
sahf
jp
insb
add
push
add
push
mov
and
and
add
xchg
andb
mov
adc
or
mov
fcmovne
fdivl
or
add
add
add
fisttps
add
add
in
xor
sub
sub
jg
fidivrs
add
xchg
and
out
data16
lret
add
add
sbb
vmwrite
jne
ljmp
int
adc
mov
xor
daa
fisttpll
pop
sbb
add
je
dec
clc
shlb
add
add
and
scas
push
add
testl
add
add
sub
sub
add
add
jb
test
cld
adc
dec
add
mov
add
mov
add
add
add
xorl
push
mov
jmp
add
fidivl
pop
add
add
add
nop
in
icebp
pxor
add
push
add
fbstp
shlb
mov
add
mov
add
or
imul
push
pop
add
cwtl
xlat
fcmovnu
dec
add
mov
inc
add
add
sub
pop
movsl
ret
lret
add
add
push
add
rclb
add
add
fistl
cs
mov
add
add
mov
add
mov
sbb
sub
sbb
ret
cmp
bnd
sbb
pop
add
mov
add
js
notb
lds
mov
das
orl
jae
cmpsl
lahf
fwait
mov
add
or
pop
test
add
add
cmpsb
jge
add
jmp
add
aas
jns
and
and
ds
jb
sti
test
movsb
pop
sub
xlat
loop
fwait
jl
insb
add
sbb
sub
mov
jge
mov
sahf
adc
add
fwait
sub
movsl
add
fisubrl
pop
out
dec
jbe
sti
lcall
mov
add
add
sbb
add
add
xlat
jno
add
adc
add
add
and
push
add
add
add
sarb
add
add
and
or
out
orb
lcall
add
mov
scas
jmp
add
sbb
popa
mov
add
xchg
mov
xor
push
add
mov
push
xchg
xchg
mov
js
adc
jne
cmpsb
pop
jo
bound
mov
add
scas
hlt
in
dec
pop
add
shrl
sbb
test
cmpsl
dec
add
lea
mov
jbe
aad
add
adc
cmpsb
scas
and
mov
sub
mov
inc
add
loope
in
add
out
repz
push
xchg
imul
xor
call
sbb
test
add
sahf
mov
gs
hlt
add
adc
lods
aam
ret
add
pushf
mov
dec
stos
aam
add
xchg
mov
das
xchg
sbb
mov
rcr
add
add
daa
inc
add
dec
fs
jecxz
jle
loopne
push
psubb
xchg
adc
cmp
lock
add
sbb
push
add
cmc
adc
in
clc
xor
add
push
add
add
mov
pop
add
xchg
addr16
add
lret
mov
rorb
add
and
inc
pop
mov
mov
int3
nop
aam
or
push
and
into
sub
and
jbe
lock
adc
aad
hlt
gs
psrlw
add
cmp
jg
dec
add
add
stos
add
jl
sahf
sbb
rolb
add
icebp
push
add
add
add
jne
jge
ljmp
add
icebp
sti
xor
pop
push
je
jbe
and
cmpsb
leave
sub
add
lcall
add
ja
jmp
add
cmpsl
stos
in
jecxz
xlat
call
fsubrp
jmp
movl
add
fnstenv
filds
xchg
add
add
decl
fmull
cmp
leave
inc
add
pop
add
add
movsb
ja
add
add
sbb
pop
sbb
push
daa
imul
fld
pop
mov
or
add
mov
add
bound
pop
add
and
push
add
in
sub
add
jb
aad
add
scas
mov
adc
andl
adc
mov
jo
test
or
add
xchg
xorl
out
mov
jecxz
cmp
loop
out
xor
cmp
mov
leave
adc
lcall
or
mov
js
xlat
popa
shll
jl
jae
jg
inc
add
inc
add
cld
cmp
sahf
mov
and
sbb
mov
dec
add
add
add
adc
push
add
add
xchg
pop
data16
imul
pop
add
sbb
arpl
add
add
shlb
or
add
sti
ficomps
insl
les
jecxz
add
pop
cltd
arpl
mov
sbb
jo
imul
mov
mov
sbb
jle
cwtl
add
add
add
add
das
js
cli
adc
aam
cmpsb
fdivl
xor
add
loopne
add
add
stos
mov
sub
adc
and
dec
aaa
inc
add
sbbl
mov
push
add
xor
mov
stos
dec
out
pushf
cld
or
ficompl
cmpsl
call
bound
inc
add
add
rclb
add
xchg
pusha
add
fsubs
xor
push
add
clc
mov
add
add
jg
and
mov
add
adc
xchg
xorb
xor
xor
jecxz
add
xchg
or
add
ret
add
and
jbe
inc
xor
cmc
push
into
pop
add
mov
dec
pop
xchg
fadds
mov
add
dec
hlt
jb
jnp
shll
lret
lret
js
inc
push
add
movsl
into
dec
add
ja
nop
inc
popa
adc
mov
mov
or
mov
add
pop
add
outsl
subb
lret
and
testb
fcoml
xchg
pop
pop
add
inc
std
xchg
cmp
add
dec
andb
push
push
ret
loop
jo
sub
jne
iret
jl
mov
jb
add
sub
fisubrl
fcmovbe
and
fs
sbb
dec
add
lods
in
ret
movsb
notl
bound
pop
add
popf
and
jns
lds
and
ds
or
mov
add
add
xor
hlt
fwait
incb
in
and
add
add
push
mov
cmp
xchg
pop
add
rol
shl
adc
lahf
ljmp
sahf
js
dec
add
mov
add
jecxz
add
int3
cmp
xchg
fadd
mov
or
data16
and
cmpsb
lahf
ljmp
std
cmp
cwtl
mov
fiaddl
lret
notl
out
in
add
rolb
mov
adc
movsb
fidivrl
add
stc
insl
cmc
xchg
mov
mov
daa
xor
fistl
mov
fs
inc
cwtl
mov
lock
add
cmp
pop
add
ja
add
cmc
shlb
xor
fcos
movsb
mov
xchg
jnp
add
add
add
mov
and
sub
add
push
mov
mov
stos
push
add
shl
add
and
and
push
add
jmp
in
inc
adc
add
xchg
adc
dec
pop
push
add
mov
add
lock
mov
movsl
out
ret
divl
add
mov
xor
jno
cld
inc
add
add
in
jmp
ror
dec
ret
dec
pop
mov
dec
add
pop
in
add
add
cmp
xchg
push
add
add
add
push
add
add
or
orl
cltd
xchg
inc
add
test
fsubs
add
mov
jb
das
inc
add
add
into
nop
mov
int3
outsb
add
lahf
and
push
lret
adcb
dec
add
stc
or
add
add
into
xchg
out
jmp
add
or
pop
push
pop
add
push
add
imul
cmpsl
sub
shr
cmpxchg8b
add
idivb
imull
add
subb
frstor
clc
cltd
cmp
add
jno
aam
adcb
inc
sbb
jmp
mov
mov
push
add
jle
mov
mov
imulb
mov
jns
add
add
add
sbb
xchg
mov
add
or
add
ret
sbb
add
aaa
sbb
shll
mov
mov
ret
xchg
xor
xchg
xchg
fiadds
into
fimull
data16
add
mov
repz
scas
ror
mov
stos
lock
mov
add
push
or
mov
add
push
pop
sbb
loope
mov
push
fwait
jl
clc
sub
jbe
mov
cmpsl
in
dec
add
gs
loopne
sarl
js
jp
mov
pop
push
add
add
add
mov
loope
add
repz
loopne
mov
add
jecxz
filds
js
in
add
mov
sbb
add
mov
adc
inc
add
add
mov
loop
dec
add
add
leave
fldenv
jbe
adc
mov
repnz
add
insl
lcall
outsb
add
aad
mov
push
add
pop
push
add
and
ret
aad
loope
dec
stos
or
insl
aaa
int3
push
add
stos
push
add
stos
xchg
dec
add
mov
sub
popa
fildl
sub
mov
mov
push
add
dec
add
cwtl
scas
lods
int3
sahf
in
subl
push
add
mov
in
add
les
add
add
sar
xchg
lods
int
stc
adc
sbb
icebp
mov
xor
add
insb
add
add
js
imul
mov
push
add
mov
popf
stos
sbb
mov
add
pop
data16
dec
add
jp
mov
add
inc
add
mull
pop
add
adc
add
xchg
inc
add
add
out
int
push
data16
imul
dec
aas
push
add
fimuls
push
add
xor
mov
add
add
cmp
pusha
add
add
popf
dec
add
pop
repnz
add
pop
or
adc
pop
add
add
shrl
mov
inc
das
insb
add
fdivl
pop
leave
sbb
mov
add
rcrl
add
out
in
cltd
cmp
fstpt
test
ret
or
add
lds
and
xchg
mov
popa
push
add
add
jecxz
cwtl
leave
cmp
or
jnp
lock
movsb
mov
add
data16
push
add
mov
add
add
aam
cmpsl
inc
adc
xor
add
je
adc
mov
popf
jbe
loopne
add
imul
add
out
cltd
adc
jecxz
jg
jno
add
adc
jge
rcll
add
mov
add
pop
mov
push
das
ljmp
fisubs
add
inc
push
insl
popa
lds
call
dec
add
add
imul
sbb
mov
xchg
std
push
add
mov
and
in
data16
fcomip
aad
ja
adc
mov
add
mov
popl
int
adc
mov
sub
fnstsw
add
add
pop
pop
pop
xor
mov
pop
add
pop
push
add
push
rcrl
add
add
call
bound
adc
sbb
pop
pop
mov
loope
pop
add
xor
add
sbb
popa
lea
add
fisubrl
enter
fwait
in
popl
pop
add
fsubs
add
ja
add
clc
rol
inc
add
pop
jns
jp
das
pop
leave
ret
mov
dec
add
mov
mov
inc
add
enter
mov
add
sbb
adc
push
sub
scas
mov
mov
testl
imul
insb
add
mov
mov
sbb
cmp
pop
fs
push
add
dec
inc
mov
or
pop
out
jl
mov
das
test
add
rclb
lea
add
mov
mov
sub
add
imulb
mov
cmp
mov
adc
pop
out
pop
lea
add
xor
dec
add
pushf
jne
add
mov
cmpsb
xor
jp
add
add
imul
add
in
mov
add
pop
pop
and
inc
add
jp
inc
add
mov
jecxz
xchg
push
add
out
loop
lds
jp
aas
xchg
mov
add
scas
fcomps
add
sbb
add
mov
push
adc
outsb
add
mov
xor
sbb
add
push
add
pop
ret
shlb
pop
jge
cmp
or
sub
lcall
cltd
or
mov
lock
cmp
dec
add
orl
add
xor
sahf
adc
rcl
mov
outsb
add
test
add
imulb
scas
fnstenv
mov
pop
add
aaa
mov
add
sbb
add
ret
aad
fsubrs
add
mov
add
add
sub
add
leave
or
addr16
and
add
insb
add
mov
and
ja
jb
notb
jne
bound
sbb
add
add
push
add
mov
leave
aaa
inc
add
mov
shll
sbb
insb
add
add
mov
movsl
adc
pop
clc
repz
add
push
nop
pop
add
pushf
sarb
add
popa
daa
divb
aad
add
scas
cmc
daa
xchg
ficoms
add
xchg
call
mov
cmp
cmp
xchg
mov
outsb
add
add
gs
add
add
add
fstl
xor
dec
and
or
adc
add
sub
stc
inc
add
add
cmpsl
jbe
ror
int3
mov
jecxz
cmp
push
aas
add
dec
dec
cli
and
push
add
add
add
addr16
add
add
mov
add
jae
sti
jnp
add
js
xlat
cmp
fnsave
inc
hlt
fidivs
cmpl
mov
lret
sbbb
cmp
xchg
pop
movsl
sub
nop
xor
ret
add
pop
negb
sub
hlt
xchg
subl
mov
rcrl
mov
hlt
je
cmp
rorl
add
sub
fadds
les
cli
xor
xchg
jp
xchg
popf
add
jl
sti
cld
sbb
data16
out
aad
nop
mov
add
add
jp
xor
imul
in
cltd
add
pop
add
jbe
push
add
lea
add
cmpsl
push
add
fiaddl
add
xor
mov
clc
pop
hlt
test
lods
push
add
and
xchg
lret
mov
add
sub
add
adc
or
rclb
or
test
sub
aas
fwait
data16
call
movsb
xchg
xchg
sti
fisttpl
inc
fadds
adc
gs
add
sar
sbbb
xor
add
pop
add
cmc
movsb
or
mov
push
jae
push
add
sbb
push
mov
imul
add
cmpsl
add
inc
add
lret
jecxz
sti
xor
dec
add
add
mov
fldcw
add
lds
mov
add
loopne
push
add
adc
enter
bound
hlt
xlat
sbb
add
or
add
mov
jmp
mov
lcall
sub
add
mov
add
push
add
adc
icebp
outsl
jl
loope
clc
jbe
or
add
xchg
mov
add
pop
std
jge
sub
js
stos
xor
in
cmpsl
cmpsl
and
iret
bound
mov
inc
jae
add
lcall
cmp
add
add
sbb
mov
stos
cmpsb
pop
mov
xchg
push
add
add
mov
fiadds
leave
out
inc
sti
lcall
xor
stc
movsl
jne
push
add
gs
andb
add
mov
add
xchg
lcall
scas
add
idivb
mov
add
inc
add
divb
popa
imul
aas
mov
mov
imul
pop
add
lock
xchg
lock
in
add
add
add
bound
xorl
add
add
mov
ret
mov
push
add
or
pusha
add
and
add
add
repz
dec
xlat
sarb
push
add
dec
out
out
movsb
mov
xor
add
ret
dec
add
lock
jle
jb
mov
push
xchg
mov
add
pop
push
add
add
scas
mov
sub
adc
sbb
add
add
out
ficoms
daa
stos
jnp
fdivrs
leave
mov
negl
add
dec
jno
add
cmpsl
mov
mulb
add
mov
insb
add
ljmp
add
xchg
aaa
xor
inc
add
sub
add
outsl
stos
mov
xorl
pop
add
idivl
pop
add
jge
add
sub
and
pop
mov
add
xor
sbb
pop
dec
hlt
mov
cs
pop
adc
lcall
add
pop
add
fsubrs
push
nop
mov
in
push
add
rorb
push
cltd
cmpb
mov
add
cmpsl
mov
pop
mov
or
xor
add
scas
jle
and
pop
dec
sahf
xor
sbb
pop
add
gs
mov
xchg
and
mov
add
add
or
dec
add
push
das
dec
add
ret
sub
cwtl
je
cltd
pop
or
aaa
push
jmp
or
add
add
mulb
stos
add
sub
or
out
fsubrl
mov
fwait
pushf
jo
flds
mov
mov
loope
sub
ljmp
adc
mov
dec
add
add
outsl
mov
mov
imul
hlt
roll
lea
add
or
loop
adc
push
loopne
add
inc
add
loop
add
scas
lcall
push
xorl
add
mov
xor
shrb
add
add
cmp
mov
daa
xchg
cmp
push
add
add
add
xor
mov
sbb
sub
jle
stc
sbb
adc
xor
inc
add
push
dec
add
fidivrl
movsl
scas
jb
pop
jo
aam
cmp
pusha
add
add
test
add
test
leave
xchg
adc
mov
xchg
push
add
add
mov
clc
inc
add
roll
scas
push
out
test
cmpl
jp
ret
icebp
xor
sbb
sub
xor
xchg
add
add
cmpsl
cmp
mov
xchg
sbb
lods
mov
or
mov
or
adc
movsl
fdivl
imul
jae
add
add
lcall
lahf
insb
add
mov
cmc
imul
lods
adc
cld
mov
jo
mov
jbe
add
pop
mov
add
test
movsl
sub
cmpsb
mov
mov
add
pop
pop
add
cmc
mov
das
pusha
add
andl
add
add
mov
and
add
insl
das
fsubrl
shl
dec
add
push
add
add
add
or
popf
xor
jecxz
add
jne
add
mov
test
add
psubusb
mov
mov
lea
add
add
jne
dec
sbb
cld
mov
sbb
mov
push
add
cmp
push
add
cld
mov
leave
scas
inc
add
outsb
add
mov
pushl
pusha
add
xchg
inc
inc
mov
mov
inc
add
dec
add
or
mov
add
mov
addps
push
add
imul
add
add
add
xchg
out
movsl
icebp
gs
ret
add
lods
popa
pop
add
std
scas
sbb
roll
add
aas
int3
les
jo
jmp
add
lods
jmp
add
pop
add
add
and
mov
add
add
testl
in
sub
into
xor
out
jae
add
scas
cmpsl
mov
mov
add
mov
in
adc
xor
sbb
mov
pop
add
aas
add
mov
mov
rclb
cltd
sub
aam
add
add
add
mov
push
mov
pushl
push
sbb
add
and
xor
sbb
out
fisubrs
add
add
push
loop
jae
xlat
mov
jae
dec
add
lock
add
xchg
xchg
mov
add
pop
mov
call
out
add
add
add
sbb
into
jecxz
ja
xchg
mov
loop
add
ljmp
mov
adc
cmpsb
into
mov
add
shrb
jne
das
pop
sti
out
add
add
xchg
test
bound
loope
xor
mov
push
sti
and
mov
or
enter
scas
call
pop
add
mov
addr16
ljmp
add
hlt
fsubrs
push
add
add
mov
cltd
adc
repz
add
ss
ja
or
add
in
cmp
imul
mov
push
add
adc
or
push
xchg
aas
and
pop
add
add
dec
add
add
enter
add
into
cmpsl
mov
add
add
rol
fimuls
std
fldenv
pop
adc
xor
lret
fcmovne
dec
add
jns
add
das
inc
xor
cmc
ret
dec
add
sbb
add
rclb
add
inc
xacquire
add
push
push
add
cltd
push
xor
das
adc
lahf
fstps
add
cmpsl
aam
in
add
and
clc
xchg
sub
fwait
movsl
aad
out
in
cmp
add
loopne
mov
add
push
cmpsl
pop
repz
dec
inc
add
repz
dec
adc
cld
lret
imul
fistps
mov
mov
movsl
mov
lods
data16
jno
add
std
push
add
scas
arpl
adc
ds
cmpsl
sbb
push
xchg
std
jns
call
xor
add
add
cli
popf
adc
cmp
adc
xor
aaa
cltd
sub
fisubrl
lock
add
add
popa
mov
and
sub
nop
sbb
add
add
lods
mov
pop
add
lret
cltd
pop
inc
add
add
ret
adcl
aad
mov
sbb
mov
add
nop
add
fstpl
add
add
or
push
add
add
neg
sub
mov
insl
jne
adc
dec
mov
inc
outsl
addr16
pop
std
jmp
add
add
outsb
add
add
inc
add
add
out
bndstx
xchg
rorb
jae
add
add
ficoms
dec
add
add
mov
inc
add
jmp
mov
push
add
mov
lea
pop
jl
int
add
jns
inc
imul
add
divl
add
push
das
insl
inc
or
mov
std
div
mov
cltd
insb
add
add
push
add
add
add
or
xor
mov
sub
adc
mov
inc
add
popf
jnp
add
test
mov
mov
sub
popf
mov
add
add
add
out
ja
adc
je
xor
pushf
jno
ret
jle
mov
pop
das
inc
iret
mov
lds
subl
lcall
add
add
pop
add
sbb
inc
add
out
into
test
add
shr
sbb
outsl
adc
add
inc
ret
adc
in
add
ljmp
add
mov
or
pop
and
jecxz
call
fisttpll
add
adc
popf
xchg
roll
sti
scas
lds
pop
andb
call
mov
jb
fildl
add
jp
das
rolb
mov
loopne
jmp
cmpsb
mov
jmp
push
add
add
mov
mov
pop
mov
add
xor
push
add
add
mov
push
add
daa
dec
negb
inc
outsl
lea
add
add
out
xchg
mov
mov
cmp
mov
movsb
xchg
add
dec
or
sbb
dec
js
fimull
test
test
cmc
ds
and
adc
shrl
sarb
add
daa
push
push
adc
add
nop
mov
sub
pop
xor
xor
add
mov
jle
das
mov
cmc
cmc
filds
add
mov
mov
xchg
push
movsl
outsb
add
add
ret
inc
stc
inc
enter
test
adc
enter
sub
sub
jge
pop
mov
lock
add
insl
cld
push
pop
add
add
inc
add
lcall
imul
fnsave
adc
mov
jnp
inc
add
push
add
cmp
push
add
idivb
add
xchg
data16
ret
xor
in
das
xchg
jl
in
inc
jg
cmp
insl
mov
imul
pop
les
mov
cld
int
mov
mov
add
outsb
add
icebp
xorb
jge
sbb
into
push
cld
xor
pushf
sbb
popf
sbb
jecxz
mov
subl
adc
sub
add
adc
bnd
add
pushf
mov
mov
adc
add
sub
sub
jno
inc
add
adc
jne
pop
adc
les
clc
cmpl
lret
xor
stos
jae
in
cmp
sarb
jns
f2xm1
inc
iret
popf
arpl
out
add
mov
add
add
push
add
test
jne
sub
mov
dec
adc
imul
fcoml
add
add
mov
pop
add
or
and
ret
test
rolb
out
push
inc
add
hlt
add
cwtl
and
cli
pushf
mov
add
jnp
xorb
imul
push
pushf
into
in
hlt
mov
add
add
aad
and
gs
inc
add
sub
andl
push
add
inc
jge
push
add
jae
sub
bound
lea
cmp
roll
popa
sbb
adc
dec
add
dec
add
add
add
mov
add
fildll
inc
or
xor
mov
loop
add
add
pop
arpl
jmp
jg
mov
mov
ja
add
sub
push
add
ret
add
inc
add
push
leave
mov
xor
dec
add
cld
repnz
loope
add
cmc
dec
add
add
xchg
sti
adc
add
cmpsl
mul
cwtl
arpl
add
add
jmp
mov
xchg
xchg
popa
shlb
push
add
mov
lret
inc
cmpsl
cmpsb
xchg
adc
inc
add
mov
add
and
lret
addr16
add
fldt
jo
addr16
xor
pusha
add
inc
push
adc
xchg
push
add
jo
xchg
or
adc
loop
xor
adc
repz
dec
add
mov
imul
add
add
add
icebp
mov
ret
xchg
xchg
add
add
test
faddp
popa
inc
add
or
add
data16
cmp
push
mov
add
shll
push
add
outsl
mov
add
das
jo
loop
sbb
sub
fstpt
jmp
pop
lret
xchg
mov
stos
repnz
add
pushf
or
pop
add
mov
pop
adc
movsl
out
mov
and
xchg
mov
sub
sbb
xchg
lock
add
add
sub
sbb
enter
mov
dec
add
add
mov
lcall
dec
add
push
add
add
arpl
mov
popf
mov
or
jno
jne
add
xchg
mov
daa
iret
pop
ret
or
lds
loopne
adc
std
repz
popa
lret
fistl
roll
add
pop
mov
mov
add
mov
aas
inc
add
mov
fnsave
scas
inc
add
cmpsl
test
pop
arpl
sub
mov
push
and
sahf
test
popf
add
add
dec
test
xor
sbb
add
push
add
cmp
add
jecxz
add
xchg
aaa
or
je
inc
add
add
movsl
sbb
andb
add
mov
loope
xchg
inc
add
push
sbb
mov
fstl
cmpsl
scas
mov
into
jp
gs
xchg
test
xchg
and
sub
cld
dec
das
cmp
ret
add
add
push
add
movsb
add
sbb
pop
rorb
lcall
add
fsubrs
cltd
iret
lcall
sbbl
add
or
js
hlt
xchg
das
xchg
push
ja
stos
sbb
add
stc
push
and
adc
ret
lret
ljmp
pop
jmp
or
mov
pushf
out
daa
inc
add
add
lea
add
cli
jnp
pop
lea
iret
test
mov
add
adc
sub
jmp
repz
add
add
add
mov
jno
add
cli
xchg
jns
add
aam
rol
cmp
pop
add
mov
mov
xchg
xor
add
add
mov
cmc
stc
cmp
xlat
inc
push
push
add
xor
je
into
scas
push
insl
test
pop
cld
push
add
pop
add
xchg
jmp
sbb
cwtl
fwait
lock
cmp
xchg
lods
mov
mov
and
pop
add
add
mov
xchg
lds
add
lock
xor
aas
cld
mov
pop
add
jo
mov
add
push
test
xchg
and
pop
dec
add
xchg
xchg
loop
add
pop
add
jp
pop
and
cwtl
out
add
and
adc
mov
loop
xchg
jle
lods
in
pop
adc
data16
add
xchg
mov
add
adc
js
xor
arpl
pop
jae
cmpsl
cmpsl
or
std
add
test
in
sub
fmul
fistps
add
test
cltd
push
add
cmpsl
daa
sub
loop
dec
add
and
mov
mov
add
sub
loope
add
loop
movsb
in
in
cmpsb
in
popa
xchg
or
add
stc
cmp
push
add
shlb
fidivl
inc
jg
add
xlat
cmc
lahf
add
cli
or
add
mov
add
fdivl
xor
fwait
movlps
dec
add
loop
push
fldl
pop
add
push
add
add
or
xor
lods
pop
xlat
xor
test
cmpsb
nop
test
sbb
std
xchg
mov
aas
push
add
aaa
in
mov
shll
nop
add
jl
push
add
or
sub
adc
push
cmpsb
call
mov
add
pop
loope
push
add
mov
rcrb
cwtl
in
inc
add
movl
add
add
xlat
bound
inc
ja
mov
dec
add
cmpsb
les
add
xlat
xor
pop
add
mov
add
add
enter
add
lods
repz
add
add
cmpsb
sti
out
sub
push
add
gs
js
test
mov
outsl
call
in
mov
pop
add
repnz
int3
mov
sbb
add
add
add
xor
jae
xchg
mov
push
mov
loope
add
incb
imul
push
add
jo
int3
push
add
add
jb
sub
add
inc
dec
loopne
sbb
pop
shll
mov
add
dec
add
add
push
add
add
jbe
leave
lods
dec
add
ja
dec
sbb
lds
jnp
fistps
fistl
pop
lods
jne
jecxz
add
sub
add
popa
sbb
ja
add
dec
add
inc
daa
or
or
push
add
add
add
add
push
add
jo
pop
push
mov
dec
add
add
movsl
or
fisttps
add
les
add
repnz
pop
add
jle
outsb
add
int
loop
mov
sbb
aad
add
leave
push
cltd
jecxz
fdivrl
add
add
aam
in
sub
lea
jne
test
adc
cwtl
cmp
adc
add
faddp
movsb
push
add
or
add
sbb
xchg
pop
gs
gs
dec
add
add
xor
cmp
je
cmpsb
pop
adc
add
or
mov
add
add
xchg
add
add
cld
fiadds
inc
add
dec
adc
add
add
aaa
or
pop
add
push
add
add
idiv
add
add
sar
add
xchg
pushl
add
add
cmp
jne
add
add
sub
adc
mov
fadds
add
add
push
xor
int3
mov
lock
add
sbb
inc
add
arpl
addr16
add
data16
mov
add
ja
test
add
iret
sbb
gs
mov
add
clc
or
xchg
dec
lahf
xchg
inc
or
add
lods
push
sbb
inc
add
outsb
add
add
test
add
adcb
pop
subb
add
lea
ljmp
mov
add
mov
xlat
push
add
jbe
lret
data16
add
add
sbbb
mov
rcrb
inc
pop
inc
lret
sub
sub
insb
add
mov
add
int3
insb
add
outsl
int3
or
pop
add
xchg
test
or
jecxz
lret
jb
sbb
in
push
add
mov
add
or
in
insl
mov
adc
xorl
inc
add
mov
mov
add
add
fadd
jno
sub
pop
movsb
popa
sub
mov
add
dec
add
les
adc
add
or
pop
mov
mov
jl
xchg
mov
add
dec
jb
out
xor
sub
loope
push
add
jbe
and
and
jmp
add
sbb
jno
xor
add
fwait
push
mov
push
add
ret
or
jbe
in
add
mov
adc
insb
add
pop
add
add
add
movsb
adc
xchg
cmp
adc
sub
mov
leave
xchg
arpl
imul
add
adc
add
inc
add
stc
insb
add
push
add
dec
pop
in
jmp
add
sub
sbb
pop
add
add
add
mov
add
imul
into
cltd
icebp
cmc
es
out
rcr
shl
inc
xchg
sbb
adc
cmpsl
push
add
cmpl
fcomip
addr16
add
add
fcompl
dec
add
out
ret
adc
jecxz
push
add
push
lahf
pop
shl
push
xchg
mov
std
sub
fwait
sbb
pop
ja
add
sarl
adc
adc
nop
insb
add
in
iret
and
stc
cmp
cmp
pop
add
add
add
push
add
in
test
fadds
xor
fsubl
push
add
add
xchg
lock
adc
inc
add
stc
dec
cmp
add
add
rolb
xor
daa
rorb
cmc
sub
mov
stos
jmp
lods
pop
fldcw
add
mov
add
inc
add
dec
pop
pusha
add
add
lods
add
push
add
push
add
inc
dec
pop
add
divl
and
scas
cmp
sub
pop
or
sarl
add
lcall
lock
ja
pop
das
push
sub
add
leave
inc
add
jmp
lret
dec
add
add
aas
mov
mov
dec
add
in
add
rorb
shrb
add
lea
mov
dec
jne
adc
lcall
add
add
jae
push
add
add
pop
add
jb
inc
shlb
sbb
test
pop
add
test
imul
add
insb
add
add
jmp
add
push
add
mov
mov
and
add
adcb
jnp
and
add
std
icebp
adc
aas
pushf
bound
mov
out
add
clc
in
add
add
stos
sub
ss
sub
dec
add
add
fwait
and
or
filds
cld
stos
push
xchg
je
daa
mov
jp
test
loopne
cwtl
lods
cld
sub
push
add
add
add
cmp
mov
imul
push
add
push
add
xlat
ret
adc
or
and
jo
jle
mov
movsl
scas
fucomip
mov
mov
imul
stos
ja
insb
add
clc
add
dec
jge
leave
mov
data16
call
dec
add
add
mov
push
xor
into
and
xor
mov
jo
jecxz
add
sub
clc
enter
push
add
pop
add
aas
ret
cld
aas
lret
in
test
inc
imul
lret
push
add
lods
fidivs
add
sub
leave
repz
icebp
mov
adc
ficoml
add
push
inc
add
loop
add
add
ret
jnp
int
add
mov
mov
and
jbe
jno
nop
dec
add
and
ljmp
add
add
inc
add
cmpb
stos
popa
loop
ret
int3
dec
add
inc
cmp
dec
hlt
lds
inc
add
jp
out
inc
adc
rcr
mov
dec
mov
add
dec
add
add
sbb
cltd
cmp
fwait
in
mov
push
add
mov
or
xchg
add
mov
mov
add
test
adc
ret
idivl
sub
xchg
out
jns
add
add
xor
sbb
fisubrs
inc
add
into
mov
xor
pusha
add
ret
add
pop
add
int
cmp
xlat
movsl
mov
jb
dec
ret
inc
add
mov
add
add
sahf
pop
adc
repz
lret
std
in
addr16
adc
sbb
repnz
add
add
add
mov
je
push
add
fiadds
arpl
sti
stc
das
lock
add
inc
icebp
adc
add
repnz
xchg
mov
test
add
pusha
add
out
test
add
mov
xchg
pop
bound
sbb
add
cwtl
stc
aaa
jp
test
jle
or
pop
push
add
lret
mov
sub
ljmp
sbb
mov
add
mov
add
daa
adc
pop
pop
loopne
jp
cwtl
jmp
lds
fwait
lahf
je
sub
xor
mov
add
ret
lcall
test
pop
imul
add
fisttps
add
inc
mov
push
adc
and
stc
popa
fisubrs
test
xchg
adc
add
add
cmpl
dec
add
cwtl
jg
add
pushf
int
add
imul
aad
add
lods
pop
add
mov
dec
iret
fimull
outsb
add
repnz
mov
std
push
sbb
int
add
add
pop
add
mov
add
add
cmp
jno
icebp
inc
sub
enter
dec
add
inc
add
mov
add
insl
dec
add
pop
add
push
add
sub
int3
mov
add
daa
repnz
push
add
push
add
pusha
add
popa
ja
loopne
lea
add
add
jecxz
add
add
cmp
cmp
xor
fwait
lock
add
adc
hlt
mov
xor
add
mov
add
sub
dec
movsb
sarb
loop
test
mov
and
pop
pushf
shlb
orl
test
dec
mov
add
push
add
aaa
dec
mov
push
add
call
mov
xchg
lock
sbb
data16
add
cmp
pusha
add
add
or
mov
jle
jl
sub
ffreep
mov
add
and
mov
push
mov
das
jecxz
dec
xor
add
adc
add
and
imul
stc
xchg
outsb
add
jne
imul
clc
xchg
cmp
sbb
add
add
dec
leave
cli
mov
dec
add
repnz
add
xlat
sub
pusha
add
push
add
out
insl
je
cld
add
add
add
sub
mov
mov
or
pushf
push
pop
add
add
add
test
mov
add
add
mov
pop
xchg
inc
add
cmpsb
in
pop
add
in
push
addl
cld
lods
sbb
pop
jecxz
jl
cmp
lcall
movsl
push
mov
push
mov
mov
xlat
pop
dec
dec
popa
add
mov
addr16
mov
adc
neg
and
cltd
in
xor
into
movsl
in
and
mov
push
add
stos
sbb
pop
adc
stos
outsb
add
add
adc
repz
sbb
dec
add
lahf
ja
lock
mov
scas
mov
cltd
push
nop
pop
xor
push
add
add
repnz
push
add
add
add
add
loop
lds
mov
jp
add
jle
insl
mov
mov
add
add
jge
sub
and
push
sub
add
orb
nop
or
pop
pop
add
in
add
mov
add
add
cmp
pop
add
add
cmp
jmp
inc
add
outsb
add
xchg
arpl
add
cmp
sbb
lahf
or
popa
push
add
ffreep
and
jae
adcl
enter
jmp
dec
scas
test
add
or
push
jb
sbb
cli
push
add
mov
insb
add
test
dec
add
add
repnz
cmpsb
jae
jne
xchg
nop
xor
inc
add
mov
add
add
add
iret
popa
mov
fidivrl
add
mov
add
test
femms
add
sbb
cmp
xor
pop
add
and
xchg
inc
add
cltd
shl
bound
xchg
lods
test
xor
test
mov
inc
add
sbbb
add
lock
popf
adc
xchg
mov
add
add
xchg
sbb
pop
test
inc
add
add
jle
push
add
pop
add
mov
add
add
push
add
add
adc
out
test
adc
xchg
or
les
add
mov
add
sti
insb
add
add
add
add
sub
jl
ljmp
add
stc
scas
dec
add
jo
insl
mov
fs
inc
mov
iret
mov
loope
pop
sti
dec
aaa
pop
icebp
outsb
add
add
mov
add
add
addr16
push
fwait
mov
test
cltd
cmpsl
vpcomq
add
add
ja
add
add
xor
xor
xor
dec
add
jle
pop
scas
imul
inc
add
push
or
fsubrp
por
pop
add
push
movsl
sbb
xor
inc
add
jle
lahf
inc
xchg
adc
push
aas
ficomps
lahf
mov
inc
add
add
fs
dec
add
fmuls
jo
mov
add
pusha
add
iret
call
add
jg
add
in
jecxz
scas
cwtl
add
add
cld
xchg
pop
inc
add
insb
add
or
ljmp
pop
pop
das
rcrb
push
add
xchg
out
add
add
add
mov
cmp
or
fwait
loope
sub
in
test
aaa
mov
add
adc
loopne
cmpsb
gs
adc
loopne
push
jo
dec
aad
xchg
xor
lock
cmp
cmp
add
push
add
add
dec
add
sahf
popa
xor
rolb
cwtl
int3
fucomip
pop
xchg
lods
or
call
sbb
add
cmpsb
xchg
insb
add
add
adc
add
pop
add
add
out
lea
push
add
pop
negl
add
ljmp
sbb
push
loope
iret
outsb
add
add
add
cmp
daa
arpl
add
cwtl
add
out
cmp
jo
pop
xchg
pop
inc
mull
add
add
adc
xchg
push
add
je
lods
xor
popf
js
cwtl
xchg
dec
inc
xchg
not
jno
divl
je
jl
jecxz
pop
dec
add
fisttpll
add
add
test
pop
add
xor
push
ret
pop
paddq
cmc
loopne
imul
lods
jmp
or
add
pop
cmc
jb
or
imul
out
test
add
mov
out
inc
imul
and
fwait
aad
imul
lods
stos
push
add
pop
add
shl
mov
add
insb
add
xchg
xchg
and
jmp
inc
rorb
aam
xor
inc
jno
mov
add
push
add
loopne
or
add
test
jle
jo
adc
loopne
push
add
xchg
cmp
pop
and
mov
cs
cmp
repnz
sarl
test
add
loopne
in
pop
jne
add
inc
add
cmp
inc
add
add
add
adc
cmpsb
outsl
jge
add
or
stc
pop
insb
add
mov
adc
xor
add
enter
test
add
fiadds
pusha
add
dec
mov
pop
adc
jo
sub
add
shr
xchg
mov
and
data16
add
add
cmpsb
pop
into
ror
add
imul
in
add
push
cmp
lret
int3
sub
outsb
add
add
push
xor
loop
add
add
sbb
rolb
and
cld
mov
cmp
dec
into
xchg
or
lock
xchg
add
shll
out
enter
add
push
sbb
sub
arpl
sub
and
mov
sub
pushf
xor
xchg
icebp
not
xor
fstps
std
dec
mov
jo
aam
and
sub
xor
xor
enter
hlt
push
or
and
inc
cmp
loop
jg
repz
dec
add
ja
pop
add
add
add
jg
outsb
add
mov
mov
adc
jmp
add
mov
add
add
and
cwtl
sbb
insl
xchg
add
jle
add
and
sub
mov
inc
add
dec
add
sbb
inc
add
pop
push
add
mov
sbb
shr
mov
cld
jns
add
or
push
add
cmp
fabs
sbb
fwait
and
jg
fimull
js
and
mov
add
cmp
cmp
fmuls
push
or
cmp
adc
insl
add
add
add
add
dec
xor
cmpsb
dec
jmp
iret
das
jp
fistpl
adc
aaa
push
add
pop
adc
les
pusha
add
and
inc
mov
add
add
jl
insb
add
ljmp
push
insb
add
add
add
pop
add
xor
xchg
mov
add
pop
xor
outsb
add
mov
xchg
das
ret
xor
bound
gs
and
popf
es
insb
add
adc
stc
jge
iret
insb
add
aam
cld
rcl
add
repnz
dec
cli
or
add
dec
add
mov
out
mov
jo
repz
inc
sub
out
idiv
jnp
add
or
cltd
dec
add
pop
das
mov
push
add
add
add
sub
cld
xor
sub
mov
leave
sbb
test
mov
arpl
cld
out
cs
xor
adc
in
movb
int
jns
inc
add
js
lahf
dec
add
adc
and
aas
pop
add
add
pusha
add
xchg
sbb
mov
add
jae
ret
or
sbb
xor
inc
xor
stos
cmp
mov
mov
add
bound
std
add
dec
fwait
stos
add
lahf
mov
mov
add
add
dec
into
enter
jmp
jb
xchg
add
subb
xor
pop
add
fwait
pop
add
mov
mov
pop
add
add
arpl
iret
adc
xor
imul
in
int
mov
aaa
mov
add
push
add
push
add
mov
inc
add
imul
js
addl
repnz
adc
test
add
testl
sub
loopne
fisttpl
or
jge
mov
add
pop
jns
ret
inc
add
cmp
mov
mov
loope
popa
mov
add
leave
loope
add
sbb
add
scas
and
frstor
add
xor
add
push
add
pop
test
mov
gs
add
outsl
ret
xor
xor
sub
inc
add
add
insb
add
add
xchg
mov
adc
cmp
and
fldenv
lahf
test
mov
sarl
mov
add
ret
jg
push
iret
sub
add
mov
add
out
sahf
bound
push
or
lcall
lods
lcall
add
xchg
jno
inc
add
mov
jmp
mov
xchg
mov
ficomps
ret
or
mov
push
pop
add
mov
add
add
add
add
aaa
push
add
xchg
xchg
inc
xor
and
lcall
xor
fnstcw
inc
inc
movl
jnp
add
fsin
xchg
sbb
inc
data16
cmp
faddl
add
stos
fsubs
add
adc
andl
xchg
mov
popa
scas
pop
cld
ret
cmc
mov
mov
add
call
pop
sbb
mov
add
sbb
clc
dec
add
pop
mov
add
adc
out
enter
nop
fwait
push
add
add
add
push
add
dec
jecxz
add
hlt
addb
jb
ret
add
inc
add
bound
xor
fdivrs
add
into
xchg
addb
ret
push
jmp
shll
gs
mov
add
dec
mov
xchg
jbe
mov
fisttps
leave
inc
add
gs
add
int3
xchg
mov
jle
int
iret
out
add
add
mov
add
cmp
les
add
pop
add
xchg
sbb
in
inc
and
je
int3
jmp
mov
in
jb
dec
add
add
add
add
daa
in
add
dec
pop
xlat
fsubr
iret
lock
aad
and
les
shr
cmpsl
add
add
lods
fisttps
add
lock
pop
add
test
add
pop
push
add
mov
xchg
pop
add
add
sbb
repnz
add
add
xor
add
int3
cmpsb
out
dec
add
gs
inc
add
cmp
jb
movsl
fwait
sub
mov
add
lods
jae
mov
inc
test
inc
add
scas
push
add
push
mov
sbb
push
add
jecxz
add
add
pop
add
cld
dec
cltd
and
push
mov
xchg
ret
add
pop
add
mov
dec
jle
fstp
std
fwait
mov
inc
add
add
movsb
xor
in
loop
cmc
cltd
popf
push
andl
adc
ret
dec
add
push
daa
dec
call
pop
popa
insb
add
xor
ret
mov
add
mov
punpcklbw
into
leave
and
insl
mulb
mov
repz
in
and
add
mov
mov
add
xor
pop
add
sbb
cmpsl
push
push
add
les
scas
dec
add
ret
lcall
loop
cmpsl
dec
add
test
out
rcl
inc
add
xor
sahf
arpl
add
add
add
add
jo
lds
add
push
jns
fisubrs
nop
aad
add
imul
pop
add
xor
sub
dec
add
inc
and
js
or
push
adc
add
push
add
data16
stc
fsubp
sahf
aad
inc
add
mov
add
ds
mov
outsl
bound
pop
sbbl
repnz
scas
jo
insl
mov
lret
jbe
jg
and
push
add
xchg
cmp
adc
fisttps
pop
add
add
ljmp
cmp
js
mov
into
mov
add
inc
add
xor
or
add
jp
cwtl
iret
mov
arpl
scas
ret
cmp
sbb
add
add
add
adc
aas
cmp
add
sbb
add
out
adc
sub
and
push
and
add
add
inc
add
mov
je
in
add
add
sarl
rcrl
add
loope
add
push
add
xor
mov
push
ret
in
push
add
movsl
popa
or
cltd
in
shrl
add
and
inc
pop
mov
test
mov
imul
add
jnp
add
or
cmp
int3
push
add
fwait
in
add
jp
fwait
popa
push
add
add
std
pusha
add
call
lea
pop
add
test
and
push
add
jg
insb
add
test
imul
add
add
rclb
add
add
add
add
cwtl
and
dec
add
add
jl
xchg
pop
add
dec
add
sahf
movsb
stos
ja
lahf
push
mov
nop
pop
inc
add
add
mov
mov
add
jp
insl
xchg
testb
add
and
or
add
add
outsb
add
mov
ret
ja
jg
cltd
jbe
aas
andl
add
fiaddl
add
bound
mov
or
incb
repnz
add
jnp
loopne
xchg
imul
adc
jp
call
js
push
add
dec
add
mov
jns
add
imul
cli
outsb
add
add
fwait
push
add
pushf
cltd
cmp
jo
sbb
mov
mov
inc
outsl
jne
pop
pushf
xchg
pop
add
nop
repnz
push
sbb
test
and
xchg
or
std
cmpl
pop
mov
add
pxor
test
pusha
add
arpl
xchg
adc
sub
add
add
xchg
test
add
outsl
fbld
lret
xchg
jo
mov
xchg
insb
add
jg
add
insl
mov
mov
mov
or
xor
and
pushf
pop
add
sbb
jle
pushf
int
lahf
mov
mov
jmp
inc
add
push
insl
xchg
lds
add
mov
add
add
add
mov
popf
mov
bound
pop
add
xor
stos
icebp
lret
bound
rclb
gs
jp
or
xor
mov
movq
jp
in
mov
repz
mov
popa
cli
xchg
fidivrs
aas
lods
inc
add
pop
sub
sbb
mov
mov
stc
cmp
jge
jns
fildl
sahf
lods
and
leave
rcll
add
lret
xor
add
pop
add
mov
adc
xchg
test
add
jbe
pusha
add
mov
cmp
add
pop
sub
sbb
mov
mov
add
pop
add
inc
aas
fiadds
dec
add
gs
xlat
dec
inc
add
add
ljmp
and
mov
mov
add
cltd
and
push
add
test
dec
inc
outsb
add
jo
or
xor
push
loope
sti
int3
dec
or
xor
adc
mov
ret
add
cltd
xchg
jae
fs
data16
jo
lahf
jp
xchg
bnd
push
add
nop
add
push
add
add
cmp
aad
popf
mov
lock
adc
push
inc
mov
sbb
adc
mov
ret
push
jo
pop
add
and
jmp
cld
addr16
dec
leave
push
aaa
adc
mov
pop
add
push
dec
add
lret
add
idiv
and
jecxz
aam
add
xor
loope
sbb
cmp
jg
inc
cwtl
pop
js
jmp
mov
mov
or
outsl
js
dec
dec
add
jmp
inc
add
push
add
out
nop
ffree
pop
push
add
mov
loop
lcall
pop
jae
mov
movsb
gs
add
add
add
mov
add
push
sub
push
push
sarb
data16
add
mov
xchg
lock
ljmp
movsb
test
add
cltd
mov
xlat
sub
cli
fs
push
std
clc
xor
mov
add
lock
pop
add
add
or
inc
pushf
stos
dec
add
push
add
stos
push
addb
mov
flds
inc
add
scas
jb
push
arpl
arpl
jb
enter
lret
in
jns
xchg
jge
rclb
add
aaa
dec
inc
cltd
jae
adc
pop
add
das
fnstcw
add
add
cli
pop
jb
cmp
jns
lds
gs
das
xor
xor
aam
cmp
call
in
sub
xor
pop
mov
inc
pusha
add
add
ja
das
xlat
sbb
mov
add
in
jno
inc
add
add
push
add
or
loop
xchg
pop
add
cmpsl
adcl
cld
pop
popf
mov
inc
movsl
sbb
orl
xchg
test
add
push
add
mov
in
xchg
bound
pop
sbb
mov
pop
cmp
jo
xchg
inc
add
dec
add
adc
lods
scas
clc
in
add
jae
add
lods
xor
fstpl
fimuls
clc
xchg
mov
movsl
into
ja
or
dec
add
loopne
inc
add
or
cmpsb
data16
gs
add
out
dec
scas
mov
neg
adc
add
movsl
push
add
dec
add
repnz
test
sbb
add
push
add
add
add
and
loop
push
add
lock
pop
add
dec
add
inc
add
sub
dec
test
push
add
jns
rorl
sbb
div
cmpl
insl
push
repz
or
je
test
test
gs
or
test
lret
mov
add
add
mov
mov
inc
and
push
int3
jle
pop
jns
jg
shl
cmp
inc
add
ficomps
mov
cwtl
scas
flds
int
mov
add
addr16
add
cmp
add
mov
jl
mov
mov
inc
or
jbe
and
test
mov
inc
add
add
pop
pushf
fwait
xchg
call
lods
repz
sbb
cmp
iret
hlt
xchg
fdivs
adc
in
jae
add
aas
adc
test
mov
add
add
xchg
lock
lcall
add
cmp
dec
add
add
lcall
jle
mov
add
add
sahf
ret
add
mov
sub
sbb
jb
sub
aas
push
test
fidivs
push
add
dec
add
jnp
loopne
adc
lret
bound
or
enter
add
ret
add
popa
cmp
subl
jge
lods
fsubrs
shrb
jae
insb
add
add
js
mov
lcall
dec
enter
add
jmp
cmpsl
adcb
loopne
adc
add
inc
jbe
cmp
jle
dec
add
push
add
fcmovb
xchg
xchg
xlat
pop
or
ljmp
add
pop
data16
fwait
push
push
add
add
ljmp
lahf
xor
decb
sbb
inc
add
popa
mov
jo
leave
jno
data16
mov
cmc
cmp
imul
add
add
add
jle
into
jno
inc
xor
add
add
jno
loope
ret
cmp
testl
add
dec
pop
add
or
jmp
mov
jae
or
out
add
add
add
add
inc
push
stc
or
lods
or
addr16
pop
or
and
cmp
stc
mov
add
stos
sbb
xchg
add
push
add
add
repz
add
stos
scas
movsb
gs
popa
jecxz
adcl
mov
push
add
add
stos
icebp
xor
int
pop
add
stos
mov
add
cmp
mov
add
mov
add
pusha
add
jge
std
nop
mov
or
and
lds
inc
add
jo
or
and
sbb
orps
jl
sbb
jnp
scas
xor
adc
mov
add
addl
add
popf
sbb
jp
jbe
add
insb
add
add
xchg
popl
mov
lea
push
jle
cmp
fwait
stos
jno
add
add
add
inc
je
stos
sahf
xor
aam
lea
into
mov
push
movsl
aas
mov
insb
add
mov
mov
add
dec
nop
andl
add
testb
movsl
xchg
dec
and
fldt
adc
insb
add
push
mov
aas
loopne
xor
and
jnp
add
repnz
mov
sbb
cmpsl
inc
sub
mov
add
mov
inc
add
in
jl
adcl
cmpsl
sbb
xor
add
sbb
push
fdivr
rorl
mov
ficompl
mov
add
add
pushf
and
mov
mov
push
sbb
hlt
ja
or
mov
fsubl
ret
cmc
test
add
add
in
pop
and
pop
add
and
stos
push
jge
adc
jl
cmp
add
add
fsubrl
dec
add
pop
push
add
or
popf
ljmp
mov
dec
stc
pusha
add
pop
insl
lds
or
add
pop
add
dec
ljmp
add
add
adc
shl
aad
add
sahf
mov
add
in
add
test
add
out
call
or
in
jbe
pop
sbb
in
lret
js
inc
mov
add
adc
fcmovne
mov
ja
jno
data16
add
mov
push
add
or
loop
mov
movsb
xor
rolb
aaa
rorl
fstpl
jbe
repnz
push
add
jbe
cmpeqps
mov
ficoml
add
add
and
push
add
or
add
add
out
jbe
cmp
jo
imul
add
cmpsl
aaa
xor
adc
adcb
xchg
push
add
dec
sbb
sub
dec
add
cli
subl
adc
fadds
aam
in
shl
cld
std
jmp
dec
add
dec
jnp
frstpm(287
rol
aam
xchg
fwait
mov
and
icebp
nop
cmc
call
icebp
add
mov
movsb
mov
cli
cmp
cmpsl
sub
mov
in
push
add
jg
lret
add
sbb
outsl
cmpl
or
add
add
dec
add
jmp
add
lahf
sub
aaa
ljmp
jne
outsl
enter
add
add
out
scas
inc
add
add
mov
or
jp
jg
out
add
dec
shll
add
add
and
mov
out
add
loopne
xlat
xor
dec
add
add
add
and
or
jb
and
sub
jb
dec
xchg
or
inc
shr
lahf
scas
pop
sysenter
add
fcom
cltd
arpl
dec
mov
xor
clc
or
ja
stos
test
ljmp
mov
add
add
add
xor
icebp
or
aas
xorl
add
sub
sbb
sub
fsts
stc
jmp
add
add
push
add
cmp
out
loope
add
add
mov
adc
push
add
aad
add
fisubrs
add
and
dec
add
pop
add
inc
pop
add
int3
int3
add
pop
pop
add
jns
add
dec
add
mov
xor
lds
xchg
sbb
inc
add
jmp
xor
mov
in
lods
lock
adcl
addr16
xor
add
stos
pushf
das
mov
jg
add
stos
inc
jns
add
orb
mov
jl
xor
dec
add
cltd
cltd
daa
scas
data16
xor
or
pop
add
push
js
pop
bound
in
pusha
add
pop
add
add
mov
leave
insl
aas
dec
enter
stos
mov
cmpsb
mov
push
add
add
rorl
add
mov
lret
inc
add
mov
add
lret
add
add
add
add
lret
jb
lock
jns
int3
cli
xchg
cld
adc
dec
mov
and
bound
mov
sbb
push
add
and
sbb
jbe
add
ficomps
inc
sub
push
add
cwtl
inc
add
adc
lcall
sbb
push
add
add
mov
cs
push
add
stc
xchg
add
les
add
and
jecxz
add
add
mov
mov
add
add
incl
add
add
leave
enter
add
sbb
mov
and
fbstp
inc
add
fisubrl
pop
sub
gs
scas
jecxz
in
rcl
data16
add
jg
adc
jle
pop
add
bndldx
imul
jae
add
fcoml
mov
add
add
jae
pop
add
rcll
add
mov
and
sub
aad
push
add
add
cmp
in
jmp
push
add
jmp
sub
sbb
movsb
sbb
aaa
and
pop
add
xor
cli
mov
stos
pop
push
dec
add
add
pop
aad
add
jno
mov
add
ja
or
cmc
mov
jmp
pop
add
test
ret
cltd
sbb
add
add
mov
in
xchg
add
add
imul
add
repz
shlb
cmp
pop
sbb
xchg
and
cmp
in
ds
notb
in
mov
mov
mov
daa
add
addl
add
aas
mov
ret
sahf
js
stos
cmpsl
loope
clc
pop
add
rcl
or
lea
push
mov
test
add
jmp
add
out
add
hlt
pop
mov
add
add
mov
mov
mov
xchg
enter
add
xor
cmp
and
aad
add
add
call
adc
cmp
inc
pop
push
add
add
add
sbb
jmp
add
mov
dec
and
clc
addr16
fistpll
stos
shl
jecxz
sub
int3
sub
into
cmp
push
add
pop
cmp
out
test
add
mov
in
cli
sub
out
repnz
movsb
ja
inc
add
or
lds
add
in
mov
hlt
ret
add
adc
xchg
aad
mov
mov
dec
add
dec
insl
pushf
or
add
sub
cmp
imul
or
inc
repz
pop
add
out
stos
mov
add
jns
add
add
add
mov
clc
sbb
xchg
sbb
punpckldq
mov
push
lret
pop
dec
add
enter
or
enter
jg
push
add
rcrb
aad
testl
add
mov
sar
adc
aaa
add
lods
bound
rorl
add
imul
mov
loopne
ret
sub
je
dec
add
jl
repnz
adc
and
cmp
les
mov
pop
scas
dec
add
add
push
sub
cld
mov
push
add
movsl
aad
add
adc
aad
adc
movsb
xchg
mov
cmp
pop
lret
mov
sbb
xchg
jge
jb
push
mov
adc
add
add
pop
jns
sahf
sub
and
mov
push
jb
sbb
les
add
pop
add
aam
out
popf
loope
pushf
jmp
jne
sbb
dec
add
pop
pushf
push
add
add
mov
add
mov
mov
pop
add
xorl
cmpsl
lret
add
add
add
inc
add
push
scas
cmpsb
add
add
sbb
popl
jecxz
sbb
mov
icebp
stos
add
jo
mov
xchg
push
add
pop
add
cli
imul
ret
cld
stc
stc
mov
jle
add
daa
dec
add
add
aam
shl
cmp
lds
insl
jp
or
add
push
add
out
rorl
mov
mov
mov
add
add
shrl
andl
pusha
add
pushf
out
lret
aaa
xchg
adc
add
mov
xor
add
and
pop
frstor
dec
add
fildll
hlt
xlat
loopne
add
jb
sub
cmp
dec
icebp
in
lret
loop
mov
lods
and
xchg
loope
pop
add
cltd
pop
add
add
add
add
in
xor
mov
leave
test
lcall
add
xchg
sbb
add
add
pushf
subl
inc
add
add
enter
add
mov
mov
hlt
push
add
or
jae
mov
xor
pop
add
or
or
mov
jo
stc
sbb
push
push
add
std
sub
push
add
mov
jge
adc
lret
add
add
add
add
fcomps
scas
mov
mov
add
pusha
add
repnz
into
insl
into
adc
push
ss
add
mov
push
add
add
pop
add
call
cmp
repnz
sbb
negb
add
jecxz
gs
add
addb
test
stc
int
mov
pop
add
add
lret
add
add
iret
inc
repz
add
repnz
sbb
aam
and
stc
add
daa
push
add
and
add
scas
aam
mov
fldcw
mov
add
cmp
mov
fisubrl
jge
push
add
sarl
int
call
int
pop
mov
fiaddl
inc
add
mov
sub
cld
adc
add
cmpsb
lea
dec
leave
adcl
stc
sbb
ret
inc
xchg
addr16
aas
or
xchg
stc
fstl
xchg
fisubrl
fs
mov
add
add
jmp
jo
movsl
sub
add
push
test
add
xor
mov
test
add
lahf
mov
cmp
loop
xchg
loopne
add
outsl
stc
push
fldl
jb
mov
jo
inc
out
add
add
and
rclb
jmp
or
sub
add
lods
xchg
sub
sub
add
dec
add
icebp
sub
mov
popa
out
cmp
ret
push
add
fnsave
and
xchg
cld
outsl
addr16
in
or
adc
sub
pop
add
ljmp
cwtl
xor
aaa
mov
pop
add
add
int3
fwait
ja
or
mov
pop
add
add
add
sar
mov
cmp
add
cld
mov
add
add
mov
lret
out
add
add
push
jecxz
add
add
inc
add
add
add
jecxz
cmp
test
aam
mov
decb
add
add
mov
inc
and
nop
jl
lahf
out
add
add
flds
icebp
lods
pushf
pusha
add
or
mov
mov
sbb
add
add
ja
mov
push
pop
add
out
pop
add
add
or
mov
xchg
pop
inc
pusha
add
add
jge
fwait
dec
sub
repz
pop
cld
or
cld
add
or
lret
pop
sahf
test
add
inc
test
inc
mov
add
add
dec
adc
cmp
loop
stc
cmp
pop
mov
shlb
add
add
sahf
lahf
rcl
test
inc
add
cmovns
xchg
data16
xor
xchg
hlt
sbb
push
add
cmpsb
rorl
decb
nop
cmp
leave
js
inc
icebp
das
enter
sub
pop
nop
push
add
mov
add
lods
xchg
xchg
out
pop
stos
cmpsl
idivl
subb
mov
sbb
add
add
mov
add
outsl
sub
mov
xlat
cmpb
outsb
add
xchg
rcrb
add
add
jne
gs
cmp
neg
sbb
movsl
outsb
add
inc
add
pop
add
jo
popf
out
mov
pop
add
scas
mov
cltd
jmp
add
or
rcll
add
add
mov
lret
pop
add
inc
add
add
and
inc
push
add
rcrl
or
pop
add
push
pop
adc
xor
hlt
andl
add
and
bound
pop
add
add
inc
lahf
in
and
cmp
enter
mov
mov
pop
lcall
mov
cmp
cmp
pop
fwait
xchg
imul
out
divb
fsubrs
fistpll
ljmp
pushf
sti
pushf
lds
jecxz
cli
and
and
rol
add
jns
call
stos
pushf
sub
mov
dec
add
and
push
add
add
repnz
test
shrl
in
popa
mov
test
imul
push
sbb
pop
add
or
scas
repnz
jo
sbb
hlt
mov
wbinvd
and
inc
add
add
pop
push
sbbb
sub
and
add
data16
or
sbb
call
sbb
mov
das
xchg
sahf
push
pop
pushf
push
add
repz
popf
shlb
sbb
lret
imul
add
into
mov
cld
jb
int
mov
mov
in
scas
loope
movsl
jb
xchg
call
mov
inc
add
icebp
mov
add
scas
mov
add
add
fwait
mov
add
add
or
push
add
sub
jb
bound
test
shll
inc
add
fcmovnu
and
add
pushf
jp
shr
and
dec
mov
add
add
shlb
add
ret
rcll
jecxz
adc
fwait
mov
jns
add
or
int3
xchg
int3
sti
fiadds
js
mov
pop
int
out
push
repnz
pop
pop
push
add
sbb
add
rcl
out
pop
adc
add
sbbl
xor
and
add
insl
iret
repnz
pop
loop
pop
add
jbe
dec
add
push
add
push
add
arpl
mov
insl
orl
mov
add
and
dec
add
iret
rcr
push
add
add
int
xor
js
jno
jb
adc
sub
imull
xor
add
data16
mov
out
and
lock
sub
add
pop
sbb
mov
pop
add
aad
rorl
add
lock
gs
mov
nop
adc
add
jge
add
add
jp
push
add
popf
add
or
mov
sub
rorb
jl
sbb
sub
push
lret
add
sub
add
add
fsubrs
subl
mov
dec
fdivs
and
xchg
xchg
bound
outsb
add
mov
sti
sub
add
pop
add
add
add
add
ret
sbb
sub
push
add
add
add
pop
outsb
add
test
xorl
add
sub
add
loope
cmp
or
mov
or
and
push
add
andl
movsl
popf
adc
push
test
add
add
add
stos
xlat
shl
mov
js
cli
data16
dec
add
je
lock
mov
push
add
daa
aad
ss
xor
divb
mov
xor
lahf
mov
mov
add
lods
push
add
out
int3
test
add
outsl
xchg
frstor
xlat
pusha
add
pushf
or
dec
add
add
add
out
add
jmp
pop
sbb
pop
add
or
sub
sbb
pop
mov
or
sbb
inc
add
cltd
add
inc
dec
mov
fcomi
sub
add
add
pop
add
add
add
add
add
lock
nop
add
xor
add
in
push
add
pop
adcb
test
in
rolb
xchg
push
add
adc
imul
jo
roll
iret
pop
push
add
add
iret
clc
mov
sti
in
mov
xor
pop
add
insl
das
jns
add
dec
pop
add
add
xchg
adcl
add
add
add
aaa
xchg
push
add
js
outsb
add
sbb
cmc
xchg
dec
add
sbbl
or
insl
data16
mov
test
pcmpgtw
jp
add
add
add
adc
add
push
cmpsb
roll
sub
cmp
mov
jge
pop
mov
jae
or
stos
data16
jno
out
add
add
dec
add
push
add
add
ja
out
adc
xchg
iret
out
or
xlat
int
loopne
push
add
jl
dec
sarl
mov
out
or
nop
xchg
xchg
push
add
xchg
add
adc
inc
add
add
add
repnz
add
lahf
add
add
mov
add
add
or
dec
add
in
cli
lds
mov
add
add
mov
add
mov
stos
adc
xchg
mov
xchg
mov
movsl
xchg
cwtl
mov
pop
add
add
xchg
mov
outsb
add
mov
pop
add
add
rcrl
xor
xchg
add
add
xchg
in
cltd
clc
adcb
cli
push
or
mov
add
mov
lea
pop
push
add
je
inc
add
repz
push
add
jb
repnz
add
add
frstor
xlat
insl
in
addr16
fcmovu
mov
jmp
mov
mov
jge
add
xchg
jns
add
xor
div
sub
int3
mov
pop
ret
cld
and
pop
add
int
add
xchg
gs
mov
dec
add
sbb
add
add
add
cmp
mov
add
add
mov
add
outsl
pcmpgtb
inc
add
fcom
jno
stos
sub
cld
adc
mov
outsb
add
clc
add
popf
jno
jmp
jns
jge
add
add
lock
scas
sbb
sub
movl
in
mov
popf
cld
call
ja
pop
push
add
out
mov
xor
mov
imul
add
add
es
vphadduwd
inc
mov
ret
addl
pop
sar
cmpsb
lock
out
inc
mov
cmp
insl
add
add
jmp
mov
orl
mov
inc
add
aad
das
adc
sbb
add
aad
stos
and
add
xor
sub
mov
add
pop
unpcklps
push
add
mov
andl
or
cs
cmp
xor
mov
sub
dec
add
aad
pcmpgtb
dec
rorl
add
das
dec
add
add
movsb
lcall
add
xchg
insb
add
add
mov
movsl
xchg
insb
add
jae
add
jmp
out
cltd
cld
cld
or
xor
jmp
dec
add
add
add
inc
add
add
sti
je
xor
scas
lcall
and
add
add
stos
shlb
lock
adc
dec
lea
mov
xlat
jno
addr16
adc
rcl
cwtl
sbb
xchg
add
clc
imul
add
out
xchg
mov
mov
jo
mov
in
rcrl
sbb
add
inc
data16
flds
mov
pop
add
jbe
adc
inc
add
arpl
mov
add
pop
add
shrl
or
jb
fidivrs
mov
and
xchg
pop
add
arpl
hlt
pop
add
push
add
sub
mov
test
add
or
loop
mov
pop
cmp
xor
push
sub
pop
add
add
add
and
push
add
in
push
add
add
das
filds
movsb
mov
add
push
add
mov
pop
pop
add
jl
jle
pop
add
test
cltd
cmc
testb
icebp
adc
fimull
add
push
add
push
aas
sbb
roll
add
xchg
das
push
pop
mov
add
add
inc
arpl
add
mov
add
xor
add
ja
mov
test
xchg
nop
fsubrs
push
add
cmp
dec
jno
movl
bound
dec
add
pop
loop
mov
jl
stos
and
pop
xor
adc
cmpsb
or
xlat
lea
mov
add
add
mov
insl
jnp
lret
or
add
cld
std
push
add
sub
jno
sahf
pop
imul
add
pop
xlat
or
nop
lret
add
sub
sbb
in
scas
cs
int
sub
call
add
mov
add
add
add
add
add
loopne
out
add
add
push
xchg
ret
jo
xor
stos
insb
add
add
jns
add
aas
sbb
sub
inc
or
repz
pop
add
fldcw
out
data16
dec
add
add
dec
push
add
jb
add
mov
lcall
jmp
inc
add
xlat
jb
outsl
sbb
xchg
bound
xchg
lods
sbb
or
inc
add
sub
or
repnz
jb
xor
and
sbb
pushf
filds
add
mov
cmp
xorl
cli
mov
ror
adc
sbbb
arpl
fwait
test
add
push
add
out
pop
add
add
add
or
xchg
enter
push
push
inc
dec
cltd
dec
push
subb
ja
mov
add
add
mov
gs
lods
add
repz
sbb
xchg
out
mov
and
outsl
add
pop
add
inc
add
bound
mov
hlt
mov
aas
jo
loopne
push
add
add
add
pop
add
stos
pop
add
ret
push
add
adc
add
add
add
add
mov
add
xchg
add
and
aas
or
push
add
mov
movsb
mov
xchg
lahf
push
xchg
fldl
add
mov
mov
add
jmp
leave
stos
jns
add
add
push
movsb
mov
jo
xchg
add
je
add
push
add
adc
int3
loopne
test
mov
dec
cmp
cmpsl
cli
dec
push
add
add
dec
push
add
mov
cmp
pop
sbb
lahf
adc
add
add
call
cmpsb
test
dec
add
sub
add
and
fidivl
cltd
loopne
add
inc
add
add
test
add
outsl
test
inc
xchg
out
mov
add
enter
dec
add
push
sub
sti
mov
xchg
data16
push
cld
popl
mov
jno
sub
daa
sub
and
lds
addr16
fdivrp
cmp
sub
mov
jle
xchg
lahf
xchg
cmpsl
jle
xor
add
or
lcall
push
adc
add
add
add
loope
lret
xchg
dec
add
dec
push
shlb
sbb
std
arpl
repz
jb
pop
sbb
jne
pop
ret
or
stos
sbb
adc
mov
int
push
jp
and
cmp
inc
add
add
decb
mov
xchg
jp
push
add
out
jne
pop
aas
testl
mov
imul
xor
pop
shrb
inc
test
add
repz
add
pop
add
out
jp
or
sbb
push
add
ret
inc
outsb
add
add
dec
cmp
jnp
jae
add
inc
add
add
in
std
add
add
xchg
das
jmp
or
stos
in
sub
outsb
add
das
xchg
jb
dec
add
add
add
jne
add
sub
add
fs
dec
add
sub
or
fistl
push
add
xchg
xchg
xlat
mov
mov
add
add
pop
push
add
add
sub
cmp
add
dec
mov
push
add
lcall
ljmp
add
in
addr16
xor
mov
xor
call
dec
xor
dec
add
clc
rolb
mov
and
lahf
xor
mov
dec
mov
jns
add
popa
sub
jl
std
adc
mov
stos
stc
orl
nop
das
gs
xchg
push
mov
add
outsl
mov
out
jg
add
imul
add
cmp
sbb
sub
jecxz
mov
adc
add
add
add
add
sbbl
and
push
mov
sahf
mov
xchg
mov
in
xor
dec
cmpsl
and
add
inc
mov
add
add
xor
pop
add
test
pop
inc
add
pop
add
cltd
stos
loopne
pop
xchg
mov
sti
push
add
adc
xchg
and
bound
mov
add
add
mov
add
sbb
mov
xor
pusha
add
popf
add
loopne
fdivl
rol
mov
in
jns
add
rcrl
push
add
xorb
jb
enter
add
sbb
fwait
add
hlt
mov
add
sbb
sbb
add
icebp
gs
shr
adc
add
jns
cmp
shll
add
mov
imul
jne
lea
mov
sbb
or
push
add
add
jb
mov
iret
push
add
hlt
daa
mov
xchg
pop
inc
sub
sub
sbb
shrb
fwait
movsb
aad
pop
pop
outsl
aad
ja
subb
ret
xchg
jl
jns
mov
sub
insb
add
aas
sub
aad
movsb
mov
cmpsl
xor
lods
add
add
add
dec
xor
inc
add
xchg
inc
dec
pusha
add
iret
lcall
dec
add
add
adc
cmp
jmp
mov
add
xchg
push
add
add
add
or
mov
sbb
mov
add
inc
add
cli
mov
push
mov
dec
add
loop
fildl
daa
or
mov
lret
add
or
in
daa
xor
xor
aam
aas
and
xor
lds
add
cmp
mov
lods
les
out
sbb
pop
add
cmpsb
pusha
add
add
fsubl
mov
add
add
mov
icebp
pop
add
mov
in
pop
add
adc
push
push
add
stos
mov
adc
fnstsw
imul
push
movsl
add
add
jbe
and
aam
xchg
cmpsb
hlt
push
adc
add
lods
sub
rcrl
add
gs
int
add
pusha
add
add
clc
jmp
jg
fwait
das
lods
pop
add
add
push
roll
add
push
ret
push
pop
lret
mov
add
xchg
jmp
fisttpl
mov
add
into
and
xchg
popa
add
out
bound
pop
insl
decl
add
pop
add
imul
add
mov
pop
pop
add
sbb
push
add
inc
sahf
cld
or
jo
lcall
add
in
pushf
and
add
add
add
outsb
add
xlat
sub
add
add
shrb
xor
js
aaa
mov
add
in
mov
cwtl
mov
add
lock
lods
push
sub
xor
cmp
and
fdiv
pcmpgtb
repz
data16
jnp
popf
or
leave
fsubrs
adc
imul
std
lods
pxor
ficoms
jbe
imul
dec
add
add
sbb
and
xchg
add
or
jae
xchg
test
add
push
add
icebp
push
pop
pop
fwait
push
sbb
add
pop
pop
add
add
xor
cmp
cld
gs
and
jbe
cltd
hlt
cmpsl
jmp
jno
pop
movsb
enter
inc
add
dec
add
add
fwait
cmpsb
adcb
mov
dec
add
out
scas
or
add
add
mov
in
cmp
push
fsubrs
cmp
add
add
or
adc
inc
lods
ret
inc
mov
cmpsl
jno
add
lret
and
in
outsl
mov
add
mov
add
xlat
not
jbe
enter
add
lea
add
jae
add
test
clc
sub
pop
inc
testl
mov
scas
sub
adcb
stc
mov
or
xchg
jne
add
aaa
lret
test
pop
gs
fstpt
and
fadd
shll
adc
add
out
cmp
fiadds
fwait
aam
dec
add
xor
jl
push
or
or
cmp
addl
loopne
pop
add
and
scas
aaa
mov
xor
fcompl
add
sti
pop
add
add
jae
mov
add
sbb
mov
call
add
add
sahf
mov
add
fldt
ret
jb
xchg
pushf
cmp
cmpsb
jmp
add
xor
rolb
sub
mov
add
cmp
cmc
or
cmp
jecxz
mov
ret
xlat
mov
add
and
dec
mov
iret
add
jmp
jge
pop
add
add
and
std
jnp
add
es
cmp
xchg
xchg
in
mov
push
add
and
jbe
ret
js
mov
mov
lock
add
ret
mov
loop
jecxz
add
sti
rcll
sti
mov
add
adc
add
leave
rcr
mov
pop
push
add
ds
sbb
push
add
sti
sub
xchg
mov
xchg
sub
fwait
std
ficompl
add
mov
add
or
jl
xchg
lods
and
loopne
mov
int3
jge
mov
test
mov
lds
mov
clc
jnp
push
add
inc
in
stos
push
add
add
or
data16
sbb
adc
add
adc
mov
dec
add
add
mov
add
add
roll
dec
push
pusha
add
sbb
out
jp
add
inc
add
inc
add
add
mov
sub
xor
push
add
pop
add
in
pop
lea
add
jg
add
movsb
adc
pop
add
ret
daa
notb
add
mov
add
inc
fwait
inc
add
xorl
ret
mov
add
in
and
add
sti
shlb
stos
push
add
sbb
dec
mov
cli
add
add
nop
aaa
aaa
out
out
leave
addb
adc
and
mov
add
push
leave
daa
data16
add
and
fisubs
daa
inc
add
add
clc
data16
xchg
sbb
fwait
add
mov
jle
out
pop
add
jo
inc
add
xchg
loope
test
cltd
cwtl
xchg
cmpsl
hlt
add
and
pushl
cld
xchg
adc
out
add
mov
add
cmpsl
lea
pop
addr16
in
frstor
mov
popa
jp
mov
inc
add
adcl
inc
add
xchg
gs
fildl
jge
hlt
loopne
loopne
add
xchg
std
roll
add
pop
mov
add
xchg
add
das
mov
std
mov
cli
fcompl
jae
add
add
add
test
arpl
data16
cmpsl
sub
dec
add
arpl
stos
cmp
sbb
xchg
mov
add
arpl
cmp
ja
cli
psubw
popa
dec
add
add
adc
inc
add
pop
inc
pop
add
add
adc
add
add
mov
pop
xchg
inc
je
add
mov
add
jo
in
shrl
inc
sub
jb
dec
lock
push
add
mov
add
sahf
add
mov
pushf
dec
pop
add
shll
add
add
rcrb
add
cmp
jne
add
adc
sub
inc
sbb
inc
lods
mov
dec
aas
and
fsubs
add
test
lods
sub
sbb
xchg
adc
add
xchg
cmc
mov
add
add
in
sbb
or
xchg
test
lods
add
scas
add
pop
into
adc
cmp
add
fbstp
insl
add
lods
test
mov
imul
ljmp
test
fiaddl
mov
mov
add
dec
repz
cmpsb
mov
mov
loope
cmp
popf
bound
adc
data16
jmp
cmpb
add
pop
add
fdiv
lea
mov
xchg
pop
add
dec
add
jno
add
call
das
push
add
addr16
add
inc
add
imul
sub
adc
sub
mov
aaa
icebp
lea
mov
lret
or
inc
add
dec
and
cmp
sub
add
adc
xchg
or
xor
add
xor
add
cmpsl
cli
or
inc
add
add
test
negb
add
add
aaa
outsl
push
lock
gs
adc
jp
pop
add
add
inc
add
int3
lahf
or
and
cmp
testb
add
or
add
cmc
in
adc
sub
rol
ret
fisubs
add
jp
fisubs
xchg
sub
mov
mov
int3
cli
lea
std
cmp
jo
mov
add
dec
add
popa
or
or
pop
sub
push
dec
add
fists
or
rcrl
ljmp
scas
sbb
fldenv
adc
jmp
popf
cmp
mov
xchg
subl
mov
xor
add
std
sbb
push
add
add
add
fmull
adc
dec
jge
add
mov
add
add
add
xchg
fmul
scas
mov
leave
add
out
mov
mov
add
pop
xor
cwtl
int3
add
cltd
clc
pop
add
add
add
hlt
bound
daa
int3
cltd
in
inc
add
faddl
mov
xlat
mov
xor
add
fistl
add
sub
push
add
adc
jmp
ljmp
add
add
cmp
inc
add
jle
mov
js
movsb
inc
and
data16
adc
jg
mov
add
insb
add
add
add
add
lock
mov
loopne
je
js
sbb
jae
add
sbb
mov
sahf
adc
and
or
sub
les
aaa
cld
dec
sahf
cmp
out
lret
les
add
test
fidivrs
mov
add
add
mov
add
mov
add
jnp
scas
add
sti
lods
mov
push
movsb
jle
cmc
sub
add
bound
and
add
enter
lock
add
jmp
pop
add
add
adc
les
fmulp
or
aas
add
out
push
add
add
mov
jge
xchg
subl
dec
dec
add
add
or
popl
sbb
js
fisttpl
adc
cltd
dec
add
movsl
lods
je
push
add
add
mov
cltd
hlt
cwtl
mov
fimull
movsl
mov
or
sahf
ret
or
sbb
in
add
mov
ja
add
int3
sub
bound
jmp
js
scas
or
fdivp
push
add
lea
add
jae
aaa
int
bound
jge
out
mov
test
in
mov
sub
add
test
add
cmpl
lcall
xchg
movsl
xchg
sub
jecxz
bound
dec
add
imul
pop
add
sub
aaa
mov
aad
das
xchg
insl
js
fwait
push
add
add
jnp
sub
fidivrs
mov
insb
add
jg
sub
xor
pop
in
add
xchg
inc
add
push
adc
xor
add
xor
leave
inc
add
jae
int
lcall
dec
add
add
hlt
sub
jp
stos
sub
daa
pusha
add
orl
pop
stc
aaa
inc
cmp
push
add
sbb
pushf
mov
xchg
mov
xchg
adc
lds
scas
push
mov
in
mov
fwait
xlat
pop
dec
add
ja
aaa
clc
imul
je
aas
dec
hlt
popa
call
add
push
add
add
fsubrl
das
daa
dec
add
loope
movsb
add
popf
outsb
add
sbb
insl
in
mov
je
insl
mov
mov
add
iret
scas
sub
lds
ret
stc
outsl
xchg
push
push
adc
mov
add
mov
add
addl
das
rclb
add
insl
dec
add
add
out
mov
sub
ficomps
repz
cmpsb
jg
add
testl
dec
add
add
push
add
out
fidivrs
and
inc
and
js
dec
add
add
add
mov
mov
adc
aad
mov
add
add
jnp
out
mov
add
add
add
test
and
lret
mov
cmpsb
leave
rol
aas
jl
xchg
ficoms
add
out
add
push
add
sbb
cmp
and
add
add
repz
add
mov
das
loope
mov
jp
lds
fsub
lea
add
in
push
add
xor
rorl
mov
add
push
mov
mov
inc
jns
add
add
out
pop
pushf
lods
mov
xchg
push
out
out
mov
xor
add
add
add
outsb
add
imul
shlb
pop
add
push
add
and
insb
add
stos
pop
sbb
push
add
dec
jge
add
mov
xor
arpl
inc
loopne
loop
daa
test
lcall
add
cmp
test
xor
aaa
addr16
adc
rcrl
out
cmc
test
daa
fisubl
iret
repz
fucomi
fistpll
add
cmp
std
sbb
xchg
cmpsl
imul
add
mov
add
sub
jae
push
popf
repnz
add
sarl
imul
add
sub
ja
cmp
add
mov
faddp
sub
add
dec
add
lds
out
jnp
mov
stos
data16
add
pushf
dec
add
dec
add
or
int
add
lods
andb
into
movsl
add
add
fisttpl
add
add
shrb
repnz
ret
scas
push
add
cld
cmpsl
popf
stos
sbb
addr16
mulb
outsl
mov
or
movsb
xor
or
add
sbb
int3
mov
jmp
scas
insb
add
jmp
add
test
xchg
das
insl
and
inc
add
add
add
cmp
cmp
add
inc
and
sub
mov
mov
lahf
adc
adc
add
pop
inc
xor
sahf
bswap
adc
sub
pop
lds
add
ret
cmp
add
mov
and
lret
add
addr16
aam
sbb
mov
pop
xchg
mov
aam
lret
popa
hlt
xchg
push
add
or
push
jge
mov
add
out
fcomp
cmp
and
je
cltd
bound
arpl
add
push
add
fldt
and
add
push
add
add
add
ficomps
add
add
jp
inc
and
jp
add
fmull
sbb
add
push
add
add
add
stc
add
add
or
inc
add
add
add
add
cmp
dec
jno
add
clc
adc
jge
aaa
pushf
push
pop
sti
gs
sub
mov
or
adc
xchg
ljmp
stos
stc
or
mov
add
or
add
stos
in
mov
call
rorl
stc
fisubs
pop
jnp
xchg
dec
add
jbe
or
inc
add
jmp
add
sub
sub
jb
cmp
cmpl
or
sbb
adc
stos
test
jae
jmp
push
add
pop
add
mov
lock
xchg
or
popf
mov
les
push
shlb
add
add
add
fnstenv
add
push
add
xor
data16
xchg
pop
jbe
lahf
lock
je
fiadds
add
add
pop
xorb
add
adc
add
rep
xchg
sbb
dec
add
dec
add
add
add
fiaddl
ret
mov
insb
add
push
add
iret
jg
scas
jnp
out
push
add
cwtl
shl
pop
shlb
add
add
shll
movsb
dec
repz
jmp
jo
out
in
in
add
cmp
inc
add
xchg
xor
push
add
sti
rorl
stc
push
add
jne
pop
les
push
add
or
ficoms
xor
ljmp
pusha
add
icebp
xchg
lds
jle
movsl
xchg
adc
xchg
out
scas
pushf
cld
push
add
add
fwait
imul
jecxz
mov
clc
fsubl
mov
cmp
jge
xor
adc
sub
loop
xchg
cwtl
xchg
add
mov
dec
add
push
add
xchg
mov
xor
movsl
mov
inc
add
mov
add
popa
and
test
add
add
cmpsb
scas
jbe
or
xchg
add
mov
mov
add
adc
test
jecxz
add
into
loopne
fisttpl
insl
inc
push
mov
mov
mov
movsb
call
add
int3
or
push
jne
xor
cmc
jg
add
data16
mov
mov
mov
pop
add
push
inc
popa
in
scas
xchg
adc
xor
push
add
xchg
ret
jno
aaa
dec
dec
and
add
add
add
push
add
or
cmp
stos
mov
lret
and
push
inc
add
and
data16
xchg
repz
jmp
sub
mov
mov
fisubs
or
test
add
add
add
ftst
jns
sub
push
add
or
icebp
or
add
add
adc
xchg
stos
outsb
add
jg
test
xchg
in
push
add
add
in
and
cld
jae
push
dec
push
push
add
iret
fwait
pop
sub
jl
and
cwtl
out
mov
fisttps
add
push
mov
xchg
xor
cwtl
ljmp
movsl
jo
jg
fisubrl
sbb
sarl
cmp
icebp
popf
les
cmpsl
aad
add
add
aaa
sub
mov
js
mov
add
push
imul
add
lods
and
add
xchg
les
add
lods
and
xchg
push
add
adc
pop
add
add
add
or
add
push
add
pop
add
mov
xchg
mov
pop
jmp
or
add
arpl
add
xchg
addl
push
add
dec
add
mull
add
push
je
adc
push
push
add
dec
or
out
and
inc
add
inc
add
cli
cltd
add
add
sti
cwtl
push
cltd
bound
or
sub
add
xchg
loope
add
xchg
and
add
sub
lock
add
enter
mov
je
xchg
arpl
and
add
dec
add
cmp
push
add
fldl
mov
xorb
cli
or
xchg
repnz
jae
xor
add
jne
add
add
add
add
mov
inc
add
dec
xor
pop
add
inc
add
add
mov
dec
out
lods
out
xor
add
sub
push
add
xlat
and
add
jle
push
add
jne
out
pop
jbe
jne
and
xchg
add
lock
push
sbb
mov
lret
pop
add
loopne
fwait
push
add
sub
lock
mov
add
push
add
inc
jecxz
inc
out
add
add
add
adc
lea
ret
movd
aam
add
jmp
enter
adc
or
pop
add
push
add
je
jp
sbb
xchg
aas
cmpsb
xchg
inc
add
or
add
movsb
xchg
fbld
popa
mov
add
std
insl
push
add
lods
in
and
pop
ja
mov
lret
or
inc
fwait
inc
add
test
pusha
add
fstpl
push
add
repnz
add
sub
push
add
pop
push
add
fisubs
add
sti
xor
lea
add
add
push
enter
dec
add
add
repz
xchg
push
add
fstl
add
stc
jno
hlt
jecxz
add
rolb
push
add
inc
add
stos
jmp
sbb
loopne
add
xor
dec
repnz
sbb
movsb
sub
and
lret
hlt
insl
std
mov
gs
mov
push
add
add
jl
inc
fistps
jnp
cmpsb
jmp
add
loop
add
adc
test
mov
add
add
mov
lock
add
dec
arpl
pop
xchg
cmp
inc
add
scas
outsb
add
add
insb
add
adc
test
rep
icebp
enter
add
scas
pop
inc
pop
inc
mov
add
or
add
xor
or
jmp
add
pop
je
into
pop
xorl
int
add
lods
sub
pusha
add
push
add
add
add
mov
dec
add
std
and
cmp
lods
neg
mov
mov
jnp
mov
cmpsl
testb
jnp
add
lret
mov
cmc
and
aas
out
add
add
movsbl
lret
inc
and
mov
cmp
scas
sub
add
aas
inc
pop
add
and
push
jb
jg
inc
out
arpl
ret
syscall
cmc
add
pop
lock
fdivs
adcb
clc
das
mov
dec
add
add
add
add
nop
push
mov
out
mov
push
add
mov
pushf
sub
mov
bnd
push
add
mov
jne
push
sbb
stc
std
in
loop
mov
jno
rcr
inc
add
aaa
hlt
orl
mov
add
sbb
lcall
add
xor
fwait
dec
add
add
and
add
add
inc
add
add
xor
loope
add
jmp
add
shrb
push
add
push
jb
inc
jmp
add
add
push
add
mov
std
xlat
xor
fdivr
inc
add
push
in
pop
and
xchg
test
sahf
xchg
movntps
add
add
inc
add
mov
out
lahf
imul
adc
add
mov
test
std
sbb
xor
fbld
add
fcompl
sub
mov
dec
jl
stos
cmp
dec
push
add
add
add
ret
adc
pop
cmpb
or
scas
mov
mov
add
out
add
jnp
aas
repz
out
add
add
mov
xchg
jmp
add
js
mov
dec
xchg
popf
xchg
fiadds
or
stos
pop
pop
mov
mov
call
inc
ficoml
push
add
mov
addb
adc
adc
sahf
and
jp
imul
sti
jecxz
in
out
scas
mov
dec
jle
pop
add
xchg
add
add
push
add
mov
add
add
mov
add
jle
dec
add
outsb
add
mov
add
clc
fisubrs
push
add
and
fistpl
add
xchg
lock
cmp
adcb
nop
jl
cmc
clts
add
or
add
add
push
cmp
sbb
out
pop
out
add
lret
lahf
aaa
add
inc
add
add
test
and
sub
add
aad
xor
xor
ljmp
xor
jecxz
cmp
divl
add
mov
mov
inc
add
add
test
lret
lea
lock
pop
add
std
adc
lock
jbe
out
scas
cmpsl
mov
xor
jecxz
add
add
ret
cli
mov
repnz
sar
imul
add
pop
xchg
inc
add
cmp
add
out
sbb
add
movsl
fcoms
add
daa
pop
add
add
or
ret
fbld
mov
inc
mov
add
jp
pop
add
add
mov
add
lods
imul
mov
inc
mov
jge
add
pop
add
mov
cltd
stc
xchg
imul
sub
and
les
ja
test
in
jmp
add
add
cwtl
mov
add
cltd
cmp
adc
add
add
or
add
inc
ljmp
mov
rcl
mov
pop
sub
push
add
repz
sarl
cli
clc
icebp
mov
icebp
xchg
dec
add
xor
add
sub
rorb
jno
add
inc
add
add
lods
xchg
jle
sbb
pop
mov
scas
jge
sub
inc
loopne
jecxz
add
jb
adcl
add
add
out
jbe
cmp
std
mov
fstps
insb
add
xchg
lock
cmc
inc
add
adc
int
fsubs
fcomp
add
add
add
add
jmp
hlt
scas
sbb
add
add
cmp
cmp
xor
jp
sbb
ja
pop
sbb
fsubs
add
add
nop
add
pop
sbb
fcoms
add
push
add
lret
or
sub
or
add
mov
jmp
pusha
add
pop
jnp
clc
addb
in
xchg
dec
add
sub
sub
inc
add
movsb
cli
jp
mov
add
jnp
popf
incl
add
cmpb
add
inc
add
aas
fwait
adc
out
aas
lahf
sarl
mulb
movl
mov
xchg
adc
jg
add
lret
loop
cmp
out
pop
add
stos
add
jp
sbb
pop
add
push
add
mov
add
shrl
add
sbb
aam
sub
jno
inc
insl
mov
jmp
add
mov
add
add
add
data16
add
popa
je
mov
add
xchg
add
stos
mov
jle
jl
inc
add
mov
add
dec
add
inc
aas
loope
int
add
add
add
outsl
outsl
fwait
dec
je
in
dec
mov
bound
sub
aas
sysexit
mov
dec
add
dec
add
push
adc
movsb
cmp
add
mov
sbb
and
jbe
inc
fs
test
xchg
inc
add
sbb
sub
pop
add
gs
inc
push
int
add
cmp
add
mov
sbb
add
fsubrs
fnstcw
add
sbb
pop
add
jge
inc
xchg
lds
mov
jecxz
add
mov
mov
inc
push
add
cmp
sbb
xchg
ret
push
add
in
mov
add
sub
jmp
add
aaa
popf
in
add
popf
imul
add
sbb
push
add
stos
dec
xchg
adc
add
xchg
cmp
pop
add
ret
inc
xor
mov
xchg
cmp
lahf
cmpsl
and
jge
movsb
rol
pop
add
dec
add
mov
ljmp
fcmovnb
jecxz
add
arpl
js
scas
pause
test
lcall
mov
add
sbb
mov
add
das
and
ret
fucomip
mov
stos
pusha
add
xor
in
add
dec
sbbl
dec
add
add
add
xchg
sarl
cmp
or
sbb
lcall
xchg
add
add
or
scas
movsb
or
fidivrl
cmp
iret
xchg
cmpsb
mov
add
add
adc
add
popa
mov
add
jge
mov
add
and
gs
fwait
les
sbb
xchg
mov
inc
add
lods
shll
add
ror
add
jmp
icebp
cwtl
mov
add
fiaddl
or
pop
sub
idiv
adc
add
sub
or
cmp
fcoms
xlat
push
fwait
push
ret
push
cmp
pusha
add
insl
cmp
jb
aas
mov
adc
add
add
test
add
lcall
es
jo
push
add
out
pop
add
cmp
add
ljmp
add
adcl
jno
leave
sub
dec
add
xchg
pop
push
add
idivb
and
mov
scas
mov
outsl
div
mov
cmp
dec
jne
shrl
add
lret
rcll
shll
push
add
or
add
jl
cmp
add
imul
lcall
add
jno
xor
push
dec
add
push
add
xchg
mov
add
mov
dec
push
dec
add
adc
stc
mov
xchg
xchg
imul
xchg
orb
movsl
sti
pop
add
add
push
add
jnp
scas
cmp
idivl
enter
lahf
cmp
xor
add
add
aaa
add
cmp
fdivp
out
add
mov
loopne
movsl
push
int
jl
into
in
sub
mov
aad
xchg
sub
rorl
sbb
add
add
daa
stos
jo
outsl
mov
xchg
lcall
adc
mov
add
fstpl
add
fwait
dec
add
xor
aam
add
jns
jecxz
xor
pop
add
pop
add
add
add
ret
or
sbb
dec
add
add
jge
xchg
mov
mov
jmp
add
mov
in
in
pop
add
mov
dec
push
add
sub
in
pop
sbb
pop
push
add
and
inc
add
jae
add
and
jl
aam
add
iret
push
add
cmp
dec
add
add
ljmp
cs
xor
jae
sbb
push
sbb
add
mov
pop
xchg
das
jle
data16
mov
fdivrs
add
sarl
test
add
push
jmp
add
cmp
adc
push
add
lret
push
add
and
xlat
loope
xchg
inc
xor
fisttpl
add
add
jle
cltd
add
add
add
pop
add
mov
enter
scas
cmpsb
fiadds
add
mov
add
pop
inc
add
add
pushf
push
movsb
stc
rorl
jns
add
and
pushf
shr
in
and
outsl
scas
and
add
cld
dec
add
xchg
js
stos
fldt
sbb
in
jge
add
dec
xchg
or
jbe
negl
jmp
add
data16
mov
sarl
add
jmp
add
pop
dec
add
cmp
pop
fucomi
jo
and
sbb
mov
add
bound
push
lock
adc
add
outsl
adcb
jmp
add
add
cmp
testl
test
xor
test
lods
sbb
lods
add
mov
add
add
cs
rorb
add
jmp
fadd
mov
ror
popf
or
mov
pop
in
adc
out
sub
dec
add
add
aam
xor
xchg
add
addl
pop
add
jmp
jne
lods
or
add
adc
in
sarb
mov
jmp
test
dec
pop
idivl
add
and
adc
dec
mov
cmp
in
fildl
add
sub
sub
push
add
pop
int
xchg
cli
cmc
mov
dec
add
shll
test
in
sub
jp
push
add
cmp
ja
ja
dec
push
sbb
into
jae
add
loopne
and
or
lods
stc
ret
lea
add
cld
leave
roll
pushf
xchg
test
mov
jmp
cli
push
add
das
daa
stos
popf
mov
inc
add
mov
add
pusha
add
sub
lea
and
mov
cmp
add
insb
add
adc
out
stos
cmp
add
out
aaa
rorb
push
mov
inc
add
jg
movsl
imul
jae
cwtl
fsubrl
add
rorl
movsl
orb
add
add
cwtl
lods
das
pop
movsb
mov
add
hlt
mov
add
adc
add
int3
outsb
add
add
aaa
fimuls
pop
add
sub
mov
popa
sub
sbb
or
andl
pop
sti
sub
add
add
jns
insb
add
push
cwtl
mov
xchg
enter
jl
jbe
bound
xchg
cltd
cld
sbb
add
xchg
js
pop
add
adc
cmp
xchg
mov
xor
add
jo
add
out
sbb
and
mov
add
imul
jns
out
sub
stos
add
add
repnz
xor
clc
lahf
dec
mov
sbb
push
add
xlat
xchg
pop
jle
aaa
ljmp
dec
addb
push
add
stos
jp
sbbb
xor
or
int3
insl
enter
xchg
push
dec
in
jecxz
out
cld
mov
jnp
and
cmp
pushf
mov
fnsave
ret
mov
mov
loop
scas
aad
orb
pop
add
aas
fldcw
and
pusha
add
lods
filds
fmuls
add
aam
xor
or
dec
add
je
loop
ds
push
add
add
inc
and
popf
xor
jo
daa
cmc
loopne
add
std
out
dec
push
add
or
jmp
lret
add
das
jge
pushf
add
andl
add
sub
add
add
add
leave
adc
push
add
jnp
pushf
xchg
movsl
rorl
add
scas
out
movsb
decb
pop
add
and
xor
push
rcrb
mov
add
mov
pop
add
sub
add
cwtl
adc
adc
push
add
add
add
cmc
push
and
mov
dec
add
dec
add
add
cmp
push
add
add
jg
add
xor
sbb
outsb
add
cld
cmp
lahf
pop
add
outsl
adc
dec
inc
pop
add
aas
fcoml
adc
add
add
add
sub
push
pushf
imul
rolb
jl
add
add
xor
fnsave
insl
sub
fbld
ret
icebp
cli
mov
add
jo
push
add
das
xlat
lds
add
inc
loop
stc
insl
cmpsl
pop
pop
xor
cmp
add
add
pop
add
gs
inc
add
add
or
add
fwait
test
push
fadds
lock
subl
jl
bound
repnz
jg
add
mov
cmpsb
idiv
sub
pusha
add
mov
notl
or
push
add
pop
sub
mov
sbb
add
add
jp
mov
add
add
adc
int
add
jge
test
dec
xchg
cmpsb
mov
das
mov
fwait
xchg
jmp
stos
enter
out
nop
dec
add
add
sbb
cmp
push
add
loope
add
or
repz
movsl
js
push
add
push
add
xchg
shll
xchg
rorb
rcrb
add
sub
inc
movsb
gs
add
sarb
cmpsl
push
add
add
add
pop
add
inc
mov
add
mov
sbb
add
xor
test
add
dec
add
add
data16
push
add
add
add
add
cmpl
add
test
adc
nop
mov
add
jae
add
cld
std
sahf
cltd
cs
sarb
adc
outsl
add
add
add
adc
cmpl
mov
pop
add
and
pop
adc
lahf
cmpsl
cmp
dec
mov
mov
je
shrl
mov
xor
and
jecxz
or
adc
sbb
mov
add
sbb
push
xchg
jge
xor
jmp
xor
push
add
aaa
xor
test
add
add
leave
popa
adc
sub
xchg
add
mov
outsb
add
popl
mov
mov
add
xchg
sbb
ret
mov
in
add
lret
out
add
dec
add
loope
aam
mov
or
adc
lock
add
add
xchg
mov
cmp
roll
add
add
cmp
mov
sub
sahf
inc
mov
jmp
out
adc
pop
test
pop
xchg
ljmp
mov
mov
add
add
jmp
stc
aad
das
sti
push
add
or
shlb
mov
mov
lods
sbb
scas
xchg
and
out
add
adc
add
adc
loopne
sti
add
jb
arpl
pop
add
jmp
popa
mov
add
adc
sub
xchg
adc
cmp
sahf
or
mov
ficomps
cmpsb
lods
push
add
pop
add
inc
or
push
repz
lods
pop
mov
cmp
ljmp
dec
lods
filds
jns
add
addl
and
and
shll
cmp
dec
cmpxchg
add
cwtl
cld
xchg
mov
nop
dec
jle
aad
add
add
add
stos
adc
mov
jae
jae
add
mov
in
add
add
in
mov
pop
xchg
lods
pop
sbb
loope
dec
add
xchg
test
out
aam
cmc
dec
add
arpl
add
add
jnp
int3
pop
sbb
or
dec
add
mov
aas
xor
add
jl
fnstcw
rol
sub
imul
mov
add
add
jge
movsb
dec
add
add
pop
add
loopne
add
clc
push
add
cmp
sti
insb
add
rcrl
sub
out
add
add
add
iret
push
add
repnz
sbbl
je
mov
jecxz
int
add
jmp
add
add
or
mov
aas
add
pop
push
add
add
in
inc
add
jecxz
add
add
add
add
sahf
enter
push
add
fildl
mov
add
fnstenv
data16
add
cmp
sbb
data16
jecxz
sub
fcmovbe
jnp
adc
out
or
mov
dec
add
xchg
aam
or
pop
inc
pop
enter
sti
inc
lock
jecxz
add
adc
mov
inc
dec
cmpsl
jo
or
add
add
add
leave
and
and
add
cmpsl
xchg
adc
jne
into
sub
add
arpl
jns
jns
or
daa
push
and
pop
outsb
add
jle
cltd
cltd
scas
insb
add
xchg
xchg
jg
inc
add
sbb
push
add
lret
fdivrs
jle
imul
add
and
jp
stos
jge
push
add
out
xor
lahf
sbb
cld
in
mov
mov
sub
add
fimull
mov
xor
lcall
roll
add
mov
clc
push
fsubs
mov
add
sbb
or
jae
adc
sub
xor
inc
in
movb
and
jp
outsb
add
add
add
mov
cmc
addb
mov
jmp
sbbb
xor
mov
cmp
add
adc
add
add
movups
lahf
out
sbb
fisttpl
clc
notl
xchg
cmpl
mov
mov
or
ds
fidivrs
add
pop
add
ds
pop
dec
xchg
in
fstpt
inc
xchg
pop
test
add
adc
xor
add
add
jae
aam
clc
sub
pop
or
loopne
fdivp
pop
add
cli
lods
xchg
outsl
sbb
cltd
mov
mov
sub
repnz
cmp
xor
xlat
jo
and
scas
mov
xchg
dec
mov
aam
nop
cmp
imul
add
add
add
xlat
icebp
inc
push
filds
add
mov
xchg
xor
ret
jmp
imul
mov
mov
xchg
jmp
cmp
xlat
dec
add
or
int3
in
out
mov
loopne
sahf
xchg
fbld
add
rorl
add
add
push
add
cmp
dec
aad
add
insl
and
fcoms
pop
add
xorb
pop
roll
add
dec
push
cwtl
mov
inc
movsl
mov
xchg
cmpsl
mov
or
add
pop
fcompl
push
add
mov
sti
pop
mov
lods
inc
add
insl
sbb
lret
xor
sub
pushl
mov
lds
js
into
pushf
das
mov
add
mov
cmpsl
lcall
add
add
hlt
cmp
stc
icebp
sbb
fidivrl
adc
add
add
and
push
test
test
cmp
call
in
add
sbb
ret
or
add
out
daa
mov
add
xlat
mov
out
or
fwait
sarb
jnp
pop
cld
add
cmp
jmp
add
mov
add
push
cmp
add
and
mov
adc
sbb
add
add
xor
pop
mov
test
add
shlb
mov
add
test
mov
add
or
jecxz
pop
push
push
add
inc
cmp
cmp
pop
add
call
adc
mov
add
add
sbb
stos
pop
adc
xchg
jp
popf
cmp
cld
pop
add
pop
inc
add
cmp
int3
or
or
jle
aam
and
xchg
sub
outsb
add
xor
xlat
inc
add
shll
and
ret
push
add
addb
shlb
add
rcrb
xor
mov
sahf
xchg
push
add
hlt
sbb
jp
in
movsb
sub
cmp
dec
add
repz
add
or
mov
stc
pushf
dec
add
mov
pop
add
clc
mov
cmp
mov
lea
pop
add
xor
test
add
sbb
dec
add
or
push
add
daa
pop
scas
cmpsl
jle
aas
or
inc
add
outsb
add
add
shl
jecxz
add
stc
es
ja
xchg
xor
add
jno
add
add
insb
add
mov
call
sbb
or
testb
xchg
add
add
sub
orl
xchg
test
add
ds
cmp
stc
pop
dec
add
lods
dec
pop
inc
add
lods
mov
add
int3
dec
gs
xor
int3
out
lods
inc
arpl
mov
add
jb
scas
test
std
loop
stc
loopne
sub
adcb
add
add
daa
mul
sub
xchg
cmc
mov
pop
dec
add
add
jne
add
stc
decb
mov
mov
pop
movsl
mov
add
lret
mov
enter
roll
inc
add
add
jo
dec
scas
and
and
sahf
xchg
aaa
inc
xchg
add
mov
jg
push
out
pop
out
sbb
sbb
aad
shr
outsl
lret
test
add
add
add
inc
loope
jecxz
and
loop
add
stos
xor
push
add
mov
test
cmc
js
in
add
pop
push
add
add
sbbl
add
dec
add
jo
pop
xor
mov
xor
pop
add
add
ret
in
sti
xchg
pop
cwtl
sub
fwait
leave
inc
add
nop
sti
or
ljmp
fstpl
push
pusha
add
sbb
cmc
cmpsb
sar
sub
lret
lods
inc
add
add
cmpsl
dec
add
add
popa
push
add
fsubrs
mov
sahf
sbb
mov
loope
add
sub
pushf
push
add
cmpsb
testl
mov
dec
add
inc
arpl
mov
mov
test
mov
loopne
insb
add
nop
cmpsl
jl
cmp
js
add
lds
outsb
add
push
sti
leave
cwtl
out
sbb
aas
sbb
and
fidivs
stos
repnz
adc
or
sbb
sub
scas
cwtl
cmpsl
sub
loope
dec
sti
jae
repz
add
sbb
js
out
out
add
add
pop
add
sti
pop
sbb
inc
add
rolb
leave
imul
imul
add
add
add
push
add
xchg
outsl
cld
xor
xchg
xchg
dec
add
mov
sahf
lret
push
add
mov
data16
mov
xor
out
pusha
add
push
add
add
int
mov
addb
xchg
enter
fwait
xor
add
aam
test
cmpsb
test
pusha
add
add
out
add
inc
daa
lock
xorl
add
inc
add
push
add
mov
add
fdivs
add
insl
adc
addr16
out
push
add
xchg
in
pop
test
test
jmp
add
mov
sub
pop
out
jge
mov
rcrl
xchg
and
jnp
lret
dec
add
add
fcompl
imul
imul
xor
jg
and
test
cld
xchg
iret
sbb
idivb
add
add
add
push
add
je
mulb
cmc
in
add
bound
idivb
add
push
add
mov
add
add
add
outsl
test
dec
add
xor
test
cltd
rcl
bnd
int
add
div
add
test
in
cmpsb
sbb
stos
out
jle
insl
mov
les
mov
data16
add
xchg
jl
add
loop
pop
add
sbb
pop
pop
or
roll
daa
arpl
adcb
std
sti
mov
mov
add
add
add
in
sbb
cltd
xorb
add
adc
add
sbb
inc
add
lea
scas
add
ret
les
int
inc
add
out
add
mov
and
aam
mov
loopne
add
mov
ficoms
cmpsl
add
mov
add
add
fwait
in
mov
xchg
mov
add
push
add
dec
movsb
fbld
pop
add
bound
dec
test
lret
add
repnz
xor
inc
call
ss
jl
lcall
add
add
pmullw
test
inc
testl
ljmp
add
xchg
stc
mov
mov
or
out
mov
add
add
add
in
add
clc
ret
inc
add
xor
rorl
aam
sbb
jb
jo
inc
sub
pop
ss
and
sub
lahf
ds
into
in
pop
add
add
jp
cmc
push
add
imull
add
add
aad
lret
int
add
adc
into
add
cmc
inc
push
add
ror
inc
shlb
jp
adc
dec
cld
loopne
add
add
notb
gs
mov
sbb
jae
add
aas
scas
ljmp
sub
and
test
sbb
or
fbstp
jno
mov
enter
pop
push
add
imulb
add
push
popf
ljmp
add
add
xlat
rclb
add
cmp
outsb
add
mov
js
les
add
push
xchg
icebp
cld
idivl
dec
add
loope
sub
add
add
dec
add
mov
sbb
mov
cld
dec
add
add
jle
sub
jp
out
mov
add
jmp
add
mov
dec
add
ja
add
add
jne
add
add
cmp
lcall
cwtl
add
adc
icebp
cs
adc
adc
enter
add
xor
arpl
inc
add
jb
movsb
leave
loope
pop
test
test
add
fnsave
add
inc
add
fsubrs
inc
add
add
loope
pop
add
mov
add
inc
adc
xchg
mov
mov
inc
cmp
in
add
add
add
add
push
fiadds
add
dec
add
fadds
rcll
stc
sub
add
add
and
bound
std
xor
or
mov
pop
pop
add
add
das
test
pop
add
add
push
add
loopw
aad
and
aaa
add
pop
sbb
js
sub
mov
add
pop
push
add
add
jg
loopne
sub
popa
adc
add
gs
add
push
add
fidivs
out
cltd
lahf
mov
sub
pop
cld
test
dec
add
icebp
rol
xchg
xchg
rcll
out
jb
sub
mov
mov
negl
mov
jl
push
add
fcmovnb
pusha
add
add
mov
ja
fldl
inc
dec
add
push
add
add
xchg
lods
sahf
mov
add
insb
add
rorb
sub
add
xchg
sub
inc
add
xor
roll
dec
add
xor
cmp
repz
inc
cmc
pop
jns
xor
add
mov
mov
sub
aaa
jne
push
add
inc
add
cld
cmpsl
out
pop
dec
aaa
xor
call
das
call
sbb
das
lea
add
fidivs
fldt
icebp
movsl
sbb
push
add
test
jo
sbb
jbe
dec
xchg
pusha
add
add
add
and
sbb
push
add
add
mov
sub
add
push
adc
and
outsl
outsl
fst
cmp
ljmp
mov
pop
add
imul
test
pop
add
jnp
add
adc
hlt
into
pop
inc
xor
jno
data16
and
xlat
dec
outsl
dec
jbe
inc
call
decb
pop
add
hlt
push
add
jb
add
mov
add
add
in
shrl
xchg
mov
or
inc
inc
stc
and
mov
and
out
xchg
enter
sub
xchg
jp
mov
add
dec
add
or
mov
sub
aaa
cmp
cmpsb
mov
jnp
add
xor
mov
les
cmpsb
aam
xrelease
add
add
aas
mov
add
jbe
out
in
incb
add
jecxz
add
add
sbb
sarb
jbe
jge
cld
inc
xchg
or
int3
xchg
outsl
cmp
idiv
cmp
in
ja
and
cmpsl
cmp
and
xchg
mov
ret
add
add
sbb
lret
orb
popa
sarb
inc
add
push
in
das
dec
add
xor
mov
pop
inc
add
add
andb
jo
sahf
sarb
add
leave
jb
nop
dec
add
gs
fsubr
stos
repnz
add
sbb
or
add
add
mov
jle
adc
nop
cmpsl
or
add
inc
add
add
das
sarl
add
add
push
add
mov
add
loope
xor
addb
adc
sub
mov
pop
add
roll
cmp
mov
cmp
inc
stc
push
add
xor
add
mov
jmp
loopne
fs
mov
push
add
pop
sub
push
add
pop
adc
add
xchg
mov
enter
add
cmp
nop
std
jge
pop
inc
add
mov
add
sub
outsb
add
add
and
out
jmp
shr
mov
add
dec
add
add
dec
add
mov
mov
sbb
test
sub
xor
add
mov
xor
mov
mov
stc
shl
add
add
or
mov
in
sbb
add
push
add
sbb
or
nop
jecxz
add
or
popf
filds
jbe
mov
add
mov
adc
scas
mov
sbb
popf
fisubrs
xchg
stos
jl
daa
dec
jg
mov
add
cmp
mov
mov
push
add
adc
or
jp
jp
sub
decl
add
out
lahf
push
jge
call
add
cmp
xchg
sti
mov
sbb
dec
add
sbb
in
add
aas
dec
addr16
loopne
or
add
jno
les
fistl
ljmp
bound
fs
cli
jb
push
add
rolb
scas
xor
pop
scas
mov
cmp
add
jl
xchg
sbb
and
pop
add
pop
add
sub
xor
insb
add
mov
adc
push
add
pop
add
aad
hlt
shll
lahf
adc
push
add
inc
add
add
loop
cmpsl
mov
add
int
sbb
lods
sub
xlat
mov
js
fidivrs
add
xor
imul
aas
lret
xor
add
and
jne
jo
lsl
add
add
mov
add
hlt
stos
mov
add
pop
jle
mov
rorl
add
push
add
mov
adc
sar
stc
push
add
add
cli
shrl
dec
jge
lea
add
xchg
sar
lock
add
mov
cmpsb
arpl
add
test
push
add
mov
dec
add
push
mov
add
data16
cmp
cmp
xor
add
mov
jo
push
add
pop
lret
and
mov
mov
sub
iret
jo
mov
dec
dec
add
add
insl
insb
add
out
ret
ja
add
add
pushf
jae
jno
lahf
lret
out
adc
jp
stc
ljmp
add
pop
add
add
js
enter
add
push
add
xchg
mov
adc
cmpl
ss
movsb
repnz
add
lods
pop
add
and
scas
mov
add
jns
mov
add
mov
add
and
adcl
inc
mov
std
push
add
jbe
mov
adc
mov
add
adc
out
cmpsl
dec
ret
xor
std
sub
iret
inc
pushf
clc
inc
jo
add
dec
add
add
jne
xor
xor
adc
mov
jmp
mov
add
enter
add
fidivrl
mov
xchg
movsb
popa
xchg
loopne
rolb
sub
adc
xor
add
or
add
mov
mov
mov
jle
fdivs
add
add
jne
add
mov
adc
lahf
jl
int3
loopne
cmc
cmc
and
add
out
je
jmp
push
add
cli
in
xchg
fcoms
add
xor
dec
add
ret
push
insb
add
add
inc
add
jl
pop
add
jae
ljmp
xchg
cld
mov
add
out
add
mov
daa
dec
aaa
mov
inc
add
or
sub
scas
int3
divb
add
js
fistps
dec
pop
push
cmp
dec
inc
add
jmp
lahf
int
xchg
lret
add
xor
add
cld
aad
add
cld
ljmp
add
jne
add
out
cmpsl
cli
icebp
leave
test
sub
dec
daa
data16
sub
jbe
or
pop
jne
push
add
sbb
daa
pusha
add
rcr
cmp
mov
cli
jmp
cli
and
jne
daa
or
xor
fmull
xchg
shr
inc
sub
adc
dec
add
add
in
in
or
lock
shll
push
add
add
mov
ljmp
add
pusha
add
add
add
stos
pop
add
lahf
inc
inc
add
icebp
and
sbb
out
rorl
dec
add
sub
shrb
add
pop
in
and
pop
je
roll
lcall
lock
add
daa
sub
push
add
shrl
mov
mov
add
jnp
in
cmc
test
lods
push
add
add
mov
lods
popa
mov
or
cli
popa
movsl
aaa
jne
or
mov
loop
xchg
add
add
mov
add
add
xchg
add
add
xor
repz
adcb
imul
add
add
enter
pavgw
mov
xchg
add
add
fsub
cmp
inc
add
out
std
push
sub
push
clc
sub
stos
mov
aad
add
aas
cmp
dec
ja
pop
xchg
add
mov
sbb
imul
scas
notb
in
cmp
pop
add
js
sahf
mov
test
add
pop
add
mov
add
ja
cmp
scas
mov
xor
ficomps
sbb
insb
add
and
pop
aas
pusha
add
xchg
cli
push
add
sbb
or
push
push
add
and
mov
mov
jo
dec
jne
movsl
push
add
add
andb
movsl
jg
push
inc
and
mov
stos
stos
mov
outsl
xchg
jecxz
mov
adc
test
push
pop
jecxz
mov
add
add
mov
std
ja
jns
add
push
add
mov
and
jo
outsl
addb
mov
push
add
and
testb
jmp
mov
pop
add
add
sarb
je
daa
out
push
add
andb
sub
mov
scas
pushl
mov
psubsw
pop
add
out
sub
xchg
dec
ja
insb
add
add
daa
int3
sub
in
jae
addr16
stos
pop
subb
stos
fwait
sbb
fmuls
mov
ja
add
mov
add
dec
add
sub
out
add
inc
cld
xchg
insl
adc
jle
add
add
jecxz
add
push
add
out
add
imul
add
idivb
cmp
aas
test
cmp
add
push
add
sbb
shl
adc
imul
scas
pop
xor
and
push
xchg
add
dec
add
imul
jl
push
add
lret
mov
gs
add
aas
popf
jbe
leave
xchg
mov
shlb
add
mov
mov
or
or
xchg
popa
test
cmp
pop
xchg
push
add
inc
add
dec
mov
popa
out
add
fsubs
shrl
adc
mov
test
popa
or
imul
pop
add
sub
jae
add
add
movl
xchg
movl
ror
sbbb
fdiv
push
xor
add
mov
push
add
clc
dec
add
lahf
push
add
mov
adc
add
add
cmc
sahf
cmpsb
push
lock
das
inc
push
add
test
out
add
jmp
outsb
add
push
push
add
js
and
vmread
ja
add
mov
loop
add
add
add
sub
insl
sub
add
cltd
pushl
scas
mov
in
xor
sub
ds
repz
test
fwait
mov
xchg
add
popf
cmpb
add
add
test
mov
int3
cmp
jne
enter
xchg
pusha
add
test
inc
sti
xchg
mov
sbb
jg
push
jb
je
lea
sbb
xor
jg
mov
out
sbb
mov
leave
fnstcw
mov
add
cmpl
movsl
xchg
pop
add
nop
or
inc
jle
and
jp
mov
sarb
inc
loope
pop
add
add
scas
data16
jbe
sbbb
mov
add
xchg
stc
xor
rolb
add
add
movsl
or
xchg
jmp
or
mov
push
push
add
inc
cmpxchg
push
sbb
push
add
ret
add
xchg
cmp
add
add
je
xlat
and
add
test
add
adc
adc
pop
add
fwait
cmp
xor
and
mov
cli
test
mov
cmp
add
add
add
ret
cmove
lahf
fcom
dec
push
add
cltd
adc
pop
add
stos
insb
add
out
add
jle
xchg
xor
sahf
fs
xchg
pusha
add
xor
add
inc
pop
dec
nop
pop
lock
roll
add
mov
add
cmp
add
add
add
add
mov
lret
nop
sub
mov
in
and
in
push
das
sbb
popf
xchg
outsb
add
fidivrl
adcb
and
es
idivb
add
push
add
dec
add
cmp
dec
add
jns
sub
mov
arpl
jno
add
test
add
add
xchg
dec
add
punpckldq
and
add
mov
inc
add
out
push
xchg
push
add
xor
daa
sbb
xchg
xchg
mov
pushf
out
aam
js
xchg
addr16
loope
mov
add
inc
add
xorb
into
push
mov
scas
movsl
int3
cmp
call
call
jo
je
int3
hlt
dec
into
mov
add
and
rcrb
icebp
mov
push
cmovle
push
and
cltd
stc
js
xlat
xchg
add
dec
data16
gs
jmp
rep
call
mov
scas
jns
mov
int
and
sub
lahf
out
add
or
movsb
outsl
add
loop
mov
add
rorb
add
les
add
loopne
push
add
add
add
cmpsb
data16
pop
pop
push
repnz
add
adc
data16
add
imul
add
rorb
sub
movl
add
add
add
add
add
test
add
add
xchg
addr16
add
add
jae
mov
movsb
pop
mov
sbb
pop
add
mov
and
lea
in
add
test
mov
test
xor
fcoms
in
lret
subb
daa
lahf
lcall
and
inc
inc
add
add
je
aaa
cmp
mov
push
lods
fst
push
mov
shll
add
fcompl
xchg
sbb
iret
inc
add
add
add
sub
js
div
cmc
cmpsb
lcall
push
add
add
pop
icebp
in
add
push
add
std
dec
add
xor
push
add
aas
push
add
add
cli
movsl
testl
lods
adc
dec
sbb
add
add
add
fsub
add
mov
push
add
add
dec
add
add
les
jae
addr16
lret
add
ret
xchg
jb
inc
add
mov
add
cmp
and
jecxz
mov
sub
add
push
add
xchg
xchg
dec
add
inc
add
dec
add
or
ljmp
std
add
cmp
xor
mov
add
add
mov
xchg
lcall
adc
sahf
lock
gs
popa
pop
loopne
add
add
and
add
add
xchg
sbb
sub
xlat
fidivl
sub
add
sub
inc
add
xor
bnd
mov
push
add
add
leave
jnp
and
hlt
inc
jge
aaa
pop
add
mov
add
mov
xchg
sub
cmp
push
add
sbb
icebp
movsb
subl
aam
andl
fldcw
popa
lret
ljmp
inc
add
mov
and
imul
xor
adc
out
push
add
jmp
pop
jne
arpl
sub
add
add
mov
add
add
or
add
js
inc
imulb
jmp
add
add
push
into
push
add
push
add
and
enter
add
popf
stc
push
add
pop
arpl
or
out
scas
into
sbb
adc
jno
mov
mov
xchg
add
dec
add
fcomps
pop
xor
and
add
pop
add
cmp
adc
dec
insl
mov
cmp
add
add
int3
pop
cmpsl
loopne
cmp
push
cmp
jmp
lcall
push
add
inc
add
lock
dec
cmp
popa
cmp
push
add
and
add
shlb
and
pop
clc
push
add
adc
cmp
add
push
add
orl
add
and
push
ret
dec
scas
cmp
lea
jmp
xchg
xchg
pop
adc
enter
in
dec
add
add
add
dec
jle
pop
lock
pop
lcall
push
lods
xor
pop
add
mov
bound
fists
cmp
mov
push
adc
add
add
in
imul
sbb
faddl
add
add
jnp
add
data16
jle
repz
popf
je
dec
std
pop
loope
cmp
xchg
add
daa
pusha
add
and
sub
adc
and
mov
rolb
add
add
scas
pop
enter
jb
dec
jne
mov
sub
add
sbb
add
add
push
add
jge
insb
add
add
push
adc
mov
add
mov
pop
cmpsb
mov
out
sub
sub
outsb
add
dec
add
add
pop
xchg
sahf
in
js
pop
add
pop
push
lret
push
add
xchg
push
xchg
pop
add
dec
add
xor
cmpsl
xchg
rolb
add
sub
dec
sbb
ja
leave
lea
sahf
mov
sub
shr
jno
aaa
push
lock
add
sti
mov
jecxz
add
dec
add
pop
mov
out
shr
and
mov
clc
sub
jg
add
add
cli
pop
ret
pop
adcl
mov
cmp
or
cwtl
push
push
add
inc
fsubp
or
add
mov
inc
add
xchg
push
add
fildll
pop
stos
lods
js
ss
jge
push
add
push
add
sub
push
add
inc
loop
add
aad
add
add
cmpsb
pop
add
test
xchg
add
fnsave
lock
hlt
add
add
dec
add
jecxz
movsl
mov
add
rcr
lock
insl
sub
add
rcll
mov
test
insl
sbb
ret
jecxz
mov
pop
add
push
push
add
xchg
xchg
mov
insl
cmp
pop
sub
add
and
das
lods
call
and
pusha
add
add
add
pop
adc
mov
add
add
add
push
add
repnz
mov
add
out
add
push
or
mov
xor
add
and
fdivrs
add
loope
inc
mov
pop
scas
or
das
jmp
ljmp
hlt
enter
iret
jmp
iret
mov
add
xor
cmpsl
movsb
push
add
cli
pop
add
sbb
sti
push
fadds
mov
clc
in
loop
pop
add
add
lods
cmp
sub
jge
add
add
add
fcoms
loopne
mov
push
xlat
adc
add
push
add
and
push
add
add
add
jne
lret
cmp
cmc
sbb
and
mov
cmp
outsl
lret
pop
add
sub
and
mov
add
adc
das
fbld
cmp
inc
add
adc
aaa
mov
push
adc
inc
xchg
mov
jp
insl
lahf
lds
jcxz
lods
movhps
imul
mov
add
dec
add
or
ret
movsl
mov
out
adc
xor
mov
add
add
add
sub
xor
xchg
add
add
sub
repz
rcr
inc
add
daa
rcr
add
cltd
or
mov
movsb
repz
addr16
add
imul
nop
add
xchg
jo
out
adc
mov
push
add
add
in
add
cmp
sbb
shrb
sahf
cmpsl
cmpsb
outsb
add
push
add
push
add
add
xorb
add
test
or
xor
adc
add
cmpsb
mov
cmp
jecxz
xchg
rcrb
int
rcrb
cwtl
cmp
mov
pop
scas
movsb
stos
cmp
les
xchg
jmp
cli
lods
sbb
or
dec
add
gs
add
mov
add
or
push
sub
xor
add
dec
add
jb
cmp
xchg
mov
movsl
outsb
add
pop
push
leave
sbb
std
cwtl
mov
add
add
add
out
loop
repz
or
add
or
dec
add
cmpsl
shrl
mov
add
cld
and
mov
add
add
add
pop
add
and
jg
test
add
add
mov
loope
add
in
jg
xor
mov
insl
xchg
pop
add
inc
mov
add
clc
std
aaa
pop
mov
add
xchg
inc
add
xchg
aam
hlt
lods
push
add
arpl
add
call
jae
add
add
enter
popa
insl
jnp
and
repnz
mov
mov
aas
ficoml
add
sub
rcrl
and
lret
add
jmp
mull
mov
add
add
outsl
mov
icebp
leave
dec
add
in
nop
mov
add
xor
cmp
outsb
add
aas
dec
add
in
add
add
push
loope
sarb
hlt
adc
mov
add
add
bound
jno
pop
enter
push
popf
add
daa
add
mov
add
add
inc
shld
mov
bound
jmp
add
fwait
jne
lcall
jg
mov
stos
les
adc
mov
clc
daa
jae
lahf
push
add
pop
mov
jne
add
cmp
xor
add
mov
xchg
push
add
shl
jmp
or
sub
add
jbe
xchg
jo
mov
scas
in
add
mov
adc
inc
fmuls
insl
pushf
clc
in
jo
in
decl
mov
lock
add
or
fwait
xchg
sbb
mov
mov
add
or
xor
gs
lcall
add
or
ret
stc
outsb
add
pop
pop
add
int3
adc
and
imul
add
and
dec
jae
rcrb
sub
lret
adc
fistpl
cli
push
add
inc
add
test
push
add
mov
ret
xchg
cmp
scas
jae
add
insl
cltd
mov
jmp
inc
mov
add
inc
push
add
dec
adc
loopne
push
mov
add
add
add
pusha
add
pusha
add
cmc
add
add
add
loope
add
mov
add
add
cld
popf
jge
mov
add
shlb
fwait
cmp
cwtl
mov
roll
add
fisttpll
fistpll
add
pop
pushf
cmp
sahf
negb
lahf
adc
push
add
inc
stos
stos
xchg
lret
fimull
add
add
jp
inc
add
in
fs
push
mov
jne
xchg
mov
add
xchg
add
aas
mov
add
dec
leave
rcll
add
dec
or
add
cli
mov
dec
mov
jl
mov
xchg
inc
add
push
add
mov
add
and
and
inc
add
add
pop
add
ficomps
jbe
ret
dec
loopne
imul
add
and
add
add
add
in
add
add
je
and
xor
xor
adc
mov
sub
lahf
dec
push
add
or
les
data16
dec
ror
add
add
in
adc
mov
xorb
add
or
pop
movsb
sub
xchg
mov
bound
psllq
cmp
fldcw
outsb
add
pushf
add
pushf
mov
add
icebp
push
add
add
adc
jle
ret
mov
das
outsl
mov
add
add
inc
dec
ret
addr16
mov
mov
cmp
ret
sahf
movsl
lds
add
add
cwtl
mov
add
loop
hlt
sbb
push
add
add
fisttpll
ja
cmp
push
xlat
mov
psrlq
in
cmp
add
add
push
add
adc
add
imul
add
std
test
adc
or
pop
add
in
cmp
lcall
add
inc
movsb
sub
add
ja
mov
mov
add
leave
adc
add
add
push
add
dec
loopne
mov
rcll
les
