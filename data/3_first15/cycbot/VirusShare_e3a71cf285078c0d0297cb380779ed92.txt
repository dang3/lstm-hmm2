arpl
dec
push
and
mov
sahf
sub
jle
lods
fists
sub
or
insl
sbb
pop
mov
fwait
ss
xchg
push
icebp
push
dec
fsubrs
add
cmc
call
xchg
xlat
mov
add
faddl
imul
jge
xchg
push
insb
xchg
sti
cmc
rcl
add
xor
mov
inc
mov
ljmp
out
pop
pop
icebp
or
add
inc
test
leave
aaa
call
int3
roll
mov
aaa
fsubl
js
mov
mov
mov
ljmp
cmpsl
cmp
or
mov
add
add
fs
jbe
cmp
mov
xor
popf
insl
jbe
xor
ret
sub
nop
add
jbe
add
mov
jns
daa
aad
arpl
movd
mov
rolb
mov
jmp
add
mov
jo
mov
jns
mov
push
cli
cmp
mov
xchg
inc
int3
xchg
cmp
ds
cwtl
cmp
lret
rolb
inc
fwait
sub
divl
push
int3
iret
inc
add
cs
loopne
mov
jns
push
mov
mov
add
mov
idivb
outsl
and
adc
cmp
and
adc
mov
roll
ds
arpl
lods
sub
add
sti
jmp
cmpsb
outsb
lret
iret
divl
push
mov
add
fstl
sub
repz
rolb
mov
sbb
and
sub
add
das
stos
mov
adc
add
loop
mov
xchg
xchg
add
cmp
lods
jbe
loope
inc
setp
jno
inc
pop
push
add
lods
mov
jb
mov
jae
outsl
test
lock
jecxz
sub
mov
stos
mov
pop
cmp
out
pop
xor
mov
inc
add
mov
xchg
or
dec
es
mov
dec
enter
popa
int
in
test
ror
or
add
mov
lret
mov
cli
jg
fimuls
inc
jo
mov
mov
dec
jle
stc
data16
sbb
add
add
movsb
rolb
mov
rolb
mov
add
mov
mov
movsb
js
inc
xor
mov
xor
mov
cwtl
pop
cmpsl
rcrl
push
add
or
xchg
push
add
popf
or
xor
mov
cltd
fs
inc
cmp
int
or
xor
mov
pop
scas
xchg
add
testl
dec
mov
test
or
js
add
les
and
mov
rcrl
add
add
data16
push
insl
insl
cld
xchg
out
inc
fptan
add
add
mov
pop
fucomip
sub
push
mov
dec
ret
dec
sub
add
in
stos
and
cmp
movsl
or
mov
ret
jg
mov
mov
in
shrl
nop
add
pop
mov
scas
jne
mov
add
fucom
outsl
loopne
mov
push
sahf
and
mov
test
fists
mov
inc
sbb
adc
mov
repz
mov
ja
subl
test
test
mov
rolb
addb
repz
jg
add
mov
mov
bound
mov
mov
outsl
mov
mov
add
mov
and
mov
cmpl
insl
inc
mov
adc
pop
mov
sbb
add
xchg
push
leave
inc
add
jns
add
mov
repz
mov
sub
gs
cmp
aaa
stos
rolb
pop
loopne
mov
add
jp
pop
inc
js
test
mov
ret
imul
je
add
pop
mov
insb
cmp
or
add
daa
cmp
add
insb
or
sub
xlat
enter
mov
xor
daa
std
mov
xor
ficoml
mov
adc
add
in
mov
jnp
jo
mov
ja
xor
rorl
mov
and
pusha
add
jo
mov
xor
aad
icebp
fsubl
add
push
adc
dec
jle
insb
loopne
mov
test
mov
add
mov
add
cmp
loope,pn
and
add
or
pop
and
mov
in
adc
mov
nop
add
mov
add
call
xchg
jne
sbb
ja
sahf
xchg
test
add
fucom
fs
jae
int
add
pop
fs
add
in
clc
sub
int
es
pop
sub
lcall
js
js
hlt
fwait
mov
mov
mov
jp
inc
add
inc
std
mov
mov
add
mov
call
add
aam
xchg
add
out
mov
paddusb
nop
add
std
iret
xchg
and
dec
ficompl
xrelease
and
mov
xchg
and
mov
xor
loope
push
out
std
out
jb
mov
add
add
xlat
stos
dec
sub
sub
rcrl
mov
mov
pop
lret
adc
popa
imul
rcll
lea
mov
addr16
xchg
add
dec
pop
cmp
add
mov
test
or
inc
add
test
and
inc
jge
mov
lds
mov
idivb
popf
stc
dec
jp
add
sub
addb
insb
dec
push
addr16
inc
add
lods
gs
pop
jbe
icebp
lods
out
and
fmull
sbb
dec
outsl
test
adc
jno
jbe
in
mov
add
mov
mov
sbb
mov
and
add
jno
cmc
inc
add
and
mov
test
mov
cli
lea
add
mov
or
rolb
fisubrs
add
nop
add
pop
sbb
dec
mov
mov
jecxz
movsl
xor
mov
mov
inc
rolb
mov
in
fadd
add
inc
xor
add
add
jle
into
rolb
mov
in
lret
mov
pop
sbb
jg
cli
add
sbbl
mov
jbe
dec
pop
loope
loopne
mov
add
xchg
pusha
add
sub
je
sahf
push
fs
inc
cli
jbe
insl
outsl
cmp
lahf
mov
stos
aaa
pop
addr16
add
push
and
mov
push
or
add
mov
mov
pop
sbb
movsl
movsl
inc
and
mov
enter
fwait
mov
add
add
sub
sbb
adc
movsl
addb
jns
pushf
jg
sub
xchg
bound
mov
xchg
xchg
divl
in
mov
add
mov
int
add
add
mov
push
xor
mov
mov
dec
lods
frstor
lahf
adc
mov
mov
mov
push
add
testl
and
jp
add
adc
mov
rolb
mov
xor
mov
mov
lock
lods
and
add
pop
hlt
cltd
inc
mov
pusha
add
mov
inc
add
and
mov
pusha
add
inc
add
mov
test
rolb
jns
mov
mov
or
loop
mov
dec
mov
add
mov
cmp
add
push
test
add
lods
mov
add
push
push
test
mov
xchg
jmp
pushl
add
mov
dec
xor
jnp
pop
push
inc
dec
sub
mov
repz
xor
mov
add
nop
add
jmp
add
inc
shrl
mov
jno
nop
add
popf
lahf
inc
xchg
push
test
outsl
and
sbb
mov
jno
push
aad
in
xchg
ss
ret
add
imul
mov
add
push
test
sbb
pop
jne
fs
stos
or
push
lahf
mov
add
mov
pop
jl
cmovl
or
iret
cmpsl
sbb
mov
enter
cwtl
sbb
cmc
and
mov
cltd
adc
scas
dec
push
and
mov
lods
pop
push
xor
mov
cld
sbb
add
mov
ret
xchg
lods
add
add
mov
sbb
mov
dec
filds
rcrl
fsts
ja
add
mov
xchg
lods
xchg
inc
add
xor
mov
divb
mov
mov
push
mov
rcl
insb
cltd
xchg
and
mov
lea
mov
mov
cmp
add
ja
shll
ds
ljmp
add
cmpsb
cs
mov
mov
dec
js
test
cmp
in
rorl
adc
add
mov
je
xchg
movsb
dec
push
add
mov
mov
pop
addb
pusha
add
mov
add
jp
addr16
and
pop
dec
stos
adc
add
sqrtps
sub
ljmp
mov
addl
clc
or
dec
aam
sub
daa
sub
mov
mov
or
test
jge
aaa
sub
hlt
push
dec
xor
mov
jne
in
cmp
and
sub
lock
lea
and
mov
mov
mov
add
mov
call
add
mov
ret
out
inc
add
mov
add
mov
adc
mov
mov
adc
mov
push
cmc
push
rolb
mov
jbe
adc
xor
mov
aam
addb
out
pushf
push
mov
mov
add
mov
notb
sti
fstl
inc
add
dec
daa
xchg
inc
add
mov
mov
adc
mov
sbb
add
add
mov
add
loop
mov
lret
sets
push
je
pushf
pushf
cltd
jne
test
mov
lret
xor
push
add
add
imul
add
adc
add
lds
mov
inc
std
pop
and
imul
inc
cmp
push
add
mov
dec
in
sbb
push
nop
add
pop
jne
pop
cwtl
fidivrl
leave
gs
jb
mov
add
xor
add
jnp
push
add
and
out
out
xor
add
jno
ja
xor
in
mov
and
mov
mov
add
cmpsl
dec
pop
sbb
jecxz
jb
mov
andl
mov
jno
lahf
sub
addb
xchg
mov
lds
movsl
cwtl
hlt
adc
mov
test
add
dec
stos
push
loop
mov
add
mov
xchg
xor
cli
xchg
flds
mov
dec
addb
push
push
xchg
in
lret
add
mov
mov
lods
into
daa
mov
into
or
clc
jp
sbb
add
cli
mov
movsb
sbb
in
add
aaa
or
add
cwtl
out
fistpl
sbb
addr16
cmp
xor
hlt
in
ja
and
in
aas
repz
mov
popa
pop
test
gs
mov
dec
sti
test
add
cmpsl
test
add
or
add
dec
hlt
cmpsl
push
inc
and
mov
xchg
mov
mov
fwait
inc
push
lret
mov
pop
and
roll
in
add
mov
adc
xchg
lret
mov
cli
inc
sub
addb
repz
sbb
push
add
add
aad
stos
out
cmp
mov
pop
daa
cli
pop
dec
movsl
out
pextrw
mov
mov
add
aas
cmp
add
jp
add
add
popf
xlat
movsl
lock
mov
mov
int3
into
nop
add
mov
cmp
sbb
movsb
jge
adc
mov
sahf
pop
xchg
cmp
mov
mov
leave
sbb
push
mov
cltd
imul
mov
and
in
cmp
in
jns
sub
cmp
xchg
imull
dec
jl
das
rolb
mov
test
scas
int3
aaa
jle
inc
ljmp
mov
inc
add
mov
ss
sbb
mov
sub
add
add
xlat
jne
push
mov
fisubs
mov
push
pop
cwtl
lret
xchg
daa
jbe
addr16
add
mov
dec
jge
mov
clc
inc
xor
enter
loop
mov
or
add
call
xor
sahf
and
add
in
and
mov
adc
mov
adc
jbe
adc
mov
decb
mov
mov
or
test
scas
insl
icebp
aad
xor
push
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
xor
mov
push
add
fwait
pop
mov
jno
out
push
inc
jns
sub
mov
or
xor
sub
add
pop
push
jae
and
jnp
and
mov
xchg
ds
mov
leave
pop
mov
repnz
subl
adc
add
ja
cmpsb
iret
mov
dec
jo
mov
cld
mov
add
add
lods
jmp
inc
add
add
movsl
scas
fcomps
mov
add
xchg
rolb
mov
fisttps
test
adc
adc
aaa
inc
add
or
add
add
jmp
int3
in
mov
adc
mov
out
xchg
mov
add
add
mov
xchg
insl
rolb
mov
mov
xor
mov
or
sbb
cmp
inc
sarl
inc
rolb
mov
mov
fwait
mov
frstor
leave
jno
xor
xor
add
lods
push
push
or
mov
jmp
js
jecxz
add
add
mov
add
ret
insb
add
add
adc
add
mov
movsl
xor
mov
pop
dec
loop
mov
push
aas
mov
cmp
rolb
mov
add
cmp
push
icebp
push
fwait
bound
mov
pusha
add
sahf
pop
sbbl
add
in
mov
mov
das
pop
repz
add
jle
xchg
pusha
add
lds
inc
std
xor
add
or
loop
mov
popa
in
mov
mov
sbb
xchg
outsl
testl
jecxz
cwtl
mov
or
push
cmp
jnp
and
adc
or
mov
inc
add
inc
cmc
ja
dec
sub
jbe
adc
jg
imul
data16
mov
add
mov
push
scas
jbe
jmp
jmp
push
ret
push
xchg
sbb
leave
mov
leave
rolb
mov
dec
lcall
fisttpl
inc
mull
rolb
xchg
ljmp
mov
jae
sahf
xchg
fcompl
add
dec
movsb
mov
into
pop
dec
icebp
ds
test
leave
outsl
add
inc
cmp
addb
dec
sbb
inc
pop
dec
scas
pop
hlt
mov
push
add
add
mov
cmp
add
xchg
mov
icebp
pop
test
add
mov
lahf
movsb
ljmp
fisttpl
loop
mov
data16
std
adc
mov
dec
in
xchg
fmuls
sub
jge
das
xor
dec
es
add
jecxz
addb
rolb
adc
test
cmp
cli
ret
lret
ds
pop
or
lret
mov
in
cmp
jge
gs
aam
pop
ljmp
add
add
cmpsl
push
into
test
add
pop
sqrtps
sub
sbb
sbb
jae
jb
mov
add
add
add
add
es
cmp
fiadds
add
test
cli
adc
adc
add
push
jbe
mov
enter
mov
mov
adc
rcll
pop
adc
add
mov
lret
cltd
dec
sbb
inc
inc
jge
lods
xsaveopt
adc
mov
notb
add
mov
mov
xchg
add
and
int
mov
daa
dec
outsl
jo,pn
mov
sbb
inc
push
hlt
add
mov
rolb
cmp
and
mov
mov
aad
addb
cmpsl
jae
in
add
add
sub
add
xchg
in
or
mov
arpl
mov
xor
pop
adc
in
xchg
mov
mov
clc
test
cmp
pop
sbb
loop
mov
jb
mov
ffreep
jmp
fstl
insb
lea
leave
jg
or
insl
jle
mov
lds
sub
stc
xchg
loope
imul
mov
mov
dec
cmp
adc
mov
sbb
jo
mov
pop
mov
ds
push
fdiv
loopne
mov
fmull
imul
sbb
cmc
mov
mov
es
inc
pop
xor
add
not
sti
out
out
cmp
decl
push
jp
add
mov
add
inc
add
rolb
mov
and
mov
in
sub
jge
insb
mov
add
mov
inc
imul
mov
cmp
mov
xor
or
scas
stc
pop
inc
mov
hlt
iret
js
sub
sub
iret
push
add
mov
lea
icebp
sahf
inc
push
sti
jnp
movsb
popf
dec
adc
pop
sbb
pusha
add
mov
mov
mov
loopne
mov
mov
cwtl
imul
fildl
pop
idivb
je
mov
sbb
pop
pop
and
add
mov
fists
add
mov
xor
push
sbb
xchg
and
add
push
mov
hlt
add
mov
mov
dec
cld
or
mov
xchg
xlat
sbb
mov
sahf
mov
add
add
or
jb
mov
add
add
fimuls
adc
mov
push
cld
adcl
bound
mov
mov
gs
sar
push
icebp
mov
xchg
js
icebp
faddp
mov
fsubrp
cmpl
pusha
add
add
mov
pop
jns
movsl
mov
add
add
adc
mov
mov
jle
pop
xchg
pusha
add
cwtl
add
push
xchg
movsb
addb
stos
cs
inc
add
add
repz
loope
aaa
addb
dec
decl
imul
enter
rolb
mov
cli
xchg
scas
xor
mov
test
sbb
xchg
mov
jb
mov
test
rorl
add
or
xchg
add
lcall
sbb
loope
xchg
mov
lods
push
sbb
mov
icebp
lods
aas
adc
mov
mov
mov
push
outsl
jecxz
iret
xchg
fildll
fs
inc
mov
stos
sbb
xlat
sub
pop
sarl
repnz
addr16
mov
mov
cld
adc
mov
push
mov
add
add
add
in
repnz
sub
pop
into
loop
mov
leave
sti
loope
and
and
add
mov
cmp
mov
pop
pushf
icebp
lock
pop
fmull
and
mov
mov
and
mov
push
dec
fdivs
mov
js
mov
fcoms
mov
or
adc
cli
subl
add
mov
movsl
lods
cmpsl
lods
push
rolb
or
add
xchg
rolb
mov
clc
cmp
mov
jecxz
mov
xchg
add
sti
add
mov
mov
pop
rol
add
jl
sub
jg
aam
inc
aam
fcomps
fidivrl
jne
and
mov
push
in
sub
int3
jnp
stc
loop
mov
adc
mov
rcr
cmc
imul
dec
mov
mov
mov
fxch
xchg
aad
sbb
pop
rolb
jg
cmp
add
leave
sub
add
add
sbb
mov
sti
hlt
fwait
inc
imul
xchg
mov
in
xor
out
mov
mov
add
xchg
add
mov
pop
aam
xchg
aad
sbb
adc
mov
add
xchg
and
rolb
xchg
dec
test
aam
add
mov
jbe
test
inc
jae
in
add
add
push
xor
fldl
add
es
mov
add
cmp
add
stos
xor
nop
add
dec
cmpsb
nop
add
add
cmp
cmp
test
add
aad
stos
stos
and
mov
addb
cwtl
add
add
add
in
stc
hlt
bound
mov
and
mov
inc
dec
push
adc
mov
rolb
mov
clc
sbb
lret
fcoms
add
mov
out
lahf
popa
mov
add
xor
addb
fldenv
mov
jp
das
sti
sub
and
and
outsl
icebp
cwtl
inc
push
add
adc
and
mov
jecxz
sbb
add
pop
xchg
add
add
addb
lds
out
jge
add
and
mov
add
adc
scas
pop
pop
addr16
jo
mov
jge
mov
jmp
fwait
mov
insb
xchg
jb
mov
nop
add
popf
nop
add
add
pop
stos
xchg
je
pop
sbb
mov
jo
mov
mov
add
je
vandps
es
in
cwtl
push
loop,pn
mov
lods
mov
ret
es
out
cmp
mov
adc
popa
mov
out
and
mov
mov
push
add
fs
sahf
addb
inc
xor
mov
mov
xchg
xorl
mov
movsb
xor
test
add
or
push
call
mov
jg
insl
jp
add
ret
jns
cmc
call
dec
aam
add
mov
rolb
mov
add
lods
jbe
loop
mov
add
mov
pop
push
addb
jmp
push
jl
push
sub
les
push
arpl
xchg
jecxz
inc
lahf
icebp
jbe
sbb
push
xchg
lds
xchg
xadd
mov
aaa
add
mov
fstpt
mov
mov
into
cli
dec
imul
enter
insb
inc
add
push
call
add
test
insl
mov
push
mov
mov
rolb
ret
push
mov
pop
pop
fistpl
add
mov
jp
or
add
ret
jp
out
repnz
push
mov
add
inc
add
aam
orl
cmp
mov
pop
dec
ja
into
jge
cmp
int3
outsl
mov
mov
dec
xchg
fs
adc
mov
xchg
xor
mov
add
mov
cmpsl
inc
sub
insl
cli
call
sbb
mov
movsb
jae
add
out
fs
jnp
push
ljmp
or
add
movsl
fimull
pop
test
add
pavgb
mov
push
mov
pop
lea
fisubrl
xchg
int3
pop
add
mov
popa
mov
sub
jne
or
mov
addb
sub
xor
dec
mov
iret
outsb
add
mov
add
jb
mov
cmp
push
rcll
pusha
add
sbb
sub
mov
rolb
fildl
add
sahf
push
add
pop
mov
sub
and
sti
sbb
je
xchg
mov
dec
push
add
pop
aad
cmp
stos
ret
ds
aas
out
call
in
jp
add
adc
mov
mov
add
add
mov
mov
addr16
add
dec
inc
sub
add
mov
cmp
push
pop
fnsave
ret
jbe
outsl
daa
inc
lds
mov
mov
jae
xchg
add
sbb
stos
stos
les
aas
fistpl
push
stos
mov
mov
fwait
lds
insb
insb
outsb
dec
jecxz
cwtl
adc
mov
and
cvtps2pd
pop
ljmp
or
add
mov
out
add
mov
or
cmp
xchg
push
in
pop
out
lods
std
std
jge
jae
pop
nop
add
mov
bound
mov
mov
and
stos
movsb
inc
stos
and
dec
xor
mov
aaa
push
mov
mov
inc
push
out
add
lret
xchg
add
les
or
mov
mov
add
mov
mov
mov
mov
add
stc
fcoml
add
gs
pop
das
ret
ja
add
xchg
sahf
xchg
push
iret
leave
fcmovnu
jp
xchg
iret
and
pop
sbb
test
out
jecxz
movsl
lret
fidivl
int
xchg
cmp
add
in
dec
addb
inc
mov
add
adc
testb
imul
mov
add
mov
sbb
mov
aam
add
add
mov
loope
add
lret
pushf
and
mov
in
dec
lret
push
bound
mov
xor
dec
mov
push
dec
fcmove
and
mov
pusha
add
out
push
jl
sahf
stos
enter
std
hlt
hlt
mov
mov
inc
and
leave
adc
adc
add
repz
xchg
mov
mov
mov
add
mov
add
addb
data16
lahf
gs
mov
adc
pusha
add
ja
sub
inc
mov
cmc
sbb
cmc
insl
scas
dec
add
dec
shrl
sub
mov
mov
add
mov
push
sbb
add
mov
pusha
add
adc
mov
int
mov
mov
es
repnz
mov
jne
add
mov
stos
jge
add
mov
repz
outsb
sub
add
or
cmp
add
in
outsl
xor
push
add
push
mov
mov
push
adc
movl
xchg
rolb
mov
rolb
mov
lock
mov
add
fiadds
das
rolb
popf
lcall
sub
pop
enter
mov
mov
and
xchg
outsb
mov
lds
pop
xchg
add
notl
lcall
mov
dec
add
mov
into
cmp
mov
sti
cmpsl
fcomps
scas
adc
shrl
out
dec
enter
fwait
fwait
push
sub
mov
add
pop
mov
push
add
mov
rolb
mov
mov
loop
mov
cld
adc
add
mov
or
or
dec
roll
into
lea
andl
add
add
mov
pop
int
lods
ret
call
jae
and
mov
pop
scas
push
xchg
sbb
add
mov
add
pop
lea
dec
jne
fs
fnclex
add
sub
mov
jmp
rolb
mov
cmp
mov
add
mov
add
out
push
or
mov
clc
or
cld
jecxz
add
add
outsb
jle
and
mov
add
mov
add
add
sbb
int3
addb
add
mov
out
adc
ds
in
add
data16
jmp
rolb
push
jle
sbb
das
rolb
pop
mov
add
movsl
mov
mov
sub
pop
popf
ljmp
imul
popa
jo
mov
mov
adc
mov
add
mov
ret
ret
repnz
fisttpll
in
add
leave
js
xchg
lds
mov
mov
pop
sbb
dec
dec
les
fcmovnbe
push
add
mov
pop
sbb
shl
add
sub
dec
pusha
add
mov
rcrl
add
push
push
lods
test
mov
mov
inc
loope
movsl
insw
inc
sti
xor
fsubrl
xchg
aaa
shr
add
jae
cmp
pop
jle
stc
dec
jl
sbb
mov
sbb
add
mov
mov
push
add
call
dec
mov
leave
sub
cltd
cmpsl
jle
into
mov
pop
and
mov
xorl
in
in
jnp
xchg
add
dec
pop
pop
cmpsl
fbstp
jle
jl
js
fldt
add
out
lea
arpl
lea
add
insb
xor
add
add
cli
mulb
push
add
scas
cmpsb
inc
xchg
popf
and
cmp
add
movsb
lock
cmp
pop
jb
mov
ret
adc
push
push
xor
lret
inc
lods
mov
out
mov
mov
fst
nop
add
and
and
mov
add
arpl
mov
inc
test
or
pcmpeqd
mov
cmpsl
pop
daa
lds
mov
pop
xchg
mov
lcall
bound
mov
mov
clc
imul
mov
leave
mov
add
in
inc
rolb
mov
dec
add
mov
cs
push
xor
mov
add
add
and
mov
push
cmpsl
sub
jle
sbb
std
aam
arpl
sbb
add
mov
xchg
push
pushf
outsl
jbe
or
mov
test
add
cltd
sbb
push
add
add
sub
and
and
sbb
sbb
push
add
mov
ret
jns
mov
mov
mov
push
add
sbb
std
xlat
xor
mov
mov
or
cld
outsb
push
add
add
mov
add
mov
add
lds
cmp
insl
icebp
imul
add
repz
and
add
inc
add
add
addb
adc
add
popf
cwtl
mov
in
in
incl
sbb
test
pushf
call
js
add
ja
cltd
inc
cmp
sti
divl
add
lds
and
add
add
push
add
in
in
pop
mov
into
and
cmpsl
sarl
loopne
mov
add
mov
and
mov
mov
loope
daa
pop
mov
and
fnstsw
in
or
mov
cmp
rolb
mov
inc
mov
mov
add
add
insl
rolb
rorl
lsl
add
daa
xlat
test
adc
mov
add
mov
cmpsb
xchg
add
adc
mov
lds
dec
nop
add
outsb
sbb
mov
add
mov
add
mov
call
out
push
loopne
mov
call
add
dec
stc
dec
movsl
sbb
aam
push
jmp
mov
mov
lods
push
or
lds
jp
mov
cmp
scas
cltd
xchg
mov
ss
push
push
pop
jae
jne
jne
int
icebp
movsl
imul
shld
add
push
add
or
jge
or
add
add
dec
testl
push
or
je
and
mov
mov
add
or
scas
out
xlat
fwait
push
add
jmp
stc
xor
scas
call
mov
int
leave
dec
adc
mov
push
mov
cmp
mov
aas
mov
mov
add
dec
adc
push
lret
jmp
xchg
or
and
mov
add
shll
fiadds
aam
jge
add
imul
push
pop
xor
faddl
add
xchg
xor
adc
mov
shrl
mov
add
inc
add
push
mov
cmc
mov
cmp
add
mov
mov
lds
bound
mov
mov
xchg
mov
xchg
jmp
xchg
rolb
mov
mov
hlt
sbb
cmp
xor
popf
rcll
xor
mov
add
mov
add
add
mull
jo
mov
or
fnstenv
sahf
lahf
aam
add
mov
pop
mov
mov
aam
push
pop
push
fmull
pushf
orl
xor
mov
add
sahf
js
push
loop
mov
add
inc
clc
filds
mov
mov
and
repnz
mov
inc
mov
add
mull
add
mov
pop
aas
push
movsl
mov
idivb
adc
jnp
push
cmpsl
movl
sti
cwtl
movsl
pushf
or
push
cmp
mov
bound
mov
jecxz
leave
jnp
out
add
inc
push
xchg
int3
dec
push
mov
dec
addb
idivl
push
sbb
xchg
jb
mov
xchg
mov
cmp
push
mov
fimull
add
addr16
or
add
mov
jl
or
jbe
inc
out
sub
or
mov
out
ds
add
mov
lret
insl
jle
popa
xchg
mov
mov
pop
push
add
das
iret
inc
fs
loope
add
notl
mov
push
add
mov
or
add
mov
xchg
pop
addb
fsubrs
testb
sbb
mov
sbb
or
ret
in
inc
int3
in
iret
pop
xchg
add
mov
mov
pop
add
mov
mov
mov
add
cmp
les
mov
mov
mov
jnp
jg
pop
cmp
xchg
fildl
mov
sub
aam
sbb
add
cli
dec
aad
in
dec
repnz
jnp
push
mov
cli
push
dec
je
add
add
add
cmpsb
push
xchg
add
jg
scas
arpl
cmp
enter
dec
mov
add
cmp
push
add
lds
insl
insb
jl
add
mov
mov
xchg
sbb
mov
ss
add
fists
pop
addb
fs
cmpsb
enter
mov
mov
roll
add
adc
adc
rolb
mov
stos
dec
rolb
mov
aas
in
jg
add
inc
add
mov
mov
mov
int3
fstpt
cmpsb
insb
and
outsb
mov
mov
mov
mov
mov
mov
mov
sbb
push
outsl
popa
sbb
add
sub
cmp
mov
std
cwtl
in
jae
pushf
aas
mov
cwtl
jns
in
adc
mov
add
loop
mov
enter
mov
pop
mov
jl
ret
lahf
jge
outsl
test
add
xchg
daa
nop
add
add
cmpsl
jo
mov
pop
sub
add
cs
cltd
testb
rolb
mov
push
xchg
xchg
mov
inc
add
cwtl
or
test
movsl
int3
pop
fsts
stos
rolb
mov
or
cmp
imul
add
cwtl
clc
daa
lods
sub
sub
push
dec
mov
push
jg
cltd
mov
scas
pusha
add
mov
xchg
mov
xorl
mov
add
lcall
shll
incl
lds
add
or
sub
test
adc
add
data16
fwait
sbb
sahf
dec
push
mov
mov
xor
mov
pop
cmp
cld
bound
mov
mov
mov
add
adc
inc
xchg
outsb
fisubrs
mov
iret
dec
fnstcw
push
mov
mov
xor
mov
lret
or
jne
add
shrl
mov
lret
cmp
push
mov
cmp
xor
loop
mov
inc
rolb
mov
jle
adc
mov
mov
dec
sbb
jle
jg
add
add
mov
outsb
sub
mov
pop
mov
mov
inc
hlt
in
aam
shl
lret
pop
icebp
jo
mov
nop
add
addr16
add
push
sbb
mov
mov
mov
mov
adc
sbb
add
mov
stos
push
in
mov
push
pop
push
mov
mov
cmp
jge
daa
dec
mov
movsl
test
insb
xchg
mov
addb
lcall
xchg
add
stos
gs
fcmovnb
lods
int3
pop
sbb
mov
repnz
scas
mov
add
outsl
fidivrl
xchg
mov
in
movsb
sub
mov
add
inc
lea
add
add
add
xchg
dec
aad
add
add
mov
and
mov
add
xor
mov
sti
fstl
test
stos
movsl
dec
mov
mov
les
dec
mov
mov
dec
mov
out
cmp
push
add
sub
lahf
xchg
sahf
dec
aas
ret
mov
adc
mov
xor
jmp
jmp
mov
lahf
pop
in
sarl
jmp
les
mov
sub
into
loopne
mov
lods
pop
int3
mov
aaa
sahf
mov
cmpsl
sbb
add
adc
scas
fstpt
sub
or
scas
mov
and
xchg
xor
mov
imul
xor
clc
in
lret
mov
adc
mov
mov
imul
cmp
test
add
mov
loop
mov
cmp
roll
mov
clc
aad
lahf
in
xchg
shll
imul
mov
inc
cmp
inc
mov
jbe
xchg
jecxz
daa
gs
out
aaa
xor
dec
dec
xchg
pop
stos
push
dec
sbb
add
mov
lcall
add
jne
jmp
aam
pop
cld
mov
dec
icebp
lcall
inc
mov
add
and
mov
aad
adc
mov
lcall
mov
sarl
jmp
pushl
xchg
inc
sti
push
add
jns
mov
add
and
mov
inc
add
movsb
rolb
mov
push
fwait
pushf
adc
mov
call
add
bound
mov
inc
rolb
mov
mov
push
jbe
test
or
lcall
addb
jb
mov
add
mov
mov
dec
dec
in
inc
fsubrl
xchg
imul
rolb
mov
push
stos
dec
enter
nop
add
fildll
xlat
in
insl
mov
mov
dec
push
inc
jle
call
mov
dec
jno
sti
mov
mov
mov
shrl
fmul
inc
daa
pop
nop
add
pop
pusha
add
ss
mov
ret
push
scas
clc
or
jle
aaa
mov
call
lret
push
sbb
xchg
push
loop
mov
loope
fcmovu
xchg
test
add
push
addr16
aam
repnz
fiaddl
adc
mov
add
insl
cmpl
ds
dec
lcall
sub
mov
add
and
xor
mov
hlt
pinsrw
popf
out
rcr
xor
mov
mov
add
push
lock
dec
mov
insb
cmpsl
xor
mov
mov
add
repnz
or
jge
int
inc
add
xchg
popf
pop
loope
xchg
sahf
jae
std
pop
cmp
dec
roll
into
jecxz
xchg
xor
mov
popa
pusha
add
inc
add
enter
add
push
add
mov
test
popf
shll
clc
mov
outsl
dec
push
cltd
aam
add
mov
icebp
mov
add
rcll
jne
and
mov
mov
push
jecxz
mov
call
mov
lds
add
pop
jbe
mov
rcll
adc
das
push
add
mov
flds
mov
test
dec
rolb
mov
mov
outsb
iret
and
mov
xchg
push
outsb
and
mov
push
add
add
fmulp
jecxz
xor
shrl
inc
and
and
add
leave
jge
mov
mov
add
add
insl
push
add
mov
mov
fs
cbtw
fs
xor
mov
fsub
fdivrl
mov
mov
fbld
cs
nop
add
popa
mov
addr16
cmpsb
dec
push
pop
shrd
mov
gs
add
mov
add
mov
xchg
out
push
xor
dec
push
inc
daa
mov
add
call
inc
add
add
cmpsl
dec
iret
mov
mov
xchg
xor
test
lock
add
cmc
jne
mov
jl
adc
add
xchg
out
or
es
push
jbe
jb
mov
add
lea
fcomps
leave
insb
inc
add
out
insl
pop
or
repnz
mov
addb
fdivs
push
add
push
add
cmp
add
rcll
cmp
add
rolb
mov
movsl
mov
jbe
dec
mov
cmp
and
iret
jno
insl
pushf
cmp
xor
mov
add
pusha
add
jae
pop
das
jl,pt
dec
mov
insb
lods
nop
add
loope
fisttps
ret
mov
clc
lods
sti
imul
sub
add
adc
jp
push
jmp
repnz
jnp
jbe
cmp
inc
push
dec
int
add
add
mov
mov
adc
mov
clc
data16
test
je
add
ljmp
add
xchg
and
cmp
or
iret
jle
or
addb
dec
mov
mov
out
cwtl
dec
add
sbb
adc
mov
sub
je
enter
mov
dec
addr16
hlt
fisubs
xchg
lock
sbb
pop
xor
fsubrs
lahf
test
adc
mov
adc
rolb
mov
into
rcrl
dec
stos
fs
sahf
insl
mov
jl
inc
or
pusha
add
popl
rolb
mov
dec
data16
mov
xor
mov
iret
clc
jno
jo
mov
and
scas
jp
and
mov
cwtl
or
ja
iret
xorl
cmp
fisttps
mov
add
add
pop
cmp
repnz
mov
pop
cld
add
mov
int
cmp
adc
popf
inc
pushf
dec
inc
add
imul
cmp
sbb
add
enter
adc
fistps
fidivrs
in
and
jl
lock
into
sbb
adc
lret
cmpl
dec
inc
insl
or
leave
pop
push
add
and
mov
inc
or
add
cmp
addr16
fidivrs
loopne
mov
loopne
mov
rolb
mov
test
pop
jle
lods
loopne
mov
movsl
xlat
addb
or
adc
or
scas
fwait
mov
add
fnstenv
stos
loope
repnz
call
push
xchg
add
mov
dec
inc
cs
fldt
mov
mov
cmpsl
cmp
gs
frstor
xchg
notl
add
mov
push
pop
scas
push
jg
addb
rcll
add
mov
mov
pop
outsb
repnz
and
dec
inc
add
add
pop
fcos
fiaddl
inc
js
push
pop
add
mov
mov
add
sbb
jecxz
out
dec
movsl
jle
push
or
add
insb
sub
mov
loopne
mov
cmp
fs
test
cmp
cmp
mov
mov
leave
test
dec
faddp
add
mov
and
loopne
mov
push
mov
dec
push
stc
jl
mov
pop
add
mov
rolb
mov
sub
add
mov
and
dec
mov
and
mov
mov
dec
fsts
mov
add
pop
mov
jb
mov
cmpsb
hlt
mov
ret
inc
call
out
inc
add
mov
pop
mov
jge
xchg
fcom
out
push
and
repz
xor
add
jmp
sbb
mov
jno
pop
loopne
mov
cmpsl
add
je
cld
stos
fisubrl
jnp
add
add
pushf
push
call
enter
jo
mov
ljmp
mov
mov
dec
mov
stos
rorl
pop
loop
mov
or
nop
add
insb
sub
inc
add
add
mov
mov
cmp
jb
mov
jle
push
mov
mov
mov
xchg
std
out
out
mov
mov
int3
sti
in
hlt
xor
add
popl
sub
jbe
mov
dec
jo
mov
adc
rolb
xor
mov
and
jp
push
lahf
xlat
int3
add
loop,pn
mov
enter
add
mov
sbb
dec
and
addb
mov
cmpsb
rolb
call
adc
mov
mov
leave
aad
sahf
lods
into
and
nop
add
add
mov
imul
ss
pop
or
and
xchg
add
add
mov
repz
test
or
fcom
adc
add
jp
aaa
out
out
nop
add
aaa
or
push
fisubs
push
jb
mov
das
aad
pop
sbb
aam
clc
mov
nop
add
jb
mov
not
add
mov
adc
or
jbe
test
jl
dec
and
mov
aas
movsl
sub
lds
add
outsl
mov
jb
mov
xor
mov
mov
mov
cmp
adc
mov
dec
dec
xchg
inc
outsb
sub
add
jp
xor
mov
pop
xor
jmp
sti
mov
or
add
jbe
add
mov
dec
cli
push
lea
scas
xchg
jg
jl
adc
mov
fstl
add
adc
mov
int
mov
loop
mov
add
xchg
xchg
stos
jp
dec
movsb
scas
mov
andl
add
cmp
ret
shll
adc
pop
rolb
mov
mov
ficoml
dec
add
add
mov
dec
jns
mov
xchg
aaa
mov
wrmsr
add
xchg
sti
imul
pop
iret
add
add
add
movsl
xchg
add
lods
push
cli
aaa
fs
incl
add
jae
adc
mov
mov
mov
bound
mov
add
mov
and
mov
mov
xor
mov
gs
mov
mov
jl
dec
and
mov
sti
inc
pop
pusha
add
add
mov
fwait
int
sub
and
push
xor
mov
add
xchg
xor
mov
pop
mov
push
xchg
fwait
mov
xchg
mov
pushf
and
mov
xchg
push
jnp
xor
mov
add
pop
dec
push
inc
pop
mov
movsb
adc
mov
faddl
add
xchg
int
mov
adc
mov
dec
mov
fsubl
mov
and
jp
sbb
jns
cmc
test
add
xor
mov
repnz
pop
mov
in
add
mov
std
stos
test
push
rorl
cmp
lock
mov
add
rolb
dec
ss
push
inc
hlt
hlt
and
mov
jmp
pop
and
inc
out
and
andnps
notb
mov
mov
add
movsl
xor
mov
add
call
pop
jle
test
rolb
mov
mov
popf
dec
mov
dec
mov
mov
aas
ljmp
lret
mov
mov
mov
dec
mov
and
mov
add
xor
mov
in
inc
pop
pop
rcr
lods
ret
cmp
rcl
inc
add
add
ja
add
popa
mov
add
lret
xchg
bound
mov
movsb
es
and
mov
mov
pop
andl
mov
xorl
add
jmp
inc
add
cmpsb
sub
add
sub
stc
and
xchg
arpl
add
add
mov
add
and
nop
add
ljmp
xor
mov
mov
xchg
adc
rolb
xchg
fwait
clc
testl
push
sub
sub
lret
sub
je
mov
int
mov
jmp
sti
mov
data16
rolb
mov
arpl
xchg
push
jbe
addb
pop
fcomps
nop
add
add
out
repz
add
push
mov
mov
xchg
loop
mov
adc
adc
mov
addb
cmp
ret
aas
int
push
add
repnz
add
cmp
aam
leave
adc
pop
mov
hlt
push
add
push
add
arpl
inc
fadds
add
rep
lcall
or
fidivs
jo
mov
cwtl
or
inc
add
mov
xor
mov
pop
fucomip
and
mov
bound
mov
cld
test
push
sub
movsl
dec
mov
cmp
pop
jg
push
add
and
popf
arpl
ficompl
jb
mov
jbe
imul
mov
and
mov
test
or
test
test
rolb
in
push
or
mov
xchg
add
jle
inc
mov
mov
cld
cli
aam
add
aam
sbb
add
call
out
mov
dec
push
jb
mov
sbbl
cmc
add
in
shll
add
xchg
in
jb
mov
jp
push
lret
cmpsl
sub
mov
mov
call
mov
or
imul
inc
outsl
outsb
aam
pop
cmp
push
dec
add
mov
inc
add
inc
aaa
or
adc
inc
or
sbb
out
mov
mov
xchg
out
cmc
in
pushf
adc
mov
add
aaa
jmp
das
sbb
nop
add
jbe
out
and
mov
jo
mov
sahf
xor
mov
add
xchg
fs
fists
dec
out
push
ficoml
imul
add
mov
dec
out
dec
cmp
aaa
faddp
mov
dec
mov
test
add
lret
push
cwtl
sub
mov
in
iret
push
mov
jmp
mov
add
xchg
rcrl
rolb
mov
adc
cmp
mov
push
xchg
enter
jge
popa
cli
cli
sbb
mov
int3
fwait
out
and
mov
ror
xchg
push
xchg
xchg
adc
fnstsw
and
add
rcll
push
lret
call
lods
pop
imul
mov
stos
les
ret
lods
jecxz
add
mov
mov
pop
pusha
add
dec
xor
add
adc
mov
add
lret
repz
ret
sub
out
std
fs
mov
mov
mov
mov
leave
xchg
inc
in
addb
push
cmpsl
mov
pushf
xchg
and
les
mov
imul
pushf
fldcw
pop
push
in
lds
adc
add
push
aaa
jle
clc
and
jne
mov
mov
mov
mov
addb
rolb
mov
mov
stc
mov
imul
mov
lahf
dec
lret
ljmp
or
sahf
push
add
inc
into
xchg
call
scas
sbb
test
sarl
jecxz
xchg
add
sbb
mov
add
pushf
adc
cmp
add
xchg
repnz
mov
rolb
mov
cmp
andl
stos
lods
mov
mov
idivb
popf
add
mov
push
xor
cltd
xchg
aaa
sbb
push
push
out
xchg
add
fisubs
sub
or
and
rcrl
or
mov
add
dec
repz
pop
xchg
xor
mov
xor
push
mov
xor
cmpsl
dec
call
mov
mov
repnz
in
jmp
push
clc
or
cmpsl
mov
icebp
cwtl
or
in
pop
push
imul
mov
negl
xchg
cmpsb
jmp
add
dec
orl
loop
mov
dec
mov
rolb
mov
popf
sbb
pusha
add
ret
sub
cmp
add
fistps
out
push
bound
mov
xchg
pop
xchg
add
or
sub
imul
repnz
push
jnp
cmp
mov
mov
mov
sub
push
mov
jns
ja
insb
scas
dec
jge
mov
add
test
addr16
icebp
jo
mov
add
push
add
mov
mov
rcll
out
addr16
cmpsl
mov
iret
test
lret
imul
mov
ficompl
filds
mov
or
mov
aas
lret
cmp
negb
mov
inc
xchg
pop
lock
jmp
dec
mov
test
rolb
addb
mov
icebp
iret
aaa
and
sbb
das
loope
sbb
cmp
loop
mov
or
and
mov
lret
outsl
push
xchg
arpl
lahf
mov
sbb
sub
jmp
popf
test
lret
sbb
repz
pop
das
mov
mov
and
mov
cli
clc
push
xchg
mov
xorl
or
sub
lods
mov
mov
push
add
mov
add
mov
jmp
sub
add
cmp
add
mov
js
ljmp
shr
sub
mov
lds
subl
add
mov
mov
call
jns
fsubp
sbb
mov
orl
fistpl
int3
inc
pop
add
mov
add
aam
fsts
mov
add
addb
mov
mov
mov
divb
jno
xor
mov
inc
push
xchg
sahf
mov
ret
sub
and
movsl
iret
stc
stos
or
mov
cmp
shll
xchg
add
notb
mov
xrelease
jo
mov
sbb
add
sub
test
xor
xchg
add
int3
jb
mov
aaa
fs
add
push
addb
jle
add
mov
rolb
sub
xchg
cmp
mov
inc
add
mov
mov
sti
jns
ss
cs
iret
cmpsl
inc
out
push
add
repnz
jle
lea
mov
push
add
sub
dec
jp
jge
scas
into
and
cmpsl
out
out
add
adc
push
imul
jmp
dec
jmp
xor
int
data16
add
mov
inc
and
aaa
xchg
hlt
and
jge
adc
cmp
mov
int
mov
mov
adc
aas
ds
stos
mov
in
mov
rolb
mov
sbb
add
cmc
xor
mov
mov
lods
mov
jp
sub
int3
repz
jno
cwtl
fsubrp
pop
push
adc
dec
xchg
sahf
jo
mov
add
inc
xchg
fimull
addb
popf
nop
add
jg
mov
mov
or
mov
mov
lcall
add
jb
mov
mov
jb
mov
cmpsl
xchg
push
scas
push
adc
adc
cmp
mov
and
add
xor
add
mov
or
sbb
and
jno
je
dec
pop
fwait
push
enter
out
add
adc
fwait
lods
cmc
repnz
divl
test
add
jbe
mov
add
jmp
jno
add
mov
add
xor
mov
or
test
int
mov
fs
xchg
fidivrl
js
lret
adc
mov
mov
in
or
push
dec
push
repz
popf
jnp
or
add
out
fimull
or
pop
les
push
add
mov
clc
pop
xchg
into
fwait
jns
add
jno
adc
mov
in
mov
add
xor
jne
push
xor
sub
addb
ret
mov
fsubrl
mov
pop
push
or
shrl
roll
std
or
in
sbb
mov
jecxz
jns
add
and
mov
add
and
mov
add
jecxz
loop
mov
jb
mov
stos
shll
fnsave
test
fsubrp
scas
std
scas
mov
mov
jp
xchg
hlt
insl
cmp
stc
cmpsl
inc
loop
mov
mov
mov
lods
clc
mov
add
mov
jp
pop
int
mov
mov
lret
add
imul
mov
into
les
mov
push
cld
pop
lods
jp
add
addb
stc
icebp
gs
add
rolb
mov
push
push
mov
push
cmpsl
out
addr16
daa
pop
fmuls
lret
lret
pop
rolb
mov
sub
mov
ficoml
cmp
movsl
fdivl
add
xor
mov
ds
cmc
mov
scas
ja
jle
or
dec
cld
stc
push
sub
inc
push
ja
mov
add
and
add
mov
mov
addr16
repz
sahf
int
add
xchg
push
mov
mov
mov
add
mov
imul
sub
mov
adc
mov
jmp
add
add
mov
loope
pop
addb
cld
fdivrl
add
mov
inc
add
inc
cmp
sbb
lcallw
bound
mov
xchg
mov
sub
add
sub
movsb
orl
cld
add
pop
repz
fcompl
and
mov
mov
mov
xchg
add
adc
mov
add
subl
xchg
stc
add
mov
sbb
jle
mov
dec
js
sub
mov
mov
add
mov
xchg
pop
or
mov
enter
xor
fs
sarl
or
lock
or
mov
hlt
arpl
mov
add
ficomps
dec
adc
mov
dec
xchg
fistpl
addb
jle
mulb
add
mov
sub
ja
cmc
in
mov
xor
and
mov
lock
add
jne
add
mov
add
push
push
jmp
mov
mov
lcall
dec
iret
sub
mov
add
mov
mov
inc
leave
xchg
inc
stc
mov
scas
jecxz
inc
ds
add
mov
or
cmp
push
push
add
pop
movsb
dec
cmp
xor
and
mov
cld
in
pop
aad
and
mov
adc
out
adc
add
fldcw
xchg
sbb
add
notb
leave
cmc
push
loopne
mov
add
cmp
mov
jg
add
xor
mov
fiaddl
add
cmc
in
sub
inc
add
iret
pop
mov
incb
fdivr
mov
add
lret
mov
jbe
sbb
hlt
jmp
outsb
pop
xchg
or
jg
push
add
mov
lcall
fistpll
mov
jns
das
lcall
test
mov
and
mov
add
add
pop
and
mov
adc
mov
data16
xchg
sub
xchg
popa
fiadds
mov
mov
push
popa
ret
clc
shrl
dec
dec
push
add
dec
cli
test
add
and
nop
add
xor
ja
pop
sti
es
jg
rorl
orl
loope
add
mov
mov
sbb
rolb
jns
loopne
mov
add
add
add
pop
cmpsb
adc
int3
or
mov
lahf
pop
jae
inc
adc
idivl
jmp
test
cmp
add
mov
jne
sahf
jle
add
add
push
popa
mov
mov
in
mov
add
and
add
aaa
sub
adc
mov
mov
push
mov
je
js
insb
adc
mov
add
flds
mov
orl
add
cmp
add
inc
add
rolb
mov
dec
push
add
jmp
push
dec
sbb
mov
xchg
add
add
push
outsb
dec
add
fidivs
push
jmp
cmp
lea
pop
dec
xor
mov
test
add
mov
out
cwtl
cmp
imul
daa
pop
inc
add
xchg
mov
enter
aas
mov
mov
sub
clc
cmp
mov
sub
addb
push
ret
pop
add
movsb
outsb
insl
mov
xor
mov
add
push
jno
push
add
mov
and
inc
jmp
add
ljmp
mov
dec
jb
mov
pop
dec
in
push
add
jge
addb
and
mov
mov
imul
jge
push
add
enter
push
add
hlt
xchg
lds
adc
mov
add
mov
sub
add
xor
jecxz
xchg
call
repnz
mov
add
or
mov
cmpsl
xchg
add
pop
rolb
mov
inc
rolb
call
xchg
mov
mov
enter
sub
stos
inc
nop
add
mov
imul
add
ljmp
pop
out
testl
cmp
test
mov
mov
psllq
aas
fmuls
orl
into
insb
sbb
insl
inc
xor
addb
cmp
jne
or
add
mov
cmp
repnz
add
mov
mov
fists
mov
add
add
mov
jmp
cmc
mov
add
add
mov
dec
fidivrs
xchg
insl
arpl
stos
addb
pushf
inc
add
out
icebp
cmp
mov
shll
pop
xchg
enter
popa
and
mov
dec
or
add
pop
dec
pop
popf
scas
rolb
mov
jno
mov
mov
mov
rcl
sbb
mov
mov
cmpsb
ljmp
daa
inc
imul
rolb
mov
add
rolb
mov
mov
pop
fidivrl
int3
dec
xor
mov
adc
inc
add
orl
test
popf
sub
add
into
fmulp
addr16
sbb
cli
xchg
cwtl
inc
popf
inc
mov
and
mov
cmp
add
xor
mov
jmp
insb
hlt
cmp
mov
aaa
sbb
xor
inc
xlat
daa
and
mov
inc
add
add
mov
jns
sahf
inc
lock
das
ja
mov
mov
add
and
push
inc
add
cld
push
mov
cmp
mov
dec
dec
dec
les
mov
jge
xor
mov
lret
mov
icebp
sbb
ficoms
add
in
sahf
mov
cli
adc
mov
add
mov
pop
out
pop
inc
add
mov
add
inc
cmp
mov
mov
mov
cmp
arpl
lret
and
mov
into
shll
lods
add
mov
xor
mov
adc
add
add
ja
mov
ret
mov
jg
lahf
outsl
sarl
add
sub
and
mov
inc
adc
mov
push
fisubrs
pop
mov
lret
sti
test
push
add
mov
movsb
pop
push
cmpsl
pop
xchg
addb
psubusw
cmp
mov
push
int
cmp
xor
dec
mov
mov
cmp
add
add
mov
mov
loope
rolb
cmp
lds
js
add
push
add
out
mov
add
sbb
add
add
adc
mov
push
add
mov
loopne
mov
pusha
add
add
mov
aas
push
add
pop
scas
inc
or
mov
mov
mov
add
inc
add
mov
loop
mov
es
daa
stos
rolb
mov
add
nop
add
inc
add
inc
adc
out
test
lcall
mov
add
push
lds
sbb
test
imul
jl
sahf
mov
outsb
insl
stos
dec
imul
popa
or
rolb
xor
mov
nop
add
aam
push
xor
add
push
mov
push
cli
mov
imul
add
push
dec
pop
js
sbb
add
mov
inc
mov
ficompl
mov
pushf
scas
jnp
mov
mov
mov
nop
add
mov
movsl
cwtl
rolb
mov
clc
mov
push
add
sbb
push
jg
inc
pop
imul
mov
push
cmp
add
mov
sbb
adc
add
cmp
or
mov
sti
cmp
push
inc
cmp
fildll
scas
scas
into
xor
movsb
mov
mov
ret
pushf
lcall
aaa
xchg
daa
mov
xlat
jb
mov
ds
bound
mov
jge
pop
add
mov
add
push
sub
add
fwait
test
xchg
add
xchg
into
push
outsb
xchg
lods
push
add
mov
mov
xlat
stos
popl
xchg
mov
mov
jecxz
xchg
mov
sub
in
xchg
in
add
add
out
jmp
push
in
cli
arpl
xor
mov
cmp
mov
sbb
inc
and
bound
mov
in
add
add
or
add
mov
jl
icebp
inc
addb
mov
addb
mov
fwait
mov
add
push
test
mov
ret
pop
addb
shll
add
mov
sarl
shrl
repz
out
mov
add
stos
les
mov
push
add
xor
dec
roll
xlat
lds
pushf
sub
push
inc
add
jge
cmpsl
add
lcall
sbb
add
mov
test
xchg
add
stos
inc
add
popa
pop
ja
enter
mov
mov
dec
ja
cmp
add
les
and
mov
push
or
mov
add
add
push
xor
arpl
add
ret
out
fistps
xchg
dec
lret
in
movsb
adc
mov
lcall
outsb
addb
in
lods
add
push
dec
into
pop
mov
out
add
jg
cld
inc
dec
xor
repnz
add
cmp
mov
mov
mov
add
mov
lea
stos
pop
xchg
adc
out
xor
jae
addr16
mov
mov
test
dec
cli
int
pushf
or
js
xorl
push
test
dec
hlt
and
cmc
mov
pop
mov
mov
add
mov
xchg
int3
xor
mov
add
out
cmp
fimuls
lahf
cltd
das
and
mov
sub
mov
or
sbb
jbe
sub
mov
add
ss
add
mov
add
pop
movsl
call
mov
add
bound
mov
dec
movsl
push
and
ss
dec
pop
test
inc
jecxz
xchg
add
mov
repnz
loopne
mov
fwait
clc
jp
and
lret
jle
adc
cli
sti
in
idivl
add
insl
or
insl
imul
add
aam
stc
mov
insl
xchg
fbstp
out
addb
lds
xor
out
add
in
add
out
addb
fdivrp
jo
mov
int
fstl
fildll
jp,pn
cld
sbb
add
mov
pop
push
jns
add
add
mov
push
xchg
gs
sbb
ss
and
sarl
sbb
pop
in
std
jmp
fstps
inc
loopne
mov
test
leave
push
sbb
fnstcw
inc
add
dec
mov
add
out
fmull
lock
jmp
mov
dec
mov
addb
dec
mov
dec
xor
sbb
ret
xchg
add
call
pop
movsl
cmp
inc
dec
sbb
add
adc
dec
lahf
rolb
mov
or
pand
jg
adc
mov
leave
jnp
push
outsb
repz
xchg
add
add
mov
jle
and
mov
dec
outsl
fisubs
mov
rcrl
pop
lock
jecxz
push
addb
or
pop
rolb
mov
mov
mov
and
mov
inc
add
mov
dec
inc
xchg
jmp
xchg
stos
jno
test
rcll
add
iret
jmp
ljmp
mov
xchg
dec
push
cmc
cmc
dec
rolb
mov
adc
mov
decl
repz
inc
dec
cmp
mov
sub
and
fwait
movsb
push
clc
flds
shl
add
cmp
mov
cmp
sub
cmp
in
in
and
mov
ret
jp
cli
sbb
cmc
or
xchg
or
lock
mov
jge
sahf
mov
enter
lds
mov
fwait
sbb
insl
out
mov
ljmp
lds
ss
mov
add
inc
pop
xchg
gs
stos
sbb
mov
out
mov
cld
repz
es
inc
arpl
jbe
mov
mov
movsb
adc
mov
cmp
popf
jge
jns
into
xor
mov
push
inc
and
movsb
cmc
mov
fsubs
mov
leave
pusha
add
aad
add
faddl
add
ret
and
mov
add
mov
mov
xchg
out
test
mov
filds
xchg
or
jle
stos
iret
add
mov
ret
push
xchg
repnz
and
inc
jmp
add
jns
addr16
add
fbld
jae
or
jb
mov
mov
pop
lea
or
sub
mov
test
aas
fld1
mov
mov
mov
mov
mov
ds
ja
add
and
add
leave
cmc
cmpsb
js
pop
and
mov
mov
push
sbb
mov
mov
rcll
leave
sbb
je
add
mov
cmp
add
dec
insl
lods
add
mov
push
outsl
sub
jbe
movsb
js
cld
std
leave
addb
sbb
mov
inc
add
popa
xchg
add
xor
lods
mov
mov
cwtl
sbb
add
outsb
pop
mov
add
mov
loop
mov
inc
cmp
cld
arpl
popf
adc
mov
mov
enter
and
mov
push
addb
push
and
add
cmp
mov
add
test
pop
mov
rolb
mov
out
and
fildl
pusha
add
pop
imul
rcl
add
xor
mov
push
mov
mov
aam
mov
dec
mov
add
in
push
add
ficoms
testl
mov
mov
bound
mov
add
movsb
dec
sub
mov
in
push
or
cli
jle
test
shll
mov
jno
pop
loop
mov
dec
mov
mov
cld
stos
sti
adcl
outsl
cmpsb
out
sbb
jb
mov
jns
add
xchg
inc
inc
imul
dec
fs
mov
les
in
insl
pop
and
mov
inc
add
out
std
push
into
pop
aaa
pop
repz
jb
mov
push
daa
sbb
aad
xchg
add
frstor
test
add
add
mov
js
inc
xchg
bound
mov
cli
sub
inc
shll
mov
int
subl
jecxz
add
jg
push
call
mov
mov
loop
mov
negb
les
push
add
push
push
div
dec
repnz
add
mov
icebp
mov
mov
mov
mov
add
add
mov
mov
lret
ja
and
mov
fs
mov
add
sbb
dec
out
jmp
add
cmp
push
and
push
andl
outsl
sub
rcr
pop
cmc
fwait
pop
arpl
addr16
cmp
insb
call
lret
sbb
adc
push
add
sub
jo
mov
inc
add
pop
push
or
in
inc
xchg
add
lcall
add
add
add
movsb
hlt
test
fs
mov
mov
mov
jne
iret
pop
or
mov
js
jecxz
out
stos
mov
movsl
out
idivl
mov
add
mov
sub
xor
mov
mov
add
fildll
inc
enter
rolb
mov
add
imulb
add
mov
mov
add
pusha
add
add
pop
in
xor
out
int3
adc
sarl
mov
sbb
pop
movsl
push
lret
fs
sbb
ficompl
stos
cmp
pop
xchg
repz
add
mov
test
mov
jo
mov
jne
and
mov
loope
or
mov
dec
and
addb
mov
fisttps
xor
enter
xchg
add
mov
mov
repz
cmp
mov
std
mov
mov
sub
mov
imul
inc
jnp
lret
mov
push
jns
fnstsw
popf
pop
scas
addb
mov
lock
pushf
mov
fidivrs
sub
mov
mov
adc
mov
mov
add
jle
ret
in
mov
add
ja
clc
add
xor
sti
and
mov
scas
push
add
aam
or
aam
aaa
fsubl
xor
mov
add
mov
mov
push
int
aaa
cmpsl
jns
add
push
iret
movsb
sbb
adc
pop
inc
fcoms
and
mov
and
mov
add
add
mov
or
xchg
cmpsl
out
xor
test
out
insb
pop
xorl
dec
es
jb
mov
add
shll
add
mov
dec
inc
stc
inc
add
dec
ficoml
repnz
icebp
insl
add
mov
and
sub
mov
out
add
cmc
sub
pop
and
aas
aaa
loope
scas
out
jno
add
jmp
add
cmpsl
rol
in
add
xor
inc
mov
cmpsl
cmp
dec
xchg
or
mov
add
fcom
adc
nop
add
sbb
adc
insb
out
aas
xchg
mov
mov
outsb
push
add
push
add
lock
repz
add
cltd
out
sti
mov
mov
add
pop
mov
mov
sarl
dec
hlt
cmp
xlat
in
mov
xor
add
and
mov
adc
ret
mov
loopne
mov
dec
shll
stos
pushf
fisubrs
dec
cmpsb
sbbl
vpunpckhqdq
pop
mov
mov
out
lret
mov
movsb
std
popa
lcall
or
mov
mov
add
push
add
mov
cmc
daa
mov
add
dec
add
or
incl
mov
mov
or
aam
add
arpl
sbb
adc
push
add
add
rolb
mov
or
into
jbe
aad
arpl
add
mov
jl
scas
jbe
pop
lahf
lea
test
lahf
dec
icebp
jns
or
jb
mov
add
je
lahf
vaddss
inc
xor
outsb
fimuls
sbb
out
xor
repnz
hlt
std
mov
mov
add
mov
push
iret
add
mov
mov
pop
xor
jp
add
mov
push
clts
xchg
call
dec
jge
into
and
sub
xchg
jbe
adc
mov
ss
jmp
add
jle
rolb
mov
mov
jl
add
mov
mov
adc
mov
add
push
add
xchg
mov
lods
or
mov
pop
dec
loopne
mov
add
mov
add
sbb
out
loopne
mov
mov
push
pop
call
mov
icebp
sahf
test
add
das
or
xlat
inc
push
add
push
cld
imul
leave
call
add
push
inc
cmpsl
fiaddl
mov
add
insb
xor
or
outsl
mov
les
jmp
xchg
mov
mov
je
push
cmp
sub
jnp
std
sbb
add
add
imul
add
dec
pop
lcall
mov
gs
dec
add
mov
push
add
mov
aad
aaa
fsubs
mov
cmc
adc
mov
jnp
lret
xchg
mov
iret
jnp
rolb
jle
std
push
add
cltd
inc
and
add
int3
test
pop
fldenv
out
xlat
rolb
mov
mov
or
das
dec
and
mov
xor
mov
add
pop
cmp
fwait
fs
shll
and
push
mov
pop
xchg
add
mov
add
repnz
xor
adc
mov
dec
xchg
insl
ds
dec
mov
mov
add
mov
punpckldq
mov
xor
mov
test
pushf
pop
sbb
sar
jge
add
mov
ja
mov
xchg
add
cmp
arpl
test
ja
lret
repnz
repz
pop
sbb
add
call
insl
jp
xchg
xor
dec
xchg
imulb
add
jae
mov
add
shll
rolb
mov
cmp
mov
mov
outsb
icebp
mov
dec
lea
imul
cwtl
mov
and
xchg
add
or
add
xchg
add
xchg
xchg
mov
mov
xchg
daa
push
insb
lea
add
mov
push
scas
scas
out
pop
loop
mov
and
add
mov
daa
std
inc
adc
mov
stmxcsr
add
addb
push
jns
xor
mov
mov
and
xchg
cs
and
mov
mov
fldenv
call
cli
loope
mov
mov
add
jl
add
or
outsl
dec
les
sbb
and
mov
add
dec
push
mov
in
adc
pop
mov
ret
push
les
push
cmpsb
lcall
mov
imul
div
fld
dec
ficompl
adc
mov
ljmp
ljmp
xor
dec
mov
mov
mov
add
inc
icebp
inc
add
movl
and
mov
push
ret
repnz
cmp
sahf
pop
add
fs
mov
jne
repnz
adc
add
add
mov
mov
lea
add
mov
pusha
add
test
sbb
push
mov
leave
bound
mov
push
mov
lods
test
clc
sbb
lods
rolb
cld
adc
addb
jnp
inc
sbb
pusha
add
aam
rolb
mov
cmc
pop
push
sti
out
dec
adc
mov
popa
sub
mov
add
lds
pop
adc
add
adc
repnz
mov
xlat
fnsave
repnz
rolb
mov
add
subl
das
je
es
mov
dec
pop
cmp
xlat
ljmp
add
pop
sbb
iret
sub
xor
jmp
ds
adc
dec
lret
lea
lea
bound
mov
pop
int
cmp
lods
fistps
jne
push
stos
adc
add
add
add
mov
rolb
call
cli
jno
not
loopne
mov
pushf
clc
cmp
jl
jae
pop
lock
roll
or
sbb
icebp
sahf
jle
in
push
push
mov
ret
les
mov
push
xchg
jae
push
scas
adc
aam
xor
sbb
test
decb
inc
daa
popf
mov
cmp
pop
xchg
add
mov
xchg
loopne
mov
decl
in
pop
cltd
xchg
addl
inc
sbb
add
push
add
mov
add
and
jge
outsl
inc
cmpsb
mov
and
mov
add
aas
pop
rcll
ja
mov
or
and
mov
mov
pusha
add
pop
in
clc
push
divl
mov
ret
sub
add
cmpsb
flds
add
sub
lahf
lahf
mov
xor
mov
mov
sahf
test
add
rolb
mov
repnz
mov
std
popa
ret
in
add
mov
xchg
sub
pop
mov
mov
cs
add
in
jae
push
add
pop
aaa
cltd
lock
test
mov
add
inc
dec
arpl
sub
add
fdivrs
clc
leave
sbb
mov
add
cltd
out
pop
gs
and
cmp
je
mov
fldt
cmp
rcrl
adc
mov
mov
mov
inc
sarl
add
and
std
je
mov
add
fs
mov
pop
fimuls
add
add
inc
ss
pop
push
push
ret
jbe
mov
inc
xchg
ret
daa
sbb
je
lea
add
inc
cmp
add
aam
add
push
ja
out
das
repnz
mov
mov
xor
or
data16
jns
or
lret
mov
mov
sbb
jge
gs
cmp
out
addb
mov
lcall
ss
call
mov
inc
push
adc
ss
mov
add
mov
jmp
jge
adc
mov
lahf
mov
leave
mov
mov
add
pop
cltd
push
dec
add
popa
fimull
and
cmp
ljmp
movb
jmp
sbb
lahf
addl
mov
xchg
xor
or
mov
inc
or
imul
or
sbb
jb
mov
add
mov
add
mov
dec
leave
pop
je
jne
add
push
push
test
xchg
add
mov
add
mov
mov
in
cmp
mov
dec
jno
sub
into
jne
fwait
call
std
mov
lods
rcll
xlat
pop
dec
add
stos
out
add
dec
mov
mov
fistpll
adc
add
jge
sbb
add
mov
add
ret
mov
push
pop
jo
mov
inc
push
or
add
xor
mov
fsubrl
aaa
in
and
jle
push
add
jo
mov
nop
add
leave
rolb
mov
mov
icebp
mov
add
pop
je
outsl
inc
shll
dec
mov
pop
lret
mov
js
test
and
mov
cwtl
or
add
clc
mov
jns
stos
lods
mov
scas
jmp
adc
mov
mov
add
mov
sbb
xor
add
cmp
in
cmp
shl
movsb
loope
insb
mov
ret
and
mov
add
jns
out
push
add
out
sub
insl
xor
jne
imull
es
mov
out
sbb
or
mov
in
stos
pop
mov
or
add
mov
jmp
test
fisttps
pop
add
out
outsl
int
addb
icebp
inc
add
fists
movsb
in
cmp
pop
jecxz
pusha
add
mov
add
movsb
cmc
pushf
and
add
adc
or
add
js
divb
add
rolb
mov
push
add
outsl
add
push
cmp
xor
enter
cmp
add
add
add
sub
jg
xor
add
mov
fs
sbb
sbb
aad
pop
mov
ljmp
jmp
es
pop
mov
stos
roll
mov
sub
cmp
sbb
scas
lods
sarl
cmpsl
nop
add
mov
mov
add
mov
scas
test
rorl
add
mov
movsl
das
int
insb
mov
mov
stos
fdivrl
idivl
cmp
mov
mov
mov
loope
lock
add
mov
dec
mov
mul
xchg
mov
fidivrs
and
mov
xchg
add
popa
ja
cli
into
fisubl
loop
mov
xor
mov
orps
mov
sbb
inc
sub
std
inc
ds
xchg
stc
ficoms
mov
roll
add
mov
push
rolb
mov
sub
xor
add
add
cmp
in
and
xchg
add
imul
mov
adc
jno
popf
add
mov
stos
test
cmpsb
mov
mov
xor
test
push
test
mov
adc
add
arpl
and
mov
add
addr16
jge
pop
mov
stc
xorl
xlat
rolb
adcl
dec
adc
and
push
mov
pop
call
ret
sbb
xor
mov
dec
mov
jmp
imul
push
add
add
jmp
jno
fucomp
addl
push
lahf
push
mov
ret
inc
fldenv
cmpsb
mov
jge
out
xor
out
push
pop
pop
sub
add
mov
hlt
adc
mov
daa
pop
xchg
mov
lret
add
test
test
fsubrl
jl
dec
out
xchg
jb
mov
or
mov
adc
mov
pop
btr
jne
jl
cmp
pop
dec
out
mov
pop
jnp
call
jbe
fldl
add
pop
pop
aam
cmp
int
nop
add
call
add
mov
imul
dec
cli
addr16
movsl
mov
fs
fidivl
mov
fdivs
add
jne
pushf
lock
cwtl
sub
sbb
pop
lret
push
push
sahf
mov
sbb
addb
aam
and
mov
jnp
mov
add
inc
add
xlat
jp
je
add
pop
mov
inc
movsb
stos
push
add
mov
mov
sbb
xchg
cltd
pop
add
cmc
cld
in
mov
inc
test
fsubrl
mov
fiaddl
dec
mov
lock
popf
test
xchg
dec
enter
mov
and
mov
add
add
out
push
and
add
mov
jmp
jmp
lret
jns
bound
mov
xchg
add
adc
mov
lea
dec
dec
cwtl
loop
mov
inc
cmc
stos
or
pop
fisubl
fimuls
enter
mov
add
sbbl
stos
je
pop
mov
stos
jno
iret
and
out
add
mov
ret
push
xchg
add
cmp
mov
add
add
addb
dec
inc
xchg
add
push
cmp
cmpsl
xlat
mov
mov
rcll
add
adc
dec
adc
fcmove
mov
jl
add
mov
pop
or
cmc
xor
mov
add
add
cmpsb
lcall
add
add
add
push
fimull
addr16
mov
mov
cmp
mov
imul
dec
int
add
push
jge
popa
adc
jne
decl
add
dec
loopne
mov
mov
mov
add
movsb
jbe
jl
jg
jg
mov
fidivs
rolb
stos
cld
popa
inc
mov
mov
cmp
fisubrs
jns
lcall
push
lret
lret
mov
mov
mov
lock
mov
stos
ret
sbb
shll
lcall
cli
push
xchg
in
and
outsb
sti
mov
add
adc
fldenv
mov
mov
add
push
ljmp
test
out
cs
adc
mov
mov
add
stos
mov
idivl
out
cmp
add
add
call
add
jp
jp
pop
mov
call
add
add
pop
inc
add
add
stos
cmp
add
insl
xchg
mov
ljmp
push
xor
mov
mov
jl
mov
mov
pop
insb
and
mov
dec
idivb
add
hlt
and
jne
mov
mov
fimuls
aad
test
mov
mov
mov
pop
xchg
pop
arpl
testb
lret
sbb
add
popf
dec
inc
jns
add
aam
push
addb
les
push
xor
sub
sbb
mov
mov
fidivrs
adc
mov
xor
mov
sbb
loope
mov
mov
imulb
add
arpl
sbb
add
add
mov
add
add
inc
add
imul
add
inc
add
repnz
jae
add
add
clc
repnz
jae
add
inc
addl
clc
repnz
jae
cmp
add
lcall
add
repnz
jae
bound
aad
mov
fs
cmp
incl
add
add
sahf
add
mov
iret
adc
ss
mov
clc
repnz
jae
add
mov
rcrb
cld
nop
jmp
pop
sbb
xlat
add
add
loop
clc
repnz
jae
add
repz
lret
nop
jmp
add
add
add
push
mov
xchg
ret
cmp
aad
add
xchg
push
mov
clc
repnz
jae
ret
add
jecxz
add
gs
inc
add
sahf
xlat
add
add
cmp
push
mov
xchg
ret
cmp
mov
movsl
andl
repnz
jae
add
add
iret
in
push
mov
xor
add
push
aaa
add
push
add
mov
shl
clc
repnz
jae
jecxz
add
mov
mov
test
and
add
repnz
jae
add
aaa
testl
add
push
scas
add
add
add
adc
mov
xchg
ret
add
adc
add
clc
repnz
jae
ret
pusha
add
mov
xchg
ret
cmp
add
add
fldenv
xor
add
clc
repnz
jae
add
pop
push
mov
pop
and
out
jecxz
add
aaa
add
jno
sbb
test
sub
add
or
add
xlat
jo
mov
adc
repnz
jae
addl
inc
xchg
insb
jne
clc
repnz
jae
sub
clc
repnz
jae
xchg
sub
xchg
add
mov
daa
xchg
xchg
lds
lea
push
mov
xchg
ret
add
pop
sub
jb
mov
add
clc
repnz
jae
mov
add
mov
dec
push
mov
xchg
ret
pop
add
and
mov
mov
pop
pop
add
add
add
add
add
add
loopne
clc
repnz
jae
sub
add
in
stos
jmp
call
cmp
bound
inc
add
mov
add
mov
lcall
inc
add
bound
add
insl
mov
fwait
cld
nop
jmp
cmpsl
lods
test
jne
clc
repnz
jae
add
mov
nop
jae
jp
test
ja
add
jb
clc
repnz
jae
add
inc
xchg
test
lcall
xorl
and
xor
clc
repnz
jae
add
mov
and
cmp
fwait
cld
nop
jmp
add
xlat
push
add
loopne
repnz
jae
add
mov
add
jmp
add
cmp
inc
lods
push
fwait
cld
nop
jmp
mov
add
push
add
lods
add
shll
ret
add
xlat
add
add
add
xchg
jmp
mov
add
or
add
sub
add
xor
mov
mov
fwait
cld
nop
jmp
test
add
cwtl
in
inc
add
add
cltd
scas
and
fwait
cld
nop
jmp
add
and
add
cmc
and
add
mov
add
clc
repnz
jae
cmc
xchg
add
aad
xchg
fwait
cld
nop
jmp
xchg
sub
cmp
xchg
sbb
fwait
cld
nop
jmp
pop
add
mov
movzwl
fwait
cld
nop
jmp
mov
xlat
add
push
mov
xchg
add
xchg
add
and
sbb
lods
mov
fwait
cld
nop
jmp
add
add
daa
add
mov
gs
xor
clc
repnz
jae
mov
add
push
mov
jp
rcrl
sbb
add
add
add
add
loope
inc
add
stc
add
add
xchg
xor
test
jae
sub
mov
add
std
je
fwait
cld
nop
jmp
mov
add
cmp
add
push
mov
xchg
ret
mov
add
cmpsl
psubsb
add
clc
repnz
jae
add
bound
insb
dec
clc
repnz
jae
stc
push
add
idivb
add
clc
repnz
jae
cmpsb
lods
bound
cmp
nop
jae
add
add
add
clc
repnz
jae
add
test
ret
add
push
mov
xchg
ret
add
in
mov
clc
repnz
jae
mov
lcall
or
fwait
cld
nop
jmp
push
inc
insl
dec
mov
push
mov
xchg
ret
add
add
add
add
mov
add
mov
fwait
cld
nop
jmp
stc
arpl
insl
add
xchg
pop
mov
clc
repnz
jae
add
add
add
or
repnz
jae
add
scas
cmc
add
daa
xor
jne
fwait
cld
nop
jmp
dec
xchg
cmp
add
xchg
insb
je
clc
repnz
jae
add
dec
movzwl
clc
repnz
jae
add
cmp
inc
xchg
ret
and
add
clc
repnz
jae
xchg
add
cmp
clc
repnz
jae
add
inc
cmp
mov
xchg
push
mov
xchg
ret
cltd
inc
add
add
fwait
ror
push
mov
xchg
ret
jns
sub
xchg
pop
add
clc
repnz
jae
add
sbb
scas
cmp
xor
repnz
jae
mov
in
add
repnz
jae
add
sahf
lcall
mov
inc
add
lods
inc
add
mov
add
std
jmp
add
dec
subl
clc
repnz
jae
dec
mov
inc
add
push
clc
repnz
jae
add
and
pop
add
fwait
cld
nop
jmp
lcall
sysexit
lods
and
imul
nop
jae
aad
add
test
repnz
jae
add
mov
test
mov
clc
repnz
jae
lret
add
insl
push
clc
repnz
jae
cmpsl
add
fdivl
mov
test
inc
push
mov
xchg
ret
add
add
add
mov
clc
repnz
jae
mov
add
add
and
cld
nop
jmp
or
xchg
fiaddl
sti
fwait
cld
nop
jmp
add
add
aad
pop
cmp
fiaddl
mov
xchg
ret
xlat
inc
ret
in
pushf
jmp
sub
mov
add
sahf
pop
lcall
mov
and
inc
add
mov
xchg
add
add
clc
repnz
jae
pop
cmp
stos
pop
clc
repnz
jae
add
sahf
mov
outsl
mov
clc
repnz
jae
sbb
add
mov
mov
repnz
jae
pop
add
add
mov
sub
clc
repnz
jae
add
add
pop
outsl
push
mov
push
jb
arpl
mov
inc
add
in
dec
div
clc
repnz
jae
lods
add
add
mov
add
push
mov
xchg
ret
xchg
sbb
add
clc
repnz
jae
adc
and
add
and
push
mov
xchg
ret
add
lods
cmc
add
jmp
jae
sahf
mov
and
dec
add
fwait
cld
nop
jmp
sub
bound
xchg
add
dec
add
clc
repnz
jae
jp
mov
add
mov
add
clc
repnz
jae
add
cmpsb
cmp
test
clc
repnz
jae
bound
add
push
mov
xchg
ret
add
add
iret
scas
in
mov
clc
repnz
jae
add
or
test
cld
nop
jmp
xchg
add
and
fs
add
add
clc
repnz
jae
and
add
lret
fwait
cld
nop
jmp
add
add
add
or
repnz
jae
mov
add
mov
push
mov
clc
repnz
jae
add
faddl
lods
xlat
push
mov
adc
in
dec
add
stc
add
test
mov
fwait
cld
nop
jmp
cmpsb
pop
sahf
cltd
bound
add
jmp
lret
lods
dec
add
mov
clc
repnz
jae
xlat
sbb
stos
push
mov
xchg
ret
sbb
mov
cmp
and
add
push
mov
xchg
ret
add
aad
add
dec
mov
clc
repnz
jae
add
call
clc
repnz
jae
add
add
dec
mov
clc
repnz
jae
add
arpl
add
add
fwait
cld
nop
jmp
test
mov
push
clc
repnz
jae
add
faddl
add
add
adc
mov
jmp
incl
cmp
insl
cmc
cmpsl
add
add
or
mov
xchg
ret
cmpsb
jp
add
mov
repnz
jae
insl
aad
add
lcall
add
clc
repnz
jae
add
add
push
mov
xchg
ret
addl
push
push
mov
xchg
ret
test
lods
test
clc
repnz
jae
add
fsubl
cmpsb
adc
mov
clc
repnz
jae
add
popa
add
cld
nop
jmp
inc
add
arpl
mov
nop
jae
add
inc
iret
imul
nop
jae
add
cmp
sahf
mov
add
jae
add
arpl
jnp
movsb
fwait
cld
nop
jmp
pop
jp
lods
add
add
sbb
push
mov
xchg
ret
jns
add
add
mov
iret
imul
clc
repnz
jae
sahf
add
dec
mov
fwait
cld
nop
jmp
test
cmp
adc
je
clc
repnz
jae
faddl
add
in
add
mov
add
add
push
mov
clc
repnz
jae
mov
mov
xchg
add
adc
sub
inc
add
cltd
add
orl
addl
xchg
cmc
mov
push
clc
repnz
jae
add
add
out
call
fwait
cld
nop
jmp
lret
xlat
jp
push
clc
repnz
jae
lods
mov
add
insb
pushl
push
mov
xchg
ret
fcompl
add
cmp
push
mov
xchg
ret
add
xchg
xlat
inc
lods
lea
clc
repnz
jae
add
mov
cmp
mov
xchg
ret
add
scas
jns
add
add
push
mov
xchg
ret
mov
and
mov
clc
repnz
jae
add
lret
sub
loopne
mov
les
clc
repnz
jae
add
pop
pusha
lret
mov
push
mov
xchg
ret
add
cmp
jecxz
pop
fwait
cld
nop
jmp
add
pusha
bound
test
lea
clc
repnz
jae
addl
sbb
nop
jmp
jns
add
test
pop
and
repnz
jae
add
es
clc
repnz
jae
add
xchg
cld
nop
jmp
sahf
sbb
iret
jae
add
add
fwait
cld
nop
jmp
add
cmp
repnz
jae
cmp
jns
fcoml
mov
add
jg
jae
add
adc
jns
pop
add
pop
movsb
xchg
add
add
adc
add
xchg
xchg
lods
cmpsl
add
rol
clc
repnz
jae
xchg
pop
ret
add
insb
insb
clc
repnz
jae
add
inc
push
mov
xchg
ret
xchg
and
add
sub
jae
scas
xchg
add
add
add
mov
push
mov
xchg
ret
add
inc
add
add
fwait
cld
nop
jmp
sahf
add
xor
repnz
jae
aad
ret
add
mov
push
mov
xchg
ret
test
and
push
clc
repnz
jae
add
cmpsl
add
add
rorl
fwait
cld
nop
jmp
add
add
sti
pusha
push
mov
xchg
ret
add
add
mov
xchg
ret
add
pop
xchg
inc
add
in
dec
sbb
add
push
popa
mov
movsb
scas
lret
add
add
push
mov
xchg
ret
mov
insl
test
mov
clc
repnz
jae
pop
add
pop
outsl
push
clc
repnz
jae
add
sbb
sbb
jmp
add
push
mov
nop
jae
sbb
mov
inc
stos
mov
clc
repnz
jae
mov
add
adc
add
cld
nop
jmp
faddl
add
add
scas
cltd
xor
mov
mov
rep
push
mov
xchg
ret
add
mov
mov
clc
repnz
jae
cmp
jp
stos
je
clc
repnz
jae
pop
in
rorl
clc
repnz
jae
cmp
add
ds
clc
repnz
jae
mov
inc
mulb
add
add
repnz
jae
add
add
popa
add
repnz
jae
lcall
and
lock
add
add
rolb
fldt
ss
incl
add
add
push
fisttpll
filds
xchg
ret
jp
push
sbb
ret
outsl
add
fwait
cld
nop
jmp
sahf
add
cmc
add
test
mov
add
add
repnz
jae
sbb
xor
dec
add
clc
repnz
jae
xchg
jns
mov
add
mov
add
add
idiv
incl
mov
test
mov
add
mov
xchg
ret
add
adc
pop
clc
repnz
jae
add
add
dec
cmpsl
cmp
push
clc
repnz
jae
add
fimull
repnz
jae
add
dec
fwait
cld
nop
jmp
add
sahf
insl
lods
lods
sbb
add
mov
xchg
ret
add
xchg
mov
mov
add
arpl
add
cli
lcall
inc
add
nop
jae
cmp
mov
inc
scas
test
push
push
mov
xchg
ret
mov
add
xlat
arpl
je
add
fwait
cld
nop
jmp
cmp
sahf
add
xchg
inc
iret
pop
clc
repnz
jae
add
cmpsl
add
movzwl
clc
repnz
jae
add
cltd
add
add
nop
jae
add
push
insl
mov
or
clc
repnz
jae
test
iret
add
add
and
clc
repnz
jae
mov
lret
fmull
sti
fwait
cld
nop
jmp
add
add
add
mov
add
outsb
push
mov
in
add
pop
add
add
fwait
add
push
sub
nop
jae
ret
xchg
add
jecxz
mov
clc
repnz
jae
add
pop
push
fwait
cld
nop
jmp
pop
add
dec
jp
add
add
loopne
jnp
dec
aas
add
xchg
add
int3
addr16
jmp
add
add
imul
incb
xchg
ret
add
add
clc
repnz
jae
inc
insl
add
cmc
add
pop
clc
repnz
jae
sbb
and
shrl
mov
cmp
ret
add
mov
add
clc
repnz
jae
mov
add
loop
fwait
cld
nop
jmp
add
pop
lods
rep
clc
repnz
jae
add
movsl
cmp
cmpsb
sbb
popa
add
mov
xchg
ret
xchg
add
jp
imul
nop
jae
scas
add
add
inc
cmp
fisttps
inc
add
add
add
fimuls
nop
jae
mov
add
add
in
mov
jmp
cmp
mov
push
stos
clc
repnz
jae
cmp
add
add
add
imul
clc
repnz
jae
add
arpl
add
add
clc
repnz
jae
add
mov
fwait
cld
nop
jmp
scas
xlat
ret
test
jne
add
push
mov
xchg
ret
sbb
mov
push
mov
xchg
ret
add
insl
pop
add
pop
je
clc
repnz
jae
add
lcall
cmp
repnz
jae
mov
push
clc
repnz
jae
insl
cltd
and
push
lock
push
fwait
cld
nop
jmp
add
cmp
inc
inc
stc
jno
dec
mov
clc
repnz
jae
inc
cmpsb
sub
pop
push
mov
xchg
ret
xlat
add
add
add
or
add
add
cmc
add
push
clc
repnz
jae
lcall
movsl
shl
rcrl
mov
xchg
ret
add
add
in
mov
repnz
jae
dec
mov
add
mov
dec
outsl
popa
fs
repnz
jae
mov
sub
nop
jae
add
test
add
cld
nop
jmp
xchg
inc
add
xchg
add
fwait
cld
nop
jmp
add
add
add
test
repnz
jae
xchg
test
mov
nop
jae
add
sub
dec
add
and
inc
add
add
rdpmc
rclb
or
inc
add
add
insl
push
add
pusha
fwait
cld
nop
jmp
scas
add
add
xchg
add
repnz
jae
jecxz
add
jns
xchg
add
nop
jae
add
lret
xchg
mov
jp
popa
add
mov
xchg
ret
sub
xchg
aad
push
push
daa
mov
add
fwait
cld
nop
jmp
add
add
add
out
sbb
and
dec
add
iret
ficoml
repnz
jae
inc
xchg
add
cmpsb
sub
sub
push
mov
xchg
ret
add
add
jns
stos
mov
push
mov
xchg
ret
mov
add
mov
clc
repnz
jae
add
add
pop
mov
clc
repnz
jae
sbb
add
add
nop
add
clc
repnz
jae
cmp
add
jmp
sbb
movsl
add
add
add
pop
add
clc
repnz
jae
cmp
add
pusha
push
mov
xchg
ret
scas
movsl
add
inc
add
jns
push
mov
xchg
ret
add
add
add
clc
repnz
jae
add
rol
xlat
mov
clc
repnz
jae
iret
xchg
cmp
clc
repnz
jae
add
add
cmp
jecxz
into
pop
clc
repnz
jae
add
add
jle
mov
clc
repnz
jae
lods
xchg
xor
jmp
add
add
add
xor
clc
repnz
jae
cmpl
add
add
cld
nop
jmp
add
sahf
xchg
add
xchg
sbb
add
nop
jae
cmc
lods
add
add
xlat
add
push
mov
xchg
ret
cmp
xchg
xchg
mov
mov
clc
repnz
jae
iret
mov
in
pop
mov
clc
repnz
jae
mov
add
add
lock
add
or
clc
repnz
jae
add
cmp
xor
clc
repnz
jae
sub
xchg
sahf
lods
and
mov
push
clc
repnz
jae
add
lods
add
add
add
clc
repnz
jae
xchg
test
xor
clc
repnz
jae
sub
mov
aad
mov
fwait
cld
nop
jmp
pop
add
add
test
adc
add
repnz
jae
xchg
cmpsl
xchg
insb
push
fwait
cld
nop
jmp
add
cmp
add
add
mov
mov
clc
repnz
jae
add
sbb
fwait
cld
nop
jmp
cmc
add
add
add
cmp
mov
mov
mov
push
mov
xchg
ret
cmpsl
sahf
add
add
xchg
clc
repnz
jae
lods
sbb
aad
mov
clc
repnz
jae
add
xchg
cltd
lcall
clc
repnz
jae
add
add
pusha
add
add
mov
clc
repnz
jae
xchg
add
jecxz
add
add
push
add
mov
clc
repnz
jae
lcall
push
jmp
repnz
jae
dec
add
xchg
add
sahf
negl
jmp
dec
add
ret
push
push
mov
xchg
ret
xchg
pusha
add
add
clc
repnz
jae
add
add
fwait
cld
nop
jmp
cmc
xchg
cmpsl
add
add
pusha
clc
repnz
jae
mov
add
sahf
add
iret
nop
add
cld
lea
clc
repnz
jae
sub
xor
mov
push
push
mov
xchg
ret
insl
add
mov
inc
push
mov
xchg
ret
pusha
add
shl
push
mov
xchg
ret
add
jae
push
clc
repnz
jae
or
add
adc
mov
ljmp
add
cmp
add
mov
mov
clc
repnz
jae
add
test
adc
add
repnz
jae
ret
pop
leave
clc
repnz
jae
add
add
adc
add
push
mov
xchg
ret
inc
add
cmc
cmp
mov
clc
repnz
jae
scas
test
pop
lcall
add
add
inc
add
jmp
rcr
inc
add
cmp
xchg
add
pop
pop
clc
repnz
jae
add
add
mov
clc
repnz
jae
arpl
pop
add
pusha
mov
xlat
mov
add
mov
xchg
ret
sbb
add
add
cmpsl
cmc
or
jae
lods
xchg
and
sub
pop
cmp
repnz
jae
add
and
or
rolb
mov
clc
repnz
jae
add
add
add
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
addl
scas
add
add
repnz
jae
add
subl
repnz
jae
xchg
mov
es
dec
and
push
mov
xchg
ret
add
mov
jmp
clc
repnz
jae
add
push
fwait
cld
nop
jmp
add
lods
cmc
add
dec
fwait
cld
nop
jmp
add
and
mov
inc
add
add
mov
add
clc
repnz
jae
add
ret
mov
clc
repnz
jae
cmc
add
add
add
add
adc
add
repnz
jae
cmp
push
clc
repnz
jae
arpl
addl
repnz
jae
add
adc
mov
jb,pt
fwait
cld
nop
jmp
add
xor
sbb
add
out
std
inc
add
cmp
add
xor
mov
clc
repnz
jae
andl
dec
lods
clc
repnz
jae
mov
xlat
add
add
repz
call
clc
repnz
jae
insl
cmp
add
repnz
jae
add
arpl
add
nop
jae
add
jecxz
ret
popa
add
mov
xchg
ret
inc
xchg
jecxz
xchg
cli
mov
fwait
cld
nop
jmp
lods
add
add
xor
push
mov
xchg
ret
sub
cmp
add
mov
add
add
repnz
jae
add
idiv
clc
repnz
jae
add
push
nop
jae
xchg
add
cmpsl
lods
add
decl
cld
nop
jmp
add
add
addb
jbe
and
fwait
cld
nop
jmp
stc
mov
mov
repnz
jae
add
cmpsl
add
xchg
add
mull
repnz
jae
add
lret
add
nop
jae
cmc
lret
cmp
add
mov
xor
mov
add
clc
repnz
jae
add
push
cltd
test
fwait
cld
nop
jmp
cmp
add
pop
clc
repnz
jae
add
cmp
jbe
clc
repnz
jae
add
push
pop
clc
repnz
jae
arpl
xchg
add
sbb
add
sbb
cmc
dec
dec
mov
add
pushf
div
fwait
cld
nop
jmp
sahf
add
cmp
sahf
add
add
fwait
cld
nop
jmp
pop
addl
mov
mov
push
clc
repnz
jae
xchg
add
insl
add
movsl
stc
call
clc
repnz
jae
add
test
adc
clc
repnz
jae
mov
add
ret
ljmp
add
add
add
repnz
jae
add
add
push
fwait
cld
nop
jmp
stc
cmpsb
cltd
mov
mov
add
nop
jae
arpl
sahf
bound
lods
add
xor
decl
clc
repnz
jae
xchg
add
add
fwait
cld
nop
jmp
cmp
addl
repnz
jae
mov
add
jne
mov
clc
repnz
jae
cmpsl
cltd
add
daa
loopne
mov
repnz
jae
add
and
add
push
push
clc
repnz
jae
fdivrl
add
mov
mov
add
fwait
cld
nop
jmp
add
cmpsl
add
add
stos
in
add
add
ret
mov
mov
add
push
mov
xchg
ret
addl
add
push
add
clc
repnz
jae
cltd
xchg
aad
mov
clc
repnz
jae
add
cmpsb
push
push
mov
jmp
adcl
add
xor
clc
repnz
jae
add
mov
sub
jmp
add
cmc
jns
xchg
cmp
mov
mov
loope
add
inc
add
add
ret
negl
jp
jbe
fwait
cld
nop
jmp
sub
add
rolb
mov
outsl
mov
push
mov
xchg
ret
add
add
xlat
cmpsl
aad
xor
mov
nop
jae
cmp
and
addl
add
clc
repnz
jae
add
clc
push
mov
xchg
ret
add
add
push
mov
xchg
ret
lret
add
xor
dec
ss
clc
repnz
jae
add
leave
add
clc
repnz
jae
add
xchg
add
add
sub
clc
repnz
jae
add
add
add
repnz
jae
adc
mov
clc
repnz
jae
sbb
add
mov
push
mov
xchg
ret
insl
add
mov
cmp
nop
jae
add
mov
xchg
add
les
cld
nop
jmp
xchg
add
lods
add
add
mov
test
or
add
repnz
jae
dec
xlat
lods
out
jb
mov
lahf
push
clc
repnz
jae
add
mov
repnz
jae
cmp
mov
add
test
cli
clc
repnz
jae
stc
pusha
iret
in
mov
xor
repnz
jae
add
sahf
add
add
push
mov
xchg
ret
pop
dec
add
add
add
hlt
cli
inc
add
cmp
lret
xor
clc
repnz
jae
add
sahf
cmpsl
cwtl
cmp
fwait
cld
nop
jmp
add
add
lods
add
dec
cs
clc
repnz
jae
sbb
add
add
add
repnz
jae
add
add
lods
clc
repnz
jae
add
sahf
scas
add
add
fucompp
aad
incl
and
add
ret
mov
add
push
mov
xchg
ret
sub
cltd
xlat
add
add
mov
xchg
ret
mov
add
add
insl
mov
fwait
cld
nop
jmp
add
add
add
add
xchg
iret
dec
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
sbb
sar
repnz
jae
add
bound
mov
pop
fwait
cld
nop
jmp
add
mov
in
out
and
clc
repnz
jae
arpl
mov
lcall
subl
and
xchg
add
add
adc
repnz
jae
add
and
push
push
mov
xchg
ret
add
add
mov
mov
pusha
add
fwait
cld
nop
jmp
in
sbb
pop
and
mov
stos
clc
repnz
jae
cmc
add
ret
add
add
pop
jae
repnz
jae
add
jecxz
inc
cs
clc
repnz
jae
add
sbb
movsb
clc
repnz
jae
insl
add
in
pop
push
mov
xchg
ret
add
sahf
pusha
mov
in
mov
clc
repnz
jae
sbb
stc
add
cmp
add
clc
repnz
jae
insl
add
inc
xchg
pop
mov
add
clc
repnz
jae
add
add
cmp
add
jg
clc
repnz
jae
add
data16
mov
les
mov
xchg
ret
add
add
add
jae
cld
nop
jmp
pusha
add
add
stc
cmp
add
lods
fildl
clc
clc
repnz
jae
cmp
bound
sbb
jns
es
cld
or
jmp
add
xchg
add
mov
clc
repnz
jae
mov
and
mov
xchg
ret
add
pop
jp
fcoml
mov
xchg
ret
add
xchg
arpl
mov
inc
push
mov
xchg
ret
mov
cltd
sahf
rcrl
in
add
add
cltd
cmp
push
clc
repnz
jae
add
mov
lods
add
cmpsb
lea
sar
repnz
jae
xchg
add
add
cmpl
pop
incl
add
repnz
jae
add
scas
add
add
mov
addb
sub
nop
jae
lods
inc
add
clc
repnz
jae
add
add
addl
clc
repnz
jae
stc
xlat
add
add
incl
add
inc
mov
xchg
movsb
adc
repnz
jae
add
add
rep
clc
repnz
jae
add
add
push
add
in
mov
clc
repnz
jae
add
add
rol
add
mov
nop
jae
add
mov
stos
jmp
add
add
add
sub
ljmp
add
add
mov
cld
nop
jmp
add
add
mov
cmp
ret
xlat
lods
sbb
add
cmp
fwait
cld
nop
jmp
add
add
add
add
add
push
mov
xchg
ret
add
jl
sti
add
add
or
add
cmp
pop
push
push
mov
xchg
ret
add
test
add
dec
jp
add
push
add
mov
clc
repnz
jae
mov
outsl
xor
fwait
cld
nop
jmp
add
add
or
repnz
jae
add
lcall
mov
xchg
ret
test
cmp
repnz
jae
cmp
add
nop
jmp
cmpsl
add
mov
jns
xlat
pushf
call
fwait
cld
nop
jmp
add
push
push
mov
xchg
ret
add
add
mov
add
cld
nop
jmp
add
add
fildll
clc
repnz
jae
inc
add
sahf
add
add
repnz
jae
xchg
lcall
clc
repnz
jae
lods
pop
cmpsl
insl
jns
add
pop
cmpl
fwait
cld
nop
jmp
cmpsb
cmpsl
add
mov
icebp
clc
repnz
jae
add
add
cmpsb
ljmp
jae
push
lcall
fwait
cld
nop
jmp
cmc
ret
mov
enter
nop
jmp
scas
cmp
cmpsb
sahf
xchg
add
ret
add
in
and
add
pop
add
fwait
enter
inc
jbe
push
add
fwait
cld
nop
jmp
add
add
test
sub
xchg
add
add
add
add
xchg
add
add
add
repnz
jae
jecxz
add
add
clc
repnz
jae
sub
add
add
scas
mov
fwait
cld
nop
jmp
add
mov
mov
clc
repnz
jae
add
jge
loop
push
mov
xchg
ret
xchg
add
mov
addr16
inc
push
mov
xchg
ret
add
add
add
mov
repnz
jae
add
add
add
pop
jg
add
nop
jae
insl
arpl
push
clc
repnz
jae
scas
add
xchg
add
sahf
add
mov
cmp
add
add
ret
add
mov
adc
cld
nop
jmp
mov
xchg
sub
jo
fwait
cld
nop
jmp
add
xchg
iret
stc
add
xor
mov
add
repnz
jae
add
js
jne
push
mov
xchg
ret
test
mov
add
add
repnz
jae
add
idiv
clc
repnz
jae
sahf
xchg
xlat
xchg
clc
mov
push
mov
xchg
ret
add
add
sbb
mov
lea
movl
mov
add
sbb
mov
push
mov
xchg
ret
add
sahf
add
xchg
jge
loope
repnz
jae
add
movsl
add
cmpsl
test
add
sub
xchg
faddl
xchg
ret
add
fwait
cld
nop
jmp
sahf
test
and
add
lods
push
mov
xchg
ret
add
add
lods
mov
and
clc
repnz
jae
pop
lcall
and
jne
clc
repnz
jae
inc
add
out
popa
clc
repnz
jae
xlat
lret
add
add
add
lock
add
aad
mov
add
mov
bound
repnz
jae
add
cmp
push
cld
push
fwait
cld
nop
jmp
add
insl
add
out
push
clc
repnz
jae
mov
add
leave
ret
clc
repnz
jae
mov
add
and
clc
repnz
jae
jecxz
pusha
cmp
xchg
adc
mov
idivl
jne
clc
repnz
jae
add
nop
jmp
insl
add
add
cltd
xchg
jns
pop
out
call
iret
aad
add
movsl
add
push
mov
xchg
ret
add
pop
mov
mov
movzwl
clc
repnz
jae
lcall
xor
mov
jae
add
mov
iret
add
stc
shr
clc
repnz
jae
mov
pop
int3
push
push
mov
xchg
ret
add
xchg
ret
sahf
pop
in
push
clc
repnz
jae
ret
xchg
lods
jp
test
push
clc
repnz
jae
mov
ret
mov
cmp
and
xchg
add
add
pop
mov
fwait
cld
nop
jmp
xchg
inc
add
jp
mov
push
icebp
clc
repnz
jae
cmp
mov
ret
push
and
clc
repnz
jae
add
add
cltd
add
mov
clc
repnz
jae
add
test
cmp
clc
repnz
jae
test
xchg
cmp
repnz
cld
nop
jmp
cmp
jecxz
add
repz
mov
add
clc
repnz
jae
add
movsl
add
add
clc
repnz
jae
add
dec
jp
and
icebp
clc
inc
add
sahf
xchg
add
inc
or
jae
clc
repnz
jae
inc
aad
add
add
dec
mov
clc
repnz
jae
add
cmpsb
add
adc
mov
lea
fwait
cld
nop
jmp
add
or
cld
nop
jmp
addl
add
and
clc
repnz
jae
xchg
lret
cmc
test
clc
repnz
jae
add
mov
add
add
mov
fwait
cld
nop
jmp
add
add
sahf
add
pushl
push
mov
xchg
ret
add
add
add
nop
jae
movsl
add
cmpsl
inc
add
push
mov
xchg
ret
test
and
mov
fwait
cld
nop
jmp
ret
add
add
add
clc
repnz
jae
add
add
add
loop
push
mov
xchg
ret
add
push
push
mov
xchg
ret
sub
jp
jp
lret
jne
clc
repnz
jae
add
ret
fdiv
jmp
xchg
add
cmp
add
cltd
inc
lods
add
fwait
cld
nop
jmp
sbb
add
repnz
jae
add
add
cltd
add
add
repnz
jae
mov
add
push
push
mov
xchg
ret
mov
add
mov
repnz
jae
add
add
ret
movsl
pop
call
clc
repnz
jae
cmc
add
add
sbb
fwait
cld
nop
jmp
bound
cmpsb
cmpl
pop
stc
mov
inc
test
cmp
fwait
cld
nop
jmp
add
add
add
sahf
add
push
jae
repnz
test
clc
clc
repnz
jae
add
scas
cmpw
fwait
cld
nop
jmp
add
add
pushf
test
fwait
cld
nop
jmp
add
add
bound
mov
add
fwait
cld
nop
jmp
jp
test
add
mov
cmp
ret
cmp
jb
fwait
cld
nop
jmp
xchg
sbb
add
fwait
push
mov
or
dec
add
dec
add
into
mov
stc
clc
repnz
jae
sahf
add
mov
mov
fwait
cld
nop
jmp
dec
add
xor
add
clc
repnz
jae
adc
and
repnz
jae
sahf
add
popa
push
mov
xchg
ret
inc
add
adcl
add
add
repnz
jae
add
mov
nop
add
fwait
jne
fwait
cld
nop
jmp
add
add
jae
aad
dec
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
xchg
add
arpl
sar
nop
jae
add
add
test
xchg
stos
je
clc
repnz
jae
add
jbe
clc
repnz
jae
xlat
lret
cmpsb
aad
inc
lahf
sub
clc
repnz
jae
xchg
lods
bound
repnz
in
repz
add
xchg
hlt
mov
push
add
add
mov
clc
repnz
jae
stc
add
clc
repnz
jae
add
push
mov
add
clc
repnz
jae
cmp
ret
xor
clc
repnz
jae
xchg
add
add
lods
pop
push
mov
push
cmp
add
push
in
call
int
das
mov
mov
call
mov
add
adc
pop
scas
xor
mov
pop
cmpsl
mov
mov
and
scas
pop
popa
sub
int
add
jo
mov
cwtl
adc
mov
push
add
icebp
je
pusha
add
jecxz
ljmp
pop
lcall
popf
pop
cmp
push
jae
add
lea
fwait
int
ljmp
in
mov
sub
addb
add
mov
stos
or
in
sahf
mov
sbb
add
fsub
out
jno
negl
lret
sub
pushf
in
scas
jno
dec
and
fs
cli
loopne
mov
das
and
mov
sti
ja
jge
popa
hlt
movsb
push
add
adc
mov
add
push
sub
mov
add
mov
bound
mov
push
out
ret
pop
jle
add
jge
jl
inc
add
or
dec
push
insl
push
add
mov
mov
arpl
repz
or
xchg
xor
leave
mov
fnstcw
ds
add
fdivl
frstor
ss
pop
mov
sub
loop
mov
adc
mov
jl
test
addr16
jo
mov
sbb
mov
mov
addl
push
divb
dec
in
std
mov
call
inc
cmc
inc
inc
add
mov
xor
lcall
imul
aad
xor
mov
popf
int3
adc
dec
loopne
mov
add
inc
jne
or
adc
mov
mov
aaa
popf
mov
push
in
or
pop
xchg
add
test
add
inc
add
push
dec
cmp
sbb
mov
iret
inc
xor
mov
mov
les
roll
mov
repz
mov
mov
jb
mov
or
add
dec
xor
mov
filds
add
or
adc
mov
xchg
xor
popa
cmp
pop
ret
push
push
movsb
jb
mov
mov
add
mov
leave
cmpsl
int3
cmpsl
hlt
inc
xor
mov
lret
add
add
jl
xchg
adc
mov
fwait
iret
adc
mov
cmp
fwait
dec
jb
mov
xchg
add
mov
lods
cmp
aaa
sub
xor
mov
pop
notb
mov
xchg
sub
mov
add
mov
fidivrl
ss
or
add
add
mov
add
cmpsl
jp
add
add
inc
add
adcl
lods
loop
mov
mov
add
fdivrs
orl
mov
ja
sbb
add
mov
xchg
push
add
cmp
mov
add
arpl
mov
addr16
jg
mov
daa
sub
add
sub
movsb
test
jmp
mov
dec
cmp
xchg
xor
mov
push
push
pushl
jae
daa
jmp
or
data16
mov
mov
cmpsb
out
mov
add
xchg
lock
adc
movsb
pop
pop
cmpsl
ret
std
lock
ret
xor
mov
xor
je
xor
mov
shll
xor
push
daa
jnp
pop
fcmovnbe
add
outsl
icebp
aad
in
lock
popa
push
jmp
mov
sub
pop
mov
adc
mov
dec
popf
xchg
pop
outsb
mov
inc
add
push
outsb
cwtl
pop
sbbl
inc
jp
push
xor
pop
mov
mov
dec
test
add
dec
sbb
loopne
mov
jns
fiaddl
fisttps
cwtl
nop
add
pop
fxch
or
call
add
pop
push
add
test
popa
les
sbb
ror
out
addl
mov
les
jnp
push
rcll
repnz
popa
adc
out
adc
das
push
out
aaa
adc
jecxz
repz
fbstp
nop
add
inc
dec
xchg
mov
xor
mov
jmp
push
xor
in
jmp
in
mov
pop
mov
xchg
add
out
dec
lods
movsl
rolb
mov
scas
sub
pop
in
mov
add
jle
imul
daa
jp
cmpsb
insb
mov
mov
lods
cmpsb
mov
jne
rolb
dec
dec
stos
or
sub
or
rcrl
adc
shll
in
xor
mov
mov
push
imul
sbb
add
scas
jmp
xor
js
paddd
add
dec
pop
iret
or
sub
ljmp
xlat
outsb
in
jg
fildl
push
test
add
mov
cwtl
or
test
add
and
add
mov
cmpsl
scas
sbb
xor
mov
and
mov
pop
fists
in
push
cmp
add
add
mov
adc
negb
mov
gs
dec
loop
mov
mov
daa
out
sub
push
inc
movsb
xchg
mov
mov
xor
inc
dec
popa
dec
jg
jns
jnp
jecxz
add
incb
arpl
jp
int
das
mov
add
dec
lcall
jg
test
add
jo
mov
cli
dec
repnz
aam
xchg
or
xor
shll
sub
mov
std
mov
lea
test
lds
and
mov
fnstsw
jecxz
std
addr16
cmpsb
addb
lahf
inc
push
sbb
imul
add
mov
push
das
add
popf
inc
jg
xor
mov
out
popl
add
jnp
push
sbb
add
and
fs
add
subl
and
mov
ss
fcoml
xor
mov
add
jns
sbb
mov
test
cltd
or
jae
push
jp
add
push
cmp
pop
pop
mov
add
in
lret
sub
mov
add
xor
push
addb
jb
mov
data16
adc
mov
sbb
rolb
mov
mov
popa
xlat
xor
mov
mov
scas
xor
mov
fsubs
and
mov
add
test
or
popf
mov
out
pinsrw
mov
stos
je
add
xlat
sbb
dec
dec
cmpsb
xor
lock
push
xchg
add
sub
mov
sti
pop
xchg
mov
jle
ds
int
outsl
test
mov
add
scas
push
out
in
mov
add
push
cmc
fsts
mov
imul
clc
jmp
add
mov
cmp
test
cmp
in
xchg
dec
int3
mov
in
sbb
xchg
add
and
insb
push
cmp
outsl
push
aaa
das
xorl
jns
cmp
cmp
movsb
ret
jne
mov
mov
push
cmp
add
mov
inc
mov
or
add
cld
inc
add
add
mov
aaa
xor
inc
push
dec
xchg
sahf
inc
dec
push
mov
mov
lret
sbb
add
cli
imul
imul
adc
mov
adc
mov
push
add
mov
loope
pop
lahf
mov
rolb
mov
leave
int
dec
test
mov
cmp
xlat
popa
decl
inc
xor
outsb
jecxz
add
pop
mov
mov
add
cld
outsb
div
mov
ffreep
add
jno
push
mov
lret
outsb
xor
sbb
mov
cmp
add
or
mov
push
bound
mov
xchg
int3
pop
mov
push
nop
add
pop
dec
mov
jbe
adc
mov
repz
ficompl
lret
int
xchg
int3
and
push
mov
ljmp
mov
mov
pop
sbb
or
outsl
jae
add
inc
jb
mov
mov
cmpsb
jno
lret
push
add
mov
pop
push
add
fcomps
mov
mov
mov
inc
inc
add
leave
and
scas
test
std
jecxz
add
mov
mov
insb
outsl
lock
and
cli
je
rolb
insl
stos
stc
pop
imul
add
xor
mov
cld
aam
jmp
ds
xchg
scas
jne
add
add
mov
fcmove
mov
add
jl,pt
nop
add
pusha
add
in
gs
add
ret
out
ljmp
aaa
cmp
and
mov
jo
mov
inc
rdmsr
add
and
mov
test
push
cltd
fistl
jne
je
cld
insl
and
test
cmp
ret
rolb
mov
ret
dec
pop
lcall
add
inc
add
repnz
xchg
add
and
mov
add
cmp
mov
add
mov
mov
add
push
roll
popf
push
insb
mov
mov
test
inc
mov
ja
inc
add
out
ficompl
repnz
and
push
and
xor
add
add
test
add
fnstsw
loop
mov
lret
fldl
add
add
dec
xor
push
mov
in
adc
pusha
add
push
and
mov
push
dec
es
mov
add
data16
jae
or
push
jmp
add
inc
pop
inc
das
cmpsb
or
mov
loop
mov
mov
sub
sbb
mov
add
pop
xor
aas
outsl
fs
jmp
int3
mov
add
and
mov
add
ljmp
sbb
stos
je
les
mov
out
lods
cmc
push
ds
sub
mov
add
mov
mov
pop
pop
shrl
add
mov
enter
jno
rolb
mov
adc
mov
xchg
xor
popf
das
sub
cmp
cmp
mov
dec
ds
adc
mov
fcoms
repz
xchg
xor
mov
mov
sub
in
mov
outsb
cmp
xor
mov
cltd
rolb
mov
xchg
add
or
mov
xchg
dec
out
lret
idivl
dec
inc
pop
mov
push
inc
add
mov
inc
shrl
xor
mov
mov
loopne
mov
or
cli
inc
adc
mov
lds
mov
mov
xor
lock
mov
add
mov
or
push
add
mov
add
mov
sub
ds
dec
cmp
je
mov
adc
adc
insl
mov
adc
mov
adc
ja
or
mull
add
mov
es
mov
inc
out
adc
stos
jl
mul
lret
cmp
add
pop
push
scas
and
mov
pop
mov
lret
add
inc
add
mov
or
lea
pop
adc
mov
sbb
insl
jl
mov
sahf
das
xchg
adc
mov
add
or
loopne
mov
add
add
out
jle
fstl
mov
jns
mov
mov
sub
add
mov
mov
icebp
pusha
add
jp
std
fisubl
push
sub
push
jo
mov
push
add
mov
mov
cmp
fs
in
iret
sbb
data16
lock
push
add
mov
je
add
pop
inc
and
mov
sti
add
mov
testl
mov
pop
cmp
add
add
sub
cmp
xchg
mov
mov
sti
xlat
aad
negl
int
pop
mov
insw
or
lea
mov
mov
data16
jae
mov
xor
data16
fidivrl
add
std
xor
mov
mov
out
repz
pop
aam
and
add
std
mov
fs
movsb
lahf
bound
mov
dec
xor
mov
fwait
mov
mov
pop
loope
loopne
mov
aaa
cmp
pushf
cmc
stc
out
popf
sahf
inc
xor
ficompl
mov
enter
or
ss
loope
outsl
int
add
add
push
add
shrl
lret
pop
xor
mov
or
add
fistpll
pushf
leave
cmpsb
loope
jnp
add
pop
push
push
lea
adc
add
aad
push
sub
dec
inc
test
add
outsb
jl
cmp
test
or
add
lock
dec
addb
inc
pop
test
fdivrl
add
nop
add
iret
outsb
push
mov
push
sub
inc
insl
xchg
iret
sbb
sub
int
call
mov
cli
loope
xchg
je
add
cmp
bound
mov
lock
dec
outsb
sahf
sbb
rolb
mov
out
mov
fcomi
fstpl
daa
aas
out
mov
cltd
cli
out
dec
pop
sahf
adc
mov
sub
rolb
sbb
add
xchg
rolb
scas
pop
pop
aas
mov
xchg
hlt
xor
inc
xor
mov
add
rolb
xor
mov
dec
push
xchg
jnp
add
test
mov
mov
lock
mov
cmpsl
cmp
dec
popf
jge
push
ljmp
lcall
add
mov
pop
fists
movsl
pop
out
add
into
rcl
mov
push
pop
addr16
jno
or
cmp
sbb
mov
mov
scas
cmpsl
push
mov
mov
inc
xor
out
mov
add
cmp
mov
and
in
jmp
push
repnz
mov
add
test
insb
jne
rolb
mov
dec
pop
or
addb
ja
mov
dec
lock
add
add
aas
or
insb
push
jbe
int
mov
mov
add
jecxz
add
loope
add
notb
adc
add
xchg
and
mov
xchg
push
cmc
inc
out
mov
fwait
or
or
movsb
mov
add
inc
jns
test
adc
cmp
or
lahf
aad
cmp
dec
addr16
add
mov
add
repz
out
sarl
add
mulb
into
int
or
call
xchg
jmp
mov
rolb
outsb
cmp
fldt
push
insl
data16
fcmovu
test
mov
inc
add
jae
xchg
ret
add
push
cltd
hlt
fiaddl
mov
xor
sub
in
jle
in
out
dec
xlat
push
xor
push
add
and
mov
loope
adc
mov
pop
popf
lret
cli
jo
mov
cmc
jnp
add
adc
pop
mov
mov
fadds
movsb
cmp
adc
mov
ficoml
push
add
xor
bound
mov
cmp
dec
or
add
mov
rolb
pop
sub
dec
xchg
jmp
bound
mov
inc
jne
and
mov
lcall
scas
adc
rolb
mov
mov
into
mov
and
leave
not
dec
notl
add
add
add
xor
push
insb
leave
cmp
in
gs
adc
testl
fwait
aaa
andl
push
sub
mov
sub
xchg
mov
add
sti
pop
sti
aaa
sbbl
lret
adc
es
dec
aaa
imul
push
fistpl
pushf
xchg
jb
mov
cmp
icebp
sahf
arpl
add
mov
mov
out
adc
mov
add
ja
or
push
fldl
das
sbb
xlat
je
add
cmpps
dec
mov
mov
mov
enter
mov
je
in
mov
mov
mov
add
push
or
out
xchg
in
dec
in
mull
mov
adc
pop
push
add
dec
mov
mov
dec
cld
addb
addr16
in
les
lods
xchg
pop
xchg
push
out
xor
mov
pxor
in
int
cs
test
add
xchg
jne
outsl
push
repnz
cmp
add
add
aad
test
push
iret
and
xor
iret
lahf
addb
idivb
lods
xchg
pop
mov
mov
add
jnp
xorl
push
mov
xchg
mov
pop
loopne
mov
add
and
dec
sub
cmpsl
sub
mov
sbb
clc
dec
xchg
std
xchg
jns
add
sbb
mov
shll
sub
inc
pop
outsl
scas
add
out
add
jmp
fcmovne
outsl
dec
adc
cli
sbb
xor
rolb
mov
inc
movsl
pop
addb
je
xor
add
jp
movsl
mov
cli
inc
das
add
mov
add
jb
mov
mov
add
mov
sahf
out
scas
pop
inc
cmp
adc
loop
mov
mov
add
push
aas
imul
xor
call
mov
sbb
sub
add
movsb
test
add
add
xor
mov
rcr
xor
push
add
out
imul
pushf
loopne
mov
add
push
sub
and
cmpsb
adc
jle
imul
outsl
inc
mov
aas
mov
xor
mov
mov
add
fs
push
in
fistps
cmp
leave
push
dec
cmp
dec
dec
das
dec
cmc
cmp
mov
rorl
or
cwtl
js
add
mov
add
add
lcall
xor
mov
mov
add
imul
repz
mov
mov
decl
out
and
mov
inc
lods
loop
mov
std
pop
cld
lock
jo
mov
add
jno
push
sub
ret
xlat
jl
push
mov
mov
cwtl
test
movsb
inc
xchg
les
xchg
xchg
sbb
sbb
add
fnsave
rolb
mov
push
dec
jb
mov
fwait
das
xor
adc
mov
mov
pop
push
dec
xchg
outsb
orl
mov
add
add
xchg
imul
mov
push
in
cltd
or
xchg
add
jns
and
add
stos
movsb
test
add
icebp
imul
mov
add
adc
mov
fsubs
clc
imul
rolb
mov
add
stos
push
xchg
mov
mov
sbb
dec
or
add
mov
repz
xor
mov
add
mov
rep
jle
dec
data16
dec
fcomps
inc
or
daa
bound
mov
xor
jae
or
xor
mov
cld
mov
rolb
mov
mov
add
jmp
mov
mov
xchg
add
sub
add
jnp
xchg
iret
inc
das
arpl
mov
add
mov
mov
add
xchg
das
dec
mov
jno
test
jbe
add
or
pop
pusha
add
fs
mov
imul
pop
in
mov
inc
add
xchg
dec
imul
outsl
out
test
das
cmp
imul
ljmp
mov
pop
mov
dec
mov
pusha
add
aad
mov
mov
mov
inc
btr
dec
cmp
mov
int
add
aaa
imul
mov
add
test
repz
mov
add
das
in
inc
lret
repnz
pop
push
mov
mov
sub
loope
in
add
mov
mov
mov
loopne
mov
mov
and
mov
push
pop
fwait
inc
add
mov
jp
mov
adc
sub
add
mov
jg
adc
fwait
imul
enter
pushf
lcall
loop
mov
mov
fcmovb
add
xor
mov
arpl
adc
sbb
dec
xchg
add
daa
push
rcrl
push
add
cltd
jp
sub
xchg
out
push
aam
imul
xchg
add
test
push
sbb
daa
or
arpl
and
mov
repz
add
mov
mov
rcrl
dec
pop
ret
mov
mov
ret
lods
loope
jae
loop
mov
dec
loope
shrl
adc
rolb
mov
pop
pushf
orl
cmp
ja
xchg
bound
mov
pop
mov
pop
cmc
sbb
jo
mov
xor
mov
arpl
cmpsb
ljmp
pop
rolb
mov
add
mov
ret
in
dec
mov
push
scas
adc
push
mov
add
mov
mov
xchg
add
jo
mov
mov
imul
add
push
add
mov
and
mov
data16
out
pop
popf
inc
add
mov
xchg
std
xor
js
lds
icebp
stos
sbb
repnz
cltd
outsb
out
int3
sub
sub
cmp
mov
mov
movsb
cmp
rolb
mov
adc
mov
lret
mov
fists
mov
add
negl
sub
mov
dec
and
mov
jbe
pop
arpl
add
pop
mov
addb
aaa
push
pusha
add
mov
insb
dec
push
cmp
add
push
and
jecxz
or
cmp
nop
add
add
mov
add
insb
inc
add
add
inc
in
fs
fs
add
add
lret
cmp
sbb
xor
mov
inc
xchg
add
insb
fadd
rolb
mov
in
stc
hlt
sahf
into
xor
mov
add
mov
mov
push
add
add
das
pop
pushf
lret
jns
mov
adc
mov
push
jge
sub
scas
repnz
mov
xchg
sbb
clc
add
jmp
shll
add
sub
add
add
add
clc
push
add
add
mov
les
add
repz
ds
cs
xchg
cld
sbb
je
and
mov
cli
or
gs
pop
fidivrl
js
push
push
mov
out
or
jae
add
inc
loope
lcall
push
in
repz
mov
cmpsl
je
add
adc
and
add
cld
cltd
js
lret
dec
mov
mov
mov
add
fiaddl
xchg
xor
pop
ljmp
aad
add
in
mov
mov
mov
add
icebp
lret
stos
es
shll
add
mov
test
cld
jmp
out
dec
mov
mov
mov
inc
cmp
fistpll
sbb
jecxz
lock
pop
mov
cmpsb
sbb
rolb
mov
in
jle
daa
mov
iret
ret
xor
push
insb
cwtl
xchg
cmp
cmpsl
insl
ss
dec
cmpsl
aad
push
xor
add
xor
ss
pop
sahf
mov
or
dec
sbb
sub
push
dec
push
sub
or
mov
loopne
mov
iret
push
xchg
adc
add
add
inc
add
out
mov
mov
mov
in
cmp
in
xor
add
xor
rcll
mov
dec
push
xor
xor
inc
add
iret
test
add
add
scas
jno
lds
int3
mov
stos
mov
sbb
xchg
dec
add
jns
rolb
mov
jp
sbb
and
mov
add
outsl
xor
mov
sbb
imul
mov
cmp
lods
cmc
ja
insb
out
das
lret
pop
test
mov
addb
dec
pop
push
and
mov
into
jno
add
stos
push
jg
lds
sbb
rolb
mov
add
add
add
xchg
add
jns
mov
add
add
call
icebp
in
std
xchg
gs
and
sbb
sub
mov
add
add
mov
push
lret
add
add
cmp
mov
shl
imul
mov
repnz
cmc
call
sbb
push
add
std
mov
mov
dec
xor
adc
mov
cmp
pushf
int3
xchg
fadd
add
pop
mov
pop
ret
flds
xor
mov
add
rolb
mov
aam
lahf
ficoml
lds
jp
push
add
cmp
push
hlt
or
adc
add
jnp
repnz
pop
arpl
fldenv
mov
add
add
add
add
mov
rolb
mov
sahf
popf
or
xchg
rep
fisubs
add
gs
outsb
push
mov
mov
mov
repz
pop
or
addr16
mov
mov
pusha
add
push
fcom
push
fwait
sti
cmp
roll
add
js
mov
mov
add
mov
out
adc
mov
mov
xchg
sbb
outsl
imul
leave
jle
popf
popl
mov
mov
mov
pop
fistl
mov
icebp
push
mov
cmp
frstor
add
add
inc
add
lahf
xlat
add
lds
xor
stc
mov
iret
rcll
add
add
push
addb
add
inc
fwait
mov
je
std
mov
fsubs
jae
add
mov
jl
push
dec
xor
jb
mov
mov
addl
adc
push
add
xor
cmp
mov
nop
add
pushf
xchg
mov
loope
add
in
popa
jb
mov
and
ds
xor
sbb
jle
insl
pop
loop
mov
hlt
je
stc
loopne
mov
push
call
fbld
add
stc
sahf
xchg
add
int3
fcmovu
sub
loopne
mov
mov
add
pop
lret
xchg
xchg
ja
mov
xchg
fdivs
mov
add
mov
add
xor
mov
add
add
dec
mov
add
repz
pop
orl
fs
jecxz
jmp
mov
jo
mov
sti
int3
out
in
adc
jns
cltd
or
add
pop
imul
mov
shr
add
add
add
lds
aad
xchg
sub
out
lods
xchg
mov
and
cmovo
mov
mov
add
xchg
test
mov
mov
add
pop
in
cmp
sti
mov
fildll
mov
mov
add
push
jno
xchg
enter
sbb
add
mov
mov
add
xchg
push
add
and
jle
add
ja
mov
add
leave
fildl
test
xchg
fcompl
jbe
add
dec
xchg
inc
std
jbe
rolb
mov
add
shrl
sub
and
xchg
cmp
in
repz
sti
fbstp
add
sahf
aam
inc
add
leave
scas
push
add
jl
es
add
mov
mov
mov
mov
popf
cmc
mov
addr16
fdiv
sbb
nop
add
in
fadds
negb
int
adc
mov
xor
arpl
es
xlat
gs
and
jo
mov
mov
add
lock
cmp
dec
jmp
or
pop
dec
addb
test
test
inc
scas
cmp
add
mov
mov
out
add
mov
xor
mov
adc
add
mov
lret
or
xor
sub
jno
inc
add
cs
hlt
push
push
xor
mov
loop
mov
adc
arpl
xor
push
inc
add
mov
mov
test
or
mov
mov
inc
daa
aad
outsl
dec
movsb
adc
mov
sbb
movl
jmp
add
mov
inc
mov
addb
je
add
add
add
sbb
and
insl
jecxz
int
test
add
cld
in
movsl
les
add
mov
xchg
mov
mov
mov
add
cmp
push
mov
movsb
in
add
pop
cltd
hlt
xor
mov
mov
jnp
xchg
xor
mov
mov
sbb
pop
or
dec
cs
add
pop
out
call
xchg
loopne
mov
push
mov
pop
push
pop
pop
xor
fdivl
mov
pop
idiv
cwtl
fstpt
mov
add
mov
mov
mov
int3
sti
pop
add
mov
jp
fmull
add
fstsw
mov
mov
insb
push
dec
sub
outsb
jg
add
cld
push
pop
addr16
or
daa
sub
sti
mov
ffreep
fwait
push
add
stos
cmpsl
imul
outsl
jge
adcl
mov
shr
xchg
add
mov
mov
ret
nop
add
jnp
aam
mov
mov
lods
mov
and
cmp
lods
and
addb
insb
xchg
xor
mov
pop
rolb
mov
mov
xchg
mov
add
cmp
push
add
mov
mov
daa
les
int3
dec
daa
xlat
popa
mov
mov
dec
ret
sbb
nop
add
dec
dec
cli
push
sub
mov
mov
mov
sub
mov
rolb
mov
add
stc
rcl
hlt
sub
cld
clc
mov
mov
jge
aas
rolb
mov
add
add
push
xor
or
rolb
jno
cmc
mov
push
lret
mov
int
into
or
repz
mov
mov
mov
mov
pop
jnp
or
ret
fmuls
pushw
cli
push
cmp
popa
mov
add
or
dec
lret
out
test
jnp
ss
jns
push
lods
frstor
mov
or
lods
add
mov
rolb
mov
adc
mov
outsb
adc
mov
pop
lret
sub
jg
sahf
imul
ret
mov
add
add
out
decb
movsl
int3
jns
iret
cmpsb
jne
xlat
pop
jp
add
pop
push
and
mov
dec
andl
inc
add
jno
mov
cs
push
and
mov
mov
in
mov
mov
sub
add
sbb
inc
add
lds
mov
mov
and
mov
add
add
rolb
mov
mov
cmp
lods
lcall
nop
add
daa
mov
push
adc
outsl
cmpsl
aas
xchg
pop
arpl
imul
push
cli
pop
mov
jmp
add
xchg
clc
xchg
in
pusha
add
in
mov
pop
xchg
repz
add
mov
test
call
add
mov
insb
lret
in
or
mov
add
mov
mov
add
sub
add
jo
mov
add
jmp
insb
into
jns
mov
iret
cli
int
mov
sub
sbb
add
js
orl
add
mov
das
xchg
xchg
pop
cs
adc
mov
popf
pop
dec
fisubrs
fnstsw
pop
outsb
ret
xchg
add
push
cmp
es
in
xchg
pushf
jo
mov
out
lret
add
jg
andl
lods
mov
bound
mov
nop
add
sbb
mul
add
es
mov
cld
sub
mov
scas
or
add
add
add
out
cld
sub
movsl
dec
imul
cmp
pop
or
test
cli
sbb
int
add
add
dec
add
out
cmc
ss
and
das
cld
dec
popa
call
adc
repnz
or
push
iret
ds
adc
mov
iret
in
dec
mov
xchg
in
scas
lret
shrl
mov
sub
out
fwait
in
mov
add
leave
sub
push
aam
cli
rolb
mov
push
add
push
sahf
adc
mov
add
dec
jmp
into
cmovbe
sub
and
jge
or
popf
add
mov
mov
xor
dec
push
jnp
mov
popf
aam
lock
mov
xor
ja
lods
test
or
aad
add
test
and
dec
inc
add
lahf
pop
mov
add
add
mov
fwait
cmp
je
lret
data16
loope
ljmp
or
insl
mulb
cmc
cs
xor
mov
jb
mov
xchg
add
in
pop
sub
sbb
addr16
mov
xor
mov
pusha
add
and
movsb
add
mov
inc
add
mov
mov
pop
sub
pop
add
cli
rolb
mov
cltd
addl
add
xor
mov
cmp
fld
push
in
outsb
and
nop
add
mov
xor
add
lahf
icebp
popf
adc
mov
mov
and
mov
add
icebp
xchg
add
shll
xor
jg
cmp
jmp
mov
mov
sub
je
inc
add
pop
pop
jo
mov
out
sub
imul
fidivrs
add
add
lahf
aas
xchg
jle
push
push
and
mov
and
repnz
icebp
cmp
or
add
sub
sbb
fidivrs
addb
dec
ret
daa
add
imul
loopne
mov
xchg
add
sub
push
das
and
pushf
popf
lock
inc
add
movsl
fcmovu
mov
mov
sub
mov
das
std
in
fs
loop
mov
add
add
mov
add
iret
test
mov
nop
add
add
scas
fsubrs
insl
dec
out
jns
add
dec
popa
lds
add
lods
outsb
cmp
aaa
lods
shrl
lret
xor
mov
jl
insl
cmc
xchg
addb
xchg
inc
jge
add
cmpsl
push
icebp
pop
cmpsl
mov
mov
roll
fists
add
mov
int3
out
cmpsl
popa
jb
mov
push
cmp
add
repnz
push
mov
rolb
mov
test
xor
test
hlt
dec
xlat
pop
xor
inc
in
mov
dec
dec
out
sahf
mov
lea
rcrl
mov
jge
add
mov
cwtl
cmc
cmpsl
cmp
pop
jmp
mov
leave
pop
fnstsw
pop
mov
jne
push
cmp
imul
lret
mov
scas
and
mov
push
jo
mov
xchg
add
jmp
cli
iret
and
mov
mov
push
ds
push
add
sbb
loopne
mov
jno
sub
lock
xchg
add
add
and
mov
mov
sbb
xor
sbb
xchg
add
add
push
inc
adc
adc
mov
sbb
add
out
incl
mov
lret
or
sub
decl
jecxz
add
and
mov
cmp
and
mov
or
mov
scas
add
mov
sub
std
test
dec
cmp
cmc
nop
add
inc
fistl
loope
mov
dec
test
xlat
into
dec
adc
pop
sbb
pop
dec
and
cli
push
push
jbe
push
inc
mov
ret
xor
mov
in
xchg
add
mov
imul
lock
sbb
dec
outsb
mov
aas
or
and
das
inc
add
push
add
xor
mov
leave
int3
xor
mov
gs
ja
dec
jp
mov
jae
addr16
add
add
mov
adc
mov
jbe
add
aad
daa
push
xorl
push
into
cmp
in
bound
mov
mov
add
lock
inc
mov
cmpsl
div
add
inc
xchg
add
daa
lock
mov
add
fwait
addb
jmp
lods
fwait
and
mov
jne
stos
pop
rolb
mov
push
sahf
inc
push
fcomp
gs
dec
dec
mov
clc
pusha
add
jne
jle
push
call
ret
mov
mov
mov
mov
jmp
lock
ss
adc
inc
add
add
mov
int3
jg,pn
lahf
adc
mov
push
add
cmp
or
push
mov
mov
mov
push
add
inc
xchg
adc
or
inc
fidivs
lahf
outsl
cmp
push
cmp
dec
repnz
clc
pop
jns
aad
cmp
mov
stc
add
mov
insl
popl
xlat
lret
rolb
fsubr
cwtl
sub
mov
fimuls
aaa
mov
enter
inc
pop
sbb
xorl
mov
in
lret
dec
dec
sub
popf
xor
adc
jbe
sbb
js,pn
cmp
jns
jae
and
mov
add
test
mov
ds
cmpsb
out
sahf
addb
push
iret
imul
pop
add
ds
movsl
pop
or
add
inc
sub
add
add
mov
mov
in
cli
aas
std
mov
sub
dec
sbb
insb
in
insl
jae
ss
jl
mov
add
pop
push
inc
sub
fdivr
in
lods
stos
sbb
addb
pop
les
dec
cmp
cmpsb
lock
sahf
out
add
adc
outsl
push
adc
push
pop
push
cmpsb
jno
cs
in
arpl
pop
push
adc
inc
fidivs
mov
lret
xchg
movsb
push
push
add
mov
hlt
cmp
pop
jmp
in
cmpsb
arpl
dec
scas
rolb
or
loope
push
add
add
add
inc
mov
test
add
xchg
xchg
cli
mov
repnz
fs
fldenv
add
pop
inc
dec
mov
fwait
insb
mov
mov
mov
dec
in
into
or
out
mov
cmp
xor
xchg
and
jle
add
mov
cmp
add
add
lods
sub
imul
pushf
jb
mov
test
xor
mov
xor
cmp
xor
mov
decl
shll
call
addr16
push
add
rolb
mov
mov
or
add
xchg
lahf
mov
mov
loope
ret
xor
adc
xlat
sahf
out
xchg
xor
lcall
sbb
rolb
mov
push
mov
jl
push
mov
es
lcall
add
add
or
pop
xchg
push
lcall
out
insl
ss
add
xchg
add
notl
mov
mov
sbb
popf
xor
mov
ret
pop
mov
ds
bound
mov
add
into
enter
adc
mov
push
std
push
ja
stos
hlt
sbb
mov
mov
mov
sbb
out
xchg
or
test
hlt
jns
ljmp
mov
or
scas
stc
push
add
xor
mov
test
pop
push
add
stos
pop
insb
xchg
push
test
add
mov
add
add
inc
mov
scas
and
lods
sub
xchg
dec
sbb
add
mov
add
cmpsb
sub
add
add
cmpsb
ss
add
add
inc
outsl
push
jmp
jbe
pop
sarl
xchg
mov
add
xor
mov
and
add
fstpt
in
aaa
rolb
leave
and
add
mov
or
add
add
inc
in
fidivrs
or
mov
mov
push
int
or
add
in
lea
cmp
fcmovu
cli
cmc
rolb
mov
add
push
mov
sbb
or
push
and
mov
cmp
rorl
mov
pop
push
mov
add
stos
fwait
mov
mov
loope
mov
mov
nop
add
addb
jl
popa
js
movsl
aaa
jno
ja
cmp
pop
cmp
stos
xchg
cmp
mov
or
push
xor
mov
mov
mov
and
pushf
jmp
mov
push
scas
rolb
add
add
hlt
mov
out
stos
rcll
add
pop
js
insb
inc
add
movsl
out
add
sti
sbb
iret
mov
adc
mov
sbb
insb
stos
nop
add
pop
decl
mov
dec
out
addb
mov
push
add
mov
jnp
js
sub
jl
scas
and
mov
pop
iret
in
leave
adc
out
ror
imul
mov
xchg
dec
arpl
clc
cwtl
notl
mov
insb
xchg
inc
and
mov
pop
outsb
inc
add
mov
pop
add
mov
stos
cmp
ficomps
sub
rolb
mov
xchg
add
sbb
push
sbb
add
das
out
mov
add
lds
mov
leave
test
adc
mov
add
mov
inc
frstor
cmpl
test
into
mov
mov
jnp
cmp
loopne
mov
mov
mov
dec
dec
addb
pushf
lret
inc
sahf
imul
std
adc
mov
rolb
mov
add
or
mulb
add
dec
std
mov
mov
and
mov
das
pushf
inc
out
fwait
mov
fnsave
mov
pusha
add
add
addr16
add
stos
icebp
movsb
mov
mov
mov
jg
leave
popf
add
mov
sub
cld
dec
cld
fidivrl
xchg
arpl
pop
xor
jmp
inc
repnz
mov
add
add
xchg
push
xor
test
mov
sub
mov
xchg
pop
int
daa
xchg
mov
add
dec
mov
add
mov
ds
add
pop
pushf
jnp
pop
xorl
mov
sbb
xchg
repz
sbb
test
pop
jne
add
mov
jp
ljmp
rolb
mov
das
lods
dec
pop
stos
jmp
xor
jg
add
outsl
jecxz
push
add
mov
ds
add
pop
and
add
mov
inc
mov
mov
test
mov
sahf
mov
mov
push
in
lds
add
mov
mov
cmpsb
jecxz
add
mov
fistl
mov
stos
test
mov
jne
sub
mov
inc
sbb
sbb
inc
xchg
cmp
lods
fdivrs
test
push
out
sarl
adc
mov
rcrl
mov
int
push
mov
mov
and
mov
nop
add
popf
and
sub
add
add
sbb
sub
mov
into
mov
aam
adc
mov
loop
mov
jnp
inc
lock
scas
aam
add
adc
add
mov
add
mov
cmp
sub
je
cli
addr16
out
mov
push
imul
add
enter
pop
cmpsb
lcall
pop
leave
inc
lahf
or
dec
int3
jbe
cmpsl
mov
add
lods
data16
xchg
out
mov
mov
xchg
aas
jle
mov
adc
mov
roll
jp
fsubr
or
mov
mov
mov
fisubrl
add
outsl
pop
sub
sub
and
mov
jmp
pop
scas
ljmp
pushf
test
ljmp
xchg
or
xor
add
mov
mov
mov
gs
mov
lahf
in
fisubs
add
add
or
dec
pushf
adc
cltd
mov
add
push
mov
in
dec
and
mov
mov
inc
sub
inc
rolb
xor
mov
pop
inc
add
ret
mov
mov
sahf
daa
add
cmp
add
sub
mov
cmp
add
mov
add
cmpsl
add
addr16
in
fstps
sub
popf
rolb
mov
sub
cld
cmp
dec
lods
sub
sub
mov
mov
xchg
add
jg
stos
and
add
out
add
xchg
adc
outsb
push
mov
fidivrl
scas
sbb
mov
add
mov
push
lea
push
out
adc
mov
mov
mov
mov
adc
aaa
add
mov
scas
clc
int3
add
mov
sbb
add
movsl
jno
cmp
or
xchg
add
push
sbb
inc
mov
hlt
xchg
stos
dec
push
adc
mov
add
ljmp
cmpsb
mov
fcomip
cmc
arpl
add
lock
dec
mov
sahf
lret
aas
hlt
cs
pop
mov
and
mov
jg
add
lock
xchg
es
add
mov
push
adc
push
add
add
mov
cltd
jnp
lret
sub
xor
mov
hlt
shr
test
ret
js
add
add
pushf
jp
lahf
jmp
push
jnp
xor
pop
test
mov
je
dec
iret
jns
add
add
mov
jo
mov
cmp
xlat
rolb
mov
inc
pop
dec
pop
mov
push
not
in
les
add
cld
push
xchg
lahf
call
rolb
mov
loop
mov
cli
mov
rolb
mov
add
stc
setl
mov
pop
and
pop
out
adc
sbb
add
mov
jno
mov
mov
mov
arpl
call
or
dec
jne
rolb
adc
jmp
scas
mov
ret
inc
dec
repz
or
add
out
mov
adc
iret
cmpsl
nop
add
insb
into
mov
fistps
bound
mov
adc
cmp
addb
out
push
insl
mov
cli
xchg
aad
clc
mov
mov
mov
mov
add
cmp
adc
mov
hlt
insl
in
es
das
push
cltd
popa
pop
std
insb
mov
mov
mov
sarl
es
mov
rolb
mov
fdiv
addb
push
push
xlat
xchg
cmc
icebp
popa
mov
push
cmp
add
add
mov
out
cmp
add
rolb
mov
fdivl
push
add
dec
xorl
adc
aaa
pop
out
faddl
ficomps
je
ja
in
pop
pop
mov
pop
popf
imul
mov
add
mov
jg
mov
mov
divb
jmp
jmp
in
stos
leave
jg
icebp
mov
add
mov
adc
mov
add
pop
adc
sti
or
addb
jbe
ds
xor
clc
pop
sahf
icebp
sub
mov
add
add
leave
lret
rolb
faddl
add
push
movsb
aas
mov
mov
xor
fstps
fnsave
jp
cs
xchg
roll
call
cwtl
fidivrs
lea
rcrl
or
outsb
jnp
inc
jnp
int3
vpcmpeqb
add
jmp
push
mov
add
lods
and
mov
dec
pop
fildll
mov
cmc
dec
insl
cli
rolb
mov
push
add
xchg
loope
xchg
frstor
xlat
int
pop
add
mov
dec
loop
mov
add
pop
out
cmp
add
mov
add
pop
jns
xor
mov
scas
fstl
mov
loopne
mov
add
cmpsb
out
mov
cmpsl
cld
sub
andl
and
mov
out
addb
add
loop
mov
rolb
dec
rolb
mov
mov
ja
jo
mov
in
xchg
mov
pop
and
mov
ret
rolb
xor
mov
mov
ja
pop
testl
into
cmpsl
inc
popf
outsb
sbb
mov
std
adc
sub
and
push
scas
jae
addb
inc
add
repnz
popf
insb
stos
in
clc
push
test
jp
fcmovnb
add
mov
les
add
mov
lret
xor
in
dec
adc
adc
mov
adc
jns
movsl
jp
jne
add
mov
cwtl
ja
es
divl
roll
sub
pushf
sbb
sub
into
dec
outsl
sub
pushw
and
or
loope
int
jno
mov
jp
sub
xchg
lock
mov
rolb
mov
enter
mov
arpl
add
xor
add
and
mov
mov
pop
in
mov
adc
mov
add
pop
cmp
popa
jne
add
mov
call
sti
adc
dec
scas
or
add
push
add
stc
sub
loop
mov
xor
cwtl
or
cmp
add
fdivl
add
mov
xchg
enter
dec
jns
add
mov
or
pop
inc
mov
cmp
or
add
sbb
loop
mov
add
mov
aad
clc
mov
or
ret
jne
mov
mov
mov
mov
movb
cmpsb
push
add
iret
pop
fwait
aaa
and
pop
and
mov
mov
mov
add
inc
rolb
mov
add
mov
daa
sub
ljmp
inc
push
push
lds
xlat
cltd
mov
cld
push
xor
mov
sub
xor
mov
add
std
pop
and
mov
in
bound
mov
mov
mov
mov
add
data16
add
add
test
sbb
aam
mov
mov
iret
ljmp
cmp
movsb
cmpsb
dec
lcall
sub
pushf
mov
adcl
adc
xchg
iret
fisttps
addb
jb
mov
mov
mov
push
xchg
int3
pop
add
mov
mov
rcrl
sti
lock
or
popf
pop
pop
lock
cmp
add
sbb
sub
dec
lret
popf
sti
ret
inc
add
add
or
xlat
adc
mov
mov
fdivl
and
or
sahf
push
popa
aas
lahf
es
adc
adc
mov
das
fadd
mov
mov
mov
add
push
in
ss
lods
sub
nop
add
add
xchg
div
ss
xchg
int
gs
cli
sub
mov
popf
mov
mov
push
mov
in
ret
shll
xor
mov
xlat
repnz
mov
pop
cmp
add
mov
mov
xchg
fistpl
jne
add
mov
or
mov
pop
or
add
cmc
imull
cld
mull
pop
cmp
lret
add
mov
mov
jmp
add
insb
jno
mov
mov
or
es
fmuls
jmp
ret
sub
xor
jmp
cmp
rolb
mov
repnz
add
cli
cmp
scas
sbb
test
pop
pop
push
adc
insb
fdivs
cmp
fistpll
xlat
adc
mov
scas
mov
add
pop
mov
add
cmp
inc
dec
mov
mov
les
cld
into
jae
dec
stos
and
mov
repnz
mov
add
add
movsb
xor
inc
push
fimuls
xchg
aad
rolb
and
add
mov
rolb
inc
mov
movsb
rcll
mov
daa
jo
mov
shrl
push
mov
cmp
scas
jne
icebp
insb
mov
mov
mov
mov
pop
jno
jns
mov
jno
add
add
sbb
inc
add
mov
popf
mov
jnp
frstor
push
addr16
or
add
sbb
and
mov
and
sahf
dec
insl
movsb
pop
ficompl
inc
addl
pop
push
add
add
mov
lds
add
or
loopne
mov
mov
iret
push
adc
mov
sub
inc
pop
mov
mov
inc
add
mov
add
rcrw
add
xor
pushf
insb
stc
or
mov
lods
mov
hlt
enter
mov
in
movsl
orl
mov
mov
or
call
mov
fs
and
mov
int3
scas
ret
push
popa
xor
jmp
sti
shl
bound
mov
stc
rep
mov
mov
cmp
clc
aaa
mov
push
add
push
arpl
pop
inc
add
mov
fsts
sbb
add
and
rol
and
add
rolb
jne
icebp
sub
mov
pop
add
mov
nop
add
lds
cmp
add
inc
in
aas
ljmp
push
add
popa
cmp
mov
test
add
aam
mov
jae
out
lret
cmp
add
mov
mov
inc
adc
sub
cmp
imul
mov
xor
push
pop
push
add
dec
pop
jb
mov
imul
dec
mov
push
add
jnp
add
inc
add
mov
int3
mov
sub
mov
mov
push
shll
mov
lahf
movb
int3
xchg
add
sbb
and
mov
in
lret
sbb
add
mov
addr16
add
xlat
repz
jmp
popf
inc
adc
mov
mov
ret
xlat
cmpsl
movsl
jae
mov
add
push
out
push
pop
sti
push
test
mov
mov
les
pusha
add
jmp
lock
mov
sub
xor
mov
and
mov
add
lahf
jp
pop
ret
and
mov
stos
jmp
mov
add
add
mov
movsl
mov
mov
mov
outsb
xchg
ds
rcll
idiv
dec
xchg
add
mov
dec
xor
dec
sbb
mov
add
imul
mov
cs
xor
mov
mov
ss
add
xchg
adc
mov
sbb
je
sub
push
cwtl
leave
add
mov
add
mov
sub
mov
stos
or
dec
push
dec
mov
stos
mov
addr16
mov
xlat
jl
mov
out
test
mov
rolb
dec
mov
mov
push
add
lret
mov
cld
inc
ret
lcall
sbb
add
imul
rcll
xor
add
or
jge
inc
add
add
add
dec
in
pop
inc
in
pop
push
add
xchg
inc
add
push
add
add
or
cmp
jns
add
insb
insl
adc
add
add
add
push
add
and
mov
es
je
mov
add
xchg
inc
and
mov
or
add
jns
sbb
test
mov
movsb
outsl
add
mov
sbb
stos
mov
mov
addb
jp
sub
add
addr16
xor
mov
push
in
jecxz
mov
xor
mov
add
std
daa
jne
mov
add
in
push
mov
add
mov
movb
mov
imul
aas
inc
add
gs
aam
loopne
mov
out
add
ds
push
push
adc
xchg
out
mov
jmp
dec
pop
shrl
aaa
icebp
nop
add
pop
push
pop
sbb
mov
cltd
xchg
dec
add
pop
rcll
mov
addr16
dec
add
mov
sub
lods
sbb
out
mov
int3
mov
outsb
insb
nop
add
mov
pop
sbb
push
adc
dec
mov
mov
popf
cwtl
xor
add
icebp
xor
mov
js
add
mov
xor
mov
pop
add
mov
pusha
add
mov
das
ja
inc
int
jp
enter
xchg
insl
loopne
mov
iret
push
xor
aam
mov
mov
add
push
add
bound
mov
inc
cwtl
leave
iret
xor
add
mov
cwtl
aad
adc
mov
mov
mov
pop
xchg
pop
scas
imul
sbb
add
daa
or
pop
sbb
and
add
xchg
lock
rolb
mov
lcall
add
add
mov
add
das
dec
inc
bound
mov
add
addb
inc
dec
xor
popa
jns
mov
scas
adc
mov
inc
out
add
movl
cwtl
adc
mov
mov
rolb
mov
popa
inc
or
lea
out
cwtl
and
adc
test
mov
sbb
ljmp
dec
xlat
pop
push
mov
ljmp
mov
loop
mov
out
rolb
mov
mov
dec
mov
adc
add
xor
sahf
rolb
adc
mov
mov
jp
leave
es
iret
outsb
pop
adc
mov
lds
imul
mov
test
or
or
sub
add
mov
addb
mov
jmp
icebp
int
push
sbb
adc
imul
mov
das
cmpsl
shll
lds
arpl
xchg
mov
mov
cmp
data16
scas
push
std
push
add
lock
mov
mov
add
or
mov
or
xchg
mov
lods
js
mov
ljmp
jbe
sub
std
sbb
xor
mov
roll
add
sbb
aam
lahf
bound
mov
clc
add
fcompl
iret
add
add
mov
xchg
fists
cs
es
mov
mov
xor
add
jns
add
mov
movsb
push
test
mov
xchg
mov
and
clc
int3
add
cmpsl
mov
shrl
icebp
repz
js
rolb
sub
sub
jmp
shrl
sub
pop
es
adc
repnz
xor
shr
mov
out
push
into
dec
push
cmpsb
pop
aaa
mov
mov
dec
das
or
xchg
add
mov
cmp
data16
mov
lods
push
out
add
mov
int3
test
pop
ja
xor
mov
mov
jge
movsl
or
inc
add
jp
mov
mov
loope
dec
inc
add
jmp
sub
jbe
push
adcl
add
jae
int
jmp
imul
nop
add
jecxz
or
xchg
in
imul
ljmp
in
push
dec
ret
dec
rolb
into
std
stos
into
je
pop
pushf
mov
jo
mov
and
mov
add
addb
les
mov
pop
data16
xchg
xchg
mov
add
mov
cli
mov
mov
loopne
mov
jnp
and
mov
daa
cmpsb
dec
xchg
mov
fmull
jbe
inc
shrl
mov
psubd
jno
adc
mov
rolb
mov
pop
mov
mov
lahf
test
lret
pusha
add
xchg
or
push
mov
cwtl
dec
xchg
jp
add
add
out
mov
in
loope
push
or
rolb
and
mov
sub
into
cmp
ds
fadds
sbb
adc
push
mov
sub
loopne
mov
inc
clc
push
int3
lea
rolb
mov
test
xchg
add
push
cmp
push
xchg
adc
dec
sahf
rolb
mov
jmp
lock
fistpll
cs
xchg
or
xor
out
lahf
das
xchg
lahf
in
dec
test
pop
push
push
xchg
stc
push
pop
cmpsb
dec
shl
mov
aas
sbb
add
das
out
add
sbb
aad
mov
mov
xor
push
jg
adc
jl
stos
cmp
call
lahf
movsl
pop
lret
pop
iret
add
cmp
push
aam
adc
incl
into
push
divb
mov
mov
fcoms
aad
mov
add
cs
inc
add
xchg
icebp
mov
adc
mov
add
mov
outsl
testl
mov
out
xchg
xchg
push
dec
jp
sbb
add
push
pop
xchg
cld
lret
lahf
mov
pop
sbb
add
inc
add
push
add
jae
lcall
push
add
mov
ds
out
jne
add
ljmp
add
xchg
mov
add
xor
jne
sbb
or
popf
fs
mov
stos
insl
fsubrp
aas
lock
in
clc
cmc
addb
mov
and
je
sub
mov
mov
add
xor
adc
xchg
xchg
xchg
jae
ss
pop
aaa
mov
lock
lcall
mov
icebp
jno
pop
js
cmp
fwait
dec
cli
jno
sub
arpl
mov
or
inc
sbb
inc
clc
hlt
jno,pt
test
push
add
mov
push
iret
or
repz
pop
sti
xor
cmp
int3
shll
test
add
arpl
sti
jne
xor
mov
in
pop
cmp
add
xor
or
cmp
xor
shrl
xor
sub
aam
cmp
lock
jecxz
repz
mov
roll
mov
adc
mov
stos
icebp
scas
jo
mov
mov
add
pop
scas
push
push
sbb
cmpl
add
push
adc
mov
or
je
rolb
mov
pop
enter
jae
lahf
insl
shll
sbb
xor
mov
mov
ja
push
addr16
cltd
xlat
mov
cmp
in
sbb
or
nop
add
or
add
push
pop
sbb
loop
mov
xor
sbb
outsl
inc
mov
sbb
add
pop
add
mov
imul
inc
imul
mov
cmp
xor
fdivrs
add
test
inc
repz
push
and
mov
rcrl
fwait
mov
mov
push
pop
js
int
cld
and
mov
mov
js
add
jne
ljmp
mov
xor
sbb
fists
add
add
mov
or
add
mov
mov
mov
or
or
mov
add
add
adc
movsb
mov
rorl
in
ljmp
add
add
rolb
mov
jg
mov
xor
add
adc
or
push
add
mov
cs
add
push
add
out
int
lcall
cmp
add
mov
clc
mov
add
cvttps2pi
add
sti
add
mov
mov
test
or
sub
in
cmpsl
int3
imul
adc
cmp
mov
cli
mov
popa
dec
or
fwait
cs
add
pushf
lret
or
stos
sbb
add
cmp
add
add
in
addb
jecxz
lret
adc
sbb
nop
add
pop
hlt
lods
adc
mov
mov
fdivl
test
add
pop
dec
jl
add
mov
outsl
popf
jecxz
add
add
movsb
jo
mov
xor
push
lock
cmp
add
loope
and
mov
dec
fxch
dec
orl
cli
mov
mov
stc
stc
aas
add
add
inc
add
fimuls
xor
add
mov
push
xor
mov
mov
ss
jmp
movsl
movsb
mov
mov
jne
sub
or
add
sbb
mov
sbb
lds
push
add
jecxz
aaa
xlat
pop
fcmovbe
in
dec
data16
adc
mov
push
arpl
mov
xchg
cmp
add
ret
cmp
bound
mov
and
add
add
add
call
jne
mov
in
jle
repnz
dec
test
add
mov
in
sbb
es
mov
mov
icebp
sbb
mov
add
in
sbb
cwtl
pop
pop
daa
xchg
ds
mov
mov
mov
cmc
fcompl
rolb
add
mov
inc
lcall
add
add
push
add
es
dec
xchg
popa
popf
lods
sbb
or
sbb
test
push
add
add
cmp
dec
mov
push
add
mov
or
jne
add
add
bound
mov
add
rolb
mov
data16
fmull
or
cmp
adc
mov
cs
js
fldcw
add
into
std
inc
mov
in
jbe
pop
sbb
push
or
addb
inc
inc
rolb
mov
mov
push
adc
sbb
aas
orl
push
add
xlat
mov
aas
add
mov
mov
sub
cmp
cmp
mov
daa
mov
inc
sbb
cmp
add
insb
rolb
mov
lret
mov
mov
cmpsl
addb
mov
mov
test
mov
add
add
mov
lds
or
add
adc
mov
xor
mov
repz
add
adc
mov
add
mov
mov
inc
inc
pop
out
out
inc
add
add
add
loope
push
jno,pn
jnp
pop
mov
cmp
add
leave
sub
jle
sbb
add
jo
mov
loope
pop
inc
enter
stos
adc
add
cmp
divl
xchg
ja
shll
add
cmpsl
jbe
cmp
and
mov
loop
mov
cmpsb
jge
pusha
add
rcrl
mov
push
or
testb
dec
leave
lds
in
addb
cld
mov
cwtl
pop
dec
scas
int3
enter
iret
ja
xchg
add
lcall
cmp
inc
in
or
mov
xor
mov
mov
scas
dec
xchg
int3
sbb
cmp
mov
mov
popf
dec
or
repnz
addr16
dec
insl
and
mov
mov
add
cld
pop
scas
stc
pop
adc
mov
jb
mov
repz
inc
xchg
aad
aad
mov
add
fsubr
pop
test
push
or
sbb
add
dec
lcall
lds
pop
sbb
add
add
push
push
pop
push
loop
mov
mov
sbb
mulb
mov
mov
jbe
mov
push
push
xchg
add
sahf
sbb
lahf
push
jp
in
mov
lret
inc
add
add
sub
mov
add
mov
mov
mov
add
jg
mov
inc
add
add
mov
les
inc
add
mov
xchg
sub
imul
dec
loope
mov
xor
mov
xchg
lock
add
mov
into
pushf
jecxz
dec
out
xor
popf
in
inc
pop
leave
repz
cmpsb
xchg
add
add
lds
add
mov
mov
enter
dec
xor
jge
and
xcrypt-cbc
cmpsl
adc
mov
imul
dec
inc
add
dec
xchg
les
adc
push
int3
add
mov
mov
nop
add
push
or
mov
mov
xor
mov
rcll
xor
mov
addr16
pop
loope
add
mov
in
xchg
lret
mov
pop
inc
testb
push
int
test
ret
loop
mov
xlat
dec
mov
push
push
fnstcw
add
fsubrs
add
and
sbb
xlat
xor
mov
add
pop
test
jmp
shr
sbb
sbb
pop
loop
mov
and
mov
mov
movsl
addr16
repz
stos
mov
lahf
ffree
add
add
mov
out
lods
inc
add
add
add
nop
add
sub
cmp
pop
mov
mov
and
jne
sbb
and
mov
add
dec
int3
lcall
movsl
jo
mov
add
pusha
add
or
das
insl
xchg
lods
mov
mov
add
mov
jne
filds
int
add
jo
mov
dec
das
lods
cli
xchg
and
mov
cmp
mov
sub
cmp
dec
mov
das
xor
inc
add
cmpsb
sbb
pop
negl
stc
dec
mov
cmp
push
cmp
mov
jl
rolb
or
add
add
add
push
lods
add
mov
popf
sbb
push
aam
add
loopne
mov
loopne
mov
mov
pop
shll
pop
movsl
stos
hlt
cmp
add
pop
sarl
ficompl
dec
pcmpeqw
popf
add
mov
mov
and
mov
pop
cmc
mov
aam
pop
adc
outsl
fstpl
mov
add
imul
mov
insb
cmp
mov
add
mov
add
mov
mov
aaa
cmpsl
fistpll
add
ja
mov
mov
scas
fildll
or
sti
cmp
push
pop
push
nop
add
cmpl
push
mov
add
add
rolb
mov
sahf
in
push
lret
inc
and
jp
int
aam
push
jnp
cmpsb
sbb
add
jg
mov
enter
ja
add
adc
mov
add
add
je
add
mov
xchg
jno
sbb
fstpl
add
add
jb
mov
mov
mov
imul
pop
sbb
outsb
jp
out
xchg
stc
mov
mov
mov
mov
mov
and
mov
add
cli
cmpsl
fsubl
mov
adc
mov
loopne
mov
aam
mov
sub
adc
rolb
mov
ds
add
sbb
pop
movsb
testb
pushf
test
fbstp
add
mov
mov
movsb
enter
sbb
popf
sbb
mov
pextrw
addb
xlat
xor
push
ss
inc
mulb
mov
jmp
sub
mov
add
xchg
push
sbb
les
shll
add
iret
cmp
sbb
mov
push
add
xchg
pop
pop
push
push
in
ss
mov
add
dec
aaa
push
add
arpl
outsb
dec
xor
dec
mov
cmpsb
add
mov
popa
xor
mov
add
add
xor
sub
mov
mov
sub
add
outsb
fnsave
repnz
out
std
jmp
sbb
add
push
xor
mov
in
call
pop
sti
pop
cmc
outsl
mov
inc
cmc
std
lods
int
add
dec
mov
xchg
or
dec
test
sbb
jl
cld
dec
pop
inc
pop
mov
xor
mov
mov
xor
pushf
arpl
mov
int3
fidivs
mov
add
mov
mov
mov
xchg
ud1
add
mov
mov
jl
add
pminub
add
iret
jb
mov
add
add
mov
dec
adc
mov
inc
pop
rolb
mov
add
fwait
mov
adc
add
or
sbb
cmp
addl
lods
pop
addb
cmpsl
dec
icebp
jle
xor
mov
dec
rcrl
mov
adc
push
pop
lods
out
das
add
addb
ja
lahf
mov
jo
mov
add
push
ja
xor
dec
iret
cmp
rolb
mov
cmpsl
or
add
add
adc
lret
scas
movsb
push
les
dec
into
test
in
sbb
or
iret
pop
test
cs
jae
add
mov
add
ret
movlps
mov
add
inc
add
xor
jns
xchg
clc
scas
scas
sub
int3
dec
in
mov
shll
mov
in
dec
xchg
hlt
and
or
mov
or
add
jge
cmpsb
outsb
sbb
bound
mov
sub
jnp
scas
pop
dec
into
dec
pop
stc
xchg
dec
imul
insb
sbb
test
jl
jecxz
push
std
daa
pusha
add
ljmp
lret
lods
or
and
adc
mov
jbe
in
cwtl
sbb
xchg
add
pusha
add
fs
or
mov
cmc
iret
mov
add
addr16
add
fcmovnbe
rolb
mov
rorl
cmp
ja
jmp
out
push
dec
mov
xchg
mov
xor
mov
rolb
mov
aam
ljmp
dec
jnp
add
mov
cli
cmpl
add
dec
lea
fwait
xor
sbb
adc
adc
mov
and
mov
and
mov
shl
jno
mov
add
cld
mov
mov
and
clc
add
mov
add
mov
gs
cmp
cmc
cs
pop
lods
lea
push
mov
push
fcoms
mov
mov
int3
xchg
pop
adc
mov
mov
mov
adc
or
jl
add
mov
addb
dec
jl
xor
mov
add
add
add
icebp
mov
mov
jb
mov
daa
ret
mov
nop
add
mov
aam
add
pop
cmp
add
mov
bound
mov
add
out
or
mov
movsb
hlt
out
int3
mov
sbbl
pop
jne
hlt
push
jecxz
mov
inc
add
add
in
sahf
aaa
outsl
repnz
mov
sbb
jb
mov
xchg
cltd
scas
rol
cld
mov
and
gs
jnp
mov
add
mov
xor
and
andl
sar
into
cwtl
jmp
inc
add
addr16
or
mov
mov
loopne
mov
fwait
pop
std
xchg
fisttpll
stc
sub
add
iret
hlt
scas
addb
push
outsl
jnp
aas
pop
idiv
jbe
enter
mov
pop
cs
fldt
pop
inc
add
mov
mov
fdivl
lcall
popa
hlt
insl
arpl
mov
jmp
pop
sbb
cmpsb
int
add
lods
lcall
sub
add
pop
rolb
daa
or
add
fneni(8087
add
std
je
add
mov
out
cmp
mov
dec
sub
push
cmp
int3
sahf
xchg
cmp
addb
push
add
add
ja
insl
ds
addb
add
add
xchg
sahf
add
imul
xchg
push
dec
add
mov
add
mov
push
outsl
mov
cmc
bound
mov
adc
push
add
jge
push
add
inc
add
fisttpll
mov
cmp
mov
mov
scas
xor
sub
inc
inc
outsb
inc
sbb
inc
pop
sub
aaa
xor
mov
add
push
enter
lock
sbb
repz
sub
add
mov
mov
dec
pop
leave
lods
pop
jecxz
fisubrl
add
jnp
and
mov
add
fcomi
stos
dec
addr16
cmp
sbb
mov
add
mov
lock
inc
call
jecxz
add
cmp
fldenv
sub
iret
pusha
add
push
add
sbb
push
or
push
shll
rolb
mov
pop
mov
mov
icebp
aas
aam
xchg
mov
iret
fmuls
mov
mov
add
mov
mov
or
add
adc
mov
mov
stos
mov
sub
jne
cmpsl
je
pop
js
pop
ljmp
or
add
add
cld
cli
mov
mov
jp
add
add
mov
mov
and
nop
add
mov
mov
jmp
push
out
flds
mov
sub
xor
mov
adc
pop
hlt
push
mov
jl
add
das
push
xorl
add
add
fidivrl
and
mov
sub
push
addb
push
aam
and
testl
pop
or
jge
scas
xchg
das
dec
sub
push
es
idivb
data16
mov
lds
mov
jle
mov
repz
scas
std
addr16
rcl
mov
insl
push
into
ljmp
mov
add
fsubp
sbb
loope
jmp
push
inc
adc
divb
xor
xlat
push
pop
and
mov
push
jle
mov
add
add
add
dec
dec
imull
stos
outsl
xchg
or
xor
mov
in
mov
outsl
push
mov
mov
cwtl
and
jp
mov
cmp
adc
push
or
mov
add
neg
mov
add
add
pop
dec
xchg
das
cli
xor
pop
jp
mov
mov
xchg
mov
xchg
test
outsl
or
mov
push
sub
add
and
jae
gs
xchg
clc
inc
sub
pop
fnstsw
rolb
mov
inc
add
ljmp
add
add
loopne
mov
aam
pop
call
sbb
xor
mov
xor
mov
lret
mov
mov
mov
fisttps
mov
test
add
setns
into
fdivr
cvtpi2ps
pop
pop
out
xor
fldcw
pop
sub
or
add
addl
outsl
mov
ret
popf
scas
nop
add
cmpsl
popf
xor
mov
add
mov
imul
mov
push
in
addb
mov
pop
ret
ljmp
xchg
mov
add
das
pop
icebp
push
fbld
scas
loope
je
fwait
int3
lret
jbe
imul
mov
adc
bound
mov
xchg
loop
mov
pop
cmp
pop
xchg
popf
push
popl
adc
pop
push
jmp
push
add
mov
mov
add
js
cmp
fidivl
mov
xchg
sub
add
add
dec
xchg
add
in
loopne
mov
push
mov
xlat
and
mov
movsl
mov
loopne
mov
xor
push
push
cmp
add
add
cmpsb
xchg
icebp
cs
in
pop
mov
mov
dec
xor
movsl
jns
jle
aam
cmp
add
mov
pop
jmp
adc
mov
add
pushf
std
and
pushf
pop
testl
inc
adc
push
pop
pop
mov
xchg
mov
popl
mov
add
jmp
fs
jns
stc
jg
cmpsb
stc
into
fcompl
push
cli
xor
std
cltd
jecxz
add
mov
sub
jg
add
rcrl
xor
mov
or
jno
aas
lcall
add
mov
dec
inc
int3
add
mov
out
bound
mov
cs
adc
aas
bound
mov
add
fsubp
sub
insb
cmp
adc
cmpsb
sti
out
xor
mov
add
add
add
jns
call
pusha
add
jno
rolb
into
inc
movsb
iret
lock
or
add
mov
bound
mov
mov
test
xchg
dec
xor
mov
xchg
std
sub
scas
fs
cwtl
sahf
inc
add
sbb
and
mov
dec
pushf
jne
xchg
xor
add
and
mov
cmp
xchg
or
jg
add
mov
mov
bound
mov
or
add
add
leave
movsl
and
mov
mov
in
sub
cmp
xor
in
push
fisttps
or
push
add
mov
pop
xor
jecxz
enter
and
add
add
add
mov
mov
jge
inc
rolb
mov
mov
es
add
mov
adc
mov
stc
xlat
dec
cmp
cmp
mov
into
outsl
and
test
mov
mov
mov
loopne
mov
add
jae
add
test
lods
dec
xchg
rolb
mov
add
mov
pushf
mov
inc
sub
jle
push
mov
addb
hlt
push
and
inc
add
adc
mov
adc
aaa
rcll
mov
mov
xchg
add
mov
int3
sub
mov
repz
rolb
mov
sub
pop
mov
sahf
pop
out
add
xchg
loope,pt
mov
cmpsl
sub
push
add
mov
lcall
mov
mov
push
divl
cld
push
xchg
mov
lret
mov
push
adc
mov
sti
gs
push
sub
xor
mov
cmp
mov
xor
add
and
sti
sbb
add
pop
bound
mov
dec
jne
inc
push
xor
mov
scas
sti
je
mov
mov
adc
dec
lods
dec
mov
js
jmp
add
mov
add
push
cmp
add
mov
xchg
aad
sahf
mov
pop
sbb
mov
in
aad
mov
je
add
nop
add
bound
mov
xor
mov
add
fdivrl
imul
rcrl
rorl
sti
clc
or
or
push
mov
daa
daa
in
scas
fbld
xchg
iret
pop
or
lret
enter
dec
pop
inc
add
mov
adc
mov
mov
mov
xor
mov
cmp
ds
jne
mov
mov
mov
arpl
add
mov
mov
sub
xchg
or
jbe
inc
jb
mov
mov
addb
rolb
mov
mov
ficoms
push
outsl
cli
push
lahf
mov
mov
mov
or
movsl
call
dec
popf
lods
scas
addb
fisubs
xchg
arpl
out
leave
dec
addl
mov
add
es
pop
cmp
out
cmp
sbb
and
mov
add
mov
rolb
mov
add
gs
test
inc
es
and
mov
add
das
addb
cld
lret
fs
mov
mov
stos
and
lret
xchg
adc
mov
jno
push
mov
mov
ret
and
pop
adc
loopne
mov
clc
aas
dec
bound
mov
gs
shll
and
ficoms
add
insl
lret
insl
pop
pushf
sub
add
push
dec
push
add
scas
scas
and
mov
pop
out
mov
into
aad
sbb
mov
loope
mov
xor
mov
ja
aad
in
jl
xchg
add
push
push
popa
sbb
dec
cmpsb
inc
adc
xchg
add
push
pop
xchg
das
cwtl
shll
jmp
out
dec
jb
mov
outsl
cmp
add
mov
incl
int
sub
aam
incl
inc
xchg
adc
mov
cwtl
dec
jo
mov
cli
sahf
or
fsubs
adc
add
data16
jg
pusha
add
add
add
add
jne
jl
int3
adc
mov
dec
jecxz
mov
mov
adc
mov
mov
test
add
or
cmp
mov
jmp
push
add
mov
push
cli
jp
add
outsb
push
movsl
ds
and
mov
js
mov
fsubrs
arpl
rolb
mov
mov
sub
sub
cmp
xchg
negb
pop
mov
add
and
mov
xor
inc
lock
inc
in
mov
scas
cmp
or
mov
jb
mov
sub
jno
add
out
lea
jle
dec
out
inc
add
add
add
jnp
fldt
mov
jns
insb
inc
add
xlat
pop
out
and
mov
add
inc
xor
add
idivl
rolb
lods
movsb
imul
and
movsl
and
add
add
rolb
mov
add
dec
and
mov
or
cs
add
add
cmp
jnp
imul
aaa
push
mov
mov
adc
xor
xchg
int
or
push
add
mov
mov
dec
test
cli
jbe
scas
rolb
mov
ja
cli
into
pop
lahf
aas
push
testl
sbb
mov
lret
sbb
idivb
mov
aaa
stos
xor
mov
mov
mov
add
pop
out
lds
lret
test
pop
ja
add
scas
les
ret
pop
mov
add
mov
out
pop
add
arpl
addb
sbb
rolb
mov
into
add
paddsb
add
dec
jmp
in
dec
sbb
ja
lods
mov
data16
lock
or
add
xchg
mov
shll
mov
faddl
out
fsin
or
pop
std
mov
mov
sarl
outsl
or
add
mov
push
fiadds
mov
push
xchg
cmc
xchg
rolb
mov
ret
aam
xchg
iret
and
aad
dec
test
add
push
jo
mov
mov
add
call
add
icebp
div
cld
out
xor
popf
pop
es
fwait
push
adc
mov
out
scas
add
lds
mov
int3
repnz
es
rolb
sub
mov
or
testb
pusha
add
pop
inc
inc
add
mov
mov
sbb
xor
lahf
lock
mov
jns
mov
xchg
push
lcall
addl
mov
out
notb
xchg
sub
jl
add
push
lods
in
xchg
rolb
mov
mov
add
pop
vpsadbw
push
enter
cmp
pop
in
scas
push
mov
add
mov
hlt
jnp
insl
mov
xor
add
inc
rcrl
mov
add
out
fidivl
mov
enter
pop
das
jnp
add
mov
xchg
inc
or
xor
adc
mov
ficompl
jns
loop
mov
enter
and
add
pusha
add
fbstp
mov
push
add
add
das
cmp
int
sbb
aad
repnz
imulb
cmc
stc
addb
mov
loop
mov
mov
or
and
jg
aaa
xor
mov
mov
pop
out
add
adc
outsb
cmp
mov
add
es
dec
or
mov
mov
push
lcall
dec
sbb
movsl
jecxz
mov
mov
cmp
mov
push
mov
adc
insb
pop
lcall
jns
dec
std
out
mov
mov
add
jbe
push
das
and
fcom
cmp
in
push
add
fcomi
adc
mov
addr16
pushf
adc
mov
test
add
mov
dec
cmpsb
xchg
or
arpl
inc
test
push
icebp
inc
fwait
daa
cmp
add
sbb
mov
lret
notb
insl
sub
lret
or
mov
loope
and
add
mov
fmul
mov
jnp
addr16
push
pop
mov
roll
addb
test
das
or
mov
stos
hlt
es
add
pop
inc
mov
xchg
sub
add
pop
rolb
mov
daa
mov
loopne
mov
ret
negb
adc
or
scas
into
filds
mov
fucomip
sub
das
inc
adc
pop
xchg
add
fnsave
mov
add
mov
adc
lret
decb
xchg
mov
call
rolb
mov
add
cld
dec
mov
mov
stos
movsb
out
xchg
cmpsb
cmp
das
xchg
flds
insl
mov
and
mov
mov
rolb
aaa
inc
pushf
jle
cmp
mov
add
mov
mov
pop
aaa
out
stos
cmc
rcl
fldenv
repz
shr
xor
mov
add
in
idivb
lcall
insl
into
sub
lret
popf
cli
pop
cmp
mov
mov
cld
aaa
xchg
jg
pop
xlat
mov
pop
clc
xor
jae
mov
add
mov
or
push
and
mov
xor
mov
loope
add
mov
dec
jne
jne
dec
loope
push
cmp
push
addb
push
add
add
mov
mov
dec
and
mov
mov
orl
xchg
xor
rolb
mov
mov
mov
int3
jno
xchg
pop
fsubrp
xchg
mov
push
mov
cmp
sbb
idivb
adc
mov
out
add
mov
pop
push
add
add
mov
add
aam
aam
stc
cmpsb
add
mov
and
fidivrs
add
sub
subl
rcrl
add
sbb
scas
mov
add
mov
stos
mov
sbb
add
cltd
ds
mov
add
rcrl
add
mov
mov
repz
inc
leave
push
js
cld
push
mov
and
mov
ret
mov
lds
pushf
rolb
mov
xor
dec
jb
mov
and
mov
push
stos
mov
add
stos
lock
push
add
mov
jmp
fnsave
nop
add
out
add
mov
in
mov
fs
dec
in
bound
mov
cmpsl
jg
addb
rcll
and
mov
mov
push
movsb
dec
dec
push
pop
jp
dec
lcall
cmc
lcall
mov
dec
sub
jge
popa
and
and
insl
dec
les
xchg
push
add
mov
mov
xchg
jg
leave
or
xor
mov
and
mov
mov
lcall
sahf
pop
rep
movsb
lods
orl
out
cmp
push
jl
sub
xor
add
xor
mov
adc
leave
jno
rolb
mov
dec
stos
ret
push
lds
pop
imul
sbb
push
adcl
mov
xchg
cwtl
subl
mov
mov
out
das
jmp
bound
mov
mov
add
mov
das
pop
cmpsb
in
push
sbb
jle
lret
xchg
lcall
mov
test
mov
js
mov
mov
push
movsl
xchg
add
outsl
cmp
es
stc
bound
mov
nop
add
add
ds
stc
dec
imul
and
mov
mov
add
dec
dec
push
push
dec
lds
xchg
test
mov
add
rolb
mov
xor
testl
pop
cmp
add
rolb
mov
push
add
push
pop
sbb
push
jae
shrl
dec
fcmovnu
cmp
js
fisttps
out
pop
pop
roll
stos
sub
mov
into
xchg
cmp
add
lea
mov
add
mov
addb
roll
lods
dec
cwtl
lcall
data16
mov
gs
add
push
repnz
add
mov
add
mov
mul
repz
mov
add
xchg
adc
gs
jns
jnp
fcmovbe
jle
mov
mov
add
mov
xchg
ret
mov
in
push
push
jle
adc
decb
dec
fnop
add
imul
jecxz
mov
mov
scas
jo
mov
sub
cmc
les
add
xor
addb
jmp
sub
push
cld
stos
xchg
cld
sub
aam
add
xchg
push
repnz
insl
mov
mov
xor
mov
add
cltd
test
xor
movsb
jp
lahf
rcrw
nop
add
mov
inc
xchg
push
xor
inc
sbb
jle
add
cmp
xor
fcmove
punpcklbw
mov
lcall
call
jnp
pop
in
lret
sub
mov
divl
dec
es
out
sbb
or
jecxz
add
jge
add
notb
add
cmp
xchg
mov
insl
push
rolb
les
mov
add
inc
add
mov
lods
aaa
push
add
add
add
mov
repnz
mov
mov
sbb
dec
cmp
ja
sbb
adc
mov
push
ja
neg
jb
mov
xor
mov
xlat
rcrl
jbe
mov
or
inc
add
mov
add
call
rolb
mov
scas
mov
add
adc
jmp
add
mov
add
jecxz
dec
xchg
fnstcw
cmp
add
mov
hlt
pop
adc
jns
cmp
int3
mov
mov
add
mov
add
mov
pushf
and
mov
add
mov
add
sahf
cmp
add
xor
mov
sahf
test
mov
mov
add
aas
das
cmp
inc
outsb
fldl
loope
stos
inc
popa
movsb
ljmp
int
add
xchg
cs
nop
add
pop
xchg
outsb
imul
mov
mov
addb
js
mov
mov
inc
add
test
add
lock
fisttps
add
int
and
mov
pusha
add
sbb
xchg
add
test
inc
pop
mov
mov
sub
push
pop
sub
push
sbb
mov
sti
mov
add
mov
mov
mov
xchg
negb
loop
mov
jae
xchg
mov
pop
out
inc
add
test
jnp
xor
add
lea
mov
mov
cwtl
adc
mov
enter
add
out
and
mov
cmp
stos
and
ficoml
dec
iret
insl
push
inc
sub
cli
jp
mov
loope
dec
inc
mov
add
cmp
out
or
mov
dec
mov
xchg
pop
pop
or
xchg
repnz
addb
mov
adc
mov
ds
jg
push
add
cmc
frstor
add
mov
arpl
lock
cltd
xor
jno
dec
add
mov
clc
popf
js
add
pop
imul
rcrl
xchg
add
cmpsl
fstp
add
sbb
add
mov
mov
xchg
nop
add
mov
mov
icebp
pop
xchg
ret
cmp
es
rolb
mov
in
addb
lcall
mov
rcll
popf
mov
xchg
arpl
inc
mov
dec
push
lods
mov
xor
mov
adc
lahf
push
push
sbb
mov
fwait
jg
adc
mov
lcall
mov
test
pop
je
mov
leave
cmpsb
cmpsl
jnp
add
decb
jns
push
rcll
insl
pushaw
add
mov
add
js
dec
pop
lret
xchg
iret
int
xrelease
or
addb
movsl
cltd
out
leave
adc
repz
add
sahf
push
cmpsb
dec
lods
popf
sahf
mov
add
test
dec
jo
mov
jmp
jns
add
or
add
add
stc
inc
lret
test
jbe
add
mov
pop
jnp
in
mov
iret
popa
fstpl
sbb
add
add
add
add
pop
das
mov
into
sub
sahf
int3
pop
mov
add
lods
cmp
dec
xor
mov
pop
pop
inc
cmp
xchg
and
mov
lea
in
std
loopne
mov
pop
fdivrp
xchg
aam
test
jbe
mov
adc
mov
dec
pop
add
ret
addr16
cs
leave
popa
and
iret
lods
aam
xchg
cmpsl
stos
icebp
push
add
rolb
mov
lret
gs
push
add
mov
mov
jp
mov
mov
add
into
adc
mov
outsl
imul
xchg
jno
rolb
mov
mov
sub
pop
addb
push
jge
add
scas
pop
cmp
adc
mov
test
push
inc
and
add
mov
push
into
push
pop
push
add
enter
mov
and
hlt
inc
popf
addb
jl
sbb
add
mov
inc
fldl
inc
addb
imul
add
addb
xchg
add
shrl
dec
sbb
enter
cmc
lods
push
loope
xor
mov
jecxz
jne
sub
add
fs
mov
add
add
jb
mov
push
inc
add
mov
pop
loopne
mov
add
iret
repnz
scas
xchg
cmpsl
and
mov
sbb
push
add
daa
out
mov
fidivrl
xchg
mov
subl
cmpsl
or
add
inc
addr16
cmp
add
sub
add
mov
out
push
daa
xor
mov
bound
mov
add
add
mov
call
mov
cmp
lahf
push
movsl
sbb
or
mov
jnp
in
mov
sub
imul
add
sahf
sub
add
mov
sbb
out
add
or
add
mov
mov
idiv
cwtl
and
cmp
idiv
mov
fdivl
add
cltd
add
sbb
lea
xor
mov
add
mov
jge
add
add
push
xchg
inc
addb
test
repnz
and
lahf
jnp
mov
cld
les
fnsetpm(287
mov
mov
push
out
jl
sbb
shrl
mov
das
scas
insl
data16
clc
or
mov
repnz
pop
ljmp
adc
add
add
cmp
mov
add
test
fwait
mov
mov
push
cmp
add
das
jnp
lea
or
jae
adc
daa
push
lods
shll
pop
fcoms
add
mov
mov
leave
stos
inc
fs
pop
xchg
ljmp
mov
add
fs
lcall
add
inc
ret
push
cld
mov
push
in
or
push
out
ret
movsl
rolb
jl
add
repnz
inc
push
add
fwait
icebp
rcll
inc
add
mov
push
push
fnstenv
or
push
lret
fwait
pop
pop
rolb
mov
xchg
add
mov
stc
ss
push
jb
mov
add
xchg
fwait
movsb
dec
xchg
sti
jne
js
fsubrl
xchg
xor
mov
pop
or
fists
fmull
xchg
pop
cwtl
sub
push
movsl
pop
fnsave
xchg
dec
sarl
popf
push
fnstenv
jl
xchg
jg
idiv
aas
xlat
inc
add
pop
and
popf
filds
cmp
inc
xchg
xchg
and
sub
loope
add
test
test
sbb
mov
sub
loop
mov
insl
mov
mov
jmp
xchg
xor
cmc
dec
jno
mov
add
fidivs
mov
add
add
popa
pop
jns
add
push
add
test
cmp
pop
insb
into
or
mov
in
mov
add
das
call
sbb
mov
imul
stos
stc
in
add
mov
dec
dec
mov
adc
lds
negl
repnz
adc
xlat
lods
xchg
or
pop
jns
add
add
mov
and
mov
cmp
mov
movsl
in
int
xor
mov
mov
sbb
test
imul
mov
addb
daa
mov
mov
mov
sbb
lahf
mov
adc
mov
adc
mov
sti
outsl
dec
inc
scas
xor
mov
mov
cmpsl
in
jle
add
pop
imull
mov
mov
scas
cwtl
icebp
pushl
mov
xor
mov
add
mull
add
test
aam
and
movsl
pop
test
push
jecxz
stc
cld
mov
cmc
aam
add
outsl
ficoms
or
dec
loope
sbb
in
stc
jbe
push
mov
mov
sar
movsb
inc
add
les
add
jecxz,pt
inc
mov
stos
and
mov
add
mov
inc
mov
int
add
rolb
mov
rolb
jne
dec
or
jo
mov
mov
cmpsb
les
sahf
jnp
or
insb
into
dec
std
int3
adc
push
test
adcl
roll
add
mov
mov
lcall
aaa
sahf
cmpsb
inc
pop
mov
inc
xchg
add
add
inc
adc
pop
jno
faddp
add
pcmpgtw
fcompl
or
add
mov
mov
mov
add
test
or
mov
xorl
add
add
jl
push
dec
push
and
mov
dec
ret
adc
insl
mov
mov
cmpsb
or
xchg
stos
movsb
out
mov
mov
mov
add
loopne
mov
add
push
in
out
sbb
inc
movsl
ljmp
sbb
sub
lret
fwait
mov
add
imul
jnp
adc
push
add
mov
mov
inc
add
lret
ficompl
add
mov
add
rolb
cs
add
iret
outsb
pop
fidivs
push
repnz
mov
mov
addw
xchg
add
xchg
jne
fistps
lea
shll
mov
mov
cmp
inc
pop
aaa
call
pop
mov
push
movsb
and
mov
adc
jg
pop
mov
fsubrl
adc
add
in
lret
mov
push
movsl
push
mov
add
mov
add
mov
lahf
mov
pop
xchg
addb
mov
pop
dec
xor
test
jno
push
pop
movsb
jo
mov
stc
mov
nop
add
imul
lds
cmp
cmp
dec
dec
or
mov
movsb
adc
and
mov
push
and
mov
xchg
lret
cmp
cs
clc
nop
add
pop
pop
xchg
and
push
push
test
push
adc
mov
int3
jecxz
pop
mov
js
add
cmpsb
in
mov
mov
dec
jle
in
xchg
add
stos
out
mov
icebp
and
mov
mov
add
xor
add
mov
mov
lods
sbb
test
mov
add
aad
inc
add
sahf
xchg
inc
add
inc
aam
sub
ljmp
add
rolb
mov
jl
add
jl
scas
fs
dec
rolb
mov
mov
ja
mov
add
cmp
adc
mov
xchg
xchg
cmp
ja
or
mov
mov
jb
mov
mov
mov
sub
add
mov
stc
xor
mov
imul
mov
mov
jnp
push
push
cwtl
pop
cwtl
int3
jecxz
xchg
push
xchg
gs
add
mov
cld
rolb
mov
pushf
xchg
xchg
add
leave
repz
nop
add
inc
cli
in
pop
dec
std
out
into
sub
add
add
adc
pop
dec
dec
mov
mov
inc
mov
mov
inc
pop
jo
mov
xchg
add
adc
mov
negl
or
add
mov
nop
add
test
and
cmp
adc
mov
mov
push
xor
xchg
sahf
bound
mov
add
loope
mov
rolb
mov
jae
add
push
jl
sub
add
add
fidivrs
mov
fildll
sbb
aad
cltd
mov
mov
sbb
int
jae
dec
cltd
xchg
lret
in
add
add
cmovs
ret
or
or
rorl
fists
add
mov
xor
jge
cltd
xor
push
add
movsb
xor
pop
mov
add
mov
daa
addb
aam
add
ljmp
add
mov
mov
mov
addb
in
aas
lods
sub
add
add
decb
leave
in
add
aam
outsb
xchg
addb
out
mov
cli
adc
mov
lcall
out
mov
adcl
mov
dec
jae
fldl
sbb
pop
sub
pop
lret
mov
fyl2x
jg
add
push
jo
mov
mov
push
mov
mov
push
cmp
mov
dec
frstor
add
adc
mov
daa
add
testl
mov
xchg
jae
mov
push
test
popf
push
add
lods
ja,pn
jns
xlat
jmp
push
add
xor
popf
cmp
in
fcmovne
aam
jb
mov
mov
push
sahf
js
cld
mov
add
jl
add
xchg
mov
imul
add
mov
xchg
and
mov
in
adc
mov
fstpl
add
push
push
cmp
add
mov
test
cmp
pop
in
cs
pop
cmp
and
xchg
pop
sahf
xchg
or
ficompl
and
mov
mov
sub
fcomps
pop
lds
mov
lahf
es
cmpsl
jecxz
adc
add
and
mov
push
mov
mov
push
enter
not
pop
sub
add
loopne
mov
cmp
mov
mov
mov
int
faddp
rolb
mov
add
mov
adc
add
jecxz
rcrl
dec
outsl
aaa
xchg
test
adc
xchg
mov
jg
jecxz
bound
mov
mov
jnp
lea
mov
sbb
add
mov
mov
mov
jb
mov
lods
add
mov
mov
stc
imul
and
jb
mov
mov
in
rcll
lcall
mov
mov
lods
aam
loopne
mov
add
add
popa
jne
negl
mulb
add
cmp
add
movsb
test
mov
add
sub
adc
mov
add
inc
fs
xchg
lahf
filds
inc
add
jno
xchg
outsl
mov
mov
xor
add
mov
das
lea
adc
rcr
fldenv
or
jecxz
lods
pop
in
lret
int3
jge
pop
or
jae
je
pop
sti
lret
add
mov
mov
ss
xor
rolb
mov
xchg
add
mov
add
add
sub
addb
mov
scas
shl
fcomip
add
mov
xchg
pop
fs
rolb
mov
add
mov
aam
add
push
int
fcmovu
inc
int3
xchg
daa
adc
addb
dec
xor
mov
test
cltd
je
pop
jg
push
lahf
cmpl
rcr
bound
mov
pop
test
test
mov
jecxz
xor
daa
jge
push
adc
imul
arpl
sub
and
xor
mov
push
stos
ds
cmp
les
mov
jp
pop
adc
mov
sbb
dec
push
add
loopne
mov
out
ljmp
mov
test
mov
and
dec
pop
fisubl
add
adc
sarl
add
data16
pop
stc
or
lods
push
sbb
add
stc
fcoms
mull
or
test
outsb
out
and
add
inc
add
rorl
jg
xor
out
lret
lods
movsb
mov
in
jle
mov
mov
mov
std
or
popa
test
mov
mov
cltd
data16
add
mov
xor
mov
shll
in
cmp
mov
loope
add
add
mov
add
outsl
adc
out
lahf
dec
cld
mov
mov
push
cmp
xchg
jmp
push
nop
add
mov
cmpsb
pop
cmc
cld
dec
addr16
sbb
scas
insl
mov
aam
dec
and
aas
mov
add
sub
sti
cmpsl
je
add
push
or
aaa
cli
mov
in
mov
mov
lods
cld
daa
lret
push
xchg
cs
pop
and
mov
add
mov
cmp
dec
adc
mov
js
inc
and
mov
ljmp
mov
xor
add
sbb
mov
and
mov
add
mov
loopne
mov
testl
arpl
add
adc
mov
push
inc
paddusw
mov
inc
cltd
or
or
nop
add
xor
inc
fdivs
into
out
insl
sahf
cmp
push
add
es
push
dec
stos
push
ret
xor
push
lcall
lret
mov
mov
jmp
enter
push
in
add
add
xor
mov
out
push
push
xchg
jnp
pop
imul
add
mov
outsl
je
add
xchg
sti
mov
jl
jnp
add
pop
andl
imul
jo
mov
cmp
jmp
sti
adc
and
mov
rolb
mov
jecxz
bound
mov
jl
fnsave
add
roll
sbb
jne
lods
call
dec
scas
push
add
add
mov
mov
je
dec
jne
js
add
rorl
xor
dec
inc
fistpl
pop
in
mov
xchg
insl
aas
pop
into
pop
ljmp
out
inc
jno
ret
fildll
jmp
pop
and
js
pop
jle
add
mov
into
mov
cmpsl
inc
pushf
int3
sbb
std
or
orl
push
repnz
and
mov
lods
push
add
sbb
xchg
add
mov
mov
jg
les
sbbl
addb
mov
sbb
fcoms
mov
sub
dec
fistpl
lret
negb
pop
gs
loop
mov
pop
push
add
imul
sub
add
mov
add
add
cmpsl
out
int
or
aad
pusha
add
sbb
addb
std
xchg
xor
mov
outsl
jne
pop
xchg
lcall
aas
xchg
sub
mov
clc
lds
mov
push
int
subl
dec
xchg
add
add
mov
icebp
dec
adc
mov
pop
lret
and
mov
popa
push
test
adc
mov
lock
dec
mov
mov
sbb
inc
pop
and
mov
dec
sub
rorl
push
or
fistps
xchg
inc
xor
mov
mov
inc
insl
xchg
outsl
in
xchg
lods
lahf
into
mov
mov
push
mov
or
test
jne
xchg
xchg
add
adc
into
shll
mov
mov
sub
sbb
pop
lods
arpl
add
lret
or
aas
xor
cmp
into
xchg
add
mov
mov
stos
mov
in
add
sub
mov
popa
jg
mov
adc
mov
mov
push
lds
movsb
test
dec
or
adc
adc
jnp
add
xchg
add
add
add
ret
adc
mov
movsb
push
mov
xor
cmc
and
mov
sbb
jbe
inc
sub
xchg
repnz
pusha
add
daa
xor
mov
mov
mov
push
push
xchg
adc
jo
mov
add
add
scas
ds
jb
mov
into
inc
lods
negl
lds
add
nop
add
add
stc
stos
inc
shll
ja
or
mov
sbb
mov
pop
rorl
cmp
mov
ja
data16
push
add
add
mov
add
mov
rolb
mov
data16
mov
pop
sbb
xlat
inc
repz
mov
jl
dec
inc
add
mov
in
inc
inc
jge
jmp
add
inc
add
frstor
repz
imul
and
mov
iret
addb
stos
idivb
jbe
jne
inc
add
add
push
mov
loopne
mov
bswap
and
mov
mov
int
movsl
inc
lds
ret
lahf
add
mov
lcall
lret
addb
cli
sbb
js
lods
or
stos
and
int
mov
add
sub
sub
jecxz
fbld
pop
mov
outsl
lahf
push
inc
sbb
adc
mov
cwtl
outsb
or
and
mov
mov
add
add
sub
addr16
sbb
inc
jno
lret
dec
xor
mov
jb
mov
and
inc
add
test
arpl
fcoml
aas
pop
xchg
push
repnz
xchg
mov
and
mov
add
inc
push
xchg
add
jne
fsubrl
push
add
aaa
into
push
add
mov
mov
bound
mov
addr16
and
or
fdivrp
inc
add
test
test
lds
pop
dec
push
pop
lds
add
jmp
jmp
dec
lds
add
test
addb
push
ss
xor
mov
cli
xchg
add
jnp
mov
dec
js
in
or
cmp
add
mov
and
add
ja
mov
mov
lret
push
lods
aaa
rolb
or
call
xor
add
dec
ss
out
push
add
cmp
lea
ds
adc
add
sbb
mov
dec
pop
test
mov
push
add
mov
cli
cmpsl
icebp
push
addr16
jnp
stos
cmp
lahf
icebp
mov
sahf
push
addb
sub
in
aad
cmp
push
add
std
cmp
ss
push
dec
add
add
mov
mov
or
pop
mov
insl
push
add
mov
in
daa
mov
xor
mov
add
add
enter
add
pop
addb
adc
pusha
add
jns
lahf
add
mov
js
outsb
mov
mov
cmc
and
rolb
scas
lret
jp
add
pop
inc
add
jno
lds
mov
add
mov
das
fcom
add
insb
inc
mov
adc
fistpl
mov
or
adc
push
leave
mov
inc
inc
pop
sub
inc
add
fucom
lahf
xor
mov
or
hlt
pop
sti
aas
cmp
mov
mov
mov
add
inc
xor
mov
add
mov
sub
mov
xor
fwait
add
mov
movsl
mov
sub
add
add
popl
or
mov
and
cmp
and
sahf
sbb
fwait
pop
js
fldt
pop
fstps
call
lods
inc
popa
movsl
jno
imul
mov
pusha
add
add
rolb
cli
and
test
pop
enter
pop
xchg
add
inc
repz
or
ss
or
mov
mov
int3
sbb
dec
addb
and
fs
mov
cmp
aaa
cmp
pop
mov
mov
add
imul
mov
add
xorl
mov
xchg
add
dec
or
add
mov
in
mov
mov
push
mov
xchg
add
sbb
add
jg
or
rcrl
pushf
daa
popa
dec
jo
mov
add
mov
ret
adc
mov
sbb
dec
xor
jb
mov
push
or
lret
addb
stos
in
and
mov
xor
mov
dec
mov
push
add
flds
adc
mov
cmp
pop
pop
dec
jge
or
cmp
lcall
add
sahf
add
jo
mov
dec
stos
mov
mov
stc
popa
das
pushf
jno
jmp
xor
mov
rolb
mov
mov
lods
scas
scas
dec
cmc
cmp
jl
sti
push
pop
mov
mov
imul
mov
in
or
mov
jns
leave
jg
inc
lret
in
jg
scas
bound
mov
mov
push
add
sub
lods
shl
mov
scas
into
add
mov
add
je
addr16
and
add
movsl
inc
addr16
add
das
int
arpl
add
xchg
movl
movsb
repz
lahf
mov
enter
jmp
addb
ret
pop
sub
clc
cmpsb
aaa
mov
mov
and
mov
arpl
cmp
adc
ljmp
mov
mov
icebp
push
adc
mov
clc
mov
mov
shrl
and
into
xchg
sbb
mov
mov
mov
stc
lahf
sub
dec
pop
sbb
and
mov
jae
in
push
ret
call
add
add
mov
icebp
rcrl
dec
sub
les
nop
add
ffree
shll
jp
pop
fs
add
dec
popa
cmc
jno
clc
mov
inc
std
adc
mov
mov
jbe
xor
mov
lret
mov
add
mov
push
pop
pop
rcll
dec
rolb
mov
add
jg
add
dec
sbb
lret
mov
dec
insb
repnz
ret
ljmp
push
add
pusha
add
add
lret
xchg
ffree
add
mov
imul
jg
mov
dec
lods
xchg
adc
cs
add
push
mov
inc
add
sbb
add
mov
add
add
mov
mov
dec
add
arpl
test
pop
xchg
mov
add
lret
or
iret
hlt
inc
xor
mov
inc
fcoml
mov
mov
xchg
cmpsb
fimuls
or
cmpsl
aad
cld
lret
pop
cs
mov
rolb
mov
addb
mov
mov
xchg
add
icebp
mov
add
in
add
mov
sarl
xchg
loopne
mov
ss
pop
bound
mov
pop
pop
icebp
pop
jnp
add
aam
out
pop
dec
add
inc
fisubrs
aad
into
inc
add
pop
push
outsb
jl
add
cmp
punpcklwd
sbb
jnp
sub
rorl
popf
push
stos
xor
mov
fidivrs
add
fistpl
add
stc
std
xchg
cmp
jno
add
cltd
aad
mov
fucom
fs
push
jne
push
daa
ss
mov
sbb
add
jmp
inc
or
mov
mov
add
mov
and
mov
pop
lods
imul
mov
int3
mov
nop
add
stos
hlt
xrelease
jne
and
mov
mov
mov
mov
add
jns
add
fisubs
mov
push
cmp
mov
adc
mov
mov
inc
add
add
pop
scas
or
or
mov
test
mov
addb
mov
mov
jp
or
add
sbb
inc
add
push
sbb
push
mov
add
mulb
push
push
and
cld
call
rorl
test
sahf
ret
mov
add
xor
mov
fcompl
rolb
mov
imul
push
and
cmp
add
daa
pop
lock
cwtl
test
divb
add
and
mov
inc
je
fstl
scas
ds
add
cs
xor
jbe
sub
fbld
push
sahf
mov
mov
das
push
xor
mov
pop
adc
jl
loope
push
mov
push
mov
loop
mov
imul
or
fisttpl
jecxz
fs
lahf
sbb
mov
mov
sbb
les
mov
roll
or
add
dec
je
pop
inc
add
xchg
enter
movsb
cltd
or
xor
mov
adc
jnp
aad
sub
mov
push
clc
rolb
and
jbe
sbb
xchg
push
lcall
mov
js
aad
adc
or
pop
cmp
pop
stc
jle
add
or
std
sub
or
mov
mov
add
imul
mov
popf
in
cli
add
mov
dec
aam
push
jnp
xor
rolb
mov
int
fcmovb
push
jl
mov
inc
mov
repnz
cli
xor
mov
add
add
add
mov
add
pop
aaa
enter
inc
inc
add
pop
cltd
outsl
mov
jp
inc
xor
pop
push
mov
cld
cmc
or
add
mov
sub
add
in
sarl
mov
jne
dec
mov
outsl
les
xlat
push
or
shl
jns
xchg
test
mov
sub
push
add
add
aaa
lahf
fists
icebp
xor
push
fs
arpl
add
dec
xchg
add
enter
cmp
add
lods
bound
mov
dec
pop
mov
xchg
xchg
test
cmp
fwait
push
dec
cmpsl
cltd
mov
and
add
sbbl
cltd
pop
add
push
add
lds
fmuls
imul
cmp
sub
iret
sub
rolb
mov
sbb
out
adc
mov
ljmp
mov
push
and
and
cmp
add
mov
test
jl
std
fimuls
addb
push
dec
aad
addb
add
shl
pop
push
fildll
ret
push
and
inc
xchg
cmpsl
insl
or
mov
xor
mov
mov
mov
in
rolb
mov
cli
xchg
outsl
mov
push
add
out
sarl
outsl
inc
add
cmp
rolb
rcll
add
mov
add
decb
xor
mov
jle
fsubrl
lock
in
mov
push
jg
das
ss
xchg
jmp
jl
pop
cli
movsl
mov
mov
dec
enter
push
out
shll
call
mov
inc
loopne
mov
adc
mov
mov
lahf
dec
das
mov
inc
or
xchg
aaa
pop
push
add
roll
testb
push
lahf
aam
addr16
imul
sub
sub
ficompl
add
add
mov
out
push
sub
lods
std
lods
ss
mov
cld
mov
cmpsb
pop
push
add
add
sub
adc
mov
add
push
ret
mov
daa
ds
fcoml
movsb
dec
lock
add
cmp
ret
inc
sbb
and
xchg
adc
jns
or
sub
or
add
push
stos
sub
rcll
mov
mov
jle
imul
mov
sub
pop
add
insb
and
inc
add
adc
fadds
data16
ror
mov
and
mov
push
add
cli
in
adc
jbe
subl
or
andl
pop
cmpsl
inc
and
mov
or
dec
adc
mov
and
mov
add
repnz
sbb
lcall
cwtl
paddb
aad
xchg
cld
xor
mov
or
in
pop
sbb
adc
xchg
inc
add
jg
sub
imul
ficompl
push
push
add
mov
out
and
mov
add
mov
ret
lcall
jo
mov
dec
ss
es
jp
fst
add
arpl
mov
cwtl
push
and
mov
mov
lods
mov
sub
cld
sahf
add
loop
mov
xchg
aad
mov
mov
pop
testl
mov
add
adc
mov
mov
pop
jmp
popa
adc
pop
xor
mov
sub
scas
sbb
mov
pop
dec
pop
and
pop
data16
jecxz
inc
add
das
jle
jno
sbb
mov
adc
push
faddl
jbe
jo
mov
lods
push
fcomi
in
inc
add
aam
neg
ret
sbb
and
xlat
iret
test
mov
push
pop
cli
jbe
jmp
add
test
mov
dec
notb
mov
lea
add
lret
pop
shl
add
add
push
push
pop
cmp
std
and
mov
sbb
data16
repnz
add
jnp
push
push
sbb
add
mov
lahf
or
cmp
loop
mov
dec
int3
mov
data16
add
mov
add
loopne
mov
repz
mov
add
inc
repz
dec
ficompl
rolb
mov
mov
add
inc
add
add
mov
fwait
popf
ret
imul
pop
mov
insl
inc
push
popa
das
pop
scas
inc
pop
int
adc
out
in
ljmp
insb
out
clc
adc
loopne
mov
xchg
or
ljmp
sub
mov
add
clc
jge
imul
mov
int
sub
scas
loope
push
enter
dec
cmp
add
insb
sbb
enter
push
stc
jns
or
out
movsl
int
jle
push
enter
test
adc
dec
mov
test
mov
loopne
mov
mov
add
mov
cld
int
daa
inc
add
mov
mov
sarl
loope
push
lcall
push
or
add
mov
sub
add
add
out
inc
add
cmp
addb
mov
sub
fucom
push
add
mov
mov
clc
pop
jmp
mov
add
add
jne
shrl
mov
and
mov
add
push
xor
inc
add
add
and
mov
mov
or
pushf
inc
mov
hlt
push
enter
repnz
push
or
imul
add
jge
add
cmp
mov
add
mov
int3
jge
aaa
loop
mov
cmp
pop
movsl
mov
ficomps
add
icebp
das
ret
push
sub
addb
xchg
xchg
cmpsl
test
push
in
popa
adc
mov
pushl
or
dec
stos
dec
fdivr
fmuls
xchg
dec
mov
icebp
rolb
mov
ss
loop
mov
imul
pop
dec
pusha
add
dec
jbe
or
out
push
mov
ja
jns
jnp
mov
xchg
adc
add
iret
or
mov
clc
inc
add
mov
inc
inc
add
add
or
les
mov
testl
mov
add
mov
insl
out
daa
jmp
clc
ds
adc
ljmp
add
nop
add
mov
mov
add
addr16
add
bound
mov
push
add
xor
push
cmp
filds
push
jp
add
iret
ds
add
sub
jmp
sbb
adc
xor
mov
add
mov
cmp
push
add
add
add
or
or
movsb
jb
mov
dec
repz
nop
add
sub
lahf
imul
add
mov
mov
arpl
cmp
cs
rolb
mov
add
add
add
inc
push
sub
out
sub
or
adc
mov
dec
adc
fdivs
scas
cmp
lret
xchg
lock
rolb
mov
and
mov
jns
bound
mov
add
ljmp
lcall
pushf
das
fisubs
dec
fidivs
rolb
mov
and
fwait
mov
pop
add
sub
mov
cmp
inc
bound
mov
add
mov
add
add
xor
add
loope
adc
mov
scas
sbb
lcall
xor
scas
inc
push
in
add
jle
test
push
add
mov
lods
xchg
add
mov
jg
lock
cwtl
rcl
mov
xchg
cltd
inc
add
ss
cli
cltd
pop
in
dec
rolb
mov
aaa
iret
ss
inc
add
add
and
and
mov
xor
mov
jb
mov
rolb
mov
mov
rcll
add
cmp
push
adc
les
insl
add
mov
ficoms
hlt
cmp
mov
mov
xchg
shrl
xor
mov
jl
imul
add
xlat
stc
roll
and
mov
sbb
inc
add
fidivs
push
imul
testb
mov
push
fsts
xlat
mov
add
jp
outsb
pop
lods
les
push
out
dec
enter
mov
int3
fs
and
mov
mov
sti
mov
inc
add
mov
mov
sub
add
and
push
in
fs
imul
addb
mov
inc
cli
xor
add
sbb
test
sbb
adc
mov
push
cmpsl
jl
stc
rolb
mov
outsl
cmc
mov
mov
test
add
xlat
iret
add
mov
dec
scas
adc
mov
add
mov
lods
aam
test
imul
sti
adc
mov
and
mov
mov
addb
popa
xchg
frstor
and
mov
mov
add
mov
stos
push
push
add
xchg
es
xlat
mov
add
mov
mov
es
or
add
bound
mov
mov
and
test
add
xchg
add
dec
dec
xchg
inc
add
stos
sub
or
fs
adc
mov
lods
cwtl
ret
pop
cs
jge
inc
or
sarl
popf
and
add
add
mov
push
mov
mov
repz
pop
rolb
mov
mov
mov
sbb
cmp
add
ret
leave
mov
push
add
movhps
imul
xchg
out
jg
into
fisubrs
jg
and
push
xor
and
mov
adc
fildll
xchg
out
jo
mov
cmp
adc
pop
jns
add
fsubs
mov
jne
pop
jb
mov
mov
add
mov
rcll
mov
js
in
call
dec
xor
mov
sub
sub
scas
frstor
add
add
add
ffreep
jl
add
cmpsb
or
cli
arpl
ss
adc
dec
or
int
lahf
pop
xor
adc
mov
xor
pop
std
and
or
jo
mov
and
jbe
jg
xchg
add
rolb
in
jle,pt
push
add
add
out
sub
add
or
jmp
and
mov
into
ja
adc
and
mov
fsubr
xchg
sbb
das
scas
jecxz
leave
rolb
mov
mov
add
push
addb
add
add
mov
pop
adc
add
mov
add
andl
add
dec
dec
jl
jmp
in
repz
add
pop
cmp
xor
jge
int
push
add
mov
insb
inc
icebp
in
enter
test
add
inc
push
in
stos
mov
mov
sbbl
add
mov
add
sbb
std
es
lcall
mov
mov
mov
inc
aaa
jle
xor
aad
xor
sbb
sbb
add
gs
mov
aaa
ds
or
add
js
cwtl
cmp
inc
add
cli
jl
rolb
aam
inc
push
inc
sbb
jl
pushf
fs
xchg
popf
call
cmc
aaa
loopne
mov
add
mov
aam
adc
mov
cmc
lret
dec
cmp
rolb
xor
sub
jbe
in
rolb
mov
sbb
jle
idivl
ja
xor
add
rolb
mov
mov
cmp
sub
cmp
push
push
in
sti
mov
cmpsb
add
push
push
mov
out
in
fsubrs
cmc
dec
cmp
jmp
add
lahf
stc
idiv
mov
and
push
add
add
xor
add
mov
and
pop
mov
dec
dec
mov
mov
fcom
add
mov
add
std
popf
daa
pop
int3
ljmp
repnz
adc
jp
pop
out
cmp
xchg
movsb
mov
xchg
popf
xchg
add
mov
or
mov
sahf
mov
or
mov
in
mov
add
loope
add
call
push
int
cli
sub
inc
popa
in
xchg
push
mov
add
mov
insl
and
mov
mov
push
mov
push
mov
repnz
mov
add
iret
mov
xchg
paddusb
inc
dec
jp
ret
stos
sub
cmp
testb
or
push
js
stos
out
imul
jp
add
add
aad
rolb
ljmp
mov
dec
je
jno
test
inc
mov
mov
mov
mov
into
xchg
mov
mov
mov
cmp
mov
mov
cmp
mov
loopne
mov
mov
or
add
fnsave
dec
xchg
shrl
xchg
jo
mov
xchg
mov
pushf
shr
mov
and
test
add
mov
add
add
bound
mov
repz
sbb
dec
in
add
fs
dec
bound
mov
mov
out
data16
mov
push
inc
fwait
dec
imul
repnz
cmp
push
out
iret
in
dec
xor
add
clc
mov
add
jae
mov
cli
out
cwtl
mov
cltd
es
dec
into
rcl
popf
das
cmc
push
jns
jecxz
add
inc
addb
cmpsl
mov
inc
add
in
dec
xor
mov
pop
jns
dec
mov
ret
jno
push
jbe
add
mov
gs
add
in
negb
jg
es
mov
add
push
jnp
repnz
xchg
push
mov
mov
cmp
mov
push
push
xchg
add
outsl
mov
and
ret
add
mov
jmp
jl
jbe
jmp
addr16
pop
cmp
dec
sbb
and
mov
mov
add
or
add
sbb
adc
mov
or
xchg
cmp
loop
mov
sub
lret
add
sbb
in
cmpsl
add
jno
add
xchg
mov
xor
add
or
aas
test
xchg
add
or
pop
mov
xor
mov
add
ja
add
mov
or
pusha
add
addr16
push
adc
mov
add
insl
stos
or
add
mov
into
loop
mov
dec
cmpl
xchg
decb
mov
mov
inc
pop
and
mov
sbb
xchg
and
mov
add
aad
pop
mov
outsb
sub
mov
push
sbb
nop
add
and
mov
mov
push
jnp
add
cmp
movsl
cmp
pushf
jno
aam
sub
inc
scas
in
cmp
xor
mov
lods
mov
aad
lcall
add
pop
mov
push
cmpl
movsb
sub
adc
mov
into
movsl
negb
ljmp
lds
mov
inc
add
add
xlat
xor
add
push
and
repnz
fisubs
gs
inc
lods
mov
enter
mov
push
xchg
cmpsb
inc
jmp
les
movsl
repnz
fistpll
mov
add
cmp
add
or
add
mov
loopne
mov
dec
fstp
jle
repz
into
out
mov
movsl
sbb
pop
dec
int3
sbb
adc
mov
push
bound
mov
les
les
es
arpl
lds
or
pop
stos
cli
test
or
add
add
mov
add
loopne
mov
jnp
testb
jb
mov
rolb
pop
test
cltd
cwtl
popf
mov
add
lret
cmp
movsl
cmp
stos
js
icebp
ds
cmc
out
repz
and
mov
add
rorl
and
loopne
mov
js
dec
sbb
fwait
call
lcall
sbb
addr16
pop
sbb
in
cmpsb
test
negl
sbb
cs
add
xchg
stc
jnp
nop
add
in
push
xor
mov
ds
push
add
mov
movsb
mov
add
adc
out
insl
jp
ret
mov
hlt
dec
inc
add
mov
add
addr16
jnp
mov
clc
lcall
pop
mov
sbb
add
sbb
xchg
inc
les
daa
xor
mov
mov
add
aam
ds
add
test
shl
add
and
mov
adc
add
add
dec
test
mov
xchg
sbb
add
jle
sub
stos
cmpsb
sub
mov
mov
add
hlt
mov
adc
mov
stos
in
cmp
fs
nop
add
push
fbstp
idivb
sbb
lea
and
dec
mov
mov
sub
mov
mov
in
pop
mov
push
test
add
mov
mov
mov
jns
daa
outsl
stos
popf
in
mov
mov
mov
mov
aad
jle
pop
cmp
mov
add
mov
add
insb
xchg
std
fsubrs
in
sub
pop
roll
pop
out
test
iret
stos
into
test
jp
jnp
add
cmc
mov
mov
fistl
lcall
add
aaa
mov
mov
xchg
add
cli
mov
mov
in
push
jmp
repz
test
test
push
lret
test
mov
xor
addr16
mov
add
push
dec
mov
inc
aam
outsb
iret
push
inc
adc
movsb
xchg
xchg
xchg
add
mov
pop
rolb
ret
arpl
mov
rolb
mov
mov
inc
add
out
bound
mov
cmpsl
int
add
xchg
add
sbb
fisubs
cs
add
mov
xchg
pop
cmc
out
add
mov
adcl
mov
cld
xchg
pop
repnz
repnz
cmc
push
jle
pop
xchg
add
mov
mov
push
jno
clc
mov
sbb
or
out
mov
mov
int3
sahf
loopne
mov
ret
jmp
sbb
add
mov
add
outsl
add
mov
mov
jb
mov
jne
dec
test
add
add
imul
mov
js
stos
cltd
mov
dec
and
sbb
mov
js
leave
repnz
out
mov
or
and
inc
sarl
sbb
add
cmp
inc
jo
mov
paddw
repz
and
sbb
push
add
add
out
and
adc
add
int3
test
sub
cwtl
scas
mov
mov
lea
add
call
mov
mov
inc
inc
mov
imul
mov
dec
les
add
mov
mov
mov
outsl
pop
mov
mov
add
sub
cmpsb
outsl
test
mov
addr16
icebp
sub
stos
pop
mov
mov
jae
stos
scas
popa
test
ja
or
pop
hlt
mov
cmp
sahf
repnz
aas
iret
jbe,pn
pusha
add
inc
xchg
fistpll
jge
mov
shll
cmp
push
adc
mov
mov
add
xor
mov
call
adc
jae
cmp
js
xlat
cmp
and
mov
inc
add
or
or
insb
in
lahf
icebp
jb
mov
repz
mov
popa
hlt
sub
add
loopne
mov
loop
mov
push
pop
xor
mov
fs
fadd
and
add
or
push
mov
inc
rolb
mov
cmp
inc
push
mulb
mov
mov
into
lret
int3
movsl
mov
and
mov
lret
pand
cli
cltd
das
fidivrs
add
int3
mov
mov
mov
iret
inc
add
aad
jns
arpl
add
push
cmp
mov
pusha
add
mov
sbb
cmc
push
sbb
aad
mov
stos
mov
push
inc
xchg
push
fs
stos
scas
pop
in
add
in
icebp
xor
mov
cmp
mov
outsl
mov
add
mov
pusha
add
add
and
mulb
add
lock
pop
adc
mov
adc
sbb
adc
add
cmpsl
xchg
lahf
xchg
fistpll
push
loopne
mov
push
inc
aas
loop
mov
push
mov
add
or
mov
sbb
mov
rolb
mov
cmpsl
int
test
jne
xchg
add
add
rolb
mov
stc
mov
inc
add
es
in
arpl
leave
fnstsw
cmpsb
mov
mov
sub
insl
or
lods
into
lahf
mov
ja
fidivl
add
mov
aas
ss
adc
mov
movsl
cmp
mov
mov
in
jge
push
mov
add
lock
mov
add
in
mov
add
and
repz
add
or
mov
add
sti
int
push
jne
sub
sbb
push
mov
pop
fistpl
jns
mov
add
sbb
xchg
sub
xchg
add
mov
lahf
es
add
xor
mov
sub
mov
and
mov
or
ret
mov
add
in
push
pop
jmp
mov
cmp
xchg
fwait
ds
add
adc
mov
jbe
dec
or
je
scas
pop
fwait
pop
adc
mov
push
out
clc
sub
pop
add
mov
jecxz
add
push
int3
sahf
xchg
xchg
add
mov
out
andl
sbb
nop
add
xor
mov
jne
cmp
scas
jnp
icebp
fldcw
add
xchg
sti
mov
jae
push
daa
sbb
sub
fwait
popf
mov
xchg
jne
dec
jo
mov
in
inc
mov
mov
mov
xor
hlt
les
outsl
mov
repnz
das
sbb
mov
add
mov
mov
add
aaa
insl
adc
aad
bound
mov
mov
pop
mov
lock
sub
dec
sub
mov
pop
pop
push
ja
ja
mov
repnz
sub
pop
fistps
outsb
sub
jg
push
insl
lods
sbbl
add
loope
xchg
mov
jne
ss
icebp
sbb
jmp
add
adc
mov
mov
push
andl
push
add
add
addb
hlt
rcrl
sub
add
rorl
add
xchg
jne
test
scas
test
mov
add
nop
add
sbb
add
jbe
or
aaa
xchg
add
push
test
add
push
sbb
ret
push
cmpsb
inc
jns
jns
mov
mov
cmpsb
push
mov
ss
ret
jge
mov
loopne
mov
mov
insb
ret
and
mov
mov
lock
pop
and
mov
add
mov
add
mov
xor
mov
lds
leave
cmpsl
adc
mov
lock
fwait
xor
mov
dec
cwtl
adc
mov
cmp
add
add
rolb
mov
ret
or
stos
adc
mov
mov
dec
jl
jmp
dec
mov
mov
ret
dec
aas
xlat
js
mov
dec
adc
push
add
lret
mov
mov
mov
inc
hlt
dec
rorl
sub
add
xlat
pop
adc
stc
cmpl
add
and
data16
fstps
add
add
mov
mov
test
movsb
xchg
fldenv
jp
push
mov
adc
sbb
sbb
sbbl
enter
addb
push
iret
es
inc
add
xor
mov
mov
mov
add
pop
scas
add
jb
mov
outsb
in
sbb
and
mov
andl
push
mov
add
movsb
loop
mov
jae
mov
jmp
dec
int
es
add
adcl
mov
lods
adc
mov
jne
lea
jmp
xchg
jo
mov
xchg
sbb
inc
mov
add
add
xchg
outsl
iret
and
or
inc
cmpsb
mov
lcall
clc
leave
daa
add
mov
push
jae
cmc
stc
jle
cmpsl
daa
push
push
out
int3
jno
jne
cmc
mov
sbb
lret
addb
xchg
imul
aad
sub
lcall
add
add
jl
add
rolb
mov
mov
cmp
jae
mov
cmpsl
cld
jne
pop
loopne
mov
fs
adc
mov
sbb
into
ss
fucomi
xchg
outsb
ds
imul
movsl
mov
jne
jl
mov
mov
mov
je
add
mov
jp
jae
in
dec
or
inc
add
jg
inc
add
xor
mov
jb
mov
nop
add
sbb
sbb
mov
add
jae
jge
xchg
repz
xor
add
mov
sub
xor
add
addb
clc
ja
addb
sub
lcall
add
add
mov
mov
mov
stos
mov
xor
mov
mov
pop
nop
add
test
add
arpl
lock
pusha
add
loopne
mov
mov
and
addb
nop
add
mov
ret
add
dec
sahf
fsubl
add
mov
push
add
xchg
mov
pop
and
into
sbb
or
add
add
mov
cmp
ret
cld
sub
lods
pop
jmp
dec
add
mov
jl
push
out
fisttps
fidivrs
push
lret
add
mov
ja
add
adc
pop
mov
mov
dec
sub
pop
sub
xchg
adc
xchg
add
xor
or
add
dec
or
aaa
jp
bound
mov
dec
fsts
arpl
test
cs
clc
dec
cmp
add
dec
addl
movl
cmp
es
inc
xchg
pop
arpl
mov
int
push
addb
cmp
lods
fimuls
dec
aad
mov
adc
fdivs
rcll
sbb
cld
mov
mov
shll
xchg
add
inc
push
push
mov
add
xchg
pop
mov
cmpsb
dec
out
mov
mov
jns
xor
mov
add
add
add
scas
cmp
dec
mov
jecxz
adc
mov
mov
idiv
pushf
xchg
mov
movsl
jne
xchg
mov
push
pop
aas
sahf
lock
inc
outsl
cmp
jo
mov
add
mov
xchg
xor
addr16
jmp
rolb
mov
mov
imul
mov
add
jb
mov
add
dec
mov
xor
mov
add
adc
push
aam
add
