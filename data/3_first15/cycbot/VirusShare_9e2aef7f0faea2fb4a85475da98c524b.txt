add
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
mov
mov
sbb
fcoms
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
div
div
div
div
div
div
div
div
div
div
nop
nop
nop
div
div
div
div
imull
cwtl
cwtl
cwtl
cwtl
cmp
cmp
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
mov
mov
mov
mov
mov
mov
rol
rol
rol
nop
nop
nop
nop
nop
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
int
int
int
int
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmc
cmc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
jge
jge
jge
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cli
cli
cli
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jg
jg
jg
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jmp
jmp
jmp
jmp
jmp
jmp
jmp
pop
pop
pop
pop
pop
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addb
addb
addb
addb
addb
addb
addb
addb
addb
div
div
div
div
div
div
div
div
imull
sub
sub
sub
sub
sub
sub
sub
sub
cs
test
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jo
jo
jo
add
add
add
add
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
jbe
sbb
repnz
repnz
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
loopne
loopne
loopne
loopne
loopne
loopne
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
ljmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
add
xor
xor
xor
xor
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
push
push
push
test
test
test
test
test
test
test
lcall
out
out
out
out
out
out
out
out
out
out
out
out
out
sbb
sbb
sbb
jle
jle
jle
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
iret
iret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
and
jmp
jmp
sbb
sbb
sbb
sbb
sbb
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
mov
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jbe
jbe
jbe
jbe
nop
push
push
ds
ds
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
scas
scas
scas
lcall
and
and
and
push
push
push
push
push
push
push
push
aad
aad
xchg
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
bound
bound
bound
bound
bound
mov
sti
sti
popf
popf
popf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
es
cs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
int
int
int
int
int
int
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addb
addb
cmp
leave
leave
leave
leave
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
outsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
es
es
es
pop
pop
pop
pop
pop
test
test
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
and
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
sbb
sbb
sbb
sbb
sbb
jecxz
jecxz
jecxz
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
js
or
adc
adc
adc
adc
adc
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
mov
mov
jns
jns
jns
jns
nop
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
sub
sub
sub
nop
nop
nop
std
std
std
std
std
std
std
std
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fdivs
xor
xor
xor
xor
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
addl
test
test
test
test
test
mov
mov
mov
push
push
push
push
push
ret
ret
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
leave
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
ljmp
ljmp
ljmp
ljmp
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
inc
inc
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
addb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
mov
mov
mov
mov
xchg
xchg
xchg
xchg
add
add
add
add
add
add
add
add
mov
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
test
test
test
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rolb
add
add
add
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jnp
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
sub
sub
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
cld
cld
cld
cld
cld
cld
cld
cld
fcmovu
fcmovu
fcmovu
fcmovu
fcmovbe
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shl
loop
loop
loop
push
push
push
push
push
push
push
imul
imul
push
push
push
push
push
push
push
push
push
stc
stc
stc
ja
ja
ja
and
and
and
and
and
and
and
and
and
and
and
and
and
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
or
jl
jl
jl
jl
addr16
addr16
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
jns
jns
jns
jns
jns
jns
jns
jns
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpsl
cmpsl
add
add
add
add
add
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
push
push
push
push
das
das
das
das
das
das
insl
nop
nop
nop
nop
nop
nop
nop
icebp
test
pop
pop
pop
mov
mov
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
cmp
data16
mov
mov
mov
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
lea
lea
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
and
and
and
and
and
lahf
lahf
lahf
lahf
mov
mov
mov
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
pop
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
ja
ja
ja
ja
ja
ja
ja
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
and
and
and
and
and
and
and
and
and
and
and
and
and
stos
stos
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
nop
out
xchg
xchg
xchg
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
stos
stos
stos
stos
stos
stos
stos
stos
add
add
add
add
inc
inc
inc
inc
inc
inc
div
div
xchg
xchg
xchg
xchg
xchg
xchg
imul
imul
imul
imul
imul
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
mov
mov
mov
mov
mov
sub
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lea
lea
lea
lea
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
jne
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
xchg
xchg
xchg
arpl
arpl
arpl
arpl
arpl
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
mov
mov
mov
and
and
and
rol
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
std
std
std
std
std
std
std
std
std
std
std
std
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
nop
nop
nop
nop
nop
xlat
xlat
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
sub
sub
sub
sub
stc
stc
stc
stc
stc
or
or
or
or
or
or
jg
jg
jg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
sbb
sbb
in
in
in
in
in
in
mov
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
nop
nop
nop
nop
nop
add
add
out
out
out
out
out
out
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
out
out
out
mov
mov
mov
mov
mov
mov
mov
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
mov
mov
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
nop
nop
nop
push
push
push
push
in
test
test
test
xor
inc
inc
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
add
add
pushf
pushf
cmc
cmc
cmc
cmc
in
in
in
in
in
in
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
jno
in
in
in
in
in
in
in
in
in
in
in
push
push
push
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
cs
cs
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
push
push
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jo
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jb
jb
jb
jb
jb
jb
jb
jb
ljmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
xor
xor
xor
xor
xor
xor
xor
and
and
mov
mov
mov
mov
mov
mov
mov
addl
addl
addl
std
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
gs
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
mov
mov
mov
mov
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rcll
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jecxz
jecxz
jecxz
jecxz
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xchg
xchg
xchg
xor
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
aas
aas
aas
aas
aas
aas
aas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
or
or
or
or
or
or
jg
jg
jg
jg
jg
jg
jg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ret
jmp
jmp
jmp
nop
nop
movsb
movsb
movsb
movsb
movsb
movsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
nop
nop
xchg
xchg
fcmovnu
fcmovnu
fcmovnu
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
es
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
insb
insb
insb
insb
insb
insb
insb
insb
insb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
aas
aas
aas
aas
xchg
les
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
out
out
out
out
out
lea
lea
nop
nop
nop
nop
cltd
cltd
nop
nop
nop
nop
jge
jge
jge
jge
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
mov
xor
cmp
push
pop
add
add
sub
add
in
loop
push
mov
add
add
dec
add
add
mov
xorb
mov
and
and
push
mov
jp
inc
jo
sub
inc
lahf
fadd
sub
inc
add
sub
xorl
fldcw
xor
stos
nop
mov
imul
push
in
jnp
sbb
add
pop
add
add
mov
mov
int
add
shrl
fbstp
repnz
enter
and
hlt
inc
add
jmp
add
xor
fdivs
add
mov
insl
cmp
adc
stos
push
add
fcompl
fucom
jp
jmp
dec
add
add
and
push
add
add
addr16
cli
adc
lcall
xchg
sub
daa
test
add
jns
call
iret
pop
xchg
mov
add
daa
push
push
add
in
add
mov
adc
sub
and
add
add
shrl
pop
add
dec
add
mov
cs
xor
iret
cltd
jg
add
inc
aad
aaa
and
xchg
call
mov
dec
add
aam
insb
add
add
scas
imul
pop
loop
repnz
ljmp
cmpsl
dec
add
test
xchg
dec
add
jle
xchg
jns
add
data16
inc
add
jmp
clc
and
pop
add
mov
or
adc
cmp
pop
mov
push
stos
addl
sti
pop
add
rcrb
fdivl
rclb
mov
push
add
dec
add
and
in
incb
outsl
icebp
das
xor
add
popa
mov
mov
movsl
dec
or
imul
jno
pop
add
add
js
mov
and
das
fwait
insl
mov
mov
fwait
jge
mov
cmc
jecxz
movsl
sub
out
cli
call
popf
add
jle
icebp
mov
rolb
add
sbb
mov
pop
shl
movups
adc
ss
fstps
popa
dec
cld
mov
jo
addb
xor
adc
and
repnz
add
add
xchg
fwait
aas
icebp
loop
add
push
fstl
in
enter
icebp
mov
mov
lds
mov
xor
adc
add
fwait
sbbb
pop
jbe
sbb
sarl
dec
test
xchg
lea
nop
int
add
and
bound
rorb
cli
sbb
scas
shrl
add
add
xchg
cmp
in
and
stos
jns
dec
or
inc
add
add
sbb
sbb
add
scas
and
jnp
add
mov
xchg
mov
xorb
add
add
rclb
clc
outsl
arpl
lcall
sub
negl
inc
roll
add
dec
add
addr16
add
loop
inc
cmp
add
jmp
mov
int3
mov
add
add
out
ret
add
notb
mov
sahf
jae
add
add
add
fs
mov
add
cmp
sbb
add
dec
movsb
dec
add
ja
add
add
fsubrs
add
data16
rorl
add
add
lods
insb
add
or
xor
outsl
inc
add
push
add
add
jns
in
add
mov
pop
repz
jge
mov
sub
int
fnsave
scas
push
add
or
sbb
fwait
sbb
ja
popa
cmpsb
adc
jno
add
xchg
jne
lret
cltd
mov
lret
xchg
pop
add
mov
shrl
sarb
ss
sub
cltd
xchg
insl
int
sub
adc
xor
lahf
lods
inc
add
add
movsl
lds
in
add
jp
cmp
lret
outsl
sub
mov
add
add
inc
mov
jae
jmp
mov
jns
out
dec
adcb
cmp
sub
aad
dec
push
movsb
jge
shl
test
add
scas
lret
rol
out
repz
test
add
ret
mov
mov
inc
add
mov
shlb
aad
insl
aam
add
imulb
fucomp
sbb
pusha
add
add
add
add
lods
cmp
and
add
push
add
sbb
add
add
xchg
and
dec
add
pusha
add
arpl
dec
ret
sub
sti
out
add
sub
inc
add
add
xchg
aas
hlt
cld
jg
mov
jecxz
lds
dec
mov
sbb
add
dec
add
mov
xor
in
orb
add
rcrl
jmp
pop
add
shll
in
mov
cwtl
scas
cmpsl
mov
lods
in
lock
lret
push
add
xorb
mov
idivb
add
cmpsb
shll
and
lret
xor
lea
sbb
add
add
rcrl
xlat
pop
add
in
insb
add
das
mov
adc
shrb
dec
lock
cmp
add
cmp
sti
mov
test
xor
outsl
add
lret
out
add
cmp
mov
cwtl
push
jno
add
in
mov
add
pop
add
adc
inc
lea
mul
nop
lcall
jb
mov
add
loope
aad
dec
add
cld
sahf
xchg
mov
lods
mov
pop
add
or
jecxz
jnp
scas
mov
repnz
aam
js
fs
xchg
std
pop
pop
pop
xor
sub
inc
sar
sub
add
sbbl
sbbb
xor
adc
je
icebp
movsl
pop
rcrl
add
sbb
outsb
add
outsb
add
ja
push
add
mov
pusha
add
es
repz
add
mov
cltd
sub
sarl
sahf
pop
cmp
jae
cmp
test
daa
add
call
add
add
pop
add
in
xchg
mov
cs
mov
jmp
cltd
punpckhdq
and
inc
jmp
or
test
sub
cmpb
add
mov
add
in
clc
dec
add
push
xchg
jbe
sbb
sbb
sub
cltd
dec
add
dec
iret
push
add
add
add
mov
cmp
sbb
cmp
mov
frstor
add
add
add
add
inc
add
and
jg
popa
pop
mov
imul
pop
add
mov
inc
cmp
cmpsb
mov
add
jge
xchg
push
add
nop
mov
add
xchg
cmp
mov
lds
int3
mov
insb
add
add
iret
mov
daa
or
add
cmpsl
sub
sub
add
add
xchg
dec
sub
add
adc
loope
xor
inc
push
add
and
inc
movsl
inc
add
xlat
sbb
dec
mov
add
add
hlt
and
lods
dec
add
add
add
add
popf
notl
pop
add
movsl
add
shr
xor
mov
pop
inc
add
or
out
pop
add
xchg
push
add
mov
test
cmc
add
mov
sbb
pop
add
add
or
sbb
lahf
leave
jmp
add
dec
add
dec
add
sbb
sub
lret
into
adc
movsb
cld
inc
jo
rcr
in
outsb
add
and
fbld
cmp
cmp
and
shl
push
add
dec
mov
add
jle
pusha
add
add
add
pusha
add
mov
int3
arpl
iret
bound
jnp
lea
xor
rorl
add
loope
push
add
popf
adc
cmp
lret
add
add
add
add
add
add
pop
sbb
sti
addr16
jge
fsubrl
test
ds
fs
je
jl
lcall
add
add
cmp
xchg
mov
mov
add
scas
push
add
add
cmovae
pop
sub
add
add
adc
sarb
add
adc
lds
push
add
inc
add
push
add
lret
mov
inc
mov
in
add
add
dec
push
pop
add
jg
add
and
add
add
mov
ljmp
test
dec
add
jns
xor
mov
push
dec
add
fstl
add
dec
add
and
mov
lds
jp
imul
and
out
pop
negl
add
add
add
cmp
ret
rcll
aas
push
add
add
sbb
mov
lods
sub
cmp
pop
add
jle
or
jp
into
decb
add
add
call
sbb
cmp
ficomps
outsl
jge
add
int
lods
cmp
cmp
pop
je
fs
in
test
enter
add
imull
xor
hlt
icebp
inc
pushf
test
jae
aam
or
cmp
cmp
movaps
rolb
add
fstl
cmc
mov
rcr
add
add
add
add
push
add
push
add
lret
mov
aam
enter
or
mov
popf
fisubs
add
mov
inc
add
add
add
add
and
call
xor
xchg
sbb
dec
or
add
popf
dec
add
pop
add
int3
pop
add
gs
into
sbb
mov
and
mov
add
loop
mov
add
out
add
add
add
jmp
dec
mov
jge
and
out
add
add
add
fldl
sub
dec
add
add
lcall
lcall
shll
sar
add
ret
into
jo
scas
pop
jb
xor
add
add
pop
sub
add
add
pop
add
in
mov
pop
inc
add
lahf
fsts
add
mov
jns
mov
jbe
xor
add
xchg
arpl
add
pop
push
add
fnstenv
lret
sub
cmpl
jle
jecxz
add
cli
addr16
add
lcall
add
xchg
push
add
mov
xchg
lahf
in
push
add
mov
stos
aas
js
or
lea
jmp
movsl
fistps
add
add
add
lahf
stos
push
push
add
xor
add
jmp
jne
add
xor
add
add
jl
inc
add
mov
push
pop
mov
inc
add
sbb
data16
inc
scas
leave
push
mov
adc
ljmp
inc
add
add
pop
add
add
les
add
dec
add
add
jnp
sub
add
lret
lcall
test
add
jb
fcmove
into
loope
daa
jmp
add
call
add
xchg
repnz
loope
xchg
add
sarl
push
lret
cmpsb
sbb
add
js
loop
add
xchg
cmp
add
or
add
add
call
pop
add
pop
add
mov
add
mov
mov
xchg
out
insl
lret
sbbl
inc
jnp
cltd
repnz
add
add
add
mov
out
add
add
hlt
jmp
xor
dec
add
add
push
mov
jl
lret
xchg
mov
mov
test
add
add
add
mov
ljmp
mov
shl
sti
sbb
mov
adc
add
xor
aas
std
xchg
rcr
inc
jbe
mov
add
add
add
add
sub
and
dec
add
add
aaa
add
mov
faddl
sbb
mov
dec
add
ret
fwait
out
std
cltd
mov
add
pop
mov
std
jmp
pushf
pop
add
iret
lahf
or
xchg
mov
cs
sub
pop
add
add
dec
add
mov
jle
adc
rclb
push
add
daa
mov
push
add
lret
xchg
ror
dec
pop
xor
movsb
add
std
xor
mov
decb
lret
mov
add
addl
push
sbb
out
sub
imul
push
jns
add
add
cmp
fsubrp
stos
nop
sub
add
add
add
fmul
adc
inc
pop
inc
mov
add
add
dec
lods
andl
add
sub
xchg
xchg
mov
arpl
punpckhwd
mov
scas
lea
insl
cwtl
add
sar
daa
sbb
push
add
push
add
xchg
add
popa
mov
sar
add
mov
add
jae
xor
inc
add
jl
pushf
jge
add
add
add
or
add
fisubrl
cs
pushf
ret
in
sub
scas
test
cmp
add
xchg
add
add
adc
cmp
arpl
add
ljmp
out
arpl
xchg
popa
xchg
and
or
mov
cmp
pop
add
bound
xor
in
jecxz
add
add
add
add
lahf
sti
and
dec
add
or
bound
xchg
stos
push
add
inc
add
loop
das
adc
repz
cmpsl
jb
shrb
ror
add
arpl
add
add
adc
sub
xchg
sbb
mov
add
lret
add
push
add
fnsave
add
sub
ja
xorl
pop
inc
add
add
jle
cmp
or
xor
sti
fcom
lret
mov
movsl
and
filds
mov
pop
add
cmp
or
test
pop
add
add
fwait
arpl
imul
dec
pop
pop
scas
out
dec
and
mov
dec
repz
add
add
adc
addr16
ret
xchg
jl
divl
jmp
sub
add
pop
pop
inc
pop
add
xchg
xor
mov
add
cmp
push
scas
movsb
sar
pop
iret
daa
push
in
lock
movsl
inc
inc
add
add
add
cwtl
hlt
cmp
mov
pop
xchg
xchg
sbbl
addr16
lock
leave
mov
pop
add
sub
sti
mov
sub
out
add
dec
add
push
cmp
shll
push
add
sbb
test
add
inc
add
cmp
insl
imul
gs
fistl
add
outsl
lcall
add
fisttps
add
fldt
xor
icebp
aam
subb
and
push
inc
add
mov
negl
mov
outsb
add
add
add
idivb
mov
add
ret
push
add
cmpsl
sahf
adc
mov
sub
sub
out
je
das
adc
and
add
ja
xchg
adc
add
mov
loopne
lahf
out
ljmp
add
ret
aaa
in
xor
jo
cmp
mov
or
mov
pop
bts
inc
add
pop
add
pop
fstpl
add
add
sub
xorl
add
orl
mov
add
add
push
sbb
daa
sub
jmp
add
aam
mov
sub
fisubl
xchg
aas
sbb
bound
mov
cwtl
sub
xor
bound
and
xor
sub
fbld
push
xchg
push
cmp
pop
add
in
pop
add
out
into
adc
cmp
jl
imul
outsb
add
jl
or
cmp
jecxz
inc
stos
repz
pushf
arpl
jns
add
aaa
xor
sbb
mov
test
xlat
mov
add
loop
add
ja
add
add
stos
mov
pop
loop
add
push
add
mov
add
xchg
lds
ret
inc
add
add
sbb
andb
shll
add
fiadds
xor
mov
add
adc
add
jl
imul
mov
xor
addr16
movsb
hlt
inc
jb
jge
roll
add
mov
and
sbb
test
push
add
test
gs
mov
bound
fsubl
add
pusha
add
add
add
xchg
push
mov
mov
add
into
sbb
popf
pop
add
std
test
add
icebp
loop
stc
add
xor
cmp
in
inc
cmpsb
add
and
std
out
mov
cmp
mov
mov
add
adc
mov
fwait
sbb
push
add
add
or
dec
add
add
sti
mov
aaa
sbb
dec
mov
fcompl
mov
or
aas
dec
push
into
arpl
inc
add
faddp
add
jge
nop
mov
pop
adc
add
or
adc
pop
movsl
dec
add
add
pop
pop
cli
test
cwtl
cmp
fisubrl
add
rcll
add
pushf
and
xlat
xor
add
xchg
push
ljmp
xor
or
arpl
jmp
clc
lret
insl
arpl
in
add
das
shll
add
clc
test
test
add
add
pop
add
add
add
and
fdivr
gs
mov
pop
leave
xchg
dec
mov
into
sub
sub
shlb
add
cmpsl
movsl
std
and
or
jno
jo
adc
adc
or
dec
add
bound
aad
add
popf
out
add
push
add
xchg
cmp
inc
add
std
adc
arpl
clc
mov
dec
add
xchg
cmp
cld
mov
xchg
out
rcrl
add
rorl
pop
add
add
jns
push
add
dec
or
cltd
repz
add
xor
xchg
orl
inc
add
stos
or
aaa
loop
sbb
push
add
insl
push
fcmovu
and
adc
push
add
add
dec
add
add
cltd
pop
jp
add
hlt
clc
fsubs
add
sub
add
lods
cmp
fisttpl
add
cli
xchg
int
sub
outsl
lcall
jbe
sub
cwtl
mov
sub
dec
add
cmp
mov
sub
inc
add
lods
aaa
fiaddl
cmpsb
movsb
jge
add
out
jg
push
add
sbb
add
pop
xor
dec
add
push
add
js
leave
cmp
cmp
ret
xchg
sub
out
repz
add
push
or
stc
cltd
pop
sbb
ret
add
imul
add
and
add
or
cmpsl
cli
clc
mov
mov
in
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
mov
add
xchg
or
cmp
frstor
dec
add
mov
sbb
add
pop
add
fimull
add
and
push
add
xchg
mov
pushf
fst
fildll
out
add
push
xor
in
popf
sub
mov
std
mov
jecxz
daa
rcll
mov
add
dec
add
or
add
mov
add
add
jg
add
cmpsb
enter
inc
inc
add
test
into
mov
add
cs
les
add
bound
js
imul
shll
jle
shrl
add
mov
rorl
inc
add
inc
add
add
inc
add
sub
xor
add
push
add
dec
mov
mov
add
mov
sub
mov
testb
xchg
int3
add
add
adc
in
adc
add
dec
add
movsl
dec
pop
lea
add
add
out
loope
add
add
add
push
add
push
add
ljmp
cli
sarb
in
loopne
jl
cmpsb
mov
sarb
in
inc
add
xchg
xchg
dec
add
mov
push
add
cmp
cmp
cmp
adc
xchg
adc
ret
adc
bound
lods
cmp
nop
int
and
and
sub
sbb
add
add
aaa
or
pop
add
pop
fwait
dec
add
inc
add
add
mov
add
mov
add
movsb
mov
mov
sbb
lret
movsb
sbb
les
add
add
mov
inc
pop
add
fs
pop
jg
and
shlb
add
inc
add
adc
jmp
out
add
xchg
jmp
into
pop
pcmpeqb
adc
xor
pop
add
push
add
push
add
add
cmc
repz
add
lret
js
fmulp
movsb
add
lahf
and
aad
adc
enter
cmp
rclb
ret
ret
pop
add
leave
jnp
je
movsl
sti
mov
add
not
xchg
or
out
add
jp
push
add
adc
add
mov
aas
shrb
xchg
mov
and
sbb
out
cld
stos
std
pop
and
push
add
popa
push
add
add
call
mov
js
fisubrl
popa
dec
add
mov
mov
daa
ljmp
out
add
or
add
jmp
add
add
mov
sub
add
push
add
add
add
in
je
sti
std
pop
add
mov
cmp
jmp
add
add
sbb
lea
dec
aaa
inc
add
cs
daa
adc
int
std
mov
imul
add
or
mov
aaa
mov
adc
imul
add
mov
hlt
or
add
cmp
addb
mov
xorb
add
adc
sbb
inc
add
push
or
add
loop
add
add
jb
add
movsb
lcall
add
push
push
into
xchg
inc
add
out
xor
push
add
inc
cwtl
push
add
add
adc
add
add
add
cmp
pop
std
ja
loopne
pop
add
add
jno
adc
sar
pslld
add
add
cwtl
repz
add
jecxz
leave
or
mov
add
and
xchg
inc
add
add
add
fnstenv
out
add
add
add
push
add
add
out
add
lahf
and
pop
cmc
data16
add
inc
add
add
mov
adc
scas
aas
mov
insl
push
add
cmp
call
add
add
add
and
inc
aam
aam
and
inc
sub
out
or
lret
push
add
scas
cli
push
add
je
pop
xor
hlt
std
pop
loope
test
in
push
add
pop
rcrb
and
pop
jns
loopne
mov
add
inc
add
add
cld
add
stos
out
cwtl
dec
add
add
sbb
sbb
add
xchg
cmpsl
add
in
shlb
jns
data16
mov
out
mov
div
repz
add
xchg
out
out
sub
loop
add
add
daa
and
jl
jb
push
add
push
add
mov
les
jl
cwtl
inc
add
xchg
mov
das
and
jo
scas
stos
mov
add
or
add
and
fsubs
or
daa
sbb
call
push
add
out
dec
gs
and
mov
lcall
jae
add
push
pop
pop
add
xchg
in
add
xchg
ja
es
loope
add
vcvtsd2ss
or
addb
out
xchg
adc
add
jle
cmpb
fldl
dec
test
jge
inc
add
sub
xchg
xchg
push
add
mov
jge
add
xchg
push
add
aam
add
sub
in
dec
aad
mov
add
repz
add
add
out
add
addr16
rclb
sbb
cmp
inc
shl
add
or
daa
scas
adc
adc
add
sbb
push
add
sbbl
add
add
and
sahf
loopne
pop
mov
jge
add
jg
add
add
fisttpll
sbb
push
add
sbbb
adc
and
testl
jge
push
imul
or
pop
dec
add
fimull
cmp
add
addb
das
jmp
pop
sub
loop
mov
inc
add
add
xchg
adc
movsl
push
sbb
lods
test
cmp
mov
add
or
sub
outsl
xor
fimuls
pop
cmp
sahf
stc
pusha
add
test
stos
andl
mov
jne
inc
add
dec
or
add
cmp
dec
out
add
lcall
jo
dec
pop
xor
add
int
imul
mov
mov
sbb
js
popf
and
int3
mov
dec
add
sbb
cltd
jle
sbb
push
add
repz
shll
push
or
ja
add
and
adc
add
add
sub
jae
add
nop
jo
adc
sarl
scas
xlat
pop
mov
jbe
subb
xchg
push
add
add
or
push
add
ficoms
add
jge
add
mov
pop
mov
add
aad
scas
out
cld
push
pop
push
add
arpl
jno
jo
in
mov
add
jecxz
or
add
cmp
and
add
add
dec
sub
and
add
aam
mov
cmp
repnz
add
add
in
cld
or
and
mov
xor
sub
jno
add
or
sub
orb
mov
add
xchg
jg
cmc
addr16
sub
xchg
dec
fisttpl
add
xlat
xor
popf
sahf
push
sub
repnz
imul
pop
nop
add
scas
ret
or
test
add
push
add
cmp
jb
dec
add
aam
or
stos
mov
stos
fldt
icebp
jae
mov
adc
push
jae
sub
pop
ror
nop
push
pop
add
lcall
add
add
add
xlat
or
add
aam
int3
or
iret
add
scas
cltd
jo
nop
xchg
push
add
js
dec
icebp
jmp
sahf
gs
les
jl
fiadds
add
mov
add
add
add
add
int
jno
add
sub
or
add
mov
add
stos
aaa
xchg
ret
lods
sbb
rcl
repz
and
je
adc
loope
fwait
insb
add
inc
add
mov
inc
add
mov
lret
shll
sbb
adc
jne
add
add
add
ja
add
iret
add
test
mov
je
insb
add
inc
add
xchg
push
add
neg
je
push
add
rcll
nop
lods
xor
inc
leave
or
mov
ret
add
sbb
test
add
data16
push
add
shrb
add
jl
inc
mov
cld
pop
xor
add
add
lret
jge
mov
push
popf
jnp
je
leave
into
pop
and
add
jbe
sub
add
sbb
scas
fsubr
inc
add
jecxz
add
add
cmp
in
add
cmpsl
jae
sub
imul
cmp
ss
cmp
stos
add
xor
xchg
inc
lea
out
in
add
push
subb
loope
sub
ja
cmp
leave
imul
xor
mov
cmpsb
jbe
jge
add
in
dec
lcall
pop
mov
mov
mov
scas
loopne
add
push
ljmp
repz
jb
mov
push
add
icebp
aas
psrld
sbb
ja
add
data16
sub
or
add
sbb
mov
add
add
sub
test
cli
mov
adc
pop
add
jmp
cmp
mov
add
mov
push
add
mov
push
jne
jno
cmp
add
add
jl
popa
xchg
fmul
stos
adc
pop
loopne
add
addl
push
add
clc
mov
lods
lods
fldcw
add
hlt
test
add
mov
mov
in
add
mov
mov
add
add
mov
add
add
fmuls
add
add
and
lret
push
repz
push
add
bound
xor
pusha
add
test
add
jbe
and
out
sub
pop
add
clc
xchg
and
add
fwait
cli
dec
add
jmp
dec
add
loop
mov
push
add
rcr
stc
insl
inc
add
cld
idivb
out
cltd
pop
add
loop
out
into
sahf
sub
lret
sti
xchg
out
sub
lods
lret
addb
hlt
xchg
insb
add
mov
add
push
add
mov
ljmp
add
jae
add
lcall
or
mov
scas
or
jae
lret
andb
stos
push
add
mov
add
jne
jp
pusha
add
test
add
stc
subb
decb
jne
stos
or
mov
mov
test
mov
call
inc
add
cmp
mov
test
sub
jp
stos
sbb
add
add
push
add
mov
scas
inc
add
not
ret
push
notb
mov
jne
out
lcall
cmp
push
add
push
add
add
fucomp
adc
xor
pusha
add
inc
add
cmp
call
push
add
lret
lds
jnp
jecxz
lock
fucomi
push
add
mov
je
or
popl
add
inc
dec
sbb
aam
mov
loope
add
add
add
test
daa
jne
add
jmp
rcr
stc
and
mov
add
inc
add
add
add
xchg
jnp
xor
sub
or
cmp
mov
add
or
clc
insb
add
sti
test
cmpsb
add
add
iret
dec
add
mov
add
mov
int
ret
mov
shl
scas
outsb
add
setg
dec
bnd
pop
add
imul
add
lds
fistpl
sub
out
xchg
xor
fcoml
shl
add
cmp
inc
shrl
inc
cld
push
lods
std
int
push
add
inc
add
ja
mov
jnp
popf
pop
sbb
cmp
jnp
add
jb
popf
int
add
xor
inc
add
add
add
jmp
add
jle
lea
push
add
jmp
in
pop
add
mov
into
fcoms
dec
add
mov
add
rcrl
xor
popf
pop
xor
push
shll
addr16
mov
sti
imull
add
dec
add
mov
add
insb
add
push
add
or
or
add
push
add
pop
push
add
cmp
lods
mov
xchg
pop
or
ret
xor
add
sbb
add
add
mov
xor
jns
cmp
inc
add
cmp
and
jmp
dec
add
add
add
dec
add
popa
mov
add
aad
mov
insl
push
add
add
cmc
inc
sbb
add
push
add
scas
xchg
jno
mov
pop
out
popf
add
add
sbb
mov
inc
inc
repnz
mov
in
mov
insb
add
add
imul
mov
sbb
pop
and
xchg
mov
or
cs
movsb
fwait
mov
add
and
lahf
data16
aaa
sub
popf
lods
imul
sub
pop
repz
ja
gs
ret
outsl
pop
pushf
or
or
pop
popa
fwait
test
popa
adc
cmc
pop
test
inc
add
xchg
lcall
pusha
add
mov
or
lret
imul
add
inc
add
add
repz
xorb
cltd
push
add
add
lock
lock
loopne
add
lret
or
sbb
in
clc
cmp
arpl
out
clc
repnz
nop
nop
jae
mov
add
add
nop
push
mov
leave
nop
jmp
int
add
clc
repnz
nop
nop
jae
push
add
sub
cld
nop
nop
jae
add
fadds
adc
add
push
add
push
add
inc
push
mov
xchg
ret
xor
add
xor
add
loop
push
push
mov
xchg
ret
add
add
add
pop
inc
popl
sti
clc
repnz
nop
nop
jae
push
add
and
outsb
inc
add
incb
cltd
add
pop
movsb
add
pop
fistpl
push
mov
xchg
ret
add
adc
add
cmp
ss
add
repnz
nop
nop
jae
jno
scas
xor
add
movsb
nop
push
mov
leave
nop
jmp
add
xor
lahf
add
out
push
clc
repnz
nop
nop
jae
add
sub
nop
nop
jae
add
add
scas
pushf
push
add
push
jmp
incl
pop
dec
mov
add
std
mov
dec
add
repz
clc
repnz
nop
nop
jae
push
dec
sub
leave
push
lcall
nop
nop
jae
mov
movsl
xor
mov
adc
popa
mov
clc
repnz
nop
nop
jae
insb
fadds
leave
clc
push
mov
push
mov
xchg
ret
or
mov
add
je
clc
repnz
nop
nop
jae
add
add
and
push
mov
xchg
ret
add
and
fcmovnu
sbb
clc
repnz
nop
nop
jae
subl
push
mov
xchg
ret
add
movsl
lahf
add
std
mov
fwait
clc
repnz
nop
nop
jae
add
push
scas
xor
mov
push
mov
xchg
ret
add
add
movsb
ljmp
enter
xchg
ret
std
add
and
add
call
mov
leave
nop
jmp
add
add
and
add
mov
nop
push
mov
leave
nop
jmp
add
and
xor
nop
nop
jae
add
sub
add
movsl
xor
clc
repnz
nop
nop
jae
adc
rorl
xor
insb
add
nop
nop
jae
scas
add
add
add
fcomps
pop
clc
repnz
nop
nop
jae
add
movsl
add
add
leave
cmp
je
sbb
sbb
les
clc
repnz
nop
nop
jae
add
add
add
mov
add
mov
clc
repnz
nop
nop
jae
add
sub
cmp
xchg
ret
mov
fwait
add
inc
add
repnz
nop
nop
jae
scas
xor
add
add
nop
push
mov
leave
nop
jmp
add
xor
add
xchg
inc
add
adc
insb
add
add
shl
push
add
repnz
nop
nop
jae
stos
add
add
and
pop
mov
clc
repnz
nop
nop
jae
add
pushl
push
mov
xchg
ret
imul
cltd
push
push
add
inc
add
clc
repnz
nop
nop
jae
mov
jl
sub
orb
add
nop
push
mov
leave
nop
jmp
add
push
clc
repnz
nop
nop
jae
or
add
clc
repnz
nop
nop
jae
xor
add
add
add
push
push
mov
add
add
add
and
add
add
push
clc
repnz
nop
nop
jae
add
mov
adc
cld
or
add
xor
add
scas
adc
add
cld
nop
nop
jae
xor
mov
hlt
add
inc
mov
clc
repnz
nop
nop
jae
add
push
and
add
push
shl
nop
push
mov
leave
nop
jmp
add
adc
add
add
nop
jmp
add
shrl
add
nop
nop
jae
inc
adc
and
loop
add
mov
leave
nop
jmp
adc
add
add
loope
or
add
clc
repnz
nop
nop
jae
add
pop
sbb
mov
leave
nop
jmp
xor
add
scas
loope
clc
repnz
nop
nop
jae
add
enter
xor
nop
nop
jae
out
lahf
adc
add
add
dec
add
mov
leave
nop
jmp
jbe
cltd
add
add
scas
popa
add
clc
repnz
nop
nop
jae
roll
xor
jbe
lea
nop
push
mov
leave
nop
jmp
add
jns
add
clc
repnz
nop
nop
jae
add
sub
seto
in
leave
nop
jmp
roll
cltd
add
subb
repz
clc
repnz
nop
nop
jae
add
ja
test
clc
repnz
nop
nop
jae
add
xor
or
jae
add
add
leave
nop
jmp
lahf
add
imul
arpl
add
add
add
xchg
dec
nop
push
mov
leave
nop
jmp
xor
xor
add
and
push
mov
leave
nop
jmp
add
add
xor
aam
dec
add
push
mov
xchg
ret
fwait
dec
add
fld1
clc
repnz
nop
nop
jae
adc
add
add
add
nop
nop
jae
add
incb
movsl
add
add
cmp
nop
push
mov
leave
nop
jmp
enter
add
push
mov
xchg
ret
and
xor
mov
sbb
add
clc
repnz
nop
nop
jae
enter
std
movzwl
clc
repnz
nop
nop
jae
fwait
add
pop
push
mov
xchg
ret
mov
add
movsl
stc
add
clc
repnz
nop
nop
jae
add
cmp
add
clc
repnz
nop
nop
jae
jbe
jbe
je
clc
repnz
nop
nop
jae
add
pop
add
flds
ret
push
mov
xchg
ret
add
and
shll
popf
pop
clc
repnz
nop
nop
jae
lods
add
add
add
pop
outsl
rol
nop
push
mov
leave
nop
jmp
add
inc
add
sbb
push
mov
push
mov
xchg
ret
add
add
add
add
fistpl
nop
push
mov
leave
nop
jmp
add
add
add
adc
je
sbb
jns
add
pop
int3
inc
add
popa
roll
bound
add
test
sub
clc
repnz
nop
nop
jae
add
fimuls
repnz
nop
nop
jae
add
hlt
add
mov
xchg
ret
scas
add
mov
hlt
push
push
add
pop
nop
push
mov
leave
nop
jmp
mov
add
jnp
sar
repnz
nop
nop
jae
add
jbe
push
push
mov
xchg
ret
jns
add
enter
sbbl
jae
out
loopne
dec
and
inc
add
dec
inc
clc
repnz
nop
nop
jae
add
add
mov
xchg
ret
std
add
or
mov
push
add
popf
mov
clc
repnz
nop
nop
jae
xor
add
add
clc
repnz
nop
nop
jae
arpl
add
clc
repnz
nop
nop
jae
add
std
add
xor
xchg
repnz
nop
nop
jae
add
push
jo
repnz
nop
nop
jae
add
dec
add
dec
pop
inc
add
add
stos
add
add
jbe
add
shrl
xor
int
popa
clc
repnz
nop
nop
jae
add
add
add
push
rolb
push
and
enter
lahf
lods
out
add
push
mov
xchg
ret
xor
leave
aam
add
or
repnz
nop
nop
jae
incb
add
arpl
clc
repnz
nop
nop
jae
add
loopne
lret
jne
clc
repnz
nop
nop
jae
scas
add
repnz
nop
nop
jae
add
add
and
add
shr
push
mov
xchg
ret
imul
inc
icebp
xor
clc
repnz
nop
nop
jae
hlt
pop
add
mov
adc
repnz
nop
nop
jae
xor
add
add
mov
xchg
ret
xor
add
add
and
push
mov
xchg
ret
add
push
incb
imul
nop
nop
jae
dec
loopne
add
jno
popf
cmpw
nop
push
mov
leave
nop
jmp
mov
test
nop
push
mov
leave
nop
jmp
push
adc
push
add
popa
push
push
mov
xchg
ret
add
add
add
pop
add
lret
push
mov
xchg
ret
loopne
lahf
xor
add
and
gs
clc
repnz
nop
nop
jae
adc
add
movsl
mov
movl
add
add
incb
add
inc
add
nop
push
mov
leave
nop
jmp
pop
leave
add
cltd
add
adc
xchg
lret
pop
push
mov
xchg
ret
add
add
incb
jbe
cltd
mov
fdivr
repnz
nop
nop
jae
lods
add
add
std
cld
push
mov
xchg
ret
scas
fwait
add
mov
int
and
mov
nop
push
mov
leave
nop
jmp
dec
sub
pop
push
clc
repnz
nop
nop
jae
roll
inc
fwait
add
add
repnz
nop
nop
jae
add
add
sarl
clc
repnz
nop
nop
jae
aam
jno
add
stos
add
nop
nop
jae
cltd
add
sub
add
add
xor
or
cld
nop
nop
jae
movsb
int
xor
xor
add
push
mov
xchg
ret
add
add
movsl
push
testl
nop
push
mov
leave
nop
jmp
add
jno
cli
cmp
mov
xchg
ret
scas
add
roll
add
scas
mov
roll
repnz
nop
nop
jae
fcomps
test
je
jmp
add
add
add
add
xlat
push
clc
repnz
nop
nop
jae
add
hlt
add
roll
add
push
clc
repnz
nop
nop
jae
add
inc
add
pop
jno
cwtl
dec
add
push
push
mov
xchg
ret
out
add
add
add
mov
inc
add
add
add
add
add
cld
nop
nop
jae
add
add
arpl
inc
arpl
test
xchg
ret
mov
and
add
and
add
gs
repnz
nop
nop
jae
add
jbe
sahf
mulps
repnz
nop
nop
jae
xor
adc
inc
scas
pop
add
add
sbb
cld
nop
nop
jae
add
add
aam
in
pop
nop
push
mov
leave
nop
jmp
xor
add
jno
leave
jns
nop
push
mov
leave
nop
jmp
add
add
or
add
cld
nop
nop
jae
sbb
push
xchg
jb
xor
add
arpl
jbe
add
add
xor
add
addr16
clc
repnz
nop
nop
jae
add
icebp
clc
repnz
nop
nop
jae
fadds
add
fwait
add
add
clc
repnz
nop
nop
jae
add
add
fistpl
clc
repnz
nop
nop
jae
in
insb
add
shrl
test
cli
clc
repnz
nop
nop
jae
add
add
jae
xbegin
jae
hlt
pop
incb
pop
adc
adc
pop
sub
repnz
nop
nop
jae
add
add
call
nop
jae
add
pop
divl
rclb
jmp
std
roll
hlt
out
mov
push
mov
xchg
ret
loopne
add
add
movsl
adc
pause
push
mov
leave
nop
jmp
movsb
add
mov
push
mov
xchg
ret
mov
incb
incb
and
cltd
mov
nop
push
mov
leave
nop
jmp
mov
fwait
clc
repnz
nop
nop
jae
add
add
dec
loopne
imul
push
mov
leave
nop
jmp
adc
add
add
in
rorl
cld
nop
nop
jae
enter
add
push
add
push
push
mov
xchg
ret
add
in
subl
scas
cmp
xchg
xchg
ret
xor
add
add
movsl
jns
pop
clc
repnz
nop
nop
jae
rcr
and
push
add
test
add
jbe
add
mov
imul
cld
nop
nop
jae
add
in
stos
mov
clc
repnz
nop
nop
jae
adc
add
sbb
leave
pop
push
mov
xchg
ret
imul
incb
std
add
push
mov
xchg
ret
add
stos
fdiv
mov
je
pop
xorl
clc
repnz
nop
nop
jae
push
pop
mov
add
push
mov
xchg
ret
stos
push
add
loopne
add
lret
push
nop
push
mov
leave
nop
jmp
add
add
nop
fwait
mov
clc
repnz
nop
nop
jae
add
add
add
je
nop
push
mov
leave
nop
jmp
push
insb
add
add
add
add
in
pusha
nop
push
mov
leave
nop
jmp
inc
add
add
outsb
add
div
nop
push
mov
leave
nop
jmp
jns
inc
xor
jno
in
sub
movsb
cmpsb
push
add
nop
nop
jae
add
push
push
scas
push
add
clc
repnz
nop
nop
jae
cltd
adc
std
dec
pop
clc
repnz
nop
nop
jae
xor
add
add
add
push
add
mov
xchg
ret
int
add
adc
aas
adc
nop
jmp
mov
jbe
jo
popl
in
leave
nop
jmp
int
xor
add
pop
in
push
clc
repnz
nop
nop
jae
sub
add
pop
clc
repnz
nop
nop
jae
roll
adc
in
xor
fistl
nop
jmp
add
lods
stos
inc
xor
jmp
add
add
add
hlt
add
add
xor
add
nop
nop
jae
insb
add
add
cltd
insb
add
gs
clc
repnz
nop
nop
jae
add
lahf
add
inc
je
clc
repnz
nop
nop
jae
add
add
loope
clc
repnz
nop
nop
jae
mov
add
cltd
xor
add
jmp
mov
add
add
add
add
std
pop
inc
add
add
add
add
add
add
add
jae
push
push
add
add
add
xor
addr16
add
add
push
add
fadds
movsl
xor
mov
leave
nop
jmp
sub
add
add
hlt
ret
push
nop
push
mov
leave
nop
jmp
jbe
add
xlat
mov
push
mov
xchg
ret
cltd
xor
out
movsl
scas
push
nop
push
mov
leave
nop
jmp
and
insb
add
jo
add
repnz
nop
nop
jae
mov
xor
push
mov
xchg
ret
add
add
imul
pause
push
mov
leave
nop
jmp
movsl
push
add
add
arpl
add
aam
stos
xchg
call
clc
repnz
nop
nop
jae
and
and
mov
mov
jb
cmp
mov
leave
nop
jmp
movsl
mov
add
movsl
arpl
add
add
clc
repnz
nop
nop
jae
mov
add
add
push
nop
push
mov
leave
nop
jmp
add
add
clc
inc
add
add
push
clc
repnz
nop
nop
jae
xor
hlt
in
add
ja
rcrl
mov
leave
nop
jmp
roll
xor
clc
mov
mov
push
mov
leave
nop
jmp
xor
add
push
mov
faddl
add
cmc
add
xchg
stos
and
in
filds
xchg
add
add
and
push
inc
sbb
repnz
nop
nop
jae
adc
add
push
repnz
nop
nop
jae
aam
out
int
add
cld
add
add
repnz
nop
nop
jae
arpl
and
inc
add
ret
clc
repnz
nop
nop
jae
jns
xor
scas
pop
add
push
add
add
push
mov
xchg
ret
std
or
dec
aad
js
clc
repnz
nop
nop
jae
xor
add
fistpl
push
mov
xchg
ret
add
add
xor
insb
jmp
jno
clc
repnz
nop
nop
jae
movsb
xor
add
add
clc
repnz
nop
nop
jae
add
add
add
mov
xchg
ret
movsb
push
add
dec
mov
movb
mov
leave
nop
jmp
imul
dec
add
mov
xchg
ret
enter
roll
jbe
xor
nop
push
mov
leave
nop
jmp
scas
add
add
and
add
adc
add
out
or
add
int
insb
add
popl
clc
repnz
nop
nop
jae
jno
add
pop
clc
repnz
nop
nop
jae
scas
loopne
add
add
repnz
nop
nop
jae
add
add
stos
add
inc
add
add
pop
je
clc
repnz
nop
nop
jae
add
call
clc
repnz
nop
nop
jae
pop
add
push
mov
clc
repnz
nop
nop
jae
add
or
and
or
call
nop
jmp
mov
inc
inc
dec
add
stos
lss
clc
repnz
nop
nop
jae
aam
pushf
lods
shl
clc
repnz
nop
nop
jae
add
jns
stos
fwait
pop
mov
push
mov
xchg
ret
add
movsl
add
add
add
test
repnz
nop
nop
jae
add
adcl
cld
nop
nop
jae
add
add
jno
inc
add
sub
add
and
xor
rolb
jns
clc
repnz
nop
nop
jae
aam
add
add
repnz
nop
nop
jae
add
add
add
inc
xor
push
mov
xchg
ret
arpl
add
movsl
add
rclb
jns
add
push
addl
and
addl
or
repnz
nop
nop
jae
jno
enter
aam
pop
inc
clc
repnz
nop
nop
jae
add
incb
lcall
jg
nop
push
mov
leave
nop
jmp
add
aam
outsb
add
add
add
nop
push
mov
leave
nop
jmp
add
mov
mov
clc
repnz
nop
nop
jae
out
add
inc
aam
add
add
add
addb
cmp
ret
xor
add
adc
add
jb
repnz
nop
nop
jae
and
add
jle
data16
fnstsw
add
fadds
add
jns
in
stos
push
mov
add
add
add
mov
add
sub
cmpsl
bound
xchg
ret
or
adcl
cld
nop
nop
jae
adc
hlt
add
inc
mov
repnz
nop
nop
jae
xor
insb
incb
leave
std
add
nop
nop
jae
loopne
push
lods
roll
add
clc
repnz
nop
nop
jae
add
lods
add
add
push
push
clc
repnz
nop
nop
jae
add
add
add
dec
push
push
mov
xchg
ret
add
add
add
je
clc
repnz
nop
nop
jae
add
shl
pop
clc
repnz
nop
nop
jae
add
push
dec
and
jp
stos
xor
push
mov
xchg
ret
add
xor
pop
push
mov
xchg
ret
add
xor
xor
hlt
aam
adc
clc
repnz
nop
nop
jae
scas
xor
add
jno
inc
pop
decl
push
mov
xchg
ret
lahf
jno
add
scas
dec
push
clc
repnz
nop
nop
jae
adc
add
leave
xor
add
pusha
clc
repnz
nop
nop
jae
add
jbe
or
std
and
mov
clc
repnz
nop
nop
jae
xor
sub
stos
push
mov
add
dec
nop
push
mov
leave
nop
jmp
mov
imul
lea
add
repnz
nop
nop
jae
fwait
add
push
sbb
stos
clc
repnz
nop
nop
jae
incb
scas
movsb
pop
add
nop
push
mov
leave
nop
jmp
add
and
jns
ret
sbb
nop
jae
add
add
cld
nop
nop
jae
add
xor
add
test
adc
add
repnz
nop
nop
jae
in
add
xor
test
leave
nop
jmp
sub
adc
and
rorl
add
cmp
nop
push
mov
leave
nop
jmp
xor
xor
or
cld
lret
add
clc
repnz
nop
nop
jae
mov
add
dec
cmp
push
mov
leave
nop
jmp
add
mov
nop
nop
jae
add
adc
movsl
add
xor
jno
clc
repnz
nop
nop
jae
add
int
add
xor
jecxz
dec
add
repnz
nop
nop
jae
add
fadds
pop
cmpl
repnz
nop
nop
jae
fwait
add
pop
add
clc
repnz
nop
nop
jae
xor
add
loopne
mov
cld
nop
nop
jae
sub
add
arpl
mov
repnz
nop
nop
jae
mov
mov
jmp
nop
nop
jae
pop
and
roll
cmpsb
lods
push
clc
repnz
nop
nop
jae
add
incb
pushf
clc
scas
jle
test
clc
repnz
nop
nop
jae
aam
add
pop
cltd
xchg
sbb
repnz
nop
nop
jae
xor
add
add
or
clc
repnz
nop
nop
jae
add
shl
cltd
lahf
mov
nop
push
mov
leave
nop
jmp
pop
in
adc
inc
jp
nop
push
mov
leave
nop
jmp
push
movsb
adc
test
mov
cld
nop
nop
jae
pop
add
add
hlt
add
arpl
jne
clc
repnz
nop
nop
jae
add
in
imul
add
mov
xchg
ret
and
roll
hlt
inc
fwait
push
mov
xchg
ret
push
mov
lods
add
aam
test
nop
push
mov
leave
nop
jmp
add
mov
sbb
repnz
nop
nop
jae
adc
add
mov
add
lock
inc
add
add
add
add
add
mov
push
mov
leave
nop
jmp
arpl
fwait
add
xchg
push
mov
clc
repnz
nop
nop
jae
mov
adc
test
call
clc
repnz
nop
nop
jae
push
add
pop
push
mov
xchg
ret
aam
sub
add
add
add
add
repnz
nop
nop
jae
int
xor
ret
lea
push
mov
xchg
ret
mov
add
incb
fists
mov
xchg
ret
add
mov
fadds
xchg
pop
add
nop
nop
jae
incb
add
adc
and
add
clc
repnz
nop
nop
jae
adc
shll
push
push
mov
xchg
ret
lods
add
add
sub
sarl
call
add
call
nop
push
mov
leave
nop
jmp
add
add
add
adcb
jmp
add
in
popa
pop
push
mov
xchg
ret
add
add
lahf
pushf
mov
adc
repnz
nop
nop
jae
adc
add
fld1
nop
push
mov
leave
nop
jmp
fwait
xor
add
adc
data16
add
push
mov
leave
nop
jmp
std
stos
enter
icebp
pop
push
mov
xchg
ret
insb
add
push
add
cmp
nop
push
mov
leave
nop
jmp
add
sub
cmp
clc
repnz
nop
nop
jae
add
adc
add
rorb
clc
repnz
nop
nop
jae
or
add
mov
clc
repnz
nop
nop
jae
lods
sub
pop
add
add
add
add
clc
repnz
nop
nop
jae
add
mov
jmp
nop
nop
jae
out
fwait
addl
or
push
mov
leave
nop
jmp
fsubrs
add
and
xabort
cld
nop
nop
jae
or
add
inc
add
add
repnz
nop
nop
jae
scas
enter
addl
nop
jae
add
adc
mov
xchg
ret
add
enter
jno
adc
add
add
add
pause
push
mov
leave
nop
jmp
jno
sub
jbe
xor
push
fs
add
movsl
adc
ljmp
nop
push
mov
leave
nop
jmp
loopne
push
add
roll
repnz
nop
nop
jae
add
add
inc
loopne
mov
xchg
ret
insb
add
add
or
scas
lea
clc
repnz
nop
nop
jae
sbbl
add
push
push
mov
xchg
ret
add
add
cltd
aam
and
add
push
mov
xchg
ret
xor
in
xor
test
xor
nop
nop
jae
enter
lahf
shll
sbb
push
mov
xchg
ret
add
add
add
add
fsubr
push
clc
repnz
nop
nop
jae
add
jno
push
nop
push
mov
leave
nop
jmp
add
fwait
add
add
push
add
nop
push
mov
leave
nop
jmp
loopne
xor
mov
clc
repnz
nop
nop
jae
add
add
xchg
push
mov
xchg
ret
push
add
add
add
add
nop
push
mov
leave
nop
jmp
sub
mov
dec
push
clc
repnz
nop
nop
jae
push
imul
clc
repnz
nop
nop
jae
add
shrl
shll
sub
clc
repnz
nop
nop
jae
add
add
push
mov
clc
repnz
nop
nop
jae
add
add
roll
pop
clc
repnz
nop
nop
jae
add
add
scas
add
roll
mov
xchg
ret
add
add
add
add
inc
and
repnz
nop
nop
jae
out
mov
jne
clc
repnz
nop
nop
jae
dec
add
mov
pop
sub
clc
repnz
nop
nop
jae
loopne
imul
pop
clc
repnz
nop
nop
jae
push
push
add
fadds
aam
adc
aas
clc
clc
repnz
nop
nop
jae
add
adc
add
clc
repnz
nop
nop
jae
incb
shrl
jle
push
mov
xchg
ret
and
int
sbb
hlt
ljmp
clc
repnz
nop
nop
jae
add
cld
clc
repnz
nop
nop
jae
adc
add
dec
push
clc
repnz
nop
nop
jae
pop
add
mov
add
jmp
incb
add
pop
adc
add
hlt
and
xor
enter
nop
nop
jae
add
adc
add
add
jne
movb
repnz
nop
nop
jae
addl
aad
mov
nop
push
mov
leave
nop
jmp
adc
and
push
push
mov
xchg
ret
add
add
hlt
popf
lea
nop
push
mov
leave
nop
jmp
add
add
inc
bound
pop
push
clc
repnz
nop
nop
jae
add
shrl
add
clc
repnz
nop
nop
jae
add
and
scas
add
cld
nop
nop
jae
fwait
add
pop
incb
adc
pop
push
clc
repnz
nop
nop
jae
add
adc
xor
enter
loop
nop
push
mov
leave
nop
jmp
add
fwait
mov
repz
clc
repnz
nop
nop
jae
out
push
add
adc
clc
repnz
nop
nop
jae
add
add
scas
add
add
add
repnz
nop
nop
jae
int
hlt
pop
add
push
jo
add
adc
mov
add
out
push
add
add
repnz
nop
nop
jae
add
add
dec
sub
cmpsl
insl
inc
add
add
mov
roll
dec
cmp
repnz
nop
nop
jae
xor
sub
add
inc
add
clc
repnz
nop
nop
jae
lahf
dec
imul
push
mov
leave
nop
jmp
roll
add
stos
movsl
cwtl
adcl
cld
nop
nop
jae
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
pop
clc
repnz
nop
nop
jae
add
lods
insb
push
add
add
pop
add
scas
out
add
add
mov
nop
push
mov
leave
nop
jmp
add
movsb
or
stc
xchg
clc
repnz
nop
nop
jae
leave
scas
hlt
jno
add
add
nop
nop
jae
add
add
jge
add
insl
inc
add
mov
andl
nop
jae
jno
hlt
lahf
movsl
add
add
out
nop
push
mov
leave
nop
jmp
mov
add
and
mov
xchg
ret
add
scas
insb
scas
jns
mov
repnz
nop
nop
jae
add
add
push
add
rep
clc
repnz
nop
nop
jae
xorl
pop
add
cld
nop
nop
jae
add
scas
xor
mov
jb
clc
repnz
nop
nop
jae
pop
stos
adc
xor
add
add
jmp
xor
mov
add
std
or
int
add
cmp
pushf
bnd
xor
and
sub
ret
lea
pop
mov
xchg
ret
add
add
int
arpl
add
nop
push
mov
leave
nop
jmp
add
insb
add
enter
push
mov
xchg
ret
movsb
rol
rcrl
add
pushl
add
hlt
add
and
add
mov
add
lahf
iret
call
nop
push
mov
leave
nop
jmp
add
aam
rorl
cld
nop
nop
jae
add
add
imul
clc
repnz
nop
nop
jae
movsb
mov
add
pop
xchg
idiv
fistpl
push
mov
xchg
ret
inc
jno
int
xor
add
lea
nop
push
mov
leave
nop
jmp
push
add
add
popl
xchg
ret
add
lods
mov
add
push
and
push
mov
add
jbe
shr
clc
repnz
nop
nop
jae
add
pop
imul
sar
cld
nop
nop
jae
add
out
add
jmp
mov
add
add
repnz
nop
nop
jae
add
add
rolb
or
cld
nop
nop
jae
add
add
add
add
push
mov
add
add
roll
xor
add
incl
in
inc
adc
add
jmp
leave
nop
jmp
and
and
inc
add
clc
repnz
nop
nop
jae
add
hlt
arpl
add
inc
add
rep
nop
push
mov
leave
nop
jmp
adc
and
add
or
cld
nop
nop
jae
mov
add
dec
fisttpl
test
pop
add
nop
push
mov
leave
nop
jmp
xor
mov
test
repnz
nop
nop
jae
mov
pop
push
mov
xchg
ret
add
add
sub
add
dec
adc
sarl
xchg
ret
adc
hlt
add
add
jb
xchg
cld
call
inc
mov
clc
repnz
nop
nop
jae
imul
shlb
add
pop
push
mov
xchg
ret
xor
mov
enter
push
mov
xchg
ret
movsb
sar
enter
add
ja
cmpl
cld
nop
nop
jae
add
inc
add
je
clc
repnz
nop
nop
jae
adc
add
fwait
clc
repnz
nop
nop
jae
enter
xor
int
add
cld
nop
nop
jae
add
add
add
and
add
push
mov
xchg
ret
add
mov
leave
subl
push
mov
xchg
ret
dec
pop
add
arpl
dec
push
nop
push
mov
leave
nop
jmp
add
movsl
xor
add
and
repnz
nop
nop
jae
in
add
clc
repnz
nop
nop
jae
imul
add
or
sti
add
clc
repnz
nop
nop
jae
shll
scas
add
mov
cld
nop
nop
jae
xor
add
roll
add
xchg
fistpl
clc
repnz
nop
nop
jae
stos
sub
leave
xor
jmp
clc
repnz
nop
nop
jae
add
imul
cmp
clc
repnz
nop
nop
jae
add
and
push
mov
xchg
ret
add
int
and
mov
add
nop
push
mov
leave
nop
jmp
mov
jno
add
clc
repnz
nop
nop
jae
arpl
add
add
bound
roll
test
xchg
ret
sub
pop
movsl
jno
mov
out
sbb
clc
repnz
nop
nop
jae
add
add
sub
out
mov
nop
push
mov
leave
nop
jmp
mov
add
clc
repnz
nop
nop
jae
enter
jne
clc
repnz
nop
nop
jae
add
iret
fwait
clc
repnz
nop
nop
jae
scas
add
add
sub
dec
add
jno
inc
add
imul
leave
mov
push
mov
xchg
ret
fadds
add
push
clc
repnz
nop
nop
jae
add
add
add
add
mov
xchg
ret
mov
loopne
xor
add
movmskps
repnz
nop
nop
jae
in
add
add
add
nop
push
mov
leave
nop
jmp
add
add
add
or
add
sub
mov
add
add
inc
add
cltd
add
add
clc
repnz
nop
nop
jae
in
add
jns
add
repnz
nop
nop
jae
shll
add
mov
add
clc
repnz
nop
nop
jae
mov
push
push
mov
xchg
ret
add
or
push
cltd
add
push
mov
xchg
ret
add
fadds
add
ret
xchg
clc
repnz
nop
nop
jae
incb
add
add
add
nop
push
mov
leave
nop
jmp
inc
add
add
call
push
mov
xchg
ret
add
add
std
add
sahf
outsl
mov
clc
repnz
nop
nop
jae
add
and
pop
mov
clc
repnz
nop
nop
jae
add
push
rcll
cmc
add
clc
repnz
nop
nop
jae
add
add
mov
mov
or
cld
nop
nop
jae
jns
jns
push
clc
repnz
nop
nop
jae
insb
mov
push
adc
fadds
add
repnz
nop
nop
jae
int
fadds
add
add
inc
nop
push
mov
leave
nop
jmp
add
add
addl
repnz
nop
nop
jae
xor
imul
into
aaa
jne
clc
repnz
nop
nop
jae
add
dec
push
clc
repnz
nop
nop
jae
or
xor
add
add
nop
push
mov
leave
nop
jmp
imul
mov
push
mov
xchg
ret
sub
hlt
add
push
mov
xchg
ret
inc
add
and
xor
add
push
mov
xchg
ret
fadds
inc
pop
add
add
push
mov
xchg
ret
add
xor
lods
clc
repnz
nop
nop
jae
dec
dec
xor
add
out
dec
leave
clc
repnz
nop
nop
jae
fwait
add
add
bnd
clc
repnz
nop
nop
jae
and
add
add
movswl
clc
repnz
nop
nop
jae
add
add
pop
int3
iret
push
push
mov
xchg
ret
scas
mov
add
imul
shl
call
nop
jmp
jbe
lods
imul
jae
xor
xor
movsb
add
adc
add
movzwl
clc
repnz
nop
nop
jae
mov
into
push
add
jne
outsl
arpl
add
repnz
nop
nop
jae
jbe
arpl
mov
xor
add
clc
repnz
nop
nop
jae
xor
sarl
imul
pop
incl
xor
add
add
sub
add
insb
add
mov
cld
nop
nop
jae
adc
add
lods
add
rorl
push
jecxz
call
nop
jmp
add
add
cmc
add
push
mov
xchg
ret
add
and
in
cs
clc
repnz
nop
nop
jae
add
add
jmp
clc
repnz
nop
nop
jae
arpl
movsl
pop
add
out
pusha
clc
repnz
nop
nop
jae
add
push
add
jns
clc
repnz
nop
nop
jae
add
mov
scas
add
clc
repnz
nop
nop
jae
mov
dec
shrb
push
mov
leave
nop
jmp
add
add
add
clc
add
cmp
and
hlt
jno
lods
imul
fistpl
clc
repnz
nop
nop
jae
insb
jno
xor
and
repnz
nop
nop
jae
xor
insb
xor
inc
push
call
clc
repnz
nop
nop
jae
add
arpl
add
add
clc
repnz
nop
nop
jae
jno
mov
hlt
fistpl
clc
repnz
nop
nop
jae
add
pop
push
clc
repnz
nop
nop
jae
add
add
pop
scas
dec
int
clc
repnz
nop
nop
jae
pop
movsl
add
xchg
call
clc
repnz
nop
nop
jae
adc
insb
add
add
mov
nop
push
mov
leave
nop
jmp
and
mov
push
add
add
add
repnz
nop
nop
jae
fadds
in
xor
push
mov
xchg
ret
fcomps
add
incb
in
add
mov
push
mov
xchg
ret
inc
add
xor
add
scas
add
cmp
nop
push
mov
leave
nop
jmp
insb
and
scas
jno
add
nop
push
mov
leave
nop
jmp
adc
jns
dec
mov
nop
push
mov
leave
nop
jmp
loopne
mov
imul
jg
nop
push
mov
leave
nop
jmp
mov
add
jbe
jmp
add
in
enter
mov
add
add
hlt
mov
push
mov
leave
nop
jmp
and
add
incb
mov
push
mov
xchg
ret
loopne
dec
add
add
notl
push
mov
xchg
ret
xor
xor
add
mov
nop
push
mov
leave
nop
jmp
add
add
in
sbbb
cmp
repnz
nop
nop
jae
add
add
push
jns
push
mov
xchg
ret
dec
add
in
mov
dec
cmp
sar
add
loopne
add
adc
scas
hlt
add
add
jge
clc
repnz
nop
nop
jae
add
add
xor
push
test
push
mov
xchg
ret
mov
add
add
lea
clc
repnz
nop
nop
jae
add
and
push
nop
push
mov
leave
nop
jmp
add
add
nop
nop
jae
add
and
mov
nop
jae
cltd
cltd
scas
pop
adc
add
je
sub
mov
cmp
ret
add
adc
cld
nop
nop
jae
xor
pop
lahf
aam
test
add
clc
repnz
nop
nop
jae
add
add
cltd
sbb
call
inc
add
xorl
enter
in
xor
add
inc
pop
or
adc
xchg
add
xchg
or
repnz
nop
nop
jae
add
arpl
mov
dec
ljmp
nop
jae
add
add
mov
sub
push
mov
xchg
ret
roll
cltd
add
push
push
add
mov
xchg
ret
add
fwait
pop
mov
sub
add
clc
repnz
nop
nop
jae
add
cltd
add
mov
clc
repnz
nop
nop
jae
push
add
add
repnz
nop
nop
jae
lahf
add
and
cld
nop
nop
jae
std
add
add
push
add
add
add
push
mov
xchg
ret
add
std
xor
xor
add
push
mov
xchg
ret
in
enter
aam
add
cltd
xor
clc
repnz
nop
nop
jae
mov
inc
cmp
mov
xchg
ret
mov
enter
in
nop
push
mov
leave
nop
jmp
fsubs
push
cld
nop
nop
jae
mov
pop
add
mov
clc
repnz
nop
nop
jae
add
add
loope
incl
add
repnz
nop
nop
jae
addl
aam
clc
repnz
nop
nop
jae
xor
fisttpl
test
loopne
clc
repnz
nop
nop
jae
inc
add
lret
inc
pop
push
mov
xchg
ret
scas
scas
add
jno
roll
lds
repnz
nop
nop
jae
add
int
add
push
movsb
push
in
push
mov
xchg
ret
xor
add
fistpl
push
mov
xchg
ret
in
add
add
mov
es
push
mov
xchg
ret
add
fsubs
push
mov
xchg
ret
add
xor
scas
xor
movsb
and
add
repz
repnz
nop
nop
jae
add
scas
add
xor
push
add
shlb
mov
clc
repnz
nop
nop
jae
and
hlt
sub
add
sub
push
mov
xchg
ret
add
andl
ret
clc
repnz
nop
nop
jae
add
jbe
add
fistl
dec
addb
cmp
ret
pop
add
add
add
lcall
clc
repnz
nop
nop
jae
add
adc
call
nop
jae
add
mov
lret
add
nop
push
mov
leave
nop
jmp
addl
mov
clc
repnz
nop
nop
jae
add
scas
xorl
jae
repnz
nop
nop
jae
add
push
mov
xchg
ret
add
add
jns
add
dec
add
mov
clc
repnz
nop
nop
jae
std
add
xor
add
sbb
stos
add
clc
repnz
nop
nop
jae
push
jns
add
scas
add
push
pop
clc
repnz
nop
nop
jae
add
push
mov
pop
push
mov
xchg
ret
movsl
adc
loopne
add
cltd
add
rorl
push
mov
leave
nop
jmp
add
fidivs
mov
sti
nop
push
mov
leave
nop
jmp
push
adc
je
sub
test
clc
repnz
nop
nop
jae
add
dec
inc
add
add
mov
push
mov
xchg
ret
add
add
rep
push
mov
xchg
ret
fadds
xor
scas
and
mov
and
inc
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
nop
push
mov
leave
nop
jmp
add
shrl
in
xlat
mov
clc
repnz
nop
nop
jae
add
xor
xor
cmpsl
mov
popf
clc
repnz
nop
nop
jae
in
add
mov
inc
add
hlt
add
mov
add
repnz
repnz
nop
nop
jae
add
pop
add
add
clc
repnz
nop
nop
jae
add
out
add
or
dec
and
nop
push
mov
leave
nop
jmp
cltd
add
xor
push
clc
repnz
nop
nop
jae
scas
std
add
add
add
cld
nop
nop
jae
add
push
sbb
inc
pop
inc
add
or
loopne
add
rep
nop
push
mov
leave
nop
jmp
add
add
add
pop
and
repnz
nop
nop
jae
pop
int
mov
add
cld
nop
nop
jae
mov
add
jns
sub
jne
nop
push
mov
leave
nop
jmp
enter
mov
clc
repnz
nop
nop
jae
add
xor
jno
inc
sub
nop
jmp
push
mov
pop
clc
repnz
nop
nop
jae
loopne
jbe
adc
dec
mov
mov
xchg
ret
add
add
add
push
mov
xchg
ret
lahf
add
rorl
imul
cld
nop
nop
jae
add
add
xor
shll
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
add
scas
add
add
jb
push
add
mov
nop
push
mov
leave
nop
jmp
add
push
ds
push
add
push
add
lds
repnz
nop
nop
jae
mov
add
xor
push
mov
xchg
ret
add
in
add
mov
clc
repnz
nop
nop
jae
arpl
imul
stos
clc
repnz
nop
nop
jae
and
push
mov
xchg
ret
add
loopne
sub
push
push
mov
xchg
ret
xor
add
add
mulb
mov
xchg
ret
add
insb
cmpsb
in
mov
clc
repnz
nop
nop
jae
add
hlt
add
jg
add
add
repnz
nop
nop
jae
aam
add
fisubrs
dec
pushl
clc
repnz
nop
nop
jae
add
in
int
cltd
dec
clc
repnz
nop
nop
jae
add
adc
fwait
mov
nop
push
mov
leave
nop
jmp
and
leave
add
out
inc
cmp
push
mov
xchg
ret
fcomps
add
add
test
clc
repnz
nop
nop
jae
adc
iret
push
nop
push
mov
leave
nop
jmp
mov
jno
arpl
out
and
clc
repnz
nop
nop
jae
add
xor
int
xchg
push
push
mov
xchg
ret
and
arpl
jno
add
in
sub
push
mov
xchg
ret
add
jno
push
xor
add
mov
mov
clc
repnz
nop
nop
jae
inc
add
int
sub
lods
orb
cld
nop
nop
jae
inc
arpl
hlt
jns
scas
not
clc
repnz
nop
nop
jae
lods
in
out
mov
push
add
insb
inc
add
add
imul
pop
clc
repnz
nop
nop
jae
roll
mov
and
add
add
add
add
or
push
clc
repnz
nop
nop
jae
hlt
add
add
incb
adc
mov
clc
repnz
nop
nop
jae
add
imul
xor
sar
repnz
nop
nop
jae
and
and
leave
push
mov
xchg
ret
add
pop
add
dec
cmp
repnz
nop
nop
jae
mov
add
adc
repnz
nop
nop
jae
xor
add
add
out
icebp
clc
repnz
nop
nop
jae
add
add
add
pop
mov
nop
push
mov
leave
nop
jmp
scas
add
and
enter
push
jmp
add
jns
add
mov
add
sub
sub
repnz
nop
nop
jae
add
enter
adc
fld1
clc
repnz
nop
nop
jae
add
mov
adc
xchg
call
nop
jae
lods
add
stos
add
add
inc
add
repnz
nop
nop
jae
add
adc
add
jns
inc
and
clc
repnz
nop
nop
jae
add
add
add
cmpsl
xchg
clc
repnz
nop
nop
jae
add
adc
push
add
fwait
push
mov
xchg
ret
add
adc
add
clc
repnz
nop
nop
jae
loopne
fdivs
add
add
clc
repnz
nop
nop
jae
fdivs
movsl
mov
mov
clc
repnz
nop
nop
jae
add
add
add
ret
repnz
nop
nop
jae
add
add
adc
add
add
nop
nop
jae
push
add
add
and
add
call
clc
repnz
nop
nop
jae
mov
add
nop
push
mov
leave
nop
jmp
cltd
add
sub
and
js
repnz
nop
nop
jae
hlt
add
xor
add
push
clc
repnz
nop
nop
jae
add
sub
out
push
in
add
add
int
sbb
add
add
mov
adc
mov
add
add
pop
adc
xchg
add
push
ds
xor
loope
add
dec
mov
sarb
xchg
pop
add
pop
add
js
stc
hlt
cmpsl
or
aad
inc
add
dec
add
add
imul
add
add
cmp
aas
gs
add
test
cmc
sub
add
add
outsb
add
fwait
aas
fldlg2
mov
sub
mov
pop
add
or
xchg
mov
lds
andl
jno
add
or
cmpsb
call
add
inc
push
add
add
ret
mov
sub
jne
jnp
xor
xor
outsb
add
add
arpl
into
repnz
add
in
mov
pushf
gs
and
add
inc
add
xchg
xor
sub
inc
dec
add
xor
adc
mov
and
in
add
dec
add
cmp
xchg
inc
jb
push
add
outsl
dec
sub
jle
int
add
insl
xor
add
loope
sbb
in
add
xchg
inc
xor
ret
subl
add
add
test
add
cmp
adc
jbe
cwtl
ljmp
add
pop
add
inc
add
movsb
das
xchg
popf
jb
sbb
outsl
mov
mov
aaa
mov
sub
sub
imul
mov
jo
sub
xor
xchg
enter
mov
mov
das
or
adc
call
fiadds
add
imul
add
shlb
xor
sbb
mov
addr16
and
decb
add
xor
rorl
sbb
addr16
adc
iret
push
add
or
add
add
xor
add
add
leave
dec
add
add
loopne
add
int3
mov
loope
test
xchg
lock
fdivl
dec
add
scas
insb
add
jg
out
sti
outsl
lret
add
add
cltd
mov
dec
movsb
cltd
and
outsb
add
mov
sbb
push
add
pop
add
idivb
add
add
lret
je
inc
mov
roll
aas
fucomi
mov
mov
lcall
dec
add
clc
cmp
stos
dec
aas
cmp
gs
add
and
add
rolb
std
subl
add
sbb
rol
dec
dec
add
je
jno
add
mov
in
ja
pusha
add
push
insb
add
aas
mov
add
pop
add
addb
xorb
pop
xchg
imul
and
mov
add
add
jl
lret
and
sahf
push
add
add
lods
das
jge
clc
js
mov
jb
mov
mov
inc
add
pop
out
pop
push
jae
call
xlat
dec
loop
lahf
int3
test
pusha
add
add
cltd
push
add
xorb
add
add
fadd
pop
mov
mov
add
enter
test
leave
xchg
mov
out
fldenv
call
data16
dec
ss
mov
push
add
mov
cwtl
cltd
xor
jb
jns
mov
loopne
sub
add
mov
cmc
loopne
sbb
sbb
jo
enter
or
add
xor
gs
fsts
stc
adc
xor
mov
add
fdivrs
mov
out
add
lcall
xlat
add
shlb
xor
cmp
popa
arpl
movsl
das
pop
add
add
mov
add
rcr
or
add
pop
das
test
mov
add
add
add
cld
adc
cmp
outsl
push
add
add
stos
and
sbb
and
add
int
sub
shll
inc
inc
add
add
or
pop
jmp
test
xchg
add
fmuls
mov
aas
neg
cmp
int3
out
mov
add
push
dec
je
mov
rclb
push
add
ret
bound
cwtl
rsm
loopne
clc
cld
add
xchg
mov
fimuls
nop
or
add
xor
push
or
or
mov
or
ficoml
sbb
or
add
jae
hlt
das
out
add
sti
dec
jbe
sub
lods
jp
cmc
add
leave
sub
insl
lret
fcmovbe
adc
add
pusha
add
or
sub
and
push
add
sbb
dec
add
push
push
add
add
add
add
jle
in
or
scas
xor
add
mov
xor
adc
xchg
fistps
sub
xchg
movsb
dec
push
add
or
push
sub
js
adc
mov
call
add
push
add
add
add
fwait
inc
add
cmp
out
push
add
pop
add
mov
jno
adc
dec
or
and
lea
jp
dec
add
push
add
add
add
push
add
sub
jmp
lock
cltd
xchg
mov
push
jge
std
test
xchg
add
inc
add
pop
xchg
jmp
add
add
out
add
add
add
add
in
loope
push
add
xor
imul
mov
add
les
add
mov
add
add
sti
fisubrl
push
add
add
out
add
fildl
or
sbb
lahf
sub
js
push
in
lahf
lret
add
jno
xor
sarb
lret
jle
in
jns
cmp
inc
jmp
jecxz
jg
push
sahf
xor
mov
es
inc
add
bound
push
add
add
cmpsb
cmp
push
in
arpl
add
pop
add
mov
adc
repnz
aas
cmp
mov
lods
push
add
add
adc
xchg
pushf
sbb
dec
add
fimuls
pop
ds
arpl
enter
xlat
aad
das
push
add
int
add
pop
mov
add
xor
xchg
or
jl
ds
lea
cmpsb
mov
push
xchg
test
add
xchg
lahf
js
lock
imul
add
ror
mov
add
and
test
pushf
lds
add
test
mov
add
jle
jl
insb
add
insl
inc
add
mov
out
sbb
xchg
xchg
jl
add
dec
push
cmp
cmpsb
adc
sub
aas
mov
movsb
clc
adc
sbb
out
std
dec
add
add
push
mov
xor
cld
dec
jg
push
add
cmpsb
adc
mov
and
fldl
dec
add
test
xlat
cmc
push
test
mov
sub
push
add
cmc
ror
dec
std
out
xchg
fstps
add
popf
push
add
push
add
fists
movsb
shufps
rcl
scas
ret
popa
inc
add
xchg
or
mov
mov
add
jmp
add
xchg
mov
int
mov
sub
add
addl
push
test
add
or
xor
mov
add
nop
sti
cwtl
imul
fldcw
mov
xchg
popf
sub
add
sbb
jns
ds
cmp
pop
out
fld1
add
dec
push
in
mov
lret
cvtdq2ps
push
add
add
add
adc
pushf
push
add
add
jbe
pop
push
add
outsb
add
addr16
add
cwtl
call
stos
scas
and
bnd
jle
push
dec
add
and
or
mov
xchg
pop
xchg
test
mov
and
pop
add
mov
add
lods
cmpsb
cmp
and
inc
dec
add
ret
inc
addr16
push
add
mov
dec
add
outsl
adc
insl
sbb
out
mov
pop
sbb
stos
mov
push
add
add
add
add
popa
scas
lret
add
call
pop
add
add
xchg
adc
fadd
adc
add
cmpsl
dec
add
add
add
in
inc
add
add
imul
dec
adc
push
add
aas
jl
call
sahf
test
add
pop
add
mov
add
inc
add
add
mov
out
sbb
gs
scas
ljmp
scas
rcll
sub
lods
daa
mov
repnz
add
ret
ljmp
ljmp
add
add
add
mov
nop
not
xor
call
inc
add
lods
lahf
test
insb
add
push
add
bound
roll
add
add
add
add
adc
leave
shlb
add
add
pop
out
mov
daa
bnd
in
add
pop
fildl
add
fwait
movsl
push
les
popf
repz
add
fisubl
add
mov
adc
xchg
mov
mov
add
mov
jnp
add
add
xchg
mov
leave
mov
cwtl
xchg
shll
cwtl
rclb
add
add
add
mov
je
fisttps
aam
shrl
add
add
cld
mov
xor
inc
add
aad
jp
insl
inc
add
add
inc
add
add
and
add
adc
or
test
add
test
sahf
adc
xchg
rolb
add
hlt
add
cltd
ja
add
dec
add
enter
or
fimuls
push
add
adc
add
adc
fwait
scas
adc
sahf
add
xor
sahf
mov
lds
add
jmp
add
popa
sbb
pusha
add
jno
jae
lret
add
inc
add
testl
jbe
faddl
mov
add
add
sub
in
in
and
daa
dec
add
test
test
mov
out
gs
adcb
daa
loop
cli
rolb
add
sub
add
leave
sub
jo
jg
in
add
push
add
jmp
sub
dec
add
jl
addl
add
add
sbb
xchg
daa
lcall
add
add
mov
add
arpl
jae
cmp
jbe
cwtl
dec
add
aas
jo
fs
in
repnz
shll
sarl
call
add
je
sbb
jle
cmc
xor
repz
pop
add
fdivp
outsb
add
sbb
leave
andl
aas
in
cwtl
jmp
push
add
push
add
add
push
add
int
movsl
fcomps
add
xlat
push
add
adc
repz
add
add
sub
inc
fcmovnu
sahf
in
adc
ljmp
or
jne
in
cmp
xchg
scas
or
add
scas
inc
aam
dec
xchg
add
add
mov
inc
adc
dec
add
cmp
add
fcoml
add
and
inc
add
cld
push
sub
jg
pop
add
jbe
add
movsl
mov
add
mov
cmp
mov
add
add
hlt
mov
seta
in
or
sub
push
add
lock
das
mov
pop
add
xor
cmp
xchg
mov
xchg
test
add
xor
xor
cmpsb
push
mulb
fistpll
sbb
insl
loope
pop
push
sbb
ja
lret
mov
mov
mov
add
call
mov
and
lods
push
cli
aad
add
add
inc
mov
sbb
add
add
out
loope
test
add
jo
mov
sbb
cmp
and
sbb
and
bound
lret
fbld
cwtl
pop
add
lea
add
add
and
fwait
out
jmp
dec
add
into
imul
add
add
add
add
inc
cwtl
mov
mov
leave
aaa
gs
je
test
or
pop
fdivrl
sbb
mov
add
mov
mov
push
inc
insl
cmpl
fstps
adc
fdivp
cmp
add
cmp
outsl
testl
mov
add
lahf
in
add
stos
add
popf
aaa
movsl
test
add
jb
int
sub
add
xchg
push
add
add
add
xchg
sub
mov
jl
lret
popf
nop
add
out
fimull
add
push
arpl
dec
add
insb
add
pushf
mov
xchg
add
push
adcb
or
push
fistps
cld
mov
int3
sub
cmp
aam
stos
arpl
cmp
enter
data16
xchg
sbb
lods
cmp
mov
ret
outsb
add
sbb
sub
mov
lods
and
xchg
pop
add
les
add
pop
test
add
iret
daa
jge
add
pop
sahf
aad
ja
add
sbb
int
add
and
insl
mov
push
add
adc
mov
add
test
add
add
lods
mov
ret
movl
data16
repnz
inc
sahf
xorb
xlat
inc
add
add
add
add
test
xorl
sarb
and
lea
jmp
add
test
dec
add
xchg
pop
pop
add
add
scas
scas
sub
flds
push
add
add
in
add
jo
mov
add
add
adc
add
sahf
stos
mov
add
pop
scas
cltd
fnstsw
jno
add
push
dec
push
icebp
mov
add
stos
subb
lcall
and
repnz
insl
sbb
sti
inc
add
mov
imul
repnz
push
add
loopne
sub
add
or
mov
call
xchg
in
ret
add
add
add
inc
jl
inc
mov
ficoml
scas
div
fistpll
add
inc
add
add
jl
adc
add
int3
std
lea
pop
add
stos
repz
lods
and
add
clc
inc
add
lods
bound
mov
push
int3
and
push
adc
ret
pop
dec
add
test
popf
in
arpl
pop
push
add
popf
pop
add
cmpsl
push
scas
clc
jmp
mov
sub
jo
test
xchg
inc
add
out
arpl
cmp
pop
push
push
add
or
leave
sti
subb
xor
sub
in
add
outsb
add
arpl
sbb
mov
jne
dec
add
gs
rcl
add
sub
add
adc
lcall
mov
add
xlat
mov
les
dec
addr16
sub
sbb
add
add
add
add
lcall
add
xchg
sbb
in
jb
or
adc
xchg
call
sahf
mov
adc
push
in
popa
ficompl
add
mov
outsb
add
es
sbb
lret
push
add
jge
add
add
xor
bound
pop
cmpsl
push
add
loop
add
enter
mov
add
pop
fcoms
add
ret
aam
jg
add
push
add
jge
or
xor
inc
mov
sti
mov
inc
pop
add
add
xor
aaa
pop
add
sbb
repnz
movsb
arpl
lods
mov
pop
ret
dec
add
mov
popa
push
add
dec
inc
pop
xchg
mov
add
mov
add
sub
add
dec
add
or
fidivs
add
xor
jl
stc
inc
add
add
int
add
adcl
ds
sbb
add
out
mov
std
inc
cmp
jbe
jbe
fistl
add
add
sti
inc
sub
inc
add
call
mov
daa
mov
dec
add
jbe
mov
add
sub
push
add
lods
imul
inc
pop
add
mov
mov
pop
mov
jge
xor
mov
inc
or
adc
fwait
test
pop
test
arpl
xchg
mov
inc
or
incb
adc
fildll
add
add
add
mov
or
xchg
fxch
xchg
sub
and
pusha
add
mov
push
add
add
arpl
add
test
aad
add
lods
popa
and
xor
dec
pushf
je
xchg
jnp
pop
adc
out
test
stos
in
data16
inc
cli
int
jmp
pop
add
lock
mov
add
cmc
add
into
inc
add
xor
mov
add
add
sbb
pop
jmp
xchg
test
icebp
xor
add
fdivrs
pop
add
testb
xchg
mov
add
movsb
push
dec
add
push
pop
adc
add
in
add
push
add
pop
or
nop
sarl
add
add
add
xchg
leave
pop
xchg
fwait
repz
add
sbb
fbld
les
sub
mov
pop
sbbl
js
or
in
sbb
rcrb
icebp
call
mov
add
push
aas
cmpsl
pop
loopne
add
stos
rclb
add
sbb
cwtl
int
aas
pop
scas
sub
inc
mov
add
jb
lods
pop
add
jo
das
mov
and
xor
lahf
test
inc
add
adc
sub
inc
imul
add
add
add
shlb
into
xchg
push
add
pop
add
ficompl
mov
inc
lods
in
ret
bound
fcos
pop
jae
rclb
lea
jecxz
add
fnstenv
out
add
add
imul
or
loopne
loope
std
lcall
insb
add
pop
jno
jmp
jl
push
add
sbbl
std
lock
add
add
fcmovne
insl
fsubl
mov
bound
adc
aaa
jmp
xchg
test
add
icebp
pop
add
mov
add
sbb
xor
fstpl
sub
push
add
add
add
inc
loop
push
add
call
add
cmp
sub
add
and
repnz
add
pop
shrb
add
stos
mov
icebp
dec
add
movsl
into
add
adc
jae
dec
add
add
mov
cmpsb
icebp
mov
add
add
das
data16
sahf
mov
xchg
das
push
add
stc
lcall
adcb
or
and
and
pop
add
sbb
add
pop
jae
add
add
cmc
sub
adc
test
add
test
mov
add
jbe
mov
add
ljmp
add
std
jb
gs
in
jae
jae
test
cmp
sbb
add
add
inc
pop
add
sbb
add
neg
cmp
pmullw
add
add
lock
divl
add
ret
xchg
sbb
js
pop
add
add
push
cltd
xchg
shr
and
pop
cmp
push
xor
sarb
sub
loop
pop
insl
shl
iret
cltd
js
pop
add
lock
add
lcall
add
pop
add
add
xor
xchg
add
sbb
inc
cmp
inc
add
stc
dec
add
add
adc
scas
rcl
mov
add
aad
mov
sbb
mov
mov
jg
xchg
insl
dec
add
xchg
dec
inc
add
add
int
dec
mov
add
add
cmp
add
into
jmp
add
stos
adc
mov
sbb
mov
add
inc
add
int
or
test
xor
push
scas
jb
shrl
add
loopne
idivl
jg
sub
sub
add
ret
fisubl
xorl
sub
adc
cmc
loopne
data16
add
dec
add
mov
add
pop
into
or
gs
icebp
pop
sub
mov
add
xor
adc
cmpsb
jnp
add
add
test
call
mov
je
jge
xchg
mov
cmp
mov
shr
sbb
subb
xor
xchg
add
add
and
iret
jne
push
add
hlt
jge
adc
dec
add
inc
add
cmp
xlat
push
add
jne
orl
add
movsb
das
mov
add
add
and
add
repz
out
mov
lods
sbb
adc
jp
jnp
hlt
popf
mov
push
xchg
ja
jnp
push
add
fwait
cwtl
jle
mov
jle
iret
popf
scas
punpckhbw
inc
popf
adc
ret
inc
fnstcw
add
xchg
add
mov
add
push
add
decb
arpl
loope
inc
add
add
xchg
sub
add
add
add
jl
in
shll
sub
loopne
pop
sbb
idivl
add
mov
add
add
cmp
rep
ret
out
sub
add
sbb
pop
scas
mov
jp
popa
and
push
stos
lock
add
addr16
das
or
lds
add
out
add
add
les
xchg
pop
xchg
inc
add
push
roll
sbb
add
add
add
inc
add
or
cwtl
test
add
add
in
cmpsb
int3
mov
into
bound
or
xchg
ja
add
or
scas
rorl
ljmp
imul
xchg
mov
jb
mov
mov
dec
cli
lret
mov
add
iret
sti
fimull
icebp
hlt
daa
lea
mov
sbb
out
cli
scas
test
pop
jecxz
iret
cli
idivl
pop
add
dec
loop
jge
mov
add
insl
lock
bound
and
xchg
mov
fbld
pop
add
out
or
sti
inc
add
cmpsb
gs
jb
dec
add
push
add
sahf
inc
mov
data16
jp
pop
rorl
sbb
inc
add
cld
or
mov
subb
xchg
xchg
cmp
add
push
add
add
add
dec
add
jbe
lret
push
add
inc
add
shrl
out
ret
stc
xor
add
daa
push
popf
imul
xor
jecxz
add
mov
hlt
sub
fwait
cmp
adc
xchg
lcall
insb
add
aam
testb
ljmp
add
mov
xchg
sub
mov
out
mov
movsb
mov
pop
mov
add
nop
je
adc
and
push
add
mov
add
add
add
popf
xchg
mov
add
dec
push
add
idivl
add
add
cmp
cmp
and
add
xlat
movsb
adc
add
xlat
sti
popf
push
add
or
hlt
jle
test
sahf
arpl
jnp
jno
in
cmp
add
lods
je
xchg
xchg
lret
xchg
data16
pop
lahf
add
add
adcb
loopne
jecxz
mov
add
add
mov
add
mov
or
add
mov
mov
scas
lcall
add
aas
jae
push
sub
inc
adc
cltd
xchg
xchg
rcr
or
add
push
add
xor
jg
fcomps
mov
pop
adc
dec
and
into
cld
insb
add
bnd
pop
add
punpcklwd
mov
test
scas
dec
add
push
add
stc
inc
add
adc
mov
int3
iret
hlt
pop
call
mov
fs
mov
jno
or
add
neg
in
or
inc
add
fcmovnu
mov
mov
enter
cmp
mov
sub
dec
xchg
mov
out
inc
aaa
insl
cmp
jo
add
add
enter
enter
loope
cmp
or
pusha
add
add
insb
add
shlb
aam
dec
add
stos
shl
cmc
pop
add
sti
pop
popf
xchg
fnstenv
adc
jecxz
popf
cmpb
add
pop
dec
scas
mov
loopne
aam
add
loop
add
push
add
lea
jmp
pop
add
sbb
loope
add
add
add
mov
add
int
pop
adc
ja
add
mov
add
out
mov
xor
pop
orb
add
or
pop
jmp
and
xchg
cmp
shlb
popf
inc
fadds
lret
push
add
fsubrl
shrb
jg
add
cmp
add
add
xor
push
mov
shll
call
test
call
cmp
mov
push
add
add
movsb
test
add
mov
pop
add
jns
and
bound
mov
pop
add
pop
data16
add
cmpsb
idivb
testb
cmc
jle
push
mov
repz
mov
inc
repnz
int3
stos
pop
and
fiaddl
adc
add
pop
jns
add
jmp
gs
pop
sub
loop
lahf
inc
adc
mov
add
jns
popa
add
sub
pop
lock
jmp
push
push
adc
jbe
adc
sub
negb
add
xchg
mov
movsl
lock
and
or
outsb
add
in
pop
pop
add
pop
add
add
add
dec
add
dec
pop
rolb
mov
jo
dec
add
sbb
popf
pop
add
cltd
test
sti
push
add
add
std
clc
xchg
repnz
add
sar
push
add
cmp
jg
fnstenv
add
mov
add
mov
sub
add
mov
adc
push
add
into
dec
dec
add
add
lods
dec
add
mov
stc
xor
andb
in
mov
movsl
adc
movsb
ret
jo
push
add
lahf
pop
add
add
sub
mov
adc
jg
lahf
or
pop
movsl
or
add
stos
stos
inc
add
or
loopne
cmp
into
mov
cmp
mov
mov
jmp
aas
and
inc
add
add
cltd
clc
test
arpl
inc
mov
push
add
insb
add
rcll
insl
aas
and
fsubrl
and
push
add
push
add
enter
or
fisttps
xor
not
xchg
mov
xor
cmp
mov
into
cmpsb
enter
add
push
dec
call
mov
add
push
lret
fsubl
add
cmp
or
sbb
scas
stos
xchg
push
lcall
or
inc
mov
add
push
add
add
jbe
cmp
mov
add
flds
pop
add
pop
decb
cmc
cmp
enter
mov
shrl
pop
xchg
sbb
add
rcrb
mov
add
icebp
sarb
add
imul
mov
jns
jg
into
mov
cwtl
das
sbb
in
mov
adc
lret
mov
adc
cwtl
push
add
jge
jae
jg
enter
cli
and
cmc
ret
jae
add
imul
mov
hlt
xchg
out
jo
sbb
sbb
cmpsb
jb
push
out
repz
push
add
pusha
add
and
dec
add
sub
pop
add
sti
jle
iret
leave
stos
jbe
aas
add
inc
add
push
push
add
dec
and
lds
xor
mov
ja
shl
fsts
cli
leave
lret
mov
pop
add
cwtl
sub
cmp
lret
addl
add
add
add
cwtl
std
inc
pop
add
add
add
add
add
xor
jnp
pop
add
add
fmull
cli
shlb
add
cmp
cmp
out
std
dec
add
jae
rorb
insl
movsb
cltd
jl
push
add
scas
mov
lcall
fists
cli
lds
inc
movsl
outsb
add
push
add
push
add
cmpsl
vshufps
test
jnp
jno
or
in
in
ficoml
insl
sub
push
add
sbb
mov
imul
and
scas
xor
add
fdivrl
push
add
add
mov
out
sti
popf
mov
push
add
push
add
mov
leave
jg
xchg
fistpll
bound
dec
add
add
add
cmp
mov
add
scas
inc
add
dec
push
add
add
add
jmp
andl
repnz
jge
add
push
add
add
mov
add
add
cmp
jbe
xor
inc
add
clc
mov
enter
mov
in
shll
xchg
pop
add
or
and
xor
cmp
clc
subb
sub
jmp
jne
add
fstp
inc
add
pop
lods
or
add
add
pop
pop
add
stc
mov
pop
add
movsb
fistl
add
add
lcall
lods
add
icebp
pushf
push
insl
in
push
add
add
and
js
test
in
push
add
push
add
and
add
sbb
lods
jl
fs
and
jo
jnp
enter
mov
sub
push
add
cmp
add
sbb
jo
js
or
adc
dec
add
out
pop
add
pop
add
lds
add
lahf
test
mov
shr
xor
inc
add
mov
out
jae
add
lcall
lock
and
inc
jo
cld
popa
push
repz
test
fsts
sbb
add
aaa
cmc
mov
xchg
add
repz
mov
fwait
cmpsb
imul
add
dec
add
add
sbb
shll
rorl
mov
lret
xor
into
sti
pushf
out
jne
shll
sbbb
push
out
loopne
add
in
push
add
add
jmp
xor
jbe
fidivrs
popa
jle
fidivs
cmp
int
gs
add
stos
xchg
lods
ljmp
adc
ja
inc
add
ret
gs
popa
jne
test
rcll
stc
fimuls
add
sub
fcompl
pop
subb
and
call
add
inc
add
add
imul
add
add
in
add
add
mov
shll
add
nop
xor
mov
xor
enter
gs
mov
jecxz
ljmp
cs
addr16
ja
lods
push
or
pop
cmpsb
mov
pop
add
mov
stos
jo
add
orb
add
pop
lds
in
xor
add
push
dec
add
sbb
xchg
add
out
clc
icebp
movsb
je
mov
imul
add
add
cmp
jecxz
inc
addr16
sub
xchg
lret
adc
out
cld
jnp
pop
add
aaa
in
add
xchg
push
mov
mov
fildll
add
mov
scas
das
lahf
pop
add
add
adc
fwait
jo
stos
mov
pop
add
mov
add
enter
xchg
jo
jmp
lods
ret
add
push
add
mov
add
pop
add
dec
jmp
add
out
mov
stos
adc
stos
push
add
int
or
xchg
test
insb
add
test
cmc
subb
push
movsl
xlat
mov
add
addr16
aad
add
in
inc
add
add
mov
icebp
std
pop
leave
adc
clc
xchg
lds
xchg
dec
add
xchg
or
jle
mov
push
add
add
add
test
orl
jbe
xchg
cli
andb
push
hlt
xchg
mov
xor
add
sub
les
add
or
mov
lds
mov
add
add
push
add
test
out
mov
lcall
bound
ljmp
jbe
stos
xchg
pop
add
inc
add
std
fwait
test
add
pop
add
in
movsl
imul
add
add
cmpsb
push
and
jae
imul
jle
adc
sbb
inc
lcall
int
dec
cwtl
and
jge
add
sbb
popf
jne
andb
add
fs
out
aas
jno
add
stos
inc
add
mov
add
ror
stc
jnp
sbb
decl
push
fldenv
add
das
lret
int3
add
leave
sbb
aad
call
mov
add
add
adc
cmpsl
jns
add
add
push
add
push
add
add
lods
and
xchg
mov
add
rcl
shll
cwtl
std
cld
mov
out
dec
add
add
add
add
popf
nop
cli
mov
pop
repz
pop
add
stos
sub
pusha
add
add
and
jns
xchg
popa
sub
imul
pop
add
sbb
xor
aam
jb
fcomps
or
add
bswap
sahf
cmpsl
add
dec
add
dec
add
lret
cwtl
nop
test
sahf
loope
dec
add
mov
mov
cmp
add
test
inc
add
lods
aam
lods
xor
push
dec
add
add
sub
pushf
js
inc
add
lds
push
add
jno
jge
add
jg
call
xchg
movsb
dec
add
lcall
inc
add
mov
ja
add
add
fwait
push
add
mull
jmp
add
and
mov
mov
inc
cld
jecxz
xchg
loopne
add
xchg
movsl
lods
je
jmp
adc
sbb
add
outsb
add
jbe
addb
pop
or
jle
inc
add
or
pop
cmpsb
inc
or
pop
xchg
cwtl
orl
push
add
das
imul
xor
inc
jnp
pop
or
adc
lahf
stc
ret
mov
movsb
repz
adc
add
loope
inc
add
add
pop
movsl
repnz
in
mov
sbb
jmp
icebp
adc
cmp
sti
test
push
test
out
pusha
add
and
loop
push
add
inc
add
repnz
add
stos
aad
adc
xchg
ret
std
cmp
mov
pop
adc
in
mov
pop
jnp
int
add
add
sub
loopne
add
inc
inc
add
outsb
add
and
imul
add
mov
xchg
ljmp
jl
push
test
bound
js
in
add
push
add
add
int3
out
in
dec
aaa
and
and
add
or
jbe
mov
loopne
mov
push
add
dec
push
add
xchg
dec
add
xchg
cmp
dec
add
add
out
push
add
add
lret
add
repz
dec
add
xor
add
sbb
lods
dec
add
arpl
aam
or
shl
jge
scas
sti
fidivs
xchg
ja
lcall
sbb
cmp
fisubl
add
pop
sti
mov
add
mov
imul
ret
je
dec
add
mov
xchg
popf
lods
xchg
stc
pop
add
loop
lret
add
imul
jp
test
movsl
out
dec
add
jno
pop
add
inc
add
xor
loopne
add
sbb
scas
pop
mov
xor
in
dec
out
push
mov
les
xor
push
add
or
lahf
mov
fbstp
or
mov
fimuls
fiaddl
daa
shrb
adc
ljmp
outsl
inc
add
gs
jge
add
cmp
stos
mov
add
mov
shrb
add
mov
push
add
adc
sbb
push
imul
mov
sub
aam
out
add
pop
add
pop
add
sub
and
in
or
and
inc
call
les
inc
popa
add
mov
jg
add
movsl
insl
cmp
pop
aam
xor
jbe
fcoml
pushf
lret
ret
pop
jbe
jl
add
pop
adc
or
and
add
cs
mov
add
imul
xor
dec
add
ficoml
add
mov
add
add
scas
icebp
popf
dec
dec
mov
xchg
pop
lock
je
add
sbb
add
leave
adc
add
jl
push
push
add
fbld
add
xchg
test
ficoms
add
fisubs
insl
imul
lock
add
popa
incl
sti
ficompl
insb
add
cld
iret
cmp
insb
add
jg
add
add
je
call
fisttpl
clc
loope
enter
insl
lcall
shll
fsubr
arpl
clc
pop
add
test
aaa
inc
add
xor
fcmovnu
insl
push
add
repz
inc
add
adc
pop
add
add
add
in
xlat
and
test
imul
clc
push
add
push
ficomps
lret
mov
rcrb
pushf
fmuls
add
add
cmp
daa
or
xor
cli
pushf
mov
dec
add
add
add
addr16
adc
add
push
add
rcrl
loop
cmp
dec
add
jge
add
outsb
add
add
shrb
add
loope
adc
bound
out
add
add
int3
mov
cmp
out
add
cwtl
jge
mov
add
jp
mov
cmp
or
push
add
add
jg
xlat
adc
test
flds
das
cmpb
aad
add
mov
add
test
cli
inc
add
add
add
push
add
mov
push
jno
jo
mov
xor
push
add
add
fists
push
add
enter
mov
sarl
inc
add
clc
jno
pop
ret
adc
inc
add
add
xor
dec
insb
add
daa
mov
popf
mov
sub
jp
add
add
test
js
mov
loopne
add
push
add
adc
out
arpl
hlt
sub
add
add
jae
test
sarl
jbe
test
and
popa
xchg
and
jnp
outsl
rcrl
add
add
mov
fucomip
pop
mov
fdiv
jecxz
loope
loopne
sbb
push
add
into
loopne
call
fsubrs
and
cmp
mov
pushf
and
hlt
stos
xchg
aam
jmp
add
int
out
out
shll
repz
add
mov
add
shlb
jl
sbb
pop
xchg
mov
push
add
adc
dec
add
aam
xor
lret
js
lret
add
mov
add
mov
add
icebp
popf
xchg
pusha
add
jns
fnstcw
add
add
jnp
xor
sub
scas
sub
adc
cs
sub
xchg
cvtps2pd
hlt
xor
outsb
add
add
insb
add
test
dec
add
add
into
dec
adc
fisubrl
mov
add
push
add
add
dec
add
movsl
cmp
add
dec
add
dec
std
mov
add
sub
sahf
icebp
pop
imul
das
sbb
add
adc
fmull
push
add
xchg
sub
loop
mov
add
add
push
add
add
movd
loope
mov
push
aas
jp
xor
add
add
in
pushf
inc
pusha
add
push
add
add
or
and
add
add
push
add
add
daa
jp
fisubs
ret
test
add
call
and
push
jg
xor
sbb
sbb
daa
enter
out
jnp
shrb
pushf
cld
lods
fsubs
add
or
push
add
stc
fnstenv
add
or
frstor
shlb
adc
xor
into
jle
bound
loope
sahf
dec
add
mov
mov
ret
inc
add
loop
add
int
add
add
lock
add
xchg
add
inc
test
jbe
icebp
lret
out
ret
cmc
xor
add
mov
push
add
add
mov
add
add
les
loopne
add
add
push
mov
dec
loop
inc
add
pop
loopne
add
jle
addr16
ss
push
ret
jge
cmp
sbb
jbe
stos
xor
xchg
xor
mov
adc
add
fidivl
and
js
xor
je
pop
mov
inc
add
into
lock
add
jge
add
add
add
or
sbb
or
test
and
adc
sbb
mov
subl
icebp
in
cmc
dec
xchg
mov
adc
aad
insb
add
dec
add
push
cwtl
cmp
jnp
add
jmp
loop
cmpsl
in
mov
add
inc
lock
push
adc
sub
repz
add
add
xor
push
add
add
add
jp
sahf
das
pop
jns
xor
cmpsl
imul
pop
add
cmp
addr16
stc
mov
add
add
leave
or
and
add
sahf
mov
jns
jne
arpl
stos
aad
add
aaa
xor
jecxz
out
shlb
jbe
xchg
sarb
xorl
mov
fsts
add
add
stos
imul
cmp
lret
push
testb
add
data16
inc
add
sbb
xchg
fdivp
mov
loopne
mov
aad
lods
inc
add
xor
jo
sbb
add
lret
enter
add
loop
cld
arpl
add
dec
add
cmp
jecxz
ljmp
out
add
aam
add
addr16
in
out
leave
push
add
add
js
adc
add
jae
sub
lret
movsl
aas
jmp
add
mov
in
sbb
cmpl
xor
test
adc
iret
std
test
add
add
sbb
mov
jmp
add
or
and
lods
jmp
add
xchg
xchg
push
add
add
add
ret
push
add
inc
xlat
subb
arpl
call
push
add
sbb
mov
xchg
sub
push
test
adc
pop
jmp
cmpsb
xchg
sub
les
jmp
aaa
or
les
repnz
add
test
mov
jle
push
cltd
mov
sbb
xchg
inc
add
inc
add
cmovne
pop
mov
sub
rolb
rolb
add
add
dec
sub
xor
movsb
aad
mov
xchg
shll
int3
and
out
jb
pushf
push
add
or
pop
jno
add
cld
test
mov
xadd
lods
dec
add
and
fistpll
add
add
add
lods
jle
mov
rcr
test
add
add
jb
int3
negl
add
add
cmp
sbb
addb
es
mov
add
divb
push
add
push
add
js
push
add
add
mov
add
xchg
inc
add
add
add
adc
fcmovb
loopne
cmp
xor
cmp
jae
testl
adc
sub
jge
push
push
add
ret
add
stos
mov
jp
dec
jo
rclb
add
add
aaa
inc
xor
aam
fistpl
add
or
bound
pop
add
outsl
cli
enter
lds
add
add
das
ret
add
jg
jne
mov
xor
ja
add
pop
gs
and
xchg
ret
pop
frndint
add
xor
add
fistpll
xchg
sahf
mov
cmp
insl
shrb
mov
inc
mov
add
clc
fiaddl
fdivr
jmp
cs
es
sub
cmpsb
stos
jmp
addb
mov
fisubrs
notb
out
pop
add
add
dec
pop
sub
add
sbb
add
repz
sub
aad
jl
pop
orb
xor
iret
inc
add
dec
add
loopne
xchg
mov
cmp
cwtl
test
dec
xchg
enter
add
push
arpl
sbb
jp
push
add
add
adc
add
cwtl
xor
add
xlat
push
jbe
movsl
xchg
add
mov
push
add
inc
sub
jns
add
cmp
stc
loope
jns
add
mov
mov
fucomp
xchg
hlt
shll
add
inc
mov
add
cmp
and
pop
pop
mov
cmpsb
mov
push
add
and
inc
jle
push
add
insl
mov
mov
les
sub
mov
add
cmp
loopne
xlat
stos
push
add
nop
cmp
repz
add
mov
add
sbb
outsl
sub
add
sbb
add
add
enter
xchg
adc
jbe
insb
add
add
stos
repnz
sub
push
add
push
add
add
fincstp
inc
mov
push
add
xlat
mov
aas
push
sbb
fcoms
jg
lods
and
push
add
fldl
mov
add
add
add
push
add
fsubrl
adc
add
bound
jb
xchg
jl
out
int3
icebp
lea
add
cld
ja
add
cmp
jmp
add
subb
sbb
in
ljmp
popf
in
psadbw
aaa
dec
add
cmp
cltd
call
mov
and
pop
imul
adc
sub
jmp
cmc
mov
ret
add
jo
pop
push
mov
in
inc
add
add
add
lret
adc
fwait
adc
mov
dec
add
dec
cltd
mov
adc
or
mov
addr16
add
add
repz
jl
mov
cwtl
adc
jno
add
add
add
ficomps
jle
pop
jg
out
inc
add
add
or
mov
jl
fdivl
pop
add
stos
mov
add
mov
lahf
stos
mov
call
jbe
mov
lret
pop
add
pushl
scas
ret
and
xchg
mov
add
fisubl
or
pushf
mov
jbe
xor
cwtl
lock
mov
adc
shll
icebp
loope
add
add
pop
add
add
add
mov
xchg
push
add
notb
jne
fstpt
fistl
rcl
cli
popa
and
add
cmp
pop
or
pop
cmpsl
dec
push
add
mov
xlat
lret
jne
in
adc
mov
cltd
mov
addl
add
fmulp
sub
xchg
add
test
jo
dec
add
cmp
jecxz
sub
xchg
int
add
rolb
outsb
add
out
repnz
add
add
mov
dec
add
sar
xchg
bound
pop
test
rclb
xchg
jnp
cmpsl
jge
add
add
loop
lret
cmovno
add
clc
stos
xor
xchg
fistpl
add
adcb
std
mov
add
add
std
inc
push
push
insb
add
out
xor
shll
mov
or
xchg
arpl
aas
mov
inc
push
aaa
movsl
push
in
inc
add
test
lret
sarb
xor
imul
sarl
pushf
cmp
das
xchg
pop
add
or
add
sbb
sub
dec
add
inc
add
aaa
imul
mov
add
mov
add
add
shrl
push
add
jp
xor
sbb
xchg
add
add
sub
xor
sub
in
jge
add
add
xor
mov
add
sub
add
sbb
cmc
fdiv
add
and
push
add
xor
mov
dec
addr16
dec
add
int
jp
sbb
add
in
mov
jae
pop
jle
or
or
lods
daa
scas
js
roll
add
cmpb
cltd
std
add
xor
pop
push
add
fstpt
out
or
cmp
inc
loop
and
outsb
add
add
jnp
sub
add
cltd
add
add
jg
or
dec
movsb
clc
test
data16
test
add
jl
mov
leave
add
mov
cmpsb
push
add
inc
add
add
fldcw
jp
ret
pusha
add
lods
cmc
mov
pop
pop
adc
rolb
add
loopne
add
icebp
cmpsb
add
add
cltd
pop
aas
js
loop
loop
add
test
jo
jne
cmpsb
les
out
scas
or
add
and
inc
add
mov
add
add
add
sub
cs
jns
decl
fcomps
hlt
jns
xchg
push
add
inc
add
add
add
arpl
add
pop
or
push
pop
add
add
out
xor
or
add
and
add
mov
and
stc
sti
shr
push
push
inc
repnz
shrb
add
fwait
scas
jae
cmc
lods
dec
add
pushf
in
and
imul
mov
mov
cmpsl
loope
mov
imul
add
push
add
mov
xor
mov
sub
mov
cmp
dec
add
xor
jle
mov
les
add
jg
insl
in
xchg
aaa
andb
xchg
jne
add
pop
inc
pushf
aas
shlb
add
add
rcr
movl
push
insl
dec
divb
add
jo
loopne
or
sbb
scas
inc
add
ret
adc
outsb
add
arpl
add
add
add
pop
jl
or
ja
dec
xchg
xlat
cmpsb
inc
add
jmp
sti
in
lds
mov
add
mov
lahf
ret
cmpsb
cwtl
sbb
enter
cmp
pop
add
fadds
add
aad
loop
xchg
cld
mov
jbe
fs
adc
jecxz
arpl
or
sbb
cmp
push
add
clc
daa
add
in
or
fidivrl
add
add
add
loop
pop
add
add
add
jnp
jge
int3
loopne
mov
stos
mov
stos
mov
lods
pop
sub
and
add
inc
add
fsincos
and
cmp
jge
mov
out
add
stos
xor
pop
jb
hlt
imul
add
jb
jle
scas
dec
add
in
popa
jno
mov
fcoml
in
inc
inc
add
imul
ds
mov
jl
push
add
add
mov
outsb
add
fistpll
jae
out
adc
fwait
jp
or
pop
add
xchg
add
into
mov
pop
xor
cmp
cmp
xchg
lret
add
out
sahf
xorl
jecxz
pop
add
mov
dec
add
jle
sbb
push
loopne
cmpsl
mov
jecxz
lock
ja
mov
push
add
jmp
add
add
add
add
shrl
popf
aam
add
mov
add
mov
add
and
jne
iret
fsubs
scas
aad
sub
or
jmp
in
jp
mov
add
add
add
add
add
movsb
and
dec
sbb
dec
add
add
insl
ljmp
or
add
add
aas
dec
pop
sti
mov
inc
inc
lea
push
add
add
or
push
add
lcall
cmc
mov
adc
int
xor
shlb
loop
sti
iret
add
mov
add
bound
pop
add
add
xor
in
add
arpl
cmp
push
add
add
fs
fld
xlat
into
adc
les
sti
mov
nop
push
add
add
jae
add
arpl
mov
sub
add
adc
xchg
inc
add
pop
sub
int
add
jae
adc
inc
and
stc
hlt
jg
lds
or
aaa
adc
sub
push
jno
and
idivb
movsb
adc
inc
or
mov
mov
jecxz
mov
jmp
push
in
add
jle
cmp
subl
cltd
and
xchg
sahf
bound
mov
int3
jmp
add
mov
add
aaa
cmp
js
loop
sti
mov
add
loope
outsl
sbb
or
mov
lcall
add
add
add
adc
outsb
add
add
les
sub
add
jecxz
xchg
inc
add
add
mov
movsl
pop
add
xchg
inc
ja
add
jl
sub
pop
jle
int3
lea
or
xor
inc
pusha
add
je
insl
or
sbb
jb
push
add
psubb
dec
add
xchg
ret
xor
xchg
test
jns
or
push
add
leave
jno
mov
rol
cmp
int3
ret
mov
or
xor
push
add
repz
in
lret
pusha
add
mov
std
cwtl
popf
dec
push
add
test
pop
pop
add
add
iret
loope
add
dec
add
js
sbb
push
add
lods
adc
cmp
ror
sub
stos
push
mov
inc
xchg
daa
mov
add
mov
cltd
outsl
and
sbb
shll
dec
add
xlat
inc
in
mov
mov
mov
add
add
in
fldl
add
out
lods
push
add
data16
mov
aas
stc
sbb
adc
pop
add
jo
mov
in
add
add
and
lret
push
test
popa
and
fldl
add
mov
popf
inc
bound
rcl
add
shlb
xchg
add
out
lds
sahf
sahf
in
add
inc
add
pop
jmp
add
push
pop
add
ret
scas
js
cmp
lcall
add
jl
cltd
xor
sete
jg
loope
mov
or
add
ret
add
ficompl
loop
add
rcr
popf
xor
scas
mov
xor
push
add
lahf
push
add
pop
das
dec
add
fnsave
add
addr16
dec
add
dec
add
push
push
add
sbb
in
pop
add
fcompl
movsl
inc
jne
add
fimull
sar
push
add
aaa
inc
add
insl
enter
call
push
add
fstpl
fidivrl
add
push
add
xor
xchg
sub
popf
cli
arpl
popf
jo
pop
cmp
lahf
sub
inc
xlat
insl
repnz
hlt
cld
arpl
ret
add
and
fadd
mov
out
test
dec
add
inc
loope
add
test
out
cld
pop
mov
dec
push
add
js
js
mov
push
add
xchg
xchg
repz
sbb
mov
out
daa
push
add
aam
pop
add
jo
xchg
jecxz
push
add
mov
aam
jne
and
mov
sub
adc
bound
dec
add
jnp
add
mov
adc
inc
xor
sbb
out
add
add
or
cmp
lods
cmp
fsts
add
mov
or
add
add
fisubrl
rcrb
add
addb
add
add
sub
xor
das
cmpsl
aas
pop
add
add
add
jno
int3
out
add
pop
out
mov
mov
xor
aam
dec
add
cmpsl
orl
jp
mov
loop
add
mov
add
cmp
hlt
std
mov
add
in
lods
push
add
add
add
rcrl
jno
out
data16
xor
imul
inc
add
add
add
add
xlat
mov
add
jp
popa
rol
pop
add
std
mov
lret
enter
lret
jge
add
add
add
add
add
ret
bound
sub
shll
add
add
add
cld
loop
cmp
movsb
mov
subl
lods
dec
xor
pusha
add
arpl
mov
inc
add
mov
mov
out
int3
pop
push
je
jge
add
mov
loop
inc
add
lret
fisttpl
and
add
push
add
test
mov
inc
add
and
mov
inc
add
cld
xor
xor
call
imul
xor
add
data16
dec
add
int
shr
inc
outsb
add
popa
dec
push
insl
test
out
add
add
add
pop
lods
or
or
push
add
add
add
cmp
scas
fwait
jb
mov
out
inc
das
add
mov
add
add
push
add
scas
pop
dec
add
cmp
sbb
orb
add
mov
ljmp
add
xchg
cmp
sbb
add
enter
jbe
sub
and
pop
or
push
add
scas
out
mov
jp
and
andb
add
add
rorb
add
int
insb
add
mov
scas
adc
out
add
and
out
jecxz
aam
and
popa
lea
mov
pop
test
fcmovne
in
xchg
jns
add
inc
add
nop
fimuls
mov
mov
cmp
sar
and
movsb
repnz
add
and
in
pop
loop
push
mov
pop
daa
cld
incl
out
out
xchg
stc
xchg
sbb
mov
je
mov
sub
shll
add
add
add
or
insb
add
sbb
dec
imul
add
add
mov
dec
add
repnz
jbe
mov
testb
outsb
add
xor
dec
pop
aam
imul
add
je
or
add
push
xchg
and
int
sub
lcall
push
adc
add
rclb
push
add
lds
rclb
add
daa
mov
les
add
mov
add
rcrb
movsl
outsb
add
inc
xchg
xchg
mov
push
add
add
cmp
outsb
add
add
adc
mov
les
imul
add
adc
pop
and
punpckhwd
lea
rolb
sarl
leave
pop
ja
add
pop
add
out
iret
dec
lods
sbb
sub
jl
jae
add
gs
jg
addb
xor
cmp
inc
sarb
add
dec
add
mov
ljmp
add
or
add
cmc
xchg
and
mov
sahf
xchg
aad
icebp
inc
add
add
add
add
cmc
out
push
add
add
scas
fwait
cli
stc
adc
dec
ret
sti
stc
jmp
into
xchg
pop
add
cltd
or
lcall
or
xlat
mov
sub
addl
add
push
dec
mov
add
jl
sbb
xchg
loop
add
fildll
add
add
xchg
mov
pop
add
pop
add
add
lods
or
loope
add
push
add
lcall
jecxz
aas
push
add
add
add
add
xor
or
mov
add
leave
in
push
in
xor
mov
add
in
add
fidivrs
pop
add
fdivr
sub
ss
fdivr
adc
mov
lahf
xchg
cmp
loopne
add
pop
add
loope
or
xorl
popa
dec
add
add
push
add
lods
push
add
stc
cmp
mov
mov
icebp
adc
data16
and
ja
imul
add
jge
incb
add
mov
push
add
push
add
fsubs
add
add
xchg
mov
xchg
pusha
add
jmp
fcoml
add
mov
dec
test
pop
imul
add
shl
and
int
add
xor
jns
jnp
fprem
flds
fsubrl
and
jl
push
add
mov
mov
add
jno
mov
pop
sbb
dec
repnz
ljmp
sub
add
movsb
add
pop
add
or
xorb
mov
mov
jno
add
mov
cld
andb
jge
imul
roll
and
jnp
push
dec
add
repz
add
add
add
out
xchg
sahf
addr16
arpl
cmpsl
inc
add
cmp
insl
ret
jae
cld
lock
mov
add
inc
add
nop
mov
pop
add
sbb
mov
insl
xchg
sub
add
inc
add
pop
add
mov
cmpsb
add
pop
add
add
add
sbb
sbb
lret
test
sub
add
cmc
dec
add
das
int
mov
add
imul
jge
cmp
bound
mov
jl
jae
fwait
push
jbe
out
add
dec
kmovw
inc
add
enter
inc
add
dec
add
and
test
mov
add
add
mov
add
push
xor
int
dec
aaa
mov
inc
add
inc
add
cld
fwait
icebp
mov
add
mov
xchg
cs
push
add
jmp
add
fistpl
push
add
mov
inc
add
sbb
out
test
add
add
outsb
add
bound
test
lods
push
add
mov
bound
ja
add
xchg
mov
xchg
sbb
add
add
into
fcompp
inc
add
pushf
push
add
and
and
pop
add
stos
fmull
add
rcl
bound
mov
lea
mov
xchg
sahf
pusha
add
pop
fcoms
adc
adc
dec
add
orb
js
sahf
shrb
push
add
add
sub
in
cmpsl
loopne
sbb
out
mov
sbb
bound
jno
sbb
aaa
rcl
push
lret
push
dec
aam
xchg
inc
add
lahf
xchg
add
add
add
add
add
jb
inc
je
ja
add
rcrb
xor
mov
aad
adc
pop
and
add
stos
cmp
and
aad
add
sub
add
je
in
sub
imul
add
dec
add
sbb
xlat
or
lret
dec
add
out
test
mov
in
cmpsb
push
add
add
cmp
jne
add
stos
mov
test
sub
inc
add
jmp
mov
add
add
add
mov
mov
stos
int3
and
push
arpl
nop
fsubp
inc
jg
loop
add
push
add
or
int
add
test
mov
adc
xor
and
and
sub
dec
push
add
dec
add
mov
bound
add
mov
add
popa
add
lock
xor
dec
add
mov
inc
xor
add
xor
mov
insl
or
mulb
push
add
lahf
jae
add
lods
test
roll
mov
pop
add
cmpsb
pcmpeqb
enter
xchg
jle
jle
or
add
movsb
leave
clc
inc
add
inc
add
sbb
jmp
xchg
push
add
jp
push
add
add
mov
push
adc
sbb
xor
pushf
jnp
cmp
dec
aad
movsb
jge
add
cmp
arpl
xchg
xor
testl
and
adc
xor
in
fsubl
mov
or
push
add
jne
push
jns
fs
leave
std
sbb
add
push
inc
xchg
inc
cwtl
fsubs
add
mov
sysexit
loop
xor
add
add
fldt
add
cmp
add
ficomps
add
mov
dec
add
add
mov
add
inc
add
add
popa
je
movl
sbb
inc
add
shll
dec
add
loop
enter
cli
sbb
orl
pop
lds
aam
mov
adc
fwait
mov
sbb
pop
add
imul
add
jo
push
add
jg
add
xchg
into
rclb
xor
movl
sti
ret
dec
mov
sub
add
inc
add
mov
mov
jns
aas
dec
inc
add
outsb
add
adc
add
push
shll
add
sar
das
xorl
mov
movsl
inc
inc
xor
add
stos
dec
mov
inc
add
hlt
and
add
xlat
pop
jmp
add
push
add
push
cmp
mov
rcrb
pop
add
daa
data16
mov
add
add
xchg
loope
jae
add
cmp
std
mov
arpl
fs
insl
les
mov
add
sar
add
mov
mov
imul
pop
rol
pop
push
add
into
ljmp
add
cmc
insl
rolb
mov
sbb
sbb
sbb
inc
add
add
cmpsl
imul
add
mov
cwtl
adc
push
xor
ds
lret
and
iret
testl
xchg
jp
rolb
in
xor
sbb
lahf
in
inc
daa
mov
dec
mov
and
pop
add
sub
xor
popf
push
add
inc
add
mov
cmpsb
int3
sarb
sar
aam
aas
add
sar
mov
add
arpl
xchg
aad
jmp
push
out
inc
add
add
in
and
pop
add
imul
add
add
push
cmp
mov
jecxz
and
movsb
daa
aam
mov
stc
xchg
add
push
add
jge
push
sub
sbb
pop
add
push
sarb
xor
add
lods
int
inc
imul
pop
data16
add
aam
mov
insb
add
outsl
adc
js
gs
popf
jnp
gs
pop
sti
mov
sbb
inc
das
pop
add
lcall
dec
push
add
add
enter
movsl
or
sub
mov
add
add
scas
shlb
add
add
sbb
adc
jns
xchg
loope
je
mov
sub
add
ret
xchg
and
xchg
dec
add
add
jo
imul
add
daa
icebp
xor
sbb
lret
push
add
add
mov
add
add
add
bound
rcr
jp
dec
add
aas
mov
cmc
in
xor
xchg
in
lea
add
outsl
jmp
add
or
mov
push
rcrb
lds
inc
cmpb
mov
pushf
add
stos
jo
shlb
adc
jp
stc
dec
jmp
adc
add
jl
stos
int3
pop
js
push
add
jae
add
mov
add
testl
add
add
jo
stos
xchg
dec
add
aas
jecxz
ja
or
pusha
add
jmp
pusha
add
outsb
add
iret
push
push
add
mov
aam
fwait
cld
aas
movsb
jmp
out
shl
lods
cmpb
mov
add
mov
push
add
nop
jp
sbb
and
test
mov
pop
xchg
daa
pop
lods
xchg
xchg
stos
les
add
add
div
mov
jno
icebp
add
pusha
add
add
rcl
xchg
cld
mov
rorb
adc
lret
add
out
ficompl
add
adc
scas
push
loop
sbb
sub
pop
repnz
out
pop
add
add
jge
cmpsb
push
add
push
add
loope
add
mov
mov
inc
push
sbb
add
mov
add
add
xor
adc
add
add
shlb
add
add
mov
les
add
scas
lds
scas
sbb
xrelease
dec
inc
out
mov
unpcklps
xlat
sub
inc
jmp
add
mov
add
sti
lods
shrb
dec
cmc
int3
pop
mov
add
mov
test
jmp
mov
clc
daa
das
xor
pop
ja
add
andl
imul
hlt
sbb
jbe
inc
add
fucompp
and
into
mov
add
cmc
pop
add
pop
outsb
add
pop
data16
sbb
popa
sub
nopl
imul
add
lods
inc
in
add
int3
aaa
xchg
out
cmp
in
mov
int3
sbb
lret
popa
pusha
add
test
xlat
mov
loope
add
add
jne
add
add
adc
sbb
sbb
add
add
inc
add
nop
add
inc
add
idivl
add
add
mov
add
int3
iret
in
scas
mov
sbb
push
add
mov
mov
adc
add
cmpsl
inc
sub
xchg
jbe
mov
adc
mov
stos
mov
xchg
mov
add
add
rcr
fwait
outsl
cmpsb
or
icebp
add
push
addr16
dec
add
add
adc
dec
or
add
lret
sbb
cmp
mov
stos
in
sub
ds
sub
ds
jae
in
push
add
ds
sbb
stos
jnp
add
inc
in
jae
stc
add
pushl
dec
add
add
add
add
ja
cltd
sub
xchg
imul
or
add
repz
stos
adc
add
push
add
jae
iret
scas
ficoml
imul
inc
je
pop
orl
cmp
aam
imul
add
inc
add
cmc
mov
add
push
add
pop
add
inc
stc
cmp
xadd
fsubrl
add
cmp
xchg
add
dec
pop
add
pop
add
jo
lods
push
insl
pop
add
xchg
add
add
dec
xor
xchg
lds
or
sahf
test
sbbb
push
sbb
add
cmp
outsb
add
pushf
add
inc
add
add
add
add
add
add
mov
testb
clc
in
xchg
inc
cmpsb
ud0
aam
add
add
push
add
shl
mov
lahf
pushl
icebp
and
inc
add
adc
das
scas
popf
addr16
add
add
sub
add
add
push
add
in
je
fistps
add
add
rcll
popa
mov
sub
insb
add
lods
xchg
jno
add
outsb
add
insb
add
mov
mov
sbb
out
push
add
add
pop
add
imul
mov
xchg
mov
test
out
pusha
add
adc
int
cmovp
outsl
xor
bound
ret
adc
out
push
das
xor
mov
data16
add
outsb
add
nop
inc
mov
pop
in
xchg
pop
or
add
pop
add
push
sub
adc
add
mull
dec
xor
add
sbb
cmp
mov
add
add
mov
out
mov
das
fistps
test
xchg
test
add
xor
pop
jl
dec
add
ljmp
add
push
add
add
notb
mov
xchg
push
add
add
in
sbb
add
add
stos
stos
push
add
int3
xchg
pop
add
addr16
add
add
mov
popf
ret
push
add
mov
xchg
inc
add
sub
xor
rorl
xor
jmp
sbb
lcall
add
add
xlat
icebp
hlt
cmp
in
in
add
xor
mov
data16
in
decb
add
add
xlat
rol
cltd
inc
dec
shll
mov
ss
xor
fstp
jl
fnstcw
cmp
mov
pop
popa
fisubrl
addr16
mov
or
add
xchg
cltd
imul
add
add
add
xchg
add
add
mov
cmp
lahf
in
add
xchg
cs
pusha
add
pop
add
repnz
nop
adc
add
dec
adc
and
inc
add
lret
cmpb
jae
sbb
add
add
add
ja
add
xchg
push
adc
dec
xor
or
push
add
add
sub
jp
gs
xor
lods
sbb
outsb
add
dec
add
add
add
add
ret
add
add
cltd
shll
imul
cmc
adc
and
rcll
add
and
lods
adc
inc
add
clc
outsl
jl
adc
int3
xchg
outsl
sbb
cmp
xor
xchg
add
xor
mov
adc
les
insb
add
add
add
push
add
xchg
mov
sbb
int3
xchg
mov
add
daa
xchg
push
add
pop
dec
or
xchg
adc
dec
push
add
icebp
gs
mov
aaa
test
fsubl
add
add
mov
or
jle
mov
or
push
add
dec
ss
test
stc
cmpsb
cs
lret
pop
scas
jno
enter
pop
push
add
shr
mov
data16
add
lret
shrl
add
pop
sbb
jmp
lea
add
adc
mov
add
dec
dec
add
sbb
xchg
mov
clc
add
jmp
rorl
mov
add
jmp
push
push
dec
cmp
cmp
mov
xchg
xlat
sub
mov
add
xor
negl
in
add
push
add
mov
add
mov
pop
add
add
push
adc
cs
loopne
add
add
cmp
dec
sahf
mov
or
loopne
mov
out
add
jle
add
xor
pop
add
mov
add
ljmp
fstl
add
cmp
adc
and
add
dec
add
data16
outsb
add
add
inc
stos
ficomps
add
dec
cmp
add
icebp
mov
add
shrl
cld
xor
orl
push
add
or
loopne
xchg
dec
add
fsubl
add
add
sahf
xchg
adc
mov
add
stos
ret
adc
cmp
test
add
sahf
cmp
mov
das
inc
sarb
add
push
add
or
fldcw
add
xchg
jns
pop
xor
pushl
add
adcl
cmc
mov
and
imul
add
fstp
xor
add
jle
flds
aas
dec
or
push
add
add
add
push
fwait
mov
pop
aad
add
add
scas
jns
aad
loope
add
add
push
add
mov
push
ret
sub
cmpl
add
les
call
dec
add
rol
mov
inc
add
add
add
iret
xchg
loopne
dec
add
popf
in
mov
inc
add
push
add
xchg
inc
add
add
jp
in
lcall
repnz
and
mov
mov
add
outsb
add
sub
sbb
inc
andb
mov
in
adc
shll
lds
add
int3
scas
jb
aam
add
jmp
cmpsl
mov
jbe
add
add
cmp
adc
mov
js
add
mov
std
aam
hlt
mov
scas
adc
popf
mov
ffree
push
add
sub
movsl
stos
push
add
dec
bound
adc
das
divl
add
inc
add
clc
movsl
mov
add
sub
lock
mov
add
cmp
enter
pop
popf
cmc
movsb
call
or
add
jl
xchg
ja
mov
xchg
sbb
or
lahf
push
jno
mov
add
jns
mov
inc
lds
push
add
sarb
push
add
add
ficompl
add
loopne
loopne
int
adc
jmp
add
jge
add
test
sbbb
lret
outsl
insb
add
push
sahf
jne
add
sbb
cmpsl
test
xor
mov
add
jmp
add
add
mov
pop
sbb
cmpsb
xor
loop
cltd
pusha
add
add
add
add
xchg
hlt
jl
sarb
mov
xor
add
add
add
dec
add
daa
jbe
nop
cmp
in
rcl
add
iret
scas
pop
add
loope
pop
add
inc
mov
add
inc
add
inc
add
sarl
add
call
arpl
insl
imul
add
add
xchg
andb
pop
add
mov
add
mov
clc
add
xor
adc
inc
add
loop
jne
add
sub
clc
xchg
sub
sbb
sbb
add
loope
or
xor
insl
sbb
rorl
xor
add
sub
rdpmc
sti
sub
dec
add
pop
and
out
lock
dec
inc
add
fcomi
fildl
repz
data16
add
and
cmp
or
xor
lahf
inc
add
add
add
add
mov
into
cld
movsb
jp
dec
jp
xor
adc
add
sahf
fcoml
imul
xchg
movsl
mov
add
add
add
inc
js
out
fisttpll
sub
inc
add
ret
test
arpl
or
xlat
inc
add
add
push
add
cwtl
pop
add
push
add
test
std
daa
sub
cmp
add
add
xorb
add
add
add
add
leave
mov
lods
add
imul
xor
dec
xchg
add
mov
dec
add
dec
jbe
sub
in
test
add
adc
loope
or
jb
or
add
add
int
lcall
mov
dec
sahf
push
add
xchg
inc
add
xor
loopne
add
clc
mov
and
mov
int
or
pop
cmpb
add
add
add
ret
add
push
add
pushf
xor
mov
inc
add
sub
dec
cltd
add
xchg
mov
mov
add
pop
pop
fbstp
and
daa
sbb
mov
pusha
add
add
add
mov
and
push
je
je
pop
add
inc
add
imul
pusha
add
test
bound
inc
cmp
fst
xor
add
push
add
add
dec
jecxz
outsl
into
mov
or
add
mov
test
dec
add
and
pop
test
add
mov
jl
inc
add
cmp
dec
lods
js
mov
daa
movsb
out
mov
add
cmp
into
sub
xchg
xchg
jb
ret
push
add
pop
popf
mov
das
inc
add
and
xchg
cld
inc
add
add
mov
movsb
inc
add
lds
xlat
sub
pushf
adc
insb
add
jae
adc
stos
shl
inc
dec
xchg
pop
cmp
stc
subl
mov
add
push
fmul
xchg
outsb
add
add
adc
pop
out
lods
xorl
inc
and
or
add
andl
add
dec
and
test
iret
and
sub
adc
push
add
add
sub
add
sub
add
add
rol
movsb
icebp
add
push
add
cmp
cwtl
push
add
push
fidivl
jl
mov
jl
scas
jl
notl
xchg
shlb
sbb
lods
add
mov
jge
leave
movsl
pop
stos
xor
cmp
add
add
dec
add
rol
mov
xchg
out
daa
lcall
push
add
adc
aaa
cwtl
lret
sub
or
add
sub
xorb
add
mov
dec
add
mov
and
aam
inc
and
add
add
jl
sbbl
push
add
arpl
push
je
mov
sub
dec
dec
add
xlat
cmpsb
sbb
cmpsb
cmp
imul
add
cmp
or
rclb
movsl
out
mov
les
add
push
add
in
xor
iret
test
dec
xor
pop
add
add
out
push
add
xchg
test
xchg
xor
add
sbb
xchg
pusha
add
cltd
out
out
add
ret
mov
fwait
and
add
add
or
int3
adc
add
mov
mov
pop
add
jmp
inc
loop
cltd
push
insl
add
ret
jecxz
inc
add
repnz
add
in
stos
mov
mov
xchg
mov
fidivrs
insb
add
jmp
in
orl
add
and
js
xchg
cwtl
dec
leave
daa
cmc
js
pop
add
out
jne
add
arpl
adc
add
les
dec
add
and
int3
pop
xchg
dec
sahf
mov
xchg
and
mov
xor
in
in
add
mov
mov
cmp
xor
cld
inc
add
jmp
push
jae
push
add
add
add
add
add
mov
mov
jmp
xchg
mov
xor
add
add
mov
add
mov
lret
mov
pop
sub
add
add
sahf
add
jge
dec
pop
add
rorb
mov
push
push
add
push
add
daa
mov
xor
xchg
dec
andl
jle
jne
add
push
add
jne
mov
cmc
sub
enter
or
jp
enter
insl
xor
inc
and
push
fcomi
inc
add
add
add
rclb
xor
xor
lret
inc
add
pop
add
add
xchg
in
add
ret
xchg
cmp
roll
popa
out
xor
dec
add
add
maskmovq
notl
addl
adc
dec
add
and
push
add
rcrb
add
or
sbb
push
arpl
adc
pop
jl
pop
loope
cmp
sti
rolb
add
sbb
js
mov
add
std
lcall
sahf
scas
call
lods
test
jmp
pop
cmp
cmp
add
push
add
mov
outsl
jmp
iret
cmp
pop
leave
inc
add
cmp
sbb
sti
add
jl
and
mov
outsb
add
gs
add
sbb
add
sbb
mov
pop
addr16
hlt
add
add
add
aad
add
pop
add
mov
pop
add
add
xchg
fwait
xchg
adc
pop
aaa
adc
push
add
lcall
sbb
in
push
add
ss
cld
dec
icebp
fimull
add
jbe
ror
and
pushf
mov
inc
add
fnsave
add
add
mov
or
mov
adc
add
inc
add
cmp
test
addr16
add
lock
lock
arpl
add
cwtl
shufps
je
lods
add
jl
cs
add
add
pop
cmp
mov
out
inc
loop
icebp
fcompl
push
add
inc
add
addb
loope
jmp
lahf
xor
outsl
and
jecxz
jno
ljmp
in
add
sub
jge
jl
mov
push
add
sub
fcmovne
push
sub
xchg
sub
sahf
ret
push
add
clc
mov
ljmp
add
and
or
pop
add
mov
add
in
gs
sti
jle
inc
add
add
adc
sarl
cmpsl
out
pop
test
add
das
ljmp
jne
adc
push
add
pop
add
add
cmc
mov
xchg
xlat
in
imul
mov
popf
mov
adc
add
loop
add
aad
add
push
cmp
push
add
mov
stos
add
mulb
mov
mov
add
add
addr16
jle
mov
lcall
and
daa
mov
xchg
jno
sbbl
out
dec
add
add
out
inc
test
add
aad
icebp
mov
bound
ja
xchg
and
std
xor
dec
xor
lods
pop
add
and
add
pop
add
add
sbbl
fdivl
push
add
add
jp
dec
add
add
add
sahf
push
add
jge
popa
xor
dec
sub
push
add
ja
mov
add
xlat
mov
push
add
cmp
add
in
fidivs
add
daa
add
sbb
cmpsl
adc
mov
sub
adc
rcr
or
push
add
popa
mov
addl
sub
js
aas
int
mov
add
fistl
push
add
pop
add
mov
push
add
shlb
add
icebp
pop
dec
mov
add
lret
mov
xlat
cltd
mov
lret
sbb
jno
push
add
xor
add
xchg
mov
or
mov
add
stos
test
jecxz
push
jae
fnsave
pop
add
jo
mov
les
fildll
add
mov
leave
sbbb
add
add
add
mov
adc
dec
mov
mov
mov
andb
add
sbb
lods
cltd
call
push
add
scas
iret
lret
popa
in
jecxz
fdivl
dec
inc
add
cwtl
sub
sub
jae
add
add
add
sbb
add
test
scas
lahf
dec
add
dec
add
loope
add
add
add
mov
add
icebp
pop
sub
sub
mov
mov
add
int3
mov
jecxz
jp
or
adc
push
adc
add
fsubl
add
add
gs
push
add
mov
out
pusha
add
pop
fiadds
add
loopne
scas
lahf
dec
add
mov
add
push
jnp
cmp
in
xchg
cmpsl
jmp
nop
mov
inc
add
sbb
sub
jae
xchg
or
ds
add
push
add
sbb
ja
push
add
nop
sub
add
sbb
pop
add
add
add
mov
add
push
add
ficoml
arpl
test
je
fsubl
add
add
add
nop
mov
and
fstp
push
add
jecxz
lret
int
sub
fildll
add
in
mov
cmpsb
xor
enter
hlt
shl
jne
add
add
out
mov
gs
jge
js
in
in
add
sbb
lods
out
xchg
xor
ficoml
inc
scas
insl
jl
je
mov
jmp
pop
jl
fsubs
iret
or
sbb
mov
and
jl
push
pop
push
xchg
push
add
out
xchg
sbb
jae
lds
imul
dec
cmp
and
and
mov
dec
add
sub
jmp
jae
add
dec
dec
and
inc
lds
xorb
jo
aaa
ljmp
dec
add
icebp
add
pop
fadds
sbb
inc
add
add
push
add
add
mov
mov
loop
xchg
inc
add
fiadds
add
add
jp
or
add
pop
add
dec
add
ja
add
add
adc
insb
add
loope
add
push
xchg
nop
aaa
mov
mov
mov
and
insb
add
add
sti
or
add
imul
xchg
sbb
popa
loop
add
fimuls
clc
mov
add
add
add
insl
bound
sbb
scas
xor
mov
cmpsl
inc
add
jl
push
pop
add
xor
ret
fdiv
push
add
xchg
popa
jecxz
mov
xorb
dec
add
lods
lret
sbb
test
popf
nop
jl
fidivs
add
add
and
ficoml
mov
dec
add
add
add
push
add
add
pop
xchg
inc
leave
pop
add
lods
lret
xchg
aam
cmp
fcoms
pop
dec
test
and
sbb
ja
add
jmp
ja
pop
add
push
add
add
sub
lcall
mov
add
jno
nop
jge
add
shll
add
add
daa
pushf
cmpsl
in
add
repz
dec
add
fisubrs
mov
mov
mov
lds
add
push
mov
pop
sub
enter
xor
add
jbe
repnz
sbb
pop
push
dec
add
cld
xchg
push
sbb
jle
push
mov
test
je
in
jno
add
pop
add
and
sbb
out
leave
popf
or
pop
add
xor
call
adc
lock
addr16
leave
mov
xor
ljmp
test
aaa
push
add
stos
out
add
cli
js
insl
stc
arpl
out
cmp
lods
inc
add
jb
push
add
test
dec
push
add
add
push
add
sub
xor
fcmovnbe
xor
xchg
inc
das
mov
enter
ret
push
shlb
add
test
and
push
outsl
std
shll
gs
xchg
jmp
add
std
adc
pop
add
aam
add
and
mov
cltd
xor
and
push
cmp
aad
add
aad
add
mov
mov
add
and
mov
add
mov
ficoms
outsl
and
or
fistl
mov
add
mov
rorb
add
add
lods
xchg
icebp
out
mov
fmull
add
rolb
pop
mov
nop
dec
add
sbb
jl
out
mov
add
fdivrs
incb
add
add
inc
add
add
and
bound
scas
pusha
add
inc
out
movsl
mov
rcrl
add
mov
and
push
lahf
ficoml
ret
xor
mov
cmp
inc
xor
add
mov
dec
jecxz
pop
add
jg
outsb
add
test
sub
test
pop
jge
inc
add
fists
add
and
mov
bound
and
adc
add
call
push
add
fnstcw
and
mov
add
or
add
add
ret
fcoml
loope
mov
and
mov
mov
test
add
jge
sbb
ret
dec
xchg
leave
and
in
cmp
scas
stos
push
add
add
andb
es
add
nop
jns
adc
pand
add
cmpl
add
mull
add
outsl
addr16
jns
shl
add
stos
stos
fmulp
sub
add
sub
mov
adc
add
test
movsb
cmp
xor
insl
in
sbb
sbb
sub
add
cmp
sti
fwait
test
sub
jge
inc
adcl
lret
idivl
add
add
adcl
push
add
popa
add
cltd
inc
add
add
pop
push
add
aas
add
fmulp
sub
mov
add
xchg
jl
add
pusha
add
or
mov
push
or
add
add
add
mov
sbb
loop
add
sbb
adcl
insl
mov
movb
and
add
mov
add
or
icebp
jl
cmpsl
daa
xor
and
hlt
mov
outsb
add
inc
add
push
add
mov
cmp
aaa
out
sub
cmp
ljmp
mov
add
out
lods
dec
lods
mov
add
aam
inc
add
push
add
loope
cmc
fdivrp
lea
add
add
add
push
add
add
pop
aas
outsl
test
add
test
mov
add
cmpsb
sbb
fdivrl
add
add
add
mov
in
sub
add
sarl
es
mov
add
add
jmp
xor
push
add
stos
push
add
add
cmp
xchg
or
rcll
stos
add
dec
insl
jmp
inc
fisttps
inc
je
popa
stos
outsl
out
add
add
test
push
rol
sti
fidivl
or
stos
imul
jno
roll
add
imul
mov
add
push
add
add
xor
mov
adc
add
pop
rorb
dec
add
inc
add
add
dec
add
loope
je
hlt
push
add
and
dec
add
sbb
cwtl
arpl
mov
sahf
iret
inc
cmp
sbb
add
aam
insl
sbb
mov
xorb
out
mov
inc
add
aad
xlat
cmp
fiadds
add
sbb
and
jno
dec
rcrb
jp
adc
sub
sub
ret
out
or
add
push
inc
push
add
enter
add
dec
out
insl
xlat
push
add
jp
std
roll
add
pop
outsb
add
push
add
push
mov
mov
mov
movsb
xchg
add
gs
add
add
fnsave
hlt
cli
sub
xchg
adc
push
add
out
out
test
jns
iret
adc
adc
add
shll
pop
add
push
add
add
push
lcall
mov
pop
jo
sub
add
jb
push
into
stc
inc
dec
fwait
repnz
imul
add
xchg
add
fisubs
add
mov
sub
add
inc
add
add
xor
add
add
add
xor
or
fisubrs
mov
addl
les
add
adc
add
repnz
add
xchg
test
repz
loope
add
idivl
xchg
mov
mov
outsl
xor
insb
add
fcompl
popl
popf
inc
add
xchg
imul
repnz
xchg
jecxz
add
mov
xchg
and
test
enter
sub
jo
aam
add
add
cmc
or
sub
sbb
inc
add
xchg
adc
shld
push
add
mov
adc
push
add
xchg
dec
rol
jecxz
lods
mov
sub
cld
pusha
add
jo
push
add
and
jg
xor
xor
daa
fcomp
daa
ret
dec
add
mov
repnz
xchg
dec
add
sub
add
add
xor
sbb
enter
cwtl
add
cli
out
add
xor
enter
mov
test
imul
aad
xor
xchg
testl
fistpl
sbb
mov
push
stc
cmp
outsl
xor
int
xor
add
fdecstp
scas
mov
addr16
cmp
add
lods
mov
add
sub
ds
jo
xlat
lea
add
add
add
dec
shr
adc
pop
or
mov
mov
adc
add
out
cmpsl
jmp
aas
add
icebp
rcl
cmp
adc
subl
push
mov
add
mov
fidivrs
ds
xor
sub
cmpsl
pop
push
add
xchg
mov
add
or
iret
pop
adc
std
sub
loopne
lret
inc
dec
push
add
add
mov
sub
or
add
sub
add
shlb
push
add
push
lds
outsb
add
add
add
mov
cmp
cs
inc
lock
es
rcl
popl
add
push
loop
add
icebp
jl
sbb
add
fdivs
xor
shrl
bound
loopne
add
add
cmovb
cmpsl
in
gs
mov
jae
rcr
add
out
test
mov
mov
add
jbe
jp
scas
aas
add
add
mov
add
push
xor
sub
inc
nop
aas
pushf
add
add
xor
xor
or
jae
test
add
mov
jns
cmpps
jg
add
test
mov
call
add
add
mov
iret
mov
xorl
xchg
xchg
push
jo
enter
or
popl
jl
sub
add
push
add
cmpl
cmc
inc
add
add
add
add
add
mov
mulps
add
fldl
sub
mov
andb
add
icebp
ret
mov
and
add
xor
push
sub
dec
add
add
add
mov
ja
mov
fwait
and
repnz
div
lret
or
adc
push
mov
lret
xchg
cwtl
mov
call
ret
sahf
stos
outsl
add
ret
xor
add
mov
jmp
inc
push
cmp
adc
sti
push
fs
xchg
lret
and
xchg
jbe
arpl
addr16
add
dec
add
xchg
scas
and
jno
fwait
pushl
add
mov
shll
hlt
mov
and
je
push
add
sub
add
add
add
cmpl
cmp
add
adc
add
dec
mov
subl
lods
fdiv
adc
dec
mov
sbb
cmp
add
fsub
insb
add
xor
sbb
push
hlt
pop
add
add
add
add
xchg
aad
mov
das
stc
in
xchg
sub
add
or
add
cmp
push
sbb
pop
add
shlb
cmc
xlat
add
dec
pusha
add
test
adc
and
mov
pop
add
mov
add
add
sub
test
add
sti
push
add
dec
add
daa
scas
enter
add
mov
jl
pop
daa
fisubs
add
cmp
mov
cmp
add
stc
int
rorb
add
jae
mov
les
dec
subl
sub
and
add
jae
jecxz
add
xor
into
jne
data16
add
jge
shrl
je
jbe
imul
add
mov
sub
sub
xchg
mov
sbb
repnz
mov
mov
mov
jo
aas
out
or
outsb
add
push
or
mov
fstpt
mov
pusha
add
dec
inc
add
or
testb
add
cltd
cmp
mov
add
leave
jge
inc
add
inc
add
xchg
adc
arpl
add
cmp
jnp
std
push
stc
out
add
mov
add
mov
mov
inc
add
push
mov
mov
insb
add
fldl
add
add
mov
enter
or
add
push
add
mov
mov
and
jae
push
mov
pop
add
mov
call
add
fsubr
jb
or
mov
dec
call
jp
inc
add
test
mov
stos
xlat
pop
add
pop
add
push
add
add
dec
add
add
repz
jae
ja
adc
test
mov
popf
loopnew
xor
in
or
push
add
loope
jne
cmp
negl
test
test
pop
add
in
and
add
add
mov
cmp
test
add
lock
mov
xor
cmp
add
xor
das
dec
sbb
push
xchg
ret
je
dec
adc
cmp
jl
cmp
pop
xchg
daa
push
mov
add
negb
pushf
xor
lds
adc
dec
and
push
adc
jmp
sahf
cmpsl
pusha
add
add
mov
add
add
test
js
jle
mov
mov
add
inc
enter
stos
mov
add
xor
test
cmpsb
adcl
mov
xchg
stos
adc
push
sahf
jecxz
mov
sub
enter
movsb
dec
add
xchg
lods
rol
push
add
adc
pusha
add
dec
mov
sar
jmp
add
xor
outsb
add
aas
add
sbb
shrl
add
ljmp
jne
mov
popa
test
loop
add
test
in
push
add
add
fiaddl
push
add
push
ret
imul
and
loop
fwait
sub
loope
add
xor
add
xchg
repz
insl
sbbl
sbb
in
add
icebp
jae
xchg
into
pusha
add
outsl
jl
dec
rol
push
adc
les
out
cmp
mov
in
cmp
and
hlt
mov
in
lds
jnp
xchg
sub
inc
add
shr
leave
cmpsl
dec
add
sub
subl
scas
clc
push
add
add
jecxz
add
mov
jle
sbb
and
mov
add
pop
add
pop
add
jl
bound
mov
add
scas
and
fstpl
mov
add
and
inc
add
pop
add
xchg
ja
dec
and
out
push
add
add
cld
dec
add
add
inc
add
aaa
loope
push
add
popa
dec
add
add
dec
mov
dec
add
jg
call
btc
xchg
cmc
mov
add
mov
pop
jne
pop
lods
jmp
adcb
add
cmc
out
add
xor
cli
imull
rolb
iret
test
cmp
cmp
cmovl
sub
add
je
int
add
adc
stos
or
iret
dec
add
push
add
sub
add
add
push
add
inc
cmp
mov
inc
lcall
add
sub
insb
add
pop
add
sbb
inc
add
clc
and
or
mov
sub
in
mov
jne
add
mov
push
add
mov
xlat
and
pushf
adc
and
add
sti
bnd
sub
imul
xor
push
je
adc
push
sbb
fistpl
add
jp
popa
xorl
add
mov
scas
jbe
inc
add
add
add
test
add
fdivrl
pop
add
add
cmpsl
loope
rol
pop
add
gs
inc
jle
sub
cmp
imul
add
jg
bound
cmp
push
roll
popa
jae
cmc
fwait
jecxz
add
lods
in
fimull
push
add
leave
mov
sbb
sbb
fisubl
insb
add
mov
add
push
add
loope
jmp
mov
mov
sub
pusha
add
add
lock
add
call
pop
add
mov
imul
mov
sbb
and
add
mov
pusha
add
cmp
jp
test
add
xor
ja
jbe
and
add
cmp
mov
and
arpl
add
or
mov
add
add
mov
cltd
iret
call
test
mov
add
xor
add
adc
out
cmc
mov
mov
adc
int
cmp
mov
jns
jg
and
cmp
repnz
loopne
inc
add
mov
add
cwtl
adc
sbb
jge
mov
add
pushf
cmp
das
lret
leave
or
iret
add
jg
jmp
sub
jnp
in
data16
in
loop
add
popf
inc
sbb
jge
loop
and
mov
mov
test
add
loopne
add
jl
or
xchg
adc
pushf
pop
add
dec
add
or
add
add
add
les
xor
fidivrs
test
cli
out
cli
lret
pop
ret
xor
add
sti
mov
xchg
sbb
repnz
in
imul
cmp
or
jmp
add
adc
cmp
add
add
pop
lods
and
mov
lock
inc
add
add
rcrb
dec
add
push
add
jg
movsl
pusha
add
add
fmull
cltd
xchg
iret
lret
inc
add
mov
jbe
xor
pop
add
out
push
add
push
or
jg
int
fnstsw
or
cmc
iret
mov
add
mov
mov
add
add
add
add
stos
insb
add
add
add
mov
add
dec
add
cmpsb
lods
aad
and
xor
das
lcall
add
stc
sub
add
loopne
push
add
mov
and
jge
push
push
xchg
inc
add
loopne
hlt
pop
outsb
add
lods
or
add
push
add
in
dec
push
mov
lea
and
push
lods
and
pop
add
mov
aas
lea
or
push
add
add
add
add
and
lods
xchg
add
aas
xlat
repnz
daa
jbe
fsts
add
int3
mov
add
xor
mov
mov
mov
jmp
insl
sar
lret
xchg
subb
popa
data16
into
dec
add
xchg
push
add
lods
add
mov
testl
pusha
add
jo
rclb
pop
int
add
test
fistl
add
add
push
add
cs
imul
nop
xchg
or
jb
test
jns
push
add
add
test
std
and
xbegin
add
jb
data16
jle
dec
xchg
jge
sbb
ja
inc
rorl
add
jbe
xor
dec
adc
aad
add
add
xor
or
sti
lock
cmp
xchg
add
xchg
loop
add
push
add
inc
add
add
std
push
imul
js
jne
cmp
add
clc
les
xor
pop
or
insb
add
sahf
lret
jo
into
in
mov
ja
mov
jmp
mov
test
add
repz
add
inc
out
ljmp
ret
outsl
pop
inc
inc
loopne
xchg
lret
data16
add
dec
add
mov
add
add
jle
push
out
sti
mov
in
add
cmpsb
sub
adc
or
or
add
or
xchg
or
inc
add
add
add
add
dec
add
jl
repz
cld
xchg
dec
and
out
mov
adc
add
push
add
in
sub
imul
cs
dec
fdivs
dec
mov
test
sbb
sahf
pop
adc
xor
inc
inc
add
add
add
add
jg
add
sbb
or
inc
add
add
sbb
lcall
or
call
mov
add
test
bound
cmpsb
mov
inc
lea
push
add
mov
outsb
add
cmp
add
mov
rcr
adc
int
add
sbb
xlat
mov
outsl
xor
cmp
pop
test
adc
popa
ret
lods
jne
mov
sahf
or
adc
loopne
mov
pop
add
cmpsb
inc
add
add
add
icebp
xchg
mov
and
jp
sar
cmc
xor
add
add
xor
dec
add
mov
add
fisttpl
add
add
popf
mov
add
call
add
xor
jb
fcmovnbe
and
pusha
add
pop
add
mov
stos
mov
add
inc
add
test
rcl
mov
dec
pop
add
pop
add
add
mov
sarb
fdiv
cmp
sbbl
xchg
cmp
xchg
je
mov
add
out
push
stos
sbb
and
stos
in
jno
mov
xor
fisttps
js
pop
scas
aad
add
push
leave
popa
in
int3
sbb
mov
jb
cmp
adc
add
fsin
mov
add
into
jmp
adc
repz
jle
stos
dec
add
fldenv
pop
fsubrs
xorl
mov
adc
and
cmpsl
and
add
call
lods
lods
dec
add
fdivs
push
add
cltd
mov
fwait
rclb
pushf
imul
mov
add
push
pop
add
out
test
add
dec
clc
mov
shrb
bound
pop
add
add
add
add
or
in
jmp
xchg
or
call
sbb
add
sbb
leave
pop
iret
in
rorb
les
aam
add
add
cwtl
pop
add
xor
mov
and
lock
sti
xchg
xor
clc
aam
insb
add
add
add
xor
inc
add
daa
adcb
mov
jno
lock
call
jle
xchg
fcoms
add
out
push
jo
and
mov
dec
loopne
inc
add
push
dec
data16
bound
pop
add
fcompl
push
add
in
fbstp
mov
cmpsb
jmp
add
add
pop
dec
add
add
sete
test
mov
lock
fcmovu
loop
sti
cmp
bswap
test
add
push
add
add
mov
add
inc
int
add
mov
add
add
and
and
xchg
leave
or
pop
dec
adc
pop
inc
lods
les
pop
out
add
add
movsl
mov
add
stc
pop
cmpsl
cmpl
pop
pop
pop
add
bound
mov
jne
mov
andl
mov
add
fcomps
ljmp
cwtl
jecxz
xchg
sbb
subb
sub
pop
ret
jmp
add
add
pop
xor
add
iret
loop
add
sub
dec
sbb
popa
lret
scas
lret
mov
loope
or
mov
ror
cmp
aaa
sbb
enter
dec
pop
add
stos
xchg
mov
outsl
sub
add
pop
xor
orl
sub
call
jns
inc
push
add
add
dec
mov
dec
add
iret
scas
and
add
movsl
loop
add
push
add
aam
adc
add
imull
add
cltd
test
jmp
mov
adc
mov
mov
adc
add
leave
lahf
cmp
push
add
data16
leave
aaa
aam
lcall
add
mov
push
das
dec
push
js
and
mov
add
add
dec
and
mov
push
mov
hlt
mov
dec
fidivl
std
ret
lock
cli
add
stos
and
add
push
add
add
add
int3
dec
add
clc
add
sbb
ja
int
add
out
xchg
lret
sbb
push
mov
mov
push
add
mov
imul
repz
mov
insl
pop
add
sbb
or
jno
mov
sub
out
xchg
push
in
fildl
adc
pusha
add
lret
cld
push
add
ja
pop
add
pop
dec
add
cli
mov
add
xchg
push
add
mov
lcall
xchg
jne
loopne
xor
add
mov
jle
test
aad
xor
fcoml
sub
add
in
rorl
add
add
into
push
add
add
add
add
pop
ss
arpl
mov
add
push
and
push
push
or
mov
add
add
cmp
xor
sub
adc
sbb
mov
rorl
push
fdivr
mov
out
add
add
add
fisubs
pop
lahf
adc
insb
add
pop
inc
add
pop
add
sar
xchg
shrb
mov
add
jnp
add
jo
subl
cmpsb
jne
add
arpl
mov
mov
add
push
add
jecxz
xchg
aas
filds
std
lret
and
dec
and
jb
adc
mov
jne
xchg
xchg
push
add
push
add
incl
stos
outsl
adc
cmp
aad
rolb
xchg
cmp
inc
add
cmp
add
push
add
rcrl
js
jle
cmp
nop
or
bound
and
cmp
add
shl
add
sbb
les
sahf
lret
out
sub
push
add
pop
popa
cmp
imul
add
add
jp
leave
or
add
test
cmp
pop
add
sub
push
cli
dec
and
pushf
lcall
push
add
jmp
rcl
js
mov
xchg
cmp
or
pusha
add
inc
ja
add
lret
pop
add
add
sub
push
adc
pop
cmpsl
leave
adc
sbb
sbb
push
add
lods
add
fs
in
pop
add
pushf
imul
sti
lods
cltd
test
add
xchg
testl
adc
add
ja
push
add
dec
add
test
lret
ss
add
cmp
add
mov
clc
and
add
add
mov
add
push
add
mov
movsl
push
add
mov
lret
jp
inc
add
aaa
jbe
stos
and
repnz
add
lea
xchg
adc
test
adc
pop
xlat
xchg
push
add
pop
add
mov
add
jno
test
xchg
cmp
add
add
add
jae
dec
xchg
dec
std
lods
push
mov
negl
cmpsl
inc
std
push
add
dec
add
sub
add
insl
cmp
pop
add
and
iret
mov
add
outsl
sbb
and
xchg
addr16
xchg
sub
xor
add
jecxz
mov
add
lods
push
add
aad
mov
add
or
int3
xchg
push
jno
pushf
sahf
jb
jo
and
add
add
push
add
enter
inc
xchg
mov
jmp
insl
mov
insb
add
jecxz
mov
pop
mov
adc
jmp
add
add
sub
stc
pop
int3
and
mov
xchg
jl
stos
push
jne
add
add
add
movb
ret
lcall
in
add
push
add
repz
and
hlt
mov
jns
add
mov
sbb
cmpsl
jecxz
cmp
push
test
push
add
add
xor
mov
imul
sti
mov
add
dec
add
add
add
add
in
add
pop
data16
sub
lcall
arpl
dec
add
add
mov
movb
push
jp
xor
and
push
add
mov
in
data16
dec
add
imul
add
add
add
jp
aam
mov
pop
add
add
add
add
fistpl
add
rcrb
add
add
rorb
add
push
add
add
fisubrl
add
test
nop
cli
lcall
push
add
popa
movsl
cltd
mov
imul
enter
xchg
pop
lock
mov
jg
add
push
add
inc
add
add
int3
loop
add
mov
add
sub
mov
stos
xlat
jbe
jae
pushf
sub
xchg
jb
outsl
sbb
xor
cmc
push
add
mov
add
imul
pop
add
pop
ror
cmpsl
mov
add
cmp
sbb
out
mov
add
add
add
test
jge
leave
lcall
add
push
test
add
xchg
out
jnp
imul
js
dec
mov
add
mov
imul
dec
add
add
lods
stos
mov
stc
je
add
stos
pop
add
les
shrb
push
add
sbb
leave
shlb
push
mov
add
xor
pop
dec
add
add
pop
add
push
add
xor
add
mov
add
sahf
sbb
das
into
icebp
sbb
jns
inc
negl
jle
loop
enter
xchg
scas
pop
xchg
mov
lahf
das
popl
mov
inc
cmc
jge
movsl
rcrb
or
add
scas
mov
push
js
adc
jmp
pop
push
xchg
add
jmp
xchg
jns
xchg
loopne
test
add
add
sub
add
xlat
dec
push
add
xor
add
xor
loope
cmp
decb
daa
jmp
mov
add
jge
xchg
push
sbbl
add
add
mov
in
shlb
mov
aam
add
add
mov
hlt
sub
movsl
fcoms
shrb
popa
dec
add
jae
imul
dec
mov
xchg
add
add
pop
pop
pop
adc
cli
lret
lahf
sbb
imul
sti
repnz
add
sbb
push
add
into
stos
leave
mov
add
add
into
leave
pop
add
out
add
or
cli
pop
pop
test
add
cwtl
imul
ret
das
loope
addb
dec
add
das
push
out
inc
add
insb
add
cmp
cs
in
in
cmpsl
jb
mov
add
outsb
add
mov
jge
jnp
mov
out
pop
add
ja
add
pop
das
push
or
bound
insb
add
test
mov
add
dec
add
lds
mov
insl
imul
scas
add
sub
mov
stos
inc
dec
add
push
incl
iret
or
xchg
pop
pop
nop
and
lcall
loop
and
stos
or
jno
add
loope
push
add
dec
add
repz
mov
push
add
add
notl
or
aas
dec
add
add
add
add
add
enter
mov
fcoml
call
in
sub
cmp
add
rorl
inc
adc
js
mov
pop
add
test
add
notb
push
add
mov
pop
add
daa
or
aaa
ret
aaa
in
int3
xchg
call
sub
das
mov
cmpsl
test
add
loope
add
stos
adc
add
rcll
cmp
add
push
add
repz
or
cmc
mov
aad
xlat
add
js
or
push
add
ret
test
mov
dec
iret
sbb
add
testb
arpl
daa
scas
cmp
add
fists
pusha
add
lea
in
in
ljmp
xchg
jo
cltd
stos
add
inc
psubq
sbb
add
jge
sbb
push
add
add
add
repnz
dec
adc
daa
push
add
ljmp
add
or
mov
insb
add
and
outsb
add
add
mov
cmp
scas
or
pop
add
xchg
outsl
and
rcr
movsb
add
lods
shrb
mov
popf
out
sbb
dec
adc
sub
out
jae
sub
pop
mov
fsubs
add
add
stc
or
dec
add
add
test
inc
add
cwtl
and
lock
mov
adc
or
add
or
enter
je
jns
add
mov
icebp
mov
add
xor
add
testl
ja
mov
cmp
or
cmp
xchg
xor
dec
daa
pop
imul
dec
add
mov
subb
lods
cmpsl
test
jns
mov
adc
fildl
clc
inc
add
xor
mov
add
cmp
add
cmp
dec
add
sbb
pop
add
add
ret
push
add
sub
mov
divb
add
or
inc
daa
cmpsl
out
ret
mov
popa
inc
add
add
je
mov
xchg
add
and
add
test
in
fdivrl
adc
pop
add
mov
cmp
iret
cmpsl
test
shl
mov
adcb
add
sbb
mov
add
add
xchg
call
add
xor
gs
js
sub
mov
inc
add
sub
add
cmc
je
mov
lods
mov
jae
mov
add
jns
int3
adc
nop
or
cld
insl
lcall
scas
add
mull
insb
add
mov
fwait
dec
leave
pop
into
nop
or
push
add
mov
add
gs
sub
mov
jl
inc
add
mov
add
aaa
in
add
cmp
lds
mov
xchg
add
fisttps
dec
ja
test
or
sahf
add
add
dec
add
sub
xchg
hlt
aad
pop
push
add
mov
je
in
imul
sbb
gs
lahf
rorb
mov
leave
add
jbe
data16
push
je
cmp
push
add
mov
into
cmp
lret
mov
add
aas
out
xchg
dec
add
add
dec
inc
in
adc
mov
add
fcmovne
and
popf
mov
sti
cmp
lcall
out
adc
or
repz
add
sbb
fisttps
add
ret
sbb
sbb
insb
add
adc
mov
loope
and
fsubrl
dec
shr
cmc
push
add
mov
hlt
cmp
lret
inc
add
add
add
mov
adc
popf
pop
add
in
add
cmpsl
jge
shrb
add
add
inc
out
add
ret
inc
push
add
addl
ljmp
repnz
outsl
popa
and
repz
or
sbb
rorb
and
push
add
ucomiss
jne
adc
in
xor
inc
xchg
adc
mul
mov
sbb
sub
mov
mov
push
xchg
and
mov
mov
add
das
lcall
add
fstpt
fdivrl
fists
add
stos
push
add
jle
arpl
add
fcoms
xchg
jo
pusha
add
repnz
into
cmp
sbb
in
adc
mov
xlat
pop
add
add
xor
push
ljmp
xor
add
repnz
popa
push
add
jecxz
outsl
jae
js
notb
mov
jg
sti
mov
push
add
adc
mov
inc
sub
call
leave
add
lret
call
add
add
lcall
pop
lret
push
loopne
xchg
pusha
add
ds
sbb
sub
fsubrs
mov
imul
add
or
inc
adc
add
icebp
cmp
stc
repz
jmp
add
in
ficoml
ss
sub
or
jne
sbb
push
add
mov
movsl
pusha
add
aam
add
add
repnz
mov
dec
add
mov
imul
sbb
adc
xchg
xlat
inc
add
add
add
leave
xchg
aam
or
sbb
imul
leave
mov
insl
jecxz
add
aas
int
cmpb
nop
hlt
cmp
cltd
adc
jmp
add
add
mov
cmp
add
add
add
jle
mov
sbb
xor
xchg
clc
addr16
lods
hlt
mov
mov
adc
sbb
push
pushf
divb
int3
movsb
test
push
add
push
xor
cmp
add
and
dec
pop
sub
xorb
and
add
mov
scas
out
cmp
mov
dec
loopne
add
add
mov
add
xor
out
or
push
out
push
add
xchg
add
jno
jmp
jmp
frstor
orb
mov
outsl
dec
movsb
inc
add
mov
or
or
add
and
enter
mov
add
add
add
jmp
add
add
add
inc
mov
xor
sub
push
add
jbe
out
or
repz
add
js
add
mov
add
imulb
dec
jmp
mov
mov
sahf
ljmp
add
jge
sub
add
jl
stos
pop
push
add
call
add
fimull
add
push
add
sahf
pop
add
rcr
xchg
aad
add
and
ljmp
in
inc
xchg
xor
or
add
add
and
add
add
dec
mov
pushf
jb
mov
inc
add
add
jbe
mov
popa
xchg
xor
sbb
add
sub
pop
mov
add
imul
movsb
addl
iret
fstpt
in
push
shr
push
in
add
sarl
scas
or
and
xchg
nop
aad
cwtl
push
add
in
sub
xor
movl
xor
sub
inc
jge
and
fnstcw
test
pop
add
add
add
pop
pop
add
sbb
mov
inc
add
add
xchg
fdivr
jmp
add
sbb
gs
dec
add
inc
mov
cmpsb
testb
mov
jno
aad
mov
lock
ljmp
add
add
push
fsubr
push
add
bound
orl
insb
add
testb
lea
cmpb
pop
add
mov
add
add
mov
call
das
and
nop
mov
sub
xchg
outsb
add
mov
add
xchg
xchg
mov
sub
mov
lret
gs
inc
xor
jno
ror
loop
add
sti
stos
imul
xchg
add
sub
sarb
cltd
dec
jne
jg
orl
add
fwait
sub
xchg
daa
sbb
fldenv
arpl
inc
add
add
cli
mov
cmp
mov
mov
add
js
test
cmc
pop
mov
add
jg
push
add
mov
addr16
stc
std
jne
add
daa
js
xor
fnstsw
mov
out
arpl
jns
add
sti
push
ss
fiaddl
pusha
add
and
inc
ret
call
xor
sbb
mull
jge
add
scas
stos
out
sbb
rorb
pop
mov
lret
jb
jge
cltd
outsl
xchg
and
nop
inc
add
add
cwtl
cmp
add
scas
pop
jne
jnp
add
mov
mov
mov
sbb
push
add
mov
in
and
lret
xor
and
add
in
xor
add
add
stc
iret
addr16
and
bound
popa
cwtl
stc
and
test
mov
mov
cmpl
add
xchg
dec
add
call
xchg
cld
inc
stc
add
sbb
pop
daa
or
dec
add
add
jno
mov
add
jbe
decb
xor
fistl
pusha
add
add
mov
das
imul
icebp
out
add
jo
mov
or
add
mov
add
lret
inc
enter
js
ljmp
dec
pop
add
cmp
shll
add
mov
cmp
cmp
cltd
out
scas
adc
mov
jecxz
clc
sbb
pusha
add
out
add
add
push
mov
sub
ljmp
data16
loopne
dec
add
scas
pusha
add
add
fld
stos
dec
add
testl
add
add
pop
andl
scas
xor
cmc
jmp
pop
push
add
add
mov
inc
pop
adc
add
mov
add
outsl
add
fldt
ret
mov
fwait
adc
loope
jo
sub
add
out
mov
add
mov
imul
add
mov
add
sbb
out
out
inc
lock
push
cmp
mov
flds
and
push
rcrl
mov
add
mov
pop
cmp
push
add
add
faddl
iret
jge
add
sub
les
int3
xchg
mov
sub
lds
les
mov
add
imul
movsl
push
add
add
add
inc
sub
cld
push
add
ljmp
mov
ficomps
xor
jmp
add
gs
mov
sub
add
mov
add
jp
mov
add
mov
push
add
pop
add
mov
add
int
aad
add
add
or
loop
aad
cmp
iret
pop
out
clc
xchg
orb
cltd
adc
pop
add
je
xchg
mov
add
movsb
xor
fs
aas
inc
add
mov
jl
call
add
cmp
add
enter
mov
sub
pop
lock
cltd
mov
es
enter
addr16
flds
aas
loopne
add
jo
push
add
add
add
add
call
jae
mov
add
imul
dec
outsb
add
sbb
stc
sub
inc
sub
add
mov
xchg
add
cmpsb
arpl
out
mov
push
add
or
add
mov
data16
les
inc
add
imulb
fsubrs
add
add
add
add
and
add
add
add
mov
add
flds
or
xor
push
add
aad
lret
inc
add
mov
sbbl
ljmp
add
mov
shll
mov
add
add
add
adc
imul
shlb
adc
in
sub
inc
add
inc
mov
das
push
push
add
mov
aas
mov
fwait
insl
inc
push
pop
sbb
inc
add
add
cmp
xor
xchg
add
xor
jno
push
jo
rorl
in
int
add
lea
add
cmp
pusha
add
ja
and
mov
es
mov
add
rorl
scas
cli
mov
insl
push
add
jb
xor
les
dec
add
cli
loopne
jbe
pop
neg
clc
xor
repnz
inc
test
testb
add
or
lods
add
add
sbb
shrb
add
adc
cmp
jge
mov
xor
pop
add
stos
outsl
inc
add
or
jns
add
add
add
in
jecxz
add
push
add
jecxz
jmp
cmp
aas
ret
or
push
sbb
in
lods
xchg
push
add
xor
add
xchg
pop
add
cli
popa
addr16
add
add
mov
data16
add
ja
scas
pop
out
cmp
cmp
test
mov
repz
add
push
add
pusha
add
add
sbb
outsl
adc
test
add
cwtl
loopne
das
adc
push
sahf
add
pusha
add
sub
dec
xchg
xor
das
pop
shr
mov
inc
add
sub
pop
add
xchg
cmp
test
inc
dec
add
and
rol
jge
add
idivl
xchg
loopnew
pop
mov
add
or
idiv
cmp
jge
or
add
xchg
jns
mov
fs
pop
add
add
sub
push
add
xchg
divl
push
add
add
add
add
repnz
mov
lcall
add
cmpsb
fistpl
jbe
arpl
outsb
add
cwtl
inc
dec
add
or
pop
add
xchg
sbb
test
xlat
jno
xchg
aas
jle
mov
add
fildll
or
pop
inc
add
mov
add
dec
add
inc
push
call
rcl
cmp
pop
pop
xchg
add
add
repz
daa
in
add
inc
jbe
mov
add
dec
loopne
mov
add
push
add
insb
add
cmpsb
pop
add
inc
add
jle
and
add
idivl
addl
add
add
mov
jge
test
add
mov
inc
jb
or
sub
cmp
sarb
add
testb
pop
add
in
adc
movsb
adc
stos
in
imul
xor
into
std
jbe
pop
add
xchg
add
fldl
add
dec
lret
add
scas
inc
add
adc
mov
add
mov
ljmp
add
sbb
xchg
pop
add
dec
imul
jp
fwait
dec
add
nop
sahf
jb
jp
repnz
inc
xchg
sub
out
jmp
add
fisubl
out
nop
xchg
inc
pop
hlt
pop
jmp
add
push
add
jae
pop
aad
xchg
add
sub
push
shr
rol
neg
sub
add
movsl
xchg
bt
add
in
add
or
xor
cmp
xor
or
fdivs
lret
add
fisubs
or
loope
xchg
lods
mov
pop
add
jmp
in
inc
add
add
and
jl
dec
add
lea
repz
add
add
fdivs
mov
add
mov
jb
add
ret
imul
mov
add
cmp
add
or
add
aam
add
rorb
adc
test
cltd
in
add
jne
mov
lcall
mov
repz
ja
fldl
add
movsb
aam
add
sbb
add
jbe
xor
jne
add
add
add
mov
iret
popa
nop
or
and
stos
in
adc
aam
add
out
call
add
add
shrl
add
in
sub
mov
add
push
mov
push
add
bound
inc
xchg
add
jno
icebp
fldl
cli
js
out
add
xchg
adc
scas
inc
add
mov
xchg
jnp
adc
inc
xchg
in
mov
add
mov
stc
adc
insb
add
add
mov
add
sub
add
xor
and
add
cmp
sub
cld
repnz
and
shl
notl
pop
add
sbb
fsubl
test
fsubrp
icebp
adc
add
ds
xchg
add
cltd
insl
mov
lods
lock
data16
lea
les
rorb
lcall
jb
mov
call
dec
add
test
rcll
das
out
mov
negl
add
in
inc
jmp
add
mov
stos
clc
mov
add
mov
pop
enter
test
and
insb
add
sbb
add
imul
into
inc
add
sbb
jb
xchg
xchg
mov
jecxz
movsb
inc
add
stos
xor
or
cltd
gs
add
iret
or
mov
add
adc
push
add
add
stos
lret
add
add
leave
incl
add
add
int
add
inc
add
mov
stos
adc
or
pop
add
orl
jmp
jl
aas
push
add
add
fidivrl
out
mov
add
add
jb
inc
stos
xlat
mov
add
dec
add
add
aaa
je
in
mov
jb
ret
jl
out
xor
mov
into
or
dec
je
enter
cltd
hlt
jae
mov
push
pop
out
add
stos
jmp
add
add
add
in
lds
les
add
mov
sub
xchg
push
add
ficoms
mov
cmpsl
mov
push
ljmp
add
add
push
add
add
add
mov
cwtl
lods
pop
add
data16
or
xor
in
sub
sti
insb
add
adc
cs
cld
mov
add
movsl
mov
mov
add
add
push
add
cli
out
or
stos
mov
pop
add
cwtl
cmc
fldcw
or
xor
xor
cmpsb
sahf
xchg
mov
or
aad
mov
add
add
outsl
int3
frstor
incl
jecxz
dec
add
lods
adc
add
push
add
add
roll
cmp
mov
add
xor
call
mov
xchg
sbb
movsl
sub
je
inc
andl
sbb
lds
pusha
add
add
aas
push
inc
pop
push
add
mov
add
add
pop
and
mov
sti
add
add
pushf
xlat
sub
mov
add
lock
cwtl
pop
js
lock
add
mov
std
in
add
rcr
loop
shrl
fldl
add
pop
scas
pop
add
adc
add
inc
add
add
lcall
cmp
and
add
cmp
and
shrb
int3
aaa
mov
mov
add
ljmp
mov
adc
cltd
test
cwtl
das
mov
add
add
add
mov
pop
aad
pop
add
or
es
gs
add
nop
pushf
filds
add
inc
lock
jns
jmp
add
nop
in
outsb
add
add
leave
pop
push
add
or
pop
sbb
mov
test
fldt
movsb
mov
mov
cmc
fs
outsl
les
pop
sbb
add
add
add
les
std
ret
je
nop
jnp
jge
or
dec
sub
stc
pop
mov
outsb
add
add
add
cmpsb
mov
dec
dec
add
test
inc
add
dec
add
inc
insl
jno
out
ljmp
sbb
xorb
bound
or
jmp
jp
hlt
in
shlb
jbe
mov
pop
add
fmuls
adc
fwait
insb
add
and
mov
xor
dec
add
test
sub
and
jl
cli
mov
add
aaa
dec
mov
adc
out
out
lea
add
push
add
lcall
scas
fwait
pop
add
add
adc
add
imul
jo
mov
add
mov
pop
cld
mov
out
pop
xorl
xor
add
out
scas
xchg
xor
lahf
xchg
ret
test
add
mov
mov
pop
add
jmp
and
add
adcl
jnp
shll
stos
mov
add
jnp
dec
iret
xchg
cmc
push
sub
inc
fwait
add
daa
add
fmul
dec
add
adc
fildl
xchg
subb
fstl
mov
mov
add
inc
add
xor
inc
add
sbb
push
adc
fwait
arpl
or
ficomps
sub
lahf
bnd
jle
adc
mov
cmp
push
add
adc
add
lahf
pop
cmpsb
cmp
imulb
add
and
inc
adc
add
cli
jmp
dec
aas
jno
add
xlat
fwait
sbb
repz
outsb
add
mov
pop
add
mov
add
add
pusha
add
push
add
add
cwtl
jle
adc
jne
add
out
cwtl
mov
inc
fwait
scas
add
jmp
test
js
mov
rorl
add
add
cmp
mov
mov
pop
cmp
jae
pop
add
scas
adc
daa
mov
test
ret
mov
pop
add
insb
add
adc
add
rcll
add
and
aad
or
pop
jnp
dec
add
dec
add
inc
add
add
jno
sbb
sub
clc
mov
add
dec
add
push
lds
in
add
shl
test
sub
add
jne
add
mov
xchg
inc
mov
add
in
add
adc
mov
add
int3
cwtl
push
add
fwait
mov
add
add
add
xor
add
push
shl
lret
mov
std
adc
cmp
outsb
add
mov
add
cmp
in
add
add
adc
fistl
rcr
adc
jb
das
fadds
and
sti
push
arpl
int3
cmp
or
les
add
int
cmp
add
sti
fisttpl
aas
mov
and
out
add
add
pop
push
insb
add
cltd
mov
test
add
out
jmp
into
clc
orl
add
repnz
add
cli
lock
and
loopne
add
xchg
inc
dec
sbb
dec
xor
push
add
add
add
dec
loopne
fmuls
cmc
out
adc
stos
xchg
jo
imul
das
or
sbb
mov
imul
add
lds
pop
add
add
popl
loope
scas
les
mov
jecxz
and
mov
add
add
add
jo
sahf
je
xchg
dec
add
leave
sub
pop
pop
add
fistpl
mov
push
add
mov
pop
addb
sbb
xor
ret
xor
test
insb
add
leave
je
mov
add
rolb
add
out
inc
xchg
jmp
in
mov
xchg
aad
add
test
fwait
and
mov
mov
shlb
test
fists
arpl
add
inc
sub
pop
add
mov
fnstcw
testb
add
add
sbb
add
add
cli
pushl
or
add
add
add
pop
add
xchg
lret
add
popa
out
push
jle
subl
xchg
dec
sbb
mov
mov
add
add
call
add
dec
add
add
in
adc
dec
add
add
or
gs
cmp
nop
add
and
sub
add
fldenv
cmp
aad
and
fistps
add
mov
add
shrb
insl
ret
dec
add
hlt
cmp
mov
leave
cmp
xlat
aas
dec
add
inc
cmpxchg8b
dec
mov
outsl
mov
push
add
mov
ret
xchg
fiadds
add
or
sti
xchg
jno
ja
inc
sbb
lcall
sahf
inc
add
cmp
xlat
scas
call
add
add
xor
or
cltd
sub
mov
mov
dec
cmp
sbb
ret
add
cmc
push
sub
pop
mov
add
ret
add
cmp
mov
xchg
stc
mov
add
in
loopne
loopne
xor
lock
add
add
imul
add
add
aaa
inc
jg
push
cmpsb
icebp
mov
xor
jnp
add
cmpsb
and
add
inc
lea
mov
add
add
xorl
add
jg
add
movsl
dec
mov
add
and
add
add
fisttps
add
mulb
pop
jg
add
fs
data16
add
pushf
inc
add
mov
pop
add
xchg
mull
add
add
xchg
fisttpl
adc
jle
cwtl
jbe
jns
add
cmc
cmp
adc
add
xor
dec
negb
add
int3
dec
add
mov
mov
pop
paddusw
xchg
bound
add
int3
jo
iret
fdivrs
xor
pop
dec
inc
add
icebp
cmc
and
pop
mov
xor
cld
mov
sahf
inc
add
dec
add
fidivrs
pop
sbb
adc
add
xor
aad
add
stos
mov
or
jbe
mov
int
stc
shrl
push
daa
pusha
add
sbbl
dec
lahf
aam
mov
mov
daa
insl
dec
lods
pop
add
add
xchg
fnsave
aaa
subb
jge
sbb
jle
je
sarl
and
add
push
jg
add
add
mov
cwtl
aaa
mov
and
mov
imul
clc
aad
add
or
fists
enter
fsubl
add
cmpb
xchg
mov
mov
add
lods
sti
clc
jg
add
popf
mov
movsb
cmp
mov
add
dec
add
pushf
stos
fstpl
mov
outsl
out
jbe
inc
add
adc
mov
add
jmp
add
test
add
icebp
sbb
push
add
repz
movsl
stos
sub
push
add
add
add
or
out
pop
jo
iret
mov
data16
int
add
mov
lock
cmp
add
jnp
add
cltd
sbb
push
add
add
add
add
add
push
test
clc
push
add
pusha
add
cwtl
dec
add
add
scas
and
pop
fistps
sahf
lcall
inc
add
add
sarl
add
jp
mov
gs
ds
xchg
add
push
add
sahf
test
add
pop
add
adc
faddl
mov
add
add
add
add
cwtl
or
xor
stos
adc
inc
inc
adc
nop
sahf
sbb
mov
add
or
arpl
add
insl
add
std
mov
dec
add
and
stc
mov
icebp
xor
push
add
inc
add
idivb
push
add
add
stos
xor
mov
add
xor
xlat
in
sbb
and
add
fsubrl
add
dec
cltd
jnp
adc
out
pop
lods
gs
jmp
andb
fisttps
or
clc
in
xchg
jmp
into
adc
add
dec
add
stos
rorl
add
add
jecxz
jb
dec
add
cmpsb
test
or
insl
mov
add
add
add
mov
inc
add
stos
repz
add
add
adc
push
add
add
mov
add
loopne
sarb
inc
add
lahf
enter
dec
jnp
pushf
sub
or
imul
ret
add
arpl
add
sbb
out
add
add
cli
jmp
out
mov
xor
sti
in
lcall
add
mov
aam
jp
jmp
add
jns
mov
arpl
add
icebp
stc
fistpl
xchg
lods
sar
jg
mov
stc
pop
popa
iret
sub
mov
add
sub
mov
inc
xchg
fimull
add
mov
stos
cmpsl
mov
iret
sbb
cmp
inc
add
push
add
out
push
mov
adc
insl
nop
aas
cmc
pop
mov
xchg
inc
add
add
dec
ljmp
shrl
push
add
adc
aaa
pop
nop
fwait
adcl
outsl
dec
aas
test
aaa
mov
dec
add
add
lds
mov
add
repnz
xor
mov
pusha
add
add
jne
xchg
inc
xor
add
jg
loopne
sbb
sahf
cmc
shll
add
test
push
wbinvd
xchg
xor
add
jns
mov
fsubr
mov
add
or
movsl
lods
sub
nop
leave
push
add
mov
ret
and
ret
test
sbb
or
mov
popf
cwtl
in
add
stos
push
add
add
dec
lods
in
and
stc
repz
add
add
add
sub
jo
sub
cli
cld
scas
loop
sbb
xchg
sti
dec
or
add
outsb
add
pushl
pop
mov
add
outsb
add
add
mov
mov
cmpsl
jbe
mov
add
loope
and
fadd
call
adc
ret
add
add
loopne
in
xorl
out
mov
mov
push
ljmp
add
dec
testb
scas
in
imul
mov
xor
in
testl
mov
in
mov
add
int
pop
iret
or
xchg
jne
fistpl
mov
enter
add
out
add
add
add
add
add
mov
lret
lods
push
add
mov
add
or
loop
xchg
pop
pop
xorl
cmp
or
add
add
hlt
cld
sub
hlt
pop
add
cmpsb
arpl
add
add
jge
enter
sbb
add
je
or
or
jns
lea
push
add
push
add
scas
out
add
add
add
fidivrl
add
cli
repnz
add
addb
loop
cmp
mov
loop
jne
sbb
and
and
mov
and
iret
lods
xor
fimull
add
shr
inc
sub
out
add
add
add
cmc
cwtl
jae
mov
fiadds
jecxz
sub
add
mov
push
add
add
add
cltd
add
jns
fdivrs
lret
mov
adc
and
xor
insb
add
adc
mov
sahf
add
fwait
and
imull
add
or
rcl
or
dec
sahf
mov
add
add
in
add
mov
pop
aad
repz
int
add
out
add
fdiv
ljmp
add
add
repz
add
fcomip
mov
xchg
pusha
add
mov
adc
cmc
fnstcw
push
push
add
test
jl
pop
insl
cli
lahf
cwtl
hlt
test
shl
shl
clc
icebp
cmpb
add
cltd
loopne
xor
or
xor
sbb
fwait
mov
es
jnp
xchg
adc
add
add
add
pop
mov
mov
fsubl
add
xor
mov
stc
mov
fs
test
jns
push
add
mov
add
dec
mov
notl
repz
add
add
icebp
insl
push
cmp
xchg
xchg
bswap
jae
add
add
add
dec
add
into
out
xor
cld
ljmp
dec
int3
xchg
sbb
cmc
push
add
or
mov
push
adc
xor
movsl
mov
and
mov
sub
movsb
sar
jl
lock
and
out
sbb
sbb
inc
dec
add
jne
add
cmp
dec
imul
add
sub
loopne
pop
push
add
imul
inc
jl
fdivrs
add
add
sub
inc
loop
inc
int
shlb
add
leave
xlat
adc
jle
mov
mov
add
dec
xchg
pop
xchg
out
mov
add
mov
in
in
in
add
sub
dec
add
sub
cltd
sub
pushf
neg
pop
and
add
inc
arpl
add
les
add
ret
loop
inc
aad
add
add
pop
data16
add
dec
int3
xor
hlt
ret
cmpsl
popf
insl
pushf
movsl
mov
cmpsl
xor
xor
fdivp
xchg
xorl
in
cmc
mov
lds
mov
add
pop
add
adc
lret
xor
adc
adc
adc
jae
add
add
mov
push
add
add
add
pop
jl
jecxz
jae
add
lcall
add
add
cmpsl
scas
andl
test
jmp
sbbl
xchg
ret
add
hlt
scas
sti
in
jl
data16
add
and
cli
incl
add
add
push
add
jl
xchg
fcomps
push
add
dec
add
sub
gs
mov
out
outsl
add
lret
imul
scas
xchg
psrlw
aas
mov
add
add
aad
add
add
sbb
dec
add
jns
inc
mov
xchg
xor
repz
in
je
test
mov
push
add
pop
add
or
inc
add
scas
inc
in
adc
jb
movsl
into
mov
sbb
mov
loopne
cmpb
add
outsb
add
add
xchg
lcall
int3
shl
daa
cmp
adc
adc
mov
nop
adc
add
xor
add
inc
add
int
out
lret
sbb
sbb
mov
lods
dec
add
or
stos
sub
lock
xchg
sbb
sahf
movsl
lds
scas
shlb
mov
movsl
fbld
or
jle
jl
cmp
pop
xor
mov
fnstsw
sarb
sub
jne
mov
sub
or
push
add
jbe
jg
stc
push
add
imul
mov
add
add
add
imul
rclb
add
mov
aam
add
js
je
ljmp
mov
add
clc
mov
cmpsl
scas
sbb
push
add
add
pusha
add
cli
adc
data16
pop
add
test
rorl
jnp
add
mov
xchg
fwait
iret
add
add
add
fstps
clc
and
add
jae
add
sti
insl
movl
out
add
outsl
rclb
mov
cmp
test
rclb
push
add
popf
ret
mov
jg
add
test
cwtl
rorl
push
je
push
add
mov
sbb
sbb
test
lret
into
inc
add
daa
push
add
fadd
hlt
insl
inc
add
add
sti
leave
icebp
mov
lods
add
jle
cmpsl
sbb
and
mov
add
ret
pop
add
ljmp
add
pop
out
add
jae
jb
push
add
push
add
push
add
fwait
sbbb
repnz
add
aad
mov
xor
add
inc
add
and
add
sbb
jo
and
cld
inc
add
or
lret
add
add
imul
dec
mov
add
cmp
jne
add
repz
pusha
add
add
push
push
add
repz
ljmp
add
xchg
imul
add
cmp
push
add
add
dec
add
inc
add
mov
les
lahf
and
or
loope
add
cmp
hlt
pop
or
repnz
pop
dec
and
inc
cmc
xchg
and
shlb
shrb
bound
dec
add
gs
lret
hlt
push
add
mov
dec
add
push
stos
push
add
mov
mov
repnz
mov
gs
jmp
and
push
jno
test
add
cvtdq2ps
mov
add
fwait
mov
adc
add
lods
test
adc
pop
add
shrb
pop
or
sbbl
sub
jne
rcr
push
mov
add
dec
sbb
std
lahf
fsubl
mov
ror
test
add
xor
cmp
push
add
xchg
push
push
add
add
add
add
add
adc
mov
add
xchg
call
xchg
adc
mov
cwtl
enter
and
inc
add
add
dec
add
add
mov
add
cmpb
mov
mov
mov
icebp
push
addr16
pop
adc
inc
jl
sub
lret
jae
stos
add
add
daa
sub
mov
add
jecxz
add
shrb
add
add
pop
outsl
fmuls
push
add
mov
add
sbb
clc
fwait
mov
jecxz
hlt
push
out
test
add
cli
add
stc
loop
add
xor
dec
add
lock
add
lods
pushf
add
lret
add
shufps
or
jns
dec
add
push
add
add
sub
mov
popa
test
cmp
cmc
pusha
add
dec
add
ljmp
sub
pushf
xchg
cmp
call
jbe
dec
add
nop
inc
and
repz
ret
adc
inc
add
jnp
pop
mov
subl
testl
xchg
in
xor
inc
add
add
fdecstp
and
bound
loopne
addr16
sub
cwtl
xchg
or
jbe
adc
sbb
je
leave
sub
xchg
xor
test
daa
dec
stc
out
add
nop
pop
add
cmp
push
add
add
xchg
dec
add
jne
xchg
mov
sub
mov
jbe
sbb
std
mov
add
cmp
mov
add
fmull
mov
add
add
add
out
adc
or
inc
add
fistpll
fimuls
jmp
insl
inc
pop
add
ds
scas
push
inc
lcall
push
add
add
jecxz
add
ficoms
filds
mov
je
ljmp
scas
call
add
add
and
jo
inc
add
pusha
add
sbb
add
add
add
dec
add
lcall
pop
roll
mov
mov
add
add
sub
pop
add
push
add
js
sbb
mov
sub
add
and
add
fisubrl
xchg
daa
invd
add
jbe
dec
add
cmp
fmull
out
adc
jmp
jb
imul
in
adc
xor
fdivs
add
cmp
mov
mov
in
mov
in
pop
add
into
or
data16
lahf
inc
rcrl
dec
add
andl
cmp
ja
inc
dec
roll
scas
fimull
dec
pop
in
pop
cmp
add
andl
mov
add
nop
jecxz
hlt
mov
rcrl
add
sub
xchg
pop
into
ret
in
push
add
push
add
popa
jge
add
add
xchg
add
adc
imul
mov
jbe
hlt
loopne
push
add
add
dec
pop
dec
and
imul
test
pusha
add
xor
imul
jp
movsl
or
add
add
push
add
jbe
jbe
push
add
add
mov
ret
add
jp
push
mov
and
or
pushf
lret
jle
push
add
pop
bound
sarb
add
lock
or
out
dec
jnp
xchg
and
add
add
jl
repz
sarb
testl
mov
lahf
mov
or
test
stos
sub
js
fwait
add
mov
add
loopne
ret
or
pop
add
sub
test
mov
mov
add
push
add
int3
mov
iret
mov
add
add
add
or
mov
jecxz
cs
xchg
or
add
push
mov
in
jmp
xchg
sbb
xor
aas
xor
add
rolb
lea
adc
test
add
add
add
add
jb
sbb
add
jmp
ret
add
push
aad
add
andl
add
aaa
mov
jle
sbb
pop
add
imul
xchg
ljmp
bound
add
imul
push
add
push
add
cwtl
sbb
inc
add
add
add
inc
add
add
mov
insb
add
stos
xchg
pop
add
outsl
jge
mov
or
stos
fdivrl
sbb
push
add
add
add
sti
push
cmpsl
imul
popa
cmpsb
sbb
pop
add
pushf
mov
rcl
pop
add
add
jne
add
xchg
mov
adcb
mov
jo
pop
addr16
add
icebp
repnz
stos
and
add
add
add
imul
push
add
add
jnp
xor
inc
add
or
lds
sub
roll
add
add
xor
adc
mov
int3
jns
jecxz
add
xor
mov
iret
jl
jp
insl
push
add
xchg
push
add
add
sub
xchg
dec
add
and
inc
add
and
push
add
test
add
adc
add
pcmpeqb
fwait
pop
das
and
sahf
insb
add
add
xchg
sub
test
mov
add
pop
xor
add
mov
sub
insl
ret
lds
pop
add
add
inc
sub
nop
jmp
inc
sub
mov
add
or
cmp
pop
push
add
mov
lret
add
xchg
rcrl
addr16
orl
in
repz
aas
add
js
jl
or
repnz
sub
pop
mov
xlat
lock
mov
and
pop
add
dec
add
xor
icebp
pop
gs
lcall
mov
nop
add
add
add
stos
add
add
mov
add
arpl
sub
pop
add
xor
add
jb
xor
adc
pop
cmp
stc
lods
jge
xchg
loopne
pop
orb
inc
and
lret
xlat
and
xchg
add
cmp
fnstsw
add
mov
pop
add
mov
mov
add
add
out
cmpsl
test
movsl
pushf
push
add
aad
sbb
add
add
cmp
mov
in
mov
jae
insl
clc
mov
or
cltd
ja
add
add
pop
push
add
add
add
test
add
jno
movsl
add
add
js
imul
loope
push
add
cli
sbb
pusha
add
mov
test
fstps
ja
sbb
pop
add
inc
sub
int3
pop
sub
movsl
pop
add
fbld
gs
test
jbe
in
add
dec
pop
add
fcmovu
movsb
lods
inc
add
push
add
or
or
push
dec
add
xchg
cmp
cmpsl
and
sub
dec
or
add
cmpsb
lds
add
mov
mov
add
push
add
cmp
insl
push
add
out
sbb
stos
out
dec
jp
adc
jo
ret
add
femms
add
xor
rcrb
repz
cmp
outsl
repz
rol
dec
cmp
cmp
xchg
ljmp
add
in
jp
out
cmp
mov
add
add
cli
add
hlt
int
sar
dec
push
add
cmp
and
add
outsl
lret
jne
data16
adc
je
adc
insl
pop
add
add
jl
cmp
dec
movsb
pop
cwtl
xchg
pushf
pushf
lret
mov
rclb
add
add
push
add
mov
add
pop
add
and
imul
sub
je
xchg
ljmp
mov
mov
icebp
or
out
xchg
push
jo
mov
js
icebp
push
pop
sub
bound
jl
lods
mov
fidivrs
les
sub
es
jns
test
repnz
sub
and
dec
add
filds
add
jg
push
mov
hlt
add
dec
jbe
sub
adc
inc
in
add
dec
outsl
or
ret
cmpsl
add
cmp
jp
xchg
add
inc
jb
pop
fstl
cmpb
and
popf
jge
add
test
insb
add
scas
jbe
jg
add
add
pop
mov
lds
lock
lahf
jno
mov
jmp
add
adc
push
add
add
into
xor
or
mov
or
add
dec
xor
js
push
add
mov
push
push
add
outsb
add
repz
cmc
mov
push
add
add
sub
inc
dec
mov
fldl
add
add
add
test
inc
loop
sbb
je
leave
adcl
mov
adc
mov
shll
xchg
inc
gs
dec
add
add
js
adc
push
punpckhbw
add
jns
cs
stos
and
xchg
mov
add
insl
sbb
fcoms
addl
push
add
push
outsb
add
adc
aam
add
jp
std
adc
cwtl
out
adc
add
push
jns
decb
mov
add
add
in
add
test
out
ljmp
jne
mov
push
imulb
stos
iret
add
inc
add
inc
add
inc
mov
add
push
add
mulb
icebp
cli
jb
adc
push
xchg
out
adc
hlt
addl
and
aad
push
mov
add
repz
mov
or
or
jb
inc
add
jae
inc
add
fs
inc
popa
jns
xor
inc
add
inc
add
cmpsb
std
sbb
cmp
out
mov
sbb
nop
mov
dec
add
lods
sbb
dec
xchg
gs
leave
mov
mov
mov
aas
jbe
inc
das
push
arpl
dec
add
in
dec
xchg
dec
add
xchg
and
add
mov
outsb
add
mov
add
add
mov
cmp
mov
add
ret
cmp
mov
add
out
cltd
in
add
or
add
add
xchg
popa
aad
bnd
icebp
je
pop
outsl
sbb
xor
cmp
and
jle
cmp
icebp
out
sub
cmp
in
fisttpll
fnsave
or
pop
addr16
add
add
jno
test
push
add
cli
gs
mov
add
movsb
add
cli
dec
jl
out
or
jg
mov
adc
in
mov
sub
add
rorl
add
add
add
jbe
mov
push
add
es
test
rcll
xchg
loop
repnz
add
add
insb
add
add
jns
popf
dec
add
pop
add
add
sub
pop
lods
xchg
adc
dec
insl
mov
cli
add
mov
in
jge
add
mov
cli
adc
mov
add
jmp
sub
les
xchg
add
pusha
add
insl
inc
mov
enter
add
mov
test
iret
xchg
xchg
loop
outsl
repnz
add
cmp
jecxz
add
push
add
outsb
add
sub
cwtl
insb
add
and
scas
xchg
xchg
in
inc
add
add
xor
ja
xor
add
add
mov
cmp
out
xor
test
add
mov
mov
cmpsb
jecxz
ja
cmp
mov
lret
push
add
repnz
add
int3
loop
cmp
cmp
aas
mov
sahf
arpl
mov
mov
xchg
pop
push
pop
push
add
icebp
test
add
scas
jmp
aas
mov
jg
and
sbbl
mov
add
dec
add
jae
add
add
add
jae
xchg
pop
add
xchg
mov
lods
aas
push
cmp
sub
push
jle
ret
push
inc
in
sahf
addr16
mov
mov
popf
or
xor
xor
inc
add
jnp
test
cmpsb
mov
pop
add
add
add
rcpps
daa
pop
inc
pushl
xchg
insl
loopne
add
cltd
xchg
mov
stc
xchg
clc
add
push
add
mov
sbb
push
add
adc
jecxz
add
stos
aam
add
add
xchg
dec
or
add
cltd
sbbb
add
mov
loope
add
clc
data16
pop
testl
sbbb
push
add
add
add
jbe
add
fcoms
stc
and
sbb
add
mov
add
add
jnp
pop
and
add
xor
add
add
jl
rcll
add
add
inc
add
int3
dec
add
add
xor
mov
add
mov
jns
mov
add
sub
add
ret
mov
jbe
and
inc
shr
pusha
add
add
clc
jb
add
sbb
mov
pop
add
out
lea
or
push
dec
add
pop
add
push
add
xchg
dec
add
dec
add
jp
stos
int3
aad
add
adc
repnz
sub
jno
gs
add
and
push
add
stos
or
add
push
add
add
mov
xor
call
xchg
fisubl
mov
sahf
and
xchg
dec
push
add
fnsave
lea
fmuls
leave
add
sbb
adc
dec
add
daa
fcmovbe
pxor
lahf
hlt
and
in
add
jmp
int
sub
movl
inc
dec
add
test
sti
mov
movb
pop
add
mov
add
add
xchg
jo
pusha
add
inc
add
push
add
xchg
aam
fidivrl
inc
jnp
out
pop
lods
sub
sub
mov
cltd
fidivrs
das
mov
in
xor
or
repz
cmp
hlt
pusha
add
mov
dec
add
and
or
ficoml
mov
inc
add
out
icebp
and
inc
cmpsb
sub
lcall
decl
sbb
push
add
out
pop
add
loope
aad
add
cld
aas
jge
outsl
mov
lock
add
push
add
add
push
add
and
add
mov
aas
mov
add
dec
mov
adc
sub
mov
aam
arpl
sti
push
pushl
leave
add
int3
jmp
add
add
add
test
jo
jnp
dec
test
fnstenv
add
xor
call
add
add
adc
push
add
jmp
jmp
imul
xchg
mov
sbb
dec
addl
add
mov
loope
test
mov
jb
pop
call
add
and
xor
cmp
add
andb
dec
add
add
add
push
add
xor
and
xchg
add
mov
add
lods
into
xor
mov
mov
add
dec
test
cli
outsl
push
add
add
pop
add
addl
fwait
sub
cmp
jno
jl
mov
inc
pop
movsl
int
lods
pop
mov
adc
data16
in
and
jge
xchg
push
pop
lea
sub
lods
out
sub
jle
ror
add
add
add
movsl
sbb
add
sub
pop
add
cmp
inc
add
add
add
add
sbb
add
clc
rcrl
dec
add
adc
xchg
xchg
push
add
call
ret
and
jo
and
sbb
lock
or
and
mov
lret
adc
jmp
pop
xor
cmpsl
or
adcb
enter
fisttps
add
cmp
add
add
cmp
push
fisttps
dec
add
add
js
xchg
add
push
bound
mov
pusha
add
flds
ret
push
add
je
cmp
cwtl
jge
inc
imul
sub
cwtl
in
push
add
add
call
pop
add
add
jns
add
ljmp
data16
add
aaa
out
fidivrs
pop
or
jbe
xor
xsha1
cmpsb
or
xchg
mov
repnz
jge
and
jg
add
push
add
adc
mov
push
add
add
cmp
sti
cmp
add
out
jno
add
pusha
add
sarb
mov
and
jnp
add
ffree
je
cld
lcall
add
add
jle
cmp
and
mov
xor
add
lea
dec
jnp
dec
add
popa
xchg
scas
adc
sahf
inc
push
add
rcrl
nop
std
fwait
pop
test
jmp
add
add
mov
mov
add
sbb
rcrb
js
sub
repz
xor
add
cwtl
or
add
xchg
push
add
lds
out
and
cld
loop
sub
setae
cmp
in
pop
add
add
dec
add
add
add
cltd
filds
xor
mov
mov
ljmp
lods
roll
movsb
inc
add
xchg
pop
jp
sub
leave
test
xchg
mov
add
arpl
add
and
sahf
enter
push
add
add
add
xchg
movsl
push
add
mov
add
pop
sub
sbb
leave
sub
add
add
add
push
pushf
sub
add
add
shl
cmp
xor
add
sub
ljmp
add
cwtl
mov
jg
pushf
call
add
add
xor
daa
in
pop
add
jge
add
add
test
sub
fucom
or
pop
cltd
lcall
cs
cmp
and
scas
adc
pop
movsl
push
fcoml
dec
add
lret
mov
in
xchg
add
sahf
mov
lcall
std
lcall
lock
sub
jo
jnp
or
or
cmovg
adc
add
mov
lcall
add
add
sub
xorl
dec
inc
add
add
stc
jno
lds
rol
iret
inc
orl
lcall
add
fcompl
add
cli
mov
cmp
jg
jmp
add
test
and
add
insb
add
jecxz
cmp
lahf
fdivl
sysret
cmp
or
push
test
jnp
fabs
or
sbb
mov
add
add
xchg
imul
insb
add
xchg
aas
add
add
insb
add
dec
addl
mov
or
pop
lods
loope
into
pop
jae
sti
cmp
push
add
adcb
sub
fldcw
pop
add
push
fildll
cmp
pop
add
mov
shll
sbb
push
cmc
mov
add
add
int3
or
arpl
add
adc
icebp
shl
add
lret
mov
cli
xchg
stc
ret
xchg
and
shr
lea
add
add
adc
cmpsl
add
add
add
lods
loopne
cmpsb
xor
cmp
in
sub
add
add
add
cmc
add
add
add
add
outsl
cltd
lcall
add
add
cmpsb
ds
movsb
or
out
xchg
mov
add
add
add
adc
and
sub
rcl
add
mov
xchg
add
je
or
push
pop
fstl
std
dec
sbb
lcall
xchg
subb
jmp
add
into
adc
xor
inc
mov
push
add
add
add
ljmp
pop
add
xorl
stos
cmp
repnz
add
loopne
add
loopnew
repz
add
pop
sbb
std
xor
push
add
sbb
add
add
add
mov
outsl
scas
arpl
and
fisubrl
mov
xor
pusha
add
jmp
addr16
test
add
nop
mov
ret
add
sbb
repnz
add
test
add
inc
add
xor
push
pushf
xchg
nop
or
loopne
xchg
jg
add
add
andl
mov
mov
pop
dec
mov
pop
mov
bound
cmpeqps
outsb
add
cmpsl
mov
fs
and
jbe
cltd
arpl
cs
int3
jbe
push
add
and
js
imul
mov
loop
or
push
add
add
add
mov
add
mov
cmp
xchg
fbstp
push
je
cmpsb
decb
add
ja
mov
roll
add
add
into
and
repnz
je
ret
add
xchg
xchg
sbb
jno
xor
add
repz
data16
cld
cmp
xchg
sub
jno
fadds
xor
mov
add
in
in
dec
add
loop
jp
and
adc
cld
int3
xor
rcl
mov
add
and
xchg
and
lods
pop
sub
fiaddl
cli
and
push
mov
hlt
shlb
add
xchg
arpl
push
and
fistps
push
pmulhuw
mov
add
inc
add
mov
outsl
cltd
roll
lds
add
add
or
aam
add
add
add
add
pop
pop
rcll
mov
lods
cmp
xor
mov
adc
dec
add
add
add
adc
or
repnz
daa
adc
or
sbb
nop
out
add
pusha
add
jl
flds
sbb
cmp
mov
movsb
push
add
fimull
add
sahf
popa
pop
add
pop
cmp
push
add
add
and
out
roll
and
or
stc
fwait
add
sub
insl
movsb
loope
adc
out
stos
js
fwait
push
repz
cmp
filds
add
arpl
and
mov
add
enter
add
fsub
cwtl
repz
lock
dec
cmp
push
and
pop
xchg
aas
out
push
mov
in
mov
pop
jecxz
add
std
push
jg
dec
inc
add
dec
sti
dec
sbb
mov
add
mov
add
add
nop
jnp
add
xchg
jno
xor
mov
insb
add
xor
js
add
and
mov
aam
mov
lds
les
stc
jmp
insl
jbe
add
add
roll
inc
test
sub
sbb
repz
aad
cltd
mov
add
push
mov
xchg
add
js
pop
add
fstpl
add
xchg
lods
sbb
nop
repz
mov
ret
jge
inc
inc
or
pop
jge
inc
mov
add
push
inc
add
add
or
xchg
mov
dec
add
test
add
loopne
filds
bound
addr16
push
xchg
call
add
mov
add
addb
and
cmp
cmp
jecxz
xor
call
sbb
jno
add
adc
test
inc
adc
mov
add
and
mov
inc
add
add
sub
add
lods
sub
int3
inc
rcrb
imul
xchg
add
add
sahf
xlat
cmp
pusha
add
mov
add
add
push
add
inc
xor
loop
pop
sahf
jb
icebp
jl
int3
iret
aam
mov
pop
add
add
pusha
add
and
add
adc
pop
bound
scas
pushf
stc
push
add
add
movsl
push
mov
push
add
or
mov
imul
push
push
add
sahf
add
and
scas
dec
dec
fistpl
test
mov
movsl
sbb
pop
subl
and
sub
pop
pop
xchg
or
mov
ss
rcrb
loop
sti
cmp
in
pushf
mov
xchg
mov
add
add
scas
sbb
fwait
daa
popa
add
adc
and
sub
add
sbb
cmp
mov
add
inc
add
add
add
add
adc
call
push
bound
lock
add
ret
mov
pop
cld
pop
add
in
jl
rcr
imul
add
icebp
jnp
addr16
push
add
add
lret
cmp
ret
mov
push
add
pop
pop
popa
addr16
int3
icebp
dec
add
iret
test
push
insb
add
add
add
in
mov
push
bound
jl
or
ss
inc
lahf
repnz
sbb
js
xor
mov
mov
mull
scas
dec
and
add
lret
add
mov
pop
lea
fiaddl
pop
add
sbb
push
add
mov
faddl
pop
inc
add
add
add
add
sar
sub
add
imul
in
add
pushf
xor
jb
bound
mov
fcoml
iret
in
jg
int3
insb
add
mov
lods
faddp
inc
add
xchg
jge
jge
add
xchg
cli
cli
xor
jmp
aaa
out
rcrl
inc
ficomps
mov
jno
jmp
ficoml
cs
mov
ds
jecxz
add
adc
mov
out
inc
jae
test
xchg
add
adc
test
fdivl
dec
add
add
scas
mov
push
add
in
push
add
push
add
adc
cmpsl
dec
add
xor
jecxz
add
push
add
data16
cmpsl
popf
scas
jnp
xor
jmp
outsb
add
notl
jbe
adc
test
and
or
leave
outsl
jmp
or
shrb
icebp
outsb
add
je
outsb
add
push
xor
clc
lds
mov
add
mov
test
movsl
pop
jno
into
jle
adc
stc
mov
cs
pop
pop
je
sti
mov
cld
jmp
jg
add
push
inc
outsb
add
add
pop
movsl
fnsave
mov
gs
movsb
test
movsb
sarl
inc
jp
shlb
outsb
add
add
cs
subl
rclb
mov
sbb
mov
add
add
int
cmp
xchg
pop
add
dec
and
xchg
dec
add
das
or
out
mov
into
sub
xchg
mov
or
pop
add
add
mov
sbb
jmp
pushf
jg
xor
dec
add
jp
inc
add
lds
jg
cli
test
stos
mov
sbb
mov
scas
add
sbb
push
add
in
or
dec
add
push
or
rcrb
arpl
sti
cmp
mov
sub
jno
pop
push
or
cmp
test
jne
adcl
rcrl
adc
cwtl
pop
add
mov
pushf
push
hlt
popa
sbb
and
out
test
fcmovne
add
cmpsb
jg
add
xchg
push
pop
or
add
add
out
pop
lcall
mov
fs
adc
es
pop
test
add
mov
pusha
add
pop
aam
loop
add
test
add
shrb
outsl
mov
jae
sbb
cld
add
test
sbb
push
sbb
pop
arpl
add
and
add
inc
pop
add
cmpsb
jl
stc
adc
add
js
add
add
jns
enter
mov
inc
xor
add
add
add
out
pop
add
mov
jle
fcmovnu
push
mov
ret
cmc
loop
and
add
adc
data16
sub
das
stos
xchg
jmp
add
add
jp
push
outsb
add
xchg
or
jbe
dec
add
xor
add
dec
decb
and
push
enter
add
jg
add
xor
out
je
xor
xor
pushf
cmp
mov
jns
bnd
mov
jl
imul
add
add
or
ljmp
sub
dec
pop
loope
xchg
pop
mov
inc
mov
aas
xor
scas
movsl
inc
add
mov
loope
add
add
or
sbb
imul
scas
popf
repz
inc
add
mov
jae
outsb
add
add
add
sbb
in
push
lcall
cli
mov
add
inc
add
imul
add
add
imul
add
add
xlat
push
add
inc
add
add
imul
xchg
add
add
cmp
jns
adc
mov
loop
xchg
and
and
pop
lea
call
mov
add
jns
fldcw
or
lcall
rcrl
add
rol
mov
mov
add
cmp
fisubrs
jle
stos
add
jns
mov
sbb
rorl
add
add
push
add
mov
inc
add
sub
sub
cmpsl
outsb
add
add
mov
mov
arpl
outsl
sbb
je
cmp
xor
add
push
add
jnp
xlat
lret
sub
aam
pop
add
mov
aad
sub
in
add
add
add
mov
orb
add
pusha
add
jl
mov
add
add
push
andl
mov
add
mov
adc
add
lods
fwait
or
sbb
sub
sub
add
adc
xor
lret
ret
add
or
jg
lahf
icebp
mov
mov
das
add
xchg
mov
loop
pusha
add
or
mov
loope
mov
lcall
adc
add
popf
jmp
sbb
sti
mov
mov
out
stos
shl
add
pop
mov
inc
and
push
add
add
dec
call
mov
add
and
push
add
add
sub
cli
mov
add
push
add
add
fnstsw
add
adc
cmp
movl
sbb
jle
dec
jns
in
and
in
nop
pop
add
add
or
mov
add
xchg
outsb
add
in
and
cld
push
add
imul
scas
mov
mov
push
xchg
mov
add
xor
add
cmp
test
cltd
and
push
add
add
push
add
fwait
mov
add
push
add
add
je
xor
and
testl
sti
shll
lahf
call
aaa
mov
add
or
rcrb
loopne
mov
add
add
add
mov
jne
repnz
arpl
ljmp
push
add
add
xor
insl
jbe
lahf
in
loop
data16
movsb
dec
push
test
dec
add
cmpsb
mov
shll
add
int
jbe
mov
add
add
cmpsl
enter
add
add
push
add
sbb
jp
adc
mov
mov
or
mov
aad
and
add
inc
aas
faddl
ja
add
imul
ret
inc
pushf
ret
fists
and
rcr
mov
mov
add
mov
jmp
lcall
push
xchg
fwait
lds
idivl
add
mov
xchg
add
cmp
inc
add
cmpsl
ret
add
add
fistpll
inc
add
popa
and
rcrb
push
add
sarl
add
jmp
push
add
idivb
js
fidivrl
sbb
jne
xor
mov
push
add
dec
add
int3
scas
insl
andl
pop
fiadds
mov
ret
or
xor
mov
movsl
cmp
add
clc
add
jbe
insl
jl
test
xor
cmc
lcall
mov
lods
filds
loope
add
int3
jbe
xchg
xchg
sbb
dec
sbb
fstpl
add
add
add
add
mov
les
add
aam
mov
add
scas
xchg
pop
add
dec
and
lds
xor
out
dec
add
leave
shlb
vpaddd
vpshufd
xchg
cmp
shrb
cmpsl
lea
add
je
lock
jle
xchg
xchg
sarb
add
lods
jne
pminsw
std
out
fisubl
sbbb
mov
add
add
add
flds
popa
and
pop
fwait
or
into
pop
imul
stos
mov
ret
add
repnz
dec
popa
outsb
add
add
add
add
add
add
repz
imul
gs
add
inc
add
mov
add
add
cwtl
sbb
dec
mov
adc
stos
mov
xor
testl
add
fwait
adc
or
adc
xlat
ret
addl
add
add
fisubl
push
add
rorl
jno
dec
rorl
or
lods
popa
stos
iret
and
pop
add
add
add
mov
add
dec
add
and
mov
or
dec
les
add
mov
das
mov
mov
add
faddl
add
mov
add
and
js
sub
add
rcrl
xor
add
lods
int3
call
xor
mov
sub
dec
add
add
sub
pop
add
out
mov
add
add
jno
loope
rorb
mov
stc
inc
jmp
cmp
pop
add
add
or
fsts
test
add
cmp
jo
add
or
add
sub
jb
js
insb
add
add
movsb
icebp
clc
sahf
jns
add
addr16
inc
lock
adc
add
pop
add
lods
sbb
or
pop
fstp
aam
add
rcrb
cmpsb
mov
and
inc
add
xor
add
adc
add
aam
add
insl
outsl
pop
or
and
cmc
xchg
ds
test
lret
jecxz
add
add
das
jb
adc
jb
mov
cmpsl
das
jmp
add
xchg
or
nop
loop
mov
jle
dec
mov
add
adc
cmp
pop
lahf
out
out
sub
adc
xlat
lret
or
jle
leave
sbb
insb
add
push
add
stos
sbbb
outsb
add
or
pop
add
js
xchg
pop
add
test
cmpsl
pop
adc
dec
add
add
sub
jge
sbb
and
xchg
ss
fisubrl
add
add
xor
add
jecxz
add
ljmp
shlb
mov
scas
das
testl
sub
pushf
mov
add
adc
xor
cltd
hlt
in
mov
add
mov
lret
icebp
fisttpl
sub
scas
xchg
sbb
jo
mov
mov
mov
icebp
in
jo
and
or
and
pop
lret
adc
pop
pop
jno
or
or
ljmp
add
add
and
adc
cmp
int3
icebp
xchg
andb
push
xor
inc
add
xchg
inc
add
add
stos
cmp
aad
xchg
out
repnz
add
add
inc
dec
scas
push
add
xor
pop
and
mov
push
add
fwait
or
pop
pushf
add
jge
adc
stos
cmp
xor
add
sbb
add
xor
call
leave
lret
add
repz
faddp
into
xor
test
add
popa
insb
add
mov
add
cli
shrb
add
add
cli
adc
enter
mov
jb
jae
add
xor
xor
inc
ljmp
pop
add
mov
fucomp
cld
inc
push
add
add
add
stos
mov
outsb
add
add
add
add
pop
hlt
pop
inc
add
xor
mov
ror
stos
sar
pop
inc
fidivs
xor
out
ret
mov
add
cli
loop
icebp
inc
cmpsb
aad
in
ja
pop
add
and
add
add
movsl
imul
