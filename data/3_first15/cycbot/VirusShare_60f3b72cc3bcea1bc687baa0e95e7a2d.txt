lret
dec
pop
sub
loope
vpsllq
outsb
push
add
push
add
mov
movsb
decl
add
sbb
addb
xchg
fcmovnbe
testb
push
test
sub
sbb
mov
mov
cwtl
push
jo
mov
add
push
addb
stos
mov
das
fxch
xor
mov
cmp
lods
mov
test
aaa
mov
add
mov
in
popf
mov
add
mov
and
mov
mov
stos
xchg
sub
or
cli
outsl
lods
in
mov
xor
cmp
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
flds
push
mov
sub
addb
out
fidivl
in
fnsave
lcall
sbb
icebp
adc
cmp
or
insb
aam
adc
mov
xchg
or
dec
popf
ja
lods
pop
jmp
mov
je
add
lret
mov
dec
rolb
mov
add
jge
add
dec
mov
mov
add
push
and
fidivrs
ljmp
xorl
lcall
cmp
dec
sub
mov
ds
cmpsb
mov
mov
pop
pop
sbb
add
ljmp
ficoml
out
pop
xchg
iret
push
testl
add
mov
sbb
push
add
dec
cmp
xchg
jne
sub
add
clc
dec
addr16
lods
nop
add
mov
mov
mov
loop
mov
sbb
add
add
pop
xor
push
insb
jecxz
mov
mov
aaa
xchg
sub
mov
xchg
and
mov
push
add
lret
mov
jns
clc
in
cmp
adc
adc
hlt
aas
push
xor
ret
cmp
add
repz
int
inc
xorl
call
mov
mov
out
inc
push
add
jne
mov
mov
ret
inc
add
mov
dec
mov
jns
insl
push
jnp
push
adc
mov
jnp
inc
nop
add
cld
pop
mov
xchg
test
scas
aaa
scas
dec
movsb
and
mov
dec
ljmp
sahf
dec
jns
in
in
cld
shl
outsl
fistps
push
dec
cmp
aad
out
add
mov
cmpsl
xor
ret
insl
ja
mov
mov
rcll
and
add
sar
rcrl
addb
jb
mov
test
add
mov
inc
add
roll
mov
out
add
lret
sub
rolb
mov
or
mov
mov
and
fisttpll
mov
scas
popf
sub
add
out
das
jecxz
or
or
jge
push
pop
mov
add
add
scas
int
add
add
sub
into
push
out
shr
or
add
add
adc
pop
jbe
popa
lock
mov
jle
rolb
mov
movsb
add
bound
mov
bound
mov
pop
adc
loop
mov
mov
mov
stc
push
jge
bound
mov
add
mov
inc
cmp
or
inc
rolb
mov
inc
xchg
adc
leave
mov
mov
cld
dec
insl
fs
xchg
stos
movsl
xor
cltd
fisubl
dec
pop
xor
mov
fisubrs
mov
add
je
pop
cmp
cmpsl
and
repz
mov
dec
cs
adc
mov
arpl
or
xchg
or
lret
daa
mov
jnp
adc
mov
mov
xlat
sahf
icebp
fldcw
out
jne
push
pushf
xor
mov
es
test
mov
mov
mov
xor
mov
inc
add
mov
add
mov
imul
daa
arpl
add
mov
mov
mov
add
scas
mov
cld
push
add
ja
push
andl
sub
add
mov
add
lea
mov
jl
dec
ljmp
sbb
dec
das
xchg
hlt
fs
mov
xor
mov
add
dec
and
add
mov
pop
nop
add
mov
ja
and
jae
inc
dec
jl
inc
add
loope
jne
xor
and
mov
nop
add
inc
int
clc
out
cwtl
ja
sahf
lea
jp
int
in
in
jg
leave
sti
out
pop
push
jbe
add
add
jb
mov
mov
add
nop
add
add
out
rolb
dec
cmp
push
xor
mov
out
sbb
xchg
and
mov
mov
xchg
outsb
cltd
gs
jle
rolb
mov
inc
add
xchg
sub
xor
mov
gs
mov
mov
add
add
leave
push
mov
mov
test
inc
jmp
add
and
mov
xor
jecxz
cmovge
mov
add
jno
dec
add
lock
mov
popa
adc
mov
lret
ret
jg
add
std
sbb
pop
mov
addb
push
rorl
adc
xchg
xor
push
aas
cmpsl
dec
mov
xlat
ss
pop
jle
mov
jne
pop
mov
pop
xchg
add
and
mov
add
push
add
mov
add
mov
mov
inc
addb
rolb
mov
stos
push
add
out
and
mov
test
pop
pop
push
add
fimuls
sub
sbb
mov
aas
adc
sbbl
xchg
cwtl
popa
xor
add
mov
aad
xchg
ret
mov
repnz
lods
cmp
mov
mov
push
test
add
mov
mov
fwait
dec
cmp
gs
jle
cmpsb
mov
xor
mov
lods
pop
mov
and
jne
sub
lods
dec
pusha
add
lea
add
adc
add
mov
mov
ret
jp,pt
add
push
cmp
popa
jno
out
test
lcall
mov
outsb
mov
mov
dec
pop
mov
xchg
subl
mov
mov
pop
mov
sbb
cmp
out
std
scas
dec
popf
mov
jl
jecxz
xchg
jmp
mov
jo
mov
and
faddl
sarl
adc
jle
cmp
stc
jno
sub
loopne
mov
add
add
xchg
fisubrl
adc
mov
cs
scas
mov
push
mov
mov
cmpsl
fdivrl
mov
xchg
sub
add
lret
xchg
pop
nop
add
or
rolb
mov
lds
in
jo
mov
sahf
leave
mov
mov
and
xchg
fnstsw
cmc
dec
mov
pop
add
jo
mov
inc
iret
sbb
repnz
mov
mov
mov
out
dec
inc
add
add
xchg
jne
push
add
das
push
add
out
sub
push
lret
dec
adc
sub
stos
movl
sbb
daa
and
mov
cmpsl
xor
mov
movsb
insb
psubw
ss
sbb
xor
add
push
sti
mov
mov
xchg
jmp
dec
dec
pop
rcll
test
cld
adc
xlat
cmp
sbb
add
pop
cmp
les
fwait
sub
add
xchg
lret
dec
sub
sti
imul
jle
insl
and
mov
and
mov
push
add
sub
mov
or
lock
jg
inc
mov
xchg
add
jns
jno
imul
aas
in
sahf
repnz
mov
ljmp
mov
mov
mov
sbb
add
mov
mov
mov
cmc
mov
add
and
mov
pusha
add
mov
daa
and
mov
pop
cmp
in
add
add
mov
add
add
xor
out
pusha
add
popa
sub
add
fnsave
test
addr16
rcr
adc
xchg
push
add
add
or
add
add
add
add
call
push
ud2
push
jnp
mov
sbb
xchg
ss
fcompl
inc
add
fistpl
xor
fcompl
daa
jg
dec
int
jne
ds
adc
in
ja
stos
scas
stc
jg
inc
add
sbb
addb
nop
add
adc
mov
insl
hlt
cmp
test
jl
push
add
rcl
push
add
fisttps
das
push
add
js
mov
bound
mov
or
lret
adcl
das
dec
bt
push
push
leave
add
adc
mov
cld
mov
mov
cs
mov
mov
xchg
add
ficoms
not
das
imul
dec
addr16
add
dec
or
mov
enter
mov
pop
into
cmp
or
add
mov
jmp
mov
sub
pop
repnz
dec
popf
and
add
sub
jns
add
into
xor
mov
cmp
xchg
outsl
sahf
xlat
call
roll
push
or
movsb
pushf
pop
cltd
out
sahf
xchg
xor
mov
add
sub
mov
add
mov
out
jle
add
pop
cmp
mov
addl
jno
call
inc
test
add
les
lea
pop
movb
sbb
inc
push
out
pcmpgtd
push
cs
push
das
lret
push
enter
mov
ret
mov
cmp
add
add
jb
mov
xor
mov
aas
fisubrl
xchg
pop
jge
mov
mov
add
or
and
mov
sub
xor
mov
push
ret
lds
loop
mov
cwtl
sahf
lock
xchg
add
js
add
add
inc
data16
leave
popf
negb
xchg
push
mov
jne
add
add
fbld
mov
shl
bound
mov
lock
inc
and
xor
add
add
mov
dec
shrl
cmp
jne
lahf
and
mov
xchg
movsl
jmp
imul
loopne
mov
add
insl
jl
jbe
add
add
mov
mov
gs
fisubrs
divl
add
mov
or
fnstsw
std
or
ss
jl
mov
stc
push
cmpsl
pop
pop
inc
inc
add
pop
imul
add
add
repnz
xor
add
clc
inc
add
inc
shl
add
add
xchg
or
push
push
lcall
popf
stos
pop
popf
cmp
inc
mov
mov
push
xlat
dec
sti
push
dec
inc
sbb
add
mov
mov
movsl
jbe
mov
push
aaa
xor
cltd
or
outsl
repz
jmp
aam
mov
add
mov
cmc
aam
loope
int3
pusha
add
cvtdq2ps
add
or
inc
pop
and
mov
push
mov
out
add
pop
cmpsl
nop
add
std
lods
pop
inc
inc
add
add
in
push
xchg
rolb
mov
lret
add
enter
arpl
lret
xlat
mov
add
cwtl
cmp
mov
mov
sub
movsb
push
add
fs
fistpl
or
jle
loope
add
jmp
jnp
outsb
pop
scas
jo
mov
add
mov
mov
cmp
inc
add
lret
sub
mov
mov
test
setne
push
addb
add
sub
inc
and
mov
ljmp
push
out
add
imul
mov
add
inc
add
mov
add
mov
mov
push
ret
sbb
aaa
cmp
mov
push
sbb
adc
mov
stos
or
jnp
mov
ja
jecxz
std
aas
cmp
inc
add
jg
add
add
and
shrl
xchg
add
cwtl
jle
mov
jo
mov
mov
aaa
je
push
xor
push
adc
enter
fldenv
pop
add
outsl
pop
les
cmp
out
test
in
rcrl
jnp
pop
or
mov
aaa
mov
cmpl
xor
fmull
pop
test
sbb
cmp
movsb
xchg
inc
gs
cmc
mov
pop
sub
push
cld
notl
push
rolb
mov
mov
push
mov
cmp
pop
mov
mov
inc
mov
lahf
or
and
cld
cmpl
dec
shll
mov
xchg
add
pop
imul
mov
ret
into
repnz
fnsave
pushf
scas
ret
inc
add
jge
add
push
pop
xchg
pushf
and
inc
xchg
idivl
jne
pop
mov
mov
sub
pop
push
and
hlt
push
mov
fs
outsb
mov
jmp
dec
mov
pop
repnz
mov
mov
mov
xchg
out
pop
jp
dec
xor
jns
addb
pop
addb
xlat
test
add
mov
fimuls
stos
inc
mov
test
cmp
ljmp
add
pop
paddw
and
movsb
xchg
push
dec
je
rcll
add
mov
rolb
or
les
push
dec
push
add
jnp
inc
push
add
dec
jmp
int
dec
xor
xchg
and
mov
mov
add
mov
mov
push
jmp
mov
out
push
add
pop
jo
mov
pop
inc
cli
scas
enter
rolb
icebp
push
add
scas
jo
mov
xchg
push
dec
cmp
add
ss
add
je
inc
dec
scas
mov
dec
and
mov
out
jno
and
mov
xchg
push
add
sbbl
in
add
add
pop
xor
mov
pop
sub
push
add
push
into
or
mov
repnz
addb
push
lock
xchg
add
mov
push
add
mov
pop
int3
mov
xchg
jge
movsb
and
das
sub
add
jle
xchg
nop
add
mov
mov
inc
pop
jb
mov
pop
arpl
divb
pusha
add
add
je
pop
addb
enter
add
sub
les
xchg
das
inc
out
and
lds
dec
dec
and
ljmp
sti
sub
pop
nop
add
data16
sub
and
xchg
mov
leave
push
ja
add
mov
cmc
mov
dec
addb
fs
mov
add
mov
mov
xchg
rolb
mov
pminub
push
cmp
cmp
lcall
jg
sbb
add
mov
mov
mov
xchg
xor
add
mov
lcall
sub
int
cmp
leave
push
insb
jg
or
mov
jno
inc
add
icebp
jnp
jecxz
shl
testb
fbstp
add
pop
jae
sbb
add
test
mov
ds
cld
ret
sub
add
mov
mov
mov
mov
mov
add
in
push
and
mov
dec
xor
fidivrl
add
hlt
xchg
cmp
mov
outsl
hlt
pop
aaa
jmp
jb
mov
mov
dec
jae
push
mov
mov
add
repnz
cli
idivb
mov
mov
add
jg
jbe
fists
mov
inc
jmp
add
adc
mov
dec
test
mov
jle
subl
es
cs
push
or
lods
seto
mov
add
mov
sub
lahf
mov
pop
mov
jne
pushf
inc
mov
nop
add
outsl
andl
mov
push
xchg
adcl
es
rolb
xchg
add
fnstsw
mov
mov
fsubrs
inc
xchg
fsubs
adc
mov
jns
addb
les
fnstenv
mov
pushf
jmp
add
lods
pop
movsl
ss
popf
cwtl
pop
dec
push
jae
pop
push
dec
cwtl
popa
fwait
push
cmp
sahf
sahf
mov
pop
inc
add
cmp
mov
pusha
add
ret
cmp
mov
mov
mov
sub
pop
adc
addb
rcl
mov
adc
pop
add
mov
mov
test
rcll
mov
leave
pusha
add
mov
mov
mov
rolb
mov
orw
add
bound
mov
fbld
add
add
test
pop
sti
push
inc
addb
push
inc
add
arpl
mov
int
xchg
and
pop
or
mov
aas
push
or
jmp
mov
cmpsl
out
int3
adc
add
pop
popf
popf
jb
mov
adc
mov
mov
mov
push
popa
test
add
dec
mov
fdivs
mov
jge
cmp
mov
mov
pop
pop
jns
div
add
pop
xchg
mov
outsl
sub
aas
stc
inc
add
addr16
add
cltd
cmpsb
es
add
xor
std
fucomp
cld
aaa
push
cmp
pop
mov
mov
add
call
mov
add
std
and
jo
mov
hlt
or
dec
mov
rorl
lahf
mov
mov
mov
mov
ret
in
sub
cwtl
xor
mov
dec
fnstenv
jecxz
xlat
stos
xchg
mov
add
mov
int
call
and
mov
lock
mov
mov
stos
dec
xchg
fbld
push
add
adc
scas
push
push
pop
bound
mov
mov
pop
cmpsb
cmp
cmpsb
and
add
rcll
std
xor
mov
outsl
pop
popa
lea
nop
add
out
addr16
add
xchg
aaa
enter
add
xchg
jmp
mov
jl
pushf
ret
ffree
adc
mov
pop
push
add
sti
nop
add
add
in
sbb
lret
cwtl
jecxz
push
in
idivb
add
dec
repnz
add
pop
negl
insl
sbbl
stos
clc
inc
or
shr
test
test
sbb
mov
xchg
shll
pop
mov
sbb
ja
inc
add
push
inc
add
dec
imul
mov
cmp
std
add
jo
mov
add
cmpsb
and
mov
pop
jb
mov
aaa
cmp
enter
cmpsl
mov
mov
pop
cmp
jecxz
mov
mov
pop
push
fcmovb
sbb
addr16
add
mov
cmp
fildll
push
add
jmp
mov
or
add
add
clc
push
add
adc
xchg
pop
int3
lods
mov
pushf
loopne
mov
push
jno
add
push
xchg
inc
lret
mov
xor
mov
mov
lcall
sbb
add
add
mov
push
add
mov
cmp
xchg
movsb
cmp
dec
cmp
mov
jmp
stos
movsl
inc
add
bound
mov
pusha
add
mov
or
out
push
add
cmpsb
push
lret
cmp
je
imull
je
add
mov
cmp
lds
add
mov
mov
pop
insl
dec
cmp
sbb
mov
dec
rolb
leave
movsb
jb
mov
mov
faddl
outsb
jmp
mov
sub
push
cmp
daa
test
inc
arpl
aaa
push
pop
loopne
mov
sub
lret
mov
les
pop
test
std
cld
lret
cmpsl
pop
fmul
test
mov
mov
shll
lock
mov
mov
lods
repz
mov
jae
dec
test
pusha
add
pop
addr16
lcall
mov
aaa
push
stos
adc
mov
jecxz
in
daa
sub
cmpsl
dec
aam
lea
movsl
imul
fst
cltd
idivb
jne
add
adc
mov
or
adc
mov
pop
cmp
popa
push
in
dec
cmp
gs
fimuls
add
mov
cli
xchg
out
add
push
js
add
add
push
add
mov
add
add
add
add
add
or
rolb
in
testb
aaa
xchg
int3
lock
xor
dec
xchg
jle
repnz
shll
push
rolb
adc
test
repnz
addb
lds
adc
mov
push
stos
pop
or
add
push
pop
pushf
mov
mov
pusha
add
xchg
add
loope
add
mov
add
xor
mov
jp
xor
mov
lds
add
push
test
cmp
or
fs
lds
mulb
data16
push
add
cwtl
cmpsl
jnp
xchg
iret
adc
std
repz
sbb
lock
orl
xchg
das
jae
popa
rolb
jb
mov
mov
cmpsl
pop
dec
push
enter
ret
xchg
mov
mov
js
addl
add
je
mov
add
add
pop
icebp
adc
push
sub
into
mov
stos
sbb
test
repz
add
mov
xchg
xor
and
mov
add
mov
add
push
nop
add
jns
add
mov
cmp
jl
adc
fs
sbb
mov
pop
xchg
add
mov
add
hlt
pop
aam
clc
pop
stos
out
xchg
outsl
loopne
mov
aad
or
xor
iret
bound
mov
adc
or
data16
enter
and
mov
inc
pusha
add
mov
cmp
add
mov
mov
or
mov
cmp
pop
mov
mov
pushf
mov
test
cmpsl
loop
mov
shrl
mov
mov
aam
out
add
ss
test
inc
and
addb
xor
stos
leave
rolb
mov
jp
popa
popa
pusha
add
int
sub
xchg
test
add
inc
add
add
inc
inc
push
sub
lcall
test
sbb
inc
dec
push
leave
fstpl
push
pop
imul
mov
test
mov
cmp
jae
sti
lds
add
adc
inc
mov
mov
or
push
rolb
mov
inc
rolb
mov
loop
mov
daa
xchg
add
test
imul
gs
scas
sbb
rolb
mov
add
popa
popa
pop
mov
dec
rolb
mov
lea
cmp
bound
mov
and
mov
add
loop
mov
lea
data16
jo
mov
mov
dec
mov
pop
mov
loope
dec
mov
mov
pop
in
dec
sub
pop
pop
add
sub
test
sbb
add
sbb
push
sbb
add
dec
scas
sub
add
add
xor
and
sbb
cs
lret
mov
mov
int3
push
cld
fildl
add
bound
mov
stos
ret
into
mov
in
xor
push
mov
mov
add
push
loope
add
es
insb
ljmp
add
dec
int3
insl
addb
dec
push
xchg
test
push
jno
fsubrs
xor
das
xor
mov
or
add
mov
inc
lock
mov
in
add
xor
inc
mov
mov
add
mov
mov
xor
add
mov
mov
mov
jecxz
sahf
mov
mov
cmp
mov
aad
add
rolb
mov
stc
add
mov
add
ror
or
in
jmp
add
add
push
push
lret
mov
mov
add
outsl
jns
cmp
bound
mov
mov
pop
xchg
add
fdivrl
ljmp
loope
xor
mov
xchg
cld
in
inc
push
add
and
and
mov
add
mov
loopne
mov
pop
shl
add
jne
xchg
add
fucom
add
cmpsb
xor
mov
mov
clc
and
mov
add
mov
and
inc
add
cmp
sahf
sub
mov
add
arpl
adc
push
sbbl
pop
push
adc
mov
jmp
xchg
mov
in
ds
push
cmp
scas
cmp
sub
cltd
test
loop
mov
add
addb
mov
or
or
scas
mov
add
cltd
popf
adc
sbb
jmp
add
mov
ljmp
add
mov
dec
mov
xor
mov
lahf
dec
test
adc
pop
adc
mov
mov
push
test
test
dec
pop
sbb
add
loope
fisubrl
pop
out
push
out
retw
test
mov
in
push
addl
xor
bound
mov
lret
js
add
add
decb
pop
addr16
andl
pop
sbb
xchg
movsl
pusha
add
cmp
mov
shll
mov
add
rolb
mov
mov
bound
mov
inc
xor
or
ret
and
mov
sbb
dec
outsb
lahf
push
mov
test
pop
nop
add
xchg
dec
hlt
outsl
in
hlt
fistpl
sbb
mov
outsb
pop
addr16
scas
mov
adc
cwtl
int3
sbb
sub
cmpsl
hlt
dec
stc
lret
scas
push
enter
addr16
jle
in
sub
aas
in
dec
push
push
rolb
mov
add
pop
scas
loopne
mov
pcmpgtb
je
jbe
rol
add
mov
mov
add
mov
fs
repnz
outsl
cltd
sbb
jns
mov
xor
cmp
mov
sar
push
call
add
aas
cmpsl
stos
outsl
and
mov
lock
dec
sub
outsl
mov
popa
iret
xor
mov
push
leave
lcall
sti
xchg
jns
test
add
push
lods
fs
pop
push
add
lock
into
leave
dec
leave
cmp
cmp
pop
rcr
fists
inc
sbb
call
mov
call
cmp
dec
or
xchg
inc
imul
push
cmp
mov
rcll
ds
mov
fabs
in
ljmp
mov
add
ret
mov
cmp
fistpll
ret
pusha
add
add
or
sbb
dec
les
xlat
mov
roll
scas
cmp
mov
movsl
adc
insb
repz
mov
and
mov
out
add
out
std
sbb
mov
popf
int3
jb
mov
mov
xlat
repnz
and
add
popf
pop
enter
jae
push
nop
add
pushf
test
repz
dec
pop
sbb
repz
ret
aaa
sbb
push
adc
fisttpll
das
clc
aas
sbb
nop
add
add
mov
das
aaa
cmp
call
inc
add
cmp
das
cmc
shll
mov
fimuls
sbb
int3
or
push
insb
jge
fdivr
cld
adc
ret
test
sub
add
mov
add
push
adc
add
xor
jne
leave
mov
int3
stc
loopne
mov
add
scas
sub
adc
sub
aaa
adc
mov
and
cmp
mov
es
inc
movsl
lcall
mov
cmp
xchg
add
pusha
add
ss
add
push
pop
ffreep
xor
add
push
add
ljmp
jmp
add
lods
movsb
lret
and
mov
add
fidivrl
mov
pop
jbe
add
mov
add
sahf
hlt
sbb
movsl
sbb
scas
cld
lds
mov
sti
fdivs
pop
rcrl
adc
mov
xor
add
push
add
mov
test
xchg
adc
mov
mov
add
dec
mov
mov
movsl
pop
mov
xchg
jl
lds
loope
ss
sbb
sub
mov
imull
sbb
mov
insl
sbb
daa
fcmovne
sub
pop
push
sbb
js
mov
repz
addb
mov
inc
pushf
in
push
rcll
sbb
out
mov
notb
jg
idivb
mov
add
add
xchg
repnz
mov
sub
push
stos
in
xor
out
std
pop
xlat
sub
push
push
fstps
cld
pop
fcmove
push
add
mov
jg
push
rolb
mov
add
adc
mov
mov
add
sub
mov
mov
and
pop
out
sti
lcall
xor
jge
std
pusha
add
lcall
pop
jle
jae,pn
push
add
and
int3
fcom
popa
mov
jb
mov
jae
stos
popf
mov
mov
mov
pop
lret
mov
and
mov
mov
sub
ret
in
mov
mov
add
call
in
rolb
dec
mov
jae
add
fsts
lock
icebp
ja
add
mov
add
xor
mov
push
dec
sub
sbb
or
pop
cmc
and
into
int3
loop
mov
es
into
push
inc
outsb
mov
add
movsl
cli
pop
mov
insl
iret
and
and
pop
in
xchg
in
or
aaa
je
add
jb
mov
std
repnz
add
add
jb
mov
cmpsl
xchg
add
add
pop
sub
add
repnz
fsts
push
jmp
mov
inc
add
add
lcall
mov
inc
je
mov
arpl
mov
sub
jbe
hlt
rolb
mov
xchg
adc
mov
das
inc
mov
xchg
adc
mov
addl
mov
outsb
inc
xchg
mov
dec
testb
fldl
mov
mov
xchg
add
cltd
mov
mov
mov
adc
mov
adc
mov
inc
es
sbb
inc
out
ret
jns
mov
sub
add
push
ds
dec
ja
sarl
aad
cmp
mov
jl
leave
mov
lods
cmpl
sbb
fnstsw
add
mov
fldenv
mov
push
mov
cwtl
roll
cwtl
dec
pop
in
fdivrs
enter
cmpsl
push
fidivl
push
ljmp
add
jbe
jno
xor
fisubl
cmp
mov
mov
dec
jno
lods
repz
sti
pushf
adc
mov
rcrl
jne
or
mov
rcrl
sbb
addb
setg
pop
aas
pop
inc
sub
ret
or
mov
mov
das
rolb
mov
sbb
or
inc
call
mov
xchg
dec
int
add
mov
mov
add
in
hlt
imul
mov
cmp
xchg
cld
push
roll
xchg
xor
rorl
jno
lea
add
mov
leave
xchg
push
daa
xchg
add
das
pop
mov
and
push
mov
jb
mov
or
in
mov
jp
lret
addr16
add
out
pop
pop
sub
lock
mov
int3
dec
mov
pop
pop
addb
pushf
sub
jnp
addb
xchg
icebp
outsb
icebp
insb
je
lods
xchg
jl
cs
pusha
add
push
add
mov
mov
and
mov
mov
imul
jecxz
add
lods
mov
xor
mov
jmp
fcmove
imul
add
mov
jecxz
setne
add
mov
pop
inc
xor
push
pop
in
test
sub
mov
cld
imul
mov
loope
inc
mov
and
mov
mov
dec
jbe
cmp
subl
jno
mov
dec
inc
mov
je
push
jp
add
ja
add
adc
cmp
repz
push
add
xchg
add
mov
mov
out
rolb
mov
inc
rolb
lcall
mov
dec
mov
add
pop
inc
mov
loope
add
and
repz
aam
inc
add
xchg
std
mov
pop
inc
fdivl
add
out
dec
cmc
inc
add
add
mov
jp
jmp
push
fldenv
mov
mov
jl
add
filds
in
jns
fidivl
fistl
mov
sub
cmp
outsb
xor
mov
cmp
add
add
scas
inc
and
mov
mov
pusha
add
je
dec
mov
add
cmpsl
mov
xor
xchg
or
xor
mov
and
cmp
test
lcall
dec
int
aas
loop
mov
mov
ja
fwait
mov
cmp
mov
aaa
pushf
or
in
mov
mov
add
add
arpl
add
addl
rolb
mov
aam
push
aas
sub
add
adc
mov
loope
xor
mov
pop
push
pop
aad
push
fimull
adcl
call
fiaddl
dec
pop
mov
mov
fisubrl
test
inc
add
add
aaa
jne
outsb
push
adc
and
cli
or
mov
mov
pop
daa
mov
loopne
mov
scas
fwait
outsl
push
add
dec
lahf
mov
pop
mov
ret
fisttpll
jno
push
add
mov
push
inc
xchg
in
shll
add
leave
sbb
sub
inc
test
add
pop
pop
jb
mov
add
add
nop
add
cmpsb
cmp
std
ret
push
jnp
lods
or
outsl
lock
mov
or
lea
ljmp
inc
fldcw
xchg
push
pop
mov
add
aas
pop
repnz
cmpsb
test
add
gs
dec
cmpsb
jmp
pop
mov
mov
mov
sub
xchg
add
idivl
or
fimuls
push
fwait
cltd
push
push
add
add
add
cwtl
push
cli
lret
pushf
xchg
inc
sub
test
pop
out
addb
mov
adc
mov
flds
nop
add
mov
xchg
mov
inc
add
add
imul
psubsb
pop
lret
or
aaa
jl
mov
pop
xchg
add
pop
jns
loopne
mov
mov
push
xchg
inc
xor
pop
int
lods
inc
stc
or
fsubrs
rcl
push
iret
lds
test
pushf
rolb
mov
ja
jg
jge
mov
orl
mov
add
add
mov
aas
or
mov
add
hlt
lahf
sub
lods
mov
xor
fcmove
xchg
jb
mov
adc
icebp
addl
outsl
mov
repnz
add
pusha
add
fwait
dec
pop
clc
adc
mov
mov
mov
out
int3
cmpsl
sahf
jl
and
mov
mov
dec
push
jae
add
fists
dec
adc
mov
cmpsb
outsb
jecxz
mov
add
push
test
mov
sub
mov
pusha
add
decb
insb
or
mov
aad
insl
jg
jle
loopne
mov
sti
dec
insl
dec
push
and
xchg
push
adc
mov
mov
dec
push
jg
icebp
jbe
lods
mov
mov
adc
mov
sbb
push
cmc
push
add
mov
div
subl
xor
mov
jl
fimuls
insl
jne
add
add
aaa
pushl
mov
adcl
mov
sbb
push
adc
xchg
inc
add
add
lds
push
push
xchg
leave
pop
mov
add
fisubrs
fsubrp
les
test
xor
mov
pop
stos
pop
sbb
add
and
mov
xor
test
fisubl
dec
icebp
dec
add
add
mov
cmp
into
inc
adc
mov
daa
xlat
sbb
add
xchg
addb
xchg
add
mov
mov
and
add
lock
mov
add
mov
jae
addr16
lock
add
add
ficomps
fwait
aaa
xor
push
add
fisttps
push
test
cmp
into
add
sbb
and
mov
add
mov
clc
or
xlat
dec
pop
insb
jl
add
fidivl
push
enter
mov
lds
mov
mov
lds
add
mov
orl
and
pop
movsl
jle
jge,pt
pop
outsl
jnp
mov
inc
ljmp
outsl
and
mov
add
mov
mov
popa
out
xchg
loop
mov
mov
popa
jmp
xchg
add
jno
or
aas
enter
sbb
insb
lcall
add
je
add
mov
mov
ds
add
xchg
lea
repnz
test
std
xchg
jns
add
mov
out
out
cmc
pop
push
mov
mov
rolb
mov
rolb
mov
adc
mov
mov
dec
cmpsl
pop
popa
xor
mov
insb
jp
adc
mov
ss
arpl
xchg
shrl
mov
mov
mov
movsb
inc
add
push
inc
fldln2
push
dec
imul
add
mov
cld
xor
mov
in
push
stos
cs
xchg
mov
int3
fisubs
add
lahf
das
inc
inc
addb
mov
cli
mov
xchg
lock
cmp
mov
sub
clc
jbe
scas
jg
stc
jl
or
addb
mov
pop
sub
aaa
push
and
mov
inc
add
ret
push
cmp
push
or
clc
jle
fadd
cwtl
js
fidivs
add
mov
repz
cli
das
cmc
cmpsl
fimuls
mov
scas
jle
push
mov
into
je
sbb
sbb
add
or
adc
mov
adc
mov
add
xchg
imul
inc
jo
mov
rolb
mov
add
ljmp
das
push
mov
pusha
add
or
mov
mov
bound
mov
imul
jbe
and
test
xchg
xchg
mov
mov
add
or
mov
arpl
les
fstl
addb
cli
fwait
mov
jp
fsubrs
and
pop
inc
add
mov
test
iret
repnz
sti
dec
addb
rolb
mov
mov
xchg
pushf
push
push
xchg
jne
and
ret
aaa
and
mov
cmpsb
aam
out
out
aas
mov
test
test
add
mov
mov
mov
push
je
add
fiadds
sub
rolb
adc
mov
aad
dec
adc
mov
mov
cmp
add
sub
repnz
jmp
adc
mov
pop
adc
add
lods
mov
imul
jle
add
inc
jnp
add
xor
and
mov
sub
daa
sub
mov
mov
xor
addb
mov
rolb
mov
xchg
in
insl
push
add
xor
xchg
adc
mov
insb
insl
sti
enter
sub
lods
jae
ficomps
cs
mov
mov
add
aam
sbb
dec
rolb
sbb
cmp
add
mov
or
adc
mov
lock
pop
and
mov
pop
addr16
idivb
mov
sar
push
pop
negl
mov
jbe
rcll
add
mov
pop
xchg
jns
test
mov
mov
fsub
push
imul
in
jmp
lods
mov
mov
aam
add
add
mov
xchg
call
dec
pop
test
mov
sub
arpl
push
adc
mov
mov
das
rolb
mov
test
mov
pop
jo
mov
mov
mov
add
jo
mov
add
frstor
into
dec
cmp
push
jle
cs
push
loope
fsts
sub
roll
add
or
add
mov
in
add
mov
xchg
xchg
xchg
psubusw
int
test
test
xorl
mov
pop
popf
cld
scas
jp
fsub
or
push
jecxz
xor
add
add
mov
push
adc
lcall
add
inc
out
hlt
movsb
push
sbb
in
jns
cs
mov
mov
cmp
jg
add
xchg
lret
mov
out
xchg
jno
cmp
lods
and
mov
enter
cltd
mov
dec
loope
adc
mov
scas
aam
dec
push
ss
mov
add
mov
hlt
lods
mov
mov
add
insb
out
adc
add
dec
movsb
cmpsl
rolb
mov
nop
add
icebp
inc
aad
sbb
xchg
add
mov
test
mov
mov
add
repz
mov
mov
jbe
and
outsl
bound
mov
mov
or
arpl
bound
mov
adc
lods
push
js
nop
add
sbb
add
jne
pop
insb
inc
jl
mov
mov
mov
inc
ret
fisttps
pop
les
mov
out
xchg
jg
add
add
fwait
cli
pop
jae
rolb
mov
fs
enter
add
push
popf
push
or
add
inc
sub
clc
mov
into
xor
mov
sub
inc
add
outsl
into
mov
fiadds
add
cltd
sbb
cs
ficoms
dec
sbb
test
xchg
cwtl
mov
addb
lods
xor
mov
ja
xor
mov
pop
cmp
add
dec
fdivp
xchg
add
addr16
movsb
outsl
pop
shl
add
mov
xlat
sbbl
rolb
mov
push
xor
mov
jns
daa
adc
mov
add
mov
add
fwait
clc
mov
rolb
mov
mov
add
xor
fnsave
aas
dec
jne
adc
pop
syscall
daa
sahf
jecxz
ret
pop
aam
jl
jmp
sar
xor
inc
add
xchg
sbb
loop
mov
es
add
in
lea
jne
out
push
arpl
dec
lock
pop
mov
add
sbb
add
pop
lods
dec
rolb
mov
adc
mov
aaa
xor
add
cmc
xor
out
gs
test
mov
jge
or
xor
add
mov
lret
add
out
mov
insl
jmp
nop
add
int3
popf
jp,pt
xor
test
sbb
mov
int
addb
fstpt
stos
and
mov
mov
mov
icebp
xchg
push
adc
jmp
ret
popa
stc
jg
push
call
add
jl
mov
in
mov
and
mov
stos
lcall
mov
sbb
and
add
lock
mov
push
jg
jle
inc
and
pusha
add
mov
out
outsl
cmc
mov
mov
xchg
add
jmp
rolb
xor
jns
pop
js
iret
mov
add
push
in
mov
and
xchg
pop
scas
iret
mov
add
push
out
pushf
addb
and
in
push
hlt
aad
adc
sbb
testl
cwtl
das
lret
and
add
cli
icebp
or
xor
mov
add
jno
push
jb
mov
int
cmpsb
cmp
fadds
mov
cltd
pop
push
add
dec
repnz
add
xor
mov
cmpsb
xchg
and
add
xchg
jl
add
mov
or
lret
sbb
std
sbb
lahf
jno
dec
mov
xlat
int3
es
rolb
mov
mov
cwtl
fidivs
int3
pop
outsl
aad
dec
jns
add
mov
sti
pop
inc
test
popa
jae
and
mov
mov
into
pop
xlat
push
sub
les
sub
or
cltd
mov
insl
dec
in
mov
mov
sub
scas
dec
xor
add
into
xlat
jecxz
enter
jmp
push
add
mov
in
cwtl
push
add
mov
sbb
mov
add
add
adc
mov
sbb
dec
lahf
pop
mov
mov
addb
imul
loope
cmp
popf
leave
pop
adc
mov
adc
push
mov
fwait
mov
js
fisubrs
inc
xchg
xor
pop
lock
jg
mull
sbb
mov
mov
imul
xor
xor
cld
sbb
pop
rcl
push
lods
xor
stc
int3
bound
mov
mov
add
or
int3
nop
add
push
adc
mov
cmpl
arpl
or
mov
pop
or
xchg
add
add
pusha
add
loop
mov
cmp
mov
ja
ret
out
cmc
int
outsb
push
lea
out
inc
adc
mov
imul
dec
cs
xor
and
shll
add
mov
fldl
int
xchg
sub
add
lcall
ret
scas
jnp
adc
out
test
mov
dec
aam
mov
cmp
loopne
mov
jle
xchg
pop
nop
add
flds
movsl
push
fsub
dec
out
or
int3
sbb
add
sub
aaa
int3
cmp
fldz
into
ret
ret
imul
mov
add
add
lods
cmp
in
sub
xor
mov
xor
mov
mov
idivb
adc
loop
mov
add
test
pushf
push
and
add
add
xchg
aad
idivb
fsubp
sub
xor
add
ss
pop
adc
push
mov
mov
daa
gs
jg
idivl
pop
jg
push
and
xchg
shrl
pushf
insb
or
add
iret
aas
push
rolb
mov
jmp
leave
movsl
les
dec
jns
inc
adc
mov
fwait
lea
popa
pop
push
out
add
sbb
inc
adc
les
jp
or
add
dec
dec
stc
insb
divl
mov
add
sti
adc
mov
mov
repz
add
stc
incl
add
push
hlt
jo
mov
add
add
add
xchg
add
push
add
mov
cmp
add
mov
stos
mov
inc
xor
mov
add
sahf
sbb
or
js
pop
int3
push
ret
push
dec
clc
inc
xor
mov
daa
in
psubusb
add
jnp
add
mov
sub
push
sbb
lret
je
outsb
push
xor
scas
push
jmp
jbe
sub
xchg
add
mov
test
hlt
sbb
add
call
rolb
mov
add
xor
ja
add
cmp
jbe
mov
inc
add
sbb
add
push
pop
popa
cmp
add
jg
and
pop
dec
stc
sub
pop
inc
add
lahf
jb
mov
loopne
mov
out
mov
jge
add
and
rcrl
jge
add
push
jmp
mov
fiaddl
mov
call
jle
cmpsb
pop
das
mov
mov
adc
mov
add
ljmp
fwait
mov
adc
mov
mov
mov
add
loop
mov
sub
inc
sbb
jmp
add
add
add
mov
add
inc
call
mov
mov
mov
add
mov
pop
push
adc
xchg
sbb
push
add
das
jecxz
dec
mov
ss
jns
jl
lods
cli
es
in
add
and
add
daa
or
xchg
mov
cmpsl
mov
inc
add
mov
mov
shrl
cmpsb
iret
cmc
hlt
xor
inc
adc
ja
flds
mov
add
sbb
mov
mov
ror
sub
scas
adcl
add
mov
push
gs
push
fwait
mov
add
ret
jb
mov
add
dec
imul
inc
inc
pop
out
pop
ds
inc
add
push
call
arpl
fnsave
jo
mov
pop
int
adc
mov
pop
cli
and
mov
out
je
test
add
cmp
mov
scas
stc
cmp
add
js
test
jbe
fbstp
pop
ds
or
sub
dec
cltd
xor
out
cli
jb
mov
pusha
add
adc
xchg
mov
mov
sbb
add
mov
sbb
daa
lea
fisttps
loopne
mov
fnsave
jge
mov
mov
daa
fcoms
add
ja
mov
mov
add
ja
xor
mov
leavew
sub
add
sbb
pop
loop
mov
out
jp
cmp
std
imul
dec
jg
repnz
inc
xor
sub
scas
sahf
mov
mov
scas
cltd
push
add
add
pop
mov
or
out
adc
mov
add
in
leave
jnp
or
mov
jg
subl
and
xor
push
xor
mov
and
out
or
lock
pop
add
mov
and
mov
call
xchg
fidivl
push
pusha
add
sbb
js
rorl
fisubrs
add
cmpsb
test
sti
lods
stc
lret
nop
add
mov
inc
imul
jns
mov
add
cld
adc
mov
test
movq
pop
call
add
pop
pushf
add
mov
stos
mov
mov
imul
rolb
mov
cs
inc
inc
add
pop
sqrtps
mov
aad
push
mov
dec
jge
pop
sar
outsb
add
mov
adc
mov
add
mov
add
icebp
negb
mov
pop
stos
pop
les
xor
insl
adc
mov
mov
add
es
add
add
mov
mov
add
push
arpl
dec
xor
mov
mov
sbb
or
sub
dec
push
xchg
cmp
sbb
aad
inc
push
dec
jge
je
sbb
add
inc
ret
leave
call
icebp
in
sbb
and
xor
mov
pop
adc
mov
in
icebp
sbb
add
cmpsb
ss
jmp
push
mov
nop
add
mov
lcall
jne
lods
jge
push
cltd
shll
icebp
cmp
mov
cmp
add
hlt
out
aas
stos
imul
and
mov
xchg
add
cmp
add
mov
pop
cwtl
push
daa
xchg
add
ret
dec
icebp
scas
add
in
mov
cs
xlat
xchg
in
dec
xchg
jle
pop
in
fnsave
mov
and
mov
fisttpll
xchg
lret
add
xchg
test
jae
add
mov
jo
mov
push
xchg
cmc
mov
and
mov
add
add
pushf
pushf
cmp
insl
lods
jge
add
or
and
mov
mov
add
add
sbb
fdiv
jne
or
add
and
out
fisubl
mov
pop
idiv
pop
dec
out
mov
cmpsl
mov
jle
mov
mov
stos
in
adc
mov
mov
cmpsl
ja
add
mov
loop
mov
cmc
add
movsb
inc
lcall
add
adc
mov
int3
call
pop
adc
mov
ja
push
or
in
pusha
add
rolb
mov
inc
adc
mov
mov
aad
insb
dec
test
mov
repnz
sbb
adc
push
add
mov
and
scas
popa
inc
out
nop
add
mov
jl
cmp
mov
mov
pop
mov
xor
js
out
add
ficompl
repnz
and
mov
jle
daa
cmp
aas
pop
jl
in
cld
xor
sbb
mov
and
fwait
cmp
loopne
mov
cs
movsl
mov
mov
adc
mov
mov
xchg
fcmovu
scas
lcall
int3
mov
stos
lods
ljmp
rolb
mov
sub
add
sub
lock
rolb
sub
lahf
and
pop
aam
call
es
mov
movsb
push
xchg
mov
jns
xor
add
insb
adc
add
xchg
add
sbb
sbb
and
mov
notb
add
mov
or
inc
mov
les
mov
and
mov
test
lret
mov
das
dec
mov
subl
adc
aam
mov
mov
add
mov
jp
pop
and
mov
stos
out
ret
pop
adc
add
cli
dec
xor
mov
inc
jg
push
or
mov
add
or
mov
xor
sbb
mov
out
mov
mov
cmp
mov
and
add
or
sbb
lods
xchg
lcall
fadds
add
add
mov
mov
insl
mov
out
mov
mov
add
std
mov
push
add
mov
add
movsb
mov
lret
sbb
icebp
pop
cmp
lds
add
cmpsl
xchg
cmp
mov
push
add
out
sti
xchg
add
mov
test
xor
pushf
and
and
add
dec
pop
jb
mov
fwait
mov
sbb
sbb
rolb
icebp
out
dec
sbb
fimull
pop
hlt
in
fsts
xor
mov
fs
cmp
mov
mov
movsb
shrl
xor
mov
pop
scas
jp
add
add
pop
mov
push
jecxz
cmp
mov
add
cmp
cli
lds
imul
add
pusha
add
test
into
xchg
fsubs
mov
mov
dec
shll
sbb
xchg
add
mov
add
add
std
inc
add
xor
lret
cmc
or
mov
xchg
mov
add
fs
jge
lods
inc
push
sarl
in
jmp
add
test
add
test
inc
push
in
add
xchg
fdivs
lock
lods
fdivl
jmp
sub
ds
aam
push
or
mov
pusha
add
xor
mov
dec
and
dec
inc
add
cltd
sbb
bound
mov
mov
lahf
jmp
mov
pop
jns
adc
lds
jns
cli
fildll
mov
push
repnz
sti
outsl
xlat
and
mov
cmpsb
adc
push
sbb
push
sbb
mov
mov
leave
mov
mov
mov
xlat
mov
mov
add
add
pop
mov
or
mov
test
stos
xchg
mov
clc
pushf
jb
mov
xor
mov
test
push
add
sbb
enter
call
pusha
add
loopne
mov
mov
inc
add
in
ds
and
mov
sbbl
icebp
sub
rolb
pushf
data16
sahf
jo
mov
sub
cmp
adc
add
stos
scas
stos
icebp
mov
sub
xchg
rolb
mov
add
je
sbb
lock
add
add
mov
out
sti
add
push
inc
add
xchg
mov
jb
mov
add
adc
mov
add
add
divl
sub
movsl
loope
pop
mov
mov
push
add
jns
addr16
dec
into
and
xlat
sbb
pop
pop
ljmp
clc
rolb
mov
add
add
cmpsl
aad
ds
test
add
pop
mov
push
add
ret
repnz
xchg
sub
add
add
mov
in
mov
roll
mov
sahf
aas
adc
jg
sub
mov
sbb
xchg
ficoml
adc
mov
iret
loop
mov
xchg
xchg
sub
mov
in
icebp
mov
sbb
enter
add
addr16
cld
fidivrl
test
or
xor
xor
mov
mov
mov
mov
ja
cmp
repnz
sysret
test
stos
jnp
das
xor
not
add
xchg
cmp
in
add
repnz
adc
mov
mov
sbb
or
add
sbb
mov
ficompl
add
push
test
push
jg
push
cmp
pop
lds
push
sub
cmc
les
dec
lods
dec
xor
cmp
add
aaa
mov
lret
push
rolb
mov
out
mov
push
push
push
push
xchg
ss
mov
add
movsl
adc
test
rolb
mov
push
push
das
or
inc
stos
jae
push
sub
mov
fs
in
repz
jnp
dec
mov
add
mov
mov
mov
rolb
mov
add
mov
mov
lds
int
xchg
dec
pop
fcmovne
mov
out
cmp
mov
jecxz
ljmp
cmp
push
mov
and
cmpl
mov
add
xor
pop
and
mov
aas
pop
inc
outsl
mov
dec
scas
lret
add
add
iret
mov
adc
mov
inc
add
inc
add
es
sub
flds
pop
stos
sahf
rolb
mov
dec
outsl
out
and
mov
test
scas
xchg
stos
lea
mov
adc
mov
mov
sti
aas
cmpl
push
lret
cmp
add
rolb
xchg
or
test
dec
sbb
xchg
inc
imul
mov
popa
sub
push
icebp
insl
insb
xchg
mov
test
les
lock
add
add
jle
cmc
push
add
xchg
add
mov
imul
add
add
inc
ljmp
fstl
stos
cmpsb
pop
or
mov
add
aaa
adc
test
mov
loop
mov
arpl
ds
scas
and
test
inc
lcall
shll
cmp
add
mov
sub
or
mov
in
push
sbb
addr16
jmp
add
add
sbb
nop
add
mov
cwtl
clc
dec
xor
jle
aas
stos
mulb
jg
xchg
push
xchg
mov
mov
cmp
xchg
add
rolb
outsb
and
mov
mov
dec
mov
sub
push
jb
mov
dec
push
add
add
sub
mov
push
pop
inc
out
enter
add
mov
and
jmp
xor
mov
mov
adc
add
push
lods
sub
nop
add
mov
mov
mov
push
add
imul
push
repz
addb
push
push
test
add
or
repnz
and
or
jno
mov
xchg
push
xor
mov
mov
add
lret
mov
add
and
mov
mov
add
dec
rorl
ficompl
mov
movsl
sub
mov
mov
add
jle
lock
cwtl
arpl
stos
rolb
flds
addb
jecxz
add
cltd
xlat
movsb
inc
add
insl
outsb
lods
add
mov
mov
lret
or
push
push
add
imul
stos
es
fisttpl
add
cmp
fiadds
adc
addb
sub
mov
push
add
ljmp
sub
mov
add
mov
adc
mov
add
add
jl
iret
dec
and
repz
je
rolb
mov
ss
fwait
jae
movsb
aam
mov
paddw
and
mov
in
lods
aas
adc
jg
mov
fs
jecxz
test
mov
xchg
fmulp
pop
push
add
nop
add
mov
add
dec
jl
or
add
xor
jnp
bound
mov
push
stc
fsubrl
js
ljmp
push
cld
pop
popf
outsl
jmp
xchg
xlat
cli
push
lock
out
in
cmp
and
or
testb
imulb
cmp
dec
add
pop
cld
mov
push
add
scas
data16
int
add
mov
mov
mov
dec
push
cmp
fidivs
jae
ljmp
jbe
xlat
add
mov
add
sbb
dec
repz
bound
mov
mov
push
pop
in
mov
das
lcall
sbb
adc
mov
xchg
cs
sub
push
add
ret
movsl
scas
ret
jge
les
jae
xor
mov
in
cltd
xor
mov
add
add
jne
sub
int3
ficoml
mov
pop
push
ret
imul
sbb
add
sbb
cmp
adc
rorl
cmpsb
sbb
add
in
mov
add
jge
push
lock
add
movl
cs
rolb
loop
mov
lock
dec
dec
pop
aad
jge
add
mov
lret
mov
add
push
or
xchg
sbb
fadds
cmp
add
sbb
add
cmc
popf
cld
sub
push
jno
in
mov
out
or
imul
xchg
mov
mov
rolb
mov
push
mov
dec
and
mov
mov
mov
cwtl
inc
mov
lahf
repz
and
lret
in
cmp
mov
int
fisttps
cs
mov
enter
pop
std
xchg
jnp
push
ljmp
add
add
mov
add
cmp
test
lret
gs
and
push
jbe
or
loop
mov
jmp
add
jns
xor
push
fnstsw
sbb
jns
mov
push
add
mov
xchg
stc
fnstcw
or
add
inc
add
mov
cmp
pop
xchg
addb
repz
test
inc
add
pop
mov
add
pushf
je
cmpsl
inc
or
cmp
add
mov
test
add
mov
cmp
fsubl
ja
adc
add
and
in
add
mov
push
adc
addb
mov
loopne
mov
mov
add
mov
mov
mov
rorl
shll
fdivs
mov
push
inc
flds
enter
loopne
mov
cwtl
test
jb
mov
xchg
bound
mov
sub
jge
adc
mov
fsts
adc
mov
inc
inc
add
mov
mov
and
mov
inc
clc
inc
add
adc
add
aam
fildll
adc
add
inc
lods
cmp
mov
add
in
mov
mov
sahf
rolb
mov
xor
mov
adc
mov
add
scas
pop
rolb
and
pop
mov
add
cmp
pop
and
mov
mov
addl
mov
add
add
sti
xor
mov
aam
add
mov
push
pushf
insl
mov
jl
stos
aam
jecxz
cli
lret
dec
dec
or
aas
add
xchg
nop
add
shr
pop
test
insl
dec
inc
out
and
lahf
and
mov
lods
and
int3
adc
inc
add
ljmp
bound
mov
sarl
xor
add
pop
ror
push
mov
xor
cmpl
arpl
push
in
and
mov
or
xchg
fscale
aad
mov
mov
xor
psubb
adc
add
inc
cmpsl
push
arpl
ret
fstpt
lods
mov
outsb
insl
mov
int
pop
mov
add
push
out
addl
jae
sti
mov
push
insb
cwtl
dec
jbe
or
add
aaa
cmp
cld
sbb
sbb
mov
mov
sub
mov
push
outsl
call
xor
imul
pop
add
stos
add
icebp
addb
leave
and
mov
pop
rolb
mov
faddp
add
mov
lock
aaa
frstor
stos
dec
xor
add
sbb
pop
xchg
int
cmp
and
mov
pop
push
add
sub
mov
fwait
jnp
push
jnp
xchg
mov
add
add
push
jns
jl
xchg
mov
push
jb
mov
mov
cmp
jb
mov
je
jg
nop
add
int3
jne
add
popl
mov
adc
mov
das
int
mov
pop
out
jmp
cmp
mov
jg
jle
or
shrl
lret
out
push
mov
into
add
mov
rolb
mov
int3
cmp
dec
jne
pushf
inc
add
xor
mov
mov
mov
or
cld
inc
mov
mov
scas
xchg
inc
and
dec
daa
inc
add
xor
mov
mov
jmp
or
mov
test
loop
mov
mov
jmp
outsl
sub
hlt
or
dec
adc
testb
add
xor
mov
xor
pop
fs
jo
mov
lds
jns
aam
pusha
add
ret
not
add
add
add
and
push
pop
stc
add
mov
das
mov
notl
push
add
add
lds
jb
mov
push
les
sub
inc
mov
jp
hlt
ljmp
mov
mov
jp
mov
rolb
mov
dec
movb
dec
mov
cmp
lret
arpl
arpl
add
dec
pop
iret
aad
or
add
mov
mov
mov
xchg
sbb
jb
mov
lea
push
xchg
jae
xchg
mov
mov
xorl
mov
add
and
push
mov
mov
pop
adc
mov
repnz
cmp
add
mov
lret
cmpsb
add
mov
xlat
das
mov
sub
sub
fisubrs
mov
cli
in
add
lahf
enter
inc
jl
insl
dec
pop
outsb
xchg
xor
outsl
adc
mov
outsl
jecxz
cmp
clc
mov
cmp
push
and
pop
jb
mov
mov
add
cmpsl
xchg
add
mov
dec
fists
or
out
inc
push
add
add
cmp
daa
jmp
pushf
test
mov
mov
fs
insl
sub
mov
test
jge
mov
and
scas
out
add
add
cmp
mov
outsl
or
mov
mov
mov
inc
out
xor
adc
outsl
add
mov
jecxz
adc
loopnew
mov
scas
push
imul
add
add
cltd
ds
arpl
mov
push
add
or
stc
outsl
xchg
inc
and
mov
mov
mov
jmp
pushf
xor
mov
lret
mov
clc
aas
outsb
popa
dec
sbb
jp
xchg
fbld
addr16
jns
insl
ret
repz
jp
add
iret
inc
hlt
push
add
add
mov
add
mov
xor
mov
mov
test
sub
nop
add
or
mov
rolb
mov
xchg
jmp
add
jge
jl
add
mov
mov
add
or
adc
inc
ljmp
jb
mov
mov
xor
sub
or
cmp
call
loope
adc
mov
mov
cltd
push
xchg
bound
mov
mov
js
ljmp
loope
aaa
sbb
push
in
add
mov
clc
mov
lock
adc
mov
sbb
mov
das
loop
mov
add
mov
int3
add
add
mov
mov
ds
out
cmp
jno
sbb
mov
pop
mov
inc
aaa
gs
jns
popf
cmp
fs
daa
aaa
out
negb
sub
in
and
xchg
mov
mov
mov
adc
add
dec
xor
ja
stos
scas
sbb
push
mov
pop
je
sub
dec
or
add
jb
mov
add
add
daa
rolb
mov
mov
add
xor
jne
mov
nop
add
add
mov
inc
mov
mov
test
add
ljmp
ljmp
dec
jns
aam
and
fsubl
add
mov
sahf
iret
mov
outsl
popf
push
dec
shll
mov
pop
iret
cmp
test
dec
rolb
add
mov
mov
mov
add
aam
in
cmp
les
xor
into
scas
dec
ret
cmpsb
mov
es
aad
dec
jo
mov
add
sbbl
add
arpl
xchg
stos
ficompl
mov
mov
mov
inc
add
cmp
dec
mov
test
orl
dec
out
jle
sbb
cwtl
fistps
aas
es
and
mov
jnp
rolb
dec
loope
fstpl
test
xchg
es
aam
add
sub
add
pop
jne,pn
cmp
xchg
dec
pop
add
mov
out
inc
add
mov
mov
mov
int
push
and
adc
movsb
neg
or
inc
add
data16
mov
mov
bound
mov
mov
mov
dec
push
adc
cltd
out
cmp
push
push
add
das
iret
arpl
enter
call
dec
mov
rolb
mov
add
lods
pusha
add
add
add
push
adc
movsl
inc
inc
in
out
push
mov
mov
call
and
cmpsb
jnp
cmp
push
out
int3
xchg
lret
inc
mov
loop
mov
or
popa
dec
movsb
cs
loop
mov
add
scas
xor
mov
insb
pop
in
out
lret
mov
dec
push
mov
push
insl
addb
sub
sub
mov
add
ret
push
or
popa
adc
mov
dec
mov
mov
mov
fisubs
mov
dec
dec
push
lahf
mov
add
adc
adc
mov
mov
add
scas
push
ljmp
pop
xchg
fdivrs
ret
mov
xchg
add
add
mov
mov
xor
mov
push
and
mov
jecxz
aas
inc
addb
jmp
pop
jno
cld
mov
add
jge
add
mov
mov
mov
aaa
dec
push
push
mov
mov
sbb
add
sbb
add
jb
mov
leave
outsl
xchg
fdiv
sub
xor
adc
mov
sub
xchg
add
pop
hlt
out
cmp
dec
jle
adc
mov
mov
sbb
inc
jmp
out
xor
sub
cltd
cmp
jno
add
mov
sub
add
and
out
sub
fimuls
jnp
push
setl
jecxz
add
mov
scas
sahf
cs
jbe
and
sbb
rolb
xchg
lods
insl
mov
mov
loopne
mov
out
inc
pop
jae
mov
jno
push
xchg
push
nop
add
mov
addl
add
or
cmpsl
mov
add
jno
les
stc
xchg
xor
fisttpl
mov
inc
pop
mov
mov
into
mov
add
jbe
repnz
inc
add
push
sbb
daa
jmp
cmpsl
mov
mov
xchg
bound
mov
push
and
inc
or
or
scas
lret
imul
in
repnz
mov
std
or
add
add
add
repz
outsl
out
sub
shll
repnz
add
fmull
sahf
clc
loop
mov
mov
add
rolb
mov
push
pop
call
mov
cmc
jmp
add
or
mov
loop,pt
mov
xor
pop
arpl
jge
xchg
ss
mov
or
jmp
adc
mov
scas
push
add
mov
inc
lock
adc
mov
arpl
loop
mov
stos
out
inc
sbb
enter
into
mov
lcall
xor
add
push
out
push
or
in
lods
in
mov
and
mov
mov
imul
add
mov
mov
cmp
sbb
mov
add
add
shll
rolb
mov
mov
xor
jnp
dec
xor
push
js
or
push
sbb
and
sarl
push
pop
fsubrs
in
fisttpl
test
ret
mov
mov
imul
pusha
add
push
into
icebp
xlat
nop
add
out
fcom
mov
inc
test
push
sub
and
add
add
mov
int3
es
out
add
test
jne
add
add
add
jmp
dec
mov
mov
sbb
out
leave
insb
mov
xchg
shr
inc
jmp
sbb
outsl
in
mulb
cltd
lret
add
sub
call
add
add
mov
aas
push
fwait
sarl
jge
mov
add
lcall
loop
mov
or
into
mov
mov
mov
ret
aad
add
and
add
lock
pop
aad
gs
loope
mov
mov
lret
pop
or
push
xchg
cmpsb
add
cmp
fisubrs
jge
add
adc
xchg
out
mov
or
mov
pop
gs
add
sub
add
orl
add
jae
sti
and
mov
add
push
lret
lods
mov
mov
popa
das
call
cs
fldt
add
mov
pop
sub
and
std
jb
mov
push
add
add
fwait
js
call
addl
mov
jp
xor
mov
lock
mov
cmpsb
test
aad
jge
add
out
ja
pop
xor
lock
pop
lret
xchg
dec
aaa
repz
mov
add
mov
xor
insl
pop
mov
mov
add
xorl
add
mov
mov
sbb
in
mov
xor
ret
leave
es
aam
and
outsl
outsl
cwtl
outsb
nop
add
add
insl
les
mov
push
stc
or
lret
mov
int
jle
test
cwtl
je
add
add
daa
in
add
mov
test
adc
cmc
cmp
aad
mov
fadds
mov
outsb
jl
cmpsb
xchg
push
or
dec
loopne
mov
mov
addl
pushf
jns
dec
and
mov
imul
add
in
mov
adc
imul
repnz
daa
pop
jb
mov
mov
sbb
sbb
lods
adc
out
leave
cmp
pop
test
cli
icebp
jae
push
xchg
add
popa
mov
ljmp
rolb
mov
stos
cwtl
in
cld
cld
jge
filds
jp
lods
jmp
mov
repz
add
push
mov
xor
mov
mov
popa
in
jb
mov
insb
addr16
call
add
clc
nop
add
leave
or
add
int3
jle
adc
mov
icebp
xor
mov
lret
repnz
imul
mov
cmpsl
stos
imul
mov
xchg
mov
xor
dec
dec
cwtl
xorl
test
add
inc
sbb
pop
push
out
xchg
push
xor
mov
xchg
push
clc
add
loop
mov
and
mov
inc
sub
add
repnz
nop
cld
jae
lds
mov
jmp
add
add
mov
sub
clc
repnz
nop
cld
jae
fiaddl
add
test
add
clc
repnz
nop
cld
jae
hlt
inc
add
and
repnz
nop
cld
jae
add
add
testl
push
mov
nop
leave
jmp
add
push
add
cs
clc
repnz
nop
cld
jae
sti
and
add
add
dec
add
clc
repnz
nop
cld
jae
pop
add
inc
hlt
add
push
dec
pop
push
mov
nop
leave
jmp
add
add
roll
add
sbb
popa
add
repnz
nop
cld
jae
inc
inc
dec
fcmovb
inc
pop
cmpw
push
mov
nop
leave
jmp
add
mov
movswl
clc
repnz
nop
cld
jae
shlb
leave
clc
repnz
nop
cld
jae
inc
pop
add
add
into
push
push
mov
xchg
ret
add
fiaddl
out
sbb
mov
push
mov
nop
leave
jmp
mov
and
mov
clc
repnz
nop
cld
jae
mov
add
mov
out
inc
add
fidivrl
add
clc
repnz
nop
cld
jae
dec
cld
add
add
add
clc
repnz
nop
cld
jae
mov
inc
int3
mov
clc
repnz
nop
cld
jae
cltd
push
mov
add
mov
loop
mov
mov
aad
add
add
mov
in
nop
leave
jmp
shrb
cmpsb
jl
push
mov
nop
leave
jmp
lds
add
loope
add
imul
add
add
repnz
nop
cld
jae
mov
add
cld
jae
lods
mov
test
push
mov
nop
leave
jmp
dec
mov
rolb
mov
mov
outsb
and
add
repnz
nop
cld
jae
rolb
imul
sub
dec
mov
sub
mov
push
mov
jmp
je
add
aas
add
add
add
pushf
mov
add
clc
repnz
nop
cld
jae
add
bound
mov
mov
add
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
pop
add
add
cltd
ret
push
mov
xchg
ret
bound
push
rolb
filds
fildll
jp
in
int3
add
cmp
adc
add
xchg
movsl
add
mov
mov
test
sbb
push
mov
nop
leave
jmp
sti
mov
pushf
add
in
mov
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
add
mov
add
mov
clc
repnz
nop
cld
jae
add
inc
out
add
dec
mov
push
mov
xchg
ret
mov
sarb
aad
pop
mov
push
mov
nop
leave
jmp
add
filds
aas
add
lea
push
mov
xchg
ret
scas
add
mov
clc
repnz
nop
cld
jae
mov
inc
hlt
add
inc
aaa
jo
mov
add
clc
repnz
nop
cld
jae
add
xchg
add
xchg
mov
add
add
in
nop
leave
jmp
add
add
rcl
push
xchg
add
xor
clc
repnz
nop
cld
jae
pushf
add
mov
clc
repnz
nop
cld
jae
add
add
mov
add
pop
jecxz
add
out
add
add
fisubl
jnp
flds
mov
nop
leave
jmp
add
fildll
pop
push
mov
nop
leave
jmp
add
push
gs
and
mov
jp
clc
repnz
nop
cld
jae
add
sti
add
mov
nop
nop
cld
jae
add
mov
filds
sti
jmp
add
clc
repnz
nop
cld
jae
loope
add
fwait
add
fs
add
add
sub
es
nop
leave
jmp
add
mov
pop
icebp
inc
into
cmp
push
mov
xchg
ret
inc
add
add
cmpl
jae
add
add
push
clc
repnz
nop
cld
jae
add
test
mov
cmp
push
mov
xchg
ret
ror
fildll
mov
or
add
repnz
nop
cld
jae
mov
ret
add
dec
enter
cmp
ret
stos
fiaddl
add
scas
cld
aaa
lds
add
mov
clc
repnz
nop
cld
jae
add
sbb
in
sbb
add
dec
add
sbb
add
enter
pop
jmp
add
dec
add
add
push
pop
clc
repnz
nop
cld
jae
add
add
push
pop
xor
pop
add
clc
repnz
nop
cld
jae
add
adc
repnz
nop
cld
jae
push
out
mov
add
filds
add
dec
add
add
jns
add
scas
pop
push
mov
xchg
ret
push
inc
mov
repz
sti
xor
clc
repnz
nop
cld
jae
add
add
push
test
mov
xchg
ret
int
mov
xor
adcl
mov
clc
repnz
nop
cld
jae
inc
add
add
mov
push
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
add
and
push
mov
xchg
ret
hlt
add
add
sbb
mov
push
mov
nop
leave
jmp
mov
stos
add
je
clc
repnz
nop
cld
jae
add
add
subl
push
mov
nop
leave
jmp
dec
lods
add
add
sar
nop
nop
cld
jae
add
add
add
jbe
clc
repnz
nop
cld
jae
add
pop
data16
ret
clc
repnz
nop
cld
jae
je
add
scas
test
add
xchg
push
repnz
nop
cld
jae
add
out
add
add
push
mov
xchg
ret
add
mov
sbb
add
cs
insb
clc
repnz
nop
cld
jae
dec
hlt
int
jb
mov
add
repnz
nop
cld
jae
add
add
lcall
in
add
test
add
adc
in
nop
leave
jmp
je
add
add
mov
cmp
in
nop
leave
jmp
add
dec
xchg
push
or
jne
clc
repnz
nop
cld
jae
mov
loope
add
push
mov
xchg
ret
int
loope
mov
push
pop
jne
clc
repnz
nop
cld
jae
add
or
nop
cld
jae
lds
add
push
push
mov
xchg
ret
add
add
inc
add
or
repnz
nop
cld
jae
mov
pop
push
nop
cld
jae
cltd
and
aas
ror
add
push
clc
repnz
nop
cld
jae
stos
add
loope
mov
adc
mov
rolb
mov
and
inc
add
sub
add
clc
repnz
nop
cld
jae
scas
add
pop
add
pop
cmp
test
nop
nop
cld
jae
add
add
add
repnz
nop
cld
jae
inc
mov
pop
pop
clc
repnz
nop
cld
jae
enter
and
add
pop
mov
clc
repnz
nop
cld
jae
add
roll
call
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
fistps
push
call
nop
cld
jae
add
add
je
cltd
push
repnz
nop
cld
jae
add
add
shll
push
clc
repnz
nop
cld
jae
dec
add
and
add
add
leave
jmp
add
add
add
adc
add
jmp
add
mov
xchg
add
add
push
mov
nop
leave
jmp
roll
fbld
stos
addr16
sub
push
mov
xchg
ret
add
xchg
add
add
or
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
filds
mov
add
shlb
lcall
repnz
nop
cld
jae
mov
filds
lcall
add
shlb
inc
shrl
add
sub
inc
xlat
inc
add
shrb
repnz
nop
cld
jae
out
cltd
and
add
loope
push
out
je
clc
repnz
nop
cld
jae
mov
sti
mov
repnz
nop
cld
jae
test
add
add
mov
add
push
add
inc
pop
cltd
add
add
scas
out
call
clc
repnz
nop
cld
jae
rol
add
add
clc
repnz
nop
cld
jae
pop
cltd
add
leave
sub
in
nop
leave
jmp
aas
add
roll
fistpll
lea
push
mov
nop
leave
jmp
dec
pop
and
cld
sub
adc
mov
mov
jno
sub
nop
nop
cld
jae
add
add
rcll
movl
lds
hlt
add
push
mov
xchg
ret
mov
add
mov
push
mov
nop
leave
jmp
add
mov
push
mov
xchg
ret
inc
filds
add
add
inc
bound
mov
movzwl
push
mov
nop
leave
jmp
add
addb
dec
add
clc
repnz
nop
cld
jae
add
add
add
jnp
dec
cmp
repnz
nop
cld
jae
mov
jns
xor
clc
repnz
nop
cld
jae
add
nop
mov
mov
push
mov
xchg
ret
add
je
mov
add
push
mov
nop
leave
jmp
add
scas
add
fildll
lods
faddl
xchg
ret
and
inc
add
mov
and
mov
shr
clc
repnz
nop
cld
jae
shr
nop
add
sarl
int
pop
jae
repnz
nop
cld
jae
add
test
test
add
add
repnz
nop
cld
jae
mov
xlat
or
mov
cmp
ret
add
add
jne
clc
repnz
nop
cld
jae
and
inc
scas
add
sub
movsb
push
mov
nop
leave
jmp
inc
inc
lods
mov
and
add
add
clc
repnz
nop
cld
jae
inc
inc
push
rolb
mov
mov
mov
push
mov
nop
leave
jmp
add
add
dec
add
mov
jge
add
roll
cltd
xchg
dec
loop
add
in
nop
leave
jmp
shll
cltd
add
sub
clc
repnz
nop
cld
jae
add
add
cld
add
dec
mov
jmp
mov
add
mov
cld
mov
mov
xchg
ret
sti
out
add
loope
lds
pop
jmp
nop
cld
jae
add
stos
and
add
repnz
nop
cld
jae
inc
add
dec
push
push
mov
xchg
ret
mov
add
imul
clc
repnz
nop
cld
jae
scas
add
add
inc
push
cld
push
push
mov
xchg
ret
mov
rol
cltd
fmuls
mov
nop
leave
jmp
add
push
jns
mov
dec
push
mov
xchg
ret
loope
aas
add
mov
mov
xchg
ret
rolb
add
mov
mov
add
inc
add
inc
add
enter
sub
add
add
clc
repnz
nop
cld
jae
add
add
in
nop
leave
jmp
add
add
scas
je
jns
and
push
mov
xchg
ret
push
repz
add
add
repnz
nop
cld
jae
rolb
add
push
mov
nop
leave
jmp
hlt
repz
add
push
mov
xchg
ret
add
mov
clc
repnz
nop
cld
jae
mov
push
add
mov
nop
nop
cld
jae
lods
mov
insl
push
push
mov
xchg
ret
add
add
sar
and
add
push
mov
nop
leave
jmp
add
add
scas
add
push
clc
repnz
nop
cld
jae
inc
push
out
rolb
push
div
clc
repnz
nop
cld
jae
fidivrl
inc
sub
cmp
in
nop
leave
jmp
mov
xchg
sti
jns
or
repnz
nop
cld
jae
add
add
and
mov
add
clc
repnz
nop
cld
jae
add
push
cmp
je
pushl
add
dec
mov
add
inc
add
addb
pop
je
clc
repnz
nop
cld
jae
add
shl
mov
pop
mov
clc
repnz
nop
cld
jae
add
add
jg
clc
repnz
nop
cld
jae
mov
gs
loope
sub
mov
nop
nop
cld
jae
mov
xchg
lds
sbb
repnz
nop
cld
jae
dec
add
add
lock
mov
xchg
ret
dec
data16
mov
scas
add
jmp
add
add
repz
add
jo
mov
dec
add
mov
xchg
ret
lods
mov
pop
or
iret
or
inc
add
add
add
add
pop
push
mov
nop
leave
jmp
add
add
mov
push
inc
add
addb
bound
mov
add
inc
add
add
add
mov
shrl
mov
nop
leave
jmp
mov
mov
sahf
mov
push
mov
nop
leave
jmp
add
mov
out
je
add
clc
repnz
nop
cld
jae
fiaddl
mov
mov
mov
xchg
ret
pop
shrl
inc
and
mov
mov
clc
repnz
nop
cld
jae
je
out
add
xchg
clc
repnz
nop
cld
jae
hlt
sarb
mov
cli
mov
clc
repnz
nop
cld
jae
rolb
mov
nop
nop
cld
jae
dec
add
add
pushf
popa
clc
repnz
nop
cld
jae
je
test
push
xor
push
mov
xchg
ret
add
repz
shl
rolb
lcall
jmp
add
add
loope
mov
push
cmp
clc
repnz
nop
cld
jae
add
stos
ficompl
push
mov
nop
leave
jmp
hlt
sbb
mov
add
mov
clc
repnz
nop
cld
jae
add
mov
nop
cld
jae
add
add
fstpl
repnz
nop
cld
jae
add
add
add
lods
call
clc
repnz
nop
cld
jae
add
add
pop
inc
sub
add
inc
add
mov
add
and
jne
clc
repnz
nop
cld
jae
dec
mov
adc
mov
push
mov
nop
leave
jmp
add
add
insw
xor
clc
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
add
add
inc
add
in
nop
leave
jmp
gs
push
cltd
add
push
dec
sti
lea
clc
repnz
nop
cld
jae
rolb
sbb
int
jge
push
mov
nop
leave
jmp
mov
add
adc
clc
repnz
nop
cld
jae
hlt
mov
cli
mov
clc
repnz
nop
cld
jae
add
mov
fldl
xchg
ret
fs
mov
add
ja
clc
repnz
nop
cld
jae
mov
mov
incb
nop
nop
cld
jae
mov
add
imul
cld
jae
add
dec
pushf
addb
adc
imul
clc
repnz
nop
cld
jae
scas
add
add
xor
push
mov
xchg
ret
add
add
fs
clc
repnz
nop
cld
jae
add
add
add
inc
xor
push
mov
xchg
ret
push
rolb
push
and
repnz
nop
cld
jae
add
data16
push
clc
repnz
nop
cld
jae
add
xchg
add
add
add
arpl
pushl
clc
repnz
nop
cld
jae
rolb
pushf
add
movsb
lods
stos
clc
repnz
nop
cld
jae
add
cltd
pop
cltd
mov
and
inc
or
mov
xchg
ret
pop
add
lods
add
rol
xchg
mov
clc
repnz
nop
cld
jae
add
rolb
add
aam
mov
nop
nop
cld
jae
add
add
lds
scas
cmp
push
mov
nop
leave
jmp
cld
cld
filds
jae
mov
clc
repnz
nop
cld
jae
sti
mov
movsb
jnp
je
add
clc
repnz
nop
cld
jae
add
add
sbb
ret
clc
repnz
nop
cld
jae
int
mov
aas
xchg
clc
repnz
nop
cld
jae
test
mov
add
xor
mov
clc
repnz
nop
cld
jae
add
add
xchg
inc
add
push
pushw
data16
filds
lods
mov
clc
repnz
nop
cld
jae
add
cld
lods
fsubr
in
add
clc
repnz
nop
cld
jae
mov
add
int3
rep
clc
repnz
nop
cld
jae
add
inc
add
cli
mov
clc
repnz
nop
cld
jae
je
dec
add
mov
mov
clc
repnz
nop
cld
jae
add
inc
sub
add
push
mov
xchg
ret
add
rolb
sti
add
pop
adc
repnz
nop
cld
jae
add
add
dec
jg
popa
add
mov
xchg
ret
enter
push
mov
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
push
mov
clc
repnz
nop
cld
jae
add
mov
nop
leave
jmp
sub
sbb
repz
xor
in
nop
leave
jmp
test
push
add
inc
aas
add
add
add
add
clc
repnz
nop
cld
jae
add
mov
push
add
xor
clc
repnz
nop
cld
jae
mov
add
movswl
clc
repnz
nop
cld
jae
dec
mov
xchg
push
mov
xchg
ret
inc
sar
hlt
inc
add
mov
call
add
hlt
mov
fs
add
or
clc
repnz
nop
cld
jae
add
repz
push
clc
repnz
nop
cld
jae
test
push
sti
add
add
xor
mov
add
jae
dec
xchg
add
mov
nop
leave
jmp
sti
enter
pop
loope
mov
dec
mov
push
mov
xchg
ret
add
sbb
clc
repnz
nop
cld
jae
sbb
push
sbb
test
ljmp
cld
jae
repz
push
mov
xchg
ret
fisttps
xchg
and
add
add
popa
add
repnz
nop
cld
jae
stos
int
add
cmp
mov
nop
leave
jmp
je
and
scas
fidivrl
nop
nop
cld
jae
add
xchg
gs
push
clc
repnz
nop
cld
jae
add
roll
add
rolb
mov
jmp
nop
leave
jmp
add
sbb
imul
clc
repnz
nop
cld
jae
mov
nop
gs
shrl
mov
clc
repnz
nop
cld
jae
add
push
add
enter
push
mov
nop
leave
jmp
add
fs
out
incl
jne
clc
repnz
nop
cld
jae
add
push
pop
pop
push
mov
nop
leave
jmp
add
add
nop
iret
push
clc
repnz
nop
cld
jae
add
add
ds
clc
repnz
nop
cld
jae
scas
push
add
sub
mov
clc
repnz
nop
cld
jae
test
push
push
mov
nop
leave
jmp
add
hlt
enter
mov
mov
push
mov
xchg
ret
add
add
add
add
not
clc
repnz
nop
cld
jae
add
and
pushf
mov
push
clc
repnz
nop
cld
jae
xchg
scas
add
add
add
loope
add
clc
repnz
nop
cld
jae
add
push
xchg
inc
add
mov
nop
leave
jmp
add
mov
in
nop
leave
jmp
out
data16
mov
add
adc
mov
nop
leave
jmp
add
add
add
test
repnz
nop
cld
jae
pushf
data16
leave
mov
jmp
add
add
add
xchg
push
mov
xchg
ret
add
push
je
cmp
mov
xchg
ret
hlt
add
add
add
add
clc
repnz
nop
cld
jae
add
inc
and
pusha
clc
repnz
nop
cld
jae
add
shll
add
pusha
add
in
nop
leave
jmp
je
loope
add
add
icebp
adc
mov
mov
inc
add
add
push
add
sub
stos
push
mov
nop
leave
jmp
mov
add
add
mov
je
clc
repnz
nop
cld
jae
lods
gs
xchg
mov
mov
nop
leave
jmp
add
sbb
add
sbb
mov
nop
leave
jmp
test
inc
nop
add
add
sub
repnz
nop
cld
jae
mov
add
enter
nop
cld
jae
je
je
test
inc
fs
jne
push
mov
nop
leave
jmp
add
dec
gs
mov
clc
repnz
nop
cld
jae
add
mov
pop
jmp
add
add
add
inc
adc
mov
nop
cld
jae
lods
dec
nop
fs
add
fbstp
add
mov
xchg
ret
bound
pushf
add
add
add
mov
xchg
ret
aas
out
add
mov
pop
push
mov
xchg
ret
shrb
push
push
in
xor
push
mov
xchg
ret
je
add
add
add
leave
and
clc
repnz
nop
cld
jae
and
add
add
jnp
jne
push
mov
xchg
ret
scas
out
add
add
mov
clc
repnz
nop
cld
jae
loope
add
std
test
push
mov
nop
leave
jmp
add
cltd
scas
add
add
add
mov
xchg
ret
pop
push
mov
push
fs
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
out
push
insl
mov
clc
repnz
nop
cld
jae
cltd
add
dec
add
clc
repnz
nop
cld
jae
add
cmp
push
mov
xchg
ret
filds
push
int
add
das
add
push
mov
nop
leave
jmp
mov
push
add
lods
clc
repnz
nop
cld
jae
add
mov
lret
push
mov
xchg
ret
inc
add
add
mov
clc
repnz
nop
cld
jae
inc
int
out
dec
push
mov
xchg
ret
rolb
data16
add
out
testb
outsb
dec
push
mov
xchg
ret
test
cltd
cltd
add
add
int
add
repnz
nop
cld
jae
lds
add
add
add
cmpsb
add
int
inc
pop
in
add
pop
add
xor
add
push
mov
nop
leave
jmp
filds
mov
add
add
clc
repnz
nop
cld
jae
filds
add
mov
add
add
in
nop
leave
jmp
add
add
in
add
push
mov
nop
leave
jmp
add
add
out
inc
adc
mov
pop
clc
repnz
nop
cld
jae
mov
fisubl
add
mov
sbb
mov
nop
leave
jmp
gs
hlt
je
add
add
add
repnz
nop
cld
jae
add
add
loop
mov
add
inc
and
mov
nop
leave
jmp
add
dec
add
inc
enter
adc
repnz
nop
cld
jae
rolb
dec
add
call
nop
nop
cld
jae
scas
add
out
fiaddl
scas
imul
add
add
repnz
nop
cld
jae
bound
cmpl
cld
jae
fs
push
or
add
in
nop
leave
jmp
mov
lock
in
clc
repnz
nop
cld
jae
add
add
lods
clc
repnz
nop
cld
jae
add
dec
inc
jns
sbb
clc
repnz
nop
cld
jae
mov
add
mov
add
clc
repnz
nop
cld
jae
test
hlt
add
aam
mov
clc
repnz
nop
cld
jae
filds
insb
push
mov
add
test
imul
pushf
pushl
push
mov
xchg
ret
gs
add
dec
enter
popa
add
mov
xchg
ret
add
add
dec
and
mov
mov
add
add
in
nop
leave
jmp
pop
add
je
mov
repnz
nop
cld
jae
add
mov
mov
xchg
ret
stos
mov
aas
add
cmpl
push
mov
nop
leave
jmp
add
add
add
add
push
mov
nop
leave
jmp
cld
add
nop
bound
jne
clc
repnz
nop
cld
jae
add
sub
clc
repnz
nop
cld
jae
out
add
out
push
add
push
mov
nop
leave
jmp
add
add
mov
repnz
nop
cld
jae
inc
mov
mov
mov
nop
leave
jmp
add
int
stos
inc
add
add
mov
add
clc
repnz
nop
cld
jae
add
dec
inc
sbb
nop
nop
cld
jae
add
ret
sbb
mov
xchg
ret
add
filds
add
add
add
inc
add
mov
add
mov
push
mov
nop
nop
cld
jae
add
hlt
into
add
clc
repnz
nop
cld
jae
stos
and
mov
mov
jmp
add
filds
add
add
dec
and
mov
mov
jne
clc
repnz
nop
cld
jae
mov
mov
mov
xchg
ret
add
shr
push
jbe
clc
repnz
nop
cld
jae
add
add
je
mov
test
out
clc
repnz
nop
cld
jae
push
add
push
dec
jne
clc
repnz
nop
cld
jae
pushf
scas
add
nop
nop
cld
jae
sub
add
insl
and
push
mov
nop
leave
jmp
lds
loope
add
jnp
in
push
mov
nop
leave
jmp
je
sub
adc
add
call
nop
nop
cld
jae
add
inc
mov
aad
pop
clc
repnz
nop
cld
jae
add
inc
loope
add
popa
aad
inc
rolb
mov
push
push
mov
xchg
ret
mov
fs
push
and
pop
clc
repnz
nop
cld
jae
push
test
mov
mov
add
inc
add
add
add
fbstp
clc
repnz
nop
cld
jae
add
lds
inc
xor
call
clc
repnz
nop
cld
jae
and
fs
add
mov
mov
mov
push
mov
nop
leave
jmp
filds
add
add
sbb
add
in
nop
leave
jmp
inc
add
dec
jle
clc
repnz
nop
cld
jae
add
xchg
gs
add
or
nop
nop
cld
jae
jns
dec
mov
add
mov
xchg
ret
add
dec
sti
mov
add
nop
nop
cld
jae
add
inc
inc
add
xchg
call
in
nop
leave
jmp
add
add
mov
nop
leave
jmp
add
push
repz
cmp
popa
add
repnz
nop
cld
jae
inc
add
stos
push
mov
nop
leave
jmp
add
add
add
add
dec
movsb
cmp
mov
xchg
ret
mov
int
sub
cmp
clc
repnz
nop
cld
jae
add
add
ffreep
xchg
addr16
and
push
mov
xchg
ret
add
add
les
mov
xchg
ret
dec
filds
sub
add
lea
push
mov
xchg
ret
mov
add
xlat
out
add
clc
repnz
nop
cld
jae
add
repz
pop
push
mov
lods
pop
leave
das
add
add
lds
adc
pop
je
push
mov
nop
leave
jmp
mov
add
add
nop
nop
cld
jae
rclb
add
mov
adc
mov
nop
leave
jmp
add
add
lea
clc
repnz
nop
cld
jae
push
scas
pop
add
add
fisttpll
in
nop
leave
jmp
add
add
add
inc
and
cmpw
push
mov
nop
leave
jmp
mov
lret
push
clc
repnz
nop
cld
jae
dec
add
add
mov
and
mov
les
add
push
mov
xchg
ret
pushw
repz
punpcklbw
in
nop
leave
jmp
add
fildll
add
mov
clc
repnz
nop
cld
jae
fbld
out
mov
push
mov
xchg
ret
int
add
add
and
repnz
nop
cld
jae
sbb
lds
push
mov
xchg
ret
inc
add
mov
mov
nop
cld
jae
add
inc
inc
add
add
scas
add
clc
repnz
nop
cld
jae
push
add
add
add
add
push
mov
nop
leave
jmp
sti
sti
repz
popa
add
mov
xchg
ret
add
dec
add
push
add
add
clc
repnz
nop
cld
jae
and
add
mov
mov
jae
repnz
nop
cld
jae
mov
cs
clc
repnz
nop
cld
jae
add
sub
call
clc
repnz
nop
cld
jae
scas
inc
mov
cltd
push
clc
repnz
nop
cld
jae
add
add
rolb
jb
mov
nop
leave
jmp
add
add
push
mov
icebp
sbb
mov
inc
add
inc
data16
int
jo
mov
xor
clc
repnz
nop
cld
jae
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
inc
push
dec
das
and
clc
repnz
nop
cld
jae
add
popa
clc
repnz
nop
cld
jae
add
add
add
add
and
mov
xbegin
jae
nop
pop
scas
add
gs
push
mov
nop
leave
jmp
pushf
add
add
add
lods
movzwl
push
mov
nop
leave
jmp
mov
dec
xchg
repz
repnz
nop
cld
jae
add
inc
lods
add
mov
push
mov
nop
leave
jmp
sti
add
scas
and
mov
idiv
repnz
nop
cld
jae
add
mov
add
scas
out
mov
push
mov
xchg
ret
add
and
clc
repnz
nop
cld
jae
mov
xchg
mov
add
add
repnz
nop
cld
jae
mov
out
add
jmp
clc
repnz
nop
cld
jae
add
add
sti
add
lods
dec
push
mov
nop
leave
jmp
add
add
add
dec
add
mov
nop
leave
jmp
int
pop
inc
add
je
add
pusha
clc
repnz
nop
cld
jae
add
add
mov
push
push
mov
nop
leave
jmp
add
scas
je
add
add
add
sub
xchg
incl
add
mov
add
add
int
lea
in
xlat
lret
xor
adc
add
mov
clc
repnz
nop
cld
jae
mov
mov
fists
in
add
lods
in
cmpsb
add
add
add
add
clc
repnz
nop
cld
jae
add
inc
add
add
std
jmp
cltd
scas
add
add
add
inc
roll
add
mov
xchg
ret
shlb
mov
push
cmpsl
push
mov
clc
repnz
nop
cld
jae
inc
add
es
fisubrl
push
mov
xchg
ret
add
add
jle
sar
repnz
nop
cld
jae
enter
push
add
repz
add
add
aas
roll
add
call
clc
repnz
nop
cld
jae
mov
xchg
push
add
cmp
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
mov
add
mov
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
add
fbld
jns
dec
cmp
repnz
nop
cld
jae
add
add
nop
nop
pop
lea
push
mov
xchg
ret
hlt
and
add
adc
repnz
nop
cld
jae
mov
jmp
add
add
add
mov
add
inc
shr
add
add
add
in
nop
leave
jmp
add
xchg
add
push
push
mov
xchg
ret
cld
add
filds
cwtl
mov
clc
repnz
nop
cld
jae
dec
and
inc
dec
lea
push
mov
nop
leave
jmp
add
fs
in
mov
push
mov
xchg
ret
add
push
cwtl
pop
push
mov
xchg
ret
push
add
add
push
push
mov
xchg
ret
add
add
jg
sar
repnz
nop
cld
jae
mov
pushf
add
nop
nop
cld
jae
out
hlt
add
add
jns
jbe
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
add
mov
enter
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
stos
mov
fildll
lods
lock
incl
fs
push
fiaddl
mov
pop
mov
clc
repnz
nop
cld
jae
cld
add
add
add
pop
cltd
add
jmp
lcall
loope
out
add
add
add
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
repz
add
add
clc
repnz
nop
cld
jae
xchg
add
fiaddl
sbb
xor
clc
repnz
nop
cld
jae
loope
inc
and
add
in
xor
jnp
adc
insl
add
sbb
and
fwait
cmpl
push
mov
nop
leave
jmp
scas
add
add
push
clc
repnz
nop
cld
jae
shrb
filds
add
scas
add
push
mov
nop
leave
jmp
nop
xchg
add
add
mov
aam
test
push
mov
nop
leave
jmp
add
add
movzwl
clc
repnz
nop
cld
jae
mov
inc
jns
inc
adc
repnz
nop
cld
jae
mov
add
push
push
mov
xchg
ret
sbb
add
add
mov
clc
repnz
nop
cld
jae
mov
push
push
mov
nop
leave
jmp
rolb
xchg
dec
out
inc
add
test
call
push
mov
nop
leave
jmp
gs
add
clc
repnz
nop
cld
jae
add
add
add
mov
fcos
push
cltd
mov
repz
add
sarl
cli
push
push
mov
xchg
ret
mov
add
push
clc
repnz
nop
cld
jae
add
add
add
mov
jmp
jae
clc
repnz
nop
cld
jae
inc
add
mov
mov
mov
dec
adc
sub
inc
add
add
rolb
shl
std
push
clc
repnz
nop
cld
jae
add
add
add
shll
push
push
iret
add
clc
repnz
nop
cld
jae
add
add
add
stos
loope
mov
mov
jmp
add
rolb
add
rolb
add
xor
inc
add
je
je
inc
add
repnz
nop
cld
jae
mov
push
add
imul
clc
repnz
nop
cld
jae
scas
loope
fildll
jle
adc
push
mov
nop
leave
jmp
add
fbld
mov
iret
push
clc
repnz
nop
cld
jae
sti
and
add
add
add
add
iret
fildl
xchg
ret
rcr
mov
rolb
add
cli
push
push
mov
xchg
ret
add
lods
sti
add
mov
cmc
jge
inc
and
clc
repnz
nop
cld
jae
add
add
repz
clc
repnz
nop
cld
jae
add
bound
loop
mov
nop
leave
jmp
ficompl
add
sar
repnz
nop
cld
jae
push
add
mov
clc
repnz
nop
cld
jae
pop
loope
fistpll
repnz
nop
cld
jae
push
add
add
add
movsb
imul
push
mov
nop
leave
jmp
add
add
rep
clc
repnz
nop
cld
jae
fs
mov
shl
fcmovnb
or
clc
repnz
nop
cld
jae
add
lds
dec
add
adc
push
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
sti
or
inc
stos
add
add
out
add
out
repz
js
mov
or
add
repnz
nop
cld
jae
add
push
pop
add
clc
repnz
nop
cld
jae
add
scas
and
xchg
mov
mov
mov
nop
leave
jmp
dec
cld
add
add
mov
clc
repnz
nop
cld
jae
inc
push
lods
add
roll
mov
mov
in
nop
leave
jmp
add
gs
mov
cmp
mov
xchg
ret
xchg
add
add
clc
repnz
nop
cld
jae
add
data16
add
mov
add
push
mov
xchg
ret
nop
add
dec
stos
add
mov
xchg
ret
filds
add
clc
repnz
nop
cld
jae
add
add
add
add
fs
cmc
outsb
pop
clc
repnz
nop
cld
jae
cld
repz
adc
xor
add
clc
repnz
nop
cld
jae
dec
mov
push
clc
repnz
nop
cld
jae
push
add
fildll
push
clc
repnz
nop
cld
jae
inc
add
rclb
inc
std
clc
repnz
nop
cld
jae
fs
jne
das
mov
push
mov
xchg
ret
add
out
bound
inc
jge
push
mov
nop
leave
jmp
add
add
add
add
mov
nop
cld
jae
sbb
out
dec
iret
cmpl
push
mov
nop
leave
jmp
add
push
and
idiv
clc
repnz
nop
cld
jae
add
rol
subl
push
mov
xchg
ret
pop
mov
into
shl
clc
repnz
nop
cld
jae
aas
and
pop
dec
add
nop
nop
cld
jae
dec
mov
pop
push
add
xor
mov
inc
jb
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
rolb
scas
push
xchg
mov
clc
repnz
nop
cld
jae
rolb
aas
inc
int
mov
clc
repnz
nop
cld
jae
add
lea
sar
nop
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
add
pop
add
mov
fiadds
xchg
ret
add
add
inc
mov
add
nop
nop
cld
jae
add
hlt
rolb
add
ret
jbe
jecxz
xorl
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
fidivrl
add
mov
clc
repnz
nop
cld
jae
dec
inc
mov
scas
xor
nop
nop
cld
jae
push
inc
mov
lods
and
imul
nop
nop
cld
jae
cld
lds
add
in
nop
leave
jmp
add
add
add
leave
push
mov
nop
leave
jmp
inc
mov
add
test
sar
clc
repnz
nop
cld
jae
dec
inc
pop
pop
rep
clc
repnz
nop
cld
jae
repz
xchg
mov
add
clc
repnz
nop
cld
jae
dec
cld
add
add
lods
mov
clc
repnz
nop
cld
jae
add
pusha
add
clc
repnz
nop
cld
jae
add
ret
out
add
push
mov
xchg
ret
rolb
pushf
add
add
arpl
add
sub
test
cmc
clc
repnz
nop
cld
jae
inc
add
push
ret
aas
jne
clc
repnz
nop
cld
jae
pop
add
xchg
xlat
xchg
mov
push
mov
xchg
ret
data16
add
dec
cmp
repnz
nop
cld
jae
dec
xchg
add
dec
mov
clc
repnz
nop
cld
jae
add
scas
add
pop
add
push
mov
scas
jmp
dec
add
jl
add
adc
adc
push
mov
inc
dec
add
push
cmpb
rorl
lods
andl
mov
push
mov
nop
leave
jmp
hlt
mov
add
add
mov
xchg
ret
add
add
int
popf
push
push
mov
xchg
ret
mov
add
add
imul
nop
leave
jmp
add
add
add
xor
add
clc
repnz
nop
cld
jae
roll
adc
mov
cwtl
xor
jmp
incl
add
scas
rolb
add
pushf
scas
popa
in
push
push
mov
nop
leave
jmp
add
add
mov
nop
leave
jmp
and
add
add
lods
je
clc
repnz
nop
cld
jae
shll
in
pop
inc
mov
add
add
loope
mov
repz
repnz
nop
cld
jae
repz
inc
cld
fucomip
dec
add
clc
repnz
nop
cld
jae
add
add
dec
out
movzwl
push
mov
nop
leave
jmp
add
fistps
add
add
repnz
nop
cld
jae
add
bound
add
and
adc
mov
add
push
mov
nop
leave
jmp
add
lods
loope
add
sub
mov
mov
xchg
ret
add
push
push
pop
add
inc
movsl
nop
add
sub
inc
add
fistpll
add
add
mov
xchg
ret
mov
je
add
loopne
mov
xchg
ret
add
enter
int
popa
clc
repnz
nop
cld
jae
mov
add
add
add
mov
clc
repnz
nop
cld
jae
inc
cld
sti
add
je
xor
push
clc
repnz
nop
cld
jae
fildll
add
mov
add
repnz
nop
cld
jae
pop
push
sub
repnz
nop
cld
jae
mov
aas
sar
fsubl
xor
add
clc
repnz
nop
cld
jae
add
clc
mov
clc
repnz
nop
cld
jae
add
add
add
mov
add
push
movsb
jns
jb
push
mov
xchg
ret
scas
add
add
inc
sub
repnz
nop
cld
jae
add
inc
out
pop
add
movzwl
clc
repnz
nop
cld
jae
add
add
scas
xlat
out
xor
clc
repnz
nop
cld
jae
enter
dec
pusha
push
mov
xchg
ret
pop
enter
mov
nop
add
je
js
mov
xchg
ret
jns
push
push
mov
add
mov
pop
add
xor
add
sbb
sub
mov
xchg
ret
add
add
dec
add
pop
in
add
pop
aam
clc
repnz
nop
cld
jae
mov
movb
add
clc
repnz
nop
cld
jae
add
push
push
in
add
mov
sbb
loop
add
decl
cli
xchg
mov
mov
mov
dec
iret
xor
es
push
negb
add
jo
mov
sub
pop
ljmp
rolb
xchg
add
test
out
cmpsl
repnz
xchg
icebp
jl
rcrl
mov
inc
pop
in
sarl
add
mov
cmpsl
fcomip
add
adc
cmpsb
cltd
ds
mov
repnz
mov
mov
outsb
push
inc
add
lock
jl
pop
iret
stos
fmull
adc
test
add
or
ds
out
movsl
inc
leave
xchg
mov
cmp
sbb
and
add
fistl
ret
inc
std
cmp
pop
shrl
mov
mov
mov
jl
add
stc
xor
inc
stos
shll
dec
arpl
and
inc
jecxz
in
lea
or
subl
je
add
addb
rolb
mov
cmp
popf
addr16
or
inc
repnz
mov
mov
add
mov
push
inc
add
xorl
mov
mov
rolb
bound
mov
lea
mov
add
fwait
sub
out
pop
mov
shl
cmc
outsl
leave
in
xchg
lds
mov
nop
add
icebp
pop
dec
cmp
mov
jae
in
loopne
mov
int3
add
mov
jnp
test
and
test
inc
fs
add
mov
xor
mov
ss
mov
mov
xor
add
jg
fsts
push
pusha
add
cmpsb
test
mov
ret
xchg
jnp
add
andl
loopne
mov
jmp
add
mov
test
or
add
xchg
incb
add
insl
push
pop
into
sbb
add
ret
les
sub
add
das
push
mov
rorl
jbe
lods
or
sar
push
stc
loope
loope
xchg
jbe
stc
rolb
mov
add
inc
pop
cmp
add
into
mov
es
pop
sub
push
add
lds
js
add
push
sub
push
jg
sub
pop
into
xor
call
mov
add
mov
stc
addr16
push
jo
mov
add
popf
test
cmpl
cmpsl
mov
adc
mov
lods
pop
into
jecxz
mov
mull
xor
cmp
cmp
dec
mov
push
out
lret
mov
rcl
shll
shll
mov
ret
test
mov
cli
jae
cmp
mov
ficomps
jp
add
popf
in
push
add
adc
mov
addb
push
add
push
pop
pop
mov
add
outsl
xchg
add
pushf
mov
add
mov
sub
mov
daa
ret
out
inc
fisttpll
mov
add
sbb
scas
inc
add
jp
leave
sahf
fwait
test
pop
xor
mov
mov
adc
mov
pop
and
mov
mov
bound
mov
repnz
mov
pop
push
cmp
pusha
add
pusha
add
pop
pop
xchg
aaa
scas
xor
push
bound
mov
es
dec
mov
leave
and
mov
stos
mov
roll
xchg
ds
pushf
les
jns
popa
cmp
pop
push
push
mov
pop
cwtl
aaa
loop
mov
add
aas
xchg
scas
push
mov
aad
in
fildll
jmp
out
mov
jmp
xchg
cmp
addb
sub
jnp
push
add
add
stos
lock
aad
dec
arpl
insl
jle,pt
push
pop
ret
movsb
in
mov
mov
jmp
mov
add
add
mov
pop
cmpsl
rcrl
inc
loope
pop
jbe
jecxz
add
mov
aaa
lcall
dec
xchg
add
dec
movsl
and
mov
adc
jno
mov
and
mov
jb
mov
or
push
add
mov
enter
and
imul
cltd
movsb
sbb
popa
adc
cmp
sti
loope
test
rolb
rolb
and
insb
or
inc
push
add
inc
add
sarl
std
cli
out
push
add
inc
add
add
sbb
add
mov
jmp
mov
add
jns
adc
and
mov
cmc
imulb
mov
lods
fsubrl
stc
push
inc
add
in
rolb
mov
scas
inc
xor
xor
mov
repnz
inc
add
mov
cmp
inc
scas
mov
push
insb
pop
adc
mov
add
aaa
cmp
cs
jae
jg
inc
in
mov
icebp
addr16
add
sub
cmp
mov
cmp
sbb
and
pop
repnz
cmpsl
jmp
mov
mov
mov
add
pop
sarl
adc
mov
mov
jo
mov
pop
jecxz
jge
shll
mov
add
add
mov
nop
add
rcll
imul
fs
ret
aaa
or
inc
xchg
testl
or
adc
bound
mov
adc
mov
ss
add
pop
cmp
cltd
mov
mov
xlat
inc
cmp
pop
call
add
add
and
mov
sub
add
pop
repnz
push
dec
dec
xorl
mov
divl
cmpsb
jo
mov
mov
add
mov
notb
mov
cmp
cmpl
mov
clc
inc
ds
iret
mov
mov
xchg
rorl
nop
add
xor
jecxz
js
mov
shll
jge
test
in
jge
inc
xor
jge
divl
mov
jno
outsl
xlat
cmpsl
pop
mul
loopne
mov
mov
xor
mov
xchg
dec
xchg
rolb
mov
andl
add
js
add
fcoml
add
add
mov
mov
add
test
add
mov
fbstp
sbb
ja
mov
imul
adc
jle
add
icebp
inc
cs
test
or
xlat
inc
jg
fwait
lahf
fcmovnb
sbb
pop
hlt
call
jl
add
idiv
add
inc
mov
mov
mov
pop
or
xor
push
xchg
and
mov
sbb
adc
or
dec
sahf
into
xor
mov
jp
jge
mov
jecxz
out
add
fistps
adc
lret
push
gs
loope
mov
es
movsb
addb
adc
in
notb
insl
rolb
mov
xor
mov
jne
sahf
mov
mov
cli
inc
addl
arpl
jge
cmp
jge
aad
lock
jp
add
mov
sti
add
mov
xchg
add
add
in
movsb
pop
xchg
xchg
xchg
push
lds
shrl
adc
lret
mov
push
inc
jg
adc
mov
mov
int
mov
add
jl
add
imul
xchg
je
pop
sbb
stos
and
jp
fs
jno
add
cmp
iret
movsb
sub
cli
pop
xchg
test
and
add
xor
add
xor
mov
add
popa
xchg
or
inc
cmp
jne
add
pop
data16
jge
jecxz
push
xchg
daa
addb
cld
and
mov
add
jb
mov
stos
push
jne
lds
mov
lods
push
loop
mov
test
inc
cs
or
adc
push
xchg
mov
mov
add
leave
add
adc
and
mov
sub
push
pop
aam
jecxz
sub
and
pop
pop
in
push
test
lods
xchg
sbb
loopne
mov
stos
or
add
push
ret
or
dec
sub
adc
mov
cmp
aas
mov
or
out
imul
mov
addb
xor
mov
pushf
bound
mov
xchg
addr16
dec
stos
lret
dec
mov
cmpsl
out
mov
mov
lcall
lahf
jl
add
addb
fcmovne
dec
cmp
movhps
adc
mov
movsl
jle
add
mov
mov
push
mov
add
add
xchg
mov
xchg
add
dec
cwtl
jb
mov
add
pop
in
mov
test
pop
xchg
int
not
add
sbb
add
loope
add
mov
mov
dec
ljmp
mov
in
je
pop
xchg
add
mov
out
aad
mov
push
rolb
mov
jae
sbb
jne
or
add
xlat
aad
inc
call
push
sti
ljmp
dec
popa
std
pop
xor
mov
add
mov
add
mov
and
mov
mov
test
xor
out
stos
sbb
addb
ljmp
int
rolb
mov
incb
inc
or
add
sub
in
cltd
push
push
add
xchg
mov
cmp
add
jge
icebp
in
xor
mov
mov
js
jae
jne
rolb
mov
mov
and
fsubr
in
rolb
xor
xlat
hlt
addb
jnp
jle
xchg
xchg
cmpsb
mov
stc
or
mov
int
enter
lock
inc
inc
dec
out
push
mov
mov
push
jae
fwait
pusha
add
add
mov
mov
push
stc
int
sub
push
push
test
aaa
mov
mov
push
int3
sahf
test
sub
jecxz
add
sbb
cld
jb
mov
hlt
fnsave
dec
mov
cmp
mov
add
mov
mov
or
sub
adc
inc
pushf
pushf
popf
fdivrs
cli
pop
mov
mov
fstpl
xchg
jmp
xchg
mov
hlt
mov
jecxz
add
push
and
pop
cld
das
gs
pop
fs
loopne
mov
cmc
mov
sub
lea
bound
mov
into
shrl
enter
std
insl
jle
pop
push
xor
mov
test
dec
in
mov
dec
jg
lret
test
nop
add
add
jp
out
dec
sub
jne
push
add
mov
mov
aad
lods
imul
xchg
in
inc
jo
mov
pop
mov
or
lea
insb
lret
out
cwtl
xchg
add
fld
sub
add
inc
shrl
lock
bound
mov
mov
out
sbb
repnz
push
dec
inc
pusha
add
movl
mov
clc
adc
mov
mov
and
jp
ret
sub
jg
jno
pop
test
sbb
je
lret
or
pop
or
inc
imulb
loopne
mov
jl
insl
pop
mov
add
jmp
adc
sbb
pop
fsubrp
rolb
mov
nop
add
fsts
prefetcht2
icebp
xlat
ja
lret
pop
stos
or
sahf
cs
orl
xchg
add
add
dec
insl
rolb
mov
push
int3
inc
mov
mov
les
pop
lods
les
cmp
imul
stos
arpl
add
aam
mov
add
mov
mov
movsl
lret
inc
ljmp
xlat
fsubl
add
lret
sbb
adc
aad
scas
inc
lcall
mov
mov
add
sub
add
push
ja
add
sub
mov
jne
sub
mov
sbb
add
add
mov
push
add
push
int3
adc
mov
out
add
in
in
in
aam
popf
adc
push
pop
ret
pop
xlat
xchg
notl
add
add
jmp
adc
sbb
scas
mov
int
movsb
out
and
push
js
cmp
lcall
xchg
cmpsl
enter
outsb
pushl
rcll
mov
mov
jae
es
push
jl
add
mov
enter
stc
test
xor
adc
push
testb
add
add
or
sbb
jae
pop
ret
xlat
dec
adc
jl
inc
lods
xchg
add
popa
insb
pop
adc
add
sbb
mov
push
hlt
loope
add
cmp
dec
dec
pop
imul
add
ficoml
pusha
add
adc
or
add
mov
add
cmp
outsb
push
inc
dec
fs
arpl
mov
push
add
sahf
jle
sahf
lret
bound
mov
cs
add
adc
mov
mov
add
sbb
jae
push
xchg
pusha
add
add
xchg
xchg
add
sbb
shrl
sub
cltd
test
mov
and
mov
add
dec
xchg
addb
pop
cmp
inc
in
jg
rolb
mov
mov
mov
add
test
and
add
mov
fsub
add
push
js
test
add
fcmovne
lods
int
in
cmp
jns
leave
mov
mov
adc
add
mov
mov
loope
add
fisttpl
add
or
mov
clc
in
mov
xchg
pop
sub
sub
add
xor
mov
cmp
mov
nop
add
xor
mov
push
rolb
in
jecxz
lahf
das
aas
loop
mov
in
add
loopne
mov
stc
ja
mov
cmp
jo
mov
add
sbb
sub
sub
icebp
xchg
add
add
dec
sub
icebp
push
add
add
add
sub
xchg
scas
repnz
push
or
lret
lods
push
sbb
cwtl
test
cmpsl
mov
mov
lret
ret
rolb
mov
add
les
test
xchg
or
fwait
jge
lret
mov
movsb
dec
and
sahf
adc
dec
stos
addr16
jle
pop
sbb
inc
jl
daa
pop
cltd
insl
in
in
xchg
es
add
adc
mov
add
imul
mov
xorl
push
inc
inc
fldenv
mov
jg
push
add
sub
xor
mov
adc
mov
xchg
pop
icebp
inc
jb
mov
xchg
xchg
push
or
mov
mov
mov
sub
mov
push
std
mov
aaa
xchg
mov
mov
push
enter
add
cmp
mov
movsb
movb
dec
mov
test
mov
add
jg
ret
loopne
mov
pop
and
mov
or
add
pusha
add
lock
je
add
jl
sbb
aas
cmp
add
xor
add
mov
iret
jns
fs
inc
je
loop
mov
test
adc
mov
dec
lods
push
ja
add
mov
jbe
add
or
sub
cli
mov
sbb
out
lahf
xchg
lods
cmp
lea
jle
sarl
insb
in
sarl
jmp
shl
add
mov
mov
mov
add
xor
mov
dec
sub
mov
jo
mov
mov
js
fisubs
stos
push
push
std
inc
mov
or
cltd
and
mov
jae
push
jmp
in
mov
fdiv
arpl
nop
add
pop
jp
cmpsb
into
mov
fdivr
xchg
add
push
lds
push
pop
sbb
push
in
or
ljmp
mov
add
stos
insl
test
xchg
add
cmc
dec
pop
leave
jae
jl
add
sbb
mov
add
jge
sub
aam
jge
pop
stc
test
mov
mov
rcrl
bound
mov
cmpsl
call
aaa
adc
popl
cmc
loopne
mov
imul
mov
addb
push
add
mov
fmull
stc
mov
fwait
inc
jg
ficomps
or
xchg
add
mov
out
push
scas
xchg
dec
mov
fidivrs
nop
add
add
imull
push
add
sbb
mov
fdivp
add
mov
pop
dec
mov
adc
jle
xchg
add
add
jne
push
add
mov
jle
in
add
mov
aas
enter
or
push
mov
ret
mov
mov
in
adc
ja
rolb
mov
push
xchg
mov
mov
mov
in
addb
test
mov
sub
add
mov
dec
pop
pop
repz
test
mov
fwait
out
xchg
loopne
mov
aam
push
add
and
mov
lods
add
mov
faddl
aas
lock
fcmovnbe
mov
jmp
aam
imul
add
les
aas
in
call
movsl
mov
les
cmp
cmp
jno
add
add
jbe
inc
cs
stos
ret
pop
add
mov
or
push
adc
mov
jno
fimull
jne
add
add
fildl
add
popf
aam
filds
js
cs
jb
mov
pop
adc
xchg
push
add
stos
in
mov
lret
xor
add
lods
rolb
mov
mov
add
xlat
ja
jb
mov
addb
pop
aam
sub
cli
cmp
sub
rolb
mov
inc
subl
lock
es
dec
orl
or
cmp
lcall
xchg
add
xor
mov
icebp
lods
jo
mov
imul
add
push
pushf
inc
mov
cs
jbe
enter
ljmp
push
aad
and
out
in
addb
out
sbb
in
jb
mov
add
test
stos
and
pop
aas
sbb
pop
int3
push
sbb
jmp
mov
mov
mov
add
mov
int3
inc
cli
out
xchg
icebp
pop
outsb
cld
ds
jecxz
mov
mov
mov
xchg
and
movsl
ss
add
mov
sub
scas
mov
mov
test
repnz
lds
addb
std
mov
addb
clc
scas
cmp
add
test
in
inc
adc
arpl
mov
add
add
mov
xchg
test
mov
add
lahf
dec
lods
outsl
stos
pop
or
mov
sub
and
add
mov
sub
ss
mov
add
cmpsb
cmp
push
jo
mov
mov
incl
xchg
mov
jbe
add
daa
loope
cli
mov
rolb
xlat
and
or
mov
mov
and
mov
add
add
lock
aaa
cmp
in
jmp
add
stos
and
rolb
mov
mov
ljmp
das
add
mov
jae
mov
inc
push
jl
inc
and
sbb
adc
inc
lret
pop
in
and
ds
push
test
cmp
jge
add
es
xor
mov
es
mov
add
add
mov
add
mov
mov
add
cmp
gs
mov
mov
pop
ret
sahf
imul
jns
hlt
aas
loope
mov
add
add
mov
icebp
xor
scas
out
add
sbb
popf
adc
push
inc
add
or
dec
scas
nop
add
xchg
push
add
sbb
leave
mov
and
mov
out
das
int
out
mov
cmp
int3
xchg
pop
insb
ret
mov
inc
add
aad
push
add
mov
mov
xchg
inc
in
ficomps
repz
or
movsb
sub
add
inc
mov
add
fbld
mov
mov
and
mov
push
mov
mov
lock
jns
popl
xorl
add
xor
mov
rol
mov
dec
jne
fwait
neg
sub
lcall
mov
inc
mov
or
cmpsl
test
fsts
mov
add
mov
add
cmpsb
xchg
loopne
mov
mov
lea
jp
add
push
ds
add
xor
mov
test
pop
adc
mov
mov
mov
repnz
add
xor
dec
xchg
jmp
stos
faddl
or
mov
inc
in
movsb
es
add
or
mov
pop
pushf
test
imul
jb
mov
inc
mov
in
add
mov
cmpsl
sub
sti
leave
addb
inc
jo
mov
xor
mov
mov
xor
pop
or
add
in
insb
stos
jge
add
ss
mov
add
and
imul
mov
add
mov
xor
iret
sub
mov
ja
jnp
jb
mov
fildll
rolb
mov
mov
jne
jge
out
mov
mov
or
pop
sub
mov
mov
adc
mov
xchg
or
hlt
das
jle
out
adc
mov
outsb
push
add
jae
jg
add
add
mov
shll
fwait
in
sahf
movsb
adc
add
pop
jnp
out
jnp
sub
sbb
adc
add
dec
add
add
add
daa
rolb
mov
rolb
mov
xchg
add
pushf
xor
in
mov
gs
test
xor
mov
mov
mov
inc
add
mov
cmp
test
add
push
xor
mov
add
mov
fisttpl
jp
mov
mov
add
call
je
push
add
inc
scas
mov
mov
enter
loop
mov
inc
jmp
test
and
jl
mov
arpl
addb
iret
insb
or
call
pop
push
add
call
xor
jae
pop
mov
dec
mov
add
outsb
leave
sub
mov
add
scas
jge
add
cli
ja,pt
mov
in
cmc
cs
sbb
aam
add
or
arpl
push
add
xor
push
pop
mov
mull
aas
daa
mov
sbb
xor
add
inc
jg
add
rorl
mul
jg
mov
test
cmc
push
and
sub
fstps
adc
mov
and
iret
cld
int3
cmpsl
jp
mov
xchg
aam
sub
mov
cld
sub
add
adc
mov
xchg
imul
fimull
dec
fildl
mov
leave
js
repz
fs
jmp
add
mov
add
mov
rolb
mov
mov
cmp
decl
pop
jge
in
mov
popf
fidivs
movhps
into
nop
add
movl
add
dec
add
in
repz
xorl
hlt
sbb
ss
sti
pop
xchg
fisttps
push
rolb
mov
mov
push
loop
mov
in
xlat
mov
add
jne
add
add
dec
jns
jle
push
xlat
scas
inc
or
mov
cmp
inc
dec
nop
add
subl
in
outsb
dec
sub
mov
jae
add
mov
js
cmp
add
jp
cmp
incl
add
pushf
idivl
lea
mov
imul
xor
js
insb
lea
jne
sub
add
dec
mov
push
jnp
mov
mov
negl
cmp
mov
fwait
out
mov
das
xor
sub
add
out
sub
ljmp
cmp
add
cs
stos
aam
add
pop
test
clc
mov
inc
jge
sbb
add
icebp
sub
add
sbb
lret
movl
cmp
int
es
repnz
je
pop
jns
iret
loope
xchg
add
je
ret
js
sbb
add
jecxz
enter
cmpsb
push
nop
add
pop
sub
add
push
jle
movsb
adc
add
popf
sub
insl
mov
jge
fs
mov
mov
mov
sbb
cld
push
cmp
dec
lret
or
std
sets
add
jmp
mov
add
aad
xchg
mov
jae
inc
rolb
mov
mov
jnp
lock
repz
xchg
add
stos
call
pushw
mov
pop
dec
mov
fdivs
ja
and
popf
mov
in
addb
ret
out
add
mov
out
std
wrmsr
add
out
repnz
add
aaa
movsb
cwtl
in
in
out
test
lock
jle
adc
in
enter
inc
add
mov
add
mov
stos
xor
mov
nop
add
lds
leave
add
add
mov
mov
add
sub
sti
icebp
lods
es
mov
mov
imul
pusha
add
cmp
mov
add
add
mov
jl
mov
push
or
pop
or
jp
add
addb
subl
mov
mov
negl
mov
jge
lock
hlt
adc
into
imul
cmpsb
xchg
jge
arpl
xor
sahf
jle
scas
loopne
mov
lcall
add
movsl
fwait
cmp
mov
sbb
mov
imul
ljmp
fcmovnb
cmc
sbb
sub
andl
add
fisttpl
lcall
sbb
cmp
mov
add
jmp
add
mov
fldt
push
lret
xchg
jb
mov
mov
loop
mov
sbb
add
and
lahf
add
test
xchg
out
mov
add
scas
movsl
das
jge
js
fadds
add
test
add
add
test
add
mov
lahf
roll
mov
fst
cli
mov
mov
je
add
push
add
pop
call
stos
in
clc
and
mov
in
and
push
mov
movsb
push
dec
push
sub
iret
pop
cwtl
cmp
mov
mov
insb
shl
dec
cwtl
js
jmp
pop
xor
mov
test
xchg
icebp
aas
insl
and
ja
popa
pusha
add
insb
mov
dec
test
in
out
or
test
add
mov
push
inc
add
pop
or
into
adc
mov
jo
mov
and
add
mov
push
jbe
push
ljmp
popf
xchg
mov
mov
xchg
rcl
fmuls
int3
cli
lret
dec
lock
and
or
sub
rolb
mov
mov
fldpi
cmpsb
test
and
mov
scas
outsl
cmp
rolb
rcrl
sub
shr
xchg
lods
mov
mov
lahf
fisubrl
pop
sbb
add
mov
imul
lret
sti
xchg
cmc
je
jl
mov
push
jo
mov
call
out
aaa
aam
jmp
stc
insb
xchg
push
inc
add
add
adc
sbb
xlat
frstpm(287
rorl
mov
fisttpll
imul
out
ret
aas
out
loop
mov
cmp
loope
jns
jb
mov
add
mov
add
mov
mov
cmp
mov
or
mov
mov
jnp
jmp
mov
pop
xor
inc
add
test
mov
scas
ja
imul
sub
arpl
fbstp
div
stos
das
mov
icebp
xchg
add
add
sbb
jmp
mov
movsb
or
jb
mov
mov
gs
cmpsl
push
or
mov
mov
add
jbe
sbb
sbb
xor
add
pop
nop
add
jecxz
xor
testl
mov
repz
les
loope
add
out
inc
insb
or
pop
stos
addr16
xchg
pop
sbb
sahf
out
push
add
inc
or
or
sbb
test
lock
outsl
push
pushf
dec
mov
pop
in
insl
cmpsl
xchg
pop
jne
fwait
pop
inc
sbb
mov
jno
or
sarl
jae
fs
inc
jnp
add
cmpsb
notl
mov
push
addb
cmpl
test
adc
mov
cmpsb
dec
mov
mov
cmp
dec
pop
pop
mov
inc
pop
rolb
mov
in
add
xchg
pop
aam
sbb
in
mov
cmpsl
lea
aas
lahf
push
xchg
xor
mov
stos
hlt
hlt
sub
pop
xchg
jmp
mov
ret
cmp
add
cmp
imul
adc
mov
adc
jne
aad
fstpt
jmp
mov
xlat
cmp
cmp
add
movsl
xchg
lods
fidivl
mov
add
sbb
xchg
je
sub
adc
pop
adc
bound
mov
cld
xor
mov
js
out
addr16
add
lds
mov
cld
fidivs
dec
push
add
mov
stc
mov
sbb
cmp
std
ffreep
add
pop
ficoml
loopne
mov
mov
add
mov
in
rolb
inc
call
jns
nop
add
cs
addr16
xor
add
and
mov
adc
mov
mov
mov
push
cwtl
mov
add
lock
jmp
jecxz
inc
jle
add
ffreep
rolb
mov
add
imul
add
jge
inc
inc
iret
rolb
mov
xchg
scas
popf
rolb
js
mov
cli
inc
add
mov
add
mov
add
or
add
pop
add
popa
xorl
jecxz
cmp
add
mov
mov
fwait
cld
ret
xchg
mov
aas
push
icebp
es
and
dec
xor
imul
mov
add
cmc
pop
mov
repz
dec
and
lods
cwtl
sub
aaa
inc
xor
lahf
rcrl
in
rolb
mov
adc
mov
add
xlat
int3
sbb
cmpsl
stc
rolb
mov
enter
jb
mov
add
fisttpll
add
icebp
test
cmp
es
push
adc
adc
mov
mov
mov
gs
and
add
jmp
aas
xchg
aas
in
test
pop
mov
mov
push
addb
mov
add
je
mov
fbstp
add
push
lock
mov
add
add
xchg
cmpsb
ds
fistl
out
out
fs
mov
mov
lret
push
cli
ds
fsubs
lret
dec
subl
jecxz
xchg
iret
or
fcompl
jno
or
fld
dec
cmp
inc
cmp
mov
sbb
xor
jbe
xor
rolb
out
nop
add
out
out
call
mov
int
cltd
clc
das
mov
push
sbb
mov
mov
sbb
insb
test
mov
cmp
scas
mov
into
cmp
jp
jb
mov
pop
lock
pop
lock
in
add
push
notl
les
xchg
mov
inc
xchg
pusha
add
negl
sub
jl
adc
mov
mov
jge
les
sahf
jmp
sbb
mov
mov
cmc
add
aas
push
leave
imul
cmp
xchg
mov
gs
aas
push
xor
mov
mov
xor
mov
rcll
mov
lds
sarl
lods
inc
addb
insb
dec
pop
bound
mov
fidivrs
jnp
jecxz
fstp
dec
mov
aam
les
cmp
mov
add
mov
jbe
and
mov
add
lods
jbe
add
lret
xchg
mov
add
mov
iret
ret
lahf
dec
mov
add
rcll
add
add
add
and
or
fstps
lds
addr16
add
out
lahf
imul
in
xor
mov
add
popf
xor
mov
dec
movsb
mov
mov
push
ret
out
test
add
insb
pop
cli
cmovbe
add
or
inc
add
mov
jg
dec
sbb
dec
cwtl
mov
js
push
mov
sbb
addb
sub
js
xchg
repnz
addb
rolb
xchg
jg
lea
mov
inc
call
int3
lock
xchg
out
and
mov
out
sti
test
mov
mov
push
dec
orl
lahf
xchg
aaa
pop
mov
add
push
in
inc
mov
js
adc
mov
fnsave
jnp
movb
mov
add
imul
cmp
mov
stos
lret
mov
setl
cmc
mov
aad
sti
and
push
out
xchg
add
jmp
add
and
xchg
inc
addb
sahf
lret
mov
lea
add
imul
sub
add
stc
in
xchg
lcall
dec
push
add
jae
add
sub
fisubrs
in
xchg
sbb
and
and
js
fs
jl
daa
fnsave
add
xchg
jmp
cltd
lea
add
xlat
mov
push
loopne
mov
add
mov
cltd
pop
ljmp
adc
jno
addr16
jl
add
arpl
adc
mov
add
inc
add
cmp
mov
fwait
sbb
adc
mov
add
ret
stos
mov
mov
and
sub
mov
pop
sub
add
mov
add
add
or
add
mov
xchg
clc
inc
ss
push
xchg
jns
sub
sbb
mov
movsb
sbb
dec
jmp
xor
mov
mov
imul
sub
repnz
add
inc
add
mov
pop
dec
das
jl
mov
add
clc
or
sub
add
add
xor
add
mov
add
xchg
add
pushf
and
adc
addb
push
sbb
mov
mov
in
xor
lahf
ja
and
mov
cmp
pop
divl
loop
mov
cmp
rolb
mov
in
repz
jecxz
movsl
imul
sub
int
sub
xchg
ficomps
pop
fsubrs
inc
pop
fwait
cmp
pop
jno
nop
add
stc
inc
sbb
xor
mov
js
or
pop
push
jl
add
push
jge
cs
add
stos
add
mov
jp
fmull
mov
cmp
xchg
or
push
add
cmp
movsb
insl
adc
sbb
adc
inc
lret
test
push
int3
mov
aas
cmc
fwait
ret
out
es
cli
test
xchg
paddb
rorl
or
mov
pop
mull
add
lret
mov
aaa
out
test
repnz
out
mov
mov
iret
pushf
test
aas
es
rcrl
push
je
divb
add
cmp
mov
fdivrl
jl
imul
mov
mov
sbb
add
repz
lret
mov
adc
mov
pop
clc
jbe
in
add
mov
add
loope
add
mov
mov
dec
pop
shll
cvtdq2ps
mov
xchg
sahf
adc
insb
push
fiadds
add
mov
scas
xchg
xchg
es
add
sarl
adc
movsb
push
stc
ljmp
into
loopne
mov
je
xlat
xchg
push
or
jns
inc
add
xchg
ret
jnp
daa
icebp
test
rolb
mov
inc
jl
es
outsl
cmc
addb
div
mov
call
add
jmp
movsl
imul
lods
sti
jne
fimull
push
repz
xchg
add
add
gs
cwtl
sbb
add
and
mov
cwtl
push
sub
add
jmp
sub
dec
push
out
arpl
out
xchg
push
inc
add
push
movsl
lahf
into
cwtl
mov
mov
mov
ljmp
jl
push
push
adc
cmc
test
mov
add
mov
dec
popf
mov
add
aas
lret
sub
ret
shll
gs
pushaw
add
sbb
add
jb
mov
dec
pop
fstpl
mov
mov
mov
mov
pop
sbb
add
lcall
pop
in
lods
jne
add
sahf
adc
pop
arpl
push
repnz
inc
add
es
fadd
jae
dec
xchg
addr16
repnz
pop
pop
push
test
or
or
push
add
add
iret
mov
mov
ss
add
out
lcall
mov
enter
mov
sti
in
inc
pop
jne
push
lret
mov
or
ja
ficoms
mov
sub
add
in
push
mov
add
mov
shl
xor
rolb
mov
mov
mov
cmp
push
pop
fildl
mov
or
dec
inc
push
sahf
mov
sbb
jo
mov
sub
add
mov
nop
add
push
add
pop
adc
lahf
or
dec
cwtl
aas
pop
fcmove
push
jbe
stos
dec
dec
push
add
cmp
lds
add
icebp
xchg
mov
mov
cmp
rolb
and
mov
push
push
mov
lock
loope
mov
mov
mov
test
pop
pop
mov
rolb
stos
stos
mov
addb
scas
mov
mov
call
adc
mov
dec
mov
ffree
xchg
ljmp
add
dec
test
mov
cmp
pop
cmp
scas
addb
lds
movsb
mov
push
add
xchg
cmc
daa
rcr
repnz
repnz
rolb
mov
inc
lret
xor
mov
jmp
mov
je
pop
lcall
rolb
mov
add
fsubrl
sbb
inc
test
pop
and
jae
cmp
mov
lock
fs
jbe
popa
adc
push
dec
jns
inc
dec
test
cmp
xchg
add
insl
addb
lds
mov
lret
sbb
and
cmp
adc
push
pop
popf
xchg
add
adc
loop
mov
lahf
por
int3
movsl
adc
mov
int
xor
mov
xchg
push
in
push
mov
add
add
testb
xchg
cld
test
push
scas
movsl
insl
adc
add
imul
lret
insl
test
inc
js
cli
cmp
popa
push
dec
mov
out
inc
les
sbb
sbb
dec
ljmp
mov
xor
mov
push
in
sbb
jbe
pop
mov
mov
dec
pop
pop
push
push
jmp
mov
cmp
push
add
or
add
sub
and
add
inc
repz
mov
add
cmp
pop
mov
mov
and
mov
adc
add
pop
mov
add
in
lods
mov
js
stos
xchg
outsl
jmp
mov
sbb
aas
xor
mov
add
aaa
call
sub
cmp
xchg
inc
xlat
into
out
in
aas
ja
addb
xchg
nop
add
fdivrp
xor
daa
fcoml
add
add
addb
in
push
jecxz
pop
bound
mov
xor
testl
lret
roll
fnsave
ljmp
mov
lock
or
mov
rolb
mov
scas
jne
pop
js
in
cmpsl
add
int3
fs
jnp
iret
pop
cwtl
movsb
addl
mov
pushf
dec
mov
push
out
or
mov
add
mov
cmp
and
mov
popf
das
ret
cltd
mov
mov
mov
push
loop
mov
xorl
mov
adc
or
sub
addb
mov
xchg
add
aaa
cmp
icebp
jb
mov
mov
push
shr
je
dec
add
sub
push
mov
pop
pop
xor
mov
bound
mov
pusha
add
push
add
pop
loopne
mov
jns
xchg
in
xlat
mov
add
sub
xchg
sbb
sbb
aad
mov
pop
pop
repz
mov
jns
dec
mov
dec
inc
mov
mov
cmp
and
or
mov
dec
or
loope
inc
mov
insb
xor
popa
sub
leave
sbb
clc
out
icebp
std
cmp
scas
xchg
push
sub
rcll
xor
mov
movsl
insb
xor
cli
lods
adc
add
adc
push
imul
stos
out
lods
icebp
or
imul
iret
and
sbb
add
add
add
cmp
xor
mov
bound
mov
mov
mov
jle
pop
add
push
add
adc
cli
sahf
ret
and
mov
add
mov
lods
cmp
dec
mov
or
add
mov
movsb
inc
loopne
mov
inc
mov
add
xchg
ds
add
jmp
mov
imul
movsl
xor
mov
inc
add
mov
push
add
mov
jl
aad
push
pop
add
mov
add
out
repz
mov
mov
xchg
inc
sbb
inc
stos
mov
aaa
inc
add
outsb
gs
fs
addb
push
pushf
mov
cmp
jl
inc
enter
cwtl
pop
add
mov
add
loop
mov
mov
sti
test
add
out
fidivrl
imul
stos
inc
int
mov
add
mov
cmp
add
test
fbstp
push
outsl
mov
mov
jl
jb
mov
inc
add
mov
inc
dec
cmc
inc
add
test
add
stos
mov
daa
sub
jo
mov
inc
test
outsb
and
outsb
sbb
cmp
cwtl
loopne,pn
mov
lcall
mov
icebp
das
xchg
movsl
scas
jle
in
rolb
add
add
out
and
mov
sub
aaa
inc
or
mov
add
fcmovnb
jecxz
xchg
arpl
ds
mov
mov
sbbl
pop
xchg
cltd
inc
add
adc
add
push
mov
pop
push
bound
mov
add
mov
daa
jle
nop
add
push
mov
pop
mov
jecxz
ret
jne
lods
loope
mov
mov
stos
in
mov
pop
mov
scas
mov
add
jle
lcall
dec
js
lock
xchg
imul
cmp
lods
insb
mov
xor
mov
mov
lds
push
push
in
imul
mov
test
rorl
add
ret
sub
addb
sub
push
add
push
sbb
mov
mov
addb
lret
mov
movsl
inc
add
test
les
add
xor
mov
ds
pop
cld
cld
or
sar
sbb
add
mov
cld
imul
mov
inc
je
add
add
and
ret
mov
pop
insl
sbb
cmpsb
push
test
push
add
sbb
inc
inc
pop
int
sub
dec
adc
ret
and
mov
add
xchg
pop
mov
frstor
add
add
ds
test
dec
scas
clc
popaw
sub
mov
and
es
mov
add
cmpsl
mov
xlat
std
sub
mov
iret
pop
rcll
inc
mov
mov
sti
cmpsl
lds
adc
rcrl
push
icebp
inc
add
mov
cli
lock
mov
mov
mov
mul
xchg
popl
add
mov
mov
mov
push
andl
xor
insb
aad
mov
jb
mov
xor
mov
cmpsb
sbb
lods
icebp
scas
mov
push
inc
pop
mov
outsl
sbb
add
mov
sbb
mov
or
jle
sti
int3
in
jns
mov
sub
outsl
cltd
imul
add
out
push
add
add
mov
add
mov
add
cmp
pop
and
mov
or
loope
or
mov
add
pop
dec
inc
xchg
add
mov
add
ss
xchg
call
mov
add
mov
cmp
insb
es
stos
inc
pusha
add
add
icebp
dec
repnz
add
mov
xchg
int3
std
outsl
jp
mov
mov
pop
xchg
or
xor
xor
scas
loop
mov
mov
jb
mov
test
pop
popa
add
mov
jae
cltd
daa
daa
addb
dec
fldl
pop
repz
add
mov
dec
lock
lret
lods
dec
inc
addb
addr16
mov
lods
mov
pop
jno
add
lods
bound
mov
xor
mov
jnp
xchg
insl
and
jbe
popf
stos
pop
ds
pop
pop
sti
aaa
jno
xchg
add
mov
enter
fnsave
aad
push
add
add
mov
lret
xchg
mov
xchg
cmp
pop
jl
rcrl
push
sti
mov
mov
add
rolb
mov
dec
mov
add
and
mov
sub
loope
cmp
aas
aas
loopne
mov
mov
fcoms
mov
push
sub
or
clc
mov
adc
mov
call
push
jb
mov
mov
addb
pop
mov
lds
jecxz
fs
ljmp
inc
mov
inc
add
adc
push
in
repz
dec
insb
sub
xchg
fidivrs
lods
push
add
test
mov
add
popa
mov
pop
mov
daa
mov
cltd
lret
add
mov
stos
popa
dec
jno
fcmovnu
fisttpll
js
inc
inc
mov
add
nop
add
out
fisttps
mov
add
sti
sbb
add
inc
dec
or
daa
mov
add
rolb
mov
repz
mov
and
mov
mov
adc
add
mov
dec
mov
jl
push
stc
xchg
adc
mov
scas
mov
mov
enter
mov
push
xchg
sbbl
inc
out
push
add
addr16
pop
push
ljmp
fmull
lds
add
sbb
mov
push
push
imulb
mov
sbb
mov
mov
cmp
sbb
add
cmpsl
adc
je
push
cmc
mov
cmp
hlt
sub
stos
inc
xor
mov
push
dec
test
test
pop
add
sbb
fidivs
add
mov
add
mov
mov
add
aad
repz
loope
mov
clc
sbb
popa
fiadds
mov
mov
add
add
dec
stos
pop
push
xor
dec
movsb
int3
adc
mov
pop
pop
lods
add
mov
rolb
mov
add
add
ds
mov
dec
xchg
mov
mov
push
mov
push
add
mov
add
mov
mov
ret
jg
xor
lea
ret
inc
and
stc
shl
and
mov
pop
pop
mov
add
je
add
add
mov
add
das
lea
int
pop
outsb
inc
outsb
es
cld
cmc
push
daa
push
mov
mov
add
mov
add
outsb
push
cld
pop
push
test
cmp
xchg
mov
inc
lods
mov
mov
mov
xor
ret
jno
divb
add
add
nop
add
mov
arpl
out
lea
jae
add
stos
cmp
add
rcl
mov
mov
and
mov
xor
add
mov
bound
mov
repz
mov
rolb
xor
mov
lret
addb
pop
neg
mov
nop
add
lcall
xchg
mov
add
jl
mov
xchg
mov
add
mov
mov
add
push
mov
add
pop
inc
lds
add
into
push
add
mov
xor
mov
sbb
cltd
adc
mov
jmp
mov
add
sub
pop
addb
leave
movsl
push
sbb
add
sbb
mov
lahf
in
push
lahf
out
pop
sbb
repnz
popa
lods
mov
mov
dec
in
jnp
add
aad
dec
decl
pushf
and
je
mov
jmp
mov
jg
mov
sahf
stc
outsl
cmp
iret
in
add
lock
add
iret
mov
push
add
jbe
xor
mov
cmp
sbb
fnstenv
pop
jb
mov
outsl
and
mov
movb
add
push
and
push
mov
inc
and
in
inc
sbb
aam
add
popa
jne
add
inc
pushf
pop
rolb
mov
or
adc
mov
xchg
sub
movsb
movsb
xchg
add
stos
push
add
mov
pop
in
add
mov
and
xor
add
jno
jnp
test
daa
movsb
stc
xchg
fcmovnu
mov
mov
or
mov
lods
push
cmp
mov
add
sub
or
pop
ljmp
mov
add
push
adc
mov
cmp
cmp
into
scas
mov
pop
js
pop
repnz
sub
push
movl
push
xor
gs
into
push
inc
add
add
popl
push
mov
int
push
popf
jne
add
add
push
pop
int3
addb
and
add
mov
loop
mov
push
add
push
mov
fnstenv
imul
mov
pusha
add
cmp
repz
mov
int3
adc
mov
xchg
cli
out
sbb
mov
mov
mov
inc
sub
insb
adc
mov
add
mov
loop,pt
mov
lea
xor
mov
pop
neg
add
mov
jge
fstpt
inc
pop
xor
mov
mov
add
mov
add
mov
mov
and
les
cmp
lock
mov
xor
jne
sarl
gs
ds
test
mov
add
mov
add
mov
js
xor
pop
movsl
test
add
or
pop
pop
lds
rolb
mov
repnz
out
aas
clc
in
pop
jg
aad
jecxz
sbb
add
mov
outsl
addb
dec
jnp
enter
add
pop
mov
nop
add
dec
rolb
mov
add
add
cmpxchg8b
mov
xor
test
jo
mov
iret
cmp
add
out
jo
mov
imul
in
dec
mov
mov
xor
mov
test
repnz
addb
enter
mov
out
push
dec
push
out
push
jmp
or
jge
adc
rolb
mov
push
ret
fimull
xor
mov
adc
sbb
push
add
inc
add
test
repnz
in
xorl
cmc
sbb
js
add
push
lds
xchg
lahf
jno
loope
add
cmp
mov
cmpsl
mov
mov
cmp
add
jae
add
adc
or
std
aam
ss
stos
fstpl
add
sti
and
movsl
test
movl
out
lock
mov
fmull
loop
mov
addb
test
hlt
mov
int
add
inc
add
xchg
mov
cmp
mov
mov
add
sub
cld
and
add
add
mov
mov
mov
pop
je
insl
xor
add
or
lea
push
add
maskmovq
imull
mov
mov
jb
mov
jmp
and
leave
push
idivb
shrl
xchg
lea
addb
sub
sbb
and
xor
cmp
icebp
push
inc
rolb
inc
or
lret
enter
std
cld
dec
out
loope
sahf
lods
bound
mov
sbb
fisubl
jg
out
fisubl
mov
push
jns
add
xchg
jmp
cli
cld
mov
mov
add
jo
mov
insb
sub
loop
mov
shll
iret
outsb
cmp
lods
mov
mov
xchg
repz
mov
mov
mov
push
add
fwait
xchg
test
sahf
sub
das
in
add
cmpsb
sub
xor
inc
xor
mov
add
add
add
add
inc
in
add
sbb
adc
mov
gs
mov
jp
cmove
pop
push
add
and
mov
add
mov
mov
rolb
mov
add
mov
cmpsl
inc
fbstp
mov
stos
mov
mov
fsubrs
sbb
fildl
movsb
xchg
and
mov
mov
add
mov
xchg
add
mov
add
fistpl
add
mov
mov
mov
cmpsl
in
or
fcmovnb
and
jbe
mov
into
xchg
xor
jmp
mov
and
mov
shll
or
add
xchg
fld
mov
xor
loopne
mov
add
sub
je
dec
adc
add
inc
add
add
jg
inc
xor
push
stos
mov
add
popf
shll
addb
dec
or
sub
std
in
xor
mov
xorl
mov
addb
and
mov
shr
cmp
lods
lock
rolb
push
cltd
or
mov
or
xor
loopne
mov
add
push
loop
mov
push
outsw
ja
mov
sub
cmp
rolb
mov
xor
add
rol
push
dec
nop
add
jmp
add
push
in
and
mov
test
fcomps
mov
dec
xor
adc
jmp
jb
mov
addb
je
inc
xor
mov
add
mov
dec
mov
jno
aaa
jecxz
fcoml
jns
sub
clc
cmp
out
outsb
cmp
loopne
mov
int
or
cmc
push
add
jae
jmp
push
push
xor
das
xor
repz
loopne
mov
mov
repz
mov
dec
imul
add
inc
fucomp
fmuls
mov
sub
sub
mov
mov
add
mov
cld
or
jae
repnz
mov
scas
lock
add
mov
stos
jecxz
ja
into
addb
inc
fmul
notb
scas
rolb
mov
add
and
add
into
xchg
mov
out
mov
or
mov
adc
sbb
in
in
add
mov
mov
mov
mov
std
mov
add
add
add
nop
add
rolb
mov
jbe
adc
mov
pop
iret
and
mov
mov
rolb
mov
add
xor
mov
add
mov
push
xchg
icebp
push
mov
sub
mov
int3
add
aad
xchg
add
jnp
mov
movsb
clc
xchg
mov
mov
mov
rolb
mov
add
addb
ljmp
jle
ljmp
fstps
mov
imul
push
xlat
imul
lea
outsb
movsl
pop
mov
fsubrs
out
popa
ss
mov
add
out
je
out
add
sbb
jns
add
bound
mov
incl
pmullw
scas
loopne
mov
mov
adc
push
test
sbb
push
and
mov
pop
inc
add
mov
sub
jmp
add
aas
lret
mov
xchg
lret
adc
jbe
aas
mov
and
mov
push
addb
mov
mov
add
int3
mov
cwtl
cmc
cmp
add
and
mov
or
pushf
pop
mov
test
xchg
in
mov
jo
mov
mov
mov
mov
pushl
dec
dec
ljmp
insl
or
in
mov
fcmovnu
xor
mov
add
mov
or
mov
push
mov
push
push
ss
hlt
mov
xchg
stc
cmp
mov
pop
loop
mov
rolb
mov
add
jo
mov
out
add
fcomps
xchg
add
loope
mov
and
mov
add
cmc
clc
push
add
das
in
add
jns
sti
gs
fucomp
adc
inc
add
push
sbb
add
aas
test
cmp
arpl
push
cmpsl
push
mov
add
int3
sbb
roll
mov
icebp
pop
mov
cmp
fwait
popa
and
add
mov
add
push
inc
mov
push
mov
mov
std
js
movsb
adc
xor
std
std
popf
addb
add
rolb
mov
add
les
ds
sbb
jg
sbb
add
outsb
or
add
sbb
add
jne
inc
xor
addb
pop
dec
fimuls
lods
mov
adc
sbb
xor
mov
cmp
or
add
shll
add
mov
and
lods
xchg
mov
jns
mov
mov
mov
adc
mov
stc
pop
xor
test
leave
and
push
add
cwtl
push
jo
mov
add
fsubl
adc
mov
bound
mov
pop
inc
jg
and
mov
stos
add
mov
push
repnz
mov
stos
mov
and
adc
mov
inc
cmp
cmp
repz
mov
aas
mov
add
xchg
gs
add
or
jecxz
inc
dec
iret
push
loopne
mov
push
add
mov
jp
push
cs
pusha
add
jnp
sti
mov
popf
insb
adc
mov
rcll
inc
sahf
add
add
add
xchg
pop
aas
lret
stc
lcall
push
mov
add
add
pop
bound
mov
mov
adc
inc
pop
movsb
inc
add
inc
add
cs
jl
and
xor
cmc
ss
or
sbb
jp
push
inc
add
mov
fildl
repz
dec
mov
jo
mov
mov
cmpsl
rolb
mov
mov
rolb
mov
add
pop
xchg
gs
push
cmpsb
mov
mov
lret
sahf
sahf
or
mov
push
rolb
cmp
add
cmpsb
mov
or
xor
and
js
pop
mov
mov
scas
clc
push
sub
add
leave
xchg
out
mov
add
cmp
add
push
imul
and
or
mov
inc
xchg
adc
lea
jp
jmp
cmp
mov
mov
cmpsb
cwtl
or
mov
mov
bound
mov
or
lret
xor
mov
int3
push
jnp
loope
push
add
stos
out
sub
daa
inc
push
cmpsb
in
xchg
add
inc
add
mov
pushf
stos
popf
mov
addb
jp
push
je
dec
outsl
lea
mov
cwtl
push
add
mov
xor
mov
lcall
test
mov
pusha
add
mov
push
shrl
jo
mov
mov
pop
xlat
repnz
int
push
add
jle
add
sub
popa
mov
into
loop
mov
jno
idiv
in
rcll
push
in
push
add
in
add
loop
mov
xor
sub
xchg
fldl
add
add
inc
dec
xor
mov
and
mov
pop
sbb
xor
pop
mov
push
dec
pop
rcll
stos
push
add
pop
mov
and
insb
int
cltd
sbb
bound
mov
es
int3
pusha
add
add
mov
mov
add
cmp
xor
mov
jg
pop
adc
ficoml
adc
cmpsl
xor
add
push
add
sahf
lods
pop
mov
mov
cmp
clc
xor
mov
or
iret
adc
mov
xchg
push
addb
aam
mov
mov
mov
rolb
xor
mov
add
fidivl
or
mov
push
push
std
jle
mov
rolb
mov
fbld
mov
mov
mov
mov
addb
xchg
add
add
mov
add
pop
pop
mov
mov
mov
mov
push
xor
mov
adc
mov
add
fidivl
sub
pusha
add
lods
fcomps
add
fldenv
fadd
dec
insb
add
incl
int3
out
repz
int3
xor
mov
mov
jecxz
idivb
out
or
js
addb
sbb
dec
push
pop
mov
add
xchg
add
lock
push
xchg
sub
pop
out
fmull
add
jecxz
pop
jmp
pop
mulb
sub
add
pop
or
ret
pop
jl
pop
mov
cbtw
xchg
lcall
int3
mov
lock
mov
or
into
imul
loopnew
mov
andl
ljmp
test
or
jbe
fwait
test
daa
add
mov
add
mov
int
add
mov
and
int3
sarl
xchg
test
mov
add
xchg
jp
and
cli
ja
xchg
mov
push
and
fnstsw
dec
jbe
add
rolb
mov
mov
mov
lcall
pop
mov
fdivr
cltd
push
cmp
cmp
mov
xchg
mov
mov
push
add
sub
dec
xchg
cwtl
xor
mov
es
cmpsl
ja
hlt
es
sti
or
js
mov
add
pop
inc
loope
gs
add
scas
and
mov
sub
add
cli
imul
add
mov
into
lret
mov
stos
inc
cmp
imul
push
out
cmp
test
dec
loopne
mov
adc
mov
add
cs
pop
xchg
and
mov
add
stos
dec
and
mov
in
or
lods
mov
bound
mov
lahf
inc
add
pop
xchg
cltd
sbb
sti
into
jns
add
dec
out
lds
or
add
mov
ss
mov
ljmp
or
cs
test
add
xchg
or
loopne
mov
mov
mov
test
xchg
addr16
sub
or
leave
lcall
bound
mov
inc
les
add
sbb
addr16
popa
cwtl
push
repz
mov
push
or
mov
push
inc
and
mov
fidivs
add
mov
sub
aam
add
popa
mov
adc
mov
test
clc
xor
mov
mov
loopne
mov
fidivs
xchg
add
mov
adc
push
addr16
cbtw
repz
mov
inc
add
in
loope
mov
pop
loope
add
stos
pop
pop
jmp
test
outsb
jge
icebp
cmpsb
stc
push
wbinvd
test
out
outsb
cmp
push
add
mov
cwtl
sbb
pushf
mov
imul
sbb
add
repz
insl
add
icebp
testl
popf
inc
xchg
rolb
test
stc
jno
push
add
pop
test
lea
mov
stc
mov
mov
mov
add
scas
mov
mov
add
mov
dec
movsb
lahf
fcoms
cmc
push
daa
xchg
gs
mov
mov
into
int3
ds
arpl
setbe
aas
mov
mov
mov
dec
jae
add
pop
jbe
stos
test
cmp
or
cmp
lds
adc
mov
lea
cs
lods
das
rcll
push
cmp
mov
mov
cmp
les
add
xor
adc
mov
adc
mov
push
mov
imul
test
std
inc
clc
fisubrs
sub
outsb
inc
mov
mov
dec
sahf
sbb
xor
mov
push
xor
mov
jno
shrl
mov
add
cmp
imul
mov
add
arpl
or
in
or
add
mov
add
imul
add
shrl
sub
mov
add
lock
mov
push
nop
add
sbb
rolb
mov
push
add
mov
xor
push
loopne
mov
jl
mov
and
add
xchg
mov
add
mov
mov
sub
lock
pop
or
add
jne
popa
imul
mov
add
mov
add
ror
mov
add
adc
mov
adc
mov
mov
cmp
and
loop
mov
add
paddsw
movsb
roll
add
mov
lret
jmp
pop
adc
mov
push
decl
jmp
clc
cmpl
xor
mov
mov
rorl
or
inc
xorl
add
add
mov
adc
rolb
lea
repz
testb
xchg
fldcw
and
add
imul
push
fnstenv
add
jbe
sbb
hlt
lods
mov
mov
addb
in
popf
pop
cltd
ds
fcomip
popf
pop
je
mov
jle
push
mov
pushf
pop
mov
test
ljmp
mov
mov
add
cwtl
scas
rolb
stc
fidivrs
es
cwtl
ljmp
enter
push
xor
fdiv
dec
dec
je
xchg
sbb
dec
and
mov
movsb
push
push
lret
jge
stos
and
mov
movsl
std
add
pop
leave
sbb
orl
jmp
and
mov
mov
fisttpl
pop
test
mov
inc
pop
mov
pop
mov
call
mov
and
incb
add
add
inc
pushf
in
xor
mov
mov
add
sub
mov
add
add
mov
and
mov
xchg
and
mov
cld
inc
in
hlt
mov
push
add
add
mov
mov
das
and
mov
sbb
popf
sub
movb
fidivs
add
jno
dec
das
addb
mov
xchg
add
aam
pop
popa
and
add
in
ficoml
add
das
lea
inc
cmp
data16
push
jg
fistl
inc
movsb
dec
push
mov
sahf
and
scas
mov
jp
mov
add
pop
or
push
add
cmpsl
pop
ret
mov
repnz
push
sbb
nop
add
add
add
or
pop
sbb
mov
out
mov
popa
mov
mov
mov
divl
cmpps
sub
popa
or
cmp
mov
add
xchg
loope
xor
mov
bound
mov
ret
mov
xchg
mov
dec
jl
xchg
mov
push
inc
test
testb
mov
add
jnp
lcall
loopne
mov
add
js
add
ficomps
cmp
jecxz
call
hlt
aas
in
mov
addb
xchg
jmp
mov
xchg
ja
in
adc
mov
sar
fstpl
rolb
popf
popf
aas
jns
stos
repz
mov
add
inc
add
xchg
fstps
pusha
add
mov
rolb
mov
addl
add
mov
fs
repz
aam
addb
popf
inc
out
sub
jb
mov
lret
push
add
cltd
jle
or
inc
add
xlat
cld
nop
add
jns
lds
fisubs
add
rolb
mov
cld
out
popa
sub
add
fwait
lods
dec
mov
add
icebp
aam
fimuls
adc
mov
mov
hlt
jge
or
call
addb
mov
les
cmp
sbb
add
stos
xchg
mov
popf
and
xor
adc
sarl
pop
idivb
pop
mov
mov
cltd
fsubl
add
loope
les
add
and
add
lahf
es
jno
xor
mov
sti
jb
mov
xor
mov
fidivl
add
add
pop
jp
rcr
dec
subl
add
jle
rolb
inc
gs
lret
sbb
mov
ja
or
sub
dec
xchg
inc
rolb
mov
rolb
fisubrs
fcoml
addb
push
add
sub
xchg
mov
jge
pop
loop
mov
clc
gs
mull
iret
in
dec
inc
mov
daa
scas
nop
add
fldcw
add
add
add
cmpsl
pop
testl
mov
cld
xchg
xor
adc
mov
mov
mov
add
add
add
mov
mov
mov
add
add
cmp
add
mov
pop
test
push
add
and
mov
push
jl
push
xchg
arpl
insl
jns
adc
insb
xor
arpl
and
rolb
mov
xchg
lret
add
sub
pop
xor
jg
mov
mov
inc
dec
sub
mov
jns
das
cmp
ss
imul
dec
fwait
ss
sub
mov
add
inc
loop
mov
outsb
lods
mov
stc
test
clc
pusha
add
in
jl
ljmp
cmp
adc
mov
add
mulb
cmp
add
mov
mov
add
mov
inc
add
add
jnp
cmpl
js
aas
xor
mov
xor
push
jge
bound
mov
pop
push
adc
jbe
mov
fldcw
int
js
add
gs
out
testb
repnz
std
pop
mov
sub
add
mov
mov
mov
or
adc
addb
stos
sub
pop
scas
cmp
add
into
fcomps
push
test
add
leave
jle
int3
or
jnp
add
mov
add
mov
stc
je
dec
outsb
ficompl
sti
gs
mov
xlat
jae
mov
add
pop
imul
push
xor
push
pop
in
das
fcompl
mov
and
inc
xchg
add
mov
test
loope
xor
mov
out
jg
in
out
shl
add
icebp
sbb
pop
lea
jg
push
sahf
aam
fcomps
mov
mov
jmp
add
outsb
jp
in
add
test
stc
xchg
mov
or
mov
inc
ljmp
mov
sbb
add
lret
iret
jbe
xchg
mov
xor
mov
and
push
add
xor
push
jbe
inc
add
mov
push
loope
adc
fmul
mov
inc
mov
sbb
aas
mov
push
out
xor
push
test
aaa
notl
scas
mov
lret
orl
insl
cs
ljmp
shll
pop
fstpt
push
std
nop
add
xor
in
in
cmpsb
cmp
mov
add
out
xchg
xor
clc
pop
adc
bound
mov
mov
or
imul
push
loopne
mov
add
xchg
aas
int
daa
jg
dec
sbb
lahf
and
mov
mov
inc
add
mov
inc
add
nop
add
xchg
lea
sbb
pop
mov
add
add
cs
xchg
jb
mov
xchg
lahf
ret
xchg
ja
pop
inc
jb
mov
mov
mov
scas
mov
add
mov
fcmovne
sub
outsb
sbb
movsl
push
inc
outsl
pop
mov
add
mov
mov
mov
fiadds
das
mov
inc
add
imul
xchg
push
shrl
popf
inc
xor
mov
rolb
mov
test
stos
inc
push
inc
add
scas
mov
out
sahf
out
aam
insb
repz
ss
jae
sbb
adc
ljmp
in
aaa
repnz
mov
mov
inc
inc
sahf
mov
addb
daa
inc
addb
es
add
dec
and
repz
cwtl
pusha
add
inc
add
clc
or
xchg
cltd
cmpsb
xchg
add
add
xchg
out
test
cmp
add
mov
or
mov
add
add
pop
cmpsb
scas
push
movsb
and
mov
xchg
lods
push
add
sahf
mov
out
sbb
mov
adcl
jge
mov
xchg
and
rcr
daa
lret
mov
pop
incb
cwtl
xchg
jg
xor
mov
ret
popa
push
add
mov
mov
push
add
hlt
stc
mov
mov
cmpsl
movsb
inc
fwait
rolb
mov
xor
mov
rolb
mov
movsl
sub
jo
mov
mov
arpl
mov
rolb
addb
dec
movsl
ljmp
mov
add
and
mov
in
add
sbb
jne
xchg
mov
jnp
add
add
jns
mov
mov
add
lods
lcall
orl
sbb
add
push
sub
inc
ljmp
mov
push
iret
fadds
mov
shrl
mov
test
xor
mov
out
mov
mov
repz
imul
fisttps
add
scas
cltd
rcrl
mov
dec
xchg
push
mov
jno
xchg
add
aad
insl
mov
xor
mov
and
mov
or
inc
pop
jne
jg
addb
cmc
xchg
lds
lret
repnz
shll
mov
dec
or
mov
cwtl
xor
mov
xor
pop
outsb
stos
mov
cmp
xorl
mov
add
cmp
or
pop
adc
mov
jg
mov
push
mov
cmp
leave
jge
add
pusha
add
bound
mov
in
stos
lret
mov
inc
push
mov
xor
nop
add
insl
push
add
rolb
test
cs
mov
ret
hlt
lods
mov
ret
xor
mov
mov
jns
ret
sahf
mov
mov
aad
inc
jg,pn
adc
mov
shr
inc
scas
mov
mov
add
cmpsb
hlt
push
add
mov
mov
mov
mov
mov
add
mov
push
in
sti
in
out
cmp
sub
loopne
mov
int
das
mov
cwtl
jno
lods
test
dec
es
cmp
mov
jnp
push
mov
cmpsl
jo
mov
pop
mov
xor
mov
int
xchg
inc
add
sub
mov
incl
jecxz
iret
pop
scas
jne
cmp
decb
aad
jnp
cmp
add
bound
mov
fpatan
push
jnp
cmp
add
add
js
sub
mov
cltd
in
add
enter
dec
test
mov
cld
add
mov
mov
add
mov
xchg
add
mov
aaa
push
add
pop
loop
mov
add
xchg
add
adc
mov
lcall
push
sbb
mov
xchg
and
mov
addb
fsubrs
cmp
aad
jle
repnz
or
pop
sub
add
mov
cltd
insl
dec
in
inc
xchg
sbbl
popf
cltd
sahf
hlt
cmc
mov
or
inc
int3
pop
cs
add
pop
xchg
jbe
push
mov
jbe
push
cs
lret
nop
add
mov
data16
mov
add
or
push
cs
xchg
pop
mov
or
divl
mov
sub
add
mov
sub
adc
mov
mov
or
clc
out
imul
mov
add
xchg
icebp
xchg
imul
mov
add
mov
mov
ss
add
mov
cmp
out
sbb
out
add
xor
xor
adcl
out
aad
fs
das
rolb
mov
xor
mov
jns
jecxz
std
iret
imul
sar
add
jmp
mov
cmpsl
lahf
mov
add
mov
mov
stos
push
pop
or
add
pop
mov
mov
test
mov
cmpsb
adc
mov
inc
xor
add
js
fdivl
xor
stos
lds
adc
dec
xor
cmp
push
lret
mov
sbb
cmp
loopne
mov
inc
inc
sub
mov
pusha
add
push
adc
pop
cmp
mov
ret
add
inc
add
test
arpl
insb
push
or
inc
add
add
push
or
ret
push
scas
inc
mov
test
jbe
mov
ja
add
gs
mov
push
sbb
int3
pop
or
lods
arpl
enter
mov
insl
cmp
xchg
fwait
loop
mov
pusha
add
jge
ljmp
mov
fwait
sbb
mov
add
mov
mov
xchg
outsl
mov
add
cmpsb
ja
sti
scas
mov
mov
sub
mov
imul
mov
adc
insb
pop
sub
add
dec
or
add
divl
mov
add
cmpl
jge
or
jle
leave
movsb
sub
jbe
add
aas
pop
inc
add
daa
popf
mov
js
push
inc
cmp
sbb
test
and
push
add
mov
cld
jmp
adc
xchg
xchg
iret
adc
pop
fs
pop
addb
dec
sbb
pop
clc
rorl
mov
jae
push
adc
stos
or
stos
jns
fcom
iret
fwait
inc
imul
ljmp
xlat
mov
fcompl
jbe
inc
add
ret
mov
mov
inc
adc
mov
inc
addb
cli
and
mov
fsts
and
push
add
inc
add
add
fistl
xchg
inc
add
mov
std
cmc
adc
adc
mov
inc
add
mov
cs
add
sub
mov
clc
mov
mov
lock
add
pop
xor
cmp
lds
pop
les
std
jge
pop
dec
das
data16
mov
dec
pop
cmpsb
xor
mov
mov
xchg
outsl
fimull
jmp
add
sbb
mov
in
adc
push
mov
push
popf
and
repz
fldt
add
sbb
mov
jg
add
mov
sbb
sub
into
mov
jb
mov
add
xchg
add
xor
mov
sub
add
push
push
pushf
addr16
ret
rolb
mov
stos
jl
outsb
shl
out
adc
je
jge
mov
pop
xor
mov
add
cld
mulb
les
es
mov
dec
insb
stos
mov
ss
push
pop
lcall
cwtl
mov
jmp
addb
xchg
sub
mov
int
add
addb
lds
lock
mov
jg
cmpsl
and
mov
mov
add
les
mov
jp
dec
leave
daa
cmp
test
add
sti
inc
das
hlt
bound
mov
xor
pushf
sub
stos
push
dec
aam
jmp
pop
test
sbb
fdiv
inc
icebp
cmp
cltd
push
out
dec
shll
add
add
js
leave
sub
add
mov
or
insl
dec
and
push
add
in
stos
adc
mov
sbb
pop
iret
mov
mov
dec
sbb
lds
mov
add
xor
daa
je
xadd
mov
bound
mov
adc
mov
popa
stc
dec
adc
mov
into
cltd
aaa
mov
stc
insl
cwtl
stc
repz
sbb
sub
cmp
hlt
mov
sahf
les
fistpl
adc
std
push
fisubrl
mov
mov
and
xor
mov
cmp
mov
in
mov
mov
add
mov
inc
add
mov
add
cmp
jae
cmp
jbe
inc
add
add
add
mov
roll
mov
jbe
sbb
sbb
xchg
lds
jo
mov
sub
add
mov
mov
inc
add
mov
push
sub
pop
jo
mov
mov
in
rolb
mov
lods
xor
mov
subl
lahf
and
add
add
and
jg
jo
mov
lret
add
add
stos
addr16
sti
mov
add
xchg
out
in
add
pop
mov
push
add
enter
push
mov
fsts
xchg
push
cmpl
call
mov
push
leave
xchg
add
push
cmp
mov
shll
pop
adc
jo
mov
fwait
sahf
daa
xchg
mov
cmp
jmp
addb
dec
lret
adc
mov
mov
mov
leave
push
pop
dec
pop
xchg
add
sub
add
mov
ljmp
ss
mov
testb
cwtl
mov
mov
loopne
mov
pop
jecxz
inc
or
cltd
dec
jb
mov
neg
xor
xchg
fs
and
mov
sahf
stc
pushf
daa
push
add
fwait
in
add
push
push
mov
fidivl
mov
ljmp
pop
add
arpl
sbb
movsl
rolb
mov
add
fnsave
add
in
mov
jecxz
add
ljmp
dec
rorl
push
lea
fs
outsl
loop
mov
in
pop
pop
adc
sub
add
shll
in
iret
test
bound
mov
mov
add
add
pop
fdivrp
mov
mov
repnz
push
add
xor
mov
fimull
std
cmp
mov
imul
std
repnz
mov
stos
push
mov
mov
add
cmp
xchg
or
lcall
mov
mov
add
insl
jne,pt
mov
cwtl
mov
mov
clc
test
pop
rorl
push
imul
add
add
cmp
add
fwait
je
add
cmp
mov
popf
movl
cltd
rcrl
push
addb
imul
cmp
inc
add
add
mov
mov
jecxz
mov
inc
sar
popf
dec
add
jecxz
cmpsl
jnp
rcl
addb
push
clc
xor
mov
mov
fistpll
setb
mov
push
xchg
cmpsb
cmc
add
inc
push
add
jmp
loope
add
into
mov
out
test
inc
cmp
mov
push
pusha
add
std
push
inc
add
fnsave
mov
mov
jae
test
pusha
add
in
xchg
iret
imul
ja
add
add
sti
jno
popf
xchg
xlat
scas
xor
jb
mov
mov
mov
ljmp
repz
test
xchg
in
fadds
mov
int
jne
add
gs
add
mov
jns
gs
sbb
xor
add
add
adc
inc
jle
fsubr
inc
add
add
repnz
sbb
loope
push
repz
repz
add
mov
push
insl
lret
sbb
push
sahf
mov
add
add
lahf
test
icebp
inc
xchg
add
mov
mov
mov
and
adc
mov
inc
outsb
pop
decl
mov
jbe
mov
add
je
add
xchg
popa
pop
and
mov
cld
fistps
jle
int
int
add
sub
pop
andl
loopne
mov
scas
sbb
pop
loopne
mov
add
push
cmp
or
mov
add
in
sarl
repnz
sahf
mov
mov
add
gs
pop
xchg
add
addb
in
or
adc
add
mov
add
add
mov
jle
lods
ljmp
jb
mov
sub
pushl
add
daa
dec
mov
daa
fdivrl
js
inc
or
cmp
cs
jno
add
xchg
push
sub
stos
lcall
insl
sbb
scas
xchg
fldl
mov
add
mov
aas
cmpsb
jb
mov
add
pop
movb
add
and
mov
add
in
clc
divl
push
shrl
pop
push
push
add
mov
lods
hlt
jns
add
pop
lock
pop
or
add
xor
mov
das
jg
out
sbb
or
mov
sub
fucomi
cld
push
cmp
push
hlt
jl
jb
mov
in
js
add
inc
aam
jb
mov
push
mov
mov
sub
scas
cltd
sub
cmp
mov
push
jl
add
pop
dec
rolb
push
jns
add
cmpl
push
and
mov
add
mov
jle
jle
in
cmpsl
xchg
add
sahf
pop
pop
xor
je
sbb
or
incl
addl
aam
imul
xor
mov
icebp
into
bound
mov
popa
sub
adc
adc
pop
mov
add
mov
mov
mov
mov
mov
add
add
in
pop
loope
add
pop
inc
add
add
mov
data16
roll
mov
mov
add
mov
add
add
mov
push
pushl
mov
or
cmp
ljmp
sub
cmp
movsb
outsl
mov
and
rolb
mov
dec
mov
fisubs
inc
cltd
rolb
mov
and
loope
mulb
mov
fwait
pushf
enter
movsb
dec
and
mov
in
lahf
gs
add
xchg
push
adc
and
mov
cmp
jle
add
add
cmp
ret
sbb
cwtl
mov
mov
scas
cltd
rorl
ja
xlat
add
mov
add
xchg
add
mov
pop
je
daa
cwtl
xchg
addb
adc
or
mov
inc
add
xchg
push
int
inc
add
movsl
outsl
in
cmp
jmp
test
add
mov
cmp
and
add
mov
jb
mov
fdivl
xchg
rorl
movsl
jl
jge
mov
mov
inc
bound
mov
repz
push
mov
add
out
add
mov
lahf
mov
add
sub
fwait
loope
jnp
push
outsl
int3
aas
cmp
in
mov
cmp
add
dec
lcall
call
mov
mov
loope
adc
mov
lret
cs
dec
jno
adc
add
jbe
fwait
repz
fildll
mov
jmp
add
add
mov
and
push
addb
fwait
out
sbb
and
mov
cwtl
sbb
sub
or
lods
add
mov
push
add
insl
decb
inc
iret
xor
js
adc
mov
mov
fisubrl
fidivl
add
pop
dec
sbb
mov
sbb
mov
xchg
enter
in
adc
mov
push
mov
add
mov
nop
add
mov
ficompl
mov
mov
mov
mov
adc
ss
stos
sbb
das
jecxz
add
add
mov
or
cmp
add
mov
add
add
popf
enter
xchg
mov
daa
ffree
imul
mov
mov
add
xchg
mov
cli
ja
pop
dec
jne
jmp
loopne
mov
mov
jno
pusha
add
loopne
mov
cwtl
jnp
rolb
push
push
cwtl
xchg
mov
add
mov
rolb
mov
pop
jne
sub
add
mov
sub
xchg
add
enter
push
inc
sbbl
stos
xchg
inc
cmpsl
pop
outsb
mov
enter
ret
pop
repnz
mov
jb
mov
mov
imull
ret
adc
mov
mov
addb
adc
mov
and
pop
mov
or
outsb
jns
mov
js
addb
ss
sub
es
add
mov
add
mov
lahf
frstor
pop
inc
push
mov
and
movsl
stos
add
mov
test
add
sbb
pushf
in
add
pop
ret
fs
push
push
bound
mov
fldenv
mov
imul
mov
xchg
sbb
cmp
mov
cmp
xchg
xor
jns
dec
xchg
rolb
xor
add
add
add
rorl
push
add
lret
scas
jl
xchg
clc
or
add
add
ljmp
jbe
add
inc
test
int3
xor
add
xor
cltd
or
sub
cmpsb
mov
sbb
das
out
sbb
ret
xor
mov
push
add
cwtl
test
fstps
sbb
pop
dec
mov
pop
sub
mov
mov
fwait
push
and
pop
xor
mov
add
mov
addb
ret
dec
ds
lods
fimuls
popa
inc
sahf
ficompl
inc
in
gs
sbb
pop
rolb
mov
xchg
data16
push
push
inc
add
dec
loop
mov
mov
test
add
and
mov
sbb
or
adc
mov
popf
test
test
nop
add
jge
push
inc
add
push
xor
mov
xor
and
push
std
aam
les
ret
dec
add
not
add
pusha
add
add
rolb
mov
cltd
rcll
les
add
rolb
jne
rolb
mov
stos
xor
xchg
lock
pop
mov
sub
add
mov
add
xchg
mov
cmpsb
mov
dec
fadd
mov
push
or
rcll
sbb
add
mov
clc
fcomip
jb
mov
aam
fdiv
add
rorl
push
hlt
pop
stos
xchg
push
push
add
add
test
ljmp
add
cmp
jg
outsl
pop
ds
scas
lcall
adc
mov
cwtl
int
pop
in
rcll
lea
xlat
popf
sub
addr16
or
add
mov
pushf
cli
jne
add
mov
daa
cmp
mov
lret
enter
ljmp
pop
mov
adc
ret
sub
lods
in
movsl
icebp
rol
push
add
add
stc
lds
scas
cmp
pop
cmp
inc
jo
mov
popa
xor
pop
fcoml
add
jae
lahf
fucomp
les
mov
add
and
add
cmc
imulb
push
cmpsb
sbb
add
inc
add
mov
xchg
mov
dec
sti
fisubs
mov
nop
add
movsb
icebp
repnz
jmp
adc
scas
jno
xchg
mov
ljmp
inc
add
pop
rolb
sub
mov
mov
ret
xlat
and
mov
xchg
fadds
fistl
mov
das
mov
nop
add
mov
lcall
and
in
faddl
dec
cmc
cs
stc
sahf
dec
sarl
jo
mov
cmp
out
int3
cmp
pop
or
and
fldl
push
movsb
or
fisubs
js
push
cmp
jp
push
inc
or
sahf
sub
test
fbld
aad
mov
mov
xchg
jl
mov
sbb
gs
and
mov
lods
jo
mov
add
mov
sbb
push
and
subps
cli
les
add
inc
loope
sub
mov
add
add
addb
punpckhbw
add
sub
cmp
mov
out
in
pop
cmp
in
cmp
dec
movsb
ret
add
stc
mov
mov
mov
and
cmpsl
push
cmc
enter
mov
aad
scas
stc
inc
inc
insb
push
jnp
out
je
jbe
sub
add
flds
sub
cmp
movsb
and
mov
xchg
add
dec
add
fidivrl
add
ja
xor
inc
add
cmc
cmp
jne
add
jl
mov
lret
test
add
push
in
dec
mov
test
mov
xchg
jnp
cmp
and
mov
add
aaa
sub
mov
lods
test
cld
sti
xchg
push
mov
popf
push
stos
sti
inc
dec
push
mov
addb
mov
mov
adc
add
mov
dec
sarl
ljmp
mov
dec
and
ret
repz
mov
add
add
cmc
fstps
mov
mov
sbb
xchg
mov
cmp
std
mov
mov
enter
mov
mov
lahf
aaa
lock
jnp
sbb
fdivr
sub
pop
dec
sub
mov
sti
lret
sbb
jae
movsb
fwait
mov
cmp
cmpsb
and
jle
imul
xor
mov
stos
cli
mov
add
imul
push
mov
sbb
mov
pop
xchg
in
and
xchg
loope
add
add
add
dec
ja
pop
mov
sbbl
testl
mov
jmp
cmpsl
jno
mov
stos
das
outsb
inc
popa
mov
jne
fwait
xor
out
add
data16
fdiv
add
dec
rcrl
mov
pop
push
add
int
popf
dec
mov
sbb
cmp
mov
mov
mov
add
test
rolb
mov
jge
pop
jae
fwait
add
sbb
movsb
or
mov
add
adc
mov
divl
add
add
aaa
add
add
mov
mov
lcall
outsb
or
add
daa
jmp
rolb
mov
out
jno
int3
mov
lock
sahf
gs
in
add
cwtl
shll
lods
jae
add
ss
push
aas
sub
dec
addb
scas
inc
jg
aas
call
movsb
les
lock
push
test
add
mov
inc
add
aam
testl
mov
frstor
add
sti
sbb
add
sub
mov
fadd
add
cmp
daa
mull
subl
aad
add
mov
inc
add
pop
into
rolb
mov
xlat
jle
movsl
jl
rolb
mov
add
mov
dec
mov
cmc
imul
pop
mov
mov
out
in
test
push
add
mov
mov
daa
das
add
add
add
aad
add
xchg
repnz
andl
les
sets
pop
xchg
aad
add
test
lods
sub
in
mov
lock
fisubl
add
lahf
enter
mov
xchg
or
std
xchg
add
add
mov
repz
int
rolb
mov
add
jno
cmp
andl
ss
fsubrs
sub
pop
dec
iret
scas
cwtl
lahf
xchg
leave
xchg
add
repnz
mov
aaa
addb
cwtl
pop
push
imul
pop
bound
mov
cmp
cmpsl
mov
xchg
add
push
push
xor
mov
cli
jecxz
mov
ret
insl
jmp
cwtl
ljmp
mov
push
add
mov
bound
mov
mov
idivl
push
xor
add
mov
aad
pop
aaa
fidivrs
js
add
mov
or
movsb
mov
or
cld
outsl
aas
push
stos
and
mov
mov
add
pop
lods
dec
push
mov
add
mov
sbb
jecxz
dec
or
mov
mov
and
mov
xor
mov
jb
mov
lds
mov
jmp
lcall
fs
scas
mov
mov
or
fistpl
js
outsb
and
leave
stos
cmc
outsl
fistpll
aam
out
roll
push
dec
jnp
into
jns
into
add
mov
iret
insb
js
aas
adc
das
add
xor
mov
and
mov
imul
outsb
cli
sub
das
jmp
add
popf
outsl
jbe
insb
mov
mov
mov
xchg
add
mov
out
data16
mov
stos
push
add
xor
inc
fs
mov
add
mov
pop
rolb
mov
popa
xchg
es
adc
jns
add
mov
add
cmp
test
push
pusha
add
and
mov
add
add
sub
mov
add
and
mov
mov
dec
adc
data16
inc
lea
add
xchg
ja
test
out
or
and
mov
ret
and
xor
mov
in
jbe
out
cmp
add
mov
inc
add
shl
add
inc
or
mov
mov
popa
popf
xor
mov
jg
pop
pop
mov
push
add
push
pop
push
pushf
into
and
xchg
pop
aad
mov
mov
mov
add
scas
inc
std
mov
add
rolb
mov
jle
dec
mov
outsl
mov
adc
add
stos
stc
dec
rolb
mov
pop
add
jmp
into
stos
lods
leave
add
test
mov
lea
mov
mov
cs
jb
mov
and
xor
ss
push
call
arpl
in
testl
hlt
mov
cli
aad
add
mov
jno
mov
push
movsl
or
adc
mov
sti
add
sub
sahf
fcompl
add
mov
sti
stos
jge
mov
outsl
cltd
pop
clc
xchg
mov
data16
mov
data16
ja
outsb
adc
mov
push
inc
aas
push
add
mov
test
mov
sbb
mov
mov
outsl
add
jecxz
add
insb
push
mov
mov
pop
cmp
inc
aam
mov
pop
pop
push
adc
xchg
inc
jns
fwait
cmp
scas
and
or
cmp
mov
add
dec
inc
add
sub
rolb
mov
movsl
imul
mov
out
sahf
mov
in
mov
dec
xor
add
pop
addb
enter
stos
push
xchg
loopne
mov
mov
or
pop
data16
mov
test
xchg
or
xor
mov
dec
xor
mov
in
jo
mov
rolb
fcoml
add
dec
cmp
add
icebp
jmp
mov
out
cs
aam
add
cmp
addl
or
xor
mov
push
jp
fimuls
jp
add
mov
mov
outsl
push
xor
in
loope
popf
lods
jno
mov
mov
mov
push
scas
popf
xchg
insl
cmpsb
rcll
fiadds
mov
aad
lds
cwtl
and
test
and
mov
cmc
lahf
test
cmp
add
inc
pushf
pop
scas
mov
mov
inc
adc
mov
inc
add
jo
mov
cmp
fcomps
xor
mov
add
mov
or
sub
lcall
add
rcrl
in
jns
add
add
mov
xchg
xor
nop
add
lcall
stc
sub
adc
cmp
add
shl
lea
mov
fimuls
jns
addb
xchg
outsl
ds
pop
jo
mov
out
add
mov
test
add
test
outsl
aam
xchg
cmp
test
daa
rolb
leave
imull
pop
inc
inc
in
adc
cwtl
inc
lock
push
sub
bound
mov
js
insb
insb
lock
mov
sbb
mov
fdivs
jb
mov
add
add
xchg
imul
mov
inc
jge
adc
out
lret
add
cld
pusha
add
add
fcmovb
inc
lcall
cmp
add
xchg
add
enter
sbb
adc
int
inc
cmp
add
notb
scas
mov
add
add
clc
inc
call
jp
add
loope
xlat
adc
or
xlat
in
das
cmpl
daa
std
inc
add
jno
push
sbb
and
mov
mov
push
int
loope
repz
dec
jo
mov
aas
daa
mov
mov
and
mov
cli
hlt
cmp
jl
sub
rolb
mov
dec
jmp
out
pop
dec
adc
mov
adc
mov
jnp
in
icebp
call
test
jl
enter
add
push
mov
or
add
or
lods
xchg
and
mov
cmp
jmp
mov
push
jae
cmpsl
fsubr
push
jg
adc
std
sbb
insb
fs
ljmp
sar
add
jle
dec
int
xor
cmpsl
push
or
pushf
sbb
mov
mov
push
inc
add
add
mov
add
mov
je
add
mov
mov
movb
les
sub
lds
imul
rolb
mov
mov
dec
rolb
mov
add
cmp
inc
jno
add
scas
loop
mov
incl
mov
lcall
pop
ffreep
aas
scas
repnz
push
mov
add
push
add
push
jbe
rolb
mov
jo
mov
push
insb
into
iret
sahf
sbb
movsl
mov
add
lcall
popa
mov
jmp
jl
add
inc
js
add
add
add
add
jmp
or
add
test
dec
mov
int
xchg
jecxz
adc
mov
mov
dec
add
mov
pop
add
fwait
or
push
fdivrl
addb
mov
add
mov
lods
mov
add
addb
and
mov
in
pop
inc
add
jo
mov
xor
mov
addb
dec
add
adc
add
mov
inc
pop
loop
mov
and
cltd
jns
jmp
and
sti
push
pop
sbb
paddusw
jbe
push
jle
pop
or
dec
push
cltd
mov
mov
and
add
push
sbb
inc
dec
popf
mov
mov
pop
mov
imul
repnz
rcll
roll
mov
xchg
popf
bound
mov
cli
dec
test
sub
add
push
loopne
mov
add
sbb
cmpsb
sbb
cmp
std
or
add
loopne
mov
fwait
insl
js
jae
rolb
mov
add
mov
push
test
mov
rcll
add
aas
jmp
pushf
push
test
adc
mov
insb
or
add
in
lret
mov
mov
adc
and
jmp
in
out
pop
ret
int
or
dec
sbb
mov
and
xor
dec
mov
mov
adc
mov
jp
add
inc
add
inc
js
and
add
fsts
fisubs
mov
mov
or
mov
push
arpl
mov
mull
jo
mov
add
pop
inc
dec
and
mov
or
pop
xchg
stos
cs
add
mov
cli
test
mov
jno
add
roll
pop
sub
push
imul
jmp
mov
add
dec
sub
and
mov
push
dec
fimuls
xchg
add
mov
testb
sub
add
fldt
in
rolb
mov
call
movsb
ja
add
mov
cld
popa
push
cltd
xchg
add
add
xchg
mov
push
add
add
mov
sbb
push
add
cmp
add
rolb
mov
add
dec
and
inc
add
push
add
mov
add
sub
repz
push
add
pop
adc
push
mov
sbb
or
mov
xor
add
dec
call
mov
sarl
negl
xchg
jmp
leave
sub
mov
xor
add
bound
mov
mov
add
dec
xor
lret
es
and
add
inc
icebp
out
in
pop
mov
mov
aaa
cmp
addb
icebp
jb
mov
mov
and
sti
jg
int3
mov
push
into
xchg
xchg
push
call
fbld
xor
and
add
pop
mov
leave
mov
add
add
add
add
outsl
shrl
imul
add
fwait
ljmp
rolb
mov
adc
mov
add
inc
push
jns
jp
add
dec
fcoml
add
addr16
dec
movsl
repz
lds
icebp
or
adc
mov
addb
daa
stos
hlt
pusha
add
add
add
icebp
fmuls
push
les
mov
mov
mov
add
push
add
sbb
les
mov
add
mov
add
push
jl
pop
and
fsubrp
jno
call
mov
jmp
add
add
mov
rorl
fdivr
fs
jno
bound
mov
icebp
push
repnz
loop
mov
jo
mov
adc
mov
xor
mov
adc
mov
xchg
jns
pop
loop
mov
sub
and
sub
or
add
je
xor
pop
xor
fcompl
cmc
aas
inc
and
in
ficompl
cmp
lahf
dec
out
inc
test
push
add
data16
outsl
ljmp
add
add
add
inc
add
pop
notl
sub
push
add
mov
in
mov
es
mov
int
xor
outsl
cmc
mov
push
adc
jmp
jnp
xchg
push
add
mov
dec
mov
xchg
pop
push
xchg
stos
shrl
jns
mov
test
roll
add
mov
or
add
mov
nop
add
mov
lcall
mov
sbb
inc
xor
mov
fmull
lock
aad
out
popf
inc
add
sub
mov
push
jg
cmpsl
es
cmp
or
cmpsb
dec
nop
add
cmpsb
dec
loope
jne
mov
sbb
ficomps
xor
mov
adc
test
ljmp
jl
repz
or
addb
mov
fdivs
add
mov
jmp
add
pop
push
sbb
sti
ds
xchg
cmpsb
push
fsubrl
fmuls
jne
push
aaa
pop
stc
xchg
fnsave
add
sti
movsl
sbb
xchg
add
cmpsl
sub
fidivrl
jnp
add
icebp
xchg
nop
add
fcompl
dec
mov
xchg
or
adc
cmc
xchg
cmp
addb
lock
js
insb
lea
mov
mov
scas
out
inc
add
add
pushf
pop
ss
dec
inc
add
push
fcoml
push
aaa
jo
mov
mov
adc
mov
add
mov
rorl
fwait
leave
and
mov
mov
inc
fisttpl
xor
scas
xor
dec
lret
mov
addb
and
mov
lret
roll
mov
push
push
pop
sbb
add
aam
inc
add
mov
lret
lock
pushf
scas
iret
jecxz
psubw
gs
and
cwtl
push
add
mov
push
mov
add
ficomps
inc
mov
push
pop
ja
cmp
jg
add
addb
jno
shll
mov
mov
scas
fsubrs
add
mov
mov
daa
jno
iret
cmp
int
inc
add
addr16
sti
cmc
ret
inc
add
fs
out
add
addb
addr16
jns
fs
or
mov
or
mov
mov
into
sbb
dec
cmp
push
inc
jbe
aaa
add
mov
jg
pop
jmp
sbb
repnz
add
mov
jne
mov
popf
in
lahf
adc
hlt
mov
sub
jo
mov
mov
mov
push
movsb
mov
fistpll
cwtl
aas
rolb
xor
mov
add
add
dec
addb
loopne
mov
add
mov
sbb
dec
mov
hlt
rorl
mov
test
in
xor
mov
mov
mov
add
movsb
inc
add
mov
cmp
lock
mov
mov
pop
pop
mov
out
adc
mov
xchg
call
and
addb
loop
mov
add
push
add
jg
and
frstor
and
mov
add
mov
sub
add
push
pop
add
jmp
mov
rcl
mov
aad
cmc
mov
ljmp
or
repnz
or
lcall
pop
sti
add
mov
mov
mov
push
in
clc
jmp
sub
cmp
inc
sub
sarl
clc
cwtl
iret
mov
mov
mov
add
out
scas
mov
mov
mov
dec
mov
loopne
mov
loopne
mov
gs
xchg
inc
fdivrl
mov
add
js
call
bound
mov
cmpsb
sahf
fmull
dec
in
jecxz
outsb
push
add
int3
outsl
pusha
add
fdivs
mov
scas
pop
mov
or
mov
hlt
push
add
add
add
stos
pop
loop
mov
ret
mov
test
xchg
xor
mov
in
pusha
add
std
cmp
push
mov
je
jbe
push
add
and
add
je
and
inc
add
adc
mov
push
xor
mov
mov
add
inc
lods
or
and
imul
inc
jmp
push
sbb
lds
ret
xor
cs
and
call
mov
pop
sti
daa
jg
xchg
das
inc
and
mov
cmp
add
cmp
les
push
add
push
test
adc
add
rolb
mov
imul
inc
jg
in
inc
add
add
in
mov
mov
add
and
jg
jns
add
cmpsl
repz
popl
add
sub
inc
lods
rolb
mov
sub
adc
add
loope
mov
arpl
rolb
mov
dec
mov
adc
mov
add
rolb
mov
xchg
add
adc
mov
add
jno
ffree
xchg
add
pop
subl
xor
sarl
lods
imul
add
mov
stos
nop
add
sub
mov
gs
dec
xchg
mov
adc
mov
add
jnp
fildl
ljmp
jnp
pop
movsldup
mov
xchg
push
add
shrl
ret
lods
add
mov
and
mov
push
scas
repnz
add
push
add
and
mov
push
add
fcomps
xchg
popf
and
xor
lods
daa
cmp
add
icebp
adc
mov
out
orw
add
pop
test
mov
adc
sbb
enter
mov
add
or
xchg
aaa
mov
mov
mov
cli
mov
mov
add
mov
mov
add
xor
and
add
rolb
mov
mov
cmpsl
jbe
test
dec
popf
fstpt
push
jge
addb
lea
push
loope
xchg
push
addb
or
jnp
adc
loope
xor
into
add
scas
push
mov
ja
lock
xchg
ljmp
test
add
sarl
sti
mov
ret
pop
cmpsl
scas
nop
add
cld
stc
inc
jns,pn
add
mov
dec
pop
mov
dec
sub
and
scas
div
jmp
mov
mov
mov
xchg
or
mov
sub
cmp
add
xchg
xchg
in
insb
gs
mov
loope
push
cmpsl
mov
adc
mov
mov
lret
mov
pop
push
pop
fdivrl
es
pop
xchg
pop
jmp
push
add
addl
adc
mov
bound
mov
add
out
cmp
add
add
sub
rolb
cmpsl
mov
xchg
or
rcrl
mov
dec
std
cwtl
aaa
or
add
rolb
mov
popa
jnp
bound
mov
jecxz
mov
stc
repz
mov
jmp
add
sub
ret
jmp
inc
lods
inc
repnz
jae
jae
hlt
out
jne
fbstp
sbb
jo
mov
mov
xor
add
add
sti
mov
test
cmc
insl
push
add
test
push
addb
xchg
orl
mov
mov
movsb
mov
adc
adc
mov
hlt
std
sub
cmpsl
dec
mov
add
mov
cmp
sbb
mov
dec
enter
dec
outsl
mov
les
mov
test
icebp
add
jmp
cmpsl
lock
jo
mov
addr16
into
mov
hlt
add
mov
sub
jae
je
repz
push
ljmp
push
add
push
jg
cld
aad
add
les
adc
pop
dec
push
push
je
lds
xor
mov
es
lret
push
cmp
adc
inc
pusha
add
and
push
jnp
sbb
push
addb
ficompl
jbe
add
and
sahf
in
mov
mov
xchg
add
loopne
mov
shrl
jmp
movsb
jl
les
mov
mov
add
add
mov
and
sbb
add
pop
mov
push
jnp
sub
add
or
jmp
add
dec
hlt
mov
and
mov
mov
test
and
xchg
inc
add
add
jge
sbb
or
or
adc
mov
add
jge
loop
mov
test
jnp
add
mov
in
ror
loope
lea
push
addr16
cmc
imul
xchg
jge
test
cmp
push
sbb
outsl
add
mov
mov
push
cmp
testl
adc
mov
mov
jo
mov
test
jmp
dec
loope
push
in
sub
pushf
inc
cmpsb
xchg
mov
push
mov
in
sub
mov
push
das
fmull
dec
lahf
jne
jno
pusha
add
mov
sub
daa
and
add
push
or
add
in
xor
movsl
sub
addb
fcompl
and
in
in
ret
pushf
cs
pushf
fbld
add
and
mov
pop
iret
fsubr
inc
push
ljmp
mov
in
pop
pop
mov
bound
mov
pop
push
pop
or
add
mov
add
rolb
sbb
mov
int3
lods
mov
les
inc
nop
mov
popa
cmp
or
inc
add
test
je
cld
loopne
mov
outsb
das
std
xor
push
mov
add
mov
add
nop
add
popa
lds
pop
lret
mov
sbb
out
lar
mov
inc
and
fcoms
mov
inc
xor
cmp
mov
rolb
aas
mov
or
outsl
rolb
mov
popf
add
mov
les
clc
aam
rolb
mov
lea
fidivl
jmp
or
int
in
dec
dec
mov
or
call
mov
or
das
jnp
loopne
mov
enter
pop
inc
in
mov
push
push
ja
test
add
xchg
xchg
mov
xchg
dec
mov
and
addb
lcall
pop
lret
or
push
add
aam
fmuls
cmp
mov
nop
add
mov
xchg
aaa
or
inc
add
in
out
addb
cmp
or
fisubrl
mov
into
sub
and
mov
mov
mov
xchg
rolb
mov
add
andl
aad
and
push
fsts
add
mov
ja
incb
rolb
mov
lcall
sub
dec
addb
xchg
mov
xchg
jno
data16
imul
cmpsb
pushf
test
mov
sub
and
adc
mov
cmp
jno
mov
mov
pop
insb
in
addr16
pop
rolb
mov
xchg
inc
add
jecxz
add
add
add
popa
xchg
inc
out
cmp
mov
adcl
add
out
movsl
fnstsw
xor
inc
pusha
add
inc
add
mov
arpl
push
add
mov
paddsb
jle
cltd
aaa
mov
mov
pop
mov
popl
mov
jg
pop
test
cltd
add
mov
xor
add
leave
test
xchg
loope
enter
add
mov
xor
cmpsb
sbb
in
cmp
incl
cmp
add
ffreep
pop
in
into
ds
addr16
mov
dec
cmp
mov
add
mov
divb
mov
rolb
mov
stos
hlt
fldz
call
push
andl
mov
mov
mov
fmuls
or
add
or
add
pop
scas
sub
sub
add
push
adc
gs
aaa
leave
loop
mov
push
jns
sub
in
add
mov
sbb
add
mov
mov
add
add
clc
xchg
xchg
add
mov
jns
push
lods
xchg
je
add
add
addr16
xlat
loopne
mov
mov
mov
add
and
xchg
loope
call
pop
int
adc
mov
push
xor
mov
add
inc
add
std
fstpt
int3
shl
cli
leave
lahf
xor
clc
mov
mov
cmp
mov
cli
stos
push
add
add
jge
out
sbb
inc
add
add
les
aaa
add
mov
hlt
xchg
add
mov
frstor
add
rolb
mov
popa
mov
addb
es
mov
mov
add
mov
inc
jb
mov
jge
sbb
add
test
mov
mov
and
mov
daa
pop
sahf
add
mov
cli
mov
adc
inc
and
rolb
push
aas
push
add
add
cli
pushf
das
shll
add
add
mov
sbb
fmull
sub
mov
mov
stc
mov
cmp
push
fisubrl
pusha
add
fldt
mov
in
faddl
addb
outsb
push
arpl
and
add
sub
scas
add
add
xchg
sub
test
mov
icebp
xchg
xchg
cmp
add
add
js
stos
pop
xor
mov
dec
mov
imul
or
cli
in
scas
jne
add
cmp
pop
mov
adc
or
mov
movsb
loopne
mov
xchg
aas
pop
jle
xor
add
or
outsl
jnp
fwait
in
add
push
jl
push
std
gs
mov
jno
pushfw
sbb
push
js
push
mov
out
push
iret
xor
fwait
scas
jge
loop
mov
cmp
mov
or
mov
lea
cmc
jecxz
xchg
cs
call
jecxz
adc
es
xchg
jb
mov
mov
punpckhbw
fsubp
add
mov
adc
mov
cmp
add
arpl
mov
outsl
or
xor
add
jmp
add
add
dec
adc
mov
jae
and
mov
aad
out
test
inc
adc
mov
jle
inc
jmp
shll
xchg
add
fdivrs
add
sub
add
inc
mov
fs
sub
addb
arpl
xor
hlt
sbb
shll
mov
cmpsl
pop
in
add
sub
xchg
test
cmpsb
dec
add
lahf
adc
mov
cld
pop
mov
inc
add
xchg
add
bound
mov
or
scas
xor
test
xchg
xlat
mov
mov
pushf
shll
add
xor
inc
add
addb
cmp
add
jnp
push
cmpsl
aas
push
xchg
scas
addb
mov
add
loopne
mov
dec
cmpsl
addr16
xor
inc
adc
mov
push
call
pop
inc
add
mov
sbb
js
mov
xor
sub
mov
mov
sub
aaa
mov
inc
hlt
pop
pop
mov
jno
jno
dec
nop
add
scas
mov
add
add
addb
and
mov
arpl
push
sub
jb
mov
iret
cmp
add
add
popa
add
add
add
sarl
add
cltd
xor
xchg
add
adc
into
cltd
bound
mov
or
cld
mov
aaa
xchg
xor
mov
add
jbe
add
lock
sub
xchg
add
aas
roll
mulb
jmp
outsb
dec
sbb
or
add
cs
pop
adc
mov
fsub
sub
mov
add
mov
mov
in
sub
lcallw
add
mov
addr16
add
lahf
and
fwait
sub
imul
add
mov
ja
cvtdq2ps
bound
mov
cmp
mov
add
mov
adc
mov
cmpsl
xor
sbb
add
mov
repz
inc
add
add
ret
ljmp
neg
sub
or
ret
jne
jb
mov
sahf
rcrl
popa
cmp
fcmovbe
add
xchg
adc
outsb
repz
iret
push
testl
cmp
popa
dec
in
xchg
add
push
add
adc
mov
ljmp
mov
add
inc
mov
hlt
mov
add
mov
lret
aam
adc
jae
jb
mov
fadds
mov
out
mov
or
std
add
mov
roll
addb
movsl
inc
add
adc
daa
xchg
or
add
xchg
ficompl
fstpl
popf
mov
mov
and
or
push
mov
dec
pop
pop
cmp
ret
std
mov
mov
and
jl
cmp
add
fists
add
mov
aam
es
fldt
xchg
jne
shll
sti
mov
xchg
add
mov
mov
push
add
mov
add
mov
cmpsb
and
mov
add
mov
mov
add
ds
les
or
xor
mov
xor
mov
ret
ss
pop
push
xor
mov
popf
jae
jae
jae
xlat
cmpsb
jge
js
in
dec
lds
rolb
mov
add
outsb
lods
mov
sbb
mov
je
icebp
and
fistpll
mov
data16
mov
mov
jle
imul
cmp
jnp
cli
sub
cltd
and
daa
xchg
mov
adc
mov
add
add
in
js
rcrl
lods
jnp
add
sbb
sarl
insb
sbb
sahf
dec
lret
test
mov
ljmp
adc
mov
rolb
mov
loope
shll
inc
loope
add
mov
clc
lret
fistl
adc
addb
dec
rcr
lret
xchg
add
add
insb
scas
and
add
aam
mov
add
add
push
xor
sahf
cwtl
push
int
rolb
mov
mov
push
pop
loope
in
mov
mov
mov
out
dec
jl
fnstsw
fmull
mov
jp
add
add
sub
jl
mov
outsl
ret
dec
stos
shr
cmpsb
lea
mov
jecxz
sti
loop
mov
mov
add
or
jae
mov
sbb
add
jecxz
rcrl
jmp
ret
add
mov
ret
and
push
add
jmp
lea
xchg
pop
decb
push
cltd
sub
mov
les
scas
or
or
add
mov
mov
mov
cmp
add
lahf
lock
out
int
lret
add
mov
push
pushf
movsl
push
imul
movsl
or
push
jb
mov
mov
sub
dec
pop
shll
pop
bound
mov
addb
scas
movsl
stos
rcll
xchg
add
dec
mov
int
fistl
inc
add
jecxz
jg
xor
loopne
mov
inc
ficoms
int3
mov
xchg
daa
push
add
jb
mov
imul
dec
sbb
dec
neg
jmp
cmp
cli
mov
fists
leave
push
xor
ja
daa
pop
mov
mov
push
mov
in
or
out
sbb
out
mov
addb
inc
mov
cmc
add
shll
sub
int
cmc
adc
mov
add
push
enter
and
mov
sarl
sbb
mov
lea
daa
divb
stc
mov
daa
xchg
mov
inc
popa
lock
rolb
lods
mov
add
mov
add
mov
xchg
mov
stos
int
mov
lea
sti
sub
dec
jmp
clc
int
pop
pop
inc
cmp
mov
lret
mov
mov
ss
paddb
and
mov
mov
sub
incb
gs
mov
add
mov
mov
jne
insb
shll
inc
ret
loopne
mov
pop
rolb
mov
mov
jnp
add
outsb
adc
addr16
outsb
and
cmpsl
mov
add
sahf
ja
add
add
es
dec
mov
add
add
mov
add
fwait
lods
ja
fnstsw
xlat
fdivrs
popf
call
hlt
xor
or
data16
fistpll
scas
scas
or
mov
xchg
sub
mov
mov
mov
fldt
mov
xchg
shll
mov
repnz
add
aas
aad
jmp
int3
add
ljmp
lds
cmp
ja
mov
mov
inc
ret
fisubrs
in
ret
gs
sub
xor
inc
or
jns
mov
add
sub
xchg
jge
sub
or
fs
iret
push
jmp
inc
es
add
mov
mov
mov
addb
pop
xorl
cmp
add
mov
je
ret
or
adc
add
shll
mov
jle
sub
mov
jg
add
scas
std
scas
in
add
dec
fsubl
adc
pop
jp
push
repz
stos
cmpsb
rolb
mov
inc
jmp
pop
ljmp
fsubs
imul
lahf
scas
popf
mov
add
mov
sti
jnp
jb
mov
inc
inc
fwait
pop
inc
sbb
fisttpl
out
testl
stos
add
outsb
sbb
lret
rolb
mov
mov
pop
sub
vxorps
add
mov
sbb
mov
jl
push
add
mov
sbb
mov
mov
lcall
addb
mov
int3
dec
rolb
mov
popf
xchg
pop
add
les
out
cli
xor
add
in
imul
cmp
jno
cmc
adc
inc
ja
imul
mov
jae
outsl
ss
mov
add
add
in
call
sbb
mov
add
fbld
mov
fldcw
mov
or
add
je
les
daa
xchg
fldt
pop
add
add
and
add
enter
and
inc
mov
add
xor
add
mov
add
mov
push
inc
cmp
add
es
int
cmpsl
cltd
xchg
loopne
mov
add
mov
adc
mov
fstl
stos
jle
fcoms
mov
adc
outsb
jae
add
sub
mov
mov
imul
add
xchg
addb
das
and
mov
leave
imulb
adc
add
mov
add
and
out
cwtl
addb
cmc
je
mov
sub
in
mov
pop
dec
addb
lds
ds
pop
mov
push
add
pop
add
mov
push
lahf
xchg
pop
adc
cs
and
dec
pusha
add
or
sub
lcall
adc
mov
add
addb
sbb
loope
movsl
outsl
in
nop
add
dec
cwtl
daa
jne
push
inc
inc
pop
lahf
sub
wrmsr
add
into
sub
pop
sub
loopne
mov
add
jo
mov
add
mov
testb
xor
mov
mov
and
push
xchg
pushf
lret
mov
lret
scas
lret
adc
addl
fmulp
push
xor
in
mov
mov
movsb
mov
frstor
xor
mov
or
dec
mov
stc
dec
inc
jae
ffree
cli
outsb
mov
cmp
xchg
mov
popf
pusha
add
loopne
mov
lret
mov
or
mov
incl
mov
inc
add
in
loop
mov
jnp
ret
sbb
or
mov
add
adc
mov
push
ljmp
pop
and
inc
jmp
inc
add
scas
sbb
mov
and
mov
lahf
sti
outsl
inc
sub
rcr
aaa
and
out
push
bound
mov
mov
pop
or
add
adc
mov
testl
repnz
sahf
sbb
xor
out
stos
ja
sbb
xchg
jge
mov
outsb
mov
mov
add
xlat
nop
add
nopl
dec
stos
and
mov
cmpsl
lret
lods
loopne
mov
jge
stos
xor
popf
rcr
or
imul
repnz
pop
jecxz
iret
hlt
jbe
add
jg
add
addr16
test
mov
xchg
es
fwait
lret
popa
sbb
fists
sbb
aam
test
add
or
xchg
stos
push
outsl
insl
or
jle
or
idivl
add
mov
dec
mov
aad
add
jne
popa
cltd
addb
mov
xlat
loopne
mov
cli
lcall
dec
bound
mov
jecxz
fwait
push
pop
push
add
jne
and
loope
int
pusha
add
xlat
mov
mov
push
add
dec
rcll
sti
repz
sub
inc
clc
jbe
dec
test
mov
add
and
mov
out
sub
mov
movb
ss
fldl
adc
mov
jecxz
add
pop
ret
xchg
and
inc
out
movsb
mov
clc
out
xchg
add
add
mov
out
add
add
jl
adc
xchg
fwait
bound
mov
dec
mov
rolb
iret
push
hlt
push
stos
push
push
add
mov
mov
dec
enter
sbb
ljmp
add
fistl
mov
stc
ror
and
aam
inc
dec
divb
mov
mov
add
add
mov
lock
les
mov
inc
ja
insl
pcmpgtw
add
add
int
dec
lods
adc
cli
sahf
aad
in
or
add
jmp
outsb
loop
mov
pop
push
push
pop
push
dec
popa
test
jb
mov
repz
popf
les
mov
jmp
loope
add
scas
sbb
mov
cmpsl
js
in
pop
mov
sti
mov
dec
dec
outsb
stc
loopne
mov
mov
fnstsw
lock
cmp
jno
cmpsb
push
int
push
add
mov
nop
add
out
xor
mov
push
mov
add
xabort
cld
fisttpll
jb
mov
insl
stc
jae
loopne
mov
jecxz
sbb
aas
fstps
mov
mov
add
in
mov
cmc
lock
mov
mov
sti
lods
movsb
fs
cmp
mov
sbb
cmp
mov
mov
add
mov
add
mov
mov
dec
mov
add
loopne
mov
lods
mov
iret
les
sub
and
lret
sahf
dec
ret
imul
inc
jne
cmp
cwtl
jo
mov
daa
dec
and
sbb
lret
nop
add
lock
sub
rolb
rcrl
dec
sbb
adc
mov
jp
frstor
add
adc
enter
push
push
sbb
bound
mov
and
mov
adc
xchg
clc
push
jp
xchg
mov
mov
add
add
sti
adc
mov
stc
mov
xlat
push
mov
add
push
dec
loop
mov
mov
add
cwtl
addb
loope
adc
add
push
notl
sub
cmpsb
fwait
pop
movsl
jecxz
adc
mov
add
shll
inc
jo
mov
push
repnz
rolb
mov
dec
mov
mov
mov
xor
pushf
or
out
ficoms
and
mov
and
movsl
mov
push
add
mov
lea
add
in
sub
cmp
fs
insl
mov
sti
stos
stc
jns
addb
in
mov
loope
sub
push
jl
xchg
add
and
mov
cmp
cs
test
hlt
movsb
or
sbb
jg
rolb
mov
ret
mov
ja
add
in
sbb
xchg
add
testl
jg
add
sbb
add
ss
push
pop
mov
pop
mov
mov
scas
lcall
das
les
and
xchg
jae
cmpsb
mov
add
lahf
out
in
mov
test
pop
or
add
es
test
sub
sub
mov
add
push
cmp
outsl
jbe
mov
mov
and
mov
add
add
movsl
icebp
data16
movsl
push
loopne
mov
mov
loopnew
mov
add
mov
das
arpl
mov
and
loop
mov
repz
and
mov
stos
imul
mov
