faddl
dec
je
add
pop
inc
cmpsl
test
sub
mov
imull
mov
mov
and
hlt
aam
ret
xor
mov
xor
in
jbe
add
add
add
mov
add
add
ret
mov
jg
iret
pop
adc
xchg
add
add
stos
push
adc
sarl
dec
rolb
add
add
mov
add
mov
add
push
addb
in
add
mov
mov
push
cmpsb
ja
test
dec
mov
call
dec
xchg
loopne
mov
mov
rorl
or
push
and
mov
add
adc
mov
cwtl
lods
mov
add
add
add
fidivs
mov
lret
mov
daa
inc
fcmovnu
mov
inc
in
es
add
push
mov
adc
mov
and
mov
mov
mov
imul
pop
popf
push
push
adc
stos
inc
aad
xlat
fcomip
inc
add
sub
xchg
push
add
sub
out
inc
loop
mov
add
fistps
repz
adc
mov
sti
mov
inc
add
add
sbb
dec
or
mov
repnz
lods
ja
jae
add
jnp
out
push
mov
fdivl
jns
popf
mov
add
push
jle
mov
mov
push
add
outsb
out
addb
add
mov
mov
add
jo
mov
add
sar
lcall
nop
add
shll
mov
mov
add
pushw
inc
add
lock
test
xchg
shl
jnp
mov
xor
int3
popf
in
pop
xchg
add
mov
fldenv
jle
fs
mov
sarl
jo
mov
imul
mov
mov
and
mov
in
jmp
xchg
out
es
sbbl
mov
add
lret
leave
je
cld
mov
and
fs
inc
sub
mov
add
subl
imul
add
adc
mov
lds
dec
xchg
pop
idivl
aaa
mov
lods
pop
iret
inc
scas
mov
mov
scas
fsubl
add
bound
mov
dec
call
sub
bound
mov
jg
jge
fmull
mov
dec
fs
jecxz
aas
pop
xor
pop
xor
add
mov
aas
xor
mov
mov
add
dec
in
jg
cmp
jmp
add
mov
pop
mov
dec
pop
iret
mov
add
sbb
inc
mov
push
add
inc
add
mov
add
add
adc
and
mov
adc
mov
add
mov
mov
mov
call
mov
dec
loope
fwait
push
shll
push
xor
mov
repnz
add
addb
mov
mov
nop
add
popa
xchg
push
ret
movswl
add
mov
mov
xchg
insb
adc
cmpsb
mov
loop
mov
push
sti
mov
mov
inc
add
mov
add
mov
xor
data16
inc
add
xchg
stos
cmpsl
sbb
mov
mov
or
adc
data16
repz
cs
inc
mov
add
push
cmp
scas
mov
add
mov
bound
mov
cli
fdivrs
jmp
inc
xchg
add
add
mov
das
scas
aam
test
dec
mov
stos
stc
popa
sahf
xor
push
inc
sti
sub
movsl
out
sahf
push
xchg
fwait
jg
daa
add
negl
xor
mov
pop
adc
push
popa
adc
pop
ss
lret
and
cmpsb
adc
xor
mov
test
inc
add
fsubs
add
fildll
into
cmp
movsl
cmp
xchg
adc
jl
popa
je
jo
mov
push
mov
mov
test
out
ficomps
pushf
xchg
in
fdivr
dec
out
jo
mov
and
mov
mov
addb
outsl
imul
roll
sub
xor
xor
xchg
push
pusha
add
add
mov
neg
sbb
xor
mov
add
mov
cmp
and
call
lret
imul
mov
sub
jmp
add
cs
sbb
mov
jo
mov
mov
add
stos
sub
xor
add
popf
mov
mov
in
xchg
int
add
lea
imul
add
mov
add
xor
mov
pop
cmpsl
cmp
mov
sub
xchg
add
dec
add
ljmp
out
mov
jmp
xchg
mov
cmp
or
xchg
fldt
mov
xchg
xor
xchg
fnsave
nop
add
inc
roll
pop
mov
fcompl
xor
add
test
add
sub
inc
inc
lods
clc
mov
mov
mov
sub
sti
aad
cli
cmp
add
add
mov
and
lahf
out
inc
add
push
inc
fnstcw
mov
enter
mov
lret
fsts
dec
inc
adc
mov
call
add
movsb
out
inc
add
push
inc
add
mov
jne
mov
mov
jae
fldcw
jle
push
add
mov
add
mov
add
add
js
dec
test
push
dec
inc
jne
push
xor
mov
inc
pop
pop
pop
xor
cli
jb
mov
lahf
xlat
sbb
shll
push
movl
and
mov
fst
pop
nop
add
inc
mov
cmc
adc
jge
xor
mov
adcl
jl
aad
subl
fsubl
sahf
aas
push
add
mov
fwait
mov
lods
push
push
add
sbb
add
and
push
mov
mov
push
dec
jns
pop
inc
movsl
mov
imul
fistps
popf
mov
xor
mov
add
mov
sub
add
mov
mov
mov
mov
mov
mov
addb
lret
out
adc
mov
add
mov
jg
ljmp
cld
cs
push
sahf
fs
loope
jno
gs
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
push
addb
insl
mov
mov
fdivrs
add
sub
leave
cmp
clc
add
mov
or
test
xchg
mov
xchg
cs
sahf
xor
jno
add
push
add
out
add
int3
push
add
icebp
leave
bound
mov
sub
mov
push
xor
jo
mov
dec
aam
enter
or
fistps
hlt
xchg
enter
mov
mov
data16
daa
pop
mov
push
lods
repz
imul
testb
mov
xchg
add
mov
mov
mov
add
xor
enter
add
xchg
jnp
test
xor
mov
add
aas
lods
cmp
and
or
add
mov
mov
lret
addb
inc
add
ret
push
mov
push
lahf
cmp
add
mov
inc
and
mov
sbb
add
cmp
cltd
inc
int
add
pop
sub
mov
add
shr
loop
mov
sahf
mov
mov
out
and
mov
jb
mov
mov
imull
fstpt
xchg
inc
xor
mov
loop
mov
outsl
xor
sub
xor
xchg
sub
add
mov
adc
add
mov
fwait
xchg
popa
or
arpl
mov
sbb
add
hlt
ret
data16
sbb
add
jnp
addb
mull
add
mov
scas
movsb
outsb
insb
fwait
sbb
mov
js
cmp
add
adc
sti
push
arpl
push
fistps
mov
hlt
ss
sbb
std
jle
add
jno
dec
add
mov
or
ljmp
fwait
ja
add
add
add
mov
dec
mov
xchg
fdivr
jbe
cltd
bound
mov
fistl
arpl
test
cltd
xor
pop
int3
aas
stos
lods
addb
lods
rolb
daa
sbbl
in
aas
in
jecxz
add
xchg
insl
mov
js
mov
insb
dec
cs
mov
mov
jo
mov
fidivl
add
mov
push
xchg
sub
mov
jbe
ss
lret
and
ficoms
insl
jp
fstps
add
mov
or
jbe
pushf
test
ds
inc
push
add
add
mov
testb
mov
inc
stos
mov
add
add
push
sub
in
pusha
add
pop
iret
adc
push
push
add
and
or
lods
pop
pop
dec
addb
in
push
jle
lret
mov
push
jecxz
xchg
inc
and
xchg
icebp
aas
xchg
add
fidivs
cmpl
hlt
dec
in
jns
ss
add
lcall
add
pop
dec
or
cld
xchg
cmc
dec
xor
je
jb
mov
push
fidivl
cli
lahf
mov
sti
pop
push
add
outsb
cmpsb
xor
jo
mov
mov
or
in
clc
pop
loop
mov
je
movsb
lds
clc
inc
add
xchg
aam
add
rcll
daa
mov
mov
add
ret
ja
data16
mov
add
mov
add
xor
mov
push
js
mov
dec
and
mov
add
out
mov
sub
cmp
enter
add
into
filds
scas
pop
negb
repnz
cmpsl
ret
pop
sub
cmp
inc
das
std
push
mov
repnz
pop
jne
xchg
or
mov
jmp
add
push
or
mov
call
leave
push
mov
inc
popa
das
mov
sbb
les
jp
in
jb
mov
sub
decl
sbb
leave
push
jle
add
mov
mov
add
xor
add
inc
inc
inc
cmp
cld
fs
sti
push
in
daa
jmp
in
add
xor
es
add
cmp
add
xchg
jmp
add
fwait
or
cmp
lea
mov
inc
pop
xchg
xchg
mov
mov
xor
mov
fsts
mov
jns
out
mov
mov
add
add
and
mov
adc
int
mov
or
dec
cmp
and
mov
dec
mov
push
add
and
cld
xchg
rolb
mov
add
adc
mov
sub
add
push
stc
cs
xchg
or
das
pop
jle
test
push
pop
fdiv
js
push
xchg
push
adc
mov
jbe
lret
rolb
mov
add
inc
aam
bound
mov
add
mov
xor
cmpsl
shll
je
into
fwait
cmc
jp
xchg
stos
push
mov
mov
je
push
mov
and
fstpl
jl
add
xchg
jg
mov
add
dec
add
nop
add
pop
inc
pushf
jmp
jmp
dec
inc
xchg
push
call
dec
stos
cli
icebp
jns
mov
mov
xor
data16
xchg
rolb
mov
add
clc
into
xor
repnz
mov
rolb
dec
xchg
nop
add
dec
mov
ds
mov
sbb
pop
add
cmpsb
mov
es
daa
lods
push
cwtl
pop
adc
mov
test
mov
push
lds
popf
int3
push
mov
mov
mov
dec
lds
add
mov
insl
sub
pop
lret
test
scas
in
xchg
add
adc
cmpsl
mov
mov
add
add
mov
cld
pop
aaa
out
push
add
push
scas
push
jnp
rcrl
sub
dec
call
sub
jo
mov
mov
ret
xchg
push
push
mov
mov
add
mov
pop
ja
add
ret
ret
jae
notl
fisubrl
js
pop
je
rolb
mov
jge
or
jb
mov
mov
mov
jecxz
dec
call
lahf
push
negb
jnp
dec
mov
data16
lahf
dec
inc
dec
cmp
mov
movsl
mov
mov
mov
pop
xchg
jle
push
add
pop
lds
mov
test
lods
add
sar
addb
dec
adc
mov
test
add
mov
mov
mov
das
fdivrl
gs
pop
sub
xchg
inc
add
add
add
loop
mov
movsl
cwtl
fcmovnb
add
orl
sbb
push
xor
aam
divl
add
lods
mov
jmp
push
inc
xlat
fwait
mov
push
pop
mov
push
cwtl
adc
imul
sahf
or
mov
pop
rorl
icebp
arpl
add
fadds
add
add
pop
mov
mov
push
sub
addb
sub
mov
mov
and
add
lcall
push
jne
or
add
add
test
add
iret
cmpsb
pmaxsw
das
data16
add
pop
iret
test
mov
mov
mov
fwait
mov
test
scas
mov
mov
mov
mov
add
pop
fisttps
add
jnp
mov
mov
clc
jl
test
mov
add
mov
or
mov
push
fisttpl
std
cwtl
fcompl
ja
sub
mov
cld
fiaddl
jmp
xor
jecxz
fmuls
jno
push
add
add
mov
or
mov
insb
xor
insl
mov
lock
inc
dec
mov
jo
mov
aaa
icebp
jmp
jl
add
lcall
cmpsb
sti
jg
loopne
mov
mov
clc
jp
fnstcw
mov
xchg
sahf
jnp
adc
cmp
fcmovu
jne
stc
jnp
or
add
push
js
fisttpll
test
add
mov
mov
test
gs
test
iret
pusha
add
mov
into
cmc
les
cwtl
pop
or
pusha
add
mov
test
pushf
xor
cltd
pop
ja
ljmp
fmuls
test
mov
fwait
repz
pop
bound
mov
push
aas
push
mov
mov
mov
insb
fldl
and
mov
addr16
push
test
dec
or
add
add
mov
jle
inc
add
mov
cmpsb
cli
int3
ss
out
lods
shll
jbe
sub
imul
cmc
stc
out
test
add
xor
nopl
mov
add
rorl
mov
test
add
mov
xchg
clc
pop
daa
es
and
cmp
mov
mov
mov
test
inc
rolb
xlat
rolb
mov
inc
imul
addl
add
in
or
xchg
pop
ja
push
push
sub
pop
mov
pop
fcoms
mov
add
loope
push
pop
cltd
inc
add
decl
or
cmp
fwait
push
sbb
mov
out
mov
rolb
mov
fstpl
lcall
add
lods
xor
add
clc
in
add
mov
xchg
insb
mov
mov
sbbl
and
inc
add
add
leave
inc
add
fdivrs
or
add
or
inc
add
mov
mov
mov
ljmp
add
in
jp
xlat
icebp
mov
xor
std
lret
inc
add
mov
xor
add
fwait
add
add
jmp
pop
je
cwtl
jg
add
xor
stc
scas
fwait
pop
lods
sti
call
add
or
and
sub
add
repnz
sub
mov
sub
cld
negl
fiaddl
pop
into
lahf
fs
xlat
aas
rcrl
frstor
call
out
mov
sub
aam
rolb
pop
jp
mov
jnp
add
add
add
sbb
push
mov
aas
fsubs
dec
ret
loop
mov
mov
mov
daa
dec
dec
xchg
add
or
adc
pop
push
add
inc
add
adc
mov
stc
fisubl
push
lahf
xchg
loop
mov
mov
bound
mov
add
mov
mov
cmp
test
cmc
movsl
dec
movl
scas
addl
test
pop
xchg
xchg
in
xchg
outsb
repnz
fiaddl
fmull
and
mov
in
mov
inc
cli
mov
vminsd
cmp
mov
fs
mov
pop
ds
fnstenv
xchg
dec
sub
or
outsb
mov
pusha
add
push
lret
jb
mov
mov
push
xchg
push
int3
inc
and
stos
sahf
xor
mov
add
add
mov
roll
jb
mov
add
ret
push
mov
fisubs
cmpl
cmp
add
leave
dec
mov
add
push
add
add
into
pushf
cmc
in
rolb
mov
mov
cltd
loop
mov
int
jp
and
mov
int3
adc
mov
movsl
pop
mov
push
les
xchg
pop
leave
adc
ja
cmp
rolb
mov
jle
les
mov
lock
cmp
add
in
mov
cmp
xor
sahf
outsl
dec
jnp
add
addb
movsb
lds
mov
pop
push
adc
mov
lock
ja
pop
xchg
push
cli
idivl
or
add
cmp
lcall
push
rolb
mov
mov
out
lret
pop
xor
mov
mov
push
aad
mov
loopne
mov
inc
lea
inc
dec
jecxz
fldt
aaa
and
xchg
test
test
jb
mov
loopne
mov
xor
fildl
mov
ljmp
add
mov
jae
add
add
out
add
mov
lea
jno
add
lahf
pop
sti
call
inc
out
test
insb
pop
lcall
mov
imul
mov
push
add
add
mov
inc
imul
pop
and
cmc
popa
outsl
addb
cmc
jmp
ret
lcall
cmp
add
mov
hlt
mov
add
and
mov
xchg
mov
mov
push
lcall
jmp
dec
pop
sub
ret
aas
adc
cmc
xchg
movsb
push
test
pop
jge
out
daa
mov
mov
cmp
ds
jmp
addb
pushf
je
bound
mov
add
mov
fs
clc
mov
add
mov
push
jb
mov
add
add
mov
out
pop
push
jnp
daa
dec
xchg
push
fs
mov
add
outsl
mov
lahf
sbb
or
hlt
pusha
add
dec
addb
in
dec
inc
stc
inc
test
sbb
ljmp
fnstsw
add
outsb
push
cmp
repnz
lods
dec
in
adc
mov
xchg
or
loop
mov
pop
arpl
xchg
sbb
sbb
lods
daa
jle
mov
pushf
mov
addb
orl
fisttpl
ret
xor
mov
mov
dec
push
push
add
mov
ljmp
mov
imul
fildl
pop
mov
test
mov
push
out
scas
jge
sub
adc
mov
xchg
cmp
pop
mov
mov
and
add
lret
test
mov
mov
mov
int3
mov
daa
iret
xchg
cmp
fistpll
add
ret
inc
mov
mov
mov
push
icebp
in
add
jbe
mov
loopne
mov
mov
test
mov
mov
mov
add
mov
fs
add
mov
mov
repnz
in
addb
jns
add
cmp
test
sbb
pop
nop
add
pop
cmpsb
lods
dec
mov
mov
cmp
add
mov
rolb
mov
jmp
dec
push
jno
aad
adc
clc
in
xchg
jge
add
mov
jae
add
mov
out
jae
push
test
mov
push
test
mov
mov
jmp
push
int3
or
in
mov
in
std
rolb
mov
push
out
inc
inc
sub
xchg
stos
adc
rolb
mov
push
add
pop
movl
mov
lret
jecxz
add
jge
insb
sub
inc
add
add
mov
ret
pop
out
or
hlt
test
js
rorl
nop
add
into
ja
pop
add
jae
or
or
inc
lcall
pop
sub
xor
jmp
clc
push
andl
int3
in
jmp
or
lret
sub
lahf
pop
adc
mov
inc
mov
clc
mov
xor
mov
push
push
lret
adc
mov
cs
lods
pop
mov
sub
mov
bound
mov
mov
add
xchg
int3
jle
xchg
mov
sub
jbe
or
pop
insl
push
mov
add
in
xor
mov
mov
xchg
addb
repz
inc
xchg
add
pop
pusha
add
das
sahf
leave
cmpl
sbb
add
lret
mov
add
inc
push
adc
mov
dec
adc
mov
mov
add
sbb
sbb
xchg
repnz
jbe
adc
add
push
mov
push
outsl
sti
mov
and
mov
pop
insl
dec
pop
aaa
xchg
addb
fdivl
or
xor
mov
sub
dec
ja
jbe
addb
insb
mov
cmp
addb
aaa
or
mov
nop
add
jge
fstpl
sbb
jge
add
mov
int
fwait
jne
or
mov
pop
pop
pop
aad
sbb
push
mov
ret
jno
add
mov
xlat
jae
add
loopne
mov
icebp
fwait
ljmp
dec
enter
nop
add
icebp
stos
mov
fucom
add
ret
fwait
mov
inc
dec
mov
mov
xchg
dec
jg
xor
add
rolb
ja
mov
mov
outsl
jge
nop
add
lods
mov
add
push
or
inc
int
fprem1
mov
push
add
stos
jo
mov
add
shll
add
cmp
mov
fs
jp
movsl
jle
daa
push
or
into
ret
test
cmp
mov
stos
push
mov
jns
incl
cmc
xlat
mov
insl
ja
pop
fidivl
ja
add
mov
inc
pusha
add
add
or
cmpsb
dec
mov
pop
pop
aam
add
es
cmp
jp
jmp
xchg
mov
mov
test
lods
sbb
inc
add
cmp
add
xor
xor
mov
imul
dec
sti
int3
xchg
and
mov
loop
mov
inc
mov
add
mov
add
rolb
mov
mov
mov
adc
xchg
jecxz
sbb
repz
es
ljmp
loopne
mov
addb
sahf
pusha
add
addb
pop
pop
pop
int
movaps
mov
pop
sub
push
scas
and
mov
cltd
pop
stos
pop
ja
mov
or
stc
lock
or
inc
ljmp
dec
inc
mov
push
add
pop
mov
mov
mov
stos
mov
add
call
mov
icebp
jl
pop
out
les
lock
lds
mov
push
das
xchg
add
fadd
add
adc
pop
push
mov
mov
mov
push
add
fsubr
fs
mov
mov
addb
and
mov
xchg
xor
std
repz
sub
sbb
int3
cmpsl
inc
roll
movsb
insb
in
push
cmp
push
test
add
mov
push
xchg
enter
cmp
dec
lods
sbb
gs
ja
pushf
call
mov
add
cmp
push
inc
adc
mov
scas
loopne
mov
jg
sub
add
cmp
fidivrs
jo
mov
mov
jne
add
ljmp
dec
das
scas
pop
scas
push
ja
setge
and
dec
pop
jecxz
dec
lock
mov
pusha
add
xchg
mov
jnp
cmpsl
addb
lds
mov
enter
dec
ljmp
and
mov
push
mov
mov
pop
loop
mov
inc
das
sbbl
push
mov
or
push
jae
mov
lods
int
push
add
push
cli
movsb
or
lret
push
mov
mov
and
mov
loope
fsubrs
arpl
add
jnp
jbe
addb
sti
mov
push
add
mov
mov
push
lods
lods
push
add
scas
iret
adc
mov
and
mov
out
je
rolb
mov
xchg
push
add
add
jle
add
inc
dec
or
or
add
add
in
dec
dec
or
add
testl
or
inc
mov
out
sbb
add
leave
mov
or
sbb
mov
inc
add
xlat
imul
icebp
and
mov
addb
popf
imul
jmp
add
imul
add
outsb
fwait
or
jg
add
add
add
xchg
es
mov
jmp
fiadds
mov
andl
mov
mov
sub
xor
mov
xor
stos
dec
es
pop
sub
xchg
adc
mov
mov
dec
jp
rolb
mov
add
cmp
cmp
add
xlat
scas
sub
ret
xchg
das
bound
mov
push
jle
dec
or
jno
adc
mov
add
mov
jge
cmp
repnz
add
mov
mov
popf
ds
mov
add
sub
pop
mov
mov
mov
sbb
add
add
pop
outsl
mov
sahf
xchg
sahf
sub
mov
cli
xchg
aaa
in
or
add
jge
add
pop
inc
pop
sub
mov
add
dec
or
xchg
fsubp
ljmp
imul
imul
add
movsb
loopne
mov
stc
mov
gs
sti
xchg
cmpsl
adc
mov
xchg
mov
add
into
mov
jle
sub
jp
mov
mov
outsb
cmc
mov
pop
arpl
push
inc
add
rolb
xor
fiaddl
mov
mov
in
and
mov
orl
ret
daa
dec
iret
rolb
mov
add
dec
cs
insb
cmp
inc
jecxz
dec
loope
jp
mov
mov
fcoml
rolb
mov
lcall
add
xor
add
add
push
loopne
mov
or
sub
inc
addb
icebp
cmp
add
and
push
add
cmp
push
pop
mov
sub
aaa
pushf
xchg
fdivl
inc
popa
enter
sti
shr
push
cmp
into
xchg
loopne
mov
rorl
pop
ja
out
and
mov
push
adc
inc
xor
mov
mov
cmpl
or
rcrl
into
arpl
push
xor
daa
data16
testb
xor
add
fwait
mov
mov
mov
add
sub
jle
call
rol
pop
push
dec
nop
add
fdivr
incb
dec
outsl
out
shrl
out
lods
fadds
add
sub
add
mov
add
imul
add
sub
add
inc
adc
mov
add
add
mov
lgs
xchg
fdivrl
std
ljmp
add
push
js
add
fiaddl
scas
jbe
mov
es
mov
xchg
out
add
mov
inc
xorl
sbb
add
mov
fidivrs
or
fcompl
fdivrs
ret
cmp
add
cltd
out
add
ss
add
icebp
mov
mov
push
add
dec
lahf
pop
sti
imul
int
push
imul
add
jp
mov
adc
mov
add
mov
inc
pop
stos
dec
mov
and
mov
add
push
pop
inc
add
aam
std
pushf
sbb
ret
lods
incb
dec
cmp
hlt
dec
cmpsl
fadds
cli
pop
push
push
inc
mov
mov
stos
lret
ret
in
data16
insl
movlps
mov
mov
mov
xchg
leave
lock
xchg
sub
or
or
mov
sub
jecxz
adc
into
xor
mov
sub
arpl
cli
dec
bound
mov
push
push
loopne
mov
add
mov
pusha
add
fbstp
popf
jne
in
clc
mov
mov
test
xor
mov
mov
addb
in
mov
mov
mov
std
sub
ror
lods
pop
or
cltd
je
mov
out
popa
sbb
mov
add
jno
imul
xchg
mov
xor
insl
adc
add
sbb
add
mov
mov
add
mov
mov
mov
cs
ds
xor
sub
pop
les
mov
or
dec
and
or
rcll
call
std
jb
mov
rolb
mov
rolb
mov
fidivrl
mov
xchg
shll
mov
fdivl
out
insl
xchg
insb
ret
pushf
mov
pop
mov
mov
push
icebp
popa
xchg
rolb
add
mov
add
pop
pop
shll
enter
push
out
clc
mov
lahf
mov
mov
add
mov
mov
mov
lds
addb
ss
xchg
xchg
test
dec
out
ffree
pop
push
lcall
data16
insb
adc
mov
adc
mov
push
int3
pushf
mov
mov
mov
mov
jge,pn
loop
mov
fsubs
add
inc
push
lcall
adc
mov
insl
movups
mov
insl
daa
mov
test
jmp
add
add
mov
mov
lods
out
mov
mov
adc
mov
daa
test
add
inc
xor
xchg
xor
cli
add
mov
ds
add
cld
je
mov
jge
inc
add
cmc
orl
test
add
sub
popf
fmul
movups
and
jmp
pop
das
sbb
sti
push
add
mov
add
dec
xchg
lret
arpl
addr16
ret
aad
add
add
jb
mov
mov
mov
mov
pop
mov
mov
and
add
sub
stos
jmp
repz
pushf
ds
add
fwait
clc
dec
sbb
cs
pop
pop
mov
in
test
jne
jnp
and
inc
aas
xchg
and
mov
sahf
dec
pop
ja
aas
mov
add
sbb
push
adc
mov
das
test
cmpl
lahf
sub
je
ja
adc
sbb
add
hlt
inc
add
add
jne
inc
je
decl
add
pop
dec
mov
sbb
add
divl
add
scas
stos
clc
ficompl
mov
ljmp
mov
fistps
loop
mov
inc
stos
ja
dec
xor
mov
and
push
mulb
add
addr16
add
xchg
mov
and
mov
jl
js
out
sub
or
dec
xchg
fnstenv
loopne
mov
mov
jno
add
xchg
push
mov
pop
fld
arpl
je
xchg
add
popa
jg
mov
int3
lods
cmpsb
jnp
sbb
mov
scas
flds
mov
ret
push
jno
addr16
mov
sub
fdivrs
notb
outsb
in
adc
adc
mov
stc
xchg
jge
imul
add
jae
scas
or
dec
mov
sub
pop
xlat
push
push
pusha
add
ret
pop
ds
addr16
xor
mov
inc
roll
mov
mov
and
cmp
push
addr16
sbb
sbb
addr16
jmp
lock
adc
leave
shll
sbb
cmp
jl
add
cmp
add
add
fstps
adc
mov
in
mov
sbb
ja
adc
leave
xchg
bound
mov
add
stos
cltd
jp
aas
addb
cmpsb
cli
inc
fcmove
mov
mov
aad
int3
xlat
sub
add
lret
ja
add
mov
std
shll
jns
into
jo
mov
xor
add
lods
stc
fyl2x
sarl
fidivrl
add
iret
dec
push
fisubl
add
mov
push
push
fisttpl
push
out
mov
mov
pop
pop
cmp
stc
xor
push
popf
pop
movsb
out
lods
mov
sub
push
ret
inc
loop
mov
jne
and
mov
and
mov
and
xor
popf
inc
lea
mov
push
rolb
mov
ret
push
cs
and
add
push
jge
leave
push
movsl
dec
mov
mov
mov
ja
add
fcomps
movsl
dec
xchg
add
js
leave
je
mov
mov
xor
clc
push
add
repnz
push
mov
mov
pop
cwtl
pop
lcall
add
nop
add
mov
jecxz
cmp
jb
mov
mov
rolb
cmpsl
sbb
fdivs
add
mov
push
lds
fs
movsb
inc
or
sbb
xchg
inc
das
addb
adc
add
dec
das
mov
stos
pop
rolb
mov
mov
out
mov
sahf
repz
push
pushf
stc
lea
sbb
add
mov
mov
repz
pop
push
lock
mov
pop
repz
push
sbb
leave
mov
in
dec
test
test
orl
loope
pop
fmuls
add
bound
mov
mov
cmp
jae
push
pop
xchg
in
aaa
sub
dec
out
cli
jmp
inc
scas
xchg
pop
sahf
mov
ja
and
loope
lahf
sbb
mov
subl
push
push
out
jb
mov
in
out
paddd
imulb
jg
cmc
jmp
cmpsl
pop
pop
gs
mov
cmp
std
aad
or
stc
fistpl
mov
fdivrs
and
adc
add
addl
icebp
xchg
xor
inc
push
sbb
xor
lahf
mov
mov
enter
add
sahf
das
mov
and
xchg
adc
mov
mov
es
aam
lret
push
push
add
gs
notb
lods
mov
rolb
mov
inc
mov
jg
scas
dec
cmp
nop
add
mov
pop
and
mov
jnp
sbb
add
scas
xlat
mov
mov
mov
fidivrs
iret
imul
pop
loope
add
imul
mov
and
cltd
es
adc
iret
or
out
xchg
mov
hlt
adc
or
ljmp
adc
mov
sbb
xchg
dec
hlt
movsl
sub
jns
lods
xchg
jmp
inc
xlat
add
mov
jb
mov
and
mov
or
mov
mov
mov
test
add
mov
mov
fwait
inc
jmp
pop
ss
mov
lock
add
mov
mov
scas
insl
insl
cltd
fnstenv
mov
add
xchg
addr16
and
add
cmp
je
add
je
out
popa
leave
mov
xchg
add
nop
add
ret
jae
or
mov
rcrl
sub
popa
out
xchg
add
push
add
movsl
insl
mov
add
jmp
cli
push
add
push
cmp
xchg
cmc
and
jbe
fstpt
les
cs
mov
or
mov
push
rolb
clc
pop
lcall
mov
mov
add
mov
fnstcw
cmc
sub
stos
jbe
xchg
mov
dec
mov
mov
push
sahf
ss
popa
dec
push
sbb
xchg
add
push
out
jae
testb
repnz
arpl
out
adc
adc
je
call
add
lret
xchg
add
fiaddl
lahf
adc
das
popf
jns
add
nop
add
jbe
mov
xchg
add
lods
out
push
enter
aaa
les
mov
mov
push
mov
aad
shll
xor
mov
xor
mov
add
cmp
enter
adc
adc
inc
ret
dec
popf
movsb
repnz
mov
push
in
test
xchg
gs
push
sbb
lret
push
fisubs
jle
jbe
lret
add
je
test
addb
pop
cmp
sahf
mov
jnp
aas
out
arpl
test
add
inc
add
mov
aaa
daa
addl
mov
cmpsl
lds
xor
jp
cmp
fcoml
pop
push
mov
mov
xor
xlat
mull
jne
inc
rolb
mov
data16
adc
mov
rolb
mov
xlat
mov
mov
and
jae
pop
movsl
ss
dec
xchg
mov
insb
add
pop
fst
push
add
cmp
out
jg
cmp
scas
out
test
loop
mov
pop
xchg
mov
inc
push
popf
jle
add
data16
popa
sbb
leave
jmp
or
js
add
pop
cld
je
adc
mov
add
mov
pop
xlat
push
add
lahf
les
xchg
add
mov
sbb
jg
bound
mov
mov
xchg
pop
xor
mov
push
add
mov
stos
adc
or
push
add
lret
inc
popf
std
inc
jl
addb
jbe
sbb
jns
sub
jmp
add
call
lcall
dec
push
cli
or
hlt
sti
int
add
out
mov
add
or
add
mov
mov
fdivl
bound
mov
cmpsb
popa
hlt
adc
cmc
imul
mov
lds
add
push
and
mov
add
ficompl
cmp
int3
xchg
adc
inc
loop
mov
mov
ja
imul
in
ret
mov
mov
add
add
push
jae
fdivrs
shll
push
rcrl
mov
pop
je
add
notl
dec
mov
lahf
and
lar
mov
mov
or
add
cwtl
push
pop
push
add
dec
movsb
jns
ds
adc
add
push
mov
mov
cmp
push
add
mov
mov
push
call
xchg
add
mov
outsb
sub
in
jno
hlt
mov
mov
cmc
and
mov
mov
and
add
mov
mov
mov
mov
out
mov
mov
mov
mov
jnp
in
into
push
call
sbb
fimull
sbb
mov
lret
loop
mov
stc
jae
sbb
mov
sbb
inc
add
xchg
in
in
cmp
mov
fistpll
or
ror
inc
dec
lods
es
cli
daa
je
mov
add
cmp
cmp
call
mov
cld
and
and
mov
test
mov
jmp
push
fldt
sub
add
mov
ret
dec
hlt
fidivl
add
outsl
dec
add
mov
mov
mov
jne
dec
xchg
outsb
mov
mov
mov
mov
or
or
sidtl
ljmp
mov
fsubr
dec
popa
mov
mov
add
add
mov
je
push
lret
xchg
mov
mov
inc
sbb
stos
pop
loop
mov
add
stos
ds
fmull
mov
sbb
jmp
add
mov
add
mov
add
xchg
ljmp
mov
mov
add
mov
arpl
arpl
inc
add
ret
outsl
stc
in
push
xchg
push
aad
lea
add
mov
jne
testl
sub
sbb
cmp
push
dec
leave
addr16
mov
call
xchg
scas
lret
push
imul
add
sub
mov
add
push
xchg
leave
cmp
add
rolb
aaa
dec
mov
add
xor
mov
loopne
mov
cmpsl
gs
ret
mov
add
repnz
aas
xchg
icebp
jb
mov
rolb
lret
dec
xchg
or
dec
mov
sbb
mov
lea
mov
jno
add
or
add
movq
cld
dec
sub
inc
insb
test
or
inc
and
mov
addb
in
js
jbe
sahf
stos
insl
test
arpl
or
dec
ret
jg
push
and
fmuls
insl
jge
in
xor
mov
out
mov
mov
addb
fidivrl
inc
add
push
mov
push
leave
test
ljmp
pop
ss
enter
add
xchg
movsb
mov
push
mov
inc
add
push
scas
dec
rolb
mov
pusha
add
xchg
mov
daa
jnp
or
sbb
mov
xor
sub
or
pop
sti
xchg
hlt
scas
stc
into
push
das
xchg
out
xlat
mov
test
int3
into
dec
mov
mov
mov
lahf
in
idivl
xor
mov
int
pop
mov
addr16
gs
mov
mov
imul
adc
mov
pop
pop
pop
cmp
mov
mov
ljmp
cmp
adc
inc
push
mov
add
add
or
add
inc
cmp
dec
std
out
lds
or
xchg
add
add
outsb
add
sbb
mov
add
sbb
mov
std
pop
ja
jb
mov
mov
mov
das
test
mov
fxch
aam
jae
shll
mov
jg
mov
out
add
ja
add
mov
pop
adc
mov
imul
movb
int
push
jecxz
add
mov
mov
aas
scas
int3
stc
mov
roll
icebp
insb
xchg
jg
mov
mov
cmp
loop
mov
add
mov
mov
scas
dec
inc
add
cmpsb
aad
int3
lock
cld
mov
xor
in
push
or
mov
fistpll
mov
cmp
jae
ss
inc
loopne
mov
lret
addb
xchg
xchg
xor
add
out
add
pop
loopne
mov
inc
add
dec
addl
push
mov
dec
int3
std
mov
push
cmp
stos
mov
add
mov
fdiv
jl
xchg
arpl
push
lahf
int3
imul
pop
pop
test
aad
testb
cwtl
pop
dec
ss
add
fdivrs
fwait
jp
aas
sbb
xchg
add
mov
add
add
addb
dec
jo
mov
fwait
insb
mov
xchg
fdiv
call
aaa
pusha
add
xchg
cld
xchg
add
add
mov
mov
mov
push
lds
ss
loopne
mov
inc
pushf
outsl
outsl
scas
decb
pop
addb
pop
pop
push
xor
mov
mov
insb
je
clc
adc
out
inc
imulb
push
mov
call
enter
mov
rolb
enter
in
nop
add
sbb
sar
sbb
popf
test
shrl
mov
add
in
add
jp
mov
es
out
scas
push
ret
sarl
sub
add
pushf
dec
cmp
xchg
mov
xchg
adc
mov
les
dec
mov
dec
andl
mov
mov
mov
pop
cmpsb
fcom
cs
mov
pop
dec
enter
mov
mov
test
pop
out
mov
in
daa
adc
mov
movsb
mov
mov
addb
or
add
mov
movsl
shr
xlat
pusha
add
dec
test
dec
clc
jl
loope
fcompl
ss
sbb
pop
pop
jns
mov
mov
add
addl
mov
repz
jle
hlt
inc
add
add
add
mov
xor
add
aas
and
mov
pop
mov
fisubrs
fdiv
jmp
add
int
dec
pop
ja
mov
add
out
cli
jl
add
lahf
xchg
test
fisttps
cltd
adc
mov
add
cmpsl
and
mov
mov
ffree
mov
inc
daa
pop
fstpt
inc
add
jbe
pop
xchg
and
add
mov
pop
addb
jae
sbb
sbb
push
add
insl
addb
sbb
xor
mov
add
pop
jbe
lret
mov
add
inc
add
pop
or
push
xchg
jnp
cmp
push
jbe
lret
inc
aad
jno
out
sub
into
iret
inc
sbb
pusha
add
xchg
adc
add
add
cmp
mov
add
mov
sbb
sbb
divl
sarl
iret
push
decb
jg
into
pop
fistps
pop
push
stos
add
pop
out
std
push
sbb
cmc
and
jmp
adc
cmp
mov
movsb
add
mov
add
fnstcw
dec
mov
inc
xlat
xor
sbb
sbb
pop
sbb
idivl
cli
inc
loopne
mov
nop
add
add
adc
adc
paddd
dec
fstpt
add
mov
xchg
push
add
mov
mov
cmpsl
sub
and
add
lret
sbb
filds
arpl
nop
add
mov
mov
std
mov
nop
add
xchg
xlat
and
jo
mov
adc
or
push
es
pop
mov
mov
mov
mov
out
jo
mov
xor
mov
je
bound
mov
xor
dec
movsb
mov
add
jae
pop
and
push
fs
insb
out
xor
jmp
push
aad
add
pop
loope
adc
mov
pop
nop
add
mov
add
in
cmp
pop
mov
add
mov
sub
dec
jo
mov
jns
jae
outsl
cmp
mov
cli
xchg
xchg
imul
sbb
cltd
or
cmpsb
lods
mov
cmpsl
data16
mov
add
stos
sbb
push
jle
pop
sahf
vcvtdq2pd
addb
inc
add
adc
mov
adc
fmuls
push
pop
adc
jmp
insl
addb
or
pushf
es
fnstsw
xlat
mov
sbb
fdivr
jle
mov
xor
movsl
jnp
lret
add
mov
mov
mov
mov
mov
mov
jae
pushf
mov
cli
and
mov
xchg
add
mov
add
fsubrl
out
ficomps
dec
ficoml
add
and
mov
fcompl
mov
rolb
and
mov
xor
rolb
adc
mov
sub
push
add
dec
xchg
mov
lcall
add
faddl
mov
das
cmp
add
push
into
jb
mov
lods
imul
push
adc
stos
and
mov
push
mov
push
dec
daa
arpl
add
insb
and
jae
add
cmp
jbe
cld
xchg
cli
adc
into
loopne
mov
pop
mov
sbb
sbb
mov
lcall
add
lds
add
mov
mov
mov
movsb
sub
add
jp
pop
mov
add
popa
jmp
rolb
mov
add
test
adc
mov
lea
jno
add
push
icebp
les
or
jae
dec
jnp
adc
cmpsb
inc
in
mov
mov
pop
mov
push
or
mov
pop
es
sub
sub
pop
sub
cwtl
lods
pop
xchg
dec
cmpsl
aaa
fwait
cmpsl
cmp
dec
fisttpl
out
add
adc
mov
add
dec
sbb
mov
xor
mov
ret
push
jecxz
add
add
mov
les
fs
out
rcrl
jg
add
sahf
mov
add
push
test
lret
mov
add
mov
dec
and
inc
add
aad
add
add
add
add
push
mov
add
mov
jbe
aam
xor
mov
mov
lock
mov
orl
mov
add
into
in
sbb
pushf
mov
xchg
stos
repnz
mov
lahf
in
jp
in
pop
aad
jno
into
addb
jns
mov
mov
xchg
add
mov
xchg
mov
mov
mov
mov
inc
push
icebp
pop
push
and
mov
add
mov
mov
jle
inc
pop
in
pop
inc
jp
or
div
add
in
call
fs
xchg
add
add
push
add
xor
mov
push
ret
xor
mov
mov
add
mov
mov
in
call
in
aaa
frstor
add
pusha
add
cmp
jne
in
push
in
leave
fidivs
cmp
sahf
xor
call
ficomps
fdivl
jecxz
into
cmp
cwtl
hlt
pusha
add
add
notl
pop
addb
hlt
ret
rolb
ffreep
cmp
or
fs
jge
popf
addb
or
xlat
pop
pop
jl
aad
loopne
mov
dec
add
mov
leave
pop
adc
hlt
mov
add
add
jae
aad
dec
icebp
loope
mov
add
and
and
and
add
mov
cmp
imul
mov
add
cmp
add
out
jae
neg
loope
adc
mov
mov
mov
or
push
jle
add
addr16
xchg
lds
sbb
mov
sub
mov
mov
rolb
mov
shll
std
lret
push
in
mov
or
mov
and
mov
test
shll
jno
xor
jg
leave
add
mov
fstpt
sbb
repnz
mov
nop
add
or
cmp
ss
xchg
add
lret
xchg
in
pop
add
gs
jg
push
add
pop
rolb
mov
mov
or
add
mov
pop
dec
cs
loope
pop
jmp
mov
je
iret
xor
mov
add
mov
push
pop
push
lcall
test
add
add
roll
add
das
loopne
mov
mov
scas
fsubl
xchg
add
adc
xchg
data16
lahf
dec
aaa
add
mov
dec
and
mov
mov
fwait
mov
add
gs
inc
jmp
cld
lea
mov
mov
bound
mov
sub
and
aas
arpl
notb
mov
xor
mov
mov
aam
jne
add
adc
add
cmp
das
fs
pop
andl
push
add
test
add
test
fsubrs
add
gs
mov
cmp
add
or
insb
push
mov
loop
mov
push
addr16
adc
or
dec
push
add
movsb
pop
push
and
mov
sbb
xchg
adc
mov
popa
jns
rolb
mov
into
mov
popf
shr
ret
push
lds
int
xchg
mov
xchg
mov
stos
jnp
lahf
cmc
and
dec
mov
jl
mov
pusha
add
and
test
mov
jecxz
dec
cmp
out
push
mov
imul
dec
mov
add
fdivl
test
stos
xlat
int
loopne
mov
xchg
or
add
mov
loop
mov
mov
aad
outsb
sbb
jg
add
fistps
mov
xor
jne
in
xchg
add
mov
sbb
xor
enter
push
je
push
dec
dec
mov
dec
inc
add
cmp
adc
xor
mov
es
add
mov
add
mov
xlat
push
add
inc
add
mov
push
or
add
mov
inc
add
pop
inc
scas
mov
mov
adc
insb
adc
rolb
dec
movsl
dec
dec
pop
sbb
jae
add
loope
push
jmp
jae
mov
mov
push
push
loope
xchg
xchg
push
repnz
das
mov
std
jg
cld
addb
neg
jmp
dec
xor
mov
loope
inc
in
jo
mov
add
imul
or
scas
fmulp
or
add
outsl
sbb
push
pop
or
add
mov
aaa
test
daa
mov
mov
cwtl
dec
xchg
inc
int
xor
add
hlt
sbb
bound
mov
add
mov
or
mov
mov
add
push
mov
add
dec
mov
jmp
sahf
nop
add
mov
add
cmp
stos
fsubrs
mov
sub
sbb
mov
mov
add
add
jno
sti
inc
sbb
mov
fcmovu
arpl
sub
sub
in
add
cmp
add
out
imul
pop
push
ds
mov
push
add
add
mov
inc
dec
inc
leave
push
out
inc
aam
push
inc
xchg
imul
adc
pop
mov
inc
add
aas
cmp
mov
cmp
push
mulb
stos
mov
add
inc
in
rolb
mov
add
daa
xchg
mov
mov
scas
cmc
push
add
pop
add
add
adc
push
xchg
and
or
xchg
pusha
add
test
mov
pop
ja
jmp
add
add
jae
aaa
fidivl
es
add
add
add
test
mull
and
mov
pop
popf
orl
lock
push
in
jg
fs
mov
mov
xor
mov
pop
pop
push
adc
mov
enter
addb
add
dec
inc
add
loop
mov
mov
enter
insb
stc
add
mov
jno
inc
lods
adc
mov
mov
add
jmp
jle
mov
mov
add
repz
insb
cltd
fwait
push
dec
iret
mov
dec
mov
nop
add
scas
flds
mov
or
dec
mov
in
movsb
in
xor
add
leave
mov
mov
add
int
dec
mov
push
aad
sbb
test
mov
add
add
mov
test
sbb
mov
add
cmpsb
pop
cli
addb
dec
xchg
insl
arpl
mov
add
jmp
sbb
add
cltd
or
add
jb
mov
lret
fs
movsl
xlat
sub
imul
add
add
clc
pop
xchg
and
cmp
notl
lret
sub
jns
jno
xchg
pop
pop
push
jns
inc
add
ljmp
scas
add
lret
add
adc
mov
xchg
ss
jge
and
sub
loopne
mov
add
jnp
lahf
fcompl
push
pop
fs
movsl
je
dec
mov
add
icebp
in
mov
mov
adc
mov
xor
add
push
push
add
add
add
sub
adcl
lea
pop
adc
and
mov
andl
popf
rolb
mov
add
aaa
call
pusha
add
hlt
mov
movsl
sub
add
adc
adc
imul
inc
xchg
bound
mov
pop
sbbl
sub
add
js
dec
out
bound
mov
add
mov
mov
mov
cmpsb
jmp
mov
sbb
stos
clc
call
xor
add
add
js
pop
out
or
add
mov
leave
cld
mov
push
in
push
add
push
add
add
add
rsqrtps
mov
cmp
xor
aad
push
loop
mov
dec
fsubrl
cmp
cmp
jle
ja
nop
add
mov
add
mov
mov
iret
arpl
cmc
xchg
add
dec
call
jo
mov
mov
mov
cltd
jno
add
repz
pusha
add
inc
pop
repz
mov
mov
stc
es
filds
mov
mov
add
das
adc
mov
test
add
and
mov
push
add
mov
rolb
mov
xchg
stos
mov
add
cmp
push
loop
mov
mov
and
mov
and
rolb
mov
sbb
push
cwtl
add
test
adc
dec
in
add
in
sub
imul
repnz
add
cmp
cmp
jp
mov
movsl
scas
movsl
std
xlat
xor
out
sbb
icebp
repz
add
jae
dec
or
add
test
sub
xchg
xor
jmp
ret
insl
incb
xor
inc
add
lahf
jp
bound
mov
mov
pushf
loop
mov
jae
aaa
xor
add
pop
test
add
scas
adc
mov
xor
and
pop
sti
call
cltd
jle
add
stc
inc
add
dec
mov
sbb
sbb
add
loopne
mov
jp
rolb
rolb
mov
mov
add
mov
jo
mov
dec
and
mov
cs
lret
mov
pop
push
push
out
inc
add
insl
pop
sbb
mov
adc
add
add
jmp
xchg
dec
rolb
mov
xorl
add
sub
imul
in
rolb
mov
mov
sbb
fprem
cmp
pop
aas
sbb
dec
xchg
push
mov
mov
popf
or
popf
xor
mov
push
sub
mov
jge
mov
dec
push
les
add
mov
sbb
cltd
sbb
adc
add
fs
add
push
xor
mov
stos
in
pop
pop
mov
adc
mov
pop
xor
pop
pop
test
or
addb
dec
cmp
test
fwait
into
push
add
mov
dec
daa
jb
mov
pusha
add
daa
xchg
xor
xor
mov
jmp
jno
inc
sbb
mov
lret
clc
mov
mov
xchg
add
add
repz
add
add
push
sbb
je
jmp
sbb
cmp
or
aas
imul
jns
add
pop
scas
mov
mov
daa
clc
fiaddl
addr16
mov
mov
mov
data16
loopne
mov
push
loope
add
cwtl
cld
aad
inc
or
push
and
mov
test
mov
fimull
xor
scas
lds
sub
mov
add
dec
push
add
pop
sti
adc
mov
add
mov
mov
adc
add
movsl
outsl
dec
fs
in
shll
push
add
inc
pusha
add
in
fstps
add
add
mov
or
cmp
out
lods
or
rolb
mov
mov
add
inc
dec
gs
call
mov
mov
add
mov
and
add
pop
push
add
pop
xchg
mov
fisttpl
loope,pt
inc
and
and
jne
mov
sti
xchg
add
cs
mov
add
ret
jns
adc
mov
add
add
adc
add
mov
cmp
int
ljmp
sti
in
pop
cmp
inc
add
xor
mov
rcll
mov
sbb
xchg
add
xor
rcll
inc
inc
sbb
add
cwtl
jmp
cmp
mov
cmpsl
ds
dec
and
mov
loope
or
mov
mov
hlt
mov
sub
pop
fnstenv
add
mov
sub
adc
mov
mov
shrl
in
add
aas
test
jmp
add
fsts
mov
mov
lods
jp
daa
mov
out
subl
add
push
inc
pop
je
sti
and
mov
or
leave
sbb
cmp
dec
xchg
stos
rorl
mov
add
adc
mov
pop
les
add
and
test
or
addb
movsl
arpl
add
aas
lea
lods
lods
hlt
pop
ret
mov
jmp
mov
sbb
inc
dec
inc
cmp
add
lods
dec
cmovl
add
add
mov
mov
cmpsb
sti
enter
mov
les
mov
lods
mov
inc
add
insb
addb
cli
fdivrl
sbb
lret
pop
std
lret
les
add
xchg
mov
or
pop
in
inc
add
in
mov
out
cmp
add
add
sub
aas
jne
mov
jbe
add
pslld
mov
add
dec
bound
mov
and
mov
xchg
les
pop
adc
mov
lcall
mov
xchg
stos
stc
aaa
xchg
scas
xchg
push
add
fsubp
mov
mov
mov
fimull
addb
mov
mov
dec
sarl
jns
pop
rcrl
add
sbb
mov
add
add
shll
lds
je
movsl
sahf
pusha
add
xchg
or
cmpsl
in
push
addb
dec
pop
fld1
insl
jb
mov
pop
jae
fcoms
inc
mov
sbb
jmp
xchg
gs
adc
jg
pop
push
add
mov
rolb
mov
add
mov
test
push
pop
fnsave
mov
sbb
fwait
push
sub
push
int3
movsb
lods
xor
mov
inc
add
imul
in
mov
mov
cmp
das
lcall
inc
add
mov
jno
push
and
mov
outsl
inc
mov
rolb
into
lahf
push
add
bound
mov
dec
pop
mov
mov
add
pop
jbe
xchg
add
daa
jnp
mov
mov
add
arpl
pop
imul
sarl
add
add
insl
push
mov
mov
jno
dec
nop
add
add
add
mov
jns
jbe
in
xchg
or
push
fwait
pop
es
fbld
jb
mov
addb
jb
mov
add
xchg
imul
add
push
imul
adc
jmp
mov
jnp
popf
jecxz
and
mov
cmp
pop
jmp
jae
inc
stc
scas
pop
insl
push
aad
arpl
add
aas
out
dec
js
test
inc
lods
pop
and
stos
repz
movsl
xchg
jns
icebp
je
ljmp
frstor
and
dec
mov
adc
mov
and
cmp
and
jmp
addb
and
sbb
test
add
mov
cwtl
bound
mov
dec
clc
xor
mov
push
add
shr
pusha
add
pop
push
clc
dec
movsl
xchg
jo
mov
mov
mov
or
mov
fcompp
jno
xchg
mov
add
dec
jle
dec
pop
inc
fsubrl
inc
add
scas
or
sub
add
jae
push
xchg
adc
mov
add
pop
subl
rolb
mov
aaa
cs
hlt
mov
fnsave
clc
mov
out
rolb
lods
add
mov
mov
int3
out
pop
xchg
dec
popf
fwait
adcl
loopne
mov
std
or
and
xor
mov
push
add
adc
xchg
add
ficompl
push
out
xchg
pushf
push
popa
push
imul
mov
lahf
xor
cs
fnstenv
add
xchg
dec
jb
mov
xchg
arpl
mov
and
inc
add
add
loop
mov
pop
xchg
mov
and
ljmp
or
addr16
int
sbb
xchg
add
push
ficompl
dec
mov
add
scas
jae
pushl
leave
shll
add
adc
mov
cmp
test
sbb
add
mov
mov
addl
mov
mov
add
add
fcoms
add
or
push
add
push
jmp
test
dec
push
add
pushf
loopne
mov
mov
iret
mov
jg
movsl
loopne
mov
add
dec
cpuid
add
pop
pop
push
add
inc
sub
stos
sbb
cmp
inc
test
add
add
pop
push
mov
dec
sbb
mov
mov
mov
xlat
into
scas
and
mov
in
leave
pushf
mov
add
add
mov
call
lock
add
and
jns
dec
add
mov
popf
xchg
je
pop
fs
mov
inc
and
adc
mov
pushf
jmp
push
push
add
test
mov
addb
inc
add
out
rolb
mov
and
mov
add
mov
dec
cmp
or
pop
imul
neg
adc
mov
test
idivb
add
ret
dec
out
jmp
inc
dec
cmc
sub
xlat
dec
rolb
mov
add
icebp
dec
lret
lcall
int
sub
xor
add
test
das
in
pop
rolb
mov
in
jae
das
inc
in
fs
shrl
out
jle
pop
aaa
fucomp
push
mov
addb
stc
iret
jl
loope
mov
stc
push
or
push
call
jbe
jp
add
add
or
ss
movsl
sub
mov
xchg
jge
out
adc
rcrl
mov
cmp
scas
int3
fidivrl
mov
sub
mov
ljmp
mov
inc
lret
cmpsl
sti
mov
mov
or
repz
mov
xchg
fistpl
iret
out
and
mov
jb
mov
cmp
and
add
sub
add
mov
adc
sbb
sub
pop
shl
or
sbb
cmpsb
push
add
lahf
xchg
lds
add
notl
daa
adc
inc
loop
mov
pop
xchg
mov
mov
xor
adc
mov
cmp
hlt
mov
test
hlt
lcall
jae
ds
negb
add
mov
add
mov
mov
add
insb
ljmp
lds
add
and
mov
popa
xchg
leave
adc
dec
mov
fdivr
call
add
aaa
movsb
mov
pop
imul
es
xlat
ret
mov
sbb
out
imul
push
rorl
jge
stos
in
sahf
cs
popf
in
add
jp
add
inc
xor
mov
js
sub
cmpsb
sbb
jg
popf
or
int
out
add
xlat
mov
xchg
add
mov
add
push
insb
xchg
pushf
pop
add
jno
enter
repnz
ret
loopne
mov
cli
repz
mov
mov
mov
add
push
add
movsb
in
je
rolb
mov
clc
adc
into
out
repnz
ds
sysenter
scas
push
aad
jbe
rolb
mov
cmpsb
out
out
xchg
addr16
pop
adc
mov
mov
mov
add
jg
and
incl
addl
int
test
push
mov
and
mov
mov
add
cmp
cmpsl
stc
sbb
inc
es
jg
fs
call
addb
xor
mov
xor
mov
add
mov
xchg
lret
test
push
out
inc
cmpsb
lods
pop
or
dec
mov
jecxz
das
rol
add
add
mov
inc
add
add
fidivrs
mov
jbe
add
mov
add
pop
mov
jmp
out
fildll
mov
mov
adc
lock
out
xor
mov
scas
mov
loopne
mov
xor
mov
addl
std
stc
push
addb
rolb
in
in
je
pop
popa
arpl
sbb
xlat
shll
in
mov
xor
hlt
scas
ret
adc
push
out
into
jb
mov
add
xor
push
push
sbb
sub
fs
cmp
mov
outsb
sub
mov
enter
mov
sub
add
sub
add
outsb
xchg
shll
add
add
fwait
sbb
mov
xchg
addb
loop
mov
jecxz
pop
rolb
mov
dec
out
out
fnstcw
add
and
add
rolb
rolb
mov
lret
fbld
mov
mov
lods
and
mov
push
add
mov
cld
fidivrl
push
pop
clc
mov
inc
jl
add
cmp
loopne
mov
add
and
mov
mov
jg
push
rolb
mov
mov
and
add
mov
jae
lea
add
fdivrl
add
add
ds
fs
lds
bound
mov
mov
test
add
xor
add
dec
pop
add
mov
inc
out
add
rol
fstl
sarl
add
xchg
test
add
mov
mov
add
hlt
rolb
mov
sbb
inc
add
imul
inc
ss
outsb
mov
sbb
or
mov
pusha
add
mov
bound
mov
push
push
lcall
pop
rolb
mov
jmp
addb
lock
ret
out
sub
fdivp
imul
pop
jmp
clc
inc
fstps
repnz
sub
cmp
xchg
aam
and
data16
mov
mov
sahf
inc
add
sahf
les
or
mov
ficoml
mov
push
xchg
add
mov
cmpsb
imul
in
leave
lods
pop
stos
loopne
mov
mov
sub
mov
mov
test
mov
rorl
imul
sti
push
jmp
add
test
add
lcall
imul
ss
sub
call
in
and
lods
adc
mov
cltd
sbb
add
pop
les
add
add
and
fcmovb
fisttps
pop
into
fstpt
adc
mov
ret
push
add
xchg
add
outsb
pop
pusha
add
das
pushf
or
mov
jecxz
add
sbb
mov
cmpl
add
pop
xlat
add
mov
add
mov
add
dec
cmpsl
lods
psrlq
pusha
add
es
add
sub
mov
repnz
std
push
add
mov
cmp
int
dec
xchg
mov
sub
xchg
add
mov
cmpsb
idiv
dec
mov
push
pop
in
or
sub
mov
or
add
cmpl
pop
mov
out
add
inc
addb
cwtl
push
loope
xchg
add
inc
sbb
test
arpl
out
inc
pop
add
test
add
sahf
jge
std
sbb
lcall
lahf
pop
es
mov
add
sbb
xor
es
mov
sub
mov
fcmovnu
jnp,pn
fistpll
jle
adc
mov
add
stc
iret
cmp
repz
rcl
or
in
and
mov
add
mov
pop
mov
add
mov
fcomip
loop
mov
cmp
xchg
xor
add
mov
aam
add
inc
icebp
and
mov
jle
adc
fnstenv
or
mov
pop
imul
fisttpl
arpl
loop
mov
aad
inc
and
xchg
int3
sub
add
mov
mov
xlat
loopne
mov
or
sub
scas
addl
ss
lret
into
leave
dec
mov
sub
movups
enter
add
outsb
mov
xchg
insb
dec
push
add
jmp
add
add
dec
mov
aam
ss
push
fldenv
add
add
std
xchg
and
fdiv
es
outsl
addl
jl
addb
leave
cmp
repz
arpl
sbb
loop
mov
xchg
das
and
inc
push
cld
test
lahf
outsl
fwait
mov
mov
pop
mov
je
ret
xchg
in
or
add
cld
stos
mov
cli
addb
cmp
mov
add
mov
lea
cld
cmp
add
dec
pop
mov
mov
popa
xor
addb
adc
bound
mov
scas
cmpl
mov
add
ss
add
adc
or
bound
mov
push
cmp
pop
sub
mov
pusha
add
sbb
leave
push
cli
inc
add
dec
rolb
add
mov
out
fidivs
mov
sub
pop
cmp
push
sub
arpl
mov
out
add
or
or
inc
daa
xchg
mov
ficompl
imul
dec
gs
lcall
mov
jl
add
in
add
and
scas
pop
scas
fcompl
sbb
add
jle
add
imul
mov
pop
jge
jne
std
push
xchg
push
add
or
ss
lret
cld
xor
adc
mov
add
repz
cmp
xchg
test
xor
add
cmc
dec
loopne
mov
call
mov
mov
addl
pop
sbb
add
add
cmp
push
add
divb
inc
adc
mov
add
das
pop
imul
jp
dec
push
ja
xchg
mov
mov
add
sub
sarl
xchg
add
leave
pop
cmpsl
mov
or
add
jecxz
adc
add
or
jo
mov
add
add
lods
nop
add
and
hlt
ja
stos
repnz
ds
addl
mov
push
ret
inc
pop
loop
mov
negl
setp
popf
gs
or
sub
mov
jns
fdivl
in
outsl
pusha
add
push
mov
push
cmp
xor
sahf
jae
mov
je
in
rcrl
add
lret
out
mov
add
mov
sub
scas
cmp
add
mov
sub
pop
pop
loop
mov
push
clc
or
test
dec
jge
add
aas
fwait
inc
out
or
mov
xlat
movsb
adc
mov
add
sub
pop
test
je
add
inc
lods
or
mov
jbe
add
inc
mov
add
sbb
je
add
in
xor
fucomi
push
add
add
ss
aas
cmp
mov
into
inc
addb
shll
dec
fiadds
mov
mov
lahf
subl
loopne
mov
mov
fcomps
and
lret
or
inc
add
add
mov
stos
cmp
idiv
cmp
movsb
add
mov
cmpsl
xor
mov
jle
addb
mov
je
mov
fwait
pop
push
mov
push
subl
xor
mov
mov
xchg
gs
add
fistl
add
mov
add
rolb
mov
cmp
xchg
add
mov
addb
pop
and
mov
out
aas
or
inc
test
loop
mov
sub
jg
inc
add
mov
inc
sahf
pushl
mov
and
loope
insl
rolb
mov
outsb
cmpsb
dec
xchg
add
add
add
repz
aam
and
mov
mov
dec
jl
add
mov
mov
add
add
mov
xor
lods
push
mov
or
fistps
sbb
push
dec
mov
mov
out
inc
sbb
jnp
sub
add
movsb
sub
jle
sub
cmpsb
imulb
iret
cmc
ljmp
add
gs
clc
fstps
add
mov
dec
xchg
cld
movsl
or
mov
movsb
pusha
add
mov
mov
adc
add
addr16
cmp
bound
mov
add
mov
sub
add
lret
dec
dec
mov
mov
movsl
test
inc
insb
mov
cs
xlat
mov
lock
and
aaa
pop
inc
mov
xor
add
pop
push
cmc
mov
rolb
sbb
dec
inc
add
sarl
sbb
jp
fdivrl
faddp
movsl
lahf
clc
fstl
and
mov
add
mov
aad
enter
add
inc
add
add
push
call
add
push
lahf
std
inc
cmpsl
push
arpl
es
add
addb
aaa
rcll
mov
int
dec
sub
mov
sub
push
hlt
sub
xor
pushf
test
imul
add
pop
inc
push
xor
mov
dec
out
mov
fidivrl
std
mov
add
mov
movsl
bound
mov
cli
adc
mov
or
iret
fsub
inc
iret
cmpl
mov
fbstp
mov
or
inc
fcomi
add
mov
mov
push
or
loop
mov
addr16
pusha
add
in
push
add
sub
addb
xor
mov
add
fistpll
aam
enter
or
mov
mov
add
inc
add
push
enter
insl
xchg
call
cmp
stos
adc
add
or
lret
outsl
or
add
mov
add
xchg
inc
sub
in
bound
mov
dec
dec
adc
xchg
mov
repnz
clc
mov
mov
shr
into
or
xor
mov
scas
scas
adc
int
add
add
push
cli
ret
mov
mov
add
out
mov
jae
sbb
fiadds
add
sub
mov
mov
add
add
mov
sbb
pop
enter
fidivs
or
and
mov
pop
nop
add
adc
inc
aas
notl
test
add
cmp
add
add
loop
mov
xlat
fistps
into
mov
add
push
push
inc
movsl
mov
add
mov
mov
adc
add
sbbl
cltd
sbb
fcompl
imul
insl
call
jp
lds
push
fwait
sbb
test
test
mov
repnz
int
mov
sub
aad
add
xchg
cmpsb
rcll
mov
adc
mov
inc
insl
sub
sub
mov
clc
dec
sub
mov
add
or
addb
inc
aad
imul
aas
nop
add
mov
outsl
cmp
add
ljmp
sub
mov
cmp
mov
rcr
enter
testb
dec
in
aas
mov
dec
pop
push
pusha
add
movsb
out
add
add
add
push
data16
gs
aaa
cltd
xchg
fldl
cmp
jmp
mov
adc
and
push
add
andl
mov
sub
xchg
outsl
inc
gs
mov
mov
pop
jno
sbb
add
or
add
lahf
mov
cmp
adc
xchg
sbb
xchg
loope
rcrl
in
jno
add
adc
mov
mov
and
jg
jp
mov
add
mov
add
xchg
add
les
sub
rolb
mov
shll
push
mov
mov
mov
cmpsl
mov
add
sbb
roll
add
push
pushf
fisubrs
movsb
jo
mov
mov
and
xor
dec
rcll
xchg
loop
mov
movsl
mov
push
add
add
loop
mov
mov
jne
add
icebp
adc
adc
mov
mov
add
std
mov
cmp
add
jne
lret
ja
dec
test
sbb
repz
sub
ss
in
add
mov
pop
inc
mov
adc
pop
das
adc
mov
add
sbb
pop
lret
push
lret
leave
mov
mov
stos
rorl
movsb
dec
fsub
lods
pop
or
outsb
mov
cmpsl
jne
in
stos
adc
mov
mov
mov
pop
xchg
mov
mov
mov
mov
nop
add
add
mov
sbb
pop
mov
adc
mov
iret
outsl
mov
lock
adc
mov
pop
mov
sbb
mov
sbb
ret
test
and
mov
push
cwtl
fs
add
add
add
push
inc
add
fsubl
mov
loope
icebp
mov
adc
mov
mov
add
frstor
pop
and
cld
sbbl
add
lods
cmc
lods
in
loope
lret
or
xor
mov
jmp
mov
mov
data16
adc
dec
mov
test
jbe
mov
mov
add
cli
outsb
lahf
sbb
or
stos
dec
dec
test
dec
mov
rcll
mov
add
and
mov
cltd
gs
jge
push
std
std
icebp
mov
mov
add
mov
jbe
inc
shrl
addb
xchg
push
loopne
mov
add
cs
test
int
loope
jnp
add
outsb
and
add
add
mov
mov
addb
into
mov
mov
data16
add
enter
xchg
cwtl
mov
loop
mov
push
pop
pusha
add
cltd
in
test
addb
jge
mov
mov
mov
lahf
add
leave
mov
js
inc
mov
or
mov
rolb
mov
sub
mov
jge
icebp
pop
jo
mov
push
inc
subl
mov
adc
mov
clc
repnz
nop
cld
jae
stos
add
pop
loope
push
push
mov
nop
leave
jmp
xor
imul
out
mov
clc
repnz
nop
cld
jae
out
cmp
addr16
cmp
add
clc
repnz
nop
cld
jae
jne
add
repz
mov
cmp
ret
and
sub
add
stos
lcall
cs
add
stos
sub
rolb
sub
nop
nop
cld
jae
add
add
add
jo
or
str
and
add
clc
repnz
nop
cld
jae
xchg
add
add
push
mov
repnz
nop
cld
jae
sub
and
andl
or
add
clc
repnz
nop
cld
jae
add
sub
add
sahf
push
clc
repnz
nop
cld
jae
and
int
bound
mov
dec
or
repnz
nop
cld
jae
ds
add
mov
nop
cld
jae
pop
add
mov
dec
add
in
nop
leave
jmp
xchg
and
sbb
test
add
cs
repnz
nop
cld
jae
cmpsl
add
and
mov
push
mov
nop
leave
jmp
add
jo
xor
push
mov
nop
leave
jmp
and
inc
shlb
add
mov
sbb
mov
xchg
ret
stos
mov
add
add
mov
je
clc
repnz
nop
cld
jae
cmp
daa
jge
movsb
push
mov
nop
leave
jmp
add
add
mov
xchg
ret
sub
add
and
and
mov
pusha
push
mov
xchg
ret
add
dec
cmpsl
add
adc
mov
test
add
jg,pn
add
cmpsl
inc
and
pop
cmp
mov
push
mov
nop
leave
jmp
add
add
lcall
push
mov
nop
leave
jmp
add
cmpsl
jnp
sbb
in
nop
leave
jmp
mov
imul
add
repnz
nop
cld
jae
add
jne
icebp
and
push
jmp
add
cmpsl
add
repz
jne
mov
mov
inc
clc
repnz
nop
cld
jae
and
outsl
add
outsb
inc
push
mov
xchg
ret
jne
add
add
add
nop
nop
cld
jae
add
add
ret
lret
mov
push
mov
xchg
ret
mov
cmp
fldl
in
nop
leave
jmp
add
cmpsl
and
lods
push
mov
xchg
ret
add
add
xor
cmp
push
mov
nop
leave
jmp
add
xor
jmp
add
pop
add
add
sub
add
nop
add
xor
nop
leave
jmp
add
sub
add
in
mov
clc
repnz
nop
cld
jae
lcall
dec
pop
push
mov
nop
leave
jmp
filds
shlb
add
push
clc
repnz
nop
cld
jae
add
sub
insb
cmpsl
shll
inc
add
pop
push
mov
nop
leave
jmp
add
repnz
add
push
clc
repnz
nop
cld
jae
addr16
cmpsl
lcall
repnz
nop
cld
jae
and
sub
jg
add
push
mov
xchg
ret
repz
add
add
roll
sub
nop
cld
jae
inc
add
mov
leave
clc
repnz
nop
cld
jae
xor
inc
dec
clc
add
mov
inc
and
repnz
nop
cld
jae
add
xchg
outsl
add
cmp
in
add
add
add
into
sbb
loope
add
push
add
add
nop
nop
cld
jae
and
add
cmpsl
add
clc
repnz
nop
cld
jae
mov
add
jo
xor
clc
repnz
nop
cld
jae
jg
shlb
rep
clc
repnz
nop
cld
jae
dec
add
dec
add
cmp
push
mov
nop
leave
jmp
add
inc
add
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
add
add
add
jmp
repnz
cmpsl
faddl
sub
pushf
inc
int
add
les
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
and
out
mov
imul
jmp
inc
repz
xchg
hlt
inc
add
mov
nop
leave
jmp
xor
xchg
add
jne
push
fisttpll
nop
cld
jae
add
inc
add
clc
repnz
nop
cld
jae
add
int
and
nop
nop
cld
jae
and
inc
repnz
add
popa
jo
mov
mov
mov
in
nop
leave
jmp
xor
cmpsl
add
mov
les
repnz
nop
cld
jae
inc
cmp
dec
sub
clc
repnz
nop
cld
jae
arpl
adc
mov
mov
nop
leave
jmp
add
add
in
nop
leave
jmp
mov
add
add
add
mov
jg
clc
repnz
nop
cld
jae
ja
add
adc
mov
pop
push
mov
nop
leave
jmp
add
jg
add
xor
clc
repnz
nop
cld
jae
add
rolb
and
jne
jmp
add
add
pushf
add
sbb
and
add
clc
repnz
nop
cld
jae
add
add
stc
add
clc
repnz
nop
cld
jae
add
add
add
int3
mov
clc
repnz
nop
cld
jae
add
cmp
add
repnz
nop
cld
jae
clc
add
shll
and
mov
popa
and
add
xchg
add
jne
add
add
add
add
addr16
xor
clc
repnz
nop
cld
jae
arpl
add
cmc
add
or
nop
nop
cld
jae
jne
add
add
fstpl
push
push
mov
xchg
ret
adc
imul
mov
hlt
cwtl
push
clc
repnz
nop
cld
jae
add
add
into
subl
clc
repnz
nop
cld
jae
imul
add
adc
mov
add
clc
repnz
nop
cld
jae
sbb
int
clc
add
add
nop
nop
cld
jae
fdivl
add
add
add
clc
repnz
nop
cld
jae
clc
add
add
insb
enter
aad
mov
aad
add
add
push
clc
repnz
nop
cld
jae
add
dec
add
mov
add
add
fcoml
sub
repz
add
sti
push
mov
nop
leave
jmp
add
xchg
dec
add
jg
sbb
repz
inc
add
add
add
repnz
push
repnz
nop
cld
jae
sub
add
in
push
push
mov
nop
leave
jmp
mov
add
add
add
fmul
mov
clc
repnz
nop
cld
jae
jg
cmpsl
mov
clc
push
mov
xchg
ret
add
cmp
ds
xor
push
mov
nop
leave
jmp
out
repz
cmp
mov
clc
inc
add
sub
pop
pushf
stos
add
inc
sbb
mov
xchg
ret
add
add
xchg
ds
push
mov
xchg
ret
ja
int
add
add
push
push
mov
xchg
ret
rolb
add
ds
add
mov
mov
sub
repnz
nop
cld
jae
add
cmpsl
cs
xchg
add
loop
push
mov
xchg
ret
mov
mov
mov
push
movsl
call
bnd
and
jne
add
add
add
stos
add
push
mov
xchg
ret
cmp
xor
add
mov
mov
nop
leave
jmp
add
mov
mov
add
clc
repnz
nop
cld
jae
jne
add
popa
fs
mov
nop
leave
jmp
add
add
add
daa
leave
mov
clc
repnz
nop
cld
jae
rorb
add
clc
repnz
nop
cld
jae
fstp
and
clc
push
repnz
nop
cld
jae
add
mov
outsl
mov
add
add
repnz
nop
cld
jae
mov
dec
add
mov
xchg
ret
add
add
std
xor
fiadds
xchg
ret
jne
add
add
stos
add
call
clc
repnz
nop
cld
jae
jg
pushf
lcall
nop
cld
jae
ja
add
rolb
outsb
mov
clc
repnz
nop
cld
jae
add
mov
mov
xchg
ret
int
add
add
cmc
filds
popf
cs
push
mov
nop
leave
jmp
jg
repz
jo
sahf
push
mov
add
add
pop
add
add
cmp
in
clc
pop
clc
repnz
nop
cld
jae
insb
add
sbb
cmpsl
mov
or
repnz
nop
cld
jae
out
pushf
dec
call
clc
repnz
nop
cld
jae
add
push
add
nop
leave
jmp
faddl
xchg
add
cmc
dec
cmp
push
mov
nop
leave
jmp
add
add
fmuls
test
adc
add
repnz
nop
cld
jae
repz
pop
aam
and
push
clc
repnz
nop
cld
jae
jne
cmpsl
jne
add
clc
repnz
nop
cld
jae
arpl
stos
add
push
mov
xchg
ret
xchg
add
and
repz
cmc
fmull
nop
nop
cld
jae
stos
fmul
cmpsl
jne,pt
std
mov
push
mov
nop
leave
jmp
add
add
add
add
add
push
mov
nop
leave
jmp
add
add
push
add
xor
add
clc
repnz
nop
cld
jae
dec
cmp
add
or
and
ja
xor
cmc
mov
xor
add
clc
repnz
nop
cld
jae
add
das
call
push
mov
nop
leave
jmp
add
std
add
add
repnz
nop
cld
jae
sbb
cmp
add
test
idiv
clc
repnz
nop
cld
jae
cmp
add
nop
nop
cld
jae
add
sub
add
xchg
push
inc
push
mov
xchg
ret
add
add
xchg
int
add
push
add
add
add
repnz
nop
cld
jae
jg
add
nop
nop
cld
jae
add
fldl
add
pop
or
add
repnz
nop
cld
jae
add
add
sbb
nop
cld
jae
sub
add
jne
dec
imul
repnz
nop
cld
jae
mov
cmpsl
leave
add
clc
repnz
nop
cld
jae
mov
call
repnz
nop
cld
jae
inc
add
ja
fstp
mov
push
mov
nop
leave
jmp
add
add
mov
rclb
in
nop
leave
jmp
sbb
mov
add
add
mov
push
mov
xchg
ret
stos
xchg
sub
add
cmc
push
push
xchg
leave
push
mov
xchg
ret
imul
add
add
clc
repnz
nop
cld
jae
dec
jo
jne
add
test
test
add
repnz
nop
cld
jae
mov
cs
insb
clc
repnz
nop
cld
jae
add
lea
push
mov
nop
leave
jmp
fsubrl
std
add
clc
repnz
nop
cld
jae
cmp
cmc
add
in
fmuls
stc
inc
add
shl
add
add
mov
xchg
ret
jg
add
add
gs
add
push
mov
nop
leave
jmp
add
cmpsl
sbb
xchg
add
add
mov
add
clc
repnz
nop
cld
jae
add
sub
pop
pop
push
mov
xchg
ret
add
sbb
repz
repnz
mov
nop
leave
jmp
repnz
adc
or
cmpsl
pop
add
clc
repnz
nop
cld
jae
repnz
sbbl
nop
cld
jae
add
jg
add
push
rolb
push
sub
mov
clc
repnz
nop
cld
jae
dec
clc
mov
clc
repnz
nop
cld
jae
add
add
cmc
fucomip
sub
call
ja
add
add
in
out
movzwl
push
mov
nop
leave
jmp
jne
add
add
cmp
nop
nop
cld
jae
xchg
add
add
push
push
mov
xchg
ret
add
add
lcall
adc
filds
xchg
ret
push
cmpsl
lcall
clc
push
mov
xchg
ret
jg
jo,pt
add
outsb
call
clc
repnz
nop
cld
jae
add
mov
rolb
mov
add
push
mov
xchg
ret
add
jg
arpl
scas
mov
clc
repnz
nop
cld
jae
inc
add
push
sbb
push
mov
nop
leave
jmp
inc
add
add
inc
cltd
ret
clc
repnz
nop
cld
jae
add
add
dec
movzwl
push
mov
xchg
ret
imul
lret
call
push
mov
nop
leave
jmp
add
xchg
filds
clc
jmp
add
roll
in
add
add
add
dec
add
mov
xchg
ret
add
add
add
add
clc
repnz
nop
cld
jae
add
add
mov
and
js
mov
nop
leave
jmp
add
and
push
mov
xchg
ret
mov
faddl
in
add
jae
push
mov
xchg
ret
add
xor
das
mov
clc
repnz
nop
cld
jae
pushf
imul
mov
clc
repnz
nop
cld
jae
add
mov
nop
leave
jmp
dec
add
add
and
scas
mov
push
mov
nop
leave
jmp
mov
jg
outsl
lods
push
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
sub
push
clc
repnz
nop
cld
jae
add
add
add
pushf
sti
push
mov
adc
add
add
and
movb
add
push
push
add
clc
repnz
nop
cld
jae
add
fnstsw
add
push
mov
xchg
ret
xor
add
add
movsl
lock
add
add
cmp
stos
clc
sub
add
add
mov
jne
inc
add
jo
pushf
add
jne
cld
clc
repnz
nop
cld
jae
add
and
fildll
adc
iret
or
add
repnz
nop
cld
jae
add
add
nop
cld
jae
fs
and
cmp
adc
add
push
lret
xchg
ret
cmp
and
mov
clc
repnz
nop
cld
jae
dec
repnz
cmpsl
adc
mov
push
clc
repnz
nop
cld
jae
stos
cmpsl
add
add
dec
or
repnz
nop
cld
jae
mov
in
pusha
add
js
mov
xchg
ret
pop
add
jo
add
or
clc
repnz
nop
cld
jae
add
dec
mov
clc
repnz
nop
cld
jae
add
sub
xchg
add
pusha
push
mov
xchg
ret
add
xchg
adc
filds
mov
clc
repnz
nop
cld
jae
add
addr16
mov
nop
leave
jmp
cmpsl
repz
mov
add
ss
mov
add
jbe
clc
repnz
nop
cld
jae
faddl
cmp
mov
jle
mov
add
add
repnz
nop
cld
jae
add
in
stos
and
mov
add
add
nop
nop
cld
jae
add
int
lods
push
push
mov
nop
leave
jmp
jo
in
add
mov
jmp
add
clc
repnz
nop
cld
jae
outsl
xor
cmp
pushl
push
mov
xchg
ret
xor
add
add
mov
xor
mov
add
push
mov
nop
leave
jmp
repnz
xchg
jo
add
mov
clc
repnz
nop
cld
jae
mov
shrl
clc
repnz
nop
cld
jae
add
add
inc
clc
fsubl
ret
push
mov
xchg
ret
add
xchg
shrb
add
push
mov
xchg
ret
add
add
cmpsl
add
outsl
les
push
mov
nop
leave
jmp
add
add
jne
add
imull
iret
or
inc
add
add
add
add
clc
repnz
nop
cld
jae
add
add
mov
adc
inc
add
filds
inc
jne
imul
push
mov
nop
leave
jmp
add
add
pushf
add
mov
mov
shl
push
mov
nop
leave
jmp
add
add
fimuls
add
add
add
cmpsl
cmp
add
push
mov
xchg
ret
cmpsl
add
add
sub
mov
mov
in
nop
leave
jmp
mov
stos
add
scas
push
push
mov
xchg
ret
and
mov
lcall
cmp
repnz
nop
cld
jae
jne
frstor
arpl
mov
push
add
add
add
add
add
xorl
nop
clc
repnz
nop
cld
jae
adc
add
push
mov
xchg
ret
imul
add
add
add
mov
xchg
ret
add
add
loop
mov
nop
cld
jae
cmpsl
add
add
mov
xchg
ret
jo
add
mov
mov
popa
add
mov
xchg
ret
cmpsl
add
add
repnz
nop
cld
jae
sub
fstp
xor
stc
inc
add
filds
add
add
sbb
lds
add
add
repnz
nop
cld
jae
imul
add
clc
repnz
nop
cld
jae
add
scas
mov
clc
repnz
nop
cld
jae
push
outsl
stos
int
mov
mov
push
mov
nop
leave
jmp
add
clc
std
add
add
add
add
repnz
nop
cld
jae
insb
add
cmpsl
sub
nop
nop
cld
jae
add
add
jmp
clc
repnz
nop
cld
jae
int
add
sub
mov
pusha
clc
repnz
nop
cld
jae
jne
imul
xchg
add
nop
nop
cld
jae
and
add
mov
xor
add
clc
repnz
nop
cld
jae
in
mov
clc
repnz
nop
cld
jae
add
imul
insl
pop
clc
repnz
nop
cld
jae
and
int
add
ja
addb
and
test
push
mov
nop
leave
jmp
mov
repnz
clc
repnz
nop
cld
jae
in
arpl
add
rolb
and
mov
add
add
add
repnz
nop
cld
jae
int
test
and
mov
nop
leave
jmp
add
add
adc
lea
push
mov
nop
leave
jmp
add
mov
push
mov
xchg
ret
outsl
outsl
shlb
imul
add
push
mov
xchg
ret
add
jne
cmp
sub
mov
inc
add
dec
add
rolb
ds
mov
clc
repnz
nop
cld
jae
insb
outsl
add
mov
xchg
ret
add
jne
add
and
and
add
sbb
add
clc
repnz
nop
cld
jae
cmpsl
add
xor
clc
repnz
nop
cld
jae
add
add
pop
add
clc
repnz
nop
cld
jae
jg
fldl
mov
mov
push
add
repnz
nop
cld
jae
add
clc
add
jle
clc
repnz
nop
cld
jae
add
jg
and
jmp
nop
cld
jae
xchg
shrl
pop
push
mov
xchg
ret
mov
add
roll
lods
push
push
mov
xchg
ret
add
pushf
int
add
in
add
add
clc
repnz
nop
cld
jae
add
adc
mov
mov
push
mov
xchg
ret
add
add
out
xlat
cmp
clc
repnz
nop
cld
jae
outsl
add
sub
pop
push
mov
xchg
ret
push
sub
add
add
cmp
push
mov
nop
leave
jmp
add
add
sbb
cmpb
add
clc
repnz
nop
cld
jae
jne
add
jge
clc
repnz
nop
cld
jae
add
push
fstl
clc
repnz
nop
cld
jae
cmpsl
add
std
add
add
add
clc
repnz
nop
cld
jae
add
add
add
sub
adc
call
in
nop
leave
jmp
add
add
adc
cmp
add
add
add
add
insb
push
push
mov
xchg
ret
faddl
lcall
loopne
mov
mov
push
mov
xchg
ret
add
add
add
cmp
repnz
nop
cld
jae
add
sbb
xor
mov
repnz
nop
cld
jae
add
add
add
fsubl
js
clc
repnz
nop
cld
jae
stos
cmp
adc
clc
repnz
nop
cld
jae
mov
sbb
add
pop
push
mov
xchg
ret
jg
add
cmc
jb
mov
repnz
nop
cld
jae
add
filds
add
repnz
popa
add
mov
xchg
ret
add
add
dec
push
scas
lea
push
mov
xchg
ret
sub
xor
dec
add
push
mov
xchg
ret
add
add
add
test
add
clc
repnz
nop
cld
jae
add
pushf
cmp
inc
clc
repnz
nop
cld
jae
add
insb
jg
mov
add
mov
nop
nop
cld
jae
adc
cmp
push
sar
nop
nop
cld
jae
and
add
add
scas
add
clc
repnz
nop
cld
jae
add
add
rolb
repnz
nop
cld
jae
add
lods
jmp
cmc
add
add
xchg
jo
add
mov
nop
leave
jmp
add
xor
push
mov
xchg
ret
fs
add
sub
dec
push
mov
xchg
ret
lcall
pushf
add
push
clc
repnz
nop
cld
jae
add
sub
jne
and
mov
push
mov
xchg
ret
roll
add
int
add
push
push
mov
xchg
ret
cmp
mov
add
clc
repnz
nop
cld
jae
inc
cmc
add
mov
clc
repnz
nop
cld
jae
add
add
pushl
push
mov
xchg
ret
imul
sbb
pusha
clc
repnz
nop
cld
jae
add
inc
mov
add
in
ja
push
mov
add
add
inc
dec
add
es
pop
add
neg
push
clc
repnz
nop
cld
jae
add
add
add
enter
clc
repnz
nop
cld
jae
add
mov
push
pusha
clc
repnz
nop
cld
jae
cmpsl
insb
add
out
out
push
rcrl
clc
repnz
nop
cld
jae
xchg
add
mov
fstpl
or
clc
repnz
nop
cld
jae
out
imul
clc
repnz
nop
cld
jae
add
add
xchg
add
incl
xchg
add
faddl
add
dec
jne
aaa
mov
jmp
mov
nop
leave
jmp
add
cmpsl
cmc
filds
cmp
rclb
cmp
inc
add
lcall
mov
nop
nop
cld
jae
lcall
add
mov
nop
leave
jmp
add
add
pop
add
add
or
nop
leave
jmp
fbld
add
stos
add
jg
push
push
mov
xchg
ret
arpl
add
pop
add
add
add
clc
repnz
nop
cld
jae
cmp
add
clc
repnz
nop
cld
jae
addr16
add
cmp
gs
pushf
mov
push
mov
xchg
ret
add
fsubl
mov
xchg
ret
xor
add
add
stos
add
or
movsl
clc
repnz
nop
cld
jae
add
cmc
xchg
cmc
add
repnz
nop
cld
jae
add
mov
mov
push
mov
nop
leave
jmp
inc
and
add
cmpsl
add
clc
repnz
nop
cld
jae
jne
xor
sub
faddl
les
xor
push
mov
xchg
ret
add
add
movsb
push
mov
xchg
ret
add
add
inc
cmp
jbe
call
in
nop
leave
jmp
add
cmpsl
add
sub
push
mov
nop
leave
jmp
inc
add
add
add
sub
nop
nop
cld
jae
jne
add
add
xor
repnz
nop
cld
jae
xchg
stos
add
push
mov
add
mov
add
add
leave
iret
flds
add
clc
repnz
nop
cld
jae
roll
sub
add
add
push
mov
nop
leave
jmp
sub
jo
cmpsl
and
xor
mov
xor
mov
clc
repnz
nop
cld
jae
mov
cmp
loopne
mov
in
nop
leave
jmp
ds
out
int
add
jp
clc
repnz
nop
cld
jae
stos
cmpsl
lcall
cmpw
push
mov
nop
leave
jmp
cmp
add
jmp
repnz
nop
cld
jae
outsl
add
adc
add
repnz
nop
cld
jae
cmpsl
add
add
add
pusha
add
pop
clc
repnz
nop
cld
jae
sub
jg
add
sub
sbb
jg
clc
repnz
nop
cld
jae
add
push
lcall
mov
add
pusha
add
push
mov
nop
leave
jmp
add
imul
mov
add
mov
loopne
clc
repnz
nop
cld
jae
mov
fstpl
ss
repnz
nop
cld
jae
clc
cmpsl
mov
add
mov
push
mov
xchg
ret
cmpsl
std
add
imul
nop
cld
jae
jg
int
fldl
push
pushl
fistl
sbb
cmp
ret
cmc
add
outsl
mov
add
mov
push
mov
nop
leave
jmp
out
rolb
add
repnz
nop
cld
jae
xchg
add
fstp
add
decl
mov
nop
nop
cld
jae
add
mov
adc
xorl
clc
repnz
nop
cld
jae
add
xor
mov
mov
mov
add
add
add
add
add
and
in
add
clc
repnz
nop
cld
jae
add
mov
imul
clc
repnz
nop
cld
jae
add
cmpsl
add
out
add
add
in
nop
leave
jmp
jo
stos
popa
inc
incl
in
nop
leave
jmp
add
add
addr16
pop
call
clc
repnz
nop
cld
jae
cmp
enter
nop
cld
jae
cmpsl
out
add
cmp
clc
repnz
nop
cld
jae
int
add
and
add
or
inc
add
imul
add
int
add
clc
rolb
xchg
ret
add
add
push
mov
jmp
push
add
or
movsl
add
push
add
add
add
mov
clc
repnz
nop
cld
jae
add
and
clc
repnz
nop
cld
jae
add
insb
jg
cmc
scas
dec
clc
repnz
nop
cld
jae
and
addr16
add
push
mov
nop
leave
jmp
add
and
fimuls
repnz
nop
cld
jae
add
add
clc
fiadds
jo
push
mov
nop
leave
jmp
cmp
mov
lret
cmpl
push
mov
nop
leave
jmp
add
ds
jo
push
push
mov
xchg
ret
mov
add
jg
add
clc
repnz
nop
cld
jae
jne
rclb
add
push
mov
nop
leave
jmp
sub
adc
ret
in
push
clc
repnz
nop
cld
jae
add
add
and
sub
repnz
nop
cld
jae
jne
cmp
mov
clc
repnz
nop
cld
jae
ja
jg
mov
nop
nop
cld
jae
add
jg
shrb
add
pushl
push
mov
nop
leave
jmp
add
add
jne
add
bound
mov
nop
nop
cld
jae
add
pushl
push
mov
xchg
ret
add
dec
divl
pusha
add
clc
repnz
nop
cld
jae
dec
add
add
add
dec
mov
clc
repnz
nop
cld
jae
imul
mov
pop
clc
repnz
nop
cld
jae
lcall
xor
mov
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
cmpsl
jg
sub
add
ret
push
mov
nop
leave
jmp
in
and
sub
popl
push
mov
nop
leave
jmp
cmpsl
add
add
std
jg
add
sub
dec
push
clc
repnz
nop
cld
jae
xor
jno
xchg
clc
repnz
nop
cld
jae
xor
add
add
arpl
add
repnz
nop
cld
jae
sbb
arpl
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
xchg
ja
add
test
pop
call
in
nop
leave
jmp
jne
and
add
mov
push
clc
repnz
nop
cld
jae
pop
cs
and
rclb
clc
repnz
nop
cld
jae
mov
ds
lcall
repnz
nop
cld
jae
jne
add
and
enter
in
nop
leave
jmp
add
add
fsubr
leave
out
incl
mov
cmp
xchg
mov
add
div
push
mov
nop
leave
jmp
add
lcall
mov
push
mov
nop
leave
jmp
arpl
add
dec
cmc
jne
mov
clc
repnz
nop
cld
jae
add
insb
clc
add
add
nop
nop
cld
jae
pushf
fnsave
insb
xchg
add
add
addr16
cltd
push
clc
repnz
nop
cld
jae
push
add
add
and
repnz
nop
cld
jae
xor
add
dec
mov
clc
repnz
nop
cld
jae
add
fsubl
sti
push
push
mov
xchg
ret
add
xor
out
inc
add
push
push
mov
xchg
ret
arpl
rolb
add
mov
mov
push
mov
nop
leave
jmp
add
add
add
clc
adc
dec
imul
push
mov
nop
leave
jmp
sub
cmpsl
jg
add
mov
push
clc
repnz
nop
cld
jae
cmpsl
cmp
or
nop
cld
jae
inc
add
add
nop
nop
cld
jae
stos
ja
clc
add
sbb
data16
sahf
sub
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
ds
rcrb
add
mov
nop
leave
jmp
add
add
xchg
lahf
add
push
mov
nop
leave
jmp
xor
stos
add
xor
shl
push
mov
nop
leave
jmp
add
sub
add
outsl
lea
js
push
mov
nop
leave
jmp
add
add
add
xabort
nop
nop
cld
jae
add
add
lcall
add
mov
mov
jne
jg
add
add
add
xor
clc
repnz
nop
cld
jae
cmpsl
ja
add
add
mov
pop
clc
repnz
nop
cld
jae
add
adc
int
inc
jl
clc
repnz
nop
cld
jae
add
std
dec
lcall
add
leave
jmp
add
fst
add
push
mov
xchg
ret
cmp
add
add
jne
jne
clc
repnz
nop
cld
jae
sbb
leave
or
clc
repnz
nop
cld
jae
add
out
sub
xor
inc
push
rolb
mov
mov
xchg
ret
add
add
add
mov
nop
leave
jmp
lcall
add
add
clc
repnz
nop
cld
jae
xor
mov
mov
clc
repnz
nop
cld
jae
std
add
cmp
call
push
mov
nop
leave
jmp
add
add
add
cmp
jmp
icebp
inc
add
add
jne
add
dec
mov
push
mov
xchg
ret
add
repnz
push
mov
add
add
sahf
sbb
add
scas
mov
clc
repnz
nop
cld
jae
add
in
movsb
push
sahf
ja
push
mov
nop
leave
jmp
int
add
or
add
add
leave
jmp
inc
dec
mov
push
mov
xchg
ret
and
ja
add
rolb
mov
pop
clc
repnz
nop
cld
jae
outsl
add
add
add
lret
repnz
nop
cld
jae
sbb
insb
xchg
add
xchg
outsl
cmp
jne
je
repnz
nop
cld
jae
xor
cmpsb
mov
test
jmp
clc
repnz
nop
cld
jae
adc
jbe
clc
repnz
nop
cld
jae
add
imul
pop
push
mov
xchg
ret
add
lcall
je
clc
repnz
nop
cld
jae
lcall
rep
clc
repnz
nop
cld
jae
add
sub
clc
repnz
nop
cld
jae
pop
add
add
sub
repnz
nop
cld
jae
add
repnz
xor
int
cltd
ret
push
mov
xchg
ret
inc
clc
add
repnz
add
data16
repnz
nop
cld
jae
add
add
pop
jns
cld
or
nop
leave
jmp
and
add
clc
repnz
nop
cld
jae
jo
cmpsl
add
add
in
push
mov
xchg
ret
add
add
add
adc
repnz
nop
cld
jae
lcall
ret
inc
adc
mov
push
mov
xchg
ret
add
int
add
add
xchg
mov
push
mov
xchg
ret
add
addr16
std
add
mov
addb
xor
pop
cltd
add
ljmp
clc
repnz
nop
cld
jae
inc
add
rolb
adc
mov
mov
xchg
ret
sbb
lcall
mov
stos
push
mov
nop
leave
jmp
imul
fistpll
cmc
sub
mov
nop
leave
jmp
in
add
add
test
push
mov
nop
leave
jmp
rolb
cmc
add
ds
mov
clc
repnz
nop
cld
jae
imul
dec
mov
clc
repnz
nop
cld
jae
rep
repz
cmpl
push
mov
nop
leave
jmp
cs
push
frstor
add
cmp
mov
xchg
ret
add
jg
push
add
rorl
stos
push
mov
xchg
ret
cmc
stos
add
cmpsl
inc
add
pop
jae
je
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
xchg
add
add
push
mov
add
out
add
cmp
add
add
stos
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
int
add
mov
push
mov
xchg
ret
cmpsl
push
cmpsl
add
add
cs
clc
repnz
nop
cld
jae
cmc
add
add
clc
repnz
nop
cld
jae
cmp
add
inc
jne
adc
pop
jno
in
pop
add
push
mov
nop
leave
jmp
xor
sbb
add
push
mov
nop
leave
jmp
and
xor
mov
add
clc
repnz
nop
cld
jae
repz
add
stos
push
jge
push
mov
xchg
ret
inc
add
out
xor
mov
clc
repnz
nop
cld
jae
jo
add
xor
in
nop
leave
jmp
in
stos
add
xchg
insb
arpl
movsl
enter
adc
clc
repnz
nop
cld
jae
add
mov
add
in
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
repnz
jge
ja
outsb
je
repnz
nop
cld
jae
faddl
arpl
mov
clc
repnz
nop
cld
jae
xchg
add
cmp
push
mov
nop
leave
jmp
int
add
cmp
clc
repnz
nop
cld
jae
std
mov
and
clc
repnz
nop
cld
jae
mov
xchg
jne
xchg
push
sbb
repnz
nop
cld
jae
add
pushf
outsl
aas
push
push
mov
xchg
ret
add
cmpsl
xor
into
call
push
mov
nop
leave
jmp
xor
add
clc
repnz
nop
cld
jae
sub
add
int
dec
dec
push
mov
xchg
ret
add
rcrb
adc
mov
loop
mov
mov
clc
repnz
nop
cld
jae
out
add
jo
cmp
clc
clc
repnz
nop
cld
jae
add
mov
pop
push
mov
xchg
ret
imul
add
clc
repnz
nop
cld
jae
jne
outsl
xchg
adc
mov
nop
cld
jae
pop
pushf
add
filds
xor
push
mov
nop
leave
jmp
stos
add
add
xchg
sbb
mov
xchg
ret
repnz
add
and
mov
clc
repnz
nop
cld
jae
stos
jne
add
stos
pop
mov
push
mov
xchg
ret
jne
add
add
cmp
mov
add
add
clc
add
add
fiadds
scas
adc
cs
pusha
push
or
nop
cld
jae
add
sub
add
add
dec
imul
leave
jmp
add
add
ret
push
mov
xchg
ret
add
sbb
add
add
pusha
add
repnz
nop
cld
jae
add
fsubl
mov
clc
repnz
nop
cld
jae
xchg
inc
mov
mov
clc
repnz
nop
cld
jae
std
add
test
clc
repnz
nop
cld
jae
add
add
add
add
jbe
add
clc
repnz
nop
cld
jae
xor
ja
mov
cwtl
mov
push
mov
xchg
ret
add
dec
add
lods
mov
push
mov
xchg
ret
jne
add
out
add
cmp
nop
nop
cld
jae
ds
repnz
repnz
movzwl
clc
repnz
nop
cld
jae
push
add
fistpll
lods
and
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
arpl
add
cs
pop
mov
mov
xchg
ret
imul
add
and
jne
clc
repnz
nop
cld
jae
stos
add
mov
repnz
nop
cld
jae
add
add
add
xor
add
clc
repnz
nop
cld
jae
add
pop
jne
clc
repnz
nop
cld
jae
and
in
add
push
mov
nop
leave
jmp
add
add
test
cli
clc
repnz
nop
cld
jae
mov
mov
repnz
sti
add
add
inc
pop
pop
push
pop
jle
cmp
test
add
clc
repnz
nop
cld
jae
mov
movzwl
push
mov
nop
leave
jmp
add
sub
add
jne
add
clc
repnz
nop
cld
jae
repnz
add
test
call
in
nop
leave
jmp
add
add
dec
push
push
mov
xchg
ret
stos
inc
add
add
mov
repnz
nop
cld
jae
add
sub
sub
insl
push
push
mov
nop
leave
jmp
add
add
adc
jne
push
mov
nop
leave
jmp
jne
add
in
push
push
mov
xchg
ret
add
add
add
frstor
adc
push
clc
repnz
nop
cld
jae
add
xchg
repz
stos
cmp
in
nop
leave
jmp
jo
imul
mov
xchg
ret
addr16
stos
add
cmp
push
mov
nop
leave
jmp
repz
add
cmpsl
sbb
add
repnz
nop
cld
jae
add
add
add
incb
jne
clc
repnz
nop
cld
jae
jg
rolb
add
fistl
repnz
nop
cld
jae
mov
repnz
push
ret
jns
sar
repnz
nop
cld
jae
add
sub
add
add
clc
repnz
nop
cld
jae
add
add
xor
add
pop
clc
repnz
nop
cld
jae
add
stos
cs
add
push
mov
xchg
ret
imul
xor
clc
repnz
nop
cld
jae
filds
add
add
fldl
jo
mov
add
data16
mov
nop
leave
jmp
stos
pushf
mov
lods
and
imul
nop
nop
cld
jae
add
jg
sbb
push
mov
nop
leave
jmp
add
add
clc
repnz
nop
cld
jae
add
addr16
add
add
add
clc
repnz
nop
cld
jae
and
add
add
clc
repnz
nop
cld
jae
add
jg
dec
add
repnz
nop
cld
jae
out
add
cmpl
in
nop
leave
jmp
add
add
push
mov
xchg
ret
addr16
cmp
sub
push
mov
nop
leave
jmp
cmp
clc
push
in
nop
leave
jmp
add
imul
mov
xchg
ret
add
add
add
add
xchg
clc
repnz
nop
cld
jae
inc
add
add
rolb
xchg
outsl
and
clc
repnz
nop
cld
jae
int
cmp
add
jne
push
mov
xchg
ret
fsubl
pushf
inc
xchg
in
add
xor
clc
repnz
nop
cld
jae
add
repz
mov
scas
jecxz
call
in
nop
leave
jmp
in
add
jne
pop
clc
repnz
nop
cld
jae
add
xchg
mov
mov
repnz
nop
cld
jae
arpl
add
clc
repnz
nop
cld
jae
jg
ja
idivl
pop
adc
repnz
nop
cld
jae
add
mov
nop
cld
jae
xor
add
inc
sub
pop
push
clc
repnz
nop
cld
jae
xchg
add
add
add
or
in
nop
leave
jmp
pop
cmpsl
add
ja
cmpsl
or
ljmp
add
add
jne
jg
outsl
inc
push
dec
mov
push
mov
xchg
ret
out
shrl
add
sbb
call
in
nop
leave
jmp
jo
add
clc
repnz
nop
cld
jae
add
add
arpl
stos
inc
add
clc
repnz
nop
cld
jae
add
add
clc
add
movswl
clc
repnz
nop
cld
jae
add
jg
add
clc
repnz
nop
cld
jae
inc
repnz
push
add
nop
nop
cld
jae
add
pop
cmp
test
clc
repnz
nop
cld
jae
add
jae
push
clc
repnz
nop
cld
jae
insb
add
int
inc
add
clc
repnz
nop
cld
jae
inc
add
add
xor
push
clc
repnz
nop
cld
jae
sub
sbb
outsl
mov
mov
and
cmp
ret
cs
add
add
fucomp
pop
clc
repnz
nop
cld
jae
int
add
add
jne
mov
push
mov
nop
leave
jmp
clc
and
add
add
push
mov
nop
leave
jmp
xchg
stos
sub
inc
add
mov
clc
repnz
nop
cld
jae
add
adc
jmp
push
mov
xchg
ret
add
mov
add
adc
addb
add
repnz
nop
cld
jae
add
outsl
jno
add
idiv
clc
repnz
nop
cld
jae
add
xor
mov
mov
sbb
leave
cmc
add
test
sbb
lea
sub
popa
les
lds
push
inc
add
cltd
cmp
lret
push
adc
mov
pusha
add
add
mov
mov
or
add
pop
or
mov
mov
mov
ret
xchg
in
inc
jb
mov
int3
rcl
push
outsl
in
jbe
adc
pop
stos
dec
xor
mov
xlat
mov
add
add
outsl
cmpl
js
xor
lret
into
and
call
mov
sub
mov
pop
lods
test
adc
mov
sub
dec
loope
pop
dec
jne
or
aaa
lahf
arpl
mov
rolb
mov
push
std
movsb
pop
lret
add
add
pop
je
jg
push
dec
ret
push
sbb
negb
mov
pop
test
pusha
add
xor
mov
mov
inc
mov
sub
popa
xchg
test
and
repnz
push
add
aam
pop
mov
add
test
or
xchg
popf
les
mov
sahf
xchg
out
out
or
adc
loopne
mov
in
pop
out
add
xor
add
pop
jmp
test
push
jecxz
addr16
or
add
add
in
add
gs
add
imul
sub
xchg
add
mov
add
mov
loopne
mov
add
loope
or
adc
es
mov
add
aas
jmp
jp
clc
ja
gs
jo
mov
std
lahf
loop
mov
add
mov
sub
xchg
imull
add
push
outsl
out
add
jb
mov
sahf
imul
push
in
pop
jo
mov
add
out
mov
cmp
mov
push
cltd
rolb
cmc
movsb
mov
mov
add
js
test
add
mov
aad
add
or
sahf
adc
jp
test
add
mov
jmp
cltd
movsb
faddp
xchg
sub
push
push
sub
loopne
mov
mov
in
add
add
aaa
mov
mov
fsub
jae
jb
mov
mov
fwait
addr16
add
jb
mov
mov
mov
add
int3
fisttpll
add
mov
sbb
mov
inc
jmp
lcall
cwtl
mov
add
repnz
add
push
pushf
ljmp
add
jmp
lds
inc
notl
stos
repnz
sbb
lock
outsb
fndisi(8087
lret
arpl
dec
push
inc
sub
ficoml
dec
adc
mov
mov
ret
movsb
mov
sbb
dec
sub
cmpsl
loop
mov
inc
fwait
inc
add
mov
inc
js
jno
in
mov
add
pushw
xchg
add
aam
inc
pop
mov
add
sub
xor
mov
cmp
std
push
adc
in
add
je
mov
addr16
pop
fstps
push
hlt
add
add
out
push
arpl
sub
jbe
add
jg
notb
add
cmp
add
mov
addb
dec
aad
sbb
int
add
push
mov
rolb
mov
pop
fwait
push
mov
mov
mov
cmp
cmp
int3
cmp
mov
adc
mov
pop
push
pop
dec
xchg
xchg
aaa
gs
mov
scas
xchg
gs
pop
cmpsb
outsb
jmp
add
xor
lds
push
add
xor
mov
mov
add
in
mov
mov
jle
sbb
sbb
add
xchg
xchg
adc
mov
push
pusha
add
xor
cwtl
test
sub
cmc
adc
sbb
xor
jno
jne
mov
mov
repz
or
mov
lret
mov
push
jge
xor
add
cwtl
sub
and
sub
in
mov
xlat
and
mov
inc
addr16
add
lods
inc
std
fbstp
test
mov
jb
mov
jle
sbb
mov
sarl
and
scas
or
in
add
inc
dec
adc
sub
pop
mov
pop
xchg
xchg
jbe
leave
scas
mov
popf
push
xor
ja
xor
push
cwtl
xor
xchg
mov
add
repnz
pushl
fstps
sbb
pusha
add
scas
jb
mov
sub
popf
imul
pushf
push
ficoms
push
lods
lds
cli
outsl
sahf
jae
add
jge
addr16
add
les
push
cmpsl
inc
pop
int3
jo
mov
cli
push
fwait
movsb
dec
sbb
mov
lcall
cld
scas
arpl
mov
mov
cmp
mov
xchg
add
loop
mov
cmp
add
loope
or
pusha
add
enter
cmp
in
dec
pushf
jg
mov
add
cs
push
add
std
out
push
test
ficoms
iret
je
sbbl
sbb
adc
mov
mov
mov
jnp
gs
jo
mov
sub
add
mov
in
pop
pop
pop
sub
pop
cmp
repnz
add
xchg
jno
sub
adc
sub
cli
popa
fiadds
inc
and
bound
mov
sub
add
or
lahf
push
cmpsl
in
pop
cld
push
addr16
mov
enter
je
jae
add
mov
push
add
sbb
iret
or
test
movsb
push
loopne
mov
out
dec
sbb
in
sbb
repnz
mov
mov
cmp
adc
mov
adc
sub
mov
cmp
add
mov
pop
je
fwait
adc
aam
add
and
ret
ret
push
sbb
xchg
push
jae
lods
stc
mov
mov
fs
jmp
imulb
filds
nop
add
add
mov
pop
hlt
addb
mov
sarl
bound
mov
push
icebp
fdiv
ljmp
mov
fstpl
or
fstp
outsb
sub
add
mov
aad
mov
jb
mov
jns
insb
mov
xor
push
jecxz
pop
add
mov
scas
mov
inc
add
and
mov
add
sbb
scas
pop
dec
adc
lock
mov
jo
mov
in
xchg
pushf
sub
add
in
adcl
addr16
add
andl
add
inc
push
add
sbb
pop
mov
mov
test
loopne
mov
outsl
sub
loop
mov
sub
xchg
pop
jbe
out
imulb
add
mov
cli
dec
es
cmp
add
mov
sub
test
jle
add
mov
and
or
add
pop
inc
xlat
loopne
mov
sub
sbb
and
pop
pop
dec
mov
and
mov
xor
js
inc
dec
add
mov
mov
mov
rcll
add
mov
sbb
mov
cmpsl
mov
jnp
mov
gs
push
add
rolb
mov
je,pt
mov
xchg
movaps
in
stos
int3
rolb
mov
int3
aas
add
push
in
mov
hlt
fiadds
add
mov
bts
mov
addb
adc
cmp
in
add
adc
mov
mov
add
fmul
bound
mov
test
add
push
sub
add
pop
inc
repz
mov
mov
pop
pop
sbb
add
inc
dec
mov
sbb
sbb
into
mov
and
or
fcoml
push
or
sbb
arpl
imul
dec
push
add
add
mov
mov
add
mov
add
jbe
cmp
aaa
push
enter
mov
adc
mov
sub
mov
scas
out
nop
add
mov
pop
mov
hlt
outsl
mov
inc
xchg
testb
mov
cli
pop
jns
add
mov
faddl
add
icebp
sbb
add
add
xchg
loop
mov
rolb
mov
stos
test
mov
dec
sbb
and
mov
gs
pop
sub
add
lcall
mov
inc
xor
sbb
cld
lods
daa
inc
add
popl
dec
scas
ficompl
pop
scas
lcall
mov
mov
mov
inc
fnstcw
add
test
xlat
push
add
pop
lahf
sbb
test
add
fsubrl
addb
das
ss
es
sbb
sub
lea
out
or
mov
add
lcall
pop
bound
mov
ja
int
iret
mov
sub
add
cmp
push
add
subl
push
mov
add
ds
add
testl
mov
mov
shl
lods
mov
add
mov
lret
push
lock
mov
pushf
cmp
movsl
in
sub
sbb
lret
jg
loopne
mov
and
sub
sub
mov
jecxz
dec
ret
lahf
dec
lds
ret
mov
dec
popf
xor
add
mov
icebp
add
mov
cmp
and
mov
add
add
add
add
filds
and
mov
add
cmpsb
and
cli
sub
sub
inc
add
mov
pop
add
leave
pop
inc
add
out
ss
cld
mov
add
test
cmp
cwtl
data16
repz
adc
mov
add
lods
lods
pop
in
loopne
mov
add
jl
loop,pt
mov
sbb
xchg
loop
mov
lock
cmpsl
mov
out
aam
dec
push
pop
fiadds
les
pop
xchg
add
inc
add
and
mov
int
mov
cmp
add
iret
xchg
xchg
clc
test
add
outsl
out
and
sbb
add
mov
out
adc
stos
test
out
ja
mov
loope
test
pop
cmp
dec
mov
xchg
jnp
push
add
outsb
adc
repz
scas
mov
jp
push
dec
mov
data16
inc
bound
mov
scas
cmp
mov
es
adc
dec
jae
les
jp
add
mov
rolb
mov
ret
pop
mov
mov
loop
mov
push
xorl
mov
in
pop
add
mov
cmp
nop
add
data16
sub
movsb
fisubs
push
std
adc
add
xlat
shll
mov
daa
cmp
jns
rolb
mov
lods
push
repz
inc
fsts
mov
mov
movsb
loope
test
insb
pop
psubq
sub
add
mov
push
in
loop
mov
es
lcallw
test
int3
xor
mov
std
and
arpl
push
add
push
mov
rcll
popa
cmp
pop
xor
add
add
mov
lahf
ret
jle
add
add
mov
mov
push
mov
or
mov
add
add
lock
pushf
mov
shrd
pop
add
pop
les
imul
and
mov
add
mov
aaa
mov
add
cmp
and
mov
fcomps
dec
xchg
out
and
xchg
mov
cld
xchg
pop
jbe
in
ljmp
sbb
int
imul
mov
rorl
test
xchg
gs
out
inc
add
pop
movsl
pop
xor
mov
add
mov
add
dec
fdivl
in
pushf
stc
push
inc
add
cmpsl
or
sbb
roll
add
subl
dec
xor
mov
shr
mov
add
pusha
add
add
add
add
jo
mov
xchg
pushf
cwtl
test
fucomi
inc
lret
mov
add
mov
or
add
clc
jl
add
aad
or
push
outsl
int3
cmpsb
push
mov
add
mov
cmp
outsl
inc
stos
testb
inc
iret
shrl
repz
add
rolb
mov
xchg
es
stos
stos
es
out
sub
push
jl
add
mov
push
je
loop
mov
xchg
mov
sbb
add
dec
pop
inc
mov
xchg
pop
lea
out
add
pushl
add
or
fnstcw
mov
mov
mov
mov
lret
in
sub
mov
negb
inc
rolb
mov
out
add
mov
and
mov
add
lret
mov
add
push
lods
int3
dec
std
aad
pop
jae
push
xorps
les
dec
test
jnp
push
add
fstl
dec
mov
or
bound
mov
add
fstps
mov
aaa
data16
push
ss
cli
lods
fsub
iret
jg
add
cli
popf
mov
fists
cmp
mov
in
sub
mov
imul
fbld
mov
mov
sbb
push
popf
enter
jp
sahf
jg
shrl
int
imul
add
xor
mov
mov
mov
rolb
mov
int3
and
lods
ljmp
jecxz
cmc
fcmove
mov
adc
ret
mov
add
add
pop
dec
aas
les
ret
sahf
push
add
add
loop
mov
fdivl
xor
mov
in
add
and
mov
andl
cli
loope
cmpsb
out
sub
loop
mov
add
inc
xchg
imul
aam
add
jne
add
xchg
lock
xchg
add
pop
or
xlat
leave
pusha
add
add
pop
loope
es
sub
mov
call
pushf
cmp
jnp
in
inc
pop
in
push
add
pushf
pop
push
add
mov
or
mov
add
add
jne
mov
add
add
mov
add
ja
addb
mov
iret
or
cmp
mov
shll
gs
ret
dec
xor
jge
or
les
das
stc
dec
cld
pop
jnp
and
imul
cli
sub
bound
mov
and
mov
add
mov
push
imul
push
add
xor
insl
aaa
aam
lock
sbb
mov
xchg
dec
add
mov
mov
fsubs
or
icebp
add
mov
test
outsl
leave
jecxz
inc
add
movsl
xor
pop
fimull
pop
jnp
cmp
add
test
xchg
cmp
mov
mov
mov
imul
out
mov
mov
cs
leave
adc
xchg
pop
or
sub
xchg
mov
add
stos
loopne
mov
inc
push
add
dec
adc
icebp
add
mov
add
adc
add
sub
mov
add
jecxz,pt
push
stos
inc
add
jecxz
push
fcoml
push
in
movsb
out
jg
push
push
inc
add
mov
push
add
xchg
sahf
addb
pop
push
ficompl
or
add
enterw
fildl
rolb
mov
jmp
jl
push
xor
fsubl
or
add
mov
pop
cmpsl
or
add
sahf
mov
push
xchg
push
vpaddsb
jmp
pop
test
mov
dec
xchg
test
movsl
addb
fwait
xchg
popa
addr16
xor
pop
nopl
jnp
repnz
dec
fwait
adc
scas
movsl
xor
xor
mov
ljmp
mov
mov
mov
adc
sub
mov
push
add
je
sub
mov
mov
lret
jecxz
dec
cltd
out
orl
enter
dec
pop
adc
pop
or
dec
das
pop
lret
push
mov
push
cs
fcomps
mov
outsl
mov
mov
jne
fwait
mov
mov
pminsw
stos
int
cwtl
popa
fs
add
movsl
sub
in
add
lea
jmp
bound
mov
sub
sub
dec
ret
xorl
mov
pop
js
in
addb
addb
int
test
adc
mov
or
xchg
add
cmp
cmp
add
mov
mov
mov
push
movsl
xchg
mov
xchg
add
add
push
xor
mov
je
add
scas
loopne
mov
mov
fs
pop
cmc
cmc
mov
ljmp
mov
adc
ljmp
addb
mov
mov
add
cmpsb
es
insl
testl
mov
add
mov
movsl
ds
push
add
mov
add
out
fdivs
test
xchg
dec
push
out
mov
aas
rolb
loop
mov
add
add
mov
jo
mov
add
pop
dec
mov
mov
dec
stos
test
push
mov
fsub
dec
imul
cmp
inc
jno
sbb
cmp
or
jecxz
js
jmp
inc
pusha
add
xchg
lock
mov
sarl
fs
add
xchg
shr
push
or
xchg
lahf
mov
repz
loop
mov
aas
rolb
mov
pop
lcall
stos
mov
add
lret
sub
add
add
xchg
or
shll
mov
inc
loopne
mov
inc
sub
mov
and
mov
lods
xor
fdivl
add
mov
pushf
jo
mov
fistl
sub
sub
sbb
sbb
mov
lock
add
data16
movb
loope
inc
add
lods
test
xchg
adc
add
pop
jae
jmp
sbb
push
outsb
pop
adc
push
mov
and
mov
or
adc
mov
mov
add
add
mov
pop
or
xor
cltd
push
in
addb
or
leave
push
add
xchg
cmp
add
aaa
insb
addb
and
adc
add
mov
loop
mov
add
mov
mov
add
ret
sbb
lock
sbb
stos
cwtl
sbb
mov
out
sub
movsb
pushf
fdivl
add
inc
sub
out
popa
inc
cmp
jp
pushf
bound
mov
mov
xchg
addr16
jg
pop
es
add
mov
rorl
lock
mov
hlt
mov
mov
xchg
popl
push
add
in
or
mov
push
cmc
pop
cltd
xor
inc
jae
mov
shll
mov
mov
call
iret
setge
pop
and
jmp
inc
push
jp
dec
fs
insb
scas
dec
out
xchg
test
rcrl
adc
aas
push
inc
repz
mov
cs
mov
cmp
mov
das
es
mov
sbb
mov
add
in
push
lock
movsb
jecxz
add
mov
sub
mov
dec
add
mov
cmpsl
mov
mov
into
jg
out
add
add
mov
clc
xchg
mov
xchg
add
mov
loope
add
add
mov
cmpsl
jnp
ja
add
mov
and
mov
mov
mov
rcl
out
aaa
inc
popf
popf
xchg
add
cmpsb
dec
xor
mov
hlt
add
mov
cs
and
fwait
push
imul
movsb
out
stos
mov
add
mov
dec
push
xchg
cltd
inc
add
mov
add
fstpl
repnz
mov
add
jae
inc
add
cli
es
add
jae
and
add
add
hlt
push
add
shll
mov
jmp
inc
lahf
gs
rolb
fiaddl
push
mov
sub
mov
add
xchg
add
aam
push
pushf
mov
mov
movsl
cmp
add
mov
hlt
scas
jne
sub
push
sub
es
cld
loop
mov
mov
mov
jg
push
add
mov
mov
sahf
jle
xchg
dec
hlt
xchg
mov
test
mov
scas
js
pop
aas
mov
dec
test
mov
dec
add
add
add
push
add
shrl
add
outsb
push
jp
adc
mov
adc
pop
hlt
fiaddl
mov
add
cld
cmpsb
jle
add
add
sbb
add
rol
add
popa
push
add
jle
or
add
mov
xchg
in
dec
xor
jae
push
movsb
sub
mov
add
jge
movsb
insb
test
lret
mov
mov
mov
pushf
push
add
mov
and
imul
js
add
out
mov
lods
cmp
and
fistpll
xor
mov
in
add
pop
popa
lcall
xor
in
jno
repnz
mov
les
mov
or
add
jne
add
sbb
stos
fwait
outsl
fcomp
iret
cli
aam
popa
loopne
mov
mov
test
mov
sub
add
xor
fdivs
jbe
loopne
mov
dec
fwait
sub
dec
call
jno
out
mov
dec
movsl
adc
and
movsl
jg
add
xor
outsb
dec
and
mov
popf
and
mov
dec
push
mov
stos
mov
jbe
sub
fsub
and
enter
sub
pop
xchg
xor
sbb
ljmp
mov
add
add
push
or
add
movsl
addb
cmpsb
cltd
cmp
mov
jns
test
mov
mov
sbb
sbb
lcall
pop
pop
pop
cld
xchg
stos
movsl
bound
mov
cmpsl
fidivrs
add
addb
rolb
mov
jns
xchg
add
mov
xor
mov
arpl
add
mov
pop
sahf
sbb
xor
mov
jns
xor
mov
add
push
or
es
jae
mov
or
sub
add
mov
xchg
pop
daa
ja
int3
test
and
rolb
mov
add
mov
add
pushf
inc
lock
sub
mov
mov
add
lret
adc
es
sbb
add
sub
aaa
imul
shll
mov
popa
mov
push
push
fs
fldt
mov
dec
sub
cmc
mov
stc
dec
cltd
jmp
addb
jle
add
mov
stos
ja
jno
push
push
inc
xchg
mov
rcl
inc
add
cld
loop
mov
xchg
movsl
mov
add
stos
pop
xchg
mov
popl
mov
sbb
hlt
dec
push
insb
mov
add
fstpt
mov
mov
aad
popf
lods
xchg
addb
push
mov
outsl
lret
add
mov
sbb
stos
lock
unpckhps
sub
add
inc
sub
add
in
jne
and
sub
mov
add
mov
adc
cli
fsubrl
stc
mov
mov
add
sub
stos
jne
add
jge
add
add
add
push
insb
or
stc
push
or
cs
loop
mov
add
fisttpl
adc
mov
sub
or
dec
xlat
push
add
mov
test
dec
popa
jp
add
mov
jge
mov
fstpl
or
mov
mov
mov
cmp
add
test
fisttpl
dec
outsl
add
add
mov
mov
jge
jo
mov
mov
bound
mov
clc
mov
bt
enter
in
adc
jle
lock
pop
sbb
sub
push
jge
mov
mov
mov
xchg
adc
add
mov
cltd
pop
cmp
mov
pop
nop
add
mov
lret
sub
lock
negl
je
and
mov
addb
fdivl
xchg
cwtl
testl
add
bound
mov
cmpsb
mov
mov
fmuls
xchg
add
ret
out
push
push
xchg
xchg
lods
mov
mov
cmc
and
add
xlat
dec
daa
sub
sbb
mov
pop
mov
cwtl
popa
xchg
or
fidivl
sub
mov
and
insl
aam
pushf
cmpsb
adc
mov
ljmp
rcr
pop
and
stos
jo
mov
lock
inc
xchg
addb
jmp
inc
add
xchg
sahf
jns
lock
cmpsl
mov
movsb
into
pop
into
das
or
in
add
or
in
mov
lret
repnz
jecxz
cmpsb
adc
mov
mov
jne
add
movsb
outsl
test
es
add
enter
aad
xchg
xchg
out
xor
inc
add
leave
or
add
mov
add
add
addb
sub
int3
cwtl
adc
mov
mov
and
sbb
jle
xor
mov
dec
push
and
loope
and
add
loop
mov
leave
faddl
enter
add
std
mov
add
mov
add
pop
lsl
add
mov
push
jno
mov
mov
add
int
add
mov
in
and
push
sub
pop
lock
nop
add
mov
and
jle
scas
pop
out
adc
inc
les
movsl
bound
mov
movsb
cmp
add
or
popa
ja
push
lods
jge
add
js
es
dec
jmp
xor
xor
or
mov
add
addb
sub
in
mov
test
sbb
mov
into
add
add
sub
sbb
imul
repz
jmp
add
xchg
jp
push
push
addr16
mov
push
ja
mov
mov
xchg
stc
es
movsl
aad
cmp
mov
add
sbb
mov
sub
scas
adc
jnp
and
jbe
pusha
add
dec
mov
outsb
into
inc
add
outsb
push
insl
and
lret
mov
xor
jecxz
mov
aam
and
mov
pop
jbe
test
and
mov
pop
std
icebp
mov
xchg
mov
cmpsl
movsb
jno
out
adc
dec
mov
int3
daa
dec
call
push
xchg
out
or
xchg
out
jbe
cmp
rolb
mov
mov
shll
mov
xchg
xchg
fsubs
dec
xchg
mov
pop
xor
nop
add
jnp
add
and
mov
iret
mov
adc
sbb
pop
test
fdiv
lods
or
add
lcall
cmc
push
add
mov
jmp
jae
outsb
mov
in
mov
mov
roll
xor
push
rolb
mov
inc
add
scas
cmp
test
cmp
push
sbb
adc
mov
movsl
out
jnp
rolb
mov
je
pop
fbstp
jb
mov
mov
mov
add
cmpsl
into
negb
cmpsb
nop
add
subl
mov
and
frstor
mov
adc
mov
int3
sub
add
mov
jae
dec
cmp
inc
sub
and
fsubrl
add
mov
fdivs
pop
test
sub
adc
push
rolb
mov
es
cs
test
pop
pop
sub
mov
call
in
aas
jmp
int
add
add
inc
add
nop
add
and
mov
mov
xchg
mov
mov
add
pop
sbb
stos
hlt
rolb
mov
add
xchg
addb
sbb
stos
sbb
add
pushf
xor
mov
pop
imul
mov
sbb
mov
xorl
int3
sub
loope
movsb
lds
stc
setg
lea
mov
lahf
fst
jnp
scas
mov
xchg
or
adc
mov
add
push
dec
mov
adc
jno
mov
lcall
test
lcall
inc
add
push
vandnps
mov
flds
jle
jnp
pop
mov
mov
lds
push
ret
inc
add
add
mov
jmp
rolb
mov
xor
mov
pop
sbbl
sub
add
fcmovnb
add
fmuls
lret
cmp
mov
pop
xchg
mov
dec
mov
mov
push
add
mov
mov
add
mov
in
add
add
dec
addl
das
inc
add
mov
xlat
jecxz
in
push
push
inc
and
faddl
add
imul
mov
aas
cmp
fcmovnu
adc
mov
arpl
mov
jbe
fs
cmpsl
mov
dec
faddl
dec
fists
add
jbe
adc
add
dec
hlt
sub
and
mov
jb
mov
cmpsb
mov
mov
mov
dec
or
xlat
xchg
nop
add
fildl
add
mov
cmp
ljmp
cmp
ja
pop
mov
mov
add
pop
push
push
dec
insb
mov
sbb
add
das
stos
fldcw
hlt
movaps
jbe
add
mov
inc
dec
cmp
dec
js
or
jecxz
pop
orl
adc
mov
pop
push
xor
mov
fnstsw
sbb
and
mov
or
push
lret
mov
mov
mov
sub
mov
xor
jle
xchg
pop
test
jecxz
rolb
mov
dec
sbb
sub
mov
insb
push
sbb
xor
mov
cmp
add
sbb
rolb
fstpl
ss
adc
mov
mov
hlt
js
test
mov
and
mov
lcall
and
xor
and
sub
fldenv
sub
sub
dec
xlat
lret
lea
add
push
cltd
fsubs
emms
and
mov
insl
aaa
push
mov
mov
das
aaa
push
movl
aaa
popf
in
mov
repz
adc
mov
sbb
aas
jne
lea
inc
sub
aam
popa
ss
stos
cmp
or
sbb
mov
lret
cmp
ljmp
mov
sub
sub
mov
add
adc
mov
mov
add
inc
sti
xor
or
mov
sub
in
push
cmpsl
dec
lahf
mov
lods
cmp
add
mov
aas
aad
mov
addb
pop
mov
pushf
cs
sbb
cwtl
out
add
pop
lcall
add
and
fdivl
pop
and
mov
out
or
cmp
add
int
add
fmul
mov
add
dec
mov
test
cwtl
rolb
pop
xor
nop
add
add
add
sub
int
into
xor
xchg
xchg
je
das
add
mov
mov
dec
lahf
sub
sarl
cmc
and
add
xchg
ljmp
fidivl
mov
xchg
lods
push
mov
pop
cmp
dec
icebp
outsl
and
int3
push
das
xorl
fcoml
sbb
test
add
stc
int
lret
add
imul
inc
add
dec
flds
add
lret
adc
mov
add
jmp
cmp
test
add
sbb
add
lods
int
or
add
add
or
aad
ds
fidivs
nop
add
rolb
in
pop
or
add
mov
mov
ljmp
xchg
aas
dec
mov
add
add
mov
add
add
add
arpl
inc
jle
lods
or
loop
mov
sbb
xchg
hlt
rolb
mov
xor
cmp
adc
jp
es
push
pop
arpl
add
mov
add
sbb
std
addr16
cmpsb
mov
in
icebp
out
shll
cwtl
adc
push
sbb
mov
mov
pop
inc
mov
adc
cmpsl
jnp
mov
fisttps
adc
das
movsl
pusha
add
lahf
insb
xchg
push
movb
sbb
mov
add
loop
mov
add
mov
popf
cltd
pop
sub
cmp
es
and
mov
mov
or
bound
mov
stos
inc
fmuls
mov
push
repz
add
jno
addb
or
mov
add
imul
lret
sub
ret
lods
dec
clc
cwtl
mov
and
xor
push
addr16
mov
jp
mov
sub
aas
mov
mov
or
mov
push
aad
dec
sub
mov
and
mov
mov
mov
shrl
aad
mov
icebp
adc
fnsave
inc
cmp
mov
mov
cmpsl
inc
add
rolb
mov
mov
jecxz
movsl
les
hlt
mov
out
mov
pop
and
mov
dec
fs
add
scas
inc
cmpl
and
lock
das
pop
jle
ficomps
adc
push
adc
mov
arpl
mov
insl
aad
cmp
pop
push
dec
lods
or
sbb
add
outsb
repnz
not
sarl
pop
xor
mov
mov
inc
sbb
repz
sub
mov
add
sbb
mov
clc
aad
and
addr16
mov
dec
xchg
lcall
fistps
dec
jmp
and
mov
testb
or
sub
xor
inc
xchg
dec
mov
dec
cmp
popf
or
data16
sbb
loop
mov
mov
lock
add
iret
dec
inc
add
fld
add
sub
ret
in
in
add
mov
mov
mov
fisubs
lds
mov
mov
aas
or
nop
add
mov
xor
add
faddl
add
mov
adc
nop
add
mov
in
pop
sti
dec
fs
mov
rolb
mov
add
scas
fidivrl
out
cmp
mov
movsb
test
add
aad
dec
ss
push
jmp
add
xchg
push
stos
nop
add
decb
int3
pop
clc
xor
mov
call
add
add
push
and
mov
js
and
mov
mov
inc
cmp
popa
xor
add
lcall
lcall
add
aad
add
mov
mov
add
pop
fidivrs
add
xchg
xchg
out
add
add
sub
fistps
adc
mov
mov
and
icebp
pop
xchg
pop
popa
negl
push
cmpsl
jecxz
imul
sbb
add
es
jo
mov
push
dec
or
add
push
mov
add
mov
sti
jmp
add
mov
jge
add
add
jle
add
roll
pop
sahf
clc
loopne
mov
dec
jno
popf
push
mov
dec
push
repz
aas
push
dec
sbb
sbb
mov
sbbl
jp
mov
icebp
mov
add
cmp
pusha
add
pop
and
mov
jp
addb
ds
add
aas
cmpsb
xlat
out
sahf
xor
mov
xor
jo
mov
push
fst
and
dec
adc
fistps
add
and
mov
cmp
xchg
mov
add
mov
xchg
addb
jp
xor
or
les
popa
cs
add
or
loopne
mov
add
adc
mov
add
jg
inc
pop
jns
jo
mov
sbb
mov
repnz
lret
out
or
and
cltd
out
je
sub
cli
mov
add
pop
add
mov
mov
push
in
or
movsl
cmp
mov
repz
adc
imul
xor
and
add
mov
add
scas
imul
and
mov
ret
and
mov
sbb
cli
pop
add
mov
inc
stos
int3
adcl
push
add
cltd
sbb
add
loope
and
adc
movsl
xor
mov
bound
mov
pop
inc
xor
jl
fcoml
stos
outsl
inc
add
add
fistpll
test
jmp
mov
push
out
mov
xchg
iret
sub
and
jns
loopne
mov
xorl
cmp
jge
jecxz
sub
lret
xor
stos
mov
mov
mov
lret
xchg
sub
add
xor
add
aaa
jp
rolb
mov
mov
xchg
sti
lret
cmp
mov
add
xor
xor
mov
std
sti
xchg
mov
loope
or
add
add
sarl
sbb
adc
xor
cmp
and
xchg
add
lods
lock
add
xor
mov
aam
nop
add
mov
pop
push
jb
mov
xchg
add
add
cs
sbb
add
add
sbb
insb
addr16
xchg
mov
jmp
imul
add
pop
data16
add
add
mov
and
mov
sub
sahf
dec
addb
and
mov
xor
mov
pushf
out
mov
mov
add
nop
add
iret
cli
and
add
sub
push
adc
add
mov
cmp
add
mov
loopne
mov
jg
ret
aam
les
cld
mov
sub
add
mov
lea
xor
jno
lret
xor
mov
stos
push
ja
insl
mov
pop
add
add
and
mov
mov
repz
jmp
ret
daa
or
mov
add
cs
es
fcmovnb
lret
mov
jo
mov
inc
jnp,pt
les
loop
mov
cmp
sub
pusha
add
mov
xchg
or
out
add
and
imul
add
add
sub
jmp
dec
lods
xchg
je
imul
push
sbb
add
mov
mov
mov
add
outsl
cmp
mov
xor
mov
pop
jb
mov
sbb
int
mov
mov
mov
loop
mov
test
fistps
lea
stos
push
jmp
enter
mov
xchg
dec
mov
addb
pusha
add
lock
add
or
add
mov
jl
add
mov
sub
push
mov
inc
push
mov
and
bswap
aad
mov
out
repnz
xor
mov
sti
inc
pop
lcall
cmp
mov
jne
dec
arpl
pushf
mov
arpl
and
add
mov
and
xor
mov
es
inc
mov
sub
and
shrl
inc
mov
jb
mov
adc
fs
jmp
push
popf
mov
inc
add
je
add
aaa
lods
cmp
add
add
add
mov
fsubr
rolb
mov
add
nop
add
or
aam
jne
aad
add
inc
icebp
arpl
movsl
xchg
arpl
mov
mov
xchg
dec
cmp
pop
mov
xor
lret
lock
push
fwait
mov
pusha
add
adc
mov
scas
sub
inc
sbb
and
enter
add
frstor
mov
dec
mov
push
jmp
add
mov
icebp
mov
data16
push
sub
pop
mov
mov
popa
mov
aad
push
push
stc
rolb
mov
stos
data16
add
mov
adc
mov
mov
jne
les
mov
add
push
add
out
jmp
jae
add
push
into
inc
imul
add
add
ret
rcrl
inc
mov
in
dec
adc
dec
enter
xlat
sbb
xor
pop
fisubrs
xor
aaa
jecxz
fs
inc
dec
inc
cmpsl
jp
faddl
push
add
mov
mov
jbe
mov
shl
stos
rcll
mov
lahf
pop
movsb
jb
mov
or
call
sti
aad
jns
insl
pop
sti
add
mov
lcall
mov
outsl
aas
lahf
push
js
es
mov
cmp
add
pop
xor
mov
dec
sti
out
sub
jae
and
mov
add
mov
jle
dec
cmp
jp
add
popf
adcl
jns
aas
xchg
rcll
movsl
mov
mov
dec
test
add
arpl
lods
mov
mov
mov
mov
das
in
je
pop
pop
jmp
add
push
icebp
in
or
cld
pop
add
mov
push
ja
adc
mov
mov
pop
js
add
mov
mov
dec
jle
push
dec
push
cmp
add
dec
aam
fwait
sub
pop
movsl
sub
jg
imulb
add
leave
cmpsl
out
push
stos
mov
fstl
mov
inc
add
out
imul
vhsubpd
pushf
fldt
push
sub
mov
pop
inc
cmpsb
test
in
push
add
add
adc
mov
jle
sti
fsubr
lea
mov
dec
mov
jle
push
or
out
mov
mov
ja
cmpsb
imul
add
add
add
fnstenv
iret
xchg
add
push
rcll
jecxz
nop
add
scas
jecxz
leave
jns
clc
repnz
jo
mov
sub
add
rolb
mov
mov
inc
jl
es
add
add
arpl
lahf
fwait
pop
les
dec
inc
add
inc
add
mov
xor
pop
aas
int
add
mov
in
out
jbe
dec
mov
add
pop
inc
add
mov
mov
xchg
push
add
adc
push
add
mov
in
inc
add
xor
mov
pop
repnz
fxch
lret
in
jecxz
add
cmpsl
inc
or
add
cld
mov
push
add
jbe
add
in
xor
jno
sbb
loopne
mov
add
int
aaa
push
fdivl
clc
adc
mov
cmc
xorl
cmp
addr16
add
mov
jp
addb
adc
mov
sub
or
lock
popa
pop
lcall
cwtl
cmp
mov
add
shll
mov
imulb
das
cmp
addb
xchg
pop
xor
cmc
inc
mov
test
je
xchg
addb
mov
mov
add
in
mov
sub
add
jno
add
add
scas
rolb
xlat
movb
add
rolb
mov
inc
add
hlt
xor
mov
lahf
push
add
cli
les
mov
add
in
sub
jle
dec
mov
pop
pop
cld
xchg
push
add
loope
inc
add
fiaddl
dec
adc
push
je
sbb
adc
mov
loopne
mov
mov
mov
mov
mov
cli
jns
aad
roll
pop
dec
adc
inc
cmc
fwait
and
or
mov
into
mov
fucomp
out
mov
rolb
mov
cli
call
dec
es
mov
mov
sbb
movsl
sub
push
add
and
mov
je
shll
scas
iret
into
out
repnz
cmpsl
lods
adc
add
mov
xchg
inc
add
rcll
imul
sbb
sbb
inc
std
sub
jno
or
out
or
jae
sbb
inc
in
push
loope
xchg
loopne
mov
mov
xor
mov
mov
mov
inc
add
hlt
lods
mov
pushf
adc
mov
mov
mov
pop
jno
cmp
and
mov
add
mov
add
add
pop
scas
fnstsw
sti
mov
ss
rolb
lock
add
dec
sub
adc
add
mov
mov
rorl
mov
add
fcmovnb
add
mov
mov
or
mov
mov
fcomps
lea
add
push
sub
xchg
add
mov
cmp
sub
pusha
add
bound
mov
mov
xor
iret
pop
int3
push
lds
jbe
or
pusha
add
sub
pop
push
jecxz
mov
and
mov
mov
add
sbb
and
xchg
push
or
sbb
addr16
stos
sbb
xor
mov
jns
jbe
and
mov
jle
mov
push
xlat
sub
addb
add
in
xchg
inc
loope
push
xor
jbe
mov
cmp
push
jne
push
push
push
add
negl
stc
pop
stos
xchg
lds
scas
popl
mov
add
insb
mov
stc
fnstenv
out
add
stc
not
pop
jo
mov
xor
mov
and
les
sti
or
cmpsl
jp
pop
xor
ss
popf
and
mov
dec
cld
dec
std
sbbl
mov
aam
lea
popf
xchg
mov
addb
xchg
dec
jo
mov
insl
inc
ds
aas
repz
in
lods
movsl
pop
out
lret
add
imul
pushf
or
enter
stos
xor
fldln2
push
data16
jne
add
sahf
lcall
xor
dec
sub
jmp
add
mov
inc
cmp
jp
pushf
das
addr16
in
push
clc
xchg
mov
leave
addr16
pop
fiaddl
std
jo
mov
mov
add
inc
add
icebp
dec
stos
lds
push
jns
jno
xchg
adc
mov
push
test
inc
pushf
add
nop
add
sbb
icebp
popa
jge
push
stos
pop
push
popf
jne
xor
add
xchg
ret
mov
inc
adc
xor
mov
add
lods
sbb
mov
pop
rolb
mov
in
sbb
fwait
push
jb
mov
aad
mov
pop
in
pop
and
inc
mov
jmp
aam
inc
add
cmp
add
mov
add
sub
js
cmc
mov
fwait
lret
push
loop
mov
cmp
test
cli
fidivs
movsl
sbb
mov
mov
adc
mov
cmp
mov
fiadds
cmp
add
mov
add
pop
mov
mov
scas
icebp
jae
and
loop
mov
jb
mov
in
inc
bound
mov
cmp
xchg
push
add
and
movsb
jg
fwait
jnp
add
in
xchg
pop
add
mov
add
sub
add
dec
sbb
add
sub
gs
mov
dec
dec
mov
jns
testb
insb
inc
mov
and
loop
mov
dec
ret
pop
lahf
dec
mov
in
adc
adc
jo
mov
or
pop
out
add
mov
jne
cmc
xor
mov
stos
loop
mov
btr
adc
icebp
mov
addb
jo
mov
jmp
fbstp
jb
mov
mov
sub
lods
das
xchg
sbb
sbbl
add
mov
jle
ret
stc
scas
dec
add
arpl
add
fmuls
cmovg
jno
inc
add
add
cmp
jg
xchg
out
insl
ja
push
mov
inc
jge
roll
in
das
or
add
cmp
mov
fwait
aas
repz
pop
mov
sbb
dec
push
mov
aad
mov
mov
leave
cwtl
pop
lret
leave
pushf
add
mov
in
iret
inc
mov
iret
out
mov
push
mov
mov
out
sti
mov
mov
add
mov
cmp
push
imul
jne
add
clc
ja
imul
mov
cmpsl
cmp
xchg
xlat
cltd
and
pushf
or
and
std
pop
xor
mov
insl
insl
push
gs
and
scas
mov
xchg
ret
inc
scas
and
and
mov
or
test
aad
outsb
xchg
stc
mov
dec
mov
lea
mov
ret
aaa
sbb
push
pushf
out
test
imul
mov
add
femms
mov
int3
mov
add
in
fwait
inc
cltd
mov
repz
out
test
sub
test
xchg
int3
ljmp
aad
push
addr16
idivl
test
mov
mov
add
and
mov
mov
add
mov
pushf
or
cltd
sti
ljmp
add
push
add
mov
xchg
insl
cmc
dec
sub
jge
outsl
mov
add
or
ret
jae
leave
lcall
movsb
or
adc
mov
mov
ret
das
xchg
mov
add
adc
mov
std
or
jno
aad
lds
test
add
add
mov
jbe
xchg
mov
inc
lret
nop
add
ljmp
add
mov
and
mov
js
pop
fcomps
xor
enter
out
mov
cmp
loope
popa
cmpsl
mov
add
push
addr16
push
stos
mov
dec
ds
idivl
rcrl
out
or
pop
sub
add
xor
ss
in
insb
out
jg
inc
movsl
adc
cli
dec
and
mov
cmp
add
mov
mov
jb
mov
dec
sbb
push
dec
xchg
imul
lret
es
movsb
addb
jo
mov
rcl
mov
inc
add
sub
adc
mov
mov
stos
fstpl
xor
es
fistpll
jno
out
push
mov
mov
fwait
pop
fcmovnb
add
in
add
jo
mov
mov
sbb
mov
add
push
add
mov
loopne
mov
push
add
and
adc
cmpsl
fdivp
xor
mov
mov
mov
aad
cmp
mov
inc
lods
jns
sbb
add
in
and
sti
outsl
daa
xchg
dec
and
mov
addr16
jg
outsl
sub
add
dec
mov
mov
mov
jns
sub
ljmp
lret
add
mov
lcall
push
leave
jo
mov
jle
iret
les
mov
jb
mov
and
jecxz
add
lret
mov
mov
insb
and
mov
add
sbb
es
mov
cmp
les
and
mov
in
test
mov
push
add
std
mov
ret
push
add
add
adc
xchg
clc
inc
call
mov
and
add
add
push
pop
jecxz
jl
xchg
cmp
mov
add
inc
into
lods
pop
std
js
sub
addr16
lahf
daa
mov
jb
mov
push
xchg
add
jne
les
hlt
mov
add
addr16
fsubrp
aam
jge
mov
mov
add
sub
dec
fcom
add
pop
adc
hlt
ret
jecxz
jp
cmovno
enter
fsubrs
addr16
sub
roll
add
jae
scas
inc
add
push
add
add
mov
nop
add
mov
mov
outsb
lock
jno
mov
jb
mov
push
inc
lds
ds
and
cmpsl
mov
mov
add
mov
mov
mov
test
cmp
and
add
sbb
xchg
add
mov
cwtl
mov
mov
jle
sub
mov
inc
add
xchg
add
out
add
mov
and
mov
mov
sub
jecxz,pn
adc
roll
ljmp
pusha
add
mov
mov
mov
mov
imul
or
mov
stos
loop
mov
incl
mov
cmp
or
add
mov
jns
jo
mov
int
cmp
es
mov
ljmp
nop
add
pop
and
ljmp
lock
iret
iret
stos
popf
xchg
add
lods
insb
jl
push
pop
xchg
mov
pop
fs
mov
mov
hlt
mov
mov
mov
jae
cmp
mov
aad
mov
xchg
push
mov
adc
scas
in
dec
out
je
jns
xor
mov
push
adc
mov
loope
inc
inc
push
mov
js
mov
inc
jg
inc
in
add
into
movsb
sub
sub
mov
jae
pop
xchg
add
mov
add
cmp
pushf
jo
mov
jno
addb
inc
mov
fisubl
gs
xor
mov
mov
dec
pop
sub
pop
mov
dec
mov
loop
mov
pusha
add
ret
xor
xor
out
pop
js
in
nop
add
mov
add
test
add
test
and
jb
mov
mov
outsb
xchg
push
sbb
dec
pop
mov
push
add
int
int
push
popf
les
mov
cmpsb
add
push
add
adc
mov
or
push
add
add
out
inc
add
add
stos
fnstsw
test
into
cld
ja
adc
rcrl
addr16
test
adc
mov
dec
gs
dec
into
cmp
lods
gs
cmp
rcl
repnz
cmp
mov
add
mov
icebp
xchg
iret
les
adc
mov
in
push
sbb
sub
mov
or
or
add
lcall
movsb
test
lds
clc
mul
add
adc
push
mulb
add
out
fstpl
cwtl
jb
mov
inc
jge
add
push
add
mov
xor
mov
mov
fcmovb
addr16
push
mov
pop
mov
cmp
and
mov
lret
insl
push
add
mov
in
fstpt
add
dec
mov
add
mov
add
jge
out
add
mov
in
es
or
add
mov
mov
cmp
push
push
push
mov
sub
mov
pop
into
cmc
sbb
cmp
dec
sub
rolb
mov
loope
jecxz
push
add
addb
and
adc
mov
fisubrl
sbb
mov
push
lret
sbb
jl
add
cwtl
mov
stos
insb
fdivr
mov
sub
lret
jb,pn
mov
add
mov
daa
fnstenv
jg
cli
sub
cmp
stos
leave
add
pop
dec
nop
add
mov
mov
adc
mov
in
imul
out
out
repnz
add
add
add
sbb
mov
mov
ljmp
adc
adc
cmc
scas
movsl
jp
cltd
addr16
jl
cmp
dec
xchg
or
loop
mov
mov
lds
in
inc
and
into
push
jnp
ficompl
push
sti
adc
add
mov
add
add
ljmp
inc
add
pop
pop
jg
aam
jmp
add
mov
ret
inc
data16
int3
push
push
dec
out
jno
sub
xlat
repnz
sub
cmpsl
fdiv
xor
mov
sti
push
add
add
mov
dec
sub
sti
pop
lcall
loope
cmp
dec
push
addb
push
add
mov
mov
cs
in
mov
add
lock
add
addb
sub
outsb
inc
pop
in
in
sub
lahf
fwait
jbe
add
add
mov
sub
mov
inc
loop
mov
fcoml
insl
pop
imul
lcall
out
add
stos
in
push
enter
ja
insb
fisttpll
add
movsl
daa
mov
mov
fs
dec
fisubl
add
mov
jbe
and
mov
iret
mov
or
fs
adc
mov
add
add
aam
xchg
mov
mov
mov
dec
jp
pop
scas
push
pop
mov
mov
dec
or
repnz
mov
add
fidivs
pop
xchg
cmp
shll
add
mov
add
ret
push
add
add
mov
mov
xchg
ljmp
jne
jb
mov
jno
sbb
add
add
mov
mov
ret
jecxz
jg
add
mov
mov
add
leave
ss
jge
add
push
sub
mov
mov
add
and
mov
add
dec
xor
mov
cmp
mov
testb
leave
xchg
mov
mov
xchg
jp
jae
stos
mov
sub
jle
mov
fldt
stos
cmp
jae
repnz
mov
add
push
mov
or
add
aam
sub
jl
dec
push
jge
sub
add
xchg
adc
mov
mov
sbb
mov
mov
call
and
clc
add
sub
imul
in
or
dec
sahf
mov
add
addb
adc
mov
fildll
xor
mov
mov
call
mov
mov
in
add
push
dec
data16
inc
pop
iret
jle
mov
pop
aad
dec
insb
loop
mov
xor
mov
mov
xorl
sub
aaa
push
pop
inc
pop
addb
addb
xchg
pop
mov
xor
cli
pop
cmp
dec
fs
or
mov
sub
sbb
mov
fs
mov
dec
push
cmp
int3
mov
mov
das
push
test
add
popf
daa
pop
jae
adc
mov
or
addr16
loop
mov
pushf
rolb
mov
cmp
add
loop
mov
sbb
imul
xchg
jp
inc
dec
sub
addb
ljmp
add
jmp
xor
jbe,pn
pop
jae
xchg
in
mov
add
xchg
into
inc
inc
mov
xor
stc
xorl
js
dec
enter
rolb
mov
push
into
push
pop
int3
jo
mov
in
xchg
add
test
jp
in
fisttps
xor
jo
mov
add
pop
mov
popa
outsl
out
add
sbb
inc
add
adc
mov
imul
mov
add
jbe
insb
cld
pushf
cmpsl
push
or
mov
into
test
fsubs
add
xchg
fnsave
jl
jmp
js
icebp
out
add
inc
add
aad
out
pop
mov
add
push
cmpsl
repz
mov
mov
das
xchg
jle
or
push
push
call
subl
lret
xchg
mov
mov
add
mov
pop
or
adc
mov
and
and
mov
mov
push
add
cmpsl
mull
add
dec
add
loope
mov
icebp
lock
je
mull
adc
mov
add
inc
add
mov
mov
fsubrl
mov
sahf
rolb
mov
addl
jp
adcl
pop
call
movsl
push
bound
mov
hlt
outsb
cmp
inc
aas
popa
imulb
dec
fimuls
in
sub
andnps
rcll
add
inc
add
cmp
imul
movsl
xchg
ret
rolb
mov
movsl
pop
inc
mov
ljmp
pop
inc
fs
pop
jns
mov
add
outsb
pop
mov
aaa
jmp
jae
add
cmp
mov
add
scas
out
scas
jae
adc
mov
xchg
add
pusha
add
lods
test
sub
dec
fcmovu
push
addb
dec
iret
jmp
mov
cmc
xchg
sbb
pop
mov
out
scas
aas
sbb
lods
cwtl
popa
icebp
xorl
add
repz
inc
popa
stc
loopne
mov
dec
out
insb
mov
adc
adc
inc
add
imul
xchg
enter
ljmp
aas
js
mov
add
mov
add
xor
cmp
push
out
pop
lret
add
addb
jne
and
mov
enter
cs
xor
mov
hlt
pop
leave
sub
mov
jp
mov
hlt
jge
add
xor
add
push
add
gs
cmpsb
push
dec
and
lods
test
mov
mov
sbb
xchg
in
inc
sub
and
mov
or
and
out
xchg
add
pop
imul
fistpl
popf
xchg
cmpsb
dec
fdivrs
push
add
mov
add
or
sub
mov
addr16
loopne
mov
inc
add
sti
push
loope
lcall
mov
pop
mov
add
add
xchg
sarl
ret
nop
add
call
mov
daa
sbb
add
mov
inc
sar
cmpsb
adc
fisttps
ja
mov
sub
dec
inc
ss
adc
cmp
mov
daa
stos
jo
mov
into
push
jnp
pushf
mov
sahf
jp
lahf
sbb
push
leave
mov
mulb
mov
lds
sahf
mov
movsb
pusha
add
add
push
cmpsb
arpl
add
in
push
mov
cmp
scas
arpl
cltd
push
or
stos
sub
and
mull
mov
mov
icebp
int
fwait
adc
mov
rolb
mov
in
shl
add
add
push
jge
cltd
test
mov
pushf
out
sbb
mov
repz
mov
push
repz
add
add
das
nop
add
add
repz
out
dec
and
mov
clc
cltd
pop
shll
jg
pop
inc
xor
arpl
and
movsb
in
push
test
jbe
xchg
add
pop
jno
add
sbb
add
mov
call
pop
jge
dec
or
xor
cmp
repnz
cmp
or
mov
ret
daa
fnstcw
push
or
mov
fsubrl
xchg
stc
sbb
push
mov
mov
mov
push
inc
add
fs
push
aas
popa
in
add
mov
dec
inc
add
or
add
aad
or
leave
scas
dec
pop
icebp
sbb
mov
stc
loop
mov
dec
popa
sti
xor
mov
repz
sub
mov
cmp
push
int3
jbe
adc
fmuls
cli
adc
mov
and
xor
mov
mov
lret
jle
popa
mov
add
push
inc
adc
adc
iret
cmpl
out
cli
jmp
add
add
sbb
scas
and
inc
scas
rolb
mov
or
aad
sbb
in
mov
mov
add
data16
cmpsl
movsl
xchg
xor
mov
adc
mov
stos
pop
xor
cltd
jge
or
add
fwait
in
jo
mov
in
mov
add
mulb
xchg
out
sbb
out
adc
mov
jle
dec
pusha
add
xlat
scas
nop
add
lcall
push
mov
cmp
ret
addb
adc
mov
add
popf
mov
cmpsb
sub
cs
rolb
mov
mov
add
mov
mov
jle
mov
imul
xlat
ss
pop
mov
cli
outsl
in
add
jb
mov
mov
hlt
mulb
inc
fidivrl
xchg
addb
test
jmp
int
inc
push
add
bound
mov
xor
jp
pop
xor
mov
add
sub
push
or
add
add
inc
pop
mov
out
les
into
dec
mov
add
fxch
cmp
addb
sub
scas
jl
cmpsb
dec
push
in
iret
test
mov
fwait
cmp
call
push
add
scas
xchg
mov
mov
das
xlat
sub
lret
pop
out
sbb
scas
movsb
fcmovnb
sbb
ffreep
stc
mov
jge
dec
filds
dec
leave
fwait
inc
add
cmp
aas
mov
fstp
inc
add
insb
sbb
or
movsb
cmp
inc
mov
mov
mov
shll
sub
mov
inc
hlt
lret
xchg
adc
push
out
cs
les
lahf
je
rolb
mov
out
jp
add
lcall
sbb
dec
stos
cltd
aad
sbb
add
mov
mov
and
into
mull
jbe
dec
xchg
enter
add
and
mov
iret
sbb
jge
addb
cwtl
cmp
add
mov
mov
test
test
aaa
and
xor
mov
cmp
div
add
add
inc
clc
mov
pusha
add
dec
sbbl
mov
mov
aad
adc
sub
jo
mov
repz
stos
cli
xchg
test
loope
push
ljmp
out
cmp
mov
mov
pusha
add
test
fdivs
rolb
mov
xor
mov
in
push
hlt
mov
mov
daa
bound
mov
adc
add
add
fidivs
addb
out
dec
loop
mov
fisttps
stos
and
les
dec
cmp
pop
pop
pop
and
mov
mov
xchg
mov
cmp
xchg
cmp
ret
test
add
mov
addb
fs
inc
inc
lcall
cli
xchg
int
add
pop
cmp
add
sbb
mov
pop
das
test
mov
pop
cld
push
data16
adc
mov
outsl
inc
inc
inc
add
mov
clc
dec
dec
mov
jp
insb
or
inc
add
mov
add
add
mov
add
adc
inc
jne
add
sub
psubusw
mov
inc
mov
mov
rolb
dec
mov
mov
dec
lret
pop
fisttpl
add
pop
in
sub
cltd
pop
test
add
sbb
leave
jp
dec
and
addb
jp
imul
hlt
mov
inc
addb
lret
in
divl
add
fldenv
adc
add
xchg
jmp
pop
pop
add
mov
scas
pop
out
sub
add
add
lcall
pop
fcomps
mov
sarl
push
mov
out
sub
sub
sub
add
stc
inc
add
fnstcw
scas
inc
inc
data16
add
loopne
mov
or
jne
loop
mov
mov
add
cmp
cmp
jae
sub
add
cmc
in
arpl
mov
mov
frstor
push
mov
add
push
hlt
mov
adc
mov
pop
nop
add
lea
add
outsl
test
dec
orl
add
cmp
pop
or
push
push
cmpsl
cwtl
pushl
add
add
mov
lea
lret
xchg
clc
cltd
cmpsb
lahf
jle
mov
sbb
rolb
mov
mov
and
dec
jecxz
daa
dec
aad
dec
push
add
aam
sbb
clc
jb
mov
mov
inc
lcall
add
lods
stos
sbb
insb
in
xor
aam
test
dec
dec
xchg
mov
fstl
fcmovnbe
add
add
mov
adc
inc
inc
test
cmp
add
add
xor
mov
xchg
add
mov
mov
add
fs
call
jmp
pop
int3
lods
lret
outsl
add
mov
mov
fstpt
mov
and
mov
add
pop
shll
and
mov
lea
jno
lahf
xchg
inc
dec
cmp
add
mov
mov
mov
lock
loop
mov
add
lret
mov
add
int3
nop
add
mov
outsl
test
jp
test
rolb
mov
adc
mov
pushf
pop
mov
xchg
sbb
or
push
jmp
add
mov
ja
sbb
sarl
pop
push
mov
stc
pusha
add
pop
mov
add
add
add
inc
idivb
inc
ljmp
dec
sub
xchg
pop
jns
pop
fildll
push
ja
call
es
pop
mov
clc
mull
mov
add
insb
in
add
in
popf
mov
fsubs
add
xchg
add
xchg
and
mov
xchg
add
add
xchg
add
add
add
loop
mov
lret
pop
push
jne
add
mov
jge
add
insl
rolb
mov
mov
add
addb
mov
mov
xor
mov
add
cltd
imul
mov
ret
add
mov
fists
out
mov
outsb
out
sub
add
aam
pop
movsb
xlat
js
mov
outsb
mov
in
repnz
sbb
mov
mov
stc
pusha
add
mov
add
jae
add
aas
inc
cmp
mov
data16
test
add
outsb
sbb
sub
add
ss
cld
addb
enter
and
mov
loopne
mov
cltd
out
dec
jb
mov
mov
push
add
into
cmp
jmp
lods
mov
add
dec
or
and
mov
loop
mov
in
jae
pop
inc
cmp
mov
aad
pop
fdivrs
gs
pop
inc
pop
adc
jecxz
addb
jecxz
cmp
sbb
mov
mov
mov
sti
stos
rolb
mov
ss
sbb
cmp
movntq
dec
test
jge
sub
cmp
jmp
or
arpl
js
ret
xchg
and
cmp
add
lock
sbb
rolb
mov
mov
adc
pop
mov
add
mov
aas
jle
enter
jp
dec
iretw
jg
add
adc
cmpsb
jl
xchg
imul
pop
clc
inc
icebp
fwait
cmc
sbb
jecxz
call
mov
in
xchg
sub
push
xlat
cwtl
ficoms
mov
sub
adc
add
lock
sub
add
mov
test
lahf
add
mov
loope
scas
leave
sbb
je
push
pop
pop
pop
adc
jnp
add
mov
popa
cmp
loopne
mov
popf
loope
add
lret
test
pop
add
mov
lods
sub
jle
jns
xchg
add
mov
imul
clc
mov
add
jbe
add
cmpsb
and
mov
cmpsb
add
mov
mov
addb
inc
addb
arpl
test
movsl
mov
mov
pop
mov
or
jbe
loopnew
mov
fdivl
mov
and
mov
mov
mov
fdiv
ficoms
sahf
add
mov
dec
and
scas
and
mov
or
enter
jns
inc
jl
pop
inc
add
and
add
mov
mov
ret
or
add
lea
mov
in
xor
mov
mov
mov
enter
push
xchg
add
mov
leave
push
fistpll
adc
mov
mov
clc
push
push
filds
mov
jp
and
mov
sti
mov
jmp
mov
mov
mov
outsl
jecxz
out
dec
sub
or
dec
cmp
sbb
sbb
mov
push
out
jle
lret
inc
jbe
push
pop
mov
pop
adc
jne
out
int3
shl
jecxz
int3
jne
ljmp
cmpsl
stos
sahf
and
mov
adc
inc
add
mov
imul
mov
dec
jecxz
rcll
inc
add
and
ds
insb
mov
add
mov
stc
negb
jp
fiaddl
mov
frstor
add
mov
xorl
js
push
mov
add
jecxz
test
jnp
mov
jbe
push
or
xor
loopne
mov
das
push
add
stos
xorl
sub
sti
adc
mov
push
push
jo
mov
mov
mov
push
add
mov
sub
dec
mov
xchg
mov
mov
add
mov
add
mov
aad
addb
mov
mov
mov
pop
jno
cld
bound
mov
xchg
sbb
imul
jg
cmp
stc
icebp
out
push
add
xor
mov
sbb
popf
inc
jg
add
mov
movsl
rolb
fisubl
push
or
adc
int
add
mov
stos
scas
dec
test
gs
lret
mov
sub
xchg
scas
sub
cmp
lock
mov
xor
sbb
int3
push
cmpsb
leave
xlat
mov
mov
enter
mov
rolb
lea
fisubrl
bound
mov
fisubs
mov
mov
addb
push
imul
ja
add
ljmp
inc
mov
mov
inc
sti
outsb
nop
add
add
fwait
and
mov
in
and
mov
daa
fisubrs
test
pop
sbb
add
adc
mov
add
loope
into
jnp
add
subl
inc
pop
push
xor
xchg
jne
arpl
ljmp
stos
jnp
cmp
mov
rolb
movsb
cli
imul
add
test
std
xchg
cwtl
sbb
add
push
add
push
repnz
xor
mov
loopne
mov
mov
dec
popl
add
cmpsl
mov
repz
lahf
lods
sub
sub
mov
data16
add
mov
cmp
in
jl
cmp
jne
sub
inc
js
loope
movsl
mov
es
add
in
gs
jno
int3
lahf
add
add
stos
les
pop
adc
rcl
mov
sbb
cmp
ss
mov
mov
lds
push
mov
push
clc
popw
fadd
add
mov
mov
mov
insl
adc
mov
mov
add
jnp
push
adc
sub
mov
mov
mov
sbbl
dec
cli
jns
rcl
fcoml
call
mov
rolb
mov
call
cmp
xchg
or
mov
mov
pusha
add
fwait
gs
je
pop
push
ds
neg
mov
jg
std
cmpsl
cmp
add
mov
mov
add
es
stc
pop
mov
sbb
add
mov
gs
sub
addb
clc
sub
lods
sub
jg
add
out
mov
into
add
mov
mov
add
mov
mov
xchg
lret
add
xor
pop
mov
xchg
cmp
add
pop
rolb
mov
add
sub
mov
into
jbe
repnz
fimull
fwait
xor
loopne
mov
inc
adc
mov
jb
mov
imul
mov
mov
sbb
pusha
add
pop
or
mov
mov
insl
xchg
mov
mov
xchg
push
sub
lock
outsl
out
ret
add
icebp
addb
loopne
mov
mov
xchg
and
pop
xlat
test
arpl
pop
cmp
add
push
add
xor
adc
add
outsb
std
fprem1
xchg
add
mov
mov
hlt
xchg
les
lret
jl
xchg
inc
insb
dec
mov
rolb
mov
mov
and
jbe
add
adc
push
in
cmc
mov
inc
je
add
mov
or
sbb
imul
hlt
loop
mov
popa
inc
test
add
mov
mov
js
mov
insb
fs
xor
mov
add
fwait
adc
aaa
jl
lcall
lea
jecxz
jb
mov
out
add
jno
aaa
loope
rolb
cmp
nop
add
mov
addb
adc
lods
jl
mov
inc
push
enter
int
aad
dec
loop
mov
ret
mov
lods
fbstp
push
rolb
mov
dec
or
add
out
lods
add
popf
mov
push
add
add
dec
xchg
add
mov
je
pop
sbb
mov
and
mov
and
iret
pop
addb
pop
hlt
cmp
rol
mov
add
dec
push
gs
add
ret
xchg
hlt
or
add
dec
jb
mov
push
dec
sbb
test
lock
aam
jl
cwtl
pop
sub
mov
mov
mov
mov
mov
mov
gs
pop
enter
je
xchg
mov
fistpl
mov
xor
rcl
dec
pop
mov
aad
bound
mov
and
mov
adc
add
sub
sbb
pop
fwait
mov
nop
add
xchg
lds
xchg
daa
xlat
fadds
or
push
lcall
movsb
cwtl
push
add
push
f2xm1
add
mov
out
test
xchg
inc
inc
pop
jp
orl
sub
mov
jne
lcall
xchg
add
cli
push
imul
addr16
stos
xchg
add
mov
mov
add
mov
xchg
cli
pushf
movsl
mov
add
fldenv
add
add
add
jo
mov
mov
mov
add
xchg
sbb
mov
mov
xchg
lods
adc
int3
pop
pushf
into
push
mov
lahf
lods
fcmovbe
movl
mov
xor
testl
sbb
fistpll
xor
jns
or
xchg
out
or
test
test
cmc
xorl
mov
stos
sti
mov
adc
ds
fwait
pop
in
sbb
cmp
xor
mov
mov
add
push
add
std
push
or
dec
lods
cmpsb
inc
les
pop
adc
mov
cmpsl
pop
addr16
mov
dec
repnz
add
cmpsl
push
je
pop
cmp
sti
and
mov
aam
das
xor
add
jo
mov
cmp
add
in
pop
xchg
iret
pop
and
mov
mov
add
mov
test
mov
add
sub
push
push
fs
lea
aad
add
bound
mov
out
jns
adc
add
add
ljmp
add
or
rcll
mov
mov
lret
out
imul
add
out
jecxz
mov
roll
addr16
xchg
push
icebp
xchg
cs
dec
int3
js
mov
repnz
adc
mov
add
add
mov
push
dec
sub
dec
cmp
insl
insl
xor
hlt
in
inc
ret
cmp
xchg
ja
sbb
add
movsb
cmp
and
add
or
pusha
add
dec
mov
xchg
mov
add
add
and
mov
sbb
mov
popf
or
stc
dec
les
data16
jge
cmp
cmp
or
mov
mov
and
mov
mov
pop
xlat
add
mov
dec
rolb
mov
aas
sub
jo
mov
and
mov
add
sarl
aas
or
mov
add
jnp
add
imul
mov
push
xchg
xchg
or
mov
mov
ds
outsl
aad
out
loope
fildll
daa
addb
mov
mov
add
cwtl
hlt
xor
mov
scas
pop
add
es
add
add
mov
mov
cwtd
pop
adc
pop
and
jle
add
mov
movsl
sub
cmp
cmp
push
in
sbb
sub
add
ja
and
mov
das
sarl
cwtl
out
aad
adcl
lods
add
cld
bound
mov
test
cmp
cs
add
sub
mov
xchg
sbb
or
ja
cs
sub
lcall
mov
jle
push
mov
jno
and
mov
mov
outsb
js
jg
or
mov
inc
and
mov
mov
pop
or
dec
or
cmp
pop
add
mov
pop
xchg
lcall
jnp
mov
inc
mov
sub
mov
mov
fstl
inc
xchg
add
js
lret
insl
mov
jp
sub
rolb
and
mov
ja
sbb
add
rolb
mov
add
jecxz
jge
add
and
adc
les
adc
mov
fld
xchg
cmp
sub
mov
sahf
sub
popa
or
mov
xchg
jae
jnp
push
mov
and
mov
add
add
pop
adc
mov
mov
cwtl
ds
out
jmp
jbe
popl
jg
cmc
fldenv
jns
out
xchg
add
mov
add
aas
jp
mov
mov
je
jns
sbb
dec
mov
add
xchg
add
pop
mov
cld
mov
cmc
sbb
pop
stos
push
xor
xchg
gs
add
and
das
or
mov
mov
jle
nop
add
push
dec
inc
sti
out
sub
adc
mov
xchg
mov
rcll
xlat
sldt
mov
imul
mov
scas
movsl
scas
adc
add
add
mov
add
inc
jns
in
lock
add
fdiv
mov
add
add
mov
mov
repz
inc
fstpl
add
mov
and
add
je
add
mov
pusha
add
insl
mov
inc
add
mov
mov
pop
adc
mov
mov
std
add
mov
mov
sub
add
mov
jg
dec
pop
out
adc
mov
add
jnp
sbb
adc
mov
repz
mov
daa
repz
mov
add
jl
lret
mov
mov
sbb
add
add
add
add
dec
imul
out
jle
leave
loop
mov
stc
std
or
repnz
xor
jmp
jg
adc
xor
in
out
adc
mov
fldcw
jb
mov
pop
test
add
add
xor
cmp
add
addr16
push
fsubs
adc
mov
xchg
add
mov
mov
hlt
mov
sbb
inc
xor
xlat
inc
add
lods
pop
movsb
cmp
push
addb
or
mov
ret
pusha
add
shl
pop
rolb
addb
xchg
xor
mov
in
mov
int3
jmp
inc
mov
sub
and
jns
test
cmp
rorl
add
rolb
mov
add
mov
inc
xor
add
lcall
je
stc
dec
imul
in
cs
inc
add
jb
mov
push
cmpsb
push
add
lods
mov
xor
mov
add
xchg
add
mov
pop
add
add
add
add
pop
add
scas
and
add
add
add
out
rolb
adc
push
addr16
andl
je
dec
rol
mov
add
add
xor
mov
in
and
push
xchg
in
and
sar
rolb
mov
rcrl
mov
es
pushf
mov
je
add
lret
loope
insl
push
stos
mov
xor
mov
lods
jle
adc
orl
jae
lock
add
int3
movsb
adc
clc
xor
ja
clc
popl
scas
enter
add
push
add
cmp
add
add
mov
mov
mov
addb
out
sub
add
cs
fildll
rolb
mov
xchg
push
or
pop
cmp
cltd
mov
cmpsb
jno
ds
push
or
mov
inc
mov
int3
outsl
mov
add
mov
xlat
leave
fs
shll
mov
xchg
add
mov
cltd
sahf
leave
xrelease
out
dec
aaa
in
subl
hlt
push
mov
shll
cmp
cmp
jp
adc
add
loopne
mov
mov
sbb
dec
rolb
mov
in
fbld
mov
outsb
add
mov
jb
mov
adc
mov
add
xchg
or
add
aam
aaa
lret
xor
mov
add
add
cwtl
dec
cli
call
add
mov
in
push
adc
sbb
xor
hlt
push
jnp
cmp
rcl
insb
test
mov
test
cmp
je
add
ret
pop
jle
adc
out
cltd
nop
add
out
das
ret
imulb
js
rolb
fists
insb
cmp
add
stos
cmp
outsb
xchg
lret
xor
mov
add
jns
mov
mov
push
addb
jne
roll
add
mov
mov
mov
push
push
leave
cmp
add
mov
aam
push
add
mov
add
scas
loopne
mov
mov
mov
push
add
out
add
sbb
add
adc
in
out
shll
enter
stos
sbb
mov
fstl
add
adc
mov
out
into
stc
ret
mov
mov
dec
or
popf
mov
mov
mov
cli
hlt
sbb
movsl
fldenv
add
mov
pop
inc
aaa
dec
pop
xorl
mov
enter
leave
jge
dec
iret
imul
cpuid
add
cmpsb
popa
lea
add
cld
pop
mov
mov
cmp
ljmp
pop
pop
push
mov
rorl
sahf
test
mov
loop
mov
xchg
in
inc
test
push
dec
add
mov
add
push
mov
leave
pop
lcall
mov
addb
ja
xorl
push
add
repz
call
xchg
pop
test
repz
xchg
fwait
data16
imul
rolb
mov
mov
jp
jne
sbb
add
mov
pop
lret
cli
js
rolb
mov
add
inc
fdivrp
sub
cld
ficompl
enter
fwait
cmp
cwtl
inc
inc
add
mov
add
inc
mov
xchg
cmp
xor
mov
cmp
xor
mov
inc
add
jge
jp
test
jae
add
add
mov
mov
mov
xor
mov
add
ret
xchg
loope
dec
pop
mov
rolb
pop
pop
cld
push
pop
aaa
rcrl
jae
and
mov
lds
pusha
add
jae
mov
jge
xchg
in
add
xchg
adc
lahf
xchg
mov
into
cmpsl
pop
cs
add
lods
scas
es
add
push
cli
and
mov
add
mov
lret
pop
stos
push
add
dec
jg
push
outsb
jg
dec
mov
out
inc
add
mov
ret
add
fs
cmp
pop
jmp
mov
push
dec
cmp
add
xchg
into
add
or
add
mov
mov
add
aas
jo
mov
and
mov
pusha
add
lret
add
jp
pop
gs
pop
outsl
dec
and
mov
les
mov
mov
movsl
lods
sbb
xchg
add
addr16
add
lahf
pop
mov
lods
out
addb
sti
cmpsl
xlat
dec
ret
rcl
add
mov
cmpl
adc
mov
inc
jg
dec
push
add
sahf
in
gs
movsl
loopne
mov
add
sar
inc
mov
mov
mov
pop
mov
test
inc
add
jae
xchg
add
pop
and
mov
mov
mov
inc
xchg
xor
add
mov
jg
mov
popa
pop
jne
xor
dec
out
sti
mov
loop
mov
enter
add
jb
mov
arpl
add
jns
push
add
inc
add
mov
in
mov
inc
add
add
xor
stc
xor
fdivl
mov
jb
mov
fcmovne
int
add
push
lods
mov
mov
cmpl
lcall
add
mov
fs
sub
add
adc
aas
jbe
add
or
mov
inc
mov
int3
cmp
imul
sub
out
mov
mov
mov
popa
ljmp
mov
rorl
mulb
addb
lds
aad
sbb
shll
lahf
xor
mov
arpl
mov
nop
add
in
mov
addb
fs
push
cmp
lcall
mov
pop
dec
addb
dec
ljmp
and
fsubrl
fbstp
mov
nop
add
push
dec
aas
and
mov
add
fnstcw
push
test
mov
loop
mov
pusha
add
lods
pusha
add
jmp
mov
dec
jbe
ret
dec
cmpsb
xchg
call
pop
out
lea
fsubrl
notl
repz
xchg
add
add
sub
test
movsl
bound
mov
nop
add
popa
sar
addr16
fs
lods
test
jbe
mov
lods
mov
mov
std
mov
add
add
lock
push
dec
addb
mov
mov
dec
jne
int
daa
mov
scas
cmp
push
jne
cmp
or
cmp
add
test
pop
loope
mov
bound
mov
icebp
sarl
jae
sub
push
xor
push
out
mov
ja
and
sub
mov
sub
out
pmulhw
icebp
push
add
adc
xlat
add
outsl
mov
fmull
sbb
dec
add
cmc
dec
cmp
sbb
xor
cmp
jns
hlt
lock
or
add
addb
and
and
xor
roll
add
aas
or
lahf
fisubrl
popf
stos
cli
cmp
rolb
stos
pop
iret
and
movsl
sub
add
insl
sti
dec
inc
leave
fdivl
pop
push
jns
mov
sahf
dec
loopne
mov
nop
add
ss
cmp
in
mov
fiadds
mov
les
cmp
xchg
cwtl
out
add
lods
repnz
or
add
xchg
cmp
fldt
bound
mov
jns
or
test
out
add
mov
test
sahf
hlt
push
cmp
fldl
int3
aaa
test
jbe
adc
enter
repnz
add
or
adc
mov
add
jbe
inc
add
add
add
pop
sbb
stc
addb
inc
ss
stos
mov
xor
stc
call
cmc
in
lods
ret
adc
mov
adc
decb
adc
mov
mov
mov
add
mov
mov
addb
mov
xor
aam
mov
xchg
mov
ja
aas
shll
mov
inc
ljmp
into
imull
sbb
adc
addr16
cwtl
dec
push
stos
dec
and
sbb
mov
cmp
popl
fadds
mov
outsb
insb
leave
jp
leave
mov
mov
and
mov
or
add
aaa
js
mov
cmp
test
pop
mov
adc
mov
xlat
sbb
add
inc
add
lods
sbb
mov
mov
mov
xchg
cs
and
mov
lock
sub
mov
gs
mov
mov
frstor
cmpsb
inc
add
mov
add
adc
rolb
mov
repz
mov
outsb
xchg
les
out
outsl
xor
test
aaa
add
lret
push
add
jmp
dec
push
inc
jmp
xor
ret
mov
arpl
fmuls
lea
cmp
aam
add
addl
repz
add
std
inc
jecxz
stos
jmp
mov
pop
cmpsl
out
nop
add
pop
inc
cli
hlt
stc
test
inc
repz
ret
or
mov
ret
loopne
mov
aad
ja
pop
fidivrl
push
push
mov
pop
popf
aam
dec
stos
popf
mov
xchg
mov
ja
push
add
sti
mov
add
ja
int3
je
pop
push
add
dec
pop
sbb
popf
mov
jg
bound
mov
add
mov
add
loopne
mov
mov
repz
or
push
lock
mov
adc
mov
popa
mov
pop
xchg
enter
mov
adc
or
mov
ss
sub
mov
xor
mov
imul
loopne
mov
stos
xchg
aad
leave
cmpsb
sti
pop
adc
mov
loope
addb
mov
mov
add
cmp
mov
nop
add
add
add
mov
mov
push
insl
and
xor
mov
mov
cs
xor
stc
inc
add
jno
xchg
inc
rolb
mov
jge
push
push
ljmp
das
out
sub
scas
inc
xchg
cmpsl
lods
sbbl
add
mov
add
add
push
jmp
add
add
add
add
inc
xchg
cwtl
rolb
mov
add
xlat
cmpsl
lock
lret
dec
adc
mov
mov
pop
adc
pop
xchg
out
dec
aam
insl
iret
mov
add
pop
loope
add
add
mov
add
je
add
xchg
jae
xlat
data16
pusha
add
and
jno
add
xchg
pop
sbb
ljmp
fcomp
std
js
adc
mov
adc
out
es
int
inc
mov
sbb
imul
or
fs
dec
push
and
mov
sbb
insb
iret
ds
dec
jl
dec
mov
dec
or
add
jo
mov
and
cmpsb
sahf
shrl
stc
add
mov
std
xchg
mov
push
outsb
mov
pop
test
jae
cwtl
push
sbb
mov
add
popa
ffreep
aas
add
mov
mov
mov
mov
push
dec
fstpl
or
mov
mov
push
add
dec
adc
add
imul
sub
mov
mov
push
push
inc
incl
testb
scas
pop
inc
add
repnz
mov
cmc
mov
xchg
inc
aaa
xor
cs
test
loopne
mov
add
mov
pop
dec
loope
inc
mov
dec
rolb
mov
add
sub
js
jns
add
mov
jnp
xor
adc
dec
popf
rolb
push
adc
addb
addl
push
lods
and
mov
jg
arpl
add
das
dec
shr
les
inc
add
pop
aam
cvtdq2ps
ja
mov
jo
mov
loopne
mov
mov
les
jmp
or
popa
jp
xchg
mov
out
movsl
js
add
jecxz
in
fmull
cmp
xor
mov
mov
mov
popa
sahf
shll
pop
or
mov
int
clc
inc
push
pop
push
mov
mov
mov
add
push
je
add
ret
or
xchg
add
lgs
arpl
mov
call
leave
jb
mov
movsb
sub
xchg
pop
add
mov
mov
lds
into
out
add
aaa
cld
or
test
jne
roll
mov
repnz
outsb
das
xchg
das
imul
jg
cmp
ss
pop
lret
fcompl
jg
mov
cmp
mov
xchg
out
adc
mov
mov
popf
mov
xchg
mov
and
int
scas
xor
mov
mov
mov
add
or
enter
add
push
mov
mov
add
add
leave
mov
popa
push
xlat
es
sub
repz
add
add
cmpsl
pop
testl
mov
push
int
rolb
mov
push
sub
rolb
mov
ficompl
lods
test
add
mov
add
sbb
repnz
xchg
loopne
mov
push
add
adc
out
dec
aas
sti
cltd
dec
xchg
sbb
dec
mov
outsl
and
mov
dec
mov
ja
pop
pop
fisubs
adcl
inc
int3
jns
fadds
xchg
add
mov
add
jg
pop
add
sti
pminub
ret
frstor
mov
xor
ds
dec
lock
rolb
mov
outsl
sbb
push
xor
mov
mov
jns
pop
loope
add
mov
mov
add
daa
xor
lahf
cmpsb
les
inc
std
lcall
push
sub
jge
cmpsl
arpl
rolb
mov
xchg
sub
cmp
nop
add
rcll
cli
in
xlat
pop
xchg
mov
mov
popa
insb
mov
push
prefetchwt1
mov
jg
pop
outsb
fidivs
daa
test
add
mov
es
push
icebp
test
push
jecxz
add
mov
add
lcall
mov
xorl
inc
or
xor
xchg
add
and
cmp
sbb
in
mov
add
leave
adc
dec
popa
test
jno
shrl
sub
lods
cltd
pusha
add
add
sub
push
add
in
pop
push
in
jge
lods
push
mov
mov
mov
std
adc
mov
push
movsb
movsb
inc
mov
add
shll
add
mov
cs
add
mov
sub
mov
enter
pop
xchg
push
xor
mov
xor
ret
push
pushf
into
movsb
insb
mov
jp
stc
mov
push
mov
jbe
mov
dec
outsb
into
jmp
lods
fsubs
repnz
mov
mov
repz
imul
out
fstl
cmpsl
pop
je
jmp
int
xchg
mov
lods
sub
loopne
mov
test
rolb
jmp
lds
xchg
pusha
add
mov
add
out
fmuls
pop
rolb
cld
movsb
rolb
or
pop
add
add
popf
movsl
ja
and
mov
loop
mov
bound
mov
inc
adc
mov
or
add
das
sub
mov
mov
add
jo
mov
leave
loope
mov
ret
fildl
dec
adc
sbb
out
adc
cmc
mov
mov
and
add
mov
mov
inc
and
add
stos
sahf
and
xor
addb
xchg
aam
pop
inc
add
outsb
fmuls
loop
mov
or
add
repnz
dec
push
clc
push
inc
dec
and
push
lahf
sbb
push
add
add
out
sub
insl
lea
pop
inc
fldcw
mov
xor
push
js
add
fucomip
loop
mov
pop
testl
js
fwait
xchg
fdivp
lock
mov
add
cmp
add
les
sbb
and
mov
movsl
push
lret
scas
jg
add
arpl
mov
mov
ja
faddl
push
xchg
cmc
fdivrp
push
lret
popa
push
mov
stos
jno
add
stos
mov
mov
cmpsl
scas
addl
das
push
test
mov
loop
mov
add
and
add
add
mov
adc
jmp
inc
add
cmp
cmp
mov
popa
icebp
jg
jl
push
pop
lret
jb
mov
push
jmp
or
outsl
js
add
adc
fdivl
jb,pt
mov
and
mov
mov
mov
add
mov
push
sub
int3
jg
adc
mov
inc
push
dec
stos
or
iret
nop
add
addb
adc
mov
mov
pop
daa
enter
fwait
sti
leave
adc
out
scas
jle
add
adc
add
in
xor
sub
mov
add
add
imul
adc
hlt
aaa
add
add
sbb
repnz
adc
add
sbb
inc
pop
jae
dec
rcll
mov
and
mov
ret
pop
nop
add
int3
pop
mov
jne
jb
mov
ret
nop
add
sub
and
mov
mov
insl
mov
fnstsw
add
iret
mov
pop
mov
mov
mov
insb
paddusb
loope
in
stos
push
add
sub
mov
pop
cmpsl
jno
add
add
jae
xchg
icebp
jns
fwait
jns
add
inc
add
std
fidivl
ficompl
or
test
imul
mov
das
cwtl
loop
mov
sbb
popa
in
mov
stc
and
mov
add
inc
mov
inc
jp
or
pop
and
mov
push
push
xor
ficoml
add
gs
fwait
in
rolb
push
cmpsb
fsqrt
xor
add
mov
fistpl
mov
mov
add
jl
rolb
jle
inc
add
stos
cmpsl
xor
mov
stos
cmp
out
pop
test
jg
cmp
sub
and
mov
ljmp
pop
push
mov
add
nop
add
rolb
mov
mov
mov
mov
jmp
inc
add
mov
add
mov
mov
movsl
add
add
stc
jb
mov
mov
es
mov
pushl
outsl
mov
das
movsl
insl
cmp
mov
lret
sbb
movsb
movsl
dec
sbb
nop
add
jo
mov
iret
rolb
leave
push
in
in
push
mov
mov
lret
sbb
aaa
int3
mov
jne
inc
mov
sahf
xor
mov
sbb
and
mov
sub
outsl
xchg
fistl
outsl
stos
inc
add
mov
add
add
cmpsb
xor
mov
xor
mov
rolb
mov
add
je
add
add
mov
lock
js
mov
stos
jmp
pop
add
mov
mov
mov
pop
subl
cmc
test
add
pop
fistpll
jb
mov
inc
and
mov
add
aas
jns
test
scas
addb
dec
movsb
aad
add
pushf
jne
and
mov
sbb
add
add
imul
add
popf
int3
das
sbb
jle
add
shrl
imul
sbb
gs
and
mov
lret
dec
push
add
mov
jns
negl
pop
push
pushw
adc
addb
mov
add
jmp
sbb
add
mov
wrmsr
add
cld
jns
stos
cwtl
movsb
mov
add
fadds
add
pop
xlat
sbb
ret
repnz
or
push
aaa
jmp
adc
mov
bound
mov
insb
mov
cs
jb
mov
lds
push
dec
adc
mov
add
fidivl
ss
lods
in
xchg
pushf
lds
ret
xchg
imul
xchg
add
mov
incb
and
out
popf
push
sti
into
rep
fcompl
out
sti
add
add
jg
jae
in
add
aaa
pop
mov
add
push
mov
mov
add
clc
call
push
test
add
mov
bound
mov
add
and
mov
jle
and
fistpll
lea
push
fimull
mov
add
pop
out
push
add
add
addb
aas
les
lock
call
sub
add
inc
add
std
sub
mov
scas
into
cltd
movsl
popa
fdivrl
pop
pop
sub
pop
sub
and
mov
inc
icebp
cwtl
mov
lods
cmpsb
fs
mov
add
and
mov
fdivrs
in
arpl
add
adc
pushf
jbe
adc
mov
andl
mov
dec
xor
mov
mov
in
repnz
mov
add
rolb
sub
lds
stc
mov
ljmp
cld
cs
rolb
mov
push
jb
mov
scas
cld
lahf
repz
mov
mov
les
repnz
aam
add
cmp
mov
add
les
sub
mov
add
clc
das
add
push
add
aas
mov
add
dec
js
sub
mov
aaa
loopne
mov
pushf
cmp
pop
mov
int
add
ljmp
mov
rolb
mov
dec
rcll
add
in
lds
and
mov
in
call
testl
push
add
stos
addb
push
repz
adc
mov
mov
add
lock
scas
data16
and
mov
mov
add
scas
cmp
fxch
mov
mov
or
rcl
mov
lods
mov
test
ficoml
and
xor
mov
mov
add
pop
mov
mov
add
mov
imul
aad
push
or
daa
ss
sbb
ret
push
outsl
addb
int3
pop
ret
inc
add
test
in
cmp
jle
add
clc
sbb
xor
stos
push
cs
dec
dec
fiaddl
jp
pop
decb
push
aaa
inc
leave
xchg
jmp
mov
add
fwait
jne
add
mov
je
repz
outsl
pop
icebp
roll
mov
mov
sti
insl
mov
in
jns
add
pop
hlt
sbb
fsubrl
add
mov
mov
push
xor
mov
cmc
ja
inc
mov
inc
sub
sbb
adc
mov
dec
mov
popa
dec
cmp
add
jecxz
add
mov
mov
mov
cmpsl
and
add
out
into
das
ljmp
fucomp
or
inc
jae
nop
add
fbstp
xchg
mov
add
out
stos
gs
ljmp
cmp
xor
mov
cmc
add
add
mov
pushf
xlat
mov
and
movsb
mov
inc
and
imul
cmpsb
jnp
cltd
movsb
loopne
mov
add
ja
pusha
add
mov
xor
push
scas
addr16
add
pop
fs
stos
inc
cmp
mov
fisubl
push
add
jg
pop
adc
aad
xchg
fistpl
mov
add
cmp
mov
scas
jmp
add
adc
mov
add
mov
mov
or
out
in
add
add
popf
shll
out
jo
mov
testb
mov
popa
iret
jg
xchg
push
ljmp
iret
sbb
in
xor
mov
scas
mov
mov
xor
xchg
cwtl
gs
stos
aas
mov
or
mov
push
jge
mov
and
add
mov
mov
sub
add
fiadds
add
ret
int3
push
mov
mov
xor
push
add
lret
rolb
mov
push
addb
test
ret
test
cld
icebp
pusha
add
arpl
cmp
ret
inc
leave
adc
pop
xchg
jne
dec
jns
jge
mov
addb
sarl
out
ret
pushf
outsb
inc
lods
addb
cli
xorl
loope
mov
mov
xchg
push
dec
addb
pop
insb
outsl
add
mov
lcall
add
lea
add
inc
add
ljmp
and
xor
mov
mov
loop
mov
jmp
addb
call
and
mov
or
xor
add
inc
add
notl
std
lcall
cmpsb
imul
movsl
pop
push
dec
mov
mov
daa
jl
push
pop
das
or
adc
repz
leave
js
jne
aas
or
mov
jne
xchg
imul
aaa
or
push
dec
or
cwtl
push
mov
and
add
sbbl
test
mov
dec
mov
mov
and
add
insl
imul
mov
mov
push
jl
loop
mov
icebp
addb
fldl
sub
cmp
cld
cs
repz
lret
pop
sub
add
insl
inc
push
ret
push
mov
add
dec
notb
out
lret
leave
insl
jnp
inc
dec
movb
add
and
add
test
notb
sub
mov
add
pop
push
into
inc
push
add
inc
mov
adc
sub
loopne
mov
popa
imul
es
in
fwait
aad
mov
jae
add
icebp
xchg
mov
xchg
jge
and
mov
sub
jp
push
arpl
aaa
dec
lahf
sahf
push
add
add
and
sbb
or
xor
mov
mov
inc
loopne
mov
dec
rolb
aam
add
test
std
lcall
jg
jp
sbb
rolb
imul
fnstenv
xor
add
in
pop
idivl
rolb
mov
add
pop
inc
pop
jnp
mov
mov
ret
dec
rcl
ds
add
sub
mov
sbb
mov
add
mov
mov
mov
pop
pop
add
mov
ret
icebp
mov
push
mov
add
test
xchg
add
jg
mov
push
sbb
in
out
pusha
add
inc
pop
mov
xchg
mov
mov
xor
push
sbb
cmp
inc
jl
and
mov
lahf
adc
mov
into
or
lea
gs
add
and
adc
or
in
push
push
add
adc
mov
add
call
dec
addb
clc
outsb
dec
inc
xchg
add
xchg
enter
adc
mov
movsb
jmp
and
rorl
hlt
int3
stos
jnp
addr16
inc
dec
jge
adc
mov
pop
loop
mov
repz
test
xor
loop
mov
dec
mov
ss
aaa
push
push
addb
add
cmc
in
ds
fst
aam
dec
push
or
dec
mov
add
pop
mov
or
dec
sarl
mov
mov
mov
rolb
mov
add
in
cmp
in
lret
jmp
push
ret
les
mov
inc
xchg
add
insl
jp
movsb
cli
xchg
inc
lock
push
cmp
jno
jle
push
pushf
nop
add
test
inc
push
add
mov
fucomi
fdivl
lock
jmp
pop
or
sub
adc
loopne
mov
arpl
mov
hlt
mov
fwait
or
jmp
xlat
cld
clc
fldcw
sar
xor
mov
nop
add
mov
add
jbe
aaa
push
xchg
lcall
and
mov
call
mov
jge
or
mov
mov
dec
das
sbb
pop
lods
mov
lret
repnz
push
idivl
push
gs
and
mov
mov
mov
pop
cs
jae
jne
in
int
cmp
add
mov
fstpt
pop
sahf
push
pop
rolb
mov
je
inc
add
xor
mov
pop
xchg
inc
xchg
out
addb
adc
mov
mov
mov
mov
in
sbb
aas
fs
pop
hlt
maxps
mov
add
addb
cld
mov
test
add
push
sub
flds
push
and
or
add
mov
sub
add
mov
js
out
mov
cmp
icebp
jp
adc
xchg
es
mov
xor
pop
neg
jmp
sub
mov
les
adc
mov
add
mov
outsl
push
add
out
pop
and
xchg
jbe
xchg
inc
neg
repnz
add
and
aas
and
add
movsl
jns
adc
mov
lods
cmp
add
add
daa
xchg
sub
rolb
pop
cli
cltd
mov
mov
pop
dec
inc
stc
push
jns
jns
ffreep
out
shl
movsl
aaa
cmp
cmp
mov
mov
mov
sbb
mov
sub
add
int3
call
stos
sbb
inc
mov
insb
das
fidivs
fwait
jge
add
shr
cmpsb
ret
fcomp
aam
mov
xchg
cmp
inc
adc
mov
aam
inc
or
xchg
addb
xchg
sub
and
cwtl
xlat
and
arpl
movsb
lods
xor
test
add
mov
add
je
lods
aaa
and
idivb
mov
cmp
push
mov
mov
add
mov
mov
nop
add
add
xor
mov
rep
outsb
pusha
add
jle
sbb
mov
add
mov
mov
push
rolb
mov
add
add
adc
add
nop
add
adc
dec
out
iret
lcall
cmpsl
pop
cs
xchg
popf
movsb
xor
enter
and
inc
imul
mov
cmpsl
shrl
lahf
xchg
add
sahf
clc
sbb
sarl
adc
mov
add
ss
orl
add
inc
inc
xchg
in
and
mov
add
add
jns
dec
je
hlt
sbb
dec
push
sub
fiaddl
push
add
xchg
add
loopne
mov
add
pop
aad
nop
add
es
add
test
jl
mov
xchg
aaa
stos
movntps
push
add
mov
mov
fistps
add
lock
add
sbb
inc
sbb
cmpsl
pop
jecxz
fs
mov
test
lahf
dec
mov
enter
mov
testb
addb
lods
mov
xchg
loopne
mov
push
add
ljmp
mov
jno
and
rcll
mov
sbb
pop
and
mov
lds
add
mov
stos
addb
jo
mov
xorl
data16
mov
xchg
cmp
sahf
cld
fcoms
iret
xor
mov
pop
cmp
push
add
jo
mov
add
test
sahf
jl
add
and
fneni(8087
add
arpl
add
ja
jno
fisubs
imul
inc
or
int
inc
add
xor
test
sti
push
mov
ljmp
aas
imul
push
add
pop
lahf
xchg
lcall
adc
fiadds
nop
add
dec
add
mov
nop
add
sbb
fdivrl
loope
add
xchg
fsts
xchg
xchg
jmp
int3
aam
jp
dec
aam
sbb
jecxz
cmp
or
movsb
dec
sub
mov
add
xchg
imul
jnp
popa
or
xor
mov
sbb
les
subl
sbb
add
in
dec
and
inc
inc
xchg
or
pop
inc
lock
in
cmp
jnp
les
jg
jbe
and
mov
add
mov
mov
rolb
sub
addb
ja
mov
sbb
arpl
add
sub
dec
cmp
popf
int3
or
fcoms
jne
loope
add
pop
inc
insl
sbb
mov
mov
icebp
mov
and
jmp
inc
add
outsl
addb
push
ret
inc
add
pop
cmc
popa
push
add
shll
xchg
addb
pusha
add
in
add
mov
scas
xchg
aad
movsl
mov
and
add
shll
ja
ljmp
lea
sbb
pushf
lods
dec
sbb
xlat
ds
add
icebp
cltd
jecxz
aad
in
bound
mov
mov
xchg
lcall
mov
lahf
nop
add
insb
add
mov
push
addr16
imul
add
mov
cmp
fdivrs
mov
sbb
dec
push
in
lea
pop
mov
icebp
cmc
push
ds
pop
pop
imul
jae
fsubs
les
add
add
sbb
popa
fisubrs
or
addb
movb
lret
xchg
movsb
insb
push
add
jno,pt
mov
mov
ljmp
xchg
adc
mov
sahf
jnp
cmp
sbb
fwait
inc
add
ret
xchg
or
jae
test
add
sub
mov
xchg
scas
cld
aad
add
add
cmp
add
cld
stos
out
popf
push
or
mov
aaa
sbb
add
add
mov
lahf
xchg
test
sub
lods
stos
push
in
add
and
inc
xor
mov
es
inc
or
mov
xor
mov
cld
cld
lock
into
push
loope
retw
rcrl
mov
mov
fisttpll
mov
add
add
mov
push
or
ss
sub
add
add
cmp
mov
xor
xor
push
into
rcll
call
mov
fmuls
divb
xchg
cmp
jbe
inc
mov
in
mov
sti
lea
xchg
fidivl
push
inc
dec
insb
xchg
push
jbe
mov
fwait
dec
sub
pop
pop
xor
cmp
add
addb
xchg
xchg
pop
adc
mov
push
icebp
daa
sub
lahf
inc
in
mov
inc
inc
icebp
loopne
mov
lahf
cmpsl
sti
xchg
add
dec
sub
je
add
fcomp
popf
daa
mov
call
mov
sub
add
dec
in
jle
dec
mov
loope
lret
pop
cltd
push
lret
mov
fsubrp
ret
xchg
mov
mov
in
mov
mov
ljmp
sub
in
popf
mov
mov
and
mov
add
mov
lcall
mov
mov
movsl
les
je
add
add
mov
mov
shll
dec
sbb
pop
adc
mov
add
mov
mov
lcall
sub
inc
int
adc
and
mov
test
jle
ficoms
dec
mov
mov
lea
cmp
push
or
aam
cld
pop
xchg
xchg
inc
inc
add
xchg
mov
rolb
ret
into
rolb
mov
xor
lea
push
add
sub
pop
mov
and
add
mov
stc
adc
push
add
in
jo
mov
mov
mov
mov
int
dec
dec
mov
mov
call
mov
jns
mov
and
mov
pusha
add
cmp
add
mov
and
add
cmc
hlt
jmp
stos
dec
scas
sbb
dec
out
xchg
and
lcall
lods
sarl
mov
inc
in
test
inc
loope
push
dec
jno
add
pop
in
cmp
lret
mov
pop
cld
fcomi
pop
in
in
ljmp
mov
stos
daa
add
mov
mov
add
jmp
mov
mov
add
movsl
mov
enter
add
ret
ss
les
repnz
mov
movsb
out
cmp
addl
dec
enter
adc
test
loope
add
imul
jmp
dec
fidivs
add
mov
les
mov
add
add
movsl
and
mov
test
add
out
insl
pop
sti
mov
add
mov
out
xchg
jae
add
inc
add
jle
cmp
sbb
and
mov
lds
add
mov
mov
aaa
sbb
cmp
push
sub
pop
mov
add
in
daa
pop
push
mov
mov
push
add
and
mov
add
call
rolb
mov
pop
adc
rolb
mov
adc
mov
addr16
add
mov
inc
mov
dec
mov
add
xchg
add
gs
lret
das
gs
scas
test
add
mov
fdivp
add
and
in
xchg
add
add
mov
lcall
loopne
mov
and
mov
pop
fstpt
add
mov
mov
cmpsl
xchg
mov
inc
fsubl
xchg
cmpsl
inc
int
lods
in
xchg
xor
mov
jb
mov
adc
add
mov
inc
push
js
rolb
jae
mov
pusha
add
mov
add
mov
scas
jns
call
jo
mov
outsb
mov
dec
lds
mov
jge
int
push
sti
call
cmpsb
movsl
nop
add
dec
pusha
add
add
mov
mov
push
add
rolb
or
mov
pop
lcall
test
inc
or
jns
add
jbe
aam
cmpsb
shrl
sub
mov
repz
pop
out
push
in
imul
or
mov
push
inc
or
and
mov
sub
inc
push
out
jae
push
lea
add
cld
mov
mov
int
leave
xchg
fwait
mov
add
mov
inc
in
in
mov
sahf
shll
cld
pop
sbb
cmc
push
js
fucomi
push
add
lahf
xlat
jmp
or
fucom
cli
lds
dec
clc
dec
jmp
jge
jno
jle
push
cmp
xor
mov
add
pop
add
mov
mov
sbb
fadds
lods
dec
cld
pop
dec
push
sub
or
inc
test
add
fdivs
stos
mov
adc
xlat
dec
jns
mov
xchg
sbb
ja
and
mov
daa
rolb
test
sbb
add
or
mov
ja
ljmp
add
shll
les
divl
pusha
add
pop
lret
fistps
push
in
and
mov
add
rolb
mov
push
movsb
fwait
into
ret
test
sti
mov
mov
fs
add
add
loopne
mov
popa
add
jne
ret
add
mov
insl
and
insb
xor
mov
mov
fs
push
or
push
jl
add
pushf
xor
repz
call
mov
mov
and
leave
inc
out
pushl
dec
xchg
add
in
add
lods
leave
pop
jne
lahf
ficoms
mov
lds
loope
addb
mov
push
stc
aam
xchg
jno
leave
xchg
loopne
mov
add
movsl
rolb
mov
jae
add
xor
mov
and
add
mov
mov
mov
outsl
mov
jo
mov
add
add
sahf
repnz
jae
lods
fisubl
enter
lcall
jecxz
inc
pop
popa
les
mov
jne
add
mov
add
enter
fstpt
popf
sbb
push
and
lods
imul
fstpl
inc
roll
add
add
xchg
mov
data16
cmp
addr16
xor
xor
rorl
push
add
daa
mov
loop
mov
pop
clc
mov
ljmp
mov
jmp
mov
mov
add
sbb
add
xlat
lahf
addb
push
adc
xor
mov
into
mov
mov
sbb
sbb
or
mov
add
lea
add
repz
jle
add
addb
and
mov
cld
mov
movsb
xlat
jecxz
add
mov
push
push
imul
out
jb
mov
out
dec
sbb
push
push
xor
mov
fwait
mov
cs
add
mov
negl
xchg
std
cmp
add
mov
or
mov
add
pop
data16
push
sbb
insl
xor
sub
cmpsb
lcall
adc
push
mov
sub
dec
into
inc
sub
jb
mov
cmp
add
add
xor
or
add
mov
add
pop
arpl
add
mov
addb
pop
mov
add
mov
xor
mov
push
mov
and
call
jb
mov
mov
dec
jne
ds
and
rolb
mov
out
sub
add
incb
mov
mov
mov
mov
mov
xor
sbb
and
mov
adc
mov
mov
je
in
cs
add
cmp
lret
push
jo
mov
ss
pop
sub
popa
notb
add
clc
or
jge
mov
cld
repz
add
mov
cmpsb
xchg
hlt
ds
jl,pt
leave
outsb
push
add
mov
fdivrp
adc
mov
js
sub
xchg
dec
push
sbb
mov
add
push
into
es
sub
imul
xchg
mov
add
cmpl
add
repz
stos
rolb
sbb
jmp
mov
mov
xor
add
add
dec
or
add
rolb
mov
inc
out
mov
mov
fldt
cmp
adc
mov
fistpll
insb
loopne
mov
cmpsb
or
mov
pop
movb
add
add
movsl
jp
sbb
mov
add
and
mov
cld
cmpsl
ljmp
xor
mov
add
dec
stos
rolb
push
lret
mov
int3
xor
push
andl
push
jg
cmp
loop
mov
pop
jmp
lods
lret
mov
dec
daa
mov
jb
mov
movsb
popf
fdivrs
jns
std
fwait
mov
call
mov
mov
decl
and
fcmove
les
aaa
mov
mov
clc
or
sbb
mov
js
aas
mov
xchg
pop
sub
lcall
insb
in
push
imul
add
add
clc
bound
mov
outsl
dec
or
cmp
xor
sub
dec
mov
in
add
add
add
mov
mov
dec
sbb
inc
test
jl
mov
int
addb
inc
add
mov
mov
add
push
js
jns
iret
arpl
add
outsl
int
adc
mov
dec
mov
mov
jle
incb
adc
loopne
mov
js
js
pop
mov
mov
lea
add
and
mov
in
sbb
inc
shll
dec
add
arpl
gs
into
scas
icebp
cmp
daa
mulb
out
in
add
add
jle
aas
fs
mov
inc
ss
add
ret
fistl
add
sbbl
mov
ja
lock
xor
add
mov
leave
inc
fisubrs
fxam
outsb
mov
jmp
imul
push
loopne
mov
sub
adc
mov
imul
mov
adc
xchg
xchg
out
aas
jnp
push
xchg
add
ret
xchg
ja
fcompl
mov
xchg
or
ljmp
outsl
xlat
rolb
mov
add
inc
sahf
sub
cmp
xchg
add
jp
pusha
add
stos
loopne
mov
add
lds
cmc
pop
call
sub
dec
xchg
pop
das
shr
rolb
mov
mov
rolb
mov
mov
mov
rolb
or
loop
mov
push
mov
mov
xchg
pop
gs
mov
jl
add
adc
xlat
call
xlat
testl
fidivs
jae
iret
ljmp
inc
adc
mov
mov
mov
int3
outsl
mov
mov
lods
sub
sub
std
jnp
mov
mov
push
add
xchg
add
mov
lods
les
dec
lahf
les
cs
xchg
stc
push
lret
add
adc
mov
fwait
push
ss
stc
push
mov
mov
add
dec
sbb
add
sbb
add
iret
cmp
cmp
sub
add
mov
mov
xchg
push
sub
in
je
add
mov
sub
add
sti
cs
incb
mov
jge,pn
add
add
mov
mov
xchg
dec
std
cmp
sbb
daa
repz
sti
xchg
push
add
out
xor
and
mov
add
pop
xchg
xchg
push
or
xor
insb
cmp
rolb
mov
add
jnp
push
frstor
pop
ret
fidivrl
bound
mov
in
inc
pop
enter
andl
mov
xor
mov
add
xchg
sbb
fwait
pop
dec
stos
icebp
cmp
mov
push
leave
call
mov
shrl
dec
fucomip
sub
and
nop
add
cmp
lods
xchg
in
add
lds
pop
movsb
data16
inc
add
mov
jecxz
dec
js
pushf
inc
adc
mov
cmp
out
lret
cli
and
add
mov
and
insb
push
pop
inc
sahf
push
add
mov
or
mov
mov
add
mov
mov
xchg
outsl
xor
mov
cmpsl
fiaddl
notb
mov
add
pop
imul
mov
addb
imul
mov
mov
pop
mov
mov
cmc
mov
out
fucomp
into
hlt
push
lods
or
scas
mov
addb
mov
sbb
xchg
sub
push
fistl
mov
add
xchg
jp
push
push
dec
mov
ret
js
or
xor
dec
lea
rolb
mov
cmp
mov
mov
dec
dec
and
mov
push
push
out
mov
push
cmpsl
mov
inc
add
and
add
add
pop
out
lods
daa
mov
xlat
sbb
jbe
pop
push
lcall
lock
add
sbb
lock
add
cmpsb
fldt
add
mov
xchg
lds
adc
mov
addb
or
push
pop
xor
jo
mov
pop
jle
fwait
push
roll
pop
fstl
xchg
sub
int
add
mov
xchg
loopne
mov
fdivl
lea
lods
mov
jae
jle
imul
out
sbb
xchg
inc
es
rolb
scas
std
jns
pushl
out
into
pop
lock
scas
and
add
rolb
lock
mov
inc
daa
test
andl
jae
outsl
jmp
daa
sub
push
adc
mov
ror
or
mov
cmp
xchg
fldcw
jns
test
jg
jp
stos
pop
scas
testl
adc
add
inc
mov
add
pop
mov
xor
mov
xor
mov
inc
lock
mov
jmp
addr16
mov
inc
das
rolb
mov
pop
dec
repnz
daa
jno
gs
mov
cld
sti
mov
rolb
mov
rolb
mov
or
add
inc
jo
mov
imul
sbb
cs
add
mov
or
jp
add
loopne
mov
nop
add
xchg
js
xlat
addb
pop
xlat
jno
leave
cmc
mov
inc
sub
enter
mov
les
out
das
jmp
test
xor
mov
mov
mov
or
jg
shll
mov
jecxz
mov
sub
fcompl
add
mov
mov
jb
mov
add
inc
stc
mov
cmpl
mov
add
insl
addb
aam
fwait
loope
or
inc
fptan
add
xor
mov
int
mov
add
add
ljmp
shll
ret
adc
mov
sti
cmp
pushf
call
addr16
pop
into
pop
sti
mov
scas
in
add
repnz
inc
dec
mov
xchg
jnp
lds
dec
pop
out
dec
mov
mov
ret
xchg
lahf
outsl
scas
out
mov
pop
pop
add
bound
mov
rolb
les
or
xor
jmp
sub
cmc
popf
sti
mov
pusha
add
push
or
push
mov
add
inc
xor
mov
lret
xorl
movsb
or
std
das
int3
xchg
xchg
push
ficomps
test
es
sti
mov
jns
into
push
nop
add
add
lret
pop
jge
add
bound
mov
aaa
lods
pop
mov
mov
mov
inc
add
js
lcall
xor
mov
pop
xchg
movsb
jl
cmc
aaa
leave
dec
adc
and
mov
rcll
mov
inc
add
add
mov
push
mov
mov
mov
and
cmp
fcomp
dec
movl
rolb
mov
cltd
cmpsl
add
cmp
mov
stos
add
pushf
push
addb
mov
out
jl
mov
add
dec
pop
jb
mov
cmp
mov
in
adc
cmpsl
xor
mov
enter
pop
enter
add
add
pop
mov
pusha
add
test
mov
rolb
mov
je
inc
push
addb
ret
sub
add
pop
filds
shr
cwtl
xor
cltd
sti
aad
roll
in
shll
add
es
ret
std
pop
addr16
cmpsl
cmpsl
xor
mov
pcmpgtb
jge
and
mov
mov
arpl
xor
push
test
add
and
add
mov
mov
sbb
xchg
mov
cmp
mov
imull
outsb
push
xor
add
bound
mov
add
add
jo
mov
mov
fs
jp
leave
jg
cmp
pop
std
fstpt
xchg
sahf
lret
sbb
out
pop
mov
mov
sbb
xchg
mov
into
mov
pushf
mov
mov
add
outsl
loop
mov
push
add
jno
pushf
xchg
push
add
xor
mov
add
insl
jo
mov
mov
enter
into
iret
add
out
mov
mov
mov
inc
add
in
cmp
pop
pop
sbb
out
mov
jns
inc
push
push
jns
inc
sti
imul
insl
repz
mov
test
xor
je
inc
jecxz
add
fcoms
add
pop
cwtl
mov
mov
jmp
add
add
add
pop
push
shll
inc
aas
inc
add
and
sub
mov
in
push
pop
sbb
mov
jbe
cli
sbb
sub
mov
mov
mov
lret
add
mov
mov
or
xchg
jbe
rolb
mov
xor
pop
mov
in
repz
jae
fnstcw
rolb
mov
fadds
mov
imul
jecxz
mov
pop
mov
mov
mov
sbb
dec
cmp
mov
add
adc
mov
xchg
int3
dec
rcll
arpl
sub
stos
loopne,pt
mov
mov
mov
mov
lret
dec
pusha
add
dec
mov
add
jae
add
stos
ret
fucomip
mov
mov
add
mov
mov
mov
fwait
xor
add
dec
inc
add
ljmp
addb
xor
fwait
rolb
mov
mov
cmp
roll
movsl
aad
dec
addl
adc
mov
xor
dec
mov
out
pop
fidivrs
mov
mov
push
lret
push
dec
mov
loop
mov
add
test
fsubrs
dec
jo
mov
idiv
mov
add
xchg
mov
addb
and
lods
dec
push
js
cmpsb
rolb
mov
js
hlt
std
sub
push
rolb
mov
aaa
fnsave
sbb
pop
dec
push
add
and
pop
insb
outsl
xlat
addl
dec
sub
add
jp
fincstp
mull
movlps
mov
std
fnstcw
mov
add
push
cmp
sahf
mov
jl
out
mov
adc
mov
mov
test
movsb
jge
jl
loope
adc
ljmp
fidivs
lahf
rcrl
mov
lock
popa
sbb
inc
add
sub
add
push
push
mov
pop
fwait
cmpsl
lods
loop
mov
sub
pop
and
mov
mov
dec
push
pop
mov
mov
dec
sbb
insl
adc
mov
dec
fwait
cmpsl
push
hlt
sti
lahf
aam
jne
inc
add
repnz
pop
jno
inc
add
sbb
mov
cwtl
out
mov
lcall
jae
sbb
mov
arpl
mov
js
pop
aas
sbb
fs
pop
pandn
mov
xor
mov
mov
jbe
sub
mov
pop
xor
iret
cmp
add
adc
sub
or
mov
mov
inc
add
notl
jns
lret
sahf
insl
jno
mov
cwtl
push
pop
cmp
call
mov
and
mov
pop
lret
test
fwait
dec
addb
ucomiss
mov
in
sub
push
jo
mov
xor
jl
push
add
iret
gs
aaa
jl
add
jecxz
pop
pop
mov
out
dec
mov
testb
add
xchg
sbb
mov
hlt
pushf
ret
cmc
insb
inc
stc
and
push
push
lds
out
cmpsl
push
add
pop
inc
scas
movsb
lret
hlt
jns
mov
inc
lds
in
mov
fadds
mov
mov
add
pop
add
inc
in
sbb
add
mov
fcmovnbe
inc
add
jge
mov
sub
mov
mov
sbb
or
xchg
add
push
jne
stc
arpl
jle
loopne
mov
lock
push
xchg
icebp
es
out
mov
mov
daa
les
jnp
sbb
cmp
sbb
stos
xor
sbb
xor
std
cmp
dec
lods
or
arpl
inc
in
dec
ja
loope
xor
cmc
and
mov
and
mov
nop
add
xlat
fisttpll
cmp
jmp
or
ja
subl
mov
or
mov
adc
add
mov
xor
mov
add
cwtl
or
loope
pop
mov
add
mov
ss
aad
push
idiv
jmp
test
or
rcr
add
jnp
dec
adc
pop
sbb
mov
mov
push
inc
lds
adc
jl
addb
push
dec
insb
nop
add
or
add
les
lea
test
add
aam
xchg
xchg
jbe
pop
xchg
xchg
mov
add
xchg
pop
jle,pn
addr16
mov
add
xchg
out
outsl
repz
mov
or
mov
xchg
push
addr16
fs
mov
mov
jno
and
add
add
lds
add
mov
mov
add
lea
pop
roll
jmp
test
sbb
lret
je
pusha
add
add
jl
loope
push
std
sbb
push
add
fsubl
decb
gs
push
pushf
and
loop
mov
pushf
ja
xchg
mov
or
cld
xchg
inc
or
mov
mov
lods
jl
add
add
outsb
sbb
push
cmp
cmp
mov
addb
cld
fstpl
adc
mov
adcl
std
inc
imul
add
or
push
stc
arpl
xor
mov
add
jmp
dec
scas
sbb
lds
mov
lea
rolb
mov
bndldx
mov
rolb
mov
xlat
mov
fsubl
test
add
mov
test
les
add
mov
add
mov
jecxz
sbb
inc
out
leave
pop
xchg
inc
pusha
add
sub
dec
jnp
outsb
test
insb
bound
mov
and
out
sub
je
repnz
push
mov
dec
imul
out
ds
and
mov
push
add
push
rolb
mov
cmp
mov
repnz
pop
or
cmp
mov
jmp
jl
stos
stc
lock
adc
xor
je
xor
mov
mov
xchg
test
gs
fs
lahf
lds
xchg
sub
sbb
jbe
sbb
pop
loope
jl
adc
add
push
shrl
psubq
jg
add
fsubr
sti
test
aas
add
aas
fcom
jg
mov
mov
je
push
mov
cmp
cmp
pop
cmp
and
dec
leave
fidivl
or
mov
jno
ss
add
ds
cmp
inc
add
enter
ret
jne
cmpsb
int
mov
dec
pop
cmp
mov
stos
sub
cmpsb
xchg
or
mov
jbe
mov
lret
iret
or
test
push
rolb
mov
add
sub
decb
mov
shrl
jl
movsl
lods
call
xor
mov
cwtl
js
cmp
add
push
stc
sub
mov
scas
addl
add
add
repnz
inc
jl
add
stos
insl
subl
sbb
inc
add
scas
ss
dec
fisubrl
bound
mov
testb
adc
mov
stos
outsl
jmp
leave
or
int
idivl
add
addl
sbb
pop
add
mov
aas
xor
mov
inc
je
and
mov
jno
lds
lcall
jmp
pop
and
mov
xchg
add
add
add
jge
dec
sti
int3
rolb
mov
adc
mov
loopne
mov
add
lock
jmp
add
push
std
les
out
mov
imul
int
negl
jbe
mov
add
mov
jb
mov
mov
movsl
cs
add
pop
lods
mov
sub
lret
mov
lods
fsubrs
mov
add
or
sets
rcl
mov
mov
add
add
test
mov
repnz
daa
ds
push
inc
add
lods
movsl
fs
test
push
or
into
call
es
loopne
mov
add
push
add
mov
cmpsb
dec
movsb
lods
dec
sbb
dec
adc
mov
lahf
in
mov
jo
mov
mov
xor
mov
mov
add
mov
popf
insl
incl
mov
imul
ret
dec
xchg
sub
add
mov
add
popf
repz
mov
add
push
push
sbb
mov
mov
add
push
cmc
or
ds
mov
cmp
add
add
rorl
mov
push
jg
cmp
sbb
lods
add
sub
add
inc
add
add
scas
hlt
decl
add
xchg
add
and
pop
cmpsl
cmpsl
push
add
inc
movntq
pop
sub
shl
sbb
lods
pop
aad
scas
test
cmp
xchg
jae
mov
aam
in
ja
cs
rorl
fyl2x
cmp
insl
call
add
sbb
push
sub
jecxz
lahf
sbb
imul
cmp
lcall
mov
testl
jmp
add
sub
mov
test
xor
nop
add
call
popl
jno
add
icebp
out
xchg
adc
mov
lock
insb
push
add
dec
xor
fnstcw
xlat
daa
dec
aas
inc
jno
push
bound
mov
mov
push
inc
in
jecxz
jno
add
outsb
jno
movsl
mov
outsb
ret
or
xor
lahf
sbb
and
ds
dec
ljmp
popf
and
push
add
push
stos
ljmp
lock
push
pop
inc
add
push
sar
mov
xchg
add
lret
aam
pop
adc
or
mov
mov
mov
mov
xchg
ljmp
add
and
push
inc
xchg
adc
add
xchg
push
sar
hlt
and
mov
push
sarl
lret
push
or
addb
mov
add
sub
addr16
arpl
push
out
jg
jno
sbb
in
adc
mov
sti
stos
pop
addr16
push
inc
xchg
fucomi
xchg
add
movsb
inc
imul
sub
push
rcll
inc
lret
sbb
mov
loopne
mov
outsl
lret
popa
pop
aad
jg
sbb
add
cmp
daa
loop
mov
jmp
push
lret
add
mov
in
icebp
popa
sbbl
mov
mov
add
sub
outsl
xor
push
imul
mov
popf
mov
int
lahf
xchg
fs
add
sbb
and
add
in
push
mov
movsb
pop
dec
stc
xchg
add
je
mov
cmp
das
cmp
mov
aad
dec
jmp
addb
push
add
iret
pop
fwait
das
pop
mov
cs
mov
faddp
add
and
inc
mov
and
mov
add
push
les
sarw
mov
add
push
add
and
mov
fdiv
jne
addb
inc
or
mov
add
add
mov
imul
pusha
add
mov
mov
lret
mov
lods
inc
cltd
ss
popa
xor
add
movsb
out
faddl
loopne
mov
scas
add
aaa
sbb
mov
and
mov
push
jmp
add
push
add
dec
pop
test
inc
je
pop
cld
pusha
add
adc
mov
mov
add
push
cmp
mov
xor
jbe
or
and
push
add
mov
pop
loope
push
adc
mov
mov
add
cmp
aad
mov
mov
mov
lret
push
mov
cs
cmpxchg
imul
add
mov
jl
es
dec
pop
jo
mov
jnp
jg
and
mov
sbb
add
add
rolb
mov
mov
inc
dec
xor
mov
sbb
iret
push
roll
in
add
js
mov
or
mov
jmp
add
cmp
addb
shrl
das
jg
clc
out
add
sub
adc
add
cli
jbe
mov
mov
lods
std
ja
std
ret
xchg
dec
inc
insl
sub
xchg
and
xchg
in
in
mov
je
out
push
mov
add
je
outsl
shrl
inc
add
jle
lahf
roll
adc
fs
lahf
dec
loop
mov
push
jecxz
add
mov
scas
and
push
cmpl
add
movsb
push
and
fcomp
pop
clc
inc
mov
loope
stos
dec
repnz
add
mov
cmp
mov
push
inc
cmp
push
xchg
scas
push
lods
ret
popl
mov
add
mov
pusha
add
dec
add
add
mov
sub
push
mov
rolb
xlat
cs
or
ret
out
jle
stos
sub
dec
test
add
fidivrs
mov
add
xlat
push
or
adc
mov
shrl
dec
fimull
adc
jb
mov
sbb
dec
lcall
and
pop
pop
jg
sbb
mov
sbb
add
mov
add
mov
add
mov
roll
mov
add
js
cli
insl
and
mov
jbe
std
fcmovbe
add
shll
xchg
and
xchg
xchg
mov
sbb
mov
push
mov
ds
les
add
cld
inc
add
dec
dec
and
rolb
mov
push
out
mov
adc
fisubl
popa
orl
and
addb
pop
ljmp
jp
lods
mov
add
pop
out
mov
cmp
mov
add
mov
in
add
push
add
add
jp
mov
inc
lock
mov
add
add
std
push
add
mov
add
xor
add
scas
aam
hlt
insb
xor
xor
add
mov
imul
rolb
mov
mov
add
neg
repnz
and
pop
push
jle
jne
add
aas
jmp
pusha
add
mov
jge
or
and
add
pop
xchg
in
add
mov
add
inc
pop
add
fs
aad
cmc
addr16
cs
sbb
adc
jecxz
inc
testl
test
sbb
arpl
jecxz
inc
xchg
xchg
mov
and
mov
clc
cmpsb
pop
clc
out
imul
mov
add
mov
add
xor
arpl
out
daa
or
sbb
rolb
mov
and
mov
pop
fildll
sub
rolb
mov
out
scas
pop
popf
and
push
jno
loopne
mov
in
add
mov
je
mov
rcll
repz
add
mov
add
mov
pop
cmp
dec
movsb
ljmp
push
adc
rolb
lcall
mov
mov
add
mov
lods
jns
fistpl
mov
add
out
dec
jmp
loopne
mov
add
push
add
outsl
aaa
int3
sub
out
and
push
