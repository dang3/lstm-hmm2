add
xor
xor
sbb
add
add
add
add
add
aaa
fadds
add
add
add
mov
mov
mov
mov
add
add
add
mov
mov
add
add
add
shrl
outsb
outsb
outsb
outsb
outsb
cmc
cmc
cmc
cmc
cmc
cmc
pop
pop
pop
pop
pop
pop
pop
add
add
add
and
lods
lods
lods
lods
lods
lods
lods
lods
sub
sub
add
add
add
add
pushf
add
add
add
sbb
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
add
pop
sub
fidivs
test
add
or
or
add
pusha
add
add
sbb
mov
mov
dec
dec
movsl
movsl
dec
add
add
add
add
add
test
add
jbe
jbe
jbe
sbb
add
jle
jle
jle
jle
jle
add
pop
pop
xor
push
push
push
push
push
push
push
push
push
push
push
sbb
sbb
sbb
sbb
add
add
add
cmp
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
test
add
add
rcl
rcl
cli
cli
add
add
lods
add
add
gs
div
div
testb
push
push
add
fdivrl
cmp
cmp
cmp
cmp
cmp
add
add
fnstenv
je
add
add
add
add
add
dec
dec
dec
dec
dec
sub
icebp
icebp
jge
push
push
push
repnz
incl
add
add
adc
aam
into
into
into
into
into
into
into
into
into
into
into
into
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
out
out
out
pushf
add
add
cmp
cmp
cmp
cmp
add
xchg
xchg
xchg
cmpsl
cmpsl
cmpsl
cmpsl
add
adc
adc
adc
adc
adc
adc
adc
scas
scas
scas
scas
scas
scas
lock
add
or
or
add
ret
add
ja
ja
ja
ja
add
add
jb
jb
jb
jb
add
adc
adc
pop
pop
pop
pop
pop
pop
add
xor
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
mov
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
jmp
add
fwait
rol
shlb
arpl
add
add
add
add
dec
dec
repnz
push
push
add
add
arpl
add
div
testl
addl
cmp
cmp
cmp
cmp
mov
sti
sti
add
iret
iret
iret
iret
iret
mov
mov
mov
inc
add
fsubl
mov
mov
add
add
add
pop
add
add
add
add
add
add
call
call
add
add
sub
sub
mov
add
add
add
out
add
rol
add
add
loop
loop
loop
loop
loop
cld
cld
cld
cld
stos
stos
stos
stos
rcl
rcl
add
rol
add
or
or
idivb
add
add
imul
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
add
add
add
xchg
cltd
cltd
popl
add
add
add
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
cmc
cmp
add
add
push
push
push
push
push
push
push
push
fcomp
add
or
or
add
movsl
movsl
movsl
sti
sti
sti
sti
stc
stc
stc
stc
sbb
sbb
add
add
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
jmp
jmp
jmp
jmp
push
xchg
xchg
xchg
xchg
test
add
add
add
out
add
add
xchg
xchg
mov
mov
mov
mov
and
and
and
and
and
add
es
ds
fwait
fwait
add
add
in
in
in
push
push
push
push
push
push
push
mov
cmp
lcall
add
sbb
sbb
mov
stc
stc
stc
stc
testl
dec
add
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
or
dec
dec
js
add
add
cmp
add
add
or
pop
pop
cmp
cmp
cmp
pop
pop
pop
pop
add
clc
clc
clc
clc
clc
clc
add
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
rol
rol
rol
rol
rol
fnstcw
mov
xor
xor
xor
xor
je
je
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
jno
jno
jno
add
outsl
mov
mov
lea
push
push
loop
pop
pop
pop
pop
add
add
push
push
push
push
push
push
addb
rcl
rcl
sarl
mov
cmp
cmp
cmp
add
outsl
outsl
pop
lret
lret
lret
lret
lret
add
add
add
ljmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
roll
add
add
add
add
icebp
push
push
push
push
push
push
dec
add
add
lods
lods
lods
lods
add
pop
dec
dec
dec
dec
dec
dec
cmc
add
pop
pop
mov
mov
add
add
les
mov
push
push
push
cs
push
push
push
push
push
addr16
addr16
ret
and
and
aam
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
iret
iret
iret
iret
iret
iret
iret
iret
xor
imul
imul
imul
imul
add
or
add
push
mov
mov
mov
mov
add
inc
inc
inc
inc
inc
inc
inc
inc
stos
xor
add
add
add
lahf
lahf
add
push
push
push
push
pop
pop
pop
pop
pop
add
add
add
jne
jne
jne
jne
add
add
add
push
push
push
push
push
push
push
push
add
sub
cmp
cmp
inc
add
add
add
test
add
add
add
inc
popa
popa
popa
popa
popa
popa
popa
popa
add
add
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
add
push
push
cs
add
push
push
mov
mov
mov
sti
sti
sti
call
call
loope
loope
loope
add
add
scas
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
outsl
outsl
outsl
outsl
outsl
je
je
fcmovu
fcmovu
fcmovu
fcmovu
add
add
mov
add
add
scas
scas
scas
scas
scas
ret
ret
lahf
lahf
lahf
lahf
lahf
xchg
xchg
xchg
xor
xor
xor
xor
xor
add
call
and
add
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
add
add
or
or
or
add
add
das
das
das
das
das
add
add
xor
xor
xor
xor
xor
xor
add
add
test
add
jne
jne
jne
jne
add
mov
bound
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
xlat
xlat
xlat
xlat
xlat
xlat
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
add
sahf
sahf
mov
hlt
hlt
hlt
hlt
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
popf
popf
popf
xchg
add
add
add
add
add
or
add
add
fcomp
fadds
add
add
add
cmpsl
jg
jg
mov
add
add
add
lret
lret
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
and
add
add
fcmovu
fiaddl
add
das
das
das
das
das
das
sbb
jmp
mov
shr
in
in
in
in
in
in
add
add
add
ret
ret
ret
add
add
add
add
in
in
in
in
in
in
pop
pop
pop
pop
push
add
add
hlt
cmp
cmp
cmp
cmp
cmp
cmp
add
pushf
pushf
pushf
pushf
pushf
pushf
add
add
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
clc
div
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
addb
push
mov
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
out
out
out
out
out
out
sub
movsb
movsb
mov
mov
add
add
pushf
pushf
pushf
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
fcmovu
fcmovu
fcmovu
stc
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
add
add
cmpsl
push
add
xlat
xlat
xlat
sahf
sahf
add
add
mov
mov
mov
add
je
je
je
push
push
push
js
js
js
add
add
add
add
repnz
add
cmp
xor
aas
aas
add
add
in
push
push
push
add
ret
ret
ret
jo
push
push
push
push
push
push
push
push
push
jl
jl
add
sbb
adc
lea
lea
add
add
xchg
add
sub
push
leave
div
div
div
negl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
push
add
add
add
dec
dec
dec
cmp
cmp
rol
rol
rol
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
ds
out
out
adc
adc
pusha
pusha
pusha
pusha
pusha
pusha
mov
fiadds
adc
adc
pop
pop
add
add
and
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jb
addl
addl
add
add
add
add
add
add
add
add
add
push
push
push
gs
or
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
add
es
add
add
mov
add
enter
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fistl
adc
and
jle
movsl
movsl
movsl
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
or
or
nop
nop
nop
nop
nop
rcl
rcl
shrl
pushf
loope
cmp
cmp
add
add
ds
and
add
add
add
daa
daa
xchg
add
add
add
add
add
add
add
aad
aad
aad
aad
in
in
in
in
in
in
add
add
loope
loope
ja
ja
add
jl
jl
out
out
out
add
add
mov
stos
stos
stos
push
push
xor
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
in
in
dec
dec
dec
dec
dec
add
ret
ret
ret
push
push
add
cmp
cmp
add
in
mov
add
add
cmp
cmp
div
testb
inc
inc
inc
inc
inc
inc
inc
xor
add
sub
sub
add
add
aas
sbb
cmp
add
adc
adc
adc
adc
adc
add
imul
out
popf
add
or
or
or
or
or
add
add
inc
sbb
sbb
sbb
sbb
sbb
add
add
add
add
sbb
jl
add
ficoms
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
mov
or
or
or
or
or
mov
dec
dec
dec
dec
dec
dec
add
add
mov
mov
pop
pop
or
add
add
add
add
lret
lret
lret
lret
lret
lret
dec
dec
dec
dec
add
add
dec
dec
add
cmp
add
add
add
xchg
cmp
xor
xor
xor
xor
xor
xor
xor
xor
xor
scas
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
add
inc
inc
push
jns
jns
add
stc
add
add
sub
xor
xor
cmp
cmp
cmp
shrl
sub
lock
adc
arpl
add
add
add
dec
dec
dec
add
add
div
div
div
div
fwait
fwait
dec
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
in
in
in
sbb
sbb
sbb
sbb
sbb
imul
imul
sbb
sbb
sbb
dec
dec
dec
pop
pop
pop
pop
pop
mov
mov
add
add
sub
add
es
add
lret
lret
add
add
mov
jno
je
je
je
je
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
push
push
push
push
push
push
push
push
push
push
add
add
add
fldl
add
add
adc
in
adc
adc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
xchg
mov
mov
mov
mov
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
sub
sub
sub
add
add
add
das
add
add
jo
jo
jo
add
add
add
add
ss
pop
add
jo
aas
and
and
and
pusha
pusha
pusha
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
add
sbb
sbb
sbb
add
cmp
cmp
je
je
add
add
lods
lods
lods
lods
mov
add
add
add
add
sldt
add
test
add
add
add
pop
and
and
add
add
movsl
movsl
adc
add
add
aas
aas
aas
aas
aas
aas
add
sbb
sbb
fcoms
adc
add
add
add
adc
or
inc
inc
inc
addb
add
add
inc
inc
inc
inc
inc
inc
out
out
fisttps
mov
stos
stos
stos
stos
stos
stos
add
popf
repnz
mov
jo
jo
inc
inc
inc
inc
inc
inc
and
add
testb
dec
dec
add
or
or
add
add
xor
cwtl
add
addl
jmp
add
mov
jg
jg
jg
enter
mov
out
outsb
outsb
outsb
outsb
outsb
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
mov
rol
add
add
jge
int
int
inc
inc
in
in
add
add
ret
ret
ret
ret
ret
ret
ret
ret
mov
add
add
add
ds
add
repz
test
addl
rol
xchg
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
push
outsl
outsl
outsl
outsl
outsl
add
mov
add
add
out
out
out
out
out
out
out
out
out
out
out
add
add
add
xlat
add
and
add
xor
add
pop
pop
add
add
out
jnp
add
mull
insl
insl
add
fcmovu
fcmovu
add
stc
stc
stc
add
incb
add
add
add
adc
add
add
dec
add
add
add
dec
add
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
cs
add
push
push
int3
int3
int3
int3
int3
int3
cmp
cmp
aaa
aaa
add
add
add
sbb
dec
sbb
sbb
sbb
repnz
lret
mov
add
add
cs
push
push
push
adc
sbb
adc
adc
adc
add
addl
add
add
pop
dec
dec
add
add
add
lods
lods
lods
lods
add
add
mov
mov
mov
add
gs
mov
add
add
add
dec
dec
dec
dec
dec
dec
dec
add
add
add
mov
mov
ficoms
add
cmp
sub
sub
sub
add
add
add
add
addb
add
fiadds
add
add
dec
add
add
fcomp
fcomp
fcomp
fcomp
fcomp
pop
pop
pop
mov
add
add
movsl
movsl
movsl
mov
mov
add
add
pop
pop
add
add
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
and
add
add
es
lahf
lahf
push
pushf
pushf
sbb
fstp
add
and
and
and
and
and
lock
repnz
and
stos
cmp
inc
cmp
cmp
jle
jle
jle
jle
jle
jle
dec
dec
dec
dec
dec
dec
dec
dec
add
adc
add
out
out
mov
mov
mov
or
or
or
or
or
or
or
or
mov
xchg
iret
iret
iret
iret
iret
iret
dec
dec
nop
nop
nop
add
mov
mov
add
or
or
or
or
add
add
add
add
loopne
add
add
add
add
push
lcall
int3
dec
popf
cs
add
add
add
add
pop
pop
pop
pop
in
add
nop
nop
nop
nop
nop
nop
nop
nop
incl
pop
pop
pop
pop
add
rol
shrl
pop
pop
add
add
add
add
add
add
add
add
add
out
out
out
out
adc
adc
add
add
lock
lods
lods
lods
lods
lods
lods
lods
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
pop
pop
pop
pop
pop
xor
sbb
movsb
and
add
add
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
addb
add
lods
lods
lods
lods
lods
lret
lret
add
xchg
xchg
xchg
xchg
add
add
add
movsl
movsl
in
in
in
in
in
in
sahf
sahf
sahf
jns
jns
add
add
iret
iret
iret
iret
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
add
incl
add
add
add
in
sbb
sbb
add
push
push
push
push
push
push
push
push
push
jae
add
inc
inc
inc
ja
aam
aam
aam
push
push
push
data16
push
rcl
rcl
rcl
add
add
loop
loop
loop
loop
add
ds
add
push
add
fbstp
jo
icebp
jae
jae
jae
jmp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
jl
jl
jmp
add
add
add
pop
pop
xchg
xchg
xchg
xchg
xchg
fcmovu
fiaddl
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
mov
mov
add
push
push
push
add
addl
add
mov
mov
div
idiv
cmp
cmp
cmp
add
add
add
jb
jb
add
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
cmp
cmp
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
add
add
out
out
out
pop
pop
pop
arpl
arpl
arpl
arpl
or
lock
jnp
jnp
mov
lcall
pop
pop
pop
dec
pop
lahf
lahf
lahf
lahf
add
push
push
push
add
add
add
add
mull
daa
daa
daa
add
add
jmp
jmp
jmp
jg
enter
add
add
add
add
mov
addr16
push
push
push
push
push
push
cmc
add
add
add
sbb
sbb
sbb
sbb
push
push
push
push
push
push
mov
js
pop
pop
pop
pop
and
add
add
out
out
xchg
xchg
add
ljmp
add
add
add
push
push
push
lea
push
push
insl
das
das
das
add
add
add
add
insl
insl
insl
insl
add
add
add
sub
sub
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
and
fwait
fwait
fwait
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
icebp
icebp
icebp
icebp
es
sbb
sbb
jbe
jbe
jbe
jbe
jbe
jbe
add
add
mov
mov
xchg
xchg
xchg
add
add
add
add
lods
mov
mov
mov
add
add
adc
adc
adc
adc
adc
add
incl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
fists
insb
insb
jl
jl
add
mov
mov
std
add
sbb
repz
mov
mov
mov
mov
aaa
aaa
aaa
aaa
aaa
aaa
fmull
mov
insb
insb
insb
insb
insb
insb
add
add
add
fs
add
add
add
rcl
rcl
rcrb
add
repz
rcl
rcl
rcl
rcl
roll
add
add
add
add
jns
jns
add
loop
loop
loop
loop
add
xlat
xlat
add
add
add
add
into
into
into
add
cs
push
push
add
add
in
add
add
ret
les
ja
ja
add
add
add
add
add
add
add
inc
movsb
movsb
add
add
add
add
add
push
push
push
push
inc
inc
inc
inc
or
or
mov
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
sub
int3
add
add
cltd
addb
scas
imul
rol
rol
rol
rolb
rcl
rcl
rcl
rcl
rcl
rcl
rcl
add
add
dec
mov
leave
inc
inc
inc
inc
arpl
xchg
add
adc
adc
adc
xor
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
div
testl
in
in
pop
pop
pop
pop
pop
adc
adc
adc
adc
add
cwtl
cwtl
cwtl
add
fbld
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
mov
mov
mov
mov
and
and
and
add
xchg
in
in
in
in
in
add
add
add
shll
jl
mov
cmp
cmp
pop
sub
leave
leave
leave
add
add
add
inc
inc
inc
inc
inc
inc
add
add
add
and
add
push
add
add
add
repz
ret
add
add
inc
inc
inc
sbb
sbb
sbb
sbb
mov
mov
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
test
call
call
add
add
addl
sti
sti
sti
add
mov
xchg
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
xchg
xchg
xchg
xchg
add
add
cwtl
add
inc
inc
inc
inc
inc
add
add
add
add
inc
inc
inc
inc
inc
inc
add
add
add
add
lds
add
mov
add
add
add
cmpsl
cmpsl
add
add
clc
clc
clc
mov
adc
and
test
test
add
add
ret
ret
test
sub
sub
sub
int3
int3
int3
sub
jecxz
jecxz
jecxz
xchg
xchg
xchg
xchg
xchg
xchg
rol
and
and
sbb
add
push
push
push
push
rol
rol
rol
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
out
mov
cmp
cmp
stos
stos
div
div
add
xchg
xchg
xchg
xchg
xchg
add
test
dec
dec
dec
add
inc
inc
inc
push
push
push
push
add
add
mov
rcl
rcl
inc
inc
ret
ret
ret
adc
adc
jge
jge
jge
jge
jge
push
push
push
add
mov
mov
mov
adc
adc
cmp
insl
insl
insl
insl
insl
insl
insl
insl
stc
stc
add
add
int
int
int
add
les
add
add
add
add
into
into
mov
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
add
stos
rcl
rcl
sarb
push
push
lods
lods
lods
lods
lods
mov
and
and
daa
daa
daa
daa
xorps
push
add
add
add
add
xor
hlt
hlt
hlt
add
das
das
das
das
das
div
testl
add
add
add
insl
insl
insl
cltd
rol
aad
std
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
mov
mov
mov
add
add
add
cmp
cmp
add
stc
stc
stc
stc
stc
stc
stc
stc
stc
add
add
xor
xor
ljmp
add
add
add
cmp
mov
repnz
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
mov
add
add
push
push
push
push
ret
ret
add
add
and
jne
jne
jne
jne
fs
add
add
cmp
cmp
cmp
add
enter
jbe
je
inc
inc
inc
inc
inc
inc
add
push
push
push
push
push
push
push
push
pop
pop
pop
pop
add
addb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
fcomp
fcomp
fcomp
fcomp
fadds
add
add
add
xor
xor
xor
add
add
rcl
mov
add
int
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
push
push
push
push
push
push
sldt
add
push
add
add
add
xor
xor
xor
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
fadd
add
aaa
aaa
aaa
aaa
aaa
aaa
cmp
cmp
cmp
cmp
add
bound
add
add
fcomp
add
add
aas
aas
pop
pop
pop
pop
pop
pop
add
add
ds
xchg
add
add
enter
enter
add
dec
dec
dec
dec
dec
dec
add
add
js
add
add
add
and
and
and
and
and
and
and
clc
clc
clc
clc
clc
clc
add
add
add
add
dec
dec
ret
lods
lods
lods
lods
lods
lods
in
in
in
in
in
add
add
add
add
mov
mov
jns
jns
add
add
adc
adc
adc
adc
adc
adc
adc
lcall
jle
jle
jle
mov
add
add
add
mov
add
push
add
add
add
add
in
in
in
in
in
outsl
outsl
outsl
outsl
add
add
add
add
add
add
add
int3
int3
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
add
add
repnz
daa
daa
sub
or
cs
jne
hlt
add
add
add
add
lock
add
add
icebp
icebp
icebp
icebp
icebp
icebp
or
aam
rol
int
int
int
cld
cld
cld
cld
cld
cld
cld
add
add
call
xchg
xchg
xchg
xchg
xchg
and
imul
mov
mov
jb
jb
jb
jb
add
add
add
add
push
push
push
push
push
push
push
push
push
rol
lret
and
push
fs
push
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
mov
mov
inc
adc
add
add
add
addl
add
add
adc
jnp
jnp
insl
insl
xchg
xchg
xchg
xchg
add
div
div
testb
add
and
and
and
and
add
add
add
add
add
mov
mov
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
leave
leave
leave
leave
add
add
add
test
add
aad
ja
adc
xor
insb
mov
cltd
into
cmc
mov
mov
cld
sub
add
into
scas
pop
repnz
in
scas
add
and
lcall
outsl
mov
add
inc
jp
jecxz
stos
add
mov
adc
sti
loope
add
in
xor
mov
cmpsl
mov
push
xchg
call
jo
aam
add
push
sbb
nop
lods
push
add
add
mov
mov
adc
add
add
sub
jp
push
add
lahf
popa
push
out
pop
pop
sarl
in
into
fstl
add
popa
inc
icebp
or
add
out
dec
inc
cmp
fsub
aas
push
out
add
and
add
loopne
lcall
add
add
mov
lret
push
loopne
add
add
sub
add
inc
push
jns
or
add
xchg
lcall
add
test
add
fidivrs
inc
out
lcall
popf
int3
sbb
xchg
in
push
jge
arpl
xchg
mov
lret
push
and
add
jg
pop
loopne
add
cmp
adc
lock
mov
adc
inc
dec
mov
add
add
ljmp
cmp
jae
movsl
div
mov
popa
or
push
outsl
xchg
xchg
pop
fists
iret
jbe
popf
clc
jno
add
je
loope
movhps
add
xchg
sbb
add
imul
cmp
mov
push
jae
std
mov
imulb
xchg
jns
shlb
xor
mov
shl
push
or
add
add
mov
pushf
outsl
rolb
and
add
add
addb
push
fmuls
outsl
repnz
jp
pop
jnp
add
addb
jne
add
gs
cmp
mov
ds
je
add
sbb
stos
rcrb
out
adcl
lods
add
dec
cmpsl
jle
jecxz
xchg
test
jecxz
push
xchg
dec
call
inc
addb
xor
and
add
decl
cmpsb
add
arpl
shll
add
add
fisubs
and
add
push
xor
inc
xchg
push
add
jo
mov
add
add
add
and
add
out
xor
jnp
rorl
add
in
add
add
push
lret
fwait
repz
movsl
cmpsl
aaa
into
mov
add
push
push
sub
add
dec
dec
and
add
add
int3
mov
dec
adc
pop
ficompl
mov
pop
jno
push
sbb
fcoms
add
ja
mov
movsb
add
add
and
add
jg
add
add
add
mov
dec
cwtl
cmp
mov
pop
inc
fdivrs
xor
dec
aaa
mov
leave
scas
add
insb
pop
out
das
xchg
in
addb
ret
out
adc
dec
arpl
mov
or
adc
mov
hlt
nop
xchg
adc
add
push
jae
dec
jmp
or
add
mov
in
int3
jle
mov
xor
push
adc
rorb
hlt
push
imul
testb
mov
add
xor
adc
dec
arpl
add
add
inc
js
add
add
add
iret
cli
mov
lods
add
push
cmp
aas
imul
add
test
add
movsb
add
or
add
mov
out
lret
jns
lret
inc
adc
fimuls
add
jne
jae
mov
add
sbb
sub
jmp
test
out
jo
lods
add
aam
inc
push
lcall
fcoms
dec
mov
ljmp
add
iret
jae
mov
add
movsb
add
movsl
mov
clc
push
mov
mov
add
mov
jge
mov
add
loop
mov
lea
incb
pop
arpl
push
cmp
add
nop
jae
testb
add
inc
add
add
lock
fbld
sbb
jns
clc
push
add
cmp
dec
pop
and
add
cmp
or
xchg
aad
addb
cmp
imul
arpl
mov
int
jo
add
cmpxchg
int
cmc
or
add
jnp
dec
dec
cltd
sti
imul
repnz
pop
inc
xchg
and
dec
and
add
cmp
jae
add
push
enter
test
add
stos
loope
movsb
add
cwtl
sub
add
dec
fildl
or
add
sbb
mov
or
jle
add
daa
cmp
sub
add
in
rdpmc
cmpsb
add
insb
jb
mov
dec
icebp
inc
mov
sub
add
rcl
adc
add
cmp
loope
cmpl
jnp
xchg
ds
add
add
nop
gs
push
and
add
jecxz
mov
add
adc
js
jmp
dec
ja
rolb
cld
ficoms
xchg
sbb
inc
adc
cmp
add
in
add
pop
jp
push
and
add
sbb
add
mov
jmp
cmovge
mov
aaa
push
add
ficoms
insl
int3
clc
adc
add
cmp
mov
lods
add
cwtl
add
fs
inc
mov
add
iret
sahf
xlat
or
sbb
pop
repz
stos
add
sub
adc
stos
sbb
mov
xchg
shrl
add
xchg
dec
and
fwait
sbb
adc
fnsave
shl
testb
int
dec
xchg
or
add
inc
lea
pop
addb
sbb
xchg
cwtl
jp
cltd
seta
mov
add
jb
mov
or
jnp
add
pusha
push
adc
je
xchg
push
test
add
add
xchg
icebp
push
fsts
dec
insl
dec
addb
in
cmp
fsubs
jae
adc
dec
enter
sub
or
add
cmp
add
mov
add
arpl
nop
lret
sbb
mov
inc
pop
outsl
jae
jge
call
sarb
outsl
inc
sbb
add
pop
pusha
inc
add
add
add
fcmovbe
aam
lea
xchg
movsl
movsb
add
sbb
add
stc
out
shll
popa
mov
add
xchg
addr16
dec
sbb
scas
mov
pop
jge
adc
popf
xchg
scas
add
fisubl
test
add
jb
mov
add
and
inc
fmulp
addb
addr16
add
test
add
roll
add
movsb
add
or
add
inc
aad
jo
rclb
mov
add
mov
push
xor
pusha
leave
test
js
adc
cmpsb
add
pop
scas
mov
add
xor
ds
sahf
rorl
and
add
in
in
add
jns
add
or
scas
add
jnp
ds
data16
add
add
mov
in
jg
pop
push
add
fldenv
adc
add
outsl
cmp
add
mov
adc
movsb
add
jnp
addb
adc
push
adc
sub
add
mov
push
cmp
add
mov
cli
sbb
pop
aam
adc
repnz
adc
pop
sbb
dec
cld
pop
addb
or
daa
cmc
sbb
sbb
jge
xchg
push
lea
add
in
lcall
add
in
mov
jmp
xor
add
nop
cmp
aad
popa
pslld
in
jmp
cltd
aam
or
fdivrs
add
call
add
out
inc
mov
fstl
test
shrl
pop
cmpsl
and
add
lret
add
add
xchg
and
inc
enter
push
add
or
add
fidivs
test
ljmp
jl
dec
dec
enter
cmp
mull
xor
mov
add
add
add
ja
adc
jmp
mov
rcrl
jmp
addb
mov
pop
lahf
ja
add
push
inc
fbld
daa
repz
cmp
or
add
add
push
int
imul
or
lret
xchg
add
fld
add
jae
mov
sub
mov
add
pop
out
mov
add
add
and
add
add
jns
movsb
add
xchg
pop
lods
rcll
add
dec
mul
and
add
add
mov
sbb
xchg
dec
xchg
insb
jle
xchg
adc
jmp
or
xor
test
add
mov
outsb
cwtl
and
outsb
push
inc
mov
rclb
rorl
stc
fwait
out
scas
add
add
decl
fsubrl
addr16
or
add
addr16
out
das
cmp
push
and
xchg
xor
rsqrtps
fdivrl
lds
add
push
add
adc
add
mov
insl
test
ror
outsl
insl
or
add
inc
xabort
arpl
add
lahf
lods
aaa
or
add
aam
notl
or
add
add
mov
lods
add
out
mov
sar
dec
fld
xor
xchg
sahf
enter
add
push
inc
mov
mov
jb
add
stos
mov
lahf
and
add
int3
jg
pop
xor
lock
repnz
add
add
jnp
ss
push
add
jno
add
xor
dec
rol
rcll
jne
iret
loopne
sarb
fcomp
xchg
int
add
add
add
xlat
xchg
mov
mov
mov
fincstp
into
jmp
add
fwait
pop
testl
pushf
scas
xchg
inc
out
cltd
imul
in
add
inc
imul
lcall
wrmsr
repz
inc
xchg
sbb
outsl
adc
or
add
add
or
ljmp
in
mov
add
fwait
mov
add
sub
pop
sahf
adc
in
icebp
rolb
add
xchg
add
iret
rorl
add
add
outsl
mov
add
pop
lret
add
outsw
mov
add
add
fimuls
add
xor
pop
xchg
add
jmp
mov
mov
add
add
ljmp
add
jle
adc
test
add
xor
scas
lods
add
jp
in
mov
aad
xor
pop
test
add
jae
add
mov
push
add
xor
sub
add
sbb
in
mov
mov
cmp
pop
jmp
add
add
cmp
xchg
jb
fnstenv
test
add
cmp
add
cld
lret
xlat
call
add
inc
popa
sti
xchg
std
sarb
add
add
and
add
ffreep
mov
add
pushf
jp
push
or
lea
or
add
mov
add
cmp
mov
add
add
add
inc
cli
aad
fs
sbb
iret
dec
xchg
dec
cmp
xchg
adc
lret
lret
out
fisttps
mov
add
add
add
or
add
add
dec
imul
sub
xor
sbb
pop
xor
outsl
sbbl
arpl
jmp
or
dec
push
push
add
inc
jbe
dec
jnp
add
push
jno
cmp
movsb
add
call
movsl
sbb
mov
or
daa
scas
dec
negl
mov
test
scas
mov
into
mov
add
addr16
lret
mov
add
repz
arpl
js
add
add
push
addb
pop
test
add
addb
jns
out
cmp
adc
out
subl
das
or
inc
sbb
int3
adc
add
lahf
hlt
inc
ss
mov
add
jle
add
mov
add
cmpsb
add
sahf
sub
add
ss
shl
fsubl
add
push
push
push
ds
sbb
aam
jg
pop
cld
push
shrb
push
add
sti
cmp
outsb
mov
jle
lods
cmpsb
add
inc
pop
cmp
add
fwait
ss
jl
idivl
push
or
add
movsb
add
mov
add
into
and
add
pushf
sbb
data16
sbb
loope
divb
ret
andl
mov
fsubrl
adc
jl
test
push
add
jecxz
mov
rcll
add
inc
test
add
mov
pop
in
bound
sub
ljmp
add
adc
xchg
xor
push
add
ret
iret
inc
cmpsb
add
into
mov
add
xchg
testb
adc
cmp
xchg
popl
add
mov
xor
xlat
mov
sahf
aad
add
mov
imul
inc
sti
movsb
add
push
lret
add
and
add
shlb
leave
lock
nop
daa
and
add
add
mov
add
adc
ret
mov
aad
out
xor
add
pop
add
add
repnz
pushf
dec
int
sti
das
decl
jo
mov
inc
dec
pop
ret
sbb
dec
mov
add
jns
add
int3
and
imul
add
enter
add
je
mov
ret
xchg
sbb
add
push
add
sbb
sub
add
in
mov
push
and
add
inc
addr16
test
adc
pop
sub
xor
lret
scas
mov
sbb
ret
in
mov
xchg
add
add
mov
or
add
cmp
cmpsb
add
fcomip
dec
xlat
mov
clc
aas
imul
lock
add
outsl
je
mov
add
mov
jbe
add
mov
add
cmp
cmp
mov
cwtl
and
add
xor
mov
mov
mov
add
xor
add
addr16
out
arpl
xor
sbb
jns
enter
ljmp
add
mov
add
cmp
mov
leave
stos
add
fwait
cmp
pop
loop
dec
xchg
cmp
aam
add
jno
add
jle
dec
movsl
stos
add
xorl
push
dec
mov
add
push
cmc
cmp
inc
xor
xor
xchg
pop
sub
add
add
pop
fldl
dec
sbb
lahf
xor
fstl
add
fst
push
loopne
push
ljmp
into
pusha
and
add
xor
repz
inc
loope
mov
push
scas
add
mov
and
and
je
cmpsl
fisttpl
aam
jg
jbe
out
sbb
add
jb
mov
add
push
add
enter
add
stos
mov
add
lods
xchg
add
fidivrl
jmp
mov
cmp
add
add
aas
rorb
test
or
add
repz
push
jb
mov
xchg
lret
xchg
iret
cld
inc
pop
pop
cwtl
jb
inc
daa
sbb
xor
sub
add
lahf
cmpsb
add
inc
mov
fsubl
add
add
mov
les
xor
cmpsb
add
scas
add
ficoml
mov
mov
add
sbb
addb
mov
add
and
add
jne
add
mov
add
mov
pop
std
dec
and
add
add
test
xchg
add
mov
lcall
in
add
xchg
icebp
fnsave
das
push
js
mov
dec
fbstp
and
add
imul
rclb
fcmovnb
daa
xchg
add
int3
xor
add
mov
out
xchg
sti
xchg
add
jbe
push
pop
mul
addb
cltd
push
dec
adc
ficoms
add
push
mov
add
inc
lods
add
add
add
ja
inc
lcall
imulb
loopne
loop
jle
icebp
gs
add
cld
fcmove
xor
jmp
add
xchg
add
cwtl
lock
out
cmc
shrb
add
xchg
xchg
sub
add
jb
scas
add
imul
jnp
or
add
xchg
dec
or
cmp
add
xchg
notb
and
and
mov
iret
push
addr16
sbb
add
cmp
test
ss
add
push
add
addr16
mov
cltd
cmp
sbb
addb
in
lds
xor
iret
in
add
add
add
rcrb
and
add
ljmp
xor
add
out
dec
push
add
pop
dec
mov
xchg
jae
mov
add
add
popf
fistpll
icebp
dec
inc
inc
int
in
sub
add
adc
repnz
je
add
out
cld
in
mov
add
fbld
sarl
add
fdiv
mov
add
ret
out
js
flds
fst
pusha
out
push
add
xchg
test
lea
pusha
addr16
add
push
mov
call
and
ljmp
fsubrl
xchg
sbb
and
mov
add
cltd
sahf
jmp
jmp
in
pop
mov
loope
push
add
jne
inc
nop
push
add
add
sbb
push
fdivs
mov
add
add
xor
pop
pop
mov
popf
mov
insb
mov
jo
andl
je
pop
add
add
jb
add
xor
push
jp
xchg
mov
test
add
and
add
sub
add
lcall
add
out
pusha
ljmp
add
push
add
insb
lcall
add
fwait
pop
add
xchg
cmp
out
mov
lret
test
add
inc
ja
add
imul
cmovg
jbe
mov
add
adc
mov
add
add
sub
sub
clc
mov
xchg
and
add
cmp
add
nop
adc
pop
popf
add
add
outsl
or
add
testl
dec
test
mov
add
add
fldl
add
addb
adc
test
add
je
and
add
gs
add
add
push
dec
addb
push
inc
xchg
out
incl
add
sbb
jp
sbb
add
and
add
push
jo
xor
fsubrs
ds
mov
add
adc
fcomp
mov
add
jnp
push
jmp
add
out
inc
bound
jl
add
test
sub
jnp
pop
sar
imul
mov
incb
xchg
adc
jp
iret
add
add
or
xchg
xor
gs
mov
and
add
je
imul
inc
addr16
cmpsl
fiaddl
jmp
pusha
mov
in
sub
add
jbe
sub
add
add
mov
dec
sbb
add
nop
insb
je
sbb
imulb
push
xor
jnp
mov
lock
movb
jg
icebp
inc
xchg
ffree
cmpsb
add
mov
pop
mov
call
add
push
lret
imul
add
aad
ja
loope
cld
sbb
test
xor
les
shrl
add
arpl
loop
add
mov
or
add
je
fs
pop
scas
cmp
push
int
or
add
push
mov
add
sub
mov
fwait
jge
push
insb
add
cltd
or
dec
jmp
mov
or
add
inc
push
mov
jbe
inc
cld
stos
fwait
push
fcompl
add
add
xor
push
add
in
lock
sbb
lds
jg
imul
sbb
gs
add
dec
add
add
add
lods
add
push
ret
xor
add
icebp
xchg
mov
cmove
pusha
dec
mov
add
xchg
imul
mov
add
popa
subl
lock
add
add
in
jmp
insl
dec
outsb
add
add
adc
add
cmpsb
add
jmp
dec
mov
add
mov
add
add
jmp
and
pop
and
add
xor
mov
pushf
mov
add
gs
add
sub
add
ret
rcll
enter
inc
mov
popa
out
xchg
jp
sbb
fst
inc
inc
xor
add
xor
add
pop
xor
jo
test
subl
addb
outsl
xchg
in
dec
clc
movsl
jmp
add
pop
daa
push
adc
add
add
jg
cmp
lret
scas
add
and
add
pop
jmp
lahf
dec
insb
adc
add
and
or
add
ds
clc
xchg
push
adc
addb
cmp
push
fwait
rorb
stc
jb
loopne
divl
aas
and
mov
add
fldenv
add
dec
fisubrs
add
int3
push
out
xchg
sbb
xor
aas
pop
addr16
xchg
imul
add
pop
xchg
sahf
xchg
add
mov
dec
inc
mov
in
hlt
gs
bound
pop
in
sar
inc
test
add
sub
add
add
je
inc
sbb
inc
das
repz
push
add
sar
push
fimuls
dec
dec
call
lds
xor
mov
imul
fcoms
fwait
pop
jne
dec
add
test
add
stos
add
pop
ljmp
jge
sbb
lret
mov
mov
add
jb
sub
add
scas
jae
roll
add
sub
fbstp
mov
into
or
dec
std
sub
mov
xchg
dec
aaa
xor
idivl
lods
add
aaa
cmp
lea
add
xor
mov
lea
add
add
roll
cmp
outsl
icebp
nop
ficompl
dec
mov
mov
mov
adc
add
add
add
ret
rolb
sbb
out
fimuls
add
nop
and
add
add
shlb
add
int
add
push
nop
xchg
xor
loopne
inc
and
add
adc
stos
add
push
add
rdmsr
das
sbb
roll
add
mov
jle
add
sub
add
in
mov
xchg
pushf
cmp
add
xchg
add
push
add
push
cltd
push
and
add
aas
out
cmpsb
add
mov
js
inc
or
add
add
outsl
add
add
inc
mov
pop
or
add
jbe
movsb
add
dec
scas
jg
sbb
in
cli
jmp
sarl
aam
mov
push
xchg
add
sub
add
xor
add
pop
scas
add
and
xchg
test
add
inc
rclb
add
cmp
add
aad
enter
xchg
inc
xor
add
push
insl
test
add
ret
movsl
jecxz
pusha
inc
sub
add
loopne
mov
add
add
push
jbe
push
dec
insb
fcomps
add
hlt
test
add
add
data16
add
dec
inc
adc
dec
shrd
inc
push
cmp
mov
sbb
xchg
mov
add
loopne
pop
jecxz
add
jbe
pop
dec
adc
adcl
add
dec
sbb
pushf
add
add
pop
pop
in
mov
repz
pop
das
push
mov
pusha
shll
jbe
dec
dec
cwtl
dec
and
add
dec
push
xchg
rcll
pop
pop
cmp
add
clc
or
in
adc
or
mov
inc
daa
fists
inc
cmp
pop
dec
push
sarb
cmp
fsubrl
pop
xchg
push
imul
sbb
add
add
sbb
sbb
daa
cmp
pusha
clc
and
add
ljmp
out
dec
jo
add
cmpsb
add
adc
add
bound
add
fists
jecxz
rorl
mov
add
out
or
cmp
add
mov
mov
ljmp
ds
xor
sub
loope
roll
add
sbb
loopne
mov
add
mov
iret
cmpsb
add
gs
fldenv
add
std
push
add
sbb
push
push
xchg
jo
or
add
scas
cmc
jb
add
push
ret
mov
add
popf
xlat
mov
fldt
add
push
shl
repnz
sub
add
pop
gs
add
adc
xor
jb
sysenter
push
add
loop
add
cwtl
or
add
iret
int
jns
or
cmp
add
cmp
lret
xor
mov
add
add
jnp
inc
movsb
add
push
add
test
mov
or
add
and
add
mov
cmp
add
jmp
add
gs
and
add
pushf
sub
shll
cmp
or
pop
test
add
jecxz
adc
cwtl
inc
into
lods
lret
push
add
cltd
xor
loop
add
add
or
add
cld
inc
sub
fisttpl
jno
or
enter
push
mov
pop
fnstcw
add
add
js
stc
xchg
loop
sbb
jnp
inc
xchg
add
add
sbb
ja
sub
imul
in
sub
mov
lcall
mov
push
cld
scas
add
clc
mov
add
imul
xlat
inc
xchg
stc
incl
or
dec
aam
add
pop
push
hlt
mov
add
ljmp
aad
pop
sbb
les
popf
xchg
imul
ljmp
adc
sbb
adc
and
rcll
pusha
push
rcrb
lcall
leave
ja
outsb
std
fstpl
pop
push
sar
je
xor
test
ret
mov
add
add
nop
testl
add
mov
testl
mov
mov
add
add
dec
pavgw
add
jb
add
sub
add
fucomp
xchg
lret
and
add
icebp
push
add
or
add
adc
xchg
xor
insl
mov
int
pop
cmc
nop
or
in
mov
mov
add
xor
inc
or
push
dec
push
add
jno
xchg
add
sbb
push
add
loopne
adc
add
add
js
mov
adc
lcall
mov
add
mov
mov
int
push
or
xchg
or
sar
and
add
xlat
insl
sbb
out
cmc
insl
fsub
xor
loopne
pop
push
add
pop
pop
cmp
repnz
add
sub
add
fsubs
add
or
add
add
js
jb
fdiv
addb
pop
aaa
xchg
jl
jns
cwtl
jg
add
dec
sub
sarb
inc
insb
jno
jmp
inc
fimuls
adc
movsb
add
mov
or
add
sti
out
mov
add
sti
xchg
sub
inc
mov
notb
and
add
xor
inc
cmc
sub
dec
mov
add
xchg
aad
rcrb
mov
clc
repnz
xlat
push
test
add
sub
ljmp
js
mov
fcoms
outsl
aad
adc
in
js
dec
add
add
stos
pop
dec
popf
rcr
rcrl
sub
aam
xlat
mov
ds
xchg
mov
push
repnz
int3
mov
fs
sbb
mov
dec
pop
sbb
add
lret
imul
push
movhps
incl
adc
pop
jo
lods
add
lods
add
add
sbb
add
aad
outsl
cltd
inc
xchg
arpl
scas
add
out
jmp
outsl
pusha
std
scas
and
lock
cld
loop
dec
in
loopne
out
jg
cltd
pop
xchg
xor
or
add
lods
repnz
ss
or
pop
lret
sbb
push
test
sbb
sbb
xor
sub
jnp
push
push
pushf
sub
push
cld
mov
add
orl
push
lea
push
push
call
sub
add
mov
mov
and
test
je
mov
push
push
bnd
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
push
lret
lea
andl
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
imul
and
jne
call
rorb
notrack
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
add
sub
and
jmp
push
mov
jmp
jmp
jp
add
lock
mov
movsb
add
imul
int
sub
inc
push
add
dec
lahf
sbb
push
rcrl
add
add
adc
add
fldl
add
xor
mov
add
into
or
add
int3
xor
xor
jge
mov
add
lock
call
add
add
mov
add
cwtl
clc
arpl
mov
incl
cmp
fstl
lea
add
test
add
jo
jns
inc
inc
nop
inc
and
add
and
add
pusha
and
add
dec
adc
stos
add
dec
mov
dec
xchg
fs
pop
dec
cmpsb
add
inc
fidivrs
ljmp
xchg
pop
packuswb
sbb
add
lret
add
add
add
cwtl
pop
push
add
out
out
inc
and
add
xor
jo
scas
adc
ja
mov
pop
in
mov
mov
add
add
xchg
jnp
push
jno
and
add
jns
decb
pop
inc
loope
or
aad
jmp
cmpsl
lds
xchg
cmp
add
jecxz
add
ljmp
ret
and
add
jne
out
add
arpl
and
add
add
leave
aad
add
add
out
popa
stc
xchg
lret
add
jnp
xchg
ffreep
push
xor
add
ds
fisubrs
xor
stos
addb
out
daa
inc
and
add
mov
add
aad
add
outsl
cmp
stos
add
sub
add
add
jnp
add
pop
xor
push
cmp
test
fcompl
add
adc
icebp
xchg
imul
adc
push
jns
mov
jnp
test
add
pushf
repnz
dec
mov
data16
add
cli
dec
cld
fiadds
add
mov
movsl
xchg
dec
sub
add
xchg
add
nop
fcmovb
push
push
or
fsubs
icebp
hlt
out
add
dec
aaa
inc
divl
or
sub
add
dec
movsl
out
xor
pop
stos
sbb
inc
sub
out
andl
add
pop
cmpl
js
lret
add
and
add
mov
add
shr
fisubrs
add
cmp
leave
and
pop
pusha
ret
add
cmp
lock
and
add
push
dec
aaa
roll
pop
lea
xchg
inc
pop
fstl
and
add
sarl
add
mov
xor
add
xchg
call
pop
rorb
add
scas
add
lods
add
data16
mov
lock
inc
xlat
pop
mov
pause
sbb
inc
das
mov
jg
dec
sti
inc
imul
add
add
fsubrp
jecxz
int
jo
xchg
nop
loopne
cmp
test
add
pusha
icebp
xor
insl
cmp
outsl
int
movsl
jmp
hlt
xchg
mov
mov
xor
dec
popf
xchg
mov
and
add
mov
add
push
add
mov
test
add
add
mov
mov
inc
pop
ljmp
xchg
dec
push
xor
fsubl
add
cmp
push
add
popf
xor
add
jo
xor
add
mov
fwait
inc
mov
add
fwait
xchg
add
mov
imul
push
movsb
add
push
call
jbe
adc
gs
inc
adc
add
add
pushf
xlat
add
add
mov
add
jnp
or
add
out
dec
mov
add
testl
insl
ret
xchg
lret
out
add
xchg
xchg
adc
repz
add
add
jbe
inc
shll
pop
adc
mov
add
push
add
xor
add
jg
repz
mov
xlat
test
mov
fbld
fs
jecxz
je
loop
add
xchg
add
add
mov
add
addb
addb
out
jle
xorl
add
add
loopne
shlb
adc
add
stos
xchg
or
dec
out
jbe
jb
fcompl
out
popf
outsl
pop
jns
xchg
xchg
popf
sub
aaa
or
add
inc
int
pop
insl
dec
idiv
lahf
pop
push
lods
add
sub
mov
jb
mov
add
adc
adc
push
cmpsb
add
cmp
sbb
or
mov
negl
add
mov
push
sbbl
fiadds
add
rorb
add
add
add
fdivl
cltd
popf
fdivs
add
add
mov
add
addb
aaa
loopne
xor
in
fnstsw
aas
jno
loop
jb
pop
scas
add
shrb
or
add
loope
mov
add
or
push
lcall
push
pop
mov
cmp
cwtl
adc
lods
test
add
movsb
add
pop
clc
ret
add
add
add
or
cmp
add
and
pop
xor
add
jp
negb
cmpsb
add
popw
mov
stc
ja
mov
add
jne
iret
addb
aad
mov
dec
daa
add
push
sbb
xlat
jge
aas
rcl
mov
add
mov
xchg
mov
icebp
xor
fdivp
mov
inc
test
lea
jmp
popf
mov
or
xchg
outsb
xchg
insb
dec
pop
dec
sub
add
mov
xor
push
mov
int3
repnz
cltd
inc
add
add
leave
mov
in
or
jl
inc
popa
or
add
add
fsubl
pop
orl
negl
mov
pop
mov
xchg
add
incl
in
pop
adc
shll
test
add
aaa
lods
add
cli
loopne
loopne
add
pop
mov
xchg
push
dec
addb
pop
jae
add
fmuls
je
fadd
dec
dec
push
and
loop
sbb
mov
add
jecxz
add
mov
pop
movsb
add
jae
lret
das
and
add
add
sub
outsb
xor
push
std
pop
fsubrs
jg
popf
mull
push
adc
add
aas
pop
and
add
movsb
add
pop
xor
jbe
push
adc
cmp
in
popf
add
add
add
add
add
mov
flds
dec
mov
add
jo
add
lds
pop
ljmp
jg
mov
add
mov
lahf
push
insl
gs
fisubrs
jne
jae
add
dec
or
add
mov
xor
add
jle
fwait
or
add
or
add
mov
les
push
pop
fsubl
popf
in
je
and
add
out
inc
xchg
pop
jbe
cmp
add
adc
int3
add
add
add
and
add
mov
adc
cmp
add
cmp
sti
ja
add
add
pop
in
std
mov
das
mov
xchg
out
sbb
sbb
mov
jmp
sbb
push
shlb
sub
add
jmp
addb
fidivs
negl
mov
add
test
out
mov
xor
add
loop
add
jae
aaa
or
sbb
mov
add
push
pop
imulb
add
add
xchg
add
and
add
movsb
add
dec
sbb
jmp
add
mov
add
mov
js
push
add
jb
dec
jb
jo
add
aas
cltd
lcall
das
pop
daa
mov
mov
add
loopne
fs
pop
add
cli
sahf
sub
xchg
pop
sub
xchg
lods
addb
jo
and
add
add
adc
inc
push
aaa
pop
adc
add
inc
dec
movsb
add
movsb
add
pop
adc
mov
jb
insl
xchg
add
add
push
lods
out
stos
repz
in
cmp
dec
cli
out
stos
mov
stos
or
add
or
andl
mov
and
add
xchg
fisubrs
ljmp
sbb
mov
add
jnp
or
push
je
add
adc
les
scas
add
mov
push
mov
dec
call
icebp
push
jnp
mov
add
loop
add
movsb
add
jbe
jle
loop
xor
add
enter
pushf
add
mov
sub
add
hlt
repz
mov
mov
or
nop
and
add
add
jae
sub
icebp
pop
testb
cmp
add
jl
add
push
and
add
mov
add
dec
loop
in
testl
add
xor
jl
sti
and
add
add
addb
ss
lret
into
cli
mov
adc
add
repnz
xchg
ljmp
add
cli
ja
mov
sub
add
jl
in
sbb
lea
cmc
inc
lea
jno
mov
ret
add
jmp
ljmp
add
add
sar
pop
repnz
add
cmp
addr16
mov
imul
pop
in
test
sar
xor
jb
adc
sub
ds
cli
lret
sbb
hlt
mov
add
mov
fidivs
add
push
lcall
clc
push
add
cli
icebp
cmpsl
imul
add
dec
mov
add
add
add
lret
add
popa
adc
mov
out
jno
add
sbb
push
in
push
or
cmp
dec
xor
popf
adc
add
jbe
fstp
pop
inc
or
push
lds
push
roll
add
add
xlat
aam
mov
mov
xchg
popf
sti
scas
cmp
add
call
xchg
mov
add
dec
cmp
mov
mov
jo
lahf
shr
stos
pop
fistl
sbb
adc
add
add
sbb
mov
add
mov
das
jge
xchg
add
or
insb
inc
push
cmp
dec
decl
add
les
push
out
and
add
push
add
lret
decb
fnstenv
call
add
sub
add
test
mov
stos
fidivs
clc
cmc
scas
mov
fnstenv
push
ss
push
outsb
xchg
int
mov
add
dec
or
add
xchg
or
add
pop
rorb
add
inc
sub
add
add
insb
jecxz
inc
add
add
mov
call
add
or
mov
lret
repz
shlb
add
mov
add
push
mov
mov
dec
mov
add
mov
pushf
inc
lods
add
cmpsb
add
stc
sbb
and
add
jb
sub
add
mov
add
add
frstor
test
add
outsb
cmc
jb
jns
jmp
addb
sbb
sbb
in
pop
or
add
stc
dec
dec
popf
push
mov
cmp
xchg
inc
arpl
and
les
xchg
inc
push
adc
add
add
mov
mov
cli
add
sti
stc
orl
iret
and
pop
mov
add
cwtl
in
or
add
fsubp
and
add
lahf
fwait
push
mov
add
sbb
add
adc
add
add
add
stc
imul
add
add
stos
add
shrb
add
add
jmp
repnz
mov
out
xchg
push
lds
lods
add
test
add
dec
in
mov
movsb
add
negb
jge
sti
xor
movsb
add
stos
cmpsl
sub
add
fmul
jb
jl
add
inc
mov
add
sub
add
add
or
add
lods
add
inc
outsl
out
dec
inc
inc
mov
add
stos
add
xor
add
stos
add
mov
add
aam
add
mov
add
add
inc
mov
add
push
xor
add
jle
add
jle
xchg
adc
push
pop
int3
fmuls
add
jp
add
add
fistpl
add
out
add
ror
addl
add
sub
xor
add
ss
adc
std
btc
popa
icebp
mov
js
add
das
cli
jl
xorl
hlt
mov
sbb
xchg
pop
stos
add
mov
jae
push
lds
js
mov
add
movsb
add
and
add
mov
movsb
add
arpl
add
dec
stos
add
sbb
icebp
and
add
add
sub
arpl
fwait
insb
push
mov
add
aas
aaa
loop
sbbl
rcrl
and
mov
add
cmp
lds
nop
mov
cmp
daa
cmp
pop
jae
das
sbb
imul
mov
push
add
mov
in
inc
dec
cmp
addb
pop
adc
mov
add
sar
jae
inc
cld
mov
stos
add
sub
add
clc
out
mov
xchg
inc
xchg
or
add
arpl
sbb
mov
add
add
add
movsl
nop
pop
sahf
loopne
push
dec
in
and
std
ja
inc
adc
push
push
out
add
stos
xchg
and
add
jo
pop
fimull
stos
pusha
int3
dec
cltd
leave
jl
add
or
add
jae
stos
add
mov
insb
cmp
fidivrs
add
xchg
cltd
push
push
add
enter
add
push
add
sub
add
dec
mov
mov
pop
std
addr16
jb
add
lcall
xchg
js
add
mov
add
add
jle
inc
push
add
jne
cwtl
jnp
or
add
add
adc
loope
scas
xchg
mov
fidivrl
add
push
pop
dec
mov
aas
fisttpl
pop
adc
add
add
push
mov
sub
add
add
cmpsl
insb
mov
push
dec
cli
add
iret
insl
push
push
and
add
xchg
fcoms
inc
iret
stc
xchg
lret
stos
add
addr16
mov
push
lea
sbb
add
in
gs
add
xchg
mov
mov
lea
jb
lods
add
sbb
mov
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
or
in
push
push
mov
xchg
ret
leave
add
pusha
push
fwait
mov
clc
repnz
nop
nop
jae
and
mov
repnz
nop
nop
jae
xchg
adc
leave
add
push
mov
xchg
ret
add
xor
jae
add
call
clc
repnz
nop
nop
jae
add
jo
add
cld
nop
nop
jae
add
add
add
adc
nop
jmp
add
pop
add
lea
pop
nop
push
mov
leave
nop
jmp
add
add
nop
dec
add
pop
clc
repnz
nop
nop
jae
add
mov
xchg
inc
repz
clc
repnz
nop
nop
jae
sahf
add
xchg
pop
and
clc
repnz
nop
nop
jae
add
add
loopne
int3
into
faddl
add
clc
repnz
nop
nop
jae
push
jo
add
add
add
clc
repnz
nop
nop
jae
mov
test
adc
add
repnz
nop
nop
jae
or
repnz
nop
nop
jae
pop
stos
add
add
xchg
add
xchg
push
push
mov
xchg
ret
into
add
sbb
add
in
add
mov
popf
clc
repnz
nop
nop
jae
pusha
add
inc
push
nop
push
mov
leave
nop
jmp
add
inc
clc
repnz
nop
nop
jae
jae
pusha
cmp
movswl
clc
repnz
nop
nop
jae
mov
in
rorl
nop
jae
sahf
add
pusha
in
add
adc
mov
nop
push
mov
leave
nop
jmp
add
add
pop
mov
nop
push
mov
leave
nop
jmp
xor
xor
mov
add
push
clc
repnz
nop
nop
jae
add
out
pop
fld1
push
mov
xchg
ret
mov
leave
add
mov
int
dec
push
clc
repnz
nop
nop
jae
add
ds
add
add
add
push
clc
repnz
nop
nop
jae
mov
pop
add
call
clc
repnz
nop
nop
jae
add
pop
mov
push
add
clc
repnz
nop
nop
jae
js
or
sub
repnz
nop
nop
jae
stos
add
add
in
push
clc
repnz
nop
nop
jae
add
add
add
add
add
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
add
add
add
or
repnz
nop
nop
jae
add
xchg
mov
push
mov
xchg
ret
loopne
std
pushf
add
shll
xor
push
mov
xchg
ret
sahf
loopne
pop
add
pusha
jbe
shr
nop
push
mov
leave
nop
jmp
add
add
add
fdivs
push
es
jecxz
push
mov
leave
nop
jmp
pop
add
jbe
repnz
mov
push
mov
xchg
ret
std
ret
in
or
add
inc
mov
clc
repnz
nop
nop
jae
leave
into
sub
pop
clc
repnz
nop
nop
jae
add
add
add
cmp
nop
push
mov
leave
nop
jmp
add
add
add
cmp
imul
nop
push
mov
leave
nop
jmp
add
and
add
add
jnp
cld
nop
nop
jae
add
add
add
mov
icebp
clc
repnz
nop
nop
jae
rcrl
xlat
je
clc
repnz
nop
nop
jae
add
pusha
xchg
lea
nop
push
mov
leave
nop
jmp
in
add
clc
repnz
nop
nop
jae
xor
mov
add
repnz
nop
nop
jae
jae
xchg
mov
jg
nop
push
mov
leave
nop
jmp
pusha
add
mov
shl
clc
repnz
nop
nop
jae
add
pushf
add
jnp
nop
nop
jae
add
add
push
push
mov
xchg
ret
adc
mov
imul
ja
add
jae
add
ret
add
pushf
jge
clc
repnz
nop
nop
jae
add
xchg
add
add
daa
mov
push
mov
xchg
ret
add
add
push
add
mov
rclb
addl
cmp
ret
push
add
sub
repnz
nop
nop
jae
mov
add
sbb
add
nop
push
mov
leave
nop
jmp
add
js
push
inc
xchg
push
clc
repnz
nop
nop
jae
add
stos
add
call
clc
repnz
nop
nop
jae
add
pop
adc
cld
nop
nop
jae
sub
add
push
clc
repnz
nop
nop
jae
std
jbe
add
ds
out
sbb
nop
jae
sub
pusha
push
mov
xchg
ret
loopne
ret
or
add
js
insb
xlat
xor
push
mov
xchg
ret
add
ds
add
add
add
fstpt
clc
repnz
nop
nop
jae
add
add
addb
add
add
arpl
repnz
nop
nop
jae
mov
mov
pop
jne
clc
repnz
nop
nop
jae
dec
add
add
add
add
inc
xor
clc
repnz
nop
nop
jae
add
sbb
add
repnz
nop
nop
jae
or
fmull
sub
repnz
nop
nop
jae
add
add
lahf
pop
clc
repnz
nop
nop
jae
add
add
into
xchg
xchg
std
in
in
fisubrl
nop
nop
jae
add
add
out
add
outsb
ljmp
cld
nop
nop
jae
mov
leave
gs
push
mov
xchg
ret
sbb
add
fsubl
add
nop
nop
jae
add
add
add
xor
repz
repnz
nop
nop
jae
and
out
mov
add
clc
repnz
nop
nop
jae
jbe
mov
mov
adc
repnz
nop
nop
jae
fdivl
add
jnp
mov
adc
repnz
nop
nop
jae
or
lds
repnz
nop
nop
jae
add
pusha
add
add
and
or
clc
repnz
nop
nop
jae
and
call
inc
add
stos
add
add
add
sub
jge
clc
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
in
insb
add
pop
add
push
mov
xchg
ret
jo
into
jbe
add
xor
call
clc
repnz
nop
nop
jae
mov
pop
inc
push
nop
push
mov
leave
nop
jmp
fcmovu
repz
faddl
jbe
rcrb
and
repnz
nop
nop
jae
add
add
mov
add
cmc
jne
add
add
cmp
insb
add
fs
add
clc
repnz
nop
nop
jae
mov
mov
nop
push
mov
leave
nop
jmp
add
test
add
cs
clc
repnz
nop
nop
jae
add
mov
ljmp
cmp
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
add
mov
int
xchg
cmpl
nop
jae
mov
std
int3
mov
add
repnz
nop
nop
jae
add
in
add
repnz
nop
nop
jae
pusha
add
rcrl
add
sub
add
popl
sar
repnz
nop
nop
jae
xor
repz
add
and
clc
repnz
nop
nop
jae
insb
mov
or
add
adc
repnz
nop
nop
jae
stos
add
add
insb
pop
pushl
push
mov
xchg
ret
mov
sbb
push
push
mov
xchg
ret
dec
into
leave
add
repz
jbe
clc
repnz
nop
nop
jae
mov
jo
mov
repnz
nop
nop
jae
xchg
lea
or
jno
add
js
mov
das
add
nop
push
mov
leave
nop
jmp
add
jae
add
outsb
xor
mov
leave
nop
jmp
or
and
leave
test
add
add
sub
add
repnz
nop
nop
jae
jbe
pop
and
add
clc
repnz
nop
nop
jae
sbb
add
mov
clc
repnz
nop
nop
jae
add
fcompl
push
add
sub
js
repnz
nop
nop
jae
and
add
mov
ret
repnz
nop
nop
jae
add
roll
add
nop
nop
jae
faddl
ds
add
or
or
repnz
nop
nop
jae
ljmp
add
test
clc
repnz
nop
nop
jae
pusha
add
lea
repnz
nop
nop
jae
or
pop
stos
js
add
out
orl
xchg
ret
js
fidivrl
ror
ret
clc
repnz
nop
nop
jae
sub
loopne
add
sbb
push
mov
xchg
ret
add
sub
inc
xchg
clc
repnz
nop
nop
jae
add
add
in
ljmp
call
clc
repnz
nop
nop
jae
or
mov
lahf
add
add
repnz
nop
nop
jae
or
subl
mov
leave
nop
jmp
rcrl
add
push
jne
nop
push
mov
leave
nop
jmp
add
add
das
xchg
xchg
ret
add
add
add
add
xor
ja
nop
push
mov
leave
nop
jmp
jo
pop
or
add
mov
add
xor
add
aaa
push
clc
repnz
nop
nop
jae
stos
faddl
mov
popa
push
push
mov
xchg
ret
out
add
or
cmp
sbb
test
nop
push
mov
leave
nop
jmp
pusha
in
mov
repnz
mov
leave
nop
jmp
add
add
jp
add
clc
repnz
nop
nop
jae
add
into
add
add
jne
clc
repnz
nop
nop
jae
int3
add
jbe
add
fisubrs
add
push
add
pop
lcall
stc
mov
xchg
ret
or
pushf
js
add
jo
movzwl
clc
repnz
nop
nop
jae
add
or
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
mov
sub
cmp
ret
add
add
push
push
mov
xchg
ret
add
fdivrl
jbe
jnp
cld
nop
nop
jae
mov
add
add
into
and
cld
nop
nop
jae
sahf
in
sub
add
sbb
repnz
nop
nop
jae
int3
or
pop
push
mov
xchg
ret
and
add
stos
adc
loop
push
mov
xchg
ret
add
add
add
add
cld
nop
nop
jae
add
add
pop
fmul
xchg
mov
nop
push
mov
leave
nop
jmp
jbe
pusha
add
mov
push
inc
sbb
repnz
nop
nop
jae
xor
jbe
pop
fld1
push
mov
xchg
ret
add
jbe
shlb
add
clc
repnz
nop
nop
jae
add
add
add
std
pushl
add
add
insb
add
add
sbb
clc
repnz
nop
nop
jae
xchg
js
sahf
add
das
mov
clc
repnz
nop
nop
jae
add
add
add
add
push
mov
xchg
ret
or
add
roll
xchg
fld1
push
mov
xchg
ret
pop
fdivl
add
add
jmp
shrb
repnz
nop
nop
jae
or
sahf
jle
add
pop
mov
jnp
inc
add
add
add
insb
sub
add
fbstp
fistl
add
and
nop
loopne
pop
mov
add
cmpsb
add
push
cmp
imul
clc
repnz
nop
nop
jae
add
addb
rorb
insb
inc
jb
clc
repnz
nop
nop
jae
add
ljmp
repnz
nop
nop
jae
pop
sbb
xchg
fiaddl
pushf
mov
jae
repnz
nop
nop
jae
add
add
adc
nop
jae
add
sahf
insb
mov
cld
nop
nop
jae
jae
and
add
push
mov
xchg
ret
add
add
in
or
repnz
nop
nop
jae
xchg
add
add
ret
clc
repnz
nop
nop
jae
add
stos
nop
pop
add
add
add
clc
repnz
nop
nop
jae
ret
loopne
mov
jae
mov
nop
push
mov
leave
nop
jmp
mov
dec
clc
dec
inc
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
pop
add
add
faddl
mov
int
clc
repnz
nop
nop
jae
sub
mov
sbb
fidivl
aad
inc
push
mov
xchg
ret
nop
pop
mov
or
jbe
clc
repnz
nop
nop
jae
roll
std
jbe
adc
clc
repnz
nop
nop
jae
ljmp
inc
clc
repnz
nop
nop
jae
add
add
add
add
cmpl
nop
push
mov
leave
nop
jmp
nop
ret
dec
in
mov
or
mov
xchg
ret
add
in
add
insb
insb
int3
out
fistpl
push
mov
xchg
ret
add
jbe
dec
push
clc
repnz
nop
nop
jae
add
pusha
add
pusha
xchg
nop
lcall
in
leave
nop
jmp
add
lea
int3
add
in
leave
nop
jmp
add
add
repnz
out
push
push
mov
xchg
ret
add
add
repz
add
mov
leave
nop
jmp
leave
add
add
dec
inc
pop
push
mov
xchg
ret
jbe
into
add
std
jae
xchg
inc
add
clc
repnz
nop
nop
jae
add
add
add
lock
nop
nop
jae
add
faddl
add
push
mov
leave
nop
jmp
add
dec
dec
push
add
xchg
jmp
add
add
int3
mov
sub
add
add
inc
lock
repnz
nop
nop
jae
add
add
push
push
mov
xchg
ret
into
add
and
add
add
push
mov
xchg
ret
mov
add
push
clc
repnz
nop
nop
jae
pop
stos
pusha
add
repnz
nop
nop
jae
std
int3
add
add
lcall
add
clc
repnz
nop
nop
jae
or
add
cmp
nop
nop
jae
leave
add
add
int3
cmp
jg
dec
imul
nop
jae
add
mov
push
mov
lcall
add
div
nop
push
mov
leave
nop
jmp
in
shrl
xchg
add
js
call
clc
repnz
nop
nop
jae
mov
jbe
jne
clc
repnz
nop
nop
jae
pop
pop
add
test
push
mov
xchg
ret
add
add
ljmp
rep
clc
repnz
nop
nop
jae
mov
into
jbe
add
xchg
cld
adc
cwtl
sub
pop
add
add
pop
add
add
mov
jns
clc
repnz
nop
nop
jae
fcoml
ds
mov
push
inc
add
add
xchg
add
add
add
test
cld
nop
nop
jae
and
push
mov
xchg
ret
add
into
ret
push
add
faddl
mov
call
inc
add
sub
ljmp
call
inc
add
adc
jbe
aas
mov
push
mov
xchg
ret
into
add
pusha
lea
push
clc
repnz
nop
nop
jae
add
add
pop
pop
push
or
add
sbb
add
add
add
jo
add
add
mov
leave
nop
jmp
int3
jae
add
jbe
or
add
cmp
cmp
ret
add
add
faddl
add
pop
call
clc
repnz
nop
nop
jae
add
pop
add
clc
repnz
nop
nop
jae
add
mov
add
pop
push
push
mov
leave
nop
jmp
add
pop
add
test
repnz
nop
nop
jae
mov
loopne
add
gs
clc
repnz
nop
nop
jae
ret
rcrl
add
fbstp
sar
repnz
nop
nop
jae
add
or
add
adc
clc
repnz
nop
nop
jae
ljmp
add
and
clc
repnz
nop
nop
jae
mov
jbe
ficompl
jmp
inc
clc
repnz
nop
nop
jae
adc
add
ss
scas
push
clc
repnz
nop
nop
jae
add
add
or
push
push
mov
xchg
ret
and
xor
add
nop
nop
jae
in
sarl
lds
clc
repnz
nop
nop
jae
mov
into
add
outsb
inc
add
sub
push
add
je
add
nop
pop
pop
or
rolb
add
lock
add
jae
rorl
repnz
nop
nop
jae
add
jae
add
cld
nop
nop
jae
roll
sub
or
mov
clc
repnz
nop
nop
jae
add
mov
adcb
jmp
add
add
js
xor
nop
push
mov
leave
nop
jmp
and
loopne
sub
add
add
xchg
icebp
add
clc
repnz
nop
nop
jae
pushf
sub
and
add
clc
repnz
nop
nop
jae
mov
add
fwait
clc
repnz
nop
nop
jae
insb
jae
in
add
add
add
add
out
je
lea
clc
repnz
nop
nop
jae
sbb
add
xchg
xor
push
mov
xchg
ret
add
in
add
fimull
add
clc
repnz
nop
nop
jae
add
jo
in
imul
clc
repnz
nop
nop
jae
stos
xchg
add
sub
add
inc
xchg
pushl
clc
repnz
nop
nop
jae
xchg
add
add
pusha
add
add
add
std
push
nop
push
mov
leave
nop
jmp
pop
cmp
add
xor
add
pop
clc
repnz
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
add
add
xchg
jne
clc
repnz
nop
nop
jae
xchg
add
jne
clc
repnz
nop
nop
jae
sahf
add
xor
clc
repnz
nop
nop
jae
pop
add
loopne
mov
push
mov
xchg
ret
mov
or
fidivrl
je
clc
repnz
nop
nop
jae
add
add
push
mov
leave
nop
jmp
in
mov
and
add
lds
xor
xchg
ret
mov
add
push
add
pop
add
nop
push
mov
leave
nop
jmp
ret
add
add
ret
pop
stos
sub
clc
repnz
nop
nop
jae
lea
ret
add
rorl
clc
clc
repnz
nop
nop
jae
mov
mov
repnz
nop
nop
jae
add
mov
pusha
jbe
cmc
fistpl
clc
repnz
nop
nop
jae
fisubl
jne
push
or
repnz
nop
nop
jae
mov
add
and
shl
stos
clc
repnz
nop
nop
jae
add
pop
das
fwait
push
mov
xchg
ret
nop
loopne
add
xchg
dec
add
lods
add
push
pop
and
add
or
cmpsb
insb
inc
add
xchg
out
add
add
add
mov
clc
repnz
nop
nop
jae
rol
add
add
or
rclb
push
addb
cmp
ret
add
add
xchg
sub
jne
push
mov
xchg
ret
add
add
add
clc
repnz
nop
nop
jae
add
dec
out
fistpl
push
mov
xchg
ret
insb
add
loopne
add
add
clc
repnz
nop
nop
jae
add
add
add
jbe
clc
repnz
nop
nop
jae
add
jbe
add
add
sbb
lcall
in
leave
nop
jmp
jae
mov
aam
mov
clc
repnz
nop
nop
jae
leave
add
add
f2xm1
call
nop
jmp
add
out
test
repnz
nop
nop
jae
and
add
add
clc
repnz
nop
nop
jae
pop
pop
jae
into
add
hlt
and
add
jmp
and
add
add
xor
js
adc
push
xor
push
mov
cs
das
movsl
subl
int3
pop
jmp
add
repz
add
add
in
fisttpl
nop
nop
jae
add
sbb
add
dec
pop
rep
clc
repnz
nop
nop
jae
add
add
add
push
nop
push
mov
leave
nop
jmp
xchg
add
mov
dec
push
mov
xchg
ret
mov
add
lea
clc
repnz
nop
nop
jae
repz
add
leave
sub
mov
xchg
ret
pop
lea
insb
xchg
lea
insl
inc
add
stos
jbe
jbe
in
adc
push
mov
xchg
ret
add
fmul
daa
pop
push
mov
xchg
ret
add
add
in
add
clc
repnz
nop
nop
jae
add
pop
insb
add
jbe
push
push
clc
repnz
nop
nop
jae
jbe
add
pushf
in
imul
mov
add
add
mov
mov
repz
repnz
nop
nop
jae
pop
out
pop
into
sahf
add
jne
clc
repnz
nop
nop
jae
loopne
in
ljmp
clc
repnz
nop
nop
jae
sbb
add
fiaddl
incl
sti
clc
repnz
nop
nop
jae
add
insb
or
sbb
repnz
nop
nop
jae
pusha
sub
pop
aad
push
mov
xchg
ret
adc
add
add
jbe
add
movsl
jne
clc
repnz
nop
nop
jae
lea
mov
xchg
ret
add
pop
pop
push
add
adc
mov
xchg
ret
or
lea
sub
add
cld
nop
nop
jae
add
add
call
leave
nop
jmp
add
pop
sahf
add
mov
lcall
add
add
and
lea
add
fistpl
nop
push
mov
leave
nop
jmp
add
add
mov
push
and
add
mov
clc
repnz
nop
nop
jae
add
add
fcoms
sbbb
ret
xor
roll
add
mov
xchg
ret
jbe
ret
add
dec
mov
clc
repnz
nop
nop
jae
add
add
pushf
add
int
clc
repnz
nop
nop
jae
pop
pop
xchg
mov
add
orl
push
adc
add
out
add
jbe
add
jno
repz
repnz
nop
nop
jae
add
add
jbe
mov
and
clc
repnz
nop
nop
jae
add
jo
mov
jge
xchg
rcl
sbb
repnz
nop
nop
jae
add
pushf
xor
cli
rorl
push
std
clc
repnz
nop
nop
jae
dec
pop
add
outsl
loopne
repnz
nop
nop
jae
add
mov
push
mov
xchg
ret
add
pop
add
and
call
nop
jmp
add
add
stos
add
sub
add
add
clc
repnz
nop
nop
jae
mov
push
add
push
mov
xchg
ret
mov
mov
add
add
call
nop
jae
faddl
add
add
loopne
add
clc
repnz
nop
nop
jae
add
jbe
stos
add
add
aad
add
push
mov
xchg
ret
add
pop
adc
mov
nop
push
mov
leave
nop
jmp
xchg
xor
addb
jbe
mov
nop
push
mov
leave
nop
jmp
loopne
sbb
fiaddl
clc
repnz
nop
nop
jae
out
add
add
inc
add
mov
mov
stos
ljmp
nop
push
mov
leave
nop
jmp
add
add
add
movsb
add
push
pop
div
nop
push
mov
leave
nop
jmp
std
or
leave
jp
pop
mov
push
mov
xchg
ret
out
add
add
cmp
push
mov
xchg
ret
insb
add
std
xor
add
xchg
push
push
push
mov
xchg
ret
out
mov
jo
cmp
jmp
nop
nop
jae
add
pop
add
add
pop
clc
repnz
nop
nop
jae
jbe
add
mov
jbe
test
jb
add
leave
nop
mov
lret
mov
clc
repnz
nop
nop
jae
add
add
cwtl
out
fistpl
nop
push
mov
leave
nop
jmp
mov
add
mov
xchg
ret
or
mov
nop
sbb
sti
icebp
inc
add
add
pusha
or
add
pop
call
nop
push
mov
leave
nop
jmp
add
add
xor
ret
add
clc
repnz
nop
nop
jae
add
pop
or
in
xor
popl
xchg
ret
or
and
xchg
inc
in
lret
aaa
add
clc
repnz
nop
nop
jae
or
add
movswl
clc
repnz
nop
nop
jae
add
mov
rclb
add
and
pusha
insb
add
jbe
mov
nop
push
mov
leave
nop
jmp
int3
or
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
push
mov
xchg
ret
add
add
sub
add
mov
clc
repnz
nop
nop
jae
into
stos
add
fidivrl
push
outsb
dec
cmp
nop
push
mov
leave
nop
jmp
or
lea
fwait
clc
repnz
nop
nop
jae
sub
push
loopne
mov
jae
or
add
shrl
addb
nop
push
mov
leave
nop
jmp
pusha
add
enter
seto
in
leave
nop
jmp
pop
in
add
sub
mov
repnz
nop
nop
jae
sub
pop
addb
mov
nop
push
mov
leave
nop
jmp
or
mov
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
add
add
int3
nop
mov
add
in
clc
repnz
nop
nop
jae
add
add
in
add
in
push
mov
xchg
ret
cmp
ljmp
nop
push
mov
leave
nop
jmp
add
xor
clc
repnz
nop
nop
jae
add
pushl
clc
repnz
nop
nop
jae
add
add
addb
fstps
mov
xchg
ret
stos
in
pusha
ret
xor
add
xchg
xchg
mov
nop
push
mov
leave
nop
jmp
pop
sbb
push
add
clc
repnz
nop
nop
jae
add
and
push
push
mov
xchg
ret
add
add
mov
mov
repnz
nop
nop
jae
sub
mov
lea
clc
repnz
nop
nop
jae
add
add
add
or
add
ret
push
mov
xchg
ret
or
add
mov
repnz
nop
nop
jae
into
into
pop
pusha
roll
mov
pusha
clc
repnz
nop
nop
jae
faddl
add
xor
lahf
push
push
mov
xchg
ret
in
add
add
fcoml
pop
popl
clc
repnz
nop
nop
jae
into
add
mov
add
insl
mov
clc
repnz
nop
nop
jae
sub
mov
cmpw
nop
push
mov
leave
nop
jmp
mov
roll
mov
xchg
ret
add
mov
pop
je
clc
repnz
nop
nop
jae
in
into
fs
je
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
add
mov
push
clc
repnz
nop
nop
jae
sahf
add
add
mov
push
mov
xchg
ret
pop
add
add
repnz
nop
nop
jae
or
sub
test
add
cmpw
nop
push
mov
leave
nop
jmp
faddl
pop
or
add
sub
sar
cld
nop
nop
jae
add
out
sub
cmpsl
not
push
mov
xchg
ret
add
add
nop
into
js
sahf
inc
cld
clc
repnz
nop
nop
jae
jbe
add
pusha
mov
mov
clc
repnz
nop
nop
jae
cmp
ljmp
and
clc
repnz
nop
nop
jae
pop
and
into
or
stc
add
cwtl
fwait
inc
add
add
and
add
clc
repnz
nop
nop
jae
jae
add
fldpi
clc
repnz
nop
nop
jae
add
add
sti
add
add
nop
push
mov
leave
nop
jmp
add
repz
clc
repnz
nop
nop
jae
and
lret
clc
repnz
nop
nop
jae
shll
and
mov
clc
repnz
nop
nop
jae
jo
or
add
sbb
push
mov
xchg
ret
pop
int3
add
int3
xor
decl
popl
xchg
ret
mov
add
add
nop
push
mov
leave
nop
jmp
add
add
or
mov
lcall
into
add
sub
pop
nop
push
mov
leave
nop
jmp
js
or
sahf
jbe
xchg
and
add
add
pop
fistpl
push
mov
xchg
ret
into
mov
mov
push
mov
xchg
ret
add
add
fimull
clc
repnz
nop
nop
jae
or
add
xor
add
nop
jmp
add
add
pop
push
push
mov
xchg
ret
mov
add
or
add
nop
nop
jae
mov
add
add
pusha
nop
push
mov
leave
nop
jmp
in
dec
in
add
add
mov
clc
repnz
nop
nop
jae
add
dec
dec
xor
rclb
jae
add
repz
nop
in
sub
je
js
mov
xchg
ret
jbe
xchg
add
add
sbb
pushf
jns
add
jae
add
adc
nop
jmp
add
add
add
cld
nop
nop
jae
add
add
sub
add
clc
repnz
nop
nop
jae
xchg
loopne
int3
add
pop
push
mov
xchg
ret
and
push
add
fstpl
mov
xchg
ret
or
add
loopne
into
in
mov
and
push
mov
xchg
ret
pop
out
mov
add
clc
repnz
nop
nop
jae
or
jbe
add
or
nop
nop
jae
int3
add
jbe
pusha
mov
clc
repnz
nop
nop
jae
in
jbe
add
mov
cld
nop
nop
jae
add
js
add
pop
or
fwait
push
mov
xchg
ret
cmp
pushf
nop
add
add
nop
nop
jae
in
repz
mov
add
filds
dec
cmp
repnz
nop
nop
jae
add
std
leave
xor
in
leave
nop
jmp
add
cmp
loopne
xor
mov
xchg
push
clc
repnz
nop
nop
jae
mov
pop
and
or
enter
in
leave
nop
jmp
jo
js
add
add
xor
push
mov
xchg
ret
and
jbe
add
repz
push
mov
clc
repnz
nop
nop
jae
sbb
add
mov
clc
repnz
nop
nop
jae
in
add
mov
cltd
add
clc
repnz
nop
nop
jae
mov
add
out
add
clc
repnz
nop
nop
jae
ljmp
dec
dec
add
push
mov
xchg
ret
add
and
sub
add
mov
int
and
clc
repnz
nop
nop
jae
add
and
loopne
add
push
mov
xchg
ret
add
mov
das
pop
clc
repnz
nop
nop
jae
add
in
out
ljmp
mov
xchg
ret
mov
sbb
pop
inc
push
clc
repnz
nop
nop
jae
adc
pop
add
jns
push
mov
xchg
ret
mov
add
add
adc
clc
repnz
nop
nop
jae
stos
mov
aam
push
push
push
mov
xchg
ret
add
and
leave
loopne
sbb
repnz
nop
nop
jae
mov
add
int
inc
cmp
push
mov
leave
nop
jmp
nop
add
dec
nop
push
mov
leave
nop
jmp
add
fmull
cmc
pusha
push
mov
xchg
ret
add
out
add
add
neg
sbb
clc
repnz
nop
nop
jae
faddl
in
loopne
xchg
add
nop
push
mov
leave
nop
jmp
add
andl
cld
nop
nop
jae
into
add
jo
push
clc
repnz
nop
nop
jae
add
add
add
loopne
iret
cmp
push
mov
xchg
ret
xchg
add
fcoml
push
clc
repnz
nop
nop
jae
add
into
mov
lahf
shr
clc
repnz
nop
nop
jae
adc
add
sahf
xchg
fwait
push
mov
xchg
ret
mov
jbe
mov
pop
jns
clc
repnz
nop
nop
jae
add
add
sub
add
clc
repnz
nop
nop
jae
sub
xor
mov
push
mov
xchg
ret
jbe
pushf
mov
mov
add
jmp
jp
nop
push
mov
leave
nop
jmp
int3
add
add
add
push
mov
xchg
ret
add
add
nop
add
adc
mov
xchg
ret
add
nop
ret
sbb
call
nop
push
mov
leave
nop
jmp
pop
add
add
add
ds
pop
push
mov
xchg
ret
pusha
add
loopne
mov
push
clc
repnz
nop
nop
jae
std
add
add
add
repnz
nop
nop
jae
mov
mov
push
mov
xchg
ret
jbe
sahf
loopne
loopne
lods
push
mov
xchg
ret
add
jbe
xchg
sbb
add
and
add
out
clc
repnz
nop
nop
jae
mov
mov
rep
push
mov
xchg
ret
xchg
pop
add
leave
sub
repnz
nop
nop
jae
add
mov
jae
xchg
push
mov
xchg
ret
add
add
add
cmp
push
mov
leave
nop
jmp
add
pop
pop
add
in
dec
lea
nop
push
mov
leave
nop
jmp
add
mov
ja
add
pusha
std
add
add
add
popa
clc
repnz
nop
nop
jae
out
add
xchg
ljmp
repnz
nop
nop
jae
repz
add
add
roll
push
mov
leave
nop
jmp
add
add
xchg
js
jo
add
clc
repnz
nop
nop
jae
cmp
fdivl
std
fwait
add
nop
push
mov
leave
nop
jmp
add
cmpsl
mov
clc
repnz
nop
nop
jae
add
shll
or
add
add
add
imul
in
leave
nop
jmp
int3
dec
pushf
ret
add
mov
add
push
mov
xchg
ret
add
or
xor
inc
fistpl
nop
push
mov
leave
nop
jmp
add
sbb
fisubrl
mov
clc
repnz
nop
nop
jae
ljmp
fld1
clc
repnz
nop
nop
jae
add
pop
mov
icebp
mov
push
mov
xchg
ret
add
into
ljmp
mov
xchg
ret
mov
add
add
add
inc
fldl
clc
clc
repnz
nop
nop
jae
sahf
add
add
mov
clc
repnz
nop
nop
jae
add
xchg
lea
and
push
sub
nop
jmp
add
into
add
pop
add
clc
repnz
nop
nop
jae
sub
pusha
ljmp
clc
repnz
nop
nop
jae
add
and
push
mov
leave
nop
jmp
mov
or
push
mov
xchg
ret
add
in
ja
clc
repnz
nop
nop
jae
add
sub
mov
add
add
clc
repnz
nop
nop
jae
add
add
mov
jbe
jmp
shrl
repnz
nop
nop
jae
add
roll
add
pop
sub
repnz
nop
nop
jae
ljmp
push
mov
leave
nop
jmp
pusha
add
stos
add
add
xchg
pop
push
mov
xchg
ret
sub
std
roll
sbb
out
adc
repnz
nop
nop
jae
add
add
add
aam
jae
push
mov
xchg
ret
mov
mov
mov
add
push
push
clc
repnz
nop
nop
jae
loopne
jae
or
add
cmp
mov
leave
nop
jmp
add
add
sahf
push
in
ret
clc
repnz
nop
nop
jae
pusha
add
and
clc
repnz
nop
nop
jae
add
add
add
xchg
add
clc
repnz
nop
nop
jae
add
add
dec
clc
repnz
nop
nop
jae
mov
pushf
dec
mov
call
push
mov
xchg
ret
and
jae
insb
in
mov
push
clc
repnz
nop
nop
jae
add
pusha
into
add
add
hlt
pop
lahf
rep
clc
repnz
nop
nop
jae
mov
rcrl
jae
mov
clc
repnz
nop
nop
jae
add
lods
clc
repnz
nop
nop
jae
add
pushf
pop
repz
mov
cld
nop
nop
jae
xor
repz
push
mov
xchg
ret
add
pop
fwait
nop
push
mov
leave
nop
jmp
sbb
add
rorl
cld
nop
nop
jae
add
testl
nop
push
mov
leave
nop
jmp
add
clc
repnz
nop
nop
jae
and
jbe
and
nop
push
mov
leave
nop
jmp
js
mov
add
add
add
pop
nop
push
mov
leave
nop
jmp
sahf
add
nop
jbe
jbe
pop
push
mov
xchg
ret
std
std
add
jo
add
push
mov
xchg
ret
loopne
and
pop
js
or
cmpsb
add
cmp
clc
repnz
nop
nop
jae
pop
jae
xor
sti
movzwl
clc
repnz
nop
nop
jae
ds
add
add
jl
clc
repnz
nop
nop
jae
stos
add
stc
xor
clc
repnz
nop
nop
jae
add
sbb
sub
push
mov
xchg
ret
add
add
add
mov
add
add
out
xor
push
mov
xchg
ret
add
xchg
cmpsb
add
movsb
add
sahf
jp
cmpl
nop
push
mov
leave
nop
jmp
jae
in
repz
mov
adc
repnz
nop
nop
jae
pop
or
sub
add
push
mov
xchg
ret
jbe
into
or
js
mov
mov
xchg
ret
jo
add
add
lods
nop
push
mov
leave
nop
jmp
mov
add
sbb
cmp
stc
pop
nop
push
mov
leave
nop
jmp
add
add
add
lss
clc
repnz
nop
nop
jae
add
pop
push
clc
repnz
nop
nop
jae
sub
movsb
add
push
push
clc
repnz
nop
nop
jae
add
add
ljmp
shr
call
nop
jmp
loopne
add
leave
clc
repnz
nop
nop
jae
mov
add
test
jae
repnz
nop
nop
jae
add
add
push
dec
clc
repnz
nop
nop
jae
add
add
add
add
adc
mov
xchg
ret
add
add
add
add
add
data16
fwait
nop
push
mov
leave
nop
jmp
cmp
mov
add
add
test
nop
push
mov
leave
nop
jmp
jae
pusha
sahf
out
jge
dec
fcos
clc
repnz
nop
nop
jae
stos
loopne
add
rolb
repnz
nop
nop
jae
stos
add
and
jmp
add
add
jo
add
add
mov
add
push
push
mov
xchg
ret
pop
add
or
sbb
pusha
clc
repnz
nop
nop
jae
xor
add
inc
push
clc
repnz
nop
nop
jae
add
add
je
push
push
mov
xchg
ret
jbe
ret
add
add
mov
clc
repnz
nop
nop
jae
pop
add
mov
add
repnz
mov
clc
repnz
nop
nop
jae
mov
js
xor
push
mov
xchg
ret
into
add
sbb
out
sar
repnz
nop
nop
jae
into
jbe
add
pop
mov
jb
je
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
xor
std
or
add
jmp
add
add
xor
out
jmp
cld
nop
nop
jae
add
pop
add
mov
call
nop
jmp
add
std
pop
enter
push
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
pop
xchg
add
nop
nop
jae
ret
add
ds
add
jbe
test
push
mov
xchg
ret
add
in
add
repz
add
jge
rcll
mov
xchg
ret
add
add
std
add
dec
push
mov
leave
nop
jmp
add
xchg
int3
cld
hlt
dec
sbbl
jae
cmp
in
into
add
clc
repnz
nop
nop
jae
jo
add
in
pop
mov
repnz
nop
nop
jae
pusha
and
add
inc
nop
push
mov
leave
nop
jmp
add
dec
add
add
pop
call
nop
push
mov
leave
nop
jmp
add
add
xchg
repz
mov
xchg
ret
add
xor
rorl
nop
nop
jae
mov
add
repnz
nop
nop
jae
xchg
add
mov
nop
push
mov
leave
nop
jmp
xchg
mov
lret
fld1
push
mov
xchg
ret
cmp
add
pusha
xor
nop
nop
jae
dec
pop
add
add
add
push
pop
mov
and
aam
inc
add
mov
dec
sub
cld
nop
nop
jae
add
pop
xchg
add
outsb
ja
clc
repnz
nop
nop
jae
add
pop
add
in
repz
add
xchg
add
adcb
cld
nop
nop
jae
add
add
mov
add
xchg
nop
push
mov
leave
nop
jmp
jae
add
add
add
jnp
add
or
pusha
add
add
jo
add
push
mov
xchg
ret
sahf
jbe
or
pop
push
mov
xchg
ret
js
add
add
mov
add
clc
repnz
nop
nop
jae
nop
xor
add
add
mov
clc
repnz
nop
nop
jae
xchg
stc
clc
repnz
nop
nop
jae
add
add
loopne
add
jl
xor
xchg
mov
xchg
ret
leave
add
push
push
mov
xchg
ret
add
mov
pop
loopne
out
fwait
push
mov
xchg
ret
mov
cmp
mov
lock
repnz
nop
nop
jae
add
mov
xchg
or
repnz
nop
nop
jae
add
xchg
pop
mov
dec
push
push
mov
xchg
ret
jae
pop
pop
xor
xor
clc
repnz
nop
nop
jae
fimull
sub
repnz
nop
nop
jae
add
stos
add
insb
push
jo
inc
add
or
xchg
add
add
add
fsubrp
push
clc
repnz
nop
nop
jae
adc
xchg
add
push
mov
leave
nop
jmp
loopne
out
xor
clc
repnz
nop
nop
jae
add
add
in
pusha
xor
test
stc
clc
repnz
nop
nop
jae
fsub
repz
or
inc
add
add
mov
add
jne
clc
repnz
nop
nop
jae
fcoml
push
mov
xchg
ret
add
add
popa
pop
push
mov
xchg
ret
add
insb
jbe
add
movsb
clc
repnz
nop
nop
jae
jbe
stos
pop
insb
jbe
not
pop
mov
clc
repnz
nop
nop
jae
push
add
pop
cmpsl
add
clc
repnz
nop
nop
jae
pop
in
add
clc
repnz
nop
nop
jae
add
add
add
inc
push
clc
repnz
nop
nop
jae
insb
add
pop
loopne
add
mov
xchg
ret
pop
jo
add
add
lcall
inc
add
fcoml
jae
cmp
xor
clc
repnz
nop
nop
jae
sub
js
cmpsb
add
fsts
mov
xchg
ret
add
ds
stos
push
xchg
jmp
xchg
inc
add
add
adc
pop
clc
repnz
nop
nop
jae
loopne
loopne
or
add
nop
nop
jae
add
add
xchg
add
push
push
mov
xchg
ret
ljmp
loopne
addb
pop
push
add
clc
repnz
nop
nop
jae
add
add
pop
js
add
clc
repnz
nop
nop
jae
std
pushf
add
add
ret
sahf
jbe
xor
roll
add
add
nop
add
mov
subl
clc
repnz
nop
nop
jae
pushf
mov
dec
push
mov
xchg
ret
jo
adc
and
add
mov
clc
repnz
nop
nop
jae
int3
add
out
jae
test
add
clc
repnz
nop
nop
jae
add
add
pop
nop
push
mov
leave
nop
jmp
add
add
mov
lods
add
iret
jne
clc
repnz
nop
nop
jae
add
mov
xchg
ret
add
repz
add
and
add
dec
jne
inc
nop
push
mov
leave
nop
jmp
stos
jbe
add
add
add
inc
pop
clc
repnz
nop
nop
jae
dec
int3
loopne
into
fdivl
mov
add
dec
sub
repnz
nop
nop
jae
add
leave
or
stos
insl
push
push
mov
xchg
ret
add
ljmp
lods
add
push
mov
xchg
ret
out
add
add
int3
lea
add
add
imul
nop
push
mov
leave
nop
jmp
leave
repz
sub
repnz
nop
nop
jae
jbe
pushf
loopne
add
addb
and
add
add
sub
mov
xchg
ret
jbe
add
adc
repnz
nop
nop
jae
add
mov
std
push
push
mov
xchg
ret
xor
add
add
ljmp
repnz
nop
nop
jae
lea
roll
dec
mov
clc
repnz
nop
nop
jae
or
in
jbe
add
mov
push
mov
leave
nop
jmp
add
add
mov
fmuls
push
mov
add
lods
push
add
add
xlat
add
cmpsb
add
mov
add
adc
add
add
and
add
sub
add
sub
notb
mov
add
lret
hlt
or
rorl
add
sub
adc
mov
add
les
jp
mov
pop
cwtl
cmp
ss
test
add
jns
add
inc
loope
mov
ret
dec
adc
addr16
add
mov
iret
push
mov
add
lahf
mov
xchg
dec
jl
cmp
add
add
cmp
jmp
add
dec
pop
pop
jle
shrb
jl
inc
pushf
push
mov
xchg
jge
lods
add
add
add
mov
mov
jp
pop
fdivs
add
add
pop
mov
cmp
shlb
add
aaa
cltd
xor
add
pop
cltd
addr16
stos
mov
inc
dec
pop
test
add
sahf
mov
sahf
js
stos
xor
and
add
sbb
lcall
add
in
in
cmp
sahf
ret
movsb
add
jl
or
cmp
mov
push
ficompl
pop
sub
add
mov
sub
add
push
sbb
push
add
out
xor
sub
jno
ds
cmp
add
subl
notb
repz
clc
adc
add
pop
sub
add
sbb
jle
les
fcmovnu
das
scas
xor
or
add
lret
add
out
jge
nop
movsb
add
and
add
xor
add
test
add
sbb
add
daa
dec
dec
aaa
sbb
add
push
mov
rcrl
push
sub
out
inc
cld
xchg
mov
add
xor
mov
addr16
sbb
add
outsb
pop
test
inc
or
add
add
sbb
add
xor
add
enter
or
mov
fadd
pop
test
add
xlat
adc
cmpsb
add
ficompl
dec
lret
sbb
add
mov
jne
jne
ljmp
imul
add
movsl
cmp
add
add
imul
outsl
iret
shll
dec
rcrb
mov
mov
jo
stos
divb
xchg
inc
lds
mov
add
into
je
jb
pusha
jg
xchg
out
rcl
pusha
sahf
or
aad
inc
and
inc
in
or
add
add
push
cmp
sbb
arpl
sbb
ror
std
add
jbe
mov
out
or
and
add
cld
and
movsl
mov
mov
daa
and
xlat
dec
sub
lret
add
add
add
lret
imull
add
push
mov
add
xchg
sub
add
scas
add
hlt
addb
leave
push
add
cmp
xor
add
outsl
mov
das
mov
mov
xor
dec
lds
add
xor
mov
dec
inc
fidivs
push
mov
scas
add
add
add
or
push
or
add
pop
mov
add
ljmp
mov
or
add
add
jmp
xor
push
jl
add
xchg
repnz
sub
add
test
add
decl
cmp
mov
clc
pop
jge
xchg
jb
adc
fsubrl
addr16
and
jbe
or
add
mov
pop
fistl
sub
add
dec
sahf
iret
ljmp
pop
mov
shll
test
add
insb
push
add
sbb
add
add
cmpsl
lret
into
gs
dec
or
add
inc
leave
stc
das
bswap
pushl
xor
jo
mov
div
in
inc
pop
enter
cltd
leave
pop
jecxz
out
add
adc
push
cli
xor
in
cmp
callw
ljmp
add
fwait
pusha
mov
add
add
lea
pop
cmp
add
add
popf
std
enter
and
add
push
pop
adc
xchg
add
cmp
add
imulb
mov
inc
mov
add
sub
add
add
xchg
add
sub
add
loop
inc
dec
cmpsb
add
jl
add
fs
pop
inc
cmpl
lock
xor
mov
add
daa
jns
loop
mov
rol
dec
int
add
aad
add
jg
add
decl
lahf
cmpsl
mov
add
add
enter
fdivs
push
xchg
add
sbb
repnz
andl
mov
adc
gs
loop
shlb
cwtl
jg
mov
add
push
loopne
loope
cli
ja
xor
or
add
fistpl
mov
test
add
xor
add
add
out
pop
mov
add
cmp
nop
loopne
mov
repz
fs
ljmp
add
ds
mov
jp
add
je
xchg
push
and
add
push
push
jmp
add
ficomps
xchg
xchg
out
xor
roll
xchg
jecxz
cmp
add
sbb
enter
push
cltd
mov
add
lret
push
sbb
and
add
and
add
add
push
mov
add
cmp
add
fs
add
repz
mov
add
or
add
outsb
test
add
ds
lahf
xor
inc
xchg
cmp
pop
jb
cmp
int3
decl
addb
sarl
push
movsl
and
jp
enter
and
add
lods
add
sub
add
jbe
add
jge
mov
test
add
add
add
cmp
jns
cld
push
adc
leave
add
xchg
cmc
fisttpll
test
add
ds
add
and
add
loop
push
push
std
sub
xor
outsb
paddq
pop
push
add
sbb
add
dec
rcrl
ljmp
add
add
rclb
dec
notb
das
mov
add
cmp
lcall
xor
addb
insl
mov
add
add
xchg
cmpsb
add
fcomp
jae
sbb
add
pusha
xor
and
add
xor
cli
cmp
jecxz
lds
int
add
dec
scas
xor
sbb
clc
paddsw
mov
mov
pop
xchg
add
add
daa
test
add
ljmp
cmpl
aad
and
add
or
add
add
mov
add
cltd
int
add
jp
add
xor
adc
mov
dec
shrb
int3
xor
add
mov
add
mov
inc
decb
mov
add
dec
dec
inc
and
lahf
mov
sbb
or
or
add
scas
lds
pop
inc
insb
cmc
add
addr16
jge
jo
jecxz
inc
popa
loope
pop
or
add
jns
ja
add
inc
lret
loop
aad
lcall
add
lret
lret
arpl
sbb
mov
add
lods
add
push
movsb
add
xchg
imul
or
add
outsb
add
and
lds
and
add
fucom
mov
adc
push
sti
push
addb
fldcw
adc
mov
mov
add
fcompl
movsb
add
xchg
mov
add
jmp
cmp
shll
push
pop
mov
in
sub
add
push
test
int
push
in
xchg
add
das
ljmp
add
mov
add
inc
jge
in
sub
add
and
add
lahf
add
enter
mov
add
jo
stc
pop
in
mov
add
mov
mov
daa
sbb
in
subl
xchg
push
or
add
add
mov
add
xchg
lock
inc
jae
sbb
fiaddl
add
pop
in
pop
shl
cmp
clc
ficomps
mov
add
mov
arpl
and
add
add
add
xchg
sti
inc
imul
clc
push
jo
lods
jb
add
cmp
add
or
add
lods
fstpl
movsb
add
dec
add
sti
mov
add
add
push
jno
mov
add
out
and
add
sbbl
or
cmpsl
mov
xchg
popf
adc
mov
lret
fs
je
jecxz
test
out
push
dec
mov
add
mov
fdivp
popa
xor
or
add
daa
into
lret
push
inc
xor
je
addr16
add
repz
add
inc
mov
fmuls
xor
pop
push
add
fldcw
push
pop
js
icebp
ficoms
and
add
insb
mov
gs
addr16
jg
cmp
sbb
fcompl
mov
jmp
mov
cmc
mov
add
mov
mov
pop
pop
lret
add
push
sub
fcomps
add
lods
add
mov
sarb
add
sbb
add
mov
pop
scas
add
pop
cmpsb
add
pop
cmp
xchg
mov
lret
sbb
pop
adc
sbb
and
push
inc
testl
xchg
stos
add
stos
add
pop
push
push
push
xchg
in
push
out
xor
mov
out
add
fcoml
aam
pop
sub
add
fstl
pop
dec
fisttpll
and
add
aam
cmp
push
sahf
mov
loop
add
inc
int
cwtl
sbb
push
adc
fxsave
add
lods
add
jne
addb
xor
pop
sub
add
mov
nop
jo
xor
push
push
add
cmc
xor
les
push
xchg
fs
or
popa
lahf
pop
cmp
pusha
dec
pushf
adc
jae
push
add
jecxz
out
imul
sub
push
fdivl
dec
lds
add
push
add
aas
push
sarb
mov
add
add
js
xchg
fwait
dec
pushw
out
arpl
cmc
stos
add
repz
adc
stos
popf
imull
add
filds
mov
cltd
bound
pop
ds
add
pop
cltd
repz
and
dec
or
add
test
add
dec
imul
add
mov
push
mov
add
sahf
inc
mov
add
loope
sub
add
lock
xor
dec
sbb
or
add
add
add
sbb
lds
out
push
out
add
cld
aam
push
adc
testl
push
push
loop
jecxz
jnp
jne
insb
addb
cmpsb
add
rcrb
int
in
dec
push
icebp
negl
add
jne
insl
rorb
dec
int3
adc
sbb
daa
loope
add
mov
test
and
add
jb
sbb
adc
sbb
xchg
les
filds
mov
mov
movsb
add
cmp
push
add
addb
popa
adc
mov
add
and
add
sbb
inc
cmc
roll
add
add
ret
enter
push
ret
nop
add
add
aam
dec
mov
cmp
push
add
fiadds
loope
xchg
int3
pop
push
mov
scas
add
aaa
sub
popa
movsl
mov
fisubs
add
pushaw
outsb
outsb
pusha
add
fwait
xor
std
sub
cmp
add
add
test
add
int
aas
xor
lds
cmpsb
add
dec
inc
jmp
adc
js
test
add
cwtl
jns
stos
add
ja
adc
xor
cld
and
add
cmp
iret
dec
int
repnz
add
lcall
scas
jno
not
sub
imul
inc
add
nop
pop
jnp
notb
sbb
jae
leave
xchg
add
jno
test
test
add
add
mov
fs
iret
dec
lret
push
repz
add
or
js
add
mov
gs
push
add
jmp
add
test
add
lods
add
fldl
stos
add
mov
add
ret
mov
pop
std
test
add
outsb
pop
mov
add
addb
jns
add
jae
and
scas
nop
dec
push
mov
add
int3
push
xor
mov
pop
inc
insl
or
add
dec
hlt
xor
add
decb
fwait
stos
add
jl
add
cmp
adc
add
das
roll
xorl
lret
int
addb
inc
mov
and
into
test
inc
or
add
fistpll
stos
add
lahf
mov
sub
add
enter
add
add
add
mov
inc
jnp
add
jle
daa
jns
add
mov
add
addb
int3
push
aam
mov
pop
enter
bound
push
cmpsb
add
lahf
push
xor
add
xchg
loope
inc
mov
rolb
add
decb
addb
xchg
xchg
repnz
pop
fisttps
fcmovnbe
lods
add
cld
dec
push
xchg
testl
pop
jnp
dec
bound
cmpsl
out
inc
xchg
jp
jg
cmp
push
adc
add
lods
jae
jg
xchg
shrb
movsl
lods
add
imul
xchg
fstpl
shlb
mov
adc
inc
test
adc
repnz
add
add
xor
add
xor
mov
js
push
add
test
add
bound
lcall
fcompl
add
add
pop
insb
push
leave
dec
rclb
inc
in
mov
add
or
lods
jmp
add
add
mov
sti
into
adc
add
loopne
mov
lods
push
pop
inc
adc
add
data16
sbb
add
out
cmp
dec
mov
mov
add
testb
rorb
rcrl
bound
xlat
pop
lods
add
xor
pop
jns
mov
add
enter
aad
cli
sbb
jne
mov
insl
xchg
xor
pushf
cli
out
loopne
insl
mull
add
mov
add
dec
mov
sahf
arpl
add
imul
add
mov
pop
cmc
xchg
pop
sbb
jbe
mov
les
outsl
mov
les
pop
pop
xor
les
and
add
int3
fmulp
test
add
insb
cmp
add
lods
mov
add
push
push
push
adc
dec
mov
push
add
das
jl
add
jecxz
repz
addl
data16
jp
push
mov
xlat
sbb
add
pop
jp
mov
xchg
mov
push
mov
pop
out
test
add
sti
adc
out
fs
rorl
mov
add
xchg
bnd
pop
sbb
add
mov
call
xchg
mov
add
or
or
add
fistpll
add
jae
les
mov
outsl
aad
add
ss
mov
sub
add
js
sahf
pusha
ja
stos
add
sti
test
das
mov
add
sub
add
and
add
mov
xchg
div
pop
frstor
add
in
add
sub
add
test
movsl
fldcw
repz
mov
xor
pop
jno
sbb
xchg
sub
popa
push
test
add
add
and
add
rorb
mov
add
mov
pop
adc
shlb
mov
je
lret
adc
pusha
add
ret
add
xchg
add
mov
add
mov
fimull
icebp
xchg
jmp
in
sbb
xchg
rcrb
call
sub
std
aad
jo
jl
add
jo
add
push
inc
hlt
push
sub
and
sti
or
add
int
inc
and
mov
add
push
xchg
jmp
mov
jb
push
lcall
add
mov
dec
adc
mov
add
loope
pop
stos
add
gs
add
mov
pop
dec
das
and
add
in
into
push
pop
inc
or
sbb
jno
shlb
add
and
add
push
add
cmpsb
add
mov
mov
into
jecxz
or
in
and
std
pop
in
arpl
fidivs
movsl
imul
add
xchg
mov
call
notb
mov
or
aaa
enter
push
mov
jnp
adc
fiadds
add
add
dec
mov
push
pushf
xchg
add
repnz
pop
rol
lds
mov
cld
jp
inc
dec
xchg
xlat
sahf
mov
movsb
add
addb
or
and
add
add
mov
add
jmp
sbb
add
add
add
pusha
cmp
mov
out
lods
jp
cltd
push
add
repz
add
shlb
data16
mull
jl
mov
stos
add
fisubl
mov
add
cmp
loopne
push
scas
add
cld
sbb
int3
iret
sub
push
fnstcw
ja
jns
js
dec
add
add
lods
add
mov
dec
sub
stos
add
push
out
popa
cmp
fmull
lods
add
dec
dec
in
lret
jl
add
daa
lret
add
cmc
cmp
jle
jbe
xchg
and
add
aas
adc
add
push
jbe
fisubrl
popa
inc
stc
iret
js
sbb
push
stos
or
add
mov
ret
jg
mov
scas
add
sti
out
fisubs
add
daa
fcomps
rolb
xor
mov
dec
aas
imul
jmp
loopne
xlat
icebp
loopne
mov
add
push
add
push
je
pusha
dec
popf
jge
or
add
push
cmc
mov
add
add
xor
repz
fucomp
sub
add
add
xor
add
add
jno
add
mov
add
add
inc
dec
adc
jg
cmp
ret
cmp
dec
xchg
push
add
inc
sbb
push
jge
aas
into
mov
stos
add
enter
pop
shll
test
add
cmp
popa
bound
ret
add
jmp
mov
mov
sub
cmpsl
scas
mov
xor
addl
xor
mov
cmp
in
dec
inc
mov
add
rclb
dec
mov
add
sbb
leave
xor
int
dec
call
addb
je
aam
movsb
add
jno
flds
lea
addb
pop
pusha
ja
test
outsb
aaa
cwtl
cld
mov
leave
jnp
add
inc
std
jecxz
lcall
mov
add
sub
add
inc
addr16
aam
std
clc
addr16
mov
test
add
add
fwait
rorl
add
insb
out
xor
cmp
in
pop
lock
int
inc
push
xor
clc
pop
dec
inc
mov
mov
dec
addb
cli
test
add
retw
cmp
add
add
add
jmp
insl
or
add
fcompl
lea
sub
fstps
pop
cmp
mov
jno
loope
sahf
xchg
cmp
movsl
mov
cmc
add
add
push
or
setns
insb
mulw
add
fisubrl
ret
add
insl
and
add
add
mov
cmpl
add
xor
movq
adc
movsb
add
lahf
test
add
push
movsl
ja
addb
cmp
cmp
mov
xor
add
loope
add
and
fdivrl
fldt
mov
cmpsl
xor
imul
ret
daa
mov
add
add
pop
cmc
repz
add
int
xchg
mov
sub
add
xor
add
add
pop
jo
jp
shrb
pop
dec
sub
add
mov
insl
rol
pop
inc
popf
rorl
add
jae
popf
or
bound
or
dec
subl
aam
out
adc
je
or
jl
add
and
out
in
mov
add
int
pop
enter
add
in
fcmovbe
fisubl
inc
or
add
lret
or
dec
daa
jecxz
jmp
ficompl
dec
lods
adc
or
add
pop
or
or
aaa
cwtl
xchg
dec
movsb
add
incb
dec
dec
mov
sahf
jle
add
loope
mov
mov
daa
movl
cmpsl
push
pop
arpl
dec
mov
add
les
mov
lock
add
imul
add
inc
pavgb
fidivs
add
cwtl
repnz
fsubl
add
adc
xor
push
mov
add
ds
mov
add
mov
out
loope
imul
test
add
lahf
pop
push
mov
add
imul
add
mov
mov
add
mov
and
add
push
outsl
push
repz
fldenv
mov
add
pop
pop
push
and
add
dec
pushl
in
and
add
xchg
hlt
or
pop
les
xor
sbb
xchg
pop
xchg
xor
cmp
nop
mov
add
sub
and
les
dec
pop
push
mov
pushf
mov
cmp
rolb
add
imul
inc
or
mov
repz
add
test
loop
add
cmc
in
test
cmp
mov
add
int3
fnstenv
popf
movsb
add
sub
aas
mov
mov
pop
in
dec
fstps
add
pop
sbb
mov
add
xlat
test
add
pop
adc
enter
dec
sub
inc
test
add
sbbl
add
out
add
mov
add
xchg
scas
negb
sbb
insb
cmc
in
outsb
add
sarl
xlat
dec
cmpsl
addb
xchg
out
idivb
add
add
pop
jl
imul
dec
inc
addr16
addr16
push
addr16
in
data16
add
add
add
add
push
add
add
sub
xor
jae
cmp
scas
add
rolb
stos
lods
add
mov
in
add
pop
fwait
adc
popf
sbb
push
lret
lds
jle
xchg
add
cmpsb
add
addb
sbb
add
shlb
mov
call
jnp
xchg
and
add
mov
add
fiaddl
add
mov
push
icebp
mov
in
xchg
add
shlb
fnstcw
mov
into
mov
into
hlt
xor
scas
nop
repnz
add
jo
repz
rcll
add
jb
xor
adc
add
mov
add
cmp
inc
imulb
outsb
rclb
stos
add
jae
inc
adc
pop
mov
pop
push
faddl
add
and
add
or
jl
pop
or
add
ljmp
call
rcll
mov
and
add
add
adc
sahf
push
mov
repz
add
cli
mov
add
mov
add
lret
add
dec
ljmp
and
fldcw
mov
ret
je
pusha
dec
adc
cmc
xchg
add
add
add
push
add
aam
pop
pop
dec
addb
sub
add
jo
repnz
and
into
jns
jge
jb
stc
pop
cld
sbb
add
mov
mov
sbb
dec
sub
xor
add
or
add
stos
add
jmp
test
xchg
mov
mov
das
pop
shl
add
dec
jle
sbb
pop
sub
pop
xchg
icebp
ret
sub
mov
dec
or
add
in
ror
mov
jmp
add
pop
imul
and
add
fucomi
sti
mov
cli
shl
add
sar
push
jae
lret
mov
add
cmp
add
jno
mov
fbstp
iret
pop
fistps
cltd
cmp
add
lahf
xor
add
adc
or
xchg
pop
scas
in
xchg
sbb
or
inc
arpl
adc
and
jle
add
loope
movntps
push
packsswb
xchg
push
add
pop
mov
add
jbe
les
aam
shlb
xor
or
add
movsb
add
popf
push
add
bound
add
je
into
add
cmp
add
mov
adc
mov
add
dec
fdivrl
sub
add
add
aas
or
pop
dec
fbstp
fcom
into
jns
mov
jle
add
scas
aad
fcoml
add
mov
ret
int
int
mov
add
js
psrlw
mov
inc
jae
xor
add
out
shrl
sbb
xchg
add
adc
pop
scas
dec
mov
add
mov
add
pop
adc
nop
ja
test
add
aaa
mov
cmpsb
add
imul
jl
mov
add
mov
das
or
add
inc
mov
add
lock
push
lea
add
jnp
push
add
in
dec
jb
push
ja
in
addb
add
sbb
cld
mov
add
movsb
add
xchg
cmp
call
add
push
add
mov
add
add
dec
mov
add
test
add
shl
sbb
into
test
add
jmp
add
les
icebp
inc
pop
mov
ret
shlb
adc
sbb
add
rorl
into
cli
andl
test
add
add
aad
mov
add
aam
aaa
in
arpl
or
add
jl
iret
sbb
hlt
test
jno
test
add
add
xlat
xor
cmp
xor
loopne
pop
dec
xlat
or
add
imul
mov
add
ja
arpl
xor
iret
test
inc
jbe
push
add
aad
inc
mov
adc
cltd
in
push
dec
push
repz
sbb
movsb
add
daa
loop
xchg
add
xor
call
pop
mov
mov
mov
loopne
or
movsb
add
shr
mov
enter
jl
stos
xchg
das
mov
and
test
mov
pop
fldenv
jmp
xor
pop
mov
add
loop
mov
in
gs
and
add
add
add
push
or
add
jae
mov
mov
add
push
dec
adc
xlat
lcall
jb
and
add
movsl
lds
lahf
pop
lcall
add
add
xchg
lret
adc
inc
int3
sub
add
lret
ja
and
jg
nop
mov
pop
push
or
add
fs
add
mov
jge
push
add
out
add
lea
add
fisttps
sub
add
and
add
add
or
add
xor
je
shl
push
add
add
push
mov
add
inc
push
adc
les
lea
mov
and
lea
add
inc
in
push
jle
outsb
fwait
or
add
loop
sbb
mov
sbb
sti
cmp
and
add
add
sub
add
imul
ret
mov
add
leave
das
rclb
pop
cmc
adc
fsubrs
add
xchg
add
push
lret
add
roll
sbb
mov
mov
add
jnp
xchg
daa
js
add
adc
adc
add
loopne
imul
fsubs
jl
jmp
shll
push
ret
daa
jno
add
mov
sub
jp
out
push
mov
rcrb
rorl
add
cmp
adc
rorb
mov
bound
addr16
lock
mov
cmp
inc
add
add
ror
mov
mul
sub
add
test
add
xchg
imul
xorl
add
xchg
jmp
addb
and
mov
xchg
cmp
mov
add
add
negl
mov
push
scas
movsl
xor
mov
call
mov
xchg
add
add
push
mov
or
add
pop
addb
jl
sbb
jle
cwtl
xchg
and
xor
movsb
add
addr16
add
pop
sub
add
test
add
push
pop
aas
outsl
mov
add
insl
pop
jnp
mov
xchg
fldt
adc
testl
add
add
ret
aaa
std
arpl
cmp
mov
mov
add
rcrb
lock
inc
fsubr
sbb
cmp
in
push
sub
mov
in
iret
stc
roll
call
add
fidivl
or
push
nop
add
add
xor
add
aas
out
sbb
xor
ret
rolb
mov
jge
adc
mov
sbb
dec
sarb
sahf
mov
fdivr
aaa
cmp
jbe
inc
ret
inc
pop
mov
stc
hlt
movsb
add
xchg
add
test
and
add
decl
mov
sub
imul
cmp
ds
imul
xlat
xchg
jp
mov
add
imul
xchg
add
jecxz
fsts
cmp
mov
lea
jge
add
xor
out
les
mov
fstpl
ss
sub
add
xchg
mov
add
add
dec
jmp
add
pop
stos
add
lods
add
or
add
enter
call
test
add
pop
insl
sahf
or
out
xor
sahf
popa
movsb
add
push
mov
mov
hlt
cltd
test
adc
xchg
cmp
jmp
cmp
pop
and
add
and
aam
push
cmc
popa
sbb
loop
out
lret
add
add
inc
shlb
arpl
call
add
cmpsl
aad
les
leave
inc
push
stos
add
adc
add
cmp
test
add
outsb
pop
icebp
popa
cmpsb
add
repz
jns
mov
mov
push
mov
add
sub
insl
or
cmc
movsb
add
mov
sub
add
add
mov
add
inc
xor
scas
mov
ret
sbb
xchg
add
jg
add
add
fstps
add
adc
dec
push
xchg
jno
pop
pop
mov
add
jg
cltd
mov
pop
xchg
add
add
fcmovnu
iret
lcall
and
out
dec
pop
sub
add
mov
dec
daa
ret
add
leave
mov
inc
sahf
xchg
add
out
imul
sahf
das
nop
sbb
int
sub
xchg
pop
outsb
dec
inc
jne
out
test
add
add
aam
imul
add
add
mov
push
aam
ja
mov
push
push
xchg
ret
fdivr
stc
inc
les
rol
mov
add
or
add
fldt
lock
lahf
stos
add
cmp
xchg
sub
add
leave
lds
add
add
add
and
add
sbb
ret
scas
add
mov
add
mov
mov
stos
movsb
add
jne
dec
test
add
push
sub
add
cmp
fcompl
and
add
test
add
add
stc
cmp
lret
pop
push
in
pop
sbb
mov
out
cmp
jae
fxam
inc
mov
icebp
push
out
mov
popf
das
fs
call
sbb
add
add
loop
add
xor
cli
jns
js
add
sbb
add
mov
mov
add
inc
shl
cmp
out
sqrtps
add
xchg
dec
addb
mov
push
loopne
fiaddl
xor
sub
add
jno
mov
mov
jge
maskmovq
sub
or
add
pop
sub
dec
add
aaa
push
inc
gs
loopne
push
and
mov
mov
addl
mov
add
add
pop
sub
sub
add
push
add
sub
add
test
iret
lret
push
xchg
push
xchg
out
add
dec
test
add
sbb
add
fneni(8087
movsb
add
rclb
add
ret
pop
and
or
add
add
sarl
inc
js
mov
lods
stos
add
add
sti
cmpsb
add
push
addb
jecxz
pop
sbb
add
jp
shr
add
icebp
xchg
jbe
xchg
in
lret
fidivrl
add
push
ds
cmp
inc
int
mov
add
cmpsb
add
aas
xchg
sbb
push
in
lret
add
xchg
lcall
nop
sbb
bound
add
jmp
add
lahf
into
fsubr
lret
jbe
jge
add
xchg
inc
das
and
add
add
into
fwait
inc
stc
mov
add
addr16
out
and
add
icebp
fistl
mov
add
imul
repnz
mov
in
add
adc
inc
mov
or
add
pop
aad
inc
sbb
add
jl
add
push
call
test
add
add
add
adc
repnz
pop
push
stos
mov
add
std
cmp
add
sbb
test
xor
fistpl
add
jae
xchg
xchg
clc
dec
push
fidivrl
test
sub
cmpsl
repz
jp
sub
add
mov
std
outsl
jge
rcll
pop
sub
inc
mov
add
xchg
add
aas
or
cmp
mov
xlat
sbb
mov
dec
aas
or
and
add
xlat
rcll
jne
add
inc
add
call
add
push
ret
gs
sahf
stos
shlb
xchg
add
rcll
rcrl
add
roll
cld
sub
popa
stc
mov
push
inc
push
add
into
in
mov
mov
sti
les
mov
in
inc
adc
nop
jbe
sbb
adc
arpl
fdivrl
pop
sub
test
mov
repnz
decl
out
in
fcmovne
stc
dec
and
add
add
js
dec
or
add
cmp
add
xchg
rcr
mov
pmaxub
mov
add
popa
movsb
add
and
add
shrl
jp
ljmp
xchg
add
ret
lods
lret
popf
mov
sub
mov
test
add
add
xor
ret
int
add
add
add
cmp
and
add
adc
jb
in
add
or
fdivrl
addb
mov
jecxz
add
push
jp
add
outsb
daa
push
movsl
cmpl
adcl
adcl
add
les
and
push
insb
movl
les
add
and
add
jp
jg
idiv
push
insl
int
add
movsb
add
add
add
cmp
or
add
jns
in
popf
clc
xor
mov
mov
add
mov
or
add
ret
add
mov
pop
and
add
frstor
sub
or
add
add
sub
add
pop
pop
dec
mov
pop
mov
insb
sbb
xor
mov
pop
adc
sti
and
add
add
out
pop
dec
mov
add
pop
sbb
inc
cmc
movb
add
push
jno
shlb
jae
jno
xchg
mov
and
add
or
in
add
pop
xchg
add
ss
add
adc
add
lret
cmp
add
cmp
dec
pop
xchg
jo
jge
jne
cmp
movl
add
or
add
cmp
push
ja
and
add
lcall
or
add
add
or
add
icebp
cwtl
testb
add
add
add
push
mov
cwtl
shlb
jle
lcall
mov
cwtl
inc
dec
loopne
xor
mov
insb
push
in
inc
xor
add
jl
add
add
pop
mov
bound
add
dec
cmp
out
cmp
loope
in
sub
add
add
fwait
icebp
mov
sub
lock
cvtpi2ps
add
das
add
jo
mov
jl
loopne
aaa
loopne
das
pusha
movsl
fsts
icebp
sbb
dec
add
lahf
add
mov
adcl
cmp
test
sbb
add
movb
add
add
dec
sbb
xchg
jle
lods
out
loope
jae
jns
aas
inc
jmp
sub
add
xchg
adcl
add
mov
push
test
add
add
and
mov
das
inc
call
add
insb
gs
xor
idiv
outsl
sbb
mov
add
push
mov
inc
stc
push
sub
add
jns
add
repz
add
jno
cmp
mov
std
std
jb
add
shlb
jg
add
push
mov
xor
add
fidivl
stc
fstpl
jb
add
push
add
rcr
dec
popa
cmpsl
popa
insl
or
sar
mov
add
add
add
pop
mov
lea
add
test
mov
add
adc
movb
rcrl
inc
xlat
xchg
in
mov
cmp
add
push
add
add
mov
ljmp
std
mov
or
cli
or
movl
psllw
cmp
add
add
add
cmpsl
inc
xor
add
roll
add
ljmp
push
xor
mov
sub
push
mov
shrb
pusha
stc
icebp
mov
add
nop
les
nop
test
add
add
push
popf
jge
dec
adc
cld
and
mov
xor
lock
add
add
adc
std
xor
addb
mov
add
add
add
jb
arpl
mov
and
add
insl
sub
add
lea
je
cwtl
test
add
aas
scas
sub
add
add
cmp
xchg
jp
add
xchg
and
add
add
mov
adc
sub
add
fsubrl
call
and
add
sbb
shl
push
insl
daa
mov
test
add
sbb
mov
lock
add
mov
mov
xor
imul
test
dec
mov
mov
xrelease
add
push
gs
in
jo
fildl
xchg
fsubp
and
loopne
cmp
pop
xchg
shrl
xor
sbb
sub
mov
jns
popa
addr16
std
rcrb
imul
mov
add
out
mov
retw
fdivs
movsb
add
and
add
xor
push
add
add
in
fsub
lods
test
add
out
dec
das
pop
push
cmp
cld
push
and
add
divl
inc
loope
ficoml
add
add
pusha
push
icebp
addb
and
or
jb
cmc
ds
in
les
out
sahf
imul
add
or
mov
leave
mov
add
push
into
les
out
cmp
pushf
repnz
shrl
in
lods
addl
add
jne
add
add
les
int
add
xor
movsb
add
inc
in
add
daa
mov
cmp
pushf
cmp
jo
push
add
or
adc
dec
cli
sub
add
addb
mov
sbb
add
jg
sub
add
data16
dec
pop
arpl
add
loopne
pop
cwtl
cmp
push
mov
iret
inc
sbb
aam
cmc
dec
cmpsb
add
mov
add
test
sahf
and
add
inc
push
sub
or
sar
dec
lea
add
int3
jno
movsb
add
std
imul
add
dec
add
add
xchg
add
add
xor
push
aam
mov
in
lds
popf
enter
push
add
jno
mov
mov
dec
sub
addb
cmc
dec
xchg
out
push
pushl
adc
or
add
inc
mov
mov
xchg
imul
adc
sub
add
das
adc
scas
add
std
jns
and
add
test
add
or
add
pop
sbb
aam
adc
jo
stos
out
and
inc
jne
pop
mov
add
add
enter
and
add
mov
add
lds
mov
push
add
mov
push
popf
xor
dec
sbb
push
mov
pop
lea
push
inc
pop
mov
rol
pop
jle
mov
add
into
pusha
loopne
cmp
xchg
fstl
int3
test
add
and
add
inc
cmp
pushf
imul
cltd
dec
mov
and
add
sub
add
cmpsb
add
fnstcw
cmpl
ja
add
cmp
or
add
and
add
xor
in
ss
push
adc
sahf
inc
pop
lret
mov
rep
add
je
gs
pop
mov
push
jb
sub
insb
mov
gs
mov
jle
jge
add
add
jne
popa
insl
sub
add
aad
sbb
or
add
mov
sub
add
test
lods
add
cmpsl
mov
fwait
inc
notl
mov
adc
add
xchg
mov
popa
in
aas
popf
in
std
mov
sbb
xor
adc
cmp
and
jge
out
xor
push
ret
in
xchg
fwait
lods
add
mull
mov
bound
cmpsb
add
ret
cltd
mov
add
jmp
and
add
add
out
lods
dec
dec
repz
dec
or
and
add
push
out
lret
sbb
sbb
add
or
add
out
or
add
xchg
dec
shrb
adc
mov
jp
push
popf
mov
mov
mov
daa
inc
dec
idivl
xchg
aad
rcr
cmpsb
add
lahf
sahf
leave
rcr
add
or
shlb
aam
bnd
fs
je
pop
test
sub
add
inc
and
push
add
mov
adc
add
xchg
jmp
scas
add
insl
inc
add
lret
sbb
imul
popa
add
add
inc
jb
xor
sub
rol
push
sbb
je
add
int
pop
outsb
inc
xchg
mov
mov
sti
and
add
dec
dec
addb
jns
popl
add
insb
xor
pop
fisttpll
mov
movsb
add
icebp
jle
std
iret
idivb
lcall
xchg
jmp
add
fcmovbe
xor
add
xchg
shrb
add
add
in
xchg
fmul
movsb
add
inc
jge
je
xchg
jns
cmpsb
add
test
add
add
lret
add
lods
mov
add
or
int3
outsl
push
mov
add
lcall
jmp
fidivrl
aas
adc
lods
leave
pop
aaa
fidivrl
xor
lcall
inc
jge
rclb
sbb
add
mul
inc
fsubrs
out
add
clc
clc
jnp
sbb
jns
shl
leave
inc
xchg
ret
dec
hlt
jae
mov
mov
pop
inc
add
inc
jne
mov
add
cmp
mov
lea
out
xorl
adc
popf
test
add
add
data16
shll
mov
fwait
or
add
inc
xchg
clc
fnsave
jns
push
rcrl
adc
mov
inc
sub
add
ds
ficomps
sub
shlb
jno
sub
add
outsb
out
pop
sti
cmpsl
sbb
pop
mov
cmp
add
repnz
xlat
jg
add
push
je
add
fcomip
jg
mov
jns
inc
cmp
lods
sbb
testb
push
das
add
aas
or
aad
imul
or
inc
ret
in
dec
or
xor
mov
add
add
add
pop
cmp
pushf
test
add
push
push
shrb
add
add
mov
add
dec
aam
into
inc
jae
push
jae
fadd
in
adc
scas
add
push
hlt
in
stos
add
sub
add
sahf
sub
add
fsubrs
add
addb
inc
jae
and
xchg
out
fwait
cmpsl
or
add
fiaddl
and
add
push
add
call
xchg
sarb
daa
xlat
push
jle
or
inc
addb
pop
lahf
xor
pop
fldl2t
inc
mov
test
add
outsb
mov
dec
push
addb
and
inc
mov
add
push
add
std
lahf
push
sub
add
dec
data16
mov
cmp
adc
cld
mov
data16
test
add
jb
cmp
mov
add
push
push
enter
push
ljmp
shll
fdivl
lea
mov
inc
and
pop
cmpsl
xchg
and
xchg
add
jl
jle
in
cmc
lds
mov
add
add
sbb
jg
pop
sub
movsb
add
inc
mull
cmpsl
and
add
or
add
mov
sub
add
pop
test
add
add
mov
mov
adc
add
xchg
mov
add
add
ds
or
add
mov
add
mov
add
or
lds
add
stc
pop
jge
and
xor
out
dec
xor
add
insl
pop
and
mov
movl
jmp
jp
sbb
in
aaa
ds
mov
out
pop
insl
add
out
fisubl
mov
dec
and
add
and
mov
add
lahf
xor
mov
add
or
push
sub
add
add
inc
sub
add
add
les
and
or
into
pusha
ja
xchg
inc
or
add
xchg
add
push
add
sub
add
add
punpckhdq
popa
pop
out
dec
lahf
in
popl
sub
add
adc
sti
dec
stc
sbb
add
add
mov
out
stos
mov
push
data16
adc
lret
mov
add
xor
insb
jmp
add
inc
fmul
popf
jb
scas
add
pushf
sbb
or
add
cmp
add
and
add
inc
xchg
sbb
sbb
imul
bound
sbb
jne
add
or
inc
pop
gs
repz
push
xlat
jecxz
mov
cmp
jae
data16
lea
jp
aad
pop
or
add
add
lahf
movsb
add
sub
add
insb
pop
add
cmp
add
xor
arpl
test
mov
daa
sub
mov
in
push
add
mov
fbstp
or
add
or
add
sub
add
je
loope
dec
notb
add
out
les
cmp
fstpl
dec
lock
jbe
data16
add
mov
and
popf
shlb
add
std
in
jo
in
pop
xlat
mov
add
sub
add
mov
adc
leave
movsb
add
or
add
xchg
andl
add
sbb
cmc
mov
push
les
add
dec
fbstp
out
lahf
add
add
daa
iret
repz
jl
std
jb
repnz
xchg
sub
add
pop
mov
movl
lods
mov
insb
mov
add
or
add
aam
mov
add
add
scas
js
shl
out
adc
add
add
add
mov
xor
push
mov
xor
outsl
pop
jne
adc
les
add
dec
js
adc
sbb
add
add
inc
imul
mov
jge
xchg
and
inc
in
push
shlb
add
pop
and
add
or
add
ss
adc
addb
lcall
imul
fcomp
jnp
add
repz
cmc
aad
mov
xchg
out
rcll
inc
aad
iret
scas
jnp
jge
stos
ja
ds
js
test
add
lock
call
mov
or
dec
pop
outsl
addb
insl
sub
stos
pop
aad
call
push
fdivl
push
add
shlb
rcrb
add
add
iret
mov
add
and
movsb
add
icebp
addr16
jmp
negb
lcall
fisubrl
xlat
outsl
xor
mov
mov
sbb
xor
add
lods
in
movsb
add
mov
push
mov
in
sar
cmp
addb
cmpsb
add
dec
dec
add
add
and
xchg
mov
or
pop
lea
stos
add
dec
out
mul
stos
add
mov
add
xchg
rcrl
sbb
mov
out
sbb
lahf
lahf
inc
dec
xor
js
mov
add
in
lock
jbe
pop
or
add
sbb
push
xchg
xchg
add
aad
fcoms
lods
decb
test
andl
pop
mov
add
xchg
loop
and
lahf
test
pop
ret
cltd
add
das
addb
loopne
xor
push
adc
lcall
pop
pop
xchg
inc
sbb
mov
lret
xchg
adc
xor
inc
xchg
mov
xchg
push
sub
pop
jns
add
dec
pcmpgtb
push
adc
add
or
mov
icebp
sub
movsb
add
aam
cmp
cmp
push
inc
xor
add
fwait
shlb
dec
add
and
add
stos
add
jbe
or
add
mov
jp
sbb
cmp
or
add
out
cmpsl
fs
lret
cli
xor
mov
adc
xor
icebp
inc
inc
std
cmc
jb
pop
test
xchg
add
sub
add
icebp
jmp
sbb
cmp
fdivr
cmp
add
add
add
cmp
bound
iret
mov
arpl
stc
pushf
call
adc
add
or
add
xlat
and
add
sub
fcmovbe
addb
aaa
cmp
sysenter
push
sbb
fsubrl
in
shl
pop
lahf
icebp
insb
pop
popa
fisubrl
iret
addl
add
push
les
add
outsb
sub
add
lahf
out
cmp
movsb
add
stc
fld
lea
je
sti
test
add
push
add
xchg
cmp
mov
jb
mov
add
push
js
add
pop
rcrb
mov
mov
add
xchg
inc
or
or
add
pop
mov
leave
mov
out
push
add
leave
movsl
sbb
ljmp
outsl
fs
leave
pop
lea
add
jl
xchg
les
cld
or
push
adc
mulb
xchg
arpl
mov
add
add
fcomps
in
addr16
push
pop
pop
leave
jle
push
adc
les
push
mov
or
call
sub
add
xor
inc
outsb
pop
imul
dec
pop
mov
js
sbb
push
ljmp
in
mov
adc
add
cmp
call
repnz
fmull
add
mov
call
imul
cmp
mov
aam
insl
adc
lahf
lret
mov
pop
inc
inc
imul
add
push
dec
mov
add
push
adc
add
leave
das
loope
arpl
add
add
and
add
add
dec
sub
add
and
test
inc
lahf
xlat
pop
fimull
add
sbb
shll
inc
jne
add
adc
jmp
mov
add
stos
iret
pop
fs
lods
mov
and
mov
movsl
inc
cwtl
pop
push
lret
pusha
sbb
into
mov
lahf
clc
mov
jo
add
add
adc
mov
icebp
lods
xor
add
add
cmpsb
add
popf
jo
arpl
sahf
inc
repnz
jmp
icebp
je
shrb
lret
ret
and
mov
add
je
and
sbb
add
out
add
add
mov
add
pop
jecxz
inc
out
stos
rorl
add
out
pop
ss
andl
pop
sbb
inc
jl
stos
add
in
add
inc
repz
fisttps
call
mov
push
cmp
shr
cmovl
and
add
lahf
fsubs
add
clc
in
add
scas
push
adc
insb
xchg
mov
inc
inc
or
push
mov
adc
add
out
sarl
pop
xchg
fcmovnb
mov
enter
cmpsl
pushf
pushf
lahf
mov
stos
add
cli
nop
cmp
jne
xor
mov
fidivs
mov
push
add
mov
add
push
lcall
add
loope
adc
xor
lea
test
push
xchg
test
add
arpl
cltd
lods
add
fimuls
add
js
cltd
mov
add
xlat
mov
sub
add
out
rorl
add
dec
mov
mov
cli
jecxz
push
stos
pop
testb
add
xchg
mov
dec
movsb
add
jmp
lods
add
mov
lret
ffree
add
arpl
add
movsb
add
pop
pop
mov
out
arpl
jb
in
scas
add
sbb
cmp
fnsave
jg
jne
add
in
test
sub
add
loop
ja
xchg
push
add
mov
add
adc
sub
mov
pop
sbb
push
xchg
ret
cmpsl
jne
xor
jns
sbb
jb
cmp
addb
js
mov
test
add
dec
aaa
mov
sub
add
loope
ret
add
leave
jo
fidivs
dec
mov
sub
add
jecxz
xor
add
sbb
cmpsb
add
mov
out
push
add
xor
add
or
add
jge
or
add
dec
cmp
add
jp
inc
ljmp
add
scas
lods
add
push
sarb
xchg
int
fistpll
inc
ret
xchg
lea
push
cld
add
fwait
lahf
lret
ret
add
or
add
fstps
int3
sahf
sub
add
add
out
aaa
adc
add
mov
push
nop
pop
push
int
add
inc
xchg
pusha
sbb
stc
mov
add
shlb
pop
out
icebp
and
add
sub
fidivrs
add
xchg
pop
out
mov
add
in
cmp
add
push
je
bound
out
xchg
push
cwtl
sub
dec
jmp
add
gs
mov
sub
add
mov
dec
xchg
inc
repnz
imul
popa
mov
mov
xor
mov
add
lock
cwtl
mov
add
fists
sub
add
push
xchg
loopne
add
fdiv
ds
mov
add
add
or
add
lods
add
adc
add
rclb
mov
add
or
add
aad
add
xlat
pop
mov
add
sub
add
pop
and
push
outsb
xor
add
jecxz
mov
cli
jmp
les
addb
arpl
sub
addb
leave
std
subl
add
jne
mov
test
mov
add
shlb
pop
ret
add
add
aam
mov
mov
add
outsl
dec
push
push
sbb
cltd
jne
cmpsb
add
pop
inc
test
add
mov
loopne
cld
jns
mov
pop
pushf
sarb
data16
add
pop
inc
lahf
mov
xchg
jb
inc
xchg
add
mov
add
adc
cmp
sbb
or
add
pop
ss
or
add
add
aad
add
cmpsb
add
std
movsb
add
xor
stc
aad
std
and
add
addb
mov
cmpsl
loop
sub
fsubs
mov
push
add
add
aad
jmp
vpackssdw
add
int
and
add
mov
add
ds
scas
outsl
gs
jle
loope
in
mov
inc
in
mov
je
faddp
je
popa
jbe
ret
test
add
inc
cmp
sub
add
add
jne
imul
orl
loopne
scas
add
stos
or
add
push
pusha
mov
mov
xchg
push
sbb
jg
xor
leave
sbb
stc
pop
mov
pushf
test
add
cmp
fdivrl
pop
push
dec
ja
xor
add
add
add
mov
add
das
jb
xchg
jge
or
add
ret
xor
mov
fistps
pop
pop
dec
inc
dec
jl
addr16
stos
add
inc
adc
in
xor
add
pop
mov
rcrl
ficoml
scas
add
negl
or
jnp
add
xor
lock
inc
insb
inc
mov
xor
sbb
add
jo
repz
add
add
sbb
inc
xchg
push
lret
xor
push
add
dec
pop
lods
add
xor
dec
add
jae
xor
aad
in
iret
mov
mov
mov
add
ss
and
add
push
mov
into
mov
add
jmp
addb
clc
imulb
fdivrs
add
popa
rorl
mov
add
mov
jge
and
mov
addb
sub
in
ja
shrl
in
push
fbstp
addr16
sub
rcrb
aaa
and
sbb
xor
jbe
mov
andl
cmpsb
add
pop
shll
add
dec
pop
and
daa
cld
movsb
add
adc
add
add
mov
xchg
add
sbb
sarl
cmc
out
xchg
cmpl
jp
leave
adc
adc
jmp
mov
stos
add
xlat
fdivl
inc
or
popf
fwait
cmpl
pop
pushf
jmp
insb
sub
add
add
inc
or
loope
add
ds
fsubs
mov
mov
add
mov
push
jb
cli
pop
ret
sub
push
mov
scas
lcall
push
movb
add
and
jmp
rcrl
dec
daa
div
or
add
add
pop
push
add
push
add
add
add
sti
cmpsl
mov
add
xchg
add
mov
jnp
repz
clc
mov
add
sahf
shl
xchg
aad
xor
add
jg
outsb
sahf
jle
cltd
lods
add
scas
add
or
sub
add
sti
leave
loop
stos
inc
jge
popf
les
add
fmuls
lret
add
inc
push
fmul
pop
dec
mov
add
or
cmp
xor
in
push
inc
pusha
adc
dec
xchg
lahf
cld
mov
mov
add
add
mov
in
push
out
cmp
sbb
jp
inc
sub
add
add
add
add
cli
inc
mov
rcrl
je
loopne
jno
jle
or
inc
lock
and
add
jns
xchg
add
mov
add
cli
inc
iret
or
add
mov
mulb
cmc
fwait
xchg
lret
ret
lea
jmp
call
and
int
add
add
adc
add
insb
lcall
xorl
sbb
mov
sarl
jns
ds
movsl
jns
pop
fisubl
rclb
cmp
jns
add
daa
repz
addr16
lods
push
imul
inc
dec
and
cli
repz
loopne
in
xor
bound
inc
shll
mov
add
xlat
xor
les
or
mov
push
outsb
xchg
sub
xchg
imul
mov
pop
mov
clc
rclb
out
rol
cli
pop
sub
ja
xchg
jae
add
xchg
bswap
fwait
mov
xor
add
xchg
dec
js
out
cld
mov
add
int3
mov
mov
add
xchg
fwait
inc
das
rcrb
popa
imul
enter
fcoml
outsb
xchg
movsb
add
in
mov
add
test
add
cmp
and
mov
add
insb
add
ss
add
test
add
shl
popa
push
and
add
int
add
pop
aas
jno
enter
enter
in
add
lret
lods
lods
or
add
in
out
mov
les
cld
imul
pop
jmp
in
into
sbb
cld
das
pusha
popf
mov
add
jae
add
addr16
mov
mov
sub
addb
and
dec
in
push
mov
sbb
xor
mov
add
add
outsb
nop
xchg
inc
ss
add
wrmsr
ret
mov
push
add
add
dec
cmp
add
js
mov
cld
insb
dec
mov
lods
add
sbb
xor
out
pop
mov
pop
pop
ret
add
fdiv
inc
xchg
sahf
add
cli
aaa
jb
enter
push
add
pop
fstps
sub
add
add
daa
mov
lahf
push
xchg
pop
jle
pusha
ret
dec
outsl
rorb
outsl
jge
add
and
add
mov
js
cli
push
xchg
xchg
call
sub
ja
sbb
sbb
adc
add
lods
inc
in
lods
les
call
cltd
idiv
pop
adc
or
xor
sarb
ja
jl
aaa
jmp
mov
dec
sub
dec
testb
xchg
cli
xor
add
fstpt
push
mov
add
add
add
adc
popf
mov
add
mov
pop
or
dec
lret
add
int
add
ret
mov
stos
add
mov
je
adc
jg
add
aaa
push
or
add
sub
add
sbb
add
je
add
cmp
shrb
push
call
lea
pop
jmp
mov
test
add
jb
int3
xor
add
xor
scas
out
hlt
shrb
add
mov
add
dec
stos
jne
roll
les
out
jb
test
dec
mov
or
add
lods
jmp
dec
jmp
sar
inc
sbb
ficomps
cli
sub
sbb
xchg
daa
dec
stc
pop
fdivrs
push
add
sbb
add
mov
fstl
popa
out
setge
in
out
dec
or
add
lret
xor
lods
add
xchg
cmpsl
xor
jo
popa
xor
pop
ja
and
add
pusha
ret
call
pop
lods
add
lock
push
mov
add
ss
popa
ret
cmp
adc
sbb
push
xor
add
cmc
test
out
pop
adc
add
push
add
incl
add
data16
clc
add
add
popa
pop
stos
add
enter
add
cli
mov
add
jbe
lret
das
jle
jno
inc
dec
stos
jp
cmc
lock
xchg
jne
imul
pop
cmc
adc
xchg
movl
dec
sbb
outsb
movsl
repz
movsl
mov
add
pushf
sub
add
xchg
dec
push
into
dec
pop
dec
negl
xchg
jne
mov
add
mov
add
xchg
mov
data16
push
cmp
push
mov
add
cmp
add
add
je
std
mov
lret
add
add
add
jmp
pushl
dec
fistl
add
fwait
mov
leave
fsts
adc
or
add
add
add
add
lods
add
dec
movsb
add
int
add
enter
xor
add
test
add
add
pop
pop
pop
pop
cwtl
mov
je
outsb
cmp
or
sti
insl
and
movups
scas
add
outsb
cltd
or
add
cmp
add
add
add
shrl
mov
mov
adc
pop
mov
add
sbb
cwtl
shlb
add
jp
add
stos
add
aaa
jns
idivb
sbb
addr16
movsb
add
fidivl
xor
aad
loope
dec
xchg
sarb
add
sbb
lds
cwtl
mov
add
add
mov
rorl
add
jmp
mov
out
in
inc
lds
push
jle
int
mov
lahf
cmpsb
add
bound
shlb
lcall
fldl
clc
out
jp
int3
bound
add
pop
inc
movsb
add
pop
pusha
lcall
jo
jo
lret
arpl
loopne
fstpl
adc
dec
fwait
sarb
inc
sub
add
add
rorl
jecxz
pushf
and
add
mov
add
adc
pop
inc
or
add
cmp
fnstcw
jbe
push
push
movsb
add
push
sbb
clc
jnp
add
push
add
std
pop
inc
icebp
or
fildl
fcomp
inc
std
pop
cld
ficoms
push
aas
dec
rolb
popa
or
add
in
scas
popa
pop
int3
js
add
mov
mov
movsl
adc
mov
loop
add
fbstp
add
add
add
pop
xchg
out
rolb
add
pop
andl
sbb
sbb
add
push
push
test
shr
cmp
shrb
shlb
jl
sub
add
xor
mov
add
pop
jb
add
leave
push
xor
mov
loope
pop
sbb
xor
xchg
mov
shrb
add
or
add
push
xchg
test
add
in
imul
ss
add
jnp
fucomp
mov
rclb
aas
arpl
add
add
cltd
insl
int3
add
mov
add
hlt
das
cmpsl
ficomps
or
add
in
add
adc
test
add
icebp
pop
mov
mov
fdivr
xorl
bound
add
jns
nop
add
add
push
mov
mov
sbb
or
xchg
idivl
xchg
dec
jle
pop
adc
cmp
popf
mov
jne
jg
and
add
add
sub
ja
sbb
sub
add
pop
pop
cmc
jne
mov
pop
and
xchg
dec
and
add
xor
test
lock
in
dec
add
add
pop
mov
bound
add
das
out
mov
xor
lds
xchg
dec
outsb
punpcklwd
mov
pop
icebp
jp
mov
xor
ss
add
addb
and
add
mov
push
add
subl
add
rcrb
push
rolb
arpl
pop
adc
dec
in
or
add
lds
pop
pmaxub
jno
orl
and
imul
into
icebp
cmp
mov
add
push
add
xchg
inc
pop
mov
add
sbb
and
pushf
ljmp
sti
cmp
sbb
pop
sub
add
rcll
xor
add
add
and
add
add
movsb
add
lds
pop
xchg
pop
int3
and
add
push
mov
ret
lea
repnz
clc
shl
push
dec
add
xchg
add
xlat
jnp
add
pop
lcall
mov
out
shr
out
lock
sbb
popf
dec
or
add
and
add
lcall
add
lcall
lea
add
dec
or
add
add
aad
cmp
push
dec
mov
mov
add
and
add
add
rclb
xor
mov
add
dec
das
adc
mov
repnz
jmp
adc
aam
mov
adc
loopne
mov
and
add
push
gs
lahf
xor
add
pop
aaa
mov
rcrl
fs
pop
or
add
mov
add
jl
add
inc
js
add
jp
outsb
xor
sub
dec
ds
test
add
movsb
add
les
js
fsubrl
add
lods
add
aas
adc
ja
addb
iret
addb
ds
sti
out
dec
push
add
scas
add
popa
or
add
cmp
mov
and
add
inc
movsl
xchg
xchg
pop
pop
cltd
imul
fnstenv
and
sbb
movsb
add
mov
bound
add
arpl
repnz
mov
je
add
cmpsl
daa
inc
mov
add
movsl
sub
add
cmpsb
add
pop
pop
adc
stos
add
push
js
sub
add
jo
mov
call
push
xor
out
je
adc
push
sub
das
out
or
pop
lea
clc
sbb
sub
xchg
mov
mov
test
add
jle
xchg
ja
add
mov
add
cmp
fdivl
dec
cmp
imul
pop
inc
mov
pushf
cmc
push
imul
daa
dec
pop
enter
dec
jmp
and
rorb
adc
mov
add
mov
popa
ss
imul
xchg
sbb
or
add
inc
cwtl
movsl
test
test
add
mov
dec
add
add
in
testl
push
data16
add
inc
cmp
add
inc
adc
sbb
and
xchg
mov
add
out
push
dec
in
shrb
push
sub
add
mov
sub
sub
add
test
add
pop
inc
add
push
nop
stos
adc
add
aaa
out
xchg
cltd
int3
add
lret
add
mov
xor
ret
or
out
add
adcl
inc
mov
add
sbb
addb
outsb
cmp
add
data16
mov
add
add
mov
add
jge
sti
lea
icebp
loop
add
repnz
jl
sti
xor
sub
add
ffreep
js
ja
jmp
das
enter
dec
cld
sub
add
sub
add
loopne
mov
mov
sbb
cmp
sbb
xor
jecxz
add
je
add
add
ss
add
sbb
jmp
rcll
jo
and
add
jns
into
std
mov
add
inc
iret
jmp
loop
sbb
int
int3
mov
cmp
aas
and
add
jl
add
cmc
addl
mov
shll
in
movsb
add
in
xchg
iret
int
test
add
xor
add
add
or
add
mov
xor
les
sub
fwait
dec
add
insb
out
loop
push
xchg
hlt
inc
popf
shlb
add
test
ds
xchg
dec
and
fdiv
fcompl
pop
mov
add
fcoml
jbe
and
ficoms
sti
jp
push
ds
or
add
add
rolb
mov
xor
xlat
loop
add
lcall
or
add
iret
xor
cwtl
xchg
inc
sbb
testb
out
test
inc
add
add
ljmp
add
inc
dec
fwait
add
xchg
pop
gs
adc
add
sub
add
xchg
add
mov
add
adc
das
lock
jb
pop
cmp
ja
add
popa
insb
pop
stc
push
leave
mov
add
mov
sahf
cmp
add
mov
mov
add
sbb
cmp
mov
sbb
scas
add
sub
adc
daa
xchg
aad
rclb
sub
rclb
add
int3
pop
mov
adc
dec
push
add
enter
jg
imul
out
inc
lods
add
mov
xchg
pushf
jnp
add
mov
call
jo
add
xchg
xchg
jbe
add
imul
int3
sahf
mov
fadd
mov
and
add
fcmovu
mov
xor
imul
mov
add
cmp
rol
in
dec
addb
leave
jl
outsl
clc
and
add
jns
add
loopne
in
inc
sbb
rolb
mov
add
add
repnz
sbb
sub
mov
call
add
pop
or
add
and
add
mov
and
dec
pop
jg
sub
add
mov
cmpsl
ja
inc
cmp
in
pop
xchg
xor
or
lcall
js
gs
mov
add
add
add
test
fistpll
and
add
stc
cmpsb
add
xor
mov
mov
sahf
add
add
add
gs
inc
movsb
add
fsubrs
pop
xchg
add
mov
stos
add
pushf
gs
cmp
pop
fmull
pop
in
out
test
push
pop
test
add
fsub
cwtl
decl
add
add
jle
ret
int3
scas
addb
adc
add
outsl
adc
xor
add
add
add
and
add
outsb
xor
insb
aad
mov
add
xchg
inc
outsb
and
add
js
add
notl
mov
jae
fcompl
stc
lods
incl
out
pop
aad
jns
inc
adc
add
mov
popf
inc
jle
xor
cmpsb
add
movsb
add
jp
insl
test
sub
mov
hlt
adc
mov
add
icebp
sbb
inc
pop
fstl
jp
mov
add
jo
pop
dec
mull
add
repz
add
icebp
rolb
js
mov
loop
push
sub
add
add
test
add
test
add
loope
test
add
dec
pop
mov
out
ret
ss
in
jb
dec
scas
push
mov
mov
push
add
imul
outsl
jae
sub
and
add
xor
pop
addb
sub
add
sbb
cmpsb
add
out
dec
xchg
lcall
pop
xchg
mov
add
add
cwtl
jmp
add
lret
mov
mov
add
or
add
mov
add
in
inc
cltd
dec
sarb
add
lock
add
sbbl
add
add
mov
xchg
loopne
leavew
icebp
jle
push
mov
les
add
xchg
popa
add
add
loop
pop
xchg
add
mov
call
orl
jbe
out
add
mov
cwtl
stos
add
mov
hlt
add
lret
roll
jl
fwait
lea
or
add
add
bound
mov
cwtl
mov
add
adc
pusha
jmp
push
add
and
add
xchg
mov
rcrb
dec
jle
add
pop
adc
dec
mov
mov
and
add
cld
mov
push
ljmp
add
jae
add
test
add
pop
cmpsb
add
cmp
fstpt
push
js
sbb
push
push
aam
arpl
andl
into
sbb
xchg
jnp
mov
xor
and
add
add
lret
inc
cmp
add
add
cwtl
or
add
out
imull
add
sub
add
sbb
out
das
int
mov
or
add
sbb
jne
mov
add
sbb
dec
imul
xchg
fnstenv
pop
inc
inc
adc
add
push
xchg
roll
sub
add
popf
and
add
or
rcl
fiaddl
push
cld
data16
roll
outsl
mov
add
iret
ret
nop
and
add
dec
sub
add
add
add
insb
xor
das
mov
in
test
add
sbb
nop
add
ja
addb
pop
push
mov
jg
jge
and
add
xor
add
jb
addb
push
add
pop
mov
add
imull
sarl
stc
xor
adc
lods
mov
scas
add
leave
sbb
cmc
jle
pop
leave
scas
add
jbe
sub
in
mov
into
cmpsl
xchg
jmp
inc
lds
add
jb
push
jge
push
cmp
add
push
jge
gs
subl
sub
cmp
add
dec
push
sbb
xor
ss
ja
cli
out
lret
add
roll
inc
jae
mov
lods
mov
add
stos
dec
and
in
pop
mov
in
bound
iret
or
add
pop
and
add
add
jl
mov
push
xor
xchg
daa
ficoms
push
mov
add
inc
pop
xor
adc
aas
push
add
add
add
jbe
cli
xchg
cwtl
jb
add
adc
les
add
push
jg
bound
xlat
inc
jno
ret
pop
pop
mov
add
add
jne
add
clc
imul
add
add
and
add
push
in
jge
add
add
roll
add
rolb
add
lret
shlb
push
jge
pop
lahf
shll
cli
add
and
add
js
xor
pop
dec
mov
dec
leave
insb
fildl
cmp
or
pop
sub
add
add
pop
ss
add
cmp
jp
cli
and
add
sbb
lcall
ja
ror
rcll
mov
add
add
in
or
aam
xor
mov
add
adc
jmp
dec
sub
add
data16
dec
pusha
aaa
mov
and
add
gs
fsubrs
xchg
mov
ss
sub
cltd
iret
out
test
pop
repz
jno
repnz
rcl
add
mov
leave
xor
cmp
loopne
adc
xchg
mov
add
cltd
lods
lods
add
push
aas
mov
fcmovnbe
push
popa
jae
bound
int
dec
repnz
jae
add
mov
or
add
xor
xor
sbb
inc
mov
add
add
add
cmp
dec
sbb
dec
jns
sahf
xor
add
add
and
mov
mov
mov
dec
dec
dec
adc
arpl
jl
ljmp
or
add
xor
add
cmc
inc
inc
mov
gs
test
add
xor
jo
mov
in
push
out
in
call
cld
inc
jmp
out
pop
xchg
pop
jo
bound
xchg
cwtl
add
add
cmc
jg
insb
sub
sub
add
push
seta
dec
sbb
mov
pop
test
add
add
add
lcall
pop
sbb
cmp
xor
add
pop
addr16
and
mov
push
add
pop
das
data16
ljmp
test
jns
pop
and
add
xchg
mov
add
daa
xchg
addb
aaa
addr16
mov
ljmp
add
pushf
mov
cmp
add
dec
mov
mov
loopne
add
imul
xchg
inc
push
pavgb
add
in
gs
pop
mov
nop
out
stc
leave
scas
std
sub
test
add
sub
add
adc
mov
add
popf
push
dec
shll
inc
mov
dec
sbb
jbe
sbb
dec
mov
add
pop
pxor
pop
xor
jns
or
add
push
je
testb
add
xor
stc
mov
inc
cmp
add
js
in
xchg
int3
testl
cmp
sub
adc
in
sbb
decb
cmp
sub
cmc
jbe
xchg
test
add
nop
enter
jbe
jne
mov
add
cli
mov
pop
sbb
add
test
add
add
lea
add
pop
pop
pop
pop
push
loope
or
add
dec
ja
add
dec
and
cmp
add
add
add
inc
xor
jle
add
jmp
push
jns
add
aad
pop
repnz
add
dec
cmp
mov
push
push
mov
insb
mov
jg
lods
add
adc
aad
movsb
add
sub
dec
test
add
lret
ljmp
fldcw
or
add
xchg
add
orl
movl
add
enter
add
pop
push
aad
shlb
mov
test
add
mov
add
jmp
cld
fimuls
mov
addr16
arpl
inc
mov
add
mov
xor
cli
cli
sbb
pop
mov
add
inc
xchg
hlt
popa
icebp
sub
jecxz
pop
lret
add
add
add
adc
add
mov
add
insl
cmc
lahf
inc
mov
xchg
inc
or
add
adc
sbb
imul
push
adc
or
test
add
sbbl
push
add
adc
leave
pop
sbb
stc
or
add
add
mov
mov
add
sbb
adc
add
xlat
jmp
aad
cmc
push
add
add
in
xchg
xchg
and
add
mov
add
add
inc
js
rcl
or
sbb
ja
sub
add
mov
add
mov
cli
jb
mov
fwait
add
add
or
add
mov
adc
add
and
xchg
jmp
in
test
scas
lds
mov
add
add
xchg
call
mov
scas
fstl
inc
int3
sbb
lcall
nop
pushf
mov
xchg
dec
in
jge
jp
loopne
mov
clc
ret
gs
mov
pop
fcoms
add
xchg
add
xor
loope
add
popa
bound
lahf
cmp
sub
add
cmp
arpl
add
into
sub
add
fstpt
outsb
add
leave
int
jecxz
sbb
callw
sbb
test
push
add
inc
fwait
push
add
add
pop
jbe
inc
addr16
push
add
scas
pop
push
jne
add
mov
inc
popa
mov
mov
sub
jb
movl
and
add
add
mov
add
add
add
lods
mov
mov
add
push
add
sbb
jns
add
fsubs
inc
ss
mov
add
mov
call
xor
pop
push
stos
add
jge
mov
pop
mov
jno
or
add
enter
repz
daa
ret
mov
aaa
out
inc
xor
dec
pop
xor
cmc
or
add
add
ja
xor
dec
jnp
add
cmp
mov
pop
push
adc
add
add
fldl
push
hlt
addb
push
add
or
hlt
mov
mov
aas
incl
pop
aad
arpl
add
lcall
icebp
add
add
test
add
mov
add
ss
add
or
add
and
test
cli
sarl
divl
add
sub
sbb
xchg
fwait
and
push
add
inc
jae
mov
ficomps
cmp
fmull
add
pop
test
stos
add
fimuls
add
int
cmpsb
add
roll
add
inc
pushl
add
fdivr
sbb
sbb
add
cli
lea
pop
dec
or
adc
test
in
add
int
jmp
add
ret
inc
and
add
xchg
add
add
aad
mov
in
pop
mov
insb
in
adc
rcll
dec
inc
add
daa
cmp
cmp
add
dec
cmp
xchg
add
insl
mov
jle
pop
arpl
mov
popf
aam
out
addb
jge
inc
sub
test
add
add
fwait
cmp
fidivl
fs
dec
jae
psubsw
testb
add
add
popf
ljmp
mov
add
test
add
sbb
pop
cmp
imul
add
adc
icebp
and
add
xor
add
add
lds
jne
js,pt
fwait
arpl
add
jmp
mov
add
shlb
lret
out
pop
into
cmp
or
add
test
add
jge
je
stos
or
add
jno
add
jge
adc
enter
add
out
lock
dec
inc
cmp
jmp
mov
dec
ljmp
pop
cwtl
pop
cmpsb
add
bnd
jmp
mov
push
movsl
aaa
gs
cwtl
mov
fbstp
mov
int
or
add
mov
into
data16
add
fmuls
add
ljmp
jecxz
loop
add
pop
bnd
incb
mov
add
cmp
and
js
fcoml
and
fwait
sub
add
xchg
outsl
add
aaa
sbb
add
fcmovb
mov
push
add
or
add
movl
cmpsl
mov
push
test
add
cmpsl
sbb
cltd
sbb
sub
add
pop
pop
scas
or
xlat
sub
add
add
add
mov
cmpsb
add
dec
adc
ret
push
stos
add
sbb
mov
add
pop
pop
sub
add
ss
lock
shlb
imul
add
or
add
sbb
add
enter
xor
adc
add
nop
repnz
and
cmpsb
add
sbb
enter
add
aaa
jecxz
xchg
pushf
iret
dec
mov
add
call
scas
add
popa
adc
jne
and
test
xor
sti
mov
mov
push
add
add
divss
dec
fisttpl
dec
lcall
push
jp
je
and
rol
sub
add
xlat
mov
add
add
lcall
mov
add
jae
or
dec
fdivr
inc
mov
mov
add
rorb
inc
xchg
aad
popa
fstps
iret
cmp
inc
xchg
dec
das
and
add
imul
out
ret
std
jg
js
and
add
adc
out
mov
add
cmp
imul
out
sbb
fbld
add
inc
inc
sub
add
dec
push
add
sbb
add
dec
xor
lcall
neg
pop
ljmp
adc
jnp
cmp
les
scas
addl
rol
lock
cmp
and
add
jmp
push
hlt
adc
dec
cmc
adc
cmp
aad
ret
push
add
cld
cld
jge
add
dec
xchg
into
inc
popa
push
add
insb
pop
sbb
jmp
sbb
add
add
xchg
insb
lea
mov
add
or
add
xchg
loope
mov
add
scas
rorb
int3
add
addr16
fucom
mov
add
addb
testl
fsubr
sbb
pushf
testl
test
add
ret
shlb
add
mov
icebp
fildl
mov
add
adc
mov
add
pop
loop
clc
shll
out
dec
sub
add
aas
hlt
cld
mov
test
testl
push
push
js
add
movsb
add
stc
dec
and
add
add
xor
push
test
add
add
sub
addr16
pusha
je
or
and
add
push
and
mov
cli
loop
xchg
add
add
cli
add
gs
fimull
add
jl
xor
inc
and
add
cmp
push
adc
add
mov
xchg
jp
adc
ljmp
inc
add
stc
jae
sbb
aam
rorb
add
push
add
jb
ja
js
repnz
add
add
lods
add
nop
cmp
or
leave
stc
outsb
lds
ror
add
add
int
add
test
add
into
popa
cwtl
sub
inc
or
add
and
loopne
je
add
nop
sub
add
jo
test
add
sub
add
out
add
and
adc
add
mov
pop
outsb
ret
add
imul
dec
sub
int
xchg
pop
xor
rorb
addl
fs
push
rol
dec
xchg
jo
rcrb
cmpl
ja
pusha
sub
add
mov
and
mov
and
add
mov
add
cwtl
jle
add
xchg
test
add
push
push
lahf
sub
or
add
add
sub
jle
pop
nopl
xor
jmp
mov
scas
add
das
ret
pop
lahf
inc
movsl
mov
int
xor
rcrb
push
cmp
cli
or
add
out
test
add
outsl
dec
xchg
adc
sbb
test
add
cmp
pop
outsl
and
add
daa
push
stc
outsb
cwtl
jnp
cmp
enter
push
add
adc
out
mov
add
shlb
ljmp
add
cmp
pop
mov
adc
ret
repz
dec
or
mov
shrl
fistpll
shrl
add
jmp
addl
jecxz
call
dec
sub
mov
add
cli
pushf
adc
std
outsb
fsts
jecxz
ja
testb
movsl
sbb
test
add
add
fstp
daa
or
add
fsubrs
and
out
inc
push
add
mov
mov
mov
icebp
in
cli
and
and
sbb
mov
xor
ljmp
mov
add
add
pop
aas
stos
sti
mov
add
add
ret
pop
sub
addb
push
loope
add
and
mov
cmp
add
xchg
call
sub
add
icebp
loope
nop
jae
rcrb
add
in
mov
mov
fidivrs
add
fisubs
loope
push
inc
ret
add
lods
add
xor
ljmp
adc
lods
sbb
std
loop
test
jg
sbb
lahf
dec
in
aad
stc
bound
dec
or
push
pusha
imul
iret
sbb
dec
pop
sbb
sub
add
loope
mov
push
aad
ja
add
xchg
sub
push
lods
mov
push
jl
add
push
inc
pop
mov
pushf
fsubrs
mov
add
lea
add
cltd
inc
cld
and
add
inc
clc
mov
add
add
xor
mov
add
ss
add
movsl
aad
mov
add
shll
mov
add
into
jge
xchg
jns
add
pop
push
lahf
pop
xchg
testb
mov
xor
push
leave
lock
sub
add
push
aam
or
fisttps
and
addb
lret
pop
pop
sbb
cmp
and
add
lahf
imul
add
ljmp
add
addb
jl
jne
jecxz
xor
xchg
fcomp
imul
pop
scas
popf
repnz
loop
outsb
xlat
xchg
cltd
dec
or
add
stc
push
adc
push
or
add
jae
mov
add
add
add
vmovupd
shlb
fs
repnz
inc
dec
in
in
sub
add
fdivs
aas
mov
add
push
cli
pop
aam
mov
add
dec
dec
jb
pop
xor
dec
mov
add
jmp
add
mov
loop
addb
sbbl
mov
dec
repz
add
shll
jns
test
add
adc
fistpll
mov
nop
jno
add
shll
add
pop
mov
shl
adc
aas
rcl
and
add
nop
sub
add
les
ss
imul
inc
inc
inc
jge
cld
addb
jl
sub
add
dec
pop
xor
sbb
sub
add
out
mov
xchg
add
or
push
add
mov
add
call
push
jno
xchg
cmp
addb
jmp
mov
add
scas
add
jge
cmp
into
mov
std
sub
add
add
mov
loope
add
adc
push
xchg
add
push
cltd
pop
out
in
xor
das
in
iret
ljmp
dec
xor
add
arpl
add
jns
pop
mov
add
pop
or
lret
add
pop
mov
daa
shll
add
ret
in
jno
repz
jmp
inc
jecxz
popa
fnsave
mov
add
ds
add
cwtl
or
jo
add
and
bound
test
jmp
sub
add
jns
sbb
movl
mov
int3
and
add
cmpsl
aaa
push
add
mov
fcmovnb
push
loop
mov
lahf
lret
mov
jge
arpl
pop
jp
push
jae
aas
pop
inc
in
aaa
dec
lods
xchg
mov
xchg
add
ja
aaa
push
mov
pop
lds
xlat
mov
jns
adc
pop
pop
inc
fnsave
mov
add
insb
dec
inc
icebp
addb
pushf
dec
loopne
dec
cmp
popa
stos
add
xor
inc
addb
push
sub
add
rcrl
stos
add
or
add
scas
add
cmp
add
push
fs
addb
test
mov
add
and
xor
cltd
lock
add
cwtl
stos
add
cmpsb
add
mov
testb
add
jl
add
or
add
and
add
pop
and
push
jns
mov
addr16
popf
dec
jo
add
fcoms
add
or
xor
addb
add
add
push
and
fbld
jecxz
enter
push
ja
andps
repnz
add
jns
and
fcmovnbe
lret
hlt
lahf
fwait
jecxz
sarb
push
add
xor
pop
out
mull
add
nop
add
fistpl
add
add
rorl
call
push
enter
pop
cmpsl
enter
add
cmp
pop
adc
nop
xchg
adc
dec
adc
sub
add
loop
mov
test
shll
lcall
add
add
lock
add
ds
pop
push
cld
out
lods
add
les
add
mov
add
add
mov
mov
jo
dec
lret
dec
mov
test
add
add
inc
sub
add
test
add
loope
test
add
dec
call
add
xlat
xor
test
add
leave
xor
sbb
mov
push
rolb
insl
in
sub
add
jbe
stos
sbb
sbb
add
and
add
test
add
mov
jno
add
jp
add
push
add
lock
insb
je
out
movsl
test
adc
repz
add
imul
xor
xchg
pusha
hlt
dec
inc
inc
dec
ja
aaa
ret
add
adcl
jne
and
add
jmp
sbb
aaa
das
mov
add
add
ja
push
aam
insb
push
add
outsb
pop
and
xchg
push
add
lock
scas
enter
leave
dec
popa
dec
sub
add
add
inc
cmp
add
cli
das
fs
outsl
aaa
out
mov
mov
frstor
xlat
mov
add
add
xor
sar
inc
repz
add
dec
cmpsb
add
add
mov
shll
scas
add
sub
add
aad
out
xor
sbb
mov
sti
push
je
xlat
je
scas
cmp
stos
push
add
pop
mov
ljmp
flds
add
push
mov
push
aad
jmp
insb
pushf
jecxz
stos
and
xor
roll
mov
lret
addb
cmp
sbb
insb
inc
cmp
jbe
negb
xor
inc
xchg
xchg
into
scas
add
add
add
nop
out
pop
in
dec
lahf
gs
sar
mov
add
shrb
in
push
cmp
mov
add
mov
shrb
cmpsb
add
lds
stos
add
xor
jae
push
or
lods
add
int
imul
mov
add
xlat
xchg
cmp
add
add
mov
imul
cmpsl
ja
leave
stos
inc
or
sarb
push
jbe
cmpsl
das
sarl
out
iret
popf
mov
out
aam
ss
add
call
lds
add
push
bound
fsubp
bound
mov
add
adc
movsb
add
std
xchg
pop
xor
add
xor
fldt
shlb
add
mov
addb
sbb
and
add
dec
pusha
push
xchg
cmp
lods
mov
inc
pop
or
pop
xchg
mov
ret
xchg
js
inc
inc
into
daa
out
cmpsl
mov
cltd
nop
xor
dec
cmp
out
or
dec
lret
imul
fcmovbe
and
mov
adc
xchg
mov
add
aaa
outsb
sahf
adc
les
and
add
mov
push
out
sbb
add
push
outsl
sub
enter
leave
mov
add
jle
add
iret
loope
cwtl
leave
inc
push
add
lcall
xchg
add
add
addb
pushf
testl
pop
inc
push
jl
roll
mov
add
mov
pop
popa
call
xor
push
jge
shrl
add
adc
lock
xchg
add
sbb
inc
jbe
pop
push
sub
add
dec
cmp
pushf
pop
mov
loopne
scas
fnsave
add
mov
add
adc
add
enter
add
sub
add
mov
lret
ficomps
out
add
leave
mov
dec
xchg
icebp
lods
lock
cmp
add
loop
jmp
cmpl
mov
add
push
or
add
or
add
mov
push
jge
jno
sub
add
add
add
pop
dec
xor
std
mov
pop
jbe
push
add
pop
jbe
xchg
xchg
xchg
test
add
add
mov
add
add
inc
add
add
adc
add
into
push
out
pop
mov
frstor
inc
push
push
popa
daa
inc
sbb
test
add
dec
adc
mov
imul
out
leave
das
add
add
cmpl
adc
add
aam
pusha
cltd
arpl
push
inc
ja
orl
add
jnp
loop
stc
roll
aas
inc
pop
sub
add
mov
add
xor
cmpsl
imul
xor
pop
adc
add
and
add
nop
je
or
add
xchg
call
jne
jg
mov
cmp
pushf
dec
out
pop
popf
and
add
add
and
add
mov
sbb
pushf
sbb
adc
add
or
add
xchg
xchg
push
mov
add
add
lds
add
mov
xor
dec
mov
add
sbbl
mov
ljmp
push
jmp
repnz
sub
dec
mov
movsl
push
and
add
jl
mov
andl
push
cmp
fs
aam
cmp
add
lahf
pop
out
cwtl
addb
mov
jge
dec
jp
add
add
outsl
ljmp
ffree
cmp
xor
icebp
mov
jp
or
add
or
add
push
push
add
mov
lods
add
aam
add
mov
add
lock
stos
add
push
out
mov
jno
xchg
mov
xor
jno
mov
add
pop
pusha
xchg
pop
fwait
ds
cmc
jb
adc
xor
add
inc
sbb
add
in
add
xchg
jns
add
add
add
call
pop
jo
fucomi
or
add
mov
inc
mov
add
aaa
push
add
sub
mov
rcrl
pop
and
sub
bound
mov
loopne
clc
std
sbb
imul
pop
stos
add
jg
cltd
mov
dec
mov
out
lds
adc
xor
sub
add
mov
ret
add
pop
xchg
shrb
inc
icebp
jns
fmulp
pop
mov
sarl
clc
cmp
push
sub
add
mov
add
lea
mov
pop
lahf
and
adc
aad
outsl
and
add
aaa
or
xor
add
add
ja
sbb
sub
pop
jle
add
das
jns
mov
arpl
jno
and
add
daa
arpl
mov
add
add
scas
add
mov
add
out
jns
sti
push
jmp
xchg
adc
add
fsubl
sub
mov
bnd
inc
or
add
cmp
mov
mov
add
aaa
mov
sub
push
xchg
mov
jl
adc
add
inc
rclb
leave
xor
cmc
sar
out
lcall
mov
add
adcl
aad
mov
add
mov
and
shrb
icebp
pop
aam
dec
or
cmp
mov
add
jno
das
sti
adc
pushf
call
jp
in
movl
jb
xlat
inc
mov
add
mov
lds
add
arpl
mov
fcompl
lock
mov
add
pop
clc
int3
clc
pop
rcr
fs
mov
imul
adc
pop
lods
fcoms
add
xor
test
add
test
call
fyl2x
test
add
add
outsb
mov
adc
add
pop
repz
jecxz
cld
pop
push
jp
add
push
xor
cmp
loope
loop
sub
jb
mov
nop
fidivrs
push
mov
sbb
loopne
pop
pop
in
xlat
das
push
pop
fwait
sub
add
add
negb
imul
stos
dec
into
outsl
dec
dec
loopne
ret
call
in
ljmp
mov
into
in
out
add
jns
pop
test
inc
or
add
repnz
mov
lret
mov
add
inc
sub
cmp
shll
add
push
roll
fisubl
add
jp
dec
sub
insl
push
jb
jp
test
and
add
add
popf
push
sub
add
xchg
push
mov
add
das
sub
add
mov
add
lods
add
push
push
sub
add
add
add
cmp
push
mov
xor
ret
mov
shlb
adc
out
out
mov
add
das
in
andl
addb
xor
cmp
pop
xorl
add
jne
icebp
jg
xchg
xchg
jecxz
pop
call
outsb
fcomip
rcrb
loope
add
inc
aad
arpl
notb
sub
add
push
stc
insb
pop
fcompl
add
push
add
cld
je
out
dec
lods
add
inc
add
je
cmc
mov
addb
jmp
mov
jne
cli
push
add
sbb
adc
ret
add
sbb
jno
mov
adc
dec
add
cmpl
addr16
jnp
cmp
rcrl
cmp
in
mov
inc
and
add
dec
xor
add
add
pop
addr16
mov
pusha
inc
pop
push
sbb
add
test
leave
push
ret
pop
addr16
add
add
jg
xchg
sub
add
in
mov
add
inc
sbb
mov
pop
cmp
ficompl
inc
mov
add
movsb
add
cmp
or
add
stos
adc
or
dec
sub
lret
rcrb
ljmp
push
xchg
inc
adc
jne
loopne
or
add
pop
or
in
mov
out
jecxz
add
dec
stos
add
add
add
xchg
mov
add
jecxz
js
int3
mov
shlb
in
fmuls
add
dec
adc
add
movsb
add
dec
add
fidivl
push
addb
jle
fbld
xor
cli
add
add
inc
xor
icebp
jb
xchg
cvtps2pi
jecxz
xchg
and
jbe
dec
outsb
or
add
das
and
add
les
int3
outsl
iret
adc
add
cmp
sti
cli
push
add
lcall
pusha
mov
hlt
xor
sub
add
sar
popf
sbb
icebp
xchg
loop
push
pusha
mov
pop
ds
repnz
daa
push
add
cmp
dec
fsubrl
add
jge
xchg
add
add
popf
pop
add
mov
js
notl
adc
test
repz
adc
mov
mov
add
aad
pop
pop
lock
mov
insl
mov
add
ljmp
lds
enter
scas
add
push
lret
add
add
imul
into
sub
add
add
adc
into
xor
addl
add
inc
jl
dec
pushf
adc
inc
push
ja
cmp
mov
add
addb
xchg
push
fsubs
dec
push
or
add
add
fwait
sbb
movsb
add
icebp
mov
mov
fwait
out
pop
ret
scas
add
xlat
sbb
inc
dec
jl
nop
mov
in
dec
push
test
add
pop
mov
add
inc
and
inc
gs
add
mov
ret
add
and
add
cmp
jnp
jae
add
xor
sub
punpckhdq
and
add
insb
inc
fcompl
or
add
sti
push
xchg
sarb
xchg
mov
sub
xchg
jns
xchg
add
clc
sub
add
and
add
add
sub
and
lsl
popa
xchg
imul
mov
dec
pop
dec
pop
cmp
mov
add
mov
add
pop
push
out
push
push
addb
push
sub
shlb
jne
stc
sbb
add
cmpsb
add
ds
enter
xchg
sub
add
mov
add
repz
fdivl
add
adc
xchg
aad
dec
add
push
xor
cmp
pop
lds
or
sti
inc
leave
jbe
xor
je
push
push
imul
adc
add
cmp
lods
fdivrs
cmp
push
mov
insb
jmp
push
add
xchg
pop
rcr
out
bound
add
cmp
xor
idiv
les
or
jne
popf
pop
cmp
adc
add
pop
leave
and
add
and
add
cmpsb
add
addb
arpl
pop
xor
data16
inc
push
add
push
in
les
xor
fmuls
add
fstpl
jae
jecxz
and
daa
adc
mov
push
xchg
add
add
nop
push
add
add
test
sbb
add
loop
repz
xchg
inc
cmp
sbb
rclb
xchg
add
mov
dec
outsl
in
push
add
adc
xorl
add
add
jno
add
sub
xlat
push
add
or
add
add
adc
dec
test
add
lahf
icebp
nop
pop
out
test
add
mov
add
pushf
fisubs
mov
add
add
add
clc
sbb
pcmpgtd
sub
add
pushf
cli
lods
add
sti
subl
mov
inc
bound
push
adc
adc
mov
mov
add
movsl
test
xchg
add
mov
scas
push
in
xor
pop
lahf
call
jle
push
in
adc
bound
pushf
xchg
xchg
cli
sti
cwtl
jno
add
push
pop
shrb
inc
jp
xor
xor
flds
pop
hlt
mov
add
mov
into
imul
cmp
mov
mov
push
aaa
in
xor
je
fildl
stos
cmpsl
dec
pop
jp
sbb
add
addb
cwtl
mov
sub
sub
add
fs
or
add
mov
push
sub
ret
add
mov
adc
xlat
mov
inc
arpl
add
xor
add
mov
je
add
movsb
add
sub
test
sub
sub
xacquire
jae
add
adc
add
pop
sub
or
jp
pusha
and
mov
add
jb
cmpsl
mov
mov
mov
add
scas
xor
push
cli
sub
lcall
adc
xchg
jp
aas
lods
rolb
sbb
lods
out
mov
jp
stc
cld
idivb
pop
adc
lcall
add
add
add
paddsb
int
jl
add
add
jl
imul
pop
clc
sysenter
sbb
icebp
sbb
add
jne
incb
sahf
cmpsl
cmpsb
add
mov
add
testl
out
add
enter
pop
push
int3
and
add
add
shl
dec
xchg
add
roll
sti
loope
add
lcall
in
jo
movsb
add
fldcw
add
push
mov
cltd
psrad
mov
clc
and
add
rorl
add
rol
inc
sti
lret
ljmp
int
scas
add
mov
add
fsubs
add
add
add
sbb
or
add
rorl
repnz
stos
push
jg
pop
rorb
add
inc
cmp
sub
xchg
and
add
repnz
push
jno
add
sub
add
pusha
into
shlb
add
add
in
cwtl
add
add
shll
add
inc
daa
push
enter
repnz
in
push
add
dec
mov
inc
mov
add
loope
aad
in
mov
mov
in
xchg
add
push
lret
jl
je
fdivrs
jg
aas
das
sahf
addb
jno
dec
sbb
icebp
mov
add
hlt
mov
add
call
inc
dec
mov
and
lret
push
dec
cmpsb
add
pop
leave
pushf
hlt
sub
add
stos
stos
pusha
mov
fwait
xchg
add
or
add
cmc
icebp
pop
or
add
push
jle
lock
test
add
xchg
xor
push
pop
jne
add
push
imul
call
inc
xchg
adc
ljmp
jle
xchg
add
xchg
adc
out
add
push
add
add
loopne
sbb
scas
loopne
sti
out
and
add
inc
test
add
add
and
andl
push
ficomps
movsl
pop
jp
rol
mov
add
add
mov
push
in
and
add
hlt
ljmp
into
repz
adc
adcl
test
add
pop
pop
add
add
data16
add
loopne
imul
sbb
mov
fstpt
add
cmp
popa
popf
pop
fwait
movsl
jmp
add
push
cli
addb
sbb
das
out
inc
jb
pusha
pushf
das
jns
xchg
add
call
or
add
add
jp
bound
inc
and
add
add
xlat
dec
sbb
pop
cmpsl
push
pop
pop
jle
and
add
sub
add
outsl
xchg
adc
sbb
loopne
or
add
add
cmpsb
add
xchg
adc
iret
add
add
addl
into
add
add
ljmp
push
push
stos
pop
int
pop
pop
addr16
mov
add
loope
in
adc
push
cmp
sub
add
jl
add
test
add
add
add
fadds
xor
add
scas
add
lock
xchg
movsl
gs
int
loop
addb
sub
add
addb
dec
cmp
cmpsl
mov
sub
add
cmp
int
sub
add
cli
mov
rorb
ds
loop
sub
add
add
xor
mov
test
add
mov
js
cmp
push
add
js
push
pop
xchg
add
int
add
movl
andl
dec
jge
mov
add
divl
bound
enter
daa
sbb
mov
fisubrs
int
and
add
out
enter
lret
cmp
cmp
in
out
xchg
imul
push
repnz
mov
mulb
pop
mov
add
or
add
ret
lahf
cmp
daa
mov
add
sub
daa
pushl
push
fstpt
lcall
mov
xchg
ret
rclb
stos
sub
sub
add
mov
mov
fistl
mov
mov
bound
inc
fcmovne
xchg
push
add
push
xchg
xchg
push
loop
xor
incl
adc
mov
das
stos
add
mov
cmp
stc
xor
dec
nop
enter
stos
add
negl
inc
dec
push
pop
stos
add
mov
mov
adc
iret
cmp
pusha
and
xchg
mov
and
add
add
add
fsubs
add
jne
lods
add
inc
mov
add
sub
hlt
sub
add
and
add
ljmp
add
add
mov
xor
test
add
pop
add
clc
xchg
sub
jmp
mov
std
jmp
dec
add
add
add
add
sbb
and
push
xor
fs
data16
push
int3
xchg
icebp
push
add
aaa
in
or
add
out
cmpsl
in
sar
sub
add
repnz
add
ds
cmp
mov
cltd
out
mov
add
push
lahf
std
scas
add
pop
lret
or
add
lahf
movl
add
mov
push
jecxz
icebp
and
push
add
mov
pushf
xchg
mov
je
add
nop
imul
ds
ljmp
lret
adc
sbb
add
ret
shrb
fwait
xchg
and
cmp
xor
outsb
ja
jge
mov
adc
xchg
adc
icebp
or
add
addb
sbb
int3
movsb
add
into
lret
add
and
xor
mov
add
add
jne
add
leave
aam
stos
xchg
sbb
pop
mov
stc
inc
aas
fs
jge
aad
add
aam
or
add
dec
sar
cmp
addb
loop
out
cmp
inc
sub
add
mov
sbb
test
add
sbb
fxam
out
mov
mov
add
adc
xlat
loop
jle
add
mov
jb
add
filds
jne
push
xchg
outsb
inc
out
repz
arpl
adc
xchg
xor
jg
mov
shrb
mov
add
mov
out
imul
cmp
cmp
in
mov
add
lret
add
add
add
cmp
add
mov
enter
add
mov
xchg
mov
xchg
or
mov
add
dec
mov
add
xchg
push
and
add
mov
add
xchg
movsb
add
dec
add
add
jmp
add
mov
xchg
hlt
loop
adc
add
ljmp
fimull
push
cwtl
jne
lock
aam
gs
fstl
cmp
scas
addb
rcll
jo
outsl
xchg
das
lock
add
add
pop
insl
lock
mov
xor
push
adc
imul
add
fcompl
push
jo
out
in
dec
testl
lock
outsb
adc
fstpl
mov
lret
gs
mov
add
push
mov
add
jo
stc
inc
push
sub
add
aad
insb
push
add
mov
ljmp
stos
jno
add
arpl
out
jle
clc
cmp
lret
mov
mov
add
xor
aas
dec
mov
and
nop
jmp
ret
dec
aaa
push
lcall
inc
rcrl
add
loop
cwtl
or
popa
or
add
outsl
adc
add
loopne
ss
jp
test
add
add
jg
insl
ljmp
mov
xor
adc
and
add
mov
add
in
and
mov
in
adc
ret
in
mov
add
insl
inc
loop
mov
imul
fs
inc
cmp
push
enter
ljmp
cmp
add
jns
add
add
addb
mov
mov
add
jb
out
sbb
add
cmc
out
mov
test
or
add
xor
add
or
add
add
fnstsw
xchg
outsb
nop
test
mov
add
add
push
sbb
add
ret
mov
add
inc
mov
add
stos
add
push
std
mov
push
cmp
add
gs
movsb
add
js
test
add
movsl
movsb
add
stos
add
xchg
ds
out
push
loopne
clc
nop
mov
mov
mov
push
lock
lea
js
add
outsl
sub
add
cli
xor
add
add
cmp
int3
sub
add
push
adc
add
or
sub
div
adc
or
add
add
cmp
add
xchg
outsb
lods
add
and
inc
mov
into
jmp
xor
add
pusha
xchg
ret
fimull
lret
call
add
ljmp
dec
sbb
mov
lcall
add
dec
sub
add
mov
cmp
or
sti
mov
inc
cmp
das
dec
dec
mov
repz
sub
add
mov
add
push
jne
mov
add
add
sbb
aad
out
hlt
gs
sti
cmpsl
mov
imul
mov
add
mov
inc
popa
mov
add
fwait
addr16
ret
add
jl
add
or
add
or
add
cmp
mov
imul
and
out
dec
in
and
add
and
add
add
mov
mov
sub
add
leave
jl
test
outsl
ds
stos
add
cld
mov
add
pop
cld
clc
jnp
xor
add
pop
in
pop
sub
inc
inc
mov
in
aam
jbe
add
add
push
pop
mov
sub
add
cmp
add
add
xor
fstps
add
pop
dec
out
jb
mov
add
sbb
ficoml
add
push
stos
add
cmpsb
add
xor
aaa
xchg
add
jae
add
push
mov
add
mov
dec
xlat
xor
add
add
add
leave
fdivrs
add
add
stos
xor
add
mov
inc
dec
mov
aam
add
add
fs
scas
mov
ja
loop
push
dec
gs
xchg
fimull
inc
and
add
sti
jecxz
push
test
shl
push
mov
add
fistps
jp
stc
shlb
add
mov
add
jge
mov
add
jle
mov
or
add
mov
test
add
dec
cmpsb
add
in
insb
mov
add
add
arpl
sub
add
aad
inc
movsl
jne
notl
ljmp
mov
js
dec
clc
iret
push
cmp
push
aad
inc
add
fiaddl
sahf
outsb
jle
or
add
addb
pop
cmp
popa
fists
dec
psllw
adc
outsb
xor
jge
sub
add
ja
lahf
lods
add
mov
hlt
xchg
pop
andl
aam
out
fsubs
xlat
int3
wrmsr
push
xchg
dec
adc
mov
mov
adc
mov
and
je
jle
xor
adc
test
add
add
cmp
adc
call
add
dec
mov
add
lret
and
adc
mov
add
jo
pop
sub
add
and
add
add
cmp
cld
shrb
inc
push
mov
jecxz
add
fucomi
js
add
add
dec
cmc
icebp
mov
cmp
cmp
repnz
rcl
cwtl
xor
push
pop
inc
xor
push
xchg
push
xchg
into
sbb
add
inc
js
sbb
mov
push
mov
cmp
and
lods
lds
cmpsl
sahf
sub
sti
push
repnz
fists
pop
and
pusha
pop
push
in
pop
addr16
loop
fcmovu
cltd
xor
or
xchg
test
add
add
jae
lea
push
sarl
add
nop
adc
dec
add
add
dec
lret
cmpsb
add
jp
outsb
ret
lahf
mov
mov
mov
add
mov
add
jne
out
pop
jmp
aas
sbb
loopne
jge
inc
pop
dec
pop
and
push
mov
add
addb
mov
js
add
xor
jns
icebp
sub
add
push
or
shl
pop
test
add
push
add
lock
push
add
adc
mov
add
mov
in
aad
fmuls
xchg
add
loop
fcmovu
faddl
arpl
sti
sarl
int3
pop
pop
jne
ret
imul
pop
dec
xchg
fs
icebp
addb
cmpsl
jecxz
sub
add
add
xchg
add
inc
jno
mov
add
scas
add
pop
dec
cltd
xor
xchg
add
add
add
cli
lret
mov
or
jb
cmp
daa
jg
push
sbb
dec
xchg
add
add
mov
shll
sub
add
add
jb
adc
mov
rcll
js
and
add
or
add
scas
add
insb
xchg
fdivp
jnp
mov
add
add
add
pop
imul
inc
dec
int
xor
add
insb
xchg
add
inc
fsubrs
add
out
mov
sar
add
push
scas
add
shll
xchg
add
sbb
add
fs
add
cmp
fsubl
ds
push
inc
add
add
xchg
cmpsb
add
jge
stos
add
bound
dec
mov
inc
sub
dec
mov
add
add
add
mov
add
add
cmp
add
outsl
pop
cmp
lahf
cmp
aam
mov
dec
push
ret
jmp
add
mov
sbb
mov
push
jmp
fisttpl
repz
or
aaa
jp
lods
add
fs
add
add
add
pop
xchg
ljmp
and
les
inc
inc
insl
js
js
icebp
xchg
fistpl
mov
add
imulb
add
jae
and
add
pushf
ret
fs
mov
inc
ljmp
add
add
add
and
stos
add
jne
add
jns
leave
xchg
add
add
jo
jge
mov
add
imul
dec
push
pushf
movsb
add
lods
mov
inc
iret
movsb
add
cmc
push
add
rcrb
in
fidivrl
push
mov
add
test
pop
jmp
jle
sub
add
pop
sub
add
add
mov
scas
add
xlat
fdivr
mov
lret
imul
test
loop
sbb
inc
push
stos
and
add
imul
cmpsl
fs
dec
mov
xor
cli
pusha
mov
xor
sbb
add
icebp
jo
dec
mov
and
cmc
enter
mov
add
and
mov
repz
add
outsb
inc
les
sahf
xchg
scas
add
pop
mov
add
mov
test
add
add
jb
add
push
decl
pop
lods
add
mov
aam
add
adc
clc
test
add
add
and
adc
pop
inc
xchg
pop
out
aas
mov
rcrb
add
cmpsb
add
rcrl
popf
aam
ds
dec
insb
scas
add
stos
add
mov
lcall
mov
add
cmc
mov
adc
js
add
shll
out
xor
jb
adc
rorb
dec
mov
push
lods
add
inc
loopne
mov
pop
dec
jnp
jno
add
repz
add
lahf
cli
dec
adc
jl
stc
or
add
test
add
add
bound
pop
jb
inc
dec
mov
call
icebp
popa
daa
add
add
call
adc
sub
add
add
xchg
push
mov
xor
push
shrl
add
aam
sbb
mov
add
outsb
test
add
cltd
adc
add
add
inc
cli
push
or
add
add
sbb
imul
push
or
add
scas
cmp
xchg
filds
ljmp
xor
mov
sarb
mov
mov
in
ficoml
jno
or
add
insb
or
cmc
in
mov
fs
add
lret
pop
mov
add
jbe
adc
xor
hlt
dec
or
add
inc
inc
test
ljmp
add
add
inc
add
int
sub
add
pop
xchg
test
add
xor
add
mov
add
call
and
add
jns
imul
add
or
xchg
in
mov
add
arpl
outsb
cmp
add
add
sub
add
fstl
push
test
rorl
jno
mov
and
add
add
jne
mov
jmp
nop
inc
dec
loop
mov
add
xor
insl
das
addl
add
rolb
push
add
rclb
js
add
jp
or
inc
ret
mov
or
add
add
push
mov
xchg
mov
add
mov
add
mov
pop
aad
aam
fcomps
adc
mov
leave
sub
add
sub
add
out
add
jg
mov
fcomps
mov
popa
loope
sub
add
lea
popa
aas
inc
leave
push
sbb
add
xor
call
add
dec
movsb
add
cmp
mov
movsl
mov
jmp
and
add
jbe
adc
cli
push
xchg
das
mov
add
jnp
add
rcrl
cwtl
sbb
fcoms
mov
sub
add
add
and
xchg
and
add
mov
imul
or
js
scas
add
std
push
jb
fimuls
add
push
add
mov
lods
inc
out
adc
sbb
into
push
mov
add
xor
mov
mov
add
push
cmc
adc
jno
lods
add
lea
jg
sub
jo
add
xchg
push
aad
jle
cmp
subl
mov
inc
shrb
arpl
jp
add
mov
xchg
push
lds
inc
arpl
add
std
push
cmp
jp
in
xchg
inc
push
cmp
aam
adc
add
iret
cmc
pop
xchg
imul
clc
pop
movsl
cmp
sbb
jne
sbb
add
lcall
mov
xchg
jmp
pusha
adc
jns
add
xchg
outsl
icebp
or
add
jg
inc
mov
out
add
rcr
mov
pop
xor
adc
add
xor
notl
jge
into
mov
pop
lahf
cmpsl
push
add
push
test
jmp
sarb
in
or
test
add
fstpt
add
jae
in
fs
or
cmp
loop
jne
pop
push
add
xchg
pop
push
ret
push
test
addb
add
add
stos
add
jne
jno
add
sub
adc
mov
push
scas
add
cmp
and
add
jmp
adc
add
clc
movsb
add
mov
jns
inc
pusha
cmpsb
add
scas
pop
dec
inc
addr16
add
sbb
xchg
inc
push
fcomps
repnz
pusha
test
add
xchg
add
sahf
push
dec
test
mov
rclb
icebp
sbb
xchg
cmp
out
push
loop
add
jnp
sarl
sti
cmp
fcoml
add
inc
pop
mov
pushf
sub
add
cmp
std
ret
add
mov
add
add
dec
inc
sbb
repz
dec
mov
jmp
jmp
lea
in
xor
mov
jne
add
divb
flds
pop
xor
dec
mov
jns
cvtpi2ps
add
add
lret
mov
add
fcompl
pop
xchg
adc
add
int
stc
inc
inc
push
cmpsl
test
mov
push
and
add
add
xor
fstp
add
divl
outsl
pop
clc
rorl
outsb
cwtl
sbb
cmp
arpl
shlb
gs
or
add
in
cltd
or
add
add
sub
add
xorl
insl
data16
out
in
std
mull
or
mov
out
inc
ds
testl
js
xor
inc
cmp
aaa
push
mov
outsb
icebp
and
js
sbb
add
shlb
or
add
aas
dec
gs
rcrl
nop
pop
cwtl
adc
add
stos
add
and
add
enter
fisttps
inc
int
arpl
mov
fidivs
mov
add
mov
imul
push
cli
mov
sbb
mov
add
add
add
pop
inc
loopne
ljmp
add
lahf
repnz
or
add
ss
mov
cmp
jno
push
adc
inc
inc
jg
xor
popa
ror
pop
cmp
lods
sar
les
cli
and
in
mov
leave
scas
add
push
add
adc
out
aaa
or
add
aad
sub
add
cwtl
mov
add
arpl
rol
je
stc
std
inc
call
jns
pop
xor
mov
push
notl
cmp
ret
ds
add
popa
add
add
aas
xchg
push
sub
add
pop
stos
add
add
mov
jns
xor
and
add
icebp
jle
add
add
add
loope
out
xchg
add
hlt
mov
push
cmp
shrl
shlb
test
jp
mov
sbb
aaa
aam
xchg
jg
adc
mov
add
cmp
xchg
push
mov
add
lahf
imul
add
sbb
nop
push
push
mov
out
jb
push
sbb
or
push
push
add
add
add
push
repz
and
add
add
loope
std
repz
in
mov
push
xchg
call
adc
out
in
push
aas
iret
test
add
shll
xlat
test
or
add
add
mov
inc
shlb
scas
add
inc
sub
add
pop
lcall
fisubrs
add
dec
stc
dec
push
mov
add
add
scas
add
dec
movsb
add
neg
pop
inc
adc
mov
inc
popa
nop
mov
add
ret
add
mov
add
ss
or
add
adc
ret
add
sbb
add
aam
dec
stos
imul
add
lods
add
pop
loop
scas
push
and
add
pusha
cld
out
cmc
loop
add
xchg
inc
addb
insb
aad
ret
add
add
aam
cmp
jmp
add
sbb
dec
nop
pop
mov
or
add
inc
or
add
push
add
pop
jecxz
loop
and
add
lcall
xor
ror
movsl
jne
cltd
pop
shr
pop
cmp
add
pop
or
lods
in
pushf
fcmovb
imul
xor
xchg
sub
add
out
int
adc
stos
aaa
or
add
call
adc
cwtl
stos
pop
push
out
cli
stc
sarb
or
int3
test
mov
std
mov
jo
mov
or
add
divps
inc
and
add
cmp
xchg
sbb
lock
icebp
mov
sub
ret
imul
insb
xor
cmpsb
add
pushf
outsb
add
push
out
mov
xor
movsb
add
in
inc
shrl
pusha
pop
xor
cmp
inc
push
icebp
rolb
push
or
dec
mov
adc
pop
fldenv
and
mov
add
shll
add
enter
test
add
add
ja
rolb
fwait
lret
cld
pop
push
add
loope
fmul
lret
mov
and
mov
add
mov
add
mov
xchg
add
cmp
mov
add
jle
ret
push
pop
push
in
rorl
add
add
dec
adc
lret
add
mov
add
mov
push
stos
inc
xchg
in
pusha
mov
jl
dec
out
pop
ret
addb
adc
add
push
add
xchg
xor
add
in
xchg
push
add
or
add
enter
dec
pop
mov
push
jbe
xchg
add
outsl
inc
dec
repnz
add
hlt
inc
lret
cmc
fbld
add
jnp
add
jo
add
test
add
push
add
cmp
fimuls
lods
add
push
cld
add
in
test
sub
addr16
pop
jbe
fimuls
add
in
mov
test
add
outsl
cmc
inc
cmpsb
add
aas
mov
dec
insl
lock
cltd
rcrl
mov
mov
call
add
jmp
sub
add
add
cltd
xor
add
cmp
cmpsl
loope
adc
and
loopne
adc
clc
mov
and
add
imul
movsb
add
push
add
add
add
bound
pusha
inc
push
addb
in
cmp
xor
add
outsl
mov
xor
loop
mov
mov
xchg
mov
push
inc
filds
inc
xor
pop
adc
add
das
xchg
add
sub
add
mov
out
out
jmp
add
or
add
xchg
neg
sub
add
add
in
pop
inc
ljmp
fnsave
cmc
xor
popf
mov
jl
out
scas
cwtl
sub
add
add
shrl
add
int
rcr
jl
push
xchg
dec
fidivl
lcall
ja
mov
sbb
jl
stos
add
mov
jno
in
xor
cmp
stc
adc
test
aad
mov
jle
das
add
add
dec
mov
dec
lcall
in
outsl
mov
and
mov
and
add
add
push
mov
add
add
adc
sbb
sub
add
add
sbb
push
rolb
mov
push
adc
jae
fnstsw
call
pop
jnp
cltd
and
add
sbb
push
add
dec
mov
je
adc
cmp
or
add
mov
cmp
fdivrl
gs
push
sub
mov
push
push
in
or
and
add
addb
adc
mov
jl
int3
cmp
mov
mov
fldl
outsl
jg
add
xchg
dec
xor
lea
mov
add
dec
mov
mov
xchg
jle
dec
xlat
test
and
add
jno
vpunpckldq
outsl
dec
repnz
leave
cld
mov
je
dec
and
add
add
clc
out
add
push
mov
jp
add
stc
addb
test
or
add
ret
cmp
mov
syscall
fs
insl
jecxz
fs
and
add
jecxz
movsl
in
mov
pop
dec
xchg
fadd
shll
pop
aad
mov
or
addb
xlat
les
mov
add
xor
loopne
sbb
push
mov
lods
or
sbb
inc
popf
std
in
inc
push
add
cmpsb
add
jge
pop
and
add
jl
add
jno
jno
and
add
loop
pop
iret
xchg
pop
call
jae
and
add
sarl
or
add
or
inc
orl
jle
cltd
sub
add
add
popa
clc
sbb
sub
sub
jnp
add
mov
mov
inc
jecxz
cltd
and
cli
int3
arpl
adc
inc
xchg
xchg
xchg
xor
mov
add
insl
fcoml
cwtl
jle
inc
mov
mov
push
movsl
jne
sub
add
or
add
dec
fdivl
pop
sbb
push
mov
add
pop
dec
mov
les
adc
push
xchg
call
add
repz
pushf
addb
or
ljmp
or
add
test
add
test
add
loopne
dec
scas
test
add
mov
add
and
add
lock
inc
subl
add
mov
loop
lcall
aad
add
and
add
add
inc
mov
mov
add
add
dec
push
add
jp
jo
mov
add
in
cmp
inc
scas
mov
add
push
mov
xor
jmp
pushl
in
enter
add
cmp
xor
add
push
shl
push
aad
sbb
pusha
xorl
mov
add
add
mov
xlat
leave
sbb
js
nop
fwait
leave
mov
cli
inc
aas
testl
out
pop
inc
lods
add
mov
add
add
imul
add
pop
std
lods
add
sub
add
insb
mov
lret
out
clc
pop
and
push
xchg
lret
sbb
jo
add
xlat
cmc
les
sbb
aam
add
stos
add
pop
mov
push
mov
fdivrp
ret
dec
jne
push
pop
loope
or
mov
add
daa
push
jo
cmp
or
add
push
enter
ficompl
push
pop
dec
cli
clc
inc
adc
xor
add
sbb
jp
mov
js
mov
or
add
mov
ljmp
xor
xor
push
push
gs
and
add
add
xchg
jecxz
push
or
add
jmp
aas
jmp
jp
add
pop
shl
stos
add
aam
adc
add
shll
daa
push
addb
fsubr
add
aaa
push
push
hlt
clc
vcmpss
test
add
test
xor
push
push
ds
adcl
add
add
pop
or
fidivrl
mov
inc
mov
add
push
ret
jp
xchg
add
popa
ljmp
mov
add
pop
or
xchg
and
add
add
jl
out
arpl
scas
sbb
add
add
add
rcrb
mov
xchg
jge
add
add
inc
addb
cmovp
aad
mov
pop
cmpsl
negl
add
add
outsl
pop
jno
push
movsl
cld
push
int
sahf
sub
outsb
cltd
jae
add
add
and
and
add
xor
outsl
xchg
dec
insl
insl
imul
add
mov
addb
sub
add
add
cltd
out
add
lods
add
pushl
addb
pop
mov
adc
stos
add
das
inc
lea
xor
jmp
pushf
popf
jp
leave
ja
add
lds
das
sub
add
dec
push
push
aaa
xor
push
add
xchg
sbb
and
add
mov
daa
aad
push
mov
jmp
add
pop
jno
mov
add
add
dec
ds
inc
adc
stc
push
or
add
add
dec
sbb
lods
add
movsb
add
sub
inc
inc
cmp
pushf
into
mov
add
in
push
push
inc
jp
jecxz
stos
or
cmp
out
aas
mov
fldt
add
fstpt
aad
iret
xor
pop
inc
inc
mov
test
add
jne
loopne
frstor
add
mov
add
mov
add
loopne
mov
mov
addb
xor
dec
lret
push
xor
or
add
mov
add
lret
lret
add
imul
inc
test
lcall
jo
add
call
ret
or
add
std
decb
add
or
addb
push
lods
inc
outsb
movsb
add
sar
out
mov
add
out
xchg
repz
mov
xchg
sbb
mov
arpl
push
add
jecxz
or
push
inc
add
sbbl
or
add
or
hlt
hlt
mov
add
outsb
divb
mov
inc
cmpsb
add
cmpsb
add
sub
push
sti
xor
add
mov
test
sub
add
inc
mov
dec
shrl
xchg
cmpsb
add
jmp
data16
xor
popf
adc
aas
push
mov
ret
inc
jmp
in
sahf
sub
add
add
ss
pop
add
add
pop
negb
inc
testl
mov
sub
adc
out
adc
sti
xchg
or
add
int
dec
jnp
inc
xchg
dec
popf
fwait
pop
test
cmpsl
jo
in
test
icebp
jbe
je
cmp
push
mov
add
add
movsl
shrl
add
scas
mov
xchg
mov
repz
add
mov
add
out
jmp
mov
flds
add
mov
cmc
mov
add
jecxz
jmp
mov
pusha
fwait
std
pop
sbb
cmpsb
add
xor
cmp
ljmp
addr16
into
mov
add
cmp
xor
sahf
add
jl
sub
add
mov
fimull
mov
cmc
jne
mov
add
pop
pushf
enter
add
add
add
xor
notl
jo
scas
add
inc
shlb
out
stc
in
mov
aam
lea
jecxz
sahf
ja
ds
jmp
movsl
jmp
das
xchg
dec
mov
and
in
fisttpl
cmpsb
add
dec
outsl
cmc
inc
orl
dec
repz
add
xchg
iret
cmp
add
dec
rcrb
dec
stos
add
stc
and
add
adc
std
add
push
xor
adc
ss
add
add
lea
add
pop
adc
shlb
and
jl
dec
pop
addr16
add
into
inc
inc
lds
cltd
sarl
sbb
push
sub
add
vcomisd
add
mov
add
add
add
add
loopne
inc
shr
add
outsb
jge
imul
add
mov
jnp
ljmp
add
into
dec
or
add
add
iret
mov
cmpsl
adc
cmp
mov
and
add
dec
xchg
fnsave
pop
or
add
movsl
sbb
add
testb
add
jns
mov
add
jg
fnstcw
lret
push
and
add
mov
ret
aaa
mov
add
sub
sti
push
ja
add
xlat
or
xchg
add
mov
cld
sbb
or
gs
dec
mov
ret
jg
fimuls
cmp
add
push
add
int3
inc
stos
push
call
outsl
xorl
add
push
gs
in
add
pop
add
add
ljmp
loop
movb
popf
and
add
adc
das
mov
sbb
xchg
cltd
int3
pmulhw
out
pop
inc
push
pop
fisubs
add
pop
xchg
popa
cltd
xchg
mov
fstpl
adc
add
sbb
cmpsb
add
jns
mov
lock
mov
add
mov
add
add
mov
mov
loop
fbld
push
add
loop
jle
or
add
dec
imul
adc
int3
jecxz
cmpsl
movsl
adc
mov
adc
xchg
fdivrs
mov
ss
mov
inc
in
mov
add
popa
addb
aas
test
lret
scas
add
je
or
add
pop
ror
sub
jmp
push
xchg
pop
jl
int3
int
xchg
jmp
dec
push
jb
fwait
out
adc
lock
add
push
or
or
add
dec
jne
dec
push
repnz
add
and
push
mov
add
sbb
ds
data16
aas
jp
sub
add
add
add
or
add
movsl
in
imul
shlb
dec
add
xchg
daa
scas
dec
and
add
jmp
icebp
cmp
pop
int
fsub
mov
mov
sub
xchg
xchg
inc
pop
in
adc
and
sahf
int3
lcall
xchg
add
push
mov
add
pop
fwait
dec
outsb
cltd
in
xchg
pusha
pop
mov
inc
imul
cld
popf
jnp
add
stos
pop
ror
cmpsb
add
rcll
cmpsl
cmp
insl
jno
mov
add
jbe
loopne
lcall
aas
stos
inc
jl
stos
add
lcall
cmc
test
add
add
jl
add
lods
push
xchg
test
jge
push
add
fmul
out
jle
sbb
add
mov
add
dec
cmpsb
add
add
popf
pop
test
add
movsb
add
and
jecxz
add
push
add
jb
jo
rcll
add
add
leave
ja
push
jns
jecxz
push
int
stos
add
test
ja
mov
add
add
shll
out
add
jmp
jnp
xchg
xor
addr16
daa
stos
jecxz
call
add
stos
dec
mov
add
xor
ret
jne
xchg
je
daa
movsb
add
enter
mov
add
sbb
mov
push
add
lea
ljmp
test
add
lahf
pop
out
mov
movb
ds
in
into
mov
in
shll
ret
aas
mov
mov
loop
and
add
popa
popf
mov
add
mov
cmp
rep
mov
les
add
mov
out
or
ret
add
ror
lods
add
addr16
or
add
cmp
in
pop
inc
jbe
je
sub
inc
fxsave
add
aad
jnp
add
inc
mov
add
cmp
pop
or
mov
adc
xchg
fwait
dec
js
imul
jp
inc
mov
add
jo
and
imul
dec
pop
jmp
push
jle
or
add
cmc
pop
das
ja
add
iret
movsb
add
adc
ss
jmp
imul
std
rcll
loope
imul
cmp
fwait
add
add
push
in
add
add
loop
add
movsl
test
add
push
add
test
add
lret
push
clc
aas
aad
mov
add
sub
cltd
jle
xor
or
push
add
jg
add
aas
push
lret
add
iret
cmpsl
sbb
insl
nop
jnp
in
std
inc
or
fistpl
out
inc
inc
mov
movd
mov
movsl
xchg
repnz
add
dec
rcrl
nop
push
or
add
xor
pop
mov
xchg
sahf
jle
and
add
negl
jle
add
int
add
clac
fadds
add
xchg
add
add
or
shl
mov
add
pop
jmp
mov
pop
push
addb
repz
sbb
xor
or
dec
add
test
add
dec
mov
scas
add
arpl
testb
xor
bound
push
add
mov
add
repnz
add
rcpps
pop
mov
test
add
sbb
pusha
rclb
sub
add
mov
cmp
ds
pop
lock
add
add
jne
loope
cmp
xor
hlt
sub
add
jl
test
add
push
adc
add
je
push
add
inc
addb
icebp
in
shll
adc
add
dec
inc
mov
cmp
add
add
xchg
hlt
and
add
int3
daa
mov
add
add
inc
xor
mov
test
test
inc
rclb
add
iret
xchg
xor
cmp
mov
fldl
pop
adc
gs
add
pop
fdivrs
sarl
ja
add
add
std
rclb
add
cltd
pop
test
rcl
into
or
add
test
add
loope
ficompl
outsl
stos
add
cmpsb
add
add
add
add
lock
add
push
add
addr16
addr16
mov
add
pop
pop
pop
dec
sahf
pop
sub
add
cmp
jle
fcomps
mov
dec
sub
push
cmp
nop
or
add
push
std
aaa
jmp
das
xor
jo
xorl
push
mov
add
inc
jecxz
cmp
loopne
mov
push
icebp
nop
cli
loopne
mov
nop
and
lds
loope
add
mov
sbb
icebp
inc
dec
mov
mov
xor
out
fwait
dec
mov
add
mov
add
or
add
xchg
jmp
add
jge
fcoml
bound
fimull
push
mov
mov
mov
add
mov
rolb
nop
sub
add
sbb
test
jb
add
lahf
outsl
or
jmp
adc
pop
xchg
insb
mov
mov
xor
sbb
add
ret
add
add
outsl
jecxz
add
inc
xor
add
xor
push
call
dec
mov
mov
add
adc
pandn
into
xchg
adc
shll
jmp
call
shll
adc
adc
je
xchg
add
add
add
and
addl
add
jp
add
test
add
adc
add
pop
and
cmp
ljmp
jae
std
push
sub
jge
add
add
add
add
in
repnz
adc
add
and
pop
repz
xchg
test
add
add
movsl
xor
add
add
adc
pop
dec
xor
inc
sahf
pop
inc
jmp
add
add
jnp
sub
add
add
insb
ficompl
add
cmp
cli
jge
add
lods
sub
add
loop
mov
pusha
ret
sbb
add
or
add
fscale
push
sbb
add
bound
xchg
add
addr16
add
or
pushl
jp
pop
movsb
add
ljmp
std
shrb
cmp
jmp
add
gs
mov
or
test
movsb
add
shll
jno
scas
add
mov
bound
add
add
pop
xchg
add
out
sub
add
and
js
outsb
xor
out
fcoms
mov
xchg
dec
add
push
add
jmp
addb
jg
jno
mov
cmp
repz
jno
lcall
adc
mov
add
add
subl
adc
adc
add
add
iret
fwait
nop
icebp
mov
dec
inc
ss
lods
call
sbb
push
ror
bound
iret
pusha
jne
cmp
int
dec
adc
addr16
add
aas
ret
or
in
sub
add
pop
pop
mov
xchg
lods
add
mov
mov
sarb
add
rcl
xorl
sub
push
lods
cmpsb
add
push
aaa
leave
cld
dec
inc
and
add
xor
insl
lret
shl
hlt
push
add
cltd
xor
xor
add
push
iret
dec
out
lds
sti
adc
jl
sub
sbb
sub
add
add
mov
clc
jno
pushl
int3
push
push
sbb
adc
test
fisubrl
pop
lahf
fldenv
add
inc
addr16
jns
xor
lahf
setno
getsec
mov
ret
mov
popa
push
rep
add
jnp
inc
adc
xor
sbb
sbb
xor
jecxz
ljmp
add
add
add
jbe
in
lcall
fs
xchg
jp
cmc
jmp
mov
add
fldt
add
ds
and
add
add
cmp
call
and
xor
cmpsb
add
pop
xor
ja
test
add
test
add
mov
dec
stc
jmp
xor
inc
pop
push
cmpsl
leave
mov
add
lahf
inc
lret
out
adc
pop
push
mov
add
jecxz
cltd
mov
mov
push
ret
push
lret
leave
push
add
mov
or
add
lea
and
add
xchg
add
add
icebp
jns
ret
ret
add
ja
iret
cmp
mov
mov
insb
pop
jecxz
add
or
add
into
in
add
pop
or
sub
subl
mov
sub
add
add
pop
ss
push
sbb
mov
add
lret
adc
add
loopne
pop
jle
jl
xchg
add
add
pop
pop
pop
aam
and
add
and
add
out
aad
add
jb
outsb
or
add
add
push
loop
mov
add
xchg
cmc
arpl
std
mov
xchg
aas
jge
gs
xor
int3
les
addl
pushf
push
jle
ds
add
inc
mov
add
push
jle
dec
jnp
dec
push
and
in
stos
outsb
mov
adc
arpl
mov
add
jno
fcomi
cmc
push
xor
adc
xchg
mov
outsb
ss
cmp
fwait
jl
movsl
add
sbb
pop
scas
add
mov
sub
add
aaa
inc
and
add
add
xor
fdivrl
pop
cmp
push
cmpsl
fimuls
add
cwtl
dec
lea
faddl
sbb
add
adc
cmp
add
inc
sub
add
or
add
into
add
into
not
shrb
call
add
sarb
add
mov
mov
jne
adc
in
mov
fucomi
cmp
add
scas
add
pop
sub
cmpsl
std
cmp
push
adc
inc
icebp
imul
gs
adc
js
fildll
call
bound
jge
add
cmpsl
mov
add
sbb
hlt
lods
inc
loope
int3
out
jecxz
xchg
stos
ficoml
shlb
add
stc
xchg
nop
xchg
rep
add
xor
pop
add
add
jg
and
add
jl
jle
mov
aad
loope
jae
lds
sbb
add
test
add
add
shll
add
popa
sbb
add
mov
scas
dec
dec
cwtl
pop
sbb
stos
dec
dec
xchg
stc
add
add
add
stos
mov
sbb
movsl
adc
nop
in
movsl
and
add
and
mov
data16
add
mov
movsl
js
add
cmpsl
pushl
dec
out
or
add
mov
add
int
add
stos
add
pop
sub
add
jl
or
add
add
add
adc
cli
fstl
das
jae
and
add
jno
ss
pop
ja
add
in
negl
cltd
dec
pop
enter
iret
and
add
in
daa
pop
test
mov
loope
or
add
jbe
outsb
inc
rsqrtps
lret
push
add
inc
daa
imul
sub
add
inc
push
sahf
ret
stos
ja
cli
jle
outsl
mov
add
aam
add
push
popf
rolb
pusha
push
add
fwait
mov
fsts
lds
add
test
jl
test
add
add
fistps
add
push
push
xchg
pusha
sbb
add
bound
in
pop
in
lods
add
out
add
push
xchg
lock
add
cmp
int
fisttps
add
daa
and
add
std
xor
lods
add
in
push
pop
jne
add
or
add
jo
xchg
clc
aaa
lret
mov
ret
pop
sbb
aaa
clc
dec
das
inc
loopne
fisttpll
xchg
jl
sub
outsl
pop
cmp
rol
add
lds
sub
jmp
sub
fwait
addb
or
add
and
sub
add
push
push
fiadds
add
xor
ljmp
add
iret
cld
add
add
add
add
xchg
daa
add
add
stc
and
add
add
or
add
mov
in
pusha
outsl
inc
or
sbb
xchg
add
inc
stc
xchg
add
mov
jo
push
or
add
jno
aas
mov
cmp
loope
add
stc
sti
test
add
idivl
aam
push
mov
in
cmp
mov
cmpsl
jns
mov
aad
add
mov
add
test
add
pmullw
dec
in
xchg
addb
or
fsub
in
shrb
add
inc
lods
push
add
mov
jno
jns
mov
add
mov
popf
mov
loop
add
into
push
loopne
add
data16
cmp
or
add
addb
dec
dec
shl
xchg
add
iret
or
add
popa
cltd
mov
nop
cwtl
jecxz
push
mov
add
leave
int
add
sbb
in
test
add
mov
add
and
call
pusha
jbe
jbe
cld
mov
sahf
inc
cmp
pop
mov
fimull
sub
add
je
adc
faddp
sbb
in
lret
in
mov
jbe
xor
outsb
cltd
add
add
sbb
hlt
ficomps
add
arpl
add
add
repnz
add
sbb
mov
or
add
inc
in
jae
cwtl
outsb
xlat
sarb
sti
push
jns
inc
imul
andl
loop
lcall
add
pop
mov
cmc
inc
mov
jbe
mov
adc
dec
into
clc
xor
add
add
decl
add
adc
mov
add
xor
xchg
sub
add
into
pop
mov
add
add
shlb
add
cwtl
insl
push
xchg
add
pop
pop
les
cmp
mov
flds
ret
loopne
jle
cmpsb
add
mov
add
mov
dec
add
add
test
add
add
pushf
cwtl
cmpsb
add
mov
lret
scas
add
xor
add
add
fs
idiv
pop
ret
push
pop
call
xchg
add
in
xchg
add
sbb
mov
imul
jo
jge
sbb
xchg
dec
arpl
add
scas
enter
add
add
cmpsl
dec
ds
cmp
add
adc
push
jl
mov
movsl
jp
add
cmp
dec
and
sub
sub
add
mov
add
jge
test
add
xor
sahf
jge
add
lods
add
sub
add
sbb
lock
lret
jno
arpl
add
subl
repz
or
add
add
sti
fsubr
aad
push
lods
add
and
add
incb
or
mov
jg
lea
mov
and
aad
cmpsl
lock
jb
cmpsl
jne
les
gs
push
movsl
mov
mov
cmc
fisubl
rcll
pop
das
jle
cld
test
push
push
adc
pop
inc
add
dec
fcmovne
mov
mov
add
ljmp
add
inc
cli
stc
pop
mov
add
add
xchg
ss
stos
lcall
ret
sbb
hlt
mov
rcll
stc
push
add
mov
arpl
out
pushf
push
stos
add
cmpsb
add
icebp
out
jno
lret
xchg
sbb
add
add
pusha
pop
ljmp
unpcklps
jb
dec
icebp
dec
sbb
add
in
cbtw
dec
inc
push
fwait
lret
add
les
xchg
cmp
push
cmp
jmp
hlt
dec
lock
jno
push
icebp
cmp
gs
cmp
int3
xchg
add
icebp
popf
out
add
add
xchg
fdivs
nop
cwtl
cmp
insl
insl
mov
out
add
jae
cmpsl
popf
ficoms
jne
rcrb
mov
xor
add
xchg
add
pop
lds
adc
pop
lcall
call
mov
dec
push
add
add
add
cmp
outsb
lock
rcl
adc
add
imul
add
xchg
sbb
cltd
stc
mov
jae
xor
lret
mov
add
dec
add
sub
add
jmp
xchg
nop
daa
sub
add
fnstenv
jl
cmp
and
loope
sarl
and
add
mov
adc
dec
inc
add
add
add
xchg
adc
dec
or
jnp
mov
fildl
fwait
gs
add
add
lcall
lcall
mov
ficompl
dec
or
add
dec
ljmp
xor
cli
imul
add
divb
cmp
pop
mov
add
imul
dec
rcrl
add
inc
jmp
lds
dec
out
xchg
or
jl
rcll
cwtl
dec
xor
cmpsb
add
inc
xchg
movsl
mov
mov
fcmovb
insl
lods
out
das
iret
sub
add
add
repnz
pop
repnz
dec
stos
fists
pop
xchg
les
mov
les
daa
sub
add
add
sbb
add
mov
jbe
pop
jno
add
bound
sbb
cmc
xlat
data16
cltd
add
add
hlt
sub
jo
stos
add
mov
gs
popf
adc
xor
add
sbb
sbb
mov
add
int
inc
jne
push
ja
scas
xor
add
popf
or
add
add
inc
bound
scas
ror
insb
xchg
add
imul
mov
shl
xor
push
insb
out
pop
mov
in
jno
and
movsl
popa
jae
xchg
jne
ljmp
xor
adc
shll
add
add
mov
sti
inc
cmpsb
add
sub
dec
pop
inc
insl
lgs
or
add
and
add
and
add
mov
add
aam
pop
imul
rcll
cmp
dec
adc
dec
mov
or
add
scas
add
imul
loop
add
lods
add
pusha
pop
addb
ljmp
inc
pop
stos
aas
in
push
pusha
mov
mov
add
pop
push
jno
pop
frstor
fcomip
inc
test
add
cmp
repz
cld
sub
add
jae
or
sti
adcl
test
sbb
mov
add
inc
xchg
int
fwait
data16
add
xchg
outsl
inc
addb
mov
push
push
mov
push
sub
add
fmuls
inc
dec
push
add
add
xchg
cmp
ja
inc
sti
loopne
fwait
inc
xchg
popa
cwtl
data16
jecxz
add
push
mov
inc
insl
lret
mov
push
insl
and
add
gs
outsb
nop
pop
test
add
mov
xor
lea
push
add
mov
add
call
pop
add
sbbl
add
adc
cmp
std
or
iret
cmp
add
add
xchg
cmovns
int
sbb
out
sti
nop
scas
jbe
mov
cltd
iret
ret
fwait
test
fisubrs
add
dec
imul
add
popf
loope
add
fwait
inc
dec
inc
mov
mov
and
frstor
scas
jae
dec
lock
stos
add
aam
movsl
jecxz
data16
mov
in
jmp
mov
ret
fimuls
add
sti
push
add
out
loope
test
ja
add
add
add
add
add
xor
aaa
out
push
into
xlat
xchg
mov
aas
lret
cmpsb
add
fisubrl
add
sbb
mov
add
mov
jle
cltd
iret
pop
stc
add
add
insb
jnp
add
roll
leave
adc
lahf
iret
ja
cmp
dec
orl
inc
pop
in
pop
mov
add
add
sbb
add
pop
lret
pushl
pop
jns
popf
sti
fwait
jmp
sbb
jmp
les
add
lods
add
cld
jmp
add
and
add
mov
add
add
lods
add
jo
lcall
add
add
loopne
orl
xor
in
leave
dec
ds
add
jge
pop
adc
daa
sub
movsl
push
add
test
or
lahf
mov
pop
nop
call
scas
stos
add
mov
addb
loop
bound
outsb
add
add
add
sbb
les
add
add
cltd
hlt
loope
les
cli
in
outsb
cmp
push
addb
fidivrs
sbb
push
add
das
cmp
pop
or
add
or
add
inc
pushf
inc
jnp
call
nop
out
dec
andl
addb
inc
test
add
mov
nop
push
test
lds
add
add
lock
pusha
mov
add
loope
or
add
aaa
jmp
add
push
test
add
add
or
add
pushf
cmp
add
das
xchg
xor
adc
out
add
repnz
mov
adc
test
in
jge
xchg
sbb
enter
sub
add
fnstcw
loopne
xchg
nop
daa
mov
addr16
hlt
dec
mov
repz
fildl
push
mov
lahf
stos
jbe
pop
lahf
pop
enter
lods
jb
inc
dec
xchg
leave
push
xor
call
stos
add
add
add
filds
add
add
mov
psubsb
test
inc
jecxz
inc
mov
sub
add
mov
out
fs
inc
cmpsl
inc
pop
aad
add
test
sbb
les
or
add
sub
test
push
shr
adc
popa
adc
push
dec
shrl
sbb
cli
arpl
test
add
push
jb
add
jns
sub
add
mov
stos
xchg
and
add
iret
jno
dec
dec
into
push
jne
fadds
mov
xchg
insb
notl
push
cwtl
hlt
xor
sbb
add
dec
cmova
in
adc
sub
jecxz
jbe
fldl
and
add
mov
mov
out
sbb
xchg
lea
rol
in
cmpsb
add
lcall
add
dec
cmp
adc
cli
aad
add
jle
sahf
jne
add
cmp
add
add
add
stc
dec
inc
lcall
mov
add
data16
cmpsb
add
add
les
stc
lcall
push
xor
xor
addl
aaa
popa
pop
lock
and
add
or
xchg
sbb
cmpsl
fs
jecxz
pop
push
idivl
lcall
test
std
push
ret
mov
add
add
pop
push
add
mov
xchg
sub
add
add
popf
sbb
add
push
std
cld
pop
stos
add
cmpsl
mov
add
push
out
lea
push
into
leave
pop
mov
add
fisubrl
int3
mov
dec
xchg
or
add
adc
cld
jmp
add
and
bound
add
mov
mov
add
mov
cmp
add
jp
cmp
hlt
push
pop
inc
test
add
cmpsl
shl
xor
insl
cli
xor
add
stos
dec
jecxz
xchg
popa
xlat
sub
add
cld
mov
add
hlt
pop
les
add
pop
mov
mov
add
rcr
or
add
sub
add
add
jnp
add
add
sbb
arpl
jg
xor
pop
xchg
lods
add
adc
pop
fs
repz
add
pop
stc
push
fwait
insl
add
add
clc
inc
popa
ficomps
adc
and
add
push
imull
hlt
sti
fbld
add
mov
jmp
add
addr16
or
add
loopne
fcoml
or
and
movl
mov
scas
xchg
sahf
jmp
sub
add
push
addb
adc
loopne
pop
sub
add
lods
add
imul
xlat
mov
stc
jnp
add
call
mov
add
xlat
xor
das
out
mov
push
add
data16
stc
mov
add
add
add
and
popf
addb
xor
mov
cltd
sbb
ds
mov
jecxz
push
mov
mov
imul
cld
jns
xchg
add
xor
arpl
add
test
fdivl
scas
and
enter
push
jmp
loop
sbb
loop
ss
mov
pushf
int3
jo
add
jge
addr16
sbb
shrb
add
cmp
cmp
arpl
outsb
imul
and
sub
add
adc
into
mov
add
mov
addb
rorl
cmc
bts
icebp
xor
and
add
cmp
shrl
add
add
inc
popa
cmpsb
add
xor
push
gs
xchg
mov
add
add
xcrypt-cfb
cmpsl
and
add
int
add
aas
fimuls
add
push
ds
arpl
jg
movsl
shlb
pop
mov
outsl
xchg
add
addb
mov
add
push
dec
cmc
testl
mov
nop
aaa
pop
flds
cli
mov
sub
add
bound
lods
pop
or
add
dec
cmp
mov
outsl
clc
mov
sti
rorb
sbb
add
popf
pop
push
sub
mov
sbb
mov
add
xchg
repz
add
stos
add
out
mov
rorb
stos
add
jb
add
dec
and
add
out
mov
jmp
adc
bound
xor
lods
add
jmp
hlt
mov
xchg
stos
iret
rorl
push
scas
add
xor
ljmp
test
mov
add
icebp
lds
cmp
movsl
jae
add
xor
add
arpl
sub
add
cmp
add
add
mov
push
mov
lods
jmp
dec
and
add
add
cld
clc
subl
cmpsl
push
and
add
push
cmpsw
cmp
or
jbe
dec
jle
add
cmpsl
ror
shl
pop
or
out
xor
add
mov
add
movsl
xchg
aas
and
test
aas
push
mov
sbb
in
leave
fcomps
cmp
loop
clc
mov
add
out
test
add
lret
cltd
inc
lahf
lret
mov
add
mov
add
mov
mov
add
bound
adc
sub
add
add
loopne
stos
xchg
push
mov
dec
mov
in
dec
sti
mov
mov
test
add
xor
xor
add
jle
shrb
cmpsl
xchg
add
add
cwtl
cltd
push
xchg
mov
sbb
pushf
in
cld
loopne
add
add
out
bound
xchg
sub
add
adc
add
arpl
pop
add
add
ds
mov
mov
sbb
popf
mov
xor
mov
jl
mov
sbb
rcrl
inc
push
lods
add
rcrb
push
fadd
add
xchg
add
dec
sub
add
sti
rcr
scas
add
movsb
add
or
add
add
sti
mov
add
inc
mov
xor
xor
add
push
push
inc
jmp
fdivs
add
scas
in
pop
xorl
mov
push
mov
add
or
stos
add
xor
loopne
call
and
add
xor
test
add
lds
add
icebp
push
insl
addb
loopne
pop
mov
add
jge
in
add
sub
iret
and
xchg
and
add
mov
cli
add
push
lret
dec
push
jnp
leave
daa
sahf
outsb
addb
push
add
mov
add
adc
and
add
sbb
ds
inc
xor
cmp
add
out
in
add
xor
cmp
push
xor
mov
ret
outsb
std
icebp
add
roll
jne
pop
pop
fists
add
lahf
mov
add
xchg
repnz
add
movsl
sub
add
outsl
rol
add
add
add
sub
test
enter
cmpsl
add
sbb
add
fdivl
add
outsb
mov
add
mov
add
add
add
push
mov
adc
push
flds
movsb
add
cmp
add
add
sbb
xchg
and
out
mov
add
pop
dec
jns
popf
lea
sub
add
outsb
test
add
jb
repz
addb
shll
je
jb
outsl
lock
aas
sub
push
add
mov
add
add
add
add
pop
enter
mov
stos
fdivrl
sbb
add
enter
mov
add
add
outsb
lret
pop
ljmp
seta
pop
fstl
jecxz
add
pop
sbb
add
sbb
add
mov
loopne
add
jp
add
add
add
outsb
mov
push
mov
fistl
andl
addw
add
popf
push
jne
insb
in
sbb
add
test
add
mov
data16
add
lret
pop
mov
sbb
xchg
xchg
sub
add
test
add
or
xor
xchg
dec
jmp
add
add
xor
add
stos
add
int
add
nop
jmp
add
std
add
add
xchg
add
aad
xor
inc
and
shrb
add
and
add
jne
in
add
in
add
push
pop
mov
in
cmpsl
shll
pop
popa
addb
pop
and
xchg
adc
add
mov
mov
cmc
cmp
add
rclb
in
stos
pop
push
in
dec
clc
cwtl
popa
jae
aaa
lahf
xor
fwait
in
jne
cmp
dec
inc
addr16
rorl
mov
stc
jo
sub
inc
xchg
xchg
lret
into
pop
cmp
mov
negb
in
mov
js
pop
add
add
ss
mov
aad
add
add
jno
loope
addb
dec
insl
mov
mov
imul
pop
fstpt
mov
add
test
mov
add
add
sbb
popa
pop
xor
add
clc
jl
int3
call
add
add
add
adc
jae
data16
mov
add
add
xchg
cmpsl
push
mov
mov
pop
inc
mov
add
stc
lret
bound
add
fwait
lcall
daa
lods
add
xor
xor
mov
jo
adc
add
dec
dec
out
nop
jae
cmpsb
add
dec
into
xchg
negb
pop
aad
add
and
pop
ret
jno
cmpsb
add
add
add
xchg
fimuls
or
add
add
push
outsb
add
add
push
add
je
addb
outsl
dec
sbb
xchg
and
ja
mov
js
mov
add
ljmp
jnp
mov
lahf
pop
push
shrl
addb
xchg
cld
fisttpl
add
call
push
and
add
xchg
jb
xchg
sti
imul
xchg
mov
lahf
nop
xchg
lret
add
mov
and
add
add
add
popa
inc
or
add
jmp
mov
int
add
outsl
dec
lea
adc
add
mov
fstps
push
add
sub
add
sub
add
sbb
mov
sub
add
add
xchg
imul
cmp
pop
lahf
inc
mov
add
dec
les
sub
aam
fnsave
std
lods
mov
iret
add
add
outsb
mov
mov
data16
or
add
mov
cmp
or
push
cmp
repz
pop
das
sbb
loop
call
add
lcall
push
pop
out
or
add
jmp
xchg
maxps
add
add
dec
mov
mov
xchg
jecxz
and
add
add
sets
xchg
mov
add
xchg
add
and
mov
add
ret
mulb
add
mov
fwait
cmc
mov
add
mov
add
pop
mov
mov
ljmp
add
pop
cli
or
fidivrl
enter
adc
loope
lds
adc
add
pop
add
jecxz
add
std
mov
push
hlt
out
xor
lds
lds
stos
xchg
test
add
jae
and
add
lahf
xor
sbb
sub
mov
add
add
test
add
test
add
test
add
ficomps
std
fsubrp
jae
inc
xlat
scas
mov
push
add
gs
add
lret
aam
or
add
mov
je
sti
scas
push
fldl
add
add
mov
add
outsl
fmul
push
jns
pop
xchg
add
add
std
mov
pusha
add
cmpsb
add
and
pop
pop
jnp
sbb
pop
or
xchg
add
ss
rcrb
add
aad
ss
pop
cltd
imul
adc
jbe
fistpll
pop
jne
fcompl
pop
pop
addb
push
mov
add
or
daa
adc
cli
mov
outsb
and
add
rcr
dec
adc
add
mov
xchg
inc
inc
imul
bts
lretw
fisubrs
mov
dec
bnd
push
outsl
inc
sub
add
je
repnz
into
push
push
add
stos
add
xchg
scas
add
dec
rcl
pop
inc
inc
movsb
add
inc
xchg
scas
add
push
adc
or
out
testb
cmpsb
add
cmp
outsb
xchg
and
icebp
test
add
add
insb
bound
jmp
add
mov
add
jne
add
lcall
push
add
or
add
sub
adc
dec
pusha
je
in
cmp
push
add
cmp
mov
ja
testb
pop
xchg
jo
pop
adc
add
and
add
push
add
sub
mov
add
adc
insl
int3
jno
stos
jns
sbb
in
jg
loope
fistpl
dec
jp
mov
add
or
stos
add
sbb
fldenv
jge
pop
cmc
inc
pop
repz
icebp
adc
mov
jo
mov
add
call
call
insl
pop
vpcmpgtd
aaa
mov
add
jbe
and
outsl
lahf
mov
add
or
add
mov
add
sahf
and
add
or
add
cmc
cmp
pop
test
add
add
pop
adc
push
and
add
xchg
dec
adc
incb
daa
add
add
scas
xchg
xchg
mov
pop
sti
insb
call
jg
pop
or
add
mov
lods
add
mov
mov
cmpsb
add
cmp
pop
sbb
aam
xor
add
ljmp
add
add
add
add
shl
fidivrs
dec
lahf
mov
jb
icebp
xchg
jecxz
adc
mov
and
add
sahf
add
add
add
add
xchg
fadd
in
js
repnz
ficompl
push
in
shrl
lret
cmp
inc
push
call
fidivs
ds
fdiv
sti
out
loop
push
xchg
jne
inc
pop
pop
xchg
test
ljmp
bound
cmp
aas
cmp
lock
xor
adc
shll
addb
fsubs
lds
mov
mov
cmp
dec
jmp
mov
add
addb
pushf
pushf
lods
add
mov
add
add
push
or
add
mov
add
out
mov
add
inc
mov
cmc
jecxz
mov
add
add
aaa
jb
add
jbe
jbe
xchg
pop
xlat
sbb
outsl
jns
add
xchg
jecxz
add
addl
pop
adc
add
push
and
mov
add
sbb
icebp
fisttps
mov
mov
cmp
mov
add
add
dec
jno
xlat
pop
and
mov
mov
scas
add
adc
add
rclb
and
pop
sub
lret
test
add
rcll
shrb
push
icebp
adc
dec
and
add
test
add
add
add
jb
jb
add
cld
and
add
arpl
shrb
add
jp
add
dec
imul
add
pop
stos
add
aad
pop
push
scas
mov
add
inc
jp
lods
push
add
cmp
jbe
add
sub
add
scas
movlps
adc
or
add
adc
fisubrl
std
int3
cmpsl
dec
stc
into
jb
out
cmpsb
add
icebp
loop
popf
addb
cli
jo
xchg
add
mov
add
and
pushf
xchg
call
loop
add
add
and
add
test
add
pop
sbb
leave
lods
jmp
dec
insl
sbb
insb
or
add
add
push
jne
fmull
stos
add
pusha
scas
add
mov
add
dec
bound
test
add
mov
ret
mov
into
lods
add
roll
mov
xchg
mov
add
movsb
add
pop
or
add
test
add
add
out
xor
cli
andl
push
inc
into
or
add
and
add
mov
pop
hlt
cwtl
and
add
add
xchg
das
hlt
cwtl
xor
clc
jnp
mov
add
add
add
cmp
sbb
add
aad
fisubs
ss
jecxz
sbb
mov
arpl
ret
fs
sbb
pop
mov
add
push
cmpsl
push
std
addb
insb
gs
add
inc
add
pop
imul
add
add
insl
mov
add
adc
ret
imul
fwait
movsl
mov
lret
lret
inc
pushf
std
test
inc
imul
adc
cltd
inc
insb
push
out
push
add
arpl
sub
add
shll
mov
fucomip
shr
xchg
xchg
test
push
xor
loope
ret
jge
fnstenv
jo
add
mov
mov
jb
mov
pop
mov
add
les
add
das
adc
in
sbb
add
sbb
leave
mov
add
add
mov
aas
mov
outsl
in
inc
dec
or
cmp
or
xor
jae
add
mov
add
sbb
lret
mov
mov
movsb
add
sub
add
sub
add
jmp
or
leave
push
std
push
adc
add
mov
sbb
inc
das
jmp
fxch
xor
add
loopne
insl
add
add
bound
add
xchg
loopne
mov
add
addb
fxam
jge,pt
ficoml
test
add
addb
stos
add
push
add
fs
inc
movsb
add
pop
and
add
xlat
cld
fsubrl
cmp
aad
add
sub
add
outsb
pop
lahf
xlat
push
add
and
add
add
in
pop
add
xor
fldl
cli
adc
add
lret
jp
xchg
les
add
sub
dec
add
add
mov
sub
add
jne
mov
insl
jno
or
mov
lahf
and
imul
repz
adc
add
hlt
sbb
add
xor
add
xor
call
in
pop
fsubrs
add
add
pop
dec
dec
stos
lcall
pop
sub
add
push
or
add
add
std
dec
push
add
jnp
lcall
add
xchg
test
add
mov
and
add
fs
jmp
fldcw
add
out
int3
xor
popf
out
shrb
pop
loopne
xchg
mov
cmp
popa
test
add
jno
test
jne
push
pushw
xchg
ljmp
add
sub
add
fdivr
jnp
ret
lods
add
into
test
hlt
sub
ja
sbb
adc
dec
or
add
imul
push
add
ret
and
mov
add
xor
mov
xor
xorl
in
fbld
mov
jo
mov
fidivl
lea
cwtl
dec
in
mov
add
arpl
das
xor
jecxz
pop
or
add
femms
add
pop
inc
jne
lahf
fpatan
repz
mov
add
enter
sbb
add
imul
lods
add
lock
add
push
add
dec
outsl
sbb
outsl
and
add
cmp
and
add
add
add
mov
pusha
gs
mov
addl
out
adc
mov
leave
aas
insl
mov
add
add
lods
adc
add
ljmp
add
aaa
and
add
sbb
jl
cmp
rorl
les
clc
xor
bound
or
add
add
add
repnz
or
add
xchg
add
jge
jae
mov
mov
adc
push
mov
insb
stos
add
and
push
add
add
aam
daa
xchg
cld
dec
ficoms
sbb
add
addb
into
xchg
add
mov
pusha
sahf
and
add
add
mov
jns
mov
add
add
mov
add
add
lret
jp
mov
add
dec
stos
or
jle
add
sbb
push
jae
add
scas
dec
pop
cmpsb
add
movsb
add
fsts
orl
gs
xor
add
pop
mov
das
repnz
add
mov
stos
add
or
fdiv
ljmp
test
add
inc
mov
xchg
add
fstps
popa
inc
leave
mov
mov
add
jb
push
rolb
insb
xchg
daa
jmp
mov
and
add
push
mov
add
lds
xchg
mov
cmpsl
les
push
into
jmp
jge
cmp
add
xor
lahf
call
inc
movsb
add
cli
push
add
cmc
stos
test
cmp
int
inc
add
add
leave
and
add
pop
add
add
add
add
js
lods
and
inc
inc
stos
add
mov
inc
arpl
sub
add
mov
xchg
dec
sub
add
fildl
add
sub
add
xchg
add
add
add
mov
mov
add
jo
lcall
sub
mov
push
cltd
jb
test
mov
mov
insl
pop
scas
add
popa
das
mov
add
jnp
std
fldl
aad
mov
mov
xlat
sbb
loope
std
in
mov
add
pop
iret
dec
jge
test
xchg
add
xor
sub
dec
in
xchg
int3
and
add
iret
sbb
add
std
sub
sti
xchg
add
add
mov
jbe
popa
dec
jb
sub
add
cmp
aas
in
lods
pop
out
lea
add
add
and
mov
add
add
mov
add
add
movsl
jg
loop
add
jg
repnz
ja,pt
bnd
jbe
hlt
aad
add
pop
ja
inc
repz
add
mov
mov
add
mov
rcr
sub
ja
movsl
fcoml
mov
add
sub
jg
sahf
movsb
add
repz
push
add
add
dec
pop
jbe
add
inc
cmp
insl
stos
add
mov
xchg
add
pop
mov
add
out
add
int
mov
add
nop
mov
dec
lods
add
and
add
xchg
movsb
add
dec
mov
or
pop
dec
add
push
movsl
sub
push
fwait
add
add
add
into
addb
dec
sub
add
add
addb
out
cltd
nop
jmp
mov
addb
and
add
add
pop
addb
fmul
arpl
dec
cld
cmpsl
inc
dec
mov
add
pop
pushf
jnp
lret
sub
add
push
cmp
add
pop
inc
int3
das
inc
pop
cwtl
ja
sbb
loopne
or
xor
ja
int3
and
add
ljmp
jns
repnz
mov
add
sahf
repnz
ljmp
ds
inc
or
repz
pushl
imul
pop
or
add
dec
push
add
lods
add
mov
push
mulb
cmp
pop
sbb
sbb
add
cli
xor
mov
push
int
add
mov
add
test
add
mov
ja
sub
add
cwtl
rcr
lcall
xchg
pushf
mov
cld
adc
pop
mov
add
add
icebp
inc
add
mov
sub
pusha
out
dec
jl
add
push
push
sub
add
inc
adc
jle
aad
psubusb
xor
add
add
ret
jg
xor
and
jl
add
push
lds
add
jbe
mov
add
dec
add
add
je
xchg
inc
push
or
inc
lcall
add
lahf
xor
mov
adc
push
sub
cmp
ret
inc
dec
mov
add
setne
add
add
add
add
mov
add
pop
push
mov
add
add
insl
std
hlt
loop
in
aas
push
cmp
adc
cmp
push
test
xor
pop
pop
dec
xor
sbb
add
push
xor
mov
add
loopne
pop
add
sbb
repz
add
les
ljmp
add
jb,pt
push
add
adc
sahf
lret
imull
sbb
cwtl
mov
lods
loop
jmp
mov
add
popf
inc
cltd
fisubl
mov
mov
push
cmpsb
add
inc
push
ss
or
xchg
pop
les
add
add
xor
mov
mulb
and
in
popa
outsl
cmp
mov
dec
ficomps
into
jno
xchg
mov
add
push
add
or
add
xor
inc
mov
add
add
arpl
mov
je
add
sub
cmp
add
cmpsb
add
out
fs
cli
mov
add
test
add
dec
enter
inc
in
mov
add
inc
inc
dec
int3
jl
sbb
popf
inc
add
xor
int
cmp
sti
xchg
pop
imul
fsts
cmp
cmp
loopne
xchg
aas
pushf
rcrb
add
or
add
loop
push
add
lret
mov
add
mov
bound
cmp
mov
add
scas
test
add
add
aas
xchg
out
dec
dec
cvtpi2ps
add
add
fisttpll
xor
adc
out
add
mov
cmp
pop
js
xor
clc
rorb
add
or
add
mov
cwtl
dec
lods
add
mov
push
add
mov
popf
nop
mov
add
rcll
loop
ljmp
inc
jg
out
sti
fsubrl
add
mov
adc
hlt
mov
inc
fisttps
lock
push
add
in
or
add
jne
icebp
dec
clc
mov
push
mov
add
and
leave
xchg
add
ljmp
xorl
bound
push
iret
xchg
mov
add
add
pop
orl
sarl
mov
add
inc
cld
adc
add
pop
dec
sbb
mov
aaa
push
call
adc
out
jg
cmp
dec
jne
add
das
xchg
mov
add
dec
cmp
lret
ja
and
enter
xlat
hlt
clc
xor
arpl
arpl
clc
sbb
lcall
push
stos
add
adc
add
sbb
pop
outsl
mov
add
fdivrl
shrl
xchg
gs
xchg
mov
pop
outsl
push
push
pop
sbb
jb
std
dec
in
mov
xor
push
add
addb
aaa
jmp
add
scas
add
mov
add
les
mov
or
add
cmp
dec
pop
mov
sbb
add
pop
or
push
mov
add
and
or
add
popf
mov
add
popa
mov
add
adc
mov
dec
mov
insl
mov
enter
mov
add
inc
sub
add
add
imull
incb
shl
cmpsb
add
into
cmp
out
int
jmp
jl
add
inc
mov
scas
lret
hlt
jle
std
add
add
and
insb
cli
pop
push
dec
outsl
mov
pop
cltd
add
lds
inc
sbb
pop
jne
add
and
add
loop
outsb
adc
sbb
mov
add
push
jns
xchg
inc
stc
mov
add
add
mov
jge
push
xor
mov
sub
add
pushf
rcr
mov
add
je
sbb
sub
add
push
push
fidivs
lret
outsb
out
sub
mov
sbb
add
sbbl
sti
cmp
ffreep
adc
mov
stos
add
push
inc
jmp
lret
xor
push
orl
lock
add
iret
add
add
xchg
cmpsb
add
lret
add
sub
add
rolb
sub
add
shll
add
add
inc
nop
sub
sub
add
enter
lods
add
addr16
scas
add
and
add
or
mov
cli
rolb
add
pop
scas
js
jg
sub
add
stos
add
mov
add
jmp
aaa
push
or
add
scas
ret
add
add
in
int
xlat
iret
movsb
add
dec
jp
movsl
frstor
adc
mov
add
clc
jno
loope
push
mov
add
jb
add
mov
mov
lret
mov
xchg
movsb
add
das
pop
scas
fucomip
dec
xchg
mov
sub
inc
shll
adc
jp
add
add
test
add
sbb
shll
push
inc
mov
pusha
in
add
jne
mov
dec
push
add
push
pop
xchg
sbb
dec
aas
test
add
and
insl
stos
add
leave
inc
lds
scas
and
add
cmc
test
add
adc
shlb
aad
test
add
test
sub
mov
add
pop
mov
add
add
mov
mov
imul
pop
aad
add
and
add
add
ds
xor
daa
cltd
jo
xor
fsubl
push
popa
push
xor
push
movsb
add
adc
dec
mov
and
add
dec
loop
push
loopne
ret
push
loope
add
xchg
add
or
add
add
and
stos
inc
shll
imul
push
xor
gs
inc
imul
xchg
addb
je
add
fisubl
inc
inc
mov
jmp
add
sub
fistpl
cmp
cmp
jbe
add
dec
mov
lods
add
loopne
adc
push
lds
add
push
cli
ficompl
jl
jmp
test
push
addr16
fs
rclb
mov
dec
cmp
sub
insb
mov
mov
bound
xchg
add
jae
add
iret
lcall
and
add
push
add
cld
sub
inc
test
add
mov
or
add
leave
adc
shlb
ja
hlt
xlat
cltd
fdivl
loop
in
call
cltd
mov
addb
add
add
cmc
jmp
add
ljmp
push
mov
and
add
lret
sbb
pop
sbb
fisttps
outsb
mov
push
clc
xchg
mov
js
add
movsb
add
fucomip
jns
popa
dec
fs
mov
aaa
sub
mov
and
add
cltd
jbe
std
dec
adc
jb
dec
xchg
aad
je
sbb
out
pop
bnd
add
add
add
push
hlt
test
add
fs
out
dec
sbb
cmpsb
add
mov
data16
add
or
sub
cmp
jecxz
cmp
add
pop
pop
sar
sahf
outsl
push
insl
mov
aas
out
push
dec
mov
cmpsb
add
pop
aaa
fisubs
xor
fmuls
xchg
aas
lock
add
mov
add
xchg
stos
sbb
mov
and
add
vpsrld
xchg
xchg
movsb
add
packssdw
add
sbb
cmp
dec
ficomps
add
sbb
mov
js
nop
dec
inc
outsb
sbb
jne
mov
test
mov
add
cmp
add
push
loopne
cmp
iret
lret
add
xlat
dec
das
sti
pop
js
mov
aas
add
add
mov
stos
add
bound
out
pop
popf
cld
xchg
push
stos
jl
sub
xchg
push
and
add
stc
fs
xor
mov
pop
popa
mov
add
add
add
pop
fwait
out
add
sbb
sarb
in
in
call
fwait
and
fcmovnb
add
pop
int
iret
mov
add
cmp
aad
je
jl
pop
je
push
add
arpl
jns
or
vpshufd
dec
push
sub
add
adc
test
push
add
jle
lcall
mov
add
sbb
aas
sub
add
daa
sbb
mov
add
mov
jae
out
mov
add
loopne
mov
fdivrs
adc
mov
add
dec
les
int3
scas
add
dec
mov
mov
int3
jle
push
rorl
inc
jmp
push
test
adc
push
cmp
sbb
push
js
jecxz
mov
add
push
cli
and
xor
sbb
aad
scas
xor
rorb
add
in
mov
movsb
add
jg
inc
push
adc
add
sbb
mov
sub
pop
cmp
scas
outsb
dec
mov
add
fs
add
and
add
jmp
adc
popa
shld
in
arpl
cmpsb
add
pop
test
add
jecxz
pop
xchg
xchg
inc
in
mov
and
add
popf
adcl
add
pop
cwtl
mov
xor
stos
inc
fnsave
mov
sub
add
add
sub
add
mov
pop
inc
sahf
cmp
pop
jg
cmp
push
shlb
adc
jecxz
mov
add
cmc
push
mov
adc
filds
mov
add
cmc
jae
addb
adc
call
scas
add
mov
add
jecxz
dec
scas
add
ret
dec
arpl
add
xchg
add
cmp
aad
adc
ficoms
push
testl
add
sub
add
add
push
jb
xchg
add
xchg
jmp
add
addb
push
mov
leave
bound
sub
xchg
add
xchg
ds
mov
add
push
add
jb
sbb
inc
test
add
add
push
shlb
and
mov
add
and
add
mov
add
sub
add
push
mov
add
add
int
clc
pop
rcll
pop
shll
add
push
add
ds
out
xlat
fwait
mov
inc
test
add
add
xchg
pop
loopne
add
mov
sbb
lods
jns
leave
and
add
add
lcall
pop
adc
cmp
outsb
das
mov
sahf
pop
lret
add
xor
mov
push
add
ficompl
addb
sbb
dec
jbe
sarb
cmc
pop
int
into
jg
fdivrl
sub
push
add
pop
jg
add
cmp
ret
jl
aas
sahf
imul
aam
mov
add
iret
sbb
lods
add
pop
stc
sub
add
pop
push
loopne
fcmovne
sub
in
cmp
mov
mov
jne
jns
sahf
push
add
add
push
jecxz
mov
add
push
fdivs
test
xlat
popf
addb
jb
mov
add
xchg
stos
add
xchg
add
add
lret
cld
test
add
cld
xlat
add
mov
cmp
lcall
push
xor
scas
add
lea
pop
xchg
xor
or
imul
and
out
push
cmp
xchg
xchg
loopne
cmp
xor
pop
bound
cmpl
sbb
out
outsl
cmp
idiv
dec
popa
or
xor
mov
add
addb
or
add
mov
push
add
sbbl
add
add
test
or
add
cmpsl
in
cwtl
jl
add
push
cmpsb
add
sbb
pop
sub
add
sarb
inc
mov
ds
add
push
sbb
mov
add
movsb
add
das
inc
ss
and
add
int
and
and
shlb
add
add
hlt
sti
push
push
push
pop
add
add
aam
pop
jge
add
lret
call
sub
sahf
and
add
stos
xor
cmp
movsb
add
fsubr
filds
clc
les
push
dec
insb
push
inc
fs
sti
pop
inc
gs
add
add
add
xor
cld
adc
ret
and
add
out
add
fsubrl
sbb
dec
sbb
divl
pop
fs
xchg
dec
sbb
sub
add
jg
add
adc
jp
add
add
add
sub
add
pop
scas
add
ret
push
sub
add
rol
inc
mov
add
add
flds
add
lods
add
shrl
aad
in
addr16
enter
addb
pop
lret
adc
sbb
add
data16
negb
add
mov
aam
cwtl
mov
movsb
add
fistpll
shlb
push
add
jl
add
imul
repz
pop
push
rorb
pusha
adc
add
add
add
mov
inc
dec
cwtl
test
add
addb
jg
add
hlt
jl
cmp
std
pop
dec
lock
add
inc
jmp
add
pop
sbb
pop
aam
xchg
add
dec
push
push
out
xchg
adc
or
and
add
adc
inc
add
arpl
popa
pop
xchg
push
mov
jle
add
addb
mov
insb
imul
xor
add
cmc
fsubrs
jp
clc
mov
add
add
adc
add
ss
mov
push
xchg
and
add
aas
int3
mov
add
out
sub
add
adcl
and
add
xor
jge
add
or
popa
push
push
sbb
push
add
imul
push
ja
add
stc
add
je
lcall
add
dec
push
mov
outsl
pusha
sbb
jmp
sub
mov
ss
jno
add
add
arpl
xchg
stos
sbb
fidivrl
push
push
push
insb
shll
cmpsl
lcall
rcrl
mov
add
add
shlb
add
adc
cmp
jne
aad
cmpsl
and
add
mov
mov
pop
add
sbb
cmp
add
movsl
flds
jne
pop
roll
add
adc
cmpl
fsubs
push
add
mov
mov
adc
mov
jns
shlb
in
flds
sub
mov
enter
leave
or
add
mov
add
sti
xor
sti
les
jbe
in
lods
add
popa
sarb
in
dec
and
add
pop
jno
lret
xchg
bound
add
add
leave
add
je
mov
xacquire
add
mov
pshufd
add
lock
sbb
and
push
repz
inc
jno
xchg
push
add
bound
mov
jae
add
pop
push
xchg
data16
mov
sahf
inc
arpl
add
nop
das
mov
add
cmp
sbb
push
dec
xchg
call
ss
lods
add
lods
add
cli
cwtl
dec
aam
sahf
lret
add
ret
pop
shrb
xchg
push
jp
mov
mov
add
repnz
inc
addb
mov
in
jne
mov
mov
aad
lahf
int3
cmp
lcall
add
shl
pusha
jbe
add
add
jmp
cld
pop
pop
sbb
add
scas
add
jecxz
adc
je
fnstsw
and
cmp
push
add
fs
fneni(8087
mov
ss
jge
jns
loopne
sub
add
lods
and
pop
cmp
jae
cmc
mov
and
add
mov
pop
int
pop
mov
lods
add
jns
imul
pop
add
add
sub
add
xchg
add
add
add
ret
add
add
divl
into
jno
push
or
leavew
sbb
xchg
fwait
sub
add
sub
mov
add
out
fstpt
int
hlt
pop
out
sbb
cmpsb
add
stos
add
ret
mov
xchg
push
test
add
mov
add
gs
sarb
add
inc
call
mov
cmp
xchg
cmp
sbb
jle
imul
add
js
das
loop
mov
add
idiv
scas
add
pop
cmp
inc
or
or
add
hlt
mov
add
mov
dec
test
add
add
cltd
addb
push
fmul
stos
sbb
fimuls
icebp
ljmp
and
add
outsl
xchg
adc
mov
add
add
push
into
bound
mov
sbb
sahf
mov
lds
lret
and
add
jnp
lods
add
outsb
xchg
push
addr16
cwtl
xchg
sub
add
push
movb
add
lcall
jnp
add
or
add
mov
loop
mov
arpl
mov
add
jp
xchg
mov
xor
inc
std
add
mov
mov
add
add
jle
notl
popf
ss
lea
mov
push
and
add
push
fsubs
pop
dec
mov
and
add
mov
dec
jl
stos
add
xchg
push
push
repz
jl
loop
aad
add
test
add
cmp
sbb
fsubrs
add
rol
dec
adc
or
aam
dec
mov
xchg
movsb
add
pop
dec
lods
add
lret
andl
mov
add
adc
dec
clc
or
cli
test
add
add
movsb
add
adc
in
notb
adc
add
rolb
mov
jge
test
add
shll
lods
add
or
add
mov
push
aad
mov
daa
mov
add
xchg
push
add
lods
add
push
inc
sub
pop
pop
push
pop
jno
cmpsb
add
iretw
repz
adc
add
adc
bound
add
xor
add
inc
adc
push
or
add
sub
add
stc
arpl
pop
test
or
add
add
fsubs
outsl
adc
frstor
test
mov
stos
add
movsb
add
jne
push
add
cmpsb
add
pop
arpl
mov
add
ljmp
push
loop
lahf
xlat
lods
push
jl
jp
push
xchg
mov
or
add
fs
out
jle
adc
jge
stc
inc
rcrl
out
pop
mov
ds
mov
adc
mov
add
mov
add
xlat
cmp
adc
addb
mov
add
popf
jne
add
imul
xchg
mov
arpl
xor
push
inc
pop
jb
shlb
int
cmp
in
aaa
clc
loop
mov
mull
or
mov
or
add
into
mov
add
mov
insb
scas
add
fwait
and
add
insb
ficompl
add
je
and
sarl
add
cmp
mov
jns
imul
lods
push
add
insb
frstor
push
xor
roll
add
sbb
jp
int
cmpsl
mov
fadds
or
add
pop
je
addb
lods
add
lret
andl
add
add
jmp
cmp
add
lock
push
push
out
cmp
pop
push
fstpt
gs
add
inc
ljmp
inc
mov
jne
xlat
movsl
test
leave
xchg
outsb
push
sbb
or
add
movsl
adc
sbb
dec
sub
add
dec
in
imul
and
cmc
inc
inc
dec
icebp
push
add
mov
add
mov
add
add
add
add
stc
sbb
adc
push
rorl
sbb
popa
out
popa
sub
jp
adc
or
add
add
mov
add
push
add
clc
bound
outsl
jmp
testl
push
mov
inc
adcl
in
pusha
loop
call
stos
add
mul
in
xchg
sub
add
adc
jle
add
mov
lahf
lret
inc
addr16
cmp
add
xor
shll
fcoms
fs
pop
sbb
mov
shrl
add
add
jns
adc
add
lds
dec
aam
fwait
sarb
push
imul
sub
add
divb
and
add
push
mov
lea
sub
add
and
add
cmp
inc
int3
cmc
inc
pop
nop
mov
mov
add
test
add
or
add
sub
notb
jle
dec
shl
shrb
pusha
out
xchg
incb
and
dec
xchg
ret
fistpl
add
ss
sbb
mov
lods
add
and
xor
hlt
sub
add
pop
int3
fists
adc
push
mov
pcmpeqd
cmpsl
sub
add
add
xchg
stc
sub
mov
adc
mov
lret
sub
add
lock
xor
push
add
shr
inc
gs
pop
jecxz
add
cld
subl
mov
mov
sub
add
push
adc
add
mov
push
sti
addb
xor
add
fcoml
xlat
leave
and
stos
addr16
jns
add
xlat
insb
fsts
into
out
xor
add
sbb
aas
cmp
outsl
dec
mov
mov
add
outsl
out
cwtl
mov
add
add
add
push
test
int3
arpl
faddl
mov
add
cmp
out
popf
in
sub
call
add
cld
arpl
inc
addb
pop
inc
mov
jo
or
add
ret
adc
and
sub
dec
adc
cld
shlb
pusha
orl
stos
testl
mov
fstps
call
inc
jae
movsb
add
sub
add
add
xor
out
mov
data16
jbe
add
outsb
push
push
negb
adc
nop
lods
add
cmc
pushf
lret
push
cmp
pshufw
fdiv
lea
das
hlt
mov
add
mov
add
push
push
cmp
lcall
pusha
scas
add
push
xchg
or
std
leave
outsb
aaa
mov
or
add
or
pop
std
push
push
addb
mov
add
or
add
inc
ja
jecxz
bound
ja
add
test
addb
add
add
add
cmp
push
add
popf
nop
ret
xor
mov
mov
into
push
out
popa
sub
and
add
shlb
add
push
add
inc
add
mov
or
jg
cmc
jb
and
xchg
add
add
jg
test
add
push
cli
xchg
jle
jns
shlb
lock
adc
add
sbb
add
dec
cmp
mov
movsl
sbb
xchg
xchg
add
aam
in
test
sub
add
cmp
jb
test
add
add
or
sti
sbb
cli
bound
outsb
xor
in
and
add
add
jnp
fdivs
movsb
add
xor
jl
add
push
xchg
fldenv
add
dec
popf
clc
cli
rcl
cltd
fstpl
mov
stos
xor
cmpsb
add
or
add
movsb
add
pop
xor
jp
les
xor
jo
add
aad
add
cli
fisubl
mov
mov
jle
aad
pop
push
arpl
aad
lcall
outsl
pop
add
clc
lcall
add
sahf
or
icebp
je
mov
cli
fs
out
lahf
call
add
lea
add
dec
mov
pop
std
data16
add
iret
cmp
mov
push
xchg
mov
mov
add
daa
fisttpll
sub
jo
or
inc
mov
add
fistps
inc
mov
mov
outsb
cmp
sbb
hlt
rclb
xchg
adc
jmp
scas
cmp
pop
loope
nop
sbb
add
sbb
ret
fldt
movsb
add
ja
lret
ss
adc
arpl
push
pop
std
stos
add
pop
dec
mov
mov
add
add
inc
mov
sub
add
loop
sub
add
loop
std
mov
add
into
imul
add
xor
add
and
add
call
pop
inc
decl
push
add
sub
scas
cltd
addr16
clc
iret
dec
movsb
add
sbb
add
mov
imul
sub
insl
pop
cmc
inc
insl
and
add
incl
