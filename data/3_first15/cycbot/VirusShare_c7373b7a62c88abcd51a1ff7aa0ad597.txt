mov
sahf
aad
movsb
and
bound
jle
and
adc
inc
mov
aas
and
out
iret
aas
add
xlat
cltd
scas
push
inc
add
daa
cld
mov
xchg
mov
jl
inc
inc
xor
movsb
jmp
and
cmp
lret
mov
push
fadds
add
mov
ret
rolb
mov
ficomps
mov
stos
lock
pop
stos
push
int3
push
adc
scas
xchg
movsb
out
inc
add
mov
pop
jge
in
cmc
sti
sub
push
adc
and
jge
add
mov
out
xchg
or
xchg
std
pop
jmp
test
xchg
xchg
and
jb
lea
add
pop
lock
jno
and
inc
mov
outsb
mov
or
jl
xchg
hlt
js
insb
or
in
popa
push
jo
push
mov
hlt
xor
out
and
mov
imul
rorl
lcall
add
jg
gs
mov
loope
cmpsl
addb
mov
and
mov
dec
mov
adc
dec
fwait
or
imul
mov
pop
cmp
stc
cmp
imul
icebp
push
xor
xlat
in
js
ljmp
add
ss
cli
add
pop
scas
jo
in
fnstcw
ret
es
add
mov
adc
add
pop
xchg
ret
inc
add
add
add
inc
add
sbbl
mov
mov
pop
divb
scas
fiadds
fnstenv
mov
cli
jb
scas
test
add
push
add
pop
js
xor
fisubrs
popa
das
aaa
jmp
divl
ficompl
mov
mov
and
sbb
push
lret
adc
shr
pop
into
pusha
add
icebp
out
inc
push
inc
mov
add
or
add
popa
repz
xlat
fimull
test
mov
push
add
push
add
or
es
adc
sub
jge
xor
mov
pop
gs
xchg
sbb
add
add
mov
jno
rclb
movsl
pop
aam
repnz
inc
push
xlat
pop
sbb
mov
call
inc
add
lock
push
pusha
add
pop
les
outsl
imul
lods
push
sbb
add
mov
add
aaa
negb
out
mov
rolb
and
std
mov
jb
add
jno
pop
fisttpl
or
mov
push
push
rolb
insb
call
lcall
or
lcall
mov
divb
push
or
shlb
fcmovnbe
addr16
mov
out
popa
stc
mov
jg
push
dec
pop
add
and
xor
inc
mov
add
lock
xor
jmp
add
inc
add
pop
pop
sub
sub
add
les
das
inc
inc
test
sub
clc
mov
add
movb
mov
mov
and
dec
add
adc
mov
and
xchg
jb
add
aad
dec
xchg
xor
dec
enter
mov
enter
mov
sub
lods
stc
sub
mov
test
mov
and
ret
aaa
in
adc
pop
inc
test
pop
jecxz
lahf
cltd
adc
fimull
imul
add
sbb
mov
sub
or
and
xor
jp
add
mov
xchg
push
loopne
sbb
fisubl
lret
inc
add
inc
dec
mov
scas
out
test
add
jns
inc
rolb
push
ja
sbb
mov
adc
rorb
mov
lret
aam
mov
ror
xor
dec
mov
addr16
push
add
data16
lret
mov
xor
or
subl
push
add
add
add
gs
add
add
cmc
jae
sub
nop
shr
pusha
add
fs
fsubrs
out
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
xor
xor
and
jae
es
dec
out
rolb
dec
push
mov
jns
sbb
sub
mov
pop
dec
inc
or
out
inc
push
mov
daa
mov
xchg
bound
adc
adc
xor
mov
cmp
pusha
add
data16
jle
out
fidivl
push
decl
pop
ret
clc
movb
nop
pop
aas
or
xchg
cmp
mov
andps
int3
lcall
or
add
mov
jmp
add
in
mov
add
aaa
and
mov
movsl
jnp
fcomp
mov
add
inc
add
cmp
pop
jmp
add
ljmp
add
inc
sub
mov
inc
clc
fiaddl
sub
inc
add
mov
xor
mov
pop
mov
lret
ja
push
arpl
scas
mov
xchg
lea
jg
sahf
lea
sbb
popf
sbb
movsl
repz
jnp
int
cmp
cmp
cmp
add
mov
add
test
add
push
es
push
dec
jne
xchg
and
push
sbb
pop
bound
sub
add
cmp
cmpsl
lea
arpl
xchg
sbb
jno
pusha
add
mov
mov
addb
stos
inc
add
add
aas
cmp
sti
imul
xchg
popf
jbe
cmp
cmpl
add
add
xchg
in
in
divl
incl
mov
ret
add
sub
push
aad
pop
or
inc
dec
les
jb
mov
nop
pop
loop
lcall
xchg
int3
add
cmp
aad
add
movsb
sub
rcl
inc
add
add
daa
cwtl
cld
outsl
aas
jae
scas
mov
push
jb
cli
mov
addb
and
rol
add
cmp
jge
mov
insl
outsb
lret
mov
in
xor
popa
xchg
cld
rol
pop
cmp
nop
pop
mov
movsl
stos
mov
stc
dec
enter
in
sub
mov
in
insl
lods
jle
mov
and
out
lret
fists
push
cmc
and
add
mov
out
inc
add
lret
xchg
dec
or
hlt
sub
pushf
sarl
lea
xchg
das
mov
lds
and
xor
daa
stos
and
jnp
push
xchg
push
push
and
int
xor
sbb
out
in
add
sbb
in
scas
sub
jmp
lahf
fdivrs
addb
inc
add
adc
cltd
and
aam
repz
sbb
mov
test
aad
xchg
int
cmp
das
jo
xlat
push
add
arpl
mov
out
jg
or
das
sub
and
push
pop
enter
in
imul
push
in
arpl
repnz
push
push
mov
data16
aad
mov
push
fstp
push
gs
cwtl
cmpsb
inc
add
xor
dec
into
and
scas
push
mov
add
xchg
cmpsb
lods
pop
push
pop
or
out
pusha
add
je
les
mov
adc
cwtl
andl
jne
xchg
icebp
cs
sbb
jle
pop
mov
jp
push
aad
inc
add
movb
mov
lds
xchg
inc
add
outsb
xor
dec
aad
add
enter
add
lods
leave
jl
xchg
or
push
insl
pop
ss
test
shlb
mov
cli
lods
lcall
mov
cmp
aaa
inc
jge
xor
scas
mov
sti
addb
sahf
arpl
sub
and
mov
jle
add
jmp
jbe
mov
add
jnp
inc
add
cmp
mov
or
gs
mov
jg
ror
mov
setb
lods
cmp
mov
std
pop
adc
cwtl
push
or
rcr
mov
addb
popf
jae
xchg
adc
add
mov
or
xchg
les
outsl
sub
pop
scas
xchg
push
add
insb
int3
cmp
add
rcrl
je
das
addb
dec
pop
insb
mov
inc
add
pop
push
and
add
add
adcl
pop
faddl
add
stc
out
add
push
mov
je
ja
and
fdivp
push
add
dec
lcall
adc
adc
pusha
add
rcr
add
repnz
inc
shll
add
push
lahf
mov
repz
pop
sbb
test
test
les
stos
mov
pop
fstps
add
xchg
jg
out
lds
add
push
aam
pusha
add
or
push
dec
push
adc
sub
pop
push
mov
xor
sbb
pop
mov
sub
idivl
jg
aas
and
jns
mov
loopne
and
or
add
mov
je
mov
dec
sub
and
pop
or
cmpsb
mov
mov
dec
stos
int3
outsl
dec
jl
mov
jg
add
push
push
sub
in
cld
sahf
out
mov
loop
add
int3
popl
insl
or
jbe
iret
push
adc
sub
testb
das
je
out
add
inc
add
cmp
orl
imull
mov
push
out
movsl
and
lcall
fsts
das
push
push
pop
stc
mov
add
add
enter
test
jmp
icebp
xorl
add
ret
cmp
xchg
mov
cmc
stos
cld
std
xor
xchg
mov
mov
sub
dec
mov
test
pusha
add
addb
mov
mov
mov
add
cmc
and
enter
sbb
xchg
push
mull
add
arpl
xor
jnp
and
xor
lahf
add
sub
mov
cli
inc
add
lods
xchg
das
sarl
mov
pop
enter
adc
add
mov
mov
movsl
or
mov
adc
inc
das
push
addb
stos
adc
mov
loop
cmp
call
repnz
add
push
push
add
fsubr
inc
mov
pop
push
int3
adc
pop
cmp
add
adc
movsl
or
xlat
lods
jl
lret
fiadds
mov
les
sti
nop
push
sub
clc
jo
lds
std
sti
fsubs
loopne
or
add
aas
cltd
test
cmp
push
jae
sbb
or
aad
pop
cmp
xchg
sub
add
scas
fstps
xor
test
lock
lcall
xor
xchg
imul
add
hlt
mov
dec
sub
add
push
and
mov
sub
sub
jmp
adc
mov
notl
or
ljmp
cmp
es
cld
out
fcomps
cmovle
outsl
jle
push
add
mov
loop
add
outsb
adc
cld
or
mov
sub
push
xor
popa
inc
add
notl
cmp
clc
mov
pop
stc
sti
leave
roll
cmpsl
push
std
mov
mov
add
mov
aaa
push
sahf
mov
jg
mov
mov
add
nop
sub
out
call
into
cli
xor
daa
out
push
adc
mov
scas
fisubrl
mov
jo
repz
dec
and
and
iret
xor
or
add
and
sahf
add
out
push
or
add
and
dec
push
stc
jno
popa
push
and
popf
rorb
pushf
stos
jo
addb
into
arpl
xchg
popa
dec
rolb
outsb
xlat
push
sub
dec
lds
xchg
pop
lea
js
test
add
movsb
jle
pop
mov
daa
pop
outsb
imul
or
push
movsb
es
jne
pop
pop
jno
add
pusha
add
pop
pushf
adc
sub
daa
idivb
aam
pusha
add
aad
cmp
add
repz
push
sti
xchg
movb
notl
add
sbb
cmp
mov
inc
add
dec
pop
out
add
sub
mov
rcl
aad
lea
pusha
add
xor
loop
in
outsb
and
sbb
pushf
stos
fs
outsb
aas
addr16
cmp
xor
aas
mov
dec
lret
pop
jl
ret
mov
cs
imul
repz
adc
add
fstpt
xor
mov
cmp
insl
xchg
lods
loopne
or
int3
imul
pusha
add
shll
cltd
dec
jge
fsubrs
dec
lods
rcr
sahf
aad
fs
lods
push
and
orl
mov
push
and
insl
sahf
pop
in
ljmp
adc
add
lds
ds
lcall
sub
scas
pop
in
inc
cltd
imul
inc
xchg
cs
add
call
scas
shl
pop
int3
mov
cmp
xchg
sub
mov
insl
out
push
pop
mov
lret
add
insl
lods
push
pop
push
add
xor
inc
add
outsb
inc
aad
sub
mov
sub
jmp
adc
std
mov
xchg
push
xlat
scas
add
pushl
mov
repz
mov
addb
cmp
movb
repnz
jmp
jbe
xchg
daa
lret
xchg
sub
insl
mov
or
or
insl
or
xchg
mov
mov
push
xor
mov
testl
fmul
cmpsb
loope
xor
hlt
lret
xchg
dec
bound
mov
dec
lret
mov
ds
pop
in
lock
sbb
cmp
and
cltd
loop
dec
addb
push
cld
shl
gs
mov
es
or
dec
fldcw
pop
xor
rcrl
and
ret
sub
xor
sbb
adc
dec
lret
ret
dec
out
test
or
jne
push
mov
daa
pop
pop
dec
pop
outsl
push
cli
mov
add
xor
add
add
leave
testb
or
dec
cmc
enter
mov
out
fidivrl
xchg
xchg
sahf
adc
jmp
xchg
xchg
sub
fs
in
push
adc
dec
cmpsb
adc
in
dec
inc
add
add
xor
inc
add
mov
addb
add
mov
adc
int
test
inc
add
mov
ds
jnp
fstpt
lds
pop
cmp
or
adc
jne
xchg
fnstenv
mov
aas
mov
int3
dec
ljmp
lcall
idivl
movsb
sti
inc
popa
lea
mov
adc
outsl
mov
test
fs
cmpsb
sti
fbld
rorb
jns
add
xchg
or
pop
push
pop
fdivs
xchg
mov
jbe
in
movsl
cld
add
aad
mov
insb
fcomp
jbe
mulb
stc
pop
xor
lock
add
xchg
stos
push
imul
addb
add
or
loop
ret
mov
and
enter
add
insb
loop
in
rorl
stos
jmp
ljmp
add
push
fwait
arpl
fistpl
outsl
dec
add
and
inc
add
jmp
add
out
push
insb
sarl
fucom
repnz
mov
jne
adc
and
dec
mov
and
rcl
ss
mov
jle
add
ljmp
cli
adc
or
inc
pop
jnp
add
push
leave
mov
lcall
sbb
mov
insl
das
into
adc
ljmp
cmc
int
jo
add
test
popf
xor
xchg
hlt
add
movsb
ja
pop
loopne
inc
add
mov
mov
add
push
nop
nop
mov
adcl
test
ret
inc
and
pop
out
loop
into
sbb
jb
add
push
add
les
adc
adc
push
add
push
movl
add
addr16
inc
inc
add
insl
rorb
jle
push
sub
xor
mov
add
in
jnp
mov
sbb
mov
pop
int
add
add
jae
insb
sub
mov
sub
and
outsl
es
sub
iret
jb
bound
adc
pop
mov
rorl
and
lret
data16
outsl
jl
fisubs
dec
lock
sub
jns
sbb
je
daa
mov
pop
int3
jno
xchg
cmp
push
add
mov
cld
add
scas
and
add
jnp
adc
int3
sbb
movb
and
or
cmp
dec
add
and
jl
dec
add
mov
mov
cmp
aad
push
push
add
fisubrl
push
sbb
xor
call
ds
sub
inc
gs
enter
cmp
or
or
pop
cltd
outsb
inc
pop
sahf
xchg
loopne
push
sbb
aas
sbb
imul
mov
add
inc
sbb
das
push
dec
sub
nop
insl
into
loopne
call
pop
testb
clc
fidivrs
stos
popa
pop
ljmp
jbe
adc
add
inc
xchg
sub
aaa
repz
leave
mov
lcall
xchg
out
jb
outsl
scas
sub
outsl
outsb
inc
bound
sbb
add
push
add
push
or
std
inc
add
cli
push
mov
inc
add
cmp
inc
add
clc
mov
add
adc
stos
test
xchg
push
lods
roll
mov
addb
test
push
ret
mov
push
jp
cltd
cmp
mov
push
sahf
sbb
add
movsl
fildll
pmaxub
mov
xchg
fdivrs
jecxz
cltd
hlt
lds
sahf
iret
sub
add
mov
adc
push
pop
add
nop
sarl
add
mov
addl
bound
data16
mov
add
add
push
faddl
add
cmp
push
mov
rorb
push
pop
pop
mov
mov
or
push
jnp
mov
dec
or
sarl
or
mov
mov
sub
daa
mov
mov
push
test
fwait
cmp
xchg
sub
push
sbb
add
fdivl
or
cmp
es
addb
mov
int
add
mov
mov
add
outsl
pop
inc
add
lds
js
cmpsl
pop
in
add
cmp
movsl
sub
les
mov
repz
imul
frstor
add
pusha
add
jo
les
and
inc
add
cli
jb
into
sahf
and
sub
bound
mov
mov
cwtl
sbb
and
cltd
popf
adc
xchg
pusha
add
gs
cmovo
bound
lods
mov
je
add
lock
cli
pop
sti
mov
nop
fdivrs
push
ret
push
adc
clc
dec
cwtl
int
jge
mov
jl
lahf
mov
or
les
cwtl
mov
pop
popf
nop
cmp
add
roll
mov
jmp
cmp
in
adc
js
dec
andl
jae
movsl
add
repz
aas
outsb
jmp
call
lods
sub
jns
fistps
aam
in
mov
fdivrp
rolb
xchg
xchg
jl
add
loope
movl
ljmpw
pop
repnz
push
mov
cmp
int
cld
pusha
add
shl
into
int
test
fcompl
dec
xlat
decb
aaa
sbb
fstl
adc
mov
jne
rclb
scas
jb
jnp
rcll
fldln2
pop
and
mov
lret
dec
fs
add
lret
push
es
cmp
pop
mov
xchg
jnp
pusha
add
sahf
dec
or
rcll
adc
data16
das
sbb
repz
push
rcrb
xlat
jnp
add
mov
dec
push
repz
mov
mov
mov
lret
xchg
dec
popa
jns
cmpl
andl
nop
inc
testl
sub
addr16
add
out
je
adc
dec
dec
je
roll
add
pop
sarb
sub
movl
das
call
xchg
xor
rcl
stos
jg
lock
lret
mov
shlb
insl
xorl
push
pop
push
cmp
popf
rolb
call
js
push
mov
push
pop
ja
push
cmp
jno
movsl
int3
das
in
popa
insl
dec
push
dec
sub
rolb
pop
test
movsl
icebp
adc
leave
pushf
or
fwait
and
ljmp
mov
and
les
das
push
cmc
cmp
add
add
pop
jp
ja
push
adcl
mov
add
mov
hlt
popf
imul
push
mov
movb
add
mov
sbb
imul
addb
mov
sub
aam
add
lahf
add
js
fs
jo
push
xchg
lods
pop
rcl
xlat
jmp
sub
sub
testb
test
std
les
xor
push
add
pop
inc
add
add
adc
aad
fcompl
mov
stos
test
push
push
pop
pop
adc
cmc
js
icebp
testl
or
pushf
xor
shll
adc
pop
xchg
nop
lods
inc
adc
xchg
cmp
mov
jecxz
adc
das
jbe
adc
add
out
in
adc
add
mov
mov
add
xchg
test
cli
pop
sbb
adc
clc
or
sahf
stos
sbb
daa
fs
leave
pop
divl
xchg
clc
mov
push
aam
mov
add
pavgb
mov
jge
mov
jg
mov
xor
inc
add
movsb
sbb
notl
mov
inc
jecxz
hlt
das
addb
add
jg
ret
leave
pop
movl
add
lods
jns
data16
xchg
push
xchg
into
lock
mov
rolb
shll
push
dec
fsubs
adc
xchg
and
lret
insb
xchg
ss
test
fimuls
add
test
sub
subl
in
push
mov
sub
popfw
xchg
inc
and
add
jae
in
rolb
cmpsl
inc
add
les
repz
cmpsb
into
xor
lods
mov
fisubrs
enter
jb
inc
iret
outsb
cmp
in
stos
hlt
icebp
sub
add
leave
pusha
add
popa
fdiv
pushw
mov
add
nop
push
mov
clc
jbe
in
cmp
sbb
adc
sub
es
and
cwtl
mov
ds
sbb
bound
out
push
enter
adc
xlat
lret
add
stos
leave
daa
or
inc
add
push
aaa
cmc
les
lods
add
out
push
cmp
inc
or
push
and
clc
push
call
bound
addl
jo
repz
cwtl
addb
add
test
ljmp
mov
sub
or
inc
add
mov
or
sub
pushf
cld
jl
cmp
inc
add
dec
xor
push
xchg
fisubl
pop
sub
dec
xchg
dec
movsb
add
dec
test
adc
aad
loop
mov
add
mov
bound
addb
fnstcw
and
fs
mov
mov
stos
lea
xchg
outsb
inc
dec
push
adc
jae
insb
mov
and
movsl
data16
pop
lret
inc
add
ss
mov
lods
ret
mov
jp
push
inc
add
dec
dec
pusha
add
out
in
in
es
inc
dec
sub
add
sbb
out
cli
push
das
cltd
cmp
push
fstps
filds
sbb
je
outsb
lods
fwait
push
aam
cmp
roll
test
push
mov
test
or
hlt
xchg
ds
aam
xchg
adc
or
test
lret
push
push
fcmovb
mov
sbb
popa
push
rcrl
push
test
add
inc
mov
jg
rolb
cld
sbb
mov
xchg
xor
jo
jp
cmp
test
ficompl
mov
mov
ss
repz
pop
or
stos
aam
and
and
fucomp
sub
add
jg
xor
out
aam
pop
fisubl
sbb
pop
inc
out
insl
test
jb
andl
sub
lret
rolb
rolb
mov
add
mov
stos
ljmp
pminsw
repz
dec
daa
std
pop
enter
cmp
cltd
mov
out
adc
add
jge
add
pop
jo,pt
adc
fwait
scas
adc
clc
ljmp
dec
mov
scas
cmp
jp
adc
iret
ljmp
mov
fwait
dec
and
pop
mov
push
and
push
lret
cmp
sbb
and
out
lcall
add
add
loopne
add
push
and
popa
push
mov
mov
pop
test
int
shll
or
jecxz
xchg
push
mov
and
cmp
mov
ljmp
adc
jns
xor
mov
add
mov
out
rcll
shlb
nop
xor
cmp
or
lds
pop
and
jne
and
scas
in
add
xchg
cmpsb
cmpsl
or
pop
inc
xchg
jecxz
mov
call
cmc
jb
and
add
mov
bound
subl
jbe
das
xchg
scas
sub
add
aas
inc
mov
push
xor
xchg
pmuludq
mov
add
jge
jg
mov
add
jl
sbb
lods
jmp
ja
inc
add
xor
sahf
gs
out
mov
fidivrs
ucomiss
mov
mov
cmc
dec
sub
add
push
add
sbb
inc
add
add
inc
add
xor
sbb
cmc
cmpsl
sub
bound
loop
mov
mov
sbb
push
test
outsl
out
pop
mov
or
fistpl
movsb
pop
call
adc
insb
jg
and
jne
icebp
jns
les
cmp
addb
adc
xchg
sbb
enter
and
loope
les
pop
inc
repz
out
xchg
fimull
sub
into
xor
dec
fdivr
mov
and
cmp
add
lds
jae
push
outsl
dec
fistpl
lret
xchg
repnz
ret
nop
adc
loope
ret
jl
pop
idivl
out
sbb
fcomps
jae
int3
in
rolb
xlat
xchg
sub
test
movb
fisttpl
push
scas
lock
sub
repnz
push
lods
dec
xor
or
xchg
popa
xchg
xor
ds
fs
add
mov
and
sub
xor
add
std
add
fsubs
add
pushf
imul
cmc
jb
fistpll
adc
push
je
sbb
mov
lods
and
aas
in
call
and
and
out
xchg
arpl
inc
lcall
sub
xchg
lret
lcall
push
xlat
mov
cmp
add
and
leave
fsubl
cmpsl
jnp
lds
test
dec
in
shl
mov
inc
add
movb
sbb
aas
pop
mov
push
or
imul
lret
jns
add
in
and
fcompl
dec
lret
mov
inc
add
push
inc
add
add
pop
mov
push
fmull
xchg
sbb
push
xchg
sbb
mov
lcall
outsb
sbb
push
inc
or
pop
adc
cld
pusha
add
jle
lds
pop
imul
mov
mov
test
mov
add
fisubrs
inc
add
pop
inc
das
lods
mov
idivl
dec
paddusw
mov
inc
add
insb
dec
cmp
mov
xchg
loop
int3
mov
mov
roll
ljmp
rolb
add
pop
xor
add
adc
or
sub
aas
sub
lcall
mov
mov
test
shlb
ds
or
cmpsl
faddl
add
add
clc
cs
mov
mov
in
lahf
jmp
add
jbe
bound
cmp
mov
xor
add
dec
cs
add
jmp
inc
mov
and
jae
sahf
adc
cli
das
hlt
movsl
int
out
cmpsl
xchg
mov
add
xor
ljmp
enter
adc
enter
stos
das
xchg
fcmovu
ja
jge
xor
daa
and
xchg
popa
das
lods
add
stos
std
add
je
add
popa
mulb
cmp
mov
mov
gs
movsb
addb
pop
aas
faddl
cmp
arpl
adc
loop
int
addr16
sbb
pop
addb
and
jnp
add
fdiv
std
pop
cmp
mov
rolb
mov
dec
jne
int
out
lds
or
and
adc
mov
jl
add
addb
fisubl
aad
dec
fldcw
xlat
xor
popf
xchg
fisttps
rcl
rorb
jnp
data16
add
iret
fcompl
mov
jnp
out
pop
test
fs
mov
mov
dec
scas
les
cmpsl
aam
addb
push
imull
push
rdtsc
add
divl
inc
outsb
mov
ja
adc
int3
insb
pop
cmc
js
inc
add
out
sub
aas
orl
xchg
faddl
sbb
add
add
addb
pop
cmp
in
xchg
cmc
leave
dec
push
mov
lcall
push
je
aaa
cld
imul
push
add
outsb
inc
add
addb
test
mov
fs
and
imul
out
mov
jns
cmpsb
cwtl
push
lock
mov
mov
pop
and
daa
lcall
or
add
enter
jecxz
idivb
adc
int
and
lahf
fdivs
xchg
clc
jne
movsb
xor
xchg
add
push
dec
mov
mov
addb
add
fnstenv
ds
lods
xor
mov
dec
add
mov
sbb
mov
int3
jnp
mov
lds
sbb
fbstp
pop
xlat
stos
mov
jne
lea
pop
scas
lahf
add
inc
popa
adc
jmp
xchg
lods
add
sub
out
pop
fisubrs
sbb
mov
sti
cltd
xor
imulb
and
stos
imul
jg
rcll
out
shl
loopne
and
sahf
pop
jmp
add
xor
bound
xchg
dec
sbb
add
mov
outsb
dec
mov
push
jp
dec
test
movb
rcl
jne
popa
inc
add
add
pop
xchg
into
mov
jae
add
fdivrp
fwait
jbe
imul
push
movsl
adc
mov
jnp
sub
ss
adc
lods
mov
mov
mov
jae
ret
and
push
icebp
insl
adc
mov
and
loopne
sub
jae
mov
pop
inc
add
aad
into
aaa
dec
call
add
test
ja
cs
dec
lods
icebp
inc
add
stc
pop
push
xchg
ret
neg
fisubrl
lods
daa
into
or
les
push
movsl
and
lret
rcrl
dec
xchg
and
test
loop
sub
push
loope
dec
adc
push
ljmp
ret
push
add
add
mov
xchg
jecxz
addb
add
int
test
ret
and
addb
inc
add
pop
push
cmpsl
xchg
cmp
mov
pop
and
mov
ficoms
loopne
int
add
out
insb
negl
or
dec
insl
mov
inc
mov
mov
mov
pop
cmp
sbb
xchg
pushw
add
sbb
dec
sbb
iret
push
push
fcmovbe
dec
xor
jmp
add
mull
add
insb
fldl
add
cs
push
jge
fcmovnbe
lcall
scas
repz
xchg
jne
inc
add
jp
pop
mov
add
or
loopne
cmp
dec
sub
push
arpl
nop
dec
scas
sub
das
imul
inc
sbb
sub
js
cmp
sbb
add
mov
or
xor
aad
inc
add
add
cmp
dec
dec
idivl
xchg
push
dec
or
int
mov
fcoml
add
das
nop
inc
mov
ljmp
add
add
ficompl
fbld
jp
ljmp
cmp
mov
rcrl
leave
adc
lds
sbb
inc
add
cs
adc
or
sbb
adc
enter
sub
sbb
sbb
jg
inc
or
notb
add
and
lods
arpl
sub
mov
xlat
push
sub
xchg
push
lock
push
cmp
ljmp
add
test
mov
xchg
fstp
dec
jno
loop
add
inc
add
loop
add
mov
jbe
ja
jp
lock
shlb
scas
insb
push
fimuls
lock
push
scas
imul
pop
lahf
xchg
test
or
push
adc
jle
cmp
outsl
popa
imul
gs
add
rcr
push
leave
cld
aas
mov
pop
and
mov
into
in
or
rclb
jnp
or
out
mov
pushf
scas
and
xor
out
addb
insb
push
and
add
adc
hlt
sub
pop
loop
sbb
testb
xchg
jne
push
outsb
sub
nop
sti
jmp
icebp
repnz
ficompl
add
inc
add
pop
pop
pop
mov
rcrl
mov
xchg
add
mov
mov
cmpsl
lods
movsl
test
mov
adc
add
and
ret
add
sub
iret
jo
xlat
push
fsts
addl
add
push
lcall
test
addr16
jae
add
add
push
mov
xchg
and
xor
dec
inc
xor
sub
jno
outsl
cmc
out
add
push
adc
jns
stos
cmp
cmc
loopne
aad
add
xor
mov
cmp
add
push
push
test
ss
xor
call
dec
addr16
loope
mov
sub
and
ss
lea
das
out
clc
loopne
cmp
repz
mulb
dec
addb
ds
pusha
add
xchg
out
mov
push
repz
adc
fs
push
push
scas
out
and
rorb
aam
sbb
add
aas
fsubl
add
fs
insl
dec
ds
xchg
push
add
insb
lahf
xchg
mov
aaa
add
outsl
cwtl
stos
mov
mov
jns
dec
adc
cmp
add
mov
or
add
mov
out
scas
dec
pop
dec
lret
add
nop
cltd
mov
sub
cmpsl
aad
mov
out
cwtl
gs
xor
or
stc
push
movsb
xchg
loop
icebp
iret
int3
das
and
mov
jl
add
adc
or
xor
pop
pop
xor
inc
add
shrl
lods
fdivl
insl
inc
comiss
lahf
test
fdiv
and
and
xchg
idivb
es
jge
add
data16
imul
cmp
jne
out
add
mov
out
add
push
enter
mov
push
enter
fimuls
mov
int
and
mov
push
lea
and
insb
cmpsl
xchg
loope
hlt
lcall
add
jle
es
xlat
add
add
dec
scas
jp
mov
mov
shr
in
sub
xor
out
cmpsl
popa
dec
add
add
cmpsl
call
add
mov
aas
sbbl
mov
adc
sahf
sub
fcmovnbe
xchg
adc
push
cmc
push
outsb
scas
mulb
inc
add
xor
sub
mov
mov
fimuls
inc
add
in
out
xchg
or
jg
repz
push
add
fsubrs
mov
mov
aam
cli
and
out
cmp
mov
rcll
jbe
push
ficoml
cli
imul
adc
shlb
jno
rolb
fs
and
fisubrs
jg
in
add
dec
adc
in
bound
xor
leave
push
pusha
add
les
rcrb
xchg
aaa
call
enter
je
sbb
inc
add
mov
lods
int3
jno
inc
out
lcall
js
add
popf
cmp
jp
jl
add
rolb
add
fwait
out
rcrl
lret
push
testb
xchg
fidivs
call
addb
icebp
loope
cld
sub
jo
test
mov
in
mov
cmpsb
add
mov
and
add
sarl
out
dec
pop
pop
pusha
add
lret
inc
sarl
rol
data16
and
add
push
add
testl
push
add
out
sbb
sti
bound
pop
pop
ja
or
mov
in
inc
add
sahf
mov
mov
addb
cmp
inc
pusha
add
ret
mov
movsb
fstl
mov
fisubrs
inc
add
jbe
je
int3
inc
add
add
add
lahf
xor
jp
add
dec
sbb
pusha
add
mov
stos
int
jno
mov
dec
pusha
add
sbb
test
in
pop
inc
add
mov
jle
mov
or
mov
xchg
pop
mov
push
and
mov
inc
add
pop
mov
jnp
or
notl
movsl
push
pop
popa
call
adc
add
adc
icebp
aam
adc
bound
sub
ljmp
in
inc
add
addb
popa
adc
jl
test
repnz
inc
add
add
cmc
bound
mov
sbb
xchg
mov
mov
mov
jmp
fisubrs
jmp
add
and
ja
inc
add
mov
sub
inc
pop
ja
mov
lret
mulb
mov
lods
adc
cltd
lret
pop
add
or
xor
push
mov
add
add
and
add
mov
push
add
sbb
movsl
es
jp
xchg
out
cmp
mov
add
xchg
ja
inc
cmp
mov
mov
add
andl
pop
frstor
adc
adc
jle
testl
pop
in
imulb
rorl
addr16
dec
add
out
ret
push
sbb
xchg
shr
pop
ds
dec
stos
aas
je
xor
and
aaa
sub
bound
xchg
push
cmpsb
dec
test
add
and
fistpll
fimuls
ret
insl
xor
sbb
aaa
cmp
cwtl
mov
lock
dec
inc
add
mov
lahf
sysenter
pop
cmp
adc
mov
add
loop
nop
stc
and
add
cs
js
stos
sub
inc
add
fwait
inc
mov
mov
pop
daa
lcall
test
add
xchg
push
add
inc
push
add
cmp
adc
add
add
lcall
adc
fstp
add
les
repnz
loopne
xor
rol
add
outsb
ret
pop
shll
js
or
adc
pop
push
inc
movsb
mov
adc
fisubrl
stos
repnz
cmpsb
in
add
filds
fildl
add
rolb
jae
test
mov
add
add
push
movsb
cs
push
add
in
inc
add
push
jne
ljmp
mov
aad
out
rolb
inc
fmull
test
jmp
movb
add
xlat
out
mov
out
sbb
jge
lcall
out
leave
into
movb
mov
inc
add
fdivp
mov
mov
lret
pusha
add
pushf
or
pop
popa
inc
add
or
and
popa
sbb
icebp
adc
xorl
mov
pop
cmp
add
dec
mov
pop
pop
jp
add
sub
mov
jmp
ret
adc
addr16
add
add
mov
pop
stos
imul
in
daa
cmpl
dec
cld
loop
mov
add
cmp
cmpsb
out
and
mov
jecxz
xlat
mov
fwait
jns
rcrb
aam
fstpt
ficompl
mov
add
gs
jno
add
lret
mov
addb
jnp
and
jns
add
xchg
push
cmpsb
fmuls
idiv
push
cmp
lea
popf
repnz
fyl2xp1
dec
sbb
shrl
adc
jp
outsl
mov
xchg
dec
xlat
adc
adc
lds
push
gs
les
or
es
pop
or
inc
jb
push
sbb
lahf
sbb
insl
push
fdivrp
jae
add
add
ss
outsl
adc
jnp
cwtl
jecxz
mov
nop
ss
std
sbb
push
mov
xor
cmp
add
or
stos
std
xchg
movsb
fbstp
push
clc
jb
dec
leave
addb
add
mov
add
xor
clc
mov
cmp
fldenv
pop
hlt
movsl
aam
add
dec
xor
xor
add
ds
ret
push
jl
mov
insl
xor
cmp
int
fcmove
pop
dec
xchg
test
std
shr
stos
push
add
es
fcoml
scas
xor
xor
sbb
inc
add
add
dec
xor
mov
fsubr
leave
cmp
pop
adc
pop
cld
lahf
or
cmp
xchg
ret
mov
rorl
test
or
shll
movsb
fs
int3
ret
push
mov
adc
add
push
pop
mov
inc
scas
cli
xchg
fcomps
cmp
add
dec
dec
jb
add
mov
add
fwait
mov
std
or
xchg
ljmp
lods
push
pop
imul
leave
adcl
scas
sbb
and
test
and
pop
ret
xor
les
int3
dec
movb
jnp
pop
xchg
iret
in
test
into
xchg
mov
jbe
fbld
mov
mov
add
add
iret
mov
cld
sti
xchg
sub
sub
mov
out
lretw
lahf
pop
pop
shrb
sti
popf
leave
movsb
out
test
mull
in
sub
in
pop
or
loope
imul
pop
into
and
or
mov
mov
push
out
fwait
sahf
imul
fwait
adc
ret
call
mov
xorl
pusha
add
mov
ret
icebp
ljmp
push
adc
scas
push
xchg
scas
jp
add
arpl
mov
sub
add
rcrl
push
mov
lcall
push
cmp
add
add
jae
jge
xchg
sub
shll
jo
cmpsb
in
loope
xchg
mov
scas
mov
rolb
push
and
pop
add
ljmp
and
adc
cmp
push
lret
inc
addb
add
addb
add
add
lds
and
inc
add
sti
xchg
enter
scas
outsl
pop
and
xor
adc
sub
add
and
js
adc
js
xor
add
ret
decl
xchg
fxtract
ss
int
add
ss
stos
sbb
mov
mov
mov
inc
mov
aam
sub
clc
mov
jno
in
inc
nop
push
add
mov
fsubs
lods
adc
idiv
stos
repnz
fadd
es
jmp
shrl
xor
add
xchg
test
xchg
stos
scas
mov
lret
int3
and
inc
add
cmpl
fucom
aad
xor
inc
add
pop
adc
mov
fldcw
inc
add
mov
ret
add
rorl
fnstenv
test
clc
push
push
add
mov
ljmp
sub
inc
add
push
inc
insl
xchg
dec
test
notb
sbb
mov
pop
adc
nop
pop
pop
inc
add
push
jnp
pop
or
iret
jl
pop
fucom
pusha
add
lret
in
pop
lods
sub
adc
das
inc
outsl
add
xor
lahf
sbb
and
in
repz
ret
call
mov
or
sti
sbb
dec
add
xchg
pop
inc
add
shll
mov
sub
jo
jo
cmp
aas
mov
add
icebp
xchg
push
add
add
gs
es
lcall
repz
inc
insl
test
movsb
jmp
mov
lods
imul
loope
mov
inc
pop
add
sub
jl
mov
ljmp
scas
ljmp
or
dec
stc
lahf
leave
outsb
dec
pop
sbb
stos
sub
flds
xchg
ficompl
ja
inc
mov
mov
dec
addb
lret
push
add
inc
add
mov
call
into
dec
inc
inc
add
add
add
sarl
je
jl
leave
std
stc
out
xor
movsl
or
mov
call
daa
jg
sub
int
inc
add
push
imul
daa
and
and
mov
pop
xchg
and
inc
add
dec
dec
cmpsl
lret
sub
or
add
xlat
mov
pop
or
fistpl
inc
cmc
pop
andl
fs
rorb
imul
rcll
cmpsb
test
xor
add
das
mov
jb
je
dec
inc
add
addr16
arpl
sbb
xchg
out
shll
hlt
sub
jecxz
add
jbe
push
loop
or
test
fistl
loopne
movsb
in
les
jmp
xor
mov
ljmp
out
add
test
movb
nop
xchg
push
add
stos
pop
cli
rolb
adc
movlhps
sbb
inc
push
mov
and
and
add
add
pushf
movsb
pop
mov
pop
push
outsl
jnp
jae
jg
xchg
xchg
cmpsl
mov
imul
adc
ds
add
add
rorl
mov
dec
cmp
daa
shrb
lcall
xchg
into
cmp
mov
je
and
jp
add
xor
movsl
mov
into
push
mov
inc
add
sahf
push
icebp
jne
sbb
sbb
into
adc
in
icebp
stos
notb
int
push
idivl
pop
jae
add
scas
loope
pop
and
test
fistpl
lcall
addb
push
mov
mov
sahf
popf
sahf
xchg
xchg
xchg
das
inc
add
mov
pushf
dec
and
add
leave
jo
jge
scas
cmp
push
xchg
or
loope
pop
xchg
rolb
data16
push
popa
and
xor
stos
jmp
push
fwait
add
pop
mov
in
fmuls
jbe
ljmp
xchg
or
test
cs
xor
inc
add
lods
xor
add
addr16
das
cmp
movb
imulb
xor
call
nop
test
fcoml
mov
and
in
cs
stc
ficomps
lret
jle
add
add
mov
dec
push
mov
adc
push
test
daa
sbb
outsb
pop
cltd
movsb
fcoml
sub
sahf
mov
inc
add
adc
mov
aas
repnz
shl
dec
das
lret
mov
adc
ret
cmc
aas
add
inc
add
lcall
movsl
test
cmp
movsl
sbb
fs
add
jns
pop
test
cmp
add
jbe
scas
lea
repz
mov
imulb
push
mov
push
cltd
mov
ja
add
imul
aad
add
push
xchg
loop
and
add
out
push
cmp
sub
sahf
pop
lret
sbb
cmp
and
dec
jns
push
add
aas
inc
add
and
dec
mov
inc
clc
bnd
daa
in
push
cmp
push
mov
gs
xchg
xchg
lret
outsl
int3
pop
dec
adc
or
in
xchg
nop
mov
cmp
sbb
xchg
lea
dec
xor
add
add
add
lods
ljmp
or
lock
mov
xor
push
and
sub
xlat
aad
rorb
or
push
loop
push
cli
sbb
jp
mov
add
shl
out
cmpsb
mov
loopne
addb
dec
ss
xchg
mov
shlb
add
and
sub
sub
roll
mov
jmp
xchg
int3
inc
add
add
icebp
push
arpl
je
scas
jns
inc
add
add
xchg
sbb
add
pop
out
inc
add
cltd
and
mov
adc
and
pop
push
xchg
cmp
cmpsb
pop
adc
inc
add
sbb
xlat
repnz
rcrb
stc
add
add
add
dec
arpl
sbb
push
dec
push
add
sbbl
add
xor
les
cmpsb
add
mov
out
je
sbb
fucomi
and
xor
add
mov
bound
or
nop
adc
add
test
mov
scas
inc
add
add
jo
mov
stos
sub
mov
ret
xor
fldcw
push
cmpsb
mov
lds
fisubrs
push
pusha
add
mov
in
mov
xchg
jge
add
pop
pushf
in
push
jbe
or
idivl
add
aas
mov
das
jbe
or
cltd
sbb
js
sbb
mov
arpl
outsl
sbb
mov
mov
mov
mov
jnp
add
sbb
adc
xor
add
popa
add
test
test
mov
push
sub
hlt
and
aaa
fs
push
push
sbb
outsl
test
push
fs
cmp
out
cs
dec
push
paddd
push
xchg
lret
cs
push
mov
mov
jmp
into
xlat
or
cmp
push
add
push
test
imul
or
fstpt
pop
and
dec
mov
cmp
jmp
outsl
push
nop
test
add
stos
pop
test
sub
xor
test
cmp
sahf
outsl
cmp
loop
mov
sub
loope
xchg
add
outsb
mov
cmp
out
subl
add
fisttpll
leave
dec
fisttpl
dec
divl
shll
add
pop
cmp
mov
stc
int
add
inc
add
sbb
pop
and
jnp
pushf
loope
outsl
push
dec
dec
pop
movsl
mov
jle
add
aam
cli
outsl
push
sbb
and
mov
sub
mov
ds
out
daa
sbb
and
pop
fisubrs
push
andl
aaa
and
mov
mov
add
imulb
inc
add
rolb
jns
dec
add
adc
stos
dec
jg
sub
jno
imul
or
loop
sahf
mov
outsl
rcrb
sti
das
lret
addb
test
cwtl
push
movb
jecxz
ljmp
jno
jo
in
aad
mov
push
sub
push
or
and
mov
in
sarl
into
mov
sub
scas
jg
mov
dec
in
lea
jp
inc
bound
jne
pop
cmp
cmpsb
aad
std
mov
add
add
decl
pop
sub
adc
call
pop
inc
imulb
pop
mov
inc
sbb
sbb
jno
test
test
pushf
iret
aad
mov
rorb
adc
cmp
sbb
or
movb
cmp
xchg
cmpsb
sub
int
xchg
adc
mov
fimull
jp
pop
mov
dec
js
sub
pop
lods
cmc
sub
sub
repz
pop
jmp
mov
and
scas
dec
push
and
cmpsb
add
add
mov
sar
sub
push
dec
push
adc
push
add
outsb
fwait
sub
test
pushl
inc
fidivs
rolb
dec
push
movb
hlt
rolb
mov
pop
xchg
ds
push
movsb
jl
sbb
add
xor
lods
setnp
es
adc
aam
imul
stos
sarl
push
insl
pop
dec
push
add
insb
das
repnz
arpl
jne
movsl
mov
mov
fnsave
xorl
push
rorb
cmc
clc
lods
jmp
dec
fiaddl
and
dec
imul
pushf
ja
jle
xchg
aas
cmpsl
or
or
adc
jmp
adc
into
xchg
cli
lock
addb
add
adc
cmpsb
ds
pop
aaa
or
mov
add
add
pop
scas
mov
xor
adc
pop
pushf
sbb
fisttpl
loopne
mov
imul
mov
ficoms
add
sbb
dec
xor
cmpsl
xchg
loope
xchg
adc
inc
add
daa
mov
loop
scas
mov
dec
add
mov
xchg
sub
cld
adc
mov
push
add
push
xlat
in
lea
sub
push
push
cld
out
xor
xor
add
add
or
fwait
mov
je
and
push
xlat
aaa
lock
inc
add
int3
xlat
idiv
push
pop
xlat
enter
pop
and
sub
xor
add
leave
fisubl
and
cmp
lcall
inc
pop
and
js
add
xchg
pop
ds
out
lock
add
sbb
mov
stos
lret
dec
rcrl
mov
jb
adc
ret
add
xchg
loop
test
insl
adc
dec
stos
decb
ret
or
scas
popa
push
mov
dec
dec
pusha
add
pop
adc
testl
mov
and
inc
add
jne
jle
mov
add
mov
add
loop
sarl
jb
mov
ljmp
jg
loop
pop
push
scas
std
adc
out
sarl
push
movl
xchg
xchg
add
mov
push
xor
jae
xor
add
jae
cld
mov
clc
filds
roll
loope
fldt
jb
ret
sbb
push
mov
fsubs
pop
pop
rolb
inc
add
jae
sbb
pushf
pusha
add
jle
inc
add
add
mov
xchg
pop
stos
cli
aas
ss
or
adc
cmp
xchg
push
scas
xchg
scas
adc
lds
xchg
inc
add
sti
or
add
enter
sub
lret
mov
call
push
jecxz
add
inc
add
hlt
mov
out
mov
mov
shl
in
mov
jge
cmpl
push
int3
mov
pushf
aas
test
sbb
push
inc
add
or
fwait
movb
push
sub
add
mov
sbb
adc
sub
push
ds
jno
aad
test
lods
dec
int3
xor
push
enter
xor
mov
stos
cld
xlat
enter
popa
fisttps
bound
mov
and
xchg
add
cmp
out
xor
sub
jmp
dec
cmc
mov
mov
mov
mov
pop
xlat
andl
add
mov
call
cmpsl
adc
js
push
and
mov
sbb
add
imul
xlat
lods
addb
popf
adc
pusha
add
je
movsb
xchg
mov
lods
push
scas
hlt
mov
mov
add
vpxor
mov
rcrl
ret
jge
out
pop
xor
ljmp
add
cmc
ds
sbb
dec
lods
movsl
daa
push
aam
cmp
sti
pop
jmp
pop
fscale
lods
cmpsl
movb
adc
jae
add
loopne
rolb
test
xchg
fsubl
imul
es
aam
sub
test
imull
xlat
xor
aad
dec
add
add
stos
xchg
mov
out
pop
lock
imul
bound
punpcklbw
sbb
lods
pop
cmp
mov
fs
subl
or
daa
rolb
fcomip
jo
je
ss
add
int3
loop
sbb
add
or
bnd
popf
ljmp
mov
cs
adc
addb
js
sub
idivl
lret
dec
push
aam
xlat
daa
test
fsts
and
sbb
outsl
pop
into
xchg
out
fs
test
movsl
xchg
lds
shlb
rcll
js
add
mov
aam
push
and
jno
outsb
out
mov
call
rolb
imul
dec
cwtl
aas
sbb
add
jae
add
mov
add
insl
mov
mov
add
jb
and
jge
xor
jnp
sbb
or
sub
lock
loope
add
dec
xor
adc
int
xchg
xchg
sbb
cmp
call
ror
out
movsl
mov
pop
inc
mov
cmovae
add
arpl
jl
dec
scas
and
nop
sarb
fistl
fbld
roll
nop
test
mov
xchg
in
gs
or
xchg
inc
inc
add
dec
dec
leave
loopne
add
and
push
push
jp
sub
out
xchg
dec
xchg
push
and
dec
push
xor
push
loopne
xlat
inc
jb
sub
cmp
add
daa
push
scas
mov
jae
inc
stos
data16
xchg
adc
or
into
mov
dec
fisubrl
mov
jae
mov
inc
inc
stos
sbb
fcmove
jge
test
call
inc
add
xchg
mov
test
fucom
pop
mov
mov
test
mov
in
inc
push
fstl
add
pop
ret
inc
jne
push
jge
jecxz
cmpsl
push
punpckhwd
repnz
sub
add
sub
dec
outsl
lret
or
add
fistpll
mov
lock
fdiv
pop
adc
sbb
insb
pop
xchg
negl
push
mov
shrb
jno
add
mov
nop
insb
or
pop
xchg
and
xchg
sti
aas
pop
jg
data16
in
shll
int
push
add
je
testb
and
inc
add
inc
jg
mov
repz
add
mov
icebp
or
xchg
push
and
leave
icebp
and
addl
cs
sbb
mov
and
add
mov
inc
add
out
cli
jg
mulb
sbb
push
test
add
iret
push
and
xor
mov
rcrb
mov
fsubl
stc
into
xchg
pusha
add
add
jno
sti
enter
jle
mov
loop
jne
cmpsl
movb
xchg
fmul
mov
or
or
sarb
sahf
pop
sbb
mov
lods
movb
pop
mov
cld
scas
popf
test
jg
inc
rcll
mov
shr
in
jg
pop
mov
bound
sub
pop
jbe
push
sub
ret
nop
inc
add
rorl
dec
sbb
jne
xchg
scas
mov
or
push
ss
mov
mov
addb
aad
out
add
sub
push
in
out
pop
jns
ret
lods
roll
add
stc
push
inc
rol
add
movsb
or
rcrl
das
pop
out
mov
sub
add
mov
ret
cmpsb
mov
mov
repz
aaa
sbb
int3
ss
jle
mov
sbbl
adc
lret
hlt
jo
adc
adc
dec
imul
push
jbe
cmp
mov
add
lret
mov
add
xchg
rolb
add
mov
rolb
mov
add
js
enter
inc
cmp
pop
fs
std
mov
xor
roll
push
call
dec
daa
mov
sub
push
add
insb
bswap
push
xor
jnp
push
in
adc
dec
dec
out
fwait
jae
pop
ds
pop
cmc
lret
xchg
bound
push
frstor
cmpsl
in
cmp
adc
das
stc
aam
icebp
scas
fsubr
xchg
jg
fnstenv
dec
xor
inc
add
and
and
in
xor
cmp
pushf
mov
repnz
dec
mov
fs
movsb
lahf
mov
mov
mov
cmc
mov
scas
jne
ljmp
lahf
stos
jns
cltd
test
sbb
add
sti
dec
sub
data16
pop
nop
push
inc
add
lcall
add
adcl
mov
lock
dec
inc
add
and
and
les
dec
dec
mov
push
jl
fists
mov
lret
pop
pop
ret
mov
push
shl
int
xor
insl
sub
xor
xor
inc
add
inc
lds
add
adc
add
mov
dec
xchg
xor
inc
add
cmc
jns
add
in
cmpsb
push
int
pop
jbe
inc
sub
adc
jge
test
addb
xorl
mov
fwait
xor
inc
add
and
push
mov
pop
mov
mov
xchg
cmp
xor
inc
add
aad
enter
push
scas
xor
add
add
xlat
or
push
inc
movsl
ret
popf
call
jl
dec
jl
jge
popf
pusha
add
std
jp
add
jge
lea
lock
in
adc
int
mov
add
ret
pop
dec
mov
add
mov
xchg
lgs
push
jno
les
rorl
push
cmp
movsl
sub
mov
lcall
es
aad
push
in
mov
addb
movsb
or
pop
out
fcmove
sub
lcall
jecxz
sbb
imul
arpl
pop
popf
sub
add
dec
or
fsubs
mov
scas
sahf
mov
cld
push
dec
out
add
aas
inc
add
jecxz
addb
adc
shr
movsb
add
cmp
loope
mov
mov
test
or
ret
test
cmp
xchg
xchg
sbb
xchg
test
xlat
and
xadd
dec
xchg
adc
sub
inc
hlt
loop
iret
mov
aad
addr16
scas
xchg
or
js
lea
pop
mov
or
cmp
add
scas
insl
inc
xchg
xchg
sarb
xor
jge
xchg
inc
add
inc
add
add
jge
or
dec
adc
mov
shlb
add
mov
sbb
jae
dec
negl
mov
stc
push
cmp
push
rcr
adc
adc
push
mov
mov
push
aad
inc
add
aad
jle
clc
mov
insl
sub
add
mov
roll
fisubrs
xchg
cmpsb
popa
ja
shlb
push
inc
pop
fwait
pop
sub
cltd
test
repnz
out
jp
mov
and
lds
scas
lahf
push
mov
ret
jne
jae
lahf
inc
adc
dec
ds
cmp
daa
or
mul
and
sahf
jbe
add
mov
addr16
add
pop
scas
movsl
push
dec
insb
sub
addb
mov
out
bound
in
and
cmc
add
out
and
sbb
bndstx
fdivr
stos
pop
mov
cld
jnp
mov
push
repnz
or
add
dec
xchg
loope
cli
rolb
push
jb
add
jmp
adc
mov
add
xchg
stc
fdivrl
mov
inc
add
sub
pop
xor
pmaxsw
jae
aad
sarl
add
jg
test
xchg
pop
shrb
pushf
and
je
in
and
push
push
push
dec
dec
clc
inc
or
fildl
and
adc
cmpsl
popa
or
rorb
js
lahf
test
sti
jns
fwait
ja
or
std
das
outsb
inc
push
repz
add
xchg
inc
add
xchg
adc
or
fisubs
xchg
xor
push
arpl
add
cmp
outsb
bound
adc
pusha
add
add
push
orl
add
imul
decl
sub
shlb
or
inc
push
push
leave
jo
xor
jmp
fs
dec
xchg
das
sbb
push
icebp
and
mov
push
jecxz
lods
sarl
fwait
inc
js
xor
or
or
jo
cmp
sub
mov
outsl
xchg
cmp
in
or
adc
das
repz
icebp
hlt
dec
push
addb
mov
fstl
xor
mov
popf
xchg
icebp
out
hlt
mov
fwait
sbb
mov
cmpsl
in
fwait
out
pop
sbb
aam
test
fstps
xchg
mov
add
push
shll
fldcw
pop
int3
mov
lcall
add
sub
adc
inc
add
cli
inc
add
pop
sbb
xor
ret
gs
aaa
scas
into
aas
push
xchg
shl
fists
push
shufps
xchg
insl
mov
adc
repz
ds
add
mov
hlt
fimull
pusha
add
push
adc
insl
aaa
in
das
xor
aam
outsl
fdivr
push
jne
mov
pop
add
mov
mov
aad
push
repnz
pop
mov
call
add
jge
out
psubsw
mov
aas
xorl
cwtl
scas
bound
sub
shl
xchg
addb
add
add
push
jecxz
mov
xchg
and
rolb
xchg
stos
sbb
xor
sub
dec
dec
mov
adc
and
pushf
int
sub
adc
loope
addb
enter
lahf
imul
out
add
insl
faddl
aad
popa
scas
push
shlb
push
mov
movsl
push
add
add
xchg
sbb
mov
inc
sub
add
mov
sahf
or
pop
fst
inc
add
ja
sub
enter
in
pop
and
loope
push
or
outsl
loopne
aaa
jmp
les
sahf
pop
orl
jle
jae
jge
jb
pop
ds
sbb
stos
adc
cli
jmp
jne
popf
movsl
ret
mov
inc
add
jbe
jb
mov
xor
imul
cli
or
addb
push
pop
mov
cld
lods
test
stc
lret
ret
mov
or
mov
push
mov
sbb
stos
js
push
into
inc
add
mov
in
add
mov
adc
jge
add
add
addb
push
addb
push
sbb
cwtl
cmp
push
mov
and
jge
xchg
mov
jnp
fmul
adc
jmp
cmp
cmp
adc
xchg
fwait
adc
xchg
fdivs
int3
jbe
sbb
aas
xlat
jp
push
cmp
mov
xchg
jnp
mov
xchg
int
fcmovb
add
add
cwtl
mov
ljmp
mov
in
les
stos
cld
push
xchg
cmp
cmp
popa
mov
pop
addr16
movb
jle
xchg
xchg
xchg
imul
dec
adc
xchg
ss
mov
sahf
ret
ds
mov
add
add
add
sbb
imul
push
xchg
mov
mov
loope
fnstenv
mov
jb
lea
cld
stos
mov
shrb
xchg
or
add
add
sbb
push
les
pop
add
adc
cmpsb
mov
aad
ja
adc
mov
or
mov
and
mov
push
call
test
cmpsb
pushf
inc
sbb
movsb
lret
int3
push
xor
fs
push
insl
js
outsb
rcll
sbb
or
add
int3
push
mov
insl
outsl
xlat
testl
xor
push
aaa
arpl
xchg
jno
mov
xor
add
adc
mov
xor
movsb
cmp
addb
sahf
sub
add
sbb
inc
add
push
cmp
add
cmpsl
xlat
rolb
scas
lds
xor
add
dec
stos
sub
push
cmp
addb
sbb
pop
xchg
aam
and
addr16
fstp
loope
je
add
mov
mov
pop
out
push
cmpsl
aad
mov
xor
das
mov
in
in
or
add
push
loop
jb
pop
nop
sub
mov
enter
sub
add
ljmp
inc
add
scas
lods
xchg
jg
mov
add
add
out
nop
pop
mov
stos
addb
cmp
popa
add
aam
adc
ss
mov
push
add
into
push
push
lock
fistl
mov
cwtl
orl
add
adc
fdivl
dec
fisubs
adc
dec
xor
jae
cmpsb
stc
test
cmp
sub
and
pop
or
daa
push
jnp
pop
lods
add
mov
mov
and
pushf
xchg
jmp
push
arpl
cmp
sbb
xor
mov
mov
ss
mov
or
dec
inc
add
adcl
push
add
jg
xchg
inc
add
dec
xlat
sbb
mov
add
scas
mov
popa
jmp
inc
dec
xor
fistpl
xchg
imul
mov
fnstenv
ljmp
add
pop
inc
add
add
xor
xchg
push
iret
out
sbb
sub
out
test
sbb
adc
xor
dec
inc
add
mov
out
cmp
iret
mov
fisubs
add
mov
add
call
jmp
scas
mov
imul
xchg
aaa
mov
clc
and
adcl
and
jle
mov
daa
scas
and
movsb
xor
mov
and
je
dec
ss
sbb
dec
xchg
cmc
push
cltd
sbb
testb
shl
lods
sbb
lahf
rolb
add
pop
loope
mov
or
repnz
add
daa
adc
pop
and
scas
lods
ds
add
and
adc
adc
mov
add
mov
push
lock
out
les
roll
jge
cmpsb
movsb
cmp
sbb
add
hlt
xlat
stc
roll
sub
cmpsl
mov
jmp
add
sub
add
cmp
cmp
push
jg
nop
maxps
xor
addb
loop
mov
repz
add
test
or
mov
int3
jmp
movl
mov
mov
inc
add
jo
fdivl
test
movl
mov
test
repz
or
movsb
inc
push
dec
repnz
test
lret
pop
fcmovb
mov
and
fisttps
push
jp
dec
jae
ja
dec
clc
push
popf
mov
ret
pusha
add
roll
xchg
mov
hlt
inc
add
es
cmp
add
lds
adc
add
mov
xor
add
out
pusha
add
xchg
push
xlat
movl
scas
stos
addb
push
int
flds
lods
mov
jbe
push
int
jo
or
popa
dec
popf
jg
ljmp
add
sbb
or
scas
imul
and
dec
in
rcll
dec
test
add
sub
lea
insl
cmpsl
test
aad
xchg
fimull
movsb
sbb
in
mov
test
dec
dec
mov
mov
mov
arpl
in
dec
pushf
mov
mov
push
xor
scas
testb
push
test
push
sub
pop
es
pop
in
insb
mov
inc
add
jg
ds
push
xlat
pop
adc
push
arpl
or
add
pop
das
les
xor
dec
and
jp
sub
js
out
cmp
out
lea
std
xchg
addr16
and
xor
rorl
mov
push
and
adc
pop
mov
mov
aaa
fnstsw
addb
cli
ljmp
outsl
lahf
neg
inc
sahf
push
jnp
int3
es
or
inc
add
sbb
mov
inc
add
lcall
cmp
sahf
adc
push
xor
fisubrs
imul
nop
fmull
push
rolb
fucomi
sub
xchg
inc
add
add
pop
fistpll
jae
add
xor
mov
scas
std
rolb
and
and
cmpsl
inc
push
sbb
repnz
push
enter
push
add
out
test
call
rolb
roll
div
adc
jle
cs
mov
dec
imul
rolb
xlat
pushfw
cmc
mov
addb
and
adc
movsb
push
mov
pushf
jge
mov
in
sub
xchg
in
adc
xchg
push
addb
aaa
repnz
or
inc
data16
mov
cmp
in
push
jle
add
xlat
push
jo
add
lret
xor
jle
movsb
nop
push
popf
addb
gs
pop
dec
mov
xchg
iret
call
ss
or
add
pusha
add
jno
add
inc
sarb
gs
mov
add
inc
fs
arpl
out
xor
lods
inc
adc
push
gs
fcmovne
jmp
push
inc
sbb
mov
jp
nop
enter
js
popf
jmp
roll
enter
scas
outsb
pop
mov
int
adc
das
stos
data16
int3
or
ja
aas
xor
adc
dec
loop
dec
inc
add
jmp
dec
lea
and
cld
xor
jno
xchg
addr16
fs
mov
jmp
jmp
iret
adc
hlt
test
mov
mov
mov
imul
pop
jnp
mov
into
les
xchg
and
daa
push
add
add
aad
add
sub
popf
mov
xchg
insb
xor
addr16
mov
add
xchg
insb
xchg
addb
js
adc
sbb
jnp
add
xlat
clc
and
bound
adc
test
repnz
lods
pop
cmp
jmp
das
movsb
pushl
mov
fistl
dec
mov
rol
add
insl
cltd
stos
es
loope
inc
mov
movsl
cli
test
or
cmpsb
add
cmc
movb
repz
mov
lcall
sub
mov
imul
add
fisttpll
pop
stc
mov
ljmp
xor
xchg
sbb
scas
jae
add
jo
add
mov
mul
jl
pushf
lea
mov
adc
repnz
ficoms
inc
add
pop
int
bound
imul
pop
loop
adcl
xor
inc
add
mov
add
psrlw
shll
xor
or
js
jecxz
cmp
aaa
loope
jecxz
jns
push
lret
nop
int
inc
addb
or
add
add
xchg
cmp
dec
mov
fdivrl
leave
mov
outsb
xchg
cltd
xchg
insb
hlt
and
cwtl
pop
inc
lock
jnp
movb
pop
addb
mov
push
sbb
mov
adc
add
movsl
and
mov
gs
mov
add
mov
popf
daa
pop
mov
sbb
lods
pop
bound
cld
xor
jle
popf
sub
insb
xor
jbe
int
add
and
nop
pop
lcall
lds
xor
adc
xchg
insb
sub
add
push
popa
out
mov
mov
lahf
into
pusha
add
inc
lods
dec
pop
pop
xchg
cmp
add
adc
pop
fs
in
jg
js
fistl
xchg
add
mov
sbb
jecxz
out
xor
mov
lock
lret
and
pop
adc
pop
cmp
sub
mov
fadd
add
scas
xchg
out
leave
fs
pop
sub
add
adc
sbb
je
push
mov
add
sbbl
xchg
in
jne
sub
mov
jne
pushf
sbb
iret
jne
std
int
fwait
pop
jnp
divb
add
adc
sbb
ds
mov
add
mov
push
sahf
inc
jno
enter
pusha
add
outsb
addb
sahf
sub
add
lahf
nop
icebp
xchg
jbe
in
or
cmp
inc
sub
mov
dec
pop
outsb
imul
adc
jb
call
xor
mull
lods
les
sbb
cmp
mov
test
pusha
add
xchg
push
add
lds
andl
pop
addb
xor
icebp
fnstsw
addb
xchg
inc
xchg
add
mov
insb
xchg
mov
jecxz
addb
mov
scas
outsb
push
and
adc
or
in
dec
lret
ds
add
add
inc
or
add
xor
cmp
add
mov
mov
ss
imul
sub
sti
rolb
pop
xor
out
push
xchg
push
sbb
sub
add
loope
sbb
std
jle
std
mov
cmp
inc
add
int
jb
cli
movsb
fs
pop
cmpsb
jp
lods
testl
add
mov
in
inc
pushf
lcall
push
xor
push
test
pop
aas
aaa
nop
dec
mov
mov
add
xor
adc
cmpsl
es
idivl
in
xor
fs
punpcklwd
pop
pop
mov
pusha
add
sub
lcall
movsl
fnsave
cmp
lret
inc
mov
add
mov
loopne
sbb
scas
dec
iret
mov
sbb
repnz
enter
cli
add
xchg
xor
stos
adc
mov
inc
adc
jecxz
daa
mov
out
inc
add
fmull
and
cmp
add
call
or
add
enter
sub
loopne
push
jb
call
hlt
pop
push
cmp
add
fwait
cltd
dec
ljmp
subl
sbb
push
push
push
sbb
adc
lds
ret
mov
insl
dec
lock
pop
lret
aaa
add
clc
lock
enter
inc
xchg
fdivr
mov
movsb
pushf
add
gs
dec
sbb
inc
add
test
cs
mov
sti
and
xchg
daa
dec
and
push
lcall
movb
pop
loope
add
mov
arpl
and
sbb
pop
in
or
pushf
movb
mov
nop
les
sbb
sarl
popa
mov
fsts
xor
add
xchg
jns
enter
notb
arpl
or
gs
sbbl
xchg
pop
int3
or
cmpsl
mov
push
xchg
push
push
je
push
ss
xor
rcll
out
add
mov
add
fnstcw
sub
or
add
in
or
stc
xchg
addr16
repz
add
pop
mov
sbb
sbb
out
adc
add
push
fcmovu
mov
jb
hlt
cltd
test
addb
arpl
mov
dec
pop
bound
jnp
mov
jb
cmp
add
add
subl
push
idivb
in
pop
mov
es
push
add
inc
add
mov
das
push
rcll
add
and
loope
add
insl
pop
cmp
and
jle
inc
mov
sbb
inc
add
add
jno
pop
divl
cmp
cs
pushf
not
and
mov
inc
add
loop
aam
bound
rolb
daa
cld
rolb
add
pushf
push
and
mov
add
out
sbb
test
test
add
cmp
pop
add
push
leave
das
aas
mov
int
aaa
rolb
add
pop
dec
mov
fwait
test
add
and
cmp
mov
pop
pop
push
add
ficompl
add
pop
sahf
out
xchg
mov
xchg
mov
mov
jo
jbe
addr16
and
or
cmp
add
or
mov
out
cwtl
jbe
fists
jmp
lods
inc
add
lahf
int
and
jecxz
sub
adc
shll
adc
rcll
mov
push
push
iret
leave
into
mov
jp
sbb
leave
mov
std
cs
jb
jb
jge
les
dec
dec
jge
cwtl
call
pop
pop
dec
add
es
sbb
inc
mov
push
popf
add
pusha
add
outsl
insl
or
and
dec
in
cmp
jge
subl
add
aas
push
mov
lds
out
mov
jnp
mov
pop
jl
lahf
ret
xor
test
jecxz
aad
push
mov
and
scas
xchg
xchg
popa
je
add
es
cmpsl
lret
mov
xchg
push
test
xchg
sbb
dec
aam
mov
je
test
mov
hlt
fldcw
dec
and
xor
add
add
pop
cmc
cld
cmp
sbb
sub
jecxz
add
mov
xchg
pop
sbb
test
pushf
xor
fists
mov
or
bound
cmpsl
mov
movsl
rolb
xor
and
jae
adc
xor
fucomp
mov
jg
int3
test
out
jae
pop
in
pop
add
jo
outsb
dec
insb
mov
bound
imul
jl
nop
fstpl
jl
or
je
push
cwtl
fmull
adc
adcl
insb
pop
repz
jns
inc
add
jmp
add
add
movb
jecxz
and
sbb
sbb
adc
sub
loopne
mov
arpl
rclb
lock
add
jl
std
int
test
lods
xchg
int
xor
xchg
scas
push
aaa
dec
shl
lcall
adc
stos
lods
and
dec
mov
jge
lods
lods
jns
and
xchg
fildl
icebp
lcall
sbb
repnz
push
jecxz
arpl
push
jns
je
mov
jg
test
in
xchg
cmp
mov
out
aaa
cli
data16
mov
or
std
ja
mov
push
filds
add
add
sahf
mov
cmp
pop
pop
iret
pcmpgtw
dec
adc
adc
add
enter
les
jb
std
out
ds
sub
push
add
and
pushf
xchg
jecxz
jmp
pop
scas
cmp
pop
mov
cmp
scas
mov
add
jbe
repz
cmp
std
insb
rol
shlb
fisttpl
mov
mov
das
sbb
shll
cmp
arpl
add
js
in
test
pop
xor
repz
and
rolb
push
lahf
shll
sub
imul
lahf
dec
xchg
push
nop
mov
add
pop
xor
or
mov
lods
pop
sbb
add
add
stos
or
add
daa
stos
pop
push
mov
pop
dec
mov
lret
and
adc
in
push
push
pop
and
adc
or
sbb
jo
adc
pop
push
enter
add
lods
cld
out
xor
iret
xor
mov
or
and
daa
pop
and
jge
fmuls
jg
call
mov
mov
add
iret
add
and
nop
mov
mov
add
add
push
rorb
std
and
inc
add
cltd
or
pusha
add
hlt
pop
jg
test
cld
nop
imul
add
outsb
push
jle
inc
js
pop
cli
jb
xchg
jae
pop
outsl
sbb
pop
je
pop
lods
jge
lcall
out
es
js
fwait
sub
add
rcrb
out
les
mov
xor
dec
mov
and
adc
int
fsub
push
out
push
stc
mov
aad
in
and
push
sub
scas
pop
data16
daa
xchg
fs
loopne
jle
add
xlat
cld
mov
dec
mov
dec
insl
mov
into
mov
adc
jp
shl
add
dec
mov
fisubrs
arpl
and
lods
mov
cmp
and
repnz
icebp
xchg
inc
add
xorl
push
int3
pause
pop
inc
add
push
add
std
addb
add
add
loop
xor
jns
mov
sub
lods
add
sarl
cmc
daa
or
daa
pushf
fdivr
mov
add
mov
adc
mov
add
xor
adc
pop
movlps
mov
aas
hlt
fisubl
mov
or
lcall
pop
xor
push
mov
aas
mov
pop
out
fwait
sbb
xor
movsb
loop
mov
dec
and
pop
fs
dec
jnp
cmp
push
loop
adc
imul
add
fsubrs
sub
les
mov
rcll
loope
xorl
imul
in
sti
daa
flds
push
lret
add
shll
cmpsb
or
mov
rorb
jno
cld
mov
incl
and
pop
sub
sti
xchg
xchg
push
xor
cmp
or
fwait
xor
sbb
add
mov
add
movsb
xchg
repz
push
push
jp
jl
and
pop
inc
add
inc
divb
push
rolb
sbb
add
loopne
mov
xor
addb
pop
mov
aad
cmp
mov
stos
cmp
add
and
adc
js
adc
jae
addb
add
js
push
xor
fdivl
push
shl
scas
in
enter
out
decl
into
pushf
add
fmull
cmpsl
std
jle
inc
subl
sbb
mov
push
mov
add
mov
sub
mov
xor
test
add
push
shrl
std
mov
fisttpll
je
xchg
orl
into
dec
add
adc
decl
jb
inc
add
xchg
mov
add
dec
rol
add
add
stos
mov
xor
mov
in
pop
lock
pop
in
pop
mov
sbb
sub
push
adc
push
dec
adc
adc
imul
ss
sahf
and
add
outsb
ret
push
shlb
pop
orl
adc
mov
xchg
add
sub
fucomi
add
and
fucomp
xor
lods
xor
daa
fadds
add
inc
add
sahf
cs
test
aas
mov
and
sti
mov
ret
arpl
addb
add
adc
xchg
lock
fs
mov
cltd
inc
jge
sub
ljmp
loop
xlat
push
js
sub
inc
add
les
shll
mov
aas
xchg
xor
sbb
lret
or
mov
in
pushf
mov
aam
aas
mov
jbe
cwtl
push
pop
movb
add
fldcw
shrb
jb
mov
cs
dec
imul
cmpsl
cwtl
out
mov
cmp
pop
push
jb
xor
dec
bound
push
fldcw
jecxz
mov
adc
cld
cli
cmp
inc
shrl
jg
cmp
repz
add
cmp
insl
adc
inc
daa
flds
jne
fildl
in
js
cmp
adc
es
movq
add
insb
mov
pop
aam
or
pop
fwait
mov
jbe
fs
out
jg
out
mov
scas
mov
add
xchg
cmp
fistl
dec
inc
or
and
loop
mov
inc
cld
sbb
xor
popl
sub
xor
loop
fwait
stos
jo
jb
mov
push
lds
ja
lret
jae
mov
mov
mov
loopne
cmp
aam
push
les
and
insl
or
mov
stc
jne
add
scas
fcmove
bound
sbb
popa
das
cmp
ljmp
ret
xchg
outsl
pusha
add
fwait
in
arpl
xor
ja
add
or
lea
scas
fcmovnbe
xchg
mov
mov
bound
adc
enter
cltd
addb
add
out
add
call
movb
int
enter
mov
stc
nop
es
movsb
pop
lods
add
push
mov
add
push
sub
mov
add
jmp
stc
nop
es
dec
je
add
nop
es
pop
add
cwtl
mov
stc
nop
es
add
add
sub
stos
ror
stc
nop
es
add
add
dec
and
jb
mov
add
lods
add
nop
jmp
pop
add
add
mov
mov
stc
nop
es
add
imul
mov
icebp
add
repnz
cmc
in
add
push
mov
xchg
ret
lods
xor
nop
cld
nop
jmp
xchg
add
clc
popf
mov
mov
stc
nop
es
add
add
cwtl
mov
stc
nop
es
popl
add
add
pop
jmp
stc
nop
es
add
pop
add
mov
xchg
ret
rolb
add
cmp
movsl
push
fs
mov
push
mov
xchg
ret
add
add
add
pop
add
stc
nop
es
add
add
stc
nop
es
sub
add
xor
push
add
shl
nop
cld
nop
jmp
repz
add
and
stos
test
push
mov
xchg
ret
add
add
add
lea
jmp
add
xchg
aam
shl
addb
xor
movzwl
nop
cld
nop
jmp
add
add
add
addb
xchg
dec
jmp
stc
nop
es
add
add
jmp
stc
nop
es
add
cwtl
mov
jb
add
popf
sub
add
and
push
mov
xchg
ret
aam
add
sahf
or
mov
xchg
ret
add
add
xor
add
jg
jp
add
stc
nop
es
and
mov
stc
nop
es
add
add
cmp
nop
cld
nop
jmp
and
add
xchg
sbb
jb
rolb
add
add
xchg
cld
nop
jmp
pop
xchg
add
test
add
stc
nop
es
lods
add
push
dec
push
stc
nop
es
je
aam
dec
add
pusha
lret
nop
es
pop
xchg
repnz
add
and
stc
nop
es
xchg
and
add
lcall
nop
es
xchg
adc
sub
mov
stc
nop
es
test
and
stc
nop
es
add
add
add
xor
add
stc
nop
es
xchg
es
add
add
jge
add
inc
add
xor
es
add
add
add
pusha
add
lea
stc
nop
es
add
je
fsub
sub
mov
xchg
ret
clc
lahf
sub
nop
cld
nop
jmp
add
add
add
add
test
nop
es
fcomps
cld
nop
jmp
sub
add
je
add
nop
cld
nop
jmp
dec
add
faddl
add
push
push
mov
xchg
ret
add
popl
je
add
or
pop
stc
nop
es
pop
mov
pop
pop
in
add
stc
nop
es
add
add
add
add
lea
nop
cld
nop
jmp
pop
pusha
add
add
stc
out
sub
stc
nop
es
add
mov
stc
nop
es
pop
dec
pop
add
adc
nop
es
pop
incb
add
test
sub
popa
push
mov
xchg
ret
dec
add
sub
stc
nop
es
add
pusha
add
inc
scas
dec
push
mov
xchg
ret
xchg
add
xor
add
lcall
sbb
add
add
cwtl
lods
iret
push
stc
nop
es
pop
add
movsb
add
add
add
nop
es
add
add
sub
cmc
lods
pop
add
push
sub
xor
stc
nop
es
rcr
xchg
add
add
jnp
mov
nop
cld
nop
jmp
movsb
add
jp
stc
nop
es
add
xor
add
pusha
movsb
pop
mov
stc
nop
es
mov
cli
je
stc
nop
es
sub
mov
stc
nop
es
add
insb
mov
nop
es
add
add
dec
add
inc
mov
add
add
nop
cld
nop
jmp
add
lahf
jno
int3
dec
stc
nop
es
repnz
add
call
nop
cld
nop
jmp
add
mov
add
jne
stc
nop
es
pop
sub
cltd
call
stc
nop
es
add
add
and
decl
es
add
dec
pop
add
outsl
nop
cld
nop
jmp
stc
add
add
push
stc
nop
es
dec
je
add
mov
stc
nop
es
add
je
xor
stos
push
push
mov
xchg
ret
add
cmc
clc
add
add
dec
sub
pop
fildl
xchg
ret
add
add
and
mov
xchg
ret
add
je
pusha
add
lret
mov
stc
nop
es
add
add
rep
push
mov
xchg
ret
outsl
pop
add
add
xchg
add
push
nop
cld
nop
jmp
faddl
add
je
xchg
aam
sbb
loop
push
mov
xchg
ret
add
mov
sub
nop
jmp
je
xchg
test
add
cmpsl
xchg
mov
nop
cld
nop
jmp
mov
sbb
pusha
add
stc
nop
es
push
add
add
add
add
jmp
jmp
add
add
add
nop
es
sub
sub
decb
out
inc
add
add
add
lret
push
stc
nop
es
xchg
xchg
mov
mov
push
push
mov
xchg
ret
fsubrs
add
nop
es
add
dec
cmp
lods
mov
mov
stc
nop
es
mov
push
stc
nop
es
incb
add
pop
cmc
jge
xchg
int
movsl
stc
nop
es
add
pusha
lods
jl
movb
es
add
popf
add
add
pop
push
mov
xchg
ret
add
add
mov
stc
nop
es
cmp
add
cmp
pop
pop
push
mov
xchg
ret
add
xchg
dec
mov
stc
nop
es
faddl
xor
jne
fistpll
stc
nop
es
pop
add
add
add
xor
stc
nop
es
add
add
outsl
int3
sub
stc
nop
es
repnz
pop
add
add
add
nop
cld
nop
jmp
mov
clc
mov
inc
ss
xor
stc
nop
es
add
add
popa
stc
nop
es
add
add
pop
je
lods
push
add
add
add
nop
es
add
movsb
sub
mov
es
stc
add
add
add
nop
es
xor
nop
es
je
add
xchg
sbb
es
add
inc
insb
xor
push
mov
xchg
ret
add
popf
add
mov
nop
cld
nop
jmp
mov
add
stc
nop
es
repnz
add
add
mov
stc
nop
es
mov
pusha
nop
cld
nop
jmp
pop
add
add
add
mov
push
add
pusha
stc
nop
es
mov
insb
add
add
mov
decb
test
es
add
add
push
stc
nop
es
add
cmp
add
and
in
jmp
nop
cld
nop
jmp
xchg
xchg
xor
lods
shll
mov
push
mov
xchg
ret
repz
bound
pop
sub
stc
nop
es
mulb
add
adc
call
nop
cld
nop
jmp
dec
incb
add
push
sar
es
fcomp
movsb
add
ret
mov
add
nop
es
aam
add
nop
es
mov
pop
add
pop
pop
stc
nop
es
add
aam
add
mov
stc
nop
es
xor
loopne
lahf
mov
stc
nop
es
add
lods
cmp
popa
add
mov
xchg
ret
add
add
fcompl
mov
stc
nop
es
add
push
mov
xchg
ret
add
insb
push
jne
stc
nop
es
add
push
lret
and
push
mov
xchg
ret
dec
add
add
add
pusha
add
nop
es
push
add
add
add
movsl
rolb
cmpl
and
add
add
stc
outsl
cmpw
stc
nop
es
add
je
mov
add
sbb
add
aam
add
mov
stc
nop
es
add
out
call
stc
nop
es
stc
test
call
stc
nop
es
test
add
dec
push
stc
nop
es
add
add
sti
add
add
push
add
clc
add
add
pop
nop
cld
nop
jmp
add
add
add
add
and
mov
xchg
ret
clc
add
cmp
nop
es
repnz
mov
pusha
push
nop
cld
nop
jmp
negb
add
pop
cmp
cld
nop
jmp
add
add
cmp
sahf
mov
div
stc
nop
es
push
add
push
popf
add
in
xchg
mov
lahf
mov
push
mov
xchg
ret
add
add
add
add
stc
nop
es
lods
sub
or
cld
nop
jmp
mov
add
pop
add
jne
stc
nop
es
add
pop
dec
add
nop
jmp
sub
sbb
add
movsb
add
stc
nop
es
add
mov
cmp
nop
es
add
bound
pusha
add
jo
push
push
in
rclb
and
nop
es
add
lahf
add
add
add
push
mov
xchg
ret
add
bound
int
stc
nop
es
mov
pop
add
push
add
stc
nop
es
clc
repz
mov
stc
nop
es
add
or
lret
push
mov
xchg
ret
fadds
add
add
add
push
mov
xchg
ret
add
cmp
pop
scas
pop
push
mov
xchg
ret
dec
add
sbb
add
xchg
sahf
dec
nop
cld
nop
jmp
add
jge
add
add
add
stc
nop
es
mov
xor
jnp
test
stc
nop
es
add
add
stc
nop
es
add
add
pop
sub
jb
add
add
fcomp
fdivl
adc
inc
adc
nop
es
add
outsl
add
fsubrp
mov
add
stc
nop
es
add
add
out
mov
stc
nop
es
sbb
pusha
xchg
mov
movsl
popa
mov
mov
addl
fiadds
pop
stc
add
stc
nop
es
pop
pop
test
xchg
xor
push
mov
xchg
ret
pop
xchg
lods
xor
add
stc
nop
es
mov
add
cmc
int
stc
nop
es
add
dec
sbb
add
jge
out
fwait
add
stc
nop
es
sbb
add
xchg
and
jb
pop
add
add
and
mov
es
add
outsl
add
test
add
stc
nop
es
pusha
and
cmpsl
ret
push
stc
nop
es
add
and
push
test
test
xchg
dec
mov
stc
nop
es
xchg
add
xchg
fmuls
jmp
add
cmc
popf
add
add
pop
stc
nop
es
add
je
add
dec
cmp
cld
nop
jmp
incb
sub
mov
stc
nop
es
add
add
add
mov
adc
cld
nop
jmp
pusha
fsubs
cmc
outsl
sub
add
stc
nop
es
add
movsb
stc
aaa
lds
stc
nop
es
add
and
pop
push
mov
xchg
ret
add
je
add
clc
cwtl
add
add
or
add
stc
nop
es
add
xor
fsubl
popa
add
nop
es
cwtl
add
insb
add
and
je
sub
nop
es
add
clc
bound
pop
mov
stc
nop
es
outsl
je
add
add
push
mov
nop
cld
nop
jmp
mov
call
stc
nop
es
dec
add
adc
sbb
add
nop
es
add
dec
fsubrs
add
xchg
add
add
add
jnp
stc
nop
es
add
mov
xchg
mov
push
stc
nop
es
movsb
pop
popf
sbb
cmpsb
pushf
inc
push
mov
xchg
ret
stc
add
lods
movsb
popl
mov
nop
cld
nop
jmp
dec
insb
add
push
nop
cld
nop
jmp
add
lods
dec
add
aam
pop
imul
jb
cmc
pop
add
xchg
aaa
cmpsl
xor
inc
mov
es
outsl
outsl
add
pop
mov
push
mov
xchg
ret
add
jge
add
add
dec
push
stc
nop
es
fdivrs
pop
mov
xchg
mov
popa
add
mov
xchg
ret
dec
and
inc
stc
nop
es
incb
xor
sub
mov
jb
testb
and
add
mov
stc
nop
es
outsl
add
add
test
nop
es
sahf
pusha
add
mov
add
add
or
add
leave
mov
nop
cld
nop
jmp
xchg
test
add
add
cld
nop
jmp
pusha
add
push
add
stc
nop
es
add
add
add
add
nop
cld
nop
jmp
add
pusha
dec
lcall
nop
cld
nop
jmp
add
mov
fstpt
stc
nop
es
add
add
sqrtps
mov
cmp
ret
sahf
sub
mov
mov
nop
cld
nop
jmp
add
add
add
push
push
mov
xchg
ret
add
add
frstor
cld
nop
jmp
add
repz
lahf
dec
add
mov
jmp
add
lahf
pusha
add
sub
jb
xchg
clc
add
jmp
mov
xchg
ret
add
movsb
cwtl
pop
sub
es
add
jbe
push
mov
loopne
data16
push
push
add
orl
stc
nop
es
add
mov
add
add
nop
es
add
test
mov
nop
cld
nop
jmp
fcoms
popf
xchg
pushf
pushl
push
mov
xchg
ret
pusha
aam
add
es
je
add
add
xchg
cmp
push
add
nop
es
sahf
add
add
and
in
inc
add
add
add
xor
mov
nop
cld
nop
jmp
add
add
pop
pop
xor
nop
cld
nop
jmp
repz
je
add
xor
stc
nop
es
pop
add
add
lahf
fs
test
push
mov
xchg
ret
add
adc
ficoml
nop
es
add
add
push
mov
xchg
ret
dec
add
je
popf
lea
nop
cld
nop
jmp
sub
add
fildl
mov
xchg
ret
add
pop
cmp
add
jmp
add
popl
pop
dec
adc
in
mov
stc
nop
es
clc
pop
add
popf
movsl
adc
sub
push
mov
xchg
ret
and
add
mov
out
inc
add
dec
add
insb
add
movsb
inc
add
nop
es
add
add
je
adc
andl
jmp
add
add
add
lret
mov
stc
nop
es
cwtl
clc
add
pusha
add
push
mov
xchg
ret
add
mov
add
sbb
cld
nop
jmp
add
fsubrs
stc
nop
es
xor
bound
jg
jl
and
or
add
pop
idivb
add
jmp
add
sbb
add
stc
add
xchg
push
mov
nop
es
pop
bound
xor
add
jg
stc
nop
es
lods
mov
sub
pop
and
nop
es
popl
add
add
loopne
xor
add
inc
add
nop
jmp
push
add
add
add
add
es
stc
nop
es
add
mov
xchg
ret
pop
sahf
add
add
mov
stc
nop
es
add
add
jb
add
add
sbb
add
es
add
pop
add
mov
stc
nop
es
add
add
nop
cld
nop
jmp
add
lods
add
rclb
enter
nop
jmp
je
add
add
pop
mov
movzwl
stc
nop
es
xor
cmc
bound
daa
std
inc
add
add
add
or
nop
cld
nop
jmp
xchg
rolb
pusha
adc
mov
stc
nop
es
add
mov
jb
push
push
mov
xchg
ret
add
lods
add
mov
test
nop
es
add
movb
mov
nop
cld
nop
jmp
mov
xchg
dec
add
jne
stc
nop
es
add
bound
stc
nop
es
add
add
mov
xchg
ret
dec
add
stc
aas
movzwl
stc
nop
es
add
popf
stc
add
mov
div
mov
add
adc
add
add
push
mov
xchg
ret
sub
push
mov
repz
cmp
es
dec
dec
add
jne
nop
cld
nop
jmp
xchg
stc
movsb
insb
adc
xor
push
mov
xchg
ret
mov
add
adc
pop
push
stc
nop
es
pop
add
idiv
clc
add
mov
stc
nop
es
add
bound
add
nop
cld
nop
jmp
add
add
mov
cld
nop
jmp
add
mov
mov
in
inc
add
add
pop
add
add
sub
inc
add
add
add
mov
pop
jmp
nop
cld
nop
jmp
xchg
and
add
cltd
add
nop
cld
nop
jmp
add
add
and
jb
negb
add
add
jnp
stc
nop
es
xchg
add
add
mov
stc
nop
es
adc
incb
mov
imul
stc
nop
es
add
add
add
cwtl
xchg
test
fsubrp
inc
add
mov
pop
add
mov
stc
nop
es
outsl
stc
sub
push
jg
jmp
jmp
dec
add
add
cmp
jg
xchg
cmpl
xorb
incl
fadds
insb
sqrtps
nop
es
xchg
add
add
xchg
call
and
testb
pop
add
inc
lret
cmpl
nop
cld
nop
jmp
sahf
add
and
fisttps
es
and
add
pop
shl
stc
nop
es
sahf
add
add
jge
jne
stc
nop
es
add
dec
add
push
mov
xchg
ret
pusha
popf
add
adc
add
add
cmp
adc
fwait
add
stc
nop
es
add
add
stc
nop
es
bound
jge
fmull
add
add
nop
es
fsubrl
mov
std
sldt
stc
nop
es
aam
add
mov
stc
nop
es
pusha
add
pop
push
mov
xchg
ret
xor
add
mov
test
addb
arpl
add
nop
cld
nop
jmp
rolb
add
sub
or
nop
es
add
add
mov
in
nop
cld
nop
jmp
pop
add
add
cwtl
dec
add
add
add
stc
nop
es
cmc
sub
mov
cld
nop
jmp
add
aam
add
mov
xchg
ret
add
je
rolb
nop
es
add
sub
mov
mov
xchg
ret
add
dec
xor
clc
mov
rclb
cld
inc
add
add
jne
stc
nop
es
cwtl
cmp
into
add
nop
cld
nop
jmp
mov
adc
call
stc
nop
es
cmc
add
add
push
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
add
cld
stc
nop
es
add
add
pusha
lret
decl
push
mov
xchg
ret
incb
xor
push
push
mov
xchg
ret
add
clc
jmp
es
add
add
lods
movsb
sub
mov
xchg
ret
pop
add
lods
adc
mov
nop
cld
nop
jmp
outsl
add
pop
mov
push
mov
xchg
ret
dec
and
stc
mov
cld
nop
jmp
add
rolb
add
add
nop
es
sub
lods
add
test
stc
call
stc
nop
es
testb
sub
nop
es
add
pop
add
sti
stc
nop
es
jge
add
addr16
push
mov
xchg
ret
add
mov
gs
cmpsb
or
nop
jmp
test
add
jg
nop
cld
nop
jmp
pop
je
test
add
lret
or
add
nop
es
xchg
jge
fs
add
nop
es
add
xor
cli
add
push
mov
xchg
ret
pusha
add
push
stc
nop
es
add
and
add
add
stc
nop
es
add
add
bound
popf
xchg
push
add
add
dec
stc
nop
es
sahf
incb
add
add
je
cmp
nop
cld
nop
jmp
add
add
add
stc
nop
es
lods
outsl
add
stc
nop
es
add
pop
popf
xchg
lret
jg
stc
nop
es
sub
insb
je
std
push
push
mov
xchg
ret
xor
movsb
negb
mov
mov
xchg
ret
pop
add
add
xchg
dec
mov
stc
nop
es
mov
je
pop
mov
stc
nop
es
lahf
add
dec
incb
insb
adc
mov
mov
es
add
add
mov
stc
nop
es
dec
add
loop
add
nop
cld
nop
jmp
lods
dec
cmc
lods
add
add
push
stc
nop
es
aam
and
add
xor
and
lds
push
mov
xchg
ret
popl
add
add
mov
xchg
ret
add
pop
add
incl
nop
cld
nop
jmp
mov
add
xor
lret
in
add
add
inc
add
pop
add
add
nop
es
add
xchg
and
stc
nop
es
add
cmpsb
adc
loop
nop
cld
nop
jmp
and
add
add
out
ret
stc
nop
es
add
ret
and
nop
es
clc
add
mov
add
add
nop
es
xchg
adc
stos
stc
nop
es
xchg
add
pop
push
push
mov
xchg
ret
add
faddl
add
lods
pop
sub
nop
cld
nop
jmp
je
insb
dec
hlt
mov
add
mov
nop
cld
nop
jmp
pop
pop
adc
sub
add
nop
cld
nop
jmp
add
dec
add
subl
push
mov
xchg
ret
sahf
add
popf
pop
call
nop
cld
nop
jmp
xor
xor
add
push
mov
xchg
ret
add
add
mov
xchg
ret
pop
rcr
dec
repz
daa
cld
add
push
mov
xchg
ret
add
xchg
add
add
nop
jmp
add
add
add
test
nop
cld
nop
jmp
popf
and
fmull
add
add
stc
nop
es
add
sbb
es
mov
and
push
stc
nop
es
add
lahf
pop
mov
stc
nop
es
sub
repz
sub
add
cld
nop
jmp
insb
popl
sahf
add
push
push
mov
xchg
ret
pop
lahf
xchg
lods
xchg
add
repnz
mov
xchg
pop
add
clc
add
sbb
clc
add
es
and
cmp
add
out
mov
stc
nop
es
add
nop
cld
nop
jmp
repz
add
add
es
add
add
sahf
dec
push
mov
xchg
ret
cmc
xchg
add
jne
stc
nop
es
je
add
data16
nop
jmp
add
add
inc
sub
nop
es
add
add
mov
cld
nop
jmp
dec
add
add
je
cmp
inc
inc
add
nop
es
add
test
imul
stc
nop
es
add
sub
push
stc
nop
es
mov
add
add
stc
nop
es
xchg
add
add
add
pop
jmp
mov
add
nop
es
sahf
faddl
add
in
int
add
nop
es
add
add
add
push
mov
xchg
ret
add
add
cmp
push
jnp
rclb
incl
add
out
fldt
push
mov
xchg
ret
add
and
in
call
stc
nop
es
add
mov
and
stc
nop
es
fdivrs
add
das
push
stc
nop
es
sahf
add
add
pop
stc
nop
es
lods
dec
add
add
mov
stc
nop
es
add
xchg
and
push
mov
xchg
ret
add
movsl
or
es
add
mov
mov
and
mov
nop
cld
nop
jmp
add
xor
add
sahf
dec
xchg
stc
nop
es
pop
add
add
dec
adc
nop
es
incb
mov
mov
es
add
sub
stc
nop
es
add
xchg
xchg
stos
and
nop
cld
nop
jmp
dec
mov
add
add
push
jb
movzwl
nop
cld
nop
jmp
pop
pop
add
add
je
pop
mov
stc
nop
es
repz
cwtl
add
cltd
lea
stc
nop
es
pop
add
pop
add
stc
nop
es
divb
sub
je
fisttpl
es
add
test
int3
call
nop
cld
nop
jmp
add
xchg
add
push
push
mov
xchg
ret
add
add
mov
mov
push
mov
xchg
ret
dec
add
fstps
mov
xchg
ret
sahf
add
xor
stc
nop
es
cmc
aam
add
add
out
mov
nop
cld
nop
jmp
sahf
add
sub
mov
add
nop
es
add
cmpsb
inc
add
loopne
stc
nop
es
dec
mov
adc
and
aas
and
push
mov
xchg
ret
xchg
add
dec
add
nop
cld
nop
jmp
rcrb
xchg
adc
and
imul
es
dec
aam
add
dec
cmp
nop
es
rorb
add
std
cmp
nop
cld
nop
jmp
add
add
push
mov
xchg
ret
lods
xchg
clc
add
stc
nop
es
test
pusha
add
add
sbb
sar
es
add
add
pop
push
mov
xchg
ret
dec
je
add
add
in
inc
add
add
stc
nop
es
add
xchg
nop
cld
nop
jmp
bound
pop
aad
ljmp
nop
es
movsb
xor
sub
inc
insb
insb
stc
nop
es
add
push
mov
xchg
ret
cmp
sahf
je
add
je
and
push
mov
xchg
ret
and
test
add
nop
es
add
outsl
xchg
mov
test
icebp
stc
nop
es
dec
add
mov
cltd
and
push
mov
xchg
ret
dec
je
mov
xchg
or
add
cld
incl
popf
outsl
add
mov
in
in
add
jg
add
add
nop
cld
nop
jmp
add
pusha
add
pusha
add
xorb
pushl
fadds
add
lods
jnp
add
nop
es
add
add
stc
mov
mov
push
jecxz
add
mov
add
popa
add
mov
xchg
ret
rolb
incb
jge
inc
call
inc
add
add
add
test
popf
push
push
mov
xchg
ret
add
popf
push
lods
add
jne
stc
nop
es
mov
add
mov
add
pop
push
movsb
add
dec
add
test
inc
push
adc
stc
nop
es
sahf
lods
add
movb
cmpl
nop
cld
nop
jmp
je
add
repz
addb
lahf
lea
nop
cld
nop
jmp
stc
repz
push
push
mov
xchg
ret
dec
repz
je
xchg
mov
pop
stc
nop
es
jge
add
add
stc
nop
es
je
add
and
add
mov
push
mov
xchg
ret
adc
add
add
movzwl
stc
nop
es
add
dec
insb
add
lods
push
mov
xchg
ret
add
pusha
add
mov
test
stc
nop
es
add
add
adcl
je
stc
nop
es
sahf
jge
icebp
mov
nop
es
add
xchg
outsl
sub
pop
mov
push
mov
xchg
ret
add
mov
sbb
es
aam
add
add
xor
mov
xchg
ret
add
add
clc
add
jge
mov
nop
es
outsl
add
mov
test
stc
nop
es
aam
add
es
add
add
pop
stc
nop
es
add
add
mov
add
push
mov
stc
nop
es
clc
add
outsl
out
ret
nop
cld
nop
jmp
stc
dec
add
xor
add
les
stc
nop
es
cmc
add
dec
add
add
cmp
ret
add
sahf
add
add
call
sti
fcomps
mov
nop
es
add
sahf
test
mov
sti
add
push
mov
xchg
ret
add
add
add
add
push
push
mov
xchg
ret
sub
add
rclb
lret
or
mov
xchg
ret
bound
testb
movsb
sbb
xor
nop
es
cmc
add
add
or
daa
fadds
xchg
ret
add
clc
adc
test
inc
in
nop
es
xchg
cwtl
add
rclb
es
sub
xor
add
int
mov
stc
nop
es
dec
add
jmp
stc
nop
es
dec
pop
pop
movsb
pop
mov
nop
cld
nop
jmp
and
pop
xchg
xor
xchg
sub
mov
xchg
ret
add
lods
sahf
mov
jb
sub
pop
add
add
add
stc
nop
es
add
lods
add
xor
stc
nop
es
add
add
cmc
and
cld
nop
jmp
add
repnz
add
test
nop
cld
nop
jmp
sub
es
sub
repnz
bound
cld
xor
nop
cld
nop
jmp
je
add
clc
dec
inc
stc
nop
es
pop
xchg
lods
insb
inc
add
loop
arpl
mov
xchg
ret
xchg
add
add
add
nop
cld
nop
jmp
rolb
add
lods
popf
adc
nop
es
add
dec
pop
faddl
jp
shrl
nop
es
add
add
jg
enter
jb
fcoms
faddl
add
add
test
mov
es
add
lahf
movsb
xchg
sbb
and
nop
es
add
add
shlb
nop
cld
nop
jmp
push
add
add
mov
es
add
add
pop
add
sub
popa
add
nop
es
mov
add
nop
es
xchg
xor
mov
addb
jge
movsb
stc
nop
es
add
add
add
add
cmp
push
mov
xchg
ret
je
add
lock
add
sub
add
nop
es
push
pop
stc
add
hlt
decb
cld
nop
jmp
add
add
add
mov
es
add
add
add
xchg
vshufps
js
fdivr
nop
es
outsl
and
pop
add
add
pop
xor
in
xchg
stc
nop
es
add
add
add
gs
add
add
stc
nop
es
imulb
ret
stc
nop
es
test
pop
add
pusha
les
add
mov
sub
flds
xchg
ret
add
cmpb
stc
nop
es
add
mov
cmp
nop
es
add
add
rep
nop
cld
nop
jmp
add
add
pop
mov
stc
nop
es
add
enter
push
mov
xchg
ret
movsb
add
rolb
inc
push
mov
xchg
ret
add
and
enter
es
je
pusha
add
add
add
jb
cmc
add
add
clc
add
jmp
jb
add
dec
jge
pop
inc
add
cli
pushl
stc
nop
es
xor
sti
and
push
mov
xchg
ret
and
add
or
mov
xchg
ret
xchg
add
jge
nop
cld
nop
jmp
add
or
cld
nop
jmp
je
movsb
add
mov
lds
push
mov
xchg
ret
add
add
jg
stc
nop
es
faddl
add
sub
mov
stc
nop
es
push
cmc
mov
push
stc
nop
es
add
pusha
lods
jge
add
jno
ds
nop
cld
nop
jmp
add
je
insb
pop
add
dec
mov
stc
nop
es
xchg
shrb
rcrb
push
mov
xchg
ret
push
add
pop
lahf
add
pop
mov
stc
nop
es
pop
add
add
stc
nop
es
add
xchg
dec
add
add
scas
decl
push
mov
xchg
ret
add
repz
jne
js
nop
cld
nop
jmp
dec
outsl
xchg
je
add
pop
movsb
outsb
jne
stc
nop
es
add
xor
add
ret
xlat
incl
add
add
jg
test
idiv
stc
nop
es
add
and
xor
repnz
nop
es
xchg
add
es
stc
dec
je
fsubrs
push
push
mov
xchg
ret
add
xchg
push
sbb
nop
es
stc
repnz
pop
xchg
lea
test
es
xchg
sub
les
lds
add
add
call
pusha
add
pushaw
add
je
stc
nop
es
xchg
stc
dec
xchg
jmp
nop
es
insb
xchg
pusha
adc
add
out
add
add
add
pop
rep
stc
nop
es
fcomp
add
sub
test
rclb
cld
incl
pop
test
add
dec
add
aad
out
je
stc
nop
es
add
xor
push
mov
mov
inc
add
add
out
out
clc
stc
nop
es
add
push
stc
nop
es
add
add
xchg
add
fdivl
iret
pop
stc
nop
es
xor
add
add
cmp
pop
test
push
mov
xchg
ret
add
pusha
add
push
stc
nop
es
mov
mov
add
popa
stc
nop
es
clc
add
pop
dec
add
nop
es
add
pop
add
popf
mov
stc
nop
es
fcomps
leave
sub
nop
es
add
inc
pop
mov
stc
nop
es
sub
mov
add
add
add
add
mov
sub
nop
es
add
add
add
pop
add
cld
nop
jmp
dec
add
movsb
add
sbb
call
stc
nop
es
add
stc
nop
es
add
add
add
dec
in
mov
push
mov
xchg
ret
add
sahf
add
add
cmp
nop
es
pop
sub
inc
das
add
stc
nop
es
add
div
nop
cld
nop
jmp
popl
dec
xchg
add
sahf
pusha
stc
mov
nop
cld
nop
jmp
pop
add
sub
outsl
xchg
bound
pusha
push
mov
xchg
ret
and
mov
sbb
jae
jb
nop
es
lods
xchg
add
mov
inc
add
add
repz
add
push
mov
xchg
ret
add
je
add
inc
and
stc
nop
es
xchg
add
add
mov
xchg
ret
add
pop
pusha
add
xchg
dec
push
mov
xor
add
add
add
dec
add
call
mov
in
hlt
cmpsb
cmp
ror
pop
mov
cli
sub
lods
inc
mov
sbb
add
insl
stc
pop
ja
adc
mov
jg
fadds
mov
mov
das
out
fisubrl
ficompl
movb
movb
test
cld
je
and
es
sbbl
mov
rolb
stos
leave
mov
je
push
mov
xchg
arpl
jae
mov
inc
add
add
ljmp
leave
scas
or
xor
and
cmp
fcomps
test
push
les
lock
sarl
cmp
jg
icebp
lods
call
inc
add
and
xchg
jle
add
pushf
jne
leave
and
daa
mov
cmp
repz
out
or
add
mov
insl
push
mov
mov
clc
sub
add
or
pop
cs
add
mov
adc
and
cld
fnsave
xor
add
mov
inc
stos
testb
mov
ret
nop
jg
inc
add
and
inc
add
lods
dec
sbb
shlb
clc
movsb
repnz
sbb
pop
pop
push
add
lock
pop
jp
add
xor
mov
push
popf
inc
push
popa
fsubrl
test
add
add
add
outsl
xchg
dec
and
mov
jae
stos
jno
shlb
les
fldenv
std
pop
inc
push
mov
imul
or
push
pop
mov
push
add
fs
mov
xchg
aaa
outsb
lea
sbb
pusha
add
lret
idivl
cmp
mov
fcoms
cwtl
sahf
add
add
in
sbb
inc
add
inc
in
sub
jmp
scas
adc
add
notl
add
imul
cmpsl
test
cmpsl
test
loope
jle
rcrb
add
pusha
add
mov
jb
and
add
sbb
int3
out
sub
add
adc
cmp
xchg
push
sub
and
jle
add
sub
sub
xchg
mov
ret
mov
jle
lods
lret
jecxz
les
pop
xchg
in
push
xor
stos
pop
inc
push
dec
aas
jno
pop
jp
xor
inc
jnp
ret
ret
in
cmp
movsb
data16
aaa
adc
icebp
dec
xchg
in
into
xchg
dec
test
pop
lcall
fs
mov
add
in
or
jmp
das
inc
add
sti
push
out
es
clc
dec
lahf
xor
fcoml
mov
popf
push
mov
add
add
sahf
sub
rolb
repz
cmpl
cmp
or
adc
and
jmp
aaa
push
and
cli
pop
jg
lea
pusha
add
flds
jb
xor
cltd
int3
loopne
push
sub
int
movsl
clc
inc
add
inc
mov
out
cmp
xchg
xchg
iret
stos
fimuls
push
sub
push
leave
and
pop
mov
popa
fwait
mov
dec
mov
in
sbb
fstpl
inc
push
push
test
sub
hlt
add
mov
clc
ret
pusha
add
push
js
orl
sbb
add
pop
aas
loope
daa
inc
add
ficoml
or
cmc
movb
xor
loop
in
dec
push
and
xchg
in
stos
inc
add
cmp
clc
imul
pop
sbb
add
aad
popa
mov
icebp
ss
xchg
dec
dec
jnp
cltd
sbb
iret
add
cmp
jg
lock
sub
push
dec
push
add
xor
jb
or
push
mov
push
push
xchg
push
or
das
aas
lds
dec
sbb
testl
fstpt
add
pop
test
push
icebp
xor
inc
add
pop
roll
xchg
icebp
out
and
cmp
rolb
add
inc
aam
inc
add
rolb
imul
shl
movsb
mov
lret
bound
les
clc
mov
add
xchg
push
fsubr
arpl
xchg
sbb
add
pop
dec
xchg
or
movb
popa
int
inc
add
mov
clc
movsl
clc
pop
xor
cmc
dec
mov
push
fdiv
pusha
add
dec
mov
inc
add
mov
adc
dec
in
sbb
pop
fdiv
lock
pop
fnstenv
repnz
popf
faddl
mov
mov
xor
mov
push
iret
movsl
xchg
cmpsl
cltd
addr16
testb
jo
xor
out
mov
xor
mov
cmp
out
insb
ret
pop
or
xchg
fsubs
add
inc
add
xchg
inc
add
test
mov
sahf
xor
or
test
mov
in
test
push
or
imul
popf
and
and
xchg
add
dec
das
and
pop
lods
in
mov
aad
mov
cmc
dec
loope
add
dec
mov
ret
movb
pop
inc
add
bound
pop
xor
and
sbb
aas
decb
cmp
out
lcall
nop
cmp
roll
add
xchg
inc
add
mov
fdivs
mov
add
add
loope
push
gs
shlb
cltd
cmp
mov
out
pop
arpl
int
addb
movsl
mov
pop
jl
cmc
mov
add
lds
jae
sub
xor
rolb
xor
repnz
popf
push
in
lret
and
js
mov
xor
push
pop
lret
in
xchg
xchg
add
add
push
out
and
or
jo
sbb
dec
dec
xchg
xor
dec
jae
dec
cli
adc
ljmp
sub
sub
sub
push
sarb
iret
or
repz
xor
gs
cmc
push
stc
mov
shll
mov
mov
out
jge
push
ljmp
xor
xor
inc
add
dec
roll
cmp
lret
mov
std
leave
xchg
in
and
ljmp
sbb
adc
and
push
test
aas
push
push
test
in
flds
dec
lret
loopne
insb
inc
add
mov
jl
add
stos
dec
xor
adc
mov
or
imul
out
loop
mov
add
faddp
mov
dec
push
bound
dec
mov
add
jle
pushf
and
nop
lock
loop
xchg
ret
pop
dec
imull
add
sbb
in
inc
cmpl
les
clc
mov
mov
and
adc
mov
jmp
jb
mov
add
test
add
les
loope
push
add
imull
push
jmp
push
add
lock
int
push
add
mov
imul
add
add
shrl
mov
and
arpl
js
jle
fldcw
add
or
jg
aad
add
mov
aas
lret
outsl
sbb
mov
and
or
mov
fs
mov
cmc
int
call
or
movsb
sbb
data16
sbb
or
stos
fs
enter
mov
fldcw
imul
and
loope
test
iret
adc
jnp
stc
jae
pop
sbb
cmp
movb
les
mov
add
jno
dec
nop
lods
cmc
lcall
adc
into
xchg
mov
mov
adc
lea
loope
push
pop
stos
jl
sarl
add
mov
inc
add
jae
mov
fadd
add
push
mov
or
mov
dec
sbb
out
mov
sub
leave
inc
add
pop
jne
inc
add
add
aas
sbb
push
jo
sbb
std
lods
aaa
dec
inc
add
loop
test
push
fistpll
xchg
and
subl
lock
sub
ficomps
movb
add
paddw
mov
add
sbb
xlat
cmpsl
mov
jecxz
je
fisubl
movb
push
add
dec
idivb
jge
sub
sub
fcompl
jmp
push
movb
xchg
aad
sub
je
popa
or
jne
pop
xchg
les
dec
jb
jmp
fcmovnu
mov
pop
mov
es
clc
stos
loopne
aam
xorl
imul
cmc
shlb
add
dec
lods
dec
xchg
popf
mov
test
push
leave
push
aam
aad
fisubl
push
cld
movb
imul
pop
and
insl
jno
in
push
clc
inc
add
push
add
mov
add
add
push
sbb
xor
sbb
xchg
stos
xor
loop
repz
sub
pop
pop
cmpsb
xchg
jmp
mov
pop
dec
sub
mov
add
inc
add
rcl
sub
xchg
pop
or
jge
testl
cmpsl
mov
push
add
add
mov
lahf
addb
add
int3
loop
jnp
mov
inc
sub
loope
mov
paddq
out
jl
cmc
ret
pop
and
sub
push
dec
lcall
and
test
pop
fldt
call
add
sub
les
dec
das
adc
add
or
or
test
sahf
add
add
jg
jb
xor
push
inc
add
ret
xlat
pop
movsb
fwait
sub
add
mov
cld
les
xchg
xor
bound
lret
xchg
sahf
add
push
cmp
into
popf
cmpsl
mov
ret
inc
fbstp
add
movb
mov
lret
mov
add
outsb
mov
loop
mov
faddl
outsl
add
mov
test
sub
repnz
mov
jno
fstp
jecxz
adc
fdivs
mov
add
lods
sub
push
cli
lods
cmp
shr
mov
pop
or
push
addb
jle
movb
loopne
xchg
inc
add
jo
bound
out
adc
jns
lahf
pop
adc
mov
insb
ret
cli
lock
push
rolb
pop
add
and
test
pop
imull
icebp
mov
add
decl
adc
adc
push
cmp
inc
add
xchg
cmp
mov
mov
mov
cmpsl
fnstcw
cmpsb
sbb
mov
dec
add
pop
jnp
mov
mov
pop
out
and
xchg
sub
push
movsl
jge
xchg
dec
jb
inc
dec
das
xor
test
xor
pop
das
xorl
add
cmp
nop
in
ja
add
or
mov
add
icebp
js
dec
jae
add
fistl
sub
ljmp
or
pop
adc
clc
call
cmp
sbb
push
fstpt
icebp
xrelease
xchg
stos
es
adc
vxorps
xchg
push
push
dec
hlt
icebp
add
dec
dec
add
into
cli
scas
adc
mov
mov
pop
lea
cmpsb
test
push
add
mov
orl
fadds
inc
and
repnz
dec
mov
cld
mov
movsl
fistpl
out
cltd
testb
xchg
out
sub
inc
sbbl
dec
pop
xadd
cmp
and
mov
dec
mov
rcrb
loop
and
adc
dec
lds
imul
shll
shrl
movsl
in
pop
stc
mov
jg
mov
rolb
call
xchg
or
xor
push
add
xor
mov
sbb
mov
cwtl
inc
add
fwait
sbb
mov
mulb
cmp
mov
xchg
inc
add
insb
in
add
or
mov
rolb
je
ss
outsb
dec
fsubrp
pop
les
loop
mov
ss
add
iret
inc
lret
mov
inc
mov
cmp
pop
out
stos
mov
pop
iret
cmp
dec
inc
add
mov
add
cli
movb
cmp
ja
or
pusha
add
imul
dec
sub
fistpll
jnp
adc
sub
or
loop
add
mov
sbb
jnp
push
scas
and
or
mov
add
pusha
add
pop
push
repz
mov
pop
in
push
push
ficoms
cmpsl
hlt
jle
push
std
mov
add
cltd
add
repnz
add
lret
cmovs
dec
xchg
scas
fs
mov
add
bound
out
ja
aaa
jecxz
dec
mov
jmp
mov
cmpsb
sbb
add
or
xchg
rolb
or
call
mov
adc
loop
mov
cmp
jmp
adcl
add
addb
pushf
sbb
and
add
dec
addb
rorl
addr16
imulb
fsts
lret
das
mov
into
lret
nop
pop
fistps
scas
pushf
fidivrl
push
fcmovne
in
add
fcomi
sbb
xorl
pop
jecxz
cld
movsl
push
jge
jmp
jp
in
mov
adc
dec
xor
cli
aaa
scas
and
rep
loopne
stos
sub
cmp
jle
mov
call
aas
lods
dec
iret
xchg
xchg
lods
inc
nop
daa
lcall
mov
aaa
adc
jle
daa
jg
movb
sbb
mov
lock
add
lods
bound
or
inc
pop
cmp
outsl
pop
ret
and
pop
mov
call
add
test
inc
add
mov
insl
jp
loop
add
push
adc
lds
add
add
insl
dec
jmp
jmp
bound
push
xchg
repz
cmp
xor
push
pop
repz
dec
in
shll
xchg
sbb
or
out
addb
movsl
int3
lods
sub
stos
jp
dec
je
adc
syscall
addb
push
movb
stc
movsb
inc
loope
enter
and
in
mov
sub
out
mov
jnp
cwtl
mov
push
add
repz
xor
test
loop
out
or
add
sbb
addr16
push
scas
mov
add
jmp
in
test
mov
push
or
int
cld
mov
mov
add
mov
out
add
sbb
sbb
subl
push
adc
add
mov
add
inc
add
cmp
cmp
test
inc
sbb
popa
test
and
push
into
push
inc
inc
call
xlat
inc
xchg
bound
push
jge
fidivrs
ja
sub
js
loop
mov
repnz
add
fsubs
xor
cs
sub
fs
xor
add
dec
packssdw
stc
push
fs
inc
mov
add
jmp
dec
pop
mov
ret
add
xchg
cmp
sub
adc
xchg
mov
adc
jae
xchg
gs
popa
imull
cld
inc
add
add
pop
cmp
dec
les
scas
sub
aad
pop
clc
in
sbb
mov
mov
add
hlt
adc
mov
cmp
add
mov
dec
inc
add
add
icebp
cld
jo
or
lahf
and
cli
push
ret
dec
into
and
or
scas
push
sahf
push
cwtl
push
sbb
push
rcrb
jnp
sub
sbb
out
add
movsb
adc
cld
xor
fisubs
push
adc
cmp
push
pop
and
addr16
add
les
mov
aas
sub
sub
mov
pcmpgtw
push
lea
add
inc
add
test
dec
or
dec
and
out
pop
sub
fisttpll
loop
fwait
mov
add
add
mov
jecxz
and
nop
pop
or
ljmp
cmp
or
or
fwait
push
add
cmpsl
filds
add
cmp
sub
xchg
cmovo
popf
cs
ja
inc
add
leave
and
or
mov
pop
stos
inc
and
outsb
jo
jbe,pn
push
movb
icebp
sub
mov
add
jecxz
fistl
das
int3
pop
fnstcw
std
call
shrl
stos
sbb
mov
sub
sti
inc
movsb
repz
xor
add
aaa
outsl
test
push
lret
fwait
mov
or
pop
inc
add
lock
push
or
js
mov
out
cmp
rcrb
mov
test
jp
ja
xchg
sub
cltd
cmp
mov
mov
jbe
mov
push
test
mov
add
outsb
ja
push
push
add
add
imul
jp
pusha
add
push
mov
fsubs
test
por
push
sbb
leave
loope
loope
inc
jns
into
sub
pusha
add
sarl
jle
add
push
mov
mov
lods
mov
outsb
lock
or
fisttps
test
repnz
or
cwtl
mov
push
add
or
testb
sbb
add
insl
jp
loope
or
and
push
cld
cmp
mov
and
mov
lods
cmp
dec
cmp
add
jno
add
je
sbb
xchg
and
jo
or
xlat
inc
add
inc
add
jge
xchg
dec
xlat
insl
jb
stc
idivb
mov
pop
insb
and
dec
push
add
and
iret
mov
jle
nop
shld
ljmp
fdivr
cs
xchg
cmpsl
mov
push
in
leave
fcomps
in
xchg
or
xor
jmp
jo
adc
jo
mov
xchg
mov
repz
sbb
jo
lea
xor
loopne
xlat
or
sbb
jmp
add
sbb
add
mov
or
xchg
jns
iret
jl
clc
pop
add
mov
jne
ljmp
fmuls
sti
ss
inc
das
rolb
add
je
adc
xor
add
outsl
cld
adc
push
push
adc
popa
cmp
rolb
cltd
cwtl
ret
test
xchg
mov
add
sub
lcall
repz
mov
dec
add
add
push
add
into
test
jne
add
pop
jecxz
cmpsb
out
push
inc
in
adc
rolb
jmp
rolb
fidivrl
aaa
and
sub
fsub
lret
push
add
je
adc
add
dec
and
add
adc
add
test
dec
mov
mov
pop
test
mov
or
sub
jbe
aaa
or
push
mov
jae
push
ljmp
mov
fwait
adc
pop
xor
pop
les
xchg
or
mov
iret
call
cld
movsl
sti
rcr
lock
mov
push
jno
rclb
inc
add
jnp
xchg
adc
stos
fs
add
cmpsl
pop
push
mov
hlt
xchg
das
imul
in
pop
lcall
fwait
dec
pop
gs
sub
inc
fidivs
inc
add
aam
outsl
mov
sbb
add
or
adc
popa
sbb
loop
jns
popf
xchg
das
xor
lea
in
sti
mov
fldcw
push
popa
arpl
mov
xor
jae
fdivrl
add
inc
scas
lret
dec
inc
add
lods
add
xchg
or
mov
xor
std
fcomps
cmpsb
in
stos
or
ljmp
mov
mov
add
or
rclb
loopne
dec
insl
jnp
dec
addb
in
fadd
add
jns
push
cmp
repnz
add
mov
push
pop
test
add
outsb
mov
add
xchg
mov
push
lret
dec
xor
insb
xor
xor
mov
jo
popa
jo
cmp
add
mov
stos
and
xchg
ret
pop
fisttpll
sbb
xchg
push
test
adc
sub
addr16
jl
fists
xor
test
fmuls
inc
outsb
jbe
dec
jmp
add
xchg
ja
stos
jecxz
and
popf
mov
lret
rcrb
clc
fdivl
aas
aas
ja
xor
pop
cli
addb
and
daa
lret
and
mull
lahf
xor
sub
enter
repz
inc
inc
add
dec
in
jns
cwtl
sbb
sub
stc
cltd
mov
into
and
push
icebp
add
dec
data16
push
jg
pop
lcall
sbb
or
inc
jno
lahf
rol
das
xchg
or
enter
adc
test
mov
or
out
and
fwait
sbb
mov
mov
cmp
xchg
lcall
pop
sbb
sub
cmp
xor
icebp
scas
jne
push
dec
dec
iret
jle
cld
cmp
bound
fistps
add
arpl
js
sub
test
sub
pushf
lds
pop
scas
movsl
jns
movb
pop
test
jae
xchg
fmull
push
add
mov
dec
or
xchg
aas
jae
mov
mov
pop
sahf
lret
mov
mov
push
std
outsb
mov
insb
pop
xor
mov
mov
movb
fisubrl
rolb
cmp
sub
jns
rolb
sbb
cmc
mov
pop
cwtl
xor
ja
aas
in
or
cld
sbb
pushf
mov
push
xchg
sarl
xchg
mov
dec
mov
movsl
jne
movsl
jle
insb
xchg
xchg
sub
and
clc
push
addb
scas
add
sub
out
push
imul
add
fsubrl
cltd
mov
loopne
add
lret
adc
adc
xlat
push
int3
out
cmp
addb
nop
sbb
adc
ret
mov
cmp
hlt
jmp
movb
jno
xlat
stos
cmp
jns
push
mov
mov
add
jb
add
xor
gs
ret
loope
add
jmp
xchg
mov
add
add
xor
sub
pusha
add
icebp
and
sub
jecxz,pn
in
mov
jmp
into
addb
sub
pop
in
inc
int
xor
pop
mov
sahf
mov
xchg
mov
or
or
mov
ljmp
sbb
push
cs
add
outsl
xchg
xchg
sti
adc
gs
aaa
mov
add
test
sahf
in
aaa
adc
xor
fsubrl
dec
dec
test
lahf
into
jne
jp
xor
or
fdivrl
add
outsb
insb
and
push
incl
add
add
push
mov
push
jecxz
inc
add
imul
and
lret
pop
mov
int
out
cld
add
adc
test
insl
dec
jmp
or
push
out
out
dec
mov
push
inc
addl
xlat
lds
inc
mov
movsb
sub
or
mov
outsb
hlt
js
xchg
pushf
jge
scas
jnp
mov
out
lret
add
jecxz
inc
lahf
or
outsb
xor
popf
jg
int
jmp
leave
xchg
cmp
dec
mov
lods
out
mov
ret
jno
mov
jnp
and
and
fidivrl
jae
lahf
cmp
push
inc
add
ret
pop
cmp
aaa
into
vandps
imul
add
scas
in
call
mov
ret
aaa
xor
fimuls
add
sbb
add
sub
push
movsl
js
add
insb
push
push
aaa
xchg
push
loop
insl
cmp
mov
loope
push
pop
lahf
nop
mov
xor
xchg
mov
pavgb
mov
or
mov
add
add
addb
inc
add
imul
xchg
icebp
add
and
pop
sti
lret
ret
test
addb
sbb
xchg
mov
add
add
xor
inc
add
ss
cwtl
into
mov
hlt
pop
roll
fs
jge
jo
lods
adc
add
imul
nop
stc
loop
rolb
fs
push
inc
in
sbb
loopne
mov
int
insb
fldcw
xchg
clc
mov
xchg
sbb
pop
ljmp
loope
shrl
das
xor
aad
mov
aam
adc
add
pop
dec
push
add
ja
and
insb
aad
pop
xchg
push
jo
and
lret
lahf
cs
les
push
add
clc
rcr
jns
xor
out
ror
cmp
add
rcrl
in
and
adc
jb
fbld
add
leave
xchg
mov
out
lcall
lret
sahf
in
and
adc
sub
mov
fcmovnb
mov
cwtl
lea
mov
inc
pop
cmp
lea
add
cld
add
cmp
add
or
cmp
pop
rcr
ret
lds
dec
das
jbe
jo
iret
pop
xchg
sti
mov
ret
adc
or
xor
mov
cmp
add
jmp
inc
test
fistpll
je
jl
and
out
add
repnz
add
cmp
lret
int
push
adc
sbb
sbb
add
ja
shrl
inc
push
sbb
mov
sbb
inc
add
fdivr
popf
dec
xor
add
push
addb
jmp
test
cmp
xor
adc
movsl
pushf
outsl
or
mov
cld
sub
jle
inc
add
iret
add
add
jns
orl
incl
dec
test
adc
sbb
outsl
or
adc
and
mov
add
outsl
loop
xchg
or
bound
mov
mov
fiadds
dec
dec
ljmp
dec
xchg
sbb
inc
mov
xchg
push
mov
add
cmp
sar
test
fcomi
inc
add
popf
xchg
sub
jmp
fcompl
xchg
jg
dec
sub
ret
loopne
inc
add
add
rcl
add
push
iret
push
push
add
lods
dec
or
mov
inc
imul
icebp
lret
aaa
pop
in
sbb
je
mov
lea
imulb
loope
push
lcall
and
aas
mov
and
adc
addb
cmp
mov
call
adc
add
sbbl
add
pop
jae
repz
xor
stc
push
adc
sub
or
add
fisubl
adc
aaa
adc
xor
mov
idiv
adc
add
mov
xor
add
mov
add
xchg
iret
adc
jl
adc
add
sub
jne
jne
fwait
pop
clc
int3
insl
stos
iret
data16
push
movsb
jecxz
nop
sbb
aam
iret
aaa
sbb
add
bound
inc
add
ja
imul
repnz
ret
inc
movsl
cmpsl
mov
sbb
int
xor
paddsb
xor
nop
ss
shrl
in
mov
add
cld
xchg
mov
pusha
add
in
pop
pop
cmc
mov
lret
push
mov
xchg
add
in
adc
push
lods
mov
fidivrs
loope
mov
daa
pop
or
pop
push
ss
dec
int
add
mov
int
test
inc
xor
pop
addb
out
jo
xor
inc
push
mov
arpl
cmpsb
pop
mov
aam
inc
sbb
fsubrl
pop
pusha
add
popf
shlb
push
inc
int
out
shl
add
nop
lods
push
mov
add
ds
xchg
and
loopne
cmp
inc
add
aas
mov
inc
add
jmp
and
jae
mov
or
xor
icebp
les
cmpsb
push
test
lds
mov
mov
push
cmpsl
scas
adc
jno
dec
mov
fidivrs
lret
xor
sbb
pop
js
inc
inc
add
es
jnp
add
repnz
nop
lods
popa
xchg
jle
or
adc
cmp
movb
push
imul
and
lret
push
scas
xor
mov
push
ja
pop
jg
lods
xchg
fucom
outsb
insl
test
xchg
xchg
cmp
pop
nop
mov
push
addb
add
push
jge
push
jg
add
in
mov
lds
inc
ja
loop
jnp
pusha
add
sub
imul
repnz
movsb
fists
loopne
or
jno
movsl
and
jbe
push
add
jne
dec
mov
add
sbb
add
cltd
lcall
push
pop
lock
push
aam
and
shrb
das
ret
dec
pop
iret
imul
xchg
jns
and
mov
test
outsl
sbb
mov
add
in
add
in
xor
in
cld
add
sub
dec
mov
jne
jbe
inc
add
sbbl
ja
or
add
or
scas
push
xchg
jl
xor
xor
xor
loop
lods
push
jl
das
and
mov
inc
jle
add
dec
loop
mov
call
cld
lahf
insl
mov
movsb
mov
add
out
push
pop
bound
jecxz
jbe
fsubs
ds
jge
sub
mov
add
add
loop
push
sti
scas
sarb
fiaddl
fmuls
push
jae
das
xor
push
cmp
xor
adc
ja
js
shrl
xchg
daa
and
cmp
iret
insb
adc
or
bound
lock
mov
popf
sbb
stos
out
xor
out
dec
aad
out
cli
mov
out
add
xlat
dec
fsub
sbb
jge
cmp
faddl
pop
sub
add
mov
sub
fsubs
ret
mov
mov
icebp
xlat
mov
outsl
adc
inc
add
test
addb
jg
es
pusha
add
addb
movsb
cmp
add
pop
aad
xchg
sahf
sbb
out
push
aaa
mov
fwait
mov
stc
push
inc
add
add
lcall
inc
cs
fnstsw
jmp
pop
into
hlt
adc
mov
sbb
mov
sar
dec
push
mov
pop
cmp
int3
jmp
lcall
addb
shrb
sti
aad
mov
add
cmpsb
neg
ret
cmpsb
pop
jne
jmp
addb
cmc
bound
inc
add
sbb
stc
bound
xchg
pop
rolb
scas
cwtl
in
inc
jo
adc
jb
adc
addr16
jbe
les
loopne
cmpsl
insl
jg
dec
call
dec
cmp
add
mov
dec
jne
mov
scas
push
imul
xchg
push
or
xchg
stos
adc
push
add
pusha
add
notl
adc
bound
filds
cs
pop
adc
push
inc
add
add
lock
add
pop
mov
lods
jbe
add
xchg
sahf
icebp
cmpsl
movsb
sub
loopne
jmp
popa
imul
xchg
jb
and
insb
jnp
notl
mov
nop
int
xchg
jg
addb
inc
cmp
outsl
push
test
or
cmp
iret
dec
xchg
movl
hlt
out
sbb
out
rolb
call
adc
clc
mov
add
mov
fdivrl
fcmovbe
mov
xchg
push
aas
in
gs
mov
xor
dec
pop
sti
xchg
int3
int
je
enter
into
dec
push
mov
int3
ret
sub
sbb
inc
mov
mov
mov
gs
jae
mov
jmp
push
jno
ds
pop
adc
cli
pop
push
sbb
add
add
cli
ror
inc
in
inc
add
outsl
mov
loope
std
sub
add
lock
shll
mov
stc
inc
add
jns
sbb
and
sti
dec
or
mov
aaa
push
movsb
xor
xchg
ds
pop
cmp
push
loop
jne
push
mov
ja
in
push
cmp
cmc
mov
pop
push
pop
enter
jge
add
jl
sbb
jecxz
pop
sbb
xor
gs
cld
fwait
xchg
aad
and
sbb
and
cmp
jnp
add
adc
dec
mov
add
faddl
add
push
xor
add
clc
sub
pop
mov
gs
xlat
mov
sahf
jecxz
rorl
adc
inc
add
dec
sbb
add
jno
sbb
add
add
mov
lea
add
and
sub
sbb
cs
push
divb
lods
cmpsl
loopne
adc
fildl
fstpl
mov
or
mov
pop
and
pop
jmp
and
ljmp
int
push
inc
add
add
or
movsb
mov
xor
dec
scas
test
notb
adc
jae
movsb
rcrb
lock
imul
pop
adc
mov
push
in
cmp
pop
mov
adc
xor
inc
pop
fwait
xchg
aas
jmp
outsl
push
add
xor
mov
add
rcrb
daa
inc
pop
fcmovne
pop
mov
sub
lret
cli
jle
bound
dec
jns
push
pop
inc
add
inc
add
cltd
cmp
pop
sti
mov
xchg
movsl
sub
out
push
test
add
sbb
jecxz
call
xlat
scas
stc
arpl
mov
into
push
mov
add
cmpsl
and
test
out
adc
and
inc
add
xor
scas
inc
add
add
cmp
xchg
test
mov
push
xchg
mov
dec
iret
push
add
adc
in
push
insb
cmp
push
pop
addb
mov
dec
loopne
leave
fdivrs
fcmovb
add
pusha
add
sbb
add
rorl
and
or
pop
sub
rol
icebp
repnz
test
ret
rcl
jmp
xchg
rcrl
pop
enter
add
dec
xchg
ret
mov
cmp
add
mov
push
int
or
add
cli
inc
add
in
fiaddl
enter
pop
xor
fdivp
mov
aas
sbb
fistl
inc
mov
jge
mov
fwait
test
mov
fxch
les
or
js
sar
dec
cltd
xchg
arpl
pop
mov
push
addb
ja
mov
jno
cli
lret
push
jmp
mov
xchg
pop
jle
in
into
sub
and
push
add
sub
or
jmp
jne
rol
add
cmp
enter
das
pop
out
push
jbe
nop
daa
out
push
jg
adc
sub
data16
add
sub
sbb
pop
fcom
push
xor
cmpsl
pop
inc
add
lret
cmp
cmp
mov
in
sbb
insb
sarl
pop
cld
pop
loope
insb
jns
jnp
pop
jae
mov
mov
ret
xchg
mov
push
cmp
dec
jl
xchg
mov
dec
xor
cmp
jmp
sbb
in
jae
push
cmp
push
adc
mov
xchg
sbb
fildl
add
xchg
dec
mov
add
cltd
icebp
xor
xchg
stos
adc
add
stos
push
repnz
mov
mov
add
cmp
jo
pop
sarl
sub
int3
jp
call
add
leave
je
mov
pusha
add
push
lcall
and
stos
and
lret
adc
or
and
shl
pop
mov
xor
lods
into
hlt
pop
add
jmp
out
cmpsb
mov
sub
inc
out
adc
xchg
cltd
call
mov
mov
xor
push
scas
mov
sahf
dec
add
inc
js
cltd
pop
enter
dec
sbb
adc
cmp
add
mov
xchg
mov
sub
adc
sti
clc
fldcw
jl
hlt
push
loope
negl
enter
out
loop
add
ret
mov
jne
xor
rcr
or
cmp
push
jl
outsb
addb
or
nop
add
mov
push
lods
push
lahf
lret
dec
fucomip
imul
or
mov
addb
call
jl
add
add
mov
push
jp
dec
jnp
dec
dec
cmp
jbe
imul
imul
ret
jg
jmp
xchg
dec
loopne
addb
mov
sub
inc
add
jmp
pop
in
sub
scas
mov
incb
int3
test
addb
cmp
arpl
xchg
or
int3
push
int3
mov
loop
pop
loop
cs
iret
loopne
add
lcall
movb
add
movsl
xchg
cld
fprem
test
push
popa
js
mov
mov
sbb
insb
out
dec
dec
mov
or
jno
scas
std
nop
je
add
lcall
inc
add
lea
add
mov
sbb
or
imul
sbb
js
bswap
xchg
sub
or
mov
add
pop
int3
sahf
sbb
jp
mov
test
in
rclb
xor
in
rcr
lock
imul
jmp
movsb
popf
push
jnp
out
outsb
jno
scas
mov
jo
add
mov
cmp
xlat
ds
addb
add
shrl
aaa
lds
out
inc
xchg
out
add
xor
addb
incb
or
pusha
add
push
in
stos
cs
fmulp
sub
xor
jbe
rcr
xor
xor
or
dec
adc
jns
cltd
xchg
pop
lret
ja
fists
inc
add
mov
aad
xor
das
jge
xor
or
add
add
enter
sub
sbb
cmp
add
data16
xor
int3
data16
fsubs
inc
add
or
aas
popf
mov
jge
mov
repz
sub
or
cli
push
add
sbb
xchg
cmc
xchg
sbb
lods
shl
shr
jmp
adc
add
and
xor
xor
es
mov
or
mov
xor
jecxz
or
popa
cmp
adc
lea
mov
int
cmp
cltd
cld
stc
dec
arpl
mov
aaa
dec
mov
add
pop
stos
sbb
lods
jecxz
or
call
or
jge
movb
inc
add
push
jae
movsl
js
fwait
push
arpl
mov
addb
and
push
jbe
add
cmp
xlat
mov
addb
cmp
daa
clc
pop
mov
scas
xor
mov
and
jno
testl
add
insl
inc
add
push
mov
mov
add
cltd
mov
add
add
sub
in
in
cs
mov
sbbl
or
in
ficoml
inc
or
std
stos
pop
loop
push
mul
mov
ljmp
inc
pop
rolb
hlt
push
and
popf
test
es
out
sub
ret
out
leave
mov
addb
sub
cwtl
push
fsubs
adc
xchg
inc
add
inc
sar
das
jle
mull
sub
or
or
mov
sub
add
mov
push
mov
cmp
btr
idivb
pop
clc
inc
repnz
add
insl
cmpsb
ja
adc
lea
add
xor
std
mov
mov
push
push
stos
ret
bound
xchg
lods
inc
add
jns
loope
pop
add
push
add
shll
inc
add
dec
add
pop
ret
stos
ljmp
test
push
mov
fildl
add
rcl
sbb
add
cltd
pop
ljmp
stc
popf
cmpsl
add
add
test
out
mov
push
add
addl
mov
mov
addr16
out
stos
nop
fildl
xchg
dec
dec
test
push
mov
jae
das
loopne
sbbl
mov
imul
xchg
and
sub
jns
cs
add
xchg
pop
in
sub
mov
call
sbb
scas
sti
mov
rolb
arpl
mov
jno
add
rolb
icebp
out
sbb
sbb
addr16
add
mov
leave
lods
push
loope
ss
fmuls
add
in
aad
cmp
aad
jge
cmp
xchg
inc
adc
xor
sub
push
or
xchg
shll
test
imul
sub
jge
icebp
jo
sbbl
or
add
stc
clc
cld
push
adc
mov
sbb
dec
dec
push
sbb
mov
nop
mov
pop
ret
mov
dec
popf
sub
add
test
push
inc
sarl
pop
jecxz
rcll
sub
add
das
stos
std
stos
movsb
dec
jno
inc
outsl
in
fdivrs
mov
adc
jmp
dec
pop
out
add
aaa
lret
and
lds
mov
cmpsl
xchg
addb
jnp
dec
pusha
add
sub
arpl
and
jno
cmpl
mov
push
scas
mov
xor
add
add
add
clc
imul
scas
cmp
and
in
jmp
imul
repz
xor
movsl
xor
lock
sub
fmull
ret
add
cli
lea
inc
push
cli
inc
xchg
sub
push
or
ja
lods
cmp
or
push
pop
dec
stos
lds
test
push
les
ja
push
jp
fwait
mov
in
loop
addb
sub
movb
pop
jae
mov
jno
push
sbb
mov
aam
adc
mov
out
daa
mov
out
filds
add
and
sbb
popf
jns
add
mov
inc
add
std
mul
cmpsl
jp
shlb
push
adc
xlat
push
inc
add
mov
enter
add
cmp
mov
add
jmp
bound
mov
xor
add
push
cs
xchg
mov
xchg
cwtl
inc
pop
mov
push
mov
jo
xchg
lea
loop
add
add
sub
add
lret
sub
cmp
mov
xchg
or
add
mov
leave
in
and
and
stos
push
and
stc
mov
sbb
dec
lahf
test
dec
mov
mov
xor
mov
add
ljmp
lea
js
jae
inc
add
lock
sub
inc
add
mov
les
in
fldt
inc
add
inc
add
scas
cli
or
test
xchg
ret
add
mov
adc
js
fimuls
push
mov
cmp
loope
nop
lret
xchg
psraw
ret
cmp
gs
jbe
pop
mov
nop
sarb
pop
iret
and
or
test
add
add
dec
cmp
in
jmp
add
jnp
sub
clc
in
pop
stc
xor
ror
leave
mov
mov
add
ss
dec
dec
sub
add
cli
addr16
sti
mov
push
pop
xor
outsl
xor
sub
in
insb
stos
pushf
stos
cmp
mov
mov
stc
xchg
cmc
mov
cmp
sub
imul
insl
push
sti
imull
and
xchg
fs
push
js
test
xchg
scas
pop
push
add
call
mov
ljmp
popf
lret
mov
rclb
add
jp
pop
dec
push
test
fdivr
pop
stos
cmc
test
ret
out
mov
jne
add
and
xchg
jmp
add
ja
lods
cmpsl
int
add
clc
mov
rolb
out
jnp
stc
sti
dec
mov
test
out
lcall
xchg
popf
cmp
sub
and
mov
cld
xacquire
and
cmp
mov
outsl
or
or
jbe
fs
inc
pop
lahf
popa
or
inc
add
je
sub
iret
lods
movsl
dec
js
fs
push
push
mov
les
fisubl
test
dec
dec
repnz
dec
jge
insb
mov
mov
xor
xor
nop
int
ret
outsl
cmp
std
add
add
jecxz
push
xchg
add
add
ret
mov
dec
pop
out
movsb
lcall
shlb
jl
lret
fwait
arpl
pop
xor
scas
std
pop
xchg
mov
lret
fmulp
in
pushf
jae
or
add
and
mov
filds
aaa
jne
pop
rolb
outsl
pop
lret
sbb
cltd
jmp
mov
push
shll
call
add
test
mov
cmp
lret
xor
add
add
push
add
add
fldcw
pop
xchg
xchg
cli
sbb
lds
stc
sbb
lea
fs
xor
xchg
das
sbb
fdiv
les
rcr
xchg
dec
jmp
mov
lcall
lods
adc
sub
mov
insb
jecxz
add
sbb
pushl
popa
scas
cs
loop
mov
fs
jb
addr16
jge
mov
negb
lcall
das
xchg
xor
cmpsb
xor
rol
jns,pn
cmp
imul
out
inc
scas
addb
bound
mov
add
imul
into
lcall
addb
cmp
repnz
icebp
fistpll
out
leave
xchg
aas
mov
push
dec
js
pushf
stos
int3
sbb
cmp
les
jno
movsb
test
adc
pop
test
inc
xchg
clc
inc
add
add
out
mov
xchg
and
lds
popa
xchg
aam
sbb
ds
jns
shrd
mov
push
add
cs
movsl
mov
or
pop
mov
mov
sti
xor
add
push
jno
icebp
sub
adc
add
or
adc
add
fsts
dec
idiv
mov
jmp
pop
cmp
mov
ret
out
rcll
mov
or
and
jl
in
push
mov
add
scas
sbb
lea
loopne
stos
dec
cli
mov
int
ja
or
mov
add
mov
jp
dec
fmulp
push
jb
aaa
jp
add
sbb
dec
test
add
pop
imul
add
jge
aam
dec
mov
push
sub
loopne
xchg
mov
pop
ds
les
lods
pop
push
or
jl
data16
xlat
cmp
int3
xchg
mov
jo
adc
mov
clc
push
stos
les
lcall
add
jb
loope
jle
dec
mov
push
add
adc
pop
out
sbb
sub
lret
fucomip
ss
xchg
cmp
inc
and
pop
das
pop
loopne
push
mov
addb
push
sti
cmp
sub
sbb
mov
mov
jne
add
jl
add
stos
mov
or
mov
ficoms
add
push
push
scas
sbb
push
push
mov
push
push
dec
test
aam
xor
out
rolb
xchg
add
add
movsb
fwait
pop
fidivrl
cmpsb
cmp
jbe
fcmovb
add
xor
mov
pop
cmp
pushf
int3
cmp
push
mov
and
xor
mov
add
cmp
add
cwtl
cmp
mov
mov
add
fiadds
inc
add
stos
cmp
test
popf
jo
mov
test
fstps
jno
std
call
sbb
add
dec
aaa
and
sbbl
adc
xchg
lods
push
lea
add
xchg
scas
mov
add
mov
mov
dec
adc
imul
push
sub
add
jbe
push
sub
jno
mov
test
xchg
inc
mov
arpl
xchg
scas
mov
insb
mov
cmpsb
xlat
inc
jp
xor
pushf
in
les
inc
mov
mov
test
pushf
inc
add
inc
add
loopne
sbb
push
icebp
data16
out
sbb
aad
aas
frstor
lret
mov
add
cmp
mov
cmp
or
pop
outsb
fidivrl
mov
sbb
add
xor
subl
lods
movsl
xor
sub
jg
lds
add
xchg
loopne
jno
fwait
pop
enter
mov
sarb
imul
dec
pushf
mov
or
jne
sub
cs
mov
xorl
inc
movb
mov
pop
cli
pop
mov
scas
pop
jp
rolb
inc
add
mov
xor
dec
movsb
mov
sqrtps
add
andl
mov
add
dec
fs
and
scas
fsubs
pop
loop
fnsave
lods
mov
std
xchg
stos
inc
jne
insb
jb
insb
add
repz
imul
fldenv
je
or
jno
lret
pop
sub
lods
inc
add
es
testl
xchg
add
inc
add
ljmp
add
aaa
jg
dec
xor
xor
inc
inc
add
out
mov
mov
fldcw
aas
mov
pop
imul
mov
out
push
hlt
push
fadd
add
xchg
cmpsb
stc
cmp
mov
xchg
js
lahf
cld
je
ja
ds
jbe
out
scas
enter
pop
push
lods
movsb
mov
outsl
or
cmpsl
jno
mov
push
sub
jecxz
mov
xchg
test
movb
add
dec
iret
loopne
sbb
add
xchg
adc
add
add
cmp
add
sbbl
add
lcall
aam
out
lcall
popl
aaa
mov
or
push
fwait
cmpsb
inc
add
mov
movsl
pop
jbe
and
insl
pop
stos
fsubrs
add
or
add
fs
mov
cmpsb
jnp
and
ja
addb
add
sub
inc
mov
mov
mov
cmpsb
stos
mov
pop
das
loop
push
lret
lods
mov
hlt
call
jmp
sub
popf
cmp
scas
mov
mov
dec
dec
aad
ret
add
push
sbb
add
inc
aad
add
push
jns
sub
and
insl
lea
pusha
add
and
push
adcl
stos
out
mul
shlb
imull
cmp
add
mov
mov
sbb
ljmp
in
orl
int3
dec
enter
aas
xor
sub
cs
or
incl
sbb
sub
adc
mov
movsb
push
xor
jnp
xchg
cwtl
cmc
popa
test
mov
add
add
jns
or
repnz
vshufpd
mov
xor
add
les
loope
sub
sbb
sub
mov
pop
and
imul
mov
mov
push
push
jne
fistpll
mov
out
mov
mov
test
mov
mov
loop
loop
jmp
mov
nop
ljmp
cmp
lock
push
pop
mov
jmp
push
jmp
dec
rcll
movsb
test
add
sub
fistps
shll
dec
inc
add
xor
and
icebp
fsubrp
ret
movsb
fwait
arpl
pop
outsb
fldcw
test
cli
les
mov
jg
repnz
sub
and
aam
add
lcall
js
lcall
fdivrs
add
das
cmpsl
sbb
aas
pushf
dec
inc
mov
shlb
inc
aaa
or
les
nop
popf
adc
leave
repz
add
xchg
fdivr
inc
cmpsb
arpl
lret
lcall
rolb
mov
add
cmp
pop
and
lcall
notl
inc
insb
or
les
ja
add
fisttpl
xchg
adc
movb
shrl
inc
add
jae
or
inc
add
pop
push
and
dec
je
out
nop
loopne
or
test
xchg
fiaddl
cmp
add
mov
ret
pop
push
mov
sti
outsl
idivb
movsl
nop
into
jns
sbb
test
repnz
inc
add
cmp
rolb
mov
xor
pop
inc
es
sbb
mov
lods
inc
mov
adc
pushf
push
das
popf
add
cmp
shrl
jns
je
mov
adc
add
add
mov
in
iret
and
cmp
mov
inc
loop
lcall
jns
dec
add
xor
or
jno
lcall
pop
dec
loope
loop
sahf
pop
cwtl
sahf
out
jle
push
testl
jo
dec
fadd
sub
inc
add
fdivrl
mov
jp
adcl
inc
add
addb
dec
cltd
cmpsb
dec
leave
pop
fwait
addb
add
xchg
mov
add
and
xchg
and
and
add
adc
jecxz
shrb
add
push
push
mov
lods
rcl
sti
push
sbb
add
push
inc
popf
decb
out
rolb
add
stc
and
aaa
in
inc
add
and
in
lcall
sbb
xlat
cmpsl
xchg
enter
lret
test
cld
xchg
lret
aad
aad
movsb
out
jmp
repz
lods
push
push
add
std
lods
mov
div
sub
xor
lcall
into
test
and
les
imul
test
lods
lcall
xor
out
mov
fisttpl
mov
es
testl
add
rolb
imul
enter
sahf
mov
or
cli
out
fildl
add
leave
mov
cmp
sub
iret
in
push
shll
or
pop
js
sbb
adc
lods
es
imul
jne
lea
rclb
flds
sbb
mov
add
jl
mov
int3
and
pop
out
mov
movsb
int
pop
mov
icebp
cmpsl
mov
fsubrl
insl
fadds
add
rorb
out
jmp
add
xlat
movsl
lods
push
dec
push
nop
loop
incb
mov
push
in
or
or
jo
add
jo
cmpsb
out
repz
les
test
jle
mov
sti
call
outsl
jle
sub
icebp
in
push
pop
loope
inc
add
cmpl
dec
adc
cld
loop
add
sbb
insl
dec
xor
ret
add
repnz
out
push
jbe
inc
pop
pop
addb
hlt
mov
pop
in
out
insl
adc
xor
fidivs
out
idivb
or
add
push
mov
loope
jg
add
cltd
in
cmc
and
shll
lret
outsl
cld
adc
loope
add
rcr
cmp
adc
mov
cmp
jp
imul
enter
mov
or
add
mov
mull
add
pop
aaa
sub
add
mov
or
clc
loope
xchg
adc
outsb
pop
add
dec
imull
bound
movb
into
outsb
push
jmp
cmpsl
lods
pop
cli
out
adc
mov
leave
outsl
lods
inc
add
mov
bound
adc
mov
xrstor
dec
movsb
mov
lods
out
add
adc
inc
add
shlb
maskmovq
divl
jecxz
push
push
fs
ljmp
repz
and
lods
cltd
xchg
and
int3
popf
xchg
sub
inc
sbb
lds
push
popa
jae
add
in
addb
push
mov
divb
and
scas
mov
add
add
or
mov
fistl
loopne
jle
lret
xor
add
popf
addb
xchg
pusha
add
sub
xchg
popf
and
xor
push
jns
and
test
cs
cmc
add
xor
cmp
popa
cmp
sti
jmp
icebp
sbb
xchg
imul
cmpsb
cmp
sub
faddp
and
stos
dec
cmp
add
or
pop
inc
or
sbb
jnp
mov
roll
cli
xchg
bound
push
in
xor
repnz
faddl
sub
xlat
arpl
add
dec
rorb
jl
pusha
add
mov
in
rolb
sbb
sbb
push
inc
add
xorl
das
cli
cmp
test
scas
xor
add
out
xor
lods
cmpsb
jle
mov
pop
inc
inc
stos
mov
xchg
lcall
pop
ret
movsl
aam
out
sub
adc
inc
add
pop
mov
lretw
movsb
cmp
daa
aas
les
sbb
jp
mov
cmc
mov
xchg
or
rorl
sti
xor
das
add
sarl
cwtl
scas
cmpsb
push
mov
loope
cmp
add
clc
cmp
ds
test
movb
jl
mov
mov
mov
xor
mov
outsb
inc
add
xor
into
jl
stos
and
xor
jns
popf
xchg
in
mov
pop
add
jge
cmp
mov
mov
cmp
std
pop
adc
pop
adc
imul
mov
movb
adc
fdivp
xor
test
inc
add
sbb
mov
mov
mov
lock
add
dec
insb
push
fdivrp
int3
push
jle
addb
pop
pop
cmp
dec
push
pop
dec
lcall
ds
add
xchg
idivb
aaa
insb
pop
loop
jbe
aad
lcall
mov
jp
push
loopne
dec
mov
orl
sub
dec
jno
add
dec
mov
lret
mov
data16
push
mov
add
ret
stc
cmp
sbb
mov
push
lock
mov
jbe
lret
sbb
fadds
add
add
add
cmp
dec
jns
sahf
imul
les
inc
mov
lods
xor
inc
add
movb
pop
dec
fidivrs
push
xchg
dec
inc
xorl
pop
push
push
push
add
dec
jl
xor
pushf
xor
and
add
mov
inc
cmc
cmpsl
ss
es
lret
ret
sbb
mov
cmp
ret
mov
push
jecxz
xchg
adc
add
stos
xorl
add
insl
fimuls
pop
push
adc
in
jg
xor
stos
mov
pop
das
movsb
shl
aad
sbb
nop
mov
add
bound
jo
test
sub
imul
addb
das
ja
dec
sarl
dec
dec
pop
aaa
adc
outsb
dec
out
fisubrl
and
cs
lahf
call
pop
pop
scas
push
adc
push
lcall
lock
fdivrs
pop
jp,pt
ret
fcoms
in
enter
je
in
loopw
gs
add
scas
ret
push
mov
xchg
testb
cmp
push
mov
les
cmp
dec
sub
dec
mov
cmp
sbb
jnp
ret
insb
lahf
lods
pushf
fdivs
mov
mov
xlat
stc
pushf
inc
sti
aam
fdivr
cmp
push
lahf
push
test
neg
sbb
imul
adc
or
in
ljmp
mov
add
xchg
scas
xlat
add
lret
inc
ja
add
stos
loope
rcrl
xchg
mov
add
scas
hlt
push
fucomi
or
add
popa
vorpd
pop
xchg
gs
mov
xchg
imulb
lods
jne
xchg
shr
popf
test
insb
pop
int3
lahf
push
jno
sub
mov
add
es
or
push
dec
push
outsl
lret
and
jne
add
xchg
sub
add
adc
pop
test
or
mov
jp
mov
scas
addb
stc
sti
mov
je
xchg
in
scas
cmpsb
lea
outsb
aaa
out
add
aaa
mov
add
xlat
mov
add
sub
cltd
mov
test
mov
jge
int3
and
xchg
xor
and
mov
add
jg
add
sbbl
dec
xor
iret
jl
add
mov
lods
mov
or
or
add
jne
out
ja
mov
dec
push
dec
leave
rolb
add
and
test
inc
add
ja
shll
cmp
out
aas
dec
xchg
lcall
shlb
pop
push
sahf
dec
jle
shrl
mov
std
in
xor
and
std
sti
stos
test
je
lock
mov
jl
push
push
jl
add
jg
rol
add
ds
call
jbe
add
adc
add
xor
sbb
call
fwait
outsl
cmp
cmp
xchg
sti
push
xchg
addb
addb
xchg
out
icebp
in
add
mov
aaa
arpl
daa
rolb
or
or
movb
movsb
test
push
lahf
xchg
and
dec
inc
add
pushf
mov
ds
jp
aam
les
bound
dec
pop
stos
push
add
std
sub
xchg
sbb
sti
adc
jmp
xchg
imul
pop
ljmp
aaa
clc
adc
loope
sbb
out
stos
and
movl
scas
repz
out
add
ja
dec
dec
mov
jnp
add
ficomps
shrb
mov
lds
clc
mov
insb
das
xchg
push
orl
or
add
iret
int
jns
push
cmpl
lahf
jbe
aas
lahf
mov
icebp
cld
jnp
add
rol
icebp
shll
in
add
push
popa
mov
lods
pop
push
popa
xor
lods
push
add
test
frstor
add
stos
xor
gs
cld
in
sub
or
mov
add
loopne
dec
test
dec
int
xchg
cltd
cmp
push
mov
rolb
dec
or
cld
mov
sub
lds
std
test
imul
fidivrs
mov
jo
cmc
fildll
jle
in
fcompl
mov
lea
sbb
push
add
insl
pop
pop
leave
adc
xchg
mov
lahf
mov
xchg
dec
stos
xchg
cmpsl
xchg
rcl
push
xorl
sub
add
jl
mov
adc
pop
fwait
enter
dec
and
ja
insl
repz
scas
xchg
std
and
aad
jge
sbb
sbb
imul
loope
dec
adc
xchg
rcrl
add
jl
mov
lds
int3
js
mov
xor
insl
dec
fbld
jbe
addb
add
push
add
add
cmp
mov
lret
loopne
imul
dec
arpl
add
stos
push
nop
mov
movb
addr16
add
push
test
loope
push
fsubrs
adc
test
and
addb
testb
ja
inc
add
icebp
cli
fbld
es
aas
mov
icebp
inc
pop
stos
sub
add
js
stos
inc
add
js
add
inc
lods
ror
in
ljmp
add
movb
jecxz
mov
jmp
pop
cmp
push
rcll
movb
adc
jb
movsb
pop
mov
lret
mov
sti
jle
push
add
inc
xchg
mov
ljmp
idiv
lods
jp
das
sti
popa
cmp
jle
sub
scas
aaa
or
mov
xor
addb
imul
mov
add
je
jno
fwait
cmpsb
push
add
fiadds
add
mov
test
mov
push
inc
add
push
stos
das
xchg
cmpl
mov
call
movl
inc
add
das
out
pusha
add
je
fwait
mov
xchg
sti
push
pop
out
add
sbb
xchg
popl
in
test
and
inc
add
mov
bound
adc
push
popf
inc
add
pusha
add
xchg
adc
push
les
sbb
mov
dec
pop
and
sbb
addb
xor
nop
repz
fistpl
mov
inc
add
push
pop
lcall
test
test
or
les
or
iret
in
push
add
sbb
cmp
mov
out
data16
inc
fistps
mov
fwait
cmp
addr16
and
ss
in
add
mov
loope
push
push
xchg
pop
xor
and
and
xchg
js
movsl
dec
adc
jns
adc
cltd
fldenv
add
sahf
outsb
jb
ljmp
rcr
sbb
mov
addr16
ss
add
mov
sub
pop
outsl
fimull
or
cld
ss
mov
add
add
ja
cmpsl
rolb
sahf
lahf
mov
add
push
loop
xchg
jne
mov
xchg
addb
xchg
and
inc
mov
in
mov
mov
mov
addb
xor
ss
push
mov
mov
add
mov
add
pop
repz
cmp
xchg
in
mov
fst
dec
inc
insl
ss
in
cltd
xchg
push
loopne
add
cmc
addb
add
adc
pushf
jb
dec
jne
out
dec
fistl
enter
nop
lods
dec
nop
outsb
cld
and
mov
lret
bound
mov
cmp
add
stos
push
out
add
add
imul
sub
push
movb
inc
add
mov
out
push
adc
or
xchg
lret
movsl
mov
pop
cmp
insb
lret
push
rolb
mov
imul
sub
inc
add
push
in
in
fsubrs
xchg
int
imulb
jo
arpl
cld
or
lret
or
add
aaa
cmp
out
xor
movsl
xchg
push
aam
adc
pop
lcall
clc
pop
or
test
and
jecxz
adc
push
js
punpckhdq
or
sbb
sub
mov
lret
pop
ja
sbb
aad
dec
jp
fs
arpl
adc
loope
popf
and
mov
data16
mov
mov
imul
mov
cmp
jle
mov
test
repnz
dec
in
and
ja
or
push
mov
mov
jo
add
xor
out
iret
mov
cwtl
aad
jbe
icebp
mov
or
movsl
js
mov
mov
xchg
jmp
push
jno
cmovge
sti
inc
sbb
and
addb
les
inc
leave
std
ljmp
push
pop
mov
sbb
add
ret
mov
or
icebp
je
daa
jmp
add
daa
fmull
addb
add
pop
jge
jle
mov
scas
lock
lods
adc
js
cmp
jmp
add
pushw
add
clc
mov
sbb
ret
mov
sbb
in
hlt
das
roll
ret
xor
lcall
mov
inc
add
inc
add
cmp
jg
and
jmp
pop
xor
sub
fbstp
xchg
and
out
mov
push
cmp
in
out
mov
or
mov
stc
mov
dec
fmul
pusha
add
daa
out
dec
xchg
scas
dec
lcall
cwtl
js
cwtl
cmp
mov
leave
es
xchg
push
mov
call
js,pt
sahf
int3
std
mov
addb
xchg
mov
mov
icebp
dec
mov
mov
outsl
loopne
inc
mov
add
add
dec
cmpsb
clc
cwtl
dec
cli
adc
and
ficomps
les
pop
jmp
testb
sbb
popf
scas
pop
mov
sbb
sbb
pop
push
imul
lret
je
dec
add
or
sbb
rorb
aas
fisttps
sbb
push
jo
stc
jecxz
xchg
insb
dec
mov
aas
cltd
pop
mov
ror
dec
or
push
cltd
cmp
out
daa
cwtl
insl
aas
push
popa
fiaddl
shrl
and
test
xor
test
inc
add
add
lcall
adc
clc
icebp
popa
cli
jmp
es
add
clc
push
loopne
sub
cmp
popf
cmp
pop
jmp
movb
xchg
jg
cli
sbb
pop
mov
gs
lret
shrl
jmp
out
cmp
iret
int3
test
sub
pop
dec
xchg
xchg
or
test
cmp
cltd
push
push
pop
sbb
or
cmpsb
or
das
into
inc
add
add
pop
loope
cmpsb
dec
aam
das
push
in
jns
pop
stos
popf
add
push
hlt
xlat
lret
dec
hlt
mov
mov
add
dec
rcl
popl
jle
or
les
imul
mov
add
jae
push
add
mov
lock
ds
rorb
add
xchg
sarb
push
sti
pop
sahf
sub
cmp
cmp
out
xchg
int
push
or
sti
jne
pandn
and
pop
jb
ret
lds
adc
jmp
sbb
pop
sbb
sub
push
addb
in
jp
mov
sbb
add
jl
loop
adc
movb
add
in
cld
pop
mov
push
data16
repnz
xor
in
pop
cmp
sbb
lea
add
clc
mov
mov
es
lret
pop
xchg
xchg
xchg
sbb
add
jle
ret
mov
mov
popf
pop
sub
dec
push
bound
dec
or
out
fsubl
mov
or
add
mov
cli
ficoml
mov
aaa
fidivl
add
push
mov
add
iret
xor
add
add
mov
mov
xchg
lret
pop
xchg
sub
adc
and
add
dec
inc
cmc
fadds
add
cmpsb
pop
mov
xor
xor
scas
pop
fcmovnb
scas
rcrb
fldl
push
cmp
in
push
pop
mov
add
dec
mov
xor
int3
or
fdivrs
push
cmpsl
xor
or
jo
inc
add
int
jbe
out
sbb
add
lahf
jg
adc
insl
xor
dec
dec
bound
and
mov
add
data16
cmp
dec
addb
mov
lea
and
add
xor
add
testl
dec
scas
push
pop
dec
jg
or
mov
movsb
dec
cld
scas
push
mov
pop
mov
add
jo
fwait
es
cmp
adc
out
les
test
mov
mov
inc
xchg
and
movsb
sub
movsl
shlb
or
les
mov
push
cmp
add
in
scas
cmc
and
cmp
push
add
sub
aaa
addb
push
and
or
lcall
adc
jmp
movsl
mov
out
inc
jle
mov
sub
mov
mov
dec
fs
add
sbb
and
or
lods
push
xchg
imul
xchg
mov
pop
add
loope
test
xchg
xchg
jge
xchg
ljmp
or
dec
and
setae
test
addr16
add
mov
out
insb
pop
inc
add
mov
mov
outsb
shll
cmc
lods
cmpsl
aad
in
dec
dec
sbb
insb
and
inc
add
add
or
sbb
rorb
add
addb
mov
and
repnz
push
dec
or
add
lea
movb
cltd
mov
add
in
lret
lret
ljmp
jp
add
add
inc
add
loop
sbb
add
xchg
sbb
push
jb
cli
mov
add
mov
lcall
cld
push
add
stc
sub
outsl
jno
sbb
xor
fdecstp
pop
or
repnz
enter
inc
mov
stos
jb
add
mov
shll
mov
in
inc
add
test
adc
cmp
sub
scas
testb
sti
jbe
mov
mov
movaps
icebp
addl
jae
jecxz
add
in
dec
mov
add
repz
add
test
sub
cmp
fxch
into
pop
bound
jb
das
sub
pop
mul
movsl
jecxz
inc
shrl
out
add
add
jmp
dec
sbb
addb
mov
aas
mov
mov
int3
or
jbe
push
in
imul
push
jmp
test
add
add
mov
xor
lods
lea
addl
cmp
test
lds
scas
shll
stc
inc
pop
add
pop
shlb
mov
mov
inc
cltd
adc
mov
add
pusha
add
pushf
js
add
push
dec
fbstp
icebp
or
dec
pop
fstps
aaa
jae
fiadds
add
addr16
js
cmp
mov
jg
inc
addl
lret
lds
xor
mov
cli
ret
mov
mov
or
add
add
mov
ficompl
add
test
add
hlt
addb
mov
inc
cmpsb
cmp
add
sbb
inc
add
dec
mov
enterw
repnz
data16
mov
or
push
add
out
mov
mov
orl
out
add
sahf
lods
popf
xchg
scas
outsb
gs
mov
bound
int
les
bound
ficoms
fidivrs
jecxz
out
mov
jns
out
push
mov
ljmp
add
insb
pushf
jne
mov
jmp
jb
cmp
push
lahf
mov
aas
and
in
dec
ror
rorb
cmpsb
pushf
mov
jns
imul
add
icebp
push
sahf
xchg
inc
cmp
inc
pop
jns
jp
addb
lcall
rolb
paddw
pop
stos
icebp
add
loope
nop
dec
sub
data16
xor
mov
mov
lea
xor
sub
test
js
in
ja
xor
add
icebp
sub
cmp
lahf
pushf
inc
add
add
adcl
xchg
mov
punpckhbw
movsl
shrl
mov
out
addb
push
pop
mov
mov
sub
or
pop
xchg
loopne
cmp
icebp
cmc
cwtl
and
imul
add
add
push
sti
les
and
scas
adc
xchg
fldt
jmp
inc
add
adc
xor
out
mov
mov
lods
mov
fwait
xor
xchg
nop
mov
jne
clc
das
lock
adc
cmpsb
ja
push
popf
loop
xchg
pop
test
sub
jmp
aas
mov
xor
sbb
add
lret
mov
push
gs
sub
mov
jle
addb
adc
xor
and
mov
add
in
mov
stc
cmp
gs
je
add
in
loopne
inc
icebp
pop
hlt
xchg
xchg
movsl
outsb
out
pop
cmpsl
stc
ret
add
daa
or
test
lods
xchg
movb
clc
movsb
lods
xchg
loopne
cmpsl
jmp
pushf
fdivs
rol
arpl
or
cmp
add
in
imul
mov
xchg
lea
jbe
lcall
fildl
rorl
pop
cli
inc
scas
push
das
iret
icebp
jo
idivb
add
sub
mov
sbb
mov
lds
in
jno
push
out
inc
add
clc
scas
and
push
fsubrs
sub
add
mov
push
xlat
mov
les
lahf
bound
aaa
fdivrs
add
mov
dec
fcomps
add
je
mov
pop
arpl
mov
add
jge
scas
fsubl
mov
add
pushf
mov
cmc
jle
fdiv
in
fimull
add
mov
fwait
jp
int
in
xchg
cmp
adc
aam
out
push
mov
cmp
mov
push
pop
test
add
jns
add
rcll
adc
push
insb
pushf
fstpt
ja
sbb
out
mov
push
adc
cmp
sub
push
jle
mov
inc
add
loopne
or
push
aaa
mov
pusha
add
jne
xchg
fnsave
scas
sub
ficomps
adc
aam
mov
cld
repnz
data16
lods
or
mov
pushf
pop
and
add
pop
arpl
aaa
cmpsb
cmp
pop
addb
mov
mov
add
jp
jmp
lds
mov
jecxz
xchg
xor
or
mov
and
push
pop
pop
xorl
pop
jp
xor
xor
sahf
inc
loope
addb
clc
call
jbe
xlat
addr16
sub
popf
adc
gs
les
stos
jnp
in
add
jmp
rolb
jg
cs
xchg
ret
jg
mov
xchg
or
mov
jnp
cltd
and
movsb
popf
jge
pop
pop
sbb
cmp
push
and
add
stos
adc
inc
push
lods
addb
or
arpl
mov
mov
movsl
push
les
notb
bound
xchg
pushf
pop
dec
xlat
shrl
or
movb
xor
dec
fwait
dec
sbb
adc
push
jo
lcall
cmpsl
addb
inc
movsl
test
jne
add
imul
jns
pop
cmp
add
loop
addb
jl
lods
fwait
std
and
add
mov
inc
add
inc
add
add
cmp
push
push
scas
test
mov
push
out
lods
out
mov
dec
jns
test
mov
pop
jge
lods
arpl
je
pop
arpl
mov
test
insb
movb
dec
push
adc
dec
xchg
movsl
and
sub
mov
add
sub
lock
fadd
add
sbb
add
lea
test
add
or
fmuls
les
ljmp
dec
rcrb
add
inc
movsb
mov
loope
imul
cmp
int
in
ljmp
pop
mov
adc
rorl
jp
push
jo
and
cltd
sub
xchg
hlt
mov
fbld
push
push
insl
jb
add
fsts
sarb
sub
cli
push
mov
add
lds
imul
cs
bound
iret
daa
adc
inc
add
jnp,pt
gs
jg
mov
push
xor
mov
shl
in
jg
stc
or
add
in
inc
add
daa
andl
mov
movb
mov
xor
ss
aas
scas
das
dec
push
rolb
and
push
jg
push
jae
ja
std
add
cmp
cmp
or
mov
test
icebp
repz
stc
je
add
rcll
adc
pop
lret
inc
add
lcall
das
add
sbb
sub
add
pop
jle
nop
dec
aaa
lret
out
addr16
icebp
and
int
cmp
add
sarb
push
inc
or
push
mov
ss
lods
incl
rolb
int3
in
jb
out
mov
sub
add
xchg
jecxz
xchg
mov
and
add
add
repz
xchg
outsb
pop
xchg
adc
div
mov
movsl
mov
iret
mov
fs
cmp
cmp
xor
insb
dec
xchg
pop
test
xchg
add
repnz
sub
icebp
mov
rclb
cmc
mov
aas
mov
aas
sti
and
test
mov
loopne
not
rolb
pop
hlt
pushf
call
xchg
stos
push
add
negb
fucomp
push
dec
dec
divb
pop
arpl
and
or
inc
add
outsb
adc
add
cld
iret
xchg
in
pop
mov
inc
add
aam
sti
jne
jne
ja
in
ret
leave
lret
dec
daa
ret
mov
addb
movb
cmp
jge
mov
repnz
inc
add
lods
sarb
and
inc
pop
inc
add
lds
add
shl
in
pop
sahf
pusha
add
jmp
add
fisubrl
test
insl
mov
fdivl
inc
add
sub
pop
into
inc
jg
mov
test
scas
dec
inc
enter
mov
fldt
cmpsl
enter
add
xchg
into
aad
or
nop
dec
dec
mov
jo
popf
lea
stos
jp
test
lods
sub
mov
aas
in
call
adc
in
shlb
rorl
jb
hlt
repz
scas
mov
inc
add
test
fdivrl
sti
cbtw
sub
mov
stos
cmpsb
fwait
dec
dec
fwait
addb
mov
in
lods
mov
popa
test
jge
push
rolb
lcall
imul
bound
jno
ds
imul
lods
lahf
movsl
or
sub
jne
insl
mov
leave
popa
clc
roll
das
fimull
add
jae
popf
or
in
xor
mov
add
clc
addb
mov
shrl
pop
inc
add
enter
add
pop
nop
data16
mov
addb
add
ljmp
int
xchg
push
repz
sbb
dec
in
dec
mov
fs
pop
imul
daa
in
mov
add
dec
fisubrl
sti
ret
ljmp
add
aaa
inc
add
imul
and
popa
sub
adc
add
decl
cmp
mov
add
xchg
nop
mov
stos
xchg
jae
dec
jne
mov
or
pushf
xchg
add
test
dec
call
cmpsb
mov
test
out
pop
xchg
mov
popa
jecxz
or
add
loopne
test
popf
mov
xor
test
sub
add
add
or
addr16
out
mov
mov
jl
rcl
pusha
add
mov
movb
enter
lock
fiadds
mov
das
stos
push
dec
jbe
add
outsb
push
dec
push
addr16
je
mov
adc
and
pop
sub
xchg
cmp
add
inc
push
or
jle
adc
xor
bound
nop
jg
outsl
inc
xchg
or
orl
and
into
sub
inc
add
mov
sub
jo
pop
notb
aaa
jb
stos
test
popa
cmp
test
pop
xor
and
ljmp
inc
add
shlb
inc
add
cli
enter
fwait
push
jg
in
add
and
cmp
imul
aad
mov
or
insb
in
add
sbb
bswap
int3
testl
sbb
xchg
sbb
and
jne
sub
pop
mov
inc
cli
xlat
cmp
add
outsl
mov
je
pushf
and
out
dec
or
iret
filds
add
testl
jno
add
adc
push
add
add
add
sbb
mov
mov
stos
test
mov
aaa
out
cmp
les
int3
jle
mov
add
or
cmp
add
test
and
sbb
imul
and
mov
mov
test
mov
loopne
stos
dec
add
lock
pushf
dec
inc
add
xor
add
movb
push
jmp
add
es
add
pop
jns
lret
mov
add
jp
in
aas
push
test
addb
push
adc
negb
cmp
dec
loope
add
daa
ret
add
stos
ja
rorl
jne
repz
push
cmc
adc
push
add
out
push
add
mov
pop
scas
data16
daa
repnz
roll
or
jmp
rol
orl
cmp
test
sbb
push
and
fcomps
inc
add
repz
add
sbb
dec
scas
ret
push
das
mov
sahf
dec
popa
daa
dec
and
add
leave
jbe
sub
movsb
xchg
jns
rcll
decl
xchg
fs
add
sub
rorl
jmp
inc
add
or
ret
jmp
in
push
add
aaa
mov
gs
push
cmpsl
ss
xlat
std
in
adc
call
js
cmp
add
sbb
int
lds
add
sbb
ljmp
int
loop
test
sub
add
cli
jb
push
cmp
push
mov
sbb
mov
aam
add
cmp
mov
or
dec
xchg
or
dec
call
mov
in
jl
cmc
mov
in
sbb
pop
pop
lahf
addb
pusha
add
cli
or
fsubrp
lds
sbb
jmp
mov
add
or
add
or
xor
scas
ss
out
bound
std
into
xchg
sbb
imul
mov
mov
pop
outsb
es
cs
cwtl
xor
or
imul
add
lods
jp
pop
pop
inc
or
xlat
movb
fsubrs
xchg
xor
dec
sar
add
addr16
loopne
hlt
dec
push
mov
ret
outsl
mov
xor
jb
je
and
out
pop
out
aas
sbb
gs
pop
xchg
dec
mov
mov
sbb
les
push
fstps
jbe
xor
mov
and
push
pop
dec
jg
add
add
and
xor
xchg
push
fwait
mov
inc
mov
add
aas
cmpsb
inc
insl
cwtl
sahf
rclb
mov
daa
shll
repz
mov
sbb
pushl
pop
mov
rolb
add
mov
add
xor
xchg
in
repnz
in
nop
das
aas
jae
iret
mov
dec
ja
lds
mov
mov
push
mov
sub
mov
vpextrw
lds
cli
js
xor
imul
pop
mov
imul
loop
mov
int
pop
or
mov
inc
enter
fcompl
jmp
jns
in
dec
in
jp
dec
add
hlt
xor
cmp
je
iret
jle
repz
sub
mov
shll
imul
and
rolb
add
jle
push
add
add
adc
cltd
inc
or
fnstenv
jge
mov
in
sub
and
lret
pop
shrb
or
jg
dec
mov
sub
mov
xor
sub
add
orl
jle
xchg
jnp
ret
fcomps
into
jl
jbe
add
dec
das
lahf
inc
mov
insl
mov
insb
or
jmp
and
imul
dec
push
mov
xor
jmp
sub
icebp
loope
and
out
inc
test
pushf
repz
jp
jne
ret
push
lods
iret
jl
jne
test
mov
int
dec
sub
pusha
add
xchg
mov
in
sbb
jl
mov
dec
and
add
jns
add
xor
pop
add
mov
jge
adc
out
jne
xchg
int3
inc
loopne
stc
pushf
xchg
xchg
add
pop
xchg
pop
sub
adc
mov
xchg
adc
insl
jae
cmp
lret
adc
arpl
rcl
scas
stos
or
adc
inc
jbe
and
into
xor
insb
mov
aas
push
jo
loope
cmp
xor
and
add
fmuls
push
pop
or
bound
jecxz
loope
addb
jae
popf
ret
xor
mov
add
push
mov
shlb
adc
mov
js
jo
or
dec
xlat
add
into
into
fcmove
mov
mov
pop
pusha
add
inc
add
xchg
xchg
popf
sbb
dec
inc
rolb
imul
adc
push
xor
aaa
jmp
fwait
aaa
aas
mov
jge
jb
inc
add
testl
jecxz
out
push
mov
inc
add
jl
add
pusha
add
jl
cmp
add
clc
movsb
fidivl
das
adc
cmp
test
inc
add
mov
xchg
lea
popa
hlt
sarl
mov
add
lea
ret
pop
into
inc
add
decb
fnstcw
inc
movsl
or
andl
xor
bound
sbb
in
add
shll
aad
and
js
lds
adc
cmpsl
bound
cmpsl
fmull
testb
add
xchg
outsb
cld
mov
imul
iret
cmp
pop
lret
jns
sbb
add
test
es
cltd
inc
das
or
cmp
iret
and
mov
dec
mov
inc
add
repnz
pop
icebp
cmpsl
sbb
into
sbb
in
jg
insb
xchg
ljmp
test
mov
imul
push
fcoms
push
sbb
add
add
imul
and
cli
mov
add
mov
xor
addb
lret
aaa
movsb
adc
sub
mov
sub
daa
xor
lret
pusha
add
adc
loop
adc
push
mov
mov
xchg
addr16
pop
addr16
add
insl
add
push
div
inc
add
movsl
jmp
cmp
dec
xchg
push
mov
inc
add
lahf
and
add
cli
inc
add
or
and
loop
push
daa
stos
in
movsl
dec
leave
dec
or
adc
add
mov
sbb
inc
add
iret
loope
mov
sub
jle
fcoml
icebp
or
add
fs
jbe
inc
sub
out
repnz
push
add
inc
mov
add
ss
movsl
inc
add
pop
xchg
stos
push
jge
xchg
sub
mov
pushf
inc
add
stc
fdivrs
inc
add
xchg
jno
add
add
addb
mov
mov
lret
sbb
cmp
lock
call
cmp
das
fstpt
in
movsb
push
jg
xchg
flds
popa
xor
cld
push
cmpsl
dec
pop
rolb
push
xchg
add
iret
cmp
xlat
push
mov
xor
mov
lea
adc
jo
add
cmpsb
or
lahf
sbb
outsb
cmp
push
cmp
sbb
leave
test
jno
enter
adc
int
pop
inc
add
fsts
pop
mov
push
enter
and
shl
cmp
mov
lods
pop
xor
inc
add
pop
nop
add
dec
cmpl
and
mov
lods
adc
mov
push
pop
std
cli
pop
sahf
mov
icebp
gs
cmpsl
xor
xor
cmp
jae
mov
xor
movsb
adc
aad
cli
and
enter
mov
xor
jne
int
dec
sbb
add
and
stos
jb
sbb
adc
inc
int3
dec
add
jbe
mov
icebp
jb
sbb
push
lds
inc
add
add
lret
xchg
lods
int
add
pop
sbb
and
dec
or
repnz
add
pop
sbb
adc
in
cli
scas
inc
jg
data16
mov
pop
fsubrp
xor
add
movl
inc
add
inc
add
and
cmp
add
add
pop
popf
imul
push
adc
or
pop
lret
stos
dec
or
xor
rcrb
sub
mov
inc
or
into
fldenv
mov
mov
cmp
rorl
dec
mov
movb
lock
out
xchg
xchg
jno
ljmp
loope
stos
add
ja
push
insl
xchg
push
jo
sarl
enter
jecxz
xor
out
sahf
dec
fnstcw
aaa
mov
lds
add
xchg
jecxz
fstp
jns
adc
aam
add
rolb
xchg
pop
lods
aas
push
addr16
add
hlt
xchg
mov
jno
cmp
mov
add
addr16
dec
mov
add
fmull
adc
xor
jecxz
lea
clc
lods
push
incl
xor
das
push
adc
lock
add
divl
aaa
test
out
and
fsts
es
add
xor
cmp
jne
add
cmc
or
mov
jg
sahf
addr16
mov
xchg
repz
imul
inc
insl
mov
cld
pusha
add
mov
loop
push
aas
popf
pop
cmp
cmp
repz
ds
into
or
and
je
aam
fsts
dec
loop
xor
shrb
bound
icebp
daa
jp
aad
mov
dec
mov
jne
push
push
ss
imul
or
std
dec
inc
into
arpl
js
pop
enter
pushf
jno
cltd
push
hlt
cmpsl
xchg
dec
popf
std
dec
inc
xor
lods
into
mov
bound
adc
add
loopne
mov
inc
add
add
divl
add
scas
out
jns
xlat
movb
int3
je
or
out
jle
fst
push
movsb
nop
arpl
rorl
xor
ret
test
sbb
jnp
lret
dec
loopne
test
and
cwtl
cmp
es
movsb
lods
mov
add
add
adc
test
shlb
add
js
jp
mov
fs
loope
icebp
xchg
pop
mov
add
add
insb
cmp
pop
push
add
xor
jnp
jmp
shll
sub
repz
into
mov
add
jle
repz
dec
cltd
inc
add
add
inc
pop
popa
mov
pop
addr16
xchg
or
jl
xchg
sub
sub
mov
and
fmuls
mov
dec
sub
mov
or
and
adc
or
aad
add
jle
sub
push
cwtl
xchg
xor
lods
push
cmp
xlat
cli
xchg
mov
and
cli
arpl
xor
add
fisubs
add
mov
fildll
add
sbb
addb
push
xchg
push
test
int3
cmp
add
shll
add
loopne
ret
lods
mov
adc
add
mov
clc
adc
cltd
xchg
cltd
and
jmp
pop
fnstsw
add
inc
cmp
and
mov
sbb
mov
inc
add
cmc
pop
jns
mov
cmp
xchg
les
push
nop
sub
repz
lret
ret
xchg
js
pop
ficomps
bound
cltd
in
hlt
jecxz
adc
mov
movb
jg
sub
mov
shll
int
cmp
inc
xchg
dec
sub
aas
push
mov
mov
shll
or
data16
loope
rolb
mov
sbb
dec
push
add
roll
and
dec
pop
adc
std
cmpsb
mov
ret
int
xchg
add
add
xlat
xor
add
cmp
cltd
mov
loopne
push
inc
add
add
add
repnz
jmp
mov
loope
push
repnz
mov
adc
repnz
sub
pop
out
hlt
das
sub
jle
cs
mov
lea
divb
cmpsl
push
lods
cs
insb
call
ljmp
and
loop
add
and
cwtl
cs
cs
iret
sahf
pop
dec
mov
fimuls
dec
das
arpl
mov
sub
iret
cmp
add
lock
xor
notb
add
sbb
cmpsb
cmp
outsb
jecxz
pop
jp
push
cmpsl
mov
dec
dec
out
scas
sub
fiadds
pop
mov
or
int
repnz
jmp
sbb
jb
fmuls
cmp
jp
divl
push
ret
push
add
xchg
in
mov
std
jmp
jmp
lahf
cli
or
js
jge
test
mov
add
pop
dec
fnstenv
cli
sub
iret
stos
movb
cmovp
inc
add
jg
das
and
sub
ja
push
add
pop
jl
mov
xor
lds
mov
add
out
movb
mov
adc
inc
xor
out
cmp
fistpl
push
xchg
pop
dec
pusha
add
xchg
fldcw
mov
lcall
dec
and
ja
cltd
add
psubsw
jnp
shll
add
jae
enter
fs
pop
xor
pop
push
pop
dec
xchg
ljmp
js
sub
data16
lea
push
inc
add
xor
outsl
aad
jns
jne
sbb
sar
cltd
pop
inc
add
movb
fdivrs
adc
shl
pop
addb
into
cmp
add
arpl
sub
add
add
sbb
ret
call
enter
popf
push
xchg
mov
loop
shrb
inc
add
pop
dec
fnstsw
pop
xor
jbe
movsl
cmpsb
pop
daa
xor
or
stos
pop
lea
insl
hlt
xchg
icebp
sbb
jecxz
mov
push
jns
push
cmp
add
cmpsb
mov
shrb
cmp
icebp
or
and
cmp
add
aas
cmp
dec
push
daa
hlt
cmp
lods
les
testb
imul
ss
xor
or
addl
dec
loopne
jne
aaa
stos
rorb
and
xchg
jg
fisubs
sbb
push
mov
add
add
hlt
or
mov
outsl
mov
or
ret
sbb
and
push
add
add
loop
je
icebp
fcmovnu
into
js
les
mov
mov
in
inc
add
sbb
sti
mov
pop
testl
hlt
mov
jge
push
aas
xchg
add
and
inc
add
rolb
lret
fsub
in
xchg
mov
mov
adc
jmp
mov
outsl
aas
dec
lock
mov
nop
jmp
mov
dec
in
jns
out
pop
cmp
add
add
mov
pop
jns
lahf
mov
stos
ljmp
int3
xor
std
fimuls
aam
jle
xchg
ds
xchg
lea
dec
loope
xchg
pop
mov
xor
pushf
pop
dec
adc
inc
adc
stos
repnz
out
cmp
inc
add
add
push
sti
loop
mov
sbb
xchg
mov
daa
test
sbb
or
xchg
dec
movb
jne
lret
xor
arpl
pop
outsl
ss
jge
add
ja
outsl
ret
and
lods
ss
mov
in
inc
add
mov
test
cmp
dec
xchg
repz
lcall
cmc
inc
add
add
mov
loop
adc
insb
fbstp
xchg
cmp
and
lret
loopne
lea
mov
push
xchg
push
test
xchg
movsl
push
cmp
inc
add
add
call
or
mov
stos
aad
xchg
fidivrl
pop
mov
pusha
add
pusha
add
mov
decl
dec
filds
sahf
dec
dec
xor
or
cs
imul
outsl
stos
or
push
add
loop
add
out
dec
sbb
push
push
lods
sbb
ljmp
ljmp
jl
add
cmp
in
add
mov
or
insl
xchg
test
mov
cmpsl
jbe
push
js
xchg
jg
jno
sbb
xchg
jns
add
add
je
fbstp
or
and
mov
cmpl
xchg
pop
cli
push
mov
add
inc
mov
scas
cli
or
add
pop
jb
mov
hlt
lods
jbe
popa
cmp
divb
lahf
jbe
inc
push
adc
xor
shl
mov
push
nop
fildll
add
cmp
xchg
not
push
data16
insb
jle
div
xor
rcl
jecxz
aas
and
jo
add
or
mov
sbb
cmc
imul
ds
mov
xor
mov
ret
xor
mov
ficoms
cmp
xchg
out
xchg
cmp
xchg
cmp
sbb
scas
add
rorl
test
test
mov
mov
scas
push
into
js
lods
or
push
arpl
cmp
aad
add
mov
adc
jmp
mov
jne
add
xchg
and
js
inc
add
shlb
sub
add
adc
insl
in
roll
cmpsl
pop
fildl
mov
dec
sub
mov
sub
fmull
addb
cli
sarl
into
rorb
mov
add
add
lods
pop
scas
or
into
cmpl
imul
das
and
test
jl
jbe
inc
add
iret
xchg
out
push
cltd
movsb
inc
add
jne
inc
mov
jmp
icebp
dec
push
dec
xor
adc
ror
mov
dec
popa
movsb
mov
mov
std
pop
popf
loop
cs
fists
mov
inc
mov
xor
sub
testb
pushf
lods
xor
cmc
stos
and
jmp
adc
push
imul
sbb
bound
negb
dec
adc
mov
movsl
jmp
jo
ja
jmp
fnstcw
sub
jg
js
into
dec
mov
add
aaa
daa
dec
sbb
movb
fldl
fsubl
cmpsb
loop
inc
inc
add
pop
and
pop
and
ficoml
pop
pop
adc
hlt
lods
and
sub
mov
mov
add
dec
int
shrl
idivb
xor
add
pop
and
jmp
dec
push
add
cmpsb
insl
rolb
pop
push
fs
mov
and
movsb
push
es
outsl
movsb
stc
out
pop
loop
mov
pusha
add
cmp
sub
xor
mov
adc
cwtl
or
mov
push
and
xchg
je
jle
cmp
in
xchg
mov
cmp
mov
daa
push
jmp
mov
stc
sbb
mov
xor
lahf
push
mov
xor
pop
pop
imul
addb
dec
outsl
repnz
fidivl
daa
jno
aad
ret
lret
sti
imul
or
push
cltd
rol
leave
aad
mov
arpl
add
mov
mov
add
xor
push
fwait
mov
test
jp
mov
and
faddl
cmp
adc
and
add
popl
test
out
add
pop
je
pushf
enter
inc
sbb
js
aaa
mov
xchg
push
movb
xchg
xor
je
inc
add
icebp
lods
push
int
cmp
insb
lea
add
add
add
inc
jae
das
shll
movl
bound
fsts
fldcw
mov
out
sahf
xchg
mov
into
jbe
add
loopne
push
cs
shll
dec
ss
pop
pushf
mov
or
adc
add
add
enter
dec
xchg
cmc
pop
cltd
mov
daa
add
add
in
loope
and
jb
add
rolb
fistps
negb
xor
mov
xor
add
ror
int3
sub
xlat
pop
mov
jbe
and
aaa
dec
mov
add
adc
add
add
or
jle
cmp
lcall
addr16
pop
in
aas
rcrl
add
fisttps
add
sbb
lcall
xor
cs
aad
or
mov
inc
add
mov
aaa
out
and
inc
stos
inc
add
sti
test
repnz
xor
mov
jl
add
add
and
out
addb
add
and
std
cli
test
mov
pop
inc
daa
cmpsl
mov
fisubrs
mov
dec
loopne
pop
cmc
and
adc
sbb
pop
inc
sub
repz
lock
inc
add
and
xchg
addb
cmpsb
sub
jmp
mov
das
addb
not
add
adc
lds
add
add
push
daa
pop
xor
sbb
add
movsl
mov
out
mov
das
fwait
and
pushf
push
fmuls
cmpsl
fst
es
sbb
jl
scas
add
retw
je
and
jae
shlb
addb
cmp
push
shll
pop
add
add
popa
jge
jb
mov
mov
loopne
xor
sbb
mov
rcl
sahf
cmp
les
cpuid
or
lods
out
sti
jne
addb
cmp
aam
leave
popa
lahf
cld
dec
ret
pop
pop
xlat
xchg
cli
mov
or
pusha
add
data16
les
leave
jmp
adc
bound
dec
outsb
jge
lds
cmpsb
inc
add
add
bound
sub
push
or
mov
loop
push
mov
lcall
out
lret
mov
ret
imul
popl
adc
mov
push
pop
stos
roll
fdivr
test
push
mov
jg
lock
popa
ja
push
add
aam
lret
lahf
ljmp
stc
nop
call
test
mov
pop
std
ljmp
pop
xchg
fnsave
jae
add
ss
pop
jg
cs
daa
fstpl
or
add
iret
imul
lods
jp
jge
bound
pop
fisubs
add
stos
addb
mov
out
dec
stos
cli
pop
pop
pop
sub
add
out
mov
or
fnsave
scas
in
or
push
stos
sbb
add
cmp
add
shlb
push
arpl
or
add
movsl
imul
cwtl
push
out
ja
add
inc
add
inc
in
aaa
lock
sbb
fdivr
les
out
add
mov
sbbl
sar
inc
fcmovnb
add
push
daa
or
fs
jmp
jns
fbld
push
negb
xchg
cmp
pop
jae
cwtl
xchg
fcompl
push
gs
add
xchg
sbb
mov
pop
mov
cmc
negl
xor
xor
stc
push
mov
mov
dec
test
mov
cmp
inc
add
dec
mov
cmp
push
mov
mov
add
aaa
xor
movb
pop
rolb
push
push
pushf
jb
fsts
adc
fisubrs
add
add
mov
lods
cltd
outsl
or
mov
pop
xchg
jo
xchg
mov
nop
mov
adc
adc
mov
pop
shrl
mov
mov
add
jno
or
je
bound
inc
mov
cli
sbb
pop
cwtl
in
data16
or
xor
lods
push
or
lret
add
mov
inc
add
jb
xor
in
nop
gs
add
sbb
jb
inc
add
lahf
pop
sahf
popa
or
divl
mov
jmp
stos
adc
mov
jle
out
or
out
bound
push
pusha
add
adc
mov
call
cs
bound
mov
push
sti
cmp
dec
pushf
inc
add
insl
mov
add
dec
push
das
subl
jb
add
fs
clc
sbb
rol
fdiv
cmp
mov
sbb
push
aaa
mov
mov
sub
add
daa
inc
or
or
sub
imulb
add
and
dec
push
bound
lret
imul
pop
scas
sbb
dec
inc
mov
iret
sbb
shrl
icebp
xchg
cltd
dec
cli
mov
jno
aas
test
adc
sbb
inc
add
mov
add
jle
in
out
popa
jg
push
out
ljmp
sahf
scas
or
cwtl
xchg
popf
arpl
or
sub
jae
hlt
xor
or
mov
insb
lcall
or
add
add
inc
mov
les
je
out
aam
std
mov
cmp
push
xchg
int
frstor
ret
adc
rcrl
jbe
data16
ficomps
out
adc
jl
add
movsb
cmp
out
mulb
add
sbb
add
inc
inc
add
addl
lahf
mov
rcr
mov
or
jne
xchg
shld
icebp
lods
test
and
sub
repz
pushf
fcmovu
loop
sbbl
xchg
add
stc
dec
pop
loop
fwait
pop
add
xchg
out
add
out
and
push
dec
jmp
add
jno
lcall
scas
inc
add
rolb
sbb
xor
inc
in
movb
cmp
dec
xchg
imul
stc
cmc
gs
push
and
add
mov
mov
mov
pop
push
or
dec
and
lret
mov
sub
inc
add
mov
or
test
mov
in
jge
cmpsb
push
push
pop
mov
mov
add
rorl
and
jl
test
push
cmp
test
loop
add
hlt
push
clc
imul
out
mov
sarl
inc
add
mov
cltd
pop
dec
mov
cld
jecxz
adc
xchg
dec
xchg
sub
pop
or
push
push
test
jge
repz
mov
shll
push
loope
jg
aad
xor
loopne
pusha
add
sub
sbb
mov
das
repnz
add
cmp
jl
add
xlat
sbb
shll
cmp
dec
iret
inc
add
call
les
ret
cmp
xchg
mov
push
icebp
mov
sub
mov
cltd
adc
add
sub
jp
xchg
mov
xor
fistpll
sbb
add
std
xchg
push
fisubs
outsb
xlat
into
in
mov
xchg
add
imul
add
mov
xchg
adc
mov
mov
jno
push
mov
pop
loop
add
add
mov
sub
shrb
pop
addb
rorb
jnp
xchg
add
inc
add
push
imul
add
cld
test
jae
sbb
std
mov
shrb
push
insl
or
push
xchg
cmp
add
adc
mov
iret
pop
mov
mov
mov
or
addl
sub
xchg
fnstsw
sahf
lret
js
int3
mov
testb
cld
sub
or
loop
imul
sub
add
xor
shr
dec
cmp
hlt
and
push
aad
repz
into
in
add
jae
add
xchg
arpl
pop
pusha
add
lods
in
in
push
dec
push
sub
xchg
push
add
addr16
out
imul
add
adc
jno
dec
push
jmp
jmp
xor
lods
mov
mov
add
dec
fdivrs
leave
mov
add
push
adc
lock
inc
jae
and
cli
cmpsl
lahf
icebp
aas
xchg
bound
inc
test
xlat
adc
insb
dec
js
xor
add
adc
mov
or
adc
push
add
stos
cmp
add
add
push
adc
sbb
add
and
outsb
sub
call
int
fcmovu
xchg
mov
jg
dec
unpckhps
pop
inc
lret
or
push
dec
in
mov
add
daa
sub
cwtl
mov
fldl
mov
popa
das
lret
in
and
cmp
inc
xchg
test
test
out
xadd
sahf
je
cmpsl
mov
lods
cltd
imull
call
add
mov
adc
sub
lea
ljmp
sub
repnz
insl
push
mov
push
adc
add
int3
shrb
adc
ret
hlt
cli
rolb
inc
add
in
add
popa
rolb
sub
loop
add
xchg
pop
movsb
sbb
push
lret
sti
sbb
pop
fwait
sbb
xchg
fistps
cmp
add
add
mov
sbb
push
mov
mov
jbe
sbb
sbb
push
dec
jb
rcrb
decl
adc
sbb
in
and
mov
lock
xchg
fucomp
dec
sub
jbe
movsl
lods
gs
lahf
mov
and
adc
addb
push
add
in
xor
jg
add
and
jp
and
xchg
lds
push
mov
adc
mov
pop
sbb
insl
mov
insb
cmpsb
jmp
sub
pop
mov
jecxz
and
add
xor
cmp
add
aam
sar
dec
pop
ss
and
xor
addr16
cwtl
cmp
cmc
mov
sub
fbstp
icebp
lcall
in
xchg
in
add
pop
mov
add
fldl
add
mov
or
push
sbb
adc
mov
mov
push
mov
xchg
inc
ja
stc
mov
jg
pop
jne
dec
adc
iret
xor
mov
dec
or
cltd
imul
add
cmp
test
data16
adc
adc
adc
clc
jno
cwtl
pop
push
loopne
mov
movsb
and
sar
jb
addl
jbe
jbe
iret
xchg
and
mov
dec
clc
adc
and
mov
pop
inc
or
in
jnp
inc
cwtl
jb
cmpsl
add
je
add
mov
xchg
xor
addr16
cwtl
push
and
add
lods
nop
js
nop
inc
add
mov
dec
add
mov
in
insl
ljmp
fldt
jecxz
add
mov
xor
mov
rolb
sarb
pop
adc
outsl
stos
sub
mov
mov
xchg
inc
add
or
push
push
repz
jbe
cmp
and
imul
scas
mov
pop
mov
imul
dec
imul
shr
and
je
insb
or
stos
push
vmovaps
xlat
mov
add
mov
push
call
test
add
popf
pop
ds
leave
xor
sbb
mov
sub
enter
mov
adc
xchg
sub
cmp
xor
and
js
jne
popf
test
xchg
leave
cmp
addb
sti
shrb
push
test
xchg
stc
pop
mov
into
fwait
adc
sbb
notb
outsb
flds
jecxz
cmp
ljmp
add
or
add
addb
out
fidivs
repz
pop
pop
sub
sbb
mov
ljmp
int3
cld
inc
add
xchg
incl
xchg
push
inc
add
test
lret
inc
add
sub
add
or
les
mov
ret
or
loopne
jae
addl
pushf
loopne
adc
dec
adc
push
stc
mov
xor
mov
das
or
pop
cwtl
jbe
ds
sub
add
push
jae
add
dec
xor
ret
inc
add
or
or
push
sbb
ss
pop
stos
jle
es
adc
add
movsl
jge
cmpsl
adc
mov
xchg
push
push
add
xor
stos
xchg
sub
push
lds
sahf
jns
pop
rolb
add
push
sbb
cmp
cltd
pop
or
jne
sub
inc
mov
inc
dec
cmp
mov
xor
lret
sbb
xchg
insl
add
call
rcr
xor
call
leave
fmuls
mov
mov
lods
push
dec
out
and
jnp
mov
subl
mov
int3
cmpsl
fisubrs
inc
add
arpl
call
fwait
mov
mov
xor
sub
jnp
xor
pop
fcomp
jecxz
dec
adc
lods
insl
dec
negl
add
jne
inc
add
mov
and
shlb
mov
lret
mov
jb
movb
add
push
add
push
pop
lahf
daa
sub
push
shrb
flds
subl
add
iret
adc
add
pop
ljmp
mov
add
push
cld
sbb
sub
pmulhw
out
pusha
add
call
sbb
jnp,pn
push
dec
stos
pusha
add
push
add
push
shl
adc
das
je
jns
and
lock
loope
mov
and
mov
mov
stc
jge
pop
push
xchg
add
in
add
pop
aam
dec
fidivl
or
jg
inc
pop
dec
rol
add
xchg
mov
mov
sbb
aad
mov
sub
push
nop
ljmp
jmp
ret
dec
stos
or
mov
dec
or
popf
loop
sub
pop
loopne
mov
xchg
and
cs
adc
ret
in
push
push
add
jle
enter
xchg
je
add
scas
aaa
add
outsb
sub
pop
jne
mov
sbb
out
gs
xor
or
mov
into
add
cli
movsb
into
testl
test
lea
cmp
jne
mov
dec
aas
jne
lods
stos
std
adc
ds
dec
mov
lods
insl
add
pop
fisttps
popa
addr16
cmp
cli
loope
dec
addb
ret
jmp
loopne
sbb
sar
mov
cmp
je
ret
cmp
xchg
imul
dec
shr
fistl
stos
ss
mov
iret
mov
gs
add
dec
faddl
fists
outsb
inc
add
adc
or
out
add
cmp
jbe
movb
mov
les
popa
addb
mov
cmc
out
dec
jno
dec
scas
or
add
sti
in
fidivs
sar
dec
add
xchg
outsb
insl
js
insl
xor
inc
mov
testl
inc
add
sub
mov
popa
jne
pop
hlt
dec
lds
popf
adc
lret
rcrb
add
out
cli
xchg
jae
adc
cwtl
aas
repz
pusha
add
add
adc
sub
xor
inc
add
mov
lret
or
pop
mov
pop
adc
lcall
sbb
out
and
loop
test
repz
push
adc
jl
into
lcall
sbb
inc
enter
scas
scas
pop
loopne
dec
and
or
inc
add
les
mov
adc
test
jl
nop
mov
push
inc
and
adc
bound
ja
mov
dec
dec
mov
inc
iret
imul
fisubrl
notl
or
jge
inc
add
mov
cmpsb
ss
jecxz
inc
add
es
add
lea
jmp
icebp
hlt
test
and
fwait
popf
lcall
popf
aad
mov
mov
push
sbb
jb
add
sub
xchg
lret
divb
push
call
sarl
loop
add
cmpsb
pop
sub
addl
and
ja
insb
movsl
inc
ret
and
mov
es
je
push
and
jbe
lcall
inc
add
add
pop
fs
xor
or
sub
in
dec
aad
rolb
leave
lcall
adc
dec
fdivs
pop
inc
xchg
das
lahf
mov
cld
sti
clc
in
insb
pop
mov
xor
call
pop
ja
iret
out
jp
int
mov
push
push
add
insb
pop
out
fnstenv
add
sub
repnz
sub
add
push
xchg
sub
mov
or
scas
imul
mov
add
adc
add
mov
xchg
addb
cltd
jge
bound
dec
into
repz
push
pop
cmp
xchg
movsb
test
testb
jge
test
mov
push
fistpll
shl
pop
cwtl
fidivl
adc
mov
and
insb
int
push
lret
lcall
inc
add
cmp
push
xchg
icebp
sub
lret
xchg
out
add
add
jns
fs
stos
out
pop
push
hlt
adc
stos
cmp
mov
mov
ret
int
je
jno
inc
add
sub
mov
shrl
mov
pop
loopne
mov
dec
and
cltd
in
cmp
mov
enter
call
dec
js
mov
add
filds
test
enterw
and
je
scas
rcl
xor
mov
inc
add
imul
add
cmp
fiadds
aas
dec
inc
jo
cli
movsl
gs
lcall
mov
sahf
ljmp
clc
repnz
mov
jbe
lock
mov
jg
negb
add
mov
cmc
testb
cmp
sbb
cld
dec
push
test
sub
mov
add
fisubl
add
or
lods
jnp
mov
shll
lea
add
in
stos
add
push
movsl
mov
shll
repz
jecxz
dec
jp
movsb
xchg
xchg
test
out
add
adc
jmp
cli
out
mov
enter
ret
popf
aam
add
dec
push
dec
sahf
adc
ret
jp
std
scas
lcall
addb
add
mov
cwtl
dec
int
jno
test
sti
shrb
pop
pop
pop
xlat
mov
outsb
aas
xchg
xchg
sbb
stc
mov
add
addr16
stc
pop
mov
adc
loop
stos
fstpl
js
sbb
sbb
add
push
ret
je
lea
loope
in
fisttps
mov
sub
jg
sub
fcomps
movsb
outsb
int
cmp
out
imul
add
pop
mov
xor
sub
mov
clc
dec
jp
imul
add
mov
sub
pop
mov
jo
adc
into
mov
xor
or
pop
xchg
mov
cmovnp
add
add
inc
les
ja
daa
or
or
lods
mov
addb
movsl
dec
pop
dec
imul
xor
scas
push
dec
add
scas
pop
iret
lock
add
dec
inc
add
jge
push
movb
cli
push
push
dec
imul
xlat
icebp
push
sub
out
sahf
adc
add
add
fcomi
lds
repz
lcall
out
add
jb
adc
mov
je
push
push
shr
aaa
push
xchg
lods
adc
mov
adc
in
inc
add
and
push
dec
jno
stc
sbb
cwtl
out
and
cmp
or
lret
ret
push
rcrb
add
cmp
push
ret
sahf
xor
cmpsl
hlt
xchg
in
jle
jle
push
mov
pop
aaa
push
add
push
add
mov
add
addb
cltd
inc
add
adc
add
cmp
dec
gs
add
xor
pop
ljmp
and
enter
sub
jno
loopne
scas
dec
pop
pop
ds
add
stos
nop
js
fsubrl
and
sbb
repnz
push
adcl
dec
and
xor
js
int3
add
mov
outsl
hlt
cli
mov
add
add
add
loop
cmpsb
aad
cmpsl
add
hlt
or
adc
dec
xor
sbb
push
and
in
sub
repz
xchg
aas
sub
mov
mov
ljmp
add
or
pop
negl
xor
adc
xor
out
cmc
rcrb
lock
repnz
jmp
out
test
push
inc
mov
sbb
add
packsswb
add
push
jg
rolb
add
push
jmp
aaa
ror
jnp
mov
jle
push
lds
imul
xorl
xlat
fstpt
leave
add
nop
dec
mov
add
cltd
out
push
add
sbb
add
sbb
movsb
mov
xchg
adc
adc
jg
inc
cltd
stos
or
sub
add
icebp
movsl
xchg
lahf
sub
and
jnp
mov
repz
pop
and
jne
pushf
pop
mov
ret
mov
adc
push
push
inc
mov
inc
loope
dec
movsl
cmpsl
mov
loopne
pop
adc
mov
insl
pushf
movb
aam
add
negb
nop
cmpsb
ret
sahf
cmc
mov
push
push
jne
ret
xor
subl
loope
cltd
das
add
sbb
ja
add
dec
pop
or
std
cs
push
fs
add
cmp
sti
jg
mov
ret
jg
js
clc
inc
add
xor
add
xlat
test
fld
push
rcll
lcall
rcrl
imul
sarl
mov
jmp
xchg
daa
inc
add
ss
cmc
movsb
repz
into
test
jg
pop
xchg
out
xor
jge
cwtl
xor
movsl
daa
decl
add
add
sahf
push
in
sti
xor
popa
mov
mov
orl
fwait
xor
faddl
shrl
adc
add
ja
add
and
pop
mov
xchg
lret
fcmovb
add
stc
push
jp
sub
out
ss
or
in
out
fwait
ret
push
mov
pop
aad
cmp
cmc
or
mov
loope
mov
aam
dec
mov
or
fldenv
mov
scas
cld
test
cltd
mov
or
out
cld
cmp
lods
sub
fnstsw
add
movb
adc
push
mov
ret
push
mov
inc
jb
add
sub
pop
cmp
ficompl
rolb
sbb
mov
in
in
cmp
ss
add
addb
cld
add
xchg
imul
jnp
and
jno
or
push
adc
bnd
or
add
loopne
aaa
dec
adcl
das
imul
ret
jge
xor
lock
inc
add
jecxz
push
xchg
out
dec
push
outsb
jg
mov
add
push
call
cmp
into
lods
mov
cmpsl
inc
add
mov
jp
cs
jnp
pop
inc
scas
rorb
add
sbb
add
leave
imul
mov
adc
add
in
lea
xor
mov
sub
dec
jg
mov
inc
add
lcall
das
push
fcompl
and
cmp
xlat
rolb
int3
in
xchg
cwtl
in
js
jnp
jb
push
lea
push
cmp
dec
loop
cmp
ficomps
int3
movsb
and
and
mov
xchg
mov
ja
sar
pop
inc
cmp
repnz
ja
mov
add
add
outsb
mov
and
fmul
stos
loop
add
xor
scas
jmp
mov
xchg
and
shr
sub
int3
dec
adc
push
dec
push
sbb
repz
mov
xlat
jne
xor
jmp
imul
add
dec
inc
push
sti
repnz
or
push
adc
jb
mov
jmp
popa
call
addb
fldcw
pop
nop
enter
call
or
mov
ret
sbb
add
dec
fidivs
inc
add
xchg
adc
xchg
popa
je
mov
add
dec
lds
xchg
fcmovnbe
add
sub
xor
outsb
push
daa
xchg
rolb
jne
push
cltd
sbb
sub
adc
ja
stos
rcrb
inc
add
imul
lods
lock
mov
add
or
lret
xor
add
and
movsl
ret
push
setne
lcall
outsb
sub
stos
lcall
fldenv
pop
scas
mov
sti
arpl
fistl
fisubrl
stos
sub
push
loope
cmp
add
loopne
pop
push
out
add
pusha
add
repz
add
adc
inc
pop
popa
test
xchg
mov
dec
jbe
jecxz
ds
pop
sahf
mov
add
addb
push
jl
aas
mov
adc
repz
in
outsl
sbb
mov
pusha
add
cmpsl
stos
jge
add
and
mov
hlt
pop
arpl
dec
mov
hlt
pop
push
add
or
push
ds
xchg
push
mov
mov
add
cmp
push
and
cltd
mov
cmp
lahf
mov
adcl
loopne
insl
scas
out
test
sub
out
xor
dec
pop
add
cs
add
xchg
insb
pop
inc
add
cmp
dec
bnd
lret
xchg
repz
or
or
pop
cmp
cmp
push
rcll
xchg
out
xor
jbe
mov
mov
add
or
lea
ja
and
pop
stc
xchg
loope
push
shlb
jg
test
pushf
popf
cs
out
mov
jbe
hlt
rcr
bound
lcall
clc
test
or
xchg
dec
mov
sbbl
cmp
cmp
repnz
pop
rcll
xchg
pop
lret
dec
rolb
repnz
lahf
dec
add
push
bound
movsb
stos
inc
add
lock
mov
loope
test
push
xchg
or
add
repz
cmp
add
lret
mov
hlt
or
mov
leave
lcall
jmp
mov
pop
pop
or
xchg
movb
lcall
mov
fwait
scas
jg
out
pop
popf
or
lcall
pusha
add
fisttpl
loopne
imul
mov
addr16
sub
insb
add
mov
or
js
add
jae
leave
scas
mov
out
ret
jge
or
cld
stos
pop
cmp
sub
mov
add
lock
inc
add
dec
and
xchg
out
mov
pop
inc
add
stos
inc
add
lahf
push
add
mov
dec
rcll
jmp
adc
fimull
jmp
fwait
mov
push
int
mov
add
pop
push
push
sti
fwait
arpl
add
jle
int
adc
pop
cwtl
pop
inc
add
cmp
outsb
fidivrs
jo
sbb
arpl
pop
pop
jae
inc
add
ffreep
add
lahf
push
lret
cmp
and
stos
cmpsl
pop
push
cwtl
rcl
dec
push
aaa
and
repnz
rolb
xor
and
add
add
sub
mov
cli
fs
adc
mov
data16
ret
sbb
arpl
je
xor
out
xchg
das
lcall
sbb
add
dec
hlt
fildll
mov
cli
inc
dec
mov
pop
repnz
add
add
or
test
add
ja
add
inc
roll
jle
add
add
jecxz
add
cmp
and
stc
in
and
adc
add
loopne
jo
push
ja
sbb
add
cmp
das
cmc
sub
icebp
xchg
dec
lahf
jnp
xor
adc
lods
cmp
add
inc
fildll
sub
mov
fbstp
dec
icebp
shr
int
outsl
aaa
into
mov
mov
mov
test
arpl
decb
jmp
cmp
add
testb
pop
mov
insb
test
jo
xchg
mov
add
sbb
test
int3
data16
shr
pop
cmp
xchg
push
not
xorl
inc
jae
lds
or
adc
pop
sahf
incb
and
lret
int
ljmp
sbb
frstor
loop
sub
test
jge
sbb
sbb
pop
jo
dec
or
les
addr16
sub
dec
xchg
inc
mov
dec
sahf
mov
add
js
das
add
jne
lea
add
ljmp
inc
rclb
jmp
xor
mov
sarl
notl
movb
pushf
loope
imul
ficompl
dec
pop
or
lock
fsubrs
push
add
pop
push
loope
int
mov
sbb
mov
lods
add
push
sub
add
jnp
lds
in
inc
add
into
push
xchg
xchg
fsubrl
xor
mov
mov
push
push
xchg
fbld
mov
movb
push
add
add
mov
add
push
cltd
inc
lret
mov
sub
stc
das
dec
jae
popa
jmp
mov
mov
out
test
addr16
pop
imul
pop
shll
stc
nop
jl
mov
jmp
jmp
inc
cmpsb
dec
inc
add
adc
add
fucomi
addb
hlt
cwtl
iret
loopne
jo
add
push
imul
mov
dec
scas
mov
loop
sbb
xor
pop
jbe
add
xchg
cmp
js
add
add
clc
mov
nop
cmp
mov
icebp
xchg
rolb
lods
mov
in
xor
push
add
mov
roll
xor
arpl
nop
xor
lcall
lret
adc
repnz
mov
in
mov
xor
dec
es
sti
add
lock
pop
sahf
add
add
hlt
push
cmp
bound
out
cwtl
xchg
shll
enter
dec
sub
cld
jmp
mov
dec
xchg
add
repnz
add
data16
mov
adc
mov
insl
mov
in
add
adc
fists
or
jecxz
xchg
xchg
xchg
into
push
cmp
dec
loope
iret
xchg
call
stc
push
adcl
icebp
sub
or
adc
fidivs
shl
mov
mov
test
rcl
push
mov
fnstsw
mov
dec
loope
lea
ret
add
sbb
hlt
call
sbb
cmp
add
enter
mov
xchg
test
sub
xchg
xchg
lods
gs
or
and
lret
rcrb
pop
fsubl
in
and
sbb
add
adc
mov
jl
fistps
stos
push
bound
push
xlat
fidivs
pusha
add
in
cwtl
gs
loope
fs
and
fwait
cli
lods
jb,pt
jno
xlat
in
fcompl
inc
add
call
jb
imul
stos
cli
xchg
in
push
pop
xor
mov
jmp
lcall
dec
mov
ja
xchg
loop
add
add
stc
ljmp
insb
jmp
push
add
xor
add
xchg
cmc
fnstenv
push
loopne
adc
cmp
lods
xchg
ss
int
clc
scas
mov
adc
cmpl
cltd
mov
mov
mov
adc
lock
repnz
xor
add
sub
shlb
add
fnstcw
inc
mov
aad
add
or
hlt
aam
add
mov
inc
add
adc
repnz
shll
jle
xor
scas
mov
lret
dec
out
push
fisttpl
mov
sbb
repnz
enter
inc
outsb
push
jnp
sub
addr16
xor
mov
cmc
clc
aam
pop
sub
lcall
mov
stos
shr
add
add
xchg
sub
add
add
jne
out
jne
pop
pop
fnstenv
jmp
inc
add
inc
into
sti
pop
ror
iret
mov
mov
shlb
movsb
or
xor
pop
in
sbb
xchg
out
mov
lods
insl
push
jp
pop
lods
pop
jno
ljmp
xchg
addl
push
stc
pop
cmp
inc
add
push
insl
xor
arpl
cltd
pop
inc
fcmovnu
cltd
jmp
pop
xchg
rolb
xor
js
adc
jo
sbb
clc
fnstcw
out
loopne
imul
frstor
or
add
fsub
sbb
push
out
lods
jmp
jge
add
and
mov
je
rclb
movb
inc
jno
mov
sub
jo
jae
xor
push
gs
sahf
mov
mov
and
sub
in
fwait
push
jns
stc
mov
insb
arpl
cmp
xor
test
push
fwait
mov
addb
stc
out
mov
fists
add
xor
dec
jmp
push
mov
je
loop
jle
jge
gs
xchg
clc
and
pop
and
sbb
xchg
add
xchg
das
aas
test
outsl
test
xchg
incb
add
and
cmpsb
insb
cmpsb
cmp
cmpl
jbe
fdivrs
sbb
xor
sti
pop
jae
or
movb
sub
push
fldl
xor
push
sbb
mov
add
cmc
js
out
push
add
mov
jg
scas
rep
pusha
add
xchg
dec
enter
cmp
jne
data16
sahf
addb
and
test
addb
push
icebp
lock
mov
gs
mov
mov
adc
test
sub
or
clc
pop
shrl
sbb
pop
fistps
mov
mov
fiadds
push
popf
xchg
les
xor
push
jl
add
les
pop
push
cmc
call
hlt
mov
movsl
xchg
xchg
dec
and
rcl
in
jge
movl
mov
add
dec
add
imul
xchg
subl
adc
or
add
ja
outsl
xchg
jo
adc
sbb
or
push
lret
add
pop
or
xorl
js
add
push
add
jge
inc
add
add
jbe
xchg
addb
lock
mov
cmp
ret
leave
add
sub
xchg
jg
inc
dec
gs
add
rclb
jbe
xchg
adc
imul
sub
outsl
rcrl
mov
mov
ljmp
add
ret
xchg
aam
ljmp
test
movsl
inc
add
jno
cmpsb
les
js
ficompl
clc
xor
addb
addb
jbe
aam
and
cltd
cmp
cmp
cmpsb
movb
ljmp
lods
in
pop
rol
add
or
ss
pop
jl
xchg
sti
sub
push
outsl
enter
sbb
insb
sete
add
test
pop
popa
mov
arpl
xor
rcll
addr16
ja,pn
stc
pop
adc
push
cmp
fwait
cmp
add
add
outsl
lods
fnstsw
add
out
cltd
cmp
cs
scas
xor
test
xchg
add
les
inc
mov
mov
rcll
xor
addl
dec
out
sbb
aad
jae
push
sub
xchg
pop
or
dec
insb
popa
and
xchg
aad
add
xchg
scas
cmp
test
mov
data16
sarl
js
sub
add
scas
cmp
add
fidivl
imul
and
testb
mov
or
repz
aaa
call
repz
add
nop
shrb
bound
out
add
shr
mov
mov
sbb
push
dec
jnp
add
jo
insl
test
icebp
and
mov
outsl
nop
xchg
icebp
sub
xor
xchg
cmc
push
sub
add
fldl
push
push
xchg
das
sar
jp
dec
inc
adc
xor
or
jmp
ret
rolb
push
popa
push
xchg
cmp
dec
daa
mov
add
inc
mov
add
push
xchg
lcall
inc
add
int3
pop
or
pusha
add
cmc
frstor
mov
mov
xor
xchg
ret
add
adc
xchg
sti
mov
cmp
out
xchg
sbb
adc
mov
mov
rolb
fsubrs
or
addb
and
aam
mov
dec
xchg
add
pop
cmp
adc
arpl
std
mov
or
xor
lret
or
lea
adc
add
sub
sub
inc
or
push
cmc
mov
cmpsl
sub
mov
ss
out
mov
sti
fidivrl
cltd
cmp
lods
int
les
mov
push
mov
pushf
xchg
mov
push
add
add
sti
inc
add
lahf
add
adc
sbb
add
test
pop
lds
mov
or
sti
or
jmp
es
fimuls
jne
sub
push
cmc
push
loop
jl
adc
and
or
and
in
arpl
add
push
push
push
add
pop
mov
or
shll
xchg
rol
add
push
or
pop
movb
add
mov
fstl
stos
iret
repnz
sub
in
xchg
divps
fbld
dec
jg
ja
scas
mov
mov
bound
lahf
jle
cs
dec
or
sbbl
add
and
aad
xchg
pushf
xor
in
and
sub
cmp
add
shlb
clc
loopne
sbb
add
test
push
or
add
mov
test
shr
mov
push
push
mov
arpl
jb
cmp
loopne
jl
test
movsb
in
xchg
cli
mov
pusha
add
add
add
nop
pop
fisttps
fstpt
fidivrl
sbb
lcall
dec
scas
sbb
push
push
loop
lods
jp
addr16
adc
mov
pop
test
cmp
jg
jne
test
lock
dec
lret
call
ret
dec
out
loopne
js
sub
xor
nop
call
push
inc
push
inc
rolb
jg
cmpsb
repnz
mov
or
inc
xor
pop
adc
loope
inc
add
test
jno
xorl
ja
fdiv
jmp
ds
jo
shlb
int3
sbb
add
jmp
stc
xor
lods
stos
inc
add
std
push
aaa
addb
pop
fs
sub
lods
jno
int3
xchg
movb
xor
test
dec
ja
insb
inc
xchg
nop
mov
ret
pusha
add
add
cld
adc
lock
add
daa
aaa
je
idivb
js
and
mov
sub
pop
movb
movsb
test
in
cmc
mov
dec
add
inc
add
test
dec
inc
lods
adc
add
sub
sti
cmp
loop
iret
rcll
cmp
enter
les
daa
add
mov
and
je
sub
add
sbb
loope
lea
orl
xchg
and
push
lods
outsb
shl
aad
add
scas
xchg
sub
scas
jns
lahf
mov
dec
jl
mov
shr
rclb
inc
mov
test
inc
adc
bound
fdivl
mov
shll
aam
insb
into
pop
stos
dec
out
dec
stos
pop
adc
lods
rcrl
aas
gs
fstps
jl
push
scas
in
sub
scas
jl
adc
imul
add
xchg
test
filds
jmp
jg
jecxz
cmpsl
mov
dec
and
in
sbb
insl
and
xchg
pop
aaa
or
loope
adc
and
xchg
inc
scas
pop
call
xor
incb
or
jle
jo
mov
clc
push
add
addl
jns
add
jb
jge
cmc
mov
xorl
dec
adc
ss
mov
gs
daa
cmp
daa
out
add
or
inc
pop
sub
cmp
jecxz
cmp
jb
inc
add
popf
dec
push
adc
add
aam
and
loop
popa
lods
mov
adc
add
loop
pushf
movb
and
mov
mov
inc
add
mov
mov
leave
aam
inc
add
lock
mov
mov
add
push
add
mov
mov
sub
add
add
stos
cmp
dec
mov
pusha
add
aas
cltd
test
add
fsubl
lods
jbe
mov
cmp
mov
or
fs
dec
test
addb
mov
mov
stos
ret
fstps
test
inc
add
xor
addb
fnsave
sub
add
and
test
in
mov
jbe
add
sti
dec
lcall
imul
push
loopne
data16
in
je
fwait
jb
aad
add
xchg
xor
mov
adc
xor
mov
sahf
mov
cmc
jne
or
loopne
push
xor
lock
les
das
mov
ss
pop
add
aas
lret
out
inc
add
xor
in
xchg
push
iret
je
adc
stc
in
adc
pop
sbb
lea
jl
and
mov
lock
jbe
mov
outsl
mov
sbb
ss
add
inc
xor
fcmovne
loope
in
scas
cli
fdivrs
scas
mov
pop
dec
add
pop
inc
je
xchg
insb
jge
lret
fucomip
mov
call
clc
repnz
sbb
add
inc
cmp
fdivrs
mov
movsb
adc
dec
lock
mov
mov
enter
jae
int3
cmp
jbe
addb
xchg
mov
inc
adc
lods
mov
rcrl
inc
add
inc
add
jg
sbb
loope
add
pop
cli
dec
mov
xchg
es
mov
stos
adc
jl
lods
inc
add
lds
jo
add
and
fstps
in
sbb
pop
pusha
add
mov
push
loope
push
clc
jne
stc
xor
in
add
daa
cmp
out
mov
sub
mov
add
xchg
outsb
cmp
mov
les
stos
sub
add
or
fxch
je
adc
jo
mov
hlt
mov
jae
cld
clc
add
xor
dec
cmpsl
push
dec
inc
clc
push
mov
pop
shlb
ja
icebp
test
imul
cmp
iret
or
rorb
cmp
xchg
bound
sub
imul
xor
or
mov
lods
push
mov
popf
pop
clc
inc
cmp
jne
sbb
fcmovne
pushf
rclb
sub
clc
out
xor
sub
dec
imul
mov
jge
out
into
push
in
inc
jne
nop
dec
stos
xor
push
push
xor
mov
jl
pop
mov
xchg
mov
adc
push
mov
sbb
jnp
mov
popa
mov
xchg
xchg
cmc
ret
xor
fcoms
sbb
or
sbb
leave
or
mov
or
xchg
loop
mov
xor
adc
cltd
ja
js
add
leave
in
fildll
cmp
nop
lods
cmp
out
icebp
addb
sub
lret
mov
add
cli
push
loopne
jns
cmp
cli
jno
or
adc
mov
es
add
cwtl
mov
add
lea
mov
