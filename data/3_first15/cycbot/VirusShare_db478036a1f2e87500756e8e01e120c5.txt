stc
pop
lock
outsb
aad
loope
mov
mov
movsb
stos
pop
and
neg
and
sub
in
iret
enter
insb
xchg
or
mov
sahf
int
push
fcoms
add
pop
mov
mov
pop
push
pop
dec
fiaddl
inc
enter
xor
pop
cmp
inc
add
data16
cmp
mov
lret
inc
jmp
outsl
scas
sub
push
and
fsubs
xchg
daa
inc
insb
sahf
mov
inc
mov
daa
movsl
jno
or
add
mov
add
pop
js
push
dec
push
add
into
scas
clc
bound
mov
enter
add
icebp
jnp
jl
roll
or
add
mov
pop
aaa
push
ljmp
add
fmul
iret
dec
xchg
das
fcoml
mov
pop
cmp
notb
cs
lret
lahf
stos
or
fnstsw
mov
lock
adc
mov
mov
fs
call
mov
out
aaa
jne
fcomps
cmpsl
das
loope
es
pop
push
sbb
out
inc
addr16
rolb
mov
fs
iret
outsb
pop
lcall
lret
pusha
add
rolb
mov
xchg
add
cld
adc
mov
sbb
add
rolb
mov
xchg
sbb
add
add
mov
mov
adc
add
sbb
dec
out
scas
scas
jae
add
sub
pusha
add
mov
fstpl
sub
in
jg
aaa
mov
fwait
lods
and
jo
mov
rcll
pop
ljmp
jg
insb
add
mov
push
mov
sub
imul
add
xchg
dec
push
push
mov
in
popf
jmp
addb
loopne
mov
inc
cmc
and
shll
mov
add
mov
dec
sbb
add
je
outsb
fisubl
push
add
stc
xor
mov
fdivrs
std
loop
mov
mov
sti
xchg
jo
mov
push
and
add
jge
sub
mov
add
or
add
push
ds
mov
xchg
sbb
sahf
cmpl
out
lds
jbe
add
sahf
sarl
add
mov
and
add
sub
and
loope
cmc
sti
mov
push
push
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
add
mov
mov
out
mov
add
lods
pop
imul
sti
imul
stc
std
mov
add
sub
imul
mov
loopne
mov
add
mov
add
jl
mov
lock
fdiv
add
mov
mov
jnp
xchg
push
push
addb
sbb
pop
stos
push
add
mov
sub
test
sub
adc
mov
mov
mov
sub
add
mov
das
push
add
add
cmp
push
add
add
mov
cmp
ror
sti
sub
clc
or
adc
out
test
cmovo
mov
addb
mov
icebp
add
insl
add
add
inc
add
cmp
sarl
xchg
sbb
xor
lcall
add
mov
outsb
and
mov
sub
jmp
adc
jp
pop
xchg
sbb
xor
mov
cmp
xchg
lahf
hlt
mov
testl
mov
push
outsl
or
mov
daa
cld
sub
add
jge
sub
scas
cmp
jmp
fwait
cmp
call
mov
xor
push
add
mov
frstor
popf
lahf
xchg
repnz
cltd
repnz
or
xchg
shll
mov
cltd
insb
call
rorl
add
out
cmp
add
cmpsb
push
cmp
jp
sbb
add
mov
fwait
or
fdivrp
pop
out
push
pop
sahf
mov
lahf
pushf
aam
push
outsb
int
add
xor
mov
mov
mov
ror
inc
cmp
push
rcrl
popf
roll
xor
add
pop
jg
xor
popa
jecxz
add
lods
mov
mov
stos
lcall
add
jnp
imul
pop
inc
fcmovb
add
fstpl
xchg
mov
add
inc
sbb
add
test
mov
add
popl
cmp
xchg
add
add
xor
sbb
out
add
xchg
add
mov
faddp
test
lods
push
stos
aam
imul
cmp
fdivr
fisttpll
push
add
mov
lods
add
mov
add
mov
notl
outsb
sbb
mov
push
dec
inc
fsubrl
cmp
xor
push
cmpsl
or
in
in
add
xchg
jbe
pop
ret
xlat
dec
sarl
iret
jg
cmp
pop
and
mov
jg
jg
cmp
pop
leave
addb
pop
out
add
mov
fadd
dec
fisttpl
int
imul
dec
cmp
in
ret
imul
jbe
negl
dec
loopne
mov
movsb
mov
popf
jl
rolb
mov
mov
mov
lcall
jmp
lods
xchg
add
imul
addb
mov
inc
add
fimull
nop
add
lods
fcoms
fbld
stos
xchg
add
iret
syscall
xchg
cs
pop
fnstenv
add
jmp
jne
add
mov
push
mov
xor
popf
sbb
sahf
push
add
ss
mov
add
or
fistpl
mov
rolb
mov
hlt
sub
mov
lods
ja
test
add
ljmp
daa
int3
mov
xor
lcallw
mov
add
rcl
mov
out
aam
xchg
and
mov
mov
stc
dec
es
push
aaa
sub
lea
outsl
fcomi
push
jno
out
mov
mov
out
cmc
mov
mov
outsl
push
dec
xchg
push
pop
repnz
lcall
iretw
inc
sub
lock
jecxz
pushf
iret
bound
mov
icebp
push
inc
into
pushf
and
mov
add
mov
add
mov
sbb
cmp
test
aad
add
jo
mov
add
add
adc
add
push
test
mov
adc
stos
adc
add
xor
pop
xchg
add
mov
mov
scas
xchg
stos
sti
jo
mov
mov
mov
cmp
data16
or
add
jecxz
sub
add
or
ret
shll
cmpsl
sbb
mov
dec
add
jae
pop
flds
push
lods
bound
mov
add
add
add
add
int
sbb
loop
mov
out
addb
call
pop
inc
lods
ss
dec
lds
nop
add
ljmp
add
and
mov
std
sub
xor
cmp
dec
dec
jbe
add
mov
and
mov
aad
inc
mov
in
push
add
test
pop
lcall
popa
test
add
push
in
mov
sti
ljmp
dec
ret
push
inc
xor
sbb
add
add
cmpsb
sub
scas
and
add
insb
sub
cmpsl
negb
mov
mov
ja
push
sub
pusha
add
fsub
cmp
lcall
jge
dec
pop
test
imul
mov
push
in
insb
les
cmp
inc
cld
mov
les
dec
add
rolb
mov
out
fidivrs
push
insl
adc
mov
mov
pop
jns
lock
movl
add
mov
ss
mov
ds
fldlg2
pop
pop
and
add
stos
mov
jbe
adc
mov
nop
add
push
stos
hlt
or
mov
sbb
repz
add
dec
add
jne
les
insl
jnp
mov
ja
jp
add
mov
add
mov
mov
sbb
stc
adc
mov
xchg
loopne
mov
dec
outsb
scas
gs
mov
mov
stos
mov
mov
js
mov
dec
loop
mov
xchg
push
pop
test
dec
xor
fstpt
cwtl
and
mov
or
add
xchg
std
fisubl
dec
adc
mov
and
jecxz
mov
mov
inc
add
add
or
add
cmpl
xor
cmp
mov
stos
mov
mov
sbb
mov
sbb
clc
push
add
test
inc
dec
lock
mov
loop
mov
pop
add
mov
mov
add
mov
fistpl
repz
cwtl
ss
lock
pop
dec
inc
mov
jmp
xchg
sar
addb
aam
das
rcrl
lods
test
mov
pop
dec
dec
outsl
xor
addb
mov
mov
arpl
pop
aad
push
pop
mov
leave
jp
add
lods
popa
xchg
mov
pop
jecxz
jne
xchg
stc
xor
mov
repz
cmp
pop
or
into
std
das
cli
addr16
bound
mov
out
mov
out
inc
aam
sahf
in
daa
cmp
xor
cld
je
incl
add
imul
push
or
adc
in
rcll
iret
lret
mov
dec
pop
enter
repz
dec
xchg
add
and
addb
cmp
pop
into
push
clc
test
hlt
or
test
mov
add
mov
sub
lock
add
xchg
add
jg
or
mov
jg
bound
mov
cmc
popf
mov
pop
jp
mov
stos
lret
int3
pop
push
cmp
test
cld
movsb
inc
add
push
inc
add
cmp
flds
bound
mov
xchg
out
addb
into
data16
add
and
sbb
shrw
add
aam
sub
loop
mov
push
mov
jmp
mov
lea
add
sti
je
addb
add
roll
add
add
sbb
in
ret
or
aam
sub
mov
icebp
shrl
clc
mov
add
mov
test
insb
les
out
push
cmc
mov
mov
imul
pop
xchg
pushf
push
xor
push
add
pop
dec
mov
add
add
int3
pop
fsubrp
mov
dec
out
repz
mov
stc
push
xchg
fsubrl
out
adc
sbb
adc
mov
cmp
mov
inc
shll
mov
add
add
mov
lahf
lcall
je
lds
dec
out
pop
dec
mov
sbb
nop
add
dec
ss
and
movsb
xchg
lret
ja
adc
mov
add
rorl
push
cltd
mov
jecxz
sub
xchg
pop
mov
add
jmp
test
mov
mov
addr16
mov
lods
xchg
and
mov
add
jl
ret
cmp
sbb
or
call
or
cmp
popf
and
call
fcmovnu
cmpxchg8b
sub
fistpll
sub
sbb
dec
enter
lcall
mov
leave
pop
arpl
push
popa
mov
mov
icebp
loopne
mov
orl
mov
inc
cmp
push
cld
mov
jmp
pop
dec
testb
jb
mov
adc
rcll
nop
add
fwait
jecxz
hlt
movsl
xchg
or
jno
add
bound
mov
in
mov
dec
mov
xchg
cmpsl
addr16
add
add
mov
inc
call
subl
mov
xchg
add
pop
pop
push
and
pop
mov
insl
pushl
sub
leave
jb
mov
sub
clc
mov
int
xchg
mov
sub
mov
mov
bound
mov
inc
add
mov
jl
dec
add
xchg
loopne
mov
add
add
pop
sbb
test
dec
pushf
inc
sub
lcall
sbb
ljmp
cld
cltd
fcomps
ds
aam
jo
mov
or
sbb
mov
mov
mov
or
push
inc
dec
mov
das
xor
cmp
fstps
xchg
cmpl
ss
pop
and
mov
mov
aas
inc
push
sub
imul
add
sub
cltd
mov
jbe
adc
mov
fwait
sub
mov
sbb
sub
fistpll
cmp
mov
mov
in
fnstenv
std
xchg
daa
sub
mov
add
mov
mov
add
xchg
jecxz
push
push
jbe,pt
loopne
mov
aas
stos
imul
add
nop
add
mov
xor
cwtl
jp
cltd
outsb
fadd
in
add
xor
in
mov
lods
arpl
cmp
mov
mov
dec
addb
loope
jg
add
lahf
daa
popa
out
lea
ret
jle
jge
or
dec
jne
mov
jae
dec
sbb
sti
jbe
pop
inc
js
in
aaa
mov
xchg
enter
dec
addb
into
std
xchg
leave
daa
dec
dec
je
inc
cmp
cs
add
dec
cld
repz
in
movsl
ljmp
sub
loop
mov
or
sbb
mov
pop
lea
xor
mov
addb
rolb
adc
mov
pop
cmpsb
cmp
pushf
xchg
jle
fucomip
cs
mov
add
sbb
inc
jnp
rolb
cmp
ss
test
add
in
push
addb
and
push
xchg
mov
add
mov
add
add
cmpsb
icebp
xor
mov
add
push
dec
mov
mov
sbb
jmp
les
in
nop
add
mov
sbb
mov
pusha
add
ret
mov
sub
mov
mov
dec
mov
add
and
cmpsl
adc
fisttpl
add
add
add
lods
fisttpl
outsb
adc
mov
push
and
test
shrl
xchg
xor
mov
mov
aad
dec
pop
inc
add
clc
sahf
stos
fsubl
push
ret
mov
push
lret
fs
add
mov
adc
sub
pop
xor
fidivrs
add
inc
add
repnz
shl
sub
inc
cs
insb
addb
js
sub
or
cmpl
mov
std
cmp
mov
xor
mov
repz
mov
or
nop
add
cmc
pop
and
mov
mov
out
movb
addb
sbb
ficoms
nop
add
addb
pop
xor
mov
dec
adc
mov
addl
dec
pop
mov
mov
js
lahf
jecxz
imul
add
push
add
mov
les
mov
push
test
push
call
adc
outsl
adc
mov
mov
dec
lock
add
out
xor
mov
sub
fidivrs
cltd
nop
add
xlat
dec
ja
mov
push
add
mov
inc
add
inc
sahf
lods
inc
add
jl
lcall
sbb
add
fiadds
pop
cmp
mov
push
fcompl
ljmp
mov
mov
inc
xchg
inc
scas
stc
sub
and
jge
xor
out
inc
addb
sbb
add
arpl
je
pop
int3
sbb
adc
mov
dec
mov
xchg
addr16
jnp
or
mov
lret
repz
mov
mov
inc
add
add
add
mov
add
repz
inc
fisubrs
scas
push
popa
out
lds
mov
add
add
mov
leave
fucomip
mov
add
mov
jl
pop
pop
mov
mov
dec
mov
hlt
mov
notb
das
sub
inc
cmp
cmp
imul
mov
add
rolb
mov
fidivl
ret
add
mov
mov
mov
aam
test
int
shr
loop
mov
xor
adc
mov
loopne
mov
mov
push
push
les
lds
sbb
lcall
stc
adc
mov
push
ljmp
mov
add
fildll
xor
sbb
mov
mov
xor
inc
mov
and
add
shl
sub
mov
xchg
pop
mov
mov
xchg
mov
add
push
add
mov
mov
xlat
inc
dec
sahf
xchg
sbbl
fsubrl
jbe
mov
das
les
add
mov
mov
mov
mov
or
and
and
mov
rolb
mov
mov
add
add
jl
adc
sti
cmpsl
mov
sub
add
ljmp
in
movsl
test
ja
mov
xor
mov
add
fs
movsb
sbb
cmc
mov
lcall
sahf
roll
sbb
dec
adc
mov
dec
into
cmc
pushf
or
mov
add
add
mov
add
stos
out
push
add
mov
loopne
mov
add
xor
pop
pop
cmp
jne
mov
pop
jle
paddd
repz
pusha
add
mul
add
inc
jns
mov
dec
mov
mov
xor
mov
add
in
push
pop
roll
es
rolb
dec
mov
add
fiadds
xor
mov
xor
cmp
xor
mov
fldln2
push
add
ja
movsl
mov
mov
add
sbb
aam
pop
jno
adc
dec
dec
mov
in
jns
mov
add
mov
add
sub
mov
ret
xchg
stos
aam
xor
xchg
xor
mov
add
jg
test
arpl
push
clc
cmp
xchg
cwtl
jbe
mov
fs
mov
add
mov
sbb
fwait
mov
and
add
dec
inc
add
cmp
pop
jns
adc
xchg
in
xor
out
pop
in
cmp
stos
mov
jmp
or
out
ljmp
and
mov
inc
cli
das
cmpsl
imul
mov
add
push
jmp
sub
add
mov
cs
inc
add
add
outsb
or
push
jns
sub
scas
inc
dec
cltd
scas
rolb
mov
xor
dec
pop
sub
out
testb
sbb
js
cmp
pop
ds
add
jb
mov
jle
dec
mov
cld
popf
mov
add
popf
sahf
insl
cmc
inc
push
and
and
push
add
add
mov
xchg
sbb
jp
fdivrs
jns
addr16
pushf
xor
pushf
pop
push
adc
int3
imul
addl
push
dec
popa
mov
out
dec
push
jp
add
loopne
mov
popf
jns
or
mov
es
addr16
lock
cwtl
ret
jb
mov
int3
aaa
adc
mov
in
adc
mov
mov
fwait
aam
add
mov
add
mov
xorl
pop
pop
fmuls
jae
mov
roll
aam
xlat
push
addb
aaa
cmc
out
stc
xor
aaa
inc
push
cs
orl
adc
mov
or
cmpsl
push
pop
shll
jmp
in
cmp
add
lea
testb
bound
mov
cmpsb
sbb
mov
mov
cli
js
movl
lods
xor
add
jne
cld
cli
test
les
xchg
add
inc
add
add
ffree
adc
mov
test
mov
movsl
cmp
daa
xor
mov
mov
mov
sarl
divl
out
outsb
jge
dec
out
sub
pop
inc
ja
mov
testb
insb
sbb
addb
push
movsl
mov
mov
push
mov
add
mov
add
mov
or
add
leave
mov
add
push
pop
out
gs
cmp
repz
addl
scas
pushl
xchg
insb
in
xchg
dec
out
icebp
cmp
sbb
jb
mov
adc
mov
inc
xchg
cmpsl
jbe
add
push
enter
adc
add
xor
mov
daa
dec
jb
mov
cs
mov
sub
push
pusha
add
fsubp
daa
into
push
add
pop
dec
rolb
mov
negb
mov
jnp
pushf
ja
dec
rol
popf
sbb
add
jmp
enter
mov
lret
xchg
testl
addb
jle
in
add
fwait
icebp
cwtl
inc
and
mov
mov
rolb
or
cmp
push
mov
mov
add
mov
add
or
add
mov
xchg
adc
or
mov
icebp
cmpsl
mov
add
jae
jbe
test
pop
icebp
lods
scas
stos
testb
mov
icebp
xchg
add
adc
in
lods
inc
add
push
lahf
push
sbb
sti
ficompl
in
add
pop
in
mov
imull
mov
push
add
mov
inc
add
push
fucomip
xchg
xchg
xor
mov
mov
fcmovu
gs
sub
clc
xor
mov
mov
mov
stos
test
mov
add
or
or
add
scas
arpl
outsl
data16
sbb
stos
xlat
std
mov
mov
negl
push
enter
outsl
fcoms
add
and
loop
mov
add
add
jns
add
jl
mov
xchg
addb
repz
outsl
xor
aad
inc
adc
mov
add
mov
xlat
jmp
xchg
repz
inc
add
in
add
add
add
add
add
pop
les
int
add
dec
jnp
xchg
add
xor
scas
mov
pusha
add
push
orl
sbb
mov
and
mov
fwait
unpckhps
aad
dec
outsl
clc
pop
push
roll
mov
add
outsl
lock
add
push
add
add
rolb
mov
or
rolb
mov
or
or
add
jns
test
jle
into
es
addb
aam
mov
sbb
sbb
jnp
add
mov
mov
mov
add
push
push
pop
nop
add
mov
mov
aas
ds
or
add
jmp
adc
mov
mov
inc
jbe
push
outsl
xlat
inc
add
cmpsb
and
mov
rol
repz
mov
jnp
cli
data16
mov
lea
push
inc
and
add
scas
fcompl
mov
mov
adc
notb
arpl
fisttpll
bound
mov
mov
mov
out
add
mov
push
popf
outsl
adc
mov
inc
mov
jno
xchg
or
xchg
dec
inc
shl
mov
xchg
add
mov
mov
push
cmp
add
pushf
jl
mov
in
imul
sub
add
dec
int
cltd
dec
movsl
subl
addb
stos
lea
push
iret
sub
pusha
add
jp
xor
add
mov
add
add
je
add
clc
loopne
mov
std
pop
and
mov
pop
nop
add
hlt
fbld
adc
mov
sbb
jmp
sub
addb
sub
popl
add
imul
repz
lahf
out
pop
push
sbb
jb
mov
mov
xchg
and
fldl
mov
ret
push
inc
add
cmp
incl
sbb
lea
add
inc
loope
add
sub
add
add
jmp
or
test
dec
mov
out
mov
mov
add
add
arpl
dec
dec
sbb
add
addb
sub
rolb
xchg
popa
inc
push
push
sub
loopne
mov
jge
pusha
add
add
push
xchg
add
xorl
mov
mov
add
xchg
push
add
repnz
jecxz
add
mov
mov
cli
xor
movsb
ja
cmp
jno
xor
add
xchg
add
nop
add
add
add
je
sub
lahf
jg
jl
push
idivl
int
mov
inc
into
push
nop
add
inc
push
pop
addb
sub
cmpsl
xchg
rolb
mov
or
fldpi
xchg
add
adc
push
adc
ds
pop
push
dec
add
mov
mov
out
mov
out
cmpsb
or
xor
out
int3
dec
js
mov
sub
scas
test
add
mov
sbb
add
mov
pop
mov
add
mov
add
loope
add
mov
xchg
test
dec
test
rolb
mul
out
push
inc
add
jns
xor
mov
lods
test
pop
stos
outsl
ja
push
add
int
out
and
mov
inc
or
mov
xchg
xadd
mov
sub
stc
push
mov
fisttpll
sub
inc
add
in
idivl
mov
mov
add
mov
pusha
add
test
mov
jmp
sub
add
or
pop
iret
fisubrs
pusha
add
fstps
mov
mov
pop
push
dec
xor
aaa
aam
add
push
push
add
mov
cld
xchg
lock
and
pop
xor
stos
adc
and
dec
aad
add
mov
push
jge
andl
jge
inc
add
lcall
xchg
gs
mov
add
add
addb
cltd
inc
rcll
mov
lret
popf
push
add
cli
sbb
in
push
imul
push
das
out
enter
push
addb
arpl
lahf
push
hlt
pop
loopne
mov
fstl
add
nop
add
scas
je
pop
inc
popa
aad
cwtl
or
mov
bound
mov
test
xor
mov
addb
in
add
inc
rcrl
rolb
mov
rcrl
add
sbb
int
push
sti
or
je
fdivr
scas
gs
push
scas
push
stc
daa
leave
push
and
mov
pop
lcall
incl
add
jnp
mov
push
ja
rolb
leave
xchg
fidivrs
out
or
js
adc
mov
stc
and
jno
pop
inc
pop
outsb
cmp
and
jns
xor
sub
mov
out
lods
fs
gs
nop
add
jl
add
imull
mov
or
sbb
test
aas
aas
imul
mov
popl
mov
mov
mov
mov
scas
outsl
test
sub
add
and
mov
cmp
push
add
jl
inc
add
sbb
add
ljmp
jbe
lcall
testb
add
decb
pop
inc
mov
add
mov
jb
mov
or
add
pop
mov
mov
int3
stos
xchg
rolb
adc
and
mov
add
mov
add
add
inc
insb
shll
ret
adc
scas
xchg
and
mov
cmp
cmpsb
and
mov
mov
mov
cwtl
sbb
test
sub
mov
jle
pop
enter
cmpsl
fisubs
mov
imul
cmp
add
out
rolb
mov
movsl
in
jb
mov
add
mov
xchg
add
cmp
mov
je
jnp
mov
shll
into
inc
pop
add
mov
mov
or
dec
je
movsl
pop
fwait
outsl
lock
add
add
or
mov
inc
arpl
inc
lcall
ljmp
in
xchg
add
add
lods
or
add
add
add
mov
inc
add
shrl
sub
mov
add
mulb
clc
push
push
cmpsb
insl
call
loop
mov
mov
dec
mov
add
push
ds
aam
les
outsl
js
jl
xor
mov
mov
lret
inc
add
mov
mov
sar
pop
xor
add
inc
lds
movsb
das
fidivs
xlat
dec
sbb
sub
test
dec
jmp
int
pop
outsl
test
jno
mov
xchg
insl
cmpsl
cmp
mov
out
adc
dec
cs
mov
xchg
cmp
iret
test
and
mov
dec
daa
or
xchg
add
push
add
add
xchg
mov
mov
jecxz
xchg
fucomip
fsubrl
int
imul
mov
add
adc
mov
add
cld
inc
es
and
add
outsl
pop
mov
mov
pop
and
subl
sub
test
cmpxchg
adc
mov
push
cmp
hlt
loop
mov
outsl
push
or
mov
leave
mov
test
movsl
xchg
mov
mov
jecxz
mov
sbb
icebp
aaa
push
in
stos
xor
mov
mov
mov
xchg
or
aaa
aaa
push
add
push
loopne
mov
add
xor
mov
lods
mov
aad
mov
icebp
inc
add
mov
cltd
or
pop
je
add
add
mov
fistl
sub
inc
mov
and
shll
xchg
sbb
xchg
push
cmp
xor
mov
push
outsb
jmp
mov
cmp
push
mov
mov
testb
mov
mov
ljmp
sub
mov
lock
and
mov
repz
and
mov
push
xchg
add
add
das
inc
mov
popa
jbe
push
mov
cwtl
cmc
lods
and
mov
fsubl
xchg
out
fnstcw
mov
dec
sub
popf
push
mov
and
cld
jmp
stos
jmp
test
sub
sahf
les
cltd
insb
sbb
fstl
outsb
push
push
cmp
mov
mov
rcrl
adc
mov
inc
add
test
je
add
add
jle
push
or
mov
push
sub
pop
lret
movl
stos
cld
jmp
and
dec
xor
mov
xor
mov
test
mov
add
sub
mov
cli
jns
cmpsl
test
mov
mov
push
add
xchg
mov
std
sub
fcoms
mov
aaa
cwtl
sub
xor
mov
mov
add
out
inc
in
fsubs
pop
inc
jne
dec
pop
xchg
add
jge
add
and
cmp
lcall
add
jmp
add
outsl
test
int
in
and
mov
jecxz
fcomi
rolb
mov
add
cmp
or
xor
mov
add
add
add
lds
dec
mov
dec
mov
push
sub
test
pop
fnsave
sub
sub
inc
add
add
mov
mov
aam
pop
mov
add
enter
push
aam
add
add
scas
in
jne
dec
xor
mov
add
add
out
dec
and
mov
lcall
and
mov
and
adc
jns
xchg
push
add
add
xchg
jle
out
jl
sbb
pushf
pop
mul
lods
inc
sbb
fcmovnbe
fstpt
mov
sbb
cs
cmp
add
test
rolb
xchg
movsl
test
leave
push
loop
mov
sbb
lds
dec
out
adc
and
test
hlt
cmp
add
add
mov
add
sbb
ss
add
add
cld
cli
pop
push
cld
push
xchg
gs
push
add
add
imul
mov
jo
mov
mov
in
rolb
mov
cmp
and
mov
cli
je
push
pop
mov
cwtl
fwait
xchg
push
add
cmp
mov
clc
adcl
ja
mov
dec
push
jecxz
outsb
jo
mov
cmpsl
pop
push
add
or
mov
add
jmp
sub
add
add
xor
mov
cmp
xor
add
mov
rolb
cltd
rolb
mov
mov
call
outsl
pushf
icebp
mov
add
add
add
mov
fs
stos
int
lret
fs
pusha
add
xchg
push
cmp
mov
add
mov
add
mov
add
jecxz
and
mov
or
inc
je
les
rcll
cld
clc
icebp
daa
sub
fwait
mov
add
out
dec
mov
test
arpl
lret
add
mov
adc
inc
mov
decl
scas
mov
ljmp
fdivrs
mov
cmc
cs
jmp
addr16
call
mov
lcall
jnp
pop
sub
sub
iret
push
popa
fs
aam
sti
inc
data16
dec
jnp
cwtl
pop
into
push
cmp
ja
xlat
setge
inc
nop
add
adc
mov
mov
push
inc
add
lds
mov
pop
dec
xor
cld
mov
das
lds
and
ja
jo
mov
or
sub
xchg
add
pop
or
jecxz
mov
cltd
mov
add
dec
test
add
jns
mov
ss
add
imul
mov
mov
add
in
int
add
xchg
pop
inc
ret
test
andl
jne
mov
inc
inc
sub
mov
push
outsb
sti
loopne
mov
data16
push
mov
sub
add
loope
mov
add
call
movsb
push
sub
adc
mov
add
mov
add
jns
icebp
xchg
sbb
pop
imul
ja
xchg
add
xchg
repnz
addr16
aam
sbb
fisubrl
stc
and
mov
loope
hlt
out
jb
mov
cld
xor
mov
cmp
or
nop
add
add
adc
ja
cwtl
out
push
hlt
xlat
mov
inc
adc
mov
add
jb
mov
mov
mov
test
pop
out
adc
mov
push
jmp
sub
loop
mov
add
mov
jo
mov
pop
lahf
jl
lock
mov
loopne
mov
dec
test
sbb
push
jmp
sahf
std
mov
insl
clc
or
mov
test
in
cmp
hlt
les
mov
lds
mov
repnz
mov
mov
clc
aad
scas
js
jge
movsl
insl
add
mov
inc
ss
cwtl
loopne
mov
add
jb
mov
sahf
into
js
adc
aaa
xchg
sub
xor
mov
mov
push
add
pushf
cmc
sub
loope
fwait
pop
fldl
add
mov
cmp
sub
sub
fdivs
mov
into
cmp
sbb
or
out
xchg
in
inc
and
mov
insl
rolb
sbb
pop
mov
adc
mov
test
mov
sbb
gs
bound
mov
inc
outsl
mov
push
rolb
mov
and
mov
sub
add
leave
sub
add
mov
inc
add
jl
add
test
jl
jnp
out
insl
stc
js
je
dec
jge
and
adc
cmp
cld
jp
xor
add
jbe
inc
mov
aam
ret
add
insl
int
mov
mov
sbb
add
jg
adc
mov
xor
mov
add
inc
or
jns
dec
mov
sti
and
mov
leave
das
xor
mov
sub
and
pop
nop
add
addb
and
mov
cltd
jae
dec
jle
add
sub
mov
clc
fsubrp
idivl
pop
or
cmc
scas
je
push
add
jmp
test
dec
aad
sbb
pop
mov
and
mov
push
test
add
filds
add
add
ja
jne
sub
ja
cmp
add
mov
adc
mov
dec
mov
add
lods
call
and
mov
addb
pop
inc
shl
pop
cmp
add
leave
idivl
xor
inc
je
aas
dec
dec
sti
in
xor
mov
out
mov
mov
jge
jb
mov
mov
mov
daa
scas
cs
or
mov
daa
xchg
add
mov
jno
sub
in
imull
mov
mov
or
add
ljmp
jge
mov
inc
addr16
stc
adc
or
dec
lds
stos
stos
js
xchg
lret
fs
xor
mov
add
adc
xchg
push
lret
jo
mov
roll
add
int3
pop
mov
xchg
and
mov
mov
call
xchg
arpl
add
inc
popa
xchg
mov
mov
mov
insl
adc
mov
es
and
mov
add
fs
add
adc
add
add
gs
add
out
mov
mov
mov
or
add
mov
je
in
mov
ss
rolb
repz
mov
mov
adc
add
movsb
or
test
sub
cmp
add
mov
andl
push
lock
push
sub
push
push
jbe
cltd
push
lret
cmp
pop
and
mov
in
add
pop
mov
test
mov
or
and
mov
out
mov
mov
das
sub
pop
fcmovnbe
jmp
cmp
push
fdecstp
clc
gs
jle
xchg
addl
xchg
andl
or
add
push
add
out
aas
bound
mov
rolb
mov
mov
cmc
pusha
add
scas
push
mov
adc
iret
push
add
add
lcall
mov
add
sbb
mov
mov
rcll
mov
mov
scas
test
cmpsl
push
xchg
pop
mov
bound
mov
xor
inc
add
jne
cld
and
mov
add
dec
popf
mov
cli
stc
mov
cmp
add
out
push
jno
add
mov
dec
rcr
movsl
and
cmp
xor
mov
xor
mov
mov
fisttps
cmp
dec
mov
push
add
add
or
filds
mov
pushf
mov
add
aam
add
ror
imul
sub
sub
pop
cmpsl
mov
lret
mov
pusha
add
or
cwtl
insl
call
adc
push
inc
add
and
mov
popf
push
adc
mov
add
mov
sub
in
push
lock
mov
sub
mov
repnz
ja
dec
mov
inc
add
adc
jg
sub
pop
ret
addb
adc
mov
mov
dec
in
adc
mov
std
bound
mov
and
mov
fidivs
mov
add
fcmovb
add
rolb
mov
xor
mov
inc
add
fcoml
mov
out
jae
lcall
dec
leave
mov
mov
xor
xchg
add
pop
addb
cmp
cmp
jbe
xchg
add
mov
rdmsr
add
jmp
mov
ja
pop
dec
rolb
add
fldl
jecxz
movsb
pop
xchg
fdivp
xchg
add
cmp
adc
mov
icebp
mov
mov
pusha
add
add
cmpsl
imul
roll
fisttpl
out
mov
pop
push
pop
xchg
jmp
icebp
cmp
loopne
mov
or
fadd
dec
or
out
push
xor
fbld
addb
outsl
sbb
or
mov
icebp
or
popf
sbb
jge
adc
mov
add
mov
mov
add
jl
add
sbb
mov
add
add
das
add
mov
cmp
and
mov
add
sarl
mov
mov
cmc
cmc
mov
adc
mov
sub
xor
fwait
ss
dec
es
dec
cld
out
or
xchg
pop
and
mov
addb
aaa
sub
jg
and
add
mov
fs
test
xor
das
push
pop
addb
in
iret
stos
stos
xlat
jp
pop
cmc
or
cmpsl
dec
testb
clc
lret
rolb
mov
xchg
loop
mov
cmp
mov
add
mov
sub
movsl
out
and
add
daa
mov
xchg
add
test
cmp
ficoml
bound
mov
inc
mov
mov
jg
pop
stos
das
or
sbb
std
nop
add
stos
sbb
enter
clc
cmp
push
insb
xlat
push
add
add
push
jecxz
mov
outsl
and
icebp
je
mov
in
inc
and
and
mov
add
int
sbb
rolb
rolb
mov
loop
mov
rorl
add
xor
pop
mov
cmp
aam
movsb
loopne
mov
lock
arpl
cmpsl
fs
pop
pop
add
mov
add
pop
push
and
mov
add
sub
xchg
mov
fdiv
or
push
add
add
das
cltd
add
mov
stos
cli
cmp
scas
imul
mov
and
addb
adc
inc
add
ss
adc
dec
xlat
sbb
test
jbe
jno
mov
mov
lock
lods
sbb
cli
cltd
addr16
sbb
je
ss
mov
add
mov
push
cmc
add
add
and
mov
les
dec
cld
insb
pop
fstpl
cmc
js
jg
stos
xchg
mov
outsb
scas
mov
jle
jl
cmp
push
push
scas
push
dec
sbb
add
mov
add
mov
insl
jmp
add
or
pop
inc
popa
sbb
xchg
add
cld
ds
rcrl
add
add
jp
testl
jp
hlt
and
mov
and
xchg
or
inc
push
add
push
add
mov
rolb
mov
add
xchg
and
fwait
hlt
jno
lea
mov
add
outsb
inc
std
lods
iret
sbb
mov
jo
mov
add
or
rcrl
lret
fdivrs
dec
shll
test
cmp
movsb
addb
add
in
push
add
dec
and
xchg
add
mov
nop
add
inc
mov
mov
push
or
add
pop
pusha
add
leave
xor
sub
mov
mov
add
and
mov
mov
imul
jb
mov
xchg
jnp
add
push
add
cmpsl
popf
dec
mov
adc
mov
ficoms
jno
sub
cmp
xor
mov
sahf
push
mov
dec
shll
adc
mov
jns
int3
push
hlt
mov
aam
mov
rolb
mov
mov
add
mov
mov
dec
mov
or
dec
pop
pop
aaa
scas
leave
roll
push
sbb
add
mov
sub
pop
negl
and
outsb
add
mov
testl
jecxz
das
out
mov
mov
mov
add
imul
jb
mov
add
int
cmp
xlat
sub
inc
nop
add
cmc
cmp
rolb
mov
out
sbb
scas
es
addb
mov
cli
and
sub
add
inc
cli
dec
sbb
cmp
add
lret
aaa
fldcw
mov
dec
mov
push
jne
adc
push
mov
mov
pop
jle
add
push
in
ret
xlat
sbb
dec
scas
lods
mov
push
test
mov
add
mov
mov
icebp
insb
dec
hlt
repnz
sbb
stc
insl
and
jns
jecxz
dec
daa
bound
mov
int
mov
imul
mov
add
stc
insb
out
jne
add
xor
mov
lret
popf
inc
add
sbb
mov
test
inc
iret
inc
cmp
and
loop
mov
sub
insl
rolb
mov
xor
cmp
je
sub
xchg
xor
out
and
inc
jne
cltd
rolb
js
add
add
inc
add
mov
mov
mov
cmc
lahf
mov
fisubl
jg
mov
push
iret
lds
lcall
add
mov
cmp
add
mov
mov
lret
add
mov
pop
cld
loopne
mov
dec
fs
out
shl
pop
jecxz
mov
pop
push
fnsave
and
mov
dec
xchg
add
addb
xchg
repz
fxch
lock
clc
out
jmp
cmp
add
btr
mov
jecxz
iret
pop
shrd
daa
mov
mov
jl
lea
mov
hlt
loop
mov
pop
push
leave
pop
sub
mov
mov
add
xchg
in
mov
outsl
rcll
sbb
add
dec
inc
add
outsb
mov
mov
out
sub
fwait
fs
push
lods
arpl
jmp
add
pop
test
mov
icebp
aaa
out
rolb
mov
imul
fadd
ds
dec
lds
les
pop
fstpl
out
clc
jns
ficoms
mov
cltd
jno
jp
add
mov
sub
lds
mov
in
add
adc
enter
add
add
sbb
and
mov
enter
pop
lcall
lret
jb
mov
js
es
sub
mov
add
adc
mov
movsb
or
mov
mov
lea
dec
rolb
mov
sub
mov
sub
jbe
add
mov
add
and
push
adc
leave
aam
add
pop
pop
cld
sub
sahf
ror
outsl
fsubrl
loop
mov
xchg
fnstcw
add
enter
rolb
mov
xchg
sbb
test
add
add
add
add
xchg
shll
add
dec
xchg
mov
push
dec
sbb
ja
pusha
add
ret
mov
mov
std
dec
sub
xchg
mov
icebp
mov
xlat
pop
pop
push
andl
mov
imul
imul
mov
movsl
push
jae
jno
xor
mov
mov
rolb
fs
adc
add
ljmp
push
pushf
add
mov
mov
dec
mov
iret
arpl
fcmovnbe
add
add
push
add
mov
add
inc
add
ret
andl
es
mov
add
mov
addb
sbb
jbe
mov
mov
inc
push
std
imul
out
adc
mov
add
sub
stos
enter
rorl
pop
bound
mov
xor
mov
mov
movsl
or
test
xor
pop
rolb
mov
divl
add
mov
addl
push
add
mov
add
lret
inc
add
xor
mov
add
and
jmp
inc
fcmovu
xor
add
dec
dec
dec
sub
add
add
mov
sbb
jg
push
mov
mov
add
dec
popa
or
iret
out
pop
pushf
xor
mov
xchg
pop
mov
in
aaa
xchg
cmpsl
add
test
sahf
lcall
ret
sub
add
mov
jmp
clc
xchg
or
push
add
dec
arpl
add
add
mov
or
insl
xchg
fisubrs
adc
mov
mov
pop
mov
in
pavgb
mov
cmp
jle
sbb
add
addb
pop
das
lock
inc
adc
and
fldl
xchg
jecxz
inc
add
das
cmp
mov
mulb
adc
add
addb
push
cs
icebp
cmp
mov
adc
icebp
or
add
mov
pop
xlat
test
adc
ficompl
xlat
inc
sub
cmp
add
add
mov
cmp
mov
jg
xor
mov
insl
js
cmpsb
out
inc
imulb
inc
rorl
pop
cld
inc
or
pushf
xor
cmc
jns
cli
fs
inc
mov
add
pop
mov
mov
mov
mov
stos
xor
rolb
mov
add
cmpsb
sub
push
add
js
test
fisttpll
sbb
dec
mov
scas
or
mov
add
cmp
rolb
mov
push
add
push
add
add
cmpsb
pop
cltd
sub
dec
ret
sbb
add
popa
inc
in
js
fwait
and
mov
add
mov
dec
mov
inc
and
xchg
pushf
push
inc
out
mov
xchg
fidivl
gs
jmp
xchg
push
fcomip
add
jecxz
scas
cmp
shll
mov
sub
sbb
jge
mov
mov
xchg
or
xor
mov
popa
mov
ret
dec
jo
mov
sbb
add
inc
sahf
in
or
data16
mov
mov
hlt
dec
arpl
pop
es
cmp
add
in
ja
dec
cwtl
stos
cmc
out
dec
frstor
insl
or
in
pop
pushf
int3
jmp
xchg
push
test
mov
dec
test
xchg
pop
movsb
pop
flds
mov
popa
shll
and
cmp
xchg
jnp
sbb
aam
test
add
out
add
cmpsb
aam
mov
mov
add
mov
ja
pop
rolb
mov
push
cltd
adc
aad
inc
mov
mov
mov
add
sub
mov
js
pop
push
mov
add
mov
add
mov
sub
add
add
mov
xlat
push
into
ret
xor
mov
add
mov
add
pop
xchg
rolb
mov
in
or
jne
fiaddl
inc
and
mov
pop
sub
bound
mov
inc
loop
mov
pop
jle
gs
add
mov
push
sahf
xor
leave
jno
repz
xor
mov
das
lods
sub
loopne
mov
add
mov
mov
and
mov
and
mov
mov
push
and
xchg
mov
adc
mov
add
add
rolb
mov
test
loop
mov
inc
sahf
rcrl
add
mov
outsl
jmp
cmp
mov
movaps
loopne
mov
lret
jae
nop
add
daa
mull
repnz
test
ljmp
add
push
cli
cmp
inc
iret
mov
add
add
push
xchg
cmp
sub
outsb
pop
mov
in
fnstsw
add
jo
mov
xchg
gs
pushf
in
aas
lret
push
xchg
les
ret
mov
roll
push
add
rolb
mov
add
mov
cltd
ja
inc
loop
mov
mov
and
mov
add
aam
lret
pop
inc
dec
loopne
mov
adc
push
add
adc
mov
mov
nop
add
mov
mov
fcmove
xor
mov
loopne
mov
push
repnz
jns
fs
clc
push
ret
push
repnz
repnz
mov
mov
jns
add
fst
mov
je
mov
insl
stos
in
add
fcomps
in
movsl
mov
push
and
jnp
adc
cmp
push
lahf
movsl
imul
mov
mov
stos
stc
mov
insl
pop
getsec
adc
add
mov
xor
aam
add
mov
aaa
or
std
xor
mov
mov
add
mov
add
cli
mov
call
lods
into
mov
popf
nop
add
add
in
mov
rolb
mov
mov
sub
jbe
int
jns
pushl
mov
lcall
scas
test
test
mov
add
pop
lock
add
sbb
ret
ret
maxps
mov
push
cmp
sub
add
add
inc
call
jle
ja
cmp
daa
loopne
mov
add
adc
aam
mov
jb
mov
test
or
cmp
test
push
pop
test
and
mov
out
mov
cmp
inc
add
fldcw
xchg
loop
mov
mov
dec
push
xchg
ljmp
insl
sbb
push
push
fstl
outsb
inc
add
push
xchg
lret
jae
iret
incw
jecxz
mov
push
stos
xor
ret
push
insb
adc
mov
add
or
fstps
add
fwait
sub
mov
imul
adc
cmp
scas
sub
jecxz
pop
jecxz
jmp
js
pop
sbb
mov
or
movsb
mov
pop
sbbl
sub
dec
aas
mov
loopne
mov
mov
aam
lods
pop
mov
mov
mov
bound
mov
les
nop
add
add
mov
or
ja
aas
rolb
mov
int3
push
repz
sub
int
and
mov
fucomp
xor
mov
push
or
mulb
repnz
mov
daa
pop
mov
mov
push
lret
ljmp
bound
mov
xor
aas
out
loop
mov
stos
jmp
imul
fmuls
stos
ret
stc
pop
inc
popf
test
sbb
adc
jae
xor
push
stc
dec
mov
or
mov
mov
add
add
fstpl
or
adc
dec
cld
icebp
test
addb
add
mov
in
popf
and
push
lock
mov
movsb
ljmp
rcrl
jp
cmp
cmp
bound
mov
jns
movsb
aas
rorl
inc
repz
out
add
xchg
push
mov
shrl
mov
add
mov
or
scas
mov
mov
push
sti
leave
test
loope
dec
rolb
mov
jmp
enter
adc
mov
cmpsb
push
mov
mov
stos
mov
sbb
aam
push
dec
fcompl
add
sbb
sbb
movsb
sub
inc
jo
mov
add
mov
dec
iret
out
xchg
push
add
add
mov
xlat
int3
jae
aam
push
adc
mov
mov
add
push
aas
imul
iret
mov
mov
in
add
mov
mov
enter
fldl2e
jl
inc
add
repz
or
jmp
scas
divl
mov
add
imul
call
ret
and
hlt
int
add
push
add
jo
mov
and
addb
add
mov
movsb
xchg
or
jnp
adc
push
add
loop
mov
pushl
mov
mov
repnz
mov
pop
sahf
xchg
call
add
or
mov
fs
add
inc
pusha
add
add
add
in
ds
xor
add
sbb
add
cwtl
pop
test
xor
sub
test
add
lcall
mov
xchg
or
pop
lret
out
jmp
fnstcw
cmp
cs
add
dec
adc
inc
inc
add
jno
jo
mov
movsb
inc
rolb
mov
mov
clc
lret
mov
mov
aaa
es
cltd
iret
sub
mov
dec
sbb
xchg
lods
or
stos
jmp
mov
dec
push
dec
push
ds
cld
dec
xchg
xchg
add
mov
mov
adc
mov
mov
fs
dec
std
loop
mov
push
add
out
add
sbb
add
fwait
jns
inc
fwait
daa
fstl
add
cwtl
xchg
push
add
pop
addb
aas
pop
icebp
fucomip
dec
movsl
cmpsl
arpl
push
jnp
out
addb
in
rolb
mov
mov
scas
and
cli
xchg
pop
lahf
lea
ret
fcomps
outsb
mov
mov
add
mov
mov
cmp
mov
loopne
mov
cli
push
xchg
cmp
out
jae
ja
pop
sbb
je
lods
addb
add
sub
out
add
ret
mov
fnstcw
or
add
into
cmp
int
outsb
gs
mov
mov
add
out
sbb
push
xchg
mov
cs
inc
add
ret
scas
out
clc
cmpsb
mov
adc
jmp
or
add
mov
mov
jb
mov
mov
xchg
adc
and
add
add
dec
push
fs
dec
scas
lock
dec
cld
cwtl
or
or
cmc
test
jg
adc
add
gs
mov
js
xlat
fwait
shl
cmc
es
lods
add
dec
sub
add
ljmp
ljmp
and
mov
fwait
into
nop
add
int3
repnz
call
xor
jge
dec
pusha
add
add
lds
dec
dec
xor
mov
lret
xor
or
and
sahf
inc
pop
aam
and
add
popa
lret
push
add
add
sbb
repz
mov
std
ret
or
mov
out
push
insl
pop
mov
sahf
std
js
push
jnp
push
add
adc
mov
mov
ret
xor
mov
jb
mov
add
push
inc
lock
add
mov
add
loope
roll
leave
cwtl
test
add
rcrl
jne
push
adc
mov
xchg
add
enter
sahf
inc
and
adc
push
mov
cwtl
rolb
mov
repnz
mov
add
mov
movsl
dec
xor
mov
inc
sbb
adc
mov
sub
aad
mov
ljmp
mov
add
jae
test
enter
andl
icebp
in
push
dec
pop
pop
test
add
cmpsl
pop
xor
or
cld
pop
sub
mov
mov
and
push
hlt
sbb
incb
in
pop
out
jge
pop
repz
into
mov
sbb
xlat
cmp
and
push
sbb
out
scas
push
das
mov
cld
rcrl
xchg
cmp
add
sub
popa
inc
and
mov
add
incb
xor
test
mov
jno
xor
mov
outsl
xor
mov
ja
add
jmp
add
repz
into
mov
outsl
mov
mov
push
mov
jnp
mov
es
xlat
inc
xchg
clc
pop
loope
add
jae
cwtl
pop
mov
pop
sahf
push
nop
add
mov
stos
lret
ja
add
imul
mov
mov
jl
lods
xchg
mov
adc
mov
jo
mov
and
aad
jl
test
and
xor
pop
mov
mov
push
add
add
cwtl
stos
cs
or
mov
add
icebp
cld
mov
mov
mov
mov
mov
add
inc
je
xlat
cwtl
fmuls
inc
inc
ficoms
lods
push
int3
xlat
jo
mov
cmp
add
mov
mov
loop
mov
jae
add
adc
pop
dec
inc
add
rolb
mov
dec
or
jno
cmp
add
jge
add
cli
push
add
mov
pop
dec
aaa
les
and
add
or
push
add
xchg
add
mov
sbb
repnz
pop
test
lahf
arpl
cmpsl
jl
call
jnp
mov
lods
lea
loope
add
and
ret
mov
sub
sub
add
test
xchg
xchg
add
lcall
mov
xchg
add
enter
or
mov
mov
cwtl
pop
inc
test
rolb
mov
add
sub
out
pusha
add
mov
mov
dec
in
stos
adc
mov
mov
clc
bound
mov
mov
add
mov
add
add
sbb
jne
jle
pop
dec
pushf
std
stos
dec
jp
and
add
test
add
jmp
mov
lods
fs
xchg
push
adc
mov
ds
fcoml
push
pop
sub
add
mov
pushw
test
dec
aaa
sub
test
adc
fiaddl
add
add
dec
inc
inc
xchg
jbe
test
mov
pop
pop
pushf
mov
cmp
mov
or
sbb
je
mov
pusha
add
ret
pop
xchg
sub
add
mov
ja
add
jg
in
add
push
xchg
adc
mov
rcll
add
adcl
add
xchg
inc
mull
out
sbb
int
pop
mov
andl
scas
jl
mov
in
jae
rolb
add
mov
fildll
mov
int
outsl
test
rolb
mov
add
inc
or
rolb
mov
xchg
add
subl
stos
ror
mov
mov
mov
dec
icebp
jns
push
mov
add
xchg
stos
sub
mov
div
out
xchg
add
sub
add
add
lcall
mov
mov
pop
pop
mov
ret
fisubrl
mov
jge
jp
enter
dec
lahf
add
cmp
xchg
xor
jg
add
mov
into
pop
mov
ds
adc
add
dec
in
pop
mov
adc
addr16
push
add
fistpl
sbb
mov
mov
in
lods
xor
mov
jmp
sbb
fisttpll
mov
add
mov
dec
adc
mov
mov
mov
lret
sbb
std
sub
outsl
aaa
cwtl
les
lahf
and
mov
add
add
jmp
stos
mov
stos
xor
add
mov
add
es
and
jmp
out
mov
cwtl
mov
out
inc
mov
mov
add
cmc
xor
inc
add
cmc
pop
jnp
cmp
sti
div
mov
adc
mov
hlt
repz
sbb
jle
lret
inc
add
dec
and
or
and
das
out
mov
pop
arpl
call
scas
fwait
jo
mov
mov
push
gs
mov
imul
cmp
mov
jecxz
jbe
addb
sbb
dec
cmp
or
add
pop
xchg
xchg
jo
mov
mov
hlt
fwait
pushf
scas
loop
mov
add
mov
lods
sub
aaa
fmul
and
mov
leave
cmp
add
add
inc
dec
cmp
xchg
add
hlt
mov
pop
mov
and
mov
push
popf
or
sub
repnz
mov
into
adc
adc
mov
mov
mov
sub
sbb
int3
ret
xchg
jge
mov
sbb
pop
cmp
add
mov
mov
push
add
mov
ret
push
movsb
adc
xchg
add
sti
filds
int
testb
cmp
push
dec
xlat
sti
pop
mov
sbb
add
loop
mov
add
add
add
movsb
pop
imul
adc
jg
add
and
mov
add
sahf
xor
hlt
test
mov
dec
push
cli
test
add
jb
mov
cmp
inc
out
mov
sbb
iret
adc
mov
xor
mov
pop
cltd
pushf
repnz
jecxz
add
fidivs
mov
pop
test
int3
aas
rolb
mov
sub
insb
ja
jo
mov
bound
mov
add
or
inc
rolb
mov
mov
inc
and
mov
mov
and
mov
inc
sub
xchg
push
loope
sub
add
mov
aam
mov
add
or
es
cltd
idiv
jne
inc
add
add
out
mov
cltd
sarl
add
fwait
cmpsl
jnp
test
dec
cld
out
cmpsl
adc
mov
cld
arpl
setb
mov
lcall
sub
add
push
pop
addl
sub
test
decb
jge
push
icebp
aad
add
mov
inc
ss
or
leave
mov
add
out
mov
aad
lods
xchg
test
push
movsl
mov
cmpsl
mov
scas
xchg
insl
sbb
adc
dec
dec
adc
inc
jae
pop
sbb
int
pop
fldl2e
cltd
mov
movsl
sbb
mov
test
cli
enter
sub
js
add
xchg
mov
add
sub
add
aas
or
jge
pop
lods
dec
adc
mov
fstl
add
rolb
mov
and
push
sbb
jno
repnz
mov
sti
iret
push
add
adc
mov
mov
std
cld
in
imul
push
add
mov
lods
xchg
and
mov
xor
mov
ret
sub
ret
jno
jb
mov
lahf
cmp
cmovl
xor
mov
sbb
add
xor
mov
push
sub
mov
lods
ret
xchg
outsb
test
outsl
stc
jg
push
push
sub
inc
test
jns
sub
in
lret
xchg
mov
aam
xorl
addb
in
mov
push
dec
dec
addb
rolb
je
xchg
jns
int
shl
xor
mov
add
add
xchg
add
in
test
int
ljmp
imul
addb
sub
mov
fiaddl
aam
push
data16
mov
sub
push
cmpsl
data16
mov
add
es
jg
add
sahf
js
loope
adc
mov
dec
scas
outsb
jmp
in
psraw
gs
nop
add
rorl
out
pop
lods
push
pop
dec
mov
mov
std
xor
mov
add
mov
push
outsl
ret
mov
fimuls
popl
mov
push
loope
int3
mov
pop
xor
mov
clc
and
repz
dec
pop
sbb
mov
mov
or
mov
fstps
lret
rolb
mov
xor
mov
xchg
mov
jge
sbb
adc
jbe
cmpsb
loope
repz
mov
mov
outsl
ja
mov
lock
mov
mov
lcall
out
xor
fildll
xchg
add
out
clc
insb
adc
mov
jbe
add
add
mov
sbb
and
aaa
movsl
repz
nop
add
xchg
into
rolb
mov
mov
cltd
add
mov
nop
add
hlt
sahf
movsb
cmp
dec
xor
jp
add
and
mov
jo
mov
rolb
cmp
jge
add
dec
add
push
fistl
notl
pop
xchg
ds
repnz
push
xlat
jne
xor
mov
xchg
jne
scas
and
xchg
and
add
add
pop
xchg
pop
mov
adc
jmp
hlt
lods
inc
add
mov
sbb
add
add
add
hlt
pusha
add
fwait
add
xchg
jne
lock
push
cmp
rcrl
pop
aad
dec
push
push
into
daa
outsb
push
xchg
add
clc
jne
pop
or
repz
movsl
inc
jl
add
outsl
lret
scas
repnz
pop
inc
add
outsl
push
sarl
sub
push
pop
pusha
add
bound
mov
out
outsl
in
add
jb
mov
add
xchg
enter
add
mov
add
pop
xor
xor
mov
add
cmc
sbb
xor
mov
ret
enter
gs
fisubrl
mov
xchg
scas
mov
adc
mov
add
push
arpl
add
xchg
adc
adc
mov
jbe
push
xchg
or
rolb
mov
repz
scas
jne
test
je
int3
adc
testl
add
adc
mov
jae
add
mov
in
outsb
nop
add
xchg
sti
idivl
mov
lahf
mov
pop
clc
or
pop
fsubrl
scas
test
add
xchg
add
mov
xchg
mov
xchg
mov
mov
out
mov
in
cmp
add
add
sub
and
mov
jmp
mov
mov
dec
mov
clc
cmp
jecxz
pop
flds
add
mov
repz
lods
enter
dec
and
mov
cli
call
pop
mov
call
jns
mov
cmp
add
stc
mov
dec
mov
pop
adc
aaa
cltd
inc
sbb
mov
std
sub
lock
add
jle
pop
cwtl
adc
pmovmskb
dec
mov
jmp
lret
mov
add
insl
sbb
daa
add
adc
jbe
add
add
push
je
cmp
push
dec
fsubrl
sbb
fdivrs
loopne
mov
imul
add
mov
cmp
js
ret
mov
push
out
mov
js
add
lret
movsl
cmpsb
sub
dec
test
mov
sbb
fistl
stos
xchg
insb
fcom
add
iret
aaa
filds
out
pop
sub
mov
testl
or
jne
lods
inc
and
mov
imul
cmp
cmp
lcall
inc
add
fidivs
push
dec
std
cwtl
cmp
mov
cs
xor
push
or
add
mov
adc
mov
aad
mov
mov
dec
fnstenv
mov
inc
push
pop
insb
je
lret
or
sti
mov
add
inc
add
mull
orl
rolb
mov
fldcw
loop
mov
imul
pop
and
jmp
out
icebp
pop
mov
pop
cwtl
inc
addb
ds
add
sahf
lock
inc
push
add
ret
out
je
jecxz
add
cwtl
push
int3
stos
xchg
scas
and
add
pop
pusha
add
neg
cmp
pop
mov
stos
sbb
enter
mov
push
add
ret
adc
mov
add
mov
les
clc
jno
in
xchg
mov
sub
dec
addb
mov
mov
xor
out
push
outsl
call
imul
lret
clc
add
fcoms
in
pop
movsb
or
add
add
mov
in
cmc
mov
mov
cs
add
pop
pop
sub
idivl
scas
cmp
dec
out
add
repz
imull
push
pop
div
rolb
mov
inc
pop
push
int
add
shll
add
dec
lahf
shll
sub
add
dec
icebp
jle
sbb
mov
add
lret
stc
xorl
mov
jg
push
idivl
icebp
xor
add
mov
add
or
into
xor
mov
push
hlt
cmp
cld
aad
out
lock
mov
mov
addb
xlat
sub
test
addb
ja,pt
sbb
popa
das
ja
sub
dec
daa
add
add
mov
add
xor
mov
add
and
test
jecxz
push
rolb
mov
adc
bound
mov
add
mov
bound
mov
lea
mov
mov
mov
insb
cli
jnp
shl
add
jg
mov
daa
pop
jmp
jge
lret
xchg
pop
cwtl
xor
mov
xchg
cli
mov
add
icebp
sub
mov
mov
xchg
pop
pop
rolb
mov
xor
aas
push
and
mov
aaa
lcall
sahf
sarl
add
or
sbb
std
fcmovnbe
popf
xor
loop
mov
add
fcoms
add
mov
add
in
fidivrs
and
enter
cmp
jnp
or
mov
out
cmc
pop
xchg
sbb
sub
push
add
xchg
movsb
pop
mov
add
outsb
and
mov
jo
mov
pusha
add
gs
imul
mov
ret
dec
mov
pop
xor
mov
dec
cmp
mov
and
mov
jbe
cmp
add
stos
inc
pop
sbb
mov
bswap
inc
pop
push
push
lcall
add
xchg
adc
mov
dec
out
mov
cwtl
cmpl
inc
daa
les
dec
in
sub
push
insb
add
add
mov
add
add
sub
lret
add
loopne
mov
push
cli
or
ljmp
or
sti
out
fsubl
mov
mov
pusha
add
xchg
jmp
sub
fbld
movsl
int
xor
movsb
fisubl
jecxz
adc
mov
jae
jbe
add
dec
adc
mov
sub
mov
js
stc
loope
cmp
add
inc
inc
xchg
xor
push
xchg
sbb
rolb
mov
jb
mov
pop
xchg
int
lcall
movsl
bound
mov
mov
leave
xchg
ja
gs
push
adc
mov
insb
mov
mov
add
add
fimull
stc
or
mov
insl
jl
inc
scas
rolb
mov
aad
hlt
jnp
xor
es
mov
mov
push
sub
add
mov
mov
test
mov
add
cli
dec
je
arpl
mov
pop
inc
add
add
mov
push
insb
lock
out
add
in
add
add
lods
or
jb
mov
push
out
out
or
shll
push
cmp
and
mov
mov
push
add
add
mov
pop
jp
or
emms
rolb
repnz
sahf
sahf
daa
test
ss
lcall
test
aas
xchg
or
mov
aad
push
repz
push
mov
fmull
add
mov
add
add
or
mov
sbb
pop
jbe
add
lock
push
ret
cmp
add
cld
subl
inc
or
add
enter
and
mov
pop
mov
mov
mov
jnp
addb
or
add
mov
xor
mov
push
mov
mov
cmp
lahf
mov
add
arpl
loopne
mov
iret
mov
mov
add
push
lcall
das
or
push
xor
pop
or
repnz
test
cmp
outsb
sbb
loop
mov
add
xchg
test
add
mov
loope
add
fldl
mov
int
ljmp
adc
add
jecxz
push
jb
mov
sbb
sub
movsb
xchg
mov
cltd
cs
adc
mov
xor
lret
jbe
pusha
add
in
xor
mov
pushw
addb
pop
add
mov
aam
mov
lret
out
xor
or
mov
xor
mov
add
sbb
mov
fwait
adc
ds
pop
rolb
mov
lds
pop
repz
adc
or
jmp
bound
mov
jg
sbb
int3
jnp
dec
push
jno
ljmp
sar
mov
adc
mov
dec
rolb
mov
xchg
jmp
mov
inc
test
mov
clc
push
mov
ja
cltd
inc
add
push
lret
lods
pushf
flds
and
mov
mov
lret
das
les
dec
orl
push
push
imul
push
test
add
fisttpl
xchg
adc
mov
push
pop
pushf
adc
jnp
sub
loope
ss
add
cmpsb
pop
test
add
popf
in
xchg
add
mov
dec
ret
aaa
mov
xchg
pop
mov
sub
add
ljmp
mov
stc
push
mov
xor
add
ljmp
add
jno
mov
xchg
pop
adc
and
cmp
jo
mov
mov
xlat
les
mov
mov
mov
mov
dec
test
add
add
test
aas
jg
xchg
sbb
mov
pop
shld
mov
cmpsl
pop
push
loopne
mov
cmp
in
scas
imul
or
fdivr
enter
add
push
push
pop
mov
mov
addr16
rcrl
stc
ja
push
cmp
add
dec
aad
xchg
xchg
pop
fwait
scas
sbb
add
mov
add
daa
loope
and
ja
xchg
daa
or
inc
add
add
pop
lret
jne
into
sbb
fisubs
out
imul
mov
dec
jecxz
dec
pop
fnstcw
rolb
mov
add
add
es
mov
jl
leave
test
ljmp
sbb
mov
rolb
mov
push
push
cmp
sub
loop
mov
cmc
pop
enter
cltd
hlt
inc
dec
fwait
sbb
jecxz
and
fcoms
cli
push
and
mov
mov
xchg
ret
mov
out
test
sbb
add
lret
adc
add
mov
add
jp
lcall
cmc
xchg
push
xchg
lret
ja
rolb
lret
sub
movsb
pop
lret
int3
or
dec
inc
push
insb
pop
sahf
sahf
dec
adc
fwait
jmp
mov
pop
ffree
rolb
mov
add
jmp
addr16
mov
mov
inc
ljmp
rolb
mov
adc
mov
das
push
lods
mov
jp
nop
add
push
bound
mov
add
mov
mov
ret
mull
add
mov
add
xor
aaa
xchg
loop
mov
jb
mov
pop
push
jo
mov
inc
pop
mov
add
clc
repnz
nop
cld
jae
es
enter
mov
call
clc
repnz
nop
cld
jae
add
add
xor
push
mov
xchg
ret
add
mov
enter
insl
mov
clc
repnz
nop
cld
jae
enter
stos
es
in
nop
leave
jmp
sbb
add
add
rolb
mov
shrl
inc
add
pusha
mov
lea
jae
mov
push
mov
nop
leave
jmp
mov
jne
dec
push
clc
repnz
nop
cld
jae
add
add
jl
mov
pop
clc
repnz
nop
cld
jae
add
add
jno
add
lods
push
mov
nop
leave
jmp
mov
add
add
sub
test
sub
add
repnz
nop
cld
jae
jae
jle
push
clc
repnz
nop
cld
jae
orl
outsl
stc
mov
clc
repnz
nop
cld
jae
lods
lahf
mov
xchg
add
fwait
movswl
clc
repnz
nop
cld
jae
add
in
inc
cmpsb
rol
fisttpll
nop
nop
cld
jae
add
add
push
mov
xchg
ret
lea
repz
add
dec
add
test
sbb
nop
nop
cld
jae
add
add
out
clc
repnz
nop
cld
jae
jno
inc
repnz
pusha
add
and
repnz
nop
cld
jae
popa
add
movsb
clc
repnz
nop
cld
jae
add
add
in
xor
and
clc
repnz
nop
cld
jae
sub
pop
clc
repnz
nop
cld
jae
sub
rolb
jmp
add
ja
clc
repnz
nop
cld
jae
add
add
pop
xor
push
mov
xchg
ret
sbb
add
sub
mov
add
mov
pop
add
xor
push
iret
fmuls
cmp
jmp
incl
mov
repz
inc
lahf
add
add
in
nop
leave
jmp
add
cmc
repz
jno
mov
clc
repnz
nop
cld
jae
add
jo
pusha
push
mov
xchg
ret
add
lods
add
add
xchg
test
repnz
nop
cld
jae
popa
rcrb
add
clc
repnz
nop
cld
jae
jmp
cmc
push
mov
clc
repnz
nop
cld
jae
add
stos
lahf
negl
dec
xor
add
push
add
and
add
add
jns
and
push
fs
repnz
nop
cld
jae
add
dec
add
repnz
nop
cld
jae
add
jecxz
push
mov
insl
jmp
jp
out
jl
pop
outsl
cmp
xor
mov
inc
xlat
push
pop
push
mov
xchg
ret
add
add
mov
repnz
push
push
mov
nop
leave
jmp
imul
outsl
rolb
mov
in
nop
leave
jmp
add
pusha
outsl
loop
xor
xor
add
mov
mov
mov
xchg
ret
mov
add
jb,pt
push
mov
nop
leave
jmp
add
pop
push
mov
nop
leave
jmp
push
xor
mov
clc
repnz
nop
cld
jae
add
sti
lods
imul
push
mov
xchg
ret
sti
ja
sbb
xor
clc
repnz
nop
cld
jae
pusha
pop
add
cmp
nop
cld
jae
dec
add
add
add
add
orl
inc
xchg
dec
add
push
add
addl
and
add
add
nop
nop
cld
jae
cltd
shrb
add
push
mov
mov
add
iret
add
add
add
add
add
add
clc
repnz
nop
cld
jae
and
add
fs
add
clc
repnz
nop
cld
jae
add
repz
mov
clc
repnz
nop
cld
jae
pop
fs
add
mov
mov
mov
xor
push
mov
add
cmpsl
cmpb
add
add
mov
mov
inc
push
std
push
mov
mov
add
add
mov
mov
add
push
mov
xchg
ret
ljmp
and
add
clc
repnz
nop
cld
jae
mov
and
mov
add
in
nop
leave
jmp
lods
sbb
cmp
jmp
inc
add
ja
mov
jl
clc
repnz
nop
cld
jae
pusha
add
jmp
jg
clc
repnz
nop
cld
jae
xchg
lods
clc
repnz
nop
cld
jae
outsl
jo
add
mov
repz
lret
mov
clc
repnz
nop
cld
jae
fs
jl
mov
mov
xchg
ret
sti
movb
movb
iret
pop
clc
repnz
nop
cld
jae
add
loop
lea
mov
test
repnz
nop
cld
jae
add
popa
mov
mov
xchg
ret
xchg
add
add
repnz
nop
cld
jae
and
lods
shl
add
ja
add
call
in
nop
leave
jmp
sub
and
mov
push
clc
repnz
nop
cld
jae
add
ljmp
add
mov
push
mov
nop
leave
jmp
and
sub
jl
push
mov
xchg
ret
add
add
add
rolb
nop
nop
cld
jae
fiaddl
lahf
rorb
push
mov
xchg
ret
add
add
add
add
jns
clc
repnz
nop
cld
jae
sti
add
add
loopne
mov
add
push
mov
xchg
ret
add
add
sub
add
push
xor
push
mov
xchg
ret
xchg
inc
repz
xlat
or
clc
repnz
nop
cld
jae
sbbl
and
push
push
mov
xchg
ret
and
mov
lods
ja
fimuls
mov
xchg
ret
rolb
ja
movb
xchg
in
nop
leave
jmp
addl
popa
icebp
data16
jecxz
mov
clc
repnz
nop
cld
jae
in
add
sub
jae
je
push
mov
nop
leave
jmp
jo
cltd
repnz
xbegin
jae
add
push
nop
nop
cld
jae
loop
lahf
ja
inc
popa
jle
mov
clc
repnz
nop
cld
jae
add
push
xor
mov
popa
clc
repnz
nop
cld
jae
in
jle
add
xor
clc
repnz
nop
cld
jae
add
repnz
ja
popa
jae
mov
push
mov
nop
leave
jmp
add
add
sbb
mov
inc
clc
repnz
nop
cld
jae
mov
mov
mov
clc
repnz
nop
cld
jae
add
xchg
jno
add
add
clc
repnz
nop
cld
jae
repz
add
mov
clc
repnz
nop
cld
jae
pop
add
aaa
jo
ds
clc
repnz
nop
cld
jae
add
outsl
pop
movsl
cmp
jmp
cld
jae
stos
xor
and
push
mov
xchg
ret
loop
add
add
mov
iret
add
add
repnz
nop
cld
jae
add
mov
add
add
dec
add
sbb
in
add
repnz
mov
nop
leave
jmp
add
jl
lea
sub
mov
clc
repnz
nop
cld
jae
in
ja
rolb
add
in
nop
leave
jmp
add
add
add
sarb
clc
repnz
nop
cld
jae
add
movsl
in
mov
clc
repnz
nop
cld
jae
xor
mov
nop
leave
jmp
movb
lahf
add
xchg
add
lcall
add
add
jae
add
sub
add
repnz
nop
cld
jae
add
rolb
fcoml
in
fcomip
add
dec
mov
int
stc
loopne
mov
movb
mov
xchg
ret
lods
add
stos
mov
clc
dec
inc
clc
repnz
nop
cld
jae
jmp
mov
jmp
movb
nop
nop
cld
jae
jmp
sti
jl
ljmp
nop
nop
cld
jae
add
mov
in
sti
add
push
mov
nop
leave
jmp
mov
add
loop
push
lahf
test
push
mov
nop
leave
jmp
popa
shrb
jl
stos
clc
repnz
nop
cld
jae
xor
add
sub
add
repnz
nop
cld
jae
add
and
movsl
notl
add
push
mov
nop
leave
jmp
add
jl
pop
jl
into
pushl
clc
repnz
nop
cld
jae
popa
add
add
xor
imul
clc
repnz
nop
cld
jae
add
lahf
jae
add
add
add
cld
jae
sub
clc
repnz
nop
cld
jae
and
add
jae
add
sbb
mov
repnz
nop
cld
jae
jne
xor
adc
push
add
add
popa
add
ja
popa
xor
mov
add
add
clc
repnz
nop
cld
jae
add
rclb
in
nop
leave
jmp
sub
cltd
add
mov
add
mull
repnz
nop
cld
jae
repz
nop
nop
cld
jae
popa
add
mov
insl
add
clc
repnz
nop
cld
jae
aaa
add
cltd
cmp
push
clc
repnz
nop
cld
jae
mov
inc
popf
push
push
mov
nop
leave
jmp
add
add
in
inc
or
in
nop
leave
jmp
jle
add
add
cltd
push
mov
in
nop
leave
jmp
add
add
out
shr
push
mov
nop
leave
jmp
pusha
repz
add
add
rep
clc
repnz
nop
cld
jae
add
mov
mov
popa
lahf
stos
push
mov
xchg
ret
stos
add
add
add
add
nop
nop
cld
jae
and
cli
add
clc
repnz
nop
cld
jae
jle
add
ret
clc
repnz
nop
cld
jae
sti
jmp
add
add
push
push
mov
xchg
ret
sub
dec
add
add
clc
clc
repnz
nop
cld
jae
lahf
sub
add
add
mov
dec
push
mov
nop
leave
jmp
add
add
and
sbb
nop
leave
jmp
movb
jle
push
clc
repnz
nop
cld
jae
cmc
sbb
add
bound
mov
add
clc
repnz
nop
cld
jae
add
jl
add
add
push
mov
xchg
ret
add
add
cmc
add
push
or
mov
nop
leave
jmp
jle
add
jo
lcall
nop
leave
jmp
ja
xor
add
repnz
in
nop
leave
jmp
add
mov
jbe
push
push
mov
xchg
ret
sbb
mov
add
jno
xchg
cltd
mov
clc
repnz
nop
cld
jae
add
pop
mov
fwait
mov
clc
repnz
nop
cld
jae
add
loop
and
add
add
clc
repnz
nop
cld
jae
sub
add
add
add
xor
lahf
fildl
xchg
ret
sub
jp
push
mov
nop
leave
jmp
add
popa
popa
es
stos
insl
push
clc
repnz
nop
cld
jae
add
add
movb
pusha
add
adc
repnz
nop
cld
jae
add
in
add
mov
clc
repnz
nop
cld
jae
add
imul
lock
xchg
ret
add
add
add
in
nop
leave
jmp
stos
add
sar
cmp
push
mov
nop
leave
jmp
add
add
add
nop
nop
cld
jae
add
add
add
add
stos
clc
repnz
nop
cld
jae
add
add
in
add
adc
repnz
nop
cld
jae
jl
aaa
loop
mov
mov
mov
add
pop
add
inc
pop
and
mov
mov
xchg
ret
xor
cmp
les
repnz
nop
cld
jae
jo
sti
add
add
push
clc
repnz
nop
cld
jae
jmp
xchg
add
popa
mov
clc
repnz
nop
cld
jae
add
pop
je
clc
repnz
nop
cld
jae
rolb
add
xor
clc
repnz
nop
cld
jae
ja
add
add
add
hlt
int
push
mov
xchg
ret
add
shrb
mov
icebp
int
xor
mov
nop
leave
jmp
and
enter
push
clc
repnz
nop
cld
jae
add
add
cmp
sub
inc
sub
nop
leave
jmp
repz
lods
in
add
movb
pushf
mov
push
mov
xchg
ret
sub
add
pop
je
clc
repnz
nop
cld
jae
add
xor
jmp
add
add
add
add
add
shlb
sub
repz
sub
clc
repnz
nop
cld
jae
add
cmpl
pop
movl
add
add
add
clc
repnz
nop
cld
jae
imul
jbe
clc
repnz
nop
cld
jae
jle
sti
ljmp
in
nop
leave
jmp
stos
pop
lahf
add
add
dec
pop
pushl
clc
repnz
nop
cld
jae
popa
inc
add
add
mov
and
clc
repnz
nop
cld
jae
loop
jno
outsl
in
and
push
mov
xchg
ret
cmc
sti
popa
outsl
add
lods
push
ljmp
repz
add
jae
jmp
add
cmc
mov
mov
clc
repnz
nop
cld
jae
and
mov
mov
push
mov
xchg
ret
add
sti
add
fsubrp
pop
sti
clc
repnz
nop
cld
jae
add
add
add
and
inc
add
jno
mov
and
add
sub
arpl
inc
add
ja
cltd
xor
jne
je
mov
nop
leave
jmp
cltd
add
add
call
in
nop
leave
jmp
movb
add
movsl
cltd
call
clc
repnz
nop
cld
jae
xor
add
test
clc
repnz
nop
cld
jae
lahf
outsl
imul
xor
add
clc
repnz
nop
cld
jae
cltd
xor
sbb
xor
add
push
mov
nop
leave
jmp
add
cwtl
xor
push
mov
xchg
ret
add
add
add
lods
add
push
mov
nop
leave
jmp
sbb
in
call
add
add
jle
add
dec
sub
push
mov
xchg
ret
add
add
outsl
add
repnz
nop
cld
jae
and
add
xchg
mov
repnz
nop
cld
jae
in
addl
mov
jne
clc
repnz
nop
cld
jae
and
cmp
and
inc
add
add
addl
adc
mov
mov
nop
leave
jmp
in
jmp
jo
add
inc
stc
push
push
mov
xchg
ret
ja
add
add
lahf
add
push
push
mov
xchg
ret
jae
add
add
add
push
mov
xchg
ret
addl
add
inc
add
add
and
repnz
nop
cld
jae
add
push
push
and
mov
clc
repnz
nop
cld
jae
jle
add
mov
ret
clc
repnz
nop
cld
jae
push
add
add
push
push
mov
xchg
ret
jmp
add
xor
ljmp
mov
add
mov
push
mov
nop
leave
jmp
add
lahf
push
arpl
mov
push
mov
nop
leave
jmp
aaa
add
add
xor
mov
mov
xchg
ret
loop
add
add
jae
mov
clc
repnz
nop
cld
jae
addl
jl
mov
jge
inc
add
lea
add
add
repz
repnz
nop
cld
jae
rorb
fs
cmp
cli
clc
repnz
nop
cld
jae
enter
lahf
add
and
add
repnz
nop
cld
jae
jl
add
lea
jl
inc
add
add
add
add
loop
mov
xchg
ret
lahf
popa
enter
jmp
stos
mov
push
mov
nop
leave
jmp
add
jl
and
clc
repnz
nop
cld
jae
jne
outsl
repnz
ret
insb
add
clc
repnz
nop
cld
jae
jl
loop
in
andl
mov
lea
push
mov
nop
leave
jmp
add
add
aaa
add
add
or
test
repnz
nop
cld
jae
mov
mov
repnz
xchg
add
clc
repnz
nop
cld
jae
ja
shl
add
mov
repnz
nop
cld
jae
in
stos
fs
jle
add
popl
push
mov
nop
leave
jmp
add
repz
jno
dec
xor
push
mov
xchg
ret
add
rolb
xchg
nop
leave
jmp
aaa
add
mov
outsl
rolb
mov
mov
push
mov
xchg
ret
add
add
popa
popa
icebp
adc
rep
clc
repnz
nop
cld
jae
mov
mov
add
add
jp
jne
clc
repnz
nop
cld
jae
add
popa
es
out
mov
clc
repnz
nop
cld
jae
outsl
add
add
mov
xchg
ret
cmc
ljmp
mov
adcb
call
in
nop
leave
jmp
pop
add
je
add
repnz
nop
cld
jae
add
sti
add
jne
clc
repnz
nop
cld
jae
add
loop
push
clc
repnz
nop
cld
jae
jl
stos
add
add
sub
or
pop
add
xor
jnp
jno
jbe
mov
push
mov
nop
leave
jmp
cltd
lahf
jo
mov
mov
clc
repnz
nop
cld
jae
add
jo
add
add
insb
inc
jb
clc
repnz
nop
cld
jae
imul
je
clc
repnz
nop
cld
jae
lahf
add
lods
mov
push
mov
xchg
ret
add
jne
mov
or
call
in
nop
leave
jmp
add
add
in
pop
pop
clc
repnz
nop
cld
jae
add
add
pusha
add
push
mov
nop
leave
jmp
add
add
add
xchg
sahf
xor
clc
repnz
nop
cld
jae
lea
add
add
jmp
test
idiv
clc
repnz
nop
cld
jae
shl
cwtl
mov
clc
repnz
nop
cld
jae
add
add
add
dec
mov
clc
repnz
nop
cld
jae
enter
jne
in
cmp
xor
add
clc
repnz
nop
cld
jae
pusha
jo
add
mov
sub
repnz
nop
cld
jae
fimull
add
call
clc
repnz
nop
cld
jae
add
mov
cmp
repnz
nop
cld
jae
add
mov
add
stos
clc
repnz
nop
cld
jae
lea
add
add
add
mov
clc
repnz
nop
cld
jae
add
sti
add
add
shll
add
clc
repnz
nop
cld
jae
lahf
add
add
pusha
clc
repnz
nop
cld
jae
popa
cmc
add
jae
mov
out
inc
add
inc
jno
sbb
fs
clc
repnz
nop
cld
jae
imul
repz
sbb
add
dec
add
push
add
xor
aam
pusha
add
clc
repnz
nop
cld
jae
ljmp
nop
add
pop
clc
repnz
nop
cld
jae
add
pusha
add
add
or
mov
xchg
ret
add
es
lods
push
clc
repnz
nop
cld
jae
inc
addl
movb
add
pop
push
mov
xchg
ret
jl
jno
add
mov
or
nop
nop
cld
jae
xor
jmp
add
xor
clc
repnz
nop
cld
jae
add
sub
mov
adc
in
nop
leave
jmp
pop
fs
out
out
clc
clc
repnz
nop
cld
jae
add
aaa
jae
test
push
mov
xchg
ret
and
stos
add
in
add
mov
mov
clc
repnz
nop
cld
jae
add
mov
add
mov
xchg
ret
add
movb
mov
lock
clc
repnz
nop
cld
jae
lods
lods
outsl
add
inc
cmp
clc
repnz
nop
cld
jae
mov
stos
add
lea
push
mov
nop
leave
jmp
add
dec
mov
clc
repnz
nop
cld
jae
xor
add
clc
repnz
nop
cld
jae
jl
add
and
mov
clc
repnz
nop
cld
jae
add
out
add
clc
repnz
nop
cld
jae
popa
jle
lret
mov
push
mov
nop
leave
jmp
dec
add
jl
push
je
push
mov
nop
leave
jmp
mov
add
and
push
mov
nop
leave
jmp
outsl
jl
ja
add
movsl
stos
dec
push
mov
xchg
ret
add
lea
sti
jg
clc
repnz
nop
cld
jae
add
in
add
loop
out
mov
clc
repnz
nop
cld
jae
add
enter
and
pusha
add
insl
add
push
mov
nop
leave
jmp
push
in
pop
mov
push
mov
nop
leave
jmp
add
add
or
repnz
nop
cld
jae
in
addl
mov
mov
mov
inc
add
adc
fcmovbe
scas
push
clc
repnz
nop
cld
jae
add
pusha
aaa
sub
in
nop
leave
jmp
mov
pop
popa
mov
fisttps
nop
cld
jae
add
pusha
repnz
add
xchg
out
push
clc
repnz
nop
cld
jae
jl
add
and
push
mov
xchg
ret
add
and
mov
or
mov
xchg
ret
ljmp
xlat
dec
jmp
jo
ja
jae
mov
add
subl
nop
nop
cld
jae
add
add
jae
movzwl
clc
repnz
nop
cld
jae
mov
outsl
push
es
add
xor
push
mov
nop
leave
jmp
add
add
inc
mov
repnz
nop
cld
jae
jne
add
add
imul
cld
jae
add
aaa
aaa
pop
add
clc
repnz
nop
cld
jae
add
add
mov
dec
add
clc
repnz
nop
cld
jae
popa
xorl
push
mov
xchg
ret
add
fidivl
add
push
push
mov
xchg
ret
add
add
jno
sub
dec
cmp
repnz
nop
cld
jae
add
mov
mov
and
inc
add
mov
xor
repnz
nop
cld
jae
jne
fs
add
in
sarb
nop
nop
cld
jae
cmc
addl
mov
clc
repnz
nop
cld
jae
mov
sub
loop
insb
call
clc
repnz
nop
cld
jae
sub
mov
daa
and
mov
clc
repnz
nop
cld
jae
add
ja
popa
fiaddl
repnz
out
int
inc
sub
repnz
nop
cld
jae
repnz
push
clc
repnz
nop
cld
jae
shlb
sbb
out
decl
clc
repnz
nop
cld
jae
add
sub
ja
rolb
lds
mov
adc
repnz
nop
cld
jae
cmc
jle
jmp
jnp
test
clc
repnz
nop
cld
jae
add
pop
mov
push
mov
xchg
ret
repnz
jmp
jno
add
add
clc
repnz
nop
cld
jae
add
mov
add
iret
push
add
clc
repnz
nop
cld
jae
cmp
scas
cmp
push
mov
nop
leave
jmp
fs
sbb
add
add
clc
repnz
nop
cld
jae
add
xorl
clc
repnz
nop
cld
jae
add
inc
push
mov
clc
repnz
nop
cld
jae
add
loop
and
addb
add
add
sub
stos
out
inc
add
mov
jmp
add
push
mov
nop
leave
jmp
add
sbb
push
clc
repnz
nop
cld
jae
pusha
add
jle
pop
push
mov
xchg
ret
jle
movb
add
rolb
cwtl
movswl
clc
repnz
nop
cld
jae
jl
add
sbb
add
repnz
nop
cld
jae
add
add
and
mov
mov
in
add
add
clc
repnz
nop
cld
jae
popa
xor
add
adc
repnz
nop
cld
jae
outsl
add
fiaddl
and
movl
add
add
add
mov
clc
repnz
nop
cld
jae
push
add
lcall
nop
cld
jae
cmp
add
push
clc
repnz
nop
cld
jae
add
xchg
adc
push
mov
xchg
ret
in
add
jmp
stos
loop
test
nop
nop
cld
jae
loop
mov
mov
inc
filds
xchg
ret
jae
sub
add
add
add
clc
repnz
nop
cld
jae
mov
push
mov
xchg
ret
mov
add
push
mov
xchg
ret
jne
add
add
not
push
mov
xchg
ret
xchg
lods
in
jle
mov
sahf
inc
clc
repnz
nop
cld
jae
es
add
pusha
clc
repnz
nop
cld
jae
xor
fs
mov
mov
cmp
ret
add
add
test
jecxz
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
add
in
loop
add
sub
inc
add
lea
add
cld
jae
add
mov
sbb
in
cmp
cmpsb
popf
inc
add
add
add
divb
add
clc
repnz
nop
cld
jae
imul
mov
pop
mov
in
add
add
xor
cmc
add
nop
nop
cld
jae
add
add
add
in
mov
clc
repnz
nop
cld
jae
add
mov
add
add
repnz
nop
cld
jae
rolb
add
lea
clc
repnz
nop
cld
jae
add
outsl
add
jmp
inc
xor
clc
repnz
nop
cld
jae
jle
sub
nop
nop
cld
jae
ja
add
add
add
pop
inc
add
xor
mov
push
mov
xchg
ret
imul
jl
es
adc
repnz
nop
cld
jae
mov
inc
push
mov
push
mov
xchg
ret
add
bnd
add
clc
repnz
nop
cld
jae
add
lahf
rolb
mov
repnz
nop
cld
jae
add
enter
or
roll
xchg
ret
add
dec
sub
mov
mov
push
mov
nop
leave
jmp
pusha
push
add
push
sbb
mov
nop
leave
jmp
jne
addl
pop
push
mov
xchg
ret
jne
add
jmp
sub
cmp
mov
xchg
ret
push
sbb
add
add
push
mov
nop
leave
jmp
mov
lea
adc
add
repnz
nop
cld
jae
fisubl
add
repnz
nop
cld
jae
add
add
mov
add
clc
repnz
nop
cld
jae
jle
jae
add
dec
sub
push
mov
nop
leave
jmp
jae
add
sti
add
mov
and
jae
jl
shrb
ljmp
mov
xchg
jmp
sbb
add
add
add
jo
xrelease
push
clc
repnz
nop
cld
jae
xor
jo
add
clc
repnz
nop
cld
jae
add
jne
add
add
int3
xor
clc
repnz
nop
cld
jae
add
outsl
push
mov
ja
cmp
repnz
nop
cld
jae
lods
cmp
add
sti
repnz
push
or
xor
add
clc
repnz
nop
cld
jae
mov
sarl
lods
push
mov
xchg
ret
add
cmp
mov
sub
push
mov
xchg
ret
add
fiaddl
add
mov
clc
repnz
nop
cld
jae
add
pop
faddl
nop
leave
jmp
cmp
sti
mov
addb
dec
push
clc
repnz
nop
cld
jae
xchg
and
loop
mov
mov
xchg
ret
add
add
xor
add
push
mov
clc
repnz
nop
cld
jae
enter
mov
cmp
repnz
nop
cld
jae
add
xchg
add
mov
add
add
repnz
nop
cld
jae
add
mov
nop
nop
cld
jae
enter
jno
xor
mov
clc
repnz
nop
cld
jae
fs
in
ljmp
repnz
nop
cld
jae
loop
add
lea
ret
and
or
push
mov
nop
leave
jmp
jl
jno
add
add
inc
and
push
mov
nop
leave
jmp
mov
in
repnz
lahf
push
jmp
add
shl
add
add
xchg
mov
add
mov
clc
repnz
nop
cld
jae
add
add
popa
add
add
add
in
nop
leave
jmp
add
popa
adc
add
push
mov
xchg
ret
and
xor
xchg
add
mov
xchg
ret
add
add
outsb
lea
clc
repnz
nop
cld
jae
add
jle
loop
push
add
mov
clc
repnz
nop
cld
jae
add
in
repz
add
or
clc
repnz
nop
cld
jae
add
jmp
nop
leave
jmp
add
fiaddl
ja
mov
or
clc
repnz
nop
cld
jae
mov
add
add
fs
nop
nop
cld
jae
add
popa
add
add
das
push
mov
add
add
roll
jg
add
add
mov
into
add
clc
repnz
nop
cld
jae
mov
lods
or
push
mov
xchg
ret
add
add
add
es
mov
clc
repnz
nop
cld
jae
mov
mov
js
cld
or
nop
leave
jmp
popa
add
adc
repnz
nop
cld
jae
loop
jo
mov
imulb
aad
inc
add
pusha
add
in
add
insl
lea
push
mov
xchg
ret
add
add
add
test
repz
clc
repnz
nop
cld
jae
jle
in
call
push
mov
xchg
ret
repnz
and
addl
shr
clc
repnz
nop
cld
jae
add
cmp
and
mov
repnz
nop
cld
jae
add
add
pusha
jecxz
clc
rol
push
mov
nop
leave
jmp
add
popa
cld
push
clc
repnz
nop
cld
jae
add
add
jmp
add
mov
push
mov
nop
leave
jmp
xor
add
add
pusha
std
mov
clc
repnz
nop
cld
jae
add
add
inc
or
mov
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
outsl
add
sti
rolb
jnp
sti
add
add
in
nop
leave
jmp
cmp
add
xchg
testl
jmp
add
add
jmp
adc
repnz
nop
cld
jae
mov
add
and
mov
mov
clc
repnz
nop
cld
jae
add
add
insb
xor
push
mov
nop
leave
jmp
popa
add
add
fisubrl
repnz
popa
fs
repnz
nop
cld
jae
lods
push
xor
dec
ss
clc
repnz
nop
cld
jae
add
xchg
fimull
nop
nop
cld
jae
aaa
add
add
repnz
nop
cld
jae
add
imul
clc
repnz
nop
cld
jae
jo
jno
jno
test
repnz
nop
cld
jae
andl
cmc
mov
push
mov
nop
leave
jmp
add
es
add
in
adc
mov
jg
clc
repnz
nop
cld
jae
add
repz
add
or
nop
leave
jmp
xor
popa
add
jb
mov
mov
jne
push
mov
xchg
ret
jl
add
add
sti
push
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
lods
lods
jmp
in
add
aaa
push
imul
nop
nop
cld
jae
jae
jno
xor
mov
add
mov
clc
repnz
nop
cld
jae
mov
inc
add
icebp
out
call
clc
repnz
nop
cld
jae
sub
mov
repnz
nop
cld
jae
stos
add
add
rcrb
repnz
nop
cld
jae
mov
add
inc
jp
push
mov
nop
leave
jmp
es
mov
push
mov
nop
leave
jmp
sub
add
mov
sti
add
add
add
add
adc
repnz
nop
cld
jae
add
jmp
add
add
sub
add
ror
add
filds
xchg
ret
cmp
jo
jne
add
xchg
daa
popf
movzwl
clc
repnz
nop
cld
jae
jno
add
addb
add
in
nop
leave
jmp
sub
sarl
or
clc
repnz
nop
cld
jae
mov
mov
loopne
add
add
repnz
mov
mov
pop
jmp
add
adc
adc
add
mov
clc
repnz
nop
cld
jae
popa
jne
add
inc
inc
push
popa
push
mov
nop
leave
jmp
add
repnz
add
mov
push
mov
nop
leave
jmp
add
add
enter
push
mov
nop
leave
jmp
add
add
pop
cmpw
push
mov
nop
leave
jmp
add
ret
push
clc
repnz
nop
cld
jae
outsl
add
add
sub
icebp
clc
repnz
nop
cld
jae
addl
add
add
sbb
nop
nop
cld
jae
push
es
add
repnz
nop
cld
jae
add
jae
add
mov
clc
repnz
nop
cld
jae
add
add
push
out
dec
mov
add
add
int
clc
repnz
nop
cld
jae
outsl
loop
add
es
je
clc
repnz
nop
cld
jae
add
dec
pop
push
mov
nop
leave
jmp
add
mov
add
mov
nop
leave
jmp
mov
cltd
pop
xor
nop
nop
cld
jae
add
add
outsl
sub
push
mov
xchg
ret
jmp
fs
add
nop
nop
cld
jae
add
add
add
mov
xchg
push
xchg
jmp
loope
xchg
and
sbb
mov
clc
repnz
nop
cld
jae
jmp
mov
add
nop
cld
jae
addl
add
xor
push
mov
xchg
ret
add
add
mov
add
jmp
add
add
add
cmpl
add
repz
mov
nop
leave
jmp
cmp
in
es
stc
push
mov
nop
leave
jmp
xchg
jle
addb
jnp
nop
nop
cld
jae
pop
addl
xor
push
mov
nop
leave
jmp
jo
movb
bnd
cwtl
je
push
mov
nop
leave
jmp
xor
dec
imul
cld
jae
add
add
fs
add
add
mov
xchg
ret
mov
add
shlb
add
push
mov
nop
leave
jmp
add
shlb
or
repnz
nop
cld
jae
sub
outsl
ja
push
xor
push
mov
nop
leave
jmp
add
jl
add
lods
js
fadd
add
push
mov
nop
leave
jmp
jne
sub
imul
repnz
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
lea
imul
daa
add
add
loop
and
add
repnz
ja
sahf
mov
clc
repnz
nop
cld
jae
outsl
mov
add
add
iret
or
cld
jae
imul
jns
pop
add
add
repnz
nop
cld
jae
lahf
add
add
nop
nop
cld
jae
repnz
sbb
xchg
test
inc
add
add
xor
mov
clc
repnz
nop
cld
jae
dec
add
add
subl
incl
and
aaa
enter
int3
mov
push
mov
nop
leave
jmp
mov
jmp
add
enter
add
lea
add
jae
ljmp
add
mov
testb
cmp
ret
jmp
dec
jle
push
cmp
add
add
clc
repnz
nop
cld
jae
inc
add
lea
add
mov
or
add
repnz
nop
cld
jae
fisubl
mov
popa
add
repnz
nop
cld
jae
add
add
jmp
mov
int3
inc
add
jo
jmp
mov
inc
and
mov
and
push
mov
xchg
ret
xchg
add
cmp
xchg
add
push
mov
xchg
ret
cmc
push
add
imul
clc
repnz
nop
cld
jae
dec
jl
add
repnz
nop
cld
jae
add
lods
loop
mov
in
lahf
pop
push
mov
nop
leave
jmp
add
add
sbbl
push
mov
nop
leave
jmp
jmp
jne
add
mov
jns
dec
cmp
repnz
nop
cld
jae
add
add
add
mov
mov
push
push
mov
nop
leave
jmp
in
mov
cmp
and
clc
repnz
nop
cld
jae
add
add
sub
cmpsb
add
mov
push
mov
nop
leave
jmp
shlb
add
jmp
imul
mov
nop
leave
jmp
enter
xor
mov
add
clc
repnz
nop
cld
jae
add
aaa
add
jno
add
clc
repnz
nop
cld
jae
add
lea
ljmp
jmp
add
jle
add
jmp
add
mov
nop
cld
jae
add
add
imul
clc
repnz
nop
cld
jae
add
add
add
add
js
push
mov
nop
leave
jmp
add
stos
add
sbb
in
add
and
inc
xchg
cld
dec
add
dec
inc
add
clc
repnz
nop
cld
jae
add
stos
pusha
add
mov
mov
push
mov
xchg
ret
loop
lods
add
mov
mov
clc
repnz
nop
cld
jae
popa
add
sub
jae
mov
clc
repnz
nop
cld
jae
ljmp
or
in
nop
leave
jmp
add
jo
aaa
add
jmp
lahf
inc
pusha
add
mov
mov
cmc
test
addb
mov
nop
nop
cld
jae
mov
add
pusha
ljmp
faddl
xchg
ret
jle
xor
add
adc
inc
clc
repnz
nop
cld
jae
add
xor
and
mov
clc
repnz
nop
cld
jae
add
test
movl
sub
jl
jae
mov
add
clc
repnz
nop
cld
jae
in
popa
fisttps
mov
inc
add
add
or
jmp
nop
cld
jae
add
add
sbb
inc
add
mov
add
repz
mov
xchg
ret
lahf
add
add
jno
and
clc
repnz
nop
cld
jae
mov
add
mov
xchg
ret
add
add
add
push
push
push
mov
xchg
ret
jmp
in
popa
add
shlb
stos
dec
push
mov
nop
leave
jmp
lods
jle
add
add
popa
add
lea
clc
repnz
nop
cld
jae
in
pop
add
push
cltd
fsts
repnz
nop
cld
jae
add
jae
popa
pusha
mov
ljmp
jmp
and
add
add
fistl
in
nop
leave
jmp
jmp
add
xor
add
mov
xchg
ret
add
add
add
jl
xchg
adc
clc
repnz
nop
cld
jae
mov
in
movmskps
repnz
nop
cld
jae
add
add
in
xorl
nop
cld
jae
movb
xchg
mov
clc
repnz
nop
cld
jae
mov
add
add
adcb
nop
leave
jmp
add
and
clc
repnz
nop
cld
jae
add
add
dec
push
push
mov
nop
leave
jmp
add
add
cmc
add
addb
repz
mov
nop
leave
jmp
add
mov
add
in
nop
leave
jmp
add
xchg
ja
add
jne
clc
repnz
nop
cld
jae
mov
mov
push
mov
nop
leave
jmp
add
add
mov
push
push
mov
xchg
ret
outsl
lea
add
and
add
add
clc
clc
repnz
nop
cld
jae
xor
add
enter
push
add
in
nop
leave
jmp
add
add
pusha
ljmp
call
clc
repnz
nop
cld
jae
popa
repnz
mov
mov
add
add
add
repnz
nop
cld
jae
jl
mov
and
repnz
nop
cld
jae
jno
add
add
xor
push
mov
xchg
ret
add
rcr
repz
mov
xchg
ret
add
mov
push
popa
xchg
mov
jbe
clc
repnz
nop
cld
jae
dec
cmp
mov
mov
push
mov
xchg
ret
sbb
repz
cmp
repnz
nop
cld
jae
xor
xchg
add
mov
and
jb
mov
add
in
nop
leave
jmp
in
mov
in
cmc
add
mov
clc
repnz
nop
cld
jae
add
xor
repz
repnz
nop
cld
jae
add
sti
add
inc
push
mov
xchg
ret
mov
addl
push
mov
nop
leave
jmp
add
cmc
add
jae
movsb
and
repnz
nop
cld
jae
push
push
sbb
xor
cmpl
push
mov
nop
leave
jmp
add
add
nop
cld
jae
jmp
add
add
rolb
mov
xchg
ret
xor
jmp
repz
mov
clc
repnz
nop
cld
jae
add
in
mov
clc
repnz
nop
cld
jae
add
jmp
jno
mull
sub
in
nop
leave
jmp
add
aaa
mov
mov
push
clc
repnz
nop
cld
jae
add
test
push
mov
xchg
ret
add
in
mov
add
mov
nop
leave
jmp
addl
mov
mov
clc
repnz
nop
cld
jae
add
add
fisubrl
add
sub
repnz
nop
cld
jae
add
add
add
imul
in
inc
add
lea
ja
mov
mov
clc
repnz
nop
cld
jae
mov
pop
mov
mov
push
push
mov
xchg
ret
jmp
add
add
add
clc
repnz
nop
cld
jae
cltd
add
mov
push
mov
ss
imul
imul
mov
rolb
mov
scas
gs
addr16
pusha
add
inc
xor
mov
aad
add
xor
scas
cmpsb
jne
insl
cmpsb
pop
out
mov
mov
push
mov
mov
jecxz
mov
cltd
adc
mov
int3
xchg
or
mov
cmp
sub
cltd
xchg
lds
add
mov
and
mov
xchg
push
add
jecxz
and
lods
mov
mov
cld
jge
incl
push
shl
add
mov
mov
sub
mov
pop
cltd
pop
push
add
pop
inc
add
mov
leave
cmp
bound
mov
into
loop
mov
or
inc
outsl
inc
pushl
add
adc
mov
mov
mov
add
mov
jbe
in
add
mov
movsl
mov
or
jecxz
xor
jmp
fmul
std
pop
mov
xchg
dec
fwait
or
loope
add
jae
in
rorl
sub
mov
in
add
in
movsl
xchg
rcll
add
push
and
mov
insb
push
add
push
xor
lahf
imul
add
lods
fstl
mov
mov
rolb
inc
ficoms
dec
insb
xchg
adcl
movsb
pushf
pop
lock
push
call
data16
add
mov
mov
neg
rolb
outsb
jg
add
add
mov
popl
add
test
mov
aad
mov
add
jmp
add
mov
int3
sbb
popf
dec
dec
push
xor
std
sahf
ja
jp
and
dec
ret
fwait
insb
notb
jl
fwait
jno
adc
stos
inc
sub
lds
hlt
fiadds
sub
add
test
push
add
add
loopne
mov
nop
add
adc
mov
mov
jnp
movsl
cmp
imull
adc
mov
test
add
dec
lods
xchg
add
cwtl
ljmp
mov
lods
fldcw
pushw
stos
insl
js
push
enter
and
test
aam
cmp
push
in
xchg
aad
leave
cmp
push
pop
mov
sub
sub
or
test
mov
dec
repnz
xor
mov
or
sub
inc
jmp
add
add
xor
add
add
mov
pop
aas
gs
bound
mov
mov
movsl
lahf
push
jl
sbb
bound
mov
mov
ljmp
mov
outsb
pop
cld
leave
and
push
in
inc
lcall
add
add
add
add
mov
mov
mov
mov
cld
testl
into
insl
xchg
movsl
cs
add
pusha
add
iret
or
xchg
push
mov
xor
sahf
xchg
das
lds
jecxz
mov
mov
mov
mov
mov
add
add
add
push
add
jb,pn
mov
mov
jl
sub
push
pop
jns
add
mov
mov
mov
add
cs
mov
and
mov
add
scas
or
fcmove
and
mov
add
add
ficomps
mov
mov
mov
mov
pop
sub
add
dec
push
pop
adcl
cwtl
rolb
mov
mov
dec
cmp
sub
cmp
iret
jo
mov
mov
push
xchg
inc
adc
add
enter
rolb
mov
lods
push
add
mov
in
add
bound
mov
fcoml
mov
cwtl
jge
add
mov
icebp
adc
mov
cmpsb
mov
test
sbb
add
jp
out
stc
call
in
mov
pusha
add
lods
sub
dec
mov
adc
mov
inc
add
push
in
les
inc
push
jns
add
test
rolb
mov
imul
inc
stos
and
mov
in
jge
sbb
xor
push
mov
enter
sbb
sbb
dec
cld
inc
add
call
std
inc
retw
out
and
popa
fsubrs
or
mov
mov
add
pop
mov
mov
dec
xchg
push
lret
fnstsw
in
mov
add
jae
ss
add
mov
data16
aaa
lods
outsb
and
in
inc
add
add
jg
aam
fildll
fs
xchg
dec
out
or
fldl
hlt
jmp
and
add
dec
loop
mov
movsb
lret
call
rolb
sub
push
sbb
test
out
adc
mov
xor
add
mov
cmc
jecxz
cmp
mov
jg
test
xbegin
add
dec
xchg
outsb
xchg
scas
rolb
mov
add
movsl
fdiv
testb
mov
jl
test
mov
das
mov
popa
or
pusha
add
jl
mov
xor
sbb
push
loope
mov
push
push
sub
fidivrl
xchg
mov
aam
arpl
push
add
mov
jne
outsb
or
add
sub
jbe
add
mov
mov
and
xor
or
movsl
jl
outsb
pop
jmp
icebp
loop
mov
and
mov
fiaddl
mov
stc
push
push
lahf
mov
jle
iret
stos
cwtl
cmp
push
lret
lods
push
cmp
fsub
pop
imul
roll
adc
mov
lcall
mov
add
into
and
push
add
mov
pop
sahf
jle
clc
fimull
movsl
mov
add
mov
push
and
mov
add
mov
lret
xor
cld
ret
or
enter
push
sarl
push
or
mov
outsb
in
in
mov
mov
mov
in
rolb
mov
cmp
pop
jecxz
jecxz
fcomps
decl
ljmp
into
addb
jl
jmp
inc
add
mov
mov
add
in
sub
add
lret
ret
testl
or
xchg
dec
aaa
pslld
mov
push
jmp
mov
add
outsl
or
add
repnz
gs
xchg
sbb
dec
cmp
rolb
mov
mov
mov
pop
stc
idiv
inc
pop
addb
xchg
mov
mov
fmul
sarl
xor
test
leave
imul
cmp
lcall
push
std
test
jbe
out
sbbl
mov
xchg
jg
test
cli
insb
stos
push
dec
loope
add
mov
dec
inc
sbb
jmp
adc
mov
adc
mov
in
add
outsb
cmp
mov
sysret
addb
outsb
mov
cmp
scas
loop
mov
bound
mov
cmc
push
add
out
jmp
lea
adc
dec
mov
sbb
add
test
repnz
dec
mov
add
mov
cmp
add
mov
dec
std
add
movsl
mov
stos
xchg
add
out
sti
and
adc
mov
sbb
mov
push
jae
dec
pop
xchg
insl
cwtl
dec
pop
and
lods
lea
shll
sub
sub
cmovp
mov
mov
bound
mov
sub
add
sbb
or
adc
mov
clc
ret
mov
and
scas
cmp
or
push
xchg
popf
xchg
out
les
jnp
out
push
sub
lds
loope
xchg
sub
imul
lcall
add
stos
cmpsl
je
xchg
inc
add
xor
mov
mov
cmp
add
xor
mov
mov
ret
push
lcall
mov
xor
arpl
add
sbb
nop
add
add
out
mov
ss
mov
xchg
push
out
fnstcw
dec
inc
std
fildl
add
mov
insl
js
inc
add
mov
mov
cltd
push
mov
mov
push
popa
fnstsw
mov
nop
add
xchg
filds
add
xor
mov
add
mov
xchg
dec
stos
mov
mov
je
inc
ss
jp
fs
mov
pusha
add
mov
add
inc
add
insl
aas
xchg
nop
add
pop
dec
mov
addr16
xchg
aam
aad
icebp
test
pop
rcrl
jge
add
add
sbb
stos
mov
mov
loope
mov
add
xlat
orl
int3
push
cmc
inc
gs
add
sarl
push
sub
aad
add
mov
push
add
pop
add
mov
rcrl
push
fwait
mov
test
or
flds
lods
pop
mov
dec
sbb
sbb
fcoms
mov
xchg
add
xchg
cmpsl
mull
add
lds
add
or
in
or
push
sbb
adc
pop
sub
mov
fcoml
mov
push
ret
sbb
sbb
pop
or
rcr
add
mov
jg
xor
add
mov
add
outsl
dec
popf
dec
addb
jl
fcoms
mov
std
aaa
dec
cmp
dec
repnz
ficomps
push
add
sahf
add
add
pop
sahf
xor
add
jmp
mov
xor
mov
add
shrl
in
pop
les
pusha
add
xchg
add
add
lahf
mov
adc
jb
mov
mov
mov
mull
mov
js
add
incb
mov
or
mov
mov
jl
sbb
adc
mov
fs
int
jo
mov
add
mov
sbb
adc
mov
add
decl
ja
lcall
mov
enter
imul
aaa
sbb
fidivl
xchg
sti
insl
sub
mov
sub
lret
cmp
jbe
push
add
ficompl
jo
mov
ljmp
add
cmp
pop
stos
ret
or
hlt
in
jmp
xchg
addb
inc
and
jns
sbb
je
insb
test
data16
outsb
sbb
cmpsl
sbb
mov
es
outsb
xor
sbb
enter
add
mov
xchg
mov
loopew
and
mov
cmp
rolb
dec
mov
add
sbb
bound
mov
je
cli
xor
mov
add
cmp
mov
xor
mov
push
rolb
pop
and
mov
jecxz
lea
push
add
sbb
insl
pop
stc
fdiv
adc
mov
xchg
lahf
incw
add
push
sub
push
mov
adc
mov
ja
pop
mov
mov
xchg
out
mov
mov
lahf
push
mov
mov
add
dec
sub
filds
movl
out
or
add
pop
popf
iret
mov
push
add
push
push
add
adc
mov
push
stc
mov
and
mov
or
cmpl
jne
inc
ss
pusha
add
test
lock
jp
add
mov
inc
add
sbb
jp
jne
xor
inc
mov
mov
ret
aaa
jne
test
add
js
sbb
cmpsb
xchg
sub
aam
sub
push
inc
out
filds
fiaddl
mov
mov
aam
loop
mov
ja
gs
imul
sub
int3
add
mov
sub
shll
das
movsb
jmp
mov
add
popf
stos
inc
stos
js
pushf
sbb
mov
roll
xor
xor
jbe
icebp
data16
call
inc
sbb
in
outsb
cmp
add
test
push
mov
add
cld
cmp
rcrl
mov
loop
mov
add
mov
or
add
push
bound
mov
adc
mov
insb
movsl
addb
mov
lods
push
inc
cmp
std
ja
adc
mov
xchg
vmovups
xchg
outsb
jp
lea
mov
pop
inc
cltd
jmp
rolb
mov
rolb
stc
adc
addb
add
add
sbb
jmp
xchg
addb
iret
push
inc
xchg
cmp
mov
dec
xchg
mov
bound
mov
mov
stc
mov
mov
mov
mull
mov
add
dec
lea
dec
leave
cmp
add
pop
dec
andl
xchg
and
mov
jecxz
fistpll
call
inc
xlat
cmp
addb
sub
into
lods
clc
ret
inc
add
inc
jno
inc
jae
iret
mov
mov
mov
out
add
std
push
inc
aam
dec
xchg
lods
jl
cmp
gs
mov
mov
add
adc
mov
add
jbe
push
add
mov
pushf
push
add
mov
xchg
mov
xlat
xor
outsl
or
inc
and
mov
push
add
add
adc
ja
jno
rolb
mov
pop
xor
daa
ret
addb
adc
fs
lods
rcr
ret
xchg
std
mov
mov
mov
dec
xchg
imul
jne
or
mov
xchg
sub
add
xor
das
stos
add
mov
add
mov
jo
mov
sub
or
mov
rolb
cltd
inc
and
pusha
add
xchg
add
xchg
mov
pop
pop
xor
popf
inc
add
mov
popa
jg
dec
xchg
pop
xor
sbb
jge
cld
and
mov
stos
adc
clc
push
add
or
loop
mov
test
pop
out
add
fcoml
add
mov
outsb
popa
xchg
adc
leave
leave
cmp
fisttpll
sahf
int3
adc
ljmp
ss
mov
mov
insb
cmc
mov
nop
add
add
mov
pop
mov
shll
std
fiadds
fsubrl
mov
add
and
jmp
or
jecxz
aam
jae
lock
sarl
sbb
add
insb
hlt
mov
pop
lods
stos
and
leave
loop
mov
je
add
negl
daa
gs
mov
xchg
lods
push
outsl
rolb
mov
add
pushl
mov
movsb
and
mov
out
aas
orl
sbb
je
add
fsts
add
rolb
push
add
dec
push
sahf
xchg
add
sub
add
jle
mov
mov
or
add
add
cmp
loop
mov
xchg
fucomp
sub
rcl
xchg
add
int3
push
mov
mov
xchg
dec
fisttpll
fildl
jb
mov
pop
mov
and
mov
lods
jb
mov
sbb
pop
sub
push
stos
mov
mov
dec
mov
fadds
add
adc
mov
add
add
mov
pop
scas
mov
pusha
add
mov
mov
dec
dec
in
pop
pop
pop
and
mov
add
test
aas
and
les
call
jmp
ja
inc
aaa
mov
or
cmp
push
loop
mov
add
mov
fadd
pop
push
int3
add
stos
inc
dec
daa
mov
push
xor
add
mov
in
jbe
movb
mov
push
mov
sbb
add
add
mov
add
jmp
imulb
push
lea
pop
cmpsl
dec
or
jg
add
fs
repnz
mov
rolb
int3
jg
hlt
mov
sbb
mov
imul
call
and
mov
add
enter
push
pop
xor
add
mov
sub
cltd
xchg
lds
mov
xchg
jo
mov
adc
jge
push
mov
add
add
add
mov
mov
xor
mov
add
mov
adc
mov
stos
mov
pop
mov
jne
xor
inc
rorl
scas
xor
mov
mov
mov
lods
das
fdivl
outsb
fnstenv
call
fisttpll
dec
outsb
xor
mov
or
adc
mov
mov
popf
movsl
aad
and
and
stos
sahf
pop
sbb
fldl
loope
pop
jmp
adc
push
add
jg
insb
jge
lock
add
jnp
mov
out
sar
sahf
add
mov
xchg
xchg
and
inc
dec
adc
std
aas
mov
jg
iret
and
mov
in
mov
add
lahf
sbb
push
jb
mov
lcall
inc
lcall
lahf
nop
add
add
test
aaa
xchg
xor
xlat
add
mov
sbb
jge
add
sahf
test
into
arpl
xor
mov
sti
xor
mov
mov
pop
mov
and
ret
mov
jg
ss
stos
in
xchg
jbe
and
add
add
shl
add
das
sbb
add
lret
jmp
add
mov
cli
repnz
inc
mov
adc
mov
loop
mov
add
dec
xchg
stc
mov
dec
xor
lds
lahf
cmp
xor
mov
andl
sub
dec
cs
je
sub
call
pop
inc
push
scas
rolb
mov
add
addr16
cmpsb
lret
lea
clc
in
lcall
sbb
or
mov
arpl
addb
lock
ja
xchg
add
inc
adc
in
mov
pop
enter
mov
ja
mov
dec
test
lret
rolb
addb
loopne
mov
cmpsb
xchg
or
mov
int3
clc
xchg
lods
jne
mov
fs
xchg
sub
mov
add
and
mov
jno
inc
fucomip
mov
xor
mov
add
or
dec
inc
lock
cld
aaa
sub
dec
add
add
out
in
add
mov
xchg
les
mov
daa
push
xor
mov
es
ret
xor
dec
sub
rolb
mov
imul
ja
mov
dec
sbb
jge
cld
or
sub
jmp
xor
add
lahf
test
inc
add
push
push
fld
and
mov
adc
push
rolb
mov
mov
add
xchg
pop
in
pop
push
cmp
add
dec
pop
hlt
movsb
lcall
and
popa
test
ret
inc
add
sbb
mov
add
ds
jl
int3
jns
aad
add
mov
stos
xor
int3
add
mov
mov
or
add
jecxz
fildl
jbe
ret
imul
jne
xor
aas
mov
add
sti
jb
mov
add
mov
adc
mov
add
insb
xor
in
popf
pusha
add
scas
adc
stos
int3
fidivrl
add
or
mov
or
lret
sarl
cmc
inc
lods
pop
dec
xchg
insb
repz
mov
add
in
std
jge
rcll
stc
pop
xlat
adc
mov
test
lods
in
push
pop
push
add
mov
adc
lods
sub
and
mov
xor
add
mov
sbb
imul
add
pusha
add
inc
add
std
jecxz
icebp
std
cld
sarl
and
adcl
pop
cmc
inc
inc
add
cwtl
test
add
scas
sub
jecxz
push
pushf
mov
adc
mov
in
xor
mov
pop
push
add
sbb
sub
xor
sbb
add
add
fxch
pop
pop
into
pop
arpl
pushf
xor
mov
xlat
out
lds
out
mov
sahf
pop
mov
ljmp
xor
adc
sahf
push
push
cmp
mov
xchg
in
push
rolb
mov
gs
in
jl
adc
mov
mov
repnz
push
iret
mov
pop
jp
mov
test
bound
mov
rolb
stc
bound
mov
mov
xor
cwtl
lods
xchg
pop
dec
ret
lahf
adc
les
movsb
and
mov
fiadds
sbb
sbb
jo
mov
jp
test
sbb
daa
jns
jmp
cmp
jle
add
mov
rolb
pusha
add
add
test
mov
mov
jo
mov
add
addb
cltd
unpcklps
mov
lods
fucomp
push
add
pop
mov
mov
inc
xchg
addb
gs
lret
mov
mov
imul
push
cwtl
push
add
ljmp
add
mov
push
out
es
lcall
mov
add
add
mov
mov
push
add
add
sbb
mov
add
mov
and
stos
daa
jns
int
mov
mov
mul
add
xchg
inc
add
add
add
mov
out
pop
push
addb
push
pop
add
jge
mov
mov
lea
mov
add
or
xchg
adc
sbb
lret
push
icebp
mov
mov
jnp
stos
sbb
xchg
mov
mov
inc
aas
addb
push
mov
dec
mov
add
mov
add
scas
sbb
mov
fadd
sub
fwait
jbe
add
adc
test
cmpsl
rolb
mov
int
sbb
push
inc
adc
lahf
mov
jnp
in
in
ljmp
dec
lret
pop
jecxz
test
mov
into
fsubl
pop
pop
and
or
dec
lds
int
jb
mov
pop
hlt
or
and
lahf
fisttpll
lds
pop
les
cld
sahf
lods
int
lock
jmp
sub
push
ss
mov
lds
ret
adc
pop
sub
cmc
cs
das
fadds
lea
xor
mov
sub
out
sub
scas
pop
int
or
mov
add
push
scas
idivl
add
push
ficompl
inc
and
jno
aad
xchg
add
add
mov
jo
mov
ss
leave
shr
into
je
cmp
les
xor
mov
and
add
xor
push
std
cmp
fildll
add
int
push
jne
cwtl
rolb
mov
and
add
mov
daa
mov
movsl
aam
add
cmp
xchg
dec
mov
and
mov
sbb
add
data16
mov
hlt
cmpsl
mov
jecxz
mov
arpl
sti
push
push
add
add
jno,pt
nop
add
outsl
cmp
add
jge
mov
add
add
mov
mov
adc
mov
loope
fwait
mov
insl
push
add
roll
cli
mov
idivb
add
movsl
pop
pop
call
leave
mull
jge
push
in
cmp
adc
dec
or
or
push
adc
movsb
mov
bound
mov
mov
dec
sub
push
push
add
std
sbb
in
dec
popf
dec
push
add
or
pop
mov
in
sub
mov
push
add
xchg
add
add
mov
add
mov
movsb
pop
sub
add
or
adc
sub
lods
mov
add
jbe
mov
push
add
xlat
push
and
sub
jo
mov
xor
mov
aas
cwtl
sbb
stc
cmp
add
add
sti
rolb
cmpl
xor
mov
xchg
rolb
mov
lods
mov
mov
jge
out
push
mov
aam
and
mov
inc
sbb
jg
shll
or
jbe
test
push
xor
mov
lahf
stos
mov
add
mov
jne
addr16
test
inc
add
pop
test
add
mov
or
fldcw
loope
dec
fdivrl
inc
jp
push
mov
jl
xchg
fistps
fisubrs
insb
loopne
mov
out
mov
add
jl
mov
add
pop
or
add
sbb
or
arpl
xor
mov
adc
les
int
repnz
mov
push
add
push
mov
xlat
mov
mov
xchg
pop
ljmp
push
jb
mov
pop
jmp
int
dec
jg
cmp
pop
and
rolb
mov
add
cmp
ret
test
and
test
and
mov
lock
mov
add
mov
insb
cmpsl
pop
mov
mov
cvtpi2ps
in
test
push
add
and
test
jmp
outsl
jne
mov
sbb
jecxz
mov
dec
xor
pop
imul
dec
cmpsb
mov
or
mov
jle
scas
pop
hlt
pop
mov
mov
jge
inc
dec
std
sbb
fs
sbb
mov
mov
scas
fxch
sahf
stos
xchg
and
in
aad
pop
push
add
and
and
add
inc
je
cmp
imul
das
cltd
jle
testb
jecxz
test
add
imull
cli
jmp
add
xchg
loope
adc
mov
out
add
add
pop
mov
fs
pop
subl
inc
adc
push
adc
addb
ds
mov
out
sub
cmp
aaa
inc
add
push
outsl
call
lea
mov
adc
or
add
popa
clc
cwtl
inc
add
in
stos
xchg
adc
pusha
add
fdivrl
in
inc
das
ss
pop
adc
mov
add
mov
lods
cmp
push
ss
jmp
mov
add
sahf
mov
sub
pop
out
adc
ljmp
sbb
imul
pusha
add
add
add
fcmovb
add
jns
mov
mov
mov
pop
mov
jne
ss
mov
mov
mov
scas
adc
mov
adc
enter
mov
imul
pop
das
sbb
pusha
add
outsb
or
rolb
mov
dec
mov
mov
dec
andnps
in
dec
mov
clc
dec
scas
sahf
xchg
add
mov
loop
mov
loop
mov
jmp
dec
mov
mov
lods
lods
dec
divb
add
push
scas
cmc
adc
push
in
js
das
int3
cmpsb
adc
bound
mov
testb
xor
in
ja
sub
icebp
and
mov
add
jmp
add
add
mov
mov
daa
lret
mov
or
je
movsb
push
loope
fisttps
jp
pop
stos
mov
mov
adc
call
inc
sub
fmuls
add
add
add
mov
push
or
les
push
scas
mov
fidivl
add
insl
rol
add
xor
mov
pop
mov
mov
add
xchg
ja
adc
sbb
int
pop
rolb
lock
and
cmp
pushf
imul
mov
cmp
sub
add
imul
roll
pop
jne
mov
decl
push
mov
add
mov
in
in
fists
add
mov
adc
xchg
xor
mov
mov
mov
add
mov
inc
adc
mov
sbb
ss
pop
xorl
aam
pop
push
and
mov
mov
jb
mov
add
loopne
mov
add
jge
and
out
mov
mov
mov
mov
loopne
mov
out
imul
add
fidivrl
mov
add
mov
xor
daa
mov
dec
enter
mov
mov
out
arpl
dec
pop
pop
loop
mov
out
in
je
iret
in
imul
add
jmp
sbb
adc
mov
out
push
add
mov
add
cwtl
mov
out
xor
mov
sti
test
pop
sbb
jmp
rolb
mov
mov
fnstcw
icebp
sub
xchg
jg
mov
xlat
cmpsb
jmp
xchg
addr16
xor
mov
setb
mov
mov
shll
xchg
sub
dec
into
int3
adc
sbb
daa
cld
push
inc
jmp
mov
jg
and
push
add
call
or
pop
outsl
push
sbb
push
mov
add
insb
addb
dec
xchg
jbe
xor
mov
add
xor
mov
std
ja
add
lods
ljmp
xchg
mov
mov
lods
bound
mov
add
inc
dec
lret
in
mov
jp
idivl
inc
adc
mov
add
mov
lahf
addb
xchg
dec
or
sub
sti
xor
int
fldcw
push
dec
ret
xor
add
push
movsl
aam
add
pop
stc
xchg
dec
stc
or
push
add
push
add
mov
add
int
pop
adc
add
mov
std
sub
xchg
inc
add
cmp
aad
add
stos
sbb
loopne
mov
sbb
mov
nop
add
test
test
dec
and
mov
sub
sub
push
or
add
lret
leave
xlat
sub
add
jne
fdivrs
mov
mov
dec
ret
lock
add
pop
loopne
mov
dec
repnz
in
add
das
push
lods
dec
lds
mov
add
daa
jo
mov
lea
xchg
add
cld
xchg
add
pop
loope
push
add
nop
add
pcmpgtb
into
xchg
sub
mov
enter
jne
idivl
adc
rcr
jle
fwait
out
add
maskmovq
dec
aas
xor
mov
in
xor
mov
jmp
or
mov
jmp
jle
add
cltd
fiaddl
pushf
movsl
aam
dec
flds
add
mov
xchg
cld
daa
pop
std
sti
jnp
mov
movsl
cmc
out
push
sti
push
mov
xor
mov
mov
hlt
xchg
es
stos
cmpsl
in
enter
mov
mov
insl
rorl
cmp
mov
rolb
jo
mov
out
add
push
add
pop
jge
lds
xchg
add
push
jl
add
mov
mov
cs
std
or
jecxz
sub
add
mov
jnp
popa
or
test
sbb
dec
ss
push
out
mov
or
sub
mov
or
xchg
and
adc
mov
mov
inc
or
push
leave
sub
sbb
movsb
or
add
cld
mov
push
stc
data16
mov
push
add
add
add
jb
mov
push
xchg
mov
xchg
das
dec
cmp
add
add
subl
push
repz
xor
aaa
jmp
aaa
dec
test
les
mov
mov
jo
mov
cmpsb
mov
bound
mov
mov
mov
stos
ds
jecxz
add
sbb
add
mov
add
ds
inc
add
sub
pop
cmp
jo
mov
or
and
mov
icebp
out
jl
loopne
mov
fdivrs
mov
clc
movsb
loopne
mov
mov
in
js
cmp
mov
decl
and
jecxz
rolb
lahf
stc
aam
mov
imul
inc
int
fildl
add
icebp
dec
jl
or
insb
fs
mov
dec
in
aad
cmc
or
cmp
bound
mov
add
pop
push
jmp
imul
ds
add
cmp
sar
out
cmc
fwait
push
aas
xor
insl
mov
mov
push
add
into
xlat
sub
leave
outsl
out
or
cmpsb
cmp
je
es
adc
sbb
add
movsl
hlt
mov
mov
pop
and
add
push
xchg
add
add
mov
iret
test
mov
addr16
pop
aam
cmpsb
dec
in
lahf
adc
mov
cli
dec
test
lcall
incl
xor
in
cmp
jns
ds
mov
mov
add
add
mov
orl
jl
inc
sub
cmp
jp
xchg
dec
ficompl
aam
ret
enter
in
mov
rcl
addb
test
add
in
lods
rolb
mov
pop
ficomps
pop
dec
in
in
mov
xchg
jle
ret
mov
add
addb
int
dec
mov
and
jg
add
mov
cmpsl
daa
je
inc
mov
scas
mov
ror
adc
sbb
fsubrs
cli
add
popf
and
inc
add
clc
mull
mov
cmp
inc
add
mov
repnz
xlat
pop
adc
idivl
add
je
rolb
lock
jecxz
add
mov
in
insl
cli
mov
stc
add
jno
jnp
adc
flds
jmp
lds
int3
rolb
mov
inc
sbb
sub
cmpsb
ds
rol
add
pop
int3
or
add
fisttpl
push
sti
xchg
cmp
jne
sbb
out
in
test
rolb
mov
pop
cltd
add
mov
mov
adc
rorl
jbe
fimull
mov
outsb
jp
add
sub
pop
fistps
jl
fidivrs
test
imul
push
mov
pop
mov
rcl
in
add
fs
scas
mov
cltd
dec
aas
in
jecxz
add
out
cmp
pop
aas
iret
ret
pushf
stc
aas
addb
jnp
dec
inc
rcll
mov
outsl
insl
loope
mov
popa
jnp
in
test
or
sub
push
add
mov
mov
test
adc
push
sahf
mov
fistpll
inc
jmp
cmovge
fmull
call
popa
fimuls
cli
lods
adc
sbb
clc
insb
js
fiaddl
mov
mov
mov
andl
cmp
les
dec
es
mov
stc
dec
loopne
mov
push
outsl
sub
add
push
pop
jne
mov
add
pop
push
das
or
aam
add
add
insb
daa
pushf
es
jmp
mov
add
mov
ljmp
scas
or
sub
jle
sub
dec
fsubs
hlt
and
pop
push
push
xor
mov
push
pop
jp
add
push
neg
push
insl
pop
cmpl
loop
mov
add
push
sub
add
mov
jno
pop
sbb
iret
ds
cltd
push
or
push
mov
xchg
cwtl
mov
mov
add
xchg
mov
addb
scas
xchg
int3
pop
fs
add
add
adc
mov
mov
push
adc
add
adc
add
lock
mov
add
inc
movsl
movsl
push
add
inc
adc
mov
pop
test
stc
mov
cmp
add
mov
and
mov
add
repz
iret
or
add
mov
sub
and
mov
add
mov
push
fisttps
sub
dec
cmp
addr16
mov
add
imul
mov
frndint
jns
sub
xor
add
adc
mov
mov
jp
xchg
cmpsw
in
sbb
rolb
mov
adc
add
rolb
mov
lret
mov
mov
add
into
lahf
cli
mov
add
fstpt
scas
sub
add
pop
call
pop
xlat
add
add
data16
xchg
push
ds
aas
mov
mov
sbb
addr16
pop
shr
jae
xor
mov
dec
aad
lock
aas
xor
sahf
sti
mov
js
mov
mov
xchg
add
pop
movsl
sahf
xor
test
or
adc
fstpl
jge
scas
nop
add
pop
std
lahf
xchg
sbb
dec
mov
cmp
lahf
inc
add
ffreep
add
rorl
fildll
mov
stc
mov
loop
mov
add
and
mov
gs
stos
mov
mov
mov
pop
bound
mov
mov
add
mov
into
scas
jg
les
cmp
add
scas
out
xor
mov
aaa
adc
dec
adc
add
adc
in
xchg
or
rolb
pushf
jle
xor
mov
rolb
push
out
mov
mov
add
push
popl
push
jle
cmpsl
leave
mov
fcomps
leave
pop
inc
mov
mov
or
mov
push
xchg
xchg
lahf
test
mov
xlat
adc
mov
hlt
rcrl
jns
es
repnz
imul
sub
xor
mov
testl
inc
sti
in
sub
pop
js
add
mov
dec
xor
mov
mov
dec
sub
mov
mov
sub
and
mov
sbb
pop
pusha
add
pop
push
iret
imul
pop
sbb
sbb
mov
cwtl
cmc
lret
pop
cmc
sub
imulb
dec
add
mov
jl
adc
cli
mov
fcmovnbe
add
mov
add
into
mov
jg
inc
add
and
add
or
mov
jo
mov
add
mov
inc
mov
mov
fwait
dec
add
mov
add
xchg
add
std
popa
arpl
pop
cmp
mov
sti
mov
mov
mov
fistpll
push
lcall
xor
mull
add
mov
cwtl
mov
inc
outsb
and
jns
rcrl
stos
sahf
mov
sbb
mov
xor
test
push
loopne
mov
rolb
mov
push
jecxz
je
insb
jae
lea
outsb
sbb
test
pop
ret
leave
bound
mov
loop
mov
mov
sbb
bound
mov
cmp
mov
add
adc
pop
jge
push
add
xor
pop
hlt
sub
into
inc
add
or
fldt
popl
rolb
mov
add
push
jbe
shl
add
push
ja
jae
insb
xchg
and
add
mov
add
xor
and
jg
lret
movsl
lea
mov
mulb
pushf
cmc
adc
mov
mov
mov
mov
mov
aam
pop
das
dec
rolb
mov
or
repnz
xchg
das
sub
add
sub
push
xchg
mov
xchg
add
and
pusha
add
mov
add
out
push
push
mov
mov
insl
xchg
mov
pop
iret
lret
add
pushf
pop
mov
add
mov
jae
add
lcall
hlt
mov
stc
mov
lods
cmpsl
dec
sbb
push
mov
add
mov
cltd
lret
add
outsl
mov
mov
push
sub
out
add
insb
push
adcl
xchg
lahf
lods
mov
pop
stos
cltd
cmp
pop
aas
pop
pop
mov
jp
adc
outsl
adc
pop
je
lcall
lods
jnp
sub
popf
cli
int3
mov
add
and
mov
mov
jbe
test
out
mov
sub
addb
cmpsb
orl
mov
add
rolb
mov
loopne
mov
stos
nop
add
inc
mov
mov
outsl
loopne
mov
add
loope
mov
mov
stos
repnz
mov
or
aas
xchg
or
jo
mov
jo
mov
mov
mov
inc
sti
add
pop
rolb
mov
mov
jmp
add
inc
push
das
add
mov
repnz
xor
mov
gs
add
push
fwait
and
mov
out
pop
addb
cmp
mov
dec
dec
cmpsb
dec
push
add
mov
mov
popf
outsl
xchg
add
sub
jg
add
mov
cmpsl
push
add
jmp
add
into
popf
cmpsl
lahf
inc
mov
fistps
inc
cmp
push
aaa
test
fs
fs
pop
xor
mov
mov
mov
cli
push
dec
rolb
mov
fidivs
pop
mov
add
stos
repnz
xchg
add
int3
rolb
mov
je
push
int3
insl
jbe
lret
mov
ret
inc
add
add
repnz
xor
mov
pusha
add
mov
cmp
mov
or
sub
and
ja
and
mov
mov
cmp
or
in
cmpsl
inc
pop
cmpsl
xchg
adc
outsb
add
jne
lahf
int3
cmpsl
mov
cmpsl
jno
add
cmp
add
mov
add
push
cld
rcll
push
add
fbstp
dec
or
rorl
daa
sbb
lcall
add
in
inc
ret
scas
aad
gs
xchg
push
xchg
scas
test
sbb
cwtl
push
in
ljmp
mov
xchg
jns
or
pushf
je
icebp
fldenv
xchg
xor
mov
aaa
inc
add
cmp
ja
add
xor
push
pop
push
and
add
mov
add
mov
add
mov
out
pop
adc
subl
outsl
ja
out
es
jecxz
or
inc
sahf
jl
ds
insl
bswap
jg
stc
xchg
mov
mov
cmp
xchg
fcomps
lods
and
or
mov
insb
pop
rolb
mov
mov
pop
cmp
xor
add
pop
push
mov
pop
xlat
adc
in
jmp
test
xor
mulb
orl
add
mov
and
mov
fdivrl
sub
add
das
test
out
ss
pop
mov
std
arpl
jne
test
imul
outsb
test
icebp
std
jle
cs
xchg
cmp
sub
cmp
cld
cmp
mov
test
aas
inc
jns
xor
mov
mov
mov
mov
out
push
icebp
push
or
lcall
cltd
mov
adc
mov
stos
jno
lea
mov
hlt
std
ds
imul
add
mov
int3
negb
adc
mov
add
pop
scas
mov
add
add
cmp
add
mov
jmp
pop
push
add
leave
rolb
mov
mov
sbb
jp
dec
btc
jle
or
fwait
dec
cwtl
int3
cld
sbb
or
testl
push
add
ja
add
mov
or
push
and
mov
inc
add
stc
cs
in
mov
sbb
in
adc
mov
hlt
pop
adc
sbb
jnp
movsb
rolb
cmp
nop
add
jmp
xchg
jo
mov
mov
aad
outsl
loope
movsb
mov
jbe
and
movsb
lret
and
add
in
push
push
or
outsb
inc
add
mov
aaa
lds
les
cmp
sbb
mov
ds
push
xchg
dec
mov
mov
test
pop
test
pop
cmc
je
in
add
mov
inc
aaa
ss
jmp
pop
lea
repz
pop
test
jge
mov
bound
mov
rolb
mov
add
add
fnstcw
add
in
add
adc
lods
mov
out
add
mov
bound
mov
stos
out
jne
adc
mov
icebp
push
push
xor
icebp
outsb
fmull
jnp
dec
push
lahf
sbb
push
pop
push
xor
mov
lahf
push
add
lds
cmpsl
push
xlat
or
aad
ret
add
subl
mov
fnstsw
lcall
sub
xchg
mov
pop
test
daa
pop
clc
inc
add
or
out
rolb
mov
sahf
adc
mov
inc
jecxz
ficoml
add
inc
add
and
mov
cmp
cs
sti
lock
jle
jl
in
aad
mov
add
mov
add
add
dec
rolb
cmp
lea
mov
les
ds
add
jno
pop
prefetch
add
rcrl
xchg
pop
sub
faddl
imul
lret
inc
add
mov
push
cld
mov
les
mov
mov
insb
lahf
cmp
inc
daa
adc
stos
sti
mov
adc
mov
mov
hlt
imul
int
mov
mov
loop
mov
popf
pop
add
mov
add
push
movsl
and
mov
mov
add
insl
cs
inc
add
bound
mov
andl
add
addb
cmpl
push
add
sahf
cltd
mov
pop
add
mov
mov
push
pushf
jnp
xor
pop
popa
in
add
add
mov
fcomi
pop
xchg
dec
mov
in
repz
xchg
mov
sbb
test
ljmp
add
adc
add
or
mov
and
mov
loop
mov
stos
push
dec
pop
and
fsubr
jp
fs
xor
mov
sbb
outsl
push
negb
add
ret
adcl
ljmp
fildl
add
jmp
xor
cmpsl
xchg
inc
add
push
adc
fsubp
fsubrs
add
loope
test
mov
ds
dec
push
int
mov
popf
cmp
icebp
sub
nop
add
jnp
add
jmp
mov
cmp
icebp
std
mov
stos
shr
sub
add
xchg
mov
sub
test
or
pop
lods
ds
mov
push
adc
cmp
pop
xchg
add
push
push
popa
es
xchg
mov
outsl
mov
xor
mov
add
xchg
jne
push
mov
sub
mov
and
mov
sbb
mov
cs
lock
cmc
loopne
mov
sbb
cmp
add
add
adc
cwtl
outsb
loop
mov
mov
add
mov
addb
jo
mov
sub
push
loopne
mov
jns
mov
inc
jne
cmp
add
mov
aas
outsl
outsb
push
sbb
ss
add
mov
sbb
add
ja
push
add
push
out
popa
mov
test
mov
jg
add
inc
and
adc
cmp
rdpmc
stos
iret
xchg
jmp
adc
mov
bound
mov
fcoml
or
fcmovb
cwtl
mov
lods
and
dec
adc
mov
out
mov
mov
in
jnp
add
movsb
es
lea
aaa
push
and
mov
add
add
aas
mov
add
addr16
xchg
adc
mov
mov
sub
add
xor
add
je
sahf
rolb
mov
add
das
inc
mov
stos
roll
out
leave
lods
arpl
pop
imul
pop
xchg
fldl2t
add
mov
cmpsl
leave
xor
mov
sub
popf
rolb
mov
adc
mov
sbb
loop
mov
int
push
jbe
inc
and
pop
cmc
das
loopne
mov
pop
fdivr
bound
mov
test
add
cmp
add
adc
add
xor
mov
js
pusha
add
cmp
adc
mov
fwait
gs
jge
test
cwtl
insl
mov
push
add
lods
fidivrl
and
subl
jecxz
jle
or
fsubs
jmp
add
mov
leave
mov
add
adc
mov
insb
sbb
add
test
daa
subl
arpl
ljmp
rolb
mov
idivb
jbe
addb
dec
mov
cmp
scas
adc
loopne
mov
mov
pop
mov
add
pop
dec
mov
mov
cs
stos
xor
inc
add
cmpl
mov
addb
mov
mov
ja
mov
shll
inc
stos
dec
mull
stos
insl
sahf
jg
mov
lock
mov
add
mov
dec
cmp
push
add
mov
inc
mov
inc
stc
orl
outsl
gs
cwtl
adc
push
lcall
jno
fdivrs
sti
mov
xor
add
mov
inc
add
dec
xchg
sbb
add
rolb
mov
pop
mov
andl
sbb
add
shll
hlt
push
bound
mov
add
mov
cmp
jne
pop
xchg
adc
movsb
xchg
mov
inc
add
insb
popa
push
lods
ret
arpl
lcall
outsb
nop
add
das
xchg
add
mov
mov
xor
mov
mov
add
mov
pop
jae
mov
or
add
adc
add
aam
jbe
aam
gs
pop
jecxz
adc
mov
inc
dec
enter
imul
push
mov
sti
pop
push
add
add
add
scas
and
xor
mov
xchg
cmp
lock
mov
mov
add
rolb
cli
cmp
or
mov
mov
jmp
push
jnp
je
xchg
pop
int
add
aaa
sub
mov
mov
add
cmp
jg
out
rorl
aad
xchg
add
mov
jnp
clc
out
aaa
decb
jecxz
add
call
add
or
xor
mov
ljmp
mov
cld
out
inc
add
push
add
inc
xchg
jg
add
push
addb
inc
pop
jae
inc
push
out
jnp
add
mov
pushf
outsb
or
enter
push
outsl
mov
jp
mov
jns
push
pop
orl
mov
insl
sbbl
add
jp
cs
push
adc
xor
mov
inc
loopne
mov
mov
add
sbb
sbb
add
leave
dec
iret
insl
pop
lds
add
inc
cld
sub
in
ja
lods
jmp
add
out
add
mov
add
dec
addb
sbb
test
push
add
cs
stos
sub
add
xor
ss
add
mov
lea
add
inc
and
sub
push
push
loope
mov
iret
inc
movsb
push
jne
add
mov
xor
mov
and
mov
sub
add
test
pop
xchg
jnp
fidivs
add
js
and
pop
adc
mov
cmc
shl
add
xchg
dec
ljmp
jmp
push
jp
hlt
pop
mov
dec
or
inc
dec
push
popa
xchg
ret
mov
mov
in
daa
nop
add
arpl
insl
movsl
sub
addb
mov
mov
mov
add
add
inc
add
mov
mov
mov
cmp
pop
imul
lds
outsb
cmp
mov
clc
ret
or
sahf
add
jo
mov
cmp
push
dec
inc
add
enter
xchg
scas
into
xlat
popf
cmp
mov
mov
push
inc
fstl
or
add
push
mov
mov
scas
sub
mov
inc
dec
mov
fsubrp
or
aad
add
dec
xchg
mov
pop
push
mov
add
cwtl
movsl
fbstp
outsl
jno
add
or
sbb
lock
rolb
mov
shrl
and
mov
jle
xchg
scas
xlat
iret
nop
add
mov
dec
rolb
mov
mov
in
xor
loopne
mov
enter
sub
repz
mov
in
pusha
add
hlt
mov
fimuls
add
pushf
sbb
add
aas
clc
mov
fwait
push
imul
mov
or
jne
mov
jecxz
fmul
sbb
cmp
aas
pop
sbb
add
jge
dec
popa
pop
or
pop
lds
and
mov
mov
xor
fnstsw
add
aas
sbb
inc
lcall
mov
enter
out
out
add
mov
add
cli
stos
int
and
mov
inc
into
sbb
or
cmp
jae
les
add
add
pop
add
sbb
pop
mov
mov
pop
movsl
icebp
push
fcoms
pop
in
mov
out
or
add
mov
xor
mov
push
add
xchg
repz
mov
add
sbb
fdivp
add
add
fdiv
nop
add
jmp
mov
je
jb
mov
filds
scas
pop
xlat
ds
pop
jmp
and
push
sti
mov
xor
xchg
add
add
mov
add
mov
scas
pop
gs
dec
scas
insl
jbe
add
jbe
add
add
aaa
mov
inc
and
mov
add
add
cmpsl
and
mov
add
sbb
outsb
int3
mov
add
xor
mov
les
mov
mov
clc
subl
pop
imul
add
cmp
pop
inc
mov
ds
mov
mov
adc
mov
push
dec
sub
mov
dec
mov
push
fldenv
pop
mov
int
loop
mov
cmp
jbe
adc
add
int3
mov
out
cmpsb
flds
add
add
add
or
rolb
mov
ret
jp
add
and
mov
jae
mov
add
mov
ret
aam
dec
mov
mov
jmp
add
movb
adc
mov
pop
pop
aam
imul
cmp
dec
fcmovu
leave
pop
sahf
mov
mov
sbb
or
mov
dec
push
xor
mov
jo
mov
add
push
jne
addb
inc
pop
cmpsl
or
shll
mov
jae
mov
negl
bound
mov
bound
mov
xchg
xlat
addr16
push
es
add
push
loope
insl
push
push
add
outsb
insl
mov
lahf
mov
inc
add
mov
fldcw
ja
jno
sbb
adc
xlat
push
nop
add
fcoms
add
mov
lcall
and
ljmp
jl
cmp
mov
rolb
adc
add
add
jo
mov
lret
pusha
add
add
cmp
mov
add
add
lret
mov
int3
push
add
pop
addb
daa
mov
mov
mov
mov
xor
add
xor
mov
mov
in
ja
cmpxchg
mov
add
jecxz
fcomi
addb
mov
mov
and
andl
add
add
les
xchg
out
xchg
add
mov
xchg
mov
mov
inc
add
mov
or
dec
das
jns
aad
shrl
cwtl
cmp
fisubs
hlt
pusha
add
push
push
loopne
mov
or
or
xchg
sbb
mov
test
add
je
mov
xor
enter
jnp
inc
mov
or
ret
push
sarl
jnp
test
mov
add
add
popa
ss
and
mov
push
add
sbb
addr16
add
mov
lahf
cmp
cmp
add
addb
in
jl
add
cmp
mull
mov
add
das
cmp
cmpsb
and
outsb
pop
les
push
mov
add
push
dec
mov
add
dec
cmp
push
iret
xchg
imul
mov
ds
xchg
ss
add
adc
rolb
mov
cmp
cli
mov
add
mov
mov
mov
lret
xchg
or
xchg
fwait
pop
jg
xor
push
add
jle
lret
mov
mov
mov
mov
mov
xlat
xor
mov
or
in
test
data16
pop
data16
in
adc
mov
repz
add
pop
and
test
xchg
jo
mov
pop
jecxz
add
xorl
jbe
pop
testb
sbb
rolb
stos
adc
mov
adc
mov
sbbl
pusha
add
out
mov
sahf
fnsave
mov
scas
in
xor
adc
pop
dec
xor
add
sbb
pop
push
adc
xchg
add
fdivr
mov
push
pop
sti
pop
cmpsl
adc
mov
js
jecxz
test
int
adc
sbb
mov
mov
jno
or
popf
inc
add
nop
add
inc
in
movsl
movsb
xor
mov
pop
jle
add
push
add
aam
add
mov
jecxz
and
mov
mov
psrlw
rolb
mov
mov
sbb
or
sbb
dec
lds
add
sbb
xchg
mov
add
ret
imul
cwtl
jge
fidivrs
cli
jns
imul
roll
add
add
inc
leave
cmp
pop
arpl
aaa
sbb
cwtl
movsb
and
and
jge
iret
mov
mov
add
nop
add
mov
popa
aad
leave
insb
mov
sub
das
int
add
add
jno
pop
or
iret
cmp
add
mov
mov
push
dec
and
mov
add
add
xchg
or
inc
mov
mov
sbb
xchg
lret
sbb
repz
dec
jle
icebp
in
cmp
mov
mov
scas
dec
add
jnp
xor
mov
leave
lcall
adc
hlt
shl
outsb
adc
addr16
mov
add
sbb
js
fildl
lcall
mov
jo
mov
lahf
push
mov
ljmp
add
fwait
test
jbe
xor
mov
std
in
jbe
push
fldl
test
or
daa
jb
mov
mov
mov
mov
push
push
xchg
adc
inc
add
mov
mov
out
gs
lret
xor
mov
addb
xchg
lds
pop
adc
mov
mov
rcrl
jecxz
cmc
insb
or
add
es
fcmovb
add
mov
add
jmp
mov
sbb
mov
out
jecxz
push
in
xchg
shrl
rolb
mov
or
inc
pop
stc
pop
ljmp
add
mov
xchg
jecxz
cmpsb
jnp
iret
sub
lcall
jbe
pop
add
cltd
xor
mov
lock
mov
add
lods
cli
mov
ss
push
out
xor
mov
jno
aad
jg
xor
add
add
jo
mov
add
lcall
mov
mov
pop
mov
rcll
cs
cmp
fwait
pop
out
cmp
and
mov
loopne
mov
adc
and
mov
ljmp
mov
sbb
xor
mov
add
loop
mov
lret
data16
mov
lret
xor
sahf
test
testl
test
jbe
mov
push
add
rolb
mov
push
add
enter
add
in
pop
inc
add
int3
or
inc
sbb
cmp
add
and
mov
add
add
in
sub
les
repnz
mov
sub
add
arpl
xor
mov
pop
cmc
adcl
push
out
inc
add
sbb
je
push
movsl
sub
out
stc
push
lcall
jle,pt
or
sbb
push
cs
scas
mov
push
nop
add
adc
mov
inc
iret
and
outsl
mov
add
mov
push
aam
xchg
cmp
mov
sbb
rolb
mov
in
dec
jg
cltd
cmp
mov
mov
dec
pop
mov
add
and
mov
mov
loop
mov
mov
mov
mov
daa
mov
mov
or
ja
inc
add
add
add
iret
adc
dec
jbe
xchg
xchg
adc
into
mov
add
or
les
xchg
push
rolb
mov
js
or
pop
mov
mov
idiv
or
mov
add
bound
mov
repnz
mov
shrl
in
xlat
mov
mov
inc
push
in
in
mov
mov
test
jle
fsubp
mov
inc
jle
inc
rolb
mov
jno
fcmovne
or
mov
xchg
cmp
stc
lret
cmp
test
mov
add
lahf
out
ret
and
mov
mov
imul
clc
sub
aaa
cmp
cli
fdivl
add
mov
add
mov
jb
mov
push
dec
sub
add
jg
imul
mov
das
mov
mov
lock
sbb
or
jp
add
jns
leave
adc
mov
xor
mov
add
add
add
sbb
cmp
jo
mov
popl
test
fisubs
push
nop
add
mov
jl
fsubrl
shll
in
addb
xchg
inc
add
rorl
jnp
mov
adc
add
xor
add
fisubs
mov
mov
out
jo
mov
jle
add
jmp
or
adc
add
add
mov
add
sbb
imul
mov
xor
mov
add
in
es
xlat
mov
mov
fwait
popf
sti
imul
push
xor
jmp
add
push
mov
inc
mov
add
mov
rolb
jnp
mov
cmpsl
push
psllw
mov
shll
add
xor
mov
fldenv
fwait
out
add
cmp
out
negl
add
mov
or
add
mov
mov
pop
ja
aad
dec
sub
add
mov
add
out
mov
popl
add
mov
out
push
push
dec
aaa
sub
movsl
js
jae
iret
dec
mov
fmull
addr16
and
hlt
inc
add
inc
add
dec
cli
addb
loop
mov
add
and
dec
jns
hlt
pushf
cmp
cmpsb
jb
mov
push
gs
rolb
mov
add
mov
mov
inc
mov
stos
mov
mov
xchg
sbb
cld
add
es
cmc
dec
call
inc
xchg
bound
mov
mov
jne
add
pop
and
popf
inc
add
pop
sbb
add
push
gs
xchg
add
add
int
les
loop
mov
push
adc
clc
jg
aas
push
cld
fcmove
pop
pop
imul
fstpl
popa
push
add
cmc
sub
jo
mov
or
icebp
cltd
fsubl
jge
add
fidivl
add
mov
mov
lods
ja
out
leave
pop
data16
sarl
inc
rolb
sbb
jnp
imul
mov
and
add
sub
mov
mov
movsb
or
add
mov
jbe
mov
and
mov
lahf
and
imull
and
mov
subl
dec
enter
and
add
add
add
mov
mov
jge
std
mov
mov
jbe
xchg
add
arpl
gs
in
loope
cwtl
arpl
data16
cld
sub
mov
mov
jns
stc
sbb
mov
out
mov
cmp
push
adc
mov
and
mov
or
add
mov
fcoml
pop
dec
jae
and
mov
test
xchg
daa
pop
mov
mov
mov
push
dec
push
scas
mov
js
push
into
movsb
jno
cmp
dec
stc
adc
mov
scas
lcall
mov
xor
mov
add
xchg
out
sub
push
loop
mov
inc
add
sahf
push
add
mov
addb
mov
mov
xor
bound
mov
pop
adc
mov
stos
dec
fbstp
jecxz
lret
dec
xchg
rolb
in
xor
mov
clc
rolb
cmp
add
cmp
xchg
lret
cli
aas
test
cmp
mov
decb
mov
fwait
addr16
outsb
imul
pop
outsb
ficomps
fisubrs
stos
xchg
popf
or
add
fistpll
push
pop
in
push
iret
pusha
add
add
mov
mov
addb
ljmp
adc
add
clc
xor
mov
repz
icebp
inc
add
arpl
cmp
cmc
pop
dec
push
xchg
lret
sub
or
loop
mov
out
and
mov
sarl
mov
mov
push
inc
je
lret
scas
adc
sub
inc
add
and
mov
xchg
fmull
test
insl
arpl
inc
lock
dec
sub
mov
inc
add
cltd
mov
and
mov
jl
test
outsb
push
adc
mov
loope
add
cmp
add
push
sti
lcall
add
add
push
add
pop
js
in
sub
aam
add
mov
into
dec
or
mov
cmp
aam
push
incb
jp
add
mov
add
mov
fidivs
pop
sub
push
mov
adc
test
pop
addb
fwait
imul
lcall
repz
sbb
arpl
mov
add
xchg
hlt
lret
out
add
mov
test
add
lea
xchg
rolb
mov
inc
add
inc
lods
add
dec
test
mov
and
adc
add
icebp
lods
gs
pop
fisubs
or
add
add
or
inc
add
pop
xchg
cli
pop
rolb
mov
aam
mov
nop
add
nop
add
xchg
pop
and
sarl
ret
mov
add
mov
dec
cmp
std
mov
out
dec
inc
lret
das
scas
insb
sbb
pop
and
push
insl
pop
popa
out
fisubrl
xchg
inc
add
sbb
mov
cmp
mov
fisttps
jb
mov
sbb
cmp
jnp
jg
inc
add
jae
adc
mov
add
imul
add
add
mov
lods
lock
dec
cmp
cmp
add
imul
sbb
pushf
rcrl
cli
cmp
out
xchg
mov
and
in
mov
cmp
jg
insl
rolb
sarl
inc
les
scas
and
mov
dec
pop
xchg
nop
add
add
in
mov
fstpl
in
scas
les
mov
push
mov
xchg
cmp
repnz
push
push
cltd
sti
pop
sti
sahf
mov
mov
jo
mov
cmp
lock
sub
icebp
mov
out
xor
mov
xchg
scas
xchg
mov
add
or
xchg
cmpsb
mov
add
in
cmp
xor
addr16
hlt
mov
add
fadds
in
mov
add
pusha
add
std
cmp
add
add
xor
mov
add
xchg
test
cmp
ljmp
add
add
addb
mov
je
xlat
clc
iret
xor
sub
jbe
inc
add
mov
adc
mov
clc
lds
adc
add
push
jp
push
add
test
aad
loopne
mov
pop
imul
shl
mov
mov
mov
test
dec
mov
xchg
movsb
fwait
xchg
add
xor
mov
xchg
xchg
scas
repnz
jp
in
push
add
add
add
rcrl
add
mov
add
push
jecxz
mov
add
popf
fsubrs
mov
rolb
les
mov
ja
push
out
ss
repnz
mov
add
mov
cli
roll
cmp
pop
cmp
out
add
test
enter
out
sbb
jae
nop
add
scas
lret
sbb
add
in
jg
adc
pop
jno
je
jns
cmovbe
dec
add
mov
insb
mov
mov
mov
adc
add
add
sub
mov
adc
aaa
push
call
loopew
adc
mov
and
mov
mov
mov
shr
movsb
and
add
addb
repz
pop
bound
mov
adc
mov
inc
enter
mov
xor
mov
fcomip
xchg
add
test
cmp
fnstsw
dec
add
mov
cs
aad
xor
ss
jmp
mov
add
cltd
add
mov
shl
mov
leave
lret
mov
adc
mov
push
xchg
push
popf
pushf
test
lret
jp
mov
dec
xchg
mov
push
add
fnop
add
fbstp
mov
data16
add
add
mov
add
inc
mov
or
dec
stos
sahf
bound
mov
mov
les
dec
add
mov
pop
scas
xor
mov
add
mov
jmp
arpl
push
lock
pop
out
push
das
and
mov
push
pusha
add
mov
xchg
negl
mov
cmp
inc
cld
negb
mov
mov
jg
push
or
nop
add
or
out
inc
fwait
push
jo
mov
loop
mov
xor
mov
jp
test
dec
pop
cltd
int3
push
loopne
mov
add
mov
jns
add
add
call
cmp
xor
push
fstpl
add
mov
or
ret
test
rolb
out
add
mov
sbb
fldenv
mov
cli
push
popa
mov
mov
rolb
mov
pop
gs
lock
pop
fwait
in
adc
out
xchg
push
repz
movsw
pop
mov
js
lcall
mov
dec
jbe
push
or
add
push
cmp
add
jae
sub
mov
xor
outsb
inc
mov
repz
inc
add
mov
mov
xchg
mov
fs
call
inc
repnz
pop
adc
insb
pop
xor
mov
insb
mov
iret
pop
jb
mov
push
xlat
rolb
fstpt
and
iret
and
filds
mov
xlat
cmp
add
adc
mov
xchg
ret
adc
mov
mov
dec
cld
mov
arpl
mov
mov
andl
mov
add
add
inc
mov
xchg
fcomps
adc
stos
jmp
cmp
push
jno
inc
xor
mov
sbb
add
xchg
add
adc
push
cld
mov
and
mov
loopne
mov
popf
mov
pushl
pushf
add
sbb
add
pop
push
mov
pop
ret
arpl
or
ss
rolb
mov
mov
das
jge
add
decb
ret
in
dec
in
loope
sti
mov
mov
add
addb
add
out
lods
pop
repnz
rorl
mov
adc
mov
lea
rol
add
arpl
push
and
fwait
cmp
and
mov
dec
addr16
dec
pop
stc
sub
mov
int
sub
cwtl
repz
mov
shrl
mov
add
mov
add
xor
push
sbb
std
std
mov
inc
adc
pop
mov
add
add
push
pop
inc
add
stc
test
sti
xorl
cmpsb
jge
xor
push
add
mov
lahf
inc
push
outsl
xchg
push
add
sbb
jp
fiadds
add
push
dec
push
cmp
inc
add
sbbl
lret
pop
mov
pop
stos
ljmp
mov
jg
cmp
add
mov
out
xchg
xchg
mov
stos
loope
imul
pop
fisttpll
sbb
orl
jmp
xchg
add
inc
pop
std
or
ficoml
pop
cwtl
dec
or
test
jbe
ret
mov
mov
mov
xchg
testb
repnz
mov
mov
addb
sbb
xor
mov
adc
mov
jne
cld
das
mov
jns
dec
cltd
mov
add
movsl
add
in
jecxz
cmc
push
pushf
call
dec
push
add
add
cmc
addr16
aas
or
addr16
fsubs
xor
movsb
pop
sub
add
in
add
out
sub
push
cmp
mov
mov
inc
add
jge
add
adc
add
jmp
adc
mov
mov
fsubrp
out
mov
cmc
imul
jge
inc
add
push
aad
add
sub
or
imul
mov
add
mov
mov
mov
mov
and
mov
cltd
add
push
xor
mov
mulb
jo
mov
insb
es
cld
xchg
pop
mov
cli
xchg
jb
mov
inc
add
enter
add
mov
push
inc
movb
xor
add
mov
xchg
fs
mov
mov
xor
mov
mov
and
mov
push
adc
jle
ljmp
jle
sahf
iret
sbb
push
sti
mov
cmp
dec
adc
mov
inc
add
test
fnstenv
mov
add
imul
mov
sub
add
out
notl
and
rorl
hlt
movsb
xchg
or
sub
fnsave
lahf
jecxz
loope
movsb
lea
mov
nop
add
inc
add
add
cmp
push
aaa
sub
add
out
jbe
add
int
ret
lahf
shll
js
lret
xchg
loope
mov
add
mov
dec
int
rolb
movb
xchg
adc
mov
das
inc
jg
mov
mov
mov
add
movsl
pusha
add
sbb
pop
pop
repnz
fsubl
pop
ret
mov
addb
cli
sbb
push
add
or
jmp
inc
jne
add
mov
leave
xchg
out
ljmp
mov
fidivrs
int
out
add
and
dec
pop
test
or
mov
add
lahf
test
adc
xor
mov
scas
in
aaa
sbb
leave
cmp
pop
fisttpl
mov
cmpsb
jmp
mov
pop
fs
sbb
jle
inc
push
mov
mov
mov
cmp
pop
addb
or
add
or
cmp
scas
push
addb
or
push
scas
jbe
pop
pop
xchg
mov
lahf
cmpsb
and
mov
mov
hlt
movsl
fidivrs
add
mov
mov
add
loop
mov
add
mov
mov
movsl
fsincos
sahf
popf
ret
dec
add
mov
fs
test
mov
adc
jge
add
add
push
mov
xor
mov
add
dec
in
jae
xchg
mov
jmp
add
mov
push
fisttpl
pop
pop
or
fmuls
ret
cs
cli
fmul
les
add
mov
add
sti
in
imul
mov
fs
mov
or
adc
add
cmp
add
inc
jge
fisttpl
mov
js
pop
sbb
lret
jo
mov
or
shll
mov
mov
push
add
mov
add
or
or
mov
in
cmp
cmpsl
inc
add
add
ficoms
fwait
push
add
std
mov
popf
inc
std
adc
mov
lret
lret
lods
fmuls
sahf
icebp
test
push
fs
lret
cmpsb
mov
add
test
mov
mov
xchg
sub
mov
ret
push
lea
mov
lcall
add
xchg
lahf
or
jge
sub
fdivs
add
xchg
ss
les
pop
push
mov
jge
inc
mov
mov
and
mov
add
in
test
push
sub
mov
aam
add
inc
sbb
mov
fdivl
mov
movsb
dec
xor
and
addb
cltd
cmpsb
loope
adc
leave
cmp
add
pusha
add
mov
push
jl
popa
ja
scas
repz
aad
add
xchg
mov
push
daa
cmpl
adc
mov
ffree
add
addb
arpl
stc
rcll
push
mov
add
mov
adc
je
cmpsb
xchg
and
dec
ds
arpl
inc
mov
wbinvd
inc
sub
mov
mov
lock
jg
xchg
call
mov
bound
mov
pusha
add
mov
rcll
push
add
jno
dec
mov
xbegin
and
mov
mov
lea
icebp
inc
into
jns
mov
sub
jle
sub
hlt
ds
add
add
mov
mov
xor
mov
pop
sahf
loope
jp
cmp
add
push
int3
out
jnp
add
ss
jmp
push
insl
jmp
add
or
jmp
pop
mov
fsubl
mov
jmp
leave
popf
fcoms
mov
push
add
mov
dec
mov
adc
mov
add
loop
mov
add
mov
jg
add
mov
and
mov
es
jle
add
std
aad
sub
inc
pushf
xor
add
mov
mov
bound
mov
in
push
out
call
std
int
lcall
outsl
inc
xchg
rolb
mov
add
mov
or
je
fs
fisubs
jmp
lock
jge
pop
mov
lds
and
jae
mov
add
mov
outsb
lds
and
add
mov
xchg
fildl
dec
and
mov
and
repz
mov
pop
jecxz
rcr
sti
cmpsb
lahf
insb
mov
jbe
cmp
fwait
pop
push
sbb
pop
cmpsb
fcomps
jmp
add
loop
mov
or
add
xchg
rolb
mov
mov
leave
xlat
inc
in
addb
mov
add
sub
out
aas
out
xchg
add
cmpsl
loopne
mov
mov
cmp
test
aas
addb
mov
test
push
cmp
pushf
decl
das
mov
push
add
add
add
mov
sahf
scas
xchg
jbe
or
cs
add
mov
and
mov
push
pop
fcmovnb
stos
inc
add
out
cmp
add
mov
sub
xchg
push
mov
jbe
out
jae
aad
add
adc
jne
outsl
sarl
addl
repnz
mov
add
push
test
sbb
add
add
add
fiadds
stc
mov
add
loopne
mov
ljmp
cltd
and
mov
add
rolb
mov
mov
add
adc
ret
pop
mov
add
mov
in
add
add
xchg
adc
mov
add
add
aas
fidivl
ljmp
ss
xor
mov
mov
scas
xchg
incl
xchg
add
data16
adc
mov
add
mov
add
xchg
mov
dec
mov
aad
add
mov
popa
in
call
mov
sub
mov
adc
mov
inc
jae
cs
xchg
push
in
cmp
adc
jns
push
mov
xchg
imul
add
leave
inc
and
mov
outsb
cwtl
add
push
rolb
lret
push
push
or
push
jp,pt
sbb
mov
hlt
stos
popl
add
add
sbb
mov
ja
add
into
pop
aas
addb
cwtl
scas
sub
push
xor
mov
popf
mov
lret
in
mov
mov
dec
and
mov
add
aam
daa
cld
rcll
add
lods
test
add
mov
inc
inc
add
fwait
pusha
add
leave
bound
mov
xchg
fiaddl
mov
and
xchg
das
add
loopne
mov
push
add
mov
mov
mov
mov
mov
mov
lret
xchg
into
mov
dec
aam
fstps
add
add
mov
add
addb
rcrl
repnz
add
cmpsb
push
test
nop
add
mov
sti
mov
xlat
arpl
nop
add
hlt
jg
ds
pop
ss
ficoml
mov
xor
mov
inc
mov
or
out
pop
dec
add
lcall
add
scas
add
mov
mov
inc
add
mov
mov
mulb
or
in
ljmp
xchg
and
push
cmpsb
cli
les
add
inc
cltd
loope
add
xchg
les
mov
add
mov
add
cmc
in
push
fwait
add
mov
add
mov
idivb
cs
add
mov
mov
test
mov
sbb
add
mov
decl
add
ret
out
pop
xor
in
push
add
mov
aam
daa
jmp
mov
and
mov
test
cmp
push
push
aam
negl
xor
mov
fdivl
add
mov
pop
mov
add
pop
xchg
mov
xchg
add
dec
lods
test
add
mov
add
mov
add
rcll
fdivl
aas
sbb
add
pop
fidivl
push
fbld
dec
fists
add
leave
in
pop
call
mov
cld
incb
movsl
xchg
dec
pushf
scas
cs
jg
aas
push
fdiv
lea
lods
ret
inc
ret
mov
mov
cld
int
insb
push
ja
inc
mov
xchg
sarl
sbb
jecxz
rcrl
sahf
jecxz
pop
cmpsb
jl
mov
or
add
js
fisubs
pop
test
push
cmc
into
test
add
and
mov
add
cmp
cmp
test
sub
xchg
out
xor
add
lods
fiadds
addb
inc
xchg
lret
adc
push
jae
enter
add
mov
xlat
add
mov
aas
push
adc
add
lock
mov
and
sbbl
add
mov
mov
daa
insb
cmp
add
add
cmpsl
fstpt
les
mov
xor
fstpt
sti
mov
aaa
jae
das
mov
add
aas
mov
add
pop
in
and
mov
add
loop
mov
stc
push
popf
cmp
dec
addb
popf
dec
or
dec
lahf
or
cld
mov
sbb
mov
test
inc
mov
mov
repz
sbb
inc
pop
sbb
loopne
mov
rolb
mov
add
sub
loop
mov
mov
or
xlat
or
sbb
js
into
rolb
mov
scas
mov
add
lcall
mov
in
aam
ja
xor
add
mov
imul
xchg
add
push
test
mov
js
add
add
hlt
nop
add
out
mov
dec
push
add
das
xor
mov
imul
sbb
mov
int3
jno
pop
popf
inc
add
lret
mov
shl
mov
jg
or
ljmp
stos
cmp
push
add
sbb
mov
or
lods
shrl
add
mov
mov
mov
out
test
and
insl
cmp
out
push
fcom
or
mov
mov
jae
push
sbb
add
repz
pusha
add
or
lods
mov
cld
in
push
push
rolb
mov
lods
and
fadds
push
loope
dec
lret
mov
mov
add
lahf
sub
add
int3
mov
mov
js
mov
xchg
pop
movsl
movsl
call
data16
push
je
in
lds
iret
xor
das
mov
xchg
xchg
add
iret
jmp
adc
mov
mov
pop
mov
add
cld
push
push
xchg
stos
out
inc
test
mov
or
daa
out
pop
sub
sub
mov
mov
jg
jno
add
push
xor
mov
push
push
push
xor
pushf
lea
or
je
pop
jbe
push
add
add
add
dec
xchg
add
fistps
sub
sbb
add
mov
into
xor
xchg
xchg
add
test
sti
push
sub
pop
int3
push
rolb
mov
xchg
in
pop
aaa
mov
ret
sub
insl
idiv
xchg
rcrl
jnp
insb
push
add
mov
es
add
and
mov
in
hlt
out
sbb
das
in
cwtl
loop
mov
cwtl
clc
js
pop
int
clc
mov
xor
mov
add
mov
add
add
add
mov
add
add
pop
xchg
or
mov
out
std
lcall
jne
repnz
dec
sbb
adcl
dec
in
inc
sti
jne
cs
mov
test
add
add
jne
adc
mov
fstpt
mov
lea
mov
mov
sub
mov
push
xchg
xor
insb
add
mov
and
mov
pop
jb
mov
inc
pop
push
negb
enter
mov
inc
add
mov
sub
sti
mov
imul
inc
fmulp
icebp
pop
sbb
add
add
jae
addb
popf
dec
fsubl
mov
add
add
xchg
add
add
std
in
add
add
jbe
mov
cmpsl
clc
add
mov
ret
decl
cli
lahf
pop
outsb
scas
jnp
push
push
add
mov
add
mov
cltd
mov
jne
mov
fwait
xor
mov
mov
fstpl
mov
frstor
mov
aam
mov
mov
add
mov
inc
xlat
lods
in
clc
mov
add
dec
out
sub
sbb
mov
xor
scas
xor
fwait
mov
mov
add
add
mov
mov
xchg
roll
out
mov
mov
cmp
ficoml
fnsave
into
or
mov
loop
mov
sub
xchg
cmp
mov
inc
add
loop
mov
add
mov
mov
or
dec
out
or
inc
add
add
add
leave
sbb
mov
jmp
inc
mov
add
gs
testl
pop
cmpsl
mov
mov
add
test
or
inc
lods
or
xor
mov
test
mov
xchg
add
sbb
mov
pusha
add
iret
rolb
mov
orw
xorl
imulb
add
mov
aad
mov
clc
js
push
lods
jmp
mov
push
out
sarl
or
add
add
imul
inc
add
mov
outsl
sub
add
fdivs
and
test
mov
xor
mov
sbb
jl
inc
adc
mov
and
insl
add
ja
es
jne
inc
push
mov
rolb
rolb
mov
addr16
add
mov
mov
addr16
or
pop
loop
mov
lock
es
aaa
jge
xchg
lahf
mov
cmp
mov
mov
cltd
mov
mov
fwait
xchg
pushf
push
and
sbb
inc
add
fistpl
or
mov
rolb
mov
enter
mov
dec
cmp
mov
cmp
or
add
pop
psraw
mov
rolb
mov
out
aaa
sbb
popf
jae
pminsw
push
mov
cltd
andl
mov
adcl
pop
adc
lock
jge
mov
adc
xor
push
loopne
mov
add
mov
mov
sbb
das
pop
and
mov
pop
xor
pop
add
imul
mov
nop
add
les
mov
mov
xchg
jecxz
add
mov
lock
add
sbb
dec
jmp
push
addb
dec
xchg
daa
inc
push
add
insl
mov
cwtl
adc
repnz
add
popf
addb
adc
aad
lods
outsl
scas
cmc
test
dec
sub
and
xor
inc
dec
stc
dec
xor
add
dec
inc
push
push
push
add
push
out
xchg
test
and
mov
add
mov
or
aad
jae
sub
ds
cli
loop
mov
add
mov
loop
mov
xchg
or
sbb
sbb
in
gs
int
mov
dec
int
jo
mov
or
mov
sub
fndisi(8087
testl
mov
jp
int3
fiadds
arpl
inc
xchg
add
iret
test
enter
xchg
dec
test
cmp
test
rolb
xor
xchg
sbb
sbb
mov
int
and
xchg
add
mov
xchg
je
add
mull
add
jno
pop
pop
nop
add
add
in
out
dec
mov
add
fdivl
add
add
mov
and
mov
hlt
clc
in
add
mov
pop
xchg
xor
jle
push
int3
xchg
bound
mov
mov
xor
add
jp
adc
cltd
shrl
loopne
mov
sub
jns
mov
mov
ja
mov
add
mov
mov
jmp
sbb
int3
stos
in
mov
push
mov
insl
js
add
jg
push
inc
inc
pop
dec
aaa
add
mov
adc
cmp
mov
xor
adc
jmp
pop
jae
xor
xchg
das
xor
mov
out
pop
xchg
xor
mov
divb
adc
xor
dec
push
add
xor
les
add
loopne
mov
add
lret
scas
inc
iret
call
nop
add
xor
call
mov
inc
mov
mov
or
ja
xlat
dec
pop
into
or
adc
testl
fisttpl
ja
pop
cmp
add
xor
sbbl
add
das
jle
add
mov
jge
adc
aad
imul
add
mov
aad
rolb
mov
scas
pop
movsb
inc
add
daa
lahf
mov
pop
dec
scas
cmp
xor
mov
pusha
add
push
cmc
and
bound
mov
add
push
xor
pop
add
mov
dec
push
fisttpll
cmp
lretw
cmpsb
rolb
mov
cmp
add
insb
frstor
inc
or
pop
jle
add
add
mov
add
mov
mov
dec
aam
add
push
es
mov
leave
adcl
cmp
ucomiss
in
sbb
xchg
daa
aam
scas
rolb
mov
and
mov
mov
loopw
mov
pusha
add
push
push
fadds
mov
pushf
xchg
add
mov
fcomps
mov
add
mov
add
sub
dec
sbb
xchg
push
add
jne
xchg
xor
sbb
inc
mov
rolb
mov
adc
mov
xchg
add
testl
inc
pop
dec
xor
xlat
push
ss
jns
rolb
mov
and
xor
mov
mov
mov
call
lock
cmp
add
add
outsb
jns
lds
jnp
add
insb
xchg
mov
mov
lods
add
and
mov
mov
dec
mov
call
mov
test
daa
sbb
jle
xor
mov
cwtl
and
mov
andl
scas
jb
mov
mov
aas
leave
das
mov
test
mov
add
mov
aam
ljmp
jo
mov
lcall
rolb
mov
add
mov
add
add
xchg
adc
fildl
push
add
insl
sub
cmp
add
xor
jae
inc
adc
in
jecxz
add
add
repnz
add
mov
jb
mov
negl
mov
add
cmp
add
add
mov
pop
push
fxch
push
scas
sub
movsl
or
add
inc
dec
sti
es
add
xor
push
call
test
and
mov
add
cmp
movsb
in
add
mov
ffree
mov
add
rolb
mov
mov
loopne
mov
mov
mov
inc
and
inc
add
add
insl
push
add
jnp
jne
dec
mov
mov
pop
pop
sub
jae
xor
pop
jge
jnp
xor
add
sub
add
cmp
repnz
mov
ficomps
fwait
inc
rolb
mov
add
aam
outsb
mov
bound
mov
scas
rep
cmp
add
cld
or
test
xor
mov
dec
push
mov
mov
jbe
push
pop
or
add
sub
outsl
es
push
add
mov
movsb
dec
jge
adc
push
std
arpl
push
push
adc
mov
mov
jae
push
lea
gs
and
mov
add
lea
cmc
inc
sti
sbb
jb
mov
add
loop
mov
mov
mov
xchg
addb
loopne
mov
in
sub
cli
add
add
cli
mov
ss
pop
sub
push
add
es
push
sbb
loop
mov
xchg
mov
in
and
mov
add
push
and
mov
add
sbb
cmp
mov
add
add
push
add
mov
pop
xor
push
ret
xchg
add
aam
cmp
imul
gs
ss
and
mov
add
pushf
in
jno
add
frstor
in
cltd
sbb
iret
jg
add
mov
inc
mov
inc
stos
inc
out
sbbl
jl,pn
adc
mov
xor
mov
pop
icebp
leave
fldt
data16
fimull
add
sub
jge
int3
xlat
sbb
mov
hlt
pop
sub
dec
cmp
sbb
mov
hlt
aas
and
jns
insl
push
addl
xor
adc
add
fdivrs
mov
call
outsl
pop
das
xchg
pop
xchg
add
or
mov
ljmp
adc
mov
adc
xchg
or
in
stos
push
adc
mov
mov
popf
xor
pop
addb
or
jbe
dec
lock
pushf
fs
jae
adc
jne
dec
sbb
faddl
mov
sbb
test
add
int
fwait
and
incl
adc
mov
je
pusha
add
mov
add
fldcw
loopne
mov
sub
mov
fucomip
sti
mov
push
jp
sahf
dec
imul
mov
add
repnz
imul
xchg
ljmp
jl
xor
mov
js
mov
test
add
mov
jecxz
pushf
add
adc
jge
mov
push
out
and
xchg
leave
cmp
test
push
rolb
pop
xchg
mov
add
cli
aas
cltd
mov
bound
mov
xchg
ds
mov
or
jle
hlt
mov
dec
lret
cmp
xchg
ja
adc
addb
mov
mov
cld
mov
xchg
jge
add
dec
jl
popl
jb
mov
push
test
mov
mov
mov
add
pop
adc
sahf
stos
inc
shrl
add
mov
jl
mov
lret
test
add
mov
das
and
mov
sub
sti
std
jp
mov
das
sbb
mov
clc
xchg
jle
inc
mov
sti
pop
cwtl
and
mov
jp
inc
enter
in
icebp
sbb
insl
dec
lahf
mov
mov
inc
mov
inc
add
int3
inc
add
add
mov
pusha
add
pop
xor
xchg
add
int3
in
arpl
mov
add
pop
rorl
add
fbld
mov
push
fwait
adc
mov
push
adc
push
test
push
sbb
fwait
pop
and
push
es
loopne
mov
push
scas
inc
mov
add
mov
scas
or
mov
and
xchg
add
testl
add
fisttpl
mov
out
rolb
mov
fwait
inc
rolb
into
mov
sbb
gs
fstp
addb
aas
pop
lea
je
add
jae
xchg
pop
pop
lret
mov
sub
jne
and
mov
mov
cmp
in
lahf
mov
lahf
sub
ljmp
test
adc
mov
pushf
and
add
inc
cmc
jmp
and
add
mov
dec
dec
call
mov
push
add
mov
std
jbe
ret
pop
push
out
push
insl
mov
push
add
push
stos
jg
ret
testb
iret
mov
popf
nop
add
add
xor
enter
movsb
or
mov
mov
sub
sbb
mov
mov
adc
mov
mov
dec
pop
ret
mov
dec
int
pop
xlat
lea
nop
add
or
sahf
fnstcw
mov
inc
leave
insl
scas
bound
mov
pop
push
cli
push
xchg
fadds
mov
pop
pop
dec
jb
mov
add
pop
gs
aaa
or
das
and
add
repnz
mov
add
dec
cmpsl
cmpsb
mov
mov
xor
cmpsl
dec
xor
daa
adc
frstor
sub
inc
add
or
movsl
sbb
nop
add
pop
jae
aam
pop
dec
mov
cmp
negl
ret
mov
mov
sbb
testl
cmp
add
inc
push
aas
std
mov
js
push
nop
add
std
xor
mov
add
mov
jecxz
fdivrs
add
mov
sbb
mov
add
or
inc
mov
cmp
mov
cmp
pop
mov
add
lds
mov
repnz
push
mov
push
aam
add
cmp
addb
insl
fldcw
and
mov
push
std
loope
mov
mov
out
popf
xchg
cmpsb
mov
mov
aas
popa
rolb
mov
or
mov
cmpsb
dec
out
scas
mov
pop
test
mov
out
pop
and
mov
mov
mov
rolb
mov
xchg
rolb
mov
mov
ljmp
mov
add
mov
mov
add
in
daa
inc
push
aaa
lahf
fst
add
cmp
lods
lea
ret
shll
add
mov
fstpt
add
push
cltd
les
add
mov
mov
add
inc
pop
dec
adc
mov
add
ljmp
mov
ss
mov
add
sbb
out
add
sbb
bound
mov
lods
mov
mov
push
call
mov
popf
jnp
bound
mov
add
pop
mov
jae
xor
pop
sti
out
adc
add
or
mov
add
notb
add
add
aas
pop
pop
and
movsl
xchg
add
and
andl
mov
stos
or
test
mov
sahf
push
mov
out
pop
mov
aad
and
mov
jl
nop
add
jge
scas
inc
add
daa
cmp
inc
jecxz
sbb
adc
scas
mov
xor
add
dec
cmp
adc
mov
add
add
mov
sbb
in
mov
jmp
ds
mov
or
cmp
rolb
mov
push
movsb
add
into
sahf
fcomip
cwtd
stc
sbb
xchg
sbb
stos
and
cmpsl
rolb
pop
ja
mov
lock
xor
mov
mov
inc
add
int
add
pop
fs
cld
push
add
push
movsb
popf
xchg
int
insb
icebp
pop
ficoms
cmp
out
outsb
jge
mov
rolb
cmp
add
inc
pop
jp
lret
mov
mov
aaa
dec
jo
mov
adc
mov
loope
jae
mov
out
mov
mov
inc
dec
jno
cltd
inc
xchg
stc
mov
mov
shrl
jno
icebp
rcrl
inc
inc
add
arpl
add
mov
int
or
out
jo
mov
push
mov
add
cmpsb
xor
add
jnp
adc
mov
dec
push
cld
fistpll
addb
cmpsb
fldt
in
inc
inc
incl
mov
testl
cmovle
loopne
mov
repnz
xchg
aad
pop
sub
add
inc
adc
outsl
pop
jmp
js
push
js
lock
add
dec
push
mov
mov
mov
jge
add
clc
test
xor
mov
dec
jae
in
enter
scas
push
in
call
add
aad
sbb
out
popf
shl
adc
mov
rolb
mov
mov
xor
add
mov
add
outsb
lods
mov
add
mov
xor
mov
jg
test
inc
add
adc
in
mov
mov
orl
pusha
add
cmpsb
imull
lods
lea
out
dec
push
push
mov
int3
je
mov
mov
adc
mov
clc
bound
mov
xor
outsl
mov
or
inc
add
dec
push
sahf
shll
in
pop
cmp
mov
push
dec
push
stos
test
sub
movsb
sti
hlt
addl
loope
add
sub
mov
jle
inc
add
enter
mov
fistpll
in
and
mov
lretw
ja
loope
and
mov
or
inc
and
movsl
xchg
mov
inc
imul
add
mov
mov
stos
xor
dec
repz
rcrl
add
movsl
mov
ljmp
data16
clc
scas
gs
out
lods
loopne
mov
scas
cmp
or
pop
jge
xor
pop
call
ret
or
xchg
loop
mov
sub
in
sub
out
xor
add
pop
mov
stos
pop
andl
cmp
jp
mov
mov
xor
push
add
aaa
aaa
scas
fistl
mov
idivb
mov
fisttps
xor
mov
mov
lret
rcll
ret
or
pop
insb
orl
push
add
xor
stos
int
repnz
out
add
orl
add
mov
mov
pusha
add
push
scas
stos
or
mov
lods
cmpsl
inc
mov
mov
xchg
mov
cmc
stos
xchg
rolb
mov
rcrl
repnz
cld
mov
jecxz
mov
ja
sahf
sbb
jle
add
dec
jnp
jns
add
add
dec
jecxz
dec
xlat
xlat
cmp
cmpsl
add
pop
mov
mov
add
add
test
push
sub
repnz
sub
wrmsr
add
mov
icebp
dec
mov
add
jae
sub
mov
cmp
or
add
sti
outsb
mov
mov
mov
clc
popf
fmull
xor
imul
mov
js
adc
mov
add
aam
add
add
dec
cli
mov
nop
add
xchg
ljmp
dec
jmp
cmp
insl
sbb
lahf
mov
int3
inc
add
push
inc
add
or
cmp
mov
lahf
adc
add
hlt
xlat
push
jmp
outsb
push
adc
mov
pop
add
mov
or
aas
and
dec
outsb
aam
mov
daa
adc
mov
add
out
rorl
jecxz
pop
or
rolb
mov
jmp
in
mov
mov
addb
push
popa
mov
pop
out
pop
ja
popf
lcall
outsb
push
test
nop
add
ss
mov
movsl
adc
mov
mov
cmp
sti
sbb
stos
or
in
jle
lods
inc
add
cmp
push
fidivrs
mov
mov
loop
mov
mov
stc
test
call
sbb
roll
mov
and
popa
je
push
es
dec
insb
out
add
lcall
scas
stos
push
int3
dec
jecxz
test
lock
mov
notb
mov
mov
mov
add
add
negb
ljmp
jo
mov
cmpsl
jae
aad
ret
dec
popf
xchg
add
fldl
ljmp
aam
push
mov
cmp
mov
add
cmpsb
loope
sub
add
cmp
mov
cld
das
in
mov
mov
mov
dec
mov
in
les
add
mov
jle
pop
add
mov
in
mov
stos
ja
xlat
adc
mov
daa
in
cmpsb
xchg
data16
out
cmp
dec
mov
scas
bound
mov
fnstcw
aaa
sbb
mov
repz
add
stc
mov
mov
rcrl
addb
idiv
add
push
adc
std
push
les
inc
add
or
aam
inc
in
mov
xchg
in
je
lods
pop
add
and
mov
pop
jl
inc
insb
cmpsb
dec
push
add
mov
mov
jae
bound
mov
xor
mov
inc
addb
cltd
mov
fstpt
mov
ja
xchg
enter
data16
or
jp
pop
std
xchg
add
ret
mov
in
add
mov
into
daa
xlat
in
cmc
cs
or
add
add
xchg
mov
aad
icebp
fidivl
aas
mov
test
loopne
mov
add
scas
ret
sbb
pop
push
sbb
push
stos
mov
inc
add
jnp
cmp
frstor
inc
ljmp
mov
mov
jmp
add
cwtl
add
outsl
cmp
lock
popf
mov
mov
xlat
mov
test
cmp
inc
add
mov
mov
mov
add
test
xor
sbb
out
pop
jmp
mov
popa
pop
scas
lods
mov
mov
xor
mov
ja
pop
mov
lea
sti
mov
add
mov
repz
pop
rolb
mov
fcomps
sub
pusha
add
mov
imulb
sub
xor
aaa
aaa
arpl
insb
cwtl
lret
cwtl
addr16
jb
mov
imul
data16
mov
or
push
push
outsb
leave
mov
fnstsw
cmp
outsl
sbb
dec
dec
and
mov
pop
js
arpl
rcr
movsb
aad
stos
adc
mov
jne
bound
mov
lea
add
mov
add
inc
cmp
xchg
gs
xchg
arpl
call
pop
mov
mov
pushf
pop
cs
add
iret
cs
mov
test
push
mov
mov
mov
rcl
mov
decl
out
pop
lret
mov
dec
ret
pop
cmpsl
mov
inc
jne
or
fwait
xchg
add
sbb
jmp
add
aaa
xor
icebp
testb
add
jl
adc
push
add
inc
addb
pop
lret
jl
bound
mov
push
xor
mov
add
mov
add
sbb
enter
ret
fs
mov
jae
stc
push
jo
mov
rolb
mov
mov
add
push
cmp
sarl
xchg
addb
push
pop
xchg
and
mov
mov
add
mov
mov
mov
push
lods
je
push
movsb
das
mov
test
xlat
inc
frstor
add
sbb
mulb
mov
mov
aaa
push
fistpl
cmp
cmp
in
sub
add
ljmp
mov
cmp
or
pop
scas
out
xchg
div
fwait
push
pop
jg
add
mov
mov
add
out
sarl
mov
push
mov
aam
bound
mov
clc
cli
or
adc
add
adc
jg
mov
add
jne
bound
mov
push
stos
rolb
mov
std
fwait
pop
mov
cmp
push
add
add
mov
stos
add
pop
dec
rolb
dec
inc
loope
outsb
pop
pop
mov
sub
fnstcw
add
outsl
in
out
pop
xor
mov
enter
add
mov
or
mov
jo
mov
mov
and
mov
rolb
mov
imul
shrl
jo
mov
add
inc
jno
lea
sub
fldl
add
test
jb
mov
and
and
mov
ret
lea
std
xchg
mov
push
push
out
repnz
xchg
add
in
dec
outsl
data16
das
push
mov
add
pusha
add
and
mov
fisubrs
mov
adc
mov
xchg
cmp
dec
pop
or
cli
mov
mov
mov
rolb
daa
imul
insl
andl
dec
adc
mov
in
cmc
fwait
iret
push
add
mov
repnz
repnz
cwtl
xchg
in
pop
xchg
and
mov
push
cltd
pop
mov
add
stos
jmp
sub
add
add
psubsw
stos
or
fsubrs
out
push
repnz
nop
add
push
push
add
aaa
test
aad
push
fisttpl
mov
mov
mov
loop
mov
out
sub
add
push
into
pusha
add
add
or
sbb
icebp
pop
idivb
inc
add
mov
add
bound
mov
xor
push
add
jle
pop
adc
mov
mov
add
mov
loopw
mov
mov
out
call
daa
sti
adc
mov
out
mov
fcmovne
xor
mov
mov
loop
mov
mov
aas
jae
sub
pop
jecxz
jb
mov
push
add
jno
and
cmp
cwtl
jnp
push
add
mov
pop
push
push
add
mov
mov
xor
or
iret
push
add
scas
shll
cmp
push
cs
inc
rolb
mov
int3
inc
gs
adc
mov
out
mov
add
push
and
jae
sub
push
mov
loop
mov
xchg
aaa
pop
jb
mov
fists
cli
add
int3
lcall
ja
mov
mov
and
and
mov
pop
iret
inc
js
rorl
mov
cmp
xchg
shll
add
jle
repz
or
in
dec
loope
jae
jge
add
mov
add
add
mov
test
test
cmpsb
dec
xchg
xchg
push
into
divb
add
adc
mov
mov
inc
stc
ss
lock
in
fiaddl
mov
in
mov
jo
mov
sub
dec
ret
repnz
rolb
rolb
mov
add
mov
mov
mov
int
dec
int
push
jecxz
mov
movsb
pop
data16
mov
mov
pop
rolb
mov
aam
add
fdivr
lods
dec
and
movsb
mov
mov
fldl
sbb
imul
mov
jge
ret
in
lret
mov
pop
js
dec
mov
sub
aam
push
dec
jo
mov
add
adc
mov
xchg
push
iret
jp
je
adc
mov
fs
add
add
mov
pop
adc
and
mov
jo
mov
mov
ret
mov
sub
mov
adc
mov
jg
iret
pusha
add
mov
cmp
fmuls
lcall
xor
mov
pop
inc
add
scas
mul
cs
add
add
pop
sti
lret
test
nop
add
dec
loope
cmpsl
lea
mov
ret
nop
add
mov
add
test
jns
xor
mov
add
or
jmp
mov
lcall
out
movsb
or
mov
and
mov
mov
mov
sbb
fs
mov
clc
jb
mov
out
dec
push
add
add
mov
mov
add
pop
inc
sbb
cmp
mov
gs
sbb
stc
xorl
pop
sbb
add
stos
mov
xor
outsl
mov
inc
scas
icebp
push
pop
repnz
fld
add
mov
push
add
and
jecxz
and
mov
lea
xchg
iret
xor
mov
sub
adc
ds
add
inc
jl
add
ss
mov
ljmp
fisubrl
pop
and
add
sub
ja
dec
in
fstl
pop
jb
mov
push
sbb
add
daa
and
imul
xchg
add
scas
hlt
in
sbb
out
pushf
or
mov
dec
xchg
add
mov
add
mov
push
pop
mov
add
test
add
mov
push
add
sub
aad
add
inc
ss
xor
mov
mov
push
lahf
in
fdiv
cmp
lods
fldl
pop
movsb
add
mov
lock
add
cmp
mov
sub
movsb
mov
add
sub
fimull
xcrypt-cbc
cmpsl
adc
je
jle
je
xchg
lods
inc
push
dec
pop
mov
mov
rolb
mov
pop
sbbl
stos
cltd
clc
or
test
mov
mov
mov
dec
sti
out
dec
sub
gs
add
sub
mov
sti
push
sbb
adc
add
push
scas
sub
push
inc
lea
pop
xchg
add
add
add
mov
addr16
in
push
jbe
add
mov
iret
call
push
pop
xor
test
add
mov
add
add
mov
or
shr
in
mov
xchg
pop
ljmp
push
shrl
mov
negb
add
into
push
out
fadds
adc
mov
lods
pushf
cwtl
xor
mov
cmp
hlt
lret
xor
mov
sbb
xor
mov
in
and
dec
and
je
in
inc
pop
dec
ljmp
mov
js
and
mov
and
push
add
mov
mov
add
add
cld
add
and
cmc
lahf
fildll
idiv
mov
jecxz
scas
gs
ljmp
sbb
jbe
dec
rcll
push
sub
mov
pop
lea
in
mov
mov
inc
test
xchg
ret
cwtl
adc
loope
repz
mov
xor
add
mov
push
pop
cmp
es
mov
mov
cmpsl
hlt
insl
mov
mov
push
push
add
mov
loope
xor
and
mov
add
mov
xchg
add
popf
or
add
add
aas
jle
imul
add
fadds
pop
outsb
into
stc
sti
clc
ss
add
cmpsb
es
mov
mov
pop
sub
jmp
xor
dec
cmp
movl
cmp
mov
xchg
add
addb
pop
mov
mov
jg
mov
lret
add
sbb
inc
fwait
push
add
mov
popf
mov
test
add
mov
add
mov
add
mov
jns
add
xor
movsb
rolb
xor
add
rol
fisubs
push
fisttpll
stos
out
pop
fbld
pop
das
cmp
add
sbb
mov
bound
mov
add
lahf
jb
mov
lods
cmp
int
dec
push
xchg
cld
call
jle
add
mov
ret
jl
xchg
shll
cs
or
adc
mov
int
mov
xchg
add
jecxz
add
mov
repz
add
stc
sbbl
jae
add
jle
xor
loope,pt
sbb
cltd
fiadds
fcoml
add
loop
mov
ds
call
xchg
adc
add
mov
mov
rorl
rolb
mov
fstpl
mov
add
testl
popf
je,pt
lock
mov
popf
pushf
mov
test
test
sbb
fnstsw
imul
mov
dec
pop
hlt
hlt
outsl
jmp
jmp
and
mov
mov
mov
dec
cmp
test
lret
repnz
stos
dec
xchg
and
xor
xor
js
adc
shl
sbb
sub
pop
cmp
das
cld
cmpsl
and
jbe
mov
repnz
cmp
das
lods
xor
mov
xchg
pshufw
nop
add
std
sbb
rolb
and
mov
daa
xor
enter
mov
add
xchg
jb
mov
add
call
mov
addb
lea
dec
ja
mov
movsl
dec
out
enter
rolb
mov
add
addb
jl
pop
scas
cmp
sbb
mov
out
add
xlat
sub
xchg
xor
mov
add
notl
stc
pop
push
movsb
mov
pop
cmpsl
or
adc
mov
mov
xchg
das
or
les
test
clc
push
aas
int
sub
int
xchg
push
inc
stos
or
scas
sub
sbb
icebp
and
mov
add
or
sbb
mov
lretw
fwait
les
jb
mov
add
sub
fs
sbb
mov
xor
mov
ret
xchg
rolb
mov
scas
aam
lods
push
xor
rcrl
jecxz
add
imul
insb
jle
setge
dec
push
add
add
mov
add
add
pushw
add
jmp
or
inc
add
sahf
cmp
outsb
jl
pop
je
cmp
fcom
pop
sbb
cmp
add
add
xchg
leave
faddl
mov
add
outsb
lret
xor
push
push
add
mov
jp
add
sbb
mov
sub
add
cmp
jnp
arpl
and
in
adc
mov
mov
mov
adc
mov
xchg
sub
xchg
add
or
and
in
stos
test
xor
mov
lcall
cmc
xchg
mov
lahf
test
loop
mov
ds
out
xchg
inc
dec
xor
mov
pop
sbb
jne
outsb
jmp
add
test
add
notb
add
add
mov
xchg
addb
jbe
sti
ja
add
push
add
clc
addb
xchg
mov
sbb
add
adc
push
pop
lods
or
mov
bound
mov
test
add
pop
xor
add
addl
and
mov
push
push
addr16
jbe
dec
xor
push
int3
adc
mov
mov
mov
pop
icebp
sbb
xor
mov
rcr
sbb
jo
mov
rcrl
add
mov
pop
push
mov
pop
das
jne
push
add
loope
add
mov
add
sub
add
jle
add
fcoml
push
mov
mov
add
mov
add
cs
pop
mov
mov
add
and
inc
pop
pop
dec
pop
loope
add
mov
dec
rorl
fildll
inc
bound
mov
or
cli
cmc
jne
add
mov
xor
mov
jno
dec
mov
dec
sbb
mov
ja
add
push
jbe
mov
loopne
mov
pop
push
mov
add
add
lods
sub
jmp
mov
add
mov
sub
jmp
cmc
sbb
inc
cli
bound
mov
xchg
sub
in
clc
and
mov
sub
ret
pushf
add
jl
and
insb
movsl
dec
push
je
xor
mov
repnz
push
sub
mov
arpl
sub
repnz
movsl
pop
xor
mov
fcmove
sub
out
cwtl
inc
add
out
adc
jg
push
or
jno
jg
repnz
mov
fmul
inc
add
inc
add
mov
sbb
mov
shrl
push
and
out
lods
inc
pop
mov
aad
jmp
mov
mov
movsb
bound
mov
add
xchg
cmp
mov
mov
add
cmp
add
mov
mov
mov
mov
fs
dec
push
jno
mov
mov
push
loope
mov
insb
xor
fcoml
mov
xor
mov
cmpsl
cmp
add
pop
fidivs
xchg
out
add
inc
add
add
mov
pop
xchg
add
push
outsl
js
icebp
mull
add
mov
add
add
xchg
or
add
jno
mov
lods
cld
mov
mov
cmp
lods
pop
sti
fisttpll
cmp
jb
mov
mov
js
add
ja
add
xchg
fnsave
add
inc
dec
mov
fwait
xchg
mov
mov
mov
mov
xchg
inc
add
dec
call
jnp
stos
and
cmp
mov
fidivrs
push
mov
mov
inc
and
mov
imulb
mov
mov
je
mov
pop
pop
fwait
into
addb
imul
cvttps2pi
add
add
add
ret
fwait
stc
adc
outsb
mov
mov
ret
repnz
cltd
jmp
jno
mov
setne
add
ljmpw
cmp
test
lods
sbb
add
lds
add
stos
daa
sbb
ds
add
sbb
add
pop
mov
mov
test
push
add
popa
pop
push
add
into
inc
add
stos
cmpsb
out
fistl
xchg
out
jle
stos
xchg
std
arpl
inc
fimuls
sahf
push
add
cmp
adc
int3
or
mov
add
into
addl
pop
inc
into
incl
add
add
imul
daa
test
add
xchg
add
mov
jg
mov
and
mov
add
imul
add
jnp
scas
and
mov
mov
xchg
in
cmpsl
call
jns
mov
mov
xchg
fidivrl
xor
mov
cmp
stos
movsl
sub
pop
sbb
push
add
mov
xchg
movlps
mov
mov
push
mov
cmp
dec
outsl
test
mov
cli
mov
idivb
jbe
bound
mov
fisttpll
sbb
mov
jmp
pop
push
clc
xchg
repz
lahf
cmc
lret
xchg
das
mov
mov
mov
gs
insl
sub
adc
mov
add
test
add
sbb
or
stos
push
stc
dec
mov
add
enter
mov
and
mov
sbbl
pop
jo
mov
xchg
or
adc
fcoml
mov
movsl
lods
iret
mov
mov
push
add
pop
add
mov
add
push
aaa
ds
jo
mov
fdivrs
into
cmp
test
adc
push
push
and
push
icebp
and
fdivrp
inc
add
add
aad
push
imul
std
inc
cs
fcompl
cwtl
and
add
movsb
pop
adc
mov
cmp
jmp
xchg
pop
mov
sbb
sahf
sbb
xor
or
sub
inc
add
cmp
pop
inc
adc
mov
jnp
dec
or
add
mov
add
push
add
or
or
mov
add
mov
add
or
xchg
add
outsl
rolb
mov
rolb
mov
add
in
ja
cli
rolb
mov
addb
lds
jp
mov
shr
inc
cs
xlat
inc
and
mov
cmp
pop
pop
adc
addb
sbb
push
sbb
lds
xchg
and
mov
cltd
xchg
pushf
push
push
add
pop
and
mov
inc
add
pop
out
testl
repz
xlat
mov
or
and
call
cmp
out
add
mov
mov
cmp
fbstp
int3
out
dec
dec
and
mov
mov
sub
aaa
mov
xor
mov
mov
inc
sti
call
repnz
and
mov
leave
add
mov
xchg
jg
fiadds
add
push
add
lahf
loopne
mov
add
jle
fs
idivb
push
sbb
inc
fadds
mov
mov
shll
fadds
adc
mov
add
push
jnp
ljmp
cmp
iret
inc
add
mov
out
fwait
pushf
add
bound
mov
rcrl
int3
push
jb
mov
mov
addb
pusha
add
mov
dec
out
mov
add
lcall
push
mov
aad
add
enter
ljmp
call
stos
inc
add
rcll
leave
or
loope
lea
mov
and
and
mov
outsl
mov
mov
ficoml
jmp
mov
add
loope
cwtl
pop
mov
popf
sbb
add
add
add
sti
scas
mov
push
ljmp
std
lcall
add
add
mov
pop
pop
js
jg
sub
mov
adc
mov
cmp
mov
xchg
cmp
mov
mov
mov
mov
dec
adc
pop
xchg
imul
mov
add
subl
shll
mov
xor
and
rcr
lea
out
push
inc
sub
mov
mov
jmp
push
ss
sbb
mov
cli
stos
jnp
add
mov
lret
and
mov
and
mov
shll
into
insl
sub
leave
xor
mov
test
sbb
mov
fcmove
xchg
sbb
push
sub
gs
imulb
add
xchg
outsb
lds
outsl
aad
add
scas
movsl
repnz
roll
add
dec
mov
movsl
sbb
jg
aad
mov
mov
push
sbb
push
pushf
mov
jp
and
mov
lcall
xor
out
ds
cmp
xchg
cmp
addb
pop
arpl
in
mov
or
add
add
mov
int3
call
mov
mov
pop
dec
xchg
test
jp
ja
xchg
sarl
push
and
fidivrl
jb
mov
add
jno
add
dec
mov
lods
stos
push
rolb
mov
cli
mov
pop
into
insb
mov
xor
mov
mov
int3
cmpsb
pop
sub
cmp
addr16
inc
mov
mov
mov
xlat
mov
xchg
add
scas
mov
and
mov
add
fwait
mov
in
adc
pop
add
mov
pop
cs
aad
clc
push
dec
xor
rolb
mov
ja,pn
mov
add
sbb
inc
add
cmp
outsl
mov
mov
jl
leave
or
dec
xor
arpl
mov
add
mov
ljmp
or
mov
mov
pop
js
jbe
mov
imull
pop
fsubrs
jb
mov
inc
push
or
pop
add
jb
mov
add
add
or
or
js
scas
or
add
or
jle
push
cmpsl
cmpsb
xchg
test
sti
ss
dec
out
mov
mov
jg
add
xchg
add
sbb
add
pusha
add
and
push
and
mov
mov
popf
sbb
out
push
adc
mov
les
sbb
shl
or
loopne
mov
cmp
add
mov
xor
ljmp
or
mov
pop
test
jb
mov
add
fninit
add
add
inc
pop
ja
add
lods
inc
dec
mov
mov
imul
dec
call
pop
js
imul
icebp
lods
lea
mov
mov
add
ja
mov
mov
mov
mov
add
mov
mov
jno
dec
cltd
sub
fidivl
mov
int
adc
mov
aad
jl
lock
cmp
pushf
cmpsl
mov
add
pop
mov
mov
test
mov
mov
outsl
aam
sbb
out
mov
xor
fbstp
pop
dec
mov
mov
and
gs
mov
ljmp
mov
pop
in
dec
je
cwtl
jns
add
sub
movl
add
cld
jg
rolb
mov
xchg
gs
add
gs
pop
cld
clc
jne
sub
rcrl
mov
adc
mov
fiadds
rolb
mov
sbb
add
das
jle
push
xor
mov
jb
mov
mov
jecxz
rolb
mov
xchg
inc
stc
mov
rcr
scas
or
jl
add
dec
xchg
add
mov
add
inc
cmp
add
jne
pop
sbb
lea
stc
movsb
cmp
popa
leave
xor
cmpsb
movsb
loop
mov
or
add
add
mov
xchg
jbe
repnz
in
add
jbe
sbb
jbe
and
popf
pop
xchg
lcall
adc
mov
xchg
add
cld
and
xor
nopl
imul
inc
add
adc
ret
jbe
jbe
insl
mov
add
pushf
test
xchg
xchg
jb
mov
or
add
clc
xchg
es
in
lock
adc
mov
add
int
imul
mov
or
shrl
xor
mov
sub
and
add
test
lret
dec
xchg
and
mov
les
sti
lods
jl
aam
clc
mov
add
mov
xlat
repz
mov
mov
int
ja
add
pop
inc
ljmp
ret
cmpsl
fisubrl
jb
mov
outsl
stos
sub
pop
xor
mov
mov
and
mov
lret
lea
movsl
rcr
cmp
testl
add
xchg
lret
cwtl
inc
and
inc
imul
pop
sub
mov
xor
mov
xorl
push
dec
jb
mov
add
iret
mov
add
mov
sub
roll
mov
push
jl
dec
jo
mov
scas
mov
scas
sbb
sub
add
xor
mov
and
outsl
pop
jne
add
add
cmc
xor
push
add
pop
sahf
xorl
push
push
loopne
mov
mov
xchg
and
add
pop
inc
xor
xchg
cltd
out
push
fwait
cmp
and
aam
xor
push
aaa
in
jmp
add
add
loopne
mov
xchg
add
add
dec
jne
repz
mov
je
add
pop
jmp
add
fwait
adc
mov
add
xchg
inc
add
je
and
gs
fadds
mov
inc
ljmp
mov
inc
in
mov
mov
xchg
add
add
sbb
add
stc
mov
mov
mov
fsub
pushf
mov
mov
mov
add
mov
mov
and
add
jae
mov
bound
mov
filds
imul
test
movsl
and
mov
and
mov
sti
pusha
add
sub
mov
lret
lcall
adc
add
cmpsb
pushf
scas
je
jecxz
dec
mov
adc
mov
push
add
mov
mov
nop
add
push
jge
add
mov
add
add
fwait
xchg
fstp
mov
mov
cmp
arpl
adc
sub
add
xchg
into
add
mov
add
ret
add
fwait
xor
addb
add
mov
stc
in
push
scas
faddp
insl
pop
std
out
push
sub
xor
mov
loope
negl
lods
xchg
xor
push
pushf
aam
cmp
push
xor
mov
mov
add
addr16
sbb
inc
call
mov
imul
hlt
mov
and
movb
jns
stos
and
mov
lret
pop
lahf
pop
and
lds
mov
notb
add
in
add
and
mov
jno
dec
data16
sub
mov
jg
mov
stos
stos
lds
cmp
xor
fs
mov
mov
dec
mov
aas
icebp
dec
push
add
add
pop
jb
mov
bswap
jmp
push
add
mov
add
xchg
or
pop
pop
dec
adc
mov
mov
mov
sbb
jge
ror
xor
mov
push
lret
fldln2
jne
sub
mov
lcall
mov
loopne
mov
xor
iret
push
add
in
repz
pushf
mov
mov
add
aaa
mov
xchg
inc
add
std
cs
add
sub
jle
out
iret
push
enter
in
and
mov
add
add
add
roll
out
inc
xorl
test
rolb
mov
push
add
or
mov
hlt
xor
push
add
mov
jbe
add
ja
imul
rolb
mov
mov
stos
jmp
mov
insb
outsb
imul
lods
hlt
in
ret
gs
cwtl
mov
mov
dec
mov
jle
enter
mov
inc
clc
xor
mov
and
int
into
jmp
fdivl
inc
mov
add
xchg
jb
mov
mov
xchg
mov
add
dec
clc
popl
add
pop
push
add
mov
mov
mov
lods
es
dec
jnp
testl
xor
sbb
and
jne
inc
mov
adc
mov
cli
dec
sub
xchg
jmp
add
mov
push
aad
mov
loopne
mov
add
scas
jns
rolb
mov
out
in
testl
mov
into
test
lock
push
fcomps
mov
sbb
bound
mov
add
int3
into
mov
xchg
inc
add
mov
add
or
fstl
mov
add
push
mov
inc
jl
adc
scas
loop
mov
rolb
rolb
mov
cmp
pop
fadd
add
ss
add
call
addb
cmp
and
add
movl
xor
mov
jno
scas
addb
fstpl
js
mov
jne
xchg
sbb
stos
mov
popa
mov
jbe
xchg
push
add
jnp
lock
mov
jg
fwait
lea
or
sti
stos
js
add
jne
movsb
cs
inc
in
xchg
das
or
add
jae
add
enter
mov
sbb
cwtl
aad
add
imul
test
mov
push
jne
mov
int3
add
pop
sub
rolb
mov
dec
mov
xor
mov
leave
push
sbb
pop
sub
arpl
data16
mov
push
aas
movsl
sahf
fiadds
add
scas
cltd
and
lret
add
ja
add
popa
cld
mov
in
inc
add
fcomps
test
hlt
adc
mov
xor
fnsave
mov
lea
dec
push
and
mov
inc
add
orl
jno
data16
add
inc
std
mov
add
mov
cli
pop
mov
lea
jbe
and
mov
fisubl
mov
iret
rolb
mov
jb
mov
and
mov
pop
andl
sub
rcrl
movb
or
pop
xor
mov
mov
add
decl
and
push
in
jnp
add
mov
mov
mov
xor
add
stc
mov
ja
bound
mov
pop
mov
sbb
imull
xchg
sub
lcall
pop
rolb
mov
push
add
shll
mov
add
fs
and
loopne
mov
add
loop
mov
sbb
xchg
out
lcall
add
pushf
loop
mov
js
ss
xor
dec
repnz
add
and
mov
outsl
jl
add
call
je
and
push
add
inc
lahf
fistpll
imul
stc
sahf
lds
lods
mov
mov
mov
outsb
test
cmp
lfs
push
jb
mov
mov
add
mov
mov
push
ret
jmp
sahf
jb
mov
outsl
sub
jmp
stos
sti
jae
push
xchg
and
jl
ficomps
call
test
pop
push
jb
mov
push
adc
daa
adc
ds
sti
fisttps
orl
repz
hlt
lret
fldt
jg
push
lods
cmpsl
fcompl
add
addr16
pop
insl
dec
and
insb
aam
dec
lock
inc
add
daa
mov
int3
data16
mov
repz
mov
add
stos
test
and
mov
add
pop
ds
out
lods
mov
out
ljmp
mov
add
mov
out
cmp
ljmp
fcmovnb
push
add
fcoms
add
dec
pop
or
xchg
cmp
jo
mov
aad
mov
in
popf
mov
pushf
mov
sbb
orl
decl
adc
aaa
sbb
dec
ret
xchg
fisttpl
mov
fnstcw
fisubrl
add
jge
cld
and
imulb
mov
sbb
mov
cmp
jge
out
fbstp
ljmp
adc
mov
add
lods
mov
xor
insb
inc
xor
add
dec
xchg
add
add
movsl
or
cmp
fadds
je
push
push
add
jg
mov
leave
inc
jg
dec
sub
add
mov
mov
je
add
pop
in
jo
mov
lret
cmc
and
mov
sub
add
mov
jns
cmp
aas
addr16
mov
pop
int
clc
mov
loop
mov
xor
iret
test
or
add
dec
aam
in
push
add
push
inc
add
mov
add
sub
xchg
cmpsl
xor
mov
mov
mov
mov
mov
gs
jmp
pop
push
pop
xchg
add
arpl
out
lahf
stos
mov
divb
mov
xrelease
movsl
push
jno
fdivs
add
xchg
pop
ja
jno
sbb
pop
iret
jae
scas
pop
subl
or
sbb
aam
jecxz
push
xchg
mov
inc
add
cmp
outsl
in
add
pop
rolb
mov
cmp
insb
sub
mov
test
add
mov
add
stos
fcmovnu
xchg
add
cli
xchg
adc
add
hlt
test
shld
cmp
mov
mov
dec
lahf
jmp
daa
cmp
mov
outsb
mov
add
leave
mov
js
fnstenv
lret
fs
bound
mov
add
sti
mov
mov
aaa
out
dec
hlt
mov
rolb
mov
lret
les
xchg
out
aas
cmp
add
xchg
mov
rolb
mov
fsubs
cmp
dec
in
xor
jno
iret
sub
push
mov
mov
inc
push
sub
stos
clc
or
movsl
xchg
test
add
add
push
jnp
dec
sbb
add
lods
pop
aas
pop
mov
repz
pop
add
sbb
into
add
push
dec
test
add
insb
cli
leave
jns
add
addb
mov
fnstcw
add
and
mov
mov
add
pushf
push
jp
int
inc
add
data16
add
mov
dec
inc
jbe
mov
pop
add
mov
jecxz
sub
adc
pop
inc
xchg
mov
mov
dec
sub
aam
mov
insb
daa
fldt
adc
mov
xor
mov
fs
rcrl
and
cmp
pop
sub
jle
clc
or
mov
mov
dec
iret
dec
cmpsl
pop
jecxz
jl
add
xchg
jle
push
pushf
in
fsubrs
fldt
mov
push
push
clc
stos
cmp
lahf
sbb
ficomps
roll
outsb
inc
or
add
sbb
mov
popf
int3
lahf
jge
lock
dec
jp
pop
outsl
mov
outsl
enter
out
int
push
add
inc
pop
pop
pusha
add
sub
sub
test
mov
add
jge
pop
ficoml
lods
mull
add
incl
sub
mov
add
mov
pop
adc
xor
in
int
and
mov
mov
adc
mov
in
test
push
mov
pop
mov
mov
cli
jae
hlt
pop
pop
aas
or
add
mov
aam
mov
mov
icebp
inc
jp
mov
fmuls
jb
mov
sbb
daa
clc
mov
mov
mov
cmp
aad
push
cmpsb
push
scas
jne
jb
mov
xchg
and
mov
lret
fcom
call
bound
mov
add
lods
in
inc
ja,pt
adc
and
mov
inc
add
stos
scas
pop
xchg
add
mov
je
or
in
xor
mov
pop
repz
mov
in
mov
mov
addb
push
in
testb
jg
adc
push
pop
jns
add
fcmovnu
decb
loopne,pn
mov
mov
pop
mov
mov
sahf
push
add
add
add
fstpl
into
incb
pop
dec
repnz
pop
mov
and
mov
add
movsb
and
mov
jl
dec
cmp
loopne
mov
mov
pushf
sti
jo
mov
lret
add
pop
out
mov
mov
addr16
xor
mov
repnz
mov
add
pop
test
add
mov
add
in
jmp
push
stos
sub
imul
add
pop
sub
pop
mov
add
ja
and
mov
popf
mov
mov
add
or
hlt
or
inc
in
insl
addr16
aas
adc
jge
add
mov
xchg
adc
lods
inc
fcomi
mov
fstps
mov
je
or
fsubr
mov
sti
pusha
add
mov
mov
cwtl
loopne
mov
aaa
fnstenv
add
dec
fcoml
aaa
and
mov
push
decb
cwtl
add
add
xchg
pusha
add
outsl
jp
add
jecxz
imul
add
stc
xchg
adc
aaa
cmp
out
push
popf
or
cs
int3
dec
mov
std
inc
int3
nop
add
push
in
add
outsl
mov
cltd
into
dec
jb
mov
add
lods
push
add
adc
adc
mov
add
hlt
movsb
mov
add
mov
mov
mov
ja
cs
jmp
leave
xlat
mov
out
mov
clc
add
dec
leave
fcom
cmp
stc
mov
add
addb
fnsave
lds
mov
pop
sub
out
rolb
mov
sub
daa
and
mov
xor
mov
movsb
ljmp
outsl
xchg
add
in
xchg
movsb
jmp
push
add
fimuls
sbb
mov
mov
ret
jp
fistps
repz
mov
jl
add
cmp
roll
add
mov
add
add
inc
add
add
mov
mov
sub
add
clc
mov
pop
outsl
shrl
mov
push
add
jnp
pushf
nop
add
push
and
data16
rolb
xchg
add
mov
popa
pop
pop
fdivl
add
add
mov
movsb
fistpll
mov
mov
mov
add
mov
xor
mov
addb
dec
xchg
add
mov
movsb
insb
cmp
out
jge
dec
lret
stos
cld
aad
inc
cmp
and
mov
clc
cmp
mov
add
mov
lahf
dec
adc
mov
add
cmpsl
sbb
mov
jg
test
inc
pop
out
adc
cli
loop
mov
clc
out
sbb
jg
mov
mov
mov
movsb
lock
movl
and
push
js
add
stc
rcrl
xor
add
addr16
bound
mov
repnz
push
xchg
pusha
add
pop
mov
jns
sub
sbb
mov
pop
adc
repnz
test
pop
ljmp
test
mov
mov
adc
mov
clc
or
shll
add
add
add
mov
jo
mov
mov
daa
outsb
push
out
add
sbb
aam
dec
push
cltd
shrl
ljmp
out
imul
push
insb
fimull
mov
push
and
bound
mov
add
mov
or
js
hlt
insb
sbb
sbb
push
jl
jmp
sahf
fsqrt
sub
add
add
add
xor
dec
xor
lret
mov
add
in
pusha
add
add
mov
jmp
fstp
mov
push
add
pop
fstps
