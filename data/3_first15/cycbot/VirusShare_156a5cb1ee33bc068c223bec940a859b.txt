push
mov
mov
inc
add
adc
lret
aaa
mov
popf
mov
and
lods
push
insl
loope
or
or
adc
pop
in
in
push
mov
jno
add
iret
xchg
xchg
add
xor
scas
arpl
inc
add
push
xchg
xchg
add
and
mov
pushf
das
stos
lods
sub
insl
sbb
add
add
push
sbb
jne
cmpsb
add
add
add
mov
jg
add
fidivs
nop
add
fsubs
mov
add
push
adc
add
xchg
mov
jne
inc
add
add
xchg
add
push
add
and
mov
sub
xchg
dec
cmp
add
movb
ficomps
add
insb
leave
loope
subl
push
cmp
mov
gs
mov
mov
lret
or
insb
ljmp
cmp
or
loop
and
mov
adc
jge
lret
push
and
addb
pop
dec
stos
jns
loopne
sbb
add
mov
mov
add
xor
add
mov
leave
enter
outsb
pushf
xor
clc
inc
add
sbb
sets
movsl
cltd
xchg
add
xchg
mov
add
add
and
dec
aaa
mov
jbe
aas
mov
xchg
add
mov
lds
in
sarl
in
add
mov
cmp
popf
loopne
repz
into
fwait
mov
push
add
cwtl
xor
ret
test
inc
loope
add
inc
sub
mov
cmc
outsb
cs
pop
add
inc
add
add
jne
les
jns
cltd
xor
pusha
add
int3
push
cmp
sbb
xchg
imul
mov
arpl
add
les
xchg
add
inc
add
xor
add
add
add
mov
fildl
add
push
cld
fsubr
and
add
add
sbb
sbb
inc
add
cmp
and
mov
jns
mov
add
xchg
add
dec
rolb
add
inc
add
cmp
pop
wrmsr
add
push
add
mov
das
cld
xchg
dec
mov
test
xor
loope
mov
jnp
cld
repz
stc
aam
adc
ret
jbe
out
pushf
aas
scas
xor
lea
add
push
mov
add
fisubrl
fucomp
ret
out
mov
push
add
add
mov
leave
cld
cmc
dec
js
xchg
add
mov
xchg
shll
add
leave
pop
jne
add
mov
or
add
in
adc
cmp
add
xor
mov
lock
rolb
add
inc
add
add
test
bound
mov
fcomps
add
add
push
cmp
out
call
sub
lret
add
xor
xchg
add
add
dec
clc
add
sub
bound
mov
mov
jmp
jge
fistpl
add
mov
fisttpll
mov
jg,pn
pop
inc
add
loopne
leave
inc
add
dec
ret
pop
ret
shll
mov
add
fcmovnb
dec
xor
adc
add
add
rcrl
jge
xor
xchg
add
lea
xchg
in
adc
pop
in
or
dec
xor
mov
add
xchg
imul
cmp
push
aaa
and
dec
or
movsl
mov
inc
add
lret
xor
icebp
jge
ja
add
imul
rolb
or
sbb
mov
fbld
mov
add
add
movb
int
faddl
fs
add
dec
daa
inc
add
enter
mov
jno
pusha
add
add
mov
sub
call
add
add
add
and
sbb
mov
pop
xor
xchg
into
and
mov
add
adc
cwtl
je
movsb
add
adc
enter
inc
push
mov
outsl
jp
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
mov
push
pop
push
push
jmp
jmp
add
add
sahf
pop
xchg
add
and
movb
add
lods
ds
add
mov
fiadds
pop
pop
mov
testl
add
mov
mov
xchg
adc
add
lahf
jmp
test
pushf
push
les
inc
add
aas
mov
mov
add
leave
mov
add
add
imul
cli
mov
or
xchg
add
mov
xchg
icebp
shr
call
push
aad
lods
test
aam
imul
sbb
add
sub
jl
cli
fistpll
add
enter
mov
push
mov
lcall
lret
ss
jmp
ret
imul
adc
sub
loope
jmp
sub
es
loope
das
pusha
add
adc
sti
lods
xchg
add
lods
arpl
add
add
add
aaa
adc
dec
into
mov
jge
add
xchg
pop
aam
mov
int
out
int
add
int
add
ficompl
outsl
mov
sti
insb
jecxz
add
bts
or
mov
inc
add
andl
clc
aad
sbb
add
scas
out
nop
add
add
mov
add
ds
pop
cmp
cmpsb
add
jb
int
fistpll
jp
add
mov
stos
xor
cwtl
jg,pt
xor
inc
xchg
pop
push
mov
add
cmp
xor
fs
popa
inc
add
clc
xor
ds
sbb
and
mov
add
sub
addr16
xor
add
test
and
mov
mov
stos
addb
add
inc
xchg
add
repz
sub
adc
mov
add
add
mov
js
lock
fiaddl
daa
mov
hlt
add
add
orl
mov
fucom
push
movaps
add
stos
lahf
cmp
jge
add
add
cli
gs
testl
rolb
adc
repz
sbb
adc
push
add
pop
add
mov
add
sarl
pop
lea
pop
and
mov
aad
inc
testb
test
repnz
mov
inc
add
adc
js
add
stc
add
imul
addb
push
add
mov
inc
add
loopne
cmpsb
add
roll
rolb
push
add
push
les
sbb
add
add
add
add
add
hlt
add
and
push
jmp
nop
add
add
sar
sbb
jg
dec
fisubs
and
push
jge
insl
stos
jnp
xchg
add
cld
rolb
insl
add
mov
mov
lret
mov
sub
mov
dec
sbb
or
scas
inc
add
cld
daa
sti
addr16
pop
xlat
repnz
add
or
sbb
add
add
add
add
add
add
add
rcll
add
das
roll
add
lret
xchg
push
jl
add
jp
rcll
pop
aaa
jp
add
sti
aad
sub
movb
cmpsl
mov
add
push
mov
xchg
mov
mov
das
xor
sbb
adc
call
xor
test
add
repnz
enter
icebp
sbb
jne
test
lods
sahf
jne
add
add
jo
mov
push
add
cs
xchg
or
add
iret
cwtl
cmp
pop
loopne
cmp
mov
add
add
fidivrl
add
fldenv
lods
das
aad
loopne
movb
out
mov
jp
lods
dec
enter
in
popf
hlt
add
ljmp
push
repnz
cmp
add
add
mov
mov
add
jge
addb
jne
push
movsl
sbb
pop
jl
push
xchg
jnp
add
ss
add
mov
add
add
mov
add
clc
mov
add
add
out
movb
movsl
jge
add
out
mov
sub
xchg
dec
or
pusha
add
lahf
bound
mov
addb
dec
pop
add
aaa
and
adc
sub
mov
stos
rolb
ds
lea
mov
add
add
add
rolb
sub
add
pop
xchg
add
addb
add
add
add
add
add
dec
lret
hlt
add
mov
cld
cmp
ljmp
mull
sub
pop
xcrypt-cbc
cmpsl
nop
add
add
mov
add
mov
mov
mov
ficomps
cmp
add
testb
inc
std
mov
mov
cli
xor
aas
sti
fistl
mov
xor
lods
xchg
cmc
lods
lea
mov
scas
stc
add
sbb
and
and
xor
sbb
int3
inc
imul
or
fiadds
call
mov
pusha
add
ret
sub
pop
jns
sub
add
add
fst
add
add
idivl
or
mov
mov
sub
add
add
imul
add
xor
add
or
pop
insb
push
sub
push
add
xor
pop
adcl
push
mov
sub
lahf
sub
fistpll
xchg
add
add
add
add
repz
mov
xor
mov
pop
popf
push
add
mov
loopne
mov
ret
inc
out
xchg
inc
add
add
jmp
xchg
add
add
add
dec
std
adc
mov
mov
add
scas
out
shl
add
dec
lahf
scas
je
lods
daa
and
mov
dec
addb
mov
sbb
pop
mov
lods
into
lret
mov
idivl
aam
in
jb
repz
fadds
mov
dec
sub
mov
add
add
sbb
mov
mov
mov
jb
out
imul
xchg
xchg
add
sub
add
inc
push
add
add
or
add
add
add
add
outsl
jg
add
jnp
xor
fcmove
xchg
add
xchg
add
add
add
int
push
pop
inc
add
in
or
dec
mov
add
mov
mov
add
dec
cmp
add
sub
and
and
aad
sbb
xchg
or
movsl
popf
repz
pop
add
add
add
mov
add
out
add
mov
add
add
dec
and
mov
bound
mov
sbb
out
std
adc
pop
inc
add
pop
mov
adcl
out
fwait
test
jbe
int3
cld
scas
mov
scas
in
cltd
fildll
mov
enter
rolb
stc
add
mov
in
push
add
ljmp
xlat
push
pop
push
add
out
push
add
add
add
mov
add
dec
push
add
mov
mov
mov
fst
add
enter
lahf
addr16
rolb
mov
shll
mov
add
mov
dec
out
fimuls
adc
sarl
add
add
add
add
insb
cmp
popa
loopne
cmpsb
add
add
push
add
lods
jbe
add
pop
int
ljmp
sbb
or
xchg
add
mov
inc
sub
sbb
add
inc
and
jle
mov
mov
jecxz
sub
adc
jmp
sbb
cmpsl
pop
fwait
cmp
rolb
lds
inc
add
int
and
adc
pushf
xor
cld
sub
dec
and
mov
add
cmp
dec
sub
jmp
mov
lcall
mov
add
jmp
testb
mov
sbb
imul
inc
add
inc
add
xchg
add
add
add
or
sti
and
out
fimull
outsb
or
jmp
cmp
aad
test
lcall
mov
dec
ret
jnp
add
je
pop
out
add
cmp
add
mov
mov
inc
push
add
add
aad
push
xchg
add
add
xor
add
in
sbb
mov
add
sti
addb
add
call
jp
mov
dec
les
idivl
clc
jp
add
mov
jo
out
outsl
in
cmpsb
add
add
test
mov
stc
push
test
cmpsl
add
inc
les
dec
outsl
add
sbb
lds
sub
mov
push
add
push
inc
cmp
add
lods
pop
out
into
jnp
test
add
mov
arpl
adc
add
add
adc
bound
mov
sub
outsb
inc
dec
xchg
add
dec
adc
xorl
imul
divl
add
fistpll
sub
mov
add
add
add
add
and
mov
rolb
jbe
xor
lcall
into
and
mov
add
push
add
je
aaa
notl
mov
int3
arpl
push
sahf
mov
dec
or
imul
movsl
add
adc
xchg
pop
aad
in
data16
push
add
add
loope
and
jecxz
jo,pn
mov
out
push
dec
stos
mov
add
cmp
jle
add
add
add
jbe
scas
pop
gs
xor
sahf
popf
std
rep
xor
and
add
cmpsl
xor
or
xchg
adc
lds
sub
inc
mov
std
pop
xor
add
mov
daa
jne,pt
add
pop
push
add
movb
insb
call
movsl
xchg
xchg
add
repnz
mov
inc
push
push
add
add
mov
add
loope
pop
mov
sbb
loop
jg
push
pop
cltd
jmp
sub
add
add
xor
mov
sbb
mov
mov
xchg
pushf
addb
push
add
sbb
add
dec
roll
insl
jbe
cld
jnp
or
imul
sub
add
inc
fstpt
inc
add
cmp
js
into
loop
mov
cltd
ret
fdivrs
or
icebp
lods
add
mov
add
add
leave
lret
call
add
test
add
cmc
ja
cmp
and
movsb
add
inc
clc
adc
xchg
xor
inc
add
cmp
loope
add
xchg
add
add
loop
adc
arpl
loopne
xor
sub
fdiv
rol
test
mov
repnz
add
mov
icebp
pop
js
add
into
dec
ljmp
lock
dec
fistl
orl
mov
mov
and
nop
add
hlt
add
add
mov
sub
mov
add
pop
test
lods
out
shrl
pop
mov
fs
iret
jmp
add
inc
sahf
repz
add
add
sbb
movsb
add
add
or
loope
mov
add
add
add
sbb
push
add
mov
call
jns
add
adc
add
add
adc
dec
nop
add
mov
xlat
insb
push
add
into
clc
mov
add
test
aad
ret
mov
jno
repz
cmp
and
mov
add
mov
mov
addb
cmp
lock
mov
sbb
in
dec
add
xchg
repnz
add
popf
std
mov
add
repnz
mov
jmp
add
sbb
clc
jo
dec
nop
add
cmp
mov
add
jb
xlat
daa
sub
xlat
pop
roll
and
outsb
mov
cmp
shll
add
cld
daa
inc
clc
ret
std
cwtl
xchg
add
mov
dec
mov
wrmsr
add
decl
add
inc
cmc
sti
or
add
mov
cmpsb
add
adc
add
mov
add
test
xchg
add
adc
ret
in
pop
aam
sub
mov
fwait
jmp
out
repnz
movsb
add
cli
clc
or
ret
and
push
add
fimuls
add
pop
mov
mov
imul
push
cmp
jle
mov
lea
jne
enter
add
mov
mov
add
sub
int3
dec
mov
add
mov
cld
inc
add
in
ficoml
enter
mov
xchg
ds
add
cmpsb
add
add
add
sbb
add
movb
adc
lcall
add
pop
inc
add
sbb
outsb
test
in
inc
dec
mov
mov
fnstcw
add
pop
movsl
add
add
add
loop
lahf
pushf
sub
ret
add
add
add
add
mov
jle
add
mov
xchg
pop
inc
push
add
hlt
add
xchg
scas
or
add
insl
dec
clc
lock
sub
pop
xor
cmp
add
add
add
jl
rolb
push
aaa
daa
mov
or
test
in
insb
andl
ret
aam
bound
mov
sbb
and
nop
add
add
in
sbbl
in
jl
add
mov
dec
shl
push
add
add
and
mov
mov
inc
in
sbb
xor
cmp
add
lds
sbb
arpl
hlt
add
in
jne
add
data16
adc
je
in
mov
pusha
add
enter
mov
stc
xor
daa
lds
add
add
mov
movsl
mov
add
add
add
add
xor
fldenv
add
inc
add
add
dec
cli
inc
xlat
add
add
push
add
add
mov
add
add
mov
add
lds
push
add
jne
stc
cld
mov
or
add
add
js
cmp
fmuls
mov
dec
rolb
icebp
mov
int3
push
add
pop
ud0
mov
add
mov
jmp
add
add
rep
push
mov
aas
ds
add
arpl
add
repz
add
sbb
rolb
jl
in
inc
add
add
push
add
add
add
nop
add
and
mov
add
add
stos
clc
iret
js
add
por
add
dec
mov
add
add
or
push
add
outsl
adc
push
add
daa
stc
mov
add
lret
in
pop
loopne
cld
jne
push
add
loop
sub
lea
fcomps
imul
sahf
inc
fs
add
add
mov
mov
leave
jbe
in
out
pop
xchg
popf
punpckhwd
in
out
test
repnz
xor
in
xchg
add
scas
test
je
fstpl
lods
dec
inc
out
add
add
pop
add
sahf
fst
adc
test
push
add
jle
sub
add
jb
pushf
insl
stos
test
add
test
ja
xchg
add
mov
add
das
mov
je
adc
mov
adc
loop
fbstp
jns
fcoms
dec
sbbl
inc
in
mov
test
jbe
pop
in
ja
add
xchg
and
mov
inc
add
add
add
int
sbb
add
aam
push
add
rolb
lret
jo
test
add
in
mov
add
loope
sub
dec
dec
mov
jmp
add
and
xor
lock
stos
jl
add
add
fmull
sbb
fld
add
mov
add
or
addb
lods
pop
loope
add
add
adc
xchg
add
mov
les
fdiv
dec
addb
and
push
push
add
add
into
test
sti
hlt
add
rorl
ja
mov
js,pn
lea
stos
sbb
dec
insb
shrl
arpl
ljmp
add
sub
sahf
cmp
test
mull
pop
outsb
mov
add
cmp
dec
fistpl
push
add
mov
fdiv
pop
xchg
lret
and
mov
or
dec
sbb
jmp
add
add
loop
jge
popa
cmp
add
add
sub
loopne
mov
add
in
mov
rolb
fsub
add
bswap
mov
add
add
mov
lock
mov
gs
stos
jle
cltd
pop
movsb
add
push
add
adc
cmp
sbb
mov
push
add
hlt
add
sahf
cmp
add
add
or
jb
sub
add
add
cmpsl
xchg
adc
mov
mov
pop
mov
fwait
cmp
mov
cmc
mov
add
add
add
sub
add
mov
leave
leave
push
xchg
dec
out
jbe
mov
sti
addr16
cwtl
testb
add
dec
and
mov
loope
sub
cwtl
cld
pop
add
pop
push
push
add
xchg
add
pop
pop
hlt
add
leave
popa
scas
jne
stos
insl
pop
jmp
xchg
cmpsb
add
test
mov
out
ja
xor
clc
testb
imul
add
add
inc
add
add
and
push
push
adc
jns
add
cmp
add
cmc
test
mov
dec
les
pop
adc
add
pop
xchg
test
mov
cld
mov
add
xchg
jnp
sub
push
add
clc
xor
or
push
adc
pusha
add
les
aas
fwait
xor
add
push
sahf
aad
add
inc
add
adc
push
add
pusha
add
push
lcall
and
mov
add
in
pop
sub
add
insl
xor
sbb
lock
inc
add
fdivrs
cmp
cmp
das
inc
popf
sbb
repnz
fldt
icebp
push
add
je
mov
fs
add
jecxz
add
scas
inc
jnp
jne
xchg
add
int
cltd
push
clc
cli
adc
push
add
or
add
add
js,pn
cmp
out
daa
rolb
out
xchg
std
inc
mov
mov
add
lock
enter
imull
xor
les
jnp
add
out
in
ret
lea
xchg
lods
push
aam
xor
jle
add
mov
add
add
sub
icebp
lcall
add
add
add
push
add
mov
fucomip
ljmp
inc
add
stos
testb
or
mov
xlat
sbb
mov
out
test
je
cmp
inc
add
push
sarl
mov
mov
into
push
add
test
add
push
xor
sbb
stos
dec
mov
push
adc
test
add
mov
add
xchg
add
imul
push
add
sbb
ds
xor
mov
sbb
jns
mov
lds
and
out
out
leave
call
loope
mov
or
mov
add
jge
pop
push
add
jns
int3
push
sbb
add
scas
mov
testb
loopw
mov
xor
pop
outsb
mov
mov
lret
lahf
mov
add
mov
fst
mov
ficompl
cmp
iret
mov
je
push
add
test
sub
sbb
pop
mov
pushf
pop
cli
repz
add
add
add
jl
jmp
add
stos
out
arpl
addb
add
in
jp
sub
add
ljmp
xor
inc
add
cmp
lea
add
push
mov
pop
add
fwait
xlat
add
sub
popf
out
mov
lret
sbb
insb
adc
dec
lcall
sbb
lcall
imul
dec
cwtl
mov
fwait
sbb
mov
push
add
ret
aad
fistpl
addr16
outsb
push
pop
clc
test
add
int
pushf
aad
adc
icebp
add
jb
popa
or
fsubrl
add
aam
mov
ret
rcrl
mov
push
dec
adc
and
jg
in
dec
in
pushf
inc
clc
movsb
add
add
xchg
inc
icebp
or
xchg
add
xchg
in
inc
add
lock
repnz
pop
mov
dec
cwtl
xor
out
stos
loopne
push
sbb
and
mov
sarl
add
rolb
mov
jg
add
add
aaa
xlat
lods
adc
add
add
mov
add
mov
je
mov
sub
add
mov
in
add
fadds
add
loopne
push
add
out
add
add
cld
cmp
add
and
xchg
add
dec
xchg
popf
jle
add
push
add
movsb
add
push
in
add
repnz
add
mov
xchg
sti
leave
dec
lret
arpl
jecxz
add
fwait
xor
mov
xorl
push
add
add
add
jl
inc
add
add
fsubl
add
stos
mov
mov
inc
add
push
add
mov
aam
addr16
adc
dec
mov
jle
xchg
add
or
pop
lahf
pop
repnz
aad
cmp
add
jnp
mov
mov
mov
add
sbb
dec
in
nop
add
add
xor
add
add
pop
cmp
cmp
icebp
add
stos
xor
rolb
data16
mov
add
add
mov
xchg
out
lods
js
add
jle
cld
fisttpl
iret
xor
repz
test
dec
pop
mov
lods
mov
fwait
add
outsb
mov
stos
adc
ret
shll
mov
sbb
xchg
daa
push
add
add
pop
shll
mov
inc
add
pushf
mov
std
aas
popa
push
lret
cli
push
pop
cwtl
inc
add
in
sub
iret
test
daa
jl
nop
add
pop
fstl
xchg
add
push
add
dec
imul
add
dec
bound
mov
jne
dec
clc
cld
enter
dec
imul
stos
jle
int
dec
adc
dec
jae
ret
shl
add
add
add
sahf
sbb
add
and
pop
dec
movsb
add
add
add
adc
outsl
mov
or
dec
inc
add
add
xor
mov
add
mov
sbb
leave
add
addr16
cli
cmp
add
sahf
cmp
loop
out
sub
add
psubsw
dec
xchg
jno
dec
adc
das
add
jp
jle
in
icebp
inc
sbb
push
addb
sbb
rolb
push
add
ss
xchg
add
add
out
mov
sbb
je
je
subl
insl
jb
pop
mov
into
insl
dec
cli
push
and
mov
addb
or
popa
movsb
add
add
adc
add
xor
ja
les
rolb
add
mov
add
jno
aam
mov
add
or
cli
mov
add
xchg
add
icebp
pop
repz
and
rolb
addb
adc
pop
je
adc
jl
jmp
mov
add
fstpt
add
add
cmp
add
add
orl
inc
pop
cmp
add
add
add
pop
insl
sub
mov
pop
ja
jb
cld
adc
dec
pop
push
add
roll
ljmp
adc
cmp
rolb
stos
fbstp
xor
push
add
add
mov
add
add
mov
add
bound
mov
xchg
add
inc
add
mull
add
add
in
cmp
out
pop
je
sbb
scas
mov
jl
stos
mov
xor
inc
add
add
mov
jp
fimull
insb
sub
add
rolb
push
add
mov
push
add
out
dec
sub
sub
ljmp
xor
hlt
add
rorl
and
xor
gs
sbb
dec
xor
push
sbb
test
add
add
repnz
sbb
arpl
mov
add
dec
popf
add
mov
ret
xor
mov
mov
add
add
mov
add
add
jbe
fcmovnbe
add
adc
pop
add
clc
xchg
mov
add
movsb
add
mov
imul
fs
std
pop
cmp
sarl
jmp
ljmp
lock
add
insl
or
insl
ffree
xchg
add
mov
fisttpll
mov
add
jno
stos
incb
sahf
adc
add
clc
arpl
insb
in
xchg
add
add
bound
mov
add
movsl
pop
adc
ljmp
mov
enter
sbb
in
leave
dec
or
add
imul
add
out
xor
pop
push
add
sti
bound
mov
xor
lcall
adc
cmp
add
add
hlt
add
add
and
mov
testl
mov
lea
addr16
das
sbb
push
adc
pop
xor
aaa
jbe
mov
int
cmpsl
lods
movsb
add
cmpsb
add
xchg
sub
mov
test
pop
jecxz
xchg
add
sahf
in
rdtsc
mov
lock
sub
push
addb
aas
or
frstor
imul
mov
mov
subl
add
outsb
pushf
insb
cmp
mov
shll
and
mov
push
add
mov
test
mov
pop
addb
addb
aaa
cltd
pop
pop
jne
mov
xchg
push
add
add
movb
add
add
fisubrs
add
rorl
aad
push
add
dec
ret
add
mov
pop
in
and
fistpl
es
ja
add
popa
je
arpl
ljmp
cmpsb
add
add
aam
push
add
sahf
and
cli
mov
out
mov
add
push
add
fdivrl
pop
add
mov
pop
out
mov
add
mov
add
mov
add
push
add
add
fwait
and
rolb
xor
mov
jge
jae
daa
mov
mov
add
add
pushf
mov
push
pop
popa
and
ret
xchg
xchg
add
cltd
aaa
lret
or
add
add
add
add
ja
add
adc
call
sbb
add
add
jecxz
lahf
into
pop
add
add
data16
mov
xchg
out
scas
push
add
test
mov
loope
adc
xor
add
jle
add
inc
add
add
call
jo
popa
mov
add
inc
add
arpl
add
xor
xchg
sti
jle
adc
mov
fistps
add
add
mov
jo
xchg
add
add
add
lods
in
sbb
into
xor
inc
add
add
ljmp
add
jle
popa
inc
add
mov
icebp
in
add
add
insb
pop
insl
lea
fwait
adc
mov
add
pop
xchg
das
sub
imul
xor
push
add
mov
add
pop
sub
sbb
mov
add
movsb
add
add
pop
dec
jnp
pop
inc
add
mov
xor
jge
inc
add
flds
mov
and
mov
add
add
fcmovnb
xor
inc
cmpsb
add
scas
cmp
ret
add
adc
mov
faddp
mov
add
inc
data16
imul
dec
outsl
repz
add
cld
fisubrs
xchg
rolb
ret
fcomi
add
add
mov
push
cmp
lret
testl
add
cmp
loope
aam
sbb
mov
and
mov
insb
out
or
pop
lcall
mov
and
dec
in
cmpsl
out
inc
add
xchg
inc
push
adc
fildll
add
push
jo
sbb
mov
notl
jecxz
addb
dec
sub
mov
aas
dec
ja
add
push
add
adc
in
jnp
daa
sub
cmp
ret
mov
jp
pop
les
sub
push
add
jmp
call
arpl
les
pusha
add
sub
cmpsl
pop
dec
jg
add
add
push
add
leave
nop
add
imul
jg
repz
add
add
cmp
aad
add
lods
dec
xchg
add
push
jp
push
add
push
add
cli
dec
adc
js
inc
ja
inc
ss
adc
add
adc
lock
add
sahf
pmuludq
lods
mov
lea
fists
pusha
add
mov
xor
int3
sub
jecxz
lock
mov
test
rolb
sub
xchg
xor
je
mov
push
add
insl
ss
mov
xchg
je
lods
daa
jmp
add
add
sbb
das
test
testb
mov
mov
mov
nop
add
adc
push
cwtl
add
add
mov
add
pop
and
mov
addb
out
pop
cmpsl
dec
mov
pop
imul
test
popa
ret
call
cmpsl
shrl
jb
mov
mov
mov
xor
repz
movsb
add
test
sbb
fidivrl
mov
pop
sub
or
es
mov
mov
lods
pop
sub
daa
cmc
pop
dec
mov
add
add
outsl
or
jnp
and
inc
add
xchg
add
pop
ja
add
adc
aam
jnp
lret
addps
loope
add
insl
pop
das
push
aas
dec
push
popf
lret
fwait
mov
add
mov
mov
mov
or
nop
add
dec
sub
add
sub
jne
add
not
cli
stos
dec
or
add
add
dec
cmpsb
add
fdivs
insl
push
cmp
repz
sbb
add
or
cltd
ds
push
daa
mov
add
mov
lret
mov
loope
jl
fistps
add
inc
cmp
addb
add
in
xchg
add
lock
xor
pop
inc
add
imul
fdivrp
cmp
fbld
clc
sahf
movsb
add
pop
outsl
xchg
test
fiadds
into
adcl
mov
sub
add
add
ret
push
push
add
pop
clc
rolb
add
xor
sub
adc
mov
lahf
sbb
jg
or
add
lcall
push
add
push
loopne
lods
jb
mov
pop
gs
sti
or
pop
bound
mov
inc
add
add
add
arpl
imul
inc
add
lods
xorl
add
and
mov
add
hlt
add
add
ja
add
xchg
add
gs
loopne
sub
mov
pop
out
add
add
in
ficomps
add
add
add
add
mov
jbe
mov
mov
pop
jnp
add
add
add
cmc
inc
fcoml
je
pop
pop
inc
pop
addb
add
mov
jo
fiadds
add
sarl
inc
repnz
popa
fstl
bound
mov
add
add
movsl
jmp
add
inc
jmp
xchg
and
add
jne
test
mov
jns
add
add
xchg
add
daa
repz
dec
stos
adc
push
mov
sub
add
loopne
sub
xlat
inc
add
repnz
mov
sbb
inc
push
add
push
add
jg
mov
push
sbb
add
dec
lock
add
or
push
gs
fmull
pop
adc
mov
push
sub
jge
sub
add
add
mov
add
add
sub
lahf
mov
cmp
jl
add
mov
inc
jne
cmp
add
outsb
mov
inc
ljmp
cmp
pop
pushf
mov
stos
arpl
pushf
adc
mov
add
and
mov
push
fwait
sub
addb
mov
adc
cltd
cmp
mov
lods
dec
push
add
dec
negl
pusha
add
jl
add
cli
testb
inc
jg
sbb
add
add
mov
cmpl
add
hlt
add
cli
pop
sahf
aad
adc
daa
loopne
out
movsl
xor
add
xchg
jmp
outsl
push
add
out
mov
outsl
daa
push
add
or
and
xchg
add
movb
sbb
or
cld
lods
inc
rolb
jnp
mov
pop
movsb
add
add
fmul
cs
add
outsl
pop
mov
addb
testb
imul
xor
leave
pop
movb
loopne
adc
arpl
outsb
andl
sbb
add
rcrl
lock
mov
jecxz
add
sbb
add
add
add
mov
add
loop
scas
cli
dec
out
add
push
add
movsb
add
enter
pushf
ljmp
mov
add
lea
xor
dec
les
aad
jmp
gs
add
and
or
add
sbb
add
and
add
call
or
xchg
pop
fldcw
mov
mov
mov
add
lock
add
mov
mov
push
jmp
fsubrs
add
daa
sub
push
in
and
mov
add
sub
dec
out
jmp
adc
mov
arpl
push
sub
add
jns
add
add
jmp
inc
add
repnz
mov
mov
fisubl
inc
jmp
add
sub
xchg
movb
add
add
add
in
dec
mov
pop
in
adc
pop
in
mov
out
fneni(8087
add
ljmp
pop
jecxz
push
push
add
mov
nop
add
add
add
add
add
ljmp
xor
mov
flds
enter
into
insl
outsl
pushf
adc
adc
xchg
int
mov
scas
nop
add
add
pop
aad
push
in
xchg
pop
out
pusha
add
test
xlat
decb
leave
movsl
jmp
mov
test
add
ds
rolb
pop
aad
fldln2
std
cmc
jne
iret
fdiv
fnstcw
dec
std
ds
sahf
adc
add
xor
jae
inc
jle
sub
cmp
lods
mov
add
add
sahf
mov
push
push
add
movsl
sbb
pushl
mov
xor
add
dec
push
add
addr16
mov
add
add
cmpsl
sub
ja
jo
mov
jg
jmp
add
loopne
pop
fcoml
add
add
mov
add
or
add
sub
add
dec
pop
jnp
mov
mov
and
mov
add
stos
ret
xor
mov
add
add
add
cmp
das
adc
add
ds
inc
add
lahf
outsl
into
lds
add
sub
add
ljmp
pop
xchg
add
add
add
pop
clc
inc
add
lret
add
or
mov
sub
add
mov
lahf
call
rolb
decb
jb
je
xchg
fcomp
push
add
in
add
sbb
adc
mov
mov
inc
jns
dec
mov
enter
pop
in
push
mov
fldl
mov
add
push
pop
outsb
fsubs
add
fwait
mov
add
xor
sub
dec
jle
push
jns
test
movsb
add
data16
cmpl
mov
popa
cld
sahf
pop
and
mov
popa
push
add
and
jns
nop
pop
sbb
cs
adc
popf
mov
arpl
add
add
add
aad
add
xor
ret
addb
add
dec
push
cmp
xorl
mov
or
cmpsb
add
add
mov
repnz
sub
mov
mov
jl
add
add
shrl
add
loope
add
inc
mov
ja
icebp
mov
and
mov
cmp
clc
lds
inc
adc
lret
mov
jno
lret
and
and
leave
stos
fidivrl
add
mov
lahf
shll
add
pushf
add
push
and
mov
jae
lods
mov
jp
fisttps
mov
mov
pop
out
add
dec
jecxz
add
clc
push
addb
add
roll
loop
push
arpl
jae
or
and
mov
dec
push
fdivs
inc
add
add
push
test
mov
xlat
pop
cmp
rolb
sub
rolb
jne
dec
add
mov
mov
pop
pop
bound
mov
push
add
sti
inc
dec
ljmp
fcoms
add
add
pop
cmpsl
and
push
add
add
sbb
aas
cmp
cwtl
pop
xchg
add
out
push
cmp
xor
cmc
jecxz
add
mov
hlt
add
add
add
add
inc
add
mov
out
aaa
inc
add
xchg
add
fisttpl
nop
add
xchg
add
xchg
stos
sbb
push
add
add
cmp
push
in
in
lods
out
dec
mov
add
out
add
aam
das
push
add
add
sub
sbb
push
add
pop
mov
mov
rep
and
jp
insl
in
je
fcmovbe
cmp
push
add
les
ja
lods
out
cmp
and
mov
jg
add
adc
cmp
inc
add
push
lds
jo
arpl
pop
xor
pop
mov
add
inc
mov
add
inc
hlt
add
cmp
or
inc
add
inc
add
add
stos
mov
lods
pop
addr16
sti
or
paddd
mov
addl
jne
add
pop
xchg
movb
xchg
inc
add
cltd
aam
adc
in
fs
mov
ljmp
fistl
add
mov
aaa
call
or
add
add
lret
test
push
add
adc
popa
mov
or
insb
ja
add
jmp
push
add
fdivrl
test
mov
cs
repnz
outsb
outsl
jmp
das
pop
fwait
out
fucom
data16
sbb
inc
add
sub
add
xor
or
testb
push
div
add
fwait
out
and
mov
jmp
add
cmovb
mov
les
loop
insl
mov
scas
push
add
mov
daa
movsl
and
sub
xchg
add
icebp
std
aas
rolb
inc
add
add
add
leave
push
add
mov
add
cmpsb
add
clc
in
jne
int
add
setno
lds
sub
int
int
negl
push
add
imul
enter
pop
ljmp
into
movsl
and
mov
jo
push
mov
pop
lods
ds
ljmp
ds
add
loop
popf
push
lcall
mov
stos
push
insl
stos
insl
mov
add
push
add
pushl
add
in
push
or
call
add
add
add
push
add
mov
add
or
in
in
rolb
jns
sahf
push
cmp
std
call
push
call
mov
xchg
add
fisubs
rolb
push
add
gs
mov
add
inc
add
fxam
out
xchg
fs
sub
and
mov
insb
xor
push
add
mov
add
mov
or
lret
aad
fistps
mov
add
jl
xor
cmpsl
js
stc
cmp
mov
cltd
inc
pop
cmp
mov
add
cmpsl
xchg
xchg
pop
iret
dec
cmc
pop
imul
add
push
ret
out
dec
push
ret
add
add
frstor
pop
jmp
insl
pop
shll
cmpsb
add
add
scas
push
enter
add
jecxz
jl
cmp
jecxz
xchg
pusha
add
add
into
ja
in
push
add
mov
test
jecxz
lret
inc
add
add
xchg
xchg
mov
popa
or
xchg
jecxz
mov
dec
sub
jbe
xor
outsb
xor
mov
adc
and
mov
adc
push
leave
inc
ljmp
pop
push
or
xor
push
xchg
pop
push
add
add
stc
pop
ret
add
test
pusha
add
je
and
mov
repnz
jb
shll
arpl
or
popa
add
cmp
repz
gs
in
out
push
add
mov
cmpsl
lods
push
insb
jne
add
xchg
add
add
sti
test
cmp
add
lods
xchg
sub
ljmp
add
add
rolb
test
jmp
add
mov
add
or
add
nop
add
add
lds
cmp
outsb
push
add
xchg
add
mov
push
imul
mov
fidivrl
sbb
push
or
pop
lcall
add
ret
data16
mov
jp
add
add
add
les
mov
mov
xor
cmp
add
je
sti
pop
outsl
sti
ficoml
add
add
je
sub
aas
inc
add
loop
adc
outsb
dec
mov
into
pop
mov
mov
cmp
cmp
lea
mov
mov
pop
push
sbb
add
hlt
add
sarl
cmc
jno
cmpsl
fldt
addr16
mov
pop
adc
jo
cli
dec
xor
add
in
inc
add
add
out
push
add
dec
fadds
call
xchg
push
pusha
add
dec
imul
mov
inc
adc
add
mov
jne
add
add
les
mov
sbb
lcall
push
add
mov
add
rolb
leave
cmp
mov
add
adc
push
add
push
add
add
add
aam
jns
js
add
jnp
add
lods
pop
mov
test
and
add
pop
jnp
pop
inc
xor
sarl
add
testb
mov
sbb
add
lods
mov
add
adc
jmp
add
addb
add
pop
mov
push
shrd
mov
repz
push
add
add
add
ret
ror
sahf
rolb
loop
cmovb
mov
call
inc
add
jl
push
add
add
in
or
into
mov
add
inc
add
lret
or
mov
iret
xchg
rolb
push
add
pop
movb
sti
inc
cmp
lret
or
popa
outsl
add
std
das
sti
repnz
dec
std
mov
ret
xchg
cmp
add
iret
push
add
cmpsl
fnsave
add
add
mov
bound
mov
pop
cld
mov
in
roll
cmp
mov
add
or
mov
movsl
xor
in
dec
shr
push
add
mov
xchg
cmpl
icebp
movsb
add
test
or
cli
jg
outsb
sub
pop
inc
add
and
sub
enter
js
cwtl
dec
mov
mov
adc
mov
add
in
add
xchg
add
push
add
pop
fisubrl
lahf
mov
sub
add
mov
sbb
pop
add
add
add
mov
xor
push
sub
movl
testb
cld
popf
hlt
add
sub
sbb
add
add
faddp
jbe
je
add
jne
mov
out
dec
mov
push
add
cmc
std
js
and
add
les
cmp
ret
mov
mov
add
xchg
js
add
call
add
mov
int
aad
movl
inc
add
orl
popa
test
out
adc
in
jbe
sti
mov
mov
insl
jbe
addb
les
sbb
mov
leave
dec
addb
push
aas
pop
rolb
mov
xchg
pop
data16
ret
rolb
ret
push
call
jle
push
cld
or
jbe
sahf
cltd
pop
sub
push
lds
mov
imul
add
fucomp
xchg
push
add
xor
loope
std
xor
and
fists
add
sub
cld
cld
aam
sbb
and
call
adc
addb
add
ficomps
jg
arpl
add
add
add
add
adc
add
add
iret
jl
insl
and
mov
rolb
jp
add
push
add
movsb
add
lahf
push
insl
dec
into
push
add
rcll
add
add
hlt
add
add
xor
fisttpll
mov
bound
mov
addb
add
add
mov
popa
repz
cmp
mov
rolb
push
or
add
ret
add
out
push
or
cwtl
fisubs
add
add
lret
je
cmp
add
fcompl
adc
sbb
mov
data16
fwait
movsl
adc
and
add
lahf
inc
pop
inc
add
stos
clc
pop
xchg
xchg
add
jmp
add
add
xchg
dec
movsl
lods
xchg
add
pop
pushf
ret
lods
xchg
repz
add
lahf
pop
and
add
pop
jno
adc
roll
inc
add
xlat
mov
and
cmp
add
inc
testb
add
sahf
stos
fs
xor
les
add
sbb
add
xchg
add
add
add
emms
popf
stos
lods
clc
inc
add
mov
addb
cmp
jl
add
testb
bound
mov
ljmp
add
add
mov
repnz
adc
in
xchg
insb
push
add
adc
add
add
loope
outsl
push
clc
or
jo
out
dec
popa
rolb
sub
imul
add
add
jns
add
xchg
push
add
mov
test
add
lret
add
add
pusha
add
or
inc
add
xchg
mov
imul
jp
cmp
add
cli
add
loope
and
gs
ror
loopne
cmp
leave
pop
sahf
orl
add
mov
lods
xchg
mov
jnp
add
mov
inc
add
imul
and
shll
mov
mov
lock
add
movsb
add
sbb
push
xchg
add
add
mov
add
pop
ljmp
push
ja
add
ja
mov
out
pop
push
jb
mov
aaa
jg
jns
popf
cwtl
rcrl
jb
cli
push
add
movsb
add
cmp
sub
loop
movsl
sbb
sub
js
fldcw
xchg
add
inc
add
cmc
aad
pop
movb
cmp
in
push
adc
in
fisttpll
iret
stos
xor
add
adc
in
ja
add
add
adc
xlat
popf
mov
inc
cs
xchg
add
and
mov
sbb
add
addr16
nop
add
jns
xlat
in
je
adc
popa
add
add
add
js
sub
cmp
add
or
add
jno
ret
mov
add
mov
add
jae
nop
add
dec
loopne
js
add
add
add
int3
cmc
repnz
inc
push
add
shll
add
add
sub
xchg
add
std
test
mov
cli
xor
sub
pop
loop
stos
outsb
pop
out
icebp
ljmp
add
add
or
and
mov
mov
dec
jnp
mov
rol
mov
nop
add
add
mov
inc
mov
int3
add
mov
add
in
dec
mov
mov
mov
mov
add
mov
loopne
ret
add
arpl
mov
add
int
data16
bound
mov
push
scas
add
add
or
xchg
cmp
mov
add
int3
push
mov
sub
sub
icebp
iret
out
jl
add
mov
stos
pop
mov
push
add
hlt
add
mov
mov
pop
call
add
sbb
pop
mov
sub
test
int
or
add
in
push
add
add
add
xor
add
dec
into
add
add
add
nop
add
add
lods
cmovno
das
add
add
add
stc
mov
mov
stos
outsb
sub
inc
add
xchg
ljmp
jns
add
in
add
cli
xorl
mov
dec
sti
push
add
add
les
push
add
add
iret
cmpsb
add
pop
sub
mov
pushf
in
mov
scas
jno
pop
jbe
xchg
add
inc
add
push
popf
xor
adc
add
popf
imul
add
popl
adc
add
xchg
add
adc
enter
add
add
add
jge
jge
pop
stos
push
push
inc
add
and
mov
movsb
add
insb
xchg
add
in
add
dec
test
add
mov
xor
jae
cmp
mov
xor
mov
pop
or
xchg
inc
add
mov
jns
mov
pop
popf
sbb
dec
cltd
js
lret
or
add
xlat
les
orl
push
add
add
subl
add
inc
add
add
loope
ja
add
add
fcoms
add
add
add
add
pop
xchg
push
iret
inc
add
daa
loope
shll
push
pusha
add
test
call
xchg
test
adc
sbb
popf
push
jo
add
xchg
in
negl
mov
ljmp
dec
das
sub
cmp
lock
add
xchg
sti
scas
insl
sbb
iret
mov
in
lods
data16
add
pop
mov
mov
daa
pop
sbb
in
pop
scas
xchg
add
inc
add
mov
flds
lods
xchg
pop
aad
movsl
scas
test
jmp
scas
sarl
adc
sahf
inc
add
addb
add
std
ds
movsb
add
lahf
sbb
mov
cwtl
cs
dec
xchg
cs
add
add
mov
add
add
pop
xchg
add
test
aaa
ret
inc
add
add
xor
iret
rolb
mov
add
add
mov
mov
xor
push
add
lret
aam
aam
pop
addr16
mov
mov
mov
sub
in
add
push
fiadds
add
sub
push
popf
stos
mov
add
add
pop
and
xor
pop
pop
pop
inc
mov
add
cli
in
sub
ds
add
mov
pop
cltd
jl
pushf
or
and
mov
and
mov
add
movsb
add
push
dec
xor
push
addb
xorl
add
add
pop
mov
outsl
mov
sarl
push
push
jg
shr
dec
test
add
jmp
sub
jp
or
push
add
lods
out
dec
test
je
dec
sub
add
add
mov
cmc
inc
add
mov
push
adc
pop
xor
sub
data16
add
add
add
push
add
popf
in
repnz
add
mov
rorl
push
ljmp
xchg
or
mov
add
mov
add
sahf
jbe
cltd
add
outsl
outsb
dec
call
add
test
ljmp
cmp
and
add
aas
dec
pop
testb
fwait
push
add
in
mull
test
adc
sbb
mov
add
add
jne
add
add
jno
lds
sub
rep
add
shl
add
pop
inc
add
mov
scas
add
ljmp
push
rorl
aad
sti
fildl
mov
mov
add
in
and
scas
jle
hlt
add
add
push
sti
mov
lea
inc
add
rolb
adc
xor
pop
cmpsb
add
sahf
pop
sbb
loop
adc
add
mov
push
add
lfs
push
mov
pusha
add
add
fsubrl
data16
mov
in
mov
cmp
add
gs
out
add
outsb
push
add
mov
test
cmp
in
and
pop
int
pop
xchg
jo
pop
mov
lcall
add
ret
insl
adc
mov
mov
cmpsb
add
and
imull
adc
out
or
sahf
in
push
fisttpll
leave
cmp
lock
add
das
add
add
call
clc
and
add
xchg
nop
add
mov
repz
cmp
push
rolb
adc
xchg
add
push
lds
lahf
pop
addb
adc
gs
jmp
mov
dec
jo
les
dec
push
lock
ss
xchg
add
cmpsl
gs
xchg
add
shld
sti
jg
add
test
test
sbb
pop
fs
add
addb
loop
add
mov
mov
aam
cmc
aam
pop
stos
jmp
dec
in
scas
rolb
fsubrs
add
popf
adc
dec
and
mov
leave
inc
rcl
cmp
mov
xchg
add
add
data16
xor
scas
mov
and
push
add
add
xor
cli
cmp
jmp
cmp
lahf
cwtl
mov
jge
loopne
fdivs
mov
shrl
in
int
mov
in
adc
add
movsl
test
add
lcall
andl
mov
fisubrs
movb
pop
rolb
or
mov
dec
jmp
xchg
add
sbb
insb
add
lret
mov
add
mov
sbb
mov
sti
lret
cwtl
stc
push
add
mov
add
dec
push
sub
mov
push
mov
or
add
mov
sahf
outsl
lahf
js
xor
dec
stc
xor
push
add
mov
add
fdivr
dec
fwait
pop
aam
push
add
add
sbb
add
ljmp
cmp
lea
adc
xchg
add
mov
inc
out
inc
pop
aam
and
jb
push
push
movb
jnp
add
test
and
dec
add
add
add
and
push
cmpsl
lock
lret
add
movsl
cwtl
scas
pop
bound
mov
xchg
add
out
inc
add
add
mov
add
rol
xchg
add
add
add
add
inc
repz
sub
dec
jg
aad
xchg
and
add
inc
movb
jbe
jge
or
xor
rolb
pop
movl
mov
lods
jb
lahf
sub
mov
int3
pop
sub
jg
arpl
pop
jge
loope
push
add
mov
fldcw
mov
sbb
xchg
add
add
mov
sub
popa
lea
add
add
sbb
jg
movsb
add
pop
leave
ret
out
pushf
jge
ljmp
shrl
add
add
add
sbb
add
in
rolb
adc
pop
stc
or
jge
cmc
das
ret
add
into
cmp
movsl
xchg
sbb
jmp
outsb
cmp
mov
inc
add
mov
add
xchg
add
lds
add
mov
loop
cmp
add
or
or
or
jle
xchg
scas
add
aaa
dec
stc
sahf
pop
xor
into
push
pop
push
aaa
xchg
in
mov
add
insl
dec
push
cmp
cmc
cmpsb
add
fdiv
and
mov
push
sub
out
lods
pop
imul
lods
cmpsb
add
mov
add
jecxz
sub
stos
loope
add
add
enter
js
fcompl
push
jg
sub
test
in
cmc
push
and
mov
scas
xor
je
xor
gs
lret
add
mov
out
lcall
jne
pop
mov
imul
cmp
sub
add
cmp
cmc
test
add
loopne
or
fisubl
jp
cwtl
insl
shr
sbb
cmpsl
mov
add
call
add
cmp
repnz
imul
call
dec
in
data16
pop
lahf
shl
add
inc
add
add
mov
jp
add
cmpsb
add
ficoml
pop
daa
or
or
add
scas
ljmp
jg
add
mov
xchg
les
call
push
xlat
ret
mov
push
xchg
hlt
add
jae
popa
jno
mov
popa
testb
mov
add
add
add
add
fwait
pop
pop
out
push
add
jb
bound
mov
add
pop
dec
stos
addl
add
pusha
add
popl
mov
add
sbb
inc
mov
and
clc
mov
xchg
pop
dec
xor
add
int
xor
inc
push
data16
adc
add
sbb
mov
inc
add
xchg
testb
pop
adc
rcll
add
lods
jae
sahf
pop
cmc
xorl
movb
pop
out
sti
sbb
push
add
test
add
xchg
add
adc
push
iret
jmp
add
sti
sub
jmp
inc
rolb
data16
mov
xchg
add
pop
loop
fwait
rolb
sbb
dec
lods
inc
xchg
loope
arpl
mov
cmpsb
add
rolb
call
push
dec
cld
testb
fldcw
pop
and
or
es
pop
insl
xchg
add
dec
popl
add
jmp
add
in
adc
dec
add
testb
mov
jo
push
int3
mov
inc
add
sti
aas
push
fwait
scas
les
cmp
jb
shrl
mov
jns
add
jne
inc
adc
xchg
jnp
sbb
addr16
loope
push
clc
fdivrl
aam
mov
add
pop
xchg
xchg
xchg
add
add
ja
xor
push
test
pavgb
mov
or
jmp
add
outsb
fwait
push
inc
add
stos
fs
jb
hlt
add
cmp
je
nop
add
add
push
inc
add
add
loop
arpl
add
jge
add
add
add
add
cmp
setns
fwait
sahf
iret
jp
outsl
sbb
pop
jbe
xchg
add
rolb
or
inc
mov
mov
testb
addb
xchg
add
sbb
shrl
pop
sub
orl
out
push
push
cmp
push
add
or
fnsave
shl
add
cwtl
dec
insb
cmp
dec
lret
push
js
lahf
shll
pop
inc
pop
int3
mov
pop
loope
call
add
add
inc
cmp
in
inc
xor
jl
sbb
add
lods
mov
lds
pop
xchg
loopne
lods
push
add
add
mov
mov
add
mov
mov
mov
xchg
dec
scas
mov
cmp
add
addr16
inc
add
add
add
xlat
mov
pop
pusha
add
in
fwait
pop
push
add
push
adc
add
mov
adc
xchg
xchg
xchg
lods
imul
sbb
mov
adc
insl
mov
imul
shll
jl
movb
loope
repz
add
add
pop
loope
frstor
add
out
xor
test
add
add
add
hlt
add
pop
jne
or
addb
loope
add
sub
int3
and
mov
mov
add
jg
adc
lds
add
mov
add
and
movsb
add
in
add
mov
push
add
push
add
push
add
jns
sbb
insb
jnp
mov
add
pusha
add
sbb
adc
int3
add
mov
adc
dec
mov
sub
inc
add
daa
stc
xor
insl
xlat
xchg
jmp
cli
inc
lahf
push
leave
cmp
out
dec
mov
icebp
repz
add
sub
mov
mov
pop
lahf
cmp
add
add
sbb
mov
inc
add
cld
cmp
mov
add
add
add
mov
mov
inc
add
add
add
icebp
push
add
jne
add
push
add
test
inc
loopne
stos
jecxz
lahf
and
push
dec
pop
in
xchg
and
mov
mov
add
add
stos
push
add
add
int
dec
add
mov
rcrl
add
movsl
xchg
rol
stos
sbb
fiadds
add
jle
push
add
xchg
add
addr16
mov
and
dec
dec
add
mov
gs
loopne
cmp
jp
sahf
adc
add
ja
test
dec
lret
fisttpl
mov
add
ljmp
add
add
add
push
add
cmp
mov
push
inc
add
dec
hlt
add
add
filds
add
add
mov
add
pop
jns
sub
in
icebp
adc
rolb
dec
pop
aad
mov
fdivrs
jo
or
adc
les
inc
add
addb
arpl
pop
out
lret
xor
adc
lahf
fwait
jno
add
mov
dec
add
add
lods
jno
mov
test
mov
loop
xor
add
mov
lea
cmc
fmuls
add
nop
add
add
push
add
add
push
add
rolb
add
add
lcall
rolb
in
adc
add
mov
mov
lret
mov
lret
xchg
pop
push
mov
rcrl
and
hlt
add
jb
jae
add
add
jo
popl
push
ret
jle
jmp
adc
jbe
dec
inc
jecxz
movsb
add
leave
repnz
and
shll
add
adc
add
add
pop
jg
push
repz
cmp
mov
push
cmp
lea
or
jb
sbb
push
push
adc
pop
stos
sub
mov
pop
dec
mov
mov
iret
jg
xor
jne
scas
mov
shrl
lret
cmp
data16
jge
cmpsb
add
iret
inc
add
cwtl
inc
fs
mov
add
in
jecxz
inc
je
adc
mov
hlt
add
test
mov
dec
cs
mov
xchg
test
add
add
cmp
jmp
pop
mov
ret
add
add
add
add
jo
mov
fiadds
mov
push
inc
add
push
push
add
mov
add
mov
add
test
aam
sub
add
lea
stos
fxch
inc
je
adc
mov
mov
xor
pop
mov
cmp
test
xchg
add
add
mov
data16
mov
mov
push
addb
xchg
add
je
mov
addb
add
jle
into
xchg
je
loop
repz
sbb
movsb
add
int
add
pushf
fsubrl
jl
add
sub
add
lds
insb
das
and
mov
add
fsubs
in
mov
ror
addl
add
xchg
add
mov
outsl
or
aas
cmpsl
jle
add
rolb
adc
inc
cmp
xchg
add
cmp
add
adcl
es
add
add
sub
adc
add
cmp
jne
fsubr
pop
adc
push
add
xlat
lret
and
sub
pushf
repnz
add
add
addb
data16
xor
sahf
ret
lds
cwtl
mov
mov
add
sbb
cmp
sbb
rolb
mov
arpl
insb
loopne
push
mov
fcom
add
fs
add
test
adc
adc
add
adc
cltd
xchg
das
pop
xor
movsb
add
cmc
dec
jg
add
add
add
es
lods
pushf
dec
les
cmp
xor
add
pop
push
stc
jb
mov
pop
out
loop
xor
add
add
sub
fcmovne
arpl
pop
lahf
ds
xchg
cld
mov
add
sbb
add
mov
popf
out
jb
jno
add
add
mov
lods
rolb
cmc
jge
dec
adc
adc
push
add
mov
add
mov
mov
mov
add
daa
cmp
lods
test
mov
mov
add
mov
and
dec
add
lea
add
imul
xchg
xchg
addb
cmp
add
add
test
data16
add
add
rolb
add
add
pop
adc
nop
add
add
inc
stos
sub
cli
xchg
out
fisttps
sbb
addr16
add
add
rolb
add
fwait
movsb
add
add
rolb
sbbl
xchg
dec
xor
add
add
test
adc
cmpsb
add
add
dec
data16
xor
push
add
add
pop
sbb
push
xlat
lahf
lds
adcl
arpl
sub
lea
add
add
lret
popa
sub
add
cli
loope
mov
scas
jp
and
or
jle
add
mov
and
insb
adc
sub
jge
pusha
add
roll
add
dec
adc
call
add
add
test
add
stos
dec
dec
icebp
and
mov
repnz
mov
pusha
add
int3
outsl
outsb
popf
sub
test
or
test
add
xlat
testb
xchg
inc
jns
xchg
add
add
mov
adc
pop
pop
xlat
jp
test
push
mov
push
jle
add
add
add
mov
xor
es
add
add
jae
add
dec
jecxz
mov
js
jmp
jbe
pop
mov
in
vpsrlq
add
sbb
add
test
push
enter
outsl
jns
jnp,pt
xchg
dec
clc
mov
add
cltd
add
add
adc
pop
popf
insb
lret
movsl
das
mov
sub
popf
sarl
add
add
add
popa
ss
lods
jno
pop
or
add
dec
add
add
aaa
sti
mov
push
jns
or
aam
mov
std
loopne
pop
and
cmc
repz
mov
push
add
adc
add
add
add
sub
xchg
add
fdivrs
mov
out
pusha
add
inc
add
fdiv
add
pop
data16
adc
xchg
mov
pusha
add
std
cmpsb
add
test
xor
add
imul
cwtl
mov
adc
cmp
int3
sub
fadds
mov
and
loop
push
add
jo
push
and
int3
lret
mov
mov
arpl
dec
jne
sahf
cmp
xlat
out
sbb
int
xchg
stc
or
jb
lods
fists
and
add
add
mov
mov
gs
rolb
lods
pop
push
add
pop
mov
add
mov
adc
cmp
and
add
dec
je
loope
fs
jae
mov
jae
xchg
add
or
je
pop
add
pop
or
sbb
add
mov
add
add
pop
push
add
mov
pop
inc
mov
jl
add
pop
rolb
pop
mov
add
int
add
enter
push
add
and
mov
jecxz
mov
push
cmp
xor
jnp
add
cmpsb
add
adc
adc
js
cwtl
cltd
inc
add
jns
pop
rolb
rcll
add
loop
mov
in
and
mov
popa
mov
inc
add
popf
mov
push
add
dec
cmc
and
jb
inc
frstpm(287
cmp
add
cmp
mov
mov
dec
icebp
cmp
add
add
add
enter
sub
sbb
ret
and
sbb
icebp
add
mov
add
xchg
jecxz
and
mov
add
cmp
add
cmpsl
sub
push
pop
xchg
sbbl
pop
imull
xor
enter
je,pn
mov
imul
add
out
mov
stos
ret
call
pop
addr16
pop
jnp
add
fdivp
add
cltd
mov
or
add
cmc
fstpt
add
add
add
in
sbb
insl
lahf
call
ss
add
adc
ret
xchg
add
add
add
cmp
fildll
fmul
addb
sub
jne
jge
enter
aas
fbld
dec
fsubrs
sbb
adc
cld
and
movb
in
mov
push
add
jb
pop
mov
xor
add
and
mov
daa
xor
pop
push
lcall
pushf
decb
add
lahf
cmp
out
lods
stos
xchg
add
fdiv
add
gs
and
pusha
add
int
xor
insl
bound
mov
in
dec
xchg
add
jecxz
in
adc
add
add
adc
mov
int3
pop
roll
push
add
xchg
push
xchg
push
fnstcw
mov
or
sti
mov
sti
roll
sub
push
je
rolb
mov
add
mov
add
lds
mov
xchg
add
add
add
data16
push
and
mov
or
inc
fsubl
stos
imul
add
je
mov
mov
frstor
mov
sbb
jbe
dec
daa
inc
fwait
sub
add
inc
add
out
adc
adc
rolb
add
add
add
add
add
hlt
add
jno
add
add
add
add
aas
js
add
mov
sub
imul
addb
stc
pop
cmp
add
adc
inc
in
js
pop
adc
ljmp
sbb
lret
sub
add
add
aad
in
xchg
mov
add
add
out
push
add
push
pusha
add
add
mov
add
push
mov
add
mov
stc
sbb
mov
dec
popf
int
xchg
decl
jp
daa
movsl
dec
mov
xchg
or
outsb
cs
cmp
push
add
xchg
jl
sbb
cmp
jno
mov
add
into
fistps
add
arpl
adc
push
dec
popf
imul
mov
inc
cmp
add
cmpsb
add
mov
hlt
add
jne
add
in
push
add
data16
add
jge
fiaddl
add
scas
and
arpl
xchg
or
add
add
sub
xchg
jge
add
hlt
add
mov
inc
add
dec
push
stos
pop
int
mov
jns
mov
add
mov
mov
add
push
mov
adc
jno
mov
add
mov
adc
int
ret
xor
and
add
add
test
push
add
add
jmp
cwtl
lret
fwait
push
add
mov
add
lods
dec
pop
and
mov
add
and
cmpsb
add
dec
mov
in
stos
clc
pop
add
sbb
mov
xlat
inc
add
or
icebp
sar
imul
mov
mov
xor
je
into
outsl
or
add
mov
int
loope
add
add
fwait
xlat
sbb
into
xor
imul
push
loop
inc
fdiv
mov
and
mov
add
push
add
std
bound
mov
add
or
imul
add
pop
and
add
inc
add
insb
push
add
add
push
loop
imul
pop
sub
mov
iret
addr16
iret
and
cmp
sbb
dec
add
into
pop
sub
add
movsb
add
push
add
dec
ror
aam
out
das
sahf
adc
adc
xor
dec
sub
outsb
mov
add
mov
sub
jne
xor
sub
push
add
lods
movl
mov
lcall
xchg
stos
and
popa
pusha
add
or
mov
dec
rolb
fsubr
or
shll
add
repz
add
ficoml
add
lds
add
add
add
mov
je
movsl
dec
and
clc
pop
loope
mov
jmp
add
inc
add
or
gs
rcrl
xchg
add
fisttpl
and
mov
mov
inc
add
mov
add
add
rolb
mov
push
add
add
add
imul
pop
lds
push
pop
cli
hlt
add
add
test
add
add
add
test
xchg
inc
add
add
sbb
adc
aas
xchg
addr16
adc
add
mov
add
jg
mov
sub
imul
inc
add
dec
stos
lcall
adc
aam
addb
add
add
add
add
add
fcmove
fisubrs
sbb
je
fldlg2
push
lret
cmp
inc
clc
jne
dec
mov
add
and
or
jbe
adc
shrl
add
xlat
lret
ljmp
add
and
add
cltd
insb
xchg
movb
out
in
out
ja
add
add
test
jns
xor
dec
test
mov
and
mov
xchg
xchg
adc
outsb
add
push
add
daa
out
xchg
add
test
add
inc
add
pop
clc
dec
jp
add
fcoml
add
add
sub
add
add
arpl
add
push
add
add
jmp
add
aas
or
add
add
ds
daa
mov
mov
pop
sbb
adc
inc
add
xchg
test
idivl
out
add
add
add
and
jmp
pop
push
xchg
add
push
sub
add
mov
aad
inc
jl
add
inc
mov
xchg
jo
mov
addb
pop
adc
xchg
add
insl
dec
fisubl
dec
aaa
add
mov
cmp
fstpl
add
popa
into
jae
push
add
jno
add
add
pop
and
cmpsb
add
push
add
mov
sbb
outsb
inc
add
loop
and
in
ficoms
jns
pop
test
add
xchg
and
je
adc
add
aam
add
in
add
test
cmp
ds
divl
sbb
lret
mov
push
add
mov
add
ficoms
rolb
fimuls
cli
mov
adc
push
aam
jge
adc
sbb
xchg
add
sbb
add
es
mov
inc
or
cmp
adc
and
xor
in
add
add
ficomps
adc
xchg
adc
popa
loopne
shll
add
test
add
add
fiadds
mov
sub
sub
jbe
sbb
lods
cmpsl
fadd
add
add
testb
xchg
jno
lock
fs
dec
filds
push
stos
addr16
ja
cmp
call
add
jmp
cmpsb
add
les
pop
mov
add
fldl
mov
dec
sub
cmp
add
outsb
push
add
push
add
add
sti
sub
mov
cmc
push
addb
add
dec
imul
add
arpl
mov
add
add
add
add
cltd
and
mov
aad
ret
loope
xchg
mov
loopne
inc
add
add
nop
add
add
add
add
inc
add
add
add
cmp
add
xchg
ret
adc
loopne
inc
cmp
lods
and
addb
fnstcw
insl
dec
and
xor
mov
mov
sbb
add
fwait
push
ret
adc
mov
add
add
add
repnz
into
sti
dec
inc
jge
stos
inc
add
cmc
fsubl
adc
out
iret
mov
or
jle
adc
xor
jecxz
add
push
add
lea
test
mov
mov
stc
rolb
lret
add
push
add
mov
xchg
jge
pop
jbe
dec
movb
mov
mov
adc
adc
in
jbe
mov
add
mov
adc
and
addr16
add
push
push
sbb
pop
dec
pop
scas
sti
or
xchg
hlt
add
add
add
iret
push
add
dec
mov
fwait
push
jns
fnsave
pop
mov
loop
and
mov
add
popa
xchg
add
loopne
fisubrs
xor
insb
or
addb
jns
mov
add
into
loop
iret
xor
push
sbb
cmpsb
add
push
add
add
in
add
inc
add
add
mov
push
dec
out
mov
inc
add
mov
outsb
mov
add
stos
jne
pop
rol
fdivrp
cmp
add
mov
add
int3
in
fcoml
sbb
scas
call
lock
add
push
adc
xchg
add
fisubrs
mov
sahf
mov
int
outsl
icebp
inc
mov
xchg
add
add
jnp
clc
jbe
and
ljmp
xor
add
sahf
leave
hlt
add
js
mov
negl
adc
cmpsl
jno
push
add
lds
into
add
mov
add
sub
add
jne
sbb
fbstp
bound
mov
add
popf
aam
loope
dec
iret
sub
data16
imul
add
xchg
mov
add
push
add
xchg
or
pop
imul
dec
jl
lcall
push
and
mov
add
and
adc
mov
add
push
add
add
jle
add
mov
push
movb
push
add
push
add
pop
test
dec
test
mov
cli
or
cltd
and
mov
add
repnz
dec
mov
cwtl
mov
movsl
nop
add
das
aad
stos
stos
rolb
cmc
cmpsl
mov
addb
add
push
add
lea
push
add
sarl
divl
mov
add
sahf
adc
mov
add
mov
add
mov
mov
add
cmpsb
add
cmp
xchg
or
stos
push
add
xchg
add
sbb
mov
adc
add
push
add
out
mov
rolb
push
scas
fcomps
add
mov
mov
fstpl
addb
pop
sbb
jbe
xchg
add
add
lret
shl
andl
lret
mov
dec
jno
add
add
xor
and
js
add
and
inc
add
jge
add
popa
es
xlat
int3
jecxz
adc
sub
sub
loopne
xchg
jge
and
xor
out
add
adc
mov
daa
push
fwait
jmp
add
mov
cmp
rolb
leave
arpl
in
gs
int3
push
lock
mov
rolb
aam
xchg
adc
add
push
imull
xor
xor
repnz
dec
mov
stc
nop
es
push
add
add
es
pop
add
punpckhdq
push
mov
xchg
ret
add
xchg
add
push
mov
xchg
ret
cmp
push
and
lret
je
nop
cld
nop
jmp
cli
push
add
movsb
stc
nop
es
add
jb
lea
add
inc
add
sbb
add
nop
es
mov
cmc
shrl
je
stc
nop
es
pop
pop
xchg
xchg
in
mov
push
mov
xchg
ret
inc
cli
push
add
stos
push
mov
xchg
ret
add
adc
cltd
ljmp
add
lret
add
stc
nop
es
add
sbb
nop
es
lcall
sbb
sub
outsl
lret
inc
add
pop
add
mov
xchg
ret
mov
fstpl
stc
nop
es
neg
sbb
mov
stc
nop
es
add
jb
push
nop
cld
nop
jmp
mov
add
mov
cmp
nop
cld
nop
jmp
add
add
ret
fcomip
movsb
push
mov
xchg
ret
pop
add
add
add
nop
es
xchg
add
add
es
cmc
in
xchg
add
pop
cmp
es
add
push
andb
add
nop
es
add
ret
nop
nop
cld
nop
jmp
pop
mov
add
pop
sub
nop
es
xchg
pop
add
add
cli
lret
add
nop
cld
nop
jmp
add
add
xchg
rolb
call
stc
nop
es
add
add
xchg
add
test
nop
cld
nop
jmp
add
add
lret
jl
add
mov
stc
nop
es
add
add
shll
jmp
push
mov
xchg
ret
push
push
add
ficoms
outsl
dec
nop
cld
nop
jmp
fiadds
add
add
inc
jl
jne
stc
nop
es
add
fimuls
test
add
nop
cld
nop
jmp
add
push
add
es
cmp
add
stc
testl
nop
cld
nop
jmp
push
add
nop
es
mov
add
pop
sbb
mov
add
stc
nop
es
add
mov
push
mov
add
in
in
movb
addb
stos
shl
mov
stc
nop
es
add
mov
jb
jbe
lea
add
or
stc
nop
es
add
adc
push
push
mov
xchg
ret
mov
add
nop
es
add
add
add
stc
nop
es
stos
add
push
nop
cld
nop
jmp
add
add
lcall
je
stc
nop
es
cmc
xchg
add
add
and
add
std
push
stc
nop
es
add
add
xchg
mov
mov
add
stc
nop
es
add
add
add
pop
nop
cld
nop
jmp
in
cmp
add
std
mov
push
mov
xchg
ret
add
inc
add
rclb
cli
ljmp
add
ret
add
add
cmp
add
add
nop
es
adc
aas
push
stc
nop
es
add
inc
lret
cmp
add
stc
nop
es
add
push
jmp
add
add
add
push
mov
xchg
ret
pop
add
xchg
imul
add
ret
lcall
inc
inc
in
mov
stc
nop
es
push
add
aaa
lock
je
stc
nop
es
add
add
add
mov
xchg
ret
push
add
mov
sbb
nop
es
and
add
mov
jne
stc
nop
es
sbb
pop
xchg
jns
nop
es
add
push
stc
nop
es
or
xchg
add
or
stc
nop
es
add
pop
push
in
call
stc
nop
es
push
add
loop
inc
inc
loop
stc
nop
es
add
add
jb
test
mov
and
stc
nop
es
add
je
add
mov
add
push
mov
xchg
ret
imul
jae
mov
imul
nop
es
push
xchg
mov
mov
stc
nop
es
adc
mov
nop
cld
nop
jmp
add
add
lea
leave
pop
stc
nop
es
xchg
ret
add
add
sbb
push
mov
xchg
ret
add
xchg
jb
add
mov
stc
nop
es
jmp
fisubrs
loopne
stc
nop
es
addb
cmpsl
pop
cmp
nop
es
add
add
xchg
loopne
rolb
adcl
push
nop
cld
nop
jmp
add
add
push
add
add
add
mov
nop
cld
nop
jmp
add
add
xlat
inc
add
xchg
pop
fwait
xor
nop
cld
nop
jmp
sbb
add
es
adc
add
mov
push
stc
nop
es
xchg
dec
add
add
pop
xchg
add
mov
stc
nop
es
mov
ret
mov
loop
inc
add
add
sbb
add
es
xor
add
pop
jmp
xchg
jae
mov
stc
nop
es
in
mov
mov
in
add
add
cli
add
add
nop
cld
nop
jmp
mov
or
xchg
add
stc
nop
es
add
lcall
lret
push
stc
nop
es
jmp
add
mov
stc
nop
es
add
add
jl
lock
pusha
stc
nop
es
add
lea
add
add
cld
nop
jmp
push
add
pop
add
pop
add
mov
push
mov
xchg
ret
add
add
add
add
add
xor
cs
push
mov
xchg
ret
or
add
add
dec
nop
cld
nop
jmp
add
in
aaa
add
icebp
imul
pop
out
add
lea
inc
hlt
add
nop
es
lea
daa
adc
test
mov
add
shlb
add
sti
inc
stc
nop
es
jb
add
inc
add
fisttpll
mov
push
mov
xchg
ret
sub
xor
add
stc
nop
es
sub
pop
adc
add
clc
ljmp
stos
mov
nop
cld
nop
jmp
add
inc
push
add
jmp
stc
nop
es
inc
push
add
mov
jb
jbe
add
ret
inc
ret
pop
stc
nop
es
inc
mov
add
repz
daa
in
addb
mov
nop
cld
nop
jmp
add
jne
stc
nop
es
add
sub
nop
es
inc
jb
add
popl
stc
nop
es
lea
add
cmc
cli
ljmp
inc
xor
nop
cld
nop
jmp
mov
jl
add
in
js
stc
nop
es
aaa
inc
in
add
stc
nop
es
push
or
add
lret
stc
nop
es
sbb
add
mov
mov
xchg
ret
add
pop
add
lret
mov
stc
nop
es
xchg
add
sbb
cmp
nop
es
inc
lret
in
imul
stc
nop
es
je
or
in
ljmp
iret
inc
add
sub
mov
stc
nop
es
pop
push
and
mov
stc
nop
es
mov
push
add
fiaddl
nop
jmp
add
add
add
call
stc
nop
es
inc
add
shr
mov
stc
nop
es
es
jmp
xor
add
stc
nop
es
add
cmp
nop
es
mov
add
add
jmp
stc
nop
es
aaa
xchg
add
inc
sub
nop
es
add
push
sbb
add
nop
es
jb
add
add
stc
nop
es
add
add
rolb
sbb
nop
jmp
push
inc
push
mov
add
stc
nop
es
mov
cli
add
or
stc
nop
es
push
stos
add
add
add
out
add
jae
push
andb
add
inc
add
cmc
cli
mov
je
push
add
dec
cmp
nop
es
sbb
je
add
inc
push
add
stc
nop
es
inc
xchg
add
add
adc
cltd
mov
nop
cld
nop
jmp
je
inc
adc
add
mov
stc
nop
es
xorb
jg
push
mov
xchg
ret
jbe
ret
adc
mov
stc
nop
es
in
add
xchg
addb
lods
push
mov
xchg
ret
add
add
shl
nop
cld
nop
jmp
add
jbe
mov
xchg
xchg
mov
mov
xchg
ret
add
sub
stc
nop
es
add
mov
mov
nop
cld
nop
jmp
ret
je
dec
add
xchg
add
pop
stc
nop
es
push
imul
adc
add
stc
nop
es
add
add
and
mov
push
stc
nop
es
jl
add
ror
add
stc
nop
es
add
add
inc
add
cmp
cmp
ret
add
add
add
inc
in
mov
xchg
ret
inc
add
push
xchg
dec
add
nop
cld
nop
jmp
add
add
ficoms
jne
stc
nop
es
pop
add
jb
xchg
repz
add
es
add
push
testb
add
add
test
nop
cld
nop
jmp
add
es
mov
stc
nop
es
push
add
jb
add
mov
stc
nop
es
inc
cmc
and
rolb
inc
rolb
repnz
add
pop
nop
cld
nop
jmp
fldl
pop
sbb
and
ret
decl
stc
nop
es
lcall
add
push
mov
xchg
ret
add
add
add
stc
nop
es
add
negb
nop
es
xchg
add
mov
add
test
dec
jne
nop
cld
nop
jmp
add
pop
add
sub
push
mov
xchg
ret
add
add
es
add
stc
nop
es
add
inc
inc
inc
add
xor
stc
nop
es
cmc
jbe
dec
mov
nop
cld
nop
jmp
xchg
inc
add
xor
rolb
hlt
add
nop
es
mov
add
mov
es
push
add
sbb
nop
es
jmp
add
jg
rcrl
add
nop
cld
nop
jmp
add
dec
pop
add
and
fiaddl
repz
nop
es
adc
add
out
testl
jb
add
fiadds
mov
pop
mov
nop
cld
nop
jmp
lret
sbb
mov
nop
cld
nop
jmp
add
add
je
xchg
cmc
rolb
inc
mov
xor
mov
cmp
ret
jbe
add
jl
xor
adcl
nop
es
testb
fiadds
add
adc
cld
nop
jmp
and
push
add
mov
nop
es
add
sub
mov
stc
nop
es
sbb
add
stc
nop
es
add
mov
and
ror
stc
nop
es
add
hlt
add
repnz
add
mov
add
inc
add
enter
add
nop
cld
nop
jmp
and
cmp
jb
dec
jmp
add
mov
stc
nop
es
lcall
movsl
and
repnz
nop
es
fidivs
add
push
lea
es
idivb
sbb
in
inc
add
adc
add
xchg
add
mov
stc
nop
es
add
decl
push
mov
xchg
ret
add
add
push
nop
cld
nop
jmp
sbb
adc
mov
stc
nop
es
sbb
sbb
ljmp
loopne
lcall
add
nop
es
dec
add
lcall
inc
adc
cld
nop
jmp
add
mov
add
cld
nop
jmp
add
xchg
ret
adc
xor
or
stc
nop
es
sbb
rcll
add
inc
xchg
xchg
lret
add
in
fists
mov
xchg
ret
push
mov
sbbb
nop
es
add
pop
add
add
stc
nop
es
add
mov
pop
cmp
nop
es
pop
xor
push
add
jnp
dec
cmp
nop
es
cmc
add
sub
dec
or
mov
xchg
ret
adc
add
aas
mov
nop
cld
nop
jmp
xchg
xchg
mov
add
pop
and
mov
clc
jmp
nop
cld
nop
jmp
add
cmp
adc
nop
es
add
and
nop
es
add
pop
sub
es
push
add
inc
mov
mov
stc
nop
es
lea
xchg
inc
pop
popa
stc
nop
es
mov
mov
dec
cmp
nop
es
add
inc
add
imul
push
add
push
push
mov
xchg
ret
ret
mov
add
addb
mov
nop
cld
nop
jmp
ret
dec
cli
add
mov
sbb
stc
nop
es
jl
fldl
pop
add
nop
cld
nop
jmp
push
add
je
mov
stc
mov
nop
cld
nop
jmp
add
faddp
add
cld
nop
jmp
add
push
add
add
in
iret
inc
add
jbe
add
mov
jle
nop
cld
nop
jmp
and
add
clc
push
mov
add
cwtl
cmc
dec
inc
add
add
xor
push
aaa
or
call
nop
es
add
cmpsl
push
orl
nop
es
add
add
add
add
and
mov
add
stc
nop
es
stos
xor
add
jae
xor
stos
jne
stc
nop
es
inc
push
add
mov
xchg
ret
mov
jle
add
nop
es
add
add
push
add
pop
add
stc
nop
es
sbb
add
ja
mov
xor
add
stc
nop
es
add
stc
nop
es
jb
sub
add
mov
stc
nop
es
or
push
or
mov
xchg
ret
lret
dec
add
mov
add
stc
nop
es
add
add
or
es
add
cmpsl
add
jb
add
stc
nop
es
add
ret
xchg
add
stc
nop
es
push
in
add
add
mov
mov
or
lock
add
add
xchg
stc
nop
es
jmp
lret
add
pop
add
add
mov
add
push
add
add
add
xchg
add
xor
nop
es
push
push
add
pop
add
nop
cld
nop
jmp
lret
lret
test
or
add
nop
es
add
in
add
add
add
test
add
stc
nop
es
mov
lret
stc
nop
es
aaa
pop
xchg
in
mov
jmp
mov
je
mov
lea
test
loope
pushl
stc
nop
es
or
mov
dec
mov
nop
cld
nop
jmp
add
push
cmc
test
nop
es
push
mov
cmp
jb
dec
add
add
jae
nop
es
add
xchg
or
sub
add
stc
nop
es
push
add
jne
or
add
nop
es
mov
es
add
nop
cld
nop
jmp
add
mov
jge
mov
nop
cld
nop
jmp
inc
add
add
arpl
add
stc
nop
es
mov
jne
stc
nop
es
add
push
push
mov
xchg
ret
pop
jae
jae
icebp
test
jnp
icebp
nop
cld
nop
jmp
add
ret
add
pop
subl
add
nop
es
sbb
pop
and
xchg
pop
subl
push
mov
xchg
ret
add
add
sub
es
pop
dec
add
or
les
mov
xchg
ret
xchg
mov
mov
movb
cmp
ret
jbe
add
or
add
cmp
es
pop
add
jb
add
stc
nop
es
xchg
add
dec
jmp
add
ret
mov
add
mov
add
es
add
add
add
push
mov
jp
addb
ret
jo
or
mov
mov
cld
nop
jmp
add
add
mov
loop
rolb
lds
add
nop
cld
nop
jmp
lea
cmpsl
pop
das
push
push
mov
xchg
ret
add
jmp
inc
pop
mov
sbb
cld
nop
jmp
add
add
add
in
mov
stc
add
adc
add
cmp
lcall
add
add
nop
es
add
mov
xchg
ret
xchg
mov
add
lock
push
push
mov
xchg
ret
add
add
inc
inc
bound
mov
and
stc
nop
es
push
add
add
stc
nop
es
xchg
add
push
push
mov
xchg
ret
and
push
push
inc
add
mov
nop
cld
nop
jmp
add
add
mov
stc
nop
es
add
shrl
nop
es
subb
jae
add
out
out
clc
stc
nop
es
add
push
loopne
nop
es
add
cli
or
out
loope
cmpw
stc
nop
es
dec
xorb
and
push
mov
xchg
ret
inc
fldl
inc
push
call
flds
xchg
ret
jb
add
cmp
jb
pop
inc
mov
lret
push
add
mov
nop
cld
nop
jmp
mov
add
cmpb
nop
cld
nop
jmp
push
add
add
and
inc
add
add
aaa
pop
or
sub
jmp
add
add
xor
nop
jmp
adc
inc
add
xor
push
mov
xchg
ret
add
add
ljmp
jb
push
push
lea
pop
add
stc
nop
es
push
es
cmp
mov
adc
cld
nop
jmp
mov
add
mov
add
stc
nop
es
lea
aaa
add
dec
pusha
stc
nop
es
adc
add
inc
iret
push
push
mov
xchg
ret
add
push
mov
test
nop
cld
nop
jmp
add
add
mov
aaa
dec
popa
les
cmp
jge
stc
nop
es
add
mov
stc
nop
es
add
je
push
add
outsl
arpl
add
nop
es
add
add
push
add
inc
add
nop
es
push
jmp
or
add
add
pop
add
stc
nop
es
add
add
cli
add
add
add
mov
push
mov
xchg
ret
addb
or
and
stc
nop
es
add
je
jg
enter
jb
mov
add
xchg
pop
call
stc
nop
es
add
lret
add
cld
nop
jmp
xchg
add
add
pop
fisubrs
mov
xchg
ret
add
xor
or
jo
nop
cld
nop
jmp
add
add
add
add
add
shr
stc
nop
es
sbb
add
stc
nop
es
push
adc
push
ret
stc
nop
es
add
add
nop
es
add
add
ret
stc
nop
es
es
lods
lods
push
mov
xchg
ret
cmp
dec
ret
and
push
fs
nop
es
add
mov
data16
xchg
jno
xor
add
pop
iret
add
nop
cld
nop
jmp
add
add
mov
jp
add
stc
nop
es
inc
jmp
push
add
and
push
mov
xchg
ret
jae
add
mov
nop
es
aaa
jbe
cmp
jne
push
mov
xchg
ret
pop
add
pop
xor
stc
nop
es
dec
add
dec
xchg
add
cli
call
or
add
add
add
nop
es
lret
push
add
xor
dec
movzwl
stc
nop
es
add
add
xor
sub
push
stc
nop
es
add
mov
add
mov
push
stc
nop
es
ret
add
add
in
pushf
push
stc
nop
es
push
testb
cli
aaa
or
nop
es
xchg
add
and
dec
nop
cld
nop
jmp
cli
lcall
add
mov
xchg
ret
add
dec
ret
nop
cld
nop
jmp
push
add
lea
add
mov
push
mov
cld
add
fwait
add
into
add
push
in
and
add
nop
cld
nop
jmp
imul
add
decb
es
push
add
int
mov
nop
cld
nop
jmp
xchg
or
lea
add
nop
es
add
stos
out
mov
stc
nop
es
mov
mov
pushf
xor
nop
cld
nop
jmp
addb
add
je
stos
mov
stc
nop
es
xchg
add
nop
es
add
add
ret
add
and
out
stc
nop
es
jb
xchg
lret
add
nop
cld
nop
jmp
pop
xchg
cmp
imul
jb
sub
pop
pop
mov
stc
nop
es
sbb
fiadds
ret
ficomps
shr
stc
nop
es
add
orb
xlat
inc
add
addb
add
stc
nop
es
pop
mov
xchg
fucomp
cmp
add
repz
cmp
add
sub
nop
es
inc
and
adc
jle
stc
nop
es
xchg
add
add
add
in
lea
push
mov
xchg
ret
add
div
stc
nop
es
add
testb
imul
add
add
incl
nop
cld
nop
jmp
jbe
and
xchg
out
call
incl
add
pop
lea
lea
stc
nop
es
add
add
mov
jb
pop
add
mov
stc
nop
es
mov
testl
mov
stc
nop
es
pop
cmpsl
add
add
enter
in
stc
nop
es
mov
add
clc
stc
nop
es
xor
pop
xchg
xchg
add
popf
mov
push
mov
xchg
ret
add
pop
add
pop
push
mov
xchg
ret
add
sbb
add
out
scas
push
stc
nop
es
add
xchg
add
xor
and
es
add
add
test
jne
stc
nop
es
push
aaa
add
in
inc
add
or
jmp
jl
imul
and
jo
aad
test
add
add
jne
stc
nop
es
idiv
add
add
nop
cld
nop
jmp
push
add
add
mov
out
add
stc
nop
es
sub
and
push
stc
nop
es
add
inc
push
mov
or
add
jecxz
call
pop
xchg
add
dec
add
stc
nop
es
add
fnstsw
jae
es
fiadds
add
push
add
call
stc
nop
es
add
add
es
jmp
mov
add
add
cwtl
add
add
loope
incl
add
stc
nop
es
add
add
cmc
jp
stc
nop
es
add
add
ret
imul
or
mov
xchg
ret
imul
and
add
mov
xchg
ret
add
add
mov
nop
es
xchg
cli
add
add
es
dec
add
cmp
stc
nop
es
dec
push
fstpl
fiadds
add
stc
nop
es
ret
xor
sbb
stc
nop
es
xchg
sub
add
and
jne
gs
nop
es
add
xchg
mov
leave
stc
nop
es
mov
lret
fldl
lcall
add
adcb
add
aas
adc
cld
pushl
add
jle
ss
stc
nop
es
add
add
dec
pop
push
mov
xchg
ret
push
xchg
add
adc
mov
stc
nop
es
and
subl
loopne
add
add
std
mov
push
mov
xchg
ret
add
add
add
push
stc
nop
es
xor
test
stc
nop
es
add
add
cmp
sar
nop
es
add
push
add
and
jb
nop
cld
nop
jmp
xor
stos
add
xor
sahf
add
push
mov
xchg
ret
sbb
sbb
jnp
popa
push
mov
xchg
ret
jb
jbe
or
inc
add
add
mov
add
stc
nop
es
add
push
nop
cld
nop
jmp
xchg
add
push
add
add
mov
push
mov
xchg
ret
add
mov
add
dec
push
stc
nop
es
add
add
xchg
mov
stc
nop
es
jb
mov
add
leave
and
stc
nop
es
aaa
mov
add
push
dec
cmpl
nop
cld
nop
jmp
pop
push
lret
jbe
cmp
cld
nop
jmp
inc
add
add
push
mov
xchg
ret
mov
add
dec
add
jne
nop
cld
nop
jmp
add
imul
cld
nop
jmp
add
jbe
add
add
test
nop
es
add
push
push
cmp
shl
inc
add
sbb
xor
cmp
lds
xchg
ret
add
pushf
xor
push
mov
xchg
ret
inc
fldl
add
add
xchg
stc
nop
es
add
adc
testb
xor
push
mov
xchg
ret
je
add
sbb
ds
stc
nop
es
add
push
add
pause
cld
nop
jmp
sub
add
pop
adc
xorl
stc
nop
es
push
or
push
nop
cld
nop
jmp
ret
adc
add
mov
stc
nop
es
cmp
pop
push
nop
cld
nop
jmp
inc
in
add
add
lret
mov
stc
nop
es
add
add
inc
add
nop
es
add
xchg
mov
stc
nop
es
xchg
push
add
mov
rolb
jbe
push
ret
xlat
sbb
clc
add
add
add
cmc
mov
add
add
mov
or
mov
xchg
ret
add
push
add
add
ja
add
stc
nop
es
mov
jae
add
adc
cmp
ret
add
push
xchg
jl
imul
add
add
nop
es
mov
or
sub
inc
add
add
add
test
nop
es
pop
notb
rcll
sbb
sub
inc
add
push
add
xchg
push
stc
nop
es
add
mov
in
add
push
fnstcw
xchg
addr16
mov
xchg
ret
pop
add
je
nop
cld
nop
jmp
and
add
dec
xor
stc
nop
es
adc
push
add
push
stc
nop
es
add
add
stc
nop
es
xchg
ret
xchg
add
dec
and
stc
nop
es
add
jb
pop
addb
enter
cld
nop
jmp
push
add
or
stc
nop
es
add
pop
cli
add
fwait
add
stc
nop
es
jb
add
add
push
add
mov
stc
nop
es
xchg
push
sbb
and
stc
nop
es
jbe
add
add
xchg
add
push
mov
xchg
ret
add
xchg
mov
ret
push
and
mov
les
nop
cld
nop
jmp
push
pop
inc
divb
cmp
test
pop
add
stc
nop
es
add
lea
push
inc
add
add
data16
stc
nop
es
add
stos
pop
add
ja
stc
nop
es
add
mov
nop
es
add
add
pop
add
xor
stc
nop
es
lcall
mov
stc
nop
es
add
add
loop
push
mov
xchg
ret
add
add
add
rolb
movzwl
stc
nop
es
add
inc
xchg
cmp
xor
stc
nop
es
add
insb
insb
add
stc
nop
es
adcb
mov
stc
nop
es
mov
es
jne
stc
nop
es
adcb
mov
stc
nop
es
cli
add
mov
add
movzwl
stc
nop
es
add
shrl
mov
push
mov
xchg
ret
mov
mov
sti
stc
nop
es
add
mov
dec
add
fdivs
sar
es
add
cmc
rcl
add
mov
add
jb
lret
add
sub
nop
cld
nop
jmp
stos
sub
mov
dec
sub
nop
es
add
push
add
adc
stc
incl
sbb
add
or
push
stc
nop
es
sub
es
stc
nop
es
add
cmc
pop
inc
add
xor
jb
add
cli
fisubs
rep
mov
stc
nop
es
add
add
add
mov
stc
nop
es
add
lcall
mov
js
nop
cld
nop
jmp
add
add
mov
in
js
mov
adc
nop
es
sbb
xchg
jae
push
mov
adc
pop
jp
cld
popf
mov
push
mov
jno
fimuls
es
push
sbb
xchg
push
add
pusha
stc
nop
es
lcall
add
cmp
nop
cld
nop
jmp
mov
add
mov
xchg
ret
or
add
pusha
stc
nop
es
and
add
jbe
add
add
add
es
inc
add
add
add
add
icebp
inc
add
mov
sub
rep
nop
cld
nop
jmp
add
mov
push
les
jl
push
mov
xchg
ret
add
sub
mov
adc
nop
es
sbb
add
cmpsl
flds
enter
cmp
ret
in
add
add
push
mov
xchg
ret
add
mov
add
stc
nop
es
add
add
cmc
cli
add
js
rcrb
nop
es
adc
or
inc
nop
cld
nop
jmp
add
or
jb
add
add
xchg
push
add
jns
add
nop
es
mov
dec
stos
adc
nop
cld
nop
jmp
add
inc
in
test
mov
mov
xchg
ret
in
testb
mov
jo
inc
add
nop
es
add
add
mov
mov
imul
stc
nop
es
pop
ret
and
add
mov
es
add
mov
cmc
cmp
nop
cld
nop
jmp
add
or
push
mov
xchg
ret
je
xchg
add
push
mov
stc
nop
es
pop
jl
add
nop
cld
nop
jmp
add
stos
push
stc
nop
es
mov
cmpsl
add
add
stc
nop
es
jmp
add
add
es
add
sbb
jmp
out
pop
push
mov
xchg
ret
lcall
ljmp
xor
incl
add
inc
adc
mov
push
lret
xor
xchg
push
dec
add
mov
xchg
ret
mov
jl
add
movzwl
stc
nop
es
pop
add
cmp
repz
nop
es
push
cmp
je
pop
push
push
mov
xchg
ret
lea
jb
mov
push
mov
xchg
ret
imul
add
and
add
xchg
push
add
jle
mov
xor
jbe
inc
add
xor
add
add
stc
nop
es
mov
cmp
nop
es
pop
add
adc
mov
ret
stc
nop
es
push
add
push
add
push
stc
nop
es
je
pop
jae
add
mov
xchg
ret
jl
add
add
lods
mov
nop
cld
nop
jmp
sub
xchg
add
stc
nop
es
push
fldl
xchg
add
mov
es
push
imul
add
jmp
nop
cld
nop
jmp
add
add
data16
stc
nop
es
add
mov
mov
stc
nop
es
inc
add
add
sub
stc
nop
es
jbe
dec
jb
dec
push
add
sar
nop
es
add
add
add
subl
es
jmp
sbbb
nop
es
mov
fiadds
add
inc
mov
stc
nop
es
mov
aam
scas
popa
nop
cld
nop
jmp
add
push
jae
push
movb
mov
xchg
ret
add
add
add
es
inc
mov
push
pop
adc
push
mov
xchg
ret
add
add
nop
es
add
xchg
pop
jb
add
dec
push
mov
xchg
ret
add
mov
inc
cmpsl
add
mov
stc
nop
es
xchg
mov
daa
notl
add
nop
cld
nop
jmp
mov
inc
jae
add
jae
ja
and
push
mov
xchg
ret
xchg
mov
add
stc
nop
es
jae
push
or
pop
cmp
mov
xchg
ret
inc
fldl
push
push
insb
inc
jb
nop
cld
nop
jmp
mulb
add
mov
push
mov
xchg
ret
inc
dec
add
movsb
add
jmp
jb
or
or
mov
loope
add
pop
add
and
nop
cld
nop
jmp
cmpsl
xchg
xchg
fiadds
adc
mov
xchg
ret
add
xchg
add
adc
add
inc
add
add
push
add
fisttpll
nop
jmp
add
pop
add
or
nop
es
add
push
nop
cld
nop
jmp
xor
xchg
xchg
adc
inc
add
mov
stc
nop
es
add
push
add
in
push
nop
cld
nop
jmp
add
xchg
add
stc
nop
es
add
mov
add
fistl
cld
nop
jmp
cmp
push
add
and
mov
inc
add
jl
add
ret
add
cs
stc
nop
es
cmpsl
or
add
out
mov
dec
pop
push
mov
xchg
ret
pop
add
sub
jb
jns
inc
cmp
nop
es
add
add
add
add
stc
nop
es
jbe
add
push
stc
nop
es
dec
je
pop
push
inc
sbb
add
xor
stc
nop
es
add
add
mov
xchg
ret
add
in
mov
stc
nop
es
mov
ret
cmpsb
add
sti
add
nop
cld
nop
jmp
pop
sbb
add
add
add
es
sbb
add
es
es
adc
inc
mov
movb
xor
stc
nop
es
cmpsl
testb
add
add
jmp
jae
mov
je
lret
lahf
xor
stc
nop
es
pop
add
leave
cli
stc
nop
es
xchg
mov
out
mov
stc
nop
es
inc
jl
aaa
jmp
std
push
push
mov
xchg
ret
mov
pop
add
call
stc
nop
es
add
js
push
mov
xchg
ret
add
and
es
add
lea
jmp
or
add
stc
nop
es
cmc
dec
add
std
push
push
mov
xchg
ret
add
add
add
add
jne
nop
cld
nop
jmp
mov
data16
add
stc
nop
es
imul
add
add
nop
cld
nop
jmp
mov
add
add
add
movswl
stc
nop
es
imul
loopne
mov
xchg
ret
adc
cmp
in
add
dec
mov
cmp
mov
add
push
add
add
add
mov
faddp
int3
push
xchg
sbb
jmp
add
sub
jl
add
add
add
add
add
out
cmc
adc
dec
rorl
inc
add
mov
or
dec
and
cmp
pop
add
mov
add
lock
test
iret
int3
jbe
ja
jle
add
jp
add
fisttps
add
pusha
add
js
add
cmp
pop
lock
sub
sub
add
add
loope
dec
pop
add
rolb
mov
rolb
add
add
add
add
in
pop
push
addr16
stos
bound
mov
xchg
push
jnp
movl
and
paddw
push
add
sub
mov
imul
mov
mov
adc
mov
mov
jge,pn
les
loop
out
stos
ret
push
cmp
cmp
cmpsb
add
add
fidivs
xchg
iret
sub
jae
subl
das
push
in
jbe
addb
add
xchg
add
add
add
add
mov
push
add
add
out
add
pop
push
push
adc
mov
xchg
jnp
add
add
add
add
in
sub
mov
stos
jbe
push
popa
xchg
andl
lods
pop
cmp
add
add
jecxz
dec
dec
cmp
pop
xor
add
or
add
xchg
add
orl
lds
jmp
add
sub
add
add
xor
add
add
movsl
loope
rolb
mov
jno
add
mov
mov
repnz
or
pop
outsl
les
jp
add
arpl
mov
jl
add
sub
lret
mov
add
sub
jnp
pop
cli
addb
adc
and
mov
jl
pop
push
add
shll
mov
inc
cmp
add
mov
xchg
add
cmp
add
add
fcmove
cmc
mov
add
in
loopew
ret
call
add
fs
fwait
sahf
xchg
add
add
add
test
add
leave
jnp
mov
add
mov
jae
add
add
jns
dec
aaa
ds
add
sub
or
push
add
add
mov
add
pop
cmp
pushf
cld
push
add
fwait
shr
nop
add
mov
mov
and
mov
add
and
mov
jb
rolb
dec
inc
popa
scas
and
std
xchg
xchg
add
mov
jge
push
add
mov
lods
mov
xor
add
into
bound
mov
mov
arpl
add
add
scas
bound
mov
add
mov
jno
mov
cmp
add
mov
les
cmp
mov
flds
add
fucomp
call
xchg
sti
pop
adc
pop
adc
add
mov
xchg
out
fsubs
adc
out
or
lock
insl
stc
xlat
pop
adc
cmp
fisttpll
outsl
out
stos
sti
fwait
or
dec
mov
scas
inc
sbb
in
leave
or
rolb
jae
add
adc
add
std
xchg
jns
xor
setno
jne
divl
add
ljmp
adc
rolb
adc
dec
inc
add
sbb
sub
add
insb
adc
leave
outsl
out
scas
adc
mov
add
jnp
xchg
cmp
xchg
add
add
add
decl
rolb
rolb
mov
int
cmpsl
mov
add
sbb
push
add
inc
insb
pop
or
add
icebp
pushf
rolb
xor
jb
into
lea
into
lcall
push
call
movsl
push
je
loop
or
add
add
add
mov
xor
loope
fbstp
sbb
add
add
add
sti
jae
lock
add
cmpsb
add
ja
push
rcll
mov
xor
add
lock
sub
mov
add
add
add
pop
mov
add
add
out
push
add
xor
scas
pop
in
in
pop
mov
push
add
pop
mov
xchg
add
mov
imul
add
and
int3
mov
shl
dec
movsb
add
add
mov
push
add
movsb
add
jecxz
add
add
add
bound
mov
mov
add
adc
add
add
testb
add
sub
ja
mov
adc
add
inc
jg
jge
sub
dec
jecxz
imul
add
pop
lock
add
sbb
in
and
sbb
mov
lods
hlt
add
cs
jp
add
pop
jl
fistpll
mov
add
mov
add
inc
pop
mov
push
test
inc
add
add
or
add
pop
lret
xchg
add
out
cmpsl
add
mov
add
ja
add
cmp
fsubl
cld
cld
jo
cs
pop
jns
or
mov
sbb
add
faddl
push
add
int3
in
std
pop
mov
movsl
nop
add
add
add
add
rolb
lahf
or
and
mov
insb
dec
push
push
inc
or
lcall
lahf
scas
pop
add
mov
add
mov
testb
add
add
in
add
aaa
jbe
xorl
jg
push
add
out
mov
mov
mov
push
mov
mov
mov
xchg
in
mov
add
add
loopne
sub
push
repnz
das
fiaddl
pop
popf
jo
gs
add
leave
jge
add
pop
push
cwtl
jle
pop
lds
mov
sbb
inc
ret
add
jne
andl
rolb
add
mov
scas
xor
inc
xlat
inc
lret
rolb
inc
or
ja
add
add
cmp
push
mov
add
pop
out
ljmp
pop
adc
xor
adc
xor
fdivs
rolb
jle
and
loope
pop
cmpsb
add
add
mov
iret
xchg
aas
jnp
sub
test
rolb
mov
add
mov
xchg
dec
inc
add
add
pop
sub
outsl
jg
add
inc
adc
cmp
in
fnstenv
sub
outsl
out
fcoml
add
test
mov
add
outsb
les
sbb
add
daa
dec
and
inc
add
add
sahf
icebp
pop
pusha
add
loope
lahf
mov
popa
daa
jns
add
push
mov
lock
scas
adc
aad
pop
mov
sbb
sbb
mov
jecxz
add
mov
jp
add
scas
or
xor
jno
pop
roll
mov
add
mov
add
jnp
addb
add
push
xchg
add
outsl
add
adc
mov
repnz
add
pop
loop
lods
mov
push
add
mov
xor
in
jnp
jnp
ret
xchg
push
adc
jne
das
stc
inc
add
dec
xor
add
sub
add
icebp
pop
test
lds
fwait
pop
xor
sub
cmp
mov
stos
inc
add
call
rol
add
add
cmp
mov
adc
movb
add
mov
mov
in
push
add
xlat
add
mov
jle
add
add
daa
sbb
push
and
insl
mov
ja
lea
fdivrp
rcrl
outsl
xchg
sbb
icebp
and
jo
xchg
add
cmp
add
add
stc
xor
sahf
ljmp
xchg
add
add
pinsrw
add
cmpl
adc
mov
lods
dec
std
dec
test
xor
aas
fdivrl
add
addb
movl
shr
dec
adc
xor
fldt
mov
icebp
test
add
mov
fnsave
stc
adc
scas
jno
lods
xor
outsb
xchg
add
jp
aas
sbb
sub
lods
adc
sbb
jge
lds
add
add
add
push
add
stos
insl
insl
inc
add
or
pop
xor
repz
add
pop
push
add
and
mov
rcr
lods
pop
xchg
mov
mov
add
mov
mov
inc
push
leave
jnp
icebp
mov
les
clc
push
stos
inc
aaa
add
incl
lds
mov
cmp
add
add
add
sbb
mov
mov
inc
add
mov
loop
push
add
mov
xor
scas
push
add
add
dec
es
sub
cmp
xor
aaa
sti
scas
xchg
ret
aaa
mov
out
jl
fisttpll
rolb
xchg
pop
out
push
scas
and
xchg
add
xchg
lahf
pop
dec
ja
rcrl
add
push
mov
movb
mov
adcl
and
mov
xor
or
jmp
les
xor
or
cmp
xor
mov
scas
aam
add
int
jmp
sti
imul
stos
fbld
sub
gs
mov
add
mov
add
inc
insl
dec
jne
sub
pop
out
outsl
add
sub
mov
into
into
xchg
xlat
in
adc
in
xchg
push
iret
pop
lods
push
cmp
popf
in
add
jl
add
jnp
sub
add
xor
add
mov
xchg
lret
adc
aad
pop
rolb
lret
add
in
pop
outsl
push
add
push
fisttpl
and
int3
hlt
add
or
int3
addb
add
sahf
aad
add
cltd
dec
xchg
add
add
push
add
popl
les
mov
fst
test
sbb
in
rorl
cmp
pop
push
add
add
movb
add
add
adc
mov
sbbl
cmp
aad
pop
rolb
adc
std
sub
add
sbb
add
add
add
push
sub
lret
dec
aam
loopne
mov
add
fs
xchg
es
inc
das
addb
sub
jnp
sbb
push
add
add
add
add
rorl
jno
add
add
add
out
out
add
add
add
int3
push
add
xchg
add
in
mov
addb
add
add
int3
inc
jle
fmull
add
jecxz
sbb
cwtl
add
call
jmp
add
inc
int3
lahf
lret
and
mov
popf
int
ret
js
in
add
mov
add
sub
add
addr16
push
add
int
cmc
jg
inc
jl
pop
mov
cmp
lcall
lds
mov
push
add
xchg
or
pop
scas
push
add
mov
sbb
or
sub
add
adc
jl
mov
cltd
or
sbb
add
add
imul
xor
add
mov
in
sub
addr16
add
fwait
inc
sbb
or
add
add
mov
mov
add
addb
add
add
add
mov
inc
xor
movsl
les
cltd
adc
cltd
sbb
dec
in
push
add
cld
fwait
inc
cmp
loop
dec
repz
xchg
xor
cmp
gs
cmp
xchg
fstl
add
mov
add
mov
add
jmp
mov
adc
adc
addr16
out
sbb
add
inc
add
ja
xchg
add
ret
adc
mov
lods
into
sbb
add
jbe
xor
pop
and
scas
push
adc
mov
pop
jns
add
xorl
bound
mov
mov
xchg
add
add
iret
sub
add
pop
repz
movb
icebp
xor
ret
pop
dec
addr16
add
add
add
pop
mov
ret
add
add
xchg
test
aaa
ljmp
mov
add
adc
shll
xor
mov
or
add
pushl
test
jo
push
dec
or
rolb
out
mov
mov
iret
mov
add
inc
in
fs
ljmp
mov
lcall
mov
out
mov
xorl
imul
xorl
sahf
cwtl
mov
add
or
add
add
mov
std
out
jne
or
arpl
arpl
and
mov
pop
ljmp
sbb
pop
cs
mov
pushf
dec
adc
cmpsb
add
repnz
mov
add
lea
fsubl
pop
mov
testb
loop
aas
cld
push
dec
mov
jg
add
mov
int
add
mov
and
sub
pop
push
add
lods
mov
pop
add
mov
or
pop
lods
lea
cmp
add
negl
dec
dec
jecxz
xchg
inc
add
test
mov
roll
push
add
je
cmpsl
insb
mov
mov
inc
add
push
add
rolb
jb
pop
stos
repnz
outsl
mov
add
adc
xor
add
int
sbb
add
add
jmp
loope
add
mov
add
add
lret
xlat
pop
cmp
aas
sbb
add
adc
dec
add
jo
push
add
add
pop
mov
and
mov
decl
movsb
add
add
add
sarl
mov
loop
addr16
cmp
add
test
imul
mov
add
ret
cmpsl
xor
cltd
add
in
xor
fucomp
push
add
lock
data16
testb
clc
xor
lcall
aad
std
sub
rorl
pop
gs
mov
sbb
rolb
add
mov
jl
enter
add
dec
and
mov
fnstcw
jmp
cld
repnz
add
add
cmp
pushf
jmp
lods
notl
enter
add
cmp
add
push
cmp
add
add
inc
add
adc
mov
adc
xor
test
jge
jl
add
add
add
out
icebp
mov
add
ret
mov
cmpsb
add
call
add
mov
aad
add
add
test
add
jo
sub
xor
cwtl
jae
push
add
loop
xchg
add
jmp
and
mov
mov
loope
mov
add
jl
dec
cwtl
inc
addr16
test
mov
add
cli
repz
ret
aaa
mov
test
or
add
add
add
pop
popf
stos
pop
test
add
add
adc
mov
sarl
add
xchg
data16
add
sub
fnstsw
mov
add
fwait
test
mov
js
adc
or
leave
and
lea
add
mov
mov
ficoml
daa
data16
sub
insb
mov
xor
add
push
add
rolb
test
dec
pop
lds
push
mov
arpl
add
and
add
out
sahf
fxch
cld
mov
add
add
mov
pop
sbb
test
inc
push
xlat
pmaddwd
add
adc
add
xchg
push
mov
sub
add
add
rolb
inc
add
pop
jns
aas
pop
in
faddl
push
add
fnstenv
mov
add
mov
sub
iret
pop
pcmpeqb
popa
jmp
insl
adc
scas
push
add
push
add
add
add
jb
mov
add
inc
adc
mov
add
arpl
add
ret
movb
mov
sbb
stos
sbb
fldl
or
addb
iret
adc
sahf
cmp
je
dec
cmp
add
add
pop
addb
adc
add
stos
adc
jae
cmp
lret
push
cs
mov
add
data16
pop
and
mov
cmpsb
add
add
inc
push
pushf
lods
sub
push
add
je
jle
inc
add
iret
dec
aas
sahf
pop
ds
push
add
mov
dec
cltd
leave
mov
cmp
add
cli
cmp
bound
mov
pop
bound
mov
add
aad
or
sub
add
inc
add
gs
addb
xchg
mov
popf
sub
cmp
mov
testb
incl
xorl
pop
adc
sub
inc
add
add
xchg
outsl
fisttpll
gs
testb
sarl
add
inc
nop
add
add
mov
xchg
add
rorl
test
call
loope
inc
add
xchg
out
push
out
idivl
orl
adc
addb
sahf
sbb
add
add
mov
add
and
jno
add
add
insb
mov
add
ret
sub
das
popa
cmp
adc
mov
data16
pop
das
adc
fldt
xchg
mov
jnp
add
sub
push
add
scas
push
xchg
in
cmp
add
add
mov
ljmp
inc
add
mov
je
push
add
add
jecxz
mov
scas
fnstcw
push
int
or
stos
jo
pushf
mov
add
mov
pop
xor
clc
xor
out
pop
dec
aad
testb
add
jae
stc
add
adc
cltd
mov
sbb
mov
add
mov
imul
add
jnp
mov
sbb
fwait
add
shr
xchg
add
lods
lret
add
and
stos
jg
add
xor
adc
jns
dec
or
add
adc
adc
jmp
add
push
bound
mov
mov
add
cmpl
add
push
hlt
add
movb
fwait
imul
add
cmp
hlt
add
mov
xor
repnz
add
iret
xor
mov
mov
cmp
mov
add
xchg
in
or
add
mov
add
adc
adc
dec
add
mov
sub
and
in
dec
mov
test
repnz
addr16
jns
sub
pop
push
add
int3
and
add
or
mov
xchg
into
pop
xchg
add
add
movsl
gs
mov
push
repnz
add
int
loop
lret
mov
cmp
adc
out
sbb
add
inc
sahf
mov
add
add
fwait
sbb
js
mov
add
movb
add
push
pop
xor
dec
sbb
pushf
out
and
add
in
stos
into
testb
sti
inc
add
adc
xchg
adc
add
add
add
jmp
movsl
test
movsl
inc
add
add
sti
mov
jne
add
mov
or
insl
xchg
add
pop
lea
lods
jb
sub
push
push
shll
cwtl
xor
cmp
jo
scas
push
into
pusha
add
add
aas
jbe
inc
add
cld
clc
inc
out
leave
push
add
stc
aaa
pop
out
xor
add
add
adc
mov
add
add
mov
mov
inc
daa
inc
or
sbb
mov
mov
add
add
fwait
popa
rcl
lds
add
xor
out
mov
adc
push
add
add
push
or
or
sbb
cmp
test
testb
add
shrl
mov
mov
add
add
or
pop
rolb
add
lahf
jle
fistpl
pxor
add
xor
sub
lds
add
push
in
outsb
xchg
or
add
add
fwait
insl
mov
add
jo
mov
lods
push
push
aas
psubsb
mov
add
add
add
gs
jl
add
rolb
add
scas
xor
xchg
add
add
sbb
inc
jno
mov
rolb
push
add
enter
add
push
add
ret
int
jg
add
or
add
in
aaa
ficompl
xlat
mov
outsb
test
repz
lret
andl
cmpsb
add
call
add
pop
inc
in
mov
mov
add
pusha
add
adc
adc
pop
out
andl
add
and
xor
mov
add
pop
dec
iret
mov
add
aad
into
repnz
movsb
add
push
adc
and
mov
cltd
or
push
dec
mov
loop
aad
ret
out
data16
lahf
repz
testb
add
inc
add
or
sti
imul
xor
mov
lret
jnp
inc
add
add
pop
rolb
inc
pop
mov
iret
add
outsl
mov
repnz
dec
jbe
test
cmp
xchg
push
add
pop
jmp
add
add
icebp
add
mov
into
in
rolb
adc
fstl
andl
mov
add
jge
out
adc
dec
stos
sbb
add
adc
mov
sbbl
lock
sub
add
movsb
add
or
rcll
xchg
mov
into
pop
in
nop
add
add
mov
imul
dec
or
add
add
rolb
push
repnz
push
xor
out
xor
sbb
adcl
add
rolb
sbbl
push
pusha
add
dec
xchg
xchg
add
xchg
add
mov
movsl
dec
insl
xchg
add
mov
paddusb
add
add
push
dec
in
mov
add
ret
push
add
xor
ss
add
popf
ret
fists
imul
add
add
mov
pop
popf
pop
add
imul
add
push
push
pop
test
stos
jno
dec
imul
mov
add
push
roll
add
add
int3
mov
sbb
sub
cmp
or
add
add
jae
xchg
jns
lea
mov
movsb
add
decl
add
and
inc
add
fwait
mov
add
ffree
add
add
push
add
add
add
add
add
sub
add
jecxz
call
add
add
add
add
add
fsubl
loop
mov
dec
js,pt
add
add
testb
add
add
add
lret
jg
sarl
add
rolb
and
add
xchg
aas
inc
add
imul
add
jae
add
mov
repnz
add
cmp
push
add
xchg
repz
xchg
daa
adc
mov
add
ljmp
sbb
and
cmp
bound
mov
add
adc
in
adc
dec
add
movb
add
rcll
xchg
stc
mov
repnz
pushf
hlt
add
add
xor
adc
jne
add
add
add
sbb
jmp
jae
pop
or
or
add
push
add
pop
sub
ret
rolb
add
add
call
scas
jo
push
add
mov
add
or
xchg
sbb
aas
out
adc
add
in
cld
fcompl
add
lcall
add
add
add
gs
pop
pop
iret
push
add
sub
add
jg
or
push
sbb
lcall
add
mov
xor
and
mov
arpl
add
sbbl
fmul
lret
adc
es
lcall
enter
sub
sbb
add
cmp
push
add
ljmp
ficoml
push
add
sub
add
cli
sbb
add
push
gs
mov
sti
pop
mov
scas
xor
je
mov
add
xchg
or
je
mov
mov
lods
fwait
pop
insb
insl
mov
das
cmp
add
add
add
xchg
arpl
cmpsl
les
loope
iret
push
add
mov
lds
add
add
sub
pop
push
add
add
fdivs
push
add
pop
mov
pop
das
clc
add
sbb
add
and
mov
jge
sbb
pushf
fdivrl
add
jmp
adc
pop
out
push
jl
xchg
add
mov
cli
dec
dec
mov
fadd
inc
add
add
lret
add
add
pop
push
sub
xor
inc
add
mov
sbb
into
pop
stos
bound
mov
add
jp
and
sub
pop
mov
mov
insl
orl
imul
add
je
jge
add
fucomip
call
test
mov
adc
push
add
cmp
add
cmp
mov
add
daa
dec
imul
sbbl
xchg
add
mov
daa
cmpsl
mov
flds
add
add
push
xor
test
adc
cmp
cmc
into
dec
ja
and
or
jp
insl
jns
inc
add
mov
mov
repnz
add
mov
add
ret
xor
arpl
add
arpl
add
sub
out
mov
mov
rolb
hlt
add
daa
inc
mov
pop
and
pop
out
lock
sbb
push
add
rolb
std
xchg
mov
in
push
add
std
sbb
jg
push
add
mov
repz
add
add
xchg
pop
lods
dec
fwait
ret
repz
add
pusha
add
rolb
push
stc
adc
cmpsb
add
and
add
lret
roll
add
jo
popa
jg
xchg
add
lock
insl
xor
test
gs
mov
lret
rolb
data16
mov
or
push
stos
sarl
in
outsb
pop
gs
add
add
aam
push
movsb
add
add
addr16
lea
int
mov
lret
or
fidivrl
xchg
cmpsb
add
rolb
enter
out
mov
mov
add
fstpl
inc
add
add
nop
add
mov
cmp
stos
in
fs
add
add
add
mov
add
out
pop
push
jae
mov
test
xchg
adc
arpl
add
mov
inc
add
add
add
mov
xor
mov
and
loopne
test
sub
mov
xlat
sbb
inc
add
mov
push
add
xor
sub
mov
rolb
das
je
out
jp
mov
enter
xor
testb
add
or
pop
gs
add
cltd
jecxz
and
jbe
mov
aad
insl
mov
lahf
or
addb
add
pop
negl
adc
add
add
and
hlt
add
add
lea
mov
mov
add
add
mov
dec
fldl
imul
mov
stos
lock
dec
loope
fisubrs
pusha
add
add
add
add
add
mov
testb
loopne
fisubs
add
add
jno
cmp
popf
int3
sahf
movb
add
push
add
jmp
fwait
pop
pop
scas
inc
lcall
icebp
outsb
lods
mov
add
aas
xor
shrl
lods
lahf
pop
cmp
push
add
add
mov
shl
add
ficoml
push
add
add
pop
mov
insb
push
cmpsl
push
add
fidivrs
mov
inc
add
add
fsts
jge
aas
lea
sub
cld
dec
daa
push
add
clc
jle
jnp
add
lret
mov
push
add
add
and
mov
bound
mov
in
sub
dec
das
jnp
xchg
push
call
jg
add
add
aam
out
jecxz
inc
add
js
add
sbb
add
sub
adc
in
cmp
out
add
fsubl
outsl
mov
add
add
and
mov
add
add
add
add
lahf
dec
mov
cld
add
in
data16
mov
cmpsl
push
insl
in
jae
add
push
je
enter
adc
mov
adc
adc
mov
sub
add
sarl
add
add
jnp
mov
movsb
add
dec
nop
add
add
mov
mov
xchg
inc
add
add
dec
js
jecxz
add
loop
adc
push
mov
mov
push
add
aaa
insb
pop
xlat
pop
out
popf
fstpt
iret
xchg
pushf
repz
ds
xor
sbb
fs
fdivs
add
dec
fcmovnbe
add
add
lahf
js
add
add
inc
add
sbb
add
add
add
add
dec
negl
sub
mov
xchg
add
mov
push
dec
outsl
adc
push
add
test
pop
lods
aaa
movb
in
cmpsb
add
outsl
jg
add
testb
add
cmp
outsb
pop
add
pop
enter
add
orl
sub
lcall
add
imul
out
cmpsl
xchg
add
adc
fs
mov
rolb
mov
rcrl
add
add
and
mov
cs
add
pop
mov
add
mov
or
add
xchg
xchg
sti
repnz
movl
sbb
mov
mov
cltd
sub
in
or
add
mov
sub
mov
stos
and
mov
add
add
cmp
add
dec
in
add
mov
enter
adc
loopne
adc
addb
jb
out
int3
fcmove
jle
int
xor
add
xchg
jno
fidivl
mov
loopne
cli
jae
add
inc
mov
add
mov
add
addb
xor
mov
mov
xchg
jl
add
mov
mov
xchg
cmp
add
mov
cmp
push
add
add
ret
add
addl
ret
pusha
add
pop
mov
pop
insl
aam
mov
scas
jmp
jo
cmpsl
jae
rolb
mov
mov
rorl
xor
adc
dec
mov
mov
add
and
mov
repnz
clts
add
movsb
add
stos
icebp
movsl
lret
mov
add
imul
pushf
xchg
add
push
add
data16
add
add
addb
adc
add
stc
jo
out
lahf
lea
mov
sbb
mov
dec
dec
pusha
add
adc
add
add
mov
aaa
push
in
in
sub
add
inc
bound
mov
push
push
pop
rolb
cmp
add
aam
mov
jg
add
ja
jae
scas
add
jp
add
xchg
popl
sbb
xchg
add
add
add
imul
xchg
add
add
add
add
mov
xchg
sbb
add
add
je
cltd
cli
mov
dec
or
add
cmp
daa
adc
pop
aam
mov
iret
addr16
jnp
add
jp
cmp
inc
out
add
mov
addb
mov
sbb
add
add
dec
mov
fcmovbe
add
lock
add
iret
and
mov
sbb
addr16
add
int3
push
adc
loop
fcoms
stos
jnp
jmp
inc
add
aam
stos
sub
add
add
rcl
dec
inc
add
data16
and
loopne
inc
add
lods
mov
mov
add
rcl
add
stos
cmc
push
add
dec
aad
sub
addb
ret
bound
mov
or
stc
push
add
mov
add
add
add
std
roll
add
add
add
sbb
add
add
add
sub
sub
add
out
mov
ljmp
cmpl
add
add
add
xchg
xchg
insl
addb
cmpsb
add
add
data16
shll
add
or
dec
or
jmp
pop
fucompp
movb
xor
add
sbb
xchg
add
dec
lahf
test
sbb
xor
add
sbb
test
test
loopne
inc
test
add
movsb
add
push
add
mov
add
jae
nop
add
ficoms
push
add
cli
loop
push
add
fsts
testb
pop
imul
add
mov
lahf
testb
mov
cmc
pop
js
ja
add
jmp
add
add
add
icebp
ret
add
outsl
notl
add
add
mov
add
add
xchg
add
add
add
dec
sbb
dec
negl
add
add
xorl
add
jle
lock
stos
ret
add
pop
and
mov
add
xchg
mov
pop
data16
add
out
add
mov
add
out
xchg
add
add
outsl
call
mov
and
push
subl
add
sub
sub
add
add
scas
in
cmp
movsb
add
and
mov
cmp
sahf
xchg
add
add
add
add
cli
inc
jae
stos
sti
jnp
add
or
dec
and
mov
add
push
into
ljmp
stos
in
loop
add
pop
inc
add
push
add
das
mov
sahf
jecxz
adc
push
add
inc
add
je
inc
add
and
mov
add
add
sahf
jecxz
movsl
mov
or
add
cmp
into
gs
imul
add
mov
mov
sub
mov
cmpsl
xchg
add
sub
mov
push
add
jge
jge
les
fisubrl
in
push
rolb
fnsave
enter
xor
mov
add
add
add
cmp
jnp
data16
ret
aad
cmpsl
push
jb
add
mov
enter
lds
jno
add
jge
lods
inc
add
or
mov
addb
daa
inc
add
xchg
fisubl
mov
cs
je
cmp
cli
pop
out
add
insl
hlt
add
aam
in
ds
add
sub
stos
jp
mov
mov
add
call
popa
insl
movsl
shr
dec
pushf
outsl
mov
push
add
add
lock
add
add
nop
add
lret
xor
dec
testb
ja
dec
xchg
add
mov
jmp
add
jns
sub
inc
add
scas
add
xchg
cmp
add
fs
in
repnz
cwtl
inc
roll
add
stos
jp
jmp
into
push
dec
mov
xchg
add
add
je
movsl
jbe
jne
xchg
add
sub
addb
aaa
adc
out
enter
movb
add
add
into
pop
popf
inc
add
addb
scas
sbb
xor
imul
cmp
add
aaa
and
xchg
fcmovbe
add
inc
add
push
add
jbe
subl
rolb
js
mov
insl
jne
cmc
xor
rolb
test
add
sbb
lods
push
add
testb
or
add
imul
mov
int3
ds
test
inc
add
mov
loop
sbb
jp
setns
pop
fiaddl
push
add
je
adc
jae
and
xchg
add
add
add
add
push
rcrl
mov
roll
ljmp
loopne
test
add
add
and
aaa
add
add
add
lods
sub
out
or
add
daa
cmc
test
out
addb
inc
mov
add
fbstp
movsb
add
add
add
lods
rolb
imul
nop
add
add
xchg
add
xchg
pop
mov
testb
jb
dec
pop
enter
das
xor
movsb
add
xor
dec
stos
addr16
lret
jg
push
mov
add
add
leave
xor
daa
call
cmp
add
xor
pop
xchg
add
mov
ret
insl
into
orl
lds
add
iret
in
and
mov
pusha
add
cs
dec
mov
testb
pop
add
xlat
push
sbb
dec
lcall
mov
cmp
add
push
add
data16
je
push
insl
stos
data16
push
add
add
mov
leave
mov
fcmovne
xor
cmp
xchg
ret
mov
mov
xlat
ret
add
add
mov
add
inc
add
push
add
jno
add
pop
push
and
mov
xchg
jnp
rcll
arpl
std
push
add
mov
push
jnp
out
mov
inc
add
add
push
add
add
mov
mov
cld
or
pop
mov
mov
fcmovne
jnp
js
add
in
pop
enter
xor
add
dec
ss
push
add
les
lret
popa
orl
sahf
pop
movsl
inc
movsl
icebp
mov
add
popa
enter
add
and
mov
push
pop
sbb
add
aas
mov
pop
or
inc
add
add
xchg
pop
cmc
cli
mov
mov
jbe
push
rol
fld
jl
and
add
in
rol
add
and
mov
xor
add
sub
das
jnp
mov
add
add
add
mov
add
mov
or
data16
cmp
sbb
add
mov
addb
das
rolb
xor
lods
mov
sub
mov
fisubs
aam
in
mov
add
repnz
fldenv
push
add
ret
cs
xlat
or
pop
cs
lock
jle
adc
xchg
pop
cmp
and
mov
clc
jp
mov
mov
mov
sbb
fmulp
imul
popf
and
sbb
repz
add
add
add
mov
cmpsl
add
mov
xchg
jle
add
add
dec
jg
sbb
add
add
scas
rcl
add
insl
loopne
add
dec
push
dec
mov
add
add
pop
mov
xor
and
mov
mov
std
adc
mov
dec
insb
in
leave
cmp
adc
add
filds
lret
clc
fildl
and
push
pop
js
xor
rolb
and
rcrl
outsl
std
xchg
lock
push
add
fdiv
add
add
add
mov
ret
shufps
mov
add
push
push
add
add
pop
rolb
pushf
out
or
pop
pop
inc
fsubr
mov
cmc
and
mov
scas
cs
pop
inc
add
repz
push
add
add
mov
xchg
insl
out
aad
add
ret
add
leave
insb
mov
add
inc
add
adc
cli
jne
inc
add
push
loop
mov
push
and
in
fists
cli
adc
fsub
xchg
jl
jb
addr16
add
xchg
add
jns
xchg
inc
mov
jnp,pn
mov
stc
add
mov
add
das
lahf
push
add
jb
jmp
jmp
add
lret
cmpsl
jns
pusha
add
imul
cs
push
add
add
lods
aaa
mov
pop
push
sbb
ljmp
add
mov
sbb
xor
lock
lea
add
add
jae
xorl
add
add
sub
add
int3
mov
jne
add
add
stos
gs
and
mov
adc
adc
add
test
or
and
dec
aaa
ret
add
mov
mov
ret
xchg
dec
aam
scas
xor
pop
add
add
iret
sbb
mov
cmpsb
add
add
in
xor
cwtl
xor
or
dec
cld
or
arpl
rep
iret
test
lods
add
xchg
add
jge
add
rolb
cmpsl
and
push
xchg
sub
into
pop
aas
xor
lds
mov
push
add
push
cmp
add
add
outsl
and
and
mov
add
bound
mov
pop
pop
mov
js
dec
das
jl
loopne
xchg
iret
jp
xchg
add
add
add
xchg
add
sub
mov
mov
in
out
inc
stos
dec
mov
jnp
add
cld
xchg
dec
popf
inc
add
pop
xor
hlt
add
xchg
jg
cmp
bound
mov
int3
fcmovbe
adc
inc
cwtl
xchg
add
add
inc
add
add
ljmp
xlat
mov
xchg
jmp
mov
add
add
cli
data16
testb
add
add
or
and
mov
rolb
mov
daa
add
fs
out
and
mov
add
lahf
loope
fdivl
add
add
inc
test
xchg
jg
bound
mov
add
mov
addb
sbb
das
sub
insb
jg
add
jno
xchg
add
xchg
mov
imul
test
add
jl
push
rcrl
xchg
imul
mov
out
adc
sub
icebp
out
lea
add
add
fwait
scas
jns
movsb
add
push
fldt
add
adc
xchg
mov
jmp
xor
lods
outsl
cld
dec
pop
enter
push
add
xchg
sub
add
dec
ljmp
add
add
leave
or
add
clc
scas
lret
add
add
lods
inc
add
add
repz
dec
mov
add
add
dec
hlt
add
xchg
imul
mov
adc
cwtl
test
shl
push
test
mov
xchg
mov
add
jnp
adc
mov
ret
pop
adc
xor
inc
loop,pt
xor
pop
xchg
inc
mov
fs
cwtl
outsb
aas
fnstsw
sub
cmp
fcomps
add
add
add
pop
pop
push
add
add
add
mov
addb
dec
mov
add
add
in
mov
shrl
inc
add
add
jae
dec
cmp
add
push
std
int
or
faddp
add
mov
lret
imul
addr16
idivl
add
outsb
push
sbb
out
sarl
push
add
mov
add
add
add
mov
data16
mov
imul
sbb
loop
fwait
cmpsl
mov
jmp
ds
add
adc
dec
js
lret
sti
fbstp
movsl
mov
push
add
push
cmp
outsl
ja
xchg
subl
or
add
xchg
add
dec
andl
mov
add
cmpl
mov
jnp
cmp
mov
ret
mov
or
sbb
rorl
stc
out
inc
xchg
add
pop
les
push
add
in
sub
gs
rolb
push
push
xlat
push
mov
add
repz
push
add
xlat
inc
or
aaa
pop
scas
pop
add
mov
lods
pop
loop
rcrl
sub
popa
cmc
jge
add
xor
test
add
add
sbb
insl
inc
add
fsubs
mov
add
cwtl
repnz
add
dec
repz
add
mov
add
adc
lret
rolb
mov
sbb
enter
insl
fucomi
hlt
add
or
mov
xor
mov
and
mov
nop
add
js
push
add
xor
addb
sbb
add
add
mov
insb
iret
rcll
jecxz
jle
add
stos
xchg
aas
push
aam
imull
inc
add
adc
rolb
iret
stos
dec
cwtl
insl
pop
ja
xchg
add
push
add
add
mov
sub
fistpll
popf
lcall
mov
dec
leave
addb
mov
dec
dec
pop
lcall
push
add
les
sub
xlat
cmpsl
lock
aam
jno
xchg
out
loop
push
xor
sbb
dec
shl
add
mov
jg
mov
sub
jnp
lds
aad
fistps
mov
dec
std
addb
lock
add
pop
mov
and
mov
push
ret
add
orl
cmp
bswap
addb
into
lock
mov
add
push
add
mov
fwait
xchg
data16
add
add
add
cli
int3
add
popf
int3
leave
ret
xchg
add
push
mov
or
fcompl
sub
stc
inc
add
mov
aam
testl
in
add
mov
aaa
xor
call
or
add
in
int
add
addb
imul
pusha
add
sub
add
add
mov
mov
mov
jmp
adc
loope
add
test
cmp
lahf
add
cmp
mov
mov
mov
in
add
xchg
inc
in
in
scas
mov
add
add
and
sbb
add
adc
loop
rcpps
add
test
icebp
sub
add
add
add
lods
sbb
inc
mov
adc
cli
adc
int
test
cmp
mov
mov
dec
mov
cmpl
mov
add
mov
cmp
mov
xor
cld
pop
popa
addb
add
mov
ret
je,pt
ds
add
add
mov
fadds
iret
sub
rolb
add
xchg
arpl
push
and
push
add
out
add
fmul
jg
out
add
push
push
data16
insb
testb
add
add
push
add
add
jne
imull
cs
push
add
add
clc
and
mov
jbe
push
add
mov
clc
push
shll
mov
add
fisubrl
xchg
cmpl
adc
push
and
sar
add
mov
push
or
mov
jnp
fldt
cmp
mov
cmp
repnz
add
xchg
arpl
or
lods
adc
clc
neg
mov
scas
sbb
adcl
add
lret
sub
mov
addb
fdivrp
pop
sub
insl
sbb
jne
call
fdivl
mov
daa
fmul
frstor
mov
mov
add
add
add
add
sbb
add
mov
pop
sahf
scas
scas
xor
lods
mov
icebp
cmp
mov
mov
sub
pop
lods
xchg
add
and
sbbl
jae
add
jecxz
decb
jmp
push
add
mov
sub
and
add
or
add
ljmp
add
shl
push
je
rolb
cmpsb
add
lods
ds
clc
leave
mov
fidivl
push
add
fists
lods
push
add
imul
xlat
test
out
or
mov
jecxz
sbb
mov
mov
add
xor
js
xchg
lahf
loopne
jne
fnstenv
outsl
xchg
insl
xor
in
enter
cmp
mov
pop
mov
mov
and
movsb
add
add
add
mov
sub
test
icebp
movb
add
dec
jb
cwtl
dec
adc
cmpsl
push
arpl
add
cld
jns
add
dec
and
ds
rolb
dec
fs
sbb
add
xor
enter
add
test
in
loop
dec
std
loop
rolb
mov
pop
dec
sbb
pop
stc
xor
add
inc
add
mov
sbb
pop
xchg
add
in
add
mov
mov
xchg
pop
push
add
rorl
inc
add
addb
lods
fcoms
inc
pop
out
xchg
xor
push
pop
mov
test
jns
add
xlat
pop
mov
std
add
pop
and
sub
add
add
pop
into
mov
jae
add
pop
imul
and
data16
add
decb
leave
aad
inc
lret
test
pop
xor
addb
add
cmp
mov
add
cs
fwait
xor
lcall
add
dec
cmpsb
add
adc
jge
jg
stos
movsb
add
add
jg
push
sbb
sbb
imul
call
bound
mov
dec
xor
aaa
pop
pop
push
add
add
or
add
addr16
int
and
add
sub
andl
add
lret
adc
push
in
inc
dec
push
add
add
stos
jbe
adc
aam
dec
cmpsl
testb
pop
xlat
mov
add
imul
call
pop
jmp
in
cmp
add
ljmp
daa
clc
loope
xor
call
mov
add
pusha
add
sbb
mov
movb
call
inc
add
adc
movb
add
pop
add
add
dec
mov
fwait
icebp
push
divl
int3
rolb
stos
dec
xchg
add
add
mov
jae
push
add
add
bound
mov
adc
movl
mov
dec
fistpll
add
pop
push
add
add
ljmp
or
add
add
fisttpl
pushf
jne
pop
int
add
enter
push
mov
js
pop
out
push
xor
pushf
cs
sbb
add
mov
bound
mov
push
jmp
mov
pop
mov
add
add
mov
jecxz
add
sbb
ljmp
jb
lahf
movsl
dec
filds
add
add
add
mov
mov
lret
mov
mov
inc
add
add
testb
rolb
pop
mov
push
add
sbb
test
mul
data16
add
in
stc
ret
rolb
jecxz
add
inc
add
add
dec
pop
stos
fiaddl
add
and
xchg
stos
mov
adc
sahf
loope
add
pop
scas
inc
lock
shll
idivl
les
cmp
xor
add
push
cmp
sbb
std
xchg
cmp
sbb
xchg
add
add
add
mov
or
add
xor
cmp
decl
in
addl
popa
into
lods
loope
repnz
push
add
add
fbld
xchg
xchg
aas
ret
mov
or
in
clc
jmp
jp
je
mov
aaa
cs
rolb
add
push
add
add
and
add
add
push
dec
insl
xchg
and
add
test
pop
addr16
sbb
xchg
jl
jns
add
mov
jg
inc
mov
add
add
xor
mov
mov
add
sub
out
repz
sti
leave
or
add
xorl
popl
pop
jge
ret
add
mov
aam
scas
sbb
add
add
add
cwtl
push
mov
xor
add
dec
and
mov
add
dec
rol
add
int3
pop
test
xchg
add
sahf
lret
inc
pop
cmp
push
add
rolb
lock
daa
fiaddl
add
add
sub
xchg
add
add
sbb
stc
bound
mov
add
add
ds
add
leave
push
add
add
add
aas
mov
or
add
jl
cmp
add
dec
xor
sub
dec
push
add
xchg
mov
es
bound
mov
pop
sbb
add
popa
inc
add
add
add
inc
loop
stos
hlt
add
scas
ljmp
add
sub
js
add
and
pop
fistpl
pop
inc
add
add
push
and
mov
add
mov
mov
pop
adc
jl
add
push
xchg
loope
jmp
xchg
daa
jmp
inc
data16
gs
addb
add
je
inc
add
sub
add
cmp
mov
cmp
out
mov
outsl
cmpsb
add
add
sar
pop
cmp
iret
arpl
push
repz
sub
add
test
add
push
add
fwait
push
add
cmp
add
inc
cmc
fwait
je
add
jecxz
loopne
cld
mov
add
adc
add
add
add
push
add
pop
addr16
insb
xchg
and
mov
and
add
leave
aaa
ja
jge
add
add
and
mov
add
inc
add
push
insb
sub
add
pop
add
sbb
add
add
push
add
or
push
lods
movb
xor
pop
add
cmp
mov
add
push
xchg
leave
xchg
add
add
add
mov
dec
mov
aas
sub
push
add
mov
jmp
add
rolb
clc
dec
imul
inc
add
jbe
push
add
out
les
inc
popf
sbb
add
pop
sub
stc
dec
sbb
pop
jl
add
cmp
mov
stos
sbb
mov
mov
add
outsl
dec
ficompl
int3
add
xchg
out
loope
sti
sti
lea
mov
add
add
dec
js
insl
pop
inc
add
fidivl
xchg
xor
ret
into
test
add
add
inc
add
add
add
pop
je
sub
xor
js
push
and
xchg
and
add
ret
xor
add
mov
add
cmp
cmp
add
xlat
into
lea
addb
js
add
mov
test
add
cmp
data16
and
push
sub
je
adc
jbe
sub
lods
fmul
aad
or
add
lods
sahf
sbb
jae
add
rep
scas
mov
inc
test
add
add
add
ret
aaa
cmp
outsb
or
stos
add
ja
dec
out
inc
pop
jae
push
outsl
dec
xchg
add
hlt
add
shrl
cmp
data16
add
cwtl
cmp
push
add
ljmp
mov
add
add
sbb
push
das
ret
add
sub
inc
cmp
add
jp
sbb
lock
mov
add
add
lea
hlt
add
sti
xchg
jae
icebp
movsb
add
add
add
jecxz
outsb
adc
add
and
mov
stc
loope
cli
jp
or
jge
mov
xor
mov
add
pop
mov
xchg
add
mov
lds
js
add
sbb
pop
add
xor
xchg
dec
sub
jl
iret
ds
xor
add
mov
or
add
test
add
subl
xchg
add
jl
pop
jb
mov
test
add
mov
sub
add
repz
jecxz
and
cmp
adc
and
xchg
add
pop
pop
pop
negl
mov
add
cltd
mov
out
mov
push
dec
arpl
int3
out
scas
daa
fisttpl
imull
loope
jnp
mov
adc
lcall
mov
xor
pmaxsw
cmp
push
sar
aad
rolb
mov
add
add
mov
add
xchg
cmc
movsl
cmpsb
add
push
sub
lods
ret
add
inc
add
dec
fadds
adc
push
or
fisttpl
mov
inc
add
cmp
in
push
in
xchg
movb
add
add
adc
inc
cmp
ret
push
jne
add
outsb
sbb
inc
add
add
add
cmc
mov
addb
mov
setg
adc
add
mov
add
add
pop
and
mov
add
testl
in
fsubl
add
je
pop
pop
fstps
inc
mov
sub
ja
add
add
and
add
pop
sbb
popa
push
add
pop
inc
add
cmpsl
aad
add
add
fsubrs
add
stc
add
repz
cmp
add
leave
std
lods
lcall
add
sarl
add
mov
add
add
mov
loop
bound
mov
mov
rolb
outsl
mov
add
push
add
lock
mov
add
inc
call
aam
inc
add
in
or
test
add
je
iret
jmp
and
mov
add
add
add
dec
es
xlat
jne
rolb
xchg
add
mov
aad
push
pop
add
ja
popf
fnsave
cwtl
cli
pop
repz
ja
add
add
imul
fcomps
xchg
sub
add
sbb
out
cmp
add
testb
cmp
out
add
xchg
add
rcll
add
sub
adc
inc
shll
mov
and
push
add
imul
add
pop
sbb
pushf
insl
in
and
adc
pop
cld
shll
dec
hlt
add
mov
jl
add
mov
jl
sahf
and
pusha
add
add
ljmp
jl
add
aad
push
out
inc
add
insl
add
imul
or
je
test
stos
loop
cmpsl
ret
adc
testb
push
popa
ret
add
bound
mov
push
add
ds
jmp
mov
push
add
add
add
cmpsb
add
add
pop
mov
add
inc
jmp
add
dec
inc
lods
repnz
pop
dec
push
add
add
mov
add
add
inc
add
inc
cmp
xor
sbb
add
lods
inc
icebp
fisubl
mov
rolb
es
adc
ret
sub
test
fiaddl
aaa
out
push
add
cmc
add
dec
mov
push
push
add
add
mov
add
cli
and
add
add
filds
xchg
scas
addb
sub
mov
xchg
lds
adc
pop
cmp
test
scas
sub
out
mov
add
add
add
push
add
aaa
cmpsb
add
mov
ret
rcll
ljmp
xchg
add
cltd
fcoms
add
jge
add
jp
cmp
or
inc
add
add
adc
insb
sahf
adc
fdivrs
add
in
sti
sub
mov
loop
lea
xor
add
xchg
je
sub
jl
jae
push
jno
pop
pcmpgtd
imul
add
stos
insb
lret
lret
stos
mov
add
mov
nop
add
add
sbb
push
data16
xchg
add
add
add
scas
pop
pop
in
pop
mov
jmp
add
mov
outsl
mov
cltd
test
inc
cli
adc
mov
mov
xor
popa
xlat
mov
pop
addb
data16
sarl
loopne
scas
dec
inc
out
cmp
pushl
add
lods
sbb
neg
mov
xchg
jno
add
jne
add
jmp
jnp
xchg
movsb
add
jnp
cmp
adc
dec
fwait
in
mov
mov
add
cmp
adc
pop
dec
daa
xor
add
add
inc
dec
inc
lods
jno
add
lahf
inc
in
in
xor
aas
pop
lahf
js
enter
inc
add
push
add
insl
lret
out
imul
mov
push
push
add
cmp
lret
pop
dec
in
fidivrl
inc
add
add
outsl
aaa
lods
mov
jecxz
inc
jno
gs
add
ja,pt
sub
push
add
add
push
pop
sub
add
add
repz
rolb
and
xchg
dec
int3
fnsave
jge
loopne
or
add
add
mov
jns
add
cs
mov
xchg
add
in
mov
loope
mov
push
add
add
push
add
add
mov
add
and
aas
addr16
add
jecxz
jb
popf
movb
dec
roll
fwait
adc
test
test
push
add
mov
inc
sub
cmp
scas
stc
jbe
je
sti
jno
pop
mov
outsl
add
mov
lds
pop
insl
imul
xor
test
cmp
add
add
xchg
add
ja
mov
push
pusha
add
jmp
fstps
push
add
dec
dec
imul
testb
or
ret
push
mov
sub
jb
jae
mov
add
cmpsb
add
icebp
repz
inc
inc
out
jno
jl
xor
rcll
addb
push
in
dec
xor
inc
sub
add
push
add
add
pop
dec
dec
mov
mov
add
xchg
call
push
mov
jmp
jne
push
add
fildll
add
add
add
and
mov
ljmp
test
cmc
cmc
shll
add
inc
add
add
fsubr
pushf
lret
aam
mov
add
mov
fs
xchg
cs
add
inc
add
testb
cmpsb
add
and
sub
inc
xchg
add
pusha
add
pop
movl
pop
jl
adc
cmp
adc
add
mov
bound
mov
jb
jl
sahf
mov
popa
push
add
insb
mov
dec
and
jae
inc
add
and
hlt
add
add
add
add
lods
and
mov
mov
pop
adc
pop
push
lahf
fsubrs
xor
addb
push
scas
add
add
rolb
mov
repz
pop
dec
jle
gs
add
sbb
fistpll
or
add
aam
popa
incl
or
inc
bound
mov
dec
rolb
add
int3
sbb
dec
lea
jg
ret
add
xlat
mov
jo
sahf
dec
push
int
xchg
cwtl
hlt
add
add
arpl
pop
cmc
dec
xor
inc
add
jmp
add
rolb
add
mov
addb
pop
pop
clc
push
stos
sbb
lds
add
xor
dec
add
repz
adc
xchg
add
add
ud0
add
add
add
mov
in
and
mov
pop
mov
cmp
xchg
icebp
sbb
aad
aam
xor
and
mov
lea
stos
pop
decl
shll
daa
mov
add
add
cmp
dec
jae
pusha
add
cmpsl
popl
lods
xchg
mov
or
pop
jae
add
jae
imul
cli
or
in
mov
sub
add
add
in
lods
pop
loope
cmp
mov
leave
shl
dec
sbb
rcll
ljmp
aad
cmp
add
add
adc
inc
cli
adc
pop
pusha
add
add
add
sub
mov
mov
jns
add
add
add
mov
or
pushf
fistpll
lods
aam
leave
lcall
add
xchg
lahf
sub
push
inc
dec
aad
jbe
jmp
aas
ljmp
loope
addb
inc
stc
lods
jecxz
add
fistpl
dec
or
add
add
nop
add
into
adc
ja
or
add
insl
jge
dec
sub
loopne
shl
mov
push
add
rolb
push
aam
sub
add
mov
sahf
test
add
mov
pop
add
mov
jns
mov
jge
add
cwtl
sbb
add
mov
or
dec
je
aad
inc
or
add
lock
test
sarl
jne
add
fisttpl
xchg
dec
lods
add
jnp
add
add
mov
cli
shll
pop
int
outsl
inc
add
xor
jae
cmpsl
mov
add
add
xchg
shll
loop,pn
xor
out
repz
add
mov
add
inc
sbb
sbb
addr16
aas
mov
addr16
mov
fildl
mov
loope
jp
push
add
cmp
fwait
into
xchg
add
add
lcall
jecxz
add
and
pop
push
add
roll
mov
int3
jecxz
add
divl
add
add
add
dec
adc
mov
add
mov
add
add
mov
jo
out
mov
mov
inc
add
dec
jecxz
add
std
mov
add
mov
add
mov
jne
ret
and
mov
mov
add
adc
scas
shl
jl
xchg
or
dec
testb
add
push
add
stos
enter
add
or
add
mov
add
add
sbb
add
mov
mov
add
add
arpl
add
mov
ret
ss
icebp
dec
lods
dec
aad
ss
mov
pop
test
add
push
xchg
add
inc
mov
add
jg
test
pop
pusha
add
int3
enter
mov
add
mov
mov
mov
insl
pop
imul
bound
mov
test
mov
xchg
add
push
into
xor
add
inc
add
add
mov
test
add
mov
push
lcall
das
mov
or
ret
xlat
lods
jns,pn
lahf
lahf
out
adc
add
addr16
jns
in
ret
add
and
mov
jne
ljmp
add
shll
sbb
add
jnp
add
add
xchg
std
or
add
fwait
and
add
mov
enter
test
sbb
cmp
xchg
ss
add
int
add
add
add
dec
xchg
cmp
test
add
dec
loope
add
data16
or
push
or
add
ret
movb
nop
add
mov
add
mov
inc
int
cmp
outsb
popf
jge,pn
and
pop
sbb
cmp
add
lods
pop
push
add
sub
xor
mov
shrl
les
int
out
adc
push
add
add
jge
inc
add
loop
sub
movhps
loop
and
xchg
add
js
je
outsb
icebp
xor
mov
daa
imul
mov
jmp
add
push
add
add
add
xchg
jns
movsb
add
mov
jnp
aad
add
cmp
add
ret
add
dec
inc
add
bound
mov
dec
adc
outsl
testb
lcall
add
pop
pushf
rolb
dec
fwait
pop
jb
aam
fsubrl
and
add
add
fcomp
add
mov
lods
pop
xchg
dec
sahf
mov
aaa
out
jbe
aaa
sub
ljmp
jno
inc
inc
and
aam
or
cmp
add
cmp
mov
hlt
add
scas
or
mov
add
add
clc
inc
add
adc
pop
insl
ljmp
add
pop
dec
adcl
aad
add
or
add
clc
pop
pop
add
rolb
add
add
pop
lret
leave
outsb
and
mov
mov
add
add
jge
add
add
pop
push
add
sarl
and
out
jmp
add
add
add
in
dec
cwtl
push
add
add
pop
or
addb
dec
loop
mov
add
xchg
mov
add
xchg
ds
imul
adc
add
xchg
add
push
add
movsbl
cmpsb
add
out
xchg
dec
inc
add
mov
and
mov
cs
sub
loopne
mov
add
mov
sub
repnz
mov
loope
add
pop
add
daa
rorl
jae
imul
xchg
aam
push
push
lods
mov
add
add
add
cmp
mov
and
test
xchg
testb
mov
mov
mov
testb
add
movsl
stos
outsl
gs
dec
int
les
cltd
mov
xchg
scas
repnz
add
cmpsl
aaa
inc
add
ja
add
mov
mov
cmp
in
add
add
cmp
or
add
add
and
enter
add
add
xor
mov
pusha
add
jnp
cwtl
pop
inc
add
add
add
add
push
mov
push
add
inc
xor
inc
add
je
fdivrs
inc
das
dec
inc
add
jbe
ljmp
scas
mov
test
push
add
addb
add
rolb
or
loope
add
add
mov
add
adc
add
mov
add
add
add
iret
xchg
dec
data16
cmp
add
add
push
add
cld
cmp
add
sbb
leave
cltd
sub
dec
inc
add
enter
add
mov
mov
jo
scas
push
add
push
add
mov
and
mov
push
push
push
add
xchg
add
add
movb
insb
loope
jb
push
mov
scas
jge
push
add
loopne
cmpl
lcall
insl
add
pop
jmp
jp
jmp
mov
jmp
push
testb
sbb
repz
add
and
xor
addl
scas
sbb
lods
popf
xchg
out
scas
mov
ret
aad
jne
loop
cmp
aaa
shll
push
jg
cwtl
iret
addb
add
cwtl
adc
cmp
add
add
xchg
icebp
sbb
push
pusha
add
sub
add
add
in
cmpsb
add
testb
add
xor
imul
cld
cmp
add
add
hlt
add
push
lret
sti
rcll
add
sbb
add
ret
and
cs
cld
push
add
dec
lods
outsl
jp
add
xor
jmp
test
add
stos
cld
outsb
add
sbb
add
ljmp
mov
pusha
add
adc
add
pop
jmp
add
out
cs
cli
pop
jo
addr16
add
xlat
push
add
mov
rcrl
dec
jle
add
je
pop
mov
xor
test
mov
loope
add
add
add
add
inc
xchg
in
mov
rolb
add
add
add
and
add
cld
mov
cli
add
mov
icebp
push
add
fcomps
add
pop
xor
aad
adc
stc
cld
cmp
scas
test
lret
mov
stos
and
add
cmp
dec
loope
rol
add
add
mov
sub
xchg
in
enter
mov
cmc
hlt
add
aad
add
xchg
add
stc
data16
inc
add
rolb
lock
decl
arpl
sub
in
push
popf
mov
sbb
add
mov
imul
add
insb
jnp
xchg
popf
les
sti
loopne
inc
add
lret
out
fisubl
jae
testl
add
divl
add
sub
add
rolb
or
add
push
add
add
add
add
mov
mov
fs
add
or
or
add
imul
jge
movsl
mov
add
add
pop
inc
lcall
repz
sub
inc
inc
testb
add
dec
fnstsw
aad
add
add
sbb
add
add
jecxz
add
add
jmp
mov
pop
rolb
testb
in
sub
mov
push
add
dec
jb
loopne
repz
and
mov
shr
gs
jecxz
fwait
addb
sub
fstpl
add
xchg
mov
push
add
jge
adc
mov
add
add
push
add
add
mov
test
sbb
add
jae
add
sbb
add
test
xchg
mov
pop
mov
mov
sub
xchg
add
add
add
push
add
mov
out
negl
lock
loopne
test
je
out
mov
addb
and
add
add
add
add
fdivl
cmp
ret
out
imul
movsl
mov
addr16
inc
add
push
add
imul
add
or
add
mov
sahf
mov
mov
je
test
lea
add
icebp
push
add
insl
lea
and
push
pushf
and
xchg
aaa
dec
ja
repz
add
insl
test
out
loopne
dec
jae
ret
cld
adc
ja
jle
push
pop
addb
jno
pop
dec
inc
pushl
add
aas
add
jmp
hlt
add
lods
insb
cwtl
js
movb
add
push
imul
into
add
movsb
add
add
xchg
add
dec
mov
push
add
and
mov
inc
add
cmp
add
add
add
inc
add
add
int3
pop
mov
lret
lcall
jne
add
add
aam
or
add
movb
leave
and
mov
adc
push
add
push
add
mov
add
jnp
add
pop
data16
aam
rolb
add
add
fmull
loopne
mov
mov
push
mov
lret
add
mov
or
add
add
jo
jns
add
stos
fwait
test
add
lock
push
add
add
jae
adc
mov
dec
push
sub
add
mov
or
int
add
add
movsl
xchg
mov
xor
movb
cmp
fsubrl
clc
decl
in
je
jb
add
mov
mov
lret
popf
les
fists
icebp
loop
cmp
mov
inc
add
add
add
add
pop
sbb
aaa
sti
emms
data16
add
mov
or
jo
ret
pusha
add
int
cmpl
add
sub
aam
and
add
lcall
mov
cmp
fistps
xchg
add
sbb
push
or
add
into
push
add
adc
adc
out
lods
test
xchg
inc
pop
mov
xor
rolb
sub
push
add
add
add
mov
dec
dec
movsb
add
inc
add
pop
les
xor
fs
dec
cmp
add
out
or
mov
sbb
test
sahf
pushf
bound
mov
jnp
add
cltd
mov
mov
addb
add
add
add
inc
mov
pushf
js
int
js
add
xor
push
lods
imul
mov
add
add
inc
add
insb
cmp
testb
mov
es
cltd
xchg
add
and
je
addb
rcll
ljmp
add
add
lahf
xorl
push
add
pop
jnp
ret
pusha
add
jp
aaa
dec
push
add
adc
shll
push
mov
pop
inc
add
add
popf
mov
xchg
add
mov
mov
cmp
shr
inc
add
stc
or
aad
rcrl
fildll
add
sub
stc
pop
jge
add
sbb
jb
rolb
int3
mov
addr16
dec
mov
lcall
das
mov
loop
push
add
clc
lret
outsl
outsl
inc
add
add
add
dec
fsubrl
mov
or
add
add
xchg
add
cmpsl
adc
pop
fdivl
add
jmp
add
shll
iret
cwtl
xchg
xchg
data16
jae
lock
inc
add
mov
add
add
add
fwait
insl
pop
dec
out
cmpsb
add
add
add
add
jle
mov
or
jno
pop
sbb
loopne
mov
add
inc
sub
hlt
add
add
add
repz
dec
mov
fadds
inc
or
ficoms
adc
mov
sahf
imul
and
mov
sbb
push
rolb
in
xor
add
fwait
dec
outsl
push
push
add
push
sub
add
pop
out
por
mov
push
test
repnz
leave
testb
mov
push
mov
add
sahf
movsl
xorl
ljmp
dec
add
xchg
xlat
or
std
shl
add
add
test
fnstsw
add
rolb
loope
out
pop
orl
add
add
add
cltd
mov
jb
xchg
add
cltd
jl
data16
or
jnp
xchg
fwait
or
push
in
and
sbb
popa
mov
cmpsl
decl
mov
add
adc
loope
add
jp
inc
dec
adc
mov
mov
adc
fadds
mov
add
mov
xchg
pop
add
add
jns
xlat
cs
insb
mov
jmp
add
add
add
scas
jmp
iret
mov
outsl
xor
jecxz
dec
js
jge
push
lret
mov
popf
or
les
mov
jbe
xchg
inc
leave
sar
dec
fdiv
add
loopne
mov
add
add
cmpsb
add
stc
ret
lret
mov
test
or
jge
pop
pop
repnz
or
mov
add
add
add
mov
and
push
jp
add
push
add
xchg
and
rolb
daa
and
mov
and
mov
dec
fistpl
cmp
jns
out
and
mov
add
add
add
push
dec
add
dec
mov
dec
fucomi
and
mov
jge
add
jno
add
fwait
mov
and
mov
add
sbb
mov
add
xchg
add
test
pop
cltd
xchg
xlat
and
mov
add
adc
and
and
jecxz
add
add
pop
mov
mov
pop
js
add
push
add
fwait
iret
cld
mov
mov
mov
in
add
add
add
bound
mov
mov
add
mov
lret
jb
and
adc
add
enter
aad
jns
cmpsl
pop
cli
mov
addr16
add
jl
push
lods
es
mov
into
xchg
add
rolb
pop
cmp
incb
mov
mov
add
add
lcall
cmp
orl
insb
cmc
ret
pop
mov
jae
add
popa
sub
add
jnp
push
mov
xor
add
mov
bndldx
adc
fisttpll
int
xlat
pop
xchg
add
add
cld
push
add
mov
adc
loopne
pop
add
cmpsb
add
repnz
add
rolb
je
pop
repz
gs
xchg
jae
add
add
fdivp
add
mov
cmpsb
add
add
roll
mov
cmpsb
add
rcrl
xor
inc
add
mov
aaa
aaa
and
lcall
pushf
imul
or
orl
shrl
ror
dec
pop
scas
addb
ret
add
inc
add
pushf
mov
ret
add
cmp
mov
add
sbb
or
popa
test
mov
add
lret
cld
pop
stc
xor
loop
adc
xor
in
scas
dec
das
pop
and
mov
add
pop
xor
fbstp
out
iret
jg
add
add
imull
add
pop
out
scas
jge
loope
inc
cmpsb
add
sbb
xchg
imul
add
scas
push
add
add
push
hlt
add
xor
mov
pop
xor
dec
push
add
add
mov
jge
add
push
lock
jb
jle
inc
add
icebp
jg
addb
dec
outsl
cwtl
push
add
ss
add
imul
pop
pop
inc
add
pusha
add
add
jno
clc
pop
lods
dec
add
add
dec
in
mov
xor
pop
movsb
add
add
add
add
add
stos
addb
lods
loope
je
scas
rcll
and
mov
jge
out
daa
lods
nop
add
loop
call
add
out
loope
rolb
or
jbe
and
add
repz
jo
pop
jbe
gs
gs
fwait
mov
push
add
popf
test
test
mov
data16
add
dec
dec
mov
add
out
jae
das
fbstp
add
add
test
add
add
add
jno
add
aas
arpl
add
sub
insl
inc
add
insl
pop
test
add
jl
add
and
jg
jl
add
add
movb
daa
pop
xchg
push
add
add
aam
push
xor
addb
push
add
xchg
and
mov
and
mov
sub
cmpsb
add
xchg
popf
insl
movsl
rcrl
jne
add
lret
cltd
dec
cmpsl
gs
add
xchg
fwait
enter
out
jg
add
mov
addr16
jle
mov
pop
rolb
add
add
add
add
lcall
scas
cmp
add
add
popf
bound
mov
movsb
add
fcompl
jbe
mov
out
lock
mov
add
movb
test
inc
or
jae
sbb
pusha
add
ds
leave
je
aad
icebp
mov
incb
int3
enter
clc
aas
or
add
or
testb
addb
out
mov
pop
jle
mov
push
and
add
stos
mov
lods
pop
enter
shrl
xchg
stc
add
add
add
out
cwtl
cmp
sti
fcoms
fdivr
inc
fdiv
loope
add
add
jnp
mov
sub
add
enter
push
add
cmp
add
jns
je
mov
push
add
fwait
in
test
testb
loopne
into
test
cmc
les
push
add
outsl
jle
fiaddl
and
ret
xchg
or
add
aad
pop
lods
xor
jne
xor
xchg
xchg
add
inc
push
cmp
cmp
add
stc
out
jno
movb
add
lahf
dec
cld
ds
sub
add
add
mov
int
dec
pop
ja
inc
cltd
jbe
cld
lahf
jmp
cli
cmc
adc
dec
rcrl
add
pop
or
add
mov
add
cmpsl
xchg
insb
loopne
movsb
add
add
add
dec
cwtl
jecxz
dec
je
movb
loope
sbb
add
jo
addb
mov
mov
stc
add
add
mov
bound
mov
add
mov
add
ljmp
pop
leave
pop
roll
add
push
mov
dec
adc
andps
daa
inc
mov
mov
mov
mov
pusha
add
inc
add
addl
mov
sbb
add
iret
pop
ret
push
jne
faddl
dec
repz
push
mov
mov
push
or
call
add
insb
call
push
add
pop
cmpsl
pop
enter
mov
leave
sub
xchg
lds
add
sub
cli
imul
cmpsb
add
push
add
or
push
add
sarl
dec
dec
xchg
add
push
test
add
lea
js
add
add
lea
add
data16
subps
push
dec
rorl
scas
in
movb
add
in
xchg
push
inc
add
sbb
fdivr
sub
add
loope
lea
cmpsb
add
adc
mov
add
add
aaa
rolb
stc
lods
in
hlt
add
mov
cmp
popf
pop
xor
jle
add
mov
daa
or
int3
or
cmpsl
and
push
add
mov
add
add
mov
add
mov
add
xchg
add
add
add
and
jle
add
dec
mov
pop
mov
add
mov
xchg
lods
jns
inc
add
add
jo
adc
aam
mov
and
add
js
mov
xor
int3
leave
cmpsb
add
cwtl
mov
jb
scas
and
bound
mov
pop
test
int3
lret
add
add
movb
add
add
iret
cltd
pop
enter
lds
add
notl
jl
lret
inc
das
xchg
mov
xor
cmpsb
add
adc
dec
xor
add
add
add
add
mov
inc
decb
enter
push
jnp
xchg
add
mov
call
add
out
add
jns
pop
xchg
cmp
popf
mov
xor
aad
inc
add
sti
sbb
push
sti
dec
ljmp
add
js
jp
sub
data16
add
add
add
inc
add
in
xchg
ja
scas
into
push
add
and
mov
mov
in
repnz
ret
push
add
cmpsl
fbstp
lahf
xor
add
xor
int3
adc
add
dec
sbb
js
add
add
int3
mov
stc
pushf
pop
aas
mov
jmp
ret
jae
sub
aas
and
mov
rol
jl
add
add
xor
subl
fs
add
push
sti
orl
loop
mov
sub
movb
in
lret
xor
rolb
adc
pushf
jp
sbb
add
or
pop
cs
mov
mov
stos
int3
loopne
cmp
cmp
jo
bound
mov
add
jno
cwtl
pop
pop
jnp
test
adc
lods
std
out
jge
add
mov
sti
dec
fcoml
cmp
repz
bound
mov
add
xchg
add
cmp
xchg
repnz
mov
mov
pop
rolb
add
pop
xor
pop
lret
push
add
outsl
int
push
add
and
or
add
add
or
xor
shl
addb
psllq
jge
jle
add
mov
inc
add
pushf
xchg
outsl
sbb
stc
scas
cmp
les
addb
add
add
stos
icebp
aad
aad
inc
push
leave
add
rolb
je
inc
mov
add
aaa
int3
sti
cmp
add
add
out
inc
or
jge
add
lahf
movsl
dec
loopne
pop
xor
call
add
push
add
add
cs
rorl
sahf
add
and
mov
jbe
fildl
out
xor
cmp
add
lret
mov
icebp
push
mov
add
aaa
mov
add
fdivs
mov
aaa
insl
cmp
icebp
lret
add
paddsw
sub
push
add
mov
iret
lods
addb
xchg
add
mov
in
and
into
rcrl
add
add
jle
add
add
push
add
mov
pop
out
add
loope
iret
and
mov
gs
lret
push
xchg
add
add
add
mov
mov
lret
add
dec
sti
add
sbb
jge
add
add
push
cmp
and
xchg
js
adc
sub
mov
add
mov
add
add
mov
add
add
dec
imul
repz
mov
inc
add
mov
add
add
add
rolb
adc
cmovne
loope
add
adc
or
cli
cli
inc
add
mov
mov
jnp
add
lods
repz
add
add
push
cmp
add
add
add
mov
sub
add
inc
add
popa
push
add
xor
ret
shll
jecxz
add
fiadds
mov
je
push
add
add
mov
add
add
mov
dec
cli
loopne
xchg
in
add
ror
pop
imul
stos
rolb
or
push
add
test
mov
cs
adc
cmp
add
add
add
rolb
mov
or
sub
fbstp
out
mov
outsb
addb
gs
sbb
scas
lds
mov
loopne
movsl
aaa
inc
add
xor
add
test
and
mov
xchg
add
add
je
addb
lahf
push
cmc
negl
rcll
add
stos
and
mov
push
push
sub
and
mov
jb
out
dec
xor
cmp
pop
push
jg
leave
add
loopne
rolb
lods
mov
stos
mov
add
in
add
add
mov
add
jge
add
mov
add
fildl
add
jne
aaa
rolb
scas
ja
in
add
adc
inc
add
mov
and
outsl
cmp
sbb
xchg
add
jmp
xor
imul
imull
inc
sub
add
movb
add
add
add
inc
add
add
cmpsl
xor
pop
jmp
jnp
mov
sbb
outsl
cld
test
add
add
pusha
add
add
add
ret
aas
fwait
or
add
pop
je
popa
repz
or
xlat
add
mov
push
add
add
aam
mov
add
sbb
mov
jge
add
add
test
add
mov
mov
add
add
add
jns
add
mov
ret
lods
adc
in
addl
add
add
adc
jns
mov
mov
or
add
add
add
xchg
mov
sub
jmp
int3
cli
enter
bound
mov
jb
call
fdivrl
add
sbb
and
push
add
add
sbb
add
pusha
add
pop
add
loopne
hlt
add
stos
arpl
mov
sub
inc
ret
int
pop
add
mov
loopne
fldcw
inc
or
add
adc
rolb
add
cmpsb
add
js
jnp
mov
or
add
rolb
hlt
add
adc
inc
add
xchg
scas
jl
jge
mov
cmp
idivl
pop
jns
xor
shll
push
add
mov
shr
xchg
add
repz
sti
sub
fadds
data16
add
mov
inc
add
fbld
and
mov
add
add
les
adc
and
mov
xlat
sbb
sarl
mov
dec
lret
xchg
out
fisubl
xor
lret
lds
invd
cmp
add
add
xor
or
int
lret
loop
and
mov
push
outsl
jmp
add
jmp
loopne
and
mov
test
add
mov
mov
adc
sub
add
shll
jle
loop
addb
pop
fsub
add
add
test
loop
movsb
add
or
sub
iret
and
mov
aaa
pop
sub
add
test
sub
add
mov
add
repz
nop
add
out
add
add
adc
pop
das
jge
aas
and
cltd
cmpsb
add
push
add
dec
test
in
aam
fmul
dec
mov
data16
jmp
sti
cwtl
scas
jnp
xor
cld
rcll
outsl
and
mov
add
int3
jle
add
jle
push
add
add
add
adc
cmc
pop
movb
testb
jl
testb
cmp
aas
lahf
and
add
xchg
xchg
dec
xchg
into
outsl
jp
jb
sub
test
lds
pop
mov
mov
adc
enter
mov
test
add
inc
fdivl
add
jne
add
xorl
jmp
jge
test
pop
aam
and
mov
dec
cs
push
int
inc
pop
inc
add
test
mov
ficompl
mov
movsb
add
leave
into
addb
mov
mov
repz
jae
mov
dec
popa
inc
add
add
mov
lret
enter
mov
and
mov
cmc
push
cli
push
icebp
frstor
add
xchg
fdivs
test
add
negl
add
push
add
inc
enter
mov
mov
dec
subl
pop
and
mov
and
cltd
and
xchg
mov
add
add
mov
inc
inc
adc
add
aam
mov
cwtl
dec
jecxz
fdivrl
cmp
mov
push
cmpsl
jecxz
adc
push
cli
dec
scas
mov
xchg
add
cmpsb
add
sbb
enter
inc
add
sbb
pop
imul
mov
push
pop
add
mov
xchg
xchg
add
cmpsl
jl
jbe
arpl
addb
pop
pop
sbb
jge
add
add
scas
pop
sub
subl
sub
add
add
sbb
insb
add
mov
pop
insl
ss
add
xor
add
push
iret
fadds
mov
insb
imul
mov
add
fisttps
mov
inc
cs
cwtl
mov
inc
or
or
add
pop
imul
nop
add
test
cmpsl
out
in
xchg
dec
xchg
add
add
addb
add
pusha
add
enter
sbb
add
fistps
sbb
add
mov
add
cmpsb
add
add
mov
mov
daa
mov
add
jns
add
lods
cmc
push
mov
call
ret
mov
add
cmc
cs
ds
xchg
add
jae
add
add
fwait
inc
pop
pop
push
lcall
inc
pop
add
mov
pushf
xchg
add
add
lret
xchg
in
or
popf
add
mov
and
pop
out
pusha
add
cs
stos
testb
sub
mov
push
add
sbb
and
inc
add
icebp
repnz
imul
cmp
and
jnp
sub
not
inc
add
roll
mov
rolb
jl
mov
outsb
sbb
jb
pop
lock
xchg
dec
fwait
leave
popf
sub
inc
stc
jge
les
or
or
out
xchg
les
sbb
bound
mov
stc
mov
inc
add
lock
scas
addb
add
data16
add
add
add
lcall
add
dec
inc
adc
dec
clc
sbb
add
jae
in
mov
add
sbb
inc
fsubrl
mov
and
iret
lods
mov
out
add
add
scas
push
xlat
rolb
scas
mov
xor
sub
or
jl
add
test
jmp
add
pop
adc
inc
add
jle
add
xchg
sbb
add
jnp
or
add
add
shll
sti
sub
add
rolb
add
jno
add
sbb
ret
jmp
add
movl
into
pop
xchg
add
outsb
xor
je
les
adc
xlat
mov
sbb
add
cmc
cmc
cmp
insb
and
pop
xchg
dec
cmp
cli
add
mov
lahf
addb
lahf
sub
mov
jnp
popf
js
ljmp
andl
push
mov
in
mov
dec
push
add
mov
mov
inc
shl
ljmp
mov
lods
mov
add
add
loop
or
imul
or
mov
add
jne
add
in
xchg
out
xchg
add
jp
dec
das
jmp
adc
add
add
push
sahf
jo
subl
fadd
mov
mov
cli
or
jmp
insb
shrl
mov
fcmove
mov
add
jle
add
add
add
add
jns
aad
add
fistpll
add
add
jg
in
sbb
pop
es
add
add
sub
mov
or
add
push
push
add
adc
adc
outsb
dec
xchg
add
es
jg
ljmp
add
xchg
add
testb
dec
jno
fists
sub
adc
das
jo
mov
mov
adc
add
xchg
jecxz
std
test
repnz
add
add
mov
add
das
scas
dec
fsts
mov
pop
and
mov
jb
mov
mov
add
cmp
and
cmp
add
add
add
lea
or
add
mov
call
mov
out
mov
jb
adc
add
pop
jecxz
jl
add
add
fimull
mov
inc
addr16
xor
pusha
add
sub
add
add
sub
adc
sbb
and
mov
xchg
lahf
popa
add
push
add
imul
icebp
xchg
add
add
add
push
add
add
xchg
aaa
loope
add
jg
add
rolb
add
xor
add
xor
popf
js
add
jnp
and
mov
into
test
repnz
cltd
shl
add
add
add
mov
aas
lret
scas
push
add
mov
xor
aad
rolb
cld
das
sahf
je
adc
push
mov
mov
inc
add
add
jge
add
add
sbb
sbb
lock
pop
in
push
adc
push
add
add
cmpsb
add
add
rolb
out
inc
fldenv
dec
out
or
add
xor
je
imul
sub
sbb
test
sub
cmpsl
pusha
add
add
in
jle
shll
call
loop
inc
mov
scas
push
push
or
lret
lea
xchg
add
add
xchg
fisttpl
mov
into
cmp
and
inc
aas
inc
add
adc
pop
in
rcl
ret
lahf
loopne
sub
adc
add
pop
in
std
ss
data16
adc
test
leave
jg
add
cli
pop
cmpsl
imull
add
and
jp
test
hlt
add
icebp
leave
out
add
jg
add
xor
sbbl
enter
add
pop
cs
adc
dec
adc
iret
addr16
int
and
mov
add
stos
ja
sbb
sti
clc
jge
add
dec
xchg
dec
xchg
xlat
mov
jno
iret
or
add
mov
add
out
mov
in
jge
sub
mov
pop
dec
imul
pop
dec
insb
outsl
pop
mov
and
call
mov
or
add
nop
add
jns
inc
add
mov
sub
xor
mov
dec
iret
add
mov
daa
js
add
adc
adc
push
add
push
mov
lcall
nopl
in
add
mov
add
imul
xor
movsl
pop
lret
imul
xor
scas
mov
add
pushf
jo
mov
and
lea
mov
pusha
add
dec
enter
das
xchg
inc
inc
add
fwait
sbb
sbb
add
add
add
add
lods
add
mov
cmp
lods
push
add
xchg
xchg
add
mov
add
xchg
cld
daa
js
pop
dec
mov
add
rolb
add
adc
outsb
rolb
inc
aas
cmpsb
add
jecxz
fdivrp
add
xor
dec
mov
dec
fsubr
push
add
call
inc
dec
cwtl
scas
mov
add
and
mov
add
pop
outsl
lea
add
fistpl
rolb
pop
rolb
ret
sbb
add
mov
loope
jge
add
push
xchg
add
loopne
fisubl
lea
add
out
add
sbb
add
data16
add
inc
add
add
add
or
add
jne
push
add
pop
xchg
inc
add
fstl
cmpsb
add
out
or
ljmp
jo
add
int
leave
pushf
leave
push
int
jle
mov
push
add
push
add
add
pop
or
aaa
mov
add
stc
bound
mov
add
aaa
sbb
xor
xor
das
sbb
imul
jp
in
xchg
jne
add
mov
add
jne
cmp
fucomip
ja
loope
mov
lahf
mov
adc
mov
add
xchg
hlt
add
mov
pop
test
into
andps
lea
mov
lret
xchg
lret
jecxz
add
cs
aas
addb
add
jb
mov
pop
int3
std
mov
push
add
add
pop
lret
mov
ljmp
add
in
jl
add
add
add
pop
push
out
mov
mov
cmp
test
popf
pop
dec
pop
scas
push
dec
pop
dec
push
or
add
push
add
cmp
addb
mov
add
aas
adc
out
cld
pop
push
add
jns
add
cltd
xchg
xchg
inc
add
jnp
in
inc
add
test
dec
pusha
add
insl
test
loope
jbe
cmc
popf
in
sbb
inc
add
add
int
dec
xlat
rolb
loop
xor
mov
mov
add
inc
add
and
out
add
rolb
xor
nop
add
mov
fwait
out
mov
fmull
sbb
add
popa
faddl
add
dec
push
add
push
add
push
add
add
ret
sub
xor
cmp
add
jge
jl
out
xchg
and
mov
das
notl
popa
mov
pop
cwtl
mov
fmul
mov
mov
in
mov
incb
mull
in
out
daa
sub
add
xor
mov
mov
add
add
dec
push
add
sub
jbe
xor
mov
push
and
call
add
lahf
stc
aaa
push
hlt
add
sub
pop
cltd
jmp
jns
out
in
and
scas
jmp
add
dec
or
sahf
inc
or
fdivrl
cwtl
xor
fidivrl
mov
fwait
mov
pop
xchg
add
mov
jge
add
fsubs
mov
iret
or
loop
xchg
movsb
add
or
inc
add
xchg
mov
sbb
aam
lret
add
cmp
add
inc
mov
mov
mov
add
add
sahf
int
hlt
add
pop
dec
loopne
jae
inc
push
pop
cld
sbb
xchg
add
add
push
add
into
mov
pop
js
in
mov
inc
add
les
hlt
add
insl
lods
add
add
inc
add
push
xor
adc
mov
in
lret
mov
mov
add
mov
pop
mov
push
add
add
mov
pop
rolb
clc
in
ja
cld
test
cld
sub
data16
push
add
inc
add
into
mov
inc
and
mov
daa
push
out
in
rolb
inc
cmp
add
dec
sub
jnp
add
add
mov
ja
and
sub
add
jmp
dec
xor
int
add
lcall
lds
add
add
xchg
add
flds
add
mov
add
add
loope
sub
push
and
dec
jge
inc
jns,pt
faddp
add
mov
dec
and
mov
lods
sbb
cmovle
add
add
add
pop
push
loopne
adc
add
ds
add
sbb
add
gs
add
lret
mov
push
add
addr16
mov
cs
add
mov
rcll
add
add
rorl
inc
cmp
pop
xor
add
add
mov
add
add
rolb
adc
loop
ss
cs
neg
in
out
or
aam
mov
add
xchg
mov
mov
xchg
pop
xor
push
clc
in
and
sbb
add
push
add
add
inc
add
mov
mov
mov
fbstp
adc
aad
push
mov
add
add
mov
mov
xchg
add
cmp
out
and
mov
test
mov
dec
nop
add
lahf
int3
sub
xchg
push
add
add
add
sub
add
push
scas
dec
or
movb
pushf
iret
enter
dec
data16
gs
roll
testb
dec
push
xchg
add
add
lret
addb
stos
and
mov
add
and
lea
inc
dec
daa
push
add
push
add
cwtl
cmp
cltd
js
add
add
pop
dec
inc
add
jmp
add
enter
xor
enter
data16
loope
ret
jns
add
xchg
enter
std
cmp
scas
jnp
mov
and
js
push
add
add
xchg
mov
testb
and
dec
test
inc
out
inc
add
pop
stos
and
or
add
push
add
fmul
ljmp
test
add
adc
mov
xchg
jns
and
mov
add
loope
cmp
ljmp
or
add
icebp
lds
ds
or
add
add
add
add
pop
stc
repz
addb
scas
test
add
and
cld
mov
je
inc
add
and
xchg
mov
xor
dec
adc
movsl
lahf
sub
data16
cli
jnp
cmp
mov
stos
frstor
add
pop
dec
inc
pop
jmp
sbb
mov
sub
jp
jp
add
outsl
icebp
dec
or
jge
test
mov
add
pop
stos
sahf
movsl
mov
mov
xchg
sahf
add
clc
cmp
out
mov
stos
pop
lds
add
ret
test
jns
out
fdivrs
in
add
pause
add
jle
add
xchg
dec
es
xor
jle
add
push
dec
adc
or
add
fidivl
add
mov
jns
repz
inc
add
add
cmp
rcrl
pusha
add
jg
pop
jg,pt
imul
sti
push
ja
cld
test
add
add
mov
mov
dec
sbb
fwait
daa
lds
roll
push
cmp
add
jge
jmp
add
push
out
sti
bound
mov
addr16
mov
mov
mov
decb
add
xor
in
cmp
add
or
add
xchg
popa
cltd
inc
testb
filds
push
scas
cmp
add
add
addb
add
popa
xchg
rcl
gs
scas
repz
es
fstpl
xchg
add
aaa
outsb
pushf
arpl
xor
xchg
adc
movsl
jmp
repz
mov
imul
and
mov
sub
jnp
pop
ds
add
out
jb
xchg
add
scas
mov
jge
inc
add
pop
movsl
repz
add
ret
pop
dec
xlat
cmc
lods
jo
jbe
aad
or
mov
mov
add
mov
dec
inc
les
fnstcw
add
add
add
add
add
sub
stc
lea
cmp
jmp
dec
xchg
xchg
pop
lods
mov
xchg
xchg
movsl
movsl
mov
jmp
push
mov
icebp
and
add
out
add
mov
xor
dec
jg
add
movsb
add
adc
add
xchg
add
add
gs
add
daa
pop
adc
rolb
jl
xchg
push
mov
jnp
push
and
clc
dec
cmp
xchg
sbb
imul
mov
jno
add
push
pop
test
add
xor
add
xchg
add
add
out
mov
testb
add
add
clc
mov
aam
jp
aam
mov
mov
add
add
mov
and
push
add
jmp
add
jg
add
nop
add
adc
adc
cmp
cltd
mov
mov
testb
cli
xchg
add
add
add
mov
mov
mov
cmc
sbb
loope
pop
pushf
iret
inc
xor
xchg
add
add
add
fcos
jnp
aad
clc
int
pop
and
dec
pop
lods
outsl
cmpsl
cmp
cmp
adc
fwait
and
imul
addr16
filds
xor
dec
lea
jb
inc
jmp
mov
add
cmp
add
aad
outsl
icebp
test
xor
add
cmovbe
rolb
mov
mov
adc
notl
add
cmp
addb
jno
or
mov
add
jns
popa
lea
int3
dec
adc
mov
add
cmp
jnp
rol
mov
add
out
inc
push
add
bound
mov
add
push
add
cmpsl
mov
int
stc
xchg
stos
aam
pop
and
mov
add
shl
std
cs
add
and
mov
inc
add
add
int3
pop
test
add
xor
add
mov
std
lahf
sbb
stos
lods
imul
xchg
fistpll
jne
jmp
and
inc
sahf
or
pop
xor
push
cmp
mov
push
lcall
add
out
enter
mov
add
popf
jp
out
testb
add
jae
add
inc
mov
add
add
movsb
add
enter
add
mov
cld
mov
jnp
ret
inc
out
dec
pop
pop
sub
xchg
rolb
aaa
pop
out
cmc
add
mov
add
rolb
sub
add
xchg
js
add
pop
mov
adc
pusha
add
push
das
dec
add
add
sub
add
mov
test
ljmp
add
lds
add
test
push
sub
adc
sub
pop
mov
add
mov
push
add
bound
mov
add
je
jns
and
jle
pop
mov
mov
mov
dec
jb
sub
add
add
fcmovbe
add
addb
add
add
add
aad
ret
addr16
mov
add
sbb
add
mov
out
rolb
add
jp,pn
loop
adc
push
je
mov
jge
outsb
push
loopne
aaa
dec
mov
cmp
add
or
add
cmp
sti
aam
xor
xlat
test
cmp
data16
aam
iret
lret
add
mov
mov
rcll
clc
inc
add
je
sub
icebp
movsb
add
add
mov
cmpsb
add
xor
rolb
pop
stos
cmp
lahf
in
mov
movb
pop
loope
add
add
loopne
push
inc
fsubrp
out
cmp
add
push
add
add
xchg
add
add
movsl
mov
cmp
add
mov
add
xchg
es
sbb
scas
push
pusha
add
dec
icebp
rolb
push
pop
fsubrp
iret
ja
inc
mov
ds
adc
jb
clc
dec
jg
add
mov
aam
xor
pop
xor
pop
push
repnz
push
sbb
mov
add
arpl
xor
add
testb
xchg
ljmp
mov
push
add
outsb
lret
outsl
outsl
stos
testb
add
repz
lahf
pop
jp
xor
mov
mov
lods
test
ret
dec
cmp
jecxz
stos
in
add
inc
add
add
stos
subl
xchg
add
leave
mov
add
xchg
xor
mov
ret
aas
or
cmp
add
pusha
add
push
add
stos
xor
mov
add
dec
std
mov
mov
add
mov
add
and
sub
outsl
das
les
sub
adc
mov
stc
sbb
mov
dec
test
and
mov
fs
mov
add
cmp
jecxz
lods
push
add
stos
fwait
add
ret
add
ficompl
jbe
wbinvd
or
add
pop
data16
push
jl
add
add
sbb
inc
add
mov
xlat
daa
push
add
add
int
jmp
add
inc
add
and
mov
dec
out
mov
mov
dec
lea
fldl
jg
fildl
mov
test
add
stos
mov
mov
push
sahf
in
call
add
rolb
ja
xor
jecxz
shll
add
xchg
add
add
mov
add
mov
push
cmc
testl
add
inc
or
add
js
and
outsl
pusha
add
movsb
add
add
add
mov
sete
aam
out
mov
test
fwait
imul
lds
add
mov
add
mov
add
les
lds
adc
clc
jge
popf
rolb
add
fimull
jns
add
add
nop
add
add
fistpl
int
add
fwait
jecxz
fistps
mov
movb
add
add
aaa
and
mov
lret
jle
popa
aad
sub
and
rorl
sbb
mov
and
mov
dec
add
pop
test
adc
jb
mov
add
fimuls
add
clc
jge
add
add
hlt
add
mov
movsl
jne
mov
aaa
inc
add
add
xor
xor
mov
add
ret
sbb
add
stc
add
fnsave
sahf
daa
or
jo
lret
rolb
xor
mov
xor
and
push
add
add
jg
add
add
add
data16
leave
sarl
add
push
add
aas
push
add
add
les
and
mov
pop
xchg
bound
mov
call
js
aad
and
mov
add
and
fiaddl
add
mov
out
jae
add
mov
mov
adc
adc
imul
adc
pop
jns
cli
pop
mov
lods
push
pop
inc
add
mov
mov
insl
jl
add
sub
mov
add
test
in
test
add
ud0
add
aas
cli
fsubs
add
add
and
dec
jae
fnstenv
add
pop
mov
aaa
js
add
ja
into
push
add
xchg
jp
mov
pushf
lret
cmpsl
outsb
lock
leave
sbb
add
mov
mov
add
cmp
add
mov
fdivrl
mov
cmpsl
mov
add
mov
add
stos
xchg
add
jmp
out
xor
add
or
adc
add
or
add
add
pop
push
add
loop
fidivrl
cli
lret
push
add
adc
into
pushf
and
dec
push
mov
inc
add
add
xchg
push
add
add
std
cmp
xor
jl
fistps
out
mov
pop
xor
insb
addb
and
mov
pop
add
into
jl
mov
add
add
jbe
sbb
push
add
ds
sbb
add
mov
xchg
les
xor
mov
pop
jle
out
cmp
jbe
dec
ss
sbb
add
jbe
sti
cmp
movb
add
add
add
xor
add
popf
jmp
add
push
nop
add
add
or
ret
mov
mov
pushf
jl
fildl
nop
add
pop
add
mov
push
add
add
mov
add
rorl
add
fs
jno
add
les
lret
icebp
inc
dec
push
add
ficompl
add
add
shr
rcrl
push
add
mov
mov
or
add
add
mov
push
addb
lret
pop
dec
sbb
dec
xor
enter
xchg
mov
lds
ficompl
add
add
fcmovne
cwtl
and
pushf
sub
jns
xchg
call
jo
into
mov
cmpsl
sub
add
add
enter
call
jge
mov
mov
mov
add
add
repz
add
add
mov
adc
or
jecxz
mov
loopne
adc
nop
add
rolb
loopne
js
ret
ja
sti
dec
sahf
mov
test
push
xor
jne
ffreep
add
je
div
add
ja
jbe
inc
add
pop
cld
in
sub
shrl
mov
xlat
ljmp
or
xor
test
adc
fsubr
push
push
std
push
xor
xor
insb
aam
addb
add
repnz
int
movsb
add
mov
sub
add
adc
jge
fwait
adc
cltd
out
add
rcrl
mov
jns
sahf
and
mov
or
add
cmp
outsb
test
stos
leave
rcl
add
fbld
mov
icebp
push
inc
add
cs
add
xor
xchg
inc
sub
mov
std
ficoms
add
add
out
cmp
jo
in
in
or
jecxz
out
add
add
add
jne
add
into
cltd
or
sahf
xor
fsubl
cmpsb
add
aam
xchg
add
lods
das
mov
mov
add
add
mov
add
mov
add
add
std
test
addb
push
outsb
aad
inc
pop
mov
pop
push
add
insb
jp
test
mov
mov
jo
add
dec
cmp
cld
mov
add
mov
pop
push
and
jle
xlat
jnp
add
add
xor
xchg
add
sbb
ja
mov
popf
js
add
imul
pushf
addl
mov
xor
popa
sbb
inc
js
imul
int
or
ret
dec
xor
dec
flds
xor
loope,pn
sti
test
add
mov
mov
sub
xlat
insl
iret
testb
sbb
add
xchg
add
pop
sahf
push
add
daa
inc
add
add
add
mov
fnstsw
test
mov
or
jno
add
sub
add
add
push
cmpsl
jl
int3
jge
cmp
add
add
xchg
jnp
sbb
dec
ds
das
stc
lcall
int3
pop
insl
lea
minps
sbb
pop
call
popa
data16
add
push
in
dec
mov
mov
or
mov
add
add
mov
add
push
add
add
push
add
sbb
jo
inc
add
add
jo
mov
mov
cmp
mov
push
stos
and
addb
mov
add
mov
add
add
add
in
push
add
mov
in
sti
popl
add
sub
mov
and
and
mov
sbb
fldl
mov
imul
adc
or
xchg
add
jl
mov
repnz
pop
sub
insb
leave
aad
add
add
out
jmp
add
rolb
push
add
mov
push
add
jmp
push
lret
mov
add
add
mov
pop
popa
lret
add
mov
add
add
mov
mov
stos
testl
mov
test
and
add
add
add
fists
add
decb
mov
repnz
jg
add
mov
les
pop
test
in
stos
hlt
add
mov
add
mov
cmpl
mov
cmp
and
mov
add
add
in
loopne
cmp
lcall
notl
jmp
pop
cltd
or
mov
add
mov
dec
and
movb
add
sub
add
icebp
add
add
add
and
jmp
and
mov
add
imul
add
cld
subl
push
add
add
out
mov
mov
mov
call
cmp
jle
or
cwtl
push
addr16
or
jae
repnz
mov
add
pop
and
add
dec
jle
add
adc
sub
add
lock
fsubr
xchg
add
mov
arpl
mov
in
jbe
dec
adc
and
jb
sahf
jle
jl
inc
movb
stc
and
jb
mov
out
push
dec
fwait
push
adc
rolb
stc
sbb
je
mov
or
lds
sub
add
int3
sbb
xor
xor
into
jne
sbb
jnp
dec
std
jp
xchg
add
in
gs
mov
dec
mov
mov
data16
das
mov
sbb
xchg
lods
inc
leave
rolb
mov
and
dec
adc
stos
inc
testb
adc
add
add
add
add
sub
sub
adc
push
add
loop
pop
mov
adc
add
inc
add
aad
pop
addb
ljmp
push
add
mov
jb
testb
fdivrl
movb
cltd
popa
pop
push
pop
add
mov
ljmp
sbb
test
stos
add
add
sbb
scas
icebp
scas
addb
fidivrs
adc
fcomps
xchg
add
adc
and
dec
fsts
add
push
add
xchg
jns
cmp
test
and
cmp
gs
dec
jl
xor
adc
add
pop
jge
xchg
add
fcoms
sarl
mov
paddusw
add
add
push
xchg
add
add
insl
lds
iret
xchg
add
daa
sbb
add
fstl
fadds
add
fwait
std
push
add
mov
mov
mov
mov
add
lods
push
add
in
xchg
jg
repz
and
pop
cwtl
clc
gs
jne
mov
cmp
inc
leave
cli
mov
adc
cmpsl
sbb
add
lods
aas
into
in
lds
outsl
lds
sub
je
testb
add
add
scas
mov
mov
stos
push
lds
add
notl
fs
aas
or
repnz
clc
popf
das
pop
or
push
add
push
xchg
add
cmpsl
sub
mov
add
mov
sub
xchg
jno
imul
aad
popf
std
lret
in
add
jg
or
jne
push
mov
add
repz
add
dec
push
add
fstp
push
mov
dec
cmc
sub
lods
push
and
orl
add
add
add
in
mov
sbb
add
add
fldcw
cmp
into
mov
icebp
lret
adc
add
add
dec
bound
mov
add
int3
mov
sti
lret
stos
push
add
xchg
fstl
aaa
test
incl
push
in
xchg
or
add
add
cmc
pop
stc
jns
in
das
mull
mov
or
add
sbbl
add
mov
add
inc
add
jle
mov
popa
pop
adc
outsl
mov
add
testb
add
mov
cmc
jnp
add
repnz
mov
test
stos
mov
pushf
pusha
add
push
xchg
inc
add
add
add
add
or
add
bound
mov
add
or
add
jp
add
dec
fisubs
add
fcmovnu
push
inc
add
outsb
in
mov
add
test
push
jnp
push
add
addb
call
cltd
mov
mov
add
add
dec
stos
ds
aam
push
add
repnz
int3
mov
lret
pop
xchg
pop
pusha
add
scas
sub
lock
cmc
jbe
fisubrs
shrd
sbb
pop
dec
sub
mov
addb
arpl
adc
jno
mov
push
cmp
push
add
cwtl
mov
adc
xor
les
loop
add
mov
adc
clc
xchg
sbb
mov
mov
add
add
mov
add
cmp
ror
in
add
adc
in
imul
in
pop
imul
ljmp
add
lods
dec
mov
in
cmp
test
and
xchg
add
movb
sub
int3
inc
add
add
add
movsl
call
pop
cli
imul
jle
add
dec
pusha
add
rolb
add
dec
mov
stos
xlat
jo
imull
lock
add
add
sub
lcall
repz
add
dec
bndstx
add
insl
sbbl
jo
xchg
jge
add
push
add
add
push
add
add
aas
mov
add
mov
int3
or
mov
pop
cmp
add
add
mov
je
bound
mov
add
adc
push
and
mov
mov
add
loop
push
add
stc
pop
pop
sbb
jbe
mov
inc
lock
adc
cwtl
add
add
js
sub
or
xchg
push
add
mov
inc
add
jg
enter
aaa
insl
inc
add
andl
adc
rolb
dec
dec
mov
xor
sbb
sbb
cmpsb
add
or
lds
mov
jne
maxps
mov
pop
adc
inc
add
add
and
pushf
mov
xor
mov
sbb
adc
inc
add
add
test
add
cld
lods
pop
rolb
or
in
movsl
or
mov
test
cld
cmp
add
pop
out
add
cmp
add
dec
xchg
lahf
sbb
mov
sbb
xchg
cmp
roll
add
inc
orl
test
insb
imul
ret
jb
sub
cmc
inc
add
jge
add
int
movsb
add
scas
cmp
sar
cs
add
lret
mov
mov
add
push
add
add
xlat
repz
add
add
mov
icebp
rolb
mov
icebp
testb
push
in
and
lret
daa
push
cwtl
adc
mov
fnstsw
mov
or
jmp
aaa
push
add
add
add
add
pop
xchg
add
push
add
inc
add
add
mov
negl
jp
push
add
les
adc
repnz
jns
jmp
add
dec
jns,pt
add
repz
mov
ret
cld
outsb
mov
cmpsl
lahf
push
mov
sti
and
or
arpl
and
and
adc
mov
add
mov
push
add
mov
add
icebp
xchg
add
push
inc
add
mov
jle
addb
add
add
add
and
mov
add
out
lret
testl
push
add
test
leave
movsb
add
out
cmpsb
add
xor
movsb
add
int
aam
pop
sahf
js
add
sub
cmp
xchg
jns
in
in
lock
add
add
jo
add
add
add
cmp
add
imul
xchg
add
add
add
add
add
rolb
repz
add
adc
lea
add
jmp
aaa
outsl
dec
add
icebp
inc
add
mov
pop
js
fucomi
and
aad
scas
mov
bound
mov
movsb
add
data16
push
cli
mov
add
mov
into
sbb
jp
rolb
cmp
push
imul
push
add
rolb
in
mov
popl
add
push
xchg
add
outsb
sbb
testb
add
mov
add
add
add
outsl
add
mov
or
add
sbb
dec
int
add
add
add
add
mov
add
or
lret
iret
or
mov
jnp
add
lds
add
scas
push
add
addb
add
cs
nop
add
add
sar
sub
idivl
test
cli
dec
pushl
in
cli
fucomi
in
xor
dec
idiv
add
mov
add
mov
xorl
aas
mov
clc
push
insl
xor
add
pop
stos
pop
xchg
add
ljmp
adc
sti
pop
jbe
xor
arpl
add
aas
mov
mov
xchg
add
mov
cmpsb
add
les
je
mov
pop
call
jg
sub
sbb
and
cmc
mov
xor
add
mov
dec
sbb
stos
mov
cmp
in
mov
add
add
ret
jb
add
add
and
imul
add
push
mov
dec
cmp
add
inc
je
xor
testb
add
dec
adc
dec
loope
jl
fcomps
xor
xor
xchg
push
add
push
add
imul
lret
lock
add
adc
add
out
mov
iret
es
and
add
mov
clc
or
add
mov
add
lds
sub
ds
xchg
mov
aam
xchg
cmp
loop
xlat
daa
mov
push
cmp
or
and
adc
cmp
loope
popf
jl
inc
add
hlt
add
sub
lods
push
mov
outsb
bound
mov
dec
jl
add
push
repnz
add
pop
push
add
cmpsl
mov
add
sarl
cld
dec
jmp
roll
mov
add
pop
in
sbb
add
dec
cmpsl
or
or
inc
out
mov
jno
outsb
sbb
add
add
sbb
addb
mov
mov
les
mov
mov
icebp
mov
in
xchg
add
jne
inc
add
push
add
je
hlt
add
dec
and
loopne
sbb
scas
and
push
roll
inc
mov
add
xor
push
inc
push
add
mov
jp
pop
loop
lret
xchg
add
xlat
xchg
add
push
add
popf
imul
push
add
loop
or
sub
loopne
inc
sbb
add
ret
inc
add
add
and
push
in
in
stc
outsb
dec
cltd
jo
cmp
nop
add
pushf
outsb
cmp
push
xor
add
std
jp
xor
xchg
add
add
add
add
lods
pop
lcall
dec
popf
xchg
add
add
add
sbb
add
push
add
addb
leave
ret
add
in
mov
shl
mov
ljmp
int
cmpsl
mov
and
add
lock
add
push
add
pop
xchg
lahf
xchg
push
test
cmp
ljmp
shrl
add
add
loope
jle
popf
push
pop
scas
xor
icebp
popf
mov
mov
add
add
shll
movsb
add
pop
fwait
imul
pop
enter
xchg
add
mov
add
aas
popf
decl
adc
int
add
in
add
add
cmpsb
add
repnz
outsb
xor
add
add
add
push
or
jne
xor
mov
add
xor
adc
mov
inc
add
loope
xor
ret
addb
xor
push
out
pop
cmpsl
push
lods
add
or
sub
mov
add
addb
adc
add
add
dec
arpl
add
add
add
mov
add
add
popl
add
jno
add
sbb
mov
inc
add
add
push
add
sbb
lds
and
addb
or
cmc
cld
stos
xchg
add
mov
fbstp
dec
int
jp
into
cmc
rolb
jbe
push
sub
adc
dec
stc
iret
aaa
add
cmp
nop
add
aad
out
fdivr
and
arpl
test
inc
pop
xor
mov
je
inc
add
ds
add
pop
ja
push
add
dec
xchg
add
add
int
das
pusha
add
fsubr
sub
push
inc
xor
add
outsb
fldl
jmp
loope
test
add
and
add
lcall
add
nop
add
add
cli
pop
out
xchg
jge
ljmp
add
mov
adc
add
xchg
add
add
add
outsb
mov
add
divl
fstps
cmp
add
stos
xchg
cmp
pop
and
mov
inc
add
adc
ljmp
add
inc
add
add
add
adc
add
scas
pop
xor
aad
add
add
adc
adc
push
mov
decl
hlt
add
cmpsb
add
rcrl
add
add
sti
setbe
scas
mov
cmpsb
add
add
mov
add
add
adc
out
imul
add
add
jle
adc
add
add
push
sub
pusha
add
leave
ja
lret
add
jp
add
mov
arpl
stc
xchg
add
ret
cmp
mov
add
imull
pop
xchg
mov
mov
aaa
mov
or
cld
popa
cmp
xchg
ret
pop
insb
push
cmp
mov
add
icebp
stc
mov
sbb
add
add
add
cld
add
cli
and
scas
mov
loope
add
add
add
rolb
add
insl
aad
test
and
mov
repnz
add
xor
add
adc
cld
xor
add
push
enter
sti
ficomps
lcall
rolb
fwait
mov
jnp
dec
addb
cmpl
stos
push
add
or
gs
into
movb
add
lods
and
mov
pop
aas
lods
pop
dec
out
mov
add
add
add
aas
lods
push
xor
mov
xchg
add
nop
add
test
pop
bound
mov
test
add
mov
or
push
mov
add
adc
addb
jae
add
shll
add
aad
lret
mov
jbe
pop
jmp
add
inc
add
add
mov
les
pop
std
push
inc
add
lock
ret
jo
dec
lods
repz
add
inc
add
mov
add
mov
add
add
sbb
pusha
add
add
int
sub
add
sahf
mov
add
push
add
add
fisttps
add
push
add
xchg
add
pop
jge
jecxz
add
xchg
das
and
pop
add
addr16
sub
inc
fmull
testb
add
sbb
out
xor
scas
and
psubsb
aam
add
iret
adc
push
mov
add
aaa
lret
idiv
das
jae
add
int
addb
movsb
add
inc
fwait
pop
pop
stos
fistpl
mov
add
out
mov
fs
xor
test
add
sbb
jp
add
ret
and
mov
pop
mov
shll
add
push
jne
or
daa
cmp
add
lods
mov
jo
jbe
push
adc
in
call
sahf
and
mov
push
sti
addb
add
adc
or
aaa
and
call
mov
and
mov
dec
je
and
add
xchg
adc
testb
sub
sbb
add
sub
bound
mov
loopne
adc
jno
add
mov
leave
cmc
add
mov
mov
add
cmp
cmp
pop
sbb
xlat
jno
and
mov
mov
add
cmp
mov
dec
jne
sub
xor
jge
call
in
popa
sbb
and
mov
dec
int
jb
sub
pop
xor
mov
enter
fiaddl
add
jno
add
mov
add
add
add
in
inc
add
add
add
jecxz
push
add
movsbl
push
shrl
fstpl
add
dec
pop
and
mov
add
add
add
inc
jle
or
data16
sbb
ss
add
pop
out
ret
lret
stos
int3
mov
jnp
and
jl
add
daa
adc
or
mov
mov
add
xchg
mov
add
add
pop
xlat
xchg
cmp
adc
aas
jbe
xchg
outsl
dec
mov
pop
add
mov
pop
adc
sbb
or
imul
add
push
add
inc
add
mov
add
fcoml
add
add
add
jecxz
ds
into
fdivrl
insl
and
xor
int3
add
add
jns
add
ficomps
push
bound
mov
add
dec
movb
shl
add
sub
adc
in
int
lods
fadd
xlat
daa
mov
data16
push
cltd
sub
ja
add
mov
and
add
add
add
add
add
dec
jnp
fisubrs
add
add
pop
dec
out
dec
imul
mov
fidivl
xlat
mov
adcl
jl
add
add
inc
add
cmp
outsl
je
pushf
add
out
dec
int3
jle
xchg
loope
mov
push
add
stos
cmp
add
mov
setne
mov
add
mov
js
push
add
jmp
rolb
and
add
out
add
add
pop
int
add
iret
push
mov
fimull
dec
mov
rcll
das
jnp
jb
adc
int3
int
pop
push
add
add
mov
add
pop
or
pop
ss
mov
pusha
add
mov
imul
xchg
mov
lfs
cmp
fwait
pop
sbb
in
mov
push
add
mov
add
dec
repnz
cwtl
mov
xor
rolb
xor
add
dec
xor
ds
pop
js
mov
lret
rolb
nop
add
mov
inc
add
inc
add
sbb
xchg
add
mov
add
add
dec
add
add
add
sbb
cmpsl
pop
pop
adc
add
add
in
rolb
int
sahf
inc
pop
jnp
mov
add
inc
add
mov
test
popa
xor
and
mov
jb
push
add
add
add
les
cmp
rcll
or
mov
sbb
jge
add
xchg
add
testl
add
mov
jle
mov
arpl
add
enter
arpl
mov
add
pop
sbb
fs
pop
mov
sub
mov
aas
mov
pushf
das
pop
mov
or
fists
fistpll
push
icebp
mov
add
add
pop
lock
pusha
add
add
dec
int3
add
jbe
out
adcl
mov
sub
mov
ret
cli
mov
mov
add
mov
add
dec
mov
adc
cmp
cwtl
sub
push
mov
add
mov
test
sub
mov
inc
out
lds
xchg
inc
lods
loopne
pop
cltd
inc
add
add
aam
xchg
add
mov
add
add
adc
add
insl
sub
std
lock
add
jns
dec
dec
out
jnp
dec
aas
pop
jae
add
sbb
mov
lods
jmp
pusha
add
leave
jbe
mov
mov
rolb
cmp
mov
cli
les
pop
xorl
add
lock
pop
mov
jge
add
repz
dec
inc
add
add
add
add
add
and
mov
in
xchg
xchg
mov
std
out
cmp
add
add
add
imul
gs
mov
into
cmp
adc
mov
add
xor
add
dec
xor
aaa
mov
xchg
test
cmc
push
push
std
jp
push
add
add
sub
or
add
add
aaa
lahf
jns
add
mov
mov
cli
push
add
sub
add
cmc
ds
add
mov
add
stc
data16
mov
inc
push
add
mov
shll
add
sahf
or
add
ret
add
bound
mov
frstor
add
add
or
add
add
lahf
rolb
mov
int
add
in
shl
jae
arpl
sub
mov
add
xchg
add
mov
add
add
cmp
and
mov
add
pop
sub
adc
inc
add
add
mul
sub
enter
nop
add
jl
mov
add
xchg
add
add
inc
add
ja
inc
add
addb
add
in
add
add
out
add
pushf
in
inc
add
movsb
add
gs
add
mov
sahf
pop
push
add
loope
add
mov
jb
out
stos
outsb
fcompl
push
add
add
mov
test
rolb
xor
and
mov
add
movsb
add
add
add
add
and
jecxz
add
xrelease
or
inc
add
mov
dec
stc
fdivrl
decl
outsb
testb
xchg
add
inc
dec
lahf
cmp
mov
add
aad
add
stc
xchg
or
out
es
ret
jo
popf
jne
add
std
or
mov
add
cmp
mov
cld
sub
fstpt
cli
test
hlt
add
add
popa
pop
add
add
add
pop
or
add
scas
je,pn
inc
xchg
jp
cwtl
sti
shll
lods
fimuls
fdivr
add
add
jmp
add
inc
je
test
inc
testb
add
add
sub
ds
add
lret
jle
xchg
dec
mov
jle
aaa
movsl
cmp
sbb
mov
mov
scas
add
mov
mov
add
xchg
add
add
inc
lret
mov
dec
xor
mov
pop
repz
add
add
add
ret
mov
fldt
add
add
add
scas
inc
dec
fwait
fwait
imul
mov
lret
out
scas
imul
jmp
out
rolb
das
sti
into
mov
cwtl
enter
out
insb
mov
adc
repnz
add
insl
add
add
xlat
and
mov
inc
add
sub
add
shll
popa
jecxz
cmpsb
add
rcr
and
fsubrl
mov
add
add
jle
mov
test
mov
fmul
jae
fcoml
sub
repnz
imul
add
or
mov
dec
cltd
ja
stc
adc
jl
in
movsb
add
cmp
add
jge
jae
std
add
push
xor
pushf
fwait
test
xchg
adc
imul
sbb
mov
adc
mov
mov
mov
mov
mov
mov
add
mov
pop
mov
dec
out
add
fsubrs
dec
xor
imul
fists
mov
fcomps
mov
add
fnstcw
dec
sbb
add
adc
pop
xor
add
cmc
inc
add
cld
and
mov
leave
mov
add
inc
add
cmp
add
cmp
bound
mov
add
add
jnp
add
ljmp
add
loopne
adc
or
add
mov
sbb
add
mov
pop
enter
pop
nop
add
sbb
ja
add
