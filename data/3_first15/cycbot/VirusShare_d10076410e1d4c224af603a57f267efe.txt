aad
aad
xlat
add
popf
outsl
cmp
cmpsl
lcall
add
jle
jecxz
sub
inc
add
daa
pop
dec
and
add
xor
jle
add
add
add
or
cmp
add
leave
dec
lock
add
and
mov
or
xchg
dec
int
cltd
push
pop
int3
mov
movb
add
add
mov
xchg
add
js
mov
add
add
cli
adc
add
popf
in
aam
lock
jae
fucomp
push
add
push
xchg
ret
add
xchg
enter
lods
stos
movsl
and
mov
lret
sub
aam
popa
xchg
in
push
xchg
add
movb
xchg
add
add
push
movb
add
pop
cli
cwtl
cmp
xor
in
dec
stc
test
dec
mov
pop
mov
mov
mov
mov
cs
or
add
push
add
add
cmp
jge
add
jmp
addb
or
stos
shl
add
ds
add
inc
add
stos
int3
mov
add
stos
pop
mov
jp
cmpsb
add
add
mov
add
mov
and
adc
push
add
mov
add
xchg
mov
int3
dec
addb
jae
push
arpl
mov
inc
add
inc
add
adc
jo
lods
pushf
and
add
sahf
xchg
ljmp
and
add
mov
lea
jb
mov
pop
add
add
dec
orl
sbb
add
push
add
mov
shl
add
add
sub
add
jne
jmp
gs
aad
test
xchg
lahf
pop
int
out
ret
add
add
test
and
imul
add
mov
arpl
icebp
push
add
nop
add
cwtl
ret
adc
in
loop
push
cltd
jno
add
shll
add
adc
data16
cmp
push
sub
xor
lock
cs
inc
add
jmp
sbb
in
mov
push
aad
mov
add
xchg
jo
mov
mov
lret
cmp
mov
mov
enter
fwait
outsb
sti
pushf
xor
pop
in
popa
pop
call
cmc
setge
jecxz
fwait
inc
add
and
adc
add
cmp
aas
xchg
rolb
cmp
or
add
cmp
dec
push
xchg
add
add
hlt
add
fcomp
mov
mov
add
add
mov
scas
push
add
nop
add
dec
ret
loope
jge
add
mov
adc
jno
or
loop
cmp
add
movsb
add
rcll
int3
add
mov
movb
ds
add
movsb
add
xor
imul
add
xor
out
cmp
xchg
cld
out
loop
cmp
push
add
insb
sahf
arpl
mov
add
mov
push
rolb
dec
jns
je
insl
icebp
jns
mov
and
mov
movsb
add
data16
mov
popa
mov
jno
fistl
mov
pop
xor
sbb
or
aam
mov
add
repz
add
pop
mov
add
decb
or
add
pop
and
mov
sbb
dec
cmp
add
mov
jp
cmp
inc
out
fidivl
dec
dec
inc
rolb
out
sahf
in
insb
push
addr16
xor
or
sbb
and
stos
ss
and
dec
lahf
in
stos
call
scas
sub
jnp
add
mov
mov
out
ljmp
add
add
aaa
ljmp
mov
out
rolb
test
mov
shll
or
add
comiss
xchg
add
test
xchg
add
mov
cmp
lret
dec
int
out
cmc
out
sub
inc
add
pop
cmpsb
add
stos
loopne
and
mov
call
add
cmpsl
push
add
dec
nop
add
mov
sbb
push
adc
lods
inc
add
pop
imul
add
add
push
sahf
dec
loopne
mov
pop
mov
add
sub
add
fsubl
mov
cmc
ret
popf
fidivrs
add
add
add
sbb
mov
inc
fwait
int3
dec
pop
xor
lcall
add
out
add
icebp
mov
lret
in
add
add
inc
add
add
mov
add
add
add
sub
cmpsl
scas
int3
jl
mov
lcall
push
add
scas
cmpsb
add
addb
mov
add
add
mov
sub
add
icebp
push
inc
add
jo
cmpsb
add
add
out
inc
mov
insb
addb
add
add
mov
add
insb
pop
xchg
add
stc
shll
sbb
je
imul
lret
mov
pop
and
jl
add
mov
add
add
mov
inc
mov
divl
and
out
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
lea
push
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
rolb
add
inc
mov
add
in
cmp
insb
addl
jb
xor
or
and
dec
cmp
pop
sbb
sti
jge
lcall
add
mov
add
add
xor
jb
dec
fdiv
add
xor
add
jne
add
fisttpll
xlat
and
add
xchg
jno
add
add
add
xchg
add
xchg
ret
mov
and
pop
cmp
jns
cs
sub
add
add
mov
loop
in
repz
rolb
adc
mov
int
add
xchg
add
pop
push
add
mov
data16
shrl
imul
iret
movb
add
add
fnstcw
in
add
inc
mov
fstl
sub
xchg
test
loope
xor
bsr
ds
add
mov
xlat
popf
pusha
add
add
add
das
and
mov
sahf
lahf
js
cltd
cltd
dec
mov
pop
call
push
add
mov
imul
xlat
cli
insl
mov
pop
mov
inc
add
fsubs
dec
cs
add
add
sub
push
add
add
lods
xor
mov
xchg
daa
push
add
outsb
inc
fwait
movsb
add
aad
aam
add
add
mov
add
pop
lods
mov
mov
xor
add
fstpl
das
stos
outsl
and
mov
stos
inc
add
add
sbb
xor
add
add
add
add
add
loopne
add
mov
xchg
add
dec
or
add
pop
in
dec
inc
add
jmp
movsl
push
add
sbb
xor
mov
add
inc
leave
rolb
hlt
add
add
cld
mov
outsb
or
movb
mov
les
sahf
out
and
push
jmp
adc
push
push
mov
in
add
add
xlat
adc
outsb
jge
outsl
repnz
out
sbb
lahf
data16
jecxz
xorl
add
add
lock
sub
adc
imul
xor
mov
movb
inc
add
jb
rolb
mov
repz
sahf
ficomps
jg
push
add
out
sub
add
lcall
rolb
mov
pop
and
mov
into
mov
gs
dec
mov
mov
dec
jo
pop
popa
addb
lock
push
add
popf
mov
gs
dec
or
mov
mov
pushf
xchg
pushf
add
push
add
out
shr
je
fmul
popf
daa
scas
and
cmp
xor
mov
mov
pop
dec
and
add
int3
sahf
in
or
and
mov
add
mov
out
gs
add
xor
cmp
add
xchg
add
imul
std
ror
add
aam
scas
mov
fdivrl
sbb
je
xlat
and
mov
adc
sti
push
push
add
add
add
cmp
xor
cmp
test
in
cwtl
or
push
lock
jns
add
mov
faddl
add
cmpsl
push
test
jle
jbe
outsb
adc
enter
lcall
sbb
push
add
sub
add
addr16
bound
mov
pop
insb
cmp
mov
into
pop
or
add
mov
ret
mov
leave
cmp
test
dec
in
add
mov
std
insb
inc
out
push
xor
xchg
outsb
repz
out
xchg
add
lock
add
test
test
xchg
cmp
jb
mov
rorl
xchg
add
mov
add
xlat
kmovb
shrl
dec
pop
inc
add
or
xchg
add
imul
int3
imul
lea
addl
repz
adc
xchg
add
add
enter
add
ret
jle
add
movb
add
add
fwait
xchg
cltd
push
add
out
cmp
cmpsb
add
add
add
add
add
out
enter
iret
push
add
mov
lret
push
add
mov
add
mov
ffree
add
int
add
jg
add
add
add
adc
mov
push
add
mov
add
aad
ret
add
xor
jo
aam
mov
add
cmc
pop
mov
das
push
add
mov
xchg
les
cmp
mov
stos
imul
xor
rolb
idivl
shll
sbb
iret
add
data16
add
pop
or
out
iret
dec
sbb
cmp
inc
add
add
add
stos
dec
loop
les
je
dec
pop
pushf
les
push
add
jge
movsb
add
mov
mov
ss
dec
adc
inc
add
mov
adc
jecxz
rolb
mov
lods
in
rolb
in
mov
add
cmc
call
mov
sbb
addb
add
mov
or
loope
add
psubb
add
sbb
addb
leave
jo
add
xchg
andl
dec
pop
mov
in
add
add
mov
mov
ja
add
cmp
xchg
inc
outsb
andl
dec
aaa
and
mov
lods
mov
jne
add
sbb
jb
add
add
aas
pusha
add
add
add
pop
inc
or
add
push
add
and
mov
and
cli
ds
lcall
add
and
add
add
aas
les
out
cld
cmpsl
add
pop
js
aad
sbb
out
jmp
data16
add
jno
int3
mov
jne
add
add
or
add
hlt
add
cmp
add
inc
add
inc
stc
push
mov
fisttpl
dec
mov
mov
add
add
xchg
mov
mov
inc
add
loopne
cmp
ret
and
mov
add
mov
add
add
mov
add
fisubs
add
pop
dec
push
stos
shrl
mov
fstps
sbb
pop
scas
mov
fisttpl
pop
cli
hlt
add
roll
mov
xlat
clc
jecxz
and
mov
ret
and
mov
mov
loope
movsb
add
jmp
add
into
fists
add
cmc
test
in
insl
cmpsl
push
imul
inc
mov
sub
mov
imul
int
push
add
cld
sub
jno
sub
add
or
jmp
lods
push
popf
loop
ds
sub
add
add
popa
stos
addb
movb
mov
scas
xor
sbb
jbe
push
jne
cld
push
mov
outsl
lods
insl
cld
scas
fstpt
jb
inc
or
xor
and
pop
icebp
pop
pop
mov
in
lcall
and
mov
xchg
mov
dec
push
add
enter
add
mov
pop
mov
cmp
shll
sub
scas
jp
add
mov
cmp
ret
add
add
and
pop
pop
or
push
add
dec
pop
sbb
mov
xchg
add
roll
aam
das
push
filds
inc
add
ds
ret
popa
mov
sub
mov
and
out
add
add
rolb
pop
inc
add
movsb
add
cs
add
add
mov
loope
add
js
int
add
call
sub
fnstcw
dec
std
in
repz
faddl
add
mov
pop
and
pop
sbb
add
popa
mov
loope
iret
inc
sbb
add
loope
jmp
movb
dec
adc
push
add
mov
jl
push
add
pop
jecxz
add
add
mov
and
in
fstps
add
pop
mov
mov
inc
std
pop
fstpl
and
fwait
addb
add
push
add
inc
add
add
add
xchg
lea
pop
pop
and
leave
pop
in
dec
mov
call
dec
in
ds
add
in
cmp
sub
sti
mov
clc
inc
cltd
cld
insl
jns
add
cs
pop
lret
loopne
lret
add
clc
enter
lret
lds
jnp
mov
jns
rolb
bound
mov
push
movsl
sub
divl
dec
sti
cld
pop
addr16
out
sub
xchg
add
push
popa
rolb
test
mov
in
ret
lock
sbb
cltd
shll
add
and
mov
dec
push
jle
mov
add
testb
push
add
idiv
pop
mov
sbb
mov
shll
add
mov
in
and
mov
push
addb
rcll
add
rcll
push
leave
in
mov
xchg
add
das
pushl
inc
add
push
add
mov
add
addr16
bound
mov
add
fnstcw
nop
add
add
jl
add
fbld
add
or
mov
int
push
add
ret
pop
xor
jle
mov
add
addr16
add
add
add
aam
bound
mov
ljmp
push
ret
fnsave
dec
pushf
inc
add
cld
test
adc
cmp
bound
mov
add
xlat
xor
aad
jl
add
movsl
scas
pusha
add
or
add
dec
rolb
or
add
fstpl
add
data16
push
add
cwtl
mov
add
pop
out
lds
jne
xor
pop
data16
and
add
add
lock
jle
rolb
pop
and
sbb
add
outsl
xor
cmp
add
imul
pusha
add
or
add
adc
or
adc
pop
mov
mov
test
loopne
and
xchg
add
push
mov
mov
aaa
lds
add
add
add
push
std
inc
add
adc
xchg
add
icebp
testb
sarl
cmp
sarl
add
add
add
add
mov
push
add
aam
push
cmp
xor
push
add
inc
add
mov
add
inc
jle
ja
out
gs
pop
gs
and
xchg
add
out
loope
in
sub
add
push
mov
add
xor
add
add
add
jno
add
xchg
push
mov
add
add
or
add
fwait
aas
mov
pslld
and
rcll
out
xchg
add
pop
pop
hlt
add
add
mov
mov
add
add
pop
pop
xor
add
sbb
out
add
add
add
add
inc
add
in
or
xchg
xchg
jb
js
add
and
push
mov
scas
in
lahf
test
add
add
add
add
outsl
daa
loop
scas
outsb
cld
cmp
sub
into
aas
lods
jns
stos
dec
add
jb
lret
ret
add
dec
addb
sti
out
add
add
fucomp
vcvtsd2si
push
insl
rolb
adc
mov
and
mov
inc
add
cmpsb
add
rolb
inc
stc
or
outsl
in
xlat
bound
mov
in
popa
and
add
fsub
negl
add
mov
cltd
mov
int
rcll
xchg
repz
mov
xchg
add
stc
jne
cwtl
cli
arpl
add
adc
or
add
inc
sub
pop
lcall
test
sbb
add
bound
mov
lret
pop
lods
fisttpll
inc
mov
ds
add
call
pusha
add
inc
add
lock
cmp
addb
add
scas
xor
add
ret
xor
xor
out
ror
stos
ds
andl
pop
sahf
add
rolb
les
pop
jmp
add
into
fistpl
add
nop
add
add
add
mov
call
inc
add
rcrl
shll
cli
mov
add
add
sub
mov
dec
popl
sub
lahf
jle
int
add
add
and
mov
mov
jmp
add
loopne
call
push
lret
jnp
test
mov
sbb
pop
lods
int
add
mov
fnsave
add
cmp
mov
push
add
test
rcll
ret
out
loopne
into
add
movsb
add
or
inc
jl
mov
inc
add
cli
mov
push
lods
inc
insb
push
add
add
out
xchg
push
add
sbb
add
push
add
xor
lret
insl
dec
xor
xor
outsb
add
mov
pop
jp
fstl
add
mov
pop
testb
add
dec
cmp
push
stos
cld
add
add
mov
sub
inc
pop
mul
repz
sub
movb
cmp
aas
and
jle
add
add
inc
sub
sub
pop
addl
add
add
lahf
xor
add
add
add
sahf
out
pusha
add
pushf
out
imul
popf
or
add
data16
fxch
daa
nop
xor
xchg
add
add
test
ret
aad
int
add
add
fistl
add
add
mov
movsb
add
add
fldcw
ffree
add
or
testb
loop
lods
loope
jb
aas
or
hlt
add
and
mov
add
add
mov
add
push
int
add
mov
sub
fistpl
pop
stc
sub
adc
leave
add
or
insb
pop
lods
call
add
push
add
aam
psubsw
daa
lret
add
cmp
fmuls
mov
rolb
std
repz
add
inc
add
push
stos
loope
add
sub
or
int
dec
add
add
jl
add
jb
lock
test
dec
and
movsb
add
or
add
sub
add
cld
fstpt
vmwrite
add
xchg
add
add
fsub
sub
cmpsl
lods
inc
pop
movb
add
daa
das
daa
into
inc
cli
or
and
mov
mov
insl
sbb
add
out
adc
jae
and
add
test
adc
rorl
pop
popf
sti
iret
mov
xlat
mull
add
in
sub
mov
ja
sbb
rolb
cmp
jge
mov
jns
or
dec
pop
push
lcall
add
add
aad
push
sti
fidivrs
add
int3
pop
icebp
inc
xlat
popa
add
mov
outsl
filds
add
sub
add
xchg
add
xor
jge
sti
mov
test
addb
dec
jle
xchg
fcoms
add
pop
pop
push
add
mov
lods
adc
data16
push
and
mov
sbb
jbe
jp
insb
loop
mov
outsl
add
add
add
mov
stc
ret
push
add
add
sub
add
mov
add
push
add
mov
stos
mov
out
cmpsl
pop
add
mov
add
cmp
mov
jmp
ljmp
xchg
mov
fldcw
adc
and
mov
sbbl
jp
fsub
fsubrl
aaa
mov
lret
ja
add
add
icebp
leave
iret
repz
mov
add
sub
add
add
or
add
and
push
add
xchg
ja
sbb
xor
add
pop
lret
test
lcall
pop
nop
add
xor
test
add
add
mov
push
add
add
add
add
xchg
imul
std
xor
sti
mov
pusha
add
aaa
fsts
xor
xor
add
sbb
iret
orl
ret
mov
mov
mov
lahf
arpl
add
and
mov
ljmp
add
mov
jg
add
pop
nop
fxch
nop
add
mov
jbe
xor
adc
add
mov
add
mov
add
add
lea
add
stos
or
sbb
cmpsb
add
addr16
out
cmpsb
add
xor
leave
cld
dec
imul
add
dec
clc
xor
cmpsl
aad
xor
repnz
xlat
push
add
out
ja
xchg
add
std
inc
add
push
add
stos
nop
add
into
dec
sbb
mov
outsb
pusha
add
add
inc
add
add
add
rcl
rcl
adc
data16
mov
pop
xchg
add
or
add
fiaddl
mov
dec
push
add
add
test
add
push
add
pushf
test
add
add
add
add
mov
xchg
outsl
mov
mov
mov
dec
pop
or
push
call
std
mov
or
orl
add
pop
jae
fwait
mov
in
addb
add
mov
mov
aam
dec
xor
jae
xor
dec
jns
push
jg
push
add
dec
testb
hlt
add
add
mov
inc
testl
add
add
bound
mov
mov
push
add
sub
xchg
scas
addr16
pop
nop
add
test
jne
add
out
stos
fisttpl
nop
add
add
add
mov
add
hlt
add
cmpsb
add
add
fisubl
pop
sti
lcall
std
inc
add
xor
mov
mov
xchg
add
cmp
add
xchg
add
cltd
pop
mov
add
cltd
imul
outsb
int
add
jbe
jno
mov
cmp
dec
and
cmp
add
shrl
sbb
sbb
add
adc
lret
lea
add
cmp
push
into
pop
push
loop
decl
lds
iret
xchg
inc
sbb
adc
pop
sete
xor
mov
pop
sub
imull
xor
adc
or
xchg
push
cmp
ret
mov
sub
inc
add
mov
mov
leave
inc
xlat
rolb
std
aaa
mov
test
sub
fwait
leave
sarl
add
add
add
add
clc
sub
add
mov
pop
add
or
mov
pop
cmp
add
ficoml
add
stos
cmc
adc
lock
add
add
adc
or
jb
jbe
scas
jge
add
add
inc
add
push
mov
ja
pop
xchg
add
rolb
mov
or
fwait
ja
jge
add
mov
out
int3
dec
test
pop
xor
xchg
leave
rorl
add
decb
cltd
icebp
outsb
jae
inc
cmp
xor
xchg
std
in
push
mov
add
arpl
add
xchg
arpl
inc
int
imul
jo
aam
push
jb
loop
inc
add
cmpsb
add
sub
cmp
ja
push
jbe
dec
int3
xor
xchg
pop
sub
fistl
ds
sbb
add
push
pop
adc
sub
mov
add
mov
mov
pop
add
mov
add
xor
mov
add
add
cmp
add
xor
pop
addb
jnp
inc
cld
lret
add
jp
pop
mov
inc
add
jns
push
add
cmp
add
add
mov
fwait
sbb
mov
lahf
rolb
cmp
add
add
add
xlat
mov
xchg
ret
and
mov
push
and
rcrl
add
mov
jo
pop
repnz
test
xor
insb
and
add
sbb
and
lahf
lcall
mov
and
jl
xor
pop
and
ffreep
insb
mov
or
lret
mov
pop
jl
inc
add
dec
push
add
inc
push
fnstenv
addb
push
add
sbb
pop
xlat
lret
add
mov
fnsave
xchg
add
add
add
push
add
push
add
cs
pop
out
push
or
in
mov
shld
add
ja
insl
dec
cmp
add
sbb
aam
fsub
or
mov
pushf
std
xor
push
add
push
add
add
add
add
add
add
test
add
or
inc
pop
xchg
add
add
insl
pop
inc
movsb
add
test
movsl
pushf
inc
add
lods
in
dec
les
fs
addb
rolb
lea
mov
adc
push
add
add
ret
fildl
adc
ds
sti
enter
add
pop
stos
add
add
add
gs
pop
pop
mov
add
mov
cwtl
cmpsl
loop
mov
add
add
add
pop
inc
add
add
test
add
push
add
jle
adc
add
ljmp
inc
add
add
mov
rolb
adc
pop
mov
add
ljmp
add
adc
inc
add
hlt
add
hlt
add
lret
rcll
cmc
xor
arpl
add
dec
jae
push
in
mov
popf
xchg
cmp
shll
add
repz
mov
les
nop
add
adc
popf
dec
cltd
push
add
arpl
jmp
rolb
fucom
scas
fcmovu
add
stos
loope
data16
into
xchg
je
push
add
xchg
sub
enter
or
add
add
add
sub
lcall
test
test
pop
lds
movsb
add
jne
out
jmp
jnp
mov
lea
cmp
sub
sti
or
rolb
cmp
add
add
add
add
and
jmp
cltd
sbb
add
sbb
add
mov
bound
mov
int
pop
rolb
or
dec
xor
add
mov
movsb
add
rolb
push
adc
mov
add
subl
mov
add
mov
dec
push
add
add
test
scas
sahf
repz
jp
outsl
out
ljmp
add
jge
xor
aad
add
add
add
add
dec
pushf
add
add
nop
add
push
cwtl
rcr
xor
sti
mov
lods
arpl
sub
add
aam
ja
xchg
xor
cmp
addb
add
add
xor
mov
in
and
nop
add
add
push
add
push
add
jmp
adc
movsl
xor
lods
add
jl
ret
popf
mov
dec
xor
sahf
xchg
add
jbe
sub
mov
scas
ret
add
xchg
lds
insb
and
add
or
add
inc
add
adc
bound
mov
add
testb
add
dec
add
sti
or
add
loop
movsl
xchg
in
inc
add
xchg
inc
clc
vcvtsd2ss
les
fsubrl
or
addb
jns
jl
add
into
jnp
lea
dec
dec
cli
jae
add
cs
add
add
add
lret
or
sqrtps
xchg
add
jg
fcmovne
aas
jge
adc
jg
add
mov
sbb
add
add
inc
add
popf
pop
mov
addb
add
int3
lds
add
add
add
add
xor
mov
push
add
jge
inc
add
add
test
pusha
add
arpl
xchg
in
xor
add
jno
inc
add
lock
add
fwait
mov
xchg
es
add
add
xor
mov
jg
add
cmp
cmp
data16
jle
stos
pusha
add
rolb
stos
aaa
out
push
mov
add
cs
lahf
icebp
sbb
das
pushf
cld
xor
cltd
push
add
sahf
xchg
add
add
mov
add
fsubrl
movb
sbb
add
repz
pop
loopne
jle
incl
add
insl
mov
rorl
cwtl
jne
pop
hlt
add
int
dec
dec
lods
mov
mov
test
sbb
pop
das
aaa
mov
pop
outsb
jle
add
sbb
lods
cltd
cltd
aam
inc
xor
fmul
popf
cmc
or
shrl
out
iret
inc
add
aam
sbb
or
stc
test
scas
jl
add
test
cmp
cwtl
push
xor
testb
pop
mov
jge
add
hlt
add
sub
add
add
add
test
add
repz
mov
repz
lahf
lret
add
mov
pop
inc
add
add
mov
cltd
cmp
mov
mov
cmpl
filds
sub
mov
and
mov
fimuls
add
mov
add
add
add
mov
ret
out
popa
data16
sbb
jle,pt
jb
test
add
mov
add
bound
mov
add
pop
mov
dec
stos
jnp
push
pop
int3
mov
jmp
xchg
add
cmp
add
add
vsqrtsd
push
add
rcll
jnp
and
rolb
in
stos
fs
adc
add
adc
pop
fucompp
arpl
add
rolb
xchg
insb
mov
pusha
add
xchg
add
testb
add
mov
subl
adc
mov
mov
add
mov
mov
mov
inc
add
add
popl
add
jbe
and
aaa
ljmp
test
push
adc
jl
imul
add
cwtl
inc
sbb
in
and
sub
adc
and
imul
pusha
add
sti
out
add
mov
jbe
dec
xor
cmp
clc
cmp
dec
cmpsb
add
scas
dec
pop
jp
xchg
add
mov
mov
add
std
gs
and
push
cmp
out
rolb
jge
sub
cwtl
loop
add
mov
push
add
add
jg
dec
xchg
add
xor
inc
add
xchg
add
mov
lds
in
dec
enter
adc
js
mov
jae
cltd
sti
dec
pop
std
addb
adc
add
add
jge
stos
test
add
sbb
inc
add
fwait
icebp
inc
sti
dec
decb
pushf
mov
add
ret
xchg
add
fbld
clc
lret
add
mov
movb
pop
popa
stos
mov
cld
jecxz
add
jge
aas
mov
das
cli
lods
pop
xor
fimull
add
jb
pop
xchg
add
sub
shll
popa
add
mov
ja
mov
call
jae
insl
xor
cmp
jo
movb
jne
add
pop
testl
add
insl
mov
sub
dec
adc
add
add
xor
add
cmp
mov
mov
and
into
add
cmp
sub
dec
lock
js
dec
jns
add
inc
add
jae
add
jmp
mov
test
data16
add
dec
xchg
push
add
sbb
xchg
add
add
fwait
inc
add
lods
js
add
mov
in
mov
out
add
add
jecxz
add
mov
pop
add
add
mov
clc
xchg
mov
add
inc
mov
lcall
add
mov
mov
sahf
out
pusha
add
lea
dec
addr16
mov
mov
frndint
stc
and
into
fisubrs
out
addb
add
mov
fisubrl
mov
icebp
mov
add
or
push
add
add
out
fcoms
add
mov
pop
dec
pop
sti
lret
jge
add
dec
imul
test
add
sub
add
pop
lret
rcrl
ds
add
add
pop
pushf
add
add
lods
xchg
push
add
push
add
push
add
mov
ljmp
or
xchg
add
cmc
sub
jb
cmp
int3
lahf
setne
add
lret
lds
push
push
add
test
dec
push
add
and
mov
movsl
sub
aas
pop
sbb
push
add
sbb
mov
xor
push
movsb
add
dec
add
mov
out
jl
fistl
mov
imul
enter
jp
jge
jns
pop
test
add
xchg
sti
js
add
and
mov
sbb
insl
inc
add
mov
add
loop
inc
mov
add
jmp
add
lea
sbb
cmp
add
cmp
fsubrs
cwtl
mov
les
dec
rolb
mov
adc
mov
mov
cmp
mov
add
addb
cmc
add
scas
ljmp
sbb
mov
add
pop
lahf
mov
out
or
jo
ret
cmpsl
mov
add
mov
xor
add
pop
mov
add
shrl
add
add
cs
mov
add
dec
fs
xchg
add
imul
push
add
add
rcll
inc
add
lock
mov
add
shll
fchs
add
or
adc
add
push
cmp
in
out
jmp
call
add
adc
inc
sub
add
mov
fidivs
mov
add
add
mov
pusha
add
incl
cmpsb
add
sbb
addr16
aam
aas
mov
add
add
movb
mov
ds
push
push
add
mov
add
xchg
or
add
jns
and
bound
mov
jns
add
add
jns
adc
add
mov
dec
adc
arpl
inc
add
mov
add
pop
add
sti
xchg
xor
add
test
add
sub
and
add
and
xchg
pop
push
xchg
adc
sti
push
jbe
enter
add
stc
faddl
mov
insb
mov
or
hlt
add
mov
jp
incl
lds
insl
push
add
mov
mov
rolb
and
mov
add
insb
cs
add
movsb
add
add
push
sbb
dec
enter
add
insl
pop
sarl
push
pop
fimuls
add
add
add
add
fwait
stos
and
add
mov
add
cwtl
mov
add
add
add
dec
mov
cmpsl
cmpsl
add
repnz
aaa
push
inc
das
lret
xor
fwait
cmp
add
add
add
mov
js
mov
mov
cmp
add
push
xchg
dec
sbb
imul
push
xchg
jbe
addb
xor
or
push
das
jecxz
add
testb
scas
push
mov
inc
add
add
mov
xchg
add
pop
mov
enter
idivl
dec
sub
outsb
jne
xor
stos
fnstenv
pop
xchg
xchg
add
mov
add
xchg
das
pop
iret
call
sbb
loop
xlat
xor
pop
pop
and
mov
ret
add
fwait
push
imul
mov
sbb
sbb
jmp
outsb
jne
enter
fcoms
gs
cld
rorl
mov
pop
mov
sbb
push
add
outsl
cmp
push
mov
jp
add
or
testb
add
aas
pop
and
mov
arpl
add
pop
loopne
inc
fstpt
cmp
loopne
orl
jns
stos
fsubrl
pop
lods
and
jb
clc
test
cld
push
adc
push
push
add
insb
out
inc
imul
lahf
sahf
imul
or
jnp
xor
das
ds
inc
addb
add
pusha
add
inc
add
add
add
xchg
add
push
add
out
add
mov
cmp
movsl
dec
fistpl
or
fsubrl
xchg
testb
bound
mov
push
add
in
lret
mov
adc
pop
sbb
add
sub
movsb
add
add
gs
fwait
shl
in
cmp
xor
add
add
pavgw
inc
pusha
add
add
movsb
add
sbb
sbbl
add
add
inc
add
nop
add
pop
fcoms
add
add
mov
add
add
test
addb
dec
jne
out
decb
mov
inc
add
adc
mov
add
mov
and
jecxz
add
pop
sahf
push
add
cltd
push
and
mov
into
fidivs
lahf
sub
cltd
hlt
add
jae
mov
mov
add
dec
pop
push
add
inc
in
addb
sbb
add
add
push
mov
testb
inc
add
lret
inc
add
xchg
add
xchg
xor
jge
add
add
cmp
outsb
xchg
add
xchg
inc
outsb
in
jo
and
bound
mov
xchg
add
add
add
add
rolb
sub
dec
inc
add
add
push
add
pop
insl
push
pop
add
mov
jb
add
mov
mov
add
adc
add
push
add
dec
add
or
out
sbb
sub
or
add
mov
cmp
add
add
add
js
mov
pop
enter
scas
test
insl
dec
add
dec
ret
outsb
mov
mov
rcl
add
add
mov
sub
add
adc
xor
sbb
xchg
add
rolb
cld
cmp
inc
add
xor
add
add
xchg
sbb
dec
sub
hlt
add
pop
mov
int3
ret
lret
inc
lock
sub
aaa
lds
add
xchg
add
imul
add
mov
jb
imul
arpl
push
jnp
add
sbb
andl
imul
iret
xchg
add
fisubs
outsl
inc
rolb
shll
mov
stc
jle
add
cmp
xchg
add
add
nop
add
xor
push
add
mov
jne
xchg
mov
add
add
adc
nop
add
add
cmp
dec
jnp
popa
or
sbb
push
add
addr16
int3
jo
jbe
and
sub
add
rolb
lcall
and
add
cmp
add
add
mov
jp
cmp
add
mov
add
mov
push
add
sub
mov
pop
lea
mov
adc
adc
mov
and
and
mov
push
add
push
add
mov
pop
out
cltd
add
mov
add
add
push
add
push
add
mov
inc
pop
loopne
aaa
ja
mov
jns
sbb
mov
cld
jge
in
loopne
mov
add
add
stos
push
and
and
fisttpll
add
push
add
add
shll
movd
add
adc
dec
fcom
add
enter
add
cld
jmp
rcll
rolb
loopne
inc
daa
sbb
jns
mov
inc
add
add
add
add
add
add
xrstors
mov
add
add
clc
add
jg
lahf
aad
xchg
lret
jb
cmp
mov
insl
and
pusha
add
push
add
mov
sub
jb
call
cmp
mov
jbe
pop
push
mov
mov
daa
fmuls
add
lcall
sub
add
and
mov
cmpsb
add
add
fiaddl
xchg
add
jne
jbe
icebp
or
outsl
lea
lods
and
out
sub
add
mov
add
xchg
cmp
add
je
rolb
adc
or
xchg
in
lcall
sub
lret
sbb
scas
jns
add
das
add
mov
cmc
or
push
add
mov
xchg
jmp
insb
cmpsl
jno
cmpsb
add
inc
add
xor
mov
rcll
js
add
cmp
pop
jo
push
add
pushf
rcrl
add
mov
add
xchg
insb
inc
add
out
dec
arpl
out
pop
pop
and
out
xchg
std
fmuls
bound
mov
and
mov
inc
jae
add
add
sbb
arpl
add
loop
addl
adc
jnp
fistpl
arpl
mov
loopne
pop
jecxz
ss
add
dec
or
cs
cmpsl
xchg
add
add
add
int
add
repz
lret
mov
inc
push
add
xchg
add
stos
dec
nop
add
cltd
sub
add
sbb
rolb
dec
and
mov
rolb
jne
lret
nop
add
outsb
mov
in
push
or
add
loope
inc
add
add
push
xchg
js
mov
add
mov
icebp
stos
pop
add
mov
add
or
add
sbb
add
ljmp
dec
dec
ds
iret
in
dec
mov
imul
insl
xor
mov
add
push
ret
data16
ficomps
adc
or
add
lret
or
add
jecxz
push
fimuls
add
add
add
imul
sbb
add
push
add
in
les
cmp
add
mov
mov
mov
add
add
je
out
or
add
cmp
sbb
mov
adc
add
loope
rolb
mov
int3
xor
push
add
aam
xchg
add
add
sub
and
inc
add
or
pop
int3
repnz
and
mov
xchg
add
movb
xchg
add
mov
flds
inc
or
add
mov
jp
xchg
add
mov
add
ljmp
ror
lea
add
add
stos
or
imul
and
mov
add
cmp
or
fstpl
add
outsb
cmp
adc
ja
outsb
add
mov
pop
outsl
insl
fwait
pop
icebp
cmc
xchg
mov
add
add
xlat
fisubrl
add
dec
in
jb
inc
xor
pop
nop
add
push
add
add
mov
mov
add
add
data16
add
or
inc
add
adc
xchg
push
push
ljmp
adc
add
mov
in
cld
aam
leave
and
mov
add
add
jle
sub
mov
cmc
testb
pop
out
add
xchg
mov
push
mov
cld
jp
cmp
pop
sub
add
mov
sti
xchg
add
sub
mov
pop
pop
pop
js
add
push
pop
sub
icebp
add
add
mov
add
sahf
addb
push
jmp
add
inc
pusha
add
in
js
pop
arpl
sbb
add
dec
inc
add
add
xchg
in
xor
into
outsl
cmp
jmp
add
cmpsb
add
pop
mov
and
dec
jo
cmp
mov
mov
add
add
jae
mov
add
add
xor
xor
testb
add
mov
add
cmp
test
lahf
out
outsb
jb
jbe
daa
cmp
jmp
imul
xor
add
test
mov
js
add
and
arpl
add
cli
add
mov
cmpsl
and
in
out
int
xchg
add
add
sub
ficompl
push
add
push
add
stc
sub
push
add
push
movb
and
xchg
add
mov
loopne
cmpsl
out
out
stc
jns
add
jns
sahf
push
dec
mov
jb
movb
jbe
push
add
push
les
sub
dec
aam
pop
xchg
mov
lock
push
add
call
add
add
add
add
test
mov
cmp
jnp
add
outsl
jmp
push
add
mov
and
mov
add
jb
rolb
leave
mov
push
add
xlat
and
cli
mov
inc
add
add
add
add
mov
mov
add
add
add
sub
add
sub
inc
mov
add
insb
std
adc
add
jg
add
add
ds
xlat
movb
ds
add
add
popa
ljmp
jecxz
sub
mov
add
mov
fsub
add
sbb
aaa
sbb
outsb
inc
jg
add
movsb
add
add
adc
jnp
xor
in
lods
cmpsl
mov
add
lods
pop
aaa
in
movsb
add
add
add
mov
call
xchg
xor
mov
loope
inc
test
xor
lods
popa
mov
scas
pop
sub
sahf
mov
push
add
dec
dec
stos
stos
insb
jnp
and
mov
mov
sbb
mov
jle
mov
out
sub
add
addr16
jbe
xor
add
add
outsb
xor
add
les
decb
sbb
add
leave
icebp
adc
xchg
push
enter
cmp
bound
mov
lock
add
dec
add
mov
mov
xor
xchg
add
mov
sub
add
xchg
add
mov
add
or
enter
test
mov
pop
mov
test
in
sub
mov
ret
ds
add
iret
jp
stc
mov
dec
rolb
dec
add
rcrl
add
mov
lahf
cli
jnp
in
jne
and
mov
inc
jae
jle
add
ret
cmpsl
mov
push
add
fwait
nop
add
push
add
adc
add
out
xlat
mov
repnz
les
jl
js
dec
push
add
jno
mov
cmpsl
lock
out
dec
ds
jecxz
xchg
inc
add
add
add
jo
cltd
mov
jp
cmp
clc
sub
push
push
add
pop
rolb
fisttpl
add
add
std
mov
mov
xchg
dec
rolb
xor
aas
push
add
add
add
add
push
add
cmp
stos
inc
add
add
xchg
add
mov
inc
add
add
lret
addb
gs
int
cs
pop
add
cwtl
push
inc
add
add
add
pushf
mov
std
or
roll
add
sbb
push
add
iret
ja
outsb
cmc
xorps
add
mov
lahf
jae
jl
mov
icebp
mov
add
inc
mov
pusha
add
mov
stos
cmpsb
add
out
add
daa
mov
pop
je
xchg
inc
scas
add
pushf
movb
add
loopne
aaa
je
cs
xor
pop
insl
cmpsb
add
and
and
in
addb
jle
jno
sahf
jo
addr16
fwait
push
add
sbb
sti
pop
fisttpl
inc
add
push
add
add
gs
inc
rolb
daa
dec
add
mov
add
xor
dec
in
sarl
es
inc
xchg
pop
dec
loop
push
jno
add
pop
jl
xchg
adc
push
cli
aad
mov
addr16
hlt
add
hlt
add
add
add
pushf
test
and
mov
rcl
add
pop
sub
pop
jne
cmp
inc
add
outsl
es
sub
add
mov
fistps
test
in
dec
pop
sbb
xchg
and
push
xor
pop
pushf
pop
repnz
add
add
testb
sbb
inc
push
add
inc
add
add
movb
sti
int3
adc
or
xor
add
xor
scas
push
scas
xor
popl
add
add
repnz
add
xlat
pop
or
shll
in
data16
dec
mov
or
xchg
pusha
add
sbb
add
xchg
cmpsb
add
mov
testb
add
mov
das
leave
xor
add
leave
sbb
jbe
inc
cli
jle
add
xchg
xchg
js
or
adc
push
insl
pop
dec
jp
fstl
jo
in
sub
testb
lods
fucomp
shr
adc
lock
mov
push
je
fdivl
stc
out
mov
pop
imul
lea
lds
jle
add
xchg
dec
adc
mov
fsubl
movb
cli
pop
add
icebp
add
mov
rcll
test
sbb
int
cld
repz
push
add
test
ficomps
sbb
add
mov
ret
and
aaa
add
pop
sti
pusha
add
mov
push
add
ljmp
mov
aad
ret
jle
aas
out
cmp
add
int
add
outsb
jmp
add
add
mov
fsub
add
repz
jecxz
add
sbb
push
and
mov
add
sahf
je
ljmp
hlt
add
scas
xchg
adc
dec
and
imul
sub
jne
mov
gs
jnp
dec
sbb
inc
add
bound
mov
adc
add
add
scas
jle
movsl
inc
iret
push
add
addb
jo
addb
or
inc
add
push
bound
mov
ss
mov
add
add
in
imul
icebp
loop
inc
test
cmpsb
add
mov
cltd
or
push
add
mov
add
inc
add
xor
pop
and
and
jg
adc
loopew
or
add
mov
cmp
inc
test
mov
add
jmp
sub
add
mov
add
sub
add
mov
jb
jb
in
adc
out
scas
cmp
add
fwait
pop
fs
pop
stos
inc
xor
rcrl
push
add
fldenv
push
add
or
sahf
jne
add
mov
out
scas
cwtl
sbb
add
addb
add
add
imul
dec
push
mov
cmp
add
pop
xchg
add
outsl
push
add
or
xchg
pushf
movb
jb
adc
adc
lods
push
add
cmc
adc
push
mov
add
mov
add
jb
mov
movb
dec
and
add
push
add
mov
add
add
xor
out
xor
insl
cmp
sbb
add
add
mov
mov
jle
fstps
sbb
push
jg
add
test
add
popa
subl
mov
gs
xor
add
pop
add
mov
push
lea
mov
add
add
std
aam
push
js
inc
lcall
add
add
aad
jns
xchg
add
mov
lret
loope
and
mov
int3
je
stos
bound
mov
aas
imul
fstl
xchg
add
addb
loope
sub
or
testb
sub
push
rolb
sbb
mov
lods
int
mov
add
jmp
add
outsl
and
mov
pop
pop
imul
out
int3
aam
dec
test
popf
lea
out
dec
sarl
inc
mov
add
add
pop
lcall
mov
xchg
xor
hlt
add
loope
bound
mov
clc
xchg
add
mov
fucomp
daa
test
les
or
push
test
pop
inc
push
ljmp
rolb
add
add
loopne
sbb
test
ret
cmp
ljmp
addr16
insb
dec
shrl
mov
add
in
inc
scas
out
and
mov
jecxz
add
xor
cmc
mov
push
add
lret
aam
loopne
cmp
out
cld
int
lcall
stos
jb
scas
lods
shll
adc
fisubs
scas
sub
rolb
add
adc
mov
stc
enter
mov
or
add
pop
pop
cwtl
insb
sbb
add
mov
xor
cltd
sbb
cmc
outsl
jmp
in
lods
mov
dec
lea
repz
xor
addb
movsb
add
add
inc
add
add
add
xor
mov
push
add
or
add
insl
or
popl
mov
jae
ljmp
test
in
add
test
mov
mov
movb
add
mov
aad
jns
jbe
outsb
adc
fsubrl
mov
aam
push
sub
xlat
loope
ljmp
dec
inc
add
add
aad
pop
rep
enter
out
inc
mov
int3
dec
sbb
movsl
pop
fmull
mov
add
sbbl
xor
in
push
out
fsubl
mov
jp
and
sbb
and
mov
jne
add
add
dec
leave
imul
aaa
push
mov
ljmp
cmp
add
cmpsl
insb
daa
adc
les
pop
push
jg
out
add
add
cs
cmp
push
mov
sub
fsts
and
mov
sub
dec
sub
add
xor
mov
cmp
add
mov
xchg
out
sub
fbld
lods
dec
sub
mov
pop
icebp
add
jle
fmul
cmpsb
add
sub
push
xchg
test
add
add
mov
ret
mov
sub
pop
out
sbb
and
add
push
lea
mov
dec
pop
sub
lcall
adc
rolb
jp
add
dec
popf
ss
adc
movsl
push
add
fbstp
add
lea
mov
mov
mov
add
testb
add
add
add
roll
cmp
add
stos
mov
mov
add
cmp
add
movsb
add
dec
lods
in
xchg
sbb
in
mov
add
add
dec
xchg
add
add
add
add
mov
mov
in
addb
add
testl
jno
add
lahf
mov
jmp
arpl
shr
lret
pop
xchg
mov
xchg
add
in
movb
add
pop
push
add
lret
pushf
pusha
add
mov
add
and
mov
sbb
arpl
add
add
mov
jp
add
add
aas
push
addb
jge
mov
push
fdivrl
add
popf
inc
add
ds
push
add
jg
add
add
add
sub
add
add
incb
add
lock
add
add
add
mov
push
add
dec
push
and
mov
cmp
jl
out
pushf
gs
test
rolb
pop
sbb
xor
xor
loope
add
mov
pop
lods
add
dec
loope
pop
inc
int3
jg
add
jg
add
add
mov
xchg
add
jb
push
xchg
add
gs
jp
out
dec
jge
add
out
jle
add
mov
nop
add
gs
fsubl
or
add
add
jl
add
jne
xchg
add
in
out
ds
jl
add
rcrl
lret
ljmp
dec
mov
ficompl
dec
add
cmova
hlt
add
fisttpl
out
inc
inc
add
cmp
ficompl
add
add
mov
dec
xchg
lret
jp
rolb
add
adc
push
add
test
int3
pop
sti
sbb
paddq
mull
aas
lock
add
add
dec
insl
mov
insb
lods
cld
addb
movsb
add
insl
jge
add
mov
add
mov
inc
add
addb
add
add
add
add
repnz
add
mov
add
aad
add
dec
sti
bound
mov
mov
dec
mov
add
mov
adc
mov
movsl
out
loop
push
fsubrl
inc
add
pop
mov
add
inc
repnz
fstps
pop
and
and
fucom
add
add
mov
inc
add
rolb
mov
add
lea
add
sub
mov
mov
mov
jns
dec
into
ds
pop
add
lods
test
popa
addb
and
add
out
mov
add
push
cwtl
fstps
push
add
add
add
sub
dec
nop
add
xchg
add
pop
in
xchg
add
dec
decl
popl
add
add
ret
add
add
rcl
enter
fisubrl
add
movsl
dec
pusha
add
addb
push
sahf
movl
add
mov
mov
das
enter
add
cmp
mov
push
add
add
mov
adc
push
inc
mov
hlt
add
or
out
jmp
mov
or
xchg
mov
aad
inc
add
push
outsl
jge
popf
jbe
xchg
add
out
ljmp
push
sub
mov
insl
add
adc
push
push
add
push
add
pop
sub
push
add
mov
mov
sub
je
sub
add
xchg
add
inc
add
jbe
cmp
push
dec
dec
fmuls
fimuls
add
repz
jo
sbb
sbb
inc
add
and
jo
xchg
add
jnp
mov
xchg
push
add
incl
pushf
mov
add
add
mov
mov
mov
mov
mov
add
xchg
add
sbb
lahf
cmpsl
test
xchg
jae
add
jb
in
adc
sub
fstps
add
xor
jmp
mov
adc
mov
fwait
pop
mov
pop
xlat
loopne
xor
xor
or
add
cmpsl
xlat
push
add
loop
cmp
add
fsubrp
add
sub
subl
xor
add
xchg
add
cwtl
and
jl
add
cmp
sbb
rol
aas
aas
inc
add
add
testb
inc
cmp
iret
mov
jno
add
jp
pushl
pushf
aam
pop
imul
and
iret
cmp
push
add
jecxz
inc
add
fadds
add
lcall
xchg
test
lock
push
add
add
add
fsubrs
add
dec
dec
fsts
js
cld
rolb
stos
xor
add
sbb
xor
sbb
add
push
pop
push
dec
je
sbb
mov
add
add
lock
push
add
cmpsb
add
push
add
out
mov
push
add
fcmovnb
outsl
mov
cmp
addr16
mov
add
rolb
inc
mov
push
add
in
rcll
add
pop
fdiv
sub
pop
arpl
add
andl
cli
dec
pop
mov
push
add
cmp
out
add
in
decb
add
add
mov
inc
add
push
add
pop
movsl
jno
pop
and
add
push
push
jp
adc
dec
dec
xchg
pop
xchg
rolb
mov
cmp
lret
test
add
rorl
pop
xlat
adc
push
add
mov
fdivl
push
add
add
add
pushf
mov
iret
sahf
jg
lahf
in
repnz
sti
pop
add
add
pop
movaps
sbb
mov
cltd
fadd
add
lods
dec
cmp
add
testb
mov
add
adc
test
call
add
add
mov
imul
in
jle
cmpsb
add
mov
mov
cli
inc
jns
push
add
mov
nop
add
add
mov
int
pop
xor
and
mov
repz
repnz
add
sbb
add
int3
pop
dec
jmp
pop
push
inc
add
add
mov
sub
add
jmp
jo
cli
test
push
push
ds
ljmp
inc
fidivrs
in
push
add
repz
lea
add
jmp
mov
cmpsl
insl
push
ret
lods
sahf
movsl
and
add
dec
into
and
mov
add
mov
add
add
repnz
addb
lea
dec
stos
adc
cmc
loop,pt
sub
dec
and
aad
add
jns
sbb
test
and
mov
add
loop
jo
shrl
rolb
xchg
mov
add
sbb
fcompl
cmp
mov
add
sub
add
addb
add
pop
mov
test
in
hlt
add
repz
std
dec
mov
daa
xchg
add
jnp
sahf
mov
add
add
sahf
repnz
movsl
push
dec
lods
aam
imul
jp
add
jle
lds
call
push
ss
push
sahf
pop
mov
add
add
movsl
ret
dec
arpl
cmp
and
or
inc
add
add
aas
lods
add
add
das
test
add
cmpsl
and
mov
and
mov
add
mov
inc
imul
iret
mov
or
les
rolb
add
arpl
and
jecxz
daa
pop
fisubrl
test
stc
add
add
dec
dec
add
mov
dec
xorps
jmp
jle
in
inc
fnstenv
scas
out
inc
mov
add
add
js
add
inc
add
add
and
inc
pop
adc
rol
outsb
pop
out
push
pushf
iret
gs
add
mov
and
mov
bound
mov
mul
sub
and
loopne
popa
inc
add
pop
imul
add
data16
mov
xor
rolb
scas
das
stos
andl
add
add
push
inc
sub
jno,pt
insl
adc
and
mov
test
cmc
sbb
cmpsl
jl
xor
add
pop
xor
aaa
movb
add
add
mov
fsub
add
mov
add
loop
loope
pop
es
jmp
cld
aam
mov
add
add
mov
add
add
in
pop
cli
or
out
cmc
xor
add
mov
add
add
mov
ja
lds
mov
ret
jmp
pop
lret
dec
int3
cwtl
mov
leave
jno
add
imul
add
add
popa
pop
jge
lcall
das
js
xchg
std
es
add
fisubrl
dec
or
popf
inc
not
and
mov
testb
lret
das
dec
scas
adc
in
mov
add
pop
clc
add
cmp
mov
int
jmp
dec
cmp
es
sub
imul
arpl
push
inc
add
inc
adc
sub
mov
popl
xchg
ljmp
add
mov
add
add
enter
pop
dec
add
fidivrs
pop
xor
mov
fdivp
add
mov
rolb
movsb
add
popa
xchg
mov
xchg
cmpsb
add
repz
dec
enter
and
xor
adc
popa
scas
pop
insb
push
add
mull
mov
in
push
movsl
cmpsl
je
dec
mov
pushf
insb
pop
push
add
cmp
mov
divl
movb
add
jae
lods
js
add
add
pusha
add
push
add
insl
cmp
iret
mov
push
fisttpll
add
mov
add
mov
add
adc
add
add
mov
inc
out
push
add
filds
adc
lods
iret
cwtl
jbe
mov
dec
in
movb
sbb
popf
and
jb
inc
pusha
add
add
inc
add
out
pushf
jle
add
add
add
cmp
mov
sti
sbb
fsubrl
sbb
xor
sbb
loop
or
mov
cltd
rcrl
movb
add
xchg
add
ja
pop
jl
add
add
push
loop
fldl
dec
pop
rcl
int3
or
inc
add
inc
lods
and
or
jnp
les
aaa
xchg
dec
inc
add
dec
push
mov
sub
xlat
sbb
add
add
add
jg
and
xlat
addb
sub
pop
add
push
add
add
add
sub
cld
enter
gs
xchg
add
leave
mov
jne
mov
cmp
push
mov
pop
das
stos
arpl
add
add
pop
push
add
add
repnz
fsubrl
or
imul
push
add
add
enter
pushf
xchg
cltd
daa
loopne
cmpsl
push
and
jle
add
xor
mov
dec
cmp
xor
or
and
in
cld
xchg
add
jle
jbe
inc
add
add
or
add
in
or
add
mov
mov
js
add
cld
mov
int3
dec
pop
fldcw
add
mov
jns
popa
sti
mov
sub
repz
add
test
add
add
add
sbb
add
add
cwtl
fbld
mov
sbb
jno
cmp
add
fwait
rolb
mov
add
or
add
add
cmp
mov
add
add
add
inc
add
xlat
test
push
add
add
add
add
add
add
push
stos
test
xlat
jge
jle
add
jle
pop
add
add
test
leave
or
inc
shl
add
or
and
addr16
mov
add
add
push
add
cmpsb
add
aam
es
mov
jnp
add
push
add
cli
test
mov
mov
adc
jge
mov
add
nop
add
ret
inc
add
or
pop
ja
add
add
push
inc
add
ficompl
cmp
andl
mov
ds
clc
or
lret
stos
pushl
iret
out
fwait
sbb
popf
add
sti
in
cmp
add
xor
pop
mov
out
cmp
cmp
add
daa
mov
movb
add
rolb
bound
mov
in
mov
push
sbb
std
mov
loopne
iret
xor
imul
fdivrs
xor
call
arpl
add
push
add
xchg
inc
add
mov
mov
add
add
jb
add
add
scas
add
sub
ror
add
imul
int3
icebp
imul
add
add
daa
adc
aas
dec
cld
dec
jbe
add
call
add
imul
adc
outsb
inc
add
int
xor
jecxz
add
loopne
add
add
pop
iret
xchg
out
sub
add
add
jns
jbe
or
add
mov
xchg
add
cld
stos
adc
add
and
add
mov
data16
addl
adc
sbb
add
repz
enter
cmp
push
addb
test
call
add
scas
andl
pop
inc
add
mov
mov
add
xor
add
in
push
add
add
mov
add
xor
adc
push
add
test
add
jp
adc
imul
hlt
add
mov
leave
sti
add
les
popf
dec
lret
push
add
mov
mov
mov
add
add
repz
fwait
loopne
aad
loope
sub
add
mov
cmpsb
add
mov
add
addb
add
sub
push
cmp
add
insb
cmp
add
add
add
add
out
ret
fisubrs
push
cmp
sahf
xchg
add
mov
jge
add
add
in
gs
dec
xor
repnz
ret
rolb
cmp
or
ret
inc
rolb
insl
repnz
mov
mov
sbb
pusha
add
cmp
xchg
add
adc
pop
jb
or
arpl
mov
cs
push
add
sub
mov
xor
sbb
sbb
jle
stos
lret
add
imul
ja
add
out
in
lock
push
add
sub
in
leave
stc
xchg
add
add
mov
mov
jecxz
push
add
add
xchg
aas
pushf
xchg
inc
add
in
mov
clc
inc
add
in
fstpl
pop
cmp
or
add
add
out
aas
aam
jmp
mov
mov
mov
add
add
xor
mov
add
mov
add
lret
or
pop
cltd
sahf
jl
leave
daa
inc
test
in
lods
mov
call
add
inc
add
aas
stos
mov
gs
js
push
add
ds
add
add
or
add
mov
lock
add
and
mov
jecxz
add
mov
cmc
push
jecxz
or
xor
adc
sbb
out
aaa
addb
pop
insb
push
cld
loop
and
add
inc
add
mov
push
hlt
add
sbb
sub
push
jne
lea
add
lock
xchg
add
push
test
stc
into
lcall
rolb
and
mov
lcall
ret
rolb
jo
jne
aaa
mov
add
xchg
in
in
rcrl
das
mov
ficompl
sub
das
cmp
data16
test
adc
jo
xor
cmp
add
add
add
inc
add
add
outsb
sub
add
mov
sub
cmp
sub
add
and
imul
push
fdivrp
push
add
pop
mov
popa
fnstenv
out
dec
adc
pop
daa
call
mov
fnstcw
fbstp
ret
adc
cmpsl
mov
add
sbb
icebp
lea
mov
add
jno
call
add
aam
inc
add
mov
xlat
gs
add
add
xor
repnz
pop
out
bound
mov
stos
iret
movb
loopne
or
add
add
or
dec
jne
into
sub
dec
stos
push
add
add
fsubrl
add
stos
addr16
sub
add
add
leave
call
add
mov
in
sbb
xchg
fwait
xchg
add
adcl
add
cmp
fsubrs
insb
fldl2e
clc
mov
in
lock
loope
and
mov
popa
mov
cmpsb
add
fucomi
adc
push
pop
cmp
add
cmp
aad
fidivrl
mov
subl
mov
adc
add
flds
push
jl
nop
add
add
insl
mov
xor
add
dec
inc
add
add
push
inc
add
test
add
addr16
enter
add
fwait
addb
add
mov
outsb
addb
in
pop
jbe
push
push
add
add
dec
push
sahf
inc
add
jo
movb
outsb
add
arpl
out
or
add
and
add
dec
or
scas
and
add
add
mov
sub
add
pop
inc
add
iret
pusha
add
inc
add
add
mov
mov
in
adc
aam
pop
jno
add
dec
dec
jge
dec
lret
add
pop
iret
inc
or
mov
jg
jno
add
sbb
add
jg
sub
push
cmc
add
and
add
sbb
repnz
xor
mov
mov
dec
push
jle
test
xor
mov
cmp
inc
add
sti
lahf
aam
lret
fwait
and
in
fdivrp
ret
mov
repz
add
or
add
xlat
push
add
mov
std
xchg
add
or
pop
mov
sahf
ret
stos
test
add
add
or
mov
in
add
add
rolb
int3
add
mov
jbe
push
xchg
test
ljmp
mov
sahf
jbe
xor
adc
shll
sub
add
sarl
stos
jbe
xchg
lock
dec
inc
out
jl
add
mov
popa
movsb
add
add
cmc
xor
in
dec
push
mov
aaa
jo
data16
mov
add
add
xchg
das
push
clc
shl
add
add
fcoms
xchg
add
xchg
add
scas
add
jno
add
sti
pop
jb
repz
cmp
arpl
mov
jo
mov
xor
test
lahf
aad
jbe
insl
imul
add
in
subl
lar
mov
add
add
fcmovu
mov
inc
insb
sarl
pop
cltd
sbb
scas
enter
add
and
mov
add
pop
into
jmp
add
std
roll
add
jmp
loope
add
add
inc
add
mov
sub
add
pusha
add
mov
inc
jbe
dec
gs
xor
mov
sti
add
inc
add
fmull
testb
add
movb
repz
pop
leave
adc
mov
jmp
mov
cmpsl
incl
mov
hlt
add
add
cmp
add
add
mov
add
add
enter
mov
lcall
adc
test
repnz
xchg
mov
add
inc
add
sub
xor
pop
xor
fstpl
sbb
mov
les
xor
add
movb
pop
dec
mov
cmpsb
add
and
mov
sub
push
add
add
mov
pop
xor
jmp
iret
pop
push
jp
add
jns
pushf
jg
jl
sbb
xchg
out
xchg
add
add
data16
add
adc
sbb
add
les
and
dec
jg
mov
push
pop
outsb
arpl
inc
cmp
cmp
lea
add
mov
lds
add
in
xchg
pop
loop
rcrl
inc
add
stos
jb
and
ret
xchg
test
jb
stc
mov
lea
dec
mov
and
mov
enter
mov
mov
mov
test
add
xchg
pop
das
cmp
jmp
rcrl
mov
add
in
jo
stos
jle
call
repz
lcall
add
jp
and
cmp
loop
cmp
dec
xor
mov
sbb
inc
add
push
cmpsb
add
jae
mov
add
mov
push
add
xchg
add
aad
mov
aaa
mov
add
add
dec
add
xchg
add
add
mov
cmpl
mov
movsl
push
add
add
repz
xchg
es
fcom
inc
add
je
mov
pop
adc
xor
mov
add
xlat
adc
in
mov
repz
add
jp
add
add
add
jb
add
imul
ljmp
sbb
or
scas
orl
enter
enter
std
mov
mov
inc
add
add
adc
pop
fnstenv
xor
loop
mov
jnp
enter
lods
mov
out
push
or
cmpsl
int3
mov
imul
add
add
dec
icebp
pop
xchg
movsl
sbb
add
dec
sbb
xchg
scas
cmp
int3
repz
sbb
mov
mov
mov
add
add
xchg
repz
add
pop
cmp
push
pop
or
xor
mov
pushf
jb
rolb
add
adc
add
add
cmp
add
add
add
mov
jnp
add
xchg
add
mov
xor
adcl
jb
push
pop
sahf
mov
lock
dec
fcomps
addb
add
add
loop
dec
cmp
mov
add
and
mov
int3
dec
sbb
add
mov
jecxz
add
and
mov
daa
cmp
imul
add
add
add
dec
cmp
les
loope
inc
rolb
add
jl
dec
cs
jbe
dec
push
add
orl
and
mov
mov
and
roll
cmp
add
sub
mov
lahf
icebp
lcall
gs
add
cmp
mov
fisubrl
call
leave
dec
sahf
push
add
mov
test
push
loope
push
add
repnz
repz
add
add
pop
dec
and
xor
xchg
add
enter
pop
mov
pushf
xor
arpl
mov
pop
mov
les
inc
add
xlat
aas
xor
xor
inc
add
xor
lcall
add
mov
mov
cmp
repz
fldpi
movb
ds
add
add
out
adc
test
mov
add
daa
jl
sbb
dec
sub
scas
mov
mov
orl
cmp
jo
adc
dec
mov
xchg
push
push
add
jns
rolb
add
js
push
fnclex
add
add
add
mov
add
and
mov
popa
imul
pushf
cld
pop
repz
mov
popa
adc
fcompl
push
add
add
add
and
and
lods
je
test
mov
fsubrp
loop
psubq
add
ja
add
out
icebp
pop
mov
cltd
and
lock
pop
and
jl
rolb
xchg
mov
test
mov
mov
sbb
add
add
test
pop
testb
add
add
jle
ds
arpl
push
add
lods
cld
addl
stc
pop
inc
add
in
enter
pop
mov
ret
add
mov
sub
call
add
add
add
shrl
pushf
fcomps
imul
inc
add
stc
dec
les
das
test
fisttpll
add
rolb
decl
add
adc
sub
pop
xchg
add
mov
add
fstpt
add
movb
or
mov
add
hlt
add
jbe
dec
mov
sbb
add
or
add
xor
stos
movsb
add
jmp
mov
jecxz
pop
push
cmp
mov
add
jo
popf
xchg
add
mov
decb
xchg
and
clc
sti
sub
je
mov
xor
in
pop
push
add
cmpl
add
add
mov
add
pushf
insl
inc
jp
add
hlt
add
push
add
mov
xchg
add
add
inc
add
add
add
movsb
add
adc
das
sbb
add
add
push
mov
lods
dec
in
jg
sbb
rolb
gs
pop
or
in
jbe
rcll
xor
mov
xorl
jae
and
mov
dec
sbb
scas
hlt
add
add
cmc
sbb
mov
movb
rolb
icebp
test
lret
xchg
aaa
push
testb
add
and
aam
jecxz
sub
mov
in
loop
sub
add
fsubr
fisubl
pop
or
lock
add
inc
add
xlat
dec
jno
add
scas
rcll
push
pop
push
out
add
stos
sbb
lret
ljmp
or
add
add
add
rcrl
sub
jns
sub
outsl
aam
dec
push
pusha
add
push
sub
add
push
js
add
addb
inc
addb
mov
sbb
mov
add
xchg
pop
push
push
mov
push
cmp
stc
jb
push
add
les
test
dec
jo
insl
xchg
lahf
mov
lods
fldt
pop
cmpsl
push
add
add
push
add
inc
add
mov
push
add
sti
inc
add
hlt
add
fsts
xor
and
addl
mov
cmp
bound
mov
addb
loopne
aam
sbb
sub
push
add
add
addb
add
add
testl
add
xor
nop
add
pop
xchg
test
xorl
pushf
stos
push
add
nop
add
jno
ret
sbb
add
add
cmp
pop
push
add
cltd
add
pop
in
repnz
test
insb
mov
xor
mov
add
inc
add
out
mov
mov
cmp
dec
outsb
ljmp
add
cmp
rolb
add
divps
add
add
dec
pushf
int
inc
add
lret
addb
pop
xchg
add
push
add
fwait
pop
jg
push
mov
lahf
addb
pop
loop
xchg
jnp
nop
add
leave
push
xrelease
push
mov
xorl
inc
mov
add
ret
add
push
add
add
add
stos
rolb
aam
loope
add
add
enter
jl
sbb
add
pop
cmp
mov
test
loope
add
lret
into
pop
push
add
ret
add
mov
add
fadd
add
pusha
add
je
push
add
mov
or
add
add
pop
jecxz
or
sub
lds
pop
and
cmp
jg
add
lret
inc
fimuls
xor
mov
add
arpl
add
in
add
push
add
movsb
add
dec
orl
ret
mov
lret
add
add
add
adc
inc
repnz
add
pop
mov
lods
push
add
stos
sub
or
repz
dec
lret
mov
je
jecxz
dec
add
mov
cmp
add
mov
add
fs
rolb
out
jl
daa
mov
mov
pop
bound
mov
mov
add
push
add
test
dec
rolb
pop
add
inc
add
push
add
mov
add
arpl
popf
sbb
add
add
popl
add
push
mov
add
adc
push
add
add
add
cmpsb
add
rolb
je
or
lcall
add
and
mov
add
mov
jno
shll
or
xchg
add
mov
cmc
dec
add
or
aaa
arpl
repnz
icebp
pop
mov
and
mov
or
in
xor
and
mov
es
dec
lcall
add
mov
and
mov
ds
jp
pop
psubsw
arpl
push
add
and
xchg
add
add
out
aas
pop
mov
movb
add
add
push
cmp
stos
lock
mov
push
sbb
pop
cld
jbe
and
add
push
add
mov
call
push
add
mov
pop
dec
inc
add
dec
ja
sbb
test
cmp
xchg
ljmp
test
and
mov
pop
adc
and
mov
mov
add
xchg
mov
add
into
sbb
sahf
dec
fcoml
adc
test
loope
ljmp
aad
lods
popf
xor
add
push
cltd
aaa
aam
jl
mov
mov
add
add
add
ss
push
add
add
dec
mov
add
push
dec
into
xor
adc
shrl
add
mov
ljmp
arpl
add
insb
fldl
add
push
test
add
jbe
add
lcall
sbb
rolb
std
jnp
loope
dec
sahf
hlt
add
adc
add
dec
dec
jo
cmc
adc
push
add
test
add
or
aad
jecxz
pushf
loopne
aam
mov
push
pushf
rolb
mov
leave
sub
add
push
add
js
inc
add
and
stc
pop
add
add
add
adc
add
add
xchg
push
add
add
add
mov
add
ret
incl
sub
mov
add
xor
mov
add
jp
orl
in
xlat
adc
or
insl
clc
and
mov
add
jge
add
fisubrs
popf
jb
xor
arpl
sbb
test
imul
add
test
inc
add
mov
mov
int3
jmp
mov
add
imul
inc
add
xchg
lods
mov
clc
repnz
jae
lcall
mov
clc
repnz
jae
jae
leave
pop
mov
clc
repnz
jae
add
jbe
data16
das
subl
push
mov
xchg
ret
jbe
call
and
push
mov
xchg
ret
add
add
fisttpll
nop
jae
pop
add
cmpsl
add
jae
jnp
add
in
push
add
mov
fadds
cmpsl
call
call
add
loop
add
cmpsl
add
add
addb
popa
fwait
cld
nop
jmp
add
test
cmpsl
add
xchg
test
and
push
fs
repnz
jae
jns
push
mov
jae
push
add
int
xor
shr
clc
repnz
jae
add
add
les
and
clc
repnz
jae
add
sbbl
xchg
add
push
clc
repnz
jae
add
lea
roll
in
js
clc
repnz
jae
aaa
jae
aaa
add
add
and
out
pop
push
mov
xchg
ret
call
test
jne
add
clc
repnz
jae
int
test
pop
add
add
add
out
xor
mov
jae
repnz
jae
add
add
mov
clc
repnz
jae
movl
pop
stos
clc
repnz
jae
jbe
pop
pop
add
push
mov
int
add
repnz
jae
jns
xor
mov
fwait
cld
nop
jmp
in
xchg
ja
add
add
adc
repnz
jae
add
add
hlt
add
add
and
add
mov
cld
or
jmp
add
dec
test
fwait
cld
nop
jmp
add
add
add
add
das
mov
clc
repnz
jae
add
scas
mov
push
mov
xchg
ret
fs
movsl
cmpsl
lret
cmp
repnz
jae
add
fadds
pushf
xchg
add
add
test
sbb
add
repnz
jae
ss
imul
nop
jae
pop
xor
test
jne
add
pushl
clc
repnz
jae
jae
add
movsl
pop
sahf
push
push
mov
xchg
ret
add
addl
or
xor
add
fwait
cld
nop
jmp
xchg
das
add
pop
clc
repnz
jae
add
dec
push
adc
cli
add
clc
repnz
jae
add
add
add
mov
cmp
ret
add
pop
fadds
add
inc
add
data16
mov
xchg
ret
add
les
fwait
add
insb
mov
clc
repnz
jae
add
fimuls
test
repnz
jae
add
add
push
clc
repnz
jae
add
add
dec
add
loopne
lret
add
push
mov
xchg
ret
into
add
sub
test
repnz
jae
push
add
jmp
xor
jae
add
fwait
cld
nop
jmp
push
fidivl
fiaddl
cmp
cmpsl
testb
add
mov
fwait
cld
nop
jmp
add
enter
mov
repnz
jae
add
add
fwait
mov
jae
add
inc
cmpsl
loopne
cmp
mov
test
sti
pop
add
add
add
icebp
stc
add
lret
add
fwait
cld
nop
jmp
add
add
add
ss
movsb
clc
repnz
jae
add
cmpsl
add
add
fwait
cld
nop
jmp
pop
add
xor
leave
add
fwait
cld
nop
jmp
add
fwait
fwait
addl
outsb
push
push
mov
xchg
ret
add
nop
add
lea
fwait
cld
nop
jmp
add
add
mov
adc
repnz
jae
cmpsl
cmpsl
mov
xchg
add
xor
clc
repnz
jae
add
add
add
nop
add
add
jae
mov
add
xchg
add
lcall
clc
repnz
jae
jnp
mov
mov
clc
repnz
jae
das
cmp
fiaddl
sub
jmp
jae
call
add
les
cld
nop
jmp
mov
add
jne
clc
repnz
jae
pop
test
push
mov
xchg
ret
add
lcall
fwait
cld
nop
jmp
rorl
fdivs
add
and
add
clc
repnz
jae
jbe
mov
add
out
out
clc
clc
repnz
jae
pop
test
pusha
add
lods
clc
repnz
jae
les
cmp
add
lea
loope
push
clc
repnz
jae
test
roll
add
add
push
push
mov
xchg
ret
add
fiaddl
cmc
mov
js
xchg
cmpl
cmpl
pop
lret
or
repnz
jae
pop
mov
push
mov
fcoms
in
add
add
xchg
rcrb
test
out
add
add
rcrb
push
add
dec
cmp
pop
xchg
test
sbbl
xor
cld
nop
jmp
enter
gs
add
xchg
add
clc
repnz
jae
dec
add
adc
add
jmp
jg
clc
repnz
jae
aaa
add
add
add
mov
clc
repnz
jae
add
call
clc
repnz
jae
xor
fidivl
xor
push
mov
xchg
ret
aaa
jbe
add
add
mov
push
mov
xchg
ret
add
xor
push
add
add
clc
repnz
jae
add
or
nop
jmp
push
pop
jae
add
fs
adc
in
add
push
mov
xchg
ret
add
add
push
add
push
clc
repnz
jae
add
add
mov
fwait
cld
nop
jmp
add
add
add
push
xor
fwait
cld
nop
jmp
int
xor
add
add
xor
clc
repnz
jae
shll
inc
jae
xchg
sub
in
movb
lret
add
cmp
push
aam
aaa
lcall
add
add
add
add
movsl
lods
add
sub
nop
jae
add
add
add
mov
push
mov
xchg
ret
cmp
ja
add
mov
jmp
call
and
add
add
add
push
push
mov
xchg
ret
sbb
jnp
pop
sub
clc
repnz
jae
add
add
inc
add
lea
xor
add
lds
lcall
or
add
add
pop
scas
push
fwait
cld
nop
jmp
fwait
inc
add
fs
xchg
int
rolb
rolb
dec
mov
push
mov
xchg
ret
push
in
add
lcall
incl
add
dec
in
add
in
jae
mov
add
fwait
cld
nop
jmp
pop
add
add
add
jmp
jns
add
cmpsl
shrl
mov
enter
xor
mov
mov
mov
xchg
ret
add
add
pop
mov
push
mov
xchg
ret
push
add
xchg
inc
jae
mov
fwait
cld
nop
jmp
add
add
add
add
clc
repnz
jae
add
add
clc
repnz
jae
add
add
dec
jns
dec
subl
push
mov
xchg
ret
add
adc
cmp
jne
clc
repnz
jae
shr
add
pop
data16
movswl
clc
repnz
jae
dec
add
add
movb
add
add
add
sbb
add
inc
add
xchg
clc
movzwl
clc
repnz
jae
addl
add
repnz
jae
add
pop
ja
push
pushf
push
add
pop
add
clc
repnz
jae
mov
add
iret
add
clc
repnz
jae
test
add
stc
add
clc
repnz
jae
add
shll
add
lcall
aas
enter
cmp
ret
add
xor
repnz
jae
add
xchg
fwait
movsl
add
add
add
add
dec
adc
repnz
jae
cmp
xchg
jne
clc
repnz
jae
fiaddl
pop
push
push
mov
xchg
ret
cmp
add
fdivr
repnz
jae
push
add
cmp
leave
leave
sahf
mov
clc
repnz
jae
xchg
add
mov
clc
repnz
jae
test
cmc
add
call
nop
jae
cmp
pop
enter
jns
lea
nop
jmp
add
add
add
les
in
pushl
clc
repnz
jae
int
cmpl
dec
mov
add
clc
repnz
jae
int
add
mov
xchg
ret
add
mov
or
jb
inc
add
lea
add
mov
fwait
cld
nop
jmp
das
add
add
mov
clc
clc
repnz
jae
pop
call
repnz
jae
add
pop
add
das
add
mov
mov
clc
repnz
jae
aaa
add
add
cmc
lds
mov
jmp
add
add
cmpsl
add
add
fsubl
xor
add
clc
repnz
jae
xor
nop
jmp
dec
add
xchg
xor
loopne
shll
push
add
je
clc
repnz
jae
push
inc
add
xchg
push
mov
xchg
ret
add
add
add
pop
push
mov
xchg
ret
add
les
add
nop
jae
add
add
add
repnz
jae
add
fadds
add
jbe
cmp
fwait
cld
nop
jmp
ja
cmpsl
add
pop
lea
clc
repnz
jae
xor
jns
add
dec
fwait
cld
nop
jmp
push
add
loopne
xchg
mov
nop
jae
add
add
add
add
cld
nop
jmp
add
cmc
fiaddl
mov
imul
xchg
push
add
dec
jbe
jns
lcall
add
repnz
jae
jnp
add
jb
dec
pop
push
mov
xchg
ret
add
xor
xorl
jae
pop
add
xor
add
add
pop
push
push
mov
xchg
ret
add
add
dec
dec
jbe
xor
movsl
xorl
or
add
fidivl
call
pusha
fwait
cld
nop
jmp
add
add
add
add
test
pushf
pop
push
mov
xchg
ret
add
add
add
add
insl
add
clc
repnz
jae
les
add
add
jnp
mov
clc
repnz
jae
jbe
rcr
call
fwait
cld
nop
jmp
add
mov
push
mov
xchg
ret
add
cmpsl
add
popf
inc
add
enter
add
add
test
add
loop
fwait
cld
nop
jmp
add
das
jne
mov
and
push
mov
xchg
ret
fwait
fwait
inc
add
add
mov
clc
repnz
jae
roll
add
add
add
mov
jo
rolb
cmp
nop
jmp
xchg
enter
add
aam
mov
nop
jae
lcall
fldl
nop
jae
add
leave
add
les
sub
inc
add
lcall
mov
push
mov
xchg
ret
orl
jae
mov
add
repnz
jae
add
cmp
pop
mov
push
mov
xchg
ret
add
ss
aaa
adc
mov
clc
repnz
jae
add
lea
mov
add
cmpl
nop
jmp
dec
in
push
cmp
push
clc
repnz
jae
orl
add
add
repz
repnz
jae
fadds
add
lcall
repnz
jae
add
pop
dec
add
add
leave
sub
sti
incl
roll
push
movl
and
repnz
jae
call
push
dec
mov
push
mov
xchg
ret
add
add
mov
xchg
ret
test
jne
xchg
add
pop
push
mov
xchg
ret
lea
add
add
clc
repnz
jae
les
fwait
addl
ljmp
repnz
jae
gs
add
xchg
mov
nop
jmp
test
add
jae
add
xchg
push
mov
xchg
ret
cmc
add
in
jae
loopne
test
add
fwait
cld
nop
jmp
test
lcall
add
in
inc
add
ja
ja
mov
outsb
movzwl
clc
repnz
jae
add
addl
push
add
add
hlt
push
add
add
clc
lea
clc
repnz
jae
add
add
adc
mov
push
mov
fiaddl
xchg
add
add
cwtl
arpl
push
inc
add
mov
push
mov
xchg
ret
adcl
pop
pop
jmp
repnz
jae
add
cmp
repnz
jae
test
add
mov
hlt
add
jae
mov
cmpsl
fisubl
mov
inc
add
inc
leave
pop
xchg
jnp
xor
mov
xchg
ret
jns
mov
clc
push
mov
xchg
ret
pushf
jnp
xor
loop
loope
push
mov
add
shr
popl
fldl
add
orl
imul
xchg
ret
dec
add
push
mov
xchg
ret
add
add
push
mov
push
mov
xchg
ret
add
add
jns
or
nop
jae
add
add
xor
bound
mov
cmp
mov
xchg
ret
add
push
add
jae
addb
add
add
loope
repnz
jae
add
cmpl
popf
fwait
cld
nop
jmp
roll
push
add
add
add
repnz
jae
add
add
out
inc
clc
repnz
jae
movsl
add
add
jne
add
add
lock
mov
xchg
ret
add
add
aaa
cmc
lods
ret
clc
repnz
jae
add
xchg
pusha
add
push
add
fwait
cld
nop
jmp
add
add
mov
xchg
ret
jne
add
fiaddl
add
ret
push
clc
repnz
jae
xor
sub
loopne
add
repnz
jae
add
jne
clc
repnz
jae
add
inc
clc
repnz
jae
add
add
add
add
ljmp
inc
add
fs
inc
clc
repnz
jae
add
add
fs
repnz
jae
or
add
nop
jmp
add
sbb
sub
push
mov
xchg
ret
movsl
add
add
adc
repnz
jae
add
movsl
cmp
ss
push
fwait
cld
nop
jmp
add
add
stos
decl
clc
repnz
jae
jns
push
push
pop
add
push
push
mov
xchg
ret
add
add
call
clc
repnz
jae
add
push
add
rep
clc
repnz
jae
fdivs
sbb
add
mov
push
clc
repnz
jae
add
add
add
div
fwait
cld
nop
jmp
add
add
jne
clc
repnz
jae
add
cmp
push
mov
xchg
ret
add
add
or
les
push
mov
xchg
ret
dec
add
add
fs
adc
push
fwait
cld
nop
jmp
add
add
add
jnp
leave
pushf
mov
clc
repnz
jae
jnp
jns
mov
out
push
clc
repnz
jae
add
movsl
jbe
add
xor
addb
push
push
mov
xchg
ret
add
mov
leave
xchg
sub
sar
nop
jae
add
add
dec
add
sub
jae
pop
add
dec
push
add
push
push
mov
xchg
ret
add
xor
add
je
call
xorl
add
les
jbe
mov
mov
in
add
fadds
add
or
sbb
into
and
clc
repnz
jae
fadds
sub
pusha
clc
repnz
jae
mov
cmp
jne
mov
clc
repnz
jae
sub
push
insb
push
push
mov
xchg
ret
pop
sbbl
jbe
add
add
clc
repnz
jae
xor
jae
jbe
add
mov
loop
clc
repnz
jae
add
add
jg
clc
repnz
jae
pop
add
sub
sub
add
add
aaa
add
sbb
clc
mov
clc
repnz
jae
pop
les
fs
call
add
add
repnz
jae
into
pop
ss
dec
push
clc
repnz
jae
das
lea
jnp
test
jb
frstor
xor
add
clc
repnz
jae
or
adc
repnz
jae
add
push
jnp
in
pop
scas
mov
fwait
cld
nop
jmp
ja
add
add
pop
jne
clc
repnz
jae
add
add
fwait
cld
nop
jmp
add
pop
add
pushf
add
xor
dec
pop
add
fadds
aaa
addl
jne
add
add
jns
sbb
repz
cld
nop
jmp
add
add
je
xor
icebp
lret
xor
clc
repnz
jae
add
add
jne
clc
repnz
jae
or
movl
add
enter
leave
add
fwait
cld
nop
jmp
fwait
add
pop
mov
clc
repnz
jae
jne
roll
add
mov
clc
repnz
jae
or
pop
clc
repnz
jae
add
add
add
or
loop
movb
insb
mov
clc
repnz
jae
jbe
add
sar
repnz
jae
add
jnp
add
ja
mov
fwait
cld
nop
jmp
add
add
fisttpll
nop
jae
add
add
movl
push
add
mov
clc
repnz
jae
add
pop
xor
clc
repnz
jae
add
add
jae
sbb
mov
xchg
ret
ss
movsl
aaa
mov
add
add
clc
repnz
jae
jae
add
fwait
add
add
push
clc
repnz
jae
pop
movl
add
cmp
repnz
jae
add
jbe
fwait
lcall
dec
cmp
repnz
jae
jbe
les
add
fwait
cld
nop
jmp
add
mov
add
push
clc
repnz
jae
add
cmc
jae
cwtl
lea
clc
repnz
jae
add
aaa
add
and
jmp
dec
or
enter
add
fwait
cld
nop
jmp
add
jne
add
add
clc
repnz
jae
add
je
and
push
clc
repnz
jae
push
add
add
add
aaa
cmp
je
sub
inc
roll
xchg
ret
add
cmp
and
mov
clc
repnz
jae
add
repnz
jae
add
mov
cld
nop
jmp
into
push
jns
add
pop
push
mov
xchg
ret
fcmovbe
add
add
add
sbb
test
sldt
clc
repnz
jae
add
add
add
repnz
jae
call
cmp
repnz
jae
xchg
movsl
add
add
mov
add
repnz
jae
push
add
rolb
adc
mov
shl
inc
add
gs
pop
movsl
add
mov
add
clc
repnz
jae
call
not
add
lea
clc
repnz
jae
add
les
cmpw
clc
repnz
jae
jbe
push
neg
mov
clc
repnz
jae
fwait
add
idiv
clc
repnz
jae
mov
movsl
cmp
mov
xchg
ret
cmp
test
add
int
mov
popa
clc
repnz
jae
add
jne
cmp
pushf
xor
in
into
pop
push
mov
xchg
ret
add
movsl
add
add
or
leave
roll
xchg
ret
pushf
in
cmp
add
in
push
add
lods
sbbl
add
stc
into
movzwl
clc
repnz
jae
add
add
mov
jae
add
in
add
jbe
fbld
xor
add
clc
repnz
jae
add
add
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
add
inc
inc
add
repnz
jae
add
xchg
xor
fcoml
cld
nop
jmp
aaa
push
add
or
jl
dec
push
clc
repnz
jae
add
jge
clc
repnz
jae
add
add
lret
add
fwait
cld
nop
jmp
pop
addl
enter
pop
mov
clc
repnz
jae
add
sub
push
mov
xchg
ret
sbb
add
es
pop
out
and
clc
repnz
jae
add
add
inc
push
push
add
mov
push
mov
xchg
ret
pop
push
add
sbb
add
aad
inc
add
add
cmp
cld
nop
jmp
fdivs
dec
pop
jns
add
jbe
push
push
mov
xchg
ret
add
pop
xor
add
push
mov
xchg
ret
movsl
add
add
or
clc
repnz
jae
enter
lcall
clc
repnz
jae
add
push
add
les
push
mov
xchg
ret
add
add
cmc
xor
cmpsb
add
jne
clc
repnz
jae
add
add
nop
jae
gs
push
mov
mov
clc
repnz
jae
fwait
add
movsl
jae
add
jmp
add
mov
movsl
push
push
roll
push
mov
xchg
ret
add
add
sub
fwait
cld
nop
jmp
add
add
test
in
clc
repnz
jae
add
fadds
mov
push
push
mov
xchg
ret
add
add
pop
loopne
pop
orps
repnz
jae
add
jns
add
xor
fwait
cld
nop
jmp
add
jbe
add
add
dec
stos
clc
repnz
jae
add
add
lea
add
push
mov
xchg
ret
add
jne
add
push
nop
push
mov
xchg
ret
adcl
stos
je
clc
repnz
jae
jne
jne
mov
fwait
cld
nop
jmp
add
jae
mov
add
out
push
push
mov
xchg
ret
xor
add
dec
test
add
clc
repnz
jae
add
repnz
jae
add
add
clc
repnz
jae
aaa
pop
add
jae
add
clc
repnz
jae
add
add
enter
or
clc
repnz
jae
addl
cmpsb
add
jne
clc
repnz
jae
add
mov
lret
clc
repnz
jae
add
cmc
add
mov
clc
repnz
jae
int
loopne
stos
jmp
pop
mov
mov
add
add
add
fwait
fs
cltd
cmpl
fwait
cld
nop
jmp
push
add
out
les
clc
repnz
jae
add
add
adc
repnz
jae
into
xchg
fadds
ficoml
fwait
cld
nop
jmp
call
call
add
clc
repnz
jae
add
add
mov
test
out
add
add
add
fwait
cld
nop
jmp
enter
add
xchg
ja
push
add
add
dec
clc
repnz
jae
ss
test
lea
fsubs
add
add
addl
add
add
jbe
mov
add
clc
repnz
jae
add
dec
adc
repnz
jae
add
fmull
nop
jae
add
xor
test
cmp
nop
jae
ss
loopne
jb
clc
repnz
jae
les
add
add
repnz
jae
enter
jbe
aaa
adc
repnz
jae
les
fs
adcl
mov
xchg
ret
pop
cmpsl
das
fs
add
add
clc
repnz
jae
add
jnp
add
add
out
push
clc
repnz
jae
add
add
loop
std
add
clc
repnz
jae
movsl
mov
in
das
int
add
clc
repnz
jae
add
add
outsb
ror
push
mov
xchg
ret
test
add
push
or
cld
nop
jmp
add
add
xor
cld
nop
jmp
add
xorl
add
pop
fwait
cld
nop
jmp
add
add
add
add
add
clc
repnz
jae
add
push
add
mov
clc
repnz
jae
xorl
add
add
mov
leave
fwait
cld
nop
jmp
das
add
add
add
add
mov
clc
repnz
jae
add
into
fiaddl
loopne
ret
imul
subl
inc
mov
jne
push
mov
xchg
ret
fadds
add
add
mov
nop
jae
add
pop
int
clc
repnz
jae
add
roll
add
mov
lea
push
mov
xchg
ret
push
add
cmp
push
mov
xchg
ret
add
addl
pop
and
repnz
jae
add
das
les
lds
push
mov
xchg
ret
add
cmp
fwait
add
add
clc
repnz
jae
add
jne
push
clc
repnz
jae
fiaddl
add
add
test
xor
stos
jmp
pop
loopne
cmp
add
in
jne
sub
fwait
cld
nop
jmp
mov
leave
inc
add
mov
xchg
ret
into
cmp
addl
ror
push
push
mov
xchg
ret
leave
add
add
jb
push
mov
xchg
ret
add
into
lcall
icebp
inc
add
add
add
clc
repnz
jae
dec
add
add
mov
clc
repnz
jae
add
mov
jae
fcomps
add
add
cld
nop
jmp
ja
sbb
add
clc
push
clc
repnz
jae
into
xchg
add
add
add
mov
xchg
ret
das
adcl
add
repz
mov
xchg
ret
jne
add
xor
sbb
jae
repnz
jae
add
enter
dec
mov
clc
repnz
jae
cmp
add
push
mov
xchg
ret
xchg
jae
add
add
adc
call
clc
repnz
jae
add
push
ss
pop
clc
repnz
jae
add
add
jns
add
cmpl
ljmp
ss
mov
fwait
cld
nop
jmp
add
cmc
add
add
cld
nop
jmp
add
fsubs
push
clc
repnz
jae
add
jne
add
add
imul
clc
repnz
jae
leave
add
add
jae
jl,pt
clc
repnz
jae
add
lcall
repnz
jae
add
add
xor
clc
dec
inc
clc
repnz
jae
xchg
add
aaa
xchg
popa
filds
nop
jae
mov
das
je
fucomp
sub
clc
repnz
jae
pushf
loopne
add
mov
fwait
cld
nop
jmp
add
add
add
sti
push
clc
repnz
jae
add
add
jae
loopne
std
push
push
mov
xchg
ret
add
mov
repnz
jae
add
add
add
cmpl
in
incl
fiaddl
je
add
clc
repnz
jae
addl
add
add
xor
clc
repnz
jae
fcmovbe
jne
in
addl
ja
in
jmp
add
roll
das
add
add
sbbl
icebp
clc
repnz
jae
add
pushf
test
movsl
add
mov
fwait
cld
nop
jmp
add
mov
mov
lcall
out
pushl
in
add
clc
repnz
jae
pop
addl
add
das
out
adc
mov
repnz
jae
add
add
push
jbe
pop
enter
repnz
jae
add
add
ss
add
push
push
mov
xchg
ret
sbb
add
nop
jae
add
test
adc
nop
jae
leave
add
inc
push
movsl
add
jg
stos
clc
repnz
jae
or
add
add
call
mov
xchg
ret
jne
add
mov
clc
repnz
jae
jae
inc
add
and
repnz
jae
xchg
fwait
xor
xchg
fwait
cld
nop
jmp
fadds
jbe
add
leave
clc
repnz
jae
add
movsl
and
sbb
nop
jae
add
mov
nop
jmp
fadds
add
pop
add
pop
fildl
jb
clc
repnz
jae
push
sub
sub
inc
add
das
int
add
jbe
cltd
mov
fwait
cld
nop
jmp
add
in
cmp
movsl
jbe
repz
roll
jb
test
clc
repnz
jae
jne
add
jae
add
test
fwait
cld
nop
jmp
add
cmp
loopne
mov
mov
int3
inc
add
add
dec
dec
dec
lcall
and
inc
add
fcmovb
test
jl
clc
repnz
jae
pop
jnp
pushf
jns
add
ficompl
repnz
jae
jae
ss
xchg
call
cltd
push
clc
repnz
jae
add
add
pop
clc
repnz
jae
jnp
ror
add
add
cmpl
fwait
cld
nop
jmp
inc
pop
add
or
clc
repnz
jae
aaa
cmpsl
in
adc
movsb
clc
repnz
jae
add
push
add
fwait
cld
nop
jmp
add
add
into
outsb
jne
fwait
cld
nop
jmp
add
add
movb
mov
xchg
ret
add
xchg
jae
sti
jmp
add
add
jne
call
inc
and
repnz
jae
jns
add
xchg
push
pop
call
clc
repnz
jae
loopne
add
pusha
add
fildl
xlat
inc
add
jnp
jae
das
jg
fwait
cld
nop
jmp
jae
add
add
add
cld
nop
jmp
int
ss
jbe
ss
mov
push
mov
xchg
ret
rcrl
jecxz
push
add
pop
clc
repnz
jae
jae
fidivrl
add
das
insb
push
push
mov
xchg
ret
dec
add
pushf
cmp
mov
push
mov
xchg
ret
add
add
add
xor
clc
repnz
jae
fiaddl
inc
in
imul
sbbl
loopne
cwtl
lea
fwait
cld
nop
jmp
jbe
mov
add
push
mov
xchg
ret
add
in
add
add
push
add
add
add
add
cld
add
clc
repnz
jae
addl
xor
xchg
cmp
cs
incl
add
add
into
mov
call
cltd
and
push
mov
xchg
ret
add
add
andl
mov
clc
repnz
jae
push
pop
inc
add
add
add
sub
icebp
clc
repnz
jae
orl
test
add
andl
jae
in
mov
in
mov
push
mov
xchg
ret
ss
orl
test
les
call
clc
repnz
jae
add
mov
add
push
push
mov
xchg
ret
test
sbb
push
add
cmpsb
add
push
mov
xchg
ret
add
xchg
addl
mov
and
add
mov
clc
repnz
jae
add
int
xor
clc
repnz
jae
test
call
jb
loopne
cs
clc
repnz
jae
cmpsl
xchg
enter
test
add
fwait
cld
nop
jmp
add
add
out
inc
add
jnp
add
add
xchg
add
push
mov
xchg
ret
add
mov
pushf
add
stc
test
fwait
cld
nop
jmp
add
jbe
push
add
scas
mov
push
mov
xchg
ret
push
jnp
add
add
testb
mov
clc
repnz
jae
jae
xor
jne
push
mov
xchg
ret
push
add
jbe
jg
sar
nop
jae
add
add
jae
add
add
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
in
push
test
rorl
fwait
cld
nop
jmp
add
jbe
add
jbe
clc
repnz
jae
movsl
add
pop
add
add
clc
repnz
jae
add
jns
pop
popl
clc
repnz
jae
add
pushf
rep
push
mov
xchg
ret
les
lret
dec
clc
repnz
jae
or
jne
mov
clc
repnz
jae
cmp
add
fwait
cld
nop
jmp
mov
jbe
pop
add
xor
and
mov
clc
repnz
jae
add
add
ja
add
adc
cltd
call
clc
repnz
jae
add
add
lret
call
clc
repnz
jae
add
shll
and
mov
push
mov
xchg
ret
add
add
add
and
push
mov
xchg
ret
add
add
lock
fisttpl
jae
jnp
das
pop
aaa
jns
shrl
push
clc
repnz
jae
jns
pop
add
add
in
mov
clc
repnz
jae
loopne
push
pushf
dec
sub
fwait
cld
nop
jmp
int
add
in
addl
imul
clc
repnz
jae
into
loopne
fwait
add
jne
mov
clc
repnz
jae
add
pop
enter
lock
jmp
add
add
add
int
sbb
out
rep
clc
repnz
jae
test
pop
mov
cmp
jbe
cltd
add
push
mov
xchg
ret
movsl
push
sbb
subl
dec
jmp
add
movzwl
clc
repnz
jae
add
jnp
das
das
mov
clc
repnz
jae
add
mov
into
jmp
mov
add
add
add
mov
add
repnz
jae
add
fwait
movsl
add
cld
nop
jmp
xor
add
add
add
add
clc
repnz
jae
add
dec
add
sahf
push
push
mov
xchg
ret
add
mov
mov
test
hlt
clc
repnz
jae
dec
add
push
mov
clc
repnz
jae
add
add
adc
clc
repnz
jae
add
add
push
push
mov
xchg
ret
jbe
add
push
cmc
add
add
ss
cmp
nop
jae
add
mov
fs
movsb
add
nop
jae
movsl
call
shr
add
push
mov
xchg
ret
push
add
add
mov
push
mov
xchg
ret
add
add
add
add
add
in
incl
add
add
inc
inc
add
clc
repnz
jae
pop
jnp
or
jbe
xor
nop
jmp
pop
add
addl
pop
add
loopne
clc
repnz
jae
sbb
add
mov
push
clc
repnz
jae
add
lcall
test
in
clc
repnz
jae
jbe
add
add
push
mov
xchg
ret
cmc
add
add
fwait
cld
nop
jmp
add
add
call
xchg
jmp
clc
repnz
jae
ja
cmpsl
nop
add
fwait
cld
nop
jmp
xchg
ficoml
add
pop
mov
push
mov
xchg
ret
add
test
fwait
cld
nop
jmp
sub
adc
push
mov
xchg
ret
push
add
or
jle
add
add
add
pop
add
add
fwait
cld
nop
jmp
dec
add
add
lahf
mov
push
mov
xchg
ret
into
add
pusha
clc
repnz
jae
add
jnp
mov
mov
xchg
ret
pop
push
movsl
roll
add
fcoms
cld
nop
jmp
jbe
add
add
add
add
add
clc
repnz
jae
addl
jnp
call
repnz
jae
add
add
xor
mov
decl
clc
repnz
jae
add
add
add
fwait
cld
nop
jmp
add
lcall
jmp
clc
repnz
jae
jne
add
clc
repnz
jae
add
add
movsl
out
popa
clc
repnz
jae
add
add
pop
add
xor
repnz
jae
add
cmp
mov
clc
repnz
jae
cmpsl
add
or
nop
jae
jbe
add
pop
push
xchg
jle
add
clc
repnz
jae
or
add
add
mov
push
fwait
cld
nop
jmp
pop
dec
xor
cmpl
movzwl
clc
repnz
jae
add
add
xchg
clc
repnz
jae
add
pop
add
dec
aad
rol
push
mov
xchg
ret
test
movzwl
clc
repnz
jae
add
pop
sub
gs
add
add
repnz
jae
xor
dec
add
das
add
mov
or
clc
repnz
jae
add
push
fwait
cld
nop
jmp
add
cmp
add
sub
in
imul
shrb
cmp
inc
add
lret
add
add
pop
mov
push
mov
xchg
ret
add
cmp
test
clc
repnz
jae
add
fsubr
sub
clc
repnz
jae
sub
add
push
clc
repnz
jae
add
fisubl
out
clc
repnz
jae
int
add
push
push
mov
xchg
ret
push
add
add
jae
add
popa
clc
repnz
jae
add
mov
adc
sub
repnz
jae
add
xor
clc
repnz
jae
add
add
add
mull
add
ss
add
add
jae
sub
jnp
xorl
mov
clc
repnz
jae
movl
fstps
cld
nop
jmp
sub
test
add
add
clc
repnz
jae
dec
dec
test
jnp
test
jno
inc
add
into
jae
add
cmp
clc
repnz
jae
add
jae
add
add
mov
fwait
cld
nop
jmp
add
add
movl
clc
repnz
jae
movsl
add
gs
mov
and
push
mov
xchg
ret
add
pop
add
jmp
add
jbe
cmp
add
adc
mov
nop
jae
leave
add
xor
add
addb
pushl
clc
repnz
jae
add
inc
add
fdivrs
clc
repnz
jae
add
add
xchg
rolb
shrl
mov
fwait
cld
nop
jmp
xor
add
add
in
mov
popa
adc
mov
pop
add
add
add
jns
add
add
fmull
add
test
push
jp
outsl
jp
add
add
outsb
psubw
mov
add
add
mov
mov
repnz
add
xor
mov
lcall
mov
pop
xor
ja
aad
add
push
adc
push
add
cmp
lsl
lahf
pushf
add
or
or
je
stos
test
mov
bound
mov
add
add
and
mov
testb
cltd
ja
xor
adc
mov
ds
jns,pn
add
add
or
mov
add
sub
clc
stos
daa
push
sbb
cmp
scas
pop
xor
lret
xchg
imul
dec
addb
dec
cmpsb
add
push
inc
icebp
jg,pt
add
lahf
js
fidivl
mov
test
xor
pop
mov
add
add
xchg
mov
out
add
add
add
orl
add
sbbl
or
add
xlat
xor
add
xor
mov
add
cmp
data16
mov
jns
add
cmp
xor
xor
add
mov
aas
add
add
mov
jp
xor
repnz
or
mov
mov
scas
pop
xor
cli
mov
push
add
pop
outsl
addr16
jns
add
mov
in
dec
or
and
cmp
pop
in
ja
add
mov
ret
add
pop
rolb
sbb
sarl
data16
imul
add
add
add
add
mov
clc
out
data16
out
push
rol
add
int3
xor
jge
mov
std
cmp
mov
add
add
cmp
out
and
mov
rcll
imul
int
add
mov
jmp
mov
push
add
jl
add
inc
add
dec
mov
add
dec
cmc
std
rolb
xor
inc
add
rorl
push
add
imul
pushf
push
add
frstor
add
pop
sub
into
movsl
mov
mov
stos
call
ret
add
add
test
fsubrs
xlat
xor
loope
out
les
mov
fistpll
je
or
js
add
add
pop
jp
add
loope
dec
jb
stc
addb
add
xor
sub
sub
inc
add
shll
add
xlat
ss
sbb
inc
dec
pusha
add
mov
in
adc
jb
jnp
hlt
add
add
aaa
aam
js
lahf
mov
mov
adc
mov
xchg
push
mov
jae
jg
add
int
add
add
test
and
add
pop
pusha
add
and
xchg
add
scas
das
hlt
add
add
inc
add
add
sbb
add
out
sub
push
movb
gs
and
call
cld
add
add
add
push
add
inc
mov
add
add
std
adc
pop
add
add
cld
aad
out
push
add
add
add
nop
add
dec
push
xchg
fstpt
mov
sub
bound
mov
inc
cmpsb
add
in
inc
dec
adc
ret
hlt
add
pushf
sbb
mov
push
movsl
addb
in
or
testb
jmp
cmpsb
add
push
imul
addl
fdivs
push
roll
mov
add
out
fcmovu
cmp
cmc
add
push
sbb
mov
dec
dec
mov
das
push
or
add
pop
popf
add
mov
mov
mov
add
lock
mov
sub
add
pop
cltd
fisttps
testb
fmulp
fisttpll
frstor
cmpsl
cmp
add
mov
sbbl
add
test
outsb
adc
add
inc
push
add
bound
mov
cmc
dec
mov
jle
push
jno
repz
jb
pusha
add
aaa
repnz
add
add
xchg
add
xchg
add
add
in
add
adc
jb
loope
dec
int3
into
push
add
add
addl
add
add
jb
cmp
push
push
add
out
roll
xchg
scas
or
add
add
jl
add
mov
mov
ret
loop
enter
fnstsw
daa
enter
add
mov
push
add
shll
pop
addb
pop
fistpl
inc
add
bound
mov
popa
cltd
pop
fnsave
cmpsl
sub
add
or
pop
scas
aam
or
add
push
add
add
addr16
ja
add
cwtl
mov
and
test
jecxz
add
js
in
insb
add
mov
xor
lock
push
add
loope
outsb
into
rolb
filds
arpl
add
add
mov
xchg
and
mov
sub
mov
movsl
in
cmpl
out
cmp
mov
sbb
dec
add
xor
arpl
add
xchg
add
xchg
pushf
dec
test
jmp
cmp
add
xchg
add
clc
add
mov
movsl
pop
xchg
enter
lahf
mov
add
ret
lods
js
mov
dec
xchg
stc
pop
mov
add
dec
sub
lods
ljmp
mov
add
push
cwtl
leave
push
add
add
clc
push
add
lods
out
mov
repnz
popa
mov
outsb
cwtl
inc
dec
jo
arpl
add
test
fidivrl
push
stc
mov
dec
movb
add
xor
jmp
lods
or
add
cwtl
rolb
sub
dec
and
mov
add
enter
mov
stc
add
dec
sub
rolb
add
dec
rolb
add
testb
and
xchg
add
sub
cli
push
and
mov
mov
pop
enter
adc
and
adc
mov
mov
scas
out
add
add
icebp
test
add
inc
add
shl
add
cmp
in
add
scas
mov
dec
addb
add
add
les
xchg
add
add
outsb
aad
add
inc
orl
cmp
xchg
scas
sbb
add
mov
push
fiadds
add
cmp
mov
je
les
jne
add
insb
jl
mov
bound
mov
fstl
mov
test
add
add
test
sbb
lock
paddsw
je
cmpsl
into
push
iret
pop
shll
cs
mov
mov
fwait
pusha
add
xlat
sub
add
out
pop
push
and
cld
jae
fnstcw
lret
hlt
add
sub
push
mov
pop
in
add
mov
loope
insl
xor
xor
sbb
mov
inc
add
add
xchg
add
insl
pop
inc
add
add
pop
hlt
add
add
add
sbb
fcomps
adc
pusha
add
jge
jnp
cmp
add
sub
jb
hlt
add
dec
std
fcompl
nop
add
repz
cld
jno
mov
inc
add
pop
lea
add
popf
mov
add
lea
add
fwait
pusha
add
add
arpl
jbe
xchg
jb
push
rcl
xor
lahf
push
push
test
out
dec
imul
inc
add
in
cs
add
shr
aam
rolb
mov
add
add
mov
dec
xchg
inc
add
adc
les
sub
cli
in
loopne
push
mov
add
push
xchg
insb
js
add
add
mov
add
add
add
insb
jbe
adc
xor
push
add
fidivrs
insb
dec
adc
adc
loop
inc
add
push
xchg
jl
add
mov
sub
addb
movsb
add
xchg
add
xchg
lods
not
add
mov
xchg
xchg
stc
scas
mov
mov
lods
mov
pushf
repnz
lret
xor
movsl
xchg
repnz
jg
add
inc
add
scas
ja
adc
imul
loopne
aaa
pop
sbb
mov
add
insl
adc
or
adc
mov
add
stos
int
add
lret
add
dec
fadds
add
add
pop
fistpll
mov
add
cmp
pusha
add
test
out
mov
sbb
sub
mov
add
add
push
sub
sub
add
mov
and
aam
pushf
dec
add
mov
addb
push
add
cld
fmul
icebp
dec
scas
cmp
ljmp
dec
rolb
dec
mov
add
sub
mov
add
add
adc
dec
clc
into
mov
xor
mov
sbb
add
pop
mov
add
stos
mov
mov
add
or
ret
xchg
add
mov
into
or
add
mov
sbb
and
add
or
mov
or
jmp
mov
add
popa
stos
fidivrl
inc
call
or
dec
sub
pop
cli
push
cwtl
pop
xchg
jg
add
push
add
add
popa
repnz
les
jnp
dec
mov
add
add
icebp
pop
pop
xor
mov
add
cltd
dec
add
aam
addb
cmc
sbb
lret
mov
add
add
dec
ljmp
lret
push
icebp
in
in
lcall
rcll
add
pop
push
pop
lds
add
rolb
add
add
mov
add
mov
loope
jbe
loope
add
and
mov
test
insl
pop
push
add
add
mov
or
and
add
and
insb
adc
push
gs
xchg
and
mov
xchg
add
add
jg
dec
insb
lret
repnz
mov
xor
test
add
add
pop
inc
dec
stc
dec
data16
xchg
mull
xchg
sbb
add
add
push
cs
add
repz
scas
push
add
inc
add
sbb
stos
rolb
int
nop
add
mov
cmc
jp
add
add
dec
xor
add
test
mov
push
push
imul
add
sub
inc
and
je
pop
lods
js
outsb
mov
mov
cli
xchg
add
mov
lret
iret
das
push
add
inc
add
xor
add
jmp
add
pop
test
mov
inc
sub
imul
icebp
xor
pusha
add
mov
mov
add
sbb
mov
add
mov
add
add
jae
add
mov
xlat
adc
popa
xchg
add
xchg
add
or
push
add
add
inc
add
into
js
mov
out
xchg
cmp
dec
lret
add
add
outsb
nop
add
pop
mov
add
add
lahf
add
mov
xchg
cmc
add
jne
call
arpl
push
add
add
add
add
mov
jnp
repnz
in
bound
mov
add
or
add
cmp
pushf
inc
add
addr16
adc
add
test
roll
mov
xchg
adc
mov
add
add
dec
pop
bound
mov
add
je
inc
add
flds
frstor
xor
push
add
andl
lret
add
subl
insb
mov
les
adc
push
push
add
cmp
add
add
cmp
movsb
add
stos
int3
inc
add
dec
incb
sbb
dec
mov
insl
dec
pop
cmp
ss
in
add
nop
add
xchg
xor
fisubrl
dec
jo
mov
add
mov
cmpsb
add
mov
add
test
jg
mov
add
mov
mov
std
xor
mov
adc
add
push
add
mov
aam
dec
cmp
add
ljmp
pop
add
mov
in
fidivrl
adc
add
add
sbb
push
lcall
cmp
dec
inc
add
lret
cwtl
jae
sub
or
and
aas
adc
popa
xorl
add
add
add
mov
add
cmp
or
iret
pop
cmpsb
add
imul
push
add
icebp
push
add
in
outsb
mov
movb
repz
add
mov
add
push
addb
add
sub
movsb
add
inc
add
sub
mov
or
xchg
cwtl
cmp
inc
sub
add
ljmp
cwtl
pop
sub
add
stos
fwait
xchg
dec
test
mov
push
js
mov
testb
ret
and
pop
jo
push
add
orl
cmp
js
movsl
mov
add
sti
and
mov
dec
stc
aam
push
in
push
enter
xor
mov
out
out
and
add
jns
cs
addr16
cmp
xlat
sbb
add
adc
movsl
jl
mov
jp
add
xorl
add
add
add
mov
push
add
aam
std
cmp
dec
xor
cmp
les
push
add
mov
cmpsl
insb
xor
sbb
xor
testb
jne
add
add
mov
ret
add
or
addb
mov
shl
je
adc
xchg
xor
lock
mov
push
mov
mov
adc
jge
mov
add
inc
shll
addb
les
enter
roll
fidivs
xchg
add
mov
sahf
adc
adc
or
fiadds
cmp
imul
sub
add
mov
and
mov
xchg
add
add
popf
stos
pop
pop
xchg
add
add
add
mov
add
add
sub
sub
into
and
and
mov
dec
push
mov
xor
clc
mov
add
mov
push
mov
arpl
add
mov
loope
push
add
xchg
cmp
pop
imul
fcmove
sub
add
pop
ljmp
es
xchg
mov
xor
daa
insb
inc
add
in
out
cmp
mov
add
xor
cmp
testb
stc
sbb
add
pop
jbe
or
lret
and
xchg
add
mov
add
popf
pushf
xchg
add
jne
push
add
mov
data16
sbb
dec
mov
sbb
add
adc
mov
icebp
das
jmp
add
sub
fildll
into
and
inc
add
cmp
add
add
les
lret
mov
pop
inc
add
add
sbb
sub
add
xor
jecxz
loopne
loop
push
inc
add
gs
pusha
add
fldcw
adc
cld
push
gs
add
push
add
inc
adc
cmpsb
add
in
daa
mov
test
add
arpl
mov
sbb
add
add
add
lea
xor
adc
movsl
xchg
add
fistps
or
push
add
stos
mov
pop
and
add
bound
mov
out
icebp
rcll
addb
xchg
andl
add
adc
cmpsb
add
add
jle
or
add
cmp
cld
xchg
dec
lds
jecxz
mov
cmp
cli
mov
push
add
dec
jne
mov
in
outsb
push
add
xorl
out
out
add
fidivs
add
in
test
mov
ds
mov
push
add
dec
jbe
xchg
out
testb
and
mov
fwait
xor
stc
cmpsb
add
add
hlt
add
add
repz
in
push
jbe
pop
mov
add
loop
push
das
jp
sub
add
clc
mov
dec
push
push
add
mov
push
shrl
mov
inc
adc
dec
xorl
jle
sub
addr16
add
add
xlat
dec
lret
add
cld
inc
les
cmp
out
out
pop
push
aad
add
add
std
jmp
xlat
stos
stos
mov
in
cmp
dec
dec
adc
mov
rolb
or
movsb
add
dec
push
add
jle
mov
movsl
push
add
fists
mov
movsl
sub
mov
mov
jb
les
adc
fwait
add
mov
push
add
dec
jg
cmp
or
cmp
les
hlt
add
xlat
jmp
dec
or
aad
lea
addb
adc
and
hlt
add
mov
mov
fimuls
stos
lret
aad
add
pop
jl
mov
out
xchg
add
mov
mov
dec
push
mov
outsb
aam
xor
adc
cmp
cli
push
xor
lahf
outsb
sbb
pop
jmp
add
jge
add
add
and
mov
fidivrl
data16
add
add
adc
shll
push
movsb
add
outsb
cmp
mov
in
sbb
sbb
xor
pushf
in
add
jbe
les
push
adc
in
add
mov
push
jle
cli
addb
push
inc
addb
stos
addr16
add
and
add
scas
mov
stos
push
add
add
fisttps
add
mov
dec
fisubrs
and
add
mov
insb
stos
adc
and
mov
sbb
add
adc
mov
add
add
addb
add
inc
push
dec
xchg
in
insb
test
push
je
fimuls
xchg
add
movsl
sub
inc
rorl
pop
cmp
xchg
jmp
add
add
sbb
rolb
pop
push
add
pop
sti
mov
add
or
jmp
xchg
mov
addb
jge
add
lret
imul
dec
aas
jg
jg
add
inc
ret
mov
mov
repz
iret
sub
add
addb
add
inc
pusha
add
je
fisubl
dec
push
mov
icebp
dec
icebp
xchg
add
add
mov
and
mov
add
mov
mov
test
xor
push
add
xchg
add
sahf
mov
jg
filds
add
pop
inc
add
cmp
dec
mov
shll
add
repz
sahf
dec
xor
mov
daa
sub
push
dec
xor
dec
stos
lods
pop
outsl
jge
and
pop
jp
cmp
dec
mov
inc
mov
scas
jne
lahf
mov
pop
add
mov
out
add
mov
xchg
push
idivl
add
rolb
mov
inc
daa
dec
enter
bound
mov
fmul
xlat
add
add
cmpsb
add
xor
lods
xchg
add
add
xlat
push
add
add
xchg
and
add
mov
gs
add
xchg
add
add
add
mov
mov
rorl
fistpl
add
sbb
add
sub
add
add
ljmp
pop
dec
inc
add
add
fwait
and
add
aas
mov
insb
sbb
mov
stos
mov
cmp
stos
gs
dec
jo
popa
mov
lods
dec
adc
xchg
add
jnp
add
pop
cmp
mov
add
add
add
and
test
add
add
out
inc
add
push
add
add
es
les
add
pop
mov
push
add
inc
jp
rolb
inc
jp
repz
add
test
xchg
sbb
sub
pop
and
outsl
pop
stos
fsubl
mov
imul
add
sub
aad
add
jl
movb
fwait
pop
or
std
and
mov
std
outsb
loop
mov
add
fnsave
add
and
mov
pusha
add
pop
push
add
xor
sbb
and
and
add
mov
mov
mov
add
add
outsb
les
mov
clc
jno
dec
sbb
add
and
fdivrs
cmp
add
add
sbb
sbb
jmp
aam
in
pop
pop
inc
mov
aaa
mov
in
subl
sbb
cmp
dec
add
add
xor
xor
cwtl
popf
add
inc
add
in
dec
popa
pop
dec
dec
rolb
pop
imul
fsubp
xchg
loopne
testb
jmp
mov
lods
push
jp
fcompl
add
ds
cs
testb
mov
adc
imul
mov
adc
mov
add
fdivs
pusha
add
insb
jl,pn
fmuls
or
pxor
je
mov
call
sub
mov
pop
popf
cld
inc
add
or
mov
mov
rolb
add
sbb
add
add
test
faddl
add
sbb
add
bound
mov
out
push
add
add
gs
add
cmp
add
lods
sbb
mov
gs
inc
add
sub
or
push
aas
jbe
lods
cmpl
sub
insb
mov
mov
pop
test
add
add
mov
pop
mov
call
or
mov
add
mov
sub
add
cs
pusha
add
idivl
add
adc
pop
and
mov
add
iret
push
inc
imul
fdivr
and
add
xlat
shll
or
mov
add
xor
shl
add
and
mov
add
cmp
xchg
cmpsl
pushf
popf
ljmp
dec
and
sub
sub
add
sbb
pop
loop
xor
add
rolb
or
add
cmc
cltd
xor
add
mov
xor
imul
cmpl
inc
stc
jno
add
stc
sbb
stos
ror
add
add
test
add
movsl
popf
xchg
add
mov
add
add
sahf
rolb
scas
and
mov
adc
sbb
add
insb
hlt
add
add
or
add
add
pop
fidivl
sub
sub
fucomp
sahf
push
xor
pop
xchg
add
add
mov
scas
bound
mov
rolb
ficomps
sub
clc
or
add
fsubs
rolb
jmp
rorl
inc
add
or
loopne
cltd
cmp
icebp
pop
push
lock
add
sub
add
pop
dec
xor
xor
add
jne
addb
pop
add
add
rolb
add
add
lahf
cli
sbb
pop
pop
daa
test
sub
cmp
jecxz
sbb
ds
jmp
mov
or
xchg
add
dec
fwait
out
js
jbe
add
xchg
add
and
mov
add
xchg
repnz
add
dec
adc
mov
mov
xchg
insb
stc
xor
cmp
add
push
pusha
add
add
mov
rolb
arpl
adc
sbbl
add
add
adc
add
ss
pop
out
loop
in
sbb
sub
imul
je
push
add
xchg
repz
jp
add
xchg
add
add
add
sbb
dec
inc
add
pop
daa
imul
jmp
add
mov
xchg
add
add
lea
mov
add
dec
add
cmp
mov
lret
mov
or
pop
mov
scas
imul
add
mov
add
mov
xchg
add
add
jo
or
loopne
fisttpl
add
inc
jl
imul
sbb
add
add
inc
add
mov
push
add
mov
mov
imul
mov
inc
lds
fstpt
or
add
add
add
icebp
cltd
pop
cltd
not
add
cltd
sbb
jbe
fcomps
jo
testl
add
add
pusha
add
aaa
mov
cltd
test
add
int
add
xor
das
aas
rolb
inc
jge
ficoml
sti
rep
add
repnz
daa
mov
pop
dec
mov
mov
add
add
adc
lods
stos
les
jp
pop
addl
adcl
sbb
jo
jo
lret
popf
scas
in
das
mov
fisubrs
cwtl
mov
jle
fiaddl
add
xchg
mov
sub
add
or
add
inc
jge
add
dec
mov
add
add
mov
pop
cld
dec
or
bound
mov
xor
inc
add
add
mov
jle
js
hlt
add
inc
cmpsb
add
dec
pop
scas
outsb
in
popa
jnp
xchg
xor
xchg
hlt
add
add
xor
xor
insl
inc
sub
add
inc
add
push
push
mov
push
add
into
add
imul
mov
pop
lock
add
or
mov
sub
mov
add
add
jl
inc
call
add
lcall
scas
mov
shrl
sub
out
scas
addb
push
xor
mov
scas
lock
movsl
cmpsb
add
and
ds
aam
adc
je
imul
lcall
fmuls
jge
mov
pop
mov
xchg
decb
or
les
popf
xor
out
adc
int
add
dec
test
xchg
ret
mov
sub
add
xchg
add
add
mov
lods
mov
cmp
lods
bound
mov
fdivs
addb
mov
add
inc
sbb
xchg
cmpl
addb
add
sub
scas
cmp
add
push
addb
jns
add
imul
xchg
add
out
mov
inc
add
add
lahf
cmpsb
add
cmp
and
add
mov
out
mov
add
sub
add
xor
or
jb
popa
fsubs
mov
movsb
add
and
jecxz
xchg
adc
rol
add
fdiv
sbb
cvttps2pi
xchg
out
jb
fidivrl
jno
add
cmp
add
push
pop
dec
inc
add
add
add
xchg
fadds
xor
insb
and
sub
ret
stos
jbe
loop
es
andl
aam
push
rolb
int
pop
mov
jmp
add
cmp
dec
imul
xor
add
aaa
pop
hlt
add
out
aas
cmc
push
ds
adc
add
add
add
xor
mov
in
xchg
add
add
loopne
and
and
and
mov
xchg
inc
add
das
aaa
mov
adc
aad
and
mov
clc
mov
add
jae
mov
add
mov
add
push
add
jle
in
jmp
add
ds
rolb
jbe
mov
mov
sbb
ja
add
jne
add
repnz
add
jl
mov
dec
cltd
lods
rolb
add
rolb
ret
pop
movl
js
add
int
or
cmp
add
sub
test
push
add
outsl
mov
stc
mov
out
imul
add
cld
les
sub
icebp
dec
testb
rorl
adc
xor
mov
push
add
add
pop
in
jle
push
xchg
in
or
dec
dec
pop
movb
add
mov
add
sub
mov
pushf
sbb
mov
add
lods
xchg
or
mov
add
pusha
add
jo
or
call
jge
ffree
jno
pop
cmpsl
dec
repnz
xor
popl
jnp
pusha
add
aaa
mov
dec
ficoms
add
test
pop
sbb
add
sub
add
notl
fmuls
inc
push
add
add
mov
add
mov
sti
add
sub
add
add
lahf
inc
add
lcall
add
cmpsb
add
int3
pop
cmp
sbb
add
xchg
pusha
add
out
add
add
pop
cmpsb
add
rolb
sub
in
mov
rolb
push
call
push
add
cmp
mov
fistl
add
addr16
test
mov
add
jbe
call
push
add
lods
push
mov
inc
adc
push
add
icebp
lcall
mov
jo
mov
inc
inc
popf
xchg
lods
cmpsb
add
pushf
in
test
addb
sti
mov
loop
push
andl
outsb
out
into
mov
add
hlt
add
xchg
add
dec
sub
add
add
cmp
add
add
lock
and
mov
aaa
xchg
add
add
xchg
add
pop
cmp
into
cmp
add
mov
enter
cltd
rorl
push
add
add
dec
dec
mov
add
lret
cmp
add
add
xor
pop
ret
add
mov
add
add
inc
adc
lret
addb
lret
pop
dec
cli
ja
mov
mov
push
add
sub
cmp
push
add
out
aam
rolb
inc
add
add
mov
cmp
add
scas
pop
mov
mov
add
push
and
mov
mov
cmpsb
add
jbe
add
mov
add
add
daa
lds
int3
mov
inc
mov
push
jne
sbb
add
jp
and
and
int3
int
into
lock
rcrl
xchg
movsb
add
ret
insb
mov
sub
add
daa
idivl
add
add
cli
out
rolb
out
cmp
add
add
jnp
add
cmpsb
add
add
push
mov
xor
mov
inc
mov
and
mov
cmpsb
add
add
add
leave
clc
sub
add
add
outsl
leave
fldcw
out
lcall
subl
pop
movsb
add
sbb
rolb
xchg
stos
sbb
add
pop
call
call
push
add
push
daa
push
nop
add
push
xchg
jmp
or
sub
cmp
stos
push
add
xchg
add
mov
add
xchg
xor
pop
adc
mov
add
xlat
mov
xchg
int3
push
lods
and
mov
jmp
add
movsb
add
arpl
add
addb
add
cmp
pop
sbb
push
add
sub
mov
ja
pop
pop
push
push
xor
addb
aam
clc
aaa
loope
shll
mov
add
pushf
ja
and
mov
add
xchg
add
inc
add
xchg
add
inc
imul
ret
lock
movb
add
loope
mov
insl
leave
stc
xor
push
outsl
xor
cli
mov
std
and
push
sbb
out
xchg
add
add
add
in
add
xor
sar
jg
ja
rolb
or
add
addb
dec
pushl
add
add
sub
arpl
inc
pop
mov
les
scas
mov
dec
loop
adc
add
std
pop
dec
xorl
mov
push
lock
inc
add
push
add
movb
loopne
adc
add
jle
notl
sub
mov
test
add
mov
stos
push
out
push
add
pop
test
scas
popa
and
mov
repnz
jbe
mov
pop
in
jmp
mov
add
cld
dec
cmovne
add
lcall
add
stos
sub
repnz
push
dec
add
ja
xchg
xchg
dec
aam
jne
mull
add
sub
adc
fwait
xlat
xchg
fistpll
repz
aas
mov
jl
lret
pop
movsl
adc
outsb
mov
mov
movsb
add
add
mov
gs
add
add
lock
std
add
jo
mov
jo
pop
rolb
push
inc
add
add
mov
jnp
add
add
push
das
jmp
insb
popf
adc
add
out
ljmp
add
les
lret
add
add
sahf
adc
cmp
cld
stos
or
mov
jnp
pop
add
mov
add
xor
pop
movsb
add
sub
xor
aam
rcll
pop
js
add
add
add
mov
or
hlt
add
xchg
add
add
ss
push
add
mov
adc
imul
iret
pop
movsl
rolb
lds
push
push
add
cmc
lret
sub
add
mov
lcall
or
daa
pop
mov
lods
xor
jno
sub
mov
addb
sbb
inc
out
in
shrl
iret
gs
stos
xor
add
inc
add
add
syscall
jne
stos
test
cltd
lahf
xor
add
sub
filds
dec
mov
nop
add
add
add
jns
add
xchg
add
cltd
pop
add
mov
lret
cmp
add
mov
add
test
popa
lock
push
sbb
ret
add
dec
dec
adc
cmc
les
or
into
mov
montmul
cmpsb
add
pop
addb
rolb
cli
jge
or
push
add
mov
mov
mov
pop
pusha
add
add
mov
fwait
sub
sbb
popf
inc
add
push
rorl
inc
add
xchg
add
add
add
das
mov
test
or
pop
hlt
add
add
jbe
push
push
mov
pop
lahf
mov
ja
test
lea
push
add
lcall
dec
arpl
adc
mov
add
call
push
cwtl
xchg
cwtl
data16
lret
insl
lret
xorl
mov
mov
pop
sbb
add
cmp
add
add
insb
les
setb
add
add
pop
push
add
add
cltd
frstor
fldcw
add
mov
add
mov
jge
sbb
jns
add
mov
jb
test
mov
jbe
rolb
cli
lcall
fldenv
outsb
mov
rolb
add
lcall
add
push
cmp
inc
in
cmp
in
add
inc
add
sub
or
and
in
push
int3
mov
jnp
fldl
je
xor
std
cmpsl
xor
add
xchg
add
pop
sub
jb
push
test
pop
fld
add
xor
add
aam
jne
call
aam
sti
call
mov
add
push
add
leave
imull
add
add
mov
addb
fsubs
push
add
or
fwait
test
xchg
mov
sbb
stos
and
cld
cs
ret
and
ds
mov
jp
loope
add
movb
add
fimull
pop
and
sub
add
or
test
xor
mov
xor
dec
fisttpll
add
add
sti
dec
jge
sbb
add
movb
cli
jno
cmpsl
out
stos
jns
add
and
pushf
fcoml
xchg
jge
sbb
in
sbb
push
ret
inc
movb
jne
sti
mov
add
dec
mov
xchg
lahf
stos
cmp
adc
addb
jns
add
adc
xchg
add
in
js
into
sub
add
in
test
sub
add
pop
bound
mov
mov
mov
mov
lds
mov
sub
mov
test
inc
add
cmpsl
pop
imul
in
mov
and
xchg
sub
add
in
pop
fldl
jp
pop
les
mov
inc
cmp
xor
scas
cli
popf
push
pop
scas
flds
in
das
mov
add
mov
mov
ret
push
pushl
add
fistl
add
frstor
in
dec
test
mov
fstps
xchg
add
push
loop
pop
bound
mov
les
mov
divl
testl
jecxz
add
add
mov
add
pop
shr
lock
add
add
add
xor
aad
addb
add
add
popf
cmpsb
add
jbe
cld
push
add
mov
push
cmc
add
rolb
adc
jb
jge
xor
lret
dec
jg
push
mov
gs
xchg
add
bound
mov
adc
mov
add
add
mov
addb
jge
adc
pop
iret
cltd
movb
leave
pop
pop
out
test
pop
addb
add
sbb
push
jecxz
sbb
cmp
mov
add
add
mov
fdivs
lret
push
add
mov
filds
inc
add
pop
mov
jnp
aad
add
movsl
je
movsb
add
add
sarl
sbb
push
add
add
inc
add
lods
add
mov
add
push
add
add
push
adc
sub
add
arpl
jmp
jb
xchg
add
int
addr16
test
and
sub
xchg
ret
insl
mov
call
ret
lods
adc
xor
int
cld
xchg
testb
add
aad
add
rorl
stos
sbb
add
xchg
jle
ret
jno
js
mov
pop
sub
add
je
dec
aad
add
mov
cwtl
jmp
inc
add
cmpsl
mov
ja
add
sbb
add
add
dec
rolb
fildl
ret
fcomip
test
add
add
add
fwait
cli
in
dec
sub
addb
mov
cltd
mov
cmp
ds
mov
adc
mov
dec
movsl
mov
fisttpll
sbb
mov
shll
add
add
push
add
stc
test
add
aaa
xchg
inc
add
or
mov
cmp
clc
loopne
push
jb
pop
call
inc
add
insb
push
push
add
mov
ret
dec
test
pop
lods
clc
adc
xlat
daa
movsb
add
mov
add
ja
xchg
adc
push
add
ss
mov
and
cwtl
es
add
pop
pop
hlt
add
add
cmpsb
add
outsl
lock
add
mov
sahf
xor
cmp
pop
xor
mov
icebp
incb
add
add
loope
push
ret
inc
add
dec
cs
add
rcrl
xchg
push
add
add
xor
dec
jecxz
mov
jl
pop
xor
dec
xchg
sahf
jo
jecxz
dec
adc
faddp
xchg
rolb
lret
addb
daa
lret
inc
add
les
sbb
outsl
xchg
inc
add
and
xchg
mov
dec
loopne
add
mov
push
inc
add
movb
shl
add
mov
out
sbb
add
fsubrl
add
mov
sub
xor
inc
add
push
add
testb
push
add
add
fcmovnu
pop
int
add
leave
fwait
mov
add
cltd
mov
scas
or
add
pop
mov
add
dec
and
jae
and
or
add
pop
adc
sbb
add
fstps
mov
lahf
xor
sbb
cltd
mov
stos
icebp
bound
mov
test
xor
add
mov
cwtl
sub
xor
in
jmp
dec
mov
test
call
or
xchg
add
mov
cmp
pop
rep
popa
fwait
xchg
or
mov
js
xlat
lods
add
sahf
add
aas
rolb
cmc
mov
lock
stos
sub
add
in
dec
aaa
push
add
push
adc
push
add
add
add
hlt
add
pop
ljmp
add
rcll
add
jb
cmp
mov
push
add
lret
add
xor
mov
push
add
cmp
add
aaa
int
nop
add
add
xchg
sbb
mov
out
sub
push
or
jbe
movsl
push
inc
add
add
ja
mov
mov
out
jmp
dec
ds
out
sbb
addr16
add
aam
insl
jp
pop
xchg
add
pushf
cmp
and
fs
out
inc
hlt
add
sbb
dec
test
fcompl
add
inc
add
in
add
lods
mov
testb
or
mov
pop
addl
data16
or
mov
add
fsubrs
std
ret
sbb
add
push
add
dec
xor
stc
mov
xchg
ds
add
repnz
and
testb
pop
aad
jge
add
add
xor
jmp
push
mov
rcr
out
push
add
addb
jle
sub
daa
mov
pop
into
nop
add
insl
repz
add
or
add
ret
add
inc
add
add
pusha
add
add
add
rolb
mov
mov
ret
mov
mov
inc
add
rolb
xor
jns
pop
movb
sbb
inc
add
dec
pop
fsubrl
les
movsl
and
mov
dec
leave
jno
add
add
sbb
add
add
add
sbb
addb
dec
loope
das
xor
ja
mov
popa
add
mov
stc
jp
add
add
xchg
cmp
add
xlat
js
imul
mov
add
push
inc
add
add
xor
loopne
and
add
jl
daa
or
cmp
xchg
add
shll
push
pushf
lock
scas
dec
dec
xchg
pop
mov
stc
jns
add
sub
lret
testb
fcmovnb
add
cmpsl
inc
pop
loop
mov
fcmovnbe
sub
add
je
movsb
add
pop
jb
ret
add
test
jae
xor
mov
lock
cmpsb
add
je
jb
or
mov
jl
sarl
ret
movl
xor
cwtl
bound
mov
nop
add
add
mov
addb
mov
mov
inc
add
cld
aam
daa
clc
testb
adc
cli
in
lcall
je
je
faddl
xchg
sub
add
jl
mov
lods
inc
mov
daa
push
add
ds
sbb
out
cs
push
add
vmread
pop
push
test
inc
mov
push
add
cmp
jge
mov
jne
jno
mov
add
add
daa
adc
mov
push
add
jmp
add
add
push
push
add
imul
mov
lret
add
cmp
inc
lods
pop
push
add
out
inc
lock
add
mov
add
lret
out
js
clc
and
and
daa
ja
add
add
add
fwait
adc
mov
daa
cmpsb
add
sahf
int3
enter
add
call
add
addb
and
mov
or
cmp
pop
outsl
jnp
icebp
testb
int3
push
inc
add
loopne
popf
les
arpl
out
xor
push
repz
stc
push
enter
icebp
pop
jae
rolb
hlt
add
mov
lods
jle
arpl
add
jno
pop
fdivr
stos
test
rolb
add
add
ret
add
dec
rolb
js
add
add
mov
mov
aad
add
dec
leave
xor
inc
sub
cmpsb
add
add
mov
das
cld
and
or
push
add
rolb
nop
add
add
mov
push
add
add
mov
add
inc
mov
das
divl
add
mov
add
aaa
aas
sbb
icebp
popf
mov
adc
repz
mov
add
les
fstpt
add
xor
addb
imul
add
iret
sub
add
clc
addb
inc
add
add
cmp
jl
cltd
push
add
push
add
add
mov
add
aas
mov
jge
sub
rolb
mov
data16
out
add
and
add
pop
addb
clc
jge
mov
and
mov
push
inc
add
mov
cmpsb
add
jno
enter
fists
cmp
adc
sub
outsb
or
in
add
sahf
adc
xchg
testb
dec
sbb
mov
adc
add
cwtl
mov
jbe
mov
add
add
add
mov
stc
dec
jmp
sub
stos
jl
jno
mov
add
sub
sbb
add
dec
das
push
mov
cmp
test
mov
sub
cmp
dec
mov
add
add
add
or
add
push
add
add
add
add
icebp
sbb
push
add
in
pop
mov
xor
sub
mov
push
popf
dec
scas
clc
xor
dec
cltd
xor
loope
xchg
cs
insl
jp
add
mov
dec
movb
insl
daa
int3
xchg
push
lcall
pop
pop
enter
xchg
add
inc
add
add
cld
into
icebp
mov
and
clc
loopne
testb
seta
int
add
mov
add
cmp
or
add
add
decb
mov
cmp
add
push
add
sbb
insl
push
mov
adcl
mov
add
mov
sub
add
loope
push
sahf
and
add
mov
jne
add
add
dec
cmp
fidivrs
add
add
pusha
add
xchg
outsl
push
add
je
in
sahf
cmpsl
mov
popa
enter
push
add
rorl
cs
add
loop
or
fstl
add
push
push
add
lods
or
rolb
cmp
jo
push
mov
jnp
adc
movsl
mov
push
add
sub
push
sahf
pushf
pusha
add
xchg
jo
add
add
add
add
dec
and
mov
aad
cs
lahf
sbb
add
jp
stc
repnz
loop
fdiv
push
add
add
push
jl
jb
fwait
mov
jnp
jmp
gs
gs
jae
xor
test
add
add
mov
add
ret
lods
jno
add
mov
add
add
repz
insb
adc
lcall
add
mov
rorl
sub
jg
testb
pop
outsb
push
add
rolb
sub
adc
iret
fdiv
cmp
add
add
add
addb
aam
adc
in
ljmp
add
mov
add
mov
lods
inc
lahf
into
lock
stos
addb
mov
scas
mov
mov
outsl
cmc
lds
jbe
mov
adcl
add
mov
add
cmc
cmpsl
popa
cmp
mov
cmpsl
setg
scas
sbb
add
aaa
push
add
add
mov
add
mov
hlt
add
add
out
push
add
add
and
mov
mov
dec
stos
fwait
inc
test
fcmovnu
or
pop
mov
ds
adc
popa
mov
add
push
add
and
mov
add
clc
fs
test
xchg
add
add
add
dec
pop
iret
enter
add
das
mov
inc
add
mov
add
add
test
mov
iret
ret
int
daa
add
push
add
sarl
sbb
js
loopne
test
lret
popf
push
add
mov
add
scas
xor
pop
aas
mov
int
lds
and
sbb
add
push
add
push
add
xchg
addb
shl
add
jbe
in
dec
cmp
jge
orl
pop
push
push
add
lock
lods
ret
pop
lods
cmp
stos
xchg
push
add
inc
shll
lods
addb
in
add
add
add
add
adc
or
insb
fmul
and
mov
aas
and
mov
mov
mov
add
pop
popa
pusha
add
fisubrl
mov
int3
jo
jge
pushf
xchg
add
cli
push
add
sbb
add
gs
cmp
orl
mov
stc
in
loope
out
mov
addb
add
add
int
push
mov
test
add
repz
cltd
loopne
dec
scas
jge
add
add
add
cwtl
pop
jg
std
mov
mov
add
add
add
add
ret
pusha
add
xor
mov
iret
mov
jecxz
dec
push
push
add
dec
shrl
shll
cmpsb
add
sub
fnsave
addr16
add
sti
sub
daa
in
pop
push
add
arpl
pop
testb
jns
add
and
mov
ja
in
roll
test
push
mov
push
jmp
addb
cmp
test
cmc
xchg
add
orl
mov
add
mov
fists
add
add
add
faddl
mov
jbe
inc
add
sub
xor
les
cld
pop
adc
adc
xchg
add
add
sbb
cwtl
dec
push
add
adc
mov
pop
mov
scas
push
add
adc
cli
xchg
adc
dec
xchg
adc
push
dec
adc
shll
pop
call
adc
dec
and
es
adc
psllq
add
xchg
jle
clc
into
call
cmp
push
add
rolb
insb
mov
add
clc
mov
xor
ret
pusha
add
mov
add
mov
mov
add
add
jge
jg
imul
add
movsb
add
in
dec
xchg
in
cmp
pop
rolb
sub
leave
push
cltd
sub
stc
rolb
jecxz
out
test
push
enter
arpl
mov
mov
movb
testb
push
sbb
xor
dec
jb
add
add
ret
xchg
inc
xor
das
popa
aad
add
mov
xor
push
add
add
add
cmp
pushf
mov
mov
add
add
add
add
ss
add
mov
fcoml
lods
add
pop
push
add
loop
add
mov
jno
stos
or
xor
roll
lret
or
lcall
pop
cmp
add
mov
mov
jno
popf
fmull
fcoms
add
mov
test
add
add
mov
add
popa
inc
add
mov
icebp
cwtl
add
mov
cmp
add
pop
add
mov
test
loop
pusha
add
add
pop
push
out
pop
icebp
imul
inc
inc
gs
add
adc
loop
popf
add
sti
test
add
pop
or
dec
push
add
pop
hlt
add
and
icebp
xor
out
aam
popa
lahf
jmp
add
sub
pop
imul
add
add
add
mov
icebp
lods
jecxz
sub
and
xor
add
clc
mov
mov
add
add
add
xchg
mov
add
fsubs
add
mov
add
xchg
and
mov
add
int3
gs
cmp
in
cmp
xlat
subl
js
loopne
mov
add
add
mov
add
aas
dec
cmc
xchg
add
les
outsl
insb
dec
ret
test
cmp
ss
sbb
lahf
test
movb
add
and
mov
loop,pt
jno
xchg
add
fidivl
add
cmc
cmpsl
hlt
add
add
aam
sub
aam
mov
add
add
add
jle
mov
jmp
ret
fisttps
ffree
stos
daa
sub
mov
mov
fucomip
add
and
addb
loope
add
jecxz
jle
or
add
jle
add
and
mov
cwtl
xor
cmp
or
or
add
sahf
testb
add
add
sbb
cmp
push
out
add
data16
sub
cmp
add
inc
add
cmc
sbb
cmp
mov
pop
mov
dec
adc
test
ljmp
testb
pop
testb
jl
fs
mov
movsl
insb
testb
dec
gs
rolb
int
dec
add
xor
bound
mov
add
or
add
dec
add
imul
dec
adc
les
std
lods
inc
add
sbb
inc
add
lock
add
jmp
jae
push
add
pop
movb
adc
clc
push
sub
and
adc
addb
mov
jae
roll
add
push
test
and
push
add
fnstcw
insb
push
inc
add
mov
add
cmp
and
jmp
add
ret
es
sbb
sahf
cmp
or
mov
add
mov
rolb
test
xor
add
mov
outsb
add
leave
movb
movb
add
and
cli
clc
aas
lods
loop
dec
cli
pop
cmpsl
scas
mov
and
add
push
add
fistpll
push
add
add
rolb
add
add
add
add
jno
sbb
mov
mov
ret
testb
push
lahf
xchg
add
add
test
add
jb
dec
pop
lods
mov
add
hlt
add
pop
ljmp
jne
jnp
jb
add
add
testb
inc
add
add
repnz
std
stos
lcall
jns
ret
sub
pop
and
mov
jle
wbinvd
xor
mov
mov
lcall
test
add
aaa
xor
add
xor
and
add
sbb
jl
mov
test
add
sbb
pop
push
add
add
add
mov
add
shrl
mov
and
fldcw
adc
jl
jle
add
push
add
rorl
outsl
jne
xor
iret
scas
jbe
ret
add
push
stc
jb
or
das
ja
pop
aad
std
int3
adc
in
outsl
std
sbb
aas
scas
add
rolb
test
mov
outsb
inc
add
cli
das
aam
dec
les
and
mov
push
mov
iret
cmpps
jno
mov
lods
stc
mov
add
mov
popf
ljmp
mov
movb
or
fistpll
add
loop
or
sub
mov
add
js
add
bound
mov
mov
and
mov
les
xlat
sub
shll
je
popf
sub
in
xor
sub
add
mov
add
add
daa
sbb
lods
inc
out
scas
mov
mov
mov
add
mov
adc
add
push
imul
pop
daa
jb
push
pop
dec
ficoms
fdiv
add
rcll
aas
movl
add
fistps
aad
push
add
out
add
pop
jp
add
inc
add
test
xor
in
sbb
sbb
xor
mov
adc
sub
push
in
leave
or
psrad
push
jmp
add
xor
iret
jb
pop
dec
fwait
dec
fadd
add
inc
add
add
mov
sub
fsubrl
testb
jbe
scas
and
mov
lcall
inc
sti
inc
add
cmp
push
inc
add
ljmp
add
addb
or
cmp
jno
pop
je
mov
cmp
sbb
lds
add
add
gs
jg
std
mov
or
cmp
add
out
add
sub
add
pop
dec
les
repnz
mov
adcl
add
sbb
add
add
test
mov
inc
or
or
mov
inc
in
lock
or
add
mov
jns
fldenv
fwait
mov
or
mov
out
add
xor
add
add
add
add
jnp
call
scas
pushf
sahf
loope
add
pop
mov
add
enter
in
gs
add
fimull
jmp
push
add
ja
mov
shrl
sahf
stos
pop
xchg
sub
adc
push
vpaddusb
add
movsl
xchg
add
mov
scas
nop
add
hlt
add
add
add
cmc
lds
or
add
push
stc
pop
test
sbb
subl
or
sub
daa
jae
add
pop
inc
add
add
or
mov
repz
lcall
mov
cmp
add
add
je
lock
push
push
adc
jnp
push
add
sub
add
jne
addr16
cwtl
adc
mov
leave
jp
add
add
rolb
jne
in
add
add
out
add
mov
pop
xchg
testb
mov
outsl
ret
fwait
dec
out
enter
or
lahf
ficompl
call
add
pop
mov
sbb
add
nop
add
sub
add
jno
add
xor
mov
imul
jge
add
add
mov
dec
data16
or
xchg
inc
add
and
dec
xchg
fcoms
and
xor
add
ja
lahf
fsubp
adc
mov
add
sbb
add
cwtl
pop
sbb
and
mov
add
loop
cmpsb
add
pop
adc
adc
xchg
stos
ja
mov
outsb
pop
ficoml
mov
add
add
mov
add
stc
dec
rcr
xor
call
jmp
add
xor
jne,pt
add
mov
add
aam
arpl
icebp
jle
rolb
xor
icebp
mov
mov
mov
mov
xor
xchg
jns
sbb
add
jo
daa
stos
push
add
add
mov
mov
cmp
roll
shll
xor
pushf
ja
push
xchg
add
sahf
add
inc
add
mov
mov
add
add
sbb
lahf
cmpsl
movsb
add
jmp
add
add
jbe
mov
clc
xor
push
std
pop
mov
loop
or
or
add
aaa
adc
jo
rolb
loop
cmp
jb
sbb
pop
ret
jl
add
cmp
ds
add
fldt
imul
push
xor
fsubs
scas
aam
pop
cmp
sub
add
add
mov
mov
mov
sub
adc
scas
rorl
aas
jg
add
lock
or
jb
adc
aam
ljmp
add
aas
jle
add
lock
add
movsb
add
xchg
outsb
pushf
mov
stc
rolb
mov
add
mov
in
xchg
cmp
repnz
sti
cmc
adc
add
lods
ss
fwait
xor
aas
jne
call
ja
sbb
add
cmp
add
add
outsl
negl
xorl
fsubs
jns
pusha
add
add
adc
inc
int3
arpl
addb
out
adc
mov
cmp
cmp
add
test
mov
push
int3
jae
rolb
loop
clc
rolb
ljmp
adc
or
mov
rcll
xor
cmp
cmp
adc
pop
scas
pop
mov
scas
mov
nop
add
add
pusha
add
lret
addb
add
add
loope
sarl
push
add
je
hlt
add
add
xor
pushf
sub
mov
or
ss
mov
add
and
movsb
add
sbb
add
test
pop
inc
add
pop
sub
jne
adc
pop
movsb
add
push
add
push
add
add
movsb
add
cmp
pop
cmpsl
cld
add
mov
sub
or
ret
add
add
add
in
dec
xchg
js
add
call
hlt
add
add
bound
mov
sbb
add
mov
ds
mov
push
add
and
sub
outsb
popf
sub
mov
add
mov
add
add
add
mov
lods
lret
rep
and
in
pop
pop
push
dec
cmpsb
add
lret
lahf
out
nop
add
mov
popa
add
pop
mov
jp
mov
out
push
xor
sbb
rolb
mov
add
xchg
pop
insl
hlt
add
sbb
sub
add
dec
stos
cltd
repz
add
bound
mov
push
add
mov
scas
sub
add
mov
add
add
dec
push
add
add
pop
push
add
sub
pusha
add
mov
out
out
add
mov
cltd
movsb
add
xchg
add
jl
xchg
add
scas
or
pusha
add
and
mov
mov
outsl
repnz
cmp
xchg
push
add
cs
add
add
fwait
xor
lea
pop
negl
xor
sahf
cmp
mov
xorl
push
add
mov
push
add
lret
aaa
pop
lds
inc
add
sbb
adc
add
faddp
add
fbstp
add
add
or
je
je
shl
add
dec
mov
adc
sub
mov
and
add
add
jp
inc
add
inc
inc
mov
aas
mov
add
rol
add
xchg
add
aam
pop
sbb
add
insl
mov
dec
cld
push
add
add
add
add
add
jle
add
add
mov
jecxz
jle
addr16
add
loop
pop
stos
jae
mov
xchg
push
dec
mov
inc
add
add
cld
and
jle
add
addb
addb
sbb
add
jae
cs
add
add
xor
pop
mov
lds
sbb
xor
movsl
int
bswap
mov
in
sti
in
cwtl
pop
loopne
jg
add
mov
fadds
add
mov
mov
pop
mov
mov
ds
add
add
mov
add
lods
add
jmp
das
sbb
insl
out
add
add
mov
mov
sub
add
scas
rolb
xor
xchg
fwait
cmp
adc
icebp
mov
pop
jnp
mov
aaa
add
dec
sub
and
popf
jge
push
insb
sbb
test
loopne
adc
or
push
cld
rolb
pop
loopne
adc
and
lret
dec
ds
xchg
cmp
mov
xor
stos
addps
cmc
add
add
test
int
testl
pop
and
mov
sub
mov
add
sti
xor
adc
in
mov
pop
cltd
fwait
pop
push
outsb
sub
add
mov
adc
nop
add
ja
loopne
dec
jmp
jg
mov
adc
mov
adc
inc
fdivp
add
rolb
ljmp
cwtl
nop
add
add
jg
xor
call
dec
xchg
mov
mov
xchg
cli
pusha
add
xor
add
mov
or
add
mov
xor
inc
add
call
add
add
pop
cmp
add
enter
test
ret
adc
scas
add
sti
daa
push
and
inc
add
add
jge
inc
jo
mov
lods
out
fidivs
sub
jno
fistpll
lret
daa
or
add
dec
ljmp
adc
xchg
inc
add
mov
add
or
add
stos
imul
pop
ja
pop
test
mov
add
and
mov
lock
loopne
add
add
mov
add
addb
mov
xor
dec
int
inc
pop
mov
add
testb
cmpsl
jp
add
clc
in
in
xor
and
mov
xor
add
mov
das
mov
sub
mov
dec
aad
pop
add
xor
add
mov
push
dec
mov
pop
rolb
jno
adc
into
cltd
push
add
inc
add
icebp
orl
add
cli
iret
mov
add
mov
add
adc
jo
in
add
push
mov
mov
pushl
mov
mov
and
adc
sbb
mov
add
add
add
and
add
cmpsb
add
add
mov
cld
and
mov
fimull
lds
sub
outsl
popa
dec
cmpsb
add
add
add
data16
add
or
mov
jecxz
enter
add
mov
jmp
lahf
push
mov
mov
or
add
adc
push
add
add
jns
add
arpl
jbe
pop
pop
sbb
pop
inc
addr16
jmp
push
fisubs
dec
daa
push
cli
pop
cwtl
addb
push
adcl
les
or
adc
mov
add
fsubrs
sbb
mov
xchg
xchg
jnp
test
inc
jbe
repz
test
mov
pop
pop
inc
add
test
sahf
lea
out
mov
add
lcall
pop
xchg
add
mov
addr16
and
cmp
mov
add
cmp
sub
pushf
jge
jae
lods
dec
out
fstpt
dec
outsb
xor
inc
test
push
add
add
push
add
add
mov
cmp
mov
add
call
pop
inc
lock
adc
xor
in
and
outsl
xchg
jmp
add
sbb
in
pop
js
add
enter
add
add
sbb
jle
sti
lods
mov
add
or
rolb
add
add
inc
cli
add
incl
clc
das
insl
push
add
mov
adc
or
insl
jge
ljmp
lods
repnz
mov
stc
lahf
pop
sub
mov
add
add
ljmp
mov
and
mov
xor
add
add
jae
cmp
call
testb
mov
add
lds
in
jecxz
mov
dec
pop
xchg
testb
mov
xchg
in
push
add
add
fnsave
and
add
mov
aam
cmpsb
add
add
pop
add
mov
sub
add
jp
add
add
mov
add
pusha
add
mov
fsubs
inc
popa
loope
add
add
mov
add
jae
imul
or
push
add
push
dec
cmp
add
and
mov
add
push
add
and
mov
or
sub
jbe
add
mov
add
add
stc
mov
add
cmpl
das
out
or
into
dec
cmpsb
add
lea
and
aad
clc
xor
or
add
inc
add
testb
pop
and
mov
jle
mov
enter
sub
outsl
push
add
mov
add
icebp
inc
ror
add
add
dec
sub
add
add
inc
or
call
add
jae
addb
imull
insl
pop
mov
int3
adc
cwtl
lds
add
xchg
aaa
jle
xchg
add
add
dec
hlt
add
mov
int
add
sti
add
mov
add
stos
insb
rorl
add
lret
pop
call
push
inc
add
mov
xlat
mov
movsl
mov
repz
les
jb
jae
xor
and
test
sbb
jb
jne
int
dec
cmp
outsb
sahf
jg
adc
inc
xor
fnstcw
dec
cwtl
sub
dec
subl
data16
adc
inc
or
enter
dec
xchg
add
pop
mov
add
xchg
repz
std
jle
int
pusha
add
loop
pop
cmc
mov
cmp
dec
mov
xchg
aam
sbb
addr16
add
add
add
pop
mov
loop
hlt
add
inc
add
mov
push
add
lds
add
add
add
test
dec
jb,pn
pop
pop
insb
mov
mov
jecxz
repz
popa
push
jmp
adc
add
out
cmp
into
and
mov
mov
add
add
push
add
das
arpl
xchg
add
das
scas
fisttpll
add
push
pushf
stos
adc
jp
add
stos
cmpsb
add
mov
add
add
jns
cmpsb
add
addr16
add
mov
mov
outsl
mov
cmp
rolb
inc
addb
add
jl
add
add
pop
hlt
add
and
mov
inc
and
movb
adc
mov
imul
dec
mov
add
sub
jge
lret
out
out
add
outsb
out
sbb
mov
add
mov
pusha
add
xor
push
pop
push
lock
jo
in
negl
inc
add
je
jbe
negl
add
add
add
je
mov
add
jl
and
movb
aaa
loopne
into
int3
lods
mov
mov
mov
popf
mov
popa
in
xor
imul
out
addb
jmp
dec
xchg
sub
add
rcll
loopne
cmp
lahf
movsb
add
lret
jge
pop
sbb
inc
aam
outsl
stos
iret
jo
jmp
mov
sbb
jnp
add
add
add
outsl
pusha
add
pop
jle
addb
xchg
repz
pop
jle
push
mov
test
and
mov
mov
add
push
imul
adc
add
fdivrs
movsl
add
add
add
out
xchg
push
add
lods
jp
or
lods
std
push
add
lret
pop
add
addb
jo
sub
add
popf
repnz
add
arpl
stc
xchg
jecxz
inc
add
mov
cmpsb
add
lods
inc
addb
in
fsubs
add
cli
fs
iret
push
fwait
add
jne
add
imul
add
add
mov
add
add
cld
bound
mov
test
dec
mov
mov
push
cmpsl
cmc
mov
arpl
add
sarl
or
movl
into
sbb
addl
xchg
mov
add
mov
dec
pop
mov
scas
pop
dec
shll
test
add
dec
in
add
fcoml
fadds
mov
stos
ds
cmp
add
push
add
testb
inc
add
fisubs
add
subl
add
add
rolb
jmp
stos
cmpsl
jge
push
add
popa
pop
mov
xor
mov
and
mov
or
aaa
std
mov
mov
sbb
jo
movb
and
add
add
lock
add
pop
jg
insl
push
add
cmp
add
add
testb
addb
add
bound
mov
repz
add
dec
movb
jmp
add
pusha
add
cltd
dec
iret
jo
addb
add
sahf
adc
div
add
pop
loope
dec
xchg
stc
loopne
mov
add
mov
dec
jnp
sbb
dec
and
sbb
add
jnp
add
cmp
push
add
add
add
repnz
lds
add
add
jecxz
add
jl
cmpsb
add
add
mov
test
mov
and
sbb
inc
add
loop
jge
add
mov
outsb
push
add
add
roll
cmp
mov
add
mov
add
inc
jne
testl
add
add
cmp
mov
bound
mov
movsb
add
cltd
fisubrs
out
adc
push
add
stos
mov
pop
pop
add
push
add
xor
subl
loopne
std
jmp
add
inc
add
cmp
addr16
mov
xchg
add
addb
das
xchg
or
jbe
test
icebp
jp
and
jge
xchg
add
cs
jge
mov
sbb
stos
add
das
testb
mov
add
sub
mov
add
loopne
cmp
jmp
adc
xor
adc
mov
mov
add
jnp
jmp
testb
aaa
sbb
add
jne
in
jp
icebp
jne
add
out
fxch
sbb
add
mov
dec
call
lock
imul
or
push
push
add
movb
add
add
fdivrp
lods
rorl
add
mov
and
cmp
test
push
cmpsb
add
add
add
add
leave
in
add
mov
add
add
pushf
jbe
inc
dec
push
insl
cld
loop
push
insb
prefetch
add
popf
lods
cmp
repz
xchg
add
mov
add
mov
mov
inc
add
add
rolb
aad
sub
xchg
mov
add
pusha
add
fisubs
mov
add
cmp
ret
addr16
sbb
stos
or
in
stc
mov
mov
cltd
push
xchg
sub
bound
mov
add
dec
inc
add
lods
fnstcw
xor
cmp
mov
dec
enter
adc
mov
add
adcl
mov
pop
popf
loopne
pop
push
add
adc
outsl
addb
add
imul
addb
xchg
addr16
push
shr
in
addl
call
add
stc
xor
aam
xchg
incb
push
add
xor
aaa
lcall
push
adc
mov
in
cld
inc
outsl
out
addb
cmp
aaa
mov
and
ror
add
clc
out
push
ljmp
in
xor
jne
out
aaa
and
add
inc
ja
ljmp
test
xchg
ret
xor
add
cltd
or
insb
mov
insl
cwtl
ret
testb
add
mov
pop
clc
mov
testl
nop
add
lcall
pop
adc
cmp
popa
mov
testb
repnz
xor
cmp
add
sbb
add
movsb
add
mov
add
add
pop
jo
dec
xchg
ds
jne
mov
cmp
mov
rolb
add
jge
push
add
mov
inc
push
dec
arpl
ljmp
add
mov
mov
add
aaa
cmpsb
add
dec
xor
jl
daa
test
lods
test
jl
add
add
adc
addb
mov
add
mov
pop
sbb
call
dec
sbb
jmp
inc
cltd
movb
mov
pop
pop
fisttpll
iret
fidivrl
and
add
aaa
test
testb
mov
mov
aam
call
stos
sbbl
lret
popf
sbb
add
or
add
mov
jb
packuswb
pop
jg
add
sub
xchg
into
lods
inc
add
inc
add
loopne
xchg
add
test
and
mov
cwtl
loope
or
mov
inc
or
add
xchg
cmpl
aad
sub
add
ja
aas
dec
sbb
adc
adc
add
outsl
push
sub
push
add
dec
gs
movl
add
jnp
or
cmp
xor
or
pop
inc
daa
push
testb
inc
add
mov
mov
jle
fildl
mov
mov
pop
je
imul
push
add
jno
add
test
and
sub
sbb
sub
and
and
sbb
add
imul
add
add
out
add
inc
pop
fnstcw
add
or
add
jbe
mov
mov
cmpsl
xchg
mov
pop
sbb
add
add
testb
add
cmp
add
cmpsl
xchg
testl
add
xor
and
into
xchg
mov
mov
rolb
push
scas
jb
lret
sbb
add
lahf
inc
ja
add
add
scas
sbb
icebp
popf
repnz
and
outsl
mov
out
sbb
add
adc
ret
repz
fstl
loopne
pop
cwtl
popa
xchg
mov
add
xchg
add
push
fimuls
add
das
dec
imul
add
mov
std
data16
xlat
mov
mov
mov
inc
add
mov
sahf
or
int
call
lods
popf
mov
push
add
mov
out
lods
cmp
push
addb
sbb
push
add
fisubrl
xlat
inc
add
add
repz
add
out
out
xor
add
ret
jns
pop
nop
add
fcomi
add
pop
aad
add
in
sbb
add
movsb
add
inc
lock
push
add
add
add
add
add
add
push
adc
add
lret
dec
xor
gs
dec
stos
cmc
mov
add
add
add
lahf
jle
mov
add
lret
mov
lods
and
jnp
add
dec
daa
jg
or
jnp
lds
pop
jge
sub
lock
add
roll
lret
add
jno
ljmp
stos
inc
add
or
add
add
cmpsb
add
adc
cld
or
xchg
cmpsb
add
in
nop
add
inc
add
inc
xor
mov
mov
adc
movb
xor
sbb
scas
inc
ret
test
sub
add
add
add
and
out
sbb
mov
add
add
and
dec
jo
rolb
fistpll
inc
adc
mov
pop
lds
or
cmp
out
push
add
xchg
add
mov
add
sbb
fsts
insb
jle
sbb
push
dec
loope
pushf
jo
xor
ljmp
add
add
insl
mov
add
add
and
mov
jmp
add
mov
mov
jns
in
add
mov
dec
cmp
add
jno
int
add
jno
pop
dec
jns
lcall
mov
xorl
add
int
add
push
xor
inc
enter
add
or
add
test
inc
in
jne
aad
inc
add
sti
pop
lods
xchg
jg
data16
dec
pop
jnp
aaa
rcrl
test
dec
into
adc
scas
and
xchg
movsb
add
mov
scas
lahf
call
jbe
les
dec
jg
add
fistpll
je
dec
scas
in
popf
rolb
add
or
add
mov
pop
pop
sbb
imul
lods
jbe
pusha
add
add
jle
add
add
add
mov
pop
pop
or
fs
mov
sbb
adc
sbb
test
cmp
movsb
add
clc
enter
jae
scas
insl
xor
add
jecxz
pop
adc
push
mov
mov
add
mov
mov
adc
std
jg
lret
jns
cmp
xchg
add
and
dec
int3
xchg
mov
mov
out
cmp
add
sarl
sub
adc
stos
inc
popf
or
and
push
popf
pop
test
lcall
mov
pushf
sbb
add
add
xchg
dec
lret
fwait
scas
mov
xor
jno
add
xchg
dec
mov
xor
xchg
add
add
sbb
lret
frstor
push
mov
scas
push
add
out
out
arpl
mov
dec
ja
repz
add
dec
jle
xor
cmpsl
adc
sti
test
addb
add
scas
imul
aad
sub
xor
js
push
cmc
packsswb
jge
add
add
sbb
adc
cmpsb
add
fistpll
popf
adc
cmp
mov
repz
ljmp
mov
imul
movb
adc
js
add
or
dec
sti
dec
fwait
dec
lcall
sbb
mov
lcall
jno
add
and
mov
add
push
add
add
clc
clc
dec
stos
sar
ret
cmp
jg
add
sbb
add
mov
stos
in
lret
jae
add
daa
rolb
mov
clc
xchg
mov
xchg
push
call
mov
aas
nop
add
pop
ja
popf
movl
dec
push
ret
std
iret
into
sbb
mov
mov
stos
mov
mov
push
add
enter
add
jmp
cld
cltd
pushf
dec
shll
test
mov
jo
mov
ds
mov
add
adcl
in
xor
add
push
add
mov
add
and
rolb
cltd
mov
pop
int
pop
mov
dec
adc
lahf
int3
cmp
jg
jecxz
add
ret
xorl
and
mov
inc
add
inc
mov
in
testb
dec
test
cmp
add
es
gs
push
add
and
rolb
int
sbb
add
addr16
add
adc
outsl
clc
das
lret
orps
movb
add
xchg
add
testb
add
add
add
mov
add
sbb
data16
adc
lcall
repnz
addb
pop
ret
jl
imul
jbe
in
ret
add
cld
iret
les
mov
add
mov
mov
and
mov
cmp
add
in
xchg
inc
add
rolb
xor
das
push
add
push
insl
and
mov
add
repnz
call
add
out
scas
and
insl
sbb
into
pusha
add
mov
fbstp
or
testl
in
or
add
add
scas
and
ja
add
add
stos
popf
sub
add
addb
rolb
jnp
in
mov
add
xlat
and
add
mov
push
add
popf
push
mov
roll
sbb
mov
cli
fimuls
mov
jge
mov
dec
push
add
jb
inc
add
add
add
lds
fisttpl
int
and
mov
aas
repz
cmpxchg
js
adc
pop
xor
add
add
xchg
push
jnp
iret
mov
dec
stc
out
mov
add
add
sbb
add
cmp
push
push
add
mov
outsl
in
pop
push
test
xchg
add
mov
add
fdivl
adc
lcall
sub
add
icebp
or
dec
ret
in
mov
add
clc
mov
mov
add
inc
movsb
add
fstps
daa
cmp
clc
sbb
xor
add
adc
in
push
mov
add
mov
lods
push
loop
or
xchg
lds
add
dec
add
movsl
loopne
mov
addb
jnp
negl
jle
push
mov
add
xlat
jne
test
jecxz
repnz
add
lods
and
add
syscall
icebp
add
add
cwtl
push
dec
addb
rolb
js
add
add
xchg
add
out
add
cmpsl
bound
mov
or
pop
cmpsb
add
push
mov
notl
pop
lret
fildl
add
or
popf
jb
pop
and
sbb
and
push
xchg
add
mov
add
add
loope
fcmovb
addr16
cli
pop
aad
add
pop
push
add
mov
cli
xchg
add
mov
je
mov
sub
add
xor
push
add
mov
add
fwait
sub
mov
jno
add
mov
add
xor
and
mov
inc
add
mov
jge
push
add
std
xor
mov
pushf
xchg
add
xchg
arpl
data16
adc
popf
cmp
add
adc
xor
sbb
xchg
fcomps
insl
push
add
sub
or
add
mov
add
and
mov
add
add
add
mov
push
push
mov
mov
movsl
add
jl
xchg
sub
add
jmp
add
pop
and
jns
aam
test
adc
loop
std
icebp
add
mov
jo
enter
sub
xchg
add
add
fisubrl
mov
and
aam
push
add
push
add
add
xor
or
inc
or
add
add
add
fcmovnb
aas
out
pop
add
bound
mov
adc
adc
adc
add
mov
xor
push
lret
loopne
push
add
add
add
clc
in
dec
cmp
das
jle,pn
outsl
and
mov
sti
or
pop
sub
out
inc
add
push
add
lret
jae
and
sub
xor
xchg
mov
xor
dec
and
mov
mov
push
add
mov
add
cmp
or
and
mov
add
add
add
cs
iret
lods
fdivs
arpl
mov
pop
adc
pop
iret
jl
mov
aaa
mov
mov
ret
pop
sub
pusha
add
add
jae
in
pop
aaa
jmp
xchg
add
cmp
in
lea
add
push
int3
call
loopne
add
jmp
inc
xlat
fs
xor
int3
xor
std
gs
pop
addb
add
add
addb
sub
ds
cmp
push
pusha
add
iret
pop
dec
add
mov
jae
add
push
cmp
jae
add
add
sbb
cli
dec
dec
xchg
add
cmpsb
add
xchg
add
sub
push
mov
add
lds
call
xchg
out
inc
add
pop
mov
es
jle
sub
test
les
test
xchg
divl
add
roll
sbb
push
and
test
jae
adc
jecxz
negl
add
jns
adc
out
leave
cmp
testl
add
and
mov
jmp
sahf
jg
add
rolb
or
decl
jp
add
std
mov
jl
add
jl
hlt
add
data16
fdivs
add
inc
aas
hlt
add
cltd
ljmp
dec
cmp
add
jg
add
jae
popf
stos
mov
inc
add
mov
je
lahf
mov
sub
mov
cmp
pop
and
out
ret
lcall
add
mov
mov
add
add
ljmp
add
cld
cmp
xlat
addb
je
sbb
xchg
sbb
lods
xor
add
ficomps
lcall
add
add
and
jg
push
add
imul
add
aas
mov
loopne
add
mov
add
popf
push
or
add
add
cmpsl
insb
add
mov
and
mov
dec
xor
movsl
cmp
add
add
mov
mov
pop
notl
jae
xchg
jb
iret
sahf
stos
jns
inc
add
add
in
add
cltd
pop
fbstp
mov
subl
test
jge
pop
add
mov
out
jg
in
sti
cld
call
cmc
outsl
pusha
add
xor
xchg
add
add
inc
add
add
in
and
mov
sbb
add
fsubrl
testb
std
lret
fbstp
mov
aad
add
add
add
pop
sti
pop
or
push
xor
inc
add
xchg
add
out
jle
loop
in
add
lret
push
add
add
add
add
aas
sbb
loope
add
add
add
add
dec
adc
icebp
insb
xchg
les
fimuls
movsb
add
dec
mov
arpl
or
mov
mov
add
sbb
testb
pusha
add
pop
or
add
outsl
fidivrs
jecxz
cmp
jne
add
rolb
mov
xor
and
jns
adc
rolb
jmp
add
add
add
mov
or
mov
add
std
push
pop
add
mov
test
adc
cld
icebp
ljmp
das
fimull
addb
mov
jp
test
sub
jg
cmp
popa
add
mov
cmp
mov
inc
push
add
add
pop
leave
adc
add
sub
out
fcoms
dec
ss
inc
popf
int3
dec
movb
add
pop
cmp
add
add
add
adc
hlt
add
push
daa
ja
jmp
pop
flds
call
add
add
push
add
add
cmpsb
add
jno
testb
add
mov
xor
pop
pop
and
imul
add
add
or
mov
push
add
add
add
add
outsl
mov
xchg
sbb
jns
sbb
add
aad
repz
jecxz
or
iret
sbb
add
pop
lcall
add
lahf
je
dec
add
rolb
test
mov
add
pop
push
add
ds
mov
jle
mov
inc
addl
xor
cmp
pushf
repz
xchg
add
loopne
and
sti
cmc
fidivrs
add
and
mov
out
cld
mov
pop
xchg
add
mov
add
stc
enter
add
jmp
add
add
mov
add
fwait
xchg
pusha
add
loope
add
lret
cli
xor
leave
jbe
lds
add
add
adc
add
mov
sub
out
xor
add
popa
cmpsl
cmc
jp
add
xchg
add
int3
movsb
add
add
pop
popf
cmpsl
add
add
popf
cmpsb
add
cltd
cmp
cmp
pop
popf
add
jo
das
jne
jbe
pop
pop
xchg
add
loopne
xor
dec
sub
loopne
sti
dec
jno
test
test
bound
mov
repnz
lock
dec
push
add
clc
mov
add
dec
aad
insb
in
xor
and
add
mov
add
movsb
add
add
ljmp
fwait
or
mov
aad
jb
arpl
xor
sarl
xchg
dec
mov
lds
push
rorl
add
sbb
add
mov
add
add
addb
add
and
dec
popf
xor
cwtl
cmp
sbb
pop
in
jl
roll
rolb
push
add
add
test
enter
xchg
insb
cmp
enter
add
add
int3
mov
add
mov
add
loop
test
xor
jnp
jnp
xor
and
mov
ret
sbb
out
repz
data16
add
add
iret
push
sub
mov
sbb
add
inc
inc
add
cmp
mov
fimuls
sub
pop
add
fwait
add
stc
cli
out
cmp
int
daa
adc
push
add
push
xchg
faddl
add
sub
add
mov
and
jae
add
mov
movsl
in
js
ljmp
add
add
scas
clc
xchg
pop
and
mov
xchg
xchg
add
hlt
add
stos
inc
add
out
inc
movb
add
pop
fmull
and
add
inc
in
xchg
in
jb
movsl
addr16
int
cmpsl
mov
lods
aas
lret
mov
movsl
mov
cwtl
inc
adc
fwait
mov
xchg
add
add
insl
add
add
je
dec
loopne
mov
fimull
adc
xchg
add
add
fdivrl
mov
xchg
adc
jno
add
pop
ljmp
add
add
ffreep
add
pop
lret
xor
popf
movsl
mov
dec
frstor
addb
orl
add
add
sbb
loopne
and
mov
add
movb
add
add
rolb
add
add
aaa
xor
js
dec
fnstenv
dec
mov
out
iret
sbb
pop
jns
add
pop
mov
movsb
add
out
aam
xchg
add
add
gs
add
add
lahf
in
adc
adc
xchg
sub
add
cmc
sti
adc
cmp
add
add
add
testb
and
mov
rcrl
outsl
inc
and
mov
add
mull
aad
add
inc
sti
lea
add
mov
or
push
add
outsb
jge
cmpsb
add
mov
add
add
dec
mov
and
call
in
push
inc
add
add
add
mov
pop
popa
push
add
add
mov
cmp
add
mov
into
push
add
leave
iret
jg
push
or
jp
add
pop
enter
cmp
rolb
add
mov
adc
ljmp
mov
push
add
push
add
adc
pop
rolb
add
fisubrl
xchg
add
cmp
add
aas
rolb
add
mov
testb
sbb
jmp
xchg
sub
mov
jg
mov
pop
daa
mov
iret
pop
stc
mov
xchg
int
add
xchg
add
testb
mov
test
lds
add
add
fwait
jmp
lret
mov
pop
subl
push
aam
sub
dec
ftst
add
daa
pop
pop
push
or
push
add
add
add
add
jg
jo
daa
sub
gs
rolb
xchg
add
add
imul
add
mov
or
addr16
mov
xchg
or
jae
add
sub
add
add
loop
sub
xlat
insb
bound
mov
add
mov
push
add
adc
add
std
add
mov
add
jno
add
mov
inc
mov
add
fidivl
addr16
and
mov
push
add
pop
push
add
iret
scas
fsub
cltd
loope
mov
mov
mov
pop
mov
add
stc
dec
jmp
cmpsb
add
out
mov
repnz
jbe
nopl
or
and
mov
leave
out
lret
rolb
add
cmpsl
jns
pop
bound
mov
dec
push
add
insl
mov
outsl
mov
add
addb
add
shrl
mov
push
add
mov
add
add
add
push
jle
add
clc
mov
jecxz
testb
jno
lods
outsl
dec
sahf
adc
push
test
push
add
inc
add
add
jmp
inc
ret
add
inc
sub
add
add
clc
lret
sub
popa
add
add
testb
pushf
mov
jl
jmp
addr16
mov
in
or
insb
subl
daa
or
mov
mov
mov
mov
shr
cmp
push
stos
lahf
stc
adc
out
sahf
add
lds
aad
add
or
add
cmp
add
xchg
add
and
push
add
cmp
fldl
xchg
add
stc
add
push
add
add
pushf
ja
add
nop
add
es
add
mov
lock
aas
mov
mov
xor
les
jp
shr
push
cmp
cmpsl
xchg
add
lea
mov
adc
adc
xor
or
loopne
fildll
add
movsl
cltd
jp
add
aad
mov
fidivrl
add
scas
dec
sub
js
lods
inc
add
mov
add
addb
add
ja
pop
sbbl
push
fcomip
add
mov
sub
dec
aam
outsb
sti
popf
insb
inc
add
cltd
mov
jl
xchg
mov
jo
rolb
jne
and
fildl
aaa
pushf
inc
add
jge
add
inc
add
and
mov
push
add
out
sub
scas
mov
insb
fs
je
cmp
cmp
lds
jg
movsl
xor
add
mov
add
movb
add
add
movsb
add
add
mov
add
jp
add
inc
add
scas
sbb
test
mov
xchg
iret
rolb
loop
xchg
loop
ret
pop
jg
aam
inc
add
push
add
leave
adc
pushf
addb
stos
or
push
movb
test
call
jb
adc
insb
test
add
add
xchg
hlt
add
or
add
inc
add
mov
dec
stc
jae
inc
adc
mov
outsb
test
cmpsl
and
mov
add
add
mov
pop
shll
repz
add
scas
push
add
pop
add
sub
push
adc
add
pop
aas
sub
xor
bound
mov
add
mov
test
jge
xor
push
mov
sub
fcoms
jb
rol
add
adc
test
fcomps
push
add
add
jb
mov
add
lcall
add
out
popa
sub
movb
aam
aad
dec
data16
lret
outsb
mov
mov
adc
and
mov
addb
adc
adc
adc
add
inc
add
add
repnz
add
add
pop
inc
add
sahf
sub
dec
jnp
dec
addr16
cmp
adc
jo
dec
mov
cmp
jo
sahf
add
jae
jmp
test
jmp
add
add
les
ljmp
pop
pop
icebp
or
and
mov
xchg
mov
sti
push
fdivrl
adc
cmpsb
add
ja
add
add
fstpt
add
add
adc
insb
sub
nop
add
sub
movsl
aam
push
add
inc
add
add
mov
pop
sbb
or
fidivrl
add
add
jae
ja
fwait
mov
add
subl
xor
or
sbb
add
mov
xchg
jmp
add
sub
add
addb
push
add
mov
sub
push
add
inc
fcomp
int
add
mov
daa
add
mov
adc
int
add
fsubrl
add
inc
add
and
mov
arpl
imul
cmpsl
aad
dec
sbb
rolb
dec
sbb
add
mov
add
mov
rcrl
gs
push
add
xor
mov
inc
add
aaa
test
and
mov
push
lahf
sbb
add
fldt
cmp
add
mov
xor
stos
addb
add
out
filds
add
rolb
add
inc
cltd
push
mov
pop
mov
outsb
movl
lods
jno
add
add
jno
jle
dec
imul
lcall
lds
add
sub
test
addr16
add
add
sbb
int3
xchg
add
add
add
sbb
stos
xchg
add
rcll
sub
add
mov
ljmp
cmp
popf
add
add
sbb
fsubrs
rolb
xchg
les
jne
add
inc
jne
add
mov
xchg
rolb
popa
and
mov
leave
aad
rcll
pop
push
inc
das
shrl
js
xchg
sub
or
fdiv
add
add
popa
sub
sub
mov
inc
push
addb
mov
outsl
test
add
sub
aaa
adc
jns
add
lcall
cli
mov
bound
mov
int3
fistps
add
pop
mov
testl
add
add
imul
inc
add
repnz
out
mov
xchg
add
adc
fdivs
adc
push
add
rolb
mov
add
pop
push
loope
sbb
mov
bound
mov
dec
xor
mov
add
enter
out
popf
in
and
add
push
mov
addr16
xchg
add
cmc
jge
xlat
and
mov
movb
les
movb
adc
mov
add
push
mov
arpl
add
clc
add
mov
testb
testl
adc
pop
sub
pusha
add
add
jbe
dec
mov
jnp
dec
adc
inc
and
mov
cli
faddp
add
mov
bound
mov
ljmp
add
add
xchg
dec
mov
mov
fsub
cli
mov
add
pop
hlt
add
xlat
lods
add
add
adc
push
pushf
stc
push
stos
daa
mov
je
mov
push
add
push
add
push
add
sub
add
sbbl
xchg
add
add
dec
cmp
dec
xor
std
stos
mov
add
add
jmp
sahf
js
mov
sbb
in
pop
pop
mov
test
mov
outsl
jle
cmpsb
add
sbb
add
push
add
pop
push
insl
xchg
add
cli
push
add
dec
jp
out
push
mov
mov
cltd
inc
add
add
pop
sub
add
add
jge
cmp
cs
sub
addb
jb
loopne
int
add
mov
sub
xor
mov
mov
je
lods
std
mov
fwait
jmp
daa
mov
ljmp
in
repnz
mov
push
sbb
data16
add
mov
rorl
inc
addb
add
jb
adc
inc
in
dec
lock
inc
cmovo
mov
add
add
inc
jg
jge
add
aas
adc
movhps
sbb
cmp
je
jnp
add
out
arpl
mov
out
cltd
jo
mov
cli
mov
push
ret
mov
inc
enter
repnz
in
add
mov
lea
xor
add
into
jle
mov
pushf
orl
mov
cmc
xchg
mov
movsl
in
mov
mov
mov
cmpsl
mov
nop
add
inc
add
xchg
add
and
add
movsb
add
lds
mov
add
push
push
add
mov
add
call
inc
push
add
add
mov
addb
add
add
aas
movsb
add
add
add
add
add
test
pushf
jnp
loop
mov
js
xor
cmp
outsb
lods
pop
scas
std
add
mov
add
mov
add
movb
push
add
push
scas
in
add
sbb
add
test
cmc
push
les
imul
lds
lret
lods
adc
imul
ret
mov
mov
das
lock
in
lea
sub
outsl
or
add
lods
sub
loope
testb
insb
jno
add
out
hlt
add
ja
cmc
xor
xchg
outsb
int3
inc
add
mov
pop
fnstsw
imul
mov
imul
andl
mov
out
inc
add
popf
aas
sti
or
push
testl
cltd
jbe
mov
cmp
add
das
fdivs
jns
add
enter
cmp
lcall
dec
add
pop
inc
sub
nop
add
pop
ds
fldl
mov
out
or
fidivrs
sbb
mov
jle
movsl
push
loop
lret
lret
mov
daa
divl
repnz
add
aas
xor
add
mov
bound
mov
push
jb
cmp
and
mov
add
fbld
pusha
add
mov
in
or
stc
or
mov
add
add
push
add
add
or
inc
add
mov
add
mov
add
inc
adc
add
add
add
movb
sbb
addr16
add
add
rcrl
add
je
xchg
add
icebp
push
add
add
sbb
add
push
jns
xchg
jg
lahf
inc
add
add
add
inc
sbb
popf
scas
jbe
loope
add
add
rcl
add
xor
in
dec
adc
sbb
mov
add
inc
add
inc
fimull
int3
ret
imul
xchg
push
aad
cmp
add
add
test
push
add
and
rolb
popa
mov
or
add
xor
in
lea
mov
data16
add
add
hlt
add
scas
aaa
xorl
into
pop
loope
adc
pop
jg
add
in
mov
dec
dec
jecxz
icebp
lret
cmp
or
in
test
fldenv
lret
pand
addb
sub
or
aad
add
fistl
cmpsb
add
ffreep
jmp
add
xchg
scas
pop
ja
sub
add
xor
mov
add
fisttpl
pop
outsb
dec
cmp
jp
add
aaa
or
dec
add
mov
xchg
mov
cmp
sub
xchg
xchg
add
jecxz
add
in
insl
xchg
add
mov
add
pop
jae
jb
dec
orl
addb
aas
dec
jmp
add
stos
jo
aaa
int
push
add
jl
lods
nop
add
nop
add
add
xchg
sub
mov
cmpl
add
mov
mov
mov
add
push
out
sbb
cmc
jmp
add
mov
add
mov
sub
sbb
movb
mov
add
test
rolb
push
cmpsb
add
push
add
jg
dec
add
stos
dec
add
add
add
cmp
loop
pushf
out
aaa
montmul
cmpsb
add
movsl
test
arpl
add
add
mov
mov
stc
rcrl
gs
xchg
outsl
test
daa
push
imul
into
hlt
add
push
add
jg
in
lcall
mov
aam
add
add
add
add
dec
xlat
pop
push
add
mov
inc
add
cmpsl
mov
add
mov
lds
aaa
jno
add
out
and
push
add
mov
addb
mov
pop
push
add
lret
mov
loop
daa
paddsw
lret
add
xor
and
xor
add
add
inc
add
int3
add
add
add
dec
jge
add
add
add
dec
or
daa
inc
add
push
adc
out
push
add
lcall
add
xchg
aas
pop
jns
rolb
dec
imul
add
out
loop
aad
dec
sbb
stc
add
add
pop
popa
shrl
stc
sub
adc
xor
cltd
aam
push
or
sub
in
add
hlt
add
lret
pushf
sahf
xchg
and
add
add
movb
pusha
add
and
mov
repnz
std
out
mov
add
jno
sbb
jne
arpl
or
add
pop
or
addr16
dec
add
scas
add
xor
fnsave
imul
repnz
pop
jg
cmp
aas
in
or
jo
xchg
add
dec
pop
into
add
mov
inc
inc
mov
sub
xchg
add
add
cmp
test
add
scas
pop
inc
add
adc
cmp
mov
adc
and
mov
push
add
cmp
mov
out
leave
dec
adc
and
cmc
out
push
add
add
fwait
push
fiaddl
mov
inc
add
sbb
fwait
sarl
into
cmp
insb
out
jecxz
cmc
fst
add
and
mov
add
add
add
dec
pusha
add
js
push
adc
add
mov
or
aad
sub
mov
xchg
add
ja
cmpsl
fnstsw
clc
gs
imul
add
or
add
mov
xlat
mov
call
add
sub
adc
jae
jnp
call
cmp
mov
sbb
xor
add
xor
and
add
test
lods
ljmp
push
testb
outsb
mov
sbb
add
insb
push
out
mov
cli
jle
aad
fdivs
push
jl
add
dec
fnstcw
dec
lds
mov
pushf
aaa
cs
cwtl
clc
add
mov
add
cwtl
and
mov
lret
mov
testb
cli
add
ds
insl
fadd
testb
out
mov
push
mov
shl
testb
add
mov
in
popa
xchg
add
add
add
and
js
dec
xor
add
add
add
add
push
adc
jecxz
imull
pop
xchg
cmp
nop
add
sbb
add
loopne
ljmp
rolb
outsb
cmpsl
jne
cmpsb
add
cmp
add
add
lahf
cmp
push
push
add
rolb
jg
inc
add
mov
paddusb
pop
cmp
xor
mov
stc
outsl
lods
int
sti
mov
mov
in
mov
add
pusha
add
add
add
es
add
movb
fmul
cmp
ret
je
int
in
lock
and
mov
pushf
push
add
jmp
das
lds
ds
lods
mov
sti
cmp
jae
jge
dec
in
mov
cmc
dec
rolb
fadd
inc
add
add
pop
mov
push
lea
mov
cld
test
or
mov
jmp
imul
add
and
mov
add
in
ljmp
add
inc
xchg
int3
pop
mov
add
add
cmp
ja
dec
inc
add
sub
and
add
sti
stc
pop
mov
ja
add
mov
addb
enter
testb
test
ret
xchg
add
insl
cmp
add
jle
add
add
and
mov
mov
add
icebp
inc
add
sbb
outsb
jp
push
add
or
mov
das
or
cmpsb
add
add
add
add
push
add
dec
stc
insb
jl
add
add
gs
sub
add
add
outsl
addr16
jg
xor
push
pusha
add
cmp
popa
mov
cli
push
lods
stos
pop
outsl
lods
mov
add
fs
adc
fsubr
js
jnp
or
xchg
adc
xchg
add
jecxz
or
imul
int3
pop
adc
inc
jecxz
add
fmull
add
add
add
repz
or
sbb
jns
jo
and
mov
add
adc
popa
int
add
add
add
jb
mov
add
add
add
sub
add
add
cmp
add
add
aas
std
ja
cmp
add
mov
fldl
or
in
popa
stos
xchg
add
cmp
mov
add
int3
les
bound
mov
xlat
sbb
add
sub
and
add
add
add
out
xchg
add
fcmove
int
add
shr
into
data16
add
flds
jnp
add
add
add
pop
pop
pslld
push
add
jae
xor
xchg
jb
fwait
stc
mov
jp
sub
inc
pushf
fsubrs
arpl
jecxz
mov
mov
cmc
add
xlat
or
xorl
addb
add
pop
mov
add
and
mov
addb
mov
cld
and
mov
inc
test
jp
jecxz
jnp
call
or
and
mov
aam
scas
mov
push
cld
jns
sbb
test
xorl
jge
add
pop
xchg
and
int3
movb
sub
jle
lcall
in
rorl
adc
bound
mov
call
dec
push
add
push
add
lahf
clc
or
push
xchg
outsb
xchg
loopne
push
sbb
add
cmpsl
sahf
lcall
add
dec
int
add
lock
mov
push
mov
je
iret
pop
inc
add
dec
into
stos
fldcw
mov
xchg
xchg
add
mov
enter
testb
mov
je
xchg
into
push
out
pusha
add
inc
or
pop
fwait
leave
and
mov
sub
out
xchg
add
add
add
test
add
dec
fisttps
addb
add
sub
addl
adc
lods
push
add
iret
adc
and
data16
adc
add
add
jae
inc
push
add
jo
xlat
xor
mov
cmp
mov
add
mov
add
int
or
xchg
xchg
xchg
pop
xchg
jnp
jmp
or
inc
out
push
or
rolb
mov
ficoml
lock
into
fstpt
addb
add
mov
adc
cmpsb
add
shll
jp
cmc
jno
pop
dec
dec
add
ficoml
add
mov
adc
xchg
imul
sahf
sahf
in
mov
add
push
add
add
jl
ret
ljmp
mov
cmpsb
add
lods
in
add
inc
add
pop
sub
pop
cwtl
push
add
lock
or
sbbl
jecxz
xor
mov
ss
repnz
add
and
in
dec
sbb
leave
aam
ficoms
mov
add
add
push
add
call
mov
lcall
subl
push
add
into
out
pop
iret
cltd
jns
mov
popa
mov
mov
mov
in
imul
pop
testb
mov
pop
outsl
dec
adc
xor
or
pop
daa
out
adc
out
frstor
add
decl
add
cwtl
popa
ficoml
insb
addb
mov
xchg
or
add
and
jp
js
cmp
jo
movsl
jno
sahf
popf
push
imul
jle
ret
add
push
cmpsl
popl
adc
lds
das
hlt
add
add
push
add
and
and
mov
loop
int3
dec
les
arpl
mov
add
into
jbe
pop
add
pop
ss
sub
rolb
inc
add
sbb
hlt
add
or
add
mov
insb
add
and
mul
jmp
push
test
xor
add
sbb
test
add
push
cmpsl
push
add
push
mov
shrl
add
stc
lret
add
pop
imull
inc
stos
dec
jge
popf
fdivp
add
stc
ret
xchg
movb
add
cmp
or
mov
xchg
les
mov
hlt
add
mov
jae
add
mov
add
out
add
mov
sbb
into
les
and
mov
ret
fwait
jmp
mov
jbe
inc
pop
mov
jp
xor
xor
add
dec
inc
add
add
call
push
add
add
inc
add
adc
rol
add
add
add
mov
mov
sub
imul
xor
fisttpl
fwait
jp
pop
int3
xor
scas
lods
sub
xchg
inc
scas
sbb
test
pop
adc
adc
add
add
mov
sbb
stc
dec
scas
mov
ret
jae
add
add
addr16
enter
sub
mov
lea
add
stos
cli
mov
add
testb
fnstcw
add
lret
adc
and
add
and
mov
add
mov
je
jecxz
add
add
nop
add
add
test
outsl
ret
jp
add
lcall
xor
pop
cmp
sbb
lcall
sbb
fdivrl
sbb
add
add
add
addb
and
gs
in
lods
insl
addr16
add
add
aam
fld
add
mov
int
fldt
or
push
dec
push
add
mov
add
mov
xor
xor
add
test
jbe
stc
aaa
js
add
add
leave
insb
sub
leave
clc
setle
jns
fmuls
scas
mov
push
inc
pop
imul
jge
jae
add
iret
fistps
sub
add
mov
call
xchg
add
jno
cmpsb
add
test
dec
jae
lea
pop
movb
aam
mov
add
stc
and
sub
add
and
je
ret
sti
cmp
push
add
frstor
repnz
push
push
adc
and
push
add
add
gs
push
pop
rolb
adc
jae
push
iret
popa
pop
sub
or
decl
add
cli
nop
add
sbb
add
mov
push
add
add
cmp
mov
ficompl
add
mov
dec
pop
sbb
dec
lret
sub
pop
in
add
or
add
push
scas
sbb
rolb
cwtl
sub
sub
mov
add
add
inc
jo
outsb
addb
rolb
sarl
add
enter
imul
out
mov
push
add
adc
hlt
add
add
iret
testb
push
mov
add
mov
sub
add
add
rolb
xchg
push
add
xchg
enter
aad
add
push
add
push
sbb
cli
aas
arpl
mov
fcoml
add
fisubrl
or
sub
fsubrp
ljmp
aad
add
lods
pusha
add
xchg
add
add
mov
pusha
add
mov
cmpsb
add
add
cltd
loope
movb
pop
leave
and
mov
add
ss
xor
xchg
add
xor
mov
add
mov
jae
data16
push
ret
pop
out
and
or
mov
sbb
or
in
fsubr
sub
adcl
pop
push
pop
jecxz
push
add
xor
stc
je
fildll
sub
add
loope
add
adc
mov
test
add
xchg
xor
fwait
in
inc
mov
mov
jbe
push
add
push
add
data16
add
xchg
push
mov
cmp
xor
popf
sbb
dec
mov
int
inc
add
or
xor
add
mov
push
add
add
rolb
mov
mov
add
push
sahf
mov
add
add
mov
out
dec
ljmp
pop
inc
add
andl
mov
sub
scas
in
xchg
push
add
sub
sub
mov
inc
add
cmp
sti
cmpsl
xchg
push
xchg
and
mov
mov
xchg
insl
jae
add
add
pushf
dec
mov
cs
and
add
add
testb
push
pop
mov
mov
cwtl
fdivp
add
stos
int3
and
addb
inc
pop
and
cmp
pop
push
add
jae
add
and
add
pop
out
jp
push
mov
xchg
xchg
push
add
mov
add
push
mov
cmpsl
add
fmuls
dec
jl
mov
inc
add
jns
mov
rep
dec
mov
jo
mov
roll
sub
mov
adc
lds
lock
adc
add
push
add
add
mov
and
push
add
cmp
add
add
add
imul
ja
add
xor
jp
ror
add
inc
fidivs
mov
add
jle
add
or
add
cmp
jnp
sbb
ds
mov
mov
ds
xor
movsb
add
cwtl
int
rolb
mov
add
sub
mov
mov
lret
cli
adc
scas
loop
and
icebp
cmpsb
add
enter
push
ficoml
add
loop
addl
add
insl
add
mov
mov
movb
push
add
cmp
out
add
adc
rolb
sub
add
add
xchg
inc
insl
push
fwait
sbb
fistpll
testb
add
loop
divps
pop
push
add
in
add
mov
lret
push
add
xlat
mov
ret
hlt
add
sti
add
addr16
push
add
pop
imul
add
mov
lods
pushf
push
inc
add
mov
add
dec
xchg
int3
inc
add
add
jbe
mov
outsl
push
push
add
scas
cmp
xchg
add
cltd
inc
lea
jne
mov
iret
sub
jae
add
add
add
pop
xchg
insb
clc
testb
push
xchg
into
or
mov
scas
add
lcall
xchg
add
lea
add
push
repz
fwait
call
nop
add
lods
cwtl
cmpsb
add
in
mov
repnz
jge
outsb
push
arpl
je
mov
and
das
xor
jg
imul
sahf
or
ret
loope
enter
ret
jle
imul
fsubrs
xchg
add
lods
and
cpuid
add
mov
add
add
xchg
inc
add
scas
fcomi
add
cmp
mov
add
push
int
add
sub
pop
or
rolb
jno
add
add
js
fcomps
jno
shrl
pop
xchg
jl
cmp
jg
add
xor
sbb
push
cs
fldcw
pop
nop
add
dec
inc
jb
in
sub
xchg
add
mov
mov
mov
es
add
add
xor
jl
jg
add
jle
scas
jo
scas
ficoms
mov
inc
out
mov
jne
add
mov
push
add
adc
push
inc
add
add
enter
add
add
add
xor
jbe
sbb
add
push
jne
add
rcrl
mov
inc
xchg
dec
das
add
mov
add
dec
test
add
jle
add
stos
icebp
xchg
bts
add
add
add
rolb
lahf
pusha
add
add
mov
inc
lret
mov
add
lock
fdivrl
mov
add
mov
cmp
ljmp
sbb
jp,pn
sub
pop
in
add
cmpsl
or
ss
add
add
mov
add
add
cmpsl
sub
jne
pop
mov
test
add
mov
dec
add
call
mov
mov
jg
in
adcl
mov
inc
imul
cmp
jns
insl
fisttpll
add
or
xchg
add
fidivl
add
sub
mov
lahf
cmp
mov
push
add
add
lret
jmp
shll
cld
and
mov
popf
jp
or
add
add
mov
add
test
and
add
push
add
jb
pop
xchg
add
cmpsl
outsb
dec
out
cmc
imul
xchg
adc
mov
adc
dec
ret
add
add
or
dec
pop
inc
fildll
add
add
mov
iret
mov
dec
insb
or
bound
mov
cwtl
lods
in
popf
push
add
add
xor
mov
bound
mov
cwtl
adc
loope
fmuls
repz
orl
add
imul
add
mov
aam
sub
sub
add
lahf
cmpsl
xlat
xchg
add
xchg
xor
sub
mov
mov
fimuls
out
add
add
push
pusha
add
or
mull
stos
jno
aad
jo
jle
add
inc
inc
add
dec
ds
pop
xor
inc
sub
add
data16
call
mov
jno
addr16
inc
mov
fadds
pop
xlat
icebp
mov
jp
jge
fsubr
jae
mov
test
xor
lcall
or
mov
call
inc
and
int
add
add
cltd
mov
add
add
push
add
xor
add
mov
fists
mov
add
add
add
movsb
add
adc
stos
loopne
scas
mull
jp
add
lcall
icebp
cmp
add
sub
cmovae
add
adc
add
mov
xchg
mov
dec
loop
or
add
push
xor
cmp
sti
movsl
mov
gs
push
add
decb
scas
mov
inc
jbe
sub
push
jecxz
add
sbb
cmp
call
add
add
add
lea
add
add
popf
mov
jno
push
add
add
stc
fimuls
cmp
add
add
inc
add
push
hlt
add
push
jns
add
push
add
or
sti
xchg
setnp
inc
insl
clc
mov
and
add
mov
mov
push
out
test
xlat
cmc
and
fiaddl
dec
xor
mov
repz
add
add
les
pop
add
mov
add
mov
add
test
mov
or
add
add
in
add
mov
aas
and
mov
fdivl
lods
rolb
push
add
es
inc
add
addb
into
cld
in
jg
jg
or
int3
in
rolb
mov
sbb
cmp
push
jl
add
jecxz
add
sbb
add
outsl
subl
xchg
mov
lods
add
mov
xor
leave
je
repnz
add
sbbl
xchg
jmp
add
add
adc
jl
dec
xchg
negl
add
add
add
fnstsw
imul
or
adc
add
cltd
xor
je
xchg
xchg
lahf
out
fmull
xchg
mov
add
sti
mov
insl
xchg
test
test
xchg
xchg
add
mov
stos
inc
add
adc
mov
xor
add
add
fisubl
add
jno
call
lock
rolb
lea
add
add
add
push
add
addb
fmuls
add
mov
insb
xor
loopne
movsb
add
idiv
addr16
lahf
jb
aas
mov
repnz
jmp
add
sub
push
add
add
movb
ljmp
add
add
testb
add
add
mov
ret
sbb
bound
mov
pushf
ja
inc
jo
xchg
movsb
add
test
or
call
or
out
stc
popa
ljmp
xor
rcr
push
add
mov
adc
mov
mov
pop
bound
mov
outsl
pushl
adc
xchg
pushf
sub
add
jle
rolb
xor
andl
add
ret
inc
add
add
sbb
daa
sub
sub
js
repnz
push
jo
add
add
add
add
add
inc
add
mov
popf
pop
pop
cltd
or
cltd
rolb
leave
test
and
mov
adc
test
icebp
fmull
inc
data16
add
fmul
mov
test
mov
inc
inc
sti
arpl
rolb
push
cltd
xor
push
into
fsubrs
jg
inc
add
outsb
push
add
pop
out
mov
add
jo
je
addb
xor
pop
dec
pop
adc
mov
mov
pop
cmp
arpl
out
push
add
inc
insb
xor
jne
sub
mov
bsf
add
mov
in
call
add
mov
addr16
scas
push
add
mov
mov
add
xchg
add
jecxz
popa
lods
jno
add
add
jmp
cwtl
add
mov
xor
gs
test
in
jge
add
add
lret
out
add
add
add
stc
outsl
mov
mov
add
jmp
cld
aad
add
xchg
mov
sti
les
out
add
scas
and
cmpsb
add
jl
pop
sbb
mov
dec
lock
pop
lahf
mov
repnz
inc
add
add
push
add
outsb
ret
popf
cli
xchg
xchg
cmpsl
push
add
cld
pop
je
scas
or
mov
mov
add
je
popf
cmp
add
xchg
sbb
mov
inc
push
add
stos
pop
and
add
adc
std
xchg
enter
add
add
popf
mov
jmp
add
push
aam
out
sti
lret
pop
mov
push
add
jno
jns
dec
mov
mov
sub
mov
add
xchg
cld
les
pop
cmpsl
sbb
inc
push
pop
and
fidivl
add
push
add
sbb
add
aaa
cwtl
out
movsl
clc
sbb
mov
add
mov
add
jno
pop
dec
and
mov
add
xchg
add
add
mov
std
xor
aas
sbb
jg
hlt
add
lods
das
imul
add
push
sbb
and
iret
pop
insb
adc
dec
push
add
add
lock
insb
stos
cld
out
gs
insb
sbb
aaa
or
add
cltd
out
adcl
mov
int3
cmp
add
sub
cmpsb
add
les
cmpsl
ljmp
sbb
repnz
add
adc
pop
dec
int
jno
add
lcall
clc
xchg
cmpsl
scas
fistpll
dec
addb
sub
pop
sub
add
add
add
dec
arpl
cmc
mov
dec
cld
mov
add
pop
in
mov
add
add
add
jno
jmp
cmc
dec
test
cli
xchg
add
inc
icebp
into
add
xchg
outsb
jne
jno
jb
add
add
sbb
add
mov
fcoml
add
insb
fiaddl
mov
pop
dec
mov
cmp
sbb
je
jmp
add
add
jle
mov
mov
js
dec
cwtl
lea
adc
jo
jmp
lahf
out
jg
push
add
into
jp
data16
add
add
cmp
jp
xor
add
cmp
jne
add
add
out
je
jae
add
mov
sub
add
cmc
leave
gs
inc
add
jmp
add
mov
popa
mov
sub
add
mov
add
sub
dec
inc
dec
mov
cmp
add
je
lcall
pop
jbe
xor
popf
xor
mov
or
imul
sbb
repz
mov
les
jbe
out
addb
add
les
sub
call
cmc
insl
into
jmp
lcall
flds
dec
sti
in
add
add
orl
jns
push
adc
lahf
push
add
add
pop
rolb
rolb
add
in
lret
add
pop
push
add
sti
pop
popf
mov
mov
icebp
pop
xchg
lock
add
jmp
add
lret
test
push
iret
sub
push
add
out
xchg
insl
mov
cmp
mov
insl
xor
mov
add
addl
sub
jnp
inc
leave
inc
loope
gs
add
outsl
mov
out
pop
movb
add
mov
cmp
pushf
int3
movsb
add
dec
in
popf
insl
xchg
add
xchg
fld
outsl
push
add
nop
add
pmulhuw
cld
xor
inc
movsl
mov
ja
fnstsw
ljmp
jmp
dec
sbb
int
adc
mov
dec
mov
mov
lcall
jno
mov
lret
xor
aam
repnz
and
mov
dec
xor
fnstsw
mov
add
push
add
add
inc
add
sub
xor
push
ret
mov
mov
loop
ret
test
out
and
ret
add
add
mov
mov
add
clc
outsl
insl
pop
sbb
lods
mov
scas
cmp
data16
push
add
test
add
jp
jns
fcom
add
add
mov
leave
adc
sbb
add
out
sub
adc
push
add
test
loop
xor
into
sub
rolb
addb
push
cwtl
sub
sbb
lods
pusha
add
add
add
fcmovbe
add
add
jg
pop
les
loope
add
add
cmp
add
ds
mov
add
ja
div
cmp
add
add
and
xor
sbb
jne
pop
adc
add
mov
adc
jo
stc
add
mov
add
jne
xor
cmp
inc
add
add
xlat
mov
and
inc
rcrl
adc
add
int3
jae
ja
xor
icebp
js
add
or
cmpsb
add
add
cmp
add
pop
push
jbe
inc
add
add
mov
div
add
fucomi
call
push
or
cmpsl
dec
add
lock
add
lret
dec
cmp
xor
repz
pop
leave
jnp
je
mov
enter
das
and
fwait
jo
or
xlat
push
add
add
add
test
pop
movsb
add
add
pop
xchg
xchg
push
add
sbb
add
xor
add
data16
xchg
movb
xor
mov
popa
lret
push
add
cmp
sub
push
add
push
jbe
stos
movsl
not
add
jg
jb
sub
popf
xchg
add
insl
and
mov
hlt
add
gs
add
lahf
repnz
add
rolb
stos
in
add
cmc
cmpsb
add
mov
add
add
dec
popf
sub
stos
xchg
add
mov
xchg
add
add
jns
stos
and
mov
lds
dec
push
add
bound
mov
fistps
int
jmp
xor
jnp
add
hlt
add
cmp
testb
add
cmpl
ja
pop
popl
xchg
cmp
hlt
add
dec
or
mov
mov
lret
inc
jle
add
nop
add
sub
mov
loop
push
fildl
add
mov
add
or
cmc
sbb
pusha
add
nop
add
add
dec
sub
add
push
add
adc
xor
pop
dec
sbb
add
stos
push
and
hlt
add
sbb
mov
mov
call
int
add
and
add
xor
cli
jne
add
arpl
add
add
inc
add
lret
sbb
mov
mov
int
xor
or
les
add
add
mov
add
aas
or
add
int
cs
int3
ss
int3
inc
xchg
push
push
add
ret
add
add
leave
mov
into
xchg
add
cld
std
fwait
insl
ja
add
out
test
dec
cmpsb
add
pop
loopne
pop
loop
jb
mov
mov
test
add
dec
cmp
ja
jbe
lret
jmp
jne
xor
aaa
adc
jns
inc
add
sbb
add
jge
inc
add
mov
aad
shll
mov
sbb
and
js
xchg
mov
mov
mov
add
add
mov
mov
das
sub
mov
ja
mov
add
imul
movsl
addr16
inc
add
jbe
scas
nop
add
add
inc
add
or
stos
shll
add
pushf
xlat
dec
jnp
outsb
es
add
movb
mov
repz
loop
loope
dec
pop
inc
imul
pop
leave
push
add
sbb
adc
mov
cmp
add
test
daa
xchg
add
add
stos
mov
lea
sbb
dec
fcmovbe
add
ret
push
adc
call
es
and
and
mov
jp
add
mov
in
in
mov
adc
leave
mov
outsb
dec
or
pop
rolb
fsts
add
add
cmp
add
adc
mov
lea
jns
addr16
pusha
add
bts
pop
addr16
pop
mov
add
imul
xor
insl
push
add
mov
pushf
enter
mov
adc
mov
add
mov
pop
jle
std
push
add
push
push
mov
cwtl
xor
andl
into
data16
int
dec
or
add
aas
stos
and
roll
or
lret
testb
mov
in
pop
add
mov
push
add
dec
push
stos
testl
add
push
jp
iret
xorl
xor
and
enter
and
mov
mov
aaa
and
icebp
cld
js
add
add
out
je
je
or
add
push
add
insl
testb
jecxz
push
add
adc
ret
add
add
add
das
xchg
xchg
add
jge
test
fwait
js
add
fdivrl
add
add
pop
mov
add
xrelease
xor
popa
iret
xor
xlat
ljmp
in
or
add
jns
fistpl
fsubrl
in
push
fsub
adc
dec
sub
mov
cmc
test
enter
cwtl
xor
mov
gs
cli
sub
mov
add
and
mov
push
icebp
bound
mov
jnp
decb
aam
pop
xchg
addb
or
cmp
xchg
add
minps
jb
pop
es
pop
rolb
pop
cmp
clc
lods
in
data16
ret
inc
add
aad
add
xor
sub
sbb
push
dec
add
mov
cmp
pop
jb
int3
dec
add
adc
mov
repz
add
add
adc
prefetch
or
jb
sbb
mov
pop
push
add
push
outsb
out
imul
flds
add
mov
xchg
out
aam
pop
mov
pop
icebp
adc
pop
fwait
inc
add
fdivl
mov
add
add
add
push
add
bound
mov
aaa
adcl
ljmp
inc
add
addr16
sarl
sub
mov
add
add
into
add
mov
scas
fistpl
sbb
arpl
outsl
push
add
das
mov
add
push
add
xchg
add
into
pop
sub
add
jg
pop
or
setnp
dec
ds
ljmp
stos
std
inc
add
addb
imul
aad
xchg
add
movb
ror
test
add
rolb
dec
scas
clc
add
adc
loop
mov
jnp
xor
cmp
movb
ljmp
enter
add
dec
hlt
add
add
add
loope
cmp
pop
and
or
and
jmp
pop
fidivs
push
enter
lock
add
add
scas
mul
rcll
jno
sbbl
jae
add
and
add
pop
ja
loopne
dec
lret
add
xchg
mov
pop
push
add
add
sub
add
cmp
cmc
outsl
xor
add
lods
out
leave
adc
addb
aad
enter
mov
xchg
xor
pop
out
adc
pop
sub
add
inc
add
and
add
add
add
pop
jns
add
push
add
addb
jo
fcmovne
js
add
pop
sub
add
xor
test
orl
push
mov
xchg
lcall
in
loop
cmp
sub
inc
pop
sbb
xchg
add
mov
aad
sub
sahf
testb
sub
add
cmp
add
mov
add
and
add
mov
dec
dec
mov
dec
fidivs
sub
add
mov
push
add
or
cmp
testb
add
mov
mov
cmp
bound
mov
xor
addr16
mov
xchg
jae
push
add
xchg
add
mov
mov
int
test
cmp
add
jbe
sub
add
add
sbb
add
mov
pop
push
dec
iret
cmpsb
add
cwtl
inc
popa
addl
add
add
stos
mov
inc
pop
aas
jl
xchg
jecxz
add
push
stc
xchg
aas
mov
sbb
repz
mov
repnz
in
je
lea
out
add
push
iret
pop
or
sbb
fnsave
dec
inc
add
adc
add
add
add
xchg
add
add
mov
and
add
add
lret
dec
push
add
clc
jae
add
out
out
jp
sbb
mov
add
add
add
les
mov
push
add
push
add
jbe
scas
bound
mov
push
add
pusha
add
mov
mov
add
xchg
loop
mov
sbb
lret
cmpsl
movsb
add
leave
sub
mov
fdivl
pop
xchg
mov
sub
add
add
add
shll
pop
cwtl
divl
add
mov
insb
incb
add
outsb
dec
nop
add
sbb
sub
rolb
test
popf
jne
xchg
push
add
insb
jbe
mov
pop
sub
mov
inc
cs
adc
ret
and
push
add
inc
add
xor
cmp
pop
inc
add
add
xchg
add
jo
mov
add
pop
fwait
mov
scas
sbb
addb
mov
loopne
in
jmp
inc
add
lret
add
mov
inc
add
push
add
mov
push
add
inc
add
test
cmpsl
out
sbb
xchg
push
add
mov
dec
mov
lods
mov
shll
add
add
push
jns
add
jle
sub
cmc
pushf
add
mov
sbb
add
add
or
add
test
into
fisubs
mov
mov
mov
sub
scas
pop
enter
add
add
add
mov
pop
xor
pop
mov
test
add
add
fildl
add
hlt
add
mov
jns
out
int
add
push
add
fsubs
add
rolb
lret
push
bound
mov
mov
repz
add
mov
mov
add
mov
add
pop
int3
or
out
outsl
je
inc
push
mov
mov
out
add
fldcw
sub
iret
xor
addb
pop
dec
inc
add
xor
adc
mov
xchg
inc
add
or
fdivr
jae
add
jnp
adc
shll
jg
add
sbb
mov
das
shrl
cmpsl
sub
rolb
dec
xchg
add
and
push
fidivl
add
add
bound
mov
shll
fsubp
add
jmp
in
aad
add
add
jle
stos
gs
dec
out
movb
add
dec
sbb
add
and
mov
fcomp
das
outsl
and
mov
lock
add
cwtl
and
mov
scas
mov
add
mov
adc
pop
rorl
hlt
add
xchg
add
add
sub
add
rolb
add
or
shll
cltd
js
mov
or
add
xlat
fists
cmp
add
es
jne
sbb
add
lock
pop
and
jnp,pt
or
add
mov
add
mov
add
inc
testb
and
repnz
add
jae,pt
push
test
add
popa
mov
cmp
sbb
add
mov
inc
data16
jmp
scas
xchg
incb
adc
sub
add
fwait
cmp
cmp
mov
add
sbb
subl
jg
xchg
fisubl
push
add
fdivrs
add
add
add
into
in
nop
add
add
arpl
aas
aaa
mov
mov
add
add
sub
or
in
push
add
cmp
inc
add
clc
ficoms
sub
test
cmpsb
add
add
mov
out
add
enter
cmpsb
add
sbb
add
ds
or
add
imul
and
mov
test
scas
mov
addb
iret
rcll
ljmp
and
mov
add
fisubs
insb
sbbl
push
add
sbb
mov
aad
add
rolb
push
add
jnp
or
add
testl
aaa
inc
add
mov
mov
add
add
add
jb
add
cmp
xchg
clc
mov
stos
jbe
and
dec
addb
mov
adc
adc
mov
stc
rolb
je
xor
add
sub
add
add
hlt
add
push
add
add
mov
add
jbe
mov
icebp
hlt
add
add
mov
add
add
stos
in
sub
adc
aam
and
dec
sbb
jp
xchg
sbb
rolb
add
or
or
out
xchg
sub
mov
mov
insl
or
push
mov
lods
movntq
mov
add
add
add
cli
outsl
cmpsl
jmp
adc
pop
fstps
stos
or
adc
in
inc
dec
add
mov
arpl
fdivr
sub
add
pop
scas
addr16
add
xchg
push
setle
add
mov
loopne
add
ja
sbb
add
in
pop
cmp
sbb
push
add
push
jl
add
add
pop
pop
sub
jge
je
xchg
faddp
add
loopne
out
add
sbb
rolb
stos
cli
dec
pop
push
pusha
add
fisttpll
add
add
in
rcr
add
mov
xchg
or
inc
int3
xchg
frstor
test
fdivl
add
sbb
emms
push
add
add
sub
xchg
push
jbe
out
repz
add
xchg
add
add
loope
ss
add
mov
add
mov
fstl
push
xor
mov
mov
daa
mov
pop
rolb
add
jne
bound
mov
push
mov
ret
add
push
cmpsb
add
mov
or
movb
les
rcrl
adc
add
pop
mov
rolb
and
pop
aad
add
add
lcall
dec
inc
fsub
adc
in
loopne
shrl
orl
fcomps
jge
aad
xchg
add
push
add
add
mov
jl
add
loop
jo
mov
mov
out
jle
dec
lds
inc
cmp
aaa
push
icebp
cmp
fdivrl
add
add
stos
dec
nop
add
and
mov
lcall
ficomps
add
sbb
add
mov
add
add
test
xchg
mov
fidivl
mov
xor
push
add
imul
dec
fisubrs
add
add
sbb
add
push
add
mov
mov
pushf
mov
pop
mov
sahf
pusha
add
add
add
movb
out
std
rolb
data16
data16
add
add
add
add
push
add
push
add
xor
xchg
aad
sbb
mov
std
data16
mov
test
pop
xor
pop
pop
insb
test
add
sbb
std
out
in
roll
xchg
cmpsb
add
mov
fadds
add
enter
add
and
lret
add
scas
pop
lods
repz
add
inc
out
fidivl
add
adc
mov
ret
fcomps
addb
jae
xor
dec
data16
mov
add
mov
insl
lahf
in
stos
ljmp
rorl
adc
in
sti
imul
mov
in
arpl
sub
mov
add
xor
xor
sub
mov
fistl
add
sub
push
addb
xchg
add
jbe
rolb
pushf
fnstenv
push
add
and
mov
push
aad
jle
xor
scas
mov
in
lods
lcall
icebp
pushl
mov
xchg
outsb
jno
popf
cmpsb
add
sbb
cli
push
push
add
cmpsb
add
arpl
movsl
jnp
in
test
test
in
cmp
cmp
add
add
add
or
add
testb
xchg
add
xchg
add
out
imul
mov
xchg
insb
rolb
jne
add
adc
jle
jo
xchg
add
adc
jmp
lret
adc
lea
add
add
push
add
xlat
das
pop
and
mov
add
add
add
add
sub
lods
sub
dec
mov
add
jne
inc
add
add
lea
ret
psadbw
pusha
add
rolb
or
mov
jae
add
cmp
add
loop
jae
add
cwtl
mov
add
mov
addr16
cltd
cmp
add
bound
mov
add
xchg
dec
xor
cli
xchg
add
xchg
clc
mov
cmp
mov
add
add
add
add
add
gs
into
mov
cld
movsb
add
xchg
push
add
add
mov
mov
add
mov
scas
sub
pop
and
mov
xor
dec
cmpsb
add
notl
out
sti
mov
les
or
and
call
xor
rcll
out
add
mov
add
jg
cmc
movb
push
out
add
add
sti
scas
push
add
aad
dec
adc
movb
fbld
push
lock
imul
imul
inc
iret
jne
lahf
loopne
adc
aaa
mov
lcall
push
add
das
ret
add
add
pop
jns
rolb
rolb
pop
sti
in
popa
cltd
insl
mov
add
jo
clc
inc
loopne
mov
addr16
out
ret
mov
add
pop
rolb
mov
add
jmp
movsl
pop
adc
rorl
mov
mov
mov
in
mov
add
out
push
lcall
add
outsb
or
jb
mov
add
add
add
add
ljmp
xchg
mov
add
add
subps
rol
mov
xchg
pop
and
fucomip
dec
dec
push
cs
neg
adc
fistps
cmpl
sahf
mov
sbb
out
push
fldcw
hlt
add
pop
cmp
add
in
mov
mov
cli
jecxz
add
int
xchg
decl
mov
add
add
in
cmp
int3
mov
jge
fldcw
lret
dec
push
pop
fstpl
add
add
add
add
mov
add
mov
add
push
add
add
or
stos
gs
insb
jb
cmp
cmp
push
add
ret
pushf
stc
bound
mov
inc
add
adc
fsubrl
add
mov
fdivs
outsl
lret
imul
popf
mov
xlat
repnz
add
mov
add
ds
add
add
jne
addb
add
pop
add
out
test
add
push
clc
mov
xorl
dec
mov
add
add
jecxz
push
cmp
add
cmp
push
jp
loope
mov
les
and
mov
add
mov
test
add
mov
cmp
sub
cmp
movb
jno
lds
mov
loop
addb
lret
out
push
add
add
cli
or
add
mov
repnz
add
loopne
lcall
test
je
mov
popl
mov
shll
add
sahf
push
add
hlt
add
add
or
xchg
add
add
mov
add
add
add
lods
call
cmp
cwtl
fs
je
inc
xor
add
mov
add
in
ja
addl
aaa
pop
sub
add
imul
loop
and
pop
adc
adc
xlat
stc
stos
nop
add
jo
jecxz
js
mov
mov
gs
add
jg
add
add
adc
add
mov
popa
xor
adc
aaa
xchg
loopne
pushf
push
add
bound
mov
add
sub
add
int
add
xchg
testb
add
lahf
rolb
dec
jmp
mov
add
pop
arpl
inc
add
add
nop
add
add
loop
rdpmc
imul
add
cli
mov
cld
aaa
adc
lods
repz
jp
cmp
les
mov
inc
testb
pop
test
rolb
addb
clc
int3
mov
add
add
add
push
add
add
push
pushf
or
mov
mov
mov
jno
and
mov
mov
rolb
je
shrl
aam
das
adc
int3
popf
jae
push
lods
sub
push
add
outsb
testb
push
mov
mov
xor
aaa
addb
sub
mov
imul
icebp
shrl
pop
int3
jg
jp
test
xchg
cmp
pop
pop
cmp
add
jl
out
sti
xchg
outsl
out
push
or
mov
mov
add
mov
out
andl
add
add
je
imul
add
xchg
and
mov
pop
or
add
add
enter
cmp
loop
mov
or
nop
add
dec
mov
add
lock
shll
jns
insl
lods
call
add
dec
cmp
add
mov
fsubl
and
add
mov
push
add
sahf
xchg
add
mov
mov
add
add
add
add
movb
pop
bswap
cmp
or
add
insb
jnp
shll
add
push
sub
add
mov
jo
aas
out
dec
cmp
xlat
in
stos
movsl
jmp
js
sub
je
jle
push
or
lds
jae
arpl
int3
pusha
add
add
icebp
push
add
mov
add
add
mov
stos
mov
mov
add
lret
and
mov
bound
mov
jns
push
or
cli
push
add
add
mov
add
adcl
add
add
int
push
push
add
jmp
mov
mov
adc
add
add
add
or
mov
add
scas
rolb
mov
fsubrl
int3
popa
jecxz
add
add
cmc
hlt
add
add
loop
mov
jmp
add
loop
mov
adc
ljmp
add
divl
add
mov
and
add
add
jns
mov
add
jmp
add
add
add
adc
lret
mov
cmp
add
out
lock
out
lahf
clc
mov
call
add
mov
test
call
inc
and
add
mov
mov
sbb
mov
mov
mov
dec
rolb
ds
add
fptan
add
mov
aam
hlt
add
jge
pop
aas
loope
sahf
stc
das
dec
sub
scas
addb
sbb
das
mov
inc
add
sbbl
add
push
add
fidivl
add
add
push
pop
scas
addr16
in
push
add
add
or
daa
xor
rolb
lea
or
call
ret
xchg
jo
add
data16
rolb
lcall
imul
outsb
push
ret
rolb
in
mov
icebp
xchg
add
int
inc
pop
aas
dec
or
add
add
addb
and
mov
sbb
movb
test
das
movsl
nop
add
add
mov
ljmp
mov
jl
push
adcl
xor
xor
inc
add
add
fcoml
pop
bound
mov
movsl
push
in
and
add
fbstp
xor
mov
pop
lret
rolb
or
bound
mov
jle
pushf
mov
add
add
insb
pop
daa
xlat
dec
call
add
jecxz
es
add
iret
stc
mov
movb
clc
mov
add
popa
push
rolb
adc
adc
add
xchg
add
add
add
repnz
ret
in
mov
xor
jne
or
add
jg
add
testl
sbb
testb
sbb
sbb
mov
daa
jbe
iret
xor
add
sbb
movzwl
test
push
add
lds
lcall
add
add
add
lcall
loop
cmc
popf
jnp
xchg
add
roll
lock
mov
add
aad
sti
loope
add
rolb
jmp
dec
mov
imul
jmp
fwait
dec
pop
and
mov
sti
push
fisubl
cld
fists
dec
lock
cmp
jp
adc
sbb
add
scas
jle
dec
out
push
add
cwtl
mov
ret
add
iret
bound
mov
mov
add
add
addb
in
sbb
in
shll
insb
andl
js
mov
add
lea
mov
push
addl
cmpsl
cwtl
pop
lods
popa
lock
inc
add
xor
add
fbld
inc
fdivs
adc
pop
clc
and
sbb
fldenv
add
fiadds
mov
popf
push
add
and
xchg
lods
leave
ret
addr16
mov
add
mov
lcall
add
xchg
add
or
add
sub
test
add
sub
xor
jbe
or
and
mov
mov
add
insb
repnz
enter
pop
ficoms
mov
dec
fidivs
addb
add
mov
sarl
add
int3
sbb
push
mov
add
sti
mov
mov
add
mov
aaa
dec
sub
rolb
outsb
cmp
loopne
push
add
add
jmp
je
sbb
add
add
into
test
or
add
add
add
je
pop
sub
add
mov
add
jg
lret
jmp
mov
loopne,pn
aad
mov
imul
mov
mov
mov
fdivr
fldl2e
aas
xchg
add
add
cmpl
mov
clc
repz
fsubrs
insb
repz
jns
cs
into
repnz
aaa
add
mov
cmp
adc
lahf
test
call
loop
pop
rolb
in
add
inc
inc
ja
js
xor
leave
xchg
outsl
xor
dec
aad
jle
lea
rolb
jo
or
jp
gs
sub
test
xchg
dec
and
add
mov
sub
add
add
