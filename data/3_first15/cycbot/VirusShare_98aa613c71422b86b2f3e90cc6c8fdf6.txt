dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
imul
imul
nop
nop
nop
nop
nop
nop
nop
nop
fstp
fstl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
mov
mov
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
inc
inc
inc
rol
rol
fs
fs
fs
fs
mov
mov
nop
nop
nop
rol
rol
rol
ror
enter
enter
enter
enter
enter
enter
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnbe
shll
jo
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
frstor
and
and
and
rcl
rcl
rcrl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
sub
lock
lock
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
movsb
movsb
movsb
movsb
movsb
movsb
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
or
or
or
pushf
pushf
pushf
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
addl
add
in
in
in
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
popl
push
push
push
push
push
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
test
nop
nop
nop
xor
xor
xor
xor
xor
xor
div
div
div
jp
jp
jp
jp
jp
jp
jp
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
jg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
jno
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
data16
mov
lea
lea
lea
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lea
lea
xchg
xchg
nop
nop
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
jmp
nop
nop
nop
nop
nop
nop
xchg
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
aas
aas
aas
aas
aas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz
repz
jge
cmp
cmp
cmp
xor
xor
xor
xor
nop
lds
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
addb
addb
push
push
push
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lret
lret
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fdiv
repnz
repnz
repnz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
imul
push
push
push
push
push
std
std
std
std
std
std
std
std
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
test
test
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
out
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
cmp
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
jno
jno
jno
jno
jno
jno
jno
jno
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
ss
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
loopne
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fucomi
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
test
test
test
test
test
test
test
fisubs
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
push
push
push
push
div
div
div
negl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
lea
lea
lea
lea
lea
lea
lea
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ja
ja
ja
ja
ja
ja
ja
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ja
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jbe
jbe
jbe
jbe
jbe
jbe
jbe
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
nop
nop
nop
nop
nop
nop
es
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
leave
leave
leave
leave
leave
leave
leave
leave
nop
nop
nop
nop
nop
jmp
jmp
nop
nop
nop
nop
nop
nop
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
sub
sub
sub
sub
mov
mov
push
push
push
push
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
xchg
xchg
xchg
xchg
xchg
xchg
xchg
call
call
call
call
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
addr16
addr16
lea
lea
push
push
push
push
push
push
push
push
push
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jo
jo
jo
jo
jo
jo
jo
jo
je
je
je
je
je
je
je
je
je
je
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
pop
pop
pop
adc
adc
adc
adc
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
test
test
test
test
test
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
dec
dec
dec
dec
nop
insl
insl
insl
insl
insl
insl
insl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
or
or
or
or
jp
jp
jp
jp
jp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
imul
ss
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
bound
loopne
loopne
repnz
repnz
repnz
repnz
repnz
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ds
ds
ds
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
sub
sub
sub
repz
xor
xor
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
pop
nop
nop
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
nop
nop
test
test
cmp
cmp
cmp
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
mov
dec
dec
dec
dec
dec
dec
dec
scas
scas
scas
scas
je
je
je
je
je
je
je
je
je
je
dec
dec
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jg
jg
jg
jg
jg
jg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
gs
gs
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
inc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
nop
nop
nop
nop
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
ficoms
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
lock
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
gs
out
out
out
out
out
jo
jo
inc
inc
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
cmc
cmc
cmc
cmc
mov
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
div
div
mull
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
js
js
js
dec
xchg
fstp
fstpl
mov
mov
rclb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
adc
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
cmpsb
cmpsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
popa
popa
popa
popa
popa
popa
popa
popa
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xchg
xchg
mov
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
cmc
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
data16
data16
data16
data16
data16
fstp
fstp
fstp
fldl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ss
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
fs
fs
fs
fs
xor
xor
into
into
into
into
into
into
mov
nop
nop
nop
nop
nop
repz
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
addl
addl
addl
out
out
out
out
out
out
out
out
out
out
out
out
call
call
call
call
call
call
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
ficoml
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmp
cmp
cmp
cmp
cmp
scas
scas
scas
scas
stos
stos
stos
stos
stos
stos
stos
stos
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
jb
jb
stos
enter
enter
add
add
add
add
add
add
add
rol
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
lret
cli
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addr16
addr16
addr16
rol
rol
rol
nop
test
test
test
test
test
test
test
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
cmp
cmp
cmp
cmp
cmp
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
cmp
rcl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
data16
data16
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
nop
nop
nop
nop
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
and
and
and
test
test
test
xor
xor
adc
adc
popa
popa
popa
popa
popa
popa
popa
jo
jo
jo
jo
jo
jo
jo
jo
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
decb
jb
jb
popf
popf
popf
popf
popf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
nop
nop
nop
nop
nop
nop
nop
lds
mov
mov
jmp
jmp
jmp
addb
adcb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
sets
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lock
push
div
div
div
div
div
div
div
div
div
div
div
mov
mov
mov
mov
mov
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
mov
add
add
add
add
add
add
add
add
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
mov
nop
nop
nop
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
fs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
in
in
in
in
in
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
adc
push
push
push
push
push
push
push
push
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
pop
pop
pop
pop
pop
pop
pop
pop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
gs
gs
gs
push
add
add
add
add
add
add
add
add
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
gs
gs
or
or
jmp
jmp
adc
adc
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
jle
jle
jle
jnp
jae
jae
jae
jae
jae
jae
jae
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jno
mov
mov
nop
nop
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
mov
mov
and
and
and
and
and
and
and
in
in
in
in
in
in
in
in
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
je
nop
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
addb
addb
addb
addb
addl
sbb
sbb
sbb
sbb
sbb
aam
aam
aam
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
cmp
or
cmpsl
xor
ja
into
xor
xchg
arpl
push
add
in
stos
or
nop
or
add
add
cltd
sti
loope
push
add
icebp
icebp
lds
and
add
shr
pop
add
dec
fisubrs
add
xchg
mov
aad
or
mov
add
add
insb
add
mov
pop
jmp
add
add
cld
test
push
push
add
jg
dec
pop
jle
pop
add
jns
scas
lret
loopne
add
dec
sbb
lahf
imul
add
xchg
push
add
add
out
sub
jbe
adc
int3
push
add
xor
movl
jns
add
data16
add
iret
xchg
dec
add
add
and
add
pop
add
or
das
sbb
enter
pop
pop
fistpll
in
add
cwtl
xchg
mov
cmp
push
add
test
jl
scas
push
mov
cld
adc
mov
rcrl
mov
push
sub
add
add
adc
add
sbb
and
loop
add
sub
add
in
add
jnp
add
repnz
add
mov
add
loop
add
fucom
lock
mov
add
mov
add
adc
xor
add
pop
add
add
xchg
mov
lar
xchg
xchg
add
add
mov
add
pop
mov
inc
add
clc
in
add
out
add
lock
jns
xor
test
inc
mov
and
nop
dec
pop
pop
add
nop
mov
in
xchg
cli
sbb
scas
pop
add
stos
test
mov
add
repz
adc
rdmsr
add
add
add
shlb
fsts
or
add
je
adc
add
into
cmp
andl
inc
add
cmp
adc
add
imul
add
inc
add
add
add
inc
xor
mov
add
add
xor
add
out
pop
aam
jbe
add
inc
add
dec
jo
dec
or
mov
data16
lret
xor
in
scas
cmp
pushf
enter
dec
mov
addb
add
mov
add
mov
pop
shl
adc
popf
pop
jg
add
inc
add
add
push
jmp
add
test
mov
add
push
add
mov
xchg
repnz
imul
add
addr16
aaa
inc
add
add
aam
inc
xor
add
call
in
mov
add
xchg
add
add
mov
into
inc
sahf
sub
addr16
out
cmp
xchg
adcb
and
shld
repnz
stc
cmpsl
adc
and
pop
scas
jno
add
adc
mov
inc
or
mov
add
divb
out
or
andl
pop
mov
ja
and
dec
leave
test
test
cmp
adc
add
jl
faddl
cwtl
shl
mov
push
add
dec
insb
add
xor
and
add
fcmovu
lret
mov
cmpsb
fstps
push
fmuls
ljmp
lret
addr16
add
sahf
dec
add
push
add
repz
shrl
add
mov
sbb
into
testl
fidivrl
add
ret
outsl
mov
push
add
dec
add
add
sbb
mov
sbb
dec
pop
add
cmp
dec
add
dec
popf
pusha
add
icebp
pop
andl
shl
jecxz
add
push
add
xlat
add
mov
xchg
xor
inc
add
cmc
add
dec
add
pop
xchg
xchg
pop
mov
or
fwait
ret
jmp
sarl
and
in
ret
sub
in
cmp
sub
sub
mov
add
add
add
ja
mov
cltd
cmpsl
xor
cmc
and
pop
xchg
adc
add
mov
sub
add
pop
mov
cli
sahf
xchg
dec
add
add
shrb
adc
jns
into
dec
data16
xchg
repz
lcall
stos
int
insb
add
inc
in
ss
sbb
add
cmp
lds
add
fsts
and
enter
cmpsl
mov
jp
arpl
mov
add
data16
and
inc
pop
pushf
loopne
imul
test
add
ret
push
test
hlt
scas
add
push
jne
add
add
add
cmp
les
xchg
adc
lock
repnz
ret
push
add
xor
mov
into
cs
cmc
into
jno
push
fisttpl
add
lea
ret
gs
sbb
and
add
sbb
mov
jns
test
inc
add
sbb
xchg
ja
std
jle
xchg
rolb
xchg
add
lret
loop
add
add
fdivl
mov
gs
pop
bound
cmc
sbb
aaa
and
ds
loope
sbb
jae
imul
push
add
xor
push
add
pushf
ret
das
imul
add
mov
cmp
cwtl
xchg
cwtl
xor
mov
add
loopne
fstp
xchg
mulb
add
mov
shlb
xor
xor
add
add
xor
dec
pop
andl
add
xchg
stos
jmp
add
xchg
mov
add
lds
scas
faddp
outsb
add
mov
pop
add
jnp
push
jecxz
push
add
movsl
push
add
mov
add
dec
push
add
imul
aaa
fidivs
add
nop
or
cli
inc
push
add
repnz
pop
add
ss
mov
fldcw
add
cmpsl
repnz
inc
add
ret
or
shrl
add
adc
add
push
add
pop
pop
ja
cmp
stos
int
test
out
add
add
pop
and
pop
dec
ds
ret
roll
jge
lret
mov
add
test
push
add
jo
movsb
xlat
gs
cmp
push
nop
add
xor
std
das
mov
stc
pop
add
push
add
jno
dec
rol
mov
loopne
xor
jo
rcr
adc
data16
insl
dec
add
add
xchg
jae
dec
inc
jbe
mov
jnp
aam
jg
mov
add
add
push
add
jmp
sub
imul
push
cmpsl
adc
jb
fimuls
movsl
cmpl
push
adc
mov
cmp
lods
iret
fldcw
outsb
add
stos
cmp
in
add
bound
and
mov
xchg
nop
inc
cmp
push
add
std
hlt
xlat
mov
and
dec
fisttps
pop
mov
in
nop
lahf
aas
push
add
lret
loopne
xchg
add
fimull
or
and
negb
rcrb
lret
add
xchg
fwait
inc
add
sarb
mul
outsb
add
jns
add
out
addr16
inc
add
add
subl
popa
dec
in
push
add
adc
pop
push
add
cmp
pop
add
inc
ret
add
mov
mov
mov
testl
add
rol
push
hlt
lahf
cmp
sbb
add
aas
xchg
inc
cmp
mov
jle
push
add
cmpsl
inc
inc
add
or
fisttps
pop
add
lock
movsl
push
add
outsl
repz
pop
push
add
jp
xchg
bound
push
add
add
or
lods
lock
add
jae
add
add
mov
bound
xchg
add
bound
push
add
cmp
pushf
sbb
or
pop
cmpsl
push
add
ret
enter
cmpsl
les
subb
lods
dec
add
fcomps
imul
arpl
lcall
xchg
std
int
add
fisttps
xchg
cmc
stos
subb
or
jno
add
stos
pop
and
push
add
in
add
popa
pop
add
add
cld
jp
add
cmp
sti
out
sti
cmp
js
sub
add
ljmp
add
jb
jo
movsb
cmpsl
ljmp
aad
add
add
dec
cmp
pop
stos
dec
xor
pop
add
add
sub
lock
iret
or
add
cmp
ds
imul
add
loopne
pop
add
xor
data16
sub
repz
add
xor
or
dec
add
and
add
imul
add
add
add
pop
add
add
add
fidivl
adc
into
mov
add
add
sbb
dec
jg
iret
nop
leave
sti
add
lahf
int
add
add
out
dec
xchg
cli
inc
add
into
xchg
jno
mov
add
mov
lea
leave
pop
ret
dec
add
or
pop
in
jg
add
in
mov
ds
and
dec
pop
mov
cmp
ffree
sbb
cli
fimuls
add
cmp
rcll
inc
xchg
jae
js
mov
push
inc
add
adcl
dec
hlt
lahf
out
test
movsl
mov
add
jl
sub
adc
scas
or
mov
pop
jle
ljmp
add
jb
sub
movsl
xchg
jge
add
mov
data16
sub
nop
mov
pop
cmc
addb
add
rcr
mulb
jne
mov
xor
adc
mov
loopne
add
adc
mov
add
mov
push
add
add
gs
jo
mov
xchg
xorb
enter
fsqrt
out
add
or
lods
mov
loop
nop
pop
xor
sbb
dec
add
outsl
cli
lcall
add
outsl
add
sub
data16
pop
add
call
dec
sti
xor
pop
popf
mov
rcll
add
add
shrb
xor
cmp
or
cmc
push
mov
add
add
aas
mov
jb
movsb
arpl
add
xchg
dec
add
pop
out
hlt
mov
les
hlt
jle
add
add
push
add
daa
push
add
xchg
inc
or
pop
add
sub
sbb
add
jno
add
xchg
stos
jg
add
add
nop
dec
inc
push
add
add
mov
bound
jecxz
jae
xor
dec
mov
mov
add
adc
add
inc
scas
push
add
dec
add
sub
aam
and
mov
or
dec
add
push
add
push
adc
scas
and
iret
mov
xchg
loope
pop
cmp
int
and
add
inc
add
test
adc
cli
out
and
xchg
sbb
push
add
fldenv
mov
add
mov
cmp
mov
cmp
shl
xor
test
add
lods
add
lea
lea
dec
mov
add
ret
fisttpll
push
loop
add
outsl
push
add
shrb
xchg
arpl
jnp
add
mov
sbbb
pop
mov
andb
sub
lahf
dec
and
jl
popa
pop
mov
test
stos
jmp
subl
add
add
inc
fs
lcall
mov
in
push
add
sub
pop
bound
aaa
pop
stc
int
cltd
add
inc
add
leave
jle
mov
add
loopne
mov
xchg
add
add
add
add
push
aam
stos
jo
adc
add
pop
in
jg
rcl
add
mov
cmc
mov
dec
add
test
movsl
test
add
xchg
cmp
cmp
into
iret
cmp
testb
add
test
add
xchg
or
add
fsubrs
orps
xchg
push
add
xlat
inc
and
push
adc
add
pop
mov
cmpl
add
dec
add
push
add
rorl
ds
loopne
imul
mov
cli
decb
add
push
jecxz
mov
sub
ret
dec
mov
add
mov
stc
ljmp
lret
movsl
arpl
add
sub
int3
dec
aaa
sub
pop
jmp
add
fwait
aam
inc
add
adc
mov
add
sub
mov
cli
cmp
gs
jne
mov
test
pop
jns
jno
aad
and
mov
out
call
insb
add
add
sub
loopne
iret
pop
add
add
into
inc
add
jnp
imul
add
mov
mov
push
cltd
or
jmp
insl
mov
dec
repnz
cmc
mov
add
mov
xor
xchg
xor
stc
pop
add
aas
stos
imull
fcomp
dec
add
add
add
adc
or
jnp
adc
mov
add
mov
out
aad
cwtl
jl
bswap
adc
add
inc
xor
xchg
adc
hlt
mov
repnz
test
cmc
dec
dec
add
sbb
nop
inc
add
add
add
movsb
roll
fwait
out
cmp
in
popa
ret
loope
inc
add
test
sbb
ffree
cmp
stos
call
jnp
mov
in
add
sarb
jle
cmpl
add
add
cmc
inc
add
sbb
add
stos
std
mov
in
and
xor
jae
add
shlb
sub
mov
addl
sub
jge
jg
aas
jl
sbb
push
add
add
insb
add
add
inc
popa
rcrl
add
add
push
add
out
dec
add
inc
rcll
xor
jnp
lock
and
mov
add
xchg
mov
xchg
in
mov
ror
inc
add
aad
lods
inc
andl
mov
add
jecxz
jl
pop
sbb
xchg
mov
add
sti
inc
push
outsb
add
hlt
cwtl
mov
pop
movsl
inc
add
dec
add
nop
and
ljmp
adc
fldcw
clc
add
add
divl
stos
jb
mov
add
out
pop
jo
js
mov
push
add
pop
jp
clc
dec
add
mov
call
xor
sub
pop
mov
adc
cmp
std
mov
rorb
lret
jns
add
jmp
xorl
ljmp
mov
test
xchg
add
pop
cmp
add
std
xchg
mov
add
cmp
jle
cwtl
jne
add
test
add
add
add
add
cmc
inc
xchg
sub
out
inc
sbb
pop
add
add
lcall
jae
xchg
mov
xor
add
mov
enter
add
mov
fldl
sub
dec
add
push
add
push
jno
add
pushf
xchg
push
add
or
add
mov
and
das
aad
add
jno
add
add
xchg
mov
and
pop
pop
jno
pop
add
imul
out
mov
hlt
and
inc
ficompl
in
sub
movl
lea
push
clc
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jne
push
add
add
shll
jnp
add
add
sbbb
mov
aas
jle
ljmp
add
add
inc
add
sub
add
lcall
add
out
bound
mov
add
xchg
leave
and
stc
push
add
stc
aad
mov
cltd
cmp
sub
imul
add
xor
sbb
inc
add
jp
xor
adc
out
sub
adc
fildll
mov
idiv
loopne
xchg
xchg
daa
cmp
sub
inc
add
popa
rcr
or
mov
lods
outsb
add
add
add
rcrl
add
adc
inc
addr16
sub
inc
andl
mov
add
dec
add
add
jmp
push
add
mov
lahf
sti
jg
add
sub
lock
add
add
add
add
cmpsl
sahf
mov
mov
add
popa
out
fwait
imul
das
add
xchg
test
inc
add
mov
lea
daa
xchg
scas
lods
jg
jl
ljmp
pop
mov
jnp
out
inc
add
aas
out
mov
pop
add
add
add
and
inc
out
jbe
push
add
xchg
xor
pop
jae
adc
shrl
test
and
add
addr16
fcmovnb
mov
add
mov
lock
div
adcl
lods
dec
add
add
loop
mov
loop
push
and
arpl
mov
cmp
int
mov
add
add
aam
push
add
add
das
subl
push
add
shll
fwait
sbb
out
inc
add
pop
mov
push
add
mov
jne
adc
dec
add
rcrb
daa
xor
mov
dec
add
fs
inc
dec
add
pop
push
xchg
mov
add
xchg
testl
cmpsb
in
pop
add
and
xor
push
add
add
add
push
add
lds
rclb
scas
or
xor
mov
and
sbb
cmpsb
ror
popf
dec
mov
add
mov
aad
adc
dec
fsts
push
add
add
add
sub
jo
sbb
scas
add
or
divb
and
loopne
jmp
add
out
pop
add
stc
lods
pushf
imul
shlb
add
jns
add
test
shr
mov
into
pop
add
push
add
and
orl
add
mov
add
insb
add
fildl
mov
mov
pop
mov
stc
pop
or
xor
add
dec
les
repz
add
push
add
out
scas
stc
mov
xchg
movsl
xorl
mov
inc
cmpsl
adc
sarb
xchg
push
test
mov
add
add
push
adc
fs
shll
pop
cmc
dec
add
sbb
sub
imul
rorl
add
mov
sub
pop
add
ljmp
test
add
add
jns
mov
add
fbld
movsb
pushf
dec
mov
or
push
add
add
push
add
mov
out
cltd
iret
enter
insb
add
pop
add
add
add
jge
xchg
jl
fdivrl
add
fldcw
int3
mov
add
add
add
jo
mov
add
and
add
adc
add
xchg
cmpsb
add
pop
xor
xor
xchg
mov
and
add
icebp
push
add
jg
mov
mov
fisubs
add
dec
scas
adc
or
mov
adc
mov
add
sub
dec
add
int3
pop
fcmovbe
inc
jp
test
test
add
and
sub
dec
stc
sub
enter
cmp
fwait
jne
add
outsl
mov
bound
push
add
xchg
xchg
pop
sahf
data16
add
shl
pushf
inc
cmp
pop
cmpb
add
pop
add
add
mov
inc
add
and
xor
int
add
xor
fsubrs
int3
aas
into
scas
in
aaa
sbb
and
test
xor
ljmp
add
mov
add
add
cmpsb
gs
pushf
mov
add
or
outsb
add
loopne
pop
popa
mov
pop
add
stos
xchg
or
cld
mov
mov
add
push
add
movsl
mov
add
add
push
mov
aas
stc
js
pusha
add
push
add
cmp
idivb
sbb
mov
mov
pusha
add
sub
push
pop
shl
ds
dec
add
mov
cmp
jmp
lods
cwtl
mov
jno
cmp
shl
mov
sub
aad
mov
dec
add
xchg
sub
cmp
iret
jl
jbe
enter
push
addr16
hlt
addb
add
push
add
xor
add
repz
flds
add
cltd
rcrb
sarb
add
push
add
jb
xor
add
jl
stc
fnsave
stos
add
push
add
lret
fs
jecxz
xchg
rorl
dec
sub
inc
sbb
scas
jp
clc
jmp
jl
enter
jno
insl
jo
mov
add
add
add
int3
cmpsl
add
add
mov
cmc
arpl
adc
out
movsl
push
cli
dec
out
or
pop
lret
mov
lret
xor
xchg
add
scas
inc
add
adc
fwait
push
add
std
into
movsb
outsb
add
add
inc
add
das
cmp
lock
add
xor
out
andb
daa
inc
cmp
sub
lret
push
sbb
add
mov
addr16
push
add
push
add
sar
dec
add
add
add
add
cltd
pop
add
adc
repnz
rcll
add
mov
cmpsl
data16
add
xor
stos
xorb
cmp
or
or
xchg
xor
xor
cld
mov
negl
add
inc
xchg
inc
add
adc
xchg
lcall
pop
add
stos
sbb
sub
stos
loopne
out
aaa
sub
or
fdivp
mov
add
lods
decb
cmp
add
add
cmp
mov
xor
inc
add
or
mov
add
movsb
xor
push
add
daa
clc
out
or
dec
clc
sbb
movsb
fsts
dec
inc
add
pop
mov
inc
add
add
pop
data16
mov
add
out
lahf
stos
add
add
mov
dec
sahf
mov
mov
add
jbe
mov
mov
add
add
movsb
scas
fildl
icebp
sahf
sbb
pshufw
fsubp
je
mov
dec
add
rcl
arpl
gs
bound
outsl
test
cmp
jb
jecxz
xchg
fistps
sbb
mov
add
pop
jb
test
add
add
inc
add
sarl
add
addl
push
jbe
add
dec
push
add
add
pop
cmp
bound
mov
mov
add
add
sub
or
and
pop
lods
mov
sub
cmp
sbb
lock
dec
add
add
or
add
and
jae
add
das
cmp
add
pop
cmp
cmp
xchg
pushf
hlt
mov
add
lcall
test
push
add
das
mov
add
mov
add
cmpl
inc
sti
in
clc
xchg
in
push
jne
xor
jbe
test
mov
sub
dec
xchg
clc
lock
testl
daa
lret
jb
mov
sbb
sub
add
test
add
add
mov
push
lea
insl
fiaddl
in
and
cli
scas
mov
repz
imull
in
push
add
mov
jmp
jb
mov
pop
xor
or
cmc
adc
add
fldt
adc
xor
add
add
mov
daa
std
dec
add
mov
add
add
scas
mov
sub
mov
add
lret
add
add
icebp
add
shr
aad
les
lea
add
add
xchg
rcrl
aaa
lods
imul
add
add
add
sub
daa
pushf
xchg
enter
adc
pusha
add
lahf
push
cli
leave
xchg
and
add
ret
js
cmp
push
cmp
movsb
sahf
add
add
out
aad
loop
ss
je
push
add
cld
sti
sub
addl
jmp
add
ljmp
add
enter
add
leave
daa
ja
and
or
jecxz
lea
adc
loopne
add
add
push
nop
imul
and
sarb
and
mov
ds
cmp
inc
add
roll
dec
add
push
mov
inc
add
add
inc
push
and
cltd
sub
add
ficomps
add
test
add
mov
out
data16
add
add
xchg
add
mov
cld
xor
ret
add
push
add
add
in
mov
add
gs
lea
and
jnp
bound
cmp
and
aaa
shll
jp
lds
add
mov
push
add
sbb
mov
out
add
insb
add
mov
add
stos
pusha
add
add
cmc
jae
popf
add
mov
add
add
add
cmp
in
add
xor
movsb
movb
imul
idivb
fdivrl
cmp
dec
add
sbb
mov
jle
pop
push
add
dec
add
ret
and
xchg
mov
dec
add
add
add
leave
outsl
dec
add
add
xchg
pusha
add
aaa
or
sti
imul
mov
test
xor
inc
add
mov
adc
ficoml
add
cmpsb
adcb
lock
out
push
add
scas
gs
sbb
add
rolb
push
fimull
or
sub
into
outsl
mov
xchg
cmp
cmp
out
pushl
xor
cmp
jmp
lahf
push
add
mov
xchg
popa
or
add
outsb
add
sub
lock
adc
outsb
add
mov
insl
xor
xchg
out
rcll
add
jge
add
pop
scas
sub
in
xor
outsb
add
mov
movsb
jmp
add
add
dec
add
add
add
movsb
inc
add
jp
cmp
cmpsl
ret
fistpl
sbb
sbb
out
mov
ljmp
add
xchg
stos
jnp
add
nop
push
add
push
add
jecxz
insl
sub
fdivs
jge
add
loope
repnz
sub
inc
adc
pop
mov
jmp
dec
and
aas
add
or
enter
and
and
cmp
mov
aaa
sub
out
rcl
add
and
sti
insb
add
add
rorb
dec
add
ja
add
mov
popf
insb
add
dec
add
xchg
jne
shll
xchg
aaa
push
xor
cli
pop
ljmp
mov
lds
add
in
adc
add
icebp
cmp
loop
mov
and
in
sub
mov
dec
std
popf
push
add
or
pop
or
cltd
xor
cltd
mov
outsb
add
push
add
jl
adc
push
add
push
add
add
xchg
std
rorl
add
mov
sub
cmpsl
pusha
add
lahf
daa
imull
or
sbb
les
xchg
pop
add
jno
data16
add
add
mov
movsb
or
dec
add
add
data16
inc
xchg
sbb
mov
jge
or
test
add
add
cmc
sbb
add
push
add
add
cmpsl
daa
xor
mov
mov
cmp
out
pop
add
sbb
imul
fs
rolb
movsl
mov
fsubl
push
ja
add
mov
add
add
cmp
js
iret
mov
add
xchg
pop
add
add
test
sbb
add
repz
or
les
push
add
sub
pop
add
lret
jne
mov
pop
add
add
cmp
and
sar
gs
jns
lods
inc
add
add
cli
xlat
mov
addl
gs
add
add
add
fdivs
int3
mov
bound
inc
xor
xchg
lret
add
dec
add
add
cmp
ret
mov
cmp
das
lret
cli
out
jo
inc
es
xchg
push
or
lds
push
add
aam
cmc
stos
push
test
clc
mov
cwtl
mov
xor
cmp
dec
add
cmp
or
arpl
add
ret
mov
cmp
ljmp
add
out
das
mov
sarl
add
push
add
out
cmp
orb
ret
or
mov
jecxz
or
lods
push
add
pusha
add
ret
xchg
add
scas
mov
hlt
sub
xchg
mov
stc
leave
pop
jecxz
or
add
add
xor
and
in
je
ret
rolb
or
test
add
add
add
or
add
jmp
add
fisubl
add
aas
dec
add
scas
sub
outsl
sbb
sbb
sub
mov
and
dec
add
pusha
add
pop
mov
sbb
stos
sbb
sub
add
out
call
nop
jmp
jno
into
add
sbb
cld
nop
nop
jae
add
ret
or
test
fwait
push
mov
xchg
ret
add
movsl
add
and
shrb
add
mov
leave
nop
jmp
insb
add
movsl
add
in
leave
nop
jmp
add
add
sbb
sar
repnz
nop
nop
jae
insb
push
test
xlat
rolb
addl
sbbl
roll
add
adc
mov
xchg
ret
aad
add
clc
repnz
nop
nop
jae
inc
sbb
add
add
fwait
push
push
mov
xchg
ret
mov
sub
add
add
ret
clc
repnz
nop
nop
jae
cltd
pop
ds
push
add
sbb
movsb
testl
xchg
ret
mov
add
add
mov
push
clc
repnz
nop
nop
jae
sbb
add
add
cmp
cld
nop
nop
jae
sub
mov
sbb
filds
cld
nop
nop
jae
add
mov
lds
xor
mov
xchg
ret
cltd
add
add
add
push
add
mov
fadd
and
add
repnz
nop
nop
jae
add
and
addl
clc
repnz
nop
nop
jae
add
inc
and
add
pop
add
xchg
repz
nop
push
mov
leave
nop
jmp
ds
jne
clc
repnz
nop
nop
jae
cmp
adc
jp
xchg
mov
nop
push
mov
leave
nop
jmp
jno
add
adc
nop
push
mov
leave
nop
jmp
add
into
add
add
repnz
nop
nop
jae
lds
fs
push
mov
insb
or
loope
add
aas
add
add
clc
push
add
popl
icebp
clc
repnz
nop
nop
jae
add
add
add
push
stos
push
clc
repnz
nop
nop
jae
jno
add
fs
test
cld
nop
nop
jae
sub
sub
clc
repnz
nop
nop
jae
add
and
into
add
xchg
popf
popa
clc
repnz
nop
nop
jae
movsl
add
sarb
add
sbb
movsb
clc
repnz
nop
nop
jae
add
stos
mov
push
mov
xchg
ret
xchg
add
mov
add
nop
nop
jae
add
add
dec
and
pause
push
mov
leave
nop
jmp
mov
add
add
cmp
clc
repnz
nop
nop
jae
add
ret
add
mov
xchg
ret
add
test
add
repnz
nop
nop
jae
add
les
loop
push
mov
xchg
ret
pop
rolb
cltd
and
add
call
clc
repnz
nop
nop
jae
adc
test
add
les
das
add
clc
repnz
nop
nop
jae
add
or
push
jge
add
add
pop
or
rol
repnz
cld
nop
nop
jae
test
xchg
xor
jecxz
outsl
arpl
add
repnz
nop
nop
jae
push
inc
jno
pop
cmp
nop
push
mov
leave
nop
jmp
add
add
dec
cmp
repnz
nop
nop
jae
cltd
add
add
clc
repnz
nop
nop
jae
ret
cltd
in
int
or
add
clc
repnz
nop
nop
jae
add
and
add
scas
pop
clc
repnz
nop
nop
jae
mov
add
psubsb
xor
add
nop
jmp
mov
add
sbb
add
add
add
cld
nop
nop
jae
imul
add
dec
cmp
lods
inc
clc
repnz
nop
nop
jae
add
dec
inc
add
out
cwtl
adc
nop
nop
jae
add
add
add
pop
or
xchg
mov
mov
clc
repnz
nop
nop
jae
push
add
and
add
add
push
mov
xchg
ret
sbb
rcll
ret
add
push
mov
xchg
ret
adc
insb
sub
xchg
movl
roll
mov
xchg
ret
movsl
xlat
mov
cmp
nop
push
mov
leave
nop
jmp
rolb
add
lret
clc
repnz
nop
nop
jae
mov
add
add
cmp
jae
repnz
nop
nop
jae
dec
rolb
ret
inc
pop
clc
repnz
nop
nop
jae
add
add
dec
add
push
xchg
push
mov
xchg
ret
in
dec
out
add
sbb
inc
sub
test
adc
xor
outsb
add
lret
mov
leave
nop
jmp
mov
add
shlb
fistpl
push
mov
xchg
ret
into
add
sub
roll
repnz
nop
nop
jae
into
add
ret
add
adc
mov
xchg
ret
fs
add
mov
stos
mov
es
nop
push
mov
leave
nop
jmp
add
ret
push
cmc
add
nop
push
mov
leave
nop
jmp
add
rolb
push
mov
test
push
mov
leave
nop
jmp
add
xlat
inc
mov
push
mov
xchg
ret
add
imul
mov
add
mov
push
mov
xchg
ret
xchg
add
or
and
nop
push
mov
leave
nop
jmp
add
mov
or
repnz
nop
nop
jae
add
add
add
inc
push
cmpsl
cs
clc
repnz
nop
nop
jae
lds
pop
add
add
mov
imul
clc
repnz
nop
nop
jae
and
mov
jne
cltd
pop
clc
repnz
nop
nop
jae
add
add
mov
jne
clc
repnz
nop
nop
jae
insb
add
or
mov
xchg
ret
add
add
push
in
orl
nop
nop
jae
or
ret
pop
lea
in
leave
nop
jmp
ret
test
add
add
push
add
mov
adc
repnz
nop
nop
jae
add
sub
adc
xchg
repnz
nop
nop
jae
add
sub
ret
push
loopne
mov
xchg
ret
in
inc
add
add
pusha
nop
push
mov
leave
nop
jmp
in
add
mov
in
clc
repnz
nop
nop
jae
add
add
in
inc
imul
cld
nop
nop
jae
test
add
jns
clc
repnz
nop
nop
jae
and
add
xlat
lds
nop
push
add
clc
repnz
nop
nop
jae
add
add
add
outsl
mov
clc
repnz
nop
nop
jae
jno
add
mov
repnz
nop
nop
jae
ret
sub
add
mov
out
lcall
nop
jae
add
sub
push
add
sbb
andb
add
push
nop
push
mov
leave
nop
jmp
add
cmp
into
jno
mov
aas
cmpw
clc
repnz
nop
nop
jae
add
jne
imul
add
or
dec
add
add
mov
ret
add
repnz
nop
nop
jae
add
add
rcr
push
mov
xchg
ret
push
mov
push
add
fwait
clc
repnz
nop
nop
jae
mov
in
add
clc
repnz
nop
nop
jae
add
add
mov
cmp
nop
nop
jae
insb
add
add
das
push
mov
lock
add
inc
sub
adc
mov
push
mov
xchg
ret
add
insb
into
mov
add
pop
add
add
xbegin
jae
into
xchg
add
add
xchg
jne
clc
repnz
nop
nop
jae
rolb
add
add
clc
repnz
nop
nop
jae
lds
add
lret
adc
loopne
notl
repnz
nop
nop
jae
into
pop
sub
add
cltd
sti
mov
clc
repnz
nop
nop
jae
lds
add
add
loop
add
clc
repnz
nop
nop
jae
pop
out
push
add
dec
cmp
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
jle
sub
sub
dec
add
nop
nop
jae
and
ret
add
and
jl
test
repnz
nop
nop
jae
add
add
add
add
nop
push
mov
leave
nop
jmp
sbb
push
test
add
clc
repnz
nop
nop
jae
out
add
clc
repnz
nop
nop
jae
cmp
inc
mov
mov
clc
repnz
nop
nop
jae
add
pop
xchg
cltd
add
mov
leave
nop
jmp
add
into
mov
in
add
imul
push
imul
cmp
ret
add
xchg
add
call
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
into
ret
jle
add
loop
clc
repnz
nop
nop
jae
add
add
add
add
out
icebp
nop
push
mov
leave
nop
jmp
add
rcl
add
fld1
nop
push
mov
leave
nop
jmp
add
lds
add
in
pop
push
clc
repnz
nop
nop
jae
test
sbb
add
add
push
mov
clc
repnz
nop
nop
jae
aad
add
add
test
fld1
push
mov
xchg
ret
test
jno
add
lret
push
clc
repnz
nop
nop
jae
insb
mov
ret
into
add
rorl
mov
leave
nop
jmp
jne
insb
add
add
clc
repnz
nop
nop
jae
add
add
add
addl
add
add
add
aad
mov
enter
add
cmp
clc
repnz
nop
nop
jae
in
cltd
adc
leave
mov
clc
repnz
nop
nop
jae
into
add
add
cld
nop
nop
jae
add
add
cmp
shlb
je
sbb
popf
add
push
mov
xchg
ret
add
cmp
inc
mov
fld1
push
mov
xchg
ret
add
mov
sub
adc
call
clc
repnz
nop
nop
jae
adc
lds
repnz
nop
nop
jae
insb
add
add
in
call
push
mov
scas
sahf
out
mov
add
dec
add
clc
repnz
nop
nop
jae
and
add
xchg
clc
clc
repnz
nop
nop
jae
rolb
add
lds
mov
es
xchg
add
push
mov
xchg
ret
lds
dec
add
add
call
push
mov
xchg
ret
add
adc
add
mov
add
test
nop
push
mov
leave
nop
jmp
add
add
dec
add
jmp
add
jle
add
test
add
sbb
jmp
mov
xchg
ret
add
add
add
xchg
dec
clc
repnz
nop
nop
jae
dec
add
add
and
fld1
push
mov
xchg
ret
add
ret
push
mov
add
fldcw
inc
add
add
sub
fsubrl
orb
xor
outsl
push
clc
repnz
nop
nop
jae
pop
add
loopne
or
lret
add
push
mov
xchg
ret
cltd
xlat
sbb
mov
inc
pop
add
sub
mov
nop
jae
test
in
add
rcrb
repnz
nop
nop
jae
xchg
and
add
orl
jne
add
inc
add
sub
add
cmpsb
leave
push
push
mov
xchg
ret
out
add
add
inc
into
mov
mov
clc
repnz
nop
nop
jae
add
and
add
jmp
and
add
add
add
add
add
dec
shlb
cmp
mov
add
clc
repnz
nop
nop
jae
add
add
add
jmp
incl
ret
jne
add
add
ret
add
pop
clc
repnz
nop
nop
jae
add
jne
sbb
xchg
xchg
je
nop
push
mov
leave
nop
jmp
into
add
clc
repnz
nop
nop
jae
ret
add
inc
ret
add
cltd
push
add
sub
jecxz
fistl
inc
addl
cmp
ret
cmp
add
add
add
add
clc
repnz
nop
nop
jae
in
add
sub
add
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
adc
jno
jne
clc
repnz
nop
nop
jae
inc
cmp
dec
add
xor
xchg
mov
xchg
ret
cmp
add
or
add
jb
add
push
sub
ret
jnp
in
inc
add
add
fs
sbb
clc
repnz
nop
nop
jae
out
mov
add
xchg
add
pop
inc
add
add
add
mov
add
int
or
clc
repnz
nop
nop
jae
add
add
call
inc
add
cltd
sub
add
clc
repnz
nop
nop
jae
add
add
shrl
clc
jbe
lods
push
clc
repnz
nop
nop
jae
push
add
xchg
jno
lds
test
add
nop
push
mov
leave
nop
jmp
movl
add
test
repnz
nop
nop
jae
add
inc
in
add
add
mov
call
clc
repnz
nop
nop
jae
add
mov
mov
clc
repnz
nop
nop
jae
add
push
add
pop
push
mov
xchg
ret
imul
rolb
mov
cmpl
nop
push
mov
leave
nop
jmp
xlat
or
add
sub
call
inc
add
mov
add
xlat
add
clc
repnz
nop
nop
jae
cltd
dec
add
ret
jnp
clc
repnz
nop
nop
jae
inc
add
inc
dec
add
add
mov
push
mov
xchg
ret
add
adc
jne
add
add
add
clc
repnz
nop
nop
jae
xor
sub
lds
jmp
add
add
inc
jle
ret
add
or
xor
cld
nop
nop
jae
pop
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
cmp
mov
add
add
into
leave
rep
push
mov
xchg
ret
add
add
add
or
xchg
add
clc
repnz
nop
nop
jae
sub
add
out
add
clc
repnz
nop
nop
jae
add
or
outsl
loopne
mov
xchg
ret
insb
add
mov
cltd
add
push
mov
xchg
ret
add
add
cltd
add
pop
add
in
leave
nop
jmp
inc
insb
add
inc
rolb
mov
repnz
repnz
nop
nop
jae
jno
mov
and
add
xchg
jae
rclb
jne
inc
add
add
add
add
xchg
add
clc
repnz
nop
nop
jae
insb
mov
add
fistpl
clc
repnz
nop
nop
jae
and
add
add
mov
sbb
or
cmpsl
xchg
add
int3
pop
aaa
xchg
movsb
push
add
inc
add
add
clc
repnz
nop
nop
jae
add
add
mov
dec
xor
clc
repnz
nop
nop
jae
xor
add
lret
aas
pushl
push
mov
xchg
ret
mov
add
add
xlat
out
push
mov
xchg
ret
push
rolb
inc
sub
rclb
jno
add
add
inc
mov
add
add
nop
push
mov
leave
nop
jmp
or
push
cmp
fs
add
js
add
or
imul
mov
add
aam
and
clc
repnz
nop
nop
jae
insb
add
add
ror
push
mov
xchg
ret
push
add
jno
mov
push
mov
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
sbb
add
add
add
push
push
mov
xchg
ret
insb
into
movl
fs
je
clc
repnz
nop
nop
jae
xor
roll
mov
xchg
ret
add
insb
outsl
cmp
nop
push
mov
leave
nop
jmp
add
sub
add
nop
nop
jae
add
inc
add
mov
xchg
add
push
clc
repnz
nop
nop
jae
jle
xlat
add
insb
insb
pop
mov
clc
repnz
nop
nop
jae
add
pop
and
clc
repnz
nop
nop
jae
fs
cmp
repnz
dec
add
repnz
nop
nop
jae
test
push
or
scas
ds
clc
repnz
nop
nop
jae
mov
add
mov
leave
nop
jmp
or
insb
or
in
add
ret
loopne
fadds
nop
nop
jae
add
test
andl
nop
nop
jae
add
add
test
add
add
add
add
push
mov
xchg
ret
add
inc
add
add
add
add
repnz
nop
nop
jae
mov
adcb
add
nop
jmp
mov
add
push
nop
push
mov
leave
nop
jmp
into
xchg
xor
push
repz
clc
repnz
nop
nop
jae
test
mov
push
add
rclb
daa
nop
inc
add
mov
mov
adcb
nop
nop
jae
add
add
push
add
in
dec
nop
push
mov
leave
nop
jmp
mov
add
push
clc
repnz
nop
nop
jae
add
and
add
add
in
xor
clc
repnz
nop
nop
jae
rolb
movl
mov
clc
repnz
nop
nop
jae
and
add
add
movsl
push
clc
repnz
nop
nop
jae
add
add
into
inc
inc
add
add
clc
repnz
nop
nop
jae
add
push
push
out
jno
clc
repnz
nop
nop
jae
add
pop
mov
add
jne
call
nop
jae
mov
add
add
add
cmp
clc
repnz
nop
nop
jae
add
rolb
pop
ret
mov
stos
push
add
push
push
mov
xchg
ret
mov
add
movsl
mov
ds
add
daa
fistpl
nop
push
mov
leave
nop
jmp
or
mov
push
push
mov
xchg
ret
add
xchg
mov
mov
arpl
mov
leave
nop
jmp
dec
add
xlat
add
and
jne
nop
push
mov
leave
nop
jmp
inc
into
adc
add
into
arpl
out
clc
repnz
nop
nop
jae
into
add
aad
push
add
add
adc
ret
push
adc
add
lds
add
pushl
clc
repnz
nop
nop
jae
inc
into
insb
add
insb
xor
clc
repnz
nop
nop
jae
lds
add
fisttps
test
or
add
repnz
nop
nop
jae
add
shl
pop
xor
clc
repnz
nop
nop
jae
mov
mov
mov
leave
nop
jmp
xor
aad
clc
repnz
nop
nop
jae
add
add
inc
and
call
nop
push
mov
leave
nop
jmp
add
movsl
sbb
xchg
push
nop
push
mov
leave
nop
jmp
ds
lds
push
add
fistpl
push
mov
xchg
ret
add
inc
or
clc
add
mov
inc
add
mov
add
les
stos
ja
add
ret
add
add
jne
add
pop
nop
push
mov
leave
nop
jmp
cmp
add
add
add
pop
jne
clc
repnz
nop
nop
jae
add
add
mov
add
loope
inc
push
adc
nop
push
mov
leave
nop
jmp
cmp
imul
rclb
jmp
add
out
into
aad
xchg
call
clc
repnz
nop
nop
jae
cmp
add
jne
clc
repnz
nop
nop
jae
jle
sub
repnz
nop
nop
jae
add
add
out
cmp
into
xlat
xor
push
mov
xchg
ret
fs
mov
addb
add
repnz
nop
nop
jae
add
inc
add
cld
nop
nop
jae
ret
add
or
xor
nop
push
mov
leave
nop
jmp
add
add
sub
xchg
les
add
add
dec
push
clc
repnz
nop
nop
jae
add
lds
cltd
add
add
mov
leave
nop
jmp
mov
mov
adc
cwtl
ret
add
clc
repnz
nop
nop
jae
add
add
inc
add
mov
lods
jo
add
xchg
inc
mov
add
sub
push
mov
xchg
ret
sub
in
add
push
dec
mov
clc
repnz
nop
nop
jae
add
inc
ret
jle
loopne
pop
clc
repnz
nop
nop
jae
lds
rolb
insb
cltd
add
mov
inc
add
add
add
adc
test
add
stos
push
add
nop
push
mov
leave
nop
jmp
cmp
insb
add
add
add
add
clc
repnz
nop
nop
jae
out
add
mov
mov
leave
nop
jmp
add
into
into
mov
inc
push
mov
xchg
ret
sub
cmp
add
mov
xchg
ret
add
insb
jge
xor
nop
push
mov
leave
nop
jmp
add
add
ret
inc
les
in
push
push
mov
xchg
ret
add
add
test
test
nop
push
mov
leave
nop
jmp
push
sub
add
add
sbb
test
cld
nop
nop
jae
add
out
lds
xchg
sub
mov
xchg
ret
lds
add
aad
inc
lcall
nop
push
mov
leave
nop
jmp
add
test
in
add
mov
nop
push
mov
leave
nop
jmp
mov
les
ss
repnz
nop
nop
jae
sub
add
out
rolb
sbb
repnz
nop
nop
jae
out
rolb
pusha
add
mov
xchg
ret
add
add
add
test
lahf
lea
clc
repnz
nop
nop
jae
jle
lds
pop
add
mov
nop
push
mov
leave
nop
jmp
push
add
cmp
movsl
es
mov
nop
push
mov
leave
nop
jmp
add
and
add
mov
add
push
push
clc
repnz
nop
nop
jae
sub
add
cmp
add
xor
push
nop
push
mov
leave
nop
jmp
add
add
mov
leave
nop
jmp
add
add
jle
add
out
inc
sub
repnz
nop
nop
jae
jne
imul
insb
arpl
clc
nop
push
mov
leave
nop
jmp
sub
add
add
cld
nop
nop
jae
les
add
in
push
push
nop
push
mov
leave
nop
jmp
add
add
mov
xchg
ret
adc
roll
out
scas
lea
push
mov
xchg
ret
mov
mov
push
add
std
fwait
clc
repnz
nop
nop
jae
cltd
add
add
add
add
xchg
pop
je
clc
repnz
nop
nop
jae
imul
fidivrl
add
push
and
sub
mov
push
dec
mov
add
cmpsb
loopne
add
mov
clc
repnz
nop
nop
jae
sbb
add
push
ds
repnz
nop
nop
jae
sub
cmp
or
adc
pushf
popf
pop
push
mov
xchg
ret
add
or
rolb
add
add
add
nop
nop
jae
inc
jle
add
movl
leave
outsl
inc
add
add
or
add
add
add
clc
repnz
nop
nop
jae
or
les
add
add
push
dec
add
nop
push
mov
leave
nop
jmp
push
insb
add
add
mov
clc
repnz
nop
nop
jae
add
push
add
jne
mov
clc
repnz
nop
nop
jae
into
imul
into
loop
pop
clc
repnz
nop
nop
jae
mov
imul
in
leave
nop
jmp
in
add
and
push
mov
pop
jmp
mov
xchg
ret
add
add
add
xor
mov
xchg
ret
jle
add
add
add
jne
clc
repnz
nop
nop
jae
vpcmpeqw
call
clc
repnz
nop
nop
jae
lds
mov
cld
nop
nop
jae
cltd
add
test
leave
clc
repnz
nop
nop
jae
add
add
mov
add
cmpl
nop
push
mov
leave
nop
jmp
insb
push
mov
add
fisttps
repnz
nop
nop
jae
xlat
add
in
push
add
add
add
push
add
mov
xchg
ret
imul
imul
les
dec
imul
nop
jae
xchg
rolb
inc
lret
fwait
push
mov
xchg
ret
or
add
add
aad
sub
repnz
nop
nop
jae
insb
test
mov
sbb
mov
jne
clc
repnz
nop
nop
jae
jno
cltd
and
repnz
nop
nop
jae
rolb
add
xchg
dec
add
clc
repnz
nop
nop
jae
add
add
decl
clc
repnz
nop
nop
jae
add
and
mov
add
inc
add
push
add
sbb
cld
nop
nop
jae
add
add
lds
add
pop
clc
repnz
nop
nop
jae
add
add
add
add
sti
movzwl
nop
push
mov
leave
nop
jmp
push
ret
add
add
es
push
mov
xchg
ret
adc
hlt
cmp
push
mov
leave
nop
jmp
or
add
out
add
fcmovb
jns
push
mov
xchg
ret
sub
sub
inc
test
jle
mov
jg
nop
push
mov
leave
nop
jmp
add
jno
imul
pop
add
clc
repnz
nop
nop
jae
test
jle
adc
in
add
mov
in
leave
nop
jmp
or
add
sub
pop
mov
mov
clc
repnz
nop
nop
jae
xchg
add
jno
push
mov
xchg
ret
mov
sbb
add
movb
mov
xchg
ret
insb
add
push
add
lds
add
repnz
nop
nop
jae
inc
ret
add
push
mov
xchg
ret
add
and
add
and
in
add
clc
repnz
nop
nop
jae
add
jns
cmp
iret
jae
repnz
nop
nop
jae
xchg
add
add
cld
nop
nop
jae
add
or
inc
fildl
ja
clc
repnz
nop
nop
jae
insb
add
clc
repnz
nop
nop
jae
add
sti
pop
clc
repnz
nop
nop
jae
add
add
cmp
add
les
cld
nop
nop
jae
push
shrb
and
add
mov
clc
repnz
nop
nop
jae
add
cmpsl
fwait
push
mov
xchg
ret
in
add
push
add
push
mov
push
mov
xchg
ret
add
dec
add
lret
adc
add
repnz
nop
nop
jae
add
fistpl
nop
push
mov
leave
nop
jmp
mov
add
cmp
nop
push
mov
leave
nop
jmp
add
or
sub
std
xor
push
mov
xchg
ret
xor
add
out
push
clc
repnz
nop
nop
jae
into
lds
add
or
xchg
push
clc
repnz
nop
nop
jae
xchg
mov
rorl
nop
nop
jae
sbb
loope
push
mov
xchg
ret
add
or
add
clc
repnz
nop
nop
jae
push
inc
lds
jns
adc
repnz
nop
nop
jae
ret
mov
mov
jmp
and
insb
add
and
add
add
nop
sbb
add
nop
jmp
add
add
pop
add
fld1
clc
repnz
nop
nop
jae
add
mov
cmp
repnz
nop
nop
jae
mov
add
add
mov
js
add
add
add
add
cmp
je
clc
repnz
nop
nop
jae
add
add
inc
clc
repnz
nop
nop
jae
test
into
movsl
add
cmp
mov
add
repnz
nop
nop
jae
add
sbb
jo
nop
push
mov
leave
nop
jmp
add
in
sarl
mov
leave
nop
jmp
jle
rolb
add
aaa
mov
clc
repnz
nop
nop
jae
add
xchg
rolb
add
call
nop
jmp
add
sbb
xor
jno
sbb
cmp
repnz
nop
nop
jae
push
sbb
add
mov
clc
repnz
nop
nop
jae
add
and
in
scas
in
pop
push
clc
repnz
nop
nop
jae
add
or
mov
clc
repnz
nop
nop
jae
add
or
add
clc
repnz
nop
nop
jae
jno
movl
je
clc
repnz
nop
nop
jae
mov
add
fstp
sbb
clc
repnz
nop
nop
jae
jle
add
add
imul
clc
repnz
nop
nop
jae
and
lds
rep
clc
repnz
nop
nop
jae
add
mov
add
push
add
clc
repnz
nop
nop
jae
test
mov
cmp
pop
add
pop
clc
repnz
nop
nop
jae
add
sub
test
add
sub
add
scas
xchg
xchg
ret
jle
sub
add
pop
add
jmp
push
or
push
mov
leave
nop
jmp
add
add
add
mov
clc
repnz
nop
nop
jae
jne
out
add
add
nop
push
mov
leave
nop
jmp
add
add
add
or
jp
shl
jmp
pop
adc
repnz
nop
nop
jae
add
add
jnp
mov
add
add
add
add
int
add
pop
ret
ret
pop
push
mov
xchg
ret
add
add
sub
xorl
clc
repnz
nop
nop
jae
or
cmpsb
pop
fwait
clc
repnz
nop
nop
jae
add
add
mov
lds
sub
addl
mov
inc
add
lds
ret
and
push
mov
xchg
ret
push
add
add
mov
inc
xor
nop
push
mov
leave
nop
jmp
add
add
push
clc
repnz
nop
nop
jae
add
insb
inc
mov
add
mov
clc
repnz
nop
nop
jae
sub
add
rolb
add
add
aas
clc
repnz
nop
nop
jae
movsl
mov
xchg
xlat
adc
idiv
repnz
nop
nop
jae
add
mov
add
add
in
leave
nop
jmp
add
xchg
add
repz
clc
repnz
nop
nop
jae
ret
scas
pop
mov
clc
repnz
nop
nop
jae
add
xchg
mov
or
add
and
xchg
fldl
jge
inc
add
add
ret
add
out
pop
pop
clc
repnz
nop
nop
jae
add
aad
into
shl
xor
xchg
dec
pop
clc
repnz
nop
nop
jae
inc
and
add
popa
call
clc
repnz
nop
nop
jae
mov
add
xlat
cmpw
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
nop
jae
and
inc
in
insb
test
mov
leave
nop
jmp
cmp
jle
into
add
add
clc
repnz
nop
nop
jae
out
insb
add
fs
and
cld
nop
nop
jae
add
add
sbb
pop
add
add
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
nop
jae
inc
add
insb
fs
push
mov
dec
add
add
jge
add
and
and
nop
push
mov
leave
nop
jmp
ds
or
lds
add
clc
repnz
nop
nop
jae
or
mov
cld
nop
nop
jae
mov
ret
rcl
insb
push
add
mov
xchg
ret
ret
xor
pop
fs
cld
nop
nop
jae
add
add
inc
insb
loope
clc
repnz
nop
nop
jae
adc
cmp
jge
leave
sub
repnz
nop
nop
jae
add
xchg
mov
push
push
mov
xchg
ret
or
add
jno
sub
inc
add
push
add
testb
repz
mov
xchg
ret
add
add
jno
push
or
dec
or
cld
nop
nop
jae
sbb
cltd
cltd
pop
mov
clc
repnz
nop
nop
jae
add
add
rclb
rcll
repnz
nop
nop
jae
adc
sub
add
popa
clc
repnz
nop
nop
jae
ret
mov
into
add
add
dec
add
clc
repnz
nop
nop
jae
xchg
sub
add
add
repnz
nop
nop
jae
add
rcr
sbb
push
mov
xchg
ret
add
add
test
mov
cmp
cld
nop
nop
jae
add
out
pop
add
clc
repnz
nop
nop
jae
rolb
ds
xlat
mov
push
mov
leave
nop
jmp
add
inc
add
add
add
clc
repnz
nop
nop
jae
add
inc
add
add
push
add
nop
nop
jae
push
sbb
mov
sub
add
repnz
nop
nop
jae
dec
push
sub
fisttpll
cld
nop
nop
jae
out
add
add
mov
repnz
nop
nop
jae
in
add
imul
into
and
push
add
add
clc
repnz
nop
nop
jae
add
sbb
adc
mov
clc
repnz
nop
nop
jae
or
add
std
push
clc
repnz
nop
nop
jae
movl
add
jle
test
push
clc
repnz
nop
nop
jae
add
pop
push
add
add
jp
jbe
nop
push
mov
leave
nop
jmp
add
xor
add
nop
push
mov
leave
nop
jmp
add
jle
inc
sub
push
mov
xchg
ret
lds
add
add
xchg
sar
add
clc
repnz
nop
nop
jae
inc
insb
insb
mov
pop
pushl
push
mov
xchg
ret
imul
push
xchg
add
adc
call
rep
clc
repnz
nop
nop
jae
imul
out
shll
add
lea
push
mov
xchg
ret
adc
shl
dec
add
repnz
nop
nop
jae
add
add
add
nop
nop
jae
add
mov
add
inc
rep
clc
repnz
nop
nop
jae
test
add
xchg
test
nop
push
mov
leave
nop
jmp
rolb
cmp
add
add
ret
sbb
nop
jae
add
or
repnz
nop
nop
jae
add
add
scas
push
push
mov
xchg
ret
adc
pop
add
xchg
dec
add
mov
nop
push
mov
leave
nop
jmp
cmp
add
add
pop
mov
nop
push
mov
leave
nop
jmp
add
add
add
mov
je
nop
push
mov
leave
nop
jmp
insb
and
or
mov
xchg
ret
mov
add
sub
test
push
mov
leave
nop
jmp
ret
ret
add
push
add
jne
clc
repnz
nop
nop
jae
add
add
nop
push
mov
leave
nop
jmp
add
push
int
inc
clc
repnz
nop
nop
jae
add
mov
adc
daa
push
push
mov
xchg
ret
mov
cmp
add
add
add
add
fistpl
push
mov
xchg
ret
mov
add
xlat
inc
add
push
nop
push
mov
leave
nop
jmp
add
add
add
adc
call
mov
cmp
repnz
nop
nop
jae
add
mov
cmp
add
data16
add
add
push
clc
repnz
nop
nop
jae
inc
add
add
nop
nop
jae
and
dec
add
add
cld
test
cld
nop
nop
jae
add
rorb
add
popa
clc
repnz
nop
nop
jae
cmp
jle
mov
add
popf
call
clc
repnz
nop
nop
jae
add
push
add
rclb
int
inc
add
sub
and
rolb
outsl
mov
clc
repnz
nop
nop
jae
add
inc
mov
jno
gs
clc
repnz
nop
nop
jae
add
mov
push
add
repnz
nop
nop
jae
sub
push
add
dec
roll
mov
clc
repnz
nop
nop
jae
insb
add
ror
fldl
or
add
add
inc
pop
sub
inc
jne
clc
repnz
nop
nop
jae
cmp
add
sbb
clc
repnz
nop
nop
jae
and
ret
and
or
mov
add
popf
jmp
inc
ret
out
test
add
cmp
add
add
push
mov
xchg
ret
mov
mov
add
add
repz
repnz
nop
nop
jae
add
add
add
add
div
clc
repnz
nop
nop
jae
cltd
or
pop
or
add
imul
nop
jmp
rorb
inc
inc
aad
roll
mov
add
insb
add
add
inc
push
add
nop
nop
jae
dec
push
add
aad
add
add
clc
repnz
nop
nop
jae
cltd
test
je
clc
repnz
nop
nop
jae
or
add
mov
push
mov
xchg
ret
add
add
mov
mov
nop
nop
jae
insb
les
add
add
add
jmp
add
add
cmp
add
or
fisttps
mov
test
clc
repnz
nop
nop
jae
dec
and
stos
mov
sub
nop
nop
jae
add
add
add
test
rcrl
push
mov
leave
nop
jmp
add
add
inc
add
cmp
pop
fistpl
clc
repnz
nop
nop
jae
add
jg
sbb
clc
repnz
nop
nop
jae
add
add
in
push
mov
xchg
ret
add
lds
mov
jbe
movsb
cmp
lea
mov
add
repnz
nop
nop
jae
add
dec
mov
push
mov
xchg
ret
insb
les
jno
mov
mov
clc
repnz
nop
nop
jae
cmp
ret
add
or
add
jne
clc
repnz
nop
nop
jae
add
add
or
jnp
clc
repnz
nop
nop
jae
movsl
add
add
movsl
add
sbb
cld
nop
nop
jae
cmp
inc
mov
push
inc
pusha
add
add
clc
repnz
nop
nop
jae
or
or
subl
ret
into
add
add
and
add
push
clc
repnz
nop
nop
jae
add
inc
inc
add
movsb
mov
push
clc
repnz
nop
nop
jae
inc
sbb
mov
jnp
test
clc
repnz
nop
nop
jae
dec
test
std
shr
nop
push
mov
leave
nop
jmp
add
add
add
add
insb
inc
jb
clc
repnz
nop
nop
jae
add
add
rolb
sar
cld
nop
nop
jae
inc
add
and
add
xchg
pop
push
clc
repnz
nop
nop
jae
inc
add
add
fld1
push
mov
xchg
ret
xor
in
add
add
add
nop
push
mov
leave
nop
jmp
insb
add
mov
movsl
movsl
stc
jne
nop
push
mov
leave
nop
jmp
insb
rolb
mov
clc
repnz
nop
nop
jae
movsl
add
add
nop
nop
jae
add
sub
add
into
cmp
add
add
cmp
add
push
add
add
fwait
pop
nop
push
mov
leave
nop
jmp
add
push
add
sub
add
adc
jne
clc
repnz
nop
nop
jae
cmp
add
add
call
nop
jae
sarb
add
add
mov
add
add
cld
nop
nop
jae
add
add
cmp
add
not
push
mov
xchg
ret
add
add
add
adc
pusha
add
fld1
nop
push
mov
leave
nop
jmp
jno
and
add
add
xchg
movzwl
clc
repnz
nop
nop
jae
add
sub
ret
repz
clc
repnz
nop
nop
jae
in
add
mov
mov
xchg
ret
add
add
and
mov
xlat
call
call
or
add
add
push
ret
add
pop
pushl
push
mov
xchg
ret
push
add
add
cmp
clc
clc
repnz
nop
nop
jae
cltd
add
out
add
add
mov
jmp
incl
add
add
mov
rolb
add
inc
mov
idivb
xor
nop
nop
jae
add
add
adc
add
jb
add
clc
repnz
nop
nop
jae
add
xchg
insb
loopne
pusha
clc
repnz
nop
nop
jae
xor
sbb
and
repnz
nop
nop
jae
add
rolb
fcoms
lahf
mov
clc
repnz
nop
nop
jae
sub
push
push
movsb
sub
mov
add
shlb
add
cmp
inc
add
xchg
nop
push
mov
leave
nop
jmp
imul
mov
sub
add
add
add
push
add
stc
ret
clc
repnz
nop
nop
jae
add
push
push
add
add
push
push
mov
xchg
ret
insb
sub
xchg
add
or
dec
lods
clc
repnz
nop
nop
jae
add
add
mov
insb
add
repnz
nop
nop
jae
add
push
add
inc
dec
es
repnz
nop
nop
jae
add
jno
add
pop
nop
push
mov
leave
nop
jmp
add
mov
add
xchg
jle
add
shl
push
mov
xchg
ret
ret
inc
mov
add
push
push
mov
xchg
ret
add
movl
pop
add
clc
repnz
nop
nop
jae
add
xchg
adc
movsb
jne
sti
push
mov
xchg
ret
add
add
add
nop
push
mov
leave
nop
jmp
add
in
push
push
sub
xor
repnz
nop
nop
jae
add
push
push
add
arpl
clc
repnz
nop
nop
jae
inc
add
aaa
mov
clc
repnz
nop
nop
jae
mov
shl
clc
repnz
nop
nop
jae
or
add
add
add
cmp
nop
push
mov
leave
nop
jmp
add
push
and
jmp
add
add
add
add
mov
xchg
ret
add
add
mov
out
mov
add
dec
not
push
mov
xchg
ret
push
add
cmp
or
orl
repnz
nop
nop
jae
or
cltd
mov
mov
inc
fwait
nop
push
mov
leave
nop
jmp
push
movsl
out
add
mov
int
jl
sbb
repnz
nop
nop
jae
add
add
mov
dec
cmp
repnz
nop
nop
jae
xchg
add
push
clc
repnz
nop
nop
jae
mov
add
aad
movsl
cmp
push
mov
xchg
ret
xchg
add
add
movsl
sbb
sbb
repnz
nop
nop
jae
add
or
add
clc
repnz
nop
nop
jae
insb
adc
mov
mov
inc
add
lds
add
test
fisubrs
add
pop
xchg
clc
repnz
nop
nop
jae
add
lds
jb
add
in
add
into
lds
in
mov
cld
nop
nop
jae
xchg
add
sbb
xlat
into
cmc
mov
push
mov
xchg
ret
and
inc
insb
add
insb
fcmovnu
sbb
clc
repnz
nop
nop
jae
jle
add
push
or
cmp
and
clc
repnz
nop
nop
jae
xlat
and
and
add
mov
push
mov
xchg
ret
into
add
push
add
add
repnz
nop
nop
jae
xor
add
push
mov
xchg
ret
add
or
add
test
add
movb
cld
nop
nop
jae
inc
add
add
and
push
cmp
push
mov
xchg
ret
dec
or
add
xchg
add
pusha
add
add
jmp
jle
add
sub
lds
xor
movsl
mov
add
mov
and
push
mov
leave
nop
jmp
out
add
add
add
add
add
nop
push
mov
leave
nop
jmp
sub
xchg
push
mov
xchg
ret
cmp
xor
addr16
push
mov
xchg
ret
into
ret
mov
or
push
clc
repnz
nop
nop
jae
add
add
into
and
add
clc
repnz
nop
nop
jae
mov
into
test
rcll
stc
mov
clc
repnz
nop
nop
jae
add
sbbl
xor
add
mov
les
js
add
repnz
nop
nop
jae
add
rol
add
add
clc
repnz
nop
nop
jae
add
rclb
pop
call
clc
repnz
nop
nop
jae
xlat
cltd
sub
cmpl
nop
push
mov
leave
nop
jmp
and
out
out
lea
clc
repnz
nop
nop
jae
add
movsl
xchg
add
imul
jns
add
add
sub
add
hlt
loope
lock
mov
xchg
ret
cmp
movsl
jle
add
and
add
add
xorb
xchg
ret
add
out
add
add
inc
jecxz
repnz
nop
nop
jae
add
add
inc
pop
clc
repnz
nop
nop
jae
add
and
add
mov
nop
push
mov
leave
nop
jmp
rolb
add
outsb
add
popa
clc
repnz
nop
nop
jae
jno
les
inc
add
add
lods
add
clc
repnz
nop
nop
jae
into
add
cltd
rolb
add
sub
nop
push
mov
leave
nop
jmp
add
movsl
rolb
and
pop
add
mov
leave
nop
jmp
out
insb
xchg
or
add
sbb
repnz
nop
nop
jae
add
movsl
add
push
dec
add
push
mov
xchg
ret
add
mov
push
adc
or
mov
ljmp
lods
add
add
repnz
nop
nop
jae
push
adc
cld
nop
nop
jae
add
ret
cltd
roll
xchg
or
mov
xchg
ret
mov
inc
into
add
add
inc
ljmp
inc
and
repnz
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
add
add
lock
sti
pop
nop
push
mov
leave
nop
jmp
test
mov
out
jle
pusha
add
add
jle
xchg
jmp
and
fs
out
xchg
add
sti
nop
push
mov
leave
nop
jmp
ret
into
sub
xchg
mov
call
clc
repnz
nop
nop
jae
add
xchg
ror
rep
nop
push
mov
leave
nop
jmp
jne
aad
mov
add
add
clc
repnz
nop
nop
jae
sbb
add
scas
js
and
mov
xchg
ret
add
push
add
in
add
push
imul
cld
nop
nop
jae
add
into
mov
mov
clc
repnz
nop
nop
jae
add
add
add
sub
cmp
ret
add
mov
add
and
add
pop
add
clc
repnz
nop
nop
jae
add
shl
nop
push
mov
leave
nop
jmp
inc
add
add
add
adc
daa
push
clc
repnz
nop
nop
jae
ret
add
add
mov
test
xchg
ret
and
add
cmp
add
out
add
ret
rol
push
mov
xchg
ret
aad
add
xchg
add
xor
nop
nop
jae
aad
add
sub
add
sti
call
nop
jmp
out
push
in
pop
mov
clc
repnz
nop
nop
jae
add
cmp
xchg
xor
push
mov
xchg
ret
shrb
push
add
add
clc
repnz
nop
nop
jae
les
or
and
cld
nop
nop
jae
add
add
push
and
or
push
mov
xchg
ret
xor
add
add
add
add
clc
repnz
nop
nop
jae
ror
add
or
test
add
mov
xchg
ret
or
inc
dec
mov
clc
repnz
nop
nop
jae
xlat
add
ljmp
nop
nop
jae
inc
mov
rclb
push
mov
xchg
ret
add
mov
add
movsb
aas
lods
clc
repnz
nop
nop
jae
insb
or
add
add
mov
in
movsb
mov
add
mov
push
fcmovu
stc
cwtl
mov
je
mov
mov
add
mov
add
add
xchg
push
sub
repnz
test
fnstcw
movsl
stc
out
xchg
add
pop
add
fwait
mov
leave
adc
dec
add
add
add
mov
imul
xchg
and
js
cs
jmp
cmp
subl
add
aad
ljmp
scas
enter
pop
add
push
mov
add
in
ja
fs
cmpb
push
add
add
add
repnz
rorl
add
mov
imul
adc
cltd
pop
jp
cmc
pop
add
add
outsb
add
sahf
enter
iret
push
add
test
inc
add
add
paddsw
jnp
pushf
inc
add
xor
das
dec
add
insl
or
jg
add
mov
xchg
mov
mov
xchg
xor
mov
sbb
movsb
enter
out
adcb
push
add
ret
add
mov
push
repnz
add
ja
add
cltd
sub
sahf
xchg
sbb
adc
dec
sub
repnz
add
mov
imul
or
dec
xor
mov
add
add
iret
or
pop
in
out
lea
add
add
jne
add
add
pop
add
cmp
jbe
cmpsb
xchg
inc
dec
add
add
adc
push
add
out
out
mov
xor
cmp
sbb
pop
add
inc
add
xchg
fstpl
aad
fpatan
in
out
and
cmp
add
add
xor
sbb
cmp
shrl
add
and
jle
sub
mov
push
add
add
pop
cmp
pop
add
add
pop
into
sbb
popf
mov
testb
lcall
add
jmp
inc
add
pop
jl
inc
add
dec
sbb
movsb
and
add
testb
mov
add
cltd
loopne
inc
add
stc
test
lods
xor
pop
iret
jge
add
add
add
inc
fsub
mov
mov
and
or
lret
xor
dec
add
xor
add
add
dec
movsl
out
addl
in
movups
jecxz
add
and
add
jecxz
test
mov
mov
add
inc
add
dec
sub
mov
add
mov
jne
add
add
add
loop
cmpsl
xchg
pop
add
pop
and
jg
add
pushf
mov
cwtl
lock
cld
mov
xor
ror
add
add
add
add
dec
add
mov
add
add
mov
les
pushf
js
dec
add
rorl
dec
add
pushf
push
adc
cmpsb
add
shll
mov
loope
clc
movsl
addr16
in
add
xchg
aad
jg
out
add
dec
cmp
clc
pusha
add
sub
adc
mov
sub
jle
inc
rcll
in
jbe
das
push
add
pop
pop
add
mov
add
test
sbb
push
ljmp
add
add
jecxz
adc
cwtl
add
add
xchg
loop
cmp
cmp
pop
mov
shlb
popf
mov
dec
xor
shrb
add
xor
mov
popf
push
add
add
add
out
add
add
leave
xor
jp
insb
add
call
out
pushf
jnp
mov
sbb
sbb
sarl
dec
daa
xchg
rcr
fimuls
les
ret
inc
stos
mov
test
sub
pop
jp
add
inc
add
lods
mov
xor
mov
and
sbb
mov
scas
das
rol
pop
add
add
lock
cmpsb
and
mov
fwait
dec
add
add
leave
push
mov
dec
lret
push
add
repz
lret
gs
int
and
add
aas
pop
popa
fcmovnb
fdivrs
fistpll
cmp
lds
jb
cmpb
pop
sub
sbb
sbb
inc
popa
jns
mov
add
cmp
pop
adc
add
arpl
or
mov
aas
lock
dec
test
in
mov
jno
in
fnstsw
rorb
stos
jecxz
add
dec
andl
add
mov
jno
add
and
out
add
jecxz
repz
add
add
xchg
and
pop
add
loope
pop
cmc
pusha
add
jmp
outsb
add
subl
mov
pop
jle
lods
out
addl
sbb
rorb
sbb
lock
add
cmp
cltd
std
enter
add
add
mov
mov
add
call
push
xor
lock
mov
pop
add
add
add
sub
jne
push
add
bound
mov
popa
mov
and
movsl
jmp
or
popa
fsubs
enter
inc
cmp
jne
add
movsb
jge
add
add
pop
loope
pop
mov
mov
inc
mov
std
or
add
add
add
add
ljmp
rcrl
push
data16
or
push
add
mov
jne
add
add
adc
popf
pop
out
add
adc
add
out
add
out
xchg
pop
ret
inc
repnz
sbb
jp
mov
add
xor
lcall
pinsrw
bound
orl
and
int
add
adc
lods
xor
addb
inc
add
add
lcall
add
mov
add
push
dec
add
cmp
inc
mov
push
add
pop
inc
add
add
add
jo
addb
jnp
out
jmp
add
jns
add
mov
rol
add
cmpps
or
pop
fldl
xor
lret
divl
add
push
add
xchg
push
add
add
int3
out
mov
xor
cmp
add
xchg
pop
lcall
push
inc
add
add
add
hlt
insb
add
add
mov
inc
fisubrs
call
add
inc
add
mov
inc
add
inc
add
add
lret
in
add
aam
xor
sub
shr
jmp
add
inc
das
aas
push
add
mov
adc
add
inc
dec
add
add
pop
add
jns
out
push
psubd
add
add
add
mov
push
add
add
xchg
cmpsb
sub
mov
xchg
mov
repnz
stos
cmp
call
add
jb
vmulpd
add
iret
test
mov
sub
xchg
xor
into
cltd
aam
add
dec
add
add
popf
out
dec
fsubp
sti
je
pop
enter
add
add
jecxz
add
push
jge
mov
cli
out
aad
add
add
or
ficompl
add
lea
xchg
cmp
dec
add
add
data16
fmuls
add
scas
ja
add
add
pop
mov
aad
sub
repnz
mov
push
add
jp
call
stc
loope
add
cmpsb
movsl
mov
add
jns
and
aam
sub
loope
pop
add
pcmpeqb
repnz
iret
dec
imulb
adc
mov
mov
push
mov
add
out
push
add
cmp
cmpsl
sub
mov
add
add
cmp
jb
int
sbb
jae
test
push
add
add
aaa
sub
icebp
mov
jecxz
ret
mov
incl
sbb
xor
inc
add
inc
add
test
das
add
push
add
sahf
jmp
add
arpl
cli
xchg
data16
aad
add
popa
xor
add
add
cmc
dec
or
add
add
add
in
add
add
sub
test
fisubrl
xchg
xor
mulb
add
in
sub
xor
add
push
gs
cmpsl
mov
add
subb
fs
imul
add
cmp
lock
cmpsb
arpl
jl
int3
aas
cmp
stc
decb
sbb
call
jo
filds
add
inc
add
xor
pop
adc
cld
and
mov
lods
xchg
arpl
add
fnsave
add
icebp
inc
add
add
sbb
add
jle
ja
add
sub
xor
add
add
mov
add
add
mov
push
add
ret
leave
jge
or
aad
sbb
dec
jns
cld
dec
add
add
inc
add
mov
adc
enter
adc
or
fwait
pop
add
sahf
or
insl
mov
push
add
call
int
pop
add
inc
int3
loop
add
hlt
shll
rol
add
jbe
mov
pop
das
movsb
jb
add
testb
sbb
sub
inc
lock
add
pusha
add
mov
call
or
jbe
sbb
add
push
add
cli
mov
call
xchg
mov
loopne
add
test
and
popa
aaa
add
repz
or
add
subl
prefetchnta
popa
dec
add
ljmp
add
ret
cld
pop
add
xchg
test
js
fdivr
aaa
jecxz
adc
and
mov
add
add
lea
pop
mov
mov
outsl
call
xchg
add
rcrl
add
test
sbb
inc
add
add
loope
push
add
sbb
add
loop
sbb
push
add
mov
adc
mov
mov
sub
adc
add
rcrl
add
movsl
rorb
mov
inc
add
add
add
outsb
add
and
mul
daa
aaa
lods
jno
add
clc
push
cli
or
pop
add
into
icebp
and
add
push
lock
add
pop
add
sub
cwtl
ja
add
sub
xchg
xchg
cltd
jnp
movsb
jge
mov
fiaddl
sbb
push
add
inc
add
fmul
dec
add
test
add
cmp
lods
nop
push
add
out
addb
inc
add
inc
add
imul
fcoms
add
and
jecxz
or
mov
jns
mov
rcll
add
lods
jbe
and
add
icebp
into
cmp
rcrb
add
add
pop
dec
cmpsl
xchg
mov
das
xchg
jge
bound
cmpsl
add
push
add
and
popa
inc
cmp
leave
data16
inc
xor
pop
add
iret
mov
cwtl
pop
lfs
add
add
add
rcl
pusha
add
mov
pusha
add
ret
pop
cmp
and
sahf
jle
div
jle
les
jp
adc
mov
js
or
dec
add
aam
xorb
inc
add
mov
dec
gs
pushf
cmpb
add
call
test
mov
test
call
and
push
push
add
loope
add
jmp
add
sbb
add
ljmp
add
cli
push
add
add
push
add
mov
mov
sbb
and
aaa
xor
xlat
enter
add
addr16
mov
scas
pop
hlt
sbb
add
rcrb
add
add
add
iret
add
data16
add
add
inc
add
add
dec
add
movsl
jae
adc
xlat
mov
pop
std
push
ja
out
mov
add
enter
loopne
add
mov
pop
gs
insb
add
lret
sti
push
add
pushf
mov
int
lret
insb
add
ss
add
jmp
inc
dec
arpl
outsb
add
cwtl
jmp
add
jbe
nop
dec
add
pop
add
jmp
push
add
inc
add
sub
xchg
jae
test
add
sbb
pushf
inc
add
mov
adc
xor
outsl
rcrl
mov
add
add
data16
testl
mov
push
add
cmp
shl
mov
out
add
cld
orb
data16
inc
cmp
inc
dec
add
leave
push
add
out
fstpl
insl
sub
cltd
cmp
xlat
pop
mov
push
add
gs
xlat
xor
or
fldl
fistpl
cmp
sahf
lcall
add
jnp
popa
shrl
add
xchg
test
lock
add
mov
jbe
pop
add
add
xor
pop
sbb
sub
jne
add
andl
push
mov
sbb
pop
pop
shll
add
shll
cli
cvtps2pd
inc
add
add
in
xchg
lcall
outsb
add
pop
data16
add
xor
pop
into
roll
pop
add
mov
mov
mov
cmpl
cmp
int3
test
add
pop
dec
add
lods
sti
lcall
and
xchg
xor
xchg
popa
dec
movsl
mov
inc
add
xor
pop
adc
hlt
jl
rcl
cwtl
fidivl
jo
push
add
jecxz
sti
sbb
add
jl
jecxz
pop
inc
add
aaa
ret
mov
in
dec
and
cmp
add
xchg
ret
mov
add
adc
insl
jmp
add
imul
sub
jg
add
ret
enter
sub
nop
shld
pushf
cmp
data16
jp
sbb
fwait
mov
mov
or
std
xor
mov
stos
mov
cmp
add
cmp
lret
add
leave
or
in
add
sbb
insb
add
clc
out
add
js
jbe
mov
xor
xchg
pop
cwtl
sub
test
out
out
push
add
add
cmpsl
adc
in
push
les
adc
jp
shll
xorb
add
and
xorl
nop
insl
push
add
int3
inc
or
add
add
lea
xor
shlb
outsb
add
fists
imul
mov
mov
fldl
jmp
inc
add
imul
in
add
arpl
lds
dec
test
mov
add
leave
mov
sbb
sub
repnz
mov
or
mov
inc
add
outsl
dec
add
add
std
or
test
jns
pop
andl
jne
jno
add
mov
add
fsubr
mov
loop
jae
mov
cmp
sub
add
mov
cwtl
jmp
aas
pop
aad
mov
addr16
sbb
dec
shrl
inc
sbb
movsl
lcall
insb
add
jl
je
sub
pop
std
add
xchg
sub
cwtl
hlt
dec
add
fistps
movsb
adc
and
sbb
and
movsb
and
fxch
ficoml
sbb
and
scas
add
add
add
or
movq
add
xchg
mov
loope
add
add
xlat
lods
or
or
int
in
scas
sub
jecxz
mov
pop
or
aas
adc
jle
icebp
std
mull
add
add
xchg
add
nopl
lds
add
pop
lret
mov
xor
add
push
xlat
cs
and
add
leave
fimuls
xor
mov
add
add
rolb
cmp
mov
push
mov
add
and
add
add
add
xchg
and
movsl
push
add
add
add
adc
pop
push
push
cld
push
cmpb
xchg
test
dec
aas
lret
add
sub
add
add
popf
hlt
shrb
andb
mov
lret
cmp
out
push
stc
rclb
add
movb
xor
lret
and
jno
cltd
cmp
mov
add
sbb
xchg
add
repnz
call
add
xorb
mov
fsubrl
ret
cmc
fstpt
xor
push
add
dec
mov
sub
push
add
mov
andl
pop
push
xor
sub
leave
addb
dec
add
add
add
lock
add
in
popa
dec
insl
adc
cmp
clc
cmp
ret
add
add
add
fs
dec
pop
add
lret
mov
pop
add
mov
xchg
cmp
arpl
add
and
pop
pop
add
push
add
sub
mov
inc
pop
add
in
adc
in
sub
orb
xor
nop
dec
add
or
dec
add
push
pop
jo
cmc
cmpsl
add
add
cmc
and
rol
dec
dec
add
mov
les
jno
negl
add
add
xor
or
mov
add
bound
lods
shll
js
lock
dec
add
xchg
pop
add
sub
mov
pop
add
or
add
loope
imul
add
add
add
dec
hlt
add
xchg
aaa
popa
adc
xchg
and
inc
add
add
add
dec
add
pusha
add
or
pop
push
add
add
jg
mov
sbb
cmp
pop
add
dec
pop
jecxz
add
add
sbb
add
add
add
cmpsl
push
push
xchg
scas
xchg
sub
xchg
or
add
sbb
add
sti
mov
enter
pop
mov
fisttpl
add
pop
push
add
add
daa
imul
lods
cmp
fisubrs
fisubs
adcl
add
add
add
add
add
add
lahf
lds
push
add
add
xchg
cmp
push
dec
add
add
add
and
lret
mov
xor
jmp
add
add
inc
jne
and
mov
in
inc
add
test
clc
xchg
and
xor
jo
dec
insb
add
add
add
add
fstps
add
dec
xchg
lods
fiaddl
sbb
lahf
sub
dec
add
mov
xchg
into
cmpb
add
cmp
add
add
js
sbb
inc
add
stc
subb
add
add
add
inc
add
sbb
add
pop
icebp
xor
fwait
xchg
mov
ss
mov
cld
jno
jl
outsl
push
nop
pop
add
mov
sbbb
mov
add
xchg
das
mov
add
xor
mov
add
dec
nop
scas
mov
mov
sti
xor
shl
and
xchg
xor
pop
add
add
mov
dec
add
mov
and
xchg
adc
sub
inc
add
add
inc
add
or
add
fcompl
or
testb
pop
add
stc
aaa
out
dec
add
scas
or
xchg
push
add
lds
add
add
add
sub
loope
add
add
mov
sbb
int
jbe
add
sub
ljmp
add
xchg
sbb
adc
movsl
je
sub
add
in
out
mov
add
mov
add
pop
inc
jo
int
xchg
add
mov
pusha
add
cmpsb
push
stc
inc
fsubrl
add
add
ret
push
into
mov
lods
inc
add
add
mov
ljmp
mov
mov
add
insb
add
inc
add
add
xchg
adc
adc
xor
adc
shl
add
jp
test
mov
add
add
add
mov
ret
mov
or
pop
daa
or
add
stos
popf
mov
lret
push
dec
aas
push
sub
push
add
add
add
mov
add
add
adc
out
lret
ret
mov
xchg
in
adc
mov
in
loop
add
push
add
out
jno
cmpsl
subl
cmp
ljmp
xchg
mul
mov
sbbb
push
add
inc
mov
add
jge
loope
mov
pop
addr16
add
jg
xchg
xor
scas
out
cli
andb
movsb
mov
pop
rorb
inc
add
cld
pop
adcl
mov
scas
fdivr
fcoms
cltd
aas
push
fidivl
add
add
add
dec
add
lret
in
pusha
add
push
add
add
hlt
mov
cmp
dec
and
adc
cmp
movsb
jecxz
test
push
add
mov
mov
sub
jl
or
xchg
loope
add
add
add
gs
add
outsl
cmp
pusha
add
push
add
les
jbe
or
inc
lds
add
cmp
mov
pop
add
add
int3
xor
mov
xor
add
outsb
add
scas
cmp
adc
jo
xchg
sbb
add
dec
icebp
mov
aaa
jae
andl
out
add
in
insb
add
cmp
add
mov
ja
mov
push
add
iret
inc
lcall
lock
mov
loope
cmp
pop
add
lods
out
mov
pop
inc
add
jo
daa
cmovs
daa
fidivrl
bound
xchg
subb
lods
cmpb
or
xor
outsb
add
add
add
popf
mov
fimull
pop
add
popf
xor
jo
leave
lret
sti
jns
dec
dec
add
or
xchg
add
add
add
mov
add
add
mov
add
add
add
add
mov
or
popa
xor
and
dec
add
add
fisubs
add
add
jmp
xor
sbb
add
add
lahf
or
jmp
cli
push
add
add
and
fsubp
mov
outsl
xchg
dec
add
scas
adc
and
lds
pop
sub
lods
pop
mov
in
popf
mov
add
icebp
sbb
adc
add
cmp
xchg
jb
rclb
add
cltd
cmpsb
push
enter
dec
add
add
jl
dec
add
push
add
add
cltd
shlb
jo
jbe
bound
jae
shl
ja
add
or
push
add
bound
and
popa
jge
sbb
sub
pop
mov
add
shll
lock
stc
xlat
cmp
pop
cmp
add
xor
push
and
add
add
sub
add
lcall
dec
pop
add
add
inc
xchg
loop
add
dec
add
xchg
jb
arpl
subb
ljmp
test
fdivr
or
adc
add
push
add
pop
add
add
mov
out
add
mov
leave
push
and
sub
sub
push
add
add
insl
cmp
jle
pop
add
xor
mov
mov
cld
dec
add
add
mov
jno
cmpsb
push
add
loop
loope
shl
test
add
add
add
inc
xor
adc
shlb
add
add
test
or
or
pusha
add
movsb
int3
mov
jo
push
add
add
out
push
mov
jecxz
dec
idivl
cmp
popf
repnz
add
test
add
add
inc
add
push
add
push
add
adc
add
fwait
loopne
lcall
push
add
in
rcrb
sti
xchg
mov
and
push
and
add
push
add
xchg
sbb
push
add
inc
mov
or
nop
in
mov
jns
add
mov
mov
fnstenv
xchg
sub
adc
push
and
inc
sbb
cli
jmp
and
and
int
and
jnp
add
inc
add
add
sub
add
add
rclb
outsb
add
add
insl
mov
add
icebp
mov
inc
or
pop
xor
cmc
mov
sub
shlb
pop
out
test
nop
lds
icebp
push
add
add
je
rorl
clc
js
ret
jo
fstpt
add
imul
adc
mov
inc
add
fisttpl
ret
sbb
dec
add
add
cli
loope
sbb
cli
in
mull
cmp
ja
movsl
sbb
jge
out
mov
mov
add
mov
in
sahf
leave
and
data16
add
cmpsl
testb
jnp
add
add
xchg
cvtps2pd
jae
add
adc
push
popf
xorl
add
add
les
mov
stos
sub
imul
pop
out
cwtl
dec
lods
lret
dec
add
add
add
push
loopne
sub
dec
push
roll
cmpsl
push
inc
add
out
fists
js
lahf
inc
add
faddl
inc
add
hlt
mov
jmp
popa
in
pop
test
add
sub
adc
test
add
add
add
add
or
das
sbb
iret
rcll
add
pusha
add
call
inc
add
jns
add
add
add
dec
add
add
push
sbb
adc
cmp
push
fsubl
std
data16
add
jno
jp
xor
shrb
lods
outsl
jge
dec
add
out
fisttpll
sbb
movsl
imul
mov
fcmovnb
outsl
outsl
pop
movsb
pop
insl
cmp
dec
add
add
push
add
leave
mov
sbbb
add
mov
fxam
inc
add
data16
push
add
popa
in
adc
mov
mov
xchg
xchg
and
add
add
add
pop
add
push
lods
rcrl
dec
add
inc
add
mov
lock
add
mov
xchg
jge
int3
mov
jmp
push
repnz
lods
ljmp
add
inc
mov
je
sbbl
fcomp
sub
add
add
ds
xor
xchg
sub
data16
sbb
and
pusha
add
dec
mov
jle
ret
xchg
dec
add
inc
add
inc
rolb
loopne
add
mov
sub
cmp
xorl
inc
add
jle
lds
add
add
ljmp
lds
mov
add
fcompp
ret
adc
jnp
das
xchg
insb
add
and
push
add
test
loopne
add
add
mov
jae
in
xchg
xchg
or
add
push
add
pop
push
add
fildll
in
inc
add
test
xchg
insl
xor
pop
add
add
add
pop
add
cmp
les
or
add
sahf
cmpsb
add
or
add
lea
outsl
in
mov
jle
and
add
xor
add
rol
les
bound
mov
stos
xchg
in
cmp
add
outsb
add
outsl
imul
arpl
mov
lahf
ret
sbb
scas
adcb
jp
fisubrs
sbb
sbb
mov
movl
or
movsb
sub
push
add
sbb
jbe
xchg
roll
in
int3
js
lods
mov
sub
insl
or
jmp
add
lret
notl
out
dec
or
mov
add
mov
movsl
jne
inc
add
add
je
adc
das
pop
jmp
data16
mov
and
and
fs
mov
add
sbb
psrlq
call
stos
xchg
add
add
je
xlat
in
add
enter
push
add
das
mov
xchg
mov
jg
and
cmc
aam
add
lea
pushf
mov
add
rcll
xchg
fcom
xchg
movsb
xchg
push
add
add
fstps
push
add
addb
add
icebp
bound
sub
adc
das
mov
dec
add
imul
add
add
jle
ljmp
lcall
add
cmc
adc
push
add
sbb
dec
sub
cmp
xchg
xchg
ret
fstps
add
mov
sub
mov
mov
add
add
xchg
inc
mov
int
adc
popa
call
sub
sub
inc
add
add
pop
jne
xor
xlat
mov
xor
add
icebp
clc
mov
and
outsl
adc
dec
ret
cmc
xchg
add
add
stos
add
and
pop
mov
cmp
push
inc
in
cli
or
sub
inc
add
adc
test
add
lret
test
cmpsl
popf
dec
scas
daa
imul
aad
fcompl
add
mov
add
jbe
jno
fistl
test
pop
mov
jae
dec
add
shr
aam
out
jo
lods
stos
or
daa
jmp
pop
ljmp
add
fisubrl
add
adc
ret
push
add
movsl
add
cmp
into
ljmp
dec
add
fldl
rolb
add
sub
stos
hlt
xchg
push
dec
add
in
ret
add
push
add
mov
xchg
dec
add
add
xchg
lock
inc
pop
hlt
and
loope
out
out
in
loop
add
add
jbe
icebp
nop
mov
and
xlat
loop
int
sub
mov
adc
test
mov
add
jnp
add
add
dec
add
pop
dec
xor
add
cmp
aaa
add
call
lea
insl
push
xor
dec
add
sarb
ror
pop
cmp
repz
add
mov
add
mov
push
add
aaa
sub
call
cmp
sti
xor
scas
hlt
cmp
int3
lock
add
inc
add
loop
add
add
push
add
stc
inc
add
inc
add
jmp
mov
jbe
mov
adc
iret
sub
sti
inc
cmp
je
pop
add
jg
add
stc
das
jge
pop
out
cmp
in
inc
dec
and
mov
add
data16
xchg
pop
add
push
in
icebp
sbb
movsb
ljmp
lahf
cmp
cmpb
and
add
insb
add
add
add
add
push
mov
in
mov
or
movsl
xchg
add
mov
and
xor
add
or
mov
imul
add
add
add
fsts
or
bound
mov
psubb
call
aam
data16
arpl
add
add
or
lret
repnz
ret
adc
add
or
or
add
in
sbbl
hlt
push
add
test
adc
dec
hlt
dec
add
gs
add
add
stc
in
imul
and
pop
add
cmpsl
ja
add
push
add
icebp
push
add
add
sti
xorl
sub
jmp
jne
into
jge
jo
idiv
test
xor
outsb
add
xor
fcomip
daa
mov
xchg
inc
shl
rol
xchg
lcall
inc
xor
push
add
add
loop
add
inc
add
out
jecxz
add
in
dec
data16
pop
add
inc
arpl
add
sbb
out
xchg
mov
add
sbb
shll
loope
add
jno
mov
add
pop
lock
add
sahf
call
add
enter
adc
inc
test
adc
mov
xor
int3
push
sub
insl
jl
inc
imul
add
jmp
add
cmp
xchg
xchg
dec
mov
fldcw
jl
sub
and
jmp
add
sub
in
inc
mov
push
ja
jge
xor
add
add
dec
fdiv
jmp
mov
lret
scas
outsl
ljmp
xor
roll
add
xor
scas
adc
cmp
sti
or
or
test
mov
movsb
or
out
add
cmp
test
jbe
fsubl
add
adc
add
std
mov
shrl
int3
call
ret
loope
ret
testl
pusha
add
inc
adc
add
stc
mov
cmp
out
add
das
or
jl
out
and
jp
fs
out
andb
loopne
dec
add
repnz
add
cwtl
mov
dec
das
loope
mov
arpl
add
insl
addr16
cmp
enter
mov
inc
add
insl
xchg
add
add
cmp
cmpl
rcrl
add
and
aaa
pop
sub
dec
add
add
pop
lods
inc
and
mov
sbb
add
in
push
adc
sahf
lret
add
mov
add
ljmp
cwtl
mov
sub
add
and
dec
add
pop
xchg
add
push
add
pop
xchg
sahf
jmp
ja
add
inc
add
bound
in
and
pop
add
xchg
ljmp
add
pusha
add
add
add
jmp
push
add
add
bound
push
add
aam
or
fiaddl
xchg
push
add
add
jbe
add
mov
add
testb
inc
add
aad
sbb
ret
imul
add
sbb
mov
add
mov
adc
pop
cmp
mov
add
add
aam
add
add
out
cmpsb
or
lahf
pop
mov
rorl
mov
inc
add
data16
test
add
sbb
and
mov
cwtl
imul
pop
add
and
and
add
pusha
add
mov
add
or
add
mov
cmpsl
push
add
dec
add
fmul
dec
lahf
in
leave
push
aas
cmp
add
inc
add
dec
lret
cs
inc
repnz
pop
ret
pop
push
add
aas
inc
add
mov
das
fisttpll
add
aas
dec
adc
xor
add
xchg
jo
fldlg2
push
test
movsb
xchg
pop
mov
xchg
fwait
jb
push
push
xorl
clc
jg
push
add
sbb
mov
add
leave
mov
add
adc
add
movsl
inc
sbb
mov
add
dec
inc
add
sub
add
and
sbb
clc
popf
aad
mull
movb
out
mov
clc
xchg
mov
sub
push
stos
sbb
add
add
add
add
or
adc
jp
mov
pop
and
fisubrs
add
xor
xor
inc
add
push
add
add
nop
jns
add
xor
or
dec
enter
sbb
push
pop
xchg
dec
add
add
lds
cld
jecxz
add
inc
jbe
or
xchg
das
sub
add
pop
add
test
push
xchg
mov
push
scas
inc
in
add
sub
repnz
xchg
mov
or
add
push
add
add
add
jle
and
add
add
neg
fisubrl
into
popa
xchg
mov
or
xchg
or
testl
add
les
xchg
enter
dec
add
add
add
add
call
add
xchg
orb
adc
outsb
add
clc
jmp
add
jb
mov
add
out
xlat
inc
add
sbb
or
mov
add
add
pusha
add
ja
js
in
add
stos
sbb
push
sub
adcl
rolb
std
loope
mov
pop
stc
xchg
shll
add
getsec
shl
ret
jmp
leave
mov
sbb
pop
add
push
add
inc
add
in
pop
sbb
mov
insb
add
pusha
add
add
lahf
pop
jmp
sar
bound
les
jne
mov
addr16
add
xor
sub
jns
jo
sub
shll
insb
add
xor
jmp
add
into
insb
add
xchg
in
mov
add
lods
dec
add
sbb
cltd
mov
dec
add
or
jne
mov
inc
mov
pop
dec
add
xor
data16
add
add
fsubrs
fsubl
std
xlat
cmpsb
mov
add
add
add
sbb
lret
jo
inc
inc
lock
jnp
add
or
cmp
int
add
add
dec
iret
lret
lahf
shlb
sub
push
out
hlt
out
movsl
int3
and
xor
addr16
adc
lret
xchg
dec
add
lods
aam
add
add
adc
dec
cmp
adc
std
mov
mov
testl
mov
add
add
add
add
add
xlat
push
sub
test
lret
call
add
mov
mov
add
add
popa
sbb
jge
mov
or
cli
xchg
add
jmp
mov
xchg
sbb
add
loopne
add
add
add
jp
lods
jg
add
adc
push
lret
test
or
das
push
add
lods
ljmp
pop
and
xchg
in
jnp
add
idivb
add
aas
imul
mov
cmc
jne
adc
add
cmp
mov
add
fiadds
add
add
jno
add
in
and
mov
or
aam
add
add
in
adc
mov
push
fcoml
mov
loopne
xchg
clc
lods
add
add
icebp
mov
jb
lods
in
inc
add
adc
jg
ret
sub
gs
jle
mov
cmp
pop
pop
add
add
add
in
or
push
mov
add
mov
add
in
cld
jge
add
and
outsb
add
faddl
daa
scas
lret
fnstcw
and
inc
std
cli
jns
cmc
sar
rol
mov
add
xchg
data16
add
mov
lahf
fld
xchg
cmp
sahf
mov
out
and
add
add
add
add
add
pop
inc
add
xor
inc
sahf
mov
sub
loopne
addr16
mov
sub
test
pop
add
push
add
int3
pop
xor
imul
sti
cmp
pushl
push
adc
add
fiaddl
aas
cmpsb
dec
add
das
sbb
xor
addr16
lock
dec
adc
push
cld
dec
add
add
mov
add
test
adc
in
sub
pop
dec
add
leave
shll
add
push
popf
dec
jae
dec
add
popf
lret
data16
or
dec
add
pop
add
push
stos
subl
pop
add
je
pusha
add
pusha
add
jg
add
jg
add
add
sbb
add
push
add
and
addl
leave
scas
sbb
push
add
push
add
add
cmpsl
push
add
mov
add
add
xor
jb
inc
pusha
add
add
mov
add
push
add
mov
cltd
test
or
dec
jnp
hlt
jle
cld
mov
inc
add
lahf
adcl
jg
push
dec
add
insl
xor
in
out
add
int3
pop
lock
add
and
add
sub
mov
push
add
add
aas
cltd
daa
inc
add
mov
add
cli
inc
add
add
push
mov
icebp
scas
les
or
pop
repz
cmpsb
out
mov
test
fdivs
imul
add
pop
cmpsb
jmp
int3
adcl
add
scas
popa
push
add
pusha
add
add
stos
push
add
add
sub
and
push
subl
mov
add
subb
ljmp
hlt
cmp
xor
je
outsb
add
les
das
adcb
stc
add
cltd
jae
add
cld
or
stos
fidivrs
add
enter
idivl
jmp
mov
add
mov
inc
add
les
cmpsb
sub
jno
lea
js
ret
jb
dec
add
add
sti
mov
test
add
add
add
add
aas
movsl
add
das
data16
fsubp
xchg
xchg
sub
lods
mov
add
js
and
xor
ds
or
stos
mov
add
dec
out
sbb
add
dec
add
mov
and
inc
sub
lea
fsubrl
rcll
xor
ficompl
add
hlt
stc
pop
iret
enter
mov
add
xchg
inc
loopne
addb
add
add
dec
pop
sbb
add
sub
jo
cwtl
lea
add
hlt
cmp
pop
cwtl
add
add
jae
add
pop
mov
xor
dec
dec
jbe
sti
fmuls
mov
adc
mov
mov
pop
sbb
lret
call
add
add
ror
dec
add
out
pop
add
jle
sahf
add
add
daa
xor
popf
or
lea
and
movsl
pop
adcb
push
add
add
decl
sbb
gs
loop
add
xchg
and
cmpb
int
repnz
push
inc
cmp
jb
xchg
inc
pop
iret
push
xorl
das
in
shlb
add
jp
and
dec
add
mov
inc
test
cmpsl
add
add
jle
bound
out
out
imul
mov
add
sti
in
pop
add
inc
add
jg
lcall
inc
xchg
das
sbbb
cwtl
pop
adc
add
add
pop
add
test
or
push
aaa
mov
addb
dec
add
and
pop
cwtl
inc
add
mov
add
in
or
inc
add
xchg
mov
inc
pop
lods
mov
aaa
ljmp
lock
push
add
cmp
gs
add
push
add
scas
std
inc
add
push
add
add
adcb
lds
add
icebp
not
fldl
add
test
fistl
sbb
jle
cli
leave
or
inc
add
add
push
and
xchg
add
loop
add
rcll
jno
add
mov
sbb
and
add
add
inc
add
loopne
test
insl
xchg
cmp
fsub
int
push
add
mov
mov
scas
adc
dec
repz
sarl
aaa
lahf
int3
fiadds
add
mov
sbb
add
mov
push
add
xor
das
jg
xchg
add
add
add
cld
push
add
cld
out
add
sub
and
nop
dec
add
cwtl
hlt
or
xchg
push
aas
in
sub
out
stc
mov
add
add
add
pushf
movl
lods
leave
cwtl
add
mov
std
or
ljmp
xchg
sti
adc
and
iret
in
adc
or
dec
lods
sahf
idivl
add
loope
xchg
stos
loop
add
and
inc
add
out
dec
add
mov
pop
add
fincstp
xor
push
add
fsub
xchg
cs
roll
jo
fistl
je
js
cmp
rorb
sub
jbe
adc
push
add
mov
add
xor
cmp
pop
popa
ljmp
mov
stc
mov
inc
add
mov
mov
cmpsb
lret
add
cmp
pop
add
add
add
rcrb
add
lea
inc
add
push
test
mov
add
pop
les
outsl
enter
arpl
mov
mov
out
fidivs
add
rorl
add
lret
pop
adc
add
xor
fisttps
xor
xchg
xlat
sub
insb
add
sub
mov
cmp
movl
lret
nop
mov
add
test
add
add
add
jmp
add
sub
rol
inc
or
add
cmp
lods
add
add
pop
add
add
jno
add
repnz
sbb
add
test
enter
jnp
add
int3
jne
xor
in
clflush
jnp
nop
rcrl
adc
ret
push
push
add
lock
add
add
dec
cmp
and
fsubl
orl
sub
adc
pop
sbb
mov
add
pop
xor
mov
jae
int3
stos
add
in
loopne
popa
and
xchg
inc
add
mov
add
dec
lret
or
xchg
mov
jecxz
aaa
xorl
movb
add
mov
test
jo
push
add
pop
lret
jge
add
daa
add
mov
push
sub
and
add
shll
int
enter
insb
add
iret
push
cmp
pusha
add
inc
add
js
jbe
cmc
jp
cmpsl
push
add
sub
fisttps
cmp
add
mov
jnp
notl
push
add
enter
jbe
stc
divl
enter
add
call
add
and
ja
and
das
sub
or
jnp
dec
jo
cmp
or
dec
add
add
mov
add
data16
mov
arpl
xor
sbb
cmpsl
int3
subl
add
ljmp
or
fistl
add
jg
add
mov
jbe
pop
add
add
add
xor
fcomp
and
add
jg
in
out
int
or
push
add
sbb
nop
movsl
xor
mov
push
dec
add
push
add
mov
cmp
cmp
add
cmovo
add
cmp
test
add
fcomi
add
aaa
push
iret
mov
shrb
loopew
bound
into
ss
sub
jae
inc
adc
popf
jae
add
add
ss
repnz
pop
ret
add
cld
mov
jl
scas
loopne
add
add
fisttpl
out
fimull
add
int
movntq
pop
add
std
jmp
add
adcb
add
out
add
fwait
sub
add
cwtl
jmp
push
jecxz
icebp
aas
decb
cmp
or
fdivl
add
mov
lcall
pop
jae
add
test
xchg
or
sub
out
nop
sbb
dec
add
or
cmp
add
cld
xlat
cmp
pop
dec
add
sbb
or
out
fisubrl
dec
movl
negb
lret
popa
inc
add
add
lea
pop
dec
add
adc
push
add
add
xor
add
adc
stc
add
push
xchg
push
add
add
daa
jae
cli
ret
dec
add
mov
add
cmp
lds
scas
stc
cmp
mov
stc
mov
cmp
sbb
push
add
loop
cmp
data16
jbe
or
mov
sub
addb
mov
add
add
add
mov
push
add
mov
push
add
das
cli
or
lret
fcomp
les
jge
imul
aam
mov
or
sub
mov
pop
xor
addl
ds
mov
mov
add
xchg
xor
mov
mov
xchg
or
mov
in
jno
and
stc
adc
add
add
pop
mov
fists
cltd
addr16
pop
ret
js
aaa
or
loop
add
add
add
add
add
js
lret
lret
ret
lahf
enter
cmp
pop
add
test
add
push
add
mov
add
cmpsb
push
add
ljmp
add
fstpl
sbb
add
dec
add
cmpsb
lea
into
pusha
add
inc
add
pop
add
jl
xchg
repz
add
add
mov
add
add
jno
add
in
loope
add
add
inc
mov
int3
dec
add
shrb
sub
add
mov
add
add
daa
or
add
add
push
add
add
ljmp
add
add
inc
add
cmpsl
stos
jl
cmp
xor
add
add
add
add
and
out
or
shll
add
in
mov
ss
ja
mov
push
dec
inc
push
add
pop
or
pop
loop
jecxz
add
sub
add
add
mov
clc
cmc
out
scas
sub
lahf
imul
xor
test
add
lods
push
popa
adc
or
add
or
call
mov
or
jmp
add
lret
xlat
fwait
push
add
mov
mov
add
imul
scas
sbb
lock
add
iret
jl
inc
mov
adc
shr
sbb
and
push
stc
push
addr16
sbb
add
data16
cli
ja
pop
pop
or
out
sub
popa
jns
adc
add
mov
add
xor
ret
lock
add
add
pop
or
pop
lock
in
add
add
mov
test
add
xchg
aas
jge
add
inc
add
and
ss
loop
add
loop
add
add
inc
dec
adc
nop
or
lock
loop
sbb
add
bound
mov
add
pop
and
xor
ret
imul
or
dec
add
add
mov
sub
pop
add
xlat
mov
pop
add
rol
scas
sub
add
cmp
rol
add
xchg
lahf
ja
in
sti
ret
cmp
adc
lods
push
add
push
das
out
and
divl
outsl
fwait
mov
jl
das
fildl
add
js
outsb
add
add
inc
ljmp
mov
bound
mov
and
bound
loop
mov
add
jae
add
insb
add
add
js
mov
data16
dec
jns
pop
push
add
sbb
jp
mov
xor
aas
loopne
add
adc
jne
add
scas
and
or
movsb
and
mov
adc
leave
clc
test
adc
mov
or
jbe
sbb
movsb
scas
and
dec
adc
add
xchg
cmpsb
repnz
mov
add
dec
and
sub
mov
jne
push
xchg
xchg
cmp
add
hlt
mov
out
out
and
scas
fdivl
jge
lds
push
add
xchg
and
shll
icebp
jnp
add
aad
push
add
subl
mov
add
rcll
subb
add
or
mov
outsl
mov
add
add
add
fistps
stos
add
xchg
test
pop
add
add
xchg
pop
andb
arpl
out
out
add
add
sbbb
in
repz
push
imul
int
add
add
gs
mov
add
lret
icebp
add
stos
and
testb
inc
xor
mov
sbb
add
add
or
ret
jecxz
mov
add
and
and
movb
ffreep
aam
push
leave
sub
loopne
add
xchg
cmp
mov
add
add
mov
mull
ret
add
mov
add
cmp
lcall
mov
xor
sbb
roll
mov
jge
stos
and
xchg
loope
push
add
jo
cmp
jmp
ret
mov
add
push
dec
add
add
sbb
lret
add
push
add
ljmp
fwait
mov
enter
and
stc
mov
outsl
mov
add
mov
add
cmpsl
lods
fwait
lock
incb
ret
int
scas
sbb
dec
add
adc
jb
iret
cmc
bound
notb
add
shll
add
add
add
add
insb
add
jmp
and
out
xchg
adc
jle
loope
add
cli
mov
xchg
mov
or
jb
popf
jbe
jae
add
aam
fisttpl
sbb
push
add
sbb
test
add
add
add
jns
add
push
sti
repnz
inc
add
push
add
mov
lret
ud0
or
adc
xchg
sahf
inc
xor
inc
add
stos
and
or
inc
mov
dec
add
mov
mov
add
xor
add
aam
dec
add
add
sub
scas
popf
add
dec
fsubrl
shll
or
add
bound
dec
add
fcompl
jle
std
jl
sub
sbb
add
add
pushl
ficoms
mov
movsl
mov
inc
add
or
push
add
cmpsl
xor
stc
push
pop
add
rcll
jge
lahf
cmp
mov
leave
jae
outsb
add
mov
add
adc
ret
daa
inc
add
dec
stc
stc
js
insl
mov
inc
add
movsb
mov
add
xchg
mov
cltd
sbb
fidivs
ja
add
jns
inc
jle
push
mov
stos
mov
aad
sbb
ljmp
jmp
jmp
xor
scas
mov
inc
add
loopne
jns
mov
cli
popa
dec
add
add
add
test
add
lret
inc
add
add
add
outsb
add
add
xor
popa
test
popa
out
mov
cmp
mov
xlat
addr16
add
pop
xchg
cmp
sub
cltd
les
cmpsl
jne
test
add
add
loope
push
add
inc
add
test
cltd
inc
add
pop
inc
add
mov
push
and
add
add
add
shrb
xor
mov
add
sbb
dec
sbb
push
add
xor
add
add
or
jg
push
add
sbb
jge
mov
add
xchg
jno
out
fidivs
add
add
add
das
enter
cmp
fnstenv
sub
mov
add
test
cmp
pop
sarl
sbbb
and
push
add
das
lcall
inc
add
add
popf
das
xchg
inc
scas
add
push
add
add
push
fisttps
jbe
outsl
je
dec
out
shl
cwtl
loope
xlat
popf
mov
or
scas
punpckhwd
out
add
in
add
or
add
orl
add
or
shlb
mov
loope
mov
fdecstp
jecxz
add
xchg
scas
dec
dec
repnz
sbb
out
jmp
pop
and
push
add
add
cmp
xor
pop
mov
push
add
cmc
or
cmp
sub
and
into
fxch
dec
mov
add
and
add
add
add
dec
add
jo
sbb
add
add
mov
sub
mov
sub
mov
add
jge
add
add
add
pop
push
add
test
add
loop
pop
add
jo
pop
pop
adc
jp
push
add
xor
mov
shrl
sub
dec
add
jmp
pop
xchg
xchg
cltd
fcmovu
inc
add
addl
pop
nop
cmp
js
sub
dec
add
dec
add
lret
mov
insl
out
and
or
sbb
cmpsl
push
add
nop
lea
jne
shll
rcll
mov
cmp
fsubp
jno
add
mov
xchg
add
add
or
aad
dec
add
pushf
push
add
stc
fcoms
stos
jecxz
xor
gs
cli
inc
add
loope
cmpsl
sub
inc
lods
add
gs
insl
loope
add
add
mov
jb
out
decb
push
add
add
movl
dec
sbb
js
incb
add
in
jge
test
add
outsb
add
dec
or
insb
add
lods
sub
mov
sbb
in
jns
xor
shrl
xchg
mov
jnp
add
add
add
push
add
jp
jne
loop
xchg
imul
add
dec
add
pop
lock
dec
add
or
mov
add
add
test
mov
movsl
into
sub
add
add
sub
mov
ljmp
jno
add
outsl
hlt
repnz
add
dec
add
pop
push
add
add
aam
push
movsb
in
add
mov
fdivs
mov
aas
push
pop
ret
arpl
cmp
or
add
xor
add
cld
pop
add
push
add
scas
ret
lret
mov
add
mov
mov
sbb
add
cmpsb
push
add
insb
add
add
enter
pop
out
cld
iret
dec
cwtl
test
pop
add
add
cld
mov
out
pop
mov
xlat
pop
pop
in
out
ret
xor
lahf
in
fstps
cld
pop
jg
pop
int
add
and
push
and
dec
add
ss
cld
addl
adc
add
in
add
push
add
add
add
lcall
dec
add
add
add
repz
inc
add
add
call
stos
mov
stos
push
add
flds
mov
test
jno
scas
sub
add
inc
sahf
inc
jo
sub
and
add
cltd
mov
ficompl
add
pop
add
arpl
or
xchg
movlps
and
imul
fwait
mov
xchg
add
xor
jmp
add
add
mov
cmp
sbb
inc
push
xlat
aas
mov
sub
sbbb
mov
or
xor
dec
add
mov
fmull
std
aaa
fwait
dec
add
or
add
fcmovnbe
out
xchg
add
rcrb
test
lahf
pop
add
pop
add
add
add
in
push
add
pop
add
lahf
inc
bound
pop
add
call
inc
add
add
add
dec
dec
add
negl
add
jmp
ret
adc
popf
pop
cmpsb
shr
pusha
add
mov
add
sbb
int3
fstpt
add
popa
es
bound
xor
pop
add
stos
dec
add
fistl
add
pop
mov
xchg
xchg
int
flds
add
xor
loope
push
jge
outsl
repnz
add
or
sldt
or
sahf
sbb
and
or
push
sub
dec
add
sub
sbb
testl
mov
sbb
and
addr16
aas
bound
loop
icebp
into
push
mov
pop
sub
add
add
lods
pop
mov
add
pop
arpl
aaa
mov
jge
into
jmp
inc
add
or
push
negb
adc
add
dec
mov
add
and
loopne
add
add
sub
imul
and
or
fwait
cmp
add
push
add
jle
out
scas
out
ljmp
inc
add
push
add
mov
mov
aaa
inc
mov
add
test
mov
inc
out
mov
add
add
mov
add
adc
shl
mov
add
add
fldt
push
add
xor
loopne
add
add
outsl
push
mov
or
aam
cmc
roll
scas
jecxz
push
and
fistpl
mov
out
mov
add
push
add
sbb
add
aaa
aaa
mov
dec
add
pop
add
pop
sbb
add
ja
add
mov
lds
jmp
jae
fimull
add
sarl
add
insb
add
add
fisubs
add
sti
or
mov
add
add
dec
fidivrs
outsl
inc
fsubs
mov
int
jnp
pop
outsl
cmp
in
imul
jo
push
add
pop
in
sbb
sbb
push
dec
sbb
nop
add
xchg
xor
test
add
mov
xor
out
scas
fsubrs
mov
add
js
jmp
imul
pop
add
sub
add
subl
neg
sbb
or
fildll
add
jecxz
mov
mulb
add
push
add
dec
dec
add
mov
add
int
mov
gs
xor
aad
xchg
test
imul
fmuls
ret
cld
dec
or
mov
add
inc
add
in
mov
push
add
add
mov
movb
dec
add
jns
and
mov
jl
mov
lahf
push
add
lcall
add
leave
out
and
outsb
add
add
sbbb
cmp
insb
add
pop
and
xchg
mov
add
or
jb
ret
and
sub
push
add
bound
mov
jmp
sti
les
lea
cmpsl
adc
aad
push
test
add
add
add
shr
mov
push
rolb
add
push
add
add
andb
jae
add
lock
data16
add
add
jae
add
ret
das
adc
mov
add
out
rorl
fisubl
popf
addr16
add
jg
icebp
jp
mov
add
sahf
add
fidivl
add
push
add
mov
add
cmpsl
cwtl
femms
add
add
out
dec
add
sarl
add
orl
ds
and
shlb
pop
add
jns
mov
sbb
adc
mov
add
push
add
fmuls
add
xor
add
push
add
add
leave
js
jo
iret
mov
in
les
test
push
add
adc
adc
mov
aaa
or
add
mov
mov
xchg
push
add
pop
add
fcoml
movsb
xor
enter
inc
sahf
dec
add
add
movzbl
and
inc
add
add
popa
in
pop
fidivl
add
add
push
add
jmp
roll
and
lret
cmp
xchg
push
lahf
stc
inc
add
dec
add
add
sub
pop
mov
lahf
loope
mov
add
aas
sbb
or
mov
ret
clc
jo
mov
in
lea
add
mov
add
pop
stc
sbb
dec
adc
aam
bound
pop
xor
in
imul
xor
add
add
xor
adc
iret
movsl
inc
sbb
push
add
xchg
dec
add
aam
stos
pop
les
mov
xchg
cltd
mov
mov
popa
sub
xor
mov
cmp
and
repz
add
sbb
add
jo
sub
ret
std
cmpsb
mov
add
pop
add
sahf
icebp
pop
fsubrl
xchg
dec
add
lods
mov
stos
in
and
push
add
jnp
out
mov
hlt
call
pop
add
fldl
add
or
outsb
add
xchg
pop
repz
add
add
add
sub
add
in
sti
ret
jno
out
or
ret
out
sub
insl
dec
add
mov
xor
or
add
jo
test
mov
pop
mov
jae
add
adc
inc
xchg
add
aas
loop
add
repnz
test
or
xlat
adc
add
add
sub
adc
cmpl
xchg
popa
popa
loope
pop
out
repnz
dec
add
add
inc
std
mov
ror
jmp
scas
sbb
add
sbb
pusha
add
add
scas
lcall
cli
dec
inc
add
add
add
sahf
int
lock
xor
pop
pop
add
insl
test
mulb
hlt
test
inc
add
push
orb
out
cmp
insl
or
inc
aam
add
call
nop
les
pop
add
add
xchg
push
add
xchg
loope
sub
add
hlt
cmp
jl
ljmp
add
cmp
mov
inc
push
orl
jg
add
and
or
mov
push
add
add
lds
or
dec
jecxz
dec
add
int3
cmp
cmp
dec
add
lods
dec
cs
ja
xchg
add
ja
sub
orl
shrb
jns
repz
inc
or
lods
mov
inc
xchg
int
pop
add
add
and
dec
add
add
mov
ror
sbb
mov
movl
jg
dec
lea
cwtl
pop
mov
cli
cwtl
mov
add
lcall
rcll
add
add
stos
cmp
push
fildl
rcrb
lret
push
shll
out
add
add
movsl
lds
mov
je
and
lret
and
pop
xor
imul
rolb
jno
add
mov
inc
sar
add
insl
jns
in
mov
pop
stos
pop
add
push
stos
inc
jle
mov
and
dec
or
add
dec
add
add
daa
fstps
aam
push
add
mov
add
ret
cmp
adc
xchg
cltd
shrl
pop
popf
cmp
mov
lret
lret
push
add
add
psllq
cmp
pop
dec
sbb
add
push
add
jae
mov
jmp
sbb
push
add
xor
add
jnp
add
lcall
adc
std
xchg
push
add
add
js
xor
in
sbb
add
mov
stos
repnz
out
adc
sti
jo
mov
dec
add
pushf
addb
add
in
add
dec
and
sbb
ret
add
mov
sub
xchg
mov
outsb
add
sti
scas
sub
add
fistps
dec
pop
imul
mov
cmpsb
sahf
add
mov
add
in
fidivs
add
rclb
inc
add
out
sti
jge
add
jo
cmp
ja
add
add
add
jnp
sub
clc
jns
loop
inc
add
add
mov
movsb
sbb
mov
mov
repnz
dec
ds
pop
std
orb
add
mov
and
add
add
lds
pop
add
jne
aad
add
jecxz
add
xchg
popf
push
pop
add
add
stos
and
repz
in
add
dec
xor
popa
xchg
xor
ficomps
add
fldz
testl
pop
push
xor
add
add
adc
jne
add
mov
xor
push
add
das
add
add
adc
shll
add
jnp
mov
movsl
add
xor
push
add
add
add
mov
or
rorb
shlb
cli
jl
les
data16
mov
int
pop
je
fstps
rclb
cmp
sti
cmp
add
mov
add
pop
add
fidivrs
mov
jne
gs
add
push
add
rep
or
push
jecxz
sti
loope
jge
add
add
insl
gs
sbb
jns
add
add
iret
mov
test
aaa
xor
add
mov
mov
cmp
shlb
inc
call
add
pop
add
cmp
jne
aaa
sbb
inc
mov
mov
add
out
pop
dec
cli
orb
xor
sbb
push
adc
inc
add
das
mov
add
or
or
mov
adc
and
add
dec
add
std
xor
add
xchg
and
add
add
add
jecxz
int3
lcall
add
or
popf
mov
sub
ljmp
xchg
leave
cmp
adcl
xchg
mov
add
cli
xchg
push
call
test
sub
mov
sti
fsubl
add
add
int
sub
cld
push
add
jl
in
add
add
mov
movsl
idivl
ret
sub
xchg
add
mov
negb
jp
daa
out
xor
adc
mov
repnz
hlt
xor
adc
push
add
add
fwait
leave
jecxz
or
and
dec
in
int
push
add
add
shlb
mov
aad
xchg
movl
mov
test
adc
rorb
pop
add
mov
jl
outsl
jge
add
scas
add
add
add
mov
mov
add
dec
sbb
push
scas
add
xor
adc
in
sub
mov
add
add
push
out
mov
adc
fimull
arpl
into
rclb
shll
out
cmp
hlt
shll
sti
fnsetpm(287
sub
dec
add
add
inc
pop
movsl
bswap
arpl
ja
add
add
add
add
mov
xchg
and
jb
pop
fnstcw
xor
int3
aad
inc
add
in
in
fstpl
sub
add
mov
clc
mov
add
mov
add
lock
stos
push
add
mov
add
cltd
sub
cmp
sub
aaa
pop
cli
push
popa
push
add
cld
xchg
cwtl
stos
mov
out
add
lock
add
xchg
repz
add
xchg
lds
outsb
add
mov
popf
xchg
push
add
cltd
push
add
pop
je
xor
xchg
pop
add
ja
push
out
aad
xchg
insl
sbb
cli
sbb
cmp
cli
in
mov
add
add
jbe
test
add
lock
rolb
mov
enter
push
add
inc
negl
add
xor
pop
add
add
add
rolb
mov
out
lahf
aad
std
test
rorb
pop
mov
mov
add
outsb
add
repz
add
repz
cmp
adc
ret
jbe
loop
sarl
add
add
pushf
xor
mov
add
sbb
xlat
pop
add
addr16
push
ljmp
add
add
outsb
add
iret
in
pop
add
movsl
mov
into
xor
cmp
ljmp
pop
imul
or
add
andb
scas
mov
add
mov
add
mov
xchg
cmc
jmp
insl
gs
add
cmp
out
adc
test
iret
xor
fildl
add
ds
push
in
xchg
push
add
cmpsl
test
add
add
add
add
jns
or
out
lods
stc
faddl
mov
add
mov
out
cmpl
add
movsb
imul
stos
and
jo
out
les
mov
shl
inc
xchg
push
add
mov
or
mov
or
mov
imulb
sbb
popf
jnp
jecxz
int3
mov
test
test
dec
cmc
jno
add
add
in
fbstp
add
inc
add
add
push
rcll
add
jecxz
jmp
add
aam
imul
pushf
test
outsb
add
mov
xchg
lret
loop
repz
xor
jns
stos
mov
push
add
in
movsb
xchg
xor
sbb
test
add
add
pop
nop
rolb
ud2
ds
dec
js
insl
push
loop
out
and
mov
push
add
mov
and
add
add
xlat
xorl
add
test
inc
jbe
sub
push
add
or
aas
lods
in
jb
mov
rcrb
add
push
add
out
aas
pop
mov
data16
jno
add
in
add
jmp
add
add
push
add
andb
mov
mov
push
cmp
sahf
ret
js
and
sub
test
decl
add
shl
pusha
add
dec
fwait
mov
inc
add
aas
add
rorb
sbb
mov
or
jle
rcrl
jg
cld
int
and
dec
add
and
inc
xchg
mov
pop
add
cmp
lods
jb
fwait
ja
or
imul
out
leave
push
dec
sarb
adc
aad
out
mov
mov
pop
add
lods
fs
out
xchg
jge
inc
xlat
jbe
arpl
add
addb
mov
lods
in
cs
enter
push
add
mov
insb
add
test
ds
jne
xlat
sub
add
mov
cmc
cmp
cmpl
add
sbb
outsl
test
jl
mov
add
add
mov
add
rorl
cmp
sbb
mov
hlt
sub
in
jl
dec
add
out
add
add
loope
loop
add
iret
and
je
iret
or
sub
jbe
dec
add
jle
loopne
call
ljmp
add
fldl
stos
popa
push
add
rcr
scas
dec
add
mov
lahf
std
or
push
dec
mov
and
daa
imul
add
lods
pop
add
imul
out
and
movsl
or
mov
push
out
in
jmp
cmp
add
ljmp
add
add
cmp
sbb
dec
and
sub
loopne
add
inc
add
lret
adc
cmp
inc
cmpsb
xchg
ror
shll
add
add
add
push
cwtl
or
ret
lock
cwtl
pop
add
mov
or
xchg
pop
dec
add
add
add
out
jbe
mov
mov
push
add
jo
fucomi
mov
add
outsl
mov
cmp
mov
mov
add
pop
sub
add
add
dec
cmp
jmp
fidivrs
mov
add
call
or
cmp
das
sub
fwait
jmp
pop
mov
mov
mov
xchg
mov
add
insl
rolb
jnp
stos
xchg
dec
sub
fwait
scas
imul
sub
test
add
add
add
movsl
cmp
and
add
push
mov
add
and
add
add
nop
imul
fsubrs
sahf
sti
cmpsl
and
xchg
or
inc
stc
gs
add
outsb
add
add
add
sarb
add
xlat
sbb
inc
xchg
pop
inc
cmc
das
fmuls
sub
and
lea
add
xlat
push
or
mov
jno
pop
enter
std
insb
add
jo
pop
add
scas
ret
stos
sbb
xchg
dec
add
fcoml
lods
xchg
fsubs
out
add
jb
sbb
add
dec
add
add
add
lock
inc
inc
add
fsubl
andb
fucomip
sub
or
addr16
add
add
add
push
add
push
add
test
add
lahf
xor
and
sbb
pop
and
inc
add
cmc
out
sbb
or
test
add
add
pop
jg
and
stos
mov
dec
add
cli
mov
aam
add
fwait
xor
cmc
jl
addr16
xchg
adc
ja
xor
cmp
mov
add
cmp
outsb
add
icebp
cmpsl
test
add
add
mov
and
mov
mov
or
push
cmpsb
pop
ja
and
inc
add
aam
add
mov
nopl
fcomip
adc
negb
xchg
jb
aam
xchg
dec
add
mov
and
lcall
add
add
into
jne
adc
adc
daa
and
inc
add
mov
push
add
jmp
test
add
frstor
add
mov
fbld
mov
jmp
in
cmp
dec
add
mov
in
lds
or
ja
js
jo
mov
enter
dec
add
call
mov
sbb
add
loope
aad
lret
jbe
sar
movsb
pop
cli
outsl
loopne
dec
add
push
imull
add
ja
fsubrl
add
inc
add
add
fcmovb
push
add
push
and
adc
pop
imul
insb
add
testl
daa
push
pop
repnz
xor
adc
inc
add
sbb
dec
cmp
mov
add
adc
test
and
cld
push
add
add
icebp
movsb
rol
add
add
fadd
sbb
dec
fnstenv
lods
std
mov
dec
add
jge
add
into
out
sbb
icebp
outsl
daa
fldln2
jne
add
lods
loopne
adc
cmp
pop
jl
call
add
add
call
cmpl
data16
add
fldcw
imul
mov
push
add
add
add
inc
add
rcrl
adc
arpl
push
add
add
icebp
mov
jbe
xor
mov
mov
add
add
lar
rorb
push
dec
and
add
nop
les
fbstp
ret
jp
test
data16
dec
mov
adc
jbe
fcmovu
mov
out
loop
pop
dec
mov
dec
dec
add
enter
std
in
dec
add
add
xchg
pop
sbb
adc
decl
cmpsl
and
dec
mov
ret
subb
push
aaa
ret
stos
cmp
mov
out
lret
lcall
insl
test
imul
xchg
push
add
add
add
jle
pop
add
mov
fstl
add
xor
int
add
add
jg
ss
xchg
mov
dec
out
xor
jge
add
jno
std
jns
shll
add
les
add
sbb
lret
push
add
or
and
push
into
sbb
add
test
or
sbb
sti
jns
test
int
pop
in
gs
lods
cltd
hlt
jp
pop
int3
xchg
push
add
adc
gs
add
xor
jo
in
sub
mov
push
add
fldl
mov
pop
mov
cmp
adc
xchg
sbb
cmp
xchg
add
pop
and
mov
push
add
add
out
add
insl
pusha
add
xchg
nop
icebp
or
dec
add
fsubrl
in
idivl
push
add
fidivrl
adc
add
loopne
int3
pop
add
loopne
pop
sbb
int3
sbb
dec
xchg
fwait
xorl
xchg
pop
sbb
inc
add
mov
add
cmpsb
pop
pop
add
icebp
fbld
xchg
and
xchg
lcall
cmp
xchg
imul
aaa
sbb
pop
and
add
jl
and
cmp
xor
add
push
add
add
imul
sbb
shrb
add
loope
adc
cmp
sub
int
shl
cmp
cli
loope
popa
sub
ss
jb
mov
dec
incb
mov
add
inc
test
push
add
mov
cmp
clc
inc
add
xchg
jle
mov
add
and
pop
add
inc
jmp
adc
sti
jg
mov
push
add
or
ret
mov
leave
outsl
rcrl
sub
pop
add
cmp
mov
push
add
hlt
lock
nop
push
aas
mov
call
add
add
or
sbb
mov
add
add
add
loop
movsb
mov
add
push
xor
and
sbb
and
add
out
add
fdivrs
mov
dec
add
bound
jnp
add
aaa
data16
arpl
clc
lret
cs
shll
or
lcall
mov
movsb
dec
xor
fbstp
xor
add
fwait
dec
lds
add
add
mov
jae
add
test
sub
add
pop
cltd
push
pop
std
adc
add
add
add
adc
mov
out
sbb
xor
add
pop
jo
pop
add
add
cmc
add
lods
dec
add
xchg
add
mov
scas
or
lods
loopne
push
notb
add
adc
xchg
inc
jnp
add
out
sahf
cmp
int
es
mov
aam
pop
mov
sub
movsb
ds
rcrb
add
ja
add
outsl
dec
lcall
sbb
ja
add
inc
mov
add
jne
in
push
xor
mov
xchg
inc
add
add
inc
push
add
fidivrl
leave
dec
add
pop
add
push
insb
add
add
fnstsw
add
add
lahf
sti
mov
add
mov
push
add
loope
scas
sbb
jecxz
insb
add
add
rep
add
test
push
add
movq
add
push
add
push
add
repz
add
add
add
add
loop
out
repnz
repnz
jb
sub
scas
pusha
add
pop
and
data16
fidivrl
imul
add
stc
dec
push
add
push
add
add
dec
add
rol
popf
add
add
cli
mov
add
add
pop
add
pop
pop
hlt
jmp
movsb
pop
rcrl
out
push
mov
add
mov
inc
add
xor
enter
or
ret
add
and
jns
cmp
int3
mov
dec
mov
sub
xlat
mov
dec
aam
cmpsb
mov
mov
adcb
add
cmp
sti
and
shlb
roll
faddl
or
std
mov
cmpsb
or
add
data16
add
cmpsb
rcrb
jle
xor
imulb
xchg
add
in
ret
pop
add
xchg
repnz
add
adc
lcall
ja
add
or
addr16
pop
int3
cltd
add
pop
in
add
add
xchg
sar
repz
add
add
jnp
dec
add
xchg
out
add
mov
push
add
cmp
enter
stos
stos
add
jecxz
sbb
add
insl
pop
add
mov
or
ljmp
jmp
add
pop
add
stos
and
add
mov
jecxz
add
jnp
mov
adcb
cmpsb
adc
add
int3
and
jnp
add
rcll
cltd
and
add
lock
jmp
cmp
add
ja
lods
arpl
pop
mov
ret
add
shll
pop
mov
pusha
add
cli
lret
or
mov
add
xchg
mov
add
add
popa
inc
add
and
add
sub
mov
cmc
pop
aad
js
cmp
add
add
stc
test
mov
xor
out
shr
repnz
add
cmp
mov
lcall
sbb
or
clc
das
pop
cmc
and
cmp
loope
mov
daa
add
add
add
add
out
test
add
rorl
add
add
or
push
add
jge
sub
jle
dec
and
in
add
add
xchg
stos
jg
adc
std
call
cmp
mov
jle
or
les
inc
adc
pop
ret
mov
cmp
push
add
in
imul
daa
xchg
or
dec
pushf
in
jb
sbbl
or
xor
iret
in
and
fisttps
xchg
incb
data16
xchg
mov
add
add
sub
sahf
arpl
into
dec
add
lahf
std
fsubrp
add
sbb
add
mov
and
popa
hlt
pop
repz
mov
add
add
add
mov
cs
je
sbb
loopne
dec
add
bound
imul
xor
xor
lret
xor
sti
in
dec
add
ficomps
add
subl
rorb
mov
add
jnp
arpl
xchg
repnz
add
add
ds
jo
and
or
jp
pop
int3
ss
sbb
add
gs
xchg
push
push
add
lock
and
or
pop
inc
push
add
aad
sbb
mov
add
add
stc
push
add
add
popf
jg
add
in
imul
test
add
xor
xor
rol
arpl
sbb
clc
pop
jae
hlt
push
add
into
repnz
jl
repnz
pop
sbb
jnp
cmc
outsb
add
xchg
fstpt
add
inc
enter
mov
into
adc
call
fscale
and
mov
or
sbb
movl
add
add
fisttps
mov
add
test
addb
add
and
lods
lods
and
lods
sbb
lock
add
mov
jns
add
inc
add
ja
add
bound
jle
clc
lcall
insl
in
push
insb
add
test
dec
add
dec
arpl
cmp
sub
push
hlt
in
add
xchg
mov
dec
mov
int3
pop
add
add
add
cmp
xchg
popa
add
add
mov
aam
out
mov
add
add
pop
cmpsb
xchg
dec
sti
cmpsb
test
add
add
hlt
lock
ljmp
test
jp
lret
push
jp
mov
add
das
mov
xchg
sub
lods
loope
cmp
mov
mov
cmp
sbb
xor
hlt
cmp
repnz
pop
add
add
add
iret
leave
jmp
cld
js
xor
rcrl
add
scas
xchg
and
dec
xlat
xor
leave
and
sbb
addr16
add
jmp
adc
cmpsb
bound
faddp
enter
add
ss
push
add
add
shll
jle
xchg
leave
test
scas
shll
jae
pop
add
das
mov
jnp
add
mov
add
insl
inc
add
add
int
xor
jmp
mov
popf
cmp
cltd
mov
mov
xchg
adc
mov
add
xchg
mov
add
negl
orl
add
add
add
inc
add
sti
insb
add
xor
pop
add
repnz
pop
sub
cli
andb
dec
div
jo
adc
add
xor
pushl
add
add
inc
add
shll
subl
cli
lock
xchg
sub
outsl
push
add
pop
add
jge
dec
add
pop
add
mov
add
adc
pop
cmp
add
or
stos
ficoml
adc
add
cld
arpl
mov
mov
add
scas
mov
add
out
test
add
decb
add
pop
xor
test
add
sti
push
scas
pop
push
lret
inc
add
sbb
out
add
sub
inc
add
add
jge
cmpsb
aas
data16
push
add
or
jne
add
add
arpl
xchg
ja
push
add
add
das
and
push
add
jae
insb
add
ret
bound
sbbb
int3
scas
or
test
mov
mov
xor
pop
add
and
shlb
neg
adcb
add
out
decb
sub
adc
lcall
xchg
xchg
js
insl
frstor
add
add
test
add
xor
mov
out
add
add
xchg
inc
add
xchg
hlt
les
mov
filds
data16
leave
jmp
add
sbb
sub
call
outsl
lods
arpl
add
and
inc
add
nop
enter
add
ljmp
ret
jmp
pop
cmpsl
das
cmpsl
xchg
popa
icebp
sbb
jg
mov
add
dec
sti
pop
add
nop
bound
add
repnz
xlat
insl
xchg
mov
out
push
mov
xor
movsb
xor
jns
cmp
add
add
add
or
sbb
leave
mov
push
cwtl
bound
js
arpl
lods
cltd
push
add
pop
addr16
mov
mov
outsl
push
xor
or
popa
pop
mov
fbld
add
sbb
and
test
les
add
pushf
add
cmpsb
icebp
mov
xchg
push
insl
mov
pusha
add
out
add
jg
dec
add
xor
pop
add
add
add
in
pmulhuw
mov
add
xlat
scas
jbe
sar
push
dec
add
add
jo
popa
jno
add
add
add
xor
push
add
insb
add
xchg
push
add
dec
add
fimuls
jnp
jge
jl
cmp
push
add
xchg
sub
add
inc
sbb
scas
push
add
push
sbb
add
hlt
add
add
pop
cmp
scas
out
arpl
out
add
inc
add
cmp
push
add
add
add
sbb
add
xchg
fcomi
cmp
jae
add
add
adc
mov
add
mov
rcrl
repnz
add
dec
mov
movsl
mov
fndisi(8087
mov
and
dec
loop
aas
scas
stc
clc
in
loop
add
notb
add
mov
fwait
pushf
mov
xor
mov
iret
dec
add
fincstp
rorb
add
mov
jmp
roll
loope
jbe
xchg
leave
adc
mov
inc
or
es
inc
add
add
test
xchg
cld
jge
push
add
pushf
iret
mov
mov
xchg
add
movsb
fwait
mov
cmp
pop
std
fs
rorl
cmp
sub
mov
inc
add
cmp
dec
add
imul
inc
add
test
popa
lods
adc
stos
std
sub
push
add
les
or
loope
hlt
out
divl
fcomps
imul
mov
push
add
push
ds
pusha
add
cmp
ficomps
add
add
lock
inc
aas
loop
aad
mov
add
pop
add
adcb
scas
or
ret
add
add
add
add
sbb
mov
add
inc
loop
and
pop
add
add
icebp
mov
test
fdivr
sahf
testb
jge
add
addr16
ljmp
cmc
movb
jge
add
mov
sub
out
cmp
fsubrs
push
mov
add
les
lret
xchg
repnz
mov
xchg
test
push
add
mov
mov
dec
add
aas
scas
push
add
fdivrs
add
push
add
or
notb
mov
xor
and
lds
push
cmp
frstor
mov
add
arpl
sub
or
fnstsw
inc
jo
sbb
sub
mov
in
clc
scas
sahf
loop
mov
add
mov
add
insl
test
js
mov
dec
add
addr16
mov
add
xchg
push
add
pop
mov
dec
add
insl
notb
notb
fldt
jle
xchg
outsb
add
add
xchg
jae
enter
add
inc
enter
ss
lods
lahf
cmp
sub
cmp
test
fsub
fdivs
rcrb
add
in
ja
lret
les
push
add
imul
xchg
fnstsw
add
cld
xor
add
add
leave
pop
jae
add
adc
out
lods
jb
jmp
movsl
push
aaa
jecxz
sahf
imul
fldl
mov
add
add
repnz
addl
pop
add
loope
jno
add
out
add
add
xchg
cli
iret
inc
add
leave
shll
add
in
cmc
shr
mov
in
adc
pusha
add
add
imul
mov
add
xchg
adc
dec
add
mov
dec
add
pop
push
pop
sbb
pop
mov
dec
add
mov
orl
add
push
jge
and
icebp
mov
rol
cmpsb
xor
icebp
jl
adc
add
sub
mov
sarb
ljmp
add
scas
or
sbb
dec
lods
mov
add
fisubs
mov
test
mov
mov
aad
add
fcomip
pop
sbb
add
add
pushf
mov
xchg
cmp
push
add
add
in
stos
imul
push
js
push
add
test
cmp
add
cmpsb
rorb
xchg
ds
add
xchg
xor
pop
je
test
xor
popf
cmpsl
push
add
fmull
test
push
orb
pop
out
dec
add
fwait
push
jno
add
jge
or
xor
pusha
add
push
add
add
sbb
add
add
and
jne
add
in
add
je
repnz
mov
cmpsl
and
add
in
mov
jmp
push
cmp
pop
ja
cmp
cmpl
xchg
enter
cmp
sub
add
add
ja
loopne
add
mov
add
add
loopne
rcrl
mov
dec
add
xchg
repnz
dec
add
ljmp
add
cwtl
sub
mov
cmp
add
jmp
xchg
jle
inc
add
in
pushf
ss
cmp
mov
add
xchg
sarl
sbb
add
sbb
popf
lea
add
and
add
ror
push
add
xchg
sub
mov
in
or
adc
clc
mov
pminub
mov
mov
add
test
mov
stc
inc
add
shlb
sahf
sub
sbb
add
bound
jno
add
test
add
cmp
in
mov
data16
test
jg
adc
add
add
daa
cs
or
aam
lds
shlb
dec
insb
add
add
xchg
mov
push
add
sub
lds
adc
stos
popa
insl
add
shlb
add
out
adc
pop
xchg
adc
and
xor
xor
xor
out
add
inc
inc
cltd
sbb
mov
fbstp
mov
add
les
add
push
add
jnp
add
add
add
add
mov
outsb
add
add
int3
leave
sub
pusha
add
add
in
push
xor
or
iret
stc
or
pop
add
add
popa
sbb
add
add
add
jg
mov
pop
add
in
add
mov
xchg
jne
outsb
add
mov
add
les
je
stc
inc
das
mov
ja
cwtl
cmc
sbb
cmp
sbb
add
or
mov
punpcklbw
dec
add
push
in
nop
das
daa
add
mov
xchg
pop
add
add
add
sbbl
and
add
sbbb
add
inc
mov
sub
add
add
pusha
add
xchg
arpl
xchg
popa
inc
shrl
add
cmp
cmp
popa
je
push
add
je
jecxz
push
add
lods
xchg
test
mov
or
pop
into
nop
cmp
add
ret
add
je
subl
add
add
xchg
mov
int3
cmp
or
cld
loop
fmull
and
daa
rclb
cli
ror
jge
leave
subb
in
add
add
push
jnp
mov
add
add
add
in
push
mov
mov
sbb
add
inc
cmpsb
mov
into
les
bound
add
cmc
sub
ja
out
xchg
je
stc
cld
scas
outsl
sub
fdivr
cld
add
into
in
ret
or
lcall
sbb
pushf
or
add
add
add
icebp
cltd
das
xor
mov
ret
inc
ret
in
les
push
add
outsb
add
aaa
lret
insb
add
lods
ret
adc
stos
ret
stc
pop
mov
nop
addl
add
popf
lret
sbb
int
cwtl
fsubrs
push
add
lock
add
inc
add
add
push
add
add
mov
sarb
and
rcll
push
add
jb
fisttpl
outsb
add
sub
bound
int
cmpsl
xlat
fcmovnbe
cmp
dec
add
add
scas
sti
adc
mov
add
rorb
add
js
add
inc
cmp
inc
out
insl
pop
xchg
sub
daa
mov
add
add
add
add
mov
add
fs
dec
add
pushf
and
call
add
loopne
mov
sub
cmp
into
jo
test
and
imul
movsb
jbe
into
cltd
sti
mov
add
cli
fldcw
cwtl
cmc
cli
in
addr16
je
cmpb
xchg
lods
xchg
lcall
dec
repnz
subl
stc
mov
stc
cmc
test
add
mov
in
int3
inc
add
mov
int
push
icebp
cmp
iret
jmp
sti
ja
add
push
add
repnz
and
inc
add
cmp
jae
add
cli
xchg
add
call
add
cmpl
mov
add
adc
push
jecxz
xchg
mov
add
add
add
call
sbbl
out
in
add
cmp
imul
idivl
out
jbe
ja
icebp
jmp
xor
mov
add
add
add
cld
insb
add
orl
or
and
bound
jle
test
ficoml
or
add
add
mov
lcall
popa
pop
add
int3
pop
xor
in
mov
loop
pop
in
sbb
push
add
or
inc
add
cld
add
ret
aas
pop
add
pop
and
and
dec
xchg
xor
lcall
in
inc
lret
int3
lock
push
add
insb
add
mov
add
sub
dec
add
shrb
mov
inc
add
add
or
add
add
jnp
add
scas
rcr
gs
xor
sti
mov
or
inc
add
add
add
imul
add
add
add
cmp
mov
add
dec
add
add
ret
xchg
clc
xor
bound
jmp
inc
push
add
cli
stos
jg
push
add
lret
xchg
int3
cmpsl
repz
insl
cmpsl
mov
int3
xchg
stos
inc
add
lods
sub
cmp
push
add
sbb
add
mov
cmc
mov
push
add
sbb
push
add
nop
lea
lahf
mov
sbb
dec
add
add
ret
mov
add
or
adc
mov
adc
add
jno
test
xor
das
imul
and
or
mov
stos
xor
ljmp
jl
int3
adc
mov
mov
mov
aas
push
dec
add
xor
add
add
imul
add
or
add
xlat
fsubp
sbb
cld
nop
mov
add
inc
lcall
add
push
add
cmp
loope
add
mov
add
add
add
add
add
call
add
inc
add
out
fsubrs
mov
add
adc
addr16
aad
je
movsl
add
xchg
ds
xor
mov
and
gs
ret
jbe
aaa
fstl
ja
mov
fcmovbe
add
out
aas
dec
and
arpl
add
mov
mov
aaa
test
aam
jg
add
pop
add
add
pop
cmpsl
or
sbbl
pop
fcompl
add
mov
add
jb
rcl
fmulp
lds
add
mov
sub
fdivrl
add
pop
inc
jb
in
add
cmp
mov
in
in
sub
mov
mov
cwtl
rolb
add
movb
add
into
fwait
cli
sbb
ficompl
push
add
scas
dec
add
and
sub
mov
fists
loope
incb
inc
jp
insl
or
push
out
and
mov
flds
mov
add
fcomps
mov
add
xor
mov
mov
mov
or
lock
pop
add
sub
adc
xor
sar
add
lock
push
call
xlat
test
or
add
add
in
push
push
add
ljmp
inc
add
mov
add
fwait
shrl
lret
mov
add
add
add
fistl
jmp
xor
add
add
popf
add
add
add
add
std
add
xchg
out
insl
inc
add
push
add
aas
sub
sbb
and
insl
dec
add
arpl
loope
mov
fbld
add
jp
pop
add
dec
add
add
data16
cmp
add
xor
mov
js
in
std
bound
mov
div
push
push
add
jg
add
rcr
adc
leave
ja
and
xlat
xchg
div
jo
daa
jg
add
daa
cwtl
test
add
add
xchg
add
mov
add
inc
add
ret
fwait
punpcklbw
mov
or
add
bound
gs
add
pop
cmp
sbb
mov
aaa
scas
mov
outsb
add
add
arpl
dec
add
inc
iret
jmp
add
push
jp
add
jge
shll
add
ja
outsb
add
add
mov
ret
roll
jp
scas
adc
stos
xchg
add
add
inc
iret
cld
mov
stos
scas
repnz
aam
add
lahf
cmp
add
add
push
add
arpl
and
popf
int3
or
cmp
add
add
push
test
jno
add
dec
push
add
outsb
add
lret
xor
in
add
scas
jnp
add
rcll
lahf
mov
rcrl
mov
xor
lcall
out
sbb
xor
jmp
jne
aaa
inc
add
outsb
add
add
loop
add
aad
fstl
sub
pop
cli
mov
add
mov
fsubr
test
add
mov
nop
add
add
lret
stos
push
add
int
lds
add
fs
cmp
push
add
daa
or
push
add
out
test
add
xchg
scas
scas
jecxz
pop
add
inc
add
add
stc
aas
add
sbb
imul
bound
loopne
adc
lods
repz
std
inc
jle
mov
lock
pop
adc
add
add
add
test
inc
add
mov
sbb
push
add
int
or
mov
lcall
xchg
jbe
mov
fcom
mov
pop
lea
xchg
add
or
mov
and
add
jns
lock
push
add
cli
mov
and
dec
add
dec
add
mov
inc
sub
movsb
test
xchg
arpl
shr
add
add
add
add
inc
add
jg
add
pop
xor
mov
add
mov
add
mov
pop
add
mov
add
xor
ja
add
in
add
lar
mov
test
in
adcb
dec
add
and
int
add
xchg
imul
cs
xchg
adc
test
add
sub
rcl
aam
rcl
aad
imul
jp
lods
sub
inc
add
mov
sbb
add
add
add
jl
sbb
mov
and
fisubrs
fs
imul
xchg
stc
aas
rcr
push
push
add
xor
cmp
loopne
push
pop
loope
in
add
add
xor
mov
pop
fxch
mov
add
add
fsubrl
lret
add
hlt
push
add
inc
scas
pop
sahf
push
test
add
pop
add
ret
out
mov
out
fildll
cmp
add
or
stc
or
jmp
pop
mov
adc
push
add
add
or
stos
cld
xor
cs
adc
pushf
inc
add
cld
adc
divb
aad
add
aad
enter
inc
push
add
add
or
lds
dec
pop
movsb
fistl
add
ja
mov
add
in
mov
xor
jnp
add
fsubl
adc
add
ret
std
or
fst
pop
add
lahf
mov
shrl
scas
fwait
dec
add
cmp
jbe
bswap
gs
xor
sub
pop
add
lods
sub
addr16
jmp
or
xchg
lea
cmc
jle
push
add
adc
mov
add
aas
ret
add
lcall
dec
enter
push
jg
mov
lret
out
mov
aaa
xchg
push
add
movb
add
scas
add
add
pop
add
add
adc
add
inc
add
lea
stc
sbb
add
lea
push
add
sbb
dec
add
call
add
cmc
lods
mov
nop
cltd
dec
add
jne
fwait
cmpb
cmp
into
inc
add
add
rcrl
int3
leave
jbe
dec
add
sbb
mov
leave
rolb
sub
push
add
lret
outsb
add
or
rorl
enter
dec
jno
shr
inc
add
clc
adc
sbb
stc
jecxz
jle
movsb
ljmp
in
add
add
mov
dec
jae
stos
mov
pop
push
mov
lds
add
enter
xchg
xorb
call
add
aam
add
mov
add
sbb
and
out
push
add
add
popf
jecxz
pop
add
ret
and
sub
jmp
add
xor
jae
cmp
pop
lret
data16
add
in
cmpsl
in
add
insl
xor
sbb
add
sbb
test
jno
jnp
pop
add
dec
add
pop
xor
punpckldq
pop
inc
adc
adc
add
xchg
jo
movsl
or
pop
add
add
shlb
add
roll
dec
shr
sbb
ja
subb
pop
add
test
add
and
xlat
dec
add
cltd
xchg
and
add
mov
jnp
fildl
add
add
in
add
xor
cmp
leave
lcall
jg
add
cmpsl
inc
mov
and
mov
add
btc
jmp
pop
mov
adc
into
mov
movsb
dec
add
sub
leave
lock
mov
add
aam
outsl
imul
cmove
mov
add
lds
addl
pop
add
xchg
orb
push
test
xor
adc
ret
jo
cmp
push
cltd
notl
add
cmpsb
pushf
adc
pop
jle
dec
add
inc
add
insl
sub
data16
lahf
rolb
leave
xchg
mov
fdivs
inc
add
movsb
in
cmp
mov
pop
dec
add
cli
xchg
lcall
popf
pop
xchg
ja
mov
sub
or
ljmp
cmp
add
jnp
inc
add
xor
cltd
fwait
or
in
pusha
add
ret
call
imull
and
add
add
xor
imul
xchg
add
movsl
cltd
data16
and
cmp
mov
addb
sub
add
scas
add
mov
add
mov
incl
dec
xor
xchg
bound
insl
dec
add
sbb
insl
jbe
cmp
mov
add
add
mov
mov
add
add
jmp
xor
push
add
and
movsb
mov
add
add
add
pop
add
stc
xchg
push
imul
int
sbb
inc
xchg
cmp
add
divl
push
add
dec
jge
add
stos
outsl
sbb
fdivrl
add
push
add
add
leave
xchg
lods
stc
mov
add
pop
sbb
inc
add
cmp
movsb
jne
enter
enter
push
nop
push
add
jg
add
add
jecxz
mov
pop
add
cmp
pop
jns
add
cmp
sbb
clc
lcall
sbb
pop
dec
add
inc
add
aam
mov
scas
cmp
cld
add
clc
xchg
les
add
loopne
jnp
cs
add
sahf
jnp
add
add
pop
add
mov
add
add
rcll
mov
std
xchg
xchg
adc
push
add
dec
add
in
out
push
add
pop
fucomi
cmp
in
rcll
add
inc
js
inc
fstpl
mov
add
fsubs
xor
dec
mov
add
mov
stos
pop
add
add
mov
add
cmp
add
add
add
push
add
arpl
add
add
leave
mov
add
mov
mov
and
jmp
lret
icebp
mov
shll
adc
add
add
repz
add
mov
mov
jno
add
jb
xchg
jae
pop
add
inc
sbbl
xchg
jmp
add
fcmovnbe
ljmp
push
jns
fdivrp
insl
pusha
add
add
xchg
clc
xlat
and
add
addb
add
add
add
mov
stc
lock
inc
add
cld
xchg
jecxz
add
add
xchg
loopne
add
cmp
fstl
push
test
add
loop
movsb
icebp
mov
lret
add
ja
or
adc
mov
add
jne
add
add
add
cltd
fmull
pop
fbstp
add
xlat
and
add
shrb
xchg
lods
divl
add
adcb
xchg
std
das
rorl
or
rol
or
cmp
mov
dec
add
xchg
xor
dec
add
iret
mov
sub
div
mov
add
add
mov
out
add
ds
add
bound
cmp
ja
popa
mov
sub
ret
jb
shl
pop
add
mov
mov
inc
int
push
add
insb
add
fwait
sub
cmp
rcl
pop
mov
pop
add
fldcw
jge
fsubl
pop
shrl
stos
mov
push
test
dec
add
ljmp
imul
pop
sub
push
add
add
sarb
arpl
test
in
xor
in
add
push
movsl
test
test
add
mov
push
add
xchg
sbb
mov
pop
and
sbb
push
stc
xor
outsb
add
add
pop
cmp
xchg
add
mov
inc
add
sub
add
idiv
pushf
lret
ret
shrl
scas
dec
add
pop
cli
cmp
mov
cmc
adc
das
push
add
jge
imul
jns
scas
imul
test
test
xor
add
loop
lret
inc
mov
pop
bound
rorb
movsb
push
cli
mov
repz
add
push
add
add
ss
scas
pop
cltd
mov
dec
add
push
add
js
fld
stos
mov
movsl
xchg
push
out
and
or
dec
xchg
mov
lods
mov
add
popf
lcall
push
mov
mov
fsubs
add
adc
add
gs
add
imul
lods
jne
pop
roll
lods
mov
and
mov
or
mov
add
push
add
lcall
stos
adc
add
sahf
and
add
pop
mov
jge
inc
ja
xlat
jmp
jae
or
mov
add
fisubrl
cld
cmp
add
mov
sub
cmpsb
adc
test
mov
and
or
out
add
add
add
lret
add
popf
lcall
add
add
daa
mov
dec
add
add
xchg
push
push
shll
ret
mov
add
fs
jl
mov
sti
repz
dec
add
add
add
lock
scas
and
mov
lods
xchg
sub
mov
movsb
dec
push
add
shll
sub
mov
and
add
cmc
js
mov
add
cmp
lea
int3
leave
outsb
add
sbbl
out
add
add
repz
jb
cmpsl
bswap
xchg
pusha
add
add
add
push
add
aad
jne
bound
fcomip
push
xor
outsl
js
sbb
insl
cmc
adc
push
test
push
add
inc
add
rclb
mulb
into
mov
add
dec
push
jb
mov
mov
pop
add
in
scas
test
jecxz
add
add
out
add
mov
daa
xchg
in
mov
add
jns
or
pop
lea
add
add
mov
push
clts
add
add
add
flds
add
cmp
mov
xchg
jb
or
sub
xor
rep
add
lea
add
mov
leave
fbld
std
leave
ja
in
int
testb
sbb
repz
das
mov
jbe
cmovg
add
sbb
pop
fldenv
inc
add
add
shlb
jecxz
imul
xchg
ret
or
sahf
adc
xor
pushf
mov
cwtl
push
add
out
leave
inc
mov
pop
add
mov
or
add
add
mov
add
aad
imul
lds
add
add
repnz
enter
push
insl
push
add
mov
adc
int
add
mov
and
mov
aam
movsl
aas
add
scas
and
xchg
add
enter
aas
in
pop
cli
mov
data16
push
add
dec
add
fdivl
add
xchg
icebp
in
sbb
arpl
negl
xchg
iret
mov
in
dec
add
test
sti
add
mov
pop
std
push
push
add
cmp
sub
loop
in
inc
fisubs
dec
icebp
mov
add
jo
mov
add
lods
jge
pop
add
lods
data16
jg
das
movsb
sbb
outsb
add
cmpsb
mov
pop
add
pop
cmp
int3
lret
dec
push
add
lods
mov
shll
sbb
xchg
out
sub
add
aas
xor
add
push
add
add
add
add
xor
fstp
ss
fiaddl
fwait
testl
movsl
pushl
shlb
cmpsb
dec
dec
aaa
xor
add
add
fstpt
dec
push
fidivl
add
loop
xor
xor
add
lret
nop
mov
add
add
insb
add
adc
xor
out
insl
adcb
outsb
add
mov
mov
loop
popf
mov
push
xchg
scas
push
add
out
std
insb
add
add
add
ror
adc
pop
into
std
and
out
add
add
push
add
add
add
push
add
pop
add
pop
add
pop
mov
add
hlt
or
push
and
push
filds
add
and
mov
xchg
cmpsl
inc
add
sub
outsl
xchg
insl
imul
add
fst
sbb
dec
add
cltd
cmc
popf
mov
mov
iret
inc
test
addl
imul
scas
cmp
mov
sub
std
push
adc
mov
add
add
dec
cmp
add
dec
add
mov
jnp
jp
push
add
mov
in
pop
das
xchg
inc
mov
dec
add
mov
repz
add
add
add
and
pop
and
sub
xchg
or
test
push
add
xor
add
movsb
repnz
mov
stos
and
xor
in
lods
cmpsl
in
pop
and
fbld
leave
in
in
aam
xor
lods
inc
or
add
mov
add
adc
sbb
push
add
mov
cmpsb
jge
add
mov
sub
add
std
andl
xchg
jae
sub
add
rcll
xchg
ret
push
add
lea
add
add
mov
add
inc
add
add
mov
pushf
push
add
sub
imul
add
add
popf
roll
add
lds
add
add
insl
movsb
aam
cmp
inc
andl
jmp
sahf
jge
cmp
mov
pop
lahf
xor
pushl
in
adc
icebp
jecxz
je
push
add
lret
add
cmp
xchg
add
jge
lcall
orb
jno
add
add
add
adc
out
mov
pusha
add
pop
repnz
mov
mov
add
rcr
mov
xor
into
sbb
sbb
add
add
mov
add
fwait
add
mov
jnp
ret
push
arpl
ja
adc
add
add
push
add
add
lret
clc
jne
insl
cmp
push
add
mov
pop
repz
add
xor
rcrb
add
add
push
add
add
push
mov
andl
add
sub
ret
jns
add
divl
add
cmp
stos
inc
add
mov
sub
stc
lods
jns
add
push
add
pop
mov
xor
insb
add
dec
add
test
add
xchg
push
add
add
inc
add
add
dec
add
xchg
and
dec
add
in
add
add
mov
ret
mov
incb
lret
outsl
in
xchg
mov
scas
sbb
mov
add
inc
push
out
stc
pop
data16
mov
add
arpl
push
add
mov
mov
mov
mov
icebp
ret
mov
clc
mov
push
or
lods
gs
add
lret
add
add
push
mov
xchg
mov
add
fcoml
add
repz
add
sbb
xchg
sti
cld
mov
fxch
mov
add
hlt
sbbl
in
add
add
cmp
aaa
add
dec
hlt
jo
leave
add
bound
js
xchg
xchg
mov
push
add
loope
push
add
fwait
mov
push
add
xchg
in
adc
in
lahf
aas
xchg
push
scas
les
add
mov
mov
add
imul
adc
add
add
add
test
pop
push
add
add
mov
lods
xchg
jecxz
mov
jecxz
jo
aas
cmpsb
xchg
xchg
hlt
fsubl
pusha
add
add
add
add
jnp
add
sbb
cmp
insb
add
add
int
xor
push
add
add
add
scas
or
aas
fwait
pop
add
out
fwait
adc
fistl
mov
arpl
push
lds
sahf
push
or
cld
sti
pop
and
mov
jb
adc
adc
mov
add
enter
mov
xchg
add
fstps
add
ret
scas
leave
lods
popf
and
inc
push
add
pop
push
add
push
add
add
add
add
dec
imul
pop
jb
fnstenv
sahf
jg
xor
outsb
add
add
mov
pop
and
dec
jecxz
jp
cmpsl
dec
loopne
mov
pop
add
inc
add
mov
inc
add
dec
add
out
adc
cmpsl
xlat
shlb
xchg
push
add
aam
xor
push
add
add
add
jecxz
add
add
lods
rcrl
fcmovb
cwtl
sub
dec
xchg
or
jns
add
leave
lahf
mov
mov
add
add
add
add
add
add
mov
mov
js
lods
mov
push
add
mov
pushf
scas
sti
adc
jge
mov
mov
nop
lods
mov
pop
add
add
ret
push
popa
mov
add
push
add
dec
add
mov
push
add
or
jge
rcl
insl
cld
jp
imul
inc
add
jb
add
push
je
mov
leave
nop
or
je
jmp
stos
mov
mov
mov
sub
xor
ret
fimull
add
add
add
push
cmp
cmp
out
jle
addr16
add
add
cltd
mov
mov
sbb
les
add
add
and
mov
mov
into
jle
mov
add
imul
lock
xchg
pop
jmp
xor
fucomip
cli
sub
xchg
lock
mov
das
mov
mov
jg
mov
aad
jge
cld
adc
rclb
add
add
add
xchg
aaa
imul
pushl
and
add
aad
shl
enter
pop
add
jns
lret
jmp
out
fstpt
adc
mov
lret
in
loop
inc
add
inc
dec
add
add
push
add
jmp
enter
loopne
jo
push
add
mov
mov
daa
cmp
ljmp
loop
xchg
fnstcw
sbb
je
pop
add
adc
add
add
cmc
push
add
sbb
loopne
sub
das
push
add
and
pusha
add
xor
add
int
mov
int
cmp
sti
dec
add
lcall
add
loopne
xor
mov
data16
dec
cmp
add
fxtract
loopne
adcb
add
imull
icebp
jp
popa
xchg
and
dec
fldcw
fdivrl
or
add
fstpl
dec
add
cmp
out
cmp
mov
js
cmc
cmp
cld
jne
das
in
cmp
mov
add
add
movsb
pushf
outsl
movsb
mov
fcompl
pop
mov
jb
fwait
inc
xchg
imul
addb
mov
nop
aad
inc
mov
sbb
push
add
fcos
nop
mov
jmp
mov
xor
mov
mov
data16
imulb
in
nop
fisttpl
add
cmpsl
cmp
dec
add
faddl
ret
test
add
mov
sub
adcb
mov
movsb
or
adc
add
jae
jmp
add
add
mov
add
fucomp
hlt
mov
add
add
into
stos
int
test
ret
cmp
xor
adc
sub
push
xor
stc
adc
xchg
inc
add
adc
adc
in
xor
les
adc
pop
lea
rcll
dec
add
dec
add
ret
add
add
add
aaa
pop
add
add
lret
dec
add
add
sahf
cmpl
into
adc
pop
incl
dec
add
xor
dec
jp
scas
inc
add
sbb
push
stos
jnp
ret
hlt
test
jnp
add
data16
into
push
getsec
mov
outsb
add
mov
aaa
ja
pop
add
push
xlat
xchg
lcall
xlat
sub
pushf
inc
pop
fcomi
push
add
lods
dec
add
inc
xchg
push
and
test
sub
dec
cltd
pushl
pop
jg
add
add
add
sti
xchg
repz
popa
repz
add
add
jle
cli
push
add
add
call
push
add
ja
jecxz
add
pushf
mov
add
cmpsl
push
inc
add
and
cmp
repz
add
imul
inc
add
scas
xor
pop
sub
mov
inc
jmp
add
mov
add
add
out
push
add
add
push
add
mov
add
add
mov
stc
mov
adc
jle
movsb
addr16
jl
ljmp
push
add
add
jle
fwait
add
daa
jmp
je
jns
lods
jmp
inc
add
in
xchg
in
je
add
add
dec
add
push
test
adcl
and
and
dec
add
popa
and
das
sbb
add
jnp
add
adc
xchg
cmpsl
imul
add
imul
data16
ficomps
add
movb
sbb
pop
jle
xchg
jbe
push
add
iret
stos
cld
imul
add
xchg
and
call
pop
decl
scas
notb
mov
mov
in
add
jecxz
add
into
stos
sub
ljmp
add
fmull
push
add
push
add
add
in
xor
xchg
hlt
loopne
inc
add
add
stos
ja
add
add
cmp
xor
aas
sbb
cli
inc
fdivrl
add
icebp
pop
add
add
dec
add
cli
mov
dec
add
pop
add
sbb
orb
inc
add
xchg
jmp
add
mov
popf
stos
lds
add
fscale
cmpsb
pop
std
enter
adc
mov
add
adc
add
add
cmc
push
add
div
jns
lret
sub
mov
psrld
xchg
lret
ljmp
inc
xor
mov
add
inc
loope
arpl
mov
mov
in
mov
clc
pushf
int3
inc
lcall
push
add
or
pop
add
fldl
out
xor
jle
cmpsl
xor
mov
repnz
pop
add
fimull
stos
in
push
ror
dec
add
aaa
add
jmp
sbb
in
xchg
adcl
add
xlat
stos
jnp
repnz
mov
fstpt
sbb
dec
pop
std
les
cmp
add
or
loopne
push
add
and
in
push
add
pop
fmull
std
enter
pusha
add
add
add
push
add
aam
rorb
shrb
fdivrl
mov
add
sub
loopne
adcb
dec
add
pop
add
add
inc
add
lods
test
xchg
imul
shlb
push
data16
cmpeqps
fwait
mov
and
aad
cmp
imul
imul
add
push
jbe
inc
add
add
out
test
xchg
adc
outsl
jae
jae
xchg
data16
mov
cmc
stos
dec
add
out
in
mov
pusha
add
mov
add
mov
push
add
sbbb
mov
xor
sub
add
mov
pusha
add
add
pop
add
insb
add
adc
xchg
mov
add
add
add
add
in
and
inc
test
cmp
jnp
cmp
mov
add
js
stc
jne
jns
stos
xchg
lds
inc
dec
aas
scas
pop
adc
add
stc
jns
iret
hlt
std
add
xchg
pop
add
cld
aaa
sub
xchg
popa
test
jne
xor
sbb
sbb
pop
jle
ljmp
pop
add
add
add
pop
add
add
pop
add
or
dec
andb
xor
xchg
in
dec
add
pusha
add
add
add
jb
add
add
jbe
gs
stos
xchg
xchg
fcmovu
sbb
add
dec
mov
cld
push
inc
subb
and
pop
add
cmp
mov
inc
mov
push
add
mov
pop
add
pop
mov
int3
or
adc
or
mov
add
add
mov
sub
push
add
call
add
and
xchg
out
lods
xor
add
add
movsl
andb
xchg
sbb
sahf
cmp
sub
out
add
ljmp
pop
test
add
jmp
and
add
dec
add
cmpsl
mov
stos
loope
rcrl
cmc
jle
add
cwtl
inc
out
mov
add
cmp
mov
lea
add
dec
add
add
lock
insl
push
add
add
stos
out
add
imul
rorb
out
hlt
push
add
or
mov
cld
hlt
pop
call
mov
pushf
push
add
arpl
and
mov
add
add
loop
xchg
in
pop
pop
add
add
add
stos
xor
mov
add
ret
enter
mov
inc
add
add
xchg
jp
cli
fdivl
das
sti
ret
xchg
nop
testl
lret
enter
aad
add
add
mov
add
or
xchg
jb
dec
add
push
add
add
dec
add
xchg
lret
mov
mov
xchg
dec
add
sbbl
inc
add
add
mov
cmpsb
push
add
add
jno
jbe
cmp
jbe
je
repnz
iret
stos
leave
xor
mov
add
add
add
add
enter
add
adc
xchg
add
add
leave
pop
iret
cld
sti
fdivrs
adc
add
jmp
dec
add
add
add
xchg
xchg
cmpsl
bound
xor
push
cmp
hlt
mov
jle
pop
mov
xlat
movl
jno
test
or
sbb
imul
inc
add
cli
sbb
lahf
xchg
jno
inc
add
divb
or
insb
add
push
icebp
jge
add
jmp
mov
rol
fbstp
imul
out
jl
jnp
mov
mov
jne
mov
xchg
lock
in
pusha
add
add
mov
add
add
test
add
fdivs
or
je
fwait
arpl
add
cmpb
cmp
mov
jne
in
add
add
and
jb
pop
mov
jmp
dec
jnp
add
popf
mov
cld
mov
add
dec
adc
in
pop
add
cmp
loop
sub
mov
or
xchg
dec
add
xor
test
mov
add
pushl
add
je
mov
ret
fadd
shlb
add
xchg
add
sub
add
aad
pop
sbb
push
aad
std
in
add
das
xchg
data16
mov
pop
add
dec
add
aad
and
add
add
add
add
add
sbb
js
lret
dec
bound
jle
or
add
mov
xor
xchg
inc
in
inc
mov
add
add
mov
sub
bound
lret
pushl
add
movsl
dec
push
add
out
jmp
and
xor
jno
loop
add
adc
add
jb
repz
push
mov
adc
push
add
rcll
or
loop
jge
push
xchg
bound
mov
cmp
sahf
push
fdivs
push
add
out
mov
add
aad
add
push
add
aas
lahf
mov
insb
add
jp
lcall
sbb
add
mov
add
lret
push
add
iret
addb
add
sbb
scas
or
add
add
int
adcb
add
push
add
or
inc
adcl
bound
scas
add
add
or
push
or
cwtl
xchg
fwait
xchg
cmp
rcll
das
or
add
add
adc
push
add
pop
add
sub
call
add
add
ljmp
insl
and
pop
fwait
aaa
loope
sbb
mov
push
add
and
add
add
pop
fnstenv
add
std
sarb
enter
add
mov
lods
ret
sti
out
icebp
mov
and
push
jbe
repnz
fwait
mov
add
pushf
inc
add
add
addr16
jns
je
mov
add
test
push
add
xlat
sub
mov
add
repz
fidivl
inc
add
add
xchg
push
add
repnz
lods
fstpl
pop
inc
add
push
add
sub
cmp
mov
ss
dec
add
mov
xchg
mov
addb
fsin
mov
jge
add
clc
xchg
lods
inc
add
mov
mov
jns
add
sbb
xor
and
add
push
add
add
add
or
in
or
aad
dec
add
sbb
pop
mov
imul
cmpsl
out
mov
add
lea
pop
inc
test
insb
add
push
add
or
adc
repz
pop
sub
sahf
nop
pop
add
sbb
sub
fisubl
xor
lret
mov
inc
xlat
mov
add
sarl
movsl
shrb
xor
mov
cmp
dec
add
and
arpl
inc
sbb
js
or
nop
fcmovb
popa
cmpb
mov
xchg
aad
jl
sbb
sarl
arpl
add
add
sbb
icebp
mov
push
add
xor
sub
add
dec
add
stc
add
add
inc
push
add
out
insb
add
aad
sarb
jae
test
dec
push
aad
xor
lahf
adc
mov
add
addr16
mov
add
or
mov
movsb
cmc
jns
mov
adc
data16
mov
add
arpl
add
enter
mov
add
cli
mov
mov
add
add
and
add
ja
xchg
out
add
gs
jmp
out
in
xlat
jno
mov
dec
rcl
mov
jp
and
int3
pop
or
mov
aam
or
in
fidivs
andl
dec
add
add
add
ja
adc
add
xor
add
fndisi(8087
test
mov
mov
add
stos
stos
cmpsl
hlt
mov
xchg
test
mov
add
mov
pop
mov
add
lods
xchg
add
add
cmp
int3
push
add
add
std
ficomps
dec
add
add
mov
mov
jmp
or
int
or
xchg
enter
add
jmp
inc
pop
push
cltd
mov
imul
lea
inc
add
xchg
mov
sbb
rolb
jno
add
imul
add
out
sub
adc
pop
rcll
data16
test
xchg
lret
push
add
movsb
daa
jns
add
bound
push
add
push
add
mov
push
aad
rcrl
lret
and
mov
lock
add
cmpsb
push
add
lret
push
add
and
cmp
xchg
xchg
add
into
inc
add
add
add
test
mov
add
add
inc
and
add
add
dec
add
loopne
mov
add
out
aaa
test
push
add
out
jmp
jecxz
test
data16
rcl
out
ljmp
add
outsb
add
daa
pop
mov
mov
add
popa
cltd
sbb
jo
outsl
daa
in
rcrb
add
and
es
inc
add
inc
add
addr16
sbb
shll
mov
add
sub
mov
testb
stos
cmp
jecxz
add
movsl
jle
scas
popa
sub
sub
add
add
mov
pop
jg
jmp
push
adc
add
inc
add
mov
ljmp
btcl
popa
int
psubq
fs
das
fsubrs
shll
add
repnz
push
add
push
add
fsubs
add
mov
ret
push
fisubl
xchg
shll
jl
lret
pusha
add
enter
mov
add
add
or
add
mov
push
add
dec
add
in
add
mov
inc
dec
sahf
mov
add
pop
mov
mov
enter
add
dec
add
add
data16
jbe
xchg
mov
pop
add
add
add
add
test
mov
mov
add
mov
pop
push
add
sub
pop
add
add
add
jae
add
add
add
bound
xor
xchg
shr
data16
inc
pop
jge
pop
add
xor
inc
xor
xor
lock
sub
add
lea
lret
lea
adc
daa
fidivs
scas
stos
fwait
lcall
stc
sbb
pop
in
or
mov
loopne
add
int3
xchg
add
ficomps
add
bound
push
add
add
mov
in
popf
adc
mov
add
loopne
push
add
fidivrl
fisttpll
add
add
idivl
dec
lods
in
lcall
add
insb
add
add
test
leave
iret
sti
or
insl
int3
fwait
repnz
ret
loope
push
add
sbb
shrl
dec
jg
mov
or
stos
call
sbb
cmp
lea
imul
add
dec
add
mov
lret
and
cmpb
jae
add
sarl
add
incb
into
mov
inc
mov
imulb
xor
loopne
out
sub
fwait
pop
add
add
add
test
inc
dec
xorl
mov
faddl
dec
add
add
xchg
jmp
lret
jge
add
loope
sub
hlt
data16
das
shrl
mov
loop
add
add
jg
pushf
push
add
int3
cmp
adc
pop
add
or
sub
int3
cmp
mov
movsl
mov
add
sbb
adc
jmp
add
out
cmp
out
call
add
movsb
fs
adc
add
enter
cmpsb
mov
add
dec
add
add
insb
add
lret
or
add
cmc
sbb
call
add
jle
adc
dec
sub
fadds
lret
xchg
sahf
xchg
inc
lret
or
add
rol
and
fistpl
movsb
ljmp
dec
add
cmpsl
jmp
pop
add
cmc
or
xchg
cmpsl
xor
int3
adc
adc
add
push
or
adc
test
add
add
call
adc
popf
cwtl
fcmove
cmp
dec
dec
add
mov
loope
nop
inc
add
fstp
mov
add
cld
out
sub
sbb
call
sub
fcomps
rol
push
add
xchg
mov
add
iret
out
push
adc
add
sbb
sarb
loope
add
leave
and
rorl
add
or
push
add
jg
std
add
jmp
cmp
mov
mov
adc
cmp
push
add
add
mov
add
loope
add
add
xor
cmp
aad
sub
sbb
sub
fdiv
into
dec
jne
add
add
out
and
mov
xor
mov
add
dec
mov
push
inc
lods
mov
lret
rcrb
add
add
mov
jns
mov
fmull
add
ja
icebp
mov
call
bound
loope
lret
test
ret
add
lcall
aam
pop
xchg
jle
cltd
and
jp
int
je
xlat
inc
jnp
fdivrp
mov
pop
test
sub
push
add
add
add
in
add
push
add
aaa
cmp
sub
jecxz
add
push
je
and
lret
xchg
pushf
popf
mov
dec
inc
push
fstpt
insb
add
ja
dec
sarb
add
int
fisubs
rcrl
add
mov
lahf
mov
add
gs
daa
pop
add
and
pop
xchg
and
cmp
inc
inc
add
rorl
jmp
mov
push
add
sub
sub
sti
add
adc
lds
add
add
js
lock
or
fists
inc
xchg
fwait
inc
mov
pop
adc
subb
add
test
add
std
das
lahf
mov
pop
mov
dec
cmp
fisttpll
push
call
outsl
jl
xor
pop
cltd
dec
add
push
add
mov
add
call
jbe
scas
sub
add
in
add
mov
xchg
fnstcw
adc
subl
xlat
mov
add
pop
data16
fsubrs
xor
mov
add
add
out
add
add
ficoms
loope
insb
add
add
data16
add
xor
add
ret
sub
mov
int3
pushf
add
dec
add
dec
add
xchg
mov
add
cmp
dec
add
sub
stos
xchg
dec
adc
sbb
push
mov
add
into
negb
gs
aad
xor
sbb
lods
lahf
mov
mov
jnp
add
mov
or
add
mov
inc
add
add
movsl
out
lret
xor
xor
clc
sub
imul
add
pop
push
add
fistps
bnd
inc
push
add
add
add
add
dec
add
push
add
test
sub
sbb
xchg
cli
push
cmpsl
mov
add
loope
enter
add
add
mov
jae
adc
in
add
call
add
pusha
add
adc
xchg
and
aad
add
jbe
data16
push
add
aaa
js
dec
add
mov
add
out
mov
lcall
add
scas
push
mov
jnp
add
add
vrcpss
cmp
inc
inc
adc
pop
add
cmpsl
pop
add
in
xor
addl
add
add
add
xorb
push
cmp
shll
jg
arpl
or
stos
or
cmp
dec
xchg
in
test
add
scas
rcr
cmc
mov
mov
push
and
mov
pop
add
add
add
cmpsb
je
jne
test
add
pop
into
fstps
add
inc
push
add
les
add
xchg
mov
add
adc
add
add
add
aas
fwait
test
cmp
mov
sahf
pop
adc
test
add
add
adc
sub
add
cmp
cld
arpl
add
jmp
popa
rcrl
sbb
sti
jp
jmp
dec
sarb
push
negb
pop
sbb
add
add
mov
daa
pop
dec
sub
repz
sbb
dec
add
dec
add
adc
test
push
add
add
test
fwait
ret
movsl
cmpsb
jno
jle
xor
add
insb
add
mov
sbb
cmpsb
pop
add
loope
add
jle
je
scas
jbe
pop
or
pop
mov
xchg
add
and
jecxz
adc
sbb
jmp
push
add
test
dec
add
sub
std
mov
add
out
test
imul
negl
iret
pop
add
cmpsb
xor
fidivl
dec
imul
jbe
cld
jne
cmp
add
add
in
lods
sbb
or
xchg
rcl
sti
scas
daa
push
add
repnz
lods
test
mov
inc
add
add
add
movb
scas
mov
mov
cmp
add
daa
jmp
add
push
das
mov
mov
add
dec
add
shl
popa
addb
add
sub
add
add
fld
xchg
mov
lea
push
inc
xchg
jbe
fidivrs
out
lods
rclb
fldcw
pushf
jae
add
pop
pushf
test
add
out
sbb
cmp
fidivrs
leave
pop
pop
add
add
jge
mov
add
xchg
push
add
lret
insl
sbb
push
arpl
add
sbb
cmp
add
aam
add
add
fwait
mov
add
sbb
cmp
stc
jns
enter
jns
std
hlt
movsb
imul
fidivs
add
jmp
add
cmp
in
add
int3
iret
add
pusha
add
xlat
adc
push
dec
add
and
cmpsb
push
repz
je
jmp
push
jp
and
fstpt
add
mov
divb
add
sbb
cmpsb
lea
jns
or
mov
push
mov
imul
add
add
lods
dec
or
mov
mov
out
add
addl
add
inc
add
ret
add
sbb
test
xor
sub
cld
pop
add
cmp
push
rcll
divl
add
add
imulb
cld
and
mov
and
push
fsubrs
test
mov
add
pop
aam
add
mov
fwait
lea
add
pop
add
xchg
movsb
scas
cld
jno
add
and
mov
testl
add
add
in
fisubrl
add
mov
jg
dec
movsb
test
add
or
sahf
shl
inc
add
lret
mov
iret
push
add
add
xchg
insb
add
ja
add
mov
add
add
fstps
and
jnp
xchg
mov
js
ljmp
inc
add
add
mov
or
shl
push
add
cld
pop
mov
and
and
add
cs
or
dec
out
adc
add
mov
enter
dec
add
push
add
add
add
add
xchg
jo
pop
mov
and
aaa
andl
add
aam
cmp
stc
jp
push
scas
dec
lahf
mov
sbb
inc
jl
fldenv
repz
add
out
xchg
jp
mov
inc
add
iret
lods
cld
dec
mov
fmuls
add
add
add
cld
icebp
out
add
mov
mov
pop
insl
jnp
jnp
lock
rcll
scas
dec
add
leave
jge
dec
test
sbb
lea
add
cs
push
ret
jo
insb
add
add
sub
stos
out
mov
sbb
and
out
iret
lret
loopne
daa
and
sbb
jmp
loope
mov
adc
xlat
jl
loop
test
aad
mov
daa
jmp
add
pop
test
sbb
addr16
add
add
add
or
add
pop
enter
xor
rol
adc
add
add
add
out
aad
jns
pop
add
jg
mov
inc
add
sub
rolb
xchg
mov
add
add
or
add
ja
mov
sub
or
xchg
add
stos
lds
add
mov
js
lods
jge
add
add
add
pop
cmp
pmulhw
or
add
xchg
jb
mov
gs
fildl
add
add
pop
mov
jge
test
add
adc
pop
add
pop
js
xor
mov
lock
dec
add
lahf
adc
lock
fldl
mov
fnstenv
test
add
add
movsl
je
push
add
add
into
cmpsb
je
movsl
push
mov
fwait
cmp
aad
add
add
push
add
ja
sub
shrb
add
sbb
mov
mov
add
push
repnz
cmp
add
mov
jl
pop
mov
add
pop
add
cmp
jno
lahf
mov
add
sub
movsb
loopne
outsb
add
push
add
lods
cmc
int3
xchg
add
add
add
adc
xlat
mov
out
add
add
xchg
adc
adc
cmpsl
pop
add
add
outsb
add
fst
test
mov
pop
mov
adcb
add
mov
mov
cmp
jmp
add
mov
add
xor
out
mov
inc
push
add
pop
je
or
ss
lcall
mov
push
add
dec
mov
jl
bound
ljmp
add
stos
mov
add
fwait
add
out
push
and
and
or
add
add
stos
adc
jle
cmp
subl
jg
inc
cmpsb
ljmp
mov
sbb
sbb
adc
shl
mov
add
bound
int3
loope
add
andl
add
xor
cmp
lcall
add
pop
add
fwait
pop
arpl
int
imul
add
pop
lcall
cmc
rorl
mov
jns
leave
movsl
xor
push
add
cmp
add
jbe
jmp
cltd
ret
subb
xchg
pushf
shll
lcall
xchg
jae
push
test
push
add
push
enter
cmpsl
push
add
add
stos
dec
subb
pop
sbb
negb
add
or
xor
outsb
add
xor
sub
cltd
add
adc
cmc
add
dec
xor
jl
shr
and
push
add
mov
xor
or
jne
add
add
lods
js
xor
xchg
add
add
add
sbb
push
add
xlat
mov
ljmp
testb
loope
adc
and
pop
add
add
xchg
pop
add
add
dec
leave
push
add
das
mov
and
mov
mov
xchg
test
add
rcrl
jg
add
jecxz
add
add
in
cld
adc
mov
mov
sbb
add
add
repnz
mov
jo
icebp
pop
repnz
xchg
outsl
push
jns
add
add
or
and
popa
outsl
cmpb
aam
mov
add
lret
mov
cld
add
and
push
add
mov
mov
add
popf
cmpl
mov
lret
cli
sub
popf
popa
fistpl
and
fidivl
pop
sub
add
add
xor
imull
xor
and
rolb
aas
lret
jmp
inc
add
ljmp
inc
add
sbb
add
add
xchg
testl
push
add
adc
xchg
sbb
add
sbbl
sbb
imul
ffree
mov
add
addr16
xchg
adc
and
ja
push
add
xor
dec
hlt
repz
add
adc
out
test
sbb
repz
add
test
jo
dec
fwait
sbb
int3
rcl
sub
or
arpl
inc
add
add
pop
sbb
fnstsw
add
fiadds
mov
stos
push
imul
int
stc
add
add
fcompl
add
add
add
aaa
test
dec
fs
mov
sahf
jge
dec
add
addb
insb
add
add
xchg
cmc
dec
adc
clc
jne
cmc
pushf
je
pop
mov
inc
add
add
sbb
add
add
add
icebp
sub
xchg
jns
adc
mov
add
mov
mov
inc
xchg
mov
addr16
add
loope
add
lds
or
dec
mov
bound
fisubrs
add
das
jg
movsl
inc
stos
cmp
int3
in
sub
xor
popf
fadds
jle
add
xlat
fadd
push
add
lea
add
push
add
jl
and
add
jnp
cmp
jl
push
inc
add
bound
repz
add
fmul
mov
cltd
and
clc
rcl
fldl
shrb
add
lds
shr
xchg
xchg
jns
mov
jae
add
lods
test
imul
cmc
mov
sbb
cmc
cwtl
dec
enter
add
xor
add
cli
iret
mov
add
in
cmpsb
dec
add
inc
pop
inc
add
jno
fsubs
dec
add
add
and
adc
mov
movsl
fsts
xchg
rcrb
cmpsb
pop
andb
add
push
add
mov
add
pusha
add
testb
adc
lret
cmp
mov
add
add
cmp
inc
add
scas
or
add
mov
adc
imul
push
add
js
test
xor
mov
sub
push
add
iret
bound
add
add
mov
add
add
add
pop
push
add
rorl
sub
je
cs
ffreep
lcall
cli
mov
sbb
fdiv
dec
add
sub
push
add
add
jne
jbe
mov
and
je
insl
repz
insl
mov
add
jg
inc
push
add
pop
add
add
fcomps
add
add
gs
cmp
xchg
sti
faddl
int3
xchg
fcmovnu
or
dec
into
sti
add
cmp
movsb
inc
or
sbb
in
dec
aas
pusha
add
addl
repz
in
out
add
add
out
jbe
inc
add
mov
mov
xor
add
je
les
pop
adc
popa
clc
cmp
cmpsl
mov
add
and
jnp
cmp
mov
jo
imul
loope
inc
shlb
add
test
aad
cmp
mov
add
aad
xlat
sub
mov
mov
jmp
stc
push
add
stc
test
add
out
cmp
lods
mov
add
daa
push
add
add
pop
dec
or
add
stos
rorl
mov
sub
lcall
and
add
add
add
popl
add
aaa
data16
add
test
lock
add
sbb
leave
and
in
add
icebp
adc
mov
fcmovbe
scas
fistl
das
or
mov
add
loop
add
add
add
add
mov
pop
aad
mov
add
mov
add
out
scas
xchg
mov
or
mov
outsb
add
mov
xlat
in
mov
xchg
add
adc
push
mov
add
cmp
push
and
add
repz
cltd
adc
mov
bound
pop
add
lret
cmpsl
pop
fcmovnbe
pop
add
add
cs
pop
stc
test
push
add
test
mov
add
add
adc
pushf
inc
add
add
add
into
inc
add
add
pushf
sub
or
js
fwait
insb
add
enter
ss
pop
add
icebp
xchg
pop
inc
add
lods
aaa
mov
add
sbb
cmp
xor
xchg
push
add
add
out
repz
aaa
pop
stos
inc
add
add
push
add
insl
dec
xchg
aas
hlt
pop
popf
mov
add
mov
repnz
pop
and
int3
jg
mov
imul
out
and
insb
add
add
insl
mov
add
pop
insb
add
loopne
insl
xor
shrb
inc
cltd
sarb
inc
add
in
cmp
pop
add
in
add
pop
mov
add
jne
inc
inc
mov
test
add
add
sbb
mov
outsl
cmp
movsl
int
mov
push
or
jne
add
int3
pop
call
push
out
sahf
mov
xor
push
add
add
in
add
add
sbb
add
add
push
add
dec
inc
add
test
fmull
push
add
add
cmp
leave
sbb
inc
add
gs
lret
imull
cmp
inc
add
adc
sbbl
ss
cmp
push
add
push
add
dec
add
add
ret
dec
mov
inc
add
mov
add
pop
insl
push
add
jle
xor
pop
pop
jecxz
and
loopne
lret
insb
add
cmc
mov
jg
cmc
add
arpl
test
push
xchg
cmp
pop
test
jnp
add
jge
insl
jbe
clc
and
adc
add
xor
int
test
pop
out
sub
dec
mull
out
jp
add
xchg
mov
mov
add
leave
les
mov
add
push
sub
pop
add
add
add
jno
call
les
sbb
xor
inc
add
adc
mov
pop
add
and
sti
jno
add
add
add
mov
add
insl
dec
add
add
add
xor
popf
in
jg
data16
cmc
jo
dec
andb
nop
dec
add
mov
lcall
jne
adc
mov
xchg
int
mov
and
add
icebp
sub
cwtl
call
jmp
hlt
xchg
sbb
imul
mov
jg
add
mov
add
cwtl
sub
movsb
adc
sbb
sub
rcl
sbbb
add
add
mov
lds
push
add
inc
add
pop
push
add
dec
push
add
pusha
add
pop
addr16
loope
add
inc
bound
jg
push
adc
push
xor
cmp
xchg
scas
add
and
outsb
add
mov
add
sub
add
jle
lcall
add
pmaddwd
add
dec
add
jo
dec
jne
cmp
add
in
hlt
sbb
fwait
add
mov
ljmp
dec
add
push
add
jl
jne
ror
dec
add
dec
lret
or
xor
add
add
rolb
fisttps
mov
add
add
fcoml
cmc
cltd
cmp
push
xchg
ja
inc
add
sbb
add
clc
movsb
mov
add
sub
repnz
add
add
add
inc
adc
pusha
add
xor
mov
add
jns
sub
sarb
add
add
mov
rcrb
add
mov
inc
add
shl
in
push
add
repz
inc
add
jmp
jge
add
sub
icebp
das
cli
int3
sahf
mov
faddl
mov
add
shll
mov
ja
add
fwait
and
xchg
mov
add
pop
add
xor
push
fisubrl
call
ljmp
jecxz
sahf
std
sbb
stos
mov
divb
mov
mov
in
idivb
mov
sub
out
add
shlb
add
cmp
aas
mov
test
mov
and
add
add
out
cld
pop
add
add
loope
daa
jecxz
add
test
add
push
and
xchg
test
add
mov
aaa
arpl
add
add
xchg
cmp
sub
test
mov
pop
add
cmp
or
data16
enter
add
sbb
push
add
lret
leave
out
mov
xchg
add
cli
je
cmp
fldt
call
add
xor
lock
push
add
mov
lds
aaa
js
jecxz
std
push
add
or
lret
sbb
sahf
fidivs
andb
add
daa
and
icebp
loope
add
pop
adc
popf
xchg
dec
add
leave
mulb
add
outsb
add
mov
imul
pop
repz
cmp
cltd
inc
dec
pop
sub
jne
jo
out
add
jbe
lret
fwait
cmpsl
lds
pop
add
cmc
test
add
push
fcompl
jmp
sarb
popf
or
sub
pop
push
add
add
add
cmp
vmwrite
mov
in
push
add
lcall
and
mov
xchg
pop
ret
jno
ret
inc
push
add
pop
xlat
pop
add
mov
mov
push
add
dec
add
add
leave
cmp
and
jmp
add
loopne
add
add
fdivrs
adc
add
cmp
enter
push
add
rcr
xor
leave
test
xchg
pusha
add
enter
sub
gs
int
add
jnp
imul
add
arpl
outsl
mov
cld
push
jns
add
add
mov
mov
jmp
popf
aaa
push
add
or
add
add
clc
cmc
xor
jecxz
imul
adc
add
cmp
add
repz
inc
movsb
test
add
mov
add
add
out
sahf
pusha
add
jae
dec
add
data16
mov
loop
in
add
adc
xor
inc
mov
pop
ret
inc
add
fs
movsb
mov
inc
add
mov
std
sub
jns
sub
xchg
inc
add
fimuls
add
repnz
pop
cmp
lea
ja
cmc
std
test
sub
aaa
sbb
push
add
mov
pop
push
add
pop
loopne
mov
and
jg
and
mov
add
add
xchg
xchg
adc
in
cld
inc
add
cmp
mov
jecxz
add
inc
inc
add
cmp
mov
push
xchg
push
add
lods
cmc
xor
add
in
xor
and
add
add
adcl
add
arpl
mov
stos
mov
loope
push
push
add
or
es
push
mov
add
pop
add
repz
jge
sti
shrl
std
stc
out
inc
add
xchg
mov
add
add
jae
fbstp
cltd
popa
aam
adc
cmp
orb
test
jge
imul
shr
or
pop
push
add
add
imul
mov
pushf
rcrb
pop
push
testb
inc
add
cmc
and
mov
add
test
add
addr16
in
mov
fs
addr16
add
add
fistl
add
fsubl
fld
dec
xor
rep
push
jge
push
in
mov
mov
mov
js
pop
sbb
pop
add
clc
mov
out
mov
addr16
add
cwtl
int
cltd
call
add
dec
add
jno
add
push
and
cmp
add
lea
push
pusha
add
ret
cmc
add
jmp
or
xchg
add
push
add
dec
mov
or
ret
jno
std
jae
adc
push
add
test
mov
add
in
push
out
out
xchg
and
js
jge
add
push
add
adcb
add
and
sbb
pop
add
je
cmp
xor
addr16
in
test
pop
adc
jmp
leave
pmaxsw
fwait
leave
cmp
add
dec
xlat
inc
add
lea
cmpsl
fisttpll
and
mov
ds
xor
push
add
xor
mov
add
add
push
jecxz
push
add
add
xor
fdivrp
jb
adc
clc
sbb
test
and
ret
xchg
pop
add
fsubrl
lcall
push
add
push
sub
add
add
aaa
aad
xchg
jmp
out
xchg
into
mov
add
sbb
cmp
repz
mov
add
xor
repz
flds
pop
add
icebp
push
stc
mov
inc
sarl
add
xchg
loop
cmpsl
jno
lock
sbb
or
test
mov
fisttpll
jmp
add
popf
mov
jnp
into
aam
pop
add
push
mov
stc
stos
inc
add
pop
add
add
add
add
loop
in
add
aam
lret
sbb
mov
mov
add
jle
loopew
stos
cli
cmp
sbb
int
sbb
inc
out
sti
into
dec
add
add
xchg
mov
ret
dec
add
mov
lods
xor
roll
or
add
add
inc
ret
mov
insb
add
icebp
and
jg
xor
sub
mov
inc
jl
xchg
push
sub
adc
ret
mov
xchg
or
loope
mov
adcl
adc
aad
inc
add
adc
add
shr
mov
add
cmpb
test
add
sbb
sub
cs
pop
add
mov
nop
pop
jle
push
add
jbe
daa
clc
pop
add
fwait
push
add
mov
inc
inc
add
idivl
insl
jo
push
add
into
mov
sbb
add
add
xchg
push
add
cld
fwait
xor
mov
mov
add
add
lahf
lret
add
shlb
cmp
nop
xor
cmp
and
jge
out
add
jne
add
add
mov
pushf
mov
mov
add
fwait
je
in
jb
mov
jo
js
js
popa
mov
enter
mov
fidivrl
ljmp
sbb
push
dec
add
mov
scas
fdivl
add
insl
sub
inc
add
xchg
and
ret
pop
cli
mov
in
mov
ja
loop
mov
ja
fs
cmpsl
lods
outsb
add
fcoml
testl
mov
clc
and
dec
outsb
add
sub
add
test
imul
push
add
or
jecxz
lods
mov
jne
iret
push
dec
xchg
and
or
pop
add
out
sub
stos
sub
pop
fiadds
xchg
les
push
add
add
leave
aad
fcmovnbe
dec
add
ja
sub
add
push
add
add
and
and
add
add
out
jge
cmp
pop
add
xchg
into
and
adc
push
adc
xchg
mov
jb
fisubl
shll
imul
cld
leave
mov
fisubrs
add
or
sbb
pusha
add
xchg
push
add
adc
add
shrb
fldl2e
pop
popf
push
add
lods
xchg
dec
add
push
add
sub
mov
jns
test
jle
out
jns
aas
push
inc
add
add
hlt
fisttpll
flds
sub
cld
inc
adc
stos
rcll
fcoms
push
sbb
outsb
add
xor
inc
std
or
cld
lock
fldt
add
in
xor
repz
shr
add
xlat
pop
and
sub
push
add
ficoms
inc
add
pop
add
rolb
jbe
int
ss
cmp
inc
addb
mov
lds
add
cltd
mov
mov
add
xor
decl
adc
jle
roll
mov
add
mov
sarl
imul
iret
bound
sub
lcall
add
fistpll
ud1
lret
add
mov
add
add
frstor
lds
add
pop
inc
inc
insb
add
jnp
add
movsl
lds
nop
adc
push
add
cmp
sub
mov
adc
add
stc
outsl
push
add
cmpsl
sub
fs
loopne
shlb
add
loop
fwait
popa
outsb
add
jl
dec
add
add
xchg
cmp
inc
fdivrl
add
test
add
cwtl
bound
pop
add
ss
out
add
cmpsb
pop
add
push
add
fcmovb
xor
test
pop
aad
loope
push
adc
adc
test
shrb
enter
rol
es
rorl
add
mov
add
add
int3
push
add
add
xor
arpl
xchg
bound
das
pop
add
in
add
push
jno
push
add
cmp
pushf
pop
dec
add
mov
push
add
xor
add
and
or
inc
add
add
xor
mov
xchg
out
iret
sbb
add
xor
inc
add
stos
pushf
popa
jb
xchg
dec
add
mov
cmp
push
add
jbe
pop
and
pop
add
add
adc
add
cli
add
shrl
add
inc
nop
adc
mov
add
popf
pop
daa
pop
add
dec
cmpsb
subl
call
jne
add
push
add
inc
mov
add
add
pop
sub
negl
and
add
dec
add
cmp
xor
int3
push
mov
fstp
dec
add
add
adc
daa
je
adc
pop
add
jecxz
in
cmp
add
jno
sub
xchg
add
inc
add
jns
insl
dec
pop
add
mov
pusha
add
or
xchg
inc
add
add
add
lods
cmp
dec
mov
je
mov
imulb
imul
mov
push
add
test
jbe
mov
add
and
xchg
jecxz
push
add
aas
mov
add
sbb
xchg
or
and
mov
add
xchg
jecxz
push
add
and
xchg
fwait
push
in
clc
fdiv
push
and
jp
sub
sbbl
sbb
popa
add
imul
mov
fadds
dec
ret
add
add
sub
sbb
add
xor
cli
push
add
sbb
jae
mov
add
in
je
fdiv
dec
add
adc
xchg
scas
push
add
add
shl
daa
inc
add
add
into
adc
mov
lahf
sub
dec
sbb
pop
scas
jne
add
cmp
icebp
jge
rorl
add
daa
in
and
add
fcoms
add
dec
add
add
imulb
add
add
inc
add
dec
add
repnz
adc
in
add
add
push
add
sbb
add
sarb
pushf
push
add
add
imul
add
sub
push
add
pop
add
add
sub
push
add
jae
add
call
push
mov
add
in
mov
add
or
pop
add
dec
dec
adc
je
pop
cld
xchg
cmpsb
push
add
test
mov
enter
das
pushf
mov
or
cltd
xchg
xchg
mov
add
mov
ret
xor
push
add
push
add
xor
adc
cltd
mov
jg
in
jecxz
add
stc
stc
cwtl
add
outsb
add
add
and
int3
leave
mov
push
add
ds
fwait
and
xchg
cmp
mov
outsl
or
dec
xchg
pop
adc
and
add
xchg
xlat
sbb
pop
add
mov
push
daa
xor
and
test
movsb
add
pop
xlat
stos
jb
orb
cmpsl
xchg
xor
add
add
add
pop
add
ds
enter
repnz
in
mov
or
mov
bound
push
in
jb
aas
inc
fnstsw
xchg
add
addb
inc
pop
or
mov
std
mov
lret
xor
lods
add
ret
xlat
cmp
jmp
push
mov
fnstcw
jb
push
add
and
add
cmp
cmp
add
hlt
fwait
xor
inc
push
add
or
stos
adcl
add
adc
add
out
bound
jmp
mov
in
xchg
dec
add
loop
insl
or
pop
add
shlb
lea
or
cmpsb
pop
jbe
dec
add
mov
add
push
add
sub
jo
imul
stc
mov
fdivrs
pop
stos
pop
xlat
adc
inc
out
pop
lcall
sub
xchg
int
mov
mov
mov
mov
addl
add
inc
bound
or
or
jecxz
cmp
test
add
add
mov
inc
add
insb
add
add
repz
xchg
dec
add
add
mov
add
add
ljmp
add
mov
insl
mov
mov
rcll
insb
add
loop
test
aaa
into
sbb
mov
sub
and
jno
cmp
cld
sub
add
add
add
mov
int3
push
add
xlat
xchg
xor
lods
outsb
add
loop
pusha
add
jns
lcall
cmpl
add
xor
dec
add
mov
add
stos
leave
jecxz
out
lret
das
add
pop
jg
lods
pop
sbb
jp
cmp
and
repnz
add
push
adc
loopne
add
popa
cmp
mov
add
ljmp
push
add
jecxz
add
repnz
test
loop
add
add
je
js
inc
add
dec
add
pop
add
jb
xor
pop
push
dec
clc
pushf
add
xor
pop
add
add
cmp
mov
mov
add
lods
aad
sub
nop
les
ljmp
and
pop
xchg
sbb
adc
sub
jmp
pushf
pop
add
add
pop
aaa
pop
add
add
adcb
add
jbe
push
add
test
emms
sti
xor
fldl
sub
sbb
test
scas
dec
add
out
push
loopne
add
mov
add
mov
add
add
push
fnstenv
clc
movsl
cmpsl
cwtl
sub
push
or
xchg
cmpsl
xlat
repz
push
add
lods
imul
add
mov
add
lea
or
cwtl
aaa
pop
push
aad
add
push
add
add
add
inc
add
jnp
add
enter
mov
aaa
sbb
sub
cmc
loopne
add
das
cld
jle
jbe
xlat
cmp
add
mov
add
add
rcl
in
in
jecxz
insl
xor
data16
add
movl
hlt
pop
pop
or
pop
jnp
jbe
aam
mov
sbb
or
xchg
mov
cltd
sub
jae
pop
rcr
test
add
add
fsubs
add
xlat
mov
aad
add
clc
mov
scas
mov
fwait
sub
dec
add
xchg
mov
dec
add
scas
fldl
rcll
xchg
add
pop
push
add
test
gs
and
ja
or
dec
add
ljmp
add
jp
ja
pop
or
test
add
xor
fistpll
fidivrs
pop
add
lret
pop
add
xchg
jle
movsl
sub
icebp
mov
pushf
sti
in
out
into
push
add
and
aaa
dec
add
xchg
pop
cwtl
in
xchg
add
add
mov
mov
shl
cmp
arpl
add
daa
dec
add
lahf
adc
inc
add
add
hlt
test
sub
add
add
cmp
pushf
adc
add
add
mov
push
add
cltd
out
add
scas
and
add
push
add
dec
mov
push
mov
rorb
into
lret
enter
pop
add
jbe
cmp
adc
arpl
enter
jbe
das
fidivl
add
lret
jne
add
push
add
mov
mov
jp
pop
xchg
xor
push
add
xchg
xchg
imulb
add
out
add
mov
add
mov
adc
mov
adc
jo
adc
lahf
push
or
fsubs
or
loope
add
pop
add
cld
sub
popa
lret
scas
and
add
pop
ds
push
add
pusha
add
xor
inc
add
xor
in
add
add
xor
xchg
in
imul
add
leave
sub
sub
add
add
bt
stc
jae
shrl
pushf
adc
fildll
dec
add
mov
add
mov
out
add
pushf
add
inc
loop
mov
fwait
lret
scas
xor
sub
pushf
pop
add
mov
add
add
xchg
pop
imull
aam
jo
sbb
jnp
aam
aad
and
jo
mov
add
push
add
add
add
add
jns
es
into
xchg
jo
lret
imul
inc
add
adc
pop
sub
or
sbb
add
repz
addr16
add
imul
neg
mov
aaa
jb
sahf
and
add
mov
imul
mov
add
rcl
ds
icebp
sarl
add
nop
cmp
dec
add
setl
lret
mov
add
add
rorl
add
add
lods
jno
add
sub
sbb
ljmp
decl
mov
lds
add
and
ret
add
add
xor
cmpsl
xchg
jge
insl
cmp
fcoms
inc
or
add
stos
adc
cmp
add
add
add
sub
arpl
test
and
push
fildll
nop
scas
movsb
or
sub
fisubrs
add
add
xchg
inc
mov
jle
ret
add
xchg
add
sahf
push
push
add
mov
cmp
ret
cwtl
scas
sbb
dec
add
mov
icebp
scas
push
scas
push
add
int
jbe
stos
dec
sub
aas
lds
loopne
pop
lret
push
fidivrl
mov
popf
sub
cmp
pushf
push
add
add
test
add
push
jb
out
setae
sbb
xchg
or
add
add
add
push
push
jecxz
aas
sub
sub
add
inc
add
add
add
cmc
mov
push
add
mov
mov
mov
loop
push
add
cmp
add
mov
lret
movsb
sarl
add
cmp
add
xor
jle
mov
jb
scas
pop
repnz
push
add
out
mov
imul
cli
call
xchg
aam
ror
push
add
dec
das
pop
nop
enter
and
pop
add
add
outsb
add
jg
mov
pop
inc
add
cld
or
or
jecxz
push
add
jb
sti
fistl
pop
daa
data16
ss
lock
cltd
imul
fsubrs
mov
bound
mov
cmp
rcr
push
add
in
jns
sbb
add
pop
cltd
rcrb
aaa
daa
mov
mov
leave
adc
scas
scas
add
add
add
jl
les
mov
push
add
add
mov
aaa
cmc
loope
fidivrs
sub
cmpsl
xor
inc
add
lds
add
and
pusha
add
pop
add
adc
mov
sub
jne
gs
cld
scas
add
fs
push
push
add
xchg
jp
sbb
in
or
lods
sbb
mov
add
add
add
add
xchg
rolb
stos
and
pop
add
mov
out
mov
mov
mov
mov
add
mov
add
mov
and
sbb
add
add
mov
sahf
xlat
jmp
inc
add
pop
scas
jo
add
and
mov
dec
add
add
add
push
add
add
fists
test
add
cld
pop
sub
mov
xor
aaa
int
cwtl
cmp
push
add
call
lcall
movsb
push
sbb
loopne
add
sub
push
add
dec
leave
fldl
leave
mov
push
add
add
scas
or
sub
add
imul
in
cmpsb
push
and
add
add
xor
sub
sahf
out
add
insl
mov
adc
icebp
sahf
push
add
daa
cmp
xchg
add
add
sbb
mov
add
in
push
mov
or
out
add
cwtl
fsts
add
jns
clc
mov
add
jbe
xor
push
add
cltd
sbb
dec
add
and
pop
sbbb
add
jns
dec
call
pop
clc
lds
cmp
into
adc
gs
pusha
add
add
lret
cli
dec
cmp
mov
mov
mov
mov
je
ljmp
add
add
adc
or
push
add
nop
add
or
data16
mov
dec
xor
mov
add
fcmove
mov
xchg
xor
xchg
aas
mov
xor
in
mov
bound
sbb
stc
inc
add
push
push
add
sub
out
mov
lret
add
add
sbb
in
fwait
pop
stos
sbb
js
fbstp
cwtl
mov
cwtl
xchg
lea
out
add
and
add
adc
es
repnz
daa
mov
add
mov
test
mov
sahf
dec
add
jecxz
adcl
addr16
mov
push
ljmp
add
cmp
fucomi
sbb
cmp
push
add
pop
mov
add
js
jg
mov
add
jmp
mov
shll
fiaddl
push
add
adc
add
mov
repnz
jecxz
add
mov
add
add
pushf
mov
add
stos
sbb
add
mov
fbstp
lcall
dec
mov
add
iret
cmp
int3
jbe
insb
add
mov
jns
mov
mov
add
xchg
sbb
pop
pop
stc
mov
ja
cmp
dec
add
cmp
data16
add
ds
mov
add
add
inc
add
popf
shrl
rolb
cmp
cwtl
cmp
dec
add
leave
add
or
cli
pop
add
idivl
dec
add
xor
push
add
add
add
je
js
or
lahf
push
jp
jg
push
add
add
xchg
mov
add
add
shl
cmp
outsb
add
out
or
add
lock
adc
imul
add
prefetch
or
mov
add
jmp
add
or
insl
stos
xor
add
add
adc
or
repnz
jg
jne
bound
fdivrs
xchg
fistps
add
enter
mov
add
mov
xor
cmp
mov
xchg
mov
add
pop
add
inc
add
test
pop
add
pop
outsl
sahf
addb
lahf
xchg
loopne
add
add
les
lahf
adc
out
sarl
push
add
add
jmp
add
inc
cli
cmp
aaa
mov
imul
jge
add
add
push
dec
lcall
add
inc
aaa
xor
jo
stos
cwtl
pop
add
data16
arpl
adc
cmp
sub
cmp
clc
aas
push
and
cmp
mov
add
add
cmc
or
adc
cmc
jge
add
int3
data16
pop
add
in
stos
out
rcr
rorb
outsb
add
xchg
inc
add
jl
inc
add
adc
push
add
sbb
jbe
add
inc
add
add
xchg
xor
or
sub
add
xchg
mov
add
out
imul
add
idivl
test
add
xchg
cld
push
cmpsb
jne
sub
fmul
addl
test
xchg
movsb
in
mov
pop
loop
lea
xor
xlat
fs
sarb
adc
mov
add
subb
out
push
iret
and
cltd
mov
jbe
int3
xor
add
pop
add
or
add
mov
mov
mov
arpl
pop
add
fisubrl
xchg
add
push
add
add
insb
add
xor
add
add
pop
int
add
fisubrl
add
push
add
sub
add
std
pop
push
add
cmp
add
add
add
pop
add
sbb
test
int
sub
adc
jmp
add
add
dec
mov
sub
add
cmp
int
cld
andl
dec
add
add
add
stc
add
mov
lcall
add
inc
add
push
add
scas
jmp
push
add
add
subl
xor
test
ret
scas
sub
stos
mov
imul
xchg
and
cmpb
fwait
call
add
roll
dec
in
sbb
test
add
add
jp
jmp
add
cs
mov
test
hlt
vprotb
add
add
add
mov
inc
xor
dec
add
stc
add
xchg
int3
call
add
add
outsb
add
and
adc
bound
lcall
add
lds
add
add
add
push
gs
add
sub
push
iret
rorb
in
test
add
add
mov
push
add
jne
add
cmp
pop
add
mov
dec
add
aam
es
imul
add
jmp
mov
fisubrs
rdpmc
xorb
add
andl
mov
jno
and
jns
add
cmp
fistps
add
test
xchg
push
pop
add
arpl
add
jge
mov
dec
add
sbb
mov
outsb
add
mov
adc
mov
pop
add
pop
mov
xor
add
add
daa
ss
jmp
add
mov
add
add
and
iret
adc
rolb
add
ret
cmpsl
mov
mov
jge
lea
sub
in
cmp
mov
jae
mov
ret
shlb
popa
imul
adc
add
add
add
cmp
sub
add
add
frstor
push
mov
in
int3
lcall
or
ljmp
mov
dec
add
shl
mov
mov
adc
cs
sub
stos
sbb
add
add
add
dec
add
adc
sub
pop
sbb
aam
out
add
pop
mov
add
pop
add
in
aam
add
cltd
pop
add
popf
mov
sub
call
add
in
add
push
add
add
jbe
add
add
sbb
jbe
mov
mov
mov
ljmp
add
lahf
mov
add
sarb
add
arpl
add
add
dec
test
dec
or
stc
jl
fildll
cwtl
cmp
popf
pop
lds
mov
add
jecxz
add
xchg
jnp
ror
adc
mov
push
add
add
add
out
add
sbb
lcall
jb
sub
dec
fldt
add
xchg
daa
dec
mov
add
idivl
push
adc
or
adc
jl
notl
arpl
test
ja
add
mov
ljmp
adc
test
add
dec
add
sbb
loope
add
cwtl
div
sti
xor
mov
in
add
or
fistpl
sbb
and
movsl
subb
xchg
xor
cmp
loope
add
inc
add
js
lods
jbe
sub
cmp
xor
in
push
add
add
loopne
mov
int
push
sub
loopne
or
sbb
sbb
inc
add
jmp
add
add
aas
cli
cld
jne
xchg
lahf
cmp
sbb
cmc
inc
jno
add
or
mov
add
xorb
lahf
loope
mov
and
cmp
adc
xchg
test
cmp
loop
jle
or
mov
mov
rclb
into
sub
xchg
daa
sub
pop
popf
dec
add
mov
dec
add
inc
xchg
inc
mov
addl
xchg
mov
cltd
xchg
pushf
jmp
jle
pop
jae
xchg
stos
inc
add
inc
data16
jb
sub
mov
arpl
pop
in
fisubl
andl
jo
lcall
mov
and
add
pop
add
add
hlt
clc
das
xchg
add
mov
test
push
test
xor
in
add
add
insl
decl
xchg
mov
daa
mov
rclb
xchg
push
lds
call
pushf
icebp
add
add
adc
cwtl
daa
inc
add
add
movsb
adc
ss
sbb
rcrb
add
hlt
out
je
xchg
lret
cwtl
loope
push
jmp
add
fsubr
or
xlat
dec
jne
out
shrl
sbb
add
cmp
add
iret
ret
fcmovu
in
add
xor
add
sub
add
insl
aas
and
cli
jns
push
add
repnz
sub
fidivrs
pop
add
add
add
sbb
pop
add
loop
add
iret
pop
popf
loopne
xchg
jbe
jbe
adc
add
sub
sub
leave
imul
in
xchg
add
mov
sbb
dec
lock
inc
fwait
xor
mov
outsb
add
mov
cld
icebp
or
sbb
adc
adc
neg
or
out
add
add
test
add
pop
add
orb
add
add
pop
add
shrl
aam
insb
add
mov
test
add
push
add
push
add
add
mov
add
sbb
inc
and
dec
add
inc
add
mov
ds
lret
push
cmp
jmp
adc
xor
push
add
xor
add
inc
push
add
icebp
insl
das
ret
add
add
andl
ds
inc
sbb
fldcw
add
fmulp
fbld
pop
adc
pop
je
in
ror
int
jb
andb
inc
xor
pop
imul
test
add
add
scas
mov
ss
out
mov
mov
pop
add
arpl
js
xchg
aas
int3
xchg
push
add
and
notl
stos
cwtl
jg
and
cmp
imul
aam
push
jae
popf
in
aas
xchg
sub
mov
xor
sbb
jb
fildl
xchg
inc
add
and
stc
xchg
cmp
icebp
gs
add
add
add
push
sbb
cmpb
loop
pusha
add
js
add
sub
ret
dec
mov
jl
inc
adc
add
inc
outsb
add
sbb
divl
stc
mov
into
and
cmp
add
add
clc
add
dec
add
les
cli
movsl
xchg
je
sahf
add
bsr
in
inc
lods
into
fsqrt
add
mov
lock
add
add
dec
js
sbb
les
add
add
mov
in
je
stos
out
add
mov
jae
mov
add
xor
idiv
sub
mov
fnsave
repz
jecxz
add
cmpsb
xor
add
lcall
add
lods
sbb
movsb
mov
or
shl
ljmp
inc
add
gs
fistl
rol
add
or
in
add
add
bound
xchg
and
add
dec
les
imul
pop
cmp
mov
add
into
out
inc
xor
movsl
cmpb
cwtl
scas
mov
ss
out
lds
add
pop
mov
sub
test
add
inc
add
vshufps
cld
leave
jp
mov
add
add
fimull
add
push
add
xorb
jnp
pop
mov
out
loope
xchg
push
add
fsubrl
out
adc
jmp
xlat
aaa
xor
jne
add
jp
icebp
jae
sbb
jno
xchg
insb
add
push
add
jne
pop
sub
mov
loopne
mov
cmpsb
pop
add
sub
adc
lret
pop
add
out
xchg
xor
pop
std
fisttps
add
add
or
cwtl
sbb
rcr
outsb
add
xor
filds
dec
jecxz
add
data16
add
mov
js
add
add
cmp
lock
cmpsl
cwtl
stc
jns
fcomip
outsb
add
imul
pop
jg
ret
push
add
add
jecxz
or
imul
sbb
sub
leave
sbb
std
xchg
adc
test
pop
out
roll
dec
inc
adc
xchg
mov
insb
add
add
stc
jnp
dec
add
or
lahf
gs
mov
mov
std
mov
add
or
mov
aad
and
popf
leave
pop
add
cwtl
mov
bound
xchg
std
std
test
stos
push
add
add
add
lcall
filds
scas
cmc
sahf
bsf
enter
mov
jmp
lods
jge
pop
xchg
clc
aam
scas
cmp
sub
xchg
out
ret
and
add
add
add
xor
push
add
nop
and
iret
mov
xor
cmp
jae
add
mov
add
lock
add
push
outsb
add
add
add
dec
add
add
mov
add
add
add
add
add
cmpsl
mov
add
addr16
pop
rolb
add
jle
clc
xor
add
test
out
out
pushl
pop
aad
add
xor
pop
insb
add
push
add
call
lock
mov
jnp
inc
add
jbe
mov
fdivrl
or
sbb
fwait
notl
dec
mov
dec
add
xor
andb
add
adc
adc
mov
xchg
or
loope
add
add
cmpsl
mov
add
gs
add
loopne
ja
divb
leave
testl
add
stos
jmp
add
lahf
aaa
loope
mov
jge
add
add
add
jmp
add
iret
out
mov
pushf
in
inc
add
sbb
push
add
add
add
sub
lahf
inc
jns
enter
cmp
out
dec
in
mov
repz
stos
std
rcrb
adc
jbe
pop
add
insl
rcrb
add
cmpsl
addr16
mov
adc
or
add
inc
outsl
dec
add
add
scas
aam
ja
jmp
add
cmp
push
add
js
subl
add
jmp
bound
push
outsb
add
outsl
jmp
add
push
adc
and
pop
add
add
cmp
int
mov
mov
mov
add
xchg
jg
pushf
adc
jnp
push
add
adc
add
push
add
push
add
add
add
push
bound
dec
push
add
hlt
push
add
add
daa
lret
inc
cmp
xlat
mov
xchg
repnz
pop
mov
xor
or
mov
jns
fimull
add
add
and
das
jge
push
add
mov
add
add
btl
stc
jp
out
add
mov
inc
in
xchg
inc
add
add
jl
fiadds
push
shrl
add
mov
sub
fisubrs
bound
cmp
mov
add
jecxz
add
add
push
loopne
pushf
cmc
sahf
sbb
mov
stos
out
xor
xor
xlat
xchg
jecxz
popa
jb
push
add
add
lret
pushf
adc
add
dec
mov
aas
js
lock
cmp
add
xchg
test
add
add
cmpsb
ljmp
mov
sbb
xchg
add
add
add
add
add
mov
xchg
pop
loop
push
add
add
outsb
add
add
add
add
clc
or
in
aam
add
pop
jecxz
xchg
fstl
imul
add
fmull
cmp
fbld
dec
add
xchg
or
loopne
add
and
add
shlb
test
add
lods
out
add
cmp
jne
add
dec
add
fcmovb
push
add
into
nop
adc
repnz
int
hlt
jle
fcompl
aas
icebp
adc
inc
add
add
cmp
sbb
les
add
add
push
jne
add
scas
ljmp
ret
add
add
mov
push
add
dec
imul
xchg
mov
icebp
popf
out
pop
fdivrl
aad
fs
pop
mov
cmc
arpl
sahf
clc
mov
push
add
or
mov
push
pop
add
add
addr16
jae
add
add
mov
mov
xchg
mov
add
add
or
or
mov
add
fwait
inc
add
outsl
mov
insl
sub
rolb
add
xchg
in
arpl
in
stos
jge
pop
add
fildl
add
hlt
ja
lret
aad
add
gs
xor
hlt
sub
add
cwtl
sub
push
or
std
inc
add
or
js
ja
cld
inc
add
push
add
xor
int
and
and
je
jb
fiaddl
add
ffree
xor
adcl
add
and
lods
lea
push
test
add
pop
add
sti
push
rorl
add
add
pushf
push
fbld
cmp
add
add
and
iret
sbbl
pop
push
add
add
push
leave
pop
add
cwtl
clc
and
fs
lea
add
clc
dec
iret
xchg
lods
jo
lret
add
sbb
rorb
jl
cld
es
xchg
repnz
inc
add
rcl
popf
mov
lock
add
jbe
outsb
add
imul
xchg
push
add
mov
mov
add
sub
fisttps
add
cmpsb
sbb
adc
popf
aam
dec
dec
add
das
fstl
add
jl
mov
pextrw
inc
add
and
and
jle
xor
or
mov
out
movsl
aas
popa
dec
add
cmp
insl
call
es
imul
add
add
cli
jl
push
add
add
and
les
leave
cmp
add
add
aam
loope
add
mov
add
sbb
pop
add
popf
jg
inc
xchg
xlat
icebp
cmp
lcall
cwtl
loopne
aaa
pop
add
xchg
out
pop
add
jecxz
in
and
cmp
mov
mov
nop
and
xor
mov
jg
pop
add
test
xor
out
mov
xchg
jo
inc
add
pushf
outsb
add
adc
jbe
pop
add
adc
mov
add
add
add
je
jecxz
icebp
adc
cmp
andl
or
push
add
sbb
add
loopne
loope
inc
add
std
stos
cli
out
inc
add
push
out
in
jecxz
sbb
and
adc
sbb
pop
add
add
and
xor
adc
jb
lods
aam
jp
pop
xchg
mov
add
das
popf
loop
add
cmp
or
adc
or
dec
mull
insl
push
add
dec
add
in
mov
push
add
xchg
mov
xchg
lds
add
rol
add
imul
add
push
mov
sub
sub
add
add
mov
or
sub
mov
sarl
add
mov
push
add
push
int
add
push
add
aas
clc
mov
ficompl
clc
pop
repnz
add
dec
jb
add
xor
cwtl
cmp
stos
sub
cli
test
xchg
ret
mov
jg
shl
mov
xchg
add
nop
pop
outsl
cmp
inc
add
xchg
out
push
sub
xor
xor
cmpsl
add
add
lods
dec
add
push
add
fwait
icebp
dec
add
jne
add
fidivl
and
popf
jg
mov
jmp
xor
fucomi
adc
sub
dec
mov
xor
pop
ret
mov
ss
or
mov
and
mov
add
cwtl
cltd
stos
popf
adc
popa
movsb
int
add
mov
sbb
rorb
add
xor
sti
fistpl
ljmp
int
add
add
add
ror
jmp
mov
add
add
add
mov
add
add
imul
push
or
mov
stc
cmpsl
push
add
pop
jae
add
add
mov
jl
icebp
out
and
add
add
int3
mov
add
ret
aaa
mov
add
dec
add
scas
test
jmp
mov
push
add
mov
add
inc
cmpsb
stos
mov
ljmp
and
mov
jp
popa
inc
lcall
sbb
add
sub
cmpsb
dec
dec
add
sbb
arpl
jb
popa
jbe
push
aam
das
jle
and
pop
fidivl
mov
aas
sbb
and
test
pop
mov
pop
push
xor
lods
test
cmp
lock
call
adcl
push
add
mov
jnp
lcall
pop
add
fldcw
insl
jp
clc
in
push
int
sub
lcall
add
push
lods
or
add
fcomi
test
add
push
add
mov
stc
out
leave
pop
add
outsl
push
add
mov
push
add
pusha
add
add
add
add
add
faddp
aaa
jl
jbe
stos
test
add
sahf
jmp
and
ja
jge
pushf
outsl
fnstsw
repnz
lock
add
cwtl
bound
and
sub
sarl
add
sub
fldt
mov
sahf
mov
addb
pusha
add
and
inc
mov
sbb
add
add
repnz
jo
push
fildl
add
cltd
outsb
add
or
push
add
add
push
add
push
add
scas
sti
bound
or
ret
call
and
ljmp
push
xchg
mov
xchg
clc
jmp
icebp
daa
in
sbb
mov
mov
push
mov
add
shlb
add
add
mov
cli
rorl
add
xlat
lods
repz
add
xor
sub
lret
gs
add
and
nop
jne
add
inc
add
out
out
lea
outsl
jg
lsl
add
dec
add
xor
out
imul
cmpl
cmp
mov
add
push
mov
data16
int
cld
push
fnsave
out
mov
rolb
add
cld
sbb
add
add
add
add
rcll
add
add
add
add
bound
push
and
xor
ljmp
subl
hlt
jmp
adc
add
lds
sub
add
mov
popa
shl
loop
jl
push
add
add
or
pop
repnz
fisubrl
movsl
fwait
aad
in
sbb
mov
mov
arpl
push
add
sbb
nop
dec
add
std
push
add
lcall
sbbb
xor
test
mov
hlt
sti
dec
add
aad
sti
out
jo
and
cmpsl
cmpsb
mov
adc
xchg
roll
add
pushf
lret
mov
sub
add
add
pushf
push
add
add
aas
mov
divl
fmuls
scas
add
inc
popa
hlt
pop
add
addl
add
popa
addl
push
add
push
in
fdivr
fwait
mov
lret
push
inc
add
loopne
add
add
in
xor
in
addr16
mov
add
out
push
fsubl
fldenv
and
push
add
cmp
push
dec
loopne
add
mov
out
add
sub
xor
imul
cli
push
add
loope
add
add
ficomps
add
sti
xchg
rorb
add
push
add
das
jns
sbb
push
add
add
jne
add
add
data16
divl
mov
inc
adc
cmc
fwait
arpl
sbb
hlt
mov
decb
xchg
sbb
cmp
cmp
add
push
add
psrld
mov
add
repz
data16
negl
mov
scas
fldl
roll
pop
lods
mov
or
push
add
add
insb
add
lcall
pop
cmp
dec
shll
add
cli
mov
add
add
and
ds
outsb
add
rcr
inc
mov
mov
add
xchg
add
lret
sarb
jecxz
add
jno
jo
mov
xor
add
pop
insl
imul
cli
scas
cli
xchg
push
add
and
mov
and
or
xchg
aaa
subl
add
add
jae
in
xor
add
add
shrb
sub
push
add
sbb
xor
jbe
cmpsl
pop
add
enter
rolb
xor
sbb
sbbl
jle
lret
or
jns
fsubl
stos
pop
add
mov
test
dec
ret
pusha
add
ljmp
add
add
xchg
jae
fldln2
dec
adc
ja
add
add
lea
ret
lahf
push
in
xchg
inc
add
push
jnp
in
add
cs
or
lods
clc
sbb
aam
xor
add
fistps
shlb
add
cmp
nop
cmpsl
out
push
mov
jae
push
mov
xchg
jg
add
add
pusha
add
insl
jl
fstl
shlb
add
mov
add
or
add
mov
repnz
loopne
add
cmpl
add
add
fimull
imul
mov
popf
aas
mov
or
stos
add
sub
jns
inc
test
das
mov
xchg
lea
add
bound
xor
sbb
or
pop
push
and
push
add
xchg
push
add
repnz
out
and
shrl
add
push
sbb
push
add
shl
mov
lret
mov
dec
les
add
add
gs
std
adcl
shrb
pop
add
add
push
and
xor
add
scas
cmp
aas
mov
imul
lret
pop
add
xchg
dec
add
dec
add
stos
into
les
and
push
fisubs
std
or
mov
cmp
inc
das
cmp
test
add
sbb
std
nop
stos
dec
add
mov
loope
push
add
cmp
cld
mov
mov
pop
add
push
add
add
clc
cmp
out
movsl
mov
add
add
add
fmul
les
call
add
push
add
add
xchg
lods
pusha
add
add
add
arpl
add
lods
pop
pop
add
add
xor
test
jmp
subl
sub
sub
adc
ljmp
push
xor
dec
add
push
in
dec
mov
add
and
inc
fucomi
add
add
jecxz
add
scas
mov
dec
add
jp
imul
add
pop
add
add
add
lods
test
xchg
in
pushf
xor
jbe
cwtl
or
imul
add
aam
out
sti
mov
jbe
push
fisubrl
cmpsb
mov
add
jl
jbe
scas
lahf
dec
add
mov
mov
dec
aas
dec
xchg
mov
jb
mov
rcl
insl
loope
mov
dec
add
add
add
add
insb
add
shlb
mov
add
mov
or
lcall
push
add
jle
movsl
dec
add
add
inc
add
add
add
sub
or
add
and
mov
xchg
and
sub
in
loop
xor
ss
outsb
add
xor
mov
pop
or
add
pop
xchg
movsb
xchg
mov
add
xchg
jl
data16
add
add
pop
or
sbb
sub
imul
cmp
push
add
push
pop
add
add
cmp
add
push
dec
or
int
jnp
add
add
hlt
rorl
jne
ss
jle
and
cltd
mov
dec
add
jno
iret
rcrb
add
pop
add
mov
mov
int
xchg
push
add
add
add
inc
add
pushf
pop
sbb
inc
call
add
mov
sub
int3
in
mov
add
push
add
test
add
aam
add
add
xchg
push
add
out
push
add
add
add
add
mov
ja
xor
stos
xor
loope
xchg
scas
push
or
cmp
xor
lods
jle
sbbb
lea
add
cmp
mov
add
sarl
add
fdivrl
mov
adc
xor
lahf
xchg
xor
mov
jge
lds
outsb
add
xlat
mov
sbb
nop
out
push
jecxz
add
add
dec
add
add
sub
jle
fcompl
shlb
stc
jmp
lea
add
push
pop
push
pop
cmc
cmp
add
add
cwtl
mov
sub
xchg
add
pop
mov
lret
clc
lock
pop
clc
mov
inc
insb
add
add
ja
add
xchg
arpl
jg
xchg
movsl
push
add
jns
pop
dec
add
add
add
loope
pop
and
popf
lret
add
jg
add
lahf
mov
mov
push
sbb
jecxz
lods
cmp
jge
jno
add
add
or
inc
add
in
add
pop
popf
and
push
add
int3
push
add
out
mov
pop
xchg
faddl
add
mov
jb
push
add
sub
push
pop
sbb
mov
fcmovnbe
cmp
lret
add
xchg
popf
push
add
dec
addl
cmp
fists
push
add
jle
rcrl
mov
ficompl
rcrl
out
daa
sar
mov
bound
std
test
add
push
jbe
mov
inc
lods
icebp
mov
mov
add
and
mov
push
stos
mov
scas
outsb
add
cmp
mov
jae
outsb
add
sti
mul
test
aad
add
aam
add
bound
lcall
add
xor
sahf
push
add
movsb
lods
mov
std
inc
call
ja
xor
dec
add
dec
inc
cltd
loop
mov
dec
add
lock
add
push
icebp
mov
fisubs
data16
inc
add
in
jnp
cwtl
xor
cld
sub
pop
mov
negb
add
or
shlb
add
cmp
xor
push
add
jo
mov
sarl
push
add
mov
add
leave
loop
dec
add
add
sbb
mov
add
in
imul
and
xchg
inc
add
in
ljmp
shlb
mov
push
add
jl
mov
mov
sub
outsl
pop
sti
popa
out
add
jle
mov
jmp
popf
xlat
cmp
aad
adc
fwait
jne
cmpsl
out
fcompl
cmp
push
add
add
add
rorl
add
mov
push
testl
ret
cmp
xchg
jae
adc
int
in
add
add
repz
mov
add
in
cmc
sub
negl
je
sbbb
mov
inc
add
je
add
js
xchg
jae
add
xchg
inc
add
imul
fdivrp
xchg
addr16
mov
sti
das
fidivs
in
test
enter
add
dec
add
inc
add
ja
push
add
push
jl
xchg
test
jecxz
mov
xchg
jo
loope
and
outsl
loop
mov
pop
dec
das
push
sbb
out
dec
repnz
fsubrl
enter
add
stos
cwtl
ret
pusha
add
sub
sbb
push
repz
jmp
push
add
imul
rolb
dec
mov
sub
add
mov
add
mov
test
sbb
cmp
ja
pusha
add
push
js
sub
mov
jle
pop
dec
add
xlat
dec
sbb
pop
add
inc
add
adc
add
jle
and
push
add
push
add
add
jo
add
or
scas
dec
add
cltd
and
mov
jecxz
aas
mov
xchg
cwtl
loopne
bound
sbb
in
sbb
or
cmp
add
add
sub
xchg
popf
loop
adc
add
inc
add
movsb
push
add
loop
add
fiaddl
dec
add
add
lods
inc
add
push
adc
pop
add
out
loopne
cmpb
push
lret
add
jmp
and
mov
test
add
mov
add
lcall
add
outsl
xchg
sti
cmpsb
and
insb
add
insb
add
cmp
jp
push
add
sarl
enter
inc
add
add
add
add
inc
call
dec
mov
xor
arpl
bound
add
arpl
dec
add
out
add
add
shl
jg
cld
leave
xchg
add
push
xchg
adc
jle
or
pop
into
or
int3
stos
push
add
jge
adc
sbb
mov
jmp
add
mov
adc
dec
adc
dec
inc
enter
sbb
push
add
add
mov
test
lret
mov
add
imul
clc
mov
lods
jns
xchg
add
adc
sahf
iret
inc
repz
add
shl
faddp
sahf
dec
lods
and
or
and
pop
xor
add
scas
sub
aam
movsl
stos
int
andb
add
test
push
ljmp
mov
xor
jle
subl
push
add
add
mov
add
or
xchg
pushf
mov
dec
sub
and
cmpsl
or
call
pop
pop
addr16
push
stos
call
add
test
mov
test
add
add
xchg
add
ljmp
outsl
imul
mov
dec
add
jle
hlt
repz
push
pop
add
jne
scas
pmaxsw
add
cmp
cmp
add
add
lahf
sub
mov
add
add
lea
insb
add
add
add
jb
inc
outsb
add
mov
add
mov
dec
mov
add
jno
xchg
pushf
xor
lea
fimull
xor
xlat
sub
add
scas
and
and
sbb
jl
push
push
dec
cltd
jmp
inc
out
add
enter
add
movsb
add
pop
outsb
add
xor
test
outsb
add
outsl
jb
cmpsb
jae
ja
add
add
add
inc
add
inc
add
or
xor
cli
mov
jl
cmpb
aad
or
and
sub
xor
pop
sbb
in
xchg
ficoml
aad
add
pop
add
add
add
loop
repnz
loopne
xchg
adc
push
add
push
pushf
cmp
loope
add
aas
hlt
lea
inc
add
add
add
mov
pop
leave
movsl
ja
xlat
loopne
or
leave
mov
in
je
lret
pop
add
inc
add
xchg
je
inc
add
add
les
stos
sbb
push
pop
mov
and
daa
add
or
cmpsb
test
repz
xchg
cmpsb
push
ret
xchg
lret
scas
and
pop
pop
and
mov
pop
add
shll
sbb
rol
adc
negl
aaa
iret
pop
add
add
in
dec
add
push
add
adc
out
in
cmp
push
add
hlt
dec
add
fisttpll
sub
push
push
adc
fildll
ss
cmpsl
std
mov
add
shrl
xchg
movsb
jbe
jp
pop
add
sahf
pop
fsubl
push
add
push
add
mov
add
dec
std
xor
mov
inc
xor
add
daa
xor
xchg
and
in
fcomip
hlt
mov
sbb
aam
mov
push
add
push
add
jno
add
add
test
out
es
push
add
add
icebp
push
jle
dec
dec
add
xchg
inc
sub
add
ret
mov
mov
add
add
dec
mov
dec
out
fdivl
mov
inc
sbb
data16
add
inc
add
loopne
jne
add
xlat
xor
mov
mov
xor
add
xchg
xchg
icebp
mov
pop
xchg
rcr
or
insb
add
les
xor
xor
icebp
mov
daa
mov
insb
add
das
cmc
adc
or
jne
mov
mov
lds
adc
cmc
pop
add
fisttpl
xor
and
stc
mov
sti
divb
lods
push
add
loop
sbb
pop
ljmp
add
dec
scas
xor
mov
inc
push
notl
mov
xor
mov
add
outsl
adc
dec
or
mov
jno
add
popa
add
rcrb
add
sbb
mull
add
pushf
mov
add
add
gs
fdivr
repnz
add
lods
scas
xlat
push
add
sbb
aas
jmp
push
inc
add
inc
add
push
pop
pop
add
add
cli
push
xlat
add
fstps
and
jl
jle
test
add
add
xchg
jle
daa
sub
mov
inc
fdivl
add
add
add
lods
jns
lret
inc
jne
mov
insb
add
add
xor
adc
add
in
xor
mov
add
outsl
push
add
add
add
xchg
lods
dec
clc
push
add
inc
test
movsl
mov
add
add
out
leave
rclb
mov
sbb
sbb
push
pop
push
add
addb
push
xchg
mov
add
lret
add
xor
or
fsubs
add
add
sbb
sub
roll
out
add
jp
mov
mov
enter
loopne
daa
add
cwtl
push
stc
mov
add
add
ret
push
mov
add
movsb
jmp
imul
add
sahf
outsl
jnp
inc
add
add
sbb
jae
add
xorb
xor
scas
or
pop
arpl
and
in
hlt
dec
rcll
add
movsl
sbb
out
add
add
cmp
ret
pop
mov
add
das
movsb
fldcw
les
add
xor
fcomps
add
scas
inc
notl
add
jo
js
mov
add
cmpsb
cmpsb
adc
stos
and
repz
pop
add
add
call
add
or
xor
push
mov
add
ret
cmpsb
mov
jp
testb
xorl
inc
push
add
add
movsl
pop
out
xchg
add
xchg
pop
movsb
ficoms
add
mov
mov
cmpsl
mov
aam
add
add
inc
add
arpl
dec
add
ret
ja
push
pop
add
jb
mov
sahf
push
add
fidivl
jle
add
test
mulb
movsb
mov
pop
push
jl
add
or
bound
and
xor
push
and
add
adc
stos
icebp
dec
add
cmp
ret
add
inc
sbb
mov
push
add
xchg
push
or
cwtl
and
xor
pop
xchg
push
add
data16
insl
add
fimull
add
mov
adc
imul
dec
add
dec
add
add
in
fstpl
sub
push
add
xor
call
push
add
sbb
sbb
notl
mov
push
add
xchg
add
add
repz
fcmovnbe
sahf
lret
loop
add
push
add
inc
pop
icebp
and
adc
add
add
cmp
mov
mov
pop
add
enter
jmp
mov
push
add
xchg
subb
add
pop
imulb
xlat
lods
xlat
mov
xchg
dec
orb
cmpl
data16
insb
add
cwtl
and
shrl
add
mov
fimull
int
lret
push
add
lcall
pop
iret
cmpsb
test
inc
add
mov
or
mov
lret
xchg
mov
add
rcrl
add
add
lret
lret
aam
lods
mov
movsl
adc
clc
je
int3
adc
aam
add
lds
xchg
mov
add
and
add
jo
cld
lcall
je
xor
out
sbb
add
and
in
in
adc
dec
in
add
add
pop
add
mov
std
ljmp
mov
ret
cmpsl
jecxz
sub
pop
push
add
sub
add
push
dec
add
int
fs
or
sti
pop
lcall
adc
ret
xchg
mov
inc
add
add
stc
fucom
mov
sub
xchg
pop
dec
push
add
lods
pusha
add
xor
dec
daa
jl
rcl
out
add
xchg
mov
add
test
xlat
das
mov
fwait
iret
lods
aas
sbbb
add
jge
add
scas
inc
add
mov
std
jecxz
add
incl
jp
data16
add
add
cmp
jg
add
add
add
xchg
test
in
shlb
and
into
lock
fwait
mov
test
sti
xlat
xchg
push
add
jecxz
add
ja
or
outsl
repz
iret
mov
sub
fistpll
test
scas
movsb
popf
sbb
out
add
push
lods
pop
mov
mov
inc
outsl
cmpsb
in
push
add
movb
mov
je
jb
cltd
dec
xchg
or
das
aaa
push
add
pop
add
decl
test
push
add
sti
add
mov
repz
add
add
add
sahf
add
outsl
xchg
lcall
xor
lock
les
shrl
add
jo
cmp
sbb
mov
add
imul
int3
fstpt
push
add
add
add
mov
add
mov
lods
push
add
mul
sbb
imul
and
push
xor
sub
hlt
stos
push
inc
push
add
add
and
notb
push
add
mov
add
inc
add
clc
jp
adc
imul
mov
test
add
cli
cmp
ljmp
adc
add
mov
shl
xchg
int
push
add
sbb
add
insb
add
add
push
sbb
mov
mov
mov
pinsrw
add
add
enter
mov
fidivl
mov
lahf
jmp
sub
xor
js
aas
mov
pop
inc
jno
lret
adc
add
data16
fwait
js
or
das
hlt
fmuls
add
push
add
add
add
imul
jge
fbld
daa
lods
or
shlb
mov
movsb
sub
bound
dec
add
or
enter
and
inc
add
pop
mov
push
add
iret
mull
repz
add
std
adc
dec
add
mov
add
cmpsb
xlat
and
cmp
lds
call
hlt
push
add
je
hlt
ljmp
add
repz
add
inc
lds
add
imul
add
add
mov
mov
mov
and
jns
add
add
cmp
add
imull
outsl
fisttpll
pop
and
out
into
dec
test
jecxz
lahf
jb
jl
test
daa
and
adc
add
jle
push
add
popf
out
add
pop
dec
lea
lea
add
push
add
add
pop
add
push
aas
lret
pushf
and
xchg
mov
push
add
mov
loop
and
aam
add
adc
aam
cmp
push
add
add
xor
or
les
pop
add
cmp
inc
cmc
insb
add
stos
pop
dec
add
and
es
sub
outsl
out
adc
inc
mov
jnp
pop
add
shlb
add
add
add
add
fadds
mov
out
push
mov
add
push
ret
push
add
sbb
lcall
cli
hlt
xor
push
add
adc
rorl
add
add
or
dec
dec
or
aam
std
sub
movsl
pop
add
xorl
or
and
incb
pop
add
test
add
add
push
add
jae
stos
mov
push
add
mov
add
out
int3
and
xchg
rolb
adc
mov
repz
add
addr16
jae
je
add
jmp
mov
addb
pop
adc
adc
cmp
lods
test
mov
or
insl
mov
add
jb
sbb
inc
testl
lods
add
push
arpl
test
ret
sahf
cmp
xchg
cld
pop
add
add
out
push
add
loopne
add
add
mov
ljmp
rcl
pop
inc
add
ljmp
mov
ja
dec
fnstsw
bound
or
lods
pop
stos
xor
sbbb
mov
jp
into
jecxz
push
add
cmp
cmpsl
gs
xor
lods
mov
and
and
mov
sub
pop
mov
add
repnz
and
sahf
mov
add
add
cltd
int
enter
sar
inc
jle
rolb
add
add
sub
xchg
add
int3
mov
sbb
push
add
fstps
adcb
mov
shlb
add
dec
pop
ss
and
or
push
clc
lret
clc
cmc
xor
icebp
popf
pusha
add
cld
add
cmc
rclb
inc
add
xchg
inc
call
add
fildl
ftst
stos
lret
mov
xchg
aas
xchg
cmc
pop
add
push
or
mov
add
data16
add
mov
add
jno
inc
add
out
pop
add
cmp
add
imul
adc
mov
xchg
lock
bnd
scas
repz
add
int
out
xchg
mov
add
sbb
pop
inc
add
out
loope
fildl
jno
movb
xchg
xchg
mov
add
stos
adc
test
loope
stos
lret
adc
ljmp
stos
cld
das
inc
add
loopne
add
cli
daa
push
add
add
test
or
jnp
dec
add
fxch
enter
add
jl
mov
scas
jp
addr16
xchg
pushl
or
cmpsb
mov
add
add
inc
sbb
sbb
test
prefetch
jl
orb
add
imul
pop
fwait
jnp
add
add
fisubs
mov
cmp
add
dec
fdivr
xchg
jmp
jmp
lea
cmpsl
jno
test
or
mov
cmc
pcmpgtw
add
std
adc
jecxz
cmp
xchg
test
jne
leave
into
fwait
jnp
aaa
dec
mov
add
pop
imul
or
push
add
aam
aam
add
mov
mov
push
add
pop
cmp
outsb
add
sub
sub
add
nop
add
shl
jle
clc
xchg
testl
add
stos
aad
adc
xor
add
fildl
rcrb
add
test
sahf
fdivl
add
loop
xor
push
add
add
sub
stos
lods
cmp
insl
mov
add
mov
sub
shlb
pop
iret
push
test
add
fldenv
add
into
xor
mov
movsb
xchg
out
push
add
add
add
add
cwtl
or
mov
fcoms
jp
adc
jae
popa
jg
add
fptan
leave
push
jns
add
lcall
sub
adc
insb
add
sbb
mov
jmp
add
xor
xor
add
nop
aas
rolb
add
xor
dec
add
int
mov
nop
insb
add
dec
add
rorb
xchg
std
dec
test
std
dec
add
push
add
push
insl
out
lock
pop
pop
xor
push
add
ljmp
add
pop
cmp
rcl
mov
mov
mov
pop
scas
jae
add
add
test
hlt
or
movsl
sti
fdivrs
cmp
adc
xor
pop
adc
pop
add
push
add
xchg
enter
ret
xor
add
and
js
and
mov
and
test
add
add
push
add
push
ret
out
arpl
cmp
sahf
xor
add
ja
or
add
mov
mov
add
stc
aaa
call
sub
shlb
add
add
mov
testb
hlt
stc
fisubl
push
add
insl
cwtl
xchg
sub
add
sbb
mov
dec
scas
xor
popa
dec
add
adc
adc
out
jecxz
repnz
mov
cmpl
pop
add
lcall
enter
add
fiaddl
lret
sub
add
out
outsl
cmpsl
xor
push
add
rcrb
cli
out
pop
adcl
arpl
ja
mov
and
loop
rcrb
mov
add
pop
pop
sbb
xlat
mov
jecxz
cmp
push
add
add
shrb
add
fisttpl
ja
add
out
or
scas
ficoml
pop
xchg
add
shrb
add
fisttpll
add
pop
add
dec
add
add
add
add
ja
jp
test
lea
popa
or
xchg
jne
fisttpl
dec
mov
add
adc
dec
add
stos
test
add
or
sbb
movsb
fldt
pop
call
jge
dec
add
shrl
mov
mov
and
sti
inc
call
cwtl
roll
xor
inc
add
mov
repnz
mov
dec
jno
pop
sub
adc
xlat
pop
add
out
push
add
sbb
das
jp
out
add
add
xor
add
jno
add
pushf
add
add
add
idivb
fwait
rcr
sbb
and
jg
add
add
clc
push
add
in
mov
clc
fdivrl
pop
sub
out
pop
or
pop
add
cwtl
mov
dec
mov
add
cld
scas
and
out
push
xchg
rdtsc
ret
pop
add
popf
mov
add
xchg
push
add
iret
xchg
push
mov
cmp
dec
add
inc
jae
add
je
inc
add
pushf
imul
test
add
or
lock
add
add
mov
push
add
xor
outsl
andb
add
iret
push
in
sar
mov
test
inc
xlat
mov
add
insl
bound
clc
aam
mov
add
mov
je
nop
mov
or
jne
push
insb
add
hlt
daa
lods
cmp
push
lcall
lds
xor
mov
arpl
add
push
add
fmull
mov
push
add
pop
or
add
test
stc
les
add
mov
loopne
lods
iret
jb
cmp
std
mov
mov
pop
jae
add
add
ret
mov
and
dec
cltd
inc
jae
mov
mov
sub
cltd
pop
add
inc
out
mov
das
imul
cld
sti
int
xor
mov
lds
out
loop
push
dec
add
inc
cwtl
adc
std
int
mov
jg
or
scas
adc
hlt
aas
and
rcll
cli
and
inc
add
shlb
mov
mov
add
test
pop
add
add
lock
mov
add
aas
jno
and
aas
mov
ljmp
xchg
fbld
fsubl
mov
add
add
cld
mov
and
aas
xchg
add
incb
pop
add
pop
out
popl
add
stos
fneni(8087
sbb
mov
pop
data16
jno
add
data16
cmpsb
in
add
test
add
sub
or
cmpsb
cltd
lods
sbb
add
mov
add
jnp
inc
adc
aad
push
aaa
dec
add
call
add
fnsave
lahf
clc
push
add
mov
and
add
xor
leave
jno
sbb
insl
add
add
or
add
imul
add
add
cld
sbbb
inc
mov
sub
aaa
mov
xor
add
mov
pop
xchg
hlt
mov
add
rorb
pop
nop
ret
xchg
push
add
inc
lahf
pop
add
add
add
mov
sub
sarl
xchg
add
stos
push
add
fsubp
push
add
sbb
add
sub
xorb
add
mov
inc
jge
mov
add
add
cwtl
adc
adc
cmc
outsb
add
add
lahf
dec
push
add
pop
mov
arpl
xor
mov
subl
test
adc
lock
popf
mov
and
and
repnz
xor
movsl
out
jle
add
in
lcall
js
push
push
add
fcmovbe
xchg
addb
add
notl
sbb
add
jecxz
add
jmp
jb
xchg
jae
fisttpll
add
lods
xor
mov
fldcw
shlb
pushf
fdivl
popf
addr16
sbb
add
hlt
rcll
icebp
scas
mov
xor
outsb
add
aaa
jmp
pop
bound
shrb
add
loopne
add
add
and
jmp
fisttps
loop
add
inc
push
stc
aam
nop
cmc
pop
ror
loop
adc
stos
xlat
dec
icebp
pop
scas
and
pop
repnz
hlt
xchg
mov
ret
enter
shlb
add
ja
pop
xor
mov
add
add
mov
mov
mov
add
leave
movsl
data16
add
cmc
cmp
mov
add
inc
add
cwtl
mov
adc
movsb
mov
add
test
add
imul
adc
jecxz
adc
xchg
aaa
inc
add
aaa
movsb
and
repz
add
push
add
sub
in
movsb
fmuls
add
shll
ljmp
adc
jp
jnp
inc
add
pop
lods
push
add
add
ljmp
mov
sub
and
lret
mov
lods
jmp
add
int3
mov
mov
lcall
xor
mov
push
and
add
inc
add
add
or
add
cmc
imul
popf
push
lret
sub
sub
jnp
lds
add
or
xchg
add
add
sbb
mov
dec
mov
inc
ja
add
inc
add
out
inc
mov
ret
mov
sub
jg
add
push
add
sub
lret
add
push
add
inc
add
add
add
and
push
int
xor
pushf
pop
outsl
adc
jl
push
add
rcll
push
roll
rcl
jnp
add
add
sub
imulb
add
outsl
cli
xchg
push
add
add
xchg
sub
arpl
xor
add
push
das
add
cmp
add
sbb
pop
cwtl
jg
sbb
add
add
mov
add
xchg
inc
hlt
or
rclb
inc
add
inc
add
in
test
test
fprem
test
pop
push
add
mov
fimull
add
add
pop
xchg
push
xchg
sbb
setns
add
add
lahf
xchg
popf
mov
add
pop
add
mov
cld
mov
add
fdivp
fcom
dec
add
inc
add
add
sbb
data16
aas
mov
out
cmpb
cmp
nop
pusha
add
out
cmp
add
add
test
dec
pop
add
fcmove
daa
je
dec
add
gs
push
add
and
pop
repz
jb
pop
xchg
out
jo
fucomip
or
add
add
cmp
add
add
dec
add
adc
les
add
out
lea
jmp
add
mov
in
scas
jp
sbb
shr
popf
insb
add
stos
inc
mov
pop
add
mov
pop
in
outsb
add
sar
add
add
mov
mov
sub
cltd
adc
hlt
inc
int3
mov
out
cmpsb
popf
or
mov
dec
add
add
add
add
int3
mov
add
sbb
xchg
push
add
xchg
jns
into
mov
pop
xlat
jl
mov
in
sahf
jns
fst
sub
roll
add
add
loope
add
add
push
add
imul
std
lahf
lods
and
sar
xor
pusha
add
lods
mov
dec
mov
aas
cltd
jbe
imul
add
mov
rclb
xlat
repnz
orb
cmpsb
lods
fdiv
add
out
add
push
fldl
add
movsb
shl
or
js
xchg
popa
push
add
sub
add
push
xor
fcomps
xchg
fldenv
inc
add
add
orl
add
xor
shr
add
mov
add
leave
pop
test
add
pop
adc
xchg
repz
lcall
push
dec
lock
mov
and
mov
or
or
add
fimull
pop
add
out
dec
stos
mov
mov
call
add
scas
test
loop
add
ffreep
xchg
mov
add
add
jnp
or
mov
int3
xchg
add
add
jne
add
xchg
daa
cmp
cltd
or
fs
or
fisttps
push
sub
adcl
mov
cmp
pop
add
lock
bound
sbb
fucomi
dec
add
nop
ja
add
jb
jbe
adc
or
mov
loope
call
add
sarb
xlat
insb
add
out
push
add
add
cmp
push
and
dec
add
out
or
cmp
xchg
out
add
bound
mov
arpl
scas
lea
outsb
add
mov
les
addr16
add
xchg
fsubl
add
add
add
add
push
mov
and
sahf
sub
mov
pop
add
js
popf
mov
add
popa
or
jns
fmulp
aaa
movsb
xchg
mov
das
xor
dec
push
jne
add
lock
jb
lahf
add
xchg
sub
jae
adc
inc
add
xchg
inc
adc
and
sbb
sub
pushf
int
jo
sbb
push
daa
and
push
add
pop
mov
push
add
add
add
push
add
xor
sub
cli
cmp
push
add
std
dec
add
lcall
rcll
inc
add
add
popa
cmp
aad
adc
add
lock
imul
shl
adc
sub
dec
add
cmp
mov
repz
popa
adc
cmp
lea
add
and
out
dec
add
add
xchg
push
push
push
add
mov
add
sbb
add
and
adc
sbb
imulb
dec
and
inc
stos
mov
mov
dec
add
mov
add
add
addr16
or
fsubs
add
add
leave
or
mov
adc
mov
test
adc
adc
mov
aad
jb
jcxz
jp
jecxz
sti
pusha
add
add
adc
xorl
adc
cltd
push
add
mov
sti
mov
inc
test
out
dec
add
scas
fidivrl
add
enter
cld
les
add
nop
int
fiadds
std
lret
mov
add
divb
icebp
ss
push
pop
mov
das
inc
or
xchg
mov
add
cmpsb
mov
add
fwait
sbb
jb
pop
add
jecxz
mov
lods
inc
add
mov
add
sbb
adc
cld
cwtl
jg
add
sbb
sbb
sarb
test
lahf
mov
mov
sub
inc
add
mov
mov
dec
add
aaa
mov
jecxz
std
mov
mov
push
add
add
add
add
movzbl
dec
add
add
fistl
add
mov
push
add
jmp
cld
insl
scas
sbb
and
mov
pop
add
hlt
stos
popa
or
inc
pop
mov
adc
add
cmp
sbb
add
add
add
add
add
cmp
mov
daa
add
xchg
push
adc
insl
lods
popl
adc
out
insb
add
cmpsb
call
leave
into
outsl
repz
add
cli
jns
mov
mov
nop
aam
xor
add
add
sarb
add
outsb
add
add
jmp
loopne
nop
push
imul
orb
daa
repz
add
xchg
add
push
lds
jmp
mov
cmovno
jo
aam
cmpsb
and
jp
inc
add
in
add
or
xchg
push
in
flds
xor
cmp
cmp
add
add
adc
cs
sbb
pop
add
lret
lret
mov
push
fstl
inc
outsb
add
insl
add
push
mov
lods
out
imul
roll
test
add
and
int
icebp
decb
sub
add
mov
mov
push
rolb
sub
add
xchg
loope
cmpl
lret
pop
or
add
aad
cmpsb
xchg
rcr
pop
add
mov
cmc
sbb
add
xchg
aad
jno
jmp
jl
pop
add
sub
adc
or
data16
fcoms
add
add
loopne
push
add
icebp
pop
call
push
add
add
mov
add
mov
add
xchg
adc
mov
mov
mov
push
cmpsb
andl
testb
testb
add
xchg
add
add
push
add
shrl
add
decb
add
add
test
add
add
orl
adc
mov
test
dec
xchg
daa
stos
xchg
dec
mov
mov
jmp
ds
in
jne
cmpsl
jns
add
mov
add
mov
dec
add
cld
call
fdivp
test
add
stc
sbb
xlat
cld
lods
add
inc
push
add
psrlw
outsl
movsb
cmc
and
movsl
xor
push
jo
shrl
add
add
or
add
lret
add
or
xchg
and
or
add
dec
addr16
testl
add
fs
rorl
add
int3
jo
sbbb
test
add
insl
sbb
inc
insl
inc
out
add
push
add
pop
lea
add
lods
push
add
cmp
push
mov
dec
ljmp
dec
shll
add
push
adc
pop
in
aam
cmp
dec
add
data16
add
pop
imul
cmp
add
stos
ret
lods
xchg
repnz
pop
rolb
xchg
adc
pop
cltd
xchg
jb
lcall
jle
bound
sahf
and
iret
stos
movsb
test
inc
clc
outsb
add
int
je
xchg
inc
add
sub
jae
jl
jp
pushf
jp
jnp
or
xor
ja
mov
or
ret
cld
cwtl
lock
orb
movl
jge
mov
lret
cmc
mov
mov
add
add
or
call
mov
fidivrl
add
add
arpl
xor
subb
popf
outsl
or
repz
mov
add
add
dec
add
push
js
add
data16
jmp
arpl
add
gs
lret
sti
jne
add
add
push
add
repnz
jecxz
add
out
sub
add
addr16
stc
fcomps
add
mov
push
mov
jle
add
arpl
pushf
pop
add
or
sbb
add
add
mov
xchg
test
push
add
mov
mov
shlb
andl
add
mov
sub
add
push
add
adc
add
add
adc
inc
add
push
adc
add
jmp
add
mov
ror
into
jnp
sub
lods
ret
cmp
add
jbe
or
adc
add
out
into
bnd
test
xor
add
add
pop
in
icebp
dec
add
cld
adc
jae
dec
add
shll
pop
add
divb
add
add
enter
outsl
mov
sub
xchg
cmp
add
pop
add
xor
jg
jnp
jle
inc
dec
add
jp
idivb
push
lahf
cmp
xor
jp
push
add
fisttpll
adc
mov
add
sub
jge
sub
lcall
test
jno
add
lods
cmp
push
add
rorb
inc
cltd
out
jg
das
rcrl
add
clc
pop
add
add
add
add
jmp
and
mulb
add
rcl
in
popf
pop
and
push
loopne
inc
dec
add
add
pop
pop
add
icebp
pushf
pushf
push
add
in
or
pop
xchg
shll
add
cld
add
mov
sub
or
cmp
push
add
add
push
add
and
gs
push
imul
add
repnz
push
add
add
idivl
cmp
add
aam
add
add
add
fldt
out
push
add
aaa
push
push
add
dec
add
inc
add
testb
mov
divl
pop
add
inc
xchg
in
sub
push
in
movl
sub
add
push
add
add
pop
pop
dec
add
test
pop
stos
sahf
movsb
rcr
cmp
cmp
add
adcb
test
test
inc
add
faddl
cmp
out
push
xchg
xchg
movsl
push
pop
add
add
jmp
add
mov
daa
inc
push
add
les
dec
in
shr
sti
push
add
add
and
add
xor
mov
and
mov
add
dec
lds
push
add
add
add
add
push
add
xchg
sub
and
fsubrs
ud1
ret
xchg
mov
and
sahf
xor
add
add
les
js
or
add
dec
xor
js
lock
pop
push
add
xor
and
mov
add
add
in
add
scas
scas
enter
jle
imul
add
stc
and
xchg
push
mov
and
adc
stc
in
in
add
pop
jns
mov
lcall
xchg
inc
inc
cmp
and
add
fstps
gs
stos
les
add
in
nop
mov
add
jb
in
inc
add
mov
pushl
aam
and
pop
stc
adc
pop
test
fnsave
add
xchg
jg
pop
add
dec
add
add
push
add
pop
add
add
scas
cmp
test
add
cli
aas
clc
dec
add
mov
add
add
lea
jno
add
out
pop
add
or
leave
mov
shld
add
pop
insb
add
add
cmp
aam
mov
inc
aaa
sbb
fldenv
push
lock
rorb
jg
add
clc
mov
push
add
add
fsubrp
sub
add
and
mov
add
mov
popf
push
dec
loop
in
mov
outsl
sarl
add
lret
fmul
inc
add
or
sti
cmp
test
sub
inc
lret
in
add
jl
push
add
out
xchg
inc
add
je
sbb
adc
or
cwtl
and
fsub
cmp
les
test
test
xchg
dec
add
stos
in
test
sbb
mov
and
add
out
mov
cmpsb
jb
sbb
in
add
std
adc
cmc
ret
cmc
xor
ds
std
pushf
outsb
add
add
out
xchg
mov
mov
gs
or
add
ljmp
push
add
out
add
add
pop
push
add
add
mov
mov
add
jno
and
mov
add
pop
lock
loopne
add
add
add
xor
dec
arpl
jnp
xor
fisttps
testb
mov
lea
add
add
mov
xor
push
add
fwait
enter
add
add
add
mov
add
enter
add
mov
lods
mov
out
loopne
pop
push
dec
add
into
or
add
add
ds
movsb
add
test
add
dec
add
adc
add
rolb
das
mov
rorb
pop
add
inc
pop
leave
pop
jno
jle
out
xlat
xor
movsl
test
cmc
clc
in
jbe
imul
bound
stos
pop
lcall
add
rcr
push
add
mov
add
push
mov
add
mov
add
add
popa
divb
dec
add
xor
add
out
dec
dec
adc
pop
add
jle
adc
int
or
xor
add
pop
add
add
fcmovb
dec
movl
mov
add
inc
add
stos
lret
out
lds
add
enter
adcl
hlt
loopne
fcmovnu
xchg
data16
add
icebp
push
add
mov
xchg
test
or
push
add
or
add
cmp
int3
data16
jmp
add
fistpl
adc
js
add
in
or
mov
pop
add
cmp
loope
or
mov
aam
loopne
mov
ret
pop
cmp
dec
add
pusha
add
mov
je
mov
daa
xlat
xor
jno
dec
push
add
testl
sub
push
add
add
adcl
add
jb
dec
add
mov
shrb
out
or
dec
fists
sbb
add
mov
loop
xchg
andb
pop
add
add
add
mov
jmp
add
daa
sub
std
aas
and
add
push
add
jbe
movsl
fwait
popf
outsl
cmpsl
std
dec
daa
inc
add
jl
in
add
test
mov
jns
mov
negb
dec
add
add
rorb
enter
add
push
add
flds
enter
jg
pusha
add
shrb
pop
jo
ret
push
add
mov
idivl
add
mov
add
push
sub
pop
shrb
mov
add
dec
add
sti
divl
pop
xlat
pop
add
jae
test
push
add
or
aas
push
add
cmpsb
and
inc
add
add
imul
lea
jmp
aad
daa
jnp
push
add
or
cmp
scas
sbb
add
pusha
add
ja
mov
add
add
mov
jge
repz
add
adc
cmpsb
adc
out
mov
add
jecxz
inc
iret
dec
add
add
add
add
add
pop
daa
mov
or
pop
cwtl
inc
sub
mov
int
jne
add
add
add
inc
jmp
cmpsb
pop
push
sub
cmp
push
add
into
xor
fisttpll
addb
insb
add
jb
jecxz
gs
adc
add
mov
add
das
imul
add
test
nop
inc
lcall
lahf
faddl
addl
add
pop
mov
mov
lods
rorb
repnz
fisubrl
adc
jmp
jo
aad
repz
add
sar
cld
in
call
jo
mov
jnp
add
mov
repz
add
xchg
ret
decl
and
sbb
mov
inc
fstps
pop
and
inc
add
wrmsr
add
mov
add
mov
add
out
push
add
add
scas
push
add
imul
sbbl
add
or
ret
xor
or
mov
adc
sbb
mov
add
aaa
mov
dec
dec
inc
add
cmp
jmp
les
add
add
mov
push
add
add
add
xor
scas
jmp
repnz
lcall
add
or
push
add
xchg
adc
lret
clc
cmpsb
call
or
mov
add
inc
jge
or
push
add
add
inc
sbb
add
pop
aam
sbb
in
shlb
mov
dec
idivl
data16
add
push
inc
lret
adc
jnp
add
add
mov
lea
mov
push
add
js
and
aaa
push
add
mov
push
add
pop
add
dec
add
add
push
add
pop
outsl
call
add
mov
xchg
add
add
add
cld
sbb
popa
stc
and
xchg
shrb
mov
inc
fimuls
add
in
add
fdiv
adc
xchg
add
add
inc
test
push
add
jmp
out
pop
frstor
cmp
adc
and
dec
add
lret
add
and
pop
sbb
lahf
push
cmp
push
add
pop
add
icebp
push
xchg
cmc
dec
add
add
int3
dec
and
shlb
hlt
sahf
repnz
pop
mov
add
add
fwait
mov
cmp
mov
sbb
lret
pop
add
xor
xchg
bound
arpl
add
and
inc
mov
add
add
scas
sub
lds
xchg
cwtl
repz
incl
shlb
fistps
sbb
xor
mov
add
adc
and
fistl
add
ret
cltd
call
add
add
fsts
or
sub
add
fidivs
mov
add
add
add
sub
xchg
jo
mov
add
mov
add
mov
addb
push
add
outsb
add
adc
add
bound
fimuls
add
mov
clc
jg
add
cmp
nop
inc
and
rcll
mulb
add
loop
push
mov
ja
sub
call
or
or
fsubl
and
push
add
and
and
push
dec
fsub
data16
push
add
in
push
add
daa
out
stos
dec
add
popf
cwtl
mov
sub
pmuludq
in
push
int3
cmc
fldcw
jecxz
bound
gs
stos
out
add
clc
pop
orl
ret
xor
xor
outsb
add
xchg
jns
sbb
aaa
dec
dec
add
add
cmp
mov
test
xchg
or
add
fwait
ljmp
rcrl
mov
xchg
add
jbe
nop
and
adc
pop
daa
xchg
fcmovnu
jns
add
in
loope
sbb
aas
js
inc
add
fstpt
stc
cltd
mull
inc
enter
lods
and
mov
insb
add
add
test
add
test
pop
add
jns
add
pop
in
add
jno
out
test
add
mov
mov
jnp
outsl
repz
daa
dec
cmp
lds
lret
or
mov
arpl
out
jl
or
dec
add
jecxz
lock
lock
mov
push
jno
add
dec
add
dec
mov
in
in
jecxz
imul
clc
out
push
add
xor
add
add
int
add
fisubrs
lock
cmp
push
add
add
rdmsr
add
daa
in
jbe
jae
cmp
and
mov
add
das
loope
add
mov
adc
jae
sub
lret
mov
lods
xlat
in
inc
jnp
dec
add
outsl
xor
mov
and
push
add
inc
add
test
xchg
jmp
sbb
cld
xchg
icebp
data16
or
add
mov
loope
xchg
aad
cmp
and
mov
mov
inc
push
add
sahf
jbe
in
push
add
shll
inc
add
sti
pop
add
add
add
dec
add
mov
repz
add
add
stc
jge
push
and
jb
lahf
jg
daa
pop
or
cmpsb
dec
add
add
xchg
xlat
aam
movsb
push
add
fsubl
add
mov
add
jo
cmp
add
add
add
add
jbe
push
add
mov
test
mov
xchg
shlb
scas
sub
inc
add
xor
dec
cwtl
and
xchg
ss
sahf
std
push
pop
add
xchg
sub
add
enter
add
je
jbe
fdivp
add
pusha
add
pop
add
mov
push
add
and
int
adc
add
add
fnstcw
add
add
sub
js
adc
add
jmp
ja
add
push
add
add
add
mov
xor
cwtl
xor
sbb
add
add
add
or
cmp
inc
push
addr16
add
icebp
jne
out
dec
movb
add
add
data16
push
add
add
mov
add
add
add
daa
cli
outsb
add
mov
pop
push
add
add
pop
inc
or
inc
add
and
push
push
add
xor
insl
loope
push
add
lret
lea
add
les
add
inc
add
add
insl
pop
adc
aam
xchg
lock
enter
add
mov
add
outsb
add
mov
add
push
xchg
push
add
leave
js
inc
xchg
mov
add
dec
push
add
cmp
add
mull
add
inc
add
add
popf
push
add
inc
add
xchg
test
clc
pop
xchg
dec
sarl
add
inc
add
push
add
ret
and
adc
mov
push
add
mov
adc
jmp
stos
pop
movsl
push
add
add
inc
xor
loope
shl
lcall
xor
bound
xlat
jno
cmp
push
fwait
add
add
imul
pop
add
sbb
push
add
pop
xor
pop
sarb
push
add
aaa
push
add
add
jge
add
lcall
add
push
add
aad
popa
je
shlb
and
push
add
ret
clc
pop
mov
and
stc
or
add
outsl
lea
add
mov
dec
lahf
adc
out
pop
cmp
pop
add
mov
insb
add
fcoml
and
mov
mov
testb
clc
sbb
mov
mov
add
add
cmp
mov
add
xor
mov
pop
std
xorb
int3
mov
add
dec
add
add
sbb
sbb
add
add
add
ror
add
add
add
add
inc
sahf
cmpb
mov
lret
leave
mov
sbb
and
mov
add
mov
mov
add
aas
icebp
inc
add
insl
jnp
add
add
add
cmpsb
fistpl
stos
in
clc
aam
fisttps
add
add
out
adc
add
add
das
push
add
add
sub
cmp
jb
or
popf
daa
out
cmp
dec
add
xor
add
icebp
paddsb
add
in
add
add
daa
add
add
and
sarb
loopne
or
add
nop
mov
add
jae
push
adc
jmp
and
dec
jo
xor
mov
fcmovbe
cmp
dec
nop
stc
jno
add
xchg
add
int
imul
pop
add
add
mov
frstor
add
push
inc
add
sub
push
and
repz
popf
and
xchg
rorb
mov
dec
add
inc
add
jne
pop
jmp
and
xor
pop
adc
jno
mov
jecxz
jecxz
adc
fldenv
pusha
add
add
insb
add
or
sahf
inc
add
loope
imul
call
add
adc
test
mov
popa
mov
mov
sbb
pop
add
add
add
push
add
mov
insl
insl
mov
add
out
xchg
mov
mov
clc
ret
cmp
cmpsl
and
add
sti
stc
xchg
pusha
add
add
test
add
add
add
dec
add
add
push
mov
cmp
adc
dec
add
add
aaa
insb
add
in
jb
push
sbb
sub
and
out
fisttps
add
rolb
test
fistl
add
enter
mov
aad
popf
inc
add
and
add
add
daa
outsb
add
mov
jbe
outsb
add
mov
add
push
add
dec
or
lds
mov
inc
dec
orb
add
add
sti
sbb
mov
jnp
add
gs
mov
sub
pusha
add
dec
add
cmpb
std
or
insb
add
add
push
add
add
push
jae
pop
add
xor
jge
cwtl
or
pushf
fucomp
in
mov
int
cltd
sub
add
repnz
add
idiv
insb
add
pop
jmp
jne
rcr
push
add
add
push
add
sbb
add
jg
add
sub
xor
fwait
mov
add
mov
jle
out
pushf
sub
mov
dec
inc
add
push
mov
push
sub
and
mov
xlat
testb
adc
add
and
je
add
shlb
fwait
lea
out
lds
mov
ja
or
cmp
gs
int
mov
push
add
lret
push
add
mov
add
xor
lea
ret
pop
add
jecxz
mov
push
add
inc
add
lock
push
add
jl
mov
in
push
add
aad
add
and
mov
add
call
or
pop
add
gs
js
sbb
dec
add
fmul
add
icebp
push
jae
call
add
lret
out
push
or
lret
stc
mov
add
aad
and
mov
sarl
cmpl
mov
mov
add
lret
movsl
mov
add
mov
or
test
push
andl
in
mov
add
add
rol
mov
add
add
ret
and
sub
push
add
add
push
add
push
add
nop
push
add
jno
lahf
iret
shrb
cld
lods
push
xorb
add
pop
in
sbb
add
add
iret
pop
add
icebp
or
mov
add
add
and
mov
out
add
jg
or
add
loope
xchg
jns
gs
inc
add
out
add
jg
sbb
nop
repnz
add
cmp
dec
add
cltd
aam
add
jmp
add
add
bound
fdivrs
add
fwait
adcb
fwait
add
mov
dec
jne
pop
add
cmp
add
mov
fildll
add
sbb
mov
or
test
inc
sahf
fisubs
cltd
jns
xchg
int
dec
addr16
js
mov
pop
inc
inc
out
jns
lds
or
pop
or
fisttps
push
add
add
ja
push
movsl
jle
jo
adc
jno
sub
iret
stos
fucomp
in
mov
inc
popf
mov
lcall
jmp
cltd
sbb
addl
push
add
notl
popa
jbe
mov
lcall
adc
sub
aad
add
or
add
xor
push
add
add
mov
add
leave
std
jo
mov
insl
insl
fdivs
add
mov
mov
fistpl
inc
repz
std
push
add
sbb
xchg
cmp
adcb
pop
loopne
and
mov
add
add
add
push
add
push
add
add
pop
add
cmp
or
mov
add
add
call
jbe
mov
std
aas
jge
ret
loope
add
cltd
leave
out
add
xchg
mov
outsl
push
add
fbstp
xor
lret
mov
add
or
add
inc
add
test
dec
in
repz
add
add
lret
fistl
add
xchg
in
sahf
mov
mov
test
fcoms
jae
out
scas
lods
xor
inc
jne
pop
inc
addb
or
xor
aam
in
xor
mov
push
add
jmp
mov
in
es
jg
add
add
stos
cmc
fdivl
movsl
fisttpll
add
xor
sarl
cmc
shlb
cli
cs
inc
add
stos
out
pusha
add
and
xchg
xchg
sbbb
mov
or
sub
sti
popl
add
add
and
ret
pop
add
push
add
and
mov
out
mov
cmp
add
add
push
add
sbb
dec
jo
insl
shlb
popf
inc
add
pop
jl
mov
add
add
cmp
add
es
pop
add
scas
outsb
add
sub
add
cltd
outsb
add
jae
rorb
pop
add
and
and
push
add
and
dec
add
add
add
fcoml
aas
out
scas
movsl
lahf
cld
mov
pop
dec
xchg
push
loope
add
add
icebp
ret
aaa
mov
aad
movsl
fbld
add
jne
jno
loopne
jns
add
push
add
sub
mov
lahf
xchg
sub
jb
subl
fidivs
in
test
lret
xchg
and
jmp
add
jns
jns
add
add
cmp
sub
add
dec
fcom
loope
xchg
sbb
enter
add
and
test
outsb
add
cs
mov
sub
pop
add
and
clc
push
or
cmpsb
aaa
imul
dec
inc
add
dec
movsb
fiadds
jecxz
iret
xchg
push
add
xchg
arpl
xor
adc
xchg
adc
mov
jl
hlt
ljmp
sti
mov
add
add
js
add
mov
shll
data16
add
mov
std
pop
inc
add
jecxz
add
insl
dec
add
add
dec
shll
add
sub
adc
nop
mov
into
mov
andb
add
and
iret
cmpsb
fisubrl
test
subl
push
add
arpl
pop
jno
in
add
add
mov
mov
les
enter
lock
mov
loopne
and
sbb
into
mov
adc
add
cmp
inc
add
in
jnp
out
scas
or
pusha
add
call
nop
push
add
aad
in
test
stos
mov
add
add
aas
add
inc
add
push
add
add
psubsb
add
das
popf
insl
dec
add
outsl
xchg
pusha
add
add
pop
push
add
rorl
gs
mov
add
add
add
push
sti
pop
add
gs
or
mov
add
xor
ljmp
add
out
adc
loop
inc
add
add
lcall
stos
mov
push
outsb
add
mov
mov
js
adc
ja
in
les
pushf
pop
jle
mov
mov
dec
add
jnp
jno
add
roll
xchg
movsl
pop
push
add
mov
add
lcall
ficompl
mov
sbb
pushf
loopne
xchg
inc
scas
fmuls
lret
add
mov
dec
out
jns
iret
xchg
push
push
add
imul
adc
cmpsb
les
js
int3
mov
fincstp
jb
pop
lods
fnstenv
neg
sub
inc
add
add
adc
ret
add
fstpl
notb
jl
insb
add
daa
inc
add
loop
add
adcb
xchg
cmp
mov
mov
vdivps
repnz
add
cmpsl
ds
cmp
add
or
jp
inc
sbb
mov
add
mov
jo
pop
inc
dec
ret
xchg
mov
adc
sbb
dec
add
hlt
pop
aas
lock
adc
jns
add
jmp
push
add
jns
scas
flds
add
pop
sbb
add
and
daa
sub
out
frstor
add
sbb
cld
out
add
push
and
sbb
add
add
push
add
add
dec
ret
lahf
inc
add
hlt
fwait
mov
cmp
sub
push
add
scas
xchg
arpl
ret
jns
fyl2x
xchg
bound
ss
lret
add
fidivrl
or
insb
add
movsl
cmpsl
cmpsl
pop
add
sub
sub
or
xchg
call
add
jge
pusha
add
pushf
sti
addb
add
mov
push
or
mov
inc
add
add
dec
add
out
push
add
push
in
sbb
add
imul
dec
aam
mov
mov
sub
add
or
add
outsl
fsts
push
and
outsb
add
subl
ret
ficomps
mov
mov
sub
sahf
push
add
lea
bound
fisttpll
add
adc
pop
add
mov
add
cmc
mov
lahf
inc
outsb
add
push
insl
mov
mov
add
add
jno
popf
add
mov
sub
lds
subb
ds
mov
add
push
pushf
push
add
sbb
inc
ret
dec
add
add
rcl
xchg
sbb
xchg
sub
jl
push
imul
dec
add
adc
mov
add
add
movsl
add
add
add
add
cmpl
push
or
push
xor
shl
jne
xchg
and
aas
dec
add
pop
add
dec
cmp
pop
cwtl
push
add
inc
add
pop
add
mov
add
ss
xor
inc
add
push
cmpsl
fisubrl
add
jp
stos
pop
wbinvd
mov
movsb
xor
movntq
mov
push
add
mov
add
pop
sbbl
add
add
popf
jmp
push
jmp
cmp
imulb
add
mov
and
mov
sbb
std
pop
cmpsl
add
jbe
icebp
test
sub
nop
lock
add
add
or
add
inc
add
add
push
pop
push
add
adc
cmp
or
add
mov
ret
or
push
or
icebp
mov
dec
lahf
adc
add
and
insb
add
shl
fwait
or
push
add
push
pop
insl
lods
dec
add
dec
add
add
scas
and
test
and
add
fstl
mov
cmp
out
andl
addl
add
adc
into
bnd
add
adc
mov
jbe
dec
test
mov
out
add
push
pop
add
add
add
loopne
add
shrb
add
pusha
add
lea
mov
mov
or
or
mov
pop
add
cltd
xchg
cmpsb
jge
add
add
xor
xor
add
mov
cwtl
fistl
add
add
add
add
add
add
or
test
cltd
xchg
dec
sarb
adc
mov
stos
in
insl
push
add
jbe
cmp
inc
sub
push
add
dec
add
mov
cmc
testl
mov
fstpt
mov
negl
cmpsb
mov
mov
add
xor
push
add
mov
stc
add
xlat
mov
cmp
push
rorl
mov
add
lock
sub
add
add
fcmovnb
jp
add
add
xchg
imul
mov
test
frstor
add
inc
in
loop
sbbb
mov
jb
sbb
insb
add
sbb
mov
fsubrl
add
xor
add
rolb
add
and
mov
add
ficoms
add
imul
add
add
mov
cwtl
sub
xchg
les
xor
enter
sub
push
add
xor
inc
add
add
mov
add
add
inc
add
mov
jle
aas
out
mov
mov
sar
cld
imul
pop
icebp
mov
xor
jb
xchg
ljmp
add
mov
into
xchg
addl
in
scas
mov
mov
adc
divb
jmp
or
std
loope
sti
out
fisubrs
lahf
sub
inc
add
add
pusha
add
add
jmp
add
aas
push
aaa
jno
pop
add
aaa
jnp
pop
mov
or
xor
lods
sbb
js
sub
push
in
jo
push
or
and
jl
add
in
into
out
fwait
out
out
push
add
rcl
pop
xor
add
iret
cs
mov
add
fcmovnbe
or
add
test
addr16
or
add
push
add
add
in
push
add
in
loope
cld
dec
add
adc
sub
outsb
add
xor
cmp
lods
daa
lahf
fistpll
ret
adc
js
repnz
mov
cltd
roll
xchg
jbe
mov
pop
add
and
fidivrs
pushl
pop
ja
popa
lds
push
and
cmp
fisttpll
pusha
add
add
ffreep
das
shr
adcl
add
add
pop
ja
fsts
add
sarl
in
or
add
andl
fsubs
xchg
aas
clc
sbbb
jnp
add
int3
stos
mov
mov
ja
mov
mov
and
add
jg
cltd
dec
add
icebp
hlt
and
push
lods
mov
mov
in
mov
add
mov
add
sub
xchg
push
outsb
add
inc
add
add
adc
add
xor
pop
into
imul
mov
sbb
push
add
push
sub
push
add
mov
add
add
add
les
loop
add
add
mov
sub
lcall
mov
xlat
add
stc
mov
xchg
jnp
xor
stos
pop
arpl
jg
add
pop
pop
add
cmp
clc
bnd
add
data16
out
add
test
gs
add
sub
enter
add
jmp
popa
sub
cmc
test
insl
rcrl
dec
add
ret
mov
mov
xchg
xor
or
mov
adc
rclb
notl
add
pusha
add
cmp
cmpsb
xchg
xchg
scas
frstor
add
ja
pop
mov
add
fcmovnu
xchg
in
push
add
jo
xchg
subb
add
add
cli
adc
xor
jno
pushf
mov
add
xchg
test
out
ds
mov
jns
ljmp
or
das
leave
stc
fidivrl
movb
clc
cltd
out
add
add
or
add
add
add
push
sub
call
popf
pxor
test
xchg
mov
mov
xchg
sbb
fwait
cwtl
jnp
sbb
adc
fs
mov
ljmp
sub
mov
repnz
xchg
out
add
add
out
data16
add
add
jmp
push
nop
cmpsb
popa
jge
lret
in
dec
jae
fdivs
add
mov
cmp
or
std
cmp
and
add
sub
ss
sbb
add
add
mov
loopne
add
mov
das
push
add
add
lods
add
and
mov
mov
lahf
push
add
add
inc
or
arpl
add
pop
sti
push
add
adc
jno
or
xorb
fs
jmp
add
icebp
insb
add
cli
mov
arpl
add
add
mov
sarl
mov
push
and
call
subb
pop
sbb
cmp
stos
inc
imul
add
add
sbb
xorl
jl
mov
push
es
sti
mov
mov
add
add
dec
stos
pop
add
add
repnz
sbb
mov
mov
dec
add
mov
in
shll
mov
add
movsb
and
mov
fwait
js
test
or
pop
and
outsb
add
add
cmp
cmpsb
sahf
mov
add
add
jp
ficompl
sbb
hlt
jns
cmp
lahf
sbb
or
add
aad
pop
shlb
div
enter
inc
mov
arpl
sarl
mov
add
add
dec
add
add
add
ret
add
in
mov
add
add
test
sub
pop
add
ficoml
xchg
or
mov
add
dec
scas
inc
add
add
xchg
and
test
pop
test
into
sbb
jmp
in
add
jno
add
out
fwait
repz
xchg
nop
jo
bound
or
lea
lahf
cltd
xchg
push
jo
fimuls
pop
insb
add
add
adc
inc
in
fdivrs
push
add
jns
add
and
loop
in
hlt
icebp
dec
add
xor
mov
add
rcrl
add
fwait
leave
pushf
imul
jne
add
clc
adc
out
push
add
xchg
xor
leave
out
or
inc
pop
add
xchg
in
push
fs
bnd
mov
add
add
add
jns
hlt
sbb
das
addb
stos
sub
mov
jle
dec
add
mov
adc
cmpl
mov
iret
inc
dec
add
add
aad
mov
add
dec
add
jne
mov
jg
xor
pop
lods
enter
outsb
add
add
add
push
add
xor
mov
pop
or
adc
sub
jnp
add
inc
add
mov
xchg
cmp
daa
and
je
and
mov
mov
rcll
add
add
sub
movsb
push
add
test
jg
add
cmp
mov
mov
test
pop
push
les
fmuls
xchg
movsb
xor
int3
lea
push
jb
fistl
adc
orl
icebp
sub
sub
add
pop
jle
mov
add
add
mov
sbb
arpl
test
rcll
pop
add
sub
repnz
test
mov
lock
or
aad
add
gs
test
sbb
add
mov
dec
add
pop
add
inc
add
sbb
inc
pop
dec
add
add
repnz
mov
lods
dec
fwait
mov
mov
add
idivb
mov
mov
cli
xchg
mov
je
inc
fstps
lods
shlb
notb
jge
add
add
frstor
jae
test
xchg
jns
stc
lea
add
jl
xchg
mov
jo
fwait
outsl
aaa
dec
dec
add
pusha
add
fcompl
cmpsl
pushf
jnp
add
jp
in
add
lcall
push
add
push
popf
xchg
insb
add
push
add
das
scas
enter
or
or
popl
pop
add
lds
jne
int3
mov
push
add
pusha
add
dec
add
dec
add
and
addr16
rcl
out
aam
dec
sbb
mov
jmp
cmpb
mov
add
add
icebp
inc
add
add
cli
push
add
shrb
add
push
add
dec
les
add
add
dec
mov
inc
mov
sub
mov
add
or
call
jae
add
add
add
add
and
stos
out
add
insb
add
pop
sub
add
or
jnp
mov
loopne
fistpll
xor
das
lods
ror
test
rclb
add
add
notl
or
addr16
add
inc
mov
push
enter
scas
cmp
xchg
popf
scas
xchg
lahf
pop
cmc
and
add
ficompl
push
add
mov
leave
subb
popf
lds
cld
js
inc
add
add
add
push
add
cmp
rorb
insl
sub
cmc
arpl
add
test
add
add
pop
add
enter
pop
in
add
add
pop
hlt
or
xchg
inc
rcll
fidivs
mov
add
cmpsl
mov
pop
add
outsb
add
cld
std
out
mov
testl
adc
jns
mov
add
add
in
out
push
add
lcall
cmp
iret
mov
push
add
roll
add
xchg
das
mov
add
add
mov
add
cmpsl
dec
lar
bound
pop
mov
add
mov
add
add
xor
pop
mov
jns
popf
dec
add
add
mov
in
jg
add
xchg
adc
add
xchg
stos
test
loop
fnstsw
add
sub
call
and
pop
sahf
inc
js
inc
cmc
lret
jns
or
adc
jb
push
add
xor
add
add
mov
mov
fmull
add
rcrb
add
add
int
add
mov
repnz
in
cmp
roll
push
ret
inc
add
aad
add
add
shll
pop
repnz
aaa
xchg
rorb
daa
xchg
shr
inc
add
add
add
add
cmp
xor
add
daa
add
nop
xchg
or
imul
sub
lea
add
ds
punpcklbw
leave
jmp
add
dec
and
stos
adc
pop
jo
icebp
outsb
add
inc
add
mov
roll
adc
adcb
add
and
adc
add
add
imul
ja
dec
add
rorb
mov
mov
add
jns
add
fwait
aad
pop
leave
lods
ret
pop
inc
add
add
mov
add
and
in
ret
add
stos
andnps
xchg
jno
daa
jno
mov
add
aad
pop
inc
add
add
push
cmc
loopne
push
std
lret
mov
mov
add
xor
in
std
mov
jae
stos
imul
push
add
cwtl
lds
jmp
loope
add
add
rep
add
push
scas
jne
add
add
add
lods
fdivrl
rcll
sahf
cmp
xchg
fidivs
xchg
sbb
inc
add
pusha
add
pop
dec
add
add
mov
sbb
cli
jecxz
xor
pop
add
popf
test
add
lods
or
test
sarb
adc
loope
pop
add
loopne
and
pop
lahf
popa
sbb
in
out
stos
xchg
icebp
xchg
add
shl
sbb
mov
dec
add
roll
jecxz
push
jns
push
add
cmp
stos
call
add
mov
jp
pop
add
rcr
cltd
rcl
adc
icebp
movsb
cmp
sbb
and
xchg
pusha
add
add
mov
fldl
add
add
sahf
pop
add
add
mov
add
push
out
add
add
jmp
add
das
and
insb
add
add
sub
int3
push
add
insl
push
add
add
add
call
add
add
pop
add
push
add
add
mov
add
pusha
add
cmpsl
imul
add
add
stos
fadd
daa
call
push
add
aaa
std
mov
ret
add
flds
popf
ds
cwtl
lcall
sub
add
lods
mov
mov
dec
pop
add
add
xchg
mov
movsb
divl
loopne
mov
jp
aas
and
mov
adc
add
mov
add
or
push
test
ret
or
ret
repz
stc
xchg
mov
adc
dec
sbb
fwait
aam
pop
cmp
lahf
adc
add
out
add
pushf
testb
lock
xor
lods
and
pop
add
fsub
pop
add
and
pop
add
or
mov
add
cli
loop
int3
mov
dec
mov
mov
pop
add
cmc
jecxz
jbe
sbb
orl
add
dec
and
xor
fidivrs
mov
mov
add
scas
or
repz
out
or
add
or
cmp
cmpsl
and
jmp
adc
pop
xor
lea
cvtpi2ps
inc
add
jne
mov
add
call
add
js
inc
pop
add
inc
dec
add
add
or
adc
add
add
sbb
dec
mov
cmp
add
inc
pop
loope
inc
xchg
lcall
add
iret
sbb
xchg
mov
and
movsl
nop
into
and
and
add
push
add
xor
jl
pop
add
jge
xchg
rorl
sub
mov
mov
mov
fisubrs
mov
add
add
cmp
jle
ja
hlt
xchg
sub
cltd
out
add
add
fsubrs
add
lods
dec
cmpsl
sub
loopne
add
cld
cmp
jae
add
ret
add
add
jnp
fdivs
cmp
int3
xchg
inc
add
add
mov
mov
add
jns
mov
add
add
ss
in
iret
repz
mov
jo
in
mulb
add
leave
inc
add
inc
add
add
out
fcoms
ds
jecxz
and
add
pop
add
icebp
cmp
out
mov
shrl
mov
add
in
sub
sar
pop
pusha
add
mov
add
inc
add
scas
lods
sub
cmp
lock
add
mov
scas
cmp
int
xchg
and
add
xchg
je
mov
mov
xchg
jge
lret
outsb
add
add
push
cmpsb
and
das
xlat
into
sbb
add
add
sbb
pop
add
popa
inc
adcl
mov
das
push
add
jp
lds
negb
lods
push
add
mov
pop
cmp
cltd
ret
adc
push
xor
aad
cmp
add
xlat
xchg
nop
data16
dec
add
stos
scas
jmp
fdivp
mov
stos
jns
out
popf
add
sbb
push
add
inc
sbb
cmpsb
and
push
add
dec
or
dec
add
add
cld
inc
add
lcall
scas
mov
push
add
jno
stc
repz
mov
outsl
add
inc
imul
cmp
inc
add
add
cli
pop
add
fsubrl
add
sti
pop
add
cmp
and
mov
cld
ret
xor
ljmp
jg
add
mov
add
fcoms
xchg
enter
push
add
add
inc
mov
cmp
push
add
lea
sub
call
cmp
add
push
add
lret
stos
push
fadds
arpl
loopne
aaa
insl
xchg
push
add
shr
xchg
bound
add
fbld
aam
shlb
add
lock
shr
push
push
into
sub
sub
add
scas
lahf
xchg
push
add
add
add
fucomp
push
add
movsb
push
add
fnstenv
add
icebp
jno
mov
pushf
fs
or
lcall
lds
jp
cmp
mov
orb
push
add
ret
xchg
pushf
xor
sbb
cmp
mov
fidivs
push
add
add
xor
jmp
add
mov
add
push
adc
repz
rorb
enter
dec
sbb
into
mov
sbb
cld
fcmovnbe
inc
add
push
add
xchg
aad
add
or
pop
add
jmp
add
xor
mov
mov
push
add
pop
add
pop
push
add
pop
aaa
scas
int
add
ret
cld
ret
add
js
sub
add
dec
add
add
push
add
and
xchg
mov
add
sbb
xor
pushf
dec
jle
dec
loop
mov
add
in
jns
pop
add
and
movsb
dec
add
mov
add
mov
movsl
xchg
insl
pop
sahf
add
adc
ljmp
mov
mov
ss
movsl
mov
iret
mov
and
add
sbb
sahf
ja
scas
aad
jmp
out
ret
add
sub
add
add
mov
enter
lret
add
and
pop
add
and
mov
inc
add
scas
ret
dec
add
add
jno
xchg
mov
add
insb
add
dec
pop
add
cmp
and
add
sub
test
jb
insb
add
or
fistpl
pop
adc
xchg
add
jle
lahf
out
nop
jnp
js
pop
add
add
add
lea
lcall
cmc
jg
sahf
daa
scas
lcall
xorl
pop
dec
add
mov
xlat
outsb
add
pop
add
enter
mov
repz
adc
add
mull
inc
inc
push
mov
cmp
and
in
push
add
adc
js
outsb
add
mov
dec
add
add
nop
push
lock
stos
scas
dec
xor
push
add
mov
fistpll
add
add
add
test
xchg
push
jb
icebp
push
ljmp
add
pop
mov
dec
add
cmc
loop
jecxz
pop
adc
sbb
fstl
pusha
add
mov
pop
ret
mov
jge
pop
add
or
add
bound
xchg
push
add
sti
pop
add
and
stos
loop
sbb
cmpsb
movsl
mov
push
inc
add
loopne
cld
sub
leave
or
fstl
add
mov
add
add
movsl
pushf
xor
or
mov
xchg
popl
cmp
xchg
add
mov
test
jl
jo
loop
add
adc
enter
mov
xlat
jecxz
fsubr
cmp
dec
add
add
and
lods
incl
add
int
cmp
sub
pop
add
sbb
adc
mov
add
addb
sahf
lea
arpl
xlat
xchg
add
fcomip
sub
add
push
test
mov
add
add
and
mov
lods
imul
loopne
or
sbb
xlat
shl
iret
outsb
add
add
lea
cmc
cld
sub
mov
add
clc
cli
lods
sbb
inc
in
jg
xor
outsl
jno
lea
fisubrs
push
mov
cmpsl
mov
xor
popa
pusha
add
xchg
inc
iret
leave
pusha
add
sbb
je
inc
add
gs
add
cmp
adc
add
cmp
scas
mov
int3
mov
jno
add
pop
add
movsl
push
add
or
andl
call
jle
dec
add
arpl
xchg
mov
xchg
leave
imul
and
addr16
add
rcrb
add
adc
jo
cmpsl
leave
sbb
add
nop
add
fcom
loop
jg
add
xlat
xchg
add
jl
pop
add
add
sub
push
loop
dec
mov
rorl
add
inc
add
repz
in
add
or
stc
mov
out
mov
jp
jnp
lret
lock
in
pop
loope
fwait
push
add
mov
pop
add
addl
fsubs
add
cmpsb
inc
add
mov
cwtl
xchg
test
cwtl
jnp
add
lret
push
add
inc
sbb
mov
out
adcb
jns
add
daa
sahf
jge
popa
jmp
in
mov
pop
add
add
adc
or
stos
popf
mov
lret
loope
inc
add
or
data16
sub
add
push
add
sbb
loope
jae
out
sti
or
and
add
add
add
lock
mov
add
add
js
nop
fdivs
mov
mov
add
jmp
add
ljmp
je
aaa
pop
add
repz
fsubl
out
insl
enter
mov
lock
mov
add
add
mov
xor
inc
add
add
test
add
pop
add
pop
push
add
pop
les
inc
add
rcr
jp
add
ret
push
add
dec
add
loope
add
dec
add
mov
add
add
add
cmp
add
fimuls
add
loopne
add
lahf
jmp
xchg
mov
add
int3
mov
xor
in
cmp
into
stos
mov
pop
add
insl
je
mov
hlt
and
add
in
ret
stos
sarl
add
push
add
xchg
jecxz
bound
testb
icebp
cmp
push
add
int3
popa
int3
push
add
dec
add
mov
adc
sub
rorl
add
test
sbb
add
popf
in
int
jbe
add
add
jge
cli
sub
loop
and
xchg
das
lock
push
jb
aas
lret
pop
add
add
ja
add
add
and
loope
mov
dec
cmp
repz
sub
pop
popa
push
sub
outsl
adc
in
repnz
inc
add
mov
mov
insl
xor
movsb
adc
add
insl
stos
jmp
add
movb
add
push
add
call
add
add
cld
data16
adc
adcl
or
xor
xchg
negl
mov
clc
popl
adc
mov
inc
test
push
add
push
mov
add
out
mov
add
dec
add
lods
and
adc
sbb
data16
test
pop
shrb
jno
mov
pusha
add
lods
push
xchg
insl
jbe
add
fidivs
push
add
stc
adc
sub
flds
add
xlat
jp
cmp
movsb
xlat
mov
shrl
rcrl
pusha
add
push
add
enter
add
dec
add
test
mov
sub
mov
jmp
ret
push
add
pushl
add
std
pop
add
sbb
jns
add
pop
daa
fbld
push
xor
adc
pop
add
add
pop
scas
xor
or
into
insl
daa
lods
into
cmpsl
sub
pop
int3
cmpsl
cmpsl
jp
inc
popa
mov
mov
addr16
add
fs
das
insb
add
jb
xchg
je
push
add
fisubs
add
push
add
lock
add
or
stc
push
add
push
sbb
add
mov
push
cvtps2pi
add
xchg
add
in
mulb
dec
add
jbe
add
pop
popa
call
bound
loope
movsb
in
movsl
push
add
add
int
add
sbb
mov
or
shll
add
mov
jbe
sbb
aaa
push
add
add
add
add
add
inc
add
add
stos
out
stc
fidivrl
sub
dec
mov
fnstcw
pop
bound
pop
add
dec
add
insl
cmp
daa
andb
mov
lods
sbb
xor
mov
add
or
cmp
fnstenv
mov
add
pop
xchg
pop
add
mov
add
mov
add
adc
xor
pusha
add
mov
add
fsts
xor
cli
cmpsl
xchg
int
add
pop
into
push
out
cmp
jecxz
mov
std
ret
push
ret
add
add
add
dec
pop
sub
mov
dec
xor
andb
push
add
cltd
add
jp
mov
lret
roll
jecxz
std
shlb
cmpsl
mov
iret
jge
sahf
imul
bound
in
sub
in
adc
mov
add
arpl
inc
add
add
lea
int3
andl
add
add
mov
fwait
mov
push
add
mov
test
push
add
dec
add
inc
add
dec
add
add
mov
fistpll
add
push
add
lods
mov
frstor
cmp
out
iret
jae
add
ret
insb
add
push
add
cltd
add
cmp
imul
or
push
xor
mov
shl
inc
xor
notb
mov
pop
add
cli
add
or
lods
loop
je
insl
std
jno
rcrb
lret
sarb
adcb
rorb
add
xor
repz
mov
pop
add
fidivrs
dec
add
ret
add
push
add
add
lahf
std
pop
add
enter
sub
jecxz
add
in
xor
cmp
mov
fwait
inc
add
add
movsl
subb
cli
mov
cmp
daa
outsb
add
addr16
je
rcr
push
add
xor
add
lret
aad
xchg
pop
add
fbld
or
aaa
iret
sahf
sti
adc
out
pop
cmpb
dec
pop
orb
arpl
xor
xor
mov
cwtl
lahf
repnz
or
outsb
add
add
mov
add
add
stos
xor
mov
add
call
pop
out
inc
xchg
stos
xchg
fwait
daa
and
repnz
push
mov
push
add
xor
add
jge
stc
pushl
xchg
or
pop
pop
add
sbb
stc
sarl
test
jle
fisttpll
ret
ds
clc
bound
gs
add
add
inc
add
stos
das
popa
negb
addr16
xchg
sbb
aaa
aaa
jns
push
add
sub
mov
add
lock
ja
and
add
adc
add
icebp
mov
mov
pusha
add
mov
fsubrs
add
rclb
jmp
inc
add
je
sbb
sbb
data16
add
or
imul
adc
inc
add
add
mov
push
add
scas
jg
add
and
test
xor
je
stos
or
in
and
cmp
data16
sti
mov
cmp
icebp
lock
add
jecxz
add
test
xchg
scas
nop
pop
jne
leave
jle
lock
add
push
add
add
push
add
mov
add
pop
xchg
in
sub
add
add
jne
repz
jns
repz
xor
add
add
add
sar
xor
subb
loopne
add
adc
imul
imul
int
mov
jge
sbb
xchg
add
cmp
repz
das
sbb
and
fucomp
test
inc
add
cmpsb
nop
or
lds
add
cmp
loop
add
out
xor
shll
popl
add
lea
and
cwtl
push
dec
lods
fwait
mov
fwait
adc
sub
repnz
add
add
pop
out
shlb
inc
add
addb
and
mov
xor
add
in
add
mov
imul
es
icebp
movsl
xor
add
repnz
inc
add
add
icebp
xchg
mov
add
and
add
push
add
dec
sahf
stos
mov
ret
repz
nop
mov
add
cmp
and
loopne
stos
daa
pop
add
mov
cltd
or
cmp
into
pusha
add
gs
pop
add
xchg
push
add
add
jp
mov
neg
sbb
push
add
lret
mov
mov
add
int3
mov
sbb
add
test
clc
add
ret
inc
add
xor
lods
jp
and
or
outsb
add
add
mov
scas
sahf
subl
pop
add
stos
push
ja
lock
aad
add
add
sbb
fbld
add
sbb
loop
ljmp
xor
addr16
or
stc
xor
in
test
cmpsl
mov
ss
cmp
mov
add
or
dec
add
data16
scas
mov
pop
cmc
test
add
add
add
add
adc
mov
popf
mov
in
jnp
xor
test
int3
mov
int
jbe
psubusb
aas
add
add
fidivrl
jb
cmp
inc
fdiv
ljmp
add
add
add
and
mov
out
add
adc
shlb
fsubrl
sub
lret
pop
mov
add
jmp
add
add
cmp
xchg
out
adc
inc
or
xchg
nop
dec
add
jo
push
add
and
shll
mov
or
mov
mov
xor
jmp
mov
in
cmp
sub
xlat
lea
add
nop
mov
hlt
rclb
hlt
repnz
mov
or
xchg
dec
xor
lret
lahf
pop
add
loopne
add
add
out
add
pop
add
add
add
sbbl
loope
mov
xchg
and
jo
or
add
sub
add
or
mov
sbb
adc
stc
and
jno
add
lds
inc
push
add
iret
frstor
adc
popf
fwait
leave
mov
jno
outsl
adc
movsb
out
inc
xor
push
add
imul
add
add
jp
add
mov
movsb
mov
std
in
add
mov
add
scas
lcall
and
sahf
jb
adc
add
add
mov
iret
lcall
add
das
add
push
add
sbb
push
insb
add
movsb
mov
mov
sub
xchg
loopne
add
pop
add
add
jp
dec
jmp
push
add
add
add
cmp
jmp
orl
xchg
jle
stos
aaa
sar
inc
add
dec
pop
push
add
enter
test
add
mov
xchg
hlt
insb
add
mov
dec
lds
xchg
outsl
clc
out
dec
add
or
insb
add
add
add
and
jo
inc
js
js
lret
test
add
add
cmp
push
add
or
add
add
sbb
mov
icebp
xchg
xchg
pop
fsubrs
cmp
repnz
inc
add
push
add
pop
add
add
add
add
aad
add
stc
and
incb
test
stos
movsb
ljmp
gs
and
mov
pop
add
mov
and
add
fistpl
ret
add
mov
insl
mov
add
or
jne
rol
enter
add
call
js
cmp
mov
add
or
inc
add
push
add
dec
dec
cvtps2pi
add
mov
add
and
loopne
xchg
add
add
mov
add
call
dec
add
data16
fistpl
add
add
push
add
adcl
add
mov
fsubrl
mov
sub
adc
mov
in
pushl
xchg
scas
into
sbbb
out
loop
ss
bound
dec
add
test
lods
push
add
push
add
lock
add
add
or
cwtl
fadds
inc
jbe
mov
ficoms
stos
hlt
mov
mov
add
sti
ret
push
add
movsb
push
add
add
add
adc
sbb
jae
sahf
outsl
xor
add
inc
mov
add
xchg
out
xchg
dec
add
adc
add
gs
mov
lret
sbb
push
add
pushf
inc
inc
dec
test
addr16
add
mov
mov
mov
das
or
aas
cmp
add
loopne
xchg
imul
bound
hlt
inc
add
add
cmc
mov
inc
add
add
cltd
or
mov
add
push
add
mov
test
xchg
add
sub
mov
dec
inc
imul
dec
add
cmpsb
xacquire
sti
call
add
int3
insb
add
lock
jo
adc
add
sbb
insb
add
mov
mov
add
jno
add
pop
and
add
es
arpl
xor
scas
pop
roll
pop
lret
hlt
pop
pusha
add
add
negb
inc
mov
xchg
jbe
stc
jg
add
adc
add
cmpsl
sbb
rclb
leave
sbb
lcall
data16
add
add
sbb
fistpl
lahf
jecxz
adc
mov
add
add
adc
add
mov
loope
and
dec
add
testb
add
sub
lods
notl
add
into
scas
jmp
cmp
xchg
mov
xchg
decb
shlb
dec
add
dec
add
or
inc
jne
adc
mov
mov
popa
cmp
add
sub
push
add
cli
imul
add
add
sub
xlat
mov
outsl
jne
mov
xor
mov
add
add
jae
jae
cmp
subl
push
cmp
push
in
add
addl
clc
fnstenv
and
dec
mov
add
hlt
js
mov
add
test
arpl
add
inc
add
lea
mov
push
jmp
sub
xchg
xchg
lea
or
inc
add
movsb
add
add
and
aas
xchg
jb
mov
add
or
lret
ficompl
adc
loope
mov
data16
mov
inc
push
add
cmpsl
sub
sbb
add
mov
xchg
in
int3
push
add
add
stc
fidivl
push
imul
mov
lods
push
add
lods
test
pop
add
add
mov
add
jae
xchg
lods
stc
cmp
add
das
xor
or
fcomps
sbb
stos
int3
mov
arpl
jg
int3
adc
add
fld
js
xchg
sub
mov
add
ret
std
imul
push
add
fisubrs
add
lock
lods
inc
add
clc
pop
add
add
imul
scas
sbb
clc
pop
add
sti
call
adc
push
pushf
push
adc
add
and
inc
test
inc
add
lds
inc
add
pop
add
popf
lcall
push
add
dec
data16
fidivrl
add
mov
imul
mov
out
data16
dec
add
dec
mov
adc
sub
jp
mov
lds
jg
add
add
mov
add
insl
add
mov
clc
in
imul
outsl
dec
add
mov
add
dec
push
add
dec
cwtl
jns
add
mov
pop
decb
pop
add
ret
int
and
pop
push
add
add
bound
dec
add
add
cld
mov
add
add
bound
ret
inc
add
and
sbb
xchg
test
add
add
pop
imul
jo
mov
sub
subl
pop
add
in
pop
fists
aas
bound
sub
adc
lods
push
add
test
inc
stc
sahf
cli
jge
add
inc
stc
sbb
out
jb
sbb
pop
add
jmp
xchg
fwait
in
mov
inc
sbb
in
xor
mov
adc
loope
enter
pop
add
push
add
fdivrl
call
pop
add
pop
xorb
sahf
subb
add
mov
or
inc
nop
add
cmpsl
bound
mov
add
dec
xorl
add
adc
inc
add
pop
rolb
das
lahf
rcrb
jbe
ret
cli
out
mul
out
mov
add
xchg
lret
inc
or
xchg
aad
add
mov
test
pop
add
add
cmpsl
inc
add
add
nop
push
add
movsl
scas
pop
dec
add
add
in
jnp
add
add
mov
add
pop
loopne
in
sahf
dec
add
rcr
outsb
add
pushf
xor
lret
mov
cwtl
pushf
loope
add
add
mov
jbe
mov
cmp
push
add
jmp
out
out
jae
jae
addr16
add
add
or
mov
repnz
inc
add
add
xchg
or
lock
add
add
arpl
jno
fidivrs
scas
jns
mov
mov
add
scas
dec
add
lods
aad
nop
jns
insb
add
test
or
mov
or
or
jne
and
fwait
add
shl
mov
xorl
cmp
dec
add
or
add
or
out
loope
insb
add
mov
pop
add
ja
add
push
add
into
and
sub
jns
mov
add
jl
sbb
adc
jecxz
add
pop
add
dec
stos
mov
adc
out
addb
and
jnp
in
xor
outsl
mov
jg
add
scas
mov
inc
add
push
add
mov
ficomps
dec
add
add
test
imul
jno
test
xchg
push
test
punpcklbw
xchg
mov
jg
xchg
mov
jl
stos
add
adc
pushf
sub
ret
ljmp
dec
add
and
and
mov
sub
pusha
add
add
or
in
lret
mov
int
add
gs
xchg
pop
add
rorb
stc
jo
pusha
add
sbbb
add
lcall
dec
add
push
add
xchg
sbb
xor
pop
inc
mov
mov
add
into
test
into
mov
cmpsb
out
add
cmpsb
push
mov
imull
add
mov
mov
add
xorl
sub
stc
cmpsb
ja
xchg
cmp
dec
add
add
loop
add
int3
ret
sub
int3
dec
stos
in
add
mov
movlps
add
notl
jo
push
jb
cmpsl
lds
mov
xchg
mov
add
push
add
add
add
loope
jl
xlat
or
mov
aad
adc
in
shr
add
test
inc
add
jo
lret
les
dec
add
pop
cmp
xor
sub
test
mov
xor
dec
jne
imul
add
into
mov
jg
add
inc
mov
add
sub
and
clc
inc
add
add
test
mov
sbb
subb
cmp
pop
rcll
pusha
add
sar
cmp
jle
inc
add
add
fidivrl
add
add
int3
movsb
ficomps
dec
repz
add
in
ja
add
lea
add
xor
outsb
add
lods
rclb
jle
inc
jge
scas
hlt
xchg
mov
cmp
cld
or
movsl
adc
cltd
cmp
inc
pushf
mov
insb
add
mov
inc
ljmp
add
cwtl
mov
add
add
fcmovb
fldcw
das
shll
dec
das
popa
jg
or
lock
jbe
add
or
mov
repz
add
daa
push
pop
mov
mov
addb
xor
cmc
xor
jo
cmpsl
outsl
add
insl
xchg
mov
add
mov
add
cmp
jb
lret
sbb
bound
or
push
sub
nop
aas
ficomps
fisttpll
pop
inc
gs
or
enter
dec
add
add
mov
add
add
add
add
pop
mov
add
push
into
test
pusha
add
cltd
out
add
jb
cmp
dec
shlb
push
add
mov
ljmp
dec
add
add
and
in
dec
pop
shl
mov
add
add
add
fimull
subb
add
push
mov
into
jmp
mov
fadd
jmp
sbb
xchg
dec
add
pushf
sbb
xchg
jl
lock
xchg
add
movsl
lock
shlb
add
and
add
sub
xchg
dec
add
sti
jmp
mov
add
mov
mov
push
add
pop
add
add
sub
push
cmp
lds
cmp
mov
iret
or
sub
jne
pop
xor
mov
rclb
add
add
ljmp
add
sbb
jl
inc
add
add
dec
push
inc
add
cld
and
add
xor
mov
sti
or
inc
jo
cmp
push
add
add
sub
add
add
jecxz
add
mov
add
gs
cmpsl
mov
movsl
pop
jmp
dec
add
pop
add
scas
cmc
stc
jne
add
fwait
movsb
cltd
xor
add
add
movsb
ret
add
lds
add
jnp
lods
js
jle
addr16
fsubp
aad
add
lock
les
sbb
or
dec
add
inc
push
add
pushf
lods
movsl
sub
adc
inc
cmp
adcb
or
shrl
addl
pop
add
je
test
pop
add
add
sbb
mov
sbb
lret
push
outsb
add
push
add
add
jno
sahf
sbb
sub
sarb
les
add
mov
inc
add
xchg
ret
xor
add
add
add
add
mov
mov
ficompl
add
inc
add
test
adc
mov
add
mov
xchg
in
mov
add
add
or
and
add
jp
roll
add
and
aad
jae
add
icebp
pop
add
add
lods
decb
hlt
idivb
add
cwtl
xchg
add
add
add
imul
xchg
xchg
xchg
mov
add
add
add
popf
mov
int3
scas
setne
cmc
sub
scas
adc
mov
pop
add
loopne
cmp
pop
add
add
or
mov
sti
sub
sbbl
add
jb
add
inc
xor
call
add
jecxz
add
add
pop
add
jle
pop
add
and
xchg
enter
push
add
add
in
lock
mov
adc
dec
add
push
add
pop
add
out
push
add
push
fdivs
add
add
lahf
inc
dec
add
add
xchg
pushf
cmc
pop
jae
inc
add
shl
mov
add
cwtl
ret
add
add
jg
pop
add
lods
iret
or
dec
jp
into
orb
daa
imul
pop
cmp
add
sahf
pop
into
mov
stc
pop
adc
ret
add
imul
insl
sbb
rcr
pop
add
or
add
adcb
jns
test
xor
daa
lock
out
dec
push
push
dec
or
or
mov
mov
stos
data16
cltd
sahf
aam
cmp
add
add
ja
add
add
jns
add
addr16
pop
push
roll
cmpsl
cmp
pop
add
mov
mov
jae
xor
add
adc
push
adc
inc
add
add
add
jp
aad
mov
or
xor
adc
lcall
ret
mov
out
push
clc
cmp
xchg
add
leave
shll
push
add
add
xchg
push
add
push
std
push
add
sub
cli
xchg
xor
aas
cs
cmp
jp
xchg
add
cmpsb
clc
push
add
jb
adc
cli
ljmp
loop
add
rcll
push
mov
add
add
stc
jbe
or
lods
jge
or
repnz
mov
add
xor
push
sbbb
ror
add
rcll
in
mov
loop
rolb
data16
dec
add
add
insl
mulb
mov
jecxz
add
xchg
je
sub
add
insl
mov
mov
add
sbb
cmc
scas
inc
cmp
mov
add
lods
mov
mov
in
add
adc
pop
repz
fsubrp
sub
orb
dec
sti
insb
add
stc
xor
call
add
and
add
add
insl
shrl
xor
sub
mov
add
cmpsb
or
pop
add
mov
jp
repz
cmp
imul
add
outsl
and
aaa
cmp
mov
sbb
int3
scas
push
das
outsl
jbe
mov
data16
arpl
sbb
add
out
and
jb
adc
stos
cltd
mov
mov
or
scas
pop
inc
add
pop
add
sbb
cmp
jmp
add
cmp
imul
dec
add
jmp
jb
loopne
add
cli
dec
inc
add
add
in
out
pop
add
pop
sbb
cmpl
mov
in
pushf
xorl
dec
inc
push
xorb
add
or
lahf
xor
out
pop
pop
add
into
clc
outsb
add
data16
lock
xchg
add
adc
cli
repnz
sbb
xchg
insb
add
add
add
nop
iret
inc
mov
fstpt
add
add
mov
insb
add
push
add
add
loope
pop
subl
add
mov
add
ja
mov
repz
add
adc
gs
add
mov
add
add
out
add
add
lahf
mov
add
or
in
add
adc
add
scas
aas
pop
cmp
pop
add
cmc
int
mov
xor
lret
add
cmp
jmp
push
sub
dec
ret
mov
aam
test
data16
xor
mov
mov
cli
push
addr16
in
xor
push
testb
add
jnp
xchg
adc
add
and
pop
and
out
xchg
pop
add
add
fcmovnbe
pop
in
ds
jo
arpl
movsb
pusha
add
lds
add
mov
dec
ret
das
data16
outsb
add
loope
jae
lea
add
test
xchg
dec
push
cmc
mov
jbe
arpl
pop
jbe
sarb
popf
and
stos
jecxz
jne
add
fbstp
add
sbb
iret
ficompl
mov
imul
xorl
fistpl
push
jecxz
ficomps
lcall
add
push
loope
mov
scas
inc
add
and
lret
sub
and
dec
cmpb
jbe
adc
repnz
loope
add
dec
scas
in
cmp
outsl
add
jle
std
add
sar
cmp
pop
add
inc
and
add
add
push
lret
add
add
xor
fnstcw
add
insl
pop
push
add
push
add
out
dec
sbb
ljmp
add
mov
add
loopne
add
sbb
sub
add
adc
push
scas
scas
push
add
pop
dec
fisubl
push
add
lcall
out
adc
add
jnp
ja
scas
xchg
jnp
or
lcall
add
sbb
data16
clc
pop
dec
clc
gs
mov
add
push
sbb
xchg
andl
fdivrs
mov
add
scas
pop
pop
jge
cmpsl
mov
jbe
dec
add
or
pop
add
mov
push
push
add
dec
pop
add
jbe
inc
add
scas
inc
add
fisttpl
mov
add
add
mov
add
lcall
mov
jbe
mov
add
enter
or
jp
in
test
pop
cmp
mov
add
test
mov
jo
fisttps
add
xchg
stc
fnsave
add
stos
lea
addb
add
push
add
add
add
add
add
adc
sub
neg
das
jmp
add
daa
mov
adc
or
or
xchg
xchg
scas
or
fsubl
mov
inc
add
sti
add
inc
add
dec
mov
add
arpl
dec
fucomip
jae
add
je
inc
jbe
cmp
aas
pop
add
jbe
loopne
mov
pop
inc
sub
pusha
add
and
lcall
add
sarb
pop
cmp
lahf
sbb
test
test
ljmp
out
enter
add
add
and
mov
adc
test
insb
add
xchg
cmp
ret
iret
cmp
leave
xchg
fistpl
add
add
out
add
ficoml
or
add
into
pop
mov
mov
add
jbe
mov
repz
adc
lahf
pop
add
add
div
mov
std
pop
hlt
jbe
je
push
add
arpl
jmp
add
add
data16
add
scas
aaa
lcall
js
cmpb
or
and
mov
add
jl
add
adc
int
add
out
insb
add
inc
loope
aas
sarb
xor
add
aas
pop
add
add
das
or
pop
add
jge
mov
in
cwtl
push
add
ficompl
push
and
arpl
push
add
push
add
add
movsl
pop
add
add
add
add
add
push
pop
xor
test
movsb
jg
subl
mov
sbb
add
and
pop
pop
adc
add
mov
jp
insb
add
mov
add
ficompl
lods
pop
rorl
add
icebp
pop
jmp
pop
sbb
test
cltd
mov
pusha
add
pop
cltd
scas
inc
add
add
add
aas
int
add
incb
sahf
iret
das
dec
add
add
jmp
mov
add
add
enter
mov
pop
cld
sbb
lcall
push
add
dec
add
sub
add
or
pop
push
add
add
add
jg
sarb
add
add
test
arpl
dec
mov
jecxz
mov
mov
les
flds
repnz
push
add
add
out
aam
aad
add
sub
int3
jmp
or
mov
movsb
xchg
imul
sub
test
add
xchg
xchg
adc
mov
sub
push
add
test
add
add
add
sbb
sti
aad
add
inc
add
add
popa
mov
in
das
xor
repnz
xchg
adcl
xor
push
add
fldenv
jl
dec
add
cmp
sbb
add
and
push
mov
les
or
in
insb
add
sub
cli
pop
shlb
add
mov
mov
xchg
dec
add
bound
lods
sub
add
sti
push
sbb
rcll
aam
jo
cmpl
cs
mov
mov
jle
addr16
bound
xor
shlb
sub
adc
add
shll
into
testl
aaa
ljmp
sbb
lret
add
add
add
lret
scas
xchg
push
add
push
mov
add
jb
mov
pop
popf
outsb
add
or
ja
mov
and
stc
cmp
add
mov
mov
je
lahf
add
in
adc
and
idivl
fidivrl
sti
scas
jl
add
mov
aas
cmp
xchg
popf
fildl
sub
fstl
sub
add
add
mov
inc
test
inc
lahf
ficompl
insl
movsl
nop
sub
in
rorb
mov
call
scas
fcmovnu
add
pop
loopne
add
jb
imul
cmp
xchg
pop
mov
outsl
nop
enter
add
push
insl
xor
jb
xchg
jno
icebp
and
shll
sti
out
add
stos
arpl
cmp
mov
add
lods
sar
sub
xor
sahf
fmuls
add
xchg
add
add
xchg
lret
jmp
rcll
ror
sarl
add
add
mov
fldcw
movsl
or
leave
outsb
add
add
test
add
inc
jbe
test
pop
mov
and
cmp
lods
dec
add
push
xchg
sarb
shrb
ret
sub
xchg
sub
add
rcr
adc
cmp
in
push
add
or
and
mov
add
popf
dec
add
das
jmp
pop
add
sbb
test
fildll
cmp
add
out
bswap
inc
dec
add
shl
bound
les
add
cmp
jecxz
data16
and
lds
mov
cmp
mov
in
add
aas
mov
inc
and
mov
sbb
mov
das
int
add
fwait
mov
stos
or
in
mov
aam
sar
lret
jae
bound
nop
dec
in
cmp
pop
dec
loope
add
add
outsl
sbb
lret
push
bound
pop
fidivrl
pop
add
out
and
leave
and
xchg
mov
dec
add
fcompl
das
ja
icebp
mov
mov
stos
adc
loopne
mov
pop
sbb
orb
add
pop
mov
sti
mov
int3
and
dec
add
in
adc
xchg
and
push
add
push
fisttpl
pop
add
inc
add
mov
add
add
add
add
push
lahf
cld
push
sbb
add
cvtpi2ps
push
add
push
add
mov
test
dec
add
in
movsb
dec
test
push
add
stos
test
sbb
lcall
inc
adc
imul
jo
dec
into
ja
lds
add
scas
cmpb
add
lock
jmp
push
add
mov
daa
icebp
outsb
add
ja
jmp
sbb
arpl
inc
dec
into
mov
mov
add
add
test
push
add
add
mov
scas
xchg
mov
insl
leave
pop
mov
outsb
add
dec
add
add
push
fwait
outsl
add
add
js
xchg
clc
mov
add
add
mov
mov
sbb
out
mov
fisubrl
test
dec
add
add
popa
data16
jbe
cmp
jecxz
push
add
mov
xor
add
jne
add
fdivp
aas
jl
out
icebp
test
in
arpl
cmp
test
add
jno
jmp
add
add
cmp
popa
loope
popf
sbb
add
mov
pop
cmpsb
inc
and
mov
bound
sub
xor
testb
in
imul
fstps
fiadds
and
fbld
inc
add
out
pusha
add
add
add
rcr
lret
cmc
inc
pop
fidivrl
add
bound
sbb
adc
pushf
rcr
dec
out
lods
insl
cmpl
sarl
punpckhdq
jns
cs
fcmovnu
sub
lret
cli
and
andb
pop
and
push
data16
mov
mov
addr16
icebp
xor
mov
inc
js
icebp
test
add
inc
fidivrl
add
dec
mov
add
add
add
lea
add
fldz
xor
xor
lock
scas
mov
push
add
push
add
incl
sbb
xchg
adc
ret
je
ja
mov
cmp
pop
rorl
add
push
add
insl
scas
imul
add
push
stos
xor
scas
imul
je
repz
cmp
sbb
mov
fwait
mov
inc
add
sbb
push
add
sub
out
nop
gs
sub
xchg
das
jno
cmp
mov
pop
inc
add
dec
add
inc
cmpsl
test
dec
lcall
repz
mov
test
test
daa
mov
push
add
sub
xchg
fnstsw
add
into
mov
sub
mov
add
add
data16
negl
ror
mov
mov
test
pop
data16
mov
sub
movsl
push
add
xor
inc
push
adc
lods
cli
lahf
mov
mov
aad
js
and
mov
add
fistps
add
lods
xchg
data16
icebp
dec
add
scas
inc
sub
daa
jae
data16
ret
add
and
adc
bound
or
lcall
adc
lods
test
cmp
aas
in
xor
add
mov
dec
fcomps
lret
push
add
frstor
roll
dec
add
mov
or
jno
inc
add
inc
out
adc
rorb
mov
add
mov
nop
sub
clc
stc
pop
fcoms
add
add
dec
add
rcl
jmp
sub
leave
arpl
add
ret
add
inc
addr16
mov
add
in
add
mov
jo
sub
frstor
sub
cmp
adc
inc
add
fcomps
int3
jb
ror
fucom
cmp
test
movsl
call
add
pop
add
pusha
add
push
add
add
add
xor
repz
pop
ds
push
add
sahf
loope
sbb
push
add
mov
int3
mov
push
add
jns
out
add
add
sub
add
inc
add
add
add
mov
add
sub
cmc
nop
sbb
lods
test
add
push
arpl
arpl
fisttpl
jne
add
and
sub
ja
inc
add
mov
ret
mov
aaa
cmp
push
sti
mov
das
inc
add
stos
xchg
or
add
movsb
push
cmp
jne
in
dec
add
xor
sahf
mov
or
pusha
add
add
cmc
adc
enter
add
cld
call
stc
ficoms
xchg
call
add
adc
repnz
push
leave
popa
rcll
add
add
add
gs
add
dec
aad
ljmp
add
pop
xchg
subl
mov
jno
jmp
aad
add
popf
dec
movb
xchg
jbe
or
ljmp
dec
add
adc
inc
cmp
push
add
xchg
xor
fmul
aad
int3
mov
add
loope
popa
xchg
dec
add
jb
mov
mov
mov
add
add
test
xor
sbb
add
fldt
add
jbe
stc
add
add
in
add
add
es
sbb
add
fnstsw
add
jo
xor
test
or
test
pusha
add
jo
popf
xor
add
jle
data16
cmp
xchg
xor
sub
movsl
sti
lds
add
add
add
mov
fisttps
popf
jmp
mov
nop
divl
mov
xor
xchg
mov
cltd
sbb
ljmp
test
clc
add
enter
shll
add
mov
push
and
outsb
add
in
add
insl
enter
shrl
add
inc
add
pop
mov
sbb
dec
je
mov
test
add
std
cld
xorl
mov
arpl
adc
or
lret
jmp
and
jo
add
and
add
or
lret
cmp
xchg
push
dec
add
sbb
mov
mov
dec
jnp
aaa
mov
scas
jl
ljmp
add
adc
sub
sbb
mov
pop
push
stc
punpckhdq
add
mov
add
jp
addr16
movsb
sub
mov
out
cli
je
mov
sub
repnz
bound
inc
add
sti
add
add
add
test
rcrl
add
shlb
in
negb
add
aaa
mov
add
aas
add
adc
cltd
sub
push
out
vsqrtpd
sub
cmp
bswap
jmp
stc
sub
mov
sbb
jmp
add
xor
xchg
mov
and
and
push
add
outsb
add
add
xchg
adc
dec
add
mov
add
rcrl
mov
mov
push
insl
mov
add
stos
cmp
in
lock
mov
add
test
rcr
add
add
divb
jo
pop
adc
jle
fidivs
or
jbe
cmp
pop
add
add
add
outsb
add
jbe
mov
xor
and
inc
add
push
add
aad
pop
add
add
xlat
repz
add
ret
xor
pushf
mov
int3
mov
add
cmp
add
add
and
inc
add
cmp
dec
mov
lods
jmp
pushf
sub
add
jmp
and
sub
sub
je
lret
daa
dec
add
and
adc
and
xchg
mov
lret
mov
test
stos
cmp
daa
mov
add
mov
outsb
add
gs
jbe
mov
lahf
mull
xchg
add
add
sub
nop
or
jmp
add
idivb
outsb
add
sub
pop
add
adc
add
xchg
psrad
sarb
cmp
add
add
gs
mov
push
cmp
je
jae
cmpl
cmpsb
pop
and
adc
mov
jg
or
movsb
bnd
add
jle
rcrb
scas
mov
adc
xchg
pop
inc
add
sbb
sbb
in
mov
add
test
adc
add
jecxz
sub
sahf
in
adc
and
sbb
cmp
rcrb
add
ja
sbb
test
mov
add
add
bound
push
add
aas
pop
cmc
mov
icebp
and
scas
dec
add
dec
mov
inc
add
shl
ljmp
dec
add
sub
scas
or
jb
mov
add
and
push
add
jbe
lods
xlat
sub
loop
adc
scas
sti
stc
dec
pop
cmp
fstps
mov
inc
xor
push
add
or
inc
mov
xchg
popa
mov
push
nop
insb
add
add
ret
sub
out
sub
imul
add
imul
repnz
mov
push
add
js
fisttpll
and
insl
sub
inc
add
in
add
jbe
hlt
jb
mov
fcom
js
pop
int
int
add
popf
jb
fidivrl
xchg
xor
out
sub
add
cmpsb
dec
add
pop
ljmp
dec
add
add
or
mov
add
push
add
dec
add
cmc
lods
sub
jno
aam
add
aad
push
dec
add
add
add
add
mov
add
adc
push
jmp
add
sbb
shl
mov
adc
jno
push
add
add
adc
popa
loope
add
add
mov
add
or
add
jne
or
fidivrs
add
mov
push
pop
add
xchg
jb
mov
add
sarb
pop
add
add
subb
dec
add
add
cmp
add
xor
mov
add
jle
mov
xor
scas
add
push
cli
dec
orl
jno
adc
add
aad
int
lds
jns
add
out
pop
add
fadd
sbb
mov
cmp
bound
add
xchg
mov
cltd
sub
in
or
or
jb
push
lret
add
add
add
adc
or
out
sbb
mov
aas
sbb
pop
xor
add
rcrb
insb
add
pop
sbb
jne
adc
lock
test
imul
add
add
sub
mov
add
or
and
gs
rcrb
fiaddl
xchg
rolb
insl
lock
add
xor
das
push
pop
push
add
sahf
xchg
jae
and
add
mov
movsb
mov
and
push
add
pop
dec
out
cmc
aaa
jmp
std
push
sbb
jno
add
xchg
or
rcrl
mov
jno
rcr
lcall
pop
add
mov
add
ja
cmp
lock
enter
js
push
add
inc
xor
cmp
int3
cmp
sub
xor
dec
cltd
call
cmp
jmp
add
icebp
adc
or
out
test
ljmp
add
daa
jle
xchg
push
add
add
or
shlb
mov
inc
add
add
aam
or
add
inc
add
cmp
outsb
add
aaa
mov
mov
add
pop
fisttpll
push
lahf
dec
add
add
sub
sti
mov
cmpsb
enter
faddl
jmp
mov
add
push
pop
push
sbb
jns
mov
mov
add
pop
sbb
xchg
jge
dec
add
sbb
push
add
add
add
or
int
sub
jg
cltd
imul
xor
arpl
ja
mov
addr16
push
lds
xor
aam
adc
adc
rcr
stc
and
mov
add
arpl
push
add
cmp
mov
ret
sbb
cmp
jo
outsl
push
add
xchg
mov
inc
jae
insl
into
aas
fwait
xchg
aaa
sbb
sti
add
add
aaa
or
jno
fstpt
add
dec
inc
mov
add
sbb
push
add
pop
jmp
add
inc
add
xchg
add
negb
add
add
add
add
mov
add
jle
ss
lcall
xchg
xchg
repnz
arpl
mov
add
xor
sub
inc
pop
add
add
push
add
call
in
xchg
sub
add
push
add
add
lods
and
adc
add
add
or
idivb
sbb
fisubs
add
jae
add
xchg
repz
pop
mov
and
or
add
add
lea
xor
xchg
out
jg
add
add
test
faddp
or
movsl
dec
or
jbe
repnz
mov
or
push
enter
sbb
movlps
jo
pop
adc
nop
sbb
add
mov
popl
jnp
add
out
shll
lds
in
shll
scas
and
pop
add
add
enter
add
add
nop
dec
add
add
ret
lock
adc
dec
push
fcomp
insb
add
mov
mov
lock
lods
in
xor
push
and
orl
add
out
jbe
dec
repnz
push
add
addr16
fbstp
add
or
lods
push
add
jb
xchg
dec
mov
sub
ret
stos
fbld
cmpsl
cmp
das
sbb
iret
hlt
lret
mov
in
mov
add
xor
out
mov
mov
daa
xor
adc
xchg
jae
icebp
mov
adc
insb
add
out
cmp
lret
push
add
ficoml
and
sbb
pop
sub
inc
cmc
dec
fstp
mov
adc
sbb
mov
add
xchg
loop
jb
repz
inc
dec
push
roll
iret
testl
add
xlat
sbb
xchg
pop
pop
add
sub
add
jg
inc
add
sub
cwtl
xor
call
sub
add
enter
ret
sbb
add
mov
mov
push
mov
add
add
add
sub
mov
add
int
jle
add
addr16
mov
sbb
cmpsl
aad
les
add
lea
or
loop
add
add
incb
and
add
shrl
sbb
fptan
insb
add
lods
pop
in
add
add
dec
add
inc
repz
fcomp
arpl
add
add
lcall
add
xor
ret
mov
loope
sbbb
adc
ja
sbb
add
fimuls
add
repnz
lcall
add
add
push
add
enter
add
cmp
data16
cmp
leave
jp
mov
scas
pushf
push
add
mov
add
loope
imul
int
sahf
cmp
pop
add
cmpl
add
loope
pop
gs
dec
add
mov
leave
test
inc
sub
sbb
je
repnz
movsl
mov
aam
add
jmp
lret
movsb
ja
aas
addr16
pop
xor
add
jbe
pop
sbb
add
nop
push
mov
add
movsl
pop
mov
js
ja
add
sti
pushf
test
mov
mov
add
repnz
sub
mov
sbb
xchg
data16
pop
pop
repnz
imul
pushl
push
push
outsb
add
add
add
dec
add
addr16
andb
fisubl
stos
xchg
jae
lock
out
add
dec
add
add
push
int3
inc
lods
pop
add
add
push
add
add
repnz
add
add
inc
outsl
inc
add
sbb
adc
push
add
add
adc
dec
add
fsubs
or
lcall
pop
add
add
and
adc
pop
pusha
add
add
imul
sbb
adc
popf
mov
in
pushl
stc
or
xor
dec
out
movsl
fildl
sbb
pop
into
sti
ret
aad
call
arpl
add
stc
jo
mov
sbb
pop
cmpsl
and
fucomip
sub
add
add
add
nop
jl
aam
addb
cwtl
bound
cmp
aad
or
ds
mov
push
add
pop
add
xchg
movb
nop
mov
jo
out
mov
pop
add
shlb
or
pop
add
lods
add
mov
scas
popa
cltd
xor
push
add
adc
sbb
and
inc
add
popa
leave
dec
add
add
loope
push
lds
gs
mov
shll
outsb
add
add
adc
dec
add
fst
pushf
jno
mov
cmp
jp
lret
pop
xor
movsl
and
jnp
stc
cld
test
std
imul
stos
add
add
jmp
sub
clc
push
add
xor
add
cmc
inc
add
and
mov
inc
add
fmulp
shrb
into
lret
idiv
and
add
and
arpl
orl
cmp
int
sti
test
and
mov
xchg
adc
xlat
or
stos
inc
add
push
add
pop
add
add
mov
adc
ret
xor
xchg
cmp
shll
add
jl
or
clc
inc
add
pop
mov
and
push
sbb
adc
lahf
push
daa
xchg
mov
add
cmp
push
add
mov
add
add
cmp
sti
sub
fsts
movb
idivl
lret
lahf
jne
pop
add
add
add
jne
jge
cmp
pop
add
mov
or
cmp
mov
sub
adc
je
aad
push
add
cwtl
rorb
outsl
ds
lds
dec
xor
pop
add
and
add
sub
or
add
test
mov
out
add
add
loopne
lock
lds
js
ljmp
clc
jg
add
insl
inc
cmp
add
test
add
mov
movsb
dec
add
add
jae
add
mov
xor
enter
add
add
fmuls
add
mov
inc
cmc
adc
addr16
inc
ret
psubusb
or
adc
out
add
cmp
and
mov
push
sahf
xchg
pop
add
jno
dec
add
nop
loopne
rorl
dec
int
xlat
push
sti
cmp
mov
outsb
add
icebp
xchg
mov
aad
push
out
xchg
adc
ja
inc
add
and
cld
insl
lds
add
std
mov
add
mov
mov
test
dec
in
add
xchg
xchg
add
xchg
mov
cmc
fs
hlt
adc
jmp
or
add
je
xchg
jmp
add
inc
inc
add
sub
fwait
out
fisubrl
xorl
hlt
jmp
mov
and
sbb
dec
sub
xor
push
add
sub
int
fldenv
mov
add
add
daa
outsl
fisttpl
xor
sub
xchg
add
add
mov
xchg
pop
add
imul
pop
add
add
shl
aad
dec
mov
icebp
fcmovu
push
dec
add
push
add
sub
clc
add
add
les
pop
add
add
adc
mov
imul
mov
add
add
push
xor
fcmovb
roll
ja
data16
xchg
adc
xchg
mov
dec
inc
add
stc
icebp
pop
add
dec
add
push
add
dec
add
jbe
pop
pop
add
fldl
push
add
sub
imul
nop
push
add
xlat
cmp
add
cwtl
les
cmp
sub
mov
aas
insb
add
in
mov
add
outsl
push
cmp
add
test
and
add
mov
in
sub
xchg
inc
add
shl
or
cmp
pop
inc
add
push
cltd
sti
mov
and
mov
add
add
lods
or
mov
jge
add
push
add
jecxz
add
lods
das
xor
pushf
lods
inc
les
test
int
les
out
loope
lcall
jp
pop
pop
add
adc
test
push
add
xor
cwtl
icebp
jb
mov
ja
inc
add
test
mov
out
orl
add
sub
lods
sbb
add
cmpsl
ret
xchg
aaa
sub
add
in
xchg
rcr
das
pop
add
insb
add
add
xlat
ror
push
add
xor
int
jmp
cli
out
jl
aas
lods
pop
insl
mov
add
mov
dec
jmp
jmp
sbb
add
pop
das
lods
and
add
mov
push
jb
mov
add
data16
push
add
jmp
sub
add
popf
xchg
cmp
inc
add
mov
cmp
xor
cld
jge
mov
inc
add
orb
sbb
push
std
jne
clc
orb
dec
xchg
lret
pusha
add
add
mov
cwtl
pop
sub
add
push
add
pop
add
dec
jge
rcll
add
mov
arpl
add
xchg
mov
cmpsl
pop
add
add
mov
and
outsl
sbb
inc
mov
add
test
loop
mov
repz
shlb
cld
pop
add
add
andb
jns
xchg
cmpsb
call
push
add
xchg
and
enter
add
test
lret
or
mov
out
icebp
pop
add
mov
enter
mov
pop
mov
test
mov
cmp
add
xlat
xchg
clc
pop
scas
adc
sub
xchg
movsb
inc
add
add
shlb
nop
roll
add
idivb
mov
push
sub
outsl
add
out
daa
sbb
push
cmp
ret
out
stos
adc
cmp
add
add
add
test
add
add
add
add
mov
ret
or
nop
add
cmpsb
or
mov
xlat
outsb
add
add
out
leave
test
push
add
ja
mov
stc
and
das
pop
mov
push
add
subb
je
pop
sbb
dec
mov
ss
popa
xor
out
xchg
sti
repnz
mov
add
sbb
add
js
shll
pop
dec
add
out
jp
pop
add
rclb
add
hlt
mov
add
fwait
in
xchg
cmp
xchg
lods
cmp
inc
add
ret
add
stos
mov
add
add
or
xchg
rclb
add
sub
fucomp
sbb
add
pushf
sbb
add
adc
sti
enter
orl
inc
mov
pop
add
xchg
jecxz
mov
push
lods
and
inc
cmp
and
into
push
add
inc
je
int3
pop
adc
pop
add
pop
daa
push
add
lcall
daa
push
add
add
jl
hlt
push
dec
cmpsl
mov
mov
push
add
popf
dec
dec
cmpb
in
push
add
test
jbe
jle
push
and
and
lcall
mov
ja
leave
aas
movsl
and
popf
cwtl
or
inc
add
mov
cmp
ja
int
mov
adc
push
add
sahf
dec
add
add
add
ljmp
add
shrb
sub
mov
add
xor
add
icebp
xchg
jecxz
add
add
add
iret
jecxz
pop
adc
jo
lahf
and
movsl
inc
loopne
lcall
add
add
add
add
add
add
jecxz
iret
jmp
add
add
add
xor
arpl
add
enter
adc
sbb
pop
add
pop
pop
sti
inc
add
add
xchg
mov
pop
inc
add
or
or
loope
add
nop
sbbb
dec
add
adc
jne
je
xchg
dec
add
cwtl
aad
add
and
add
sub
iret
cmp
mov
add
add
adc
jne
std
test
xchg
mov
xchg
mov
add
add
mov
sbb
clc
iret
ficompl
add
add
mov
in
imul
add
cmp
add
add
adc
cmp
adcb
rcll
fdivr
sub
mov
mov
in
push
add
adc
add
and
iret
mov
jle
mov
jg
and
fisubs
jo
testl
and
jbe
stc
les
cmp
mov
je
fstl
add
xchg
out
add
or
mov
mov
sub
sbb
mov
inc
add
nop
pop
mov
push
and
das
add
push
add
ds
cmc
sbb
jae
cli
lea
xchg
xchg
xchg
inc
mov
pop
pop
ret
mov
fsubrp
push
jle
mov
mov
xchg
jp
scas
loopne
fcomp
and
mov
add
add
mov
sub
add
sti
mov
add
mov
xchg
dec
add
mov
cmp
loop
xor
rcr
testb
idivb
data16
lcall
ret
cmp
push
add
cmpsl
outsb
add
call
cwtl
cmp
add
frstor
insb
add
inc
data16
sub
ret
push
add
insl
inc
add
mov
add
dec
add
jns
cli
aaa
iret
imul
pusha
add
sbb
js
out
add
les
mov
jg
scas
mov
roll
fmuls
mov
jno
push
cmp
xor
enter
add
add
mov
out
sbb
xorl
cmp
loope
add
add
dec
adc
repz
rcl
push
add
cwtl
push
push
add
enter
add
ret
icebp
mov
mov
add
add
cmp
dec
add
add
add
xor
jmp
aad
xor
add
lods
inc
add
adc
jp
push
add
pop
add
add
addr16
sti
das
adc
xchg
insl
or
dec
cmp
rorl
dec
add
popf
stos
jnp
lea
add
mov
inc
data16
lret
insb
add
lods
adc
mov
loope
jecxz
add
push
ret
dec
add
test
das
push
add
jle
mov
add
sbb
shll
fstpl
add
arpl
insl
ret
icebp
add
arpl
frstor
add
sub
and
mov
and
push
add
or
add
add
pop
lock
add
pop
jl
mov
adc
mov
std
mov
popa
shrl
push
add
je
jecxz
hlt
test
xor
xor
jp
fdivs
add
jmp
jmp
jns
lock
jmp
fucom
pop
or
out
enter
js
push
pop
adc
lahf
push
add
je
pop
add
push
add
push
add
or
inc
out
rcrb
popf
jle
jb
ljmp
cmp
cmc
mov
add
add
repnz
xchg
or
add
dec
pop
jb
jns
add
add
add
push
add
jl
aaa
std
dec
add
add
fdivl
leave
sbb
nop
stc
rcrl
in
xchg
movlps
loopne
fidivl
mov
cmp
inc
add
sbb
cmc
mov
add
or
add
sub
xchg
aad
mov
and
popf
xor
cmc
das
cld
shl
pop
sub
pop
jns
imul
in
test
add
stos
loope
add
ja
add
lret
andl
add
mov
add
xor
add
add
add
add
jge
add
lock
jns
loope
add
popf
pushl
adc
pop
add
fidivs
push
add
aas
nop
mov
mov
inc
add
inc
add
sbb
push
add
push
add
jmp
popf
movsl
push
inc
add
add
add
add
lahf
stos
ret
add
test
int3
dec
in
sub
inc
xchg
add
je
popa
leave
adc
lock
fldenv
mov
ljmp
jno
mov
add
out
adc
pop
add
jo
add
mov
je
xchg
push
add
add
mov
std
xchg
mov
leave
jge
test
xor
cmp
and
je
mov
jb
or
push
add
rorl
and
mov
mov
call
add
and
ret
gs
jnp
adc
cli
shlb
lret
mov
add
add
add
add
add
xor
int
out
pop
testl
fstps
add
add
outsl
mov
sbb
jl
xchg
push
lock
adc
data16
add
add
add
lahf
sub
add
addr16
hlt
std
jno
and
or
shll
pop
add
sbb
bound
add
jle
mov
and
pop
jecxz
inc
sub
and
pop
adc
ret
les
xorb
add
mov
sbb
add
pushf
mov
add
int
add
in
mov
inc
jne
call
insl
push
add
add
add
add
lret
nop
clc
xor
mov
out
sbb
and
add
add
sub
mov
add
adc
sbb
lea
cmp
inc
or
add
rorl
clc
pop
add
sbbb
divps
aad
add
sbb
mov
add
add
push
add
add
fwait
push
add
aad
rclb
pop
add
cmpsl
mov
add
div
js
xor
xor
mov
sbb
das
jne
add
loopne
add
dec
add
pushf
insl
test
in
outsl
fwait
shll
mov
cmc
lea
jecxz
dec
add
jl
sbbb
imul
aas
fidivrl
add
dec
add
xchg
int3
push
stos
add
add
