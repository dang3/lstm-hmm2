insl
sbb
dec
xor
mov
test
mov
fimull
dec
pop
inc
add
add
insb
dec
ds
mov
in
cwtl
negb
into
inc
sub
jb
mov
loop
mov
mov
sarl
loopne
mov
lds
adc
mov
or
dec
xchg
in
test
or
sub
mov
add
mov
insb
pop
js
test
popa
lods
jl
jp
mov
xchg
add
jl
cmp
add
mov
js
add
in
adc
add
mov
add
mov
inc
addps
add
mov
sahf
jmp
inc
jle
xchg
sbb
aam
sbb
adc
mov
sahf
pop
pop
ljmp
mov
dec
mov
aas
push
adc
mov
mov
mov
mov
test
fsubr
cmp
scas
dec
popa
add
cmp
mov
add
incb
mov
inc
mov
out
add
jg
add
add
cmp
push
into
adc
lods
sahf
pop
movsb
adc
jmp
xor
mov
cltd
movb
xchg
testb
push
inc
mov
pop
jp
push
add
bndstx
inc
icebp
out
and
mov
jp
mov
cmc
xchg
push
popa
addl
aam
jle
xor
push
jnp
add
add
cmp
lea
adc
mov
add
mov
mov
mov
stc
iret
adc
mov
jns
cmp
inc
test
lahf
xor
mov
mov
dec
sbb
les
sub
add
orl
gs
inc
or
dec
mov
jmp
movsl
sbb
dec
sar
sbb
int
ret
or
push
das
cs
inc
cwtl
lds
xlat
cmp
jmp
cmpsb
out
jbe
add
push
pop
sub
add
mov
add
pop
mov
dec
loope
pop
in
cmpsb
push
out
mov
mov
mov
mov
mov
js
xor
cmp
je
and
mov
push
push
add
sub
je
add
add
push
int3
repz
out
jp
out
mov
inc
cmp
and
mov
add
cld
lock
jl
ljmp
sbb
jmp
dec
pop
push
fwait
stc
mov
outsl
bound
pop
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
cmp
or
push
xlat
push
add
pop
and
mov
aas
cld
adc
mov
mov
mov
sub
mov
mov
pop
inc
mov
xor
or
sub
sti
fwait
stc
add
mov
adc
mov
add
cmp
jae
repnz
imul
std
fstp
push
add
mov
fdivl
mov
add
movsb
nop
add
in
out
sub
jle
push
and
jne
leave
gs
ret
and
cld
mull
ljmp
add
push
rolb
mov
and
xchg
sub
add
jno
mov
mov
mov
jmp
mov
dec
outsb
push
popa
fidivrl
cmp
add
mov
pushf
das
mov
pop
mov
mov
mov
xor
add
leave
test
pop
push
add
add
push
or
imul
lds
and
mov
xlat
btcl
fsubrs
add
fmul
and
pushl
push
and
mov
in
sub
push
mov
add
push
pop
js
les
nop
add
lahf
cmpsb
insl
cwtl
jl
lret
notb
mov
add
rcrl
mov
cmpsl
mov
loope
add
in
jns
jno
push
add
nop
add
mov
adc
mov
push
pop
in
fldenv
add
mov
movsb
ljmp
mov
cmp
mov
add
lahf
mov
mov
jmp
mov
arpl
mov
add
icebp
out
jbe
outsl
pushf
adc
add
cmp
push
adc
cltd
ss
std
push
pop
mov
cmp
mov
rolb
jle
pop
inc
mov
pop
xchg
dec
outsb
dec
sub
jnp
bound
mov
sbb
xchg
fdivr
repnz
add
dec
fmuls
rorl
dec
cld
jle
mov
mov
cmp
inc
cltd
sbb
push
push
mov
repnz
cs
fsubl
mov
add
insb
aad
gs
ret
in
mov
pop
jne
add
out
mov
add
jp
xor
mov
mov
fldt
shll
int
mov
sahf
sbb
call
out
subl
sub
mov
cmp
mov
adc
push
leave
jns
movsb
into
xlat
les
push
or
out
pop
add
mov
add
mov
lods
test
xor
pop
sahf
into
xchg
loopne
mov
lret
push
dec
leave
call
add
sbb
add
mov
mov
add
or
shll
add
cltd
mov
mov
arpl
aaa
push
add
mov
add
add
movsl
mov
or
stc
add
inc
add
and
mov
cmc
data16
lcall
cli
cs
pop
mov
out
jbe,pn
ret
icebp
xchg
pop
fcoms
or
icebp
repz
add
lods
add
mov
in
jl
sarl
push
out
add
xchg
cmp
addl
das
inc
and
dec
es
xlat
or
bound
mov
das
inc
adc
mov
ja
push
cwtl
outsl
sub
inc
xchg
dec
movzwl
add
mov
in
xchg
test
add
push
mov
pop
aaa
lret
sbb
add
adc
jmp
add
lcall
push
xchg
leave
or
add
popf
movsl
pusha
add
cwtl
aad
mov
add
lods
lret
add
xor
mov
adc
mov
dec
cmp
lret
dec
mov
mov
idivl
test
outsl
dec
jmp
jle
push
add
mov
cmp
std
mov
or
popa
idivl
out
inc
inc
add
sahf
pop
mov
repz
push
add
dec
rolb
cli
lret
lods
aaa
mov
gs
lods
add
xchg
mov
mov
shrl
jl
stc
xor
mov
out
push
mov
mov
xchg
adc
mov
sub
sub
mov
adc
mov
popf
inc
adc
mov
jp
sahf
fsts
cltd
cmp
add
mov
movsb
cmpsl
xchg
imul
outsl
push
stc
stos
into
mov
mov
mov
icebp
insl
add
clc
sbb
xchg
sub
fcoml
mov
aad
in
lea
or
and
mov
mov
add
pop
popa
sbb
mov
mov
fadd
add
mov
test
add
mov
fwait
aaa
dec
jb
mov
jmp
fcoml
inc
and
adc
das
push
jge
xchg
add
pop
mov
in
adc
mov
jns
sti
adc
rolb
mov
xchg
mov
xchg
dec
or
ss
mov
push
add
mov
add
xor
cmp
pop
negb
add
adc
add
cmpsl
sahf
add
mov
insb
insl
dec
xor
xchg
in
mov
mov
je
xchg
pop
lahf
and
mov
scas
daa
cmp
jnp
lret
inc
sti
cwtl
jne
or
adc
add
aad
cmc
mov
cmp
jo
mov
add
rolb
imul
cmp
mov
mov
mov
lret
les
neg
sahf
out
int
mov
aas
ss
pusha
add
add
mov
pop
mov
enter
add
xchg
sub
sbb
add
sbb
gs
xor
push
add
mov
std
ss
pop
or
jnp
inc
fcomp
xor
add
jmp
add
cld
pop
sbb
outsl
scas
sub
out
rolb
cmp
pop
into
loope
xor
callw
dec
xlat
push
add
dec
ja
lds
jnp
cmp
xor
jl
mov
bound
mov
and
mov
adc
adc
mov
sub
jbe
xor
or
adc
js
test
xor
mov
fwait
jne
add
cmpsl
test
pop
jae
xor
add
xchg
add
inc
inc
lcall
addr16
add
clc
push
add
add
mov
or
sahf
sti
mov
or
test
pop
stc
ret
ja
and
add
stos
scas
adc
mov
xor
dec
mov
add
lds
xor
mov
lcall
add
enter
cs
lret
mov
lods
stc
jl
cmp
mov
xchg
mov
in
cmp
add
inc
add
or
dec
sti
add
vrsqrtss
mov
xor
mov
mov
scas
jle
sar
dec
pop
dec
ja
sub
cltd
call
popf
xlat
push
add
int3
lret
jno
add
loop
mov
test
popf
sub
sub
out
push
inc
mov
mov
mov
repz
not
sub
mul
add
fnstcw
roll
add
mov
mov
inc
add
out
je
nop
add
add
mov
lret
xchg
loope
aaa
stos
add
imul
xchg
and
or
enter
cmp
mov
mov
add
mov
pop
out
push
sub
xlat
outsl
pop
out
or
insb
outsl
test
mov
call
mov
nop
add
shrl
insl
mov
lahf
fimull
mov
mov
lret
into
mov
dec
mov
adc
ficompl
jae
jae
cmp
loope
sbb
mov
mov
or
loop
mov
xor
fcomps
and
lcall
dec
scas
test
add
inc
add
mov
mov
adc
ret
fsubs
mov
dec
jg
pop
int3
mov
adc
rolb
mov
outsb
ret
push
push
add
movsl
add
mov
jle
push
sbb
jns
add
jns
dec
cld
jl
sbbl
cld
fcoms
out
mov
mov
popw
idivl
pop
mov
and
add
xor
jp
add
ljmp
mov
dec
loopne
mov
push
add
gs
jmp
mov
insb
outsb
out
pushf
test
cs
in
daa
call
stos
cmp
scas
mov
mov
jne
sub
ja
and
mov
in
xchg
add
pop
jp
test
lea
inc
imul
cmpsb
mov
mov
cs
aad
mov
mov
inc
lock
popa
es
pop
push
xchg
ds
add
in
push
cmpsl
xchg
add
in
xor
mov
aam
xchg
cmpsb
push
call
fdivs
mov
mov
mov
jne
pop
xor
mov
xlat
add
mov
add
hlt
push
add
jae
or
cmp
outsl
xor
cmpsb
ss
jmp
mov
stc
stos
xchg
xchg
cld
aaa
aam
sbb
mov
and
iret
pop
push
sbb
pop
jo
mov
mov
mov
mov
aaa
mov
mov
lods
and
mov
int
in
mov
add
mov
outsb
bound
mov
fld
add
cmp
rolb
movsb
push
fstpt
adc
dec
and
sub
jns
mov
add
scas
out
add
push
fwait
das
xchg
pop
adc
inc
test
mov
loopne
mov
mov
inc
add
pop
jg
xchg
call
mov
fmul
cmpsb
pop
jne
xchg
add
and
cmp
cmpl
pop
and
mov
mov
add
jbe
cmp
sub
out
mov
mov
rcr
cltd
or
xlat
roll
jbe
sbb
xchg
fcmovnu
jl
sub
iret
enter
mov
mov
repnz
fbstp
mov
push
das
lods
addb
inc
fisubl
insb
leave
addb
stc
pinsrw
lock
add
push
xchg
push
add
jne
add
add
mov
js
out
pop
outsb
loop
mov
outsb
jp
lea
gs
push
mov
lods
mov
insl
cmp
addb
loope
rolb
cmpsb
icebp
and
mov
inc
jl
cmp
addb
popf
xor
mov
ljmp
je
jecxz
fst
iret
push
adc
divb
add
adc
jmp
in
push
pop
mov
sbb
lods
mov
sti
sbb
add
je
fisubrl
cmp
data16
pop
dec
stos
jbe
add
lods
out
addb
outsb
cltd
lret
mov
sahf
xlat
pop
sahf
xor
mov
test
arpl
push
xor
mov
pop
xchg
mov
dec
mov
rolb
mov
mov
mov
push
add
je
xlat
push
ja
loope
loopne
mov
int3
jle
jae
mov
call
mov
inc
add
imul
add
mov
pop
xchg
add
mov
sub
mov
add
mov
add
in
sub
add
sub
add
hlt
aam
lret
pusha
add
clc
and
mov
mov
mov
mov
sbb
xchg
add
mov
add
mov
mov
rcrl
out
pop
ja
or
cmp
in
mov
das
clc
sub
testb
addb
out
pushf
ja
cmp
cwtl
add
movsb
inc
test
and
mov
add
repz
mov
add
add
dec
dec
test
add
push
dec
les
fwait
mov
dec
mov
push
cmp
xor
sub
mov
dec
lods
sbb
xchg
pop
ja
imul
mov
push
sub
xchg
imul
mov
neg
call
xchg
in
rcll
mov
sbb
push
repz
cli
testb
inc
cltd
and
les
test
add
int3
sbb
sarl
in
sbb
push
xchg
aas
sbbl
add
add
sahf
insb
and
mov
mov
mov
add
fstpl
stc
or
mov
in
mov
repnz
mov
mov
loop
mov
mov
dec
fmuls
push
leave
sbb
jb
mov
fdivp
add
mov
add
cltd
mov
mov
mov
mov
ret
jecxz
add
dec
inc
add
mov
add
or
add
out
inc
roll
cmp
add
mov
fiaddl
mov
lds
aaa
and
mov
pop
mov
mov
dec
cmp
mov
and
stos
sbb
mov
leave
popa
test
mov
push
ret
jmp
iret
lea
add
and
mov
pusha
add
mov
mov
jp
add
sub
xor
inc
lods
xchg
out
out
jp
push
jo
mov
inc
add
lods
pop
mov
flds
add
mov
jns
bound
mov
outsl
dec
adc
das
jg
clc
fcomps
mov
fstps
pop
sub
cmc
aas
cli
fcomps
add
xor
mov
dec
adc
mov
rcll
pop
push
jnp
mov
xchg
dec
int3
cs
and
dec
shl
daa
out
mov
mov
test
add
add
pusha
add
dec
inc
movsl
mov
outsl
xor
mov
stos
pop
push
add
mov
pop
mov
addb
mov
loopne
mov
xor
push
stos
jno
imul
jb
mov
mov
pop
or
fnstenv
inc
les
mov
jnp,pt
lea
mov
pop
push
lds
mov
cmp
out
ss
cld
cmp
mov
sub
in
add
add
add
or
mov
add
mov
jl
nop
add
int
sub
dec
fadds
push
sub
jnp
scas
dec
or
stos
in
adc
rcll
mov
inc
mov
mov
adc
mov
leave
addb
and
mov
add
cmp
add
dec
aam
lret
xchg
lahf
adc
mov
out
loop
mov
add
xor
loope
mov
pop
stos
or
pop
dec
popf
pop
rolb
mov
mov
add
mov
xlat
aaa
cmp
addr16
ret
xchg
adc
add
add
jmp
add
push
add
push
test
fbstp
std
stos
jno
add
gs
scas
je
adc
mov
xor
mov
pop
push
lahf
ljmp
jmp
push
ret
movsb
repnz
xchg
jns
push
xchg
gs
xchg
or
sbb
xor
push
mov
jmp
lods
stos
lahf
add
movsl
xchg
bound
mov
mov
add
out
adc
cmpsb
mov
cmpsb
clc
sbb
push
add
jg
push
sbb
in
sub
popa
rolb
pop
cmovl
add
add
adc
fidivrs
popf
cmc
adc
jecxz
add
idivb
pop
xchg
sbb
aas
mov
inc
add
lea
jae
add
xor
mov
fstpl
cs
mov
aas
xchg
insb
test
dec
inc
add
or
add
xor
mov
xor
and
test
sbb
inc
add
mov
in
push
lret
mov
repnz
movsl
xchg
add
mov
test
loopne
mov
bound
mov
jg
add
stos
add
dec
mov
jno
sub
push
jle
ret
sbb
xchg
mov
or
mov
sub
xor
add
xchg
out
inc
inc
mov
mov
imul
outsl
or
test
scas
mov
mov
add
es
mov
addb
in
mov
mov
or
add
inc
sbb
out
mov
mov
cs
movups
add
push
enter
mov
add
insb
rolb
mov
mov
xlat
pop
test
ret
and
out
jns
dec
jbe
jno
mov
jno
add
dec
push
jne
orl
mov
mov
add
mov
lcall
add
mov
mov
jno
ja
int
call
divb
mov
fwait
adc
cmp
jmp
jno
jo
mov
add
outsb
xor
hlt
sbb
lret
and
pop
aad
sti
pushl
cmp
or
mov
and
lcall
movsb
dec
out
xor
mov
sub
cmpsl
sub
sbb
fsubs
fsubrs
loope
cmp
jecxz
add
pushf
aas
jmp
mov
mov
push
xor
mov
iret
arpl
adc
frstor
mov
add
xchg
test
push
jl
insl
arpl
popf
aam
add
mov
push
push
cmc
cs
cmp
fnstcw
nop
add
and
cli
jp
fcoml
fwait
pop
stos
leave
push
push
ret
popa
ja
aaa
dec
inc
jae
add
xor
push
mov
in
cltd
or
mov
lods
xchg
inc
mov
mov
int
dec
lahf
xor
test
push
stc
cmc
jmp
pop
push
popf
vmwrite
and
mov
add
mov
rorl
fwait
add
mov
inc
add
sbb
push
call
sbb
jp
sbb
add
add
stc
or
dec
sti
pop
mov
mov
sub
shrl
push
fldt
hlt
jmp
aas
addb
add
mov
out
aad
filds
pop
into
leave
stc
jle
insl
pavgw
test
inc
add
jmp
xchg
add
lock
jnp
push
sub
and
sbb
add
scas
es
cmpsl
xchg
lret
push
xor
mov
enter
xchg
loop
mov
add
add
mov
mov
sub
add
add
das
inc
iret
mov
addr16
or
test
add
mov
in
add
adc
mov
in
lea
addr16
aad
add
cmp
or
sub
mov
ss
sub
imull
cld
and
add
es
das
decl
xor
mov
xchg
scas
aam
mov
mov
pusha
add
inc
xor
pop
int
lods
arpl
add
mov
lcall
ds
out
push
fnstenv
cwtl
mov
movsb
cmc
sbb
add
test
jne
mov
xchg
lahf
or
sbb
pushf
jno
xchg
dec
imul
dec
or
push
inc
add
push
mov
fs
bound
mov
add
add
add
arpl
xchg
inc
mov
in
in
cmp
mov
lret
out
xchg
add
int
imul
and
mov
sub
push
or
pop
imul
push
xor
push
xor
mov
pop
cmp
jecxz
sti
popf
scas
daa
sahf
adc
mov
mov
xor
punpckhbw
mov
add
fnsave
outsb
dec
adc
mov
jns
call
add
addb
addb
rolb
mov
or
icebp
jge
pop
push
fisttps
cmc
fmul
dec
mov
push
xlat
cmp
xchg
je
add
add
jnp
sbb
mov
inc
add
mov
pop
jl
test
mov
adc
mov
into
sti
stos
je
cli
lea
insl
or
pop
inc
repnz
fildl
add
aam
jge
jne
cmp
add
jecxz
orl
rolb
mov
xor
mov
inc
sub
stos
lock
stc
add
mov
jmp
jb
mov
pop
sub
jb
mov
xorl
fcomps
fwait
fwait
idiv
xchg
xor
insl
out
jp
cmp
ficompl
inc
dec
inc
enter
sub
out
ret
cwtl
in
aad
add
lods
cmp
aad
inc
call
mov
adc
js
or
adc
add
ret
mov
adc
mov
in
lret
mov
nop
add
add
add
xor
aaa
loop
mov
rolb
jne
addb
cs
or
ljmp
mov
int
mov
mov
inc
sub
into
cmp
clc
cmpsl
je
mov
jl
cli
mov
mov
xchg
es
xchg
daa
int3
in
jmp
xchg
ret
in
push
iret
push
and
cs
adc
jge
out
divl
jl
test
fiadds
inc
or
add
insl
mov
mov
mov
lahf
jmp
add
mov
add
mov
jbe
daa
test
repz
mov
add
mov
dec
jmp
push
pushf
aas
xlat
test
pop
data16
out
xor
mov
push
icebp
rolb
mov
push
push
adcl
mov
inc
add
cmp
xchg
add
mov
add
mov
mov
and
add
jl
imul
fcmovbe
pop
dec
mov
rolb
mov
sbb
out
jmp
jnp
hlt
popa
mov
imul
out
add
cwtl
bound
mov
mov
dec
mov
mov
aam
stos
sub
aam
int3
test
fisubrl
lret
out
int
add
or
ds
adc
cltd
int
add
and
clc
in
mov
into
cs
jecxz
add
jbe
outsl
lret
lods
xor
mov
daa
push
add
pop
repnz
add
mov
cmp
add
mov
addb
sbb
mov
loopne
mov
sub
mov
sbb
pushf
les
in
xlat
int3
bound
mov
mov
jae
push
cmp
iret
test
xchg
cltd
add
mov
pop
int3
jmp
xor
inc
add
fiadds
add
mov
rolb
mov
jbe
dec
fstpl
mov
push
push
ja
cmp
push
cmp
mov
jne
pusha
add
add
cmp
fwait
cs
das
leave
rolb
mov
out
add
in
mov
or
xor
add
mov
arpl
add
xor
mov
mov
cli
and
add
add
insl
and
mov
les
push
add
add
ljmp
ret
rolb
mov
mov
mov
xchg
loopne
mov
pushf
fmuls
add
xchg
jno
std
nop
add
sbb
inc
out
arpl
push
movsl
flds
loopne
mov
lcall
roll
cs
add
mov
in
xchg
or
add
mov
out
imul
das
into
add
xchg
cwtl
jns
jo
mov
inc
mov
and
mov
add
test
pop
scas
dec
scas
sbb
testl
or
push
fisubrs
push
fs
mov
call
add
cmp
and
das
enter
ds
or
fnstcw
inc
int
sar
sub
add
sti
mov
xchg
out
add
add
maxps
loop
mov
jge
xchg
bound
mov
add
xchg
add
add
into
fs
and
mov
js
sbb
add
out
xor
xlat
sub
stos
addb
mov
data16
js
jno
mov
pop
sub
mov
pop
dec
fnsetpm(287
xchg
sub
add
add
sub
fwait
mov
mov
mov
ljmp
cmp
mov
scas
es
xor
in
add
mov
mov
cmc
addb
lods
imul
int3
dec
fldenv
push
jno
add
add
lcall
push
int
add
add
mov
rcl
addb
mov
add
fs
lock
add
dec
stc
imul
cmp
mov
sbb
add
jae
jbe
adc
mov
mov
cmp
addb
mov
les
int
xchg
add
push
daa
cld
push
lock
jmp
aad
das
test
sbb
mov
mov
movsb
mov
mov
mov
push
notl
into
inc
ja
sbb
pop
aaa
nop
add
add
mov
mov
lret
sbb
adc
add
roll
jo
mov
and
inc
push
add
add
add
jge
stc
fistps
xchg
jns
jmp
out
add
mov
add
mov
or
mov
mov
mov
add
add
fisttpl
jmp
fdivrs
sbb
xchg
pop
in
mov
mov
repz
adc
cli
ror
pop
inc
mov
imul
mov
std
dec
lret
mov
mov
add
mov
or
mov
push
add
inc
arpl
lods
test
add
and
add
mov
mov
mov
inc
add
add
mov
mov
lock
stc
test
add
mov
dec
nop
add
dec
std
clc
sbb
fwait
into
cmp
mov
int3
pop
pop
icebp
je
test
pop
aaa
fnstcw
mov
popf
repnz
in
out
xor
sub
mov
inc
add
push
sti
enter
or
xchg
and
sub
mov
loope
add
aaa
jnp
imul
mov
rolb
mov
in
rolb
mov
push
push
dec
cmp
dec
dec
jns
lahf
das
mov
pop
or
mov
xchg
inc
cmp
push
aaa
roll
mov
add
rolb
mov
add
mov
dec
dec
clc
dec
fs
sahf
lea
jne
ja
mov
add
mov
mov
add
push
sub
add
mov
add
add
pop
sbb
stos
sub
adc
cltd
pop
and
add
lods
in
jge
div
push
inc
and
mov
fs
pop
jge
mov
mov
roll
out
cmpsb
pop
addb
jmp
insl
push
lods
arpl
add
mov
sub
ret
mov
cs
jecxz
mov
mov
mov
sbb
sub
add
dec
dec
add
mov
fisubrl
add
add
add
mov
add
mov
jnp
add
push
adc
gs
pusha
add
loop
mov
jmp
lea
and
out
pop
sbb
push
movsb
or
mov
mov
mov
lds
xor
add
andnps
jnp
pop
pop
ret
xor
mov
gs
cwtl
inc
test
pop
movsl
push
outsb
and
add
xor
push
add
add
mov
mov
push
sbb
sbb
mov
add
test
js
add
add
add
add
add
or
insb
inc
add
xor
cltd
jb
mov
lahf
pop
int
filds
add
stos
rorl
add
dec
or
add
mov
outsl
lret
and
mov
outsb
repnz
fists
imul
gs
xchg
gs
mov
movsb
lahf
es
loopne
mov
jmp
lea
jl
fsub
add
add
sahf
js
fcmovne
fcoms
adc
mov
add
lcall
mov
addb
jg
pop
jno
mov
cmp
xchg
jae
add
mov
add
lea
ds
mov
leave
mov
mov
add
add
ds
inc
add
add
cmpsl
rep
mov
mov
or
add
push
in
dec
aas
popa
jmp
push
and
mov
mov
out
pop
das
adc
dec
xchg
pop
xor
mov
xchg
in
mov
ret
cmpsl
arpl
mov
push
pop
mov
addb
popa
pop
add
jne
dec
lods
add
mov
aam
pop
or
hlt
adc
jmp
jno
push
or
xor
dec
addb
jl
add
add
push
add
mov
dec
outsl
fmul
jb
mov
add
push
and
mov
cld
jo
mov
jle
addr16
flds
jl
faddp
les
xchg
daa
movsl
push
lcall
add
mov
mov
negb
mov
xchg
lock
aas
fistpl
fcmovbe
add
xor
inc
iret
mov
dec
and
addb
lods
scas
out
subl
fisubrs
loopne
mov
jb
mov
add
mov
lret
mov
mov
jo
mov
nop
add
lret
sbb
mov
dec
mov
mov
add
andl
pop
inc
push
or
mov
mov
jo
mov
or
popf
pop
xchg
fwait
mov
sub
xchg
add
lahf
xorl
cwtl
adc
sbb
inc
adc
mov
addb
imul
mov
cltd
pop
sbb
addb
cmpsb
add
push
mov
mov
ds
add
mov
lods
fwait
dec
jmp
or
add
in
insb
fsubrl
add
loopne
mov
cmp
add
mov
xchg
inc
pop
dec
out
mov
sbb
popa
scas
imull
je
push
or
jg
add
sub
cmp
mov
into
mov
mov
stc
lret
mov
push
jle
push
add
daa
cmp
ljmp
xchg
int3
scas
mov
mov
mov
inc
pusha
add
mov
xchg
pop
stos
les
add
add
jb
mov
test
int3
std
mov
mov
xor
mov
dec
gs
add
push
add
push
out
adc
mov
mov
and
jnp
mov
cmp
dec
jg
jb
mov
add
add
xchg
sbb
xchg
sbb
mov
add
xchg
mov
das
in
mov
mov
add
mov
push
repz
add
test
jns
aaa
mov
cmp
add
aas
add
mov
add
mov
sti
mov
popa
adc
xor
mov
sub
dec
leave
rcrl
iret
decl
add
scas
loope
lahf
or
das
ja
lds
mov
add
std
add
jmp
stc
ret
enter
addb
mov
add
lcall
and
mov
mov
scas
inc
add
sbb
cmp
data16
movsl
add
mov
addb
loope
sub
jecxz
add
add
mov
sbb
repz
sub
mov
cld
test
jle
lret
popf
inc
push
out
mov
push
add
mov
add
mov
nop
add
adc
inc
add
arpl
pop
aaa
std
add
xchg
xchg
add
inc
xchg
mov
mov
movsl
aam
jo
mov
jo
mov
dec
mov
cltd
add
mov
mov
add
in
sbb
jmp
add
mov
scas
pop
inc
jb
mov
add
mov
mov
icebp
sahf
repnz
pushl
mov
xor
mov
adc
xchg
std
mov
cs
mov
mov
shll
add
mov
jo
mov
jg
add
sbb
add
add
rolb
mov
and
mov
pop
or
inc
fisttpll
mov
dec
jb
mov
call
add
cmp
pushf
cmp
fsubr
ljmp
jecxz
bound
mov
mov
js
test
es
sub
cltd
jmp
xchg
sahf
cmc
sbb
icebp
sbb
add
mov
add
inc
cmp
xchg
mov
xchg
jnp
mov
ja
cmp
jg
jns
lcall
mov
addr16
rolb
mov
in
lods
inc
push
sub
cmc
insl
imul
add
xor
mov
sbb
jbe
or
dec
rolb
mov
ljmp
pop
fstps
cli
mov
mov
lock
test
int
out
or
ja
leave
pop
jne
push
mov
add
sti
daa
jb
mov
mov
repz
pop
subl
dec
pop
push
mov
sbb
jbe
cmpsb
mov
cmc
jmp
xchg
add
add
dec
xchg
inc
add
mov
add
aam
call
int
adc
push
daa
ds
inc
add
mov
mov
push
add
add
js
cs
pop
enter
pop
rolb
mov
mov
jle
xchg
add
in
aas
cli
push
je
inc
add
insl
xchg
test
add
xor
mov
mov
add
jae
add
addr16
inc
add
xchg
addl
mov
add
mov
or
add
mov
imul
xor
into
scas
in
int3
sbb
mov
xchg
aam
cmp
inc
add
mov
adc
mov
pop
xchg
xchg
sbb
jo
mov
movsl
lea
inc
xchg
xor
jl
add
fdivs
lods
ret
mov
mov
mov
add
fsub
jns
fiadds
mov
pop
test
mov
mov
fcomp
jl
outsl
inc
add
out
push
add
inc
cltd
test
pushf
add
mov
cli
imul
or
add
add
roll
jbe
inc
add
add
push
add
push
out
cmpsb
test
add
mov
add
xor
and
add
mov
or
nop
add
adc
cmp
add
xchg
pop
mov
repnz
in
xor
aas
call
or
fsubrp
mov
mov
sti
repnz
cmpsb
rcll
mov
and
mov
adc
leave
pop
cwtl
aas
inc
add
repnz
or
pop
ficompl
in
fiaddl
ds
test
jge
dec
xor
cmp
mov
mov
add
push
adc
mov
test
aas
outsb
hlt
idivb
add
add
les
sub
push
aaa
je
add
mov
movsl
ret
loope
int
adcl
mov
and
add
and
into
xchg
pop
fistpll
movsl
adc
lods
push
test
std
test
int3
aaa
stos
or
jmp
shl
adc
mov
hlt
sbb
inc
push
pop
sbb
cmpsb
aas
test
jecxz
add
prefetch
add
mov
add
xor
mov
add
ret
xchg
xlat
push
fcompl
js
add
int
push
push
mov
cltd
in
inc
pop
in
add
sub
add
add
in
lods
iret
xchg
push
add
inc
pop
mov
add
mov
test
jp
rolb
mov
add
xchg
das
js
arpl
rolb
fs
lods
jg
mov
ror
xchg
fwait
dec
push
jae
xchg
imul
mov
mov
scas
cwtl
int
add
add
adc
mov
mov
mov
lret
mov
push
jp
cli
mov
or
push
lahf
pop
int
pushf
pop
imul
and
mov
cmp
and
inc
pushf
nop
add
decb
push
dec
mov
jmp
and
mov
movsb
push
add
adc
mov
or
cld
cmp
fwait
mov
inc
dec
mov
xchg
pop
bound
mov
pop
or
repnz
icebp
ja
cmc
mov
out
out
nop
add
lods
cmp
push
add
movsb
push
out
lea
loope
int
outsb
adc
shll
pop
pop
and
mov
fiadds
sub
addb
aaa
dec
sub
cmp
or
xchg
and
add
cmp
push
add
fistps
mov
test
pop
mov
mov
or
rolb
rolb
mov
adcl
sub
addb
push
cwtl
adc
test
jno
sbb
pop
movsb
cmp
in
xchg
lea
pop
gs
inc
jae
fildll
pop
aad
push
stos
stc
jbe
adc
addb
xor
mov
add
mov
adc
mov
fld
add
push
add
add
jnp
ljmp
imul
mov
enter
cmp
inc
sbbl
out
sub
loope
add
stc
xchg
pop
jb
mov
push
pop
jg
and
mov
sbb
dec
or
mov
or
add
jecxz
sub
pushl
loope
mov
hlt
mov
xchg
or
cmp
adc
mov
add
test
add
jne
or
cmp
push
add
pushf
ret
daa
sti
pop
mov
insb
mov
scas
scas
push
scas
lods
push
ss
aaa
popa
push
stos
pop
push
lds
or
iret
aas
push
fisttps
mov
stc
mov
lods
inc
add
scas
mov
xor
fcmove
and
mov
cmpsl
jns
add
mov
pop
push
dec
std
ret
sbb
add
jb
mov
add
add
add
mov
out
pop
sbb
mov
clc
push
add
insl
inc
add
adc
lahf
mov
stc
and
cmp
dec
jno
lods
movsl
aad
xchg
or
ret
mov
sahf
xchg
repz
pop
jmp
fisttpl
cmpsl
fdivs
sti
adc
mov
fistl
mov
sub
inc
push
dec
pop
adc
mov
lods
mov
bound
mov
adc
add
push
imul
int3
pop
jle
fwait
mov
fnstsw
mov
mov
jle
mov
push
sbb
push
add
mov
mov
xor
mov
lahf
sti
push
mov
mov
mov
fistl
jecxz
add
mov
add
out
push
add
add
insl
mov
js
or
pop
test
sub
xor
jo
mov
shl
pusha
add
aam
out
xlat
mov
aam
pop
es
dec
add
mov
and
pop
pop
lock
add
lock
mov
add
cmp
add
lea
insl
insl
and
mov
fsubrl
imul
in
dec
sbb
mov
ljmp
in
pop
fdivrs
xor
loop
mov
es
int
fildl
pushf
sub
icebp
mov
pop
add
mov
push
int3
not
lcall
jp
gs
ss
imul
mov
aaa
test
jae
or
cmp
adc
fldt
sub
hlt
or
mov
int
push
repnz
insb
es
mov
add
outsb
lds
stc
in
inc
add
test
inc
cmp
outsl
mov
ss
add
mov
repz
into
and
sub
out
push
or
std
addl
cli
jp
pop
mov
pushf
and
mov
dec
ret
pop
int
dec
jo
mov
xchg
add
add
addb
mov
cld
fstps
in
movsl
jno
repnz
mov
pop
movsl
adc
mov
int
push
stos
sub
mov
mov
mov
push
sub
ds
addb
out
loope
dec
push
pop
outsl
mov
dec
and
mov
push
addb
mov
mov
pop
aam
add
pop
lret
xor
out
lods
aad
lret
outsl
popf
test
aaa
lahf
in
sbb
fcompl
bound
mov
pmaxsw
mov
add
add
cmp
xorl
mov
dec
pushf
adc
mov
cmpsl
sub
insl
jl
ljmp
adc
and
add
leave
nop
add
dec
faddl
fcompl
lods
cld
xchg
cmpsl
testl
inc
add
bound
mov
xchg
pushf
sbb
mov
or
lret
sub
pusha
add
lcall
mov
sbb
roll
add
cmpsb
jp
sbb
and
add
or
addb
jnp
dec
mov
adc
mov
das
dec
testb
stos
adc
mov
mov
and
mov
repnz
mov
inc
and
orl
add
push
pop
push
add
and
pop
fs
insb
xchg
add
jge
add
add
rolb
mov
negb
test
cmc
es
in
pop
insb
xor
push
out
cmp
dec
push
or
mov
add
pop
xor
jmp
sub
mov
adc
mov
mov
pop
push
jecxz
add
xchg
mov
outsb
dec
hlt
push
add
mov
js
jmp
mov
mov
scas
aas
cmp
add
fistpll
int
add
sbb
add
jg
xchg
add
sti
imul
mov
mov
jl
sbb
and
mov
add
mov
mov
xor
add
push
cmp
out
imull
add
jnp
rolb
mov
das
bswap
and
sub
aaa
fmuls
out
inc
cld
icebp
mov
int3
faddp
add
sub
add
cmp
sbb
mull
mov
jg
jnp
divb
mov
dec
js
mov
mov
add
mov
clc
xchg
test
inc
or
xchg
mov
test
mov
lock
dec
int
sti
and
xchg
repz
mov
add
mov
mov
and
mov
arpl
loope
push
addb
fmull
mov
add
inc
mov
jns
mov
dec
add
rol
add
cmp
and
pop
jbe
dec
mov
push
mov
fs
rcll
add
mov
mov
loopne
mov
push
mov
dec
jno
inc
stos
pop
addl
add
xor
mov
push
mov
add
divl
mov
popa
cmp
repz
add
mov
push
mov
mov
stos
cmpsl
lock
xchg
push
or
add
mov
mov
dec
movsb
in
mov
pop
ficoms
add
pop
mov
cmpsb
dec
loop
mov
dec
dec
leave
cld
push
cmp
add
fdivrp
mov
adc
mov
jg,pn
in
jge
xor
data16
mov
fbstp
rcl
dec
push
adc
pop
lret
fsubl
bound
mov
xchg
xor
mov
pop
xor
mov
push
lods
sub
cmp
lock
pop
pop
and
addb
std
js
imul
inc
xchg
sbb
mov
add
push
mov
cmp
sbb
mov
xchg
push
cmp
add
adc
insl
mov
call
dec
adc
cmpsb
mov
push
mov
dec
sub
or
fs
adc
hlt
repz
cmpsb
mov
cmp
pop
pop
rol
add
in
push
sbb
pop
dec
pushf
lods
sbb
add
add
and
out
and
add
ja
jp
sbb
mov
lret
in
dec
sarl
pop
enter
test
jecxz
sahf
mov
sti
inc
movsl
imul
rcrl
mov
mov
mov
xchg
add
add
jo
mov
xor
push
mov
mov
sbb
hlt
sbb
mov
rcrl
jb
mov
aam
add
mov
add
adc
cmovg
movsl
lcall
inc
cmpsl
insb
and
and
mov
adc
mov
cmc
neg
jno
add
ljmp
mov
pusha
add
mov
sub
jo
mov
lret
out
sub
add
mov
cld
pop
pop
daa
xchg
leave
push
jae
js
cltd
pop
fadd
and
mov
fcmovb
pop
decl
clc
addl
adc
pop
insl
fistps
outsb
and
shll
push
pop
xor
add
pop
dec
arpl
jno
add
sti
mov
iret
test
addr16
fs
jbe
mov
add
mov
push
push
dec
jmp
or
push
shll
rolb
mov
add
mov
add
les
add
dec
mov
mov
out
xchg
add
inc
xor
popa
jmp
rorl
int
outsl
mov
add
movsl
or
xchg
xor
mov
out
cmp
mov
fidivl
add
pop
push
jecxz
cld
xor
mov
dec
bound
mov
add
cld
dec
movl
sub
or
mov
or
addb
fwait
jns
add
add
add
xchg
or
xchg
mov
mov
xchg
cmp
jmp
sub
loop
mov
mov
lcall
mov
mov
add
xor
mov
push
and
mov
dec
out
int3
cmp
loopw
mov
addb
xlat
fucomip
leave
xor
mov
ret
xchg
xor
add
movsl
jmp
xor
mov
xchg
sbb
nop
add
fsubrl
sbb
or
xchg
xor
rolb
ret
inc
pop
cmc
mov
cmp
fistl
mov
sub
fs
xchg
ficomps
inc
add
mov
push
test
lret
mov
xchg
add
stos
adc
lock
and
sub
pop
lea
mov
lods
aas
or
add
jb
mov
lahf
cltd
mov
mov
ret
adc
adc
mov
loop
mov
add
enter
mov
sbb
add
add
sub
iret
pusha
add
aam
shll
push
add
mov
add
hlt
pop
dec
sarl
loope
sub
pop
sti
fwait
xor
loope
loopne
mov
add
hlt
or
add
mov
subl
mov
sub
rcr
call
mov
push
mov
les
cwtl
fnstcw
push
push
pushl
ss
ds
movsl
mov
mov
jl
add
add
cmp
mov
pop
xor
loop
mov
pusha
add
mov
test
xor
mov
xor
sbbl
cmc
push
add
jb
mov
jb
mov
inc
mov
add
outsb
dec
sub
stc
js
lock
or
lahf
inc
push
fadd
push
adc
mov
mov
mov
mov
iret
iret
jg
cmp
add
loope
add
mov
cmp
push
in
or
aam
pop
cmc
loopne
mov
add
mov
mov
add
mov
push
push
lea
mov
shll
pop
pop
gs
xchg
dec
hlt
in
sbb
push
dec
das
mov
filds
loopne
mov
lcall
rorl
push
add
adc
add
je
xor
push
mov
rorl
adc
mov
into
test
clc
pop
mov
in
push
add
or
test
cmpsl
xchg
add
fs
lret
scas
out
mov
sub
add
jecxz
dec
cmpsb
in
fcmovnb
add
fldenv
mov
dec
cmp
add
add
add
sub
pop
jg
or
lock
or
jmp
popf
adcl
loope
adc
es
xchg
dec
push
and
pop
jge
in
inc
add
mov
sbb
int
push
aaa
xlat
jbe
jno
push
lods
inc
add
xchg
lahf
inc
add
mov
addb
mov
mov
cmp
cs
xchg
in
lock
sbb
rolb
out
mov
cmp
cmp
test
inc
add
popf
jl
add
xchg
movsb
push
adc
mov
mov
stc
mov
into
mov
pop
fistpll
push
dec
mov
push
out
lahf
mov
mov
mov
stos
mov
push
add
stos
and
inc
mov
lods
xor
fmuls
pop
lea
add
mov
pop
and
mov
xor
lea
cmp
repz
add
mov
mov
jl
into
mov
push
jae
jae
add
dec
test
scas
mov
add
xchg
les
punpckhbw
insl
add
add
mov
dec
imul
fcoms
adc
mov
mov
mov
jae
add
or
rolb
mov
in
add
pop
je
stc
xor
xchg
stos
cwtl
lods
sbb
sbb
add
xchg
es
inc
repz
add
pop
test
add
add
adc
mov
mov
add
push
dec
xchg
add
mov
jo
mov
imul
cwtl
push
adc
mov
add
and
mov
cmp
fcoml
add
rcll
sbb
scas
sbb
add
js
add
das
or
sub
xchg
sbb
js
dec
call
pop
push
or
add
lods
je
adc
add
add
add
ljmp
or
clc
mov
mov
mov
cmpsl
push
rolb
mov
scas
lahf
xlat
scas
pop
xor
scas
fdivs
fdivrl
hlt
pop
mov
mov
mov
dec
pop
stos
dec
mov
fists
add
cs
inc
dec
xchg
and
mov
add
add
ja
mov
add
mov
add
pop
mov
mov
push
mov
jl
pusha
add
pop
int
lds
clc
aaa
push
hlt
fwait
jo
mov
xor
mov
mov
or
lods
push
int
addl
dec
nop
add
mov
sub
or
cmpsb
loope
dec
imul
insl
bswap
rolb
mov
pop
add
sbb
mov
mov
sub
add
fsub
add
scas
fstl
mov
mov
out
ljmp
mov
mov
je
jp
and
lret
adc
mov
das
mov
pop
mov
mov
mov
popf
js
inc
push
add
cmp
mov
loope
jl
add
inc
aam
out
fdivrl
mov
mov
data16
jb
mov
cmp
fidivs
jmp
pop
or
mov
ja
loopne
mov
loopne
mov
add
adc
iret
ret
pop
cwtl
enter
pop
aam
iret
sti
mov
and
mov
jmp
fdivrl
add
mov
cmc
push
add
add
das
clc
idiv
mov
add
int3
iret
fs
mov
mov
mov
in
dec
push
jns
sub
fists
mov
jo
mov
push
mov
jb
mov
das
xor
push
mov
or
mov
pop
cs
mov
rolb
push
add
rcrl
jmp
cmpsl
lods
jne
ret
fwait
je
js
leave
pop
stos
jg
sub
jnp
daa
aaa
cld
xchg
add
mov
mov
imul
imul
mov
stos
cmp
mov
out
add
add
add
mov
outsb
test
adc
mov
mov
enter
mov
inc
pop
lea
add
mov
divl
mov
lock
idivb
rolb
ficoms
mov
add
mov
add
add
inc
add
fcomp
xchg
add
movsl
fwait
out
test
bound
mov
add
xchg
in
rolb
mov
sub
hlt
xchg
mov
push
cmc
jb
mov
fisttpl
ret
aam
jno
int3
sbb
leave
push
sub
ss
hlt
xor
add
push
stos
aam
sbb
add
lds
das
movsb
adc
iret
pushf
push
adc
xchg
scas
insl
sahf
faddl
mov
test
mov
or
mov
adc
ss
out
xor
mov
mov
rolb
rolb
mov
fsub
test
mov
mov
rolb
lods
addl
sahf
inc
enter
jbe
fs
jg
call
or
sbb
mov
xchg
int
and
mov
in
movsl
pop
gs
stos
gs
add
or
pop
sbb
add
xchg
xor
clc
in
inc
push
push
add
jmp
mov
jp
mov
cmp
add
mov
mov
mov
mov
test
push
xchg
push
xchg
add
add
mov
repnz
jne
sbb
adc
mov
mull
test
mov
adc
stc
shll
add
xchg
loopne
mov
add
pushf
inc
xchg
mov
fs
mov
out
lds
shll
xchg
pusha
add
add
sbb
aad
mov
ss
cmp
dec
jno
pusha
add
cmp
test
cmp
fnstsw
adc
hlt
pop
mov
mov
sbb
test
mov
xor
mov
pop
mov
jo
mov
add
add
jns
ds
fisttps
add
imul
push
cld
or
add
lcall
mov
mov
push
sub
push
mov
push
jl
pop
rolb
ljmp
mov
mov
mov
add
mov
imul
add
int
mov
mov
add
addb
sbb
add
cmpsl
pop
insl
push
sbb
adc
dec
lods
mov
mov
lods
cmp
xchg
shll
push
addb
xchg
cmp
mov
mov
nop
add
add
sub
push
add
mov
sbb
add
gs
idivl
push
jne
mov
addb
xchg
add
sub
fnsetpm(287
outsl
push
lds
add
jae
or
jg
and
or
insb
addb
sbb
fsubrl
add
shlw
mov
in
into
in
cmp
add
mov
cli
insb
lods
rolb
mov
movhps
add
cld
aam
mov
add
fstpt
lods
xlat
mov
and
mov
pop
cld
mov
jecxz
push
jp
jne
jle
mov
add
aas
xor
mov
jne
add
cmp
cmp
xchg
push
loopne
mov
pop
fisubrs
test
adc
mov
adc
push
hlt
cwtl
loopne
mov
push
adc
dec
adc
ficoms
mov
xor
rolb
hlt
pop
popf
out
mov
add
xchg
pushl
loope
call
daa
sub
dec
pop
pop
ljmp
and
mov
add
xchg
adc
mov
fsubrl
ds
xchg
add
out
enter
add
into
sahf
imul
fnstenv
jl
sub
dec
lret
fldcw
lock
xchg
in
add
push
data16
mov
push
jae
cwtl
in
ljmp
or
sbb
push
sti
pop
or
xchg
jb
mov
add
mov
dec
cmp
xor
add
addb
movsl
pop
sahf
mov
out
mov
out
add
sub
inc
roll
jg
add
in
out
jg
movsb
ss
rolb
mov
popa
inc
xor
dec
inc
fwait
jno
mov
mov
add
jo
mov
sbb
aaa
cmp
gs
pop
dec
test
push
mov
inc
inc
roll
pusha
add
mov
sub
pop
cmp
hlt
test
mov
jnp
add
mov
nop
add
cmp
fcmovnbe
and
jne
lahf
lock
mov
push
negl
inc
out
add
mov
xlat
push
lods
jns
push
pop
xor
push
daa
rolb
int3
cli
loop
mov
scas
cwtl
bound
mov
addb
das
sahf
into
pop
or
xor
xchg
lea
mov
add
mov
lock
test
loope
mov
push
jge
imul
ret
shr
jecxz
mov
mov
mov
pop
sbb
add
or
call
movsb
in
mov
sbb
push
test
add
mov
adc
pop
mov
mov
add
lods
jae
int3
mov
sub
mov
mov
or
pop
inc
jne
add
mov
xchg
ret
xchg
in
ret
arpl
fwait
je
add
jne
jmp
dec
inc
or
sub
sbb
fcomps
push
jnp
cmp
dec
and
dec
mov
mov
jg
cmpsb
xchg
pop
push
add
jl
cmp
push
inc
and
lret
push
ljmp
xchg
xor
mov
ret
sbb
scas
jno
clc
jmp
lods
push
fs
mov
mov
lahf
fiaddl
add
popa
sbb
cmp
ljmp
into
nop
add
shll
sbb
mov
jp
shrl
pop
daa
or
add
addb
cmpsl
in
add
lcall
rolb
jge
push
jno
test
rolb
test
mov
and
mov
jl
add
mov
xlat
outsb
les
mov
mov
inc
xor
mov
xchg
dec
dec
fildll
jecxz
mov
and
das
sbb
jl
clc
call
pusha
add
cmpsb
stos
gs
pop
xor
mov
rolb
mov
pop
outsb
push
push
mov
scas
push
mov
push
add
jne
push
add
dec
rolb
mov
add
sbb
xor
dec
jge
sahf
xchg
inc
rcl
ds
mov
pusha
add
jbe
int3
mov
or
inc
int3
fstpt
test
add
sahf
rolb
mov
or
aas
invd
xchg
add
inc
inc
inc
adc
mov
sbb
xchg
dec
movsl
adc
iret
xchg
and
mov
pop
fmuls
add
rolb
mov
mov
cmpsb
jns
mov
dec
mov
repnz
push
mov
dec
jno
cmpsb
fiadds
mov
add
jle
dec
pop
inc
add
mov
xchg
add
clts
out
rep
pop
out
and
xor
mov
push
nop
add
mov
mov
js
scas
cmp
hlt
les
je
sub
mov
mov
push
add
add
add
pop
xchg
pop
ja
ljmp
adc
jecxz
add
icebp
or
addr16
mov
cmp
scas
or
cld
dec
cltd
addb
movsl
adcl
add
rolb
mov
fstl
mov
gs
add
push
jp
push
jle
mov
daa
mov
cltd
out
and
mov
add
andl
and
mov
sub
mov
mov
dec
fwait
sbb
loop
mov
add
ud0
add
add
jne
int3
rcrl
mov
add
loope
sti
inc
mov
loope
add
rolb
mov
add
jge
add
loop
mov
and
add
mov
adc
and
mov
cli
pop
xor
sbb
loopne
mov
ftst
cmp
in
icebp
add
mov
mov
popa
shll
push
pop
push
pop
xchg
add
jle
add
sbb
xor
mov
push
neg
pop
sub
inc
fsubp
add
arpl
fcmovu
lea
mov
mov
mov
cmp
dec
dec
cli
rolb
mov
inc
jp
rorl
jmp
add
add
push
sti
fbld
cli
test
xlat
sub
mov
inc
add
add
decb
xor
mov
pop
movsb
fnstsw
adc
mov
inc
sti
mov
js
xchg
fistl
popa
pop
jg
nop
add
dec
mov
mov
rolb
mov
jb
mov
push
mov
rolb
dec
in
je
jne
pushf
push
lods
js
xchg
add
pop
push
xlat
mov
movsl
cmp
daa
push
lods
popf
fnsave
loope
movsb
jno
mov
mov
adc
push
push
pop
mov
dec
dec
repnz
inc
or
in
dec
push
mov
sbb
in
dec
push
mov
sti
sahf
sub
sub
repz
fcmovbe
jp
pop
ret
push
icebp
xchg
mov
and
sub
lds
ds
add
sub
pop
push
outsb
and
mov
in
mov
xor
mov
xor
dec
daa
fsubr
or
add
add
mov
les
fs
das
lods
mov
loopne
mov
add
imul
fidivl
push
in
shl
xchg
addb
xchg
adc
mov
sub
xlat
fwait
xchg
add
mov
add
daa
arpl
add
movsl
sub
lret
pop
mov
mov
add
jo
mov
fsubrs
ja
jae
lret
les
add
add
sub
mov
pop
ret
sbb
push
push
fbstp
add
and
loope
add
push
jle
push
or
inc
jmp
xchg
inc
mov
mov
mov
stos
pop
adc
add
add
mov
in
add
test
pop
push
mov
gs
aas
or
icebp
cli
fcmovne
and
mov
jmp
or
mov
fdivrp
adc
fnstsw
cmc
dec
add
add
fcoml
push
add
xor
mov
movsb
mov
and
mov
dec
push
add
hlt
adc
mov
out
mov
shl
jbe
rolb
mov
icebp
jmp
lods
insb
rolb
mov
int
sbb
aam
aas
test
flds
icebp
arpl
loop
mov
call
iret
pop
insb
jp
scas
loopne
mov
mov
cs
mov
cmp
xchg
push
aam
sbb
das
icebp
repz
push
not
mov
mov
cmp
dec
push
add
add
mov
jo
mov
mov
addb
mov
add
and
sbb
int3
cmpl
es
pop
xchg
inc
add
push
stos
cmp
sub
add
pop
mov
popf
enter
jg
and
mov
hlt
rolb
mov
mov
xchg
sbb
add
dec
idiv
movsb
mov
jmp
or
loop
mov
add
inc
jno
mov
add
mov
fs
add
fildll
push
sahf
in
add
lret
loope
adc
mov
add
not
add
push
cli
xor
jle
int
add
test
add
add
mov
out
push
out
mov
fstps
cmp
pop
xor
addr16
mov
sbb
add
sub
test
or
lahf
cs
add
xchg
fs
adc
sti
in
pop
mov
add
mov
mov
push
mov
aam
dec
mov
scas
adc
mov
push
cmp
sbb
pusha
add
mov
mov
stos
inc
lret
repnz
inc
data16
lret
xlat
cmpsb
cmp
movsl
jmp
and
push
test
add
dec
inc
add
ss
or
leave
lret
call
and
jo
mov
stos
dec
flds
movsb
inc
pusha
add
es
lahf
pusha
add
and
mov
int3
mov
fidivrl
adc
mov
sti
repnz
or
call
adc
mov
mov
add
sbb
add
add
repnz
addb
fldt
add
lahf
leave
stc
rolb
adc
mov
xlat
ret
sub
loopne
mov
es
jp
enter
add
mov
add
add
gs
mov
add
add
mov
xchg
pusha
add
push
cld
cltd
cli
push
sahf
ret
add
lret
pop
inc
push
add
add
push
rolb
add
mov
mov
mov
add
cmp
outsb
jns
add
mov
sbb
or
ds
xlat
add
mul
sbbl
cmpsl
outsb
out
cmp
in
lods
stos
and
mov
inc
addr16
repnz
pop
les
adc
pop
jbe
xor
jno
adc
ds
enter
add
mov
sub
call
outsl
xor
pop
pop
cwtl
rcrl
jo
mov
add
jae
ret
jmp
adc
dec
loopne
mov
rolb
mov
add
mov
addl
dec
movsb
push
add
push
add
pushf
addb
inc
push
inc
add
rolb
mov
mov
je
or
cmc
push
inc
ret
xchg
movsb
sbb
mov
jnp
add
sti
ret
and
mov
pop
aam
push
mov
mov
pop
or
cmp
xchg
bound
mov
add
push
aas
xchg
add
mov
add
out
sbb
mov
insl
jno
mov
dec
lods
dec
jge
pop
cmp
les
pop
test
test
adc
mov
les
iret
ficompl
mov
or
pop
lock
xchg
aaa
add
mov
cmpsb
rolb
mov
and
pusha
add
loop
mov
fistpll
rolb
mov
mov
mov
in
mov
outsb
push
mov
mov
xor
pop
push
sub
xchg
pop
shll
imul
xor
mov
ret
daa
adc
aaa
jge
mov
ss
aaa
sbb
add
add
repnz
add
ljmp
add
inc
push
addb
sub
xchg
mov
mov
add
sbb
rolb
mov
pop
rolb
rolb
mov
dec
jl
rolb
mov
insl
pop
xchg
and
xor
mov
leave
mov
adc
mov
add
in
rolb
mov
rolb
sub
test
push
inc
add
stos
add
mov
jle
daa
or
add
push
jmp
xchg
add
xor
out
add
je
add
inc
add
add
out
dec
icebp
divb
fsubrl
bound
mov
xchg
in
sti
sub
dec
sub
xorl
mov
pusha
add
sub
inc
std
push
out
jb
mov
push
inc
add
imul
mov
sub
lea
add
sub
and
add
ss
mov
xor
js
or
jmp
mov
add
add
lret
sbb
std
lods
push
add
mov
sbb
jo
mov
test
add
add
ja
pop
add
clc
fwait
lahf
addr16
mov
out
roll
mov
add
mov
add
mov
mov
add
sbb
rolb
test
stc
ret
or
pop
leave
add
mov
mov
movsl
xchg
jmp
xchg
push
or
pop
and
ja
sbb
addb
dec
push
sti
inc
dec
pop
insl
mov
inc
xchg
arpl
les
ret
out
fwait
dec
daa
sub
out
insb
mov
int
les
push
dec
sbb
orl
add
and
push
arpl
cmc
lret
jp
push
push
and
inc
inc
add
divl
fiadds
test
jle
fwait
or
add
or
lock
mov
jb
mov
adc
mov
or
bound
mov
push
add
xchg
cmpsb
in
sub
cmp
pop
loope
das
push
pop
pop
lods
aam
cwtl
cmp
or
mov
in
mov
jne
or
add
add
lcall
xlat
in
add
push
cmp
push
in
mov
mov
add
mov
pop
jae
add
mov
add
mov
pop
ret
xor
popl
fidivl
mov
add
lret
push
jne
mov
ret
adc
add
mov
mov
pusha
add
pop
add
mulb
or
out
cwtl
es
cmp
add
sbb
movsb
nopl
es
adc
mov
add
mov
movsl
int
stc
clc
cmp
mov
or
or
imul
cmpsl
add
mov
into
inc
push
xchg
jb
mov
push
pop
or
cmp
loope
add
push
push
mov
mov
xchg
xor
jae
lcall
jo
mov
cltd
imul
fs
sub
cs
loop
mov
inc
add
xchg
lret
xchg
sbb
out
rolb
mov
xor
add
mov
scas
gs
pop
or
mov
push
push
mov
push
mov
jle
std
jnp
sbb
inc
jle
jns
mov
jmp
rolb
and
imul
mov
mov
aas
jl
push
outsl
addb
test
mov
in
mov
pushl
jge
jge
mov
cmpsl
call
and
addr16
add
add
out
inc
jae
add
mov
add
mov
mov
mov
cmpsl
inc
add
mov
add
fwait
mov
add
add
out
push
rolb
mov
lods
add
mov
add
cmp
add
add
cmp
daa
clc
adc
mov
or
add
fstpl
and
test
mov
ret
dec
stos
cmp
and
scas
adc
mov
sbb
std
xchg
adc
mov
sti
adc
dec
mov
add
add
add
incb
cld
in
outsl
cld
mov
in
je
std
pop
fdiv
call
push
add
hlt
stos
sub
adc
popl
lret
or
xchg
inc
add
cltd
and
mov
and
mov
add
pushf
cmp
add
mov
into
cmp
dec
bound
mov
clc
xchg
outsl
les
lcall
jno
pop
test
aaa
push
pop
adc
fldt
addb
stos
mov
mov
arpl
clc
ss
pop
jo
mov
xor
adc
mov
ja
das
in
add
fidivl
mov
pop
inc
cmp
mov
scas
mov
add
push
lods
dec
add
mov
jmp
add
mov
cmp
inc
add
arpl
dec
and
push
add
xor
fistl
add
mov
lret
cmp
arpl
in
add
sub
sbb
bound
mov
test
fwait
scas
call
mov
mov
xchg
movsl
xchg
out
jne
push
jmp
inc
add
mov
push
xor
push
mov
in
test
and
ljmp
push
mov
add
cmc
stos
aam
add
mov
and
mov
shr
sbb
add
dec
pop
jecxz
les
pop
fistpl
rcll
add
mov
push
add
pop
outsl
sarl
add
add
jns
lea
addb
mov
mov
or
mov
dec
sub
add
inc
add
add
outsb
pushl
add
outsb
pop
add
add
jno
cmc
xchg
imul
out
ja
enter
sbb
jecxz
addb
gs
xlat
dec
in
pop
fcomps
sbb
mov
add
add
das
inc
add
fwait
aas
dec
adc
inc
popf
and
add
add
add
cmp
add
popa
jl
in
add
in
iret
leave
ret
inc
in
int3
jnp
add
mov
xor
push
pop
fldl2e
mov
mov
dec
sub
cmp
test
push
int3
leave
dec
inc
xchg
xchg
add
add
xor
mov
stos
sbb
add
mov
ret
movsb
push
cs
sub
mov
addr16
mov
or
mov
repz
aaa
icebp
ss
add
mov
repz
and
mov
mov
mov
jne
lret
mov
and
lret
mov
add
dec
fwait
clc
call
fwait
imul
imul
mov
in
pusha
add
popa
scas
cmp
add
push
xchg
mov
fmulp
push
faddl
mov
int3
mov
lds
pushf
dec
push
dec
or
lods
mov
rolb
mov
mov
sahf
into
xchg
add
pop
adc
mov
xchg
xchg
add
call
inc
xchg
xor
pop
pop
pusha
add
mov
mov
mov
sub
out
add
dec
les
add
ss
lcall
mov
fnstenv
add
push
sahf
negl
pop
xchg
rolb
mov
push
pushf
push
stos
outsb
out
mov
mov
add
xchg
stc
pop
in
ljmp
mov
mov
inc
js
adc
pop
and
aad
add
add
and
pop
cli
loop
mov
add
iret
inc
call
inc
inc
ljmp
imul
or
in
js
pop
push
cmp
pop
sbb
or
ret
xchg
add
mov
rolb
mov
fsubrs
adc
ret
cmc
out
sub
pop
loope
push
stos
mov
xor
repz
mov
jg
jnp
outsb
jns
or
add
shrl
inc
lret
lods
and
mov
mov
outsb
mov
fdivrs
stos
cmc
mov
hlt
push
idivb
prefetch
fadd
mov
inc
add
sbb
and
fs
add
jle
rol
mov
jbe
dec
push
rolb
mov
lods
sahf
fldcw
mov
outsl
ffree
add
mov
jp
add
mov
out
dec
xchg
xlat
pop
int
jle
mov
aad
pusha
add
add
mov
mov
dec
adc
popa
aas
fnsave
mov
add
add
pusha
add
cmp
test
sub
jb
mov
cmp
loopne
mov
sbb
cwtl
imul
test
nop
add
fs
gs
test
mov
iret
or
sub
xlat
scas
lods
pop
xchg
mov
jecxz
xor
and
xor
mov
mov
aad
pop
jbe
dec
sub
xor
mov
cmp
pop
ret
mov
add
xor
mov
add
mov
mov
aas
dec
dec
js
sub
hlt
enter
dec
inc
mov
mov
into
dec
cmp
dec
mov
mov
out
jne
test
bound
mov
inc
add
inc
jge
imul
mov
jo
mov
jecxz
add
cmp
std
ret
lahf
icebp
femms
and
add
cs
imul
int
insl
clc
xor
pop
lods
js
sbb
jns
add
hlt
mov
jl
pop
adc
pusha
add
mov
gs
and
sub
popa
mov
or
mov
mov
add
mov
sub
pop
sahf
and
mov
or
lods
pop
and
mov
add
mov
pop
sbb
jg
mov
push
bound
mov
jle
je
clc
int3
ljmp
inc
add
xchg
andl
inc
es
dec
push
popf
xor
add
mov
rcrl
add
sti
jp
add
hlt
int3
xlat
pop
sub
loopne
mov
addb
rolb
mov
jnp
pop
stc
aad
movl
out
into
xchg
sub
push
pop
out
cmpsb
pop
xor
fisttps
add
inc
add
add
pushf
aam
ja
hlt
sbb
mov
push
popa
mov
loopne
mov
add
inc
add
repnz
nop
cld
jae
add
lea
clc
repnz
nop
cld
jae
add
add
outsl
lret
clc
repnz
nop
cld
jae
add
add
inc
and
clc
repnz
nop
cld
jae
add
adc
cmp
mov
clc
repnz
nop
cld
jae
scas
add
fdivs
mov
push
mov
nop
leave
jmp
sub
jno
add
add
pusha
add
clc
repnz
nop
cld
jae
add
mov
mov
push
clc
repnz
nop
cld
jae
lock
add
clc
repnz
nop
cld
jae
add
cli
stos
std
out
add
add
mov
xchg
ret
outsl
aas
scas
add
test
push
mov
mov
add
and
sub
lock
mov
sbb
add
clc
repnz
nop
cld
jae
add
mov
repz
mov
nop
leave
jmp
dec
fiaddl
add
add
xor
push
adc
mov
xor
clc
repnz
nop
cld
jae
cld
add
je
push
mov
nop
leave
jmp
add
add
pop
push
mov
xchg
ret
fdivs
mov
dec
push
mov
nop
leave
jmp
add
imul
cld
mov
add
add
clc
repnz
nop
cld
jae
std
out
add
jb
add
nop
cld
jae
adc
add
xchg
xor
mov
repnz
nop
cld
jae
add
mov
mov
js
repnz
nop
cld
jae
jb
inc
outsl
mov
mov
add
repnz
nop
cld
jae
popf
ja
add
push
clc
repnz
nop
cld
jae
push
stos
add
adc
add
pop
xor
push
mov
xchg
ret
sub
jo
imul
add
clc
repnz
nop
cld
jae
add
add
aas
mov
clc
repnz
nop
cld
jae
dec
pop
fs
push
clc
repnz
nop
cld
jae
jno
cld
mov
add
hlt
add
out
les
xchg
ret
cwtl
inc
pop
fcoms
sub
repnz
nop
cld
jae
add
add
xor
add
xchg
add
repnz
nop
cld
jae
xchg
add
sahf
scas
stos
fldenv
mov
xchg
ret
add
cld
xchg
add
adc
inc
add
jbe
push
add
inc
inc
add
in
nop
leave
jmp
adc
add
aas
add
outsl
mov
clc
repnz
nop
cld
jae
add
mov
test
add
clc
repnz
nop
cld
jae
add
aas
and
pop
movzwl
clc
repnz
nop
cld
jae
cld
ja
cwtl
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
imul
mov
jo
inc
add
add
or
clc
repnz
nop
cld
jae
jno
add
add
lods
push
mov
xchg
ret
jno
ss
add
sbb
nop
cld
jae
cwtl
mov
imul
repnz
nop
cld
jae
push
cld
add
add
dec
or
repnz
nop
cld
jae
sub
add
add
lods
je
clc
repnz
nop
cld
jae
dec
ja
mov
in
inc
add
add
add
add
leave
push
mov
nop
leave
jmp
pop
add
inc
xchg
or
pop
push
clc
repnz
nop
cld
jae
jbe
jb
add
add
in
push
mov
nop
leave
jmp
inc
add
rolb
mov
xchg
sub
icebp
push
mov
nop
leave
jmp
cmp
add
mov
leave
clc
repnz
nop
cld
jae
mov
cltd
xchg
add
jo
xchg
and
mov
dec
add
clc
repnz
nop
cld
jae
std
cld
mov
add
push
mov
xchg
ret
inc
add
add
push
mov
xchg
ret
add
add
add
test
push
add
clc
repnz
nop
cld
jae
add
call
cmp
mov
add
cmp
add
jae
xchg
clc
repnz
nop
cld
jae
xchg
es
add
cld
push
clc
repnz
nop
cld
jae
cmp
add
jae
pop
push
mov
xchg
ret
add
mov
add
aas
adc
and
clc
repnz
nop
cld
jae
add
add
add
stos
rep
push
mov
xchg
ret
add
cld
add
add
clc
repnz
nop
cld
jae
add
xor
mov
test
clc
repnz
nop
cld
jae
add
into
cld
jno
add
add
repnz
nop
cld
jae
add
add
xchg
repnz
nop
cld
jae
add
add
mov
push
and
dec
add
mov
xchg
ret
add
add
or
shrb
loop
clc
repnz
nop
cld
jae
mov
pop
push
clc
repnz
nop
cld
jae
add
mov
add
iret
xor
clc
repnz
nop
cld
jae
add
adc
fwait
imul
clc
repnz
nop
cld
jae
add
add
mov
cmc
testl
add
add
add
and
add
clc
repnz
nop
cld
jae
add
mov
incl
inc
add
sub
mov
scas
add
pop
adc
in
push
push
mov
nop
leave
jmp
add
add
std
xchg
add
in
push
push
mov
xchg
ret
add
mov
and
add
add
repnz
nop
cld
jae
cld
imul
mov
adc
add
add
popf
sbb
addb
add
enter
add
add
repnz
nop
cld
jae
add
add
sbb
mov
nop
leave
jmp
add
add
add
enter
and
inc
add
add
outsl
add
add
ja
pop
push
mov
xchg
ret
cli
flds
add
inc
notb
stos
push
mov
xchg
ret
add
mov
add
lea
jns
repz
mov
xchg
ret
stos
cld
mov
add
jo
adcl
clc
repnz
nop
cld
jae
flds
add
inc
add
fdivrl
clc
repnz
nop
cld
jae
lea
fdiv
pop
rep
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
rolb
fcoms
sub
clc
repnz
nop
cld
jae
add
jb
mov
mov
xchg
ret
aas
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
fmuls
jecxz
add
clc
repnz
nop
cld
jae
mov
add
push
push
mov
xchg
ret
into
add
inc
add
js
jg
push
mov
nop
leave
jmp
cli
add
add
add
mov
movsb
clc
repnz
nop
cld
jae
add
sub
add
xor
mov
sub
clc
repnz
nop
cld
jae
stos
ss
fidivrl
scas
add
pusha
clc
repnz
nop
cld
jae
inc
es
into
imul
mov
push
push
mov
nop
leave
jmp
sahf
add
add
push
add
mov
repnz
nop
cld
jae
sub
lea
push
mov
xchg
ret
add
dec
mov
jb
push
mov
nop
leave
jmp
add
outsl
je
and
mov
mov
sub
push
mov
xchg
ret
lock
add
add
pusha
add
jle
add
in
nop
leave
jmp
adc
push
in
test
push
mov
xchg
ret
add
add
add
movb
cmp
ret
std
sahf
add
call
clc
repnz
nop
cld
jae
add
add
cltd
push
clc
repnz
nop
cld
jae
add
inc
add
imul
incl
adc
add
mov
add
add
fiaddl
cmp
fwait
je
clc
repnz
nop
cld
jae
add
mov
lods
add
push
mov
nop
leave
jmp
add
xchg
mov
push
clc
repnz
nop
cld
jae
add
add
fadds
or
das
xorl
push
mov
nop
leave
jmp
lock
mov
shl
push
mov
nop
leave
jmp
adc
imul
leave
inc
add
add
mov
mov
push
mov
xchg
ret
fadds
adc
lahf
mov
push
mov
xchg
ret
add
xchg
add
pop
push
clc
repnz
nop
cld
jae
std
cld
cld
imul
cmp
push
mov
xchg
ret
add
cli
add
movsl
fimull
nop
cld
jae
sub
mov
fcmovbe
aad
xor
push
mov
nop
leave
jmp
jno
add
add
pop
bound
mov
xor
clc
repnz
nop
cld
jae
add
popf
jg
add
add
push
mov
nop
leave
jmp
jb
jb
lock
push
push
mov
xchg
ret
add
std
cli
add
dec
cltd
mov
jne
clc
repnz
nop
cld
jae
add
jno
mov
push
mov
xchg
ret
add
jb
add
inc
dec
pop
clc
repnz
nop
cld
jae
add
add
add
inc
add
fisubrl
jbe
mov
add
add
loopne
mov
push
clc
repnz
nop
cld
jae
add
push
scas
add
mov
movzwl
clc
repnz
nop
cld
jae
push
add
adc
mov
clc
repnz
nop
cld
jae
sub
ficoml
dec
cld
rcl
mov
add
add
dec
add
add
jne
push
mov
nop
leave
jmp
std
add
add
mov
stc
mov
clc
repnz
nop
cld
jae
lea
sub
add
addb
fldl
enter
nop
cld
jae
add
add
inc
jns
clc
repnz
nop
cld
jae
add
cli
add
add
xchg
pop
cmp
repnz
nop
cld
jae
aas
jo
mov
mov
mov
add
je
add
jae
and
add
testb
and
push
mov
xchg
ret
add
inc
add
dec
cld
es
mov
push
mov
xchg
ret
scas
inc
add
add
outsb
push
push
mov
xchg
ret
cli
jbe
adc
add
add
int
leave
sub
repnz
nop
cld
jae
or
pusha
clc
repnz
nop
cld
jae
stos
flds
es
cld
add
mov
nop
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
sahf
adc
add
push
sbb
in
inc
add
add
dec
add
sub
cmpl
push
mov
nop
leave
jmp
add
out
add
cmp
jmp
nop
cld
jae
add
popf
dec
add
stos
clc
repnz
nop
cld
jae
add
add
popf
add
mov
clc
repnz
nop
cld
jae
loop
mov
add
nop
nop
cld
jae
cld
or
lock
std
add
add
pop
ljmp
mov
xor
add
scas
add
clc
repnz
nop
cld
jae
into
add
fadds
loop
and
mov
mov
xchg
ret
sahf
std
adc
mov
clc
repnz
nop
cld
jae
add
add
and
push
mov
nop
leave
jmp
dec
imul
add
dec
add
clc
repnz
nop
cld
jae
cltd
jno
dec
add
sbb
dec
into
inc
add
or
jo
add
mov
cmp
mov
nop
leave
jmp
xor
cli
lea
inc
add
shlb
nop
nop
cld
jae
jo
mov
jo
lret
xor
clc
repnz
nop
cld
jae
add
xchg
add
mov
clc
repnz
nop
cld
jae
flds
addr16
add
push
mov
nop
leave
jmp
mov
adc
jp
enter
nop
cld
jae
add
rolb
add
cmp
xchg
adc
repnz
nop
cld
jae
add
lock
adc
mov
mov
push
mov
xchg
ret
add
add
add
scas
jle
push
mov
xchg
ret
jb
add
outsl
dec
add
pop
pop
shll
out
clc
repnz
nop
cld
jae
add
push
add
in
rolb
mov
rep
push
mov
nop
leave
jmp
fcomp
and
add
add
es
shr
clc
repnz
nop
cld
jae
imul
push
in
pop
add
push
mov
nop
leave
jmp
add
xor
add
add
push
push
mov
xchg
ret
jb
add
sub
ja
dec
mov
push
mov
nop
leave
jmp
add
inc
add
nop
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
adc
adc
repnz
nop
cld
jae
jno
push
add
add
mov
jmp
incl
and
sub
cltd
add
sub
add
repnz
nop
cld
jae
add
add
add
pop
sti
lea
push
mov
nop
leave
jmp
add
dec
mov
clc
repnz
nop
cld
jae
add
aas
add
xchg
or
add
mov
call
clc
repnz
nop
cld
jae
add
jo
jbe
mov
clc
repnz
nop
cld
jae
cli
add
pop
mov
push
mov
xchg
ret
add
add
add
inc
fidivrs
clc
repnz
nop
cld
jae
add
popf
add
mov
mov
cmp
jg
clc
repnz
nop
cld
jae
dec
shrb
xor
mov
add
add
scas
add
movb
mov
push
mov
nop
leave
jmp
or
add
dec
xor
mov
push
mov
xchg
ret
jbe
lea
sahf
fiaddl
popa
add
mov
and
inc
add
add
inc
cmp
push
imul
nop
nop
cld
jae
add
add
cld
add
add
push
mov
nop
leave
jmp
and
add
push
push
mov
xchg
ret
sahf
stos
add
cltd
add
mov
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
add
scas
push
ja
cmpsl
adc
mov
icebp
mov
push
clc
repnz
nop
cld
jae
add
cltd
add
add
push
mov
nop
leave
jmp
out
xor
add
jb
inc
jp
add
nop
nop
cld
jae
scas
mov
add
lods
add
clc
repnz
nop
cld
jae
add
or
add
pop
clc
repnz
nop
cld
jae
adc
outsl
scas
shl
add
add
cld
imul
pop
add
and
repnz
nop
cld
jae
sub
add
adc
shr
clc
repnz
nop
cld
jae
add
into
sbb
sub
add
mov
push
mov
xchg
ret
fcomps
ja
outsl
movsl
cmp
clc
repnz
nop
cld
jae
add
xor
mov
add
clc
repnz
nop
cld
jae
add
xchg
scas
mov
and
mov
clc
repnz
nop
cld
jae
xchg
scas
add
cmc
jnp
dec
cmp
repnz
nop
cld
jae
add
add
rep
push
mov
nop
leave
jmp
f2xm1
add
add
add
xchg
clc
repnz
nop
cld
jae
lea
add
mov
jne
clc
repnz
nop
cld
jae
lea
ds
clc
repnz
nop
cld
jae
cld
inc
add
adc
add
add
out
mov
push
mov
xchg
ret
std
inc
cwtl
adc
ja
pop
call
clc
repnz
nop
cld
jae
add
inc
mov
repnz
nop
cld
jae
add
cld
jno
scas
gs
inc
push
mov
xchg
ret
add
add
or
add
cmp
xor
add
clc
repnz
nop
cld
jae
add
xchg
add
mov
and
clc
repnz
nop
cld
jae
add
add
call
repnz
nop
cld
jae
std
outsl
add
add
add
push
mov
xchg
ret
stos
cli
add
dec
add
add
push
mov
xchg
ret
push
popf
dec
jb
xor
add
rolb
sbb
nop
cld
jae
add
fiaddl
xchg
mov
push
mov
nop
leave
jmp
mov
or
mov
nop
leave
jmp
std
add
jno
or
add
cmc
mov
in
out
mov
xchg
add
orb
push
movl
cmp
repnz
nop
cld
jae
add
inc
add
add
push
mov
nop
leave
jmp
jno
add
mov
aas
sbb
or
repnz
nop
cld
jae
add
jbe
add
mov
xchg
ret
scas
fimull
es
add
push
adc
insl
mov
push
mov
nop
leave
jmp
dec
scas
imul
add
add
add
lock
add
add
add
add
leave
mov
push
mov
nop
leave
jmp
add
add
jo
imul
clc
repnz
nop
cld
jae
xor
add
add
mov
insb
clc
repnz
nop
cld
jae
add
cwtl
cwtl
lods
mov
clc
repnz
nop
cld
jae
scas
add
or
and
push
clc
repnz
nop
cld
jae
add
popf
add
add
inc
clc
repnz
nop
cld
jae
jo
cld
mov
cltd
imul
stc
push
mov
out
add
dec
add
mov
std
mov
clc
repnz
nop
cld
jae
add
add
ss
add
mov
call
push
mov
xchg
ret
cmp
add
mov
fcoms
push
mov
lret
add
dec
lods
lahf
add
inc
add
mov
popa
add
repnz
nop
cld
jae
add
lea
push
add
test
push
mov
nop
leave
jmp
add
dec
inc
mov
add
add
clc
repnz
nop
cld
jae
add
add
aas
lea
nop
nop
cld
jae
add
push
popf
inc
ja
xor
push
mov
nop
leave
jmp
and
std
test
jge
add
clc
repnz
nop
cld
jae
mov
rolb
jmp
add
repnz
nop
cld
jae
cltd
or
lods
pop
clc
repnz
nop
cld
jae
ja
push
cld
stos
pop
add
sub
nop
leave
jmp
imul
sarb
mov
mov
add
jae
clc
repnz
nop
cld
jae
add
fiaddl
xchg
loopne
mov
jbe
mov
clc
repnz
nop
cld
jae
mov
add
loopne
clc
repnz
nop
cld
jae
jbe
add
mov
push
mov
xchg
ret
add
cli
add
cmp
outsl
call
clc
repnz
nop
cld
jae
or
aas
add
out
les
clc
repnz
nop
cld
jae
or
sbb
rcr
mov
clc
repnz
nop
cld
jae
outsl
xchg
sub
adc
adc
add
clc
repnz
nop
cld
jae
cwtl
add
pushl
push
mov
xchg
ret
ja
rcl
into
push
sub
push
push
mov
xchg
ret
aas
add
add
loop
scas
add
mov
clc
repnz
nop
cld
jae
or
adc
jle
clc
repnz
nop
cld
jae
cld
mov
mov
add
or
mov
xchg
ret
add
add
add
ja
lods
pop
push
mov
xchg
ret
mov
shrb
add
gs
repnz
nop
cld
jae
add
imul
add
push
mov
nop
leave
jmp
add
add
sbb
repnz
nop
cld
jae
jno
lock
popf
push
or
filds
xchg
ret
add
add
add
std
clc
je
clc
repnz
nop
cld
jae
xor
jb
xchg
cmc
popf
movzwl
clc
repnz
nop
cld
jae
add
add
xor
sahf
mov
clc
repnz
nop
cld
jae
ja
adc
outsl
lock
arpl
xor
push
mov
nop
leave
jmp
add
add
or
mov
xlat
inc
add
or
add
cld
add
mov
xchg
ret
add
cld
add
add
pop
push
mov
nop
leave
jmp
add
add
dec
xchg
xchg
inc
mov
repnz
nop
cld
jae
add
add
mov
add
push
xchg
rcll
jae
subl
notl
in
nop
leave
jmp
inc
add
xchg
fcoms
or
inc
add
and
add
add
gs
rclb
lds
xchg
ret
shrb
add
add
cmp
clc
repnz
nop
cld
jae
add
inc
add
cld
add
nop
cld
jae
add
popf
add
cld
imul
out
enter
add
stc
pop
idivb
aas
lods
clc
repnz
nop
cld
jae
lock
inc
std
cli
rolb
pop
mov
clc
repnz
nop
cld
jae
add
add
push
push
mov
nop
leave
jmp
mov
sub
add
add
fldenv
repnz
nop
cld
jae
add
mov
xor
mov
add
mov
xchg
ret
add
add
lea
pop
mov
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
cli
add
cmp
add
add
repnz
nop
cld
jae
cli
push
jo
hlt
aas
mov
clc
repnz
nop
cld
jae
outsl
add
clc
repnz
nop
cld
jae
cli
add
add
popf
jmp
clc
repnz
nop
cld
jae
add
add
sub
in
nop
leave
jmp
cli
add
add
mov
mov
push
mov
xchg
ret
sub
add
sahf
add
mov
repnz
nop
cld
jae
pop
add
add
jo
and
mov
clc
repnz
nop
cld
jae
add
loop
mov
imul
clc
repnz
nop
cld
jae
adc
add
add
sub
clc
repnz
nop
cld
jae
add
add
pop
add
mov
xchg
aaa
das
mov
clc
repnz
nop
cld
jae
add
cli
lret
and
repnz
nop
cld
jae
add
add
adc
rolb
mov
fwait
je
clc
repnz
nop
cld
jae
add
ja
test
add
push
mov
xchg
ret
add
aas
add
add
and
clc
repnz
nop
cld
jae
add
add
outsl
add
mov
clc
repnz
nop
cld
jae
add
add
mov
mov
clc
repnz
nop
cld
jae
push
add
into
mov
push
mov
xchg
ret
dec
ja
xchg
jo
add
add
mov
das
mov
clc
add
cmpsb
loope
add
clc
repnz
nop
cld
jae
add
add
fisubrl
push
mov
nop
leave
jmp
add
add
add
add
mov
add
add
in
nop
leave
jmp
ss
sarb
repz
repnz
nop
cld
jae
fsubrs
add
out
dec
mov
cs
push
mov
xchg
ret
xchg
add
add
jnp
popa
add
mov
xchg
ret
popf
add
es
cmpl
push
mov
nop
leave
jmp
cld
add
sbb
add
pop
pop
clc
repnz
nop
cld
jae
popf
add
add
add
imul
repz
add
xchg
ja
add
fwait
add
push
mov
xchg
ret
add
lock
mov
mov
clc
repnz
nop
cld
jae
add
jo
add
add
mov
clc
repnz
nop
cld
jae
add
add
mov
aas
lock
add
add
add
ficompl
xchg
pusha
add
mov
jmp
in
nop
leave
jmp
inc
cld
push
adc
or
inc
add
add
sub
add
mov
clc
repnz
nop
cld
jae
fnstcw
fiaddl
add
insb
mov
clc
repnz
nop
cld
jae
add
jo
popf
lock
nop
nop
cld
jae
inc
or
push
inc
imul
add
clc
repnz
nop
cld
jae
outsl
add
nop
nop
cld
jae
push
pop
add
stos
mov
lcall
nop
nop
cld
jae
add
inc
add
mov
xor
clc
repnz
nop
cld
jae
xor
add
les
mov
jno
add
mov
nop
leave
jmp
or
ja
cld
mov
add
push
out
add
repnz
nop
cld
jae
add
sahf
inc
stos
and
sbb
nop
nop
cld
jae
add
fstps
pop
sub
jmp
and
cmp
lock
add
add
call
clc
repnz
nop
cld
jae
into
ficoml
fcoms
bound
mov
mov
push
mov
xchg
ret
mov
sub
add
sbb
sub
jno
lock
add
loop
add
stos
add
pop
or
repnz
nop
cld
jae
and
cwtl
adc
add
add
push
mov
xchg
ret
add
add
add
push
add
jae
inc
add
mov
add
loop
add
jne
mov
push
mov
xchg
ret
add
cwtl
add
add
add
mov
inc
add
add
clc
repnz
nop
cld
jae
dec
imul
add
xchg
push
mov
nop
leave
jmp
adc
cld
cli
add
mov
xchg
leave
xor
push
mov
xchg
ret
imul
fsubrs
add
mov
stos
push
mov
xchg
ret
cld
add
add
in
add
lods
enter
cmp
ret
mov
add
add
add
push
mov
nop
leave
jmp
add
mov
add
out
sbb
decl
nop
cld
jae
cli
fdivs
jl
pop
push
mov
xchg
ret
add
std
add
mov
repnz
nop
cld
jae
add
adc
dec
lods
clc
repnz
nop
cld
jae
or
adc
std
add
scas
mov
add
push
mov
nop
leave
jmp
sub
add
push
imul
nop
nop
cld
jae
add
add
in
nop
leave
jmp
add
fcoms
scas
add
add
fldenv
arpl
mov
nop
leave
jmp
mov
add
add
lock
sbb
add
push
mov
nop
leave
jmp
std
add
xchg
mov
mov
nop
nop
cld
jae
add
add
or
repnz
nop
cld
jae
rolb
add
add
push
mov
nop
leave
jmp
scas
adc
ja
add
add
add
clc
repnz
nop
cld
jae
scas
add
add
add
dec
add
clc
repnz
nop
cld
jae
add
add
add
or
nop
nop
cld
jae
xor
scas
add
jno
cmpsb
push
mov
call
in
nop
leave
jmp
popf
add
mov
test
repnz
nop
cld
jae
cli
jbe
addb
pop
add
push
mov
xchg
ret
mov
std
add
jbe
dec
push
mov
nop
leave
jmp
add
mov
add
dec
add
pop
lea
clc
repnz
nop
cld
jae
add
and
add
addb
cwtl
es
clc
repnz
nop
cld
jae
cld
pop
add
clc
repnz
nop
cld
jae
add
rorb
sbb
repnz
nop
cld
jae
add
add
cwtl
add
add
add
repnz
nop
cld
jae
lea
jmp
sbb
cld
jae
adc
push
pop
call
push
mov
nop
leave
jmp
mov
or
add
nop
nop
cld
jae
add
add
je
clc
repnz
nop
cld
jae
add
imul
xchg
ret
add
or
inc
imul
inc
add
call
mov
nop
leave
jmp
add
add
push
mov
xchg
ret
add
add
add
test
clc
repnz
nop
cld
jae
pop
scas
and
mov
clc
repnz
nop
cld
jae
add
inc
pushf
ret
push
mov
nop
leave
jmp
add
inc
add
add
clc
repnz
nop
cld
jae
imul
add
mov
or
cmp
ret
add
imul
or
pop
push
mov
xchg
ret
add
imul
cltd
jp
clc
repnz
nop
cld
jae
adc
adc
sub
add
clc
repnz
nop
cld
jae
inc
ja
sbb
nop
nop
cld
jae
popf
xor
adc
clc
repnz
nop
cld
jae
add
add
inc
mov
add
repnz
nop
cld
jae
add
add
add
das
pop
push
mov
nop
leave
jmp
lea
add
fldenv
movl
add
adc
es
stos
jmp
add
cmp
add
ss
out
shrb
mov
xchg
ret
into
add
lock
add
nop
nop
cld
jae
mov
imul
xchg
mov
mov
clc
repnz
nop
cld
jae
lea
push
cli
mov
clc
repnz
nop
cld
jae
add
add
jmp
clc
repnz
nop
cld
jae
aas
add
add
stos
add
push
mov
xchg
ret
add
out
scas
add
add
add
mov
push
mov
nop
leave
jmp
flds
cli
sahf
ja
sub
repnz
nop
cld
jae
add
cwtl
add
jmp
jo
pop
loop
inc
add
jo
add
add
push
mov
nop
leave
jmp
cmp
cld
add
add
fsubr
and
ljmp
ss
jbe
sbb
loop
add
jbe
add
mov
icebp
push
mov
nop
leave
jmp
add
cwtl
add
scas
add
je
clc
repnz
nop
cld
jae
imul
add
out
int
add
add
add
dec
add
pop
add
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
imul
mov
call
clc
repnz
nop
cld
jae
stos
dec
add
shll
repnz
nop
cld
jae
add
add
add
add
xor
sbbl
cld
jae
mov
scas
scas
add
mov
pop
adc
add
add
xchg
loop
mov
loop
mov
push
mov
nop
leave
jmp
ss
add
jbe
and
es
mov
clc
repnz
nop
cld
jae
dec
and
dec
into
popf
xchg
add
repnz
nop
cld
jae
add
xor
cwtl
add
adc
push
mov
cmp
in
nop
leave
jmp
add
jmp
add
add
or
add
add
repnz
nop
cld
jae
xchg
mov
adc
add
mov
mov
jge
clc
repnz
nop
cld
jae
add
mov
add
rolb
mov
jne
push
mov
nop
leave
jmp
outsl
inc
add
aaa
cs
clc
repnz
nop
cld
jae
lock
fnstenv
add
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
ror
add
cltd
and
mov
pop
clc
repnz
nop
cld
jae
add
dec
add
add
and
mov
nop
leave
jmp
cltd
inc
add
add
add
or
leave
jmp
imul
iret
push
clc
repnz
nop
cld
jae
cwtl
sub
imul
pop
call
call
in
nop
leave
jmp
add
fstps
push
push
mov
xchg
ret
add
add
ja
add
ja
pop
push
mov
add
jg
add
add
add
rclb
movl
flds
add
cld
add
push
inc
cmp
clc
repnz
nop
cld
jae
flds
add
and
repnz
nop
cld
jae
add
daa
mov
nop
cld
jae
cltd
lock
add
sub
xor
add
clc
repnz
nop
cld
jae
add
dec
push
mov
nop
leave
jmp
add
add
add
add
or
popa
push
mov
xchg
ret
add
sbb
cld
add
jo
push
mov
add
xchg
or
aam
test
cmp
in
push
push
mov
xchg
ret
add
add
cli
add
add
xlat
jns
mov
shll
fiadds
add
ss
dec
push
push
adc
rclb
pop
inc
add
add
mov
add
add
mov
nop
cld
jae
cmp
add
loop
mov
into
push
mov
xchg
add
add
add
sbb
add
into
call
clc
repnz
nop
cld
jae
add
add
je
clc
repnz
nop
cld
jae
add
cmpsl
repz
xor
push
mov
xchg
ret
add
add
out
add
std
and
mov
push
push
mov
xchg
ret
add
add
jbe
sub
jo
mov
pop
push
clc
repnz
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
add
imul
pushl
clc
repnz
nop
cld
jae
mov
mov
mov
popl
clc
repnz
nop
cld
jae
dec
std
add
jo
push
push
mov
xchg
ret
fldcw
add
pop
pushl
clc
repnz
nop
cld
jae
add
add
add
outsb
je
repnz
nop
cld
jae
flds
add
loope
dec
call
clc
repnz
nop
cld
jae
jo
lock
mov
push
push
mov
xchg
ret
add
cld
add
mov
add
adc
mov
nop
nop
cld
jae
add
jbe
add
add
push
mov
xchg
ret
cwtl
ja
add
addb
lret
and
repnz
nop
cld
jae
sub
mov
push
mov
xchg
ret
dec
inc
add
add
add
sbb
clc
repnz
nop
cld
jae
add
fadd
xchg
add
sub
repnz
nop
cld
jae
fldcw
sbb
add
add
leave
jmp
flds
imul
inc
push
xlat
xor
nop
nop
cld
jae
add
add
add
mov
pop
int3
inc
add
add
add
adc
and
cmpsb
and
call
clc
repnz
nop
cld
jae
add
cwtl
add
daa
and
in
add
add
add
add
add
rol
add
pop
call
in
nop
leave
jmp
aas
sub
mov
repnz
nop
cld
jae
lock
add
dec
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
into
sub
mov
add
mov
dec
sub
dec
cmc
inc
add
add
icebp
int3
pop
clc
repnz
nop
cld
jae
add
loop
lret
repnz
nop
cld
jae
cli
add
add
jbe
adc
add
push
mov
nop
leave
jmp
add
sbb
jg
sar
repnz
nop
cld
jae
es
sbb
mov
push
mov
nop
leave
jmp
ja
dec
add
scas
mov
clc
repnz
nop
cld
jae
imul
add
push
mov
nop
leave
jmp
mov
add
jno
cmpsb
mov
add
lret
decl
add
jno
lock
inc
xchg
lods
add
clc
repnz
nop
cld
jae
add
sub
jb,pt
push
mov
nop
leave
jmp
or
fcoms
add
push
mov
xchg
ret
xor
add
add
cmp
jg
incl
add
fdivs
adc
add
outsl
add
add
iret
mov
push
mov
xchg
ret
add
mov
cld
fiaddl
scas
pop
push
mov
nop
leave
jmp
mov
add
lock
add
mov
clc
repnz
nop
cld
jae
add
add
jecxz
add
clc
repnz
nop
cld
jae
add
add
dec
or
push
mov
nop
leave
jmp
add
mov
push
mov
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
dec
push
lock
repnz
nop
cld
jae
mov
add
add
cld
clc
repnz
nop
cld
jae
cld
add
lock
adc
push
jne
out
rol
push
mov
xchg
ret
lock
cmp
add
loope
clc
repnz
nop
cld
jae
add
mov
add
repnz
nop
cld
jae
adc
add
add
add
clc
repnz
nop
cld
jae
sbb
add
ret
jo
mov
sahf
mov
push
mov
nop
leave
jmp
jb
lock
jno
gs
pop
push
mov
xchg
ret
add
dec
rcrb
and
repnz
nop
cld
jae
cld
fcmovu
dec
add
dec
clc
repnz
nop
cld
jae
jb
cltd
add
and
sub
push
clc
repnz
nop
cld
jae
std
add
add
add
mov
repnz
nop
cld
jae
or
fidivl
add
add
push
mov
xchg
ret
inc
lock
add
xchg
add
mov
test
nop
nop
cld
jae
ja
add
aaa
jnp
sar
nop
nop
cld
jae
add
xor
add
sahf
pop
xor
push
mov
nop
leave
jmp
add
sahf
jbe
add
inc
iret
push
clc
repnz
nop
cld
jae
push
mov
or
out
add
jo
mov
add
clc
repnz
nop
cld
jae
fadds
cli
jl
push
mov
xchg
ret
add
add
lock
popa
add
repnz
nop
cld
jae
cltd
cli
jbe
fstps
mov
push
mov
nop
leave
jmp
add
add
nop
nop
cld
jae
adc
loop
imul
mov
push
mov
xchg
ret
cwtl
add
mov
adc
jne,pt
clc
repnz
nop
cld
jae
add
or
push
add
push
js
repnz
nop
cld
jae
scas
adc
add
xor
mov
lcall
nop
cld
jae
mov
add
jo
push
jne
pop
clc
repnz
nop
cld
jae
add
inc
add
add
nop
nop
cld
jae
add
add
outsl
push
and
push
clc
repnz
nop
cld
jae
loop
dec
add
add
cs
clc
repnz
nop
cld
jae
lock
es
roll
xchg
ret
add
add
add
add
in
pushl
clc
repnz
nop
cld
jae
rorb
add
add
mov
clc
repnz
nop
cld
jae
scas
add
sub
mov
nop
leave
jmp
cli
inc
sub
fadds
dec
add
jmp
xchg
fiaddl
add
cld
add
add
rclb
push
mov
nop
leave
jmp
add
add
in
add
add
clc
repnz
nop
cld
jae
popf
xchg
adc
xchg
enter
cmp
ret
add
add
add
and
push
fs
repnz
nop
cld
jae
add
add
push
std
je
push
mov
nop
leave
jmp
scas
into
add
repnz
nop
cld
jae
add
add
add
add
inc
sti
push
push
mov
xchg
ret
dec
add
into
add
adc
mov
nop
leave
jmp
push
add
push
add
ds
clc
repnz
nop
cld
jae
add
fdivs
outsl
loopne
repnz
nop
cld
jae
add
inc
add
into
jmp
call
in
nop
leave
jmp
lock
adc
cmp
mov
xchg
ret
add
add
mov
add
clc
repnz
nop
cld
jae
xor
add
mov
shrl
repnz
nop
cld
jae
add
iret
call
push
mov
nop
leave
jmp
scas
sub
push
add
clc
repnz
nop
cld
jae
sub
fimull
or
repnz
nop
cld
jae
mov
popf
adc
add
mov
xchg
ret
es
stos
xchg
add
repnz
nop
cld
jae
add
xchg
cli
add
test
push
clc
repnz
nop
cld
jae
xchg
add
add
mov
mov
clc
repnz
nop
cld
jae
add
add
fisubl
popa
add
repnz
nop
cld
jae
add
add
add
push
sub
dec
add
repnz
nop
cld
jae
add
inc
cld
jo
xor
push
mov
nop
leave
jmp
scas
rolb
imul
push
clc
repnz
nop
cld
jae
inc
add
add
jno
dec
shl
push
mov
nop
leave
jmp
add
add
scas
cltd
mov
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
lea
add
ja
add
clc
repnz
nop
cld
jae
cwtl
pop
sbb
imul
sbb
xchg
int
add
imul
test
lret
in
nop
leave
jmp
outsl
add
add
imul
rep
push
mov
xchg
ret
mov
sub
add
push
push
jns
dec
cmp
repnz
nop
cld
jae
add
scas
add
rcrl
js
push
mov
nop
leave
jmp
add
add
add
sti
mov
clc
repnz
nop
cld
jae
add
or
repz
mov
nop
leave
jmp
add
mov
jb
add
mov
mov
push
mov
nop
leave
jmp
add
or
xor
mov
nop
leave
jmp
stos
add
cli
stos
dec
fnstenv
inc
daa
nop
add
clc
repnz
nop
cld
jae
mov
lock
repnz
nop
cld
jae
jb
add
add
xchg
mov
clc
repnz
nop
cld
jae
stos
stos
mov
pusha
push
mov
nop
leave
jmp
add
add
scas
add
rorl
repnz
nop
cld
jae
add
mov
les
cli
add
add
fcmovu
add
cli
lea
mov
aad
test
push
mov
xchg
ret
add
add
add
flds
fsubrs
clc
repnz
nop
cld
jae
adc
inc
add
push
cmp
call
add
add
add
sub
add
mov
repnz
nop
cld
jae
add
add
add
rcll
mov
inc
add
cld
mov
add
add
add
add
repnz
nop
cld
jae
add
inc
stos
cli
ret
clc
repnz
nop
cld
jae
xchg
cld
add
cli
add
nop
nop
cld
jae
add
add
lea
clc
repnz
nop
cld
jae
add
sub
push
push
push
mov
xchg
ret
stos
cli
jno
inc
add
popf
add
mov
clc
repnz
nop
cld
jae
xchg
add
add
mov
clc
repnz
nop
cld
jae
lock
adc
mov
add
in
nop
leave
jmp
jb
and
add
add
clc
repnz
nop
cld
jae
cwtl
add
out
add
fidivrl
clc
repnz
nop
cld
jae
add
or
repnz
nop
cld
jae
lock
cltd
add
adc
jb
mov
call
in
nop
leave
jmp
cli
add
add
push
clc
repnz
nop
cld
jae
stos
es
add
add
sub
nop
cld
jae
mov
add
add
enter
repnz
nop
cld
jae
inc
add
jb
add
clc
repnz
nop
cld
jae
add
add
jne
inc
fistpll
clc
repnz
nop
cld
jae
out
add
iret
mov
clc
repnz
nop
cld
jae
flds
push
imul
add
clc
repnz
nop
cld
jae
sub
std
cli
lock
std
movzwl
clc
repnz
nop
cld
jae
add
pop
push
mov
nop
leave
jmp
cli
imul
add
add
repnz
nop
cld
jae
into
scas
add
mov
xchg
ret
add
outsl
pop
add
clc
repnz
nop
cld
jae
fcomps
xchg
add
adc
push
push
mov
xchg
ret
fimull
out
dec
add
call
nop
nop
cld
jae
fiaddl
add
cld
adc
test
loop
add
outsl
xchg
add
add
ret
push
mov
ljmp
lea
mov
pop
ret
jno
rorl
add
lds
dec
and
call
add
inc
notb
add
mov
mov
pusha
add
data16
mov
rolb
idivl
sub
pop
push
daa
popa
sbb
jne
fs
xlat
imul
mov
mov
mov
out
mov
mov
add
add
insb
rolb
cmpsl
xchg
add
or
shrl
iret
and
mov
cmp
add
adc
mov
ljmp
out
decb
arpl
add
or
add
out
push
sbb
or
pop
xchg
pop
dec
les
jnp
test
xor
add
popf
out
or
mov
loopne
mov
add
mov
xor
mov
into
sbb
int3
sbb
dec
xchg
dec
jae
add
addb
lret
sbb
cmpsl
into
sub
test
and
mov
mov
and
mov
aas
sub
insb
jmp
mov
mov
fisubl
xlat
sub
stos
adc
add
mov
xor
mov
jnp
das
test
jl
pop
bound
mov
push
cmp
and
mov
jnp
xchg
in
pop
xadd
jns
insl
add
mov
in
data16
dec
inc
add
fdivs
mov
mov
lret
mov
inc
add
and
sbb
add
xchg
aam
and
mov
fs
or
jbe
push
add
pop
mov
enter
add
adc
cmpsb
and
mov
xchg
pop
nop
add
mov
mov
add
add
xchg
add
mov
xor
test
mov
add
or
push
xor
mov
jp
add
push
add
add
cmp
repz
cmpl
mov
test
mov
inc
outsl
rolb
mov
pop
pop
popf
rolb
mov
push
pop
clc
int3
push
add
xchg
stc
das
dec
iret
mov
add
add
add
mov
int3
cwtl
inc
push
nop
add
sarw
mov
in
sub
jno
rolb
or
scas
mov
cwtl
mov
mov
mov
cli
pop
je
or
push
mov
jb
mov
add
fstl
add
nop
add
rolb
mov
mov
mov
inc
dec
sub
mov
push
add
cwtl
addr16
mov
add
add
xlat
out
cwtl
cltd
jbe
icebp
cmc
inc
les
inc
movb
imul
jno
mov
jecxz
test
mov
out
mov
pop
jbe
add
aam
aam
jbe
pop
jne
cmp
out
mov
mov
movsl
fdiv
pop
mov
pusha
add
cvttps2pi
push
inc
mov
add
lret
lods
nop
add
ret
xor
mov
dec
cltd
xchg
jo
mov
add
inc
testb
int
das
xchg
addb
inc
mov
sub
jge
movsl
js
lret
add
scas
add
mov
add
mov
mov
mov
or
imull
add
pop
sub
push
std
les
mov
pop
jecxz
push
dec
push
adc
jge
or
push
jg
int
jae
add
addb
test
notb
pop
xchg
popf
mov
iret
mov
sti
es
mov
lds
sahf
or
add
jp
mov
sbb
cmpsl
sbb
nop
add
xchg
xchg
test
adc
push
repnz
imul
rorl
ljmp
pusha
add
aaa
das
sbb
inc
sbb
xchg
add
fsubrp
or
xchg
adc
mov
xor
mov
or
scas
ds
cli
mov
out
add
scas
adc
mov
addr16
arpl
aaa
lea
and
mov
or
shl
xchg
and
adc
xchg
add
mov
mov
std
lret
xchg
hlt
in
lods
cwtl
mov
cwtl
loope
cli
add
add
jns
add
aam
aaa
bound
mov
icebp
lock
jmp
mov
out
in
fistl
pusha
add
hlt
mov
mov
push
cwtl
adc
add
jp
add
rolb
xchg
and
mov
or
roll
sub
xor
adc
xor
mov
lds
xchg
in
pop
scas
rolb
mov
out
or
cld
mov
xchg
inc
jg
or
sub
gs
xlat
loopne
mov
add
lds
jbe
mov
mov
mov
inc
add
mov
inc
add
mov
xor
and
add
cmc
pop
adcl
inc
sbb
add
les
add
add
jl
pop
cli
popf
mov
mov
mov
adc
mov
add
mov
jmp
cmp
pop
mov
add
inc
mov
movsb
mov
rolb
mov
xor
mov
rolb
mov
pop
lahf
outsl
stos
pop
insb
mov
push
pop
mov
fdivr
dec
test
cmp
push
mov
icebp
stc
loop
mov
repnz
adc
fyl2x
test
mov
mov
subl
fsubrs
imul
add
xchg
fidivl
and
mov
mov
insl
dec
cld
rcrl
ds
adc
mov
mov
mov
mov
mov
or
rolb
mov
sbb
mov
push
push
and
mov
insb
sbb
lds
push
pop
push
or
bound
mov
cwtl
jns
add
decb
jle
inc
add
or
add
nop
add
aaa
xchg
subl
mov
cmc
daa
mov
add
shrl
nop
add
aam
add
ja
mov
addb
cmp
cmp
mull
add
jbe
sahf
and
pop
sub
pusha
add
add
mov
and
mov
jmp
imul
and
mov
inc
xor
mov
idivl
dec
push
je
push
pop
bound
mov
in
cwtl
mov
add
mov
cmp
outsb
add
add
or
js
icebp
cwtl
mov
frstor
sbb
jg
add
lods
scas
jne
add
mov
jl
mov
xor
mov
xor
xlat
arpl
sbb
mov
inc
pop
pushf
rolb
mov
mov
lods
lahf
insb
mov
sub
out
add
int3
pusha
add
mov
gs
in
cwtl
sub
fs
cmp
loope
out
outsl
into
scas
or
pushf
jle
mov
add
mov
test
ss
and
pop
fdivrs
mov
dec
mov
mov
add
or
mov
add
pop
sbb
ljmp
lock
add
pop
lcall
pop
imul
adc
dec
jmp
sti
icebp
inc
aaa
pop
cltd
test
mov
jle
xor
mov
add
rcrl
movsb
cs
mul
in
xor
mov
push
test
sbb
pop
pop
scas
mov
out
sub
inc
xchg
add
data16
lods
add
xor
mov
mov
fwait
xor
mov
aad
push
insb
addb
out
lds
add
mov
mov
mov
mov
add
pop
je
sbb
mov
mov
mov
xchg
add
arpl
sub
add
mov
mov
stos
fcomps
scas
lret
roll
ret
pop
xchg
xchg
dec
pop
pusha
add
xor
mov
filds
and
mov
add
addr16
xchg
scas
adc
je
or
out
cmp
mov
lds
jno
fsubs
std
mov
mov
or
test
scas
das
and
mov
xchg
and
clc
jmp
inc
nop
add
add
sub
and
enter
mov
mov
jne
and
add
jl
lds
shll
xchg
sbb
loope
add
mov
add
mov
imull
lret
push
ficompl
add
fwait
ljmp
mov
stos
push
sbb
imul
xchg
add
mov
std
lds
mov
add
xchg
or
push
xchg
add
lds
add
mov
jmp
add
icebp
fwait
sub
lods
into
mov
decb
add
fwait
inc
add
add
aas
pop
jb
mov
jp
add
add
or
xor
mov
add
fbld
xchg
popa
jge
in
cmp
lret
mov
mov
add
adc
es
sub
jp
shrl
mov
add
add
mov
rolb
mov
mov
sbb
adc
mov
jp
xchg
add
call
mov
jbe
add
inc
lahf
cltd
lds
cmpl
mov
or
push
scas
adc
jp
test
push
sbb
jp
add
ss
push
sbb
pop
inc
and
mov
add
mov
hlt
or
xchg
and
mov
lods
jmp
rolb
xchg
adc
rolb
mov
dec
xchg
add
xchg
xor
neg
mov
outsl
sbb
mov
xchg
add
mov
lret
pop
gs
cmovs
or
mov
shrl
js
sub
add
icebp
pushf
test
fimuls
fisubs
xor
inc
add
mov
mov
cld
xor
mov
cmc
bound
mov
dec
dec
cli
mov
jo
mov
mov
push
stc
pusha
add
lock
and
mov
and
mov
fnstsw
and
jnp
mov
shll
add
pop
mov
jno
ljmp
add
adc
push
sub
cltd
jb
mov
mov
mov
test
add
mov
add
mov
fcoms
jmp
aaa
mov
add
add
scas
daa
mov
inc
add
mov
jp
js
sbb
in
icebp
mov
in
fstpt
repnz
mov
cmp
sub
pop
arpl
sub
sub
cmc
or
add
bound
mov
adc
in
push
dec
push
add
ds
dec
and
mov
mov
mov
scas
test
iret
xor
mov
aam
lret
cmpsl
sbb
lods
stos
mov
mov
add
pop
mov
add
push
add
mov
inc
inc
into
cmc
enter
mov
inc
mov
xchg
and
gs
movsl
jp
add
imul
fwait
jo
mov
dec
cmp
mov
mov
mov
add
adc
mov
add
outsb
inc
testb
fisttps
cwtl
aaa
mov
mov
aad
add
add
jb
mov
sbb
push
push
and
jecxz
xchg
lcall
dec
mov
or
or
int3
jp
pop
mov
and
push
das
clc
pop
movsl
mov
add
movb
mov
mov
popa
mov
stos
test
add
cmp
lcall
jb
mov
add
es
shll
add
pusha
add
into
addb
xor
repnz
and
mov
mov
xchg
xchg
or
int3
jae
sbb
and
mov
adc
mov
push
sbb
push
pop
ds
fldl
add
imul
cmp
mov
jno
jp
test
pop
fists
adc
sub
cmp
sbb
add
lret
add
jl
imul
mov
imul
add
mov
outsb
aas
mov
jo
mov
add
rolb
mov
iret
xchg
pop
xor
mov
add
mov
jp
add
dec
pop
in
add
adc
mov
daa
js
inc
aad
dec
push
rolb
dec
xor
mov
add
mov
mov
add
pop
aam
push
add
add
sbb
mov
add
sub
sbb
repnz
cmp
jno
add
rolb
mov
popa
fucom
fsubrl
jno
mov
sbb
pop
sub
lea
cmc
sbb
in
xchg
add
push
loop
mov
mov
push
pop
dec
out
pusha
add
fistps
or
das
and
lods
mov
lds
dec
decb
xchg
add
cmp
mov
ljmp
sti
mov
xchg
arpl
pop
test
fwait
push
stos
dec
cld
push
xor
mov
ret
cmpsl
movsl
out
add
add
mov
add
lret
sub
xor
mov
fildl
mov
mov
mov
mov
add
xchg
push
mov
sbb
scas
adc
pop
mov
clc
pop
insb
cmp
add
cmp
movsb
fidivs
mov
mov
call
mov
daa
cmp
stos
scas
and
mov
inc
jo
mov
xor
dec
xchg
pop
dec
mov
mov
shll
add
and
inc
jno
repnz
insl
mov
lret
jns
add
pop
int3
lcall
cmp
add
mov
cwtl
loopne
mov
jle
lock
jge
out
inc
outsl
pop
mov
xor
add
and
mov
add
mov
movsl
xchg
outsb
cmp
push
add
add
dec
lods
xchg
inc
add
push
sbb
cmp
cwtl
dec
sbb
jns
cs
lods
lock
mov
and
rorl
adc
leave
stos
pop
mov
add
add
fdecstp
cs
stos
push
add
inc
add
push
xlat
sti
icebp
enter
add
dec
mov
sub
mov
xchg
hlt
pop
and
mov
stos
pop
add
mov
pop
or
add
inc
add
cli
mov
mov
jge
pusha
add
pop
jb
mov
imul
push
int3
in
xlat
or
sbb
test
cwtl
addl
add
fisubs
and
jge
std
out
jmp
lds
ljmp
add
lcall
mov
cmp
clc
jmp
sub
mov
xchg
loope
popa
popa
xor
mov
mov
hlt
lcall
xchg
xchg
add
add
mov
add
sub
rolb
xor
stos
cmpsl
jnp
subl
lret
test
ljmp
mov
add
sbb
popa
test
or
and
mov
sbbl
loop
mov
out
rolb
mov
nop
add
lock
xchg
mov
add
add
dec
imul
pop
lods
lock
clc
push
loop
mov
mov
xorl
mov
mov
push
jbe
add
stos
cmp
imul
adc
mov
jbe
ljmp
add
jns
mov
inc
inc
push
dec
ficomps
add
push
sub
sbb
pop
nop
add
push
or
or
outsb
testb
scas
inc
popf
cmc
sbb
add
push
aas
lahf
mov
mov
hlt
xor
mov
addb
adc
into
mov
push
jg
jno
test
loopne
mov
mov
jmp
daa
es
xor
mov
lahf
push
ficomps
inc
add
adc
or
add
add
mov
mov
add
mov
ja
push
js
sti
clc
xchg
add
add
rolb
mov
mov
je
repnz
imul
js
mov
add
out
jbe
xchg
add
mov
cld
mov
xchg
gs
pop
filds
push
push
fdivrl
mov
in
ja
sbb
inc
mov
mov
sti
pop
int3
pop
pop
icebp
xchg
dec
xchg
movsb
mov
stc
insl
sub
sti
xchg
sahf
dec
adc
mov
fidivrs
in
pop
pop
call
pushf
inc
add
jb
mov
add
sbb
imul
inc
mov
add
out
push
add
mov
ds
xor
mov
add
sub
add
ficomps
cmpsb
or
xor
add
in
ljmp
add
pushf
adc
jno
aam
ret
test
lea
fbld
dec
popa
or
aam
cld
mov
add
mov
xor
mov
rcll
adc
sub
lods
icebp
push
add
add
fnop
add
add
push
or
stos
inc
add
sbb
stos
fs
scas
jl
inc
add
fsubrl
pop
sbb
call
mov
sbb
jne
add
cmc
push
add
adc
pop
mov
inc
add
lock
xchg
adc
add
cmp
mov
int3
mov
loope
loope
idivb
addb
dec
mov
enter
stos
jbe
aad
mov
std
rolb
mov
lahf
orl
mov
movswl
pop
xchg
add
bound
mov
jl
pop
sub
jno
xchg
push
add
mov
test
mov
and
lds
addb
mov
mov
movsb
arpl
push
dec
xor
mov
roll
mov
mov
push
cmp
inc
mov
in
add
rolb
mov
pop
xlat
aas
or
mov
out
push
repz
repz
jb
mov
and
cmp
add
cs
add
addb
int
pop
popf
sarl
aad
es
pop
cmp
mov
push
movb
mov
loope
and
mov
adc
mov
adc
mov
fidivrl
es
add
dec
and
mov
bound
mov
cmpsb
call
sahf
pop
jg
mov
add
push
add
imul
test
lcall
ljmp
add
insl
dec
add
je
ss
adc
push
push
int3
lret
loope
add
add
sbb
and
stc
arpl
pop
lock
sti
mov
fisttpll
iret
mov
mov
pop
mov
imul
lds
test
jmp
mov
insb
xchg
es
or
roll
cmpsl
lcall
mov
stos
js
outsb
dec
jbe
dec
test
or
add
inc
push
mov
add
mov
add
out
cld
scas
adc
es
mov
add
adc
lock
xchg
movsb
mov
sbb
test
inc
add
add
lret
add
mov
inc
inc
mov
fisttpl
mov
mov
fs
cltd
cmc
insl
lahf
sub
les
mov
sahf
icebp
ss
mov
fldt
add
push
out
pop
sub
cs
lds
dec
jne
push
pop
aaa
and
int3
xchg
iret
repnz
mov
add
lahf
cmpsb
ds
inc
jg
lahf
cld
loopne
mov
int3
and
add
add
std
inc
add
add
sbb
lods
cmp
stos
add
sbb
dec
mov
sete
addb
fsts
pop
add
mov
leave
in
dec
jp
xchg
push
sub
fsub
add
add
mov
insl
adc
mov
ret
jp
dec
call
push
jnp
add
cwtl
cmpsb
pop
roll
add
mov
mov
imul
loope
or
mov
gs
addl
out
add
or
and
mov
mov
push
add
popa
adc
adc
jge
lods
xor
insb
xchg
add
mov
pop
jmp
rolb
mov
add
adc
push
stos
mov
sbb
add
inc
aam
pop
mov
mov
cmpsl
dec
cmpsb
lock
shrl
mov
add
add
add
mov
mov
add
sub
movlps
mov
movsb
cmp
inc
add
fcomps
inc
dec
jae
jl
inc
adc
clc
adc
add
add
lea
push
movsl
insl
mov
mov
mov
mov
push
adc
pop
in
shl
add
xchg
xchg
jl
hlt
ficoms
or
xchg
add
mov
lcall
jno
xor
mov
mov
sbb
clc
mov
rolb
mov
add
mov
aad
add
mov
add
in
insb
inc
add
mov
rdpmc
into
stc
mov
push
loopne
mov
add
add
mov
mov
add
mov
dec
mov
add
mov
add
mov
jl
dec
and
mov
add
addb
push
xchg
add
add
xor
mov
jbe
addb
daa
adcl
xor
mov
iret
jb
mov
call
dec
lea
xbegin
addb
aam
cmp
in
dec
stos
mov
icebp
xchg
add
mov
and
sub
test
rolb
sub
mov
ljmp
es
cmpsb
movsb
xchg
fisttpll
sub
jle
in
rolb
dec
cmp
popf
mov
inc
pop
aas
roll
inc
iret
es
adc
test
cmp
jo
mov
mov
mov
xchg
nop
add
out
cld
imul
testb
loope
cmp
and
mov
sahf
or
or
cmp
and
mov
push
rolb
inc
ja
repnz
mov
daa
test
add
mov
jnp
sahf
pop
xorl
mov
xchg
imul
mov
mov
mov
dec
icebp
mov
pop
push
inc
xchg
cld
cmp
sbb
notl
fists
push
mov
cmp
popa
xchg
xchg
adc
int
mov
sub
lret
mov
mov
cli
ja
add
mov
jae
jl
xchg
add
add
je
mov
aad
push
sub
sbb
cmpsl
pop
scas
dec
adc
mov
mov
sahf
repnz
mov
add
xorl
mov
sub
add
mov
andl
mov
loopne
mov
xor
mov
shll
jb
mov
dec
in
add
push
xchg
stos
ficomps
int3
call
jne
cmp
in
xchg
add
and
xchg
add
lea
add
movsb
loop
mov
add
stos
adc
mov
scas
pop
inc
mov
rolb
mov
imul
mov
popa
xchg
add
add
int3
movsl
rolb
mov
flds
int
adc
add
mov
add
insb
frstor
mov
jne
mov
outsl
imul
imul
and
mov
sbb
inc
mov
cwtl
mov
cmp
xchg
dec
pop
loopne
mov
add
xor
mov
push
mov
add
mov
add
push
imul
lods
js
and
mov
add
popf
add
add
mov
addb
mov
mov
dec
push
ficomps
orl
add
insb
push
add
add
pusha
add
add
ja
add
mov
addb
and
xor
push
cltd
in
cmc
sahf
push
ljmp
xor
mov
jb
mov
adc
mov
loopne
mov
add
cs
add
sbb
pop
cmp
mov
pop
pop
scas
rolb
mov
jle
xchg
add
ret
fwait
and
jns
or
or
nop
add
jle
and
std
cs
add
into
pop
addl
xchg
mov
jbe
push
cmc
mov
dec
push
lahf
mov
jge
xchg
aas
pop
stos
mulb
int3
cmp
lods
cmpsl
out
inc
xchg
add
cld
call
dec
repnz
rolb
mov
add
data16
add
sub
out
adc
mov
push
mov
jbe
addb
push
movsl
inc
cltd
jmp
mov
add
out
push
jno
jb
mov
push
pop
jp
dec
and
mov
ja
das
cltd
fstps
lods
and
jp
or
les
lcall
fcoms
add
mov
jp
add
pop
negl
leave
and
mov
mov
jno
popa
mov
je
jecxz
pop
jae
ljmp
mov
add
add
push
add
out
gs
adc
add
insb
mov
lahf
and
mov
idivl
mov
aam
js
insb
xor
mov
cmp
adc
push
mov
mov
daa
sbb
aad
add
movsb
sbb
sub
addb
jg
outsl
fmull
ret
jno
xchg
xchg
add
clc
mov
and
add
sbb
lahf
sub
sub
push
add
insl
rcll
repz
push
push
iret
jo
mov
jle
add
in
pop
pop
cmpsb
stos
push
mov
mov
lcall
add
adc
mov
int3
xor
mov
fsubl
jbe
xor
sbb
adc
mov
add
mov
mov
mov
jns
stc
lds
imull
mov
pop
push
fsubrl
loop
mov
and
pop
in
movb
push
add
add
mov
cli
or
add
neg
push
test
jg
fwait
lret
stos
cli
or
xor
mov
pop
mov
dec
fsubl
mov
nop
add
mov
mov
out
out
in
mov
mov
cmp
je
es
enter
insl
xlat
dec
dec
das
mov
mov
pop
inc
add
imul
jg
loope
xchg
iret
lods
adc
mov
mov
lahf
mov
mov
repnz
shr
jg
popf
addr16
push
pushf
and
mov
loope
ss
das
pop
jge
xchg
mov
lret
pop
push
add
mov
inc
push
push
mov
sbb
lods
jmp
mov
stc
push
pushf
pop
and
add
add
addb
adc
mov
mov
mov
mov
rolb
mov
call
lret
add
ret
lods
sbb
jb
mov
xor
jl
adc
jecxz
decl
push
mov
jmp
push
push
add
inc
dec
iret
jb
mov
ljmp
xor
push
jne
add
popl
loopne
mov
mov
mov
mov
data16
adc
mov
test
lds
fldt
daa
cmp
dec
or
ret
movsl
ja
jg
add
rorl
mov
ss
lret
add
ss
into
push
outsl
jns
pop
add
add
out
data16
mov
dec
sub
ficomps
add
mov
or
cmp
repnz
es
pop
outsb
cli
pop
adc
mov
jecxz
jae
dec
cmp
inc
lods
push
xlat
in
and
add
or
add
mov
mov
cmp
add
jnp
inc
loope
add
sub
add
add
mov
je
add
testb
lahf
sub
inc
mov
add
dec
jo
mov
in
jge
add
mov
pushf
sahf
inc
push
pop
movsb
rorl
adc
mov
fstpt
or
add
or
add
mov
and
mov
dec
push
imul
pop
jb
mov
mov
mov
stos
mov
inc
push
jo
mov
mov
cs
scas
test
add
dec
fldenv
add
mov
cmpsl
mov
mov
pop
sub
add
adc
push
xchg
add
in
add
push
data16
and
mov
mov
inc
add
stc
push
popf
mov
cli
addb
and
mov
outsl
xor
add
je
pop
sub
or
sti
cltd
pop
fwait
sub
add
mov
ret
and
sahf
mov
mov
fstpt
repnz
aas
out
mov
mov
xlat
xorl
pop
sbb
mov
mov
xchg
ja
mov
add
mov
adc
out
ds
stos
dec
mov
rolb
mov
add
imul
mov
xor
lods
mov
add
add
aaa
inc
jmp
add
mov
add
aas
add
add
arpl
enter
pop
in
add
insl
dec
mov
mov
add
cli
mov
push
cmp
lcall
xor
pop
icebp
pop
dec
sub
fisubrl
inc
add
sbb
add
and
mov
cli
outsb
jg
fnstenv
cmpsb
xchg
mov
sub
xor
add
mov
mov
add
fsub
sub
ljmp
jnp
and
mov
cmpsl
fists
add
cltd
cmpsl
mov
mov
sbb
loopne
mov
inc
movsl
sub
jmp
movb
out
add
xor
xbegin
inc
movsl
mov
mov
mov
lods
cmp
sbb
add
mov
rolb
stos
xlat
sbb
notl
mov
mov
add
add
mov
mov
xchg
add
int3
push
xchg
add
push
mov
mov
add
jge
lods
dec
xchg
xor
mov
mov
add
rolb
mov
orl
mov
repnz
mov
bound
mov
call
jae
add
sti
pop
mov
into
and
mov
mov
jmp
rolb
mov
add
mov
mov
mov
xor
jg
test
xchg
add
push
mov
fcomps
cli
sub
xor
xor
mov
or
add
mov
ds
add
imul
lcall
adc
xor
clc
out
loopne
mov
xchg
sbb
sahf
arpl
mov
mov
add
mov
sub
lods
dec
in
cltd
jnp
jbe
cld
mov
jno
daa
inc
insl
sub
insb
das
and
idivl
mov
cmp
ret
cmc
cwtl
mov
sub
ret
jmp
jns
push
cld
and
push
jge
out
jb
mov
insb
dec
imul
xor
jp
cmp
scas
insl
push
fbstp
mulw
dec
cmp
js
mov
dec
or
rcr
popf
push
in
xor
inc
jecxz
add
mov
loop
mov
push
enter
sar
lea
shll
leave
std
outsl
lock
add
frstor
mov
xchg
adc
mov
rolb
gs
mov
add
addb
lret
cltd
push
lahf
fldl
mov
mov
mov
xor
mov
fwait
xor
add
xchg
push
movsb
mov
js
in
dec
push
ficompl
pop
cmp
popa
addb
push
add
ds
add
movsb
cmp
dec
add
add
sbb
sub
mov
in
test
mov
sbb
sub
clc
jns
sub
add
sub
push
fisubrl
shll
add
ljmp
cli
fs
in
mov
cs
cmpl
and
mov
inc
repnz
popf
jp
sbb
cmp
into
or
push
lahf
fsubrs
jns
sub
push
add
fsubr
js
cmp
add
cmp
add
add
add
cmc
test
in
xchg
push
add
out
enter
sbb
ja
and
cmp
addl
add
push
inc
dec
inc
fdivrs
or
dec
shrl
mov
mov
or
push
add
lock
add
lods
xchg
push
hlt
mov
out
push
mov
mov
mov
test
push
pop
mov
xor
add
movb
jle
jne
icebp
je
rolb
pop
cmp
outsl
mov
jbe
in
cmpsl
or
jle,pt
push
pop
xor
inc
sub
add
xchg
pusha
add
inc
jae
in
jbe
add
cmc
out
into
repnz
imul
mov
push
push
sbb
test
jle
mov
xchg
lods
call
xor
mov
cltd
les
add
mov
xor
mov
add
das
orl
push
test
pop
sahf
rolb
mov
push
bound
mov
add
mov
add
mov
xchg
aad
loop
mov
add
jb
mov
imul
lods
or
add
add
popf
cmpsb
pop
jns
add
mov
xor
pop
xchg
mov
adc
mov
add
repnz
and
push
sbb
xchg
add
mov
out
sbb
cli
imul
je
push
cmpl
mov
adc
mov
add
mov
fwait
das
xor
mov
imul
inc
aam
add
jge
mov
nop
add
add
aas
je
jo
mov
out
push
aaa
mov
add
mov
sub
adc
mov
repnz
cmc
cs
dec
mov
roll
loopne
mov
or
add
sbb
in
fiaddl
mov
aas
insb
js
movsb
lahf
jno
cmpsb
push
push
jle
pusha
add
js
mull
arpl
shll
mov
repnz
add
fimull
inc
push
enter
leave
ss
jb
mov
in
daa
fimull
sub
add
mov
loope
dec
dec
push
mov
mov
mov
lret
mov
add
jp
stc
int3
mov
add
mov
dec
or
sub
rolb
mov
in
jns
daa
dec
mov
dec
testl
xor
adc
movb
in
and
mov
insl
mov
in
nop
add
movsb
data16
cmp
bound
mov
and
mov
ja
test
add
out
negl
add
mov
rolb
mov
ljmp
mov
add
add
fwait
dec
jmp
dec
aaa
int3
add
mov
stos
adc
mov
mov
cmp
adc
mov
mov
mov
das
cmp
mov
jp
insl
sbb
out
xchg
adc
lea
arpl
ds
enter
mov
sbb
mov
add
out
fistpl
inc
add
sbb
dec
icebp
jge
add
pushf
inc
addb
mov
mov
fidivrs
push
jmp
pusha
add
or
add
add
pop
arpl
popa
xchg
daa
jno
clc
jbe
push
or
push
scas
xor
mov
or
fbstp
mov
sub
or
add
rolb
cmp
xor
push
add
insl
add
mov
mov
jl
push
pop
sub
mov
xlat
xorl
dec
pop
push
xor
mov
sbb
ret
xchg
push
xchg
test
test
xor
xchg
cmpsl
insb
clc
sahf
shll
lahf
lcall
mov
adc
add
mov
add
mov
mov
lds
movsb
ljmp
pop
or
sbb
push
mov
jbe
int
xchg
dec
imul
jne
push
out
jne
cmc
sti
xor
mov
push
add
add
add
pop
add
mov
xchg
adc
mov
add
jne
add
add
sub
ds
mov
cmp
inc
xchg
rsqrtps
mov
pushf
mov
dec
cmpsl
mov
mov
mov
mov
mov
mov
adc
test
or
icebp
inc
add
dec
into
jl
push
test
mov
add
and
loop
mov
add
das
std
mov
mov
add
push
stos
test
add
sbb
insl
or
sbb
inc
add
out
stc
subl
lods
dec
popf
rolb
mov
xchg
jbe
mov
mov
add
cmp
mov
lahf
jmp
and
cli
pushf
jno
add
mov
jo
mov
adc
adc
clc
mov
add
add
fs
testl
pop
push
push
outsb
ret
fsts
inc
add
xchg
add
inc
das
imul
sub
cmp
add
call
mov
xor
xor
xor
das
sub
mov
sub
icebp
mov
sbb
push
add
mov
mov
lea
rolb
mov
add
push
fidivrs
or
add
add
sbb
scas
inc
mov
sub
sbb
xchg
out
jb
mov
fxch
adc
sub
insl
cmp
pop
movsb
aaa
call
xchg
dec
shl
hlt
dec
cmp
add
les
add
insl
xchg
sahf
add
adc
ljmp
mov
cmp
lods
add
mov
mov
xchg
fisubrl
std
push
inc
add
push
xchg
adc
mov
jb
mov
mov
aad
push
add
mov
inc
add
out
mov
add
lret
xor
mov
lahf
into
nop
add
cmp
push
in
jg
add
add
mov
cmp
addb
into
or
lock
das
mov
or
rcrl
mov
push
inc
lods
lahf
jo
mov
outsl
mov
out
xchg
add
mov
hlt
fldl
mov
add
xor
fisttpll
or
add
les
stc
inc
add
lds
add
add
xchg
sub
sahf
fmuls
mov
add
test
divb
outsl
add
mov
xor
mov
test
fidivs
call
cmp
or
jp
add
outsb
arpl
mov
test
fistl
lods
adc
daa
ss
add
add
pushf
inc
add
jle
mov
hlt
mov
out
sar
jne
add
ret
or
jmp
sbb
add
add
bound
mov
jns
cmc
pop
add
pushf
mov
mov
adc
iret
push
es
sub
cs
push
push
and
mov
das
ud1
ljmp
xchg
pop
dec
cltd
leave
cmp
nop
add
and
add
mov
nop
add
adc
xor
add
add
mov
lahf
inc
rolb
mov
arpl
push
cmp
ljmp
fisubs
lahf
lcall
int
add
fistps
pop
fistpll
jns
add
sbb
gs
jge
mov
aaa
jl
aam
adc
mov
push
pop
cmp
mov
inc
mov
div
loopne
mov
jae
and
lds
clc
adc
mov
and
outsb
insb
cltd
dec
stos
cs
and
mov
paddw
push
or
out
jge
ljmp
mov
mov
cmp
mov
dec
mov
rolb
mov
mov
mov
sub
incl
add
cs
mov
mov
out
aaa
xchg
push
jns
cltd
into
mov
mov
add
imulb
xchg
in
add
add
xor
mov
add
adc
mov
mov
in
push
mov
or
lds
add
mov
inc
add
ljmp
fsubr
in
nop
add
aas
pop
xchg
outsb
hlt
ret
push
lds
pop
fs
aad
data16
arpl
popl
mov
mov
jo
mov
inc
ret
add
mov
add
rolb
cs
dec
rolb
fwait
in
or
mov
jp
fadd
jbe
mov
mov
pop
inc
add
cmp
inc
xchg
xor
cld
lea
add
movl
data16
aad
mov
pop
test
scas
mov
lret
mov
xor
movsb
add
add
add
mov
mov
dec
ret
sbb
mov
lret
pandn
inc
hlt
ds
mov
ds
rol
push
pop
dec
mov
pop
jge
add
add
sub
sbb
pop
mov
lcall
das
add
aad
mov
xchg
mov
mov
mov
xchg
in
add
xchg
fstpl
mov
xor
mov
scas
aas
pop
sbb
pop
xor
add
jl
xchg
mov
mov
ljmp
pop
stos
std
cwtl
cwtl
lahf
xlat
dec
mov
mov
in
jp
mov
dec
dec
mov
in
add
xchg
pop
cmp
cmpl
add
aad
inc
add
jbe
jns
sahf
out
ds
add
mov
jb
mov
jmp
jmp
loope
pop
jmp
pop
stos
xor
mov
add
cmp
add
nop
add
outsl
add
inc
mov
mov
pop
mov
fdivs
daa
test
fisubrs
jecxz
shl
xchg
sub
mov
mov
into
inc
repz
push
lahf
xchg
fistpll
mov
add
inc
ja
jnp
pop
test
or
xor
add
jnp
or
call
mov
add
stc
sahf
push
das
and
pop
or
cmc
or
add
mov
sarl
dec
or
lds
pusha
add
mov
inc
in
add
mov
in
xchg
dec
lcall
xchg
or
mov
jne
xor
inc
add
add
jbe
add
push
add
int
add
scas
mov
jo
mov
jp
add
sbb
insl
ljmp
jbe
js
mov
es
mov
sbb
xchg
push
add
jg
mov
add
fidivs
pop
xor
mov
jp
lods
icebp
mov
mov
fcmovbe
rolb
push
mov
or
pop
push
or
mov
and
mov
mov
aas
ficoms
xchg
pop
xchg
stos
cwtl
dec
lods
dec
and
mov
cld
xor
mov
imul
lret
cmp
and
add
mov
jle
add
int3
xor
add
rorl
cltd
or
cld
daa
pop
out
es
cmpsl
add
lock
mov
fisttpll
add
rolb
mov
les
sti
stc
lods
fs
add
mov
scas
jg
ret
cmpl
pop
ret
repz
cltd
es
mov
clc
xchg
pop
aaa
mov
mov
addb
and
add
xor
ret
repnz
mov
inc
pop
mov
add
add
dec
sub
inc
add
jle
leave
cmpsb
out
mov
mov
mov
dec
test
gs
mov
and
mov
jecxz
add
cmp
mov
out
xor
mov
add
mov
ljmp
pop
lds
mov
lret
jecxz
add
inc
rolb
pop
repnz
pop
xor
fucom
add
out
fdivl
mov
enter
add
inc
xor
xchg
popa
stos
push
pop
pop
scas
lds
adc
cltd
pusha
add
mov
add
icebp
mov
mov
pusha
add
xchg
add
add
push
mov
loop
mov
into
xor
add
lods
xor
mov
mov
mov
dec
mov
addb
imulb
jne
cmp
lods
mov
add
or
add
mov
fdivr
jnp
mov
adc
pop
hlt
ffreep
add
pop
inc
hlt
pusha
add
aaa
pop
lret
push
dec
sub
nop
add
pop
xor
mov
mov
xchg
lahf
rcrl
mov
pushf
cli
into
jo
mov
enter
add
mov
gs
call
sbb
mov
mov
ret
xor
and
int
dec
pop
arpl
insb
inc
ret
lcall
icebp
mov
mov
test
int3
mov
mov
sti
repnz
imul
or
repz
rolb
mov
pushf
fstp
repnz
mov
mov
stos
mov
adc
mov
mov
mov
cmp
stos
lahf
sub
aad
jmp
cli
gs
lds
dec
push
add
lea
in
iret
ss
push
data16
add
push
mov
dec
mov
or
xor
mov
add
sahf
imul
cs
add
into
xlat
scas
lods
pop
add
mov
mov
dec
ss
push
add
fdivs
add
pop
and
mov
push
xor
add
mov
add
mov
push
adc
adc
es
xchg
and
mov
add
out
xchg
push
sti
cmp
fildll
lahf
pusha
add
mov
add
js
inc
aam
arpl
cmp
nop
add
and
and
mov
sbb
mov
mov
cld
test
clc
ret
sbb
xlat
es
scas
inc
lods
mov
jne
rcl
and
mov
adc
dec
scas
lock
add
cmp
sbb
mov
ficomps
and
push
add
repz
test
mov
add
outsb
cmc
mov
fwait
scas
or
cmp
pop
xchg
jns
xlat
adc
mov
ds
add
lcall
sub
lock
and
add
push
xchg
add
add
and
mov
sub
sti
mov
add
xor
mov
jo
mov
and
xchg
stos
cmp
add
xchg
enter
adc
jmp
push
cmc
mov
add
fsubrl
addb
aad
lcall
sbb
push
outsl
pop
ja
add
leave
aad
cltd
iret
mov
cmc
enter
movsl
sub
cs
xor
repnz
out
xor
adc
jmp
pop
fwait
mov
xor
and
sub
ret
ret
jne
fcompl
jmp
jns
xchg
xor
mov
or
add
imul
jge
popa
sbb
push
shrl
adc
sbb
fwait
mov
mov
xchg
or
and
jo
mov
add
lods
xchg
test
sti
lcall
push
or
in
ljmp
mov
loopne
mov
mov
fdivs
xchg
add
lods
sbb
inc
xor
popf
inc
imul
dec
jp
in
test
jge
add
mov
mov
xchg
add
mov
cmp
jmp
pusha
add
pop
or
add
xchg
add
add
add
add
and
mov
imul
ss
or
mov
mov
sahf
stos
jae
mov
rolb
mov
lods
icebp
sbb
test
mov
xchg
mov
mov
mov
and
mov
or
and
and
mov
stos
xor
xor
mov
mov
je
ljmp
add
mov
gs
mov
and
shr
mov
out
xor
mov
push
add
mov
add
das
cmp
adc
add
rolb
mov
xchg
sub
test
push
or
test
jp
sub
jno
xlat
and
add
into
or
dec
cltd
ja
add
push
push
test
add
incl
lock
addb
push
in
test
add
add
int3
or
add
cvtps2pd
test
mov
addr16
dec
cmp
stc
jge
into
addb
inc
add
mov
add
push
cmp
out
cmc
addr16
repz
popf
jbe
mov
cmp
mov
add
mov
dec
and
addb
clc
inc
add
cli
sbb
sar
pushf
arpl
rolb
push
or
ror
fmul
out
xchg
shll
add
xchg
xchg
add
push
aam
lcall
mov
je
jne
clc
dec
leavew
mov
mov
data16
ljmp
ret
rolb
dec
les
stos
int3
inc
add
imul
enter
popl
add
aad
nop
add
add
test
sahf
nop
add
push
loope
fists
leave
adc
fldt
push
add
mov
add
mov
add
or
inc
or
add
lret
sub
xrelease
and
mov
xchg
jb
mov
leave
sbb
mov
xchg
add
mov
mov
sub
add
add
mov
sbbl
jecxz
jmp
ret
movsb
lahf
leave
mov
mov
add
add
or
imul
std
mov
mov
push
add
movsb
push
mov
add
mov
popl
or
add
mov
out
in
fsubrs
rolb
add
mov
xchg
xor
mov
mov
mov
pop
idivl
jns
cs
add
mov
mov
jo
mov
mov
hlt
or
fwait
push
cmp
or
and
mov
repz
ljmp
xchg
jge
xchg
movsb
mov
add
add
pop
dec
mov
add
mov
cmp
xchg
cwtl
lock
adc
mov
or
inc
jp
outsl
sub
add
mov
jg
loopne
mov
add
mov
and
mov
ja
pop
mov
scas
xlat
lret
movsb
shll
movsb
push
xor
mov
or
pop
fmull
add
or
lods
xchg
mov
push
add
insl
or
call
insl
cs
add
sub
mov
insb
movsb
xchg
dec
out
push
shr
push
sahf
fcoml
xor
and
add
jno
dec
jg
mov
sahf
insl
mov
les
mov
fists
push
add
xchg
xchg
sbb
sub
mov
mov
add
pop
lcall
test
aaa
pop
xchg
xchg
add
nop
add
mov
dec
or
mov
out
jmp
inc
lahf
or
loope
rolb
mov
lret
gs
xchg
scas
xchg
and
add
addb
push
roll
mov
mov
xchg
sub
insl
or
jmp
inc
add
add
add
xchg
sbb
add
rolb
inc
mov
mov
std
daa
lahf
push
movsl
mov
or
fs
add
mov
rolb
adc
scas
jne
rolb
mov
adc
mov
jge
xor
pop
mov
pop
add
mov
lcall
and
mov
test
add
push
add
stos
ds
mov
mov
xchg
xor
mov
icebp
xchg
addb
add
mov
and
andl
pop
inc
xor
add
out
lret
mov
add
mov
iret
fsubrp
jmp
and
mov
dec
ss
ss
mov
inc
add
rolb
push
jp
cmp
pop
leave
adcl
jne
mov
repz
sub
xor
repz
aas
xor
fdivrs
and
faddl
pop
xchg
inc
fsts
add
flds
pop
fildl
and
xchg
mov
stos
jp
add
mov
bound
mov
int3
mov
aas
mull
mov
and
jns
jle
popa
out
push
cmp
add
mov
adc
test
jb
mov
mov
sbb
mov
cmp
push
test
add
push
dec
int3
rolb
mov
shl
mov
ret
push
insb
push
cmp
fmull
xchg
jg
push
mov
and
mov
iret
jno
add
sub
mov
aad
jne
mov
jbe
and
add
sbb
push
dec
xor
dec
mov
push
icebp
xor
mov
pop
adc
or
mov
dec
pop
jnp
rcll
add
add
call
mov
popl
outsl
fcomip
ret
lods
cmp
popa
mov
test
inc
add
and
addb
test
sub
movl
jle
inc
imul
cmp
add
movsl
in
out
aas
jae
add
inc
repz
fst
addb
or
add
cmpsl
jecxz
jl
add
add
rolb
mov
pop
popl
jle
add
mov
mov
add
mov
jge
add
daa
xchg
popa
loope
inc
sub
add
push
ret
push
inc
les
jmp
jge
fadds
xor
mov
inc
or
ret
lret
jnp
ja
lret
sahf
lret
add
pop
and
jmp
add
sub
cmpsl
aas
cmp
inc
stos
xlat
ja
in
mov
or
xlat
jb
mov
pop
imul
pop
mov
xchg
fdivs
jl
cmp
sbb
add
test
leave
mov
add
bound
mov
out
jmp
add
mov
jae
fsubrl
mov
mov
fwait
sub
add
pop
cmpsb
jecxz
sbb
addb
cmp
insl
xchg
add
testb
lods
test
mov
mov
cmpsb
lds
mov
mov
and
cmpsb
lods
aad
clc
adc
fwait
cmpsb
mov
mov
daa
xlat
popa
mov
cli
popf
insl
into
or
jecxz
jbe
fidivrl
iret
das
lret
test
mov
fcmovnb
push
mov
pop
sti
lods
pop
jp
mov
mov
mov
xor
add
mov
adc
fs
lods
loopne
mov
mov
stos
gs
add
aad
add
add
cld
addb
aad
ljmp
push
repnz
mov
lcall
bound
mov
add
cmp
ss
pop
adcl
add
xchg
inc
xor
lret
push
aam
repz
mov
mov
and
mov
sub
and
pop
xor
mov
stos
push
add
mov
sub
mov
mov
int3
fldl
cltd
decl
sbb
lods
adc
xchg
cmpl
pop
out
clc
out
testl
mov
dec
lods
jbe
lock
add
add
mov
fcomi
pop
test
cmp
dec
mov
dec
ret
mov
adc
jl
sub
sub
pop
xchg
jbe
add
mov
pop
inc
add
or
mov
xor
jecxz
push
pop
xor
add
mov
xor
mov
sarl
sbb
ret
pop
mov
add
push
dec
ret
pop
orl
mov
add
fists
xchg
mov
push
sti
push
add
add
lahf
rcrl
add
insb
or
mov
inc
add
lret
mov
sbb
add
je
rolb
mov
add
add
xchg
js
add
mov
rolb
mov
inc
jmp
add
push
jecxz
out
mov
pop
test
fidivl
pushf
mov
push
mov
or
add
lahf
dec
jle
ljmp
add
add
xchg
loop
mov
inc
int3
mov
mov
add
inc
push
idiv
push
and
aad
add
sub
nop
lea
mov
ss
mov
xchg
jbe
add
negl
inc
mov
add
mov
inc
xchg
cli
fstp
dec
jmp
add
mov
in
movsl
loop
mov
icebp
aaa
jle
push
inc
jg
push
add
jmp
mov
mov
add
adc
mov
shll
mov
add
push
repnz
add
loope
dec
popa
fcmovb
and
cmp
add
cmp
mov
mov
inc
sahf
pop
dec
adc
rolb
insb
cmp
add
dec
xchg
xchg
mov
repz
mov
mov
sub
lods
ret
pusha
add
mov
mov
add
and
mov
dec
sub
mov
sbb
mov
mov
cmc
icebp
mov
js
sub
add
jbe
test
jbe
mov
or
es
and
mov
add
pop
inc
add
mov
push
divb
movsb
jne
ret
cmc
stc
pop
pop
gs
mov
fmull
imul
incl
xor
lods
mulb
cmc
inc
add
aam
mov
jl
loope
push
add
mov
ffree
mov
mov
aas
xor
adcl
adc
mov
add
or
rolb
mov
or
js
je
add
mov
movsl
push
cmp
add
hlt
sub
and
mov
pop
cmp
push
xor
mov
outsb
xchg
push
lods
inc
stos
sub
addr16
es
in
paddsb
aad
popf
insl
sbb
aad
outsl
shrl
ret
sti
dec
stos
mov
mov
repz
adc
jp
dec
mov
out
mov
in
inc
mov
mov
mov
addb
jo
mov
mov
or
add
cld
or
lods
mov
aad
push
repnz
add
inc
call
pop
int3
add
bound
mov
jo
mov
mov
lahf
pushf
or
pop
mov
dec
dec
cmpsl
stos
int3
mov
dec
das
pop
jne
je
pushf
push
fldl
sub
xor
mov
mov
mov
xchg
add
icebp
sub
enter
imulb
int
in
mov
dec
mov
add
fsubp
mov
popf
lahf
clc
rorl
aaa
pop
xchg
mov
add
cltd
call
clc
lahf
pop
addb
push
mov
addb
js
add
add
aam
mov
mov
xchg
std
xchg
out
fs
xlat
inc
stc
sbb
dec
cwtl
mov
adc
push
mov
hlt
mov
mov
and
or
pop
mov
fdivrl
xchg
movsb
sbb
add
add
cmpsl
inc
movsb
idivb
pop
xchg
mov
sub
mov
stc
aaa
int
ret
in
out
mov
fisubs
add
aas
pop
aaa
sub
xor
inc
jbe
mov
fisttpll
divb
sbb
in
mov
xor
mov
push
xor
movsl
jb
mov
mov
lret
ds
rep
mov
mov
xor
mov
pushf
push
xchg
add
in
es
add
xor
mov
xchg
add
add
in
push
mov
dec
add
mov
out
fwait
shrl
mov
push
sbb
mov
push
inc
std
jbe
or
xchg
fwait
mov
sbb
mov
sbb
rolb
mov
dec
lret
adc
xor
mov
leave
cld
imul
fs
in
jge
mov
in
add
inc
adc
mov
lds
jno
sub
rolb
and
add
xchg
dec
fidivrs
or
jns
mov
bound
mov
add
mov
mov
rolb
popa
imulb
cmpl
out
call
int3
and
add
sub
sbb
mov
scas
or
addb
fisubrl
loope
dec
jp
inc
cmp
hlt
leave
mov
xor
jne
mov
cs
mov
add
and
xchg
and
cld
cmp
mov
add
icebp
mov
mov
mov
cltd
jp
xlat
iret
mov
add
pusha
add
mov
adc
add
pop
les
fildll
add
add
sbb
mov
fnstenv
mov
cmpsl
mov
ss
fmuls
int3
aam
mov
xchg
lods
dec
sti
adc
mov
xorl
fs
add
push
addb
mull
bound
mov
gs
add
mov
mov
xor
xor
mov
aad
inc
inc
jae
add
mov
mov
add
fistpl
fists
jmp
pop
adc
loope
add
mov
add
inc
outsb
test
mov
int3
mov
sbb
dec
andl
lods
aaa
es
hlt
inc
xor
sub
pop
mov
push
popa
xor
mov
and
mov
pop
icebp
fnstenv
arpl
jl
dec
push
fwait
mov
and
in
not
lret
mov
add
mov
dec
dec
jno
test
add
js
add
lea
mov
jno
fldt
ret
dec
cs
sbb
clc
cmp
or
repz
mov
loope
sar
frstor
mov
fnstcw
push
xchg
int3
mov
add
notl
add
test
mov
out
lret
mov
inc
mov
sub
mov
out
fldpi
mov
pop
movsb
outsl
pushf
fwait
mov
mov
in
pusha
add
mov
in
xor
mov
dec
cmp
out
push
xchg
out
xlat
or
add
fisubrs
bound
mov
mov
jge
sbb
or
clc
lods
cmp
cmp
lcall
adc
mov
add
push
lods
stc
dec
pop
mov
cmp
pop
mov
in
push
push
inc
jge
mov
mov
add
cmp
add
negb
ret
gs
add
pop
add
out
ror
test
inc
add
dec
or
add
push
add
mov
cmp
add
mov
add
outsl
mov
xor
pop
add
cmp
or
std
lret
mov
jl
push
push
add
jb
mov
lahf
lea
ficompl
jg
ss
lret
lea
addb
inc
inc
pop
lods
add
test
cld
shl
mov
inc
push
xor
mov
xor
add
int3
addb
mov
pop
mov
mov
mov
insb
fmull
push
mov
adc
mov
mov
in
add
out
dec
dec
inc
loop
mov
imul
jmp
adc
mov
bound
mov
stos
sbb
mov
insb
cmc
mov
mov
loop
mov
lods
dec
mov
mov
push
sbb
sub
add
sbb
mov
les
popa
push
js
xchg
add
mov
mov
xor
rcrl
adc
mov
repz
in
pop
addr16
lcall
cmp
test
cmp
rcrl
xlat
fs
lods
pop
add
push
cli
push
jno
aam
cmp
inc
cmp
add
xchg
lods
lods
jmp
add
mov
mov
mov
add
mov
lret
gs
jbe
push
and
imull
or
add
scas
addb
fincstp
cmp
mov
inc
std
jp
mov
cmc
leave
and
mov
xor
mov
mov
xor
mov
push
xchg
xchg
test
pushf
cltd
ljmp
idivb
or
test
add
lds
add
add
inc
in
imul
add
insl
sub
jno
cmc
jno
sbb
jg
xor
push
icebp
mov
insb
pop
arpl
aad
mov
int3
mov
ljmp
dec
jae
jg
sarl
test
jno
add
dec
xlat
sub
xchg
inc
jge
repnz
pop
jmp
je
fidivs
pop
fidivrs
pop
shll
pop
mov
push
add
fucom
xchg
mov
imul
cltd
cmp
push
int
into
sahf
cmp
lods
movsl
fcomp
pushf
push
dec
in
push
aam
repnz
loope
jno
add
orl
pop
lds
push
mov
mov
dec
add
xor
sub
or
cmp
or
mov
insl
sub
sbb
arpl
xchg
mov
mov
sub
and
mov
lock
shl
das
xchg
and
jnp
inc
test
pop
jae
std
in
mov
mov
mov
adc
loop
mov
lock
test
mov
xchg
pop
in
and
mov
add
add
and
movsb
adc
mov
testl
scas
movsb
lcall
das
pop
cli
daa
sub
hlt
lds
inc
mov
les
cld
repnz
cwtl
add
add
xchg
or
scas
jns
pushf
xor
rolb
mov
in
pop
adc
loope
dec
inc
add
mov
notb
add
mov
mov
into
lea
addb
cwtl
mov
mov
insl
cltd
pop
popf
cmc
loope
pop
cmpsb
and
mov
inc
add
add
add
mov
out
pushf
leave
mov
mov
add
add
loope
pushf
dec
pop
imul
rcr
mov
into
pop
xor
das
icebp
cld
push
push
push
cmpsl
lcall
je
and
pop
or
in
std
sub
cltd
cmp
imull
push
jne
push
and
mov
aam
jb
mov
outsb
pushf
rolb
out
enter
fsubrl
sti
movsl
fwait
xor
mov
insl
jg
xchg
jp
add
mov
mov
add
out
cltd
data16
shrl
call
mov
scas
adc
test
daa
push
addl
rolb
mov
jge
ret
add
mov
xlat
mov
mov
fldcw
mov
dec
aaa
jo
mov
scas
sbb
scas
pushf
add
sbb
jno
lods
mov
outsb
lods
mov
add
imul
bswap
outsb
mov
cs
push
add
sub
test
cmpsl
sbb
cmp
cs
or
sub
int3
mov
xor
enter
mov
push
pop
data16
int
jo,pt
mov
or
mov
mov
sbb
mov
lods
sbb
and
mov
xchg
pop
or
or
add
daa
add
mov
mov
mov
push
add
aaa
movl
pusha
add
pop
mov
push
add
pop
lods
lds
add
pop
pop
push
push
mov
cmp
out
loope
add
mov
jge
pop
imul
adc
mov
inc
add
push
mov
or
add
mov
xchg
add
mov
add
add
cmc
adc
mov
movsl
mov
mov
mov
fdivl
lret
fldcw
out
push
popa
rolb
mov
mov
xor
mov
loopne
mov
mov
mov
mov
cltd
lods
lcall
dec
jmp
jge
popa
xor
mov
xor
repnz
cwtl
cltd
cmp
addb
xchg
xchg
add
fmull
add
mov
lods
dec
fdivs
jo
mov
pop
bound
mov
bound
mov
pop
addb
loope
jae
xchg
inc
ds
pop
ds
scas
add
mov
xchg
cmp
pop
xchg
fsubl
shll
add
mov
jle
mov
push
add
rol
stos
into
add
mov
push
pop
pop
and
jge
psrld
mov
repnz
push
in
cmp
iret
dec
fdivl
add
sub
pop
xlat
sti
aaa
in
clc
adc
scas
xchg
pop
insb
fidivl
mov
fisubrs
dec
icebp
das
outsb
aam
push
or
mov
mov
mov
xlat
imul
or
fsubs
mov
lret
mov
ja
xor
out
xchg
dec
or
mov
loope
xor
mov
push
repz
fiadds
add
mov
sub
popf
push
pop
dec
pop
and
mov
add
add
pop
mov
or
xchg
add
mov
mov
add
lods
jns
leave
neg
loope
ljmp
fs
mov
sub
cmpsl
out
xchg
pop
push
popf
mov
add
rolb
mov
dec
or
push
add
jnp
add
add
fisubrs
lret
sub
enter
in
xor
mov
mov
ret
jge
xchg
sub
ret
sbb
cmpsb
bound
mov
add
mov
pop
adc
mov
mov
jb
mov
mov
mov
outsb
or
add
test
and
mov
jae
jns
nop
add
add
add
mov
adc
push
out
fucomip
cmp
lods
mov
add
pop
je
jge
rolb
int3
mov
cmc
pop
loop
mov
xor
testb
je
movsl
mov
add
aas
xor
mov
mov
mov
mov
inc
add
add
add
mov
aas
dec
lods
addb
js
fildll
test
loop
mov
ljmp
add
xchg
adc
add
enter
fildll
push
sub
xor
mov
add
mov
sub
add
mov
icebp
adc
mov
insl
cmp
repnz
and
inc
popf
popf
xor
lret
jae
les
rolb
mov
mov
mov
cltd
pushf
icebp
xchg
xchg
lds
jno
xchg
jne
add
jnp
pop
adc
mov
mov
addr16
lock
push
xchg
movsb
cmp
adc
adc
daa
ret
pop
test
xchg
loope
sbb
leave
add
and
jo
mov
mov
mov
mov
popa
dec
cld
leave
adc
ljmp
stos
push
or
sub
int3
mov
dec
sub
aaa
xchg
jmp
mov
mov
mov
lock
popa
lcall
mov
cmp
and
add
hlt
and
mov
test
addb
fmul
data16
xchg
add
aad
add
mov
scas
inc
pop
in
cltd
sbb
cs
add
mov
add
ja
dec
into
in
push
adc
loope
add
or
jno
pop
lea
xchg
xor
mov
add
add
aam
push
add
add
jge
ror
add
and
mov
mov
or
pop
rcrl
cmp
push
inc
icebp
inc
or
in
loope
push
xor
sbb
fisubl
pop
inc
add
adc
mov
cmp
dec
ds
add
iret
jns
add
lock
and
outsl
adc
mov
cmpsl
aas
sub
adc
dec
push
xchg
adc
sahf
lods
jae
and
mov
pushf
sub
mov
inc
and
mov
xor
sub
ss
add
jg
lret
pop
lods
mov
mov
add
add
cmp
fnstenv
loope
mov
add
mov
or
arpl
push
outsb
jo
mov
pop
mov
mov
xlat
and
popa
mov
add
jns
dec
adc
andl
aam
shll
jg
pop
push
mov
insb
lahf
sub
lods
insb
mov
mov
mov
add
push
repz
stos
mov
xor
lds
add
dec
mov
imul
xchg
xlat
dec
nop
add
mov
jae
out
aas
ss
mov
sub
xor
push
add
call
in
fsubs
add
shll
in
push
xchg
fstpl
pop
aas
inc
adc
outsl
rolb
fisubrs
icebp
inc
pushf
inc
mov
xchg
add
add
mov
jge
int
inc
add
aam
rolb
mov
add
sub
add
cli
les
iret
sbb
push
nop
add
mov
add
fnstenv
sarl
add
sub
add
mov
mov
lcall
sub
add
mov
mov
mov
push
insl
cmp
push
and
mov
mov
and
cli
push
lods
cmp
pop
push
jno
xchg
push
jne
test
dec
pop
cmp
add
rolb
lahf
sbb
add
inc
add
ljmp
aaa
sahf
inc
pop
pop
xor
mov
mov
mov
mov
sbb
add
and
ss
push
push
rolb
mov
mov
mov
ret
ss
inc
lock
rolb
add
or
lods
and
mov
dec
addb
shr
adc
mov
ljmp
pop
addb
mov
add
mov
cltd
pushf
mov
push
inc
fidivrs
xor
mov
fsin
and
sahf
imul
addb
sbb
mov
cmp
push
stc
adc
cltd
out
mov
add
mov
shl
push
mov
stos
mov
rcll
mov
jecxz
data16
popf
and
fnstenv
pop
fisubrl
sbb
push
mov
dec
aas
ja
sbb
mov
add
push
testb
cmp
push
sti
cmc
push
add
mov
inc
test
sbb
aad
mov
add
ret
enter
out
lods
into
push
add
mov
repnz
pop
js
sahf
xlat
cmc
pop
fs
insl
jmp
jae
aas
and
add
data16
mov
push
insl
repnz
fxch
cmp
adc
mov
lods
xchg
jb
mov
jae
add
inc
push
test
arpl
rcrl
pop
seto
mov
mov
add
popf
jle
push
jmp
idivw
dec
push
mov
mov
xor
mov
shll
in
stos
sarl
inc
mov
jp,pn
test
jns
call
xchg
insl
cmp
or
rolb
mov
add
stos
lret
out
mov
adc
arpl
inc
daa
xchg
mov
adc
fucomip
lret
lret
mov
mov
pop
mov
mov
movsl
xor
dec
cmc
push
pop
outsl
jle
add
mov
adc
mov
mov
jb
mov
mov
xor
mov
pop
pop
out
xchg
xchg
pusha
add
mov
sbb
pop
cmpsb
mov
mov
rolb
mov
sbb
add
push
mov
add
std
out
add
mov
fisubrl
mov
call
rcll
mov
test
mov
pop
push
call
pop
in
outsl
cmc
mov
add
stos
sbb
aaa
rorl
mov
rolb
mov
lcall
scas
dec
ds
ljmp
imul
add
xchg
aam
add
mov
and
or
dec
ret
pop
addl
mov
add
mov
mov
ja
add
add
andl
add
mov
cmc
icebp
lret
std
jp
bound
mov
mov
mov
outsb
jbe
cmp
stos
jne
shrl
call
add
in
daa
cmp
add
mov
fcoms
push
xor
cs
or
mov
test
add
xchg
daa
xor
mov
flds
stos
or
push
sar
sub
mov
lahf
gs
add
mov
add
flds
pop
dec
mov
jmp
jl
out
mov
fldenv
add
call
imul
mov
jns
ret
push
lock
add
cmp
dec
cli
movsb
push
add
out
add
inc
lock
into
pusha
add
cmp
cmp
enter
mov
mov
bound
mov
mov
mov
lret
mov
fistps
clc
dec
lret
pusha
add
cld
lcall
mov
mov
add
xlat
popf
arpl
lea
movsb
adc
add
pop
daa
mov
or
mov
into
mov
sahf
lods
insb
fdivl
jno
ss
mov
movsb
sub
arpl
sub
or
cmpsl
mov
push
fistpll
jne
push
jg
push
rolb
sarl
mov
add
mov
add
mov
data16
add
add
xchg
or
add
js
popa
lea
jg
jmp
scas
lods
lea
hlt
lea
add
out
call
call
sbb
mov
mov
pop
adc
insb
clc
aad
push
pop
mov
out
jne
push
pop
nop
add
into
and
mov
xchg
js
xor
push
sbb
push
mov
mov
adc
mov
dec
aad
adc
mov
lahf
cmpsl
pop
insb
and
inc
sahf
pop
mov
mov
and
mov
ret
xor
jmp
pop
addb
sub
or
pusha
add
mov
sub
pop
and
mov
jl
or
push
adc
dec
pop
cld
popf
xchg
pop
or
imul
mov
mov
add
dec
pop
neg
dec
popa
inc
mov
repnz
into
popw
shl
popf
popa
ret
add
mov
and
popf
rolb
mov
sbb
fwait
mov
mov
add
call
adc
jbe
ret
sbb
dec
movsl
mov
mov
dec
cld
xchg
add
mov
jno
imul
sub
jl
add
pushf
loope
jb
mov
xchg
testb
sbb
mov
add
test
pop
mov
sub
vmovlps
loope
jge
cltd
loopne
mov
jg
mov
mov
add
xor
pop
addb
inc
xor
jecxz
push
add
aam
cli
and
mov
ret
mov
cmp
xor
outsb
cmp
mov
mov
pop
stc
aam
add
mov
add
popf
mov
xor
dec
dec
adc
lods
sub
mov
mov
fisubrs
gs
and
enter
mov
pop
call
add
mov
lods
add
jns
add
loope
int
push
sbb
mov
add
cmp
cltd
addl
fsubs
popa
mov
add
push
ljmp
xchg
push
arpl
push
cmc
cwtl
and
mov
add
add
push
xor
loope
jae
nop
add
push
popf
cltd
jo
mov
mov
or
sahf
roll
add
add
cmc
gs
add
addb
mov
notl
mov
mov
jbe
add
call
int3
cmp
add
aaa
lahf
mov
loop
mov
nop
add
outsl
cmp
sbb
add
push
jnp
arpl
xlat
enter
add
jno
or
dec
imul
sub
add
push
dec
movl
cmp
push
movhps
pop
sub
sub
jl
or
dec
mov
int3
dec
xor
int3
pop
rolb
roll
mov
sbb
fstpl
and
mov
xchg
rolb
mov
ret
sub
loope
jmp
fs
push
int
add
scas
negb
lods
pop
mov
mov
insl
add
mov
sbb
mov
add
aas
rolb
mov
inc
add
gs
add
pop
mov
mov
xchg
add
mov
shll
rolb
xchg
add
mov
das
leave
stos
jb
mov
int3
testb
arpl
add
mov
jecxz
mov
sub
cld
stos
imul
mov
pop
sbb
int
xchg
mov
mov
inc
es
push
gs
stos
jmp
inc
aas
movsb
xchg
mov
nop
add
jg
add
xor
mov
mov
inc
mov
pop
rcll
ja
mov
cltd
fcmovnu
fwait
xchg
add
mov
cltd
cli
ror
negl
pop
push
loopne
mov
jle
repz
pop
daa
incb
push
repnz
sbb
mov
jae
lock
filds
add
rcrl
mov
js
add
add
add
mov
mov
add
push
add
and
ljmp
mov
adc
add
adc
add
sub
adc
gs
jl
clc
inc
push
adc
mov
xor
mov
push
jp
out
xor
mov
movsb
mov
mov
push
add
movsl
or
movsb
daa
jg
lret
ss
xlat
psrlw
in
bound
mov
outsl
mov
loopne
mov
cli
lds
rolb
lcall
xchg
call
out
mov
cmpsl
mov
mov
lcall
int3
lcall
adc
add
pop
mov
add
pop
pop
mov
mov
add
jmp
rolb
mov
jp
push
aas
sbb
ror
jbe
push
add
std
xchg
cs
int3
ficoml
add
add
xor
add
mov
mov
cli
pop
jns
icebp
jno
xchg
es
adc
mov
mov
ficoml
add
out
cltd
mov
mov
aad
xor
mov
in
in
mov
add
rolb
inc
push
mov
lods
push
mov
add
jp
add
or
imul
dec
inc
jnp
addb
mov
mov
mov
add
add
xor
mov
xor
lock
xor
add
mov
mov
push
mov
inc
cwtl
mov
add
dec
pop
cwtl
push
and
cmp
test
sub
lods
dec
and
divl
add
nop
add
clc
mov
icebp
popf
ret
adc
jecxz
out
add
mov
lret
ds
ret
or
mov
ret
outsb
std
sub
xchg
jle
daa
addb
xor
pusha
add
icebp
pop
and
repnz
test
mov
ret
mov
roll
add
mov
jo
mov
adc
mov
lcall
mov
gs
mov
adc
xor
xchg
cmp
or
addb
pop
sbb
cmp
aam
jns
push
stos
leave
xor
add
fmuls
xchg
mov
add
mov
lods
leave
aas
and
add
idivb
lret
add
mov
nop
add
ror
in
out
fs
xor
mov
nopl
mov
addb
xor
mov
jne
out
xlat
aad
sbb
leave
ljmp
add
mov
lahf
mov
inc
inc
xchg
adc
xor
push
enter
add
and
mov
idivb
call
xchg
add
jbe
mov
outsb
icebp
mov
arpl
bound
mov
jg
lds
mov
mov
fwait
clc
cmp
cmp
ljmp
mov
into
add
mov
bound
mov
mov
movsl
xorl
inc
or
xchg
aaa
inc
ficomps
xchg
or
add
add
fldt
or
mov
add
add
movsb
jne
cmp
pop
rolb
mov
std
mov
jecxz
ret
xchg
add
mov
js
pop
sub
xchg
add
decl
movsb
ds
repz
xchg
test
xchg
inc
add
mov
and
mov
fs
pop
push
sbb
jecxz
lods
xchg
rcrl
dec
fmuls
mov
lods
daa
test
jge
bound
mov
add
jnp
xor
fldl
add
or
fucomi
iret
outsb
sbb
add
add
out
xchg
xchg
outsb
scas
lcall
inc
dec
xlat
cmpsl
loop
mov
push
lea
aaa
mov
mov
mov
mov
jne
adc
pop
outsl
testl
push
dec
mov
mov
inc
add
jecxz
mov
out
dec
push
push
mov
mov
or
add
xchg
add
clc
addb
enter
mov
or
test
add
mov
add
push
or
add
mov
xor
xchg
jp
and
mov
mov
inc
fmul
in
cmp
popf
mov
cli
mov
ja
push
add
sub
ljmp
sbb
test
cli
arpl
ja
pushf
repz
cmp
cmpsb
cmp
mov
mov
lcall
pop
mov
movsl
lret
movl
or
add
mov
lods
inc
cmpsl
mov
mov
mov
jecxz
pushf
jle
adc
mov
xchg
push
dec
push
ret
jno
xor
mov
rcll
mov
sti
jp
add
cmp
add
jne
sub
addb
cmp
add
mov
ss
jbe
add
dec
in
pop
push
pushf
es
add
add
lcall
imul
add
sbb
mov
mov
mov
daa
jge
in
push
add
jne
sbbl
jge
xchg
popa
sbb
pop
fimuls
add
add
in
or
add
fcompl
mov
sub
add
add
xchg
or
push
jmp
mov
mov
addb
pop
dec
xor
sub
repnz
and
sub
sub
aas
and
mov
xchg
aaa
add
add
mov
inc
inc
cmp
hlt
rolb
mov
arpl
jno
add
cltd
int3
subl
add
add
cld
pop
cmpsb
dec
mov
mov
add
les
add
sbbl
adc
daa
push
push
or
lea
addb
addb
das
jb
mov
jp
outsb
cmp
sbb
mov
lods
cmp
adc
add
push
scas
or
mov
pop
and
mov
je
inc
add
add
pop
pusha
add
or
jae
add
into
adc
mov
add
sbb
push
dec
push
mov
pop
mov
dec
jp
repz
pop
sti
jns
push
add
pop
and
mov
test
lahf
movsb
sbb
movsl
sbb
mov
lods
push
xchg
aad
pop
dec
and
mov
pop
push
jge
add
sbb
sub
leave
out
lods
push
inc
aad
sbbl
add
test
pop
mov
mov
mov
add
jp
add
mov
sbb
mov
cmova
or
test
mov
jnp
or
shl
mov
pop
sbb
popa
xor
loopne
mov
dec
add
ss
jb
mov
repz
mov
jae
add
mov
es
lds
mov
cli
jecxz
rolb
mov
add
or
mov
add
loopne
mov
scas
aas
addl
jae
and
mov
mov
mov
loope
add
dec
mov
add
rolb
mov
js
push
mov
int3
dec
addb
std
movsl
add
lret
out
add
add
add
inc
lret
imul
ret
into
dec
arpl
outsl
push
repnz
or
sbb
jbe
outsl
lea
cmp
add
adc
pop
pusha
add
idivb
xor
pop
mov
add
lds
pop
xchg
repnz
pop
pop
adc
out
inc
jae
add
add
jle
cmp
push
jbe
xchg
add
mov
or
add
jp
dec
cmp
add
sub
call
jae
jne
add
iret
mov
pusha
add
mov
pop
pop
xchg
in
cli
mov
xchg
jno
add
stos
inc
lcall
sti
and
mov
push
and
mov
or
xor
mov
jnp
jecxz
enter
mov
add
sub
adc
lret
in
mov
mov
jns
jle,pn
cmp
inc
sub
adc
mov
lods
xor
insb
inc
loopne
mov
xchg
je
jbe
add
xchg
shrl
insl
insb
lahf
add
add
lock
loope
pop
and
mov
push
push
xchg
mov
dec
add
mov
cmp
icebp
inc
or
jnp
ss
sbb
stos
mov
jnp
cmp
rolb
mov
mov
push
loope
jno
outsb
sub
lret
xchg
add
sub
rolb
mov
mov
aam
pop
or
cmp
test
mov
inc
add
jle,pt
fistps
add
ja
adc
sbb
dec
jo
mov
test
jecxz
int
sbb
add
scas
es
mov
mov
pop
lock
icebp
push
xchg
xor
mov
outsb
into
pop
xchg
push
test
add
in
xchg
fcompl
js
add
add
xor
mov
decl
sub
inc
sub
add
jae
add
and
mov
mov
loop
mov
jg
daa
lea
or
es
push
test
push
add
out
lds
add
mov
add
sbb
mov
mov
jbe
sub
lock
test
pushf
sub
sbb
ja
adc
mov
ljmp
mov
mov
ja
dec
es
divb
push
rcrl
cli
xchg
mov
add
cld
or
scas
and
xchg
popf
mov
and
add
addb
mov
scas
mov
cmc
jae
mov
add
jg
and
mov
lods
repnz
je
mov
and
in
and
add
sbb
add
in
loope
and
es
xchg
push
mov
add
mov
push
aas
es
mov
and
mov
mov
mov
mov
ljmp
jmp
cltd
sub
pminub
dec
ret
inc
sub
xchg
outsb
cmp
inc
add
adc
add
mov
mov
push
loop
mov
popf
push
test
inc
add
xchg
add
push
sub
add
xchg
jg
into
pop
mov
or
dec
cmp
pop
sbbl
xor
mov
pop
push
add
sub
push
or
mov
add
xchg
push
adc
mov
mov
stos
xor
mov
add
add
js
enter
aas
fcoms
add
push
mov
jae
and
pop
ret
jmp
add
addb
scas
in
xchg
adc
mov
add
adc
mov
mov
add
fistl
mov
outsb
sub
sub
add
rcll
add
xor
add
inc
add
cmp
outsl
arpl
xchg
push
pop
enter
add
lea
gs
mov
xchg
add
sti
fidivrs
push
sbb
shrl
dec
xlat
dec
jno
add
mov
cwtl
sub
shrl
cmpsl
jns
test
jb
mov
sub
dec
inc
add
mov
imul
fcoml
and
das
push
call
mov
mov
xor
mov
insl
inc
push
adc
add
dec
test
sbb
push
out
aas
add
out
lea
or
or
fadd
sbb
sahf
jbe
imul
cltd
push
lret
or
mov
mov
sbb
test
fmuls
cmp
cmp
leave
pop
icebp
add
add
lock
dec
mov
add
jno
test
cmp
fcmovnu
stc
aam
inc
pop
mov
and
notl
add
and
call
addb
lcall
pop
inc
add
mov
add
mov
lahf
lods
push
movsl
fsts
add
mov
and
mov
mov
or
add
mov
shll
mov
xor
jb
mov
xor
mov
test
cmp
js
sub
mov
and
mov
dec
jnp
mov
mov
cmp
aaa
dec
or
pop
sub
incl
add
xor
jecxz
pop
push
dec
push
add
mov
popf
sub
mov
add
adc
mov
mov
xchg
add
stc
xchg
cli
cmp
mov
push
add
pop
ss
stos
mov
jle
imul
push
push
push
cltd
add
add
add
fisubs
movsl
mov
adc
add
lea
rcll
jb
mov
fs
sub
adc
test
movsb
lock
pushf
addb
add
mov
add
in
insb
adc
inc
push
addb
mov
mov
add
add
stos
dec
push
out
pop
pop
sub
mov
add
dec
ss
fcoml
add
popf
pop
inc
jnp
fs
dec
xor
dec
rolb
mov
or
scas
into
adcl
xchg
inc
add
push
add
mov
xchg
add
add
mov
rolb
mov
dec
shll
mov
loopne
mov
aam
push
sbb
gs
or
ret
rol
add
mov
jns
aaa
bound
mov
or
add
add
sbb
lcall
leave
aad
and
xor
add
mov
add
add
cli
in
jp
and
mov
jno
add
sbb
mov
cmpl
sbb
mov
js
int3
jae
and
jg
mov
push
icebp
mov
cmpsb
push
sbb
mov
inc
add
test
add
movsl
push
test
add
jge,pn
inc
add
cltd
outsl
fwait
je
es
add
dec
adc
pop
pop
xchg
jp
add
push
int
pop
loop
mov
pusha
add
clc
xchg
adc
mov
add
or
fs
test
add
mov
mov
adc
lods
popf
scas
pop
push
cltd
das
mov
xor
mov
mov
insb
sbb
jmp
dec
mov
dec
jnp
dec
xchg
jnp
rolb
mov
cmp
add
dec
cmp
clc
mov
add
mov
out
imul
addr16
out
adc
in
mov
xlat
adc
pop
in
rolb
mov
test
lock
cli
cmp
mov
ljmp
sub
jbe
xor
mov
mov
mov
testl
jnp
shll
push
mov
add
ficoml
adc
ljmp
mov
mov
and
mov
add
aad
add
add
mov
mov
push
add
mov
pop
dec
sbb
jg
lret
lcall
es
lea
pushf
test
adc
mov
and
pop
aam
add
adc
add
mov
aaa
ret
imul
add
lods
outsl
cmpsl
fnstsw
dec
add
mov
and
mov
adc
mov
lahf
push
pop
mov
inc
rsqrtps
mov
pop
push
pop
lods
jmp
shll
mov
add
daa
mov
add
fmuls
xor
mov
mov
sbb
inc
add
cmovno
add
aad
xor
mov
push
sub
xchg
add
add
adc
add
test
add
dec
push
adc
mov
add
shll
ret
push
dec
adc
mov
std
cli
fmull
mov
mov
addb
sub
aad
xor
mov
push
add
insl
js
lods
cmc
jae
lds
in
add
xchg
push
and
ljmp
add
lds
mov
js
add
dec
jg
and
mov
into
in
inc
add
dec
jecxz
adc
mov
out
xor
mov
add
xchg
pop
cmp
mov
ret
sahf
fdivs
in
lods
cmp
mov
push
mov
add
nop
add
mov
pop
sbb
mov
cld
ja
addb
cmc
stc
cld
mov
std
pop
out
mov
sub
pop
mov
xchg
pop
hlt
mov
mov
add
pop
pop
cmp
imul
pop
mov
push
mov
mov
jno
adc
mov
lahf
jle
add
mov
add
test
mov
mov
mov
insl
adc
and
mov
psraw
adc
mov
mov
int
xchg
adc
mov
mov
into
jnp
mov
add
inc
add
mov
cmp
out
add
mov
int3
pop
inc
dec
add
mov
out
or
sbb
mov
je
add
add
mov
or
adc
insl
mov
popf
lods
sub
jmp
xchg
rolb
mov
xor
sahf
add
mov
repnz
or
push
cwtl
jb
mov
mov
adc
mov
int
out
loop
mov
loop
mov
movsb
into
arpl
inc
xchg
in
test
cmp
fcmovb
cld
stos
ret
sub
inc
mov
sub
xor
dec
test
outsl
xadd
in
pop
addb
mov
add
sub
rolb
mov
or
mov
aaa
inc
push
ja
jmp
test
add
cltd
popf
mov
mov
sbb
sub
mov
popa
outsl
jnp
lods
int
adc
fs
out
mov
xor
mov
add
mov
mov
cmpsl
pop
test
cmp
dec
dec
dec
mov
les
dec
and
cmp
fcompl
push
add
mov
and
mov
jmp
sbb
mov
cwtl
or
mov
mov
add
mov
jno
xor
mov
pop
loopne
mov
pop
cld
mov
iret
hlt
xchg
mov
push
add
add
dec
fwait
jbe
das
push
dec
fwait
mov
mov
mov
aas
test
stos
dec
mov
scas
out
push
xor
mov
jle
aam
fs
mov
arpl
add
ret
pushf
add
add
ds
add
jae
push
out
mov
les
outsb
pop
mov
popa
jecxz
insb
mov
mov
sbb
add
jge
add
rolb
mov
and
mov
or
fbld
testb
add
add
ret
sbb
xlat
cli
lods
mov
addb
stc
fistpll
xchg
add
add
jno
das
scas
jg
cmc
test
addr16
mov
cmpsl
scas
imul
mov
mov
add
mov
ds
stos
mov
inc
sub
dec
test
leave
push
std
push
xchg
push
insb
push
nop
add
incl
repz
add
mov
addb
int3
cld
mov
add
imul
je
insl
shr
sub
addr16
pop
inc
xchg
scas
mov
jne
inc
and
mov
adc
mov
add
mov
mov
mov
aaa
mov
mov
mov
notb
add
or
or
push
jl
enter
sub
add
mov
jg
cmp
mov
sbb
into
push
ds
pop
repnz
mov
mov
pop
mov
mov
movsl
rcrl
jle
popf
imul
cs
lret
divl
jecxz
ljmp
inc
in
stos
xor
add
ret
out
mov
add
add
cmpsb
inc
insl
nop
add
jo
mov
add
lret
push
cmp
mov
and
mov
adc
mov
mov
add
xor
mov
fwait
add
ret
lahf
cld
cwtl
adc
add
push
pusha
add
lahf
in
mull
mov
leave
sbb
lds
add
cmc
enter
cmp
mov
pop
sbb
cs
fidivl
add
add
add
cmp
inc
push
lods
stos
popa
cmpsb
movsb
sub
sti
pop
sub
cmpsl
and
int
lcall
cltd
or
mov
in
cli
push
fidivl
fnstenv
xor
mov
mov
mov
add
add
adc
cmpsl
mov
dec
loope
mov
mov
add
inc
cmc
fcomps
cmp
pusha
add
add
pushf
cltd
xchg
xor
add
fdivs
cmp
inc
add
inc
add
test
fs
in
adc
mov
ljmp
add
sbb
rolb
mov
cmpl
add
mov
pop
movsl
clc
enter
inc
push
sub
fs
cld
lcall
xchg
mov
out
lods
rolb
mov
and
pop
and
add
add
rolb
mov
mov
mov
pusha
add
lds
pop
cs
push
clc
test
add
mov
lahf
outsl
sub
pop
pop
push
fdivrs
addb
cmc
jg
lret
dec
imul
ret
mov
sbb
mov
cmp
std
pop
xlat
mov
sti
mov
test
xchg
mov
loope
mov
cmpsb
std
cld
inc
inc
add
push
sub
sbb
fsubrs
push
pop
aas
in
mov
dec
mov
or
addr16
push
in
mov
or
fldenv
sub
jnp
xor
mov
test
add
inc
lret
push
adc
add
mov
imul
out
mov
pop
or
xchg
hlt
scas
xchg
cmp
mov
or
add
or
das
addb
testl
jbe
add
mov
add
or
add
jg
xchg
add
inc
pop
dec
test
add
push
out
jg
enter
lea
pop
or
add
or
pop
jo
mov
outsb
jo
mov
inc
add
fs
push
add
fildll
cli
xor
cmp
add
mov
pop
mov
jp
add
js
fcom
rolb
pushf
cmp
sti
cmp
mov
je
and
imul
mov
imul
mov
stos
std
add
mov
bound
mov
in
add
mov
xchg
cmp
in
add
mov
scas
mov
test
out
jge
sahf
fstpl
add
mov
adc
mov
and
aas
xor
jl
insl
lods
ret
aaa
mov
mov
outsb
mov
add
jmp
jne
arpl
jnp
loop
mov
mov
adc
mov
call
pop
mov
add
les
add
repnz
fdivrp
lret
ja
push
fidivl
sub
mov
jecxz
sbb
in
add
mov
mov
addb
rcll
add
jge
cmp
add
bound
mov
sub
cmc
pop
dec
lret
mov
les
icebp
mov
or
ljmp
jge
ret
addb
xchg
out
comiss
int
fwait
mov
mov
aam
add
cli
pushw
pushl
mov
pop
das
pusha
add
enter
ret
inc
xchg
mov
mov
sbb
add
mov
rolb
mov
dec
xchg
test
ror
add
xchg
pusha
add
add
xchg
jp
lret
mov
add
in
adc
add
jo
mov
bound
mov
repnz
pop
shll
aam
mov
adc
mov
psubq
jb
mov
add
mov
mov
sarl
add
add
addb
in
add
mov
adc
cmp
mov
mov
dec
ss
addb
sbb
xchg
call
mov
xor
sbb
sbb
mov
sbb
jae
add
mov
add
add
cld
xchg
es
fldcw
mov
imul
push
and
push
inc
je
lods
mov
xor
inc
xor
enter
gs
add
pop
dec
mov
in
je
stc
int
xchg
add
addb
addb
inc
loop
mov
jb
mov
mov
jg
pushw
scas
xor
mov
add
ljmp
sbb
ret
dec
add
mov
adc
add
add
add
lock
sbb
jmp
add
add
outsl
fyl2xp1
ljmp
out
je
add
in
xor
movsl
mov
add
dec
fsubs
idivb
loope
push
jb
mov
test
ss
push
pop
mov
jno
lret
add
add
add
add
test
add
loop
mov
mov
mov
jbe
insb
mov
inc
sbb
jo
mov
mov
pop
dec
into
pop
inc
add
ja
jno
inc
add
xor
add
add
cmp
adc
pop
lods
mov
add
mov
cmp
imul
mov
jae
arpl
js
lret
pop
es
and
add
sub
pop
and
mov
bound
mov
sahf
and
mov
fdivrl
mov
add
xor
xor
mov
add
add
mov
mov
pushf
mov
add
faddl
mov
xchg
push
mov
add
and
lahf
ret
call
mov
add
rolb
xlat
xchg
loop
mov
sub
ljmp
add
mov
push
jecxz
push
inc
pop
das
xchg
repz
pop
xchg
add
adc
sahf
popf
aas
pop
pop
test
mov
mov
mov
xchg
add
add
mov
jnp
adc
and
mov
pop
jnp
add
jbe
cmc
xchg
jge
xor
mov
or
mov
push
adc
sub
mov
test
xor
gs
out
inc
add
mov
dec
sbb
xchg
pop
mov
sbb
add
jno
int
adc
mov
and
mov
sub
out
je
je
adc
mov
pop
or
lock
in
mov
js
cmpsl
clc
sahf
push
outsb
aas
pop
leave
adc
inc
mov
cmpsb
pushf
mov
add
inc
rolb
ja
cmp
push
addb
sbb
dec
jmp
loopne
mov
ficoml
or
add
push
nop
add
and
and
cmp
sbb
mov
mov
mov
pusha
add
mov
mov
out
bound
mov
rolb
mov
popa
enter
std
xor
add
jmp
ret
jns
add
fsub
and
pop
jo
mov
inc
sbb
push
add
mov
jl
dec
jle
pop
imulb
rolb
mov
add
adc
das
aad
repnz
cmp
mov
lock
ja
test
mov
je
sbb
add
mov
cltd
aaa
xchg
mov
fs
jne
or
jle
das
mov
popf
push
test
mov
dec
xchg
mov
in
lea
push
lret
or
jnp
rolb
mov
mov
test
sbb
mov
mov
lahf
insb
sub
rolb
mov
add
add
mov
pop
fucomi
jp
test
enter
dec
outsl
rolb
mov
add
shll
mov
test
mov
sub
cmp
int
rolb
test
xchg
add
add
mov
enter
mov
push
add
rcrl
xchg
add
mov
je
push
pop
test
out
mov
nop
add
mov
mov
mov
fildl
mov
mov
mov
test
add
fmull
and
sbb
jle
mov
inc
sbb
fucom
adc
pop
fdivl
mov
xor
rcrl
push
bound
mov
mov
add
call
fs
data16
addb
pop
ret
inc
jbe
mov
add
sub
add
das
fildl
cmp
pop
aad
std
in
push
xchg
in
jbe
repz
and
mov
inc
add
mov
mov
or
mov
popf
push
lret
mov
xor
mov
aas
fldenv
add
add
add
test
xor
mov
pop
icebp
std
and
movsb
cli
ja
add
jge
adcl
inc
enter
ss
pop
mov
mov
dec
movsl
loope
insl
sbb
popf
loop
mov
add
mov
ljmp
mov
fxch
addb
test
pop
loop
mov
jbe
xchg
loop
mov
ljmp
sbb
mov
add
sub
mov
or
inc
add
out
out
setae
add
mov
or
lret
mov
mov
or
add
faddl
mov
xor
mov
cld
repnz
add
loope
das
test
cmp
xchg
bound
mov
add
imul
mov
xor
jmp
jmp
repnz
repnz
das
mov
add
jp
xor
stos
and
add
mov
popa
mov
jnp
fs
add
pop
jb
mov
push
lret
jp
sub
pminub
sbb
push
push
mov
fcoml
add
dec
lods
xchg
hlt
out
and
mov
in
in
push
call
add
loop
mov
shll
xchg
stos
fwait
in
test
or
add
lds
loope
xchg
das
jg
ljmp
mov
xchg
les
add
stos
out
adc
mov
movsl
inc
mov
mov
or
mov
scas
fidivl
mov
pop
mov
inc
std
or
inc
cli
inc
add
pop
and
mov
adc
and
jp
rcrl
mov
cld
dec
xor
jae
sub
mov
ljmp
push
mov
mov
fadds
add
mov
mov
pusha
add
or
mov
aas
clc
insb
test
mov
dec
sub
mov
push
and
sub
test
lds
fidivs
or
add
mov
add
add
ss
popa
js
test
jo
mov
sbb
pushf
imul
popa
mov
add
pop
stc
add
leave
pop
sub
inc
cltd
add
mov
jbe
or
lea
addb
push
adc
imul
addb
mov
mov
int3
mov
cmp
push
add
adc
mov
adc
ret
push
out
cs
mov
mov
es
mov
hlt
or
test
rolb
mov
mov
jle
aaa
inc
inc
outsb
sbb
push
xchg
xchg
sub
nop
add
and
mov
fisubrs
add
test
sbb
daa
add
mov
movsb
rolb
mov
xchg
sub
cmpsb
cs
sub
or
cld
and
mov
mov
test
cmp
sub
in
ret
xchg
add
stos
xor
mov
add
hlt
inc
dec
cmpsl
inc
imul
mov
fsub
int
or
fwait
addr16
push
mov
in
jns
jp
pop
lcall
add
jg
sub
addb
cmpsb
pop
sub
mov
add
ljmp
xchg
ds
and
mov
and
sbb
mov
lods
sub
rolb
mov
cmp
and
xor
mov
add
rolb
mov
or
cli
mov
mov
into
xchg
fmuls
jg
mov
xchg
and
mov
mov
and
pop
xor
mov
xchg
cli
mov
inc
add
xchg
mov
js
and
pop
cs
dec
pop
mov
push
jae
jg
in
pop
pushf
or
stos
mov
add
mov
dec
xlat
sahf
cmc
mov
mov
jmp
or
xor
add
fimull
dec
or
add
add
xor
mov
outsl
clc
xor
mov
dec
shll
fstps
lret
adc
sub
dec
data16
mov
cld
push
cltd
mov
aam
mov
sub
add
icebp
push
add
fstps
das
dec
repz
mov
add
add
xchg
mov
pushl
cmc
mov
out
push
mov
mov
sub
mov
add
add
in
outsl
adc
mov
sahf
sbb
enter
add
mov
aad
sub
xlat
cli
adc
adc
add
and
fimuls
pmulhw
movsl
jae
scas
or
add
push
inc
cmp
jle
lea
sbb
test
or
add
mov
cmp
mov
or
rolb
mov
int
add
jbe
add
add
mov
add
enter
cmp
sub
sahf
stos
outsl
ret
xor
movsb
xchg
add
punpcklwd
mov
sub
mov
adc
xchg
adc
mov
fcoms
mov
lds
ret
inc
add
pop
test
add
pusha
add
inc
pop
fimull
jmp
jb
mov
mov
xor
or
mov
out
mov
push
jno
arpl
add
jbe
jge
dec
loop
mov
sbb
arpl
xchg
sbb
jl
jns
icebp
xchg
add
pop
ja
fs
int
pop
cmp
aaa
dec
adc
inc
add
insl
movsb
jecxz,pn
out
xchg
or
hlt
inc
les
mov
data16
repz
fwait
gs
mov
icebp
dec
aad
repnz
imul
and
mov
lea
popf
mov
xchg
add
mov
aam
lcall
pop
adc
inc
subl
mov
add
lahf
ja
add
mov
sbb
in
xchg
jbe
popa
xchg
add
fcmovb
add
push
mov
add
lret
rolb
mov
adc
mov
jmp
mov
shrl
xchg
call
add
push
popf
push
or
int3
adc
xor
mov
mov
inc
jo
mov
xor
add
dec
mov
jecxz
mov
add
xor
mov
pop
in
xchg
dec
ja
mov
cmpsb
xchg
add
in
pop
push
add
sub
mov
mov
xor
adc
sub
adc
mov
mov
mov
movsl
xchg
push
add
add
aam
jae
outsb
in
push
mov
add
mov
dec
loop
mov
outsb
mov
add
add
pop
jmp
pop
sbb
bound
mov
mov
sub
mov
and
aam
sbb
punpcklbw
mov
loopne
mov
add
es
jmp
cltd
sub
mov
out
mov
mov
add
sbb
mov
imul
mov
add
cmp
subl
sbb
xchg
pop
sysexit
and
push
xor
add
or
out
cmp
lds
mov
push
pop
xor
cld
cwtl
sub
inc
fucomi
and
mov
mov
shll
les
push
ds
lea
inc
nop
add
mov
xchg
es
add
mov
ds
rolb
mov
icebp
adc
inc
in
pop
out
pushf
cli
mov
mov
sbb
xor
inc
in
les
add
movsl
shrl
mov
push
mov
ds
add
add
add
mov
mov
in
sahf
mov
mov
mov
mov
cmpsl
jo
mov
popf
push
add
add
test
ja
in
int3
mov
mov
mov
lds
mov
cli
ret
dec
xchg
in
mov
mov
lods
mov
mov
mov
cmpsl
and
mov
or
mov
push
mov
mov
or
fcompl
xchg
mov
ljmp
and
jne
in
loopne
mov
pop
hlt
xchg
int3
shl
add
lret
mov
bound
mov
mov
push
mov
insl
cmp
adc
push
mov
call
pop
pop
test
sub
mov
ret
enter
clc
scas
push
arpl
leave
test
add
add
sub
mov
sub
cmp
mov
ss
loop
mov
and
mov
inc
mov
mov
mov
fcompl
mov
imul
cmpsb
in
fisubrs
dec
cmpsb
shl
mov
insl
rolb
dec
xor
add
sub
add
and
mov
add
xlat
sbb
mov
stos
aam
fdivrp
lock
sbb
cmp
add
mov
mov
push
sti
mov
enter
or
mov
mov
add
sub
add
dec
or
loopne
mov
cmpsl
push
movsl
ss
icebp
dec
cmp
fcompl
and
mov
popa
and
xchg
push
add
xor
mov
dec
int3
repz
push
fistps
pop
xchg
or
add
mov
jbe
push
scas
push
xchg
xlat
mov
out
lods
push
mov
jge
and
xor
nop
add
inc
jo
mov
mov
test
xchg
cmp
fucom
leave
mov
add
cmp
xchg
push
aam
filds
mov
add
loopne
mov
add
arpl
insb
int3
andl
mov
test
popaw
jo
mov
pop
mov
sbb
stos
pusha
add
xchg
idivb
div
push
mov
addb
add
mov
add
daa
adc
mov
push
lcall
stc
dec
lcall
dec
inc
cmp
mov
stos
sub
insb
mov
mov
add
stos
sbb
xchg
add
pop
xor
mov
add
add
mov
mov
out
jmp
or
sbb
add
mov
add
shll
jecxz
add
push
jge
and
xor
push
idiv
lds
push
mov
stos
dec
add
add
sub
mov
mov
popa
das
stos
in
add
mov
mov
sbb
repnz
jmp
add
test
mov
jns
fisttpll
add
push
outsl
xchg
in
xchg
fscale
inc
add
jl
add
inc
imul
leave
sub
std
cli
inc
out
xor
insb
ret
xor
mov
mov
rolb
mov
mov
add
mov
xor
mov
into
lret
ljmp
xchg
fs
lds
std
jg
cmp
inc
push
add
push
or
push
jl
add
mov
into
mov
jne
or
scas
stos
rolb
addb
mov
add
in
push
xchg
or
daa
mov
jnp
mov
pop
push
cmc
pop
mov
mov
and
mov
add
notl
xchg
push
xlat
movsb
adc
fadds
inc
pop
pop
call
in
rolb
mov
aas
imul
hlt
mov
xor
mov
gs
cmp
add
je
cmp
xor
mov
popf
mov
and
mov
add
and
mov
cmp
add
sub
fwait
xorl
fstpt
mov
lods
out
imul
mov
fidivs
shrl
sbb
mov
cmpsl
inc
add
xchg
ds
add
mov
in
sub
cmpsl
mov
sbb
and
cmpsb
jae
sbb
mov
add
add
mov
sbb
pop
cmpsl
push
sti
fistpl
adcl
add
jae
ljmp
rolb
mov
adc
jmp
bound
mov
addl
and
jp
dec
das
addb
addb
cmp
push
mov
out
dec
and
mov
into
pop
xchg
popa
fstp
push
rorl
mov
dec
popa
pop
push
cmp
xlat
addb
adc
and
or
and
mov
rolb
mov
out
sbb
xlat
repnz
mov
aaa
enter
mov
mov
xchg
add
sub
add
mov
bound
mov
mov
jmp
and
dec
popa
cltd
into
sbb
mov
mov
push
cli
nop
add
lods
mov
mov
lods
repz
dec
dec
movsb
or
out
into
lahf
cld
push
add
push
mov
arpl
jmp
in
add
cmp
outsl
stos
cli
ret
adc
addb
rolb
mov
cmp
pop
pop
or
repz
jne
popa
xor
ds
dec
xor
mov
lcall
jns
fs
cmp
add
fnstenv
ret
jo
mov
dec
mov
and
or
cltd
mov
nop
add
jecxz
cld
add
mov
push
enter
lret
outsb
xor
lahf
inc
add
push
lea
daa
sub
add
mov
and
add
lret
or
sub
jl
or
enterw
lods
push
addl
add
inc
repnz
shrl
add
mov
popa
repnz
xchg
in
pop
mov
adc
jecxz
mov
add
xchg
leave
in
in
mov
mov
pushf
ljmp
mov
gs
enter
aam
lds
imul
add
inc
cmp
outsl
scas
imul
mov
lahf
pop
lock
mov
pop
insl
ret
xlat
xor
pop
rorl
mov
jle
or
test
cmc
sub
pinsrw
xor
mov
push
enter
mov
and
cmpsb
outsb
xchg
rolb
mov
add
mov
repnz
cmp
scas
inc
mov
mov
add
push
lret
mov
add
push
daa
lods
lret
je
aaa
ret
cmp
mov
sbb
cld
push
inc
out
rolb
mov
mov
xchg
add
lahf
sbb
cmp
mov
xchg
sbb
add
and
mov
movb
add
adc
mov
cmp
mov
xor
stc
lods
xchg
loop
mov
push
sahf
or
outsb
push
mov
push
jns
push
xchg
inc
xchg
repnz
xor
cmpsl
add
add
sbb
add
dec
push
cltd
mov
pop
cmp
or
nop
add
pop
outsl
jp
push
add
jg
cmpsl
sbb
pop
and
add
sub
jne
cmp
inc
jge
bound
mov
mov
jp
jmp
xor
push
xor
fdivrl
cwtl
out
enter
xchg
lock
in
mov
and
mov
mov
mov
insl
cmp
push
test
mov
add
xor
mov
shrl
sub
pop
add
mov
sti
mov
pop
and
pop
cmpsb
xor
int3
push
je
aam
sbb
in
jo
mov
mov
mov
daa
rcrl
mov
mov
mov
mov
aaa
scas
cmpl
movl
std
cltd
mov
cmp
push
sbb
pop
pop
addb
loopne
mov
mov
mov
add
add
fsubs
ja
add
mov
mov
cmp
sbb
addl
or
cmp
push
insb
test
add
mov
lcall
orl
and
mov
add
mov
add
mov
lret
pop
ljmp
mov
clc
aad
mov
add
mov
test
cmp
jmp
adc
mov
arpl
sahf
cmp
add
cld
xor
mov
push
and
mov
push
test
lahf
jne
inc
add
add
mov
inc
add
stos
cli
inc
add
testb
mov
dec
xchg
add
add
add
add
or
sub
sahf
repz
mov
gs
add
jg
sub
pop
ja
push
add
mov
mov
mov
add
mov
mov
add
mov
mov
mov
add
lds
sbb
push
add
test
add
enter
mov
cli
sbb
pop
in
ret
or
mov
sahf
into
mov
pusha
add
mov
stos
mov
daa
mov
sub
int3
lret
outsl
int3
pop
inc
dec
push
fcmovbe
rolb
mov
add
mov
mov
mov
cmpsb
and
xchg
cwtl
sub
out
rolb
loope
cltd
jmp
pop
aad
rcll
stc
std
dec
xlat
mov
xchg
lods
push
ret
pop
cmp
xor
add
mov
add
mov
int3
addb
clc
rolb
or
or
adc
loope
stos
dec
out
sub
in
sbb
xor
mov
movb
sbb
pop
fisubl
lods
repz
test
ds
jb
mov
add
ja
sub
aad
lock
cmp
xor
pop
xor
outsl
out
add
mov
int
rorl
ror
cmp
sub
sbb
push
sti
xchg
add
and
mov
sub
ljmp
add
jg
add
mov
add
mov
add
or
rolb
mov
dec
xchg
fwait
in
mov
push
or
roll
add
add
cmpsb
sbb
leave
test
filds
xchg
cmpsl
out
aas
or
jge
fs
dec
pop
mov
out
add
add
jbe
fwait
push
mov
shrl
add
add
push
es
sbb
add
add
add
js
out
adc
mov
jle
test
push
mov
scas
sbb
loope
ret
pop
fists
push
decl
cmp
sub
add
mov
mov
add
test
mov
push
mov
add
repnz
mov
add
jle
xchg
add
repnz
pop
mov
std
adc
mov
adc
mov
or
add
jp
xchg
lahf
cwtl
stos
int
mov
sub
gs
push
add
or
out
stc
or
iret
mov
mov
cltd
adc
sbb
xchg
mov
sbb
test
pop
repnz
push
and
es
pop
sub
ret
jge
lret
mov
push
les
dec
cmpsl
mov
add
fldl
flds
dec
into
scas
cmp
xor
ss
mov
xlat
jae
fwait
cmp
addb
mov
push
add
add
xlat
xorl
loope
cltd
mov
and
mov
jae
xchg
scas
sbb
addb
adc
pop
jnp
pop
test
imul
mov
mov
mov
or
fwait
sub
fs
scas
int3
push
inc
push
add
ja
xchg
cmp
mov
mov
sub
push
outsl
xlat
jecxz
mov
add
popf
push
inc
add
pop
mov
add
add
loopne
mov
add
xchg
xor
add
xchg
jmp
mov
push
adc
mov
push
lods
fcmove
lods
sbb
and
jl
ficompl
inc
add
mov
add
arpl
xor
mov
and
mov
fimuls
cwtl
ljmp
add
aad
and
and
pop
mov
cmp
fadds
push
insb
dec
adc
jmp
js
jbe
mov
adc
add
jne
outsl
jle
xchg
mov
xchg
sbb
add
mov
out
iret
out
inc
add
out
std
mov
jne
and
mov
inc
mov
add
sbb
iret
fmul
and
mov
je
xor
mov
sbb
cwtl
cmp
test
pop
into
pop
ss
add
adc
and
dec
add
shrl
add
std
push
add
add
mov
mov
hlt
test
testb
adc
ds
cltd
adc
mov
push
pop
test
dec
jg
test
gs
jle
jle
ret
jb
mov
add
nop
add
rolb
mov
mov
pop
xor
mov
add
lret
out
sub
push
push
movsl
cmc
in
mov
push
stos
pop
jnp
add
inc
add
aas
xor
push
inc
push
outsb
pop
or
or
and
pop
mov
mov
fistps
add
add
add
imul
add
adc
fbld
add
mov
mov
xchg
pusha
add
mov
add
test
mull
iret
stos
or
mov
xchg
jle
push
ss
inc
cmp
inc
fistl
aaa
mov
mov
mov
jecxz
rolb
mov
mov
add
add
sbb
mov
jbe
mov
xchg
add
pop
xchg
cmpsb
mov
outsl
mov
adc
mov
add
mov
in
add
mov
add
cmpsb
ds
add
in
xor
mov
push
outsb
int
add
jl
dec
push
add
dec
mov
add
cmpsl
lahf
enter
es
dec
xor
mov
push
add
add
sbb
add
sub
scas
jns
push
inc
inc
arpl
jg
and
add
mov
dec
aas
cmp
je
mov
mov
nop
add
rolb
scas
js
add
pop
out
sbb
cmp
add
enter
popf
adc
inc
add
mov
xchg
or
inc
add
in
add
mov
mov
sbb
sbb
add
cmpsb
jnp
cltd
hlt
or
sbb
xchg
inc
pusha
add
cld
scas
mov
xchg
jb
mov
mov
daa
pusha
add
lcall
jmp
push
stc
pop
dec
imul
scas
adc
mov
xchg
mov
pop
leave
idiv
fimull
mov
sti
and
inc
pusha
add
popf
out
and
mov
jge
cmpsb
loope
add
add
jmp
inc
les
call
jbe
dec
dec
lock
mov
movsb
add
mov
mov
mov
out
lahf
ss
ds
mov
jecxz
movsl
jle
outsl
scas
cli
cmp
lods
push
leave
jno
lds
outsl
add
mov
jp
ret
in
imul
push
cmp
add
out
mov
mov
cmc
sahf
cmp
popa
js
cld
add
push
mov
movsl
popf
and
pop
sbb
lods
in
lret
leave
repz
cmp
xchg
and
mov
dec
xor
mov
neg
popa
loop
mov
clc
ja
fstpl
ret
fwait
inc
mov
int3
lcall
test
rcl
adc
mov
bound
mov
add
lret
or
fsubs
pop
mov
mov
pop
in
repnz
push
cmp
and
mov
and
add
mov
mov
les
hlt
mov
mov
xchg
out
cli
leave
mov
in
pop
clc
js
addb
adc
mov
add
lea
add
and
mov
in
sub
cmc
cmp
pushf
leave
dec
and
xor
jne
adc
mov
fiadds
add
mov
inc
cmpsl
dec
lods
xchg
lret
add
sbb
fwait
addr16
sub
pop
pop
addb
pop
pop
in
enter
in
rolb
mov
sub
push
setnp
insl
in
int
inc
movsl
push
add
ds
mov
rcr
ret
or
push
add
xor
mov
mov
out
pop
push
data16
ss
add
mov
adc
mov
xchg
mov
mov
sbb
sbb
adc
mov
cmp
jge
imul
xchg
add
mov
clc
pushf
sbb
scas
cmpsb
lret
jbe
push
cmp
jo
mov
out
pop
test
mov
rol
cmp
mov
mov
imul
and
mov
stos
ret
and
mov
and
dec
test
pop
pop
pop
sub
pop
pop
jp
lds
mov
add
push
xor
lret
and
mov
les
sub
sbb
ret
mov
pop
push
cmp
jecxz
and
mov
and
ljmp
and
mov
add
jbe
fisttps
daa
pop
std
in
aam
cmpsl
testl
iret
inc
add
add
int
push
xor
pop
jl
ficoms
decb
test
mov
mov
les
cli
sub
lret
add
fnstsw
cmpsl
xchg
dec
xchg
mov
add
add
pop
icebp
sbb
add
aas
aas
test
jge
addb
fldt
mov
mov
mov
add
add
mov
movsb
sbb
push
fsubl
psubd
mov
mov
mov
lds
imul
sbb
out
pop
cld
icebp
or
cld
push
inc
test
pop
call
movsb
in
dec
mov
mov
mov
cs
nop
add
fcoml
out
pop
xchg
pop
add
mov
and
push
add
mov
test
test
popf
outsb
jge
add
mov
xchg
ljmp
pop
push
push
add
add
scas
addl
