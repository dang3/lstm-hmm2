add
add
mov
mov
mov
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
aam
aam
aam
aam
shrl
das
das
das
das
das
das
das
push
push
push
push
int
aaa
aaa
add
add
adc
adc
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
push
push
push
pop
add
and
and
and
and
fcomp
addr16
cmpsl
cmpsl
add
inc
inc
inc
out
out
rol
inc
inc
inc
inc
inc
add
jnp
dec
dec
dec
das
das
das
insl
div
div
div
xchg
xchg
insb
insb
insb
insb
insb
insb
insb
insb
insb
adc
out
out
out
out
out
out
out
add
add
push
push
push
push
push
push
push
test
lcall
push
cmp
cmp
cmp
cmp
add
add
pop
pop
pop
add
add
ljmp
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
cmp
pusha
scas
scas
scas
scas
add
add
add
add
xor
aaa
aaa
aaa
aaa
aaa
aaa
add
add
add
dec
dec
dec
push
push
and
and
and
and
add
add
add
jg
jg
jg
jg
jg
jg
jg
jg
lds
add
add
add
add
jg
jg
jg
jg
jg
jg
add
add
sub
sub
add
xor
xor
xor
add
add
cmp
add
mov
mov
movsl
movsl
add
add
insb
insb
lods
jae
add
add
add
sub
sub
sub
sub
nop
nop
add
add
add
add
in
enter
enter
enter
enter
mov
mov
mov
dec
dec
dec
dec
dec
fldt
add
mov
cmp
cmp
cmp
xchg
xchg
mov
out
out
out
out
out
out
out
out
out
add
add
test
xchg
xchg
fcmovnu
fcmovne
int3
int3
int3
daa
push
push
push
push
push
push
scas
scas
scas
scas
scas
scas
dec
dec
dec
dec
dec
dec
add
outsb
outsb
outsb
outsb
outsb
outsb
pop
add
sbb
sbb
sbb
aas
aas
add
add
add
add
push
push
push
push
or
jo
addr16
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
push
push
add
add
push
push
push
push
push
pop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
adc
adc
adc
adc
adc
add
cmc
cmc
cmc
mov
mov
rcl
rcl
rcl
rcl
rcl
rcl
rcl
mov
mov
mov
mov
mov
add
stc
gs
add
add
add
cli
cli
or
add
test
test
insl
insl
insl
insl
in
in
in
in
in
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
add
leave
leave
add
and
add
add
and
push
push
push
add
add
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
scas
sub
mov
imul
sub
out
out
out
out
out
out
add
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
scas
scas
out
out
out
out
sti
add
add
add
adc
adc
adc
adc
add
add
add
enter
addr16
add
add
add
inc
test
pop
add
add
popl
mov
adc
aad
aad
aad
aad
add
into
into
into
into
into
into
into
into
into
add
add
add
add
inc
inc
inc
inc
inc
lcall
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
mov
mov
dec
dec
in
in
add
mov
push
push
adc
adc
adc
adc
adc
adc
mov
aas
aas
aas
lcall
mov
mov
add
addb
add
or
lods
lods
add
and
and
adc
adc
adc
adc
adc
shlb
and
and
and
and
and
and
adc
inc
inc
inc
and
and
add
add
cmp
add
add
add
add
dec
dec
dec
dec
fcmovu
mov
add
pop
pop
mov
add
mov
mov
sbb
sbb
sbb
add
fwait
fwait
fwait
fwait
movsb
movsb
add
add
add
or
or
or
pop
pop
pop
pop
add
div
imul
out
out
and
and
and
add
loope
loope
loope
loope
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
push
inc
inc
inc
inc
inc
inc
push
pushf
pushf
pushf
pushf
pushf
repz
lcall
push
push
sbb
sbb
and
and
add
in
and
aaa
aaa
add
add
addl
addl
leave
leave
stos
outsl
outsl
outsl
outsl
iret
fstp
frstor
imul
add
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
lcall
add
add
lcall
inc
inc
inc
gs
push
push
scas
scas
scas
scas
scas
add
add
push
push
add
add
add
add
adc
adc
cmp
add
add
add
add
fcmovnu
add
add
sbb
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
jne
jne
jne
jne
jne
int
int
int
int
div
div
div
div
div
div
loopne
mov
push
add
add
add
addr16
clc
clc
clc
clc
clc
add
add
add
ss
ret
ret
ret
sub
xor
xor
xor
xor
xor
xor
insb
insb
insb
insb
insb
insb
insb
add
les
sbb
xlat
xlat
xlat
xlat
xlat
xlat
add
dec
dec
dec
dec
dec
dec
dec
dec
and
add
add
add
adc
adc
adc
adc
adc
add
int
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fidivrl
add
add
shrl
cmp
cmp
mov
add
aas
aas
add
jbe
jbe
jbe
jbe
add
add
push
and
and
and
and
cmpsl
add
sub
jns
gs
add
xlat
xlat
xlat
add
xor
add
add
out
out
out
out
out
out
out
out
out
push
push
push
push
into
into
into
into
aam
aam
aam
aam
into
into
into
lods
lods
lods
lods
lods
outsl
outsl
outsl
outsl
outsl
add
add
add
pop
call
add
add
add
add
loope
jg
rcl
rcl
rcl
add
pop
pop
pop
add
inc
push
mov
add
add
add
add
inc
inc
inc
add
add
add
cmc
add
add
add
lcall
cs
mov
add
add
add
ret
sub
repz
xchg
adc
test
push
push
push
add
repz
add
add
add
add
add
add
add
add
sub
sub
sub
add
pop
pop
pop
pop
add
add
add
or
add
add
add
lahf
lahf
lahf
lahf
fistpll
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
aas
aas
test
add
mov
and
and
and
add
mov
and
and
stos
pop
pop
mov
add
add
add
ret
add
incb
insl
insl
dec
push
push
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jecxz
enter
enter
cltd
jne
jne
aad
addb
add
test
test
test
mov
jo
mov
mov
mov
mov
pop
pop
mov
add
add
add
add
ds
inc
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
mov
loopne
loopne
loopne
loopne
add
and
and
and
or
or
nop
add
add
inc
inc
add
add
add
add
or
or
or
or
or
dec
dec
mov
add
or
es
pop
add
add
add
xchg
add
cmc
cmc
cmc
cmc
cmc
scas
scas
scas
scas
div
div
div
div
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
arpl
add
push
push
or
fildl
or
cmp
add
add
add
add
add
cmp
cmp
add
push
ss
push
sub
sub
sub
sub
add
add
add
add
inc
pop
mov
sbb
sbb
sbb
sbb
sbb
sbb
lock
add
add
add
add
sbb
sbb
sbb
sbb
pop
pop
addb
addb
jg
jg
jg
cmp
add
add
add
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
mov
popf
popf
popf
popf
popf
loop
loop
add
loopne
cmp
cmp
cmp
add
add
add
or
or
add
add
out
and
and
and
and
add
add
ret
add
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
sub
add
add
add
addr16
add
add
add
add
add
and
loope
loope
loope
imul
mov
add
add
xchg
mov
add
and
add
add
add
aam
addr16
or
add
add
add
add
add
add
add
add
add
and
add
mov
add
add
xlat
xlat
fsubrs
outsl
add
add
popa
popa
popa
popa
popa
cmpsl
cmpsl
loop
loop
add
in
in
in
in
in
add
add
add
add
add
add
add
incb
add
sbb
add
add
imul
imul
imul
addl
addl
jg
jg
jg
jg
jg
jg
jg
dec
dec
jmp
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
rcl
sar
decb
sldt
add
cmp
add
add
add
add
add
add
add
rcl
rcl
rcl
adc
add
add
arpl
add
add
add
and
pop
pop
pop
add
jle
or
or
or
or
or
or
or
add
mov
mov
add
add
add
inc
inc
inc
mov
mov
mov
sub
adc
adc
add
add
dec
in
in
in
in
in
in
jle
loop
decb
xchg
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
lods
lods
lods
lods
mov
add
xor
xor
xor
xor
xor
mov
pop
pop
pop
add
add
cli
div
fldcw
push
push
push
push
add
mov
mov
call
or
add
push
push
push
push
push
push
push
add
mov
rclb
adc
outsl
outsl
pop
pop
pop
pop
pop
add
add
add
mov
add
std
std
std
add
add
add
push
push
push
sub
fwait
fwait
insb
insb
insb
insb
daa
daa
daa
daa
daa
daa
rolb
add
add
add
and
and
and
add
mov
mov
mov
add
add
scas
scas
add
and
and
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
add
hlt
hlt
hlt
hlt
hlt
hlt
add
add
add
add
sti
sti
sti
sti
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
push
push
push
push
push
inc
inc
inc
inc
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
arpl
arpl
sbb
sbb
sbb
sbb
sbb
jmp
jmp
cmp
cmp
cmp
cmp
add
add
add
addb
mov
fcmovnu
fcmovnu
fcmovnu
fneni(8087
loopne
loopne
loopne
sub
sub
add
add
add
add
cmp
cmp
cmp
cmp
add
add
sbb
sbb
sbb
sbb
ret
ret
ret
ret
ret
cltd
add
add
test
movsb
movsb
movsb
movsb
movsb
movsb
add
add
test
pop
into
into
push
push
push
push
jns
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jns
nop
nop
nop
nop
nop
nop
nop
add
add
ss
add
add
add
imul
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
xchg
xchg
xchg
xchg
jp
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
test
cmpsl
cmpsl
cmpsl
cmpsl
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
jae
icebp
icebp
icebp
icebp
icebp
sub
sub
sub
sub
sub
sub
sub
sub
out
out
test
add
add
and
and
and
and
and
add
jmp
add
xchg
add
adc
adc
out
out
add
add
add
inc
inc
inc
inc
add
add
add
add
ds
in
in
xchg
add
add
add
add
or
or
or
cmp
insl
insl
insl
insl
insl
add
add
add
add
mov
inc
loop
add
or
outsl
outsl
in
in
in
in
div
jns
push
push
add
add
incl
imul
sbb
add
es
and
add
pop
pop
pop
pop
pop
pop
pop
lea
stos
stos
stos
stos
jnp
jnp
jnp
jnp
lret
add
add
out
out
out
out
out
out
out
pop
pop
pop
cli
cli
adc
adc
add
add
dec
fstp
fldl
hlt
hlt
hlt
add
pop
cmp
cmp
cmp
out
out
out
out
out
out
out
add
mov
aas
aas
aas
aas
aad
sub
add
pop
add
add
cmp
cmp
cmp
cmp
cmp
in
vmovntpd
or
or
xchg
add
rcl
je
je
je
je
add
aam
aam
add
add
add
push
push
push
push
mov
mov
filds
add
sub
sub
sub
in
add
insl
out
out
out
out
out
out
ss
add
add
lea
popf
popf
popf
popf
call
add
leave
add
add
add
test
add
add
in
add
add
std
std
std
std
std
add
add
add
xor
add
add
lock
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
add
jae
add
add
arpl
add
enter
add
sbb
sbb
sbb
sbb
sbb
sub
sub
sub
sub
xchg
xchg
xchg
xchg
xchg
xchg
loope
add
stos
stos
stos
outsl
outsl
outsl
outsl
outsl
outsl
call
call
call
call
add
add
testb
add
add
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
add
popl
add
add
in
in
in
in
in
in
in
in
in
in
in
add
mov
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovne
enter
enter
xlat
xlat
xlat
xlat
xlat
xlat
mov
mov
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
jmp
add
add
mov
mov
mov
mov
mov
add
add
add
adc
adc
dec
dec
dec
dec
cmp
leave
leave
leave
leave
add
iret
iret
iret
jo
mov
add
add
mov
mov
add
std
std
std
std
dec
dec
add
dec
dec
add
loope
loope
loope
loope
loope
loope
loope
loope
jl
jl
jl
loope
loope
loope
add
jecxz
jecxz
jecxz
jecxz
jecxz
add
add
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
inc
add
aam
aam
add
pop
pop
push
push
ds
addl
add
add
xor
dec
lods
lods
lods
rol
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
pop
rcl
addb
loopne
add
add
add
add
leave
leave
leave
leave
leave
mov
add
add
add
push
push
push
push
push
push
push
push
push
sti
loope
add
popf
popf
jne
add
add
mov
pop
pop
pop
mov
mov
add
mov
add
add
add
add
add
add
add
std
std
std
add
add
add
add
cmp
cmp
cmp
ret
add
add
add
push
push
push
push
push
push
push
push
repz
inc
mov
mov
mov
add
add
les
add
out
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
add
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
add
add
add
sub
sub
add
add
add
add
sub
sub
aaa
aaa
aaa
aaa
aaa
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
outsb
outsb
outsb
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
bound
add
aaa
aaa
aaa
aaa
mov
mov
add
adc
repz
fcmovu
xchg
insb
insb
insb
addr16
cwtl
cwtl
nop
nop
nop
nop
nop
nop
nop
nop
add
bound
bound
bound
bound
add
add
jecxz
jecxz
jecxz
jecxz
fstp
out
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
and
and
add
add
add
pop
pop
pop
pop
pop
pop
pop
add
jle
jle
jle
jle
add
cmp
cwtl
cwtl
outsl
outsl
outsl
outsl
outsl
out
out
out
out
out
test
test
lret
lret
lret
add
in
in
in
in
in
in
stos
rol
sarb
cmp
sbb
add
loop
loop
loop
loop
loop
loop
loop
loop
es
les
add
add
test
xchg
dec
dec
arpl
test
mov
mov
add
add
add
add
add
fwait
les
add
imul
imul
imul
add
ds
add
add
add
or
scas
scas
scas
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
dec
dec
dec
pop
pop
pop
mov
sub
sub
sub
sbb
sbb
add
in
in
in
in
xchg
cmp
cmp
imul
lock
xor
add
add
ret
ret
add
xchg
xchg
xchg
xchg
xchg
mov
adc
add
mov
mov
inc
inc
inc
inc
inc
loope
loope
add
sbb
sbb
sbb
sbb
sbb
mov
ss
push
sbb
sbb
sbb
or
leave
push
push
push
push
add
scas
scas
test
mov
mov
mov
cli
cli
cli
cli
mov
mov
cs
out
add
js
js
js
add
add
xchg
scas
scas
mov
cmp
cmp
add
mov
add
in
add
add
cmp
add
add
add
add
push
push
push
push
push
push
push
push
push
std
std
std
std
std
std
std
std
std
or
or
lret
push
fs
or
hlt
and
add
add
add
add
fs
add
add
add
add
rcl
jbe
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
pop
add
incl
add
ds
je
add
sbb
sbb
sbb
lea
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
add
add
cmp
cmp
cmp
add
add
add
add
mov
mov
mov
mov
lret
leave
les
jb
add
add
nop
nop
nop
add
add
lea
or
pop
pop
pop
pop
pop
add
add
in
in
add
pop
add
test
and
and
and
and
and
jne
jne
jne
jne
add
xor
xor
xor
add
or
or
or
stc
stc
add
add
add
dec
dec
dec
dec
add
ret
ret
add
push
push
rcl
rcl
rcl
rcl
add
add
add
movsb
movsb
adc
adc
adc
out
and
and
and
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
sub
sub
inc
inc
inc
inc
inc
add
outsb
inc
inc
jb
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
fcmovu
fcmovu
fiaddl
add
fs
add
add
add
add
cmp
cmp
cmp
cmp
cmp
lock
roll
adcb
add
das
das
outsl
outsl
outsl
outsl
outsl
shll
add
add
add
add
scas
scas
scas
scas
scas
inc
inc
inc
xlat
xlat
xlat
xlat
xlat
xlat
add
add
jns
add
call
cmpsl
cmpsl
cmpsl
add
add
jb
lret
popf
popf
popf
popf
popf
popf
popf
popf
add
ret
add
jno
jno
jno
nop
nop
nop
nop
nop
nop
add
add
add
lea
add
cmp
jle
sbb
sbb
sbb
sbb
outsl
outsl
movsl
add
add
fs
add
add
enter
insb
insb
insb
fcomp
in
in
in
in
in
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
fcmovu
fisubrl
test
test
test
add
movl
mov
mov
and
bound
bound
adc
add
addr16
adc
adc
adc
adc
adc
add
add
sahf
sahf
push
push
push
push
push
push
push
push
push
push
filds
ss
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
stc
sbb
add
add
add
sub
sub
sub
mov
mov
mov
add
scas
scas
push
push
push
push
push
push
push
push
push
mov
add
es
xlat
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
pop
pop
pop
pop
pop
pop
mov
mov
ret
lods
lods
test
test
test
test
test
test
test
repz
dec
dec
dec
dec
dec
dec
dec
and
and
mov
sub
sub
sub
jl
hlt
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
mov
xlat
xlat
arpl
std
add
and
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
bound
add
add
add
int
add
add
inc
inc
inc
aaa
aaa
aaa
add
add
add
mov
add
add
add
das
jle
jle
jle
jle
jle
jle
imul
sar
cli
cli
cli
cli
cli
xchg
xchg
cmp
add
add
stos
ss
dec
dec
ret
ret
ret
ret
ret
ret
ret
ret
and
and
and
adc
add
add
add
clc
clc
clc
clc
clc
clc
xor
xor
xor
xor
addr16
mov
mov
add
add
add
les
jl
jl
jl
jl
dec
push
push
push
push
push
push
push
push
push
push
push
push
cmp
cmp
cmp
mov
loope
loope
loope
inc
in
in
in
push
push
push
push
push
push
push
push
push
push
push
push
push
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
xchg
add
and
jl
aaa
inc
add
outsl
outsl
outsl
outsl
outsl
and
push
push
add
add
add
or
add
sub
sub
sub
sub
sub
sub
sub
sub
loopne
cmp
jne
add
lds
scas
scas
scas
add
roll
add
adc
add
add
add
enter
lea
xchg
mov
add
add
jns
out
out
out
dec
dec
pop
pop
pop
pop
cs
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sub
sub
sub
sub
add
add
add
add
addr16
fwait
fwait
fwait
add
fcmovnu
fcmovnu
xchg
xchg
xchg
mov
mov
ja
ja
mov
sldt
cmpb
jl
jl
jl
add
sbb
sbb
mov
inc
add
add
add
ret
ret
lret
add
in
add
add
jb
jb
jb
inc
inc
mov
mov
add
add
add
add
pop
pop
pop
movsb
movsb
movsb
movsb
movsb
call
and
and
add
cli
cli
push
push
push
push
push
sub
sub
sub
sub
in
in
in
cmc
cmc
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
cmp
cmp
cmp
cmp
cmpsl
cmpsl
cmpsl
cmpsl
cli
aas
aas
aas
aas
aas
aas
aas
adc
add
add
add
add
add
inc
inc
add
add
add
dec
dec
dec
push
push
push
push
push
pop
add
pop
pop
pop
pop
pop
pop
pop
pop
add
mov
mov
mov
xchg
test
add
add
add
aam
aam
aam
aam
aam
aam
insl
insl
add
add
add
sub
sub
sub
sub
icebp
icebp
icebp
icebp
icebp
icebp
icebp
mov
cmc
sub
cs
add
add
add
add
xor
out
out
sub
add
add
cmp
cmp
cmp
add
add
sbb
sbb
int
int
int
int
int
int
aas
aas
aas
aas
aas
or
add
add
add
mov
rol
add
add
add
xchg
mov
mov
pop
pop
hlt
hlt
hlt
hlt
jns
jns
jns
add
add
pop
pop
push
lods
inc
inc
inc
inc
inc
inc
mov
mov
mov
add
add
add
add
aam
aam
add
add
add
add
jo
push
push
sbb
test
gs
add
add
add
add
add
mov
push
push
push
push
add
repz
add
loopne
sub
add
add
adc
adc
adc
jne
jne
add
jecxz
cmp
inc
inc
inc
inc
inc
inc
push
add
sub
sub
sub
sub
sub
sub
lock
mov
add
add
add
add
add
and
icebp
icebp
icebp
add
add
mov
mov
mov
sbb
add
sub
sub
sub
sub
sub
arpl
arpl
arpl
pop
pop
adc
adc
adc
add
add
add
mov
mov
mov
rol
insl
insl
add
into
into
into
into
into
stos
stos
stos
stos
stos
push
add
pop
pop
pop
add
add
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cmp
rcl
roll
add
add
add
cmp
cmp
sub
sub
out
out
pop
pop
out
out
out
out
out
out
bound
test
test
fcmovu
fcmovu
adc
adc
adc
add
add
add
add
mov
rcl
roll
add
lods
mov
add
add
xchg
xchg
jge
jge
add
jno
jno
jno
jno
add
add
push
add
add
add
fldl
add
add
lldt
add
add
add
pop
jns
sub
add
xor
sbb
adc
mov
add
mov
add
xchg
pusha
sbb
scas
sbb
dec
push
cmp
and
add
add
ret
xchg
aas
cmpsl
and
add
inc
iret
sbb
mov
gs
add
pop
xor
pop
and
test
mov
fs
add
addb
aam
rcr
xchg
inc
out
sti
cmp
imul
adc
stos
add
jne
add
dec
pop
jmp
xchg
nop
test
add
out
dec
jmp
inc
scas
std
out
mov
sub
add
add
imul
jecxz,pt
xor
in
dec
push
add
mov
or
add
add
lock
mov
add
xor
fdivr
xor
fmulp
mov
mov
add
cmpsb
add
mov
add
in
adc
pop
sub
andl
testl
add
test
add
out
int
dec
mov
add
xor
and
add
sbb
add
and
add
std
call
xchg
inc
push
hlt
mov
add
mov
sub
in
or
add
and
les
add
xchg
out
mov
jg
add
push
and
inc
mov
xchg
mov
add
xor
add
stos
add
lret
das
dec
and
add
add
jnp
ret
ds
sub
sbb
xor
movl
pop
lods
add
mov
sti
test
add
push
add
pop
filds
add
iret
insb
pusha
inc
lods
add
and
add
lea
lret
nop
mov
add
or
add
aad
push
gs
xor
lea
inc
iret
and
and
add
dec
daa
xor
addr16
add
sahf
sarb
add
arpl
jl
cld
xor
or
sbb
adc
sbb
cmc
xor
popa
mov
sbb
insb
adc
add
pop
test
mov
add
lret
mov
push
add
jl
push
add
add
mov
add
fstp
pop
dec
repnz
add
sbbl
mov
add
jmp
sub
jno
cmp
fmulp
push
add
fs
and
add
subl
mov
xchg
sti
xor
mov
sub
add
loopne
inc
cmp
add
shlb
dec
jno
pop
or
add
lahf
dec
or
add
jns
popf
aam
add
jbe
adc
fdivrs
mov
ja
and
pusha
insl
add
movb
cmp
push
addr16
add
add
loopne
push
add
and
jae
repz
add
xor
dec
notl
inc
dec
push
rolb
xor
add
cmp
jmp
xchg
and
add
inc
push
inc
mov
add
pop
inc
mov
pop
adc
jg
pop
fisttpll
aam
adc
loopne
fiaddl
mov
add
sahf
data16
add
call
mov
nop
xor
add
mov
sbb
scas
add
pusha
inc
out
cmp
mov
int
loop
mov
insl
mov
outsl
out
rclb
jge
jno
out
ja
push
add
add
add
add
push
add
shll
push
jl
add
add
add
scas
add
mov
add
idivb
sbb
add
sub
add
inc
fnsave
mov
add
icebp
repz
out
mov
sbb
or
add
add
fwait
in
xor
mov
sahf
shll
add
add
mov
and
add
jecxz
shll
pop
jl
addr16
inc
shll
jmp
push
fmull
xor
les
pop
das
lock
test
inc
lods
cmpsb
add
mov
pop
int3
mov
out
iret
inc
add
add
test
xor
add
mov
test
pop
fstps
data16
mov
add
mov
add
or
add
cld
push
iret
fnsave
imul
add
add
sbb
cmp
ljmp
mov
add
mov
add
add
mov
add
addb
sub
and
add
jb
call
add
add
add
cli
pop
xor
or
ret
adc
cmp
adc
xchg
pop
mov
add
add
popf
jo
add
and
add
dec
lock
addl
xchg
push
add
adc
outsl
dec
scas
add
or
loopne
add
rol
jmp
mov
xor
mulb
add
sbb
add
mov
xor
mov
mov
add
sub
insl
testl
add
mov
lods
xchg
add
movsl
arpl
add
pop
jo
pop
insl
into
addr16
addb
hlt
xor
add
add
cmpsl
fildl
push
fsubp
xchg
adc
pusha
or
xchg
jbe
fisttpll
pop
cmp
cmpsb
add
pop
out
xor
bound
lcall
mov
add
or
add
add
lock
out
mov
add
xchg
fadds
xor
adc
lods
and
add
cmp
mov
sub
add
and
pop
mov
adc
movsb
add
mov
mov
ss
add
add
cmc
into
fstpt
movsl
cmc
pusha
clc
fcomi
sub
add
add
push
mov
add
jmp
cmp
jne
add
idivb
fsubr
lahf
or
or
in
in
adc
add
xchg
add
add
shlb
jns
sti
dec
fidivrs
xchg
inc
ss
mov
lds
add
cmp
add
inc
inc
add
and
add
push
js
fisttps
jmp
les
pop
test
dec
mov
popf
loop
sub
xor
fs
pushf
mov
add
jo
inc
incb
ljmp
addr16
jecxz
add
mov
add
add
cmp
add
insb
sbb
sub
add
bound
and
add
aad
pusha
mov
or
inc
add
and
add
les
adc
aaa
int
data16
out
push
add
mov
add
pop
mov
add
test
or
hlt
repz
loopne
arpl
add
pop
test
add
fcompl
js
add
sub
mov
add
ja
xchg
mov
or
femms
add
stos
cmp
sub
add
out
inc
loope
sub
add
sbb
fwait
xchg
cld
jo
aam
or
add
mov
sub
add
mov
push
adc
inc
mov
ret
push
add
popf
dec
push
mov
xor
jne
scas
add
add
pushf
add
add
push
and
add
repz
mov
add
push
mov
popa
cmpsb
add
lods
sbb
inc
pop
sub
divl
add
jg
jbe
add
or
push
push
add
nop
cmp
jo
dec
xchg
add
xor
add
inc
add
add
dec
in
test
add
add
and
inc
cmp
int
mulb
daa
mov
or
arpl
add
jmp
decl
add
roll
add
ss
addb
push
push
jecxz
out
pop
adc
xchg
add
cwtl
jmp
stos
add
out
xchg
decb
fidivrs
testb
add
mov
push
leave
push
fistpl
jae
leave
mov
mov
repnz
jmp
arpl
adc
jmp
push
das
pop
ret
add
jmp
mov
push
mov
loop
add
data16
add
test
fs
or
add
mov
add
add
add
sti
in
jbe
add
mov
add
dec
cmp
pop
stos
xchg
add
add
mov
cli
mov
add
jno
add
mov
adc
or
bound
divl
pop
popa
sbb
pop
addb
loope
add
cmp
cmpsb
add
mov
adc
sbb
movsl
sti
push
bound
out
dec
and
add
add
inc
dec
xchg
dec
je
mov
dec
shll
rclb
add
add
cltd
ljmp
lods
mov
add
daa
sahf
addr16
int
rcrb
stos
add
testl
fwait
popa
xchg
sbb
inc
sub
das
inc
inc
outsb
sub
add
pop
sub
add
arpl
add
mov
mov
jge
js
jg
inc
out
hlt
js
jb
mov
add
addb
lret
in
aas
jmp
nop
pusha
gs
fstpt
cwtl
sahf
insl
jno
cld
xchg
add
je
sbb
rcrb
ret
mov
pusha
jg
fdivr
xchg
xlat
jmp
add
mov
mov
add
xor
shlb
add
add
xchg
fdivp
add
add
add
sbb
add
add
add
mov
sub
insb
ja
nop
add
add
xchg
and
add
mov
push
rorb
lds
cmp
cmp
add
jecxz
and
add
outsl
lea
dec
xchg
sbb
lret
pop
jb
or
movsl
fcomps
mov
add
add
sub
add
aam
xor
xchg
add
stc
xchg
mov
add
dec
aad
lods
add
clc
loopne
lock
mov
add
stos
add
dec
or
mov
sub
add
add
aad
add
push
hlt
lock
negb
outsl
lcall
fcom
sbb
sti
jnp
mov
test
add
jp
or
jecxz
negb
push
lock
xor
loopne
outsb
jge
aaa
jae
jae
icebp
dec
test
add
xchg
adc
pop
xchg
jmp
xor
loop
pop
icebp
nop
mov
mov
add
shll
mov
xor
mov
push
shrl
cmp
add
add
out
inc
adc
aaa
push
insl
outsb
cmpsl
add
add
adc
scas
add
xchg
mov
aaa
xchg
add
xor
int
mov
add
adc
sub
add
adc
cld
repnz
xor
ret
daa
ss
out
mov
add
xlat
jbe
push
arpl
push
jge
xlat
out
or
add
scas
add
sub
or
add
das
mov
xchg
test
daa
lock
mov
lret
scas
add
shll
mov
add
push
add
sti
scas
add
jb
iret
and
add
lret
cwtl
mov
add
out
scas
xchg
mov
int
add
enter
or
add
mov
add
sub
pop
std
xchg
mov
adc
lods
add
cli
xchg
repnz
and
pop
cmc
clc
pop
test
add
loopne
sbb
ljmp
adc
inc
sub
add
pop
push
les
add
add
rorl
mov
jnp
out
xchg
jae
add
dec
jg
mov
sbb
shl
mov
nop
movsb
add
movsl
pop
mov
icebp
jl
sub
add
dec
or
add
mov
dec
adc
sub
sub
shlb
fcoml
add
add
add
xchg
loope
jle
mov
mov
repnz
lcall
cmp
fs
adc
sbb
cwtl
pop
sarb
or
add
add
mov
pop
mov
add
fbld
dec
notb
push
scas
addb
cmpsb
add
and
icebp
fnstsw
pop
mov
add
sub
add
or
add
add
add
sbb
cltd
pushf
xchg
add
movsl
push
out
rcrb
mov
loop
int3
adc
sbb
iret
jle
inc
xchg
add
arpl
jge
add
mov
add
cmpsl
je
add
dec
dec
rcrb
fcomi
stos
push
lcall
or
add
mov
gs
movsl
shll
sub
add
fldt
pop
arpl
addb
jge
sub
add
int
mov
add
popa
movsb
add
hlt
ret
adc
fidivs
arpl
and
add
cmp
mov
imul
adc
add
add
loop
push
mov
movsl
mov
repnz
sti
shl
push
addb
or
pop
mov
call
clc
add
mov
pop
cmc
and
add
pop
outsl
jle
lcall
push
scas
add
test
add
arpl
mov
add
fs
scas
add
and
sbb
add
add
scas
sub
add
hlt
xlat
sbb
dec
cmpsl
push
fcoms
mov
push
lea
cld
jb
inc
test
add
stos
add
cld
sbb
aad
sbb
icebp
add
daa
into
adc
ret
jmp
add
mov
add
lods
add
pop
int3
mov
add
add
sarl
add
roll
cmp
xchg
mov
pop
adc
sub
add
lcall
mov
rcr
adc
add
inc
lods
pushf
lock
add
add
xchg
lahf
xchg
jae
push
in
loop
in
dec
cld
ljmp
jge
rclb
fmul
sub
add
imul
fimull
add
mov
add
mov
cld
sbb
add
imul
pop
inc
cld
movl
jae
add
add
add
pop
shlb
add
ds
addb
mov
cmp
sub
add
lds
mov
inc
or
add
scas
call
stos
add
orl
cmc
inc
loop
add
push
daa
or
add
clc
push
loope
aam
shrb
dec
fucom
jo
aas
fisubrl
aaa
add
mov
dec
xlat
pop
dec
rcrl
jae
fdivl
rolb
fadds
add
lods
shrl
int3
inc
adc
mov
hlt
lcall
lret
in
ret
jbe
movsb
add
dec
dec
add
pop
sbbl
int
enter
addb
sub
add
adc
push
dec
jle
xor
cmp
push
aaa
repz
sti
fmull
add
add
cmpsl
aam
lahf
pop
sub
add
mov
add
lahf
pop
jmp
add
mov
pop
int
dec
sub
push
rorl
pop
xchg
inc
add
add
adc
imul
inc
loopne
adc
adc
mov
sub
add
mov
ret
xchg
inc
in
pop
cwtl
lock
enter
jb
push
or
add
adc
gs
fstl
shrb
pop
adc
add
sub
adc
mov
addr16
stos
sbb
add
lahf
dec
jp
lods
add
jnp
repnz
ljmp
add
push
jmp
pop
idivl
jb
sub
add
xlat
mov
mov
add
daa
fdivr
ret
and
add
cmpsb
add
stc
in
outsl
lock
push
jno
lods
add
out
add
rolb
mov
sti
jns
mov
addr16
add
pushf
clc
pop
mov
mov
pop
push
xor
add
enter
imul
add
leave
imul
loop
add
dec
mov
mov
add
add
lea
sahf
clc
push
nop
push
pushf
js
gs
add
shl
subl
lock
mov
add
add
xor
add
xchg
icebp
cmp
scas
add
push
add
loope
sbb
xchg
mov
add
add
sahf
jo
ret
jl
add
cmc
jp
cli
inc
xor
ja
or
add
cmpsl
fistpl
add
mov
lds
add
mov
repz
jb
sbb
xor
shll
fprem
dec
adc
pop
test
pushf
fsubr
loopne
pop
lods
divb
lods
aaa
sti
mov
add
fs
pop
adc
mov
add
sbb
icebp
mov
xchg
sub
and
push
cltd
xor
in
sbb
jle
aam
xchg
pop
push
mov
add
fstpl
dec
xchg
fistpll
add
sbb
mov
jg
lods
add
dec
sub
add
shr
mov
jmp
xlat
jmp
xor
flds
test
add
sbb
sti
in
xor
cld
pop
das
mov
add
leave
xchg
xchg
lret
ss
leave
movb
shll
notb
push
sub
add
push
or
hlt
jg
dec
add
add
addr16
xlat
lcall
and
add
xchg
or
add
test
add
mov
mov
add
or
enter
loope
nop
add
xchg
pop
divl
add
adc
push
dec
add
add
or
add
mov
inc
jmp
iret
push
rolb
fucomi
add
add
add
gs
jg
xchg
lea
add
mov
push
out
add
xchg
mov
add
add
mov
movsl
inc
cmp
outsl
ss
add
mov
and
jecxz
loop
shrl
add
cltd
adc
push
test
adc
aas
aad
jp
add
add
adc
push
or
or
add
cmp
sbb
cmpsl
cmp
fistps
in
pusha
mov
int3
pop
push
mov
xchg
cmp
jnp
cwtl
cmp
add
cmp
cmpsl
in
push
sub
add
in
xor
jp
mov
call
mov
add
pusha
xchg
add
add
mov
jbe
pop
popa
lcall
aad
xchg
in
mov
and
add
inc
jle
add
inc
addl
inc
push
mov
add
add
jno
sarl
int
xchg
rorb
imul
and
push
sar
jae
ljmp
sbb
lods
xchg
sar
pop
sub
add
inc
jge
in
lss
add
adc
test
add
mov
add
dec
inc
andl
cmp
add
bound
or
add
adc
testl
cmp
test
fstpt
push
push
pop
fwait
push
inc
mov
jge
sub
add
or
mov
test
das
pop
sub
add
mov
ljmp
mov
neg
ret
add
addl
add
add
add
push
in
addb
dec
and
add
bound
xor
lret
loopne
addl
js
push
mov
lea
loop
ret
jg
imul
mov
out
xchg
loop
push
sub
arpl
les
add
push
add
mov
into
sbb
pop
push
adc
push
fcomps
add
pop
cltd
loope
add
repz
std
xchg
out
push
pop
adc
add
add
sarl
and
add
mov
rcll
add
sbb
sbb
add
push
add
jg
dec
mov
add
add
cmp
add
xor
adc
mov
add
dec
cmp
add
pop
enter
mov
lock
xchg
je
add
inc
push
notb
mov
add
xchg
dec
mov
test
add
jbe
lahf
lret
jne
stos
mov
add
call
mov
jecxz
test
jnp
jne
ret
test
add
pop
push
push
fmull
mov
xchg
and
add
je
data16
adc
add
ret
not
iret
sub
add
push
jecxz
add
lods
adc
gs
out
test
mov
mov
aam
loope
cmp
cmp
sbb
out
pop
add
add
mov
add
lcall
out
inc
cmp
cmp
cmp
scas
xor
pop
and
add
pop
jne
push
inc
mov
icebp
inc
xor
add
mov
ficoms
xor
push
bound
add
mov
add
xchg
inc
push
mov
xchg
mov
fsubrp
fildll
jae
push
add
push
pop
lods
add
push
xor
cmpsb
add
repz
mov
pushf
pop
cmpsb
add
insb
call
dec
adcl
add
sub
add
shr
inc
cmpsl
or
add
hlt
push
ja
cwtl
fsubp
inc
outsl
lods
add
inc
mov
sub
outsb
sbb
jge
add
test
add
movsb
add
in
das
jmp
cltd
cmp
add
mov
add
jecxz
insb
popf
lods
dec
or
adc
jmp
cld
mov
add
orl
push
lea
push
push
and
call
sub
add
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
push
lret
lea
andl
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
imul
and
jne
call
rorb
notrack
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
add
sub
and
jmp
push
mov
jmp
jle
pop
dec
inc
sub
add
aaa
add
mov
add
mov
add
mov
and
inc
mov
fdivl
xchg
ret
fcoms
add
imul
mov
xchg
xor
pop
clc
inc
push
aam
dec
xchg
stos
xchg
cmpsb
add
les
add
mov
inc
inc
add
add
add
test
dec
and
add
sbb
cli
out
mov
add
push
add
adc
cmp
cmpl
mov
add
add
xchg
mov
add
add
clc
shl
add
pop
adc
xchg
jle
jne
or
add
mull
add
dec
lods
add
mov
addb
ljmp
inc
pop
fldenv
mov
das
push
imul
xchg
std
or
add
cmpsl
aam
inc
ja
mov
add
cmp
cld
les
mov
mov
cmp
jnp
fs
std
vpaddq
add
jmp
sbb
fcomps
mov
das
dec
adc
hlt
int
stos
add
aaa
lcall
pop
xor
lods
add
call
scas
inc
and
add
je
and
add
sub
add
inc
sub
add
dec
push
add
push
mov
or
add
pop
test
add
pop
pop
jne
stos
clc
popa
sahf
add
add
lahf
push
mov
adc
movsb
add
out
add
jae
dec
ja
adc
add
add
and
jp
pop
dec
jmp
pushf
outsl
aad
movsb
add
mov
lret
jl
add
je
mov
add
outsl
sub
add
pop
sbb
mov
add
adc
js
cltd
cmp
out
movsl
repz
sub
add
dec
jno
add
loop
xor
adc
add
hlt
add
add
sbb
out
mov
sub
inc
adc
stos
daa
movsb
add
xchg
add
lock
xchg
pop
stos
add
and
add
inc
pusha
imul
mov
movsl
jne
cmpsb
add
pop
daa
aaa
rolb
mov
enter
int3
fcoms
xor
pop
mov
pop
push
aam
add
fistpl
test
add
fwait
sbb
add
js
or
add
mov
add
cmp
add
aam
fisubs
sub
cwtl
addb
je
bound
enter
add
mov
inc
int
add
outsl
ds
lret
sti
faddl
jle
add
cmp
push
ret
or
in
xor
int3
ja
sub
mov
leave
cld
aam
fildl
and
add
dec
mov
fisttpll
add
mov
mov
into
cmp
add
cmpsb
add
push
add
cmp
les
or
add
int3
dec
repz
mov
pop
dec
mov
add
fisttps
add
pop
dec
cmpsl
hlt
rcrb
lahf
hlt
xor
pop
stos
add
test
add
dec
xorl
push
sub
and
add
add
rcrb
xorl
mov
add
je
addb
push
add
xchg
sahf
leave
jae
fsubrs
add
add
dec
xchg
xchg
into
arpl
mulb
add
add
int3
sub
add
divl
mov
inc
std
insb
sbb
push
icebp
dec
jmp
cmpsl
sub
add
and
add
shl
mov
and
add
outsl
incl
or
pop
mov
outsl
jne
inc
ja
add
dec
mov
add
pop
aad
jp
je
std
inc
add
rclb
rcrl
test
add
mov
add
into
sub
jp
jbe
add
sbb
add
mov
jl
adc
popa
cltd
sbb
test
add
sahf
push
in
cmp
xchg
ret
add
fcompl
jo
in
outsb
loopne
insl
mov
loope
mov
sbb
sti
cmp
jnp
jecxz
mov
shll
dec
push
movsb
add
outsb
lods
add
lods
push
repz
xor
enter
fbstp
dec
cmpl
fwait
fwait
lds
in
std
adc
add
iret
push
xchg
test
addr16
mov
push
add
adc
add
add
jne
dec
sahf
sub
in
fadds
pushf
jg
shr
and
add
pusha
xor
sti
lcall
pop
loop
jb
lods
ja
sahf
mov
add
mov
mov
add
movsb
add
push
add
and
add
xchg
imull
add
aaa
fdivrs
addr16
push
jg
push
add
mov
xchg
lret
in
xchg
insl
mov
mov
mov
or
pop
push
sti
jmp
fistl
add
sub
adc
out
jmp
push
jo
pushf
xchg
adc
sbb
cmpsb
add
xchg
stc
mov
rorl
rcrl
je
inc
addb
rorl
add
aam
xchg
push
add
inc
shr
addr16
addb
sbb
add
add
outsl
out
mov
aas
std
xor
outsl
mov
inc
out
cmp
outsl
xchg
push
add
ret
fiadds
frstor
pop
mov
add
xchg
cmp
out
add
in
mov
adc
hlt
mov
add
out
mov
push
add
inc
jmp
nop
mov
cltd
in
inc
test
add
addb
xchg
sub
out
test
add
pop
lea
bound
cmp
jg
cwtl
mov
add
adc
add
call
ljmp
mov
lds
and
and
pop
ljmp
cltd
and
mov
enter
test
lock
sub
and
jp
cmp
cltd
int
and
add
mov
and
loop
sbb
pusha
cmp
add
mov
push
add
mov
add
pop
ret
popa
xlat
in
or
add
lret
inc
inc
mov
add
jmp
std
jp
out
divl
incl
add
xchg
dec
lods
add
stc
imul
jno
repz
lcall
in
rcl
mov
or
add
std
fidivl
daa
push
adc
dec
pop
aad
test
adc
pop
ret
iret
mov
lods
add
jns
cli
mov
pop
mov
pop
aas
adc
iret
out
je
and
add
add
push
mov
dec
cmp
or
add
xchg
fiaddl
add
in
bound
fadds
sub
pop
inc
push
mov
cmpsl
mov
mov
loop
adc
lea
lret
jae
mov
pushf
and
mov
inc
lret
add
push
les
cmp
dec
lret
add
data16
add
adc
add
inc
scas
add
cmpsl
shr
dec
lret
mov
loopne
add
mov
test
add
add
push
cli
ss
call
cld
pusha
stos
add
and
fchs
dec
add
add
xor
dec
cmpsl
les
in
add
inc
add
sbb
sub
add
mov
add
addb
push
push
rep
aas
lret
jg
or
cli
int
add
and
ljmp
bound
lret
sbb
cmpsb
add
in
pop
addr16
jns
cld
decb
repz
mov
add
and
or
add
ret
mov
in
add
add
in
add
xlat
int
call
add
inc
lret
push
mov
sbb
add
outsb
sbb
mov
add
add
jnp
addb
adc
clc
pusha
cmc
pop
stos
add
xor
sahf
push
add
lahf
lds
xchg
inc
js
pop
addb
pop
mov
push
or
add
out
scas
test
sub
add
rorb
pop
sbb
roll
push
aas
popf
mov
jmp
inc
xchg
add
clc
push
add
lock
push
push
xchg
jle
stos
add
fiadds
add
add
mov
xchg
and
add
ja
mov
sbb
aas
dec
lcallw
int
mov
fildl
add
lods
jno
mov
add
xlat
rolb
jl
add
add
or
sahf
mov
mov
shrl
add
pop
gs
test
add
add
mov
adc
lods
add
and
add
xor
adc
je
jnp
std
stos
cli
jne
mov
add
inc
test
int
dec
pop
xchg
pop
or
add
rcll
jmp
rcll
push
add
add
dec
int
into
insb
mov
add
add
xor
add
jbe
xor
addr16
add
icebp
movsl
adc
fsubr
arpl
rcrb
insl
loope
fucomp
ds
ds
jmp
add
xor
jbe
sahf
outsb
out
cmp
lods
inc
inc
bound
xchg
xor
cmp
push
enter
and
jo
xchg
sti
mov
add
fimull
adc
or
ja
outsl
repnz
test
ljmp
jne
mov
add
add
shll
add
aam
jae
int3
pop
sub
ret
xchg
sub
sub
add
das
xchg
cltd
pop
inc
fisubl
add
ret
mov
xor
addb
adc
cld
loope
xlat
inc
or
add
das
loopne
out
pusha
into
frstor
mov
or
add
test
add
dec
jle
add
fsts
add
imul
push
stos
add
and
xor
clc
imul
add
pop
enter
imul
shll
inc
mov
fistpl
rorb
add
xor
jle
dec
cmpsb
add
inc
in
or
add
xchg
add
push
int
enter
add
mov
jecxz
mov
jae
adc
repnz
jmp
add
outsl
dec
inc
shrl
add
cwtl
int
push
in
add
cmp
push
test
add
add
adc
add
leave
in
or
loopne
or
add
mov
idivb
adc
jno
lea
inc
loope
add
mov
add
jmp
mov
lds
sub
or
add
xchg
xchg
cmp
add
jecxz
sbb
fdivrs
shll
add
adc
inc
jmp
jnp
stos
add
arpl
push
add
mov
pop
sbb
add
add
dec
mov
mov
into
push
mov
cmp
out
adc
add
sbb
dec
fistpll
mov
add
add
add
xchg
lahf
ja
pop
adc
fwait
into
aam
lret
add
jae
add
cmp
in
loop
daa
and
jno
jnp
pop
mov
pop
mov
mov
bound
repz
lret
out
cmp
js
pop
sbb
pop
scas
add
push
rorb
adc
jb
dec
out
add
xor
cmpsb
add
mov
add
adc
add
add
add
mov
add
and
add
rclb
divb
push
movb
cmp
mov
xlat
adc
dec
inc
loop
jl
push
outsb
arpl
mov
cmpsl
cld
cmp
add
sbb
notb
test
add
mov
fsubl
ret
into
xchg
push
fisttps
mov
add
movsl
pop
xchg
add
mov
loopne
jb
cmc
mov
add
push
pop
jmp
loope
iret
sbb
loopne
push
add
xchg
ret
xor
adc
inc
xchg
add
add
sbb
push
mov
pop
pop
add
add
dec
jle
cmc
lcall
cmc
pop
pop
sub
add
push
xor
add
jl
imul
sub
and
add
xchg
call
cmpsb
add
xor
lret
lahf
shll
add
roll
xchg
mov
add
mov
mov
push
cmovbe
cwtl
ret
dec
or
jno
icebp
popf
rcr
adc
push
jbe
shll
lock
insb
scas
fsts
add
push
rorb
scas
add
nop
orl
mov
add
fldenv
insl
sub
add
into
and
add
sub
add
and
add
mov
and
or
rcrl
int3
scas
insl
sub
add
adcl
add
add
cmpsl
fisttps
test
inc
cli
cmp
outsb
lahf
and
les
push
stos
add
mov
dec
lds
jg
push
popa
fdiv
sub
add
add
add
add
jne
push
or
fmulp
stc
push
add
in
jg
jne
add
ret
cmc
jecxz
fsubrl
add
xchg
cli
hlt
jbe
push
add
pop
add
xchg
add
add
pop
adc
add
aad
sbb
mov
out
jmp
rcl
mov
push
mov
xor
mov
add
cwtl
shll
add
aaa
nop
dec
jne
add
add
fcomps
add
add
or
insb
add
add
pop
lret
add
add
insb
sarb
mov
push
out
adc
add
gs
jae
add
mov
mov
sarb
adc
push
pop
sarl
add
add
jg
add
adc
add
cmp
addb
or
add
dec
sbb
add
addb
leave
dec
pop
dec
in
mov
add
add
ss
inc
pop
and
bound
mov
dec
fadds
mov
add
dec
pop
sub
add
mov
pop
and
add
add
lods
add
in
dec
dec
push
cltd
jp
int
cwtl
loope,pt
add
in
decb
add
xchg
insl
add
add
ret
push
sahf
test
add
out
add
add
push
dec
insl
in
lock
add
mov
pop
test
mov
icebp
notb
pushf
jo
adc
lret
add
sub
enter
int
add
push
add
fnstcw
decb
ss
lcall
cmpsb
add
loope
cmp
fiadds
add
dec
mov
jge
jecxz
fcompl
inc
mov
push
nop
push
mov
leave
nop
jmp
imul
add
fldpi
clc
repnz
nop
nop
jae
pop
add
jne
add
add
mov
add
clc
repnz
nop
nop
jae
add
xchg
mov
clc
repnz
nop
nop
jae
add
jge
push
add
xlat
mov
clc
repnz
nop
nop
jae
inc
add
mov
xor
dec
cmp
repnz
nop
nop
jae
add
add
add
xchg
add
orl
mov
leave
nop
jmp
fdivrs
out
push
clc
repnz
nop
nop
jae
popf
add
xchg
add
sbb
sub
mov
leave
nop
jmp
cld
hlt
add
push
add
ds
add
sub
cld
nop
nop
jae
aas
gs
add
call
nop
push
mov
leave
nop
jmp
add
add
dec
cmp
je
add
add
add
add
incl
popf
jb
add
es
or
add
pop
nop
push
mov
leave
nop
jmp
in
pop
cmpsb
and
add
adc
add
repnz
nop
nop
jae
fldl
add
test
nop
push
mov
leave
nop
jmp
add
clc
cvtps2pd
stos
add
mov
lods
push
mov
xchg
ret
fmul
add
and
add
lods
and
add
repnz
nop
nop
jae
loope
gs
jo
jge
js
clc
repnz
nop
nop
jae
pop
pop
add
dec
sub
repnz
nop
nop
jae
add
and
add
dec
out
push
mov
xchg
ret
add
add
scas
fadds
fcomps
sub
add
add
add
pop
lock
pop
push
mov
xchg
ret
add
add
add
xchg
stos
pop
nop
push
mov
leave
nop
jmp
es
add
xlat
in
lret
push
mov
xchg
ret
add
cld
add
add
sbb
clc
repnz
nop
nop
jae
add
leave
and
push
insb
icebp
stos
push
mov
xchg
ret
push
sub
in
add
pop
out
movzwl
clc
repnz
nop
nop
jae
mov
jbe
add
clc
repnz
nop
nop
jae
add
mov
push
mov
leave
nop
jmp
and
add
add
jge
add
nop
push
mov
leave
nop
jmp
loope
add
add
jne
push
mov
xchg
ret
and
pmaxsw
add
nop
push
mov
leave
nop
jmp
movsl
add
adc
nop
nop
jae
xor
cld
add
mov
nop
push
mov
leave
nop
jmp
add
and
div
clc
repnz
nop
nop
jae
xor
add
pop
and
fisubs
nop
nop
jae
add
add
and
and
xchg
and
call
xor
add
jp
fsubrs
scas
add
rclb
in
inc
add
hlt
add
pop
add
enter
clc
repnz
nop
nop
jae
add
add
and
fidivrl
add
mov
push
add
clc
repnz
nop
nop
jae
sub
xchg
enter
add
add
and
add
add
add
add
nop
nop
jae
add
add
mov
mov
xchg
ret
push
jne
add
add
aam
mov
clc
repnz
nop
nop
jae
push
add
mov
push
mov
leave
nop
jmp
leave
add
mov
cmp
nop
push
mov
leave
nop
jmp
add
and
push
mov
leave
nop
jmp
jne
cmp
add
add
xchg
fistpl
clc
repnz
nop
nop
jae
movsl
add
add
add
push
clc
repnz
nop
nop
jae
add
pop
loope
add
out
mov
push
mov
xchg
ret
out
add
cmpsb
add
add
fld1
clc
repnz
nop
nop
jae
add
verr
add
or
add
add
jge
and
add
mov
add
leave
add
dec
popf
push
push
mov
xchg
ret
in
and
xchg
add
imul
mov
leave
nop
jmp
aas
add
leave
xor
repnz
nop
nop
jae
add
add
push
push
mov
xchg
ret
add
imul
add
leave
ss
clc
repnz
nop
nop
jae
add
add
leave
movups
mov
xchg
ret
jne
imul
add
pushl
clc
repnz
nop
nop
jae
add
clc
add
add
rep
clc
repnz
nop
nop
jae
xchg
xchg
cmpsb
add
xor
repnz
nop
nop
jae
popa
fmuls
leave
inc
add
out
loopne
mov
clc
repnz
nop
nop
jae
add
dec
add
cmp
out
movsl
loope
add
movsb
add
add
xlat
add
clc
repnz
nop
nop
jae
add
es
movsl
pop
dec
fcmovnu
sbb
push
mov
xchg
ret
leave
add
lret
dec
push
clc
repnz
nop
nop
jae
and
add
jp
popf
dec
clc
repnz
nop
nop
jae
sldt
popf
cmpxchg
xor
add
clc
repnz
nop
nop
jae
and
add
cmpsl
add
clc
repnz
nop
nop
jae
add
add
add
add
add
aas
nop
push
mov
leave
nop
jmp
add
add
add
push
movzwl
clc
repnz
nop
nop
jae
movsl
hlt
popl
popl
add
jl
and
arpl
and
and
xlat
hlt
add
push
mov
xchg
ret
add
movb
add
xchg
ja
clc
repnz
nop
nop
jae
add
and
pop
add
add
mov
nop
push
mov
leave
nop
jmp
add
push
pop
popa
clc
repnz
nop
nop
jae
xchg
add
xchg
add
hlt
es
pop
push
mov
xchg
ret
cld
dec
xlat
pop
lea
out
pop
add
cld
nop
nop
jae
jge
xor
add
scas
arpl
repnz
nop
nop
jae
movb
and
xor
clc
repnz
nop
nop
jae
add
mov
add
jg
add
add
leave
nop
jmp
and
fidivs
nop
push
mov
leave
nop
jmp
add
add
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
nop
jae
add
add
and
cmp
cld
nop
nop
jae
xor
popf
and
mov
clc
repnz
nop
nop
jae
add
add
lods
add
repnz
jmp
nop
nop
jae
add
add
mov
add
mov
fld1
nop
push
mov
leave
nop
jmp
push
and
cld
cmp
nop
nop
jae
add
add
add
mov
cld
nop
nop
jae
add
fldl
mov
add
add
clc
repnz
nop
nop
jae
add
sbb
jg
clc
repnz
nop
nop
jae
push
inc
lea
push
mov
xchg
ret
add
add
add
into
add
mov
leave
nop
jmp
pop
inc
add
mov
clc
repnz
nop
nop
jae
add
jge
in
aas
pop
push
mov
xchg
ret
movsl
jp
pop
add
add
add
add
nop
jmp
add
enter
and
clc
repnz
nop
nop
jae
add
add
lea
pusha
jmp
incl
xlat
mov
inc
or
push
xchg
mov
xlat
fcoml
push
pushf
inc
push
clc
repnz
nop
nop
jae
imul
enter
es
hlt
out
and
sarb
repnz
nop
nop
jae
sbb
add
add
add
push
stos
push
mov
xchg
ret
xchg
xlat
enter
add
push
test
add
add
xor
clc
repnz
nop
nop
jae
add
add
add
push
push
mov
xchg
ret
push
pop
add
faddl
xchg
pop
movsl
mov
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
loope
add
clc
xor
loope
jb
add
push
add
cwtl
and
add
arpl
cld
nop
nop
jae
add
add
and
fwait
pop
clc
repnz
nop
nop
jae
dec
add
or
xor
cld
nop
nop
jae
add
pop
add
and
loopne
add
clc
repnz
nop
nop
jae
faddl
ror
dec
add
repnz
nop
nop
jae
add
cmp
mov
xchg
ret
pop
add
jp
add
in
mov
clc
repnz
nop
nop
jae
xor
add
add
sbb
push
push
mov
xchg
ret
add
hlt
add
jne
add
mov
nop
push
mov
leave
nop
jmp
add
leave
add
and
repnz
nop
nop
jae
add
add
popf
mov
repnz
add
pop
inc
add
popf
mov
imul
add
clc
clc
loopne
add
mov
push
mov
xchg
ret
add
add
mov
cld
nop
nop
jae
add
cld
add
aas
and
fistpl
push
mov
xchg
ret
and
xor
add
xor
cli
rorb
add
repnz
nop
nop
jae
add
add
clc
nop
push
mov
leave
nop
jmp
add
loope
add
mov
pusha
clc
repnz
nop
nop
jae
add
add
pop
and
popf
fimull
jne
clc
repnz
nop
nop
jae
loope
add
add
repnz
mov
mov
leave
nop
jmp
add
add
leave
push
clc
repnz
nop
nop
jae
mov
mov
pop
add
jmp
movb
add
and
or
jp
jge
jns
dec
sub
insl
imul
and
cmp
mov
cmpsl
mov
clc
repnz
nop
nop
jae
and
movsb
add
mov
test
clc
repnz
nop
nop
jae
and
fwait
clc
repnz
nop
nop
jae
add
add
add
add
and
nop
nop
jae
add
add
add
jecxz
push
mov
xchg
ret
jge
popf
add
push
add
mov
cs
clc
repnz
nop
nop
jae
imul
and
test
and
add
repnz
nop
nop
jae
xchg
cmpsb
add
cmpw
nop
push
mov
leave
nop
jmp
fadds
leave
add
aas
adc
nop
jmp
in
enter
adc
pop
sub
repnz
nop
nop
jae
out
add
add
xchg
call
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
add
add
push
fsubl
nop
push
mov
leave
nop
jmp
add
in
add
pfcmpge
push
mov
leave
nop
jmp
psraw
push
pop
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
in
mov
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
lea
add
fisubs
add
mov
add
add
nop
push
mov
leave
nop
jmp
add
and
add
hlt
push
pop
push
mov
xchg
ret
and
and
add
push
clc
repnz
nop
nop
jae
pop
xchg
add
sub
push
mov
xchg
ret
add
add
add
add
push
clc
repnz
nop
nop
jae
paddusb
add
push
add
push
push
mov
xchg
ret
push
cmpsb
add
into
imul
je
nop
push
mov
leave
nop
jmp
sub
add
and
add
add
push
fcomp
imul
jbe
clc
repnz
nop
nop
jae
fcompl
mov
add
jne
clc
repnz
nop
nop
jae
add
loope
dec
nop
push
mov
leave
nop
jmp
pop
xchg
faddl
mov
sub
add
dec
mov
nop
nop
jae
fadds
enter
xchg
sbb
nop
nop
jae
loope
imul
out
push
dec
xorl
clc
repnz
nop
nop
jae
lea
sub
cld
nop
nop
jae
in
mov
add
cmp
mov
xchg
ret
and
mov
jp
add
imul
add
mov
xchg
ret
add
pop
add
and
xor
repnz
nop
nop
jae
add
add
or
loopne
add
xchg
mov
add
rep
clc
repnz
nop
nop
jae
and
and
add
cmp
jns
dec
cmp
repnz
nop
nop
jae
pop
add
and
sbb
push
mov
xchg
ret
out
add
add
lods
fistpl
push
mov
xchg
ret
add
add
add
pusha
pushl
push
mov
xchg
ret
xlat
add
stc
pop
clc
repnz
nop
nop
jae
pop
add
cld
add
faddl
xlat
je
nop
push
mov
leave
nop
jmp
add
sbb
addb
cmp
ret
xlat
es
add
gs
add
fs
inc
add
add
add
pusha
inc
add
add
sub
imul
add
jl
rcrl
jmp
inc
add
add
fsubl
gs
stos
add
xchg
clc
repnz
nop
nop
jae
add
movsb
add
mov
pop
pushl
clc
repnz
nop
nop
jae
cmpsb
enter
and
repnz
nop
nop
jae
gs
faddl
jge
call
clc
repnz
nop
nop
jae
add
add
outsb
movsl
cld
clc
repnz
nop
nop
jae
add
add
add
insb
add
clc
repnz
nop
nop
jae
and
add
add
clc
repnz
nop
nop
jae
sub
add
add
loop
sub
push
mov
xchg
ret
scas
push
jp
xlat
push
add
ljmp
nop
jae
dec
push
add
pop
add
lea
push
mov
xchg
ret
push
sbb
add
add
add
add
clc
repnz
nop
nop
jae
add
movsl
add
add
push
mov
xchg
ret
add
add
hlt
add
push
and
clc
repnz
nop
nop
jae
add
stos
mov
clc
repnz
nop
nop
jae
verw
add
or
mov
leave
nop
jmp
and
add
add
add
pop
push
mov
xchg
ret
add
xor
add
add
into
int3
jbe
add
mov
andl
nop
nop
jae
add
fwait
nop
push
mov
leave
nop
jmp
gs
enter
movsb
add
jnp
sar
cld
nop
nop
jae
lea
add
pop
nop
push
mov
leave
nop
jmp
enter
enter
inc
xor
add
nop
jmp
pop
add
hlt
mov
clc
repnz
nop
nop
jae
cmp
add
fucom
in
mov
add
shlb
add
sbb
nop
nop
jae
hlt
popf
add
imul
add
mov
push
mov
xchg
ret
add
into
and
mov
add
repnz
repnz
nop
nop
jae
add
popf
xor
add
push
cld
nop
nop
jae
cld
in
pop
add
gs
ljmp
mov
xchg
ret
sub
sbb
add
rep
clc
repnz
nop
nop
jae
xchg
xchg
add
sub
add
fld1
nop
push
mov
leave
nop
jmp
and
add
add
xor
jmp
clc
repnz
nop
nop
jae
sbb
add
out
call
nop
jmp
sub
clc
add
movswl
clc
repnz
nop
nop
jae
add
add
cmp
pause
push
mov
leave
nop
jmp
jge
add
add
add
push
add
sub
cld
nop
nop
jae
add
add
mov
sub
cld
nop
nop
jae
aas
add
and
popa
aaa
dec
nop
push
mov
leave
nop
jmp
add
add
add
or
jno
loopne
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
add
or
pop
add
add
repnz
nop
nop
jae
add
add
add
push
clc
repnz
nop
nop
jae
fadds
add
enter
mov
clc
repnz
nop
nop
jae
cmpsb
add
popf
in
jne
clc
repnz
nop
nop
jae
and
enter
add
add
push
clc
repnz
nop
nop
jae
popa
add
add
leave
or
lahf
lea
nop
push
mov
leave
nop
jmp
add
enter
inc
cmpsl
imul
clc
repnz
nop
nop
jae
lea
add
add
nop
push
mov
leave
nop
jmp
add
mov
ret
adc
repnz
nop
nop
jae
add
pop
add
rcll
cld
nop
nop
jae
add
xchg
add
loop
push
mov
xchg
ret
add
add
test
add
clc
repnz
nop
nop
jae
sub
jne
movzwl
clc
repnz
nop
nop
jae
add
cld
cmpsb
jne
inc
mov
push
mov
xchg
ret
push
add
cmp
pop
int
enter
nop
nop
jae
cmp
leave
add
add
xor
repnz
nop
nop
jae
movsb
add
and
out
xlat
in
xlat
je
clc
repnz
nop
nop
jae
xor
repnz
xchg
bnd
xor
push
mov
xchg
ret
imul
pop
xlat
add
std
mov
clc
repnz
nop
nop
jae
add
add
lahf
inc
clc
repnz
nop
nop
jae
add
add
add
add
jge
clc
repnz
nop
nop
jae
add
cmp
push
clc
repnz
nop
nop
jae
add
xlat
add
and
add
nop
push
mov
leave
nop
jmp
sub
pop
add
add
add
push
and
nop
jmp
gs
add
sbb
and
add
xor
mov
add
add
gs
movsb
icebp
add
push
mov
xchg
ret
add
cld
repz
clc
repnz
nop
nop
jae
add
jge
xlat
add
or
jae
fs
push
mov
leave
nop
jmp
cmp
movsb
push
xchg
mov
push
nop
push
mov
leave
nop
jmp
in
add
enter
rorl
repnz
nop
nop
jae
add
pop
out
add
scas
jle
mov
clc
repnz
nop
nop
jae
add
popa
xchg
mov
nop
push
mov
leave
nop
jmp
add
add
xchg
push
nop
push
mov
leave
nop
jmp
popa
or
add
add
incl
cld
nop
nop
jae
add
inc
popf
add
add
clc
repnz
nop
nop
jae
popa
and
jmp
leave
and
gs
add
or
gs
add
cld
xor
add
add
cmp
movzwl
clc
repnz
nop
nop
jae
cmpsb
gs
fdivrl
mov
clc
repnz
nop
nop
jae
add
add
add
sub
add
fistpl
push
mov
xchg
ret
pop
add
pop
xor
into
add
push
or
add
add
mov
jmp
add
add
add
add
push
mov
leave
nop
jmp
add
mov
clc
push
mov
xchg
ret
cmpsb
jge
jp
add
loop
lret
je
clc
repnz
nop
nop
jae
add
pop
mov
clc
repnz
nop
nop
jae
fsubrs
inc
push
cmp
pop
mov
xchg
ret
popl
or
add
and
repnz
nop
nop
jae
add
jne
sub
add
mov
call
nop
jae
xchg
add
mov
cmp
nop
push
mov
leave
nop
jmp
cmpsb
add
dec
cmp
add
mov
repnz
nop
nop
jae
add
add
xchg
inc
add
add
add
xchg
cmpsb
pop
add
add
nop
push
mov
leave
nop
jmp
or
add
repnz
nop
nop
jae
pop
fsubs
add
aam
insb
sahf
rorl
push
and
jne
enter
gs
xchg
add
clc
repnz
nop
nop
jae
mov
leave
movsb
add
or
add
jp
jbe
clc
repnz
nop
nop
jae
dec
add
sbbl
cld
nop
nop
jae
aas
cmp
add
add
adc
nop
push
mov
leave
nop
jmp
and
add
add
nop
nop
jae
push
push
out
add
xlat
mov
clc
repnz
nop
nop
jae
xchg
add
add
nop
nop
jae
xlat
jge
add
add
push
dec
add
push
mov
xchg
ret
add
push
add
mov
jge
inc
add
add
pop
add
add
pop
orl
inc
add
add
add
loope
pushf
ds
sub
push
mov
xchg
ret
add
sub
and
add
push
add
add
repnz
nop
nop
jae
xchg
add
jbe
mov
clc
repnz
nop
nop
jae
cld
add
cmc
fistpl
clc
repnz
nop
nop
jae
add
movb
add
or
repnz
nop
nop
jae
add
enter
pop
add
clc
repnz
nop
nop
jae
add
in
gs
mov
popa
xor
clc
repnz
nop
nop
jae
add
dec
test
add
clc
repnz
nop
nop
jae
xchg
and
enter
add
mov
nop
push
mov
leave
nop
jmp
add
clc
pop
add
dec
lret
add
test
add
ret
clc
repnz
nop
nop
jae
add
into
add
dec
push
aam
mov
clc
repnz
nop
nop
jae
sbb
add
loop
push
mov
xchg
ret
jp
clc
add
enter
rorl
repnz
nop
nop
jae
add
push
popl
clc
repnz
nop
nop
jae
movsl
add
add
clc
repnz
nop
nop
jae
cmpsb
add
add
mov
clc
repnz
nop
nop
jae
cmpsb
pop
in
add
add
mov
clc
repnz
nop
nop
jae
add
and
add
mov
xchg
ret
add
add
add
clc
repnz
nop
nop
jae
add
and
enter
push
mov
xchg
ret
add
add
add
repz
repnz
nop
nop
jae
xchg
pop
dec
add
add
in
add
adc
repnz
nop
nop
jae
add
add
add
mov
clc
repnz
nop
nop
jae
xchg
push
and
push
iret
pop
push
mov
xchg
ret
and
mov
clc
enter
rep
clc
repnz
nop
nop
jae
hlt
and
mov
enter
push
mov
xchg
ret
add
add
cmp
add
pop
add
add
enter
cmpl
nop
push
mov
leave
nop
jmp
push
add
add
push
mov
xchg
ret
add
push
xchg
add
xchg
push
add
mov
pop
add
clc
repnz
nop
nop
jae
lea
and
add
test
add
movb
cld
nop
nop
jae
add
mov
add
dec
push
nop
push
mov
leave
nop
jmp
add
and
aas
fldl
lock
repnz
nop
nop
jae
loope
add
add
stc
add
clc
repnz
nop
nop
jae
and
repnz
nop
nop
jae
cld
sub
pop
faddl
add
push
nop
push
mov
leave
nop
jmp
pop
and
add
jns
sar
repnz
nop
nop
jae
dec
add
lea
add
mov
clc
repnz
nop
nop
jae
leave
popa
add
repnz
nop
nop
jae
enter
jge
movsb
add
leave
sub
repnz
nop
nop
jae
movsb
add
jl
clc
repnz
nop
nop
jae
xlat
mov
push
rep
clc
repnz
nop
nop
jae
and
clc
add
add
ja
push
mov
xchg
ret
xchg
add
hlt
mov
add
incl
pop
and
es
movsl
add
xchg
idivb
clc
repnz
nop
nop
jae
pop
add
pop
and
clc
repnz
nop
nop
jae
cmpsb
out
add
sbb
add
loopne
mov
xchg
ret
pop
sub
xchg
pop
add
lea
cld
nop
nop
jae
movsb
add
cmp
addr16
push
mov
xchg
ret
sbb
add
add
nop
push
mov
leave
nop
jmp
xor
add
dec
add
xor
add
push
sbb
clc
repnz
nop
nop
jae
loope
cmp
add
cld
nop
nop
jae
add
add
add
jge
into
insb
dec
push
nop
push
mov
leave
nop
jmp
cmp
pop
add
push
clc
repnz
nop
nop
jae
jne
cmp
add
add
sub
add
nop
jmp
cmpsb
xchg
and
jbe
push
mov
xchg
ret
jp
add
xchg
push
add
clc
repnz
nop
nop
jae
and
pop
jle,pt
dec
subl
clc
repnz
nop
nop
jae
lea
add
jmp
hlt
call
nop
jmp
pop
add
clc
hlt
adc
repnz
nop
nop
jae
add
add
add
wbinvd
add
clc
repnz
nop
nop
jae
jne
or
xchg
lods
add
jnp
clc
repnz
nop
nop
jae
add
mov
sbb
cmp
mov
repnz
nop
nop
jae
pop
pop
add
add
sti
fld1
clc
repnz
nop
nop
jae
add
lea
or
mov
pop
nop
push
mov
leave
nop
jmp
sub
add
xchg
movsb
aas
xchg
add
push
clc
repnz
nop
nop
jae
aas
sub
jge
push
in
mov
mov
pop
jl
add
cmpsb
xor
add
add
sbb
fimull
xor
push
mov
xchg
ret
cmpsb
movsl
dec
and
add
add
xchg
sti
clc
repnz
nop
nop
jae
add
xchg
mov
nop
push
mov
leave
nop
jmp
add
mov
add
add
add
push
mov
xchg
ret
and
into
jp
pop
clc
repnz
nop
nop
jae
add
inc
into
add
lea
clc
repnz
nop
nop
jae
enter
add
sub
add
ja
add
push
add
add
mov
push
clc
repnz
nop
nop
jae
add
jp
add
fwait
push
mov
xchg
ret
popl
add
movsb
add
scas
add
add
gs
nop
push
mov
leave
nop
jmp
add
and
and
mov
iret
or
inc
add
pop
add
in
add
test
jg
add
add
add
push
add
cmp
nop
push
mov
leave
nop
jmp
add
add
add
add
rcll
repnz
nop
nop
jae
push
add
into
add
test
add
mov
clc
repnz
nop
nop
jae
add
add
pop
jle
xchg
or
nop
nop
jae
dec
add
add
mov
iret
mov
push
mov
xchg
ret
add
add
mov
sbb
cmpl
cld
nop
nop
jae
imul
sub
add
fstpl
repnz
nop
nop
jae
add
xchg
xchg
push
mov
xchg
ret
xlat
add
sbb
clc
repnz
nop
nop
jae
mov
add
popa
xchg
popf
fdivrl
sar
cld
nop
nop
jae
into
add
and
add
and
imul
cld
nop
nop
jae
cld
add
movzwl
clc
repnz
nop
nop
jae
gs
add
movsb
pop
adc
mov
adc
repnz
nop
nop
jae
mov
test
add
repnz
nop
nop
jae
add
add
mov
leave
nop
jmp
add
and
jne
arpl
sbb
clc
repnz
nop
nop
jae
cmp
add
mov
nop
push
mov
leave
nop
jmp
fnsave
add
add
clc
repnz
nop
nop
jae
add
add
dec
fnsave
mov
clc
repnz
nop
nop
jae
movb
add
adc
mov
xchg
ret
add
add
and
push
add
add
dec
and
clc
repnz
nop
nop
jae
add
stos
add
jg
ret
clc
repnz
nop
nop
jae
add
add
add
add
shrb
repnz
nop
nop
jae
add
je
clc
repnz
nop
nop
jae
movsb
add
add
add
clc
repnz
nop
nop
jae
sub
add
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
nop
jae
jge
add
add
xchg
add
mov
clc
repnz
nop
nop
jae
pop
add
mov
sub
clc
repnz
nop
nop
jae
add
aas
add
jmp
add
add
push
add
add
hlt
fdiv
push
push
mov
xchg
ret
gs
jp
and
jge
push
clc
repnz
nop
nop
jae
leave
lea
cld
inc
fstpl
push
mov
leave
nop
jmp
mov
push
cmpsb
or
add
call
clc
repnz
nop
nop
jae
fadd
xlat
clc
add
jle
inc
add
add
add
clc
popf
add
rep
nop
push
mov
leave
nop
jmp
add
gs
mov
nop
push
mov
leave
nop
jmp
add
leave
add
mov
xchg
ret
add
popa
es
leave
cmp
nop
push
mov
leave
nop
jmp
add
cld
add
and
push
mov
leave
nop
jmp
add
imul
adc
jge
clc
repnz
nop
nop
jae
gs
inc
inc
add
hlt
mov
clc
repnz
nop
nop
jae
add
out
and
add
add
addb
shrd
popl
xchg
ret
add
mov
mov
add
test
nop
push
mov
leave
nop
jmp
push
add
add
add
mov
leave
nop
jmp
jne
sub
movsb
jge
add
nop
nop
jae
push
add
mov
sbb
add
inc
call
inc
add
add
jne
cmpsb
fadd
pop
clc
repnz
nop
nop
jae
xlat
movb
xchg
jbe
adc
icebp
add
push
mov
xchg
ret
add
add
jge
add
arpl
xchg
ret
add
add
pop
lret
add
clc
repnz
nop
nop
jae
pop
scas
add
inc
mov
clc
repnz
nop
nop
jae
inc
and
push
mov
xchg
ret
xchg
and
clc
pop
add
fldl
notl
nop
jmp
and
push
push
mov
xchg
ret
add
pop
xchg
add
fld1
clc
repnz
nop
nop
jae
add
add
cld
gs
add
push
cld
clc
repnz
nop
nop
jae
scas
imul
scas
add
sub
add
push
clc
repnz
nop
nop
jae
add
into
xlat
test
push
mov
leave
nop
jmp
loope
movsb
add
inc
fisttpl
nop
nop
jae
add
add
pop
add
clc
repnz
nop
nop
jae
gs
add
or
nop
nop
jae
loope
imul
add
mov
push
nop
push
mov
leave
nop
jmp
xchg
add
dec
and
and
pop
cmpsl
call
clc
repnz
nop
nop
jae
add
aas
enter
repnz
nop
nop
jae
add
movsl
sbb
add
test
cld
nop
nop
jae
and
xcrypt-ecb
cmpsl
mov
clc
repnz
nop
nop
jae
cld
cmp
add
xchg
cmp
add
clc
repnz
nop
nop
jae
add
pop
add
add
inc
lock
repnz
nop
nop
jae
popf
mov
imul
dec
mov
mov
adc
repnz
nop
nop
jae
add
add
lods
add
push
mov
xchg
ret
add
and
fadds
clc
cmc
testl
nop
push
mov
leave
nop
jmp
add
gs
add
nop
push
mov
leave
nop
jmp
add
out
clc
repnz
nop
nop
jae
mov
add
add
lea
clc
repnz
nop
nop
jae
and
add
ret
mov
clc
repnz
nop
nop
jae
and
add
xlat
add
aam
jmp
add
add
popa
add
and
xlat
enter
mov
push
mov
xchg
ret
or
xchg
and
jmp
add
add
add
add
pop
fsts
push
mov
leave
nop
jmp
add
and
xchg
clc
xor
push
incl
popf
out
xchg
sub
add
sub
xchg
faddl
insl
push
clc
repnz
nop
nop
jae
popa
popl
pop
xlat
enter
add
nop
push
mov
leave
nop
jmp
add
add
add
add
nop
push
mov
leave
nop
jmp
pop
cmpsb
add
add
xor
test
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
pop
sub
cmpsb
and
xor
nop
push
mov
leave
nop
jmp
pop
popa
faddl
mov
add
push
clc
repnz
nop
nop
jae
pop
or
popa
mov
clc
repnz
nop
nop
jae
and
and
add
clc
repnz
nop
nop
jae
frstor
leave
add
loopne
add
push
push
clc
repnz
nop
nop
jae
mov
add
add
and
repnz
nop
nop
jae
movsb
pop
pop
xchg
pop
mov
add
push
mov
xchg
ret
xchg
add
pand
clc
repnz
nop
nop
jae
xchg
and
sub
clc
repnz
nop
nop
jae
or
and
add
add
repnz
nop
nop
jae
add
gs
nop
push
mov
leave
nop
jmp
add
add
clc
sbb
nop
nop
jae
add
add
repnz
nop
nop
jae
fadds
movsl
cmpsl
cld
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
nop
jae
movsl
add
add
push
mov
xchg
ret
movsl
add
add
cld
dec
fwait
clc
repnz
nop
nop
jae
pop
add
add
clc
repnz
nop
nop
jae
add
add
add
enter
inc
loope
clc
repnz
nop
nop
jae
out
add
pop
push
mov
nop
push
mov
leave
nop
jmp
add
and
pop
clc
repnz
nop
nop
jae
jp
leave
jne
add
add
cmc
je
clc
repnz
nop
nop
jae
push
setnp
cld
nop
nop
jae
cmp
add
loope
mov
clc
repnz
nop
nop
jae
add
inc
add
add
push
lsl
nop
push
mov
leave
nop
jmp
push
push
add
jp
inc
pop
push
mov
xchg
ret
sub
add
add
movzwl
clc
repnz
nop
nop
jae
add
push
clc
repnz
nop
nop
jae
add
in
add
jns
push
mov
xchg
ret
pmulhw
popf
add
add
push
lods
push
mov
xchg
ret
add
cmpsb
leave
inc
hlt
cmp
mov
call
cld
nop
nop
jae
enter
ds
jae
clc
repnz
nop
nop
jae
cld
clc
add
and
add
mov
sbb
push
mov
xchg
ret
add
pop
add
out
clc
clc
repnz
nop
nop
jae
or
add
in
clc
repnz
nop
nop
jae
verw
add
jae
push
mov
leave
nop
jmp
imul
cltd
push
push
mov
xchg
ret
clc
clc
add
add
mov
inc
and
clc
repnz
nop
nop
jae
cmpsb
add
and
add
nop
jae
add
add
add
imul
shr
clc
repnz
nop
nop
jae
cmpsb
pop
add
jne
arpl
nop
push
mov
leave
nop
jmp
add
sub
test
sub
incl
add
popf
xchg
add
add
add
add
clc
repnz
nop
nop
jae
xlat
aas
enter
add
fld1
clc
repnz
nop
nop
jae
add
add
add
out
orl
ret
clc
repnz
nop
nop
jae
add
dec
call
nop
push
mov
leave
nop
jmp
xor
inc
mov
xchg
clc
repnz
nop
nop
jae
into
add
add
mov
repz
clc
repnz
nop
nop
jae
add
sbb
sub
clc
repnz
nop
nop
jae
add
add
xlat
popl
and
clc
repnz
nop
nop
jae
cld
add
push
push
hlt
add
push
clc
repnz
nop
nop
jae
push
and
add
test
add
leave
clc
repnz
nop
nop
jae
mov
es
popf
or
fdiv
aaa
mov
clc
repnz
nop
nop
jae
fstl
cmpsb
add
sbb
clc
repnz
nop
nop
jae
and
push
cmpsb
cmp
add
push
mov
xchg
ret
add
add
add
push
add
add
in
leave
nop
jmp
add
sub
add
add
lahf
mov
clc
repnz
nop
nop
jae
leave
popf
out
jne
cmp
push
mov
xchg
ret
cmpsb
add
movsl
popa
mov
add
cmpsb
add
mov
cld
nop
nop
jae
and
add
push
push
enter
push
mov
leave
nop
jmp
xchg
and
sub
repnz
nop
nop
jae
add
enter
mov
test
repnz
nop
nop
jae
fldl
add
pop
ljmp
push
mov
xchg
ret
xchg
aas
and
scas
movsb
ljmp
cld
nop
nop
jae
add
fisttpl
cld
nop
nop
jae
loope
add
fsub
mov
loop
nop
push
mov
leave
nop
jmp
xchg
sbb
mov
repnz
nop
nop
jae
add
popa
add
mov
add
imul
add
inc
push
inc
add
inc
and
clc
repnz
nop
nop
jae
sub
or
seta
repnz
nop
nop
jae
add
movsl
add
fsubr
jmp
loop
push
mov
xchg
ret
xchg
str
add
jle
and
nop
nop
jae
add
in
add
clc
repnz
nop
nop
jae
cmpsb
add
mov
push
mov
xchg
ret
leave
leave
add
add
add
loop
push
nop
push
mov
leave
nop
jmp
cmpsb
cld
add
add
xchg
add
sub
add
xchg
push
mov
xchg
ret
add
add
pop
hlt
arpl
cld
nop
nop
jae
add
add
add
add
fistps
mov
xchg
ret
add
and
cld
add
cld
nop
nop
jae
movsl
add
mov
push
mov
clc
repnz
nop
nop
jae
add
leave
add
mov
xchg
ret
add
add
xlat
enter
dec
add
clc
repnz
nop
nop
jae
add
and
add
movsb
add
aam
add
sbb
cmpl
jae
add
add
icebp
insb
inc
add
and
frstor
popl
out
popa
clc
repnz
nop
nop
jae
add
popl
add
add
dec
jne
clc
repnz
nop
nop
jae
cmp
fcoml
ret
sbb
leave
nop
jmp
sbb
scas
add
or
clc
repnz
nop
nop
jae
add
xlat
add
cmp
sbb
repnz
nop
nop
jae
pop
add
add
add
add
test
sar
clc
repnz
nop
nop
jae
clc
movsl
add
ret
test
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
popl
out
clc
add
addb
sub
cmp
clc
repnz
nop
nop
jae
and
add
pop
fcomps
xchg
xchg
ret
and
dec
xchg
xchg
add
jno
push
mov
xchg
ret
into
xchg
push
mov
and
cltd
mov
clc
repnz
nop
nop
jae
add
jae
add
clc
repnz
nop
nop
jae
add
push
mov
xchg
ret
add
in
pop
fdivr
add
push
clc
repnz
nop
nop
jae
add
add
scas
add
imul
push
mov
xchg
ret
add
into
hlt
add
sbb
add
mov
nop
nop
jae
enter
add
add
add
mov
mov
xchg
ret
inc
xlat
add
jge
cmpsb
add
inc
push
nop
push
mov
leave
nop
jmp
add
add
pop
add
push
add
outsl
add
clc
repnz
nop
nop
jae
add
add
shl
movsb
push
mov
xchg
ret
and
dec
and
adc
jae
add
add
add
enter
jnp
into
add
cld
nop
nop
jae
add
test
sar
clc
repnz
nop
nop
jae
xlat
fldl
jnp
test
clc
repnz
nop
nop
jae
jge
add
mov
xchg
ret
pop
xchg
add
xchg
push
mov
xchg
ret
add
add
test
add
clc
repnz
nop
nop
jae
add
add
add
mov
add
mov
shr
nop
push
mov
leave
nop
jmp
add
pushf
mov
cld
nop
nop
jae
xlat
gs
add
dec
push
mov
xchg
ret
add
add
fcoml
push
mov
clc
repnz
nop
nop
jae
add
add
add
sub
add
add
orl
enter
nop
nop
jae
enter
add
cld
nop
nop
jae
add
and
add
and
enter
nop
nop
jae
jne
add
add
xchg
jo
push
clc
repnz
nop
nop
jae
lea
add
fldl
add
add
nop
jmp
jge
aas
add
add
clc
repnz
nop
nop
jae
enter
add
add
imul
pop
pop
inc
add
into
faddl
add
push
nop
push
mov
leave
nop
jmp
sbb
cmpsb
and
mov
add
call
cld
nop
nop
jae
add
leave
add
enter
xchg
clc
repnz
nop
nop
jae
dec
add
add
cmpsb
popa
xchg
sbb
nop
push
mov
leave
nop
jmp
fldl
add
add
adc
in
leave
nop
jmp
pop
add
xchg
lea
dec
dec
mov
nop
push
mov
leave
nop
jmp
gs
movsl
aas
xchg
jns
push
mov
xchg
ret
movb
ffree
and
mov
leave
clc
repnz
nop
nop
jae
aas
sub
xchg
out
js
add
nop
push
mov
leave
nop
jmp
fldl
leave
add
sti
xor
clc
repnz
nop
nop
jae
add
add
pop
push
mov
xchg
ret
and
pop
and
add
adc
add
xor
popf
add
into
imul
cmpl
xchg
ret
add
pop
clc
add
roll
push
mov
leave
nop
jmp
add
add
add
xchg
jne
clc
repnz
nop
nop
jae
enter
mov
clc
repnz
nop
nop
jae
cmp
or
fld1
push
mov
xchg
ret
fldl
mov
icebp
popl
clc
repnz
nop
nop
jae
mov
add
pop
clc
repnz
nop
nop
jae
or
into
add
gs
ret
xor
clc
repnz
nop
nop
jae
add
mov
cmpl
repnz
nop
nop
jae
pop
scas
add
jge
add
nop
push
mov
leave
nop
jmp
pop
add
push
repz
nop
push
mov
leave
nop
jmp
mov
add
add
jbe
in
mov
clc
repnz
nop
nop
jae
add
add
enter
add
shl
clc
repnz
nop
nop
jae
add
imul
or
add
not
push
mov
xchg
ret
add
push
mov
and
clc
repnz
nop
nop
jae
in
mov
fdivs
add
movsb
clc
repnz
nop
nop
jae
add
add
in
or
add
xchg
clc
repnz
nop
nop
jae
add
setb
jp
pop
movswl
clc
repnz
nop
nop
jae
cld
add
in
sub
add
mov
xchg
ret
add
pop
add
fldl
adc
loopne
jmp
hlt
and
add
pop
inc
pop
mov
add
nop
push
mov
leave
nop
jmp
xchg
popa
nop
push
mov
leave
nop
jmp
mov
add
das
call
clc
repnz
nop
nop
jae
and
leave
popa
sub
icebp
nop
push
mov
leave
nop
jmp
push
pop
pop
push
add
push
mov
xchg
ret
clc
xlat
pop
add
jo
nop
push
mov
leave
nop
jmp
add
jp
enter
call
clc
repnz
nop
nop
jae
xchg
jne
add
mov
popl
xchg
ret
add
add
add
add
push
jnp
inc
adc
mov
xchg
ret
out
add
add
hlt
lods
add
pop
xor
clc
repnz
nop
nop
jae
push
add
mov
pop
cmp
repnz
nop
nop
jae
add
enter
xchg
add
push
mov
xchg
ret
add
add
pop
adcl
jns
add
add
pop
pop
add
mov
repnz
nop
nop
jae
clc
add
jge
add
add
stc
not
push
mov
xchg
ret
mov
add
jge
cld
sbb
fld1
push
mov
xchg
ret
add
add
add
push
mov
clc
repnz
nop
nop
jae
push
add
or
push
mov
leave
nop
jmp
and
add
jp
sbb
dec
addb
push
pusha
nop
push
mov
leave
nop
jmp
cmpsb
add
xchg
popa
add
aam
clc
repnz
nop
nop
jae
add
aas
call
clc
repnz
nop
nop
jae
in
add
jae
lods
xchg
inc
add
into
add
cmpsb
add
mov
insb
inc
add
popa
into
xchg
popf
fstp
hlt
add
mov
clc
repnz
nop
nop
jae
pop
out
add
pop
pop
push
mov
xchg
ret
add
xchg
add
sbb
cmc
pop
clc
repnz
nop
nop
jae
imul
scas
loope
add
or
repnz
nop
nop
jae
add
or
mov
push
clc
repnz
nop
nop
jae
pop
add
enter
in
mov
xchg
ret
add
xchg
imul
clc
repnz
nop
nop
jae
add
scas
cmp
add
popa
and
add
mov
clc
repnz
nop
nop
jae
add
push
jge
jo
adc
pop
inc
add
out
enter
aas
pop
cwtl
mov
clc
repnz
nop
nop
jae
dec
add
add
pop
stc
mov
clc
repnz
nop
nop
jae
add
add
add
xor
dec
nop
push
mov
leave
nop
jmp
and
add
add
add
ret
ja
clc
repnz
nop
nop
jae
add
add
xor
clc
repnz
nop
nop
jae
clc
add
add
push
push
add
inc
jne
clc
repnz
nop
nop
jae
leave
push
push
cmp
jmp
incl
jp
pop
popa
add
mov
ss
repnz
nop
nop
jae
mov
add
mov
mov
clc
repnz
nop
nop
jae
add
es
add
and
add
add
nop
push
mov
leave
nop
jmp
movsl
pop
add
add
repnz
nop
nop
jae
movsb
add
add
imulb
push
mov
movb
push
xchg
dec
add
jb
xorl
clc
mov
call
lock
jne
xchg
mov
pop
sbb
add
lds
pop
mov
add
adc
inc
pushf
push
sbb
data16
sub
sbb
push
or
add
sbb
fisubrl
add
inc
insb
sub
addb
mov
popf
cmp
sbb
add
je
test
add
xchg
add
inc
push
add
lods
add
jnp
out
pop
dec
mov
cmp
add
clc
insl
mov
add
mov
pop
insl
ja
add
loop
cld
mov
adc
jbe
jnp
inc
lret
add
sti
mov
pop
addr16
fiaddl
mov
mov
dec
push
add
lcall
popf
sarl
cmp
inc
push
and
push
sarb
xor
push
jae
std
mov
mov
movsl
shlb
lret
xchg
add
mov
leave
sbb
add
add
cmp
mov
mov
jge
add
cmp
loop
cmp
sbb
lcall
cmp
addb
cmp
mov
mov
ds
cli
test
add
adc
sub
add
add
cli
stos
add
jne
loope
add
mov
lock
add
wbinvd
cwtl
or
test
add
mov
add
stos
add
mul
call
sbbl
jbe
add
xchg
fldenv
jne
outsl
push
adc
push
pushw
add
jl
cmp
out
in
lahf
jnp
mov
out
insl
lock
je
add
mov
add
sub
mov
add
add
rorl
xor
add
test
ja
add
add
xor
mov
dec
ret
xor
movsb
add
hlt
pop
mov
add
sub
add
lcall
data16
push
test
add
add
xchg
mov
add
out
push
add
sub
add
imul
add
mov
add
fs
and
add
enter
add
add
les
adc
jp
add
mov
gs
leave
lcall
dec
ljmp
dec
mov
jne
cwtl
pushf
pop
inc
mov
adc
fildl
add
xlat
cmp
addb
mov
jbe
mov
cmpsl
mov
sbb
or
enter
cmp
pop
outsl
adc
in
inc
pusha
push
mov
and
or
dec
imul
add
jnp
jb
mov
and
add
into
pushf
add
enter
add
repz
lahf
lods
add
pop
loop
add
xor
or
add
mov
mov
mul
test
add
mov
add
movsl
das
ds
add
pop
cmpsb
add
pop
or
fisubl
add
fdivs
push
cmp
sti
in
ja
enter
js
repz
shll
push
inc
mov
aad
cld
aam
int3
add
add
pushl
add
clc
mov
and
cmp
mov
add
inc
add
mov
lea
add
and
add
add
xchg
pop
stos
add
addb
sub
add
inc
lret
lret
sub
push
nop
ljmp
add
adc
outsb
ds
add
add
int3
in
insb
movsb
add
mov
sub
add
add
das
iret
push
cltd
xchg
daa
mov
add
loop
leave
lret
inc
call
enter
dec
imul
sub
add
jecxz
aad
or
lock
sub
add
mov
add
fildl
add
mov
gs
jge
cli
mov
add
add
add
outsl
dec
adc
add
in
jmp
mov
fs
in
das
cmp
add
je
filds
addb
xor
sbb
enter
scas
add
mov
add
imul
sub
add
insl
outsl
add
std
cmp
leave
mov
add
stc
sub
add
dec
xor
add
add
cmp
xchg
jbe,pt
rolb
add
jmp
setns
add
in
push
and
lods
add
xchg
add
add
ud0
or
outsb
popa
xchg
lret
add
out
out
adc
in
je
and
jl
push
jns
lahf
cmp
add
js
mov
fnstenv
rorb
dec
or
add
or
add
jmp
jmp
cmp
into
in
hlt
test
add
loopne
test
add
out
sbb
add
sub
ficoml
add
cmpl
add
movsb
add
in
stos
add
and
jno
in
in
adc
jbe
push
stc
insl
xchg
pop
inc
lock
add
add
add
jae
jp,pt
mov
mov
lcall
add
add
std
jp
mov
jbe
mov
xor
sub
add
add
fstpt
cmpsb
add
pop
lcall
jo
mov
add
mov
and
add
shr
out
mov
mov
andl
push
loopne
mov
add
add
cmpsl
out
mov
ds
iret
negl
inc
cmp
bound
lds
addl
sub
add
incb
xor
mov
leave
cmp
and
jnp
inc
rorl
add
lcall
sbb
add
je
add
jae
shlb
sub
add
mov
pushf
adc
movb
cmp
jae
std
fimuls
add
add
add
ja
push
scas
xchg
sbb
add
insl
xchg
dec
cwtl
jl
popf
int
add
sub
add
mov
add
mov
add
cmpsb
add
sbb
add
fdivrs
rep
push
add
pusha
movsb
add
arpl
stc
sti
pop
mov
adc
add
lret
push
ds
andl
jp
pop
lcall
add
add
xchg
mov
pop
outsl
out
frstor
add
or
leave
inc
or
add
inc
dec
jb
add
fldcw
add
loop
add
fisttpll
cmp
div
loop
sub
inc
test
dec
fsubrl
add
cmc
fsubr
maskmovq
sub
jmp
sbb
bound
bt
dec
lds
lahf
xchg
repnz
add
cmpsb
add
ss
clc
pop
ret
sbb
add
dec
dec
addb
loopne
jge
add
mov
lret
push
fscale
lahf
jmp
scas
mov
jo
add
xchg
in
cwtl
hlt
mov
loop
aad
or
add
add
push
lcall
jne
add
pop
lahf
aam
insl
stc
popf
pop
addr16
add
mov
loope
xchg
xchg
popf
sbb
enter
add
loop
add
sti
adc
loope
int3
ret
xchg
sub
add
stc
inc
inc
int
sti
movsb
add
repnz
dec
mov
add
pop
gs
add
in
add
add
jnp
ja
sbb
dec
cld
ja
add
adc
add
scas
ficoms
ljmp
das
lods
add
jno
push
sarb
outsb
xchg
add
xchg
lods
add
aaa
cmpsl
clc
call
mov
fimull
add
pop
loopne
mov
jnp
ret
int3
push
scas
inc
dec
xchg
add
mov
push
insl
shlb
add
add
add
call
int
movsb
add
and
maskmovq
negl
push
sti
in
pop
xchg
sti
jmp
jae
add
jecxz
loop
xchg
or
repnz
cwtl
push
shrl
mov
test
aaa
push
neg
jge
mov
xchg
in
add
add
adc
lods
add
xlat
loop
or
push
sbb
xchg
sbb
outsb
ret
jg
mov
pop
sub
add
cmc
cwtl
cmp
and
add
jge
jmp
in
in
push
lret
popa
sbb
repz
add
in
sbb
inc
sti
into
and
add
sbb
lea
push
movsb
add
mov
testb
inc
push
fdivrs
pop
push
adc
add
clc
lret
test
xchg
dec
loope
addb
adc
js
and
pop
mov
add
add
sbb
jp
popa
cmp
xor
test
add
push
add
setb
mov
xchg
in
scas
add
pop
cmpsl
lahf
loope
add
pop
mov
sub
movsl
cli
loope
add
mov
pop
shrl
mov
orl
and
add
out
outsl
lret
pop
cwtl
push
add
fstpl
pop
mov
add
push
add
and
add
jg
push
add
mov
jle
add
sub
add
test
add
lret
and
add
mov
fs
in
dec
mov
jg
or
add
pop
mov
mov
sahf
push
mov
add
and
add
cmp
idivl
test
add
scas
outsb
repz
push
scas
add
sldt
add
xlat
pop
fbld
cld
test
mov
stos
cmp
test
add
xchg
dec
dec
sbb
jg
jb
gs
add
lods
mov
mov
jp
xor
or
mov
loop
aam
cmp
rcrb
jg
sahf
cmp
dec
addl
and
add
je
cli
rclb
push
and
add
mov
adc
in
testb
mov
xchg
pop
mov
scas
cmpsl
adc
mov
xor
popa
push
add
and
imul
pop
pop
xchg
add
dec
mov
nop
and
jl
lret
xchg
dec
jb
clc
lods
aam
call
mov
pop
add
adc
add
xor
mov
add
ficompl
xor
dec
mov
test
push
add
test
add
aaa
and
int3
loope
pop
addb
movsb
add
das
push
in
mov
mov
add
or
dec
in
iret
sub
inc
arpl
das
stc
pusha
shr
lret
inc
je
jo
fwait
mov
mov
or
add
add
add
xor
pop
add
outsl
mov
repz
or
mov
lcall
js
in
addb
and
adc
mov
add
pop
out
xchg
push
sub
add
add
sub
add
add
int
add
sub
add
xchg
pop
fisubrs
daa
xor
outsl
mov
add
cmp
push
pop
mov
mov
insl
sarb
stos
mov
add
add
add
xor
dec
push
add
lret
lret
cmp
add
rclb
jge
movsl
jecxz
cmp
push
cld
inc
lcall
sub
or
jbe
cwtl
imulb
call
inc
xor
fcmovb
and
add
and
xchg
add
pop
sub
add
mov
popf
cmp
lods
add
mov
sbb
jle
and
and
jle
push
add
mov
add
imul
lock
add
add
add
pop
aam
or
add
sti
cltd
inc
in
add
mov
add
push
add
adcl
aaa
cmpsl
jp
fs
decb
repnz
cmp
add
adc
sbb
add
add
pop
add
add
pop
fcompl
scas
add
movsl
inc
cmp
push
roll
push
add
pop
and
add
mov
test
add
mov
add
add
add
add
add
inc
aam
add
add
lret
loop
inc
dec
pop
pop
jmp
add
dec
adc
add
lods
bound
dec
pushf
push
sub
mov
pop
pop
cmp
add
add
inc
cli
imul
add
push
pop
xchg
xchg
and
add
sahf
imul
mov
jne
sbb
xor
stc
lds
add
pushf
pop
gs
sub
add
xchg
scas
cmp
and
add
xchg
test
jmp
add
loop,pt
ficoml
lock
add
add
pushf
sbb
aas
mov
repz
shll
add
mov
add
push
imul
nop
scas
add
fdivr
xchg
add
mov
pushf
cmp
add
cmpsl
mov
add
ret
pop
inc
and
xchg
sbb
adc
iret
xor
fdiv
xchg
imul
jne
cwtl
pop
je
shrb
add
push
add
popa
test
aaa
aas
clc
fs
mov
dec
lods
inc
mov
add
add
add
or
add
lds
mov
pop
mov
aad
mov
rolb
sub
daa
shll
dec
fucomi
jae
sub
xor
adc
mov
sbb
add
fsubs
add
jno
mov
call
mov
add
jp
imul
pop
push
add
xchg
int
and
add
push
outsb
xor
add
rol
mov
lahf
mov
int
add
push
daa
cwtl
ljmp
add
cmc
cli
dec
pop
or
add
lea
add
ss
dec
fstpt
imul
hlt
insl
iret
rclb
pop
ss
add
pop
inc
out
add
inc
ljmp
adc
mov
add
test
add
adc
bnd
bound
mov
push
jno
js
fcomi
or
decl
outsl
lock
xchg
pop
lock
frstor
adc
add
inc
testl
scas
add
fbstp
dec
sub
add
shrl
aam
add
in
cltd
clc
xchg
das
push
lret
xor
clc
aaa
jno
rcrl
cld
fs
rcll
ja
adc
dec
cmp
add
push
jle
loop
push
xchg
mov
mov
or
add
add
cli
mov
pop
push
jle
add
or
add
hlt
adc
push
pop
jl
in
xor
pop
mov
jmp
adc
cmpsb
add
movsl
rcl
sub
xchg
pop
sub
add
iret
loopne
cmp
mov
loop
dec
and
add
sub
add
xchg
ljmp
sbb
and
adc
push
pop
lock
mov
add
or
add
leave
xor
add
montmul
cmpsb
add
rorl
xchg
imul
int3
and
cmp
add
fidivrs
lea
add
add
lds
dec
sbb
inc
mov
add
xchg
rorl
lahf
andl
in
nop
mov
xchg
cmpsb
add
mov
add
jp
adc
insb
lock
cld
addr16
je
mov
inc
push
icebp
imul
add
pop
sbb
paddw
push
add
pop
lds
jl
mov
dec
adc
mov
push
mov
add
mov
sub
iret
sub
xor
ljmp
in
lds
add
dec
cwtl
popf
and
add
cmp
imul
or
push
andl
sahf
ret
mov
int
rolb
sbb
js
add
fs
std
insl
lcall
jns
sub
aas
fimuls
add
clc
inc
cmp
adc
add
mov
insb
rcr
mov
mov
add
decb
add
and
add
xchg
pcmpeqb
imul
xchg
mov
add
stc
fstps
or
add
add
mov
and
movsb
add
insb
in
sub
add
fwait
jecxz
xor
push
mov
add
add
jae
cmp
push
lds
cli
add
add
fstps
dec
fcoml
jmp
add
pop
scas
xor
add
rol
mov
and
add
mov
or
add
add
xlat
inc
ficoml
sub
sbb
shrl
sub
clc
test
add
xor
jno
inc
mov
add
add
xor
lcall
add
mov
popf
dec
xor
jecxz
and
add
dec
fisttps
jb
mov
add
add
jmp
cmc
inc
addr16
xchg
test
add
lock
push
and
add
jb
add
push
pop
leave
rcr
add
add
sahf
scas
add
or
add
xchg
inc
ljmp
cmpsl
int
add
sbb
add
gs
sahf
mov
mov
shll
add
add
lahf
push
ss
outsb
push
loope
add
stc
pop
and
push
add
stos
add
xchg
das
inc
add
add
pop
cmp
icebp
bound
sti
cmpsb
add
xchg
fdivs
mov
inc
pop
or
add
mov
cmpsl
mov
rolb
movl
addb
xchg
mov
push
push
inc
jbe
addl
xchg
and
mov
add
addb
and
add
dec
repnz
add
push
add
push
fdivr
jne
shlb
mov
sarb
daa
inc
cmpsb
add
loope
aaa
pushf
or
and
in
stos
add
repz
add
add
mov
hlt
mov
stos
add
mov
dec
jp
and
add
out
mov
pusha
shlb
push
sti
xchg
inc
xchg
xor
add
outsb
cld
das
xor
pop
jmp
push
pop
sub
stos
add
xor
pop
repnz
mov
add
cwtl
jne
in
cmpsl
adcl
fldl
cmc
and
add
cmp
add
or
in
sub
add
jle
add
xor
add
fidivs
jle
imul
movsb
add
cmp
ss
and
int3
mov
add
sub
fildll
out
inc
mov
cmpl
add
pop
adcl
jecxz
push
mov
jns
cmp
jle
add
outsl
repz
scas
and
scas
cli
rol
mov
add
dec
adc
sub
pusha
repnz
test
xchg
push
add
xchg
push
ds
cmp
adc
lret
repnz
add
xchg
xchg
dec
flds
lock
cmp
bound
xor
fmulp
xchg
ret
add
in
mov
pop
xlat
std
imul
and
add
repz
mov
decb
jno
test
add
jae
lods
ss
outsb
adc
xor
mov
or
add
arpl
inc
sahf
imul
jo
sarb
jle
aaa
mov
mov
add
mov
dec
xchg
inc
hlt
lahf
mov
stos
add
mov
add
imul
aas
dec
into
shlb
inc
mov
xchg
sub
add
mov
add
lea
sub
mov
pop
loop
cld
std
lret
push
nop
mov
add
push
xchg
movsl
add
add
jno
nop
adc
gs
add
imul
dec
dec
mov
mov
mov
mov
jno
add
mov
add
std
jo
and
add
mov
outsb
adc
mov
add
jb
loopne
jne
mov
scas
add
mov
scas
add
mov
add
lea
lods
leave
mov
pop
call
cli
ljmp
aas
xor
aas
sbb
scas
push
daa
insb
mov
add
mov
add
aad
or
add
and
add
dec
int3
rcrl
gs
lock
push
add
add
add
jbe
pop
and
add
jbe
add
inc
fcoml
into
imul
imul
push
popa
jns
popf
or
sub
or
inc
sbb
mov
add
test
add
pop
ds
add
mov
outsb
mov
dec
stos
add
push
add
jne
addb
mov
push
gs
std
jge
add
in
push
add
pop
lret
sub
adc
lds
dec
pop
and
in
add
or
and
add
mov
daa
mov
mov
add
add
jg
enter
movsb
add
dec
push
lcall
dec
leave
jne
aaa
push
repnz
aas
hlt
add
jg
test
nop
add
call
les
fs
mov
pavgb
xor
addb
sbb
add
push
les
rclb
mov
cmp
jns
push
fbstp
sti
jecxz
and
cltd
jnp
mov
aaa
out
jns
xor
cli
stos
inc
jnp
push
push
inc
inc
mov
mov
int
xlat
test
add
imul
cltd
lea
adc
fisubl
enter
sbb
hlt
jb
jmp
or
dec
clc
sbb
cld
ja
aaa
cmpsb
add
jb
add
dec
pusha
mov
ja
pop
mov
cld
adc
adc
mov
pop
hlt
mov
add
jl
fbld
out
push
cmp
into
stc
jmp
add
add
ljmp
dec
aam
add
sti
mov
add
ret
lahf
push
pop
roll
add
int3
add
add
rcrl
pop
adc
shlb
add
fwait
inc
int3
out
inc
bound
sbb
popa
je
and
push
and
lcall
inc
add
add
mov
add
mov
test
lock
call
std
mov
xchg
les
add
clc
mov
imul
lods
xor
cmpsl
mov
add
add
std
movsb
add
pushl
add
je
movsb
add
mov
add
or
add
mov
movsb
add
mov
add
in
and
add
adc
and
add
push
cmp
add
add
mov
add
sahf
lds
jns
add
sub
add
add
mov
inc
dec
ficoml
add
and
sbb
punpcklbw
aaa
out
pop
test
cmp
add
xchg
add
frstor
add
push
and
add
sub
add
test
xor
jae
pop
int3
sbb
out
fidivrs
adc
enter
movsb
add
xor
pop
fisubrs
add
push
repz
mov
add
ss
popa
cmp
push
sub
add
xor
addb
and
pop
cli
mov
add
popa
sub
mov
pop
xor
add
mov
add
cli
in
mov
or
add
xchg
jbe
cltd
fisubs
add
jmp
lret
add
add
mov
add
xchg
ret
in
or
sub
add
lcall
imul
sbb
addr16
add
push
or
fists
out
aaa
stos
mov
inc
fdivp
pop
les
daa
inc
iret
outsl
push
imul
mov
add
jb
jo
mov
add
lret
xor
jb
add
test
test
add
add
cmp
pop
jbe
inc
xchg
add
lahf
in
fs
data16
add
into
mov
stos
mov
add
push
call
and
test
add
mov
add
push
xchg
or
add
enter
inc
push
mov
xchg
les
mov
add
add
mov
add
add
movsl
ss
stos
inc
xchg
lahf
pop
dec
mov
add
sahf
sub
add
push
mov
add
pushf
cmp
add
push
pop
add
lret
faddl
add
xor
add
shrl
lock
inc
xchg
add
fs
mov
add
jp
xor
mov
outsb
push
add
in
xor
cmp
add
add
jae
push
add
test
add
lret
sahf
fwait
mov
add
add
add
fldenv
mov
cmp
add
add
imul
test
add
xchg
and
fs
inc
push
fmull
enter
add
lock
xlat
orl
add
add
aad
mov
add
add
iret
cli
add
gs
jg
pushf
xchg
rorl
xor
fstl
pop
pop
popf
mov
add
add
leave
cmp
add
add
add
fwait
pop
pop
je
scas
add
iret
xchg
stc
mov
add
pusha
sub
add
dec
fdivrs
loop
add
sub
xchg
xchg
add
add
dec
cmp
in
add
popa
loop
cmp
orl
inc
add
inc
scas
jl
mov
add
addb
or
push
sti
repz
lods
add
ds
sbb
jno
stos
jle
pushf
fisubrs
pop
std
or
add
add
mov
shr
add
add
add
sti
inc
aaa
repz
push
fs
add
and
add
sub
add
sbb
add
clc
mov
pop
and
add
mov
push
add
push
shr
imul
inc
add
inc
cmp
lods
cmp
pop
xchg
add
add
add
test
xchg
sub
add
jne
addr16
dec
aam
into
out
test
add
mov
add
add
jmp
int3
xor
repz
push
inc
pop
push
push
add
sahf
mov
inc
in
ds
and
jbe
pop
mov
xor
jmp
xor
add
data16
xchg
add
add
lock
add
lret
shl
jg
push
or
add
lcall
add
test
add
add
dec
addb
push
int3
ss
test
insb
inc
jle
cmp
lods
dec
test
add
adc
add
pop
test
add
mov
push
sbb
pop
jae
int
jle
mov
add
push
add
aaa
out
pop
xor
addb
push
mov
outsl
pop
mov
and
outsl
aaa
into
test
add
inc
and
mov
add
cltd
jnp
adc
leave
or
add
xorl
test
mov
sub
add
fcomp
xchg
add
insl
xchg
add
add
add
icebp
test
test
cmpsl
pop
roll
xor
in
xlat
stos
cli
or
xchg
outsl
pop
iret
xor
cwtl
add
fnsave
jns
sub
add
fistl
push
push
adc
outsl
add
decl
scas
ret
mov
lcall
add
aad
out
leave
ret
mov
pop
fwait
call
jg
clc
loopne
add
dec
mov
add
add
mov
xchg
xchg
mov
mov
dec
adc
mov
inc
mov
clc
mov
add
ret
out
ljmp
push
aas
push
cmp
push
insl
cmp
nop
mov
add
adc
outsl
out
mov
lds
add
pop
lock
adc
int3
xchg
gs
push
xchg
add
add
cmpsb
add
dec
sub
add
cmp
loope
pop
pop
add
dec
in
aas
aam
mov
add
jmp
inc
cmp
or
shl
pop
leave
clc
lock
pop
push
out
stc
push
insl
icebp
push
add
adc
testb
jge
imull
add
dec
dec
fs
pop
cmp
push
xchg
repz
add
addr16
adc
mov
jmp
movsl
ror
adc
rcr
pop
pop
fildl
add
fs
mov
add
int
add
push
ja
sub
mov
xchg
jle
in
jl
cli
adc
movsb
add
push
xchg
inc
pop
jmp
jbe
cmp
jp
add
dec
enter
fwait
mov
movsl
xor
mov
or
add
xor
mov
add
js
xchg
pop
sahf
int3
add
add
add
int3
push
or
add
cwtl
and
add
sti
jp
mov
add
pop
stc
cltd
cmp
and
add
pop
out
mov
sbb
mov
mov
add
pop
data16
lret
pop
mov
pop
addb
mov
and
cmp
loope
repz
inc
sbb
cmpsb
add
pushf
push
add
fs
insb
push
notl
ds
add
inc
in
lods
add
mov
adc
sbb
sahf
cmp
mulb
test
push
addb
subl
add
adc
or
pop
adc
mov
add
add
add
je
jno
inc
sbb
andps
jecxz
ret
xchg
xchg
add
add
jnp
add
mov
xor
add
or
add
cmp
sbb
ficoms
or
add
add
out
cmp
in
test
add
out
jmp
add
cwtl
fsubl
add
jne
xchg
mov
add
sbb
jp
mov
add
leave
mov
add
mov
das
pop
out
mov
inc
or
add
sbb
enter
mov
cmp
jnp
xchg
outsl
push
pop
mov
add
mov
jp
scas
add
add
add
adc
mov
xor
aaa
cld
repnz
rorl
add
in
rol
into
mov
pop
sbb
add
jae
inc
push
mov
mov
add
add
mov
sbb
mov
jns
loopne
imul
xor
sub
add
add
outsl
pusha
xchg
std
sbb
push
jb
push
add
push
mov
dec
jecxz
mov
add
bound
ret
mov
test
enter
add
jecxz
inc
ds
fwait
sbb
in
mov
add
add
add
adc
fistl
add
mov
mov
add
outsl
arpl
movl
jg
xor
insl
aam
jp
decl
add
push
xchg
addb
jmp
cmp
add
sub
popa
xchg
add
add
shrl
add
pop
sbb
shll
add
mov
xor
add
aad
add
pop
xchg
addb
dec
outsl
dec
daa
xchg
dec
mov
or
add
sub
add
add
cli
xchg
addb
out
gs
add
add
iret
cmp
add
aam
fs
and
cmp
add
test
add
add
adc
stos
outsl
inc
jne
aad
add
inc
add
pop
orl
xlat
addb
into
ret
addb
and
add
hlt
pop
jg
leave
call
inc
inc
push
das
lods
add
mov
dec
mov
gs
jno
and
add
stc
int
add
call
or
add
lea
add
out
push
or
hlt
mov
or
ss
fimull
aaa
movsb
add
mov
add
push
mov
add
jbe
clc
jb
inc
add
add
movsl
gs
add
fiaddl
jle
fs
mov
add
scas
and
sti
pop
dec
clc
mov
dec
mov
xor
dec
aas
mov
add
push
mov
int3
push
js
mov
ret
add
pop
enter
sub
add
add
hlt
ss
cmpsl
adc
bound
add
add
add
mov
add
mov
sbb
call
addb
pop
add
add
push
in
popa
jmp
sahf
stos
add
lods
add
mov
add
mov
in
outsb
add
add
sub
add
out
in
sbb
and
ds
loopne
jbe
xor
add
out
pop
jmp
add
mov
mov
jp
cltd
imul
pop
pop
data16
cmc
sbb
sub
xor
sbb
xor
add
addr16
in
jl
sarl
inc
lds
pushf
adc
mov
push
js
mov
mov
add
push
add
fwait
aam
repnz
xchg
push
fwait
int3
addb
daa
cmpsb
add
add
add
mov
add
or
add
sbb
push
add
out
xchg
add
add
mov
bnd
jp
sub
add
jge
xchg
dec
sub
add
add
xor
push
outsl
jnp
fwait
pop
xor
test
add
in
insb
shrb
xchg
push
add
pusha
call
dec
nop
movsb
add
fnsave
inc
mov
or
add
add
push
stc
pop
bnd
add
push
add
jp
cli
cmp
add
subl
add
add
add
movsl
xor
lcall
and
add
inc
mov
cwtl
mov
add
add
outsl
pop
push
shll
sti
mov
aam
add
mov
mov
add
jg
les
cmpsl
movsl
jp
pop
cltd
push
lret
mov
cmp
fistpl
clc
cmp
push
add
lret
in
lods
add
mov
nop
clc
mov
add
loope
lgs
mov
push
jbe
sub
add
mov
xchg
add
adc
bound
adc
add
adc
adc
jnp
cmp
xor
out
sbb
cld
outsb
js
dec
push
mov
dec
inc
imul
sarl
loope
adc
cmp
in
adc
push
mov
add
outsl
insl
dec
aaa
or
add
lret
xor
ljmp
xor
inc
add
cmc
scas
mov
add
sarb
inc
mov
add
jecxz
push
add
xlat
and
lret
adc
xchg
mov
add
pop
xchg
loop
gs
add
sub
add
add
clc
push
dec
rolb
fdivrl
mov
mov
add
test
int3
sbb
add
rclb
add
mov
popf
out
or
icebp
add
jae
add
mov
jbe
ret
test
rcl
mov
stc
mov
dec
lea
mov
scas
daa
or
add
cmp
sbb
fmull
loopne
aad
dec
jb
xor
mov
aaa
cmp
outsl
cltd
pop
inc
leave
fistpl
bound
filds
add
and
shlb
xor
int3
gs
adc
mov
out
or
add
cmp
bound
mov
sarb
into
outsl
fs
add
pop
add
add
mov
adc
pushf
jne
das
cmp
add
test
add
cmpsl
lcall
add
pop
cli
or
add
add
add
adc
add
fwait
inc
jl
mov
sbb
leave
push
dec
test
add
push
push
ja
shll
add
dec
adc
mov
inc
mov
in
outsw
testb
add
fisttps
add
push
aam
push
out
add
mov
push
adc
xchg
add
add
push
cmp
lcall
sbb
stc
mov
add
mov
jno
xchg
clc
sbb
xor
mov
pop
cmp
pop
addb
xor
sbb
add
outsl
sub
add
scas
adc
insb
mov
mov
add
imull
add
xchg
add
repnz
dec
push
shrl
fldl
repnz
add
mov
lds
fnstcw
cmp
icebp
xchg
inc
les
inc
aad
jge
imul
add
int
add
push
add
dec
decl
and
add
add
jbe
pushf
loopne
add
cmp
test
add
sub
add
dec
js
and
add
mov
test
add
mov
add
in
cli
add
add
inc
shrl
add
or
xor
pop
fbld
push
add
aaa
or
add
lahf
inc
inc
shll
add
add
add
sub
add
xchg
push
iret
jno
jecxz
add
mov
sub
add
movsb
add
dec
out
dec
je
add
dec
add
add
add
rcl
out
enter
mov
push
aaa
push
add
inc
in
retw
icebp
sbb
pop
cmp
add
roll
jecxz
subl
enter
out
jge
adc
ja
inc
pusha
rcll
dec
mov
and
and
add
fucom
icebp
or
and
jge
rcl
clc
out
sbb
dec
jns
add
and
add
dec
out
movsb
add
int3
ds
jae
gs
inc
fdivrp
test
add
cltd
ror
xchg
in
in
mov
clc
addb
mov
add
pop
outsb
pop
push
popf
movl
add
dec
addb
mov
sbb
add
jne
addb
adc
push
mov
push
imul
das
mov
add
lret
xchg
and
push
fstl
mov
add
xlat
pop
push
pop
mov
dec
sub
or
add
mov
add
add
add
pop
add
add
aam
repnz
add
shrl
add
push
add
mov
add
add
sbb
ret
mov
mov
add
mov
hlt
out
popa
xchg
pop
popa
movsl
push
and
add
hlt
ds
gs
add
jne
icebp
sbb
add
ljmp
add
ljmp
add
add
pop
xor
addb
cwtl
mov
or
add
and
lock
int
jne
jnp
mov
rorl
add
das
sub
mov
add
xchg
add
shrl
imull
add
mov
add
sbb
adc
cmpl
xor
pop
mov
add
outsb
andl
sarb
add
out
xlat
push
pop
mov
add
lahf
imul
add
add
icebp
push
add
push
std
test
repnz
add
mov
add
push
jmp
int
pop
inc
ja
nop
xchg
cmp
cmpsb
add
mov
add
add
dec
push
mov
rcll
and
mov
push
add
pop
dec
inc
xlat
pushf
fwait
pop
push
lcall
xor
pop
add
add
popa
mov
push
cltd
fbld
pop
in
mov
add
and
add
push
clc
push
iret
sub
add
add
and
pop
aaa
mov
ret
push
test
add
add
sub
inc
cmc
mov
rcrl
sbb
rcl
jo
addb
lahf
push
add
xor
call
cmc
mov
add
arpl
add
sbb
inc
shrb
add
mov
fildll
add
clc
sbb
xchg
mov
and
add
popf
mov
add
ret
add
mov
add
push
fabs
or
add
jge
pop
lahf
xchg
and
add
imul
rorb
jge
pop
fs
fstl
inc
nop
and
add
mov
loope
mov
insl
testl
js
add
dec
in
js
add
pop
sub
add
add
sbb
pop
push
outsl
push
lock
mov
add
arpl
fisttps
push
jb
mov
mov
fsubrs
mov
add
jns
add
inc
shrb
cmp
aad
in
fmull
cmp
insl
or
lret
or
mov
add
ss
sbb
dec
add
add
iret
mov
add
call
add
ret
jmp
xchg
xor
add
and
popf
push
lret
les
push
add
add
insb
addb
sbb
mov
add
cld
les
mov
and
add
jmp
shlb
shll
adc
bnd
mov
std
fsubrl
addb
inc
test
add
pop
imul
add
jnp
sub
add
xor
lds
add
adc
pop
daa
sub
in
add
sbb
adc
cmp
ja
fbstp
cld
push
jle
stc
and
xor
movsl
mov
lahf
adc
fndisi(8087
dec
jno
dec
pop
fs
filds
inc
lock
ficoms
sarb
lahf
les
jns
les
int
mov
add
mov
dec
loop
add
xor
rclb
sbb
add
pop
loopne
aam
add
or
add
out
adc
sbb
int3
xchg
daa
iret
out
sahf
mov
push
inc
dec
fdivp
xchg
mov
cmp
mov
sbbl
movsb
add
dec
out
add
add
out
and
add
std
fcomps
add
adc
dec
mov
fstpt
fcoml
inc
jbe
inc
enter
add
adc
add
mov
add
or
aas
ret
xchg
dec
adc
add
add
and
pop
push
or
dec
push
add
insb
mov
fs
stos
add
xchg
scas
push
in
cmc
fisttps
sub
add
lret
subl
pop
adc
push
and
or
add
add
roll
clc
mov
lds
pop
jl
mov
addl
cld
cmp
add
in
mov
add
add
das
or
repnz
ljmp
cmp
dec
imul
dec
loope
add
add
sub
add
add
sub
sarl
fisttpll
xor
inc
adc
sti
aaa
shrl
pop
inc
gs
pop
popa
mov
fwait
addb
repz
xchg
add
loope
out
push
jl
inc
shl
out
icebp
aam
inc
sub
add
xchg
dec
sahf
pop
mov
jno
add
xlat
push
add
sub
add
add
jmp
xor
add
jne
add
add
add
loopne
adc
mov
test
cmp
jo
aas
xor
add
mov
add
icebp
push
sub
cmc
and
add
add
or
ret
clc
test
xlat
arpl
fs
jge
sbb
dec
pop
mov
push
or
add
sub
add
sbb
xchg
add
imul
insl
cmp
test
pop
add
in
and
inc
rcrb
shll
push
push
lds
add
test
cmp
mov
add
add
jl
jle
cmpsb
add
dec
pop
mov
add
push
mov
add
push
lods
pop
sbb
push
fisttpl
add
ljmp
movsl
ds
push
stos
fidivrl
add
jne
or
cmp
add
ds
xorl
mov
sbb
add
add
mov
add
scas
std
pop
mov
add
inc
ficoms
mov
ljmp
std
xchg
sahf
sub
pop
sub
jns
fcompl
jno
js
fwait
xor
add
mov
mov
add
loop
adc
arpl
jno,pt
add
lea
push
mov
add
push
add
jo
test
popa
mov
addb
cwtl
inc
adc
xchg
add
loop
mov
add
add
adc
cld
add
add
cli
addl
loope
dec
jge
jg
sti
and
jb
add
adc
hlt
inc
sbb
inc
add
add
movsb
add
mov
ret
xchg
data16
mov
add
add
arpl
int3
xor
and
arpl
add
stc
mov
inc
mov
add
jmp
add
cmp
outsb
adc
mov
mov
mov
dec
jg
lret
cmp
add
xor
add
cmp
out
push
xor
add
mov
add
daa
fucomi
rcrb
xchg
inc
dec
mov
notl
sub
add
mov
fwait
scas
sub
add
aad
dec
mov
in
out
cmp
movsl
inc
add
add
and
out
pop
mov
enter
arpl
add
sbb
lahf
or
in
inc
sbb
lea
pop
and
daa
ficompl
mov
add
mov
sarl
fidivs
xor
add
pop
sbb
add
in
add
push
sub
add
sbb
add
add
stc
pop
mov
fadds
add
add
or
add
lret
arpl
mov
add
pop
or
cmp
in
les
insl
add
add
xchg
call
sbb
adc
xor
addr16
sbb
arpl
sub
lcall
daa
push
movsb
add
sub
add
fiaddl
clc
in
movsl
leave
and
add
je
test
lea
add
call
cmp
das
pop
xchg
inc
push
cmp
push
cmpsb
add
push
ds
add
jno
aaa
sbb
stos
add
loope
cwtl
push
push
add
lcall
shlb
mov
sbb
or
add
and
add
sub
add
insb
pop
sbb
leave
in
stos
add
mov
jl
frstor
add
jbe
loope
movsl
dec
sbb
xchg
aam
aas
cmp
ds
sbb
mov
std
repnz
mov
mov
dec
aas
mov
add
int
add
lret
cwtl
lods
add
xchg
test
add
push
pop
daa
scas
add
cmc
lahf
adc
sbb
sbb
add
xchg
pop
adc
insb
mov
add
and
add
sub
add
add
fcoms
add
daa
mov
int
sahf
int
test
mov
pop
jo
dec
mov
cld
push
mov
xlat
rcrl
add
xchg
mov
push
in
push
add
fcompl
mov
ffreep
aas
xor
dec
mov
pop
push
leave
enter
or
mov
add
add
repnz
add
mov
pop
jne
or
add
or
add
add
push
xchg
add
dec
push
sbb
mov
add
xor
xor
add
lods
xor
mov
or
add
xchg
xlat
push
add
add
mov
add
repz
mov
sbb
cld
pop
inc
loopne
lods
lea
add
add
data16
fcompl
adc
add
and
das
aas
or
mov
add
add
xor
jmp
pushf
popa
add
mov
icebp
mov
add
pushf
xchg
add
jmp
pop
mov
add
ret
jp
add
addr16
adc
adc
jnp
aaa
cmp
aas
out
loopne
js
cmpsb
add
or
or
add
test
add
add
lods
add
scas
and
add
push
loop
add
int3
jmp
lods
push
sbb
push
push
adc
inc
aam
sbbl
mov
and
add
mov
add
add
xor
pushw
add
dec
sbb
and
cld
xor
add
dec
scas
clc
xor
lret
push
add
cmp
repz
inc
xor
or
add
decb
cli
inc
xor
jbe
mov
test
adc
add
aas
int
out
mov
cwtl
xor
add
cltd
jns
cmp
add
add
add
cmp
rcrl
xor
add
scas
adc
and
push
lods
pop
test
outsb
push
xor
inc
add
ljmp
or
jl
fidivs
add
push
add
repnz
pop
cwtl
ss
pop
sahf
lock
add
inc
loope
sub
add
or
add
js
xor
pandn
xor
jp
jp
inc
mov
sarb
pop
sbb
aad
push
add
mov
mov
cmp
call
pop
dec
xchg
adc
add
add
fwait
jge
add
jge
incl
add
divl
aaa
lods
add
stos
addr16
inc
adc
add
add
sbb
add
movsb
add
adc
or
cmovno
add
mov
push
sbb
stc
sbb
add
add
jge
add
push
add
adc
popf
nop
jbe
pop
push
cmp
or
cmp
dec
add
xchg
xor
add
add
sbb
add
adc
push
xchg
jge
mov
repnz
into
sbb
mov
mov
xchg
add
data16
mov
sbb
jbe
push
cmpsl
ret
adc
add
add
sbb
add
in
pop
neg
test
add
cmpsl
movsl
adc
dec
out
shlb
pop
scas
add
sbb
out
add
arpl
cltd
mov
aam
xchg
push
add
das
push
pushf
sub
add
mov
jns
dec
mov
leave
test
add
add
add
sub
add
cltd
aaa
inc
insb
mov
dec
int3
cwtl
cmp
cmp
add
popa
fld
in
loop
mov
add
push
jmp
jg
sbb
faddl
xchg
addb
ret
repnz
and
add
add
jg
pop
in
dec
pop
sbb
jo
add
add
mov
out
mov
jmp
cmp
aas
and
add
xor
fwait
xchg
mov
add
add
ret
sub
add
fucomip
jbe
xchg
push
push
cmpsb
add
push
or
insb
xchg
sahf
mov
jmp
in
inc
pushf
push
jo
add
dec
inc
mov
add
out
ret
cld
inc
add
sbb
add
fsubrs
add
add
out
scas
popa
mov
int3
fildll
push
and
cmp
dec
int
jae
add
inc
pop
cmp
push
mov
jg
pop
addb
jo
push
jb
cmp
pushf
outsl
cmp
adc
xlat
adc
ljmp
sbb
add
push
lock
mov
loope
xchg
out
popf
mov
sahf
in
subl
add
fsubl
add
mov
adc
nop
sub
test
and
add
imul
ds
mov
add
or
in
in
out
mov
add
xor
add
lods
add
jo
clc
inc
mov
mov
test
add
sub
fisttpll
fisubrs
add
push
out
addb
aas
leave
or
add
mov
and
rcl
enter
adc
mov
push
out
cli
das
div
in
fbld
pop
js
push
mov
pop
cmpsb
add
dec
andps
aam
jg
inc
shl
addb
cld
enter
add
pop
mov
add
xchg
ror
and
add
add
movsb
add
and
add
cmp
cwtl
cmp
les
lea
add
mov
pop
add
aas
clc
cli
adc
add
inc
push
mov
jl
jb
jb
inc
mov
add
add
jbe
and
add
add
mov
add
cli
ja
add
fdivrs
sub
insl
xor
arpl
inc
pop
inc
inc
lods
mov
scas
add
xchg
jo
scas
push
test
mov
xor
sarb
lea
jae
sbb
sub
aam
jp
sbb
shrb
add
push
add
xchg
outsb
shr
xchg
xor
daa
cmpsl
xor
mov
mov
add
xor
test
add
cmp
add
mov
aam
cmpsb
add
out
aaa
xchg
sub
add
scas
add
cmc
add
add
dec
add
add
add
in
push
add
push
sarb
add
xor
inc
push
sbb
add
adc
imul
jge
xchg
xor
idivb
ja
push
out
mov
in
insb
xchg
cmp
roll
mov
aaa
aas
imul
mov
add
sub
xchg
inc
out
pop
add
xchg
xor
jae
sti
test
add
jb
movaps
add
xchg
stc
inc
push
mov
xchg
add
add
push
lret
dec
or
cmp
mov
aas
stc
test
add
inc
cmpsl
mov
lea
pusha
loope
je
jbe
sbb
mov
push
hlt
iret
push
pop
insb
imul
jge
int
loopne
xchg
imul
add
cwtl
subl
or
add
adc
aad
ret
shll
incb
or
inc
in
jecxz
jl
dec
scas
movsb
add
mov
test
add
add
sbb
repnz
xchg
addb
xor
and
lahf
pop
add
cmpsl
dec
lea
add
mov
in
mov
add
xor
mov
or
add
xchg
cmp
outsb
call
xchg
add
add
add
and
add
add
cmp
pusha
fstps
pop
inc
sub
add
mov
in
mov
inc
pushf
dec
lret
sbb
add
test
add
scas
add
or
add
jge
add
jns
add
shr
pop
or
add
sbb
add
xor
add
wbinvd
mov
cmpsb
add
aas
into
pop
in
inc
int3
call
mov
jne
std
loope
sub
add
dec
imul
jecxz
gs
ret
or
pop
or
add
ret
addb
in
ds
push
inc
sbb
xor
movsl
sbb
addb
sub
add
addb
lods
add
cmp
cli
stos
cmp
inc
repnz
push
jb
push
add
gs
add
fdiv
arpl
push
rcr
addb
push
icebp
mov
add
push
xchg
jbe
dec
clc
cli
adcl
mov
xchg
in
shlb
in
mov
add
add
fcoms
addb
test
cmp
and
add
pop
fmull
add
add
mov
add
aad
cmp
add
push
scas
add
mov
add
adc
cmp
pop
aad
add
dec
loopne
out
dec
and
add
xor
repz
push
add
sarl
add
push
outsl
mov
cmpsb
add
add
add
sub
add
mov
jmp
cld
stc
dec
arpl
add
or
add
fstps
sbb
xchg
mov
in
mov
add
jl
add
stos
xor
enter
insl
mov
add
push
add
mov
xchg
push
pop
scas
shrl
push
shrl
pop
pop
sbb
add
repz
add
inc
pop
mov
sarl
add
mov
add
push
ds
add
xor
push
mov
outsb
je
add
add
add
repz
add
xchg
add
add
push
aad
jmp
add
mov
ljmp
les
add
fwait
push
add
cli
aam
cltd
mov
mov
add
inc
adc
add
sbb
jmp
mov
push
jnp
sbb
xchg
out
jo
sub
add
mov
add
sbb
push
rcr
rcr
cmp
mov
movsb
add
fiadds
in
fsts
add
jbe
dec
cmp
cmpsb
add
jle
mov
jae
add
mov
loop
add
call
aaa
outsl
jl
ljmp
dec
jg
loop
sbb
rorl
adc
pop
mov
add
adc
out
add
inc
lock
jb
jge
pusha
or
add
mov
jbe
adc
sbb
add
clc
test
jbe
mov
adc
mul
movsb
add
test
add
add
mov
add
out
inc
add
push
add
imul
shl
cmp
and
fwait
adc
push
out
adc
inc
adc
shrl
add
mov
add
insl
test
mov
lock
or
add
add
sar
cmp
outsb
sbbl
pop
mov
xchg
push
xchg
xor
cmp
mov
repnz
repz
add
pushf
decb
sub
add
mov
add
add
sub
icebp
ljmp
popf
dec
mov
add
ret
cld
add
mov
add
idivl
inc
iret
adc
dec
push
gs
add
mov
insl
in
or
add
inc
mov
sub
add
addb
jge
iret
je
sahf
sbb
pop
pusha
mov
mov
add
xor
out
xchg
mov
add
cli
add
cmp
add
bound
jl
sub
add
xor
add
aam
shl
mov
add
jmp
cmc
imul
popf
mov
dec
fmul
pushf
pop
jle
push
arpl
add
pop
push
mov
mov
mov
jae
inc
mov
mov
mov
jecxz
mov
repnz
mov
enter
add
add
pop
and
mov
inc
iret
jge
jno
pusha
jg
inc
insl
push
repz
add
push
add
jns
lock
add
lds
insb
push
cmp
lds
ret
adc
jmp
or
add
add
xor
movntps
add
std
fildll
add
inc
jno
shll
repz
dec
dec
outsb
icebp
sub
add
add
jle
repz
add
add
repnz
jb
inc
cmp
adc
faddl
ud1
mov
add
add
fwait
mov
add
xor
mov
jp
xor
rsm
add
in
add
add
add
inc
add
add
and
add
inc
ljmp
out
jnp
dec
mov
bound
push
fstps
and
add
push
mov
add
aam
mov
add
lods
sub
int3
push
pop
xor
add
xchg
test
add
lahf
push
imul
mov
add
add
adc
int
add
cmp
sahf
imul
add
jle
out
adc
loope
xchg
sub
add
std
insb
and
add
jns
and
add
jmp
and
add
mov
add
popf
addr16
dec
dec
mov
int
jne
mov
orl
pop
jnp
cmp
test
or
jp
inc
rcrl
and
out
mov
add
jecxz
jnp
jae
jne
mov
or
add
negl
out
cmp
xchg
add
mov
add
add
or
add
or
add
xchg
xchg
add
add
pop
jns
aaa
cmp
cmpsl
scas
add
rolb
mov
cmp
testl
les
sti
dec
xchg
add
add
pop
roll
xlat
jns
add
add
inc
dec
in
push
add
or
add
loopne
push
inc
lret
add
pushf
cmc
mov
add
lahf
push
outsl
jns,pt
and
xor
fistl
cmc
push
insl
sti
faddp
adc
add
pop
xchg
sub
jg
ja
and
mov
add
scas
jp
cwtl
xor
filds
xchg
jno
loop
hlt
pop
pop
dec
mov
jl
sub
add
gs
add
movsl
push
mov
jb
fwait
or
jl
add
sbb
add
add
add
pop
outsb
jg
std
gs
hlt
je
xchg
add
mov
xchg
pop
out
cmp
addr16
sbb
cwtl
notl
push
lahf
xchg
pop
push
lods
add
and
add
icebp
insb
pop
insl
fcoml
pop
pop
ret
cli
xor
adc
jp
ficoms
add
push
cmp
rcl
shrb
add
pop
mov
mov
add
ljmp
mov
stos
add
mov
into
lret
add
nop
mov
sar
aam
sar
or
add
jecxz
xchg
or
cmc
sub
add
pop
jne
mov
or
add
pop
mov
insb
xchg
aam
fldt
mov
cmpsl
aad
add
add
add
fstpt
add
add
fisubrl
add
pop
push
mov
adc
mov
lods
push
lods
add
jle
cmp
sub
add
xchg
push
add
xor
mov
add
mov
inc
hlt
sbb
pop
push
add
pop
sub
inc
ja
add
cwtl
ror
fcomps
ja
mov
add
jbe
add
xchg
mov
gs
add
pop
xor
add
add
xchg
leave
mov
mov
add
inc
add
gs
add
fcmovne
scas
add
dec
aaa
lahf
lret
cwtl
rcr
add
add
mov
aas
sbb
scas
add
push
insb
sbb
mov
data16
ret
mov
xor
decb
jb
or
lahf
and
add
pmaddwd
push
outsl
adc
add
mov
fs
lret
jae
test
add
pop
lock
or
add
or
add
inc
pop
popf
dec
bnd
add
icebp
sbbl
add
test
add
xchg
add
xlat
fstps
and
in
fs
pushf
pop
iret
mov
and
add
add
add
jecxz
imulb
leave
add
cpuid
add
pop
xor
fcmove
in
and
test
je
add
inc
or
xor
jbe
xor
mov
loopne
loopne
add
add
add
fsubl
add
push
xlat
cmp
pop
test
pushl
push
sahf
inc
cltd
pop
dec
inc
cmc
fwait
sub
add
fwait
dec
xor
or
add
sbb
fdivrs
inc
stos
mov
cmp
adc
movsb
add
ss
add
add
mov
pushf
clc
add
inc
cmp
test
dec
xchg
sbb
pop
daa
fcmovb
mov
xchg
add
gs
add
outsl
xchg
daa
adc
xlat
int
ss
xor
not
pop
stc
xor
pop
loope
add
sbb
add
xchg
add
rcl
fiaddl
rcrl
into
daa
cmpsb
add
ja
mov
sbb
mov
add
gs
bound
add
mov
add
mov
popa
sbb
inc
nop
mov
add
fstpl
add
js
mov
fsts
or
adc
xor
add
das
push
push
add
jl
mov
mov
movsl
in
add
push
add
push
add
lcall
mov
jecxz
aas
insb
rcl
add
and
add
add
dec
aaa
inc
pop
sub
add
and
xchg
cmp
add
jp
xchg
arpl
xor
dec
icebp
aas
and
sarl
and
add
jle
inc
jne
lahf
loope
dec
loope
xor
push
add
jg
lret
subl
sub
add
repz
add
icebp
lods
add
aam
testb
std
mov
add
add
mov
pop
in
cmp
xchg
mov
gs
add
fmulp
out
add
out
add
das
sub
sub
add
enter
push
cmp
adc
mov
add
adc
outsl
jno
scas
add
pop
aaa
pop
lahf
xchg
bound
add
dec
and
add
pop
push
mov
popa
mov
add
out
aas
push
cli
ret
lds
mov
addb
or
add
add
pop
dec
outsb
pavgb
aad
jnp
mov
nop
inc
lret
mov
add
pop
and
add
xor
orl
lods
add
push
nop
sub
add
fs
movsb
add
call
lods
add
push
dec
adc
clc
out
add
loope
or
mov
dec
mov
add
cmp
add
loop
sub
add
xchg
gs
scas
add
outsb
mov
sub
jl
inc
push
enter
gs
repz
pushf
rorl
imull
ret
add
add
add
aad
mov
add
ret
jge
push
movsb
add
push
stos
lods
jne
cli
sahf
fnstcw
scas
aaa
xchg
loopne
mov
add
lret
xor
jl
or
add
add
and
movsb
add
push
lea
jge
add
fiaddl
or
adc
mov
xor
pop
in
das
sahf
mov
add
add
add
cwtl
scas
add
lcall
push
add
or
sub
jo
cwtl
jne
add
mov
add
pop
nop
push
add
add
sub
add
aaa
fstps
dec
insb
imul
add
and
add
daa
addb
addb
insb
jnp
rcrl
xlat
enter
shll
inc
mulb
add
mov
daa
loopne
jo
add
test
je
xchg
add
add
out
lds
or
pop
aas
pop
pop
mov
icebp
or
add
adc
jbe
mov
repz
add
add
mov
rorb
imul
pop
jmp
adc
test
aaa
lret
clc
mov
stos
jg
mov
test
shll
lret
cmpsl
repz
add
ret
xchg
xchg
add
add
cmpsb
add
lock
add
mov
cltd
in
pop
sahf
addb
clc
psubb
xchg
clc
mov
add
or
add
xchg
fs
add
pop
sub
add
fnstenv
adc
and
jo
aam
add
iret
call
imul
lock
add
add
imul
mov
cmc
fwait
imulb
adc
pop
std
pop
leave
nop
jnp
xchg
mov
sbb
mov
dec
mov
add
fiadds
cmc
stos
sbb
pop
jge
enter
cli
lds
ret
cmpsb
add
fcoml
push
pop
push
push
ss
in
adc
lods
add
loop
loope
add
jle
add
clc
dec
call
and
add
jne
sti
add
xchg
pusha
dec
adc
add
ja
popf
jo
out
sbb
out
pop
imul
minps
add
into
pop
mov
inc
mov
add
addb
jno
mov
add
jmp
leave
mov
add
add
mov
mov
lret
pop
adc
loopne
mov
movsb
add
sub
add
adc
sbb
add
lds
pop
shrl
add
sub
add
add
popa
in
cmp
inc
cmp
and
add
aad
fldcw
jl
push
xchg
out
cmp
ret
jbe
sub
jne
loop
mulb
fnsave
add
sbb
sub
cmp
pushf
fcomi
out
add
jo
pop
inc
inc
js
cmpsb
add
call
jnp
ret
jnp
repz
or
adc
push
sbb
fxch
cmc
roll
pop
sub
add
pusha
pop
cmp
gs
pop
jg
pop
xor
ret
call
or
lea
sub
loope
adc
movsl
jl
add
add
xchg
cmp
insl
mov
push
add
add
mov
push
cltd
cli
dec
sbb
push
in
xchg
cli
xor
pop
sbbl
jmp
pop
mov
sub
cmp
add
add
add
jbe
cli
sbb
add
mov
sbb
mov
push
cmp
sysret
lret
sub
add
pop
inc
push
movl
and
add
or
divb
jl
mull
mull
inc
fnstcw
add
fs
add
js
jmp
add
push
add
nop
rolb
sbb
add
pop
mov
les
enter
aam
add
cmp
inc
ret
xor
pop
inc
xchg
add
xchg
mov
add
xchg
add
in
in
lret
mov
add
leave
pop
push
jl
push
jne
popf
mov
pop
adc
and
jb
nop
in
jg
dec
out
dec
xchg
in
pop
sub
add
ror
push
sarl
mov
add
dec
outsl
fisttps
dec
add
test
add
lock
scas
add
out
push
addr16
jnp
cltd
jbe
cmp
push
sub
das
movsl
stc
pushf
rcrl
or
add
add
sbb
dec
inc
out
cld
mov
xor
add
add
add
shl
mov
xchg
mov
bound
xor
testb
push
aad
pop
cli
lcall
mov
sbb
push
jp
test
add
add
or
add
stc
int3
addl
add
xchg
loope
mov
dec
divl
std
xchg
jle
add
movaps
add
add
dec
in
fs
pusha
lret
sbb
xchg
lret
mov
add
adc
mov
add
in
sbb
mov
mov
add
and
add
push
addb
les
lds
jbe
add
sbb
jbe
pushaw
mov
pop
xchg
ds
push
pop
ret
sbb
add
add
fcmove
sbb
mulb
add
add
stos
add
inc
inc
mov
aas
movsl
push
sub
or
add
rorl
jle
arpl
fidivl
mov
add
add
lods
addb
cmp
add
popa
aam
ret
add
xchg
add
mov
leave
repz
mov
xchg
sar
out
mov
or
loop
mov
test
bound
add
negb
test
daa
fnstsw
adc
and
add
add
leave
lods
shl
movsb
add
cmc
shl
lds
inc
and
xchg
add
ss
fildll
test
add
jecxz
sub
add
fwait
push
dec
sarb
inc
popf
cmp
push
pop
jecxz
push
add
pop
in
xchg
iret
and
add
add
inc
cmp
das
push
mov
ret
inc
mov
xchg
sub
jge
test
js
mov
add
add
add
pushf
lds
loopew
rcl
push
sbb
add
addr16
mov
add
cmp
mov
push
mov
jp
ja
out
scas
shrb
add
pop
rcl
dec
call
dec
loope
repnz
push
pop
push
pop
notb
jae
rclb
scas
add
or
add
add
or
mov
add
push
mov
add
cmpsb
add
add
addb
pop
cli
add
add
add
pop
adc
add
sbb
shl
clc
sbb
add
rclb
and
add
arpl
loop
mov
in
jno
cwtl
popf
scas
add
add
testb
fs
rclb
push
mov
push
notl
add
dec
and
add
incl
pushf
stc
cmp
push
shr
iret
inc
sahf
ljmp
mov
aaa
add
mov
shll
add
aaa
mov
sahf
insl
xchg
enter
add
cmp
dec
and
add
mov
add
add
lret
xchg
push
rcrl
jb
add
iret
stos
add
cmp
cltd
or
nop
or
add
sub
pop
push
cmpsl
stos
rorl
movsb
add
xchg
push
pusha
push
out
aaa
jmp
add
add
add
mov
add
fnstenv
testl
add
cmp
add
lahf
inc
sub
push
mov
aam
loope
xlat
or
add
mov
add
mov
add
push
inc
jmp
fildll
jns
shll
mov
outsl
dec
dec
aas
mov
add
mov
xchg
stc
inc
stos
test
add
xchg
add
push
fldt
mov
loopne
je
addb
je
sti
fcomps
jl
mov
push
out
mov
add
outsb
stos
fcomp
sub
outsb
push
add
mov
mov
test
mov
rcr
dec
loope
and
add
adc
int3
lods
add
fsub
fyl2x
aad
xchg
cltd
adc
add
inc
lock
lret
cltd
negl
fwait
movq
push
xor
pop
outsb
pop
push
add
ds
mov
ss
add
ret
cmp
add
add
pop
bound
add
cmp
add
inc
mov
add
outsl
fs
in
mov
jmp
add
add
adc
add
sti
loope
push
push
in
add
imul
mov
data16
pop
pop
addl
add
push
lea
std
jp
addr16
std
call
inc
loop
add
xchg
add
jle
add
mov
add
add
add
or
ja
outsb
inc
loop
fnsave
inc
dec
sub
push
mov
add
add
push
ljmp
mov
movsl
mov
add
add
add
clc
pushf
scas
sub
add
lea
jno
lcall
int3
daa
sbb
inc
pushf
xchg
add
push
lret
roll
add
push
add
sub
add
pop
mov
add
mov
add
jbe
add
test
mov
mov
scas
add
mov
add
jb
xor
add
repz
push
xor
mov
enter
cmp
pop
and
add
add
sub
add
sti
rorl
add
mov
add
out
mov
add
rcll
add
inc
mov
inc
cmp
int
sbb
mov
lea
mov
add
movsb
add
aam
nop
pop
xor
sbb
addr16
add
add
push
add
and
sbb
jp
mov
add
mov
std
cmc
insl
and
add
out
pop
loop
lahf
sbb
lret
push
dec
movsl
mov
pop
dec
test
add
lock
loop
lea
add
out
mov
add
add
scas
push
mov
inc
add
push
clc
daa
pop
jne
add
and
add
and
add
test
add
sub
add
sbb
pop
arpl
mov
add
xchg
and
out
dec
lret
loopne
add
lret
test
add
cmp
add
lods
into
fildl
add
and
add
iret
call
add
enter
shll
and
ret
jle
das
adc
loopne
mov
rolb
mov
add
popa
sti
push
cmp
xchg
ficompl
test
mov
insl
mov
cmpsl
ja
add
inc
xchg
add
lods
add
out
pop
pop
sbb
xor
add
xchg
mov
push
push
sub
add
int3
inc
xor
rclb
pop
sub
add
out
xor
cltd
xor
loope
xchg
cmp
add
xor
or
add
and
js
sbb
add
dec
out
in
mov
add
add
or
xchg
inc
clc
jecxz
ret
lcall
mov
add
add
push
add
pop
sahf
pop
pavgb
lea
repz
inc
fisubrs
add
add
add
xchg
add
fdivp
mov
lea
std
add
cmp
add
pop
insl
movsl
bound
cltd
and
loope
add
or
add
shll
fmuls
sub
lea
sbb
mov
add
mov
addb
sub
add
bnd
xchg
push
sub
cmpsb
add
in
idiv
movsb
add
mov
push
add
sarb
hlt
imul
inc
or
cld
jo
nop
fs
sbb
aad
negl
dec
call
pop
cmp
sti
mov
and
add
inc
fldenv
add
jno,pt
inc
cmc
out
dec
mov
fldlg2
aam
stos
add
mov
movsb
add
sbb
pop
stos
xlat
adc
cmp
je
addb
fiaddl
add
sub
add
sbb
xor
add
adc
cmp
xchg
inc
rcrl
mov
inc
sub
sub
add
popa
lahf
sbb
ret
lret
into
sub
xchg
adc
mov
add
sub
insb
xlat
xor
add
mov
xchg
fstpt
dec
or
add
and
add
add
mov
add
cmp
jb
sti
xor
cmpsl
pusha
sbbl
add
sti
jnp
mov
add
mov
lret
push
stos
add
repz
jmp
push
lahf
test
mov
ret
addb
adc
add
scas
test
add
dec
xchg
push
jb
inc
test
add
add
lret
sahf
xor
jo
sub
movsl
cmp
push
or
cmp
mov
mov
add
loopne
adc
cld
pop
ja
int
jbe
jne
je
sldt
add
jecxz
ret
or
add
clc
dec
inc
test
gs
js
push
scas
push
add
sub
add
push
mov
add
pop
push
jae
push
movsl
mov
mov
call
jb
adc
lods
add
mov
pop
sahf
cmp
sub
add
mov
pop
push
add
jnp
cmp
nopl
push
call
add
jb
add
cmp
add
pop
dec
dec
mov
sub
subl
mov
add
sarb
mov
leave
dec
xchg
daa
mov
jg
mov
add
notl
std
mov
sub
xor
cltd
jnp
pop
loop
daa
sub
add
add
imul
add
jne
stos
add
push
mov
mov
repnz
js
aaa
dec
cmp
dec
arpl
add
int3
jnp
mov
sbb
lahf
scas
add
jmp
bound
add
insb
insl
data16
or
add
addr16
add
add
jmp
xchg
add
add
mov
add
nop
push
cwtl
adc
hlt
pop
xchg
add
xlat
adc
jno,pt
adc
test
push
push
imul
add
fwait
add
cmp
pop
push
adc
cld
mov
mov
sti
test
add
out
imul
push
cld
xor
movsl
pop
mov
insb
lock
outsl
cmpsl
stos
out
xor
add
mov
add
jne
mov
adc
mov
add
mov
push
cwtl
or
xchg
std
lcall
je
call
adc
push
jecxz
push
mov
aam
insb
loope
rcl
ret
push
stos
add
cwtl
cli
cmp
imul
cmp
add
pop
adc
lea
mov
add
out
in
jmp
ret
dec
mov
adc
lods
add
sbb
repz
pusha
add
mov
add
sub
add
add
sub
or
add
idivl
add
mov
xor
bound
shl
aas
jg
and
add
rorl
aaa
ja
lret
push
add
mov
add
mov
add
cmc
add
add
cltd
mov
pop
dec
ret
jae
addb
xchg
jnp
xchg
stos
add
mov
cmpsl
scas
add
adc
aad
add
cmpsl
call
push
add
hlt
hlt
leave
scas
ja
sbb
add
clc
mov
add
push
jmp
idivb
add
add
jns
sti
mov
push
xchg
dec
pop
jmp
sub
add
add
pop
arpl
cmp
cmp
add
inc
push
mov
hlt
or
add
mov
adc
adc
sbb
cwtl
mov
add
loopne
out
dec
mov
add
or
add
clc
pop
addb
leave
jne
cwtl
stc
data16
insb
sub
add
or
add
pop
add
add
jb
mov
add
pop
enter
push
add
call
jae
push
and
add
jbe
add
sub
cld
xor
jmp
ljmp
and
add
push
cmpsb
add
add
add
add
adc
mov
or
push
jle
repnz
stos
mov
and
add
stc
mov
jb
pop
mov
mov
divb
addb
pop
call
fs
repz
sarl
mov
add
sbb
add
pop
pop
fistps
jg
dec
loop
add
add
add
in
add
xor
ss
jl
mov
repnz
cmc
mov
add
jb
rcrb
dec
add
xlat
movsb
add
sti
negl
mov
or
push
stos
imul
mov
jg
add
fsubl
adc
jno
cmp
movsl
aad
out
inc
push
fdiv
xor
xchg
pushf
stos
inc
mov
xchg
sub
add
stos
add
lret
sti
sub
jno
adc
and
add
add
or
inc
jmp
dec
in
push
add
push
insb
mov
add
jo
fisttpl
cltd
sub
add
cltd
fldcw
sti
adc
out
ffreep
ss
add
sbb
sbb
add
add
aas
stc
cmpsb
add
push
adc
cmp
js
add
or
add
enter
pop
outsb
inc
jmp
sub
add
shlb
mov
jmp
sub
fisubrs
add
mov
stos
addb
cmpl
pusha
shl
xchg
fdivl
dec
mov
jbe
add
data16
lods
add
jle
dec
outsl
cmp
jmp
frstor
cmpl
add
ret
cmc
cwtl
mov
stos
add
mov
in
mov
jbe
lods
push
addb
add
add
rorb
add
cmpsb
add
or
add
sub
add
loopne
test
sub
jge
xor
call
add
addr16
pop
shll
ljmp
movsb
add
ficoms
add
mov
loopne
cmc
dec
cli
movsl
sahf
lret
mov
jbe
ficomps
pop
xchg
push
push
add
enter
in
inc
sahf
push
fwait
lahf
add
and
add
out
pop
dec
imul
xlat
mov
add
add
add
fwait
or
add
add
adc
lea
jne
fsubrl
dec
xchg
push
add
pop
popl
test
bound
test
adc
jbe
xchg
into
jbe
xor
add
mov
add
stos
xchg
lds
xor
lahf
or
add
add
out
dec
jmp
daa
pop
fwait
jnp
and
add
and
add
loope
inc
pop
sub
add
dec
fxtract
call
add
outsl
sbb
add
xchg
outsb
orl
jne
jae
add
sub
outsl
xor
js
mov
add
add
pop
adc
repnz
adc
rorl
jg
fldenv
rcrl
adc
add
and
add
jge
pop
cmp
sbb
push
dec
xor
dec
pop
mov
add
mov
popf
or
adc
add
jecxz
push
mov
add
add
xchg
gs
pop
int3
daa
and
add
shlb
arpl
iret
mov
mov
sbb
faddp
jecxz
push
or
scas
add
push
fstpl
adc
adc
test
add
mov
hlt
adc
add
add
add
add
dec
push
add
addb
cmc
mov
out
xchg
push
inc
or
mov
xchg
xchg
scas
fildll
add
pop
xor
add
push
enter
add
in
or
add
pop
lods
add
adc
pop
cltd
mov
xchg
cwtl
xchg
cld
loope
mov
popf
jns
cmpsl
push
sbb
add
xchg
mov
add
ret
mov
roll
or
add
dec
adc
mov
fnstenv
mov
add
add
mov
mov
push
repnz
jmp
iret
divl
push
mov
mov
and
add
lds
sbb
loope
pop
jae
sbb
jl
cmp
add
add
fnstenv
aam
push
je
pop
data16
add
add
cmp
sub
push
mov
ss
push
aas
jmp
add
insb
mov
and
add
mov
add
enter
das
pop
mov
sub
add
adc
add
loope
add
add
add
fisttpll
xor
add
cld
add
arpl
or
inc
nop
xor
faddp
xchg
add
dec
cmp
add
add
out
and
add
lahf
aas
jg
jle
add
mov
rcll
add
and
add
add
sub
add
sbb
xchg
and
sub
add
adc
mov
imul
xor
add
in
xabort
add
aas
and
shll
jmp
pop
fiaddl
icebp
xchg
aad
int
fs
mov
stos
nop
push
xchg
cmc
pop
push
jge
push
add
filds
lods
fucomi
jmp
das
flds
add
or
fisubs
scas
add
shrb
push
int3
filds
add
imul
mov
mov
fwait
inc
out
add
lods
adc
jb
rolb
pop
xchg
push
int3
push
add
dec
or
add
jnp
add
cmp
add
cmp
pop
cmpsl
loop
js
dec
mov
cmc
push
int
fs
in
icebp
and
add
sbb
dec
xor
cmp
negl
fs
daa
rclb
ljmp
add
sub
add
and
add
add
mov
add
loopne
pop
clc
test
mov
add
ja
cmpsl
leave
cmp
xchg
mov
repnz
add
ds
addb
sbb
add
sahf
push
testb
mov
add
inc
shrb
pop
mov
fsub
cmp
addb
movsb
add
sarl
inc
cmp
pushl
add
popa
xchg
pop
sub
add
in
insb
lret
out
or
push
mov
insl
imul
or
add
and
cwtl
jmp
push
sub
inc
cmp
mull
add
frstor
cmpsl
cmp
fstps
mov
inc
mov
add
lret
test
add
clc
push
cmp
xor
add
aas
and
bound
add
dec
add
add
dec
fldenv
sbb
lds
in
lds
cmp
stc
jae
cmc
dec
insb
and
add
jae
test
add
add
sbb
aas
loop
mov
add
clc
js
jecxz
insb
dec
addb
sbb
jge
shlb
clc
push
lret
add
add
add
xor
daa
mov
aam
or
add
add
pop
pop
test
add
out
test
sarl
std
sub
add
add
int3
jne
jnp
fstpt
jle
and
add
sub
add
add
loop
int
fsubrl
pop
repnz
iret
arpl
add
pop
ss
push
add
inc
stc
push
xor
sub
inc
loop
call
jno
pop
xchg
jmp
jb
leave
insb
pcmpgtd
sub
clc
enter
add
inc
ret
test
add
in
lods
add
cmc
mov
add
adc
add
icebp
iret
xchg
data16
add
xor
cmp
subl
add
add
cmp
add
xchg
add
jns
dec
or
mov
adc
loopne
mov
xchg
jbe
and
pop
or
add
leave
sbb
out
cmp
stos
pop
pop
jg
push
cmp
les
add
inc
sub
dec
ss
sub
shl
add
cwtl
insl
nop
mov
add
lahf
mov
add
add
xor
add
push
mov
add
fidivs
mov
stos
xor
std
sahf
fisttps
frstor
nop
loopne
mov
add
or
add
dec
dec
xchg
inc
iretw
mov
jnp
add
inc
movsb
add
addb
jmp
or
pop
out
add
filds
psubusb
dec
mov
add
xlat
jmp
insb
jecxz
popf
cmp
flds
ds
or
add
mov
add
test
add
addb
mov
add
js
out
sbb
add
imul
pop
add
add
rorl
cmc
push
mov
add
add
add
and
xor
inc
and
add
add
inc
sub
pop
out
repnz
mov
add
add
pop
cli
inc
jge
aad
fnsave
sbb
add
mov
add
inc
sbb
mov
stc
pop
in
into
add
adc
xchg
into
popa
push
test
lahf
fs
or
add
fs
dec
icebp
push
xchg
ret
mov
fbstp
lret
sbb
mov
shll
test
add
mov
add
repz
out
std
sti
mov
adc
movl
add
xchg
adc
ret
jno
lcall
fisubrl
mov
sub
fwait
xor
sbb
cmpsb
add
lret
scas
repnz
arpl
mov
jg
ret
add
add
jg
shr
daa
add
xchg
mov
mov
add
push
add
xchg
jp
mov
pop
stc
shl
add
jmp
add
push
scas
xor
aam
adc
shll
jmp
pop
xchg
pop
in
adc
inc
hlt
xchg
inc
imul
notb
out
push
fwait
add
add
cmc
lods
pop
jp
data16
add
adc
icebp
imul
add
loop
mov
jp
xlat
sbb
lock
mov
add
inc
into
mov
add
cltd
out
xor
add
lea
add
mov
aam
xor
mov
out
and
or
pop
mov
cmp
jmp
mov
popa
cmpsb
add
mov
add
nop
push
add
scas
and
daa
ret
add
pop
cmpsb
add
test
add
add
inc
mov
iret
int3
xor
hlt
xchg
jo
lret
mov
aad
jle
dec
insb
dec
inc
sbb
test
mov
jb
mov
add
mov
add
xchg
sbb
add
jl
mov
add
cmpsl
cmp
lret
std
pop
leave
ret
aas
fmuls
scas
gs
movsb
add
bnd
dec
cmp
mov
test
scas
popf
das
add
add
jge
out
sti
mov
add
pop
mov
int
mov
push
dec
ss
aam
mov
les
add
lods
add
gs
cmp
push
cmp
aaa
in
pop
cmp
jl
mov
in
movsl
data16
mov
add
add
rorl
add
cmpsb
add
jae
mov
add
jge
xchg
pop
out
leave
mov
mov
add
into
pop
xchg
add
cmc
jb
loope
sbb
ja
add
dec
cli
loopne
into
nop
ret
das
cmp
mov
add
hlt
mov
pop
lods
add
sarl
repnz
dec
iret
push
mov
lahf
jg
pop
in
lods
push
jbe
xchg
cmp
bound
add
addb
out
sbb
add
pop
mov
add
scas
jmp
mov
add
push
add
xor
add
add
xor
inc
sahf
daa
cmp
add
push
inc
jbe
xor
jg
ljmp
add
pop
ss
mov
and
add
clc
aaa
rcrl
xchg
push
loop
and
add
mov
cli
mov
ret
add
movsb
add
mull
pop
mov
mov
add
push
lods
add
mov
push
sub
add
inc
popa
dec
adc
fisubrs
add
xchg
inc
mov
nop
in
mov
mov
pushf
inc
out
add
add
cmp
scas
add
pop
mov
test
add
and
add
adc
test
cmp
jmp
adc
push
popa
dec
sahf
lret
add
nopl
adc
sbb
jg
add
pop
xor
cmp
int
add
sub
add
and
add
mov
cmp
stos
add
aaa
lret
call
inc
mov
movaps
add
add
inc
movsl
xchg
add
xchg
or
push
stos
add
sti
shll
les
jns
mov
add
clc
fisubs
test
or
add
mov
adc
iret
mov
adc
add
add
add
lock
adc
dec
sbb
add
add
dec
in
lahf
shll
add
mov
int3
stos
and
outsb
sub
add
lock
inc
sub
add
add
repnz
add
xlat
dec
add
push
fwait
xor
push
push
add
jns
pop
rolb
add
xchg
les
std
jnp
loope
insl
dec
addb
xchg
dec
enter
jle
int3
nop
lods
loopne
shll
movsb
add
sbb
jge
mov
add
pop
jbe
leave
aas
js
out
fdiv
loopne
cltd
xor
add
loopne
adc
ret
add
lea
neg
dec
xor
in
les
dec
pop
or
add
lods
add
fs
add
andl
add
cmc
mov
test
add
cmp
loope
dec
mov
add
add
pop
sub
add
add
popa
and
add
xor
adc
dec
fisubrl
and
add
cmp
xor
add
std
xchg
jno
repz
add
sti
and
sti
mov
xor
mov
movsl
jbe
add
insl
jne
loopne
insb
icebp
xor
jecxz
and
sti
popf
add
add
loop
add
sub
pop
ss
fs
mov
xor
std
xchg
jns
push
jl
push
add
flds
add
movsb
add
out
cli
push
cmp
sbb
out
xchg
stos
dec
ja
cmpsb
add
outsb
pop
mov
int
add
fsubr
fdivrs
addb
insl
add
dec
mov
add
pushf
rcll
mov
add
int3
outsb
inc
cltd
popf
jg
rorl
add
cmp
test
push
add
sti
sarl
in
in
mov
dec
dec
imul
in
sub
add
aaa
inc
mov
int
or
add
ret
add
mov
add
push
push
push
add
jle
test
sti
mov
mov
add
sti
mov
xchg
inc
pop
pop
call
ja
jae
jbe
int3
cli
int3
popa
pusha
adc
cld
xor
push
add
pop
inc
sti
js
fwait
add
or
add
fldcw
mov
mov
dec
fcom
and
add
add
add
fwait
test
hlt
incb
pop
outsl
addb
mov
dec
and
add
jecxz
mov
insl
or
add
addb
and
add
and
add
add
add
adc
sub
add
mov
add
rep
xor
fwait
cwtl
incl
add
scas
add
aad
push
or
add
mov
clc
shl
xchg
aaa
jnp
mov
add
cmpsb
add
or
pushf
xchg
fdiv
and
mov
add
xchg
dec
data16
mov
clc
nopl
add
add
xchg
add
add
sub
add
xchg
sub
pop
dec
lods
add
inc
xlat
xchg
adc
lods
add
fidivrl
stos
add
roll
test
add
or
add
shll
xabort
ss
addb
insb
push
pop
arpl
addb
outsb
mov
inc
nop
out
imul
add
jno
add
mov
add
inc
push
mov
lock
in
jg
add
xor
out
or
and
mov
pop
xor
aad
test
fs
out
fiaddl
xorl
xor
pop
dec
fcmovnbe
mov
mov
add
fildl
mov
add
repz
adc
test
add
xchg
xchg
aas
test
inc
addl
movsb
add
dec
mov
hlt
adc
bound
add
repnz
das
loop
add
test
add
add
mov
mov
add
or
inc
outsb
ret
add
inc
mov
dec
pop
scas
sti
pushf
cld
test
add
or
movsl
or
add
sub
add
clc
mov
popf
fmul
or
add
mov
and
add
pop
pop
sarl
inc
arpl
insb
movsl
rcr
push
xor
fcoms
or
add
lea
shl
mov
fistpll
out
inc
bound
pop
lahf
push
ret
add
movsl
jae
add
pop
xor
sbb
cmp
pop
roll
aaa
xor
xor
add
push
add
rorl
add
push
sbb
repnz
add
dec
mov
out
jne
mov
mov
pop
mov
pop
shl
pushf
inc
cmp
push
add
sub
cmpl
add
sub
add
add
add
add
stc
imul
xor
jno
aas
and
fwait
sub
add
sbb
jmp
or
push
mov
dec
addl
sahf
jl
outsb
add
pop
in
iret
dec
iret
pop
pop
pop
mov
add
mov
mov
add
icebp
sbb
add
aas
push
sub
add
shll
jecxz
mov
add
sub
mov
add
push
add
jge
add
out
inc
ret
pop
pop
inc
sbb
cld
xchg
or
add
jl
ret
mov
stos
add
sub
add
add
iret
fimuls
mov
sbb
xchg
push
outsl
pop
adc
mov
push
stc
push
fiadds
jg
mov
dec
and
pop
mov
insl
sub
add
sub
add
ret
hlt
mov
or
nop
pop
cmc
xor
sahf
test
add
sbb
pusha
jp
lret
ds
push
pushf
cli
jo
add
in
pop
js
mov
add
out
bound
mov
add
push
add
pop
cmc
or
int
iret
movsb
add
pop
mov
in
xlat
xor
ss
in
lods
add
sbb
cld
mov
jmp
add
daa
pushf
mov
mov
add
gs
xchg
lock
or
mov
or
add
mov
mov
in
insb
repz
in
push
pusha
das
lahf
ja
add
sub
add
das
cmc
sub
add
sar
ss
push
push
fcmovb
xor
add
ljmp
aam
pop
jnp
adc
dec
fs
aad
add
and
add
les
ret
mov
lcall
sti
sbb
and
add
jle
inc
dec
jge
inc
sub
add
adc
je
mov
inc
mov
jns
out
xchg
jb
popf
pushf
and
add
fcmovne
lret
icebp
int
jns
and
sbb
addb
push
or
add
xchg
inc
mov
subl
inc
or
add
addr16
outsb
idivl
lret
mov
test
add
das
loopne
addr16
sbb
hlt
xor
dec
addb
push
mov
xchg
popf
aam
add
adc
aaa
dec
in
adc
into
fistl
pop
jnp
les
add
ret
add
insb
add
out
sub
add
xchg
je
out
sbb
add
pop
mov
add
cmp
mov
add
popa
pop
pop
mov
cmp
aas
fsts
sbb
fadd
in
pop
lock
add
in
sahf
xchg
out
jge
and
add
clc
lret
mov
in
psllw
jo
add
sub
add
out
fs
jp
add
and
dec
shll
jmp
inc
test
out
imul
repz
sysenter
out
sub
add
rclb
fcoml
mov
insb
bound
addb
cmpl
add
addr16
dec
xor
add
fwait
add
pop
and
pop
jmp
aam
jo
pop
jmp
and
insl
sub
fcoms
add
cmp
fnstcw
push
subl
jmp
ret
sti
sbb
dec
shrb
rcrb
dec
cmpsb
add
cwtl
test
add
test
dec
adc
aad
outsb
sub
add
pop
into
lcall
add
add
adc
add
sub
add
negb
test
adc
pop
dec
cld
pop
add
add
pop
xchg
push
leave
sbb
jmp
xchg
out
push
fdivp
jbe
jle
mov
add
pop
mov
add
imulb
add
lahf
adc
jle
scas
add
rcl
loopne
dec
dec
lret
lahf
pop
in
ret
push
push
pop
outsb
mov
add
add
add
cmp
add
mov
add
mov
add
adc
add
pop
xchg
ljmp
sub
add
stc
outsb
lcall
add
dec
jbe
add
and
lods
add
stos
stc
in
pop
jne
add
push
dec
pop
mul
les
inc
test
push
inc
das
outsl
roll
add
outsl
fstps
lret
ds
add
insb
rolb
inc
decl
dec
in
and
dec
push
scas
add
sbb
add
xor
cli
jbe
pop
xlat
or
add
loopne
xchg
sbb
pop
xchg
ljmp
sbb
pop
arpl
cwtl
sbb
jle
sbb
add
cli
outsb
stos
pop
mov
jp
in
mov
sub
add
add
add
pop
add
sub
sbbl
inc
xchg
xor
push
add
cmpsl
mov
add
inc
pushf
aas
push
in
imul
and
add
add
mov
gs
pop
mov
add
push
call
and
adc
cwtl
mov
sahf
stc
ljmp
ss
dec
pop
fs
mov
add
js
add
add
sub
pop
add
add
add
add
xchg
add
inc
lcall
add
popfw
aam
push
sti
mov
add
add
mov
add
add
mov
inc
jnp
out
jns
add
add
movsl
mov
lcall
nop
cwtl
lods
add
add
movsb
add
xchg
addb
mov
or
add
jecxz
loope
add
jno
dec
cmp
adc
stc
mov
fidivl
or
add
mov
adc
mov
add
inc
jle
mov
test
add
push
mov
jg
adc
jmp
add
dec
xchg
aam
and
subl
out
imul
add
arpl
cmp
xor
out
into
add
mov
loope
sbb
popf
out
mov
add
rcrl
xor
xchg
sti
mov
jns
mov
sub
or
add
push
ficoml
pop
pushf
mov
jp
mov
add
push
shrb
add
and
mov
xchg
mov
add
adc
pop
cmp
xor
out
or
push
test
mov
add
inc
mov
mov
add
xchg
les
add
lea
dec
lret
mov
repnz
adc
add
in
ret
sbb
add
test
add
inc
add
add
pop
push
jns
sbb
add
jno
add
pop
cmp
xchg
mov
mov
lea
ds
jle
add
mov
loope
insb
ret
and
add
or
add
and
add
imul
add
add
callw
hlt
ljmp
add
lods
xlat
xor
add
andl
cmp
cmp
outsl
sbb
add
hlt
xor
jns
pusha
imul
nop
push
imul
sar
pop
rorl
sub
repz
addb
mov
add
imul
mov
inc
xchg
lock
xchg
adc
adc
lret
pusha
mov
sbb
lods
add
mov
test
add
sub
add
push
subl
xlat
in
push
xchg
stos
add
sub
data16
xchg
movsb
add
addb
loopne
push
repz
lahf
dec
call
cmp
mov
pop
rcll
cltd
nop
mov
add
adc
add
jae
add
mov
in
adc
add
push
xor
push
add
leave
and
add
test
add
jge
add
sahf
loope
jbe
rolb
jecxz
scas
add
cmpsb
add
push
mov
add
mov
add
add
add
or
dec
dec
mov
into
add
push
pop
ss
icebp
repz
add
ret
mov
mov
addb
lods
add
adc
add
mov
add
jecxz,pt
add
mov
xor
loopne
lahf
mov
aad
in
addr16
imul
xor
add
xchg
leave
or
add
or
add
dec
jnp
adc
mov
sub
and
add
test
add
int
sub
add
inc
cmpsl
inc
in
stc
outsb
sar
fstpt
ljmp
adc
dec
shl
jge
dec
bound
inc
lcall
jg
pop
xchg
test
add
je
push
jmp
sub
and
add
mov
incl
outsb
imul
sbb
xchg
cltd
stos
and
adc
loop
clc
shlb
push
out
jmp
icebp
lods
add
mov
loop
push
xchg
add
push
cmp
add
leave
test
add
inc
movb
pop
or
add
lcall
mov
add
aaa
mov
add
push
fwait
xchg
pop
inc
xchg
push
insb
mov
add
sbb
add
or
mov
movsb
add
jns
add
in
mov
add
mov
add
cmp
add
push
add
add
imul
test
mov
aam
iret
stos
add
sar
mov
cltd
pop
mov
add
add
leave
loope
or
add
add
loopne
dec
sub
add
rorl
jns
fbstp
add
xor
aam
adc
mov
insb
pop
out
pop
out
sbbl
add
lock
repnz
add
out
push
cmpsb
add
ja
pop
addb
insb
ja
push
add
subl
cmpsl
loopne
add
xor
add
add
call
adc
jno
lret
mov
jl
mov
std
mov
stc
mov
jge
rolb
insb
out
lea
mov
pop
dec
sub
add
add
add
adc
add
mov
add
sub
add
add
cmp
add
stc
cwtl
lods
rclb
shll
add
add
mov
pusha
fistl
rorb
add
addb
adc
mov
or
add
mov
mov
add
jae
mov
add
popa
in
add
adc
add
cmpsb
add
mov
cmp
pop
jo
add
out
outsl
xor
add
push
add
add
jmp
fisttpl
xchg
jp
jge
fisttpl
add
mov
sbb
or
and
gs
mov
add
or
add
fisubl
add
cmp
sub
jmp
js
data16
add
dec
insb
sbb
mov
insb
sahf
pop
push
and
add
push
add
push
jle
cmp
add
mov
add
push
stos
add
scas
add
and
lock
add
fisubs
mov
add
add
sbb
add
sbbl
jns
insb
fwait
adc
cld
mov
sub
add
roll
adc
cwtl
xchg
mull
add
dec
aas
xchg
add
mov
mov
dec
clc
scas
add
imul
repnz
lahf
pusha
mov
lcall
push
add
mov
add
fdivs
sub
add
test
add
mov
adc
add
in
push
or
add
push
jmp
jl
inc
push
cmp
cmc
xchg
addb
add
add
add
pop
sub
enter
add
xchg
fdivl
pop
or
add
cwtl
aaa
shlb
aam
add
add
cmpsl
mov
xchg
in
add
lods
icebp
mov
loop
mov
add
rolb
test
add
adc
lret
adc
sbb
add
pop
add
xchg
stos
jne
imul
sbb
arpl
in
push
add
jl
jmp
sti
ja
insl
sub
add
imul
ja
add
cmp
lock
pop
jg
mov
add
mov
add
xor
test
add
jmp
sbb
mov
pop
mov
popf
andl
in
jb
popf
jns
mov
sub
add
pop
xchg
xchg
add
pcmpeqd
or
add
add
add
pusha
in
out
mov
add
aaa
sbb
addb
test
jo
fisttpll
test
repz
sar
adc
rolb
push
mov
js
add
sbb
sti
jge
cmp
ror
mov
or
sbb
iret
push
inc
sub
ds
xchg
add
add
add
cmc
test
add
scas
add
mov
lds
add
xor
xor
add
or
add
cmp
xlat
ja
pusha
insb
jnp
stos
stos
add
mov
add
addr16
add
push
add
sub
sbb
sub
mov
and
add
add
push
das
repz
aas
push
mov
add
pop
cmpl
sti
push
aam
into
mov
or
fnstsw
add
jmp
adc
add
call
add
pop
mov
mov
sub
pop
cmp
ror
push
rcll
lods
add
jns
shrl
cmp
push
xchg
fildl
inc
pusha
divb
add
cmp
jp
nop
sub
mov
jmp
out
clc
mov
add
outsl
into
mov
sahf
lret
xchg
fs
add
add
insl
imul
ret
stos
mov
jp
movsl
add
add
mov
mov
mov
jnp
push
add
xor
pop
cmpsb
add
rcr
jb
cmp
mov
jg
mov
add
imul
push
pop
dec
loope
add
and
add
push
sahf
jg
xor
sbb
sbb
xchg
cwtl
xor
pop
adc
xchg
cmp
and
add
pop
mov
in
addb
xchg
push
jp
add
in
cmp
loopne
stc
mov
or
jecxz
inc
lret
push
ss
jp
into
push
test
add
int
in
mov
add
in
movsb
add
jb
subl
add
add
int
aad
sbb
add
rcl
add
imul
std
cmp
jmp
ja
in
pushf
dec
aad
mov
vpaddusb
loope
dec
mov
pop
pop
jno
add
scas
add
jmp
mov
dec
in
lock
sub
add
xchg
and
add
and
add
xor
std
push
dec
roll
add
lret
or
jmp
fldl
and
dec
mov
loopne
mov
movsb
add
cmpsb
add
fdivl
add
das
rolb
add
fsts
mov
iret
jecxz
add
cld
fmull
inc
out
sahf
jg
add
ret
loop
imulb
mov
inc
xchg
fs
xor
add
les
das
inc
aaa
idivb
push
adc
sbb
dec
push
ja
xchg
fbstp
add
shlb
add
xor
add
test
add
add
sbb
cmp
add
xchg
out
fstpl
ret
mov
int3
push
add
lcall
cmpsl
pop
push
jnp
pop
fsubrl
mov
add
xor
ffree
sbb
and
add
pop
cwtl
out
gs
push
sbb
mov
add
add
popa
fwait
mov
add
outsb
ret
xchg
in
loop
aas
fnsave
jo
sbb
push
add
ret
cmp
inc
sbb
xchg
sbb
iret
dec
xchg
add
mov
roll
push
add
cmp
add
les
mov
add
add
aad
aam
out
lds
das
out
fstl
add
xor
sub
sti
rcl
jp
xorl
cmp
outsl
push
fistpl
insl
fxch
sub
pop
mov
add
mov
cmp
add
xchg
adc
nop
pop
pop
dec
out
mov
inc
xchg
sbb
iret
sbb
jae
scas
add
mov
or
add
leave
cmp
movsl
int
aad
push
inc
cmp
lahf
fwait
cmpsb
add
mov
dec
scas
add
mov
add
mov
scas
andl
ja
add
repnz
xor
inc
iret
or
add
inc
and
add
add
sarb
add
mov
add
aas
shlb
dec
add
xor
mov
add
mov
xor
push
add
mov
jg
in
cmp
mov
xchg
fldt
add
jle
mov
and
add
mov
add
jg
daa
rorb
mov
mov
add
mov
jbe
add
add
outsl
dec
sbb
dec
mov
clc
xchg
out
pop
mov
inc
aam
xchg
shrl
add
aaa
cmpsl
adc
xchg
pop
test
xor
clc
xchg
xchg
jne
pop
add
scas
sub
outsl
cmp
in
add
out
cmpsb
add
imul
inc
jl
jle
push
lahf
repnz
inc
mov
add
xor
sarl
push
add
mov
movsb
add
jl
add
add
mov
pop
adc
add
cltd
xchg
jae
jb
add
push
fsubrs
cmp
les
mov
add
xor
add
mov
mov
add
mov
test
cmp
aaa
jmp
movsb
add
into
ret
int
add
push
add
loopne
or
add
shrb
cmpsb
add
dec
dec
pop
jns
xchg
add
les
push
xor
test
cmp
lds
push
into
int3
cmpsl
in
cmp
mov
add
inc
cmp
mov
add
dec
ljmp
add
cmp
imul
clc
jne
fnstsw
sub
jbe
movsl
jne
mov
add
pop
das
mov
repnz
in
add
iret
shll
sub
add
test
add
xor
mov
and
lcall
xlat
fsts
and
add
stos
sbb
in
out
in
push
pop
js
inc
cmp
scas
add
cmp
add
cld
icebp
sahf
ret
xor
cmpsl
sub
add
int
jecxz
add
add
add
pushf
pop
cwtl
fstpl
jne
sbb
not
dec
adc
or
add
inc
jecxz
add
add
pop
pop
std
scas
add
jmp
daa
jecxz
lds
inc
insb
pop
out
rolb
push
rorl
add
les
shrl
shrb
add
fucomp
fcmovnbe
test
add
out
arpl
xchg
mov
add
add
mov
adc
shll
rcrl
mov
add
enter
pop
test
add
pop
sbb
mov
add
add
insl
inc
imull
in
or
add
xchg
add
shlb
xor
sarb
inc
push
adc
outsb
jbe
mov
xor
hlt
shll
addr16
in
sahf
mov
pop
loope
pop
cmp
rcrb
add
jnp
inc
mov
std
rcrb
call
sbb
push
loop
lret
sub
pop
xchg
jle
in
ds
sub
scas
mov
inc
lods
add
mov
push
bound
jmp
mov
push
loopne
jecxz
fnstenv
mov
jg
push
pop
pop
mov
cmpsl
cld
mov
dec
fbld
sbb
in
sub
add
inc
stc
and
add
add
add
mov
addb
movsl
ret
add
cmp
call
add
leave
inc
int3
mov
in
shrl
add
adc
sti
jmp
ljmp
adc
sub
adc
xchg
cmp
push
add
xchg
add
sarl
int
sub
add
xchg
enter
test
xchg
les
add
push
cmp
xchg
iret
jle
movsl
adc
add
add
jae
dec
mov
inc
xchg
int3
add
add
xor
mov
add
aad
popa
lea
imul
add
jno
mov
add
pushf
mov
into
sbb
xchg
mov
hlt
and
pop
out
jecxz
addb
pop
or
ss
add
jno
jg
or
add
loop
add
icebp
xchg
popf
mov
ret
push
add
jp
inc
ds
dec
out
js
loope
nop
adc
and
xchg
out
ret
add
addb
aad
mov
ret
mov
xchg
out
push
add
lock
mov
add
sub
or
mov
jp
mov
and
dec
aas
mov
mov
rorb
pop
cmp
dec
stos
add
and
inc
push
fwait
mov
add
pop
loop
dec
adc
dec
pop
cwtl
ss
pop
dec
add
push
xor
pop
and
add
push
js
xchg
arpl
dec
lds
xchg
mov
dec
xor
lea
int
dec
ja
add
inc
andl
push
add
loope
jl
jmp
sahf
bound
add
dec
jp
mov
add
inc
ja
imul
add
sbb
test
add
jecxz
int3
loope
repnz
rorl
jnp
inc
sti
xlat
stos
add
xchg
inc
sbb
sub
add
xchg
add
cmpsb
add
fmuls
add
call
add
cmp
aad
lds
insb
jnp
and
in
insb
popf
mov
sub
hlt
into
mov
test
add
add
movsb
add
jmp
aad
sbb
and
add
add
cwtl
hlt
or
add
imulb
add
dec
ds
loope
sub
add
jmp
add
push
shll
dec
cmp
push
adc
add
jp
add
jae
push
mov
adc
iret
jne
mov
int
imul
and
add
or
pop
pusha
xchg
cld
adc
push
add
faddp
mov
add
mov
fisubl
hlt
ret
jbe
ret
cmp
out
jo
fwait
negl
add
lret
addr16
in
daa
out
sbb
add
pop
jno
enter
dec
sub
add
icebp
mov
pusha
loop
or
add
bound
cmp
add
mov
test
add
leave
mov
add
lret
inc
xor
cmc
cmpsb
add
xor
sub
mov
fcompl
or
add
add
jp
dec
mov
or
jg
push
cmpl
add
dec
mov
add
jl
leave
movsl
sbb
xor
xor
push
les
out
sbb
add
in
into
addb
inc
leave
into
int3
scas
cld
iret
jne
loop
or
add
add
add
sub
pop
sbb
jb
cmp
add
xor
cmp
cmp
fcom
pop
js
maxps
jg
sbb
and
add
imul
pop
punpcklbw
push
add
sub
add
fdivl
xchg
loop
sub
sub
add
jns
add
lret
insl
mov
add
loope
add
roll
sbb
add
out
push
push
push
mov
and
add
popf
mov
fdivs
push
ds
mov
add
pop
inc
cmpsb
add
jne
nop
mov
cmc
scas
add
xchg
xor
sbb
mov
add
leave
xor
pushf
adc
sahf
addb
jmp
push
add
imul
in
xchg
dec
inc
subl
leave
xlat
xor
inc
lods
add
stos
test
add
rcl
dec
ss
xchg
pop
xor
add
add
std
inc
xor
stc
xchg
pop
mov
cld
dec
and
add
sbb
push
mov
or
add
adc
xchg
add
jbe
addb
pop
ja
add
or
add
add
push
sti
orl
add
and
add
dec
fsubr
aas
push
popf
and
add
add
mov
mov
add
push
aaa
xchg
ret
dec
mov
sti
mov
pop
jle
xor
push
jae
repz
pop
dec
fnsave
popf
mov
add
icebp
repnz
enter
mov
dec
xchg
fdivl
mov
add
dec
mov
sbb
mov
mov
mov
leave
and
add
push
jp
add
inc
push
dec
jl
add
xlat
out
xor
pop
xchg
scas
add
adc
add
jne
mov
add
push
add
popa
sarb
mov
add
out
add
fisubs
add
jp
ja
cmp
jns
cmp
fsubs
sbb
mov
sti
fiaddl
repz
pop
aas
fidivrs
mov
pop
push
add
lds
pop
cmpsl
pop
mov
mov
leave
addr16
or
add
popa
and
add
popf
sub
add
add
sbb
xchg
jg
add
jp
sahf
jns
sbb
out
mov
cmp
add
mov
imul
jno
je
or
add
bnd
xor
sahf
imul
ja
jge
cmpsb
add
testb
xchg
enter
sbb
cmpsl
fucomp
jp
fidivl
add
or
add
div
pop
fidivl
rcll
pop
pushf
pop
mov
add
or
add
inc
xchg
nop
inc
add
insb
adc
add
or
mov
sbb
add
sub
fisubrl
movsb
add
test
add
mov
add
stos
cmp
sbb
jo
pushf
fwait
loope
out
push
clc
xchg
jle
or
jle
pop
xchg
mov
sbb
mov
mov
adc
add
mov
sahf
sarb
add
lds
jb
add
add
add
add
pop
scas
add
mov
sub
add
jp
jg
jle
inc
adc
jns
ja
cli
pusha
shrl
push
adc
arpl
fimuls
shr
pushf
stos
add
mov
cwtl
fsts
notl
add
cli
mov
lret
inc
xchg
hlt
dec
scas
add
cmp
insb
int
sbb
lcall
add
std
sub
add
out
sbb
loop
add
sbb
fsubs
add
scas
xchg
push
add
popf
mov
insb
nop
outsb
aaa
cltd
xor
mov
add
mov
addb
jno
add
imul
imul
add
xchg
add
push
add
je
dec
loope
shll
in
repnz
jno
mov
xlat
push
fsubrs
add
dec
addb
rcl
and
xchg
and
add
call
or
push
add
add
ja
sahf
loop
add
mov
add
sahf
and
into
or
add
adc
inc
repnz
add
inc
mov
pop
mov
add
add
ja
dec
inc
jnp
push
bound
inc
jns
sbb
sub
cmpsb
add
jle
aad
xor
iret
outsb
and
add
mov
dec
push
add
mov
add
jns
push
add
inc
pop
inc
cld
jo
sar
pop
inc
lcall
imul
jne
sbb
out
pop
in
xchg
add
pop
add
add
stos
add
jge
add
rcll
add
xchg
call
sub
add
inc
mov
add
adc
add
mov
ds
xorl
jle
jne
jle
add
sbb
out
nop
dec
movsl
pop
mov
mov
lods
add
and
add
mov
add
divl
les
adc
cmc
jno
add
adc
jns
xor
std
pop
test
add
insl
addb
lcall
xchg
jecxz
je
mov
add
mov
mov
add
rorl
dec
xor
mov
jno
scas
mov
cmpsb
add
loopne
cmp
add
inc
push
add
aad
push
add
int
cmc
insl
leave
pop
push
cmpsb
add
or
add
adc
ficoml
int3
xlat
mov
add
inc
adc
fwait
xchg
mov
or
inc
leave
cmp
test
add
sub
add
or
add
inc
add
imul
ss
or
add
or
add
add
pop
adc
sbb
fstps
jnp
pop
leave
fs
shll
add
add
and
add
aas
mov
aaa
insb
out
push
push
push
add
iret
xor
imul
add
and
add
push
adc
add
sahf
pushf
repz
ja
add
add
in
jo
mov
sarl
add
push
cltd
cld
add
and
add
scas
push
mov
add
xchg
mov
mov
xchg
jnp
fiaddl
lcall
mov
loope
call
in
mov
cmpsb
add
icebp
arpl
xor
cwtl
mov
xchg
divb
pop
push
aad
aam
lahf
leave
or
add
add
fsubrl
add
std
fwait
pop
outsl
pop
in
inc
jnp
add
jne
sbb
inc
xor
jno
sbb
mov
add
add
rcr
icebp
xchg
outsb
cli
rcrb
dec
lds
or
add
je
cmp
daa
addr16
fsubrp
stc
shrb
ds
aas
stc
xchg
adc
adc
shlb
dec
push
jne
add
mov
jne
mov
add
dec
or
add
stos
add
int3
mov
xor
pushf
insb
add
add
mov
mov
add
add
sahf
or
add
add
add
and
add
push
loope
mov
jns
cmp
scas
mov
mov
add
fs
add
add
test
add
add
mov
add
jp
lcall
add
add
add
push
add
and
add
flds
add
dec
sbb
add
xchg
out
mov
xchg
or
add
out
dec
mov
das
fistl
ljmp
add
push
inc
sub
add
int
jb
cmp
xchg
mov
add
add
add
aas
in
xchg
dec
cmp
add
add
add
push
add
xchg
inc
pop
mov
add
lea
fwait
cmp
fdivs
loopne
push
test
mov
add
add
ja
push
jp
add
lahf
push
add
mov
bound
wbinvd
scas
mov
mov
lret
cmpsl
push
push
push
adc
add
cmp
test
add
imul
outsl
test
cmpsb
add
lods
sub
add
aam
mov
add
mov
rcl
adc
add
mov
push
aas
sub
imul
cmp
lods
test
add
adc
int3
add
add
xchg
or
add
xchg
mov
out
push
fisttpl
icebp
push
push
add
adc
sub
add
test
aad
add
stc
dec
push
repnz
das
mov
inc
mov
insl
push
push
sbb
pushl
add
push
add
mov
add
or
add
shlb
xchg
push
addb
xchg
add
pop
mov
lret
test
add
out
jmp
lahf
out
insb
mov
xchg
arpl
cmp
loop
add
dec
mov
add
fbstp
sub
add
out
and
add
mov
add
cli
xchg
fwait
jo
notb
out
add
xor
mov
add
rcrb
pop
jo
xor
mov
gs
push
test
add
lcall
sbb
inc
hlt
pop
in
sbb
add
add
sbb
shlb
test
mov
add
mov
mov
xchg
add
or
outsb
mov
shlb
enter
enter
dec
and
add
ljmp
add
pop
inc
into
testb
int3
pop
and
add
add
test
stos
add
inc
or
add
in
addr16
add
add
xchg
sti
mov
sahf
inc
rcrl
add
add
add
arpl
add
pop
inc
aad
xor
or
add
add
cwtl
mov
lahf
and
add
pop
dec
insb
xchg
sti
cmp
xchg
dec
pavgb
xchg
imul
xor
mov
mov
adc
jmp
fsubr
fs
lret
popf
xor
add
pop
leave
xor
push
lcall
sub
add
outsb
int3
inc
push
pushf
jecxz
xchg
mov
inc
pop
test
add
std
cltd
sbb
sarl
mov
or
pushf
pushw
or
shlb
mov
pop
lret
xor
or
add
xchg
clc
cmp
add
addb
insb
inc
pusha
fsub
pop
jmp
add
out
std
mov
add
mov
adc
jle
sbb
fwait
mov
repz
or
pusha
xor
dec
mov
add
repz
adc
add
mov
outsl
insl
mov
add
jno
push
add
cmc
cli
imul
add
add
mov
add
and
add
imul
fbstp
add
fsts
or
add
add
mov
mov
add
mov
js
xchg
bound
xchg
hlt
ffreep
sarb
dec
cmp
add
inc
dec
xchg
ret
inc
xchg
xor
inc
xchg
ret
sub
add
add
add
mov
jmp
sbb
mov
add
imull
add
push
pop
dec
pop
js
jle
std
stos
add
sbb
add
mov
addb
fs
cmpsl
mov
std
sbb
loope
fcompl
add
add
in
mov
add
out
lods
test
int
mov
pushf
popf
push
stos
add
roll
sub
or
lcall
push
add
mov
add
sbb
adc
mov
cmp
pop
ss
out
sub
add
outsb
fbstp
outsl
repz
dec
fsubl
add
jl
push
sbb
jmp
jmp
clc
mov
add
add
sbb
repz
jl
jp
ljmp
mov
mov
fsubrl
jmp
aas
sbb
not
mov
add
pop
mov
add
dec
pushf
mov
in
pop
leave
cmp
add
add
adc
out
xor
testb
ret
xor
or
jl
add
add
jns
add
mov
imul
inc
addb
cmc
add
jno
push
xlat
lea
add
mov
negl
jb
sbb
add
notb
dec
imul
or
add
add
daa
sarl
adc
imul
sub
lcall
jp
jle
mov
jb
outsb
add
loope
outsb
cmp
xor
jle
add
fwait
sub
add
mov
mov
or
dec
or
add
loopne
dec
sbb
cmp
add
je
in
and
xchg
pop
shrl
add
popa
mov
lcall
dec
test
add
mov
std
inc
xor
push
shrl
xchg
loopne
int3
pop
lcall
sbb
sub
cmpsl
or
push
add
in
cli
fwait
shrl
jno
sbb
enter
push
ss
push
push
rcrl
mov
pusha
ds
add
push
xchg
cmp
mov
mov
add
addb
and
add
dec
adc
add
in
pop
sub
aad
inc
into
lock
mov
push
add
ficoml
sbb
add
jno
les
add
mov
cwtl
jnp
and
add
mov
int3
fdivrs
loopne
pop
lods
push
inc
mov
add
add
mov
and
sbb
cmp
test
xchg
loopne
test
add
add
repnz
adc
xlat
into
and
mov
aam
and
fnstenv
arpl
add
das
lock
add
cmpsb
add
lahf
mov
sub
cmpsb
add
inc
cmc
pop
mov
push
push
push
addb
sub
cld
fisubl
add
insl
sbb
imulb
adc
add
cmp
and
add
dec
mov
inc
lcall
add
pop
stos
xchg
mov
div
push
add
add
ljmp
add
push
stos
mov
add
pop
xchg
add
rorb
xor
jg
pushf
in
jmp
nop
push
addb
cmc
adc
inc
jle
int3
movsb
add
push
push
mov
mov
dec
ficoml
cmp
sbb
add
leave
mov
and
add
in
frstor
add
aas
call
fwait
aas
mov
xor
add
dec
shlb
add
pop
test
add
sbb
inc
addb
enter
mov
add
movsl
jbe
xor
iret
cmovo
ret
test
or
xchg
mov
mov
movsl
and
jl
lea
xchg
scas
into
pand
aam
pop
ljmp
lret
or
test
add
jl
fbstp
add
fists
sbb
xchg
cmp
add
adc
out
xchg
hlt
fldenv
add
mov
cmp
insb
xor
jae
add
pop
push
add
add
add
popa
outsb
fdivr
lods
add
xor
lock
ficoms
icebp
popf
jae
lret
mov
bound
inc
into
fisubrs
add
add
or
add
sub
add
iret
daa
push
mov
add
xlat
cmpsb
add
aaa
sbb
ret
add
test
add
in
loopne
mov
mov
or
add
test
add
add
add
std
mov
insl
les
xchg
push
mov
add
add
enter
pop
mov
fldcw
add
pop
push
add
xor
push
cmpsb
add
sbb
shll
pushf
lret
dec
lods
js
mov
rcrl
mov
add
add
jnp
mov
mov
add
add
cwtl
pop
xchg
and
scas
fildl
sbb
and
add
or
lods
pop
in
sbb
xchg
movsl
mov
shlb
aaa
movsl
and
add
cmp
push
gs
dec
push
ret
outsb
imul
sbb
cmp
mov
divl
fstl
push
add
imul
cmc
pop
sbb
imul
adc
inc
lcall
jl
clc
and
add
fisttpll
add
jl
xchg
sub
add
jmp
and
add
add
lds
add
test
xor
fadds
inc
cmp
adc
pop
mov
add
dec
dec
cmpsb
add
mov
add
or
add
mov
jg
sbb
or
add
xchg
push
add
imul
dec
fwait
testl
add
inc
in
insl
popf
lds
lods
mov
jl
dec
mov
and
add
jl
aas
lods
movsl
push
int3
scas
add
into
enter
add
mov
out
lds
pop
stos
jp
inc
sub
add
ficomps
add
cmp
stos
add
adc
add
xor
pop
stos
add
cmp
xor
into
mov
pop
pop
mov
mov
add
add
fsubs
addb
add
adc
mov
add
xchg
push
mov
sbb
in
je
push
stos
sbb
inc
cmp
loope
movsl
or
add
mov
xor
cmpsb
add
fimull
mov
add
xchg
add
xor
sbb
and
add
stc
add
mov
xor
jo
add
mov
or
dec
mov
dec
incb
je
mov
add
enter
add
dec
push
cwtl
cwtl
xchg
add
mov
rorl
sub
add
add
lret
in
xchg
shrl
add
add
or
add
sbb
mov
mov
xchg
cld
add
repnz
adc
sub
mov
mov
or
add
add
jge
sbb
lea
add
imul
xor
adc
pushf
xchg
lcall
sub
add
add
sbb
push
test
cli
jmp
add
mov
push
mov
and
add
fstpl
stc
out
sub
dec
lods
mov
imul
aas
addr16
cmp
cmp
inc
popf
lcall
add
xchg
add
add
call
add
cmp
sbb
das
add
add
std
mov
mov
clc
adc
mov
add
iret
pop
add
les
outsb
cmp
cld
inc
add
add
adc
sbb
mov
add
add
mov
mov
add
sbb
cmp
imul
rcll
sub
mov
dec
jne
and
dec
pop
xchg
sub
or
add
push
and
add
pop
push
xlat
cmp
fcomps
bound
jp
adc
sub
add
add
aam
mov
loope
cmc
fsubr
mov
xchg
test
add
add
in
cmpsl
jnp
add
xor
js
jecxz
ja
rcl
aaa
push
pop
lea
add
pop
add
fwait
mov
sbb
cmp
fildl
cli
and
add
add
add
lds
ss
xor
iret
lods
add
mov
outsb
je
add
add
into
mov
int3
push
add
test
push
dec
cmpl
aam
xor
out
insb
mov
dec
mov
jge
sub
and
cwtl
add
mov
add
inc
sarl
cmc
adc
and
push
std
rcll
subl
xchg
mov
add
fcomps
repnz
in
inc
inc
xor
popf
iret
dec
mov
pop
movsl
pop
add
and
add
adc
add
aas
dec
cwtl
rcl
sub
add
je
add
test
add
add
dec
lahf
loopne
inc
pop
adc
add
adc
mov
ja
mov
or
add
clc
das
pop
sub
add
cmp
push
stc
pop
and
sbb
xchg
ss
add
in
add
add
adc
push
data16
ror
std
outsl
stc
xor
xor
push
inc
add
dec
mov
xchg
add
pop
and
jmp
add
jge
jnp
add
cmpsl
pop
shlb
hlt
and
sbb
fsubs
add
rcll
mov
mov
xor
sub
in
andl
sarl
test
mov
add
jmp
xor
mov
add
or
add
adc
hlt
mov
add
fs
les
add
fadds
cmpl
iret
mov
std
mov
adc
push
push
sti
mov
add
jecxz
add
out
mov
sbb
add
add
cmpsl
pop
jmp
mov
mov
add
fldl
and
xchg
pop
sub
or
sub
or
add
mov
pop
test
or
add
dec
hlt
jnp
add
and
add
test
add
add
lods
add
pop
cmp
add
aad
add
insl
add
inc
and
add
push
addb
das
mov
sub
add
pop
mov
and
scas
inc
inc
sub
add
add
cmpl
mov
dec
and
add
jne
or
add
arpl
jo
in
insb
push
gs
add
add
dec
add
adc
xchg
insb
push
add
stos
add
add
das
sbb
and
add
loope
xchg
add
mov
mov
add
sub
aad
in
pusha
insb
in
add
mov
jl
add
out
ja
mov
xchg
jmp
xor
add
push
inc
int3
cmpsl
mov
add
daa
jecxz
imul
mov
add
pop
enter
movsb
add
push
inc
loop
call
jg
sbb
or
add
cwtl
sub
add
add
push
rol
ja
adc
and
add
mov
add
and
mov
js
xor
fdivrl
jno
movsl
loope
add
xchg
fstpl
xor
xchg
mov
mov
add
lcall
push
mov
xor
add
inc
or
add
stos
add
scas
enter
xchg
std
enter
mov
fdivrs
and
add
arpl
or
push
add
mov
or
outsb
cmpsb
add
data16
ss
aad
add
sbb
jg
add
sub
add
add
jl
xor
add
cmp
xor
add
jns
loope
push
pusha
cmove
cltd
fsubrl
movsb
add
sub
cmpsl
dec
jbe
mov
stos
and
add
or
xor
add
in
out
ljmp
add
mov
or
sbb
lret
jnp
pop
sub
fistps
mov
push
sub
mov
add
push
fildl
add
xchg
xor
xor
mov
add
mov
dec
push
push
shl
enter
pop
gs
push
stos
jno
loop
int3
xchg
add
add
add
xchg
pop
and
add
test
add
aad
push
jae
das
or
bnd
in
jno
cwtl
ret
add
dec
mov
add
adc
addb
fisubl
aaa
fnstcw
add
icebp
test
add
out
faddl
and
xor
add
xchg
jl
movsb
add
mov
push
lcall
and
push
pusha
sbb
jle
out
inc
icebp
pop
repnz
fstpt
pop
icebp
addr16
int3
std
cmp
cmp
cmpsb
add
dec
js
fistpl
add
sub
sub
add
loopne
or
or
ja
sub
adc
cli
pop
inc
mul
add
js
mov
das
sbb
in
imul
movl
out
aaa
add
add
add
push
sub
sub
add
add
adc
je
jecxz
mov
add
mov
add
je
xchg
repz
or
jp
das
cmp
std
aas
dec
mov
test
add
cli
sub
add
jg
js
clc
lock
jb
add
jle
pop
enter
and
clc
mov
ja
shll
outsl
js
ss
nop
test
add
mov
nop
sbb
test
int
push
dec
mov
dec
dec
xlat
repz
dec
repz
lods
add
dec
pop
mov
pop
stos
add
inc
sub
add
jl
mov
jge
cmpsb
add
and
js
jecxz
pop
in
mov
add
movsb
add
cwtl
daa
out
pushf
movsl
out
inc
dec
js
test
add
hlt
stos
xchg
add
loopne
add
mov
add
scas
cwtl
scas
add
repz
cmc
pop
aad
rolb
push
mov
pop
and
sbb
mov
add
repnz
push
add
adc
add
and
add
addb
inc
cmpsb
add
mov
add
loopne
and
add
mov
sbb
dec
pop
lods
aas
pop
mov
add
add
push
aad
popa
outsb
aaa
xchg
test
insb
xchg
mov
mov
add
mov
aam
cltd
xor
xchg
lahf
test
add
int
cltd
daa
dec
lods
cmc
pop
sub
add
inc
sbb
shlb
push
int
loopne
fcoms
jle
addb
adc
dec
call
add
add
repz
gs
adc
cli
call
movsl
imul
add
mov
add
outsl
pusha
pop
aad
ret
jns
add
sbb
fadd
xchg
jl
pusha
lock
in
call
xor
mov
jns
int3
jl
fldcw
add
xchg
add
dec
sub
add
and
jnp
sbb
cmp
add
in
pop
jg
push
xchg
mov
ja
add
push
gs
inc
out
iret
jmp
cmp
ss
add
lret
rcrb
xchg
mov
add
dec
xor
add
pushf
jmp
cmp
test
mov
mov
add
dec
pop
xlat
or
add
xchg
lret
push
repnz
fists
xchg
movsl
pop
lcall
or
repz
mov
push
xor
outsl
sahf
repnz
cmp
add
das
imul
xor
add
cltd
outsl
push
or
dec
in
lds
or
add
shl
sbb
shl
add
add
rcrb
dec
or
fsts
aad
cli
add
add
pop
add
pop
jge
cltd
shll
jae
cmp
data16
je
mov
add
inc
cmp
jnp
in
in
loop
add
lods
jns
add
push
inc
mov
add
ja
adc
out
add
add
and
add
push
add
je
push
push
jbe
pop
aaa
pop
jl
fcomp
ds
sub
add
jecxz
aam
and
add
je
fstpl
pop
sub
add
out
jns
call
gs
xor
add
pop
cmpsl
mov
xchg
lods
inc
mov
add
add
push
pop
jo
add
inc
jmp
add
sahf
mov
mov
ds
repnz
in
push
add
dec
xchg
pop
cmc
filds
and
or
add
xor
mov
movsb
add
add
add
clc
lock
add
add
fdivs
mov
add
mov
add
push
add
stc
imul
out
push
add
lahf
add
arpl
push
add
mov
jne
shll
add
ljmp
add
hlt
mov
int
nop
cmp
mov
sub
movsl
dec
inc
ljmp
mov
add
pop
in
sub
add
xor
repz
jecxz
addb
or
loopne
push
xor
add
jmp
daa
lret
add
pushf
or
add
add
add
push
into
lcall
daa
pop
mov
add
repnz
add
out
ss
into
mov
cli
xchg
push
push
add
add
ret
add
add
jl
rclb
inc
clc
enter
inc
inc
mov
and
fwait
jb
push
add
ljmp
or
clc
repnz
add
xor
iret
insl
das
mov
pop
shr
test
outsl
call
mov
dec
popf
test
fidivrl
and
add
xchg
ror
out
inc
adc
xchg
add
push
cld
cmp
popf
cmp
xlat
mov
cmpl
out
jmp
mov
add
or
dec
shll
sbb
stos
add
add
add
fcompp
adc
add
adc
repz
hlt
sub
add
add
inc
int3
jo
addl
add
cwtl
addb
arpl
xor
nop
push
je
nop
repz
psubusw
mov
add
je
and
add
hlt
out
sarl
sub
fiaddl
ja
add
sub
add
sub
add
cli
or
add
add
lss
fadd
in
mov
add
ljmp
or
mov
add
pop
push
add
lods
add
mov
dec
ret
fdiv
sub
add
imul
mov
add
add
addb
pop
pop
xor
sub
aad
add
lods
add
je
out
and
xor
add
aam
sti
test
add
xor
pop
outsl
call
push
scas
xchg
push
sarb
xchg
in
jbe
aam
or
add
xchg
add
shlb
add
add
adc
mov
mov
in
add
mov
mov
cmp
hlt
xchg
stos
cmp
push
sahf
stos
add
add
sbb
adc
and
mov
add
jecxz
dec
mov
add
jp
orl
call
roll
cmp
or
add
mov
push
sbb
sti
sub
add
mov
add
add
xchg
mov
add
add
mov
add
les
add
jl
sbb
jnp
and
js
or
add
ja
push
jl
rorb
fcoms
sti
pop
fcmovbe
jno
icebp
sarl
aas
xor
shl
movsl
aad
sbb
in
jl
daa
push
mov
add
jle
or
add
shr
inc
scas
add
pop
push
ss
sti
les
add
fs
mov
arpl
cwtl
lcall
dec
cmp
stos
mov
jl
inc
cmp
and
repnz
cmpsb
add
mov
add
or
jbe
cmp
iret
mov
add
xchg
inc
inc
loopne
jmp
lcall
dec
push
cmp
test
add
insl
pop
xchg
in
lock
and
add
mov
enter
fsubrl
lcall
leave
mov
add
lds
fstps
imul
outsl
gs
jns
into
push
enter
jae
pop
lods
loopne
xor
popf
lcall
lret
add
je
dec
fs
pushl
xlat
sbb
cmp
mov
pop
add
add
and
add
push
xchg
mov
mov
add
cmp
and
int
cwtl
dec
sub
add
add
shlb
add
mov
add
in
lea
or
add
add
jb
fildl
aad
xchg
xchg
xchg
in
adc
add
add
out
xor
mov
pop
push
subl
dec
rcrl
arpl
dec
dec
mov
mov
xchg
cmpsl
pop
lret
cwtl
mov
add
mov
addb
mov
add
inc
pop
jno
outsb
xchg
add
add
and
add
scas
add
jg
repz
xchg
mov
add
sub
add
xchg
inc
xor
or
add
insb
cmp
or
add
dec
aad
lods
add
jge
pop
mov
das
pop
push
pop
adc
and
add
or
cmpsl
or
mov
add
mov
mov
xchg
lds
pop
repz
add
jae
jnp
inc
inc
cmpsb
add
iret
ja
jno
sti
xor
xchg
or
add
mov
cltd
sub
add
or
add
or
add
sub
add
arpl
dec
arpl
add
sbb
add
add
jl
push
sar
xor
lcall
addb
or
add
jecxz
dec
mov
inc
std
mov
add
pop
cmp
jo
xlat
dec
lds
outsl
fidivs
ror
mov
add
ss
xor
jecxz
mov
add
cwtl
icebp
stos
mov
cmp
add
aam
sbb
xor
xor
push
rcrb
lcall
je
fisubrs
mov
xchg
stos
add
addr16
pop
pop
shll
add
imul
ds
icebp
lcall
xor
add
add
and
js
in
pushf
cmp
pop
mov
add
inc
push
sbb
inc
mov
push
pop
pop
sub
add
jae
aad
out
jae
or
pop
int
sub
mov
add
movsl
sub
imul
inc
cwtl
roll
add
dec
pop
and
lock
inc
dec
mov
add
cmp
mov
add
or
inc
loop
push
pop
mov
mov
scas
mov
dec
incb
add
je
je
fistpl
fcomps
or
stc
xchg
push
lea
sbb
push
add
bsf
push
add
addb
push
jmp
add
fwait
pop
inc
mov
xorl
mov
add
jg
push
cmc
das
add
add
cmp
mov
mov
lds
nop
add
insl
push
push
and
notl
xchg
adc
and
add
mov
popf
mov
add
jae
addb
mov
add
xchg
and
movsb
add
jns
inc
cmp
mov
add
push
mov
jno
or
add
call
adc
add
and
add
mov
add
jp
adc
mov
pop
cmpsl
sub
add
sub
add
pop
cwtl
mov
add
xor
add
daa
xchg
frstor
add
mov
xor
add
push
leave
bndstx
add
in
jbe
adcl
add
loopne
test
add
into
pop
push
pop
shlb
in
mov
add
js
addr16
call
inc
addb
andl
add
aas
sbb
fwait
push
lds
fwait
jp
add
push
dec
jb
mov
xchg
add
or
add
cmp
pop
sbbl
and
add
test
daa
add
gs
add
sbb
loopne
shlb
add
dec
bound
in
std
jp
jno
add
sub
add
xchg
adc
add
sub
fwait
popa
lds
pop
mov
mov
loopne
fwait
push
fsubs
dec
xor
and
test
lods
adc
leave
test
ss
xorl
add
das
mov
fdivl
ret
je
xlat
inc
js
xchg
push
jo
fistl
push
loop
xchg
mov
test
add
movsl
adc
or
add
cmp
lods
push
push
repz
sti
movb
daa
cltd
in
out
lods
add
ljmp
jae
and
dec
mov
sbb
jle
mov
add
stos
imul
cmpsb
add
lret
fcmovbe
and
call
dec
dec
cmp
clc
mov
adc
lret
movb
add
inc
pop
inc
jge
daa
fldl2e
jg
aam
jle
test
add
fnstcw
jno
push
sub
add
aad
pop
jns
insb
mov
add
add
add
dec
in
ss
add
adc
jae
sub
pop
cmpsb
add
call
add
ret
iret
jp
pop
push
shrb
stc
mov
cmc
sub
test
cmp
push
jge
leave
sbb
in
xor
add
add
add
addr16
mov
push
ljmp
add
inc
adc
push
out
addb
pop
lahf
test
ret
sub
add
addb
and
add
mov
add
and
add
xor
scas
add
mov
add
add
pop
dec
mov
add
push
arpl
add
ja
cmc
or
add
sub
add
push
push
push
add
inc
les
xlat
mov
aad
sub
add
cmp
imul
add
lods
push
addb
fidivrs
xchg
xor
addb
sbb
enter
repnz
jbe
adc
addb
xor
in
cmp
add
mov
daa
sub
movsb
add
cwtl
jb
pop
ja
push
add
add
shlb
jge
out
mov
je
pop
sbbl
js
add
dec
mov
dec
push
sbb
add
scas
sub
add
mov
add
add
and
add
mov
add
sbb
test
add
add
xchg
ds
jl
aam
jp
sbb
add
mov
add
das
dec
inc
test
add
xchg
inc
fcmovb
loope
lret
adc
adc
dec
pop
pop
xchg
out
mov
add
shlb
add
add
push
fbstp
cmp
in
sbb
shll
lock
dec
icebp
pop
in
decb
scas
or
mov
add
or
out
or
push
shl
das
pop
popl
out
pusha
in
out
movsl
pop
push
add
aaa
jbe
cltd
int
add
jle
repz
jb
insb
in
push
sbb
aas
hlt
test
add
add
dec
mov
outsb
scas
add
mov
js
cltd
mov
add
push
in
add
inc
popf
test
add
repz
lret
cmpl
adcl
add
insb
clc
fidivl
and
add
push
and
ljmp
mov
pop
adc
push
add
mov
repz
dec
mov
add
and
add
lret
cmp
mov
pop
xor
pushf
flds
add
sub
mov
add
ds
imul
mov
and
add
sbb
scas
gs
mov
js
out
fildl
or
add
fdivr
movq
add
mov
pop
orl
add
nop
pusha
adc
jo
add
push
add
out
cltd
das
xor
add
jne
xchg
out
lret
add
jmp
negl
mov
mov
or
add
add
sub
jmp
pusha
xor
add
jge
lcall
pop
sti
mov
add
mull
outsb
lret
cmp
mov
cmpsl
popa
adc
and
add
lods
add
lods
add
imul
aaa
pop
jno
jecxz
xorl
aam
dec
inc
fdivs
add
add
adc
mov
sub
jne
cmc
xlat
bound
jne
and
xchg
inc
fcomps
add
out
lock
test
add
sub
pop
adc
scas
add
mov
mov
pop
fcomip
enter
add
pop
adc
andl
scas
add
xchg
out
lods
sti
lods
add
push
stc
sbb
adc
fstp
dec
iret
mov
daa
insb
rcll
ja
cmpsl
sub
pop
stos
sbb
add
int3
insb
jno
loop
fstl
aam
push
test
add
aad
dec
aaa
aam
cmp
cmp
in
jle
push
js
mov
call
mov
int3
in
sub
add
add
mov
out
scas
add
leave
pop
mov
add
jg
dec
call
push
sub
xor
pusha
in
add
mov
or
rol
fnstsw
je
cmpsl
imul
jmp
mov
add
ds
icebp
lea
pop
rolb
add
rcr
mov
add
jp
int
ret
jne
add
push
addr16
mov
hlt
sub
add
jl
in
sub
lahf
lea
out
mov
adc
add
jb
mov
add
add
jno
daa
fcoml
mov
rorb
adc
xor
jbe
inc
ret
lret
add
sub
jl
xchg
push
add
cmpsb
add
pushf
imul
sub
add
leave
jge
add
pop
xlat
orl
insl
jg
movsb
add
aas
or
stos
add
faddl
adc
inc
push
test
add
inc
rcr
pop
lods
jb
imull
xchg
jno
clc
fsubr
xchg
clc
sub
add
add
out
or
xchg
jp
dec
xor
add
add
pop
push
sbb
stos
or
add
and
add
add
mov
push
daa
push
jp
pop
std
sub
add
cmp
add
movsb
add
mov
add
addb
fnstcw
loope
add
loope
add
outsb
sub
add
dec
pop
or
add
out
dec
in
mov
add
in
mov
push
push
subl
mov
add
push
sub
add
lods
mov
sarb
pop
xchg
out
addb
pop
fsubs
add
ljmp
clc
scas
add
nop
inc
popl
add
jns
add
fcomp
stos
add
dec
loope
dec
ljmp
add
add
push
dec
xchg
add
and
add
mov
xchg
pop
jns
adc
push
add
ja
sub
add
fwait
xchg
dec
and
add
fstps
add
aad
sti
test
xchg
rcll
inc
lods
add
xor
int
and
pop
sub
add
xchg
xchg
adc
movb
mov
lock
xchg
dec
xlat
inc
cmp
add
and
cld
pop
and
add
add
add
mov
and
add
test
cmc
mov
add
add
add
frstor
lods
daa
sub
add
imul
add
add
cmp
dec
fisubs
shl
push
mov
add
divl
or
add
movsl
sub
push
shl
leave
dec
push
ds
pop
shlb
cltd
pop
pop
pop
dec
popf
loop
add
inc
sbbl
xor
add
repz
out
iret
push
or
add
outsb
mov
add
sub
shrb
test
push
mov
add
add
dec
das
push
add
inc
ret
adc
mov
add
sti
in
dec
into
dec
hlt
jmp
mov
add
push
dec
xchg
add
adc
cmc
mov
sub
push
add
pop
pop
in
jmp
lds
or
add
adc
jmp
or
js
movsb
add
jns
add
adc
add
mov
pop
lcall
inc
js
add
sbb
fdivs
mov
pop
movsb
add
mov
add
rcrl
lcall
cmp
xchg
push
fadds
add
mov
mov
mov
and
xchg
add
ret
add
sub
mov
das
cmp
or
divl
add
push
ret
clc
dec
inc
lahf
dec
jae
insl
jno
jecxz
andl
add
lret
pop
test
add
mov
push
add
jns
jbe
add
in
xor
jnp
pop
mulb
add
outsb
push
in
cmpl
add
jbe
and
push
add
icebp
inc
addr16
add
cli
and
add
push
stc
push
adc
adc
dec
jmp
add
cli
xchg
sub
add
add
sti
mov
push
add
xchg
add
dec
xchg
cli
test
and
add
add
xor
mov
add
sbb
dec
ret
pop
or
jecxz
sbb
mov
fsubl
add
pop
fcomip
fwait
inc
decb
test
add
cmc
add
xchg
fstpt
mov
sub
adc
add
cmpsl
jnp
cmp
cmp
out
inc
push
xor
add
mov
add
dec
jp
push
add
cld
setae
mov
rcrl
das
pop
in
adc
sarb
mov
add
test
add
add
inc
mov
add
or
add
imul
add
adc
pop
fsubrl
pop
xor
cli
add
inc
into
push
fldcw
add
mov
mov
push
add
lcall
cmp
adc
xchg
add
cmpsb
add
in
mov
add
in
ljmp
inc
xchg
xor
call
adc
repnz
xchg
dec
stos
add
or
mov
add
call
add
loope
push
cltd
mov
add
out
and
add
lea
fldlg2
adc
add
sbb
dec
enter
add
add
add
pop
adc
or
xor
cmp
add
and
add
mov
add
scas
add
cmp
dec
cmpsl
pop
cmpsb
add
popf
pop
hlt
fimull
push
nop
pop
loope
add
mov
or
add
xchg
add
add
push
add
cltd
aam
add
push
pop
xor
cmp
stos
sbb
mov
sti
jns
or
add
add
ss
jno
daa
and
pop
add
add
lods
fwait
lahf
mov
sub
add
imul
mov
add
int
pushf
cmp
int
xchg
cmpl
mov
pop
add
add
jmp
testl
add
xchg
loope
add
cld
inc
cmp
push
add
addb
fisubl
add
pop
push
addl
push
or
inc
push
add
ds
mov
fmuls
add
xchg
mov
push
jns
or
add
xchg
add
add
lds
sub
js
add
adc
adc
add
add
popf
sbb
test
mov
jne
in
insl
in
mov
mov
push
hlt
sbb
out
inc
inc
mov
adc
or
add
sbb
adc
xchg
add
add
mov
xchg
imull
lahf
je
adc
repnz
add
dec
jp
data16
cwtl
xchg
jp
dec
shlb
add
cmp
fxch
push
addb
mov
movsl
jp
add
inc
cmp
add
add
add
dec
stos
add
pushf
in
xchg
mov
push
push
lds
add
xchg
ret
jne
adc
mov
js
repz
cmp
inc
cmpsl
add
add
lret
mov
cmp
add
pop
loope
or
add
add
stos
sbb
push
add
jb
xor
pop
pop
daa
lea
or
pop
lahf
ljmp
addb
add
out
mov
movsb
add
popa
or
add
push
lds
add
push
inc
outsb
push
mov
dec
xchg
mov
les
cmp
push
jge
addr16
mov
test
mov
add
inc
shlb
push
outsb
mov
sahf
push
addb
sti
scas
mull
dec
mov
add
pop
pop
fdivs
sub
add
shrb
push
pop
jae
lcall
push
push
in
xchg
loop
pop
rcll
flds
fwait
mov
add
in
addb
sahf
dec
sbb
test
add
add
popf
repz
add
or
add
add
lds
inc
mov
mov
add
sbb
rcl
out
stos
add
adc
cmp
repz
add
sbb
loopne
leave
mov
lret
lahf
movl
out
daa
mov
cmp
add
sbb
push
jae
xor
mov
and
add
repnz
addb
jb
push
enter
add
xchg
pop
sysret
mov
push
lret
jecxz
orl
add
add
outsb
jecxz
sbb
add
dec
lea
add
mov
xor
dec
ja
repnz
jecxz
add
mov
add
sbb
movsl
xor
roll
cmp
jge
mov
nop
lea
add
add
popf
icebp
lods
add
sub
cmp
and
add
pop
rcrl
inc
sub
add
mov
int3
push
inc
mov
jp
ret
xor
mov
pushf
push
mov
add
les
mov
ret
mov
mov
lret
addr16
in
ds
adc
pushf
addb
cmp
add
lea
sti
insb
fidivrl
repz
sbb
add
fisttps
cli
sub
add
adc
pop
jno
add
push
popf
jne
add
add
scas
add
push
jge
add
aaa
jle
sub
das
scas
ret
aas
jmp
sbb
or
sbb
mov
add
lods
add
mov
rclb
movb
inc
jp
add
push
cmp
lods
aam
mov
add
pushf
aad
test
test
sbb
push
mov
inc
xchg
mov
dec
xchg
data16
clc
inc
cmp
inc
mov
add
dec
fsubrs
std
inc
xchg
lods
add
lahf
jle
add
jp
add
incb
add
mov
lret
sub
pop
sub
add
in
xlat
dec
mov
add
xchg
adc
cmpsl
imull
inc
addb
inc
fisttpll
pop
xchg
mov
pop
addr16
aad
stc
in
sub
add
fmull
add
xchg
outsb
int3
rcl
jmp
add
jae
xchg
sub
add
sbb
scas
add
ljmp
push
xorl
add
xchg
xor
add
aas
add
add
xchg
lahf
mov
add
mov
add
scas
push
xchg
add
jno
pop
cmc
add
paddsw
movsl
dec
adc
fwait
xchg
cmp
adc
inc
inc
mov
add
push
add
shll
movsl
into
inc
cld
mov
xchg
lea
repnz
mov
lock
add
cmp
movsb
add
add
not
fsubs
jae
and
mov
ror
idivl
add
andl
arpl
add
lea
jb
in
leave
sbb
jg
mov
jns
add
or
add
add
jecxz
ljmp
lahf
test
sub
add
sub
add
add
or
add
push
scas
add
daa
insl
fdivrl
sbb
lods
add
cmc
popa
pop
add
and
fimull
add
jl
fwait
xlat
jbe
mov
and
adc
add
adc
nop
sarl
add
leave
pop
mov
add
rcll
add
add
push
add
sub
lret
push
xor
mov
je
mov
in
inc
test
add
lock
pop
push
pop
inc
cmp
xlat
leave
jo
mov
daa
inc
jne
int
cwtl
repz
xchg
mulb
cmp
and
xor
enter
sbb
fldcw
iret
jge
add
cmp
add
pop
aad
enter
add
outsl
mov
add
cwtl
inc
xor
mov
shll
and
hlt
in
mov
and
add
push
inc
pop
and
in
push
icebp
cli
pop
mov
add
push
add
clc
into
dec
repz
add
add
mov
mov
xchg
nop
pop
sub
add
jg
dec
mov
add
add
cld
sbb
jns
sub
add
add
lock
add
dec
jae
leave
fldcw
add
pop
mov
sub
rolb
and
add
adc
testb
movsl
das
scas
add
mov
add
add
xchg
add
adc
mov
scas
add
inc
pop
jl
add
xor
arpl
test
mov
add
ds
mov
in
pop
fucomi
xlat
addb
sub
add
add
adc
xchg
add
mov
jl
test
add
add
lock
sahf
mov
add
test
add
test
add
add
int3
push
add
loop
ds
ror
scas
cmp
push
fstp
dec
jl
std
and
add
dec
push
lds
mov
iret
data16
nop
das
sub
add
or
add
sub
and
push
cmp
push
add
and
out
pusha
rol
dec
cmp
jns
xchg
into
unpckhps
mov
add
add
jbe
add
inc
xchg
in
pop
lods
aaa
dec
cli
lret
sub
add
jns
cmp
jns
push
mov
lock
inc
cmp
icebp
stos
add
test
add
dec
cmp
nop
mov
mov
shll
add
or
add
jno
and
add
mov
dec
sbb
out
ds
and
adc
int3
stc
push
add
popa
add
add
push
add
into
mov
insb
or
mov
sub
adc
out
jbe
push
dec
sub
sti
jne
cmp
idivb
loop
add
aam
dec
repz
sub
and
add
imul
add
mov
jmp
add
mov
add
ljmp
add
add
xor
jp
add
add
add
add
mov
or
add
addb
lcall
add
push
and
add
in
cmp
out
out
mov
add
lea
popa
cmpsl
popl
jg
xor
fxtract
add
daa
call
adc
lret
sbb
mov
mov
xor
ds
in
pushf
pop
or
cmp
imulb
add
push
add
mov
lcall
add
add
test
add
mov
inc
cmp
pop
dec
stc
mov
add
add
notb
pop
inc
clc
sbb
std
testl
enter
xchg
add
mov
add
icebp
mov
xchg
cli
push
mov
mov
in
push
xor
xchg
add
and
add
pop
les
inc
insb
push
xchg
mov
add
add
popa
or
add
add
or
addb
movsl
xor
adc
dec
mov
sbb
add
cmp
aam
push
sbb
mov
push
aas
outsb
or
add
call
mov
add
arpl
add
jo
pop
aam
cmpsl
lock
cmpsb
add
lods
inc
push
push
cmp
mov
jno
mov
add
mov
add
add
xchg
sbb
negb
loope
aad
ja
icebp
pop
mov
add
jo
into
popa
js
add
xor
mov
add
add
in
je
cld
sbb
add
add
add
jnp
add
push
data16
add
call
sbb
pop
fmull
cmp
aad
hlt
xlat
adc
mov
xor
mov
imul
out
push
add
orw
lret
or
add
inc
lahf
mov
popf
sbb
std
ss
je
add
mov
push
add
pop
in
add
addb
outsl
insl
mov
cmpl
xor
push
add
popa
sbb
pop
push
add
into
and
add
js
ds
add
adc
add
jo
adc
cmp
out
xor
dec
adc
add
daa
dec
push
add
out
stos
add
bound
push
mov
add
stc
fwait
or
insl
or
push
loope
add
dec
lret
push
jecxz
bound
inc
pop
inc
mov
push
dec
movsb
add
mov
add
ja
addb
push
mov
add
loop
cmpsb
add
cmpsl
les
out
mov
aad
or
icebp
xchg
fmul
jmp
sbb
sbbl
sbb
rclb
sbb
scas
add
mov
add
pop
adc
mov
sbb
xlat
daa
in
xlat
jno
call
lods
add
aam
mov
add
xchg
mov
add
ljmp
add
add
stos
fisttpll
mov
rorl
add
and
add
jecxz
in
cmpsb
add
dec
dec
les
shll
and
ret
cmp
add
add
add
sub
add
sub
add
pushf
movsl
push
and
add
incb
add
and
add
add
push
add
mov
repz
add
nop
pop
add
mov
add
push
ja
imul
add
iret
push
mov
lods
add
shrl
add
pop
dec
adc
add
lods
add
out
jns
add
scas
add
pop
xchg
roll
cmp
outsb
lea
dec
jne
insb
in
sbb
mov
ss
mov
add
mull
inc
inc
mov
xchg
fidivrl
inc
cmp
add
xorl
loop
add
jns
imul
sbb
inc
push
outsb
dec
inc
add
inc
add
xchg
cmp
push
jmp
cmpl
imull
sub
add
add
fs
add
stc
gs
lahf
les
add
into
xor
test
add
rcrl
xor
push
jmp
test
call
add
and
add
js
pusha
jo
aaa
mov
add
add
arpl
adc
rorl
data16
sub
jecxz
add
push
mov
mov
add
mov
add
sub
pop
xor
ret
addb
cli
out
pop
mov
add
mov
cmp
cltd
jge
add
dec
push
enter
add
sub
add
sbb
push
add
add
jp
add
ja
leave
jl
mov
add
pop
imul
add
ljmp
adcl
adc
cmpsb
add
dec
insb
cwtl
int
and
add
add
in
cld
int
pop
xchg
jge
push
loopne
mov
dec
pop
sbb
stos
add
adc
xor
xchg
or
dec
int3
xor
mov
add
sub
add
jecxz
pop
pop
enter
sub
mov
add
loop
pop
push
mov
cmp
jle
add
dec
xor
addr16
xchg
sbb
icebp
add
pop
xchg
lcall
addr16
inc
xchg
subl
jge
rolb
add
ss
int
jg
xchg
cmpsl
jnp
inc
insl
mov
addr16
int3
or
cld
mov
add
cmpsb
add
fistl
xor
aad
inc
pop
pop
mov
pop
ret
mov
data16
add
ret
int3
test
in
inc
fadds
jp
in
inc
repz
add
lock
pop
or
add
mov
add
add
add
sub
add
xchg
pop
and
add
add
and
add
push
lods
add
lods
add
scas
mov
mov
inc
xchg
add
add
inc
into
lds
cld
rolb
pop
ljmp
adc
std
mov
add
xchg
clc
mov
push
addb
les
add
inc
pop
push
add
add
leave
cmp
add
jp
mov
or
arpl
addb
ljmp
add
and
add
int
add
loope
add
popf
sub
inc
push
mov
call
out
test
add
push
and
dec
inc
test
nop
xor
cmp
and
add
jmp
xor
jb
inc
sub
add
icebp
or
xor
xor
xchg
add
add
movsl
pushf
mov
jne
ljmp
adc
add
push
add
fisttpl
add
gs
mov
lret
push
mov
imul
add
add
add
out
mov
add
aaa
jo
ret
add
push
pop
mov
add
jb
xchg
adc
mov
outsl
cmpsb
add
pop
std
gs
in
fmuls
cli
fst
mov
push
loope
xchg
in
cmp
mov
pop
sahf
and
add
add
aam
mov
cmpl
add
and
rorb
add
mov
xchg
clc
mov
jmp
add
cli
jne
cld
dec
pushf
stc
loop
in
test
mov
push
cmpsb
add
shrl
in
sbb
add
out
sbb
add
xlat
out
loop
push
add
push
adc
jo
js
mov
add
xor
add
cwtl
xor
lods
ja
cmovns
shll
in
dec
aam
sbb
fstpl
xchg
jecxz
pop
mov
xchg
je
and
inc
push
int
ds
cli
mov
ret
test
scas
add
mov
enter
aad
dec
sbb
cmp
add
in
push
xchg
push
push
add
lahf
data16
sub
add
mov
shr
jge
in
add
add
sbb
adc
or
add
cltd
mov
adc
lea
loope
add
fnsave
jns
pop
lret
loopne
inc
and
push
add
loop
outsl
jp
sbb
enter
aaa
dec
mov
mov
add
sbb
add
int3
sbb
add
sbb
stc
flds
iret
adc
or
add
jle
add
add
add
cmp
push
add
pop
mov
sbb
xor
in
pop
aam
mov
rcrb
push
add
loopne
jecxz
mov
add
dec
pop
pop
mov
shrb
or
add
pushf
dec
lock
roll
mov
nop
add
add
add
les
mov
add
int3
xchg
fidivrl
mov
fcmovb
popa
cmp
sbb
inc
negl
push
sbb
or
add
scas
or
add
orl
fwait
aaa
mov
xor
add
add
repz
out
mov
inc
pushf
pop
adc
nop
push
pop
cli
ja
inc
adc
push
roll
add
mov
dec
jg
dec
imul
mov
adc
hlt
xchg
add
and
add
fs
stc
push
pop
or
add
and
cmp
sbb
add
orl
fimuls
mov
add
fnstsw
add
popf
repz
outsl
shll
movsl
xchg
add
loopne
fld
stos
add
insb
fdivr
sub
jg
fildll
cwtl
push
add
jne
push
xchg
add
cmpsb
add
iret
decb
addr16
mull
cmp
cmp
add
mov
out
fldt
jg
add
mov
xor
add
ja
inc
sub
lock
inc
sub
add
sbb
and
and
dec
mov
mov
ljmp
pop
shlb
add
add
cmpsl
mov
push
sub
add
leave
stos
push
add
add
ljmp
cld
stos
ret
adc
mov
test
add
repnz
or
add
in
in
out
lods
add
cli
jne
cltd
je
mov
jbe
cwtl
ret
fstps
and
adc
jp
or
add
mov
add
lds
add
lcall
inc
hlt
aas
sbb
mov
add
xchg
mov
add
xchg
and
ret
push
stos
sahf
sbb
repnz
clc
inc
lcall
xchg
adc
stos
add
jge
sub
dec
jg
adc
pop
push
mov
inc
push
mov
add
sub
add
mov
popf
jecxz
inc
scas
xlat
sbb
mov
xlat
pop
shr
addb
test
fwait
addb
xlat
jecxz
jnp
jl
add
xor
push
addb
jbe
add
cmc
push
add
or
add
cwtl
sar
and
or
add
xchg
gs
int3
out
xchg
popa
and
nopl
popa
shl
jge
xchg
scas
add
adc
add
add
dec
and
fwait
jl
sub
mov
sbb
dec
mov
add
fs
cltd
negb
cmp
cmp
in
and
out
int
mov
cwtl
or
add
push
inc
iret
mov
add
mov
adc
xlat
nop
mov
push
outsl
xchg
add
pop
stc
add
add
enter
clc
push
les
cmp
mov
add
dec
xor
sbb
pop
popf
dec
add
add
hlt
setnp
in
push
testb
pusha
aad
jle
xor
sub
sahf
in
std
rcrb
add
inc
cltd
lahf
cmc
sbb
ja
repz
mov
xor
rcrb
mov
add
daa
jge
add
jl
jp
xor
push
test
jns
dec
dec
mov
push
cmp
inc
int3
jmp
add
push
and
add
fcoml
inc
stos
add
mov
add
sub
and
add
add
mov
std
pop
fdivrl
int3
test
add
add
sub
add
gs
imul
push
adc
je
cmp
adc
pop
mov
dec
inc
mov
add
pop
clc
or
add
js
mov
inc
or
cwtl
and
test
add
loop
inc
jnp
jmp
sbb
add
add
icebp
icebp
dec
adc
inc
jne
sub
xchg
frndint
hlt
add
mov
cmp
mov
sbb
add
mov
daa
aam
mov
out
pushf
inc
iret
xlat
cmpsl
or
add
scas
bound
insl
dec
pop
ret
sub
add
and
add
push
stc
jae
in
cmp
call
aad
and
add
pop
and
mov
adc
repnz
sti
stc
sub
lret
les
xor
test
pop
xor
adc
xor
inc
or
add
pop
mov
dec
pop
test
add
loop
addb
jnp
cld
sti
cli
stos
add
mov
add
pop
lret
cmp
cmp
dec
test
add
fs
add
sub
mov
add
add
ss
inc
addb
pxor
loopne
addb
mov
add
and
add
cmp
mov
cmc
insl
jp
mov
and
arpl
fildll
add
sbb
or
add
add
lock
inc
xorl
mov
insl
mov
cmpsl
test
add
sbb
mov
add
aam
add
push
icebp
mov
pop
pop
out
dec
dec
or
add
xchg
in
xor
mov
out
or
add
push
lock
repnz
jae
negl
add
add
mov
add
add
pop
mov
add
call
add
and
add
mov
or
pusha
cmp
xlat
jbe
out
jl
daa
adc
push
add
jb
add
pop
lcall
loopne
sub
add
add
out
fisttps
outsb
scas
incb
xchg
sub
add
inc
sbb
adc
or
add
add
aas
and
cmp
add
sub
add
rorb
imul
add
mov
loop
push
jae
out
sbb
repz
push
aas
and
addl
and
add
and
add
add
popf
pop
push
shlb
lret
xchg
add
into
push
sbb
inc
inc
xor
add
inc
inc
sbb
mov
fmuls
add
jo
leave
add
add
mov
add
cli
jmp
mov
add
add
shlb
cmpsl
gs
jb
cmp
add
or
add
fidivs
mov
rcll
sub
xchg
mov
push
outsl
popf
jns
aam
and
add
sub
add
mov
add
add
leave
insl
cld
iret
adc
add
mov
add
pop
mov
shll
pop
sbb
sub
addb
and
dec
popa
sarb
add
mov
add
push
add
xchg
pop
stos
add
out
imul
sbb
mov
movsl
scas
add
mov
inc
ret
xor
pushfw
pop
adc
push
xchg
lcall
dec
or
aam
add
mov
scas
icebp
xor
mov
jmp
add
in
xlat
in
push
or
dec
ret
cmp
mov
push
jb
out
mov
mov
ret
sbb
out
dec
jae
jne
mov
lods
out
cmp
push
mov
add
ss
pop
add
add
lea
std
pop
sahf
cld
mov
movsb
add
push
mov
add
add
jge
stos
add
int3
xchg
xchg
add
nop
xchg
jae
adc
fcoms
mov
dec
or
add
out
add
lret
pop
ss
gs
push
add
pop
xchg
scas
cmp
add
imul
fbstp
iret
in
mov
add
cmp
and
aad
push
outsl
pop
loop
mov
add
lods
dec
sbb
or
sti
add
add
add
inc
mov
add
add
mov
add
add
out
add
sarl
add
sbb
in
add
out
xchg
mov
movsl
inc
mov
add
insl
mov
xchg
imul
aas
scas
add
leave
jae
inc
or
add
push
aaa
xor
add
in
aam
fbld
sti
cmc
sbb
aad
repz
je
xchg
add
dec
jp
aad
orl
mov
and
sub
repnz
mov
or
add
insb
bound
jle
jle
lret
inc
mov
stos
add
or
add
jns
add
subl
cmp
jns
push
out
mov
add
sbb
lret
xchg
in
dec
rclb
je
icebp
aaa
inc
add
add
lods
pop
mov
fidivs
div
dec
jo
enter
rcl
push
andl
add
addb
enter
add
add
ds
loop
repnz
xchg
cwtl
fldt
add
mov
sbb
pop
mov
add
add
sbb
mov
add
stos
in
xor
pop
mov
add
mov
push
adc
pop
dec
ss
popf
lds
in
addr16
mov
test
or
add
jbe
fstpt
mov
dec
jg
cmc
mov
pop
lahf
xchg
and
mov
das
xchg
enter
ds
ja
movsl
jbe
jno
std
outsb
mov
xchg
add
mov
or
add
ss
add
hlt
gs
fldt
and
add
ret
mov
or
add
addb
pop
in
pop
add
dec
int
jg
dec
pop
inc
mov
add
mull
pop
sahf
fldln2
clc
or
add
add
leave
mov
adc
add
mov
hlt
push
mov
add
add
add
and
add
add
add
std
dec
pop
pop
mov
mov
sbb
add
push
stos
inc
ret
dec
lcall
add
in
in
and
add
lret
sub
addb
enter
mov
add
test
add
push
inc
jge
jae
jae
ljmpw
out
adc
adc
cmp
add
test
mov
add
and
add
mov
mov
or
xchg
decl
xchg
call
cmp
add
aas
ret
jb
fs
in
jmp
add
xchg
sub
sarl
jnp
jmp
add
add
add
sub
or
sub
out
mov
add
and
add
add
imul
pop
push
cmp
mov
mov
xchg
add
inc
and
add
dec
out
xor
addr16
outsb
repz
cli
adc
push
or
add
add
fld
cmp
add
mov
stos
pop
std
out
push
sub
add
add
add
stos
add
jl
sbb
data16
add
outsb
bound
add
mov
add
daa
stc
sbb
inc
jnp
in
mov
add
push
repnz
mov
ret
pop
out
mov
sub
add
cmp
pop
inc
sbb
push
je
sub
test
xchg
pop
xchg
pop
or
sahf
jecxz
lods
add
mov
mov
add
cmpsl
mov
add
mov
dec
jne
add
lods
pop
xchg
sub
mov
cmc
iret
pop
xchg
clc
loope
ds
push
cwtl
int
add
mov
lods
add
lea
add
mov
add
add
sub
repnz
pop
stc
inc
jbe
cmp
lret
aas
lret
lods
scas
js
dec
adc
fisttpl
add
les
add
sub
add
and
add
mov
mov
inc
push
add
jo
shll
add
repz
xor
mov
pop
pop
mov
aaa
mov
add
jmp
add
add
scas
add
pop
mov
dec
or
add
xor
add
add
mov
mov
push
fwait
je
stos
mov
add
movsl
pop
dec
pop
mov
ja
dec
jg
mov
sahf
mov
add
add
movsl
pop
sbb
aas
dec
aaa
mov
das
cmp
and
test
cmp
data16
mov
jbe
add
mov
xchg
add
push
push
fdivr
xchg
xchg
addl
jge
mov
jmp
lret
dec
dec
lahf
or
pop
xchg
hlt
adc
sbbl
add
fcompl
add
dec
rcl
lahf
jmp
ja
xchg
outsl
clc
lods
add
rcll
cmpsb
add
xor
push
aam
pop
aas
out
mov
mov
add
movsb
add
mov
sub
add
mov
add
inc
pop
xor
out
mov
adc
add
in
sub
inc
jle
add
or
add
push
lea
leave
cmpsb
add
inc
in
out
inc
xlat
push
cmp
je
push
add
aam
stos
pop
outsb
gs
add
in
add
daa
mov
add
add
pop
imul
add
xlat
test
add
mov
insb
aas
push
mov
add
inc
nop
cmp
je
lret
lea
ja
inc
pushf
out
imul
add
mov
add
imul
push
jl
pop
jo
push
add
or
add
ds
mov
and
add
pop
pop
push
movsb
add
and
cmp
shlb
add
std
cwtl
dec
sti
sub
add
iret
rorl
das
sarb
adc
and
mov
inc
push
xor
jp
or
add
jmp
add
call
add
negb
inc
into
jmp
mov
sub
add
out
push
add
add
add
das
popl
insl
lcall
rep
add
jmp
outsl
inc
jnp
add
mov
add
pop
mov
add
xchg
lds
mov
add
and
ja
add
add
ffreep
push
push
cmc
pop
push
movsb
add
xchg
add
add
sbb
inc
cltd
mov
add
aaa
xor
add
inc
add
add
shrb
ja
push
cmp
pop
jecxz
lcall
test
mov
mov
add
mov
arpl
pushfw
subl
popa
subl
mov
dec
pushf
das
daa
cmpsb
add
mov
add
push
add
and
inc
divl
cmp
sti
add
add
clc
clc
cli
pop
je
add
add
xor
add
rclb
outsl
pop
push
ja
xchg
sub
add
jne
jno
pop
pushl
xor
mov
inc
daa
sub
xchg
inc
xchg
jg
pop
fs
mov
sbb
movsl
lods
bnd
flds
add
inc
add
outsb
cmp
ja
jnp
inc
mov
jmp
add
gs
dec
sub
add
pop
js
sti
and
or
add
mov
add
pop
mov
inc
push
dec
call
pop
imul
bound
add
dec
sti
cltd
cmc
mov
inc
mov
repz
cmpsl
enter
fisttpl
add
and
add
ss
jge
add
cmpsl
leave
arpl
aaa
std
xor
and
add
add
sbb
sbb
adc
add
call
lret
jecxz
mov
add
cltd
mov
push
pop
cltd
test
add
push
sub
push
add
mov
add
in
mov
outsl
test
sbb
lret
das
inc
jne
stos
and
add
lcall
faddl
sbb
enter
add
add
aad
pop
inc
scas
repz
or
scas
add
clc
sarl
popf
lahf
aad
ljmp
add
push
sub
out
add
sbb
add
add
cmpsb
add
ficomps
out
ss
lods
add
dec
mov
icebp
out
jbe
mov
ret
or
lea
sub
add
hlt
cltd
int3
adc
add
test
mov
sarb
jbe
inc
xor
push
aad
add
fldt
add
cmpsl
mov
sbb
arpl
test
movsb
add
scas
popa
pop
fsubs
or
xchg
sub
add
add
add
add
andl
cli
sbb
aam
sbb
imul
cmp
sbb
add
imul
cmp
popf
fisttpl
add
push
ja
inc
test
add
xchg
adc
test
loopne
dec
lock
add
add
shlb
pop
jp
mov
cmpsb
add
rcr
push
pop
outsl
jp
jmp
add
mov
add
cltd
mov
add
adc
roll
mov
scas
fmulp
xor
add
icebp
sub
add
test
add
addl
test
add
xchg
sar
add
out
jle
add
or
add
add
adc
sahf
and
loope
add
sahf
push
ficomps
pop
mov
ret
pop
cmp
or
add
add
fdivrl
rorl
andl
jle
std
add
add
mov
add
cmp
add
sbb
lds
pushf
in
pop
cltd
xor
add
adc
adc
add
add
add
add
add
arpl
imul
lock
mov
jg
mov
lock
inc
xchg
add
lret
add
xchg
das
mov
mov
fsubrl
add
add
jmp
sar
pop
rcl
mov
je
jl
fstps
and
add
arpl
xor
stos
add
movsb
add
mov
sub
mov
loopne
je
movsl
jnp
insl
neg
mov
sbb
add
mov
pushf
mov
mov
cmp
daa
dec
or
add
add
lret
mov
std
xchg
adc
stos
xor
push
add
add
pop
dec
jecxz
jmp
add
add
mov
add
insl
jge
inc
dec
xor
jp
add
mov
dec
and
add
cmpsl
push
loopw
sahf
subl
push
mov
add
call
xchg
inc
in
cmp
test
iret
push
popf
mov
imulb
pop
add
sbb
cltd
js
lret
into
xchg
cmp
push
cmp
movsl
mov
add
xchg
add
pushf
sbb
jbe
inc
pop
mov
add
and
add
mov
add
add
push
mov
mov
clc
xchg
adc
hlt
lret
add
inc
les
add
add
daa
mov
add
add
or
shlb
add
sahf
cmpsl
sub
jnp
mov
add
or
add
xchg
push
mov
lret
jmp
ret
ret
add
and
aam
loope
mov
ljmp
or
add
mov
fwait
sbb
add
rol
push
push
add
sbb
add
iret
jmp
fldl
and
loop
cmp
les
fcomi
notb
mov
add
pop
fidivrl
in
and
add
xor
pop
sub
add
pushf
sbb
bound
adc
xchg
push
xor
add
daa
mov
in
sbb
push
cwtl
add
add
lret
push
clc
js
shlb
add
add
std
xchg
dec
call
add
and
jae
jge
add
mov
add
push
mov
add
inc
xchg
aaa
loop
or
cmpsl
mov
mov
test
add
jmp
cwtl
dec
push
xchg
repnz
lcall
add
mov
add
adc
and
xlat
lahf
shr
sbb
sub
add
and
add
loope
pop
xchg
test
cmp
cli
in
daa
mov
add
insl
jg
orl
xchg
sbb
jnp
jge
inc
ljmp
inc
mov
sub
jle
add
fldenv
iret
mov
add
stos
add
sbb
jno
inc
rolb
add
std
fisubs
add
jp
sbb
arpl
sti
lahf
xchg
cmp
aam
loop
add
rcr
add
lahf
jl
lods
sbb
add
add
mov
add
fisubs
add
mov
jno
sub
add
sarl
sbb
jns
bnd
xchg
add
mov
add
repz
sti
xor
pop
leave
ret
sub
add
les
add
xor
add
or
add
pop
clc
into
mov
add
lods
add
sbb
mov
inc
out
push
ret
adc
sti
xlat
out
mov
add
mov
sub
mov
add
mov
add
jl
inc
mov
or
pop
xchg
jno
int
mov
out
out
push
sti
jbe
add
mov
std
outsb
in
out
enter
jl
subl
cmp
add
cmp
daa
add
add
outsl
scas
addb
fsubrs
dec
dec
xchg
cmp
push
jle
push
mov
hlt
cmp
iret
inc
hlt
shlb
xchg
xor
shlw
jg
mov
lret
push
add
add
add
sti
xchg
repnz
add
cmp
clc
fcmovbe
mov
jmp
loop,pt
mov
inc
inc
fincstp
pop
mov
lcall
dec
addr16
adc
mov
into
call
stc
mov
outsb
notb
mov
mov
mov
add
test
add
stc
cltd
call
enter
mov
add
cmpsl
aad
lahf
mov
or
add
rcrl
movsb
add
iret
test
push
jns
scas
mov
push
or
add
push
pusha
add
dec
cmp
xor
add
test
jbe
cmpl
add
ret
imul
xchg
sub
mov
sbb
lods
add
add
fldpi
insb
xor
loop
cwtl
xchg
in
add
sub
add
gs
cmp
stos
jnp
inc
shl
testl
add
xchg
push
push
xchg
in
fcmovb
fwait
push
out
push
sub
imul
scas
inc
fsubr
xor
js
add
pop
shll
imul
add
popa
and
add
pusha
fbstp
inc
inc
adc
push
mov
add
aaa
fisttps
lods
add
push
aad
jbe
loopne
inc
push
inc
sub
add
repz
add
or
add
lahf
jbe
inc
xchg
movsb
add
cwtl
rcll
mov
sub
add
sbb
mov
add
push
jne
mov
js
mov
add
test
add
adc
negb
jne
into
xchg
xchg
mov
mov
pop
mov
push
sbb
lret
in
test
lods
test
loop
jno
jp
adc
add
add
mov
add
fsubl
pushf
jb
aam
test
sub
xchg
icebp
cmp
add
mov
add
sti
adc
call
lock
dec
int
outsl
dec
push
stc
add
add
pushf
cmp
jns
fwait
cmp
cltd
push
call
sbb
ja
iret
fsubl
stc
stos
add
sbb
in
test
add
jge
or
test
add
lods
adc
lcall
movsb
add
sbb
xchg
out
mov
pop
xor
push
testb
scas
jne
dec
rcrl
inc
adc
cli
ljmp
outsb
aaa
pop
and
add
mov
pop
rorb
or
add
aas
rcrb
jns
in
add
pop
pop
jecxz
add
xchg
jo
fs
cmp
jl
icebp
sbb
add
loop
dec
aaa
shlb
ds
sbb
cltd
aas
in
dec
or
add
hlt
decb
add
jmp
fs
les
jnp
leave
mov
add
mov
mov
sahf
jg
add
scas
add
xchg
jae
scas
pop
outsl
mov
loop
adc
iret
pop
and
add
rcrb
mov
add
add
aaa
dec
xor
out
push
fdivrs
mov
xchg
xchg
sub
add
out
inc
fadds
fcmove
in
mov
add
sub
add
jl
xchg
add
add
sub
add
sub
add
aad
arpl
sahf
lahf
mov
cmp
xlat
or
add
je
jle
jmp
jmp
addl
add
add
stos
add
pop
inc
movsl
sub
out
lock
add
lea
push
and
lahf
scas
shl
or
add
je
roll
adc
add
call
and
stos
xlat
mov
add
xor
jge
mov
xchg
add
push
das
out
or
add
stos
add
add
insb
movsb
add
xlat
and
cmp
out
ret
push
or
lods
add
lods
sti
je
inc
int3
pop
mov
call
mov
cmp
bound
hlt
fistps
add
dec
xchg
add
inc
inc
cmp
add
add
and
cmp
pushf
hlt
in
fadds
mov
js
adc
add
clc
fldenv
add
xor
addb
add
pop
das
sub
add
aaa
sub
push
adc
add
test
sub
push
dec
fcmovu
bound
js
andnps
loop
hlt
inc
jo
pop
sub
add
int3
mov
or
add
xchg
mov
add
add
jbe
and
jmp
test
mov
and
xchg
lods
add
ss
add
add
repz
in
stos
fwait
inc
jmp
loop
ljmp
add
lods
xor
add
sub
add
xlat
inc
pop
repz
lahf
xor
inc
jnp
or
add
jno
add
sar
movb
orl
mov
and
add
popf
xor
test
add
jne
jecxz
lock
mov
sub
add
pushf
daa
jnp
out
scas
add
in
cmp
aaa
mov
add
xchg
in
mov
add
mov
jp
in
cmp
add
aam
insb
pop
xor
jb
jle
mov
imul
xchg
shlb
dec
cli
ljmp
push
add
xchg
xor
mov
into
dec
cmp
and
add
call
xchg
adc
mov
subl
outsl
aas
xchg
das
add
add
aam
lock
jmp
sbb
inc
aaa
ss
mov
add
sbb
add
mov
add
jbe
out
xor
pop
mov
cmpsl
loopne
push
sub
add
clc
ljmp
add
mov
xchg
aad
jb
mov
setle
xchg
xor
dec
mov
add
sahf
stos
add
fildl
add
ss
add
jnp
iret
fs
pop
leave
imul
push
pop
xchg
add
cmc
sbb
stc
jns
mov
loop
imul
adc
fstl
pop
int3
add
and
add
add
jg
fistpll
fistl
add
dec
lcall
stos
inc
je
inc
js
push
lea
add
xor
push
pop
test
add
xlat
xchg
int3
and
jnp
lods
cmp
push
ja
ljmp
mov
inc
aam
dec
js
pop
adc
add
xchg
add
adc
jb
push
mov
fimull
add
sti
enter
jmp
out
or
add
add
xchg
sbb
push
inc
lods
add
data16
addr16
add
js
cmc
clc
sbb
jg
pop
addb
ficoml
adc
or
add
or
sub
add
jp
gs
and
add
jp
dec
or
add
inc
loopne
mov
add
loope
jns
dec
stos
add
xor
dec
notl
sbb
fldl
add
dec
or
add
ljmp
in
pop
mov
and
ret
pusha
mov
int
sub
add
add
arpl
mov
out
cmp
xchg
cmpsl
sbb
xor
loope
inc
or
add
mov
pop
cmp
icebp
sub
andl
test
dec
out
fsubrl
adc
mov
mov
dec
das
repz
pop
mov
das
out
add
nop
addb
or
add
enter
inc
or
addr16
xor
jmp
pop
push
enter
sbb
add
call
iret
dec
xlat
mov
movsb
add
fsts
pop
dec
loopne
lds
push
leave
inc
ss
add
hlt
or
add
cmc
xchg
loop
adc
mov
xchg
cmpsl
dec
shll
add
mov
cmp
loop
xchg
outsl
arpl
rol
adc
adc
dec
and
std
sub
add
out
fcmovnb
clc
and
in
subl
mov
push
add
in
test
out
movsl
pop
push
leave
cmp
xchg
idivb
les
add
imul
add
mov
jae
scas
jb
add
fnsetpm(287
or
frstor
mov
dec
fsts
fdivrl
popl
inc
pop
sbb
jnp
add
pop
mov
or
mov
xor
int
add
cmp
repz
add
add
cld
dec
jmp
pop
sub
add
add
inc
lret
mov
add
or
add
addb
jne
cmpsb
add
shr
ficomps
add
or
add
mov
jb
and
add
push
ds
decb
or
add
push
inc
out
out
jno
cmp
add
ret
rcl
xchg
mov
fisubrs
xchg
pop
sbb
add
cld
int3
cmp
sbb
hlt
and
add
lods
add
and
and
add
ss
lods
add
push
push
add
dec
repz
add
adc
imul
add
cld
mov
pop
sahf
cmp
popl
mov
addb
lods
in
push
jno
add
shll
test
add
xor
add
iret
pushf
mov
mov
sbbl
outsl
inc
sbb
mov
mov
popa
and
ret
lods
mov
sbb
add
scas
add
test
fnstsw
inc
pop
movsl
data16
sti
sbb
loopne
jmp
mov
add
lds
in
dec
sbb
bound
jno
ja
lret
add
add
add
ja
leave
insl
cli
add
add
push
popf
sbb
pusha
push
add
mov
sub
call
popf
pop
fsubr
sub
or
add
leave
mov
add
mov
dec
fiaddl
push
mov
adc
mov
mov
add
add
rorl
add
adc
xchg
or
mov
add
ret
enter
add
and
add
lods
add
out
push
icebp
ror
jo
mov
mov
add
shrl
or
or
add
push
cmp
into
jae
add
inc
lahf
out
in
fcoml
enter
add
xchg
stos
add
cmpsl
sbb
xor
test
add
int
adc
add
push
daa
shll
push
dec
testl
jb
inc
hlt
pop
cld
sbb
push
imul
lea
cmp
xchg
dec
in
add
or
add
imul
rcrl
pop
clc
sti
xchg
and
fidivrs
add
add
daa
ficompl
inc
fdivs
and
add
cld
xchg
enter
jmp
dec
lret
add
fstps
xor
adc
add
mov
arpl
add
imul
clc
insb
and
xchg
fistps
xor
lahf
jbe
inc
jb
mov
js
fsubrp
repnz
xchg
cmpsl
xchg
push
inc
fildl
fidivs
fnstcw
scas
add
dec
pushl
incl
add
inc
fldenv
sbbl
cmp
mov
rorl
add
add
roll
add
sub
add
out
add
rorl
add
and
push
or
lret
loopne
inc
scas
add
lods
mov
add
jns
xor
fwait
iret
mov
xor
xchg
mov
add
add
cld
shl
leave
test
int3
cmpsl
mov
fimull
fidivl
in
push
inc
inc
push
outsb
dec
pop
mov
mov
cmp
add
fldenv
push
outsl
add
inc
mov
mov
das
cmp
in
pop
ja
add
mov
add
xor
xlat
loopne
add
xorw
jnp
add
mov
mov
cli
mov
inc
test
clc
in
js
add
mov
xor
movsb
add
shrb
jnp
add
rcll
in
addb
ficomps
add
add
idivl
cltd
or
add
fs
addb
jnp
jge
iret
dec
nop
call
xchg
adc
add
and
add
xchg
stos
add
dec
cmp
push
movsb
add
jb
sub
mov
sbb
sub
add
dec
ror
inc
push
xchg
mov
aaa
adc
or
add
xchg
fisubs
add
fimuls
xchg
add
mov
das
and
add
mov
xor
xor
in
test
lret
cmp
bound
inc
or
add
cmp
dec
adc
push
mov
mov
add
fsubr
jl
outsb
xchg
add
add
lods
neg
dec
movsl
pop
scas
and
add
dec
jl
fsubp
rorl
inc
inc
pop
addb
cmp
dec
pop
lcall
add
add
push
jl
pop
jp
jbe
mov
lea
cmp
adc
inc
add
fstl
jns
lds
lret
iret
fwait
sub
add
pushf
js
sub
add
ret
and
add
lds
mov
icebp
sbb
xchg
and
add
jle
lahf
mov
add
mov
ljmp
xor
mov
add
xor
fimull
inc
nop
mov
adc
add
add
enter
jg
loope
mov
add
dec
cld
xchg
xor
movb
int3
lods
add
shll
pop
pop
cmp
pop
jmp
add
pushf
je
add
cld
xchg
pop
addb
jae
movsl
xor
add
jge
or
add
shll
mov
pop
xchg
aaa
push
andl
jp
mov
cmp
push
pop
pop
pop
jne
push
sbb
add
arpl
les
out
test
add
add
insl
sbb
inc
into
push
lcall
add
dec
in
repnz
mov
pop
pop
jae
inc
push
push
mov
test
pop
sbb
add
adc
rcrl
pushf
jmp
testb
add
pop
add
xor
add
ficompl
int3
cwtl
ljmp
jns
lcall
cmc
je
into
popa
cmpsb
add
push
mov
add
and
add
adc
push
jp
stos
adc
add
ja
popf
sbb
aad
rolb
add
inc
std
mov
ja
cmpsl
fsubr
mov
add
mov
add
dec
or
add
xor
mov
shr
push
adc
adc
icebp
pop
jo
add
sub
add
mov
outsb
popf
cmp
xchg
add
add
add
cli
aas
iret
push
or
loope
dec
fstp
mov
push
xor
dec
xor
fbstp
lret
insl
jno
add
push
mov
mov
add
xchg
fcom
push
gs
cli
test
add
jae
popa
outsb
push
gs
enter
mov
push
mov
mov
mov
adc
sarl
add
push
mov
add
and
add
dec
mov
add
enter
addb
sbb
dec
add
add
add
adc
enter
popa
loope
jb
inc
clc
je
jae
add
aam
sub
add
push
cmp
pop
adc
mov
into
add
add
mov
out
cmpsl
mov
add
mov
lea
sbb
adc
add
pop
inc
daa
pop
mov
dec
scas
add
test
add
enter
add
int3
xor
pop
xchg
push
add
cmp
add
sub
add
push
ret
cmp
fdivs
add
add
sub
add
cmc
xchg
addr16
xor
or
mov
fwait
pop
xchg
ficomps
add
mov
or
add
fisubl
jno
mov
jbe
je
add
jg,pt
js
clc
or
add
out
test
add
adc
inc
loopne
sub
add
add
out
cltd
lret
mov
lock
insb
cmc
xchg
popf
aaa
dec
mov
pop
xor
mov
add
add
dec
shlb
mov
fwait
test
add
push
imul
mov
xor
add
add
xchg
or
add
jp
push
add
nop
jle
push
int3
stc
sbb
in
jmp
test
rclb
pop
xor
and
add
inc
jl
sub
aad
bound
add
sub
add
push
cmc
jecxz
add
and
mov
sub
add
sbb
cmc
sbb
add
cmp
adc
ret
add
push
pop
cltd
scas
add
nop
lock
add
jb
mov
add
and
add
rcll
jmp
add
lahf
imul
push
add
add
add
jg
add
ret
loope
add
inc
sub
mov
pop
sub
add
add
xor
add
insb
imul
inc
inc
mov
insb
inc
into
lret
mov
jle
addr16
cli
jb
mov
add
add
jb
pusha
pusha
nop
das
fisubl
mov
add
dec
xchg
adc
add
dec
imul
add
int
daa
pop
push
xchg
leave
pop
pop
cmp
dec
add
add
