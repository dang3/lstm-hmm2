mov
fisttpl
add
or
insl
inc
out
fmuls
xor
repnz
push
cs
testb
add
mov
jb
loop
sub
outsb
aam
fnstenv
loop
test
outsl
mov
add
or
mov
dec
out
lods
mov
fsubrl
add
add
int3
mov
add
mov
leave
sahf
int3
mov
pop
call
add
int3
mov
add
mov
and
into
mov
pop
or
add
add
stos
add
cmp
test
add
scas
nop
add
adc
call
add
cmpsl
sub
jae
inc
mov
popl
jg
add
movsb
add
in
mov
xchg
add
dec
cmp
cmpsl
repz
add
sub
add
mov
pop
cmpsb
add
pop
xor
in
and
add
push
add
addb
dec
dec
adc
add
mov
add
cltd
mov
add
cmpsl
xchg
xchg
inc
jl
and
mov
fistpl
pop
sbb
add
inc
add
or
mov
iret
repnz
div
pop
js
inc
add
mov
arpl
add
mov
mov
xor
ja
jne
fisttpl
je
loope
dec
mov
iret
cmp
lret
iret
outsl
repnz
xchg
cmp
mov
mov
add
add
add
bound
mov
add
movb
pop
jecxz
sar
cmp
add
push
addb
ja
add
add
mov
aas
mov
das
fs
add
rolb
mov
add
movsb
add
lret
sti
test
movb
mov
or
sahf
aam
cwtl
pop
stos
sbb
jnp
add
inc
add
jae
cmpsl
mull
out
and
mov
jno
test
pop
pop
xor
aad
add
push
add
lret
add
jge
add
dec
shl
rolb
adc
push
inc
incl
cmp
in
out
inc
adc
jae
cmp
sbb
add
std
and
mov
insl
sahf
call
test
mov
lret
cld
xchg
ret
add
add
jg
fbld
lret
repnz
das
outsl
insl
mov
xchg
add
cmp
cmp
xor
rcrb
cltd
or
in
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
addb
push
add
add
cmpl
mov
jecxz
add
xor
test
add
add
add
lcall
xor
sbb
xchg
add
mov
mov
add
loope
cs
jge
add
dec
out
adc
or
add
add
repnz
jne
jb
dec
stos
xchg
add
jbe
ds
enter
add
mov
lret
pusha
add
add
mov
push
movsl
mov
jmp
mov
out
ds
sbb
add
add
std
pop
mov
add
mov
imul
add
sub
add
pop
repnz
add
xchg
daa
repnz
dec
and
mov
and
mov
rolb
or
int
fs
cmp
adc
xchg
add
out
sub
cmp
adc
mov
cs
add
add
xlat
mov
add
pop
and
mov
cmp
dec
pop
sbb
xlat
mov
add
aad
pushf
popf
mov
cmp
stos
mov
xchg
lds
add
fsts
das
in
mov
add
mov
jnp
add
jmp
test
jp
sbb
outsb
sub
mov
daa
bound
mov
imul
gs
and
pop
in
cmpsl
aad
add
out
mov
add
cmc
fistpl
add
pop
and
lret
pushf
pop
call
xor
push
addb
add
mov
and
pushf
inc
adc
add
sub
xchg
testb
add
cs
mov
sub
add
pop
inc
lods
test
lock
data16
add
stos
push
pop
add
and
loope
stos
xor
add
movsb
add
add
mov
leave
testb
ret
xor
sbb
add
mov
add
add
movb
lcall
mov
cwtl
pop
outsl
inc
out
add
add
pop
cmp
add
push
add
add
jp
aas
or
daa
jmp
dec
scas
fisubs
add
outsl
add
mov
js
xor
xchg
jb
mov
add
and
sahf
mov
lds
mov
je
dec
jae
cmp
imul
mov
ficompl
xchg
add
add
scas
test
sub
sbb
and
push
add
or
xchg
lret
cmp
movb
cmp
add
jns
add
movsb
add
and
inc
sbb
jnp
jb
fcomp
adc
add
into
push
add
icebp
pusha
add
pop
push
add
jecxz
inc
movsb
add
je
push
add
mov
xor
scas
cwtl
cmc
bound
mov
mov
sub
xor
mov
movl
mov
sub
lahf
imul
add
xor
push
add
movsl
adc
test
bound
mov
ficompl
sbb
dec
addb
mov
loope
jns
mov
add
add
add
mov
add
add
add
adc
cmc
push
add
pop
in
mov
and
mov
sbb
add
push
into
pop
aam
fsubrs
add
rorl
pusha
add
movsl
scas
loopne
fistps
adc
add
or
gs
cmp
and
inc
add
add
rolb
jns
test
test
jle
sub
rolb
scas
rcl
add
test
add
xor
add
pop
add
add
add
jae
add
add
mov
add
fwait
andl
push
mov
addb
add
repz
and
and
mov
js
add
testb
sbb
push
aas
rolb
add
jle
add
mov
lcall
lds
adc
mov
cmp
adc
mov
cwtl
in
adc
testb
add
inc
add
scas
popf
les
push
push
add
add
add
lea
add
mov
rolb
cwtl
shll
xchg
imul
fs
lret
xlat
dec
mov
push
add
ret
add
xor
jl
daa
inc
ret
lahf
movsl
fiaddl
add
fs
aaa
jbe
js
cmp
std
repnz
in
pop
mov
sub
icebp
inc
add
outsl
pop
leave
addb
ja
add
add
cs
pop
sub
add
adc
cmp
inc
add
std
rolb
testb
xchg
inc
add
mov
push
lea
mov
xor
cwtl
push
and
add
sub
dec
xchg
add
adc
fisubl
add
add
or
add
add
add
sub
add
mov
xchg
dec
xor
sub
add
xchg
aam
mov
addr16
mull
add
mov
add
push
add
pop
rolb
xlat
enter
stos
stos
cmpsl
js
mov
scas
or
cmp
cmp
push
push
lret
sbb
xor
mov
mov
add
add
fsts
vcvtpd2dqy
jmp
pop
sbb
add
adcl
nop
add
shl
test
sti
jb
jecxz
aaa
repnz
js
add
adc
inc
add
xor
imul
add
mov
hlt
add
ds
add
adc
rolb
add
xor
inc
mov
addr16
pop
leave
bound
mov
pop
je
jo
inc
add
mov
int
loopne
jne
add
pop
aad
loopne
xchg
add
push
add
dec
lea
add
mov
add
mov
shll
push
add
add
add
sbb
frstor
adc
cs
das
cmp
add
aam
jbe
addb
xchg
add
adc
inc
add
icebp
lds
lahf
ljmp
add
cmp
push
or
int
xlat
lods
cmp
cmp
inc
add
lret
popf
dec
outsl
sti
sahf
into
push
jl
add
add
add
nop
add
cmpsb
add
add
cli
pushl
addb
push
add
push
pop
pop
xchg
add
lock
mov
lock
add
jae
pop
xor
in
pop
andl
mov
in
loop
stos
loope
xchg
test
sbb
add
mov
dec
pusha
add
insl
dec
jnp
nop
add
movb
call
lret
inc
add
in
dec
ret
push
fcmovbe
add
iret
dec
fcoml
inc
add
mov
or
cmp
dec
dec
pop
adc
mov
ret
aam
xor
shr
test
sahf
push
add
imul
jle
add
sub
imul
test
add
add
jecxz
xor
add
cmpsl
in
ljmp
add
jno
popa
lea
push
xor
imul
cmp
mov
mov
mov
add
mov
add
addb
xlat
xchg
add
add
dec
lcall
add
shrl
jmp
add
rolb
add
data16
push
hlt
add
mov
bound
mov
in
call
add
js
dec
mov
cwtl
mov
out
pop
addl
rolb
jl
push
add
cmpsb
add
int
loopne
test
orl
add
adc
jmp
or
push
add
add
mov
add
pop
inc
cli
sbb
add
pop
mov
jnp
add
push
lahf
jbe
sub
adc
add
xchg
loopne
push
stos
in
add
mov
push
or
mov
jp
adc
out
test
xchg
mov
dec
add
mov
add
add
add
pop
ljmp
movsb
add
and
stc
mov
jge
add
add
push
add
xor
inc
add
add
pusha
add
pop
lods
jns
add
or
add
fbstp
sub
jle
add
or
add
add
mov
mov
mov
lods
pop
outsl
xchg
cmp
scas
dec
dec
mov
pusha
add
call
lods
test
imul
scas
add
add
and
mov
mov
add
cmp
mov
lea
sub
scas
in
xchg
add
mov
cmpsb
add
sti
pop
dec
mov
cmp
add
call
jnp
inc
add
add
add
push
add
fcomps
cltd
addb
test
inc
add
testb
add
sahf
xor
mov
add
int
jne
add
enter
jb
add
add
nop
add
rolb
adc
iret
ret
push
mov
sub
and
mov
push
xor
adc
mov
pusha
add
dec
cmpsl
jecxz
clc
addb
push
add
out
push
fwait
addb
loope
add
add
jge
mov
in
mov
int
or
add
add
mov
test
lahf
repz
cmpsb
add
roll
cmpsl
cmp
add
jecxz
inc
frstor
mov
add
add
std
test
jbe
je
push
add
cmp
mov
inc
add
add
inc
in
jb
add
sub
push
ds
add
sub
pop
lods
loopne
cmp
js
pop
pop
in
sbb
push
dec
push
adc
push
fldl2t
inc
add
test
add
out
fisttpl
add
cwtl
dec
call
sbb
aam
cmp
add
add
add
pop
add
pushl
add
mov
push
add
dec
fcomi
lahf
mov
roll
add
add
cmp
add
insb
inc
jmp
add
add
test
scas
adc
lock
cmp
leave
pop
mov
mov
je
xor
jnp
mov
push
add
addb
out
fldcw
add
jnp
pop
cwtl
addb
addb
mov
add
add
add
fs
mov
mov
repnz
sbb
inc
std
xor
xchg
add
add
sub
add
enter
loope
mov
out
add
fwait
push
add
rolb
add
stos
adc
ret
stos
sahf
cmp
das
popf
and
mov
add
or
xchg
add
sub
xor
add
scas
mov
dec
xchg
popa
loop
mov
cmpsb
add
mov
add
pop
or
mov
add
test
push
add
fsts
add
insl
mov
repz
cmp
addb
and
mov
add
js
add
lcall
add
jbe
lret
mov
cmpsb
add
add
fnstenv
sbb
or
jge
add
xor
std
jae
adc
add
lcall
jb
sub
add
add
rolb
cmp
add
mov
into
sub
xor
popf
fstl
add
cmpl
mov
add
add
add
or
mov
add
jp
add
mov
jl
jge
arpl
pop
mov
xchg
add
add
pop
iret
jp
pop
jecxz
add
add
xchg
dec
lea
lock
insl
mov
iret
mov
fs
addr16
lods
stos
daa
add
mov
stos
ljmp
xor
adc
push
add
dec
lcall
outsb
scas
add
mov
push
add
or
dec
fmull
jb
cmpsl
lahf
inc
add
pop
add
mov
test
fdivrl
cltd
inc
jae
lods
out
movb
into
fucomip
xchg
call
add
stos
sbb
and
xor
cli
inc
mov
mov
push
add
mov
add
add
fistps
add
fcomip
add
add
cmc
pop
fdivr
aam
sbb
daa
dec
xchg
add
std
mov
rorl
sub
push
add
lods
in
jmp
mov
cmp
add
add
aas
add
cmp
mov
dec
jne
into
in
mov
or
rolb
jmp
add
pop
pop
lahf
dec
out
loop
stc
leave
push
cmpsb
add
jle
cmp
cs
and
pop
cmpsb
add
add
mov
push
xchg
inc
add
add
fimull
mov
or
ds
in
bound
mov
scas
push
add
adc
pop
cmpsb
add
add
add
iret
mov
add
leave
cmc
mov
xor
jge
add
and
mov
add
test
hlt
add
popa
scas
xchg
add
xchg
test
iret
loope
negl
mov
mov
in
aaa
xor
addr16
sahf
dec
jecxz,pt
inc
add
jmp
sar
js
mov
add
stos
add
mov
add
add
add
add
dec
cwtl
out
add
imul
cmp
push
add
add
cmc
add
repnz
rcll
add
push
add
fdivl
add
mov
jge
add
mov
add
add
jbe
sbb
push
add
add
mov
iret
mov
testb
adc
add
or
mov
and
cmp
add
rolb
jnp
xlat
cli
lods
mov
add
mov
sti
jle
dec
mov
out
arpl
xchg
sahf
lahf
inc
add
add
pop
xor
sti
in
loope
add
lea
sub
mov
imul
pop
repz
pop
adc
lds
and
mov
bswap
xlat
icebp
out
sub
jns
xchg
bound
mov
test
jb
ljmp
psrld
cmp
outsb
movb
add
clc
mov
xor
call
dec
je
in
notl
and
push
add
in
lret
xor
enter
xchg
or
inc
fistpl
pop
add
mov
add
out
movsb
add
scas
jg
fadds
add
add
sbb
add
ret
mov
add
scas
int3
jae
add
lcall
add
stc
cwtl
mov
into
sub
mov
xor
or
leave
mov
mov
ds
or
sbb
jo
scas
and
jne
jmp
pushf
pop
es
jb
sub
jbe
scas
and
mov
js
add
int
jmp
nop
add
movsb
add
mov
int
jg
add
add
xchg
ret
mov
inc
rcll
and
das
jecxz
add
and
fsts
add
add
ret
pop
push
xchg
add
in
in
inc
jns
out
sbb
xchg
add
lock
cli
jo
push
lods
add
call
dec
or
movsb
add
add
pop
rolb
cmpsl
mov
add
add
icebp
push
push
add
lret
mov
loop
mov
mov
daa
sbb
mov
sub
xchg
add
cmpsl
in
jl
ficoml
int
je
mov
testb
inc
dec
rolb
adc
ficompl
repnz
test
test
adc
cli
jae
mov
inc
movsl
movsl
lods
movsl
inc
lods
mov
sbb
pop
dec
pusha
add
js
mov
jge
add
add
xor
jns
add
add
pop
in
fwait
orl
mov
movb
mov
add
add
fistl
add
sbb
mov
sbb
mov
add
jno
jp
add
clc
movb
xlat
inc
add
dec
cmp
mov
and
test
add
xor
push
cltd
mov
add
imul
pop
push
add
rolb
cmp
add
add
sub
test
add
cmp
sbb
add
and
icebp
push
popa
xchg
add
inc
add
pusha
add
add
mov
shl
add
add
add
xchg
add
jg
mul
add
add
sub
ja
xor
or
cli
adc
stc
add
mov
iret
mov
stos
inc
mov
cmp
mov
out
out
dec
lret
xor
mov
daa
cli
aaa
inc
testb
add
mov
out
add
cmpsl
adc
lret
sarl
dec
inc
loope
cltd
push
ficomps
rolb
xlat
in
add
mov
stos
scas
mov
add
rolb
mov
xchg
add
xor
test
sub
push
push
fcmove
pushf
or
add
pop
xor
daa
pushf
mov
js
cltd
mov
xchg
ret
or
mov
cmp
xor
xlat
loopne
mov
icebp
push
insb
dec
jne
rolb
mov
mov
sub
or
adc
lods
mov
iret
add
daa
arpl
mov
int
cmpsl
cld
cltd
stos
stos
gs
mov
push
add
imul
mov
or
sub
add
aad
repz
aad
add
add
lcall
in
jecxz
add
movsl
jb
sbb
add
movsl
jp
add
cld
mov
jle
push
movsl
sbb
add
or
aaa
pop
int
mov
data16
addb
add
aaa
sub
bound
mov
roll
scas
addb
aam
mov
inc
add
test
ret
add
add
adcl
cmpsl
inc
movsl
jle
test
or
rcrl
add
add
cmp
addb
add
adc
inc
add
dec
and
sar
aad
jg
add
xchg
add
add
add
add
inc
or
fidivrl
xor
shll
popa
xor
mov
mov
inc
add
jb
push
add
add
push
add
and
mov
push
rolb
repz
enter
fists
add
jecxz
leave
cmpsb
add
fwait
jae
add
in
dec
ffreep
cmpsl
jo
add
mov
addb
je
sub
xchg
scas
xor
inc
test
movb
testb
mov
add
jae
add
icebp
jae
sbb
jns
and
mov
add
fxch
gs
add
pop
out
test
mov
mov
dec
add
add
das
xorl
fiaddl
add
cmc
call
add
in
add
inc
add
mov
jmp
xor
dec
rolb
pushf
ret
insb
sbb
int3
test
ret
add
adc
cmp
mov
mov
mov
loope
add
adc
dec
lret
pop
xchg
add
push
add
decb
stc
push
jle
xchg
add
divl
bound
mov
cmpsl
mov
dec
lods
mov
add
add
sarl
sub
jecxz
mov
dec
sub
aas
test
add
mov
adc
out
cmpsb
add
mov
fldt
add
clc
in
aas
inc
jae
lea
mov
das
mov
gs
jns
add
mov
ficomps
lods
mov
mov
in
stos
cs
add
mov
repnz
repnz
cmp
test
les
outsl
adc
add
shr
and
outsb
add
in
xchg
mov
add
add
add
ret
rcll
push
imul
jmp
sbb
cld
aam
jmp
rolb
daa
xchg
add
mov
cmpsb
add
add
fiadds
push
mov
push
add
cwtl
rolb
aad
test
les
jmp
stos
scas
pop
xchg
add
add
in
ss
popa
xor
add
lahf
jns
cmp
lods
pmulhw
add
jle
sub
into
hlt
add
xchg
iret
jne
xchg
add
addr16
out
testb
pop
divl
push
add
add
inc
loope
add
jmp
push
daa
add
add
add
test
or
movsl
jmp
add
and
mov
test
pop
add
add
sbb
sub
int
push
add
add
and
xor
rolb
imul
shll
push
cmp
add
nop
add
adc
in
sbb
add
popa
jge
scas
add
xor
mov
addb
add
aaa
or
xor
push
popa
movb
jo
mov
add
int3
xchg
push
add
or
add
pop
sbb
nop
add
int3
dec
data16
push
add
add
lods
sub
mov
add
pusha
add
add
add
ja
add
mov
jmp
mov
add
test
fsub
outsl
aad
nop
add
add
jl
lock
mov
push
add
add
loopne
push
add
cs
add
pushf
rolb
leave
mov
rorl
pop
xchg
or
testb
cmc
rcrl
dec
sub
mov
icebp
mov
add
std
cmp
push
add
cs
inc
push
add
mov
cmpsb
add
xchg
cli
xchg
add
add
sbb
add
lds
and
add
xchg
sub
xchg
add
popf
aad
fbld
add
fwait
jle
add
mov
mov
add
call
enter
das
out
vmwrite
cmpsb
add
add
rolb
jae
sub
add
movsb
add
push
add
add
fidivrl
push
out
jp
test
movb
inc
push
and
fimuls
and
pop
int3
adc
out
outsl
fnstcw
icebp
mov
mov
jbe
loopne
or
test
mov
or
mov
mov
add
add
adc
jmp
jne
rcrl
adc
cmpl
pop
test
push
aas
and
mov
inc
gs
add
cmp
sbbl
push
add
inc
add
cld
out
and
rolb
sti
movsl
lret
stc
mov
jge
add
add
or
mov
xchg
add
add
add
mov
add
add
push
add
test
add
add
pop
xlat
addr16
ljmp
sbb
add
add
add
sub
add
add
fnstcw
test
ljmp
add
add
add
add
add
pop
sbb
mov
add
mov
outsl
les
aaa
je
imul
xor
cmp
mov
and
mov
adc
nop
add
jb
in
leave
movsl
ud1
jmp
adc
shr
jae
out
addb
add
mov
sbb
mov
add
sti
and
pop
mov
inc
cmc
in
mov
mov
add
rol
add
shld
and
call
push
mov
xchg
arpl
daa
ss
and
ret
add
sbb
cmp
add
add
add
data16
shll
add
pop
sbb
add
pop
cmpsl
fmuls
add
shll
in
int
xchg
add
repz
add
pop
xchg
mov
dec
push
aam
sbb
mov
mov
aam
cli
insl
push
dec
arpl
add
add
or
push
add
and
add
add
mov
jg
nop
add
adc
je
add
mov
add
pop
outsl
push
fsubrl
jp
add
aaa
out
add
add
add
add
add
cs
jmp
add
rolb
cmp
mov
mov
and
mov
mov
jmp
add
inc
add
pusha
add
add
pop
sti
dec
jae
fistpl
mov
jbe
add
mov
dec
fst
add
jp
mov
aas
outsb
js
xor
push
and
out
aad
test
mov
mov
add
mov
pop
bound
mov
push
sarl
gs
ljmp
mov
test
imul
push
add
add
xor
pop
fcomps
lahf
ror
jo
arpl
je
jo
addr16
add
cmc
mov
inc
add
iret
mov
addb
iret
jmp
push
pop
mov
test
or
mov
insb
mov
add
lret
jno
mov
dec
leave
mov
lahf
add
mov
pop
data16
push
std
cli
mov
iret
sub
popa
jge
xchg
jecxz
push
push
mov
push
bound
mov
mov
rol
mov
cmp
xor
movsb
add
sbb
jge
add
push
dec
fwait
mov
dec
adc
addb
and
mov
rolb
stc
or
clc
or
clc
add
or
arpl
sahf
mov
add
jmp
add
add
sti
out
gs
xchg
add
add
and
lock
push
sub
fs
xor
cmc
mov
sbb
mov
mov
mov
xchg
in
testl
add
cmp
bound
mov
inc
add
add
push
mov
mov
jne
pop
movsl
repz
dec
cmp
lret
and
imul
aad
enter
mov
mov
pop
push
add
cwtl
jns
outsb
incl
addb
push
or
pop
movswl
pushf
arpl
leave
iret
dec
scas
fmul
add
pop
insl
lock
mov
jge
add
movsl
das
adc
cltd
aam
out
mov
xchg
lahf
or
add
testb
int
mov
ret
mov
add
inc
add
jno
into
jno
jge
dec
popa
js
add
jb
js
ficomps
fldcw
add
add
fldcw
int3
pop
add
jle
adc
xchg
push
add
pop
and
or
or
push
add
into
insb
jl
xor
mov
mov
add
ljmp
aad
aas
outsl
fiadds
add
add
add
ret
inc
add
js
mov
add
mov
dec
or
adcl
add
add
lcall
add
mov
sbb
jne
dec
mov
addb
sub
in
cld
repnz
pop
hlt
add
add
mov
lds
testb
icebp
lods
rorl
rcll
add
add
add
add
pop
mov
rdtsc
dec
int3
int
mov
add
add
popf
clc
aad
add
pop
mov
sbb
jo
pop
fcomps
out
xchg
mull
mov
cmp
pop
and
mov
push
lods
mov
cmpsl
movb
push
add
xchg
add
test
cli
mov
repnz
outsb
adc
pusha
add
add
push
lret
inc
pop
or
sub
add
ret
jo
inc
call
int3
add
add
lds
or
push
pusha
add
xchg
xor
add
add
add
pop
aaa
dec
mov
add
mov
add
rolb
push
add
add
add
add
das
add
out
inc
ds
push
jp
adcl
add
ficoml
jg
add
add
adc
pop
syscall
jne
pop
lcall
popa
pop
mov
rolb
icebp
adc
les
dec
bound
mov
adc
rolb
push
pop
dec
stos
roll
add
mov
mov
imul
mov
ret
dec
leave
sub
add
sub
add
int3
add
sahf
jno
add
add
sbb
sbb
rcrl
jmp
int3
xchg
add
cltd
mov
push
add
ret
hlt
add
les
je
sbb
dec
xor
int
dec
push
add
cltd
push
add
add
add
cmp
jno
int3
test
inc
add
cmp
cltd
fistps
and
iret
xor
cmp
push
mov
mov
add
add
andl
add
add
jge
push
add
lcall
add
mov
add
jns
add
mov
in
ljmp
adc
mov
cld
push
xor
jae
pusha
add
nop
add
pop
icebp
ja
and
mov
ret
rolb
cmpsl
xchg
test
arpl
lret
lea
add
add
jae
add
cmp
fcoml
and
add
inc
add
inc
add
mov
add
lret
cmp
or
add
add
xchg
add
add
adc
sti
sbb
add
add
imul
nop
add
lret
xor
dec
xchg
dec
loope
add
add
pop
sarl
add
rolb
mov
add
mov
add
add
push
add
cli
xchg
add
pop
xchg
testb
repz
jl
ja
lret
add
add
mov
scas
and
add
mov
cmp
out
std
int
xchg
add
add
sub
movb
add
xchg
add
in
adc
mov
add
sbb
cmp
xchg
dec
pop
inc
add
sub
cmp
lahf
mov
test
movsl
inc
add
add
or
mov
add
icebp
lahf
and
testb
add
mov
add
mov
mov
cmp
xor
add
and
mov
fistl
adc
stos
es
cmp
out
jne
inc
add
xchg
add
outsb
fsubp
idivl
icebp
inc
add
ss
pop
adc
dec
jae
sahf
rcrl
push
add
add
jne
sbb
mov
dec
sub
adc
add
add
movb
pushf
or
loopne
sbb
fwait
ljmp
add
inc
xor
add
add
data16
outsb
pop
pop
jae
add
push
das
leave
or
movl
addr16
or
std
adc
test
xor
xchg
xor
adc
cmp
stc
cmc
fadd
add
add
add
fldt
add
add
mov
cltd
mov
leave
jl
add
add
add
shl
add
mov
xchg
rolb
cmp
lret
enter
add
add
bound
mov
xor
add
imul
mov
mov
sti
add
iret
popf
cmp
mov
add
add
rcr
sbb
add
push
xchg
xchg
add
xlat
add
mov
int3
add
add
int3
fstps
add
add
mov
add
fnstcw
add
mov
add
ja
pop
adc
ret
out
lods
xor
fisubl
loope
push
add
add
and
mov
mov
bound
mov
add
or
pushl
sbb
popf
xor
std
jae
inc
xchg
add
xor
push
movb
add
mov
out
or
jne
add
xlat
ja
xchg
add
and
mov
jg
inc
add
cli
mov
outsl
imul
pop
outsb
pushf
mov
fwait
sbb
fprem1
scas
cltd
addb
add
lcall
add
xchg
add
fisttpl
add
add
lahf
dec
ss
aaa
push
push
add
adc
mov
add
add
add
mov
push
or
cmp
pop
mov
add
xor
adc
das
push
add
movsl
les
popf
dec
repnz
push
sbb
jno
lds
add
dec
ja
fstl
or
cmp
data16
ds
cli
fsubrs
add
add
add
add
inc
add
and
dec
call
ds
in
negl
xor
xchg
add
sub
add
add
movsb
add
mov
dec
and
pop
jnp
adc
push
add
into
cmp
sub
add
sahf
mov
add
mov
add
fcmovu
add
mov
outsb
mov
jle
push
add
repz
push
inc
sub
insb
test
int3
iret
sub
pop
mov
cmp
jp
mov
enter
and
mov
inc
mov
add
add
jp
in
std
adc
push
add
lret
ret
cli
xor
and
mov
add
xor
sub
add
and
mov
add
sti
addb
add
into
xor
ret
sbb
mov
pop
add
mov
jnp
std
pop
sub
rolb
pop
inc
add
cli
loop
xchg
add
aam
enter
mov
xor
mov
clc
cld
addb
mov
add
mov
or
fldt
mov
add
add
push
imul
into
stos
stos
stos
cld
jae
out
cmpsl
add
add
add
aad
sub
aam
mov
add
xlat
data16
leave
pop
xchg
add
and
jbe
or
add
popf
push
add
xor
das
mov
add
mov
aam
out
adc
cwtl
dec
jge
addb
push
add
adc
mov
inc
cwtl
sub
add
mov
imul
lds
pop
fstl
add
add
mov
mov
outsb
popf
mov
and
pop
adc
jno
add
mov
jmp
add
add
add
mov
add
jb
scas
mov
add
mov
or
add
ret
dec
ficomps
inc
fsub
add
add
js
data16
pop
addb
out
mov
xchg
ret
add
add
jl
add
and
test
mov
addr16
add
jmp
adc
popf
xchg
add
mov
add
pop
dec
mov
loop
fwait
add
mov
mov
lds
push
mov
xor
mov
sbbl
loop
adc
jmp
push
rolb
add
aam
jae
mov
dec
popa
dec
sbb
xor
shll
mov
ja
sbb
add
mov
loope
add
push
cli
rolb
lds
mov
pop
or
int3
pop
cmp
xchg
xchg
leave
in
mov
cmp
inc
add
addb
add
enter
add
inc
add
add
aam
insb
leave
sti
add
mov
xchg
add
gs
ja
nop
add
mov
add
push
pop
mov
imul
loope
inc
add
mov
popf
repnz
sbb
jecxz
ret
add
lcall
xchg
add
push
mov
or
add
jmp
add
push
add
mov
jle
cld
mov
jo
out
ljmp
daa
outsl
jecxz
xchg
jp
add
add
test
into
inc
daa
test
insb
cmp
fdivrl
xchg
cld
stos
mov
addb
jb
out
mov
mov
cmp
mov
or
jbe
add
xor
insb
ficoml
jg
push
out
mov
add
add
dec
shr
cmc
adc
push
push
xchg
rcll
pop
mov
adc
cmp
add
and
add
pop
shl
fwait
mov
jge
fsubp
add
rolb
clc
mov
push
bound
mov
cld
in
pop
push
add
add
add
adc
rcl
add
add
add
mov
aaa
je
sahf
loope
add
push
pop
mov
pushf
sbb
pop
fistpll
and
add
sub
ret
call
iret
dec
jmp
test
add
sub
add
mov
pop
mov
ret
push
add
iret
mov
sub
rorl
inc
mov
dec
jnp
incl
adcl
and
xchg
and
mov
mov
pop
jecxz
ja
test
fwait
and
xor
or
nop
add
mov
mov
add
enter
sub
lahf
push
add
add
popf
mov
div
push
jl
cmpsl
iret
xchg
into
inc
add
dec
mov
mov
inc
scas
push
jg
sub
daa
lods
les
insb
push
add
add
bound
mov
loopne
sbb
pop
mov
xchg
xchg
sub
in
push
repnz
xor
add
xchg
xor
inc
pop
jp
add
add
add
adc
jae
int3
in
scas
dec
std
or
add
aas
adc
mov
xchg
add
vandpd
ljmp
add
add
push
add
jns
add
dec
shl
mov
fcomip
add
rorl
outsl
rolb
or
jne
or
adc
add
js
xor
adcl
mov
or
xor
sub
add
fstl
add
and
mov
add
lret
in
out
jo
fnsave
add
aas
fchs
add
add
sbb
bound
mov
add
push
pushf
repnz
test
add
mov
add
pop
adc
inc
add
adc
popf
js
jge
mov
call
fsubrl
add
add
add
or
lock
cmp
add
mov
add
add
nop
add
ja
pop
xor
adc
dec
jno
mov
sbb
int3
jbe
mov
addr16
outsb
push
add
add
cmc
cli
cmp
add
mov
pop
lret
sub
add
or
add
add
add
jle
xchg
out
xchg
lods
xchg
add
sti
xlat
mov
xor
jg
dec
and
mov
add
lahf
aam
sub
add
pushf
xchg
add
ret
clc
jae
dec
mov
sbbl
cltd
mov
add
add
sub
dec
dec
inc
addb
test
insl
sub
out
pusha
add
add
sahf
sbb
add
cli
jp
jmp
outsb
or
daa
rorl
jbe
jmp
mov
sbbl
add
cmc
or
repnz
add
add
sub
sbb
pop
movb
add
aas
push
in
cmpsl
or
add
aam
xlat
jbe
scas
pop
rorl
daa
fldt
jb
mov
or
outsb
mov
scas
add
add
int3
repnz
orl
rorl
repz
mov
xchg
das
xchg
jmp
cwtl
sahf
movb
mov
add
mov
sub
push
add
xchg
add
clc
xchg
and
sahf
mov
push
add
add
loope
xchg
add
or
and
and
dec
scas
inc
add
add
sub
xorl
pop
and
fcomps
add
adc
mov
xor
push
add
ret
std
sbb
int3
and
into
add
and
mov
adc
push
gs
addr16
mov
add
mov
add
sahf
jnp
into
jne
scas
jmp
push
add
adc
jns
incl
out
mov
cwtl
hlt
add
inc
inc
add
add
jo
enter
add
iret
push
add
ficomps
call
test
add
jecxz
cmp
mov
mov
xchg
addl
test
fsubp
xchg
add
movb
add
push
add
sbbl
add
mov
or
shl
fisttpll
inc
add
pop
outsl
dec
cmp
cld
sbb
xchg
add
xor
dec
jl
insl
jle,pn
jmp
add
movb
mov
sbb
pop
out
dec
nop
add
fwait
and
cmp
rolb
lock
add
inc
cwtl
or
out
roll
ret
sbb
pop
sarl
scas
mov
leave
lahf
inc
add
jne,pn
cli
add
sub
dec
aam
pushf
mov
pop
jp
jge
inc
add
out
sbb
movb
pushf
jbe
cmp
xchg
xor
aad
popf
push
add
mov
cmp
add
add
scas
lahf
pushf
pop
cld
and
mov
js
add
or
cmp
test
pop
int
pushf
or
add
insl
xlat
fldt
add
add
in
shr
pop
push
dec
jg
rol
cmp
scas
aas
out
sti
cmp
xchg
cwtl
xor
stos
push
add
jmp
add
xchg
cmp
sbb
cmpsl
movsb
add
add
stc
add
cmp
push
test
xchg
mov
lds
sbb
push
mov
push
sbb
js
add
mov
inc
add
pushf
mov
add
outsb
outsl
rolb
pusha
add
add
pop
fcomps
or
or
add
adc
es
inc
add
fnstcw
add
add
mov
rolb
aam
inc
push
js
add
add
push
add
fisttpl
push
add
popf
decl
mov
add
mov
push
add
or
outsb
mov
rcrl
outsl
lods
arpl
add
add
test
jl
dec
pop
mov
stos
jl
lods
rolb
push
inc
sbb
add
push
add
lods
aaa
mov
int3
xchg
insb
push
add
or
loop
out
or
jle
mov
sbb
pop
mov
imul
mov
mov
add
test
repnz
pop
cld
int
mov
cmp
rorl
add
and
pop
leave
sbb
dec
ljmp
mov
add
lods
jo
ret
in
push
cmp
mov
mov
add
or
cmp
out
mov
imul
hlt
add
dec
dec
arpl
add
mov
add
shll
and
mov
mov
lods
fcompl
jb
adc
push
add
mov
inc
add
in
add
movsb
add
add
jns
add
add
add
enter
sbb
inc
add
aad
add
jne
testb
insb
mov
aas
and
jb
mov
pextrw
or
and
mov
dec
and
add
ds
mov
add
add
int3
pushf
dec
jo
pop
mov
fwait
ljmp
popf
lahf
adcl
xcrypt-ctr
adc
sub
sbb
movb
add
out
inc
jnp
add
add
inc
add
jbe
xchg
call
pop
sahf
js
pop
fnstcw
pop
call
sub
push
rolb
ja
add
add
add
add
data16
xchg
add
add
gs
arpl
cmp
add
sbb
push
fisubl
add
xchg
mov
in
pop
pop
cli
push
add
add
add
lret
cmp
add
mov
or
jge
sbb
add
add
out
lds
add
inc
pop
fstl
int
add
mov
xor
add
sbb
rol
jmp
add
aad
and
mov
dec
push
mov
jne
add
lcall
addb
call
mov
add
test
add
adc
jo
add
mov
jnp
out
pusha
add
add
mov
movb
incb
add
add
pushf
add
mov
add
add
add
add
jo
iret
mov
daa
je,pt
and
add
std
rolb
jecxz
mov
cmp
frstor
lcall
add
xlat
sbb
add
nop
add
sub
add
mov
sbb
fwait
dec
mov
push
add
add
xor
xchg
iret
push
aad
das
dec
jb
xchg
int
add
pop
push
mov
icebp
jno
js
pusha
add
cmp
add
and
mov
cmp
xor
add
call
data16
into
pop
mov
scas
xor
pop
add
mov
add
or
add
decl
cs
pop
arpl
andl
add
add
pop
jns
add
add
pop
xchg
add
add
gs
add
fmuls
sub
leave
imul
xor
add
stos
push
add
fwait
leave
gs
shl
add
dec
leave
lock
loope
xlat
jae
scas
jg
nop
add
enter
push
add
sbb
push
cltd
cs
add
popf
adc
movaps
fwait
xlat
test
movsb
add
add
jae
add
ret
cltd
push
mov
in
fcoml
inc
movsb
add
pop
mov
sarl
add
data16
jnp
add
in
xchg
push
add
cmp
mov
in
lods
pushf
out
out
jbe
sbb
add
into
push
add
aad
sbb
inc
add
addb
push
add
arpl
mov
add
nop
add
test
les
shll
jbe
mov
add
cmp
gs
dec
dec
push
push
add
mov
addr16
jle
inc
add
add
in
add
mov
add
add
out
dec
daa
mov
add
mov
ret
sub
xchg
push
add
addb
mov
in
xor
test
mov
add
adc
jae,pn
add
dec
ret
push
add
rcll
or
mov
sbb
mov
mov
pop
fwait
enter
add
adc
aaa
mov
dec
mov
sti
xor
cmp
jmp
xor
add
add
rolb
test
sub
sub
xchg
adc
lock
jno
jg
pop
dec
xchg
push
add
push
stos
jae
xor
mov
fstps
fdivrp
mov
or
loop
xchg
push
push
add
in
inc
add
pop
mov
mov
hlt
add
pop
addb
add
repz
pop
sbb
adc
outsb
in
les
rolb
add
or
or
mov
rolb
jl
add
mov
out
or
mov
add
arpl
test
lds
mov
or
pushf
and
add
leave
pop
bound
mov
xlat
lods
int3
mov
add
insb
adc
add
mov
test
add
add
jg
pop
loopne
inc
pop
mov
add
add
addb
movb
add
add
mov
adc
xchg
loop
cmpsl
cli
jbe
mov
repnz
xchg
and
mov
mov
add
fwait
cld
leave
cmpsb
add
xor
xor
ja
shll
add
add
pop
insl
lret
fmull
pop
cmp
neg
sub
jae
inc
add
add
mov
lcall
jbe
dec
xchg
icebp
cli
je
add
add
cmpsb
add
imul
mov
pop
dec
shll
sbb
add
cmp
add
and
jp
add
add
clc
lds
dec
or
out
imul
pop
lahf
addl
add
repz
add
add
mov
cmpl
lret
sbb
inc
add
aam
fsubrl
sbb
add
cli
enter
add
push
add
inc
notl
mov
or
aaa
out
nop
add
stos
dec
mov
mov
mov
add
pop
push
inc
add
movsb
add
add
add
pop
fwait
pushf
inc
imul
mov
ficomps
add
add
imul
add
ret
xchg
add
sbb
xor
js
add
add
int
dec
ret
add
popf
inc
add
add
add
add
shl
in
add
gs
repz
lods
add
test
jg
sbb
ja
add
cmpsl
dec
xor
rolb
dec
jmp
and
aad
add
jle
push
add
addb
stc
mov
add
mov
cltd
stc
out
popf
roll
add
lret
cmc
fmul
addb
add
loop
fwait
sub
sbb
add
sub
cmp
add
add
or
mov
jle
pop
jae
inc
pop
xor
add
jecxz
int
add
add
pop
xchg
add
push
dec
jecxz,pn
add
or
cwtl
lret
add
adc
inc
add
cli
stos
cli
repz
adcl
push
call
repz
rolb
aaa
test
adc
paddusb
and
add
jp
xchg
leave
mov
loope
shrl
add
add
in
daa
jge
sub
in
inc
dec
addb
xchg
pop
mov
cltd
adc
popa
in
jbe
aad
mov
loope
dec
arpl
xchg
les
fisttpll
pop
ljmp
jge
add
jmp
inc
int3
xchg
js
dec
add
add
pop
mov
leave
ds
inc
add
aaa
mov
imul
xchg
add
pop
rolb
adcl
push
xchg
jmp
orl
outsb
imul
in
data16
cmp
popf
cmp
scas
jno
aas
jnp
out
pop
test
xor
repz
add
into
and
repz
std
scas
in
adc
lock
test
cmp
add
add
mov
sbb
pop
lock
push
xor
add
sahf
cld
add
mov
add
mov
insb
push
add
add
xor
add
add
inc
add
cld
pop
mov
jns
int3
fisttps
add
int3
push
add
mov
sbb
pop
mov
aas
xchg
movb
add
dec
test
add
and
mov
das
adc
pop
pop
hlt
add
icebp
testb
add
dec
mov
ja
fwait
pop
push
lods
pop
in
jno
add
pop
push
cmp
lahf
inc
sub
data16
mov
xchg
sub
cld
push
add
int
xor
fildl
scas
adc
xor
das
lods
nop
add
push
cmp
add
mov
in
arpl
mov
jl
jg
test
mov
ljmp
push
cli
mov
inc
add
in
add
mov
daa
dec
cltd
pop
in
mov
pusha
add
ficomps
mov
xchg
and
or
mov
add
ds
dec
jnp
cmp
pop
and
into
cmp
mov
adc
movb
arpl
fimuls
popf
xchg
add
movsb
add
mov
vpmulhuw
mov
shll
xor
popa
adc
aaa
into
jp
add
fisttpl
pop
and
add
mov
imul
roll
dec
mov
aas
imul
icebp
mov
loope
js
add
add
add
cld
mov
popf
jb
push
daa
inc
add
xchg
add
push
add
leave
clc
xchg
inc
js
push
testb
cmp
rolb
add
pop
mov
in
add
mov
push
add
add
add
xor
jno
pop
mov
xor
add
jb
test
lods
arpl
out
clc
sahf
jmp
or
rolb
iret
jnp
add
fisttps
xchg
add
movsb
add
sti
adc
ljmp
add
rolb
cmp
add
scas
pop
std
fdiv
inc
add
popa
sti
inc
mov
mov
add
xchg
add
add
xor
lods
loope
and
orl
cmc
das
shrl
mov
add
dec
in
in
add
add
jb
int3
negl
mov
pop
pop
pop
xlat
lea
clc
les
fisttps
add
pop
sub
rolb
in
mov
push
add
add
pop
mov
inc
mov
mov
mov
add
les
and
mov
sub
pop
or
test
jae,pn
out
adc
movsb
add
xchg
test
dec
fstl
pop
sbb
lods
adcl
mov
mov
jbe
xchg
add
into
into
rolb
add
xor
fcmovnbe
add
add
xor
or
rolb
sub
aas
jbe
and
sbb
add
fwait
mov
jmp
mov
add
inc
mov
mov
je
insl
push
add
jmp
add
add
push
add
add
add
dec
sub
add
mov
add
mov
xor
sti
xchg
enter
add
mov
xchg
popf
into
leave
out
bound
mov
add
rolb
add
into
lock
add
xchg
xchg
rolb
add
push
jl
dec
sub
add
add
add
scas
out
addb
add
mov
add
test
mov
xor
jg
mov
cmp
inc
add
int
add
push
add
rolb
or
mov
fwait
or
jmp
jl
add
stc
and
sub
jl
add
add
data16
add
mov
pop
jns
jp
int
add
add
icebp
lret
in
das
jp
sbb
or
jmp
mov
jae
add
jnp
pop
add
inc
clc
xchg
lea
xchg
lahf
push
or
test
inc
add
jne
xchg
add
mov
xchg
adc
add
cmc
dec
nop
add
add
gs
pusha
add
int
inc
add
gs
push
add
add
stos
mov
add
in
adc
sbb
push
lcall
add
add
cli
imul
lea
push
xlat
dec
or
sbb
xor
add
lock
add
ror
cmpsb
add
jmp
add
mov
cltd
div
add
mov
add
pop
out
call
add
mov
xor
add
pop
ljmp
das
scas
clc
mov
mov
add
scas
lods
dec
mov
imul
xchg
add
mov
daa
into
cmp
add
lcall
sub
stos
jg
push
mov
inc
and
mov
jmp
add
hlt
add
rolb
movsb
add
mov
add
aad
sbb
icebp
xchg
in
insb
incb
inc
add
cmpsb
add
repnz
cmp
add
testb
push
add
push
mov
add
add
in
int3
ljmp
add
add
add
les
aas
leave
lods
popf
cmovbe
jno
aad
add
xor
add
add
int
add
lock
pop
adc
inc
add
cmp
add
rsqrtps
addl
popf
outsl
pop
bound
mov
add
add
shr
mov
lcall
leave
jg
add
loopne
addb
jbe
sbb
rolb
pushf
or
add
push
add
mov
mov
mov
mov
add
fsts
add
sbb
mov
popf
popa
jno
add
js
add
add
add
jp
push
add
lret
sub
add
add
mov
arpl
add
cmpl
addb
leave
cmp
je
aas
jns
addb
bound
mov
add
add
loop
hlt
add
mov
addr16
cmc
cmpl
add
jb
addb
cmpsl
mov
mov
push
add
rolb
bound
mov
adc
add
mov
popf
jmp
inc
leave
lahf
add
cltd
jnp
add
repz
pop
fdivrl
add
rolb
xchg
adc
jo
into
aad
sub
popf
push
push
add
addb
int
jo
sbb
xor
mov
jge
sub
add
leave
stc
lret
aam
add
pop
mov
pop
push
adc
mov
push
add
inc
data16
sbb
sbb
mov
push
inc
add
add
pop
jo
in
repnz
rcr
dec
and
add
xchg
dec
sub
test
xor
push
add
add
add
xchg
rolb
popa
mov
add
mov
js
add
clc
leave
cltd
cltd
pop
cmp
push
add
add
add
cwtl
jnp
incb
loop
sub
add
add
jle
dec
testb
add
mov
sub
mov
add
add
and
mov
movsb
add
add
add
aaa
int3
pop
add
mov
mov
clc
add
add
sub
lret
add
add
sub
out
mov
sbb
add
jns
mov
add
nop
add
mov
add
mov
in
add
push
pop
sbb
add
ja
jl
push
lods
outsl
les
cwtl
pushf
repz
mov
pop
outsl
in
testb
mov
jae
pop
cs
sub
fisttps
sub
add
add
rolb
enter
mov
jae
add
add
mov
fnstenv
ja
pop
or
loopne,pn
stos
cwtl
lret
sbb
pop
cmp
adc
push
iret
test
and
inc
repnz
add
xor
dec
fndisi(8087
in
xor
add
and
add
jle
mov
mov
cmp
mov
sbb
testb
add
add
add
fcoms
cmpsb
add
pusha
add
and
into
inc
mov
and
mov
ds
xor
mov
adc
jnp
cmp
push
lock
mov
out
fnsave
add
icebp
inc
add
pop
ret
xchg
add
mov
lret
jb
or
add
add
add
test
add
push
add
push
add
rcll
push
rep
sbb
mov
je
paddsw
movsl
add
mov
or
hlt
add
icebp
gs
push
add
repnz
ret
mov
xchg
aas
fldcw
iret
popa
out
test
and
out
loopne
mov
push
pop
out
stos
lret
fnstcw
add
out
fidivs
add
lods
xchg
nop
add
lcall
lret
push
add
pop
pop
xchg
mov
mov
xchg
xor
out
loop
rolb
and
mov
xchg
popa
shrl
andl
add
insb
lea
add
fldenv
push
or
mov
add
mov
or
add
and
jg
mov
sahf
daa
data16
je
pop
add
mov
add
mov
add
add
xchg
mov
jnp
add
add
mov
loop
pop
xchg
cmp
addb
add
call
nop
add
jae
inc
add
out
lret
add
lahf
mov
push
cmp
xor
inc
add
and
jp
mov
add
add
jg
and
mov
repz
and
outsb
mov
jo
ret
jecxz
shll
int
fstp
fldcw
add
leave
or
testb
fdivrl
jmp
pop
inc
enter
mov
addb
mov
arpl
add
loope
sti
aas
push
mov
push
add
or
add
add
push
cmpsb
add
sub
add
jb
js
notl
add
lock
add
out
push
mov
add
add
add
and
sti
jne
out
add
add
insl
mov
test
add
cmpl
pop
aaa
adc
mov
push
loope
add
adc
enter
cli
in
mov
movsl
lcall
sbb
movsl
adc
add
jns
enter
mov
add
mov
xorl
sub
insl
dec
mov
add
add
add
mov
popa
pop
add
add
jl
push
sub
add
add
ror
xor
mov
add
and
mov
add
loope
cmp
add
data16
lcall
add
testb
add
in
xlat
lahf
aad
ss
loope
add
xor
enter
push
jae
add
mov
xchg
popf
sbb
dec
sub
lahf
cmp
das
jb
adc
add
add
jo
mov
data16
pop
lea
add
pushf
add
pop
cmp
add
xlat
xchg
dec
jb
lret
pop
add
jle
lock
or
jg
bound
mov
add
cmpsb
add
movb
movsl
pop
clc
sbb
lret
test
out
add
movl
add
loop
test
or
jecxz
add
add
add
sub
test
add
in
add
add
add
stc
bound
mov
add
jle
jnp
sbb
mov
test
xchg
fiadds
mov
mov
xor
lahf
add
adc
fsts
fimuls
mov
ret
push
movsl
std
ret
add
mov
add
add
jge
mov
pop
popa
mov
std
add
xor
dec
or
jne
lds
add
jp
add
mov
fbstp
in
test
add
adc
xchg
add
fsts
add
add
jl
or
clc
stos
cli
add
mov
add
and
sbb
insl
jnp
daa
nop
add
pop
pushl
and
insl
sbb
dec
je
pop
inc
add
mov
add
add
je
sub
filds
add
movb
pop
adc
cld
cmp
inc
dec
or
add
push
add
iret
push
add
add
in
sub
add
cmp
jnp
in
nop
add
jbe
mov
add
or
add
lea
and
mov
test
push
dec
das
int3
xchg
add
testb
add
int3
and
add
test
mov
lret
add
sub
sarl
sarl
dec
rorl
lods
sub
add
add
pop
insb
fwait
inc
add
lret
sbb
add
and
sbb
cmp
add
and
ret
int
mov
cmp
mov
push
lret
add
xchg
add
sarl
repz
push
add
clc
cmp
add
dec
fcmovnb
ja
cld
add
mov
adc
add
add
add
xchg
rolb
mov
shll
add
or
pop
sbb
testb
addb
jne
xor
mov
push
nop
add
cmc
mov
inc
sub
fcoms
and
add
ret
jbe
xchg
dec
mov
jns
cmc
or
add
jb
push
sub
add
inc
push
add
push
add
and
add
cltd
pushf
adc
enter
test
sub
jae
mov
jb
mov
call
pop
aad
add
cmp
sbb
jl,pn
js
adc
mov
outsb
cltd
jnp
inc
push
fcoml
dec
jle
add
xor
in
js
inc
add
adc
add
mov
data16
aaa
jae
addb
pop
inc
add
loopne
xor
repnz
cmp
arpl
pop
add
rolb
push
in
imul
add
push
add
pop
push
add
sub
rolb
push
fistl
add
add
add
pop
test
lahf
mov
cmpsl
add
lds
add
insb
data16
add
mov
add
in
out
adcl
inc
add
add
inc
push
jae
push
cli
jmp
add
add
aaa
mov
stc
iret
pop
ljmp
add
add
xlat
push
std
mov
push
add
inc
add
mov
add
les
sbb
lock
insb
fidivrl
mov
add
enter
and
add
out
cmpsb
add
add
mov
inc
push
add
add
add
push
cli
or
mov
pop
adc
nop
add
fdiv
add
mov
cltd
xlat
push
mov
sbb
jbe
inc
imul
gs
xchg
cli
iret
dec
nop
add
mov
xchg
icebp
addb
outsb
cwtl
fwait
mov
add
push
jle
cli
xor
lret
mov
add
cmp
xchg
pop
and
xchg
insl
inc
add
filds
add
add
xchg
add
call
sti
cli
xor
ds
std
inc
add
xchg
mov
ja
lods
pop
loopne
data16
add
ret
add
add
add
mov
std
cld
testb
add
add
add
add
aad
iret
inc
add
add
add
mov
fistps
add
ret
lock
hlt
add
jle
in
pop
push
add
add
add
push
add
aam
dec
sub
insb
push
lods
iret
xor
arpl
inc
add
out
xchg
add
xchg
add
cld
out
jecxz
xor
mov
mov
add
ret
cltd
cwtl
je
add
mov
into
mov
adc
in
add
add
fwait
pop
scas
stc
imul
add
rolb
add
pop
or
data16
add
add
data16
inc
add
and
mov
jg
addr16
sti
add
adc
xchg
sub
notl
cmp
pop
sbb
mov
mov
add
sub
add
sub
gs
jnp
xlat
dec
and
mov
jecxz
add
mov
xchg
add
lods
leave
out
repz
ja
add
dec
je
xchg
add
push
add
add
cmpl
loopne
xchg
jmp
push
cmp
push
add
add
faddl
fidivl
mov
or
fidivs
add
adc
mov
add
sub
add
xor
mov
add
add
fcomps
cmp
add
or
pop
imul
add
enter
mov
sti
in
push
add
add
push
stos
adc
fwait
in
dec
loopne
add
xchg
add
fsts
pop
iret
cmp
add
jmp
clc
cmp
add
inc
mov
inc
pop
mov
add
or
add
stc
jmp
add
mov
add
aam
test
add
mov
adc
xor
imul
and
xor
and
mov
add
leave
dec
push
pop
push
add
add
mov
add
cltd
int
imul
add
push
add
add
test
xor
gs
cmpsb
add
add
add
xor
mov
and
mov
xchg
add
pop
mov
mov
inc
add
inc
inc
add
into
mov
xchg
add
add
sub
add
or
int3
addb
fdivl
test
or
cmpsl
call
loope
xchg
sbb
xchg
add
add
add
add
mov
jo
jmp
imul
outsb
rolb
jb
rcll
dec
push
push
out
push
add
xchg
xor
mov
add
jg
jmp
adc
in
sbb
add
add
mov
mov
push
add
add
mov
xor
movb
or
add
rolb
lahf
or
and
mov
pop
add
dec
aas
movsb
add
add
mov
mov
add
icebp
push
in
testb
push
fs
add
lods
and
stos
in
ror
or
popa
loopne
daa
cmp
dec
add
mov
lds
add
sub
pop
add
mov
or
mov
mov
add
or
js
mov
mov
or
xor
in
mov
pop
sub
jb
lock
add
adc
pop
lret
xor
lock
add
add
jmp
add
out
inc
mov
sbb
push
mov
adc
mov
add
mov
popa
sub
mov
add
mov
inc
add
cltd
mov
icebp
sbb
inc
inc
add
mov
mov
sbb
test
stos
les
popa
stos
data16
xor
add
sbb
fpatan
jbe
int3
cmp
add
lock
js
push
std
or
pop
cmc
xchg
fisubs
adc
mov
cmc
rolb
and
popf
xor
mov
lahf
sbb
add
ljmp
stos
cld
std
imul
push
or
push
add
call
cmp
test
mov
add
add
repz
xchg
add
jl,pt
mov
ljmp
xor
int
daa
jo
sub
popf
jge
inc
fwait
rolb
fldt
cmp
add
pop
imul
test
jecxz
test
outsb
addb
adc
rolb
mov
inc
pop
test
add
clc
loopne
xchg
add
loope
add
outsl
pop
mov
and
adc
add
jg
repz
mov
add
add
add
xchg
add
mov
out
ds
xchg
cwtl
sti
add
repz
cmpsl
push
jne
add
jno
sahf
sahf
adc
xchg
sbb
add
add
aad
and
fcmovb
jb
jl
add
addb
xchg
add
add
lds
jmp
dec
xchg
jecxz
add
jge
inc
add
roll
dec
mov
xchg
add
test
add
add
cmc
add
add
stc
das
add
cmp
push
add
mov
mov
add
fsubl
mov
push
fidivl
inc
add
mov
jnp
mov
stos
push
add
rolb
fwait
sub
add
popf
repnz
repz
sub
and
mov
dec
fldcw
push
add
mov
jne
nop
add
addl
add
add
add
add
add
mov
or
add
ret
arpl
xchg
rolb
popa
xor
mov
loope
les
adcl
jno
add
add
data16
add
jle
and
lahf
sbb
repnz
outsl
leave
fistps
testl
pop
aam
lods
mov
mov
xor
js
iret
dec
or
ret
add
loop
dec
cmp
mov
add
jg
in
dec
addr16
mov
movb
pop
inc
xchg
test
fistpll
stc
aas
adc
dec
fnstsw
add
mov
xchg
or
add
outsb
inc
add
ss
rolb
sbb
add
jo
repnz
ret
mov
mov
add
add
mov
fucomp
and
mov
int
add
lock
xor
out
jp
push
insl
pop
icebp
mov
movsl
sbb
dec
add
lock
fisubrs
xchg
add
add
and
sbb
add
add
lret
lcall
and
and
and
outsb
jecxz
int3
cmpsb
add
test
jg
outsl
add
push
iret
xlat
push
jbe
dec
rolb
pop
fisubrs
add
mov
stos
sti
push
add
add
sub
dec
sub
push
testl
add
nop
add
ret
xchg
add
fdivrl
popa
or
add
add
fcomps
les
rcr
push
mov
rolb
out
adc
pop
and
stc
ljmp
sbb
add
cmpsb
add
jno
add
add
xchg
mov
add
sbb
inc
xchg
outsb
ds
sbb
mov
mov
aam
lds
lods
add
add
mov
and
jnp
aam
or
add
xchg
add
add
add
mov
cs
cmp
idivl
and
add
rcll
inc
add
mov
sbb
and
mov
shll
cmp
sub
or
mov
and
mov
sarl
add
stos
ljmp
movb
jl
jnp
xlat
sti
das
sub
add
jle
inc
add
pop
xchg
and
mov
cmp
sub
movsb
add
push
mov
push
add
jp
addb
add
jae
jmp
jne
in
add
push
add
push
add
and
rolb
into
push
add
and
enter
add
iret
imull
jle
add
add
jno
dec
lret
push
mov
add
jno
or
in
roll
arpl
add
mov
mov
leave
or
les
lret
repz
les
arpl
add
cmp
or
add
pop
jge
add
add
add
add
add
inc
add
add
loop
outsb
pop
push
add
hlt
add
push
imul
rolb
dec
sahf
nop
add
loopne
pusha
add
jbe
and
xchg
add
push
insb
mov
cltd
dec
stos
cmp
add
ficoml
add
and
cld
nop
add
insb
dec
jle
cmc
push
add
fists
push
rorl
popf
sub
add
push
add
cmp
test
pop
ret
scas
notrack
test
insl
cmpsb
add
add
jle
add
test
dec
into
imul
test
add
adc
mov
outsb
push
bound
mov
jmp
push
sbb
rolb
or
xor
inc
add
xor
sbb
add
imul
lcall
sarl
mov
add
inc
repnz
scas
cli
cli
add
adc
dec
or
add
lret
sbb
add
aas
stos
or
add
add
add
mov
mov
pushf
mov
enter
mov
add
adc
ljmp
inc
add
movb
dec
add
add
push
pushf
or
loop,pt
cmc
add
insl
sub
mov
mov
sahf
jp
hlt
add
add
or
test
sub
ret
dec
inc
add
add
movsb
add
push
add
xchg
repz
stc
ret
inc
add
add
xchg
add
add
dec
jmp
mov
subl
add
hlt
add
xor
pushf
ret
mov
add
add
inc
loopne
movd
xchg
push
cwtl
jno
add
pop
in
and
cmp
inc
add
lret
cld
sub
inc
push
lret
pop
jp
add
jne
add
and
test
add
add
fwait
sbb
pop
add
pop
and
mov
sbb
mov
xor
jmp
fwait
ljmp
pop
ds
jae
dec
inc
mov
stos
jb
aaa
rol
mov
imul
loope
loope
mov
inc
outsl
pop
cmc
sbb
lods
mov
or
add
lahf
xchg
into
fiadds
dec
inc
enter
or
leave
xchg
dec
cmpsb
add
loope
add
push
add
ror
inc
add
add
js
clc
loope
mov
rolb
sbb
cli
push
lret
dec
dec
test
rcrl
add
int3
adc
xlat
push
out
adcl
jecxz
jbe
in
or
add
jle
out
mov
lea
lods
cs
mov
jmp
fldenv
pop
push
loope
jae
ljmp
in
add
add
add
les
mov
icebp
pushf
inc
add
mov
add
sbb
test
xchg
daa
movb
add
out
mov
out
jne
add
mov
add
xor
add
or
fnstenv
insl
fnstenv
add
lock
xor
mov
pop
xchg
add
add
inc
pop
sub
mov
add
add
sbb
out
push
xchg
sbb
subl
fistps
mov
jne
add
xchg
lods
ja
add
sbb
add
add
add
mov
mov
lcall
fistpll
dec
test
xor
add
dec
mov
mov
add
pop
fsts
mov
lret
call
stos
ret
sti
inc
mov
add
cli
daa
mov
cmp
aas
dec
testb
add
jb
data16
add
add
sbb
sub
iret
outsb
mov
lahf
out
jmp
add
dec
cmpsl
xchg
add
mov
nop
add
movb
mov
push
add
add
pushf
mov
lcall
dec
dec
cmp
push
and
cs
mov
push
pop
cmp
mov
add
in
ret
fstp
jae
add
mov
loopne
sub
add
js
scas
push
inc
sub
repnz
add
test
add
adc
add
add
add
shrl
add
add
dec
xor
lods
jb
mov
lret
mov
aam
xchg
lret
cmp
push
cmp
sbb
popa
push
xorl
add
das
adc
inc
add
sti
jb
jo
enter
add
mov
data16
shrl
add
inc
cmpsl
xlat
cs
xchg
cli
fcomi
add
inc
repz
data16
inc
add
add
in
sbbl
add
add
xchg
sub
xchg
add
leave
jns
pop
adc
repz
mov
popl
mov
lea
test
mov
adc
mov
pop
test
sbb
sarl
push
outsb
sub
xchg
jae
add
outsl
cld
into
addr16
aaa
outsb
jge
add
add
lcall
jle
cs
outsl
inc
add
test
pop
jnp
add
leave
push
push
add
call
sbb
and
mov
and
mov
loope
add
mov
add
pop
push
aam
dec
fnstsw
addb
push
add
cwtl
ret
add
cmpsb
add
in
das
push
add
adc
cmp
push
jbe
imul
add
cli
lret
out
js
pop
mov
push
dec
stos
jmp
je
cltd
test
mov
add
aas
stos
mov
pop
test
insl
ljmp
lcall
add
test
mov
ljmp
xchg
add
push
data16
cmp
xor
mov
inc
fldcw
add
or
add
mov
mov
clc
je
lods
jne
outsb
dec
adc
mov
dec
jno
jae
pop
movsb
add
roll
add
mov
add
ficoms
add
xchg
add
fbld
inc
mov
insb
mov
in
es
mov
add
push
add
add
in
aas
xor
push
add
jnp
leave
xchg
mov
push
add
das
sti
mov
fsubrl
imul
mov
sub
lea
add
lock
mov
push
add
add
mov
cmp
mov
push
add
add
jns
movb
jge
add
sbb
int3
cmp
jo
dec
jae
add
mov
jmp
ljmp
add
mov
test
out
lods
pop
mov
xor
dec
rolb
and
mov
ja
and
lods
dec
xlat
mov
fidivs
and
add
sbb
imul
test
fs
sbb
and
mov
xchg
cmp
add
add
lods
iret
xchg
lcall
hlt
add
lahf
sbb
iret
mov
or
add
lods
add
mov
in
int3
cmp
mov
jae
dec
icebp
xor
jl
add
cmp
jne
fildll
push
testb
in
in
in
xor
cmp
pop
testb
adc
add
sbb
repnz
add
add
add
sub
add
sbb
insl
notl
cmp
add
fsts
loop
add
movsl
inc
loop
loope
jbe
fmuls
xchg
inc
cli
mov
cmp
pop
addr16
sahf
bound
mov
pop
insl
addb
inc
add
mov
scas
jl
clc
or
rolb
fsubp
pop
mov
mov
test
test
movb
add
push
pop
and
add
jns
push
add
test
rolb
les
arpl
add
imul
push
out
fwait
mov
add
mov
add
pop
sahf
sbb
scas
testb
addb
add
add
add
add
sub
rolb
addb
add
shl
mov
outsl
jnp
pop
sarl
add
out
addb
pop
push
inc
add
add
jmp
movsl
mov
adc
inc
in
repnz
add
aas
add
mov
mov
notl
inc
add
jbe
push
add
out
sub
or
dec
jns
add
mov
add
or
add
mov
push
lods
mov
clc
repnz
jae
faddl
add
mov
cld
nop
jmp
add
movl
in
gs
loope
pop
clc
repnz
jae
mov
add
cmp
nop
jae
dec
sub
mov
add
nop
jmp
movsb
out
add
add
add
mov
cmp
ret
lret
add
movsb
add
insb
push
fwait
cld
nop
jmp
add
aaa
testl
sbb
popa
add
cld
nop
jmp
add
aad
movsb
add
sub
sar
repnz
jae
dec
add
add
push
mov
xchg
ret
dec
add
add
aaa
dec
jg
inc
push
mov
xchg
ret
js
or
inc
add
xchg
in
and
fwait
cld
nop
jmp
add
sub
push
repz
pushf
mov
fwait
cld
nop
jmp
sbb
add
add
add
add
add
repnz
jae
scas
add
mov
push
mov
xchg
ret
add
lea
ret
push
mov
xchg
ret
xor
add
add
out
inc
add
stos
aaa
fsubl
dec
xor
clc
repnz
jae
movsb
pop
push
das
add
mul
add
popa
add
mov
xchg
ret
add
clc
add
les
movsb
add
sub
add
fwait
cld
nop
jmp
add
add
add
sub
test
sub
nop
jmp
add
add
sbb
mov
xchg
ret
stos
jb
movl
popa
add
repnz
jae
add
xchg
add
rolb
sub
nop
jae
inc
aad
jl
inc
mov
push
cmpsl
mov
pop
mov
clc
repnz
jae
add
add
aas
push
mov
imul
add
in
add
and
mov
push
clc
repnz
jae
lds
dec
add
xor
push
cli
clc
repnz
jae
aad
add
adc
inc
push
jae
add
lret
dec
and
mov
clc
repnz
jae
insl
cmc
sti
add
fwait
cld
nop
jmp
sub
add
add
or
add
repnz
jae
loop
add
add
clc
repnz
jae
add
stc
push
add
ja
inc
add
out
aad
add
lcall
adc
add
dec
add
inc
add
rclb
fadds
xchg
ret
add
mov
mov
repnz
jae
add
pushl
cmp
clc
repnz
jae
add
add
xor
clc
repnz
jae
sbb
add
mov
clc
repnz
jae
lret
add
add
push
push
mov
xchg
ret
arpl
add
add
push
imul
add
add
sbb
divb
and
repnz
jae
add
xor
adc
and
mov
add
clc
repnz
jae
add
add
add
push
mov
xchg
ret
je
data16
js
sbb
nop
jae
pop
add
xor
clc
repnz
jae
add
dec
or
lods
push
mov
xchg
ret
lret
add
add
lahf
add
jmp
jp
fwait
cld
nop
jmp
add
mov
mov
clc
repnz
jae
jb
add
das
xchg
ret
cmpl
fwait
cld
nop
jmp
add
mov
fstpt
clc
repnz
jae
add
add
add
fwait
cld
nop
jmp
add
faddl
dec
decl
fwait
cld
nop
jmp
xor
add
add
mov
jae
add
inc
mov
cld
nop
jmp
jb
clc
add
test
std
xchg
clc
repnz
jae
add
add
mov
xchg
ret
add
jl
xchg
add
and
mov
in
enter
repnz
jae
xchg
movsb
add
lds
dec
bound
mov
out
movb
add
push
mov
xchg
ret
add
xchg
xchg
pop
adc
ret
clc
repnz
jae
add
stos
jl
mov
clc
repnz
jae
add
and
add
mov
mov
clc
repnz
jae
pop
clc
rolb
adc
mov
repnz
jae
add
add
clc
repnz
jae
add
incl
add
add
test
gs
cld
nop
jmp
add
add
add
mov
inc
in
mov
xchg
ret
dec
add
add
lret
adc
add
repnz
jae
add
add
mov
clc
repnz
jae
add
call
stos
repnz
add
mov
aaa
mov
repnz
jae
add
lods
add
xchg
data16
pusha
clc
repnz
jae
dec
add
add
add
mov
clc
repnz
jae
add
add
add
imul
clc
repnz
jae
clc
inc
add
add
mov
repnz
jae
out
or
xor
fwait
pop
push
mov
xchg
ret
add
js
aaa
add
dec
push
push
mov
xchg
ret
adc
add
imul
add
add
inc
testl
jae
jl
add
add
stc
add
inc
add
mov
fwait
cld
nop
jmp
add
clc
add
inc
or
push
mov
xchg
ret
or
pop
or
inc
iret
push
clc
repnz
jae
add
mov
xchg
test
add
clc
repnz
jae
add
inc
add
or
cmp
nop
jae
data16
add
repnz
repnz
jae
inc
fmul
xchg
add
inc
add
inc
and
clc
repnz
jae
add
add
pop
mov
clc
repnz
jae
loop
xchg
add
sub
gs
add
add
or
clc
repnz
jae
mov
jae
pop
xchg
clc
repnz
jae
add
stos
mov
add
rolb
jmp
lods
dec
lods
add
lret
add
add
aas
add
clc
repnz
jae
add
add
add
push
mov
xchg
ret
out
mov
add
cmp
sub
ja
cli
sbb
aas
add
jae
jb
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
stc
mov
mov
dec
add
mov
xchg
ret
scas
scas
add
add
data16
mov
push
mov
xchg
ret
add
add
add
mov
clc
repnz
jae
add
movsb
add
outsb
push
push
mov
xchg
ret
sub
add
jmp
add
lods
add
add
add
repnz
jae
mov
mov
xor
fwait
cld
nop
jmp
or
adc
and
repnz
jae
add
aaa
sub
repnz
jae
insl
add
add
je
jb
add
cmpl
fwait
cld
nop
jmp
scas
add
inc
add
push
add
add
mov
xchg
ret
xor
xchg
dec
aad
aas
pop
leave
clc
repnz
jae
add
add
add
nop
jae
adc
aad
pop
add
pop
sbb
add
inc
add
add
or
adc
add
aad
add
add
clc
repnz
jae
adc
stc
movswl
clc
repnz
jae
sbb
mov
and
sbb
sar
nop
jae
lahf
stos
insl
clc
xchg
and
adc
repnz
jae
dec
add
add
repnz
jae
add
add
aas
dec
call
clc
repnz
jae
lahf
cmp
out
mov
clc
repnz
jae
or
inc
pop
add
notb
inc
and
mov
cld
nop
jmp
add
into
aaa
aad
rolb
mov
clc
repnz
jae
add
lods
incl
add
mov
mov
xchg
ret
add
dec
sub
or
mov
xchg
ret
cmp
js
add
call
clc
repnz
jae
add
scas
fsubr
push
push
mov
xchg
ret
add
cmp
lahf
add
movzwl
clc
repnz
jae
add
add
clc
repnz
jae
lahf
add
add
inc
clc
repnz
jae
add
add
or
clc
repnz
jae
imul
add
jo
adc
nop
add
clc
repnz
jae
out
dec
stc
and
movb
or
clc
repnz
jae
add
add
add
xorl
repnz
jae
lds
das
clc
add
mov
mov
xchg
ret
mov
add
mov
pop
clc
repnz
jae
add
add
lret
adc
ror
clc
repnz
jae
data16
sub
dec
leave
jne
fwait
cld
nop
jmp
add
lea
aad
add
je
pop
add
fwait
cld
nop
jmp
add
add
add
add
add
pop
pusha
xchg
add
inc
and
mov
fwait
cld
nop
jmp
aad
or
je
rolb
or
add
add
clc
repnz
jae
aaa
add
and
clc
clc
repnz
jae
jb
add
add
jge
jne
push
mov
xchg
ret
faddl
add
inc
nop
add
pop
clc
repnz
jae
add
add
add
inc
adc
repnz
jae
jl
add
dec
pushf
lea
clc
repnz
jae
add
dec
inc
add
nop
jmp
add
imulb
dec
pop
mov
add
fwait
cld
nop
jmp
aaa
sub
dec
lods
cmp
pop
and
repnz
jae
or
faddl
imul
nop
jae
add
dec
test
pop
and
clc
repnz
jae
or
add
adc
xor
cli
clc
repnz
jae
das
pop
dec
mov
repnz
jae
lahf
add
inc
add
rep
push
mov
xchg
ret
add
cmp
add
xchg
cli
mov
clc
repnz
jae
lea
sub
out
lcall
or
add
mul
push
and
movb
mov
xchg
ret
add
lea
add
rep
clc
repnz
jae
arpl
add
add
add
add
aas
out
add
add
adc
fs
repnz
jae
add
add
dec
cmp
push
mov
xchg
ret
aas
pop
add
or
cld
nop
jmp
dec
add
add
add
mov
add
add
sbb
stos
negl
std
decl
pop
sbb
nop
jmp
add
mov
das
das
lahf
cli
pop
clc
repnz
jae
pop
stc
add
add
add
popa
clc
repnz
jae
add
push
adc
andl
jae
jl
add
push
cmpl
nop
jmp
add
add
add
push
push
mov
xchg
ret
sbb
scas
push
add
add
add
nop
jae
adc
mov
movsb
sbb
fildl
jmp
add
add
mov
clc
repnz
jae
add
pop
addb
cmp
fwait
cld
nop
jmp
das
incl
add
add
jae
repnz
jae
adc
add
push
out
cld
shr
clc
repnz
jae
add
adc
add
loopne
cltd
mov
clc
repnz
jae
arpl
scas
fdivr
or
clc
repnz
jae
dec
mov
add
add
mov
push
mov
xchg
ret
test
mov
nop
jmp
xchg
or
mov
nop
jae
lret
pop
dec
dec
js
adc
pushf
push
push
mov
xchg
ret
add
mov
add
xor
mov
repnz
jae
or
or
dec
sub
repnz
jae
lret
add
mov
enter
jmp
add
sub
inc
cmp
adc
add
clc
repnz
jae
add
add
mov
add
mov
call
clc
repnz
jae
insl
lds
push
clc
repnz
jae
adc
add
add
add
movzwl
clc
repnz
jae
add
jb
push
mov
clc
repnz
jae
out
fcoml
leave
push
push
mov
xchg
ret
add
add
lahf
pop
add
fwait
cld
nop
jmp
add
js
add
inc
add
add
clc
repnz
jae
push
add
cmp
push
mov
xchg
ret
add
add
clc
repnz
jae
add
add
add
xchg
fwait
mov
clc
repnz
jae
testb
call
add
repnz
jae
je
aaa
mov
add
add
repnz
jae
sbb
add
xchg
mov
cmc
adc
stos
push
push
mov
xchg
ret
add
out
add
xchg
dec
sub
jo
inc
add
dec
pop
and
into
mov
clc
repnz
jae
fdivl
pop
stos
daa
sbb
mov
xchg
ret
cmp
mov
into
adc
outsb
and
repnz
jae
add
testb
or
add
clc
repnz
jae
arpl
add
nop
jmp
add
add
dec
add
push
mov
xchg
ret
lret
divl
add
sbb
rcrb
ljmp
inc
aaa
cmpsb
add
mov
clc
repnz
jae
add
dec
add
add
push
mov
xchg
ret
add
add
ljmp
add
fwait
cld
nop
jmp
add
cmp
sub
nop
jae
testb
sub
add
les
repnz
jae
add
add
scas
dec
push
clc
repnz
jae
add
movsb
lea
aaa
add
stos
fwait
cld
nop
jmp
dec
adc
adc
dec
add
call
clc
repnz
jae
add
add
lcall
jae
add
add
add
sub
lods
and
imul
nop
jae
lds
add
inc
clc
repnz
jae
pop
add
je
add
cmp
jo
fwait
cld
nop
jmp
add
add
incl
lds
add
lods
add
add
xor
add
add
sub
mov
xchg
ret
das
add
adc
test
mov
xchg
ret
add
notb
lret
sbb
add
adc
add
scas
add
lea
test
idiv
clc
repnz
jae
pop
add
adc
adc
repnz
jae
or
aad
add
dec
xor
clc
repnz
jae
add
cmp
fldl
nop
jae
inc
testl
add
pop
clc
repnz
jae
dec
add
scas
add
stc
add
xor
push
mov
xchg
ret
add
add
add
mov
clc
repnz
jae
dec
add
movb
add
clc
repnz
jae
xchg
lea
push
add
insl
add
clc
repnz
jae
add
push
add
test
repz
clc
repnz
jae
add
sub
add
dec
lahf
testl
add
lods
das
aas
and
push
mov
xchg
ret
faddl
sub
mov
xchg
ret
add
subl
repnz
jae
add
add
pop
clc
repnz
jae
xchg
add
xchg
rolb
lret
push
clc
repnz
jae
stos
jb
fdivrl
add
repnz
lcall
add
add
dec
jb
subl
push
mov
xchg
ret
add
add
adc
xor
push
push
mov
xchg
ret
mov
xor
push
add
mov
clc
repnz
jae
sub
sub
add
add
add
out
jmp
movb
mov
inc
add
out
dec
add
movzwl
clc
repnz
jae
scas
test
xor
and
clc
repnz
jae
lods
das
add
repnz
jae
add
add
std
mov
push
mov
xchg
ret
inc
data16
add
lret
clc
repnz
jae
xchg
lret
lahf
xchg
add
or
mov
adc
repnz
jae
jb
loop
aad
mov
clc
repnz
jae
add
mul
add
lods
or
add
repnz
jae
jb
add
inc
adc
repnz
jae
divl
add
sbb
mov
xchg
ret
or
lret
xor
cmpl
fwait
cld
nop
jmp
jl
add
popf
dec
fwait
cld
nop
jmp
movl
scas
add
jmp
mov
js
add
aas
inc
mov
arpl
clc
repnz
jae
add
push
add
fsubl
popa
add
repnz
jae
or
mov
call
clc
repnz
jae
and
cmpsb
add
and
fwait
cld
nop
jmp
add
aad
add
adc
les
out
jmp
faddl
test
dec
lahf
add
js
add
dec
cmp
add
repnz
jae
add
add
leave
fwait
cld
nop
jmp
add
add
xchg
mov
or
idiv
call
add
and
add
add
jno
add
fwait
cld
nop
jmp
lret
loop
push
sbb
add
add
scas
aad
add
lods
add
aad
sbb
mov
xchg
ret
stos
dec
sub
mov
cld
nop
jmp
add
je
add
jge
fwait
cld
nop
jmp
add
testl
je
clc
repnz
jae
add
out
mov
clc
repnz
jae
stc
adc
xor
into
out
outsb
mov
clc
repnz
jae
data16
add
lahf
call
clc
repnz
jae
sub
add
faddp
add
add
add
testb
aad
add
inc
call
inc
add
add
aas
je
add
fwait
cld
nop
jmp
add
add
cld
nop
jmp
add
add
popa
clc
repnz
jae
movl
lahf
add
push
clc
repnz
jae
das
add
dec
add
data16
mov
call
clc
repnz
jae
add
test
jae
add
sbb
add
mov
mov
xchg
ret
sub
add
dec
stc
push
add
test
push
add
clc
repnz
jae
add
stc
imul
sbb
add
jmp
sbb
mov
xchg
ret
incl
add
repz
dec
push
mov
xchg
ret
out
into
add
add
mov
sbb
add
clc
repnz
jae
lret
add
nop
jae
adc
add
add
test
sti
add
clc
repnz
jae
mov
or
add
repnz
jae
lds
add
mov
cld
nop
jmp
add
insl
dec
add
add
xchg
fisttpll
cld
nop
jmp
add
add
out
add
sub
clc
repnz
jae
pop
dec
add
and
push
fs
repnz
jae
sbb
faddl
call
clc
repnz
jae
mov
or
sldt
jb
add
or
loop
clc
repnz
jae
dec
add
into
xor
fwait
cld
nop
jmp
add
pop
lret
add
add
es
xor
clc
repnz
jae
pop
sub
add
and
data16
pushf
mov
push
mov
xchg
ret
jb
inc
add
nop
jae
add
or
add
adc
rolb
xchg
ret
add
scas
add
add
pop
xchg
clc
repnz
jae
add
dec
add
imulb
repnz
jae
into
add
insl
inc
lret
aad
mov
push
mov
xchg
ret
add
insl
inc
add
add
add
add
clc
repnz
jae
inc
stos
add
jae
pusha
fwait
cld
nop
jmp
mov
js
add
add
nop
jae
dec
add
add
push
adc
push
push
mov
xchg
ret
add
inc
aas
add
add
inc
aam
add
mov
lret
jb
xor
dec
cmp
repnz
jae
add
into
push
clc
repnz
jae
aaa
add
adc
add
inc
xchg
insb
mov
fwait
cld
nop
jmp
mov
mov
aaa
movsb
and
xor
add
clc
repnz
jae
add
sahf
mov
clc
repnz
jae
add
inc
into
lods
add
nop
jae
add
aaa
js
lea
mov
push
mov
xchg
ret
add
jb
movsb
ds
clc
repnz
jae
stos
loop
add
inc
xor
les
fwait
cld
nop
jmp
adc
pop
cmp
add
nop
jae
add
add
or
add
add
cld
nop
jmp
loop
add
add
mov
fwait
cld
nop
jmp
or
incl
test
mov
push
mov
xchg
ret
add
aad
mov
clc
repnz
jae
dec
out
add
clc
repnz
jae
add
jno
xor
clc
repnz
jae
add
xor
stc
data16
add
add
mov
repz
repnz
jae
sub
add
dec
push
mov
xchg
ret
js
add
stos
negb
jl
and
repnz
jae
mov
jb
not
add
loopne
clc
repnz
jae
add
add
in
mov
nop
jmp
sbb
clc
aad
xor
divl
idiv
clc
repnz
jae
add
dec
inc
or
nop
jmp
lea
adc
dec
aad
out
jmp
aas
lds
sub
notb
out
mov
mov
add
mov
add
test
add
pop
testb
std
mov
fwait
cld
nop
jmp
dec
lahf
cmp
mov
push
mov
xchg
ret
add
popa
dec
lea
clc
repnz
jae
add
sub
cmp
repnz
jae
add
lahf
aad
add
add
fwait
cld
nop
jmp
add
add
mov
add
mov
clc
repnz
jae
movsb
imul
mov
fwait
cld
nop
jmp
arpl
add
add
push
push
mov
xchg
ret
insl
imul
mov
call
repnz
jae
clc
mov
testb
xor
push
mov
xchg
ret
imul
mov
clc
repnz
jae
add
clc
repnz
jae
add
add
lods
loop
stos
call
clc
repnz
jae
add
movzwl
clc
repnz
jae
mov
add
out
ret
clc
repnz
jae
add
add
loop
insl
lret
xor
push
mov
xchg
ret
dec
not
add
clc
repnz
jae
mov
into
push
dec
add
pop
mov
fwait
cld
nop
jmp
aad
sub
aas
idiv
in
add
add
fwait
cld
nop
jmp
or
stos
add
rolb
jmp
dec
cmp
repnz
jae
add
adc
jne
clc
repnz
jae
movl
push
jmp
add
or
add
add
scas
add
out
clc
repnz
jae
add
xchg
push
arpl
movb
lcall
movsl
in
jl
add
dec
mov
clc
repnz
jae
insl
or
pop
aam
mov
jae
scas
lahf
add
js
cmp
repnz
jae
lret
jb
mov
je
mov
add
ljmp
jb
call
aad
add
add
add
je
clc
repnz
jae
add
into
cmp
repnz
jae
loop
into
testb
add
rolb
mov
repnz
jae
add
aaa
xchg
pop
aas
lds
jns
inc
and
clc
repnz
jae
add
loop
add
repnz
add
add
sub
add
jmp
jne
clc
repnz
jae
add
add
movl
nop
jmp
loop
add
mov
add
add
jmp
jae
mov
push
add
pop
fwait
cld
nop
jmp
movsb
mov
add
add
sub
fwait
cld
nop
jmp
add
aaa
sbb
popa
add
repnz
jae
dec
das
into
out
lods
pop
je
clc
repnz
jae
add
shr
fwait
cld
nop
jmp
faddl
fcoml
add
insl
xor
test
sbb
mov
xchg
ret
out
insl
add
add
pop
push
call
push
mov
xchg
ret
fsub
add
add
add
mov
clc
repnz
jae
incl
cmp
incl
fmull
cld
nop
jmp
insl
xchg
testb
pusha
add
nop
jae
or
add
mov
addb
add
jne
fwait
cld
nop
jmp
dec
add
add
inc
and
cld
nop
jmp
insl
or
lret
jmp
adc
dec
rep
clc
repnz
jae
jb
add
add
fdivl
add
clc
repnz
jae
loop
lds
sub
aas
rol
clc
repnz
jae
add
jb
add
add
add
add
faddl
flds
push
setle
add
mov
clc
repnz
jae
add
mov
or
add
add
clc
repnz
jae
xchg
add
push
clc
repnz
jae
out
imul
clc
repnz
jae
add
in
div
clc
repnz
jae
data16
add
add
add
fwait
cld
nop
jmp
lahf
faddl
add
testb
push
mov
xchg
ret
add
add
arpl
aad
mov
fwait
cld
nop
jmp
imul
add
add
mov
add
rolb
xchg
ret
add
clc
das
aad
add
add
fwait
cld
nop
jmp
testl
xor
dec
push
clc
repnz
jae
inc
add
jne
push
mov
xchg
ret
add
je
clc
repnz
jae
add
xor
sub
in
inc
add
sbb
add
lea
rcrb
call
add
add
dec
fmull
clc
repnz
jae
dec
mov
add
outsl
mov
push
mov
xchg
ret
out
dec
add
jmp
sub
incl
movl
pop
lods
clc
repnz
jae
test
sub
jb
stos
insl
mov
clc
repnz
jae
xchg
add
xor
push
add
add
clc
repnz
jae
add
out
data16
push
mov
xchg
ret
add
jg
ret
mov
xchg
ret
je
lret
add
inc
add
add
sub
scas
enter
jmp
je
add
sbb
or
push
mov
xchg
ret
insl
add
dec
mov
push
mov
xchg
ret
add
arpl
add
mov
dec
into
inc
add
dec
mov
add
into
mov
jae
adc
mull
imul
hlt
clc
repnz
jae
add
sub
jmp
jb
add
decl
lods
scas
jae
adc
jl
sbb
add
clc
repnz
jae
lds
andl
mov
push
mov
xchg
ret
mov
add
xchg
inc
add
add
out
inc
add
add
add
add
das
add
clc
repnz
jae
xor
movsb
add
xchg
add
mov
xchg
ret
inc
add
add
push
fwait
cld
nop
jmp
data16
add
add
mov
clc
repnz
jae
add
fmull
arpl
add
and
mov
mov
push
add
push
mov
xchg
ret
add
incl
sub
jb
repnz
jae
lahf
dec
add
je
fwait
cld
nop
jmp
add
mov
clc
repnz
jae
das
add
repz
repnz
jae
sbb
add
dec
add
pop
lea
fwait
cld
nop
jmp
testl
pushf
push
push
mov
xchg
ret
dec
push
add
add
and
or
add
add
repnz
jae
add
test
push
mov
xchg
ret
add
add
adc
jb
nop
add
push
clc
repnz
jae
je
stc
add
mov
in
mov
nop
jae
add
add
lds
add
repnz
jae
or
cmp
insl
add
jg
clc
repnz
jae
inc
or
pop
add
clc
repnz
jae
js
or
leave
mov
clc
repnz
jae
lret
add
jns
inc
push
adc
fwait
cld
nop
jmp
dec
add
add
pop
add
clc
repnz
jae
pop
lea
dec
xor
out
push
mov
sub
cltd
popf
add
push
add
lock
mov
push
or
repnz
jae
add
add
add
add
ret
add
gs
add
xchg
mov
xchg
ret
add
add
mov
clc
repnz
jae
adc
jl
sbb
adc
je
clc
repnz
jae
add
add
les
clc
repnz
jae
add
add
les
mov
xchg
ret
xor
loop
test
jmp
incl
imul
add
adc
mov
mov
nop
jae
scas
fmull
pop
pop
clc
repnz
jae
lahf
push
add
xor
js
and
add
add
loope
clc
repnz
jae
inc
mov
lahf
pop
push
clc
repnz
jae
dec
add
stos
add
stc
stos
mov
fwait
cld
nop
jmp
into
dec
dec
js
imul
push
mov
xchg
ret
add
add
lea
clc
repnz
jae
push
add
pop
add
clc
repnz
jae
aaa
add
insl
clc
rolb
sahf
push
push
mov
xchg
ret
xor
stc
jl
add
std
mov
clc
repnz
jae
lods
pop
mov
pop
add
add
add
or
add
mov
int
add
add
add
cmp
pop
or
add
sub
add
cmp
imul
je
dec
mov
clc
repnz
jae
add
mov
add
nop
jae
testl
dec
mov
or
repnz
jae
lods
dec
add
popa
add
mov
xchg
ret
add
add
mov
movb
cmp
ret
add
mov
and
aaa
call
add
add
inc
ds
rorl
jmp
repnz
jae
mov
testb
or
jae
aaa
das
and
add
test
fwait
cld
nop
jmp
je
add
dec
call
roll
xchg
ret
lahf
add
loop
add
idivl
add
add
adcl
scas
insl
cwtl
mov
clc
repnz
jae
add
mov
je
add
inc
clc
repnz
jae
add
or
imul
jmp
mov
das
add
into
add
mov
add
repnz
jae
add
jl
dec
lahf
lea
push
mov
xchg
ret
arpl
add
aas
sub
repnz
jae
dec
into
aad
add
test
add
push
jae
repnz
jae
add
and
mov
xchg
ret
jl
add
movsb
pop
scas
mov
fwait
cld
nop
jmp
inc
je
xor
sti
mov
push
mov
xchg
ret
stc
add
insb
push
clc
repnz
jae
add
add
add
add
in
stos
clc
repnz
jae
stc
add
movsb
mov
into
aad
add
in
add
add
add
add
lds
add
adc
repnz
jae
add
dec
imul
imul
sbbl
js
sbb
cld
nop
jmp
mov
add
add
jl
sbb
repnz
jae
dec
clc
sbb
clc
repnz
jae
add
mov
cli
pop
push
mov
xchg
ret
arpl
dec
dec
sbb
dec
push
fwait
cld
nop
jmp
mov
add
clc
jmp
push
clc
repnz
jae
dec
test
cmp
cld
nop
jmp
aaa
add
lahf
sti
add
clc
repnz
jae
lret
add
dec
test
push
mov
add
mov
sbb
fiaddl
rol
push
stos
push
fwait
cld
nop
jmp
mov
dec
mov
repnz
jae
mov
add
movsb
add
push
mov
xchg
ret
jb
lds
add
lahf
test
push
mov
xchg
ret
out
xor
mov
xchg
pop
ret
clc
repnz
jae
into
push
add
add
into
mov
clc
repnz
jae
add
add
sub
pop
stos
clc
repnz
jae
mov
xchg
xchg
loop
aas
in
hlt
add
rcll
in
inc
add
je
test
or
clc
repnz
jae
dec
lahf
add
xor
add
repnz
jae
add
pop
clc
repnz
jae
aad
imul
movsb
add
nop
jmp
add
add
loop
lret
das
imul
nop
jae
dec
lea
add
je
pop
xchg
add
mov
stos
fwait
cld
nop
jmp
add
aaa
add
out
add
mov
add
mov
push
push
mov
xchg
ret
inc
add
inc
add
fwait
push
clc
repnz
jae
adc
xor
add
das
negl
repnz
jae
testb
add
add
repnz
jae
add
cmp
add
nop
jmp
push
add
loop
sbb
add
pusha
fwait
cld
nop
jmp
sbb
add
add
movsb
aaa
dec
sub
clc
repnz
jae
add
lea
or
movb
repnz
jae
add
or
xor
add
clc
repnz
jae
lret
fdivl
mov
nop
jae
aad
add
inc
add
lea
clc
repnz
jae
inc
add
inc
cld
add
push
mov
xchg
ret
and
lahf
mov
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
add
xchg
rep
clc
repnz
jae
add
add
clc
out
and
mov
add
add
fwait
cld
nop
jmp
sub
aaa
movl
pop
jne
clc
repnz
jae
mov
out
dec
push
mov
add
sub
and
insb
xor
jmp
mov
fcos
clc
repnz
jae
add
rorb
clc
repnz
jae
add
fwait
cld
nop
jmp
add
mov
and
add
repnz
jae
add
loopne
or
test
clc
repnz
jae
lods
js
addb
add
clc
repnz
jae
cmp
imul
nop
jmp
dec
add
xchg
add
add
add
dec
sub
shlb
jle
add
rol
ret
add
clc
repnz
jae
add
adc
add
mov
push
mov
xchg
ret
add
add
add
adc
lcall
xlat
inc
add
add
add
stos
dec
clc
repnz
jae
dec
jb
add
add
popf
mov
clc
repnz
jae
lret
add
lahf
stc
xchg
add
leave
sub
repnz
jae
aaa
clc
jl
pop
add
mov
xchg
ret
jl
add
movsb
add
clc
repnz
jae
aas
add
sbb
add
cmpw
fwait
cld
nop
jmp
xor
add
jo
sbb
test
cli
clc
repnz
jae
add
add
mov
clc
repnz
jae
mov
jne
add
adc
repnz
jae
add
das
add
or
clc
repnz
jae
clc
mov
add
ret
clc
repnz
jae
add
xor
add
aad
test
fldl
xchg
ret
xchg
add
clc
push
mov
xchg
ret
je
jl
add
icebp
popa
pusha
add
nop
jmp
stos
dec
dec
adc
mov
add
ljmp
add
add
xor
add
add
cmp
fwait
cld
nop
jmp
adc
adc
rolb
in
mov
push
mov
xchg
ret
cmp
incl
add
jb
jae
clc
repnz
jae
xor
mov
or
repnz
jae
into
push
scas
add
add
cmp
push
mov
xchg
ret
lret
out
js
addb
push
clc
repnz
jae
mov
add
add
call
clc
repnz
jae
lea
add
jmp
cmp
dec
incl
sub
icebp
sbb
jnp
inc
add
lahf
dec
add
stos
push
push
mov
xchg
ret
das
add
bound
mov
movl
lock
incl
add
xor
sbb
enter
jae
clc
lods
mov
inc
loopne
mov
xchg
ret
sbb
aas
add
or
jae
add
lds
dec
and
add
clc
repnz
jae
clc
call
out
add
rcr
add
clc
repnz
jae
faddl
add
fs
insb
clc
repnz
jae
or
add
jbe
clc
repnz
jae
sub
adc
add
push
mov
add
add
inc
lods
add
cmp
or
jmp
add
add
or
dec
add
xor
pop
add
clc
repnz
jae
sub
dec
imull
movsl
fincstp
sar
repnz
jae
add
dec
mov
add
repnz
jae
add
or
and
ss
fwait
cld
nop
jmp
adc
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
lea
xchg
add
nop
jae
adc
xchg
push
add
lret
add
add
stos
add
aaa
in
jne
fwait
cld
nop
jmp
mov
add
enter
aam
lcall
cli
incl
mov
add
loop
mov
xchg
ret
add
add
add
add
lds
inc
add
xor
clc
repnz
jae
add
rolb
lcall
mov
xchg
ret
aad
xchg
inc
aaa
mov
inc
clc
repnz
jae
add
inc
add
add
add
rep
clc
repnz
jae
add
adc
add
dec
in
popl
clc
repnz
jae
cmp
add
clc
repnz
jae
add
stc
add
aaa
je
cmpl
fwait
cld
nop
jmp
add
add
fwait
cld
nop
jmp
add
fcoml
pop
je
fwait
cld
nop
jmp
lret
stos
pop
loop
inc
add
mov
clc
repnz
jae
add
test
push
add
test
clc
repnz
jae
add
add
fwait
cld
nop
jmp
testl
lds
add
jmp
add
add
dec
add
add
jl
add
shl
inc
ljmp
add
jl
jecxz
xlat
mov
sbb
add
mov
das
std
scas
decb
jae
mov
imul
add
int3
push
add
fst
add
add
and
push
cli
in
push
add
add
pop
add
add
int3
sub
and
insb
bound
mov
fimuls
add
mov
stos
lahf
addb
dec
inc
add
add
cs
mov
adc
mov
and
mov
ror
xchg
add
ret
add
add
popf
dec
bound
mov
and
add
add
rolb
mov
dec
push
add
inc
or
pusha
add
ret
jp
add
adc
cmp
add
mov
popf
push
xchg
mov
or
mov
leave
or
scas
add
mov
sbb
leave
bound
mov
add
addb
xchg
add
lods
movsb
add
outsb
cmp
xor
sub
push
add
movsb
add
xchg
jmp
add
fsub
jl
shl
stos
sub
add
add
movb
jb
vshufps
sub
out
mov
rcrl
test
mov
xchg
test
cwtl
ja
add
add
push
jbe
adc
dec
inc
add
inc
add
movsl
push
scas
test
jbe
push
and
mov
out
mov
mov
sub
cltd
jge
repz
add
test
bound
mov
mov
in
jae
add
gs
daa
mov
add
ret
clc
pop
rolb
int
add
sbb
add
add
fidivl
dec
arpl
bound
mov
and
add
add
addr16
add
lcall
xor
mov
add
pop
jg
movsl
xor
adc
add
ret
arpl
lods
inc
push
add
cmp
cmp
add
mov
mov
dec
in
dec
jecxz
add
jns
cmpsb
add
xor
jne
add
rcrl
sbb
add
mov
into
push
add
fwait
push
add
add
add
cs
jae
inc
add
add
jnp
fnsave
sub
add
nop
add
jl
test
add
cli
cs
mov
jg
adc
movsb
add
cmp
nop
add
call
gs
ja
xor
cmpsb
add
add
xchg
and
add
cmpsb
add
fadd
nop
add
addb
or
mov
add
gs
add
inc
add
jbe
xor
int3
adc
xchg
push
add
add
add
sbb
mov
sub
xchg
add
add
and
mov
leave
movb
lds
add
pop
xor
sbb
mov
add
add
jmp
inc
add
cmp
push
xchg
jle
add
xchg
add
pop
stc
pushf
adc
sbb
pop
hlt
add
and
lahf
push
test
rolb
pop
and
mov
pop
inc
jb
cmc
ret
orl
add
mov
and
pop
jl
inc
add
fwait
lods
sbb
sub
xchg
add
sti
mov
add
mov
jge
daa
xchg
cmpsb
add
ljmp
add
mov
and
pop
pop
arpl
jecxz
sahf
sbb
mov
hlt
add
jns
jmp
aad
inc
pusha
add
cmc
xchg
ds
jg
add
add
mov
mov
add
ret
add
in
insb
mov
add
lret
add
mov
adc
imul
xchg
add
push
scas
movb
mov
add
add
inc
add
stos
push
push
add
add
out
mov
or
pop
or
mov
sahf
std
popl
mov
js
add
add
je
pop
sbb
test
les
mov
mov
or
jmp
stos
data16
mov
mov
jle
add
in
jo
daa
hlt
add
push
add
add
fidivrs
pop
outsb
xchg
fidivs
sbbl
jo
pop
push
inc
add
mov
add
cmc
pop
out
or
add
adc
push
add
add
add
out
in
inc
rolb
addr16
jp
add
mov
mov
add
mov
dec
dec
sub
add
add
cmpsb
add
jno
add
and
mov
in
add
add
testb
inc
add
xchg
add
ja
xor
mov
add
xchg
add
imul
sub
add
addb
loop
xchg
add
jg
fidivrl
add
inc
add
pop
into
mov
add
mov
add
xchg
push
add
leave
jmp
sub
add
add
cmp
or
add
mov
add
inc
cmp
stos
mov
dec
shll
mov
add
inc
pop
cmp
add
out
add
xor
add
add
mov
movsl
ret
add
testb
aad
add
add
add
add
ljmp
lcall
push
xor
loop
outsb
aad
add
add
pop
sbb
and
mov
add
push
inc
addb
daa
push
sahf
add
add
shr
pop
iret
or
mov
add
jge
inc
adc
pop
cltd
popa
sbb
mov
xchg
lock
mov
xor
add
js
mov
add
aad
das
testb
add
add
adc
aam
adc
fbstp
ja
cmp
fcmovnu
data16
mov
adc
sub
add
mov
sti
inc
jge
add
sbb
lods
pop
add
mov
add
add
dec
mov
add
testl
cmpsl
inc
add
mov
add
jno
ficoml
imul
jle
fisttpll
and
mov
mov
add
insl
or
enter
inc
test
xchg
add
loop
sub
jo
fsubl
aam
test
add
add
xchg
ret
clc
pop
js
jecxz
call
mov
push
cmc
pop
insb
ljmp
inc
push
add
add
add
popa
push
add
sub
sti
je
ljmp
sub
jl
repnz
push
add
or
push
push
ja
add
std
cmp
add
in
xor
xchg
add
add
add
add
mov
stc
mov
sub
add
add
xchg
mov
je
pop
xor
dec
or
mov
add
sub
add
inc
add
add
jnp
add
sbb
xchg
mov
cmp
out
add
lahf
jmp
mov
popl
add
movb
add
jp
in
fistl
add
pop
dec
push
popa
inc
sub
sbb
add
sub
pusha
add
xchg
add
fisttpl
into
aam
sub
add
sub
xor
add
dec
xchg
add
stos
jp
cld
in
addr16
add
adc
icebp
sub
dec
dec
xor
add
dec
xchg
add
arpl
pop
adc
subl
pavgb
jb
cltd
lret
out
daa
in
adc
add
mov
add
add
testb
pop
xchg
push
icebp
adc
cmp
scas
stos
or
add
mov
psadbw
sbb
add
pop
in
add
sbb
lock
std
push
popl
sarl
lds
addb
add
movb
stos
push
insb
cmp
add
mov
imull
rolb
ret
inc
jnp
add
add
jp
or
push
add
andl
les
sbb
or
mov
insl
scas
adc
or
add
add
add
push
add
imul
lods
test
mov
and
mov
fsubr
xor
mov
out
cmpsb
add
leave
pop
xor
dec
xchg
add
add
add
mov
repz
dec
fidivrs
sub
ds
xlat
cmpl
mov
add
mov
pop
push
add
imul
std
mov
add
add
fcmove
dec
cmp
lods
adc
fiadds
ja
sub
push
add
add
and
add
in
push
out
aaa
cmpl
icebp
inc
add
addb
add
push
mov
add
inc
add
add
lds
add
xlat
push
add
xor
jo
lahf
insl
in
xchg
in
test
into
xor
stos
daa
out
pusha
add
add
add
repz
add
pop
rcll
push
xchg
out
cmp
mov
push
add
ret
push
mov
add
shrl
loop
sbb
xchg
sub
cld
push
add
pusha
add
cmp
cwtl
shll
mov
and
mov
jg
fld
add
mov
add
add
add
mov
insl
cltd
jns
popf
mov
add
mov
in
or
mov
out
arpl
mull
push
add
pop
das
xor
pop
or
sti
xor
add
mov
aam
mov
inc
mov
add
flds
jecxz
add
add
add
hlt
add
inc
dec
jne
sub
addl
aaa
cwtl
jge
push
addl
add
mov
int
insb
in
cmc
les
outsb
pop
push
add
and
mov
add
add
add
add
add
pusha
add
or
add
rolb
cmp
mov
add
and
mov
mov
movb
jge
add
add
sbb
add
fiaddl
dec
inc
add
aas
jbe
rolb
dec
cs
adc
inc
jge
int3
xchg
daa
test
fsubrl
sbb
and
imul
and
mov
add
movsl
xor
add
leave
mov
dec
pushf
je
test
out
and
xor
mov
add
add
lea
std
xor
insb
outsl
decb
jl
add
push
sbb
push
add
adc
mov
add
add
pop
add
mov
mov
lds
adc
mov
mov
mov
ret
add
mov
lret
stos
push
add
imul
add
mov
ja
stc
jl
xor
loop
pushf
stos
movsb
add
sbb
mov
add
add
aad
pushf
rorl
add
or
push
add
add
enter
pop
orl
in
les
jae
add
jg
movsb
add
adc
add
mov
mov
cmpsl
sub
jge
add
lahf
push
cwtl
cmp
add
add
data16
add
lods
arpl
add
pop
pop
mov
loop
ds
jmp
in
pusha
add
hlt
add
mov
adc
xchg
subl
or
cmp
mov
insb
xor
int3
outsl
jecxz
mov
jae
gs
sub
dec
add
mov
xchg
cltd
jb
sarl
ficoms
lods
jmp
cli
mov
les
mov
add
pop
pop
maskmovq
add
add
rcr
xor
or
pop
test
mov
rol
repz
testb
or
cmpsb
add
add
and
add
scas
insl
add
xchg
imul
repnz
mov
add
leave
data16
test
dec
popf
lahf
testb
xor
push
add
in
out
add
sub
mov
in
icebp
int
add
add
xchg
pop
and
add
add
push
jp
add
test
xchg
add
adc
push
add
rorl
add
jbe
sbb
push
add
mov
add
ret
sbb
test
add
inc
add
ljmp
inc
add
add
mov
inc
add
mov
add
mov
mov
mov
push
xchg
add
or
lahf
mov
mov
inc
stc
and
mov
inc
add
lds
mov
les
and
mov
xchg
add
inc
add
sbb
cli
mov
add
add
ja
mov
add
jne
mov
mov
add
ret
mov
sub
stos
or
mov
xchg
lret
add
mov
adc
push
or
push
add
inc
xchg
dec
jp
and
add
fs
or
sahf
xchg
sbb
cmpsb
add
add
add
push
add
add
push
insb
xor
ja
movsl
add
mov
nop
add
jo
cmp
imul
xchg
testb
add
pop
dec
mov
mov
push
cmp
mov
dec
mov
add
add
fsubrl
stc
movb
add
iret
inc
add
add
cmp
adc
insb
sbb
mov
pop
movsl
inc
fidivrs
add
add
xchg
add
add
add
int3
mov
xchg
adc
dec
addb
jge
add
push
add
add
pushf
les
add
add
jmp
and
mov
add
add
les
sbb
add
mov
inc
add
xor
lds
mov
add
or
sub
add
add
ss
push
add
or
ja
add
aam
mov
pop
incb
add
into
sbb
scas
jns
mov
inc
xchg
add
cmp
and
add
push
cld
aaa
fdivrs
cmpsb
add
fnstenv
jp
fnstcw
lret
xchg
add
adcl
inc
add
push
add
jmp
mov
gs
movsl
and
mov
cwtl
sbb
add
inc
add
dec
addb
add
add
add
mov
add
imul
push
add
addb
sub
inc
add
add
add
dec
lods
clc
mov
aad
pcmpeqd
xor
pop
pushl
hlt
add
out
icebp
into
popl
add
insl
adc
or
ljmp
mov
insl
cltd
mov
test
dec
dec
jmp
pop
dec
hlt
add
push
add
add
clc
or
xor
sub
rolb
popf
mov
add
add
sbb
cmp
inc
add
ja
add
mov
mov
lret
jae
xor
sub
imul
int3
dec
add
test
xchg
or
add
lcall
mov
outsb
ljmp
shll
rolb
jb
mov
bound
mov
dec
mov
add
ret
cltd
pop
xchg
aad
sbb
add
mov
mov
mov
sti
and
xchg
pop
std
pop
mov
test
dec
jge
sub
jle
ljmp
xor
jae
add
mov
push
icebp
pop
out
ja
add
mov
mov
push
add
mov
insl
test
adc
fldenv
mov
add
sbb
add
rcl
add
push
mov
bound
mov
pop
in
rolb
dec
test
sub
add
add
repz
add
fstl
add
xor
jne
ja
fisubl
mov
jg
popf
inc
add
lea
add
jmp
add
add
pop
int3
add
mov
add
ss
add
inc
cmpsl
xor
ret
loope
lahf
add
add
movsl
mov
jno
push
add
add
dec
push
add
ja
xor
mov
mov
mov
sub
adc
add
lds
add
or
mov
add
pop
cmp
add
and
adc
call
inc
add
ret
and
mov
add
dec
push
add
add
ja
pop
push
fwait
ja
movsl
mov
ficompl
mov
repz
insl
jae
popf
daa
fnstsw
add
add
add
add
add
out
out
fldcw
ds
inc
add
dec
iret
jecxz
add
movsl
mov
add
pop
repnz
aad
add
mov
bound
mov
add
jge
sub
les
sub
shl
add
fbld
testb
add
mov
aas
out
push
add
add
add
hlt
add
xchg
add
leave
rolb
add
dec
push
add
or
hlt
add
lcall
add
add
add
xlat
fnstenv
les
cmp
add
add
add
testb
or
mov
jecxz
lock
add
add
add
mov
pusha
add
mov
outsl
xchg
les
adc
mov
out
jle
and
xchg
xchg
add
movb
add
pushf
in
add
sar
cmp
pop
xor
pop
in
push
jle
and
call
push
sbb
daa
mov
leave
testl
push
add
adc
pop
out
js
xor
add
jge
xor
fwait
movl
out
cmp
add
cmp
add
inc
adc
add
add
fldcw
add
mov
mov
insl
pusha
add
rolb
out
pop
pop
dec
stc
cwtl
repz
cmp
add
aaa
jo
jle
add
das
arpl
je
in
mov
js
push
sbb
fcompl
pop
data16
sbb
or
icebp
cmp
add
cltd
mov
add
mov
add
xchg
add
scas
sub
pop
aad
ret
push
mov
out
out
xlat
dec
adc
ljmp
xchg
add
pop
sbb
jo
out
dec
dec
xchg
add
addb
add
add
cmpsl
mov
add
cmp
push
ret
xchg
add
rolb
out
inc
rolb
movsl
mov
cltd
sbb
pusha
add
add
xchg
imul
sub
add
add
or
add
outsb
mov
and
mov
scas
in
mov
adc
add
add
addl
sub
outsb
jl
cmpl
stc
and
xor
jp
add
stos
add
sbb
dec
cmp
jmp
add
fbld
cmp
repz
shll
xchg
jns
rolb
jle
add
cmp
call
add
mov
add
data16
lcall
pop
insl
fidivs
jp
add
xor
stos
stos
movb
enter
addb
add
add
add
add
outsb
mov
inc
add
movsb
add
popa
push
por
add
add
mov
mov
pop
sub
clc
adc
shll
add
cs
add
mov
rcrl
cmp
add
xchg
add
mov
add
roll
in
mov
mov
stos
int
add
fstl
jne
add
cwtl
xor
aaa
in
xchg
pushf
mov
add
dec
xchg
mov
scas
je
or
inc
test
lock
push
add
add
add
add
movsb
add
add
test
leave
cmp
or
rolb
or
mov
out
sub
add
and
mov
add
inc
add
mov
push
scas
mov
xor
jbe
xchg
cmpsb
add
add
fnstcw
add
bound
mov
mov
lods
rolb
movb
hlt
add
mov
cmpl
pop
sub
adc
add
add
insl
outsb
test
mov
cmp
out
mov
out
lock
popl
and
mov
in
loopne
rolb
inc
add
push
add
inc
pop
cltd
fnsave
pop
jno
mov
arpl
jge
xor
gs
add
stos
sti
push
add
rolb
add
shll
mov
add
sbb
mov
rolb
dec
push
cmp
nop
add
add
sarl
xchg
out
jle
add
add
outsb
mov
add
loopne
addr16
mov
les
fimuls
movl
add
adc
stos
xor
mov
add
pop
lahf
cmc
mov
cltd
xchg
add
cltd
pop
pop
cmp
jo
addb
mov
sub
add
add
add
or
cmp
add
mov
adc
aaa
inc
add
lea
outsl
repz
xor
iret
jb
imul
cmp
getsec
mov
dec
cmp
add
and
mov
shll
xchg
mov
sahf
loopne
inc
add
push
call
imul
aad
pop
mov
scas
aam
and
or
xor
test
std
xchg
add
add
lods
andnps
add
ss
adc
push
rol
xchg
add
add
sbb
out
pop
push
sub
mov
mov
add
je
xchg
add
add
mov
add
add
sub
ret
mov
fiaddl
popf
nop
add
adc
arpl
add
push
pop
jne
fcom
fsubl
aad
add
add
mov
jae
pop
push
fimuls
or
jb
sub
sub
popf
lds
mov
sub
or
aas
push
outsb
adc
cwtl
sbb
add
add
mov
add
sub
mov
add
push
add
adc
and
sub
inc
and
inc
ds
add
dec
lds
add
add
or
add
add
lcall
push
pop
push
add
add
add
in
lret
cli
and
arpl
add
and
mov
push
add
cmpsl
addb
add
dec
subl
lret
xchg
je
int
mov
test
and
mov
jecxz
add
mov
lds
icebp
int
pop
cwtl
sbb
add
sahf
push
add
add
inc
add
add
add
jo
xor
jbe
add
fnstenv
out
xor
cmp
inc
lret
mov
cs
mov
test
adc
sbb
rolb
or
mov
aas
add
mov
xor
fistl
insl
mov
add
add
dec
ds
imul
push
jae
add
pop
pushf
popf
mov
sub
add
scas
in
jl
jnp
add
jb
lahf
sbb
add
mov
dec
xor
rcrl
pop
jge
pop
fstp
std
pushf
lea
pop
and
outsl
lds
cltd
ljmp
add
add
scas
mov
cmp
add
add
xchg
mov
dec
addb
int
inc
mov
or
mov
scas
inc
out
jle
into
sub
ret
int3
add
gs
add
mov
enter
int
add
and
mov
sbb
movsb
add
ret
add
into
add
mov
test
add
push
add
inc
addb
sub
inc
add
add
rolb
adc
aas
sub
add
add
daa
mov
add
or
add
cmp
adc
pop
and
push
push
lods
call
fisttps
les
and
mov
lret
xchg
add
mov
add
mov
add
jne
hlt
add
test
fcmovnu
pop
mov
and
mov
adc
jns
xor
out
addr16
add
je
outsb
dec
mov
mov
in
loope
cmpsl
mov
add
push
add
add
xchg
add
adc
xor
loope
add
ficoml
bound
mov
cmp
push
add
inc
add
add
stos
sub
jmp
scas
mov
and
jne
std
loopne
pusha
add
add
add
rcrl
add
jb
inc
inc
add
repz
imul
pop
scas
mov
xor
mov
pushf
fwait
pop
mov
bound
mov
mov
fisubrl
push
ljmp
ljmp
hlt
add
sbb
add
arpl
add
mov
out
mov
inc
add
popa
insb
add
clc
in
or
repnz
push
xchg
clc
out
add
mov
pavgw
add
mov
and
jbe
add
add
mov
hlt
add
add
add
cs
pop
jne
add
and
mov
lahf
fucomi
mov
add
inc
jecxz
testb
sbb
add
int3
sar
add
lods
fsubl
pop
mov
pop
jp
xchg
add
add
insb
insl
sbb
rolb
movb
add
add
add
and
xor
add
add
add
mov
aad
add
sub
add
mov
clc
and
mov
inc
add
rcrl
inc
insl
xchg
aas
mov
lcall
add
and
mov
mov
and
add
or
in
cmp
das
cmpsl
fisttpl
xchg
add
jmp
out
jns
les
xchg
add
sub
add
out
jae
fnstsw
add
sbb
xchg
aas
mov
fstpt
daa
cmp
popa
adc
mov
out
inc
add
cmpsl
imul
mov
mov
add
mov
lcall
js
out
jge
add
cmpsl
das
hlt
add
mov
xchg
add
jge
mov
std
adc
sbb
add
mov
dec
shl
add
sbb
add
mov
xchg
add
jge
add
cli
mov
cmp
cltd
data16
xor
fsubrl
scas
add
lret
dec
cmp
push
lret
pop
dec
rcll
add
mov
mov
add
mov
test
mov
aad
test
push
movb
add
jp
add
sahf
jo
sbb
test
or
sahf
xor
add
movsb
add
push
inc
ja
xchg
add
add
pop
or
cmc
cmp
addb
adcl
add
push
add
xchg
add
push
add
add
mov
and
add
sbb
jg
aam
sbb
add
inc
or
add
addb
add
mov
ljmp
dec
xchg
add
add
add
mov
imul
mov
mov
xchg
add
add
in
movsl
jp
or
add
add
lea
add
popf
mov
sbbl
fiaddl
rcll
ja
add
dec
cmc
movsl
movb
add
fbld
cwtl
shr
xor
xchg
add
and
arpl
jg
dec
jb
in
sub
shll
add
cmc
shll
pop
xor
movb
add
add
add
xorl
clc
in
cmp
lret
add
add
ds
mov
iret
dec
adc
mov
movb
aaa
test
data16
add
inc
data16
add
mov
add
jp
insl
and
add
adc
test
add
cwtl
pop
inc
repz
cmp
inc
jno
inc
mov
add
pop
popf
cli
or
sahf
jp
ret
sbbl
mov
add
aad
shll
inc
add
and
mov
add
add
xchg
inc
add
add
push
xor
add
orl
out
xchg
lahf
fisttpl
add
fwait
dec
xchg
add
ljmp
lods
mov
add
mov
push
mov
repnz
add
inc
add
xchg
xchg
in
insb
in
test
add
lods
int3
pop
jae
add
fsubp
adc
loop
push
add
add
jl
js
insb
or
cld
jle
add
into
mov
call
mov
cmpsb
add
mov
scas
pop
lea
leave
mov
add
jno
mov
xchg
add
stc
outsb
fdivrs
add
lret
mov
das
cmpsl
xchg
add
pop
or
pop
scas
popf
dec
daa
test
jp
or
push
rolb
pushf
add
mov
pushf
leave
push
fnstsw
mov
pusha
add
sub
jl
add
fldt
add
add
mov
add
add
aam
dec
dec
mov
call
add
fwait
and
pop
outsb
inc
fldcw
pop
cmp
inc
push
add
mov
mov
jnp
nop
add
and
mov
lcall
dec
popa
aad
add
add
pusha
add
push
add
adc
or
cmp
add
mov
add
or
pop
sub
push
rolb
add
jne
stc
ret
jb
push
add
add
add
add
cmp
cwtl
dec
ljmp
push
add
cwtl
xor
dec
dec
mov
cmp
imul
mov
jg
jb
adc
cmc
cmp
loopne
mov
push
add
repnz
jmp
jnp
add
sbb
nop
add
add
mov
scas
pop
push
add
jns
add
stc
cs
xchg
add
add
cmp
or
xchg
add
lret
push
fstps
and
cmpsl
arpl
jmp
pop
xchg
loopne
xchg
dec
or
add
mov
test
jg
int3
cltd
xor
mov
rolb
je
int3
push
das
addb
std
cmpsl
mov
mov
bound
mov
pop
lret
mov
shll
or
dec
filds
in
and
mov
inc
add
mov
ret
xor
add
aas
pop
xchg
xlat
xchg
inc
add
jg
mov
mov
movsb
add
pop
or
xor
add
lock
add
add
add
sub
fcoms
sbb
mov
add
pop
cli
iret
fucomi
push
mov
aaa
mov
mov
hlt
add
and
mov
add
add
adc
sub
xor
jne
rolb
gs
and
add
or
add
add
and
jl
add
sub
add
mov
add
pushf
imul
mov
dec
xchg
cmp
add
mov
add
pop
fdiv
ret
jl
add
rorl
pop
push
add
rcr
iret
inc
ds
cmp
in
loop
ja
xchg
adc
arpl
jecxz
mov
add
sub
push
daa
xor
add
in
scas
inc
pop
hlt
add
add
movl
call
jge
push
add
push
fsubr
les
testb
das
sbb
mov
add
cs
and
xchg
mov
in
push
lock
xchg
add
out
loopne
mov
lcall
add
add
add
mov
mov
bound
mov
mov
add
sti
cmpsl
mov
add
daa
jb
movb
or
int3
sub
mov
jg
inc
add
mov
test
in
adc
push
mov
ljmp
add
jnp
jb
mov
mov
mov
cs
into
mov
pop
scas
insb
movb
cwtl
loop
inc
add
add
add
add
mov
pop
bound
mov
in
add
add
add
cltd
mov
outsl
lea
aam
mov
dec
sub
dec
mov
push
xchg
add
mov
repnz
jnp,pn
push
lds
pop
pop
mov
std
xchg
add
ret
push
scas
mov
gs
adc
xor
out
mov
lods
add
add
dec
pop
out
sbb
adc
js
add
dec
adc
add
add
shll
stc
pop
adc
data16
fiadds
les
inc
ret
dec
inc
clc
addb
sub
mov
push
mov
pop
jle
popf
in
lods
dec
cmpsb
add
rolb
and
stos
pop
stc
xor
enter
pop
or
mov
and
out
pushf
in
cmp
aad
pop
sub
fcomp
jae
xlat
jmp
or
cwtl
lods
add
enter
inc
test
js
pushf
dec
stos
lret
mov
pop
inc
add
add
add
jnp
fwait
add
mov
mov
add
cmp
into
inc
add
xchg
add
outsb
dec
push
add
add
add
pop
mov
add
in
dec
xchg
fstl
add
add
xchg
arpl
add
fisubrl
add
inc
add
add
inc
pop
xor
add
mov
pop
adcl
arpl
lahf
fwait
mov
xchg
add
cld
outsl
jg
add
das
arpl
and
mov
pop
jp
mov
mov
jmp
push
add
add
jg,pn
aas
into
insl
sub
push
add
gs
add
add
add
push
sub
and
mov
aad
addr16
add
cmp
mov
ficompl
ja
add
mov
xchg
outsl
dec
cli
addb
rolb
cmpsb
add
or
add
xchg
add
iret
iret
push
xor
testb
push
sub
add
addb
add
cld
mov
js
lret
pop
xchg
ja
test
push
add
mov
mov
cmp
add
adc
aam
jns
pop
pop
test
imull
push
aaa
test
xchg
add
add
frstor
jbe
mov
aam
bound
mov
cmp
mov
mov
sbb
add
push
add
add
push
mov
pop
std
nop
add
cmc
or
and
mov
mov
inc
add
push
jp
dec
les
sbb
add
add
add
cli
dec
mov
or
dec
ret
aad
xor
movb
pop
cmp
cmp
push
dec
cs
sahf
popa
pop
pop
aaa
inc
fiadds
add
or
ret
pushf
jo
push
xchg
cmp
jmp
sti
arpl
add
add
push
add
add
mov
push
dec
push
add
pop
mov
add
xor
jge
add
push
add
add
add
movsb
add
mov
ret
add
xchg
fwait
cmp
jae,pt
jno
add
add
ret
sub
mov
add
add
add
mov
add
mov
jl
adc
test
add
add
mov
testl
mov
mov
movsl
ljmp
rolb
mov
add
pop
mov
fstpt
mov
mov
add
add
cli
int3
stc
pushf
loopne
dec
dec
cmp
or
loopne
std
dec
aam
fcomi
fidivl
int
insl
pop
lret
sahf
icebp
je
loope
fsubrs
sbb
mov
call
daa
or
das
xchg
add
mov
add
jo,pn
mov
rcrl
rolb
mov
dec
mov
add
mov
add
add
add
adc
push
add
int3
add
insl
pushl
es
add
mov
sub
cmp
add
insb
jae
call
adc
push
add
mov
pop
adc
add
add
inc
aad
das
mov
push
add
or
add
push
or
pop
daa
rolb
mov
scas
jb
mov
in
hlt
add
rcll
xchg
test
jne
inc
add
les
xor
out
inc
add
add
pop
imul
in
jae
sub
sbb
xlat
js
add
inc
add
add
lods
dec
xchg
mov
xchg
sahf
test
mov
das
add
add
lahf
hlt
add
dec
sub
xlat
mov
mov
jecxz
sub
push
addb
add
pop
rolb
add
std
addb
sahf
mov
add
fld
add
cmp
out
fdivrs
xor
jmp
sub
push
add
or
lods
inc
cmp
push
scas
fucomi
mov
lods
jnp
sbb
add
fwait
ret
xchg
add
push
out
jmp
cmp
loope
xchg
add
insb
stos
xchg
mov
lret
mov
je
and
mov
push
lret
or
add
or
add
outsl
xchg
nop
add
add
repz
inc
inc
add
add
add
mov
pop
jle
add
add
mov
inc
add
ret
add
mov
mov
xchg
add
add
cmpsl
add
pop
test
popf
addr16
xor
add
jmp
aaa
push
sub
adc
add
add
xchg
jp
add
add
dec
mov
sub
add
xlat
add
arpl
add
cmc
sub
add
lret
xchg
xlat
dec
push
add
sub
add
pop
std
in
add
les
mov
xlat
mov
in
test
mov
mov
sbb
leave
imul
out
nop
add
jmp
sbb
sarl
dec
push
mov
cmpsl
cmc
movsl
mov
popf
add
stc
add
sub
add
std
es
lea
jg
add
adc
lret
adc
push
add
inc
add
loopne
pop
lret
add
add
mov
mov
inc
add
add
add
push
xchg
cmpsb
add
dec
aad
les
push
xor
iret
pop
mov
add
dec
dec
fsubrs
add
add
add
add
add
lcall
sub
dec
push
add
pop
push
sub
mov
ss
movsl
mov
push
add
cmp
add
or
int
addr16
fs
add
sbb
add
xor
bound
mov
mov
in
push
aas
addb
aaa
in
fst
inc
add
stos
lods
data16
ljmp
add
add
add
leave
dec
mov
add
addb
push
test
data16
stc
jecxz
add
decl
or
xchg
add
add
aas
jg
and
jp
pushf
cmc
popa
xchg
add
add
addr16
push
lea
mov
add
rolb
sbb
enter
push
add
jl
and
mov
mov
in
push
and
gs
in
addb
add
in
mov
lds
add
mov
mov
pop
push
add
fstps
lcall
xchg
add
rolb
out
stos
push
push
cmpsb
add
add
aaa
add
pop
data16
xchg
je
fsubl
xchg
add
add
dec
xor
cmpsb
add
arpl
mov
cmp
jne
cli
jb
jno
add
sahf
cmp
addb
int
add
push
adc
push
fprem1
xor
add
gs
pusha
add
imul
push
pushl
inc
daa
addb
add
mov
push
add
add
add
add
repnz
fwait
pop
mov
ja
shll
cli
inc
test
cli
inc
add
add
add
pop
mov
cmp
arpl
cli
inc
add
adc
cli
jbe
aas
fisubs
mov
das
adc
arpl
mov
std
call
ja
add
add
mov
add
mov
ror
add
mov
xchg
mov
outsb
mov
add
push
pop
mov
add
add
inc
add
pushf
movups
arpl
cmp
add
cwtl
push
mov
add
mov
insl
leave
addb
add
jb
inc
add
jl
inc
mov
or
adc
das
or
inc
jecxz
add
aam
fsubrs
ss
add
lods
push
sub
push
add
das
mov
loope
add
jno
aaa
in
mov
mov
dec
jae
inc
add
sub
xchg
add
lahf
xor
or
pop
test
or
xchg
add
jb
cmp
push
add
addb
add
mov
pop
pop
in
ja
rolb
mov
sub
sbb
clc
ja
cmp
mov
mov
xor
push
add
and
add
mov
mov
inc
add
repz
add
add
pop
ja
add
ret
pop
in
add
mov
add
mov
rcrl
cmpl
repz
mov
sbb
mov
add
dec
push
add
jmp
adc
imul
test
mov
mov
adc
xchg
inc
clc
jns
and
mov
add
movsl
inc
add
add
pop
adc
add
movsl
data16
xchg
add
fwait
cmp
add
pusha
add
add
mov
and
leave
dec
adc
mov
dec
mov
add
and
mov
mov
mov
mov
add
push
lea
pop
nop
add
adc
push
add
cwtl
addb
xchg
add
fwait
sbb
iret
popf
jae
aas
test
inc
add
mov
cmpsb
add
rolb
test
xchg
fsubrs
outsl
mov
pop
cmp
pop
insl
xor
pop
sbb
mov
add
add
add
in
inc
add
push
aaa
dec
fwait
shr
mov
call
pop
xor
ret
mov
mov
adc
iret
add
mov
mov
add
mov
add
mov
add
dec
pop
push
jns
adc
add
clc
lcall
nop
add
and
add
int3
jne
inc
fwait
jmp
adc
or
fldl
xor
push
add
cmpsb
add
add
lods
into
pop
adc
mov
push
add
mov
jae
cmp
add
sub
add
rcrl
cmp
jbe
int3
cmp
add
lods
dec
jns
or
add
test
lret
test
add
gs
add
arpl
or
push
add
repz
jns
in
sbb
mov
add
add
mov
add
and
mov
push
add
add
sbb
cwtl
xor
fsubrp
les
dec
jmp
fcmove
outsb
call
fisttpll
xchg
add
add
add
loop
and
add
add
mov
js
pop
xor
inc
inc
push
add
inc
add
xor
or
sti
imul
fsubl
xor
jnp
mov
rolb
mov
sbb
lds
faddl
clc
aaa
cmp
mov
and
jp
in
adc
mov
fdivrs
or
int
in
lods
hlt
add
add
aas
shr
push
xchg
add
jbe
dec
sub
add
add
mov
sub
inc
and
pop
jle
popa
clc
outsb
sub
add
add
mov
jno
add
xchg
mov
imul
into
add
rolb
xor
addb
add
mov
lods
xchg
ds
add
jnp
add
jmp
dec
in
xchg
add
add
add
rolb
add
lahf
pop
lods
movsl
popa
dec
in
cmpsl
sub
mov
dec
jnp
sub
loopne
inc
add
push
inc
pusha
add
adc
inc
add
test
add
ljmp
ret
add
mov
fwait
xor
fwait
sarl
dec
sub
stos
add
add
mov
mov
push
mov
xchg
add
mov
add
lcall
xchg
adc
mov
pop
xor
add
jge
mov
inc
add
add
or
ficoms
jne
add
or
add
mov
iret
add
mov
add
fistpl
mov
mov
mov
paddq
dec
sub
pop
or
in
or
mov
add
add
add
lahf
js
leave
add
add
jg
cmp
xchg
add
stos
int3
xor
dec
pop
pushf
add
bound
mov
add
pop
cld
jl
add
inc
add
loope
fisubrs
in
jae
gs
mov
or
add
push
hlt
add
cmpsl
cmc
addr16
test
add
mov
sti
scas
push
dec
sub
sub
and
mov
push
insb
mov
mov
je
fdivrs
pop
inc
pop
cmp
addb
mov
add
leave
aas
jg
add
dec
test
mov
sub
jbe
std
in
incb
add
shll
jg
lds
out
mov
loopne
rolb
fbld
dec
scas
jo,pt
jo
jecxz
xor
out
mov
out
pop
add
out
mov
das
mov
jge
add
add
lcall
test
fmuls
add
jle
addb
sbb
insl
testb
aas
movsl
xor
pop
fdivrs
mov
push
hlt
add
inc
add
add
cmp
pop
fiaddl
scas
sahf
subl
pop
pop
inc
add
mov
pop
dec
aam
in
pop
push
add
add
aas
iret
lock
movb
xchg
add
xor
add
add
adc
pushf
popf
and
movsb
add
add
add
mov
je
sbb
fdivl
add
add
add
cltd
mov
add
sub
pop
mov
add
lods
add
mov
add
cmp
xor
inc
dec
repnz
add
add
repnz
adc
mov
test
jg
sub
inc
jge
add
mov
push
inc
mov
xor
sub
push
mov
pop
into
loopne
cmpsl
mov
push
add
mov
add
pop
cmp
rolb
insb
xchg
nop
add
adc
adc
inc
imul
add
add
add
out
inc
add
out
or
add
push
in
or
add
cmpsb
add
repnz
inc
cmp
add
push
add
repnz
ljmp
sahf
jmp
jno
mov
add
pop
in
push
add
pop
int
add
movsb
add
xchg
add
jbe
call
cli
pop
aam
sbb
addb
movsb
add
pop
aam
out
imul
gs
add
add
sub
inc
add
mov
jge
add
add
xor
mov
cmp
stos
in
pop
add
mov
test
add
dec
call
insl
adc
jb
mov
add
loop
lock
imul
add
xchg
add
dec
aaa
inc
dec
in
xlat
mov
add
mov
jne
sub
repz
jle
je
cs
pop
cli
jp
adc
gs
add
call
cmp
cmp
cltd
in
sub
ret
mov
xchg
outsl
and
mov
into
out
mov
cmp
lds
pop
mov
cwtl
mov
add
fistpl
stos
or
imul
mov
jo
enter
les
mov
add
shll
add
add
bound
mov
mov
fisubl
add
fwait
pop
dec
dec
jo
js
out
lds
add
jecxz
mov
add
cs
scas
sbb
or
sbb
out
push
xor
pop
rolb
aam
mov
xchg
js
sbb
inc
add
or
xor
adc
push
testb
add
addb
push
sbb
mov
cmpsb
add
add
stos
lock
negl
out
add
sbb
add
iret
lds
ret
add
movb
lds
add
dec
sub
inc
add
mov
rolb
add
xor
flds
add
and
sub
fwait
push
mov
inc
mov
xchg
add
jno
loop
push
add
add
ret
ret
mov
xchg
add
push
or
mov
add
xchg
outsb
jge
add
add
js
aaa
inc
push
mov
add
cmp
sbb
scas
movb
add
scas
addb
sub
addb
iret
pushl
arpl
mov
mov
lock
scas
and
add
mov
jbe
pop
xchg
add
jmp
cmpsl
mov
lret
mov
jo
test
mov
test
push
dec
test
mov
add
rolb
pushf
jno
add
sbb
xchg
add
add
dec
pusha
add
cmp
test
add
loope
and
or
add
mov
add
hlt
add
add
sub
fmuls
test
loopne
out
mov
cmp
insb
ret
xchg
add
xchg
inc
out
lahf
pop
mov
and
mov
je
push
pop
into
ret
mov
mov
stc
lcall
add
cwtl
stc
and
add
cmp
mov
add
mov
dec
xor
imul
mov
add
dec
push
add
lds
sub
add
movups
addb
pop
push
ja
add
sub
pop
xchg
adc
les
jl
fildl
add
mov
mov
adc
movsb
add
std
inc
lea
push
mov
mov
add
arpl
mov
jb
aaa
cltd
cltd
sahf
data16
mov
fsubrl
gs
xchg
pop
sbb
aad
adc
mov
dec
push
add
pop
inc
movsb
add
outsb
mov
into
push
pop
decb
inc
add
pop
rcrl
push
add
pop
sti
pop
xor
jo
pop
decb
pop
xchg
add
loopne
sti
inc
test
lret
add
or
adc
aad
add
add
fbstp
add
add
mov
mov
push
pop
and
mov
adc
int
jnp
add
push
add
mov
add
lock
mov
testb
jbe
lret
add
mov
rolb
dec
out
add
mov
and
sbb
add
mov
mov
cmp
mov
jnp
lcall
mov
push
add
add
or
daa
out
fimull
jnp
jecxz
addb
mov
mov
add
pop
sub
sub
add
add
mov
add
std
pop
add
pop
cltd
icebp
dec
and
mov
pop
daa
lret
in
sbb
mov
dec
popa
cmp
cltd
add
loope
sub
fstps
xchg
into
adc
mov
add
xchg
add
pop
and
mov
add
loop
iret
fildll
pop
cmp
inc
add
sub
ja
in
add
add
add
add
add
add
je
jns
cs
jnp
add
xor
fld
mov
mov
add
into
dec
push
lret
sahf
cmp
mov
jb
dec
shl
add
ds
add
push
add
pop
mov
dec
popf
loopne
xchg
add
aad
push
lahf
pop
dec
mulps
add
movsb
add
add
mov
push
add
jmp
mov
data16
data16
mov
rolb
sti
cld
std
add
add
add
movsb
add
sbb
add
add
stc
addl
add
and
mov
add
add
mov
and
dec
sub
mov
xor
xchg
jo
test
scas
dec
int
add
push
add
sub
fidivrl
mov
add
cli
pop
leave
xchg
test
adc
stc
rolb
sub
jnp
cli
cmp
add
jnp
add
mov
into
test
sub
add
push
add
test
or
mov
imul
xchg
add
jne
fsts
insb
test
in
jmp
cwtl
je
sub
add
mov
pop
dec
aaa
add
mov
arpl
xchg
inc
add
sbb
add
or
mov
push
add
add
add
popf
jg
add
xchg
add
sbb
push
xor
add
add
push
add
loop
stos
cmpsb
add
add
stc
jmp
xlat
or
jne
lahf
loopne
jne
xchg
pop
arpl
push
daa
test
sbb
add
or
ds
jno
add
pushl
mov
add
add
mov
hlt
add
cmp
dec
sbb
or
aas
addb
add
mov
xor
xchg
jl
cmp
mov
mov
mov
add
add
inc
add
sbb
add
repz
jmp
mov
data16
and
mov
push
add
and
push
mov
jae
mov
test
and
mov
daa
sub
repz
jl
push
and
jo
jo
stos
lret
in
adc
cltd
xchg
cmc
push
add
jecxz
adc
xor
xor
inc
ret
mov
repz
sahf
sub
jecxz
add
add
leave
fsubrs
mov
rolb
ja
test
sti
ret
sti
xchg
fadd
add
add
add
mov
notl
rorl
cli
lret
cmp
add
aam
mov
bound
mov
xchg
add
jle
add
out
in
inc
and
mov
insl
pushf
test
mov
in
lret
adc
lods
pop
imul
mov
dec
aaa
add
bound
mov
mov
loope
pop
push
add
ret
add
mov
dec
pop
cmp
mov
inc
add
push
or
stc
cli
out
fisubrl
insb
movntps
aaa
enter
les
cmp
test
add
or
xor
inc
jmp
add
aas
pop
mov
add
add
xchg
add
stos
add
ja
add
push
add
adc
lock
push
add
enter
rolb
repnz
pop
arpl
cmp
insl
outsl
movb
test
add
ljmp
int3
xor
jmp
test
sbb
movsb
add
aas
test
jle
sti
out
add
or
insb
pusha
add
jg
nop
add
shll
mov
jne
add
add
sahf
push
add
mov
mov
data16
jge
xchg
adc
add
lret
or
mov
test
add
xor
add
cmp
add
pushf
rolb
sub
mov
movb
and
in
aaa
cmc
loopne
ret
add
nop
add
out
cmp
popa
repnz
decl
fstp
cmp
dec
mov
fnstenv
ja
inc
add
mov
add
std
fcomp
nop
add
add
add
das
jl
jecxz
jnp
mov
loop
inc
add
loope
add
adc
clc
daa
mov
fadds
sub
js
add
add
out
xchg
add
adc
cmp
jle
xchg
jg
movsl
pop
dec
xor
jp
leave
cmp
std
xor
add
add
add
out
add
lret
mov
jmp
add
pop
jno
mov
mov
xchg
sub
jl
arpl
cmp
in
add
mov
add
mov
add
xlat
aas
cli
wbinvd
sti
add
aas
aad
add
inc
add
jle
pop
test
add
movsb
add
mov
test
add
setge
fisttps
sbbl
jne
xlat
testb
push
add
sbb
add
add
mov
divps
mov
hlt
add
add
in
add
add
add
add
popa
pop
inc
add
add
sbb
rolb
sti
inc
pusha
add
and
mov
inc
add
lods
ljmp
cli
movsl
popf
jne
add
cmp
pop
xchg
adc
or
fwait
lcall
add
add
adc
in
arpl
jns
movsl
adc
stc
jne
movsl
add
mov
jo
fnstsw
xor
adc
pop
add
dec
jle
jmp
push
add
xchg
push
cmp
jnp
mov
mov
ds
mov
add
mov
xor
pop
jg
push
popf
adc
outsl
jmp
scas
or
inc
addb
add
add
pop
mov
sbb
pop
mov
add
add
xor
cs
btcl
add
cmp
add
shrl
cld
ljmp
insb
loop
fadd
in
mov
lea
add
mov
sbb
jno
repz
arpl
add
add
fstl
lcall
add
add
mov
xchg
add
pushf
xor
ljmp
fld
add
xchg
clc
aam
mov
add
sti
lds
int3
mov
das
dec
xlat
lods
xchg
add
testb
sbb
add
sub
cmpsl
divl
add
push
gs
out
cwtl
sub
popf
std
inc
add
fldcw
aam
sub
add
mov
add
scas
aad
add
add
es
xor
add
cmp
lods
stos
pop
lret
cmp
loope
add
add
add
scas
dec
xor
les
jmp
add
add
mov
sub
add
lea
xchg
ss
movb
sbb
fcoms
mov
pop
test
dec
xchg
out
xchg
add
inc
add
inc
add
insl
xchg
add
add
addb
std
cmpsl
loop
sbb
out
out
jecxz
add
or
or
jne
xorl
daa
inc
add
mov
add
or
lods
sub
fildl
add
lock
mov
dec
jmp
mov
dec
int
jg
hlt
add
xchg
add
fistpll
fldln2
add
loop
stos
sbb
icebp
adc
mov
inc
add
stos
rolb
mov
or
add
xor
push
pop
push
add
add
cmp
jnp
add
mov
cmp
mov
add
and
lahf
clc
jmp
shll
iret
cwtl
and
lock
push
adc
mov
inc
sub
enter
fistl
pushl
xor
out
xchg
scas
das
ds
add
or
ret
xor
add
cmp
mov
add
add
cmp
sub
add
shll
xchg
add
add
push
add
arpl
cltd
cmp
add
pop
cwtl
mov
add
popa
movsl
call
sub
add
loopne
mov
imul
add
dec
sub
jge
pop
jb
xchg
call
cmc
loop
pop
sub
pop
aas
cmp
push
ss
add
scas
adc
inc
add
bound
mov
mov
loope
add
mov
mov
xchg
add
mov
int
add
cmpsb
add
stc
testb
cmpl
jbe
fdivl
mov
push
add
mov
sub
dec
push
add
repnz
pop
dec
testb
adc
clc
add
add
dec
push
inc
xchg
addl
add
loop
stos
xor
out
aas
add
mov
mov
sldt
mov
add
adc
cmp
cwtl
rolb
add
jb
jecxz
gs
xchg
cmp
xor
les
test
cmp
add
aas
mov
add
das
pop
aad
jo
dec
or
stc
mov
pushf
sub
jg
mov
lret
push
add
mov
add
sbb
fisttpl
mov
test
jp
cmp
add
mov
pop
xchg
daa
pop
rolb
test
xor
inc
popa
jg
in
les
push
ljmp
add
out
pop
dec
sti
inc
add
stc
cmc
xchg
jb
or
xchg
xchg
add
add
pop
mov
data16
jg
add
mov
or
pop
pop
loop
icebp
iret
test
and
mov
mov
enter
add
push
add
mov
add
add
lret
test
and
data16
fnsave
fs
add
add
push
iret
pusha
add
push
add
ljmp
add
lcall
loop
xor
add
add
xchg
loopne
fwait
xchg
mov
testb
xor
sti
or
lret
incl
add
fwait
cmc
xlat
call
add
clc
hlt
add
mov
popf
lahf
jbe
xchg
test
jle
jne
add
lods
and
add
in
pop
jecxz
add
int
andl
add
adc
xor
stos
add
mov
mov
icebp
jl
add
add
jne
dec
xchg
and
add
add
sub
push
add
add
ret
or
mov
add
pop
aam
shl
add
movsb
add
add
push
add
add
imul
mov
adc
fbld
adc
xchg
add
mov
xchg
shl
movsb
add
rolb
sbb
add
mov
lea
mov
jmp
add
xchg
add
add
lahf
pop
and
add
add
mov
out
fdivp
add
das
mov
cld
xchg
adcl
ds
add
sub
imul
mov
or
add
lds
mov
add
adc
scas
in
xchg
add
sub
dec
xor
sbb
jne
xchg
jo
sbb
push
push
and
sbb
popf
les
cmpsl
mov
outsl
sub
movb
add
add
outsb
sub
sub
rorl
in
add
popa
clc
cmpsl
nop
add
rolb
xchg
add
add
shll
add
jbe
xorl
movsl
and
mov
add
add
mov
gs
mov
push
stc
les
pop
cs
or
aad
jne
mov
scas
adc
outsl
in
lods
enter
push
add
add
mov
repz
add
dec
cmp
icebp
test
xchg
add
add
es
add
in
sub
push
add
add
sub
add
leave
add
add
cmp
mov
jno
jl
sbb
jne
daa
fsubp
jg
out
popa
ss
jne
popf
fistps
push
add
push
mov
add
inc
cs
xchg
jbe
mov
jb
push
add
lock
dec
leave
int
lret
addr16
inc
add
addb
sub
adc
push
mov
inc
repnz
sarl
ficoml
add
loopne
add
add
adc
add
xchg
mov
ror
or
add
or
push
add
lret
fmuls
addr16
add
mov
add
cmp
inc
repz
fmuls
add
add
mov
add
pop
adc
and
mov
add
pop
dec
sub
xchg
adc
data16
mov
xor
add
add
xchg
pop
or
loope
push
add
pushf
add
out
push
add
xor
or
cmp
add
add
xor
outsl
out
popa
xor
mov
add
push
fsubs
add
in
or
ficomps
add
adc
add
inc
test
add
inc
icebp
mov
xchg
add
inc
push
fcomp
add
mov
add
pop
out
fbld
sub
in
call
push
add
adc
pop
pop
add
leave
xchg
inc
add
loope
je
and
jl
out
jnp
add
mov
inc
add
pop
imull
repz
dec
pop
sub
add
dec
lea
add
cmp
jne
cmp
mov
cmp
or
pop
adc
insl
xchg
add
loop
cs
and
jmp
outsb
inc
rcll
les
push
add
add
pop
mov
push
add
bt
ljmp
loope
mov
add
dec
fbld
sub
enter
faddl
jne
daa
rcll
dec
pop
xchg
lahf
push
addb
or
cmc
jg
add
add
mov
mov
add
add
mov
add
mov
in
ret
push
movsl
arpl
lcall
cmp
add
add
add
jge
inc
mov
jecxz
out
pop
ret
inc
add
daa
dec
sub
fidivs
mov
add
lahf
inc
hlt
add
and
mov
inc
and
add
push
adc
jg
rolb
jne
xchg
or
push
rolb
jecxz
adc
push
add
out
hlt
add
add
adc
add
xchg
add
add
mov
add
fsubs
add
add
outsb
xlat
lcall
add
jp
add
test
fwait
popa
in
lret
arpl
cmp
add
add
add
push
add
xorl
add
add
arpl
add
add
mov
add
add
rep
mov
outsl
sub
in
inc
test
add
adc
mov
xchg
add
fisubrs
add
add
add
fcoml
mov
add
add
daa
push
add
in
mov
add
addb
pop
arpl
add
add
fldl
out
xchg
imul
add
cmp
popf
movb
add
add
xchg
add
add
and
out
dec
mov
add
roll
mov
mov
add
pop
int3
adc
add
add
iret
movsb
add
mov
add
ljmp
mov
loop
shrl
cld
aaa
cmp
imul
fsubrs
pop
push
add
out
inc
inc
fstl
cmp
add
cmpsb
add
imull
adc
xchg
add
mov
mov
adc
add
add
mov
int
fldpi
icebp
push
push
lret
inc
mov
inc
add
or
aas
jle
add
add
mov
cmpsb
add
push
add
mov
ja
add
mov
add
jo
addb
cmp
mov
add
cmc
lahf
cmpl
pop
dec
jnp
rolb
insb
inc
add
or
mov
add
cmp
push
clc
addb
add
int3
and
int3
xchg
add
push
add
add
loope
add
add
mov
add
int
enter
outsl
cmp
add
lods
arpl
mov
adc
lea
push
push
add
xchg
add
add
pop
jge
add
and
mov
add
and
add
or
inc
movb
flds
mov
add
in
cli
nop
add
add
xor
add
add
add
test
movsb
add
mov
adc
into
popf
fimull
sub
push
setbe
dec
xor
dec
icebp
arpl
pop
pop
mov
sbb
in
pop
test
add
add
add
xor
xor
xlat
or
clc
cmpsb
add
add
add
mov
add
rolb
fwait
sub
lcall
fbstp
rorl
call
mov
lock
inc
loope
add
xor
data16
add
sub
add
add
mov
arpl
inc
add
mov
mov
and
call
xor
ret
inc
add
mov
nop
add
mov
in
and
mov
pop
mov
mov
push
pop
lret
jns
out
js
add
cmp
fsubl
cmp
adc
jbe
in
and
mov
add
add
add
int
aas
ds
addb
add
mov
or
daa
cltd
xor
and
out
rolb
addb
xor
add
add
addb
movsb
add
enter
add
mov
icebp
out
addb
sbb
sub
lods
push
and
mov
pop
or
add
cmp
fldz
insb
movb
in
popf
inc
out
popf
jae
push
mov
mov
popf
or
add
test
sub
adc
movl
add
add
or
mov
inc
add
adc
lahf
stc
jne
in
push
add
adc
sbb
xor
loope
add
mov
xchg
pop
popf
or
push
add
imul
add
fisubl
add
fwait
mov
cmc
loopne
jecxz
arpl
sbb
js
add
pop
rolb
inc
sub
add
fistl
data16
add
sahf
cmp
add
adc
add
or
add
add
mov
mov
add
lock
mov
or
jmp
test
cmp
or
push
add
add
add
add
jo
cli
test
dec
jns
repz
xchg
mov
add
xor
sub
dec
sbb
or
cltd
testb
add
xlat
inc
dec
mov
cld
loopne
test
cltd
sub
cmp
mov
clc
push
cs
and
mov
and
loopne
cltd
xor
addb
pop
pop
lret
cmpsl
imul
outsl
pop
test
pop
xchg
xchg
xor
add
add
mov
lods
push
add
mov
rcr
mov
cmp
jg
add
add
insl
syscall
arpl
mov
popa
xor
mov
adc
pusha
add
add
mov
jmp
inc
add
mov
add
popl
pop
cmp
add
int3
or
add
add
add
add
add
lret
repnz
ljmp
movsl
fwait
ds
jb
faddp
sub
call
add
add
test
mov
and
push
add
nop
add
or
xchg
add
or
pop
add
setne
inc
add
add
decl
xor
xchg
mov
std
loop
sbb
inc
add
xchg
add
mov
nop
add
in
scas
inc
cld
push
data16
lods
clc
jmp
add
popf
lods
flds
mov
lods
pop
int
sbb
xor
inc
add
stos
dec
lods
jecxz
or
add
jb
dec
imul
mov
add
sbb
leave
mov
fstpl
scas
cmp
mov
add
mov
dec
push
add
cs
pop
mov
pop
dec
sbb
sub
mov
add
add
mov
iret
jo
mov
sbb
dec
sbb
pop
add
mov
jl
pmaddwd
iret
push
movsl
adc
add
add
mov
imul
fmull
out
repnz
jbe
fidivrl
pop
mov
call
cld
or
add
add
sahf
ret
mov
add
add
mov
mov
add
pminub
mov
mov
add
inc
push
dec
rolb
loop
lock
add
mov
push
popa
add
repz
mov
sbb
add
add
cmp
sbb
jns
loop
mov
xchg
add
add
out
add
add
mov
in
mov
fidivrs
mov
xor
mov
cwtl
push
add
add
add
add
ficoms
int
xchg
in
pusha
add
cli
jo
dec
daa
xor
add
xchg
add
mov
xchg
imul
pop
in
sub
cld
xchg
add
ja
jmp
stos
lea
push
pop
cmp
enter
out
inc
addb
push
add
mov
aas
xor
or
into
popf
mov
data16
push
add
sub
into
loope
add
xchg
add
push
test
push
mov
cs
add
mov
add
dec
lahf
aam
mov
cmp
add
add
add
add
cmpsb
add
push
add
push
out
add
add
add
mov
mov
add
add
mov
js
add
in
lods
ljmp
xchg
add
add
cmovl
add
inc
hlt
add
or
add
mov
pusha
add
mov
add
out
add
insb
scas
inc
add
movb
jne
sahf
clc
rcll
aam
les
sbb
mov
dec
rolb
pop
stc
imul
push
add
add
jle
cmp
add
add
inc
pop
stos
mov
mov
in
push
add
loopne
pop
adc
add
inc
add
add
insb
push
les
add
clc
xor
cmp
add
add
jae
imul
add
add
gs
add
mov
js
lods
push
add
add
xchg
add
xlat
xchg
add
add
add
inc
bound
mov
dec
adc
cltd
fadd
add
inc
testb
cmp
inc
test
mov
or
clc
mov
hlt
add
jmp
lods
rolb
cmp
ss
add
add
xchg
add
pop
adc
pop
pusha
add
push
add
cmpsb
add
mov
add
push
add
in
dec
enter
add
add
xor
lds
jle
fidivl
add
dec
pop
mov
std
inc
dec
inc
add
or
adc
addb
jg
push
repz
iret
in
rorl
jge
add
push
das
jp
sbb
add
sbb
xchg
fmull
xchg
add
jl
or
fiadds
popa
pop
jg
leave
xchg
pop
sti
stc
adc
loopne
mov
into
push
pusha
add
imul
rol
add
loop
arpl
or
sub
add
mov
mov
push
add
add
int3
mov
ret
adc
or
dec
push
sub
mov
cwtl
mov
dec
js
add
mov
add
jno
add
add
add
mov
add
outsl
fmulp
cli
fldcw
mov
scas
adc
add
mov
insl
ljmp
jbe
jno
add
lret
iret
insb
xchg
sbb
stos
fsub
add
roll
fisttps
mov
add
xor
add
cs
xchg
add
add
fiadds
add
add
mov
mov
sti
add
mov
imul
mov
add
movsb
add
add
cmp
add
and
sarl
stos
negl
add
sub
hlt
add
xchg
add
andl
gs
movb
dec
mov
pop
lock
movl
call
mov
aas
jno
xchg
push
add
idiv
jae
addb
punpcklwd
mov
rorl
sbb
add
fwait
insb
or
jge
and
xchg
pop
jns
add
out
rcrl
popa
add
xchg
das
out
or
or
add
test
lahf
ds
shrl
add
stos
add
mov
sbb
jns
mov
xor
out
addb
add
add
je
testb
or
mov
std
lods
dec
mov
stos
or
lds
add
add
sarl
xchg
add
out
add
push
in
add
ret
movsl
pusha
add
jne
sbb
add
out
jae
cmc
add
add
push
jl
into
clc
adc
testb
add
mov
add
cmpsl
jge
sub
lds
das
sbb
hlt
add
mov
fwait
adcl
jmp
es
add
rolb
repnz
add
add
mov
add
pushf
aam
in
jb
lds
cld
popa
xchg
dec
es
mov
bound
mov
add
add
jbe
enter
adc
add
add
sub
add
rolb
and
add
add
out
loope
mov
add
pop
sub
jge
and
cmpsb
add
add
pop
into
mov
mov
or
dec
leave
fnsetpm(287
add
dec
das
mov
add
mov
add
mov
sbb
add
movsb
add
lock
add
add
pop
ficoms
add
bound
mov
sub
rolb
das
cmpsb
add
add
add
and
stc
jmp
stc
cmc
lret
sbb
mov
mov
fsts
push
scas
cwtl
addr16
add
xchg
add
stos
add
popa
sub
mov
je
jbe
les
mov
inc
add
adc
add
addb
add
cld
adc
inc
add
mull
rcll
jbe
les
pop
enter
xor
lret
imul
stos
popf
or
add
pop
je
into
add
cmp
mov
dec
push
arpl
add
stos
aaa
or
das
insb
cmp
andl
mov
daa
lret
add
mov
or
rorl
sub
out
pusha
add
push
add
movsb
add
add
jns
add
push
add
das
add
add
add
lret
leave
bound
mov
add
mov
mov
jnp
hlt
add
add
add
outsl
cmp
jg
filds
scas
cmp
add
mov
mov
fdiv
add
rolb
mov
cli
jae
add
insb
mov
enter
fidivrl
mov
popf
sub
xchg
xchg
add
addb
hlt
add
ljmp
ret
adc
dec
add
push
iret
sub
xlat
cmp
cmp
add
lods
and
add
mov
fwait
pop
pop
pop
adc
mov
add
adc
je
sub
or
mov
jns
insl
je
pop
xchg
lret
pop
int3
gs
mov
loop
popa
lock
jae
aaa
ljmp
mov
scas
add
mov
add
lret
pop
push
jb
inc
add
loop
inc
add
push
dec
sahf
cmc
sahf
dec
iret
and
lods
insl
sub
mov
out
cmp
out
jecxz
mov
adc
nop
add
xchg
pop
pushf
mov
or
testl
add
and
mov
rep
jp
ljmp
pop
xchg
add
pop
mov
or
cmp
jl
scas
cltd
mov
call
popf
sti
mov
jecxz
cmpl
inc
add
rolb
inc
loope
add
adc
add
add
mov
mov
xor
cmp
out
pop
mov
mov
or
movsl
mov
add
mov
cmp
sti
jecxz
out
or
enter
xchg
aas
mov
fidivrs
dec
xlat
testl
ffree
cmp
je
cmove
imul
xchg
pop
cltd
cmc
les
or
add
fiaddl
xchg
add
add
mov
mov
mov
scas
mov
loop
jne
push
add
add
int3
loope
cmp
addl
push
sbb
mov
jl
rolb
aam
mov
mov
scas
movsl
dec
and
into
jnp
mov
add
loop
xchg
mov
push
add
add
out
sbb
mov
add
sar
xchg
add
add
nop
add
inc
jg
addb
push
data16
jne
add
ljmp
xchg
cmc
jge
sub
imul
outsb
sub
add
addb
sbb
add
sar
jnp
loopne
aas
pop
test
lea
in
xlat
cmp
add
or
in
ds
bound
mov
jl
push
push
add
sbb
imull
add
add
add
adc
add
sahf
leave
cmp
sub
add
stc
popf
andl
je
push
popa
lcall
nop
add
xchg
add
mov
imul
jecxz
xor
and
adc
mov
pop
into
dec
testb
and
mov
add
add
mov
sub
inc
add
or
add
add
add
in
inc
add
shll
push
add
call
push
jecxz
dec
or
dec
cmp
outsb
inc
ds
mov
repnz
add
sbb
xor
sbb
add
add
in
popa
lods
mov
mov
push
add
or
test
xlat
add
add
jbe
add
cmp
add
mov
add
pop
lahf
rolb
scas
out
testb
pop
adc
inc
add
iret
cld
xchg
add
sub
push
fbld
mov
in
add
out
add
loope
xor
xchg
pop
and
vpcmpeqw
loope
testb
rcll
sub
add
add
mov
movb
and
mov
add
add
addb
add
imul
mov
cmp
xchg
jae
add
sahf
lock
mov
loope
mov
mov
add
jp
stos
adc
inc
aas
js
cmpsb
add
push
add
add
js
xchg
inc
add
clc
xchg
add
add
mov
add
ljmp
fsub
mov
pop
or
pusha
add
xchg
aas
repnz
add
add
cwtl
inc
add
insb
adc
stc
push
add
adc
jle
add
add
sub
dec
je
cmpsl
jp
sbb
sbb
jge
cli
pop
jmp
mov
aam
int
add
int3
jg
int
aad
add
addb
iret
mov
sti
add
push
std
icebp
and
add
mov
or
add
mov
adc
add
daa
pop
mov
pop
pop
ljmp
add
add
add
cltd
xor
push
push
std
pop
jl
neg
testb
pusha
add
jecxz
js
rcrl
add
or
add
pop
pop
out
out
int
addb
in
cltd
xchg
add
push
push
add
mov
mov
xrstor
movb
cmp
lock
jge
loope
inc
add
mov
sbb
push
add
add
loop
je
ret
outsb
or
bound
mov
xor
pop
jge
sub
adc
push
imul
mov
push
fnstcw
xchg
movsl
and
mov
sub
and
and
add
scas
sahf
in
cmpsb
add
xchg
add
add
add
test
sbb
pop
push
add
cld
xchg
inc
add
push
inc
jae
add
inc
add
ret
add
add
pusha
add
aas
mov
mov
test
mov
add
int
je
pop
pop
insb
push
test
add
sbb
mov
pop
xor
nop
add
repz
bound
mov
clc
sbb
mov
add
xchg
add
xor
xchg
addb
pop
xor
iret
pcmpgtd
outsb
rolb
add
push
push
inc
add
mov
adc
add
stos
xchg
aas
xchg
add
add
adc
add
add
sbb
xchg
add
cmpsb
add
dec
xorl
mov
push
add
add
repnz
fldenv
sub
jbe
mov
add
adc
in
push
std
insb
lcall
jg
and
mov
push
shrl
jnp
subl
lret
sbb
add
movb
add
lods
dec
fwait
pop
popl
filds
add
inc
sub
leave
pop
jo
adc
add
mov
add
fists
cmp
add
bound
mov
inc
and
mov
add
popa
in
movsb
add
inc
lds
ljmp
jle
fcom
add
add
les
and
or
movsl
or
add
add
pop
pop
fildll
insl
push
add
push
add
add
add
dec
test
add
fdivrs
add
xchg
mov
fsubp
and
jns
aam
adc
or
cs
aas
mov
call
and
add
pop
data16
jge
jmp
add
add
jg
mov
mov
cmp
mov
add
add
mov
add
dec
pop
scas
jge
xchg
mov
data16
add
loopne
or
xchg
ret
inc
push
add
mov
xor
push
add
jmp
test
xchg
lcall
add
sbbl
pop
fldcw
shll
add
add
add
add
add
xor
adc
jge
sbb
add
in
pop
xor
jns
lret
add
mov
cmc
js
add
cmpsb
add
mov
adc
add
adc
dec
out
add
mov
or
lahf
stos
xchg
add
fcompl
popf
cmp
jb
movsb
add
add
add
add
inc
adc
mov
or
ret
sbb
mov
cwtl
push
add
add
add
add
mov
add
gs
add
add
add
arpl
add
and
mov
cmc
stos
jno
cld
cmp
lods
out
mov
int3
outsb
cli
addr16
cmpsl
jp
inc
jmp
add
xchg
add
add
add
add
fisubl
add
in
jnp
test
add
or
mov
pop
arpl
add
sbb
add
jge
shll
add
add
add
jg
testb
add
push
push
loopne
mov
add
bound
mov
sahf
mov
data16
cwtl
and
mov
jnp
cmp
add
add
mov
ljmp
add
add
mov
test
es
pusha
add
test
andl
add
mov
fsts
inc
add
into
iret
pop
outsl
sub
jo
dec
addb
out
lock
adc
add
mov
loope
cmpsb
add
ficompl
dec
dec
test
add
mov
insb
push
add
adc
data16
push
add
aam
add
push
add
or
add
add
push
add
and
lods
jbe
int3
pop
mov
pop
sub
cmpsb
add
cmp
js
test
enter
mov
add
add
add
dec
fsubl
addb
and
mov
inc
rcll
add
imul
push
xchg
je
push
jl
outsb
outsb
adc
std
repz
add
shrl
shl
out
or
fnstenv
adc
nop
add
add
fwait
test
push
add
xor
pop
or
lods
push
add
cmp
adc
or
push
add
fidivrl
cmc
add
add
push
add
daa
pusha
add
rolb
dec
sbb
adc
in
mov
push
test
adc
add
lods
xchg
xchg
add
pop
or
add
movsl
cwtl
pop
adc
pop
dec
sub
add
repnz
add
pop
into
xor
inc
add
in
or
add
mov
sub
inc
pop
data16
repnz
add
mov
mov
and
scas
push
add
or
jnp
xlat
and
add
pusha
add
add
sbbl
mov
rolb
fwait
test
push
sub
pop
sub
jne
cltd
xor
icebp
cltd
mov
movsl
arpl
sbbl
sub
add
pop
lods
sub
aad
dec
jge
cmp
inc
cmp
fisttpl
cmp
sahf
ja
dec
or
add
dec
loope
jp
add
mov
in
out
lret
les
dec
aas
jecxz
jg
add
sti
and
mov
push
add
sub
add
add
add
sahf
sbb
mov
stos
add
lahf
cmp
sbb
lret
add
cmp
out
mov
bound
mov
xor
or
filds
ljmp
push
icebp
push
test
sbb
and
pop
dec
loop
icebp
scas
loopne
scas
lret
test
mov
jae
add
add
jg
cmp
outsb
shrl
out
repnz
mov
xchg
or
cmp
in
add
add
repnz
push
add
dec
popa
fstps
jne
add
movsl
mov
addb
add
arpl
and
mov
add
inc
add
jmp
push
and
add
imul
push
repz
mov
add
add
sbb
jnp
xor
sub
mov
add
pop
mov
pop
xorl
or
lret
call
cvttps2pi
inc
push
lods
call
daa
xor
add
add
sbb
xor
add
lahf
or
and
pop
mov
addb
out
add
fiadds
xchg
and
cmpsb
add
add
testb
flds
dec
aad
lock
add
add
cmpsl
stos
fwait
insl
fcmovne
pop
xor
out
cmpsb
add
sbb
and
cmc
lods
ret
add
mov
sub
mov
push
add
add
subl
dec
ljmp
inc
add
stc
push
add
add
add
jge
addr16
add
and
adc
mov
cli
dec
push
add
cmp
inc
lret
inc
add
mov
add
push
add
add
mov
cltd
imul
loop
and
cmp
fdivrl
add
dec
lods
mov
add
and
mov
add
mov
mov
push
mov
rolb
jae
add
add
popa
arpl
add
xchg
pop
push
add
pop
fistl
and
mov
loop
movsb
add
mov
add
aad
xor
movsb
add
pop
push
add
add
push
and
filds
insl
adc
add
mov
sub
add
add
popa
out
or
add
add
xchg
add
add
add
dec
sub
add
xchg
cs
mov
repnz
add
jmp
scas
xlat
lods
pop
movb
mov
pop
int
insb
out
adc
push
add
ret
ja
mov
add
dec
dec
jle
add
test
and
xchg
rolb
sub
mov
imul
add
xor
ret
adc
adc
push
nop
add
xchg
add
add
sbb
lret
jnp
add
mov
mov
mov
testb
add
add
xor
jle
loopne
popf
push
std
inc
or
push
add
add
add
add
mov
mov
scas
add
jbe
fcomps
into
mov
add
shll
xor
lds
cltd
fsts
mov
add
add
scas
in
xchg
sti
loopne
dec
pop
sub
fbstp
jne
xor
imul
mov
cli
add
add
repz
popf
sbb
mov
insl
add
sbb
daa
push
daa
pusha
add
lea
add
or
mov
add
add
add
popl
add
add
mov
in
in
sbb
dec
sbb
shll
add
stos
loop
push
shl
gs
les
lcall
jmp
aad
add
adc
sub
add
add
scas
lcall
mov
pop
aaa
dec
pop
js
leave
out
cmpsb
add
enter
add
xor
movb
mov
jno
add
lcall
add
add
add
add
add
rolb
je
in
mov
sub
cmp
lss
xchg
inc
jle
adc
adc
push
dec
mov
fiadds
mov
sbb
push
add
add
add
pop
lea
dec
out
push
add
and
imul
scas
into
jle
jno
or
add
pop
jns
add
les
push
add
mov
nop
add
cs
add
lea
add
ja
add
loope
dec
stos
sbb
les
aaa
rolb
sub
add
mov
add
mov
mov
mov
mov
jo
in
iret
push
enter
dec
xchg
in
and
mov
jg
pusha
add
adcl
mov
pushf
pop
fsubrs
dec
pop
push
repz
dec
stos
lds
xor
adc
mov
pusha
add
mov
add
mov
adc
add
add
test
push
imul
fisttpl
push
add
push
mov
fs
mov
inc
out
add
pop
repz
xor
and
mov
out
or
inc
add
mov
icebp
insl
inc
add
add
add
cmp
mov
imul
int
in
xlat
sti
mov
icebp
cmp
xor
stos
cmp
add
cmp
xchg
mov
add
add
push
mov
repnz
cmp
xlat
add
ds
push
int
add
jno
stos
pop
fiaddl
dec
stc
and
adc
add
add
mov
push
or
imul
in
xor
dec
mov
ret
jns
lea
mov
and
stos
out
cmp
add
mov
int3
iret
cltd
imul
sbb
out
fbstp
data16
scas
push
add
les
cmpsl
add
mov
sbb
xchg
add
fidivs
add
jo
insl
wbinvd
jecxz
add
add
or
popa
icebp
repz
loope
mov
mov
aam
sub
inc
sarl
add
insl
cwtl
pop
pop
push
add
inc
shll
loop
jb
lods
out
adc
xor
in
add
mov
add
jp
add
jbe
popf
xchg
aad
add
xor
add
and
fcomps
inc
out
sahf
lret
mov
jmp
std
add
push
pop
inc
add
xchg
add
xor
mov
enter
les
rolb
or
hlt
add
mov
mov
cmp
out
inc
add
ljmp
jle
add
add
xchg
add
sub
aas
roll
int
jmp
cli
or
addr16
test
std
jmp
mov
xchg
push
add
out
add
cmp
push
add
stc
dec
enter
jo
jmp
pop
lock
xor
mov
dec
push
add
fistl
add
add
xor
cmp
add
dec
stos
sbb
sysexit
out
push
add
jge
mov
add
movsl
or
push
add
adc
add
add
mov
dec
add
add
push
add
add
push
add
jge
cwtl
out
test
mov
xchg
add
or
fdivp
loop
add
mov
pop
mov
add
fucomip
pop
mov
aam
mov
test
cmpsb
add
out
xor
lret
sbb
out
or
add
mov
lock
rolb
int
add
add
dec
inc
lock
jno
daa
sbb
add
in
int
addr16
add
xchg
pop
cmc
push
rolb
cmp
imul
add
icebp
cmpsl
icebp
sahf
push
mov
or
add
add
push
add
dec
fistps
rolb
popl
jo
pop
xor
xor
push
mov
mov
add
bound
mov
and
mov
add
ret
and
mov
loop
lret
pop
push
pop
mov
add
add
add
inc
lahf
mov
pop
int
sti
rolb
xor
testb
test
aad
mov
addb
adc
adc
or
add
jae
addl
add
add
das
xchg
add
add
mov
adc
test
jecxz
add
push
mov
in
loopne
or
fs
test
iret
lods
pop
in
push
int3
mov
dec
jg
sahf
mov
movsb
add
fldenv
or
into
dec
and
mov
add
call
aas
inc
add
sub
add
cmpsl
pushf
pop
lahf
fisttpl
pop
mov
cmc
cmp
add
imul
hlt
add
mov
addr16
psubw
add
add
and
mov
add
add
adc
cli
in
ret
mov
pop
or
add
add
xchg
add
dec
cwtl
cmp
push
xchg
dec
mov
rolb
cmp
sbb
add
add
fcomip
test
add
add
add
add
stos
xchg
les
sub
jge
cmpsb
add
adc
push
add
inc
arpl
mull
xor
cmpsb
add
add
add
add
add
mov
add
testb
test
sub
fisttps
test
mov
test
fildl
data16
cwtl
jne
addb
push
add
push
add
add
mov
mov
add
add
mov
add
add
dec
scas
loop
pop
int3
int3
add
mov
jg
repz
add
add
into
cwtl
icebp
loopne
mov
add
xor
in
into
nop
add
sbb
cmp
push
add
lods
jno
add
add
imul
test
push
cmp
arpl
add
sub
sub
inc
lds
add
inc
xor
stos
inc
call
gs
fdivrp
pop
popa
add
add
out
xlat
popa
pop
mov
rolb
pop
sbb
xchg
add
rcll
aad
add
xchg
dec
test
jne
push
add
jl
imul
add
cmp
sbb
iret
mov
xor
adc
and
mov
dec
test
add
push
jecxz
add
into
gs
out
scas
out
xchg
add
xchg
inc
xor
arpl
add
mov
add
testb
popa
jge
sti
mov
sbb
bound
mov
add
repz
adc
push
push
test
add
add
sub
pop
sbb
sub
in
sbb
pop
jmp
outsl
les
adc
cmp
add
mov
xor
enter
cmp
add
dec
sub
add
sub
out
lods
push
cmc
pusha
add
add
xlat
inc
add
or
popf
adc
pop
cld
or
push
add
rolb
enter
mov
add
jg
les
mov
dec
mov
inc
add
mov
pop
push
add
psubd
add
sub
out
jnp
daa
mov
arpl
push
add
add
adc
add
int
out
cld
inc
scas
addr16
add
mov
rolb
xor
mov
jns
cmp
push
add
outsb
and
mov
add
inc
add
leave
addr16
add
add
rdtsc
test
sbb
pop
dec
outsb
mov
jbe
cmc
mov
xchg
add
pop
pop
loopne
les
in
and
mov
add
mov
mov
aas
addb
hlt
add
add
jl
jbe
pop
sbb
jne
add
add
out
sbb
ret
je
out
gs
and
cmp
xor
and
imul
pop
mov
sub
cmpsb
add
insb
testb
rcrl
lret
sbb
add
mov
cmpsb
add
arpl
add
stc
push
rolb
xchg
mov
cld
mov
add
xchg
popa
cmp
fwait
push
int
in
mov
sti
xlat
push
add
sub
add
out
mov
je
jmp
jo
sbb
pop
pushf
cli
dec
xchg
sbb
repz
jge
bound
mov
add
add
add
add
data16
lea
or
adc
inc
dec
adc
lret
mov
shll
add
add
cld
adc
outsl
imul
or
roll
push
push
mov
stos
inc
pop
clc
jp
inc
std
rdtsc
pop
imul
mov
cmpsb
add
dec
test
sbb
scas
pop
gs
or
out
inc
add
push
jle
add
add
mov
inc
add
inc
cmp
pop
push
sahf
lcall
mov
test
inc
add
inc
add
pop
jmp
test
ret
adc
mov
sbb
aaa
movsb
add
inc
add
xor
fistpl
pop
or
sbb
icebp
cmp
add
outsb
fnsave
mov
push
add
pop
sti
imul
add
mov
adc
mov
add
imul
add
add
popa
testb
addb
sub
add
dec
xchg
mov
and
inc
push
add
ffreep
add
lret
iret
inc
stos
in
flds
xchg
rolb
test
add
adc
ljmp
pop
jae
add
out
inc
push
push
ds
out
and
mov
push
dec
into
xchg
inc
add
add
movsl
xchg
add
mov
add
mov
sbb
add
jo
jb
add
cmp
add
xor
adc
cld
cmpl
xchg
add
fnsetpm(287
add
cmp
add
add
add
aad
add
sub
out
mov
adc
ret
add
imul
add
xchg
and
mov
inc
js
mov
add
push
add
rolb
aad
in
pop
sub
and
sbb
mov
add
rcr
shrl
rcrl
mov
mov
call
add
push
test
add
cmp
jmp
add
add
sbb
add
add
dec
fwait
dec
xchg
add
and
std
in
dec
nop
add
add
or
xlat
dec
add
mov
add
dec
sub
js
add
add
cmp
aad
cltd
loope
or
int3
mov
loope
add
mov
out
popa
and
cmpl
gs
test
es
inc
add
dec
push
add
add
add
add
or
leave
adc
jo
addb
sub
out
jecxz
lahf
mov
add
add
outsb
mov
add
add
pop
lods
add
add
shll
xchg
clc
fsts
aam
cmp
jb
rcrl
xchg
cmp
rolb
stos
int
xchg
loope
jecxz
add
and
mov
fisttps
xchg
pop
int3
mov
lods
push
add
repnz
mov
mov
mov
add
add
add
ret
fwait
lret
or
add
mov
jns
add
mov
or
cli
jns
insb
stos
or
dec
jp
popf
xchg
add
dec
scas
push
mov
sub
xlat
xor
push
add
rolb
jp
idivl
testb
fidivs
add
add
mov
or
add
add
add
and
cs
add
repnz
pop
dec
lcall
ja
gs
add
add
mov
fstpl
cwtl
fidivrs
push
dec
mov
jo
xor
rolb
add
add
mov
adcl
mov
test
arpl
mov
outsb
add
jg
add
sub
sub
aad
or
jmp
dec
pop
jo
stos
sbb
icebp
xchg
loop
and
add
mov
inc
add
xlat
in
sub
xor
jno
add
mov
add
push
daa
les
into
mov
scas
in
add
mov
icebp
mov
pop
add
jb
mov
clc
movsl
jne
add
add
stos
and
mov
add
add
int
rolb
sbb
lods
cltd
push
jl
repnz
sahf
call
push
mov
add
sub
adc
out
mov
jne
sbb
add
add
popf
insb
lock
add
pop
add
add
add
jns
add
lods
adc
add
cli
fsubrs
pop
xchg
add
add
add
rolb
pop
popf
mov
jl
pop
pusha
add
add
sbb
mov
nop
add
add
loope
ret
add
add
add
cltd
sub
add
mov
and
mov
das
lcall
out
mov
add
sbb
adc
sbb
push
add
mov
jg
add
xchg
dec
bound
mov
fs
pop
jo
pop
pop
cmp
sahf
int
add
and
mov
push
add
and
daa
push
add
add
cmp
cmp
add
imul
lret
icebp
mov
add
mov
add
out
sub
and
or
add
add
add
add
lods
jne
add
add
nop
add
inc
add
add
and
add
jle
jns
cmp
repz
rcll
inc
pop
mov
out
push
test
lcall
add
add
add
add
add
cmp
xchg
pusha
add
lods
loopne
xor
test
add
mov
mov
add
aas
test
lret
add
cmc
dec
pop
add
test
pushf
inc
add
mov
fdivr
jbe
and
cmpsb
add
inc
push
call
rcrl
bound
mov
add
stos
adc
in
cmp
adc
out
stos
push
xor
leave
adc
in
xor
daa
adc
add
mov
cmp
cmpsl
inc
add
add
add
add
aaa
mov
push
add
insl
push
daa
xchg
add
jge
add
add
xchg
filds
and
movsl
loopne
jge
testb
add
movsb
add
push
add
inc
add
gs
mov
mov
mov
movsb
add
pop
push
sarl
jae
add
add
loopne
pop
push
test
pop
mov
mov
add
mov
mov
add
dec
cltd
test
test
addr16
push
add
jmp
add
mov
lds
out
clc
push
add
sub
add
repnz
addb
add
push
imul
push
test
pushf
push
pop
jl
push
xchg
repz
inc
das
test
mov
lret
cmc
jmp
add
inc
jbe
aam
lock
push
add
stos
in
stos
pop
scas
cwtl
jecxz
add
add
add
rolb
add
adc
fwait
imul
rolb
daa
stos
mov
adc
in
add
mov
and
dec
or
testb
ret
push
out
push
add
add
sahf
xor
push
add
sub
add
mov
aad
push
add
addr16
push
add
pushl
add
push
dec
rorl
and
mov
mov
mov
les
dec
mov
pop
pop
data16
add
data16
add
ficompl
add
and
lcall
adc
add
add
adc
pop
data16
in
push
scas
and
mov
mov
add
mov
out
fildll
mov
lcall
add
or
add
fisubs
add
add
inc
sub
in
add
mov
sub
movb
add
fisttpl
into
iret
push
bound
mov
addb
add
add
testb
mov
mov
adc
fisubl
add
cmp
iret
cmp
add
and
mov
fidivl
adc
add
inc
add
mov
add
icebp
jno
adc
or
add
aaa
inc
sahf
stos
jmp
outsl
cld
fadds
add
add
add
add
lods
sbb
loope
mov
add
or
xor
fwait
xor
repz
push
in
rolb
add
add
pop
jae
ret
addr16
aaa
pop
xchg
popf
sar
sti
fisttps
or
add
imul
movsb
add
jne
imul
add
out
cld
adc
je
dec
adc
enter
xchg
shr
mov
add
add
call
fstpt
in
adc
iret
mov
add
imul
mov
bound
mov
inc
mov
jg
xchg
dec
sbb
dec
test
add
pop
loop
jnp
enter
mov
mov
lock
cmpsb
add
add
adc
out
sub
and
pop
fisubl
or
ret
mov
in
sub
add
outsb
dec
xor
mov
mov
push
test
or
scas
mov
loop
push
add
add
mov
lds
xchg
fistps
shll
xor
push
mov
add
pop
jne
add
inc
add
mov
insb
hlt
add
bound
mov
push
iret
adc
imul
cwtl
iret
add
into
inc
add
jb
lret
int3
xchg
cwtl
and
mov
sbbl
or
test
push
add
call
in
inc
jne
cmp
jmp
add
add
add
add
mov
xor
repnz
mov
sbb
ss
dec
xor
aam
lea
loop
sbb
push
test
lret
repnz
into
ret
mov
add
mov
in
cltd
ficoms
pop
cmc
out
jnp
xchg
add
std
data16
dec
jne
sub
push
add
or
insb
cmp
add
mov
sub
and
jmp
fwait
push
add
cmpsl
jne,pn
in
jg
xor
jmp
add
add
add
cmp
xchg
popf
pop
inc
lods
gs
cs
rolb
cltd
ss
add
mov
add
mov
imul
fldenv
mov
add
mov
jmp
dec
push
add
or
mov
adc
inc
add
add
int
add
lock
mov
cmp
xlat
scas
leave
dec
mov
sub
add
adc
add
add
daa
dec
dec
or
lods
dec
jns
add
icebp
testb
dec
insb
aaa
pop
ficoms
mov
mov
add
push
data16
or
jns
loop
fisttps
add
add
pop
popa
outsl
pop
fs
xchg
sub
pop
arpl
test
jmp
icebp
push
mov
adc
test
insb
cmp
add
add
inc
add
push
add
imul
cmc
inc
add
data16
push
add
jns
mov
add
add
dec
jb
jge
add
addb
in
imul
mov
xlat
insl
jmp
lret
mov
adc
xchg
add
jl
adc
outsl
mov
nop
add
repz
sbb
pop
rorl
fidivs
ja
jmp
je
jmp
add
mov
add
mov
nop
add
in
pop
repnz
add
xor
movsl
mov
mov
out
iret
dec
xchg
add
jo
bound
mov
aam
mov
add
sbb
repnz
mov
xchg
fbld
aam
lret
lds
mov
pop
cs
loopne
xor
add
adc
and
pop
inc
add
pop
clc
mov
mov
add
add
add
sti
mov
mov
rolb
sbb
add
jbe
lods
je
clc
adc
mov
iret
jle
imul
cmp
inc
add
add
sahf
jg
out
movsl
dec
sub
dec
add
cmpsl
sbb
add
xchg
lds
add
sub
jae
add
lret
rolb
aam
je
incb
popa
test
jmp
xor
aas
xor
cli
add
js
add
add
add
add
pop
cmc
fcoml
mov
clc
mov
bswap
insl
dec
jg
add
fisubs
mov
pop
xchg
add
or
stos
push
xor
pop
aas
jecxz
sbb
mov
das
sbb
add
mov
mov
mov
add
movsl
pop
mov
fsub
adc
das
shll
jp
add
add
mov
movzbl
cld
btr
test
xor
xor
ja
push
add
daa
push
jg
add
add
add
jae
mov
call
mov
movsl
jb
pop
ret
add
loope
and
sub
addb
dec
inc
add
dec
nop
add
dec
mov
dec
mov
adc
pop
push
add
out
mov
or
into
jno
add
aam
sahf
or
imul
movsl
dec
xchg
xchg
popa
pop
std
cld
sets
iret
int3
add
enter
std
lock
sbb
fcomp
enter
dec
xor
in
dec
xchg
add
mov
or
js
add
out
or
mov
push
cmp
sub
add
add
lret
add
insb
fiadds
mov
lods
adc
out
mov
sahf
add
xchg
add
mov
jg
inc
mov
xchg
clc
xchg
add
je
push
sub
xlat
mov
repnz
lock
jmp
xchg
mov
or
dec
mov
and
mov
cmp
fs
add
or
and
mov
or
mov
into
push
imul
add
add
bound
mov
pushf
addb
push
add
cmpsl
data16
add
push
jns
add
mov
stc
and
or
add
in
ret
sbb
ret
add
decb
dec
repz
add
push
add
mov
mov
fwait
adc
push
add
add
out
sbb
inc
add
add
jl
inc
test
push
add
in
popa
iret
popa
es
hlt
add
xorl
push
add
fstpl
cld
jle
add
out
mov
cmpsb
add
add
pop
jo
push
add
int
insb
test
enter
jmp
xlat
mov
test
mov
sub
add
icebp
add
mov
rolb
dec
jne
fldt
add
add
arpl
outsl
sub
add
lods
dec
test
push
enter
mov
aas
push
add
push
add
mov
jg
cmp
gs
pop
in
lods
push
data16
add
mov
adc
imul
std
xor
mov
in
scas
mov
mov
add
jle
cld
mov
cli
fisubrl
jg
jb
mov
sub
sahf
xor
cmc
inc
add
jg
add
xor
andl
sub
add
addb
sti
push
pop
mov
mov
and
jp
vpandn
add
in
cmp
insb
pop
bound
mov
rcll
out
mov
stos
scas
or
add
xchg
outsl
cmpsb
add
mov
movb
cmp
insb
sbb
rcrl
negl
clc
fprem
test
dec
mov
add
fsubrs
cmp
jns
dec
insl
mov
fnstsw
sub
add
add
stc
out
fdivrl
cmp
rolb
out
cmp
or
fimull
add
xchg
je
adc
or
add
call
jae
jae
xor
mov
and
loope
and
mov
sbb
pcmpeqw
mov
add
add
add
xchg
xor
add
cmc
lret
out
push
add
and
jp
insl
rolb
cmp
inc
add
mov
mov
or
add
xor
addb
mov
add
addr16
fiaddl
into
xlat
cld
or
testb
add
int3
lods
sub
cmp
mov
out
push
jl
add
add
inc
stos
xor
jb
xchg
testb
ret
cld
imul
ror
sbb
add
add
add
dec
pop
mov
or
sarl
fstp
rolb
jo
lods
jmp
cmc
les
jmp
push
add
adc
aad
je
add
add
scas
daa
ds
add
pop
add
pusha
add
fcmovne
cmp
add
mov
aam
sub
scas
ljmp
ficoml
add
xchg
dec
mov
add
sbb
bound
mov
call
add
and
std
addr16
xchg
add
jecxz
add
aam
hlt
add
jnp
add
jns
cwtl
aas
insb
cmp
mov
cmp
addb
add
add
movl
add
out
dec
aas
test
add
jb
mov
add
loop
dec
mov
data16
or
lods
in
inc
jl
dec
add
pop
lods
insl
push
add
add
add
daa
sbb
add
mov
jmp
add
cmp
aam
sub
xchg
out
dec
in
rcll
aam
pop
clc
or
push
add
add
int
add
cmpsl
xlat
iret
repnz
loope
into
add
mov
mov
lcall
movsb
add
xlat
xor
jnp
add
cmpsl
fisubs
mov
add
mov
jae
sbb
clc
clc
hlt
add
add
insl
sub
add
sbb
sbb
add
insb
out
fadds
add
lahf
pop
repz
add
lock
add
aaa
lret
xor
sub
subl
hlt
add
add
mov
inc
xchg
cld
inc
add
add
cmpsl
jge
mov
add
mov
mov
mov
mov
jecxz
add
popf
mov
or
subl
sub
repz
std
xlat
xchg
and
add
adc
push
add
test
jbe
aam
lea
add
add
push
add
dec
fisubrl
add
popa
loopne
inc
add
adc
add
mov
xor
inc
mov
add
dec
cmp
add
mov
lahf
int
push
add
cmp
add
adc
inc
ds
add
add
add
jnp
add
jecxz
sub
and
sub
fiaddl
outsb
jae
adcl
aad
add
daa
das
jb
rolb
enter
adc
pop
xor
add
cli
call
cmp
lahf
jg
orl
push
fdiv
add
popa
cltd
inc
add
jns
dec
or
push
add
add
add
add
add
add
mov
adc
int
xchg
add
add
test
or
pop
rorl
mov
add
mov
out
subl
cmp
add
jge
add
lahf
pop
aam
sbb
stos
mov
xchg
add
jge
mov
xor
fistl
add
sub
fnsave
repz
adc
push
adc
mov
cmpsb
add
cltd
sub
cmp
jecxz
add
cmc
sub
add
jo
sbb
sahf
sbb
adc
inc
add
insl
cmpsl
dec
cmp
mov
add
repz
call
addb
mov
enter
fucom
xchg
cmc
adc
adc
and
les
fsts
jb
ds
mov
data16
fdivrs
sbb
adc
movsb
add
push
add
js
dec
dec
ror
shll
add
mov
stc
fs
adc
in
dec
jbe
adc
add
xchg
es
cmp
dec
sub
fwait
out
mov
add
add
add
add
add
xchg
scas
cmp
lock
mov
mov
add
mov
stos
scas
pusha
add
mov
pop
jno
out
mov
rolb
lret
dec
adc
stos
lret
add
add
frstor
add
add
sub
xchg
add
decl
inc
popl
add
fstpt
and
mov
lret
in
add
add
pop
cld
pop
aaa
xchg
dec
leave
mov
dec
fsubr
mov
add
jbe
scas
aad
add
add
nop
add
pop
out
push
add
mov
pop
filds
fsubs
add
pop
mov
aad
enter
adc
loop
aad
add
add
inc
add
add
add
sub
sub
push
add
repnz
pop
insb
and
add
cmc
ret
imul
lahf
dec
in
jne
jp
scas
iret
cmp
add
cmp
sub
pushf
aam
xchg
add
std
ja
mov
add
sub
push
es
cmp
add
add
sub
test
and
add
jmp
add
in
js
std
push
inc
add
das
pop
dec
scas
mov
mov
xchg
hlt
add
mov
mov
shrl
pushl
add
push
mov
pop
xor
ret
inc
add
cmp
pop
pop
mov
add
push
add
pop
jecxz
mov
add
addb
mov
popa
ja
stos
lret
add
out
ret
ja
add
mov
add
xchg
xor
add
add
jp
xchg
add
jge
add
xchg
add
loop
out
jns
mov
mov
and
push
sub
lcall
push
add
mov
inc
add
fnstcw
dec
push
add
mov
mov
mov
add
imul
or
stos
push
dec
add
xorl
mov
outsl
push
leave
jecxz
add
and
ret
loop
mov
xchg
cld
add
jmp
add
add
mov
inc
outsb
inc
add
and
add
add
pusha
add
test
movl
sbb
adc
sbb
add
sbb
cld
jg
addb
inc
jo
dec
mov
inc
add
jae
add
add
pop
out
fisubrl
add
add
fucomip
addb
push
sbb
add
mov
add
outsl
bound
mov
sub
jo
test
add
rolb
rcll
add
add
fsubs
mov
add
enter
add
add
pop
sbb
add
add
ds
fsts
hlt
add
dec
mov
add
nop
add
and
lahf
lgs
sbb
cmp
test
data16
cld
and
cmp
mov
movb
cld
out
pop
pop
test
xor
mov
jge
mov
xor
test
push
inc
shll
adc
lret
or
cmp
dec
or
or
add
dec
ljmp
add
pop
lret
jo
leave
sbb
mov
xchg
addb
ja
pop
call
jnp
pop
test
aas
outsl
subl
scas
cmp
movsb
add
jl
add
xchg
movsl
sub
add
mov
cs
dec
std
jle
xchg
add
add
enter
mov
add
sbb
push
enter
dec
movb
add
pop
scas
rolb
add
dec
jecxz
fimull
scas
fwait
testb
xor
loope
mov
add
pop
jnp
add
add
iret
push
add
mov
add
scas
cmpl
add
mov
lcall
repnz
daa
mov
mov
push
add
das
or
add
pop
pusha
add
add
push
add
mov
testb
pop
push
or
data16
mov
mov
inc
add
add
push
add
rcll
add
add
pop
shll
sub
enter
add
fdivrs
rolb
add
ljmp
shrd
es
and
push
add
dec
ret
jae
outsb
mov
stos
movsb
add
jae
xchg
push
add
cmp
and
mov
mov
add
sti
out
add
pop
push
sub
push
inc
cwtl
gs
fnstsw
add
add
xor
xor
adc
mov
add
add
add
and
add
add
inc
sub
call
pop
test
add
fabs
lea
add
add
das
push
jns
pop
repnz
add
scas
pop
dec
insl
mov
add
loope
and
add
add
or
int
sub
int3
insb
lods
jmp
sbb
add
mov
mov
bound
mov
inc
in
rolb
fidivrl
rolb
xchg
cwtl
mov
cltd
mov
add
push
subl
add
dec
lcall
lds
and
pop
out
cmpsb
add
mov
into
out
add
call
jne
xor
add
adc
nop
add
lcall
and
frstor
add
jle
pop
jae
movsl
out
push
add
add
lea
fwait
lods
push
jge
int
ficompl
add
mov
adc
jmp
add
add
add
ficoms
dec
popl
cwtl
pushf
outsl
cwtl
sbb
add
sbb
mov
mov
cmpsl
add
scas
icebp
testb
ficoml
insb
pop
jl
sbb
add
repz
add
push
scas
dec
dec
fisttpll
inc
add
fidivrl
xchg
add
pushf
int3
stos
rolb
mov
decl
xchg
aad
pop
mov
dec
xorl
mov
adc
pop
cmp
dec
push
add
mov
and
mov
add
jo
jg
push
js
in
push
repz
mov
icebp
jecxz
xor
addb
add
hlt
add
loopne
repnz
pop
movsb
add
add
lcall
dec
fwait
movl
add
xor
jnp
add
or
xchg
add
lock
add
mov
outsb
out
mov
inc
add
lods
and
mov
mov
arpl
insb
xchg
mov
stos
lcall
rolb
pusha
add
add
push
ds
add
add
add
addb
xchg
lods
pop
fneni(8087
add
das
cmp
addb
dec
xor
sbb
lods
fidivl
add
sti
loopne
add
out
xchg
add
adc
add
movd
add
pop
adc
popf
add
adc
sti
sbb
add
ljmp
outsb
cmc
jne
add
add
fisttpl
cmp
pop
add
push
add
sbb
pushf
xchg
add
xor
stos
and
out
dec
in
int
add
gs
roll
aas
lret
dec
pop
xor
es
add
lock
add
sub
add
jg
xchg
in
ljmp
add
mov
loope
cs
add
fildll
int
mov
inc
add
outsl
divl
dec
lret
movsl
sub
add
fcomp
cmc
and
mov
mov
les
jl
add
dec
add
add
jecxz
push
add
add
mov
cmp
mov
adc
or
add
loopne
pop
pop
iret
xor
sub
add
add
mov
repnz
addr16
pop
pop
inc
add
pop
or
sahf
and
mov
add
rolb
adc
mov
push
inc
popf
jbe
pusha
add
and
mov
add
mov
repnz
add
xor
mov
stos
add
mov
vxorpd
add
push
xlat
ret
into
in
ret
mov
add
mov
add
stos
std
xchg
shll
leave
icebp
cmpsb
add
xchg
add
cmp
mov
fstpl
ficomps
gs
mov
xchg
pop
fistl
add
mov
sub
fcom
pop
and
mov
enter
fdivrl
add
sbb
push
add
xchg
sub
mov
dec
inc
add
test
imul
addr16
repnz
adc
xlat
pop
adc
fiadds
adc
add
mov
pop
inc
adc
lret
lret
pop
or
leave
cs
push
add
add
ret
in
adc
les
bound
mov
mov
pop
out
mov
fstpl
mov
add
add
arpl
mov
add
add
cmpsb
add
outsb
and
pop
ret
add
add
aad
add
or
mov
sbb
int3
xchg
push
add
cmpsb
add
cmc
out
cld
lock
ja
or
add
add
add
fldl
add
dec
int3
push
add
xchg
fst
add
bound
mov
pop
inc
adcl
cs
inc
lret
or
mov
inc
cli
and
mov
test
jg
add
fiaddl
fisttpl
lds
in
sbb
add
add
nop
add
mov
out
mov
mov
je
xor
dec
clc
add
pop
mov
add
add
add
rolb
sbb
mov
add
das
sti
xchg
mov
pop
mov
mov
fistpll
add
add
mov
mov
mov
push
add
or
icebp
ja
movsl
push
push
add
add
mov
push
add
add
fwait
and
push
mov
in
mov
add
add
fwait
bound
mov
into
mov
lahf
add
mov
adc
xchg
cmpsb
add
movsb
add
lcall
pop
ret
test
xor
add
push
scas
cld
pusha
add
nop
add
pxor
xchg
adc
scas
push
jecxz
inc
add
outsb
jne
bound
mov
add
adc
mov
add
jne
lods
xchg
psrlw
cli
stc
out
rolb
and
mov
arpl
add
lret
add
sti
lret
mov
popf
mov
add
cmp
lea
jnp
testb
xor
mov
lds
repnz
scas
nop
add
pushf
mov
add
add
sub
mov
nop
add
or
pop
arpl
arpl
add
fists
add
in
movb
mov
add
in
mov
pusha
add
mov
dec
in
sub
aam
lds
xchg
dec
pop
enter
mov
add
add
mov
add
add
pop
enter
adc
repz
mov
pop
fisubl
and
add
add
icebp
pop
das
cmp
or
xlat
inc
jmp
add
add
add
add
mov
add
push
add
dec
pushf
jmp
add
cli
es
ss
add
adc
ljmp
sbb
add
add
arpl
mov
push
add
out
pop
icebp
dec
sub
insl
or
pop
mov
cmp
or
cmp
add
mov
in
cmp
xchg
movsl
movsl
mov
add
or
test
fstpl
sbb
cwtl
loopne
es
aam
inc
add
or
out
pop
mov
xor
in
cltd
jge
or
add
cmp
push
add
add
mov
ficoml
fwait
sub
mov
fimuls
fnstenv
jecxz
mov
push
mov
add
dec
pop
mov
add
add
add
bound
mov
and
or
add
jp
sbb
outsb
or
movb
add
aaa
mov
add
shrl
add
add
iret
dec
ffree
arpl
jbe
rolb
hlt
add
scas
ja
and
add
imul
sbbl
dec
setb
sub
add
sbb
std
arpl
jnp
add
gs
xchg
add
mov
add
mov
lret
cmpsb
add
arpl
add
mov
add
les
movsl
ret
cmp
mov
addb
add
add
pop
push
ljmp
add
mov
add
stos
dec
aaa
enter
add
add
movb
mov
fs
inc
add
add
stc
enter
pop
sub
add
add
rolb
add
add
aad
add
mov
pop
sbbl
mov
cs
jne
sbb
stc
or
jbe
mov
sub
insb
imull
mov
mov
xor
out
dec
stc
ja
add
add
stc
mov
add
pop
stc
jb
mov
out
addb
stc
push
adc
jo
xchg
add
out
or
stos
faddp
add
dec
ljmp
push
movsb
add
lret
pop
sahf
lods
cli
mov
adc
add
add
bound
mov
mov
adc
xchg
add
add
add
jg
add
data16
add
out
call
add
adc
jb
mov
add
and
mov
inc
test
lahf
mov
aas
out
in
test
mov
lahf
iret
add
pop
and
add
mov
jge
mov
add
mov
xor
pop
outsb
stc
mov
adc
into
sti
mov
cmp
stos
loopne
cmp
lods
das
inc
add
add
sub
add
push
data16
add
jl
and
add
add
mov
add
xchg
mov
add
add
mov
xor
sub
adc
push
add
inc
add
enter
rolb
lock
cwtl
out
ljmp
inc
add
repz
int
add
test
test
cmp
ja
mov
jbe
mov
stc
add
pop
ljmp
sub
add
ljmp
and
mov
add
add
into
stos
jecxz
add
add
icebp
adc
data16
add
add
add
push
adc
sbb
into
enter
add
stc
popf
dec
push
loop
dec
rcll
add
sbb
pop
lret
stos
inc
add
xor
push
add
out
rolb
add
mov
insb
dec
mov
cld
sahf
mov
xchg
inc
add
mov
jmp
add
cli
orl
dec
and
mov
sub
repnz
add
cmpsl
fnstsw
sbb
adcl
jl
js
jmp
add
add
mov
bound
mov
jae
mov
add
fcmovu
mov
add
cwtl
iret
push
add
add
ds
add
add
roll
xchg
mov
mov
iret
lahf
xchg
test
outsb
push
sub
mov
add
mov
xchg
cmp
mov
addb
add
data16
jle
jae
add
adc
pop
jecxz
add
subl
xchg
add
in
rolb
cltd
sub
add
mov
nop
add
fst
loope
dec
pop
fdivs
add
add
lgs
outsb
dec
mov
sub
fstl
inc
cmc
out
pop
push
inc
add
pop
ret
call
add
dec
sbb
loop
loopne
mov
sub
inc
add
cwtl
inc
add
add
adc
into
push
add
jmp
add
pop
xchg
add
lcall
add
fiadds
add
push
jecxz
push
push
jns
add
add
inc
mov
adc
xchg
add
add
enter
or
push
add
adc
rolb
pushf
repz
lods
pop
pop
leave
rolb
adc
xchg
stos
xchg
dec
out
iret
pop
push
jnp
add
data16
mov
cmc
js
adc
mov
mov
add
mov
pop
les
insl
and
mov
or
adc
fcoms
into
in
push
sar
add
imul
rorl
cmp
xor
mov
mov
xor
mov
test
add
or
into
and
dec
pop
jle
inc
add
mov
add
add
add
xorps
mov
pushf
int
mov
cmp
sti
addb
add
test
movsl
and
jnp
inc
add
xor
pop
push
cmc
cld
adc
pop
inc
add
and
mov
add
jg
stos
out
cli
lds
cmc
dec
push
add
add
push
add
xchg
jg
add
add
scas
mov
mov
add
fsubr
stos
jl
adc
mov
addl
add
jbe
xor
jg
add
aaa
adc
stos
nop
add
add
orl
add
mov
sbbl
in
xchg
add
add
mov
jbe
aas
sub
lret
nop
add
mov
nop
add
pop
cld
fsubrl
fistpl
inc
add
insl
cmp
insl
inc
add
add
add
add
add
data16
jnp
xor
iret
push
or
imul
cmp
sub
data16
add
in
mov
inc
and
mov
jg
stc
or
insb
ljmp
jae
or
push
test
loop
push
add
das
gs
dec
cli
xchg
mov
adc
push
add
fildl
lds
add
sti
mov
push
add
adc
push
add
inc
add
aam
ret
inc
add
cmp
sarl
cmp
int3
lret
data16
add
push
jns
mov
shrl
xchg
push
push
push
add
add
jb
adc
pop
dec
xor
add
push
in
mov
add
in
mov
pushf
jns
add
adc
or
dec
out
pop
mov
xchg
lods
mul
add
test
in
mov
add
add
jmp
add
lea
addb
cmpsl
xlat
jb
stos
pop
cmpsl
dec
mov
add
imul
out
pop
pop
xchg
add
add
add
into
adc
inc
add
mov
rep
arpl
add
lahf
clc
js
push
cmp
mov
sbb
in
xor
pushf
rolb
aaa
jno
mov
push
add
add
outsl
inc
and
adc
ds
loopne
loop
arpl
outsb
data16
rolb
movb
sub
shll
xor
push
add
add
insl
sbb
xor
jle
mov
add
mov
sbb
add
insb
addb
loope
mov
push
mov
inc
add
add
dec
out
arpl
pop
les
in
add
test
add
mov
or
std
cwtl
add
rolb
cmpsb
add
pop
cld
sub
add
hlt
add
aas
adc
mov
cmp
add
jno
inc
or
testb
lret
testb
add
mov
pushf
xchg
add
std
jne
add
xor
ret
fwait
addb
mov
add
add
rolb
add
add
mov
add
xor
adc
popa
addb
xchg
leave
jbe
imul
orl
fwait
imul
add
in
out
testb
add
add
je
stos
cmpsb
add
stos
push
add
les
xchg
or
nop
add
xor
mov
je
sbbl
inc
add
dec
adc
into
movsl
outsb
test
or
movsl
add
add
add
mov
add
cmp
stos
push
jle
and
mov
hlt
add
add
adc
fists
mov
hlt
add
mov
decl
mov
add
rolb
call
add
and
mov
add
add
add
cmpsb
add
add
shr
add
mov
mov
lea
jb
ja
xor
jecxz
cmpsb
add
add
cwtl
cmp
cmpsb
add
push
or
rolb
add
mov
add
push
mov
add
scas
pop
outsl
push
mov
out
cwtl
pop
xchg
add
cmp
ret
xchg
scas
cmp
add
xlat
sub
into
mov
clc
push
js
jne
pop
in
ret
add
add
or
cs
add
or
add
jl
add
cwtl
in
in
push
add
pop
fisubrl
or
pop
push
dec
sti
fisttpll
add
movsb
add
add
add
push
in
cmc
and
xchg
shr
mov
or
loop
movsl
fists
jmp
lcall
data16
int3
movsb
add
lock
add
pop
add
and
clc
test
sahf
subl
hlt
add
add
inc
add
pushf
and
and
mov
cli
test
out
lcall
stc
fwait
xchg
add
add
add
push
add
lods
test
jae
repz
mov
cmp
bound
mov
pop
fistpll
enter
cs
xor
hlt
add
fcoms
test
lds
add
aam
jl
mov
inc
add
add
pop
cltd
and
mov
idivl
pop
add
add
fmull
push
dec
aaa
xchg
mov
rolb
or
add
mov
add
cs
cld
mov
add
cmp
rolb
loop
push
ljmp
adc
or
mov
popf
xchg
xchg
pop
pop
lock
and
mov
decb
in
hlt
add
lret
push
add
add
inc
push
or
mov
add
jp
add
add
add
add
mov
cmp
add
popf
flds
mov
pop
mov
push
add
add
and
mov
iret
sbb
scas
sub
cmp
mov
add
call
ja
add
add
mov
mov
pop
out
fbld
jmp
push
add
and
jno
cld
and
mov
add
sarl
or
insl
sbb
mov
jecxz
jo
jne
enter
mov
xchg
and
sub
pop
mov
test
add
sbb
cmp
inc
sub
and
mov
and
mov
dec
mov
mov
repz
sbb
xor
lods
pop
jb
ds
imul
inc
add
mov
jno
movsb
add
rolb
nop
add
jmp
add
add
add
pop
push
insl
rolb
pop
pop
mov
add
cmpl
add
mov
add
xchg
cmpl
jg
mov
add
jecxz
add
sub
add
fildll
out
pop
xchg
sub
add
jle
std
insb
add
outsl
xor
add
mov
cs
jp
out
xchg
add
das
inc
add
add
pop
sbb
jmp
add
add
cs
mov
mov
dec
testb
jecxz
repnz
sbb
mov
jge
loop
pop
inc
add
insl
add
arpl
adc
lret
lock
movsl
xchg
or
sub
add
jmp
jle
arpl
add
add
push
addr16
repnz
mov
int
ljmp
cmp
scas
sbb
ret
test
inc
add
add
jne
add
add
imul
mov
add
cmp
mov
lahf
add
add
sbb
add
scas
inc
pop
xchg
add
push
scas
std
sbb
add
lods
adc
addb
jecxz
add
icebp
repz
adc
lock
lret
inc
add
cmp
push
add
les
popf
int3
roll
xchg
add
sub
cmp
add
mov
hlt
add
mov
ss
add
add
add
testb
jecxz
jae
clc
js
add
mov
dec
pop
addb
jno
call
add
scas
test
lea
int
add
test
push
add
pop
cmp
add
xchg
add
add
push
sbb
int
and
pop
sbb
xor
mov
movb
stc
js
add
in
sahf
int
xor
add
outsl
add
insb
adc
add
and
mov
add
addr16
jb
mov
add
xchg
add
jo
and
inc
add
add
mov
fldl
iret
sti
lods
xor
mov
add
insl
jg
add
fxch
pop
pop
or
lgdtl
add
add
mov
lcall
push
adc
add
xchg
xor
mov
mov
add
push
add
mov
add
cmp
jge
add
insl
dec
into
pop
inc
add
sub
mov
icebp
or
ja
add
add
xchg
add
lret
jno
jecxz
fcomi
jmp
add
jb
adc
cmp
outsl
sti
add
mov
xor
das
push
lds
or
push
add
rolb
pop
out
filds
inc
xchg
add
xor
out
inc
add
cmc
jg
xor
rolb
xor
add
add
or
int
dec
sub
add
mov
ljmp
dec
bound
mov
imul
fninit
mov
out
bound
mov
mov
out
add
add
iret
mov
cmc
xchg
inc
addr16
and
xchg
push
or
add
add
add
mov
adc
or
popf
cwtl
push
add
xchg
and
lret
add
mov
js
cmp
add
mov
cwtl
mov
popf
cmpl
mov
add
icebp
std
ljmp
outsb
shll
nop
add
in
pop
push
add
test
adc
xchg
add
fstpl
popa
insb
jecxz
add
pop
test
add
mov
cmpsl
push
mov
adc
mov
push
or
je
and
or
dec
leave
jnp
add
int
add
nop
add
test
jle
shll
outsl
in
xchg
mov
inc
add
test
data16
add
add
mov
add
out
sti
inc
add
stos
sbb
js
xchg
add
std
lods
pop
stos
je
xor
vpsrad
sbb
xor
inc
sbb
push
ds
out
add
das
sub
mov
add
je
test
sbb
adc
cmp
cs
mov
arpl
ds
loope
jecxz
sub
push
lods
incb
jns
dec
add
add
add
mov
dec
fnstenv
sub
popf
jae
mov
pop
mov
call
add
cmp
sarl
mov
loope
xchg
daa
fwait
ret
adc
push
add
int3
std
aas
xor
out
out
push
lods
mov
add
loope
out
outsb
add
leave
std
ror
movb
add
add
inc
add
or
add
add
add
int3
and
pop
test
push
add
in
testb
add
or
cmp
add
js
cmpsl
jmp
addb
add
push
pop
in
into
int3
cmpl
add
add
stos
repz
add
testl
sbb
arpl
and
add
mov
jle
xchg
repnz
push
out
dec
inc
add
fdiv
add
or
add
rolb
int3
adc
jge
push
dec
testb
jbe
orl
dec
pop
mov
fsubrs
out
mov
add
add
inc
add
cmp
or
out
loopne
lahf
sbb
in
add
divl
cmpsl
jl
add
add
repz
aas
testl
add
mov
sbb
in
into
out
mov
data16
test
add
pop
add
testb
cmc
ljmp
and
lea
jmp
add
sub
add
cld
mov
add
call
mov
dec
sub
clc
lret
je
push
add
lret
gs
sbb
cld
fmull
push
add
in
mov
outsl
insl
lea
pop
fildl
add
mov
dec
test
call
add
add
add
test
add
add
mov
jg
add
mov
inc
mov
sbb
lods
mov
ret
lock
enter
mov
cmp
add
mov
add
sbb
xchg
mov
dec
jl
mov
out
aaa
test
mov
int
mov
rolb
jns
pusha
add
add
add
add
add
mov
mov
add
or
xchg
push
add
add
cmp
push
add
mov
testb
xchg
add
inc
aaa
inc
test
xor
in
push
add
cmp
bound
mov
add
jge
aas
xchg
add
add
mov
mov
pop
gs
add
add
xchg
daa
jnp
add
cs
fbstp
mov
orl
add
add
mov
cmp
dec
mov
add
add
add
clc
mov
add
testb
sbb
or
pushf
xchg
ljmp
add
ret
xchg
push
add
popa
mov
inc
aad
lock
jbe
aaa
mov
xchg
fldt
add
and
or
add
fnstsw
jnp
add
into
addb
dec
push
add
sbb
sub
fisubl
add
rorl
fnstsw
in
sub
add
aad
add
xlat
jge
mov
inc
jae
in
adc
add
and
add
add
push
cld
lods
xchg
add
gs
test
add
or
adc
sub
lea
inc
add
sahf
or
daa
std
adc
add
or
out
out
add
add
mov
outsl
pop
fbld
add
and
jge
add
add
push
xchg
lea
pop
mov
dec
imul
adc
mov
test
add
mov
lods
pop
rcr
add
sbb
add
add
mov
stos
inc
sub
xchg
add
pop
mov
sub
add
inc
aas
jae
add
insl
pop
pop
mov
mov
push
add
rolb
jl
add
lcall
add
pop
mov
pop
add
inc
add
mov
nop
add
add
push
imul
rolb
add
cli
mov
jge
push
add
add
adc
jo
mov
mov
add
std
inc
add
fadds
leave
sub
add
add
add
scas
push
add
bound
mov
add
rolb
and
loopne
add
add
test
jno
add
sti
cmp
dec
hlt
add
ret
sbb
ds
push
cli
inc
xor
adc
addb
pop
test
add
insl
jecxz
add
add
test
push
add
ds
add
jnp
add
int
into
xor
insl
sti
xor
add
cmp
cmpsb
add
push
add
sbb
add
jmp
add
add
add
mov
sub
add
inc
add
xchg
add
push
pop
fld
add
jmp
jo
mov
sub
mov
add
mov
jns
push
add
shl
add
add
test
inc
dec
lods
addb
test
sbb
pusha
add
cmp
call
push
add
add
dec
in
push
add
add
push
mov
xor
call
filds
add
cmove
xor
cmp
and
fsts
add
mov
mov
stos
jp
mov
mov
lock
add
jo
ljmp
mov
mov
sub
cmp
inc
jl
push
mov
scas
subl
add
mov
xchg
addl
add
les
adc
inc
popa
into
mov
push
jl
lahf
popf
ja
or
dec
jg
dec
push
add
repz
mov
jmp
push
add
add
cvtpi2ps
mov
add
push
add
pop
jle
sub
xchg
bound
mov
add
cmp
add
dec
xchg
add
add
and
mov
mov
push
mov
jae
or
mov
jmp
int
add
add
sbb
jl
lret
stos
es
add
add
mov
add
ret
push
mov
aad
test
add
add
int
mov
adc
arpl
lock
in
int
xchg
into
addb
js
lret
sub
cwtl
outsb
iret
cmp
loope
push
ja
das
decb
mov
dec
lods
pop
xchg
jp
add
std
xchg
mov
cs
add
mov
add
push
add
push
add
call
inc
and
mov
add
add
pop
cmp
add
call
mov
pop
pop
xchg
add
pusha
add
add
aaa
mov
fdivrp
arpl
mov
aas
jno
and
xor
add
add
mov
dec
and
addb
xor
lahf
mov
add
add
add
mov
sarl
xchg
add
add
add
std
rolb
pop
mov
sub
dec
iret
insl
mov
rcll
lahf
add
mov
out
rolb
and
ficompl
mov
add
ret
lea
pop
cmp
add
mov
data16
sub
add
mov
mov
das
rolb
add
add
add
fcomps
xchg
dec
ss
sbb
mov
add
add
xchg
jecxz
add
cmp
push
jno
call
bound
mov
adc
mov
fsubr
or
ljmp
js
push
add
add
mov
aaa
sqrtps
jne
jns
add
jecxz
mov
movsb
add
add
add
mov
bound
mov
add
int
aam
jno
fldl
sub
out
or
add
std
clc
notl
test
rolb
out
jae
push
inc
cmp
mov
mov
add
rolb
enter
jge
adc
xor
add
mov
jns
ficoml
add
or
imul
pop
sahf
ret
fistl
rolb
popa
std
push
pop
mov
bound
mov
adc
add
incl
sahf
lahf
sti
cmp
add
jae
jae
add
pop
cwtl
test
mov
pop
int
push
and
mov
aas
pop
mov
leave
lds
or
inc
add
out
push
add
add
jns
mov
in
mov
or
enter
pop
jb
or
add
or
jle
add
fwait
dec
inc
add
adc
jg
repz
xor
fiaddl
add
lret
add
mov
add
cs
xchg
add
add
add
mov
mov
or
inc
add
or
mov
add
sub
gs
out
or
add
stos
jg
add
mov
repnz
iret
xchg
adc
pop
pop
sub
add
mov
adc
cmp
scas
out
add
jnp
xor
into
xchg
add
sub
add
or
jg
push
add
pop
jp
neg
sbb
sahf
xor
inc
add
les
or
add
ret
pop
lahf
sti
jbe
cltd
cmp
aas
stos
mov
xor
fdiv
add
pop
pop
dec
inc
repnz
pop
xor
ret
xchg
leave
and
mov
rolb
add
adc
addb
loopne
jo
sahf
and
add
add
add
add
add
add
inc
add
and
jp
add
mov
outsb
push
sbb
das
jb
loop
out
icebp
das
mov
mov
int3
and
mov
add
mov
xor
sbb
add
insb
jns
add
add
mov
aaa
lret
xchg
add
xorl
and
lock
sbb
add
add
insl
dec
or
sahf
std
inc
add
lods
jle
jecxz
adc
push
add
ret
xchg
or
mov
cli
cmp
add
insb
pop
outsb
jp
or
add
pop
data16
pop
int
add
adc
pop
ret
popa
arpl
add
mov
sub
ss
sbb
add
xchg
add
mov
xchg
add
add
dec
jecxz
mov
jnp
lcall
lock
add
push
imul
jns
jmp
and
add
adc
cmp
add
mov
xchg
adc
stos
add
add
fistl
loopne
sti
in
aam
adc
stos
sti
add
das
punpcklbw
mov
sub
add
add
add
pushf
push
or
mov
dec
in
add
add
fnsetpm(287
add
cmc
and
push
xor
std
dec
xchg
gs
out
jge
add
rolb
imul
add
mov
call
add
add
add
loopne
sub
int
push
mov
addb
push
dec
sbb
add
popf
dec
ja
int3
xor
sub
dec
sbb
inc
ljmp
add
fwait
adc
push
pop
pop
hlt
add
faddl
add
mov
notl
add
jne
lcall
add
push
add
add
xor
fwait
sahf
sar
mov
add
sti
fidivrs
push
insl
mov
jae
loop
bound
mov
add
add
fidivl
ds
add
data16
aad
fwait
lea
add
add
xchg
add
add
add
push
mov
mov
ret
add
xor
or
add
add
adc
lock
lret
dec
sub
jbe,pt
jnp
add
inc
add
