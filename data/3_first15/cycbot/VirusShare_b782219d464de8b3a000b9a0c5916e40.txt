add
add
ret
fcmovu
fcmovu
fiaddl
add
push
push
mov
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
and
and
add
add
addr16
add
xor
add
add
add
sbb
sbb
sbb
add
add
add
mov
mov
sub
add
out
out
add
add
mov
mov
add
add
add
in
in
arpl
arpl
arpl
arpl
sbb
sbb
add
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
nop
nop
nop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
mov
mov
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
ss
add
add
add
fiadds
add
add
outsb
add
add
add
add
add
add
pop
add
loope
add
add
loopne
loopne
loopne
add
add
add
imul
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
add
and
and
and
add
add
addr16
add
add
add
cli
dec
add
add
add
jg
movsl
movsl
movsl
movsl
movsl
movsl
add
mov
mov
in
in
in
in
in
in
in
in
in
in
jecxz
jecxz
jecxz
add
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
dec
jmp
jmp
jmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
inc
ret
ret
ret
ret
ret
add
add
adc
add
mov
mov
mov
add
add
add
add
and
std
std
add
cmp
cmp
cmp
filds
add
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
enter
add
jne
jne
add
out
out
jo
cld
cld
add
add
add
stc
gs
add
mov
mov
mov
add
add
add
mov
mov
mov
mov
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
pushf
pushf
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
mov
mov
xchg
add
mov
mov
add
add
add
add
inc
imul
in
in
in
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
addr16
add
push
push
push
push
push
push
add
add
push
push
push
add
add
add
push
push
push
push
push
push
push
push
push
push
push
add
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
add
sub
sub
sub
sub
add
add
add
add
lret
add
rcl
sarl
jp
jp
jp
jp
jp
jp
jp
add
test
test
test
inc
inc
add
rol
rol
add
add
add
add
out
dec
dec
dec
dec
add
adc
adc
adc
adc
add
add
add
sub
sub
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
add
add
in
add
mov
mov
mov
add
add
add
cmc
cmc
cmc
cmc
cmc
cmc
ja
ja
ja
ja
ja
ja
add
dec
dec
dec
dec
dec
dec
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
pop
pop
pop
pop
pop
pop
pop
ret
add
add
add
data16
add
mov
jmp
mov
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
add
je
je
je
je
je
je
je
push
push
push
push
push
push
push
push
add
or
or
add
leave
leave
leave
add
or
or
or
add
add
add
jb
jb
jb
jb
jb
add
jmp
push
push
push
adc
add
sbb
sbb
sbb
sbb
call
dec
dec
dec
dec
xor
xor
xor
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
push
push
add
add
push
push
push
push
add
add
add
data16
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
add
add
mov
mov
mov
mov
mov
mov
add
adc
pop
and
and
and
add
loope
loope
loope
loope
loope
loope
loope
mov
mov
mov
mov
mov
add
insb
insb
insb
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
popf
sbb
sub
sub
sub
inc
inc
inc
inc
inc
inc
add
add
add
add
jbe
jbe
jbe
jbe
mov
stc
stc
add
iret
iret
add
mov
mov
leave
leave
leave
leave
leave
leave
add
add
rol
rol
add
add
add
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmp
cmp
cmp
cmp
cmp
cmp
rcl
rcl
rcl
rcl
rolb
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
mov
mov
mov
add
add
add
mov
add
add
outsl
outsl
outsl
add
test
test
mov
dec
dec
dec
add
add
xor
add
gs
add
add
cmp
cmp
add
sbb
sbb
mov
addl
add
add
xor
xor
xor
xor
xor
adc
adc
adc
je
je
je
add
into
into
into
into
inc
inc
inc
inc
inc
inc
inc
jmp
jmp
jmp
add
push
push
push
push
push
push
push
add
add
jmp
add
add
add
adc
adc
add
add
dec
aas
aas
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
add
add
int
lds
add
sub
add
int
int
int
add
out
out
out
out
out
in
add
popa
popa
popa
popa
popa
popa
popa
popa
add
mov
push
push
add
add
ljmp
add
add
je
pop
pop
pop
pop
test
test
add
add
add
lahf
add
int
stc
stc
stc
adc
adc
adc
adc
add
xchg
xchg
xchg
add
rcl
rcl
rcl
jl
push
push
or
or
or
or
mov
add
add
fs
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
in
in
add
add
add
imul
cld
cld
cld
cld
cld
cld
rolb
add
add
add
add
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
addl
add
sbb
sbb
es
es
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
ret
ret
ret
adc
adc
adc
mov
mov
mov
addr16
add
cmp
cmp
cmp
add
add
mov
add
add
adc
adc
adc
adc
adc
inc
inc
inc
inc
inc
inc
inc
add
or
or
or
or
add
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
and
sub
sub
sub
add
add
add
and
sti
sti
sti
sti
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
sbb
pop
pop
pop
add
add
add
icebp
add
stos
adc
add
pop
pop
ljmp
out
out
out
out
out
out
out
xchg
add
stc
stc
stc
stc
stc
stc
stc
stc
test
daa
daa
daa
daa
daa
daa
pop
pop
pop
pop
mov
mov
mov
mov
mov
mov
add
mov
add
dec
dec
dec
loope
loope
loope
loope
loope
loope
loope
loope
faddl
add
ja
ja
sbb
push
push
add
lret
lret
sbb
sbb
sbb
add
add
add
into
into
into
into
add
add
push
push
push
push
push
fldl
add
add
add
pop
pop
jb
jb
jb
jb
jb
jb
jb
add
or
or
or
add
add
pushf
pushf
pushf
pushf
pushf
pushf
jecxz
jecxz
add
add
add
add
add
dec
gs
outsl
outsl
outsl
push
mov
push
movsl
movsl
add
sbb
adc
add
rolb
add
add
scas
scas
scas
scas
scas
add
sti
sldt
add
add
add
add
mov
jno
jno
add
add
add
add
pop
pop
pop
pop
pop
pop
add
xor
xor
xor
std
std
std
std
add
les
movsb
add
dec
add
add
int
test
add
add
add
out
out
add
add
rcl
das
das
das
das
das
das
add
gs
add
add
pop
pop
pop
pop
add
push
push
push
push
push
push
push
push
add
add
je
je
fidivs
xor
xor
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
je
add
add
test
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
adc
add
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
sub
sub
sub
sub
sub
sub
sub
mov
mov
add
add
testl
mov
mov
mov
add
add
aas
aas
jg
jg
jg
jg
jg
jg
jg
add
or
or
or
or
addr16
add
mov
add
add
sbb
leave
leave
leave
leave
leave
leave
leave
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
imul
add
les
mov
mov
mov
mov
mov
mov
mov
and
and
and
and
stos
stos
stos
stos
cmp
add
add
add
add
xor
xor
xor
hlt
hlt
hlt
add
fs
fs
add
add
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
add
add
add
add
add
add
out
out
out
out
out
out
lock
or
or
pop
pop
int
int
int
int
int
add
pop
pop
es
mov
mov
mov
out
out
out
out
out
out
out
out
out
add
add
out
out
out
out
out
mov
add
out
out
out
out
out
out
add
lret
lret
jg
add
add
xor
xor
add
add
popa
mov
mov
fildl
add
add
pop
pop
pop
pop
add
or
or
or
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
addb
add
addb
add
dec
dec
add
add
add
repnz
sbb
sbb
sbb
xchg
xchg
xchg
adc
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
add
add
or
or
or
or
or
or
cmp
jae
jae
jae
adc
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
xchg
add
add
addb
addb
addb
addb
add
cmp
add
data16
push
push
push
push
add
and
and
and
and
and
add
std
bound
bound
bound
add
add
add
mov
mov
mov
sub
sub
sub
sub
sub
add
add
add
mov
bound
add
add
add
add
inc
inc
inc
inc
inc
add
adc
add
cmpsb
cmpsb
cmpsb
add
adc
add
add
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
es
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
add
insb
insb
insb
insb
insb
insb
insb
insb
insb
add
add
add
adc
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
testb
add
xchg
xchg
lcall
lcall
add
add
add
pop
xor
mov
or
add
int
add
adc
mov
mov
add
add
add
jp
jp
jp
jp
jp
jp
jp
jp
popa
add
sldt
add
add
add
add
add
add
add
fiadds
add
or
or
or
or
mov
add
out
out
out
out
out
out
out
out
out
out
out
add
add
add
jb
jb
jb
jb
jb
add
iret
add
enter
enter
enter
add
or
or
or
or
or
fstp
fstp
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
repnz
add
add
rol
rol
rol
rolb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
add
cmc
add
add
add
add
je
je
or
or
jae
inc
inc
inc
inc
inc
inc
add
add
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
mov
cli
add
add
add
cmp
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
rolb
add
add
add
add
add
addl
jmp
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
pusha
pusha
pusha
pusha
pusha
pusha
add
xor
add
cltd
cltd
cltd
add
pushf
pushf
pushf
pop
pop
pop
pop
pop
pop
pop
pop
pop
jg
lea
add
cmp
add
add
add
xchg
add
add
add
add
mov
nop
nop
nop
nop
nop
add
add
mov
mov
sbb
sbb
add
add
add
imul
add
ret
add
add
in
in
in
in
nop
nop
nop
nop
nop
add
sti
sti
sti
lods
lods
lods
pop
je
je
je
je
je
add
add
outsl
cld
cld
cld
cld
cld
cld
add
mov
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
cmp
cmp
cmp
cmp
add
ds
in
in
in
sub
add
add
add
js
ss
push
push
push
push
or
fcmovnu
fisttpl
dec
dec
mov
mov
rcl
rcl
sarb
arpl
jmp
jmp
jmp
jmp
add
add
push
push
out
out
add
push
add
add
stc
stc
stc
stc
stc
stc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sldt
add
add
add
int
int
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsb
cmpsb
cmpsb
cmpsb
add
add
out
out
out
out
out
out
out
out
out
out
out
out
add
add
add
add
add
add
add
addb
add
lods
add
incb
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
out
out
out
out
push
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
add
jle
jle
jle
loope
loope
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
testl
add
inc
daa
daa
daa
daa
daa
daa
daa
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fadds
add
add
add
sub
sub
lcall
add
add
lret
inc
inc
inc
xchg
xchg
xchg
imul
imul
add
insl
insl
or
or
or
or
add
add
add
xchg
xchg
xchg
xchg
add
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
add
add
rol
add
add
inc
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
dec
dec
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
mov
mov
mov
mov
add
add
repz
add
sub
sub
jnp
jnp
jnp
jnp
jnp
jnp
jnp
inc
inc
inc
inc
inc
inc
add
xor
xor
add
lea
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
add
icebp
icebp
icebp
icebp
icebp
icebp
jo
add
add
add
add
call
imul
imul
add
add
cs
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
mov
mov
sbb
sbb
sbb
sbb
addps
icebp
add
js
xor
add
add
add
add
into
into
into
into
into
ja
mov
mov
pop
pop
pop
and
and
and
and
mov
pop
pop
pop
pop
pop
pop
add
add
add
sub
sub
sub
movsb
movsb
movsb
add
test
add
add
mov
add
jno
jno
mov
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
adc
adc
adc
add
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
mov
mov
mov
jnp
jnp
jnp
lock
and
and
and
incb
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
add
add
add
add
add
mov
mov
add
and
and
and
and
test
daa
daa
daa
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
xor
add
add
add
xchg
xchg
xchg
jbe
jbe
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
gs
pop
pop
iret
sldt
adc
adc
adc
add
add
jl
jl
jl
jl
jl
jl
xor
add
jg
jg
jg
jg
jg
jg
jg
dec
dec
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lcall
lcall
push
push
jb
add
add
add
pushf
add
lret
add
add
add
add
fcomp
fcomp
fcomp
fdivs
jo
jo
jo
jo
add
and
and
and
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
adc
leave
leave
in
in
icebp
icebp
icebp
add
add
ljmp
int3
dec
cmp
push
fs
pop
mov
add
mov
out
inc
pop
scas
sbb
loope
xchg
lods
add
mov
add
push
push
dec
mov
cmp
ret
jecxz
jl
and
add
mov
add
ja
or
xchg
inc
sbb
mov
add
sbb
cmpsl
push
outsb
imul
add
pop
test
enter
add
add
out
mov
ret
imul
add
cltd
add
aaa
repz
add
mov
popa
lret
add
fbstp
jl
int
icebp
mov
mov
add
add
xchg
dec
cld
nop
push
add
pop
jg
movsb
add
and
add
sub
add
je
fistps
sub
and
mov
call
add
inc
push
into
lods
daa
cmp
stos
mov
outsl
mov
int
in
mov
mov
dec
mov
daa
mov
xor
add
xchg
cmp
into
pop
and
stos
je
dec
jb
arpl
pop
scas
jg
add
or
add
hlt
adc
aad
lods
jge
dec
packuswb
add
add
add
cltd
mov
xor
cwtl
or
add
push
mov
mov
push
mov
add
mov
and
add
xchg
xor
xlat
push
lods
or
add
add
sub
mov
add
cltd
push
fsubp
insb
or
sahf
add
xchg
hlt
push
scas
add
xchg
jbe
mov
add
mov
cmp
pop
xor
test
jbe
enter
out
jp
xchg
xor
add
out
cmc
enter
mov
sahf
ljmp
cmp
rcr
sbb
sahf
addb
cmp
cmp
xlat
sub
mov
add
gs
or
jle
add
testl
add
aaa
daa
dec
sbb
dec
jle
addr16
ret
or
add
pop
mov
add
iret
shlb
add
fidivl
addb
imulb
cmpsb
add
lcall
fisttpl
flds
add
dec
cmp
adc
cmp
lock
in
ljmp
lcall
jle
std
and
mov
add
je
or
add
push
add
add
iret
xor
lret
pop
addb
dec
stos
aas
sub
fs
sub
add
insl
cmpsl
insl
shll
jae
add
add
xchg
xchg
or
jmp
add
adc
add
fwait
popf
inc
cld
xor
push
add
add
push
add
ret
add
adc
pop
sbb
xchg
scas
ja
lret
out
testb
add
adc
sbb
xor
cmp
push
addb
xor
and
xor
fsub
xchg
adc
add
test
sbb
lret
xchg
ret
in
sbb
add
jae
lock
xchg
mov
sub
pop
cmp
cmc
fistpll
mov
in
dec
mov
test
add
scas
pushf
sbb
cmp
add
push
test
add
add
or
add
sub
add
add
gs
add
mov
jge
pop
cmpsb
add
rcrb
add
add
mov
ja
dec
out
test
sbb
stc
mov
add
xchg
shlb
cmp
addr16
push
xor
jl
add
lds
dec
inc
cltd
aad
mov
add
jmp
jbe
sub
add
movsl
or
add
add
add
lods
mov
rclb
iret
arpl
cmpsb
add
dec
ljmp
mov
add
loopne
mov
mov
gs
in
push
std
inc
lock
int
xchg
add
push
in
xchg
lcall
addr16
out
imul
mov
add
cwtl
adc
ret
movsb
add
outsl
mov
add
xlat
lret
add
loopne
fucomip
enter
xchg
jne
xor
or
mov
fsub
mov
ret
sub
add
sar
std
out
dec
icebp
xchg
rcl
cmc
mov
add
lea
add
sbb
add
xchg
lcall
jb
xor
rolb
xor
ljmp
add
scas
sub
add
arpl
xor
into
stos
fldl
rorl
fstpl
sahf
xlat
mov
adc
add
pop
sub
subl
inc
lea
lods
mov
add
dec
sbb
jae
sub
add
in
add
insl
lret
pop
sub
add
scas
xchg
jmp
test
xor
mov
xor
add
stos
test
add
fnsave
cmpsb
add
fildll
mov
add
dec
sahf
inc
mov
stc
mov
cli
mov
scas
add
xchg
stos
xchg
lret
add
add
popa
into
jge
fs
data16
xor
sub
add
cltd
pushf
jmp
ret
xor
add
add
mov
add
imul
in
jmp
xor
test
add
rcrb
add
add
xor
or
inc
and
add
cmp
and
add
pop
cmp
call
add
aas
test
add
lret
mov
add
mov
jle
xlat
clc
aam
call
add
cwtl
push
sahf
pop
sub
add
push
xchg
or
cld
mov
mov
add
js
xor
push
pop
sub
rcrb
add
int3
leave
jno
add
testl
insl
cmc
addb
lret
in
pop
mov
dec
add
add
adc
aaa
sbb
cli
in
loope
mov
imul
add
adc
jg
inc
or
xor
nop
in
sbb
test
add
mov
in
popa
in
adc
addb
pop
push
add
aad
inc
cld
xchg
rolb
push
jmp
or
add
add
or
and
aas
rcl
cwtl
adc
add
add
xor
add
push
icebp
imul
mov
test
add
xchg
or
add
push
inc
inc
pop
fistpl
mov
das
xchg
add
popaw
inc
xor
clc
dec
xchg
mov
add
xchg
or
inc
and
int3
mov
dec
das
aad
push
repnz
ficoms
add
sub
add
test
add
dec
das
mulb
sub
add
fs
popf
jae
sub
add
leave
adc
add
into
or
cmp
pusha
je
iret
add
add
daa
mov
add
enter
cmp
jmp
add
add
add
adc
ss
adc
test
ret
call
jnp
add
add
negl
fmull
into
inc
or
add
xchg
inc
imul
or
pop
jg
int3
or
push
or
add
outsb
dec
test
sub
xor
mov
add
mov
push
sub
add
mov
cpuid
add
rep
sub
daa
call
add
add
jmp
jmp
outsl
mov
add
loop
and
mov
loopne
add
nop
or
inc
hlt
sar
add
or
in
stos
sbb
add
stos
add
jbe
mov
mov
xchg
pop
jecxz
add
ds
lods
dec
repz
cmpsb
add
lods
add
xchg
add
rcrb
addr16
add
ja
mov
add
and
fisubs
add
iret
add
xchg
add
mov
stc
jnp
negl
add
add
mov
in
cltd
push
dec
or
mov
add
add
push
dec
pop
cmpl
adc
add
jp
and
iret
mov
add
sti
flds
jge
and
add
or
add
add
jp
add
add
dec
imul
add
pop
xor
hlt
stos
add
cmpsl
aam
repnz
testb
pop
add
add
sub
add
add
pop
imul
in
enter
fsubl
pop
popf
leave
sarl
rorl
mov
inc
xchg
pop
ss
pop
push
getsec
shlb
loop
cmp
repnz
jns
xchg
push
mov
add
insb
iret
push
int
xchg
push
add
xchg
xor
add
push
xchg
xchg
mov
lea
jle
inc
dec
cmp
ret
add
repz
out
lock
mov
iret
addr16
stc
cmp
add
xlat
jl
xchg
lods
and
adc
mov
fnsave
pop
fcomps
cmp
mov
add
daa
je
sarl
add
pop
scas
dec
rol
adc
int3
inc
bound
inc
inc
jl
add
mov
add
inc
sub
add
push
sub
add
add
lods
add
cmpsl
jnp
inc
std
repnz
add
lret
sub
xchg
out
lcall
add
add
fwait
in
push
push
add
test
add
cmpsl
dec
xchg
out
add
mov
mov
add
add
cmc
mov
inc
mov
xchg
jle
insb
and
add
jnp
lock
emms
aam
test
add
and
add
scas
xchg
push
iret
fisttpll
fdivl
insb
fstpl
add
lcall
addr16
rorb
lea
rcrl
jo
push
pop
inc
push
pop
cli
mov
inc
xor
mov
leave
aad
or
add
sbb
jecxz
mov
push
inc
out
loope
int
iret
sbb
aad
mov
mov
add
add
outsb
mov
jo
cld
cmp
scas
js
je
add
int3
mov
cmp
add
mov
push
jp
add
dec
push
into
xchg
imul
ret
rcl
icebp
test
add
stos
add
inc
cmp
pop
sbb
lret
or
add
add
add
in
or
add
in
iret
xchg
clc
dec
and
add
imul
cmc
jmp
add
mov
fwait
add
jmp
push
mov
xchg
cmpsl
and
stos
dec
addr16
push
add
in
lods
imul
mov
jge
add
xchg
jmp
mov
pop
repz
xor
dec
push
cmp
mov
stc
js
pop
and
add
loopne
add
insl
jb
ret
insb
dec
and
add
xor
add
inc
xchg
insb
aam
decb
incl
mov
out
or
mov
aad
pop
inc
gs
add
outsb
adc
add
fdivrs
dec
aaa
adc
aas
sub
std
mov
add
bound
shlb
mov
clc
mov
mov
add
add
inc
ds
jns
and
add
mov
add
mov
out
sub
add
add
imul
add
nop
testl
scas
add
xchg
mov
std
push
dec
sub
add
add
add
xchg
insb
lret
sti
jg
mov
add
arpl
call
sarb
dec
lds
imul
fwait
scas
lods
test
add
jecxz
ljmp
mov
add
subl
dec
mov
je
xchg
add
jne
xchg
xlat
test
add
cmp
imul
add
in
aas
mov
pushf
push
dec
cli
xchg
xchg
adc
xor
add
nop
or
int
clc
in
push
popf
out
in
push
les
adc
add
push
add
addb
xor
adc
add
push
rolb
jbe
lcall
add
add
sti
mov
jle
cmc
test
popf
insl
imulb
scas
outsb
in
loope,pt
or
add
add
mov
add
mov
jecxz
cltd
or
add
add
dec
fisubl
dec
outsb
dec
mov
mov
add
pop
xor
ljmp
outsl
repz
mov
pop
lock
add
add
add
mov
mul
addb
in
inc
fmul
lcall
add
loope
push
push
sbb
mov
cld
divps
aam
cwtl
mov
mov
out
cmc
pop
bound
add
fsubr
xchg
inc
pop
sub
xchg
addb
imul
fisttps
sbb
jle
xchg
loope
add
pop
jbe
ret
add
ret
xor
add
mov
je
sub
add
jmp
add
popa
jecxz
pop
xchg
pop
mov
cmp
add
lds
das
in
pop
icebp
stos
aas
sub
fwait
xor
mov
xchg
pop
lods
add
mov
loopne
in
mov
ds
add
add
lods
add
xchg
ret
jo
add
lods
dec
int3
xchg
icebp
icebp
inc
ret
push
lret
add
inc
rolb
add
sub
add
add
cwtl
mov
add
add
stos
add
faddl
out
daa
rcll
mov
pop
mov
add
jg
pusha
pop
cld
xchg
repnz
ret
enter
in
mov
sbb
nop
add
movsb
add
aaa
xor
int
add
pop
ret
add
jecxz
fsubrs
or
add
ds
ret
push
in
push
add
pop
dec
dec
rcr
push
or
add
jecxz
or
push
movsl
ds
add
dec
enter
mov
cmc
loopne
les
popa
xlat
and
add
scas
add
movsl
adcl
or
jns
inc
sahf
lret
loop
add
add
mov
pop
push
add
jbe
lret
pop
ja
stc
lods
add
clc
mov
add
xchg
pop
shr
xor
dec
in
fsubrs
pop
addr16
int
outsl
je
pop
outsb
mov
rorb
add
adc
adc
test
add
jno
add
test
add
add
mov
adc
add
mov
add
jle
add
lahf
shll
aad
fsubl
and
add
push
testl
jmp
jnp
icebp
pushf
push
add
pop
xchg
fidivrl
adc
ja
mov
mov
add
add
add
mov
add
add
adc
mov
insb
add
push
ljmp
icebp
cmpsb
add
sub
add
mov
insl
pop
repnz
bts
mov
mov
jns
push
add
addb
ljmp
daa
add
jno
out
mov
add
call
mov
adc
call
add
dec
xchg
mov
scas
jle
xor
fbld
add
jno
add
add
add
or
add
mov
test
sbb
movsl
push
push
mov
pop
pop
roll
in
out
ja
dec
in
int
sub
add
jg
xchg
mov
add
jae
add
movups
jmp
xchg
roll
cmp
add
pop
mov
fadds
add
mov
pop
dec
mov
add
and
push
xor
out
aas
ret
add
mov
add
icebp
jb
mov
add
jno
cmp
lfs
ret
lcall
add
jns
test
add
add
fnsave
lahf
mov
clc
sub
pushf
xchg
push
mov
xorl
add
inc
or
ss
add
call
popf
jno
test
and
stos
add
les
push
clc
aas
fs
pusha
xor
push
mov
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
notrack
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
jmp
push
mov
jmp
mov
pusha
lret
cmp
jbe
ja
jmp
sub
jne
ljmp
fistpl
add
je
divl
lret
js
sub
add
cmp
repnz
fsts
dec
aam
xchg
add
cmp
add
cmp
pop
pop
mov
ss
adc
je
stos
add
mov
dec
push
lods
mov
mov
call
mov
call
movsl
into
repz
add
js
clc
gs
shll
sbb
shr
mov
xor
dec
push
shlb
fstl
mov
dec
jmp
push
in
xchg
add
insl
mov
jp
cld
into
mov
add
mov
aaa
jg
push
or
add
jp
movsl
push
push
and
add
pop
and
add
insb
arpl
or
add
aad
push
sbb
rcrl
add
std
aad
cmpsb
add
stos
mov
mov
mov
pushf
xchg
add
lahf
subl
push
mov
sahf
mov
add
or
mov
dec
not
out
leave
pushf
jg
fsubs
add
add
add
mov
add
jge
xor
add
add
and
jge
sbb
scas
add
call
add
add
test
add
mov
lret
mov
lret
jmp
sub
add
cmp
sbb
rclb
jp
fucomip
lods
add
pop
test
add
mov
add
pop
data16
mov
add
sbb
mov
imulb
add
adc
mov
add
sbb
lret
add
add
add
in
push
enter
loopne
cmp
push
push
lcall
cmp
mov
add
adc
inc
fs
mov
pop
test
into
fisubrl
add
les
sub
add
and
jecxz
jl
dec
lock
jg
repz
add
sbb
add
shl
aaa
imul
dec
push
sbb
out
rclb
sub
add
jmp
add
sar
pushf
push
add
mov
jbe
pop
mov
jmp
xchg
in
test
add
jmp
loop
add
jbe
int3
add
dec
mov
jmp
dec
and
mov
add
pop
mov
push
and
add
sbb
andl
and
push
outsl
ja
stc
jmp
jmp
loopne
and
sub
push
xor
adc
add
add
inc
xchg
out
or
add
add
inc
xor
add
jns
rorb
add
push
cmpsb
add
jo
call
add
ror
xchg
popa
mov
adc
call
add
sbb
ljmp
shrb
add
pusha
fcompl
xchg
stc
sbb
rcll
xor
sub
fisttpll
xor
addb
sub
and
push
call
out
inc
out
fs
in
add
mov
inc
and
add
xchg
mov
sub
add
js
xor
fists
push
xchg
and
add
scas
add
mov
inc
std
into
or
add
fimuls
out
cmp
xchg
add
xchg
aad
adc
imull
xor
rclb
flds
imul
daa
mov
mov
add
test
add
add
mov
pushf
jg
mov
sub
add
add
fsub
adc
add
cmc
movsl
jae
lret
out
xchg
scas
les
mov
je
add
lret
stc
cli
in
mov
ds
int3
popf
aas
sub
lds
add
jge
and
add
fbld
pop
lcall
mov
add
or
jne
add
lret
xchg
push
push
cwtl
neg
rcrb
cmp
mov
adc
jo
dec
push
xchg
or
add
cmp
mov
in
add
sbb
jle
in
mulb
xchg
shl
sbb
fimuls
add
add
pop
imul
into
mov
add
add
sbb
lret
push
lret
sbb
jb
add
mov
add
mov
aam
lret
dec
dec
dec
xchg
cmp
jmp
add
lret
out
idivb
scas
xor
sbb
add
addb
aas
ds
add
mov
dec
gs
in
sub
add
add
inc
mov
bound
sbb
add
out
add
add
fidivrl
xchg
aam
sbb
jmp
add
xchg
jne
add
rcrl
add
popl
cwtl
lods
add
aaa
sub
add
add
sub
add
sahf
mov
adc
add
scas
add
popf
sahf
add
add
inc
mov
mov
add
xlat
aad
insb
addr16
enter
shll
jge
adc
add
jle
movl
arpl
cmp
cmp
negb
nop
adc
cmp
cmp
inc
in
mov
daa
movsb
add
fidivrs
add
ljmp
jnp
add
and
add
add
inc
enter
jl
and
push
jnp
xor
ljmp
push
dec
mov
xchg
add
cmpsl
roll
inc
ret
xor
scas
jmp
inc
stos
add
mov
lcall
lods
and
xchg
add
jne
mov
ss
in
lds
jo
add
add
ljmp
and
loop
outsb
adc
lret
add
test
add
fmuls
add
add
add
mov
adc
add
lahf
les
add
or
add
add
add
hlt
push
cmp
mov
add
pop
and
add
add
add
sub
bound
and
add
out
jne
add
pop
enter
icebp
imul
and
add
pop
sub
sub
aam
dec
cltd
mov
add
outsl
xor
outsl
sbb
add
push
rolb
dec
in
test
jbe
push
repz
fisubl
ret
mov
addb
inc
bswap
mov
roll
loop
fstpt
xor
adc
inc
pop
push
cmp
inc
pop
cli
dec
adc
negb
incl
cmp
pusha
outsl
pop
jno
je
jnp
sub
add
add
xchg
add
mov
aas
out
enter
add
add
add
adc
xchg
ret
cmpsl
sub
dec
scas
add
pop
or
fwait
mov
xchg
xor
and
fldt
jae
push
lcall
mov
add
cmp
sarb
add
ljmp
add
add
push
sar
pushf
hlt
mov
jl
xorl
add
imul
and
jecxz
cmc
jle
loopne
loopne
mov
mov
add
aad
or
dec
inc
mov
add
add
inc
xor
cld
aam
jp
sti
add
sbb
insb
cld
movsl
mov
scas
add
shll
add
add
fwait
divb
dec
pop
fwait
je
mov
test
add
xchg
sbb
add
clc
je
and
add
xchg
repnz
mov
cmpsl
sbbl
add
dec
icebp
push
lea
jne
jnp
add
mov
add
dec
out
pop
sub
test
inc
lret
ja
add
mov
add
add
inc
jne
cmp
sub
cld
cwtl
mov
sub
add
add
outsl
jl
cld
jno
sbb
popa
jns
jb
ds
and
add
lods
add
lret
or
add
push
scas
sbb
mov
add
mov
add
addr16
lock
lea
shl
sbb
mov
das
movsl
or
add
dec
andl
or
mov
add
inc
sahf
push
inc
into
cmpsb
add
xor
outsl
movsl
mov
iret
test
add
add
add
adc
lock
jns
aaa
pop
shrb
add
mov
add
sbb
pop
in
sub
and
add
push
and
mov
sub
movsb
add
ja
add
xchg
insb
lret
loopne
sbb
cmp
pop
and
add
pop
jecxz
imul
add
sub
call
xchg
add
or
testb
add
lods
aas
cmpl
add
insb
popf
xchg
add
add
loopne
fbstp
add
sub
jne
cmp
xchg
pop
mov
add
mov
add
push
lret
fbld
enter
jb
jbe
push
cmp
jp
sub
cmc
mov
mov
das
cmpsl
mov
dec
popl
push
add
push
scas
mov
add
test
mov
nop
mov
add
pop
cmp
fcoms
ja
aaa
or
add
xchg
jge
out
test
add
out
add
pop
daa
les
add
add
add
daa
lods
gs
std
shlb
inc
ljmp
push
les
inc
std
incl
push
cwtl
jns
lcall
out
jae
xchg
testl
iret
fidivs
push
dec
push
adc
xchg
cltd
test
add
idivb
mov
dec
xchg
int3
jmp
add
fistpl
add
fistl
add
pusha
and
lods
shll
push
inc
ds
ljmp
add
call
ficomps
cltd
sbb
mov
add
loopne
in
jbe
repnz
xchg
and
add
insl
xchg
mov
mov
nop
push
adc
cmp
add
loopne
adcl
jg
divl
add
mov
notl
sbb
mov
add
mov
hlt
cltd
je
shl
xchg
push
daa
dec
adcl
lods
mov
leave
push
xor
add
add
dec
jle
mov
outsb
or
add
add
addl
dec
imul
pop
cwtl
lret
jb
add
mov
std
fisttps
mov
das
inc
daa
pop
sub
add
and
das
cmp
out
or
add
pushf
sbb
dec
push
adc
das
pop
xchg
add
sahf
cld
mov
add
andl
out
xchg
ja
add
inc
pop
sahf
xchg
xchg
test
add
xor
or
add
push
not
addb
hlt
jle
jmp
cltd
mov
int3
scas
add
clc
sub
add
imul
add
add
mov
add
mov
add
je
rcr
mov
nop
push
add
mov
adc
pop
sub
add
enter
stos
add
xchg
pop
pop
lds
sbb
into
cld
out
sahf
mov
icebp
adc
arpl
xchg
inc
and
add
add
incb
add
je
clc
loope
or
add
shr
pushf
mov
add
int3
loope
pusha
jb
or
sbb
ds
aam
gs
aaa
repz
mov
pop
add
inc
sarb
xchg
add
cltd
imul
add
xlat
xchg
add
mov
rclb
cmp
jp
fiaddl
pop
jge
jns
and
jmp
add
hlt
add
add
mov
popa
push
mov
cwtl
sub
push
cmp
in
pop
xor
cmp
iret
pop
push
pop
in
ret
mov
xchg
addb
or
add
push
cltd
cmc
sarb
xor
mov
xlat
pop
filds
movsb
add
xchg
fld
out
negb
sub
add
fisttps
add
insb
out
add
mov
add
daa
lret
adc
dec
rcr
push
push
mov
add
push
add
or
xchg
add
addb
addb
cmpsb
add
cwtl
and
add
add
sbb
mov
xor
add
fcomp
call
call
xchg
in
adc
jns
add
jp
cmc
mov
sbb
lret
in
inc
aaa
mov
or
mov
or
sbb
add
push
jmp
std
sbb
add
cmp
push
mov
add
adc
xchg
push
and
xor
jg
add
arpl
or
add
add
mov
in
pop
jmp
add
mov
ds
lcall
dec
xchg
adc
fstp
stc
mov
int
add
cmp
repnz
add
mov
mov
dec
rol
je
xchg
addb
sbb
add
imull
shlb
add
mov
into
out
push
cmp
mov
add
popa
sub
add
push
pop
loope
insl
insb
repnz
push
add
and
add
sbb
add
xchg
dec
cltd
jb
add
int
mov
mov
xchg
add
hlt
data16
sbb
dec
jns
mov
add
xchg
or
inc
mov
mov
add
pop
lds
cmp
imul
add
push
add
aam
out
adc
add
fsubs
add
mov
sahf
cltd
or
sti
push
popa
fdivrs
cmpsl
add
aad
jl
aas
dec
clc
outsl
lds
add
sbb
mov
test
call
bound
mov
add
int3
add
add
or
jae
mov
xor
rcrl
jecxz
jl
testl
mov
leave
push
arpl
or
add
sbb
stos
into
and
xor
add
jecxz
add
add
inc
dec
xchg
ret
sahf
dec
and
add
add
call
lods
mov
add
inc
fs
test
add
add
push
xor
dec
int
jge
inc
aas
jecxz
add
push
js
scas
add
out
fbstp
test
add
or
dec
add
leave
das
mov
popa
loope
mov
sub
xchg
push
inc
and
jg
jno
mov
lcall
mov
data16
add
loopne
jmp
add
add
xchg
mov
add
aaa
mov
aam
cwtl
xchg
mov
xchg
dec
scas
add
cltd
faddp
push
clc
repnz
nop
nop
jae
or
sub
clc
repnz
nop
nop
jae
adc
or
sub
add
repnz
nop
nop
jae
repnz
xorps
xchg
ret
fsub
mov
add
inc
and
clc
repnz
nop
nop
jae
add
pop
push
mov
xchg
ret
call
adc
jl
push
push
mov
xchg
ret
add
push
add
icebp
lret
adc
mov
xchg
ret
scas
add
fwait
xor
add
decb
add
nop
push
mov
leave
nop
jmp
mov
stc
add
add
add
push
clc
repnz
nop
nop
jae
add
add
add
icebp
out
push
pusha
cmp
cld
nop
nop
jae
xor
call
jmp
add
lret
sti
adc
sti
add
dec
mov
push
mov
xchg
ret
adc
or
add
and
clc
repnz
nop
nop
jae
loope
add
adc
repnz
nop
nop
jae
add
pop
scas
add
xor
notl
nop
jmp
add
add
clc
repnz
nop
nop
jae
add
arpl
add
faddl
push
add
int
inc
adc
repnz
nop
nop
jae
add
aad
repz
repnz
nop
nop
jae
mov
add
mov
clc
repnz
nop
nop
jae
push
add
add
xchg
clc
repnz
nop
nop
jae
push
fmull
add
scas
loope
push
push
mov
xchg
ret
add
or
pop
add
test
add
clc
repnz
nop
nop
jae
faddl
add
jmp
add
add
add
gs
add
mov
jmp
add
fcompl
or
adc
icebp
pop
scas
mov
pop
nop
push
mov
leave
nop
jmp
rolb
add
add
adc
cld
nop
nop
jae
jl
repnz
outsb
mov
push
push
mov
xchg
ret
add
mov
stc
adc
add
nop
jmp
repnz
jmp
add
clc
repnz
nop
nop
jae
add
pop
add
arpl
fimull
mov
push
mov
xchg
ret
adc
add
pop
arpl
add
clc
repnz
nop
nop
jae
or
add
push
pop
inc
mov
push
mov
xchg
ret
add
dec
and
insl
inc
add
add
shl
add
enter
nop
nop
jae
add
push
sbb
add
xchg
nop
push
mov
leave
nop
jmp
add
push
addb
dec
jnp
nop
push
mov
leave
nop
jmp
enter
fmull
mov
rcr
push
mov
xchg
ret
stc
adc
add
and
add
jbe
push
mov
xchg
ret
add
jl
push
loope
fs
mov
clc
repnz
nop
nop
jae
repnz
repnz
nop
nop
jae
xchg
add
mov
add
jl
shl
clc
repnz
nop
nop
jae
add
mov
add
clc
repnz
nop
nop
jae
arpl
pop
push
fsubrl
leave
sub
repnz
nop
nop
jae
mov
add
dec
push
add
call
inc
xor
add
add
mov
pushl
clc
repnz
nop
nop
jae
add
fadd
stc
jns
pop
call
nop
jmp
fsub
loope
mov
clc
repnz
nop
nop
jae
add
pop
jl
cmp
mov
xchg
ret
add
or
jmp
mov
push
mov
xchg
ret
scas
mov
add
mov
clc
repnz
nop
nop
jae
add
dec
aad
clc
repnz
nop
nop
jae
push
pop
add
add
mov
xor
clc
repnz
nop
nop
jae
add
adc
pop
lods
mov
nop
nop
jae
stc
das
lods
add
repnz
pop
clc
repnz
nop
nop
jae
add
add
pop
cld
dec
idivl
nop
push
mov
leave
nop
jmp
add
add
daa
xor
nop
push
mov
leave
nop
jmp
add
add
mov
add
nop
jmp
or
lret
add
add
push
mov
xchg
ret
stc
mov
lods
outsl
xor
clc
repnz
nop
nop
jae
fcompl
lahf
loope
adc
add
out
jns
add
or
adc
or
repnz
nop
nop
jae
scas
icebp
mov
or
add
nop
jmp
add
clc
repnz
nop
nop
jae
add
add
fwait
add
pop
push
push
mov
xchg
ret
add
das
add
call
add
jno
clc
repnz
nop
nop
jae
add
sti
mov
mov
clc
repnz
nop
nop
jae
push
repnz
fdivr
icebp
addb
das
push
push
mov
xchg
ret
faddl
add
or
add
push
into
addb
cld
push
aaa
push
mov
add
mov
add
mov
jne
cmpl
test
add
pop
push
mov
xchg
ret
add
xor
add
add
add
cld
clc
repnz
nop
nop
jae
or
mov
nop
push
mov
leave
nop
jmp
add
add
push
nop
push
mov
leave
nop
jmp
fsubl
adc
push
movsl
shr
nop
push
mov
leave
nop
jmp
push
mov
add
mov
ret
sbb
leave
nop
jmp
das
add
arpl
add
sbb
test
add
nop
push
mov
leave
nop
jmp
add
adc
ret
rclb
jmp
add
push
add
out
stos
add
fcoml
push
push
mov
xchg
ret
add
mov
loope
imul
and
mov
xchg
ret
add
faddl
sti
icebp
inc
pop
je
clc
repnz
nop
nop
jae
sbb
pop
mov
and
push
mov
leave
nop
jmp
add
jo
add
test
add
mov
clc
repnz
nop
nop
jae
add
mov
jmp
jne
nop
push
mov
leave
nop
jmp
fadd
pop
es
mov
add
clc
repnz
nop
nop
jae
add
add
addb
ret
pop
fistpl
push
mov
xchg
ret
add
add
lret
lret
sub
clc
repnz
nop
nop
jae
add
mov
rep
clc
repnz
nop
nop
jae
rolb
dec
add
add
dec
mov
push
mov
xchg
ret
loope
adc
add
push
rcr
out
push
mov
xchg
ret
sbb
add
repnz
add
roll
mov
xchg
ret
stc
add
sbb
repnz
sbb
add
daa
lea
jecxz
mov
add
jnp
add
repnz
nop
nop
jae
add
add
nop
nop
jae
dec
adc
push
filds
inc
and
repnz
nop
nop
jae
pop
outsb
xchg
add
nop
push
mov
leave
nop
jmp
pop
das
mov
push
push
clc
repnz
nop
nop
jae
add
add
loope
call
clc
repnz
nop
nop
jae
dec
add
das
push
dec
xchg
add
enter
adc
mov
nop
push
mov
leave
nop
jmp
fcompl
pop
jl
add
add
cmpl
jae
das
jmp
scas
add
orl
xchg
ret
mov
add
and
clc
repnz
nop
nop
jae
out
add
lods
mov
test
add
clc
repnz
nop
nop
jae
dec
push
sti
fmulp
mov
add
push
push
mov
xchg
ret
add
faddl
push
mov
sbb
push
mov
xchg
ret
rolb
out
add
mov
mov
xchg
ret
add
gs
add
fwait
clc
repnz
nop
nop
jae
add
lret
pop
add
add
aam
push
push
mov
xchg
ret
enter
das
sti
add
pop
inc
stos
clc
repnz
nop
nop
jae
scas
add
mov
loope
pop
sbb
repnz
nop
nop
jae
dec
scas
mov
lods
insb
mov
nop
nop
jae
xchg
loope
add
add
fdivl
dec
cmp
push
mov
leave
nop
jmp
add
lods
roll
bnd
push
push
mov
xchg
ret
fcompl
adc
add
add
inc
jb
pop
add
push
mov
xchg
ret
add
loope
add
add
lea
nop
push
mov
leave
nop
jmp
add
add
add
push
adc
push
mov
leave
nop
jmp
arpl
xor
lods
add
cli
shl
es
clc
repnz
nop
nop
jae
push
add
imul
cmc
mov
clc
repnz
nop
nop
jae
mov
add
or
clc
repnz
nop
nop
jae
dec
or
mov
fadd
movzwl
clc
repnz
nop
nop
jae
pop
add
outsb
xchg
repz
nop
push
mov
leave
nop
jmp
loope
mov
rep
clc
repnz
nop
nop
jae
scas
mov
add
mov
or
add
mov
aas
fld1
clc
repnz
nop
nop
jae
mov
add
sub
add
mov
clc
repnz
nop
nop
jae
add
add
nop
push
mov
leave
nop
jmp
or
pop
add
cld
push
inc
sbb
repnz
nop
nop
jae
add
mov
imul
clc
repnz
nop
nop
jae
add
add
add
fmull
mov
nop
push
mov
leave
nop
jmp
pop
add
mov
fidivrl
pop
inc
add
add
add
add
add
movsl
pop
clc
repnz
nop
nop
jae
add
fwait
mov
mov
sar
repnz
nop
nop
jae
add
add
add
adc
add
add
divb
out
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
lret
stc
mov
dec
cmp
repnz
nop
nop
jae
enter
jmp
int3
iret
mov
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
add
push
add
dec
sub
repnz
nop
nop
jae
dec
add
lds
pop
add
clc
repnz
nop
nop
jae
add
imul
fdivrl
mov
clc
repnz
nop
nop
jae
pop
icebp
add
call
lret
clc
repnz
nop
nop
jae
adc
lret
mov
add
add
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
add
stc
js
add
imul
jb
nop
push
mov
leave
nop
jmp
add
lods
and
imul
cld
nop
nop
jae
lods
lahf
add
testl
xchg
ret
add
add
add
or
clc
repnz
nop
nop
jae
add
stc
add
add
cmpsl
add
nop
push
mov
leave
nop
jmp
pop
sar
fcompl
inc
or
jno
inc
add
faddl
add
add
mov
add
pop
call
clc
repnz
nop
nop
jae
rclb
test
add
fwait
push
mov
xchg
ret
push
loope
mov
arpl
movb
mov
leave
nop
jmp
add
add
add
fwait
push
mov
xchg
ret
or
add
add
add
add
stos
push
mov
xchg
ret
add
add
push
nop
and
jmp
cmp
ret
mov
add
mov
xchg
test
movsl
clc
repnz
nop
nop
jae
add
push
in
add
add
add
mov
add
mov
loope
add
mov
add
xor
clc
repnz
nop
nop
jae
dec
adc
dec
add
pop
cli
sbb
rolb
repnz
nop
nop
jae
push
jl
gs
mov
add
clc
repnz
nop
nop
jae
rcrl
push
pop
push
mov
xchg
ret
jmp
mov
add
add
cltd
cld
push
mov
xchg
ret
add
add
cli
sub
nop
jae
loope
out
dec
add
jmp
fld1
clc
repnz
nop
nop
jae
call
add
sub
sbb
cmp
ret
mov
imul
pop
push
mov
xchg
ret
lahf
faddl
lds
xchg
sbb
nop
nop
jae
adc
sti
faddl
add
dec
pop
add
clc
repnz
nop
nop
jae
add
mov
or
clc
repnz
nop
nop
jae
das
add
mov
test
repnz
nop
nop
jae
pop
add
mov
add
clc
repnz
nop
nop
jae
add
add
add
xchg
pushl
push
mov
xchg
ret
add
add
add
call
clc
repnz
nop
nop
jae
faddl
loope
call
clc
repnz
nop
nop
jae
sti
sbb
lret
push
clc
repnz
nop
nop
jae
add
adc
dec
cld
pop
add
clc
repnz
nop
nop
jae
add
add
scas
adc
mov
test
clc
repnz
nop
nop
jae
dec
pop
xchg
clc
repnz
nop
nop
jae
add
or
push
and
sbb
pop
add
add
add
clc
repnz
nop
nop
jae
fdivrl
add
pop
lahf
push
clc
repnz
nop
nop
jae
add
add
add
adc
repnz
nop
nop
jae
fmull
lret
mov
xchg
push
mov
xchg
ret
fdivrl
ror
push
clc
repnz
nop
nop
jae
add
add
enter
xchg
daa
div
clc
repnz
nop
nop
jae
add
add
lahf
add
cmp
cld
nop
nop
jae
lds
faddl
mov
mov
add
ret
pause
push
mov
leave
nop
jmp
pop
fsubrl
pop
mov
add
add
nop
jmp
lds
scas
dec
xchg
clc
repnz
nop
nop
jae
imul
mov
add
dec
fwait
clc
repnz
nop
nop
jae
add
add
faddl
dec
ret
mov
push
mov
xchg
ret
scas
add
add
loope
add
cld
nop
nop
jae
fcoml
add
add
faddl
add
nop
push
mov
leave
nop
jmp
add
or
add
fistpl
clc
repnz
nop
nop
jae
inc
add
add
adc
repnz
nop
nop
jae
add
add
adc
cld
ss
add
push
repnz
nop
nop
jae
mov
mov
clc
repnz
nop
nop
jae
mov
add
adc
sti
push
mov
xchg
ret
mov
add
int
pop
jae
repnz
nop
nop
jae
outsb
add
inc
push
movzwl
clc
repnz
nop
nop
jae
add
adc
sar
cld
nop
nop
jae
call
or
xchg
fwait
push
mov
xchg
ret
stc
scas
add
add
adc
sbb
clc
repnz
nop
nop
jae
call
lret
push
mov
xchg
ret
mov
add
mov
xbegin
jae
outsb
add
gs
add
je
clc
repnz
nop
nop
jae
add
add
mov
adc
repnz
nop
nop
jae
add
lret
inc
mov
clc
repnz
nop
nop
jae
add
faddl
in
xchg
add
clc
repnz
nop
nop
jae
fwait
dec
add
add
out
push
clc
repnz
nop
nop
jae
mov
add
dec
sarb
mov
xchg
ret
fwait
add
dec
add
xor
fimuls
nop
nop
jae
xor
inc
add
add
jg
clc
clc
repnz
nop
nop
jae
loope
add
lahf
add
das
call
clc
repnz
nop
nop
jae
loope
loope
add
popf
push
push
mov
xchg
ret
sbb
rolb
xlat
mov
clc
repnz
nop
nop
jae
add
mov
gs
aam
add
in
in
push
mov
xchg
ret
or
add
fcompl
fwait
int
push
mov
xchg
ret
push
add
add
add
dec
addl
add
add
add
or
mov
nop
push
mov
leave
nop
jmp
add
add
pop
nop
push
mov
leave
nop
jmp
pop
add
add
lds
push
mov
leave
nop
jmp
add
add
add
add
out
add
outsl
fwait
push
mov
xchg
ret
dec
add
add
mov
mov
popa
jmp
clc
repnz
nop
nop
jae
add
inc
xchg
sti
adc
je
nop
push
mov
leave
nop
jmp
add
lds
add
addr16
push
mov
xchg
ret
lahf
add
pop
dec
scas
add
test
repnz
nop
nop
jae
add
add
cmp
xchg
pusha
nop
push
mov
leave
nop
jmp
inc
loope
sbb
outsl
push
clc
repnz
nop
nop
jae
fwait
add
add
sbb
pop
push
mov
xchg
ret
add
pop
out
test
clc
repnz
nop
nop
jae
pop
add
shr
mov
push
mov
xchg
ret
add
add
sti
add
out
jecxz
or
repnz
nop
nop
jae
or
rcrb
push
mov
xchg
ret
add
add
das
fnstcw
clc
repnz
nop
nop
jae
dec
add
add
sbb
xor
nop
push
mov
leave
nop
jmp
add
fsubrl
add
lea
jbe
nop
push
mov
leave
nop
jmp
add
add
lods
add
jp
pop
clc
repnz
nop
nop
jae
call
add
add
pop
push
mov
xchg
ret
lret
inc
add
rolb
xorl
clc
repnz
nop
nop
jae
push
mov
push
mov
xchg
ret
add
pop
add
div
nop
push
mov
leave
nop
jmp
add
add
adc
sub
add
fld1
clc
repnz
nop
nop
jae
inc
add
add
add
mov
clc
repnz
nop
nop
jae
pop
add
fwait
xor
mov
clc
repnz
nop
nop
jae
add
add
add
and
stc
add
nop
jmp
mov
dec
add
les
add
xchg
push
push
mov
xchg
ret
pop
or
jl
lret
test
addl
cmp
ret
fsubrl
pop
add
add
mov
into
stc
pop
clc
repnz
nop
nop
jae
repnz
dec
scas
dec
add
xchg
call
clc
repnz
nop
nop
jae
add
pop
clc
repnz
nop
nop
jae
add
add
add
add
add
add
jl
ljmp
jmp
cld
nop
nop
jae
add
dec
faddl
mov
or
push
mov
leave
nop
jmp
push
add
add
stc
xchg
pusha
clc
repnz
nop
nop
jae
add
push
add
xchg
add
cltd
shl
nop
push
mov
leave
nop
jmp
add
add
jmp
sbb
nop
nop
jae
add
add
add
add
outsl
add
push
mov
xchg
ret
mov
add
mov
repnz
nop
nop
jae
icebp
dec
add
add
inc
sub
repnz
nop
nop
jae
add
xchg
xor
add
mov
jmp
outsb
inc
add
mov
add
add
das
xchg
lock
mov
leave
nop
jmp
add
sbb
add
xchg
add
clc
repnz
nop
nop
jae
add
roll
add
cmpl
nop
push
mov
leave
nop
jmp
mov
dec
arpl
push
mov
movsb
mov
clc
add
add
das
add
aad
call
nop
push
mov
leave
nop
jmp
add
fsub
or
mov
leave
nop
jmp
add
xor
icebp
fmull
jne
clc
repnz
nop
nop
jae
adc
xor
xchg
inc
pop
clc
repnz
nop
nop
jae
dec
loope
add
add
popf
push
nop
push
mov
leave
nop
jmp
pop
mov
enter
andl
nop
nop
jae
jl
mov
icebp
push
clc
repnz
nop
nop
jae
add
add
add
fcompl
jl
fisttpll
push
and
add
add
adc
add
mov
clc
repnz
nop
nop
jae
lret
loope
adc
imulb
cld
nop
nop
jae
mov
add
or
add
clc
repnz
nop
nop
jae
fsub
add
fwait
sti
test
nop
push
mov
leave
nop
jmp
mov
add
add
lods
push
push
mov
xchg
ret
fdivr
add
add
add
mov
xchg
ret
mov
sbb
push
stc
add
push
nop
push
mov
leave
nop
jmp
add
lahf
add
pop
fcoml
add
nop
push
mov
leave
nop
jmp
mov
arpl
clc
repnz
nop
nop
jae
call
loop
push
mov
xchg
ret
sbb
imul
add
push
and
push
pop
int3
scas
add
insb
pop
pop
lock
or
cld
nop
nop
jae
xchg
add
add
gs
clc
repnz
nop
nop
jae
add
repnz
add
loop
add
adc
pop
add
add
push
clc
repnz
nop
nop
jae
or
loope
add
add
add
cld
nop
nop
jae
pop
add
faddl
add
mov
mov
clc
repnz
nop
nop
jae
add
add
arpl
dec
jle
add
push
mov
xchg
ret
add
stc
pop
add
aaa
mov
clc
repnz
nop
nop
jae
loope
dec
add
rorb
add
push
push
mov
xchg
ret
dec
add
dec
add
xor
mov
nop
nop
jae
mov
inc
add
mov
push
mov
leave
nop
jmp
mov
pop
jle
fwait
nop
push
mov
leave
nop
jmp
repnz
mov
loope
or
cmp
push
push
add
add
repnz
nop
nop
jae
sbb
pop
clc
repnz
nop
nop
jae
add
dec
mov
add
add
adc
or
clc
repnz
nop
nop
jae
out
add
cmp
push
mov
leave
nop
jmp
lahf
outsb
fwait
inc
mov
repnz
nop
nop
jae
mov
add
push
add
gs
mov
jp
stos
xchg
add
scas
add
add
mov
sub
iret
test
nop
push
mov
leave
nop
jmp
add
add
add
aaa
mov
nop
push
mov
leave
nop
jmp
inc
jmp
add
sbb
fwait
clc
repnz
nop
nop
jae
inc
add
add
add
pushf
pop
add
clc
repnz
nop
nop
jae
imul
add
loope
dec
pop
clc
repnz
nop
nop
jae
add
imul
rep
nop
push
mov
leave
nop
jmp
pop
add
add
out
nop
push
mov
leave
nop
jmp
add
add
add
add
push
mov
xchg
ret
add
push
add
add
lods
add
loop
push
clc
repnz
nop
nop
jae
add
add
add
cwtl
and
add
and
clc
repnz
nop
nop
jae
faddl
add
add
pop
lea
clc
repnz
nop
nop
jae
sti
add
test
mov
leave
nop
jmp
add
dec
repnz
and
add
jmp
add
add
add
mov
xor
cmpw
clc
repnz
nop
nop
jae
add
jmp
in
leave
nop
jmp
lahf
pop
add
add
mov
add
xor
clc
repnz
nop
nop
jae
mov
outsb
adc
add
add
add
add
cmp
pusha
push
mov
xchg
ret
add
push
fwait
add
add
pushf
pushf
and
add
sar
repnz
nop
nop
jae
add
push
loope
scas
loope
push
pop
dec
nop
push
mov
leave
nop
jmp
add
stc
add
arpl
bound
clc
repnz
nop
nop
jae
add
fmull
mov
nop
push
mov
leave
nop
jmp
mov
add
add
push
add
push
mov
xchg
ret
mov
pop
or
add
adc
push
nop
push
mov
leave
nop
jmp
imul
add
scas
sbb
push
mov
xchg
ret
add
add
add
dec
push
jle
popl
clc
repnz
nop
nop
jae
add
adc
add
pop
mov
push
mov
xchg
ret
adc
pop
adc
arpl
int3
mov
mov
xchg
ret
pop
repnz
inc
faddl
xor
cld
nop
nop
jae
add
add
or
lret
xchg
in
mov
xor
add
xchg
add
mov
clc
repnz
nop
nop
jae
pop
xchg
add
in
clc
repnz
nop
nop
jae
push
add
gs
out
mov
mov
add
scas
add
add
jmp
add
add
movzwl
clc
repnz
nop
nop
jae
xor
add
or
nop
jae
fdiv
add
add
mov
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
nop
jae
arpl
imul
inc
in
mov
clc
repnz
nop
nop
jae
dec
add
repnz
nop
nop
jae
add
push
add
dec
pop
fwait
clc
repnz
nop
nop
jae
add
jmp
add
lods
dec
stos
add
dec
cmp
nop
push
mov
leave
nop
jmp
loope
add
mov
add
repnz
nop
nop
jae
add
mov
inc
push
clc
repnz
nop
nop
jae
add
loope
add
adc
iret
add
nop
push
mov
leave
nop
jmp
add
scas
mov
test
clc
repnz
nop
nop
jae
push
add
jmp
je
sub
jbe
inc
add
add
add
repnz
nop
nop
jae
push
add
add
icebp
add
arpl
add
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
add
add
sti
movzwl
clc
repnz
nop
nop
jae
add
add
pop
jl
clc
repnz
nop
nop
jae
inc
add
xor
and
push
mov
xchg
ret
add
add
add
gs
jl
add
test
clc
repnz
nop
nop
jae
push
add
add
ret
clc
repnz
nop
nop
jae
sbb
xor
lret
add
push
mov
leave
nop
jmp
add
add
icebp
lods
in
add
clc
repnz
nop
nop
jae
add
add
jge
nop
push
mov
leave
nop
jmp
mov
loope
inc
add
jbe
clc
repnz
nop
nop
jae
loope
enter
ss
add
clc
repnz
nop
nop
jae
add
add
scas
shrl
nop
push
mov
leave
nop
jmp
add
add
add
fwait
cld
nop
nop
jae
add
mov
fmull
pop
push
mov
xchg
ret
add
fmull
jle
add
mov
push
inc
add
push
rol
add
inc
and
repnz
nop
nop
jae
lods
arpl
lds
mov
call
nop
jae
push
add
es
fists
nop
jmp
dec
mov
lret
sbb
nop
push
mov
leave
nop
jmp
pop
enter
pop
les
jne
clc
repnz
nop
nop
jae
pop
faddl
popa
add
push
mov
xchg
ret
mov
call
add
mov
xchg
ret
roll
fdiv
jo
push
push
mov
xchg
ret
add
stc
pop
bound
repnz
nop
nop
jae
add
enter
lea
clc
repnz
nop
nop
jae
sti
push
inc
add
loope
mov
push
mov
xchg
ret
adc
or
mov
clc
repnz
nop
nop
jae
fwait
mov
arpl
add
decl
add
add
add
add
jmp
inc
add
repnz
add
sbb
andb
add
repnz
nop
nop
jae
pop
add
mov
add
clc
repnz
nop
nop
jae
add
mov
xor
sar
repnz
nop
nop
jae
scas
add
mov
add
push
mov
xchg
ret
add
add
nop
push
mov
leave
nop
jmp
add
mov
lret
dec
push
clc
repnz
nop
nop
jae
add
loope
dec
aaa
je
clc
repnz
nop
nop
jae
outsb
sti
mov
push
mov
xchg
ret
mov
adc
add
add
jo
nop
push
mov
leave
nop
jmp
roll
add
das
push
xor
clc
repnz
nop
nop
jae
gs
add
add
imul
jle
add
clc
repnz
nop
nop
jae
push
add
push
icebp
adc
mov
jle
add
imul
adc
push
add
ret
mov
clc
repnz
nop
nop
jae
pop
mov
fdivl
add
clc
repnz
nop
nop
jae
outsb
adc
xchg
fisttpll
clc
repnz
nop
nop
jae
add
sti
scas
imul
pop
movsl
fld1
push
mov
xchg
ret
add
faddl
add
push
jmp
lcall
mov
loope
add
call
rep
clc
repnz
nop
nop
jae
shll
faddl
add
clc
repnz
nop
nop
jae
add
add
add
ds
lock
clc
repnz
nop
nop
jae
imul
mov
add
clc
repnz
nop
nop
jae
add
sbb
lods
pop
je
nop
push
mov
leave
nop
jmp
xchg
faddl
popf
mov
clc
repnz
nop
nop
jae
fdivrl
add
add
push
add
mov
pop
pop
push
mov
xchg
ret
add
add
add
add
and
repnz
nop
nop
jae
fwait
scas
add
sbb
shl
clc
repnz
nop
nop
jae
loope
mov
fistpl
clc
repnz
nop
nop
jae
add
pop
dec
add
clc
repnz
nop
nop
jae
arpl
or
mov
push
mov
xchg
ret
mov
xor
add
add
std
push
clc
repnz
nop
nop
jae
add
pop
pop
dec
jl
mov
and
add
faddl
dec
lret
jmp
loopne
nop
push
mov
leave
nop
jmp
or
rclb
jmp
add
sarb
repnz
nop
nop
jae
add
loope
add
add
jle
add
clc
repnz
nop
nop
jae
lds
and
add
aas
call
clc
repnz
nop
nop
jae
fwait
adc
adc
add
insl
mov
clc
repnz
nop
nop
jae
add
rcrl
roll
repnz
nop
nop
jae
add
xchg
add
repnz
nop
nop
jae
add
add
stc
push
nop
push
mov
leave
nop
jmp
add
add
add
mov
cld
push
mov
xchg
ret
add
add
add
cmp
nop
push
mov
leave
nop
jmp
pop
lret
add
pop
mov
push
mov
xchg
ret
add
push
hlt
pop
mov
mov
clc
repnz
nop
nop
jae
mov
jne
rcrb
mov
xchg
ret
add
mov
cmp
add
xchg
adc
repnz
nop
nop
jae
add
add
dec
clc
push
mov
xchg
ret
add
push
mov
jne
dec
sub
xchg
push
inc
add
repnz
mov
and
repnz
nop
nop
jae
pop
jl
add
add
imul
repnz
nop
nop
jae
pop
add
add
or
addb
clc
repnz
nop
nop
jae
mov
dec
loope
add
popa
ret
nop
push
mov
leave
nop
jmp
add
jmp
scas
add
pop
mov
adc
repnz
nop
nop
jae
mov
add
add
movsb
add
test
clc
repnz
nop
nop
jae
add
imul
mov
xchg
ret
icebp
pop
add
sbb
dec
push
push
add
push
add
cld
fimuls
test
nop
push
mov
leave
nop
jmp
add
mov
loopne
add
pop
movzwl
clc
repnz
nop
nop
jae
dec
sbb
pop
add
repnz
nop
nop
jae
enter
add
aas
pop
clc
repnz
nop
nop
jae
lret
add
sti
add
nop
nop
jae
add
push
lods
add
add
push
mov
leave
nop
jmp
lahf
add
add
scas
std
mov
clc
repnz
nop
nop
jae
sbb
das
scas
add
cmp
jne
clc
repnz
nop
nop
jae
add
imul
add
add
jne
mov
add
add
xchg
shrb
ss
add
add
push
mov
xchg
ret
xor
add
mov
cmpsl
in
clc
repnz
nop
nop
jae
add
add
in
insb
roll
cld
nop
nop
jae
add
loope
rcll
mov
clc
repnz
nop
nop
jae
add
push
add
add
sbb
clc
repnz
nop
nop
jae
sbb
shr
clc
repnz
nop
nop
jae
push
adc
add
add
cld
nop
nop
jae
add
out
add
roll
push
push
mov
xchg
ret
push
add
or
dec
and
add
mov
push
mov
xchg
ret
dec
faddl
inc
pop
pop
popf
jmp
fmull
add
inc
or
xor
add
pop
mov
clc
repnz
nop
nop
jae
arpl
inc
fisttps
test
xchg
ret
fdivl
or
dec
add
clc
repnz
nop
nop
jae
add
add
push
pop
dec
rep
push
mov
xchg
ret
faddl
add
imul
repnz
nop
nop
jae
es
add
add
repnz
nop
nop
jae
push
add
es
jns
sti
hlt
clc
repnz
nop
nop
jae
mov
push
clc
repnz
nop
nop
jae
icebp
add
scas
outsb
cwtl
sbb
add
inc
inc
fld1
clc
repnz
nop
nop
jae
add
add
mov
mov
clc
repnz
nop
nop
jae
add
push
add
pop
das
pop
fldpi
push
mov
xchg
ret
xor
add
lods
add
xchg
mov
cld
nop
nop
jae
pop
add
das
add
dec
mov
push
mov
xchg
ret
add
icebp
add
xor
add
repz
clc
repnz
nop
nop
jae
call
add
das
and
add
and
add
repnz
nop
nop
jae
add
dec
add
mov
and
add
xor
adcl
repnz
nop
nop
jae
mov
in
mov
clc
repnz
nop
nop
jae
lahf
add
add
ss
les
add
add
repnz
nop
nop
jae
add
add
add
cld
nop
nop
jae
add
sti
xchg
add
add
clc
repnz
nop
nop
jae
add
dec
scas
add
or
repnz
nop
nop
jae
add
rolb
add
repnz
aaa
lea
nop
push
mov
leave
nop
jmp
lret
add
add
add
repnz
nop
nop
jae
enter
lahf
add
push
mov
xchg
ret
icebp
mov
sbb
loope
fsub
push
push
mov
xchg
ret
enter
mov
sub
in
add
rorb
insl
shlb
or
add
inc
pop
inc
add
add
push
add
mov
ficoms
nop
jmp
out
add
add
mov
xchg
ret
call
pop
add
fwait
and
add
add
in
push
push
mov
xchg
ret
pop
loope
mov
add
inc
icebp
push
clc
repnz
nop
nop
jae
mov
push
scas
call
dec
clc
repnz
nop
nop
jae
pop
add
lods
mov
add
dec
nop
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
nop
jae
stc
add
jl
ljmp
nop
jae
add
add
adc
mov
xchg
ret
add
add
xchg
pushl
push
mov
xchg
ret
add
sbb
popf
jne
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
add
icebp
add
add
fstpt
clc
repnz
nop
nop
jae
dec
add
enter
repnz
nop
nop
jae
inc
mov
mov
push
data16
test
push
mov
xchg
ret
add
pop
add
loope
test
insb
inc
add
inc
scas
pop
push
adc
scas
test
insl
inc
add
inc
add
add
lds
aas
adc
nop
jmp
add
add
pop
add
clc
repnz
nop
nop
jae
add
add
add
int
or
clc
repnz
nop
nop
jae
add
scas
add
push
popl
nop
nop
jae
add
inc
sbb
add
nop
nop
jae
add
pop
add
outsb
add
sbb
cld
nop
nop
jae
repnz
add
add
push
xchg
rep
clc
repnz
nop
nop
jae
add
lods
scas
xor
clc
repnz
nop
nop
jae
add
call
jae
jae
clc
repnz
nop
nop
jae
mov
add
xchg
add
nop
nop
jae
add
faddl
cmc
mov
clc
repnz
nop
nop
jae
push
add
xor
test
xchg
ret
mov
add
xor
repnz
nop
nop
jae
lahf
add
add
out
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
dec
imul
add
add
add
push
clc
repnz
nop
nop
jae
icebp
stc
add
lds
add
lds
in
leave
nop
jmp
dec
add
add
es
lods
add
shl
mov
add
repnz
nop
nop
jae
add
mov
xchg
ret
add
xchg
add
dec
push
mov
xchg
ret
add
scas
sti
enter
outsb
add
out
add
push
mov
xchg
ret
add
add
add
sti
movsb
add
add
clc
repnz
nop
nop
jae
fdivrl
call
nop
jae
add
scas
imul
add
cmp
ret
inc
add
mov
add
test
repnz
nop
nop
jae
icebp
mov
repnz
nop
nop
jae
push
lods
add
adc
xor
mov
push
mov
xchg
ret
sti
shll
add
fdivl
loop
nop
push
mov
leave
nop
jmp
add
mov
imul
xor
test
repnz
nop
nop
jae
add
add
add
or
mov
xchg
ret
faddl
mov
lahf
icebp
add
clc
repnz
nop
nop
jae
mov
dec
cmp
repnz
nop
nop
jae
add
add
lahf
adc
je
clc
repnz
nop
nop
jae
faddl
sti
mov
add
add
dec
mov
xor
clc
repnz
nop
nop
jae
mov
xchg
stos
add
sub
nop
push
mov
leave
nop
jmp
pop
faddl
add
movsl
push
clc
repnz
nop
nop
jae
fwait
add
add
pop
add
add
nop
push
mov
leave
nop
jmp
inc
dec
or
add
out
push
clc
repnz
nop
nop
jae
lods
add
stc
fsubr
add
cmp
in
xchg
add
sti
xchg
sbb
add
cmp
xor
clc
repnz
nop
nop
jae
rolb
fsub
add
add
nop
push
mov
leave
nop
jmp
scas
add
add
or
sbb
clc
repnz
nop
nop
jae
icebp
scas
add
add
jno
clc
repnz
nop
nop
jae
loope
fwait
add
jmp
addb
add
add
jle
clc
repnz
nop
nop
jae
icebp
mov
icebp
mov
nop
push
mov
leave
nop
jmp
dec
enter
mov
add
fwait
clc
repnz
nop
nop
jae
add
add
add
add
pop
pop
ret
push
mov
xchg
ret
faddl
add
add
add
xor
fistpl
clc
repnz
nop
nop
jae
sbb
xor
mov
movsl
add
clc
repnz
nop
nop
jae
add
mov
fld1
clc
repnz
nop
nop
jae
pop
arpl
mov
clc
repnz
nop
nop
jae
xor
loope
add
and
add
add
add
fwait
stos
clc
repnz
nop
nop
jae
stc
pop
add
add
rclb
inc
push
mov
xchg
ret
add
mov
add
cmp
push
mov
leave
nop
jmp
or
arpl
nop
inc
cmp
nop
push
mov
leave
nop
jmp
pop
add
sbb
add
repnz
nop
nop
jae
repnz
add
clc
repnz
nop
nop
jae
stc
dec
icebp
in
push
push
mov
xchg
ret
icebp
adc
add
add
repnz
nop
nop
jae
fdivr
add
xchg
add
mov
repnz
nop
nop
jae
add
add
icebp
add
add
xor
nop
push
mov
leave
nop
jmp
add
add
repnz
add
cld
nop
nop
jae
add
arpl
mov
fcompl
mov
leave
nop
jmp
mov
push
add
add
mov
loop
add
clc
repnz
nop
nop
jae
add
add
pop
call
clc
repnz
nop
nop
jae
sar
lods
clc
in
cwtl
cmp
add
mov
mov
clc
repnz
nop
nop
jae
add
inc
push
shrl
nop
push
mov
leave
nop
jmp
pop
add
mov
mov
nop
push
mov
leave
nop
jmp
mov
gs
xchg
jne
clc
repnz
nop
nop
jae
pop
add
add
add
push
clc
repnz
nop
nop
jae
lods
pop
rolb
add
add
sbb
inc
add
lret
es
lods
clc
repnz
nop
nop
jae
loope
sti
add
das
mov
lock
repnz
nop
nop
jae
inc
pop
mov
add
repnz
repnz
nop
nop
jae
fwait
mov
stos
lods
nop
push
mov
leave
nop
jmp
add
add
out
add
loope
push
push
mov
xchg
ret
add
add
add
es
jecxz
clc
repnz
nop
nop
jae
roll
sti
rclb
push
clc
repnz
nop
nop
jae
add
adc
clc
repnz
nop
nop
jae
mov
add
jne
clc
repnz
nop
nop
jae
pop
fcoml
push
clc
repnz
nop
nop
jae
push
add
jmp
mov
push
mov
leave
nop
jmp
mov
xor
add
add
push
push
mov
xchg
ret
add
sti
dec
add
add
mov
xchg
ret
outsb
mov
mov
cltd
and
clc
repnz
nop
nop
jae
das
dec
lahf
adc
push
mov
leave
nop
jmp
enter
lret
add
mov
mov
nop
push
mov
leave
nop
jmp
add
gs
pop
mov
mov
add
repnz
nop
nop
jae
sbb
mov
clc
repnz
nop
nop
jae
repnz
add
cmp
incl
add
fsubrl
sbb
inc
rolb
add
mov
enter
nop
nop
jae
add
add
je
clc
repnz
nop
nop
jae
call
add
insb
nop
push
mov
leave
nop
jmp
add
inc
add
mov
dec
cmp
repnz
nop
nop
jae
add
add
add
sti
pop
nop
push
mov
leave
nop
jmp
add
stc
scas
add
stos
clc
repnz
nop
nop
jae
add
add
inc
pusha
push
mov
xchg
ret
add
fsub
add
add
imul
push
clc
repnz
nop
nop
jae
add
add
or
repnz
nop
nop
jae
fdivl
push
movsb
add
pusha
xchg
sbb
clc
repnz
nop
nop
jae
scas
add
sbb
add
les
push
mov
xchg
ret
stc
mov
or
sub
add
mov
nop
nop
jae
add
jl
dec
sbb
xchg
daa
pop
clc
repnz
nop
nop
jae
roll
mov
add
add
pop
push
mov
xchg
ret
add
xor
imul
add
popa
push
mov
xchg
ret
add
das
dec
add
add
imul
clc
repnz
nop
nop
jae
add
add
xor
clc
repnz
nop
nop
jae
faddl
or
sahf
push
add
lock
jne
clc
repnz
nop
nop
jae
mov
add
mov
clc
repnz
nop
nop
jae
mov
add
mov
clc
repnz
nop
nop
jae
lods
das
arpl
outsb
mov
adc
push
mov
xchg
ret
lahf
scas
add
pop
add
in
leave
nop
jmp
mov
sti
fdivrl
sbb
push
mov
xchg
ret
adc
scas
add
mov
repnz
in
leave
nop
jmp
loope
dec
push
add
push
adc
push
push
mov
xchg
ret
dec
dec
jmp
faddl
mov
pop
or
repnz
nop
nop
jae
xor
add
add
add
nop
jae
fcompl
lahf
sub
mov
xchg
ret
pop
mov
add
inc
pop
clc
repnz
nop
nop
jae
add
add
pop
clc
repnz
nop
nop
jae
arpl
arpl
repnz
cmpsl
lea
push
mov
xchg
ret
add
add
dec
sub
repnz
nop
nop
jae
add
add
inc
add
xchg
clc
repnz
nop
nop
jae
add
pop
call
push
push
clc
repnz
nop
nop
jae
jl
add
add
faddl
add
pop
mov
clc
repnz
nop
nop
jae
mov
mov
mov
imul
clc
repnz
nop
nop
jae
repnz
mov
outsl
push
push
mov
xchg
ret
lahf
fadd
scas
add
sbb
clc
repnz
nop
nop
jae
inc
push
add
add
mov
mov
push
mov
xchg
ret
add
adc
add
cmc
popa
clc
repnz
nop
nop
jae
add
out
add
faddl
in
sub
mov
xchg
ret
push
add
outsb
add
add
test
nop
push
mov
leave
nop
jmp
or
mov
jmp
nop
nop
jae
adc
fsubrl
add
add
clc
repnz
nop
nop
jae
add
dec
jmp
fwait
add
push
clc
repnz
nop
nop
jae
add
lahf
push
add
fidivrl
call
nop
jmp
call
push
lea
nop
push
mov
leave
nop
jmp
add
scas
add
roll
add
repnz
nop
nop
jae
icebp
mov
add
nop
push
mov
leave
nop
jmp
call
add
or
mov
leave
nop
jmp
lahf
add
add
add
call
push
clc
repnz
nop
nop
jae
add
or
push
clc
repnz
nop
nop
jae
fdiv
add
dec
add
add
add
je
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
arpl
add
push
pop
clc
repnz
nop
nop
jae
sbb
pop
mov
fnstcw
push
sub
nop
jmp
repnz
loope
scas
fsubl
fwait
fwait
add
add
pop
add
jmp
add
add
sub
cld
nop
nop
jae
push
jmp
dec
adc
add
push
clc
repnz
nop
nop
jae
imul
lahf
add
add
pop
clc
repnz
nop
nop
jae
add
add
adc
add
movzwl
clc
repnz
nop
nop
jae
add
add
jl
repnz
mov
leave
nop
jmp
repnz
push
add
rcll
cld
nop
nop
jae
enter
mov
pop
push
mov
xchg
ret
add
mov
adc
nop
push
mov
leave
nop
jmp
add
add
add
mov
push
nop
push
mov
leave
nop
jmp
mov
outsb
lahf
pop
mov
mov
cmpsb
jno
add
add
pusha
add
iret
add
add
add
add
jo
or
add
lahf
add
add
cmp
add
pop
arpl
add
and
xchg
into
mov
jns
sahf
push
cwtl
jge
add
jmp
add
add
lret
xor
add
xchg
sub
add
mov
or
xchg
jg
mov
add
ljmp
cmp
sub
mov
pusha
roll
xchg
popl
mov
add
std
mov
cmpsb
add
add
jb
rcr
jecxz
cmp
addb
sub
add
dec
mov
mov
add
cmp
cmp
xchg
cmpsb
add
jp
lds
add
mov
and
add
loop
and
add
add
les
add
push
aam
or
xchg
aad
out
ss
insl
push
fiaddl
cli
push
add
or
add
fnstenv
imul
stc
adc
leave
dec
sub
add
aad
and
inc
ja
repz
jl
stc
jae
in
int3
xchg
add
addb
gs
das
dec
jge
mov
ljmp
add
sahf
movsl
sldt
add
mov
add
inc
cmp
xchg
jno
cmp
movsb
add
jnp
cmc
fdivrs
dec
add
add
adc
add
add
add
mov
add
popf
or
add
mov
or
add
add
push
jmp
dec
pop
xchg
mov
inc
cmp
sti
push
das
in
cltd
aas
lods
add
inc
mov
add
push
add
pop
mov
sti
in
insl
xor
push
add
scas
add
insb
sub
add
sbb
cli
rcl
out
add
popf
sbb
fsubr
enter
rorl
add
flds
pop
mov
adc
in
bound
add
adc
iret
jp
cltd
pop
shlb
add
outsl
loope
sbbl
shll
push
aaa
popa
push
add
sbb
outsl
pop
out
add
and
add
rorl
sbb
jb
or
add
sbb
add
cld
js
add
add
add
mov
push
add
xchg
pop
jb
int
fbstp
shrl
fisubrl
lock
mov
bnd
sarb
push
jns
sahf
mov
add
mov
add
xor
push
cmp
mov
push
cmpl
pop
aas
mov
sbb
aaa
sbb
stos
pop
psadbw
cltd
dec
or
add
lret
xchg
add
mov
imul
shl
add
xchg
xchg
sbb
jp
adc
dec
mov
mov
pop
adc
xchg
push
scas
add
xchg
fists
or
into
mov
cmp
repz
popf
adc
out
ret
or
add
cmp
and
dec
loopne
rol
outsl
push
outsb
push
lahf
cmp
jp
daa
fistpl
in
add
jae
or
fwait
add
add
scas
int
not
jne
adc
pushf
fisubs
cmc
mov
pusha
psrlq
cltd
pop
int3
adc
fwait
jecxz
mov
imul
push
fwait
pop
inc
fidivrs
bnd
subl
mov
test
jns
stos
mov
jge
mov
loope
pop
inc
and
inc
loope
les
popf
clc
fwait
jmp
mov
pushf
data16
mov
dec
in
dec
in
cmp
hlt
push
dec
xor
add
or
add
cmp
add
out
test
jp
push
int3
in
mov
jnp
xchg
add
push
add
inc
das
mov
add
jge
sbb
jo
adc
add
cld
fmull
mov
add
fs
nop
sbb
lea
add
mov
xor
sub
add
adc
out
cmp
loope
add
sahf
repnz
add
add
repnz
and
add
mov
add
mov
call
add
inc
and
add
sub
add
jo
xor
add
xchg
sub
dec
int
add
jo
ss
pop
jecxz
int
jle
sahf
clc
rcll
add
jne
add
xchg
in
cmpsl
jge
mov
add
popa
movsl
aaa
mov
inc
loope
pop
adc
cmp
ljmp
xchg
and
add
add
adc
mov
push
sbb
loopne
add
sti
int
inc
dec
add
jno
and
add
push
add
fucomp
testl
cmp
mov
add
nop
aam
sahf
out
sbb
cmp
inc
or
add
fists
dec
bound
ficompl
jecxz
jecxz
jo
add
xchg
adc
dec
sbb
mov
add
mov
xorl
mov
rolb
mov
add
fdiv
shlb
mov
sbb
scas
aaa
lods
mov
add
cmp
mov
stos
add
and
add
adc
add
dec
push
lcall
out
js
push
cmp
add
test
inc
mov
lock
sbb
and
call
add
dec
sbb
sbb
add
stc
aad
cmp
sbb
sub
add
mov
add
aas
jmp
sbb
sbb
stc
mov
push
mov
add
sub
add
pop
jns
push
or
add
add
mov
add
or
add
add
mov
push
mov
addb
xchg
lea
add
call
cmp
out
mov
jbe
add
add
cmpsl
and
add
fidivrs
add
into
add
add
mov
add
jle
lods
add
sub
add
jecxz
aas
lret
mov
shlb
jge
lret
xor
addb
mov
add
repnz
adc
xchg
in
adc
push
mov
js
iret
hlt
dec
mov
nop
sub
push
pop
cld
cltd
nop
push
iret
push
data16
push
rclb
bound
aaa
push
inc
fistps
add
sub
add
stos
add
and
add
dec
fnsave
lods
add
out
addr16
rorb
add
cli
mov
jb
add
aaa
xor
add
or
sub
xchg
and
add
cli
outsb
mov
add
jno
add
pop
sbb
scas
add
mov
add
push
sbb
add
dec
in
popa
lods
aaa
cmp
mov
shl
fs
add
jle
roll
add
add
add
dec
dec
jo
imul
roll
add
mov
add
and
add
cmp
push
lahf
adc
test
add
jecxz
std
jle
add
xchg
mov
add
mov
pop
sbb
sub
lcall
xchg
push
mov
add
add
stc
push
cli
xchg
adc
cld
addb
rcrb
jl
xchg
inc
popf
inc
adc
dec
test
cmp
sbb
dec
and
cwtl
rcrl
sub
push
xchg
cmp
add
add
cmp
and
hlt
mov
cltd
mov
int
hlt
cmp
insb
dec
and
add
add
mov
add
mov
pop
dec
je
jo
xchg
add
add
fwait
add
add
icebp
pop
add
add
scas
add
ja
add
inc
rep
add
rcrb
sbb
aam
push
add
loope
dec
jl
daa
pusha
inc
lret
and
xor
pop
jmp
lahf
rcll
add
fs
add
enter
popa
sbb
push
mov
xchg
fcmovnb
or
repz
add
xchg
fsubr
and
add
sbb
cmp
loopne
xor
mov
cmp
movsl
sti
loopne
loope
xchg
repz
sbb
std
call
push
adc
shrl
movsb
add
xor
mov
fs
add
add
add
lds
hlt
ja
lock
xchg
out
aas
mov
pushf
mov
add
lret
cwtl
in
cmp
repnz
rcl
sbb
outsl
mov
push
add
mov
repnz
add
data16
add
xchg
movsl
push
jmp
insl
lahf
aas
dec
enter
pop
adc
inc
rcrb
jg
or
mov
add
into
mov
fxch
jle
arpl
push
sbb
inc
xor
pop
cmc
data16
xor
loope
insb
mov
add
sbb
mov
add
jmp
orl
std
xchg
lret
cmp
ret
adc
sbb
pop
lea
addb
rcll
loop
lahf
dec
cmp
je
add
push
add
addb
and
lahf
xchg
inc
push
shlb
jns
out
ss
push
add
addb
jne
add
add
mov
jge
cmpsb
add
adc
dec
movb
mov
xchg
add
cli
rcll
ds
and
dec
enter
push
add
pop
js
rcl
and
pushf
clc
mov
push
add
inc
pop
jb
sbb
jg
inc
and
add
push
mov
add
pop
divl
inc
sbb
fnstcw
rcrw
add
push
pop
sub
add
cld
add
add
xor
adc
stos
add
mov
add
das
shll
mov
in
mov
push
rcll
cmp
sbb
add
loop
adc
fs
add
fstpl
jg
mov
add
or
fcoml
add
movsb
add
sti
push
mov
add
test
add
add
fisubrs
cmp
jmp
fimull
add
add
lea
insb
jl
int
into
cltd
jbe
jae
dec
pop
xchg
scas
add
push
mov
mov
ret
inc
pop
mov
add
push
inc
or
pop
add
add
jae
sahf
scas
gs
sbb
add
cmp
fwait
xchg
movsb
add
movsl
mov
iret
push
cmp
inc
jae
insb
in
hlt
ljmp
add
or
and
add
lret
in
xor
sub
adc
add
cmc
fnsave
in
sbb
mov
add
xor
lods
pop
push
mov
add
andl
cmpsl
nop
xor
out
xchg
call
fsub
ljmp
xchg
repz
and
add
mov
add
sub
add
pavgb
and
add
add
jl
add
or
popa
jno
insb
mov
les
mov
hlt
xlat
add
cmp
aaa
push
idivl
adc
filds
add
adc
stc
sbb
add
ds
pop
jmp
dec
fdivl
aam
pop
add
add
aaa
push
add
int
xchg
test
enter
call
sub
jg
leave
sub
add
orl
aam
jne
stc
sbb
add
push
dec
mov
add
movsb
add
xchg
mov
mov
inc
adc
cli
mov
inc
mov
pop
mov
push
mov
add
and
add
das
lret
xorl
loopne
add
jle
jmp
add
dec
xchg
mov
pop
das
fbld
cli
cmc
nop
out
sbb
scas
fisubrl
add
sti
loop
mov
mov
aaa
idivl
sahf
notb
cmp
or
add
mov
mov
scas
sub
imul
popf
in
cmp
or
add
cmc
cli
ja
mov
sub
mov
imul
lretw
mov
add
adc
add
sub
jnp
add
pop
lock
fisubrs
add
or
add
lcall
mov
push
add
js
push
in
cld
mov
add
pop
lcall
and
add
dec
bound
jge
add
fstpt
mov
ficoml
and
add
or
add
mov
aaa
xlat
jae
add
fcoml
cmp
pop
adc
rcr
inc
mov
add
add
lahf
in
orl
xor
fwait
into
pcmpgtb
pminub
jmp
add
inc
mov
jae
jae
or
cltd
ret
add
jle
repz
add
jge
in
into
ret
add
add
mov
add
inc
mov
adc
ret
lock
dec
ret
and
rcll
add
mov
lret
test
mov
add
add
add
imul
mov
arpl
add
xor
xchg
add
push
xor
fcmovb
jbe
jnp
in
sbb
pusha
daa
cmpsb
add
sahf
test
add
insb
mov
xchg
clc
ror
xchg
add
out
push
add
enter
add
std
lret
loop
sub
add
add
push
add
leave
and
push
jp
jge
xchg
data16
sub
loopne
add
add
les
add
add
addl
add
push
cmp
xor
jl
and
add
add
add
jno
lahf
mov
add
out
mov
jmp
mov
ja
sbb
add
add
pop
and
aam
testl
pop
lds
pop
mov
mov
mov
add
and
add
xor
popa
xchg
pop
jno
jl
or
sahf
addb
cmp
inc
xchg
rdmsr
addb
push
sbb
mov
add
loope
dec
bound
fs
mov
mov
xchg
sahf
jae
movsb
add
addr16
add
pop
cmp
lods
inc
into
xor
add
addb
testl
add
add
sbb
pop
mov
mov
in
aas
mov
mov
mov
add
sub
and
add
dec
inc
dec
scas
je
add
pop
arpl
addr16
fsubl
sub
stc
div
mov
sub
add
mov
lret
mov
cld
add
mov
pop
in
popf
push
add
ljmp
add
shlb
cld
mov
lds
xchg
xor
add
lds
add
int
add
insl
test
add
fiadds
testl
jle
pop
idiv
inc
push
dec
dec
repz
inc
gs
ror
and
scas
or
das
rorl
add
jno
push
dec
xor
les
jge
push
rolb
mov
pop
fwait
dec
mov
add
out
or
add
xchg
mov
push
repz
lds
jmp
repnz
sar
inc
test
cmpsb
add
sub
add
ss
add
leave
sbb
int3
dec
movsb
add
in
xchg
add
add
push
insl
mov
add
fucomi
lock
in
xchg
push
repnz
inc
out
add
in
pop
sub
shl
xor
adc
cwtl
xorl
ljmp
rol
or
add
inc
movups
lods
xor
inc
pop
out
add
sbb
or
add
sub
add
jmp
push
push
sbb
addb
aas
mov
test
add
add
add
add
pop
mov
dec
mov
xlat
dec
xor
add
pusha
cwtl
dec
dec
or
add
xchg
add
add
adc
add
or
add
cwtl
xchg
icebp
mov
pop
mov
xchg
mov
mov
add
add
add
rclb
addr16
xchg
push
add
test
push
add
add
in
sub
and
add
movsb
add
aas
pushf
aas
rcrb
xchg
js
add
mov
cltd
xor
in
dec
push
popl
pop
psubq
shll
jecxz
lods
add
std
mov
xchg
data16
add
adc
mov
mov
push
pop
jp
add
xchg
pop
or
add
mov
xchg
or
add
jmp
or
add
and
add
adc
adc
test
add
cmpps
addb
cmp
add
mov
nop
ror
stos
xchg
in
ficomps
add
dec
xchg
lods
insl
adc
popa
pop
cmovle
sbb
adc
add
add
add
mov
add
inc
mov
add
mov
loopne
pop
lods
add
mov
mov
sub
add
add
jle
inc
fnstsw
std
shrd
jmp
mov
arpl
add
cli
sub
or
add
shlb
fwait
aas
mov
and
out
bound
loop
mov
cmp
addb
das
lcall
add
mov
add
adc
sub
add
add
add
adc
jnp
ss
inc
repnz
add
mov
dec
add
mov
std
push
adc
push
mov
add
pop
mov
ljmp
add
xchg
addb
mov
add
mov
pop
cmc
add
add
and
add
test
add
add
mov
add
das
or
std
jecxz
lds
aam
ss
adc
dec
in
aaa
jb
cmp
push
mov
jno,pt
shrl
int
add
ficoms
inc
cwtl
fidivrs
lods
add
test
add
mov
add
push
sub
add
add
pop
lret
push
add
in
out
push
sbb
nop
aam
pop
pusha
lods
add
add
add
add
fisubs
add
push
sub
add
sub
add
sbb
adc
daa
cwtl
imul
pop
dec
lods
push
out
push
sti
unpcklps
dec
jl
add
loope
ja
loope
pop
and
add
aas
adc
pop
or
add
add
inc
add
xor
imul
add
xor
add
add
std
xor
add
jbe
xchg
add
in
mov
shl
sbb
add
std
mov
jae
add
imul
add
aam
add
lods
out
sbb
fadds
add
sahf
insl
popf
xor
sahf
xor
cmpsb
add
je
add
pop
pop
rdpmc
lea
cmpsb
add
mov
mov
imul
add
sub
add
and
add
decl
add
push
jecxz
movsl
addb
rcll
add
gs
push
clc
dec
mov
add
add
add
outsl
mov
add
loope
loop
test
mov
mov
sar
jne
les
jnp
lcall
fadd
lret
jno
mov
add
inc
hlt
cmp
out
jns
sub
sti
ret
jno
sar
mov
add
jl
add
jbe
add
lcall
inc
jo
dec
je
mov
cwtl
cwtl
ror
add
rcl
pcmpgtw
jno
add
sub
mov
jno
add
sti
in
fistpl
add
xor
stos
add
mov
add
mov
or
jo
add
pop
pop
mov
cmp
stos
add
movsb
add
imulb
add
add
add
in
lret
xchg
jae
add
cmp
addb
jle
push
loop
addb
push
sbb
add
add
add
mov
jno
shr
mov
movsb
add
cmovae
jns
and
sub
sbb
add
cmpsl
out
movsb
add
clc
mov
add
popa
xor
pop
xchg
push
cld
xor
push
xchg
notb
add
fs
mov
add
int3
xchg
lret
addb
adc
add
jns
sbbl
push
fmul
arpl
add
nop
daa
sub
add
xchg
and
add
xchg
and
add
scas
add
imul
test
pop
mov
addb
out
pop
dec
gs
jl
add
push
add
out
lahf
xchg
les
add
add
add
push
in
add
mov
jg
mov
or
add
add
mov
add
xchg
xchg
js
add
inc
jbe
add
shll
mov
and
add
sahf
sub
and
nop
dec
xchg
or
add
sub
add
add
ja
add
dec
sahf
sbb
push
add
xchg
or
inc
lds
or
sbb
stos
add
jnp
xchg
add
add
push
add
mov
sti
cmp
pop
fists
jo
or
add
add
dec
test
add
lds
lahf
xor
or
add
adc
data16
add
outsb
xchg
mov
mov
push
xor
add
add
inc
bound
add
add
into
shrb
std
adc
pop
add
insb
and
out
rcrl
scas
and
mov
idivl
xchg
add
add
inc
lret
popf
or
cli
pop
int
cltd
outsb
loop
sbb
cmpl
adc
jl
push
movsb
add
icebp
add
add
sub
popa
fcoml
push
push
sub
add
leave
movsl
adc
fistpll
loop
popa
fsts
add
fstpt
inc
rcrb
inc
cmp
mov
add
inc
add
sub
adc
dec
dec
inc
aam
cltd
clc
cmc
push
add
rcrl
add
cwtl
xchg
adc
lods
add
mov
in
sbb
add
cltd
stc
jmp
data16
fcmovu
rcl
addb
cmp
or
add
sub
add
bound
pop
adc
add
cmc
stos
add
adc
or
add
insb
rcrb
add
jae
or
sbb
nop
je
sbb
cli
push
push
pop
pop
add
add
imul
data16
add
and
call
incl
movsl
out
add
add
shlb
jbe
mov
add
add
inc
in
outsl
inc
test
mov
add
add
lods
add
loope
mov
out
mov
scas
add
mov
add
hlt
mov
push
lds
test
add
inc
xchg
repnz
test
xchg
fdivr
mov
lock
add
add
sbb
mov
mov
mov
mov
add
inc
xchg
in
int3
addb
pop
outsl
xchg
je
mov
push
pushf
hlt
std
outsb
lods
add
int3
sbb
add
adc
add
mov
fildll
add
clc
inc
mov
add
lea
cmp
lahf
out
mov
xchg
pusha
into
stos
dec
inc
lcall
inc
pop
test
pop
pop
popa
movsl
push
inc
addr16
or
stc
popa
test
loope
mov
add
inc
sbbl
iret
movsb
add
or
add
add
lock
subl
push
or
pop
add
lret
or
fistpl
pop
pop
sbb
mov
add
js
repnz
rorb
or
add
jne
fsubrs
push
xchg
jmp
add
add
sbb
add
hlt
fnstcw
out
cltd
inc
cmpsb
add
push
je
loopne
push
ss
dec
in
jl
add
loope
push
outsb
mov
push
incl
fidivs
leave
rcr
add
cmp
add
sub
add
out
out
int3
lahf
ja
loopne
or
add
add
pop
mov
add
add
jmp
jb
ds
insb
cmp
inc
push
push
pop
hlt
cmp
out
add
fildll
sub
xchg
mov
adc
add
jae
loopne
movsl
and
inc
int3
aas
and
add
add
cmp
adc
xchg
sbb
das
push
fxch
mov
adc
add
pop
stos
add
xor
xor
mov
xor
stc
jecxz
in
pop
popf
mov
add
fcmovnbe
mov
addb
int
dec
push
xlat
negb
shlb
leave
xchg
add
xchg
shll
pop
addr16
subl
dec
jno
popl
push
jl
cmp
add
int
lret
inc
adc
push
push
fmull
add
add
add
add
jle
into
xlat
inc
sarl
js
in
pop
xchg
sub
add
xchg
les
add
imul
inc
xchg
fcomip
ljmp
push
xchg
cmp
push
adc
lret
loopne
inc
mov
inc
mov
andl
add
pop
mov
sub
add
add
aam
aad
bound
daa
stos
xchg
test
add
push
add
test
dec
test
mov
in
cmpsb
add
mov
xchg
mov
inc
insl
orl
add
out
adc
stos
add
and
jo
popa
add
outsb
mov
add
packsswb
inc
sbb
fwait
out
pop
push
rcl
sbb
sub
add
push
xchg
mov
push
and
add
add
add
fcoml
sar
sub
xor
and
jmp
push
add
xlat
lret
adc
mov
add
adc
test
scas
testl
mov
movsl
xchg
out
mov
insl
outsl
pop
push
add
cmp
sub
add
repnz
add
add
mov
mov
mov
lcall
add
pop
je
out
xchg
jb
js
add
sbb
push
dec
lcall
pop
mov
fistpll
add
add
sub
pop
arpl
int
aaa
push
les
scas
push
shrb
add
xchg
dec
or
mov
pop
add
mov
add
sbb
xchg
add
xor
mov
sub
add
cwtl
or
inc
aaa
fidivs
cwtl
sub
fsubrs
add
inc
jle
cli
fildl
add
sub
add
ss
mov
lcall
add
loopne
or
add
add
push
jmp
scas
add
jl
xor
fbstp
sub
les
jge
fldl
add
cmc
jbe
out
out
adc
dec
mov
pop
mov
mov
add
add
cmp
fcompp
or
add
ja
mov
xchg
mov
scas
adc
add
loop
movsb
add
insb
ja
pop
xchg
shlb
mov
add
add
jl
add
mov
adcl
cmpsb
add
inc
dec
fimull
lahf
das
ret
les
in
mov
add
add
arpl
mov
xchg
add
xchg
ret
test
cli
jnp
sbb
mov
add
sbb
mov
add
pushf
aam
add
call
lcall
mov
mov
mov
add
push
sub
add
inc
xchg
and
adc
sti
mov
or
add
push
arpl
add
int3
stos
arpl
mov
scas
dec
mov
xchg
dec
or
add
scas
add
xor
adc
pop
sub
add
mov
add
add
jle
add
cli
pop
test
add
add
pop
pop
dec
fcoms
mov
addr16
xor
mov
dec
xchg
cmpsb
add
and
add
lods
pop
syscall
and
jge
sti
or
push
loop
outsb
icebp
jns
int3
add
or
pusha
aad
dec
je
dec
rorb
jg
mov
inc
ret
add
or
inc
push
addr16
mov
add
cmpsb
add
aad
iret
and
add
pushf
mov
loop
xlat
lret
xchg
jg
add
mov
add
rorl
decl
dec
addr16
movsb
add
xor
mov
add
add
mov
inc
mov
loop
add
xchg
sub
add
mov
or
add
inc
out
mov
add
pop
mov
add
cmp
aaa
xchg
mov
add
in
insb
mov
stos
inc
xchg
adc
shll
add
loopne
add
add
testb
add
pop
jle
cmp
add
add
add
into
test
add
cmp
xor
stc
cwtl
push
fists
add
pop
dec
out
or
stos
mov
jecxz
xor
out
lea
push
jge
dec
lea
addb
mov
mov
popa
std
lret
add
add
push
dec
loopne
les
test
jge
ffreep
mov
add
jge
and
add
inc
pop
sbb
add
imul
loop
or
add
inc
js
addb
pop
mov
int3
icebp
push
and
add
into
out
cltd
ljmp
subl
add
outsl
jg
rcrb
rcll
cli
test
add
lahf
pusha
stc
mov
pop
jo
add
iret
add
inc
cmp
or
add
lods
mov
add
addb
iret
imul
mov
add
jge
add
addb
shrl
adc
out
rol
inc
xor
mov
sbb
imul
andps
pushf
cmp
lret
sbb
add
lods
sahf
jns
cmpsb
add
movsl
jp
out
add
ret
add
mov
jmp
add
mov
jae
add
fistps
pop
push
movd
xchg
call
sub
add
shlb
add
dec
cltd
divb
jns
nop
inc
add
or
rcrl
imul
repnz
lods
or
add
cmpsb
add
push
xor
outsl
cmpsb
add
mov
outsl
nop
xlat
daa
push
add
div
push
pop
scas
add
add
add
push
add
and
add
orl
add
pop
aaa
adc
clc
push
cmpsl
lds
sbb
lret
add
in
add
add
fwait
addb
cmp
cmp
stos
add
and
add
sub
jecxz
cld
xlat
bnd
fsubp
pop
cwtl
insb
xchg
setp
xlat
mov
xchg
adc
jmp
out
push
aas
mov
add
fs
mov
add
clc
lods
out
sbb
xchg
and
add
movsl
dec
pusha
dec
jle
inc
xchg
jge
test
stc
stos
add
xchg
rcrb
fnstsw
pop
pop
push
add
mov
add
add
or
add
xchg
pop
fldt
add
mov
add
ds
je
into
into
pop
push
pop
mov
add
fcmovbe
movsl
cmp
mov
pop
cmc
adc
adc
stos
add
mov
jno
mov
mov
add
pop
fnstsw
lcall
add
push
cld
mov
loope
add
add
add
gs
or
sub
call
add
add
jmp
push
push
add
jl
pop
cli
lea
mov
add
add
add
add
add
cmc
das
sub
add
ljmp
add
lock
adc
push
add
cli
xor
pop
adc
sbb
jns
ljmp
clc
cmp
add
push
sbb
jl
insb
ss
or
add
cltd
mov
pop
xchg
add
add
jb
sub
add
addb
das
pop
xor
pop
adc
add
pop
mov
fs
push
cld
lret
repnz
pop
fisubrs
inc
add
mov
push
mov
outsl
cli
movl
and
add
xchg
push
add
cmp
pop
out
jns
test
add
lea
stc
into
jnp
push
lea
mov
pop
negb
mov
add
mov
add
inc
mov
jp
fildl
add
sub
add
xchg
pop
aad
stos
add
insb
jns
test
out
clc
xor
or
std
mov
xor
test
add
add
or
sub
push
clc
mov
addb
jae
mov
push
add
imul
add
or
add
add
les
imul
enter
add
add
loope
addl
add
shll
out
aas
outsb
jae
cmp
xchg
add
mov
sbb
add
jo
in
call
pop
arpl
add
xor
ds
cmpsb
add
test
mov
pop
aam
int
fwait
lret
add
pop
mov
mov
cmp
negb
popa
cli
sti
xor
jns
in
mov
mov
add
push
mov
stos
mov
insl
mov
add
push
dec
stc
inc
std
sub
add
rorb
lcall
mov
pop
push
mov
call
ljmp
add
adc
out
fs
dec
daa
test
add
jae
fcomps
mov
add
add
mov
xchg
loop
and
mov
arpl
push
jne
and
add
adc
inc
xchg
add
lahf
fwait
mov
add
jg
add
mov
sub
add
out
lds
arpl
cld
mov
mov
aam
and
add
nop
push
mov
cmpsl
cli
mov
nop
mov
or
std
push
jns
cvtpi2ps
add
rorb
add
in
add
add
pop
inc
mov
aam
mov
add
add
mov
cmpsb
add
movsb
add
sbb
pop
xchg
ljmp
add
mov
stc
fcomi
insl
and
add
pushf
out
xchg
aas
inc
xor
sbb
in
sub
add
inc
push
mov
add
add
add
push
add
xchg
add
xchg
xchg
into
xchg
or
add
sbb
add
inc
movsl
sbb
add
pop
aas
pushf
addb
pop
cmc
and
add
inc
ficompl
add
cld
mov
gs
loope
add
icebp
cmc
out
jecxz
push
and
jl
fsubrl
add
add
movsb
add
popf
cmp
cmc
mov
add
fucomip
add
add
je
addr16
sbb
test
out
lcall
add
insb
leave
pop
std
sti
cmp
sbb
xor
add
pop
test
add
movb
add
xchg
iret
jno
add
or
add
add
cmp
mov
add
add
adc
sahf
mov
sahf
mov
add
push
loop
xchg
add
dec
repz
sub
add
fstpl
push
mov
add
xor
daa
mov
add
test
add
jl
jge
sti
testb
push
fwait
outsl
xor
iret
jns
clc
iret
js
mov
mov
jp
les
adc
add
outsb
cmp
mov
fwait
mov
add
std
lret
jo
in
pusha
out
mov
add
shlb
sub
add
pusha
daa
insl
ds
jno
pop
aam
cltd
scas
add
mov
push
popa
repnz
xchg
mov
lods
or
add
sub
fisttps
sub
add
nop
outsl
jno
push
scas
add
dec
sub
add
fildl
add
out
push
adc
insb
je
ret
mov
cli
loope
jb
add
loop
loop
pop
aas
and
add
sbb
addb
outsb
xchg
rorb
add
jp
int
add
insl
add
dec
ficompl
fs
fnsave
mov
shll
inc
xchg
fisubs
add
sub
pushf
inc
mov
sbb
das
push
repnz
jne
cmp
add
scas
pop
add
iret
mov
add
sarl
add
out
sub
add
mov
add
loope
ret
or
add
cli
xlat
dec
shlb
add
xor
pop
xor
and
add
add
mov
xor
jo
add
test
sbb
add
aaa
mov
mov
add
pop
and
add
or
add
rcrl
lds
add
add
add
adc
or
enter
add
dec
das
lahf
push
cli
ss
add
in
test
add
add
mov
testl
add
xchg
inc
xor
inc
sub
add
and
add
add
sahf
jl
stc
push
aam
lds
add
testb
add
push
xchg
inc
icebp
cmp
mov
cwtl
mov
cltd
aaa
jo
subl
add
inc
sbb
dec
das
and
add
enter
mov
xor
add
inc
dec
inc
data16
push
test
mov
divb
jl
call
jne
ds
push
call
mov
scas
push
out
and
aaa
loop
add
js
mov
pushf
addb
in
aam
rorl
lea
lds
or
mov
add
add
dec
pop
and
scas
add
sub
and
add
pop
jle
arpl
cmpsb
add
ljmp
push
mov
add
xor
push
inc
icebp
dec
js
add
xchg
pop
ds
int
adc
sbb
out
sbb
shrl
add
jmp
mov
mov
js
push
imul
negl
dec
daa
popa
sbb
mov
repnz
dec
xchg
add
mov
pop
push
add
iret
push
add
fisttps
jle
add
loope
shrb
add
jg
push
and
pop
xchg
cmpsl
addb
leave
aam
dec
sub
or
add
or
add
popf
sti
movaps
add
popa
loop
andnps
arpl
and
inc
cli
dec
pop
shlb
add
divb
lret
scas
stc
jmp
sbb
jns
fildl
and
pop
mov
add
xor
sub
add
movswl
or
add
iret
add
push
in
xor
lahf
inc
repz
addr16
pop
sbb
or
add
pushf
test
add
jmp
les
addb
dec
shlb
add
jecxz
add
pop
dec
gs
xor
pop
fidivs
test
add
fs
add
mov
jmp
add
sbb
cmp
mov
cli
pop
pop
pop
jnp
mov
add
add
testb
add
in
xor
sarb
pop
repnz
dec
cmpsb
add
sbb
add
dec
pop
cmp
add
fisttpll
add
sbb
add
add
add
repz
and
ds
dec
addb
sbb
add
xchg
leave
call
cmpsb
add
lds
xor
add
sbb
jbe
mov
sbb
add
pop
shl
mov
add
fdivr
xor
pop
fistl
add
pop
or
add
add
aas
lret
sbb
push
rol
sub
add
sub
xor
int
xor
and
add
stos
add
addb
shll
sub
add
stos
sbb
mov
lods
add
mov
ss
arpl
addb
ret
loope
add
aas
cld
addr16
ja
sbb
fdivs
sbb
add
mov
add
add
lret
jbe
insb
pusha
fs
aad
cmp
test
add
scas
add
sbb
add
mov
sbb
arpl
in
add
add
dec
dec
inc
aaa
xor
jno
mov
lahf
fadds
das
int
cli
cld
inc
push
cwtl
add
sbb
add
xlat
aas
fimuls
add
pushf
jo
stos
or
add
inc
and
add
outsl
dec
mov
jae
faddp
adc
xchg
pop
fists
jl
hlt
imul
lret
or
cld
adc
mov
add
lcall
inc
dec
inc
mull
notb
or
nop
adc
push
pop
xor
imul
xlat
js
add
add
sbb
movsb
add
cmc
daa
adc
mov
sub
add
enter
push
leave
mov
push
movsl
pusha
add
lret
je
ret
add
cmpsl
xchg
mov
addb
subl
in
pusha
in
cmp
repnz
add
mov
and
in
cli
test
aad
test
lock
addb
adc
add
inc
xchg
add
or
add
lret
ret
inc
jl
mov
add
pusha
push
add
rcrl
je
dec
hlt
push
imul
add
and
inc
or
add
out
add
cmp
add
sahf
imul
mov
inc
pop
movl
sbb
jbe
js
add
push
add
scas
add
add
pop
popf
push
cmp
into
mov
add
ret
scas
add
push
add
push
ss
ret
arpl
scas
rorl
sbb
scas
add
movsb
add
xchg
mov
sbb
cli
xchg
leave
addb
testb
fsubl
mov
rcll
js
cltd
cld
inc
addb
or
add
repz
mov
add
mov
cmp
ja
jl,pt
mov
jmp
jbe
xchg
push
hlt
mov
mov
push
cmp
dec
cmp
repz
daa
add
add
mov
mov
sub
scas
xor
cmp
aam
adc
test
add
push
sbb
xchg
adcl
int
mov
mull
add
sbb
mov
add
addl
imul
add
pop
divb
add
lea
js
testb
add
popa
cld
push
repnz
jae
or
add
int3
sub
add
jmp
xchg
sbb
cltd
scas
add
add
jbe
jae
mov
add
pop
xchg
push
add
daa
lret
insb
mov
xor
addb
jns
sarb
and
add
fsub
lret
mov
add
add
arpl
sbb
fdivrp
loope
data16
test
add
mov
test
add
ja
pop
pop
ds
xor
add
test
add
call
jbe
in
add
add
outsb
addr16
addb
jb
mov
add
cmp
adc
pusha
cmpsb
add
xor
cmp
xor
xor
add
add
dec
loope
ret
cmpsb
add
adc
mov
xchg
add
add
cli
push
add
push
add
cli
xchg
dec
mov
outsl
pop
pop
orl
daa
aad
inc
xchg
mov
leave
add
add
mov
add
rclb
xlat
mov
gs
sbb
add
outsb
adc
pop
pusha
mov
outsl
das
push
add
cmpsb
add
jb
andl
xchg
in
notb
into
negl
xchg
aad
cwtl
push
add
repz
incb
daa
xor
pusha
lea
rclb
fisttps
aam
mov
sahf
mov
je
add
nop
mov
cmpsb
add
push
hlt
adc
ja
out
ret
add
aas
notb
and
add
addb
lods
add
rorl
sub
pop
stos
aam
popa
out
sbb
add
imul
xchg
mov
popf
fisttpll
add
ret
and
add
mov
enter
shrb
add
push
add
mov
lcall
add
xor
push
add
pusha
mov
add
insl
loopne
xor
std
mov
add
mov
and
add
jnp
addb
pop
dec
mov
mov
push
mov
add
icebp
jecxz
ds
adc
mov
add
jge
or
cli
push
xor
cli
xchg
inc
inc
push
push
mov
jmp
popa
push
push
add
imul
jnp
sbb
cmp
xchg
enter
mov
add
hlt
lods
pusha
dec
add
add
scas
mov
test
add
mov
pusha
leave
xchg
repnz
cmpsl
or
add
adc
mov
pop
mov
scas
add
sub
add
in
pop
clc
jae
aam
loop
into
repz
xchg
imul
stc
test
add
adc
loop
std
mov
add
leave
jmp
add
loope
adc
mov
mov
mov
add
mov
mov
gs
movsb
add
shl
js
fnsave
add
ss
or
call
cmp
sbb
add
push
inc
fsubl
repz
add
out
loopne
mov
add
in
jnp
ret
add
add
out
aam
lret
shl
mov
add
push
jp
repnz
sbb
mov
push
stos
add
inc
addr16
and
add
daa
jle
sbb
inc
pop
add
addb
pop
xchg
lret
mov
and
cld
add
add
add
xchg
out
addb
xchg
fstps
inc
add
stos
mov
inc
or
and
add
and
ds
cmc
pop
out
sbb
mov
hlt
repz
add
ret
push
test
add
add
test
sub
imul
and
xor
test
and
and
add
cli
add
add
jg
loope
add
mov
add
mov
loop
add
cld
xchg
pop
xchg
mov
add
int
lret
scas
add
mov
add
add
add
imul
pop
xchg
mov
adc
add
dec
orl
or
add
add
lock
dec
jmp
arpl
fldt
pop
push
loopne
xchg
gs
xor
in
insl
xlat
lea
daa
imul
add
rcll
sub
add
add
addr16
mov
push
add
xchg
inc
nop
mov
ds
jae
inc
adc
sbb
out
mov
add
jmp
out
dec
fiaddl
xchg
sub
add
push
addb
insb
xchg
in
jp
xor
pusha
push
lret
add
mov
add
ret
std
mov
stos
fidivs
arpl
mov
pop
add
xchg
add
dec
adc
add
add
pop
fs
repnz
dec
jns
or
add
out
fbld
add
xchg
cmp
pop
add
pop
jo
lods
add
pop
movsl
push
mov
add
add
aas
shlb
subl
xchg
dec
push
leave
out
lock
sbb
cli
or
add
mov
add
sbb
int
mov
lret
add
fs
cli
adc
adc
add
mov
add
aaa
push
inc
mov
add
jne
lods
dec
in
sbb
cli
addb
xchg
sahf
scas
add
nop
fbstp
fsubp
jae
rsm
add
stos
jle
mov
add
inc
inc
pusha
inc
adc
aad
stos
add
mov
add
xchg
orl
or
jb
inc
aas
jne
mov
cmpsl
mov
lods
dec
pop
das
and
add
loopne
cmpsb
add
pop
mov
inc
pop
push
xchg
sub
add
pop
xchg
push
push
add
pop
inc
sbb
cld
fsubl
add
lret
cmp
loopne
into
mov
add
mov
mov
push
add
pop
imull
add
mov
push
fs
xchg
adc
lock
test
movsb
add
mov
add
mov
mov
lea
xchg
and
add
lock
mov
add
dec
int3
movsb
add
cmp
add
ja
sti
mov
add
test
add
add
ss
mov
add
xor
out
pop
xchg
add
insl
addl
add
cmpsl
aam
sarb
mov
and
ja
xchg
add
ds
dec
add
xor
jmp
add
and
adc
mov
add
scas
add
subl
sub
repnz
mov
add
pop
add
fdivl
jnp
mov
or
repz
in
addr16
dec
out
cmpl
add
add
ja
add
add
sbb
add
loopne
int3
push
popf
popf
jmp
adc
add
popf
pop
xchg
cmpsb
add
push
push
scas
or
add
mov
mov
pop
repz
in
pop
test
lahf
mov
add
pop
inc
pop
push
inc
pushf
add
add
sub
add
pop
mov
leave
xchg
gs
shrl
fdivrp
adc
push
hlt
imul
add
cmp
sbb
rcrl
add
add
daa
pop
xor
fwait
cmp
add
imulb
add
mov
xchg
sub
add
xbegin
or
in
ficompl
mov
je
cmp
push
xor
insl
mov
test
or
add
mov
add
mov
add
test
add
add
pop
sub
add
mov
add
rorb
decb
adc
mov
add
add
test
add
add
dec
pop
push
add
roll
xchg
mov
addb
in
mov
stos
leave
je
pop
add
add
stos
mov
sbb
inc
sbb
push
in
js
pop
cmp
mov
insl
std
out
ljmp
add
ljmp
push
cmp
add
and
lahf
icebp
gs
sub
add
add
pop
out
pop
pop
add
add
dec
dec
call
add
add
movsb
add
movsl
in
sbb
jmp
call
add
sbb
add
push
les
add
stos
and
inc
repnz
xchg
mov
mov
add
daa
outsb
inc
fisubrs
xor
fiadds
sahf
jge
mov
add
add
or
push
stos
add
cmpsl
mov
mov
fsubrs
add
pusha
sarl
repz
ficomps
repz
sbb
mov
ja
cld
adc
mov
fdivrp
or
add
pop
leave
aas
cltd
push
nop
insl
in
jb
pusha
inc
push
cmc
jb
int
mov
jle
pop
mov
add
push
xchg
lock
add
int3
movsl
addb
enter
pushf
imul
add
std
xor
lods
popa
arpl
test
add
or
imul
inc
xchg
movsb
add
pop
pop
clc
jle
and
add
add
test
add
add
ss
dec
or
sti
sbb
mov
jmp
adc
fimuls
jo
outsl
fs
push
add
push
scas
add
les
bound
xchg
cmpsb
add
lret
xchg
loopne
imul
xor
ret
pop
popf
in
inc
mov
add
jecxz
pop
xchg
mov
fildl
mov
test
add
and
cmp
add
test
rolb
add
fwait
rcl
imull
mov
cltd
pop
scas
add
lahf
mov
insl
add
push
xor
add
add
add
adc
cbtw
push
add
in
repnz
add
add
mov
inc
sbb
sbb
adc
fcoml
add
int
std
hlt
cltd
insl
movsl
fidivl
popf
out
aad
push
test
add
add
stc
ljmp
cmp
js
pop
rcll
mov
xchg
daa
and
add
arpl
cmp
pop
pop
fsubrl
jl
mov
xchg
insl
inc
aam
or
add
add
add
ret
fcomp
add
gs
sub
aad
addr16
xor
jl
daa
stc
fsubr
enter
cld
pop
push
loopne
popf
or
mov
inc
pop
add
add
roll
cmp
nop
sub
popa
mov
xor
popf
inc
mov
xor
and
std
div
scas
or
cmp
add
add
ja
aas
pop
arpl
cmp
xor
add
mov
les
xchg
test
add
sub
add
add
and
add
or
add
add
add
mov
add
push
cmpsl
bswap
or
add
dec
add
add
add
test
add
fmuls
aam
pushf
or
jecxz
ret
pop
jg
cmpsl
test
or
or
add
jae
mov
pop
push
sub
add
add
jne
sbb
push
push
std
fstpl
xchg
add
andl
sub
add
dec
ret
test
add
jbe
push
jnp
lahf
mov
fsubl
ret
arpl
cltd
or
add
lods
add
ss
imul
add
mov
add
sbb
jl
xorl
lods
add
js
icebp
and
add
les
and
xchg
ret
inc
sbb
add
test
cmp
or
test
add
adc
test
call
sbb
cmc
sbb
or
pop
jge
cmp
mov
test
add
pop
outsb
push
cmp
mov
add
dec
scas
shr
daa
cmp
in
cwtl
xchg
push
mov
fldl
add
arpl
sbbl
enter
sub
cmp
add
mov
add
div
mov
aad
cmp
adc
push
imul
mov
test
add
jg
adc
add
lea
inc
int3
jecxz
stc
stos
add
fidivrl
pop
mov
add
add
lcall
arpl
cmp
pop
clc
dec
test
add
sahf
sub
add
icebp
or
add
mov
xchg
sub
add
add
or
add
sbb
add
outsl
cltd
pop
or
adc
or
add
add
outsb
push
mov
xor
jmp
inc
xchg
jae
notl
add
adc
out
add
mov
addr16
cmc
or
jnp
jp
scas
add
mov
add
add
fs
inc
and
out
push
in
pop
dec
jnp
add
loopne
arpl
repz
fstps
add
cwtl
and
aad
mov
cmc
mov
or
mov
outsl
pop
insb
mov
mov
and
add
and
add
pop
pop
dec
mov
push
aam
inc
popf
popa
push
xorl
add
hlt
cmpsl
xor
add
out
rclb
loope
adc
jno
jl
les
add
jno
mov
dec
movb
popf
xor
sbb
fs
dec
stc
out
dec
adc
adc
add
int3
fcomps
or
dec
xchg
int3
and
mov
and
call
enter
or
add
add
ror
add
mov
add
add
shr
sbb
cli
loopne
pop
mov
add
mov
add
cmp
add
jmp
in
test
add
sarb
in
aaa
push
inc
scas
shrb
add
daa
add
add
add
sub
jecxz
and
add
test
add
std
cltd
dec
adc
pop
push
add
add
push
add
frstor
xlat
cmc
mov
add
add
add
fs
add
cmc
add
add
subl
xchg
addb
adc
or
cmove
fwait
jp
xor
in
add
insl
into
pusha
push
adcl
add
inc
shlb
sub
imul
mov
push
xchg
add
movaps
add
roll
add
dec
imul
iret
enter
filds
insl
push
or
add
add
push
sahf
sub
add
mov
add
movsb
add
in
fwait
or
add
scas
add
rcll
mov
or
add
pop
inc
pusha
addb
adc
pop
les
add
add
sbb
xor
shlb
lret
add
fwait
xlat
jl
in
add
add
sub
xchg
test
fcmovne
cmp
daa
ljmp
pusha
icebp
mov
cli
mov
daa
pop
jae
add
rcr
sti
sub
add
sbb
add
in
rol
cmp
jns
sub
jo
xor
nop
outsb
out
int3
jbe
mov
jmp
push
lahf
mov
push
mov
hlt
and
dec
out
mov
add
stc
push
pusha
xchg
xchg
add
sahf
jge
addb
ljmp
mov
jno
xor
mov
add
add
push
addb
jmp
inc
push
push
ds
jle
mov
add
and
add
inc
pop
aad
outsl
call
dec
into
adc
loope
add
fsts
sub
add
sub
aaa
add
or
lea
lods
xor
pop
jno
into
adc
add
mov
add
lret
jnp
adc
cltd
arpl
rcl
mov
cmc
adc
adc
mov
inc
mov
dec
push
xchg
xchg
push
enter
xchg
push
repnz
aam
add
and
pusha
mov
add
or
add
cmp
add
jbe
mov
add
jno
adc
push
xor
push
jg
or
mov
add
add
loope
outsb
sub
add
inc
and
jb
add
sti
sub
dec
dec
rcl
negb
add
imulb
bound
mov
add
add
testl
or
daa
or
add
icebp
add
add
xchg
and
ret
pop
mov
add
pushf
mov
add
arpl
js
loope
or
pop
adc
aaa
in
dec
test
add
inc
inc
fdivrl
dec
and
pop
adc
add
enter
cmpsl
lret
add
repnz
xlat
inc
add
add
sub
add
xor
test
add
sub
cmc
pop
mov
adc
in
cwtl
stos
lods
in
xchg
add
scas
sarl
insl
push
cmp
addr16
add
lock
add
mov
add
cmp
xchg
lret
and
jl
and
add
sub
add
mov
push
lds
pop
jbe
add
add
inc
mov
imul
adcl
sub
xor
mov
test
jnp
je
gs
pop
xchg
sub
movsl
or
sarl
aas
sub
add
xchg
add
add
fcmovu
add
add
mov
insb
mov
aaa
sub
xchg
push
addb
or
inc
ljmp
stos
jnp
jmp
inc
test
add
aas
ja
dec
mov
add
add
add
ss
or
add
daa
or
add
add
cmp
popa
addb
dec
add
mov
hlt
jne
fstl
mov
sub
add
push
ja
and
inc
pop
insl
mov
cmp
rcr
push
add
inc
sti
lods
sti
nop
ss
add
adc
add
pusha
rep
add
push
add
add
add
aas
mov
add
mov
movl
dec
add
adc
add
mov
mov
dec
cwtl
int
add
push
adcl
add
js
out
push
or
pusha
test
test
add
dec
in
insb
in
mov
daa
add
add
pop
sarl
add
adc
add
ja
fildll
add
adc
sub
cmp
faddl
add
addb
outsb
lret
pop
lret
add
dec
sti
nop
add
add
insb
push
add
shll
lds
xchg
in
cmp
les
add
mov
cmp
mov
adc
cltd
xchg
fwait
jp
xchg
das
outsl
pop
pop
dec
mov
popf
loope
add
mov
or
add
push
mov
lods
add
mov
mov
add
cmp
and
and
adc
mov
or
add
add
xor
lock
sub
xchg
lret
cltd
addb
dec
add
jb
mov
insl
fsts
sub
jl
add
push
hlt
xor
adc
dec
or
add
aad
add
jle
jnp
movsb
add
outsb
sbb
xchg
jno
dec
lods
pop
les
dec
pop
inc
addb
inc
inc
pop
push
add
add
add
ss
adc
jnp
insl
xchg
std
jl
insb
mov
dec
mov
push
imul
sarl
sbb
shl
mov
add
mov
add
clc
gs
rclb
jns
inc
out
lcall
adc
loop
add
arpl
push
dec
in
inc
inc
mov
pusha
mov
pop
cmc
inc
les
mov
gs
mov
add
in
add
add
cmp
jo
add
jns
mov
add
sub
add
mov
pusha
outsb
js
inc
dec
std
jg
pop
andl
ja
add
cmpsb
add
out
sub
add
cmpsl
push
add
rep
dec
sbb
push
add
or
inc
mov
mov
mov
dec
mov
test
insl
mov
jno
sub
add
aam
fstps
add
mov
lahf
sbb
dec
mov
out
cmp
idivb
xchg
cmpsl
xor
or
add
mov
push
or
add
add
sahf
dec
addb
pop
cmc
xchg
pusha
or
add
xchg
xor
addl
add
add
shr
dec
insb
jnp
jge
or
frndint
sub
add
dec
push
pop
mov
add
popf
add
add
in
imul
int
mov
ljmp
shll
dec
sarl
or
add
add
add
jne
nop
inc
adcl
lock
popf
mov
add
rolb
addb
inc
ljmp
add
scas
add
mov
pop
push
xchg
js
outsb
repz
push
mov
mov
add
add
movsl
jns
inc
pop
shrl
stc
int3
pop
dec
arpl
xor
das
jnp
mov
stc
add
dec
mov
pop
mov
leave
imulb
add
lock
jg
mov
clc
shll
push
test
add
add
aaa
dec
inc
fldl
inc
bound
int
inc
std
jg
push
xor
add
xlat
out
fiadds
and
add
test
and
add
xchg
add
inc
addb
mov
adc
in
rorb
add
insb
insl
push
movsl
mov
add
mov
mov
add
add
iret
loope
pop
push
setle
cli
ret
adc
adc
lods
add
ret
sahf
mov
mov
add
or
adcl
lds
mov
add
dec
scas
add
movsb
add
mov
add
daa
and
add
pop
add
add
sbb
pushf
add
add
jl
add
add
out
ret
mov
aam
pop
rclb
or
add
dec
cld
fistpl
mov
push
lea
pop
into
dec
inc
cmp
xchg
sbb
add
mov
push
dec
clc
jns
lret
mov
iret
lods
add
in
mov
add
add
jae
pushf
outsl
rcl
dec
popf
cmp
add
add
add
dec
lahf
xchg
add
lods
adc
cmc
xchg
inc
push
mov
call
dec
xor
decl
popa
cltd
fsubr
mov
push
dec
xchg
cli
and
add
cli
dec
out
ljmp
pusha
les
and
add
pop
pop
sbb
das
movsl
ds
cmpsl
push
in
lret
or
add
dec
push
fidivrs
pop
xchg
push
and
sub
push
add
add
sbb
or
add
fsubrl
and
sub
add
dec
sub
fcoms
xchg
add
add
mov
rcrb
push
add
mov
mov
lods
pop
jmp
xchg
arpl
xchg
inc
adc
sub
add
add
call
nop
in
push
add
or
add
inc
sbb
add
pop
addr16
pop
jo
xchg
xchg
daa
js
les
push
add
push
fistpll
bound
insb
mov
cmp
pop
jae
aas
add
dec
jecxz
imull
call
push
add
into
sbb
add
jb
xor
mov
or
add
jecxz
cltd
mov
pop
sub
add
mov
stos
add
lods
add
cli
enter
rolb
mov
dec
ss
inc
mov
flds
xchg
pop
dec
out
pop
or
add
mov
sbb
add
shll
xlat
pop
pop
andl
jle
inc
adc
add
fs
sub
add
sbb
clc
mulb
jno
lds
add
pop
bound
add
shlb
ret
aam
stc
cmp
mov
mov
lock
or
add
in
ret
add
repnz
sbb
fists
in
jae
test
add
add
lahf
sti
inc
cmpsb
add
scas
sub
add
push
xchg
rolb
add
xchg
push
add
data16
insl
sub
cmp
xor
clc
sub
repnz
or
mov
xchg
ret
add
jecxz
lea
rcrb
dec
imul
add
movsb
add
fs
add
jecxz
sub
xchg
sbb
arpl
testl
sub
jns
add
add
or
add
mov
ret
inc
mov
cmp
add
testb
test
add
add
mov
add
shlb
inc
stos
xchg
sub
add
add
rorb
add
mov
arpl
sub
add
sub
add
insl
aaa
mov
and
add
xor
add
sbb
add
movsl
fstpl
imul
add
xor
xchg
or
outsb
dec
mov
out
sbb
int3
mov
add
test
add
add
or
add
cmpsb
add
inc
adc
ljmp
add
stos
pop
ret
add
inc
push
aam
int3
jle
add
mov
mov
pop
mov
push
add
cmpsl
movsb
add
push
pop
mov
scas
xchg
xor
jo
jle
or
stos
sub
mov
add
xchg
adc
pop
xchg
push
fsts
xor
jmp
add
sbb
xor
adc
addb
mov
push
testb
add
sub
add
mov
add
mov
fcmovnbe
mov
data16
add
adc
icebp
or
add
int3
push
mov
pop
xchg
ficoml
add
mov
add
dec
mov
add
inc
loopne
push
add
or
add
int
dec
pop
inc
push
leave
xor
cmp
cmp
stos
add
dec
outsl
push
cbtw
cwtl
lock
pop
or
add
leave
and
add
add
daa
pop
jmp
add
inc
push
rcll
decl
lods
addb
inc
sub
gs
inc
sbb
popa
inc
imul
push
into
mov
mov
add
push
test
sarl
or
add
data16
out
icebp
lret
and
push
mov
add
or
add
add
mov
mov
add
lahf
movsl
scas
clc
sti
pushf
add
inc
pop
or
add
mov
sbb
add
scas
mov
add
lsl
cld
aaa
aas
insb
mov
pop
sbb
in
jge
leave
or
mov
int3
mov
mov
cmp
inc
repnz
mov
add
pop
push
add
mov
add
je
cmp
add
sbb
or
add
arpl
push
movsl
or
xchg
mov
lods
mov
addb
aad
add
jl
pop
cmpsl
pop
xchg
mov
pop
pop
jbe
jg
adc
sbb
xchg
outsb
cli
push
cltd
xor
add
or
add
adc
add
pop
jne
int
mov
mov
add
xlat
pop
jns
push
repnz
add
sbb
add
out
rcrl
imul
xchg
cmp
in
das
mov
mov
adc
popf
std
ja
arpl
sbb
pop
pop
sbbl
scas
mov
add
test
add
rorb
nop
jl
das
lret
or
add
and
aam
ret
add
add
add
cli
xor
inc
testl
and
add
jg
inc
cld
mov
frstors
xchg
push
subl
add
pop
cli
mov
inc
dec
xchg
pushf
outsl
or
std
repz
aaa
pusha
mov
imul
or
add
rcll
add
call
and
pop
adc
loop
lcall
fucom
ficompl
jno
mov
add
cmpsb
add
push
xor
sbb
bound
push
pop
add
add
inc
int
fcoml
js
xor
jecxz
fcomi
push
sub
add
out
hlt
and
arpl
cmp
push
jl
and
add
notl
add
pop
cmp
add
daa
xor
cmp
xor
inc
adc
add
or
loopne,pt
mov
sbb
mov
stos
add
test
add
add
mov
adc
add
xchg
cltd
fdiv
sbb
mov
hlt
mov
adc
add
add
int3
clc
mov
decb
mov
test
bound
add
and
add
push
loope
or
gs
pop
mov
pop
and
add
add
bound
jmp
jle
add
mov
add
push
fwait
dec
push
out
js
mov
lahf
outsb
adc
jnp
jae
inc
daa
or
rcl
mov
add
jns
pop
orl
add
loopne
insb
mull
push
je
push
cmp
inc
mov
loope
leave
popf
jne
mov
mov
test
test
add
addb
in
sub
movsl
pop
les
xor
loop
fmul
adc
add
sub
add
movsl
xchg
xchg
ljmp
add
enter
add
addb
xor
xor
into
imul
xchg
xor
mov
rorb
xchg
add
or
xchg
add
int3
add
add
add
cld
mov
stc
add
add
lret
inc
jp
shlb
xchg
inc
aad
xchg
lcall
add
das
adc
decb
std
out
fwait
add
add
stc
jg
xor
or
add
cmc
repz
mov
sahf
fmul
jb
dec
cmp
pushf
inc
cwtl
xchg
inc
out
xchg
xor
cld
pushf
insl
ja
popf
sub
mov
add
pusha
sub
add
mov
add
add
cmp
inc
jne
imul
sub
stos
sti
dec
add
pushf
in
push
xchg
aaa
punpckhbw
add
mov
add
mov
xor
int
xchg
icebp
iret
daa
stos
add
je
cld
push
sub
add
sub
add
scas
add
in
jnp
int
notl
mov
and
add
push
add
or
add
mov
aaa
sbb
push
sbb
cmpsb
add
repz
xchg
add
cmpsl
fwait
cmp
inc
and
add
inc
xor
jp
jecxz
enter
divl
fcomps
pushf
ljmp
cmp
lea
fbld
mov
loope
sbb
out
cmpsl
scas
push
loop
add
add
add
rcll
in
mov
int
imull
mov
and
add
pop
cmpsl
adc
rcrl
push
ja
out
pop
aaa
fstps
add
add
add
icebp
lock
mov
mov
add
in
add
int3
xor
xor
rolb
outsb
push
mov
jne
pop
pop
inc
int
add
std
loopne
adc
hlt
insl
or
mov
add
pop
cmp
pop
pop
loopne
or
add
lds
add
push
pushf
push
js
dec
mov
add
sbb
lahf
imul
repz
add
inc
popa
daa
rcrb
or
repz
xor
dec
test
add
push
addb
test
mov
add
dec
pop
addb
jae
xchg
add
into
fsubs
add
or
adc
lds
test
add
adc
mov
add
push
add
add
imul
add
out
call
mov
add
daa
stc
sti
faddl
lcall
add
std
flds
sbb
vunpcklps
fcomps
pushf
jp
add
sti
dec
or
add
les
lret
push
in
push
testb
push
addr16
jle
mov
add
pushf
cmp
push
std
cmp
add
add
add
les
cmpsl
ret
add
add
ret
inc
mov
add
lahf
imull
add
jae
xlat
outsb
lds
jnp
out
push
mov
add
movsl
mov
xor
in
repnz
adc
push
or
add
mov
jae
pop
adc
out
cbtw
pop
cmp
mov
add
add
add
add
aas
jmp
push
lods
data16
dec
aad
add
out
cmp
jb
stos
add
sub
add
xchg
lcall
dec
je
je
mov
add
mov
mov
inc
test
daa
lahf
sti
in
jns
lret
xchg
add
mulb
add
shll
pusha
inc
sub
adc
dec
mov
in
push
jae
push
outsl
mov
ljmp
cli
xchg
mov
add
fldl
flds
add
test
add
sub
pop
out
movsb
add
fidivl
or
add
or
sbb
sarb
xchg
lods
add
mov
add
add
jge
sub
test
add
pop
into
mov
in
xor
cmpsl
bound
outsl
cmp
lock
add
push
adc
push
jg
rcr
aad
out
pop
mov
add
movsl
xor
mov
movsl
jmp
aaa
mov
stc
mov
add
push
aam
jp
aam
rcl
sbb
sarb
rcl
sbb
add
and
add
adc
sub
add
aas
pop
xor
add
pop
loopne
add
test
add
fnsave
imul
mov
add
mov
mov
push
mov
xchg
popf
mull
jle
mov
add
call
out
xor
mov
aad
mov
loop
and
add
outsl
dec
icebp
test
add
hlt
imulb
call
inc
in
cmc
mov
add
movsl
sub
mov
add
test
add
push
outsb
and
and
sub
add
sub
add
insb
pushf
iret
mov
jg
push
cltd
sub
rorl
xchg
sbb
jne
lcall
test
pop
sbb
aad
add
cltd
cmpsl
sahf
add
lods
add
mov
add
mov
add
push
pop
and
mov
add
add
dec
sahf
imul
repz
cltd
mov
cmpsl
sub
add
add
cmpsb
add
fldl2e
or
add
daa
stos
or
xchg
add
add
int3
repz
add
out
out
lds
add
jnp
adc
mov
fildl
add
pop
mov
fisubl
add
adc
add
test
add
js
add
mov
add
mov
in
mov
add
add
or
add
in
cmp
icebp
mull
dec
mov
mov
ficoms
add
jg
add
hlt
repnz
add
and
or
add
iret
jge
sub
ret
nop
cmp
scas
add
fbstp
lock
adc
outsl
outsl
or
add
inc
js
add
bound
sub
add
add
or
inc
movsl
aad
add
psubd
pop
insl
ficoms
push
orl
imul
add
add
cmp
add
retw
dec
shlb
jae
popf
out
scas
imul
in
sahf
adc
iret
sub
add
inc
xchg
stc
or
notb
cmpsl
aas
add
add
scas
push
test
test
add
test
add
pusha
push
add
sub
add
sbb
sub
add
pop
inc
add
add
pminsw
imul
into
sbb
add
or
add
outsb
mov
add
addb
xchg
cmpsl
pop
cmp
mov
mov
add
jnp
cmp
add
cli
div
mov
pushl
mov
addr16
pushf
add
push
adc
dec
je
mov
push
addb
mov
pop
cmp
mov
lret
cmp
jns
mov
aam
pop
pop
inc
jge
fidivs
cmp
sub
js
loopne
and
add
movsb
add
mov
pop
popf
jmp
add
rclb
push
rcl
dec
mov
add
jnp
int
mov
add
sbb
jmp
sti
fiaddl
cmp
add
out
dec
mov
add
sub
add
jns
mov
fstl
sbb
ja
dec
cltd
jne
mov
add
in
test
add
add
pop
cltd
pop
push
mov
fs
cmp
adc
les
movsb
add
sub
repz
push
js
mov
sbb
mov
xchg
add
out
int
pop
jns
push
lret
jg
mov
popa
add
mov
insb
mov
add
in
in
inc
scas
xchg
out
mov
inc
repnz
rol
hlt
fs
cmc
push
into
cmp
and
stos
sar
inc
mov
out
aas
cmp
add
jl
add
add
mov
xor
jns
and
inc
adc
sbb
in
push
in
gs
mov
add
ffreep
sub
add
xor
ret
add
popa
cmp
and
add
cmp
push
add
push
add
add
addb
fwait
stc
aas
push
in
dec
jp
fisttpl
xchg
mov
insl
sub
bound
cmp
imul
adc
add
xor
add
pop
add
in
add
popf
xchg
pop
ljmp
push
add
xor
insb
dec
add
add
jmp
sarb
fidivrl
mov
add
mov
add
repnz
add
add
add
je
adc
push
xor
test
add
pop
lahf
std
xor
js
cmp
add
jmp
cwtl
add
adc
inc
int
aad
xchg
inc
inc
sub
add
negb
add
in
addb
add
popf
repz
pushf
mov
mov
add
cmp
sbb
add
dec
sbb
repnz
pop
jne
sub
add
push
in
add
pushf
decb
xchg
jp
clc
aas
ret
add
fxsave
add
add
adcl
addr16
ds
adc
add
add
sub
add
fnsave
mov
jmp
add
xor
pushf
adc
ret
jbe
add
xor
js,pt
popa
jbe
loop
call
out
test
mov
std
xchg
mov
add
int
add
dec
pop
in
push
xchg
rcrl
insb
fcmovbe
pop
test
add
imul
rcrb
or
call
stc
hlt
movsl
add
sub
add
add
cmpxchg
jno
adc
arpl
fsts
add
xor
fistpll
add
test
add
mov
push
add
aad
hlt
cld
in
cmpsb
add
dec
cmp
mov
repz
ficoml
leave
push
sub
add
xchg
cmp
call
dec
lock
inc
xchg
or
adc
aad
mov
add
jl
aaa
sub
add
add
addr16
decb
jae
lods
and
add
mov
sub
add
dec
int3
inc
jbe
jge
add
scas
add
jmp
mov
mov
add
fstp
cmp
pushf
subl
data16
mov
test
sahf
cmp
idivb
leave
mov
ss
in
jl
testb
les
add
fildll
add
and
and
add
imul
fildll
add
insb
addl
addb
in
pushf
adc
test
fcoms
dec
jo
xchg
add
adc
or
mov
popa
loope
cmp
jle
fs
stos
xlat
loop
arpl
lret
add
add
cwtl
lea
loope
xchg
add
mov
inc
movsl
adc
nop
movl
movsb
add
bound
pop
loop
fsubrl
push
enter
add
jecxz
add
fnstsw
pushf
or
add
add
sbb
add
inc
leave
iret
pop
inc
jnp
adc
int
add
lahf
cld
pop
inc
push
insb
push
add
push
cmp
mov
xchg
add
mov
add
pusha
xor
imul
push
push
xchg
mov
imul
mov
add
sub
lcall
add
rcrl
cmp
dec
mov
add
dec
mov
add
add
add
xchg
inc
sbb
shlb
add
sub
add
add
jg
cmp
mov
dec
sbb
repz
lahf
add
pop
mov
add
jae
jo
repz
jg
daa
test
add
ret
adc
add
add
cmpsl
addr16
add
add
xchg
xchg
into
fcmovbe
mov
sub
inc
test
add
out
pusha
mov
cmp
add
mov
add
sbb
mov
add
and
add
out
sbb
push
add
ret
stos
mov
add
lods
add
std
dec
addl
add
mov
jno
ficoml
jmp
sbb
mov
xor
xor
or
add
or
add
mov
mov
add
stc
mov
add
add
mov
ljmp
int3
out
xchg
push
inc
jl
fucomi
lock
jno
arpl
ret
add
jbe
xchg
add
dec
mov
push
int3
inc
out
insb
aas
add
xor
out
loop
pusha
inc
loopne
add
ljmp
add
call
xor
in
xchg
sbb
negl
std
and
add
push
jnp
mov
xchg
lret
sbb
sub
add
push
addb
in
stc
shl
xchg
jmp
lods
add
ds
in
insl
and
add
jb
addb
inc
dec
ret
xor
pusha
fs
add
pusha
scas
add
addb
insb
movsl
pop
xchg
xchg
mov
or
add
outsl
fwait
mov
movsb
add
inc
lahf
push
adc
or
push
outsl
pop
inc
inc
mov
xchg
in
jne
pop
pop
jo
inc
ljmp
lret
imul
pop
loope
movsl
mov
add
or
add
dec
fstpt
pmaddwd
imul
das
push
inc
lret
lods
or
dec
dec
mov
cmp
pop
mov
or
add
mov
fstps
sbb
jbe
decb
xchg
cli
je
dec
mov
add
sub
imul
add
fcmovbe
jecxz
xchg
dec
mov
aam
mov
add
add
adc
shll
das
outsl
cmp
pop
out
and
iret
lret
dec
dec
pusha
jno
jl
lds
inc
sar
jp
sub
add
push
xor
mov
push
add
lahf
mov
add
push
sahf
jge
mov
and
cmp
pop
stc
and
adc
fisubrs
inc
sbb
subl
addl
add
jo
add
mov
dec
inc
into
or
jmp
add
iret
xor
ss
aam
add
jg
mov
fsubrl
jg
imul
add
add
pop
add
aam
fsub
mov
add
lds
add
arpl
jns
rorb
inc
adc
add
montmul
cmpsb
add
lods
inc
aad
dec
popf
and
add
dec
int
cltd
fldenv
loope
push
adc
sub
add
add
out
xor
outsl
inc
sub
add
sbb
fnstsw
jle
divb
fnstenv
inc
jns
mov
andl
test
mov
add
add
arpl
add
loopne
iret
sbb
sti
push
sbb
add
adc
mov
popf
addb
sahf
aad
mov
pop
or
add
adc
stc
movsb
add
xchg
or
add
mov
rorb
lods
add
fidivrl
add
mov
or
add
fimuls
push
cmpsl
push
mov
add
pop
push
mov
add
out
ret
addb
arpl
gs
dec
cmp
in
into
jle
mov
adc
fstpl
cmovo
out
notb
jp
aam
add
lock
xchg
add
xor
mov
add
jo
mov
add
add
add
fisttpl
add
call
add
mov
xchg
add
adc
inc
shll
xchg
add
xor
in
cld
pushf
mov
add
mov
adc
pop
test
mov
mov
in
aas
mov
ds
mov
lock
data16
add
add
jnp
or
add
adc
sub
add
les
add
enter
dec
lods
shll
mov
add
add
insb
lds
add
xchg
inc
lods
cmp
add
outsb
clc
adc
pop
daa
sahf
jge
adc
adc
in
fisubrs
add
fiadds
pop
xchg
xchg
cmc
ficomps
pop
cld
mov
enter
or
add
scas
popa
dec
in
loop
out
rcr
xchg
or
add
ss
mov
cmc
inc
mull
add
jns
mov
iret
lret
adc
add
add
ja,pt
fstl
xor
add
out
popa
call
pop
mov
test
add
dec
cmc
jbe
sub
adc
fisubrs
pop
xchg
or
add
or
add
pop
pop
add
xchg
filds
sbb
lea
ja
icebp
sarl
add
mov
gs
shlb
int3
dec
add
sbb
adc
out
add
add
cmc
jmp
movsb
add
incb
jmp
add
dec
out
das
push
mov
add
cmp
sti
pop
outsl
fidivl
je
jmp
fiaddl
add
insl
xchg
stos
pop
sbb
jae
adc
or
add
push
or
mov
add
icebp
lcall
daa
add
add
and
add
pop
inc
mov
dec
ja
aad
add
add
shll
add
lods
add
sbb
cltd
push
rol
dec
cmpsl
mov
fisubrl
add
mov
add
dec
and
neg
mov
lock
insb
movsb
add
and
add
push
add
or
xor
add
xor
push
fcmove
imul
add
out
rorl
add
imul
fistpl
or
adc
inc
lods
add
sahf
bound
add
push
popa
push
popf
cmp
cmpsb
add
push
mov
add
data16
push
push
les
add
iret
fs
pop
dec
jnp
cmp
xor
pop
inc
enter
xchg
in
jnp
mov
mov
subl
add
jno
or
or
cmp
mov
add
jne
leave
pop
notl
imul
add
add
or
lods
cmp
movsb
add
mov
sbb
addl
add
xchg
repnz
xchg
add
add
ffree
inc
adc
add
aad
add
pop
call
mov
push
nop
fisubrl
add
lcall
dec
lods
or
xchg
inc
out
sub
add
out
add
enter
ds
push
movsb
add
dec
jle
adc
mov
fildl
add
std
fucomip
mov
push
imul
fimuls
sub
add
stos
add
cmp
xchg
add
adc
test
add
add
pop
inc
mov
pop
in
jmp
add
xor
daa
mov
cmc
sbb
leave
xchg
dec
adc
jg
bound
or
add
movsl
cmp
mov
sub
xchg
xor
dec
add
xor
push
pusha
dec
ljmp
cmpsl
icebp
pop
xlat
arpl
push
or
add
push
add
add
test
add
add
add
push
add
xchg
inc
add
cmp
jl
xor
shlb
sbbl
mov
add
popf
outsl
insl
inc
push
inc
adc
xchg
pop
mov
fdivrs
cmp
xchg
out
in
mov
lret
outsl
ret
ds
std
in
dec
adc
jae
inc
bound
sbb
addb
pop
mov
imul
imul
inc
xor
lods
add
popf
in
addb
sub
add
dec
mov
hlt
cmc
jnp
or
add
loopne
xor
insl
in
push
pop
sbb
mov
add
test
add
add
sub
pop
test
pop
cmpsl
fstpt
mov
inc
xchg
pop
fstps
push
add
test
or
add
je
adc
mov
add
cmp
lods
inc
add
jb
and
add
xchg
aas
pop
lock
and
push
addr16
xor
mov
add
shll
xchg
bound
sbb
pop
in
jecxz
add
bound
push
rorb
add
in
add
test
mov
popa
inc
and
add
dec
sbb
imul
cltd
ret
data16
add
and
add
push
add
xor
lcall
add
cmpsl
sbb
add
and
add
clc
jge
sub
out
fwait
inc
jo
std
adc
add
add
push
mov
lods
add
or
add
xchg
mov
add
js
xchg
add
pop
or
add
mov
add
in
pop
sahf
inc
cmp
add
cmc
sbb
pusha
cld
jmp
jl
push
lret
sbb
in
aaa
icebp
add
add
mov
add
and
add
xor
fwait
cwtl
cmp
mov
add
inc
mov
add
lea
xor
cmp
add
adc
pop
dec
and
add
cmpsl
pop
rcrl
add
push
cmp
addl
add
pop
je
insb
mov
mov
fs
adc
push
ljmp
out
mov
push
jp
adc
jl
sub
out
add
loopne
addr16
push
xchg
pop
mov
imul
or
add
cmp
inc
shrl
add
add
cmp
int3
mov
pop
mov
add
mov
clc
mov
lods
add
je
addb
iret
cmp
xchg
push
cltd
sub
add
test
push
add
jl
adc
mov
add
adc
mov
add
fisubs
enter
daa
mov
outsb
shll
mov
add
mov
add
jbe
je
clc
xor
sub
sbb
fisubs
icebp
mov
pop
dec
jg
cmp
mov
add
mov
add
push
std
add
maxps
in
pop
loope
ffreep
cmp
add
or
add
dec
int3
stos
icebp
std
ss
sti
notl
outsb
push
scas
add
les
pusha
push
pop
sbb
jmp
xchg
xchg
mov
jb
sahf
or
add
sar
jl
add
decb
popa
insb
std
pop
and
add
insb
cmp
mov
adc
add
sub
add
inc
out
cmc
mov
mull
and
add
aas
sahf
inc
push
daa
push
sub
add
jnp
add
cmpsl
pop
mov
add
sub
subl
add
xchg
sbb
movb
and
mov
int
movsb
add
outsl
jae
push
add
or
roll
add
mov
jmp
pop
mov
icebp
faddl
outsb
push
pushf
xor
icebp
mov
add
push
add
in
add
mov
add
add
sbbl
shrb
ja
sub
add
push
aad
pop
outsl
or
cmp
xchg
lods
lods
lret
out
clc
jp
dec
jne
les
mov
add
sbb
test
add
add
mov
lret
mov
add
sub
dec
fs
popa
xchg
jne
pop
mov
mov
jg
add
sub
insl
je
addb
inc
ret
add
cmp
arpl
add
lods
mov
addr16
scas
add
xchg
pushf
xchg
mov
add
int
ret
mov
add
imul
mov
add
add
push
mov
mov
adc
push
add
in
dec
sub
add
inc
iret
or
add
xchg
xchg
pop
sbb
popa
xchg
add
add
je
lahf
pusha
lock
add
add
test
xor
push
add
mov
add
adcl
sub
add
add
adc
add
in
mov
dec
inc
dec
mov
add
pop
addr16
rcr
loopne
xchg
mov
add
cmp
mov
in
imul
cmc
in
sub
rolb
adc
xchg
push
xor
or
mov
clc
in
add
add
xchg
adc
add
mov
add
dec
pmaddwd
test
add
inc
leave
jbe
xlat
addb
xchg
movsb
add
mov
dec
out
sub
in
jnp
pop
lret
jl
leave
pop
push
fdivrl
gs
aaa
cmp
inc
jb
inc
popf
push
cmp
dec
push
cmp
or
add
lea
sbb
add
xor
daa
pop
add
push
inc
push
sub
add
push
imul
add
dec
adc
sub
add
add
sbb
add
pop
jo
int3
and
add
push
aas
mov
add
jp
push
inc
test
add
das
out
add
je
add
add
add
icebp
outsl
jo
pop
ja
ficoml
popa
sbb
add
or
add
ret
or
add
mov
add
dec
mov
mov
add
jo
push
pop
or
dec
cli
sbb
sbb
std
mov
mov
pop
repnz
add
mov
add
or
repz
sbb
dec
cld
lds
stos
imul
add
mov
xchg
testw
xchg
stos
cmp
cli
xor
inc
mov
add
sub
addr16
add
mov
sub
add
ret
je
adc
lock
out
in
push
daa
aaa
xchg
ret
aaa
push
cltd
mov
test
jmp
mov
fld
pop
and
and
add
cmp
and
add
notb
in
or
add
mov
sahf
or
add
outsl
jbe
into
push
mov
inc
lret
faddl
add
push
mov
add
push
pop
jnp
add
push
add
or
add
xchg
dec
ljmp
stc
adc
adc
jmp
daa
mov
add
nop
js
rclb
add
aad
shlb
mov
mov
xchg
add
cltd
out
mov
add
pop
xor
out
inc
jb
sbb
xchg
add
in
adc
lcall
mov
pushf
loop
loope
sbb
fidivrs
add
mov
scas
add
fcoml
roll
inc
dec
fsubrp
push
mov
jns
ficompl
push
movsb
add
cltd
cld
inc
daa
fidivrl
cli
test
pop
cmpsl
cmp
sbb
inc
and
add
mov
add
add
add
add
inc
sub
add
fimuls
and
aad
add
aaa
inc
jle
hlt
inc
jb
pop
icebp
push
ds
dec
and
add
test
add
addb
jae
sub
stos
add
add
repz
add
mov
add
aam
fstpl
add
pop
cmp
lds
sbb
decb
add
mov
addb
pop
pop
sub
add
daa
dec
imull
mov
cltd
test
add
xor
jae
or
clc
pop
xchg
add
outsb
cwtl
rcrl
mov
adc
add
aad
shrb
mov
add
pop
push
in
imull
mov
xchg
sbb
stc
jmp
add
lods
add
fadds
add
ret
aas
scas
sub
add
mov
push
addb
xchg
add
push
aaa
hlt
aaa
jb
in
jp
aas
into
sbb
mov
add
fld
push
jae
test
add
in
or
sbb
mov
add
add
mov
add
je
add
mov
xchg
and
add
mulb
add
outsl
cmp
mov
decb
js
sub
adc
push
arpl
dec
fdivrs
stc
sbb
nop
pop
hlt
nop
stos
jg
cmp
jg
inc
call
mov
add
add
bound
mov
add
add
jns
out
xor
movsl
mov
add
add
jmp
xchg
pop
add
add
xchg
cmp
add
push
cmp
pop
inc
jg
jle
pop
sbb
mov
ja
js
add
mov
enter
add
cmpeqps
nopl
fs
fcomps
cmp
dec
dec
pop
out
mov
add
add
jecxz
mov
cmp
mov
int
les
add
test
mov
add
sbb
mov
add
pop
outsl
or
add
mov
aad
add
cmp
mov
add
scas
add
xchg
inc
lret
pop
add
add
fsubrl
lock
out
pop
js
popf
daa
bound
and
addr16
add
jp
dec
rolb
mov
or
cmpsb
add
pop
mov
lcall
in
test
add
mov
add
repz
dec
sti
jle
sub
add
mov
stos
mov
push
stos
iret
daa
dec
xor
leave
pop
cmc
xchg
mov
js
add
inc
test
repnz
mov
adc
icebp
and
enter
add
movsl
adc
repnz
mov
lret
add
mov
add
add
mov
fiadds
inc
and
add
sub
insb
and
mov
add
cltd
mov
dec
loopne
int3
out
xchg
add
cmp
scas
add
mov
and
add
movsl
lahf
add
add
stos
mov
add
mov
or
add
pop
ficoms
dec
push
jns
cmp
jne
xchg
aaa
xchg
scas
jge
cmp
sbb
cmpsl
inc
dec
iret
jbe
cmp
push
subl
add
push
loopnew
enter
jge
and
add
add
lods
add
xchg
add
pusha
into
xchg
mov
add
outsb
test
add
shll
add
xchg
pop
js
fstp
stc
and
add
sti
jo
pop
imull
add
add
into
cld
xor
fildll
out
hlt
int
out
adc
xchg
ja
inc
cmp
xor
lock
dec
fistpl
sbb
sbb
add
mov
fyl2xp1
push
push
push
out
sub
enter
pop
mov
mov
add
add
loopne
jle
sub
popl
or
add
add
add
add
mov
push
aad
sarb
jp
aam
mov
add
add
lahf
outsl
shll
dec
add
add
add
jns
lret
add
aam
pop
ss
xchg
mov
add
and
pop
jmp
add
loope
das
add
pop
pop
das
ja
or
add
push
add
jo
mov
pop
and
add
fstpl
inc
push
add
add
lahf
fcmovnb
mov
jbe
shll
cmp
les
dec
outsb
subl
aam
loopne
adc
negb
mov
imull
add
jle
push
mull
add
xor
add
mov
xchg
jge
mov
xor
mov
add
push
jne
xchg
inc
pop
out
popf
pop
mov
mov
sbb
pop
in
incb
add
pop
scas
add
sbb
mov
add
nop
xor
add
shl
and
flds
dec
sahf
lods
add
aam
dec
add
add
bound
add
push
imul
decb
bound
add
into
mov
add
scas
divb
add
add
add
add
lds
and
add
dec
lods
insl
mov
cld
push
dec
repnz
add
and
add
imul
sti
sub
add
cmp
adc
push
mov
xor
xchg
sahf
fidivl
cmp
pop
loopne
std
shrl
push
test
bound
mov
insl
pop
cmc
push
adcl
fsubrl
add
mov
xchg
lds
jecxz
popa
push
push
addb
gs
movsl
jmp
jnp
add
add
pop
xor
cmp
aaa
and
add
xchg
movsb
add
ficoms
adc
jg
add
mov
mov
and
add
in
xchg
std
cmp
repz
mov
aaa
xchg
sbb
je
out
mov
or
xchg
jg
stos
add
xor
aam
jg
mov
loope
scas
stc
or
cwtl
add
add
mov
lahf
add
mov
js
stos
add
mov
jmp
add
punpcklwd
mov
add
and
add
mov
addr16
ss
scas
call
movb
xor
push
mov
add
ffreep
stc
std
cwtl
iret
fildl
adc
flds
daa
add
mov
pop
cmp
out
add
inc
jo
xor
add
icebp
mov
and
mov
pop
daa
inc
addb
pop
test
add
xor
push
fstp
lock
adc
aas
push
hlt
and
add
xchg
imul
lret
or
xchg
and
add
cmp
leave
negb
dec
xor
xchg
inc
mov
sub
sbb
inc
bound
xchg
add
jbe
out
test
add
imul
xor
push
xor
add
mov
fdivrp
dec
pop
push
lock
mov
xlat
roll
add
js
ds
pop
enter
xchg
filds
lods
pop
push
js
mov
add
pop
popa
pop
cmp
repnz
loop
int
pop
dec
add
mov
add
add
push
pop
xor
mov
add
loopne
inc
sub
add
insb
xlat
mov
and
add
add
mov
lock
jmp
loopne
pop
lret
popf
shrl
add
cmpsb
add
inc
mov
adc
cli
fs
or
sbbl
mov
jb
mov
call
mov
sarb
adc
push
shll
add
test
add
xor
bound
mov
imul
push
add
pop
leave
mov
pop
enter
xor
in
in
dec
popf
mov
jle
pusha
sub
fistpll
adc
std
xchg
add
pusha
mov
add
xchg
sub
add
shlb
add
cltd
or
scas
xor
jge
test
add
cmc
mov
add
xor
ret
add
addb
and
repz
cmpsl
out
in
pop
mov
stc
or
je
add
movsl
out
mov
add
cmp
jp
lret
inc
push
jbe
lahf
jno
and
add
jp
ds
xchg
loopne
sub
add
dec
cld
mov
lret
sbb
rolb
mov
cmp
add
lret
leave
or
rorb
add
lret
stos
add
push
add
in
or
add
inc
or
add
arpl
ror
jns
cmc
xchg
sub
add
push
rol
add
and
add
daa
and
daa
aam
adc
loope
aas
loopne
ret
add
mov
push
jmp
add
xor
push
std
sbb
mov
push
sub
add
ja
cmpsb
add
imul
aam
fldcw
cmpsb
add
add
or
add
pop
lock
mov
or
add
add
insb
jnp
lods
mov
add
cmp
mov
add
loopne
mov
jae
ja
mov
add
cwtl
jge
cmp
pop
cltd
decb
add
outsb
dec
into
jecxz
push
call
xchg
sbb
add
add
repnz
popf
pop
enter
push
out
fcoms
mov
loope
cmp
fiadds
pop
xlat
xchg
cmpsl
scas
add
mov
add
push
add
sub
add
jl
dec
add
mov
jmp
mov
sub
add
jecxz
out
and
add
jb
push
push
lds
addb
mov
lcall
add
loopne
enter
add
mov
add
sbb
xlat
adc
add
add
add
add
add
mov
pusha
xor
inc
imul
xor
cmp
mov
pop
and
testl
aam
addr16
add
adc
add
cmp
or
iret
mov
addb
mov
or
inc
test
pop
and
inc
mov
add
mov
sbb
xchg
push
cmp
scas
push
fiaddl
add
repz
lahf
leave
push
add
pop
aas
loope
mov
fs
mov
add
fdiv
std
frstor
or
sbb
popf
hlt
mov
and
xchg
mov
repz
adc
in
mov
add
jbe
rcrl
test
xchg
fsubrs
lahf
xor
adc
push
xchg
add
add
push
mov
cmp
jb
lret
mov
push
sti
out
cmp
cmc
aas
movsb
add
dec
ret
dec
push
test
add
jge
add
dec
and
jae
add
add
fidivs
pushf
sub
add
sub
pop
pop
loop
pop
out
nop
inc
and
add
jl
add
or
add
cmp
xchg
add
add
add
add
dec
xchg
cmp
inc
into
push
sbb
and
add
add
add
add
sbb
add
jmp
jge
add
jg
and
cmpsl
ret
sbb
add
cwtl
stos
xor
add
pushf
pop
jecxz
stos
add
mov
test
cmp
ds
shrl
insl
addb
je
sub
add
stos
ljmp
loopne
sbb
add
lods
mov
mov
dec
insl
xchg
jl
aad
test
add
test
sahf
out
pop
or
dec
push
sub
add
and
add
bound
sub
add
jo
mov
lock
add
cmc
adc
add
mov
orl
in
jle
lods
add
xchg
xor
mov
mov
jge
les
jmp
add
or
add
inc
dec
jecxz
sbb
lea
pop
js
jb
fisubs
cwtl
jno
add
pop
imull
lret
dec
addr16
jno
and
inc
shlb
pop
stos
int
pop
mov
pop
sahf
cwtl
mov
add
scas
pop
iret
test
add
fistpll
pop
inc
data16
add
notl
add
fwait
orl
push
push
repz
rcll
addb
frstor
xor
loop
add
jns
add
clc
out
fsts
inc
loop
add
aam
cwtl
inc
mov
test
add
xchg
imul
fisttps
add
loopne
dec
pop
scas
add
lret
add
sarl
out
frstor
add
adc
lods
lods
add
jnp
jae
sbb
mov
jae
fildl
inc
pop
shl
add
push
add
cmp
add
pop
rcrb
or
les
fsubs
shll
push
cwtl
mov
movsl
and
add
adc
data16
adc
or
shlb
fyl2xp1
mov
xchg
add
pop
test
jg
add
push
or
add
add
dec
mov
add
mov
cmp
das
sarb
sub
in
push
decb
add
fucomip
inc
pop
dec
fcmovb
test
sub
in
insb
cmpsl
inc
pop
or
add
sbb
push
mov
and
push
in
add
adc
jmp
jb
pop
mov
mov
mov
lock
add
jne
add
ja
ljmp
xchg
or
pop
test
add
xor
xchg
mov
inc
loope
fadds
cmpsl
sub
sti
packsswb
sbb
adc
out
addb
loopw
xchg
jno
or
add
add
jp
add
pop
add
add
mov
jecxz
pop
xor
subl
cmp
add
fdivp
addb
cmp
jmp
jns
fwait
insb
lds
or
add
xor
or
add
in
test
subl
flds
mov
jbe
jp
pop
mov
xchg
xlat
and
jnp
ljmp
dec
movsl
shll
or
add
cmp
sbb
stos
mov
stc
std
movsb
add
lods
add
mov
add
testb
add
into
hlt
ja
sbb
jae
fsubp
movsb
add
inc
lret
lret
xchg
cmpsb
add
mov
ret
lock
out
sbb
add
pop
out
add
sub
sti
dec
xchg
add
adc
inc
test
nop
jp
push
add
addr16
xchg
pop
int
out
repnz
and
adc
cli
popf
or
add
test
sub
add
sbb
pop
sbb
arpl
cwtl
sbb
add
add
mov
add
cld
fistpl
lds
add
cmp
jecxz
pop
fdivs
mov
and
add
add
push
add
add
dec
mov
fcomip
mov
add
add
and
aam
inc
mov
repz
clc
xlat
addl
jbe
sub
sub
add
xchg
enter
add
jle
or
add
popf
mov
add
add
enter
test
add
je
sti
aam
sbb
or
dec
and
pushf
add
add
ret
pop
test
add
cmpsl
and
or
push
add
and
add
add
ficoml
xor
xchg
arpl
loop
xor
sbb
in
mov
repnz
add
movsb
add
push
pop
movsl
and
add
add
mov
jbe
add
adc
cli
sub
pop
mov
add
push
iret
cwtl
pop
stc
testl
mov
push
mov
adc
sbbl
jae
jbe
jge
inc
pop
jg
jecxz
add
shll
xchg
insl
pop
repz
add
adc
gs
add
jae
adc
adc
or
xchg
add
inc
cwtl
sub
add
xchg
mov
int3
add
add
hlt
cwtl
add
add
mov
jmp
push
or
xchg
xchg
adc
add
ret
cmp
inc
lea
mov
or
add
sub
add
sub
add
mov
sub
add
add
mov
push
loop
aad
outsb
jl
sub
add
add
in
jns
out
xchg
out
jp
inc
add
add
push
inc
into
addw
mov
and
add
mov
add
mov
dec
adc
inc
cmp
sbb
jge
scas
daa
pop
loop
mov
add
fisubl
outsl
xchg
int3
out
lret
jg
addb
xchg
daa
mov
pop
mov
sbb
mov
jp
movsl
les
insb
adc
adc
popa
push
and
add
inc
test
imul
jbe
pop
mov
jb
daa
sarb
add
aad
xchg
add
add
popf
jl
jb
jp
adc
add
notb
leave
mov
add
nop
sbb
or
mov
sbb
or
add
sub
add
pop
jbe
add
ds
add
add
mov
add
jns
pop
sbb
clc
int
std
jmp
xor
push
dec
and
mov
add
stos
add
movsb
add
add
sahf
mov
and
add
test
jbe
mov
je
icebp
je
add
xchg
xchg
mov
cwtl
xor
bound
lock
pushf
andl
push
cmpsl
and
add
or
int
mov
add
cmp
add
shrb
adc
pop
shlb
push
add
jle
push
add
dec
add
pop
in
shlb
xchg
cwtl
addl
jb
test
add
xchg
das
pop
lock
fmuls
add
dec
shlb
fwait
add
pop
call
mov
add
dec
xlat
addb
sti
fistps
enter
sub
add
add
inc
jecxz
jb
sahf
gs
shlb
push
filds
inc
rcll
xchg
sahf
jp
sub
shl
rcr
call
adc
addr16
inc
faddl
mov
add
add
mov
fs
add
cmp
adc
add
xchg
insb
xchg
rcl
iret
in
imul
add
rdpmc
push
out
add
leave
ds
mov
das
mov
clc
pop
pushf
out
mov
add
aam
push
adc
pop
jp
push
mov
lds
jo
rcll
js
std
push
pop
arpl
push
and
add
xor
sub
and
add
cmpsb
add
mov
mov
jle
pop
sub
add
testl
cmp
dec
pop
je
lds
xlat
xchg
sti
arpl
ret
xchg
jmp
add
add
aas
mov
mov
add
cmp
pop
negl
ficompl
xor
add
jb
movsb
add
and
add
test
sbb
add
call
loope
jmp
sbb
dec
stos
movl
or
mov
sub
adc
js
fadd
insl
fsubr
icebp
scas
in
or
bnd
sub
add
pop
inc
lods
add
in
pop
out
push
sbb
mov
fstps
test
add
fsubrs
or
jae
cltd
push
cmp
jl
cmpsb
add
ficoms
mov
mov
call
push
insb
xor
add
push
push
int3
push
add
xchg
jg
cmp
ficoml
addb
pop
jns
scas
jp
mov
add
mov
or
add
pusha
addr16
add
or
add
ret
or
fsubrs
add
dec
stos
add
jnp
add
add
pop
mov
mov
add
pop
addl
das
mov
add
test
add
push
shrl
cmp
jnp
mov
add
int
dec
das
arpl
add
lds
jmp
out
loopne
and
add
xlat
cmp
or
add
mov
inc
adc
and
sti
popf
mov
dec
int
push
adc
shlb
add
xchg
pushf
dec
sbb
or
add
add
add
jae
add
aas
add
mov
add
loope
jo
jae
movsl
in
cmp
cli
stos
je
mov
cltd
xchg
or
popf
dec
sbb
inc
push
jmp
xor
push
sbb
mov
add
add
add
fadds
add
cmp
add
cmp
adc
lock
add
pop
shrl
sarl
lret
mulb
add
push
sub
aaa
add
rcrl
push
jns
jnp
jg
xchg
inc
push
out
pop
pop
inc
sbb
add
sub
test
dec
xchg
inc
or
add
inc
jae
push
fildll
repnz
fdivrs
inc
jmp
add
add
cltd
movb
mov
test
add
incl
mov
add
adc
mov
add
jl
add
das
mov
add
into
inc
pop
push
fcomps
add
in
sub
jle
scas
add
pop
mov
add
fucomp
pop
les
pop
jge
sbb
mov
jo
add
lods
jmp
dec
mov
enter
cmp
loope
mov
sbbl
mov
lods
add
aam
pop
out
push
lea
mov
dec
sbb
in
sub
idivb
add
dec
adc
dec
loopne
cmpsl
and
add
add
mov
mov
dec
and
cmc
lods
add
dec
push
and
ret
fisttpll
xor
ja
mov
add
gs
lods
add
adc
add
and
aam
or
add
sti
adc
dec
add
add
imul
out
mov
add
inc
or
int
jo
out
ja
or
add
and
xor
cmp
test
xchg
scas
pop
ret
jb
xchg
mov
mov
and
add
dec
out
mov
pop
fisttpl
fwait
cmp
cmp
mov
aad
add
sbb
out
repz
popa
jecxz
add
pop
dec
ss
ror
ds
mov
add
repnz
xor
insb
lods
add
xchg
shll
adc
fwait
stos
sub
dec
jg
or
xchg
jl
js
out
jbe
imul
andl
mov
cmp
fwait
out
or
add
add
or
mov
add
dec
pop
xor
cmp
cwtl
jp
pop
sbb
dec
mov
add
add
sbb
loopne
add
pusha
inc
lahf
mov
cld
rol
loop
add
repz
dec
xchg
or
add
ret
pop
push
cmpsl
inc
testl
add
lods
add
sub
cmp
in
imul
rol
xchg
sbb
mov
sti
pushl
mov
jbe
cli
pcmpgtw
std
mov
filds
lcall
add
add
cmpsl
dec
add
insb
int3
std
jo
add
add
popa
dec
push
sub
je
jno
mov
add
mov
add
popf
lret
loope
sbb
or
add
add
dec
adc
enter
and
add
aaa
movsl
je
cmp
sbb
add
sbb
add
shlb
add
add
mov
add
sbb
xor
cmc
jno
repz
ljmp
add
mov
add
pop
xchg
lcall
add
add
movl
or
add
push
xchg
dec
dec
push
sarb
arpl
lock
add
fdivr
orl
add
cmp
test
lods
add
push
imul
dec
into
addb
stc
push
dec
jo
xor
in
imul
mov
add
jb
add
add
sub
outsb
insl
pop
lods
pop
pop
clc
and
add
sahf
inc
je
cmp
push
and
add
pop
cli
enter
addb
pushf
lret
lods
jp
rclb
ljmp
sbb
add
pop
addr16
fidivrl
jmp
add
add
xchg
ficoml
dec
add
or
add
add
icebp
and
and
add
cmp
fldcw
add
xchg
add
rorb
mov
dec
cmp
xor
pop
mov
or
add
xchg
aad
and
add
sarl
mov
add
sub
add
dec
add
out
jno
fiadds
add
stos
add
add
imul
add
mov
enter
in
lret
cmp
jp
add
enter
add
xorl
add
add
mov
pusha
or
add
nop
mov
add
lods
add
sub
mov
jecxz
ds
adc
sub
add
out
loop
add
jp
lods
add
jle
or
add
xchg
mov
enter
add
sub
add
inc
sub
jae
fcomps
adc
cld
popf
pop
cmp
or
inc
or
add
mov
pop
leave
lds
add
addb
test
add
dec
repz
cmpsb
add
out
outsb
shlb
loope
and
add
insl
jecxz
add
into
outsl
jmp
add
stos
add
mov
add
add
aam
in
jg
or
add
xchg
sub
insl
pop
loop
push
mov
add
je
loop
loopne
add
lret
mov
cmc
gs
adc
sub
add
add
sbb
pop
iret
lret
mov
sub
stos
add
pop
fldenv
pushf
inc
sbb
push
add
add
cmc
jo
add
mov
adc
rcr
and
add
nop
push
add
add
fiaddl
shrb
mov
dec
xchg
cmpsb
add
clc
outsl
sub
push
sbb
aas
dec
mov
add
jge
les
sbb
in
inc
int3
imul
ljmp
mov
out
pop
xor
add
add
add
xchg
mov
add
add
test
xchg
add
add
push
test
add
sub
add
adc
push
imul
push
mov
add
xor
fsts
cmpsb
add
shll
mov
add
fnstsw
dec
out
ds
push
xchg
mov
clc
mov
and
mov
add
push
add
add
sub
mov
das
dec
add
adc
mov
movsb
add
fdivrp
nop
mov
add
enter
add
out
cmp
enter
add
jae
cmp
add
scas
add
cltd
lret
das
mov
int3
jle
cmpsb
add
inc
mov
add
jb
add
add
add
add
push
inc
out
pop
in
push
and
add
popf
xchg
push
xor
mov
stos
add
mov
mov
add
das
mov
mov
pop
popa
xchg
add
mov
add
ja
icebp
scas
sbb
lock
add
or
aad
cld
jle
js
outsl
mov
add
sbb
add
mov
mov
xor
xlat
cmp
sbb
xchg
add
inc
add
cmp
aas
das
lock
dec
mov
mov
pop
fwait
lds
add
fucom
pop
test
nop
ret
push
arpl
pop
pop
jle
adc
lret
jmp
and
add
in
pop
in
pop
inc
xchg
mov
mov
cmpsl
push
jae
aaa
int3
ret
add
add
add
push
ja
out
add
aam
mov
mov
cltd
push
hlt
cld
je
add
xchg
xchg
fisubl
mov
add
add
jge
and
xor
mov
push
hlt
jo
gs
enter
xchg
or
add
and
ss
add
mov
add
push
mov
je
stos
add
push
cmp
arpl
in
out
in
and
add
lret
add
loopne
xchg
push
lea
xor
ds
daa
mov
add
repz
lods
add
bound
sub
mov
add
loop
jmp
scas
sub
ds
pop
clc
mov
mov
js
lods
add
fwait
sbb
mov
add
lods
pop
mulb
add
add
into
repz
sub
add
fxam
sbb
test
add
xchg
test
add
mov
add
push
lcall
or
add
or
add
sub
add
jne
and
add
adc
inc
leave
push
xchg
dec
jb
add
rcr
shlb
call
ficoms
mov
mov
add
pop
jl
xor
and
add
add
add
and
add
loop
sbb
add
adc
inc
cmp
add
dec
xor
aaa
cmp
mov
add
mov
or
add
into
sbb
cmc
orl
add
add
rcr
repnz
and
add
addb
cmp
repz
add
add
add
add
push
pop
test
cmpsb
add
dec
sub
add
stos
adc
sbb
mov
dec
insl
or
add
pop
cmc
add
add
fistpl
insb
cmp
xchg
arpl
mov
sub
mov
inc
cld
fcoml
sbb
stc
ja
add
sahf
imul
add
lock
or
das
add
xchg
add
xor
push
inc
push
push
add
movsb
add
xchg
push
xor
fs
fwait
or
add
add
int3
push
and
add
addl
lock
fnsave
in
add
fstp
ljmp
add
pop
sub
repnz
add
test
add
mov
add
add
sti
cmp
add
inc
jb
dec
xchg
add
cmp
mov
fnstenv
inc
jg
mov
add
jae
add
push
mov
jecxz
or
pop
loopne
leave
sub
mov
sbb
add
pop
mov
lcall
push
pop
add
in
popa
or
add
xchg
push
nop
hlt
add
add
loop
clc
incl
mov
mov
add
add
sarl
jne
xchg
add
add
sbb
lahf
pop
push
adc
jg
mul
in
or
add
add
push
rcl
comiss
cltd
dec
jo
call
push
sbb
add
add
xchg
fnstsw
je
add
inc
repnz
or
vpsubb
add
addl
movsl
pusha
inc
jg
in
lcall
add
add
cmp
add
push
dec
and
pop
sub
stc
mov
lods
push
add
or
add
xor
xorl
add
add
sti
dec
push
daa
dec
jns
mov
mov
insl
nop
pop
mov
imul
push
jbe
addr16
in
add
jns
fisubs
add
popf
xor
cltd
shlb
add
xchg
add
cmp
xor
mov
test
add
in
mov
add
dec
xchg
cmc
mov
ljmp
mov
jle
xchg
imul
add
jno
add
add
add
loope
add
mov
jbe
into
imul
lret
mul
jge
add
pop
sub
or
add
add
jno
adc
ss
dec
jmp
test
add
outsb
ja
shll
mov
inc
mov
inc
pusha
pop
cld
pop
mov
mov
add
hlt
push
add
ret
shlb
add
add
jno
sub
ljmp
dec
popf
mov
lahf
in
pop
int3
stos
sub
add
dec
ja
add
mov
add
add
ret
add
jbe
mov
add
sub
add
add
aad
or
add
mov
add
rcr
iret
xchg
and
add
adc
mov
xchg
cmpsl
sbb
dec
clc
and
add
push
mov
jl
cwtl
std
pop
xchg
test
add
je
cmp
push
adc
bound
mov
movsb
add
inc
ficomps
lret
mov
jg
add
jecxz
inc
mov
push
gs
cld
sbb
lods
add
sub
add
or
sti
jno
lret
xchg
add
idiv
fldl
cmp
add
daa
mov
insb
or
add
xor
and
orl
add
xchg
add
jmp
add
ds
fildl
add
mov
xchg
xchg
imulb
lds
stos
add
mov
lods
sbb
xor
pop
popf
xlat
pop
pop
dec
in
inc
jg
cmp
pop
enter
add
xchg
add
add
insl
stc
xor
test
add
lahf
jp
movsb
add
fldl
dec
out
cld
mov
adc
cld
adc
cli
add
add
push
add
dec
out
sahf
mov
mov
push
push
repnz
xchg
scas
add
pop
jp
add
mov
add
adc
jmp
add
mov
lock
shrl
mov
adc
mov
mov
sbb
pop
pop
imul
push
add
fsincos
xor
jge
fcomps
cwtl
and
add
shll
daa
xor
into
xor
sbb
mov
data16
sahf
hlt
repnz
push
add
pop
push
and
add
xor
mov
cmp
lea
add
mov
add
lds
sbb
adc
sub
add
iret
popf
nop
lret
arpl
add
andl
add
outsb
add
add
add
addb
outsl
mov
inc
loop
add
adc
in
dec
cmp
add
or
adc
mov
add
cli
xchg
jmp
std
pusha
lahf
decl
jl
add
pop
xchg
test
movsl
sahf
cmpsb
add
add
add
inc
xor
rorl
mov
sarb
sub
add
aas
in
cmpsb
add
test
add
stos
int3
pop
or
lcall
roll
sbb
push
add
mov
add
add
push
cmp
jo
fcompl
xor
add
push
jmp
add
push
add
push
shl
xchg
fs
add
out
fwait
rol
scas
add
std
add
add
or
mov
in
mov
add
jmp
pop
xor
adc
and
fiadds
add
sbb
icebp
lds
lahf
ret
call
add
sbb
mov
mov
add
xchg
cmp
add
inc
dec
dec
dec
cmp
outsb
aaa
rcrb
fisubrl
leave
jl
imul
add
add
add
addb
mov
add
jp
pop
pop
push
push
or
add
leave
xchg
enter
xchg
jno
add
add
iret
dec
iret
rorb
add
mov
add
sub
xchg
dec
lcall
add
lea
add
ret
insb
shll
or
into
inc
mov
enter
add
xchg
jmp
add
sbb
loopne
dec
add
push
aad
dec
add
dec
adc
add
pushf
in
mov
mov
mov
add
sub
add
xchg
mov
add
mov
xchg
shr
dec
js
lahf
dec
subl
add
and
jnp
push
addb
out
in
pop
mov
mov
xchg
add
loope
daa
adc
sbb
add
idivb
push
sub
hlt
fs
out
out
dec
int
mov
add
mov
add
into
aaa
jmp
or
add
xor
jb
out
jb
repnz
lds
iret
xchg
iret
les
add
out
out
push
hlt
imul
retw
add
add
je
mov
jbe
add
jb
and
add
fimull
jl
push
icebp
cmp
xchg
mov
add
ds
dec
cld
jg
lret
add
xchg
aad
jno
pop
cmp
add
loope
aaa
sub
in
aaa
das
add
loop
or
inc
loop
lock
icebp
sarb
add
and
lcall
add
add
lret
aam
adc
stos
add
adc
aam
push
aam
xor
mov
adc
jne
mov
lret
sbb
and
outsb
dec
mov
cmp
jbe
dec
in
jl
xchg
daa
lahf
clc
aas
loop
and
add
cwtl
ds
lods
addr16
sahf
addb
or
add
add
add
mov
add
sbb
and
add
push
addl
outsb
das
aas
repz
dec
cmp
add
pop
mov
movsb
add
mov
addb
cmp
lcall
xchg
add
filds
xchg
jae
lea
ds
add
in
mov
add
and
add
dec
sub
add
arpl
xchg
and
and
cmp
ja
ljmp
shrl
add
or
add
xlat
push
ds
xchg
out
jns
inc
dec
fistpll
sbb
mov
sbb
add
mov
xchg
sub
add
push
lret
add
inc
adc
xchg
mov
add
or
add
and
mov
jns
push
fs
dec
add
add
add
or
add
ja
xchg
or
add
pop
dec
adc
lock
jae
push
and
add
xchg
add
jae
clc
pop
push
add
out
pop
mov
add
sub
adc
repnz
adc
rcll
dec
into
add
add
and
add
add
jp
mov
add
add
roll
add
push
add
sbb
sub
pusha
shl
fcmovnu
jecxz
add
stos
add
jae
fsubrs
add
nop
mov
push
mov
add
lods
push
jnp
pushf
mov
add
xchg
sbb
xor
cmpsb
add
pop
fadd
add
add
mov
pop
mov
cmp
and
add
add
sub
add
lcall
add
les
out
inc
xor
scas
add
aaa
data16
add
pop
pop
ljmp
in
and
add
pop
mov
add
mov
mov
out
sub
add
dec
ret
add
or
add
out
stc
xor
jl
jge
jno
add
add
add
shll
stc
or
aaa
xor
ficoml
stc
sarl
shll
push
xor
in
nop
mov
mov
ss
out
mov
in
stos
add
sbb
daa
shrl
ja
add
jno
lea
rcr
addr16
test
add
lret
xchg
add
shl
add
loope
daa
mov
xor
jb
push
arpl
add
loope
or
add
add
add
fildl
fucomp
cli
pop
fs
test
insl
call
add
mov
add
cmp
mov
mov
add
mov
shrb
mov
mov
loope
addr16
dec
sub
add
outsb
pop
mov
mov
lahf
ffreep
mov
push
rol
in
leave
fwait
push
adc
movsb
add
mov
out
add
inc
cwtl
pushf
xchg
add
mov
adc
cmc
mov
add
dec
add
enter
add
jns
fs
cmpsl
pop
xchg
adc
fmull
xor
cld
rol
xchg
add
call
test
add
add
dec
mov
pop
and
sbb
cli
sub
add
inc
mov
mov
add
jb
dec
inc
gs
das
test
add
add
push
call
xchg
mov
jne
push
mov
add
cmp
inc
shl
adc
push
addb
sub
and
xadd
add
push
fwait
std
pop
pop
lock
add
dec
dec
mov
aas
ret
movq
lds
fnstcw
add
sub
mov
cmp
rolb
mov
int
into
imul
sbb
or
add
add
test
add
std
sbb
push
nop
pop
or
add
mov
sti
jp
add
adc
add
mov
cmc
push
dec
xchg
imul
pushf
aam
adc
or
insl
outsl
fwait
mov
adc
add
rclb
sbb
dec
or
add
adc
das
push
mov
adc
ds
adc
jge
xor
add
in
jo
fisubrs
sbb
and
add
imul
add
mov
mov
rorl
add
cli
mov
push
sahf
lahf
into
scas
add
les
rcrl
iret
imul
hlt
aaa
add
bound
pop
lret
mov
add
ret
and
pop
jae
mov
fwait
mov
xchg
mov
int3
insl
rorl
imul
mov
push
xchg
cld
shll
aaa
push
add
iret
sub
addb
movsb
add
out
gs
imul
aas
das
inc
xor
and
mov
jg
mov
test
add
mov
or
add
pop
sbb
lret
cmp
push
aam
ss
add
pusha
mov
addr16
imul
lret
testb
mov
xor
push
add
data16
addb
int
pop
mov
xor
lahf
or
push
mul
adc
xchg
enter
mov
dec
jge
pop
xchg
add
data16
add
sbb
jg
jne
add
addb
ret
fimuls
out
pop
addb
or
add
cltd
lahf
cmp
in
push
add
movb
loop
outsl
mov
cmpsl
jl
add
pop
push
add
sbb
or
test
xor
les
push
mov
inc
add
add
cltd
movl
mov
xor
add
xorl
inc
and
add
scas
in
in
or
add
add
or
in
dec
and
xchg
sahf
addb
sahf
push
add
int3
mov
add
enter
scas
add
and
add
mov
stc
xchg
pop
xor
and
add
mov
add
sarl
test
xor
cld
cltd
mov
mov
int
and
in
nop
fcompl
push
add
add
add
add
add
push
enter
in
movb
call
add
pop
add
xchg
mov
pop
iret
inc
dec
or
add
in
lds
pop
clc
and
add
lds
add
add
arpl
or
jge
cmpsb
add
fdivrl
add
les
loopne
dec
lds
sbb
inc
lret
jl
dec
popf
and
jns
add
mov
add
mov
pusha
stos
push
rcr
leave
jb
std
pop
ss
add
das
push
add
add
jns
mov
cmc
add
add
add
bound
repnz
loope
and
add
push
mov
add
pushf
lods
or
add
sub
add
xchg
aad
add
jl
xor
rcll
pop
ret
adc
dec
and
add
add
mov
add
sbb
repz
dec
pop
js
mov
add
pop
loope
add
add
add
clc
lock
pop
out
cld
daa
mov
add
arpl
add
sbb
dec
mov
pop
scas
add
cmc
pusha
xchg
int3
ds
or
dec
add
cli
mov
add
push
ret
mov
add
add
add
sbb
add
loopne
out
dec
mov
add
call
jecxz
cmp
mov
sbb
mov
repnz
faddl
inc
fidivrl
in
pop
lods
ret
fisubrs
add
pop
in
cmc
fisttps
add
mov
push
pop
xchg
add
adc
add
xchg
movsb
add
mov
mull
add
cwtl
test
add
loope
cmpsb
add
jne
mov
mov
jno
add
or
sub
mov
pop
ficoms
insb
das
push
add
add
nop
imul
jne
or
add
bnd
xchg
sub
and
fldcw
test
add
or
insb
sub
hlt
pop
inc
sbbl
and
add
xchg
std
and
add
adc
lds
ret
add
mov
jmp
add
xor
ljmp
ds
or
jge
jns
and
aam
inc
aam
add
clc
jl
mov
add
add
aad
icebp
pop
mov
add
movsb
add
daa
mov
mov
add
pop
int
xchg
push
add
mov
push
mov
mov
dec
insb
hlt
stos
add
pop
jmp
addr16
or
mov
add
xchg
mov
pop
stos
add
ficoms
inc
bound
inc
pop
sbb
add
push
pop
sub
add
dec
repz
add
insl
mov
cmpl
cmc
and
add
test
add
outsl
movlps
inc
in
push
mov
add
sbb
xchg
jl
test
dec
dec
or
add
shlb
in
fisubs
add
mov
push
xor
and
add
add
pusha
aam
stos
add
pop
jae
repnz
add
push
sbb
adc
xor
out
daa
push
xor
test
dec
je
dec
mov
add
add
adcl
add
inc
lret
out
mov
add
outsb
mov
pop
or
jb
test
jmp
jno
fs
add
mov
add
cmp
pop
ret
or
mov
add
incb
add
pop
and
adc
add
add
mov
xchg
sbb
pop
fisubrl
adc
sub
lret
xor
xor
mov
inc
pop
cmp
pop
xor
mov
subl
adc
mov
in
test
insl
or
add
stc
sbb
add
scas
cmp
add
test
cmp
add
int
rcrb
in
add
add
add
add
std
sbb
jmp
leave
inc
stc
in
stc
xchg
sub
mov
xlat
cmpsb
add
cmp
add
cmp
add
add
pop
stos
add
hlt
add
add
ljmp
add
aas
cmp
mov
add
xchg
jecxz
mov
inc
push
add
add
dec
or
add
add
push
add
jl
cmp
dec
adc
dec
or
add
add
filds
add
faddl
add
leave
stos
adc
add
lret
sti
ja
pop
and
add
je
add
fistl
add
dec
fdivl
xor
addb
outsl
lods
add
jne
and
add
xchg
outsb
mov
add
cmc
dec
and
add
nop
mov
js
lods
add
mov
add
lea
add
jl
cwtl
add
add
push
and
add
sbb
add
add
add
jne
cmpsb
add
xchg
out
pop
ds
flds
add
test
add
xor
add
add
pusha
xor
xor
rclb
xor
outsb
xchg
sbb
shrl
mov
add
xchg
int3
xor
lcall
mov
mov
xchg
add
sub
fwait
jge
or
add
mov
add
push
adc
add
mov
add
sub
add
repnz
mov
fistps
mov
jno
add
pop
mov
add
ja
pop
ret
in
insb
xchg
sbb
mov
fisubl
add
add
add
cmp
addb
add
and
sbbl
or
into
inc
mov
insl
clc
and
ret
gs
ja
xchg
dec
jge
in
jmp
insl
icebp
mov
add
pop
call
pusha
mov
ja
je
jg
push
cld
bound
mov
add
and
adc
lcall
sub
add
dec
int3
pop
scas
add
lods
add
and
add
mov
and
add
cmp
dec
pop
cmp
sbb
add
popa
or
inc
mov
cmp
or
jne
xchg
cmpsb
add
jnp
divps
add
jle
sub
xor
add
daa
outsl
in
jbe
fwait
and
lahf
or
add
jmp
add
sbb
add
add
adc
add
mov
add
mov
xor
lods
jbe
push
popf
shrl
jns
push
xchg
stos
mov
add
jae
jb
outsb
xor
cmp
xor
mov
add
lods
scas
add
rorl
sbb
test
jp
stc
insb
dec
xor
and
add
fidivl
add
and
add
lcall
sub
clc
lahf
arpl
les
lret
xor
add
mov
lea
cld
jae
jle
xor
mov
jne
bound
fwait
js
aas
fiaddl
bound
enter
xchg
adc
sahf
mov
add
cwtl
imul
jne
shlb
popf
aad
pop
cmp
pushf
test
cld
mov
insl
fiaddl
stos
lcall
adc
and
int3
in
mov
add
js
cmp
xchg
push
repnz
emms
movb
mov
add
in
pushf
jno
add
leave
pop
push
xor
mov
pop
add
add
add
in
mov
mov
test
add
xlat
push
pop
fstpt
outsl
push
lret
lret
add
mov
jne
or
insl
mov
out
dec
out
popf
fisttpl
push
add
dec
adc
fimull
add
and
add
mul
test
add
xor
addb
mov
add
nop
fcmovbe
popa
iret
ret
add
rolb
out
xlat
mov
add
and
test
add
jno
flds
add
mov
cmp
movb
clc
xchg
test
adc
add
out
adc
add
xchg
gs
fcom
pop
inc
push
or
add
aaa
movsb
add
data16
add
dec
dec
push
add
cmp
dec
notb
test
add
add
not
outsl
push
add
dec
shlb
mov
mov
add
clc
mov
add
add
aad
push
arpl
add
dec
movsb
add
sbb
mov
jmp
mul
mov
add
jnp
pop
aas
add
repnz
sbb
ljmp
push
je
add
dec
sbb
enter
out
hlt
rcrb
mov
lcall
stc
or
jmp
lds
ret
xor
addb
add
les
add
scas
mov
add
and
add
out
pop
and
add
sbb
jmp
inc
push
pop
push
inc
mov
rol
popa
pop
and
add
pop
and
jbe
add
bound
incb
bound
or
pop
jb
sub
xor
and
add
into
test
add
cmp
addr16
cmp
sbb
mov
or
add
add
rcrb
mov
das
jecxz
dec
xchg
enter
out
cmpsb
add
addb
jecxz
mov
dec
and
lods
xchg
add
add
fcomps
enter
inc
mov
mov
add
stos
add
mov
mov
cmpsb
add
and
fsts
jb
pop
ljmp
push
inc
daa
cmp
push
insl
jnp
jge
push
xlat
mov
add
incl
inc
push
add
or
add
mov
cmp
leave
scas
add
rcrb
push
stc
repz
neg
repnz
into
jmp
push
pop
mul
cmpsl
decl
add
in
add
mov
sub
and
shlb
notb
call
stos
sub
inc
mov
fimuls
out
xchg
add
mov
add
xor
or
add
bt
and
add
add
add
repz
loope
mov
push
xchg
call
add
hlt
sub
repz
ss
add
into
in
pop
ds
pusha
out
aad
fs
stos
sysenter
jmp
pop
fistpl
iret
in
pop
push
mov
add
add
int3
scas
add
cmp
mov
inc
cld
add
add
lcall
inc
dec
rcr
xlat
fsub
lds
add
sbb
pop
or
sar
add
inc
fisubl
add
add
insb
push
add
in
cmc
stos
sub
fadds
nop
repz
add
mov
call
push
sarb
imul
add
add
addb
sub
push
scas
add
ja
sahf
sahf
adc
or
add
fs
cmp
xchg
push
add
inc
pop
fsubr
add
out
outsl
ja
xchg
jbe
fnstsw
sbb
add
push
in
in
add
cmp
pop
xchg
jg
imul
repz
rcrl
xchg
cmp
jbe
icebp
nop
lods
add
addr16
push
and
add
add
jnp
add
cmp
repz
enter
cld
or
aaa
or
mov
sbb
push
aad
mov
lcall
add
nop
out
add
aad
or
add
adc
iret
int
pop
add
ds
add
or
add
cmp
outsb
loop
and
add
add
add
add
cwtl
sbb
add
outsl
mov
push
add
scas
mov
jmp
mov
fwait
inc
sbb
scas
add
jmp
fisubrl
add
dec
cmp
add
xchg
cli
icebp
ficoms
addb
jecxz
pop
xor
adc
inc
out
xor
sbb
aas
mov
push
sbb
pop
clc
sub
jl
pop
lock
stos
add
xchg
mov
add
xchg
mov
fwait
cmp
jns
cli
idivl
cmp
out
ror
pop
call
mov
movsl
add
pop
xchg
jnp
add
add
and
push
loope
xchg
loop
outsl
lock
scas
add
addb
sti
outsl
idivl
cmp
dec
fstpl
inc
fstpt
jmp
xchg
fsubrl
sbb
mov
add
inc
sub
add
and
fsub
jo
add
out
cmp
mov
pmulhuw
shrl
sub
add
dec
mov
push
xchg
cmp
add
and
add
mov
hlt
jo
xrelease
xchg
int
rcrb
cmp
cmovae
jg
add
add
mov
std
and
xchg
jae
das
mov
test
add
push
jne
add
adc
jp
push
mov
ficompl
loope
dec
popa
sbb
mov
mov
add
jbe
xchg
xchg
add
and
add
int
inc
cmpsl
lret
push
mov
add
loop
cmc
pop
cvtps2pd
out
pop
and
mov
dec
or
add
call
add
lock
add
add
add
xchg
add
stos
add
cmpsb
add
dec
data16
xchg
addb
aad
dec
push
jl
jle
inc
and
add
mov
add
jecxz
xor
mov
add
push
xor
and
add
loop
jge
push
leave
sti
mov
add
add
add
add
mov
dec
mov
scas
add
sbb
cltd
cmpsb
add
mov
hlt
push
add
cltd
push
add
add
dec
jbe
add
sbb
clc
lods
add
mov
cmc
lds
frstor
inc
std
lock
sbb
loopne
aam
sub
add
clc
pop
pop
lcall
sub
add
inc
xchg
nop
popf
fs
add
lods
add
fistpll
dec
push
fadd
into
xchg
cwtl
mov
push
jo
inc
shlb
push
movsl
lods
add
sub
mov
pushf
sbb
mov
imul
dec
push
std
xor
add
add
dec
lret
pop
or
add
push
add
xchg
add
add
mov
push
add
and
mov
add
in
stos
add
movsb
add
jp
pop
cmp
add
xor
in
cld
mov
or
add
jecxz
add
dec
popf
daa
mov
cmp
add
cmpsb
add
and
add
imul
push
dec
repz
sub
loop
cmc
daa
sti
lods
xchg
or
xchg
mov
cmp
add
std
int3
sbb
add
fists
jns
xchg
sub
jl
mov
addr16
fwait
jno
leave
add
mov
and
fcmovnu
fiaddl
cmp
add
fwait
lock
shl
inc
inc
mov
int3
inc
shll
mov
add
jae
bound
add
mov
xchg
js
enter
push
add
xor
add
mov
int3
test
mov
xlat
int3
pusha
jecxz
pmaddwd
pop
stc
add
inc
adc
insb
lahf
sbb
add
shll
orl
xchg
sub
push
add
inc
add
cmpsl
test
pop
mov
add
fld
jg
cwtl
test
add
aad
mov
shrb
push
clc
xor
or
ret
dec
mov
pop
ljmp
sbbl
std
pop
mov
pop
aas
sbb
dec
adc
mov
add
add
pushf
xchg
add
mov
fistpll
aaa
fcmovnb
test
ljmp
addl
jb
mov
cwtl
add
add
inc
lret
add
imul
roll
hlt
ret
add
sbb
push
xchg
and
inc
and
stos
pop
push
mov
add
sub
add
pop
test
add
fs
adc
mov
mov
std
rcrb
xor
pop
xchg
mov
add
add
xchg
xor
jo
add
add
push
add
mov
add
jg
cmp
add
pop
dec
arpl
push
xchg
mov
bound
inc
cmpsl
mov
add
fdivs
js
or
aas
mov
adc
jbe
add
mov
cld
mov
sub
outsl
push
mov
mov
mov
pop
xchg
xlat
mov
add
jae
ret
icebp
xchg
push
movsl
pop
sub
dec
pushf
push
or
xor
addr16
jg
add
add
mov
mov
loope
push
add
loope
push
add
push
sub
addb
jg
xchg
add
or
add
das
fdiv
jnp
xlat
mov
add
add
std
xchg
sti
daa
popa
push
pop
call
jmp
mov
dec
sub
lcall
test
add
push
jbe
clc
push
push
add
mov
xchg
xor
jmp
mov
add
enter
add
arpl
fisubs
dec
outsb
push
mov
add
jmp
fbld
add
jae
jg
insl
jnp
dec
jo
xor
cmp
xchg
enter
push
push
std
push
adc
mov
ljmp
fwait
push
fwait
shr
or
mov
add
ja
xchg
inc
dec
aaa
ds
scas
add
stos
cmp
cmp
outsb
add
lret
in
add
or
add
out
fsubl
jno
add
or
add
out
andl
add
add
insb
inc
rdtsc
outsb
rcll
sar
add
add
insb
xchg
and
add
add
outsl
or
add
cmc
leave
push
aad
sub
and
mov
add
jge
cmpsb
add
pop
sbb
cmp
jno
shrb
add
mov
add
sub
add
stc
jns
ss
add
fdivrp
rorb
add
cltd
cld
shll
inc
xor
add
add
les
iret
loope
add
lahf
push
aad
in
aas
jp
call
clc
adc
lea
xchg
test
add
adc
enter
and
jp
xchg
sub
add
jl
pop
fsts
mov
cmpsb
add
hlt
in
mov
std
push
push
add
std
xchg
xchg
out
in
add
mov
xor
rol
mov
mov
repnz
pop
add
aas
sub
rcl
xchg
sarb
adc
push
div
nop
mov
or
add
repnz
cmc
lcall
add
arpl
add
add
inc
mov
pop
aad
lea
mov
add
clc
inc
loop
push
pop
mov
std
and
add
push
jge
iret
out
cmp
add
jmp
ret
jo
aas
test
int
rcl
stos
add
jp
xor
addb
out
pop
daa
ljmp
mov
les
aam
inc
inc
sub
push
mov
add
push
daa
addr16
fstl
fs
mov
scas
add
dec
cmp
dec
scas
xor
jmp
enter
add
push
jecxz
out
bound
les
rolb
mov
add
cmpsl
mov
pusha
fsub
xchg
add
or
add
add
daa
mov
fisubl
jge
or
fwait
jp
push
lret
rolb
jge
sarl
sub
add
mov
xchg
dec
mov
mov
push
fcoms
add
xor
add
add
cmp
dec
adc
jb
xor
mov
add
sub
add
lret
rcl
lahf
leave
loop
addr16
add
add
cmp
mov
mov
insl
mov
add
xor
ss
aam
sbb
movsl
enter
pop
adc
add
jmp
add
mov
add
mov
xchg
mov
mov
add
xor
lds
push
inc
cmp
in
cmp
xor
mov
xor
sti
js
movsb
add
test
daa
fcom
or
add
dec
lds
adc
fnstsw
inc
pop
bound
imul
jnp
mov
add
pop
insb
lock
add
shrl
add
sbb
add
push
inc
jge
daa
or
mov
add
in
arpl
mov
sub
add
xchg
mov
out
jmp
jecxz
add
pop
fldt
roll
js
aas
out
mov
outsl
shll
bound
jmp
add
inc
push
add
add
sub
sbb
add
fwait
jmp
add
inc
inc
jecxz
dec
push
roll
add
aas
loopne
jns
int
inc
ja
cmp
fnstcw
add
ss
outsb
gs
xlat
inc
sahf
jmp
enter
add
pop
divl
les
loopne
dec
fxch
push
movsl
lret
add
sub
add
mov
cwtl
and
add
rcll
addb
stos
add
push
fwait
int
jmp
outsb
pop
daa
iret
jle
addr16
add
add
std
fistpll
scas
loopne
jl
mov
cwtl
dec
scas
popa
sbb
stos
inc
shll
imul
data16
add
loope
stos
push
in
pop
jae
add
add
enter
pop
inc
inc
cwtl
shll
xchg
outsb
dec
xlat
rcr
inc
stc
mov
call
int
mov
fistpl
stos
idiv
cwtl
adc
add
addb
inc
ret
push
xor
push
adc
sahf
sbb
push
jmp
test
add
push
add
test
add
test
add
xchg
popf
mov
les
loop
adc
xchg
adc
insl
test
xchg
ja
push
adc
sub
add
add
sub
in
cmc
and
add
scas
add
jge
data16
hlt
push
lahf
fwait
and
add
loopne
push
mov
cmpsb
add
lahf
mov
add
cmpsb
add
addl
add
add
leave
inc
push
sub
icebp
sbb
into
xlat
shrb
jno
or
add
inc
push
add
in
jge
cmp
jmp
add
jne
clc
lcall
add
in
add
adc
ljmp
lret
sahf
movsb
add
in
or
add
adc
jle
arpl
add
adc
push
fsts
push
scas
in
stc
and
add
pop
scas
rcr
fnstsw
imul
fwait
xor
dec
cmp
push
mov
sahf
jge
dec
lods
add
or
add
and
add
addb
jecxz
inc
and
add
mov
cmp
faddp
jae
jecxz
mov
lods
stc
pusha
lods
ret
cld
aam
rorb
add
and
pusha
push
add
das
dec
jmp
arpl
int
aad
stos
mov
add
add
inc
inc
sti
call
add
add
jg
push
add
out
psrld
adc
pop
mov
add
mov
mov
push
add
into
sbb
mulb
add
js
add
mov
or
imul
adc
and
fcmovu
sbb
sbb
sahf
aad
add
add
mov
mov
add
lcall
push
or
pop
mov
xor
nop
loopne
jno
xchg
mov
add
popf
lock
pop
push
adc
inc
mov
cmp
add
fisubs
and
add
pop
nop
pop
cli
pop
add
cld
out
add
rorb
xchg
fcoml
inc
sbb
outsb
jbe
lahf
enter
insl
rcrb
push
pop
add
add
jmp
add
sub
add
js
test
and
add
add
push
add
sub
cmp
getsec
test
add
push
push
pop
in
mov
add
add
sub
test
mov
je
dec
mov
loope
sahf
cmp
cwtl
push
add
inc
test
add
pop
inc
and
daa
and
cmpsb
add
mov
test
add
add
dec
scas
mov
jae
pop
sbb
add
mov
add
dec
arpl
mov
add
dec
or
add
and
push
leave
aad
pop
ja
add
mov
push
add
sbb
push
sarl
add
and
push
mov
repnz
sti
mov
add
lods
add
cmc
push
movsb
add
dec
mov
add
add
cmp
scas
add
pop
push
hlt
mov
add
cmp
out
enter
add
dec
pushf
test
add
fcmovb
lea
pop
scas
add
mov
arpl
loope
mov
pop
cmp
add
mov
shlb
cmp
mov
add
xchg
ds
loopne
inc
adc
inc
gs
mov
mov
shr
mov
fstpt
sbb
jg
add
mov
add
shll
jmp
xchg
xor
mov
add
mov
add
outsb
push
scas
add
and
insb
mov
arpl
cltd
mov
mov
add
add
das
out
fwait
lods
push
sbb
lods
xchg
add
inc
sub
adc
add
adc
les
shlb
adc
mov
add
sbb
and
add
add
cwtl
loop
pop
stos
adc
hlt
push
in
ljmp
addb
adc
rclb
add
mov
and
stos
aam
leave
lds
pop
xchg
das
xchg
and
fdiv
inc
sbb
pop
mov
mov
stos
add
stc
shrl
xacquire
test
add
pop
xchg
xor
xor
adc
shrb
mov
xor
mov
cmp
lcall
or
add
int
pushf
adc
add
cmp
pop
dec
pop
jmp
mov
pop
jnp
jae
std
jge
lahf
push
xor
cmp
push
add
popa
add
or
add
add
dec
insb
jne
rclb
lret
leave
mov
stc
and
ds
loopne
das
and
add
jg
add
push
push
add
dec
mov
idiv
in
pop
hlt
sbb
leave
ja
xchg
adc
add
mulb
add
mov
outsl
outsl
mov
add
xor
add
cld
lock
fsub
imul
mov
imull
sub
mov
add
add
add
mov
add
xchg
outsb
cmp
loope
test
and
lds
ret
add
add
add
imul
das
ret
test
xlat
add
fmul
lahf
and
mov
add
add
lods
add
outsb
inc
xor
add
mov
add
mov
int
add
lahf
mov
jbe
mov
xchg
inc
rorl
das
mov
mov
inc
roll
lods
add
imul
outsl
aaa
test
add
cmc
mov
mov
push
xchg
insl
repnz
push
pop
mov
or
xchg
sbb
lret
push
dec
add
xchg
fwait
scas
sti
sti
mov
cmp
imul
add
in
mov
pusha
dec
ljmp
mov
add
add
mov
add
jecxz
pusha
push
add
fisubrl
test
stc
mov
mov
stos
add
push
add
or
ret
cmp
jns
in
jg
nop
clc
out
out
cmp
in
imul
dec
jp
addb
loopne
add
fdivrp
add
add
addb
jno
ds
ja
aaa
mov
adc
arpl
xor
add
xchg
lods
add
adc
out
and
add
pop
ds
add
ds
xor
add
pusha
mov
test
cmpsb
add
jns
jnp
add
add
add
add
jecxz
je
cmp
sub
jmp
fbld
add
aaa
xchg
addb
jb
sbb
in
out
ret
push
sti
or
add
imul
xchg
lcall
test
add
add
popa
popa
pop
aad
mov
add
rclb
ret
add
loop
pop
xchg
repnz
nop
ljmp
add
adc
add
daa
xor
add
in
add
xor
xchg
and
add
inc
or
add
add
or
add
xchg
sub
fadd
pop
test
add
add
or
add
sbb
enter
jo
and
dec
subl
mov
add
xlat
mov
jns
xchg
clc
xchg
addb
cld
add
cld
xor
dec
and
add
add
hlt
popa
xchg
shlb
add
mov
add
inc
jmp
sahf
mov
or
rorl
xor
repnz
add
add
jge
xchg
lret
mov
add
jmp
rcl
lahf
pusha
out
addr16
data16
dec
xchg
add
sbb
jno
ret
add
mov
jmp
out
cmc
lds
add
and
inc
outsb
cmpsb
add
or
jo
cmp
mov
add
add
mov
push
xor
imul
add
addb
sub
and
add
jno
or
pop
lret
push
inc
imul
ja
push
lret
sub
and
add
adc
sub
add
add
jmp
sbb
jg
push
xor
cwtl
cwtl
and
add
addb
fsts
add
jl
inc
mov
add
add
adc
add
out
leave
fcomps
fsubrp
aam
push
lcall
std
jmp
or
add
push
add
add
add
or
add
clc
push
push
add
sub
add
xchg
jbe
cltd
mov
add
movsl
dec
je
inc
nop
inc
and
testl
dec
mov
cmp
mulb
cli
pop
data16
add
xchg
imul
add
xor
jmp
push
jo
ret
inc
mov
aas
mov
xchg
add
xchg
xchg
add
add
xor
loope
add
or
mov
mov
pushf
scas
add
sub
add
add
jno
xchg
and
cwtl
push
push
pop
std
repz
pop
xchg
cltd
cli
jp
in
fsubl
sbb
add
repnz
or
inc
add
xor
arpl
jbe
add
xor
sbb
cltd
scas
add
add
add
and
add
in
shrb
xor
add
ss
xchg
add
mov
pop
add
jns
pop
hlt
inc
push
add
mov
in
xchg
les
adc
jecxz
jmp
pop
adc
push
push
dec
adc
push
aas
mov
add
int
jl
pop
mov
add
inc
bound
jmp
jnp
jbe
shrb
cmp
xchg
imul
dec
out
push
add
int
movsl
jno
sub
add
fs
mov
sbb
add
sub
add
pop
enter
sbb
inc
pusha
cltd
xor
out
or
add
mov
xchg
jle
pop
cmp
add
add
mov
loope
stos
lds
lcall
push
rcrl
jnp
mov
add
addb
mov
pop
sub
add
mov
add
in
jg
jnp
mov
std
xchg
inc
jg
jle
pop
and
add
add
movsl
mov
xorl
add
mov
xchg
and
add
add
movsl
clc
or
add
jecxz
das
adc
push
sbb
mov
add
pusha
or
mov
add
add
stos
add
ja
jg
add
in
mov
add
add
das
ret
mov
mov
add
mov
out
xchg
or
lds
fnstsw
sub
add
stc
in
jb
xchg
push
nop
dec
js
xor
bound
test
push
mov
add
scas
add
add
add
dec
jp
data16
mov
out
rclb
add
jmp
xchg
dec
mov
xor
mov
inc
test
jecxz
aad
int
push
das
push
out
add
add
aad
roll
add
push
sbb
jmp
in
in
or
add
test
lock
jns
imull
add
xor
addb
jno
mov
or
add
adc
insb
cmp
repz
in
inc
in
mov
add
addl
lret
add
pop
loopne
pop
mov
add
lods
add
ss
xor
fbld
add
jp
mov
push
xchg
ret
sub
add
mov
push
add
outsl
jb
pop
shlb
add
jb
mov
pushf
mov
jg
insb
jg
mov
add
sub
popf
sub
rorl
sbb
test
pop
fsubrp
pop
add
lahf
aam
add
aam
fistl
add
add
add
mov
out
rcrb
mov
fs
pop
push
inc
fidivrs
xchg
addb
inc
dec
cmp
fsub
cld
pop
call
jge
add
clc
sub
add
popa
mov
add
and
hlt
out
mov
pop
push
dec
push
add
sub
jno
xchg
jb
lret
imul
dec
ss
scas
add
dec
and
imul
out
add
xchg
enter
push
das
outsb
inc
mov
add
js
add
pop
push
outsb
icebp
inc
sbb
sti
fisubrl
jo
in
ror
movsl
addb
push
push
jbe
iret
insb
loop,pt
test
add
inc
outsb
iret
ret
fdivrl
ds
fwait
pop
repz
cwtl
add
pop
add
mov
imul
sub
add
add
cli
push
push
add
mov
add
popl
add
popf
cmc
or
add
mov
insb
jno
ret
test
add
add
xor
aam
lret
pop
das
outsl
rcll
inc
scas
add
sbb
sbb
or
icebp
pop
mov
dec
inc
rclb
pop
adc
out
or
add
sub
cmp
add
inc
sti
out
call
popa
inc
adc
add
xor
add
add
sub
add
dec
scas
sahf
and
inc
cmc
jge
xchg
mov
sahf
xchg
cwtl
popa
mov
lcall
ljmp
add
pop
xor
add
mov
lods
adc
xchg
rcll
push
and
add
sti
add
add
jl
loopne
imul
popa
pop
pop
mov
push
adc
mov
addr16
jne
in
pop
loopne
into
dec
jno
jae
clc
cmp
mov
add
xchg
rcll
rorb
add
lahf
cmpl
std
sub
add
jecxz
aam
ret
ret
xchg
lret
iret
pop
cmc
out
add
add
movsb
add
add
enter
mul
test
add
scas
add
inc
ja
jae
lret
movsb
add
lret
pop
dec
daa
push
add
pusha
adc
inc
cmp
add
dec
pop
sahf
sti
xchg
jmp
cmpsb
add
inc
cmp
add
nop
lods
add
mov
add
add
jp
and
add
in
test
or
add
push
xor
fadd
out
add
js
mov
add
mov
clc
jecxz
fdiv
pop
in
and
test
and
add
add
icebp
cli
repnz
add
fs
or
add
sub
add
add
adc
int3
inc
xchg
adc
lea
sbb
pushf
sbb
pop
stos
add
lcall
cmp
mov
jmp
add
add
insl
insl
and
aam
dec
jae
mov
mov
dec
adc
das
enter
add
add
mov
add
incl
add
adc
mov
mov
lret
add
and
add
add
js
dec
mov
out
sahf
inc
lock
scas
add
mov
add
mov
pop
inc
add
xor
not
mov
lahf
mov
xor
cmp
je
fdiv
ret
jno
fwait
gs
mov
and
add
or
add
mov
sub
add
xor
add
bound
add
repnz
lods
mov
mov
pop
xchg
add
add
pop
push
je
rclb
mov
add
push
mov
cmp
mov
and
or
popa
out
in
iret
pop
or
add
push
sbb
add
iret
out
push
add
xchg
test
add
jp
xchg
movsb
add
notl
jae
or
add
jecxz
add
add
xchg
lret
idivl
add
pop
xchg
jnp
dec
imul
add
sub
inc
xchg
mov
rclb
fldcw
push
inc
dec
test
data16
and
add
inc
xlat
ss
dec
into
xchg
push
mov
out
add
rcll
add
fiaddl
and
add
addr16
lea
mov
add
in
dec
out
lcall
add
add
loop
sbb
dec
inc
shrl
jg
popf
out
mov
add
mov
add
mov
in
psubb
pop
iret
or
add
jge
sti
or
xor
pop
mov
dec
mov
arpl
sbb
pop
out
rorb
add
movsl
inc
jle
add
mov
mov
mov
mov
jnp
je
pop
push
pop
test
add
add
fwait
into
and
xchg
lock
out
dec
movsb
add
rorb
adc
mov
fisttpll
add
and
add
sbb
jbe
mov
add
cmp
lock
mov
add
jns
dec
push
and
add
out
popf
ret
xchg
jno
adc
add
das
inc
icebp
aas
mov
add
icebp
insb
fmull
add
add
mov
pop
test
add
mul
push
ret
add
add
mov
xchg
and
add
add
or
add
cld
in
add
inc
sbb
push
sub
xor
or
add
jb
add
jl
pop
cmpsb
add
add
add
insb
sbb
das
mov
jmp
and
ret
inc
addr16
xlat
daa
mov
fmull
jmp
repz
pop
mov
add
xlat
sbb
adc
cmpsl
ds
cmova
add
fldl
xor
lods
add
sbb
int3
dec
add
sub
loopne
sub
or
add
add
pop
sahf
and
add
int
pop
mov
sub
add
stos
pop
insb
sub
add
mov
add
in
popa
stos
adc
add
or
pop
ss
aaa
mov
add
stc
out
rorl
add
scas
add
out
mov
je
and
add
enter
add
lods
xor
xchg
jns
lret
fcomp
ds
in
add
test
add
pop
push
add
mov
inc
out
or
lret
pop
xchg
jbe
cmp
add
sarl
test
add
and
add
mov
iret
fabs
sbb
xor
sbb
incl
mov
arpl
push
cltd
scas
ret
mov
inc
dec
cltd
popa
xor
pusha
xchg
add
lods
add
out
push
imul
dec
ja
jl
xchg
lods
mov
add
mov
je
or
add
fsubl
and
add
jmp
sub
pop
adc
xchg
das
imul
add
push
xor
dec
dec
add
jge
push
xchg
xchg
mov
pop
in
out
lods
add
nop
pop
sar
mov
add
xchg
mov
icebp
jo
sub
outsl
sub
das
aas
sub
cmpsl
pop
fstps
and
add
xor
mov
jl
popf
adc
sub
add
data16
add
js
xor
lods
pop
outsb
aaa
mov
push
add
push
fsubrl
out
xchg
or
add
fsubl
clc
outsb
or
add
int
sbb
rol
add
push
xchg
clc
jg
loopne
push
into
aaa
jns
aam
cld
or
add
mov
nop
inc
testl
std
repnz
and
xor
aam
add
sarl
add
aam
ds
das
lock
pop
xor
loop
jo
out
push
add
mov
add
mov
aam
mov
in
jmp
mov
push
mov
xor
in
pusha
dec
cltd
test
add
fdivl
add
inc
inc
dec
and
add
test
add
dec
push
clc
jb
add
rorl
int
inc
shlb
xlat
jno
mov
add
sub
fadds
cltd
inc
stc
sbb
sbbl
add
sahf
inc
add
outsb
dec
loopne
jle
add
xchg
fistl
mov
rdpmc
sub
add
aam
mov
inc
lea
scas
add
sub
add
pushf
imull
jb
mov
xor
add
pop
sub
add
pop
in
ljmp
push
loopne
inc
stos
sar
pop
mov
add
adc
call
and
add
mov
or
addb
adc
add
dec
cmpsb
add
aam
sbb
lret
add
aam
mov
xor
repnz
inc
adc
iret
sti
bound
and
add
fcompl
fwait
pop
aas
pop
push
gs
jg
sti
mov
add
sbb
dec
lss
jg
fs
mov
je
hlt
sbb
icebp
push
mov
fisttpl
add
mov
sub
add
fmuls
mov
add
inc
sbb
lods
add
hlt
sub
add
and
pusha
add
lahf
icebp
notb
into
mov
addr16
call
xchg
add
xlat
push
enter
pushf
or
add
add
cld
mov
negl
push
mov
pop
xchg
add
pop
outsl
mov
add
push
cwtl
jno
sub
add
mov
add
add
cwtl
test
add
jb
add
loopne
aam
bound
add
data16
test
add
jg
outsb
add
cmp
push
xchg
nop
gs
sub
add
cltd
add
lcall
cmp
add
lcall
dec
mov
add
scas
add
xchg
outsb
xchg
cltd
addr16
xchg
lea
push
aam
stc
sub
add
add
xor
movntps
pop
or
add
add
add
xchg
push
jecxz
fisubrs
aaa
pop
push
pop
stos
sahf
rorl
out
popf
cmp
sub
jecxz
add
cmp
add
push
mov
push
jmp
add
das
mov
and
add
in
dec
cmpsl
lods
add
cld
test
pop
xchg
jae
pop
cmp
arpl
out
cwtl
lds
lahf
add
loop
aaa
mov
lods
adc
add
movsl
and
ljmp
data16
xlat
sub
add
adc
pop
or
mov
add
add
and
add
stos
add
inc
mov
mov
xor
ret
or
pop
pop
test
and
add
add
jmp
mov
inc
xlat
cmp
fcoms
mov
mov
ljmp
outsb
pop
outsb
add
mov
add
add
test
push
and
add
fdivl
dec
std
repz
js
cmp
add
dec
in
enter
cmp
pop
out
adc
insb
pop
cmpsb
add
or
xchg
xchg
or
add
mov
add
out
pop
dec
sub
sti
aad
add
pusha
adc
add
cli
adc
sub
push
add
add
fbstp
scas
rcl
scas
add
sarb
dec
pop
enter
jg
fwait
add
sbb
cmp
insl
mov
adc
mov
cltd
out
xchg
aas
xorl
add
fisubs
xchg
inc
xor
push
or
add
popa
int
add
jno
into
sti
jne
xor
adc
cmpsl
fldt
push
mov
and
add
add
addb
xchg
fdivrl
add
add
imul
add
cmp
aam
or
add
aas
sub
add
push
add
add
push
sbbl
iret
inc
dec
xor
pusha
sti
mov
inc
mov
add
cmp
adc
add
cmp
popa
out
dec
out
in
adc
and
cld
aaa
sub
add
mov
add
std
data16
sbb
xor
bndldx
test
add
add
aam
jmp
sub
add
add
jmp
add
cmp
jmp
pop
testb
call
icebp
stc
out
not
push
cmp
or
imul
add
out
mov
add
pop
pop
dec
dec
sub
add
jbe
add
inc
xchg
mov
add
mov
add
add
mov
add
add
rolb
test
xor
cmp
test
add
in
popf
stos
xor
lods
xor
add
imull
add
and
je
mov
iret
inc
lock
int
add
push
add
lahf
ja
add
add
push
xor
hlt
or
push
xchg
xchg
dec
insb
cmp
add
mov
xchg
push
xchg
add
bound
add
shl
mov
mov
faddl
add
jo
jecxz
outsb
pop
fnsave
imul
pop
int3
sub
add
pop
xchg
xchg
or
add
pusha
cmc
mov
mov
adc
add
dec
push
add
add
imul
test
add
insb
outsb
enter
mov
inc
mov
add
jno
jbe
inc
loopne
sbb
pop
xlat
std
mov
pop
movsb
add
scas
add
adc
loopne
jecxz
imul
addr16
jae
mov
push
dec
movsl
loope
fwait
addb
aas
push
or
add
xchg
mov
shl
push
add
mov
add
push
popl
shlb
add
enter
add
test
add
cmp
and
add
mov
add
cmp
js
shrd
ja
jnp
pop
xor
call
add
adc
pop
or
add
mov
add
push
dec
sbb
mov
add
js
pop
movsl
push
push
push
xlat
push
in
dec
push
xlat
jae
adc
add
mov
scas
add
xor
add
cmp
scas
cltd
fwait
movsb
add
sbb
nop
in
les
add
cmp
stos
test
add
sbb
cmp
mov
lret
ds
cmp
and
out
neg
add
jge
xchg
or
push
loopne
aas
sbb
loope
or
pop
iret
add
push
push
ss
test
add
jno
add
aam
out
fwait
xchg
dec
mov
jmp
aad
jle
and
xor
add
cmc
mov
add
mov
add
clc
jns
xor
leave
jnp
add
add
xchg
add
add
and
add
pop
add
add
lods
add
sbb
add
mov
hlt
in
stc
pop
gs
fsubrs
adc
loope
ret
jbe
nop
loopne
sbb
add
mov
mov
add
addr16
enter
add
pop
test
xor
dec
addb
aad
fnstsw
pop
lahf
sbb
mov
push
mov
add
inc
xor
cmp
xchg
mov
bound
add
out
add
push
add
mov
loope
and
add
enter
add
jle
mov
push
out
out
push
mov
add
jmp
pushf
fidivrs
add
ds
fs
add
lahf
sahf
punpcklwd
mov
rolb
adc
push
popa
sti
movsl
pop
pop
loopne
add
add
sarl
add
jge
lods
loope
mov
add
mov
ret
ret
add
xchg
push
aam
stos
add
insl
mov
aas
ja
add
push
aaa
pop
ljmp
dec
mov
arpl
popf
cmp
adc
inc
jecxz
js
dec
xor
add
add
push
add
loope
adc
iret
test
add
adc
add
add
or
add
fs
shlb
xor
cmp
mov
mov
add
sub
mov
mov
ljmp
loope
pop
adc
jnp
mull
imul
sub
mov
add
adc
xchg
sti
lock
out
mov
cmp
xchg
dec
ficoml
dec
dec
push
mov
lds
add
xchg
std
test
mov
stos
add
out
data16
xchg
ret
dec
or
add
testb
loopne
test
or
add
add
clc
int3
jecxz
aad
add
pop
jl
cwtl
rol
sub
add
mov
add
mov
ja
cmp
cld
iret
mov
mov
add
inc
sbb
enter
mov
adcl
je
movsb
add
add
jns
cli
ficompl
add
lods
add
clc
sbbl
jl
bound
or
add
bound
add
outsl
xchg
fistpl
jns
pop
add
add
mov
stos
add
adc
aad
xchg
adc
sbb
jp
jnp
jle
loope
lods
lcall
add
addb
add
add
add
in
mov
fildll
cld
sbb
fiaddl
fldcw
add
sbb
push
or
add
add
cli
jb
xchg
mov
pop
imul
mov
sub
dec
add
xchg
push
insb
icebp
jecxz
clc
out
push
add
and
cmp
aas
add
add
addb
lds
mov
jmp
pushf
pop
test
add
or
add
push
add
hlt
mov
stc
adc
loop
cmc
mov
sub
add
add
daa
fwait
dec
mov
cmc
adc
mov
out
arpl
inc
sbb
mov
add
test
mov
mov
nop
adc
clc
mov
add
dec
push
add
in
pop
popf
xor
outsl
jl
mul
xchg
jge
movsb
add
and
add
adc
mov
mov
xchg
add
imul
dec
lret
fmulp
lret
flds
fisttpll
add
lret
add
pushf
mov
add
shl
enter
rcrb
sti
xor
add
add
add
pusha
add
jae
inc
xor
xchg
push
and
jp
xchg
insb
call
pop
pop
mov
sbb
mov
ds
sahf
adc
adc
test
add
dec
inc
in
dec
lea
sbb
add
push
mov
add
adc
xor
add
add
add
push
cmp
je
jns
lcall
add
mov
mov
push
add
and
add
fstpt
jge
xchg
xchg
xchg
insb
fistpl
inc
inc
iret
out
lret
pop
lea
cmp
pushl
jecxz
sbb
add
cmp
xchg
add
mov
add
add
movsb
add
lret
icebp
add
stc
out
xor
add
addr16
sub
pop
cmp
clc
in
sbb
sub
add
lret
aas
in
dec
outsb
lret
jge
fcmovnbe
faddl
pop
pop
xor
add
add
int
ret
movsb
add
pop
imul
push
outsl
cmpsb
add
scas
lahf
fmull
aaa
and
jp
pusha
jecxz
and
mov
fs
and
add
in
iret
outsb
mov
inc
jle
xor
cmp
inc
imul
add
sbb
add
pop
sub
add
ds
sbb
xlat
mov
pop
scas
jg
dec
cltd
hlt
cltd
gs
outsb
test
add
add
mov
add
sti
pushf
enter
pop
mov
add
or
dec
icebp
xchg
repz
jns
jb
sti
scas
loop
xor
in
add
add
pop
adc
cmp
add
inc
adc
mov
add
cli
lds
xchg
mov
or
add
stos
add
add
pop
add
dec
mov
incb
sti
jecxz
pop
cmp
popa
push
add
lret
add
in
in
mov
orl
add
idiv
jae
mov
pop
mov
jnp
stos
mov
int
xchg
mov
or
push
add
stos
add
fsts
add
mov
mov
fmull
add
xchg
stos
mov
popa
cmpl
add
into
dec
sub
add
mov
add
jb
dec
sbb
fisubrl
add
mov
add
add
cli
cmp
out
push
add
jecxz
dec
jae
scas
add
sahf
sahf
inc
lret
test
add
das
mov
sub
add
je
mov
mov
insb
or
inc
test
add
adc
add
std
or
add
pop
cld
sahf
mov
sbb
add
add
pop
inc
jo
mov
mov
lret
mov
cmp
int3
aam
lcall
xchg
adc
jb
add
and
add
xor
stos
iret
movsl
add
add
ds
lods
lock
add
sbb
inc
int3
jp
and
add
add
sbb
imul
mov
xchg
test
add
add
scas
add
gs
cld
mov
add
repnz
pop
lahf
pop
mov
add
daa
adc
add
pop
jmp
int
test
add
lods
add
icebp
jle
insl
inc
into
inc
sarl
add
add
add
adc
dec
pushf
xchg
jns
movsl
inc
inc
mov
or
inc
xor
push
inc
icebp
push
mov
mov
loop
out
adc
lock
xchg
lahf
in
add
aad
ret
mov
fsubr
lds
mov
mov
add
pop
pop
imul
mov
add
jl
insb
ja
add
fwait
jmp
add
or
enter
outsl
decb
js
add
xorl
xor
nop
fs
jb
mov
dec
adc
movsl
loopne
lret
jl
cmc
fs
aam
cmp
mov
lcall
mov
and
lcall
jg
loop
mov
punpckhbw
and
add
inc
int
loop
repnz
arpl
test
add
push
add
push
cmpsl
mov
in
mov
xor
or
mov
icebp
inc
mov
leave
cmp
add
mov
add
jae
popa
mov
add
add
add
add
add
lret
pop
add
inc
xchg
sbb
add
inc
shlb
add
out
mov
test
scas
das
or
add
add
outsl
or
add
lds
xor
jno
in
roll
add
pusha
mov
add
rcrl
addl
pop
or
add
add
test
add
add
pop
xchg
cmpsl
ret
dec
and
cmp
sub
add
pop
inc
das
jo
cli
add
lcall
hlt
aas
jns
sti
sub
sbb
add
test
jo
ret
je
add
das
addr16
pop
mov
cmpsb
add
mov
add
fwait
movsl
mov
xchg
inc
mov
add
hlt
nop
jns
lret
add
ss
out
in
imul
jg
in
fisubl
out
stc
jno
mov
lock
cmp
movsb
add
outsb
jbe
mov
add
add
out
inc
push
add
mov
add
sarl
fstps
addr16
repnz
cmp
xchg
push
xchg
add
xor
xchg
outsl
call
pop
or
popa
fucomip
lock
mov
push
ret
mov
cmpsb
add
pop
scas
add
aam
call
add
mov
aam
sbb
and
mov
add
push
mov
in
out
add
cmp
ljmp
jno
or
add
push
jns
add
scas
addb
inc
mov
lahf
xchg
add
adc
addb
mov
testl
ljmp
leave
jno
pop
jmp
icebp
ljmp
aas
lret
and
add
pop
in
add
in
scas
xchg
add
sti
sub
add
add
add
add
add
and
add
mov
les
fwait
mov
add
add
xor
add
in
hlt
mov
cmp
add
insl
adc
test
mov
ja
add
in
cld
jle
add
and
add
int3
out
in
adc
mov
fldl
cmp
add
jl
mov
add
add
daa
fbld
add
add
aaa
fistps
add
sub
add
lea
dec
mov
add
add
sub
add
mov
jbe
sub
add
add
jno
sub
daa
test
add
lahf
jno
and
add
mov
add
mov
add
mov
add
out
stos
clc
xchg
inc
adc
jecxz
insb
lcall
test
ror
daa
hlt
aaa
add
insl
cmp
mov
add
fcmovb
sarb
dec
loopne
sbb
aas
mov
add
jne
and
daa
jg
das
bound
add
rcrb
adc
je
xchg
add
in
into
or
add
add
cmp
mov
add
mov
pop
sahf
mov
jns
popf
ja
sub
mov
add
add
aad
mov
pop
add
inc
enter
mov
add
push
mov
jns
pop
repz
or
rep
and
add
mov
add
bound
leave
lret
sbb
add
push
add
scas
add
ret
rcrb
jbe
dec
lahf
jecxz
dec
inc
mov
js
aam
jno
nop
mov
iret
sub
add
xchg
je,pt
dec
sbb
add
hlt
ja
cli
popa
sbb
ror
addb
loope
sbb
add
dec
test
add
add
pop
and
js
les
icebp
jmp
bt
sbb
and
add
add
and
add
or
add
cmc
inc
je
in
inc
mov
add
push
icebp
cltd
in
sarb
add
pop
stos
cli
ja
cmp
sub
add
daa
xchg
jp
cmp
pop
aam
pop
cld
ficompl
lods
add
jge
je
mov
cmpl
add
inc
mov
add
add
imul
jnp
mov
and
add
xchg
jnp
clc
enter
js
jns
xor
xlat
and
mov
sbb
add
add
add
mov
inc
cmc
lret
ja
mov
jge
or
cmp
das
xor
add
xor
xchg
push
enter
jns
jnp
movsl
mov
loopne
iret
iret
push
push
call
adc
mov
xchg
lahf
push
cwtl
mov
xor
pop
lret
bound
xchg
adc
push
add
mov
lret
and
add
mov
add
add
add
mov
add
inc
pop
out
jb
cli
sbb
stos
add
cmp
out
mov
rolb
sbb
push
add
cmp
xchg
sub
add
add
rcrb
ljmp
inc
push
inc
icebp
dec
out
push
mov
dec
in
or
add
or
add
xchg
out
dec
mov
add
fs
dec
iret
or
add
lret
push
lret
mov
add
cld
mov
in
push
inc
jg
out
xor
add
lods
add
jge
push
adc
sbb
push
sbb
cmpxchg
mov
out
movsl
jle
sbb
testl
and
xor
filds
add
add
lea
push
add
lods
push
rorl
insl
pop
je
scas
and
inc
imul
mov
ljmp
lahf
pop
sbb
sbb
adc
or
jno
push
cmp
or
ljmp
dec
inc
push
jge
add
add
aam
dec
mov
add
lods
enter
lahf
sahf
ss
add
inc
push
xor
movsb
add
mov
js
adcl
add
sbb
and
add
jge
test
add
add
xor
add
sub
add
hlt
push
add
push
fsubs
mov
std
fdivr
mov
clc
cwtl
add
add
xchg
fmull
stos
add
in
mov
aam
inc
xchg
mov
xchg
xorl
xchg
test
add
push
add
rep
pushf
mov
pop
sub
add
push
cmp
adc
add
jle
inc
sahf
leave
pop
sbb
shll
mov
adc
push
xchg
xchg
stc
mov
add
push
add
out
in
jns
jle
xchg
leave
add
aaa
mov
imul
cmp
rcll
leave
mov
add
add
push
jle
or
cmp
ja
mov
js
mov
arpl
stos
mov
shlb
mov
into
jns
add
in
test
add
xor
mov
push
jns
call
pop
popa
add
add
add
loop
lcall
mov
int
sbb
roll
in
out
ret
out
ret
aas
sti
cmp
test
mov
push
adc
int
leave
pushf
push
add
and
inc
aaa
mov
add
fbld
add
std
jmp
paddsb
loop
fisttps
cmp
out
fldcw
loopne
dec
mull
add
inc
mov
hlt
lret
add
ret
add
add
add
xchg
add
fs
sbb
negl
add
jb
in
js
addb
insl
mov
push
xchg
xlat
out
daa
mov
add
xor
mov
add
add
lret
add
outsb
jl
push
incl
popf
jnp
dec
aaa
pop
add
add
dec
pop
aas
inc
pop
js
xchg
lret
jo
sbb
add
jmp
xchg
jge
aad
lods
add
inc
pop
pushw
push
add
fdivr
sti
push
add
int
add
addb
xchg
mov
add
mov
mov
jnp
sub
add
xor
jg
je
scas
test
sbb
add
dec
add
add
js
xchg
mov
pop
mov
mov
add
xchg
shlb
jg
mov
add
gs
int
dec
xor
add
mov
addb
loopne
inc
cmp
add
dec
adc
pop
push
adc
fwait
sbb
movd
dec
or
add
movsl
shll
jmp
test
mov
cmp
add
xchg
add
push
insb
fs
addb
data16
pusha
inc
dec
mov
add
orl
add
add
jecxz
adc
cmpl
bound
or
add
cld
imul
or
add
lret
sbb
outsl
sub
push
fists
pop
out
jmp
add
insl
add
lret
popf
stc
mov
lret
jns
inc
les
enter
in
jnp
mov
mov
imul
jae
or
add
dec
or
aam
stos
add
icebp
test
add
imul
pop
gs
add
in
into
mov
mov
xchg
les
add
bound
add
cmpsb
add
faddl
loop
icebp
dec
push
sbb
jne
fisubl
or
add
add
add
add
cmovnp
push
cmp
adc
mov
add
push
add
dec
jmp
add
cmp
add
idivb
xchg
cmpsl
lahf
sub
xchg
add
mov
add
sub
in
add
adc
mov
xor
mov
jne
aas
lret
sbb
imul
mov
add
imul
add
push
sarl
add
mov
in
inc
loopne
push
out
fcoms
jns
dec
and
add
ljmp
popf
lock
shlb
add
jbe
aam
add
push
ret
rorl
mov
iret
pop
xchg
dec
arpl
cmp
in
pop
test
cmp
hlt
jmp
add
jnp
add
test
add
lds
and
add
add
push
fistps
cmp
mov
lock
outsb
push
dec
mov
jae
sti
cmp
pushf
mov
fucom
add
je
aaa
cmp
add
add
add
arpl
popa
sub
add
pop
pop
fidivl
add
xlat
stos
add
sarl
lods
add
clc
scas
add
pop
mov
pop
push
mov
xchg
mov
add
sub
add
xchg
out
inc
in
lods
add
stos
fcoms
fcomps
popf
dec
xchg
mov
pusha
cmp
nop
fstl
xchg
cmp
dec
cmp
add
add
loope
in
adc
add
shlb
fs
add
pop
and
add
mov
lea
call
add
adc
andl
icebp
dec
xor
mov
pop
sti
lcall
mov
add
pop
fwait
mov
add
cwtl
pop
push
add
xchg
std
xlat
daa
inc
popa
rclb
cmp
push
add
addb
fiadds
add
push
int
xchg
pop
js
mov
mov
push
inc
xor
insb
ds
sbb
xchg
cmp
mov
add
add
add
pop
stc
popa
inc
jb
notb
jge
add
dec
jbe
add
add
faddl
add
repz
aas
mov
push
add
push
cmp
dec
mov
mulb
sbb
add
jg
loope
repz
lret
cltd
stos
add
das
mov
and
movsb
add
sbb
cmpsb
add
cmp
icebp
xchg
add
cmp
add
addb
xchg
adc
add
adc
or
add
add
rolb
jne
mov
test
add
inc
in
and
sbb
rclb
or
add
lahf
leave
jle
sbb
lcall
out
dec
scas
add
or
add
rolb
sub
xor
dec
mov
mov
add
sbb
int3
jo
fsub
xor
pop
aam
add
je
mov
mov
mov
enter
and
cltd
jb
push
push
add
or
add
dec
xchg
mov
addr16
in
shl
xorl
outsb
mov
add
mov
add
out
cmc
in
dec
cli
jns
mov
fcmovbe
bound
mov
mov
adc
nop
test
add
and
outsl
add
cmpsl
cmpsl
test
adc
clc
cmp
xchg
add
add
dec
lods
add
jmp
add
cmpsl
xor
push
pop
adc
adc
lds
in
nop
lcall
jg
repz
insb
cvtps2pi
push
add
push
pop
outsl
mov
mov
hlt
ljmp
add
xor
add
add
in
lods
fninit
add
incb
add
sub
ljmp
push
ret
xor
or
fsincos
inc
jecxz
scas
popf
pop
ljmp
add
lret
sbb
jp
jmp
shr
adc
or
add
dec
dec
icebp
mov
pusha
mov
lea
push
and
add
pop
shlb
mov
adc
xchg
xchg
jnp
adcl
lods
sbb
add
xchg
adc
cwtl
mov
xchg
pop
push
in
jb
arpl
out
in
repz
in
lret
pop
mov
std
push
dec
mov
push
addb
jae
cmp
ficoml
test
sbb
popa
mov
pop
test
sub
add
pop
stos
cmpsl
cmpsb
add
flds
int
je
push
stc
lock
add
add
cmp
cltd
adc
push
scas
dec
cmp
push
cmpsb
add
push
mov
scas
pop
dec
mov
cmp
add
shrl
into
jp
add
mov
add
dec
xchg
cli
and
sub
addb
inc
push
jp
jbe
lret
push
sbb
dec
jnp
jno
jp
jecxz
add
mov
add
push
push
out
div
scas
adc
enter
add
fmul
cli
lahf
pop
xchg
insl
mov
shlb
les
std
sbb
repz
add
and
add
add
ljmp
push
add
xchg
pop
sub
add
adc
add
push
add
push
mov
les
add
mov
cmp
sbb
push
mov
dec
cld
orl
bound
add
add
mov
xchg
addb
xchg
add
inc
lods
add
aaa
mov
add
mov
loop
push
rcrl
add
sub
dec
daa
aad
add
aaa
pop
outsb
dec
pop
clc
mov
roll
jne
mov
add
bound
imulb
mov
push
add
and
movsb
add
jns
pop
outsb
jne
add
push
xor
add
or
push
in
rorl
inc
mov
mov
and
fisubrl
insl
add
push
cmp
cwtl
cmp
fwait
pop
push
lea
in
inc
jge
loopne
out
scas
mov
xchg
and
add
lods
out
adc
push
inc
sbb
add
test
add
or
add
add
mov
addb
push
mov
in
cwtl
call
add
adc
xchg
add
popa
add
leave
jno
cmp
adc
leave
cmp
add
push
add
fdivrl
imul
lret
jmp
jne
arpl
inc
insl
add
imul
and
add
push
xchg
mov
add
add
add
adc
add
sbb
add
add
scas
out
dec
adc
pop
mov
add
enter
cmp
mov
lcall
rcrb
push
in
and
jno
clc
sbb
or
cmp
addb
sbb
add
mov
int
roll
add
out
shl
dec
jnp
add
add
mov
and
lds
or
iret
je
inc
xchg
push
adc
and
add
in
test
add
jb
gs
add
add
push
add
and
and
mov
add
xorl
add
mov
sarl
and
and
add
shl
popa
cli
cwtl
stos
sbb
stc
dec
lret
out
pop
dec
dec
push
fnstenv
das
test
lds
adc
sahf
leave
in
hlt
jmp
imulb
xchg
repz
add
adc
pusha
int3
pop
mov
or
add
or
add
push
add
stos
add
inc
insb
mov
mov
jnp
and
imul
orl
cmp
int3
xor
fists
add
repnz
pop
adc
fiaddl
enter
and
add
or
add
sbb
xlat
xchg
sub
sti
dec
push
and
add
add
pop
lods
add
js
inc
stos
test
add
add
mov
add
add
jnp
sbb
lods
add
jp
cmp
pop
inc
and
dec
or
add
pop
test
add
enter
adc
mov
mov
add
cli
adc
jg
sub
mov
rcl
insl
cld
jae
add
lret
imul
pop
pop
pop
or
sub
or
xor
add
add
nop
test
mov
test
out
and
push
pop
mov
add
add
fcmovbe
cwtl
test
add
and
xlat
iret
movsl
ret
stos
add
adc
imul
or
add
pop
cmpsb
add
daa
adc
jo
inc
out
push
in
jp
jns
ret
addb
call
jg
sbb
das
mov
add
loope
sbb
inc
test
jle
add
insl
movsb
add
add
add
xchg
add
inc
cld
mov
add
cmp
cmp
adc
leave
dec
adc
add
inc
mov
js
add
add
lods
prefetch
or
add
lcall
add
mov
pop
dec
cld
or
add
ljmp
adc
dec
dec
jbe
cmp
add
ficoml
fs
jp
dec
cmp
mov
arpl
into
pop
sti
outsl
je
xchg
add
mov
popf
daa
pushf
adc
adc
fstps
sub
inc
sub
add
out
popa
sub
shl
hlt
cli
fimull
cmc
sub
or
add
scas
add
cltd
imul
or
add
pusha
sbb
xor
add
add
xor
mov
outsb
inc
mov
pop
loop
inc
cmc
and
add
mov
pop
in
sub
add
and
add
pop
faddl
outsl
pcmpgtw
adc
in
dec
repnz
push
push
push
xchg
loopne
bound
xor
add
sub
insb
xlat
cmp
iret
mov
mov
outsl
ret
scas
fidivl
jge
mov
add
add
cmp
adc
add
ljmp
pop
cmp
sbb
jecxz
cmp
mov
fcmove
frstor
add
or
add
pop
jbe
add
mov
dec
addb
adc
pop
data16
add
mov
fnstenv
add
xor
add
leave
iret
arpl
xchg
int3
in
and
add
inc
je
pushf
out
mov
daa
dec
mov
imul
add
cmp
add
pop
sub
add
adc
sbb
and
add
les
mov
lods
add
or
add
mov
mov
jg
add
xchg
sub
add
cmpsl
mov
add
add
pusha
mov
mov
negl
add
mov
add
add
add
lods
cmp
dec
jns
mov
js
add
jne
or
mov
add
add
jecxz
add
das
loop
mov
add
xchg
into
fwait
push
bound
cwtl
cmp
rolb
add
pop
inc
clc
inc
insb
push
inc
loope
je
ja
add
adc
or
add
add
jp
pop
push
sub
add
add
jno
xchg
in
ja
data16
and
and
add
in
pop
or
fs
add
add
inc
stos
mov
or
add
pop
aaa
push
add
push
and
add
ds
add
ja
stos
push
xor
jns
bound
aad
add
into
or
add
mov
rcll
movsl
js
add
add
push
jae
mov
add
cmp
add
icebp
int3
clc
cmp
and
add
add
mov
mov
outsb
pop
int3
sbb
pop
inc
inc
pop
iret
mov
add
out
mov
jne
mov
jge
jl
loope
scas
add
mov
adc
add
shlb
mov
test
add
adc
movsb
add
rcrb
inc
cld
jmp
pop
pushf
iret
mov
add
mov
sbb
xchg
sub
add
add
add
xchg
movsl
add
add
mov
add
sbb
out
and
add
arpl
ss
add
mov
in
loop
shr
cltd
push
sub
add
push
sahf
adc
add
push
add
out
je
shll
add
inc
push
or
add
xchg
leave
je
pop
das
ret
notb
inc
or
xchg
ss
and
mov
add
push
inc
js
add
lret
add
inc
mov
in
fdivrl
stc
jbe
test
mov
jmp
adc
or
add
inc
pop
jle
fwait
xor
add
or
add
mov
push
add
add
aaa
mov
popf
pop
mov
push
repnz
leave
notl
jo
xchg
inc
iret
push
add
add
aaa
sahf
jp
inc
repnz
add
add
jp
lods
lock
les
xchg
pop
gs
in
fldenv
push
push
xchg
xchg
mov
sbb
aas
adc
cmp
jo
pcmpgtb
fistl
flds
je
or
add
add
dec
or
add
sbb
and
sub
add
notl
add
add
inc
xchg
adc
cltd
mov
dec
mov
or
add
xor
sbb
add
jae
jg
aad
insl
clc
movl
jae
pusha
mov
mov
addr16
andl
popa
xor
xor
add
sti
loopne
mov
add
add
jecxz
jl
adc
add
mov
add
push
pop
fisttpl
add
loopne
xor
pop
xor
dec
dec
imul
add
mov
push
add
mov
jb
jae
add
xor
fists
adc
ds
sub
add
pop
ljmp
jmp
and
imul
loope
or
push
push
dec
xor
scas
mov
fs
jmp
fistpll
push
imul
push
mov
movsl
iret
jno
add
loop
adc
sbb
popf
addl
sub
int3
push
inc
pop
dec
stos
lds
add
add
mov
ja
mov
add
andl
jmp
jle
aaa
out
out
into
sub
add
add
or
mov
add
fnstcw
ss
mov
xchg
test
add
push
cmp
xchg
mov
xchg
sub
mov
inc
or
add
shrl
div
push
std
cmp
lret
pusha
shl
ret
lfs
dec
fs
add
add
dec
nop
dec
pop
std
movsl
lock
dec
mov
add
add
add
sbb
dec
pop
addr16
jge
inc
in
add
mov
add
das
xchg
add
add
out
add
jmp
jecxz
pushf
imul
and
add
inc
jg
jbe
mov
and
add
sub
mov
inc
pop
add
xchg
push
outsb
push
mov
loop
in
aam
sub
call
add
imul
add
repz
popf
pop
data16
mov
xlat
lods
adc
fimuls
add
jae
add
jne
add
sub
jge
mov
add
iret
mov
mov
push
cmp
sbb
mov
sbb
jnp
push
test
lret
xchg
cmp
cltd
pusha
ds
xchg
mov
leave
and
add
xor
icebp
lock
out
sub
addb
stos
mov
add
mov
add
rcrb
ja
cmp
cmp
les
mov
loopne
lret
pop
ds
jge
sub
dec
cwtl
in
add
fisubs
stc
inc
pop
imull
add
xchg
xchg
add
add
daa
addb
out
data16
xor
cmp
sti
sub
add
popa
test
add
xchg
scas
mov
or
add
mov
sub
push
cmc
leave
mov
lods
sbb
xchg
das
add
pop
sub
add
jmp
js
outsl
rorb
out
mov
add
xchg
repz
pop
rorl
add
and
nop
