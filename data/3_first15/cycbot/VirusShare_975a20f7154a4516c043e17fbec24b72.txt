add
add
sbb
add
add
xor
add
add
add
add
xchg
xchg
jle
jle
jle
jle
jle
add
add
add
mov
das
rol
rol
rol
rol
add
jne
cs
push
push
push
jmp
jmp
inc
inc
inc
add
pusha
pusha
pusha
add
add
add
push
push
push
push
push
push
push
push
push
jbe
jbe
add
add
roll
add
add
pop
pop
arpl
fwait
fwait
or
in
in
ljmp
data16
ret
arpl
arpl
arpl
arpl
cli
cli
add
add
cld
cld
cld
cld
cld
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
in
in
in
in
dec
dec
add
add
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jg
jg
jg
adc
adc
adc
add
add
add
fsubp
loope
loope
loope
xlat
xlat
xlat
xlat
xlat
and
and
add
add
add
add
cmp
cmc
cmc
cmc
cmc
add
add
or
dec
dec
dec
jmp
jmp
jmp
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
dec
dec
add
insb
insb
insb
insb
insb
jp
jp
jp
sub
sub
sub
sub
sub
sub
cmp
cmp
add
sahf
sahf
sahf
adc
adc
adc
adc
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
test
push
push
push
inc
inc
inc
data16
xchg
xor
xor
xor
xor
xor
add
pop
pop
pop
pop
pop
xchg
xchg
add
fistpll
jae
jae
add
sub
sub
sub
sub
sub
data16
sub
mov
inc
inc
inc
inc
inc
inc
inc
ss
inc
inc
inc
inc
inc
inc
ss
cmp
dec
xor
xor
fstp
test
add
lahf
lahf
lahf
lahf
add
rcl
rorl
insl
insl
sbb
add
lahf
lahf
mov
cwtl
cwtl
stc
stc
stc
bswap
rcl
rcl
rcl
rcl
rcl
roll
add
add
inc
inc
inc
inc
inc
push
push
push
push
add
pop
pop
pop
pop
pop
in
in
in
in
in
in
in
in
in
in
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
lret
lret
lret
sahf
sahf
adc
pop
pop
pop
pop
pop
add
add
add
add
or
out
cmp
cmp
addr16
nop
nop
lret
lret
lret
add
add
add
add
add
add
add
out
out
out
out
out
out
out
xchg
xchg
mov
mov
add
add
cmp
cmp
cmp
loope
add
clc
loop
pushf
pushf
pushf
add
lahf
lahf
lahf
lahf
lahf
lahf
roll
add
add
xor
xor
pop
jbe
jbe
roll
add
pop
pop
pop
pop
add
loop
add
bound
bound
bound
mov
int
in
in
jnp
jnp
add
add
rcl
rcl
rcl
add
fstp
fstp
fstp
fldl
add
add
add
add
add
add
add
add
add
add
rorl
add
add
add
addl
dec
dec
dec
dec
enter
enter
enter
enter
add
add
add
pop
pop
mov
jg
push
push
push
div
div
div
div
div
cwtl
cwtl
cwtl
cwtl
mov
add
adc
fldt
sub
sub
sub
sub
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
les
repz
jl
jl
jl
jl
jl
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
and
clc
clc
clc
clc
cmp
cmp
mov
add
add
int3
int3
int3
int3
int3
int3
int3
int3
and
and
pop
pop
pop
rolb
add
in
in
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
clc
clc
nop
nop
nop
aam
pop
cmp
in
in
pop
pop
pop
daa
daa
daa
mov
mov
add
outsb
outsb
outsb
outsb
outsb
daa
daa
daa
daa
daa
daa
daa
add
add
add
add
int
mov
imul
add
add
add
loope
add
add
add
or
or
imul
pop
add
add
add
out
out
out
or
or
add
lea
cmp
cmp
pop
pop
pop
add
add
add
add
add
add
add
add
jp
jp
jp
jp
jp
jp
jp
jp
mov
add
add
ja
ja
ja
add
add
mov
inc
inc
inc
inc
inc
inc
inc
pushf
xchg
xchg
xchg
xchg
sbb
add
add
add
call
push
push
mov
add
add
push
push
xchg
xchg
xchg
xchg
ds
ret
ret
ret
mov
test
add
incb
add
add
add
add
or
or
jp
jp
add
add
add
hlt
hlt
hlt
hlt
insl
lods
lods
add
rol
rol
jne
jne
jne
addb
jns
jns
push
push
push
push
push
sahf
add
test
xchg
xchg
xchg
aam
mov
adc
adc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rol
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
jno
jno
jno
lods
add
add
cmp
cmp
add
add
add
add
jecxz
dec
dec
dec
dec
add
cs
mov
add
js
js
add
int3
int3
int3
int3
add
add
cmp
mov
pop
pop
cltd
cltd
cltd
cltd
cltd
pusha
xchg
xchg
rol
roll
and
and
and
rolb
add
add
xlat
add
add
add
mov
mov
mov
ja
ja
ja
ja
ja
ja
push
add
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
mov
arpl
pop
pop
pop
pop
pop
pop
add
stos
stos
stos
stos
daa
daa
daa
daa
daa
mov
mov
outsb
outsb
add
add
push
push
push
push
push
push
add
je
je
je
add
out
out
add
mov
xor
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
in
in
in
in
in
in
ret
ret
ret
addb
addb
dec
dec
dec
dec
dec
dec
incb
add
rol
rol
rol
add
add
add
bound
in
add
add
add
inc
inc
rcl
xlat
mov
jl
jl
jl
jl
add
sbb
sbb
sbb
sbb
into
into
into
into
rcl
rcl
rcl
rcl
rcl
rcl
shr
ljmp
add
add
add
add
add
jns
add
add
clc
clc
clc
clc
clc
clc
add
pop
pop
pop
pop
pop
pop
add
dec
dec
dec
rcl
rcl
rcl
rclb
add
add
ds
or
or
or
jge
add
add
add
test
data16
add
fcmovu
ficompl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
cmp
cmp
add
add
add
ret
ret
add
test
add
push
add
add
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
cli
add
add
arpl
add
hlt
adc
adc
cs
push
push
push
push
add
add
rol
test
test
repz
jmp
ret
add
add
add
add
add
repnz
movsl
movsl
lret
xchg
xchg
xchg
stc
stc
add
add
cmp
cmp
sbb
sbb
add
add
add
xor
xor
xor
xor
xor
add
add
add
pushf
pushf
pushf
add
hlt
hlt
hlt
hlt
hlt
hlt
add
push
xchg
xchg
push
push
push
add
ds
add
or
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
cmp
xor
xor
xor
add
bound
add
add
call
call
call
and
and
and
cmp
cmp
adc
mov
mov
mov
mov
add
int
int
mov
cmp
cmp
cmp
dec
dec
dec
dec
dec
dec
dec
dec
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
pop
add
loopne
add
add
add
add
add
add
jmp
or
or
or
outsl
outsl
outsl
outsl
outsl
outsl
add
add
add
stc
jo
xchg
add
add
jmp
add
verw
out
out
out
out
out
out
out
out
out
out
add
add
add
ds
add
add
ret
ret
popa
popa
popa
sub
sub
sub
lods
lods
xchg
add
add
add
add
add
add
scas
scas
scas
mov
mov
mov
mov
jge
jge
jge
add
add
jo
jo
xor
xor
xor
cli
rol
rol
out
out
out
mov
mov
add
add
add
js
mov
jge
jge
aam
cmp
fldcw
jnp
jnp
add
add
ljmp
scas
stc
mov
mov
add
lret
lret
adc
aaa
aaa
aaa
add
add
jge
jge
jge
mov
mov
add
fsubl
cs
pop
pop
pop
jno
lea
add
xchg
fwait
fwait
fwait
fwait
fwait
mov
mov
mov
jg
add
add
add
mov
mov
mov
pop
pop
movl
aad
aad
add
add
mov
sub
imul
add
add
add
add
imul
add
and
and
and
and
add
add
stc
stc
stc
test
push
push
push
push
push
push
and
mov
mov
mov
add
pop
pop
pop
pop
push
js
js
js
js
push
push
mov
mov
mov
mov
mov
mov
mov
mov
and
add
pop
pop
pop
pop
cmp
cmp
add
loope
xor
xchg
add
jmp
and
xlat
xlat
add
sbb
add
xchg
xchg
pop
add
add
add
add
fdivrs
add
add
add
ss
ss
or
cltd
mov
imul
add
mov
mov
lock
add
mov
mov
add
add
add
aam
aam
aam
aam
jno
sbb
arpl
arpl
arpl
add
add
add
jge
clc
aaa
aaa
fcomp
fadds
repnz
repnz
div
idivb
add
add
add
sub
sub
mov
add
add
rcl
add
push
push
add
add
xor
cmp
add
outsl
outsl
outsl
add
add
and
and
add
mov
xchg
xchg
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
les
cmp
rcl
je
je
je
rcl
add
mov
mov
add
add
add
fs
inc
inc
inc
inc
inc
inc
mov
imul
push
push
push
cld
cld
cld
mov
mov
mov
add
aam
add
adc
adc
addr16
add
add
add
add
inc
cs
add
sbb
inc
or
or
or
or
or
ds
add
inc
inc
inc
sub
add
push
push
push
push
push
push
push
add
add
add
adc
xor
xor
inc
inc
inc
sub
sub
mov
add
add
pop
pop
pop
pop
pop
pop
or
xor
add
addl
ret
ret
ret
push
push
push
add
add
add
add
outsl
outsl
outsl
outsl
sti
add
daa
daa
daa
in
add
add
add
add
add
xchg
arpl
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
imul
add
add
or
or
test
sub
lods
lods
lods
add
add
mov
add
add
add
add
adc
ret
ret
ret
ret
sbb
ds
ds
add
mov
in
in
in
in
in
gs
out
out
popl
lret
mov
add
dec
rol
add
add
xchg
xchg
xchg
xchg
xchg
push
mov
fcmovu
sub
sbb
sbb
sbb
sbb
rcl
rcl
rcl
rcl
rcl
test
test
add
lcall
jbe
jbe
jbe
jbe
addr16
inc
inc
inc
and
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
add
imul
add
inc
inc
inc
inc
inc
inc
jno
jno
jno
jno
jno
jno
jge
movsl
movsl
movsl
movsl
movsl
add
mov
mov
xchg
add
add
add
add
repz
pop
pop
pop
pop
pop
mov
add
div
add
add
add
aaa
jmp
jmp
jmp
jmp
jmp
fwait
rcl
rcrb
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
out
in
in
in
in
in
loop
and
add
add
add
add
dec
dec
dec
dec
dec
in
in
in
in
in
loop
mov
add
add
loopne
loopne
pushf
pushf
pushf
pushf
pushf
pushf
pushf
cmp
add
add
add
push
push
push
push
push
sub
push
push
push
test
test
add
add
add
scas
scas
scas
scas
scas
scas
scas
scas
add
add
add
add
push
push
add
add
add
fs
add
add
add
out
lods
pop
pop
mov
add
add
jbe
add
inc
inc
popa
popa
popa
add
add
add
add
fcomp
fsubs
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
scas
out
out
out
out
into
into
into
into
mov
sbb
sbb
sbb
dec
dec
dec
dec
ja
add
inc
inc
add
pop
lret
lret
lret
lret
lret
lret
lret
lret
iret
push
push
push
push
push
push
push
lret
lret
add
add
in
in
in
add
sub
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
mov
mov
mov
mov
add
nop
nop
nop
nop
nop
nop
nop
mov
add
jl
jl
inc
inc
inc
mov
mov
mov
mov
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
and
and
and
add
add
add
mov
add
add
xchg
cmp
mov
sbb
lahf
add
add
add
add
xor
inc
inc
inc
inc
data16
int3
int3
int3
int3
int3
int3
int3
sbb
sbb
add
fs
cmpsl
cmp
or
or
sub
add
lock
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
in
in
in
in
in
mov
mov
add
add
mov
mov
add
ja
ja
ja
ja
ja
ja
ja
ja
rcl
push
push
push
push
add
fstp
into
into
into
into
sbb
sbb
sbb
sbb
sbb
add
add
add
xchg
xchg
push
in
in
pop
add
add
inc
inc
leave
leave
leave
leave
leave
leave
pop
pop
fidivs
xor
ret
ret
ret
ret
or
push
push
push
push
add
add
dec
dec
dec
dec
dec
dec
add
fstp
add
inc
dec
dec
dec
dec
dec
dec
dec
mov
in
in
in
in
in
in
ret
ret
mov
add
dec
dec
dec
add
add
add
add
add
out
add
add
add
jno
sbb
sbb
test
pop
pop
mov
mov
inc
inc
inc
cmp
inc
inc
inc
inc
inc
ret
xor
lret
sti
sti
sti
or
or
or
or
add
add
add
jnp
jnp
add
add
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
and
and
fs
add
add
add
add
fscale
std
std
std
std
movsb
movsb
movsb
push
push
rcl
rcl
add
outsl
outsl
outsl
outsl
ss
sbb
in
in
add
add
add
add
add
addl
mov
mov
mov
inc
inc
inc
add
add
add
add
imul
add
add
add
sbb
sbb
add
add
ja
ja
mov
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
addl
dec
dec
add
add
add
insb
add
in
in
add
add
out
adc
adc
add
add
add
add
bound
bound
bound
add
in
in
add
add
jmp
add
add
daa
daa
daa
daa
daa
daa
add
add
add
popl
add
add
or
add
add
add
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
leave
leave
arpl
arpl
data16
xor
xor
rol
add
dec
dec
dec
dec
dec
dec
add
add
inc
push
push
push
out
out
ljmp
push
push
push
push
push
push
add
add
add
add
add
add
stc
stc
stc
stc
stc
test
imul
add
jge
jno
dec
dec
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
aaa
aaa
aaa
aaa
aaa
add
add
add
fnstenv
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
add
or
or
ljmp
or
add
jbe
jbe
add
push
push
push
add
add
jae
jae
fcmovnu
add
add
add
ret
add
add
add
adc
adc
imul
imul
pop
pop
add
addb
mov
mov
mov
lea
lea
add
add
add
add
add
mov
test
test
bound
bound
add
add
dec
dec
dec
dec
dec
add
dec
dec
dec
dec
dec
insb
insb
insb
fcmovu
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
test
cmp
cmp
cmp
cmp
cmp
add
add
add
mov
mov
mov
mov
sub
sub
sahf
add
add
add
push
push
push
add
cli
cli
jl
jl
jl
lods
lods
lods
gs
faddl
add
add
push
push
push
or
int
add
add
add
jbe
jbe
add
out
out
out
jae
jae
jae
pop
pop
pop
gs
add
pop
pop
fwait
xor
add
add
jmp
jmp
jmp
popf
popf
popf
popf
popf
add
and
add
add
add
add
mov
mov
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
add
filds
pop
add
push
and
inc
inc
inc
in
mov
mov
sbb
sbb
sbb
iret
iret
add
add
mov
add
add
add
popf
popf
popf
popf
popf
and
add
push
push
push
push
push
push
push
push
push
push
push
add
aaa
aaa
aaa
aaa
mov
testb
add
addb
pop
inc
inc
inc
ret
add
mov
add
add
inc
inc
inc
add
into
into
into
into
into
into
pop
pop
clc
in
add
add
add
mov
push
push
push
push
push
push
push
push
add
adc
adc
adc
adc
adc
add
add
add
add
mov
add
add
add
add
add
dec
dec
dec
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
push
push
add
add
add
push
push
add
in
in
in
popl
add
add
ljmp
xchg
pop
pop
pop
add
pop
pop
pop
pop
cmp
xor
xor
xor
xor
xor
add
add
fcomp
fcomp
fcomp
fcomp
fadds
add
xlat
in
in
in
in
in
in
in
add
add
rcl
rol
mov
mov
add
shll
and
mov
add
add
jns
jns
jns
stos
stos
cmp
cmp
cmp
cmp
cmp
div
div
div
div
jg
jg
jg
jg
in
in
cmc
or
add
add
add
dec
dec
add
jge
add
cld
cld
cld
cld
cld
cld
test
add
add
add
add
movsl
add
ja
ja
ja
ja
ja
ja
or
jmp
xor
xor
xor
xor
xor
xor
cmp
cmp
cmp
add
pop
pop
pop
pop
pop
pop
pop
add
add
add
pushf
pushf
add
add
add
add
ds
add
adc
xor
xor
jnp
cmp
cmp
cmp
add
add
add
jmp
aaa
aaa
aaa
aaa
aaa
aaa
aaa
lcall
lock
jge
pusha
pusha
pusha
pusha
loopne
loopne
add
mov
mov
add
repnz
add
add
add
rcl
rcrb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jb
jb
jb
jb
add
push
push
push
push
push
push
push
add
add
movsb
movsb
movsb
aam
aam
add
add
fsubrl
scas
scas
scas
scas
scas
add
add
add
add
add
dec
out
imul
sahf
sahf
sahf
sahf
sahf
lcall
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
inc
inc
inc
inc
xor
xor
stos
stos
stos
stos
stos
stos
stos
stos
stos
sub
sub
add
cs
xchg
add
add
fiadds
add
add
add
add
add
add
add
add
add
add
add
adc
adc
add
add
add
add
ljmp
aaa
add
dec
add
add
pop
pop
pop
add
add
add
add
rcl
rcl
rolb
add
js
add
add
xor
xor
xor
add
add
addl
mov
add
add
in
in
in
in
add
add
add
add
add
pusha
repz
xchg
add
into
add
add
das
or
rcl
rcl
aam
cld
cld
mov
mov
add
add
add
add
out
out
out
out
out
push
push
xor
xor
add
push
push
cmpsb
cmpsb
cmpsb
es
add
inc
inc
inc
inc
inc
inc
inc
inc
xchg
push
std
std
std
std
std
std
std
xor
dec
dec
dec
lahf
lahf
lahf
lahf
lahf
lahf
lahf
pop
pop
pop
add
repnz
mov
mov
mov
mov
xlat
xlat
xlat
xlat
xchg
sbb
sbb
sbb
lock
das
das
das
das
das
das
das
das
das
das
add
adc
adc
adc
add
add
lds
adc
adc
jecxz
jecxz
add
stc
and
add
addl
sub
add
add
add
div
div
div
div
div
div
or
or
add
sub
sub
sub
sub
sub
jno
jno
jno
jno
jno
jno
jno
jno
sti
sti
sti
sti
sti
add
add
pop
pop
pop
imul
dec
dec
mov
mov
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ret
add
dec
dec
dec
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
mov
add
adc
and
and
and
repnz
mov
mov
mov
pop
ret
ret
ret
ret
add
add
add
add
push
push
push
push
push
push
mov
rcl
roll
add
loop
loop
add
iret
iret
iret
iret
iret
iret
iret
add
add
add
sti
add
add
add
add
push
jne
jne
jne
jne
jne
jne
jne
add
lcall
addb
in
in
in
in
in
in
in
in
in
jns
add
add
and
add
add
dec
dec
add
add
add
out
out
mov
add
add
add
add
inc
pop
pop
pop
adc
adc
adc
aas
aas
aas
add
add
or
or
add
add
add
add
es
testl
add
fcomp
fcomp
fcomp
fcomp
fcomp
inc
inc
inc
loopne
loopne
loopne
loopne
loopne
loopne
add
add
add
add
mov
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
add
add
adc
adc
fs
jge
jge
add
push
push
push
add
add
add
lds
fadds
js
xchg
xchg
xchg
mov
xchg
xchg
fcmovnu
fcmovnu
fcmovnu
je
je
aam
aam
fcmovnu
add
repnz
sti
sti
pop
pop
pop
pop
pop
pop
pop
lds
dec
dec
dec
dec
dec
test
add
mov
mov
movsb
movsb
movsb
movsb
into
les
lret
lret
lret
add
add
add
add
add
aad
mov
mov
mov
add
push
add
fs
add
add
add
add
ret
ret
ret
ret
add
idiv
std
std
std
std
pop
pop
add
add
add
add
test
test
add
inc
inc
inc
inc
inc
inc
inc
inc
mov
add
add
add
int
hlt
sti
sti
add
add
cwtl
cwtl
cwtl
cwtl
cwtl
add
add
jge
outsb
outsb
fwait
fwait
fwait
fwait
fwait
add
das
das
rcl
sarb
addb
add
add
add
add
push
push
push
push
add
rcl
rcll
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
push
push
push
add
add
add
add
sub
sub
adc
add
int3
int3
int3
adc
adc
addb
add
add
add
pmulhuw
in
push
push
push
push
pop
pop
pop
add
add
add
dec
dec
dec
dec
dec
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
add
addr16
add
add
add
ss
add
add
jno
push
push
add
add
add
add
or
addb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
adc
adc
add
add
add
lea
add
add
dec
add
fmull
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
imul
add
xchg
xchg
add
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
jno
jno
adc
rol
rol
rol
rolb
add
add
add
add
add
add
testb
add
add
add
add
sub
adc
adc
add
add
add
or
add
add
add
shll
mov
mov
iret
iret
and
and
mov
mov
les
add
out
out
sub
sub
sub
sub
sub
sub
cmp
add
add
add
jo
insl
les
mov
mov
mov
mov
pop
push
dec
in
mov
insb
or
add
adc
andb
push
pop
or
or
sarb
das
mov
addb
push
and
dec
lcall
add
pop
sbb
int
add
add
cltd
inc
mov
mov
sbb
mov
int
popa
jle
add
pushf
or
stos
pusha
pusha
lahf
loope
fucomp
add
roll
sub
mov
les
stos
addb
shlb
and
inc
fsubrp
and
add
pop
xchg
cmp
jbe
pop
movq
or
pop
xchg
movsl
jns
aas
pop
cmpl
add
and
xchg
ds
pop
pop
out
fst
push
and
lret
rolb
into
in
push
rclb
daa
cmp
mov
stos
aas
jno
in
xchg
add
clc
les
mov
dec
or
xchg
loope
out
shl
add
dec
jmp
ja
add
pusha
jns
test
mov
push
std
inc
jle
pusha
pusha
ljmp
pop
loopne,pn
mov
into
and
ss
push
or
jecxz
outsl
push
dec
lock
shl
out
cmp
call
jb
mov
test
pusha
inc
test
pusha
cmp
stos
add
std
loope
fistpll
rorl
pusha
and
and
ja
popf
jns
xchg
jb
cs
mov
inc
inc
test
add
inc
inc
test
std
cmpl
mov
outsl
dec
xchg
loop
or
mov
rolb
loopne
std
outsb
stos
shll
pop
test
rcr
sbb
mov
rorb
arpl
sub
add
pop
pop
loopne
pop
xchg
pop
mov
repnz
mov
cmp
inc
pop
int
fstp
dec
les
and
jmp
add
movsl
loop
mov
andb
add
sbb
cmp
ficomps
pminsw
rcrb
push
imul
mov
mov
jnp
add
andb
jge
and
inc
and
aam
and
pop
jnp
mov
inc
jb
mov
sbb
push
shlb
cwtl
mov
add
daa
into
pop
ja
stc
sbb
int3
enter
add
test
push
add
js
mov
mov
sti
das
lds
cld
rolb
loopne
sub
and
jns
movsb
add
adc
rcrl
pusha
mov
hlt
in
mov
andb
fcomps
hlt
fs
ror
stos
add
out
xlat
cltd
scas
andb
dec
add
loopne
adc
mov
inc
rorb
dec
xor
fbld
lds
mov
loopne
in
es
imul
or
insb
xchg
inc
jno
cld
push
pop
imul
cmc
frstor
pusha
pusha
jmp
mov
mov
cmc
pop
mov
divl
inc
nop
fwait
xor
push
cwtl
or
cmp
xor
add
andb
test
adcb
adc
mov
cmp
pusha
add
lock
bound
and
mov
mov
rol
add
and
jne
fwait
cmpxchg
loopne
aas
scas
loopne
lahf
fdivp
xor
adc
inc
xor
inc
lret
call
lods
sbb
aas
pop
push
inc
xor
and
push
cwtl
and
and
xchg
sbb
mov
cmc
xchg
pop
out
dec
cmp
xor
loopne
movsb
and
mov
jnp
out
mov
add
sarb
jo
xchg
aad
inc
xor
jae
out
dec
fldl
add
xchg
jecxz
xlat
ret
or
add
jmp
pusha
pusha
pop
aaa
out
pusha
dec
cmp
and
enter
and
loopne
imul
jmp
ja
loopne
mov
sub
sti
push
or
mov
and
rcrb
xchg
jne
xchg
je
add
ret
aaa
or
loopne
inc
imul
loopne
js
rcrb
inc
inc
movsb
pusha
add
mov
inc
pop
xchg
outsl
nop
fistpl
shlb
inc
pusha
out
pop
daa
sbb
in
pop
js
nop
or
sbbl
add
nop
add
jmp
mov
mov
jle
inc
addb
scas
andb
ja
add
mov
adc
inc
divl
mov
xor
loopne
sub
pop
add
xorb
sarb
mov
ljmp
cmp
pop
lock
lret
icebp
add
mov
xchg
xchg
pop
adc
add
inc
jmp
jmpw
push
add
dec
loope
mov
jg
inc
pusha
push
xchg
mov
mov
loopne
test
mov
ja
add
addb
addb
repnz
sub
xchg
or
je
stos
inc
add
mov
or
rcrb
dec
aad
add
add
adc
xchg
mov
inc
pop
scas
addb
mov
push
inc
movl
pop
xor
cmp
sbb
dec
jae
and
test
pusha
sub
inc
cmc
xor
add
add
rcrb
outsb
iret
dec
imul
xor
adc
mov
lret
mov
aam
invd
rolb
fs
lret
fxch
scas
push
mov
addb
mov
and
jb
cmp
inc
daa
addl
rorb
lret
pushf
push
loopne
cmp
mov
outsb
sbb
adc
loopne
add
imul
loopne
inc
lods
add
es
loopne
pusha
loopne
test
dec
cmp
sub
mov
movsb
rol
repz
and
mov
cld
rorl
cwtl
aas
jmp
mov
ss
inc
aam
pop
adc
and
loope
ljmp
push
add
push
push
mov
jno
xlat
add
rcrb
mov
xchg
inc
test
sbb
jnp
aaa
adc
mov
mov
jne
mov
and
fisubrs
test
pusha
mov
sub
mov
aas
add
in
les
pusha
add
or
and
shlb
ror
jl
outsb
sbb
and
xchg
adc
cmp
jg
cmp
addr16
stos
and
mov
scas
inc
add
popf
lret
aad
jbe
xchg
sbb
test
shlb
xchg
addl
jge
fisttpl
pusha
inc
mov
mov
add
pop
xlat
gs
dec
cwtl
or
fcomp
ret
fsts
ss
add
push
leave
fcompl
insl
ret
loopne
ret
xchg
das
xchg
or
add
lock
andb
pop
dec
sub
add
mov
and
subb
xchg
lods
inc
and
add
xorb
aam
andl
dec
insl
repnz
rolb
and
int
mov
and
mov
mov
imul
mov
andb
pop
push
pop
cmp
enter
sbb
add
push
ja
js
aam
pop
out
mov
mov
inc
mov
loopne
lahf
inc
push
add
mov
cmpb
into
pop
outsl
pop
hlt
lahf
push
inc
loopne
pop
test
inc
mov
out
repnz
pop
pushf
fdivrs
test
or
movsl
push
inc
mov
pop
mov
push
and
add
mov
adc
inc
cmpsb
pusha
add
bound
add
frstor
and
loope
sbb
imul
pop
fsubp
sub
sub
jge
insl
in
test
and
ljmp
lods
add
push
inc
lea
ret
fwait
inc
aam
pusha
inc
imul
and
inc
jle
aad
ret
mov
inc
push
ljmp
ficoml
dec
jg
pusha
mov
hlt
inc
jle
mov
mov
pop
mov
loopne
sub
and
cmp
movsb
inc
cmpb
mov
test
mov
pop
dec
adc
aas
sar
mov
xorl
std
and
loopne
pop
popa
mov
cli
es
sbb
pop
andb
jl
jmp
push
xorl
sbb
inc
imul
xor
dec
mov
mov
cmc
idivb
or
shlb
sub
pusha
addb
add
mov
mov
xchg
jge
mov
dec
mov
rclb
leave
and
pop
fwait
sub
loopne
or
mov
pop
pop
xor
push
imul
imull
ror
addr16
mov
lods
roll
dec
and
inc
fidivl
das
ret
mov
insl
jmp
cmp
mov
xor
int
les
clc
xor
fs
ds
pop
xchg
or
add
out
lds
mov
loop
xchg
xchg
jle
xor
pop
int
sub
pop
icebp
fs
mov
push
shlb
stos
dec
cwtl
jge
ret
add
idivb
lods
stc
ljmp
fdiv
out
dec
pusha
imul
rorb
cmc
js
sub
mov
pushf
mov
fiadds
mov
fmul
or
sbbb
inc
into
mov
orb
mov
and
mov
aad
sub
mov
mov
and
addb
mov
xchg
xchg
sbb
pusha
rorb
mov
lods
aas
add
and
into
mov
enter
mov
jae
push
push
xor
das
jge
add
push
andb
or
rorb
jns
popf
jmp
xor
inc
inc
out
or
loopne
addb
xchg
sub
xor
inc
mov
movsb
and
xchg
jmp
scas
add
add
pusha
mov
loopne
ss
test
mov
jnp
push
std
rcll
out
push
pushf
data16
xlat
stos
andb
mov
pop
push
mov
push
sub
mov
fcompl
and
imul
dec
cmp
inc
inc
cmp
test
pusha
cmp
adc
nop
jecxz
out
js
cs
inc
aas
aaa
xor
mov
pusha
pusha
les
xchg
pop
int
push
sub
and
lcall
sahf
mov
xchg
dec
mov
add
andb
pop
decl
adc
shll
outsl
jmp
fstpt
push
adc
out
fwait
push
sbb
jns
aam
mov
addb
test
clc
or
out
and
add
clc
ret
ss
mov
lods
or
add
pusha
loopne
cltd
or
mov
outsl
sbb
rolb
mov
jle
dec
lcall
push
rolb
jge
cs
inc
dec
inc
xchg
out
idivl
je
std
adc
ss
cmpsb
shlb
icebp
mov
mov
andb
mov
inc
sbb
aam
adc
jnp
push
call
out
jo
aad
inc
loopne
add
movsb
pusha
inc
mov
jmp
xchg
push
and
push
pop
sti
push
in
dec
pop
or
lret
shrb
pusha
xor
push
testl
pushl
aad
insl
je
pop
push
add
jmp
loopne
inc
mov
xor
aaa
test
loopne
inc
loopne
push
popa
jge
or
pusha
inc
adc
inc
movsb
and
xchg
jae
dec
addr16
repz
and
andb
scas
push
shl
scas
inc
add
mov
sub
loopne
jecxz
pusha
add
leave
cmpsb
add
adc
jp
insl
insb
sub
inc
loopne
push
in
add
jmp
fnstcw
movsb
and
dec
adc
loopne
mov
mov
add
outsl
add
jg
push
mov
pop
inc
mov
and
mov
add
shrb
repz
push
xchg
add
ja
mov
fisttpll
and
xor
mov
add
mov
loopne
push
loopne
jl
xchg
inc
xor
js
lret
xor
rol
subl
and
adc
push
add
or
mov
mov
shl
push
pusha
cmp
inc
subb
addb
loopne
inc
cmpsb
add
ret
and
das
nop
lret
aas
icebp
bound
into
cmc
dec
hlt
fcmovb
sub
fisttpl
add
data16
mov
inc
bound
in
rolb
shl
bound
addb
cltd
xchg
lock
inc
add
mov
pushf
call
sub
sbb
fbld
add
fld
icebp
pop
dec
xorl
or
add
daa
lret
cmc
cmc
push
mov
pusha
jne
add
shrb
jge
push
into
sub
loopne
rolb
leave
adc
enter
hlt
cmp
and
roll
cmc
adc
andb
inc
pusha
cwtl
mov
jnp
icebp
imul
daa
pop
sub
mov
mov
sub
and
jbe
lcall
inc
fmulp
jge
inc
push
xchg
addr16
ljmp
shlb
mov
andb
loopne
aaa
in
inc
roll
dec
push
dec
xor
xchg
add
mov
or
loopne
mov
add
jno
stos
int3
or
int3
std
jnp
into
je
push
inc
jp
inc
aas
adc
jns
ret
sub
loopne
test
loopne
js
adc
push
fidivrl
test
add
pop
andb
xchg
mov
inc
pusha
push
mov
lds
mov
pusha
shrb
stos
shl
sub
inc
cmp
andb
pop
mov
into
pop
lds
cmpsl
push
and
sti
ret
jbe
cmp
xor
mov
stos
iret
inc
aad
inc
add
pop
mov
lea
jb
sbb
xor
add
cmpb
stos
pusha
mov
je
inc
insb
mov
inc
clc
fcomi
push
cmp
jp
outsl
loop
sub
addb
fwait
mov
add
scas
mov
dec
pop
std
mov
filds
mov
loopne
out
add
shrb
test
sarb
jo
add
stos
dec
es
into
pop
and
loopne
sub
addb
dec
mov
inc
imul
hlt
mov
add
sbb
ret
inc
mov
mov
adc
pusha
and
pop
push
sahf
jbe
mov
mov
loopne
jbe
xor
mov
sub
add
cmc
in
pop
or
add
ja
scas
inc
add
xchg
push
and
mov
mov
lds
pusha
ror
repz
data16
loopne
mov
xchg
call
sub
mov
cmpsl
ss
or
aam
in
push
jmp
and
imul
rorb
jne
jmp
sti
xchg
xor
jl
hlt
neg
and
mov
and
push
lods
inc
mov
adc
add
lret
inc
rorb
shl
mov
ljmp
cmc
gs
popa
inc
or
rclb
loopne
add
push
test
or
add
dec
lret
push
cwtl
add
loopne
addb
ret
or
gs
sti
inc
lods
mov
adc
mov
sarb
shll
loopne
sub
aas
mov
inc
inc
xchg
ret
mov
and
test
testl
fwait
sbb
push
lea
mov
sbb
mov
in
xchg
jmp
ss
jnp
in
mov
out
pop
outsb
cmp
pop
jb
add
lcall
jo
mov
inc
xor
sbb
mulps
sub
dec
mov
jae
xor
inc
inc
pusha
lock
mov
pop
leave
ss
mov
xchg
cmp
and
and
loopne
pop
sub
loopne
cmp
mov
in
pop
push
in
insl
cmpsl
and
addb
and
mov
fdivs
fstps
stc
mov
arpl
mov
aaa
dec
insb
jns
ss
shlb
mov
add
loopne
lock
rcll
pusha
xorb
js
xor
jb
aaa
and
inc
add
inc
outsb
lock
mov
mov
adc
push
fwait
adc
sbb
pusha
inc
or
xchg
adc
fsub
jmp
repnz
sub
mov
imul
pop
and
xchg
pop
push
add
insb
notb
jae
gs
dec
xchg
lcall
fisttpll
adc
lods
rolb
sbb
and
push
push
and
and
and
mov
lret
pop
addr16
push
cli
and
inc
push
rolb
rolb
jmp
jbe
insb
lahf
or
out
mov
adc
cmp
mov
and
mov
js
jns
popf
xchg
sbb
pusha
xchg
mov
xorb
xor
push
pushf
or
andb
mov
xor
sbb
pusha
add
mov
movhps
push
loopne
cmp
pop
addr16
push
shl
test
addb
xchg
and
and
xchg
scas
loopne
pop
out
stos
and
xchg
mov
je
hlt
pusha
mov
and
push
and
adc
test
loopne
push
loop
and
enter
dec
push
mov
add
sbb
add
mov
pusha
cld
ror
jmp
sbb
xor
test
cmpb
add
jl
into
data16
jb
popf
test
inc
jnp
xor
add
add
inc
rcrb
das
and
add
xchg
mov
pop
js
movsb
pusha
loopne
xlat
xchg
test
punpckhbw
and
andb
mov
mov
mov
cmp
push
mov
fcmovnbe
adc
push
jp
pop
push
adc
lea
popa
into
jb
out
jb
rolb
pusha
inc
outsb
in
pusha
pusha
push
sahf
cmp
mov
in
movsl
fidivl
mov
mov
mov
shrb
mov
and
sub
or
dec
ss
andb
js
mov
cld
ret
or
add
test
rolb
pusha
sti
jecxz
mov
stc
push
int3
pop
or
loopne
inc
shlb
lcall
and
aas
push
fbstp
lods
or
mov
xor
pusha
pusha
addb
jne
ror
inc
mov
push
andb
out
fdivrl
orl
and
or
or
add
or
sahf
loopne
sbb
gs
std
in
sbb
jo
sub
add
fstl
fsubs
dec
xor
rolb
in
ds
repnz
call
mov
push
sahf
mov
and
addb
lock
mov
or
mov
inc
popf
push
loopne
mov
sar
cltd
xor
push
xor
imul
loopne
mov
rcrb
add
sti
sar
jg
mov
or
add
insl
pop
sub
mov
iret
jg
sbb
inc
mov
or
xor
jbe
mov
sub
ds
add
jnp
shl
aaa
xchg
data16
xorl
iret
fsubl
inc
loopne
inc
cmp
add
int
cs
cmpsl
push
outsl
mov
adc
inc
jp
xchg
rorb
sbb
inc
and
xor
loop
std
icebp
adc
adc
add
dec
xchg
div
out
cs
shlb
and
pusha
inc
mov
test
iret
jge
add
pop
and
inc
in
or
push
push
jae
add
mov
push
sbb
pusha
shlb
ret
add
addb
sbb
xchg
or
lea
shlb
and
cmpsl
sub
pop
cmp
inc
xchg
bound
scas
mov
pusha
pusha
pop
xor
cmp
jns
popl
rolb
mov
and
mov
jmp
cmpb
pop
rolb
iret
mov
jo
rol
jmp
pusha
insl
fstl
aas
sub
inc
sarb
jecxz
int3
js
dec
fld1
mov
sub
sub
adc
loopne
loop
cli
data16
sub
and
push
ret
jl
fninit
push
mov
or
mov
and
shrb
adc
std
mov
add
mov
inc
pusha
repz
and
adc
imul
test
mov
insb
lret
outsl
cmp
dec
mov
inc
fcomps
push
add
mov
popf
sbb
jae
and
pop
mov
sti
bound
fnsave
fisubl
dec
or
pusha
cmc
fmull
pop
jno
cmp
subl
loopne
cld
iret
cmp
push
repnz
js
sahf
sbb
mov
fisubl
jge
push
push
mov
mov
outsb
pushf
jno
cmp
and
test
imul
fs
mov
pushf
imul
inc
popf
cltd
fisttps
inc
pop
sbb
mov
dec
subl
ja
push
sub
pusha
test
outsb
xchg
dec
fnsave
dec
mov
add
xchg
mov
xor
jbe
add
inc
sub
add
repz
jp
gs
mov
je
xor
fldcw
pop
fidivrs
popa
sub
xchg
pusha
cmpsl
mov
inc
popf
sub
jno
mov
shlb
push
jb
add
pop
and
ret
cmc
scas
int
inc
add
mov
inc
or
cmpb
mov
popl
loopne
adc
adc
loopne
cmp
addb
fidivs
scas
and
test
push
js
mov
andb
pop
incl
cli
dec
pop
loope
aam
setne
xchg
outsl
push
dec
pop
test
ficoml
shl
sub
jge
inc
loopne
and
sarl
cmp
mov
mov
pop
add
int3
jne
dec
pop
gs
sbb
aad
mov
xchg
scas
ja
jg
jmp
adc
je
out
scas
pusha
mov
outsl
imul
lea
adc
mov
jae
add
pop
fnsave
add
aad
loope
or
loopne
and
inc
pop
push
test
test
sub
inc
sbb
rolb
lods
xor
inc
shl
xor
sub
icebp
push
sbb
inc
push
push
sbb
cmp
loopne
xchg
push
rol
out
in
mov
jno
mov
xchg
lea
inc
and
dec
movsb
inc
shrb
std
setb
andb
dec
lret
xor
push
andb
es
mov
or
xor
loopne
pusha
loopne
shlb
loope
push
popf
fnsave
jmp
loop
mov
insb
insb
and
loopne
xchg
push
jne
addb
aam
and
inc
mov
in
repnz
loopne
movsb
loopne
das
mov
mov
push
inc
shrb
jo
add
sub
or
sbb
push
shl
pop
sub
jno
xchg
popa
adc
test
add
and
mov
jb
leave
repz
lock
or
frndint
inc
mov
iret
arpl
and
in
mov
aaa
je
sub
lret
outsb
jecxz
das
xor
jne
dec
cmp
mov
fldenv
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
xchg
inc
lret
add
inc
push
inc
mov
pop
pop
dec
out
in
add
mov
dec
sahf
push
sub
rolb
or
cmpb
xor
dec
xchg
and
cld
lcall
insb
inc
je
and
es
cmp
pusha
hlt
pushf
cmpsl
inc
xor
sbb
mov
inc
in
aad
sahf
fsubrs
mov
and
add
rcrb
cmp
xchg
loopne
sub
std
ret
pop
jg
loop
shlb
jmp
stos
pusha
loopne
mov
subb
hlt
shrb
rol
insb
out
mov
stos
shl
andb
scas
add
mov
inc
shlb
ficompl
movsb
shlb
or
inc
pop
jns
mov
xorb
add
fcmovnu
daa
pop
sbb
ficoml
sbb
mov
aaa
je
add
clc
push
push
adc
daa
fstl
dec
cmc
mov
jb
lds
stos
and
pushf
aam
jp
bound
inc
rcrb
addb
scas
and
mov
loopne
mov
add
rorb
lret
mov
or
loopne
aam
lret
pusha
loopne
sbb
and
loopne
pusha
and
xchg
stos
cwtl
lret
je
cmp
fcomps
dec
movsb
inc
inc
jo
ds
or
and
shlb
push
pop
aas
push
dec
incl
rcrl
ret
je
mov
inc
cwtl
std
jg
xor
in
add
push
aad
add
stos
inc
subb
lahf
pushf
push
das
mov
and
and
mov
pop
fisubs
rorb
dec
cmp
sbb
clc
xor
jae
sbb
loopne
jo
mov
xchg
push
inc
int3
sub
iret
xchg
ret
xchg
sbb
aas
add
mov
imul
loopne
mov
mov
std
ret
loopne
ss
mov
rcrb
shlb
fnsave
insb
aam
add
insb
in
sbb
inc
aad
add
push
and
lea
pop
ljmp
xchg
pop
mov
nopl
adc
push
or
addb
imulb
inc
loopne
out
cmp
add
push
mov
jbe
push
loopne
jmp
add
adc
add
shrb
adc
shlb
inc
push
ljmp
rclb
addb
push
es
pusha
cvtpi2ps
sbb
cmp
mov
sub
mov
add
push
rol
inc
sbbb
rorl
xor
lock
pop
mov
inc
xchg
add
pusha
inc
sbb
push
mov
daa
sarb
rolb
test
shl
mov
pop
fdivs
popa
sub
xor
pop
push
leave
ds
orb
loop
and
orb
loop
and
mov
out
mov
rdpmc
fidivrs
out
mov
add
cmc
cmp
loopne,pn
int3
cli
pop
push
pop
pop
rclb
push
xchg
mov
notl
add
test
and
push
ret
sub
test
dec
jnp
aad
and
dec
add
shlb
xorb
insl
push
dec
mov
push
cmp
mov
add
pushf
testl
addb
addb
mov
add
pop
out
rep
dec
aas
les
dec
mov
loopne
sub
inc
sub
minps
mov
std
adc
xor
add
shrb
pusha
push
sbb
mov
and
xor
xor
bswap
adc
push
sahf
mov
in
push
push
loop
cmpsl
in
cld
jo
fstps
or
pusha
shlb
popf
or
push
mov
xlat
mov
sub
inc
neg
xlat
mov
shlb
loopne
inc
or
add
jmp
hlt
mov
fcomi
push
shlb
add
ljmp
addb
lret
push
jp
pushf
enter
jno
jl
inc
mov
lcall
add
sbb
adc
mov
imul
add
loopne
lock
inc
jo
ja
in
int3
sub
daa
mov
imul
dec
cltd
push
pop
xor
xor
jle
inc
add
rorl
test
jmp
lcall
nop
xchg
sub
movsl
mov
add
xchg
xchg
add
mov
or
and
aad
jo
aad
in
mov
out
scas
inc
add
stos
clc
push
addb
sbbl
mov
push
sub
mov
mov
mov
xor
movl
mov
cmpl
sbb
je
and
divb
pusha
js
shrb
test
lock
bound
cmp
add
mov
loope
jb
test
int
test
pusha
rolb
mov
push
and
cmpsl
stos
loopne
stc
adc
and
fstl
scas
lock
rol
jl
cld
mov
sub
inc
and
inc
into
loop
inc
imul
pop
aas
rcll
jb
pusha
arpl
hlt
ja
pushf
jmp
push
ret
outsb
sarb
sub
add
jmp
mov
mov
pusha
loopne
mov
push
mov
dec
sbb
lcall
ret
dec
insl
lea
call
in
cmpsl
enter
pusha
mov
mov
pusha
movsl
pop
inc
mov
popl
into
and
addb
ret
jle
pop
xor
cmp
xchg
icebp
loope
jp
loopne
mov
rcr
mov
in
cmp
test
inc
test
rcrb
jns
les
subb
andb
popf
cmp
insb
mov
mov
punpcklwd
movsl
cmp
push
or
in
add
loopne
mov
pusha
adc
int
push
imul
push
lahf
ss
jo
mov
ss
rol
xor
mov
out
ds
frstor
fsubs
ss
lods
and
and
sub
add
sub
inc
xchg
dec
test
stos
mov
pushf
repnz
icebp
xor
pusha
loopne
pusha
pusha
lock
inc
out
xchg
pop
mov
shll
xor
adc
pop
pushf
shl
addb
inc
jl
mov
adc
lret
insl
bound
ja
pop
jae
rol
push
dec
les
into
dec
dec
lea
add
and
fcmovnbe
inc
push
sbb
sbb
xor
jecxz
icebp
lcall
pop
cs
andb
jno
push
inc
pop
dec
mov
insb
jne
out
add
hlt
xchg
jge
push
mov
insb
inc
jecxz
jg
push
push
cs
rcrb
ljmp
add
out
insb
mov
jno
and
nop
daa
lcall
push
add
lods
add
loopne
repnz
loopne
sub
test
mov
int3
hlt
nop
in
pushf
mov
xchg
aaa
leave
cmc
das
add
push
dec
push
mov
adc
mov
addb
adc
mov
push
adc
mov
fs
dec
or
pusha
in
aam
cmpsb
inc
add
xor
add
aam
loope
aaa
imul
dec
sbb
out
imul
loopne
jg
mov
add
sub
mov
out
xchg
sbbb
push
push
adc
mov
push
cmpsw
mov
add
sahf
xor
add
test
loopne
enter
orb
outsb
test
leave
mov
inc
and
testl
pusha
inc
test
popf
jns
mov
and
sbb
inc
out
pop
lcall
iret
lret
lea
nop
pop
out
mov
and
mov
cwtl
pop
mov
bound
push
loop
repz
jbe
sub
stos
lcall
loopne
sti
fucomip
ss
sarb
jg
push
jbe
pop
shlb
nop
rcrl
loopne
gs
xor
lcall
loopne
inc
pusha
push
inc
rolb
mov
je
push
xor
cmc
aad
push
mov
mov
xchg
cmpsl
aam
pusha
shlb
dec
test
rolb
mov
push
sub
aam
outsl
push
mov
pop
xchg
or
movsl
jp
lahf
inc
push
scas
and
sbb
mov
mov
inc
xor
scas
xor
imul
enter
rcrl
mov
fsubl
adcb
mov
xor
int
xchg
xchg
and
cli
push
and
loopne
jg
and
xchg
add
xorb
aas
lahf
add
addb
jo
pop
inc
std
dec
add
add
jns
jmp
xchg
sbb
sar
scas
loopne
cld
outsl
aam
xor
or
and
outsb
jle
aad
shlb
pop
xchg
sub
call
jmp
mov
orb
add
and
imul
enter
and
add
inc
addb
lods
loopne
hlt
cmp
mov
loopne
dec
jle
pop
jmp
shlb
inc
popa
cmp
sbb
add
add
jne
shlb
cmp
sbb
lret
jo
jo
sahf
fucomip
mov
add
mov
mov
fwait
and
fildll
add
mov
testl
repnz
sbb
hlt
jmp
popa
repnz
or
inc
mov
fidivrl
shr
shll
add
pop
adc
sahf
aaa
lds
loopne
mov
daa
scas
repz
pusha
loopne
mov
lea
loopne
fstpl
and
fdivp
idivl
decb
rcrb
rolb
add
dec
cmp
shlb
jmp
sbbl
adc
add
cmp
mov
pusha
loopne
cmp
rcr
pop
sarl
adc
andb
les
and
dec
push
and
and
mov
xchg
dec
mov
and
xor
mov
movsb
pusha
add
das
cmpsb
pusha
loopne
rol
ficoms
xor
sbb
fsubr
scas
jne
jle
cltd
xchg
lret
in
lock
fimuls
add
ret
test
adcb
sub
and
rolb
inc
cmp
fdivrl
mov
loopne
mov
arpl
loopne
movsl
cmpsb
pusha
sub
inc
mov
call
xchg
inc
lock
push
shr
hlt
sub
mov
or
loopne
inc
inc
inc
mov
sbbb
inc
mov
shlb
scas
mov
xchg
clc
inc
pop
jno
loope,pt
aad
enter
inc
adc
cmp
mov
shlb
add
lods
inc
inc
inc
lock
inc
sbb
adc
jmp
popa
int
inc
adc
inc
pop
xchg
out
jno
mov
inc
popf
outsb
push
or
add
mov
aas
cmp
mov
and
mov
mov
stc
pusha
mov
mov
arpl
inc
sub
inc
cmp
stos
and
sub
jbe
push
enter
push
dec
add
sub
scas
inc
loopne
pmuludq
lea
adc
fwait
mov
sub
inc
repz
jne
xchg
movsb
and
xlat
pushf
rcr
cmpsb
and
inc
push
icebp
add
xchg
mov
add
and
movsl
insl
test
xor
add
and
andb
inc
not
sbb
dec
sbb
add
aas
xor
pusha
and
sbb
add
mov
lods
inc
inc
push
mov
bound
inc
mov
lock
roll
push
mov
fwait
pop
call
push
fisubrl
jecxz
inc
cmpb
cmpl
loopne
rolb
cmp
inc
addr16
ret
scas
andb
sti
leave
jns
xor
test
mov
jg
cmc
push
shlb
mov
ror
push
jns
sbb
jo
addb
mov
jb
push
shlb
push
jl
fnstenv
xlat
jle
pop
je
adc
add
push
jo
mov
sbb
stos
and
pop
push
and
ret
jl
lret
push
mov
aam
es
mov
test
or
cmp
in
fldenv
jecxz
pop
xor
push
and
inc
fsubs
loopne
add
pop
cmp
push
sti
sbb
cmpsl
pop
test
pusha
sub
add
and
push
js
mov
loopne
mov
lods
mov
les
andb
mov
cmp
leave
mov
insb
out
rcr
stc
mov
les
push
lea
mov
mov
stos
and
inc
loopne
outsb
mov
subb
lea
fstpt
loop
mov
inc
mov
push
shl
aam
add
sbb
dec
push
mov
xor
push
popa
outsl
mov
pusha
and
jb
aad
dec
push
insl
cs
inc
shrl
mov
add
jb
mov
cmc
dec
in
mov
loopne
movsl
fstl
shlb
lret
out
movsl
mov
adc
cmp
push
inc
hlt
xor
xor
in
mov
add
jge
pop
insb
xor
mov
add
in
adc
das
outsb
dec
sbb
pusha
cltd
xchg
mov
movsl
mov
enter
ds
or
shll
inc
pusha
mov
jecxz
add
clc
andb
or
aam
sti
xchg
shlb
inc
cwtl
inc
gs
dec
mov
pusha
addb
orb
push
repnz
add
cmp
add
test
das
addb
and
xor
pusha
stos
loopne
xchg
jno
repz
shlb
jne
mov
nop
cld
jae
add
add
incl
nop
nop
cld
jae
test
in
add
fnsave
rclb
addr16
add
cmp
or
lds
inc
jne
clc
repnz
nop
cld
jae
add
je
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
xchg
add
lds
mov
mov
push
mov
xchg
ret
add
add
repnz
nop
cld
jae
dec
sub
clc
ret
outsb
mov
fistl
aad
inc
add
add
mov
rol
or
clc
repnz
nop
cld
jae
or
add
add
or
mov
jmp
in
leave
nop
jmp
test
dec
add
sbb
add
sbb
in
leave
nop
jmp
add
mul
add
add
in
leave
nop
jmp
xchg
add
rolb
add
jns
add
clc
repnz
nop
cld
jae
insb
sub
ds
icebp
insb
add
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
sub
add
testb
clc
repnz
nop
cld
jae
rorb
imul
sub
outsl
xchg
push
mov
xchg
ret
and
xchg
add
pop
and
repnz
nop
cld
jae
lahf
insb
add
nop
push
mov
leave
nop
jmp
inc
add
add
xchg
add
orl
nop
cld
jae
test
inc
add
fwait
push
mov
xchg
ret
add
add
add
add
add
clc
repnz
nop
cld
jae
add
out
add
push
mov
xchg
ret
test
inc
cmp
sub
clc
repnz
nop
cld
jae
into
add
xchg
ja
nop
push
mov
leave
nop
jmp
and
cmp
add
jns
imul
add
mov
leave
nop
jmp
add
cmp
test
sldt
nop
push
mov
leave
nop
jmp
loop
adc
repnz
nop
cld
jae
add
add
add
and
orl
nop
jmp
add
push
mov
and
mov
xchg
ret
imul
mov
dec
cmp
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
inc
sti
in
cmpsl
add
cmpsl
adc
nop
nop
cld
jae
notb
cmp
add
cmp
sbb
inc
add
add
je
and
xor
clc
repnz
nop
cld
jae
add
addl
push
mov
xchg
ret
das
add
test
cld
mov
xchg
fistpl
clc
repnz
nop
cld
jae
add
mov
jnp
andl
nop
cld
jae
mov
push
clc
repnz
nop
cld
jae
stos
inc
jns
add
add
int3
pop
inc
clc
repnz
nop
cld
jae
test
lds
push
movb
pop
gs
add
aas
sbb
mov
pop
clc
repnz
nop
cld
jae
add
or
pop
pop
clc
repnz
nop
cld
jae
adc
add
add
add
mulps
repnz
nop
cld
jae
mov
test
into
push
jnp
int
pop
jae
repnz
nop
cld
jae
stos
push
pusha
aad
xbegin
jae
inc
bound
cmp
aas
inc
test
clc
repnz
nop
cld
jae
cmp
jge
add
push
mov
leave
nop
jmp
add
add
add
add
popa
clc
repnz
nop
cld
jae
add
add
add
adc
add
clc
repnz
nop
cld
jae
add
mov
testl
nop
push
mov
leave
nop
jmp
das
test
push
mov
xchg
ret
mov
loopne
mov
xchg
ret
inc
or
mov
or
cmp
mov
clc
repnz
nop
cld
jae
add
insb
add
add
clc
repnz
nop
cld
jae
add
lcall
pop
nop
push
mov
leave
nop
jmp
add
testb
cmp
nop
cld
jae
add
imul
mov
jb
nop
push
mov
leave
nop
jmp
add
mov
push
mov
xchg
ret
add
loopne
and
add
add
add
clc
repnz
nop
cld
jae
add
add
rorb
mov
clc
repnz
nop
cld
jae
test
dec
into
add
cmp
orl
nop
cld
jae
push
add
nop
push
mov
leave
nop
jmp
add
sub
add
add
and
mov
leave
nop
jmp
loopne
cmpl
add
add
repnz
nop
cld
jae
and
xorl
mov
nop
push
mov
leave
nop
jmp
sbb
add
cmpl
pusha
add
add
clc
repnz
nop
cld
jae
inc
lahf
in
add
nop
push
mov
leave
nop
jmp
add
mov
add
add
in
leave
nop
jmp
and
xchg
add
cmp
xchg
addb
orl
cmp
ret
mov
add
add
nop
push
mov
leave
nop
jmp
and
sbb
add
fistpl
push
mov
xchg
ret
add
cmpsl
push
inc
inc
mov
dec
sub
add
repnz
nop
cld
jae
add
and
popf
pop
push
mov
xchg
ret
add
add
add
mov
mov
clc
repnz
nop
cld
jae
mov
inc
mov
shr
clc
repnz
nop
cld
jae
add
add
add
and
push
clc
repnz
nop
cld
jae
add
mov
cld
push
mov
xchg
ret
stos
test
add
jg
test
add
clc
repnz
nop
cld
jae
cmp
stos
es
in
test
adc
add
nop
jmp
test
into
mov
adc
nop
push
mov
leave
nop
jmp
dec
add
add
nop
push
mov
leave
nop
jmp
xchg
jns
clc
repnz
nop
cld
jae
test
add
pop
lods
add
ja
inc
or
repnz
nop
cld
jae
add
add
add
pop
mov
push
mov
xchg
ret
add
inc
and
add
in
leave
nop
jmp
mov
add
add
add
clc
repnz
nop
cld
jae
add
jne
add
jp
test
nop
push
mov
leave
nop
jmp
sub
xor
cmp
or
in
add
clc
repnz
nop
cld
jae
inc
xchg
dec
add
clc
repnz
nop
cld
jae
push
mov
add
test
add
mov
pusha
mov
push
rolb
push
push
mov
xchg
ret
push
or
jne
shl
mov
clc
repnz
nop
cld
jae
add
sahf
add
lods
clc
repnz
nop
cld
jae
inc
jg
imulb
add
call
nop
push
mov
leave
nop
jmp
and
jns
ret
jg
clc
repnz
nop
cld
jae
inc
add
add
clc
repnz
nop
cld
jae
das
add
sahf
rorb
call
clc
repnz
nop
cld
jae
add
push
mov
xchg
ret
jg
xchg
jg
lds
add
clc
repnz
nop
cld
jae
jne
inc
add
pop
add
sti
add
push
mov
xchg
ret
xor
add
iret
pop
push
mov
xchg
ret
add
add
sbb
repnz
nop
cld
jae
add
bound
inc
test
insb
pop
adc
push
mov
leave
nop
jmp
add
mov
add
clc
repnz
nop
cld
jae
ds
add
add
sar
repnz
nop
cld
jae
add
into
xchg
add
dec
mov
clc
repnz
nop
cld
jae
add
add
add
cwtl
fidivl
push
mov
xchg
ret
rorb
test
add
sbb
add
clc
repnz
nop
cld
jae
or
inc
add
add
clc
repnz
nop
cld
jae
sbb
and
add
pop
push
mov
xchg
ret
add
add
add
imul
mov
push
mov
xchg
ret
add
inc
add
add
mov
nop
nop
cld
jae
test
add
jnp
push
mov
xchg
ret
in
add
add
sarb
push
push
clc
repnz
nop
cld
jae
add
or
shrb
repnz
nop
cld
jae
bound
mov
shlb
pop
push
mov
xchg
ret
add
add
cmp
fld1
clc
repnz
nop
cld
jae
sub
pop
cmp
mov
xchg
ret
mov
add
cmp
dec
insb
test
add
adc
je
clc
repnz
nop
cld
jae
das
add
les
nop
nop
cld
jae
add
cmp
mov
clc
repnz
nop
cld
jae
cmp
jg
add
add
add
repnz
nop
cld
jae
cmp
or
mov
push
nop
push
mov
leave
nop
jmp
test
mov
inc
pop
jnp
mov
repnz
nop
cld
jae
add
bound
mov
repnz
nop
cld
jae
push
into
loop
xor
mov
leave
nop
jmp
sbb
add
add
movsl
popa
clc
repnz
nop
cld
jae
add
add
lret
repnz
das
xchg
clc
repnz
nop
cld
jae
mov
lahf
mov
inc
and
and
add
clc
repnz
nop
cld
jae
add
stos
add
imul
repnz
nop
cld
jae
add
add
add
mov
adc
repnz
nop
cld
jae
push
cmp
inc
subb
add
nop
push
mov
leave
nop
jmp
jne
das
testb
jno
movsb
push
mov
xchg
ret
shlb
into
das
jge
add
nop
cld
jae
mov
jg
stos
jl
sub
add
pop
clc
repnz
nop
cld
jae
into
add
and
repnz
nop
cld
jae
mov
mov
adc
inc
add
xor
sahf
add
mov
add
mov
clc
repnz
nop
cld
jae
add
add
mov
repz
mov
xchg
ret
and
imul
inc
add
and
addb
cmp
ret
jns
add
and
add
in
xor
clc
repnz
nop
cld
jae
cmp
add
clc
mov
mov
add
add
leave
nop
jmp
add
add
xlat
push
mov
mov
add
into
add
fstpl
loop
mov
out
in
inc
popf
jmp
sbb
add
and
or
bound
cmp
inc
nop
push
mov
leave
nop
jmp
movsb
bound
sbb
stos
mov
call
inc
add
jns
das
add
mov
adc
repnz
nop
cld
jae
sahf
add
stos
nop
push
mov
leave
nop
jmp
add
into
add
inc
cmp
dec
nop
push
mov
leave
nop
jmp
bound
add
add
and
pop
push
push
mov
xchg
ret
add
and
add
nop
push
mov
leave
nop
jmp
dec
add
add
nop
cld
jae
add
add
dec
fwait
push
mov
xchg
ret
and
sbb
lds
xchg
andb
roll
mov
xchg
ret
test
mov
xchg
xor
clc
repnz
nop
cld
jae
add
adc
add
push
push
mov
xchg
ret
movsb
or
lahf
and
lds
push
push
mov
xchg
ret
add
add
add
loop
adcl
dec
cmp
repnz
nop
cld
jae
xor
add
add
ret
addl
cmp
ret
add
mov
add
mov
nop
push
mov
leave
nop
jmp
das
es
add
xchg
and
push
mov
leave
nop
jmp
add
and
in
add
addl
add
lods
jno
and
nop
cld
jae
add
add
and
add
lea
clc
repnz
nop
cld
jae
inc
test
repnz
nop
cld
jae
add
pop
sbb
add
inc
add
add
add
jge
sbb
pop
cmpl
data16
je
clc
repnz
nop
cld
jae
add
sub
stc
push
nop
push
mov
leave
nop
jmp
or
dec
add
xor
mov
rclb
aaa
lea
xchg
ret
sti
add
test
jno
clc
repnz
nop
cld
jae
add
sbb
or
push
add
nop
nop
cld
jae
cmp
in
add
lahf
icebp
cld
clc
repnz
nop
cld
jae
add
add
add
imul
rcr
lcall
mov
lret
clc
repnz
nop
cld
jae
sub
stos
test
add
push
ja
nop
push
mov
leave
nop
jmp
add
add
pop
popa
clc
repnz
nop
cld
jae
add
and
add
je
clc
repnz
nop
cld
jae
add
push
arpl
repnz
nop
cld
jae
jge
mov
xchg
add
push
pop
clc
repnz
nop
cld
jae
add
add
test
add
clc
repnz
nop
cld
jae
das
jge
push
ficompl
call
clc
repnz
nop
cld
jae
sub
inc
stos
push
push
clc
repnz
nop
cld
jae
ds
add
andl
nop
cld
jae
and
add
pushf
scas
mov
repnz
nop
cld
jae
add
add
add
mov
testl
nop
nop
cld
jae
add
loop
rcrb
push
mov
leave
nop
jmp
push
add
cmp
push
push
mov
xchg
ret
add
in
cmp
push
mov
clc
repnz
nop
cld
jae
jne
mov
add
xchg
mov
nop
push
mov
leave
nop
jmp
mov
fistpl
push
mov
xchg
ret
mov
add
xchg
xchg
clc
repnz
nop
cld
jae
add
jge
lods
mov
arpl
push
loopne
mov
xchg
ret
cmp
insb
add
xchg
add
loopne
call
clc
repnz
nop
cld
jae
test
dec
add
repz
clc
repnz
nop
cld
jae
add
add
test
add
add
add
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
lahf
add
cmp
repnz
nop
cld
jae
add
add
mov
imul
xor
repnz
nop
cld
jae
pop
test
add
push
nop
push
mov
leave
nop
jmp
add
add
test
idiv
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
loopne
sti
jg
jns
test
rclb
imul
sar
stos
jne
xchg
sbb
push
push
mov
xchg
ret
and
jge
add
or
shrb
inc
sqrtps
loop
inc
add
add
add
or
and
xor
add
lods
ljmp
add
or
add
mov
nop
push
mov
leave
nop
jmp
aas
add
loopne
lahf
stc
mov
push
mov
xchg
ret
and
loopne
add
sbb
clc
repnz
nop
cld
jae
add
sbb
add
je
push
nop
push
mov
leave
nop
jmp
das
add
add
das
sub
pop
push
mov
testl
add
or
or
imul
cld
jae
push
add
nop
push
mov
leave
nop
jmp
sbb
jne
test
in
addr16
push
mov
xchg
ret
bound
bound
adc
add
sub
addb
rclb
pop
xchg
inc
add
test
add
clc
repnz
nop
cld
jae
stos
loopne
add
or
inc
out
mov
push
clc
repnz
nop
cld
jae
loop
and
sub
add
push
clc
repnz
nop
cld
jae
inc
push
test
rorl
nop
cld
jae
or
add
cmp
idivl
push
mov
xchg
ret
in
add
sbb
mov
pop
push
clc
repnz
nop
cld
jae
add
add
stos
add
imul
push
mov
leave
nop
jmp
xchg
add
fmul
pusha
clc
repnz
nop
cld
jae
cmpsl
add
sub
or
jne
sub
clc
repnz
nop
cld
jae
add
add
sti
add
add
nop
push
mov
leave
nop
jmp
mov
lahf
add
mov
clc
repnz
nop
cld
jae
add
es
mov
add
sbb
dec
sahf
es
add
loopne
push
cmpsl
je
nop
push
mov
leave
nop
jmp
in
and
mov
clc
repnz
nop
cld
jae
add
pop
or
mov
push
add
clc
repnz
nop
cld
jae
and
add
inc
add
bnd
push
mov
xchg
ret
and
cmp
mulb
push
clc
repnz
nop
cld
jae
lds
cmp
pop
and
pop
out
dec
fistpl
clc
repnz
nop
cld
jae
add
and
nop
nop
cld
jae
add
inc
pop
nop
push
mov
leave
nop
jmp
sbb
add
add
push
jae
jbe
clc
repnz
nop
cld
jae
test
stos
add
andb
mov
push
mov
xchg
ret
test
sub
inc
add
xor
clc
repnz
nop
cld
jae
add
dec
sub
push
sbb
pop
xchg
inc
add
add
inc
movsb
pusha
and
call
clc
repnz
nop
cld
jae
and
add
addb
int
nop
push
mov
leave
nop
jmp
imul
jne
shl
clc
repnz
nop
cld
jae
imul
mov
inc
mov
jne
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
jne
inc
imul
add
mov
mov
push
mov
xchg
ret
add
rolb
insb
test
add
pop
cmp
mov
xchg
ret
add
add
aaa
mov
nop
push
mov
leave
nop
jmp
add
lods
and
imul
nop
nop
cld
jae
add
mov
incl
dec
inc
add
add
add
rclb
es
clc
repnz
nop
cld
jae
add
test
add
mov
call
inc
add
add
add
jg
mov
push
mov
leave
nop
jmp
add
sub
cmp
pop
mov
inc
clc
repnz
nop
cld
jae
subl
imul
movsl
clc
repnz
nop
cld
jae
add
and
or
movsb
clc
repnz
nop
cld
jae
add
or
mov
repnz
nop
cld
jae
mov
add
movsb
imul
fsubrp
clc
repnz
nop
cld
jae
loop
inc
push
dec
push
mov
xchg
ret
mov
add
adc
inc
loopne
mov
xchg
ret
add
cmpsl
lahf
mov
push
nop
push
mov
leave
nop
jmp
inc
jne
add
call
clc
repnz
nop
cld
jae
movsb
idivb
adc
nop
jmp
add
xchg
or
add
xchg
stos
add
lods
loopne
add
push
mov
leave
nop
jmp
stos
jge
or
mov
movzwl
clc
repnz
nop
cld
jae
inc
adc
inc
add
xor
clc
repnz
nop
cld
jae
das
jne
sub
add
clc
repnz
nop
cld
jae
mov
pusha
cltd
push
clc
repnz
nop
cld
jae
mov
jge
add
clc
repnz
nop
cld
jae
lahf
sbbl
adc
and
clc
repnz
nop
cld
jae
mov
subl
clc
repnz
nop
cld
jae
jne,pt
dec
add
clc
push
mov
xchg
ret
es
add
stos
test
sub
js
mov
repnz
nop
cld
jae
mov
add
addl
int
add
clc
repnz
nop
cld
jae
rorb
add
shlb
testb
clc
repnz
nop
cld
jae
add
add
pop
or
mov
leave
nop
jmp
sbb
add
mov
popl
nop
push
mov
leave
nop
jmp
cmp
sti
inc
mov
sarb
lock
enter
adc
repnz
nop
cld
jae
add
xor
dec
pop
jne
push
mov
xchg
ret
in
loopne
insb
add
mov
push
mov
xchg
ret
add
add
adc
push
clc
repnz
nop
cld
jae
jns
adc
in
clc
repnz
nop
cld
jae
add
mov
add
inc
cmp
nop
push
mov
leave
nop
jmp
jge
negb
lea
clc
repnz
nop
cld
jae
add
add
and
nop
cld
jae
das
jne
add
pop
add
push
mov
fwait
push
mov
xchg
ret
loop
add
inc
add
add
data16
imul
nop
push
mov
leave
nop
jmp
mov
stos
into
imul
nop
cld
jae
test
loopne
popl
stos
inc
add
add
subl
push
clc
repnz
nop
cld
jae
test
add
mov
mov
dec
push
clc
repnz
nop
cld
jae
add
add
xchg
dec
mov
clc
repnz
nop
cld
jae
addl
pop
add
test
insb
pushf
sub
nop
cld
jae
stos
adc
jg
push
mov
clc
repnz
nop
cld
jae
and
imul
add
clc
repnz
nop
cld
jae
add
add
add
sub
loopne
push
add
nop
push
mov
leave
nop
jmp
add
mov
and
jns
imul
nop
cld
jae
or
add
outsb
movsb
pusha
xorb
test
cmc
clc
repnz
nop
cld
jae
mov
icebp
nop
push
mov
leave
nop
jmp
mov
imul
adc
nop
jmp
add
loopne
add
inc
faddl
jne
clc
repnz
nop
cld
jae
xor
add
and
jg
nop
push
mov
leave
nop
jmp
add
add
cmpl
mov
clc
repnz
nop
cld
jae
add
add
add
or
repnz
nop
cld
jae
xchg
add
loop
mov
xchg
ret
add
inc
add
out
out
clc
call
nop
jmp
inc
test
add
ja
nop
push
mov
leave
nop
jmp
jne
sarb
push
push
mov
xchg
ret
sub
push
mov
add
push
mov
leave
nop
jmp
add
sti
push
nop
push
mov
leave
nop
jmp
into
mov
sbb
cmp
nop
push
mov
leave
nop
jmp
dec
adcl
clc
repnz
nop
cld
jae
lahf
testb
clc
repnz
nop
cld
jae
sahf
sahf
sbb
mov
pusha
add
inc
push
mov
xchg
ret
add
test
and
pusha
data16
mov
mov
clc
repnz
nop
cld
jae
add
add
add
add
add
nop
jmp
add
ss
or
add
repnz
nop
cld
jae
add
mov
and
testb
cld
jae
add
add
imul
in
jb
clc
repnz
nop
cld
jae
lds
push
mov
xchg
ret
jns
loop
lds
or
nop
nop
cld
jae
add
shrl
cli
clc
repnz
nop
cld
jae
jg
rolb
add
inc
mov
clc
repnz
nop
cld
jae
or
sbb
push
mov
xchg
ret
add
sub
add
pop
imul
jmp
jne
loopne
add
in
notl
nop
jmp
jg
das
adc
jge
mov
clc
repnz
nop
cld
jae
mov
xchg
nop
push
mov
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
in
sti
add
lds
add
xchg
add
add
ds
mov
clc
repnz
nop
cld
jae
add
add
xor
add
push
push
mov
xchg
ret
add
push
add
or
add
add
add
adc
adc
rorl
repnz
nop
cld
jae
inc
xor
add
clc
repnz
nop
cld
jae
pop
add
add
mov
loop
push
mov
xchg
ret
add
int
pop
or
add
repnz
nop
cld
jae
add
mov
pusha
dec
mov
clc
repnz
nop
cld
jae
sahf
add
add
bound
dec
sub
nop
jmp
inc
add
add
repnz
nop
cld
jae
add
add
idiv
jne
clc
repnz
nop
cld
jae
pop
test
push
push
cmp
outsl
mov
push
mov
xchg
ret
mov
mov
int3
loop
xor
jmp
nop
cld
jae
add
inc
add
dec
mov
clc
repnz
nop
cld
jae
add
loopne
add
movzwl
clc
repnz
nop
cld
jae
into
dec
and
loop
div
clc
repnz
nop
cld
jae
or
add
add
push
mov
xchg
ret
movsb
bound
test
push
pop
nop
push
mov
leave
nop
jmp
add
sarb
and
nop
push
mov
leave
nop
jmp
jg
add
insb
test
nop
push
mov
leave
nop
jmp
add
jg
or
and
mov
clc
repnz
nop
cld
jae
bound
add
pop
test
mov
sub
repnz
nop
cld
jae
add
xor
repnz
nop
cld
jae
loopne
cmp
add
jne
push
mov
xchg
ret
sub
mov
xor
clc
repnz
nop
cld
jae
add
jge
xorl
dec
imul
cmp
ret
sbbl
scas
xor
nop
push
mov
leave
nop
jmp
add
or
add
mov
leave
nop
jmp
add
movsb
or
add
nop
cld
jae
add
xchg
imul
add
push
mov
leave
nop
jmp
add
imul
das
fsubl
mov
xchg
ret
add
loopne
cmp
mov
push
nop
push
mov
leave
nop
jmp
add
push
pop
add
clc
repnz
nop
cld
jae
cmp
add
add
add
add
repnz
nop
cld
jae
inc
test
test
shlb
addr16
push
mov
xchg
ret
add
stos
lds
jns
add
jne
push
add
push
mov
leave
nop
jmp
jge
add
add
imul
cld
jae
adc
dec
cmp
nop
push
mov
leave
nop
jmp
dec
sbb
jmp
in
leave
nop
jmp
add
add
add
test
aam
xchg
mov
clc
repnz
nop
cld
jae
loop
sbb
test
add
lds
test
adc
add
repnz
nop
cld
jae
or
jp
fdiv
jmp
add
add
inc
sub
add
cmp
mov
sub
lea
pushf
add
add
push
sub
clc
repnz
nop
cld
jae
mov
sub
push
nop
push
mov
leave
nop
jmp
aas
add
add
mov
mov
leave
nop
jmp
inc
sbb
add
stos
add
jae
jl
sbb
repnz
nop
cld
jae
add
and
add
pop
push
mov
xchg
ret
or
sbb
adc
cmp
sub
mov
lea
push
mov
xchg
ret
add
add
mov
push
mov
leave
nop
jmp
add
add
sub
add
es
pusha
lcall
push
mov
leave
nop
jmp
add
add
and
lcall
and
mov
add
sti
or
mov
loopne
push
push
clc
repnz
nop
cld
jae
lahf
cmp
loopne
mov
add
nop
push
mov
leave
nop
jmp
add
add
test
mov
clc
repnz
nop
cld
jae
and
add
clc
repnz
nop
cld
jae
add
in
test
mov
arpl
repnz
nop
cld
jae
cmpl
repnz
nop
cld
jae
mov
dec
stos
add
xchg
inc
add
add
lahf
pop
add
adc
jae
push
mov
xchg
ret
add
add
add
inc
test
xlat
add
clc
repnz
nop
cld
jae
sahf
inc
mov
push
leave
cmpl
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
jns
add
add
xor
nop
nop
cld
jae
add
aas
adc
test
nop
cld
jae
inc
stos
add
inc
dec
add
sub
inc
lahf
add
nop
push
mov
leave
nop
jmp
jge
add
add
add
sbb
in
leave
nop
jmp
add
add
and
add
fistpl
push
mov
xchg
ret
add
or
lods
push
mov
xchg
ret
dec
add
add
lds
mov
leave
nop
jmp
add
add
dec
mov
rclb
xchg
xchg
inc
add
in
imul
or
mov
xchg
ret
jg
inc
add
lahf
movsb
add
adc
clc
repnz
nop
cld
jae
mov
es
imul
nop
nop
cld
jae
sbb
mov
inc
inc
add
clc
repnz
nop
cld
jae
loopne
add
in
movsl
pop
clc
repnz
nop
cld
jae
add
add
add
stos
add
add
sbb
xchg
push
ret
clc
repnz
nop
cld
jae
pop
adc
add
push
push
mov
xchg
ret
add
and
mov
adc
lock
inc
add
add
movsb
add
sbb
push
clc
repnz
nop
cld
jae
add
lahf
jns
ret
clc
repnz
nop
cld
jae
and
mov
sbb
push
clc
repnz
nop
cld
jae
adc
add
add
push
mov
xchg
ret
mov
testb
add
jp
cld
stc
add
push
mov
xchg
ret
adc
mov
repz
clc
repnz
nop
cld
jae
add
dec
mov
clc
repnz
nop
cld
jae
jge
add
mov
ret
pop
push
mov
xchg
ret
add
movsb
add
nop
push
mov
leave
nop
jmp
add
mov
push
clc
repnz
nop
cld
jae
add
or
stos
add
inc
cmp
mov
js
clc
repnz
nop
cld
jae
add
aas
add
and
push
clc
repnz
nop
cld
jae
add
push
push
mov
leave
nop
jmp
in
add
insl
add
clc
repnz
nop
cld
jae
cmp
andb
rorl
test
clc
repnz
nop
cld
jae
add
add
nop
push
mov
leave
nop
jmp
add
add
mov
xchg
ret
add
add
loopne
add
adcl
nop
push
mov
leave
nop
jmp
pop
in
imul
nop
cld
jae
add
add
add
jb
add
clc
repnz
nop
cld
jae
sbb
cmp
add
fwait
nop
push
mov
leave
nop
jmp
add
stos
add
loop
inc
sub
sti
nop
push
mov
leave
nop
jmp
jge
or
mov
call
cld
jae
mov
add
mov
add
push
mov
xchg
ret
addl
add
add
loopne
xchg
push
push
mov
xchg
ret
cmpsl
add
sti
add
loope
add
incl
nop
push
mov
leave
nop
jmp
in
add
repnz
nop
cld
jae
add
stos
mov
inc
jecxz
repnz
nop
cld
jae
or
test
nop
push
mov
leave
nop
jmp
push
ds
daa
cld
clc
repnz
nop
cld
jae
pop
es
sub
add
clc
repnz
nop
cld
jae
sub
mov
repnz
nop
cld
jae
dec
add
inc
add
add
lret
push
push
mov
xchg
ret
mov
loopne
add
add
mov
in
leave
nop
jmp
test
add
add
mov
nop
nop
cld
jae
add
das
sarb
mov
pusha
hlt
mov
nop
push
mov
leave
nop
jmp
add
adc
clc
repnz
nop
cld
jae
add
push
add
push
mov
xchg
ret
add
add
mov
out
jne
clc
repnz
nop
cld
jae
sbb
add
add
cld
sub
in
leave
nop
jmp
jg
add
push
das
add
nop
cld
jae
lahf
shl
or
add
adc
out
inc
add
add
add
sahf
add
push
clc
repnz
nop
cld
jae
test
push
and
mov
clc
repnz
nop
cld
jae
sub
shr
nop
push
mov
leave
nop
jmp
add
add
mov
pop
bound
xchg
ret
add
add
push
mov
xchg
ret
jns
add
add
push
in
clc
repnz
nop
cld
jae
add
add
rorl
repnz
nop
cld
jae
cmp
add
addb
add
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
fisttpl
repnz
nop
cld
jae
test
in
add
sti
adc
pushl
push
mov
xchg
ret
sub
jge
push
lods
inc
rorb
nop
push
mov
leave
nop
jmp
sti
add
jge
add
jbe
mov
popf
sub
clc
repnz
nop
cld
jae
add
add
adc
and
nop
push
mov
leave
nop
jmp
xchg
sti
add
test
nop
nop
cld
jae
into
mov
add
inc
xor
clc
repnz
nop
cld
jae
push
add
add
rep
clc
repnz
nop
cld
jae
lahf
add
xor
test
add
lods
cmp
add
insb
into
add
aas
jbe
loopne
adc
xchg
add
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
and
loopne
das
or
call
clc
repnz
nop
cld
jae
inc
xchg
add
add
sbb
repnz
add
in
add
add
push
movsb
nop
push
mov
leave
nop
jmp
add
pop
leave
add
push
mov
xchg
ret
xchg
add
add
andb
fwait
push
mov
xchg
ret
add
cmp
add
mov
xchg
add
add
repnz
nop
cld
jae
loop
add
fldcw
inc
add
sti
add
add
jg
cmpsl
pop
clc
repnz
nop
cld
jae
dec
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
add
stos
test
add
add
jecxz
mov
repnz
nop
cld
jae
jns
mov
andb
sbb
push
mov
leave
nop
jmp
add
and
add
jge
add
sahf
xchg
add
pop
imul
fists
repnz
nop
cld
jae
add
add
add
add
fiadds
clc
repnz
nop
cld
jae
add
and
mov
clc
repnz
nop
cld
jae
cmp
mov
sub
repnz
nop
cld
jae
add
aas
xor
cmp
mov
pushl
nop
push
mov
leave
nop
jmp
sbb
add
pop
repz
incl
stos
add
loop
add
mov
test
cld
pop
sub
mov
nop
nop
cld
jae
add
add
add
dec
add
scas
insl
add
add
lret
stos
add
pop
clc
repnz
nop
cld
jae
sahf
add
add
loopne
inc
pop
push
push
mov
xchg
ret
test
inc
add
mov
shl
fsts
in
add
push
add
mov
xchg
mov
clc
repnz
nop
cld
jae
sti
sti
loopne
sti
add
push
push
add
nop
push
mov
leave
nop
jmp
sbb
add
lahf
stos
lret
mov
push
mov
xchg
ret
test
add
dec
add
xor
clc
repnz
nop
cld
jae
add
sti
mov
ret
clc
repnz
nop
cld
jae
lahf
add
dec
add
add
cmpsl
pop
clc
repnz
nop
cld
jae
add
add
add
mov
jae
jmp
incl
and
add
test
sti
test
mov
sub
add
push
mov
xchg
ret
add
test
or
movsb
or
pop
clc
repnz
nop
cld
jae
loopne
add
add
add
cmp
in
leave
nop
jmp
push
add
fwait
add
push
mov
xchg
ret
jg
add
inc
add
or
and
mov
nop
push
mov
leave
nop
jmp
loop
mov
and
repnz
nop
cld
jae
add
jne
sahf
add
and
dec
lea
push
mov
xchg
ret
add
es
jle
clc
repnz
nop
cld
jae
imul
mov
ror
clc
repnz
nop
cld
jae
add
add
add
ja
repz
repnz
nop
cld
jae
add
push
push
loopne
add
enter
clc
repnz
nop
cld
jae
add
mov
scas
push
push
mov
xchg
ret
add
add
cmp
jne
add
pop
nop
push
mov
leave
nop
jmp
push
add
cmp
add
cmpsl
fistpl
clc
repnz
nop
cld
jae
loop
add
cmpsl
shrb
and
push
clc
repnz
nop
cld
jae
jg
addl
stos
das
ds
lss
nop
push
mov
leave
nop
jmp
jg
repz
clc
repnz
nop
cld
jae
mov
inc
add
mov
nop
cld
jae
sub
loopne
stos
add
fisttps
scas
enter
nop
cld
jae
in
add
jge
add
lea
mov
xchg
ret
add
ds
add
inc
push
mov
xchg
ret
add
add
lock
clc
repnz
nop
cld
jae
add
orl
push
mov
xchg
ret
add
inc
add
test
add
jno
add
add
add
jge
clc
repnz
nop
cld
jae
das
add
mov
adc
mov
leave
nop
jmp
test
sub
push
mov
leave
nop
jmp
inc
test
add
in
add
and
clc
repnz
nop
cld
jae
inc
add
add
rorl
nop
cld
jae
jge
sahf
add
add
pop
clc
repnz
nop
cld
jae
insb
das
mov
add
mov
clc
repnz
nop
cld
jae
inc
test
inc
add
pusha
mov
outsb
dec
push
clc
repnz
nop
cld
jae
add
inc
inc
add
nop
jmp
inc
add
clc
repnz
nop
cld
jae
adc
add
shrb
xchg
cmp
fwait
push
mov
xchg
ret
xor
mov
sti
insb
mov
sbbb
nop
nop
cld
jae
add
or
inc
jne
clc
repnz
nop
cld
jae
add
stos
sub
loopne
cmp
mov
xchg
ret
or
add
add
clc
repnz
nop
cld
jae
adc
bound
stos
push
mov
xchg
ret
add
add
add
add
push
pop
pop
clc
repnz
nop
cld
jae
add
stos
shl
push
clc
repnz
nop
cld
jae
lahf
add
addl
add
add
clc
repnz
nop
cld
jae
add
add
rclb
outsb
inc
add
adc
mov
nop
nop
cld
jae
add
add
inc
cmp
inc
pop
mov
clc
repnz
nop
cld
jae
stos
jge
jg
stos
out
out
jmp
add
add
loop
and
push
push
mov
xchg
ret
mov
add
add
mov
xchg
ret
sbb
add
pop
clc
repnz
nop
cld
jae
add
jg
test
add
gs
clc
repnz
nop
cld
jae
jne
add
inc
sbb
nop
nop
cld
jae
ds
mov
stos
shlb
movsl
add
push
mov
xchg
ret
movsb
push
addl
data16
push
rorl
mov
adc
repnz
nop
cld
jae
add
jg
push
mov
xchg
ret
pop
or
sbb
add
add
add
repnz
nop
cld
jae
sbb
sbb
dec
stos
lods
and
pop
clc
repnz
nop
cld
jae
add
add
add
xor
sbb
add
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
dec
add
sub
adc
clc
repnz
nop
cld
jae
test
add
mov
adc
clc
repnz
nop
cld
jae
add
dec
jns
and
fdivr
fistpl
clc
repnz
nop
cld
jae
mov
mov
std
push
clc
repnz
nop
cld
jae
pop
sub
add
push
into
pusha
pop
push
clc
repnz
nop
cld
jae
lahf
add
inc
add
lret
mov
leave
nop
jmp
or
ds
inc
add
mov
nop
nop
cld
jae
testb
sahf
add
sarb
dec
ss
clc
repnz
nop
cld
jae
add
xlat
addl
in
movsb
or
mov
nop
push
mov
leave
nop
jmp
jns
add
add
add
cmp
rorb
pushf
dec
pop
push
mov
xchg
ret
xor
add
test
jg
in
push
add
add
add
or
add
inc
add
add
add
pop
push
mov
xchg
ret
add
or
rcrb
clc
repnz
nop
cld
jae
add
stos
sbb
add
jo
add
mov
leave
nop
jmp
jns
add
inc
add
inc
fld1
push
mov
xchg
ret
add
es
jne
clc
repnz
nop
cld
jae
add
adc
nop
push
mov
push
rol
movsb
mov
and
nop
push
mov
leave
nop
jmp
jge
or
into
add
mov
clc
repnz
nop
cld
jae
or
add
cmpsl
add
adc
stc
clc
repnz
nop
cld
jae
or
sti
lods
push
mov
xchg
ret
add
dec
add
insb
mov
fwait
mov
clc
repnz
nop
cld
jae
add
cmpsb
add
cmpl
nop
push
mov
leave
nop
jmp
or
add
mov
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
bound
add
imul
clc
repnz
nop
cld
jae
add
add
add
and
push
fs
repnz
nop
cld
jae
add
test
xchg
mov
clc
repnz
nop
cld
jae
test
mov
mov
leave
nop
jmp
add
add
xchg
add
mov
clc
repnz
nop
cld
jae
add
mov
inc
xor
add
nop
jmp
test
jns
jg
stos
fwait
add
nop
push
mov
leave
nop
jmp
cmp
add
clc
jne
sar
nop
nop
cld
jae
add
add
add
das
add
nop
nop
cld
jae
push
add
inc
and
pause
push
mov
leave
nop
jmp
add
dec
loopne
sahf
add
enter
nop
cld
jae
add
cmpsl
add
push
mov
xchg
ret
add
add
mov
pusha
cmp
nop
nop
cld
jae
mov
stos
and
and
mov
leave
sub
repnz
nop
cld
jae
cmpsl
add
or
mov
xchg
ret
add
cmpsl
mov
push
mov
leave
nop
jmp
mov
test
add
fld1
clc
repnz
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
das
add
mov
xchg
sbb
clc
repnz
nop
cld
jae
and
add
shrl
push
mov
leave
nop
jmp
test
into
xchg
mov
rcrb
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
into
add
into
rorl
nop
nop
cld
jae
add
pop
add
add
inc
and
loop
clc
repnz
nop
cld
jae
add
dec
jb
pop
mov
push
mov
xchg
ret
sub
add
stos
repnz
fld1
push
mov
xchg
ret
add
pop
dec
rep
nop
push
mov
leave
nop
jmp
jg
add
push
xor
nop
push
mov
leave
nop
jmp
add
lds
incl
add
repnz
nop
cld
jae
es
add
push
mov
xchg
ret
loopne
add
add
mov
clc
repnz
nop
cld
jae
inc
add
push
loop
fmull
lods
mov
ficoml
pusha
mov
ss
add
add
movsb
aas
add
add
test
loopne
clc
repnz
nop
cld
jae
movsb
add
add
add
repnz
nop
cld
jae
dec
es
and
repnz
nop
cld
jae
sahf
lahf
mov
add
and
pusha
insl
cs
clc
repnz
nop
cld
jae
or
inc
push
je
sub
nop
push
mov
leave
nop
jmp
add
test
mov
add
add
repnz
nop
cld
jae
add
add
jle
mov
jne
jne
push
mov
xchg
ret
add
or
add
add
mov
clc
repnz
nop
cld
jae
mov
add
push
nop
push
mov
leave
nop
jmp
add
mov
add
test
nop
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
into
dec
test
sub
nop
nop
cld
jae
add
add
pop
sahf
int
rclb
jmp
add
sbb
add
sbb
repnz
nop
cld
jae
add
add
add
push
push
mov
xchg
ret
add
add
xor
add
push
mov
xchg
ret
add
test
inc
jle
add
clc
repnz
nop
cld
jae
rolb
mov
clc
repnz
nop
cld
jae
sub
into
ds
clc
repnz
nop
cld
jae
add
add
test
sub
add
fdivl
add
pop
pop
repz
lds
or
icebp
and
mov
inc
pushf
mov
std
icebp
stos
pusha
and
aam
xor
cmp
xchg
pusha
jmp
add
lcall
lock
out
mov
mov
push
add
jg
test
or
orb
scas
add
fnsave
push
lcall
jl
jnp
jno
dec
popa
xor
in
popa
arpl
cmc
cmp
adc
test
and
andb
aad
push
jns
mov
in
imul
sbb
insl
jecxz
jne
mov
mov
push
inc
ljmp
shr
push
inc
fistl
test
mov
jp
andb
insl
aaa
insb
aad
and
and
jbe
xchg
jbe
ret
pop
outsb
jp
out
inc
loope
leave
mov
sub
add
stos
and
pop
rcl
stos
das
cmp
pushf
pop
cmpsb
rolb
scas
ret
and
adc
mov
sarl
fiadds
rcll
mov
lcall
mov
pusha
pop
pop
jo
mov
and
pusha
inc
xor
aad
mov
pushf
stos
loope
fistl
mov
inc
fwait
push
pop
mov
fstpl
stos
aad
ljmp
mov
das
gs
ja
inc
sbbb
sub
fwait
pop
mov
lods
inc
add
testb
pop
jae
pop
lods
js
sub
hlt
cltd
inc
push
notb
inc
rcl
sub
or
movsl
push
push
add
mov
mov
adc
in
cli
and
jb
cmpsl
xor
cmp
sbb
add
mov
dec
mov
in
iret
fisubs
jns
fdecstp
out
arpl
fcoms
and
sarb
inc
aaa
xor
xchg
pop
mov
ja
jo
and
loopne
or
sbb
sub
test
and
fsubrs
adc
pop
cmp
inc
addb
cld
jmp
add
loopne
jg
cmpsl
push
cmpsl
adc
inc
stc
test
arpl
fcom
xor
shlb
sahf
iret
jmp
pusha
add
xor
jb
mov
aaa
insl
cli
mov
jne
test
sti
add
and
push
adc
dec
jb
out
outsl
or
add
and
pop
scas
add
pop
addr16
push
dec
gs
aas
clc
mov
cld
or
pusha
push
mov
adcl
sbb
out
lret
dec
sbb
loop
pop
pop
xlat
xchg
add
orb
pusha
add
push
jo
shlb
fs
jb
dec
sub
mov
inc
enter
shlb
fistpl
push
sub
pusha
mov
or
inc
sbbb
sbb
push
shll
popa
jbe
and
mov
adc
sub
mov
scas
add
inc
xchg
fwait
dec
sub
outsl
stos
add
fucom
and
andb
rolb
cmp
in
cmp
mov
pusha
add
inc
popf
inc
push
imul
add
or
xor
not
lahf
iret
test
and
bound
pushl
cmp
hlt
cmp
addb
mov
xlat
jne
loop
test
add
jns
loopne
test
sarb
rolb
cmpb
hlt
sub
loopne
stos
push
movsb
add
fisttpll
pop
out
jecxz
adc
and
mov
jle
xor
and
shrb
and
pop
out
enter
hlt
adc
lret
xchg
fstps
enter
mov
lods
loopne
mov
xor
and
lret
cltd
mov
loopne
ljmp
test
push
je
testl
loopne
movsb
loopne
xlat
cmp
jp
mov
and
loopne
inc
inc
mov
andb
insl
sbb
cwtl
jecxz
icebp
jae
in
jge
or
mov
shlb
cmp
cmc
xor
mov
cmp
or
pusha
loopne
mov
add
clc
sbb
fsts
loopne
lods
rolb
shlb
popa
push
mov
ficoml
add
int
and
and
sub
data16
out
or
sbb
ret
add
shrl
sbb
and
mov
sub
add
xchg
pusha
dec
mov
sub
xor
fists
adc
cld
and
pushf
mov
jne
pop
mov
sub
mov
rolb
and
loopne
or
push
insl
jecxz
or
and
outsb
dec
jmp
cltd
adc
and
ret
popf
gs
jp
add
inc
stos
pusha
rclb
addb
sbb
aas
cmp
sub
xchg
xor
shl
inc
ficoms
loopne
scas
mov
sub
pusha
leave
ljmp
add
pop
int
mov
cmpsl
pusha
lds
cmp
and
test
adc
jb
xor
test
imul
jbe
jns
or
push
xor
dec
xchg
mov
mov
adc
mov
adc
out
outsl
pop
daa
add
jne
into
add
add
cmpsb
loopne
mov
sarb
fistpl
sbb
lods
ret
test
pusha
decl
lods
cmpsl
mov
sub
push
sub
mov
andb
arpl
stos
sarb
mov
push
sbb
inc
lods
inc
and
cmp
add
mov
rorb
fwait
cmp
in
rcrl
bound
mov
fidivrs
rcll
cmp
mov
fdivl
jo
push
loopne
or
jl
adc
imull
xchg
mov
pop
xchg
cli
loop
sbb
ja
add
xor
sub
shl
addb
sub
add
icebp
add
test
mov
pop
sti
loop
fs
mov
adc
jle
xor
es
pop
mov
cli
inc
stc
cmp
mov
scas
loopne
std
or
cmp
aad
insb
pop
insb
or
xlat
das
mov
and
insb
push
and
lds
pusha
repz
inc
mov
sub
cmpsb
addb
outsb
in
and
inc
pop
inc
daa
mov
jo
loopne
pop
jbe
add
out
scas
inc
and
and
add
adc
sbb
add
shlb
in
rclb
and
mov
xor
inc
add
mov
mov
inc
std
jg
pushf
movsl
ds
scas
je
sbb
adc
xchg
pop
and
lret
loopne
shlb
clc
rclb
xchg
test
lea
xor
bound
out
int
fs
push
notl
and
push
pusha
pusha
mov
loopne
sar
stos
add
scas
add
sbb
pusha
inc
pushf
pop
scas
and
addl
dec
dec
scas
and
jae
loopne
add
fistpl
sub
inc
mov
lea
sub
inc
mull
cmpsl
repz
loopne
xlat
pop
jle
and
xlat
and
sbb
mov
pusha
mov
arpl
stos
pusha
mov
add
shrb
loopne
jbe
add
pusha
loopne
int3
es
fistl
pop
cmp
xor
inc
icebp
cmpsl
jecxz
cltd
jmp
dec
pop
lret
aam
add
mov
cwtl
fildll
arpl
xchg
jb
mov
les
xchg
or
inc
or
mov
mov
enter
jae
add
stos
pusha
mov
pop
push
sub
pop
dec
cmpsb
loopne
xor
insb
push
out
fwait
jge
sbb
xchg
jb
push
and
rolb
pop
ret
and
mov
and
xchg
fimuls
add
sub
sbb
ljmp
inc
cmc
iret
fcoml
enter
fldcw
jb
lea
shlb
add
pusha
out
pusha
jecxz
cmp
inc
pop
or
mov
rolb
add
mov
fisubrs
out
out
push
ds
aad
or
rolb
mov
in
sub
mov
jmp
inc
cld
clc
mov
aaa
rclb
jbe
fcoml
adcb
loopne
cmpsl
cmpsb
inc
inc
fmuls
add
ss
fiaddl
mov
push
dec
mov
nop
mov
shlb
stc
xchg
ss
cs
loopne
mov
mov
enter
test
mov
inc
add
loopne
fldt
cmpsl
sub
and
loope
iret
push
out
jmp
ret
or
xor
addb
mov
push
or
fisubrs
nop
or
mov
bound
pop
jbe
popa
clc
add
and
inc
lret
repnz
shlb
pop
adc
cli
sub
ret
jnp
xor
mov
mulb
add
int
ja
inc
dec
enter
rolb
pusha
rcrb
ret
ret
mov
push
enter
in
xchg
push
pusha
mov
int
loope
push
aas
cli
sub
inc
enter
mov
cmp
xchg
les
and
loopne
sub
inc
sbb
add
fndisi(8087
fsubrs
mov
push
inc
rcrb
and
mov
push
sbb
pop
mov
mov
mov
std
sbb
jbe
insl
push
aaa
cmp
pop
sti
mov
cld
insl
hlt
and
andb
mov
insb
test
pusha
add
xor
cmpl
dec
repnz
repz
push
pop
xchg
push
add
andb
and
jmp
pop
sub
in
sbb
test
pusha
xchg
les
sbb
inc
xlat
lods
inc
shlb
sub
jl
xor
cmp
mov
rolb
jl
mov
adc
imul
inc
hlt
adc
dec
push
mov
addb
or
lods
mov
sbb
cmpsb
inc
loopne
lods
and
cmp
add
fnstsw
testl
and
fcmove
repnz
imul
push
addr16
mov
jge
pop
inc
ret
inc
cmpsl
xlat
insb
xlat
stc
dec
xor
inc
cs
loopne
fwait
ds
ljmp
gs
fisubrs
mov
mov
xlat
nop
shl
in
mov
and
sarb
loopne
jae
mov
or
in
adc
pusha
inc
and
andb
inc
mov
pusha
pop
fldl
shlb
jne
add
jae
shlb
xchg
lods
fsub
xor
and
sub
shlb
test
loopne
jno
jecxz
int3
push
cmpsl
mov
cmp
jnp
xchg
mov
loopne
xlat
addr16
add
fcmovu
xor
fisubl
add
and
sub
cmp
stc
bound
loopne
scas
stos
add
push
mov
ret
pop
and
inc
ret
add
rolb
jne
jns
dec
mov
lret
mov
xchg
push
fcmovnbe
outsl
jb
rcrb
ljmp
mov
ret
sbb
jnp
or
push
scas
cmp
int3
mov
js
mov
data16
xor
inc
and
imul
lret
fyl2x
ss
bnd
lahf
cltd
fdivl
mov
inc
loopne
dec
sub
cmc
xchg
aad
sti
push
pop
lret
pusha
add
pop
and
cld
mov
lea
pusha
pusha
fsts
test
jne
cmp
add
daa
pop
dec
and
gs
sbb
outsb
movsb
and
aaa
push
lahf
inc
incl
addb
sarl
xor
adc
jle
andl
dec
je
xor
dec
jb
stos
ds
sti
inc
mov
push
ror
xlat
sub
insl
movsl
call
push
xor
stc
dec
add
je
fdivrs
pushf
adc
mov
fsubrl
scas
inc
mov
test
mov
dec
outsl
mov
mov
lar
in
test
mov
loopne
test
int
ja
sbb
inc
rcrb
mov
jns
sub
loopne
push
cmpsb
add
jl
iret
xchg
lret
sub
lcall
mov
out
insb
inc
cmp
ss
jmp
in
inc
clc
cmp
in
sbb
jns
enter
jae
push
lods
inc
pusha
xchg
aam
and
test
out
push
arpl
loopne
xchg
movsb
inc
loopne
sub
dec
sahf
adc
or
pop
mulb
outsb
mov
lods
jae
loopne
das
divb
mov
and
loopne
mov
shlb
or
shlb
inc
pusha
xchg
ret
arpl
repnz
xor
inc
int3
andl
repnz
mov
jo
cmp
inc
push
rol
xchg
jge
in
loope
testl
push
mov
cmpl
xchg
xchg
mov
mov
sahf
jae
mov
ret
mov
outsl
or
cmc
addl
add
inc
add
inc
inc
fstl
adc
or
daa
xor
loopne
cltd
jb
pusha
cmp
scas
loopne
inc
adc
mov
in
fldl
subb
addb
add
ja
push
dec
push
adc
add
pusha
inc
jg
push
shlb
inc
mov
es
inc
jae
sbb
insb
cmp
and
cld
push
cltd
das
cli
test
sbbb
mov
imul
push
movsb
mov
repnz
lret
loopne
mov
in
insl
jle
jl
lods
mov
add
xchg
cwtl
jecxz
mov
and
fnstcw
sub
stos
loopne
xor
add
fs
xchg
and
ds
ja
or
aaa
clc
add
and
dec
pop
cltd
sub
sub
add
mov
inc
jae
gs
add
std
push
pop
and
cmpsl
push
in
pushf
adc
adc
rolb
insl
push
xchg
test
sar
pusha
ror
loopne
iret
jae
xor
or
leave
sbb
pop
push
add
jne
dec
aaa
cmp
andb
mov
insb
and
push
inc
mov
cld
in
aaa
xchg
xorb
imul
sbb
and
mov
inc
adc
inc
pusha
mov
insl
rorb
and
jmp
rolb
inc
mov
push
mov
stc
cmp
mov
adc
pusha
and
add
sub
das
xchg
xchg
pushf
jbe
mov
inc
test
or
inc
fs
and
and
mov
out
sahf
mov
pop
sahf
push
insl
dec
xchg
push
add
xchg
push
lods
shl
js
ljmp
pusha
rclb
and
push
xorl
rcrb
mov
dec
dec
sub
loopne
gs
bound
add
inc
and
div
push
loopne
xchg
ss
lods
pusha
andb
jmp
inc
sar
cmp
sub
shl
add
adc
mov
lahf
out
xlat
pop
xchg
and
push
hlt
daa
push
add
push
jne
test
loopne
loopne
adc
cld
push
push
pop
andb
loopne
mov
sub
pop
imul
xor
rcll
pop
dec
int
sbb
rclb
xchg
andb
mov
xchg
sahf
sub
addb
dec
fistpll
fcompl
push
ret
pop
fs
or
int
sbb
loopne
inc
pop
jns
cmp
cmp
mov
sub
adc
insl
cmp
lods
fisttpl
lods
inc
inc
mov
leave
xor
mov
jp
push
not
xorl
sbb
xor
and
mov
arpl
dec
cmp
jmp
aam
fwait
mov
inc
xor
ret
test
xchg
aaa
xor
rorb
andb
aad
jmp
adc
cmp
hlt
pusha
loopne
cltd
push
mov
psrlq
add
pop
shlb
fstpl
add
loopne
std
cmp
gs
outsl
add
frstpm(287
dec
xlat
add
sbb
jp
sbb
xor
push
ja
xor
ss
push
mov
pop
add
mov
push
in
lret
or
pop
push
mov
inc
loopne
jecxz
jne
pop
fldcw
pop
test
mov
or
lods
loopne
fimuls
inc
lahf
loopne
push
js
xor
addb
xchg
add
push
adc
dec
sti
adc
addl
or
and
popf
loopne
push
adc
xchg
test
pusha
add
add
lahf
push
lods
and
cmp
les
xchg
push
jbe
fsubrs
bound
inc
push
and
rcll
push
scas
pusha
sub
mov
dec
fidivl
sbb
inc
xchg
test
pusha
inc
pop
xchg
xchg
rolb
mov
addb
push
pusha
sarb
add
shlb
push
or
rcl
enter
rorl
loopne
cmp
pusha
rclb
add
loopne
mov
data16
xchg
xorb
inc
popf
xchg
mov
pop
and
adc
shlb
mov
xchg
loopne
jnp
pushf
adc
jge
fcomps
inc
in
inc
sar
fnsave
nop
jl
xor
and
mov
mov
outsb
popa
add
pop
push
je
and
inc
push
out
pop
scas
jbe
adc
sbb
push
cld
mov
mov
ss
mov
les
loopne
push
mov
push
dec
push
add
cli
lds
sbb
andb
cmp
push
pusha
orb
cmp
movsb
mov
inc
jnp
or
xchg
mov
ljmp
and
aam
rolb
mov
or
fstps
loopne
repz
push
xchg
lahf
cmp
mov
dec
int3
push
cwtl
xchg
inc
inc
add
and
xchg
sbbb
jnp
cmp
sbb
shlb
inc
push
imul
mov
lahf
mov
in
hlt
cmp
jle
add
inc
or
and
adc
movsl
sub
fnstcw
mov
outsb
sub
inc
and
pop
pop
dec
sbb
push
pushf
xchg
sub
inc
arpl
push
push
loop
loopne
ss
addb
mov
add
add
aam
jmp
mov
xor
pop
bound
call
sub
inc
enter
shlb
and
xor
aad
lahf
mov
push
mov
vhsubps
and
loopne
into
loopne
cmp
pusha
aaa
icebp
mov
fwait
pop
jne
cmp
rcr
sbb
rol
imul
mov
les
rcrb
mov
pusha
rclb
and
pusha
std
mov
cmpsl
int3
pop
dec
fisubrl
rcrl
aaa
xchg
adc
arpl
adc
bound
push
mov
xchg
pop
popa
loopne
scas
and
cmp
aas
mov
out
movsb
inc
loopne
ret
pusha
cmpsl
cs
xor
rcll
adc
mov
not
pop
fmuls
call
fstpl
shl
cld
into
aad
aas
jl
mov
loopne
rorl
call
mov
mov
out
pop
push
add
push
loop
push
gs
jmp
dec
cmc
adc
jecxz
or
inc
mov
inc
ss
out
inc
mov
pop
add
and
dec
mov
mov
add
inc
xchg
inc
out
pop
cmp
inc
pusha
sub
test
xorb
mov
add
cwtl
mov
jg
sbb
shl
lock
dec
add
jecxz
push
inc
rolb
popf
into
pusha
gs
or
inc
inc
aad
leave
cld
push
fstpt
filds
xchg
xchg
inc
sahf
aaa
jle
into
out
jae
icebp
int3
add
or
inc
inc
fistl
or
lret
pusha
lods
stc
in
jnp
or
jmp
jle
mov
push
jno
loopne
test
jns
loopne
jns
addb
lea
pusha
fwait
mov
mov
add
cmp
test
and
sub
inc
jno
push
out
push
inc
lret
enter
and
mov
mov
iret
mov
add
sbb
adc
adcl
add
and
fsubrl
add
add
andb
loopne
mov
rorb
jo
add
mov
rcrb
sub
popa
aad
int3
loope
scas
jns
mov
test
and
pop
cmc
fs
cmpsl
mov
addps
movsb
add
andb
sbb
cmpsb
add
xor
test
pusha
xor
jbe
mov
sub
and
mov
push
ret
cmp
mov
xchg
cmp
jb
push
addl
and
pop
out
mov
jmp
inc
pop
xchg
and
sti
sbb
lock
pop
xchg
and
pusha
and
je
stos
out
gs
xchg
int3
jg
jne
add
lods
mov
sub
add
jmp
sub
inc
popf
cltd
dec
sbb
outsb
popf
xchg
outsl
xchg
scas
addb
xor
call
adc
arpl
xchg
mov
loopne
jnp
lret
mov
ret
scas
loopne
xor
and
loopne
into
test
mov
addb
xchg
popa
mov
jmp
jb
lcall
cli
dec
js
mov
dec
push
fwait
insl
mov
andb
add
xchg
inc
popf
scas
loope
int
dec
sub
sbb
clc
xchg
mov
sti
daa
insb
cwtl
rcll
stos
push
pop
add
inc
mov
in
call
dec
js
or
inc
lods
loopne
fwait
scas
add
movsl
xor
add
add
mov
imul
outsl
lret
es
and
xlat
cmp
dec
nop
shlb
and
cltd
loopne
xor
inc
inc
or
and
mov
insl
out
fprem
sub
mov
mov
and
mov
xchg
mov
aaa
fwait
pushf
mov
add
xchg
sbb
push
shlb
out
add
rol
inc
loopne
jl
jne
inc
stos
pusha
cmpb
pop
ror
sbb
push
jnp
enter
movsb
add
mov
mov
lahf
lret
outsl
dec
pop
and
add
loope
in
stos
bnd
popa
jbe
daa
stc
adc
push
in
mov
and
mov
mov
mov
push
outsb
stc
cmp
mov
movsl
xchg
mov
sti
fcmovnu
cmp
pusha
add
dec
loop
mov
leavew
mov
fistpl
push
add
xchg
lcall
rcrb
andb
jge
and
and
cmp
andb
addb
daa
mov
push
add
ljmp
das
dec
jl
je
mov
pushf
mov
idivl
inc
ds
jo
mov
pop
push
mov
and
mov
aam
jp
and
inc
xor
jl
rcrl
lods
and
sahf
lahf
adc
addb
inc
sbb
leave
test
mov
loopne
ud1
lock
loopne
lods
pusha
inc
mov
push
rolb
pushf
sti
sbb
pop
fcom
sub
test
or
cld
test
pop
dec
je
xchg
xchg
bnd
inc
inc
pop
add
out
inc
or
xchg
pop
mov
inc
icebp
xor
sub
and
scas
shlb
in
shl
out
mov
sub
rol
add
mov
cmpsl
sbb
popf
dec
cli
cmpsb
add
pop
mov
xor
add
icebp
pop
and
pusha
sbb
loopne
or
mov
loopne
lds
sar
shl
sbb
jb
add
mov
movsb
andb
fwait
lds
lods
adc
andb
pop
cmp
loopne
movsl
inc
jmp
add
pop
and
subb
or
inc
pusha
mov
mov
loopne
mov
add
sbb
outsb
cwtl
call
push
add
mov
shlb
shlb
pop
jge
pop
mov
cli
shll
add
push
mov
inc
sbb
lret
inc
leave
adc
cmp
jle
cmpsl
int
cs
mov
or
call
mov
loopne
out
icebp
jae
xchg
shll
mov
dec
clc
ret
rorb
xchg
add
xchg
inc
pop
fldenv
jecxz
pop
clc
out
and
inc
dec
jg
or
and
clc
mov
and
jnp
cwtl
inc
mov
mov
mov
add
and
push
push
mov
daa
out
lret
in
test
sti
stos
or
vphaddbd
stos
jecxz
add
fistpll
inc
daa
xchg
inc
loopne
mov
xchg
loop
mov
and
xor
in
andb
fwait
push
sub
loopne
push
fisubrs
aas
stos
mov
pop
sub
push
jmp
rolb
loopne
cmp
push
jns
inc
movsl
mov
inc
addb
add
in
mov
addb
daa
mov
inc
xchg
in
loopne
outsl
ja
mov
sbb
xchg
sbbb
addb
data16
js
pop
popa
jmp
inc
xlat
xchg
xor
rorb
adcb
dec
add
loop
shlb
ss
test
cmp
jb
push
jle
xchg
es
shll
int
inc
loopne
mov
or
pusha
or
ljmp
bnd
inc
arpl
or
mov
xlat
mov
call
icebp
mov
movsb
add
adc
sar
fwait
pusha
sbbl
fldz
pusha
push
out
cmp
add
inc
cmp
jmp
loop
movsl
outsl
and
add
mov
dec
fnstcw
fcomps
push
aam
xor
outsl
add
je
mov
jl
mov
loop
push
lods
xor
or
loopne
push
insl
loope
idivl
inc
inc
pop
xor
mov
push
pusha
dec
std
mov
sbbl
sub
decl
inc
pusha
or
adcb
sbb
scas
inc
shlb
shl
loopne
cs
loopne
push
xchg
add
cmp
and
mov
loopne
push
aad
jno
xchg
in
in
add
add
jle
pop
push
fs
je
mov
shlb
rcr
decl
loopne
cmp
dec
inc
fcomps
stc
xchg
lahf
and
rcrb
pop
in
loopne
add
pusha
icebp
cs
loopne
push
and
jg
clc
sbb
sbb
dec
xchg
in
out
ljmp
addb
mov
cmpsl
imul
or
rol
adc
and
aaa
lock
jne
adc
shl
mov
stos
addb
jo
mov
mov
add
add
pop
daa
bound
popa
insb
or
data16
jmp
loopne
or
xchg
rorl
out
out
pop
pop
xchg
xor
mov
mov
xor
pop
jp
jne
cmp
or
push
inc
mov
pop
aaa
faddl
jo
add
sbb
jne
pop
jae
inc
aas
mov
aam
dec
scas
jge
or
orb
es
rorl
das
addr16
mov
sub
jp
lcall
and
sub
addb
loopne
sub
sbb
push
rclb
shrb
add
adc
sbb
out
lahf
in
popf
fst
sbb
dec
pop
imul
ds
xor
push
inc
jae
jl
add
pop
ror
mov
loopne
mov
in
pop
bound
sub
out
mov
rolb
mov
in
fildl
mov
jo,pt
adc
addb
sub
pop
mov
pusha
sub
sub
pusha
mov
sub
adc
nop
imul
nop
dec
ficoml
xchg
icebp
aas
jnp
jne
mov
and
stos
dec
into
mov
ret
xchg
cmp
sub
and
loopne
push
and
mov
cmp
mov
or
inc
push
xchg
fwait
loopne
mov
insl
lahf
adc
shlb
adc
or
inc
rcrb
sbb
sub
dec
push
mov
stos
shlb
loopne
andb
push
jmp
xchg
and
pusha
and
imul
adc
sbb
mov
mov
bound
aaa
sub
and
repz
xor
jl
inc
jl
sub
addb
stos
loopne
add
sub
inc
in
dec
int
shrb
xor
cmp
inc
inc
sbb
test
out
ficompl
js
xor
jno
and
stc
out
js
popa
cli
lcall
loope
pop
jp
or
mov
pusha
inc
movsl
cmpsl
pop
inc
out
pop
push
push
xlat
in
jmp
cmp
mov
sub
loop
rclb
push
adc
push
mov
js
clc
cwtl
inc
dec
cld
sbb
aas
or
adc
es
adc
shlb
rol
mov
inc
push
pusha
pusha
xchg
inc
sub
or
jp
push
shrl
push
addb
in
ficomps
insb
pop
hlt
xor
jnp
fimull
pusha
sarb
dec
enter
jae
push
lds
add
test
xor
mov
cmp
push
cltd
ja
mov
sahf
out
mov
enter
mov
lock
pusha
mov
mov
loopne
rolb
mov
push
shlb
push
lock
int
xor
add
mov
add
pop
sbb
loop
push
xchg
repnz
loopne
push
xor
xchg
mov
pop
leave
leave
fdivrl
repz
dec
cmp
ljmp
loopne
js
push
cmp
and
aam
and
out
add
shlb
inc
ret
das
sahf
movsb
add
adc
pop
push
cmpsl
push
sub
loope
cmp
mov
lea
clc
lahf
bnd
fs
push
and
inc
inc
mov
pop
sub
add
aas
aas
sub
add
insl
inc
pop
outsl
mov
mov
je
mov
fcompl
xlat
mov
ja
xchg
inc
cs
subb
pusha
jge
jae
pusha
mov
lods
and
sbb
adc
inc
sub
rclb
push
add
fidivrs
test
pusha
iret
dec
sbb
jmp
test
xor
push
and
rcll
cmp
inc
test
mov
mov
pop
dec
imul
sti
xlat
stos
lahf
adc
jbe
in
push
lcall
es
and
dec
imul
inc
add
popf
add
mov
pop
insb
fadd
or
add
jmp
aas
pop
dec
mov
xchg
cmp
and
adc
movl
xor
movsl
jne
jecxz
les
icebp
fistl
fmuls
mov
pop
lcall
xor
cmp
aam
adc
mov
and
inc
inc
jecxz
mov
and
inc
aad
loope
loope
loopne
and
call
jge
xchg
sbb
test
xchg
int
adc
shlb
leave
std
in
and
jns
jle
je
add
hlt
inc
mov
icebp
fcoml
fistps
xchg
xchg
jge
mov
loopne
xchg
adc
shlb
mov
mov
mov
and
in
mov
cmp
push
shlb
jbe
and
cmp
mov
loopne
dec
sahf
hlt
cltd
addr16
lcall
pop
adc
test
out
jno
std
and
push
push
es
mov
ja
xchg
shr
xor
sti
insl
je
hlt
ja
andb
and
dec
decl
or
mov
mov
pop
outsl
mov
xorb
rorb
adc
and
and
scas
mov
inc
shrb
dec
jmp
xlat
lods
xchg
fsqrt
lods
fdivrs
push
xor
aad
loopne
pushf
lds
and
mov
add
loopne
fwait
js
jle
loopne
or
pop
push
cmp
andb
pop
mov
xchg
lcall
sbb
in
sbb
push
aas
push
ss
ljmp
lods
les
jp
push
lods
mov
and
pop
ret
jne
cmc
cmpsl
inc
mov
je
add
adc
mov
mov
add
add
add
mov
lds
enter
sahf
iret
bound
and
insl
adc
push
dec
push
and
pop
mov
adc
jns
push
sahf
sbb
in
pop
mov
xor
mov
add
and
push
mov
push
popa
pop
mov
or
and
lret
scas
loopne
jmp
movsl
mov
inc
sbb
dec
xchg
mov
insl
xchg
int
push
scas
nop
xchg
sub
loopne
lock
cmp
hlt
push
push
and
popf
mov
lds
or
inc
out
iret
jne
ret
cmc
mov
add
fcompl
jge
ss
pushf
imull
lock
mov
ss
push
sub
jo
cmc
mov
and
enter
cmc
sti
jnp
mov
and
shlb
pop
mov
xor
push
push
outsb
jo
mov
mov
or
mov
in
xor
mov
cmp
xor
mov
test
dec
repnz
and
cmc
call
and
pop
andb
mov
movb
loopne
jae
inc
mov
loopne
mov
push
lea
inc
mov
addb
arpl
aam
push
inc
mov
xchg
inc
mov
mov
loopne
xchg
stos
inc
pusha
mov
lods
and
adc
fmuls
pusha
pop
shl
mov
push
pop
cmp
out
js
in
xor
insb
fldt
pop
popf
movsb
pusha
sarb
and
mov
xorb
cld
shll
add
pop
mov
cmp
inc
loopne
pop
in
ja
pop
xor
jl
movsl
sub
loopne
int
in
and
mov
xor
daa
push
cmpsl
and
xchg
or
cmp
lds
out
test
pusha
jge
inc
push
xor
xchg
addl
adc
xchg
mov
mov
in
outsl
add
and
gs
sahf
les
xchg
nop
addr16
mov
fprem1
jnp
jbe
popf
mov
xor
dec
inc
adc
lcall
and
cmp
xchg
into
and
add
mov
pop
adc
jnp
out
aam
test
pop
stc
inc
fildl
dec
add
daa
pop
aam
xor
fwait
iret
sub
ror
inc
inc
adc
imul
jl
pop
xchg
add
outsb
into
cli
jle
xchg
mov
pop
test
lcall
pusha
popf
push
inc
pop
push
cmpsl
cmp
mov
and
cmp
jne
mov
pop
mov
mov
add
sarb
lret
mov
pusha
push
push
inc
dec
pop
adc
push
mov
les
stc
mov
mov
je
xchg
loopne
dec
sahf
adc
js
mov
fiadds
push
inc
test
sarb
and
jns
adc
sbb
test
and
adc
in
movsl
jnp
mov
pop
fnop
inc
xchg
push
inc
adcb
mov
pop
test
jb
mov
loopne
jle
out
call
mov
ds
add
mov
loopne
push
xchg
stos
dec
or
and
inc
in
dec
mov
rol
fnstcw
add
add
cmc
aaa
andl
iret
movsb
inc
loopne
fs
push
cmp
adc
inc
pusha
repz
pusha
cltd
mov
push
inc
and
xchg
clc
and
lret
movsb
inc
loopne
rol
adc
jp
movsl
push
pop
fwait
testb
shlb
pusha
dec
lods
rolb
sub
pusha
add
pusha
cmpb
loopne
push
movsl
repnz
and
sub
shlb
stos
das
pop
fbstp
and
mov
movsb
and
fisubs
add
dec
jmp
cmpsl
cmp
xorb
adc
fs
mov
mov
push
andb
xchg
pusha
arpl
int
mov
mov
out
popf
incl
mov
loop
clc
lods
inc
add
arpl
mov
lds
sahf
jns
movsb
add
push
mov
jg
xorl
jmp
lods
and
not
nop
ret
stc
pop
andb
leave
add
repz
push
shr
adc
jg
push
jp
ror
inc
ljmp
and
sbb
aas
ret
pop
xor
or
out
sti
fimull
loopne
or
jb
pop
test
xor
inc
cmp
dec
cmpsl
xchg
or
add
adc
cmc
jb
loopne
popa
test
das
adc
mov
add
push
adc
pop
xchg
push
jge
imul
cmp
je
fldlg2
sbb
shlb
mov
insl
test
or
add
rcrl
shll
out
and
inc
cs
mov
pop
and
mov
add
stos
addb
fcom
push
mov
ret
mov
sub
add
jns
cltd
fstps
push
sbb
bound
lcall
stos
sbb
mov
add
mov
stos
cmp
cltd
jb
adc
or
loopne
in
insl
mov
in
rorb
aaa
je
or
andb
adc
push
pop
aam
inc
loopne
mov
mov
xor
sub
and
pushf
shl
lods
add
ret
les
in
fstps
xchg
lahf
cmp
es
sti
and
rclb
pusha
jmp
mov
pusha
arpl
xchg
mov
std
mov
xchg
ret
mov
jle
lods
lea
or
pop
sub
loope
push
add
fadd
xchg
mov
mov
pusha
in
sbb
cmp
addb
adc
xor
lret
dec
call
leave
int3
imul
mov
and
mov
cmpsl
bound
inc
mov
fldenv
inc
out
in
push
push
loope
inc
adc
loopne
fidivrs
cmp
sbb
rolb
cltd
mov
fcmovu
cmpsb
rolb
mov
push
adc
lock
stos
xorl
xchg
aad
subl
loopne
push
push
sub
rcrb
mov
pushf
test
shlb
pusha
and
push
data16
xchg
int
in
dec
outsb
pop
bound
outsl
into
push
and
je
loop
push
jno
or
cmp
addb
sub
inc
xchg
divl
cmp
addr16
cmc
add
mov
pusha
pusha
cmp
add
cmp
mov
mov
add
mov
rclb
jnp
loopne
cmpsb
inc
pusha
mov
andb
mov
lret
lahf
incb
roll
sub
inc
adc
inc
cwtl
or
and
jg
fst
rcrl
pusha
push
loopne
pop
or
scas
loopne
mov
inc
hlt
push
mov
call
inc
and
pushf
gs
push
push
loopne
mov
cltd
daa
daa
or
inc
lea
notb
data16
jge
jecxz
sbb
and
les
sbb
add
scas
std
fwait
jge
add
loopne
popa
dec
ret
pushf
fwait
or
shr
in
push
or
add
pop
hlt
ficompl
and
xor
inc
and
pop
jge
push
sub
add
push
imul
sbb
sar
ds
divl
outsb
jmp
cmp
adc
roll
sar
sbb
add
aaa
xchg
add
inc
lds
arpl
sub
and
dec
cmp
repnz
inc
mov
iret
mov
imul
push
mov
loop
aas
out
shr
sub
rolb
and
pusha
orb
ja
push
pop
lods
loopne
dec
jmp
filds
mov
mov
and
pop
dec
std
dec
scas
cltd
xor
mov
add
jne
into
add
mov
pop
pop
rorl
and
cmp
push
arpl
lds
adc
dec
adc
and
inc
sbb
out
jecxz
ret
xor
shlb
and
cmpb
xor
stos
add
mov
mov
das
into
jle
popf
jne
adc
addb
jns
sbb
loopne
nop
imul
mov
pop
inc
mov
and
orb
add
add
dec
je
fsub
xrelease
xor
push
mov
xor
pop
push
lods
and
out
and
cli
repz
pusha
inc
mov
std
hlt
cltd
mov
xor
xchg
in
roll
mov
add
ljmp
jb
xchg
sub
loopne
addb
mov
lock
pop
jge
mov
stos
and
imul
icebp
or
mov
ret
add
lret
fsts
cmp
ds
popf
jbe
pusha
inc
adc
sub
out
pop
in
outsb
push
test
mov
mov
mov
fnstenv
mov
pushw
inc
hlt
mov
pop
xor
sar
ret
data16
mov
or
sarl
loopne
sub
mov
jle
aam
loopne
push
clc
in
in
in
out
lods
inc
and
push
and
dec
fs
das
daa
mov
enter
cmp
clc
cmp
xor
and
fwait
jbe
mov
movb
xchg
push
int
mov
inc
add
into
mov
xchg
and
and
loopne
or
mov
addl
imul
and
lret
add
jp
push
cmp
or
pusha
push
shlb
add
aas
shlb
hlt
das
dec
add
xchg
out
cmc
mov
or
loopne
push
fidivrl
jmp
movsl
mov
enter
nop
into
push
inc
jne
sti
pop
notb
into
xor
je
insl
pop
xchg
shrb
mov
fwait
icebp
xor
jg
fstpt
enter
repnz
push
lcall
hlt
mov
cmpsl
mov
mov
stc
out
jg
add
or
jp
shlb
pusha
aas
mov
and
mov
dec
inc
or
add
jecxz
ljmp
rcr
sub
loopne
push
adc
rolb
xlat
cli
or
orl
dec
and
rcrb
add
push
sub
in
add
fldcw
out
cmc
out
ret
pop
jle
push
sbb
test
push
dec
out
lds
mov
push
push
push
loopne
add
dec
in
sbb
stc
push
mov
mov
insb
adc
test
push
ss
mov
stc
dec
jle
test
jno
int
and
rcrb
mov
mov
sbb
lcall
xchg
mov
xchg
jb
andb
adc
push
ja
push
inc
sbb
loopne
or
in
fmulp
sub
pusha
cmp
sahf
inc
fistps
loopne
add
dec
pop
xor
add
pushl
and
test
aam
cmpsl
mov
ds
fcomip
or
bound
out
andb
pusha
push
xor
insl
mov
cmp
int3
inc
aam
cwtl
add
pusha
push
mov
stos
loopne
sub
inc
push
mov
mov
jae
aad
xchg
mov
je
inc
lods
andb
inc
cmpb
movb
inc
xchg
bound
cmpl
adc
mov
inc
add
inc
xchg
ret
js
push
aaa
add
movsb
add
or
push
lods
rolb
sti
xchg
out
loopne
fs
xchg
ds
adc
xor
push
sub
cli
int
add
inc
push
insb
push
in
fcmovu
sbb
push
mov
into
cmpsb
add
lds
add
inc
out
mov
movsb
pusha
and
pushl
sbb
pop
mov
lret
push
push
movl
das
push
je
sub
mov
xorl
sar
xchg
cmp
dec
daa
mov
outsl
inc
mov
loopne
pop
sbb
lcall
loopne
dec
inc
andb
cmp
fwait
dec
dec
imul
pop
daa
mov
out
mov
jae
in
xchg
lods
pop
nop
clc
add
add
rolb
sbb
aam
or
mov
aad
js
push
xchg
sub
jmp
outsb
dec
pop
aam
add
add
cmp
lret
jns
insl
push
add
cld
pop
test
push
and
rorl
shlb
shl
aaa
jne
inc
sub
add
mov
pusha
add
jg
ljmp
sbb
pusha
lret
jle
ss
and
mov
data16
pusha
loopne
mov
inc
pop
repnz
lock
add
mov
pop
xchg
stc
ds
mov
mov
cmp
rolb
or
add
inc
jns
cmp
out
ss
pushf
dec
mov
inc
xor
or
lock
pusha
aaa
dec
pop
idivl
daa
pushf
mov
leave
sub
mov
jp
mov
and
movsl
idivl
inc
lret
push
stc
addb
inc
stos
jmp
xor
jmp
push
mov
adc
js
stos
mov
and
pusha
shlb
add
stc
mov
mov
fstl
les
cmp
mov
jmp
xchg
cmp
pop
dec
ret
adc
shlb
mov
jnp
xchg
stc
push
fstps
aam
cmp
add
jecxz
loop
and
loopne
into
addb
mov
push
add
pop
andb
hlt
stos
rdpmc
std
daa
test
loopne
dec
testl
pusha
loopne
and
pusha
push
aam
xlat
cmp
inc
push
sub
loopne
icebp
dec
fistpll
adc
pop
push
shl
ss
sub
and
sahf
repz
jno
repz
mov
add
rolb
scas
sbb
fcoml
pop
inc
mov
xlat
xor
inc
call
sub
call
add
pusha
and
nopl
inc
or
das
dec
mov
dec
stos
and
mov
inc
pop
inc
inc
ljmp
and
shrl
addb
inc
je
bound
cmp
stos
mov
rcl
pop
adc
adc
adc
and
repnz
and
and
jle
mov
pop
pop
loop
add
xlat
lret
adc
cmp
jle
pushl
ja
insl
pop
addb
add
inc
adc
cmp
notl
mov
sub
leave
fldt
pusha
xlat
sub
je
and
mov
adc
ja
cmp
add
pusha
mov
pusha
inc
insl
or
inc
jbe
sbb
test
add
inc
pop
add
xchg
xorb
rolb
dec
mov
and
add
jle
mov
shlb
mov
mov
adc
js
xchg
shl
pop
jmp
sbb
inc
dec
stc
mov
mov
sbb
imul
sbb
sub
leave
sub
lea
pusha
dec
fdivs
cmp
fwait
repnz
out
lea
popa
fildl
cmpsl
cli
imulb
add
lcall
xchg
xchg
jns
insl
pop
push
cltd
cmp
inc
loopne
xor
add
pusha
pusha
or
sbb
popl
jmp
adc
jo
inc
pusha
pop
and
call
ds
sbb
fstps
add
pop
adc
arpl
inc
loopne
push
xchg
data16
adc
scas
inc
loopne
push
mov
addb
pusha
fldcw
out
push
out
push
mov
loopne
shll
stc
add
dec
jne
push
out
out
jnp
and
and
fsubl
inc
shrb
loopne
call
lods
loopne
mov
addb
inc
jmp
sub
jnp
pop
adc
fneni(8087
out
sub
and
inc
adcb
pop
inc
dec
sbb
loopne
xchg
pop
std
mov
inc
or
sbb
sub
shlb
mov
sub
jno
push
push
pop
jmp
push
test
popf
inc
xor
adc
add
imul
aas
inc
repnz
out
push
lahf
xor
pop
sub
rolb
add
mov
data16
mov
and
mov
loopne
and
xchg
pop
cmp
pop
lods
loopne
rcrl
addb
push
insl
mov
mov
out
add
add
icebp
ret
mov
int
push
push
out
mov
mov
lock
or
xchg
xor
aam
pop
sub
sub
mov
rolb
add
push
dec
sub
xorb
sub
add
mov
mov
rcl
testb
add
mov
leave
jmp
add
mov
outsl
test
xlat
loop
ret
aas
test
js
sahf
push
loop
sbb
andb
and
sub
mov
xchg
stos
and
add
out
mov
mov
and
enter
pop
add
subb
rcrl
xchg
cwtl
push
imul
mov
jle
je
out
inc
and
mov
mov
xchg
cwtl
fcomps
pop
addl
sub
cmpb
add
xor
and
jbe
mov
int3
jns
leave
aas
popa
push
pusha
ror
push
or
sub
nop
insb
paddusb
aam
adc
lea
ret
arpl
cwtl
dec
mov
and
stos
icebp
ljmp
mov
pop
lds
lods
std
loope
jo
lea
leave
or
inc
in
cmp
mov
enter
iret
cmpsl
adc
inc
in
out
out
in
andb
pusha
inc
sub
pusha
cmp
call
mov
andb
inc
ret
mov
and
pusha
pusha
mov
dec
mov
add
pusha
shlb
sbb
call
mov
mov
les
push
clc
sbb
in
mov
inc
and
xor
lahf
ret
mov
loop
div
sub
pusha
mov
jp
and
pusha
inc
daa
xlat
or
arpl
cmp
pop
aam
inc
adc
mov
mov
mov
and
sti
loope
hlt
cltd
or
pusha
into
and
inc
sbb
push
push
pusha
sarb
pusha
add
add
fisttps
shlb
jg
out
adc
in
mov
es
and
push
jnp
pop
lds
shlb
ss
push
shrl
pusha
pusha
sbb
sbb
jne
pusha
jl
repnz
pusha
pusha
adc
cli
enter
ret
mov
and
jecxz
sti
push
popa
movsb
rol
xor
pusha
mov
popf
stc
addr16
bnd
jae
jl
lret
xchg
push
test
je
and
lods
inc
loopne
add
stos
and
adc
mov
ljmp
loopne
push
inc
push
mov
sub
and
jp
push
xchg
adc
outsb
sbb
mov
aas
cmp
push
and
cmp
aaa
pop
push
pop
adc
sub
sarb
sbbl
pusha
mov
lods
inc
inc
dec
mov
and
jns
inc
mov
scas
and
fsub
incl
jnp
lea
xchg
mov
and
pusha
push
xchg
scas
pusha
loopne
pushf
sub
subb
andb
mov
pop
scas
and
jb
jo
adc
add
inc
ds
xor
shlb
imulb
andb
lcall
pushf
ret
adc
test
pushf
push
lret
adc
push
sub
loopne
add
ror
inc
push
mov
fmuls
mov
jl
es
and
mov
daa
pop
arpl
inc
add
jl
jno
xor
negl
inc
outsl
jmp
xlat
ret
scas
stos
outsb
das
andb
std
mov
andb
loopne
jg
scas
add
imul
test
pusha
bound
cltd
or
pusha
out
popf
dec
repz
mov
and
popl
imul
add
mov
data16
sbb
jno
pushf
lahf
xor
mov
in
incb
and
stos
fidivrs
pop
test
add
cltd
push
shl
mov
addb
mov
aaa
inc
loopne
push
mov
add
les
push
xchg
cmp
inc
pusha
sub
bound
shlb
mov
add
cmpsb
pusha
pusha
js
and
loopne
sub
repz
inc
xchg
roll
hlt
dec
rcrl
loopne
jo
ljmp
sarl
mov
das
out
inc
das
mov
cmpsl
scas
rolb
loopne
outsl
test
loopne
mov
jb
andb
xorb
pusha
pusha
mov
loopne
adc
dec
push
pop
sub
inc
pop
lahf
lea
or
pop
es
fidivs
loope
xchg
repz
daa
sub
pop
add
movsl
fcompl
int3
sahf
and
inc
mov
test
add
pop
das
adc
pusha
pusha
add
fincstp
dec
lret
cmp
in
xor
pusha
pusha
ret
das
fwait
test
loopne
jne
push
clc
adc
jne
loopne
dec
loopne
mov
gs
add
nop
add
loopne
and
push
incl
and
je
imulb
andb
inc
and
dec
jp
loopne
xchg
inc
pushf
push
andb
mov
out
and
mov
cmp
mov
lds
roll
mov
inc
aas
pop
sub
shrb
xchg
nop
loope
xchg
jmp
sbb
mov
loopne
dec
fwait
repz
aam
mov
push
addb
iret
or
pusha
mov
xchg
jb
and
rorl
and
fadds
loopne
ss
add
andb
and
xchg
xor
add
mov
mov
shll
and
sbb
xor
mov
mov
add
mov
xchg
lahf
dec
lcall
outsl
inc
ret
imul
or
add
lea
pop
out
bound
lods
loopne
popf
xor
addb
loopne
loope
inc
mov
scas
jne
stc
mov
int3
sbb
mov
mov
pusha
mov
mov
mov
fisubl
andb
cmpsl
icebp
xchg
call
cmpsb
shlb
daa
lock
sbb
into
cmpsl
inc
popa
rcl
movsb
and
pop
or
cmpsb
shl
xchg
add
ljmp
loopne
sbb
aas
push
lds
add
xlat
add
shlb
add
mov
and
loopne
and
push
add
pop
add
loopne
jbe
and
out
or
in
pop
movsl
jmp
and
lcall
and
xchg
imul
xor
mov
ljmp
lret
mov
push
mov
mov
xchg
mov
mov
pop
push
shlb
or
add
xchg
jmp
adc
add
rol
jb
mov
movsb
inc
mov
mov
ljmp
mov
xchg
cltd
jns
adc
adc
std
imul
mov
ffree
sub
and
pushf
aad
xchg
loope
xor
add
add
addr16
xor
nop
push
sub
stc
mov
dec
sub
inc
clc
xchg
push
inc
lea
or
jo
scas
add
xchg
test
pop
sbb
pop
and
jbe
inc
inc
mov
mov
popa
pushf
mov
cmp
mov
inc
jno
add
jae
sub
xor
addb
jp
rolb
cli
push
shlb
cmpsl
cmp
data16
ds
aam
jg
sahf
mov
xchg
in
dec
push
jle
shll
inc
add
arpl
loopne
pusha
mov
pusha
sub
xor
cmp
int3
jae
movsb
and
add
divb
popf
mov
in
sbb
cmpsb
mov
and
dec
mov
dec
imul
addb
test
loopne
mov
mov
pusha
shlb
ja
andb
rolb
pusha
cld
out
xchg
jae
test
and
and
push
mov
aad
push
shlb
jp
imul
dec
mov
in
mov
cmp
push
mov
enter
lcall
pusha
out
imul
xchg
add
add
fdivrl
outsl
pop
sbb
sbb
jecxz
out
scas
inc
mov
decb
or
into
aam
fisubl
stos
js
lcall
sarb
cmp
adc
pop
mov
push
shrb
inc
into
pop
mov
or
or
cmpsl
xor
add
stc
inc
mov
jae
rol
pusha
mov
xor
jb
inc
shlb
fdiv
ja
mov
hlt
mov
lret
sbb
sub
add
inc
sub
mov
mov
sets
test
loopne
cmp
insb
cmp
add
and
push
xchg
ss
outsb
popa
neg
xor
pop
les
inc
inc
subl
neg
pop
dec
push
inc
nop
and
lock
outsl
inc
movsl
movb
pushf
ret
mov
loop
loopne
out
and
cmp
jl
jne
mov
fmuls
loopne
es
sbbb
sbb
addb
leave
mov
test
pusha
sbb
arpl
loopne
std
jbe
pop
frstor
lret
mov
outsl
jno
sub
xchg
xor
sbb
mov
pop
mov
out
mov
inc
or
scas
pop
in
mov
aas
fpatan
add
xchg
testl
pop
ss
inc
sbb
jnp
fmull
cwtl
lret
rolb
andb
lcall
add
inc
lret
dec
push
dec
insb
jne
and
mov
imul
rorl
nop
add
adc
sti
push
andb
add
loopne
sub
rcl
in
popa
push
aaa
inc
xchg
fstpt
or
jae
or
jne
mov
dec
pusha
ljmp
adc
andb
andb
and
mov
pop
xchg
sub
scas
add
push
push
inc
loop
mov
mov
rcrl
and
mov
repnz
shlb
loopne
je
int
ds
andb
ds
add
add
xor
and
fdivs
jo
add
subb
mov
sub
pusha
inc
xor
push
push
enter
movsb
pusha
rolb
add
rcrb
mov
loope
mov
mov
pop
clc
xchg
int3
push
pusha
mov
addb
mov
andb
lahf
cmpsl
xor
aam
dec
pop
aas
push
mov
mov
mov
leave
aas
ja
pop
fwait
sub
clc
or
loopne
mov
ret
add
pusha
cmpsb
pusha
add
add
jp
cli
cld
jno
mov
enter
lods
fstpl
data16
into
and
add
push
rcr
hlt
xchg
sub
inc
lea
mov
add
inc
cwtl
das
aas
inc
mov
addb
dec
in
loop
jbe
and
je
inc
loopne
movsb
andb
mov
xor
mov
jb
sbb
sbb
int
inc
mov
push
shl
sarb
dec
or
cmp
xchg
movsl
addb
inc
ret
sub
xorb
loopne
andb
pop
mov
mov
shlb
shrb
shlb
std
jo
aam
xchg
enter
int
pop
mov
rolb
xor
scas
xorl
sbb
jo
xchg
cmp
and
push
sub
dec
es
cmp
add
inc
jnp
test
stos
cmp
loop
lret
icebp
cs
orl
xchg
cltd
pop
push
inc
mov
pop
mov
and
xor
nop
cltd
xchg
fwait
xchg
dec
in
fildl
loopne
addr16
mov
inc
test
inc
pusha
jg
and
nop
les
in
jg
andb
out
mov
sbb
cmp
xchg
outsb
andb
loopne
mov
testl
mov
andb
add
xchg
icebp
sbb
inc
loopne
push
xchg
in
fwait
or
imul
in
scas
add
ss
andb
jp
pusha
rclb
mov
push
pop
out
enter
xchg
ret
and
adc
outsb
mov
bound
and
loope
push
mov
jno
pusha
loopne
add
test
shlb
and
push
stc
call
inc
jno
jg
flds
lret
and
shlb
and
mov
sub
test
mov
gs
xor
popa
mov
sarb
and
sub
xor
and
cli
sbb
jp
jg
outsl
aad
add
mov
or
adcb
dec
push
inc
and
add
bound
dec
cld
or
leave
mov
and
loopne
cwtl
pop
jp
cmp
lret
cmpsl
jle
and
push
lret
inc
and
mov
in
lret
mov
xchg
and
out
lods
xor
cmpsb
addb
cs
and
sbb
or
loopne
or
push
rcll
fdiv
pop
in
pusha
ja
inc
mov
jnp
mov
andb
jg
sub
adc
nop
add
pop
movb
pusha
cmp
inc
std
shlb
shlb
rol
xchg
cmpsb
inc
and
sti
leave
ljmp
xor
and
xchg
lods
mov
aas
add
cmp
testl
imul
int3
stos
and
jbe
pop
cmp
ficoms
mov
push
repz
inc
clc
vsubpd
or
mov
inc
add
pushf
pop
leave
test
add
jp
aaa
xchg
repnz
jmp
jge
andb
mov
pusha
pusha
lods
pop
rol
add
pusha
in
xor
and
xor
and
shr
xor
push
aam
mov
cmpsl
adc
cmp
scas
and
fimuls
lds
dec
mov
sbb
fsubr
push
xchg
push
cmc
ficoml
push
shlb
mov
mov
mov
mov
xchg
xor
sarb
mov
sarb
test
pusha
and
mov
mov
cli
movsl
imul
sti
and
pop
cmp
mov
neg
daa
xlat
xchg
inc
mov
push
fs
out
int
mov
rclb
pop
xlat
sti
roll
cmp
lcall
mov
popfw
xlat
add
pop
cltd
jmp
addb
sub
addr16
pop
aam
addb
daa
mov
mov
mov
orb
cmp
repnz
or
out
sbb
insl
sahf
lret
add
imul
mov
loop
notb
add
test
add
rolb
aaa
enter
jb
jle
pusha
inc
cmpsl
cld
iret
movsb
and
and
sbb
mov
fwait
sbb
pop
mov
dec
lods
inc
inc
or
loopne
inc
mov
punpckhbw
cmpb
lock
fdivrl
lds
mov
lock
and
jg
in
mov
mov
sub
sub
jns,pt
push
and
subl
ret
sub
lds
stc
cmp
xor
stc
aas
je
lahf
mov
and
cld
les
popa
inc
sbb
push
addb
loopne
sub
sar
sub
add
fisubs
jg
lds
fdivrs
test
mov
add
dec
sbb
test
add
push
inc
sub
add
loopne
dec
loop
imul
inc
and
push
cmp
into
jg
mov
andb
add
jmp
std
mov
dec
stc
sarl
inc
dec
testb
rclb
addr16
mov
inc
loopne
mov
xchg
cld
or
pusha
pusha
mov
jne
add
jns
mov
mov
andb
js
xor
inc
test
addr16
cmp
cmp
xor
mov
in
xor
mov
push
mov
mov
mov
push
or
and
enter
std
sti
adc
pusha
orb
inc
or
mov
add
lods
loopne
inc
repnz
repz
and
mov
mov
lcall
dec
aad
inc
cmp
addr16
pusha
mov
ret
test
or
and
and
popl
inc
and
cmp
fdivp
rolb
xchg
mov
mov
mov
dec
dec
mov
pusha
mov
jp
inc
in
mov
mov
sub
mov
add
pushf
and
mov
pusha
bound
outsl
loopne
pop
cmp
xchg
bound
mov
out
out
inc
and
inc
pop
sub
inc
aad
in
dec
and
and
fidivrs
fdivrl
dec
negb
dec
pop
or
xchg
cmp
stos
jno
pop
dec
adc
mov
mov
jecxz
and
and
inc
pop
add
add
test
pusha
mov
sbb
xchg
inc
add
add
repnz
or
mov
stos
lret
fnstenv
popa
loope
xchg
pop
push
cmp
sbb
fmull
and
and
add
xchg
rol
xor
cltd
jno
and
stos
add
sbb
jb
jmp
mov
xor
push
sub
into
jle
flds
push
mov
dec
shlb
repz
inc
fcmovu
inc
cmpsb
add
mov
add
inc
cld
je
imul
mov
xchg
mov
mov
mov
and
imul
or
fwait
pop
xchg
mov
add
in
mov
loopne
popl
addb
pop
test
test
add
mov
stos
arpl
pop
ss
fwait
fwait
outsl
sbb
lret
mov
mov
sar
fcmovnbe
sar
pushf
xchg
sub
loopne
push
fisttpll
add
mov
test
and
aad
sbb
fistpll
add
lret
fwait
cmp
pusha
loopne
fwait
lret
xchg
and
daa
cld
and
or
jno
fadd
rcr
mov
add
adc
pusha
data16
sbb
hlt
add
jmp
test
in
pushf
mov
cmp
push
addb
push
dec
jae
loopne
mov
push
insb
fidivl
sti
push
test
mov
jp
aas
movsb
inc
pusha
xor
rolb
push
std
xchg
mov
daa
dec
or
and
rolb
jmp
shl
in
aas
mov
or
and
xchg
pusha
push
and
inc
lods
aas
jge
and
dec
lds
shl
movsl
dec
mov
sbb
dec
popf
mov
cmc
push
sbb
insl
in
push
and
test
jecxz
icebp
outsb
sbb
xchg
inc
sbb
and
loopne
bswap
jmp
aam
xor
fucom
popa
stos
push
mov
adc
jo
inc
and
mov
add
test
outsb
ljmp
xchg
adc
mov
sub
sti
xor
or
mov
or
loopne
jnp
pop
mov
cmp
imul
adc
ret
movsl
mov
inc
inc
mov
mov
imul
int3
mov
mov
mov
sub
test
inc
into
aas
iret
push
sbb
xchg
add
negl
fwait
inc
imul
test
rolb
mov
cmp
inc
jg
cmp
in
cmp
inc
loopne
inc
int
aas
sahf
xchg
sbb
add
sub
loopne
jbe
bswap
gs
pusha
sbb
jns
push
in
sub
mov
push
adc
cmp
loopne
stos
jno
mov
cmp
and
jle
cmc
sbb
pop
sar
cmpsb
mov
rolb
adc
in
cmp
lds
dec
inc
sti
out
xchg
ret
cmp
add
pusha
sub
cmp
insl
fsubr
or
xchg
int
sti
dec
dec
add
add
not
sbbl
jno
push
out
xchg
inc
cmpb
loop
pusha
and
jne
cwtl
clc
jecxz
inc
and
subl
dec
shlb
push
mov
ret
and
mov
pusha
adc
dec
cmp
sub
popf
dec
push
pusha
sub
and
jbe
leave
mov
loopne
mov
inc
lods
popf
fisubrl
imul
and
arpl
add
repz
and
add
adc
out
add
mov
xor
cmp
scas
jmp
shl
addb
fdivrs
lcall
and
jno
jb
inc
popa
in
inc
loopne
fimuls
lock
inc
inc
int3
lret
pusha
andl
add
loopne
cltd
cmpsb
mov
dec
inc
std
mov
iret
and
xor
dec
aam
push
cs
inc
xor
loopne
push
pushf
xchg
cmpsl
stc
jecxz
and
sbb
andb
pop
enter
insb
sub
movsb
add
aad
jb
pop
test
aas
sub
loopne
pop
mov
pusha
loopne
push
pop
lret
inc
xor
stc
mov
mov
sub
inc
sbb
addr16
scas
inc
mov
pusha
pusha
push
gs
or
and
or
or
inc
mov
andb
mov
shll
inc
adc
outsb
int3
or
out
sbb
push
add
or
and
jl
leave
cltd
popf
pop
push
loopne
pushf
in
leave
push
lds
jbe
fwait
inc
filds
insl
mov
cmpsb
and
mov
mov
lahf
jns
cmpsl
cwtl
jl
jnp
int
test
sbb
sbb
aaa
adc
cmc
push
mov
mov
in
sub
cmp
xor
mov
stos
andb
cmp
add
mov
dec
fs
lds
out
lods
in
gs
xchg
pop
and
mov
sub
and
es
sarb
jne
add
add
repnz
jg
arpl
mov
iret
jecxz
mov
pop
clc
mov
jle
xchg
cmc
sub
dec
dec
push
mov
cmp
ficoml
cmp
push
jae
lea
sub
mov
mov
movsb
rol
negb
push
jg
out
in
xchg
call
pop
fs
inc
mov
aad
mov
or
add
scas
inc
sar
shlb
das
clc
mov
test
cmpb
and
dec
popf
dec
pop
aam
pusha
pusha
mov
and
mov
ret
shr
or
and
mov
inc
rorl
xor
sbb
leave
pop
enter
loope
arpl
and
rorb
and
repz
and
xchg
dec
pop
mov
xor
xor
push
das
xor
pusha
lods
rol
sub
mov
mov
cld
and
pop
sub
mov
shl
adc
or
cmp
andb
pop
or
or
push
fcompl
sbb
ja
mov
xchg
mov
pusha
mov
and
mov
lock
rolb
sub
sub
daa
dec
fisttpll
sub
decb
adc
xchg
push
push
nop
in
xor
dec
mov
andb
aam
mov
inc
movsl
mov
xchg
cltd
xor
cmp
rclb
es
addb
popf
andb
scas
mov
inc
cmp
push
pusha
loopne
and
sub
rol
push
pop
pop
jno
inc
loopne
andb
add
dec
inc
cmp
push
pop
sti
into
jo
mov
daa
addr16
imul
and
loopne
mov
insb
mov
or
add
push
addb
pop
inc
cmp
push
mov
xchg
mov
rolb
aam
fdivs
adcb
sbb
inc
icebp
lret
pushf
or
sbbb
popa
sahf
sbb
rclb
or
mov
dec
and
pusha
ret
movsl
push
push
leave
jge
add
sarb
clc
sbb
push
scas
loopne
lock
hlt
in
xacquire
pop
lea
loopne
pusha
jnp
call
xlat
cltd
cmp
div
addb
gs
into
sub
xor
mov
add
ds
int
cli
mov
test
pop
movsb
mov
sbb
sbb
nop
or
mov
repnz
pop
xor
and
and
mov
clc
ja
clc
jmp
inc
ror
stos
andb
ss
cmpsb
shlb
xchg
jb
mov
mov
adcl
mov
and
add
hlt
xor
pop
xchg
fsubrl
ret
xchg
scas
and
dec
outsl
rcll
lods
push
and
jns
jmp
lahf
jne
pop
dec
fucomi
scas
xchg
cmp
inc
jno
pop
je
into
xorl
or
pop
sbb
push
addb
addb
loop
or
add
loopne
repnz
shl
clc
sub
inc
mov
mov
add
sub
and
mov
adc
pusha
inc
sbb
rorl
mov
rcrb
rep
cltd
lret
xor
les
test
in
lcall
mov
lcall
je
inc
add
shlb
pusha
aas
push
dec
out
bound
sbb
ljmp
push
data16
popa
jl
mov
mov
iret
xlat
in
mov
adc
jo
mov
and
shlb
and
call
xchg
and
ds
xor
idiv
adc
mov
loopne
jb
pop
ja
push
into
into
sbbl
rclb
andb
ss
mov
inc
pop
xchg
into
xor
fiadds
push
fwait
shl
push
inc
lret
test
loopne
shlb
push
mov
add
movsl
mov
arpl
mov
je
cmp
dec
mov
insb
jmp
rcrl
dec
mov
jnp
sub
sub
in
call
jle
and
lods
mov
pop
pusha
insl
cmp
cmp
cmp
int
ret
pushf
subl
adc
rolb
into
out
cmp
pusha
inc
fimull
and
add
outsl
inc
xchg
sarl
enter
inc
rol
pushf
adc
add
push
pusha
add
adc
aad
pop
jbe
fsubrs
sti
mov
sti
lods
pushf
fwait
xchg
ja
push
and
mov
repz
cmp
inc
loopne
cmpsl
pusha
pandn
jo
mov
ss
and
loopne
mov
xchg
jp
nop
mov
adc
jbe
inc
cmp
pop
stos
pusha
mov
add
xor
inc
adc
and
push
and
jb
popa
or
mov
mov
jmp
cmp
inc
inc
lea
mov
jae
mov
and
inc
dec
mov
lds
and
cmpsl
lods
mov
std
and
andb
fimull
mov
mov
sub
rclb
sti
xchg
clc
push
loop
lret
mov
inc
ljmp
sti
mov
pusha
inc
cmp
pop
addr16
push
fwait
mov
and
add
mov
addb
inc
cmp
dec
or
cltd
int
xlat
stc
or
orb
sub
fcomps
jecxz
push
and
or
loopne
and
mov
jne
outsb
daa
mov
out
jge
lret
notl
aaa
cmpsb
andb
cmpb
rolb
cmp
add
inc
pop
aam
push
pop
setg
and
jg
into
jae
inc
pop
jecxz
or
mov
mov
mov
or
subb
inc
mov
push
sahf
popa
aam
test
pusha
aam
add
and
dec
and
int3
lahf
das
and
push
icebp
xchg
mov
call
hlt
stos
add
shl
outsb
sbb
pop
sub
lds
aaa
xchg
push
jb
stc
or
subb
sub
dec
shll
lcall
and
inc
inc
stos
xchg
pop
loope
and
orl
data16
pusha
mov
out
call
lahf
outsl
push
mov
sub
leave
lea
pusha
mov
mov
inc
loopne
inc
xchg
jnp
lret
sub
add
imul
inc
adc
bound
sub
jno
sub
pusha
pop
xor
push
fs
push
test
pusha
ljmp
fcmovnbe
scas
pusha
loopne
mov
lahf
xchg
pushl
inc
pop
sbb
add
pusha
add
out
sub
mov
and
cmpsb
loopne
cmp
icebp
insl
aas
xor
sbb
mov
mov
or
inc
rclb
bnd
rcr
imull
inc
lds
iret
sub
js
dec
xchg
and
popa
mov
cltd
inc
out
push
xchg
and
call
and
scas
loopne
sub
add
andb
iret
push
jb
jb
pop
push
pop
popa
ds
addb
and
xchg
lods
add
lret
sub
fisttps
addb
dec
cmp
pop
dec
ss
push
addb
xor
mov
out
and
movsl
in
mull
ret
pusha
push
rclb
adc
push
int3
jb
popf
aad
add
fdivrs
cltd
and
outsb
xor
adc
pop
test
out
loope
inc
loopne
inc
inc
sti
jge
mov
dec
and
sub
mov
clc
xchg
jb
mov
mov
testl
jbe
shlb
dec
xor
cmp
lods
repnz
and
lods
mov
and
dec
daa
push
add
sbb
in
out
pop
push
mov
push
pop
pop
stos
pusha
subb
pop
dec
hlt
sahf
xor
cmpl
xchg
lods
push
cmp
pop
or
popf
or
pop
xchg
jb
and
push
andb
jl
sahf
loopne
adc
les
and
inc
xchg
loopne
loope
jmp
jmp
repnz
mov
out
push
js
les
js
rcl
jp
mov
mov
in
test
mov
dec
cmc
mov
dec
jecxz
push
negb
pop
push
ror
pop
push
pop
in
push
adc
test
sub
pusha
imul
dec
in
cmp
cmpsl
cmc
fnsetpm(287
mov
repz
pusha
add
and
clc
test
sahf
lea
pop
cli
aam
addb
add
bnd
icebp
xchg
call
jne
and
pusha
add
and
jle
or
push
sbb
addb
pushf
mov
cmpb
cmp
sar
lcall
loopne
stos
and
dec
ret
mov
mov
and
adc
nop
xor
sbb
mov
add
cmp
lods
mov
bound
mov
into
pop
rcr
inc
pusha
popa
test
xchg
negb
pop
mov
add
or
inc
jmp
test
and
mov
sub
shrb
xor
out
cmp
xchg
push
jb
add
fadds
icebp
loop
xlat
adc
nop
dec
mov
jo
xor
push
sbb
jo
outsl
aas
dec
pop
fisttpll
and
push
xor
gs
jo
rol
cld
pop
test
cmp
mov
pop
and
dec
aam
loopne
sbb
pusha
inc
mov
xchg
xchg
xchg
xchg
and
addb
and
xchg
dec
nop
or
inc
add
push
jo
rolb
and
lcall
mov
shrb
xor
inc
scas
rolb
je
in
gs
mov
fld
push
ja
jg
mov
sti
mov
cmpsl
or
mov
add
pop
push
aaa
inc
jno
fiaddl
sbb
aad
add
loopne
pop
push
shlw
mov
sahf
ljmp
rcl
ja
rcr
and
and
and
int
loopne
mov
addb
dec
inc
dec
ret
mov
mov
add
add
shlb
pusha
mov
aad
adc
ds
mov
sarb
je
adc
inc
dec
sub
and
shrb
neg
jle
sar
push
or
add
mov
adc
sbb
aam
imul
and
lds
xor
lods
mov
inc
ficompl
sarb
or
mov
movb
add
nop
mov
rolb
add
xchg
cmpsl
movsb
loopne
testl
xor
adc
lods
mov
pusha
and
aam
push
addb
sub
bound
stc
and
loopne
add
mov
pop
addl
stos
rolb
xor
das
sub
movsb
addb
sbbl
rolb
xlat
movsl
adc
pop
mov
mov
mov
push
addb
dec
add
pusha
dec
in
mov
jbe
mov
push
pusha
inc
jmp
mov
adc
mov
or
shlb
or
add
dec
stc
in
jg
pop
fnstcw
pop
jns
imul
jns
inc
aam
xlat
test
pusha
jecxz
pop
xchg
inc
in
add
loop
pusha
loopne
sub
aam
nop
shlb
scas
lcall
je
add
jp
xchg
mov
inc
loopne
test
pusha
std
mov
and
xchg
ret
push
leave
insl
out
dec
mov
in
and
xor
pop
sbb
and
add
pop
call
cmp
add
sbb
lock
scas
xchg
mov
out
sub
mov
outsb
adc
rorl
sbb
dec
insl
push
mov
xchg
cmc
adc
xor
lds
mov
and
lock
popa
push
ss
imul
and
or
rcl
dec
arpl
nop
mov
add
cltd
adc
dec
cli
pop
leave
mov
out
lea
and
shlb
inc
dec
xchg
repz
gs
xchg
outsb
repz
enter
mov
inc
jo
push
or
add
xor
cmp
nop
jle
fistps
adc
mov
pusha
or
vpaddd
push
push
divl
nop
ret
insb
add
rolb
xchg
popa
xor
cld
lock
mov
and
adc
or
mov
and
lret
ret
inc
push
ss
sbb
rol
inc
add
frstor
xchg
jne
mov
or
inc
vfrczps
jmp
sbb
xchg
jl
ss
cmc
mov
ret
mov
cmc
leave
jns
or
ss
into
sarb
or
xchg
inc
or
and
add
mov
fwait
jl
adc
shlb
fildll
test
add
push
mov
or
adc
out
loope
insb
mov
cmc
cltd
mov
jp
scas
shlb
pop
xor
dec
inc
lret
fidivrl
pop
cli
cmp
push
pop
mov
and
mov
or
rol
push
lahf
fwait
xorl
lods
add
mov
pop
mov
loopne
mov
in
imull
jmp
dec
jb,pt
ret
mov
mov
xchg
mov
bound
dec
pop
inc
shlb
mov
cltd
sub
and
arpl
test
inc
sbb
loopne
inc
add
cld
mov
mov
xor
fbld
insl
dec
in
push
cmp
push
mov
pop
add
add
loopne
stc
xchg
in
mov
mov
cmpb
mov
imul
cwtl
inc
cmp
pop
shrb
add
inc
jp
ja
flds
repnz
sbb
push
lock
cmp
mov
inc
pop
test
inc
cmpsb
add
xor
mov
lods
jnp
mov
shlb
ret
mov
pop
xlat
dec
jecxz
mov
es
sbb
ds
sbb
lds
cmpsl
subl
stos
jne
inc
and
cli
loopne
sbb
mov
pop
and
in
lahf
je
jnp
call
rcll
std
shl
dec
mov
test
mov
mov
jl
scas
push
pusha
loopne
jae
or
jecxz
les
outsb
dec
jp
andb
iret
data16
sub
lods
and
fsubrp
adc
inc
xchg
lods
mov
adc
cltd
into
push
in
pusha
cmpb
in
loopne
aaa
or
mov
and
rolb
mov
inc
inc
ret
push
loopne
ja
inc
loopne
loopne
stos
inc
sub
subb
mov
xchg
sub
or
mov
ljmp
inc
mov
sbb
sbb
lods
fucomip
daa
roll
push
inc
sti
jle
outsl
cld
outsb
pushf
in
pop
add
inc
cmpsb
addb
loop
inc
mov
jb
dec
iret
test
xor
jno
int
add
pusha
add
pop
and
rcll
mov
bound
rolb
lods
or
adc
inc
mov
xchg
mov
fsubl
mov
and
shrb
andl
xchg
sbb
aas
push
cmpsl
rcll
inc
and
das
cmp
shrl
add
mov
inc
ss
stos
pusha
loopne
sar
mov
add
mov
inc
mov
loopne
and
andb
sub
fwait
or
shrb
mov
mov
dec
jge
sbb
int3
enter
pusha
push
addb
sub
lret
pop
and
mov
push
inc
rclb
loopne
lret
pushf
jecxz
pop
cmpsb
mov
add
mov
pusha
and
xchg
add
add
fwait
sbb
jae
adc
mov
pop
xor
and
fwait
outsl
aaa
xchg
adc
and
loopne
ja
stos
xchg
loopne
add
cmc
dec
fistpl
inc
shlb
dec
push
sbb
lea
mov
add
test
xchg
insl
xchg
shl
int
fwait
jmp
out
xor
lret
shl
and
repz
dec
loop
addb
inc
cmp
int
lods
mov
mov
adc
int3
test
push
push
cmp
push
addb
mov
hlt
dec
mov
adcb
pusha
inc
lock
mov
outsb
push
inc
dec
jl
in
fcoms
mov
and
cwtl
jns
shlb
lods
mov
stos
clc
mov
rolb
lods
dec
mov
inc
mov
adc
mov
imul
pusha
sub
and
rclb
rcrb
sbb
push
inc
insb
imul
fcoml
adc
adc
and
and
sahf
xchg
daa
imul
aad
lahf
jg
insb
fisubrl
xchg
mov
cmp
fs
les
gs
push
inc
mov
jmp
mov
mov
mov
xchg
lret
lods
and
sbb
add
pop
pusha
jbe
and
cltd
push
inc
icebp
jecxz
inc
inc
stos
loopne
push
outsb
mov
pop
mov
loopne
fnsave
cmp
xor
daa
ds
inc
sti
push
addb
sbb
add
and
cmp
ds
pop
loope
pusha
pusha
pop
mov
mov
loopne
testl
mov
adc
lahf
out
das
push
lret
mov
add
jmp
lret
cmpsb
mov
lods
rcrl
addr16
cmpsl
negb
cld
rcrb
movsl
mov
test
inc
inc
popf
fidivl
loopne
je
out
mov
jmpw
fwait
movsl
sti
rclb
es
push
inc
pusha
addr16
pop
outsb
test
ret
cs
movsl
sub
orb
loopne
or
pop
pop
cmp
cmp
gs
les
loopne
int3
lods
inc
bound
adc
mov
fisttpll
add
ljmp
mov
in
pop
hlt
das
cmpl
sti
test
xorb
lcall
in
jno
aaa
sub
lods
add
loopne
pop
or
mov
jb
mov
xorb
std
sub
push
shlb
jl
mov
addb
and
mov
and
add
rclb
in
mov
in
push
push
add
jg
testb
add
or
and
in
add
cmpsb
inc
shl
add
mov
aad
mov
or
sub
mov
sarb
cmc
xchg
sbb
pop
mov
pusha
sti
sti
insb
mov
cmpb
add
mov
inc
scas
mov
cmp
loopne
sub
sahf
adc
mov
inc
rorb
jb
inc
pop
sbb
adc
dec
mov
xchg
xor
add
push
and
add
and
jo
pop
aad
xchg
mov
rcrb
fs
in
mov
cmp
xlat
adc
pusha
inc
inc
xor
dec
repz
jp
inc
and
jno
sbb
loopne
sti
pop
cmpsl
add
cltd
cmpsb
mov
cli
dec
mov
dec
jmp
nop
out
loope
mov
pusha
add
sbb
pop
mov
loopne
add
sbbb
out
pop
daa
mov
rorb
stos
fs
shlb
vaddps
and
dec
int
push
imul
push
popf
test
test
pop
add
out
adc
cmpb
and
add
inc
jp
add
xlat
xchg
add
jne
sbb
stos
addb
pop
and
insb
fidivrl
push
lock
inc
in
out
push
pop
andb
cmc
pop
in
gs
xlat
imul
add
cmp
int3
into
adc
fimull
andb
iret
ds
mov
pop
ja
andb
rolb
pusha
add
cmpsb
addb
addb
pusha
and
orl
jg
xchg
ret
fnstcw
scas
icebp
repnz
les
loopne
out
or
test
in
add
mov
loope
xchg
push
sub
lods
add
or
addb
addb
loopne
int
add
pop
xchg
sub
adc
fcom
push
lods
stc
dec
or
adc
mov
dec
aam
int3
mov
imul
pop
push
nop
stos
pusha
pusha
cmp
mov
or
addb
addb
add
mov
imul
in
js
rolb
ljmp
cmpsb
mov
pop
sbb
jecxz
mov
push
push
ficoms
add
sahf
and
imul
clc
js
or
add
daa
in
faddp
sbb
add
adc
or
and
or
mov
fwait
sub
add
int
inc
loopne
lahf
mov
cmp
add
xor
pop
jg
jae
fs
shlb
mov
lcall
mov
mov
jge
add
push
shll
insb
loop
leave
jns
cmp
lea
shlb
inc
mov
test
add
xchg
xlat
inc
sub
loopne
jmp
lds
fmulp
pop
adc
loopne
addb
js
push
int3
mov
outsb
xor
shlb
and
pusha
lock
cli
idivb
dec
cmp
and
lock
loope
and
int3
adc
xorps
cmc
xor
adc
fbld
or
cld
js
lock
push
pushw
jecxz
cmp
push
push
inc
subb
loopne
adc
cmp
cmp
push
loopne
adc
pushf
lea
rclb
subl
in
cwtl
jb
jnp
sbb
jge
addb
inc
pop
lahf
push
pop
add
pop
pushf
and
rol
sbb
ret
push
sub
gs
aaa
mov
fidivl
push
mov
or
and
mov
test
and
mov
mov
jnp
xchg
leave
scas
addb
mov
sbb
push
jns
sub
cld
out
insl
sub
ficoms
mov
loopne
mov
mov
and
add
dec
adc
mov
push
addb
and
push
and
xor
push
scas
add
aad
cmp
loopne
mov
mov
jmp
lahf
repnz
cmc
cmpl
fadd
mov
push
cmp
jg
stc
mov
mov
loopne
cld
scas
mov
mov
xchg
arpl
aaa
mov
and
and
add
or
pop
or
cltd
push
imul
xlat
in
iret
cs
loopne
fmulp
add
loopne
dec
pop
test
cmpb
push
push
in
push
scas
fildll
scas
adc
inc
mov
dec
call
fsubl
inc
and
out
std
xor
rol
repnz
popf
adc
adc
popf
xor
xchg
pushf
pop
mov
jns
dec
ljmp
pusha
mov
aaa
cmc
sbb
jl
mov
loopne
repz
jnp
inc
ljmp
push
xchg
test
out
push
mov
inc
xchg
sbb
pop
xor
flds
shlb
inc
ja
dec
cmpsl
lcall
test
and
pushf
mov
inc
andb
test
inc
or
pop
add
sbb
addb
mov
mov
xor
and
mov
inc
xchg
mov
add
cmp
stc
int
gs
xchg
aad
dec
in
jno
or
add
leave
mov
xor
mov
movl
lods
loopne
loopne
and
pushf
mov
mov
mov
add
pop
dec
lods
add
xor
push
mov
xor
pop
add
addb
adc
insb
dec
pop
pop
add
and
int3
and
mov
sti
jb
out
adc
rolb
rorb
imul
pusha
or
add
gs
add
shl
mov
mov
nop
pop
repz
ss
and
add
iret
js
jl
jge
repz
xchg
pop
stos
loopne
xchg
dec
and
and
jns
shlb
jg
inc
cli
inc
sbb
sbb
lcall
xor
mov
shlb
ret
and
mov
xor
mov
sbb
push
lods
push
jb
xchg
daa
addb
nop
fwait
mov
sbbb
xchg
rclb
js
pusha
testb
add
lcall
cmp
mov
lods
inc
andb
mov
and
jg
add
bound
mov
shlb
mov
rclb
mov
loopne
scas
adc
push
cmp
mov
jp
dec
in
pop
scas
pop
cwtl
pop
xchg
test
in
imul
push
ret
pop
push
ret
or
mov
aaa
push
jb
sbb
and
loopne
insb
dec
xchg
cmp
pusha
add
in
pushf
idivl
addr16
movsb
pusha
and
mov
mov
add
loop
jl
fiadds
loopne
add
push
nop
sbb
aam
dec
inc
sub
leave
lea
add
adc
bound
add
adc
cmpsl
aaa
in
sarb
jp
cwtl
inc
mov
sub
repz
sbbb
aam
mov
test
mov
adc
add
inc
aam
enter
push
popa
aam
jno
add
fisubs
hlt
repz
xor
xchg
shrd
loop
sbb
and
pop
mov
test
jg
loopne
les
call
outsb
add
sbb
xor
push
test
dec
mov
cmp
bound
rolb
mov
aad
and
sarb
ss
int3
push
into
cli
or
pusha
push
pop
push
xchg
or
sub
sbb
loopne
mov
das
or
fistps
pop
pop
mov
and
or
inc
mov
xchg
pop
mov
or
cmp
and
add
sub
shl
jmp
push
lret
dec
mov
rolb
add
add
lods
inc
loopne
dec
enter
pop
add
mov
shlb
xlat
jne
jb
sub
scas
inc
mov
mov
jno
rolb
pop
dec
sub
mov
xchg
push
mov
pop
xchg
lea
testb
add
movl
and
pop
repnz
into
cmc
test
orb
and
rolb
mov
adc
and
xchg
das
and
sbb
loopne
out
add
cmp
inc
xor
mov
inc
mov
inc
sbbb
mov
mov
jg
enter
aaa
stos
xchg
jno
cmp
pop
inc
shlb
ret
and
adc
push
mov
add
shr
mov
and
push
add
enter
and
popf
fcmovnbe
mov
fwait
sbb
in
jmp
jg
dec
andb
xor
inc
adc
adc
mov
movsl
push
jo
mov
sub
inc
dec
insl
mov
mov
jp
pop
fiaddl
inc
shlb
rolb
lcall
lea
addb
push
lods
jmp
push
or
and
adc
jbe
add
fldenv
rolb
mov
popf
push
adc
pop
mov
and
test
mov
jae
loopne
shll
loopne
loopne
cmc
dec
xlat
dec
push
push
mov
insb
push
sbb
sbb
je
leave
or
jmp
mov
pop
repnz
popf
mov
push
mov
push
loopne
pushf
sub
jns
dec
ja
xchg
and
rorb
xchg
loopne
adc
outsb
inc
sbb
push
or
fsubrl
aaa
dec
adc
add
xchg
cs
mov
ret
arpl
test
add
add
test
and
test
cmc
repz
pushf
sbb
pop
mov
sbb
and
pusha
push
mov
sub
inc
lds
out
adc
pop
addb
icebp
lea
fisubrs
movsb
pusha
and
xor
imul
out
ds
mov
out
sub
in
pop
adc
std
in
popf
pushf
xchg
test
or
pusha
stos
push
iret
jae
jmp
imul
adc
pop
dec
inc
xchg
out
test
inc
sbb
adc
push
cli
je
sbb
leave
and
xchg
das
mov
push
loopne
cld
mov
xor
loopne
ds
pusha
shlb
shrl
inc
and
sub
out
add
cmp
jmp
jae
std
and
or
inc
push
jl
mov
cmpsb
addb
in
fwait
add
sbbb
push
adc
repz
jmp
pop
cli
mov
fsubrl
xor
sbb
add
mov
std
mov
and
adc
pusha
push
push
aaa
stos
loopne
sti
xchg
cli
add
inc
scas
add
push
jl
popa
bnd
ret
mov
push
shll
and
jmp
cmp
int3
push
and
icebp
mov
xchg
out
sbb
lret
push
sarb
rcrl
fidivrl
ret
pop
inc
out
mov
mov
pusha
fldcw
stos
loopne
and
into
ja
cmpsl
out
out
push
jg
sub
xchg
adc
in
std
cmpsl
sub
add
sub
shlb
fcoms
xlat
divb
mov
sbb
inc
and
ss
addb
mov
mov
add
and
andb
dec
jo
sub
imul
outsb
sbb
test
subb
add
pop
dec
jno
scas
push
pusha
and
pusha
inc
cld
mov
add
mov
rcr
repnz
out
jns
test
cltd
nop
cmp
push
fdivrp
push
and
add
add
rcrb
outsb
inc
mov
sbb
mov
lock
dec
dec
xor
fidivs
jns
leave
mov
mov
mov
mov
jb
xor
cmp
cli
push
and
lret
xchg
out
test
loopne
inc
fisttps
xor
jle
lret
xchg
sbb
push
test
and
rolb
xchg
inc
xlat
fnstsw
mov
cs
test
inc
push
push
sbb
mov
and
leave
andb
pushf
addb
jecxz
insl
mov
ljmp
pusha
add
ljmp
adc
xor
cmp
pusha
fidivl
lahf
mov
mov
xlat
nop
pop
inc
insb
popf
pushw
icebp
sbb
rcrl
test
call
and
xchg
or
jbe
cld
repz
add
inc
cltd
cli
push
testl
testl
mov
mov
daa
jns
and
or
add
addb
mov
pop
push
sahf
mov
mov
rorl
orl
addb
mov
xchg
jbe
outsb
jp
stos
mov
sbb
pushf
xchg
lods
add
fs
aaa
dec
loope
sub
mov
shrl
shlb
mov
rorb
inc
push
push
add
adc
xchg
push
mov
andb
fidivl
ja
pusha
rclb
aas
leave
sahf
inc
push
insl
and
in
rcll
or
loopne
jle
out
add
push
push
in
loopne
mov
mov
fst
inc
mov
fwait
data16
mov
orb
xor
adc
mov
outsl
push
andb
out
and
pop
xchg
inc
and
mov
loopne
pop
cmpsb
loopne
mov
jl
fildl
pusha
pop
int
mov
sbb
int3
mov
scas
rcrl
and
ret
jns
mov
mov
lahf
push
add
xor
adc
addb
and
lods
pusha
ror
pusha
add
dec
ficompl
sub
or
mov
mov
sub
mov
lock
daa
dec
test
dec
or
xchg
or
ror
outsl
lcall
mov
jb
cmp
and
pop
jnp
push
xor
sti
rolb
inc
xor
icebp
je
enter
adc
insl
daa
sbb
jnp
push
std
pop
leave
in
adc
test
int
jns
push
or
add
push
mov
xchg
mov
push
xor
in
outsb
repz
mov
sub
daa
xchg
xchg
push
lock
xchg
add
imul
mov
inc
popf
stos
sahf
stc
ja
lret
js
xchg
enter
sbb
and
cld
popa
aam
cmpl
loopne
inc
mov
ljmp
lcall
add
add
jnp
loop
jno
sti
add
and
mov
and
lahf
outsl
movsl
push
pop
mov
adc
mov
imul
lds
rol
cli
push
mov
xor
and
mov
outsl
es
and
loopne
aaa
sub
mov
add
cmp
dec
stos
mov
lahf
jg
shlb
sbb
cmp
add
rclb
sbb
repz
cmp
insb
pop
fnstsw
jmp
flds
pusha
shlb
pop
and
and
enter
nop
mov
dec
push
jae
loopne
push
icebp
mov
fs
nop
ja
iret
movsb
add
mov
icebp
hlt
les
aad
shrb
loopne
out
pop
pusha
cli
mov
cmp
ret
and
mov
and
ficoms
mov
inc
popf
adc
xor
and
mov
cmp
and
aaa
scas
pusha
mov
cwtl
in
stos
sarl
add
loopne
mov
test
pusha
and
mov
and
shlb
addb
push
pop
jl
jo
jp
daa
and
add
jmp
andb
test
add
mov
shrb
push
or
add
xchg
insb
in
loopne
mov
dec
andb
xchg
pop
fildl
push
sub
mov
and
mov
repz
mov
jne
stos
rclb
pusha
sbbb
sbb
test
stos
inc
add
and
rorb
jo
outsb
jns
pop
inc
fcoms
int
sti
cmpsb
andb
cmp
pop
xchg
fcmovnbe
pop
fstps
mov
sbb
andb
pusha
add
sbb
sub
sarb
sbb
mov
mov
mov
cli
dec
mov
pusha
mov
inc
pop
xor
arpl
xor
test
shrb
jecxz
jecxz
jg
xor
outsl
cmpl
cmp
sub
loopne
aas
ss
out
sub
mov
dec
loopne
pop
xchg
push
leave
dec
loopne
nop
jg
push
repz
cmpsl
mov
jecxz
mov
push
loopne
call
add
mov
mov
js
cmc
fsubs
addb
mov
add
andb
sub
pusha
add
sbb
cmp
cmpsb
pusha
and
add
jno
aas
addb
inc
nopl
testl
xor
push
jo
sub
adcb
fscale
dec
loopne,pn
add
imul
adc
loopne
in
jo
popf
aam
mov
js
out
ret
insb
mov
or
addb
into
mov
inc
aaa
dec
lea
mov
in
mov
push
lret
adc
sbb
test
loopne
mov
mov
mov
scas
xlat
jmp
jae
xchg
ret
sub
and
jns
gs
adc
mov
jae
arpl
mov
and
arpl
arpl
add
shlb
sbb
mov
pusha
outsl
dec
push
mov
sahf
jg
pop
rcll
shlb
movsl
mov
jns
and
cmpb
and
iret
inc
sahf
repz
sub
subb
outsb
mov
imul
cmp
imul
mov
push
aaa
cmc
adc
sar
lods
shl
cmp
out
mov
in
lods
mov
rolb
or
and
icebp
fsubl
loopne
sub
inc
push
jne
gs
push
stos
fdivrp
lret
mov
loopne
scas
pop
and
fdivrl
xchg
stos
pop
and
push
sarl
cmp
lea
rolb
mov
push
dec
mov
add
push
je
add
mov
sub
subb
inc
clc
leave
mov
jne
sub
cmp
sti
ss
icebp
and
rcr
xor
rcr
inc
mov
mov
in
push
mov
inc
insl
stos
inc
mov
loopne
test
and
shll
cmpsb
loopne
fbld
xchg
mov
xchg
inc
cli
cli
adc
xlat
jle
lahf
add
xchg
cli
pop
cmp
pop
and
int
or
je
and
in
mov
rolb
pusha
ja
imul
data16
cwtl
lods
fnstsw
pusha
pusha
xlat
mov
test
and
call
sti
movsb
mov
ficompl
fmul
ret
ficoml
loopne
mov
rol
addr16
clc
fstpt
add
mov
cmp
loopne
jmp
adc
inc
and
pop
jno
pushf
aas
cmc
xchg
xchg
mov
add
mov
cmp
or
and
int
pusha
pusha
xchg
imul
mov
jl
or
mov
pushl
repz
stos
pusha
inc
icebp
add
loopne
jnp
shl
dec
jo
rolb
jnp
loopne
add
shl
add
sub
pusha
xchg
and
lods
sti
mov
fcmovnbe
pusha
jmp
shlb
pusha
adc
pop
xlat
cmp
test
fstl
std
les
cmp
int
cmp
aad
sahf
mov
in
pop
xchg
rolb
jl
loopne
jmp
and
clc
dec
and
addb
jns
mov
or
loopne
aaa
dec
dec
cmp
lods
mov
ret
add
and
sub
inc
hlt
insb
add
sub
rorb
mov
lahf
lock
xchg
pusha
mov
lahf
out
movsl
xlat
je
inc
mov
inc
loopne
test
xlat
jg
mov
stc
in
scas
fiadds
and
shrl
mov
mov
sbb
xor
and
add
push
outsl
popf
daa
sub
popaw
mov
mov
lods
and
mov
pusha
mov
push
dec
movl
inc
and
xchg
mov
insl
jb
or
lock
adc
and
movsl
sub
and
and
int
push
shr
push
sbb
mov
jne
or
and
push
mov
push
pop
mov
outsb
mov
out
call
lahf
sbb
fsubs
xor
andb
cmp
pushw
addb
sbb
push
add
lods
mov
stos
xlat
push
sub
mov
mov
and
or
xchg
aaa
and
inc
ss
pop
and
push
imul
jns
repz
adc
ret
gs
mov
loopne
sub
pusha
inc
mov
mov
mull
inc
gs
lret
incb
fistpll
dec
xchg
push
and
ret
stos
and
shlb
jno
arpl
push
repnz
negl
mov
shlb
in
fmuls
jns
insb
jmp
and
mov
mov
popf
loope
ret
jo
sub
and
in
ret
loop
shll
jl
test
jmp
adc
mov
pop
adc
and
popa
cltd
in
jmp
sbb
mov
sar
in
fidivl
xor
inc
sahf
sub
inc
push
sub
and
jge
movb
addb
xchg
imul
sbb
xchg
or
stos
arpl
push
cmp
aam
cmp
mov
xchg
gs
daa
cld
int3
dec
mov
push
arpl
add
loopne
shll
pop
sbb
rclb
scas
and
add
out
sub
and
lods
loopne
out
insl
aam
add
dec
xchg
aaa
aad
sub
loopne
dec
cltd
jnp
push
loopne
mov
and
inc
and
daa
cmpsb
mov
dec
and
adc
sti
insl
xchg
fsubrl
shlb
andb
roll
jge
leave
mov
push
shlb
loopne
jp
loop
pop
adc
stos
fmuls
sbb
jl
les
loopne
inc
or
inc
push
lret
push
sub
pop
dec
mov
and
inc
pop
jb
mov
dec
lds
and
xorb
ret
mov
sub
inc
mov
add
lcall
pop
cmp
xor
xchg
repz
sti
lcall
in
sbb
scas
xor
push
mov
sub
mov
aam
movsb
pusha
add
cs
mov
cmp
shll
inc
aas
popf
rcr
test
enter
ret
push
in
push
stos
andb
sbb
rolb
inc
es
inc
lret
aad
nop
nop
sahf
sahf
insl
dec
or
cmpsb
rolb
inc
add
add
or
mov
inc
jo
push
inc
inc
and
loopne
sub
negl
pop
add
stos
lcall
test
pusha
dec
leave
stos
loopne
cltd
cmp
movsl
insl
fistpll
popa
sub
fwait
dec
gs
out
inc
mov
shll
dec
dec
cmc
and
in
mov
mov
outsb
outsb
mov
test
in
jae
aaa
mov
adc
lahf
mov
das
addr16
ljmp
loope
inc
out
adc
pop
jmp
mov
push
push
mul
stc
in
stos
pusha
shrb
out
ja
push
ret
scas
inc
and
je
cld
insl
jns
repnz
add
and
loopne
mov
sub
divb
adc
lds
and
cld
cmp
or
inc
jne
shrl
and
and
pusha
and
inc
andb
dec
xchg
pop
das
loop
mov
adc
add
push
lea
mov
lahf
sbb
ret
mov
icebp
add
adc
loop
test
inc
mov
cmp
inc
orb
dec
push
pop
push
fcmovb
testb
jge
sahf
fwait
xor
pusha
jbe
andb
add
add
mov
sbb
or
mov
or
movsb
add
lds
or
and
add
pusha
aaa
lods
scas
incl
adcb
mov
jnp
pop
loopne
jp
imul
fimull
or
pusha
xchg
push
push
push
pop
add
sub
rcrb
or
ljmp
inc
out
adc
mov
mov
loopne
pop
add
jl
mov
subl
mov
xchg
mov
loop
popf
dec
push
fwait
sub
dec
pop
cld
jnp
inc
orb
clc
rorl
sbb
add
jnp
push
inc
loopne
std
mov
inc
sbb
and
add
dec
in
jle
test
hlt
adc
out
inc
cmp
bnd
and
test
and
add
adc
fcoml
in
stos
and
and
xor
jp
adc
add
add
stc
jp
rol
jp
sub
sbb
rolb
add
and
test
push
call
sub
stos
add
sub
loopne
je
nop
xor
arpl
inc
mov
cld
inc
sbbl
mov
roll
mov
lods
bound
add
jne
or
cmp
sub
loopne
out
and
mov
pop
test
and
loopne
repz
addr16
dec
test
jl
loopne
addr16
insb
jne
pop
lock
imul
jl
mov
cmc
inc
icebp
cwtl
ss
mov
nop
faddl
repnz
jae
jno
mov
outsb
hlt
setbe
sub
mov
push
shlb
das
sub
and
xchg
jno
xor
rorb
loopne
and
loopne
loop
andb
dec
lock
cltd
mov
loopne
jge
loopne
and
xor
je
adc
sbb
pop
call
xchg
adc
je
cmc
aas
mov
rol
xchg
lock
insb
or
xor
imul
dec
mov
and
mov
inc
and
mov
int
test
xor
in
addl
mov
jg
xor
in
dec
push
mov
xor
test
popa
push
shlb
loopne
xchg
insb
or
sub
subb
shlb
shl
sbb
rolb
add
and
jnp
mov
lods
add
jno
sbb
pusha
loopne
add
pop
cmpsb
rolb
inc
std
leave
jns
loop
daa
scas
outsb
pop
jne
or
mov
lods
int
inc
add
pusha
add
jmp
or
mov
cwtl
mov
in
sbb
add
stos
add
loopne
dec
into
addr16
add
and
mov
and
lcall
xor
dec
mov
cmp
mov
dec
push
mov
pushf
dec
ret
adc
mov
mov
fsubr
add
ror
jp
lock
inc
dec
scas
hlt
stc
push
pop
push
aam
es
pusha
inc
mov
xchg
outsl
xor
out
pop
in
stos
cli
ljmp
push
les
outsl
jge
fstpt
cmc
adc
or
inc
pusha
pop
sub
into
xchg
mov
inc
inc
xor
lock
rclb
mov
xchg
and
shl
sahf
arpl
testb
inc
cmpb
add
sti
pop
push
or
outsl
xchg
inc
mov
fsubs
mov
pusha
xchg
xor
icebp
inc
ljmp
dec
xchg
shlb
sub
pop
sar
inc
and
add
mov
adc
insb
xchg
adc
aad
add
xchg
sbb
stos
jle
sub
testb
sarb
add
dec
cmpsl
xor
add
and
push
push
mov
and
add
dec
xchg
and
push
in
mov
test
pusha
repz
clc
inc
sbb
dec
inc
pop
mov
imul
jne
and
mov
stos
inc
and
iret
rolb
jns
dec
dec
pusha
push
scas
jle
and
out
arpl
xchg
xchg
or
or
rclb
mov
push
pusha
add
insb
mov
inc
mov
adc
fdivrl
notb
mov
in
dec
popf
push
and
mov
mov
adc
arpl
fldt
imul
sub
add
rolb
je
push
mov
add
pop
mov
aaa
out
add
arpl
addb
call
outsl
out
mov
pusha
loopne
inc
aaa
adc
test
cmp
add
cmp
mov
lds
jne
je
loopne
pusha
iret
sbb
das
out
pop
or
xor
xor
jmp
lods
pusha
mov
sub
lods
andb
inc
adc
add
jnp
fcoms
cmp
outsl
adc
xchg
andl
andb
add
mov
loope
mov
and
cmp
inc
cmp
lock
push
repnz
lods
and
jg
pop
and
inc
in
mov
das
ss
fs
pusha
xor
popf
int3
or
shlb
pop
lahf
popf
jmp
adc
mov
mov
mov
mov
mov
inc
mov
jb
dec
cmp
push
mov
mov
cmp
xchg
ret
mov
xor
je
or
and
mov
xor
das
shlb
scas
insb
push
addl
pusha
inc
mov
pusha
mov
mov
jp
xchg
loope
push
fidivs
cmpsb
andb
pusha
cli
push
mov
sti
sbb
or
and
andb
and
adc
xchg
shrb
movsb
inc
and
loopne
pusha
rolb
leave
add
subb
cmp
cmp
xchg
lds
and
and
push
inc
add
mov
xchg
cmpsb
inc
addb
fbld
lcall
test
pusha
or
mov
push
inc
pop
adc
pop
xchg
je
mov
pusha
loopne
jbe
bound
sbb
xor
mov
je
xchg
and
rolb
rclb
pop
pushf
push
enter
adc
push
scas
and
push
cmp
cmp
adc
je
inc
inc
arpl
cmp
cmp
aas
xchg
inc
cmpsb
mov
jl
inc
pop
adc
addb
pusha
pusha
jae
or
fnstsw
mov
dec
sub
and
xchg
stos
andb
and
xor
ss
or
cltd
ret
xorb
les
lods
rcll
jg
ret
leave
pusha
push
fisttpll
mov
xor
ljmp
call
cld
dec
shrb
pop
hlt
jbe
ret
loop
xchg
pusha
push
rolb
loopne
inc
mull
mov
mov
add
call
loopne
aam
loopne
idivl
loopne
nop
mov
std
ret
xchg
outsb
adcl
cld
scas
rol
sub
in
daa
fimull
fcompl
lods
loopne
lret
hlt
mov
loopne
mov
loopne
call
jno
shl
or
shlb
mov
add
andb
test
add
aam
repnz
add
cmp
cmpsw
mov
in
or
cmp
jo
xlat
mov
pop
movsb
mov
test
and
mov
pusha
addr16
pusha
mov
fnstenv
ja
xchg
or
pusha
mov
and
pushf
xor
les
pop
pop
and
add
call
ret
xchg
and
loopne
dec
mov
pusha
mov
mov
pop
cli
arpl
mov
jb
shlb
leave
or
pusha
and
lods
or
push
rolb
add
rcll
or
orl
jb
imul
push
adc
pop
xchg
loopne
sbb
int
add
sub
rcrl
insl
fsubrs
sub
mov
cwtl
lock
cs
sbb
push
and
pop
dec
mov
lock
dec
mov
push
fidivrs
addb
pusha
loopne
fwait
mov
mov
popa
fdivr
or
sub
pop
imul
js
pop
idiv
out
mov
or
rorb
mov
loopne
pop
sub
lret
fsubr
cmc
mov
add
push
les
add
mov
xlat
dec
movsl
repz
outsl
mov
data16
mov
mov
add
dec
inc
jb
stos
aam
mov
loopne
test
inc
xchg
xor
push
outsb
ja
in
das
leave
jae,pt
pusha
scas
popa
loope
sub
in
ja
cli
nop
xor
push
in
add
xorb
mov
pop
stos
mov
mov
jg
pop
into
lret
mov
sbb
xchg
push
shl
ss
int
cmc
xchg
fisttpll
inc
jbe
xchg
test
or
loopne
ret
js
or
add
test
cmp
daa
xchg
adc
out
pop
mov
pusha
and
jo
pusha
pusha
aaa
jle
pop
add
push
in
or
pusha
mov
insb
test
pusha
jmp
cld
aad
jl
mov
fwait
addr16
imul
les
addb
jmp
subl
xor
dec
sbb
cltd
dec
ljmp
inc
sub
pusha
clc
int
xor
fisubrl
push
sub
orb
add
xchg
push
in
fcompl
outsb
add
inc
mov
xor
push
mov
xchg
jl
jne
imul
or
addb
and
sti
andb
push
fdivrs
xchg
aaa
jp
xchg
xor
jecxz
and
scas
and
jg
and
faddl
cmp
mov
cmp
mov
and
mov
mov
shlb
push
fs
lret
mov
rclb
out
xor
push
add
loopne
fucom
lret
sub
cwtl
mov
aad
rcrb
inc
shlb
sarb
cmp
aas
sub
add
cmpsb
mov
xor
sbb
push
aaa
into
arpl
ficomps
repnz
or
pusha
fdivrl
cwtl
xchg
pusha
or
lds
lret
dec
cmp
dec
push
and
cmpsl
jl
shl
insl
pop
dec
sub
shlb
pop
mov
pusha
pusha
mov
jns
das
lret
imull
insl
push
xor
push
orl
daa
push
pop
jg
jle
inc
mov
mov
pusha
shrb
sbbb
cmp
loop
xchg
mov
aaa
leave
jp
jae
and
push
mov
mov
jp
xchg
mov
pop
arpl
addr16
inc
dec
test
andb
int3
lret
push
loopne
push
and
add
xchg
clc
out
sbb
mov
pop
addb
add
sbb
aas
loope
sub
mov
ret
pop
lret
mov
push
inc
xor
cld
mov
sbb
pop
nop
mov
bound
add
andb
adc
add
push
aam
lods
pusha
add
push
adc
mov
mov
jnp
adc
pop
repz
mov
mov
pop
xchg
loop
add
add
push
rolb
pusha
sbb
xorl
sub
clc
stos
pusha
pusha
test
add
roll
daa
jp
adc
dec
jo
dec
xor
push
lret
mov
add
add
cwtl
sti
or
fbld
push
ret
popf
mov
mov
loopne
call
xlat
cmpsb
add
mov
fisubs
pusha
shll
mov
sbb
or
iret
testb
pop
aas
inc
xchg
pop
ret
clc
pop
les
shl
cmpsb
and
int3
fisubs
sbb
and
shrl
and
jne
xor
add
mov
andb
mov
out
dec
lret
mov
stc
lahf
xor
xor
mov
loope
mov
popa
cmp
into
xor
sbb
vmovntps
adc
test
pusha
outsb
fdivrp
xchg
mov
xor
push
pop
sbb
mov
popf
sbb
adc
out
aad
jno
dec
lret
adc
push
and
mov
add
mov
fcomp
mov
push
ja
cwtl
scas
dec
xor
sbb
ret
adc
jbe
andl
ljmp
pusha
mov
pop
inc
jae
and
addl
test
pusha
shlb
in
adc
jl
xor
push
mov
or
push
mov
call
add
mov
clc
lret
insl
sub
add
pop
fisttpl
dec
ficoms
pusha
inc
cmpsl
leave
repz
sub
add
add
and
int
or
loopne
xchg
push
xcrypt-cfb
cmpsl
movsl
dec
pop
lret
insl
insl
cmpsb
inc
loopne
pusha
loopne
popf
sbb
add
mov
inc
sub
xorb
xlat
int
ficoml
sbb
push
mov
and
add
adc
add
jb
aam
xor
repnz
jnp
dec
emms
jge
dec
mov
sub
pop
clc
or
mov
xchg
cmp
clc
add
and
imul
mov
add
sbb
aad
test
add
mov
add
add
fsubl
adc
shlb
push
lret
pusha
inc
repnz
push
add
pop
add
cwtl
fimull
mov
xchg
mov
inc
add
jecxz
xchg
mov
mov
loopne
nop
inc
xchg
jo
movsb
mov
dec
mov
pop
inc
mov
and
bound
pop
addr16
out
jne
sbb
loopne
push
jp
pop
mov
add
push
lcall
repz
sub
shr
xor
out
stc
sbb
pop
sbb
jge
add
popa
mov
loope
sti
shrl
loop
dec
inc
out
sub
das
and
cwtl
push
xor
sarb
pop
pop
mov
test
loopne
aas
das
movsl
cmp
push
xchg
jp
inc
mov
cmpsb
loopne
dec
es
out
xchg
iret
add
loope
enter
loopne
out
jno
lods
subl
rolb
orb
add
pushf
push
mov
andb
inc
xchg
lods
gs
mov
test
inc
shlb
push
into
jl
negb
icebp
nop
sub
loopne
mov
pop
pop
test
add
pushf
adc
sub
mov
jbe
xchg
fsubl
sbb
repz
add
cmpsl
add
cmpsl
pop
pop
lcall
xchg
inc
mov
rol
pusha
shrb
and
movsl
jmp
sbb
mov
dec
push
adc
ret
es
jl
fxch
xor
aaa
mov
movsb
andb
ret
add
xchg
cmp
clc
or
rorb
or
xorb
loopne
test
loopne
imul
in
xchg
pop
adc
test
add
push
aaa
andb
xor
inc
pusha
sbb
pusha
add
jmp
add
sbb
jmp
mov
mov
mov
mov
sbbb
inc
icebp
sbb
pop
jno
popa
xchg
test
stc
aas
lret
inc
mov
dec
enter
pop
in
pusha
jne
mov
cmp
test
push
pop
ret
xor
jp
loopne
push
cltd
lret
sub
rcrb
mov
loope
add
iret
push
shl
push
mov
or
aad
insb
movsl
mull
adc
inc
cli
jecxz
jno
andb
loopne
aaa
sub
or
ret
lock
leave
add
pusha
jae
shl
jb
loop
add
jp
push
xor
popa
jg
push
push
and
push
mov
or
and
xlat
mov
inc
fisubl
fwait
outsb
hlt
lret
out
mov
push
or
xor
sbb
push
daa
xlat
imul
sub
movsb
loopne
outsb
dec
lods
loopne
pop
inc
mov
insl
shlb
mov
push
inc
mov
loopne
adc
roll
add
lcall
pop
sbb
and
push
lret
mov
daa
adc
pusha
movl
cltd
sbb
fcoml
loopne
pushf
sti
or
add
pop
sub
jnp
cmp
cmp
dec
mov
loopne
mov
cmp
cld
cmpsl
ss
daa
jge
mov
movsl
and
and
push
adc
sub
loopne
and
and
stos
sbb
pop
lahf
add
cmp
inc
dec
jmp
pop
sub
rolb
mov
push
add
mov
sub
and
out
pusha
ss
shrb
pop
xchg
dec
inc
cmpsb
and
mov
pusha
loopne
push
xchg
sahf
js
out
push
inc
mov
mov
stos
xchg
jl
pop
stos
shl
add
xchg
pop
test
rcrb
add
rolb
mov
lret
mov
push
dec
or
mov
mov
andb
and
test
mov
andb
and
sbbb
mov
pushf
lods
add
sti
int
rolb
lret
test
pusha
pusha
imulb
add
jp
add
jo
jb
sbb
cmp
pop
leave
and
mov
incb
inc
mov
repnz
and
push
mov
add
jno
and
pop
xor
sbb
andb
shl
mov
inc
cmp
and
inc
lock
inc
pop
nop
and
cmp
push
andb
xchg
inc
ret
loopne
xchg
out
pusha
call
xor
int
fcom
xor
loopne
jbe
rolb
mov
mov
cmp
addb
sbb
sbb
pusha
and
dec
xchg
cmp
mov
xchg
outsb
lahf
push
int3
fsubrs
pusha
and
push
mov
and
mov
add
jp
pusha
mov
push
add
pusha
insl
add
mov
in
sbb
sbb
adc
gs
xchg
js
fs
fcoms
sbb
test
loopne
les
add
mov
dec
cmp
jbe
rorb
and
sarb
orb
push
repnz
ss
cmp
add
push
sbb
mov
mov
xchg
in
dec
and
lds
inc
mov
cmpsl
cmc
push
rol
cmpsb
pusha
inc
in
jne
add
into
fmull
in
leave
mov
jmp
jns
into
pusha
mov
fwait
ret
xchg
xchg
rorb
sbb
fdivs
xchg
repnz
repnz
xchg
xor
out
in
int
pusha
add
fldcw
cwtl
jnp
andb
stos
mov
add
mov
mov
orb
out
stos
and
pop
notb
and
adc
addr16
popa
mov
pusha
and
andb
add
nop
jb,pt
pop
jmp
mov
jp
mov
cwtl
pop
cmpsl
cmp
fs
jge
addr16
ret
ss
loope
jmp
mov
loopne
bound
outsb
lcall
push
out
push
xor
outsl
pop
test
sub
push
and
mov
lock
cld
lds
insl
jle
test
sbb
lock
and
rolb
xor
pop
loopne
sbb
xor
mov
dec
pop
jmp
pop
inc
lcall
ret
das
dec
xchg
mov
mov
test
mov
mov
jb
fistl
loope
sub
add
xchg
movsl
adc
sbb
jecxz
nop
ja
dec
inc
and
inc
inc
les
pusha
addb
decl
insb
shlb
aad
loopne
sub
mov
jp
or
and
cmp
shll
pushl
xor
mov
scas
inc
inc
sbb
sbb
mov
adc
sub
add
xchg
push
add
enter
fwait
incl
mov
add
inc
mov
loopne
rcrb
loopne
mov
cwtl
fidivrs
call
mov
mov
inc
push
dec
ficoms
jp
xchg
arpl
dec
sub
mov
out
fsubrp
andb
push
inc
pusha
test
ror
cmp
loopne
sti
stos
insl
lret
subl
in
repz
push
cmp
popf
out
repz
in
popf
cltd
cmp
pop
lods
inc
cmpb
cmp
and
sbb
mov
sub
fimull
lahf
das
enter
inc
jne
jmp
insl
push
sub
add
shlb
iret
jb
imul
rolb
outsl
push
inc
pusha
ret
mov
mov
or
sahf
and
pusha
adc
les
ficoms
ss
inc
sub
and
jnp
scas
add
je
fucomip
inc
jp
shlb
xor
ret
cltd
lahf
push
add
pusha
push
xor
andb
sub
loopne
mov
inc
fisttpll
andb
push
add
mov
pop
cwtl
mov
sbb
hlt
je
loopne
jbe
addb
pusha
pop
and
mov
shlb
inc
scas
inc
rorb
push
vcmptruess
out
xor
push
lods
pusha
pusha
scas
cmpsl
rolb
pusha
mov
cmpsb
mov
subb
sbb
adc
nop
jl
shlb
scas
ret
bnd
test
aas
cmc
bnd
addb
mov
rolb
jns
adc
rcrl
and
orb
shlb
iret
pop
pop
rol
iret
ret
cmpsb
mov
clc
fsts
shlb
movsb
shlb
push
jmp
pop
nop
ja
lods
pusha
mov
mov
pop
addb
add
push
imulb
xlat
mov
out
test
pusha
xchg
rcrb
rcrl
stc
popf
lcall
call
jae
nop
push
push
out
cmpl
rolb
loopne
pusha
mov
fwait
jne
fistps
push
inc
dec
push
stc
pop
int3
lods
addb
or
xorb
xor
test
andb
loopne
jo
rorl
fimuls
int
movsl
ds
and
rol
in
jo
xchg
xchg
xor
lcall
xchg
cmp
mov
inc
xor
je
out
out
push
pop
fbstp
ja
lds
je
mov
dec
fbstp
add
xor
mov
dec
out
loopne
lock
in
les
add
mov
aad
insb
lea
aas
and
fsubrl
add
scas
mov
mov
loopne
push
lea
lret
fmuls
movsl
xchg
insb
inc
sub
std
inc
mov
xchg
mul
mov
or
and
push
shl
and
pushf
and
mov
add
loopne
rol
inc
inc
faddl
sete
xor
scas
and
pop
cmp
out
aam
xor
inc
and
and
add
and
cli
jno
imul
mov
mov
mov
inc
mov
pusha
sbb
imul
loopne
and
cmp
jns
in
data16
xor
sub
rcrl
adc
sbb
dec
stos
push
lahf
repnz
mov
jmp
ja
int
lcall
jae
pushf
inc
dec
pop
lods
andb
lods
add
cmp
arpl
inc
jo
scas
mov
shrb
add
push
xor
pop
addr16
pusha
mov
shll
jl
xor
pushf
fs
mov
sbb
in
mov
pusha
xor
daa
movsl
ljmp
lret
imul
add
sbb
add
stos
andb
and
jbe
mov
scas
mov
inc
in
and
mov
and
and
loopne
out
sub
inc
mov
shlb
xchg
push
cmp
rcrl
dec
adc
sysexit
out
dec
inc
xor
arpl
inc
and
mov
add
xchg
rorl
or
pop
dec
scas
add
add
ljmp
dec
pusha
insb
mov
mov
lods
mov
sti
daa
pop
insl
mov
fnstcw
and
loopne
xor
push
dec
fiadds
loop
pop
int3
rol
out
push
pop
lds
sub
jl
fwait
and
add
lret
push
add
mov
cltd
adc
orb
jne
enter
in
loopne
js
xchg
cmp
adc
test
andb
push
xchg
outsl
push
mov
xlat
xor
xor
out
cmpsl
int
and
addr16
pop
jg
mov
int3
in
mov
mov
and
push
and
adc
push
xchg
out
pop
int3
xor
pusha
and
pop
and
sarl
stos
inc
inc
iret
scas
rol
shll
dec
jns
or
ja
sti
xor
stos
jmp
jmp
out
insl
loopne
pop
xchg
xor
adc
cmp
push
out
sbb
int
inc
mov
or
mov
pop
in
inc
sarb
test
pusha
xor
mov
inc
jp
jmp
clc
jns
mov
and
test
pusha
into
push
into
mov
cmpsl
leavew
ss
add
leave
call
mov
mov
mov
stos
outsl
mov
xchg
outsl
jp
mov
pushl
pusha
dec
rclb
std
push
inc
inc
enter
popa
cmpsl
sti
jg
or
movsl
repz
data16
cmp
and
mov
lea
and
dec
gs
mov
outsb
dec
aaa
push
or
rol
insl
pop
adc
pusha
rorb
jbe
mov
inc
add
xor
and
out
mov
sbb
inc
sbbb
fidivrl
mov
fwait
add
mov
adcb
xor
dec
fdivl
aas
nop
fs
inc
adcl
addb
pop
sbb
out
mov
pusha
and
dec
ret
loop
sbb
mov
test
fnstenv
addr16
ss
mov
shlb
outsb
sti
imul
in
mov
mul
push
insl
sahf
lock
cs
pop
vcvtsd2si
mov
and
push
inc
mov
or
jae
pcmpeqb
jo
int
es
add
popf
iret
mov
andb
dec
pop
loop
sub
shlb
in
mov
or
mov
rorb
xor
cmp
pop
add
subb
imul
inc
mov
call
mov
mov
xchg
int
loopne
push
shlb
rcrl
sub
and
in
xor
pop
xchg
pushf
mov
xchg
pop
fists
push
addb
mov
mov
xor
and
sar
add
shl
cmp
sub
inc
mov
das
push
adc
icebp
aam
cmpsb
add
mov
jmp
cmp
adc
fistl
cmp
loop
jmp
notl
dec
or
mov
and
mov
or
jne
cld
stos
inc
xorb
pusha
test
jl
inc
rclb
mov
rorb
mov
cmp
sub
xchg
mov
andb
cmp
sbb
cmp
scas
rcl
jns
in
lods
rcrb
and
sub
dec
sti
sti
and
push
test
dec
cmp
pop
aaa
jl
mov
loopne
push
shlb
pop
or
mov
outsb
hlt
jecxz
dec
pop
out
sub
pusha
mov
mov
cltd
pop
enter
andb
dec
jno
pop
les
insb
mov
pusha
xor
sbb
jae
xchg
pusha
rcrb
inc
stos
mov
shlb
jne
xor
adc
pop
and
inc
jle
push
cld
mov
xor
addr16
sbb
lret
int3
xor
pop
daa
fldcw
icebp
in
imul
bound
popa
mov
dec
movsl
roll
adc
and
jp
cmc
push
add
fsubrl
pusha
fldl
xchg
ljmp
inc
fsts
push
sub
sti
pop
or
sarb
push
push
inc
jmp
adc
adc
dec
xor
loopne
jns
scas
and
sub
fsubl
sub
jmp
stc
lret
and
pop
cmp
jne
pop
cmc
in
xchg
sarb
testl
sarl
iret
fldlg2
adc
pushf
cld
mov
jg
inc
and
jl
outsb
sbb
xor
ljmp
jo
jns
jecxz
xor
adcl
lea
xchg
sub
or
loopne
addb
mov
and
jb
unpckhps
mov
mov
hlt
repnz
inc
fildll
addb
dec
adc
stos
and
jne
fstpl
dec
fisubrs
inc
pusha
add
ljmp
mov
popa
xor
push
adc
imul
add
inc
adc
ljmp
mov
lcall
mov
mov
mov
mov
loopne
repnz
loop
pop
or
xchg
leave
mov
push
mov
ficoml
and
push
loopne
popf
cmp
mov
addb
xchg
cld
mov
pusha
mov
bswap
loopne
pusha
pusha
push
int3
test
xchg
loopne
jno
divb
sbb
fidivl
insb
cmp
bound
cmc
lds
add
cld
mov
add
add
fistps
cwtl
bound
fwait
inc
jg
lcall
pop
sbb
and
dec
aam
push
outsb
pop
call
ss
shrw
and
ss
shlb
shrl
add
add
inc
or
mov
and
mov
pusha
addb
push
nop
mov
inc
add
push
inc
movsl
lea
xor
add
scas
rolb
push
popa
push
pop
mov
lods
aas
lea
push
inc
ja
adc
stos
inc
sbb
inc
mov
push
lds
cs
inc
jg
dec
push
rol
negb
xchg
int3
mov
add
fildl
jmp
test
mov
inc
inc
or
movsl
mov
add
jl
lods
andb
mov
fdivr
cltd
lret
pop
and
and
mov
and
inc
mov
loopne,pn
test
push
ret
dec
rorb
jmp
andb
add
xchg
adc
ds
cmp
dec
xor
gs
stc
out
dec
sbb
jmp
xchg
cmp
stos
push
push
jae
dec
mov
xchg
inc
daa
dec
xchg
fiadds
and
push
sbb
and
sahf
mov
lods
inc
mov
xor
mull
cmp
inc
and
movsl
aad
jmp
inc
or
add
and
xchg
xor
inc
loopne
mov
loope
out
adc
enter
xor
pusha
sbbb
mov
mov
pop
and
and
sbb
sbb
push
push
out
lahf
adc
inc
cld
outsl
mov
inc
out
je
and
mov
cmp
xchg
in
out
subl
lods
cli
mov
hlt
add
mov
rcr
cmp
sbb
test
add
lret
xlat
xchg
and
inc
mov
mov
xchg
les
cmp
mov
xor
xchg
gs
insl
popa
sub
mov
jnp
nop
sub
inc
stc
push
jp
lds
jb
cmpsb
pusha
loopne
cmpl
loopne
cmpsb
shlb
inc
loopne
inc
mov
popf
insl
push
pop
sarl
repz
inc
pusha
aaa
mov
and
jg
xor
or
pusha
xchg
ss
filds
pusha
and
ja
and
mov
orl
call
fldt
in
pop
and
pusha
pushf
sub
out
adc
loope
lcall
mov
sarb
sbb
xor
inc
xor
xor
mov
rcrl
pop
int3
adc
dec
sub
mov
push
in
pop
xor
adcl
addb
fisubrl
push
adc
mov
mov
fsubs
cmp
cmpsb
add
sbb
jecxz
add
loopne
loope
leave
xchg
pop
pop
andb
into
ds
mov
mov
pusha
inc
push
pushf
lahf
cmp
jmp
insb
aam
sub
inc
inc
cwtl
dec
sbb
out
jbe
pop
shrb
and
add
add
xchg
and
or
mov
inc
mov
mov
stos
and
jl
fadd
hlt
inc
popl
les
ret
or
or
insl
sub
inc
jae
loope
mov
rcrb
sbb
push
sbb
and
pusha
xchg
ret
mov
mov
add
and
repnz
fcompl
inc
fstp
popa
push
and
rclb
mov
pusha
shl
mov
cmp
inc
inc
cwtl
js
shlb
inc
addb
popf
add
pusha
and
cmpsl
sub
and
pusha
rcrb
xlat
icebp
push
sub
mov
push
xchg
push
test
loopne
and
ja
incb
add
loopne
pusha
cmpb
loopne
pop
push
cmpsb
and
xor
jg
call
cltd
ret
cmp
in
xchg
pop
scas
mov
popa
and
add
jg
and
rolb
and
andb
cmp
mov
mov
jne
pusha
and
hlt
notl
jmp
adc
xlat
jmp
xchg
outsl
fwait
lock
xlat
sbb
pop
daa
lods
inc
add
icebp
xor
fcoms
shrb
cmpsl
mov
adc
sub
jb
loop
clc
xlat
bound
push
pop
cmpl
add
fdivrl
cmpsb
inc
shlb
mov
dec
scas
andb
lock
andb
add
in
jmp
leave
dec
sbb
cmp
add
dec
es
rcl
ss
fiadds
loopne
mov
add
and
push
pop
flds
mov
mov
and
les
adc
jbe
inc
pusha
pushf
sbb
and
mov
mov
sbb
cli
xor
out
lods
fmul
int3
and
cmpsb
rolb
sbb
rcrl
pushw
inc
inc
mov
arpl
jb
pusha
shrb
mov
jno
shll
add
andb
and
lret
loopne
dec
and
enter
test
mov
cli
dec
pop
call
mov
addl
shlb
shlb
add
addb
out
push
fdivs
xlat
ret
xchg
push
add
add
mov
xor
loopne
pop
cwtl
push
shlb
test
cmpb
xor
xchg
mov
loopne
mov
cmp
inc
lret
sub
inc
outsb
pop
mov
movsb
and
fildl
pusha
loopne
cmp
jnp
sbb
scas
fs
inc
cmpb
rolb
mov
negl
inc
pextrw
add
add
pop
inc
add
addb
loop
xor
and
int
xchg
call
mov
xchg
pop
xchg
fdivrs
add
sub
fs
fdiv
adc
xor
jle
les
rcrl
mov
shl
push
add
sub
and
and
add
push
inc
in
mov
fcmovnu
inc
sbb
andb
mov
mov
loopne
add
andb
mov
insl
sub
loopne
push
in
xor
sub
insb
cli
xchg
rolb
inc
pusha
push
mov
adc
sub
ret
mov
xor
icebp
lcall
sub
inc
dec
xor
ja
xchg
int3
mov
lea
dec
loope
les
adc
aad
ret
rorb
rorl
adc
inc
jle
xor
pusha
pusha
out
push
sbb
test
shl
std
cmp
cmp
gs
jae
adc
jl
das
enter
pop
push
inc
andb
and
mov
imul
ret
xchg
jmp
xor
cltd
out
imul
cmp
inc
mov
fnstcw
faddp
xchg
xor
adc
pop
dec
push
push
add
or
mov
in
inc
cmp
lods
mov
mov
mov
mov
mov
loopne
mov
popa
xchg
add
lcall
mov
cli
shr
es
and
mov
mov
add
andb
pop
jmp
and
out
push
jbe
cli
movsb
addb
push
lcall
and
and
loopne
adc
shlb
and
xchg
cmp
pusha
cltd
xorl
out
lock
fisttpl
sub
pusha
inc
fsubp
mov
jle
jo
mov
sarb
insb
lret
insb
insl
lods
addb
inc
loopne
pop
and
sarb
push
add
xor
aaa
dec
adc
mov
add
pop
lock
xlat
and
leave
mov
shld
add
xchg
in
cld
test
loopne
sub
inc
inc
mov
and
push
pop
pushf
xchg
andb
add
sub
rorb
and
push
addb
pop
test
loopne
call
rcrb
pop
cmpsl
mov
xchg
lock
shrb
rolb
out
mov
out
or
out
and
pop
xor
pop
hlt
add
push
mov
sbb
pop
cmp
mov
or
mov
and
mov
sub
insb
scas
inc
pusha
add
jnp
dec
sbb
js
in
mov
add
mov
cmp
mov
cmpsl
mov
inc
pop
xchg
in
fwait
leave
dec
stc
movsb
add
or
loopne
dec
and
fwait
imul
stos
and
ja
rcr
test
mov
repz
addb
ss
inc
int3
lret
pop
repz
pop
jge
jmp
repnz
and
js
fidivrl
fdivrs
aaa
jmp
inc
mov
mov
repz
mov
mov
rolb
addb
aas
add
cld
push
aaa
mov
ds
cmpl
sbb
lock
pusha
rcrb
jp
popa
ljmp
cmpl
mov
add
add
mov
jmp
dec
leave
mov
test
adcb
outsl
adc
pusha
xchg
pushf
inc
jmp
mov
push
inc
sbb
mov
add
shr
addb
pop
sbb
push
add
fimuls
xchg
pop
or
mov
ficompl
mov
adc
scas
dec
mov
mov
lds
adc
leave
into
imul
and
jp
mov
sbb
mov
and
ret
loopne
push
xlat
fdiv
scas
inc
mov
negl
mov
loope
or
mov
xor
shl
push
xchg
fnstsw
jl
aaa
cmpsb
pusha
add
xchg
test
push
add
pop
fneni(8087
loope
adc
add
stos
inc
dec
pop
mov
int3
mov
mov
loop
jbe
dec
push
lret
and
call
stos
mov
sti
aam
in
loopne
ljmp
aam
adc
repnz
shlb
inc
rclb
cmc
and
lea
loopne
jnp
inc
and
push
clc
test
add
xchg
add
add
addb
fldcw
add
roll
mov
mov
adc
add
mov
lods
inc
add
shlb
andb
jbe
daa
fucom
outsl
out
mov
add
sub
inc
sahf
jg
xchg
inc
or
and
push
test
mov
ja
enter
jnp
xchg
sysret
movsb
mov
lods
loop
mov
addb
and
andb
pop
or
rol
jnp
add
mov
sub
and
mov
adc
pop
push
das
fmull
stc
aam
inc
fildll
sub
add
imul
inc
add
dec
add
out
cmp
arpl
xchg
cmp
inc
not
cmp
add
mov
stos
loopne
dec
sub
cli
mov
rcrb
outsb
xchg
xlat
in
cmpsb
pusha
sarb
pushf
fcmovne
mov
inc
dec
cmp
adc
das
lea
sar
daa
testb
sub
inc
insb
cmpsb
shlb
add
pop
jno
repz
mov
mov
push
loopne
lea
inc
dec
sbb
inc
add
stos
addb
add
fwait
popf
test
add
pop
stos
mov
in
ret
push
fmuls
jecxz
jns
xor
cmp
sbb
loopne
jne
mov
mov
ja
mov
mov
jmp
out
repnz
mov
pop
leave
xor
fwait
or
and
pusha
add
lret
je
std
cmp
sbb
pop
pusha
add
push
stc
xor
fidivrl
data16
xchg
add
xorb
pusha
decl
fs
scas
in
cmp
out
in
pop
ret
cmc
imul
adc
lret
jmp
cli
leave
out
scas
and
add
pop
cmpsb
addb
aaa
loope
inc
push
enter
inc
sarb
loopne,pn
xor
add
mov
in
movb
add
ret
rclb
into
stos
loopne
mov
add
bound
das
std
insl
pop
test
loopne
jo
fstp
jbe
shl
adc
call
lret
cld
outsl
loope
adc
push
xchg
jmp
btr
add
cmp
arpl
xchg
and
dec
pop
lret
in
inc
and
mov
add
je
andb
or
inc
in
in
adcl
or
sar
mov
data16
icebp
mov
and
clc
rorl
sub
dec
stos
inc
add
mov
mov
mov
pusha
and
ret
cmpsb
addb
inc
in
sti
outsl
fldl
sub
dec
xchg
addr16
test
cmp
and
and
adc
xor
cmp
leave
xchg
mov
rclb
inc
cmpsb
and
addb
mov
fmuls
andb
test
pop
shll
call
xchg
pop
test
add
pusha
movsb
and
cmpsl
mov
cwtl
daa
push
lods
lock
push
sub
dec
push
cld
sub
mov
test
sub
insl
cmp
push
ret
pop
ss
inc
push
jbe
mov
or
orb
xchg
xchg
lds
movsl
sub
loopne
stc
jae
repz
js
sbb
loopne
adc
pop
testb
mov
mov
stos
andb
loopne
cld
sub
mov
mov
insl
dec
mov
shl
pop
and
sub
pusha
das
or
inc
loop
and
pusha
rol
mov
pusha
mov
aaa
mov
pusha
ror
mov
add
out
out
ja
mov
in
stc
cmp
inc
iret
sub
cltd
jp
inc
inc
jo
sti
sub
adc
arpl
cmp
insb
aas
shll
stos
push
and
cld
or
push
add
mov
push
cmp
or
xor
in
in
add
jno
mov
inc
shlb
movsb
and
and
add
ret
or
test
pusha
pop
lods
or
bound
popf
mov
fidivrl
lcall
movsl
test
movsb
pusha
add
rcrb
mov
fidivl
pop
inc
shr
loopne
push
add
rorb
inc
ja
call
je
loop
cmpsl
pop
add
jmp
shlb
mov
push
push
shrl
add
or
rclb
gs
leave
imul
adc
ja
mov
mov
dec
dec
jae
addr16
sub
inc
subl
adc
mov
sub
pop
xchg
repnz
les
mov
pop
jne
das
mov
adc
and
and
scas
adc
out
xchg
mov
mov
mov
pusha
mov
sub
inc
sub
shrl
mov
xlat
pop
les
out
xchg
shlb
std
iret
int3
push
cld
fucomip
pop
jp
or
mov
fcmovu
icebp
mov
adc
movsb
pusha
add
lcall
lahf
aas
xor
inc
xchg
mov
pusha
and
mov
rolb
pop
lea
loopne
movb
xchg
test
outsl
movsb
mov
mov
and
mov
ds
jo
fs
lret
icebp
xor
mov
fsubs
popa
jb
and
andb
imul
js
negl
ds
gs
dec
add
loopne
clc
cmp
xor
addb
fnsave
les
pop
icebp
xor
mov
movsb
and
dec
aam
in
xor
push
jmp
xchg
inc
xor
sbb
roll
loopne
ljmp
pusha
pop
out
fs
mov
int3
mov
in
inc
and
xchg
insl
or
inc
xchg
movsl
xchg
mov
inc
inc
jg
lds
inc
pusha
mov
frstor
sbb
scas
out
shll
mov
inc
pop
and
inc
sti
popf
dec
adc
dec
loop
mov
add
mov
sbb
pusha
ja
mov
out
mov
inc
lea
dec
out
mov
cmpsb
addb
sub
jnp
cmp
sti
adc
add
pusha
add
pop
and
loopne
jg
sti
fcompl
adc
out
pusha
jmp
adc
add
mov
mov
adc
xor
jecxz
sahf
sub
pusha
mov
mov
pusha
pusha
pushf
xchg
out
lock
aaa
faddl
and
or
add
mov
insb
repnz
push
and
mov
cmp
jle
ror
rcll
mov
pop
or
pusha
ror
test
sbbb
lahf
sahf
mov
subb
mov
mov
test
mov
push
and
sarb
loopne
sahf
jge
inc
shrb
mov
mov
sahf
outsb
hlt
add
mov
add
in
and
pop
test
rcr
ret
stos
and
or
pushl
aas
call
mov
loopne
cmp
xor
push
lret
push
addr16
mov
dec
mov
into
mov
cmp
loopne
cltd
xchg
lock
inc
addr16
add
pusha
xorb
push
jns
mov
jb
inc
clc
sahf
orl
popa
shrl
push
add
xchg
adc
shr
mov
xlat
pop
xchg
into
imul
mov
mov
leave
cmp
scas
insl
sbb
mov
sub
add
add
add
and
jmp
scas
lods
shlb
mov
mov
mov
jecxz
addr16
and
mov
xchg
mov
dec
imull
jnp
into
ja
fsubp
lahf
ja
mov
pop
mov
loopne
add
loope
mov
inc
mov
mov
divl
out
mov
inc
out
push
adc
shlb
fwait
mov
js
xchg
xor
pop
loopne
pop
les
dec
xor
out
mov
add
mov
aas
pusha
loop
or
push
shlb
fstpl
xchg
or
pusha
stos
addb
cmpsl
jmp
sar
xor
pop
push
int
mov
loopne
andb
insb
pop
fcoms
inc
sbb
loopne
pop
jmp
mov
add
das
cmpsl
fstpt
pop
inc
mov
and
pop
hlt
nop
outsl
push
stos
mov
pop
lds
addl
inc
gs
mov
mov
jnp
sbb
rorb
rcll
pop
aad
in
std
fisubrl
rol
or
inc
xlat
jl
and
pop
or
push
mov
scas
mov
sarb
and
sub
cmpsb
add
int
jle
or
mov
rolb
cmp
mov
rolb
add
ljmp
sbb
mov
imul
inc
inc
nop
or
shlb
loopne
cmp
cmpsb
inc
inc
les
jo
lods
dec
sahf
adc
dec
std
xchg
and
pop
mov
and
shlb
pop
cmp
addb
cmp
out
orl
push
push
lds
dec
out
sahf
push
xor
testb
adcb
mov
or
and
mov
cmp
rclb
jge
mov
fiadds
push
inc
mov
push
cli
lahf
mov
pop
cmpsb
inc
inc
int
daa
pop
jnp
xchg
insl
push
pushf
mov
cmpl
sbbb
jo
and
pusha
addr16
cmpsb
rolb
jle
sbb
push
inc
jnp
andb
cli
cmc
nop
test
loopne
movsl
outsb
daa
jb
andb
push
cwtl
in
sub
inc
pop
rclb
push
xor
addr16
push
push
dec
repz
test
push
in
cwtl
test
and
ja
mov
dec
and
dec
xchg
and
mov
ret
mov
leave
dec
pop
jmp
sub
lahf
cmp
add
push
inc
iret
rclb
xchg
cmc
pop
mov
sbb
mov
inc
pusha
cmp
dec
dec
jmp
mov
or
repz
mov
mov
xchg
ja
sahf
push
jns
jg
loopne
and
fwait
push
jne
push
ja
mov
xor
cmp
aaa
push
andb
inc
xchg
shrb
sahf
mov
out
pop
push
fcomps
clc
data16
mov
xchg
pop
getsec
pushf
subl
outsb
mov
gs
push
inc
mov
scas
andb
or
or
ss
mov
fdivr
cmp
loopne
add
and
cli
stos
add
or
dec
pushf
stos
loopne
daa
fisubrl
push
mov
inc
loopne
inc
mov
lret
xor
jle
xor
aas
xchg
arpl
add
iret
rcr
scas
rolb
rorb
sbb
mov
in
lods
mov
jge
aad
xchg
xor
push
fmulp
out
int3
inc
call
sbb
loopne
mov
imul
orb
sbb
test
xchg
sub
inc
fsubrs
and
inc
rcl
call
push
xor
xchg
bound
loopne
pop
ds
adc
adc
testb
sbb
dec
inc
push
mov
and
add
test
pop
clc
pop
ss
mov
add
pop
fildll
ljmp
imul
ljmp
inc
and
fnstenv
hlt
mov
lret
ret
and
shrb
xchg
mov
sti
and
mov
pushw
cltd
jecxz
pop
mov
je
movsl
gs
mov
inc
or
scas
sbb
lret
push
dec
filds
add
mov
ffreep
loopne
inc
mov
pusha
ss
mov
test
pusha
das
and
push
and
jl
test
loopne
imul
or
test
popf
enter
cmp
fnstenv
pop
xor
loopne
push
mov
xor
rolb
addb
pop
push
xor
inc
push
cltd
and
pusha
in
shrb
pusha
or
and
push
out
inc
push
sar
sti
shlb
or
nop
xchg
mov
ficoms
jecxz
cmp
xor
out
mov
sbb
loopne
push
mov
pop
mov
lods
pop
stos
pusha
rcrb
mov
enter
dec
in
xor
pop
and
scas
fistl
fmull
jmp
push
lods
dec
xorl
shlb
mov
mov
inc
sbb
loopne
mov
jae
shlb
xchg
sub
loopne
jl
movups
pop
jae
or
cmp
dec
repz
and
add
loopne
lds
push
xchg
jp
lahf
test
mov
sbb
shlb
and
xchg
out
add
mov
add
in
jae
jns
enter
dec
add
cmc
pop
sub
inc
cmp
add
js
shlb
rolb
xchg
data16
mov
jg
rcr
pop
sbb
pusha
inc
loope
clc
dec
push
cmpl
stos
and
arpl
xor
cmp
pop
jg
pop
mov
mov
pusha
add
add
add
dec
repnz
and
cmp
mov
clc
enter
rol
loopne
jl
dec
push
std
ret
jne
add
xor
add
inc
lock
mov
mov
inc
fstps
addb
jae
push
jg
xchg
js
add
xor
ret
jmp
push
sub
addb
pusha
js
cmp
pop
dec
pop
insl
inc
in
push
mov
jle
sbb
mov
push
loopne
daa
into
xlat
shlb
and
cwtl
in
lret
adc
clc
cld
fidivrl
xchg
in
addr16
lahf
jnp
sub
rol
or
pop
imul
and
rorb
in
cld
nop
aad
sub
dec
pop
rcl
jg
decl
add
mov
mov
out
hlt
mov
and
jns
xor
les
inc
inc
stos
pusha
add
cmc
mov
int
pusha
pusha
sbb
lods
insl
popf
adc
loopne
xchg
and
loopne
scas
fbstp
inc
jo
dec
mov
sub
in
in
mov
int
jg
and
pop
aas
push
add
jle
cmp
jb
adc
andb
xchg
cmp
cli
sbb
cmpb
loopne
cli
pushf
data16
repz
push
pusha
add
sti
frstor
and
lock
and
or
mov
push
cmp
in
imul
inc
fcmovnb
sub
loopne
sti
clc
inc
xlat
push
push
add
and
mov
and
sbb
shlb
sbb
mov
cld
xor
leave
sub
subb
inc
lods
popf
sub
inc
xchg
jge
mov
rol
sti
dec
jae
mov
fistpll
xchg
push
mov
scas
shlb
fbstp
in
in
or
push
test
loopne
cmp
mov
jmp
pusha
mov
xchg
sub
xorb
sbb
mov
into
add
push
test
and
dec
dec
xor
push
nop
mov
fisubrs
mov
xchg
cmp
lock
jae
mov
push
inc
mov
xchg
mov
in
jbe
in
in
mov
lods
loopne
cmpsl
out
jnp
dec
clc
inc
outsl
in
out
pop
lret
into
jns
or
les
loopne
mov
sbb
mov
and
inc
jns
xchg
and
inc
fwait
icebp
xor
inc
and
and
dec
xchg
mov
and
cmp
dec
pop
xor
or
pusha
rorl
mov
mov
shrl
add
loopne
sbb
push
stos
inc
test
jg
and
shrb
loop
push
in
xchg
sbb
andb
fsubrs
addb
fwait
aaa
fnstsw
loopne
jb
das
je
popf
test
adcb
push
push
fldl
testb
loopne
rcrl
shlb
rolb
lcall
mov
cmp
andb
loop
dec
fidivl
stos
xor
mov
mov
pop
inc
imul
add
daa
dec
into
jns
pusha
and
push
loopne
add
mov
inc
pop
push
mov
cmp
inc
pop
cmp
outsb
popf
aaa
dec
push
and
shlb
shrb
pop
sbb
mov
dec
jb
dec
xchg
xchg
jo
shll
pop
stos
das
bound
aas
sub
inc
inc
jnp
jb
inc
inc
or
shrb
xchg
sbb
sbb
pop
xor
lahf
xchg
cwtl
scas
sbb
adc
inc
mov
loopne
addb
lret
lock
and
xor
sarl
inc
add
mov
pop
fbstp
pop
xor
or
sbb
add
push
xor
rcr
pop
dec
hlt
outsl
daa
scas
xchg
adc
dec
cmpsl
dec
fildl
mov
pusha
jo
test
mov
and
jle
and
cmp
cmpsb
mov
jl
sbb
xor
dec
jne
or
shl
aas
mov
pusha
outsb
xchg
pushl
or
pop
mov
movsb
and
decb
arpl
dec
cmpl
mov
sbb
loopne
int
pusha
rol
ja
and
int
ljmp
pop
jns
xor
popa
mov
xor
pusha
movsl
pop
sub
mov
inc
pop
push
pusha
inc
mov
inc
mov
cmp
adc
sbb
dec
mov
dec
pop
inc
jns
and
xchg
shrl
imul
jg
or
cmpsl
pop
xor
mov
mov
rol
dec
cmp
or
mov
idivl
push
push
es
out
lret
xor
loopne
add
add
mov
fldl
add
mov
inc
and
je
jnp
mov
enter
mov
push
adc
shlb
int3
sub
xchg
jbe,pt
test
pusha
adc
les
in
dec
int3
ljmp
aas
sbb
das
xor
and
lret
push
ds
mov
imul
sub
fwait
add
shl
lds
lahf
inc
xchg
outsl
dec
or
push
jmp
js
mov
jnp
cmp
into
aas
and
add
mov
shr
mov
mov
or
stos
or
pusha
sub
mov
adc
jns
inc
cld
aad
jbe
fnstsw
pop
loopne
mov
and
out
mov
sbb
pop
sti
test
dec
test
pusha
mov
sub
shlb
popf
push
sti
xchg
roll
sub
add
add
xorb
loopne
sbb
inc
sbb
imul
push
and
jle
inc
dec
andl
sbbb
add
out
cltd
mov
mov
sti
leave
mov
cmp
add
xor
xchg
cld
inc
out
or
subb
loopne
out
inc
and
inc
std
cli
aam
aam
shll
pop
gs
pusha
and
and
sbb
xchg
mov
int
cmp
shlb
pusha
mov
xor
shlb
dec
mov
cmc
in
in
fmul
divb
pop
movsl
lods
pusha
shrb
jae
das
insl
shr
aaa
dec
repz
gs
int
mov
add
push
lds
orl
jecxz
test
aaa
xor
pop
pop
add
cld
mov
inc
mulb
out
inc
scas
sbb
into
sbb
shl
rcrl
xchg
icebp
jo
cltd
cmp
add
jb
and
push
aas
les
or
add
in
pop
lock
and
xor
stos
les
push
sub
andb
shrb
or
jae
sbb
dec
xor
testl
jbe
pop
xor
mov
sbb
and
and
stos
andb
push
loopne
dec
fsubs
fldz
and
xchg
lahf
ret
push
cmp
sub
shlb
out
dec
sub
inc
loop
mov
and
add
add
sub
and
add
pusha
pusha
pop
divl
shlb
pop
bound
xor
or
push
into
cltd
xor
rolb
aas
lds
cmpsl
jae
popa
lret
inc
and
and
add
mov
icebp
sbb
and
jb
loopne
add
loopne
je
lahf
gs
rdmsr
dec
popa
fnstsw
pop
leave
add
sbb
dec
add
sbb
scas
pop
push
rcrl
fsub
xor
or
mov
mov
and
lea
movsb
pusha
loopne
scas
addb
and
testb
xchg
jle
addb
std
pop
push
int
adc
dec
stos
xor
loopne
mov
mov
in
xchg
mov
xor
enter
loopne
in
cmp
push
out
mov
loope
shl
leave
insb
jp
loopne
icebp
in
aad
mov
mov
jge
sysret
mov
adc
add
xor
xchg
andb
rol
jne
mov
pop
test
dec
jp
pusha
inc
fcoms
xor
rolb
shl
jmp
fs
and
push
push
aam
add
rcrb
mov
in
adc
fcomps
addr16
jae
gs
lods
jo
xchg
loop
pusha
inc
mov
cwtl
mov
xor
mov
mov
mov
mov
xchg
in
xor
xchg
adc
add
loopne
sbb
pop
xor
xchg
or
inc
int
std
fmul
aas
pusha
shl
xor
imul
mov
hlt
or
in
jecxz
mov
loope
and
shlb
sbb
arpl
cmp
loopne,pn
pop
bound
inc
jge
and
adc
mov
add
inc
pop
push
js
mov
add
cld
adc
jmp
add
fadd
fistl
jnp
outsb
lea
push
js
pop
adc
xor
dec
sbb
out
xlat
jno
ds
enter
and
inc
xchg
jns
mov
dec
mov
scas
jb
fwait
imul
and
jo
pop
and
rcl
scas
test
and
lods
pusha
add
out
insb
test
call
push
mov
loopne
ud1
or
inc
into
xchg
shlb
mov
and
jnp
xor
outsl
lods
rolb
lods
loopne
sbb
pop
test
ret
xchg
lahf
fldl
or
addb
add
mov
test
pop
mov
cmpsb
add
das
mov
push
mov
bound
add
int
mov
sti
xchg
fmuls
mov
or
xor
pop
hlt
popf
mov
dec
push
sbb
incl
push
inc
mov
mov
or
in
test
adcb
xor
inc
roll
lods
or
and
cmpsb
pusha
pusha
push
cltd
inc
sarl
lds
push
xchg
insb
jg
cmpsb
pusha
add
xchg
or
mov
push
rolb
push
jne
mov
adc
pusha
pusha
sbb
hlt
xchg
push
insb
lret
test
cmpsl
pop
mov
ds
add
or
ret
inc
jmp
testb
inc
inc
mov
xor
hlt
sbb
addb
shlb
icebp
xchg
dec
push
mov
rcrb
shlb
cmp
sbb
addb
and
rorb
jne
mov
mov
mov
pop
add
mov
fisubl
mov
je
addb
xorl
ror
push
lods
loopne
sbb
bound
rcr
insb
loope
and
jge
sbb
clc
rcll
add
xor
bound
push
addb
fldcw
in
les
inc
cld
adc
ja
sbb
or
pop
and
das
lret
outsl
aaa
mov
or
and
and
andb
jb
pop
test
and
sub
daa
cmp
insb
mov
xor
mov
fstpt
shll
hlt
dec
pop
cmp
orl
es
inc
or
loopne
sub
pop
stc
pop
addr16
sbb
or
loopne
rolb
mov
xlat
add
rolb
mov
stc
shll
pop
mov
rclb
and
cwtl
pop
nop
cmp
addr16
inc
out
jb
jno
mov
mov
adc
mov
jmp
xor
daa
xchg
out
xor
shrl
add
mov
mov
push
pusha
pusha
test
add
mov
loopne
sub
loop
sub
out
push
push
xchg
cmpsb
rolb
cmp
and
loopne
jmp
jmp
cmp
jmp
add
push
addr16
bound
jne
xchg
pop
pop
adc
sbbb
push
lods
mov
popa
mov
inc
insl
sub
mov
xchg
std
or
inc
test
mov
icebp
addb
xchg
mov
jb
push
sbb
add
fidivl
dec
push
add
pusha
mov
pusha
and
out
stos
push
dec
sbb
loope
cmp
add
push
pusha
arpl
and
arpl
insl
or
aaa
imul
sub
pusha
outsb
dec
in
das
test
mov
pop
rolb
rolb
rcrb
imul
and
inc
stos
shlb
filds
fwait
mov
mov
negl
shlb
popf
out
pop
pop
dec
mov
sbb
inc
xchg
xchg
jmp
add
mov
popf
dec
push
cmp
fdivrl
jle
xor
pop
jp
gs
ljmp
xchg
jbe
mov
pop
rolb
test
fwait
inc
in
iret
insl
cli
xchg
das
outsl
in
mov
fdivs
repnz
and
adc
movsl
arpl
inc
mov
cmpsb
inc
mov
repnz
rcl
ret
addb
das
jecxz
push
push
and
lret
or
dec
xchg
mov
rcll
mov
push
pop
ss
mov
cmpsl
mov
sbb
inc
lahf
dec
and
jo
inc
mov
cmp
fbstp
push
mov
inc
ja
mov
loop
adc
dec
mov
fbstp
mov
addr16
or
and
mov
and
mov
and
pop
push
enter
in
int3
call
addr16
out
add
or
xchg
frstor
dec
sti
outsl
rclb
xlat
or
sarb
lea
iret
je
movsb
inc
add
mov
adc
xchg
cmp
add
fdivl
test
and
out
and
and
inc
push
movsb
and
andb
insl
popa
popa
test
loopne
mov
add
jle
jecxz
push
jg
push
mov
mov
jno
leave
aam
je
ret
mov
jle
add
inc
add
cmp
mov
mov
cmp
and
cwtl
daa
outsl
push
loope
in
scas
fidivs
mov
and
sub
sarb
enter
push
rol
je
dec
mov
and
pop
jp
and
es
rolb
imul
mov
push
loop
or
mov
arpl
dec
xor
loopne
jle
hlt
pop
cmp
adc
leave
cmp
push
add
stos
xchg
aad
sub
mov
xor
shlb
add
pop
fmul
and
aas
inc
sbb
mov
sahf
addr16
pusha
pop
jmp
mov
loopne
inc
notb
lods
andb
and
add
popa
push
insl
or
shrb
gs
lods
lret
push
addb
fiadds
jg
fisttps
push
cmp
fwait
divl
and
or
mov
cltd
orl
shlb
push
rclb
pop
in
mov
fdivrs
dec
bound
je
scas
pusha
sarb
sti
insb
incb
inc
test
pusha
or
inc
nop
fistl
and
lret
mov
cmp
mov
add
or
mov
call
adc
pop
and
jmp
mov
sub
scas
ja
or
andb
clc
shlb
jmp
mov
dec
mov
cmp
mov
shl
int
pusha
mov
xchg
addr16
xlat
ja
out
test
andb
and
rolb
inc
cmp
jl,pt
xor
sbb
adc
std
dec
ds
lods
loopne
loope
sub
mov
add
gs
xchg
mov
pop
sub
orb
mov
mov
lds
icebp
adc
leave
jne
loopne
jp
stos
icebp
mov
mov
leave
cltd
fstpt
icebp
faddp
mov
ljmp
adc
jmp
lret
mov
movsb
inc
rorb
sarb
bound
lret
lock
adc
mov
inc
insl
ret
loopne
xchg
shlb
pusha
rcrb
dec
shrb
pusha
loopne
sbb
push
pop
mov
movsb
mov
xor
fdivr
or
das
scas
movsb
pusha
sarb
loopne
addb
jp
mov
pusha
mov
dec
lods
inc
loopne
or
cmp
xlat
xor
adc
sbb
xor
scas
icebp
pusha
stos
and
dec
insb
cmp
xor
adc
add
test
sarb
aaa
pop
out
lret
and
or
loopne
jge
loopne
adc
add
sbbb
lahf
push
jb
outsb
iret
and
inc
mov
xchg
loopne
popa
imul
inc
or
adcb
mov
xchg
mov
icebp
jmp
inc
mov
push
cmp
pop
mov
andb
fcmovnbe
cmp
out
pushf
clc
mov
cs
loopne
mov
je
pop
dec
jo
loopne
outsl
pop
dec
mov
pusha
jecxz
jnp
lods
shlb
and
inc
dec
fwait
mov
cmp
es
push
push
cmp
inc
mov
sbb
aam
out
dec
or
inc
in
or
andb
add
loopne
mov
popf
test
and
mov
xor
pop
cmp
neg
jge
stos
inc
rolb
mov
cmpsb
pusha
pusha
sbb
cs
loopne
cli
xor
stos
add
mov
mov
xchg
inc
lret
loope
rol
scas
rolb
sti
nop
iret
cmpl
cltd
out
pop
repz
hlt
lods
mov
push
pusha
pusha
std
lcall
hlt
and
cmp
leave
push
mov
in
imul
add
stos
pusha
add
and
rcrb
scas
xchg
mov
jb
mov
and
and
mov
mov
lahf
loop
lcall
and
mov
xor
jl
mov
data16
icebp
mov
clc
cli
and
shrb
loopne
push
fwait
sbb
pusha
adc
mov
inc
jl
xor
adc
sbb
push
xorl
and
sbb
fdivs
shl
and
jne
andb
xor
test
test
and
mov
vandps
arpl
adc
sbb
popa
dec
test
adcb
fimull
dec
push
and
push
xchg
sarb
xlat
and
add
imul
push
jecxz
and
sbb
enter
mov
jb
pop
fistpl
and
or
sbbb
loope
fstpt
mov
sarb
lods
add
pop
or
add
out
push
inc
ja
loopne
stos
xchg
lds
loopne
push
and
hlt
jl
arpl
jns
xchg
and
cmpb
mov
loopne
or
add
cmp
daa
mov
mov
xor
xchg
pop
mov
push
repz
push
test
into
sbbl
push
adc
imul
sbb
xchg
lret
ss
lahf
xchg
ror
mov
sbb
addps
testb
cmp
lods
and
int
jns
fs
xorb
and
out
mov
shlb
inc
mov
push
cmp
arpl
pusha
loopne
imul
dec
inc
lahf
and
lods
andb
inc
repz
add
jle
and
shlb
rolb
mov
mov
xor
dec
movb
jecxz
pop
sub
popf
faddl
add
sar
fdivrs
mov
loopne
scas
loope
xchg
subb
pusha
and
addb
or
add
push
push
fnstsw
mov
addb
jle
loope
add
pusha
testb
mov
enter
xchg
stc
out
movl
and
mov
push
jecxz
std
adc
int3
pop
or
cmp
dec
mov
data16
adc
loope
popa
stos
xlat
je
and
sub
sub
inc
push
jb
and
sar
dec
inc
test
mov
jp
loopne
push
pop
fsubrp
mov
shlb
adc
subl
imul
or
inc
addb
and
mov
sti
hlt
mov
xchg
sub
add
popf
adc
ds
in
jnp
cmpl
xchg
push
mov
sbb
loop
scas
pop
inc
jne
dec
mov
gs
hlt
stc
adc
dec
mov
add
rcrb
lock
sub
or
mov
xchg
adc
movsb
inc
add
pop
int
cmp
cmp
mov
rolb
popf
aad
xchg
sbb
cltd
mov
loopne
cld
stos
aam
bound
inc
push
jb
nop
loopne,pn
ret
push
jbe
stos
and
shlb
dec
iret
imul
cwtl
hlt
fnstcw
inc
xchg
jecxz,pt
loopne
add
mov
mov
push
ficomps
pusha
mov
repz
add
shlb
lcall
mov
and
mov
inc
cmp
adc
xor
inc
frstor
pusha
pusha
dec
outsb
pop
lock
jle
das
lock
popa
jp
cld
test
mov
xchg
int
ja
sbb
jecxz
call
add
mov
lret
and
adc
adc
jb
add
adc
mov
int3
lock
push
mov
inc
or
dec
sahf
push
xchg
clc
imul
loopne
sub
and
stos
addb
loopne
call
add
ljmp
mov
mov
mov
dec
scas
add
mov
rolb
add
adc
ljmp
mov
ljmp
inc
rcrb
jg
in
cmp
scas
ret
aaa
dec
jns
inc
cmp
test
mov
sub
pop
out
ja
inc
mov
loopne
push
inc
inc
ljmp
or
and
pop
or
jmp
sub
xor
mov
repz
out
and
inc
mov
mov
pop
inc
gs
mov
loopne
inc
and
jle
scas
dec
jae
mov
pusha
sbbb
dec
inc
adc
jmp
in
cmp
lods
rol
jnp
stc
in
sbb
cmp
gs
adc
leave
lea
dec
pop
jle
or
mov
or
add
mov
loopne
jnp
add
xlat
fldl
test
and
out
shlb
pop
add
loope
cli
cmpsb
mov
or
mov
add
and
negb
mov
and
inc
imul
mov
fsts
and
aad
jecxz
ret
fldenv
lahf
cld
mov
dec
fildl
into
andb
mov
push
jb
pop
lcall
imul
pusha
dec
add
and
mov
push
and
jl
int
aam
sti
insb
lahf
jecxz
in
pushf
test
mov
xor
pop
inc
aaa
push
xchg
and
mov
lcall
cmp
add
imul
lahf
icebp
dec
out
int
test
xor
and
loopne
stos
mov
dec
jecxz
jae
stos
mov
sbb
fldl
rol
out
add
jbe
iret
push
add
call
ja
iret
mov
lret
jns
fidivrl
push
insb
mov
sub
rorb
mov
call
push
and
mov
add
lock
outsl
fidivrs
fs
add
daa
mov
loopne
pop
das
dec
push
push
and
iret
cmpl
push
jle
and
shl
in
mov
imul
push
mov
fsub
push
lea
jmp
fnstenv
imul
rorb
mov
sub
shlb
push
sbb
sti
sbb
lahf
fmuls
pusha
loopne
inc
rclb
jae
fisubrs
mov
add
inc
xchg
and
and
negb
jge
aaa
mov
icebp
das
sub
test
mov
addr16
mov
pop
insw
mov
push
bound
cs
loopne
lea
loopne
push
sub
mov
inc
mull
rolb
push
cli
movsb
andb
mov
mov
arpl
incb
movsb
inc
and
loope
mov
mov
mov
and
push
les
sbb
mov
mov
xchg
pop
fcomp
clc
jne
pusha
loopne
or
and
push
pop
leave
push
or
imul
outsl
punpckhwd
and
jmp
or
sub
xchg
ficoms
outsl
shll
repnz
mov
push
addb
jnp
xor
pop
mov
shll
mov
out
dec
iret
jecxz
shr
inc
or
and
and
inc
mov
negb
push
movsb
loopne
jb
cmp
pop
adc
imul
dec
adc
add
pop
sbb
test
mov
stos
jnp
push
std
out
popa
fs
or
loopne
jns
inc
mov
adc
jb
pop
pop
cmpsb
loopne
out
pop
repnz
and
addb
mov
daa
outsb
cmc
dec
call
pop
mov
adc
sub
enter
sar
adc
dec
call
andb
and
clc
js
add
jnp
les
and
inc
addb
sahf
je
loopne
jg
rdpmc
cmpl
shlb
rolb
fisttps
enter
jns
pusha
and
addb
or
sarb
lea
mov
lret
test
loopne
addb
sbb
cld
dec
jae
lcall
or
pop
addb
inc
dec
mov
call
pop
add
or
lahf
sub
loopne
mov
int3
cmp
pusha
cmp
pusha
pusha
cwtl
loopne,pn
rcrb
movl
push
xchg
addr16
int
lahf
cmp
mov
icebp
push
popf
sahf
pop
scas
stc
inc
push
inc
and
addb
xchg
mov
cmp
mov
andb
pop
lods
andb
repnz
rorb
add
push
dec
add
pusha
sub
inc
fs
mov
pop
pop
jmp
mov
pop
gs
loopne
mov
loopne
jnp
push
mov
xor
loopne
cli
icebp
fisttps
push
and
and
pusha
repz
pusha
mov
lahf
ja
cmp
hlt
push
mov
pusha
xor
mov
lcall
pusha
xchg
xchg
and
jae
dec
out
faddl
adc
gs
lret
loope
dec
and
ret
mov
daa
inc
jnp
popf
dec
nop
xor
andl
int3
data16
xchg
loop
test
adcb
jnp
pop
jnp
adc
and
in
loopne
or
xchg
and
fs
test
lea
mov
daa
fbld
sar
loope
add
mov
sbbl
and
call
out
and
testb
xchg
and
xor
xor
add
scas
shl
inc
fildl
movsb
mov
mov
lahf
popf
mov
gs
dec
fsubrs
add
xchg
sbb
clc
xorl
xchg
stc
mov
xor
adc
push
pusha
pusha
loope
jmp
into
push
inc
add
stos
mov
pop
mov
aad
movsb
loopne
inc
push
inc
jne
dec
fwait
lahf
xchg
sbb
addb
mov
mov
and
and
mov
pop
mov
lock
mov
fwait
and
test
out
or
sbb
out
jnp
add
loopne
xor
xchg
pop
xorl
dec
adc
mov
pusha
cmovae
add
int
pop
stc
xchg
bound
add
mov
inc
cld
enter
xor
insl
add
xchg
inc
inc
pop
jp
inc
pusha
mov
loopne
mov
test
and
pavgb
pusha
add
mov
dec
popf
fdivl
mov
mov
dec
push
cmp
clc
or
loopne
mov
or
jecxz
sbb
les
adc
inc
in
inc
mov
pusha
outsl
repnz
ud1
jae
stos
add
xchg
lods
inc
and
or
mov
nop
fwait
pop
push
pop
repnz
sbb
loopne
into
add
sbbb
sbb
test
loopne
in
inc
dec
dec
jle
dec
loopne
pop
leave
ret
subl
lods
and
shl
pop
aam
stos
fwait
push
vpmullw
mov
mov
mov
icebp
leave
mov
mov
jge
dec
and
scas
pusha
mov
test
jne
jge
xor
jno
cltd
outsl
adc
rolb
addr16
shlb
sbb
or
rcrb
push
shl
and
sub
and
movsl
sub
movsb
inc
and
js
mov
sahf
lock
sub
mov
mov
inc
cmp
and
rcr
jle
mov
inc
inc
nop
mov
iret
xlat
popa
sbb
add
loopne
add
pusha
subb
inc
dec
mov
sbb
inc
in
push
into
or
pusha
xchg
adc
nop
sahf
mov
adc
add
mov
push
scas
mov
or
inc
ja
mov
mov
xchg
push
mov
repz
add
arpl
mov
fldenv
lock
dec
ret
andl
rolb
push
je
pop
xor
add
pop
lahf
mov
sbb
xchg
xor
aad
push
and
cmp
push
int3
mov
and
rcl
sarb
insl
mov
subb
pop
sti
rorl
adc
add
pop
jl
and
add
scas
cmp
xchg
cmp
mov
adc
ret
mov
andl
sub
sti
jecxz
inc
and
pop
aaa
call
xchg
out
xchg
test
and
jns
or
mov
pusha
mov
inc
add
ficomps
shlb
nop
shr
addl
pop
aam
stos
and
xchg
sub
mov
rcll
addb
mov
nop
fisttpll
pusha
xor
pop
cmpsb
pusha
pusha
pop
inc
fcomip
push
aaa
nop
ja
andb
inc
loopne
pusha
addb
inc
mov
pop
std
push
imul
add
mov
inc
pusha
dec
cwtl
addb
push
jecxz
loop
pop
mov
xchg
fistpl
andb
addb
andb
js
nop
cli
ja
xchg
stos
cmp
or
push
rorl
sub
sbb
insb
push
mov
pop
mov
mov
inc
dec
loop
mov
add
loopne
push
scas
addb
sub
pop
cmpsb
rolb
daa
and
mov
inc
xor
and
movl
pop
or
lret
lahf
shrl
fcoml
loopne
xor
fstpt
cs
cmp
sbb
shlb
data16
cmp
add
imul
mov
adc
sbb
out
jecxz
std
rcll
mov
test
add
pusha
pop
imul
adc
xor
inc
and
push
pushf
ljmp
xchg
andb
lock
jns
pushf
jno
shl
dec
pushf
fdivrp
fwait
mov
sbb
int3
test
xlat
cmp
cli
std
stc
pop
and
or
mov
les
loope
pop
lods
outsl
jbe
mov
mov
rolb
and
jb
xor
jecxz
daa
mov
js
lods
loopne
dec
adc
xor
cs
loopne
in
add
adc
push
imul
jge
adc
scas
inc
and
pop
adc
pop
xchg
out
dec
cmp
inc
addb
or
test
rolb
push
lods
rolb
cmp
inc
pusha
sti
push
push
fs
ret
dec
inc
addb
sub
cmpb
mov
sub
push
loopne
lcall
mov
sarb
sub
loopne
movsb
inc
inc
hlt
push
mov
mov
subb
jecxz
jg
sub
add
mov
mov
jns,pt
scas
pusha
rcrb
cwtl
shll
lea
arpl
je
adc
cmp
shl
out
lcall
xor
inc
mov
inc
jge
lea
data16
sbb
rcrb
push
pusha
cltd
scas
loopne
pop
repnz
xchg
popf
and
ret
jl
loope
mov
or
add
and
pop
je
outsl
sub
loopne
stos
adc
mov
iret
cmpsb
mov
loope
jp
pusha
fsubrs
fdiv
dec
and
lods
loopne
mov
xor
fnstenv
fistps
cs
and
ret
shl
test
mov
leave
mov
lcall
andb
sbb
ds
mov
dec
ficompl
adc
loopne
mov
xorb
push
les
adc
and
or
fisubrs
fisttpll
out
cmp
or
pusha
add
jne
mov
bound
or
add
sbb
jg
ljmp
mov
and
dec
push
push
mov
repnz
cli
pushf
mov
pop
outsb
cmp
sbb
pusha
inc
pop
aad
lea
push
loopne
jle
mov
movsl
cmp
andb
push
add
out
xchg
pushf
jg
lock
aad
pusha
inc
sbb
mov
jl
and
mov
cmp
and
or
jmp
inc
dec
sbb
dec
iret
push
fpatan
mov
daa
mov
insl
mov
adcb
mov
jl
mov
jnp
mov
das
inc
mov
lods
rol
loop
or
leave
xor
cmpsb
pusha
mov
add
aad
daa
loop
xlat
xlat
add
and
pop
mov
daa
ret
fwait
test
mov
shlb
in
stos
dec
jbe
das
scas
dec
mov
addb
mov
insl
insb
mov
xchg
inc
jns
lcall
cmpsb
inc
add
mov
enter
mov
rolb
inc
iret
jo
in
cs
rol
in
adc
and
inc
fwait
push
aaa
gs
test
in
mov
loopne
bound
hlt
sub
addb
leave
enter
aas
xchg
pop
sbb
ret
pop
sbb
loopne
out
fldenv
ret
pop
mov
das
mov
adc
add
jne
pop
dec
inc
mov
jae
pop
add
xchg
push
outsl
pop
sahf
ficomps
mov
mov
int
mov
sbb
jge
mov
cmp
inc
adc
add
add
cmc
cmp
or
mov
sahf
pop
stos
scas
filds
mov
cmpsb
andb
aas
and
or
mov
mov
shl
add
cli
cmp
push
and
lahf
rorb
shl
jg
out
mov
mov
pop
or
dec
sti
imul
mov
inc
fists
inc
inc
sbb
mov
xchg
mul
test
cltd
push
and
cltd
enter
cmp
fs
iret
push
das
scas
push
xor
cmp
inc
shrb
add
std
xchg
cmp
in
pop
in
test
leave
push
outsl
cld
cmpsb
inc
inc
inc
pop
or
pusha
into
fisttpl
push
fsubrp
pop
mov
push
add
add
cmpb
inc
vcmpps
lock
pushf
stc
dec
xor
sti
out
ja
add
ljmp
xchg
inc
mov
lods
addb
or
mov
cltd
enter
mov
jo
popa
inc
add
lcall
sub
ret
jmp
sahf
mulps
loopne
sbb
mov
xor
pusha
shlb
jae
mov
loopne
js
popa
xchg
arpl
sbb
shll
or
xchg
fidivl
xchg
add
lret
adc
imul
xor
es
fcoml
push
pop
xchg
repz
lret
rorb
loopne
fsubrl
cmp
xchg
sbb
out
loopne
and
and
mov
jo
add
pop
lock
jl
push
mov
xor
jl
and
mov
jle
sbb
add
ljmp
in
je
cmp
push
sbb
lret
data16
in
push
mov
call
aas
and
int3
outsl
pop
and
jo
sbb
test
xchg
test
inc
adc
out
out
fwait
xchg
push
stos
rolb
mov
sub
mov
mov
pusha
push
ret
andb
push
push
inc
fnsetpm(287
test
ret
jns
lret
jg
xor
xchg
push
les
arpl
and
mov
in
pop
sbb
push
outsl
jmp
and
movsl
cmp
mov
add
adc
jg
and
loopne
inc
mov
and
cmpb
xor
mov
or
sbb
and
addb
jecxz
imul
cltd
jns
push
testb
popa
lods
pusha
inc
inc
pop
jnp
fwait
ss
xor
andb
fcmovbe
sub
inc
adc
dec
sub
mov
xor
inc
loopne
loopne
jecxz
cmc
adc
js
stos
inc
inc
stos
adc
sub
loopne
mov
mov
test
inc
inc
imul
sti
xchg
pusha
add
enter
repnz
shlb
aaa
cmpsl
xchg
sub
adc
pusha
cmp
pop
shlb
stos
add
cmp
shl
int
jbe
cwtl
cmp
pusha
add
push
ret
rol
inc
daa
sub
pusha
sti
movsl
or
movsl
cltd
loopne
dec
add
fs
mov
pusha
loopne
dec
sub
sub
testl
sbb
aam
jge
call
pushf
xor
lret
or
and
loopne
aas
sbb
test
dec
inc
adc
lcall
mov
and
push
rolb
xor
mov
pusha
dec
push
xchg
cld
data16
insl
add
dec
xor
insb
cmp
and
cs
mov
xchg
imul
ja
mov
pop
pop
inc
xchg
cmpsb
pusha
mov
fstps
xchg
popf
jo
repnz
lock
mov
mov
leave
mov
sub
dec
or
push
int
and
or
loopne
xchg
lret
cmpsb
addb
addb
inc
pusha
rcll
pusha
das
push
mov
addl
ficomps
and
push
iret
roll
rolb
xchg
ficompl
xchg
loop
data16
out
dec
jge
xlat
incl
jbe
ret
mov
repz
pop
fcmovnbe
aaa
cmp
cmc
xchg
cs
sar
ss
mov
inc
das
or
mov
in
push
call
xchg
mov
push
push
pop
data16
subl
cmp
xchg
inc
inc
insb
out
in
inc
push
imul
add
enter
subb
pusha
xchg
sub
pop
jbe
repz
inc
gs
sbb
sbb
repnz
sub
rcrb
dec
add
pop
jae
push
repnz
repz
loopne
mov
inc
dec
in
push
shlb
lcall
xor
push
shl
sahf
out
inc
sahf
fcoml
movb
mov
repz
mov
mov
ss
jecxz
mov
xchg
mov
inc
rcr
test
jns
mov
lahf
mov
mov
rclb
ror
push
stos
pusha
add
imul
daa
pop
inc
add
mov
mov
mov
rol
adc
push
repnz
out
dec
jecxz
inc
js
inc
js
mov
pushf
xchg
xchg
cmp
add
mov
and
andb
add
sbb
sub
rcrb
aad
and
add
ds
mov
jl
fmul
jmp
scas
loopne
push
mov
inc
cld
xchg
imul
sub
lea
out
jmp
adc
mov
mov
inc
pop
loopne
lods
loope
mov
loopne
jnp
out
push
cmpsl
aam
pop
aam
movsl
pop
lock
and
aaa
imul
xlat
ficompl
xchg
lea
mov
xchg
mov
ss
enter
das
mov
xor
int3
lds
pop
enter
sarb
aaa
xchg
lock
lcall
and
pusha
ja
pop
or
pop
push
fistpll
fists
mov
andb
push
pop
cwtl
into
imul
mov
hlt
or
adc
xor
and
pop
addb
pusha
loopne
pushf
add
sarb
push
orl
push
addb
sub
add
push
mov
rolb
inc
hlt
ss
fimuls
xor
inc
sbb
bound
inc
jbe
pusha
loopne
inc
aad
mov
pop
cmp
add
pop
xor
push
addb
rclb
es
test
mov
inc
loop
test
xor
pusha
ja
rorb
loopne
movsb
andb
leave
pop
mov
rcrb
ss
in
adc
add
sub
int
sub
nop
fs
add
loopne
scas
cmc
mov
inc
dec
dec
cmp
rolb
pop
sub
inc
add
mov
and
mov
xor
pusha
pusha
daa
pop
dec
shl
mov
lds
in
jns
icebp
add
rcrb
rcrb
in
rolb
pusha
fstpt
pop
and
inc
rorl
ja
test
inc
shlb
sub
rol
lods
add
std
or
add
out
pushf
ljmp
pusha
mov
and
jle
loopne
jp
fisubl
cmp
mov
mov
mov
adc
mov
in
xchg
adc
inc
add
mov
mov
andb
xchg
pusha
mov
adc
addb
mov
dec
xchg
xor
inc
shll
mov
hlt
or
mov
mov
jne
mov
dec
add
inc
cli
mov
jo
movsl
pushl
dec
movsl
stos
sbb
movsb
add
decl
adc
rcrl
int
ljmp
aam
add
mov
push
jns
adc
outsb
aad
iret
daa
jae
sub
push
push
mov
dec
xor
sbb
pop
mov
fsubrs
inc
aad
outsb
sbbl
sub
inc
es
and
lret
in
aam
imul
fistl
mov
hlt
adc
cwtl
cmc
xor
movl
push
push
and
outsl
mov
dec
jmp
jnp
or
adc
call
rcr
pop
daa
cmpsl
mov
test
mov
mov
ds
shrb
std
mov
aam
mov
dec
je
rol
sbb
test
lods
fucomip
lods
loopne
sub
loopne
push
xchg
dec
leave
pop
arpl
mov
sbb
aam
es
cmp
in
iret
out
mov
pusha
sub
scas
andb
insb
xchg
mov
rolb
sbb
jne
jecxz
mov
test
loopne
adc
dec
in
in
mov
pusha
pusha
aas
daa
inc
and
mov
inc
rcr
xchg
into
sbb
xchg
xchg
loopne
outsb
mov
cmc
and
and
add
inc
jns
sbb
test
inc
sahf
shrl
inc
mov
les
lahf
xchg
loope
inc
shl
jb
pusha
pusha
movsl
andb
pop
outsb
inc
hlt
les
push
out
stos
or
pusha
loopne
jp
pusha
loopne
jns
inc
push
pop
push
push
xchg
outsb
jecxz
inc
inc
test
mov
int3
paddb
gs
lahf
clc
mov
jnp
mov
push
lods
pop
mov
ss
pop
stc
fcomip
push
mov
push
popf
mov
imul
mov
inc
int
inc
loopne
idivw
and
adc
adc
fisubl
je
xor
fwait
jmp
add
nop
or
out
adc
add
jecxz
jo
andb
adc
mov
in
jb
xchg
imull
out
fbld
mov
outsl
cltd
adc
stos
add
pusha
lds
jmp
ja
ljmp
xchg
das
pop
dec
adc
mov
repz
das
ds
or
inc
idivb
xlat
add
inc
sbb
xchg
and
cltd
sub
lods
pusha
loopne
fsubrs
add
adc
or
and
shlb
add
mov
loopne
and
adc
xchg
leave
cmp
dec
add
mov
jno
mov
divl
and
imul
test
loopne
aam
rol
mov
xlat
out
out
ljmp
dec
xchg
sub
and
lret
movsb
mov
repz
int
icebp
pop
jg
mov
and
jo
faddl
and
popl
mov
les
cld
popa
pop
mov
loop
insl
inc
xchg
ja
js
addb
jmp
pusha
lock
shll
pusha
loopne
fdivrp
xor
jne
lds
fbld
push
pop
jmp
adc
jecxz
mov
lcall
test
jle
mov
add
pusha
mov
andb
push
add
jns
clc
in
fnstsw
or
xor
das
mov
test
mov
cld
test
xchg
into
lods
and
cmp
enter
lret
cltd
in
loopne
mov
pop
hlt
pop
addb
out
pusha
add
lcall
fcmovu
and
pop
sbb
mov
shrl
add
jle
outsb
pushf
pop
and
pop
mov
sub
nop
lods
movsl
xlat
pop
les
mov
inc
mov
mov
jno
push
mov
test
in
loopne
cmpsl
rcll
cmc
cltd
or
pop
mov
push
dec
sbb
fwait
mov
pop
data16
add
fldenv
xlat
jmp
aad
xchg
push
or
iret
stos
jle
push
add
call
in
jge
bound
dec
inc
scas
mov
push
movsb
shlb
sbb
fisubrs
lods
pusha
rcl
movsb
mov
in
lret
shlb
pop
sub
popf
inc
mov
fdivs
jmp
inc
hlt
inc
test
cmp
dec
adc
into
and
pusha
imul
jle
and
pusha
sub
rolb
xor
add
mov
xchg
sbb
in
mov
cld
ljmp
addb
ljmp
imul
and
mov
cmpsb
rol
mov
pop
mov
mov
fbld
mov
xor
xor
push
pusha
add
and
nop
repnz
xchg
and
mov
add
cltd
pmulhuw
and
and
loopne
loopne
gs
jae
inc
jno
xchg
mov
icebp
out
xchg
pop
outsl
mov
dec
cmp
loopne
adc
aam
push
fldcw
sahf
xor
dec
sbb
mov
fld
xor
pop
test
aas
out
jno
lock
std
out
dec
jmp
mov
cs
adc
andb
sub
sarb
in
popa
pop
lock
xchg
xchg
ja
fdivrl
mov
lea
and
aam
pusha
orb
mov
popf
xchg
and
pop
add
and
jnp
int3
jmp
stos
ja
loopne
xlat
iret
hlt
addb
mov
pusha
shl
das
call
orl
cmp
mov
dec
and
into
cwtl
in
mov
jecxz
test
inc
mull
addb
add
mov
and
lcall
mov
push
es
mov
loopne
xor
loopne
in
loope
mov
xor
sbb
inc
mov
inc
cmpsl
sbb
xor
clc
addb
dec
xchg
push
loopne
mov
pop
and
and
and
sbb
fs
xchg
fwait
pop
jns
pop
std
pusha
cs
mov
mov
loopne
sbb
add
orb
inc
mov
add
in
ficompl
loopne
mov
adc
inc
add
jnp
inc
inc
cmp
pop
jl
xchg
mov
mov
shll
shlb
roll
stos
shlb
mov
push
gs
add
pop
out
xchg
push
aad
add
call
mov
mov
mov
sub
mov
lcall
inc
pusha
loop
mov
mov
out
xlat
repnz
or
addb
dec
or
shlb
pusha
addl
loopne
mov
or
and
add
add
std
cmovnp
adc
sub
mov
pop
mov
rolb
and
dec
mov
shlb
adc
inc
add
es
and
mov
shll
and
scas
pusha
loopne
push
je
loopne
fmuls
rolb
add
js
shl
inc
pop
pop
add
aas
cwtl
pop
sbb
fstp
cmpsl
stos
inc
add
int
shl
in
sub
mov
cmp
xor
add
mov
jno
sbb
fidivl
xor
pop
mov
popa
cli
stos
ja
cmp
add
loopne
mov
pop
shlb
or
repz
fcom
aam
insl
and
fs
pushf
jle
push
and
popa
mov
cmp
cmpb
and
add
bnd
and
and
pop
stc
movsb
rol
jecxz
pusha
inc
push
int3
push
ja
adc
xchg
je
filds
repz
add
mov
lret
xlat
sub
mov
sub
shll
add
call
pusha
rorb
add
dec
sbb
pusha
xor
aad
aam
pushf
xchg
and
mov
les
add
jno
ds
fldt
inc
add
arpl
cmp
jle
stos
pusha
shrb
cld
test
add
bound
adc
loopne
shlb
enter
sahf
stos
andb
pop
test
jecxz
mov
jns
jno
add
and
pop
insb
sub
xorb
rcl
cmp
mov
lock
jns
add
cmc
test
add
mov
add
pusha
inc
sbb
or
mov
rolb
lret
shl
scas
ficoms
mov
andb
pop
vmwrite
xor
hlt
mov
sub
add
xchg
pop
rcrl
in
in
jbe
pusha
rorb
or
inc
and
pusha
pusha
pop
pop
push
or
add
sti
das
mov
cmp
xlat
xor
fstpl
lods
fisubs
push
dec
mov
or
add
or
and
int3
test
and
xchg
xchg
cld
fwait
lahf
out
inc
add
sarl
divb
pusha
loopne
and
shll
jle
adc
xlat
pop
sub
sar
cmp
xor
cmpb
adc
std
inc
sbb
popf
push
leave
cmc
aad
pop
pop
push
xchg
mov
xchg
dec
sub
loopne
std
inc
into
fs
sbb
mov
or
push
jae
cwtl
xor
lods
std
inc
orl
xchg
fwait
loop
in
mov
mov
mov
ljmp
push
lahf
xor
inc
add
dec
mov
and
add
loopne
xchg
or
cmc
cltd
js
int
jns,pt
cli
frstor
pusha
mov
pop
and
imul
and
shlb
mov
je
push
mov
sbb
sub
add
sub
xchg
imul
inc
inc
sub
int
ror
cmp
lock
loopne
mov
popf
in
out
aas
adc
jmp
stos
and
test
decb
and
jmp
call
stos
andb
mov
lods
addb
and
xor
pop
mov
push
cmp
rclb
mov
xchg
xchg
rcll
loope
loopne
inc
insb
ljmp
cmpsb
add
adc
inc
int
mov
add
cmp
inc
rcll
stc
mov
pop
dec
xchg
cmp
rcrb
inc
xor
testl
imul
inc
sub
inc
push
addr16
in
loopne
test
loopne
mov
popa
pop
movsl
loope
mov
andb
loope
iret
xor
les
xor
jecxz
xchg
mov
jo
mov
xchg
cmpsl
js
jbe
addb
adc
cld
das
adc
jg
push
test
and
inc
sbbb
dec
jmp
xchg
jmp
ja
jae
pusha
jl
out
fcomps
sub
xchg
inc
aad
mov
inc
iret
sub
mov
outsl
inc
pop
cmc
inc
test
mov
mov
sarb
sarb
inc
xor
int3
lds
xchg
in
ret
mov
fimuls
pusha
loopne
bound
jle
sbb
push
sbb
mov
add
adc
or
jl
add
and
pop
add
push
pusha
jo
notl
pop
dec
jl
je
xchg
push
mov
fisttpl
addb
xlat
lahf
loope
pop
call
imul
sub
clc
add
orb
mov
sbb
std
mov
data16
loopne
jge
inc
xor
jns
jb
jle
imul
addb
or
mov
rcll
ja
or
testb
out
mov
sbb
addr16
cmp
mov
and
jns
jp
xchg
rorl
imul
scas
cli
rorl
adc
orb
and
rolb
rcrl
fs
loopne
dec
cmp
je
mov
pop
mov
add
sub
ror
fsts
dec
mov
shlb
sbb
hlt
negl
cmp
lahf
or
xor
shlb
add
shlb
inc
cwtl
notb
xchg
shlb
andps
jp
xchg
push
ficomps
in
shll
and
pushf
cmpsb
pusha
pusha
fcmovu
lahf
adc
cli
jne
movsl
out
in
mov
mov
sub
pusha
push
gs
pop
add
inc
pop
add
aaa
sar
pop
popf
cmp
movsl
push
xchg
pop
push
and
pop
into
cmpsl
out
dec
mov
stos
shl
and
inc
add
test
sarb
icebp
sub
adc
test
rclb
mov
pusha
pusha
ret
add
pusha
xrelease
xorl
mov
add
loope
add
push
push
fidivs
or
add
jle
inc
add
gs
xchg
and
inc
push
andb
ss
sbb
push
jg
divb
xor
mov
shl
in
xchg
ss
notb
mov
addb
xor
xchg
adc
popf
jmp
sub
orb
mov
inc
add
mov
mov
loopne
repnz
addb
jmp
jbe
insl
loopne
jb
and
add
pop
push
ja
adc
sub
inc
dec
cmp
jmp
std
fistpll
jg
and
les
repz
add
movsl
cmp
and
mov
loop
and
jae
cs
and
insl
pop
ds
rolb
pop
shlb
loopne
mov
sahf
in
std
inc
hlt
hlt
les
sbb
fstpl
movsb
add
aas
sahf
test
inc
xchg
inc
stos
add
fwait
icebp
cmpsl
ret
jns
mov
inc
xor
inc
mov
jno
dec
cld
lret
ss
mov
pop
daa
sub
cli
and
fiadds
add
insb
xor
or
jns
inc
ljmp
mov
xchg
inc
in
cmp
test
pusha
nop
sahf
or
mov
cltd
jnp
lods
shr
cmp
lcall
loopne
mov
xor
xchg
cmpsl
addb
and
in
mov
cmc
mov
push
sbb
push
les
aam
mov
popa
leave
or
lret
ficoms
fcomps
gs
push
and
mov
push
xchg
cmp
daa
pushf
cmp
and
enter
inc
and
jl
loopne
jno
and
pushf
xchg
cwtl
leave
clc
test
add
inc
jecxz
xor
shlb
mov
addr16
addb
aaa
fimull
mov
or
mov
pop
add
jg
or
and
jl
pusha
and
mov
sahf
mov
add
rclb
cmp
je
shlb
push
dec
cltd
push
andb
outsl
xchg
or
inc
cli
and
inc
add
pop
pop
addb
negl
adc
hlt
out
xchg
out
inc
ja
push
enter
jle
add
add
mov
loopne
inc
pushf
cmp
inc
stc
iret
jmp
shl
flds
and
inc
popf
pusha
cmp
dec
pop
shr
stos
sub
and
imul
jbe
shr
test
and
inc
sar
cmp
sbb
inc
mov
movsb
loopne
sti
pop
aas
lret
int
sub
mov
add
ficomps
js
adc
add
pop
icebp
jno
andb
ret
jg
outsb
mov
ficoms
add
pop
or
rorb
inc
rclb
xor
pusha
loopne
and
xor
movsl
xchg
xchg
lock
and
scas
mov
cmp
adc
xor
lods
jns
mov
pop
mov
andb
shl
loope
mov
addb
loopne
loopne
sbb
and
mov
sub
add
stc
dec
fldcw
pop
xrelease
or
mov
mov
and
sbb
cmp
mov
cmp
xor
or
orb
mov
and
pop
jbe
ret
outsb
cmp
imul
test
mov
cwtl
lret
mov
mov
jl
rol
das
or
xor
and
adc
jns
rorl
jge
mov
jo
ja
add
and
jmp
dec
xchg
xchg
mov
rclb
hlt
cltd
mov
loopne
sub
adc
dec
lret
test
add
xchg
jg
pop
roll
insb
inc
addb
pop
ss
inc
cmp
mov
inc
dec
cmpsl
scas
shl
cmp
rolb
add
loopne
popl
int
sub
fdivrl
xor
ljmp
add
push
int
enter
and
cld
pop
and
fxtract
sub
mov
adcb
mov
and
ficoml
adc
aaa
sbb
cmc
movsb
add
jns
inc
inc
push
mov
ss
sub
in
pop
inc
sahf
lock
sbb
ss
stos
int
shlb
add
inc
mov
mov
loopne
sub
dec
mov
xor
pop
cmpsb
shlb
shl
testb
call
mov
mov
shl
sbb
loopne
lcall
mov
cmp
cld
jb
sub
and
loope
dec
shrl
andb
add
push
push
outsl
push
repnz
loopne
data16
push
loopne
sub
popf
adc
mov
or
pop
ret
xlat
bound
jmp
mull
add
rolb
push
jmp
mov
inc
cmpsl
out
inc
mov
and
int
mov
and
cmp
and
mov
sar
mov
roll
add
add
or
fcmovb
imul
add
push
mov
aas
add
sub
loopne
and
cltd
xchg
repnz
aad
mov
dec
test
pusha
arpl
jg
icebp
sbb
xchg
rcrb
adc
cmc
sbb
mov
pusha
and
pop
mov
push
cld
adc
mov
adc
daa
mov
test
in
jne
pop
scas
add
xor
push
mov
mov
pop
in
stos
sbb
out
sub
pusha
sbb
in
xor
and
test
loopne
ja
mov
pusha
jp
loopne
in
and
add
push
push
push
shlb
loopne
movb
xchg
cmp
push
dec
xchg
and
pop
aam
dec
cmp
cld
into
fucomip
sbb
push
sbb
add
pop
xor
pusha
std
adc
sbb
aas
inc
es
test
add
mov
loopne
imul
sbb
sbb
scas
loopne
jg
cli
std
pop
xor
out
rcr
mov
imul
lock
jae
and
inc
pusha
xor
ret
add
mov
mov
loopne
stc
ss
push
fbstp
cmpsl
and
inc
outsl
lahf
aas
sub
dec
jbe
addb
mov
push
shl
lahf
add
and
sbb
mov
mov
stc
mov
in
xchg
cld
out
jl
ljmp
daa
mov
and
lcall
mov
out
cmpsl
ficomps
dec
xchg
mov
outsl
fstps
ficoms
loope
lock
insl
andb
or
jne
imul
or
add
mov
rolb
pop
stos
ss
cmc
lret
and
inc
rorb
mov
xchg
push
adc
arpl
adc
or
rcrb
mov
loope
popf
cmp
movsb
rolb
xchg
push
test
cmc
mov
mov
ljmp
mov
divb
cwtl
add
sub
inc
jmp
je
test
xorb
ljmp
inc
fidivrl
sub
ja
popa
mov
inc
fwait
lea
fldlg2
lahf
cmpl
mov
mov
sub
shll
inc
lods
fsubrl
xor
mov
int
inc
mov
leave
enter
and
xchg
fwait
mov
cmp
shlb
inc
mov
pusha
and
and
les
push
addb
and
or
imul
lock
outsl
test
add
sbb
xchg
inc
insb
or
repz
data16
int
pusha
inc
cmc
xchg
pop
sub
and
popf
inc
jns
xchg
pusha
sub
loopne
xor
outsb
jp
push
push
mov
out
pop
adc
and
cmp
adc
ljmp
jl
mov
int3
inc
mov
add
repz
stos
nop
rorl
jp
je
pop
or
add
xchg
mov
lods
inc
add
jle
cli
cmpsl
cltd
sahf
loopne
cmc
mov
inc
add
outsb
jecxz
jae
xchg
test
mov
jb
aaa
popf
mov
and
and
and
add
arpl
xchg
mov
lds
cmp
or
gs
int
hlt
mov
fadds
adc
mov
add
movb
enter
xchg
jle
sub
pusha
jns
cmpsb
and
movsb
shlb
mov
mov
xlat
out
jne
pushf
mov
xorl
pusha
adcb
pushw
and
lret
mov
jge
add
loopne
pop
mov
mov
into
rorl
cmp
and
or
inc
iret
mov
inc
lahf
mov
push
mov
lcall
push
and
xchg
mov
pop
pusha
je
xor
and
rdtsc
pop
jo
push
mov
add
addb
adc
inc
xor
and
xchg
dec
jg
cmp
sub
fistps
mov
lahf
in
sub
and
out
sbb
andb
xor
js
jb
inc
mov
outsb
push
inc
rol
in
call
iret
inc
rolb
addr16
iret
mov
jno
inc
loopne
jmp
and
scas
add
mov
jae
mov
pushf
or
adc
popf
js
cs
loopne
xor
push
inc
and
inc
enter
lcall
scas
mov
mov
ffreep
sub
loopne
loopne
lods
add
out
mov
js
lds
jb
push
call
inc
inc
cmp
inc
into
xchg
cmpsl
lock
inc
sbb
sub
jle
inc
and
loopne
fcmovne
pop
sub
push
cwtl
sub
inc
dec
add
and
in
push
loopne
scas
push
cmp
jg
inc
inc
imul
rolb
lods
fcoms
out
call
and
push
inc
xchg
pop
mov
movsb
and
orl
orb
push
sbb
adc
dec
inc
imul
sahf
int
mov
stos
mov
andl
and
loopne
repz
int3
shrb
jp
ss
jl
mov
add
movsb
loopne
mov
loopne
ret
add
lea
repnz
or
pop
decl
fwait
loopne,pn
jo
pop
push
pop
pop
aaa
sahf
push
aas
xchg
jl
sub
and
add
xchg
mov
outsb
gs
aaa
jmp
or
xor
nop
mov
and
dec
pop
jl
enter
inc
and
and
and
stc
pop
es
shrb
int
roll
cmpsb
pusha
loopne
xchg
aaa
lock
or
xchg
insb
stc
jb
pop
mov
inc
xor
andl
and
aam
in
pushf
cs
add
mov
dec
inc
cmp
sbb
push
cmpsb
inc
and
bnd
stc
jb
xchg
xor
xchg
adc
jns
je
out
lcall
jp
xchg
pushf
rorl
inc
or
sbb
addr16
cli
sub
xchg
dec
xchg
ds
outsl
fistps
fmull
fwait
mov
cmp
and
andb
pusha
mov
out
test
inc
jb
inc
add
adc
add
out
loop
shrb
add
and
int
stos
loopne
int3
pop
inc
xor
mov
cmp
jne
pop
sbb
dec
mov
sbb
jecxz
inc
loopne
in
xchg
lcall
std
negb
dec
mov
dec
imul
cwtl
into
ret
andb
fisttpl
push
add
pushf
stc
pop
scas
rolb
add
mov
mov
inc
and
fbstp
ficomps
popa
js
ret
add
pusha
sarb
lock
es
mov
mov
loopne
adc
mov
dec
lahf
pop
lret
xor
jns
add
loopne
pusha
inc
into
xchg
insl
lcall
jo
andb
fdivl
rolb
in
inc
and
ss
inc
and
and
ret
stos
shl
mov
push
jmp
pop
add
shrb
in
subl
and
dec
loopne
jmp
mov
xchg
sahf
sbbl
jmp
and
pusha
and
inc
adc
mov
mov
push
fsubl
mov
inc
add
and
rolb
mov
mov
dec
aaa
and
pop
mov
push
mov
pop
addb
mov
or
inc
cmpsb
addb
pop
mov
cli
cmpsb
inc
inc
and
inc
test
cmpsb
inc
xorb
mov
pusha
mov
and
inc
xchg
insb
jp
mov
and
into
arpl
es
and
divl
aad
adc
rcrb
inc
fidivrl
and
jo
push
cmp
or
mov
pop
sti
lcall
les
out
lods
out
addb
xor
andb
jne
jp
xchg
popa
sub
and
fldt
add
mov
mov
mov
dec
mov
aas
call
popf
xchg
or
jmp
cmp
mov
fistps
leave
loop
mov
push
inc
loopne
add
push
push
add
and
pusha
shlb
loopne
mov
repnz
int3
test
xorb
fcom
sbb
cmp
and
add
flds
sarb
neg
dec
aaa
pop
negb
jp
dec
std
pop
ret
and
xchg
mov
aaa
fcmovnb
dec
and
inc
in
js
and
pop
cmp
add
xor
ljmp
pusha
and
mov
loopne
sti
cmc
andb
dec
push
mov
loope
push
and
cmp
add
inc
je
xor
adc
add
mov
add
addb
out
pop
pop
jb
sbb
iret
cmc
push
mov
cmp
arpl
movb
add
push
and
mov
lret
out
cltd
inc
push
add
and
and
rclb
jmp
sbb
arpl
add
shl
sub
insl
inc
lock
mov
and
sahf
stc
nop
sbb
mov
out
leave
insl
bound
pop
inc
adc
add
dec
outsl
xchg
arpl
push
andb
mov
add
andb
push
shl
neg
sbb
add
inc
pusha
sbb
cmp
rolb
rolb
push
push
xchg
addr16
rcll
mov
clc
add
pusha
out
mov
out
repz
sub
shrb
inc
loopne
jmp
cmp
insb
or
das
inc
mov
data16
inc
add
lea
leave
or
inc
pushf
cmp
and
sub
orb
mov
popa
es
loopne
sbb
scas
mov
std
jnp
into
into
push
pusha
inc
inc
out
shlb
sub
fs
movsb
and
sub
ja
outsl
ret
pop
inc
and
mov
xor
pop
clc
jp
cmpsl
jl
stos
loopne
cmpl
xchg
cli
fldl
and
mov
add
adcb
addr16
icebp
dec
push
sub
pusha
or
pusha
jbe
and
xor
dec
dec
inc
pop
mov
call
andl
and
pushf
lahf
pop
mov
mov
adcb
pop
pusha
push
jge
inc
add
mov
add
add
add
jb
stos
pushf
aaa
out
icebp
inc
test
shlb
stos
mov
add
ret
add
push
jmp
pusha
andb
nop
shrl
and
mov
add
cs
xchg
das
sbb
add
les
shrb
out
andb
loopne
sahf
std
ss
jle
lret
insl
cmc
add
nop
add
and
add
mov
mov
mov
push
insb
jle
andb
mov
out
loopne
xor
jg
rol
cld
in
gs
mov
test
pusha
sbb
inc
xlat
fiaddl
int
add
pusha
inc
fisttpl
addb
mov
mov
add
orb
and
jbe
mov
adc
pop
je
shll
inc
cmc
sub
jb
loopne
push
sbb
mov
lock
decb
mov
shll
je
scas
and
sub
out
dec
sub
shlb
pusha
pusha
loop
sbb
cmp
mov
and
rolb
and
jecxz
out
xchg
inc
lcall
dec
xor
sbb
xor
outsl
fimull
loopne
addl
rcrb
jge
and
gs
test
leave
popf
mov
jp
lret
sub
pusha
shl
lahf
loopne
xchg
andb
pop
dec
inc
je
cmp
inc
and
or
and
jg
adc
mov
icebp
mulb
insb
push
in
pop
or
inc
aas
out
push
push
lret
movsb
and
insb
nop
adc
inc
loopne
inc
ror
rolb
xchg
insl
sub
add
mov
roll
inc
andb
cmp
ljmp
inc
or
out
imul
stos
mov
imul
pusha
addb
mov
shlb
sbb
mov
pop
into
outsb
dec
sub
fidivrs
push
fisttpl
xor
fsubrl
pusha
out
icebp
xchg
ljmp
lret
ficomps
inc
cmp
insb
data16
dec
pop
aas
mov
and
sub
sub
shl
je
pop
pop
inc
xor
cli
ss
and
or
xchg
out
and
and
loopne
xor
jne
fcmovnu
pop
inc
sbb
lahf
xor
pusha
icebp
push
inc
jmp
inc
inc
sub
inc
jp
inc
push
inc
add
sub
xorl
bnd
xor
push
push
or
add
popa
push
mov
pusha
stc
arpl
sub
pusha
inc
mov
pop
jns
repz
scas
mov
mov
jl
or
daa
mov
rolb
scas
and
cmp
jl
push
mov
and
mov
jmp
sbb
pusha
dec
xchg
rcll
and
fwait
dec
insl
pop
jecxz
arpl
xchg
xchg
sbb
sub
stc
scas
push
in
mov
xor
or
jb
push
jnp
fwait
or
test
xchg
push
mov
bound
lahf
bound
nop
imul
and
mov
mov
lds
xchg
jnp
xchg
fmulp
xchg
adc
mov
loopne
mov
iret
mov
xchg
adc
dec
pop
lcall
loopne
pop
ss
xchg
leave
ret
aad
add
repz
push
sahf
cmc
adc
lret
mov
mov
addr16
lahf
dec
scas
and
mov
pusha
adc
inc
sbbl
jb
and
ss
clc
pop
inc
cmp
cmpsl
pop
sahf
push
push
addb
sub
sbbb
lret
push
lret
inc
in
lea
scas
scas
inc
inc
fstpl
adc
add
jmp
mov
and
adc
fbstp
shlb
lcall
mov
mov
les
sbb
pusha
fsubrs
loopne
arpl
out
stos
jmp
or
cmp
push
dec
adc
add
mov
xchg
in
inc
inc
addb
andb
cli
inc
push
and
mov
aas
cmc
into
gs
xor
rcrb
loopne
inc
ja
add
and
pop
test
pop
lcall
addb
sub
push
and
mov
cltd
mov
cmp
xor
add
outsl
rcrl
js
push
push
aas
outsb
pop
aam
lcall
adc
lcall
fmulp
jb
call
sbb
mov
pavgb
xor
add
add
cmc
jno
imul
shr
rolb
loop
mov
aaa
cmpsb
add
jmp
ss
test
lods
cmc
shl
fdivp
xor
mov
addb
mov
cmp
or
add
sub
lea
and
or
loopne
incl
dec
pop
repz
rorb
clc
dec
in
loopne
mov
cld
test
add
push
mov
sub
add
sti
xchg
cmpsl
popf
les
loopne
sbb
mov
sub
mov
mov
mov
push
out
rorb
or
inc
rcrb
and
mov
fbstp
mov
or
mov
mov
inc
or
inc
jge
and
dec
stos
add
int
ss
pop
adc
add
test
cmp
call
std
mov
dec
enter
mov
movsb
addb
test
int3
sahf
mov
jne
adc
cmp
add
and
mov
xchg
rcrb
sbb
jg
sub
rorb
pusha
xchg
add
push
add
daa
jb
and
inc
jne
addb
fmull
add
inc
addb
xchg
mov
jmp
xchg
rolb
sbb
add
loopne
in
jle
mov
inc
and
inc
pop
sbb
and
and
pushl
psrld
cmp
jl
aad
fadd
sahf
push
mov
pusha
mov
icebp
sbb
jo
andb
clc
pop
pusha
push
pop
rorb
pop
jns
xor
cmpsb
loopne
push
out
dec
pop
sahf
cltd
mov
icebp
fldenv
mov
and
repz
dec
pshufw
push
imul
mov
lods
and
jecxz
test
push
inc
movsl
aam
or
mov
outsb
cmp
mov
add
loopne
xlat
pop
mov
andb
dec
fidivs
mov
loopne
mov
stos
andb
popa
sbb
and
push
lods
fs
add
shlb
push
sub
or
adc
push
mov
shll
test
add
cmp
adc
imul
and
test
ds
rol
cmp
pop
sbb
and
insb
jp
loopne
imul
std
mov
shl
addr16
and
mov
sbb
add
mov
jns
aad
and
loopne
mov
and
add
loopne
sahf
ljmp
inc
arpl
push
adc
pusha
dec
or
pusha
xchg
sti
mov
jno
cli
pop
push
and
and
subb
and
mov
test
mov
iret
dec
lea
scas
movsb
and
test
ds
rol
inc
add
cmc
insl
adc
push
inc
cmp
loopne
incl
rorb
pop
cld
lret
sbb
add
add
or
and
and
sarb
jmp
xchg
inc
xchg
sti
movsl
adc
cld
mov
cmp
mov
enter
push
insb
adc
adc
loope
mov
shrl
and
ss
mov
add
sbb
add
and
movsb
loopne
mov
sarb
inc
in
add
add
dec
xchg
clc
jne
and
subb
pop
push
mov
rorb
test
subb
add
and
mov
pop
scas
inc
and
shlb
add
xlat
jns
and
pusha
fildl
leave
fstl
outsb
loope
mov
outsl
loopne
jecxz
ja
adc
xchg
add
cmp
repz
test
mov
mov
fists
cld
cmpsl
cmp
fidivl
les
mov
mov
shlb
jae
mov
inc
test
pusha
inc
notl
jnp
rolb
je
xchg
inc
mov
mov
aam
arpl
add
loop
xor
mov
xchg
xchg
jl
ret
push
mov
add
out
dec
mov
shlb
inc
or
inc
add
push
lds
mov
add
mov
sub
pop
xor
dec
jb
outsl
movsb
andb
pop
add
mov
inc
fcoms
in
or
sub
add
pop
cmp
inc
and
mov
pop
andb
mov
and
and
or
and
and
arpl
sub
inc
addl
das
mov
add
hlt
add
cli
xchg
out
ss
lahf
inc
pop
jle
push
inc
stos
and
imul
mov
loopne
bound
sbb
mov
add
orb
lea
sub
mov
addb
dec
arpl
arpl
insb
jp
lret
dec
sbb
loopne
dec
cmp
and
or
outsl
push
loopne
lods
shlb
pop
sub
ficoms
push
push
lret
test
insb
add
mov
mov
adc
xor
and
loopne
stos
mov
fs
frstor
lock
push
ja
fadd
test
sarb
pusha
and
pusha
shlb
addb
add
push
jae,pt
or
mov
rep
lahf
pop
sbb
faddl
out
push
out
stos
or
out
mov
int
push
pushl
jg
cli
or
jo
add
jb
addb
rcr
negl
dec
sarl
xchg
cli
arpl
cli
cmp
shll
sbb
xor
je
lods
pop
jbe
xor
adc
adc
jl
fisubl
xor
sti
mov
loopne
aam
mov
push
inc
jmp
les
ljmp
addb
or
subb
jnp
inc
inc
mov
mov
pop
lret
and
pop
call
and
adc
jle
rcl
das
stos
and
inc
add
add
ret
pop
cmpsl
jle
iret
xchg
into
ret
repz
lods
andb
adc
sbb
mull
inc
and
push
rolb
fstpt
jle
ljmp
imul
adc
ficomps
pop
mov
addb
int
jecxz
fadds
mov
rolb
call
push
or
pusha
xor
fucomi
jp
mov
mov
jb
lods
dec
mov
mov
jae
push
sbb
inc
cmp
xchg
pop
mov
movsb
add
mov
lret
sbb
inc
xchg
xor
cld
sub
and
fsubs
dec
pop
cmpsb
add
hlt
aas
lahf
mov
mov
sbb
mov
mov
inc
mov
ja
add
or
add
sub
sti
repnz
xlat
inc
pop
push
push
int
out
push
add
pop
pop
mov
and
fwait
fs
jns
xchg
pop
popl
test
pusha
lret
divb
insl
shlb
cld
in
dec
sti
repnz
andb
xchg
jl
enter
addb
orb
repnz
mov
xchg
aad
mov
loop
aad
mov
add
xor
pusha
fisttpll
fwait
mov
out
inc
les
arpl
fbld
addb
iret
mov
pop
adc
fistl
mov
rorb
loopne
pusha
and
lods
and
adc
shlb
pusha
loopne
cmp
inc
add
sbb
es
fidivrl
xor
ret
scas
pusha
mov
cmpl
cmp
mov
jae
js
jp
mov
and
inc
es
and
in
pop
icebp
outsl
in
add
roll
xchg
pop
and
xchg
add
mov
mov
push
fiadds
push
loopne
pop
xchg
mov
fbld
add
push
push
jge
add
mov
mov
ljmp
icebp
xchg
les
dec
and
adc
addb
rcl
pop
in
inc
add
cmp
jo
stos
add
xchg
aad
mov
loopne
hlt
das
jp
pusha
or
loopne
pusha
add
xor
or
mov
shll
inc
and
jecxz
xor
jbe
push
nop
adc
pop
enter
iret
pop
scas
push
or
fidivrs
and
add
rorb
and
stos
cmp
sbb
inc
sti
lock
sarb
sub
loopne
xor
pop
icebp
xor
add
jle
adc
filds
andb
hlt
and
lods
insl
test
sbb
sbb
mov
scas
shl
setns
mov
jb
jno
mov
mov
pusha
mov
cmp
sbb
inc
cmp
jae
sbb
xchg
outsb
inc
out
dec
dec
jno
and
mov
and
mov
mov
cli
scas
pusha
pusha
aam
xor
mov
movsl
jmp
pop
cld
in
push
jge
movsb
rolb
pop
push
out
mov
inc
lret
scas
int3
les
add
add
aam
cmp
daa
mov
popf
mov
repz
xchg
cmp
and
pusha
mov
loopne
shl
iret
addb
rorl
add
les
inc
movsl
cmpsl
fwait
iret
cmpsb
mov
mov
movsb
and
rcll
dec
add
ljmp
or
adcb
jb
out
gs
xor
scas
scas
loopne
stc
add
cmp
inc
popf
test
movsl
in
add
shl
add
and
dec
arpl
pextrw
pop
sub
loopne
xchg
jg
push
fstps
push
dec
ss
mov
pusha
outsb
or
xor
in
dec
jg
addb
ss
stos
rolb
mov
pop
aaa
loope
lret
ljmp
pusha
inc
push
pusha
and
jge
mov
fidivrs
pusha
add
mov
mov
adc
add
addb
mov
xchg
rcrb
aam
cmpl
pop
scas
and
jg
push
out
mov
pusha
rcrb
pusha
mov
cli
sbb
stc
add
pusha
sbb
or
sarb
stc
les
and
mov
mov
and
les
add
lock
jmp
hlt
or
fsubs
inc
lret
sub
dec
lock
push
nop
daa
jp
add
add
add
mov
inc
dec
push
xchg
mov
jnp
ret
push
inc
dec
outsl
push
std
inc
nop
pop
dec
imul
xchg
aaa
inc
je
xor
dec
fnstsw
mov
and
mov
aad
clc
loopne
add
sbb
pusha
inc
inc
and
mov
sbb
add
rolb
pusha
loopne
xchg
ljmp
insl
cmp
mov
fistl
andb
data16
and
push
pop
inc
call
ret
mov
mov
add
shl
push
cmp
jo
lock
mov
in
dec
stos
inc
pusha
jno
andb
mov
fistpl
in
fildll
inc
cmp
in
push
dec
add
das
jl
sbb
scas
andb
or
mov
mov
jnp
xchg
jmp
shlb
sub
cmp
adc
fists
inc
inc
mov
mov
lret
adc
inc
and
subb
rol
aad
xchg
iret
aas
or
mov
add
mov
or
add
push
push
xchg
mov
insl
jns
mov
add
pusha
pop
ficoml
fs
or
add
rol
xchg
ds
mov
vprotb
jmp
mov
mov
cmpsl
test
loopne
in
movsl
inc
das
test
mov
movsb
rol
loopne
sbb
dec
xor
imul
inc
in
aam
addb
fistps
shlb
cwtl
popa
dec
jle
gs
mov
add
or
inc
fsubp
jecxz
inc
xchg
xchg
sahf
test
push
cmpsb
mov
xor
xchg
jno
pop
lret
aad
pop
xor
pop
repnz
or
loopne
sub
addb
pop
push
lock
lret
dec
or
lea
repnz
fisttps
xchg
in
ret
and
add
push
in
jnp
bound
and
loopne
dec
xchg
inc
je
mov
and
repz
and
mov
add
pop
fidivl
xchg
or
and
mov
inc
push
std
jb
mov
sub
rolb
jmp
popf
inc
xor
add
pusha
addb
inc
jbe
and
and
mov
lret
addb
dec
cwtl
sahf
outsb
pop
outsb
mov
xor
lods
sbb
or
add
and
int3
pop
out
jne
xor
negl
roll
mov
mov
iret
xchg
xchg
jb
inc
enter
jg
fwait
andb
lahf
xor
imul
pusha
sbb
mov
in
sbb
aad
fs
inc
jno
outsb
cmp
jae
sbb
jbe
into
mov
sbb
xor
andb
xor
or
pusha
xchg
cmc
or
loopne
xor
dec
addb
js
fstpl
cmp
lock
mov
in
inc
je
ja
andb
pusha
push
cwtl
cmp
loopne
sbbl
rolb
adc
mov
xchg
je
pop
push
inc
or
outsb
popa
es
inc
inc
jbe
push
fwait
dec
loopne
sub
jb
mov
inc
fmul
jle
mov
fs
iret
loop
push
shlb
cmp
bound
mov
and
js
lea
mov
add
