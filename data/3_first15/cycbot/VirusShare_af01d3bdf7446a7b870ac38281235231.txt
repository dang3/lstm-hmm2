adc
rolb
mov
xor
or
xchg
push
mov
add
movsl
test
mov
add
dec
lods
shll
add
lds
je
jb
mov
mov
loope
pop
jb
mov
pop
mul
add
mov
adc
mov
jne
fs
cmova
dec
test
add
adc
stc
xor
jmp
or
cmpsb
xor
mov
mov
cmp
leave
mov
call
lcall
mov
add
data16
bound
mov
or
add
ljmp
add
add
int3
daa
lock
rolb
mov
shll
and
stos
lcall
xchg
and
add
rolb
mov
clc
adc
and
mov
sub
add
mov
push
add
or
mov
rolb
mov
aam
int3
addb
dec
into
fwait
sub
test
out
call
push
xor
jecxz
movsb
jmp
add
mov
cld
cwtl
lods
mov
push
test
pop
aam
pop
inc
xor
adc
sub
push
fwait
xchg
pop
clc
adc
mov
xchg
enter
and
mov
mov
add
in
insl
fiadds
mov
cmp
jb
mov
or
cmp
add
mov
add
add
xor
mov
cmp
jno
rolb
mov
jl
ret
ljmp
or
dec
xor
mov
mov
mov
mov
mov
pop
pop
aad
call
gs
jmp
cmp
ds
mov
mov
push
daa
shl
lds
leave
out
add
mov
out
scas
mov
into
add
mov
sbb
push
fistpll
lods
stc
xor
loop
mov
rolb
mov
xchg
cmp
mov
mov
sub
add
daa
or
add
adc
sbb
fcompl
jbe
mov
add
repz
mov
stos
jg
mov
mov
pop
das
xor
mov
jmp
push
stos
mov
cmpsl
xchg
jne
mov
mov
sub
scas
dec
fstl
dec
inc
add
pop
pop
push
inc
enter
pop
in
lret
arpl
fsts
repnz
mov
add
mov
dec
aad
add
shll
mov
cltd
xchg
mov
mov
out
xor
in
enter
and
add
lcall
push
add
cmp
or
xchg
in
vpunpckhbw
pop
mov
xchg
or
aad
sub
mov
les
mov
enter
bound
mov
pushl
lahf
jge
cltd
out
xlat
nop
add
pcmpeqw
add
testl
cmc
popl
add
in
shll
rolb
mov
sbb
xchg
xor
mov
xchg
adcl
rolb
mov
adc
mov
hlt
cmp
xor
arpl
scas
push
data16
add
sub
mov
addb
aaa
push
cmp
xor
sbb
rolb
mov
add
push
mov
cmp
cmp
stos
stc
pop
xchg
add
add
sbb
jnp
pop
push
pushf
pop
orl
push
insl
lahf
dec
roll
int
mov
cltd
pop
mov
xchg
add
shll
and
fdivr
push
jne
push
add
add
cmpsb
repz
and
mov
inc
es
inc
movsb
mov
push
add
mov
push
jl
scas
cli
dec
jb
mov
ds
cmp
scas
mov
imul
mov
inc
add
in
test
mov
ret
lods
mov
adc
pop
dec
inc
add
test
pop
popf
bound
mov
pop
scas
movsb
jge
inc
add
or
xor
mov
stc
cmp
xlat
lock
int3
mov
mov
loope
add
mov
add
mov
insl
mov
add
imul
add
jns
xchg
sbb
cmp
iret
fs
popa
and
cmp
xchg
js
add
jge
xchg
add
jle
jge
sti
and
mov
sbb
push
add
mov
ljmp
mov
into
mov
add
outsb
sbb
clc
mov
add
mov
icebp
mov
inc
add
cs
fs
push
lock
mov
mov
or
mov
inc
test
dec
mov
mov
fimull
mov
outsb
pop
movzwl
int3
mov
xor
adc
add
mov
fsub
sbb
lret
shrl
add
shrl
test
add
in
xor
in
xor
mov
xchg
xchg
dec
loope
add
mov
add
mov
add
mov
add
mov
sti
inc
cmp
out
aad
pop
mov
imul
push
je
sub
add
es
rcll
int3
pop
leave
sbb
jno
sbb
int
or
pop
ja
xchg
pop
shll
xor
mov
scas
jnp
add
mov
add
sbb
add
mov
dec
dec
or
add
in
outsb
xor
andl
dec
popl
add
mov
add
add
pop
addb
xchg
insb
and
mov
flds
dec
sub
js
std
push
inc
and
add
jge
inc
add
mov
sub
add
bound
mov
stos
clc
sub
add
cld
cmp
add
mov
cmp
sar
loop
mov
rolb
pop
push
add
loopne
mov
jle
jl
push
mov
add
add
add
insl
add
data16
push
add
fiaddl
hlt
loope
jg
mov
and
mov
add
push
add
mov
cs
xor
mov
mov
jmp
into
mov
mov
pop
or
push
add
jo
mov
test
sub
lock
inc
iret
jae
add
sbb
pop
xchg
push
add
sbb
add
pop
sbb
push
lcall
mov
jle
add
push
add
mov
aaa
and
mov
add
add
lods
push
rol
add
push
in
mov
pop
or
add
mov
add
pop
mov
mov
out
leave
mov
mov
nop
add
les
nop
add
push
sub
sbb
xor
mov
in
mov
or
xor
mov
stc
mov
shll
sarl
add
jge
cld
dec
insl
push
in
inc
mov
jb
mov
add
inc
gs
clc
push
lret
in
add
pop
fdivrl
aas
in
icebp
inc
add
add
pop
xchg
add
mov
mov
cld
push
and
ds
inc
ret
cmc
and
mov
mov
jmp
fs
aaa
scas
outsl
or
add
mov
mov
lcall
mov
cmc
fwait
jae
push
scas
and
mov
stos
rolb
mov
addb
cmpsb
movsl
xchg
add
mov
mov
mov
rolb
mov
or
xor
sbb
mov
xchg
xlat
cltd
gs
add
mov
jmp
mov
lds
mov
aaa
mov
add
mov
adc
adc
mov
sbb
test
or
xchg
add
movsl
dec
mov
mov
lret
add
mov
or
aam
add
aad
add
mov
fidivrs
xchg
cmp
jle
pop
mov
fwait
adc
mov
push
daa
addr16
mov
jmp
adc
mov
dec
jno
test
adc
add
mov
gs
mov
stos
xchg
push
pop
cmp
inc
xor
mov
mov
add
mov
pop
add
int
inc
sbb
scas
dec
into
sub
popf
cld
xchg
mov
xchg
push
sbb
in
and
mov
pop
mov
daa
gs
add
and
cs
mov
out
cmp
add
imul
fstpl
enter
mov
mov
push
out
inc
aam
xorl
outsl
mov
scas
sar
cli
pop
cs
shrl
sbb
lahf
inc
add
mov
pop
clc
inc
inc
jns
aaa
adc
lock
add
add
mov
pop
stos
les
pop
push
icebp
test
dec
movsb
pushf
es
clc
push
pop
xor
push
add
mov
add
mov
inc
add
adc
loop
mov
arpl
enter
rolb
mov
dec
fimuls
pop
mov
xor
mov
add
add
adc
imul
and
adc
add
loope
and
lods
shll
mov
loopne
mov
ret
mov
push
add
jne
bound
mov
sahf
outsb
xor
cs
mov
mov
in
cmpl
xor
mov
add
jle
push
and
arpl
pop
jle
mov
mov
dec
outsl
test
rolb
mov
and
mov
and
mov
hlt
and
mov
add
xchg
ret
sti
ljmp
xor
sub
or
mov
fildl
outsl
xlat
loop
mov
les
mov
stos
jns
es
dec
sub
imul
inc
hlt
push
fdivs
js
add
push
sub
dec
pop
add
popa
mov
push
and
xor
jmp
mov
rolb
mov
rolb
jb
mov
add
mov
add
lods
js
push
neg
cs
into
lret
add
test
sbb
jo
mov
sbb
add
ret
out
gs
add
mov
xchg
push
add
outsb
mov
dec
std
mov
mov
mov
hlt
mov
mov
add
add
jecxz
mov
sbb
mov
and
daa
aam
loopne
mov
lret
push
jmp
sub
std
sbbl
data16
lds
cmp
jecxz
mov
mov
addb
sbb
out
add
or
sub
mov
mov
jle
dec
stos
cmc
jle
sti
lret
mov
in
jae
xchg
addb
popf
push
addb
ds
popa
clc
loopne,pn
mov
outsb
adc
or
aam
mov
idivb
addb
bound
mov
add
pusha
add
mov
ja
insb
xchg
les
into
cwtl
scas
sahf
mov
add
xchg
add
mov
lea
cmpsb
push
cmpsl
loopne
mov
inc
mov
push
ds
or
mov
test
mov
add
in
sub
push
push
push
cld
call
sub
es
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
enter
jl
pop
in
mov
adc
mov
fldenv
scas
fmul
mov
outsl
icebp
fidivl
clc
neg
sbb
aad
cs
mov
add
add
inc
int3
push
inc
add
dec
sbb
adc
cmp
loopne
mov
or
std
in
je
add
add
mov
sti
fldl
xchg
push
lock
cmp
mov
and
mov
push
push
add
pop
sbb
push
lahf
test
cmp
pop
jbe
arpl
add
adc
mov
ljmp
fidivrl
aaa
repz
imul
mov
out
je
cmpsl
sti
pusha
add
jg
aam
addr16
rolb
cmpsb
cmpl
mov
mov
mov
jecxz
adcl
push
shll
mov
mov
repz
and
mov
ljmp
leave
das
out
ss
gs
add
xchg
add
ja
add
mov
into
inc
add
mov
scas
das
cmp
mov
daa
dec
sbb
mov
int
filds
pop
addb
mov
mov
jns
add
loopne
mov
inc
mov
aas
mov
adc
mov
add
mov
aad
add
mov
mov
adc
mov
mov
mov
inc
jo
mov
mov
lea
insb
dec
mov
rolb
mov
add
dec
dec
negl
call
jg
pop
jae
pop
ficompl
mov
push
inc
add
xor
mov
adc
xchg
ss
or
cmp
or
push
jae
xor
xchg
outsb
xchg
mov
jecxz
xchg
fistpl
cmp
out
push
or
add
les
lea
mov
add
mov
pop
push
push
xlat
hlt
test
sbb
loopne
mov
daa
cmpsb
and
mov
das
dec
lods
inc
dec
push
push
repnz
add
inc
add
mov
push
and
mov
add
sbb
lock
mov
add
fstpt
add
addb
ja
cltd
out
loopne
mov
imul
mov
mov
dec
mov
mov
add
cwtl
and
mov
mov
outsb
sahf
js
push
jg
faddp
cmp
ret
xchg
adc
mov
lret
ret
imul
out
xchg
add
mov
mov
ja
cmc
mov
adc
mov
int3
imul
mov
test
mov
xor
ja
icebp
imul
mov
adc
mov
mov
cs
mov
aam
xor
mov
cmp
jecxz
add
mov
add
movb
mov
cs
out
add
sahf
mov
adc
orl
sub
stc
mov
add
sub
rcll
jns
xchg
push
add
push
add
xchg
cmp
je
sbbl
mov
push
aad
mov
rolb
mov
adc
xor
test
add
ss
in
mov
inc
dec
sub
dec
addb
lret
add
jne
ror
pop
jnp
add
sbb
adc
andl
test
loop
mov
aam
in
pop
out
movsl
inc
rolb
mov
cs
cs
cmp
push
js
mov
jge
daa
mov
cmpsl
or
mov
mov
pop
fstpt
daa
shrl
hlt
pop
insb
fidivrl
add
fcmovnb
and
repnz
push
aam
add
arpl
add
push
add
sbb
pushf
arpl
or
in
mov
cld
push
fidivl
clc
dec
aad
jle
cmp
rolb
mov
aad
dec
clc
add
leave
inc
add
adc
mov
add
add
mov
mov
and
popf
iret
cmp
movb
add
popw
lret
xlat
ds
xchg
daa
mov
lods
std
mov
sub
fcmovb
add
lock
repz
jmp
pop
mov
inc
push
addb
leave
rolb
mov
dec
lahf
fdivrs
stos
rolb
mov
add
out
fmuls
repnz
add
xor
scas
mov
add
dec
test
adc
mov
cmc
pop
out
and
xor
pop
popa
mov
lret
dec
or
mov
cmp
add
in
adc
dec
dec
push
inc
add
mov
mov
push
xor
add
sahf
data16
or
orl
sbb
mov
add
mov
scas
mov
aaa
pop
xchg
inc
lds
add
mov
mov
cmpsb
push
add
sbb
mov
add
inc
or
xor
push
add
mov
cmp
cmp
test
subl
loopne
mov
push
stos
sub
out
mov
mov
push
fs
mov
add
ret
outsl
call
inc
or
addb
cmp
int
pop
das
mov
in
sub
scas
add
fcompl
sub
sysret
lret
rolb
mov
add
add
add
aad
jns
add
xor
mov
mov
cmp
or
test
mov
adc
cmp
inc
add
fldl
adc
mov
dec
es
mov
fldt
pop
pop
and
mov
popa
mov
or
mov
mov
enter
xor
sbb
sbb
aad
cmp
les
jbe
adc
leave
jne
mov
ds
stos
fsubl
scas
test
mov
mov
add
mov
mov
sbb
clc
mulb
mov
dec
leave
pop
cmp
add
jnp
sbb
fwait
mov
and
mov
mov
clc
scas
rcll
sbb
add
add
mov
jno
fdivr
push
dec
add
mov
aam
sub
xchg
add
stos
jno
xchg
jb
mov
sub
xchg
mov
das
sub
pop
aam
add
pop
sub
add
add
jo
mov
jmp
leave
ljmp
jb
mov
pop
std
jl
jne
xchg
adc
faddp
adc
sti
add
mov
movsb
insb
xor
mov
test
jae
fldenv
loop
mov
adc
mov
or
jecxz
sbb
popf
cld
mov
aam
pop
mov
pop
scas
out
or
dec
sub
fisubrl
out
sahf
pop
icebp
in
xor
or
cmpsb
hlt
outsl
and
sarl
addb
cli
icebp
push
add
push
push
addb
push
mulb
divb
dec
or
and
mov
add
cltd
mov
out
mov
imul
add
add
push
add
fiadds
mov
arpl
js
push
push
add
mov
push
sbb
push
cwtl
xor
add
rcll
mov
add
cwtl
cli
mov
and
or
cmp
add
add
mov
add
add
push
mov
test
aas
fldlg2
cmpsl
stos
jnp
or
outsb
xor
mov
roll
mov
push
popa
xor
add
push
add
cli
ss
add
cmpsl
shll
fxch
std
xchg
shl
add
dec
and
mov
add
lahf
and
mov
in
adc
cmp
add
les
mov
dec
pop
enter
add
add
mov
add
and
sbb
mov
sbb
mov
push
aaa
loopne,pn
mov
sbb
roll
xchg
add
and
scas
jns
add
cmpsb
data16
shrl
push
add
mov
mov
jno
add
mov
aam
mov
add
mov
xor
mov
or
enter
dec
xor
mov
jle
sbb
cmpsb
cmp
cmpsb
int3
and
pop
test
test
adc
mov
add
add
jo
mov
add
push
xor
lock
adc
mov
jge
js
jne
sub
add
dec
lret
rolb
cmp
repnz
jne
ret
jbe
xchg
xchg
std
jb
mov
or
jns
dec
jno
xor
or
jge
cwtl
mov
std
scas
filds
inc
add
dec
xchg
insb
push
pop
jns
dec
fstps
js
pop
adc
mov
push
movsl
out
sahf
jns
cmp
add
mov
xor
mov
lret
adc
mov
mov
sub
add
scas
pop
fimull
std
sbb
mov
in
mov
stc
push
add
mov
push
jne
fnstcw
mov
jnp
dec
mov
sub
repnz
addr16
xchg
cs
add
add
add
xchg
add
loope
aam
push
dec
ljmp
mov
lods
int3
xchg
add
repnz
add
or
push
push
xchg
jno
cmp
inc
clc
mov
sbb
call
xchg
cmpsl
pushf
jb
mov
in
jo
mov
repnz
imul
leave
jmp
jmp
sub
mov
mov
mov
ret
push
add
cmc
push
push
and
sbb
add
pop
in
add
stc
dec
jg
pushf
inc
addb
mov
cwtl
mov
sbb
adc
mov
pop
fdivrs
lret
adc
mov
mov
pop
mov
xadd
inc
cmp
hlt
xor
jecxz
xchg
mov
mov
hlt
jge
xor
mov
mov
mov
out
jnp
mov
sub
pusha
add
inc
mov
rcll
fs
dec
cmp
add
mov
push
add
xlat
in
dec
addb
popf
in
cmc
xor
ret
mov
push
inc
add
scas
test
js
mov
and
hlt
daa
mov
sub
rolb
mov
xchg
and
in
xchg
add
cli
call
imul
flds
add
rolb
or
rolb
ss
adc
enter
cmpl
jnp
add
add
add
rcl
aam
inc
inc
add
mov
cld
sti
lret
mov
sub
lock
mov
adc
lahf
popa
xchg
mov
mov
jecxz
pop
insl
test
flds
jle
jmp
lea
in
loop
mov
cmc
into
cmp
fcmovnu
roll
and
mov
arpl
fcomp
jp
add
mov
pop
mov
mov
mov
mov
jecxz
or
sbb
lock
mov
xlat
push
add
addr16
mov
xchg
sbb
mov
insl
jae
sub
mov
addr16
add
addb
mov
mov
add
enter
add
inc
icebp
xor
mov
mov
inc
icebp
add
mov
icebp
dec
pusha
add
jo
mov
lahf
xchg
pushf
dec
or
dec
pop
hlt
xchg
fsubl
add
iret
lods
fadd
les
and
add
into
push
add
add
add
pop
ds
mov
fidivs
and
inc
xor
pusha
add
xor
mov
add
hlt
rolb
mov
add
mov
mov
cmp
add
pop
popf
in
fidivrs
xor
in
jp
or
cmp
xchg
in
jo
mov
xchg
call
jg
add
sub
sub
mov
fs
pop
push
and
xchg
aad
mov
mov
mov
inc
imul
or
xchg
jl
lea
lret
push
add
inc
sbb
sub
adc
enter
sti
ja
mov
xchg
lea
aad
in
scas
adc
mov
mov
inc
xlat
or
sub
adc
iret
xchg
add
jno
dec
lahf
cmp
in
push
mov
push
add
aaa
xor
je
push
add
imul
mov
imul
mov
add
push
fwait
inc
add
in
call
cld
cmp
in
add
mov
jge,pn
scas
cwtl
out
sub
pop
pop
test
mov
add
lea
add
mov
and
shrl
dec
cs
jmp
dec
stos
fiadds
rolb
addl
leave
js
cmpsl
jp
enter
mov
dec
or
add
jne
cmp
jle
mov
mov
and
mov
push
mov
lahf
pcmpeqb
adc
and
xchg
cmp
fs
inc
inc
adc
push
mov
mov
pushf
or
jae
jno
pop
lcall
mov
add
movsl
xor
mov
mov
jne
add
mov
lcall
inc
frstor
movsl
xor
mov
add
cmpsl
movsb
pop
inc
add
sbb
inc
mov
rolb
pop
in
dec
cli
test
imul
rcrl
cmp
and
add
test
add
imul
inc
add
data16
cwtl
mov
dec
clc
xlat
jb
mov
sahf
sbb
mov
imul
cmc
ja
cmp
dec
or
cmp
lock
fsubrl
andl
xchg
dec
mov
mov
jl
mov
add
fwait
test
lds
lods
mov
add
fsubr
mov
mov
lahf
pusha
add
inc
mov
xchg
add
inc
add
add
repnz
dec
or
repnz
mov
add
mov
out
divb
fdivrl
les
aad
arpl
lock
mov
inc
add
pop
adc
mov
fwait
cmp
arpl
add
arpl
and
in
ja
dec
daa
mov
mov
add
mov
xchg
cmp
add
clc
mov
jl
inc
fwait
lret
ds
or
test
push
ljmp
add
mov
mov
scas
xchg
and
cmp
xlat
cwtl
jle
mov
loopne
mov
push
les
pop
sub
mov
push
mov
int
push
ret
jbe
push
les
shll
push
pushl
mov
add
jb
mov
sbb
je
add
mov
xor
fs
add
sbb
cmc
insl
pop
pop
jle
test
push
rolb
fimull
into
data16
mov
inc
icebp
aam
cs
xchg
pop
jb
mov
fisubrs
push
jnp
add
iret
jbe
mov
flds
mov
jae
mov
out
pop
mov
add
lcall
cltd
inc
jp
pop
lock
sub
sbb
mov
add
mov
inc
xchg
adc
mov
int
add
repnz
fldl
out
dec
adc
push
in
inc
xor
pop
pop
push
pop
inc
pop
xchg
sub
or
and
ret
mov
and
inc
in
leave
testb
add
xchg
lods
fiadds
gs
lock
cmp
add
insl
repz
mov
mov
out
mov
mov
fldcw
mov
dec
or
mov
add
inc
add
mov
add
pop
enter
jae
lock
xchg
add
or
je
mov
or
add
repnz
mov
pop
movsb
int
pop
shll
mov
fwait
cmpl
mov
lea
data16
adc
jmp
add
pop
lock
lock
dec
jmp
push
cmp
movsl
sub
push
mulb
jp
popl
sub
add
negl
ljmp
sub
add
clc
loop
mov
mov
fs
sub
daa
fcoml
cmp
add
jecxz
jno
adc
mov
add
mov
test
add
aad
loop
mov
dec
ret
mov
mov
mov
cmpsb
xchg
sub
add
dec
mov
add
mov
mov
mov
pushf
push
in
pusha
add
push
lods
push
and
mov
mov
nop
add
sub
out
sub
and
mov
mov
mov
push
sub
cld
fmuls
cmpl
xor
mov
add
lock
rolb
enter
push
scas
xor
out
pop
ret
sub
inc
jecxz
adc
mov
xlat
jne
add
xor
sbb
out
jb
mov
sbb
repnz
or
add
repz
fwait
inc
push
xchg
bsr
rolb
mov
je
pop
sub
jae
xor
inc
mov
push
sti
fistl
out
movsl
mov
mov
push
rol
jb
mov
arpl
mov
into
pusha
add
call
psrld
mov
adc
movsb
dec
mov
adc
mov
mov
sub
test
jo
mov
or
mov
mov
or
mov
mov
ret
inc
or
cmp
aaa
cmp
leave
enter
xor
cs
add
add
sarl
lock
dec
or
ljmp
out
data16
dec
lods
and
sub
xchg
add
es
add
nop
add
mov
mov
out
fadds
cltd
mov
add
out
dec
xchg
movsl
pusha
add
or
push
fdiv
add
add
cmp
pop
mov
dec
mov
add
das
xchg
popf
stos
test
fcmove
push
mov
cld
jge
js
stos
push
add
testl
jecxz
inc
jne
xchg
jp
sbb
add
adc
mov
push
leave
lock
mov
aad
cmpsl
sub
or
fadd
imul
cwtl
rorl
add
add
add
jbe
lods
cmp
nop
add
mov
mov
stos
out
loopne
mov
mov
in
pop
addb
mov
add
int
mov
mov
add
add
dec
test
repnz
add
xchg
pusha
add
js
lods
ljmp
push
jo
mov
push
test
sub
and
mov
jmp
add
outsb
or
add
pusha
add
mov
test
push
jp
lret
mov
adc
mov
dec
mov
leave
movsb
xchg
vmovdqa
mov
pop
addr16
mov
loopne
mov
add
xor
daa
ficoms
add
add
pop
mov
add
add
sbb
ja
out
outsb
outsb
mov
scas
icebp
cmc
push
adc
add
sysret
inc
bound
mov
push
add
add
movsb
in
rolb
mov
dec
push
imul
add
add
inc
add
mov
in
sub
sbb
xchg
ja
cmpsb
pop
jbe
mov
mov
add
add
mov
add
push
add
add
add
ds
data16
fbld
mov
pop
mov
idivl
out
mov
push
mov
push
add
jmp
test
add
shll
pushl
mov
aad
mov
mov
mov
jmp
add
add
addr16
add
mov
mov
push
inc
push
pop
out
stc
dec
in
gs
dec
mov
mov
inc
mov
add
mov
jp
add
inc
push
add
je
insb
push
insl
xchg
sub
add
rcrl
jecxz
std
sub
movsl
jo
mov
jp
push
adc
mov
or
test
cwtl
or
test
add
add
mov
or
or
add
push
out
xlat
add
sbb
mov
add
adc
mov
mov
sbb
add
pop
test
cmp
stos
icebp
add
xlat
pop
add
mov
hlt
roll
inc
mov
add
mov
mov
push
out
inc
xchg
dec
out
cmp
pop
mov
mov
fimuls
mov
lcall
ljmp
mov
jnp,pt
out
fdivl
dec
push
add
pop
ja
add
mov
test
cli
loope
fbld
mov
je
or
fcmovnbe
add
fdivs
dec
cmp
lret
repz
mov
jle
and
mulb
add
mov
mov
pop
and
cld
test
mov
add
mov
and
mov
and
sbb
mull
mulb
fsubrl
lahf
imul
mov
mov
push
addb
dec
mov
add
subl
aad
cmp
sub
repz
pop
xor
mov
es
test
mov
add
add
lahf
dec
xchg
jnp
jb
mov
in
addr16
add
push
adc
lods
mov
rolb
mov
dec
jno
push
add
dec
loope
jo
mov
rcll
mov
dec
jg
repnz
add
lret
sub
add
mov
mov
outsb
addb
pop
xchg
mov
push
dec
push
enter
mov
cltd
jp
paddsw
mov
test
dec
add
rolb
mov
aam
cs
push
stos
cmp
xlat
fadds
stc
jg
jge
add
in
push
xor
add
sahf
fidivrs
push
add
xchg
popf
rolb
mov
pushf
loope
mov
and
xor
loop
mov
iret
sbb
push
loopne
mov
fisubrs
xchg
add
dec
push
dec
sahf
lcall
add
add
xor
mov
test
add
out
out
insb
rorl
stc
es
add
push
popa
ret
and
lsl
test
jns
bound
mov
rolb
mov
lret
cmpsb
jne
mov
incl
and
sbb
mov
cmp
add
pop
adc
mov
jo
mov
mov
add
out
adc
push
sbb
mul
add
out
add
jae
xor
bound
mov
jmp
pop
insb
cwtl
movaps
add
and
mov
daa
push
add
mov
xor
add
mov
add
add
jb
mov
mov
mov
sbb
add
in
mov
rolb
lret
add
jg
bound
mov
js
push
nop
add
daa
int3
rolb
mov
into
cmpsb
or
sub
or
enter
push
pop
jbe
push
pop
cmp
add
push
jns
fildll
mov
ja
adc
mov
cmp
into
mov
add
sbb
fcmovnu
clc
daa
stos
pop
mov
jbe
push
test
das
mov
sbb
sub
into
jle
pop
mov
ret
jno
add
add
add
mov
and
cs
pop
inc
add
add
sti
sbb
mov
mov
mov
jl
out
insl
iret
cld
rolb
mov
sbb
add
cmpsb
and
popf
arpl
mov
pop
xor
xor
pop
cmp
out
xor
mov
jbe
add
aam
adc
mov
enter
icebp
jbe
cmp
xchg
add
sub
mov
jp
xchg
and
cmp
lods
rorl
test
add
cld
mov
ds
mov
int3
fcomps
xchg
sub
add
mov
pop
cld
and
mov
mov
aaa
and
xchg
shll
lret
rolb
mov
add
int
add
mov
lock
out
bound
mov
add
push
iret
addb
mov
rolb
mov
ror
mov
fwait
movsl
sub
dec
fstpt
add
adc
movsb
es
nop
add
push
sub
pushf
push
ret
decl
add
add
mov
jne
jnp
add
dec
addb
push
clc
repnz
fdivrs
add
mov
movl
mov
push
add
out
leave
enter
mov
not
cltd
inc
je
add
mov
pop
mov
pop
jnp
cmp
rolb
mov
mov
sbb
insb
push
cwtl
repnz
pop
iret
movsb
mov
add
add
and
arpl
jl
add
or
add
mov
sbb
insl
divl
mov
mov
fbld
out
jl
inc
cld
arpl
mov
mov
mov
rolb
mov
add
aad
push
pop
add
mov
lods
in
fistps
and
mov
and
mov
ds
mov
cmp
mov
mov
addb
xchg
loop
mov
pop
sbb
scas
pop
cmp
jmp
and
add
inc
cltd
decb
mov
mov
jb
mov
xlat
lock
xor
mov
add
fs
aad
test
std
mov
add
jge
push
add
add
gs
jmp
out
fsts
xchg
inc
add
pop
ret
jp
movsl
push
mov
addb
lcall
add
adc
daa
inc
and
add
cld
fs
mov
in
nop
add
mov
mov
xor
stos
mov
scas
adc
add
movsl
fstpl
add
lret
fs
sub
mov
sub
test
test
add
add
mov
mov
inc
add
mov
mov
pop
dec
or
imull
xor
sub
rolb
mov
adc
mov
test
into
rolb
mov
sbb
repnz
add
insl
pop
pop
gs
stos
mov
add
add
sub
out
adc
mov
mov
ret
sub
mov
xor
add
dec
xor
add
pop
in
mov
repnz
cmp
lret
xchg
inc
jl
std
xchg
enter
add
imul
ds
mov
add
mov
movsb
aaa
sti
stos
pop
jp
xchg
addb
repz
sub
inc
jmp
mov
jecxz
test
in
divb
arpl
mov
insb
adc
mov
mov
cmc
rolb
mov
out
rcll
add
stos
sub
testl
mov
mov
mov
mov
shll
flds
jns
mov
icebp
adc
push
lret
in
cmc
xlat
push
push
jb
mov
xchg
stc
aam
mov
addl
mov
ficompl
xor
mov
fwait
ret
mov
add
das
addb
lcall
sahf
pop
repnz
lock
std
jecxz
mov
test
add
mov
ljmp
xchg
inc
loope
or
inc
add
cmp
push
popf
jp
xor
mov
arpl
bound
mov
adc
mov
push
push
mov
xor
mov
adc
jae
out
push
jge
pop
ret
xor
mov
imul
and
mov
cli
addb
iret
cs
sbb
clc
xchg
add
stc
sub
or
cmp
cmp
sbb
mov
add
and
mov
ds
loope
add
add
adc
mov
rolb
mov
pop
loopne
mov
pop
out
xor
mov
addr16
or
add
mov
mov
mov
repz
sbb
mov
ret
sahf
mov
das
int
pop
xor
pop
adc
js
push
notb
lods
fdivrs
fidivrs
jl
arpl
aas
jns
lock
repz
mov
adc
mov
add
mov
insb
mov
leave
ret
js
sti
dec
inc
lock
mov
add
add
testl
inc
dec
pop
jg
dec
xchg
sub
add
xchg
jle
sbb
xor
mov
and
mov
xchg
mov
mov
in
and
mov
add
rolb
shrl
jnp
add
add
sbb
icebp
filds
push
push
push
pop
jecxz
pop
negb
pop
lret
mov
mov
jne
add
leave
in
adc
add
push
inc
push
jmp
add
push
icebp
lcall
bound
mov
sbb
mov
pusha
add
daa
jne
add
in
cmpsb
dec
data16
mov
push
clc
cmpsl
jle
mov
mov
mov
add
jg
jo
mov
xadd
jo
mov
xor
dec
jmp
in
xor
mov
ja
cmpsb
cmp
and
mov
jecxz
sub
movl
or
add
adc
cmc
out
fistl
mov
gs
push
add
std
cmp
std
pop
xchg
add
mov
push
add
rolb
mov
mov
add
push
adc
inc
add
mov
shl
add
add
aad
add
add
or
rolb
mov
mov
sbb
mov
idivb
std
iret
addb
pop
pop
cwtl
mov
inc
add
mov
shll
and
movsb
rolb
mov
lret
sbb
xchg
out
adc
add
std
adc
mov
inc
dec
mov
add
xor
mov
fdivl
pop
adc
stc
inc
xor
mov
xorl
add
mov
adc
pop
xchg
cmp
lret
or
mov
push
test
add
lcall
xchg
mov
mov
sahf
int
add
mov
add
je
outsl
test
or
mov
sub
sbb
push
dec
add
mov
sbb
sbb
push
push
add
inc
add
mov
lods
daa
sbb
adc
mov
push
aad
and
add
pop
mov
mov
add
push
fwait
adc
mov
xchg
out
xchg
arpl
mov
outsl
cmc
dec
jle
insl
fmuls
xor
mov
mov
cmp
jmp
rcrl
add
sub
mov
mov
into
das
aas
jge
dec
loop
mov
add
outsb
sbb
and
add
arpl
insl
clc
push
out
push
cmc
loope
lock
sbb
sbb
int
addb
cs
mov
jns
add
mov
mov
add
jnp
or
mov
mov
pusha
add
jmp
cmp
dec
add
out
fwait
dec
dec
jp
lcall
cmpsb
mov
add
mov
ljmp
add
lock
test
jl
add
std
imull
and
sbb
mov
mov
xor
mov
mov
or
push
test
jns
push
add
lcall
or
and
leave
mov
sti
adc
ja
cmpsl
stos
out
and
loopne
mov
sub
mov
roll
add
xor
mov
leave
pop
imul
insb
inc
add
xor
mov
stc
lock
shl
out
insl
add
repnz
mov
push
push
xlat
notb
cmp
scas
sbb
sbb
clc
leave
lods
lea
sbb
add
in
pop
jno
out
push
insb
dec
sub
pop
inc
sub
push
mov
pop
pushf
mov
xchg
rolb
mov
lret
out
movsb
mov
mov
add
dec
popf
fldt
cmc
jns
jns
add
testl
mov
sbb
add
popf
fchs
add
outsb
sub
mov
in
aad
fwait
mov
xchg
mov
lahf
lret
lret
inc
add
iret
stos
ljmp
xchg
addb
push
cwtl
nop
add
add
mov
push
sub
jge
addb
clc
fsubr
xor
jle
inc
mov
into
inc
flds
sbb
pop
or
inc
in
loopne
mov
sbb
gs
add
lock
inc
repnz
fisubrl
mov
and
repz
testb
xor
repnz
test
xchg
add
mov
xor
sbb
mov
out
sub
in
gs
mov
imul
das
cltd
lods
xor
lahf
mov
test
add
add
iret
jbe
add
mov
adc
lods
add
and
mov
outsb
jbe
add
sub
pop
popa
mov
ret
cmp
and
mov
mov
pop
jnp
or
xor
xchg
or
add
xchg
push
imul
mov
popf
and
es
mov
mov
add
ror
loope
cmp
mov
mov
subl
imul
push
lock
testl
test
popa
mov
es
pushl
mov
add
addb
loopne
mov
lret
insl
xor
mov
jne
clc
lods
fimuls
and
jp
std
pop
and
mov
xchg
mov
push
add
mov
loope
lods
mov
sbb
and
add
xchg
loope
test
icebp
fidivl
mov
mov
xchg
in
fildl
pop
mov
dec
in
jl
cmp
fwait
inc
add
cmpsb
sub
mov
xor
or
inc
add
into
lock
add
add
add
mov
lods
cwtl
fistpll
pop
sarl
xchg
std
dec
lcall
xchg
add
mov
mov
add
mov
dec
xor
mov
jb
mov
popa
and
shll
push
je
push
ret
stos
aaa
dec
xchg
lret
ds
xor
fisubrs
push
dec
imul
xchg
clc
cmp
pop
cltd
xchg
std
pop
int3
mov
xchg
push
pop
adc
add
adc
and
mov
mov
pop
and
dec
jne
daa
out
cwtl
sbb
pop
xor
add
mov
lahf
sbb
and
mov
mov
mov
jnp
addb
and
mov
xor
jle
in
add
mov
addr16
insl
mov
int
push
pop
lds
pop
xor
lods
xchg
jmp
add
mov
xchg
mov
mov
add
xor
jbe
cmp
pop
dec
sub
imulb
dec
lea
add
call
add
call
imul
les
mov
fisttpll
add
rolb
mov
mov
mov
xchg
add
add
mov
xor
in
popa
lds
fs
les
mov
fisttps
das
loopne
mov
outsl
mov
stc
sub
fcompl
cli
lret
scas
movsb
and
cmp
sub
mov
cmpl
jl
stos
daa
ret
push
lods
sbb
add
sbb
ret
addb
dec
movb
test
mov
jns
mov
mov
add
or
mov
mov
in
add
add
mov
push
das
cmp
dec
jp
add
sahf
jno
sbb
mov
xchg
inc
xor
mov
mov
add
mov
mov
xor
mov
stos
add
pop
push
mov
xor
fnstsw
fdivl
add
enter
mov
inc
add
mov
mov
push
arpl
add
adc
out
lcall
sahf
je
sub
call
les
xchg
dec
mov
or
dec
pop
ficompl
cmp
js
pop
aas
xchg
or
pop
pushf
neg
jbe
add
add
fwait
jne
out
lret
iret
cmpsl
int
xchg
cmpsb
mov
movq
pop
repnz
add
sub
mov
mov
rolb
mov
mov
mov
pop
push
in
pop
sbb
out
mov
and
mov
add
lods
dec
cmp
mov
std
in
cli
hlt
adc
dec
mov
add
scas
add
lods
adc
mov
dec
jno
movsb
cmc
int3
adc
xrstors
rolb
mov
sbb
cmp
jb
mov
cwtl
leave
mov
add
add
mov
lret
mov
jl
pop
icebp
fs
inc
inc
add
mov
adc
mov
jno
fs
into
adc
movsb
mov
jl
push
dec
push
add
sbb
mov
in
rolb
mov
idivl
iret
popf
bound
mov
sub
or
sbb
xchg
xor
mov
adc
push
sub
mov
lds
xor
mov
fmuls
sub
jmp
or
add
dec
imulb
jg
mov
xchg
add
add
popf
inc
add
insb
je
jge
mov
test
inc
sahf
imul
cmp
dec
jno
cmp
mov
pop
adc
nop
add
scas
inc
add
cmp
pop
xor
add
out
mov
pop
mov
scas
push
add
loopne
mov
mov
push
mov
add
inc
add
cmp
mov
push
add
add
add
add
add
inc
add
stc
mov
icebp
sbb
mov
jecxz
jle
fdivs
fdivl
xchg
xchg
pop
push
add
aad
sbb
test
out
mov
add
out
addl
dec
jp
sbb
rolb
addb
mov
push
add
inc
inc
add
cmpsb
xlat
ss
inc
insl
sti
psrad
mov
xor
insl
daa
adc
scas
or
jne
add
xor
mov
mov
fldcw
add
mov
or
test
imull
jecxz
add
xorl
les
stos
test
roll
fs
pushf
pop
fdivrp
aaa
inc
add
rolb
mov
sub
and
xchg
jnp
and
xor
mov
add
add
jecxz
xor
mov
sbb
xchg
add
jae
add
fistl
dec
and
int3
cmp
rolb
mov
std
addb
aam
xor
ds
add
add
xor
stos
shll
call
mov
addb
mov
mov
mov
xchg
ficoms
mov
aaa
push
mov
pusha
add
add
and
mov
jecxz
pop
fdivrs
test
pop
rcrl
mov
in
add
adc
push
fidivs
loope
cmp
cld
std
adc
scas
sub
and
mov
aaa
lea
xchg
das
mov
aam
in
cmp
mov
imul
cltd
popf
faddl
mov
mov
add
inc
mov
mov
dec
mov
add
jecxz
aas
mov
push
inc
mov
mov
lods
mov
insl
repz
pushf
push
xchg
inc
add
add
sub
sub
add
jmp
xchg
add
cmp
sub
mov
andl
push
call
adc
add
mov
add
mov
scas
jp
hlt
cld
mov
inc
mov
jg
fstpt
sub
push
inc
nop
add
pop
jle
divb
mov
mov
loopne
mov
lods
cmp
negb
leave
adc
cmp
mov
cmpsl
movsl
cmc
daa
cmp
fisubrs
mov
add
and
mov
hlt
xlat
aam
or
cmp
jecxz
imull
or
push
insl
adc
pop
mov
mov
mov
add
in
jae
loop
mov
add
cmp
mov
jno
imul
mov
mov
popa
cld
fnstenv
adc
mov
pusha
add
add
pop
out
cld
mov
xor
mov
out
je
xchg
and
and
sbb
dec
pop
ja
add
add
add
sub
add
dec
mov
jnp
add
outsb
sbb
sub
je
cmp
call
jbe
jle
insb
mov
inc
add
mov
push
sub
in
mov
lret
mov
insl
addr16
roll
mov
test
mov
sbb
add
jl
ficoml
jp
sbb
mov
mov
mov
mov
mov
jb
mov
mov
mov
mov
popa
jle
out
adc
cmp
dec
pop
cs
mov
adc
xchg
mov
mov
add
mov
xchg
pop
jae
shrl
scas
sbb
js
mov
mov
lret
pop
push
icebp
test
mov
add
add
add
sbb
fiadds
pop
push
xor
mov
jns
dec
pop
mov
pop
mov
push
add
loope
cmpsb
adc
mov
mov
inc
test
add
ror
rolb
xlat
mov
adc
add
lcall
fnsave
jmp
jnp
cli
aam
iret
or
mov
scas
jle
jp
lods
fsubs
mov
mov
mov
popf
out
add
mov
sbb
ret
cmp
or
add
mov
add
xlat
popf
xor
xchg
stos
out
sub
lret
fsubs
jnp
add
mov
jle
mov
mov
cmpsl
ljmp
insb
push
add
arpl
jmp
dec
jns
jg
cvtps2pd
mov
clc
push
dec
cli
outsb
cmpsb
pushf
js
xchg
cmp
cmpsl
cmpsb
test
and
mov
cmp
jb
mov
add
jmp
dec
xor
inc
pop
mov
mov
push
mov
xchg
int
outsb
and
hlt
pop
xor
add
mov
cmpsl
mov
and
mov
cmp
lock
add
push
sbb
add
sub
pushf
aad
xchg
add
std
sub
sbb
aas
jo
mov
add
jno
dec
inc
and
mov
add
and
cs
lret
lahf
es
pop
in
fdivrl
jne
addb
sub
add
add
or
mov
xchg
in
jns
or
xlat
and
cmp
inc
xchg
fcoml
lret
jmp
test
test
mov
add
mov
icebp
loope
gs
outsb
mov
movb
inc
sti
mov
push
ffreep
xor
mov
out
add
fcom
in
test
push
add
mov
bound
mov
mov
mov
mov
cld
pop
sbb
pop
push
mov
dec
pop
cmpsl
or
xchg
dec
lret
xorl
add
dec
mov
mov
les
clc
jle
fxch
shll
push
lods
test
cmp
xor
mov
bound
mov
lret
dec
in
sbb
jecxz
sti
repnz
pop
adc
add
pop
pusha
add
inc
mov
out
cltd
test
mov
je
mov
or
shl
inc
add
add
adc
pusha
add
rolb
mov
aam
aas
xchg
mov
in
inc
add
mov
xchg
outsl
add
mov
in
sbb
sub
inc
fsubrs
mov
dec
lock
cmpsl
mov
repnz
jns
mov
mov
jg
clc
ljmp
fists
leave
iret
movsb
out
out
popf
scas
iret
xor
and
adc
mov
and
xor
mov
mov
outsb
mov
test
lods
out
sub
cmc
insb
test
je
pushf
cmp
dec
out
lea
mov
fidivl
add
loope
add
push
adc
mov
icebp
enter
mov
ljmp
fwait
es
stos
jb
mov
dec
ret
mov
lods
inc
push
inc
out
and
mov
pop
adc
test
pop
addr16
sub
jmp
fnstcw
mov
xor
pop
inc
ficoms
cld
pop
jecxz
mov
pop
dec
ds
pop
andl
movsl
pop
sub
sbb
add
pop
mov
hlt
cmp
mov
mov
lret
fisubl
or
pop
shrd
jp
jo
mov
mov
mov
imul
outsl
lret
adc
mov
add
inc
rolb
mov
sbb
and
les
cld
jp
sub
sti
xor
bound
mov
mov
loopne
mov
jne
into
repnz
nop
add
add
mov
add
push
arpl
sbb
inc
in
push
sbb
movsl
adc
mov
je
inc
add
mov
add
adc
add
daa
jle
add
mov
mov
add
add
mov
xsha256
cmpsb
aam
xor
lock
dec
cmp
cli
xchg
aad
rolb
fs
data16
lock
fcompl
add
jbe
mov
pop
and
mov
sub
add
inc
or
ss
rolb
out
insl
rolb
mov
mov
mov
inc
mov
mov
inc
in
into
lods
sbb
pop
sub
mov
movsb
flds
mov
nop
add
int3
pop
jl
imul
adc
mov
pop
jmp
jns
test
add
mov
and
mov
ja
xchg
cmpsl
test
jmp
dec
jnp
adc
fs
pop
ljmp
cmp
xchg
repz
mov
aaa
add
push
dec
cmp
ljmp
add
push
adc
testb
mov
test
aaa
xor
add
cmp
add
mov
add
in
in
add
mov
lods
or
and
mov
pop
mov
xor
leave
add
add
add
outsb
add
js
add
cmpsb
fnstenv
jmp
push
addb
test
out
add
insb
insb
push
add
add
mov
outsl
je
jg
pop
loope
mov
sub
outsb
addb
inc
pop
ss
jb
mov
or
xor
mov
call
xor
xchg
out
enter
adc
loop,pn
mov
bound
mov
outsb
lret
cmp
data16
xchg
loopne
mov
inc
add
sbb
jb
mov
and
mov
pushf
ss
sbb
mov
mov
cwtl
push
add
mov
push
pusha
add
mov
adc
jo
mov
fcoml
aad
mov
mov
cmpsb
lret
dec
pop
push
push
fists
add
mov
in
mov
xchg
mov
call
clc
addb
aam
mov
ffreep
test
lods
loop
mov
xchg
add
push
sub
je
pop
add
mov
mov
mov
pop
cmp
push
sub
rolb
mov
into
scas
mov
pop
fisubs
mov
xor
lret
mov
lcall
add
xor
mov
xor
mov
xchg
jne
add
vcvtdq2pd
add
add
mov
mov
test
add
push
imul
add
cmc
inc
mov
pop
jp
and
mov
add
inc
dec
repz
rolb
dec
cmc
scas
cmpsl
out
loop
mov
mov
cmp
mov
inc
es
pop
iret
jg
jg
lret
cmp
rolb
mov
mov
ljmp
cmp
add
dec
cmpsl
mov
add
and
add
mov
sbb
fisubrl
add
mov
adc
add
add
mov
jb
mov
adc
mov
xor
or
mov
push
leave
pop
push
cmp
mov
pop
repz
push
mov
add
inc
movsl
sbb
push
add
mov
out
incl
mov
and
add
or
and
test
or
sbb
adc
mov
pushf
inc
add
add
sub
adc
fdivl
mov
mov
add
xor
mov
add
imul
jecxz
incl
xchg
jbe
enter
sahf
loope
inc
xchg
test
sbb
mov
mov
xor
outsl
enter
repz
mov
add
lock
cld
dec
adc
mov
fsubl
in
and
outsb
adc
imul
mov
into
jne
add
and
add
aad
cwtl
xchg
loope
cmpsl
fisubrl
iret
int3
ds
add
sahf
or
lods
mov
iret
jne
add
lret
inc
in
add
mov
push
pop
and
mov
or
out
in
push
add
add
or
lret
inc
add
rolb
mov
loop
mov
cmp
add
int3
adc
mov
addb
push
xlat
push
repnz
pop
adc
sbb
fwait
mov
mov
mov
sub
add
icebp
xor
into
adc
cld
push
add
mov
mov
je
loopne
mov
jo
mov
ljmp
iret
sbb
adc
mov
fs
das
divl
push
in
mov
leave
fiaddl
jmp
cmpsl
es
mov
cmpsb
mov
imul
add
inc
and
sub
mov
aaa
xchg
pop
aam
mov
add
xchg
imul
jo
mov
sti
testl
pop
and
xchg
cmpl
out
pop
add
add
pop
lret
stos
push
and
adc
push
mov
cmpl
or
cltd
sbb
add
push
test
add
or
add
js
mov
and
fwait
pop
enter
mov
xchg
div
dec
jg
ljmp
cmp
mov
lds
dec
inc
pop
repnz
sbb
and
mov
push
mov
sub
hlt
inc
push
jbe
sti
cmp
push
add
add
xor
mov
add
mov
cmp
pop
pop
addb
cmpsb
cmp
hlt
es
lret
stos
insb
cltd
orl
popa
and
ret
mov
mov
mov
inc
add
adc
add
lods
stos
or
cmp
lds
lds
pop
lcall
dec
adc
mov
nop
add
cmp
mov
dec
mov
cmc
or
test
iret
push
dec
cmp
das
clc
xchg
ret
das
hlt
mov
mov
lock
mov
cmp
mov
mov
mov
xchg
testl
or
and
daa
std
data16
adc
mov
mov
mov
mov
add
mov
jno
cmpsb
jmp
and
mov
scas
add
mov
popa
jle
addb
addb
mov
in
mov
vmovhps
imul
cmp
push
pop
xor
push
int
adc
lods
dec
lock
add
mov
stos
imul
add
jmp
addr16
hlt
jg
mov
cmp
add
mov
lea
fwait
in
clc
cld
daa
fisubl
mov
insb
pop
andl
mov
inc
add
mov
mov
xchg
aaa
fldcw
test
or
mov
aas
mov
mov
inc
into
out
push
and
sub
add
sub
mov
pop
sub
pusha
add
mov
mov
inc
add
xchg
add
xchg
mov
out
lock
popf
in
test
add
add
add
bound
mov
cmp
ljmp
dec
test
jl
cli
fwait
rolb
mov
std
mov
inc
add
mov
lea
dec
sti
dec
xchg
push
add
mov
xchg
fldl
lods
daa
dec
jo
mov
cmp
push
pop
xor
mov
out
jnp
or
xchg
adcl
enter
cmp
dec
and
mov
test
flds
sub
add
test
push
jl
inc
hlt
or
mov
sbb
mov
add
outsl
scas
jae
fwait
sub
arpl
add
mov
add
xor
mov
push
bound
mov
ja
mov
mov
addl
pop
jl
add
ds
or
in
inc
jbe
pusha
add
add
mov
sti
xchg
push
adc
mov
test
out
jnp
data16
ud0
mov
jo
mov
frstor
pushf
lds
arpl
add
add
in
pop
rolb
or
pcmpeqd
rolb
mov
pop
sbb
add
mov
mov
js
mov
add
mov
add
push
jne
pop
mov
xchg
mov
repz
sahf
cmp
sub
add
mov
jp
divps
mov
pushf
lock
lods
rcrl
dec
cmc
mov
rolb
cs
push
add
out
adcl
mov
inc
add
add
mov
xchg
add
jmp
mov
outsl
mov
aaa
scas
aam
mov
cltd
sbb
or
jb
mov
lods
cmp
or
pop
inc
pop
sti
xlat
stos
bound
mov
xor
mov
add
mov
cld
pop
or
mov
sbb
mov
mov
jg
add
pop
fsts
aad
mov
adc
mov
mov
paddusw
mov
fisubrl
sub
mov
sub
je
mov
add
mov
add
cli
sub
push
and
aaa
pop
popa
jmp
xor
sub
loop
mov
mov
add
mov
xchg
add
add
add
std
lret
mov
daa
and
mov
and
mov
add
lahf
lock
lock
loope
faddl
jno
mov
xchg
pop
sbb
cmp
fs
shll
pusha
add
fwait
lock
insl
xchg
inc
add
cmpsb
fdivrs
lea
jbe
push
add
pop
xor
mov
and
mov
xchg
data16
test
inc
add
mov
sti
mov
or
add
ja
mov
and
and
addb
cld
xor
ss
pusha
add
dec
dec
or
adc
add
icebp
add
mov
mov
mov
xchg
mov
add
leave
fwait
lahf
adc
jl
add
repnz
mov
out
xchg
mov
and
mov
mov
mov
pop
jp
aam
or
or
out
inc
add
jge
cmpsb
int
fisubrl
mov
add
jo
mov
sub
mov
mov
lcall
adc
je
lods
dec
sbb
dec
sbb
pusha
add
add
frstor
fildll
jmp
jb
mov
aas
add
xor
mov
add
sub
jno
sbb
popa
imul
inc
inc
and
add
mov
rcrl
push
std
sbbl
add
mov
mov
arpl
mov
add
adc
lahf
hlt
sub
or
xchg
cmpsb
sbb
fnstcw
popa
xchg
pop
pop
jg
add
leave
pop
jg
jp
mov
mov
xor
mov
rolb
rolb
insl
fnsave
add
inc
add
sub
rorl
test
or
mov
sub
add
rolb
mov
mov
jae
xchg
test
cmpsb
xor
mov
add
outsb
int3
out
or
and
mov
adc
sub
jle
push
cmovbe
push
and
mov
pop
mov
xchg
addr16
lock
and
add
xchg
aas
pop
add
mov
in
hlt
sbb
scas
flds
sahf
jmp
enter
add
or
mov
dec
xlat
add
and
add
mov
inc
js
add
mov
aam
or
into
xchg
arpl
sub
mov
mov
rolb
dec
pop
ss
add
out
inc
inc
outsb
repz
lds
adc
fistps
cld
testl
add
mov
mov
inc
ret
repz
add
jns
mov
add
mov
icebp
mov
cmp
into
pushf
sub
out
push
test
loope
adcl
mov
mov
ret
dec
imul
mov
inc
add
cmp
add
add
jns
xlat
sahf
mov
ja
add
test
roll
add
mov
fistl
mov
add
adc
mov
add
push
into
mov
jp
adc
mov
mov
add
adc
mov
dec
lds
add
xchg
mov
int
std
aad
mov
jns
pop
push
enter
xchg
mov
jae
push
jmp
clc
adc
mov
mov
mov
sbb
add
push
or
sub
add
mov
repnz
mov
out
mov
sub
cltd
pop
fwait
push
jl
cmp
and
sbb
push
cltd
pop
rorl
xchg
xchg
add
mov
loopne
mov
sub
push
add
aam
ss
add
enter
es
std
loope
loopne
mov
test
jb,pn
mov
enter
mov
subl
mov
push
mov
test
mov
pushf
sahf
js
sahf
in
movsl
mov
lods
imul
mov
addr16
jno
mov
or
sbb
mov
add
cmp
mov
add
jnp
and
mov
jo
mov
sub
mov
pop
xchg
add
loopne
mov
loop
mov
xchg
adc
loope
inc
das
cmp
mov
pop
lcall
pop
loopne
mov
or
add
xor
mov
add
and
mov
sbb
sbb
adc
add
aaa
shll
loop
mov
sbb
xor
mov
mov
fwait
sbb
enter
adc
cmp
gs
xchg
mov
mov
gs
in
mov
imul
aaa
dec
testb
mov
dec
cmpsb
push
fs
adc
xchg
add
add
jmp
jns
push
mov
cmp
mov
cmc
push
add
int
push
mov
pop
push
add
mov
mov
sub
in
adc
ss
mov
or
sub
xlat
fldt
inc
sets
lcall
lods
push
adc
cmp
add
test
imul
or
mov
cmp
sti
xor
xchg
add
scas
pop
cmp
loop
mov
addr16
mov
add
add
mov
mov
mov
sbb
xor
mov
inc
add
mov
mov
scas
int
pop
pop
mov
adc
dec
and
jb
mov
sub
jbe
add
ficoms
add
movsb
ja
add
mov
test
jbe
add
add
loopne
mov
adc
add
test
fbld
add
iret
cmp
inc
push
add
mov
mov
mov
mov
mov
xchg
filds
lods
iret
enter
scas
sbb
ret
fdivrs
mov
inc
add
add
xchg
adc
mov
pop
pop
pushf
sahf
and
add
jno
test
dec
pop
cmc
mov
add
inc
or
push
and
mov
or
test
loope
jnp
push
xor
adc
mov
xchg
dec
cmp
mov
cmp
das
in
imul
add
fildl
add
mov
add
inc
ljmp
jecxz
fstpt
jle
cld
jle
xor
sbb
push
dec
cld
out
arpl
pushf
and
mov
dec
dec
lods
dec
sbb
xchg
inc
mov
mov
jmp
add
fldlg2
roll
mov
je
jg
es
int3
loopne
mov
test
mov
cmpsb
or
mov
pop
hlt
mov
mov
clc
pop
sub
jne
cmp
and
movsb
loopne
mov
pop
fs
cmp
cmp
add
add
dec
pop
adc
mov
add
outsb
ss
ret
lret
or
mov
mov
test
fstpt
rolb
mov
add
rcll
mov
inc
xchg
sub
jne
add
stos
dec
sub
jno
sub
inc
add
cld
lret
jle
fnsave
repnz
cmpl
push
stos
mov
or
mov
add
cs
clc
xchg
dec
clc
fidivl
ss
popa
int
lods
movsl
lcall
je
jbe
mov
fisttps
outsb
add
pop
xorl
lea
insl
loop
mov
bound
mov
mov
out
lret
cli
jno
lret
push
push
jbe,pn
lcall
scas
les
adc
jmp
test
mov
aad
add
fisttpll
add
xchg
dec
in
out
add
dec
fmuls
sub
push
push
rolb
mov
add
xchg
add
or
out
pop
mov
add
repz
lds
lea
jg
pop
scas
cmp
sub
xchg
dec
jge
add
mov
scas
shll
add
in
js
jmp
lods
mov
cli
das
and
mov
jne
rep
stos
movsl
xchg
mov
add
xchg
test
mov
and
mov
mov
lock
cwtl
inc
jne
push
mov
rolb
lock
into
aad
mov
mov
push
inc
repnz
mov
add
cmpsb
fsts
cmp
aad
xchg
sbb
aaa
or
mov
mov
enter
cmpsl
inc
mov
in
pop
push
out
inc
push
mov
add
call
add
pop
xor
out
notl
push
out
pop
lods
pop
fidivrs
ljmp
inc
add
mov
outsb
and
mov
mov
or
add
in
cltd
pop
leave
cli
cmpsl
jo
mov
dec
sar
mov
mov
cld
mov
sub
hlt
add
dec
aas
pushf
mov
out
or
add
mov
add
mov
push
xor
into
lahf
stos
adc
mov
and
mov
xchg
out
cmpl
mov
loopne
mov
mov
bound
mov
cmpsl
sbb
outsl
jne,pt
add
push
mov
rolb
mov
jno
or
mov
cmpsb
int3
push
mov
add
pop
iret
cld
test
sub
xor
push
jle
xchg
add
loop
mov
mov
jl
mov
or
add
add
mov
xchg
and
mov
push
scas
js
mov
fcoms
mov
mov
mov
add
stc
mov
inc
in
mov
jmp
add
or
jno
fisttpll
out
mov
sub
lret
jns
pop
lock
rolb
jp
or
and
mov
add
mov
pop
adc
lods
pop
jge
add
cli
xchg
cmp
ljmp
and
mov
jo
mov
add
mov
adc
vmptrld
mov
jmp
mov
mov
add
aaa
shll
jno
or
add
inc
push
add
jg
mov
daa
bound
mov
lds
push
add
mov
add
mov
mov
mov
add
push
xorl
lret
mov
loopne
mov
stos
cmp
push
or
push
mov
mov
add
mov
push
dec
int3
sub
lret
xchg
add
outsb
pusha
add
xor
mov
test
jg
outsb
or
enter
je
mov
mov
das
and
add
add
ds
lea
in
inc
add
inc
aad
jecxz
hlt
jg
loopne
mov
in
mov
push
jle
pop
add
pop
cmp
loope
imul
aad
xchg
insb
lahf
or
fldl
add
add
mov
flds
mov
bound
mov
enter
mov
int
add
mov
ret
jmp
nop
add
sahf
push
adc
push
test
pushw
out
std
push
std
pop
data16
mov
mov
fwait
mov
out
jmp
lahf
and
add
mov
pusha
add
mov
add
push
inc
fcmovnb
xor
mov
xor
mov
add
arpl
mov
mov
add
push
iret
xchg
add
sahf
bound
mov
or
push
cld
lret
sbb
push
in
xchg
jge
lds
mov
imul
push
mov
mov
add
sbb
jae
daa
jae
xchg
loopne
mov
add
repnz
jp
mov
test
mov
add
aad
out
or
lret
shll
add
xor
out
bound
mov
lret
jecxz
enter
pop
fcompl
sub
inc
add
mov
mov
xchg
mov
xor
adc
mov
lock
test
ljmp
pusha
add
add
add
popa
sahf
sbb
and
ret
fs
xor
mov
add
lcall
mov
sbb
add
add
add
mov
addb
mov
add
aam
add
mov
pop
fisubrl
inc
push
sub
add
or
test
rolb
mov
js
xor
mov
and
imul
lods
aad
mov
push
add
add
add
dec
inc
sub
jno
popa
repz
addb
xchg
je
cmp
sbb
jbe
and
push
and
pop
movsb
add
ds
sub
mov
mov
and
lock
adc
fldcw
dec
callw
mov
mov
jns
and
mov
push
inc
inc
add
add
cmp
and
sbb
sbb
push
pop
test
dec
fisubrl
dec
in
aas
pop
pop
mov
add
or
mov
stc
or
std
addr16
adc
mov
mov
lods
jmp
pop
ret
test
shll
lods
push
insb
loope
push
repz
pop
insb
mov
mov
xor
mov
push
dec
aaa
iret
mov
push
js
xchg
test
mov
mov
cmp
clc
int
bound
mov
add
je
into
and
orl
xor
mov
rolb
adc
mov
xchg
xchg
mov
xchg
pop
mov
and
mov
xor
push
cwtl
es
fmuls
add
aam
mov
lock
sub
add
ss
into
movsb
gs
call
mov
mov
xor
mov
pop
add
mov
mov
add
cmpsl
lahf
pop
push
test
jge
jl
mov
xor
mov
test
bound
mov
enter
xchg
fimuls
or
lret
enter
int3
mov
push
inc
arpl
mov
aad
ljmp
add
bound
mov
in
je
repz
dec
adc
mov
mov
mov
xor
mov
add
pop
enter
into
addl
mov
lea
and
std
add
add
mov
pop
and
bswap
mov
add
cltd
test
xchg
repz
incl
jmp
fbstp
ljmp
xchg
sub
les
xchg
push
in
int
mov
dec
mov
mov
mov
fstl
push
mov
outsl
xchg
imul
repz
leave
mov
sub
add
iret
add
mov
loopne
mov
out
mov
sbb
pop
mov
pushf
mov
mov
or
rcrl
add
add
xor
mov
add
mov
test
add
push
add
mov
add
mov
daa
sbb
and
push
das
test
mov
mov
dec
dec
popf
cmpsl
scas
mov
hlt
dec
loopne
mov
xchg
push
pop
sbb
bound
mov
sahf
lea
lret
fwait
pop
and
add
es
scas
add
mov
xor
pop
push
loop
mov
fisttpll
mov
push
xchg
cmc
jb
mov
add
fists
add
mov
mov
stc
inc
and
add
lahf
in
xor
mov
mov
jle
jno
push
lahf
mov
add
cmpsb
mov
mov
and
mov
or
pop
add
outsb
mov
mov
icebp
jge
fmull
add
insb
ret
test
js
adc
mov
inc
aam
loop
mov
js
test
add
fists
out
subl
xlat
rolb
mov
jp
mov
mov
xor
mov
jno
add
and
mov
jp
pop
lahf
loopne
mov
aad
pop
or
add
mov
mov
mov
cwtl
xchg
push
aas
in
scas
push
adc
and
mov
roll
outsb
lock
xchg
data16
sti
push
push
add
fistl
mov
stos
loopne
mov
addb
push
add
imul
mov
mov
cltd
dec
leave
mov
pop
mov
add
pushf
repnz
sub
push
call
iretw
clc
lods
addb
fmulp
aad
push
add
js
int
ljmp
popa
pop
mov
ss
in
sbb
outsb
rolb
mov
dec
jb
mov
mov
imul
inc
adc
mov
mov
mov
or
mov
mov
ljmp
movsl
iret
jnp
inc
mov
add
in
dec
xlat
jmp
sub
add
add
mov
mov
or
sbbl
ss
add
and
sahf
mov
fistl
add
in
cltd
jecxz
jb
mov
fsubp
add
mov
and
jno
sub
pop
popa
pushf
jl
div
sub
imul
sbb
xchg
xchg
sub
add
mov
mov
mov
mov
jbe
addr16
enter
jp
add
addr16
sbb
icebp
mov
mov
mov
pop
cmovb
mov
mov
jne
ja
jecxz
repz
fstps
push
inc
js
add
push
add
mov
push
inc
dec
popf
dec
mov
cltd
popf
icebp
mov
mov
and
mov
inc
push
inc
loope
jnp
dec
mov
mov
dec
mov
adc
add
icebp
xchg
cmp
icebp
insl
push
rolb
mov
out
dec
mov
rolb
mov
cltd
subl
add
pop
dec
cmpsl
jae
add
stos
lods
popf
cmp
ljmp
out
cmpsb
orl
iret
in
cwtl
rorl
inc
pop
imul
add
lret
push
data16
add
jb
mov
addb
fnstenv
mov
ds
mov
pop
adc
mov
add
add
in
dec
push
hlt
dec
mov
xor
add
outsl
sub
add
mov
push
pop
gs
fisttps
inc
pop
xchg
sbb
xor
add
hlt
clc
xchg
sub
scas
icebp
mov
movsb
and
mov
sbb
loope
push
dec
push
cmp
sub
outsb
cmp
in
insb
and
jae
pop
pop
mov
or
cmp
add
mov
sub
lahf
cs
add
mov
mov
rolb
mov
mov
icebp
mov
fidivrs
add
lcall
mov
mov
push
loope
outsb
or
cmpsl
mov
mov
mov
add
mov
aas
or
sahf
cwtl
push
adc
stos
cmpsl
pop
push
mov
aam
push
dec
xchg
adcl
add
pop
cmp
lods
cmp
adc
mov
jl
inc
test
popa
mov
std
push
dec
adc
mov
rolb
mov
mov
call
test
cmp
xchg
enter
mov
mov
xchg
add
adc
jmp
out
subl
aad
dec
je
fwait
pop
jmp
dec
pop
imul
fstpl
push
rcll
sbb
mov
ja
add
or
pop
aad
js
lds
jle
shll
jg
daa
cwtl
cmpsb
fwait
mov
mov
mov
jecxz
enter
cmpl
aam
int
out
sub
pop
add
cs
cmp
mulb
loope
and
add
push
lret
xchg
add
imul
ljmp
add
enter
xlat
stos
push
in
out
in
mov
lock
or
add
push
pop
ja
push
out
push
push
sbb
imul
xchg
mov
jp
xchg
fdivr
dec
mov
rolb
sbb
jmp
ljmp
mov
mov
int3
xchg
ret
pop
jno
add
loope
movsb
pushf
xor
test
scas
push
add
sub
in
xchg
addb
sub
std
jb
mov
call
mov
repz
xchg
dec
out
add
dec
xor
mov
inc
mov
and
mov
pop
fildll
test
loope
and
inc
mov
repz
ss
mov
outsb
lret
outsl
ss
test
add
mov
mov
addb
jo
mov
fwait
sti
push
add
lcall
pop
adc
mov
mov
cwtl
xchg
and
flds
scas
cmp
cmp
sub
mov
mov
adc
stos
sub
mov
scas
je
lods
cmp
mov
mov
nop
add
dec
adc
add
sbb
add
and
mov
aaa
je
ja
add
stos
mov
dec
out
mov
jle
ss
cmpsb
int3
lcall
pop
dec
es
lret
sbb
mov
cmp
addb
xchg
mov
addb
push
in
xchg
add
add
ret
inc
ret
addb
xor
mov
mov
sub
or
add
aaa
inc
add
lret
mov
pop
dec
inc
add
add
sarl
add
jbe
fldt
mov
pop
adc
mov
aad
xlat
pop
imul
fnstenv
mov
add
fnstsw
inc
pushf
cmc
clc
out
pop
inc
mov
insl
push
mov
add
xor
mov
mov
mov
mov
sbb
sbb
inc
add
xlat
cltd
mov
in
mov
add
add
das
loopne
mov
mov
add
ss
xor
mov
sbb
bound
mov
jp
mov
mov
mov
sti
fcomps
or
jmp
mov
out
or
adc
xchg
cwtl
xor
mov
xor
cmpsb
push
pop
inc
pop
pop
fdivr
popf
stos
lds
xchg
cmp
add
mov
hlt
sti
add
xchg
xchg
aam
push
sbb
fucompp
sub
xchg
add
repnz
add
aas
flds
mov
mov
mov
sbb
and
mov
mov
mov
sbb
flds
mov
ret
mov
pop
add
je
mov
arpl
jnp
cmp
push
xchg
in
lock
out
mov
mov
cmp
mov
fwait
icebp
out
mov
ret
sbb
pushl
mov
pop
xor
mov
jmp
xor
mov
cwtl
addr16
int
inc
ja
push
fst
dec
insl
sub
add
add
xchg
ret
xchg
addb
fnstsw
clc
repnz
jae
add
add
jne
clc
repnz
jae
pop
or
mov
sbb
add
add
clc
repnz
jae
add
pop
clc
repnz
jae
and
add
add
inc
xchg
mov
mov
clc
repnz
jae
add
add
dec
mov
clc
repnz
jae
pushf
add
cld
je
clc
repnz
jae
cmpsb
add
push
push
mov
xchg
ret
lds
add
add
dec
push
clc
repnz
jae
add
mov
clc
repnz
jae
adc
ljmp
sub
repnz
jae
add
movsl
and
and
jae
rolb
rclb
add
and
mov
clc
repnz
jae
adc
mov
pop
clc
repnz
jae
cmc
add
rcrb
add
nop
jmp
ret
add
add
clc
fwait
cld
nop
jmp
mov
add
mov
add
sub
xorl
pushf
jne
add
add
mov
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
pop
add
movsl
add
mov
clc
repnz
jae
ljmp
int
jns
add
incl
or
add
add
xor
clc
repnz
jae
cmpsl
add
pushf
add
scas
push
add
in
lods
xor
add
add
add
popf
mov
clc
repnz
jae
add
add
lods
and
clc
repnz
jae
shl
xor
test
clc
repnz
jae
add
clc
or
lock
mov
xchg
xor
mov
add
aaa
testb
cmp
ret
mov
sarb
add
clc
mov
clc
repnz
jae
and
add
cmc
add
cmp
pushl
clc
repnz
jae
pop
mov
pop
add
mov
xchg
ret
call
nop
cmp
add
push
mov
xchg
ret
adc
add
add
call
fwait
cld
nop
jmp
cmp
mov
mov
push
clc
repnz
jae
lock
sbb
add
nop
mov
add
inc
filds
xchg
ret
popl
dec
sub
add
xchg
lock
mov
xchg
ret
add
add
add
or
cld
nop
jmp
movsl
or
mov
lock
jbe
clc
repnz
jae
add
decb
nop
jae
and
add
add
cmpl
fwait
cld
nop
jmp
add
addr16
mov
clc
repnz
jae
add
push
inc
mov
jb
mov
rcrb
sbb
sti
cltd
lock
and
clc
repnz
jae
mov
mov
add
or
add
repnz
jae
add
call
mov
add
mov
clc
repnz
jae
and
stc
add
add
mov
clc
repnz
jae
add
cmpsb
dec
inc
clc
repnz
jae
pop
jne
sub
mov
clc
repnz
jae
add
nop
add
add
add
cmpsl
pop
add
clc
repnz
jae
add
cli
or
dec
cmp
repnz
jae
clc
add
call
add
xor
clc
repnz
jae
lock
mov
add
mov
clc
repnz
jae
mov
nop
add
add
and
repnz
jae
mov
stc
ret
and
mov
clc
repnz
jae
movsl
mov
pop
push
fwait
cld
nop
jmp
clc
call
pushf
pop
inc
xor
push
fwait
cld
nop
jmp
jecxz
add
add
mov
add
sub
repnz
jae
add
sub
or
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
popf
add
adc
cld
nop
jmp
mov
mov
mov
test
nop
jae
lock
add
nop
aam
mov
clc
repnz
jae
cmp
add
or
clc
repnz
jae
mov
lods
add
fwait
cld
nop
jmp
addr16
add
add
pop
jae
cmp
mov
xchg
ret
add
add
sbb
dec
cmp
repnz
jae
stc
jne
add
repnz
jae
test
add
or
call
clc
repnz
jae
add
mov
add
push
mov
xchg
ret
roll
mov
mov
nop
jae
cmpsl
add
or
add
out
mov
push
mov
xchg
ret
add
jg
mov
lods
dec
stos
add
add
add
in
mov
test
daa
add
fwait
cld
nop
jmp
nop
add
mov
nop
jmp
add
addr16
jecxz
sub
clc
repnz
jae
add
and
clc
repnz
jae
mov
ljmp
in
and
add
repnz
jae
ret
mov
lea
fwait
cld
nop
jmp
add
call
sub
in
inc
add
add
add
add
push
mov
xchg
ret
add
mov
push
clc
repnz
jae
ret
lock
add
repnz
jae
test
add
rcrl
add
clc
repnz
jae
popf
pushf
test
jmp
cld
nop
jmp
add
ret
add
mov
clc
repnz
jae
add
add
clc
repnz
jae
test
sti
ret
adc
ret
clc
repnz
jae
jecxz
add
mov
xchg
mov
lods
clc
repnz
jae
add
addr16
add
add
jge
clc
repnz
jae
pop
ljmp
mov
push
mov
xchg
ret
add
add
loopne
add
clc
repnz
jae
add
movsl
xchg
add
popa
cld
mov
jmp
cli
add
rcrb
add
or
xor
nop
jae
test
add
add
push
mov
xchg
ret
add
add
lds
or
repnz
jae
sub
add
clc
repnz
jae
nop
xor
add
stc
cltd
sub
and
push
mov
xchg
ret
push
add
add
mov
fwait
cld
nop
jmp
add
add
rclb
add
jbe
clc
repnz
jae
jne
add
jecxz
call
clc
repnz
jae
add
add
jecxz
add
clc
repnz
jae
add
add
dec
imul
cmpl
xor
add
sub
add
repnz
jae
add
add
mov
push
clc
repnz
jae
add
add
inc
clc
repnz
jae
or
sti
add
nop
jae
add
test
int
pop
jae
cld
nop
jmp
rolb
push
lock
pop
push
mov
xchg
ret
jne
cmp
and
mov
repnz
jae
pop
movsl
cmp
call
and
clc
repnz
jae
mov
sti
out
fcmovnb
jmp
jae
add
add
add
rolb
mov
enter
jae
add
add
repnz
jae
add
mov
push
mov
xchg
ret
pushf
add
mov
mov
jmp
add
clc
add
addr16
add
leave
add
fwait
cld
nop
jmp
cmpsl
xor
xchg
loope
mov
clc
repnz
jae
cmpsb
pop
insb
mov
fwait
cld
nop
jmp
adc
mov
add
test
jne
fwait
cld
nop
jmp
jecxz
rolb
enter
nop
jmp
call
add
dec
push
mov
jns
ja
add
outsl
add
adc
and
mov
mov
xchg
ret
add
add
xchg
ljmp
repnz
jae
add
add
push
mov
add
cmp
in
cli
add
add
add
shrb
jg
fwait
cld
nop
jmp
add
push
add
and
cmpl
fwait
cld
nop
jmp
test
or
daa
add
repnz
jae
mov
roll
add
scas
je
clc
repnz
jae
cmc
and
nop
jmp
sub
sbb
clc
add
addr16
mov
clc
repnz
jae
cltd
add
dec
add
cld
nop
jmp
sub
add
xor
clc
repnz
jae
pushf
add
add
push
mov
xchg
ret
test
add
add
repnz
jae
add
fisttpl
nop
jmp
cmpsb
pushf
test
pop
push
mov
or
add
add
xchg
add
pop
sbb
sub
nop
jmp
jne
pushf
mov
push
clc
repnz
jae
ret
add
xor
add
clc
repnz
jae
add
jecxz
mov
jae
add
and
call
and
fwait
cld
nop
jmp
shl
cmc
add
pop
sub
push
mov
xchg
ret
pop
or
xor
jnp
dec
sub
repnz
jae
ljmp
mov
fwait
cld
nop
jmp
jne
add
cmc
lock
or
fwait
cld
nop
jmp
add
mov
pop
add
xor
ret
xor
mov
inc
adc
repnz
jae
mov
add
clc
repnz
jae
add
add
hlt
mov
add
fwait
cld
nop
jmp
rcrl
movsl
add
sbb
out
inc
add
adc
add
add
cmp
lcall
sbb
or
imul
clc
repnz
jae
pushf
sbb
or
add
add
add
repnz
jae
rorb
mov
cld
nop
jmp
mov
movsl
add
add
mov
movzwl
clc
repnz
jae
add
add
and
repnz
jae
add
rolb
mov
lea
repnz
jae
test
cmpsb
or
lds
add
clc
repnz
jae
mov
add
and
nop
jae
cltd
add
add
shrl
add
clc
repnz
jae
add
adc
sub
add
repnz
jae
add
add
jne
clc
repnz
jae
mov
repz
repnz
jae
add
add
or
cmp
jle
fildl
add
add
add
jmp
mov
mov
stc
inc
add
adc
adc
add
lahf
add
clc
repnz
jae
cli
add
add
adc
mov
clc
repnz
jae
add
scas
add
add
push
mov
xchg
ret
clc
add
pop
ficoml
mov
xchg
ret
mov
add
out
rep
clc
repnz
jae
and
or
add
fimuls
jae
add
add
add
scas
pusha
fwait
cld
nop
jmp
test
add
add
xor
push
add
outsb
clc
inc
add
or
cmpsb
add
cmc
jns
add
add
inc
push
add
mov
push
push
jmp
add
add
sub
add
or
repnz
jae
cmp
js
popl
clc
repnz
jae
mov
add
fwait
cld
nop
jmp
test
add
add
sub
jecxz
repz
sub
nop
jae
lock
rolb
add
mov
mov
add
dec
jne
clc
repnz
jae
mov
sar
mov
xchg
ret
add
fwait
cld
nop
jmp
jne
test
mov
push
mov
xchg
ret
or
mov
int3
push
clc
repnz
jae
add
add
add
jmp
add
pushf
add
dec
sub
add
test
dec
mov
clc
repnz
jae
add
mov
ret
add
loopne
inc
add
mov
jmp
clc
repnz
jae
pop
cmp
adc
cmpsl
mov
loop
mov
inc
or
repnz
jae
add
add
dec
add
or
dec
shr
clc
repnz
jae
add
mov
out
inc
add
cmpsb
mov
push
int3
and
push
mov
xchg
ret
mov
jmp
into
flds
xchg
ret
add
xor
clc
repnz
jae
add
add
add
add
fiadds
jmp
add
call
aas
jne
clc
repnz
jae
adc
mov
fwait
cld
nop
jmp
add
nop
mov
mov
das
mov
push
mov
xchg
ret
add
and
ficoml
nop
jae
xor
cli
add
add
pop
movsl
orps
repnz
jae
add
or
or
mov
loop
add
test
mov
xor
fwait
cld
nop
jmp
add
add
and
mov
adc
add
add
inc
std
mov
clc
repnz
jae
clc
add
add
addr16
mov
repnz
jae
add
mov
mov
test
pop
je
clc
repnz
jae
clc
sbb
or
mov
xchg
ret
add
mov
fsubrs
popa
clc
repnz
jae
mov
rcll
sub
add
add
repnz
jae
cli
add
sti
test
rclb
clc
inc
add
add
test
clc
fwait
cld
nop
jmp
add
pop
cli
add
cli
add
dec
push
mov
xchg
ret
add
add
xchg
sbb
add
add
repnz
jae
popf
add
mov
push
mov
xchg
ret
and
ljmp
add
clc
repnz
jae
jne
add
add
push
push
mov
xchg
ret
or
lds
push
pop
sub
nop
jmp
stc
ljmp
pushf
rep
clc
repnz
jae
addr16
shl
add
rep
fwait
cld
nop
jmp
and
add
add
add
clc
repnz
jae
add
add
clc
repnz
jae
cmpsb
add
add
add
das
mov
clc
repnz
jae
jne
add
or
je
fwait
cld
nop
jmp
dec
jecxz
ret
inc
add
mov
add
test
add
pushf
pop
add
pushl
push
mov
xchg
ret
jecxz
add
pop
jne
push
mov
push
roll
mov
incb
xchg
fdivs
mov
push
push
mov
xchg
ret
out
or
pop
pop
sbb
xor
fwait
cld
nop
jmp
add
pop
mov
add
clc
repnz
jae
add
cmp
cltd
add
test
pop
and
repnz
jae
jne
add
rolb
clc
push
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
mov
xchg
ret
add
add
add
shr
lea
clc
repnz
jae
rolb
push
rolb
xor
mov
leavew
shl
push
mov
xchg
ret
mov
mov
push
push
mov
xchg
ret
add
jmp
popa
add
repnz
jae
popf
mov
push
loope
add
push
mov
xchg
ret
add
adc
add
mov
mov
mov
clc
repnz
jae
add
mov
add
push
mov
xchg
ret
cmpsl
pop
add
testl
fwait
cld
nop
jmp
pushf
ljmp
mov
clc
repnz
jae
test
add
add
xor
clc
repnz
jae
push
add
add
imul
jae
call
add
incl
fwait
cld
nop
jmp
add
add
pop
add
clc
repnz
jae
add
or
add
push
movsl
and
cld
nop
jmp
cmp
test
pop
pushf
adc
mov
mov
push
jno
leave
movzwl
clc
repnz
jae
add
daa
jbe
je
fwait
cld
nop
jmp
add
mov
clc
repnz
jae
pop
cli
add
add
mov
clc
repnz
jae
popf
scas
mov
cmp
add
add
loopne
mov
xchg
ret
pop
mov
add
mov
in
inc
add
add
add
notb
add
cld
nop
jmp
pushf
add
add
inc
add
add
clc
repnz
jae
out
add
jo
mov
clc
repnz
jae
and
mov
add
fdivr
repnz
jae
xor
and
add
cmpsl
popf
mov
clc
repnz
jae
add
sub
sar
repnz
jae
add
add
add
call
jmp
or
add
cmp
sbb
mov
xchg
ret
add
ret
scas
mov
fwait
cld
nop
jmp
clc
add
add
into
mov
clc
repnz
jae
dec
pop
mov
scas
cmpl
fwait
cld
nop
jmp
stc
mov
mov
clc
repnz
jae
and
add
mov
clc
repnz
jae
add
add
add
add
clc
repnz
jae
cli
stc
jne
ret
add
adc
inc
add
adc
mov
or
fldl2t
jp
add
and
popf
push
jne
add
pushf
nop
cmpsb
jne
add
push
mov
xchg
ret
popl
add
add
fldl
xchg
ret
sti
mov
add
add
repnz
jae
mov
or
cmpsl
addr16
lods
mov
jmp
call
add
lds
sbb
add
mov
nop
jmp
and
add
add
ljmp
xchg
repnz
inc
sub
or
rorl
lds
movswl
clc
repnz
jae
add
pushf
lock
pop
clc
repnz
jae
pushf
add
cli
cmpsl
add
inc
add
fwait
cld
nop
jmp
shll
add
add
add
cmp
mov
pop
push
cmp
add
adc
jns
add
add
pop
sbb
add
add
ret
mov
clc
repnz
jae
add
out
je
clc
repnz
jae
adc
add
cs
insb
clc
repnz
jae
add
mov
loop
mov
popa
clc
repnz
jae
add
or
cmp
add
nop
jae
ret
add
jne
pop
push
mov
xchg
ret
mov
add
addb
jbe
add
repnz
jae
mov
add
mov
add
add
add
adc
pushf
xor
add
clc
repnz
jae
add
add
or
aad
add
add
cmp
cld
nop
jmp
add
add
stc
or
mov
add
push
mov
xchg
ret
add
and
test
and
repnz
jae
add
mov
mov
clc
repnz
jae
add
cmp
add
mov
xor
push
fwait
cld
nop
jmp
pushf
add
add
mov
add
push
push
mov
xchg
ret
add
add
popf
popl
add
push
mov
xchg
ret
scas
pop
rcl
add
fwait
cld
nop
jmp
add
fwait
push
clc
repnz
jae
add
add
jne
sub
je
clc
repnz
jae
mov
push
inc
jbe
mov
mov
add
dec
add
add
popl
jne
add
add
add
jmp
pushl
sti
add
add
nop
jae
push
pushf
pop
add
add
cli
pop
jne
clc
repnz
jae
pop
or
aaa
xchg
aas
add
clc
repnz
jae
dec
add
push
clc
repnz
jae
adc
jne
clc
pop
nop
scas
fisttpll
mov
nop
jmp
or
pop
add
mov
cli
cli
mov
mov
movsl
add
pop
cmp
push
xchg
adc
jmp
add
add
ret
lds
push
repnz
jae
add
push
pushf
add
sbb
cld
nop
jmp
add
push
pop
test
add
pop
pop
clc
repnz
jae
mov
pushf
add
xor
push
dec
inc
clc
repnz
jae
jne
add
mov
and
push
mov
xchg
ret
and
or
adc
loope
add
adc
repnz
jae
add
add
add
add
cld
nop
jmp
sub
sub
lds
pop
mov
js
popa
push
mov
xchg
ret
add
push
mov
mov
icebp
jmp
jmp
stc
add
jne
add
add
push
mov
xchg
ret
pop
cli
cli
jne
add
push
clc
repnz
jae
cmp
pushf
movsl
cli
cmc
sti
test
mov
jmp
add
cmpsb
adc
clc
add
and
mov
jmp
add
cmp
push
or
repnz
jae
ljmp
add
clc
repnz
jae
add
scas
add
ret
dec
push
clc
repnz
jae
sbb
add
sub
outsb
filds
xchg
ret
add
mov
add
add
repnz
jae
lock
fisttpl
cld
nop
jmp
sbb
add
mov
and
xor
jg
add
add
mov
add
push
clc
repnz
jae
mov
add
out
cltd
add
pop
shr
fwait
cld
nop
jmp
cmc
mov
lock
add
clc
repnz
jae
add
stc
add
cmpl
and
add
popf
scas
add
add
pop
lods
push
mov
xchg
ret
add
jne
out
add
or
dec
sub
outsb
std
inc
add
cli
ljmp
push
push
mov
xchg
ret
xor
add
or
sbb
add
fwait
cld
nop
jmp
inc
lods
mov
clc
repnz
jae
pop
xor
dec
pop
fwait
cld
nop
jmp
jne
add
or
test
dec
cmp
repnz
jae
add
out
pop
out
add
clc
repnz
jae
cltd
add
add
push
mov
lea
xor
add
clc
repnz
jae
or
jns
dec
push
fwait
cld
nop
jmp
movsl
add
sub
ss
clc
repnz
jae
add
adc
add
push
mov
xchg
ret
clc
add
add
add
jae
or
add
mov
lock
dec
or
add
repnz
jae
add
sub
or
add
repnz
jae
add
mov
insb
es
clc
repnz
jae
mov
add
push
mov
xchg
ret
push
sar
cmp
add
or
repnz
jae
add
ret
shll
and
repnz
jae
call
add
clc
repnz
jae
adc
or
rolb
sti
mov
clc
repnz
jae
pop
add
mov
nop
jmp
add
cli
pop
or
popf
add
cld
cld
push
mov
xchg
ret
add
or
pop
add
sahf
pop
clc
repnz
jae
add
add
and
add
clc
repnz
jae
add
mov
push
pop
mov
repnz
jae
add
or
rorl
jmp
add
jecxz
ret
pop
push
mov
xchg
ret
ljmp
addb
jp
negl
jecxz
call
add
mov
push
mov
nop
jmp
call
rolb
or
jge
sar
nop
jae
ret
add
add
push
push
mov
xchg
ret
ret
add
mov
fwait
cld
nop
jmp
add
clc
repnz
jae
push
mov
test
add
repnz
jae
add
add
mov
mov
add
fwait
cld
nop
jmp
mov
pop
add
mov
mov
repnz
jae
ret
sbb
add
mov
xchg
ret
or
pushf
sub
cld
nop
jmp
lock
add
mov
popl
xchg
insb
leave
fwait
cld
nop
jmp
jne
add
sub
clc
repnz
jae
add
cmpsb
sbb
jmp
add
and
add
add
add
jne
call
clc
repnz
jae
add
xor
movsb
clc
repnz
jae
add
adc
rcl
pop
decb
repnz
jae
add
mov
mov
pusha
add
mov
add
xchg
gs
add
repnz
jae
rolb
jne
clc
repnz
jae
add
add
mov
fwait
cld
nop
jmp
mov
pop
movsl
mov
sarl
jb,pt
fwait
cld
nop
jmp
add
add
imul
dec
push
clc
repnz
jae
add
dec
sti
add
mov
clc
repnz
jae
add
adc
repnz
jae
add
clc
add
add
call
clc
repnz
jae
pushf
cli
add
push
fwait
cld
nop
jmp
mov
cli
add
sti
add
add
mov
clc
repnz
jae
mov
and
jne
add
sub
xchg
filds
xchg
ret
ret
roll
sbb
add
clc
repnz
jae
cli
jecxz
mov
add
clc
repnz
jae
mov
add
rolb
or
jne
add
push
mov
xchg
ret
add
add
nop
mov
lret
fdiv
clc
repnz
jae
add
lret
xchg
fwait
cld
nop
jmp
add
pushf
add
add
add
sub
clc
repnz
jae
cltd
add
add
fnsave
sar
nop
jae
pushf
sub
mov
add
mov
push
mov
xchg
ret
add
add
add
jmp
cmc
scas
jne
add
add
mov
jmp
add
add
mov
add
add
add
clc
repnz
jae
add
mov
test
push
mov
xchg
ret
or
or
add
sub
test
repnz
jae
add
add
repnz
jae
add
mov
mov
clc
repnz
jae
cltd
add
xchg
in
add
clc
jne
add
cltd
hlt
stc
push
mov
pop
push
dec
add
or
add
jns
cmc
sub
test
pop
add
clc
repnz
jae
add
and
push
shrb
repnz
jae
add
cmp
jne
clc
repnz
jae
add
cltd
and
clc
repnz
jae
add
ljmp
clc
repnz
jae
add
add
clc
xor
add
inc
testl
and
add
repnz
jae
mov
add
lock
nop
add
push
mov
xchg
ret
mov
add
sarl
push
mov
xchg
ret
sbb
cli
add
or
clc
repnz
jae
add
add
push
cmp
imul
pop
push
mov
xchg
ret
clc
cli
mov
in
cmp
push
sub
cld
call
add
add
add
jmpw
and
push
mov
xchg
ret
scas
and
leave
sub
repnz
jae
add
add
ljmp
repnz
jae
test
pop
fwait
cld
nop
jmp
add
and
sti
push
fucomip
inc
pop
add
fwait
cld
nop
jmp
add
stc
add
mov
movsb
clc
repnz
jae
jne
ljmp
mov
clc
repnz
jae
push
sbb
add
mov
xchg
ret
rcrl
and
add
test
mov
mov
push
mov
xchg
ret
cli
addr16
add
mov
fwait
cld
nop
jmp
out
lds
pop
scas
and
fwait
cld
nop
jmp
adc
add
add
mov
movsl
in
cmp
fwait
cld
nop
jmp
add
add
add
repz
repnz
jae
pop
lock
xor
cli
cmc
fs
add
mov
xchg
ret
add
add
rcl
rorl
adc
add
add
sbb
add
movsl
mov
and
jmp
incl
mov
lds
mov
or
repnz
jae
scas
or
ffreep
jmp
jae
add
pushl
push
mov
xchg
ret
jne
or
mov
sbb
repnz
jae
cmp
add
dec
test
add
gs
inc
add
pop
or
ret
sbb
cld
nop
jmp
add
add
pop
or
mov
nop
jmp
add
add
or
nop
jae
mov
add
fstl
in
sub
out
add
cmp
mov
add
clc
repnz
jae
add
cmpsl
add
add
push
mov
test
pop
sub
pushf
shl
bound
in
add
add
clc
repnz
jae
test
xadd
or
inc
add
or
ret
push
fwait
cld
nop
jmp
add
rclb
add
add
nop
add
nop
jmp
xor
pushf
cltd
push
mov
mov
clc
repnz
jae
cmc
adc
scas
add
mov
popf
pusha
clc
repnz
jae
add
test
lea
repnz
jae
cmp
sub
dec
jne
clc
repnz
jae
add
xorl
push
mov
xchg
ret
add
or
popa
add
repnz
jae
cltd
mov
popf
mov
xor
mov
lods
mov
clc
repnz
jae
pushf
mov
sbb
cmp
ljmp
mov
add
cld
nop
jmp
add
cmp
sub
sbbl
add
repnz
jae
addr16
test
repnz
jae
jecxz
mov
xor
add
clc
repnz
jae
add
clc
repnz
jae
mov
add
shl
inc
push
xor
add
clc
repnz
jae
add
clc
mov
fimuls
repnz
jae
add
add
pusha
add
ret
clc
repnz
jae
add
add
inc
and
mov
repnz
jae
test
rcrl
add
clc
repnz
jae
jne
add
mov
add
jo
mov
inc
and
push
mov
xchg
ret
movsl
add
add
and
mov
push
mov
fs
add
push
fidivrl
jl
add
xchg
mov
fwait
cld
nop
jmp
add
and
add
push
clc
repnz
jae
rclb
roll
sub
clc
repnz
jae
sub
add
clc
repnz
jae
lock
mov
rcrl
sar
repnz
jae
add
cltd
mov
add
dec
je
fwait
cld
nop
jmp
xor
push
mov
xchg
ret
mov
clc
rcrl
arpl
cld
nop
jmp
pop
call
rolb
mov
mov
push
mov
xchg
ret
or
clc
add
stc
xchg
clc
repnz
jae
add
mov
and
push
mov
xchg
ret
movsl
test
cli
adc
push
aam
add
sbb
rcrl
in
jmp
add
add
fwait
cld
nop
jmp
sub
add
mov
push
mov
xchg
ret
sti
add
add
or
pushf
movzwl
clc
repnz
jae
mov
mov
add
fwait
cld
nop
jmp
add
add
fstl
mov
xchg
ret
add
test
add
add
add
pusha
clc
repnz
jae
lock
popf
and
rolb
pop
lea
clc
repnz
jae
mov
in
or
mov
dec
int3
bound
add
cmpsb
inc
in
add
das
mov
push
mov
xchg
ret
or
pop
or
test
icebp
clc
repnz
jae
mov
pushf
add
add
cmp
mov
xchg
ret
cmpsl
cmp
or
xor
movsb
push
and
mov
lea
fwait
cld
nop
jmp
roll
dec
cli
mov
mov
adcl
and
decl
add
mov
or
clc
repnz
jae
ret
add
js
xchg
cmpl
subl
add
add
or
shl
clc
repnz
jae
roll
add
cmpsb
outsb
jmp
clc
repnz
jae
add
add
sub
pushf
add
repnz
jae
cmc
movsl
adc
dec
scas
add
repnz
jae
test
jne
mov
inc
inc
mov
clc
repnz
jae
add
out
add
clc
repnz
jae
add
cmc
add
cmp
repnz
jae
xor
movsb
fsts
sbb
incl
add
add
mov
lods
push
mov
xchg
ret
add
add
clc
push
mov
xchg
ret
add
rcr
and
push
mov
xchg
ret
add
jo
mov
push
jmp
add
add
add
mov
xchg
ret
add
popl
add
cmpl
fwait
cld
nop
jmp
add
mov
call
clc
repnz
jae
mov
xor
clc
repnz
jae
add
mov
mov
clc
repnz
jae
ret
dec
add
and
push
mov
xchg
ret
sti
add
pop
stc
mov
add
mov
xchg
ret
add
mov
mov
push
mov
xchg
ret
jne
cmp
leave
je
clc
repnz
jae
add
add
jo
mov
call
clc
repnz
jae
mov
pusha
push
mov
xchg
ret
add
stc
inc
stos
push
fwait
cld
nop
jmp
add
add
and
ret
add
jne
add
popf
sti
add
sti
mov
add
stos
out
lcall
add
call
sti
push
push
mov
xchg
ret
add
mov
sti
xor
mov
push
mov
xchg
ret
nop
cmpsb
test
cwtl
mov
clc
repnz
jae
rol
and
mov
cmc
inc
add
cmpsl
add
add
add
repnz
jae
add
mov
cmp
fwait
cld
nop
jmp
add
out
ds
clc
repnz
jae
mov
movsl
jne
xor
push
push
mov
xchg
ret
mov
add
loope
add
call
clc
repnz
jae
jne
ljmp
nop
jmp
or
add
add
test
lds
repnz
jae
ret
mov
outsb
and
add
add
jne
add
pop
add
xbegin
jno
call
add
adc
dec
fwait
cld
nop
jmp
jecxz
jne
add
add
mov
mov
clc
repnz
jae
call
stc
loopne
mov
repnz
jae
add
mov
add
add
and
fwait
cld
nop
jmp
add
push
cltd
pop
clc
repnz
jae
xor
ljmp
nop
add
clc
repnz
jae
add
adc
mov
clc
repnz
jae
add
cmp
push
clc
repnz
jae
mov
add
add
push
clc
repnz
jae
add
mov
add
mov
dec
adc
repnz
jae
add
scas
rol
pop
xor
call
clc
repnz
jae
add
add
and
in
lods
clc
repnz
jae
and
add
add
mov
add
repnz
jae
add
sti
add
nop
jmp
out
xor
add
mov
es
jae
sbb
jns
pop
hlt
add
nop
jae
pushf
lds
jne
add
add
clc
repnz
jae
add
jecxz
add
cld
call
clc
repnz
jae
or
jne
sahf
cmp
fwait
cld
nop
jmp
jecxz
mov
mov
repnz
jae
add
and
add
mov
repnz
jae
cltd
add
mov
cli
out
add
clc
repnz
jae
add
add
lret
or
mov
xchg
ret
roll
add
push
xchg
push
push
sarl
test
add
clc
repnz
jae
mov
sub
mov
or
repnz
jae
add
lcall
xchg
lcall
pop
test
filds
clc
repnz
jae
add
test
jno
add
fwait
cld
nop
jmp
or
mov
add
mov
nop
jae
add
sub
mov
repnz
jae
pop
add
pop
add
les
repnz
jae
add
sub
add
imul
add
pop
add
add
add
cld
nop
jmp
roll
dec
add
inc
mov
loope
add
add
add
pop
ljmp
jae
add
cltd
add
sbb
shr
mov
fwait
cld
nop
jmp
add
clc
cltd
in
add
clc
repnz
jae
or
add
mov
clc
repnz
jae
ret
add
push
mov
xchg
ret
jne
roll
mov
not
fwait
cld
nop
jmp
add
add
adc
add
dec
xor
jmp
incl
add
add
test
movsl
cmp
mov
dec
fwait
cld
nop
jmp
add
add
nop
rolb
mov
cld
nop
jmp
add
lock
add
jae
cmp
add
add
add
push
insb
push
push
mov
xchg
ret
lock
add
add
add
call
test
pop
or
pop
mov
add
clc
repnz
jae
pop
cmp
add
cmp
mov
clc
repnz
jae
pop
add
push
clc
repnz
jae
add
cmc
add
pop
add
sar
nop
jae
cli
add
rcrl
fwait
cld
nop
jmp
lock
mov
aad
push
push
mov
xchg
ret
add
stc
cltd
push
clc
repnz
jae
add
add
adc
add
rolb
mov
add
repnz
jae
popf
test
addr16
into
push
fwait
cld
nop
jmp
add
add
mov
add
adc
pop
clc
repnz
jae
add
add
jecxz
and
cmp
fwait
cld
nop
jmp
cmpsl
add
add
sahf
add
clc
repnz
jae
add
push
clc
repnz
jae
and
add
adc
push
push
mov
xchg
ret
adc
add
sbb
add
push
jmp
add
add
add
cmc
pushf
add
mov
add
push
push
mov
xchg
ret
sti
shll
mov
shrb
jge
clc
repnz
jae
add
lods
call
clc
repnz
jae
sti
add
pop
cmp
in
add
in
js
add
add
xchg
and
mov
icebp
popa
mov
jge
jle
fs
inc
adc
mov
movsl
out
loop,pn
mov
icebp
pop
or
or
xor
push
jae
cmp
out
sbb
mov
push
inc
repz
jns
and
push
inc
add
or
or
mov
addb
enter
pusha
add
mov
mov
jl
fists
jle
and
aas
hlt
push
jg
lds
repnz
loop
mov
xchg
push
add
out
gs
xchg
mov
mov
dec
lea
sbb
rolb
mov
cmp
sbbl
adc
mov
xchg
lods
clc
pop
mov
mov
jle
fwait
pop
mov
jae
and
mov
add
f2xm1
add
out
dec
push
lahf
and
mov
stos
and
cmp
xlat
gs
fimull
stc
cmpsb
popf
mov
fcomip
xor
add
push
fucomip
daa
and
mov
mov
adc
mov
add
in
cltd
or
inc
lods
movsl
and
adc
sub
dec
mov
test
jbe
cmp
into
sbb
push
fcoml
jmp
dec
sbbl
ljmp
pop
push
xor
push
xchg
jo
mov
nop
add
or
lret
xor
add
adc
xlat
mov
xchg
add
xor
mov
pop
adc
mov
stos
sbb
je
add
mov
subl
mov
outsb
inc
pop
lcall
pop
sbb
cmp
and
mov
cmp
and
sbb
xchg
cmp
das
cltd
loop
mov
addb
dec
dec
mov
sbb
fidivrl
push
add
dec
ds
and
and
add
push
xchg
inc
add
dec
mov
mov
jns
xlat
cld
arpl
outsb
stos
jmp
fildll
lods
mov
arpl
enter
cmp
add
lret
dec
mov
mov
rcr
jg
mov
sub
scas
aam
xchg
pushf
mov
mov
ret
test
lods
cld
push
icebp
scas
sysret
mov
mov
cltd
add
cmc
or
cmp
cs
cwtl
push
clc
sbb
nop
add
mov
push
sbb
jne
mov
jb
mov
dec
test
pop
sahf
or
adc
stos
and
xchg
ds
xor
add
jo
mov
repz
lcall
add
inc
je
pop
clc
loope
xor
mov
icebp
mov
push
bound
mov
mov
in
sub
call
adc
mov
sbb
cmp
sbb
lcall
jl
mov
mov
add
cltd
jg
pop
iret
dec
cmpsb
lock
mov
pmullw
pop
mov
xchg
add
xor
mov
outsl
inc
jl
push
lret
mov
push
mov
lea
popl
mov
dec
add
addb
cmpl
inc
add
add
je
cmp
add
mov
fwait
xor
adc
mov
adc
fwait
mov
push
mov
stc
into
xchg
push
mov
pop
pusha
add
popa
into
push
mov
mov
mov
out
mov
in
rolb
stos
pop
jle
lea
sbb
cld
mov
mov
mov
sbb
das
in
jge
add
orl
mov
outsl
mov
fnstenv
mov
add
fsub
add
mov
leave
add
jl
mov
arpl
ret
mov
mov
adc
test
mov
inc
add
sbb
rcrl
jmp
pushf
nop
add
insb
adc
mov
xor
ffree
add
inc
addb
sbb
add
push
add
add
pop
fstpl
mov
push
pusha
add
mov
adc
cli
adc
xchg
jmp
ds
ficomps
addb
enter
mov
mov
inc
pushf
out
and
mov
enter
inc
push
add
mov
outsl
pop
leave
mov
out
add
mov
add
arpl
dec
daa
imul
jno
add
xchg
cltd
xchg
mov
add
and
call
iret
xchg
add
test
addb
cld
aam
dec
cmc
mov
xorps
lods
mov
mov
mov
clc
arpl
insl
xor
cmp
jge
pop
dec
cmpsb
jg
cmp
out
sbb
stos
mov
add
movsb
test
movsb
scas
or
xchg
scas
jns
adc
pop
inc
add
rolb
add
stos
xor
add
sbb
test
repz
shll
sub
mov
arpl
mov
in
imul
outsl
pop
pusha
add
int3
mov
pop
mov
daa
pop
lods
test
mov
xchg
pop
jecxz
out
aaa
push
pop
add
mov
adc
mov
mov
movsb
or
add
fwait
jmp
sbbl
jnp
add
repnz
icebp
mov
cmp
sub
fildl
add
push
sub
nop
add
mov
mov
inc
add
aaa
cmpl
xor
jg
test
sbb
ds
movntps
add
inc
adc
mov
sub
lret
mov
push
in
add
add
fbld
mov
repnz
add
pop
scas
sbb
out
sahf
loopne
mov
add
add
stos
dec
popa
stc
inc
rolb
mov
add
cmp
or
pop
in
jb
mov
dec
push
das
mov
in
mov
inc
add
psubsw
cmp
mov
mov
pusha
add
pop
add
mov
inc
ljmp
fwait
out
repnz
enter
out
ret
mov
add
add
add
sbb
add
add
add
mov
add
insb
mov
mov
pop
mov
jecxz
insl
pop
sbb
int3
cmpsb
repz
addb
int
push
pushf
push
outsl
pop
movsl
push
lods
in
nop
add
add
addb
arpl
jnp
sbb
mov
add
sbb
push
orps
xchg
pop
cmp
insl
mov
add
add
dec
mov
lahf
cmpsb
pop
push
rolb
mov
add
push
fists
add
ss
add
nop
add
xor
and
sbb
add
into
in
mov
push
adcl
int
or
mov
pop
add
pop
inc
aad
push
pop
jecxz
adc
int
mov
das
xchg
sub
test
sti
fnstenv
jb
mov
lcall
addb
push
adc
mov
dec
popf
jns
enter
cmc
sub
popf
ficomps
push
inc
lret
jb
mov
ficoml
add
pop
sbbl
jae
out
add
add
add
std
jle
add
xor
mov
ds
mov
add
add
mov
js
dec
xchg
jne
repnz
add
add
add
xor
faddl
add
add
push
call
rolb
fnsave
loopne
mov
add
sbb
add
aad
outsb
xchg
inc
xor
mov
std
pop
ds
xchg
add
je
sbb
add
or
mov
sub
loop
mov
add
out
repz
rolb
xchg
or
xchg
outsl
push
jo
mov
add
and
mov
add
xchg
lock
mov
jg
sbb
add
or
and
enter
pop
inc
jnp
jle
sbb
mov
lds
sbb
cmc
xor
mov
aaa
rolb
mov
xor
cltd
adc
mov
insl
mov
pop
sub
nop
add
cmp
scas
adc
xchg
cmc
lods
inc
add
sarl
in
sbb
inc
add
mov
add
or
aas
cmp
add
add
xor
test
jno
addb
sbb
js
mov
add
jmp
add
jp
std
mov
mov
subl
add
xor
mov
mov
add
mov
loop
mov
xchg
mov
xchg
pop
adc
add
add
shrl
xlat
mov
mov
iret
sbb
and
or
adc
add
mov
popl
mov
into
xchg
mov
mov
jp
add
sub
inc
push
into
mov
xchg
jb
mov
lahf
pop
das
fsubl
outsl
das
cmp
xchg
add
xchg
hlt
and
rcrl
lret
inc
add
push
add
and
mov
dec
in
ss
out
loopne
mov
mov
addb
cs
push
add
bound
mov
adc
cmp
pop
jl
add
or
lods
mov
inc
cmc
push
adcl
mov
clc
add
add
add
xchg
adc
mov
jbe
adc
popa
sub
lret
idivl
and
mov
jbe
inc
imul
add
enter
aam
mov
sbb
mov
addb
hlt
adc
mov
js
dec
loope
add
pop
mov
jnp
cltd
in
mov
add
std
pop
jne
sub
sub
mov
pop
inc
ja
add
or
addl
dec
aaa
insb
scas
mov
push
add
mov
and
sub
add
xchg
outsb
pushf
cmp
cmp
add
mov
mov
rolb
mov
xor
push
imulb
mov
sbb
mulb
mov
or
add
mov
pop
add
or
ret
call
add
add
test
scas
incl
mov
movsl
les
sbbl
ds
inc
add
jl
js
lods
pop
adc
add
data16
pop
inc
sub
jecxz
add
aam
push
mov
cltd
popf
push
add
inc
fldl
movsl
ds
in
popf
mov
aas
es
add
repnz
outsb
scas
addb
das
jo
mov
add
faddl
inc
add
add
mov
mov
mov
inc
xchg
lahf
lcall
mov
imul
pop
xchg
push
out
dec
cmc
dec
or
cmp
ret
pop
inc
push
lahf
jnp
daa
daa
jle
sub
mov
mov
sub
push
xchg
insb
mov
addb
imul
test
mov
repnz
mov
mov
fstps
add
xor
lock
jne
add
mov
mov
and
mov
add
shll
daa
push
push
test
lret
adc
mov
or
fcoml
add
add
cmp
js
add
sub
and
mov
dec
call
xor
mov
in
push
pop
add
mov
add
mov
pop
insl
pop
inc
cmp
addr16
out
leave
test
insl
mov
add
test
sahf
mov
cmp
rolb
cmp
cmp
int3
sub
jmp
sbb
lods
dec
push
test
jmp
sti
pusha
add
cmc
rolb
mov
mov
dec
std
dec
imull
in
cwtl
or
mov
jmp
add
cmpsl
cmpsb
dec
sbb
cmp
push
nop
add
pop
leave
xor
adc
mov
pop
in
rolb
mov
pop
movsl
scas
xchg
popa
addr16
adc
setae
fildll
aad
add
imul
inc
add
sbb
and
and
mov
xor
cmpsl
mov
pop
jnp
cwtl
ret
mov
add
add
test
or
mov
mov
mov
movsl
js
add
dec
test
mov
mov
cmp
ret
push
or
js
movsb
inc
add
xor
adc
mov
pop
xor
add
adc
mov
sbbl
xchg
add
mov
inc
or
iret
scas
sbb
mov
add
addb
mov
dec
mov
sub
add
sbb
cld
mov
adc
es
mov
pop
cmp
and
bound
mov
out
out
fmulp
lret
fucomip
cltd
xor
mov
add
subl
add
mov
js
dec
sub
push
xchg
je
mov
fdivs
adc
and
mov
and
push
add
xor
mov
mov
jg
into
and
sub
andl
xor
pusha
add
mov
out
std
addb
addb
ljmp
push
cmp
outsl
and
enter
in
and
mov
add
mov
jbe
cmp
cmp
add
sub
fcomp
jmp
jg
add
and
pop
jno
pop
xchg
add
adc
mov
xchg
jecxz
add
add
add
jae
mov
mov
mov
lret
mov
out
dec
icebp
sub
in
push
outsl
mov
xchg
mov
mov
jg
in
fiaddl
add
test
push
and
mov
inc
and
mov
mov
mov
andl
outsl
cmpsb
add
add
dec
mov
mov
sbb
jmp
or
add
inc
add
pop
fwait
mov
gs
inc
and
mov
enter
popa
cmp
add
lods
xchg
bound
mov
sti
pop
leave
inc
push
sbb
mov
add
xchg
mov
cld
aas
inc
lret
es
add
inc
and
dec
dec
fs
jo
mov
ret
test
mov
add
jge
add
add
push
xchg
addb
mov
pop
and
sahf
sub
xor
pop
xchg
int3
pop
leave
dec
push
xchg
iret
incl
mov
andl
add
mov
mov
add
add
mov
movlhps
jecxz
sub
xor
mov
xor
mov
popf
repnz
das
rcll
imul
cltd
and
xchg
pop
int
xchg
add
lret
je
addl
mov
in
jbe
pop
fwait
repz
dec
in
sbb
insb
mov
cmpsl
inc
sbb
bound
mov
mulb
mov
add
mov
ss
xchg
iret
jno
lcall
sub
outsb
xchg
adc
mov
mov
add
mov
xor
pop
xchg
ret
fcomp
fnsave
in
negl
inc
ja
rolb
mov
cwtl
lock
cmc
sub
or
pop
popf
pop
mov
xor
jb
mov
mov
in
int3
cs
lcall
loopne
mov
repz
mov
mov
loope
fs
push
imul
daa
pop
sti
sarl
add
add
lret
jl
aam
inc
push
or
inc
add
mov
adc
adc
adc
mov
popf
out
jo
mov
ss
sub
rolb
mov
enter
mov
stos
pushf
test
add
mov
test
add
push
mov
xchg
add
push
xchg
push
fisubrs
mov
mov
mov
jl
data16
orl
add
cmp
xchg
and
mov
mov
cmc
fistpl
pop
push
mov
dec
stos
out
push
add
add
jle
loope
dec
sti
mov
repz
mov
je
add
movsb
sub
mov
push
jo
mov
push
inc
xchg
outsl
lcall
fstpl
add
mov
add
push
out
pop
int3
ljmp
mov
add
pop
sub
cwtl
and
mov
mov
mov
mov
mov
xchg
test
and
mov
iret
stos
inc
or
add
mov
fcomps
repz
jmp
xchg
out
and
ss
cmc
mov
add
loope
cltd
lret
xchg
popa
movsb
out
jle
cmpsl
lret
pushf
fmul
daa
jge
fidivrl
fdivr
ret
sbb
add
clc
and
cli
addb
dec
fxch
cmp
pop
jno
lret
push
and
mov
sbb
push
sbb
pop
shll
add
in
sub
popa
out
add
loop
mov
mov
mov
jmp
xchg
xchg
nop
add
pop
cmp
push
stos
loop
mov
bound
mov
roll
add
lods
rolb
mov
cmpl
add
mov
or
add
mov
dec
movsl
mov
mov
add
mov
inc
lret
mov
inc
add
mov
mov
fdivrs
mov
mov
xchg
inc
add
and
mov
mov
add
test
scas
push
fcomps
in
rolb
mov
sub
push
cmp
sti
dec
sbb
cld
xor
lcall
inc
add
fs
add
add
add
xor
mov
cmp
nop
add
add
inc
add
jbe
and
mov
mov
orl
mov
cmpsl
out
xchg
xchg
add
loop
mov
rolb
mov
sub
pop
lret
add
xor
add
add
mov
add
pop
loop
mov
notl
and
and
pop
call
and
adc
add
add
ret
xchg
xchg
das
sbb
add
jecxz
fadd
add
adc
mov
pop
or
sti
mov
rep
aas
pop
mov
aam
sahf
rolb
mov
dec
mov
mov
mov
test
ret
stos
test
sub
push
push
hlt
lods
aaa
aas
push
dec
repnz
xchg
add
cmp
movsl
inc
inc
daa
cwtl
mov
ljmp
add
push
dec
sti
fcmovnu
stos
xchg
lods
xchg
mov
in
je
nop
add
lcall
xchg
cmp
add
and
lahf
mov
add
push
mov
jb
mov
lahf
daa
mov
lds
sub
call
ret
and
or
add
adc
push
add
sahf
imul
sbb
or
sahf
cmp
push
cmpsl
rorl
in
bound
mov
call
mov
js
add
rolb
rolb
mov
add
test
jmp
stos
jl
iret
mov
add
mov
mov
pop
pop
call
arpl
js
add
gs
mov
fdivl
add
adc
add
pushf
xchg
add
int3
cwtl
icebp
leave
loopne
mov
mov
add
cmp
add
int
push
addl
push
aas
das
and
lea
add
cs
inc
mov
js
xchg
inc
add
add
je
cmpsl
cs
insb
pop
xor
mov
lcall
cmpsb
ja
jge
lahf
inc
loopne
mov
adcl
test
push
or
ja
and
lret
add
mov
daa
arpl
add
jae
mov
adcl
sahf
push
pop
lcall
add
mov
sbb
push
dec
mov
mov
mov
fildl
and
mov
addr16
pop
jno
stos
and
daa
out
add
sub
lahf
aas
rcrl
add
mov
adc
mov
add
mov
push
add
add
and
out
add
mov
mov
inc
xchg
outsb
mov
mov
ds
mov
daa
aad
xor
mov
stos
sbb
add
pop
pop
bound
mov
gs
aam
movsl
mov
mov
das
nop
add
add
fadd
fs
xor
push
sub
fiaddl
shll
in
lcall
inc
add
add
adc
mov
fadds
imul
or
pop
jne
rolb
push
popf
mov
adc
je
test
pop
dec
sub
pop
inc
jno
iret
mov
pop
dec
xchg
and
xor
add
add
inc
aaa
push
sub
sbb
dec
fsubrl
add
pop
mov
test
or
push
enter
in
iret
into
xor
iret
enter
sbb
add
jmp
pop
mov
ljmp
push
sub
popa
mov
xor
fsubrp
stos
fidivs
cmp
ret
ss
add
mov
gs
sub
call
leave
addb
pop
lret
add
dec
into
int3
ss
mov
xor
mov
cld
fisubs
sbb
add
xor
mov
add
mov
pop
test
insl
xchg
lret
add
daa
loope
jns
add
inc
imull
jne
ret
clc
mov
std
dec
cmp
cs
add
hlt
sbb
pop
imul
mov
movsb
add
mov
cmpsb
stos
es
inc
cmc
ja
or
adc
clc
mov
testb
movsb
jmp
loope
mov
insb
push
jns
fstl
mov
adc
add
mov
add
cmp
or
cmpsb
out
xchg
inc
sub
pop
sbb
ret
sahf
sahf
sub
add
add
mov
sbb
loop
mov
add
ljmp
add
add
mov
inc
insl
adc
mov
loopne
mov
pop
mov
mov
cmp
mov
and
mov
mov
pop
stos
testl
rolb
mov
xchg
out
push
test
cmp
test
pop
shll
dec
jp
outsb
addr16
das
and
aas
fildl
pusha
add
int
add
inc
mov
dec
cmovbe
xor
mov
mov
mov
sbb
movsl
xchg
add
or
fcmovne
daa
xchg
das
mov
cltd
inc
xchg
inc
in
mov
mov
mov
add
dec
and
mov
mov
lock
mov
cli
icebp
popa
sub
mov
xor
add
fmuls
add
dec
add
mov
lock
jbe
bswap
into
mov
pop
test
jge
jo
mov
add
add
add
and
sub
test
push
addb
jl
mov
pop
jmp
imul
add
inc
test
shld
mov
mov
mov
js
and
mov
xchg
or
mov
data16
jne
add
mov
jg
xchg
push
mov
cmp
mov
push
mov
loope
add
mov
outsl
ret
lret
jb
mov
xor
and
iret
jl
movsl
cmp
popf
std
in
cmp
pop
addl
mov
cli
jb
mov
mov
add
fidivs
rolb
mov
add
add
mov
xchg
push
xor
icebp
and
pusha
add
add
test
rolb
mov
outsl
mov
in
add
and
mov
shrl
fildl
add
out
cs
inc
inc
es
and
mov
sti
loope
loope
cmp
add
pop
pushf
jb
mov
adc
repnz
jge
cli
int3
push
add
add
and
insl
jge
xlat
mov
adc
movl
pushw
mov
mov
insl
pop
adc
mov
add
mov
mov
push
add
movsb
in
mov
or
add
xchg
aaa
sub
add
sub
pop
or
cmpsb
pop
inc
and
lcall
mov
repnz
xor
add
push
scas
push
cmp
test
add
mov
int3
mov
mov
insb
repnz
mov
mov
or
fbld
in
call
mov
inc
add
push
mov
iret
or
mov
mov
mov
in
jb
mov
fdivs
insl
cld
rep
xchg
pop
scas
int3
in
add
mov
jmp
hlt
ficoms
bound
mov
imul
mov
mov
int3
cmp
es
jns
lds
cli
ffreep
lcall
jno
mov
pop
sub
jecxz
xchg
test
roll
add
mov
data16
mov
jg
and
mov
out
push
dec
sbb
mov
mov
imul
scas
dec
jnp
sbb
ja
or
dec
outsb
add
add
pop
push
imul
popf
lock
push
cmp
add
adc
dec
in
subl
cmpsb
fcoms
jp
das
scas
mov
and
mov
mov
xchg
mov
jbe
mov
popf
xor
mov
add
loope
add
ds
add
pusha
add
push
lock
mov
xlat
or
add
and
push
ss
hlt
sahf
push
fadd
xor
notl
int3
mov
mov
adc
jmp
cmp
shr
rcrl
scas
sti
mov
and
pop
dec
add
mov
rcrl
aas
call
ds
fsubrl
jns
test
add
cmc
lcall
mov
add
test
jle
dec
jmp
in
add
mov
add
fwait
dec
mov
out
stos
mov
add
test
in
imul
mov
imul
aam
mov
mov
mov
mov
es
xor
aaa
lret
xor
lcall
xchg
cli
lods
ljmp
and
add
repnz
mov
inc
aad
dec
cmp
out
bt
negl
add
sbb
mov
lods
bound
mov
loope
push
out
adc
mov
mov
add
repz
mov
xchg
adc
pop
inc
dec
test
add
das
cmp
xchg
cmp
ljmp
enter
cltd
mov
dec
popf
test
push
xlat
stos
cmp
add
cmp
fcmovnbe
add
test
mov
sub
scas
lret
push
sub
or
movsb
addr16
add
push
xor
lods
ret
das
cmc
xchg
add
mov
mov
add
xchg
and
pop
jbe
loope
ret
cld
arpl
and
in
mov
mov
add
and
mov
lea
mov
dec
ss
jo
mov
sub
mov
addb
stos
push
xchg
mov
es
mov
push
add
je
mov
sahf
movsl
dec
inc
add
add
sub
je
mov
dec
push
pop
and
mov
arpl
out
testl
xchg
dec
push
leave
repnz
fdiv
cld
lret
lods
mov
in
jb
mov
mov
imul
mov
fsubs
add
inc
sub
add
inc
test
ret
cltd
dec
pop
pop
ret
push
push
out
cwtl
out
xchg
and
mov
out
mov
in
adc
mov
or
sub
sub
add
mov
lea
add
stos
push
ss
adc
jecxz
stos
cmp
inc
adc
mov
or
ljmp
inc
dec
outsb
notl
sbb
cmp
xchg
mov
add
and
fiaddl
xor
pop
sti
mov
push
cmpl
dec
mov
stc
rolb
mov
xchg
push
or
xchg
xchg
inc
pop
flds
loop
mov
cmp
cmpsl
into
inc
out
sub
nop
add
addb
sbb
int3
mov
or
add
scas
add
mov
sub
ss
imull
lods
sub
into
xchg
loopne
mov
mov
pop
mov
jb
mov
sub
add
movsl
xor
mov
scas
test
push
out
loop
mov
adc
xchg
cltd
xor
jle
cli
out
jno
cmp
cmp
add
out
mov
mov
xchg
add
addr16
mov
inc
addb
adc
mov
cld
enter
cmp
loop
mov
loopne
mov
scas
movsl
jp
fsubl
mov
je
jl
dec
data16
add
pop
xchg
xchg
rcl
pop
imul
pop
mov
add
dec
add
add
out
lock
fst
add
sbb
cwtl
inc
cmp
loope
xor
insl
adc
jnp
push
ds
push
outsl
fs
mov
aaa
inc
or
dec
xchg
imul
loope
scas
adc
add
add
xchg
popl
push
je
fldcw
sbb
gs
pop
adc
mov
inc
ss
mov
and
add
pop
dec
and
mov
out
push
push
imul
imulb
xchg
pop
or
add
add
mov
mov
mov
jb
mov
lcall
push
add
out
dec
jno
add
mov
add
leave
jo
mov
push
xchg
dec
dec
movsl
xchg
stos
sub
pop
mov
dec
mov
add
mov
add
es
in
xor
ss
xlat
test
dec
pop
inc
add
inc
es
add
sbb
mov
aad
mov
mov
lret
jp
inc
jo
mov
ljmp
xchg
mov
add
sub
nop
add
add
add
mov
or
mov
pusha
add
sub
sbb
cmp
lea
mov
mov
add
add
ds
jp
nop
add
add
add
adc
mov
push
mov
add
sub
jle
mov
test
mov
sub
ljmp
mov
xchg
add
jmp
inc
add
dec
push
push
sub
xor
fdivl
sbb
add
mov
mov
mov
cwtl
jne
lock
mov
mov
push
inc
add
add
add
mov
sbb
push
outsb
ds
out
rolb
mov
iret
js
add
mov
mov
jns
fdivl
mov
push
notl
dec
ja
and
mov
cmpsb
mov
mov
jbe
sbb
push
scas
jnp
clc
inc
notb
mov
xor
lock
mov
out
fs
mov
ss
cmpsl
push
add
sub
adc
mov
dec
in
sub
add
fmull
pop
inc
mov
popa
js
pop
sub
aam
addb
fwait
sub
call
xchg
mov
insb
pop
popf
bound
mov
add
sbb
fnstenv
mov
lods
pop
ret
aam
push
out
jo
mov
add
inc
fiadds
movsl
jl
cmp
jmp
or
adc
mov
mov
mov
add
mov
lods
push
sbb
cmp
jne
lods
fcomps
add
mov
mov
mov
mov
add
add
dec
pusha
add
jmp
cmp
inc
mov
inc
and
mov
sbb
add
idivb
in
cmpsl
popa
ficompl
inc
lret
loopne
mov
movsb
faddp
scas
or
sysenter
fwait
cmpsb
xchg
add
push
cmp
push
cli
test
pop
mov
mov
mov
scas
sbb
sbb
mov
add
idivb
in
jns
jmp
ficompl
fadds
push
mov
fildll
cmc
cli
lods
mov
cs
mov
cmp
jo
mov
jno
ds
add
add
mov
add
sbb
scas
mov
add
dec
jne
sbb
inc
xor
mov
movsl
xchg
out
xchg
jo
mov
ret
rolb
mov
mov
mov
xchg
mov
xor
iret
daa
iret
addb
push
mov
mov
cmp
aaa
or
in
cmpl
mov
imul
add
adc
mov
pop
push
add
lock
add
xor
add
mov
cmp
mov
or
flds
push
sarl
mov
xchg
mov
mov
add
pop
xor
mov
aad
daa
in
adc
sub
dec
mov
enter
cs
add
rolb
mov
stos
fsubs
inc
cli
or
and
imul
adc
mov
pop
cs
inc
add
filds
fcomps
mov
mov
inc
dec
push
jmp
sbb
and
rolb
cmp
xchg
and
mov
mov
scas
cltd
mov
jb
mov
add
add
ret
vmovaps
fisttps
testl
lock
jnp
iret
cmp
mov
pushl
add
fisttpl
ret
push
mov
mov
add
jns
add
ds
add
add
mov
bound
mov
outsl
mov
xor
mov
addb
test
mov
ljmp
inc
mov
iret
je
mov
add
cmpsl
test
add
mov
addb
mov
sub
xchg
ss
insb
outsl
or
add
aad
out
jmp
es
inc
jbe
xchg
fstps
push
ss
addr16
cwtl
jle
push
int3
adc
mov
jg
std
adc
mov
adc
dec
push
add
xor
cs
or
jbe
lret
mov
cmc
push
jo
mov
test
lret
inc
cmp
cmc
js
add
jmp
movsb
jnp
rolb
mov
add
xor
lds
and
movsb
idivl
add
jne
jle
mov
or
cwtl
mov
inc
push
inc
call
jo
mov
cld
push
or
mov
push
ret
mov
add
stc
movsl
rcll
mov
mov
es
movsb
jmp
into
cld
and
mov
jnp
add
mov
jo
mov
mov
and
lods
inc
add
cli
and
cmp
pop
sbb
add
add
sbb
xlat
jno
ss
ret
jmp
insb
test
inc
add
dec
imul
pop
jle
sub
mov
push
add
and
mov
add
sub
add
test
mov
cmp
das
or
push
mov
mov
push
add
add
sbb
inc
adc
mov
addb
pop
ss
leave
xchg
lods
xor
mov
lcall
mov
test
add
cmp
dec
pop
or
add
add
shrl
scas
lock
mov
daa
mov
add
add
loop
mov
shld
popf
sbb
movsb
inc
scas
push
jns
inc
daa
cltd
cs
mov
inc
cmp
in
add
inc
add
test
mov
ds
xchg
cmp
xchg
rolb
mov
mov
inc
fnop
add
fmul
out
lock
push
fnstcw
sti
xchg
xor
mov
xor
mov
push
sub
jb
mov
add
add
cltd
pop
sti
nop
add
fistps
imul
push
mov
orl
xchg
lret
test
sbb
or
mul
or
mov
not
mov
mov
cmp
test
insl
mov
sub
or
mov
add
test
addb
or
lret
xlat
xor
mov
jb
mov
mov
cmp
jge
push
outsl
imul
std
cmp
mov
pop
ss
push
loope
out
aad
add
add
mov
lock
and
add
mov
sbb
in
popf
xlat
mov
mov
add
cmpsl
inc
add
add
mov
add
sbb
add
add
sbb
sbb
dec
mov
mov
fstpl
push
or
mov
test
outsl
nop
add
sbb
mov
cld
fiadds
mov
push
add
pop
lcall
mov
add
and
jae
movsb
mov
mov
inc
cld
ljmp
adc
mov
in
lahf
adc
rolb
mov
das
sahf
loopne
mov
add
js
pop
mov
in
testl
cmp
insb
out
mov
or
add
mov
fcomps
add
mov
mov
mov
pop
mov
pop
addr16
int
jae
and
add
mov
addb
es
stos
ja
or
mov
add
add
outsl
mov
cmpsb
pusha
add
adc
mov
inc
mov
mov
xchg
add
jg
rolb
mov
mov
mov
mov
add
add
mov
popa
out
add
sahf
mov
mov
out
out
addb
popa
int3
lcall
dec
and
adc
mov
add
add
or
pop
testl
hlt
lds
hlt
and
mov
mov
push
add
ret
xor
pop
addb
ret
lods
cmp
xor
mov
clc
pop
insl
arpl
lds
addb
mov
mov
pop
dec
cmc
pusha
add
adc
mov
push
push
test
addr16
das
jae
or
and
mov
pop
fsub
add
adc
add
rolb
or
mov
mov
add
mov
out
addb
in
xchg
sbb
mov
insl
cmpsl
xor
mov
enter
out
mov
mov
setns
movsl
cmp
maxps
rolb
mov
push
push
loop
mov
test
loopne
mov
add
add
jp
icebp
pop
push
sub
cmpsb
push
mov
test
jae
lret
dec
xchg
inc
add
add
mov
inc
push
movsl
mov
scas
push
add
mov
test
leave
inc
test
hlt
call
repz
pop
cltd
mov
mov
jnp
add
xor
addb
aam
cltd
js
push
push
adc
mov
pop
and
mov
pop
int3
andl
add
cli
push
shll
mov
inc
add
push
lcall
mov
mov
jns
sub
ja
xchg
addr16
fdivp
and
inc
add
mov
cwtl
xor
pop
popf
mov
or
aaa
sub
mull
sbb
mov
or
mov
cmp
mov
into
jecxz
movsb
mov
add
mov
mov
test
addb
push
imul
add
and
mov
mov
stos
push
sbb
add
add
lret
adc
mov
int3
dec
leave
add
mov
ret
aaa
sbb
xchg
add
push
inc
adc
mov
add
pop
les
dec
mov
jno
sub
add
mov
cmp
lock
adc
mov
cmp
and
mov
xchg
clc
push
add
mov
add
dec
mov
pop
pop
hlt
pop
into
in
adc
mov
les
add
add
into
push
add
movsb
pop
roll
cmp
ss
fucomp
lahf
cmp
add
and
mov
sub
xor
or
rcll
int
push
sub
and
push
xor
add
xchg
add
add
mov
fiadds
inc
add
or
mov
xor
mov
dec
and
add
sub
adc
mov
add
mov
pop
lea
add
out
mov
add
mov
out
add
push
sbb
lea
add
or
add
xchg
test
mov
fsub
sub
and
add
mov
mov
ds
mov
mov
jmp
sbb
push
mov
mov
xchg
prefetch
push
pushf
sub
jmp
fdivl
in
es
lock
add
add
fwait
rolb
lods
push
pusha
add
divl
addb
dec
jns
popa
ret
hlt
rolb
inc
add
insl
pop
mov
ds
addb
push
add
xor
fcompl
xlat
cld
movsl
pop
gs
lahf
xchg
addb
pop
aaa
or
inc
test
loope
add
mov
add
lret
scas
and
add
fneni(8087
add
mov
add
mov
xchg
repnz
ret
dec
repnz
xor
outsb
mov
ss
cltd
inc
or
push
subps
pusha
add
mov
xchg
fistps
lods
push
mov
lds
add
jb
mov
sub
jp
mov
add
add
add
mov
sub
inc
out
lret
adc
mov
xor
pop
dec
ret
out
scas
outsl
sbb
and
jno
add
lahf
iret
mov
dec
sub
mov
es
mov
cmp
add
adc
mov
mov
mov
mov
mov
sarl
push
pmullw
gs
push
in
outsb
pop
mov
mov
mov
out
aas
pushf
and
add
mov
lret
cmp
sub
jmp
sub
add
sahf
lds
add
jbe
and
adc
mov
push
pop
mov
pop
pop
push
xor
call
in
pop
push
add
ret
sbb
testb
mov
adc
stos
mov
pop
mov
adc
mov
cmpsb
inc
es
dec
insb
pushf
add
iret
cmp
imulb
lods
popf
mov
add
or
adc
cmp
mov
jbe
or
aam
jbe
bound
mov
pop
fdivs
mov
or
jb
mov
mov
cmpsl
mov
test
add
push
mov
mov
add
xchg
xchg
add
imul
lret
or
cmc
popa
adc
mov
mov
mov
adc
xor
lret
pop
cmp
rcll
sbb
arpl
add
into
pop
rolb
mov
jo
mov
add
mov
out
adc
mov
add
mov
pop
stos
popf
cmp
imulb
mov
add
in
in
repz
outsb
mov
das
popf
icebp
mov
or
mov
addb
and
mov
fdivl
add
ja
jp
add
mov
push
stos
xlat
mov
mov
xchg
loopne
mov
dec
iret
test
loop
mov
pop
inc
add
mov
outsb
ss
add
adc
mov
sub
push
in
test
xor
ss
movsl
int
fcomi
outsb
add
mov
mov
negl
loopne
mov
ret
dec
mov
je
adc
into
out
mov
fiaddl
xor
add
insl
jnp
cltd
mov
mov
jecxz
add
fcompp
push
xlat
pushf
inc
add
add
stos
pop
xor
pop
cmp
cmpsl
jecxz
mov
and
call
orl
data16
jmp
add
outsl
movsb
test
sub
loopne
mov
loop
mov
add
cmp
sbb
adc
mov
inc
mov
jl
add
rolb
mov
jbe
dec
push
mov
add
mov
dec
mov
mov
add
add
mov
pop
push
push
inc
add
cmp
fcomps
daa
test
add
push
add
add
xchg
and
dec
pop
lahf
stc
add
mov
andl
add
add
mov
add
es
popa
hlt
rorl
push
add
mov
mov
jnp
outsl
sbb
lock
xor
mov
int3
pop
jge
add
pusha
add
xchg
xchg
addb
testl
push
push
lods
and
mov
fwait
push
xchg
add
and
xorps
fistps
dec
cmp
sbb
aas
jnp,pt
add
jecxz
cwtl
rolb
fidivs
fdivs
arpl
mov
mov
sub
pop
call
mov
notl
jp
xchg
inc
daa
in
aas
scas
addb
xchg
add
mov
xor
mov
repnz
mov
enter
add
test
add
in
xor
mov
inc
mov
outsl
shll
add
xor
sti
push
testl
pop
jp
add
xchg
add
mov
and
mov
jne
sub
mov
xchg
outsl
mov
and
filds
dec
add
mov
add
loope
add
sub
add
out
mov
add
fs
xchg
xlat
adcl
jl
divps
add
mov
add
mov
add
add
testb
out
add
mov
mov
or
adc
mov
cmp
add
mov
mov
xchg
xor
mov
testb
add
insl
and
push
cwtl
out
adc
mov
mov
jns
decl
mov
add
mov
inc
or
icebp
lock
jge
cli
push
add
mov
adc
hlt
adc
push
add
mov
hlt
pop
int
rolb
mov
pop
mov
std
je
inc
add
sahf
popf
sahf
insb
out
insl
iret
jbe
scas
repnz
cmp
push
stc
sbb
rolb
xor
add
adc
icebp
dec
xchg
loop
mov
jo
mov
out
data16
add
test
sbb
mov
dec
dec
add
sub
addb
pop
sub
std
outsl
ret
or
stos
xchg
jne
leave
mov
mov
mov
stos
dec
popf
rolb
mov
add
mov
mov
scas
mov
negl
sbb
sub
mov
mov
inc
sti
push
pop
test
mov
jnp
add
out
add
add
aas
adc
mov
cltd
mov
add
jecxz
fdivl
mov
mov
mov
sub
cmc
mov
xchg
adc
mov
lock
pop
lea
add
cld
mov
sub
pop
mov
sub
out
sub
push
add
mov
outsb
adc
mov
add
xchg
test
mov
add
jl
hlt
sub
sbb
add
mov
stos
jl
mov
movsl
in
jno
imull
sub
into
in
sahf
mov
dec
sub
add
fldz
mov
pop
mov
mov
sahf
mov
rolb
lcall
popf
push
loop
mov
adc
dec
js
add
call
cmc
push
testl
lods
and
cld
inc
add
sub
fimuls
cmp
pop
pop
push
xchg
das
jecxz
add
xchg
inc
stos
and
mov
add
mov
add
pop
mov
mov
ret
dec
cmovge
sbb
xor
enter
repnz
into
xchg
pop
mov
mov
test
xor
mov
cmp
or
xchg
or
sub
out
notb
add
add
shl
add
dec
jns
add
or
ljmp
xchg
add
add
call
insl
xor
mov
xchg
sarl
xchg
add
cli
pop
nop
add
insb
dec
jl
add
rolb
mov
into
lods
sahf
jno,pn
pop
imul
sub
inc
lret
dec
xchg
xor
lahf
pop
cmc
mov
mov
mov
add
add
les
dec
and
push
cmc
lods
js
loope
mov
addb
icebp
cmc
hlt
push
dec
pop
pop
cmpsb
in
add
cmc
cmp
cmpsl
test
sub
cmc
loop
mov
add
popa
loop
mov
scas
add
add
test
push
in
xor
faddp
add
xor
jg
scas
mov
sub
and
mov
mov
insl
mov
popf
sbb
or
or
test
lcall
mov
lcall
outsb
xchg
ljmp
iret
xchg
add
add
iret
sub
or
mov
icebp
rolb
mov
lds
adc
mov
popa
xor
sti
icebp
mov
stc
add
add
mov
sub
repnz
xchg
push
and
push
or
lret
pop
mov
mov
sti
shrl
shll
jle
mov
std
xchg
adc
sub
mov
stos
sarl
mov
adc
jb
mov
jb
mov
add
int3
repnz
or
mov
mov
xchg
js
cmp
scas
imul
pop
sbb
arpl
add
push
xchg
roll
sbb
rolb
mov
add
jg
ret
int3
cmp
add
and
dec
jnp
mov
mov
push
pop
mov
adc
iret
xchg
lahf
xor
mov
addb
je
xor
or
mov
cmp
sbb
lods
and
gs
mov
push
test
ds
add
add
jne
movsb
push
add
sbb
cltd
push
xchg
test
mov
inc
add
mov
pop
es
xor
and
sbb
adc
inc
cmc
or
jb
mov
and
test
jno
xchg
test
push
mov
xchg
add
jl
arpl
adc
mov
add
mov
cmpsl
jns
out
repnz
jge
add
cmp
nop
add
addb
bound
mov
push
lcall
iret
cmp
add
jmp
add
mov
xchg
aas
adc
movsl
shll
or
add
cmpl
xor
mov
xor
inc
add
xchg
cld
dec
xchg
add
inc
xor
or
or
ret
rolb
mov
popa
mov
add
add
adc
in
subl
in
fcomp
gs
leave
inc
add
cld
sbb
push
add
rep
push
pop
mov
adc
ja
sub
xor
mov
cs
and
ja
mov
add
mov
cmp
mov
or
iret
stc
sahf
repnz
add
sub
loop
mov
mov
add
add
sbb
mov
mov
bound
mov
clc
scas
jg
rcl
loopne
mov
in
add
test
movsl
pop
stc
jno
mov
mov
movsb
aam
test
out
nop
add
mov
dec
add
repz
xor
pop
mov
mov
or
divb
mov
push
add
jp
and
inc
inc
repnz
mov
jmp
bound
mov
sub
test
mov
sub
pop
addb
pop
dec
fisubs
pop
dec
icebp
scas
mov
stos
mov
add
or
sbb
jb
mov
jns
mov
mov
push
and
mov
int
pop
out
stc
mov
add
or
divb
dec
cltd
mov
out
ret
out
sbb
gs
stos
jb
mov
sub
xchg
sbb
mov
rolb
mov
movsb
scas
inc
mov
push
jge
or
fs
adc
pop
lods
xor
cld
hlt
addl
mov
stos
in
mov
cmp
rolb
mov
jnp
sbb
push
bound
mov
adc
mov
sahf
rcrl
mov
xor
mov
mov
add
dec
pop
lods
dec
xchg
aas
push
or
add
mov
adc
sbb
add
mov
negl
enter
sub
sbb
mov
ret
fstpl
sub
adc
mov
das
xor
mov
aam
out
cmp
add
pushl
jmp
fwait
hlt
cwtl
xchg
outsb
jl
scas
mov
xor
mov
into
mov
fs
jmp
and
mov
aam
pop
sub
push
add
lret
and
mov
jle
dec
cmpsb
fcmove
sbb
lds
scas
and
ds
rcrl
mov
dec
push
add
add
mov
add
mov
daa
and
mov
mov
pop
je
add
add
fcomps
addr16
aad
imul
imul
rolb
mov
pop
mov
fcmovbe
add
cwtl
sub
adc
sbb
add
mov
xor
mov
testb
and
ja
xor
push
inc
sbb
and
add
mov
out
mov
ja
or
cmpsl
jg
xor
mov
mov
mov
aam
stos
push
test
add
pop
imul
aad
rolb
mov
addb
push
pop
jbe
add
dec
jle
mov
mov
push
icebp
jge
std
sbb
cmpsl
incl
int
adc
mov
lea
add
cmp
je
scas
jne
inc
mov
add
mov
and
mov
add
insl
mov
add
add
lcall
xlat
mov
idivb
pop
push
stos
cmp
xchg
add
add
jae
cld
pop
jno
jnp
imul
xor
std
imul
push
adc
mov
push
xchg
lods
sbb
iret
mov
mov
add
add
bound
mov
mov
adc
mov
pop
jecxz
mov
push
add
add
cmp
and
adc
mov
inc
aas
or
push
cmc
jge
negb
in
imul
mov
xor
push
ret
push
add
mov
mov
mov
imul
loop
mov
sbb
pop
jb
mov
mov
inc
add
jge
mov
push
imul
pop
sbb
fldt
mov
dec
push
rol
sub
mov
xor
mov
test
rolb
mov
pop
mov
mov
scas
out
pop
sub
jnp
insl
sub
add
add
sbb
mov
lds
mov
aad
mov
jp
mov
cwtl
sbb
dec
mov
repnz
repz
fldenv
and
mov
jle
ret
shll
mov
mov
aas
das
lock
xchg
mov
add
push
xor
mov
adc
in
and
pop
pop
dec
dec
sbb
jle
xchg
bound
mov
xchg
add
jmp
or
data16
imul
jp
fldl
fisttps
jecxz
popf
scas
lock
cwtl
pop
xchg
in
adc
mov
add
mov
add
inc
xor
sti
cltd
popa
jnp
inc
add
test
add
add
jp
xor
mov
cmp
fstpl
xor
shll
xchg
push
or
xchg
mov
add
lock
add
fistps
sub
mov
xor
jp
es
push
outsl
sub
add
mov
inc
add
add
dec
pusha
add
cmpsb
dec
imul
into
xchg
jo
mov
cmp
jns
test
add
inc
xchg
sbb
not
nop
add
mov
add
add
test
pop
popa
push
add
mov
lods
jne
jmp
add
gs
insl
data16
in
push
add
pop
ss
fistl
jmp
leave
aas
imul
add
inc
xchg
xchg
fiadds
add
push
add
adc
add
in
ret
addr16
mov
addl
mov
mov
loope
aam
fs
addb
xor
mov
add
or
pop
and
jmp
lods
mov
sub
add
jno
add
icebp
shrl
lcall
pop
fisubrs
push
pop
mov
mov
cmp
push
inc
add
mov
add
arpl
push
add
sub
mov
add
mov
jecxz
jl
and
mov
mov
or
xor
mov
mov
inc
in
pop
lahf
sbb
or
pop
test
add
sbb
rol
mov
pop
mov
xchg
and
out
dec
rolb
mov
cmp
add
aaa
cmp
in
xor
sub
add
jno
add
push
scas
xchg
and
mov
fsubrs
pop
jg
nop
add
add
xor
mov
add
xor
inc
in
call
push
gs
out
bound
mov
mov
js
sbb
movsl
enter
add
mov
in
fists
add
out
jns
mov
push
mov
std
je
ja
and
lods
enter
mov
cmp
xor
xchg
dec
push
add
mov
pop
jl
out
rolb
sub
and
mov
addb
xchg
add
add
mov
adc
arpl
add
pop
xor
mov
mov
pop
jb
mov
add
fcomip
mov
add
icebp
xor
mov
scas
icebp
mov
stos
lret
idivb
insl
xor
inc
and
add
add
xchg
pop
xor
sbb
add
xlat
dec
rolb
mov
adc
mov
shll
jl
and
mov
mov
mov
add
clc
push
cmp
push
mov
xchg
push
mov
xchg
add
push
mov
mov
sub
lock
push
and
mov
xchg
adc
outsl
int
scas
adcl
dec
lcall
pop
lock
nop
add
in
jnp
push
pop
and
ss
adc
fstl
mov
lock
mov
lcall
mov
mov
inc
add
jecxz
sub
repz
add
repnz
jg
jle
lock
mov
add
and
mov
fldl
or
sbb
or
push
add
mov
mov
sbb
jnp
inc
mov
dec
jp
push
rcr
rorl
push
add
pop
je
sub
add
adc
mov
mov
pop
xlat
mov
fimuls
loope
shll
popa
arpl
mov
lcall
out
mov
inc
add
lret
pushf
rolb
mov
add
inc
add
aam
sub
sub
dec
xchg
sbb
add
push
inc
add
loope
dec
push
arpl
mov
cmpsl
and
mov
das
lret
push
add
pop
movsl
pop
cwtl
call
enter
test
or
sbb
and
add
add
js
iret
out
pop
mov
lcall
mov
sbb
fisttpl
add
add
clc
add
out
add
rolb
mov
add
push
sti
repnz
dec
add
sub
jnp
mov
cmp
leave
pop
sbb
xlat
lcall
pushf
mov
mov
adc
or
mov
push
cld
jb
mov
sub
popa
pop
in
jge
add
pop
sub
leave
jl
lcall
jmp
loop
mov
lods
ja
push
add
jno
adc
repz
mov
adc
mov
ds
or
inc
lods
cmpsl
jns
push
push
add
popa
dec
out
add
jbe
aaa
sub
das
adc
mov
mov
addr16
add
mov
add
es
push
add
mov
sbb
mov
add
es
mov
mov
in
jae
dec
icebp
pop
mov
jnp
cmc
mov
js
shl
aaa
add
in
xchg
je
add
pop
xchg
cmp
sbb
cmp
mov
ja
sbb
add
mov
jnp
flds
jle
mov
adc
mov
imul
mov
jp
das
sub
loop
mov
scas
dec
lods
or
pushf
adc
imul
add
pop
sbb
push
mov
mov
add
mov
add
mov
mov
fwait
dec
test
mov
add
lahf
arpl
add
cmp
je
push
push
les
inc
jle
mov
add
push
in
ds
jmp
lods
aaa
out
negl
mov
push
lcall
andl
pop
arpl
mov
mov
adc
mov
push
rolb
mov
pop
popa
xlat
inc
dec
imul
inc
mov
pop
in
jb
mov
jmp
in
mov
inc
lods
popf
sbb
mov
std
fwait
lret
push
sbb
scas
and
mov
push
add
adc
mov
sub
jns
aaa
std
xchg
idivl
mov
leave
cmpsl
pop
sbb
dec
divb
adc
test
mov
sub
mov
pop
sahf
idivl
dec
aam
lods
test
test
add
test
iret
mov
and
mov
dec
leave
pop
add
mov
mov
add
mov
aas
inc
pop
sbb
mov
cwtl
or
mov
jns
adc
mov
add
das
and
mov
jp
movsl
mov
inc
mov
dec
mov
test
add
mov
dec
push
cmp
imul
cmpsb
inc
add
pop
jmp
sub
cwtl
data16
mov
inc
scas
pushf
mov
add
add
out
xchg
add
loopne
mov
mov
mov
mov
sub
daa
adc
add
addb
stos
aam
inc
dec
dec
and
pop
cmpsb
fisttps
xchg
mov
and
add
pusha
add
rolb
cmp
add
mov
aaa
stc
adc
outsl
push
out
push
incl
pushf
cmc
mov
or
add
pop
cwtl
lds
and
mov
xchg
test
rolb
cmpsl
jmp
insl
mov
mov
sub
or
lock
add
push
mov
inc
mov
fsts
lds
add
mov
add
add
pop
popf
adc
add
lahf
mov
outsb
es
sbb
push
xor
addb
clc
mov
mov
cmc
sbb
sbb
ret
mov
fidivs
pop
xorl
and
mov
lahf
in
xchg
sbb
ret
mov
rolb
mov
mov
mov
inc
add
add
mov
rolb
mov
add
clc
mov
addr16
lcall
push
arpl
dec
movsb
scas
gs
jp
xchg
add
inc
scas
bound
mov
gs
sahf
cmp
lret
and
mov
mov
add
add
mov
fsub
leave
int3
shl
xor
mov
pop
daa
and
jle
cmp
pop
xchg
push
add
mov
add
mov
sub
add
xchg
and
fiadds
adc
mov
scas
in
test
or
sub
addb
mov
and
cmp
sub
mov
pop
xor
mov
sub
or
add
adc
sbb
bound
mov
jno
rolb
cmpsl
xchg
add
add
add
xlat
inc
push
ja
sarl
inc
or
jae
mov
add
movsl
sahf
or
jne
jnp
pop
loopne
mov
mov
add
and
mov
int3
movsl
loopne
mov
add
addr16
sarl
add
mov
inc
add
xchg
jg
jae
jnp
int
popa
cmp
fists
cmp
and
mov
add
out
push
adc
es
ja
add
push
xor
jb
mov
gs
shr
test
sub
lea
jnp
sub
push
mov
in
pop
pop
out
mov
insb
inc
das
daa
rolb
mov
add
repz
add
mov
add
and
cmp
sbbl
inc
inc
xchg
hlt
mov
aas
sub
mov
mov
pop
sub
push
add
xlat
lcall
mov
pop
push
mov
mov
dec
sbb
clc
in
inc
add
arpl
popa
or
in
rolb
push
sub
xor
add
sti
in
rolb
fisttpll
add
mov
sbb
push
xchg
add
movsl
jns
add
in
add
dec
cmp
add
mov
add
hlt
jg
js
add
cmc
icebp
out
jecxz
movsb
addb
mov
add
mov
pusha
add
lcall
repz
adc
into
xor
test
push
jg
xchg
xchg
jnp
pop
rolb
mov
std
int
in
jg
test
mov
mov
mov
fsubr
pop
push
add
ret
call
jge
add
addb
cmp
pop
add
cltd
push
outsl
fdivl
jne
add
test
lret
stos
mov
and
mov
mov
fcmovnbe
add
sbb
arpl
popa
dec
fidivrs
movsl
and
mov
inc
mov
xchg
movsl
cmc
mov
aad
dec
xor
mov
add
xor
pop
ret
int3
dec
iret
les
int
mov
mov
add
js
xor
mov
add
dec
cmc
push
movnti
rcll
mov
cmp
push
daa
aaa
dec
dec
lea
scas
int3
mov
xor
mov
lea
stc
outsb
lock
add
mov
jnp
hlt
outsl
xchg
js
push
bswap
out
arpl
enter
add
add
xchg
push
test
cld
dec
push
cmp
add
add
pop
pop
adc
mov
xor
jno
add
pop
cmp
sbb
push
cmpl
mov
in
xor
pop
pop
push
xor
mov
mov
das
push
jo
mov
jb
mov
int3
inc
mov
test
in
outsl
sbb
stc
daa
mov
mov
add
addb
mov
mov
adcl
pusha
add
mov
stos
pushf
cmp
mov
lcall
add
rolb
mov
mov
add
dec
push
add
lock
roll
cmp
add
push
push
in
mov
jp
inc
add
test
pop
adc
mov
mov
testl
xchg
jge
jns
add
dec
in
les
sub
add
dec
loopne
mov
pop
ret
jp
sbb
push
push
xlat
push
sbb
dec
pop
push
arpl
or
aaa
and
mov
sub
int
fwait
cltd
lds
mov
sub
and
aaa
imul
popf
sbb
aad
add
and
sbb
fsubs
push
add
addb
mov
pop
loop
mov
outsl
sbb
cmpsl
fdivrp
add
adc
popa
addb
push
cmp
stos
pushf
cltd
fnstcw
sbb
mov
loope
add
rolb
cmp
fwait
sbb
cmc
push
sub
jmp
add
sbb
mov
daa
inc
add
mov
leave
imulb
dec
jl
sbb
std
adc
rorl
pop
les
lock
cs
sub
mov
and
jae
add
add
lret
adc
or
lock
mov
lahf
lret
push
add
mov
push
add
jg
and
lcall
fcoml
dec
std
pop
mov
mov
jne
add
mov
add
ucomiss
xchg
add
leave
insb
lret
leave
ret
cmp
je
push
mov
mov
pop
mov
lret
and
xlat
clc
sub
lret
push
xchg
scas
test
in
mov
fcom
lds
fdivs
stos
fstl
add
mov
fldcw
arpl
add
stos
in
jecxz
mov
add
stos
xchg
inc
nop
add
add
mov
push
pop
stc
addb
pop
xchg
jb
mov
dec
mov
add
add
mov
aam
inc
enter
add
rolb
mov
mov
xchg
add
add
loopne
mov
add
test
add
add
mov
cmpsb
sub
lods
stos
push
negl
mov
add
and
inc
add
call
adc
data16
pop
lret
cmp
insb
push
fwait
pop
sbb
leave
and
das
lret
inc
ds
lret
inc
jle
add
int3
jno
mov
jmp
fmul
sub
xchg
cmp
add
push
or
mov
sub
or
int
stc
mov
test
mov
popa
mov
sub
addb
push
add
xor
jmp
sti
pop
cwtl
iret
ja
add
cmpsb
popw
ret
pop
outsl
mov
je
cwtl
jae
add
stc
jae
or
call
mov
add
pop
insl
sbb
pop
pop
repnz
mov
mov
mov
fwait
jbe
xchg
pop
out
add
dec
inc
add
add
mov
mov
xchg
xchg
jle
push
mov
into
loope
sbb
add
loope
imul
mov
push
rcll
add
mov
cmc
daa
jecxz
pop
adc
add
hlt
test
inc
pop
xor
push
adc
xor
adc
push
add
popf
jb
mov
mov
jmp
sbbl
loop
mov
into
adc
mov
cltd
xchg
mov
add
nop
add
jae
add
push
cmp
pop
rolb
mov
lock
call
add
push
out
pop
dec
jne
dec
xchg
or
push
xchg
xchg
cli
add
mov
add
cld
lds
add
dec
push
scas
in
pop
mov
mov
inc
test
fcomps
fcomps
aas
movsb
add
push
insb
mov
mov
inc
cmpsl
or
outsl
pop
jp
mov
add
in
push
add
cmp
sbbl
mov
push
in
lret
out
cmpl
mov
add
fwait
add
mov
add
mov
mov
aas
xor
add
lret
mov
js
add
leave
pusha
add
insb
test
mov
lods
neg
pop
pop
int3
clc
or
lcall
cmpsb
stos
fldcw
mov
repnz
mov
add
add
mov
ss
jns
add
xchg
xor
pusha
add
jmp
addb
jle
add
ret
aam
dec
push
dec
es
movsl
inc
fldl
add
sbb
movsb
sub
sbb
add
mov
or
mov
add
cli
repz
add
pop
fnstenv
ljmp
jns
inc
hlt
rorl
push
add
iret
xchg
add
add
daa
mov
push
add
add
add
xchg
and
push
add
add
adc
add
addb
pop
fcoml
add
mov
add
rep
jecxz
mov
gs
rcll
lahf
dec
rorl
repz
mov
xlat
loopne
mov
pop
lods
push
pop
repnz
push
sub
or
xchg
add
add
in
add
rolb
int
adc
add
xchg
add
push
add
inc
movsl
jns
inc
pop
jp
or
es
mov
cld
push
scas
sar
pop
rolb
mov
pusha
add
jae
add
mov
mov
mov
add
xchg
mov
insl
inc
and
pop
and
add
mov
pusha
add
add
xchg
lahf
push
jmp
or
adc
mov
jg
add
in
adc
mov
mov
inc
rolb
mov
mov
mov
and
mov
add
mov
into
and
iret
daa
cltd
cli
jecxz
add
repnz
add
mov
mov
in
scas
mov
arpl
mov
cs
lcall
pop
mov
das
inc
or
mov
add
add
add
add
mov
pop
int
xor
mov
leave
lods
sbb
stos
and
jne
add
add
add
ds
out
enter
daa
rolb
mov
mov
lods
cld
mov
mov
lea
xchg
mov
add
jecxz
scas
iret
dec
lods
insl
pop
mov
int3
push
std
pop
mov
or
and
mov
ljmp
mov
jmp
or
or
push
sbb
mov
mov
outsb
xor
mov
jno
add
addb
imul
mov
sub
mov
jo
mov
xchg
xor
or
sub
xchg
ret
push
pop
xor
mov
adc
sbb
cs
mov
ja
pusha
add
inc
add
je
xchg
out
jnp
add
fs
aad
sbb
mov
shr
sub
mov
push
cmp
outsl
jne
aas
addb
cmp
inc
fdiv
add
lods
das
mov
inc
add
sub
repnz
or
pop
push
pop
iret
jnp
mov
add
sbb
sbb
pop
adc
pop
rolb
mov
dec
mov
adc
add
push
ret
insb
repz
mov
test
add
mov
imul
aas
ljmp
push
add
add
pop
cmpsl
inc
add
cmp
xchg
cmpsb
and
popa
loopne
mov
stc
jge,pt
add
jae
imul
rcll
lods
push
pause
add
lods
mov
mov
jnp
push
xor
mov
add
adc
addb
rolb
mov
mov
cmpsl
aad
inc
pop
mov
jbe
lret
ds
sub
pop
adc
push
aam
add
icebp
clc
mov
rorl
dec
adc
or
adc
pop
cmp
scas
addb
pop
jp
xor
mov
add
push
sbb
out
sub
int
dec
mov
jp
mov
ds
mov
dec
rol
xlat
push
je
add
xor
mov
xchg
movsb
es
in
mov
mov
mov
mov
fidivrs
daa
bound
mov
add
xor
or
adc
mov
rolb
mov
cmpsl
push
pop
out
pop
rolb
mov
out
andl
lods
pushf
jmp
arpl
arpl
inc
and
add
stos
mov
pop
jle
sub
movsb
nop
add
mov
outsb
add
mov
out
mov
incb
cmp
cld
push
add
mov
mov
sub
inc
dec
dec
lods
mov
lret
mov
pop
jmp
stos
mov
cli
inc
popa
push
add
sbb
outsb
jl
add
lret
push
outsl
push
add
mov
hlt
cmc
fdivs
cli
std
xchg
sbb
das
jecxz
and
mov
cltd
insb
int
loop
mov
and
subl
and
mov
mov
add
stos
sbb
dec
andl
add
movsl
dec
std
xor
mov
push
arpl
mov
xchg
mov
push
jne
in
cwtl
cmc
lret
aas
jmp
add
cltd
cmpsb
repnz
jo
mov
addr16
mov
pop
inc
dec
mov
aad
sbb
add
loop
mov
int3
xlat
mov
lret
inc
jae
adc
out
add
pop
cmc
push
pop
mov
add
push
add
mov
add
adc
mov
loop
mov
add
or
mov
cwtl
addr16
jl
or
stos
iret
dec
jne
adc
and
mov
xchg
xchg
mov
add
xchg
add
shll
dec
sbb
cmc
stos
arpl
add
add
inc
add
rolb
mov
mov
push
mov
pusha
add
subl
mov
cld
sub
js
add
mov
add
outsl
daa
rorl
movsb
clc
cmp
add
mov
pop
rolb
pop
jne
addb
out
add
mov
mov
and
lods
mov
mov
stos
std
cmpsb
push
add
add
dec
imul
and
mov
mov
mov
sbb
out
js
jge
mov
xchg
imul
divb
mov
adc
mov
mov
cmp
mov
adc
add
jg
test
inc
out
aad
push
xlat
lods
mov
push
mov
clc
lcall
or
lock
pop
pop
aad
out
pop
sbb
loope
repz
mov
mov
sbb
ret
hlt
mov
mov
or
je
addl
outsb
roll
mov
mov
mov
mov
xor
mov
lahf
sbb
add
mov
inc
and
roll
push
add
pop
adc
cmpsb
incb
add
mov
pop
inc
mov
mov
inc
jno
pushf
mov
fs
pop
fildl
mov
push
dec
jb
mov
push
test
cmp
inc
add
imul
lret
adc
sub
add
add
or
ret
leave
sub
add
mov
aas
loop
mov
push
or
add
mov
mov
sub
ja
sbb
inc
mov
mov
dec
lret
mov
mov
lahf
bswap
jp
jbe
pop
movsb
lds
pop
popa
xchg
ret
jp
mov
mov
xchg
add
mov
lods
iret
lahf
rolb
scas
enter
add
add
push
add
add
dec
roll
aas
mov
push
add
addb
mov
cmp
dec
fs
imul
idivb
jp
dec
inc
sub
lock
stos
or
xor
decl
sbb
rolb
mov
inc
jno
inc
js
in
or
test
jne
add
movsb
push
enter
push
add
push
lret
inc
pusha
add
aad
jmp
jnp
pop
fisttpll
hlt
dec
or
sbb
sbb
cmc
adc
mov
stos
pop
ss
or
sbb
int3
daa
mov
aaa
mov
call
add
add
push
cmp
mov
pop
cli
jb
mov
xor
mov
xchg
movsb
lret
inc
inc
xchg
xor
add
mov
xor
mov
mov
in
and
imul
insl
arpl
mov
sub
push
pop
testb
jge
fistl
add
in
and
dec
gs
jmp
xor
mov
add
popa
out
nop
add
repz
xchg
fisubrl
cli
jmp
add
lods
sbb
xor
add
jle
daa
and
popa
shrl
rolb
mov
xchg
mov
idivb
inc
mov
or
rolb
mov
and
mov
daa
mov
cs
add
inc
adc
addb
xchg
pop
std
je
xchg
sbb
fs
out
pop
jbe
push
fs
aad
and
push
add
inc
adc
bound
mov
jg
pop
jp
xchg
dec
push
and
mov
cs
mov
data16
jle
dec
adc
jb
mov
lret
jo
mov
in
lret
rolb
inc
add
mov
mov
iret
daa
int
ds
cs
std
jne
add
mov
add
add
mov
in
add
mov
mov
xchg
cld
es
add
cmp
add
mov
fs
lcall
adc
mov
jle
inc
ss
mov
sbb
and
loope
ret
std
inc
loop
mov
cmp
fnstenv
xchg
cmc
add
xchg
pushf
or
and
add
pop
jg
mov
mov
scas
adc
mov
push
call
rolb
pop
stos
sbb
sti
push
repnz
pop
jae
adc
je
mov
add
add
add
pop
xchg
cmp
dec
enter
push
cmpsl
push
mov
jle
ret
into
faddl
dec
mov
mov
mov
popf
push
cmp
add
fmuls
or
add
out
rcpps
lea
ljmp
push
pop
clc
push
fldenv
mov
enter
push
push
jge
icebp
sub
xor
mov
mov
add
loop
mov
add
jecxz
loopne
mov
inc
cmp
or
xchg
add
pushf
stos
mov
push
jb
mov
xchg
fsubrs
fldt
add
ds
arpl
add
bound
mov
add
dec
add
add
mov
sub
add
imul
lock
cmp
loope
int3
mul
xchg
fiaddl
mov
xorl
fists
mov
out
lds
push
sub
cmp
and
add
loop
mov
mov
sbb
mov
mov
dec
lock
xchg
out
cmp
or
test
push
add
rcl
add
push
sahf
fcmovu
lods
lret
mov
mov
icebp
lcall
xchg
or
test
movsl
loope
cmpsb
popf
les
mov
pop
das
lret
std
and
dec
test
jno
jns
int3
cmp
mov
js
in
pop
aam
or
xchg
test
inc
loop
mov
mov
add
or
stc
sbb
lock
lock
popf
xor
mov
push
jns
add
sub
jecxz
lods
xor
mov
loope
outsl
into
aam
lods
adc
mov
lret
mov
or
mov
mov
outsw
movhps
icebp
push
ja
js
das
pushf
stos
sarl
popa
mov
mov
mov
daa
mov
xchg
sub
out
mov
call
mov
xor
add
incb
mov
mov
mov
sub
xchg
imulb
js
add
adc
mov
lret
test
ret
je
jg
add
inc
add
test
dec
fstps
loopne
mov
dec
popl
pop
mul
fstpt
mov
push
das
adc
in
add
mov
jp
jae
add
mov
xor
jne
shll
jns
mov
addb
mov
popa
push
scas
mov
dec
pop
addb
mov
inc
out
pop
pop
out
xchg
test
stc
and
into
pop
gs
xchg
scas
adc
mov
sbb
jp
data16
sbbl
loop
mov
cwtl
cwtl
or
sbb
and
sbb
add
ljmp
sub
or
ja
pushf
inc
push
mov
fsubrl
addb
push
rolb
mov
sbb
add
sbb
dec
adc
add
push
or
xchg
xor
mov
je
pop
sub
push
rolb
mov
mov
pop
lea
add
add
push
jmp
jae
xchg
mov
notl
mov
mov
ja
add
inc
insb
cmp
push
mov
test
aad
jns
sbb
lods
sub
xchg
test
dec
cmp
dec
subl
ds
mov
leave
add
stc
rolb
mov
pop
jecxz
out
jns
push
add
stos
mov
mov
mov
mov
ljmp
vfrczsd
cld
clc
adc
adcl
sbb
add
add
pop
adc
clc
addb
lret
and
fcoms
cmp
mov
add
scas
inc
add
add
mov
mov
mov
sbb
add
push
push
fcomps
in
into
loop
mov
roll
mov
pop
mov
int3
pop
aam
add
daa
sub
mov
mov
shll
add
rolb
adc
leave
pop
rcll
pop
dec
iret
lcall
mov
sbb
add
int3
sbb
sub
imul
cmp
pusha
add
inc
mov
cs
add
lret
das
pop
stos
rolb
mov
leave
push
add
mov
mov
loopne
mov
xchg
add
mov
xchg
jmp
xchg
outsl
addb
test
mov
int
sbb
push
in
push
bound
mov
mov
push
loop
mov
jp
push
repnz
mov
out
mov
stos
gs
int
push
add
xchg
rolb
aaa
mov
add
rolb
jg
or
mov
xlat
arpl
inc
push
outsl
xchg
pop
inc
mov
or
sub
add
addr16
jmp
dec
pop
repz
mov
pop
inc
shll
arpl
and
jmp
dec
mov
mov
and
mov
sbb
push
add
mov
mov
addr16
mov
add
mov
sub
add
pop
pop
add
mov
lcall
add
fs
push
push
sub
popa
test
jle
ljmp
dec
es
push
add
imul
mov
sub
and
add
jnp
fisttpl
mov
mov
inc
popf
loope
xchg
cmp
test
aam
add
pop
cmp
arpl
and
add
jae
push
mov
mov
dec
sbb
scas
ficoms
nop
add
inc
lods
push
mov
imul
mov
ja
adcl
adc
mov
add
lret
mov
or
mov
mov
inc
ds
imul
mov
add
add
add
or
or
add
xchg
cli
mov
jmp
punpckldq
mov
jbe
roll
push
cmpsb
or
jnp
test
mov
loop
mov
xchg
push
adc
fsts
pop
sub
mov
repnz
fcoml
dec
inc
fcomip
lahf
test
add
out
jmp
mov
add
cmp
fisubl
add
jbe
pop
xchg
sbb
outsb
call
pushf
rolb
mov
fwait
xchg
cmp
dec
daa
mov
add
sti
cmpsb
adc
mov
mov
adc
fistps
mov
or
shrl
test
idiv
mov
push
repz
inc
pop
push
inc
mov
mov
mov
dec
in
add
mov
add
mov
clc
ret
pop
push
icebp
and
testl
mov
pop
lock
testl
pop
adc
cld
mov
repz
push
jo
mov
fcomi
push
xor
mov
add
mov
cmp
insb
test
das
push
add
loop
mov
sbb
adc
mov
mov
push
cs
push
push
sbb
pusha
add
add
inc
movsl
fs
adc
mov
add
cmc
pop
pop
int3
jmp
scas
and
mov
add
insl
and
mov
jmp
out
pop
mov
adc
bound
mov
ds
cmp
mov
jecxz
add
fdivs
sbb
dec
inc
insl
addb
mov
fdiv
dec
push
add
rolb
mov
mov
xor
mov
roll
adc
lret
sub
add
mov
add
mov
mov
xor
inc
cs
xor
orl
out
in
dec
out
xor
mov
dec
mull
call
add
mov
cmp
adc
xchg
sub
add
inc
ljmp
add
push
loop
mov
or
addb
push
pop
outsl
fsubrl
lea
add
aam
push
mov
add
sti
mov
out
mov
sbb
or
mov
dec
stos
pop
pop
add
push
cmc
push
add
pushf
push
add
ljmp
aam
mov
pusha
add
inc
nopl
add
add
inc
outsl
test
add
inc
mov
es
jmp
sub
inc
ret
leave
inc
sbb
fists
loop
mov
add
dec
xchg
lret
jmp
mov
inc
out
cli
xor
adc
add
mov
pop
dec
iret
es
mov
add
dec
xor
add
das
stos
mov
mov
rolb
mov
push
inc
add
rolb
mov
pop
cmpsl
dec
out
je
add
test
jns
jg
out
repz
subl
cli
cwtl
mov
add
scas
ret
outsb
pop
xchg
mov
lods
add
adc
and
mov
stc
add
sbb
lea
es
ds
mov
dec
jnp
pop
xchg
add
or
cmp
or
push
inc
add
mov
mov
scas
xchg
dec
push
fsubr
push
lods
or
pop
sub
jne
mov
add
mov
je
ret
push
dec
or
add
fcoms
aam
jnp
flds
scas
and
mov
add
inc
into
lret
and
mov
gs
outsl
aam
ss
add
pop
loop
mov
sub
mov
jbe
aaa
aaa
fdivr
into
pop
mov
outsb
fldenv
ds
daa
flds
cmp
or
add
std
lds
pop
or
pop
cmpsb
sub
inc
push
push
ss
mov
mov
jecxz
inc
add
mov
mov
add
adc
jne,pn
add
mov
scas
xor
into
and
mov
add
mov
sbb
pushf
loop
mov
mov
std
ror
cli
dec
sub
mov
push
es
xchg
imul
add
mov
mov
add
pushf
ror
cmp
pop
bound
mov
loope
add
add
fildll
add
mov
mov
add
mov
adc
mov
test
xor
cmpsb
xchg
add
adc
int3
mov
mov
add
mov
out
add
fildl
out
mov
mov
jb
mov
xchg
insb
sub
inc
negl
pop
cltd
ret
les
or
jmp
decb
add
or
sahf
jle
jb
mov
rcll
add
test
bound
mov
add
popf
in
add
dec
adc
popfw
dec
rolb
mov
push
and
push
dec
push
push
add
add
add
stc
xchg
cli
sbb
xchg
or
rolb
mov
add
mov
or
clc
cld
fmul
push
pop
xchg
pop
loope
add
push
lds
sarl
pop
outsb
pop
repnz
cs
pusha
add
aam
add
add
testb
jle
add
mov
mov
mov
jbe
add
jb
mov
bound
mov
addb
adc
add
mov
outsb
addb
lea
js
xchg
repnz
pop
aaa
or
loope
push
xorl
add
add
add
xor
lods
dec
arpl
inc
pop
or
xchg
xchg
add
repnz
call
add
jmp
push
mov
test
mov
push
addb
cli
adc
scas
dec
push
lods
or
pop
aaa
in
arpl
int3
mov
test
bound
mov
push
int3
test
add
dec
mov
or
inc
pop
mov
adc
mov
insb
icebp
sahf
dec
out
movsl
xor
mov
mov
std
iret
mov
xor
add
mov
repnz
lret
pop
jns
jnp
add
add
add
test
xor
lods
push
repnz
fs
jecxz
inc
lcall
mov
add
xchg
sub
dec
mov
inc
addb
add
mov
out
dec
ret
cmc
loopne
mov
cld
jnp
pop
pop
cld
and
mov
in
lahf
testl
pop
cmp
jo,pn
mov
sahf
outsl
out
out
sbb
mov
xor
mov
arpl
add
push
xor
pop
sub
in
pop
mov
inc
inc
pop
jbe
cmp
stos
add
mov
ljmp
dec
aad
out
bound
mov
mov
out
cwtl
rolb
addb
pop
mov
cmp
stos
adc
mov
jo
mov
and
sbb
pop
out
icebp
dec
push
cs
push
add
mov
mov
xlat
scas
scas
xor
mov
push
jl
push
add
cld
pop
sbb
mov
add
adc
mov
in
dec
lret
fsubs
bound
mov
dec
xchg
mov
add
mov
and
aas
mov
pop
or
arpl
mov
dec
lock
xchg
add
test
add
xchg
sbb
jge
add
adc
lock
mov
jecxz
divl
mov
add
mov
jle
fstpl
stos
jae
movsb
sbb
add
ret
inc
push
inc
cli
daa
scas
pop
jo
mov
sbb
in
inc
add
mov
or
add
fbld
mov
add
mov
icebp
ss
and
mov
cmp
stos
jns
bound
mov
clc
std
jns
dec
int
iret
movsb
hlt
mov
mov
dec
mov
push
add
ds
imul
xchg
sub
mov
mov
mov
mov
sub
lea
or
call
mov
sahf
cwtl
dec
mov
mov
mov
jle
pop
fidivrl
xor
sbb
pop
mov
push
sbb
stos
jle
sbb
clc
xchg
mov
arpl
mov
add
bound
mov
dec
or
and
mov
loope
test
sbb
add
mov
fisttps
loopne
mov
add
ficoml
and
push
pop
fimuls
inc
aad
sub
dec
jbe
adc
mov
adc
mov
mov
add
mul
and
sahf
fnstcw
movzbl
add
lock
add
mov
enter
cmp
dec
jae
fmull
pop
sbb
inc
stc
cwtl
sub
addb
fimull
hlt
xor
pop
stc
add
cli
jmp
cmc
cmp
xchg
es
pop
push
pop
and
mov
add
jno
add
sub
wrmsr
add
out
into
xbegin
into
out
negb
es
fistpll
out
shll
mov
sti
cmp
movsb
hlt
inc
cwtl
les
insb
insb
nop
add
shr
cmp
mov
mov
add
pop
cli
or
test
jp
rorl
jbe
add
int3
cltd
or
push
dec
pop
sbb
add
add
lahf
sbb
test
sub
mov
or
repnz
sub
icebp
jmp
add
mov
jl
lret
pop
int3
out
xor
mov
add
lahf
pop
mov
int
push
add
mov
pop
in
inc
lahf
inc
add
popf
repz
mov
insb
xor
mov
add
or
add
xor
and
mov
iret
aas
mov
mov
lret
sbb
pop
iret
repz
xlat
mov
mov
dec
pop
push
aaa
rolb
mov
fstpt
in
test
int
pop
jnp
add
mov
mov
add
xchg
push
clc
sub
pop
add
leave
outsb
sar
cmc
push
pop
fucom
and
mov
add
mov
mov
cmpsl
lds
adc
call
fists
bound
mov
jl
add
rolb
push
push
fwait
and
fsts
jg
xor
outsl
add
sbb
xor
inc
xchg
popf
mov
sti
push
test
xchg
mov
or
add
mov
mov
mov
popl
ja
mov
push
cmp
lcall
ljmp
in
dec
inc
push
outsb
add
mov
inc
mov
aaa
inc
mov
pop
push
dec
add
mov
cmp
pushf
inc
add
add
pusha
add
adc
add
sbb
sbb
xor
mov
push
mov
add
mov
add
add
in
aam
mov
mov
add
fmuls
add
dec
push
add
mov
sbb
fldenv
add
pop
pop
push
jno
lock
add
push
add
inc
xor
loope
les
add
add
and
sbb
sbb
bswap
test
leave
mov
inc
add
and
mov
mov
cmpsl
pop
je
cmp
movsb
mov
jbe
mov
mov
inc
or
xchg
imul
mov
test
out
mov
pop
xchg
push
push
test
ja
outsl
xor
sar
and
cmp
add
jns
add
mov
into
test
add
mov
or
addr16
ficoml
sub
dec
add
mov
outsb
and
clc
rolb
jae
cvtdq2ps
sbb
imul
add
adc
test
mov
sbb
loopne
mov
mov
out
add
push
sbb
add
add
fistpl
mov
dec
iret
psubusb
in
add
mov
cmpsb
add
hlt
sbb
xor
mov
lret
cmp
push
push
push
sbb
mov
daa
lcall
jmp
add
inc
mov
pop
aaa
daa
mov
and
mov
cmp
cli
lds
lock
leave
leave
lret
pop
push
add
outsb
aad
lea
mov
pop
xchg
movsl
adc
mov
pop
pop
push
rcrl
and
mov
ret
addb
flds
xchg
sub
int
dec
fdivs
jo
mov
shrl
cmc
mov
xor
fs
mov
sub
mov
or
push
cmp
es
adc
mov
fsubl
leave
gs
add
dec
out
dec
rolb
mov
sub
xchg
mov
lret
cwtl
fnsave
repnz
mov
mov
cmp
push
in
add
clc
ss
or
dec
daa
pusha
add
jns
cmp
jo
mov
ss
push
inc
jp
add
mov
xor
addb
mov
sbb
jge
jae
xchg
lret
fucomip
inc
sbb
add
mov
imul
cmc
sahf
mov
addb
adc
mov
call
mov
sbb
fwait
call
xor
ds
sbb
push
adc
adc
mov
scas
lea
sbb
dec
lahf
inc
adc
mov
loopne
mov
sahf
xchg
xchg
int
push
ja
aas
or
int3
ja
or
rolb
pop
sbb
nop
add
cwtl
dec
mov
rolb
mov
es
popa
aam
lds
jmp
stc
cltd
and
mov
add
add
mov
scas
pmulhuw
adc
ds
mov
stos
and
insb
fnstenv
mov
test
lret
mov
sub
movsb
jns
adc
jge
insb
add
das
xor
jne
in
in
lods
mov
mov
or
aam
inc
add
mov
sbb
pop
enter
icebp
jno
aad
cmp
clc
or
add
lds
into
sub
mov
icebp
data16
jb
mov
push
int3
fwait
xchg
cmp
lahf
mov
dec
in
rcll
mov
repnz
loop
mov
cmp
add
adc
mov
cmp
loop
mov
mov
lods
push
fcomp
in
add
dec
movsl
pop
cmc
rolb
mov
add
scas
mov
fisubs
mov
inc
lret
and
mov
cs
push
scas
addl
cwtl
out
test
cmp
icebp
lods
mov
inc
int
cmp
das
push
xor
dec
stos
sbb
lret
fdivr
dec
cli
popa
in
out
out
add
out
push
fisttps
sbb
addb
decl
std
sub
add
stc
lea
add
and
jmp
or
jle
dec
jnp
lods
adc
mov
mov
add
addb
pop
jbe
lret
out
push
jbe
fs
fldcw
lret
popf
sbb
daa
jns
add
lods
and
mov
cld
xchg
scas
in
fwait
sahf
addb
imul
inc
add
insb
scas
sub
cmp
ffreep
lret
and
pop
pop
je
in
add
ret
ja
add
xor
lret
cltd
fs
dec
test
lods
fiadds
ret
cmp
xchg
and
jge
loope
fisubl
inc
add
sbb
cmpsb
sti
sbb
add
dec
cs
mov
push
add
add
add
adc
mov
add
lods
mulb
add
jp
dec
jp
mov
xchg
sbb
sahf
mov
mulb
add
addb
xor
lahf
mov
pop
sub
mov
jecxz
jg
add
jge
enter
add
ljmp
repnz
inc
insl
xchg
add
mov
add
inc
lea
fst
notb
cmp
js
xchg
xchg
adc
xchg
icebp
enter
cmp
add
cmp
adc
mov
fcomp
outsb
stos
adc
aaa
fsubrl
push
add
in
xor
mov
push
mov
outsb
mov
pop
ljmp
jmp
inc
mov
mov
stc
push
add
push
add
iret
mov
inc
add
add
aaa
fistl
pop
cmp
add
mov
hlt
sub
mov
data16
pushf
int
cmp
nop
add
pop
inc
sbb
jb
mov
mov
stc
bound
mov
imul
xor
xchg
imul
stc
adc
mov
lods
pop
mov
stos
pop
pusha
add
mov
xor
push
add
jae
lock
into
loopne
mov
sbbl
gs
inc
push
int3
dec
sub
jl
xor
sub
adc
add
enter
cmpsl
pop
inc
add
lods
mov
pop
fwait
mov
sub
add
ret
mov
cmp
add
mov
mov
jno
rolb
mov
dec
push
sbb
dec
iret
add
jns
xchg
xchg
cwtl
push
fcoml
loopne
mov
es
xor
mov
mov
add
lahf
sbb
jle
add
mov
sbb
inc
mov
mov
jge
cmp
scas
inc
push
cwtl
les
cli
aad
addb
call
xlat
mov
pop
clts
ds
mov
add
inc
lock
pop
push
add
add
test
data16
push
clc
out
outsb
mov
rolb
mov
addr16
add
cltd
push
jno
cmpsl
sbb
repz
sbb
addr16
mov
cs
test
add
add
mov
push
add
add
mov
shll
push
pop
cmp
add
cmc
dec
lods
dec
jg
sub
mov
aaa
in
xor
mov
cmp
adc
mov
insb
sbb
push
pop
mov
inc
das
mov
dec
push
clc
mov
test
add
xchg
inc
add
mov
add
adc
roll
sbb
jo
mov
add
mov
add
mov
test
add
mov
movsb
call
mov
lods
mov
or
movsb
aaa
or
cmp
insl
sbb
xor
mov
rolb
cmp
or
test
jb
mov
mov
dec
fwait
fs
cmp
and
cld
sub
mov
jmp
dec
or
xchg
sbb
mov
add
jb
mov
outsb
sbb
shll
cltd
mov
jbe
or
gs
add
mov
mov
add
aas
leave
push
lret
mov
lret
push
sub
mov
push
cmpsb
sarl
andl
and
mov
push
add
scas
mov
add
ds
bound
mov
add
mov
idivb
jno
popa
jmp
inc
inc
popa
sub
cmpsb
les
ret
and
dec
sub
out
test
add
int3
lods
insb
hlt
mov
hlt
push
inc
add
repnz
mov
xor
mov
add
push
push
add
mov
add
pusha
add
test
and
add
loopne
mov
rolb
add
mov
loopne
mov
sub
and
leave
sub
popf
or
stos
pop
pusha
add
add
mov
add
xor
jns
add
mov
aaa
xchg
mov
jb
mov
and
stc
xor
cmp
test
sbb
mov
sbb
add
into
xchg
adc
push
xchg
out
xor
mov
add
mov
jo
mov
sub
push
test
or
out
not
fs
sbb
jl
loopne
mov
pusha
add
mov
lret
aas
lea
sbb
mov
mov
sub
xchg
test
adc
mov
xchg
add
popa
stos
jns
add
clc
jbe
add
jecxz
add
data16
mov
add
xchg
cld
test
sbb
pop
fisubl
mov
cld
sbb
insb
mov
fs
mov
sub
divl
mov
xchg
add
out
dec
dec
in
mov
inc
add
cmp
fxch
lret
jb
mov
cld
adc
add
notl
add
adc
repz
andl
xor
mov
add
mov
mov
mov
test
mov
jl
test
cmp
popw
inc
popa
add
add
ret
mov
outsl
pop
cmp
mov
lods
jl
repnz
scas
mov
cmp
mov
cld
mov
outsb
int
pop
pop
inc
cld
repz
inc
xlat
aam
add
pop
push
mov
or
sub
pop
push
outsb
push
mov
add
add
mov
fwait
mov
add
mov
lods
xchg
roll
shll
add
pop
call
mov
or
and
movsl
sbb
stos
sbb
add
mov
jnp
sub
mov
andl
xchg
push
fisttpll
rolb
mov
lret
xchg
add
mov
or
mov
aas
jg
xchg
add
data16
inc
popa
sbb
add
pop
imul
stc
mov
pop
push
add
jno
push
movsb
imul
cli
xchg
cmc
pop
movsl
lahf
sahf
push
xchg
or
fwait
imul
imul
sub
enter
add
adc
mov
mov
pop
in
add
adc
outsl
rep
xchg
int3
xlat
jae
rcll
scas
hlt
add
mov
test
addb
xor
add
and
int3
in
adc
add
mov
pop
mov
add
jo,pt
mov
xor
mov
addb
aas
fs
mov
pop
xchg
push
jge
add
idivb
pop
decb
ja
add
int
cmp
dec
pusha
add
mov
add
mov
in
and
add
mov
and
mov
add
pop
fs
mov
cmp
in
test
mov
push
lret
movsl
push
add
mov
add
mov
mov
ret
pop
and
mov
mov
cmp
mov
add
add
xchg
addl
mov
mov
push
lea
mov
jns
add
xchg
out
push
add
data16
mov
sub
add
rcll
mov
inc
add
xchg
xor
mov
add
add
pop
mov
pop
or
add
ffreep
add
mov
and
mov
fldcw
lcall
mov
xchg
dec
sbb
xor
enter
test
xor
pushf
sub
mov
sbb
jo
mov
add
add
jo
mov
push
lods
cmpl
cmp
xlat
pusha
add
stc
sbb
arpl
pop
sbb
add
mov
mov
mov
arpl
mov
adc
in
mov
mov
add
scas
pop
sti
or
add
mov
or
mov
add
mov
xchg
add
push
dec
pop
aaa
rcll
adc
jae
dec
or
sbb
mov
push
inc
sahf
je
jae
in
lea
lods
les
movsl
dec
test
mov
dec
outsl
mov
int
dec
mov
sbb
push
jns
fcomip
ficompl
jo
mov
mov
fidivs
int
jp
les
aad
mov
add
add
mov
std
lret
push
out
xor
test
adc
lea
dec
push
adc
inc
push
addb
lods
cltd
leave
xchg
pop
adc
mov
add
mov
push
cmc
fisubrs
pop
loopne
mov
mov
add
dec
pop
xchg
push
add
pop
rolb
mov
out
xor
adc
stos
rolb
mov
sub
fbld
mov
rolb
mov
scas
test
jle
add
add
mov
mov
add
push
or
pop
or
stos
jg
add
mov
mov
das
mov
mov
and
mov
mov
and
mov
icebp
xor
mov
mov
fnstsw
inc
cmp
add
rolb
aaa
sbb
jo
mov
cmp
movsb
push
mov
add
add
addr16
mov
mov
rcrl
sti
scas
adc
jne
jmp
ss
and
mov
add
push
or
cmp
adc
push
cmp
in
iret
sbb
push
sbb
cltd
addb
jecxz
add
pop
lret
dec
lods
test
mov
mov
sub
dec
sub
js
loopne
mov
rolb
mov
popa
js
cld
mov
cmp
insb
dec
or
or
aaa
mov
mov
mov
push
mov
pop
inc
add
adc
mov
pushf
fs
jbe
pusha
add
xor
dec
stos
jbe
lret
push
add
add
sbb
add
fwait
add
adc
addr16
clc
leave
loopne
mov
and
mov
outsb
and
xchg
add
inc
outsl
sbb
mov
mov
clc
mov
ret
sbb
mov
scas
mov
mov
movsb
xchg
jmp
and
mov
movsl
jg
cmp
and
mov
pop
gs
loop
mov
test
pop
cmpsb
sub
dec
int3
xchg
or
pop
cmp
test
mov
insb
inc
ljmp
jle
add
loopne
mov
rolb
mov
inc
adc
xlat
xorl
mov
jle
or
add
gs
ficomps
lret
jmp
jle
add
idivl
dec
test
jb
mov
mov
sbb
jmp
incl
or
add
inc
push
fs
sbb
es
out
leave
adc
jge
add
pop
in
inc
xlat
pop
mov
mov
mov
mov
add
jnp
inc
loopne
mov
pop
push
das
mov
push
add
sub
rolb
mov
mov
or
mov
jmp
rolb
mov
mov
mov
call
push
int3
mov
mov
mov
enter
adc
pop
andl
int3
cmc
push
jbe
adc
mov
insb
jne
les
adc
pop
nop
add
in
pop
jle
pmulhuw
and
outsb
xlat
sbb
jno
decl
call
lret
jnp
xor
and
mov
iret
jmp
xchg
xchg
add
push
mov
inc
xchg
cmp
mov
add
or
cmp
xchg
add
iret
lret
mov
mov
jp
les
mov
or
test
pop
mov
adc
ljmp
add
je
sbb
mov
or
mov
pusha
add
cwtl
sbb
cmp
or
sub
add
add
arpl
inc
or
mov
and
mov
cltd
ror
push
dec
push
data16
mov
add
or
test
mov
mov
je
sahf
data16
add
push
jg
inc
add
mov
cld
push
fisttps
rolb
mov
add
test
lret
cmp
xor
sub
insb
mov
iret
rorl
sbb
daa
and
mov
push
outsl
pop
and
mov
jns
cld
scas
dec
push
jg
mov
cmp
mov
add
ljmp
add
add
dec
ljmp
sbb
jge
add
dec
inc
and
cmpsb
mov
aaa
out
insl
std
out
xchg
movsl
mov
js
jg
mov
push
inc
pop
mov
lods
xlat
dec
ss
add
push
adc
adc
mov
add
fcom
add
inc
fnstenv
mov
inc
add
add
xor
mov
add
mov
mov
add
push
add
push
cli
mov
aam
or
xchg
leave
test
mov
clc
ret
inc
ss
loopne
mov
mov
rcrl
in
or
add
mov
je
add
or
push
push
jns
test
mov
mov
push
add
cmp
dec
pushf
jge
mov
push
add
mov
into
clc
lock
jge
mov
je
stc
push
mov
mov
sahf
push
add
mov
addb
and
je
push
roll
add
pop
xor
mov
movsb
and
mov
jae
jge
add
out
jae
jle
mov
lock
or
jg
add
mov
mov
fsts
inc
add
jne
dec
sub
out
add
aad
add
ret
roll
fnstsw
sub
dec
in
shrl
mov
daa
dec
lcall
ret
cmpsl
xchg
cli
repz
rolb
mov
add
arpl
in
add
movsl
stos
push
add
add
adc
mov
mov
cmp
aaa
mov
rolb
jl
imul
inc
cwtl
ret
repnz
mov
add
in
jge
mov
jg
gs
fisttpll
fidivl
add
pop
pop
mov
jg
sbb
in
add
mov
in
sti
jl
in
sub
mov
or
aad
push
jb
mov
imul
pop
insl
inc
mov
es
push
loopne
mov
fnstenv
add
mov
mov
loop
mov
rolb
rolb
lds
mov
call
adc
sub
push
dec
pop
ret
mov
inc
add
mov
mov
mov
xor
mov
add
mov
add
pop
xor
xchg
rolb
mov
pop
mov
push
xor
mov
scas
mov
jecxz
mov
inc
or
clc
sbb
add
mov
sub
xor
out
ret
inc
xor
mov
jl
aad
insl
sub
jo
mov
fisttps
pop
inc
add
add
mov
add
es
cmp
jmp
fisttps
add
inc
add
mov
add
cltd
mov
sbb
add
pop
sub
mov
dec
gs
mov
mov
repnz
push
addb
and
mov
imul
add
enter
jae
test
xchg
xlat
cmp
sbb
or
pop
cmp
std
xchg
add
mov
data16
add
add
pop
mov
mov
xlat
adc
mov
iret
out
fcompl
cmc
and
xchg
mov
mov
add
jne
jle
pop
pop
fnsave
mov
add
mov
add
mov
mov
jb
mov
inc
mov
std
mov
push
pop
pop
test
int
cli
xchg
jae
add
dec
mul
jae
add
mov
add
lret
dec
lods
aam
imull
jmp
movsl
bound
mov
mov
mov
pop
std
and
mov
inc
les
addb
mov
mov
mov
stc
stos
or
rolb
mov
cvtps2pd
pop
mov
jmp
out
xchg
add
mov
dec
add
mov
xor
mov
add
in
push
push
push
push
ret
mov
fisubrl
jb
mov
mov
sbb
add
mov
add
in
jne
movb
and
push
popf
push
dec
shrl
adc
ret
psubsw
add
mov
and
mov
lock
add
mov
jns
scas
push
rolb
mov
add
sbb
add
repz
dec
fildll
add
add
idiv
out
add
arpl
add
adc
add
mov
fcmove
stc
xchg
dec
ja
pop
movsb
xor
mov
cmpsl
inc
inc
add
xor
mov
add
add
add
gs
pop
ss
lods
mov
push
and
out
adc
add
stc
jbe
pushf
mov
adc
add
cld
test
negl
cltd
mov
insb
push
lock
and
jbe
mov
stos
jle
out
xor
aad
stc
sub
shr
push
cmp
push
nop
add
mov
cltd
rolb
mov
mov
push
aad
lock
mov
pop
inc
add
xchg
pop
lods
mov
or
xor
mov
add
xchg
enter
pop
daa
sbb
in
mov
adc
repnz
add
int3
shll
mov
mov
jl
inc
repnz
sub
xlat
cli
jns
jge
test
mov
mov
pop
push
data16
add
aam
sbb
scas
cmp
js
ljmp
test
add
add
jae
cmpsb
aad
xlat
popf
test
or
lcall
inc
add
mov
enter
add
mov
enter
jae,pn
add
add
sbb
fwait
mov
loop
mov
add
fstpt
mov
lods
adc
mov
sub
push
cwtl
xchg
pop
mov
and
mov
bound
mov
add
push
add
stos
aaa
fmul
cld
imulb
les
add
aaa
mov
arpl
ds
pop
fldenv
mov
pop
or
movsl
xchg
add
add
xchg
add
scas
cmpsb
insb
jle
add
fildll
cmp
inc
add
mov
in
arpl
cmp
add
aas
sbb
mov
inc
ljmp
pop
jno
loope
inc
xchg
jne
mov
sub
push
adc
mov
pop
cmpsb
stos
js
pop
cld
movsl
cmp
dec
mov
add
jge
loop
mov
fcomp
jg
int3
movsl
rolb
mov
cmp
xchg
fmuls
mov
add
push
xlat
pop
imul
mov
leave
and
mov
jp
mov
adcl
push
ds
mul
push
mov
test
pop
pop
jns
fiadds
int3
xor
xchg
adc
lcall
test
imul
add
mov
mov
in
out
mov
out
ret
xchg
jno
or
add
mov
and
mov
rolb
nop
add
cli
cmovnp
add
dec
pop
xor
mov
mov
cmpsl
add
mov
imul
inc
lret
fstps
dec
xor
add
or
and
mov
push
push
aaa
ss
repz
add
mov
repnz
mov
mov
dec
out
stc
test
jle
out
xchg
or
sbb
shl
add
dec
jne
inc
jae
add
sbb
lock
or
lcall
shl
jl
pop
xor
mov
sub
jne
pop
adc
in
push
rolb
mov
mov
mov
mov
inc
add
add
adc
mov
xor
mov
lea
mov
add
jl
add
into
dec
and
pop
lds
push
xlat
test
dec
lret
mov
lret
bndstx
lret
test
push
popa
pop
sub
loopne
mov
mov
add
push
mul
cltd
jle
add
pop
arpl
mov
jb
mov
movsb
ret
loope
sbb
mov
adc
adc
insl
icebp
xlat
sub
sbb
push
add
stc
cmp
rolb
cmpsl
xchg
frstpm(287
lods
mov
mov
adc
dec
or
imul
adc
cmp
clc
push
mov
mov
in
and
xlat
pop
mov
sbb
add
add
mov
inc
test
push
add
adc
es
pop
popa
shl
addb
cli
cmp
jb
mov
add
jne
rolb
mov
xchg
sub
add
add
add
mov
mov
loopne
mov
dec
aas
jo
mov
xor
aad
js
addl
js
mov
xor
xor
ja
divl
fnsave
add
mov
out
cmp
inc
ret
leave
pop
push
mov
test
rcll
mov
mov
mov
ljmp
dec
mov
insb
mov
mov
in
test
mov
mov
add
jae
es
xchg
ja
lret
mov
fmulp
jb
mov
add
sub
sub
jb
mov
imul
fldl
xorl
loopne
mov
add
mov
add
jae
lahf
mov
fwait
mov
dec
cmp
sbb
add
dec
inc
or
addr16
rolb
lock
pop
addb
xlat
push
adc
mov
bound
mov
push
adc
mov
and
inc
rorl
cwtl
lea
iret
mov
gs
mov
loop
mov
pop
popf
push
add
push
add
mov
sti
js
xor
les
out
jns
loop
mov
fwait
cmp
sub
scas
fisubrl
xchg
add
or
push
pop
lret
inc
fidivs
xchg
fisttpll
dec
scas
mov
mov
mov
push
scas
cmpsl
xor
mov
mov
mov
mov
mov
or
sti
cmpsb
cmp
movsb
fwait
xchg
add
xchg
hlt
xor
xchg
add
add
pop
out
or
pop
push
ss
ficoms
mov
add
and
cmp
mov
add
stos
stos
shrl
add
mov
add
jb
mov
loop
mov
add
adc
jb
mov
inc
add
stos
dec
mov
add
mov
pop
rolb
mov
int3
rcr
push
jg
stc
addr16
aaa
cmp
fcompl
icebp
ss
stos
xchg
enter
adc
mov
int3
add
sbb
mov
cmp
pop
ret
icebp
mov
aas
test
add
cmpsl
mov
mov
push
pushf
jg
pushf
int3
adc
mov
mov
fidivs
add
push
scas
stos
insb
sub
xchg
daa
jecxz
add
add
je
dec
sbb
cmpsl
lock
mov
sub
add
jnp
jge
add
xchg
in
out
icebp
mov
inc
add
or
aam
inc
add
clc
gs
add
rolb
mov
mov
push
mov
mov
jmp
in
test
cmp
stc
out
dec
mov
add
add
mov
lods
fstps
mov
dec
cmp
addb
jge
inc
xor
pop
adc
xchg
icebp
je
dec
jnp
jae
add
mov
mov
add
and
cltd
mov
and
stos
faddl
mov
xchg
or
hlt
repz
and
mov
add
mov
mov
pop
mov
inc
add
mov
rolb
mov
repz
arpl
xchg
mov
mov
push
dec
pop
repnz
fidivl
add
push
scas
pushf
push
mov
int3
pop
cmp
adc
mov
add
mov
jp
and
xchg
xchg
add
popf
arpl
in
jge
cmp
and
mov
add
mov
add
mov
addb
dec
adc
push
mov
pop
movsl
sar
push
imull
lret
add
insb
push
push
and
mov
mov
fwait
out
mov
jmp
sbb
sub
jae
lock
mov
insl
stos
pushf
dec
sbb
ja
cld
add
add
add
mov
mov
and
mov
adc
mov
pusha
add
jmp
mov
fisttps
jne
sahf
iret
leave
popa
inc
add
int
repnz
cmp
movsb
xor
cmpsl
cmpsb
mov
or
add
mov
mov
arpl
jno
mov
push
ljmp
mov
repnz
jns
dec
outsl
push
add
cmp
add
outsl
cmp
pop
aas
into
adc
mov
fidivrl
lods
les
push
daa
sbb
push
add
mov
mov
jo
mov
adc
mov
jbe
jo
mov
add
cmp
addb
and
mov
add
gs
add
mov
lcall
pop
out
mov
sbbl
mov
add
in
aad
add
fistps
ljmp
jb
mov
cmpsl
and
mov
in
imul
dec
sbb
mov
add
xor
sbb
add
hlt
mov
addb
pushf
ss
rolb
mov
mov
or
xchg
add
mov
add
pop
in
adc
mov
aam
add
push
xor
fwait
add
incb
jb
mov
test
rolb
mov
mov
pop
rolb
clc
fdivrl
popa
aam
jecxz
dec
das
add
push
scas
mov
push
mov
mov
fcomip
test
jns
out
and
add
mov
rolb
mov
mov
notb
cmpsb
or
cli
jo
mov
js
jae
mov
mov
or
clc
sbb
xchg
or
add
rcll
fmuls
xchg
xor
add
icebp
aad
les
mov
dec
rcll
or
data16
and
mov
sub
inc
add
sub
cltd
mov
add
mov
mov
mov
add
mov
inc
add
inc
add
outsb
cmp
jg
rolb
mov
dec
cmp
pop
jg
cmp
inc
popf
mov
mov
addb
scas
je
ficoml
add
mov
mov
in
test
mov
add
or
mov
cmpsl
or
scas
or
add
pop
movsb
fwait
clc
je
bound
mov
add
dec
jl
in
add
push
daa
mov
mov
test
aas
dec
sbbl
mov
popf
pop
jmp
sbb
mov
lods
pop
sub
add
mov
fbstp
mov
fists
rorl
sbb
fnsave
ljmp
mov
mov
gs
mov
add
push
loope
adc
gs
jae
mov
sbb
mov
jg
adc
xchg
add
mov
lcall
nop
add
loopne
mov
inc
cli
dec
jo
mov
loopne
mov
mov
inc
hlt
addb
xor
sub
stos
or
push
movsb
mov
push
add
add
out
cmpl
cld
pop
into
lahf
add
mov
cld
std
push
mov
loopne
mov
add
dec
mov
fwait
jge
add
in
adc
imul
mov
mov
mov
and
xchg
add
mov
push
or
mov
mov
mov
or
xchg
dec
mov
or
jns
imul
cmp
pop
pusha
add
or
add
push
std
xor
lret
fcomps
add
dec
out
jg
test
add
pop
shrl
add
and
mov
add
add
les
xor
mov
add
xor
lcall
sub
jle
pop
out
mov
mov
mov
popa
mov
cmc
inc
adc
mov
push
sti
adc
mov
add
out
ret
je
pop
rolb
push
cs
inc
pop
adc
mov
mov
fildl
in
addr16
add
addb
mov
dec
mov
ljmp
pop
pop
test
pop
or
pushl
pop
cmp
jp
cltd
add
dec
jmp
nop
add
xor
lret
mov
pop
sub
rcr
jnp
clc
fwait
mov
cmp
xchg
or
cmpsl
repnz
and
mov
jns
add
mov
decb
xchg
jmp
push
add
add
sbb
ljmp
out
sub
fstps
mov
sub
negl
ret
out
adc
mov
add
push
xchg
or
bound
mov
sarl
mov
add
add
adc
mov
lret
add
mov
mov
mov
mov
stos
sub
dec
xlat
divb
sbb
loopne
mov
add
sub
push
test
out
rcrl
sub
jle
rolb
mov
dec
loope
lret
sbb
sub
test
mov
add
rolb
mov
fs
fs
sub
add
mov
test
loope
aam
add
lcall
mov
or
stos
cwtl
inc
adc
mov
lods
imul
mov
aad
cmp
mov
jg
add
add
flds
out
adc
mov
add
icebp
adc
add
cwtl
dec
and
mov
addb
pop
mov
mov
mov
fisubrs
lret
mov
cmp
add
jo
mov
pop
mov
mov
mov
jp
inc
pop
mov
sub
push
push
ljmp
imul
jp
add
mov
xchg
dec
sbb
out
jnp
stos
jp
call
lcall
add
xchg
cld
aaa
add
mov
push
add
jl
push
push
int3
push
add
imul
xor
pop
das
xor
mov
es
pop
xchg
xchg
lds
pop
iret
inc
add
mov
je
int3
mov
push
xor
mov
sbb
add
add
and
mov
mov
mov
add
pop
sub
loope
rolb
insl
test
loope
pop
sti
ds
es
dec
sbb
add
jae
dec
lods
xor
mov
into
scas
mov
outsl
and
adc
push
push
adc
sub
repnz
add
popa
out
sbb
adc
add
pop
pop
in
inc
add
xchg
addb
cwtl
sbb
sahf
rolb
mov
scas
icebp
or
sub
repz
mov
loop
mov
mov
and
mov
aaa
out
pop
int3
cld
prefetchwt1
mov
pop
mov
pusha
add
inc
add
mov
push
sbb
cmpsl
js
mov
loope
add
rcrl
adc
sbb
addb
cs
pop
inc
imul
mov
cmp
in
pusha
add
add
or
sti
push
sbb
sub
arpl
mov
les
xor
xor
mov
mov
xlat
mov
test
pop
mov
sbb
xor
mov
xor
mov
pop
loope
push
jmp
sub
hlt
inc
out
sbb
add
adc
mov
pop
sub
jle
mov
in
add
and
jne
push
jnp
aaa
lods
jbe
cmpsb
inc
add
outsl
mov
add
add
mov
mov
cli
adc
mov
mov
or
add
mov
cmc
push
icebp
sbb
mov
jmp
pop
mov
add
enter
cmp
jns
data16
mov
in
std
push
es
xchg
dec
pop
push
add
insl
mov
add
add
rcrl
mov
rolb
mov
mov
add
inc
add
xchg
mov
mov
movsl
adc
mov
ret
cmpsl
xor
mov
lods
jns
movsl
lcall
dec
movsl
and
mov
xor
mov
mov
bound
mov
mov
dec
push
cs
pop
aaa
mov
add
mov
mov
push
mov
lea
jbe
xor
mov
xchg
insl
mov
ret
aaa
inc
leave
call
xor
sub
add
add
mov
fwait
fs
mov
lods
mov
add
sub
pop
mov
mov
mov
adcl
insl
xchg
pop
and
inc
xor
adc
mov
ret
mov
decl
out
setns
push
std
lea
aaa
frstor
xchg
pop
aad
add
inc
movsb
loop
mov
pop
stc
dec
jnp
pop
mov
test
push
int3
mov
sbb
sub
mov
mov
enter
and
cmp
sub
dec
andl
in
push
pop
inc
dec
mov
or
lods
scas
out
pop
ror
clc
sbb
enter
add
jp
add
cmp
pop
mov
pop
pop
rolb
rolb
insb
repnz
imul
jne
and
inc
bound
mov
lret
mov
insb
leave
lock
and
jno
push
sub
mov
adc
mov
rolb
mov
add
mov
arpl
jo
mov
add
mov
dec
jae
pop
push
add
add
insb
call
test
scas
rorl
and
mov
fmull
mov
sbb
iret
sub
add
mov
xor
sub
outsl
xor
mov
rolb
mov
imul
push
icebp
push
mov
mov
ljmp
out
mov
jno
add
frstor
mov
jne
cmp
jmp
dec
sub
add
mov
mov
add
mov
add
and
mov
pop
int
jae
fmuls
sub
xor
mov
je
cmp
mov
out
jno
dec
in
lock
mov
mov
add
mov
rolb
mov
mov
iret
sarl
cli
inc
add
nop
add
mov
xor
mov
dec
sub
or
lods
or
loop
mov
repnz
test
rcll
and
mov
rolb
mov
arpl
mov
cmp
mov
xchg
hlt
test
adc
mov
add
fwait
aaa
pop
sbb
xchg
into
sub
pop
call
adc
add
mov
mov
sub
lods
dec
dec
enter
mov
sbb
jmp
pop
adc
mov
imul
add
pusha
add
mov
adc
add
add
sbb
aas
subl
sub
add
xchg
add
jne
or
mov
mov
add
out
aam
mov
adc
xor
sbb
ja
or
sti
arpl
push
add
adc
addb
in
hlt
mov
mov
mov
mov
xchg
stos
pop
pop
lds
adc
mov
add
adc
add
mov
cld
dec
xor
mov
test
jbe
or
mov
mov
sbb
stc
enter
pop
and
mov
outsl
pop
xchg
mov
add
add
sbb
jnp
ja
fildl
add
and
repnz
mov
jno
mov
ficomps
add
inc
add
add
or
fisubs
fwait
jb
mov
ss
pop
int3
hlt
mov
mov
pop
and
mov
xor
mov
mov
movsb
in
mov
add
inc
adc
inc
fstl
sub
add
add
add
add
jle
pop
fstl
sub
bound
mov
test
mov
mov
sub
fcmovne
cmc
repz
aam
mov
in
xlat
sub
ljmp
divl
loope
mov
das
sbb
xchg
test
cmp
lods
mov
inc
xor
mov
hlt
mov
mov
frstor
sahf
movsb
aam
cltd
out
add
push
add
pop
or
faddl
cwtl
cwtl
add
mov
adc
rolb
mov
mov
add
add
leave
push
add
pop
xor
mov
push
stc
push
repnz
imul
sub
mov
xor
push
push
add
sarl
pop
mov
mov
dec
push
rolb
mov
cmp
fistpl
jmp
and
fimull
inc
add
jmp
mov
mov
mov
les
adc
out
cld
jmp
pop
adc
mov
imul
aaa
ljmp
jnp
jge
rolb
mov
add
nop
add
pop
mov
add
pop
cmpsb
mov
mov
add
