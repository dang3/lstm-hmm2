mov
addr16
push
ljmp
and
inc
daa
add
pop
jecxz
adc
mov
repnz
mov
addb
xchg
pop
pusha
add
sub
fisttps
mov
mov
outsl
sub
ficompl
add
add
adc
inc
add
add
push
iret
xor
push
add
add
push
adc
int
xchg
add
add
cmp
add
mov
add
add
add
repz
mov
pop
jae
int
or
movb
aaa
add
push
add
dec
lahf
cmc
mov
pop
xor
add
mov
pop
add
xor
add
call
aam
rcll
add
cmp
sub
shll
add
mov
inc
add
inc
lret
add
das
pop
rolb
jg
and
add
lahf
loop
mov
fldt
repz
xchg
ljmp
decb
jmp
add
into
mov
add
add
mov
aam
sbb
inc
add
add
jmp
aad
rolb
jg
mov
lods
xchg
cmp
out
xchg
add
out
mov
lcall
add
pop
inc
pop
jp
imul
mov
jmp
dec
inc
add
imul
jno
add
mov
outsl
mov
sub
dec
mov
push
add
push
cmp
ret
aas
addb
add
movb
dec
out
sub
add
mov
add
imul
add
push
add
mov
add
popa
mov
ret
sub
movb
xchg
jnp
data16
leave
mov
add
and
mov
test
lahf
loop
sbb
mov
bound
mov
fstl
in
out
fiadds
mov
add
sbb
mov
out
rolb
shll
jl
add
add
mov
insl
xlat
sub
call
or
test
add
add
dec
mov
icebp
jge
add
add
jmp
add
std
in
sbb
pop
aas
mov
mov
cmp
add
add
add
or
add
push
sbb
inc
mov
xor
add
push
rolb
add
push
add
jle
aad
add
inc
add
fmull
add
add
add
rolb
sbb
inc
add
add
dec
clc
fdivp
ss
add
cmp
daa
adc
jecxz
add
add
push
cmp
jecxz
gs
arpl
cld
pop
insb
cmp
xchg
sub
add
cld
int
add
xchg
in
addr16
push
add
xor
add
pop
outsl
mov
int3
movsb
add
inc
add
adc
mov
adc
jne
add
mov
jae
lds
lods
ret
xor
jb
sub
out
add
out
fidivl
add
add
xchg
mov
js
and
stc
mov
jne
test
test
mov
addb
add
mov
add
add
decb
sub
add
into
stos
into
in
outsb
push
add
lahf
pop
and
mov
int
and
nop
add
add
loop
add
bound
mov
lret
add
outsl
xchg
hlt
add
stc
jg
add
inc
mov
dec
dec
aas
mov
jmp
add
imul
ret
jns
dec
testb
jo
mov
mov
popf
pop
sbb
jb
mov
inc
cmp
xchg
sub
je
mov
mov
in
mov
pop
movb
sub
lcall
inc
sti
sub
add
xlat
jno
int3
mov
mov
outsb
loop
pop
ss
rcrl
adc
xor
movsb
add
xor
adc
addb
add
xor
sbb
mov
fisttpl
sbb
cmp
adc
ffree
lock
out
sbbl
xor
add
add
lret
and
add
jnp
pop
xchg
addb
or
cmc
popf
lds
ss
add
mov
call
call
xchg
mov
repnz
stos
movb
sbb
insb
fisubrl
or
in
arpl
push
test
aad
push
add
add
jecxz
andl
hlt
add
cmp
add
stos
push
add
orl
loopne
lock
mov
std
jmp
add
add
xchg
xchg
pop
jl
push
ds
cmpsl
adc
sbb
add
inc
dec
or
push
inc
add
scas
jb
addl
inc
add
andl
add
addb
les
imul
in
push
add
inc
add
scas
mov
stos
or
add
in
ds
pusha
add
pop
in
and
mov
mov
cmp
inc
addb
add
popf
inc
add
aad
add
sub
jecxz
add
mov
mov
mov
movb
filds
adc
pop
push
add
dec
or
and
mov
xchg
scas
or
jne
push
adc
mov
out
hlt
add
add
push
call
add
mov
xchg
add
xchg
add
in
pop
repz
mov
rolb
je
push
push
jbe
loope
add
push
add
add
and
scas
out
mov
cmpsl
jmp
xchg
add
xchg
popf
mov
sub
add
mov
add
in
mov
testb
add
dec
insl
mov
incl
add
sub
xchg
lock
lods
fdivrl
mov
into
jno
push
add
loop
testb
je
in
jl
pop
mov
mov
add
sub
int3
enter
add
aam
push
add
sbb
add
add
adc
cmp
and
add
add
add
add
add
ret
and
jbe
jne
and
xor
rorl
movsb
add
ret
push
mov
add
add
lret
insb
inc
add
add
sub
mov
push
add
add
bound
mov
ds
add
les
sub
add
sti
leave
push
add
add
xlat
sbb
add
jge
fs
cmpsb
add
adc
adc
stos
jecxz
test
aaa
xchg
add
popf
pop
aam
lds
in
addr16
add
add
lret
mov
pop
imul
add
add
in
rolb
mov
dec
inc
add
add
in
xchg
mov
mov
bound
mov
cli
add
leave
mov
push
add
addb
punpcklwd
sbb
bound
mov
cmpsb
add
mov
lods
jns
addb
mov
add
add
add
add
sti
xor
add
add
pop
fisubl
test
ret
push
add
mov
jl
sahf
xchg
outsb
xchg
and
xchg
or
cld
xchg
testb
push
lret
add
jle
data16
sbb
addb
mov
add
mov
inc
lods
movsb
add
add
push
add
mov
add
roll
mov
xor
pop
in
iret
int3
add
push
and
cmp
jp
aad
imul
stos
lret
rol
push
popf
cld
rolb
adc
popa
dec
mov
fdivr
push
add
add
add
gs
mov
mov
lcall
lcall
loope
add
mov
repnz
add
ret
or
pop
jae
inc
push
add
add
add
mov
mov
pushl
add
int
mov
mov
add
add
add
add
push
add
add
stc
jmp
adc
popa
outsb
fdivrl
aaa
mov
and
addr16
imul
xchg
add
loop
pushf
lds
testb
pop
add
sub
add
add
add
add
stos
pop
jbe
mov
mov
pop
imul
mov
pop
adc
dec
pop
rolb
je
sar
xor
jg
int
adc
inc
add
adc
testb
pop
mov
das
pushf
inc
add
pusha
add
pop
sub
imul
sub
add
pushf
dec
sub
or
jne
aaa
xor
inc
ret
imul
dec
xor
pop
pop
popa
mov
movsl
mov
dec
or
add
mov
push
dec
xor
sub
in
in
mov
mov
add
sbb
mov
push
add
sub
bound
mov
add
dec
or
pop
cltd
cmp
or
push
mull
test
add
add
insb
mov
les
in
sbb
sti
jae
outsb
xchg
addr16
adc
fistps
mov
inc
jecxz
xchg
add
mov
sar
and
int
pop
testl
add
pop
or
leave
and
xchg
cmp
popf
mov
mov
sbb
dec
pop
add
mov
sbb
add
mov
xchg
add
mov
scas
in
aaa
into
cmp
add
add
scas
and
mov
insb
sub
add
test
mov
mov
cmp
mov
add
pop
xchg
push
xor
mov
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
pop
test
fildl
add
lret
enter
adc
js
add
add
add
cmpsl
es
xor
and
into
and
outsb
jnp
stos
cmp
mov
sbb
jg
sbb
push
je
loopne
lahf
int3
ds
bound
mov
add
jmp
mov
add
jnp
xchg
add
dec
mov
push
cld
mov
subl
add
add
mov
lahf
call
add
lea
jae
or
inc
addb
xchg
aam
push
xchg
mov
add
mov
sub
and
scas
loopne
add
and
add
and
ret
pop
stos
popf
adc
jle
add
add
addb
adc
cmp
add
xchg
pushf
pop
addb
push
iret
mov
testb
jnp
push
add
mov
add
mov
push
add
mov
mov
mov
movsb
add
dec
sub
andl
cmp
pop
xchg
addb
add
inc
dec
push
dec
leave
gs
loopne
out
xlat
out
dec
add
mov
xor
popa
ljmp
cmpsb
add
push
add
dec
rolb
add
add
jo
fistps
inc
add
movb
gs
movl
out
push
sbb
add
add
leave
sub
sti
and
ja
jne
enter
jae
jl
inc
addb
add
clc
fcompl
add
test
rcrl
mov
lea
adc
and
push
out
inc
add
xchg
int3
inc
add
sarl
xchg
mov
sbb
add
mov
add
add
rcr
pusha
add
add
add
dec
sarl
fsubrs
xlat
out
testb
add
jns
mov
rolb
cmp
fucomi
or
pop
pop
lea
mov
jmp
add
dec
xchg
add
jne
add
inc
sbbl
les
xchg
lods
in
mov
add
hlt
add
mov
out
scas
jb
out
repnz
out
cmp
add
add
add
nop
add
dec
inc
daa
push
add
movsb
add
add
jp
add
cmp
cli
cmpsb
add
add
or
mov
ret
mov
addb
add
add
push
add
outsl
rolb
repnz
add
ljmp
mov
sub
add
adc
add
mov
dec
mov
add
das
scas
dec
gs
pop
je
insb
xor
dec
fwait
mov
add
aam
adc
sub
pop
lods
mov
cmp
lods
sub
fisttps
add
jo
or
mov
adcl
repnz
mov
cmp
out
pop
sbb
push
add
out
sub
pop
fnsave
xchg
or
add
xchg
jp
sub
add
add
outsb
rolb
daa
mov
in
xchg
add
add
ljmp
add
add
and
mov
add
add
fnstenv
push
add
cmp
mov
ficoms
push
pop
add
mov
add
add
pop
mov
add
lret
cmp
data16
xchg
pop
in
fisubrl
stc
push
sti
out
sub
add
add
daa
leave
mov
in
sbb
mov
call
or
in
nop
add
add
rolb
test
loop
sub
lock
jo
in
xor
add
xor
fdivrl
lahf
jno
call
fsubs
mov
ljmp
or
aad
je
inc
add
add
lcall
add
mov
add
push
pushf
xchg
add
add
leave
push
add
andl
xor
scas
jle
lock
pop
cmp
in
jne
lods
mov
add
xchg
jmp
jmp
jmp
rolb
jecxz
add
mov
fsubrp
and
xchg
aaa
xchg
adc
call
add
pop
addb
daa
dec
imul
add
xor
pop
dec
pop
add
xor
into
fnsave
add
add
insl
sti
mov
pusha
add
cmp
ret
push
cs
icebp
je
aaa
icebp
add
mov
inc
add
inc
add
add
mov
in
xor
push
pop
add
mov
fsubl
scas
dec
mov
push
lret
adc
dec
add
mov
sbb
call
add
add
mov
lret
push
and
test
jno,pn
mov
sub
add
cs
pop
and
add
call
add
cmp
mov
inc
mov
jne
mov
jns
or
mov
xor
mov
or
fsubs
add
rolb
add
jp
movb
add
cli
jne
out
xchg
test
into
cmp
data16
xor
in
stos
mov
pop
inc
mov
cmp
jle
adc
add
enter
push
loope
add
cwtl
pop
sub
sub
leave
fisubrl
bound
mov
inc
fsubrl
add
add
or
orl
push
add
adc
cld
mov
or
in
repz
mov
add
add
fcompl
stos
movb
daa
inc
add
ficompl
icebp
test
or
int
cltd
jle
add
inc
add
ja
in
lret
cmc
inc
in
aas
sub
pop
add
add
jl
mov
mov
mov
mov
lods
or
gs
cmp
inc
pusha
add
add
add
movsb
add
push
add
mov
adc
js
sbb
fwait
jae
lods
iret
xor
xlat
pusha
add
adc
add
push
jmp
sbb
aam
scas
xor
rcr
pop
and
mov
add
add
test
dec
inc
add
add
mov
cmp
add
dec
rolb
jmp
xor
repnz
add
add
add
xor
xchg
fsts
pop
sar
jnp
add
xor
js
std
cmpsl
int3
inc
add
xchg
add
add
sbb
mov
add
and
decb
add
push
mov
addb
jo
sti
sbb
cmp
pop
out
adc
mov
daa
and
cs
je
jg
push
add
add
add
add
fisttpl
mov
add
add
insl
pop
mov
add
dec
or
sahf
pop
jmp
push
add
inc
add
add
out
sbb
imul
das
les
js
pop
ja
daa
xor
mov
add
add
xchg
add
add
mov
jno,pt
add
xchg
int3
cld
cli
pop
dec
adc
dec
das
jns
pusha
add
dec
xchg
cmpsl
mov
inc
mov
adc
add
add
xor
adc
pop
cld
cld
sbb
jnp
jb
dec
sarl
popa
out
data16
add
mov
test
rolb
add
dec
outsl
rolb
jbe
jecxz
pop
lcall
or
imull
fisubrl
movsb
add
cmp
insl
imul
add
add
addr16
scas
pop
aad
sub
mov
out
stos
xchg
dec
or
mov
aad
pop
pop
aam
in
outsb
pop
rolb
cwtl
movsl
cmp
aaa
movsb
add
or
divl
xor
sub
or
ret
sbb
mov
mov
out
sub
fsubs
mov
rolb
fcoml
scas
pop
dec
add
aad
in
movb
add
test
in
sbb
cmpsb
add
jle
mov
mov
dec
sbb
out
pop
inc
add
add
stc
rcrl
mov
cmp
mov
xor
ds
add
add
icebp
jle
jbe
jle
gs
aaa
mov
push
hlt
add
inc
add
mov
ficoml
rolb
add
mov
add
push
add
test
push
roll
mov
push
add
movsl
sub
add
add
add
mov
arpl
mov
hlt
add
rolb
push
arpl
jge
cwtl
fcmovb
add
push
add
add
xor
bound
mov
addb
add
jge
inc
sub
fmuls
add
mov
xor
xchg
cmp
lret
push
add
add
push
or
cli
add
add
xor
fcomi
lock
add
mov
ret
sub
xor
cli
in
adc
mov
dec
repnz
mov
mov
and
mov
add
fildl
add
sbbl
add
jl
hlt
add
add
ret
add
mov
clc
fnstenv
imul
xchg
loopne
jmp
aam
test
rolb
xor
mov
xchg
testb
or
clc
push
add
ljmp
addr16
add
push
add
ljmp
insl
outsl
in
push
mov
add
or
xchg
cs
add
mov
rcrl
add
les
push
add
add
je
push
add
testb
add
add
mov
inc
dec
sub
fisubrs
ret
in
dec
pusha
add
jecxz
cwtl
sti
lods
popl
or
xlat
or
add
addb
add
in
xchg
scas
lea
pop
push
mov
mov
ljmp
dec
mov
les
icebp
inc
add
rolb
mov
add
add
xor
ss
add
cmp
in
push
add
add
jg
add
push
hlt
add
dec
push
add
jmp
mov
add
add
add
dec
push
add
popf
lahf
clc
pop
jb
fisubrl
jmp
shrl
add
mov
sub
js
jmp
pusha
add
add
fstl
cmovbe
bound
mov
add
add
outsb
mov
fcompl
mov
add
scas
int
test
jns
popf
xchg
add
add
add
add
inc
pop
mull
add
push
scas
fsubr
push
add
cmc
dec
cmp
add
add
add
inc
add
or
cmc
cmp
add
and
test
mov
or
fidivl
mov
xchg
rolb
dec
adc
outsb
cmpsl
and
mov
add
fldcw
add
add
mov
sub
cmpsb
add
add
add
pop
sbb
adc
ret
add
add
dec
cmpsb
add
xor
inc
or
sub
mov
addb
add
xchg
add
bound
mov
ficomps
movsl
aad
add
sbb
aaa
pop
fdivrs
jae
ret
fnstsw
hlt
add
fcomi
add
push
add
add
add
ret
clc
jle
add
add
je
das
mov
add
mov
hlt
add
call
mov
add
mov
add
std
push
cmp
add
sbb
icebp
lods
adc
imul
sti
xor
sbb
lret
lret
fmul
scas
stc
lods
adc
scas
pushf
sub
hlt
add
mov
add
add
add
add
rorl
add
mov
add
or
jl
mov
sub
testb
xor
or
or
adc
add
jns
or
add
mov
repnz
jne
dec
pop
add
mov
or
dec
addb
cmpl
dec
imul
sahf
adc
add
roll
montmul
cmpsb
add
add
xchg
add
mov
data16
add
add
inc
shll
add
add
add
mov
out
jbe
cmpsl
sahf
xchg
popf
jge
cmp
lahf
stos
out
shll
push
add
test
stc
aaa
push
add
sub
hlt
add
jmp
sbb
pop
or
pop
inc
lods
dec
and
add
int
sub
inc
jb
jb
xor
shll
ret
stc
and
add
in
lock
push
jae
in
mov
imul
add
arpl
cmp
rolb
jl
xor
bound
mov
add
add
adc
mov
push
mov
lret
mov
popf
or
mov
add
movb
or
add
data16
add
lods
fadds
mov
xlat
lea
rorl
cld
cltd
or
add
mov
pop
addb
movsb
add
inc
pop
add
mov
xor
xchg
lret
xor
jbe
add
mov
add
imul
jl
add
sbb
push
add
inc
ljmp
aam
xor
fiaddl
xchg
add
push
outsl
jno
add
jl
add
mov
add
arpl
sub
gs
dec
out
test
cmp
add
or
je
pusha
add
loope
gs
pop
add
mov
std
fdivrs
sbb
add
fsts
lock
xchg
push
add
pop
add
in
adc
in
xchg
add
push
add
push
add
add
mov
loop
pop
xor
popf
add
mov
cmp
add
push
add
mov
add
add
mov
inc
add
enter
mov
lcall
ret
out
jp
add
mov
add
lret
xor
jl
add
add
adc
mov
lret
sahf
fwait
jl
add
mov
adc
clc
mov
xchg
pop
pop
jbe
sub
add
mov
aam
pop
cmpl
xchg
movsb
add
inc
add
cmp
sub
push
cmp
jo
outsb
loopne
iret
mov
mov
loop
mov
fdivp
add
mov
mov
pop
ret
je
lahf
pop
test
sbb
jo
dec
shll
mov
fnsave
sub
pop
add
push
pop
mov
mov
push
mov
add
add
xor
mov
add
hlt
add
iret
push
add
and
into
jno
add
push
add
add
add
jnp
test
fmul
inc
add
decb
les
xlat
adc
xor
fimuls
push
in
bound
mov
int3
or
decl
pop
inc
mov
mov
rolb
cmp
lock
int3
lcall
add
std
in
pop
push
push
fstpt
add
mov
rolb
add
add
repz
hlt
add
inc
pop
add
mov
loope
mov
fcmovne
mov
add
pop
jb
cmp
stos
jl
jbe
scas
add
ret
cld
mov
dec
jecxz
pop
xchg
mov
data16
outsl
xchg
add
cmp
inc
jae
add
push
push
add
add
testb
add
add
mov
add
inc
add
jmp
pushl
adc
insb
add
mov
mov
in
test
jbe
xor
add
add
mov
xchg
leave
mov
add
or
stc
pushf
inc
add
add
adc
lahf
fcomps
scas
insl
jg
sbb
fsubs
data16
dec
clc
lods
pop
or
mov
aas
adc
cmovae
xchg
add
dec
and
add
rolb
data16
aas
mov
or
add
mov
jp
inc
add
xchg
movb
cmc
in
pop
das
int
lds
mov
add
mov
push
out
sahf
sbb
mov
add
xchg
xchg
mov
adc
cmp
add
add
lds
scas
pop
and
cmpsb
add
push
add
lret
xchg
jno
jmp
jecxz
add
pusha
add
cmp
inc
pushf
bound
mov
xor
cmpsb
add
stc
dec
cli
gs
rolb
xchg
add
lret
addb
lods
ret
dec
pop
in
adc
dec
xor
sahf
mov
popa
jmp
push
rolb
addr16
inc
cld
xor
test
push
add
add
das
aam
mov
inc
xchg
mov
scas
movb
in
mov
lret
mov
xor
push
xchg
jbe
add
add
mov
add
inc
add
xchg
mov
cmpps
mov
inc
add
xor
inc
sbb
pop
xchg
ror
cli
adc
icebp
fwait
sbb
pop
leave
fistl
cmp
push
add
add
add
mov
sub
mov
data16
add
lcall
and
insb
mov
add
movb
add
dec
cltd
inc
cs
mov
test
scas
rolb
loopne
je
popf
int3
mov
add
mov
sub
add
add
fwait
cmpsl
sub
dec
out
pop
mov
fisubl
sub
mov
xchg
mov
test
cmpsl
and
add
add
call
cmp
je
cmp
jle
mov
dec
loop
divl
test
mov
test
add
add
lret
mov
adc
rolb
xchg
imull
sub
add
ja
push
movb
xchg
jb
fistpll
add
or
jne
loope
add
mov
repnz
push
add
pop
xlat
push
push
pop
repnz
ret
add
mov
loopne
in
dec
cld
mov
ds
in
imul
add
add
in
sub
add
sub
add
cmc
add
dec
int3
addb
pushf
dec
jbe
mov
cmp
xlat
daa
push
adcl
jbe
jmp
pushf
sti
testb
movb
test
add
inc
rolb
stos
pusha
add
pop
and
mov
pop
test
add
add
or
mov
adc
xor
repz
sub
push
sub
add
imul
lcall
lds
rolb
loope
call
cmp
movlps
test
adc
repz
lds
cli
xor
fistpl
sub
add
iret
enter
dec
dec
and
add
push
add
cmp
add
add
jp
add
sbb
push
add
add
mov
dec
mov
adc
test
add
mov
add
cmpsb
add
mov
mov
daa
sbb
add
push
addb
dec
call
mov
add
or
fdivs
cmpsl
pop
test
xchg
add
jmp
add
mov
in
adc
or
add
addb
add
sahf
sub
cld
mov
inc
mov
gs
add
add
jecxz
fldcw
int
xchg
xchg
jmp
idiv
or
or
int3
mov
xchg
inc
aas
test
fdiv
add
add
test
mov
mov
sbb
jb
mov
sub
add
pop
jecxz
jbe
in
stos
call
sahf
xor
add
in
clc
jbe
pop
jp
add
cmp
xchg
insl
inc
or
add
mov
pop
test
roll
mov
sub
add
scas
ljmp
ud1
or
outsl
mov
add
jl
mov
add
jo
lcall
add
int3
out
mov
shll
add
hlt
add
pop
jl
std
and
push
add
daa
add
mov
xor
js
lret
inc
mov
add
xchg
lods
push
add
add
cltd
bound
mov
daa
inc
and
pop
jg
sub
add
adc
enter
add
pop
hlt
add
shll
add
add
add
push
or
outsl
or
add
xor
test
pop
mov
xor
pop
insb
cmp
ficoms
mov
add
fdivrs
jge
jns
adc
push
add
rolb
pop
repz
loopne
outsl
and
mov
add
xchg
add
add
data16
je
mov
add
cmp
add
daa
or
loopne
cmpsl
push
add
push
into
mov
mov
stos
sub
add
lgs
mov
xor
aam
jmp
insl
dec
rolb
imul
daa
movzbl
ret
add
add
dec
into
mov
fimuls
pop
cmp
lods
int3
scas
dec
adc
pop
bound
mov
std
js
mov
mov
scas
pusha
add
popf
xor
jo
insl
out
nop
add
popf
in
je
fwait
push
add
and
mov
std
lcall
adc
std
subps
stos
xor
and
mov
testb
cmpsb
add
lcall
add
sbb
add
add
jns
push
push
dec
add
adc
and
mov
sub
mov
xor
rolb
sbb
sub
add
in
add
insl
popa
inc
das
add
add
std
in
sub
add
fwait
push
add
frstor
mov
adc
mov
repz
add
je
vorps
or
jae
fnstcw
jle
add
inc
clc
inc
xor
mov
dec
dec
lds
push
pop
mov
add
lret
ljmp
repnz
mov
enter
xchg
out
adc
lea
add
ret
in
mov
dec
xchg
inc
or
add
and
lods
mov
add
pop
scas
xchg
jmp
add
sarl
xchg
xor
xor
pop
sbb
fstps
arpl
lea
jmp
movb
lret
jno
cmp
inc
sbb
mov
daa
pushf
and
jo
dec
divl
add
sti
xchg
add
add
popf
inc
add
xor
and
mov
jno
jo
insl
adc
inc
add
add
xor
pop
add
ds
and
pop
loopne
addb
test
stc
cld
sbb
dec
push
mov
cmp
push
xchg
les
push
dec
jb
ds
mov
sub
pusha
add
push
mov
mov
mov
add
add
mov
cmp
rcl
add
add
mov
add
cmc
setno
adc
push
inc
ret
add
add
jmp
add
dec
cmp
add
and
movsb
add
sbb
mov
stos
out
insl
xchg
test
mov
mov
sub
push
repnz
add
xor
mov
fidivs
mov
ret
in
jecxz
add
ret
aam
fdivs
xchg
movb
add
rorl
insl
test
add
mov
xor
in
lret
in
add
hlt
add
out
cltd
movsl
mov
dec
or
pop
xchg
inc
add
mov
in
addb
cmp
inc
scas
cld
out
cmp
lea
les
xchg
sbb
lret
fs
add
repz
add
out
or
sbb
mov
add
add
add
add
inc
add
std
sahf
add
add
add
dec
inc
ret
jnp
enter
sbb
test
scas
movb
add
add
add
data16
add
add
add
imul
fdivl
mov
stc
xchg
jge
call
fstps
xchg
add
jb
mov
add
mov
aaa
call
add
mul
mov
bound
mov
add
jecxz
sbb
add
clc
or
add
jo
aad
lods
movsl
call
cmp
mov
jmp
xor
rolb
repnz
loop
xor
rcrl
dec
mov
clc
rolb
lods
adc
adc
cli
or
sub
dec
mov
imul
inc
add
add
rolb
out
jo
add
pop
adc
add
out
pop
mov
pop
push
nop
add
add
jne
stos
push
add
add
mov
add
mov
push
add
ret
mov
lods
mov
insl
addb
fwait
inc
add
mov
xchg
ret
cwtl
cmp
add
pop
and
mov
push
add
xchg
pop
pusha
add
les
notl
inc
les
insb
cmpsb
add
jo
add
testb
add
adc
add
out
xchg
xchg
nop
add
mov
inc
add
jbe
shrl
sbb
pop
stos
scas
out
mov
add
lret
or
movsl
test
in
leave
add
sbb
jb
dec
cltd
jns
stos
leave
movsl
mov
push
mov
out
sub
xor
add
mov
add
mov
shll
fildl
fdivrs
test
push
std
sbb
inc
add
add
in
inc
add
xchg
insb
push
add
lds
jmp
fwait
les
popf
les
adc
fwait
jmp
arpl
add
rolb
jno
hlt
add
or
rolb
pop
jmp
add
sbb
xchg
add
add
add
mov
and
fwait
add
jge
add
add
fdivp
add
les
adc
add
add
add
push
add
add
mov
mov
mov
sub
in
aas
cmpsb
add
add
aad
stc
aam
test
add
push
add
data16
shll
sub
push
add
mov
add
xchg
cmp
dec
sub
jecxz
add
pop
xchg
std
movsb
add
add
jle
inc
dec
or
mov
xor
mov
inc
add
arpl
std
insl
jge
rolb
add
add
mov
lret
inc
add
add
and
mov
dec
iret
sbb
cs
fdivrp
addb
mov
stos
insl
or
sub
cld
cmp
add
enter
fnstenv
push
add
add
inc
add
sbb
add
cmp
add
push
cmp
add
add
mov
ja
insb
in
pop
adc
jg
cmp
add
add
add
add
pop
dec
mov
pop
mov
mov
ficoms
fists
repnz
and
mov
pmaddwd
and
rolb
insb
sbb
add
xchg
pop
jge
sahf
or
inc
add
jo
push
addb
xchg
repz
sbb
add
inc
add
add
lea
add
add
psrlq
dec
add
mov
mov
mov
sbb
mov
ret
xor
jno
push
add
je
leave
add
daa
adc
call
dec
pop
stos
xchg
add
and
mov
sbb
mov
add
jecxz
popl
sbb
jae
das
inc
add
shrl
add
cwtl
lods
dec
and
lret
fsubrp
sbb
into
inc
add
add
add
add
in
js
add
addb
add
push
add
fdivl
sarl
add
in
andl
arpl
push
jp
leave
lahf
cld
pop
xchg
testb
ljmp
mov
movb
add
data16
mov
sub
outsl
add
pop
add
mov
and
mov
sar
mov
mov
add
jecxz
or
loopne
std
cmp
or
addb
loope
mov
mov
add
sbb
cmp
add
jns
add
jmp
mov
sbb
xchg
xor
add
jle
insl
movsl
in
inc
add
add
add
pop
mov
add
push
sub
push
add
mov
fisttpl
inc
sahf
cli
or
mov
rolb
repz
add
adc
add
jo
pop
jle
add
and
mov
nop
add
add
add
in
and
mov
add
add
add
aam
and
test
push
add
inc
testb
aaa
push
dec
add
ficoms
xchg
hlt
add
mov
repz
mov
mov
add
stos
ffreep
xchg
daa
leave
addb
jecxz
cwtl
push
mov
add
add
and
and
arpl
hlt
add
add
lods
add
mov
fiadds
mov
mov
xchg
jne
sub
add
stc
add
mov
add
add
flds
push
add
add
std
movb
add
std
or
push
add
jnp
xchg
stc
jae,pn
mov
fidivrl
daa
lds
add
dec
stc
loop
add
push
add
gs
jge
add
jge
add
add
mov
add
fldl
gs
push
add
add
cwtl
mov
daa
sbb
add
imul
add
daa
lods
add
add
mov
adc
sub
cld
or
add
call
popl
dec
lods
push
add
jge
dec
sbb
mov
rolb
fs
add
out
adc
inc
and
mov
dec
mov
add
lahf
scas
sti
insb
cmp
popf
cwtl
push
add
xchg
dec
pop
mov
add
movswl
add
les
adc
sub
and
sbb
add
add
add
cmpsb
add
xchg
das
xchg
add
pop
lock
hlt
add
in
out
int
mov
sbb
outsl
pop
insb
testb
sub
jae
dec
push
cmc
test
sbb
dec
cmpsb
add
mov
cmpsl
mov
inc
outsb
add
cmp
or
or
dec
mov
jl
add
add
test
or
pop
inc
add
lods
loopne
pushf
or
add
add
in
sub
add
add
fldt
add
mov
fisubl
sbb
aad
dec
xor
lret
add
pop
leave
lahf
adc
push
add
sbb
push
lods
xchg
pop
fucom
test
add
mov
add
aaa
jo
pop
insb
mov
add
mov
inc
dec
int
sub
add
scas
pop
push
jl
add
add
add
push
iret
test
in
pop
jae
les
fcompl
push
add
add
or
and
add
push
add
add
bound
mov
sbb
add
add
jecxz
add
mov
pop
insb
adc
add
pop
or
inc
xor
mov
sarl
add
add
add
fsubrs
add
imull
add
mov
add
mov
imul
mov
xchg
add
mov
xlat
sbb
add
dec
mov
ljmp
jmp
add
out
inc
push
out
sti
dec
jb
fsts
add
add
add
and
fsubrl
pop
lock
ret
movsb
add
mov
cld
add
aam
fisubs
js
and
adc
and
mov
or
push
ret
push
dec
add
mov
pusha
add
add
repnz
lods
sub
fildll
test
shr
sub
inc
add
in
test
pusha
add
in
mov
fcmovb
jl
add
rorl
cmp
push
out
jge
xor
mov
scas
jbe
icebp
mov
lock
inc
mov
jle
add
int
or
test
in
add
shr
lock
test
mov
add
fists
or
imul
mov
dec
ret
in
test
add
xor
mov
gs
xchg
add
inc
int3
gs
rolb
mov
sbb
les
int3
stc
sti
cmpsl
addr16
cs
fadd
add
adc
ret
add
dec
mov
out
adc
xchg
js
add
push
out
testb
mov
inc
add
test
data16
pop
stc
rolb
jae
sub
pusha
add
arpl
inc
add
cmpl
dec
arpl
push
add
mov
add
rolb
jo
rolb
hlt
add
add
add
insb
aad
xor
call
sti
fbstp
add
add
pop
stos
jne
add
adc
and
pop
cmp
add
outsl
push
add
arpl
ret
pusha
add
add
jne
xor
das
push
add
arpl
add
mov
and
add
fnstcw
hlt
add
xchg
add
jp
add
cmp
jmp
dec
add
add
mov
lret
dec
sbb
mov
lock
mov
add
addr16
js
call
push
add
int3
in
lahf
jmp
inc
inc
add
add
test
test
and
jle
xchg
add
mov
movb
gs
push
add
add
imul
mov
xchg
add
push
add
add
fcompl
in
add
fmull
mov
movb
xchg
pushf
data16
add
add
lcall
xchg
cmp
add
lea
jo
mov
mov
pop
push
fistpll
mov
push
add
hlt
add
add
mov
push
add
and
rolb
mov
sbb
mov
jns
add
inc
add
testb
add
dec
xchg
sbb
sub
fistps
jne
inc
ret
pop
cmp
jbe
pop
js
adc
movsl
imul
xchg
xchg
add
mov
cmp
lea
sbb
out
test
dec
jae
add
add
add
or
push
add
mov
int
jmp
pushf
mov
xchg
add
lods
dec
in
dec
or
or
out
std
cmpsl
dec
jno
test
jo
outsb
in
in
and
mov
add
mov
add
jl
push
add
lock
loopew
add
add
or
shl
ficoml
sbb
sarl
and
xchg
add
int
movb
jmp
fisubrl
cmp
mov
loop
clc
pop
and
mov
push
add
hlt
add
push
or
add
jge
nop
add
mov
bound
mov
pop
jo
jge
ljmp
adc
pusha
add
mov
mov
leave
outsb
sub
push
add
lods
cmp
sbb
bound
mov
jge
mov
pop
add
add
add
mov
add
mov
sub
add
add
add
adc
push
sbb
jmp
add
add
add
add
add
xchg
fstpl
mov
cmpsl
mov
loop
mov
pop
test
stc
sub
popa
pop
dec
push
mov
or
add
adc
add
lods
jae
jmp
add
add
fdivr
and
out
jmp
xor
and
mov
sbb
xlat
xor
cmpsb
add
add
mov
sbb
push
push
add
pop
scas
jne
ret
fildll
test
mov
aam
mov
mov
add
add
add
pop
pop
mov
notl
ret
imul
xchg
sbb
mov
add
lock
and
gs
add
in
out
test
jb
cld
notl
add
adc
inc
add
in
jmp
dec
xchg
sti
lret
xchg
add
dec
inc
inc
and
test
icebp
iret
outsb
aam
jmp
inc
add
push
and
mov
arpl
fsubs
inc
lods
jns
addb
jmp
rolb
in
add
loopne
mov
sbb
iret
andl
in
fnstcw
sub
rcrl
sbb
xchg
add
add
je
xchg
add
addr16
in
mov
mov
xor
pop
pop
movsl
outsl
ficomps
xchg
add
mov
sti
push
add
fdivs
xor
add
add
add
xchg
add
add
repnz
cwtl
fisttpll
loope
lock
cmp
mov
mov
push
sbb
xchg
mov
mov
add
jmp
sti
je
roll
inc
add
pop
lcall
dec
mov
jge
or
test
movhps
xor
rolb
xchg
movsb
add
jmp
or
and
add
add
nop
add
add
sub
mov
mov
jg
add
add
sbb
sub
repz
divl
cmp
sbb
daa
call
pushf
dec
ja
and
loopne
lea
add
add
bound
mov
loop
sti
xor
insl
push
add
add
inc
in
sbb
adc
in
add
cmp
fstps
popa
push
add
add
mov
or
jg
add
mov
push
mov
push
movsb
add
add
les
shrl
adc
push
testb
mov
mov
adc
ret
sub
add
push
jp
movb
inc
mov
add
and
mov
stc
xor
and
mov
pop
xlat
sub
jle
and
sub
mov
add
add
jno
xor
sub
andl
ret
add
daa
test
add
mov
xchg
imul
mov
xchg
filds
test
mov
sbb
add
add
jo
call
adc
xchg
add
mov
into
pop
insb
push
add
inc
test
or
lods
fs
add
mov
fadds
in
mov
je
xorl
arpl
add
cmp
add
xchg
mov
mov
cmp
out
push
stc
sub
add
lock
adc
xlat
xor
xor
add
and
mov
out
adc
adc
or
pushf
rolb
push
add
sub
jg
mov
testl
call
xor
xor
lods
pop
mov
hlt
add
in
sub
push
mov
add
add
push
jp
cli
mov
pusha
add
insb
cltd
out
fcmovne
push
rolb
outsb
push
add
xor
repnz
push
mov
in
sub
mov
aas
mov
sbb
mov
in
sub
add
leave
push
add
xchg
add
add
add
jmp
lock
mov
mov
xor
in
add
and
add
das
mov
mov
inc
or
sbb
imul
stos
cmpsb
add
and
mov
xchg
or
dec
sub
jmp
inc
add
mov
push
icebp
mov
cwtl
pop
mov
jne
aad
ja
stc
pop
pop
ret
or
icebp
int
sbb
add
xchg
add
dec
mov
mov
repnz
add
xor
add
scas
pop
adc
jb
xchg
mov
testb
add
xchg
stos
xchg
xchg
lds
pop
pushf
ficomps
pop
mov
add
add
test
pop
pop
pop
aad
mov
loope
add
addb
mov
xchg
mov
mov
pop
cmp
add
cmp
sbb
mov
das
pop
and
mov
jl
in
add
xchg
mov
add
mov
push
push
add
out
mov
adc
xchg
mov
add
or
cmp
outsl
movsb
add
add
clc
sbb
jmp
add
push
add
aas
out
jmp
mov
mov
sub
repz
lods
or
add
rolb
jecxz
mov
add
mov
imul
jne
add
mov
int3
mov
jnp
add
pop
fdivrs
add
lret
jns
fidivrl
add
cli
subl
inc
adc
add
push
add
aam
popa
or
and
into
cmp
add
lahf
adc
mov
lods
jecxz
js
push
in
dec
cmp
in
outsb
mov
sti
out
scas
or
out
jg
xchg
push
add
add
and
mov
cmpsb
add
mov
fiaddl
dec
or
scas
cmp
push
pop
push
test
push
add
ds
add
add
flds
add
test
mov
lea
add
les
imul
add
mov
xor
inc
adc
mov
xchg
add
mov
cmp
or
fcomps
ljmp
jl
mov
pop
jno
mov
out
xlat
rdmsr
add
testb
add
fimuls
add
add
pop
xor
enter
push
or
add
sub
inc
out
add
add
jl
mov
add
aam
push
movsl
mov
push
pop
clc
arpl
add
add
leave
cltd
mov
pop
clc
add
add
repz
rolb
push
add
in
insb
jg
push
add
add
aas
arpl
pop
addl
mov
mov
loop
mov
dec
mov
mov
or
add
add
rolb
lea
cltd
repz
mov
add
cld
mov
add
lock
lock
data16
imul
jl
jnp
repnz
lahf
add
mov
addb
pop
mov
and
aaa
mov
add
add
push
pop
push
xor
add
add
add
std
and
mov
or
inc
push
add
aaa
mov
push
add
add
rolb
mov
arpl
add
outsl
mull
push
add
or
add
and
mov
popf
cmpsl
and
cli
test
mov
pop
inc
sbb
mov
or
call
fisubs
inc
movsb
add
xchg
push
push
imul
int
sub
add
call
gs
add
jle
add
add
mov
xor
pop
or
mov
clc
add
imul
add
insl
into
fdivrl
clc
pop
lock
add
add
xchg
xor
push
add
arpl
jb
xlat
imul
dec
gs
push
pusha
add
mov
cld
lods
or
pop
pop
or
jecxz
push
add
lahf
or
mov
add
dec
cs
add
mov
cmp
test
or
int
lret
sub
add
fucomi
xlat
pop
orl
mov
add
add
cmp
add
out
lds
add
or
xor
mov
pop
adc
jno
add
fldenv
fists
and
and
mov
dec
clc
add
insb
adc
imul
and
mov
dec
jl
jb
push
add
mov
lods
sarl
add
add
lcall
sub
jl
xlat
mov
aaa
pop
xchg
rcrl
rolb
pop
cli
in
mov
add
je
dec
xchg
push
mov
add
xor
push
dec
jnp
mov
insb
inc
dec
mov
add
imul
cmp
les
xchg
ljmp
sub
pop
mov
adc
cltd
or
inc
or
xchg
add
mov
xchg
xchg
loope
cmc
outsb
jnp
add
lock
inc
jnp
cli
rolb
add
inc
rolb
mov
lock
inc
add
lret
add
cmp
cltd
into
cmp
add
cmp
fimull
jne
dec
xor
add
mov
inc
add
lods
mov
sti
mov
sbb
imul
fidivrl
xor
adc
data16
push
add
repnz
inc
add
rolb
add
add
push
mov
sbb
loope
push
movb
push
add
shll
mov
fadds
add
mov
pop
add
xchg
jb
mov
out
add
dec
sub
mov
les
inc
test
add
imul
dec
out
mov
lds
loope
jae
fbstp
pop
sar
sbb
rolb
jg
ret
in
xchg
mov
add
pop
les
mov
add
jl
add
movsl
xchg
jecxz
std
or
add
cld
in
dec
leave
paddw
popf
sbb
xchg
add
sbb
add
imul
imul
or
add
ja
addr16
add
add
add
rolb
adc
out
faddl
sub
add
and
mov
sti
pushf
iret
cmp
add
test
pop
cwtl
jge
push
add
negl
das
or
add
cwtl
fcompl
dec
cwtl
pop
jg
movb
aaa
push
add
sub
sarl
pop
aad
out
pop
shl
add
mov
mov
or
frstor
add
add
add
addb
data16
adc
cmc
dec
adc
addb
clc
pop
cmp
push
push
add
cmc
or
add
push
add
add
data16
pop
decl
jns
or
lock
into
addb
sub
add
daa
dec
mov
mov
add
ud2
sbb
add
enter
push
ja
sbb
pop
icebp
mov
rolb
dec
inc
add
push
xor
dec
pusha
add
ret
xchg
add
enter
push
add
addb
add
fdivrs
add
sub
adc
push
hlt
add
insb
lods
lods
cltd
repz
inc
add
data16
inc
int
test
mov
ljmp
imul
clc
push
add
mov
rolb
scas
aaa
mov
loope
loopne
aad
inc
adc
in
push
testl
mov
add
sbb
mov
adc
jbe
rolb
pop
xchg
add
pop
sbb
jp
hlt
add
mov
mov
sbbl
movsl
push
add
add
addb
push
mov
mov
cwtl
outsl
dec
cwtl
push
scas
pop
cmpsb
add
ja
add
mov
movb
fdivl
pop
popa
mov
rolb
xor
mov
ja
enter
and
sub
xchg
add
add
xchg
pop
dec
cmp
lret
sahf
pop
xchg
add
add
sbb
jbe
or
aaa
mov
data16
add
add
add
add
out
mov
add
dec
push
add
add
popa
imul
mov
xchg
add
jb
or
into
pushl
add
mov
add
add
popa
xor
fcompl
push
add
add
add
mov
add
add
add
mov
call
mov
cmpsb
add
das
data16
add
pop
and
add
je
push
jl
sar
add
push
add
mov
jb
ret
cmpsb
add
testb
mov
inc
add
sub
mov
add
ret
jge
jmp
popf
xchg
add
jno
add
movb
add
mov
jno
fcoml
rolb
and
mov
cwtl
mov
adc
add
cltd
add
mov
std
ret
add
mov
inc
add
dec
pop
in
push
add
add
sub
mov
rolb
fdivr
add
adc
add
add
addb
add
cmp
data16
cltd
push
add
out
mov
mov
add
leave
sub
stos
rolb
add
xchg
push
xorl
repz
adc
divl
jp
out
lcall
dec
shll
add
add
xchg
lahf
out
or
cmp
sub
dec
push
lds
repnz
add
mov
cltd
cmp
je
push
add
pop
inc
add
push
add
pop
sub
jp
pop
push
add
sbb
push
add
add
add
pop
jmp
mov
add
pop
ds
imul
push
dec
jne
addr16
and
mov
jo
out
aam
out
adc
stos
loopne
mov
out
fisttpl
mov
add
mov
jns
push
add
add
add
sub
rcrl
add
lret
popf
lret
or
push
add
add
lret
add
mov
add
add
add
test
push
push
mov
frstor
outsl
sub
add
cmpsb
add
scas
pusha
add
add
mov
mov
mov
dec
dec
xchg
sub
mov
icebp
rolb
and
or
add
fstpt
int3
cld
data16
cmp
add
add
add
inc
add
insl
xchg
add
out
mov
add
mov
aad
shll
add
negl
add
popf
enter
or
jnp
repz
je
sbb
sbbl
add
fistpll
in
add
mov
add
jmp
and
inc
add
je
std
lahf
movb
addb
add
lcall
cmp
add
add
out
aas
add
mov
fnstenv
out
xchg
pop
pop
sub
in
sbb
and
mov
add
inc
add
add
and
add
mov
in
xchg
aad
mov
in
out
xor
bound
mov
add
data16
push
imul
fidivrl
cs
mov
add
call
jo
lea
je
cmpsb
add
jns
cmc
adc
fwait
pusha
add
mov
add
add
dec
mov
icebp
loope
xor
xor
add
jae
add
cmc
xor
or
add
mov
add
fisubrs
and
mov
add
out
daa
arpl
mov
sub
notl
jp
movb
add
push
add
mov
mov
enter
ds
out
les
filds
inc
adc
add
data16
add
rolb
jae
fadd
mov
push
add
add
fsts
add
mov
clc
pop
out
insl
push
add
add
lret
fwait
movb
push
mov
sbb
add
xor
test
imul
add
push
data16
out
add
push
push
mov
add
mov
addb
cli
imul
add
std
dec
pop
add
add
add
pushf
push
or
mov
mov
mov
or
add
mov
lret
aam
movsb
add
test
ret
jl
loopne
xor
in
and
scas
sbb
inc
add
mov
mov
jecxz
xchg
xchg
data16
out
inc
sub
test
adc
ffree
cmp
sub
dec
adc
fidivrs
xchg
add
stos
pop
or
adc
or
dec
ret
pushf
mov
sub
mov
lods
push
add
test
add
mov
add
dec
jns
add
enter
add
add
lret
pop
pop
aaa
movsb
add
aaa
mov
add
sbb
out
aam
jp
mov
xchg
add
push
add
add
loop
dec
ljmp
insl
or
aaa
xor
insl
jg
xlat
sub
mov
popl
in
jnp
fistl
call
and
mov
aaa
je
xchg
jne
inc
add
or
rolb
add
jmp
mov
stc
adc
push
ret
add
pop
aad
add
xchg
call
aad
scas
fidivl
add
mov
clc
repz
push
add
add
jmp
movsb
add
and
ljmp
add
addr16
mov
add
push
add
push
into
push
add
or
pop
movb
xchg
push
roll
fildll
mov
jmp
add
int
rolb
pop
mov
fcoml
add
jne
add
sbb
ds
sub
jb
ss
adc
xchg
add
pop
cmp
add
sbb
adc
xor
lea
movsb
add
add
mov
cmp
and
xchg
sbb
mov
pop
addb
stos
cmp
loop
dec
and
nop
add
add
add
sbb
add
sbb
xor
add
add
repz
nop
add
add
add
add
add
repz
leave
mov
inc
inc
ds
inc
add
mov
sbb
sbb
repnz
icebp
lret
mov
inc
add
pop
mov
add
lcall
xchg
add
inc
add
add
clc
into
int3
insb
and
mov
out
push
in
enter
dec
pop
in
sbb
testb
push
or
sub
add
adc
sbb
inc
add
jge
or
mov
cmp
mov
mov
rolb
sbb
addl
add
push
aas
mov
sbb
outsl
sub
dec
clc
mov
out
mov
add
mov
add
cs
add
xchg
aas
aas
out
sbb
add
xchg
insb
clc
or
mov
mov
dec
ret
mov
add
mov
dec
fwait
push
pop
outsb
dec
data16
sub
jo
mov
lea
outsl
je
xor
add
fdivrs
add
xchg
adc
jno
add
push
add
sub
mov
mov
mov
stc
mov
ds
jmp
lea
scas
sub
jns
add
test
mov
or
add
add
xorl
bound
mov
add
add
mov
add
inc
mov
inc
mov
rorl
mov
shl
add
mov
pushf
mov
add
add
add
in
cmp
jno
add
add
add
xchg
add
mov
add
adc
jb
jecxz
add
or
cmpsl
aas
and
mov
jp
push
lcall
inc
push
add
add
dec
and
add
mov
outsb
addb
fistps
sub
and
mov
add
add
cltd
xor
insl
popf
pop
mov
add
loop
bound
mov
in
imul
pushf
enter
mov
adc
inc
add
lods
push
jne
add
mov
fcomi
mov
rcrl
add
pop
add
jno
mov
push
add
add
ja
jae
mov
push
add
xchg
add
add
enter
int3
addb
push
repnz
mov
add
push
mov
xchg
jg
add
add
xor
cmc
sub
pop
sahf
fmuls
icebp
idivl
aad
add
sbb
pop
mov
push
add
add
xor
lahf
xchg
and
sbb
add
add
push
lock
add
xchg
add
add
inc
add
xchg
cli
subl
add
lahf
xor
sbb
pusha
add
mov
push
add
inc
xchg
add
add
mov
add
rcrl
cltd
jmp
ret
add
js
or
testb
addr16
pop
jne
int3
aad
jb
inc
adc
push
add
loop
xor
mov
add
dec
jmp
fucom
pop
sub
fisttps
mov
xchg
adc
add
lcall
rcr
ja
pop
mov
jno
push
pop
sbb
daa
ficompl
lea
push
pop
sub
add
xchg
mov
xchg
out
dec
js
data16
jo
xchg
add
outsl
dec
in
mov
push
dec
stos
pop
gs
mov
push
jecxz
add
addb
sub
dec
xor
lcall
pop
push
add
xchg
add
push
iret
test
cmp
add
popf
mov
cmp
int3
hlt
add
xchg
add
pop
pop
mov
xor
add
cmp
add
add
cli
xor
add
leave
mov
aaa
or
sub
sti
shll
shr
add
sub
call
mov
add
sub
add
pop
dec
mov
fdiv
add
add
mov
faddl
addr16
add
cmp
mov
aaa
pop
sbb
mov
ss
cltd
gs
add
add
in
push
mov
push
add
adc
ss
call
out
repz
mov
mov
jnp
pop
int3
xchg
jmp
roll
xchg
add
add
cmp
add
push
add
push
cmp
adc
repnz
aas
loopne
pop
mov
mov
xor
add
cwtl
cmp
das
cmp
mov
in
add
aam
mov
loopne
sbb
push
jmp
add
and
mov
add
adc
adc
push
mov
pop
mov
push
add
add
loop
fcompl
data16
add
cmp
mov
add
lahf
adc
pop
sahf
rolb
sti
inc
gs
pop
push
add
dec
xchg
add
add
mov
data16
loope
adc
aaa
xchg
add
sbb
int3
and
mov
popa
add
mov
push
add
mov
nop
add
add
test
sub
ds
cmp
cltd
imul
jb
sahf
or
jnp
add
xchg
mov
pop
in
pusha
add
mov
jo
les
pop
out
sbb
mov
and
mov
pop
xchg
cld
in
ficomps
lock
push
inc
dec
cmp
jmp
fdivs
inc
add
cld
int
add
lods
decb
add
je
push
add
testb
add
xor
or
add
lea
pmaxub
mov
outsb
stos
mov
loopw
enter
push
add
pop
dec
cmp
psllq
add
pop
jnp
adc
int3
repz
mov
add
pop
xchg
add
add
jne
mov
add
ret
or
sub
add
out
dec
sahf
xchg
pop
pusha
add
add
hlt
add
adc
push
add
das
pusha
add
add
jge
add
mov
add
mov
pop
lret
pcmpeqd
movntq
gs
inc
add
ljmp
inc
ficomps
add
mov
cs
mov
test
in
cwtl
clc
iret
add
mov
mov
add
icebp
jae
sbb
popf
fs
dec
xchg
imul
lcall
add
mov
nop
add
add
sbb
cmc
mov
or
or
pushf
jb,pn
push
add
add
int
and
mov
add
fmuls
xchg
add
sub
scas
sub
push
ret
add
cli
in
call
pop
add
mov
adc
pop
test
sbb
and
cltd
and
cmp
das
add
in
pop
xchg
mov
cmpsl
push
dec
sbb
inc
add
movb
add
sub
add
lahf
movb
into
mov
dec
add
add
add
cmpsb
add
add
mov
add
imul
add
dec
nop
add
leave
dec
rolb
lods
cltd
xchg
cmp
or
rolb
add
add
add
add
insb
mov
push
out
stos
icebp
sbb
add
test
mov
xchg
add
add
fadds
enter
add
pop
ja
bound
mov
stos
mov
dec
cmpsb
add
add
inc
add
add
jg
mov
clc
and
icebp
pop
cmpsl
jne
add
add
add
xor
cmp
arpl
shll
cmp
and
mov
add
mov
add
add
push
popa
dec
into
push
popa
mov
stos
mov
pop
mov
add
xchg
cmp
pop
aad
jg
add
lods
outsl
mov
mov
dec
pushf
add
std
pop
lret
loopne
mov
add
inc
out
lods
jb
popf
jb
hlt
add
fsubrp
sub
add
add
adc
mov
cmp
or
ficoms
jo
enter
add
add
pop
cmp
add
mov
sti
fwait
pop
test
add
aad
add
add
cld
lods
xchg
add
ret
std
jecxz
add
test
xlat
sbb
stos
mov
add
cltd
sbb
sub
sbb
xchg
fsubrl
jge
push
add
push
sub
or
insl
loop
outsb
incl
sbb
push
mov
sbbl
or
add
sti
cmp
add
and
jae
stos
inc
lods
negl
add
jno
adc
aaa
add
mov
add
insb
bound
mov
dec
repz
cmp
dec
fdivrl
jg
pop
mov
add
add
sbb
pop
xchg
inc
out
outsb
cmp
and
push
add
jne
add
sbb
popa
inc
add
add
addb
std
rcrl
scas
test
je
push
add
jae
movb
dec
stos
js
mov
add
mov
add
push
test
hlt
add
push
movsl
int3
sarl
dec
push
add
mov
addr16
add
add
mov
xchg
call
add
repz
add
mov
notl
add
mov
add
icebp
or
add
mov
imul
test
rolb
add
sbb
add
out
data16
add
sbb
mov
ret
adc
movb
jle
add
add
add
inc
add
repz
movsl
inc
fwait
add
add
add
js
stos
dec
rolb
inc
add
add
add
sbb
mov
cmpl
popf
hlt
add
add
add
iret
inc
and
subl
addb
std
shl
dec
std
leave
pop
push
xor
in
jge
adc
mov
imul
add
mov
pop
jle
push
lea
scas
jmp
out
inc
mov
les
adc
sbb
add
punpckhwd
xor
add
test
add
movsl
xchg
add
add
adc
inc
shll
add
fld1
je
add
out
sub
inc
outsl
test
push
aas
sub
int
sub
add
or
mov
faddl
and
jp
test
js
aas
aad
add
push
add
add
mov
bound
mov
je
movsl
notl
repz
fdivrl
insl
add
mov
dec
movb
add
fdivrs
ljmp
mov
fmull
addb
xchg
loope
movl
test
xor
inc
addb
xor
add
mov
add
cmpsl
inc
add
pop
cmp
mov
imul
cmp
jp
and
mov
pop
xchg
cmp
adc
add
cmp
add
sub
mov
pop
mov
addb
push
add
in
scas
loopne
or
and
add
int3
pop
add
push
add
mov
mov
xorl
test
xrelease
add
add
mov
add
add
add
xor
add
xchg
mov
add
jne
xor
add
mov
add
test
add
xchg
push
add
aas
xchg
mov
add
cmp
iret
inc
arpl
addb
add
add
call
sarl
sbb
mov
push
add
mov
add
les
mov
cmp
in
add
sub
sub
add
add
sbb
loope
push
push
add
mov
rolb
dec
sti
sub
loope
cld
inc
int3
inc
add
add
sbb
sbb
fnstsw
add
mov
xchg
mov
scas
and
push
pop
sub
sbb
test
cld
mov
add
cmpsl
mov
jle
icebp
jbe
add
call
ror
push
sub
aas
std
repnz
push
add
in
add
cli
sbb
add
mov
add
add
cmp
bound
mov
pop
add
and
xchg
xchg
add
icebp
push
add
idivl
sub
mov
filds
xor
arpl
mov
in
inc
dec
dec
insl
push
add
add
add
inc
push
jno
jmp
negl
mov
out
add
out
cmp
sub
add
enter
add
mov
or
add
add
fprem1
sbb
in
lahf
jle
and
and
dec
dec
mov
test
dec
scas
into
and
sub
push
add
icebp
or
shrl
adc
fdivl
rolb
mov
or
xor
mov
addb
addb
add
add
add
add
add
and
add
xchg
add
add
fisubrl
mov
jp
int3
dec
add
jp
xor
addb
cmp
ljmp
add
jle
sub
mov
mov
add
mov
add
xlat
pop
jo
push
mov
enter
add
sti
mov
das
fst
add
add
and
add
fmull
add
lea
lahf
adc
add
mov
inc
add
aaa
add
movsb
add
mov
xchg
dec
scas
rolb
adc
dec
mov
push
add
repz
mov
leave
dec
repz
out
push
aaa
xlat
inc
xchg
gs
es
addl
push
mov
aaa
fidivrl
adc
popa
lret
ret
cs
cmp
scas
outsl
cmc
fwait
lcall
sbb
add
mov
add
fwait
pop
daa
clc
mov
jne
sbb
scas
iret
sbb
aam
imul
add
cld
or
push
cwtl
cld
sbb
addb
movb
std
fsubp
cmc
sbb
mov
add
add
push
pop
mov
sbb
addr16
add
mov
cmp
add
lods
lret
js
pop
cmp
push
cmpsl
scas
fwait
dec
les
rolb
jae
pop
enter
add
adc
stos
jae
mov
lea
fldcw
xor
lock
dec
push
add
arpl
imul
add
add
addb
jge
pop
adc
nop
add
test
adc
xor
mov
or
rcl
in
sub
mov
rolb
add
mov
push
cwtl
and
jne
repz
inc
clc
jb
add
pop
rolb
xchg
inc
push
add
inc
add
pop
ficoms
inc
add
add
pusha
add
add
repz
stos
add
ds
add
inc
add
lea
mov
sub
add
add
mov
sti
cli
inc
add
fnsave
addr16
sti
les
xchg
daa
and
pop
loope
imul
xchg
and
xchg
jl
add
mov
or
mov
fwait
push
add
push
add
add
cltd
dec
and
mov
mov
add
add
mov
addb
add
ret
xor
out
add
and
ficoml
dec
and
mov
push
add
add
cmp
aas
test
add
rcpps
inc
add
xchg
add
lds
pop
rolb
sahf
or
add
add
jns
mov
test
add
add
mov
jb
xchg
arpl
cmpsb
add
pop
rolb
mov
mov
jae
inc
dec
or
lea
jmp
adc
sahf
je
stc
sti
lock
add
add
mov
add
add
xchg
testl
add
or
mov
mov
in
mov
test
ljmp
push
add
fildll
add
mov
or
outsb
push
pop
and
jp
add
mov
mov
add
add
xor
cmp
add
repnz
inc
pop
and
addb
sbb
mov
sbb
add
std
jge
mov
lea
mov
dec
aam
popa
aaa
jg
add
mov
pop
xchg
mov
add
imul
call
add
mov
add
add
add
movsl
pop
jmp
and
test
push
add
aas
add
jne
mov
ret
ja
in
jmp
add
sub
push
das
xchg
add
lds
add
add
push
sbb
pusha
add
jmp
mov
pop
ror
popa
cmp
pop
push
add
mov
lahf
adc
mov
add
add
addb
dec
mov
adc
pusha
add
dec
xchg
icebp
rolb
xchg
add
xchg
add
popa
sub
rolb
and
ja
dec
add
shll
jge
mov
add
cli
insb
out
cld
mov
pop
outsl
push
data16
add
fisttps
mov
loop
add
push
sub
add
lret
sbb
add
dec
pop
fwait
in
sahf
dec
pop
jg
inc
or
pop
inc
pushl
add
fdivs
les
das
adc
lods
push
arpl
inc
add
insb
pop
add
mov
add
cmpsb
add
add
add
add
jno
add
ficompl
filds
dec
sub
add
mov
push
add
mov
cmc
outsb
testb
cmp
add
add
je
lcall
add
add
and
pop
imul
jne
inc
add
xor
loopne
mov
add
in
into
xor
xchg
jne
add
pop
and
mov
pop
pop
lahf
jl
mov
popa
sahf
movb
add
cld
mov
arpl
int
push
add
stc
out
imul
add
je
cmp
add
aam
jle
pop
pushf
sub
lea
cmp
add
dec
sarl
add
mov
idivl
out
out
xor
adc
int3
lea
add
sbb
add
jl
add
mov
cmp
mov
add
lods
imul
and
add
sti
push
add
and
stos
mov
add
add
inc
add
mov
sarl
das
fdivl
adc
leave
stc
xor
cmp
mov
cld
add
scas
mov
pushf
out
fdiv
xchg
add
and
addr16
js
repz
push
and
mov
and
mov
dec
fcomip
das
rolb
call
insl
pop
sbb
es
add
test
push
add
sbb
add
add
inc
mov
inc
push
sub
jo
inc
fwait
addb
add
sahf
mov
mov
decb
mov
add
push
add
add
ss
add
push
add
add
or
mov
dec
nop
add
mov
scas
jmp
loopne
fisubl
enter
dec
insl
xor
push
add
adc
aaa
jge
add
mov
repnz
add
or
aas
mov
add
mov
mov
mov
ret
pcmpeqw
inc
push
sbb
pop
rcrl
pusha
add
dec
mov
push
sahf
mov
xor
xchg
lahf
pop
push
add
mov
stos
pop
xor
inc
add
data16
push
add
add
popf
push
add
add
fs
loope
xor
add
stc
ret
mov
insl
nop
add
add
add
mov
ljmp
fdivl
add
dec
lahf
mov
call
lods
ds
add
add
outsb
dec
or
lods
and
mov
mov
pop
loopne
leave
rolb
xor
popf
push
cmpsb
add
add
outsb
or
add
cmp
add
mov
sub
in
xor
add
daa
xchg
in
insb
sbb
lds
add
jp
icebp
in
jno
add
insb
dec
in
jne
insl
lret
lea
add
add
sbb
add
stos
icebp
add
jl
fs
das
imul
push
adc
cmpl
stos
aad
sub
add
add
add
nop
add
outsl
cli
and
insl
mov
gs
mov
add
pop
mov
add
lret
mov
xchg
outsb
nop
add
add
les
xor
add
addb
add
in
push
jae
xchg
adc
data16
push
add
add
mov
xchg
outsb
cmp
mov
dec
inc
add
mov
iret
mov
test
add
cmpsb
add
add
in
inc
add
add
add
in
in
and
mov
fistl
or
add
add
xchg
add
imul
mov
sahf
test
lret
lret
hlt
add
das
decl
mov
fdivrl
in
add
call
jo
xchg
outsb
xor
dec
mov
add
push
add
add
push
sbb
add
mov
pop
pop
bound
mov
adc
add
mov
add
add
fsubrs
outsb
js
int
add
mov
jb
adc
cmpsl
mov
in
pop
xor
es
sub
mov
pop
iret
mov
push
cmpsl
jno
popa
pop
mov
scas
test
jno
mov
add
mov
cwtl
add
add
pop
dec
sbb
add
xchg
add
jecxz
movb
pop
int3
addb
and
add
scas
dec
rolb
sbb
test
mov
sbb
xor
add
hlt
add
shll
mov
push
lcall
add
sbb
fists
fisubl
pop
inc
jle
add
push
add
mov
dec
lcall
loope
les
jae
or
gs
and
mov
clc
loope
add
mov
add
add
adc
push
mov
stc
jecxz
add
divl
rolb
mov
xchg
stos
mov
xchg
cli
inc
sbb
adc
sbb
sti
jge
add
add
inc
add
add
das
lods
je
nop
add
add
insl
sub
dec
add
mov
out
add
inc
add
or
add
pop
frndint
in
and
mov
sub
push
add
push
insl
sbb
stc
call
scas
std
push
insb
cmpsb
add
mov
nop
add
add
loopne
and
xlat
adc
pop
inc
add
add
arpl
add
jmp
dec
or
or
in
push
add
sub
xchg
pushf
cmp
sbb
sahf
ds
pop
imul
add
push
mov
add
and
mov
ljmp
addb
mov
mov
push
add
int3
js
daa
mov
mov
add
arpl
add
addb
add
and
xchg
enter
add
dec
outsb
pop
xchg
testb
xchg
add
add
or
adc
addb
add
mov
je
or
ret
mov
out
add
add
pusha
add
mov
add
movb
rolb
xchg
add
mov
addb
add
jp
pop
sbb
popf
xchg
add
xor
pop
xchg
arpl
addr16
movsl
pop
dec
mov
or
and
mov
repz
fnstenv
incl
push
pop
dec
adc
xchg
out
cli
dec
dec
fsubrs
jne
pop
mov
scas
mov
add
mov
add
dec
mov
out
out
jle
add
add
loopne
add
mov
dec
jp
add
sub
mov
adc
mov
lret
int
and
adc
jg
add
add
xchg
add
imul
stc
fwait
lds
test
loop
jl
sbbl
mov
out
cli
pop
mov
out
mov
popf
shl
and
push
add
add
in
mov
add
add
mov
add
fistpll
clc
cmp
add
inc
cmpsl
lds
lods
cmpsl
lock
lret
mov
xor
out
movb
xor
imul
fcompl
lds
xchg
xchg
dec
fbld
add
add
bound
mov
add
add
inc
out
adc
push
imul
lds
add
mov
mov
add
add
mov
pop
jae
sub
add
push
add
jo
cmp
pop
aas
aas
scas
int
and
mov
adc
cmpsb
add
repz
jno
mov
rcrl
add
out
scas
lcall
add
add
add
add
inc
xor
test
add
sbb
fildll
inc
add
sbb
mov
sub
pushf
push
add
add
add
add
stc
sti
push
loop
push
mov
push
add
dec
iret
stos
rolb
push
divl
or
pop
daa
fstl
push
xchg
add
mov
aad
mov
mov
jle
pop
inc
add
int3
and
repnz
add
je
clc
jl
add
das
xchg
add
mov
mov
das
sub
add
jmp
les
fwait
popf
push
add
sub
inc
add
mov
add
bound
mov
jbe
bound
mov
imul
dec
movb
scas
sti
add
mov
out
daa
adc
add
push
jae
and
out
push
pop
mov
jb
cwtl
xchg
cmc
xchg
add
dec
push
add
mov
add
add
jo
mov
repz
adc
and
mov
pop
mov
mov
mov
sahf
mov
jg
add
movsl
pop
pop
jmp
out
add
sahf
popa
cmpsl
or
into
jno
addr16
lret
ds
add
out
out
xor
mov
fadds
mov
fiaddl
add
add
pop
stos
in
test
cmp
arpl
add
mov
out
dec
push
pop
pop
mov
pusha
add
enter
cmc
ror
test
sahf
xor
xchg
add
loop,pt
inc
add
inc
add
loopne
cli
mov
add
arpl
add
add
sti
jmp
add
sbb
mov
mov
arpl
or
and
mov
test
data16
addr16
jo
add
gs
jns
and
sti
mov
xor
pop
dec
repz
mov
rolb
int3
scas
scas
pusha
add
jno
mov
jmp
pop
movsb
add
sub
add
add
and
loope
add
fs
lret
arpl
jecxz
adc
push
scas
scas
mov
push
add
or
popa
or
add
add
cli
fdivl
add
adc
hlt
add
sbb
add
xchg
add
xchg
loope
add
add
add
adc
sbb
add
add
push
add
dec
cmp
add
add
ret
xchg
ret
mov
ret
sbb
jecxz
lahf
rolb
stc
jae
add
add
and
mov
mov
mov
je
ret
fcmovnu
fwait
jmp
jge
add
add
arpl
push
paddd
sbb
rcl
add
add
sbb
sbb
inc
add
rolb
bound
mov
loop
sti
adc
sub
call
push
pop
rolb
call
roll
add
pop
dec
mov
add
scas
inc
insl
lods
mov
fists
xchg
sub
add
add
add
mov
add
add
lcall
sub
or
add
add
pushf
or
testl
cltd
je
je
lret
mov
outsl
sub
add
scas
ds
add
and
mov
pop
test
test
sbb
adcl
push
add
aas
in
or
aad
or
mov
xchg
add
xchg
jmp
dec
mov
add
sbb
imul
inc
out
add
fwait
les
sbb
sti
cmpsl
cwtl
jb
mov
xor
cltd
stos
jb
pop
mov
push
add
cmpsl
call
loope
pop
sbb
mov
jl
add
inc
add
repnz
jae
hlt
add
add
mov
clc
repnz
jae
rolb
jecxz
add
xchg
adc
xor
push
clc
repnz
jae
add
add
cmc
cwtl
call
clc
repnz
jae
add
add
fwait
cld
nop
jmp
and
and
jmp
jbe
clc
repnz
jae
popf
and
xchg
push
je
out
push
mov
mov
rorb
xchg
or
mov
xchg
ret
add
jecxz
jmp
add
and
cld
nop
jmp
mov
add
add
add
clc
repnz
jae
add
mov
nop
jae
rdpmc
jns
add
mov
incb
repz
cld
nop
jmp
popf
jmp
faddl
aaa
shll
push
or
repnz
jae
sbb
add
add
and
clc
repnz
jae
push
xorb
into
mov
clc
repnz
jae
icebp
add
jns
pop
mov
clc
repnz
jae
fadds
dec
push
icebp
in
scas
mov
clc
repnz
jae
setge
add
ds
xor
add
mov
add
xor
add
add
mov
clc
repnz
jae
add
push
mov
xchg
ret
and
xchg
add
pusha
push
mov
xchg
ret
in
sub
sqrtps
and
xor
mov
mov
nop
jae
add
adc
add
add
mov
clc
repnz
jae
xor
push
add
inc
inc
add
sbb
add
aam
add
add
add
clc
repnz
jae
idivl
incl
nop
jae
mov
mov
call
fwait
cld
nop
jmp
in
in
add
add
test
add
clc
repnz
jae
insb
ret
inc
lahf
add
push
mov
xchg
ret
adc
add
pop
testb
movzwl
clc
repnz
jae
inc
popf
xchg
xor
xor
add
clc
repnz
jae
add
pop
add
clc
repnz
jae
in
loopne
out
pusha
clc
repnz
jae
jns
add
mov
mov
fwait
cld
nop
jmp
add
add
fxsave
add
add
mov
clc
repnz
jae
add
xchg
add
clc
repnz
jae
fcompl
mov
and
cmp
mov
xchg
ret
add
cmp
add
mov
nop
jmp
mov
add
push
sub
adc
inc
add
add
add
add
or
add
clc
repnz
jae
add
xor
xor
clc
repnz
jae
add
add
pop
mov
clc
repnz
jae
jmp
std
bound
mov
add
push
push
mov
xchg
ret
add
jl
std
push
add
add
clc
repnz
jae
add
xor
add
mov
clc
repnz
jae
jns
or
repnz
clc
inc
add
loopne
add
out
pop
cmpl
fwait
cld
nop
jmp
popf
in
arpl
call
clc
repnz
jae
and
icebp
xchg
fimull
es
add
add
mov
pop
sub
cld
nop
jmp
dec
aam
cmc
jl
push
lcall
repnz
jae
std
adc
mov
add
jne
clc
repnz
jae
mov
xor
add
mov
nop
jmp
xor
jae
icebp
scas
test
nop
jae
add
aam
add
dec
inc
pop
jne
fwait
cld
nop
jmp
cmc
add
add
cli
add
push
mov
xchg
ret
pop
xchg
icebp
scas
fistpl
cld
nop
jmp
add
push
testl
add
jae
insb
loopne
add
adc
call
nop
jae
add
push
xor
add
aaa
inc
add
test
fwait
cld
nop
jmp
and
aam
andb
les
dec
pusha
clc
repnz
jae
pop
rolb
add
add
add
outsl
loopne
mov
xchg
ret
ret
insb
dec
sbb
nop
jmp
stos
jbe
lahf
je
clc
repnz
jae
xor
dec
or
repnz
jae
icebp
add
std
pop
not
push
mov
xchg
ret
out
mov
xchg
fwait
cld
nop
jmp
push
add
add
add
shll
add
jne
fwait
cld
nop
jmp
add
add
ja
mov
fwait
cld
nop
jmp
hlt
add
add
daa
cmp
jbe
add
cmp
add
add
jns
add
test
clc
repnz
jae
add
stos
push
clc
repnz
jae
std
add
add
sub
jne
clc
repnz
jae
add
add
add
fwait
cld
nop
jmp
faddl
push
add
add
add
clc
repnz
jae
push
fiadds
push
add
ljmp
adcl
add
mov
add
stos
jne
add
repnz
jae
add
add
push
in
fsubrl
cmp
fwait
cld
nop
jmp
add
add
push
clc
repnz
jae
add
add
add
pop
ret
fwait
xor
clc
repnz
jae
add
jl
push
pop
add
jne
clc
repnz
jae
inc
add
sbb
jae
add
push
xor
insb
push
jae
xor
cld
xor
push
mov
xchg
ret
add
add
add
sbbl
add
fmull
add
push
clc
repnz
jae
mov
popf
in
add
clc
repnz
jae
xor
xor
sbb
nop
jmp
and
inc
pop
jp
push
mov
xchg
ret
fmuls
add
hlt
cmp
and
repnz
jae
xchg
sldt
std
in
xchg
clc
repnz
jae
incb
add
add
add
mov
or
add
repnz
jae
add
or
repnz
jae
addb
add
insb
fimuls
jae
add
or
inc
nop
add
add
pop
fwait
cld
nop
jmp
ret
sbb
add
push
add
add
jmp
in
mov
mov
ljmp
and
add
push
stos
add
jnp
enter
jae
jae
xchg
aam
testl
clc
repnz
jae
add
add
add
dec
mov
push
mov
xchg
ret
add
pop
inc
add
aas
mov
clc
repnz
jae
pop
add
decb
adc
add
dec
add
jl
mov
add
add
add
push
mov
xchg
ret
add
jecxz
add
aad
add
add
fmull
jmp
add
mov
decl
clc
repnz
jae
loopne
mov
add
add
ja
add
dec
cmp
repnz
jae
pop
push
jae
mov
lcall
jmp
add
add
xor
js
or
adc
add
add
pop
sbb
jge
jmp
add
add
or
dec
cmc
xor
add
clc
repnz
jae
xor
add
add
repnz
jae
add
add
jecxz
jecxz
mov
adc
rolb
add
cld
nop
jmp
sub
add
and
or
or
inc
add
jecxz
std
add
add
add
fadds
add
add
or
sbb
jmp
icebp
add
add
add
add
clc
repnz
jae
ret
add
add
clc
repnz
jae
inc
jmp
ret
mov
push
mov
xchg
ret
mov
add
add
fwait
cld
nop
jmp
mov
cmc
add
add
mov
xchg
ret
push
dec
fcompl
cmp
mov
xchg
ret
icebp
icebp
add
add
aam
movzwl
clc
repnz
jae
xor
xor
sub
out
dec
pop
push
mov
xchg
ret
push
adc
or
mov
clc
repnz
jae
add
pop
clc
repnz
jae
add
mov
add
xor
add
or
repnz
jae
add
in
add
inc
add
push
mov
xchg
ret
add
add
add
repnz
jae
popf
add
mov
clc
repnz
jae
std
pop
add
xor
add
add
push
push
add
clc
repnz
jae
add
mov
push
add
add
xchg
leave
add
fwait
cld
nop
jmp
add
popf
add
and
cltd
mov
clc
repnz
jae
popf
insb
or
add
or
cld
nop
jmp
str
xor
fwait
cld
nop
jmp
pop
ret
mov
ret
add
mov
and
jb
fwait
cld
nop
jmp
add
cmc
std
sbb
jne
push
mov
xchg
ret
cmc
jmp
add
clc
repnz
jae
xchg
jae
add
dec
add
add
or
add
cmc
incl
jecxz
dec
jg
test
clc
repnz
jae
add
add
pushl
fwait
cld
nop
jmp
icebp
xchg
testl
add
clc
repnz
jae
cmc
and
popf
xor
cmpsb
add
push
push
mov
xchg
ret
dec
add
cmp
jmp
std
scas
add
push
test
or
in
xor
cmpb
add
aad
mov
clc
repnz
jae
add
add
mov
ret
maskmovq
add
or
add
add
or
nop
jae
and
loopne
add
jns
clc
repnz
jae
xor
add
jae
and
push
clc
repnz
jae
ret
add
pop
add
add
out
test
fwait
cld
nop
jmp
jecxz
mov
add
push
fwait
cld
nop
jmp
add
inc
add
xchg
insb
xchg
inc
add
mov
lahf
scas
add
or
add
int3
stos
push
mov
xchg
ret
fsubr
jecxz
add
mov
repnz
jae
popf
add
add
jns
jne
clc
repnz
jae
xor
add
push
mov
xchg
ret
add
mov
cmp
clc
repnz
jae
and
pop
add
mov
push
mov
xchg
ret
add
xor
or
and
add
repnz
jae
jl
inc
add
and
clc
repnz
jae
loopne
push
scas
add
ds
clc
repnz
jae
popf
add
fsts
mov
xchg
ret
inc
add
scas
cmc
jecxz
cmp
fwait
cld
nop
jmp
add
add
lds
insl
call
clc
repnz
jae
rolb
add
nop
jae
add
add
adc
cltd
push
clc
repnz
jae
add
push
lds
repnz
jae
testl
insb
in
fisttpll
cld
nop
jmp
add
mov
fdivrl
repnz
jae
or
std
add
rolb
add
clc
repnz
jae
add
sahf
push
clc
repnz
jae
xor
dec
sub
movsl
lock
add
add
notl
movzwl
fwait
cld
nop
jmp
add
jae
pop
add
stos
add
clc
repnz
jae
mov
pop
enter
clc
lcall
push
add
add
add
clc
repnz
jae
std
inc
pop
add
push
mov
add
mov
xchg
ret
insb
xchg
jecxz
add
clc
repnz
jae
mov
push
add
jl
mov
fwait
cld
nop
jmp
push
add
xchg
xchg
repnz
jae
add
push
add
push
pop
mov
push
mov
xchg
ret
cmp
add
add
test
repnz
jae
inc
mov
pop
fiadds
not
mov
jmp
adc
add
xor
add
lds
pop
mov
clc
repnz
jae
add
add
fsts
repnz
jae
xor
add
sbb
xor
fwait
cld
nop
jmp
ret
add
inc
popf
add
call
clc
repnz
jae
add
inc
or
repnz
jae
add
add
add
jb
mov
add
repnz
jae
add
andb
pop
push
mov
xchg
ret
out
add
add
xor
fwait
cld
nop
jmp
faddl
mov
incb
add
outsb
mov
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
add
adc
xor
xchg
add
xor
clc
repnz
jae
add
and
je
mov
repz
repnz
jae
add
add
add
stos
clc
repnz
jae
add
mov
mov
clc
repnz
jae
mov
loopne
mov
mov
adc
repnz
jae
push
add
add
loopne
pop
add
push
mov
xchg
ret
add
add
and
lcall
inc
add
add
xor
xor
iret
or
inc
add
jae
add
and
mov
incb
nop
jmp
push
loopne
add
fiadds
cwtl
cmp
fwait
cld
nop
jmp
ret
adc
popf
or
mov
xchg
ret
jmp
aam
push
push
mov
xchg
ret
add
add
cmpsl
pop
push
push
mov
xchg
ret
scas
in
notl
xor
push
mov
xchg
ret
add
mov
clc
repnz
jae
add
add
popa
fwait
cld
nop
jmp
add
inc
ret
add
add
js
icebp
clc
repnz
jae
mov
ret
add
mov
clc
repnz
jae
mov
mov
xor
add
add
repnz
jae
incb
add
add
push
clc
repnz
jae
insb
mov
add
leave
cmpl
push
mov
xchg
ret
push
add
inc
sahf
push
clc
repnz
jae
out
add
add
nop
jb
clc
repnz
jae
add
incb
adc
imul
adc
add
add
add
movzwl
clc
repnz
jae
add
add
push
inc
sbb
nop
jmp
add
add
sub
mov
nop
jae
scas
add
add
rolb
mov
clc
repnz
jae
scas
mov
testb
test
jecxz
cmp
repnz
jae
add
xchg
faddl
and
enter
mov
xchg
ret
insb
xor
add
icebp
pop
call
clc
repnz
jae
fsubs
jne
mov
clc
repnz
jae
add
mov
inc
or
jns
clc
repnz
jae
stos
push
sub
mov
fwait
cld
nop
jmp
sub
neg
add
ret
in
pop
push
les
push
jne
clc
repnz
jae
add
xchg
push
mov
xchg
ret
out
in
add
cld
nop
jmp
inc
fdivrs
add
add
jmp
incl
jmp
icebp
dec
stos
add
pop
add
mov
sti
clc
repnz
jae
add
push
icebp
pop
and
add
repnz
jae
popf
push
add
mov
test
fwait
cld
nop
jmp
stos
add
scas
mov
add
mov
clc
repnz
jae
sbb
fwait
push
push
mov
xchg
ret
add
faddl
stos
loopne
add
lea
clc
repnz
jae
neg
add
add
adc
js
rolb
repnz
jae
loopne
jecxz
push
add
push
mov
xchg
ret
faddl
jns
jecxz
or
clc
repnz
jae
add
add
fwait
cld
nop
jmp
push
hlt
add
mov
fisubrl
fwait
cld
nop
jmp
add
or
test
jl
mov
incb
popf
add
pusha
add
fwait
cld
nop
jmp
cmp
popf
scas
push
push
mov
xchg
ret
rolb
push
inc
add
clc
repnz
jae
add
in
add
test
lcall
sldt
push
cmp
scas
and
fwait
cld
nop
jmp
add
inc
or
subl
clc
repnz
jae
sar
push
mov
add
call
repnz
jae
std
add
add
cmp
fwait
cld
nop
jmp
xchg
mov
xchg
roll
xchg
ret
jmp
inc
add
leave
mov
push
mov
xchg
ret
add
es
clc
repnz
jae
ficoms
mov
xchg
ret
jl
mov
dec
addb
mov
fwait
cld
nop
jmp
push
add
or
clc
repnz
jae
ltr
sub
fwait
cld
nop
jmp
add
push
add
adc
loopne
jns
fwait
cld
nop
jmp
add
add
add
loopne
addb
add
repz
repnz
jae
add
faddl
mov
xchg
and
repnz
jae
add
insb
xor
popl
popf
clc
repnz
jae
add
add
mov
push
clc
repnz
jae
and
add
pop
mov
clc
repnz
jae
add
add
sarl
cld
nop
jmp
add
add
mov
pop
lock
add
stos
mov
cld
nop
jmp
add
add
add
add
clc
repnz
jae
add
add
add
add
clc
repnz
jae
xor
add
push
mov
xchg
ret
adc
add
add
push
xchg
stos
rep
clc
repnz
jae
icebp
jmp
add
and
mov
xchg
ret
sub
add
xchg
addb
add
adcl
add
add
xchg
add
or
rcl
add
add
dec
cmp
repnz
jae
mov
add
add
jge
jne
push
mov
xchg
ret
and
mov
clc
repnz
jae
push
add
add
jmp
add
add
add
mov
clc
repnz
jae
rolb
or
push
clc
repnz
jae
xor
add
pop
jecxz
xor
fwait
sub
push
mov
xchg
ret
xor
pop
in
pop
mov
clc
repnz
jae
inc
pcmpeqb
inc
or
repnz
jae
add
add
push
inc
add
je
fwait
cld
nop
jmp
mov
add
cmp
fwait
cld
nop
jmp
push
addb
add
rolb
or
jmp
jmp
xor
add
xor
add
pop
push
mov
xchg
ret
add
sub
add
push
mov
xchg
ret
mov
push
out
lea
fwait
cld
nop
jmp
add
push
add
std
push
imul
ret
clc
repnz
jae
popf
mov
add
out
push
add
add
push
mov
xchg
ret
add
add
add
je
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
xor
mov
repnz
jae
add
add
inc
add
dec
inc
fwait
cld
nop
jmp
hlt
mov
mov
add
mov
xchg
ret
add
add
pop
popf
rep
clc
repnz
jae
add
fadds
icebp
add
jnp
rclb
xlat
inc
add
jl
add
add
add
clc
repnz
jae
or
or
repnz
jae
add
ficoms
push
clc
repnz
jae
add
add
popa
fwait
cld
nop
jmp
add
add
and
xor
popf
push
mov
xchg
ret
add
hlt
add
testb
dec
cmpl
fwait
cld
nop
jmp
hlt
add
stos
xor
call
fadds
xchg
ret
lds
inc
in
add
add
movsl
aaa
aas
shr
fwait
cld
nop
jmp
out
and
jecxz
add
add
add
repnz
jae
xor
rep
clc
repnz
jae
mov
add
mov
push
mov
xchg
ret
add
add
cmpl
fwait
cld
nop
jmp
ret
ret
in
divl
inc
xchg
add
jl
fwait
cld
nop
jmp
and
add
and
clc
repnz
jae
add
scas
and
add
sub
mov
xchg
ret
adc
add
add
fwait
cld
nop
jmp
in
in
add
add
movzwl
push
mov
xchg
ret
add
and
aaa
cmpl
clc
repnz
jae
mov
ss
add
push
push
mov
xchg
ret
insb
insb
popf
stos
add
jae
xchg
rolb
push
popa
clc
repnz
jae
popf
mov
jae
std
push
push
mov
xchg
ret
add
out
pushl
clc
repnz
jae
add
dec
cmp
add
add
mov
and
clc
repnz
jae
icebp
add
rol
xchg
addr16
xchg
stc
add
fwait
cld
nop
jmp
cmc
add
add
rolb
add
mov
cli
clc
repnz
jae
push
xor
sbb
stos
add
mov
push
mov
xchg
ret
stos
add
add
sub
repnz
jae
fcoms
add
add
dec
pop
push
mov
xchg
ret
add
jecxz
loopne
add
rep
fwait
cld
nop
jmp
inc
adc
icebp
hlt
insb
add
mov
clc
repnz
jae
scas
adc
or
add
mov
xchg
ret
add
add
add
add
fwait
cld
nop
jmp
rolb
add
add
pop
add
sub
test
repnz
jae
stos
ret
add
int3
pop
clc
repnz
jae
add
mov
loopne
xor
clc
add
push
mov
xchg
ret
add
fadds
mov
mov
clc
repnz
jae
jl
add
loopne
add
mov
xchg
ret
add
mov
push
mov
xchg
ret
push
add
adcb
lock
repnz
jae
or
add
outsl
shr
clc
repnz
jae
dec
inc
scas
add
movsl
mov
hlt
add
mov
push
mov
xchg
ret
add
add
add
inc
add
repnz
jae
xor
add
push
mov
add
push
lahf
add
add
add
aas
add
imul
xor
repnz
jae
add
xchg
push
add
hlt
add
add
nop
jae
add
add
bound
mov
repnz
jae
out
add
add
add
mov
mov
xchg
ret
mov
fsubrl
nop
jmp
xor
loopne
fsubrp
add
lsl
push
mov
xchg
ret
push
cmp
add
add
and
push
mov
xchg
ret
add
push
and
movsb
push
mov
xchg
ret
add
add
xchg
jecxz
data16
cld
nop
jmp
add
mov
mov
or
repnz
jae
add
and
add
nop
jae
add
add
add
add
ss
lea
jmp
add
inc
in
add
and
verr
add
jae
lds
add
add
fwait
cld
nop
jmp
add
add
add
add
jns
jmp
add
push
jecxz
mov
dec
fwait
cld
nop
jmp
jns
add
add
add
add
jb
clc
repnz
jae
push
mov
push
adc
clc
repnz
jae
mov
mov
and
add
xor
pop
push
clc
repnz
jae
or
add
jns
xor
fwait
cld
nop
jmp
add
faddl
xor
add
add
push
mov
xchg
ret
jmp
add
cltd
lods
push
mov
xchg
ret
add
add
cld
push
mov
xchg
ret
add
insb
add
or
clc
repnz
jae
loopne
sub
divl
outsl
arpl
add
repnz
jae
sub
insb
add
call
clc
repnz
jae
aam
in
and
nop
jae
inc
or
jae
mov
mov
xchg
ret
add
jl
inc
and
jne
mov
clc
repnz
jae
add
xor
hlt
jns
sar
repnz
jae
add
and
push
add
insl
pop
push
mov
xchg
ret
add
lds
sub
add
pop
push
mov
xchg
ret
add
add
add
inc
mov
add
loopne
add
std
add
add
add
popf
xchg
les
sbb
fwait
cld
nop
jmp
add
icebp
pop
add
imull
clc
repnz
jae
add
inc
add
clc
repnz
jae
push
insb
sub
mov
fwait
cld
nop
jmp
push
std
add
xor
mov
xchg
ret
add
and
xor
push
clc
repnz
jae
mov
add
sbb
popa
add
repnz
jae
add
add
popf
or
repnz
jae
add
incb
add
pusha
push
mov
xchg
ret
add
add
add
inc
add
call
clc
repnz
jae
loopne
or
and
fwait
cld
nop
jmp
add
push
out
add
add
add
jb
cld
nop
jmp
rolb
mov
add
push
add
lods
mov
clc
repnz
jae
aam
add
add
adc
imul
inc
add
jae
add
stos
stos
fwait
cld
nop
jmp
add
add
add
jecxz
push
clc
repnz
jae
aam
out
mov
add
push
push
mov
xchg
ret
push
or
add
dec
fwait
cld
nop
jmp
idiv
jl
lds
ret
add
inc
daa
mov
loope
mov
fwait
cld
nop
jmp
add
add
xor
add
add
nop
jmp
xor
hlt
pop
mov
mov
jmp
test
clc
repnz
jae
mov
xor
xor
add
or
add
pop
add
pop
fistl
repnz
jae
add
add
dec
pop
push
mov
xchg
ret
push
add
jl
jns
dec
push
clc
repnz
jae
hlt
add
push
add
jae
push
clc
repnz
jae
popf
mov
add
and
mov
mov
clc
repnz
jae
push
mov
cli
clc
repnz
jae
add
add
ja
add
inc
repnz
mov
add
fwait
cld
nop
jmp
jl
add
add
add
clc
repnz
jae
push
add
fbstp
fwait
cld
nop
jmp
dec
add
or
repnz
jae
loopne
add
add
add
sahf
add
fwait
cld
nop
jmp
add
and
lds
out
fwait
cld
nop
jmp
add
push
inc
add
test
add
clc
repnz
jae
and
add
mov
clc
repnz
jae
pop
add
add
in
mov
clc
repnz
jae
mov
add
out
inc
push
mov
xchg
ret
add
add
add
dec
adc
sar
repnz
jae
add
fmull
test
cld
nop
jmp
or
lsl
clc
repnz
jae
sub
add
incb
jmp
repnz
jae
or
ret
ret
xlat
fildl
nop
jae
add
popf
add
scas
rep
push
mov
xchg
ret
add
push
add
lret
mov
xchg
ret
out
and
add
jle
dec
cmp
repnz
jae
add
out
aam
mov
xchg
add
jae
lds
xor
out
and
pop
clc
repnz
jae
cmp
loopne
add
mov
xchg
ret
add
add
add
mov
inc
clc
repnz
jae
rolb
adc
add
push
add
mov
clc
repnz
jae
add
addb
div
fwait
cld
nop
jmp
add
add
add
add
sub
push
mov
xchg
ret
add
add
add
add
cmp
sbb
sbbl
mov
repnz
jae
popf
add
add
pop
push
mov
add
mov
xchg
mov
loopne
add
add
sub
clc
repnz
jae
push
add
dec
adc
mov
clc
repnz
jae
insb
add
or
push
mov
xchg
ret
add
add
add
jge
jg
clc
repnz
jae
add
sub
test
nop
jmp
popf
xchg
add
arpl
push
push
mov
xchg
ret
mov
add
sbb
repnz
jae
add
add
fwait
pushl
push
mov
xchg
ret
add
add
add
jmp
add
add
add
mov
add
add
rolb
xorl
clc
repnz
jae
popf
add
popa
add
mov
xchg
ret
faddl
sbb
and
decl
nop
jmp
add
in
dec
add
clc
repnz
jae
out
add
dec
test
add
add
add
add
inc
push
mov
xchg
ret
add
add
add
add
xor
clc
repnz
jae
add
add
add
push
push
mov
xchg
ret
popf
dec
add
in
pop
fisttpl
nop
jae
fmull
dec
add
data16
xor
fwait
cld
nop
jmp
jl
add
cmovbe
ret
inc
xchg
mov
nop
jmp
add
icebp
add
mov
fwait
cld
nop
jmp
add
add
jl
add
clc
repnz
jae
add
add
cmc
jns
hlt
add
mov
or
inc
add
inc
add
add
push
clc
repnz
jae
pop
add
pop
xchg
fsubp
and
imul
clc
repnz
jae
xor
add
add
and
add
mov
rclb
jecxz
add
hlt
jmp
add
add
enter
leave
fiadds
xchg
ret
in
hlt
popf
sub
mov
sub
push
mov
xchg
ret
cmc
add
push
mov
xchg
ret
mov
add
ret
std
fmuls
movzwl
clc
repnz
jae
stos
rolb
xor
jmp
add
xor
fiadds
data16
ret
xor
clc
repnz
jae
add
add
nop
jae
pop
out
dec
add
or
cmc
incl
add
fdivs
pushl
push
mov
xchg
ret
push
jae
dec
and
add
clc
repnz
jae
adc
add
add
pop
clc
repnz
jae
add
sub
inc
add
icebp
rcll
je
clc
repnz
jae
add
add
add
inc
xor
clc
repnz
jae
in
or
add
das
movzwl
clc
repnz
jae
add
push
add
jnp
push
mov
xchg
ret
xchg
in
add
add
mov
fwait
cld
nop
jmp
ret
add
cmc
or
mov
pushf
dec
clc
repnz
jae
ret
and
jl
scas
add
push
mov
xchg
ret
add
div
fcoms
push
add
repnz
jae
add
xor
push
mov
xchg
ret
jmp
jae
add
dec
pop
clc
repnz
jae
add
ret
add
jmp
mov
repnz
jae
fdivl
add
jl
cmp
add
cmp
nop
jae
xor
add
movsl
stos
mov
clc
repnz
jae
scas
add
fiadds
add
clc
repnz
jae
add
repnz
clc
repnz
jae
push
mov
add
or
nop
jmp
add
or
pushl
pop
xchg
add
hlt
mov
dec
xor
push
mov
xchg
ret
add
jl
add
or
sar
nop
jae
loopne
inc
add
add
xchg
outsb
call
clc
repnz
jae
add
add
push
mov
xchg
ret
add
add
mov
mov
faddl
xchg
ret
xchg
add
add
add
mov
clc
repnz
jae
push
add
xor
clc
repnz
jae
add
icebp
rolb
addr16
push
clc
repnz
jae
sbb
add
pushf
mov
clc
repnz
jae
add
jmp
add
push
mov
xchg
ret
fdivp
mov
aam
xlat
mov
ficoml
mov
fwait
pop
add
jae
add
hlt
mov
lea
cld
nop
jmp
scas
add
adc
add
mov
nop
add
clc
repnz
jae
add
add
clc
repnz
jae
add
push
add
and
xor
clc
repnz
jae
aam
add
in
mov
add
pop
add
je
pop
andb
add
outsl
add
fwait
cld
nop
jmp
jns
add
add
repnz
jae
xchg
add
icebp
xor
mov
clc
repnz
jae
lds
dec
add
xchg
add
mov
sub
repnz
jae
xchg
lds
jecxz
int3
mov
clc
repnz
jae
add
icebp
pop
jecxz
pop
pop
clc
repnz
jae
insb
mov
add
mov
add
decb
test
repnz
jae
popf
add
sub
cld
nop
jmp
add
inc
jecxz
push
xchg
or
and
clc
repnz
jae
push
push
inc
or
xor
std
call
jmp
incl
std
push
add
dec
jecxz
add
clc
repnz
jae
add
std
dec
sbb
add
push
clc
repnz
jae
adc
loopne
xor
add
add
fwait
cld
nop
jmp
add
add
faddl
jmp
mov
xchg
ret
icebp
add
std
sub
mov
clc
repnz
jae
add
cmp
jno
push
fwait
cld
nop
jmp
add
ret
jl
mov
fwait
cld
nop
jmp
mov
dec
add
add
lcall
fcos
incl
pop
fadds
mov
mov
jmp
add
loopne
stos
add
add
loopne
mov
repnz
cmpl
jno
incl
push
in
mov
cld
nop
jmp
add
and
jl
push
addr16
or
clc
repnz
jae
add
testl
jae
add
add
xor
pop
clc
repnz
jae
add
fsubrs
add
xchg
mov
cmp
repz
repnz
jae
add
std
sldt
add
push
clc
repnz
jae
out
mov
xor
add
mov
add
repnz
jae
add
mov
lea
clc
repnz
jae
add
pop
and
jae
add
je
fwait
cld
nop
jmp
add
xchg
inc
repz
xchg
clc
repnz
jae
add
jae
stos
hlt
faddl
nop
jmp
add
inc
jecxz
shlb
enter
add
add
stc
push
xor
rclb
fiaddl
xchg
ret
xor
adc
ret
push
mov
or
add
addl
lods
add
mov
or
clc
repnz
jae
mov
mov
clc
repnz
jae
add
xor
lret
and
clc
repnz
jae
mov
jecxz
xor
rcll
enter
jae
inc
add
add
nop
jae
dec
jecxz
ficoms
add
clc
repnz
jae
jns
adc
push
mov
clc
repnz
jae
and
loopne
sub
push
fwait
cld
nop
jmp
out
add
add
jns
arpl
loopne
add
add
xor
pushf
push
clc
repnz
jae
add
add
mov
cmc
xor
les
inc
add
add
mov
repnz
jae
in
incb
jne
inc
aas
push
push
mov
xchg
ret
movhps
add
xor
add
mov
xchg
ret
mov
adc
loopne
add
clc
repnz
jae
popf
pop
add
mov
arpl
xor
mov
push
mov
xchg
ret
xor
add
add
mov
xchg
ret
add
fadds
add
add
mov
clc
repnz
jae
add
fisubs
dec
call
clc
repnz
jae
out
jns
push
test
clc
repnz
jae
mov
mov
clc
repnz
jae
icebp
jae
movnti
fwait
cld
nop
jmp
inc
insb
popf
add
and
pop
add
clc
repnz
jae
add
jae
add
lods
call
clc
repnz
jae
add
jecxz
inc
fisubs
xor
add
clc
repnz
jae
add
jl
xor
mov
inc
add
add
xchg
adc
xor
fwait
cld
nop
jmp
in
push
add
add
sbb
cmpl
xchg
jecxz
mov
add
fwait
cld
nop
jmp
add
jecxz
incb
jge
clc
repnz
jae
stos
push
add
add
mov
nop
jae
jns
push
add
xor
dec
call
clc
repnz
jae
add
add
sbb
clc
repnz
jae
push
push
mov
jmp
mov
xchg
ret
add
rorb
and
mov
add
jmp
add
loopne
xor
sub
repnz
jae
pop
sbb
std
add
add
mov
add
add
clc
repnz
jae
jmp
clc
repnz
jae
add
jae
shl
loopne
mov
call
cmp
ret
add
jecxz
add
add
cld
nop
jmp
aam
add
cmc
incb
dec
mov
clc
repnz
jae
push
add
add
push
mov
xchg
ret
sbb
add
pop
jp
push
mov
xchg
ret
in
xchg
sbb
mov
mov
fwait
cld
nop
jmp
mov
addb
jne
popa
push
mov
xchg
ret
jecxz
add
add
sub
cld
nop
jmp
add
add
fadd
jecxz
mov
mov
xchg
ret
add
add
mov
jmp
mov
add
add
add
add
inc
sub
repnz
jae
faddl
push
add
add
push
fwait
cld
nop
jmp
add
fadds
add
add
or
inc
sbb
loope
inc
add
add
push
shlb
sub
add
push
mov
xchg
ret
add
and
mov
add
loope
mov
clc
repnz
jae
std
add
add
nop
jae
popf
push
sbb
scas
dec
shufps
dec
mov
fwait
cld
nop
jmp
inc
add
cmp
jmp
pop
jae
repnz
jae
push
rcrb
inc
add
nop
jae
popf
add
insb
add
incl
add
out
hlt
add
add
pop
loop
sub
clc
repnz
jae
add
add
pusha
add
arpl
cld
nop
jmp
pop
adc
xorb
push
movsl
ret
sbb
nop
jae
add
add
sbb
in
add
add
clc
repnz
jae
cmc
add
mov
clc
outsl
dec
mov
pop
add
lea
incb
mov
add
mov
cltd
dec
mov
ficoml
sbb
xchg
fidivrl
aas
dec
ljmp
add
jns
pusha
add
stos
test
loope
mov
scas
cs
add
jecxz
rolb
xor
sub
rolb
movb
in
dec
test
rolb
pop
lods
inc
sub
add
add
add
push
or
dec
or
cmp
add
add
mov
jge
stc
xor
add
fisttps
adc
xchg
add
add
add
add
or
add
and
mov
push
add
cltd
jne
add
cltd
dec
jnp
adc
pop
rcll
cmp
add
add
xchg
mov
das
out
testl
adcl
add
fsub
test
rcpps
jge
add
add
in
cmc
sub
sahf
mov
add
mov
xor
sub
sub
movsb
add
add
sbb
pop
mov
rdtsc
add
xchg
inc
jns
jge
iret
cltd
testb
add
mov
cmp
fcompl
hlt
add
mov
mov
sbb
icebp
lret
andl
push
cmpsl
lret
flds
mov
add
add
add
jae
add
mov
push
add
or
pushl
gs
imul
gs
add
add
add
loop
aaa
popf
cmp
nop
add
add
xchg
insb
xchg
aam
filds
cmp
add
mov
aaa
jae
dec
add
das
rolb
mov
xchg
add
jle
add
add
pop
adc
mov
add
add
add
lcall
and
add
xor
mov
pop
test
add
rolb
mov
subl
sub
add
mov
jge
xchg
add
jle
cld
add
fldt
jnp
add
jnp
add
pusha
add
or
test
mov
pop
xorl
add
add
mov
add
xor
push
add
add
sub
add
repz
cltd
stc
sub
movsb
add
data16
testb
scas
in
inc
add
add
add
and
mov
pop
sub
xor
add
mov
lods
mov
repz
sub
data16
xchg
mov
add
iret
rolb
pop
sbb
rolb
sahf
sbb
loope
xchg
add
mov
sarl
fstp
and
mov
sbb
inc
add
sahf
popl
enter
js
inc
add
add
dec
leave
movb
out
dec
dec
mov
cmp
add
add
addb
add
mov
les
cmp
lahf
pop
popf
and
dec
mov
and
mov
add
cmp
add
inc
add
loop
inc
add
add
stos
cmp
call
in
cmp
pop
mov
push
std
push
add
add
mov
mov
add
lea
enter
loopne
popf
jnp
adc
xchg
add
jo
dec
jg
push
add
jb
sbb
add
lahf
cmp
or
xchg
xchg
add
pop
mov
ja
add
add
sub
inc
push
jo
out
xor
data16
push
add
sbb
dec
push
add
adc
lcall
nop
add
mov
mul
xlat
call
pop
testb
pop
das
test
dec
in
fwait
xor
testb
ljmp
add
shrl
xor
mov
decb
scas
inc
add
repnz
sti
arpl
addb
sti
xchg
add
bound
mov
add
xchg
mov
xchg
add
mov
mov
mov
add
cmp
add
icebp
aas
lock
push
add
imul
ffreep
pusha
add
or
jae
xchg
stos
jae
and
xor
lahf
dec
jns
int
add
add
pop
jecxz
arpl
out
and
pop
xor
out
add
je
aam
movsl
xchg
arpl
imul
and
sub
cli
pushf
sbb
test
add
pop
mov
cs
xor
lret
je,pt
sub
add
add
add
mov
add
das
xor
lret
pop
test
jmp
je
adc
adc
test
test
bound
mov
xor
frstor
dec
add
add
mov
add
add
add
mov
adc
inc
xor
fs
add
or
je
in
push
into
cmc
mov
xchg
add
xlat
lcall
mov
add
add
add
es
add
xchg
add
jns
add
add
mov
add
data16
push
mov
stc
sti
xor
out
add
xor
in
js
aad
or
add
pushf
xchg
sbb
add
jae
mov
add
add
add
sahf
fsubrl
xchg
add
add
jb
or
ljmp
push
pop
cmp
jg
add
pop
xor
add
mov
cmp
add
mov
gs
adc
add
add
adc
out
pop
sbb
iret
push
in
cmpsb
add
add
mov
movb
xchg
out
mov
xchg
add
mov
jg
jge
add
jl
gs
gs
xor
out
mov
add
rolb
cmp
xchg
cmp
inc
mov
push
add
inc
add
sub
repz
add
mov
jb
sbb
add
jl
addb
xchg
add
out
lret
std
xor
ret
jbe
push
add
lods
adc
and
addb
mov
mov
sbb
sbb
add
add
ret
sti
vmovd
mov
mov
jp
and
out
mov
das
rolb
jp
sbb
jne
sbb
add
push
in
adc
sub
xchg
add
sub
or
add
mov
fstl
add
filds
add
add
sbb
push
add
aas
outsl
aam
data16
or
das
fadd
add
lahf
lock
xchg
je
scas
add
je
mov
or
add
jb
add
inc
add
mov
add
add
popa
std
xor
rolb
push
add
out
aam
lcall
jb
push
push
add
js
xchg
add
push
add
out
ret
cmpsb
add
rolb
xchg
push
add
sbb
add
bound
mov
dec
mov
ja
inc
add
mov
ret
lock
testb
andl
or
sub
cwtl
and
stos
add
add
adc
add
aad
add
add
cmp
sub
mov
mov
add
adc
cmp
mov
ja
fmull
in
mov
pop
or
add
push
aam
mov
gs
lahf
rol
pop
out
mov
add
cmovp
adc
addl
fwait
loopne
xor
mov
testl
hlt
add
add
add
add
out
sbb
ret
pop
jns
arpl
add
lods
cmpsl
and
mov
and
mov
out
std
or
dec
dec
and
mov
mov
xchg
dec
popf
push
add
xchg
add
clc
sbb
mov
sarl
xor
sbb
push
add
mov
or
pop
fsub
js
or
pop
into
jns
adc
fsubrl
lods
xchg
add
add
add
add
enter
add
paddw
sbb
add
fdivrs
sbbl
sbb
lds
mov
xchg
xchg
hlt
add
add
pop
aas
sahf
push
int3
push
addb
addr16
test
loop
nop
add
dec
mov
hlt
add
lods
stos
jp
add
pop
fdivrp
popf
adc
or
mov
mov
add
add
add
xchg
add
mov
add
sub
out
xor
pop
rolb
and
add
rolb
dec
ds
or
pop
jl
add
add
add
rcll
mov
add
scas
sbb
add
ret
stos
mov
es
add
ljmp
pusha
add
add
repz
add
loopne
movsb
add
add
and
mov
mov
cld
int
rorl
pushf
mov
xor
ss
inc
add
in
int
imul
aad
lods
pop
repz
mov
add
add
and
add
mov
add
add
sbb
jle
add
sub
jne
fcomps
fwait
lds
pop
js
rcrl
jl
mov
push
pop
push
roll
push
add
mov
and
mov
add
add
std
fdivrs
lahf
mov
mov
add
arpl
aam
jae
fcoml
xchg
pop
std
mov
sarl
jle
sub
fistl
add
add
pop
add
scas
adc
hlt
add
jmp
add
mov
add
add
cmc
adc
add
in
push
out
mov
adc
jns
hlt
add
mov
cmpsb
add
scas
inc
addr16
jp
adc
jbe
xchg
mov
mov
subl
inc
add
add
add
lret
in
aaa
sbb
js
add
mov
pop
cwtl
je
cltd
adc
add
movsb
add
add
mov
or
add
addb
xchg
jg
add
data16
leave
sbb
pop
test
xchg
rolb
cmpsb
add
add
add
sub
add
fidivrl
jb
push
add
loopne
or
add
mov
pushf
movsb
add
add
imul
jmp
add
mov
repz
movb
outsb
push
add
popf
lock
xor
xchg
add
dec
lock
mov
adc
push
mov
and
sbbl
add
fidivl
add
je
or
push
mov
mov
loope
jno
icebp
dec
mov
sbb
jae
add
inc
add
mov
xchg
xor
xchg
ficompl
sub
add
int3
test
mov
in
xchg
cmp
add
sbb
ret
adc
mov
mov
sbb
add
imul
and
mov
lods
inc
add
sub
fildl
jno
add
add
lock
add
jne
adc
insl
negl
addb
gs
add
fdivl
add
add
xchg
add
fxam
inc
add
rolb
das
cli
flds
mov
movsb
add
fwait
nop
add
imul
ret
pop
mov
stos
xor
xor
cmp
rorl
call
push
test
mov
cmp
ss
push
add
fdivl
add
cld
sub
add
add
mov
or
mov
add
push
add
movb
add
adc
mov
sub
lds
or
adc
jne
add
cs
fisttps
xchg
add
dec
test
mov
mov
pusha
add
xchg
xchg
mov
mov
add
je
ja
add
or
add
mov
add
mov
add
add
pop
jmp
imul
sbb
iret
sub
add
sbb
daa
xor
jge
add
inc
cmp
lods
lret
mov
push
into
stos
xchg
add
mov
repz
add
push
add
jge
leave
mov
add
cmp
pop
cli
add
movsl
and
and
and
mov
add
outsb
jno
push
and
mov
out
in
fucomp
push
add
fwait
xor
pushf
popf
les
sbb
mov
in
imul
add
xchg
jecxz
inc
add
add
add
in
dec
roll
add
lahf
sub
into
dec
loop
ds
faddl
cmp
cwtl
push
loopne
xchg
push
mov
push
addb
adc
pusha
add
add
popf
jae
add
rolb
lret
and
mov
add
leave
xchg
add
sbb
add
add
inc
add
add
call
movb
icebp
in
icebp
cmp
add
add
push
imul
fsubrl
add
cli
aaa
cmp
push
add
cmpsl
arpl
jno
xchg
add
mov
mov
fnstcw
add
xchg
jnp
ficompl
add
cld
and
mov
add
or
push
inc
add
and
sahf
xchg
add
push
add
sub
lods
scas
xchg
add
add
xchg
add
aad
ss
dec
mov
xchg
add
addr16
fsubs
jle
add
push
add
mov
mov
cltd
fcmove
movb
je
add
negl
mov
add
test
add
add
add
mov
sub
mov
add
mov
add
adc
push
inc
add
add
ljmp
xchg
xor
fistpl
add
dec
push
loop
lahf
std
dec
cwtl
jbe
std
and
mov
and
add
add
add
xchg
les
mov
movb
push
add
test
in
jmp
add
inc
or
rolb
movb
mov
jbe
sbb
add
mov
jmp
sbb
lods
sti
je
ljmp
add
add
add
addr16
jge
add
mov
fucomi
popf
movsl
xchg
jge
into
stc
or
test
fldl
repnz
jl
inc
add
dec
iret
iret
subl
add
add
mov
lahf
lods
fwait
rolb
add
sar
mov
in
lahf
and
mov
stc
sbb
mov
fimull
pop
cmp
add
add
flds
fcmove
inc
add
push
push
add
dec
add
data16
lods
and
xor
repz
fisttpll
lods
repnz
add
adc
mov
push
add
add
mov
divl
sub
fs
popa
lcall
add
mov
push
mov
gs
je
mov
mov
mul
add
add
cmp
add
xlat
or
mov
mov
stos
mov
add
xor
mov
jmp
add
in
or
sub
mov
cwtl
jle
add
sub
cmp
mov
push
add
mov
add
add
add
adc
and
fisttps
cltd
lcall
push
add
sahf
inc
add
xchg
inc
imul
add
add
mov
loopne
add
add
mov
push
and
test
push
add
daa
ret
and
sbb
add
and
dec
in
xor
or
add
add
add
add
push
pop
push
dec
push
nop
add
sbb
add
scas
repnz
ljmp
add
and
mov
add
add
inc
add
jae
popa
lahf
adc
pop
pop
sbb
add
sub
das
stos
int
lahf
jae
call
das
hlt
add
addb
clc
bound
mov
dec
jecxz
push
pop
cmp
cmp
push
lcall
jmp
mov
jmp
add
add
sbb
ds
or
add
add
add
xchg
jp
fwait
inc
push
fimuls
iret
sub
push
add
add
lds
add
push
add
add
dec
scas
mov
mov
out
add
pop
daa
addb
out
imul
mov
add
add
add
ljmp
sbb
nop
add
lcall
add
cmp
hlt
add
fildl
add
add
testl
scas
rolb
test
movsb
add
add
add
jb
dec
int
add
mov
mov
rorl
testb
push
fwait
das
mov
add
testb
fcmovnbe
add
notl
lods
jmp
pop
jbe
inc
add
mov
pop
sub
add
pop
pop
cld
sub
repnz
mov
and
mov
cmp
mov
add
xor
add
xor
test
movsl
icebp
and
les
mov
aaa
cmc
xor
mov
cmp
in
cltd
mov
pop
cwtl
aaa
mov
aaa
rolb
out
cmp
push
add
xchg
add
add
aam
addb
mov
mov
int3
out
cs
add
add
outsb
adc
aas
dec
pop
movl
add
add
ds
add
push
add
or
outsb
aad
adc
add
pop
rolb
fmuls
jmp
popa
mov
push
xchg
add
mov
inc
add
xchg
add
jecxz
add
add
ret
movb
mov
popa
out
cld
and
mov
outsb
std
mov
add
mov
inc
cmpsl
sbb
fdivl
and
into
shr
mov
rorl
add
mov
dec
ja
adc
push
incl
in
adc
ret
in
jmp
arpl
clc
test
pop
jnp
add
add
sub
mov
dec
stc
inc
cli
add
fwait
pop
dec
mov
arpl
jge
sbb
lret
add
les
fimull
push
rolb
data16
sub
in
mov
xor
mov
jae
lods
or
pop
repz
add
xor
call
mov
jb
mov
rolb
sbb
mov
add
add
arpl
insl
movb
addb
jae
cwtl
shll
xchg
shll
add
push
add
add
aam
imul
xchg
inc
push
add
out
mov
add
outsb
loop
je
push
add
mov
aad
daa
cmovl
mov
add
pop
mov
jae
mov
add
add
inc
add
dec
ja
jmp
add
cmc
mov
pusha
add
mov
sbb
dec
xchg
pop
bound
mov
mov
ficoms
add
mov
add
add
ficoms
add
add
insb
test
add
add
icebp
js
push
sbb
mov
jp
inc
add
mov
popa
pop
mov
inc
add
push
add
add
jbe
mov
test
cmp
add
add
add
cmp
xchg
rolb
xchg
add
ljmp
cmp
mov
cmpsb
add
shr
loope
arpl
addb
sub
pop
imul
popf
leave
aaa
dec
ja
jg
add
add
add
add
mov
mov
pop
adc
push
jg
fimull
adc
add
sbb
add
daa
mov
push
insb
dec
in
pop
lret
std
push
clc
or
pusha
add
add
arpl
es
or
mov
jp
stos
sar
loop
jmp
xor
int3
xchg
outsl
xchg
add
add
add
sub
inc
adc
ljmp
adc
rcrl
mov
sub
testb
add
and
ja
cmp
or
dec
xchg
pop
into
mov
push
inc
sar
xchg
add
add
orl
sub
xchg
shrl
mov
addl
test
mov
in
fistpll
or
jl
cmp
out
lods
mov
cmp
add
rcrl
add
add
movsb
add
mov
add
cwtl
jecxz
cltd
jp
loopne
lret
inc
sbb
lret
or
pop
add
mov
mov
sbb
imul
add
add
sbb
data16
add
movb
loopne
sub
lea
and
les
push
add
mov
rolb
nop
add
mov
cltd
mov
add
xchg
add
or
add
int
int
add
xor
add
jo
leave
iret
leave
dec
fcoml
jb
push
daa
or
outsl
mov
ds
call
stos
data16
hlt
add
lods
mov
add
add
sti
fnstcw
rolb
out
push
pusha
add
sub
in
add
test
pusha
add
adc
xchg
xor
xor
test
add
pop
outsb
add
mov
add
das
arpl
inc
test
xchg
dec
add
sbb
insl
sub
cmpsb
add
sahf
mov
push
jecxz
add
mov
add
cmp
jp
out
add
mov
add
add
add
test
mov
add
inc
dec
pop
out
call
subl
out
sbb
popf
sahf
fcmovnu
aaa
cmpsb
add
pop
add
outsl
fcmovbe
sub
aam
ds
jl
add
pop
inc
add
mov
lock
mov
add
push
sti
push
inc
xlat
inc
out
and
das
pop
scas
outsl
dec
jge
add
stc
add
mov
pushf
xchg
aas
ss
add
pop
dec
rolb
adc
push
add
inc
add
pop
cmpsb
add
call
add
mov
mov
add
mov
rolb
and
mov
add
add
cmpsl
icebp
mov
jae
add
add
popf
rcrl
push
bswap
mov
add
loopne
out
addr16
fimuls
add
mov
push
lret
inc
push
add
lcall
loope
add
movsl
test
adc
lret
add
add
xor
jmp
lods
pop
aas
mov
adc
fdivl
or
pusha
add
sti
add
add
push
add
cmc
inc
add
push
add
mov
add
sub
fildl
dec
ss
loop
imul
dec
dec
xchg
fisubrl
add
mov
add
dec
testb
xor
xchg
add
sbb
xlat
xchg
jno
xchg
add
add
mov
jno
push
add
icebp
mov
dec
hlt
add
push
add
pop
mov
dec
mov
push
add
sbb
add
push
clc
and
addb
mov
mov
rolb
mov
add
add
bound
mov
sbb
movsl
fistpl
add
fistpll
push
add
add
add
push
add
add
scas
mov
push
add
je
mov
out
adc
add
add
lret
mov
shl
adc
add
add
cmp
repnz
outsb
jg
or
mov
out
scas
cmp
movl
push
or
mov
lret
sbb
add
add
add
jo
loop
imul
add
cmp
loope
pop
adc
ret
mov
sarl
add
add
dec
fwait
out
add
push
mov
jecxz
pop
lret
jge
sti
sub
cld
mov
ret
adc
mov
rolb
test
jge
jge
mov
add
mov
mov
dec
arpl
int
nop
add
pop
cmp
sub
pop
inc
add
ret
cmp
sti
cmpsb
add
add
daa
repnz
mov
mov
add
pop
jne
sub
mov
cmc
mov
cwtl
outsl
in
mov
xlat
xchg
fisttps
loop
cld
and
add
daa
add
push
add
add
movsb
add
les
mov
cwtl
ret
int
add
or
scas
pop
insl
pusha
add
call
mov
add
loopne
decl
movb
dec
lret
add
fwait
jno
pop
dec
pusha
add
fmull
dec
out
cmp
add
xor
push
inc
inc
add
or
test
dec
movsb
add
insb
jmp
dec
in
dec
sbb
gs
or
push
fisttpll
out
aam
negl
cli
jmp
add
mov
mov
add
add
mov
sub
imul
pop
jl
insb
out
jo
dec
rcll
clc
or
add
sub
aaa
out
das
jmp
xor
mov
add
mov
push
push
add
clc
xor
mov
pop
stos
inc
jns
add
pushf
cmp
add
sbb
mov
add
iret
outsl
dec
shl
sbb
pushf
rolb
and
fidivs
cmp
clc
jns
jae
adc
inc
add
movsb
add
push
add
in
stos
repz
shr
imul
add
lret
nop
add
mov
sub
add
add
shrl
or
add
insb
std
and
mov
sub
lods
mov
fistl
fwait
mov
xor
dec
add
mov
fimuls
in
adc
test
out
insl
mov
fsubrl
pop
mov
add
arpl
add
inc
add
add
leave
xchg
fnstcw
cmp
frstor
lea
dec
push
add
mov
rolb
jb
mov
icebp
movsl
pop
jmp
call
mov
cld
in
jmp
in
fdivrs
std
stos
dec
outsl
inc
add
ja
add
cld
sub
lret
lahf
and
xchg
mov
jmp
dec
fisubs
push
scas
roll
add
sahf
loopne
add
addr16
daa
add
mov
dec
lret
jmp
popf
pusha
add
ret
jbe
add
cmp
pop
out
jmp
aas
ret
or
add
xchg
incl
sub
add
cltd
sub
lahf
outsl
stc
lcall
cmp
inc
add
sbb
andl
xlat
push
je
or
inc
cmpsb
add
add
add
enter
jno
add
adc
rolb
add
cmpsb
add
dec
push
add
or
add
jno
mov
add
dec
bound
mov
test
mov
add
nop
add
add
in
mov
nop
add
add
jne
sbb
insl
adc
add
add
stos
les
rorl
aas
and
insl
pusha
add
or
push
add
shll
sbb
mov
mov
addb
and
mov
jmp
xchg
and
sbb
lret
inc
fimull
pop
cwtl
mov
testb
add
add
iret
push
add
add
les
fnstsw
adc
sub
push
cmc
sub
dec
inc
jns
and
mov
test
add
mov
fmull
in
out
pop
repnz
gs
sbb
add
mov
pop
dec
lret
cmp
inc
jnp
pop
fmul
movsb
add
inc
dec
push
cltd
hlt
add
add
pop
xchg
or
mov
sbb
mov
shll
lods
dec
test
ficompl
add
dec
aas
out
mov
aam
fwait
adc
mov
lds
mov
inc
adc
add
in
sub
in
push
add
aad
mov
inc
into
out
add
pusha
add
mov
mov
sbb
sbb
cli
pushf
or
xor
ret
lock
ret
pop
loop
out
jle
jae
fs
add
add
cmp
jecxz
add
and
sub
cmp
add
and
mov
lcall
dec
pop
mov
test
pop
xor
pop
cmc
rolb
xchg
jo
iret
movb
out
jo
xchg
dec
xchg
dec
cmp
add
pop
jg
push
add
scas
adc
mov
outsb
xchg
add
xchg
jmp
add
adc
jae
cmc
xor
pop
ja
lock
add
data16
pop
mov
sub
lret
and
dec
xor
mov
test
pusha
add
add
scas
pop
pop
mov
mov
push
add
or
ds
cmp
stos
pop
mov
push
fwait
mov
loope
ds
xchg
add
insl
cmp
loope
rolb
cmp
add
jb
add
push
add
xchg
add
push
add
stos
pop
mov
test
icebp
in
mov
insb
outsb
mov
add
pop
mov
int3
cmp
cmp
or
add
add
fcmovnbe
add
and
lea
push
dec
add
mov
test
add
add
mov
cmp
jno
sub
jle
mov
stos
test
arpl
xchg
pop
fwait
mov
add
jl
sbb
mov
jmp
mov
pop
in
pop
cmovnp
adc
mov
add
cmpsb
add
dec
xor
dec
ljmp
cmp
ja
inc
sub
repz
das
add
or
add
gs
lret
or
movsb
add
adc
and
add
call
jns
add
add
lods
into
cs
test
jns
lcall
add
jo
in
mov
mov
sub
leave
dec
rolb
and
std
sbb
sub
push
add
add
sbb
jl
nop
add
enter
lods
aaa
bound
mov
pop
sub
mov
mov
push
push
add
adc
mov
ja
add
cmpsl
pushl
enter
add
ficompl
mov
jb
out
mov
add
sahf
fimuls
xor
out
or
aas
jecxz
xchg
subl
popa
cli
cmp
add
or
pop
hlt
add
mov
add
repz
frstor
mov
add
movsb
add
lods
pop
jge
push
xchg
std
sti
dec
in
dec
outsb
jecxz
push
pop
sbb
mov
dec
iret
mov
xchg
add
add
add
out
mov
and
add
cmp
into
mov
cmp
inc
sub
add
addb
and
mov
mov
add
xchg
adc
adc
mov
add
mov
lret
mov
or
sub
mov
add
mov
mov
fistpll
add
push
dec
mov
lea
add
push
xlat
or
outsl
inc
testb
lret
pop
addb
arpl
add
add
outsl
pop
fwait
loope
out
out
add
mov
add
add
add
test
add
add
add
mov
pop
shll
add
add
add
fidivs
add
das
pop
int3
jnp
mov
lods
int
mov
xor
inc
add
jae
pop
rolb
out
jbe
jecxz
push
add
add
add
fistpll
sbbl
in
dec
add
sub
mov
inc
ret
mov
mov
pop
mov
pushl
jnp
mov
stos
adc
xlat
add
add
lods
mov
dec
scas
rolb
jge
jae
add
pop
push
push
ret
adc
je
nop
add
addb
add
outsl
mov
jno
add
add
sti
fisttpll
aaa
test
call
add
pop
dec
ret
sbb
add
mov
call
push
xchg
add
dec
lds
add
add
mov
push
loop
scas
jb
out
cwtl
imull
adc
cmpsb
add
or
sbb
and
xchg
jmp
rcr
hlt
add
mov
bound
mov
and
mov
addb
adc
xorl
outsb
mov
testb
mul
out
scas
aam
dec
push
add
or
jnp
add
mov
movb
fsubs
inc
add
mov
sbb
add
mov
fwait
jg,pn
or
pop
into
js
lods
out
pop
cld
sub
jb
inc
jbe
ret
add
add
inc
add
inc
add
pop
push
es
cmp
in
push
add
add
pusha
add
add
jne
lahf
scas
pop
cmp
pop
pop
and
mov
add
aas
cmpsb
add
mov
xchg
add
data16
add
add
sbb
in
rolb
cld
outsb
addb
test
aaa
int
stos
test
scas
mov
into
fwait
mov
jge
add
jns
add
stos
xor
bound
mov
add
mov
clc
ret
dec
jg
jnp
add
or
cmc
in
push
add
icebp
mov
sbb
in
stos
push
in
add
sub
mov
das
cmp
daa
fsts
clc
pop
dec
lret
rorl
add
flds
add
icebp
stc
lahf
push
mov
add
mov
push
das
roll
xchg
push
enter
ds
outsl
cwtl
jno
add
lea
mov
jecxz
jl
adcl
rcl
add
imul
rolb
icebp
test
adc
inc
mov
sbb
fildll
push
pop
xchg
add
shll
out
cltd
stos
aaa
pop
mov
pop
outsl
orl
mov
add
scas
icebp
and
mov
sbb
les
fwait
pushf
roll
je
ret
aaa
rolb
negl
mov
add
sub
jmp
mov
xor
add
and
decb
das
fucomi
mov
add
add
sbb
inc
jl
sahf
lahf
mov
insb
lds
ret
ljmp
xchg
js
inc
jg
in
push
adc
pop
add
mov
sub
add
cmp
into
pop
orl
xor
xlat
mov
mov
repz
pop
mov
dec
sbb
cmp
add
add
daa
pushf
xchg
add
cmc
lods
sub
inc
add
int3
push
lcall
push
add
imul
test
rolb
add
dec
sahf
test
add
add
cmp
xor
cs
pop
outsb
sbb
jecxz
and
mov
push
jne
push
js
lcall
jnp
mov
sbb
cmp
add
add
fsub
add
imul
popf
fucomp
out
stos
add
inc
cmp
jmp
push
outsb
stc
jg
fmuls
fidivl
loope
add
sahf
sub
mov
fcoml
inc
add
sub
arpl
lds
das
and
xor
push
add
jp
movb
out
mov
dec
cwtl
jo
mov
cmp
mov
jae
je
pop
add
jnp
test
lahf
leave
push
xor
sbb
mov
lock
pop
ret
add
add
in
and
mov
mov
add
mov
add
add
mov
icebp
aam
addr16
insb
xchg
add
pop
mov
in
bound
mov
es
add
les
testb
add
pop
cmp
adc
or
nop
add
lods
mov
add
push
add
addr16
add
jp
add
pop
and
mov
mov
jl
add
push
add
in
cmp
aad
stos
lds
andl
pop
mov
add
add
cmpsl
fwait
mov
pop
lahf
sbb
add
jl
mov
lret
mov
cmc
jmp
add
pusha
add
add
mov
stos
cmpsb
add
and
mov
lds
xor
add
add
add
add
add
push
pushf
xor
pusha
add
test
inc
jbe
roll
add
in
rolb
xchg
iret
mov
leave
xchg
add
ljmp
inc
or
add
sbb
cli
sub
add
mov
fidivrl
xchg
add
ja
mov
test
fwait
int
aaa
sbb
jge
int3
rolb
push
inc
sbb
inc
jmp
sbb
pusha
add
add
lea
jo
scas
jl
bound
mov
mov
addr16
push
add
push
mov
or
add
pop
out
mov
outsl
and
mov
add
rolb
xor
push
push
aaa
icebp
mov
aam
les
sbb
add
jmp
jae
movsb
add
or
jae
add
into
adc
addb
add
add
loopne
mov
ljmp
add
das
mov
les
xchg
add
add
adc
and
scas
or
into
aam
xchg
aam
lds
lea
xchg
inc
add
sbb
add
daa
outsl
ja
add
stos
fdivrs
mov
add
mov
cmp
add
add
jecxz
fmul
dec
aam
push
add
add
xor
or
pop
and
xchg
jmp
jne
and
testl
fisubs
cmc
xchg
push
add
cs
add
fwait
les
xchg
add
mov
add
add
add
pop
cmp
daa
xor
xchg
gs
push
push
push
or
cmp
add
mov
dec
mov
ja
sahf
hlt
add
mov
sti
repz
mov
adc
scas
sbb
add
movsl
lods
jmp
testl
xor
ficompl
cmovbe
add
mov
add
aas
jecxz
sbb
add
push
mov
data16
dec
sub
cs
outsl
in
out
test
add
mov
add
sbb
add
les
bound
mov
xchg
add
or
add
adc
push
icebp
inc
push
mov
push
ja
dec
lock
enter
mov
add
xadd
push
add
pop
jns
pushf
xor
add
leave
popa
xchg
inc
add
cmp
dec
addb
sub
inc
and
and
pop
lcall
add
add
inc
cmp
xchg
pop
cmp
mov
add
add
add
rorl
or
add
add
repz
lcall
mov
add
add
call
push
mov
addb
add
add
loop
aas
add
add
inc
add
bound
mov
mov
dec
arpl
add
mov
gs
hlt
add
add
imul
jae
add
daa
push
pop
jmp
add
testb
pop
mov
das
pop
mov
add
mov
lcall
cli
xchg
cmp
outsb
pop
js
jg
mov
xor
add
cli
cmp
mov
or
dec
pop
lods
je
add
add
stos
mov
mov
cmpsb
add
add
cltd
xchg
add
movsb
add
add
xchg
dec
popa
push
loopne
loop
cwtl
and
outsl
jae
and
mov
add
stc
sub
cmp
sub
add
add
sbb
mov
pushf
iret
push
mov
pusha
add
sbb
add
arpl
add
ja
out
jge
add
mov
stos
aaa
test
add
mov
fisubrl
jp
pop
adc
hlt
add
cmpsl
popf
cmp
add
pusha
add
movsl
lret
inc
add
add
inc
mov
add
cmpsl
inc
add
cmp
in
xlat
ja
popf
push
xor
rcrl
dec
mov
dec
dec
sbb
outsl
pop
clc
and
mov
add
jb
fstl
add
fstpt
and
sahf
or
pop
icebp
xchg
pusha
add
add
aas
scas
cmp
negl
xchg
pop
scas
cmp
sbb
jmp
xchg
add
add
add
pop
mov
cmp
stos
add
pop
mov
leave
addb
add
decl
sub
add
add
test
add
jg
add
sbb
add
dec
sbb
mov
pusha
add
mov
push
add
insl
in
filds
add
insb
lock
cmp
stos
xor
pop
loop
addl
ret
add
add
addb
lcall
add
sahf
jnp
add
clc
push
push
add
aaa
out
add
ds
add
inc
mov
out
out
xchg
dec
hlt
add
mov
add
add
add
fdivrl
xchg
add
cmp
add
jne
add
pop
pop
imul
ljmp
cmpsb
add
add
adc
inc
xor
adc
add
mov
xor
pusha
add
inc
mov
jge
add
insl
cmp
shll
mov
add
mov
adc
sahf
paddw
ds
pop
sahf
lahf
lcall
inc
add
inc
add
add
mov
add
mov
sti
jo
jmp
dec
mov
enter
xor
add
in
xchg
or
push
or
std
stos
lret
xor
add
shll
and
popf
arpl
and
mov
add
xchg
dec
loope
mov
add
add
fsubrl
fimull
jp
call
mov
jnp
add
add
add
add
aam
or
mov
add
mov
add
imul
mov
add
lods
mov
mov
add
mov
add
popa
add
mov
add
das
push
add
push
xor
add
mov
mov
jg
add
in
cmp
cmp
pusha
add
iret
jp
add
inc
add
addb
add
fdivs
xchg
icebp
popa
add
loopne
rcrl
lods
xor
testb
add
xchg
pop
dec
lds
out
pop
inc
add
sahf
shrl
mov
push
add
movsb
add
add
push
push
add
add
pop
fnstsw
add
decb
mov
fstl
add
mov
add
mov
pop
stos
in
daa
jge
or
and
add
add
cmp
insl
push
add
add
add
add
xchg
dec
xor
into
inc
int3
push
shll
mov
leave
ds
add
arpl
and
jb
mov
cmpsl
jo
adc
int
jle
dec
xor
mov
clc
lret
mov
add
ds
add
ljmp
add
mov
add
popf
es
sbb
add
mov
push
dec
push
jae
add
mov
adc
xor
test
push
add
addb
sbbl
add
push
mov
addr16
stos
std
mov
mov
or
lret
add
add
jge
cmp
push
rolb
in
cltd
jae
add
jne
add
or
insb
rolb
add
add
and
faddl
jge
add
mov
sti
test
mov
add
mov
mov
and
mov
xchg
add
shrl
add
ds
lock
in
jne
hlt
add
fimuls
aam
loopne
sbb
inc
add
rolb
add
add
add
add
out
scas
cli
push
cmp
rolb
push
add
mov
dec
jno
test
arpl
dec
cli
lds
int
cld
add
mov
gs
add
mov
outsl
xchg
dec
stc
xchg
add
pop
or
jb
push
add
ja
add
add
add
lock
ljmp
fbld
mov
and
das
imul
add
add
add
stos
add
jno
add
add
inc
bound
mov
add
icebp
movsl
pop
push
out
jo
lret
pop
mov
mov
push
addb
iret
stos
hlt
add
push
cs
adc
testb
add
push
test
push
pop
shrl
lock
inc
adc
cmp
jmp
mov
xchg
add
add
add
lahf
inc
add
pop
dec
and
push
add
outsb
std
xchg
push
sbb
add
add
sub
add
dec
insb
outsb
pop
jno
stos
inc
add
cmpsb
add
test
cmc
leave
push
add
add
add
add
adc
add
or
sarl
and
dec
popf
lahf
into
rorl
movb
add
add
add
dec
testb
jbe
cli
addb
add
xchg
aam
fbld
or
add
push
popa
mov
inc
mov
scas
sbb
push
ret
jnp
add
inc
add
and
mov
mov
xor
jecxz
add
int3
fstpl
inc
add
add
hlt
add
daa
gs
xchg
inc
fwait
cmp
mov
lds
jb
dec
dec
andl
xchg
push
cmp
bound
mov
enter
arpl
push
sbb
cmp
add
mov
adcl
adc
add
push
add
lret
or
add
adc
xlat
enter
mov
inc
add
popa
rcr
push
mov
pop
icebp
hlt
add
cli
mov
andl
pop
andl
xchg
imul
stos
inc
add
add
mov
or
insb
testb
sar
iret
inc
add
mov
mov
add
push
add
daa
xor
add
jnp
dec
mov
scas
mov
fwait
jb
jecxz
add
pop
sub
in
or
add
stos
xchg
add
add
add
in
mov
data16
sub
add
or
jae
add
add
pop
pop
ret
addb
add
lret
dec
jne
cltd
mov
adc
dec
mov
lea
dec
rolb
add
jb
fstl
icebp
and
stc
adc
add
stos
pop
rcr
adc
xchg
add
mov
aam
push
add
xchg
add
jl
add
add
js
aaa
pop
cmpsl
cmpsb
add
in
call
inc
add
test
ret
sbb
add
add
mov
and
add
mov
movsl
cmp
bswap
sbb
add
add
and
add
call
test
popf
jb
jo
cmp
fistpll
jp
add
mov
xchg
add
test
inc
add
add
mov
cltd
aaa
mov
mov
inc
add
out
mov
inc
pushf
int
aas
mov
add
mov
add
cmp
xorl
inc
add
add
sahf
scas
xchg
cmc
ss
and
mov
adc
add
in
xchg
push
mov
xchg
add
mov
jno
add
rolb
push
add
add
aad
out
and
mov
xor
mov
push
add
sbb
pop
dec
or
jne
sub
dec
in
loop
movb
pusha
add
add
imull
mov
add
add
sti
jmp
movb
das
ds
add
sbbl
int3
inc
add
add
outsb
cwtl
pop
xchg
add
add
cmp
fisttpll
hlt
add
add
xchg
aas
lcall
repz
bound
mov
add
add
lcall
xchg
dec
out
repz
out
divl
imul
mov
add
data16
add
add
into
les
aaa
fisubl
into
dec
push
add
out
mov
gs
dec
jno
repnz
add
pop
cmc
jl
ja
adc
dec
jp
add
adcl
add
add
add
cmpsb
add
fwait
sub
mov
imul
lret
mov
or
mov
mov
inc
push
xchg
call
mull
add
mov
add
add
add
int3
test
cli
cwtl
push
enter
push
jl
cmp
add
rolb
jge
mov
add
ds
cmp
add
push
add
add
jne
enter
dec
iret
testb
add
das
cmp
sub
add
add
dec
stos
adc
adc
add
lea
out
pop
mov
dec
mov
add
adc
call
sbb
jb
and
mov
xor
adc
xor
jne
shll
add
xor
fdivs
in
xchg
add
bound
mov
bound
mov
ret
inc
add
add
xor
sahf
pop
cmp
add
add
mov
sahf
add
mov
mov
add
clc
add
ret
cmpsl
stc
lds
add
addb
mov
loope
inc
data16
pop
jle,pn
xor
xor
and
cmpsl
adc
push
add
in
cs
add
add
sbb
aas
movsl
test
xchg
in
pop
add
mov
add
inc
add
leave
pop
jae
adc
leave
push
add
add
lds
inc
add
sbb
insb
jo
mov
aaa
mov
std
pusha
add
fldenv
mov
mov
xchg
add
add
fdivr
shll
push
add
xchg
jae
mov
mov
data16
aam
pop
cmp
pop
lahf
mov
add
repz
add
add
inc
add
loope
add
push
add
movsl
add
mov
dec
sub
mov
mov
adc
add
mov
sbb
adc
xchg
add
and
xchg
in
adc
pushf
dec
inc
jno
dec
pop
rcrl
push
add
test
add
and
mov
add
aam
jno
cmp
pop
sbb
add
es
add
pop
pop
pop
cmp
add
mov
or
andl
test
add
add
add
insb
icebp
mov
addb
out
xchg
or
in
or
pop
lods
bound
mov
pop
daa
xchg
add
ljmp
pop
rolb
fadds
cltd
push
add
adc
mov
xor
inc
jb
or
cmpsb
add
or
add
xor
add
jp
add
add
add
les
stos
xchg
adc
sbb
mov
ret
outsl
or
add
mov
push
add
add
add
lret
jmp
add
add
mov
add
add
bound
mov
add
add
mov
add
mov
mov
sub
mov
inc
add
arpl
and
push
add
add
addb
add
add
dec
and
mov
add
outsb
mov
xor
incb
push
add
add
add
or
add
lret
stos
out
pop
pop
adc
add
inc
add
add
add
add
xor
add
inc
push
cs
mov
test
add
xor
stos
pop
nop
add
mov
add
fsubs
mov
rolb
jbe
sbb
pop
push
inc
add
add
cmp
inc
les
sub
xchg
mov
ja
add
mov
lods
cmp
sbb
push
add
mov
jno
aas
jo
lahf
loop
jmp
mov
mov
cmpsb
add
loop
or
mov
lcall
mov
push
mov
int3
mov
mov
sbb
add
add
push
movsb
add
cmpsb
add
add
mov
inc
xchg
mov
push
pushf
sarl
pop
dec
mov
add
adc
xchg
add
adc
add
add
lret
jp
mov
xor
adcl
shl
mov
jno
pop
jns
add
add
fistps
add
add
add
jae
or
add
add
add
movsb
add
sbb
imul
dec
add
mov
pop
push
add
pop
ret
add
lds
jl
add
or
add
jecxz
mov
add
clc
pop
inc
add
icebp
test
cmp
add
mov
pusha
add
xchg
add
push
mov
shrl
inc
mov
into
mov
pushf
ja
stc
mov
ds
jo
sbb
jbe
jge
push
dec
cmpsl
mov
add
mov
rolb
and
lret
and
sti
outsb
dec
and
movb
das
fdivs
out
adc
or
push
jno
mov
call
dec
sbb
cmpsl
jge
jecxz
add
add
add
push
add
pop
stc
jge
les
outsb
fimuls
rolb
movsb
add
das
outsl
mov
push
in
shrl
cmpsb
add
push
mov
popf
inc
add
pop
push
add
jmp
mov
ja
add
cmp
jge
add
xchg
add
push
mov
cltd
pop
nop
add
cmp
mov
add
jg
lea
roll
xchg
xchg
add
add
mov
add
fwait
dec
fcoml
jno
pusha
add
add
mov
add
add
inc
jl
jnp
add
mov
add
mov
add
fstpt
adc
adc
add
ja
cld
mov
add
adc
in
push
add
pop
ja
add
mov
add
add
fists
push
add
add
sti
mov
pop
fdivrl
repz
pusha
add
add
adc
movsl
jae
inc
xchg
lret
inc
add
sbb
test
add
add
lret
sbb
add
hlt
add
jne
push
add
mov
adc
and
fstp
mov
addb
adc
cld
ljmp
rolb
and
mov
sbb
stos
fisttpl
rolb
mov
mov
and
mov
cmp
xchg
rcrl
and
jb
pusha
add
pop
sub
fstpt
rolb
adc
sti
add
add
add
std
push
or
and
negl
mov
xchg
adc
dec
xor
int
lods
cmp
rcl
call
inc
add
mov
add
add
ja
dec
jo
testb
mov
dec
ud2
shll
lret
bound
mov
add
popf
pop
jge
xchg
xor
sbb
or
and
mov
dec
dec
lods
jp
add
sub
sbbl
push
lods
inc
add
and
adc
ljmp
insl
testl
imul
cmpl
aas
enter
and
mov
push
add
mov
data16
rolb
lds
call
aaa
cmp
push
jns
imul
movb
fldl
push
sub
add
mov
add
add
add
mov
add
add
or
add
add
add
add
or
add
add
sbb
cwtl
fisttps
add
les
mov
add
sbb
mov
enter
repz
sub
add
ret
lret
movsl
int
enter
mov
inc
in
push
xchg
loope
out
imul
jnp
testb
add
lods
roll
imul
stos
and
mov
add
dec
repz
repnz
lret
add
mov
xchg
ret
add
rcll
sbb
sub
popf
sti
add
add
outsl
jns,pn
mov
popf
cmp
adc
pusha
add
fiadds
lret
imul
add
add
adc
push
add
arpl
out
addl
add
add
push
pusha
add
fidivrl
add
movsb
add
sahf
addb
bound
mov
add
je
pop
int
rorl
sbb
dec
fucomi
sarl
dec
jge
add
test
out
std
push
add
xor
out
fwait
fwait
mov
xchg
add
mov
stc
xor
xchg
pop
xchg
mov
add
pushf
xor
aas
sub
inc
add
dec
sbb
lret
cmp
cs
xchg
movl
imul
mov
xchg
arpl
add
mov
out
sub
add
les
clc
rolb
xchg
pop
lods
add
test
fchs
add
lret
in
add
inc
add
shrl
cwtl
inc
jmp
insb
das
fstpt
mov
mov
mov
mov
es
push
add
adc
fimull
fcmovnb
add
lret
and
mov
in
fldcw
jno
add
add
sbb
add
xor
in
or
and
cmp
pop
lock
add
add
add
xchg
add
add
les
cmpsl
fcmovne
jmp
inc
add
xor
cmp
mov
inc
lock
add
and
mov
adc
enter
mov
add
mov
shll
cmp
cmp
dec
jne
lock
mov
push
mov
push
inc
test
mov
cltd
lock
and
add
mov
sub
mov
mov
ja
jo
insl
rcrl
add
mov
mov
popf
jecxz
js
mov
bound
mov
pop
gs
inc
mov
push
add
sub
pop
mov
jl
clc
xchg
rolb
inc
pop
lods
addb
sub
fwait
inc
fwait
mov
xchg
add
cmp
add
addb
pop
lods
dec
and
or
add
mov
add
pop
inc
add
add
dec
lcall
daa
mov
and
xchg
add
jnp
mov
movsl
mov
rolb
aaa
insb
sub
push
add
mov
add
inc
cli
push
mov
cmp
add
add
fsubp
add
mov
dec
xor
add
jno
inc
add
xchg
add
inc
add
loopne
add
test
imul
ret
inc
add
pop
icebp
mov
nop
add
mov
push
add
xchg
add
dec
add
mov
add
loope
cltd
sbb
mov
idiv
loop
sbb
mov
add
hlt
add
movsl
stos
and
sbb
fcmovnb
sahf
lods
jnp
test
add
cli
stc
jg
add
scas
xchg
mov
movb
push
or
mov
add
add
sub
insb
clc
in
loop
push
add
add
int
add
add
mov
cwtl
mov
add
mov
add
add
out
gs
add
xlat
mov
cltd
imul
jge
mov
scas
call
mov
and
js
xor
dec
in
and
push
jmp
add
subl
add
add
add
stos
js
arpl
pop
test
xor
adc
imul
jnp
cs
add
dec
hlt
add
loope
stc
repnz
mov
movsl
mov
add
mov
ficomps
xor
stos
push
lahf
sbb
ljmp
cmc
dec
ja
addb
sub
fstps
hlt
add
fldt
add
xchg
mov
pop
inc
sbb
xor
and
add
fs
add
jmp
add
jp
jecxz
movb
stc
sbb
into
inc
add
arpl
cli
sar
repz
inc
push
add
jne
clc
scas
divl
loop
rolb
repnz
repz
ja
fistpll
movsb
add
cmpsb
add
add
jne
das
xor
or
adc
add
xor
rolb
stos
pop
inc
add
add
or
add
add
push
outsl
pop
clc
ljmp
addb
imul
cmpsl
lods
call
out
shl
add
add
loopne
jmp
inc
add
add
popa
jb
sbb
add
jl
mov
stos
aas
aad
jg
adc
loop
mull
add
add
push
add
arpl
enter
js
and
pop
push
add
lods
push
movb
into
in
mov
sti
dec
xor
add
sahf
or
rolb
push
push
add
cmp
mov
push
xor
mov
jo
fists
add
jecxz
roll
mov
dec
xor
mov
std
add
es
add
add
mov
push
add
outsl
aaa
xlat
dec
and
test
add
adc
push
add
add
scas
mov
mov
add
adc
push
add
or
loop
adc
sbb
jge
jae
push
add
mov
adc
sbb
ja
mov
mov
dec
mov
add
add
out
add
mov
add
add
mov
repnz
dec
push
add
add
popa
lret
add
mov
fists
iret
lock
mov
out
lods
pusha
add
in
hlt
add
adc
add
out
fmul
xor
mov
testb
call
add
enter
push
add
insb
jge
xchg
add
push
cmpsb
add
movb
jecxz
add
fcoml
je
add
mov
rolb
cld
and
repz
inc
add
popf
jb
aad
adc
out
cltd
inc
xchg
sti
mov
xchg
add
push
sbb
lret
popa
movsl
xchg
xorl
push
add
loop
test
push
push
dec
insl
sbb
sub
sbb
add
add
xchg
add
add
mov
popa
sti
add
cmp
test
std
or
add
dec
testb
negl
cwtl
inc
enter
pop
mov
sbb
loop
sub
cmpsb
add
lea
add
subl
pop
sbb
aas
enter
rolb
repnz
add
push
ss
push
mov
imul
mov
adc
rolb
mov
sarl
enter
add
mov
scas
xchg
scas
add
mov
add
jge
and
pop
roll
mov
data16
add
imul
jge
lock
into
out
jbe
rsm
aad
add
sub
inc
jb
aad
pop
into
pop
push
add
sbb
test
dec
adc
loope
aad
rcrl
dec
scas
mov
mov
in
cmp
adc
xchg
dec
cmp
insl
outsl
pusha
add
jmp
add
insl
fucomi
fildll
mov
mov
add
sti
cmpsl
lds
jle
xchg
mov
in
adc
add
add
movsb
add
push
add
cld
rorl
sbb
dec
or
test
push
bound
mov
add
movsl
push
rolb
mov
mov
push
cmp
mov
cltd
push
incl
testl
push
add
push
ret
add
sub
push
pop
into
movsl
out
call
jnp
add
jmp
pop
dec
cli
add
mov
lahf
inc
pop
lcall
add
lret
adc
add
cltd
or
and
jle
add
add
insl
lock
out
dec
hlt
add
xchg
out
rolb
sahf
cltd
mov
push
mov
push
add
mov
int3
mov
add
add
aas
mov
add
aaa
jne
add
add
add
inc
sbb
add
add
fsubr
push
add
out
sub
ret
push
sub
testb
add
add
std
rolb
sbb
maxps
pop
js
lea
rcll
into
stc
cld
sub
sbb
mov
fstl
iret
rcll
add
scas
and
pop
ficompl
cmp
pop
fwait
cmpsl
in
add
clc
mov
cld
pop
sbb
aam
jmp
cltd
jne
push
jge
add
inc
mov
mov
aam
mov
sub
std
sbb
xchg
add
add
insb
les
push
add
xchg
int3
out
int3
sti
mov
xchg
add
and
testb
sbb
add
pop
hlt
add
mov
add
adc
fildll
jno
add
add
test
adc
mov
or
adc
in
jecxz
pop
mov
mov
fucomi
add
jg
pusha
add
sbb
pop
movsb
add
cltd
shrl
nop
add
add
jbe
clc
push
nop
add
mov
add
mov
movb
repnz
fisubs
xor
stc
sub
mov
stc
adc
add
or
add
adc
xor
add
mov
and
jge
add
int
stos
sub
fldenv
pop
rcr
push
add
or
mov
add
dec
enter
je
add
jg
add
daa
and
add
jo
popa
xor
dec
xor
rep
leave
mov
sbb
inc
add
pusha
add
cmc
fisubrs
sbb
add
cs
adc
xchg
pop
lods
jge
add
add
add
add
inc
add
icebp
sub
xchg
pop
add
add
hlt
add
ds
push
add
inc
and
pop
test
lods
in
imul
mov
adc
cltd
repz
jecxz
repnz
inc
add
add
xchg
add
or
inc
add
add
push
add
add
add
sbb
add
int
add
lcall
movsl
mov
sbb
pop
movsl
push
sbb
inc
dec
mov
sbb
mov
loope
jne
test
cmp
jo
ret
add
mov
mov
cmp
add
inc
push
mov
pop
outsb
mov
adc
lock
add
add
mov
sbb
dec
sub
xchg
add
add
in
add
add
mov
test
lcall
push
push
add
add
jle
add
imul
push
add
add
pop
sub
fsts
jl
and
add
lods
cs
jbe
rolb
jecxz
add
add
push
stos
xor
xor
sbb
pop
dec
add
mov
in
outsb
sub
add
add
add
sbb
or
or
xor
outsb
in
mov
and
fnstenv
test
mov
repnz
sub
inc
andl
aad
outsb
lcall
int3
pusha
add
add
in
inc
sbb
xchg
sbb
add
xor
xchg
pop
fisttpl
xchg
mov
push
adc
xlat
xchg
xor
sti
std
mov
xor
repz
pop
addb
and
mov
and
mov
add
mov
jnp
add
cmpsl
push
jecxz
orl
repz
insl
test
add
ljmp
xchg
add
and
mov
adc
add
test
popa
xchg
add
add
xchg
add
dec
pop
bound
mov
add
adc
add
add
add
adc
arpl
popa
addb
xchg
and
mov
xor
xchg
add
repz
add
or
mov
add
or
add
add
add
fcompl
and
movb
add
add
aam
xchg
xor
inc
mov
test
sbb
mov
mov
rolb
or
pause
add
add
pop
inc
add
add
add
jecxz
fwait
subl
add
sbb
inc
sub
mov
lds
add
lea
outsl
fisubrs
mov
add
add
and
stc
aaa
and
mov
sarl
lahf
xchg
fsubr
inc
fildll
add
xchg
add
pop
pop
mov
mov
mov
add
inc
rcl
add
mov
sbb
ljmp
add
mov
push
add
cwtl
mov
add
add
sbb
in
enter
stc
sbb
cmc
test
hlt
add
add
mov
into
push
add
imul
dec
add
add
add
rorl
add
add
jecxz
add
add
inc
in
add
add
popa
fs
add
xchg
add
daa
call
xchg
add
or
add
mov
push
xor
add
lret
test
cwtl
ja
xor
roll
cli
mov
add
add
and
mov
add
addb
or
adc
mov
fstp
add
mov
add
add
jno
das
rolb
mov
add
cmp
lcall
jb
pop
into
lea
add
mov
add
sbb
push
add
pop
and
xlat
out
mov
enter
movl
add
add
add
push
add
mov
lahf
and
repnz
pop
sub
sbb
jmp
jno
add
adc
adc
push
cmpsl
mov
add
je
fwait
lock
clc
rcll
add
icebp
data16
push
add
push
inc
shrl
roll
add
subl
in
scas
bound
mov
add
jno
dec
adc
stc
mov
inc
add
add
or
call
outsl
test
mov
xchg
adc
outsb
int3
mov
add
pop
push
add
loop
mov
test
xor
add
lock
add
cmpsl
push
mov
popa
cwtl
cmp
and
add
int3
aaa
data16
cmp
jge
add
add
cmp
fcoml
push
push
xchg
add
add
add
add
ds
push
add
or
inc
cmp
fidivl
inc
add
sbb
scas
jnp
add
mov
jl
xchg
add
add
pop
mov
add
xchg
add
xor
pop
adc
addr16
enter
test
add
cli
mov
and
add
dec
cmp
xor
jne
addr16
add
add
add
lea
inc
add
imul
add
pop
pusha
add
popf
xor
cmc
aad
mov
test
in
or
mov
mov
call
iret
lods
decb
jbe
pop
xchg
add
xorl
test
lds
pop
js
add
rolb
sbbl
or
sub
sahf
and
add
nop
add
lret
mov
lahf
lods
addb
pop
add
sbb
add
mov
mov
push
add
add
arpl
add
add
rolb
repnz
dec
dec
adc
add
out
jo
loop
cmp
shll
mov
add
adc
pop
out
mov
mov
mov
lea
adc
movsl
les
cmp
or
add
add
add
mov
sub
xor
adc
mov
fcomps
aaa
inc
loope
add
mov
jge
add
xchg
repz
jg
xor
out
js
xchg
add
add
mov
mov
outsl
mov
popa
fincstp
mov
mov
pusha
add
fistl
add
and
mov
mov
test
add
arpl
add
int
add
cmpsb
add
in
data16
add
add
mov
sub
cmp
rolb
ret
xchg
insb
dec
push
add
loope
cs
mov
fdivrs
daa
or
je
xchg
and
out
sbb
add
pop
rolb
add
cmpsl
add
xchg
add
loopne
movl
add
mov
jge
dec
adc
add
xor
imul
cli
lds
stos
inc
add
adc
arpl
mov
xor
add
add
add
in
aad
sbb
add
ljmp
mov
movb
stos
pushl
std
and
cmp
inc
les
icebp
in
jno
insl
dec
popa
in
add
or
add
add
cmp
adc
xchg
push
xchg
add
add
inc
add
add
add
add
add
mov
push
add
sub
add
mov
mov
add
cmp
xchg
add
add
add
or
sbb
add
loop
adc
inc
add
cmc
xor
add
loopne
rcrl
cmp
add
add
xor
or
and
ret
pmuludq
sbb
testb
aaa
dec
call
push
xlat
mov
push
sub
add
mov
jg
pop
nop
add
cli
cmc
leave
cltd
push
faddl
add
jg
add
add
add
mov
push
repnz
sub
inc
scas
or
sarl
and
rep
lret
jp
fwait
jno
pop
adc
add
mov
xlat
addb
add
xchg
lea
enter
add
add
add
add
add
sbb
jae
call
xchg
pop
xchg
fstpl
jnp
insb
data16
add
jnp
jb
xor
inc
add
push
icebp
and
mov
pop
inc
movsb
add
pusha
add
loopne
inc
add
outsl
pop
push
cmpl
insb
cmp
sub
test
imul
call
ljmp
or
push
add
cmp
mov
jno
jns
add
mov
jp
pop
movsb
add
out
mov
lea
add
mov
sti
or
or
or
pop
inc
add
xor
mov
xchg
add
xlat
addb
xchg
pop
or
fidivl
dec
ds
add
or
cld
and
add
dec
scas
push
add
inc
add
pop
and
mov
sbb
add
add
pop
ds
mov
insb
jae
lock
shl
add
lods
mov
push
add
add
add
xor
xchg
xor
rorl
mov
mov
add
mov
add
xchg
nop
add
inc
les
cmp
fwait
lds
rolb
jp
add
repnz
lret
cmp
xor
outsb
pop
jp
and
add
lret
loope
push
add
add
mov
mov
aam
push
out
rolb
popf
movb
xchg
sti
xor
sti
out
rolb
pop
into
nop
add
add
add
mov
out
dec
push
add
add
cmp
or
sub
add
pop
movsl
jae
add
call
push
mov
ret
mov
xchg
sub
gs
dec
ja
addb
or
sahf
pop
in
mov
imul
pop
push
cmp
pop
mov
or
push
add
add
mov
fdivl
push
ljmp
or
pop
repz
push
and
and
jg
add
adc
js
add
pop
ficompl
out
adc
out
add
add
into
repnz
lret
ljmp
add
add
add
repz
pop
in
add
add
and
js
mov
inc
add
push
cmp
mov
adc
jmp
pop
mov
mov
add
ret
movb
add
or
add
ljmp
sbb
add
add
les
or
add
in
aas
ds
cmp
lock
push
arpl
and
daa
sti
pop
mov
jle
lret
dec
push
push
add
add
add
jb
fistps
hlt
add
testb
add
imul
xchg
mov
add
add
pop
fidivrl
lret
add
jge
add
add
pop
aad
jno
add
insl
ja
ja
or
add
push
add
add
lcall
int
add
jae
adc
data16
push
mov
add
notl
pop
sub
int
dec
into
cli
and
mov
add
outsl
icebp
insb
fwait
rolb
loope
and
mov
push
int
push
add
mov
and
mov
addb
insl
jnp
pop
cmc
cld
out
sub
repnz
push
add
out
and
outsb
dec
pushf
pop
sbb
mov
jne
movsb
add
and
add
add
push
add
jno
push
push
mov
and
mov
add
sub
add
repnz
add
add
sbb
add
inc
add
mov
shll
mov
mov
sub
inc
add
je
mov
addb
push
cmp
addb
jle
outsb
adc
neg
inc
sbb
add
dec
lods
jbe
iret
les
rolb
jmp
mov
add
in
xchg
add
loop
mov
add
vmrun
fdivl
add
or
mov
and
add
xor
add
mov
test
add
aad
icebp
add
xchg
in
orl
ja
add
add
popa
js
mov
add
add
push
add
aam
mov
insb
push
insb
jb
sub
in
mov
imul
dec
adc
int
mov
dec
ret
xchg
leave
loop
ja
add
fcmovnbe
add
xchg
int3
lret
sub
call
push
mov
add
add
pop
or
adc
iret
mov
mov
fcoml
add
add
ret
popa
loop
push
sbb
das
or
sbb
sub
lret
rolb
data16
or
add
inc
mov
add
add
jb
or
ja
add
shr
std
xchg
add
add
ljmp
mov
add
lods
xlat
or
js
and
lahf
addr16
add
xor
stos
jl
pop
fnstenv
adc
add
add
push
dec
fistpll
daa
push
lds
aaa
test
add
add
add
pop
imul
ret
rolb
out
scas
stos
adc
pop
push
add
cmpl
into
bound
mov
fwait
outsb
in
jge
int3
data16
mov
jae
add
arpl
push
movsb
add
inc
add
push
out
pushf
in
adc
add
sub
add
push
add
pop
aaa
mov
into
pushf
sarl
push
add
jg
repz
mov
pop
popa
adc
gs
cs
add
out
cmp
cmpsb
add
mov
add
sti
dec
push
sti
fcomps
inc
mov
mov
xchg
add
inc
nop
add
add
test
loope
mov
movsb
add
sub
shr
dec
add
adc
ja
add
ficomps
imul
fwait
jne
add
push
add
add
cld
lods
mov
inc
add
push
mov
ljmp
ficoms
jp
iret
sub
int3
add
sbb
out
add
fadds
push
add
lahf
mov
std
jmp
ss
or
mov
pop
jmp
inc
ljmp
add
add
push
mov
std
fcmovnbe
mov
mov
sub
add
dec
mov
testb
add
ja
adc
insb
pop
adc
shl
dec
stc
and
movb
or
push
popf
cli
adc
sbb
add
arpl
rolb
cwtl
pop
addb
add
ljmp
movsb
add
xchg
addb
adc
sahf
xlat
scas
cmp
push
add
add
pop
pop
cmpsb
add
dec
lahf
sbb
pop
pushf
cs
ret
imul
add
adc
push
add
sahf
popa
out
mov
mov
fcomps
rolb
mov
dec
out
adc
lods
or
movsb
add
mov
xor
xchg
addr16
xchg
clc
adc
mov
jp
test
add
add
mov
inc
add
incb
gs
sahf
sahf
test
inc
add
hlt
add
fcompl
fidivrs
lret
jmp
add
movb
pushf
outsl
insl
outsb
je
mov
jnp
int
stc
cmp
add
adc
sub
add
fbstp
mov
daa
dec
jge
add
and
lcall
add
mov
cmp
add
cmpsb
add
add
mov
push
add
and
xor
jne
loopne
movsb
add
push
add
or
std
cmp
add
mov
popa
sub
fidivl
out
xchg
adc
imul
and
cmp
add
sbb
addr16
or
mov
cmp
mov
add
adc
cld
cmp
add
stos
cltd
mov
test
add
pop
repnz
add
mov
mov
mov
add
push
add
fucomp
and
mov
imul
push
or
add
add
pop
mov
mov
xor
out
enter
add
int
testb
cmp
popa
sti
mov
add
mov
add
cmc
and
imul
jle
add
and
fnsave
stos
bound
mov
in
jmp
add
out
push
cmc
fistpll
mov
cwtl
enter
loop
mov
add
scas
xchg
repnz
add
out
and
add
imul
js
and
add
lock
ja
and
aam
xor
fucomi
ret
movb
add
push
mov
imull
adc
jmp
and
sbb
inc
add
push
pop
xor
add
add
add
pop
inc
pop
scas
jo
sarl
shrd
daa
clc
lock
pop
aaa
ret
cwtl
fldt
push
sub
add
addb
data16
mov
mov
movb
jge
cmp
xchg
mov
mov
xor
add
add
push
add
flds
pop
pusha
add
add
push
add
pop
mov
les
xchg
or
add
ss
add
jns
inc
outsb
sbb
addb
aam
lret
arpl
pop
jl
fucomp
push
add
cmpsl
xchg
mov
int
mov
or
add
or
add
les
aam
ljmp
mov
add
jb
mov
cmp
add
and
push
add
xor
pop
stos
rolb
gs
add
js
mov
jnp
aad
jge
add
add
add
mov
out
cmp
add
mov
push
push
add
add
cmpl
adc
test
pushf
add
add
xchg
add
bound
mov
adc
pop
stc
push
sub
xor
aam
dec
dec
lcall
mov
add
add
icebp
loopne
daa
sbb
mov
add
les
or
outsl
rolb
add
repz
add
cmp
cmp
ljmp
shll
fisttpl
add
add
outsb
icebp
in
daa
cld
fidivs
dec
add
add
or
inc
add
pop
push
movsb
add
xchg
mov
stc
xor
pop
push
jo
in
mov
cs
add
jge
xchg
fisubl
stos
shrl
mov
sbb
inc
mov
cltd
imull
pushf
out
int
rolb
testb
add
ret
cmc
out
jno
cmpsb
add
add
add
pop
movb
adc
and
mov
add
pop
sbb
or
add
adc
push
add
mov
sahf
pop
sub
movsl
stos
aad
dec
mov
cltd
inc
mov
inc
rolb
mov
pop
das
mov
inc
add
cld
jl
jnp
sub
ljmp
roll
loop
std
dec
es
shl
add
mov
fistps
arpl
add
cmp
mov
cwtl
mov
popa
lcall
sbb
add
add
add
add
cmp
outsb
mov
add
and
mov
add
add
clc
mov
mov
add
push
add
or
inc
push
add
rolb
rolb
mov
inc
xchg
jbe
push
inc
add
adc
push
cmp
mov
sbb
pop
dec
dec
test
jp
popl
mov
in
push
add
or
mov
xchg
mov
daa
inc
add
sbb
fiadds
add
cmpsl
and
mov
int
adc
mov
add
add
mov
add
enter
loope
add
cmp
pop
pop
adc
inc
jo
mov
or
gs
test
add
add
or
push
jns
repnz
add
test
pop
popa
jne
test
add
add
dec
add
mov
addl
out
sahf
xchg
or
add
or
add
add
jle
add
mov
jns
dec
sbb
bound
mov
jle
insb
jbe
jns
mov
add
cmp
add
and
add
adc
rolb
add
mov
jnp
lods
dec
enter
adc
mov
or
bound
mov
addb
adc
add
or
add
out
test
add
mov
repnz
in
lahf
xchg
cmp
dec
cltd
add
lock
ret
outsl
jno
add
pop
test
add
addb
mov
jmp
pop
data16
mov
lahf
movsl
jmp
push
sub
in
add
jg
mov
in
pop
push
test
push
add
mov
insb
xchg
setp
xor
jmp
add
call
sub
fldcw
add
fwait
mov
sbb
add
notl
cltd
or
lods
push
movsl
movb
es
add
mov
jb
mov
cmc
xorl
mov
jnp
add
aas
outsb
jne
lahf
push
addb
add
push
test
scas
stos
lds
pushf
lods
sahf
test
test
add
xor
sub
add
mov
add
dec
sti
sbb
popf
sub
cmp
lods
push
add
add
or
or
add
add
cmpsl
xor
mov
popa
cmpsb
add
inc
xor
push
add
mov
add
add
add
xchg
ja
out
movsl
sub
or
add
out
je
pusha
add
add
aas
pop
sub
add
adc
push
add
add
sub
add
add
mov
pop
xchg
xlat
add
add
sub
cmc
add
mov
out
mov
add
testb
jg
add
or
enter
xchg
xor
out
jns
push
add
mov
pop
xor
and
add
sbb
dec
enter
add
adc
jbe
push
xor
jmp
fcoms
rcrl
out
xchg
add
repz
push
cmp
add
lds
jo
mov
jl
or
mov
add
add
repnz
or
mov
cwtl
addb
pop
mov
pop
cmpsl
adc
add
mov
or
xchg
add
jb
jo
pop
mov
add
cs
je
inc
add
xor
add
sbb
mov
in
and
mov
loop
sbb
call
add
add
cmpsl
xor
addb
add
add
mov
pop
orl
add
add
test
testb
cmp
mov
gs
add
fmull
and
rolb
push
add
pop
in
inc
add
add
xchg
cmc
dec
add
fcomps
add
and
mov
jmp
int3
std
fdivrl
add
pop
lea
inc
add
cmp
nop
add
lcall
sub
add
add
sbb
mov
stos
insl
sub
jl
cmc
scas
and
mov
gs
ljmp
out
repnz
adc
xchg
imul
add
nop
add
inc
add
sti
push
add
and
rolb
cmp
iret
sbb
mov
aaa
into
int3
sub
add
dec
or
outsl
cld
pop
jbe
xor
stc
mov
or
out
or
cmp
sub
dec
cld
pushl
and
mov
add
add
lods
push
add
mov
xor
sbb
add
rolb
repnz
add
add
sub
add
mov
xchg
add
shll
xlat
and
mov
mov
addb
mov
scas
push
inc
mov
mov
outsb
jecxz
or
insb
mov
stc
lcall
add
mov
sbb
fcmovu
scas
stos
inc
add
mov
add
cmpsb
add
cwtl
lock
xchg
add
add
inc
mov
add
fcmovne
cmp
mov
add
sbb
xor
sbb
add
inc
xchg
and
add
add
add
icebp
jmp
test
scas
mov
rolb
add
jmp
fcompl
cmpsb
add
pop
sahf
cli
sti
and
add
add
add
xchg
fsubrp
movsb
add
sbb
and
call
mov
add
lock
inc
add
add
aaa
jmp
cmc
sbb
add
ja
add
add
cli
jl
add
stos
mov
add
add
pushl
add
add
or
lods
dec
bound
mov
mov
lods
mov
ljmp
jne
sub
sub
add
lcall
bound
mov
push
add
je
fisubrl
arpl
pop
data16
and
add
mov
dec
repnz
call
add
xor
mov
pushf
mov
push
add
sub
xchg
add
xor
sbb
cld
sti
hlt
add
add
lret
pop
out
scas
adc
ljmp
mov
ret
add
mov
add
add
add
jae
add
movsb
add
mov
popa
adc
add
popf
clc
dec
push
add
add
je
xor
adc
mov
out
inc
gs
cld
das
pop
cmp
add
jle
xchg
add
daa
cmp
inc
add
xor
pop
in
dec
inc
xchg
add
add
add
add
add
and
test
inc
and
stc
addb
pusha
add
xchg
mov
mov
cmpsb
add
add
mov
icebp
mov
add
or
add
pushf
jns
dec
ror
mov
or
and
mov
jae
xor
frstor
and
sub
xchg
add
sbb
add
mov
movsb
add
testb
inc
add
add
cmp
push
add
xlat
pop
pop
out
enter
fsubrs
testb
insl
pop
lahf
lods
xor
mov
jno
rolb
repz
mov
add
mov
aad
add
rolb
mov
add
add
mov
mov
dec
jge
sub
ja
pop
xchg
add
add
mov
sub
mov
icebp
add
dec
fadd
add
add
int
inc
rolb
push
jl
add
adc
push
push
add
into
loop
pushf
pop
test
cmp
psubusb
add
daa
popa
call
pop
scas
hlt
add
mov
js
add
ret
mov
add
popf
add
pop
xchg
jb
cmp
sub
jno
add
jno
dec
jns
fidivrs
outsl
addr16
pop
lret
mov
push
add
test
jne
das
or
add
add
addb
push
sbb
add
add
sbb
fidivs
add
add
or
rol
pop
mov
sub
pop
data16
mov
add
enter
adc
movb
add
mov
jle
add
aas
cld
inc
testb
imul
pop
mov
pop
and
dec
mov
or
xchg
add
inc
add
pop
testb
movsl
fcmovnbe
lods
rolb
popl
cltd
aaa
addr16
add
sbb
out
dec
imul
inc
add
test
add
icebp
add
mov
lcall
repz
lea
add
jp
cmp
pop
adc
xor
gs
add
mov
xchg
add
add
add
scas
sbb
sbb
dec
iret
mov
xchg
sub
stos
addb
dec
sub
rcrl
mov
mov
xchg
push
stos
iret
in
int3
pop
fnstcw
dec
in
push
add
out
jne
push
add
sub
jnp
push
jns
add
adc
lret
inc
add
push
mov
xor
sbb
aam
mov
icebp
lcall
mov
add
push
sbb
add
aas
icebp
icebp
fs
sub
add
xor
loopne
and
mov
add
push
sub
or
mov
add
sub
loop
add
addb
je
mov
fidivs
mov
jge
addb
add
pushf
movsl
dec
repnz
fsubp
xor
or
popa
pop
daa
movsl
mov
adc
movsb
add
rolb
aas
in
adc
cmp
inc
add
pop
insl
push
add
add
pop
addb
mov
add
add
and
mov
add
mov
nop
add
and
add
sub
add
adc
jb
pusha
add
add
dec
in
push
adc
jg
add
icebp
out
stc
addb
push
add
add
mov
dec
jp
mov
jbe
xchg
add
add
pop
adc
dec
sub
pop
or
aaa
aad
sub
data16
xorl
add
push
and
mov
mov
xor
mov
xchg
and
addb
push
add
add
insl
xchg
jp
add
dec
test
arpl
add
aas
pop
or
cmc
call
push
movsl
fsubrl
fwait
jno
int
xor
in
in
fisttps
mov
mov
add
or
and
add
cwtl
ljmp
lret
add
sbb
in
push
rolb
rcr
or
sbb
add
movsb
add
pop
push
xchg
les
pop
add
add
lock
and
dec
pop
push
add
jmp
cmpsb
add
add
push
jle
add
mov
add
dec
mov
and
mov
xchg
test
adc
adc
jmp
add
clc
fildl
enter
add
or
xchg
and
add
jb
movsl
sti
rolb
sub
mov
outsl
int3
addb
add
add
or
sbbl
int
add
add
scas
dec
sbb
pushl
add
inc
or
add
call
lea
movsb
add
mov
xlat
insb
mov
mov
push
dec
pop
dec
xor
pop
sbb
rolb
and
xor
std
les
mov
add
les
sahf
jae
nop
add
add
aad
lahf
cli
adc
sub
imull
xor
sbb
fcmovu
stos
sbbl
mov
jg
add
push
push
add
add
aam
push
add
add
pop
mov
dec
xchg
rolb
mov
pop
scas
push
nop
add
mov
notl
int3
in
leave
insl
movb
test
add
jne
push
jle
add
out
or
cmc
jge
add
mov
outsl
cmpsb
add
stos
cmovg
stos
xchg
aaa
xor
scas
repnz
add
ljmp
inc
add
add
icebp
mov
adc
fstl
js
push
lock
ja
add
lahf
test
add
xchg
add
add
mov
in
add
add
fisttpl
add
jb
imul
add
add
xchg
pop
popf
js
ret
mov
loop
and
mov
mov
fbld
jnp
arpl
cmpl
call
mov
jno
mov
add
add
loop
push
add
data16
dec
mov
add
xor
leave
add
lods
add
pop
pop
mov
lods
sub
or
out
dec
or
mov
jp
cmp
outsl
jmp
add
add
test
rolb
mov
mov
pop
cmp
add
add
jge
add
mov
addb
test
jecxz
cmp
sbb
mov
add
jne
add
sbb
mov
adc
add
adc
or
fstcw
ja
push
add
adc
add
mov
and
roll
movsl
inc
imul
add
add
mov
add
dec
push
add
lret
add
push
and
mov
ljmp
add
loop
jo
js
add
add
sbb
xchg
xchg
dec
cmp
add
mov
add
lods
xchg
add
sub
mov
add
or
loop
xchg
add
je
int3
les
dec
cmp
aam
movsl
mov
stc
mov
stos
xchg
int
cmpsl
jmp
add
loopne
hlt
add
mov
sbbl
sub
push
mov
mov
and
arpl
sbb
insb
mov
xchg
add
mov
cmp
add
add
mov
ret
inc
insl
cmp
insb
cmp
scas
jae
iret
sbb
shll
add
mov
gs
push
enter
xrelease
cmp
add
sti
cli
pushf
rolb
data16
nop
add
push
mov
mov
add
addr16
mov
sbb
rolb
mov
xchg
add
ret
arpl
add
out
add
stos
js
mov
ds
daa
mov
jae
loop
adc
lahf
adc
add
incb
xchg
inc
xchg
mov
imul
add
mov
sub
push
add
or
add
mov
mov
add
sti
cmp
movsl
test
add
cmp
mov
mov
and
mov
fidivs
add
sub
and
bswap
dec
popf
cmp
outsl
movsl
test
stos
and
mov
sbb
jmp
add
insb
jne
add
add
xchg
stos
jb
lcall
xchg
add
add
fwait
dec
adcl
or
sarl
add
cmp
pop
testb
add
adc
add
sub
jg
sbb
mov
add
pop
mov
jbe
sub
add
and
mov
dec
push
add
mov
cli
in
or
inc
add
stc
dec
enter
popa
hlt
add
nop
add
rolb
stos
mov
pop
jge
add
bound
mov
sbb
add
add
cmp
add
add
push
add
add
mov
add
out
sub
inc
add
add
and
mov
rolb
push
inc
add
mov
mov
gs
stc
or
mov
scas
stc
xchg
push
push
add
mov
add
mov
ret
out
push
es
sbb
xor
push
int3
mov
cld
ret
fnsave
mov
jmp
inc
std
sbb
add
and
mov
jnp
adc
jae
imul
aam
imul
xlat
sbb
xchg
sbb
push
jmp
add
sub
jb
mov
push
inc
add
mov
rolb
in
outsb
inc
xor
add
ret
lret
lock
and
mov
add
xor
adc
loopne
loop
mov
test
in
sbb
jg
jae
add
popf
mov
xor
testb
movsb
add
and
mov
xchg
add
add
adc
or
cmp
and
jae
iret
sahf
scas
and
add
jmp
insb
cmpsl
inc
pusha
add
adc
sub
xchg
add
mov
mov
in
fwait
push
sbb
add
mov
in
mov
test
mov
stos
aad
inc
imul
pop
adc
add
add
jecxz
jmp
outsl
js
push
add
movb
scas
and
stc
fldl
out
add
dec
pusha
add
insb
mov
add
add
das
mov
fld1
cmp
lock
add
js
testl
orl
xchg
xchg
add
add
add
repz
add
sbb
bound
mov
add
add
add
in
xlat
lods
sub
popa
stos
and
jbe
add
add
loope
add
testb
add
add
jecxz
adc
push
dec
insl
push
xchg
pusha
add
add
add
xor
pop
into
pusha
add
lahf
or
leave
jge
aam
jb
outsl
push
mov
sub
add
loopne
cmp
xor
repnz
int
add
mov
sti
out
mov
arpl
add
add
fnstsw
popa
mov
lahf
lods
out
xor
mov
add
dec
mov
cmp
ffree
add
or
mov
in
insb
push
add
xor
ret
mov
ret
lock
aam
and
push
add
aaa
mov
arpl
rolb
push
je
mov
add
pop
mov
in
gs
add
or
test
ret
sti
add
and
inc
sub
test
fldcw
add
mov
and
push
and
mov
adc
jmp
adc
push
add
add
out
stos
aaa
loop
cmp
popa
outsl
adc
add
add
add
cmp
bound
mov
icebp
or
add
mov
add
add
mov
mov
xchg
inc
xor
fimull
cmp
mov
mov
call
adc
jnp
sub
in
bound
mov
add
push
add
xchg
mov
lock
cwtl
jnp
xchg
jg
mov
add
popa
stos
inc
mov
fistpl
test
pop
in
pop
sbb
out
lock
xor
loopne
je
mov
test
gs
adc
add
add
dec
add
xor
jnp
int
cmp
test
lret
addb
and
mov
inc
add
add
xchg
cmp
xor
jmp
add
add
add
add
nop
add
adc
js
jmp
loop
sti
push
add
ds
add
add
addr16
jmp
xor
ficoml
inc
add
into
arpl
arpl
xor
jno
clc
fbstp
pop
and
mov
add
add
inc
insl
add
pusha
add
jg
rolb
dec
and
add
add
test
add
add
inc
scas
inc
inc
popa
mov
movsb
add
add
add
sbb
mov
add
add
mov
pop
insb
sahf
rolb
and
mov
sahf
flds
ja
add
inc
das
xchg
add
mov
xor
das
add
add
xchg
dec
scas
fisubrs
pop
push
addb
pop
and
mov
rolb
inc
add
mov
push
fucom
mov
daa
push
cmp
or
add
out
add
mov
or
pop
sbb
jp
add
jecxz
jl
add
aam
cld
dec
jns
add
dec
add
mov
mov
inc
jecxz
pop
into
loope
mov
push
aaa
add
add
mov
push
push
lds
mov
add
shrd
cmp
stc
enter
or
dec
std
xchg
rolb
jmp
testb
nop
add
add
lods
inc
add
pop
les
sbb
rolb
mov
add
jp
add
add
add
leave
mov
mov
sub
add
jne
add
cmp
push
add
repz
test
add
xchg
push
lret
repnz
add
add
add
jp
xchg
pop
fstpl
and
mov
fisttps
lahf
cmp
loopne
push
or
bound
mov
rcrl
add
popa
push
add
sbb
loop
testb
lret
push
add
mov
add
aas
or
add
push
add
jl
add
push
jne
mov
lcall
lret
add
int3
sbb
sti
fstpt
ljmp
dec
int3
sub
test
add
mov
testb
add
add
mov
aas
cli
cs
and
icebp
loopne
aam
mov
pop
push
push
dec
mov
add
jne
mov
xor
jno
mov
push
je
mov
bound
mov
and
adc
add
rolb
xlat
jge
mov
sub
mov
rolb
sub
jl
bound
mov
cmp
iret
and
mov
add
testb
add
lret
es
add
add
pop
or
pop
lock
insb
mov
out
add
call
push
lods
test
js
mov
fdivr
jbe
scas
out
mov
add
ss
and
add
mov
add
out
add
repnz
sub
add
aas
fs
in
nop
add
dec
dec
gs
add
add
mov
repnz
or
add
nop
add
fsubl
push
add
cs
cmp
jmp
add
dec
int3
adc
ds
xchg
add
out
mov
mov
inc
adc
add
add
xlat
mov
mov
mov
outsb
rol
or
add
add
cmc
in
outsl
repz
sbb
jle
pop
mov
call
sbb
mov
mov
add
fstps
icebp
sahf
rol
rolb
insb
inc
jge
add
dec
cmpsb
add
inc
cmpsb
add
int
call
xchg
lock
wbinvd
or
add
mov
fisubs
movsb
add
add
add
add
add
xchg
fadds
lahf
mov
mov
mov
xchg
aad
add
cmpsb
add
cld
and
add
bound
mov
cmp
idiv
outsl
jbe
push
mov
add
cmpsb
add
mov
les
popa
outsl
out
addl
mov
add
lods
pop
das
mov
jg
mov
add
xor
nop
add
insl
add
jecxz
lock
sbb
add
shrl
add
add
mov
scas
stos
addr16
add
out
rolb
pushf
jg
pop
in
and
mov
xor
jl
add
add
add
cmpsb
add
add
filds
xchg
jne
popf
out
cmp
dec
cmpsb
add
mov
and
mov
mov
xchg
pop
decl
loope
add
sahf
jnp
popl
clc
add
aas
sub
xchg
add
add
sub
inc
clc
adcl
mov
aam
mov
outsb
sbb
add
add
imul
dec
popf
int3
in
lret
push
add
pop
push
add
jbe
sbb
xchg
movb
push
adc
popf
jg
incl
mov
cmpsl
test
jmp
cmpsl
shll
rorl
mov
setl
enter
jo
add
loop
sbb
add
add
fistps
pop
rolb
mov
add
mov
popf
bound
mov
add
add
add
inc
add
bound
mov
add
add
cmp
add
fstl
addb
xchg
add
add
cmpsl
outsb
xor
inc
hlt
add
aas
jns
cmp
lret
xchg
loopne
jle
fisttpll
hlt
add
or
pop
stos
and
mov
jmp
mov
mov
daa
jns
dec
inc
add
add
pop
jno
ja
fsubrs
cmp
pusha
add
inc
xor
cmpsb
add
sub
call
popa
inc
cmc
mov
jne
lcall
sbb
add
loop
mov
loopne
push
add
jle
or
movsb
add
sbb
add
sub
add
add
add
add
add
rolb
dec
add
or
lcall
or
addb
add
test
addb
add
fdivrs
xchg
lock
add
mov
das
mov
push
and
mov
push
test
push
push
add
stc
sub
sub
add
sbb
add
add
inc
add
cmpsl
movsb
add
add
add
add
push
add
mov
loopne
mull
sbb
cmovb
mov
das
push
sub
inc
add
or
cmp
rcll
mov
inc
dec
cmp
in
dec
inc
add
lods
daa
aad
scas
cli
in
xchg
add
lods
mov
mov
add
add
add
add
rolb
stos
imul
add
sub
mov
mov
add
or
add
jmp
push
add
jns
mov
lds
sbb
sbb
adc
xor
dec
jno
add
add
add
inc
add
into
outsb
arpl
jge
xchg
int
pop
popa
and
add
fbstp
fdecstp
add
add
aad
iret
lcall
mov
fidivs
ret
je
ja
int3
push
add
lret
insl
add
lcall
icebp
pop
xlat
dec
inc
imul
loop
das
dec
mov
inc
rolb
das
and
mov
add
mov
test
sbb
out
sbb
add
ret
cwtl
xor
adc
add
add
jle
mov
ret
or
add
pop
int3
pop
pop
cmpsl
jl
call
add
loop
sbb
add
loope
push
jge
and
sbb
out
data16
mov
jne
or
mov
dec
mov
add
add
add
mov
fnsave
dec
pushf
es
adc
sub
addb
scas
test
in
outsl
or
mov
xchg
repz
inc
dec
xor
xchg
add
jne
push
adc
cmp
mov
lock
sub
call
add
movb
add
push
scas
lods
scas
outsb
xchg
mov
dec
je
adc
sub
clc
enter
add
mov
test
add
dec
or
or
add
mov
push
mov
push
jno
inc
cs
add
mov
adc
xorl
cmpsl
in
inc
add
push
add
add
scas
xchg
add
mov
daa
mov
popf
gs
inc
jb
pushf
sbb
aam
adc
sahf
movsl
or
or
add
and
mov
pop
or
and
loopne
sub
mov
add
cmp
notl
addr16
loopne
push
les
adc
push
icebp
mov
fwait
lods
jb
mov
movsl
add
add
add
insl
mov
lea
xchg
cltd
inc
add
adc
scas
outsb
lods
jne
dec
jecxz
pop
filds
add
add
movsb
add
add
add
sub
pushf
imul
fcmovnb
inc
fsubp
add
sbb
mov
add
lret
add
fisubrs
inc
add
add
inc
add
stos
dec
pop
loop
cmp
je
push
add
dec
imul
icebp
jo
andl
int
iret
adc
jbe
cmp
push
add
dec
stc
sbb
xchg
add
dec
out
pop
scas
addb
add
or
xor
push
add
insb
sbb
add
push
add
rolb
mov
mov
add
add
testb
add
add
nop
add
inc
add
add
movsl
out
data16
push
pop
dec
cli
pop
stos
jg
mov
push
add
andl
adc
add
add
adc
push
add
mov
sbb
icebp
and
add
addb
add
out
add
outsb
jl
aad
mov
or
fidivrl
inc
pop
movb
add
pop
mov
jp
sub
je
and
mov
addb
and
push
sub
leave
inc
jl
add
push
add
add
add
add
xor
lret
jbe
jnp
inc
xlat
or
enter
imul
or
cmc
or
jns
les
fwait
push
sub
sti
aaa
pop
repnz
sahf
xchg
add
inc
add
aam
loopne
mov
mov
aad
add
int3
insl
adc
xor
imul
rolb
dec
popa
ja
lret
jecxz
add
or
add
add
cwtl
das
cmp
mov
scas
cmp
jb
enter
add
int
out
add
mov
data16
in
insl
cmpsl
gs
add
or
add
mov
dec
mov
cmc
out
add
aad
daa
jo
push
pop
push
add
push
push
push
mov
rolb
dec
mov
add
jo
addb
add
push
fildll
rolb
adc
xchg
add
xchg
xlat
push
outsl
adc
pop
jb
mov
sub
rolb
cs
fidivrs
add
mov
add
add
mov
in
sti
cld
pop
pusha
add
addb
stos
jae
aam
hlt
add
jge
ficoms
add
sbb
dec
dec
inc
sub
mov
add
mov
push
add
add
mov
sub
adc
inc
add
inc
cmp
adc
das
out
add
addb
in
cwtl
stos
addr16
lret
push
sbb
lret
or
adc
aad
add
test
sahf
jo
add
fdivs
dec
mov
xlat
sbbl
add
mov
add
fidivrs
pusha
add
into
jae
add
or
add
cld
addr16
add
stc
push
add
add
add
mov
add
scas
and
adc
and
xchg
cld
inc
add
xchg
add
sub
adc
add
or
insb
mov
jne
add
add
int3
jle
add
jg
das
pushf
add
push
add
add
adc
sub
jns
dec
cltd
pop
xchg
add
in
mov
gs
mov
cmp
add
enter
stos
mov
add
ret
add
add
add
fsubs
mov
add
and
add
cltd
data16
imul
add
inc
add
test
frstor
mov
sbb
jmp
or
add
adc
je
shll
movb
outsb
pop
push
lret
imul
les
fcomi
add
sahf
nop
add
add
dec
enter
jne
mov
add
mov
add
mov
loop
arpl
xor
clc
lret
jge
cmp
mov
lods
add
add
add
pop
ljmp
jg
jmp
add
call
mov
fxam
sahf
cmp
sahf
push
loopne
rolb
add
testl
pop
in
push
add
sbb
add
ret
cmp
jnp
xchg
add
andl
dec
mov
add
add
or
scas
fisubs
add
mov
add
add
mov
test
lds
mov
add
sbb
sbb
push
add
jge
jecxz
jle
add
mov
aam
clc
in
inc
add
jl
lock
sti
insl
bound
mov
clc
in
sbb
inc
add
mov
das
out
out
push
add
lahf
testb
out
and
and
mov
or
cmpsb
add
add
push
add
loop
pop
sub
lock
adc
inc
add
and
mov
out
addr16
in
dec
jl
add
mov
mov
in
outsl
test
mov
test
add
mov
test
ljmp
pop
fsubrs
daa
daa
pop
sbb
add
add
imul
imul
cmpsb
add
cmpsb
add
les
xchg
pop
jmp
jo
jge
aad
cmp
add
xchg
fwait
push
add
push
add
out
inc
insl
xlat
sbb
adc
sbb
add
push
push
add
and
and
mov
iret
mov
sub
add
inc
add
imul
scas
lret
outsl
stos
je
loop
jns
adc
push
rolb
popf
in
or
add
mov
stc
dec
sti
aam
cmp
xchg
aaa
lds
call
pop
mov
fidivrs
or
pop
pop
add
add
or
es
imul
xchg
mov
mov
mov
notl
add
inc
add
add
stc
and
mov
call
out
sbb
insb
scas
add
mov
int
inc
repnz
daa
and
mov
xor
or
dec
mov
mov
loope
daa
dec
lods
inc
aad
xchg
adc
sahf
cs
push
cmp
insb
inc
lcall
inc
add
and
lods
adc
xor
jne
xor
add
bound
mov
add
push
lods
addb
add
mov
pushf
push
add
add
inc
xchg
add
pop
add
mov
add
cwtl
push
add
jp
push
fdivl
pop
cmp
jne
xor
in
rorl
sbb
pop
std
mov
cmp
pop
inc
jbe
inc
stc
mov
add
and
mov
stos
fnstcw
add
mov
jg
add
into
xor
rolb
add
add
xor
add
ret
add
loope
add
idiv
mov
les
cwtl
sub
mov
inc
add
add
nop
add
add
add
mov
add
pop
roll
jb
lods
les
adc
sub
daa
cli
sbb
arpl
adc
testb
or
dec
push
add
lods
or
xchg
add
jmp
das
imul
add
add
xchg
ficompl
int3
test
mov
lea
add
scas
dec
shll
add
incb
sub
stos
pop
push
add
jecxz
cli
sub
cwtl
xor
or
xchg
add
add
mov
cmpsl
ja
add
mov
jb
fnstsw
mov
addb
xchg
stc
jae
inc
jge
pop
in
add
add
add
add
arpl
add
jl
lock
jle
and
mov
int
ds
lds
add
add
adc
xchg
dec
arpl
bound
mov
mov
add
add
mov
gs
das
and
aas
or
inc
add
add
xchg
add
adc
rep
xor
or
inc
addb
xor
ds
mov
mov
test
sub
add
inc
add
mov
pop
xchg
stc
push
add
pop
mov
icebp
ja,pt
mov
add
dec
mov
push
add
sbb
xchg
xchg
add
add
arpl
add
testb
xor
ds
push
mov
loope
pushf
dec
addr16
or
pop
addb
mov
movsl
adc
test
popa
in
sbb
test
adc
mov
push
add
sub
jns
add
add
test
xlat
push
cs
pusha
add
insb
outsb
nop
add
mov
sbb
lods
xchg
js
lock
xor
push
mov
jge
push
add
popa
icebp
xchg
add
xlat
cmpsl
ror
push
xchg
push
add
cmpsb
add
sti
jg
xor
cmp
add
fsts
add
add
push
add
lods
jl
js
add
add
mov
cs
push
ds
mov
add
dec
inc
inc
pop
mov
push
das
mov
loopne
xlat
mov
bound
mov
mov
gs
pop
push
fidivl
shl
inc
sbb
xchg
add
mov
add
sub
stc
inc
mov
xchg
insb
repz
add
add
ret
jle
xlat
rolb
push
add
lcall
push
and
out
adc
lret
aas
gs
mov
add
add
sbb
lcall
pop
lods
in
add
or
les
push
cmpsb
add
and
mov
loopne
dec
and
mov
add
xchg
add
ja
jno
add
add
mov
lock
add
insb
test
add
mov
or
add
stc
adc
xchg
mov
inc
add
mov
add
mov
rolb
sti
sbb
scas
nop
add
jno
or
mov
int3
mov
fbstp
mov
mov
imul
sub
jo
arpl
push
xlat
mov
push
add
into
xor
pop
das
pop
in
mov
mov
les
into
movb
mov
add
add
xor
test
and
mov
add
jno
aam
int3
pop
out
xor
popf
jg
or
roll
loope
and
popa
adc
testb
add
push
push
in
scas
mov
mov
add
add
cli
push
pop
sti
xchg
add
pushl
ret
lahf
out
xor
mov
cmp
add
xchg
fildl
fcoml
add
jge
leave
jbe
mov
jmp
dec
mov
int3
jno
ffreep
add
pop
mov
loopne
js
add
mov
add
in
lret
add
add
fs
add
subl
add
rcrl
add
add
cmp
inc
pop
ja
jbe
xchg
add
mov
out
sub
add
add
cmova
push
fxch
in
fisubl
sbbl
adc
shrl
cs
add
lods
add
add
std
movb
add
fidivrl
addr16
test
aaa
int3
adc
mov
in
in
pcmpeqb
dec
idivl
jne
notl
add
pop
fbstp
add
push
add
xchg
addb
add
xor
pop
iret
fsubp
add
in
sbb
adc
mov
fcoms
add
mov
adc
add
pop
pop
or
pop
adc
nop
add
bound
mov
lea
aam
mov
into
outsl
fsub
mov
mov
add
xchg
add
add
add
gs
popf
ret
jae
push
les
cmp
mov
add
add
cmp
or
pop
enter
push
xor
add
add
cld
adc
testb
outsb
and
push
add
popf
jo
sbb
test
pop
cmpsl
addb
xor
add
add
aas
notl
add
add
add
jl
xor
adc
add
push
jbe
xchg
add
testb
lods
sbb
nop
add
cmp
add
and
pop
rorl
pop
bound
mov
add
adc
pop
sub
sbb
inc
je
ret
in
inc
add
loop
mov
push
add
add
pop
pop
adc
stos
dec
push
add
subl
jno
std
push
repnz
or
jnp
add
loopne
loope
icebp
or
adc
adc
add
add
mov
adc
pusha
add
fwait
icebp
aaa
push
psrad
and
popa
xchg
outsl
xchg
jle
add
and
ret
dec
lods
out
fisttpll
add
push
add
add
adc
mov
push
movb
add
pop
jg
push
or
pop
les
dec
jmp
and
dec
into
sub
gs
icebp
sbb
add
fsts
add
add
xchg
mov
bound
mov
cmc
add
add
add
xor
fwait
std
xchg
ret
nop
add
stc
aad
xlat
iret
mov
and
mov
jg
sbb
jge
add
mov
add
add
add
mov
pop
or
jecxz
xor
add
leave
enter
repnz
cmp
add
mov
add
xor
mov
jl
ds
pop
rolb
out
pop
xlat
nop
add
sbb
push
pushf
dec
dec
scas
and
add
adc
mov
in
sbb
sub
and
pop
fwait
push
jmp
add
mov
sub
dec
inc
stos
pop
enter
fisttpl
minps
add
shll
add
push
add
push
add
cltd
ficoms
add
add
enter
aaa
dec
out
ljmp
jle
addb
outsb
adc
addb
add
xchg
sti
pop
in
add
stos
sub
into
rcl
push
add
add
push
and
xor
add
add
adc
in
clc
mov
sahf
pop
pop
fdivs
adc
jbe
rolb
mov
mov
test
int
mov
mov
add
lahf
pop
into
scas
inc
jo
sub
js
xchg
sub
xchg
popf
bound
mov
pop
pop
aas
rcll
cwtl
mov
and
mov
sarl
dec
bound
mov
ss
shll
data16
jle
add
add
clc
sahf
mov
andl
add
add
add
mov
lds
xchg
inc
add
mov
lock
add
sbb
ret
xchg
negl
add
sub
add
mov
cwtl
xchg
jb
xchg
pop
shrl
mov
dec
aad
inc
add
cmpsl
push
test
sub
add
jle
add
cmp
call
mov
in
xchg
add
fbld
int3
mov
imul
or
xor
sbb
adc
dec
and
add
mov
mov
jl
push
add
jp
rcll
push
fstps
sub
lea
pop
sub
mov
adc
addb
jns
add
test
add
add
mov
and
mov
push
add
add
adc
push
add
repnz
das
sub
out
cmp
fistl
jb
jmp
fmul
jb
icebp
nop
add
js
push
add
add
mov
add
add
addr16
call
in
hlt
add
in
xchg
add
adc
add
addb
add
add
xor
aam
rolb
add
inc
add
add
add
ficompl
imul
xchg
add
sar
push
testb
hlt
add
jecxz
add
ljmp
bound
mov
sub
add
stos
loopne
sub
inc
add
mov
pop
mov
mov
stos
xchg
insb
xor
pushf
xorl
push
add
add
cmpsl
xchg
add
fbld
sub
mov
add
ja
movsb
add
add
int
add
lock
add
add
ds
xor
clc
inc
into
addb
test
fmuls
xchg
jmp
inc
or
mov
add
push
add
outsb
adc
test
add
add
sub
add
cmp
rolb
or
out
stos
sbb
add
mov
daa
and
mov
mov
test
pop
mov
mov
push
add
add
test
movb
add
scas
and
jne
nop
add
rolb
rolb
cmpsl
xor
mov
adc
popl
add
pop
add
fs
mov
xor
rolb
pop
rolb
add
cmp
add
add
or
mov
and
pop
shrl
ja
nop
add
dec
movsl
and
testb
add
xchg
lret
addb
add
int
dec
jp
addb
cmc
jp
and
jnp
xchg
ret
add
mov
lret
add
pop
mov
add
add
call
scas
addb
pushf
push
push
xchg
jmp
add
call
pop
leave
imul
and
xchg
rep
add
fucom
add
fnstsw
mov
mov
call
add
add
pusha
add
push
add
push
data16
mov
add
in
jae
aam
jnp
xor
flds
nop
add
push
add
xchg
add
push
mov
outsl
mov
add
add
inc
add
gs
nop
add
add
mov
repz
add
addb
mov
cmpsl
clc
mov
fwait
xor
jl
add
insb
testb
add
leave
pop
push
std
add
add
mov
add
lea
and
add
test
add
lods
outsb
ljmp
pop
inc
test
scas
cs
bound
mov
pop
inc
add
cmpsl
je
xchg
add
inc
pop
or
imul
clc
or
add
mov
fstps
mov
adc
movsb
add
add
stos
outsb
pop
push
add
add
adc
movb
ret
cmp
add
mov
add
jb
ret
add
lods
add
add
xor
pusha
add
mov
push
xchg
add
mov
xor
add
add
add
gs
add
and
mov
loope
add
add
cmpl
add
sub
xchg
jns
add
in
in
ja
jo
loope
data16
add
add
ret
inc
test
add
inc
pop
add
out
adc
out
push
aad
add
dec
fnstenv
jb
mov
loop
xchg
add
inc
add
sbb
cmp
add
test
jb
movl
add
add
mov
mov
mov
in
jns
xchg
push
add
pop
xchg
add
add
pushf
imul
xchg
jnp
or
jns
add
jge
add
sub
push
add
sbb
dec
clc
aaa
movsb
add
insb
xor
push
add
aam
sub
mov
aaa
outsl
lahf
push
pop
out
cmp
lods
push
add
insl
in
xor
jecxz
dec
cmp
push
add
inc
or
add
add
rolb
dec
icebp
les
inc
add
add
jecxz
or
or
add
bound
mov
mov
add
sub
add
xor
and
mov
call
add
int
add
pop
mov
scas
push
out
scas
xchg
inc
add
add
hlt
add
add
bound
mov
idiv
jg
rolb
into
xchg
add
rcll
js
cmp
add
fbld
mov
in
lods
test
add
mov
mov
mov
jp
add
mov
jmp
add
adc
stc
mov
mov
push
add
stos
cs
add
mov
mov
cmp
push
add
add
inc
add
cmp
mov
stos
inc
pop
mov
divl
mov
xor
cmc
movb
ds
jmp
pusha
add
hlt
add
sub
inc
sub
mov
push
fldt
test
xchg
add
pop
jg
pop
stc
addb
adc
bound
mov
arpl
or
loop
adc
jbe
mov
add
rolb
pop
fwait
cmp
or
add
scas
jecxz
mov
call
fsubrp
and
mov
jecxz
add
sbb
scas
mov
xor
sahf
inc
pop
xor
xor
sahf
push
add
sub
add
cmp
add
imul
jns
xchg
xchg
repnz
add
push
insl
xchg
add
add
xor
adc
in
sbb
inc
add
ja
add
fnstcw
add
or
mov
sbbl
ficoml
popa
add
add
add
push
lret
adc
clc
fisubrs
add
lret
pop
rolb
push
add
movsb
add
in
mov
and
add
fwait
imull
sbbl
add
add
jmp
cmp
rolb
icebp
push
sbb
mov
dec
decl
add
test
jecxz
jno
dec
sbb
data16
xor
insl
int
outsl
sti
lret
add
stos
ljmp
add
jns
imul
int
bswap
btr
rolb
or
aaa
pusha
add
out
aaa
pushf
mov
shl
sbb
sub
add
mov
mov
add
popf
test
add
pop
ret
add
sub
add
add
mov
repz
adc
add
and
cmp
loope
add
mov
data16
ficompl
arpl
pop
cmc
inc
arpl
jb
xchg
outsl
push
inc
or
add
add
add
add
jne
add
mov
push
stos
movb
sbb
popf
movsb
add
pop
jo
pop
and
mov
loope
out
insb
fistl
add
sbb
dec
movb
sub
or
add
adc
outsb
pop
cli
dec
fcoms
mov
dec
les
and
mov
and
mov
add
add
dec
jl
add
mov
inc
add
psubusw
sbb
add
add
xor
add
mov
add
clc
outsl
mov
out
jge
add
jge
ja
iret
fimuls
push
add
inc
add
add
xor
add
sti
movb
cwtl
cli
cmc
aam
or
sbb
stos
ret
adc
and
enter
pop
imul
pop
outsl
mov
add
inc
add
jne
aas
flds
fldt
popa
icebp
push
add
add
pop
or
daa
or
std
mov
xchg
iret
push
or
add
mov
not
add
pushf
dec
scas
stc
xchg
add
sub
push
and
in
add
fstpl
add
and
add
add
cmc
add
pop
xorl
add
add
nop
add
add
add
add
add
fnsave
adc
add
add
add
push
add
sub
scas
push
jae
int
addb
add
cs
and
mov
add
add
add
add
jle
sbb
add
mov
adc
sub
add
push
and
mov
dec
repnz
and
mov
add
sbb
sbb
add
push
popf
mov
inc
sub
repnz
xchg
in
mov
or
adc
xchg
add
add
push
add
leave
mov
add
jecxz
add
lahf
in
add
add
lret
or
push
add
push
inc
cmp
cmp
loope
add
xchg
add
add
add
xchg
into
xor
lret
cmp
xchg
and
add
cmpsb
add
or
add
xchg
jg
les
xchg
mov
rorl
xor
jne
mov
inc
addb
clc
pop
nop
add
mov
clc
mov
jnp
or
ret
cltd
int3
outsb
push
add
add
sub
inc
add
add
cmpsb
add
mov
cmp
add
inc
add
rolb
ds
shrl
repnz
push
jb
jno
add
dec
insl
cmp
add
add
lahf
popl
add
add
jne
jns
movb
incb
mov
or
fisttpll
lea
push
add
ljmp
mov
movb
add
mov
stos
lret
push
xchg
fmull
sbb
mov
xlat
adc
sbb
add
cli
push
add
in
addb
add
or
mov
add
push
mov
push
add
jbe
fsubs
xchg
pop
je
jae
jle
pusha
add
ror
xchg
add
jae
mov
and
outsl
fldl
add
add
pushf
ret
xlat
into
push
into
sti
mov
cli
xor
push
add
mov
int
cmp
add
mov
pop
mov
sbb
xchg
adc
fisttpl
fiaddl
add
mov
orl
add
mov
lds
inc
sub
push
add
jmp
iret
iret
or
movb
add
add
cmp
addb
sti
lcall
cmp
mov
sahf
in
mov
dec
call
arpl
mov
out
add
loop
stc
push
mov
mov
les
lahf
repnz
add
add
inc
add
add
fwait
and
mov
movb
hlt
add
mov
fwait
out
test
jnp
add
cmp
rolb
mov
fstps
inc
call
test
adc
pusha
add
xor
out
xchg
js
mov
add
arpl
sbb
int
xchg
and
mov
scas
mov
addr16
rcrl
add
add
les
mov
add
add
ret
mov
mov
faddl
lret
ret
push
add
or
inc
add
and
add
das
add
mov
in
testb
cltd
popa
lea
std
shll
add
add
add
xchg
adc
das
mov
add
jp
add
and
mov
ds
icebp
or
add
xchg
cmp
dec
jo
jl
mov
add
je
cmp
add
pop
mov
dec
jp
add
mov
mov
inc
add
add
add
add
