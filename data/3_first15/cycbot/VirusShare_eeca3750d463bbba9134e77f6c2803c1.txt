fs
dec
and
sti
mov
in
rolb
mov
lea
add
stc
test
addb
neg
and
mov
ja
pop
test
ss
out
inc
pop
sub
sbb
arpl
jno
fs
les
add
jl
dec
jle
mov
pop
xor
imul
imul
or
icebp
loopne
mov
push
sbb
test
pop
test
repnz
les
and
out
addr16
outsb
push
pop
outsb
mov
lods
dec
leave
lret
mov
loope
movsb
add
mov
lds
addl
push
add
stos
fisubs
push
add
out
hlt
gs
mov
mov
pop
jns
jae
fwait
mov
popa
pop
jge
call
cs
mov
lods
pushf
jae
sub
push
cld
adc
xchg
mov
ljmp
mov
add
mov
stos
xor
mov
sub
cmp
ror
push
arpl
push
outsl
sub
insb
ljmp
js
outsl
aas
pushf
xor
lahf
iret
cmp
mov
mov
daa
ljmp
loopne
mov
ret
add
add
xor
pushf
rolb
mov
mov
mov
pusha
add
jno
inc
or
adc
mov
mov
test
pop
out
inc
bound
mov
cmpsl
js
call
mov
add
add
add
add
and
mov
icebp
cmp
lret
loopne
mov
ret
jl
push
popf
out
sub
pushf
ss
scas
loope
or
mov
pop
push
sbb
repz
sbb
sbb
mov
out
out
rorl
test
das
xor
dec
out
adc
sub
leave
mov
jmp
mov
aaa
aam
les
mov
mov
pop
fisttpll
xor
mov
sbb
add
dec
stos
movsb
stos
xor
cmc
jno
or
shrl
out
test
add
add
imul
xchg
jnp
outsl
jbe
add
mov
cmpsb
and
mov
cli
push
sub
push
mov
mov
jl
xchg
sub
jle
xor
sahf
cltd
jo
mov
rolb
mov
addr16
test
stos
test
mov
fisubrl
add
sbb
pop
dec
leave
seta
sub
out
ror
cmp
call
mov
mov
and
xchg
je
cs
addr16
stc
sub
fisttpl
pop
dec
xlat
cmp
mov
mov
cmc
mov
fnstcw
add
repz
push
pop
dec
or
ss
mov
dec
cmpl
push
push
jnp
add
add
rorl
inc
push
adc
mov
jl
push
mov
adc
mov
rolb
mov
xchg
inc
adc
mov
pop
push
out
jb
mov
mov
sbb
sub
hlt
insl
data16
cmp
cmp
pop
stos
sbb
or
jb
mov
loope
mov
loopne
push
dec
dec
lret
sub
stos
fadd
pop
push
mov
sub
push
push
push
push
push
push
cld
call
add
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
add
push
adc
mov
add
xor
cwtl
jmp
add
into
push
sub
xor
mov
sahf
sbb
fisttpll
dec
fcom
fbld
push
aas
mov
add
fistpll
ds
popf
and
mov
repnz
ja
int
adc
mov
pushf
dec
cmc
in
cmpsb
movsl
inc
adc
mov
adc
mov
add
dec
leave
inc
jnp
push
imul
aam
or
dec
mov
and
jecxz
jnp
mov
js
xchg
popaw
mov
or
adcl
add
jno
cmp
popa
jb
mov
add
add
sbb
std
cmpsl
mov
add
out
aaa
cmpsb
pop
popa
fidivs
mov
js
sarl
push
and
mov
mov
add
or
add
mov
aas
subl
pop
dec
mov
jns
pop
sti
das
pop
lcall
and
mov
add
sub
scas
inc
lahf
insb
xchg
lcall
in
mov
ss
jp
mov
out
cmp
add
lods
gs
test
add
mov
inc
add
push
adc
mov
mov
addb
out
sbb
cmp
add
jnp
mov
sbb
sub
paddb
cs
inc
dec
lret
ret
das
cmp
cmp
ds
add
add
mov
test
test
rolb
mov
pop
loopne
mov
push
inc
add
out
repz
nop
add
push
clc
sub
fcomps
ret
data16
xchg
cmpsb
sahf
andl
add
lret
jbe
add
les
and
adc
mov
inc
add
sub
sub
call
inc
add
rolb
and
adc
mov
data16
sub
adc
add
mov
or
add
les
add
jecxz
test
lock
xor
test
add
cmp
xchg
mov
mov
add
mov
add
pop
dec
ret
mov
jne
or
xchg
push
add
push
add
icebp
sti
mov
dec
dec
xor
addb
stos
mov
xchg
xor
mov
inc
cli
mov
sub
xchg
movsl
push
push
fmull
jae
je
push
push
jnp
ljmp
in
mov
insb
add
or
iret
and
sub
shrl
sub
add
xor
lret
mov
addb
mov
push
xchg
jno
xor
pop
je
in
rolb
jnp
mov
mov
in
push
or
and
insb
dec
lds
push
add
std
test
mov
stos
inc
pop
hlt
test
inc
ja
xchg
pop
adc
leave
push
addr16
add
sub
mov
add
in
add
mov
aaa
add
jnp
icebp
jno
lret
dec
lret
shll
movsb
jno
pop
jp
mov
add
inc
jne
mov
inc
sysret
into
mov
xchg
aaa
mov
jl
cwtl
fcmovne
push
aam
inc
xor
int
xchg
sub
and
push
add
testb
in
mov
cmp
add
test
add
mov
mov
inc
add
out
push
add
ljmp
or
cmp
lahf
push
lret
dec
jl
jmp
cltd
pop
jle
push
xor
add
mov
dec
lahf
mov
add
imul
add
push
jmp
xor
mov
add
mov
add
add
add
mov
adc
add
insb
sti
ficoml
lret
mov
sbb
cmp
out
pop
stc
sub
xchg
add
in
test
pop
jp
add
mov
mulb
add
call
or
imul
cmp
add
mov
arpl
movb
inc
sbb
test
test
mov
lods
into
es
mov
add
out
xor
inc
je
das
add
mov
bound
mov
out
cmpsl
jle
add
add
mov
inc
and
mov
mov
mov
out
add
mov
dec
adc
xchg
int3
mov
mov
add
mov
mov
jmp
mov
shll
cmp
inc
or
jbe,pn
test
fmull
aaa
leave
clc
sub
add
lea
in
fwait
xchg
sbb
mov
lcall
in
in
pop
insb
or
add
js
mov
out
xchg
mov
jecxz
cli
out
mov
inc
add
sti
mov
mov
add
cld
test
std
mov
or
add
repz
idivb
test
pop
fstl
cmp
jo
mov
aam
add
add
dec
dec
xorl
aad
add
mov
sub
test
adc
mov
push
mov
mov
test
arpl
mov
add
push
test
imull
push
sub
gs
rcll
and
enter
and
mov
fdivrs
lahf
out
fldt
ja
or
in
xchg
inc
pop
data16
mov
xchg
addr16
xor
mov
cmp
add
into
or
add
mov
mov
sub
rolb
mov
add
iret
sub
lret
aas
and
mov
in
add
daa
mov
fsubrp
cmp
int
mov
xchg
cmc
mov
inc
and
rolb
mov
xchg
shrl
lcall
shrl
or
xor
mov
add
inc
add
push
mov
push
outsb
mov
mov
or
shl
jle
add
notb
xchg
lds
mov
sbb
cmpl
push
mov
pop
in
lcall
dec
data16
lea
sbb
aam
add
out
sub
mov
imul
mov
ret
repnz
aaa
les
push
add
adc
push
lds
add
jnp
inc
cmp
xor
jp
pusha
add
lock
cmp
jae
add
mov
cmp
add
mov
add
cwtl
cmp
mov
mov
mov
jle
jne
cmpsl
popa
clc
std
mov
mov
add
add
cltd
ljmpw
push
add
mov
fstpl
add
rolb
mov
pop
push
add
mov
aad
nopl
mov
add
xor
pop
mov
in
push
int3
pushf
mov
bound
mov
add
aas
fucomip
xchg
js
jmp
cmp
and
mov
mov
ss
gs
push
add
sub
mov
shll
mov
aad
js
bound
mov
cwtl
lea
into
adc
push
cmpsl
mov
xchg
cli
aas
fcmovb
push
stc
popf
addb
orl
ret
into
into
jbe
inc
movsl
pop
loopne
mov
adc
xchg
inc
out
cmpsb
cmp
and
xchg
add
mov
sbb
add
mov
sbb
cmp
mov
cmp
jne
mov
fdivrl
in
and
mov
gs
mov
add
push
add
mov
mov
or
mov
xchg
imul
ficompl
mov
push
add
repnz
dec
push
cmpsl
mov
sti
cs
sbb
inc
add
add
xchg
xor
dec
xor
mov
and
push
xchg
push
xor
cli
cmp
fidivl
mov
aas
mov
jno
or
sti
je
cmp
fimull
gs
out
add
pop
repz
jecxz
and
mov
addb
adc
or
mov
add
mov
xchg
rolb
mov
repz
sbb
fmull
pop
loop
mov
or
and
mov
mov
mov
add
and
es
jmp
lcall
mov
jne
push
dec
push
push
add
mov
pop
iret
xchg
push
je
movsl
cmpsb
std
xor
mov
push
fdivrs
inc
mov
jmp
aaa
int
xlat
inc
fdivrl
mov
push
xlat
xor
mov
jo
mov
adc
mov
dec
pop
dec
popfw
adc
jge
xchg
jl
adc
imul
add
cmpsb
and
mov
xchg
add
pop
mov
mov
dec
bound
mov
add
xor
mov
js
test
cld
cmp
xchg
add
sub
loop
mov
add
inc
add
andl
inc
add
cmp
lds
xor
js
cld
shrl
add
lahf
cmpsl
adc
rolb
mov
std
dec
les
lods
push
subl
mov
aaa
popf
movsl
or
add
mov
stos
xchg
add
push
pop
les
jg
add
mov
inc
dec
mov
add
mov
jmp
movsb
pop
push
out
arpl
mov
mov
xchg
jbe
add
add
mov
pop
cmc
das
aam
mov
add
sahf
cwtl
cmp
in
xchg
add
mov
lret
fcomps
push
iret
pop
test
dec
push
add
stc
dec
push
mov
in
inc
pop
mov
lods
into
fistpll
insb
movsl
scas
pop
push
push
add
mov
add
push
mov
mov
and
mov
ds
xchg
test
negl
dec
add
mov
mov
mov
fistpl
jne
xor
add
sbb
mov
mov
bound
mov
dec
dec
arpl
add
add
fimuls
cmp
sub
in
and
jnp
xor
lock
or
icebp
lahf
fimuls
dec
xor
add
ss
adc
add
mov
ljmp
cmp
mov
add
repz
fwait
push
cmpsl
shll
jns
mov
ret
and
mov
push
loop
mov
jp
add
add
jnp
inc
add
lcall
adc
in
inc
add
ss
add
add
xor
bound
mov
add
lds
in
pushf
pop
jne
ret
add
add
add
les
lods
sti
loop
mov
mov
pop
je
mov
add
adc
xchg
in
mov
add
add
mov
xor
mov
mov
add
cwtl
repnz
jge
and
mov
aas
faddl
sahf
xchg
add
cmp
add
pop
jbe
sbb
iret
or
push
inc
cmp
fstps
imul
mov
mov
mov
or
mulb
jg
jns
mov
inc
aas
psubsb
mov
mov
cmp
add
enter
mov
mov
shll
adc
dec
or
push
push
out
push
shll
cmc
push
and
add
mov
push
xchg
outsl
repz
aas
lea
sbb
or
jmp
fildl
or
repnz
ljmp
add
sub
cld
xor
aam
pop
jne
mov
add
push
adc
fsubs
mov
int
cmp
sbb
add
push
pushf
pop
ficomps
xchg
repnz
ja
or
add
add
aas
push
sub
add
push
cltd
add
mov
mov
mov
sub
pop
mov
mov
add
stos
in
pop
mov
ja
jp
stc
jmp
mov
and
mov
aas
lahf
imul
mov
cltd
in
jae
xchg
xchg
xchg
in
or
jne
lods
mov
pop
fisubrs
xor
adc
mov
aas
jnp
add
iret
popf
sbb
mov
cmp
add
xchg
jbe
and
mov
das
xchg
data16
mov
ret
loopne
mov
cmp
fs
xor
mov
and
add
mov
mov
xchg
xchg
add
mov
mov
dec
sub
les
scas
dec
dec
push
movsl
daa
out
add
mov
insl
clc
arpl
nop
add
mov
fs
popf
or
pop
mov
jb
mov
sti
add
mov
aam
push
add
add
scas
outsb
in
cmpsb
inc
add
sbb
loope
inc
and
sbbl
jecxz
jnp
jno
mov
or
add
add
xchg
add
mov
clc
divl
insl
inc
outsl
or
mov
jmp
add
sub
mov
icebp
sub
add
jno
jmp
mov
into
cmp
mov
add
add
insl
mov
xor
addb
lea
xchg
mov
dec
lahf
cmp
add
int
jmp
das
xor
mov
gs
pop
dec
xor
mov
mov
add
loopne
mov
add
mov
addb
dec
addb
adc
mov
xchg
add
add
mov
and
mov
adc
mov
mov
add
mov
push
jne
mov
mov
lods
in
xchg
add
cmp
mov
jp
xor
in
mov
adc
and
mov
pop
aad
add
jno
out
mov
mov
sub
or
adc
mov
fwait
and
mov
outsb
rolb
mov
mov
pop
pop
and
inc
or
add
push
test
lock
iret
inc
jae
and
jl
js
test
xchg
add
cmp
push
sbb
mov
mov
mov
dec
dec
fsubrs
add
insb
mov
cld
jne
add
sbb
cmp
ds
idivb
cs
sahf
inc
cwtl
push
pushf
insb
xchg
add
shll
lds
adc
ljmp
je
jl
xchg
cld
in
push
pusha
add
add
fwait
xor
mov
loop
mov
or
fcmovb
add
mov
sbb
add
mov
pusha
add
sbb
mov
fiadds
pop
sub
mov
add
mov
int
lret
push
add
mov
repnz
add
adc
mov
add
add
mov
pusha
add
out
gs
mov
add
jne
add
addb
mov
pmaxub
ss
pop
lcall
dec
sub
cmp
xchg
lock
insb
pop
fmulp
in
sub
and
or
add
xor
add
xchg
sbb
mov
add
push
in
xchg
data16
cmpsl
out
push
add
daa
mov
mov
jecxz
icebp
test
pop
fs
mov
je
lcall
jmp
xchg
rolb
mov
sbb
add
mov
cmpsb
push
rolb
jne
inc
add
fs
fstl
mov
mov
mov
scas
jmp
mov
add
pushw
movsl
xor
pusha
add
push
add
jo
mov
or
push
add
mov
ja
xorl
add
mov
aad
adc
cli
mov
sub
jo
mov
mov
add
jnp
adc
addl
fstps
call
pop
xor
mov
mov
jge,pt
pop
xor
mov
mov
push
add
repz
jne
out
pop
xchg
mov
fadds
and
mov
lret
mov
mov
push
add
rcll
in
pop
loopne,pt
mov
add
sub
mov
push
mov
aas
rolb
mov
bound
mov
add
mov
add
lds
insb
rcll
leave
inc
mov
mov
mov
mov
divb
or
mov
add
sub
aaa
ja
sub
loopne
mov
or
lock
sub
push
mov
roll
mov
mov
ljmp
add
into
push
add
insb
ds
addb
sbb
dec
mov
jo
mov
sub
into
or
fwait
cmpsb
mov
add
stos
pop
nop
add
inc
sub
push
and
test
sbb
cmc
in
add
dec
cmp
push
inc
adc
loop
mov
lahf
cmp
lret
ds
mov
cmpsl
dec
loopne
mov
dec
mov
cmc
add
mov
add
mov
shll
mov
sub
jbe
add
mov
inc
repnz
cmp
aam
add
cmp
and
mov
test
add
in
add
sbb
mov
mov
mov
scas
or
add
stc
push
dec
xchg
mov
or
add
pop
imul
les
mov
das
stos
imul
adc
xchg
mov
add
cmc
xchg
add
jle
rolb
mov
mov
add
xor
mov
add
add
add
pop
nop
add
sbb
aas
sbbl
mov
ljmp
jmp
push
add
xchg
pop
dec
cmp
and
in
lods
lods
sbb
sub
cmpsb
push
add
add
mov
dec
pusha
add
add
xor
mov
xadd
mov
ret
or
iret
addb
je
aaa
sbb
rolb
mov
mov
jmp
jns
inc
clc
dec
ljmp
outsb
test
mov
add
jno
push
mov
add
lcall
mov
rorl
scas
sub
mov
imul
nop
add
icebp
mov
mov
jno
lods
add
mov
es
cli
add
sbb
rcrl
and
mov
push
sbb
mov
mov
cli
cmp
sti
ljmp
add
jnp
iret
mov
or
out
push
push
pop
or
cmp
insl
out
lods
cmp
add
adc
mov
add
xor
cmpsb
sbb
sub
mov
icebp
pop
stc
dec
call
mov
outsl
out
nop
add
imul
enter
mov
sub
popf
aaa
js
movsb
mov
cmp
pop
fidivrl
pushf
int3
sbb
dec
das
icebp
arpl
icebp
mov
cmc
out
add
xchg
push
test
jns
sbb
mov
push
add
add
lds
pop
fcmovu
mov
sbb
xor
iret
push
sbb
cmp
pop
dec
lcall
lock
fdivrs
xchg
imul
mov
gs
lret
pop
pop
sub
add
add
ds
mov
cli
add
add
inc
test
add
cmc
cli
dec
mov
sbb
add
in
movsb
ja
in
cmc
mov
cmpsb
lods
pop
mov
cmp
into
mov
jae
arpl
mov
add
add
jns
pushaw
add
jl
mov
pop
adc
daa
pop
pop
mov
inc
push
jmp
hlt
fwait
cld
lods
arpl
add
test
cmpxchg
mov
rolb
mov
add
mov
sub
stos
scas
das
xchg
mov
mov
nop
add
leave
jmp
test
push
adc
mov
push
into
sub
add
scas
out
mov
mov
mov
scas
fwait
icebp
in
pop
test
gs
add
push
dec
push
addr16
popa
and
mov
mov
ss
or
mov
jno
out
lret
cmp
mov
xor
mov
mov
add
pop
xor
inc
rolb
mov
mov
mov
push
in
xchg
lahf
lods
xchg
cmpsl
lret
add
fcompl
mov
xchg
test
nop
add
gs
push
aad
in
cld
aas
inc
cmp
sub
add
and
jecxz
mov
loop
mov
pop
push
xor
stos
xor
cmp
add
add
mov
out
pusha
add
cmp
jbe
xchg
pop
cli
and
mov
fdivrs
mov
mov
popf
movsb
mov
add
mov
call
adc
movsl
rolb
mov
stc
stc
push
pop
xor
mov
push
mov
inc
sbb
addb
int
mov
arpl
inc
push
add
xor
add
add
mov
test
add
add
xor
xchg
hlt
hlt
and
mov
in
repz
jl
push
push
fmull
xor
jno
sbb
je
pusha
add
jae
mov
rcrl
imul
push
dec
jae
inc
and
mov
popl
mov
inc
lods
ud2
pop
xlat
repnz
pop
jnp
idivl
sub
mov
es
jmp
mov
jbe
add
push
scas
sbb
or
add
pusha
add
xchg
adc
add
std
pop
addb
mov
mov
inc
xor
add
mov
add
repz
jl
sub
mov
xchg
mov
push
add
or
jecxz
pop
xor
mov
addb
xlat
xor
mov
loope
js
std
testl
outsb
xor
mov
out
das
push
mov
mov
mov
scas
xchg
add
mov
mov
add
add
add
lea
mov
mov
fsts
loop
mov
push
pop
icebp
sub
add
cmp
add
add
add
xchg
stos
and
imul
cmp
insb
lcall
jmp
mov
cmp
jl
pop
jge
dec
gs
movsl
sbb
addb
xor
out
add
push
sbb
adc
mov
test
add
in
mov
add
mov
iret
repnz
add
cmp
daa
xchg
mov
mov
lahf
push
xchg
ucomiss
outsb
dec
adc
mov
push
adc
mov
add
mov
push
xchg
clc
int
adc
cmp
add
jns
ss
xor
not
xchg
add
fwait
jecxz
jne
mov
sahf
insl
int3
sub
enter
sub
push
mov
xchg
dec
xchg
inc
imul
cmp
sti
sbb
ljmp
flds
lds
mov
xor
cld
or
scas
mov
pop
andl
jge
out
lret
out
mov
test
leave
loop
mov
xchg
loope
add
add
lods
sbb
outsl
push
pushw
jecxz
mul
add
push
pop
add
mov
inc
add
cmp
arpl
dec
lea
mov
daa
xchg
push
jb
mov
jecxz
sbb
add
add
int3
fadds
add
lds
xor
mov
mov
add
addb
pop
arpl
pop
and
xor
sahf
pop
xchg
repnz
push
inc
cmp
stos
out
clc
add
mov
addb
sbb
call
or
ret
aas
dec
inc
clc
xor
mov
jge
jno
xor
sbb
dec
sahf
sbb
xchg
rolb
inc
add
xchg
lcall
aad
cmc
or
lods
jg
movsl
test
mov
mov
inc
inc
sbb
mov
inc
je
sub
sbb
cmpsb
mov
mov
cmpsl
mov
test
add
push
add
add
mov
insb
mov
fstpl
cwtl
add
mov
cmp
loope
push
lahf
xchg
add
fmul
jp
add
pop
outsb
adc
mov
xchg
sub
push
jnp
mov
xchg
lcall
push
ss
aad
fimuls
pop
and
mov
ljmp
sbb
push
add
sub
xchg
dec
sub
and
mov
sub
mov
mov
jnp,pt
jbe
ljmp
or
pop
test
lods
ret
idivb
inc
push
into
fdivs
mov
ds
add
xchg
dec
push
add
cmp
lods
icebp
push
add
mov
test
sbb
add
pop
out
das
cmovge
add
jg
cmp
add
mov
in
or
add
lret
movsb
ss
mov
mov
pop
mov
faddl
add
add
push
arpl
add
mov
lcall
mov
into
cli
cmp
mov
stos
ret
les
cld
imul
xor
add
pusha
add
dec
xor
mov
mov
movsl
sub
xor
data16
mov
es
icebp
adc
cmp
mov
add
cmp
push
sub
inc
mov
std
push
add
mov
imul
xor
cmp
add
dec
sbb
mov
add
and
jb
mov
jo
mov
sub
mov
iret
push
inc
add
add
add
negl
cmp
addb
das
js
mov
js
mov
bound
mov
xor
addr16
adc
pop
test
ficoms
test
add
jb
mov
lea
add
push
movsb
je
repnz
mov
mov
sahf
sub
mov
add
add
mov
cwtl
dec
fildl
js
add
push
ret
dec
lcall
mov
xlat
out
mov
cmp
das
adc
insl
adc
in
cmpsl
lret
movsb
pop
jo
mov
sbb
stc
aam
sbb
call
lret
mov
mov
outsl
push
aam
stos
in
jg
inc
push
pop
sbb
adc
jne
jno
mov
cmp
insb
fdivrl
add
hlt
jbe
stos
dec
arpl
add
lcall
add
fs
stc
push
add
pop
push
add
mov
adc
add
nop
add
add
loope
test
test
mov
add
add
dec
ss
xchg
std
inc
lcall
mov
dec
lods
xchg
cmp
cmc
or
ficompl
aaa
mov
js
ja
push
and
add
or
fnsave
jle
add
sub
js,pn
ret
loop
mov
mov
or
mov
mov
imul
outsb
fidivrl
sbb
fucomp
pop
jle
add
mov
inc
faddl
mov
into
addb
push
mov
mov
mov
xor
mov
pop
mov
outsl
mov
sub
jg
mov
add
or
mov
cmpsb
daa
sub
add
push
test
mov
sbb
notl
les
add
adc
mov
imul
test
pop
rolb
mov
add
mov
inc
je
mov
mov
orl
lock
xchg
rolb
mov
sub
mov
test
dec
push
add
and
pop
lret
mov
clc
mov
inc
jl
imul
dec
sub
push
dec
push
stos
add
mov
xor
lods
dec
mov
mov
inc
pop
cmp
cmpsb
lods
mov
pop
imul
movsb
push
icebp
testl
xchg
push
flds
mov
cli
ret
jns
add
dec
push
jno
mov
pop
cs
cmp
add
out
je
out
cmpsl
mov
lds
mov
push
pusha
add
fidivl
mov
or
push
pop
lahf
push
add
add
add
adc
add
es
push
pop
cli
outsl
or
int3
pop
push
mov
cld
rolb
repz
mov
mov
dec
mov
add
or
xor
add
into
rcll
add
add
mov
into
sub
mov
jle
mov
mov
jno
adc
int3
insl
mov
add
dec
loope
xor
into
fdivrs
cwtl
enter
mov
dec
or
lret
ja
cmp
loope
pop
imul
mov
jl
stos
inc
lods
bound
mov
loope
cmp
jge
test
xchg
add
nop
add
pusha
add
sub
push
sbb
jmp
add
pushf
in
push
mov
rolb
shl
add
push
and
negl
lret
inc
clc
xchg
outsb
pop
mov
cmpsl
out
ss
mov
mov
cwtl
lret
mov
mov
fucompp
push
inc
sub
push
add
xor
push
inc
dec
out
or
js
jns
lock
add
les
cmp
pop
dec
jae
cmp
mov
aas
iret
xor
mov
mov
mov
jmp
and
mov
rolb
aaa
lock
insl
lds
ss
pop
adc
es
fwait
pop
in
lea
add
mov
insl
fcmove
fisubrl
xchg
rolb
mov
rolb
pop
cmpsl
fnsave
jmp
cwtl
and
add
cmpsl
add
mov
cmp
cwtl
cmp
jmp
push
pop
inc
add
test
add
mov
fisubrl
mov
mov
cmp
jns
mov
jns
push
pop
add
jb
mov
or
xor
dec
xor
movsl
loopne
mov
xchg
add
or
loop
mov
repnz
push
cmpsl
lcall
fsubp
lock
add
jmp
add
mov
lock
sub
and
mov
in
cli
dec
push
xor
mov
scas
mov
jne
add
notl
inc
hlt
and
mov
loopne
mov
pop
test
xchg
cmp
cmp
adc
test
insb
pmuludq
shll
xor
mov
cmp
pop
sbb
mov
add
lcall
mov
or
aaa
mov
jp
fcmovu
jno
pop
inc
adc
jo
mov
sub
or
add
mov
mov
test
adc
fadd
add
push
jmp
clc
pop
sub
stos
stos
ret
cmp
mov
add
xor
mov
js
inc
jge
mull
add
out
push
add
adc
mov
out
fimuls
dec
mov
mov
add
mov
mov
xor
mov
addr16
daa
das
push
jns
adc
mov
cmp
cs
addr16
popl
add
mov
dec
incb
movsl
cld
idivl
je
in
daa
jle
imul
ss
fdivrl
aas
repz
aad
xchg
mov
pusha
add
adc
jle
push
jmp
pusha
add
outsl
stos
or
xchg
scas
pusha
add
add
jb
mov
adc
adc
mov
jp
dec
cmp
mov
add
dec
push
mov
add
mov
mov
add
mov
lret
repnz
dec
and
mov
mov
mov
mov
pop
push
add
cmc
sbb
rolb
jbe
jbe
cmpsl
cmp
mov
add
and
mov
adc
mov
aam
arpl
adc
popf
scas
ret
push
out
into
sub
mov
sbb
ds
mov
fnsave
cli
test
add
mov
into
cmp
pop
mov
rolb
mov
add
jb
mov
mov
add
rolb
mov
sbb
add
sbb
mov
sbb
stc
lret
in
jne
mov
fsubs
cltd
into
mov
add
add
nop
add
ret
xchg
testb
mov
xchg
sbb
je
stos
lret
call
jne
faddl
push
ss
xor
mov
fldcw
addb
xor
add
rolb
mov
mov
and
lea
mov
mov
outsb
mov
mov
push
repnz
lret
mov
add
data16
fwait
xor
jns
push
mov
add
mov
add
pop
in
pushw
roll
adc
mov
incb
add
mov
imul
add
mov
repnz
pusha
add
imul
xor
mov
xor
mov
sbb
mov
jl
in
ret
and
movsl
fdivl
scas
push
loope
xchg
push
jge
lods
loopne
mov
jmp
dec
push
add
call
add
into
fldenv
ja
push
add
stos
cmp
cmp
or
pop
in
adc
mov
mov
out
aaa
xor
mov
addr16
add
fisttps
sarl
mov
add
sahf
adc
mov
xchg
into
sbb
mov
inc
das
aas
mov
adc
out
cmp
mov
pop
add
dec
js
adc
xchg
add
test
mov
or
lods
sub
mov
mov
cmc
test
mov
add
add
mov
mov
addb
stos
lods
addb
add
mov
xor
add
repz
add
push
shll
movsb
pop
lods
xchg
add
mov
jns
xchg
stos
jae
add
mov
or
push
lret
ret
fwait
or
das
cmc
xor
push
add
jecxz
dec
cmpsb
mov
xor
mov
add
mov
fstps
rolb
mov
ficompl
iret
xchg
sbb
mov
pusha
add
lods
rorl
cld
movsl
xor
sub
adc
mov
jl
push
mov
pop
stos
jle
jg
xchg
pop
xchg
cmp
loope
mov
enter
int3
pop
rolb
mov
sub
call
jge
add
fists
mov
add
es
fdivs
add
sub
or
mov
lahf
lock
out
ja
add
jg
cwtl
insl
mov
jb
mov
mov
mov
adc
rolb
mov
scas
dec
mov
mov
mov
test
js
jbe
xchg
pop
mov
add
sahf
scas
sbb
push
mov
faddp
ret
fidivl
sub
mov
clc
pop
jl
lahf
and
ja
ret
mov
add
scas
mov
add
out
cmp
shll
fadds
xchg
scas
dec
push
add
test
add
in
adc
pop
bound
mov
sub
pop
dec
sbb
int3
js
repz
adc
jns
add
inc
add
in
mov
push
sub
or
jns
into
xor
or
movsb
mov
dec
shrl
inc
lods
jp
mov
pop
sub
cmpsl
push
cmp
sbb
inc
add
mov
mov
cwtl
cmp
arpl
addb
sub
jae
ret
cli
or
test
les
add
jle
xchg
add
mov
or
add
popf
lock
mov
cmp
xchg
iret
cmp
daa
out
imul
add
leave
mov
add
adc
loopne
mov
mov
xchg
and
add
pop
aam
cmp
je
fcoml
dec
mov
push
dec
int
mov
daa
nop
add
add
add
xchg
rolb
mov
jns
addr16
add
mov
xchg
ss
test
add
fstl
mov
mov
mov
pop
push
cmpl
aam
into
aaa
ret
mov
and
mov
lcall
jb
mov
jp
sbb
cmp
xor
mov
mov
sub
dec
ja
and
inc
adc
mov
push
sbb
mov
cmp
or
jnp
xor
push
pop
rolb
mov
add
jl
add
cmc
es
add
mov
sub
mov
movsl
sahf
sbb
xchg
dec
push
xchg
add
push
mov
adc
pop
mov
and
xchg
sbb
stos
add
sbb
cwtl
fwait
jle
add
cmpsl
flds
jne
aas
enter
fisttpll
xor
iret
daa
mov
mov
add
das
pop
sahf
int
xlat
clc
sbb
fdivrl
popf
enter
mov
mov
mov
add
mov
fsubs
push
xor
mov
js
dec
jno
loop
mov
push
les
mov
mov
ds
mov
je
addb
je
add
ljmp
out
push
inc
pop
pop
jae
aam
pop
mov
mov
stc
sti
imul
loop
mov
mov
inc
mov
and
mov
mov
add
test
movsl
dec
rolb
and
mov
cli
clc
roll
les
mov
pop
mov
sub
add
jo
mov
pop
repnz
pop
push
xchg
dec
aad
enter
daa
sti
ret
pop
inc
je
add
adc
mov
sub
rolb
mov
out
sub
jb
mov
mov
inc
add
add
pop
sub
or
cmpsb
and
shrl
mov
add
out
add
aad
outsl
inc
outsb
fs
add
cmpsl
stos
ss
add
mov
sbb
push
call
loopne
mov
mov
mov
add
xchg
iret
jno
sbb
mov
rolb
mov
add
push
add
mov
jae
pop
lcall
and
mov
jno
add
imul
dec
iret
mov
push
mov
adc
add
add
aad
lea
add
test
mov
mov
push
adc
push
mov
scas
stos
rcr
iret
sbb
iret
mov
out
ret
cmp
add
mov
notl
mov
shrl
jne
pusha
add
fs
rolb
call
mov
addb
mov
mov
jge
lcall
pop
lahf
outsl
push
pop
outsl
push
add
add
jns
imul
int
lock
inc
add
lods
in
addr16
sbb
xchg
cmp
push
mov
add
add
mov
outsb
fs
mov
fcoml
adc
ja
aam
mov
mov
popl
sub
jecxz
sahf
sbb
imul
jae
pop
incl
adc
jle
add
or
mov
pop
sar
or
add
mov
mov
or
cltd
pushf
jno
lds
or
add
inc
add
pslld
mov
lds
movsb
pop
sbb
sub
inc
dec
popf
popf
jle
gs
or
add
in
lahf
add
mov
xchg
mov
mov
adc
jle
cmp
jno
sub
mov
pop
cld
into
dec
data16
mov
jmp
add
ljmp
or
add
mov
jo
mov
scas
jp
sbb
xlat
int3
stc
mov
rolb
lock
add
add
popf
xchg
add
dec
xor
push
adc
sbb
add
mov
xor
mov
mov
insl
mov
lods
addb
add
mov
mov
ljmp
aaa
rolb
outsl
fcoms
call
inc
jecxz
add
or
cmp
or
add
test
add
mov
cli
sub
add
mov
dec
test
mov
jnp
fnstsw
adc
mov
and
add
cmpsb
loopne
mov
jb
mov
inc
or
daa
scas
mov
mov
sbbl
frstor
mov
mov
pop
sbb
jae
xlat
fdivl
mov
add
add
push
out
dec
into
mov
cli
dec
in
cmp
sub
add
push
scas
mov
add
cmp
xchg
loopne
mov
add
add
out
leave
push
adc
cmc
mov
xor
insb
je
es
pop
shrl
pop
cmpl
add
hlt
pop
jl
mov
mov
test
jae
idivb
add
mov
add
cmp
inc
or
jmp
mov
dec
mov
mov
add
sbb
inc
repnz
pop
xchg
pop
rolb
mov
stc
mov
mov
fstpl
insb
jo
mov
push
inc
mov
mov
inc
in
sub
sub
lods
pop
fists
mov
pushl
or
add
add
or
pop
dec
mov
xchg
data16
inc
cld
and
add
add
xchg
add
mov
out
or
add
xlat
adc
xor
mov
ret
mov
mov
add
pop
mov
mov
pop
nop
add
mov
shll
push
xor
pop
or
sbb
add
out
mov
pop
outsl
sub
mov
addr16
jo
mov
adc
pop
rcl
outsl
pushl
mov
mov
sub
hlt
mov
loope
lock
pop
fisttpl
mov
add
inc
xchg
out
rolb
stos
out
pop
push
sbb
mov
add
in
adc
mov
xor
std
jae
out
pop
stos
aad
aam
mov
push
out
push
popf
dec
sub
jb
mov
bound
mov
and
mov
add
mov
inc
add
dec
imul
jge
mov
inc
xorl
push
jb
mov
cmp
add
push
mov
mov
lods
mov
lahf
jnp
push
and
fdivrl
cmp
add
pop
dec
mov
rcll
std
lods
push
cmpsb
stos
imull
scas
in
hlt
fisubrl
shll
enter
aad
jmp
stos
sbb
add
mov
rolb
mov
mov
insb
push
jb
mov
mov
mov
sti
scas
lea
inc
add
push
xchg
dec
push
scas
or
pop
sbb
aam
mov
xor
mov
std
fstl
es
add
add
mov
sti
lods
xor
push
cmp
cmp
cmp
add
and
daa
mov
pop
test
sti
movb
push
mov
mov
rolb
mov
mov
loope
push
mov
and
inc
xor
mov
cmp
sub
add
mov
pushf
dec
mov
add
mov
add
sbb
incb
test
mov
call
mov
or
repnz
jmp
leave
push
add
sbb
je
add
mov
jns
add
stos
mov
mov
mov
mov
push
jne
adc
mov
add
sub
in
es
jbe
lds
fisubs
add
mov
aad
jnp
mov
xchg
mov
mov
mov
mov
in
xor
mov
rolb
mov
jle
or
mov
addb
mov
sahf
pusha
add
hlt
or
add
rolb
mov
pop
sub
xchg
aas
mov
pushl
mov
xchg
iret
adc
mov
add
and
mov
sub
jp
add
push
imul
outsl
fs
movsb
adc
out
jecxz
mov
jecxz
add
xchg
inc
dec
fsubrs
pop
and
mov
sbbl
add
dec
push
iret
pop
bound
mov
arpl
rolb
mov
dec
mov
mov
add
mov
mov
add
cmp
add
mov
add
mov
pop
lea
xchg
in
push
mov
pop
adc
hlt
rolb
mov
sub
xor
mov
rorl
imul
jecxz
and
scas
jb
mov
push
lods
lahf
cmp
pushf
jae
gs
adc
mov
in
stos
jmp
add
mov
add
jl
jmp
out
rcrl
add
ljmp
fs
xlat
outsl
fmuls
xchg
add
mov
and
dec
outsb
sbb
or
test
dec
shll
jl
insb
dec
sbb
pop
das
mov
push
add
cmp
pmuludq
add
add
subl
jl
add
jno
dec
ret
xor
mov
and
inc
mov
mov
mov
scas
popf
add
dec
mov
movsb
iret
aad
jbe
inc
jno
add
flds
add
cmp
mov
add
adc
mov
add
mov
or
inc
xor
mov
cwtl
inc
outsl
cli
mov
mov
adc
xor
mov
jle
add
and
mov
dec
xchg
xchg
xor
mov
mov
mov
pushf
adc
lea
inc
cmp
xchg
pop
add
mov
mov
mov
inc
add
aam
movsb
jns
xchg
add
lea
mov
xchg
or
add
lock
and
mov
mov
add
lock
lret
mov
mov
loope
data16
fidivrs
nop
add
jge
cwtl
rolb
mov
pop
jg
pop
std
push
add
loopne
mov
push
jne
pop
and
mov
or
sbb
xor
rolb
mov
push
xchg
adc
inc
sbb
add
add
mov
pop
out
es
xlat
pop
arpl
jb
mov
stos
popf
inc
pop
adc
out
out
xchg
aad
dec
sti
xchg
add
mov
add
add
icebp
cwtl
sub
mov
jnp
insb
dec
je
testb
mov
lock
jecxz
in
push
adc
cli
ss
add
cmp
xor
mov
dec
addb
cmp
inc
and
mov
mov
or
cmpsb
pushf
xchg
insb
sbb
add
add
pushf
icebp
push
gs
insb
imul
push
mov
add
cmpsl
movsl
jge
sbb
push
popf
jl
mov
add
adc
add
and
pop
add
inc
inc
sarl
lods
addr16
leave
pop
lea
sbb
mov
jbe
out
nop
add
sbb
cs
cmp
and
adc
pop
aad
push
in
mov
cli
pop
cld
sbb
icebp
xchg
aam
lcall
add
add
dec
stos
fs
add
outsb
les
hlt
in
sbb
add
add
cwtl
fldcw
mov
add
fstps
pop
mov
sbb
dec
push
adc
je
out
add
mov
mov
aad
loope
and
mov
jns
inc
je
sbb
aad
out
sub
or
ret
dec
pop
mov
add
fdivs
inc
mov
mov
sbb
out
add
add
in
in
adc
sbb
les
jmp
cld
sub
hlt
fiadds
xor
addb
mov
pop
mov
stc
imul
add
add
mov
rep
xchg
sbbl
push
out
push
insb
mov
jp
push
add
and
in
iret
and
add
arpl
or
pop
push
dec
sahf
ss
add
sbb
add
cli
xchg
les
xorl
or
inc
pop
xor
test
mov
and
dec
pop
or
loop
mov
xchg
adc
pop
cmp
add
add
push
xchg
add
inc
enter
add
addb
imul
xchg
sub
inc
add
push
sti
cmc
xor
cwtl
pusha
add
jge
rolb
mov
scas
mov
mov
rolb
mov
das
movsl
pop
scas
and
add
add
lea
testb
lds
outsl
xchg
rcr
push
adc
outsl
into
ret
jbe
pop
xchg
imul
mov
icebp
pop
sbb
xchg
cmp
ja
int3
jge
mov
push
shl
push
dec
dec
jp
adc
mov
ds
inc
dec
popf
xor
mov
pop
pop
jmp
add
jbe
sahf
mov
pop
cs
ljmp
pop
shll
adc
mov
and
mov
jo
mov
scas
xchg
pop
inc
out
divl
sbb
adc
mov
or
mov
jmp
out
jno
jg
add
in
add
daa
flds
mov
out
xchg
or
lods
sbb
mov
mov
imul
add
mov
imul
adc
das
mov
aas
lds
mov
xchg
mov
jns
repz
sbb
add
dec
pop
ret
mov
dec
xchg
xor
mov
add
cmp
sub
das
xchg
or
add
mov
mov
sub
inc
aam
push
icebp
push
dec
insb
sbb
xchg
mov
hlt
fdivs
sub
ficompl
out
stos
dec
loop
mov
sbb
gs
inc
sub
add
in
dec
lret
push
mov
lret
mov
add
fs
add
sbb
lods
sahf
fdivs
lods
jne
dec
popf
dec
inc
push
jp
pop
test
pop
mov
add
data16
sbb
lret
mov
push
sbb
jle
add
mov
inc
xchg
jle
xchg
mov
mov
mov
push
sbb
xor
scas
fldln2
pop
fwait
sbb
jl
into
int
lea
mov
stos
fnstcw
ljmp
push
add
cld
insl
out
fsubrp
addb
lods
sub
add
jp
jecxz
pushf
mov
and
mov
jge
add
leave
sub
push
add
int3
fwait
decb
jge
add
dec
pop
sbb
fimuls
dec
adc
mov
inc
add
jle
loope
repnz
rorl
into
ficomps
or
adc
push
lcall
movsl
sub
fiadds
pop
adc
rolb
mov
jg
ret
lcall
rcrl
cmp
mov
push
loop
mov
test
xor
arpl
xor
mov
dec
enter
aam
push
das
test
leavew
scas
ret
push
cs
aad
in
jge
adc
mov
or
inc
add
xor
mov
lret
loopne
mov
or
mov
mov
sub
rolb
js
mov
mov
shr
add
jmp
fisttps
mov
add
test
das
scas
jl
cmpsl
mov
mov
out
negw
lods
or
mov
inc
addb
add
loop
mov
mov
mov
fbstp
adc
js
xor
pushf
fists
lods
addr16
push
inc
add
mov
fsubrl
xchg
mov
nop
add
inc
nop
add
popf
jl
mov
scas
mov
inc
push
xor
xchg
add
push
xchg
xchg
add
add
mov
xchg
popa
movsb
mov
aas
cmc
fs
std
in
push
add
addb
fisubrl
mov
add
mov
xchg
pop
mov
push
add
fnstsw
rolb
mov
sub
push
add
add
out
or
test
mov
mov
sub
cs
arpl
pushf
adc
cwtl
popf
push
test
pushf
ljmp
mov
jno
inc
add
add
jne
subl
mov
or
push
mov
mov
push
or
xor
pop
pop
and
aad
xchg
push
cmpsl
jne
cwtl
dec
repnz
int3
mov
add
lock
sbb
imul
mov
mov
out
clc
pop
insl
bound
mov
xchg
add
add
hlt
pop
sbb
and
mov
push
in
add
test
add
or
into
jnp
pop
jnp
int3
sbb
outsb
aaa
cltd
dec
add
mov
loop
mov
icebp
sbb
adc
sbb
adc
mov
mov
rolb
mov
adc
aas
cmp
xor
mov
rorl
cmpsb
xor
adc
into
jns
add
mov
pop
flds
push
push
popf
fwait
inc
jb
mov
or
mov
cmp
adc
add
mov
int3
add
jg
add
push
ss
mov
jbe
int3
pop
fnstsw
sbb
mov
arpl
aaa
movsb
inc
add
push
inc
xor
lods
pop
push
add
mov
add
and
sbb
pop
fldt
add
cmp
xchg
cs
in
mov
in
lock
and
jne
shrl
das
and
push
mov
add
dec
or
cmp
mov
add
addb
mov
xchg
add
inc
add
int3
mov
jge
pop
cmp
add
mov
mov
add
cmp
rolb
jo
mov
stc
cltd
mov
mov
fcmove
ljmp
mov
adc
mov
add
jno
push
cmp
int
jge
lcall
mov
cmp
add
sarl
mov
jbe
jo
mov
mov
add
sbb
pop
popa
ss
mov
int3
mov
add
or
push
add
repnz
dec
push
add
outsl
hlt
sub
arpl
and
rolb
testb
sbb
stos
pop
or
xor
mov
jbe
outsl
cli
mov
out
add
xchg
das
sbb
dec
jg
jns
incl
lret
mov
add
aaa
test
add
add
add
les
add
daa
cmp
inc
xchg
inc
addb
test
aas
sub
add
mov
mov
add
mov
dec
lock
xor
repnz
add
and
pop
mov
xchg
add
es
decl
in
ja
add
mov
rolb
mov
jmp
add
add
scas
sub
add
mov
mov
iret
inc
cmp
inc
sbb
cwtl
mov
cmpsl
movsb
fists
or
fildll
pop
mov
insb
fstpt
mov
fsubrl
cwtl
insl
cmpsb
dec
and
add
mov
mov
lcall
mov
xor
mov
lcall
add
mov
test
inc
xor
out
lahf
sub
fstpl
inc
scas
xchg
pusha
add
push
add
leave
dec
inc
pop
mov
mov
test
and
popf
test
insb
adc
mov
fcmovb
push
fmull
add
das
incb
sbbl
jb
mov
mov
mov
add
inc
push
adc
cmp
add
mov
mov
mov
sbb
add
push
ficompl
lods
popf
jle
mov
mov
dec
jbe
js
out
cmp
ja
add
mov
pop
scas
mov
push
fadd
or
test
sti
mov
sub
xchg
jl
ret
inc
add
movsl
dec
iret
or
cmp
rolb
mov
addb
mov
jecxz
and
mov
icebp
sbb
mov
out
add
dec
mov
rolb
mov
fwait
add
jmp
jg
sahf
pop
subl
add
mov
add
push
sahf
and
and
add
mov
repz
addl
lret
mov
cvtps2pi
and
mov
ret
fistpl
daa
mov
xchg
sbb
mov
jge
jae
aad
insl
int3
cltd
cmp
mov
rolb
outsl
imul
daa
mov
mov
loopne
mov
xor
mov
mov
rcll
inc
cs
nop
add
ret
ds
addb
test
loopne
mov
nop
add
testb
inc
xor
popa
xor
mov
imul
add
add
jo
mov
push
cld
rep
sub
addr16
xchg
or
in
sbb
sbb
add
mov
addb
lds
mov
out
out
bound
mov
add
pop
bound
mov
add
add
add
jecxz
lock
mov
lret
push
add
jp
add
push
insb
cmp
xchg
pushf
pop
pop
stos
and
pop
addb
jnp
mov
cmp
dec
js
enter
mov
out
mov
adc
insl
jae
add
dec
cmp
push
cmc
lods
mov
int
xchg
xchg
outsl
lret
daa
cmp
sbb
dec
mov
and
mov
inc
add
add
add
mov
adc
aam
in
jne
rolb
mov
add
sub
cmp
jmp
out
rcll
loope
ja
or
add
push
pusha
add
add
jle
addb
push
popf
es
adc
es
mov
stos
push
push
mov
pop
lea
jecxz
add
mov
mov
test
je
loop
mov
sub
jne
pop
imul
jl
call
mov
mov
or
pop
jl
jle
lahf
fstp
adc
xchg
add
add
insl
mov
sbb
or
addb
cmp
jmp
outsb
pop
add
scas
cmp
pop
les
xchg
stc
mov
add
xchg
cmc
jl
aas
jns
hlt
repz
pop
sbbl
add
add
xor
xchg
add
xor
mov
mov
add
out
fucomip
jb
mov
addb
ds
mov
lods
push
test
mov
add
push
cmpl
lahf
jnp
sub
mov
mov
mov
mov
dec
dec
jmp
or
add
mov
jnp
std
mov
push
mov
arpl
divb
dec
std
pop
into
imul
mov
push
outsl
in
fstpl
inc
ljmp
mov
cmp
cmp
mov
mov
jne
xchg
cltd
je
hlt
addb
mov
sahf
cltd
push
sbb
mov
xor
mov
fisubrs
add
out
xchg
je
dec
stos
ss
add
stos
push
shll
cld
mov
add
mov
mov
xor
mov
mov
xor
mov
imul
mov
cmp
rolb
mov
add
insb
sbb
loope
add
je
leave
push
mov
mov
add
add
mov
jmp
push
xchg
push
and
mov
add
add
rolb
mov
adc
mov
add
cmpsl
or
addb
mov
push
imul
push
out
ficoms
jnp
les
jns
rolb
insb
ficompl
cli
jns
adc
mov
ds
orl
mov
movsl
sub
mov
and
mov
test
push
fwait
stc
scas
shrl
add
rolb
mov
mov
add
mov
add
xchg
dec
jmp
xor
mov
mov
add
mov
jmp
imul
mov
in
les
inc
js
push
outsb
mov
cwtl
xlat
or
or
dec
sub
cs
std
mov
std
jmp
int3
sti
ss
add
mov
pop
xchg
add
rolb
mov
mov
mov
add
dec
ja
mov
mov
and
in
add
mov
xor
mov
add
sub
out
hlt
jnp
inc
lahf
inc
xchg
es
xor
and
cli
xor
gs
push
push
add
pop
mov
jle
fistpll
adc
aad
aad
fstl
inc
add
dec
mov
mov
adc
mov
inc
das
mov
pop
push
add
mov
insb
aad
ret
mov
and
or
add
loope
add
ljmp
cmp
or
ss
add
and
sti
loope
scas
and
mov
out
hlt
lods
cmp
mov
sub
in
push
popa
daa
lock
add
xchg
mov
xchg
aaa
dec
xor
aaa
mov
push
add
into
imul
pop
addl
mov
add
outsb
adc
mov
ret
lret
out
pop
pop
out
test
das
lahf
int3
cmc
jbe
mov
ja
pop
xchg
arpl
add
out
pushf
mov
push
cmpsb
daa
cmpl
or
outsl
xchg
stc
lods
add
pop
cmp
jp
jg
lahf
lret
mov
mov
or
add
mov
mov
pop
mov
mov
test
insl
fsts
mov
xchg
addb
mov
gs
and
push
xor
adc
mov
pop
ret
andl
push
gs
push
je
xchg
shll
add
out
fiadds
mov
mov
adc
mov
mov
push
mov
in
add
lcall
add
into
mov
stos
daa
iret
adc
mov
dec
mov
adc
fistl
adc
add
lods
ja
xchg
sub
outsb
mov
pop
mov
and
push
fcomps
popa
add
push
add
mov
adc
inc
add
add
jmp
dec
adc
jl
add
mov
inc
addb
jb
mov
outsl
xchg
pusha
add
ret
pop
movsl
jge
add
and
mov
clc
sbb
xchg
pop
sbb
push
lock
add
pop
fistps
push
or
xlat
jno
addb
icebp
aas
mov
push
add
mov
in
pop
dec
jo
mov
scas
out
push
add
cli
cli
mov
push
add
dec
jmp
in
test
mov
sti
mov
add
mov
loopne
mov
xchg
sbb
inc
call
lock
mov
pushf
dec
pop
std
in
jl
lea
mov
dec
adc
push
ja
lock
adc
and
mov
add
sbb
mov
mov
mov
mov
into
dec
jae
leave
mov
dec
mov
add
mov
insl
jmp
push
or
mov
add
add
and
mov
add
repnz
stos
mov
scas
mov
mov
pop
jno
add
jp
cltd
loopne
mov
push
jb
mov
shrl
jg
pushf
inc
dec
rep
fs
push
inc
add
mov
lods
cmpsl
push
pop
push
imul
mov
mov
add
sub
into
mov
add
in
pop
mov
mov
mov
ret
xchg
sub
xor
aas
jle
jns
inc
fadd
mov
mov
inc
add
push
add
add
push
inc
lds
jb
mov
decl
pusha
add
into
mov
mov
mov
test
shll
mov
push
mov
ss
adc
push
aad
pop
add
or
pushl
out
mov
mov
fdivs
or
add
mov
mov
mov
cwtl
adc
mov
mov
push
jmp
add
outsb
insb
movsl
adc
mov
dec
fabs
ret
mov
add
adc
cs
fwait
xchg
add
aad
inc
je
add
add
inc
mov
fwait
lock
and
out
add
cmp
stc
jns
nop
add
add
xor
and
add
popf
enter
rolb
mov
or
adc
or
add
jns
mov
mov
sub
jno
adc
stos
pop
pusha
add
add
sub
rolb
mov
adc
aam
fldl
add
lcall
pushf
pusha
add
adc
add
mov
inc
add
cld
aad
mov
mov
inc
mov
or
loope
push
add
add
pop
movsl
addr16
cmpsl
xlat
xchg
and
out
inc
aad
clc
aas
bound
mov
lds
hlt
scas
cld
fwait
insb
fwait
xor
mov
cmc
iret
add
les
push
shll
mov
pop
inc
jl
imul
push
jge
jge
jae
movsl
jno
out
cmp
stos
mov
out
sbb
push
inc
stos
mov
pop
jp
xor
sbb
inc
add
and
jle
and
repnz
mov
push
inc
stos
pusha
add
mov
mov
mov
mov
mov
add
mov
or
ljmp
fisubrs
imul
mov
idivl
imul
cmp
mov
test
or
or
mov
mov
mov
jo
mov
sub
sub
cmp
pop
sbb
dec
or
mov
sbb
iret
and
cmp
add
add
ljmp
nop
add
fistl
or
mov
cmpsl
mov
add
mov
add
add
mov
or
or
adc
mov
xor
mov
sbb
add
xor
pop
inc
clc
inc
sub
hlt
ljmp
mov
pop
es
add
or
sbb
adc
dec
nop
add
add
js
mov
or
add
ret
jbe
mov
xchg
and
add
les
and
mov
mov
cmp
es
or
inc
sbb
icebp
xor
push
add
imul
add
mov
add
mov
add
and
sahf
lahf
mov
loopne
mov
cmp
js
mov
mov
add
sbb
lods
or
rolb
dec
jp
daa
mov
cmp
jo
mov
imul
adc
jmp
pop
and
mov
fdivl
mov
fmulp
mov
inc
add
pop
rcrl
adc
ljmp
out
enter
mov
xchg
ds
push
mov
adc
add
mov
adc
pop
inc
add
add
cmp
scas
or
in
jmp
lahf
insb
shl
push
jmp
mov
lcall
popf
mov
mov
stos
adc
pop
cmp
jbe
push
mov
mov
mov
jmp
add
addb
ds
into
rolb
mov
add
lods
mov
mov
inc
add
cmc
cmp
add
mov
enter
repnz
popa
rolb
push
fsts
stc
mov
xor
mov
and
mov
add
add
mov
sbb
cmp
add
lret
pop
rolb
mov
outsb
in
add
add
cmpsl
jge
outsb
lods
push
push
fldcw
jg
cld
jnp
or
add
inc
pop
ds
movsl
insl
fwait
dec
rolb
sarl
dec
push
push
std
adc
mov
fidivl
out
dec
fsts
mov
adc
scas
arpl
add
mov
adc
mov
pusha
add
jmp
aam
add
mov
jae
adc
cmpsb
fisttpl
mov
xchg
out
add
add
mov
add
mov
jo
mov
aaa
dec
and
mov
out
sub
xchg
pop
das
icebp
adc
shll
xchg
xor
add
jne
mov
xchg
pop
test
int
add
mov
roll
mov
daa
mov
xchg
mov
ret
sub
mov
xchg
mov
mov
mov
mov
sbb
add
arpl
mov
loope
sti
mov
stos
jne
and
fldenv
xchg
dec
add
mov
mov
jp
mov
mov
aad
cmp
mov
sti
push
mov
outsl
test
mov
ja
sbb
addr16
adc
lret
mov
xchg
addr16
sbb
mov
aad
mov
pusha
add
in
cmp
add
sbbl
in
cmp
mov
sbb
xor
xor
add
sub
adc
out
mov
pusha
add
sahf
sub
lods
mov
mov
push
clc
js
fwait
mov
mov
test
push
nop
add
mov
and
mov
mov
call
cltd
lahf
out
add
sbb
aaa
cmp
rolb
lahf
cld
push
jge
addb
into
in
lods
pushf
sbb
add
mov
test
mov
add
mov
in
out
fsts
jecxz
add
aad
add
add
mov
inc
dec
dec
pop
adc
mov
pop
mov
xor
add
mov
or
mov
mov
lret
cmpsl
in
cmp
faddl
add
scas
cltd
xchg
push
inc
add
add
mov
cmp
ljmp
lea
and
repnz
mov
out
jp
cltd
leave
cmp
stos
mov
jne
add
mov
enter
or
add
aad
add
jns
mov
daa
lods
add
mov
mov
push
push
sub
cmp
pop
lods
pop
mov
jle
cmpsb
cmpsl
fcomps
xchg
pop
iret
xlat
dec
mov
arpl
sub
add
pusha
add
mov
cmp
jle
clc
sbb
sbb
repz
xor
cwtl
and
mov
pop
sti
rolb
mov
sub
jmp
rolb
loopne
mov
inc
jnp
inc
and
add
sti
pop
adc
mov
add
outsl
mov
mov
fwait
stos
icebp
mov
std
rolb
mov
sbb
call
xor
pop
cld
adc
jae
jle
mov
dec
dec
mov
push
push
add
push
adc
mov
mov
imull
jl
cmp
xorl
jno
jbe
adc
fwait
stos
mov
add
xchg
int3
mov
mov
add
roll
cmp
mov
mov
ds
mov
mov
sub
add
mov
xchg
add
cmp
push
cs
add
mov
pushw
ja
jo
mov
mov
add
add
mov
aas
es
push
test
mov
in
dec
mov
cmp
mov
test
add
imul
mov
mov
inc
out
mov
add
mov
iret
or
jp
lods
sbb
mov
add
scas
cmpl
add
mov
dec
inc
mov
mov
add
sbb
jmp
dec
jg
add
scas
mov
ror
xchg
mov
add
addb
mov
add
insl
add
mov
fnstsw
push
lcall
add
add
psraw
mov
cmp
add
jbe
mov
mov
jne
and
add
xor
push
test
mov
mov
mov
rolb
mov
cli
inc
loope
xor
add
jmp
lods
rolb
mov
mov
aam
fs
out
cmpl
or
mov
test
addb
aad
lds
add
mov
rolb
mov
add
les
fadds
cltd
cmp
nop
add
lahf
lret
mov
add
mov
mov
mov
leave
jae
add
ljmp
outsl
pop
push
push
jnp
in
addb
dec
push
or
stos
movsl
fldt
cmpsl
jle
xor
xor
sub
lcall
add
and
movsl
push
add
push
jle
nop
add
cltd
outsb
push
mov
mov
add
and
mov
push
loopne
mov
stc
sub
mov
je
and
outsb
xor
mov
mov
mov
jno
cmpsl
fadds
popa
je
imul
and
mov
mov
sbb
jns
orl
ja
sbb
xor
dec
lahf
dec
lods
dec
jecxz
jp
pop
imul
call
outsb
mov
divw
xor
mov
add
ret
mov
movsl
push
ret
into
and
mov
xchg
inc
adc
xor
mov
fdivl
and
mov
mov
adc
mov
mov
cmpsl
mov
ljmp
mov
je
inc
add
mov
mov
jnp
add
push
xor
mov
add
lret
xchg
popa
lahf
jnp
sbb
cmp
xor
push
xchg
inc
fsubl
mov
arpl
add
jmp
xor
mov
stos
in
add
mov
jnp
adc
jb
mov
rolb
mov
cmp
loope
add
shll
ret
out
rorl
inc
sbb
add
loope
sub
stos
xor
jp
xlat
int
in
dec
lds
pop
int
cmpsb
adc
sbb
add
pop
mov
popf
jle
push
int
cltd
das
mov
mov
pop
xchg
add
jp
les
out
idiv
push
mov
loope
les
out
jge
lods
fcmovbe
es
aas
aas
cmp
and
jns
outsl
cmpsl
sub
add
pop
and
pop
fs
repnz
add
mov
add
push
pop
repnz
add
addr16
mov
mov
dec
push
jg
cmp
push
pop
and
pop
adc
jbe
add
cmpsb
rcll
sub
int3
sub
repnz
popf
test
int3
je
mov
imul
add
cmpsl
imul
add
add
and
mov
add
xchg
inc
dec
cld
and
sbb
pop
inc
add
push
inc
test
daa
inc
nop
add
xor
mov
insl
test
pop
mov
mov
in
fs
mov
sbb
dec
adc
mov
mov
lret
enter
add
mov
cld
mov
jmp
lcall
add
aaa
int
xor
or
add
pop
mov
add
cmp
add
fidivs
je
add
stos
cli
cld
test
cmp
pop
pcmpeqb
sub
mov
mov
mov
hlt
dec
mov
add
mov
add
jl
stc
mov
xchg
pop
mov
rolb
test
addr16
jbe
test
es
inc
add
adc
sarl
ret
sub
cmpl
mov
or
add
jle
movsl
test
add
pop
icebp
mov
call
xor
add
sub
in
jle
imul
add
push
aaa
rolb
xor
mov
sub
dec
std
mov
mov
fsubs
mov
mul
add
mov
or
or
rcll
mov
aas
mov
mov
iret
adc
mov
inc
addr16
mov
dec
aad
push
xlat
cs
add
mov
sbb
sbb
mov
sub
pusha
add
xlat
mov
sahf
test
mov
add
mov
mov
outsb
fs
mov
mov
xor
mov
mov
add
add
mov
push
jg
fdivrl
test
fsubrs
pop
inc
insl
bound
mov
xchg
dec
mov
lret
pop
fnstcw
mov
lods
clc
add
mov
mov
mov
mov
jl
pop
pop
push
jge
add
jne
aas
call
inc
ss
fsubrl
repnz
lock
pop
mov
add
insb
add
mov
adc
mov
add
movl
jge
pop
jne
xchg
fcompl
dec
cmpsb
aas
cld
mov
arpl
push
decl
and
mov
mov
jb
mov
mov
mov
addb
and
dec
cmp
push
bound
mov
add
dec
mov
add
hlt
adc
mov
adc
add
push
popa
stos
ja
fwait
ss
mov
pmaxsw
pop
scas
jnp
les
mov
repz
jnp
sahf
ljmp
add
pop
push
test
pop
adc
addb
jae
add
sbb
cwtl
inc
rolb
mov
adc
mov
adc
nop
add
out
adc
sub
add
mov
pop
mov
mov
add
aaa
stos
call
and
add
add
insl
imul
cwtl
xchg
jns
leave
mov
clc
repnz
nop
cld
jae
add
jmp
add
mov
add
pop
in
add
add
in
nop
leave
jmp
dec
pushl
add
in
nop
leave
jmp
inc
add
iret
add
lods
pop
lcall
cld
jae
add
add
add
stc
clc
repnz
nop
cld
jae
mov
add
outsb
add
clc
repnz
nop
cld
jae
add
add
add
dec
call
clc
repnz
nop
cld
jae
add
out
insl
dec
clc
repnz
nop
cld
jae
inc
add
cmp
pop
addr16
mov
push
mov
add
cltd
add
add
dec
add
loop
mov
add
jbe
clc
repnz
nop
cld
jae
add
xor
mov
or
clc
repnz
nop
cld
jae
lcall
push
mov
xchg
ret
or
add
pop
test
mov
nop
leave
jmp
jl
add
pop
add
sub
mov
xchg
ret
mov
arpl
add
ret
clc
repnz
nop
cld
jae
add
add
mov
fcomi
inc
add
decl
sti
push
jmp
mov
lods
mov
pop
sub
add
jae
add
add
add
push
mov
nop
leave
jmp
jmp
add
mov
repnz
nop
cld
jae
sti
add
lods
bound
mov
add
repnz
nop
cld
jae
add
add
mov
lcall
icebp
add
add
mov
test
and
push
mov
xchg
ret
mov
iret
dec
ret
sti
add
add
add
add
add
add
add
push
mov
nop
leave
jmp
add
push
add
xor
clc
repnz
nop
cld
jae
add
icebp
les
mov
clc
repnz
nop
cld
jae
in
add
insl
mov
clc
repnz
nop
cld
jae
add
add
lcall
nop
nop
cld
jae
das
add
add
sti
clc
repnz
nop
cld
jae
add
jmp
dec
add
clc
repnz
nop
cld
jae
add
xor
dec
clc
repnz
nop
cld
jae
add
add
add
push
push
mov
xchg
ret
shlb
movb
push
pop
mov
push
mov
xchg
ret
sbb
std
and
push
mov
nop
leave
jmp
popf
mov
add
rclb
nop
leave
jmp
out
add
add
mov
test
adc
nop
nop
cld
jae
add
mov
repnz
nop
cld
jae
pop
mov
inc
negb
clc
repnz
nop
cld
jae
add
mul
add
stos
add
add
clc
repnz
nop
cld
jae
nop
add
and
add
add
clc
repnz
nop
cld
jae
add
add
add
outsl
mov
clc
repnz
nop
cld
jae
mov
add
std
sti
ficoml
repnz
nop
cld
jae
add
add
jne
inc
repnz
mov
push
mov
xchg
ret
iret
mov
inc
jbe,pt
add
clc
repnz
nop
cld
jae
add
add
lcall
jae
add
add
push
mov
xchg
ret
add
das
mov
lods
ss
inc
addb
ja
jmp
test
daa
add
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
jl
add
and
xor
add
clc
repnz
nop
cld
jae
jl
push
jno
push
into
shr
clc
repnz
nop
cld
jae
add
cmp
rclb
in
nop
leave
jmp
add
arpl
lcall
add
rolb
add
mov
repnz
nop
cld
jae
rclb
add
push
addb
dec
lea
clc
repnz
nop
cld
jae
in
add
add
mov
add
mov
xchg
ret
pop
add
add
lods
mov
imul
add
pop
cmp
ss
nop
add
add
add
add
cmp
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
rolb
mov
jmp
pusha
add
loope
sahf
mov
clc
repnz
nop
cld
jae
testl
adc
mov
clc
repnz
nop
cld
jae
mov
in
add
push
mov
nop
leave
jmp
out
add
jmp
add
stos
add
clc
repnz
nop
cld
jae
roll
add
arpl
add
mov
nop
leave
jmp
add
add
add
add
add
sti
push
stos
xchg
add
add
add
add
inc
add
dec
add
clc
repnz
nop
cld
jae
add
popf
add
add
cmpsb
mov
in
nop
leave
jmp
in
add
arpl
cs
push
mov
xchg
ret
add
testb
pop
add
mov
push
mov
xchg
ret
add
rolb
lods
push
push
mov
nop
leave
jmp
add
mov
mov
movzwl
clc
repnz
nop
cld
jae
add
add
add
add
push
mov
nop
leave
jmp
rolb
add
mov
popl
clc
repnz
nop
cld
jae
mov
add
mov
xchg
ret
popf
and
add
push
mov
xchg
ret
popf
cmp
add
cmp
push
mov
nop
leave
jmp
rolb
mov
mov
or
cmc
xchg
mov
mov
add
int3
add
clc
repnz
nop
cld
jae
ds
fildl
nop
leave
jmp
mov
pop
testb
faddl
jmp
mov
xchg
ret
mov
xchg
addr16
jmp
and
pushl
clc
repnz
nop
cld
jae
mov
add
testb
jo
mov
arpl
mov
nop
leave
jmp
add
cmp
xor
repnz
nop
cld
jae
add
add
jmp
mov
push
mov
xchg
ret
add
add
icebp
clc
repnz
nop
cld
jae
add
in
stos
clc
add
clc
repnz
nop
cld
jae
pop
add
out
pop
cmp
mov
inc
add
add
add
add
pop
mov
add
clc
repnz
nop
cld
jae
cmp
add
add
or
jne
je
repnz
nop
cld
jae
add
add
pop
shl
clc
repnz
nop
cld
jae
in
push
add
mov
xchg
ret
or
add
arpl
add
or
nop
leave
jmp
add
dec
in
push
mov
add
add
add
jge
lahf
add
icebp
add
mov
das
add
clc
repnz
nop
cld
jae
add
add
movb
clc
repnz
nop
cld
jae
lcall
xor
mov
repnz
nop
cld
jae
add
add
inc
rclb
mov
clc
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
add
rclb
in
nop
leave
jmp
movb
add
add
add
repnz
nop
cld
jae
push
add
out
add
cmp
clc
repnz
nop
cld
jae
movb
jl
mov
push
mov
nop
leave
jmp
push
sti
lods
xchg
add
mov
add
clc
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
sti
iret
add
cmp
add
cmp
push
mov
xchg
ret
jae
add
nop
stos
nop
mov
repnz
nop
cld
jae
add
add
and
dec
mov
clc
repnz
nop
cld
jae
add
sbb
pop
xor
clc
repnz
nop
cld
jae
mov
es
clc
repnz
nop
cld
jae
add
and
add
clc
repnz
nop
cld
jae
add
shrb
in
inc
add
cmp
std
popf
add
push
mov
nop
cld
jae
testb
add
add
add
inc
adc
repnz
nop
cld
jae
jae
cmp
add
and
repnz
nop
cld
jae
das
add
push
add
clc
repnz
nop
cld
jae
mov
das
mov
push
mov
xchg
ret
add
add
add
sbb
nop
nop
cld
jae
std
add
jl
pop
fnstenv
sar
repnz
nop
cld
jae
add
add
mov
adc
repnz
nop
cld
jae
sti
add
jae
sbb
dec
add
or
inc
add
add
inc
cmp
mov
mov
je
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
cmp
sti
push
mov
xchg
ret
add
mov
add
clc
repnz
nop
cld
jae
add
mov
add
mov
cmp
lcall
add
pop
add
add
and
inc
add
clc
repnz
nop
cld
jae
add
push
add
xchg
out
push
push
mov
xchg
ret
stos
jae
add
incl
add
push
mov
nop
leave
jmp
lods
add
mov
add
add
and
jmp
add
add
testl
mov
mov
sub
add
jmp
add
in
sti
addb
ret
push
add
pop
clc
repnz
nop
cld
jae
das
add
popf
cmpsl
mov
nop
cld
jae
rol
mov
mov
rolb
mov
mov
nop
leave
jmp
inc
pop
mov
pop
mov
push
mov
xchg
ret
cmp
std
add
mov
push
mov
nop
leave
jmp
add
add
push
push
mov
xchg
ret
iret
add
sti
add
movzwl
clc
repnz
nop
cld
jae
add
add
addr16
filds
jne
push
mov
xchg
ret
in
add
rcrl
je
clc
repnz
nop
cld
jae
out
mov
mov
clc
repnz
nop
cld
jae
add
add
je
add
clc
repnz
nop
cld
jae
mov
mov
add
push
mov
xchg
ret
add
add
cs
clc
repnz
nop
cld
jae
add
pop
add
jb
mov
push
sbb
sub
add
add
lcall
add
mov
clc
repnz
nop
cld
jae
cmp
mov
in
mov
clc
repnz
nop
cld
jae
add
jle
dec
add
repnz
nop
cld
jae
add
add
add
sbb
clc
repnz
nop
cld
jae
popf
shlb
mov
outsl
push
mov
nop
leave
jmp
nop
nop
add
jns
test
clc
repnz
nop
cld
jae
data16
aaa
cmp
repnz
nop
cld
jae
pop
das
push
add
add
add
clc
add
daa
out
inc
add
rcll
or
clc
repnz
nop
cld
jae
das
mov
pop
push
clc
repnz
nop
cld
jae
mov
add
repnz
nop
cld
jae
mov
cmp
arpl
xlat
ja
mov
clc
repnz
nop
cld
jae
dec
dec
add
popf
add
stc
pop
push
mov
nop
leave
jmp
add
shlb
data16
lret
clc
repnz
nop
cld
jae
or
pop
add
es
mov
clc
repnz
nop
cld
jae
add
and
pop
ret
clc
repnz
nop
cld
jae
xchg
dec
data16
add
push
add
mov
push
clc
repnz
nop
cld
jae
add
jl
in
add
push
mov
push
mov
xchg
ret
add
add
add
nop
daa
jp
push
or
repnz
nop
cld
jae
stos
add
shl
add
clc
repnz
nop
cld
jae
out
pop
add
add
rolb
mov
mov
lods
push
mov
nop
leave
jmp
mov
add
add
jae
add
add
inc
jb
clc
repnz
nop
cld
jae
in
rolb
add
data16
jp
jne
push
mov
nop
leave
jmp
in
add
dec
or
mov
xchg
ret
shl
push
data16
jne
clc
repnz
nop
cld
jae
add
fldl
into
inc
add
add
mov
add
clc
repnz
nop
cld
jae
std
mov
and
push
push
mov
xchg
ret
add
push
jae
inc
add
nop
nop
cld
jae
add
add
add
add
mov
jo
mov
xor
sbb
add
repnz
nop
cld
jae
lods
dec
add
or
ja
clc
repnz
nop
cld
jae
testb
mov
repz
clc
repnz
nop
cld
jae
add
add
into
jne
clc
repnz
nop
cld
jae
add
xor
add
clc
repnz
nop
cld
jae
dec
add
jl
add
std
xor
push
mov
xchg
ret
and
add
mov
out
add
push
mov
xchg
ret
movb
iret
jmp
testl
mov
cmp
ret
jl
push
cmp
clc
push
mov
xchg
ret
add
rolb
add
mov
add
repnz
nop
cld
jae
add
mov
and
mov
add
dec
in
inc
add
in
inc
movb
xchg
popf
pusha
clc
repnz
nop
cld
jae
mov
mov
mov
nop
nop
cld
jae
add
add
add
inc
add
and
repnz
nop
cld
jae
addr16
add
and
or
clc
repnz
nop
cld
jae
pop
add
mov
clc
repnz
nop
cld
jae
dec
add
nop
add
out
push
push
mov
xchg
ret
shlb
add
test
pop
clc
repnz
nop
cld
jae
rolb
shrb
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
mov
jmp
add
adc
repnz
nop
cld
jae
add
add
lods
mov
fwait
add
add
repnz
nop
cld
jae
add
add
fwait
mov
clc
repnz
nop
cld
jae
nop
nop
add
sbb
insl
pop
push
mov
xchg
ret
add
jl
notb
push
mov
nop
leave
jmp
mov
add
fwait
pop
push
mov
xchg
ret
and
cmp
add
movb
aas
jne
clc
repnz
nop
cld
jae
roll
gs
mov
add
repnz
nop
cld
jae
lods
push
mov
inc
loope
call
clc
repnz
nop
cld
jae
add
inc
add
clc
repnz
nop
cld
jae
push
and
xchg
push
sbb
clc
repnz
nop
cld
jae
mov
shrb
add
or
and
add
add
jmp
or
xchg
cmpl
cld
jae
push
push
pop
mov
nop
nop
cld
jae
and
add
repnz
nop
cld
jae
add
das
mov
in
add
push
mov
nop
leave
jmp
push
stos
das
add
ds
or
nop
nop
cld
jae
nop
add
add
push
mov
add
clc
repnz
nop
cld
jae
out
add
mov
clc
repnz
nop
cld
jae
add
rclw
push
mov
nop
leave
jmp
nop
add
add
add
fmuls
mov
adc
repnz
nop
cld
jae
mov
sti
in
inc
cmp
in
nop
leave
jmp
out
pop
add
popa
clc
repnz
nop
cld
jae
add
out
lcall
mov
xchg
ret
rcrb
add
or
xchg
add
clc
repnz
nop
cld
jae
add
add
aaa
jnp
cmpl
jmp
add
and
clc
repnz
nop
cld
jae
add
rolb
push
insl
push
clc
repnz
nop
cld
jae
sti
add
add
clc
push
mov
nop
leave
jmp
add
add
rolb
add
add
push
mov
xchg
ret
lods
dec
lcall
push
mov
xchg
ret
push
xchg
cmp
stos
mov
clc
repnz
nop
cld
jae
add
add
add
add
sar
repnz
nop
cld
jae
add
add
add
mov
nop
nop
cld
jae
add
pop
and
pop
push
push
mov
xchg
ret
ljmp
shrb
and
xchg
clc
repnz
nop
cld
jae
in
roll
add
add
push
mov
nop
leave
jmp
add
add
jae
add
mov
nop
leave
jmp
cmp
add
and
inc
in
repnz
nop
cld
jae
jae
add
add
das
sub
push
mov
nop
leave
jmp
add
in
add
add
push
mov
xchg
ret
push
lcall
add
repnz
nop
cld
jae
add
add
popf
add
add
sub
clc
repnz
nop
cld
jae
add
jae
jne
clc
repnz
nop
cld
jae
add
idivl
and
cmp
ret
add
add
mov
out
in
jmp
add
add
add
add
add
pop
mov
repnz
nop
cld
jae
arpl
mov
adc
mov
add
push
mov
xchg
ret
inc
add
in
add
arpl
mov
xchg
ret
add
add
push
add
fisttps
nop
nop
cld
jae
lods
das
add
and
cli
dec
clc
repnz
nop
cld
jae
mov
sbb
and
jne
push
mov
nop
leave
jmp
lcall
mov
clc
repnz
nop
cld
jae
add
das
mov
repz
repnz
nop
cld
jae
cmp
add
nop
nop
cld
jae
lcall
mov
incl
in
nop
leave
jmp
lcall
repnz
nop
cld
jae
arpl
add
mov
test
mov
nop
leave
jmp
add
nop
add
pop
add
clc
repnz
nop
cld
jae
add
xchg
lea
in
nop
leave
jmp
add
inc
jl
lods
bound
mov
add
clc
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
dec
add
cmp
arpl
inc
xor
and
mov
jg
addb
add
clc
repnz
nop
cld
jae
add
idivb
clc
repnz
nop
cld
jae
or
dec
add
add
push
push
mov
nop
leave
jmp
lcall
add
mov
lea
push
mov
nop
leave
jmp
rol
lcall
out
clc
clc
repnz
nop
cld
jae
in
add
fmuls
nop
cld
jae
add
jmp
jmp
add
cmp
push
mov
nop
leave
jmp
add
add
std
cmp
cli
clc
repnz
nop
cld
jae
mov
shl
xchg
movb
repnz
add
rolb
add
mov
add
adc
mov
mov
add
push
mov
nop
leave
jmp
push
push
and
or
rcrb
repnz
nop
cld
jae
nop
add
add
add
sbb
repnz
nop
cld
jae
add
mov
push
mov
nop
leave
jmp
sti
dec
mov
add
repnz
nop
cld
jae
add
mov
data16
das
daa
icebp
push
ss
add
clc
repnz
nop
cld
jae
add
dec
imul
in
nop
leave
jmp
add
add
and
xor
mov
jmp
add
rolb
jae
sbb
dec
or
pop
push
mov
xchg
ret
add
jl
mov
incl
add
testb
cmp
ret
add
add
mov
sub
nop
nop
cld
jae
add
daa
mov
add
clc
repnz
nop
cld
jae
add
sub
nop
nop
cld
jae
add
add
jmp
xchg
xchg
add
xor
inc
add
mov
popf
add
push
mov
nop
leave
jmp
mov
add
add
mov
sub
repnz
nop
cld
jae
xchg
das
add
addr16
rolb
test
mov
clc
repnz
nop
cld
jae
add
add
cmp
mov
xchg
ret
and
push
add
jnp
mov
xchg
ret
add
and
add
in
nop
leave
jmp
dec
push
dec
inc
add
pop
je
sub
nop
cld
jae
sti
mov
jae
add
add
inc
and
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
dec
push
add
add
mov
stos
push
mov
nop
leave
jmp
das
push
add
cltd
push
push
mov
xchg
ret
add
jl
add
jl
add
shl
inc
add
and
add
add
pop
sbb
push
call
add
push
popf
inc
add
add
pop
add
pop
call
clc
repnz
nop
cld
jae
mov
push
mov
mov
mov
add
mov
lods
ror
clc
repnz
nop
cld
jae
add
add
add
jp
leave
push
mov
xchg
ret
inc
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
iret
xchg
push
mov
add
sahf
add
add
test
add
jecxz
add
test
pop
cmpl
push
mov
nop
leave
jmp
mov
movb
repnz
nop
cld
jae
jmp
and
mov
clc
repnz
nop
cld
jae
add
and
and
mov
add
and
mov
xchg
ret
addr16
add
add
dec
cmp
repnz
nop
cld
jae
popf
out
add
add
add
add
clc
repnz
nop
cld
jae
add
add
push
mov
push
mov
nop
leave
jmp
add
loope
shl
push
mov
xchg
ret
add
add
lods
push
mov
xchg
ret
add
add
add
add
sbb
popa
add
mov
xchg
ret
add
add
lcall
xchg
inc
add
add
add
sti
div
add
sub
clc
repnz
nop
cld
jae
mov
add
add
movsl
ja
add
pushl
clc
repnz
nop
cld
jae
push
rcll
push
add
add
add
and
add
push
add
or
in
nop
leave
jmp
in
inc
add
add
pop
pop
push
push
mov
nop
leave
jmp
add
add
xchg
pop
add
clc
repnz
nop
cld
jae
add
inc
push
aam
aaa
pop
das
mov
clc
repnz
nop
cld
jae
add
add
lret
mov
xchg
ret
lods
add
add
mov
clc
repnz
nop
cld
jae
pop
rcrb
clc
repnz
nop
cld
jae
rorb
add
mov
clc
repnz
nop
cld
jae
nop
addr16
in
nop
leave
jmp
add
pop
nop
push
dec
add
test
push
cmp
cmp
inc
add
shr
es
mov
fisubrs
push
mov
nop
leave
jmp
push
add
add
jmp
add
add
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
push
push
xchg
roll
and
jno
mov
push
mov
nop
leave
jmp
add
mov
repnz
nop
cld
jae
add
jmp
das
push
clc
repnz
nop
cld
jae
cmp
add
arpl
push
push
out
or
clc
repnz
nop
cld
jae
add
jmp
repnz
nop
cld
jae
add
mov
mov
push
mov
nop
leave
jmp
add
add
add
mov
nop
leave
jmp
in
add
add
add
add
and
mov
mov
nop
leave
jmp
arpl
add
add
nop
nop
cld
jae
pop
dec
push
add
mov
jge
clc
repnz
nop
cld
jae
add
xchg
pop
add
and
mov
push
clc
repnz
nop
cld
jae
push
and
push
add
clc
repnz
nop
cld
jae
popf
nop
add
mov
xchg
ret
push
add
add
mov
push
adc
clc
repnz
nop
cld
jae
inc
lods
sbb
mov
clc
repnz
nop
cld
jae
mov
rolb
add
pop
add
push
mov
nop
leave
jmp
arpl
das
add
add
mov
clc
repnz
nop
cld
jae
add
das
add
in
add
sbb
pop
and
roll
jge
add
rolb
inc
pop
push
clc
repnz
nop
cld
jae
add
add
add
mov
add
repnz
nop
cld
jae
add
xchg
cmp
mov
mov
nop
leave
jmp
cmp
inc
xor
push
mov
nop
leave
jmp
add
push
fmuls
lock
xchg
ret
add
iret
jl
add
clc
repnz
nop
cld
jae
add
nop
in
add
mov
mull
repnz
nop
cld
jae
pop
add
sub
add
repnz
nop
cld
jae
add
add
mov
xchg
ret
and
add
adc
cmpsb
stos
add
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
or
push
and
scas
jne
push
mov
nop
leave
jmp
dec
add
mov
clc
repnz
nop
cld
jae
add
add
std
les
dec
sub
inc
add
add
add
popf
jae
into
pop
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
add
rolb
jg
jge
clc
repnz
nop
cld
jae
add
add
cmp
mov
xchg
ret
add
mov
cmp
add
loopne
call
in
nop
leave
jmp
jmp
xchg
add
jae
mov
clc
repnz
nop
cld
jae
in
testb
addr16
cwtl
mov
clc
repnz
nop
cld
jae
add
rcrb
jae
and
push
mov
xchg
ret
lcall
popa
push
sub
clc
repnz
nop
cld
jae
cmp
pop
add
add
jmp
jmp
popf
add
notb
inc
popf
dec
fimull
mov
nop
leave
jmp
or
out
add
mov
sbb
repnz
nop
cld
jae
add
mov
data16
dec
add
add
clc
repnz
nop
cld
jae
jmp
lret
add
push
in
inc
add
rolb
mov
ds
push
mov
xchg
ret
inc
add
push
call
clc
repnz
nop
cld
jae
add
lods
push
mov
xchg
ret
lcall
add
xchg
into
mov
push
mov
nop
leave
jmp
iret
add
push
clc
repnz
nop
cld
jae
add
scas
call
clc
repnz
nop
cld
jae
add
roll
mov
mov
pop
add
clc
repnz
nop
cld
jae
add
add
nop
mov
pusha
lds
xchg
ret
xchg
add
add
add
addb
push
inc
xchg
mov
dec
push
mov
xchg
ret
add
es
add
in
add
xor
push
mov
xchg
ret
rclb
add
push
mov
xchg
ret
add
addr16
incl
nop
xchg
add
rolb
out
push
add
rcrb
psubsb
clc
repnz
nop
cld
jae
add
and
jp
movsb
push
mov
xchg
ret
push
add
add
add
nop
nop
cld
jae
add
add
rol
jecxz
mov
into
push
push
mov
xchg
ret
add
or
jae
xchg
add
mov
clc
repnz
nop
cld
jae
add
inc
jmp
pop
push
push
mov
xchg
ret
add
rcrb
or
push
mov
xchg
ret
mov
pushl
pop
div
push
mov
nop
leave
jmp
add
ljmp
enter
inc
clc
repnz
nop
cld
jae
add
and
fimuls
nop
cld
jae
add
inc
fimull
test
mov
nop
leave
jmp
inc
add
jmp
add
repnz
nop
cld
jae
add
add
lcall
nop
cld
jae
push
and
add
add
push
push
mov
xchg
ret
ds
add
add
adc
add
data16
push
add
and
add
cmp
rclb
or
inc
add
add
add
mov
xchg
ret
jmp
shl
add
testl
mov
push
mov
xchg
ret
add
add
add
lods
jae
mov
mov
nop
leave
jmp
add
ror
push
add
repnz
nop
cld
jae
add
out
imul
imul
add
add
add
add
pusha
push
mov
xchg
ret
add
testl
mov
xchg
mov
mov
pop
push
mov
xchg
ret
add
add
add
mov
xchg
ret
add
jae
ds
mov
dec
mov
push
mov
nop
leave
jmp
add
push
mulb
add
mov
mov
add
clc
repnz
nop
cld
jae
add
inc
lods
mov
pop
stos
clc
repnz
nop
cld
jae
add
inc
sti
mov
add
loop
push
mov
xchg
ret
add
mov
mov
add
repnz
nop
cld
jae
mul
lcall
add
add
add
repnz
nop
cld
jae
add
shr
inc
adc
repnz
nop
cld
jae
and
add
add
lret
int
jl
add
roll
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
add
add
mov
jmp
add
add
dec
mov
add
sbb
push
mov
xchg
ret
sbb
sbb
pop
add
lods
rclb
inc
push
mov
repnz
nop
cld
jae
xchg
add
add
dec
inc
sbb
mov
clc
repnz
nop
cld
jae
popf
addr16
add
clc
repnz
nop
cld
jae
rcrb
mov
push
mov
xchg
ret
add
out
add
dec
jmp
add
das
add
add
add
and
push
add
dec
inc
clc
repnz
nop
cld
jae
add
dec
add
nop
cld
jae
add
nop
add
add
add
add
clc
repnz
nop
cld
jae
add
push
jae
ror
clc
repnz
nop
cld
jae
stos
add
add
mov
clc
repnz
nop
cld
jae
add
arpl
add
jl
push
mov
nop
leave
jmp
mov
mov
popa
add
mov
xchg
ret
mov
cmp
add
push
mov
nop
leave
jmp
mov
testb
push
pop
fbld
mov
nop
leave
jmp
lods
jmp
in
add
add
test
inc
add
out
das
add
pop
std
add
mov
clc
repnz
nop
cld
jae
add
leave
and
push
mov
xchg
ret
stos
std
add
add
add
push
mov
xchg
ret
add
add
iret
arpl
add
and
repnz
nop
cld
jae
add
add
add
xlat
sub
nop
nop
cld
jae
mov
out
call
clc
repnz
nop
cld
jae
add
add
add
decl
push
mov
xchg
ret
mov
add
jae
xchg
add
and
repnz
nop
cld
jae
add
xor
mov
js
mov
nop
leave
jmp
mov
divb
add
mov
add
rorb
jae
das
sti
bound
mov
call
clc
repnz
nop
cld
jae
inc
inc
add
cs
push
mov
xchg
ret
add
add
rolb
and
dec
in
pushf
add
clc
repnz
nop
cld
jae
push
add
iret
stos
add
call
clc
repnz
nop
cld
jae
inc
nop
push
mov
mov
les
mov
xchg
ret
add
add
add
dec
mov
push
mov
nop
leave
jmp
cmp
decl
xchg
rolb
xchg
ret
push
inc
add
sub
faddl
xchg
ret
add
add
incl
fiaddl
clc
clc
repnz
nop
cld
jae
lcall
dec
xor
clc
repnz
nop
cld
jae
popf
in
popf
pop
shr
push
mov
nop
leave
jmp
testb
mov
push
clc
repnz
nop
cld
jae
and
roll
push
push
mov
xchg
ret
add
add
and
xchg
add
nop
nop
cld
jae
add
add
testb
leave
clc
repnz
nop
cld
jae
mov
add
add
mov
clc
repnz
nop
cld
jae
std
data16
add
push
mov
nop
leave
jmp
mov
add
sub
repnz
nop
cld
jae
add
nop
add
and
push
mov
xchg
ret
add
add
clc
repnz
nop
cld
jae
data16
arpl
add
clc
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
add
mov
stos
pop
add
hlt
rolb
xchg
ret
add
das
pop
add
je
es
cmp
jbe
push
mov
nop
leave
jmp
add
add
sub
add
in
nop
leave
jmp
in
add
divl
xor
add
push
mov
nop
leave
jmp
add
add
add
add
repnz
nop
cld
jae
xchg
add
clc
repnz
nop
cld
jae
add
add
add
sbb
repnz
nop
cld
jae
idiv
mov
incl
or
push
mov
nop
leave
jmp
add
add
movb
cmp
jb
push
mov
nop
leave
jmp
add
daa
pop
mov
push
mov
nop
leave
jmp
popf
mov
mov
dec
cmp
repnz
nop
cld
jae
data16
pop
add
inc
and
mov
imul
push
mov
nop
leave
jmp
add
add
add
add
xchg
inc
jmp
mov
clc
repnz
nop
cld
jae
and
inc
mov
add
push
mov
nop
leave
jmp
add
pop
add
cmp
mov
rep
clc
repnz
nop
cld
jae
mov
xchg
stos
inc
add
repnz
nop
cld
jae
dec
pop
push
add
add
jl
adc
nop
nop
cld
jae
add
cmp
add
add
je
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
add
add
add
nop
add
push
mov
xchg
ret
jae
popf
add
pop
cmp
push
mov
nop
leave
jmp
push
mov
push
lock
in
nop
leave
jmp
add
nop
mov
popa
ljmp
cld
jae
add
pop
mov
ja
clc
repnz
nop
cld
jae
popf
mov
rolb
mov
mov
in
nop
leave
jmp
add
cmp
mov
nop
leave
jmp
lcall
rolb
or
nop
nop
cld
jae
sbb
add
add
mov
clc
repnz
nop
cld
jae
cmp
dec
cmpl
push
mov
nop
leave
jmp
lods
arpl
add
add
xchg
int
mov
sub
repnz
nop
cld
jae
popf
add
push
add
cld
je
push
mov
nop
leave
jmp
and
movzwl
clc
repnz
nop
cld
jae
or
movb
lods
mov
clc
repnz
nop
cld
jae
das
and
rclb
pop
fldl
xchg
ret
add
pop
add
repz
repnz
nop
cld
jae
add
das
add
add
add
clc
repnz
nop
cld
jae
das
inc
shll
imul
clc
repnz
nop
cld
jae
shlb
lcall
out
clc
repnz
nop
cld
jae
cmp
push
mov
nop
leave
jmp
add
add
dec
mov
clc
repnz
nop
cld
jae
nop
add
shl
pop
push
mov
xchg
ret
add
dec
popf
movb
mov
push
mov
nop
leave
jmp
incl
add
add
push
mov
xchg
ret
popf
mov
add
mov
ds
pop
clc
repnz
nop
cld
jae
add
add
aad
or
ja
outsb
je
repnz
nop
cld
jae
add
add
fldl
dec
rolb
xchg
ret
dec
add
testl
mov
clc
repnz
nop
cld
jae
dec
arpl
rolb
mov
clc
repnz
nop
cld
jae
pop
lods
add
rolb
and
push
mov
nop
leave
jmp
add
add
add
push
clc
repnz
nop
cld
jae
add
add
cmp
xchg
pop
push
mov
xchg
ret
shlb
idivl
push
mov
xchg
ret
add
shrb
and
push
mov
nop
leave
jmp
add
movb
nop
add
mov
push
mov
xchg
ret
add
push
add
push
mov
nop
leave
jmp
add
add
add
push
add
lahf
mov
clc
repnz
nop
cld
jae
add
cmpsb
and
clc
repnz
nop
cld
jae
add
mov
out
ret
clc
repnz
nop
cld
jae
jmp
add
add
fs
add
add
repnz
nop
cld
jae
add
scas
push
clc
repnz
nop
cld
jae
add
cmp
add
jmp
and
add
dec
iret
add
add
adc
ja
fs
mov
nop
leave
jmp
add
dec
lods
add
je
clc
repnz
nop
cld
jae
add
add
add
hlt
add
loope
inc
add
jae
mov
add
fiaddl
mov
xchg
ret
mov
add
add
add
add
add
dec
add
add
incb
stos
test
mov
and
clc
repnz
nop
cld
jae
rclb
add
push
pop
push
clc
repnz
nop
cld
jae
add
add
mov
sarb
cld
jae
add
cmp
mov
add
mov
aaa
adc
mov
clc
repnz
nop
cld
jae
add
pop
jecxz
push
clc
repnz
nop
cld
jae
nop
pop
add
add
add
jg
push
mov
xchg
ret
pop
add
mov
mov
mov
clc
repnz
nop
cld
jae
popf
add
rorl
rolb
repnz
nop
cld
jae
dec
add
mov
mov
repnz
nop
cld
jae
pop
add
clc
repnz
nop
cld
jae
divl
add
add
mov
test
repnz
nop
cld
jae
add
pop
lea
repnz
nop
cld
jae
add
in
add
add
pop
clc
repnz
nop
cld
jae
in
add
inc
or
roll
repnz
nop
cld
jae
add
mov
mov
mov
xchg
ret
push
xchg
add
add
add
dec
push
clc
repnz
nop
cld
jae
cmp
incl
add
aad
dec
mov
clc
repnz
nop
cld
jae
and
add
mov
hlt
and
mov
mov
clc
repnz
nop
cld
jae
add
mov
mov
add
clc
repnz
nop
cld
jae
rorb
jl
add
clc
repnz
nop
cld
jae
add
add
add
nop
leave
jmp
add
add
add
lcall
clc
repnz
nop
cld
jae
or
add
mov
mov
push
mov
xchg
ret
add
add
add
add
mov
add
leave
jmp
and
js
clc
repnz
nop
cld
jae
add
sarb
rolb
sti
mov
push
mov
xchg
ret
lcall
dec
cli
cmp
push
mov
nop
leave
jmp
rolb
dec
loopne
mov
add
popa
add
mov
xchg
ret
add
add
xchg
add
in
nop
leave
jmp
add
add
mov
jns
mov
jecxz
and
cmp
dec
add
dec
add
push
sub
add
nop
nop
cld
jae
rolb
out
addb
inc
push
add
or
in
nop
leave
jmp
stos
iret
add
add
push
pop
push
clc
repnz
nop
cld
jae
jae
add
add
and
clc
repnz
nop
cld
jae
push
mov
out
imul
cmp
repnz
nop
cld
jae
add
add
nop
arpl
lods
and
imul
nop
nop
cld
jae
push
add
nop
out
add
mov
xchg
ret
rcrb
add
add
add
in
nop
leave
jmp
lods
add
pop
sbb
shll
clc
repnz
nop
cld
jae
pop
add
rcl
add
dec
outsl
popa
fs
repnz
nop
cld
jae
add
inc
add
shr
clc
repnz
nop
cld
jae
movb
add
std
incb
sar
repnz
nop
cld
jae
add
add
push
stos
inc
popl
nop
leave
jmp
add
popf
add
add
mov
nop
leave
jmp
mov
add
jl
mov
push
mov
xchg
ret
popf
add
lcall
add
cmp
jae
mov
nop
leave
jmp
add
add
inc
inc
jl
push
mov
xchg
ret
and
jmp
add
in
dec
pop
clc
repnz
nop
cld
jae
xchg
or
roll
add
nop
cld
jae
addr16
add
add
mov
insb
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
add
std
popf
addr16
popf
pop
mov
repnz
nop
cld
jae
add
mov
pop
push
pushl
call
mov
cmp
ret
lcallw
mov
mov
xchg
ret
add
add
add
mov
and
push
mov
xchg
ret
add
nop
lcall
call
in
nop
leave
jmp
add
or
cwtl
add
push
mov
xchg
ret
add
sti
inc
popf
add
push
mov
nop
leave
jmp
arpl
add
push
add
repnz
nop
cld
jae
add
inc
add
add
repnz
nop
cld
jae
mov
sbb
sub
xlat
inc
add
std
rolb
mov
push
mov
xchg
ret
add
push
pop
push
test
pop
clc
repnz
nop
cld
jae
add
add
add
add
in
mov
clc
repnz
nop
cld
jae
add
add
add
fsts
in
add
add
gs
add
add
add
ja
mov
clc
repnz
nop
cld
jae
jl
inc
rclb
in
xor
gs
add
pop
xor
fsts
add
push
mov
add
push
mov
add
add
rolb
mov
or
xor
xchg
add
add
mov
mov
mov
incl
dec
insb
fidivs
dec
mov
mov
imull
lds
aad
hlt
fstp
clc
fnstenv
mov
adc
mov
add
add
mov
jge
addb
mov
mov
add
jne
and
cmpsb
xor
mov
adc
inc
and
mov
mov
jne
xor
mov
mov
or
fldenv
mov
scas
adc
mov
arpl
mov
rolb
mov
add
stos
stos
pushf
xchg
sahf
push
sbb
test
stc
add
mov
movsb
xchg
add
lret
insb
mov
add
mov
or
push
mov
sub
jns
pop
push
mov
mov
int
add
inc
js
ret
cmc
or
imul
jg
add
aas
mov
aam
lods
bound
mov
adcl
add
jmp
or
add
lcall
add
xchg
or
cwtl
outsb
xchg
ljmp
mov
es
mov
push
push
jmp
add
mov
sti
push
jno
push
adc
mov
push
int
dec
test
stc
jae
xchg
xor
dec
mov
mov
xchg
sub
xchg
inc
add
cmp
fmull
add
mov
sub
add
leave
xor
add
dec
pop
xor
mov
fcmovu
lods
jbe
inc
aam
add
test
rolb
mov
ljmp
clc
lret
xor
mov
mov
add
scas
rolb
mov
mov
loop
mov
add
rcll
ljmp
sbb
jge
mov
repz
add
add
jecxz
add
and
mov
test
test
and
mov
roll
add
test
shrl
sub
mov
testb
inc
cmc
addb
mov
mov
add
ror
add
sub
lods
sti
adc
mov
add
mov
fimull
pop
js
add
pop
dec
pop
xor
movsl
pop
push
xor
or
addl
call
sbb
loope
adc
int
pusha
add
das
xor
mov
jmp
pop
add
mov
add
mov
xor
mov
jge
sub
or
add
ret
aaa
out
repnz
add
jne
test
add
jnp
xchg
add
push
adc
addb
pop
rolb
mov
outsb
push
add
mov
jp
jge
inc
push
jmp
adc
mov
add
negb
ds
add
mov
xor
std
push
add
mov
add
fdivrs
push
mov
jge
add
ret
stc
pop
sub
add
mov
mov
add
pop
data16
clc
mov
or
hlt
sub
xchg
add
push
ret
test
pop
jge
pop
mov
mov
sbb
sbb
int
adc
mov
mov
daa
fwait
push
aas
and
cli
mov
mov
inc
add
jl
iret
add
ret
add
add
imul
add
sub
add
add
les
adc
and
shll
mov
cs
mov
in
adc
sysenter
fsubp
adc
mov
mov
or
shl
add
xlat
mov
mov
aam
inc
add
xchg
pop
in
adc
sar
add
mov
insb
popf
test
push
pop
push
sub
sbb
scas
dec
push
add
mov
dec
inc
fldt
dec
push
out
in
int
outsb
push
xor
mov
cltd
xor
mov
add
mov
xor
roll
outsl
adc
call
mov
mov
sbb
sbb
push
mov
sub
hlt
sbb
xor
push
add
add
decl
or
insl
or
pop
xchg
xchg
in
fmull
sub
data16
repnz
add
clc
sti
push
inc
imul
sbb
shll
or
repnz
xchg
in
xchg
ret
stc
dec
and
dec
jg
mov
mov
dec
mov
call
add
add
mov
xchg
rolb
mov
fcomp
cmp
adc
sub
add
aad
fcmovne
das
or
fldcw
in
les
add
mov
cmp
mov
xor
or
sbb
out
faddl
icebp
and
mov
cs
cmp
and
mov
shrl
mov
mov
push
ja
add
imull
add
push
outsl
dec
mov
add
lcall
lcall
pop
dec
pop
cld
mov
mov
xor
mov
pusha
add
cmpsl
or
dec
pop
sbb
add
and
mov
xchg
add
mov
add
or
xor
mov
cmp
and
push
xor
mov
and
mov
inc
out
add
movsl
call
les
mov
fimuls
add
sub
pop
pop
or
add
inc
ja
dec
fnsave
bound
mov
inc
add
rolb
mov
repnz
sub
add
jnp
gs
icebp
sub
jle
shl
fmuls
jb
mov
lods
mov
add
call
add
jbe
subl
pop
out
jp
mov
popf
icebp
mov
jb
mov
inc
rolb
mov
mov
mov
imul
pusha
add
add
add
inc
add
mov
fstpt
add
jp
es
lahf
cmp
es
mov
pop
xor
mov
or
cmp
mov
mov
add
addb
xchg
or
add
jne
adc
mov
clc
and
mov
push
adc
incb
pop
add
mov
das
nop
add
mov
push
roll
stc
dec
hlt
iret
fsubrp
cmp
notl
push
add
jl
pop
test
add
add
xchg
add
rolb
ss
int
add
mov
lret
es
jmp
add
notl
add
ret
push
lret
cmp
and
js
push
cli
push
add
add
fwait
adc
adc
popa
sub
icebp
aad
loopne
mov
pop
rolb
mov
cmp
scas
or
add
aam
clc
xchg
out
dec
cmp
mov
xchg
add
mov
add
int3
cmp
add
mov
pop
jo
mov
xchg
add
jb
mov
dec
arpl
sar
inc
dec
jp
loop
mov
aas
adc
je
stos
jp
cltd
sub
add
dec
and
lods
dec
aas
sub
push
jae
out
lea
outsb
xor
mov
add
jl
jno
aad
add
jne
add
add
ljmp
adc
inc
mov
mov
jo
mov
ss
stos
jnp
push
xchg
aad
push
outsb
mov
add
mov
add
push
add
mov
in
sub
jge
dec
imul
add
jg
mov
or
cld
cmp
xchg
pop
insl
stos
sbb
add
add
adc
push
sub
cwtl
cld
mov
mov
and
add
dec
addr16
roll
mov
movq
shll
mov
int3
pop
jge
mov
jns
add
cmc
popf
xor
sub
aaa
inc
scas
int
inc
stc
push
ss
or
add
pusha
add
add
push
imul
test
mov
adc
cmpsb
shll
movlps
mov
push
lahf
add
mov
xor
hlt
rolb
mov
sub
cvtpi2ps
add
add
mov
cwtl
stos
xchg
add
jmp
and
mov
aad
rolb
mov
mov
stc
push
mov
push
mov
add
out
push
adc
mov
mov
add
mov
hlt
pop
enter
mov
add
add
push
mov
mov
mov
add
insb
sub
or
push
push
jge
call
mov
int
add
cmp
pop
outsl
inc
sub
mov
or
add
hlt
and
add
and
test
pop
xchg
cltd
rcr
cmc
push
mov
mov
insb
push
xlat
sbb
test
fnsave
dec
mov
rolb
mov
mov
add
mov
add
add
mov
mov
cmp
add
inc
xor
cmpsb
int
int
mov
pop
out
nop
add
push
add
push
or
add
mov
test
add
sbb
cmp
addb
fwait
sbbl
popf
mov
pop
loop
mov
pop
scas
adc
sub
fdiv
add
xchg
dec
nop
add
aad
rcll
mov
sbb
xor
mov
jmp
jecxz
xchg
push
into
and
mov
push
inc
sub
mov
or
lds
mov
sbb
add
add
sbb
cltd
pushf
and
add
sti
lock
jbe
fwait
mov
mov
pop
addr16
mov
mov
add
mov
xor
mov
testl
repnz
jo
mov
inc
add
ret
push
dec
dec
pusha
add
or
loope
jbe
aaa
lea
add
and
mov
clc
icebp
sahf
pushf
addb
rolb
mov
add
es
repnz
cmp
ret
mov
aad
dec
je
push
pop
cmp
out
fwait
dec
jns
lods
addb
sub
ret
mov
clc
push
pop
es
add
add
ret
loope
out
int
add
dec
add
mov
xlat
inc
inc
dec
jle
dec
std
imul
scas
es
add
lea
mov
jg
add
test
xchg
xlat
sub
cmc
dec
jl
add
mov
mov
add
add
pop
pusha
add
into
xchg
scas
dec
ret
movsb
scas
mov
fdivl
or
cs
pusha
add
sub
xor
push
addl
pop
and
mov
lea
add
mulb
cmp
push
shrl
inc
add
sarl
add
mov
ss
mov
jmp
lcall
mov
xor
cmp
dec
dec
pop
cltd
fnsave
add
scas
inc
sbb
pop
divb
cmp
ja
stc
dec
mov
adc
add
mov
faddl
gs
dec
notb
mov
push
test
push
lret
out
sub
xchg
out
ja
aaa
rolb
inc
push
fistps
inc
imul
mov
or
add
jbe
addb
jbe
pop
push
add
lret
mov
andl
xor
pusha
add
sahf
or
or
loope
or
ror
add
pop
and
adc
mov
movsb
insb
rolb
sub
sbb
mov
cwtl
hlt
test
xchg
add
dec
jge
lcall
mov
add
sub
push
mov
test
add
mov
ja
or
pop
fdivrl
and
mov
aam
add
dec
fnstcw
pop
rcrl
add
movsl
je
cmc
mov
test
imul
mov
iret
xchg
int3
aam
cmc
xor
add
add
add
sbbl
aas
jb
mov
cmpsl
pop
popa
xor
sbb
add
add
fnstcw
xchg
mov
add
push
add
sbb
dec
jecxz
rolb
call
fs
pop
and
in
jp
test
sub
cs
sbb
sub
push
adc
push
sub
int
mov
add
push
stos
lea
add
loop
mov
jp
or
pushf
push
in
jl
add
je
sub
addb
inc
lret
bound
mov
add
push
add
adc
mov
ljmp
test
js
scas
addb
enter
inc
aas
out
xchg
pop
popa
xchg
add
lods
and
leave
inc
pop
sbb
mov
mov
idivl
daa
pushf
cmpsb
jb
mov
xchg
hlt
mov
pop
sbb
add
rolb
mov
dec
pop
std
bound
mov
leave
aaa
test
dec
in
ja
sub
aaa
out
loopne
mov
inc
push
xchg
xchg
movsl
imul
mov
pop
bound
mov
adc
mov
std
adc
mov
add
nop
add
add
push
inc
add
mov
pop
sbbl
stos
or
in
add
xor
jmp
addb
dec
adc
add
subl
add
arpl
repnz
add
stos
nop
add
mov
mov
inc
push
aaa
rorl
rcrl
test
dec
xchg
add
int3
or
sar
push
arpl
jecxz
add
push
jb
mov
scas
imul
arpl
sbb
and
mov
or
xchg
xchg
out
push
ljmp
imul
mov
mov
add
mov
cld
adc
fs
cmpsl
and
mov
cmp
mov
adc
mov
ficompl
fstps
mov
mov
idiv
in
pop
mov
mov
add
and
mov
sbb
add
pop
insb
xchg
mov
inc
inc
jmp
lock
jg
inc
cmc
push
add
xchg
imul
loope
int3
addl
mov
add
fmul
test
mov
mov
pop
add
mov
in
test
scas
pop
mov
add
mov
or
decb
dec
dec
dec
push
xchg
add
cmpsb
mov
push
or
mov
or
jnp
inc
ja
loop
mov
aaa
or
dec
cmpsl
and
mov
decl
gs
out
aam
out
inc
add
dec
sub
inc
pop
cwtl
pop
mov
mov
xlat
mov
mov
jb
mov
mov
pop
or
push
mov
xchg
add
mov
add
and
add
add
add
out
daa
dec
xor
mov
sbb
mov
dec
jbe
movsb
adc
outsl
faddl
mov
push
call
lcall
mov
add
clc
mov
add
mov
cmpsb
jae
movsb
jp
sub
sbb
or
mov
pop
jecxz
xchg
iret
adc
sbb
into
xor
sub
xlat
push
add
jnp
add
mov
add
dec
iret
sbb
or
mov
add
jmp
add
cmp
sbb
push
jb
mov
repz
movb
mov
mov
or
movsb
rcr
insb
iret
mov
mov
add
or
jns
push
add
mov
fwait
mov
mov
cmpsb
push
add
mov
cmp
inc
add
mov
aas
out
enter
pop
mov
mov
stos
push
xor
mov
jns
add
sub
fimull
cmc
nop
add
add
xchg
inc
add
jle
pop
insb
sbb
mov
mov
aam
push
pop
pop
jmp
add
loop
mov
push
enter
lret
push
add
ret
jno
jne
jl
add
rolb
mov
and
mov
leave
dec
fsts
xchg
and
add
cmp
mov
int
aam
rcr
icebp
sbb
cmp
jns
cld
movsl
add
hlt
cmp
out
les
nop
add
cld
gs
add
push
pop
arpl
mov
repz
out
fsubp
add
hlt
bsf
into
popf
in
xlat
xor
mov
xchg
in
mov
cmc
loope
js
pop
push
add
gs
push
add
mov
mov
and
mov
add
add
fsubrs
xchg
add
inc
mov
mov
pop
insl
testl
adc
mov
je
add
add
sub
mov
add
adc
mov
and
jmp
jle
xchg
xor
mov
mulb
scas
pop
iret
fdivs
mov
xchg
dec
push
jns
dec
mov
pop
ja
dec
outsb
test
xlat
rolb
mov
fcomi
ja
movsb
xlat
adc
stc
pop
rorl
and
pop
jbe
in
out
add
addb
ljmp
ret
dec
int3
xchg
test
add
dec
into
jle
adc
add
ret
outsb
repz
xlat
jge
jge
aas
test
aaa
xor
mov
mov
bound
mov
int
in
mov
rolb
mov
in
jge
int3
mov
add
mov
xor
stos
fidivrs
enter
aaa
int
add
push
cltd
and
fisttpll
aam
sbb
std
aad
arpl
lahf
daa
mov
dec
pop
sbb
mov
int3
insl
add
mov
nop
add
xor
mov
adcl
mov
or
add
mov
add
test
pop
out
mov
mov
test
xchg
ficoml
sub
push
add
push
sahf
stos
sbb
fbstp
dec
gs
xor
cmp
ja
out
test
pop
xchg
mov
dec
inc
mov
loope
jl
jecxz
notb
jae
push
cli
fsts
lcall
loop
mov
mov
dec
xlat
xor
mov
mov
mov
push
cmp
add
add
mov
adc
sub
add
mov
jno
lcall
je
mov
test
add
adc
pop
cmp
add
mov
mov
aas
adc
pop
icebp
pop
add
int3
aam
ret
adc
mov
add
xlat
pop
push
jecxz
cmp
mov
das
pop
or
mov
clc
imul
xchg
push
mov
dec
stos
sub
mov
popf
mov
add
icebp
jp
nop
add
pushf
inc
mov
sub
push
push
jge
add
outsl
add
inc
sbb
rolb
jecxz
add
ja
fidivrs
push
stos
and
dec
scas
sub
add
jge
mov
mov
add
aad
lods
xchg
std
aas
gs
idivl
push
icebp
cmp
ret
gs
addb
ljmp
mov
cltd
mov
fimull
mov
int3
ljmp
add
mov
addb
sub
loopne
mov
jecxz
push
xchg
hlt
outsb
test
mov
mov
mov
sbb
mov
movsb
sbb
add
add
aas
daa
add
mov
nop
add
mov
mov
clc
rolb
dec
test
jge
add
add
add
movntq
sub
pop
jnp
addb
outsl
daa
fstpl
adc
loop
mov
popf
fmul
sub
ret
addb
fisttps
or
lods
addr16
ret
hlt
sti
adc
mov
cmp
shl
sub
rolb
mov
push
ja
push
mov
fs
add
cmp
std
jo
mov
in
and
mov
xchg
inc
in
ljmp
xor
xor
stos
fnsave
xchg
add
mov
dec
jb
mov
mov
mov
cltd
inc
add
or
mov
mov
mov
cmp
pop
lret
pop
xor
add
xchg
xchg
divl
and
jo
mov
mov
mov
pop
movsl
inc
or
aaa
inc
fisubs
insb
and
mov
sbb
add
mov
cmp
sbb
outsl
dec
mov
icebp
add
push
fcomip
add
push
jmp
xlat
out
loop
mov
add
add
mov
add
push
xchg
mov
nop
add
out
add
xchg
add
data16
mov
sub
mov
sbb
jge
hlt
loopne
mov
dec
sub
jle
fstps
add
sub
jns
imul
or
mov
mov
add
adcl
mov
lret
mov
stos
jmp
jne
add
push
aam
inc
xor
mov
filds
mov
addr16
insl
cmpsb
cmp
sub
insb
and
mov
add
leave
push
mov
mov
lret
mov
mov
addr16
sahf
dec
fistl
or
add
mov
and
push
addb
insb
lock
mov
add
loope
mov
mov
sub
mov
add
mov
xlat
inc
negl
ficoms
dec
mov
ljmp
test
mov
cld
lods
out
xlat
pop
clc
cmp
or
movsl
jl
mov
idivb
mov
mov
inc
adc
mov
cmp
push
rolb
mov
out
adc
inc
fs
repnz
aas
loop
mov
das
daa
pop
jbe
jbe
lret
inc
sub
mov
rolb
jae
cld
sub
aas
jns
loop
mov
add
mulb
ret
mov
jae
add
inc
add
add
mov
adc
mov
mov
add
mov
xchg
add
fdivs
and
mov
lcall
pop
xchg
adc
inc
sbb
test
into
cwtd
adc
out
int
push
jecxz
inc
jg
pop
xchg
or
add
imul
mov
sbb
add
icebp
or
or
sbb
mov
fs
enter
into
jne
sbb
pop
popa
sbb
add
add
add
and
mov
addb
test
add
scas
pop
pop
aam
inc
add
lods
jl
and
mov
sub
jno
pusha
add
jecxz
stos
das
inc
jne
mov
add
mov
fnsetpm(287
mov
mov
outsl
out
mov
and
pushf
mov
xchg
ret
push
add
ljmp
cmp
arpl
inc
xor
mov
push
int3
cmp
add
mov
add
fcompl
mov
lea
ficompl
insb
and
mov
clc
nop
add
sahf
pop
xchg
pop
sbb
pushf
cmp
jge
in
scas
push
mov
mov
add
mov
scas
ljmp
cmp
add
leave
repnz
and
mov
push
mov
mov
shl
xor
mov
jge
sbb
xchg
jmp
xor
fs
mov
xlat
test
scas
mov
bound
mov
in
jmp
push
or
sbb
xor
mov
iret
jge
add
and
aas
mov
cld
fistl
repnz
mov
nop
add
mov
inc
inc
add
scas
mov
pushf
push
movsl
mov
mov
xor
add
push
xchg
add
pop
xchg
rol
sub
mov
add
nop
add
mov
inc
iret
fisttpl
into
loop
mov
mov
jmp
insb
pop
cwtl
push
addb
in
ds
push
idivb
arpl
sub
movsl
iret
lahf
xchg
lea
push
add
or
test
inc
into
sub
add
dec
andl
add
int
add
mov
rolb
mov
fcmove
addb
mov
jmp
mov
jnp
xor
mov
jno
mov
jne
add
jo
mov
cld
bswap
and
xor
cli
lretw
mov
hlt
mov
add
add
add
add
or
add
cmp
cld
jl
xchg
add
or
mov
cmp
add
rcll
pop
cwtl
addb
mov
jl
add
dec
push
pushf
in
mov
pop
mov
movsl
mov
mov
sub
ss
test
adc
sub
push
add
mov
mov
mov
push
lret
xor
mov
cmp
add
jno
out
push
xchg
sub
test
popf
inc
add
push
movsl
addb
pop
ret
mov
add
pop
push
inc
sub
xchg
xchg
xchg
xchg
out
rolb
leave
mov
mov
mov
mov
gs
pusha
add
inc
add
sub
mov
mov
stc
sub
adc
mov
mov
imul
jmp
nop
add
mov
lds
add
xchg
repz
and
mov
pop
ror
mov
add
push
fcoms
mov
into
jae
xor
or
cs
scas
push
add
mov
xor
clc
mov
push
xchg
bound
mov
repnz
push
sbb
je
sub
add
jl
ljmp
ret
imul
pop
mull
test
adc
bound
mov
je
cli
adc
aaa
or
add
lcall
mov
addb
mov
lds
mov
mov
and
aaa
xor
mov
inc
cld
or
ljmp
mov
add
add
xchg
xchg
add
cmp
mov
inc
mov
and
mov
inc
add
mov
sub
call
iret
cld
fcoml
je
js
add
adc
test
dec
push
nop
add
mov
movsb
mov
add
daa
pop
or
lahf
fisubs
mov
addb
push
mov
addb
push
mov
add
outsb
andl
inc
leave
sub
mov
rolb
mov
add
push
add
pop
push
xlat
push
and
mov
and
sub
mov
xlat
mov
jae
std
inc
jo
mov
addb
adc
mov
jno
mov
mov
pop
add
stc
fsubs
add
cmpsb
lds
mov
push
clc
leave
sbb
sub
add
xor
mov
add
mov
rorl
ja
pop
mov
pop
out
sahf
andl
dec
mov
jge
cmp
add
adc
dec
repnz
stos
addb
call
ret
repnz
xor
jcxz
mov
mov
fldl
sbb
dec
mov
mov
pop
or
sbb
test
add
mov
jl
pop
cmp
jne
add
add
mov
mov
cmp
jbe
add
nop
add
xchg
adc
mov
push
cwtl
clc
xor
sub
sub
imul
mov
add
movsl
xchg
fldenv
std
xchg
repz
adc
mov
fcoms
mov
std
jae
hlt
pop
addr16
rolb
mov
mov
movsb
jecxz
cs
mov
movd
mov
add
and
lods
and
loope
xchg
loop
mov
rolb
mov
pusha
add
add
mov
add
mov
add
movsb
popa
ficompl
add
xchg
ljmp
loop
mov
mov
xor
pop
or
inc
arpl
pop
repnz
mov
or
lret
mov
cmpsb
push
adc
add
iret
cmp
scas
movsb
rolb
mov
and
mov
adc
jg
push
cmp
push
add
out
nop
add
add
mov
adc
mov
addr16
adc
push
push
pop
xchg
adc
out
hlt
les
jbe
add
jmp
or
xor
mov
jge
xchg
cld
push
push
dec
fldcw
and
insl
test
push
add
mov
stos
test
xor
sub
jns
mov
mov
add
add
imul
fbld
movsl
inc
cmpsb
xchg
dec
mov
je
jl
dec
mov
mov
mov
adc
mov
mov
mov
mov
mov
lcall
insb
hlt
cmp
gs
and
mov
mov
in
add
jmp
mov
add
add
dec
adc
mov
mov
clc
leave
fdivrs
cmp
insl
dec
mov
stc
je
repz
lods
mov
dec
xor
mov
pushf
inc
or
sbb
add
mov
fwait
inc
xchg
add
ljmp
inc
add
imul
mov
xchg
mov
or
xor
add
inc
pop
fnstenv
jge
add
mov
stos
int3
ds
insb
add
mov
sub
sbb
xlat
into
mov
cmc
int3
pusha
add
out
push
cmpsl
jl
loopne
mov
adc
push
std
js
xor
mov
mov
sub
push
ret
jecxz
pop
cs
movsl
decl
fldl
mov
popa
rolb
mov
clc
lcall
lea
dec
mov
add
inc
add
add
xchg
fstp
aaa
add
cmpsb
movsb
and
ret
jo
mov
pop
jns
xchg
js
mov
dec
ret
push
push
mov
jp
add
cmpsb
sahf
adc
add
xor
mov
xorps
ljmp
cmp
cmpsl
test
add
add
sbb
dec
inc
jmp
lods
in
mull
add
cmp
ljmp
fdivrl
mov
add
pushl
add
mov
loopne
mov
popf
mov
add
mov
xor
adc
xchg
pop
xchg
stc
movsl
push
addb
add
mov
jne
std
sbb
jmp
add
mov
or
scas
rolb
mov
pop
mov
mov
push
add
mov
add
xchg
movsb
and
mov
imul
xchg
lcall
add
mov
adc
dec
or
add
xor
mov
mov
add
pop
out
addl
mov
rolb
mov
out
test
cmp
incl
subl
dec
push
cmp
jb
mov
int
jmp
dec
mov
jne
or
or
repz
cmp
int
mov
ret
adc
mov
loop
mov
push
and
pusha
add
or
cltd
jb
mov
in
es
fcomps
pop
mov
add
pop
jns
movsb
pop
xor
sbb
rcll
cltd
pop
incl
insl
mov
mov
les
pop
sbb
or
outsl
add
mov
mov
test
mov
inc
and
cmp
mov
mov
les
mov
add
iret
jae
repz
mov
pop
push
std
ret
xchg
fs
add
cwtl
xchg
jmp
fidivrs
rolb
mov
push
add
dec
dec
loopne
mov
cmpsb
or
add
sbb
pop
push
jae
add
mov
mov
mov
sub
out
add
inc
jbe
cmp
dec
ficompl
shll
or
add
jge
test
or
mov
mov
add
enter
addb
mov
cmpsl
lods
pop
adc
add
aad
dec
pop
pushf
push
hlt
mov
add
mov
push
xchg
dec
stos
push
xor
jns
cli
push
mov
adc
mov
or
pop
enter
inc
add
pusha
add
add
lretw
dec
jle
jnp
xchg
rolb
mov
mov
inc
xchg
jge
mov
inc
inc
push
add
stc
insl
jb
mov
pop
es
add
mov
mov
add
mov
add
inc
or
into
ret
dec
mov
xor
sub
in
mov
or
mov
jae
mov
std
sub
jmp
dec
mov
inc
add
add
lret
sbb
rolb
and
jae
and
mov
or
mov
mov
mov
mov
pop
lcall
add
dec
xchg
push
add
lods
sbb
daa
adc
or
add
loopne
mov
mov
icebp
cmpsb
sbb
sbb
mov
pop
adc
mov
add
mov
add
mov
mov
mov
mov
repz
aas
rcll
mov
add
add
add
inc
pop
jnp
push
dec
mov
js
add
lds
add
dec
loopne
mov
xlat
shl
ds
add
xchg
cmpsl
in
push
xchg
or
lahf
mov
mov
loop
mov
pop
rolb
mov
mov
mov
imulb
mov
mov
daa
or
add
loop
mov
add
movb
add
mov
les
xchg
adc
xchg
add
fwait
xchg
repnz
mov
popf
pop
adc
mov
sub
hlt
movsl
pop
sahf
int3
pushf
inc
pusha
add
mov
push
inc
gs
adc
aad
icebp
js
mov
nop
add
rolb
push
lods
insb
daa
mov
pusha
add
repz
push
and
add
faddp
sti
mov
mov
xor
movsl
rolb
test
mov
mov
bound
mov
mov
mov
testl
daa
imul
das
int
push
ja
fidivs
pusha
add
out
mov
jg
call
cmp
mov
dec
dec
push
adc
cwtl
fisttpll
add
adc
xor
mov
jo
mov
mov
and
mov
popf
xchg
lret
mov
add
mov
sub
xchg
add
sub
popa
scas
fcmovu
cmp
idivl
sbb
xor
imul
sub
arpl
hlt
jno
ds
aad
add
and
push
addb
mov
cmc
cld
push
arpl
add
xor
data16
imull
arpl
pusha
add
lahf
rolb
aad
adc
cmp
push
cmp
stc
dec
lahf
mov
lds
push
add
jns
cwtl
pop
jl
inc
xor
bound
mov
mov
addb
out
ja
das
loopne
mov
add
lods
test
dec
ja
jecxz
add
add
push
clc
outsl
cli
dec
and
cld
sub
enter
nop
add
mov
addb
xor
mov
pop
adc
mov
sub
xchg
push
add
lret
ss
jnp
jle
jo
mov
fidivl
ror
or
or
inc
lret
mov
imul
pop
data16
add
dec
mov
xor
mov
repnz
mov
jle
add
in
xlat
dec
mov
sub
add
mov
fildll
xor
fldenv
fmull
fisubrl
jecxz
jge
dec
inc
pop
jne
lahf
repnz
cmpsb
inc
roll
lret
test
xchg
out
add
imul
mov
adc
mov
push
add
scas
xor
add
repz
add
divl
and
sbb
mov
or
add
sbb
in
outsb
sub
add
nop
add
addb
cmpsl
out
je,pt
add
mov
mov
xor
fiadds
test
pop
fwait
addl
jecxz
xchg
mov
inc
add
pop
cmpl
inc
jne
lea
int3
ds
int3
jmp
outsl
dec
leave
adc
push
pushf
mov
mov
mov
addb
fwait
sahf
fld
push
inc
push
push
gs
stos
mov
mov
cwtl
dec
mov
mov
or
mov
add
add
fwait
scas
clc
push
movsl
ds
push
jmp
xchg
or
cmp
shrl
fsubr
clc
loop
mov
in
imul
jge
pop
dec
movsb
xchg
dec
cmc
jp
out
fwait
into
add
lods
xchg
cmp
add
mov
andl
sbb
add
mov
fwait
out
mov
or
add
int
js,pn
stos
addb
push
push
loop
mov
ss
xchg
cmovle
add
mov
xor
mov
add
xor
dec
push
cli
pop
outsb
imul
inc
add
push
stc
addb
adc
adc
mov
add
cmpsb
push
incl
add
jo
mov
sub
add
jle
jge
mov
cmp
push
mov
mov
inc
add
mov
in
insl
push
arpl
sub
int3
fcompl
and
into
sub
call
add
fs
jle
aam
mov
mov
sti
adc
jle
add
adc
mov
adc
adc
mov
adc
push
inc
mov
scas
push
xor
add
mov
mov
out
enter
push
cs
adc
mov
push
pusha
add
add
add
mov
mov
mov
into
mov
lahf
insb
out
movb
jns
add
daa
dec
arpl
mov
mov
add
xchg
push
sbb
test
pop
das
into
fbld
push
mov
ret
addb
inc
dec
hlt
addr16
ret
push
rolb
mov
out
sahf
adc
xchg
add
pop
xor
mov
inc
sti
jecxz
cmp
fldenv
cmp
std
add
and
int3
stos
addb
push
insl
mov
inc
add
stos
push
int3
cmpsb
in
add
nop
add
xchg
mov
addb
sbb
mov
pop
rolb
xchg
mov
adc
mov
add
enter
nop
add
add
int3
mov
mov
out
inc
add
add
sub
vpmacsdql
cmp
pop
push
loopne
mov
cs
popf
cmpsl
xchg
add
add
mov
push
xchg
push
in
out
jle
push
das
mov
xor
mov
push
add
dec
hlt
cld
js
sbb
aaa
sbb
pop
rcrl
mov
sub
ficoms
imul
push
cmp
mov
mov
add
out
pop
cmc
xor
daa
fdivs
jmp
push
ret
lds
sub
mov
dec
mov
sub
push
push
dec
xchg
inc
cmpsl
lods
xlat
add
mov
cmc
fwait
jbe
cmp
jo
mov
mov
lods
shll
in
xchg
fs
enter
jg
stos
out
add
add
cmpsb
icebp
push
sub
add
leave
jae
pop
mov
mov
mov
mov
xchg
xchg
xchg
push
add
test
mov
lods
inc
mov
add
mov
mov
clc
jl
inc
and
add
iret
hlt
in
add
add
fstps
add
jg
dec
jbe
add
inc
pop
xor
adc
mov
mov
sub
movsb
xchg
pop
jns
jno
inc
mov
add
outsb
jnp
add
mov
adc
mov
dec
xor
add
mov
inc
push
popa
fcomps
movsb
pop
lret
fnstenv
adc
mov
mov
xor
fcmovnu
push
rolb
pop
es
jmp
call
mov
add
add
mov
mov
dec
sbb
loopne
mov
mov
mov
push
ret
bound
mov
mov
xor
mov
add
cmp
mov
mov
dec
mov
clc
ficoml
cmpsb
ret
mov
xchg
mov
add
imul
xchg
mov
add
add
in
xchg
out
cmp
jecxz
dec
add
sbb
add
pop
jp
in
and
push
fwait
xchg
add
addb
push
push
inc
pop
insb
adc
mov
insb
inc
xchg
stos
cmp
adc
mov
add
inc
arpl
aas
mov
fidivrl
mov
fisttpll
sub
mov
adc
mov
sub
pop
gs
int3
nop
add
ljmp
sub
push
jmp
or
loopne
mov
mov
cmp
clc
insb
cmpsb
in
mov
inc
add
std
or
mov
mov
addb
idivb
adc
mov
jnp
xchg
mov
xor
mov
movb
cmpsl
imul
xor
mov
mulb
mov
mov
mov
rol
mov
mov
decl
mov
add
mov
add
add
add
mov
add
adc
mov
pop
jle
add
add
pop
dec
pop
mov
sub
add
mov
add
aam
adc
loopne
mov
add
pop
divl
gs
add
pushf
mov
lahf
jns
or
mov
popa
xor
jp,pn
cmpsl
xchg
jmp
add
dec
dec
adc
mov
add
mov
mov
pusha
add
sbb
add
loopne
mov
mov
dec
xchg
rolb
mov
bound
mov
lahf
adc
mov
xchg
jnp
dec
add
dec
arpl
bswap
bound
mov
icebp
ljmp
sbb
and
mov
xchg
clc
jl
or
mov
in
divb
cmp
dec
lcall
and
into
mov
sbb
aam
stos
add
add
sub
mov
pop
fisttpll
add
pop
outsl
fcomp
pop
xchg
inc
xor
clc
mov
sbb
add
dec
adc
dec
repnz
cmp
int3
cmp
int
dec
lret
push
sahf
cs
addb
mov
test
loope
lock
in
lret
bound
mov
ret
fwait
cmpsl
ja
loope
and
add
test
add
mov
aam
or
add
roll
mov
imul
or
mov
xchg
in
aam
add
aas
pushl
xor
cld
xor
fsts
cmc
out
out
mov
int
addb
aaa
push
add
daa
int3
and
lods
mov
scas
jno
add
add
inc
rolb
mov
shrl
jne
add
add
ljmp
test
xchg
xchg
or
add
cmp
or
leave
push
add
mov
push
or
lcall
mov
or
shll
testl
insl
jnp
bound
mov
inc
mov
jnp
dec
hlt
fmull
sbb
testb
add
pop
jae
fdivp
ds
add
out
sbb
pushf
mov
mov
cmp
jb
mov
data16
mov
xchg
sub
addb
in
jmp
jle
dec
out
push
add
aad
lcall
jl
push
out
cmpsb
sbb
lret
xor
dec
mov
nop
add
add
mov
add
ret
push
fistpl
les
test
lret
push
sbb
xchg
aad
aad
push
add
mov
add
leave
xchg
adc
out
xchg
mov
xchg
jne
cwtl
addb
sbb
pop
test
idiv
jl
add
mov
testb
add
fimuls
mov
loop
mov
xor
mov
sub
rolb
mov
test
out
sub
jno
sub
add
add
mov
push
add
testl
mov
and
jo
mov
add
daa
rolb
mov
insl
es
adcl
pushl
xor
mov
lods
test
mov
push
push
stos
out
mov
cmp
mov
push
sub
repnz
lret
mov
and
enter
cld
pop
jnp
mov
add
mov
add
sbb
mov
add
and
sub
adc
mov
mov
add
add
int3
cmpsl
inc
mov
mov
fs
mov
and
pop
addb
jnp
add
push
subl
sbb
mov
dec
loopne
mov
xor
bound
mov
add
pop
fs
mov
adc
pop
pop
jno
ret
jp
jne
in
popf
fcmovnb
add
mov
pop
xlat
add
notl
loopne
mov
lods
subl
mov
mov
push
or
dec
and
mov
jge
mov
je
std
mov
int
jae
add
scas
mov
pop
mull
cmp
mov
call
push
es
mov
push
into
push
add
xor
mov
stc
lods
out
add
sti
inc
mov
sub
enter
or
mov
fsts
mov
jle
add
stos
inc
imul
mov
mov
shll
sub
jno
stos
mov
sub
aas
fwait
inc
mov
aas
pop
cmc
rolb
mov
mov
fsub
mov
mov
aad
jge
inc
inc
cmp
rcr
pusha
add
add
jle
mov
insl
pop
mov
fs
repnz
call
add
mov
cmp
push
adc
addb
add
push
pushl
sub
pop
pop
jbe
sub
inc
daa
pop
adc
add
mov
add
cli
mov
add
jnp
mov
mov
and
mov
dec
push
pop
out
icebp
fadds
add
fs
mov
mov
pop
push
adc
mov
dec
fucomp
mov
ror
aaa
repnz
add
stc
imull
push
insb
leave
xchg
mov
scas
add
mov
fucom
add
xlat
ret
fwait
mov
ja
add
dec
cmp
flds
or
mov
add
fsubrp
pop
lret
sub
mov
inc
add
dec
push
addr16
add
add
mov
popa
mov
mov
mov
mov
scas
in
outsb
lcall
mov
or
inc
test
mov
dec
in
insl
js
leave
push
cwtl
pop
insb
lods
addb
rorl
xchg
dec
incb
sbb
das
lcall
mov
mov
dec
mov
sbb
add
mov
mov
cmp
push
xorl
add
dec
jmp
adc
or
xchg
aad
sub
lcall
and
mov
mov
mov
aaa
movsl
cli
pop
sbb
xchg
add
push
mov
or
mov
add
dec
pop
mov
wbinvd
aad
cmc
cld
dec
leave
stos
add
mov
xlat
stos
mov
mov
into
call
test
jl
dec
pop
jb
mov
addr16
sahf
out
add
jo
mov
icebp
scas
mov
mov
xor
xor
mov
add
jno
adc
mov
cltd
int
add
ljmp
pop
or
test
add
loop
mov
ljmp
lods
cwtl
lcall
add
lret
addb
icebp
call
mov
call
les
gs
sbb
jae,pn
int
aam
xchg
add
pop
fstps
cmpl
or
cs
mov
cmp
dec
mov
add
lret
inc
inc
push
add
add
xor
mov
mov
push
mov
adc
and
add
inc
add
stos
push
sub
pop
pop
imul
in
fucomip
cmpsl
xchg
lds
sbb
add
rolb
mov
jbe
mov
testl
gs
add
nop
add
in
js
pop
xchg
clc
icebp
jp
xor
mov
and
sahf
xor
repnz
aam
int
rolb
gs
pop
fildll
add
mov
cmp
xchg
jne
imul
mov
push
or
cwtl
push
lret
sti
in
mov
imul
inc
sub
mov
mov
mov
arpl
xchg
mov
addb
sbb
add
lret
ds
out
mov
test
test
sub
inc
roll
mov
add
cmpsb
ss
mov
adc
mov
mov
or
rorl
mov
mov
jo
mov
loope
outsl
pop
sub
sub
add
add
jno
std
sub
jp
inc
pop
cld
and
mov
pop
jg
lret
mov
addb
lcall
sti
inc
icebp
call
jno
daa
mov
add
mov
daa
les
mov
lds
pop
cmp
and
sub
dec
jecxz
arpl
xchg
adc
data16
add
cmp
cs
add
sahf
fldt
xchg
adc
in
syscall
js
add
dec
aam
mov
mov
js
xchg
push
adc
lret
dec
loopne
mov
mov
ret
shrl
pop
addl
mov
nop
add
jbe
cli
leave
jno
lahf
jl
add
add
sbbl
lret
xor
mov
shll
mov
hlt
push
xchg
enter
iret
js
repnz
mov
cld
icebp
cmp
mov
add
mov
jns
adc
mov
mov
cmpsl
insl
jmp
enter
pop
mov
jecxz
pop
popf
dec
mov
lahf
add
dec
inc
dec
xchg
fsubrp
or
add
imul
lds
and
mov
mov
in
addb
nop
add
outsl
push
inc
add
mov
push
jp
lock
add
cmp
out
add
mov
mov
jle
add
dec
sete
add
lahf
xchg
mov
xor
cmp
stc
mov
scas
test
push
mov
icebp
jns
or
outsb
je
add
add
jnp
stos
jecxz
add
dec
incb
add
or
push
dec
je
imul
loopne
mov
int3
xchg
add
push
mov
add
xchg
loop
mov
jno
out
shr
cmp
das
sub
dec
loope
fcoms
mov
cwtl
mov
pop
cmpsb
and
pop
jbe
cli
popa
in
in
push
add
mov
loopne
mov
push
push
cmp
pop
data16
stos
mov
cmp
add
dec
das
dec
jecxz
sbb
insb
adc
add
mov
lcall
sbb
bound
mov
lds
loop
mov
in
ljmp
imul
sub
add
ficompl
add
rolb
mov
int
or
pop
jae
add
mov
mov
mov
mov
mov
add
mov
insl
xchg
mov
add
push
add
inc
rorl
mov
adc
mov
add
jge
fwait
xchg
out
outsl
sub
repz
fcmovb
fsubr
jns
jmp
sbb
add
or
jmp
inc
add
jne
mov
inc
xor
mov
push
jmp
ds
add
inc
mov
sub
daa
sub
mov
push
add
xchg
daa
xchg
pop
cmc
mov
sahf
lods
iret
xchg
decl
add
inc
xchg
sbb
fimull
orl
movl
add
cli
mov
aam
add
add
push
xor
jmp
cmp
addb
dec
out
out
test
adc
mov
das
jne
loop
mov
fwait
mov
in
cmp
sub
pop
xchg
jge
fdiv
fwait
jge
jge
sbb
lea
mov
mov
jb
mov
adc
fidivs
add
mov
push
dec
xchg
and
adc
mov
adc
mov
push
push
inc
divb
divl
jecxz
cmp
push
popa
addb
mov
jae,pn
hlt
stos
inc
mov
mov
and
leave
jne
push
add
mov
add
jno
scas
and
mov
ja
cmpl
sub
fists
and
pusha
add
es
jbe
pop
pusha
add
xlat
xchg
pop
mov
cmpsb
push
cmp
fsubp
add
push
fs
add
hlt
sbb
add
lods
rolb
pop
fcoml
das
sbb
xchg
inc
sbb
mov
cli
subl
ss
dec
push
cmp
dec
xchg
xchg
add
add
mov
and
mov
sti
sbb
xchg
push
add
outsb
sbb
add
addb
fidivrs
jno
fcompl
cmp
jecxz
and
add
mov
jl
imul
mov
xor
xor
mov
xor
add
mov
add
out
xor
icebp
mov
mov
xchg
cmp
das
mov
mov
mov
dec
xlat
lahf
dec
mov
out
rolb
mov
ds
rolb
mov
addr16
mov
mov
dec
fnstenv
pop
add
mov
clc
adc
mov
ret
ljmp
inc
mov
push
mov
inc
add
lods
or
jae
add
mov
lea
add
nop
add
jmp
jnp
add
addb
nop
add
mov
dec
mov
jecxz
add
cltd
add
jle
push
flds
idiv
jp
adc
mov
xchg
push
arpl
dec
jb
mov
in
arpl
mov
mov
lods
and
mov
add
mov
mov
cmc
rolb
scas
stos
cs
jecxz
xor
mov
mov
xor
fnstsw
mov
push
add
mov
add
add
dec
xor
mov
mov
mov
dec
mov
add
mov
add
add
push
adc
mov
xchg
add
jecxz
add
pop
jbe
mov
es
add
ret
std
add
pusha
add
push
xor
mov
mov
add
enter
sbb
add
arpl
add
xchg
add
loop
mov
outsl
adc
sbb
mov
mov
fcomps
xchg
out
adc
xor
mov
sahf
ret
int3
sbb
repnz
mov
push
and
addb
xchg
jp
icebp
insl
in
mov
addr16
add
xlat
mov
incl
inc
add
adc
mov
lea
mov
cld
cmp
rcl
add
lock
adc
add
jno
cmp
movsb
js
shrl
imul
fiaddl
jb
mov
jne
mov
cmp
xlat
mov
mov
pop
imul
xchg
lods
call
mov
lret
and
mov
add
or
jb
mov
mov
cmp
mov
std
cmp
dec
bound
mov
add
fisttps
pop
fisubl
add
jmp
addr16
in
repz
push
lea
adc
mov
xorl
test
and
add
mov
cmc
sub
inc
push
rorl
lcall
loope
xchg
add
xor
negb
fnstenv
pushf
pop
jmp
inc
repz
test
jbe
sbb
sbb
aad
aam
sbb
test
jb
mov
add
or
shrl
ljmp
cmpsl
cwtl
mov
mov
and
add
repz
xchg
insb
xor
jno
sub
xchg
jmp
aad
mov
cmp
xor
mov
ja
xchg
sbb
out
add
mov
mov
add
aas
push
mov
add
ret
mov
jns
rolb
mov
mov
mov
nop
add
add
mov
adc
or
mov
dec
int3
mov
add
rolb
mov
orl
shll
aas
xchg
pop
pushf
add
mov
mov
loope
pusha
add
pop
dec
stos
pop
hlt
and
daa
cmp
jecxz
rolb
mov
addb
jo
mov
sbb
enter
loop
mov
movsl
jp
rolb
arpl
lret
repz
xlat
fmuls
add
inc
xchg
lds
pop
rolb
icebp
sbb
mov
add
or
pop
cmp
adc
mov
xor
cltd
mov
mov
add
adc
add
adc
aad
add
mov
add
popl
enter
out
add
add
aas
subl
bound
mov
jno
add
stos
xor
sbb
pop
mov
subl
mov
push
fnstenv
aas
lock
mov
mov
and
add
and
mov
out
inc
clc
js
jne
test
xlat
jg
adc
test
push
data16
mov
ret
mov
add
cmc
xchg
mov
inc
stos
mov
add
lahf
push
mov
imul
sbb
or
xchg
mov
sbb
cmp
fists
sbb
cmp
add
mov
jmp
dec
xor
mov
loopne
mov
jae
cwtl
enter
add
mov
mov
mov
xchg
sbb
pop
xchg
pmullw
test
add
push
fidivrl
mov
jne
insb
cmp
popf
push
and
push
clc
movsl
lret
stc
sub
cmp
and
mov
lret
inc
add
mov
push
adc
mov
add
lods
jnp
js
popa
add
fdivl
arpl
sbb
in
fwait
ret
sbb
icebp
hlt
in
cltd
inc
pop
pop
outsb
push
fsubr
in
in
mov
hlt
outsb
in
aaa
push
jp
jp
cmc
mov
mov
test
mov
cwtl
xor
mov
add
mov
add
jle
mov
add
std
movsb
cmp
jg
add
int3
mov
mov
ret
imulb
test
jb
mov
int
mov
add
outsl
jnp
rol
jle
add
xor
mov
jno
dec
insb
mov
add
add
mov
aam
cmpl
mov
mov
test
add
sub
mov
bound
mov
sbb
fiaddl
inc
pushf
push
adc
out
cmp
add
les
jl
inc
inc
jae
lea
mov
test
add
mov
adcl
pop
addr16
or
je
push
das
mov
call
jb
mov
mov
xor
mov
add
and
mov
insl
movsl
test
es
inc
mov
mov
lods
push
lods
cmp
push
add
out
aaa
mov
inc
add
mov
or
scas
mov
insl
clc
xchg
addb
mov
add
enter
mov
fimuls
mov
jecxz
je
sbb
mov
or
and
add
xor
lcall
or
call
cmpl
in
ss
pop
popa
rolb
stos
xor
sub
hlt
jb
mov
or
dec
addb
call
pop
jp
cmp
jmp
cmp
xchg
add
add
les
stos
mov
add
add
jmp
mov
sub
or
xchg
mov
mov
cmp
mov
xor
mov
mov
mov
cmc
cmpsb
dec
pop
or
add
add
mov
js
out
sub
adc
add
pop
ss
pushf
out
int
mov
add
test
int3
fmull
int3
add
cld
imul
mov
jp
fsubl
mov
xor
xor
xor
mov
sbb
and
rolb
mov
xor
ret
and
jl
call
add
add
mov
repnz
inc
insl
jl
xlat
daa
jg
add
mov
mov
mov
mov
jns
stos
imul
bound
mov
pop
xor
mov
add
mov
sbb
fildll
jecxz
int
cmp
cli
lret
jmp
out
dec
xchg
add
icebp
loopne
mov
cwtl
mov
stos
jp
daa
and
add
lret
mov
or
popf
sub
sub
add
adc
xor
fildl
add
mov
mov
add
addl
mov
add
inc
jb
mov
popf
mov
push
icebp
adc
fwait
mov
mov
bound
mov
push
je
inc
loop
mov
add
out
in
xchg
jl
xor
push
out
add
popf
mov
lods
pop
xchg
loop
mov
mov
add
fstpl
mov
enter
shrl
adc
dec
jge
adc
mov
nop
add
sub
mov
dec
add
add
mov
and
or
rcll
add
jp
mov
add
mov
addb
faddl
add
xor
mov
dec
setge
ja
outsb
sbb
push
repnz
jmp
sbb
dec
stos
inc
add
inc
loope
and
inc
add
jl
cmp
add
mov
push
push
or
js
mov
mov
ret
inc
leave
dec
lcall
inc
xlat
or
cli
rolb
mov
aad
pop
mov
lret
add
mov
cmc
jge
push
add
jge
rcrl
cs
add
mov
lcall
test
push
sbb
xchg
movsb
or
notb
in
dec
into
pop
cli
sub
test
dec
adc
push
std
xchg
mov
add
push
and
mov
and
add
pop
jg
test
je
adc
mov
imul
dec
push
lods
sahf
test
enter
rolb
mov
test
xor
add
add
std
jne
xchg
pop
cmp
in
dec
push
add
xchg
addr16
push
xchg
into
out
add
or
lret
jb
mov
or
mov
pop
mov
pop
push
add
mov
addb
test
inc
dec
xor
mov
inc
inc
int3
jmp
test
mov
mov
add
mov
or
dec
cwtl
pop
xchg
lea
in
lret
dec
pop
test
sbb
push
aam
jmp
bound
mov
pop
dec
sub
cmp
int
sbb
mov
mov
cwtl
imull
jge
popf
inc
add
mov
jnp
aam
mov
or
sti
gs
repz
cmp
dec
int3
ror
mov
fisubrs
mov
pop
insl
mov
imul
rolb
mov
cmpsl
nop
add
mov
add
das
out
rcll
dec
outsl
jl
pop
insb
mull
fldenv
mov
push
mov
lahf
xlat
pop
sbb
add
enter
sub
mov
push
test
lds
dec
loopne
mov
ja
aad
jne
push
cmpsl
cmc
cmp
mov
dec
cwtl
int
pop
dec
dec
jo
mov
and
dec
mov
ret
push
cltd
xchg
mov
lods
arpl
mov
adc
mov
xor
xchg
cs
xor
add
mov
mov
and
and
add
and
mov
add
sub
sbb
int
sbb
add
sub
ret
add
add
das
fwait
mov
sbb
repnz
mov
in
fnstcw
push
fsubs
mov
sti
adc
push
add
mov
shl
add
inc
add
aas
mov
mov
mov
mov
addb
arpl
out
lods
push
sub
fwait
hlt
int
adc
dec
cmp
add
mov
lcall
dec
out
dec
lret
or
add
mov
aad
fidivl
cmp
mov
push
movsl
push
dec
rcll
je
movb
add
mov
pop
jae
sbb
stos
xchg
gs
mov
jo
mov
add
mov
outsl
leave
daa
aaa
addl
mov
sbb
pop
data16
sub
inc
adc
mov
mov
mov
or
roll
mov
idivl
sbb
mov
lods
add
xor
mov
ljmp
repz
or
mov
mov
insl
je
add
push
outsl
loop
mov
into
cmp
inc
cmp
addb
or
add
gs
jl
sub
mov
mov
mov
or
xchg
pop
push
jmp
add
xor
mov
jle
stos
popw
or
mov
add
mov
shll
mov
mov
ss
mov
orl
mov
sub
stos
add
mov
js
mov
mov
mov
out
pusha
add
push
sub
pushf
mov
add
mov
adc
scas
sub
test
ss
outsb
lret
jo
mov
add
mov
sbb
mov
mov
jp
add
mov
mov
insl
ds
dec
push
cmp
stos
jns
jmp
mov
hlt
call
ss
xchg
sub
fisubl
xchg
fsubp
jne
add
sub
mov
sbb
int3
cmpsl
inc
add
aam
push
add
mov
add
ljmp
mov
mov
mov
sub
jo
mov
rolb
popf
inc
add
add
jmp
xchg
add
add
outsl
shl
add
mov
adc
outsl
sub
xchg
sub
mov
push
jp
inc
movsb
lret
leave
mov
add
add
ja
push
add
fs
neg
sarl
dec
out
add
pop
cmp
arpl
loop
mov
ret
lahf
std
cmp
cld
xor
mov
xor
mov
rolb
xchg
and
test
cmp
nop
add
add
enter
aam
add
fstcw
dec
push
jecxz
cmp
cmp
push
pop
xchg
dec
je
add
in
push
stc
iret
adc
mov
inc
lea
icebp
mov
nop
add
push
mov
and
mov
add
mov
gs
cmp
int3
cmp
mov
add
add
scas
int
xor
mov
sub
out
jl
or
lods
subl
add
sbb
pop
stos
jle
inc
in
repz
addb
addb
add
xchg
mov
add
data16
jb
mov
inc
push
xchg
ret
mov
jb
mov
jno
andl
pop
cmp
out
jecxz
mov
mov
daa
lret
push
rolb
aam
pop
test
test
pause
add
add
or
mov
lods
mov
les
push
insl
les
mov
xchg
inc
ffree
jnp
add
fs
pop
fwait
pop
test
jmp
add
ret
pusha
add
cmc
je
nop
add
fdiv
in
mov
pushf
shll
xchg
insl
pop
xchg
fsts
add
sbb
push
rcll
push
repz
gs
mov
jg
sub
and
add
test
int
ja
andl
adc
mov
cwtl
testb
push
aad
test
inc
add
call
inc
movsl
jmp
mov
add
dec
xor
or
ret
dec
dec
out
decl
or
mov
mov
push
push
insl
notl
cmp
ja
das
lea
lea
nop
add
add
add
xor
mov
cmc
data16
mov
adc
mov
jge
cmp
add
jbe
add
cmp
test
cmc
ja
pop
push
push
push
lcall
in
sub
add
push
inc
add
add
mov
nop
add
sti
inc
xor
shl
add
cli
xor
mov
cld
cmp
mov
leave
add
fnstenv
lock
aad
jb
mov
sub
sub
add
in
out
dec
out
jmp
mov
arpl
mov
mov
rolb
mov
sbb
test
xor
sub
inc
xchg
fcmovne
imull
dec
cmpsl
xor
mov
push
lahf
fists
mov
das
outsb
nop
add
mov
mov
sarl
push
jae
inc
or
pop
adc
das
xor
mov
sarl
mov
mov
sub
scas
iret
mov
add
ds
push
add
loope
addb
xor
mov
mov
fucom
call
sbb
lret
cmp
in
clc
adc
add
dec
xor
mov
cltd
xchg
imul
cmp
add
loop
mov
pop
mov
mov
add
push
jae
xchg
push
push
and
stc
mov
mov
mov
add
inc
pusha
add
dec
movsb
jl
fwait
xchg
ret
cmc
bound
mov
mov
sub
pop
insb
mov
add
mov
addb
cld
push
icebp
sub
inc
cld
mov
cli
xchg
sub
test
mov
mov
pushf
in
inc
cmp
mov
push
jne
add
mov
bound
mov
add
or
pop
cmp
mov
test
call
ds
mov
in
aam
add
movsb
addb
rolb
mov
sahf
mov
xchg
mov
mov
mov
add
mov
cltd
mov
inc
add
lock
mov
pop
pop
and
mov
mov
xchg
jge
adc
add
divb
mov
cld
in
in
jns
add
sahf
mov
out
fnstenv
add
mov
add
xor
add
and
add
push
adc
xchg
lock
mov
add
mov
xchg
insl
adc
add
pop
cs
mov
and
mov
loope
xor
mov
rcrl
loopne
mov
ja
fxch
and
push
dec
aas
inc
mov
mov
int3
sub
into
roll
mov
mov
adc
mov
out
fldln2
setg
inc
add
clc
adc
rol
add
mov
mov
rolb
aaa
mov
fistpl
in
cwtl
lods
adc
or
pop
dec
or
test
or
mov
orl
push
or
dec
dec
pushf
sub
sbb
into
xor
add
or
hlt
in
loopne
mov
or
popa
jge
add
add
fldt
add
mov
or
mov
arpl
lods
jmp
xor
fucomp
psubusw
jl
addr16
xor
mov
outsl
or
test
sub
jmp
pop
ret
push
add
mov
add
adc
fwait
mov
push
push
cmc
rolb
mov
addb
pushl
add
addb
sbb
mov
dec
mov
stc
mov
fmul
shrl
lcall
and
mov
sub
add
add
mov
cmpsb
jg
hlt
int3
xor
jbe
jmp
mov
pop
roll
cmpsb
data16
je
add
add
mov
add
mov
cltd
cmp
aam
enter
xchg
jo
mov
sahf
xor
fdivrs
lahf
pminsw
jecxz
jecxz
pop
add
mov
mov
mov
sub
test
or
insl
jle
lcall
loop
mov
pop
mov
mov
add
dec
add
mov
sbb
fsubr
mov
cwtl
add
aam
mov
push
jns
cmp
rolb
mov
jp
jg
insl
ds
in
and
mov
arpl
dec
add
cli
sub
lcall
dec
icebp
jg
pop
dec
mov
in
std
cli
and
xchg
enter
jecxz
pop
scas
and
rcrl
scas
cmp
or
scas
mov
adc
mov
mov
mov
out
add
push
jo
mov
add
mov
dec
je
movsl
ja
ja
add
faddl
add
dec
shr
cmpsb
mov
inc
and
dec
popf
out
add
std
shll
mov
push
dec
mov
mov
sbb
mov
pop
fidivs
add
into
inc
sbb
dec
jo
mov
rolb
repz
or
sbb
add
cmpsl
outsl
jb
mov
inc
inc
add
mov
mov
mov
aas
jmp
mov
fidivrl
loopne
mov
inc
out
jo
mov
add
add
push
icebp
xchg
mov
mov
inc
lea
dec
fbstp
lcall
cmp
add
sbb
repz
lods
xor
adcl
fldenv
mov
inc
add
add
mov
repnz
xor
mov
add
mov
mov
mov
ja
iret
sti
bound
mov
jno
add
sub
xchg
xchg
loope
jle
push
imul
ja
sahf
xor
mov
pop
inc
leave
or
xchg
sahf
fwait
ret
les
jmp
daa
negb
mov
mov
mov
pop
pop
leave
cltd
jg
std
pop
jl
mov
test
xchg
je
inc
scas
jp
push
aam
frndint
popa
enter
ljmp
inc
sti
dec
xor
xor
mov
ss
test
mov
imul
roll
fcomip
stc
mov
arpl
arpl
xlat
popa
mov
icebp
les
add
sahf
lods
out
cmp
fnstenv
mov
mov
mov
add
inc
add
int3
sti
and
mov
out
orl
or
imul
mov
ret
iret
pushf
dec
lret
pushf
bound
mov
sub
aaa
loope
rolb
mov
cmp
movsb
xchg
sahf
ret
loop
mov
pop
loop
mov
dec
stos
mov
dec
mov
mov
out
aam
imul
mov
hlt
int3
sub
mov
jmp
add
xor
mov
fyl2xp1
rolb
lcall
lods
xor
mov
xchg
js
rol
cs
pop
mov
add
loope
dec
dec
and
lcall
repnz
cmp
icebp
sub
xor
mov
xchg
je
mov
test
testb
rolb
pusha
add
aad
popa
insb
movsl
test
in
jno
jae
xchg
dec
adc
cmp
arpl
add
sbb
loopne
mov
cmpsl
test
mov
repz
lret
ss
cli
xor
add
inc
add
add
inc
push
insl
call
fidivs
add
frstor
insl
mov
dec
imulb
add
mov
add
fiadds
pop
push
mov
sbb
or
mov
jl
push
adc
mov
pop
std
sahf
xchg
cmp
rolb
lahf
xor
add
into
scas
popf
push
fwait
mov
outsl
inc
add
jno
jbe
add
mov
popf
into
dec
push
dec
push
cmp
lea
icebp
je
fildll
jb
mov
sub
out
adc
mov
xchg
cmp
mov
push
jl
add
or
and
imul
cmp
dec
mov
push
xor
push
loopne
mov
mov
mov
hlt
push
add
add
call
ljmp
jne
call
rolb
mov
mov
icebp
pop
imul
mov
add
sub
mov
lret
cmc
cmovo
mov
inc
test
xchg
mov
and
mov
xchg
cltd
jmp
stos
sbb
add
sub
stc
xchg
sub
add
or
rolb
sahf
sbb
push
add
pop
imul
sub
pushf
pop
popf
loopne
mov
add
imul
add
nop
add
mov
dec
popa
int3
jge
hlt
nop
add
imul
mov
push
call
cs
fcomps
xchg
fxch
jae
add
icebp
movsb
fucomp
fwait
ja
stc
lcall
cli
jo
mov
jmp
int
mov
daa
add
mov
je
add
push
pop
push
lret
and
mov
add
sub
xor
leave
cs
xchg
add
add
scas
enter
cmpsl
fildll
inc
cli
mov
loopne
mov
push
mov
mov
stc
out
bound
mov
push
push
cmp
push
in
jno
add
push
mov
mov
int3
or
fdivrs
push
int
out
or
jl
cltd
add
cmp
mov
cmp
mov
jb
mov
ret
fdivrs
sub
add
jns
mov
jno
add
sub
cs
push
add
dec
jmp
sbb
or
sti
sub
mov
xor
ljmp
add
mov
mov
in
jmp
imul
fwait
adc
fdivl
cmp
add
arpl
xor
mov
mov
add
add
pop
gs
or
jne
fisttpll
iret
mov
add
das
adc
add
mov
mov
xor
mov
push
daa
inc
xor
add
arpl
testb
add
pop
sub
add
das
pop
sub
lcall
dec
dec
fisttps
push
push
mov
test
add
outsl
xor
mov
in
xor
pushf
das
ljmp
scas
cmc
sbb
int3
and
mov
jmp
mov
outsl
fimuls
mov
in
add
add
addb
fbld
mov
cmp
popa
cmp
aad
push
inc
popl
popa
mov
mov
mov
addl
add
xchg
add
add
inc
movsb
mov
stos
out
sti
iret
das
pop
filds
dec
inc
add
add
lcall
je
in
movsl
fnstcw
dec
mov
dec
sbb
cmp
mov
push
ljmp
inc
dec
pop
dec
cmpsb
mov
popa
daa
loope
mov
xchg
mov
add
cwtl
jecxz
jle
mov
dec
addb
jge
or
out
adc
sbb
js
jecxz
add
pushf
pop
loope
add
push
lahf
push
data16
push
adc
mov
dec
and
mov
aaa
cmpsl
xor
add
inc
or
cmp
add
fildll
jae
add
mov
mov
gs
mov
and
mov
ss
add
test
add
mov
mov
mov
or
adc
push
test
add
mov
mov
test
mov
mov
add
in
add
jle
roll
add
mov
pop
sub
jnp
je
or
aam
leave
add
shll
js
add
repz
or
xchg
add
aad
cld
out
push
push
adc
fmuls
push
dec
repnz
jg
mov
jbe
cmc
adc
mov
add
mov
aam
dec
pusha
add
arpl
pop
pop
pop
das
ss
cmp
adc
lret
add
mov
repz
inc
mov
mov
imul
outsb
repz
mov
xchg
pop
cmc
lahf
pop
xor
add
add
movsl
fcomps
and
add
fcoml
add
add
das
adcl
mov
xchg
pop
call
add
mov
je
add
inc
add
mov
loop
mov
insb
pop
hlt
mov
cmp
mov
inc
or
mov
push
loope
stc
es
mov
add
test
xchg
sbb
std
jl
add
pushf
in
in
lcall
adc
mov
xchg
loop
mov
les
es
lcall
ret
xchg
jle
arpl
and
mov
test
add
jbe
add
icebp
aas
jne
insb
rcr
test
jg
pushf
cwtl
pushf
roll
loope
mov
sbb
jae
jmp
ret
test
add
popa
in
or
lods
lret
cltd
int
or
add
add
stos
mov
add
mov
mov
adc
cwtl
out
iret
scas
mov
mov
xor
jl
adc
mov
mov
je
imul
adc
mov
pop
out
mov
mov
scas
xlat
loope
lahf
dec
pop
add
cld
cmp
push
out
push
mov
xor
mov
mov
pop
mull
push
stos
aaa
fs
push
shll
aad
repz
imul
cs
ja
add
add
lret
repz
xchg
jmp
les
addr16
shl
fwait
lret
dec
loopne
mov
aas
rolb
mov
mov
or
add
mov
push
push
daa
fldcw
add
movsl
cmp
sub
add
mov
lock
jg
cmp
rolb
mov
mov
xchg
add
pop
sbbl
add
popf
pop
xchg
or
enter
mov
mov
add
add
mov
cmp
jl
insl
xor
pop
inc
add
ds
xchg
or
jp
jmp
and
clc
roll
popf
lea
jnp
push
cld
push
add
and
jb
mov
push
fs
rolb
xor
rolb
mov
mov
mov
add
mov
lods
out
jecxz
adc
add
cmc
addb
mov
fwait
std
xchg
test
ljmp
lock
out
mov
rorl
and
add
add
popa
xor
adc
add
mov
xor
mov
mov
xchg
int
jb
mov
pop
mov
jne
and
daa
pop
sbb
mov
popf
add
mov
push
add
push
mov
mov
jl
movsb
adc
mov
rolb
mov
jns
stos
or
dec
inc
add
xchg
lcall
inc
adc
lret
mov
mov
xchg
cmp
fwait
adc
push
or
jnp
rolb
mov
insb
xor
mov
mov
arpl
or
mov
add
cli
addb
mov
add
hlt
push
jb
mov
jecxz
jecxz
dec
add
add
test
add
ja
jno
lock
notl
ja
pop
outsb
jo
mov
or
add
roll
pop
dec
and
mov
mov
mov
pop
xlat
jbe
and
mov
add
or
pop
add
mov
xor
mov
mov
das
ss
hlt
ret
pop
sub
push
and
and
push
add
out
xchg
mov
mov
add
addb
mov
or
cmp
dec
mov
pop
and
es
push
lea
add
add
mov
cmpsb
out
mov
arpl
cmp
movsbl
in
dec
push
mov
jp
add
mov
insl
out
add
mov
js
lret
add
adc
loope
and
imul
shll
leave
imulb
mov
inc
add
xchg
movsb
js
inc
inc
sub
add
mov
sbb
dec
std
aaa
insb
pusha
add
dec
or
jl
lds
mov
xchg
xor
mov
jecxz
xchg
and
mov
fs
loop
mov
repz
lret
stos
push
mov
sbb
jb
mov
mov
xor
enter
mov
imul
add
mov
mov
xchg
add
jle
pop
dec
ret
mov
jae
add
ds
aam
fwait
das
sub
dec
sub
add
stc
roll
push
mov
das
cwtl
aad
push
dec
pop
inc
add
loope
or
jbe
mov
fisubrs
push
gs
dec
push
mov
mov
xchg
fdivrl
inc
mov
xchg
pop
jnp
sbb
sub
add
cld
inc
xor
mov
jp
add
mov
mov
pop
and
and
mov
ret
notb
xchg
sub
sbb
lret
add
xchg
jge
fwait
pop
jg
andl
pop
add
mov
add
fnstcw
pop
ljmp
jg
imul
pushf
cmc
sbb
cmp
clc
ffreep
sbb
insl
lret
cmpsb
or
cmp
aaa
rolb
mov
cmpsb
or
cmp
add
dec
inc
jno
call
xor
shll
add
add
mov
imul
test
cli
sub
mov
xchg
je
out
std
fadds
ja
lahf
js
out
mov
add
mov
mov
into
jo
mov
dec
scas
sbbl
inc
popa
pop
icebp
out
mov
mov
out
add
push
sbb
lahf
idiv
sti
rorl
pop
and
or
add
test
iret
in
ja
sub
jg
add
mov
fstl
mov
mov
xchg
scas
mov
xor
mov
add
cmp
pop
jnp
add
sbb
sub
es
push
stos
mov
mov
jne
jnp
add
pop
jecxz
dec
adc
mov
test
cmp
in
addb
push
mov
stos
push
add
clc
adc
and
fsubrs
ret
aas
jns
sbb
xchg
lahf
dec
jo
mov
add
sub
sub
test
addb
pop
lcall
mov
fimull
dec
int
add
mov
push
in
pop
lock
or
std
addb
fdivrs
add
mov
pop
mov
ror
pop
inc
negb
add
sub
mov
jle
mov
iret
aas
call
xchg
add
aas
sub
movsb
push
hlt
sbb
add
mov
mov
pop
insb
sbb
addl
mov
push
cmp
push
movsb
stos
call
cli
in
mov
mov
scas
inc
mov
dec
push
nop
add
inc
add
mov
mov
jp
dec
push
sbb
sub
adc
repz
mov
cmp
jo
mov
movsb
hlt
push
les
inc
xor
mov
add
mov
mov
cmp
insl
mov
mov
fs
cmpl
sub
sti
mov
mov
js
popf
ja
cmp
mov
dec
shll
sti
inc
xor
add
add
out
sbb
aad
pop
jp
add
xchg
xchg
test
sub
mov
sub
pop
mov
lds
mov
sbb
testl
sbb
add
push
xchg
sub
xor
mov
add
xchg
mov
addr16
hlt
fisubl
hlt
inc
add
je
or
add
insb
adc
add
mov
ficoms
mov
aaa
fwait
in
add
shll
imul
cmp
sbb
jnp
add
mov
lods
or
dec
fcoml
mov
icebp
fs
sbb
sub
dec
mov
inc
add
or
lods
sub
loop
mov
jns
ljmp
nop
add
xor
sub
out
xchg
repnz
and
mov
dec
rolb
mov
fcmovnbe
loopne
mov
mov
cmp
mov
xchg
pop
push
and
mov
fmuls
out
mov
jns
jg
pop
pusha
add
loopne
mov
lock
or
jmp
das
mov
add
pop
ret
adc
push
or
push
add
add
dec
out
cli
xchg
lahf
enter
xor
repnz
pop
xor
add
idivb
jl
jnp
xlat
push
push
insl
das
mov
mov
mov
test
adc
jns
loopne
mov
stos
lea
imul
mov
cli
cmpsb
and
movsb
pop
flds
or
rolb
fists
jbe
mov
xchg
icebp
pop
pusha
add
addb
test
add
in
or
sbb
int3
outsl
cmpl
out
add
push
add
add
add
and
mov
xchg
stc
add
mov
addl
add
int3
push
rorl
les
add
fisubs
sub
test
add
xchg
and
jge
add
or
inc
js
add
nop
add
add
mov
add
pop
sub
jp
call
pop
or
add
lods
mov
popf
lds
arpl
add
jo
mov
in
add
inc
xor
icebp
cmp
and
mov
mov
mov
inc
cwtl
dec
sub
pusha
add
out
fs
mul
bound
mov
cmpsb
push
clc
hlt
je
push
push
jle
cwtl
add
mov
inc
js
in
add
xchg
cmp
and
popa
icebp
mov
mov
add
or
fcmovb
lods
jae
push
cltd
xchg
xchg
test
rolb
inc
add
aam
mov
mov
add
pop
and
and
jg
sti
and
mov
push
fwait
jl
xchg
enter
add
aaa
jg
add
enter
es
hlt
daa
jecxz
lea
mov
in
add
ret
inc
add
sbb
xchg
pop
fs
or
add
sbb
add
jno
dec
addr16
adc
mov
in
popf
sub
push
int
leave
dec
cmc
idivb
adc
pop
int
and
mov
mov
sahf
lcall
lea
movlps
andl
mov
xor
xchg
out
popl
roll
mov
jl
std
pop
and
aad
add
leave
incl
pop
lcall
adc
and
xlat
aaa
inc
add
mov
xchg
js
inc
sbb
repz
jmp
jl
add
mov
and
mov
inc
dec
outsb
sub
add
pop
dec
rcrl
lock
jp
call
fildll
lods
sahf
adc
add
jns
cs
add
cmpsl
push
shll
outsb
aaa
iret
out
pop
jno
insl
and
mov
insb
pop
rorl
jl
mov
jp
inc
xor
arpl
test
arpl
add
loopne
mov
das
inc
or
inc
add
arpl
repz
addb
mov
inc
ret
das
insb
iret
jge
xlat
jo
mov
dec
push
aaa
pusha
add
das
or
jle
cli
and
inc
sbb
int
add
shrl
and
add
mov
mov
pop
in
and
sub
add
add
push
sahf
fcos
cmpsb
dec
push
add
add
mov
fildll
aas
add
mov
test
add
jo
mov
rolb
mov
cmc
aas
pop
sbb
jmp
aad
xor
shll
pop
push
stc
jne
inc
pop
cmp
aad
add
mov
add
mov
add
out
aad
pop
pop
pushf
in
mov
and
mov
adc
mov
mov
add
push
enter
jo
mov
sbb
movsb
cmc
xchg
leave
lret
jg
jnp,pt
add
rorl
pop
sbb
cmp
mov
mov
sbb
lods
and
mov
add
ret
add
stos
out
inc
imul
inc
mov
mov
push
mov
push
rolb
mov
mov
fwait
xchg
popf
mov
inc
xchg
dec
push
sbb
mov
cmp
mov
add
out
mov
enter
fisttpll
push
xchg
icebp
mov
test
add
imul
add
mov
jns
sti
shrd
xlat
mov
mov
pop
mov
mov
jns
dec
icebp
mov
add
cmp
sbb
push
add
mov
xchg
movsb
stos
imul
or
int3
scas
push
pop
not
push
pop
jl
add
add
add
mov
xchg
add
lds
mov
mov
add
push
add
xchg
fdiv
add
add
pusha
add
or
jns
add
xchg
loopne
mov
lea
push
xor
mov
enter
pop
stc
stos
pop
sub
push
repnz
pop
or
daa
test
fimull
lock
xchg
test
pop
out
jns
add
aas
jmp
int3
mov
cli
aam
aad
jo
mov
add
mov
cli
es
mov
mov
rolb
mov
add
ret
cmp
dec
add
add
add
sub
add
sbb
or
add
cmp
adc
mov
bound
mov
add
cli
sub
add
iret
pop
imul
add
pop
sbb
mov
gs
iret
inc
add
mov
fwait
adc
xlat
ljmp
lods
cmp
into
push
xchg
sbb
test
pop
mov
cld
or
fs
mov
loopne
mov
add
aam
nop
add
lock
push
add
stc
in
hlt
sub
mov
jae
fcompp
or
les
xchg
mov
insb
call
jb
mov
into
arpl
sbb
cmc
adc
inc
jmp
add
mov
and
fwait
icebp
adcl
cmp
lcall
mov
mov
mov
fdivrl
add
mov
lret
mov
sbb
out
jl
add
cmp
jmp
pop
ret
out
xchg
lds
mov
neg
stos
rcrl
repnz
icebp
dec
mov
xchg
lds
jae
mov
ret
imul
adc
adc
sbb
add
dec
mov
add
mov
xor
mov
mov
mov
incl
aaa
and
clc
mov
mov
cmp
cmp
sub
add
xchg
inc
xlat
jnp
add
mov
add
loop
mov
movsl
dec
mov
jb
mov
in
add
mov
mov
or
loop
mov
xchg
pop
icebp
sbb
add
out
in
jge
jle
mov
cmp
lahf
repnz
int3
push
cmp
mov
sub
aad
pop
je
inc
inc
adc
add
jg
add
add
rcrl
into
cmp
add
push
mov
sti
aas
jle
in
call
add
cld
loope
arpl
jg
sbb
in
sbb
add
icebp
push
test
mov
add
movsb
pop
mov
rolb
mov
adc
mov
adc
dec
fdivs
stc
loop
mov
je
lahf
repz
xchg
jbe
inc
add
sub
fwait
cmp
xchg
icebp
rcrl
in
jb
mov
mov
xor
add
add
cmpsb
jo
mov
or
sub
rolb
aad
dec
cltd
aas
pushf
sbb
mov
mov
ljmp
fstl
mov
xchg
jno
pusha
add
push
cmp
add
clc
int3
movsl
stc
add
mov
mov
add
mov
adc
mov
lcall
xchg
or
cmp
sbb
test
ss
nop
add
in
addr16
and
add
add
cmc
test
xchg
add
je
jg
scas
and
jp
clc
outsb
jno
sub
sahf
xor
icebp
mov
and
fimuls
sbb
add
mov
in
outsl
enter
sbb
dec
lret
xchg
cmc
push
sub
xchg
dec
mov
mov
mov
mov
mov
repz
testb
xchg
add
and
mov
in
rolb
mov
aad
cmp
or
xchg
mov
mov
push
inc
add
insl
fildl
add
bound
mov
and
mov
mov
cli
lea
mov
loope
lret
sbb
shr
daa
mov
mov
in
ja
sbb
push
add
loope
cmp
mov
adc
push
dec
sub
addb
pop
bound
mov
int3
add
mov
mov
add
ljmp
jns
or
mov
lcall
addb
jns
mov
mov
mov
mov
add
mov
pop
pop
out
ds
add
lock
std
daa
and
mov
adc
mov
xchg
mov
mov
imul
fcmovnbe
mov
inc
add
lods
stos
and
cmpsb
popf
cmpsb
fcompl
cmc
popa
jg
add
movsl
stos
xor
mov
mov
bound
mov
push
push
adc
add
adc
pop
into
adc
mov
mov
mov
add
mov
mov
or
push
add
ret
push
and
mov
or
sbb
xor
mov
mov
in
adc
mov
xor
dec
insl
add
add
xor
mov
add
mov
call
inc
outsb
add
mov
addb
sbb
pop
daa
sub
xchg
mov
shl
or
pop
dec
fsts
mov
pop
pop
cs
sti
pop
jl
fstl
add
in
cmp
outsl
dec
push
add
mov
push
add
cmp
add
mov
xchg
mov
std
jne
add
add
mov
push
add
add
aas
dec
arpl
add
mov
cmp
inc
dec
jns
or
sub
push
mov
fists
pusha
add
lods
in
add
mov
mov
cmpsl
bound
mov
testb
push
sub
push
in
aas
push
xchg
push
add
pop
addr16
rolb
repz
sbb
insb
jae
rolb
mov
add
jmp
mov
add
add
lock
mov
fstps
lahf
push
mov
ficoml
mov
add
loop
mov
add
call
mov
add
dec
imull
pop
and
mov
mov
arpl
insl
adc
mov
pop
es
dec
outsb
rolb
mov
daa
mov
xchg
aad
add
cmp
into
addr16
out
mov
mov
lods
jno
and
mov
xor
cmp
fidivrl
push
gs
popf
gs
cmp
jo
mov
enter
lret
filds
int
insl
pop
imul
je
in
dec
mov
xchg
mov
rorl
pop
mov
inc
add
push
mov
add
cli
mov
cmc
sub
or
js
ret
mov
mov
addb
adc
mov
mov
sub
add
mov
mov
mov
add
and
inc
and
push
cmpsl
or
inc
add
add
stos
mov
mov
int
jns
test
jns
mov
lods
lock
or
add
mov
adc
pushf
mov
fcmovnb
sbb
ljmp
dec
loope
add
test
add
test
add
stos
aam
ret
scas
ret
jle
add
add
mov
les
mov
jae
add
lret
mov
aaa
fcmovb
pop
test
test
mov
sahf
jmp
add
lods
xchg
mov
add
mov
pop
nop
add
mov
sub
out
fsts
lahf
lcall
mov
mov
push
add
pop
jge
shr
out
out
rolb
mov
add
mov
addb
mov
add
mov
enter
or
and
mov
es
mov
fnsave
das
movsl
jns
mov
push
mov
mov
adc
sub
add
mov
mov
mov
nop
add
xchg
test
aaa
or
lock
sub
mov
push
lds
js
movsl
push
add
aaa
popf
dec
mov
add
jbe
andl
add
int
fists
mov
mov
xchg
popa
inc
jo
mov
xchg
jl
cmp
add
mov
cltd
mov
out
mov
mov
mov
mov
fs
xlat
jp
inc
frndint
call
imul
cmp
add
pusha
add
add
add
add
aam
ljmp
pop
into
mov
in
in
shll
cwtl
jg
repnz
mov
and
push
add
mov
in
push
cmp
dec
cmp
in
push
mov
mov
inc
push
add
mov
mov
jns
filds
push
data16
add
mov
roll
sub
outsb
and
mov
mov
fisubs
mov
mov
and
add
insb
xchg
mov
add
mov
popf
mov
int
das
insb
adc
mov
mov
push
add
js
sbb
and
mov
add
add
xchg
and
cmpsl
std
dec
adc
mov
xchg
add
out
rcll
sub
iret
addb
jmp
and
mov
add
mov
loope
dec
int3
outsl
cmpsb
dec
push
gs
jl
es
cmp
xor
mov
add
fistps
adc
mov
add
sbb
lea
xor
dec
stos
pop
les
mov
mov
jp
ror
orl
jge
arpl
repnz
lock
cmpsb
repnz
mov
and
mov
hlt
mov
mov
inc
in
pop
or
add
mov
lds
daa
addr16
sub
push
mov
clc
cmp
add
add
aad
cmpsl
ret
lods
push
addb
sbb
adc
call
xchg
add
cmpsb
jnp
add
mov
dec
jle
pop
in
pop
mov
add
mov
dec
dec
neg
inc
loop
mov
fwait
xchg
fisubrs
test
cmp
repnz
insl
push
xchg
shll
add
cmp
int
add
mov
aam
outsl
mov
addb
dec
add
add
scas
lea
push
xchg
or
popa
xor
loop
mov
shll
add
loope
outsb
push
add
bound
mov
lret
lahf
xor
mov
es
aad
add
and
jo
mov
into
movsb
adc
ret
hlt
dec
inc
pop
pop
add
call
mov
iret
lods
test
sbb
cmp
mov
mov
outsb
jmp
clc
int
lret
add
mov
and
mov
mov
add
mov
or
add
mov
imul
jmp
add
mov
add
aaa
insl
push
add
mov
std
sub
sahf
xchg
in
add
mov
jmp
jae
addb
fst
cmovg
xchg
jno
ljmp
sub
sahf
inc
popf
or
xchg
jecxz
dec
fisubrl
lcall
add
aas
xor
dec
cmp
divb
add
mov
shl
xor
inc
int
js
mov
dec
hlt
adc
mov
xchg
rolb
mov
stc
xor
mov
and
inc
mov
xchg
jnp
dec
popa
jne
outsl
loopne
mov
lcall
or
or
or
sbb
sub
daa
stos
mov
pushf
add
mov
inc
dec
movsl
xor
push
sbb
and
mov
dec
sub
add
mov
sub
stc
cmp
out
add
cmp
add
push
inc
popf
fstps
repz
jo
mov
outsl
push
xor
mov
lret
xchg
cmp
mov
imul
pusha
add
add
call
xchg
inc
loope
scas
xlat
xchg
dec
stos
mov
add
movsw
aam
mov
xor
mov
mov
mov
lret
out
mov
in
and
mov
nop
add
add
addb
or
fisubs
int3
mov
lds
xchg
pusha
add
cld
cli
sti
ficoms
mov
fcomps
jle
sub
mov
mov
mov
jg
dec
in
adc
mov
push
add
popf
cmp
add
add
sub
add
jb
mov
mov
outsb
cs
xchg
rolb
mov
imul
out
push
sub
dec
jno
mov
add
push
and
add
repnz
hlt
lods
sbb
xor
movsb
dec
insb
idiv
sti
sbb
and
mov
cmpsl
xlat
fadd
sti
xlat
or
mov
mov
mov
insl
jne
cmp
scas
push
add
mov
push
add
adc
mov
iret
push
cmpsl
cmpl
adc
cmp
das
flds
add
mov
xorl
add
mov
mov
xchg
dec
jge
add
lods
mov
add
mov
jge
xchg
add
mov
negl
mov
jno
pusha
add
add
add
mov
mov
mov
adc
mov
imul
mov
xlat
cmpsl
in
daa
addb
rolb
mov
add
jecxz
inc
outsl
and
nop
add
mov
fcomi
bswap
punpckhbw
in
push
rolb
sub
mov
xor
mov
pop
add
adc
adc
xor
or
pop
xchg
inc
mov
or
ja
aas
mov
sub
or
pop
loopne
mov
call
xchg
inc
mov
pop
jg
stos
ret
mov
scas
out
push
adc
ss
lret
sbb
mov
mov
add
mov
jmp
jp
pop
popa
call
outsl
aad
add
mov
pushf
push
pop
dec
pop
dec
push
xchg
inc
in
js
add
jle
daa
fdivr
lret
mov
add
cli
push
jns
mov
add
inc
add
mov
mov
mov
push
xchg
notl
mov
add
pop
lods
ds
add
sub
mov
xchg
mov
push
es
push
xchg
add
add
notb
add
and
mov
incb
fnstsw
and
mov
data16
aam
add
mov
addr16
mov
aad
push
add
lret
aam
rolb
mov
ret
testl
ret
mov
pop
xlat
sub
add
sub
mov
cmpsb
out
insl
xorl
mov
into
mov
pop
in
sahf
loop
mov
nop
add
push
add
out
cmpsb
fisttpl
add
fs
cmp
or
ficompl
ljmp
xor
sub
add
lods
xor
mov
out
pop
sub
pop
jno
insb
push
out
jbe
leave
mov
mov
movsl
sub
fldl
mov
dec
jne
jge
ja
or
loop
mov
dec
mov
add
or
inc
and
test
dec
or
lcall
push
test
mov
add
jne
xchg
lret
add
stos
test
push
jo
mov
fsincos
sub
cmp
aad
and
add
push
pop
out
cmp
push
or
lcall
xchg
in
push
jge
popa
xor
mov
inc
outsb
inc
inc
jb
mov
lods
jge
or
gs
rolb
xchg
fisttpll
mov
mov
js
in
xchg
sbb
or
mov
jle
pop
or
push
cltd
imul
mov
mov
insl
flds
mov
je
and
outsl
adcl
mov
mov
popw
sbb
mov
mov
mov
rolb
mov
add
add
outsl
add
mov
xor
mov
mov
jmp
addb
mov
xor
int3
sub
daa
mov
or
scas
je
push
lock
mov
jecxz
cmp
mov
je
add
incl
pop
push
iret
rcrl
add
inc
push
push
cmp
add
cmp
add
pop
jne
mov
pusha
add
rolb
mov
add
outsl
mov
and
mov
adc
mov
jge
jl
mov
out
or
flds
js
cs
mov
lcall
pushf
mov
mov
mov
add
fs
mov
mov
xchg
xchg
and
mov
and
loop
mov
add
lret
popa
and
mov
lea
and
xchg
pop
push
clc
and
data16
std
jns
mov
add
push
add
add
pop
rolb
mov
push
add
xchg
mov
test
xor
mov
mov
hlt
mov
pop
mov
add
add
fwait
inc
cwtl
int
aam
adc
mov
jge
xchg
add
mov
mov
cmpsl
pop
push
pop
push
mov
xor
mov
jnp
xchg
add
hlt
dec
mov
pop
aas
xchg
mov
add
mov
pop
mov
dec
cmp
or
iret
xor
push
int
lds
mov
dec
or
add
add
repnz
rcrl
adc
lahf
mov
inc
dec
mov
jae
pop
mov
add
mov
call
scas
xor
add
mov
sub
push
add
mov
add
or
mov
add
add
xchg
inc
repnz
arpl
lods
push
add
push
dec
ret
sub
inc
aaa
pop
in
int3
inc
scas
loop
mov
insl
inc
push
lcall
iret
push
add
add
adc
test
push
jmp
mov
mov
jg
int3
jge
jae
leave
adc
mov
aaa
pop
cli
stos
mov
call
mulb
bound
mov
push
and
mov
test
xor
xchg
and
mov
repz
lret
xor
mov
sbb
sbb
xor
daa
push
inc
add
hlt
add
mov
add
add
cltd
jnp
pop
addb
pop
dec
jbe
or
test
lds
arpl
cmp
loop
mov
or
fsubrp
dec
mov
rolb
mov
mov
or
mov
add
xchg
mov
adc
mov
add
or
add
repz
mov
scas
pop
daa
xor
add
add
mov
add
add
mov
mov
add
cmpsb
mov
pop
push
add
jmp
or
dec
pop
popf
push
std
and
mov
je
add
fistpl
pop
mov
xor
mov
add
mov
repz
pop
and
mov
mov
nop
add
out
dec
test
add
hlt
test
add
mov
dec
in
or
fistpll
rcrl
cmp
mov
add
mov
push
fadd
mov
xor
lret
add
add
mov
sub
notl
add
jg
clc
ja
loopne
mov
add
addb
bound
mov
add
fstpt
xorl
pop
cld
in
insb
hlt
cltd
cmpsl
test
add
out
cmp
repnz
hlt
stos
sbb
addb
push
icebp
add
mov
add
mov
pusha
add
jl
data16
pop
adc
mov
call
add
xor
mov
mov
mov
xor
xor
and
mov
add
adc
mov
sbb
push
inc
add
les
jo
mov
or
mov
daa
dec
lahf
test
popa
imul
call
push
mov
into
sbb
pop
imul
mov
and
xchg
xchg
dec
push
dec
mov
mulb
add
xchg
popa
loope
movsb
mov
lods
inc
insb
push
jae
mov
mov
and
mov
pop
sbb
loopne
mov
add
dec
push
testb
je
push
inc
add
push
mov
push
fnsave
mov
adc
jmp
stos
addb
mov
mov
push
add
mov
push
add
mov
and
aad
mov
jmp
out
or
cmp
xchg
fldt
test
push
pusha
add
add
fucomp
repnz
daa
test
sbb
adc
add
mov
paddq
and
ret
rolb
mov
ljmp
pusha
add
mov
fcmove
faddp
hlt
fsts
aam
test
add
jne
jbe
sub
sub
loope
rcll
nop
add
sti
lock
ret
push
xchg
sub
cld
jge
lods
mov
repz
dec
pusha
add
or
add
js
fstps
add
add
add
repnz
in
push
cmpsl
hlt
scas
pop
js
ds
ds
xchg
jmp
mov
adc
aas
add
mov
push
xchg
cmp
lahf
lahf
les
xchg
add
add
mov
mov
mov
adc
mov
mov
mov
cmpsb
out
popf
out
sbb
add
ds
push
jns
xor
add
push
dec
out
sbb
lea
sbb
sbb
out
add
add
lea
mov
jb
mov
mov
js
jmp
call
sbb
bound
mov
add
repz
add
in
in
jnp
mov
inc
push
cltd
in
add
sub
add
sbb
sbb
mov
cmp
xor
ljmp
xor
stc
lods
ret
jae
and
mov
inc
ret
sti
pop
xor
mov
dec
imull
xchg
sub
scas
mov
insb
in
mov
ljmp
add
test
fdivs
or
and
mov
add
mov
xchg
dec
addb
jbe
xchg
pop
sbb
pop
xchg
add
in
pop
dec
sub
add
fsubrl
add
xor
add
cwtl
les
data16
leave
movsl
lods
jb
mov
inc
pop
lcall
shll
or
lock
mov
mov
add
fsubl
adc
and
mov
clc
xchg
ja
in
xlat
jae
push
movsl
lret
sbb
lcall
lods
mov
mov
mul
adc
lock
addb
or
add
inc
push
jbe
xor
mov
icebp
ret
lods
mov
add
cmp
push
mov
lock
jb
mov
aam
rcll
addr16
ret
lcall
mov
fcoms
cs
aas
jb
mov
sbb
adc
mov
add
js
add
jmp
iret
movsl
dec
pusha
add
scas
jg
push
mov
ret
cmp
add
pop
jnp
jge
cld
mov
sub
add
xchg
jae
inc
mov
pop
imul
xor
jecxz
sbb
mov
or
jecxz
sbb
xchg
loopne
mov
add
push
add
inc
icebp
leave
mov
pop
cmpsl
xchg
lret
mov
and
push
add
sub
add
add
add
mov
addr16
sub
mov
cmp
mov
scas
cmp
mov
mov
sub
jb
mov
nop
add
or
in
dec
popf
lret
cmp
.byte
lea
