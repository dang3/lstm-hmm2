and
and
xor
int3
imul
pop
cmp
jno
cmp
cli
addl
dec
fsts
in
sbb
jns
es
inc
xorl
push
insl
or
aam
add
jecxz
adc
mov
mov
es
cmpsb
lods
or
loopne
out
cmpsl
popf
xor
sub
cwtl
mov
mov
add
push
sub
addb
cmpsb
pop
addb
xchg
push
pushf
repz
xor
xchg
dec
stc
addb
mov
and
adc
and
outsl
inc
add
fsubrl
jns
and
jecxz
mov
mov
add
inc
insl
cmp
pop
xchg
pop
aam
cmpsb
dec
test
cmp
jge
lret
add
add
dec
jno
or
xlat
mov
ret
mov
hlt
push
movsb
inc
pop
sbb
insb
mov
mov
test
out
insb
mov
bound
push
movsl
push
sub
adc
or
inc
ja
adc
add
dec
inc
add
and
lods
mov
xchg
mov
mov
fadds
sbb
inc
add
movsb
loop
idiv
scas
in
xchg
cmp
xchg
inc
fwait
pop
mov
stos
ss
mov
pop
test
add
sub
add
ss
and
fs
daa
and
adc
scas
xchg
cwtl
inc
add
repz
movsl
lock
das
in
insb
in
cmp
pop
scas
and
adc
mov
dec
adc
test
cmp
iret
inc
add
imul
cmp
cld
and
call
je
xchg
xchg
jbe
push
in
adc
inc
jo
add
in
xlat
and
add
rorb
jno
add
add
pop
sub
mov
push
lahf
cltd
adc
mov
add
add
lahf
mov
mov
sub
movsl
adc
adc
mov
es
add
cwtl
pop
imul
jle
push
jg
adcl
add
xor
push
add
notb
xlat
call
sbb
lret
call
sbb
inc
add
test
xor
add
or
jae
push
test
mov
dec
in
in
mov
inc
cld
inc
add
pop
shl
shll
insl
mov
mov
add
inc
add
inc
imul
notb
lret
sbb
popf
lret
xor
push
pop
add
lcall
xlat
dec
add
cmpsb
pop
test
xor
mov
xchg
mov
mov
and
mov
in
adc
in
sub
push
push
cld
call
sub
mov
imul
cmp
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
es
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
or
xchg
lea
sub
xacquire
pop
add
ss
cs
push
push
lret
jmp
add
add
dec
jecxz
aam
out
pop
jbe
cmp
in
add
movlps
dec
push
dec
jns
mov
add
addb
xchg
xchg
sti
xor
dec
lcall
enter
inc
mov
sub
add
pop
in
jecxz
adc
push
jle
or
xchg
inc
add
into
dec
xor
jp
xchg
mov
jle
dec
jnp
add
push
int3
movsl
sbb
jp
lds
cltd
test
ja
loope
popf
pushf
mov
xchg
cmc
out
mov
add
xchg
sub
or
add
out
add
pop
mov
divl
movsb
xchg
xchg
cmp
jg
inc
add
inc
add
test
mov
div
les
mov
sti
psubusb
stos
add
lahf
push
adc
xchg
jno
cmp
je
mov
cmp
sub
mov
adc
add
push
cltd
scas
push
jmp
enter
fcoml
xor
mov
filds
sbb
ds
mov
pushf
aad
mov
mov
in
jno
mov
fwait
jo
pop
xchg
shrl
addb
fildl
pusha
add
imul
scas
xchg
fdivs
sbb
adc
sbb
es
cltd
pop
pop
popf
xchg
cmp
sarb
clc
jp
mov
out
ret
push
cmp
int
je
add
fs
mov
inc
add
xor
dec
dec
mov
adc
push
and
and
push
loope
arpl
add
cmpsb
stos
dec
mov
ret
test
mov
rclb
mov
std
into
dec
sub
and
sub
movsb
jns
arpl
adc
aas
in
fistpll
adc
cmpsb
push
and
stc
addb
repnz
cld
nop
adc
add
add
mov
mov
xchg
loop
int3
mov
incl
mov
ret
sub
add
and
add
mov
push
hlt
adc
xor
es
or
mov
mov
and
add
sub
in
mov
lcall
mov
xor
xchg
cmp
dec
add
scas
aam
or
dec
mov
lret
mov
push
dec
mov
fs
push
cld
bound
hlt
push
mov
cmc
lea
mov
pop
push
add
and
xchg
mov
inc
add
testb
adc
xchg
repnz
cmpsb
movb
add
cmpsb
cmp
push
push
cld
xor
push
jb
or
scas
je
and
add
mov
rdtsc
movsl
push
dec
push
cmpsl
gs
daa
call
jns
sti
ljmp
sub
or
cmp
mov
dec
add
test
add
fldt
sub
pop
sub
mov
aaa
roll
fsubl
add
jg
inc
add
lret
in
push
test
xchg
cmpsb
adc
addb
add
add
mov
outsl
jns
add
int3
repz
push
add
movsl
test
sbb
sbb
mov
negl
lods
out
jo
push
in
pop
pop
push
lods
in
negb
rcrb
push
jmp
in
add
xor
cmp
mov
sub
test
xchg
push
aam
adc
das
mov
jno
add
movsl
pop
sbb
push
add
js
add
cmp
add
int
nop
rorl
sbb
xor
in
and
add
iret
movb
jnp
mov
add
sbb
mov
addb
imul
pop
cltd
scas
and
fs
fildl
nop
jp
jae
out
sub
jno
and
mov
cld
cmpsb
xchg
pushf
shll
inc
fs
stos
jmp
sbb
rclb
inc
mov
enter
test
xchg
pop
or
clc
jbe
mov
adc
dec
lock
int3
dec
jno
fxch
aam
movb
add
push
push
std
push
shlb
sti
jbe
aas
je
mov
cmp
shrl
add
add
mov
fbld
imul
inc
add
mov
xor
stc
sbbl
faddl
sahf
movb
outsl
fs
mov
jge
adc
mov
rcll
pop
sub
jbe
out
lock
sahf
sub
fistpl
adc
lret
jb
pop
stos
cs
imul
cwtl
push
mov
je
inc
fisubl
or
adc
je
call
push
mov
shl
pop
out
je
cltd
lcall
adc
and
mov
adc
push
bound
jne
adc
leave
idivb
sub
enter
bound
rcl
rclb
cwtl
rolb
fwait
dec
pop
aas
fsubrl
add
pop
call
ret
icebp
fadds
add
inc
add
jae
test
addb
add
aam
pop
sti
and
dec
idiv
sbb
adc
data16
iret
and
in
lds
xor
pop
jecxz
push
add
xlat
jle
stos
xlat
lcall
add
xor
loop
xor
fbstp
inc
add
jecxz
sub
add
ljmp
push
mov
cmp
mov
ret
mov
mov
bound
scas
in
add
push
loop
cli
cmp
mov
addb
rolb
idivb
arpl
adc
les
mov
and
or
mov
xchg
xchg
gs
mov
arpl
dec
jb
xor
ret
cmp
dec
add
push
sahf
dec
les
push
mov
addb
fnsave
xchg
shr
sub
data16
add
js
movsl
arpl
lods
mov
movsb
adc
add
sahf
sub
mov
mov
outsl
bound
adc
add
enter
fstpt
aaa
scas
popa
sub
add
cwtl
loope
add
je
add
jge
into
mov
icebp
lds
jmp
lds
pop
pop
ss
sub
decb
sub
aas
aam
mov
sbb
scas
xor
sti
ja
pop
mov
sarl
add
rcll
cwtl
aaa
je
jae
pusha
add
cmp
pop
mov
add
outsl
mov
cltd
pushf
les
call
add
sahf
push
inc
xor
ss
ffreep
popa
add
cmpsb
sub
insb
and
shrb
pop
xchg
cs
and
adc
dec
leave
addb
notb
adc
mov
and
and
popf
imul
dec
ljmp
je
push
add
mov
add
add
es
dec
movb
int
hlt
rcl
das
cmc
lret
cmc
and
push
mov
mov
push
insb
rorb
pop
into
add
adcl
xchg
and
stc
stc
jl
or
in
xor
call
mov
pop
adc
les
and
dec
and
inc
add
jnp
cld
adc
jbe
pop
pop
das
cmp
dec
imul
add
dec
fnstsw
inc
add
rolb
lahf
mov
xchg
movsl
add
mov
cwtl
arpl
xchg
in
cmpsb
sbb
add
stos
pop
or
dec
mov
movb
push
jne
push
jno
daa
leave
adc
push
mov
mov
lock
cmpsb
mov
xor
arpl
push
jb
mov
add
lahf
mov
ljmp
rep
loope
push
pushf
and
xor
cmpsb
or
ret
jb
inc
inc
add
mov
jne
outsl
xchg
cmp
add
out
jg
add
cld
sub
add
inc
imul
jne
add
jb
mov
flds
lea
pop
mov
gs
test
movsl
push
jp
push
sub
jle
jo
cmp
and
aaa
mov
or
cmp
repz
fildl
lahf
sub
xor
add
jns
add
daa
or
mov
out
pop
mov
xchg
aad
add
outsl
inc
jnp
aad
ret
scas
jno
mov
dec
pop
addl
mov
pop
sti
nop
lahf
lods
es
mov
mov
inc
add
xchg
cmc
and
ss
jl
add
add
pop
sbb
adcl
stos
loope
inc
sbb
add
add
push
mov
mov
add
xchg
test
sahf
fs
inc
mov
add
insb
rcrl
rolb
stc
fmul
dec
push
or
and
jmp
test
sub
sahf
test
mov
push
jno
dec
sub
xchg
xor
ljmp
lock
mov
clc
dec
mov
jns
pop
mov
pop
les
cld
mov
jnp
std
mov
data16
dec
sbb
cld
rcll
lret
arpl
lock
push
imul
dec
dec
mov
mov
sbb
add
pusha
add
add
in
adcl
loop
add
lods
jae
cmp
pop
inc
add
sti
and
add
pop
and
jle
adc
loope
fmull
repnz
dec
and
faddl
divl
popf
pop
sti
in
push
sbb
out
inc
fldlg2
cmp
je
cmp
pop
mov
push
enter
ret
scas
xchg
cmp
xchg
lds
pop
cmc
or
ds
pushf
ja
insl
sbbl
lods
sbb
xchg
mov
aaa
push
xor
dec
cwtl
fnstsw
stc
sub
popf
ljmp
add
add
pop
jno
push
lret
sti
pop
scas
clc
ja
arpl
cmp
pop
imul
dec
loope
bound
and
aad
cmp
mov
mov
xor
fsubrl
cmp
test
and
mov
or
mov
sub
test
adc
lods
ss
jno
add
addb
lea
mov
mov
dec
add
jmp
fwait
add
mov
mov
fsts
push
addr16
int3
dec
dec
lods
or
push
add
aam
mov
sub
call
xchg
adc
lea
std
aaa
adc
inc
iret
repnz
sbb
pop
mov
popf
movsb
mov
inc
add
or
ret
add
shlb
mov
jg
outsb
sbb
inc
add
mov
jae
fistps
sub
inc
clc
mov
cmpsb
cmc
cmpl
pop
nop
mov
or
push
push
mov
jecxz
jg
push
cmp
aad
mov
ljmp
dec
mov
jle
dec
and
jle
add
jle
jns
fucomi
in
pop
imul
imul
movb
ds
cmp
adc
mulb
add
dec
cmpl
or
mov
add
outsl
test
int3
jp
aas
popa
jns
out
jmp
int
loopne
pop
push
int3
fsts
int3
cs
mov
ret
xchg
mov
mov
insb
and
pop
call
mov
add
xor
add
repnz
xchg
mov
nop
jne
pop
int3
fisubl
jbe
add
xchg
xchg
pop
sbb
sub
mov
in
sub
lods
cvtpi2ps
rcrl
dec
cli
pop
inc
pop
add
pop
pop
lcall
pop
sar
adc
sub
jg
bound
or
test
jl
sbb
rolb
mov
imul
inc
dec
push
jne
mov
inc
add
cwtl
mov
movb
outsb
addl
mov
pop
and
idivb
xchg
and
pop
add
in
jmp
cmpsb
xor
push
xchg
cmp
fwait
inc
jp
out
mov
sub
jle
mov
stos
insb
jo
out
repnz
sub
rorl
mov
add
mov
sub
lock
add
push
jmp
js
out
mov
sti
push
adc
sub
out
dec
push
mov
aaa
jns
pop
imul
and
dec
clc
leave
test
scas
cmp
add
mov
add
sub
xor
movb
jae
xlat
es
ficomps
lahf
push
pop
mov
add
jns
xor
mov
sub
mov
push
rolb
fisubrs
pop
ljmp
pop
ror
mov
sti
ss
add
clc
shll
and
xchg
and
fnstsw
inc
rolb
add
lret
pop
jo
scas
jmp
sub
add
aam
loopne
jnp
jno
das
mov
out
pop
dec
sbb
jae
dec
aam
loop
fstp
enter
test
dec
dec
fcomps
das
cmpsl
pop
std
sub
movsb
add
icebp
fs
loopne
movsb
push
mov
inc
add
jno
movsb
or
in
fcoml
mov
dec
mov
les
xchg
pop
xchg
pop
sub
mov
sbb
clc
ja
mov
mov
fimuls
add
mov
ja
ret
and
lods
cmpsb
sbb
inc
add
in
mov
add
xorl
mov
cmc
shlb
sub
in
stos
jge
mov
lret
cmp
adc
xorl
dec
cmp
cltd
add
iret
push
inc
addb
push
dec
addb
in
adc
mov
xchg
aam
ret
add
leave
hlt
dec
and
add
mov
inc
fwait
sar
dec
stos
or
rolb
or
cld
aad
push
sub
inc
add
jle
pop
addb
into
xlat
or
outsb
aad
mov
mov
push
mov
cwtl
push
fwait
cmp
pop
or
addb
insl
xor
mov
mov
and
pop
pusha
add
popa
outsb
cmc
mov
adcl
mov
push
adc
ja
fldl
enter
addr16
sbb
add
scas
clc
xlat
dec
cmpsb
lock
inc
push
inc
adc
cmp
sti
xchg
nop
sbb
pop
dec
gs
dec
arpl
mov
adc
mov
push
lcall
push
cmp
repz
out
out
jno
fisubrs
vmwrite
jecxz
add
add
popa
pop
lea
inc
add
mov
and
pop
mov
push
mov
mov
push
push
dec
xor
pop
jle
pushf
push
sub
add
push
jmp
shrl
add
sub
and
sub
mov
jp
loope
add
add
add
dec
pop
sti
add
rolb
fcomps
or
adc
add
daa
mov
jmp
pop
shlb
sbb
scas
addb
xor
fs
out
or
jp
add
loopne
sbb
push
roll
adc
adc
inc
add
ja
jp
dec
adc
stos
rolb
aad
mov
and
dec
subl
lret
jnp
dec
xchg
daa
fwait
add
inc
dec
jne
vshufps
push
inc
add
movl
out
pusha
add
shlb
lods
xchg
mov
fsub
xchg
iret
movsl
gs
out
xchg
mov
in
mov
js
mov
fimuls
xor
mov
push
jecxz
mov
jecxz
mov
add
dec
pop
dec
add
mov
loop
cmc
hlt
pop
cltd
jmp
mov
lods
push
pop
cld
out
jp
cmpsb
call
repnz
pop
or
sti
in
stos
jp
push
fistpll
fiadds
add
fildll
enter
push
xchg
adc
dec
xchg
stos
fcmovnu
lods
mov
pushf
scas
mov
daa
lods
in
shl
cmp
mov
addl
faddl
test
mov
push
cmp
jb
and
xor
pop
xor
add
xlat
xor
jo
and
cmp
pop
pop
ja
out
push
mov
ja
xchg
inc
mov
push
ret
xor
insb
mov
addl
lods
xor
jne
sbb
imul
add
mov
cmc
aad
das
sbb
out
xchg
cmp
movsb
frstor
add
stos
out
sbb
jb
pop
mov
push
jl
pop
test
add
pusha
add
add
imul
ljmp
loopne
xchg
int3
mov
and
sbb
nop
fwait
adc
movb
mov
cmp
or
jmp
jge
testb
js
inc
add
scas
ss
inc
lea
stos
divl
pop
sti
lds
mov
stos
ret
sbb
shll
cmpsb
add
fisttpl
addb
outsl
sbb
sub
xchg
jp
ret
mov
sub
xchg
jb
mov
jbe
shrb
cmp
mov
xor
gs
add
dec
push
xchg
mov
and
pop
cmpl
add
xchg
jns
ss
add
or
bound
movb
repnz
adc
push
add
lods
mov
jbe
test
imul
pop
pop
xor
call
lahf
xchg
jb
sub
add
cli
movsl
push
or
push
outsl
mov
add
jnp
sbb
ds
or
mov
les
roll
out
add
add
xchg
nop
xor
lret
call
in
and
mov
or
in
dec
gs
pop
or
fcomip
das
fstp
popa
mov
xor
pop
inc
ret
pop
sub
add
fistpll
popf
mov
rolb
dec
add
push
add
adcl
int
mov
add
jno
xchg
mov
add
mov
rcll
fists
xchg
je
push
cmp
fisubrs
addb
bound
mov
cmp
outsl
loopne
jl
hlt
movsl
icebp
pop
lods
loopne
xor
pop
lock
adc
iret
xlat
push
push
pop
or
push
pop
addr16
add
cld
outsb
ret
cmp
cli
add
xor
jl
test
jge
or
insl
xchg
mov
cmpsb
fdivs
dec
rep
mov
mov
cmp
loope
iret
adc
xor
push
into
sub
cmp
add
mov
jle
hlt
scas
jns
pop
xchg
jbe
add
lods
repz
add
add
push
outsb
stc
and
cld
lea
mov
lods
fadd
add
bnd
sub
add
aas
add
cmp
out
jbe
add
xchg
xor
mov
xchg
imul
cmp
lock
cmp
inc
cs
add
sahf
pop
int3
leave
imul
mov
xchg
jl
inc
add
xchg
push
and
or
jl
add
add
imul
pop
dec
cld
test
out
xchg
lahf
adc
xchg
enter
dec
push
addb
sub
adc
test
jge
mov
clc
in
movsl
inc
add
int3
jns
mov
addb
pop
leave
cwtl
jle
out
call
ret
cmpsb
pop
cmp
push
idivb
dec
xor
sbb
inc
add
ret
cwtl
add
ret
jae
rcrl
add
je
ficomps
scas
xor
sar
in
fldcw
and
jae
and
es
jge
movb
add
ret
push
pusha
add
sbb
aad
enter
loop
pop
push
sub
sub
add
out
add
mov
push
icebp
xor
mov
rcl
jnp
hlt
push
mov
sbbl
negb
pop
xlat
jl
jno
push
mov
idivl
inc
add
out
outsl
inc
xchg
or
fcoml
jbe
mov
cmc
daa
mov
add
insb
test
enter
int3
movsl
or
lret
out
jp
es
or
sub
addb
xor
stc
cltd
movsl
sbb
add
and
jbe
or
mov
add
xor
cmp
mov
pop
and
iret
xor
cmpsl
repnz
lret
sub
ja
adc
sub
adc
cmpsb
dec
lods
fisttpll
addb
add
jmp
add
ljmp
mov
enter
enter
fcoml
ffree
add
fdivrs
sbb
and
jmp
out
pusha
add
mov
cmp
das
xor
xor
add
or
mov
sbb
aad
lock
dec
dec
popa
cmp
lods
cmp
cltd
mov
dec
cmp
aam
stos
fdivl
sbb
jle
das
adc
enter
xlat
addr16
data16
sub
mov
adc
add
dec
iret
mov
stos
jns
imul
add
mov
jmp
inc
addb
mov
clc
rep
sbb
xlat
sahf
mov
jecxz
fmul
xchg
or
cmp
add
sbb
mov
jg
cmp
pop
repz
mov
movsb
xchg
cmpsl
nop
popa
mov
xchg
in
dec
xor
add
xorl
mov
stos
mov
add
add
pop
dec
pop
mov
lods
mov
dec
scas
stos
sbb
mov
pop
or
add
or
cmp
ljmp
imul
ja
inc
out
sub
gs
pop
outsl
in
push
popa
insb
fistpll
push
pop
iret
pop
push
dec
stc
mov
add
mov
sub
xchg
outsb
sbb
xor
popf
scas
insl
jl
xchg
mov
icebp
stc
clc
sub
jecxz
xor
fnstcw
push
xor
pop
adc
add
movsb
dec
jmp
mov
or
cmp
shr
out
pop
add
ret
stc
pop
cmp
unpcklps
rolb
mov
and
add
cs
jo
xchg
and
dec
fnstcw
jp
dec
inc
cmp
inc
sbb
sahf
xchg
loop
ss
pop
cld
mov
xchg
cmpl
repnz
sbb
jae
ret
hlt
ja
out
xchg
jl
imul
xor
lret
out
sub
cltd
lret
pop
lahf
push
inc
test
add
pop
mov
push
or
xor
xor
push
mov
aam
mov
movntq
add
xchg
ret
and
sbb
clc
cmp
sbb
xor
outsl
in
dec
pusha
add
aam
sar
push
add
add
push
inc
adc
aam
roll
sub
icebp
sub
xchg
mov
adc
outsb
cmp
pop
inc
aas
out
mov
xor
sbb
add
push
adc
add
add
out
data16
out
pop
cli
movsl
call
or
cmp
sbb
outsb
xchg
push
pop
mov
add
inc
add
cmp
repz
cmp
inc
pop
xchg
sbb
cmp
jmp
imul
imul
mov
ljmp
sarb
push
mov
push
fst
push
xchg
pop
sub
sti
in
stos
jae
int
scas
or
add
loop
mov
mov
pop
scas
mov
dec
push
mov
mov
mov
xor
jg
in
call
sbb
xor
scas
lret
pushf
mov
lea
pop
xor
xlat
push
xor
inc
add
inc
xchg
lret
iret
cwtl
loop
cvtps2pd
ret
pop
cmpsb
bound
jg
inc
xchg
into
pop
es
mov
fndisi(8087
js
add
xchg
mov
iret
mov
cld
and
xor
jl
addr16
ficomps
xchg
mov
mov
or
mov
sub
push
fstps
jnp
xchg
jne
loop
lret
and
scas
mov
mov
jecxz
cs
negb
out
push
mov
fcoms
lcall
call
push
mov
sub
loopne
sub
aas
daa
sarl
mov
cli
repnz
out
iret
scas
out
dec
call
push
sbb
aam
add
mov
in
dec
ljmp
sub
mov
add
cmovns
aad
xchg
cvttps2pi
addb
popf
pop
sub
inc
add
lret
inc
and
mov
fwait
in
out
cmp
ret
jge
loopne
sbb
add
dec
jbe
adc
fisubs
cmc
fdivs
jns
push
mov
lods
push
add
movl
mov
cmp
sub
xor
mov
add
shrl
push
sub
dec
pusha
add
dec
add
cmc
pop
loope
sbb
stc
adc
mov
in
add
and
jp
jae
add
rcll
outsb
sub
loopne
dec
push
sub
pop
sti
mov
dec
sub
aam
in
ja
imul
sub
ljmp
adc
add
and
inc
add
ss
hlt
into
fdivrp
decb
cmp
mov
and
cli
loope
pushf
test
lods
add
lds
cmp
push
in
imul
mov
mov
jno
xchg
aas
dec
addb
xchg
stc
mov
fsubrs
mov
stos
sub
in
aad
scas
push
iret
out
inc
add
outsb
sahf
movb
addb
pushf
sbb
and
cmpsb
fwait
jnp
inc
add
add
movsl
xor
add
add
mov
es
sbb
xchg
outsl
scas
mov
mov
sbbl
hlt
pop
movsb
andl
sahf
xlat
int
jg
mov
stos
out
mov
mov
jne
sbb
dec
jnp
jmp
dec
ljmp
out
mov
or
sti
jmp
adcl
fsub
and
subl
nop
shlb
out
sub
daa
int
adc
mov
jae
xchg
jbe
add
jl
mov
pop
mov
fwait
dec
push
in
jg
xor
add
popf
call
jnp
dec
xor
mov
push
push
cmp
jge
test
or
pop
ss
jno
mov
orl
add
add
xchg
push
xor
aas
loop
push
sub
xchg
out
pop
pop
pusha
add
adc
inc
js
sub
in
loope
jge
xor
dec
push
adc
cld
and
ss
sub
sub
loop
test
xor
repz
adc
rcll
xchg
popa
scas
pop
push
sub
lds
mov
mov
push
insl
push
xor
out
loope
mov
sti
xor
lea
stos
mov
or
les
jmp
add
lea
xorl
fwait
lods
data16
push
mov
add
fildl
jp
pop
into
call
pop
gs
sbb
dec
daa
sbbl
sbb
sbb
popf
shrl
sub
sti
in
aaa
and
js
test
jnp
addr16
mov
mov
sbb
gs
or
pop
addb
add
fnstcw
xchg
mov
or
and
fistpll
test
out
jo
or
lds
test
push
loope
xadd
xor
mov
inc
mov
jnp
aas
or
cmp
daa
push
inc
cmp
adcl
add
cmp
or
pop
fsubs
fstpt
adc
ja
adc
fists
bound
or
inc
mov
push
pop
dec
inc
movsl
lock
pop
adc
add
sti
into
dec
loopne
mov
mov
fyl2xp1
push
add
dec
mov
into
mov
outsl
push
add
leave
push
div
rorl
mov
adc
inc
xor
mov
inc
push
out
lds
push
push
add
ret
add
fstpl
mov
rol
addb
lret
clc
clc
in
out
cwtl
je
addr16
fs
fistps
xacquire
shlb
test
jmp
xchg
pushf
fstpt
jge
push
add
je
test
mov
lahf
and
jg
enter
push
iret
push
loope
push
add
mov
mov
cmp
ds
mov
out
mov
clc
test
dec
lret
mov
xor
into
aad
add
movb
jmp
imul
add
dec
dec
and
cmp
icebp
in
scas
fwait
xchg
cmp
sarl
out
pusha
add
mov
in
pop
fidivs
add
das
fidivl
or
cmp
and
or
gs
xor
or
sbb
lock
jp
add
imul
push
jnp
pop
int
or
test
add
mov
divl
stos
data16
mov
lods
push
add
ljmp
cmp
rcll
push
pop
fsubl
add
dec
mov
pop
xchg
sub
add
mov
inc
bound
addb
pop
hlt
fwait
dec
lock
lods
push
xchg
lea
call
addl
adc
mov
int3
int3
aad
ja
je
mov
ficompl
addb
cmc
pusha
add
mov
add
push
int3
mov
mov
adc
or
fsubl
out
fimull
nop
pop
stos
jbe
and
xchg
cmp
xchg
and
out
xchg
es
repnz
out
push
xchg
pop
push
testl
leave
dec
std
add
fwait
jns
addb
or
mov
outsb
xchg
stc
or
and
dec
out
cmp
xchg
or
aam
adc
test
dec
fnsave
jnp
jmp
aam
xlat
pop
mov
lret
mov
inc
add
xchg
jle
xchg
push
cs
jmp
sub
dec
data16
imul
mov
aas
mov
int3
pusha
add
fistl
pop
sub
jge
pop
pushf
cmpsb
insb
fwait
icebp
mov
pop
addb
add
repz
iret
mov
dec
or
pop
sub
mov
addb
add
add
rolb
add
movnti
add
clc
lds
xor
ret
std
cwtl
out
clc
aaa
mov
es
jae
push
adc
xchg
daa
mov
jge
ljmp
jp
add
mov
out
dec
push
add
hlt
sub
mov
or
xchg
clc
inc
add
add
sahf
shrl
pop
add
inc
dec
lret
ret
xor
lods
jns
add
arpl
or
aam
lea
aam
jmp
add
and
repnz
imul
push
lea
loopne
cmp
ja
push
pop
add
or
sbb
lds
mov
pop
mov
shr
gs
hlt
dec
iret
cwtl
mov
add
das
jg
andl
lods
sbb
into
out
loopne
lahf
push
je
jnp
sbb
or
nop
mov
loop
jecxz
dec
mov
cltd
push
loopne
mov
mov
js
gs
jle
add
mov
mov
stc
mov
in
cmpsb
sbb
inc
add
outsb
imul
clc
ret
addb
sti
push
pop
mov
fldcw
mov
xchg
mov
gs
icebp
mov
in
ficoms
or
add
outsl
and
pushf
insl
jae
mov
push
and
inc
mov
inc
mov
pop
fcoms
inc
or
pop
sahf
nop
out
repz
xchg
sbb
and
sub
pop
push
int3
das
stc
sub
cmp
mov
scas
jmp
add
and
xor
es
pushf
xchg
inc
xor
out
xchg
subl
mov
or
inc
mov
stc
mov
fs
scas
je
rolb
test
add
and
lods
insl
and
int
jae
test
xchg
outsl
dec
push
add
sbb
and
add
dec
add
sub
repnz
inc
push
adc
add
sbb
fwait
xchg
dec
mov
push
gs
in
int3
mov
push
inc
add
add
cmp
push
lock
jbe
addb
add
dec
xor
mov
add
add
lret
lods
inc
popa
gs
shrl
flds
jo
add
stc
fsubp
xor
inc
xor
mov
in
lahf
pop
jbe
mov
mov
sbb
loopne
jo
inc
add
push
xor
xor
add
shl
into
psubd
add
xchg
add
addr16
inc
mov
lret
or
enter
xor
push
sbb
scas
mov
inc
inc
cmpsl
xchg
jge
xor
mov
xchg
mov
mov
xchg
shll
xchg
xchg
dec
mov
or
call
adc
cmp
push
std
gs
sub
or
inc
add
pop
sub
sbb
add
push
outsl
test
cs
popf
out
rolb
dec
repnz
mov
add
add
addb
adc
clts
add
in
push
add
add
add
test
mov
fwait
cmp
clc
lods
sub
int3
mov
and
test
add
shll
insb
aad
lea
imulb
add
int3
add
pop
mov
pop
xchg
mov
adc
xor
pop
cli
lds
add
jl
fsubr
gs
jmp
lods
jecxz
and
xchg
sbb
add
mov
mov
add
mov
xchg
or
mov
xor
dec
pop
sub
leave
mov
cmp
adc
cmp
push
jp
aas
addr16
es
in
add
mov
mov
lret
jp
lds
imul
push
mov
enter
add
mov
mov
movsb
stc
sarl
add
mov
push
dec
xchg
push
xor
cmpsb
fsubrs
test
mov
add
in
inc
add
mov
mov
ja
jge
lock
or
fistpll
stos
inc
out
mov
outsb
imul
mov
inc
xor
ror
imul
int
fistps
cmp
movsb
pop
int3
lods
adc
ja
add
jo
jbe
rcll
or
inc
inc
add
push
cmp
addb
push
inc
jo
adc
movsb
xchg
xchg
ffree
push
inc
adc
gs
mov
popa
dec
or
cmp
lahf
mov
cmp
fs
cmp
rol
sub
cltd
or
or
out
jg
into
mov
mov
push
insb
xor
add
loope
xor
cltd
movb
and
sahf
mov
outsb
mov
dec
scas
aad
mov
jge
add
add
mov
inc
xlat
rolb
mov
ss
mov
jnp
push
inc
pop
jae
add
xor
xor
pop
divb
jns
add
add
or
fdivl
jg
cmp
add
mov
add
mov
orl
push
rolb
fprem
scas
push
sbb
push
and
je
sbb
or
xchg
cltd
lret
outsl
std
pushf
sbb
sbbl
cwtl
lret
lea
outsb
add
movsb
push
les
lds
inc
or
outsl
mov
ljmp
jge
popa
popf
movb
pop
push
dec
jb
cwtl
sub
xchg
mov
out
pop
gs
rolb
mov
cmp
xlat
test
pushf
lcall
jp
enter
push
lods
lret
mov
je
les
and
mov
pop
jp
add
add
inc
add
mov
push
pop
nop
ret
push
sub
mov
xchg
in
cld
mov
add
cmp
cmc
call
mov
out
int
add
cmc
mov
fsts
push
repz
inc
add
push
mov
insl
je
add
inc
hlt
clc
sbb
mov
inc
adc
or
add
xor
push
xchg
pop
add
cli
mov
or
sub
add
xchg
mov
add
xchg
test
in
lock
mulb
sub
jnp
shll
or
inc
xchg
repz
cwtl
fisubrl
sbb
xchg
pop
and
push
dec
gs
inc
fwait
pushf
jne
pop
mov
pop
outsl
push
mov
add
pop
pop
pop
in
pop
out
add
pop
xchg
xchg
pop
xchg
call
mov
arpl
jnp
add
xchg
in
cwtl
sub
sbb
add
dec
inc
jbe
jge
jl
pop
mov
inc
add
sub
add
movsb
mov
mov
hlt
push
xchg
add
in
lods
xchg
mov
mov
cs
ljmp
loope
sbb
or
adc
movb
add
and
mov
mov
sub
xchg
mov
addb
clc
cmp
add
gs
push
daa
mov
and
fidivl
mov
movsl
addb
in
xor
out
addb
xor
pop
sbbl
inc
add
sub
ret
and
and
push
pop
inc
mov
jp
mov
xorl
sub
sub
xchg
add
movsl
aaa
int
rolb
mov
mov
pusha
add
adc
loope
fstpt
pop
mov
das
mov
cmpsb
test
cwtl
sub
shrl
daa
inc
jns
ret
outsb
jb
mov
sahf
aad
mov
adc
inc
add
add
sbb
movsb
mov
loop
mov
enter
mov
in
out
in
xchg
push
jecxz
add
pop
add
sarl
or
daa
or
mov
push
jg
sub
sub
add
sbb
mov
add
push
inc
fdivs
mov
lea
mov
lods
pop
arpl
add
cmc
leave
mov
mov
add
outsl
sub
dec
mov
stc
into
fs
mov
in
mov
and
neg
xchg
psraw
call
cmpsb
mov
add
pop
ljmp
test
add
or
inc
add
out
xchg
sub
sub
outsb
or
popf
aaa
arpl
lods
mov
aaa
mov
or
mov
scas
and
jns
sbb
add
fisubrl
aad
int
pop
fwait
cmp
add
mov
add
jmp
add
popf
mov
stc
out
xchg
outsl
dec
mov
pop
lods
mov
lahf
daa
pop
fiaddl
jno
xor
add
pop
in
push
shr
in
sub
stos
in
push
ljmp
adc
out
adc
imul
jbe
inc
add
and
push
add
test
adc
ljmp
jl
sbbl
test
je
outsb
lods
sub
push
mov
mov
lea
xor
xchg
adc
lcall
add
add
xor
add
cmpsb
inc
add
lods
jbe
pop
fistpll
inc
add
ljmp
sub
jg
lods
mov
loop
mov
mov
jge
repnz
mov
add
dec
std
adc
xchg
mov
add
add
add
into
mov
cli
inc
sbb
mov
stos
out
inc
add
lds
mov
push
testb
mov
sub
movsb
daa
test
fldt
pushf
push
add
mov
test
xchg
out
in
arpl
add
cmpsb
popf
pop
xlat
jp
mov
jmp
cmp
pop
mov
lahf
push
addb
add
inc
insb
ja
ss
xchg
mov
xlat
gs
je
test
add
pop
cmp
fsubl
mov
mov
ds
add
push
xor
xchg
jmp
add
mov
sub
lcall
cwtl
int3
push
imul
sub
jecxz
test
add
repnz
testb
negb
fisubrl
push
or
jmp
cmp
xchg
pop
jp
jne
pop
pusha
add
negb
inc
in
mov
je
movsl
in
jns
sbb
pop
decl
fidivrs
loope
rolb
lahf
adc
stc
mov
mov
add
add
push
cmp
mov
enter
sti
and
add
push
pop
adc
fwait
gs
add
or
in
lods
sbb
xchg
rolb
movsl
cmp
sbb
jnp
mov
add
sti
push
push
lds
push
xchg
dec
or
rolb
pop
xor
movsl
mov
adc
mov
xor
xchg
int3
leave
adc
mov
lret
fiaddl
add
mov
push
in
aaa
hlt
mov
add
dec
lahf
mov
pop
add
in
xchg
pop
adc
in
js
ss
mov
jmp
sbb
ret
movb
das
sbb
inc
add
movl
xchg
rorb
adc
or
ror
jns
mov
movsb
cmc
add
jecxz
test
sub
or
jo
mov
xchg
repz
push
jnp
xchg
pop
pop
push
add
mov
data16
mov
ja
outsb
ret
scas
clc
repnz
xchg
xlat
outsl
dec
sahf
sbb
mov
pop
cmc
pop
es
add
rcl
dec
cmpsl
xchg
repnz
add
xor
jo
fwait
rorl
push
add
add
and
loope
orl
int3
jle
jle
mov
jecxz
scas
les
mov
clc
xor
and
das
int
mov
movsb
mov
pop
inc
add
adc
ret
aam
movsb
scas
repz
dec
push
movsl
nop
mov
push
mov
ss
push
adc
mov
xchg
fdiv
adc
lret
sub
and
stos
xlat
std
dec
data16
call
push
mov
jne
mov
pop
xchg
add
add
rorb
pop
and
add
cs
sub
in
shrl
xor
mov
call
mov
jecxz
adc
fsubrl
adc
xchg
and
adc
xchg
fcomip
and
push
push
dec
lods
xor
mov
ds
ret
cmp
adc
sub
fabs
sbb
push
push
add
mov
push
push
into
lods
sub
bound
mov
push
mov
fsubrp
mov
and
fbld
mull
push
sbb
inc
scas
mov
addb
loope
mov
lahf
xchg
add
push
add
cmp
out
mov
gs
add
daa
in
js
mov
pushf
ds
lret
scas
and
addr16
add
pop
fdivr
push
not
push
and
ret
lods
scas
mov
rcrl
push
aaa
cmp
pushf
test
add
add
mov
add
lcall
jl
aas
adc
imul
cmp
shrl
fstpl
cs
add
imul
movsl
jle
add
popa
mov
outsb
int
mov
sbb
lods
mov
sub
inc
gs
shrb
add
in
add
iret
aam
push
jle
dec
mov
iret
pop
test
cli
out
sub
sahf
fsubl
ret
fimuls
fcmovnb
add
dec
fisubl
movsb
inc
add
mov
jo
xchg
mov
ret
ds
loopne
pop
pusha
add
adc
js
test
xchg
dec
jecxz
pop
cmp
lahf
xor
dec
mov
xrelease
pop
flds
sbb
pop
lods
xchg
jbe
addb
in
je
clc
or
jecxz
mov
aas
push
xchg
pop
aad
lea
mov
and
cmp
mov
in
mov
je
jle
push
dec
ds
jb
lds
mov
add
adc
jae
scas
sbb
add
aaa
cmp
lods
stos
into
adc
les
dec
subl
push
rorl
cltd
pop
mov
cs
jae
pop
sahf
stos
cli
mov
test
add
push
cli
aas
fxch
mov
or
mov
mov
out
cmp
sbb
inc
add
inc
add
jnp
add
add
dec
sbb
pop
fisubrl
in
push
push
add
std
push
mov
mov
add
pushf
cmp
popa
mov
fs
aam
push
sbb
cmp
adc
scas
mov
mov
adc
dec
jp
xchg
out
cmp
or
pop
mov
outsl
sti
fwait
cmc
or
ret
icebp
add
or
add
lods
adc
add
jl
notl
cmp
mov
xor
or
mov
mov
dec
scas
xchg
in
cmp
mov
fiaddl
add
aad
and
rcrb
sub
mov
adc
cmp
add
fwait
mov
push
fucomp
push
daa
test
pop
pop
push
cmp
outsb
cwtl
cmp
mov
test
jo
pop
ror
fs
inc
add
xor
popa
xchg
xchg
jle
subl
cmp
add
scas
fs
mov
sub
idivl
push
adc
add
call
sub
inc
add
inc
xor
xchg
push
sub
leave
shr
testb
lret
add
pop
bound
push
aad
ret
sbb
fstpt
lea
sbb
enter
cs
pop
daa
sbb
mov
rcrl
in
daa
pusha
add
lahf
adc
add
cmp
mov
test
add
jne
cmp
sub
add
aad
xor
scas
jnp
clc
mov
jb
int
add
cmp
add
daa
jge
mov
sbb
aam
add
fwait
pop
lods
cli
pop
jb
fnstenv
stos
sub
add
mov
in
aas
mov
js
jg
cmp
jbe
sub
loopne
push
pop
jo
in
mov
cmp
insl
xchg
fxch
xor
mov
cmp
repnz
inc
add
jg
ficoml
xchg
arpl
cs
sbb
xor
push
add
xor
nop
lock
aaa
add
fldl
add
sub
dec
ja
into
mov
lcall
push
mov
cmp
jp
push
incb
loope
testl
sbb
je
dec
aas
adc
ja
gs
mov
lods
lea
add
jo
push
es
jge
adc
push
call
cmpsb
les
sub
cli
in
leave
mov
pop
leave
out
adc
in
inc
stos
and
push
sbb
xor
xor
aad
sbb
ja
std
xor
test
call
xlat
mov
sbb
pop
imul
outsl
jbe
and
sar
cmpsb
popf
iret
pop
rcll
lret
rcr
jb
or
add
movb
cltd
mov
test
jae
push
or
popf
sub
movb
ds
adc
cmp
shlb
jno
lock
cs
cli
jb
fs
rolb
sbb
add
or
jb
dec
sbb
stos
add
or
adcl
rolb
sub
in
jp
push
inc
or
adc
pusha
add
jb,pn
dec
dec
scas
cmp
push
push
add
mov
sbb
in
and
dec
add
lock
int3
into
in
or
addb
test
cwtl
jo
pop
pop
push
sub
sahf
clc
push
push
sub
call
out
adc
fldl
cmp
sub
xlat
jmp
ljmp
pushf
lods
repz
jne
inc
call
sbb
push
jnp
mov
movsb
jecxz
dec
scas
adc
stos
sub
mov
pop
shll
insb
ficoms
ss
add
inc
add
sahf
int3
add
leave
out
push
insb
int
pop
jno
jge
mov
mov
std
and
mov
movsb
in
add
stos
mov
lcall
add
push
jge
jle
fimull
pop
dec
or
xchg
mov
mov
jnp
push
repnz
fcmovu
sub
add
fidivs
jp
jae
push
scas
or
movb
pop
push
in
adc
ficompl
and
mov
cmpsl
gs
sahf
aad
mov
cltd
lds
adc
add
and
movsl
jbe
mov
or
xor
nop
jno
subl
xor
xor
gs
adc
mov
or
in
movsb
in
mov
sub
dec
and
dec
pop
pop
pop
enter
cmp
adc
mov
rep
sub
testl
int3
ficompl
adc
add
add
outsl
sbb
outsl
pusha
add
fs
mov
stc
rorl
sahf
and
sub
push
jo
aaa
and
push
add
push
pop
jmp
jne
and
mov
repz
inc
adc
popl
add
sbb
xchg
push
inc
add
jg
xor
sbb
in
mov
ret
scas
cmpsl
mov
push
mov
aam
in
lret
shlb
cmp
aad
rolb
clc
inc
add
mov
pop
sub
idivl
add
jecxz
add
aas
dec
push
jl
das
rolb
ljmp
fs
or
incl
stos
loop
in
fwait
enter
and
cmc
das
cli
ljmp
js
in
das
sti
jb
dec
fsubrs
pop
jl
xlat
fdivrl
scas
daa
push
sub
push
jcxz
test
jecxz
sbb
push
add
xchg
add
xchg
outsb
shrl
imul
arpl
jp
ret
sbb
test
add
inc
les
or
fldl
pusha
add
mov
xor
data16
lods
push
mov
in
int
xchg
mov
out
and
inc
push
out
push
sub
cmp
punpckhbw
xchg
mov
sar
stc
xchg
xchg
cwtl
cmp
cmp
push
add
mov
ljmp
popf
outsl
pop
aam
shll
es
aas
xlat
inc
repz
push
mov
and
jl
inc
add
and
ss
add
mov
xor
or
imul
or
fwait
cmp
inc
jbe
dec
lcall
dec
xchg
mov
cmp
mov
cmc
rolb
leave
adc
outsb
inc
push
mov
clc
push
mov
std
or
jno
dec
outsb
xorl
push
les
mov
mov
addb
xor
sbb
xchg
cmp
adc
call
cmp
xor
add
dec
or
xor
xchg
mov
pop
inc
add
jno
add
cmp
sbb
sub
jbe
imul
imul
add
js
push
sbb
sbb
xchg
pop
fists
sub
cli
xor
mov
add
push
jp
add
cwtl
stos
xlat
out
lcall
adc
add
int
test
mov
ja
in
lcall
or
mov
jbe
push
ljmp
mov
aad
ficoml
push
or
mov
ret
lret
adc
dec
aad
adc
cmpsl
mov
mov
fcoml
sbb
stc
loopne
cmpsl
jns
xchg
movsl
aam
out
mov
jne
add
leave
pusha
add
jmp
sbb
fst
pop
and
repz
gs
dec
fcmovnb
pop
and
loopne
lods
and
cmp
jmp
cmp
pop
pop
out
test
addb
fwait
scas
mov
sub
je,pt
js
add
pop
jnp
add
cmpl
xchg
les
cwtl
fwait
xchg
cmp
push
or
mov
das
fs
sub
or
shl
add
mov
add
sub
shrl
loopne
add
pop
out
mov
rolb
jmp
pop
mov
out
adc
cmc
inc
xchg
xor
and
push
push
add
add
aaa
pop
aad
sub
adc
push
mov
adc
aas
mov
push
cmp
push
dec
pop
xchg
adcl
xlat
push
add
std
lret
push
cld
xchg
jg
add
test
pop
inc
add
loope
lds
or
dec
lahf
jge
jne
add
lods
sar
jo
dec
cmpsb
out
imul
cmp
ficomps
rcrl
xlat
out
mov
mov
xchg
sti
addr16
mov
sbb
add
inc
mov
decl
arpl
sub
les
and
jae
or
out
cmpsl
dec
mov
fadds
out
or
bnd
loopne
push
int3
pop
or
cmp
in
call
cmpsb
test
or
pusha
add
add
out
push
mov
xchg
enter
cmp
add
mov
add
or
adc
popa
pop
and
and
bound
lahf
lahf
inc
add
out
jg
int3
mov
lret
ds
mov
sub
lahf
fs
ljmp
push
scas
jae
push
test
testl
cmp
addb
mov
xor
cmp
mov
mov
out
xor
mov
cmc
testl
or
jno
xchg
xchg
jne
xlat
scas
jbe
test
addb
ds
dec
lea
sub
push
dec
dec
push
mov
lods
or
xor
mov
add
jl
mov
push
movb
sar
rolb
fidivs
add
frstor
outsb
adc
jne
popa
adc
pop
test
das
insl
movl
push
dec
xchg
xchg
pop
gs
and
and
addr16
pop
movb
mov
adc
or
sub
xor
ret
stos
cmp
sbb
mov
scas
lock
into
mov
ja
imul
push
add
and
jnp
adc
adc
sahf
movsb
test
xor
repz
add
add
push
ret
daa
and
jae
les
pushf
ret
das
outsl
inc
repz
sub
cmp
push
sub
cs
xchg
adc
in
push
add
cmp
jbe
fisubl
fistpl
test
pop
dec
stos
sbb
jns
mov
push
or
xor
lcall
int3
movsl
mov
dec
cs
rorb
or
push
add
xor
dec
sahf
sar
sbb
dec
sub
mov
addr16
mov
mov
add
add
and
pop
fdivr
jge
xchg
and
add
fistpll
xor
and
mov
fwait
movb
fwait
es
jb
ljmp
out
test
pop
jge
jecxz
or
jp
loopne
repz
iret
pop
push
fnstenv
fists
ret
add
fsubrs
aas
or
and
inc
add
mov
dec
or
nop
daa
imul
mov
push
rorl
neg
enter
mov
nop
cmpsb
pushf
sarb
ljmp
lret
cmpsl
push
in
or
mov
dec
sbb
fcom
into
pop
add
pop
je
cmp
jp
ljmp
xchg
add
fadds
xor
dec
std
push
icebp
imul
js
js
sub
popf
ja
lods
mov
xchg
ror
pop
lcall
lret
push
mov
jg
add
lret
jge
jmp
mov
inc
or
push
fst
push
and
or
xor
or
in
jno
add
addb
js
add
mov
stos
outsb
movb
xor
inc
add
cmpl
lods
ror
add
aaa
push
rclb
push
or
gs
xor
push
jecxz
ss
les
jg
scas
add
mov
popf
sti
out
jp
sarl
inc
add
loopne
inc
add
stos
fs
xor
or
add
mov
push
add
and
out
pusha
add
dec
fcompl
mov
push
xor
add
mov
add
mov
pop
je
int
nop
cmpsl
and
or
sbb
xor
mov
push
add
push
xchg
sub
aam
ja
mov
mov
call
xchg
add
data16
stc
jp
jge
add
into
sub
scas
test
ss
xchg
int3
test
push
insl
mov
outsb
fnstenv
mov
jbe
xchg
cmp
icebp
or
xchg
adc
ljmp
sub
pop
roll
sahf
stc
push
ss
sbb
add
jb
fmulp
addb
add
icebp
push
hlt
movsb
fisubl
add
test
jne
push
or
add
push
sbb
iret
jns
into
bound
in
mov
ss
and
int3
ljmp
popf
jae
add
xchg
mov
insb
addb
push
pop
hlt
push
sbb
inc
add
ret
push
pop
mov
ljmp
and
ds
into
in
xchg
xor
movsl
clc
aad
lcall
mov
std
adc
into
and
stc
je
cmc
divb
sbb
lock
push
cli
xorl
dec
pop
ljmp
add
push
scas
int3
repnz
mov
jno
ljmp
push
lcall
addl
mov
daa
ss
cmp
fwait
mov
clc
push
lods
push
add
add
mov
mov
mov
clc
and
adc
add
push
clc
mov
xchg
ljmp
jl
sbb
mov
shl
shll
or
and
lahf
fldl
or
addb
dec
sbb
call
mov
gs
cmp
in
mov
pop
inc
adc
mov
outsl
std
sbb
aam
je
dec
jmp
push
call
iret
adc
push
or
inc
nop
imul
hlt
pop
out
imul
mov
aam
out
pop
xchg
xchg
test
add
pop
jae
aas
sub
test
sbb
and
iret
add
xlat
adc
cltd
es
mov
out
xor
mov
add
arpl
adc
add
sub
jge
enter
push
dec
mov
mov
cmp
cmp
iret
mov
punpcklwd
jle
xor
mov
mov
pop
jmp
add
sbb
lods
and
dec
subl
in
stos
mov
in
fildl
cmp
punpckhwd
test
iret
jnp
les
addb
xchg
jbe
jo
andl
push
add
push
push
pop
inc
add
pop
outsl
cld
jle
lahf
stc
pop
gs
addr16
xor
enter
pop
adc
pop
fsubrp
lock
sbb
out
fdivrl
xor
dec
popa
add
insl
into
or
push
add
and
test
inc
add
loop
stos
addb
lea
mov
lock
popa
mov
sti
fwait
sbb
add
fdivrl
daa
pop
inc
add
cwtl
movb
lods
mov
hlt
mov
jmp
add
mov
jb
jns
add
lret
or
fidivrs
mov
xlat
cs
or
cmpl
cmp
mov
add
mov
rcll
or
inc
add
outsl
or
inc
stos
psrlw
jo
mov
jae
cmp
sbb
xor
mov
fisttpl
std
or
outsb
loop
push
or
sub
mov
mov
movb
jle
add
add
cmpsl
scas
stos
test
pop
mov
pop
dec
ja
movb
ljmp
imul
add
mov
xchg
leave
lea
and
scas
and
movb
add
mov
scas
ja
pop
cltd
inc
out
dec
aaa
push
lret
fmulp
sbb
mov
xchg
inc
and
lret
and
or
aas
loopne
hlt
adc
adc
lcall
push
lret
lods
push
add
push
nop
aaa
pop
mov
add
mov
push
mov
popa
sbb
xlat
inc
add
mov
mov
dec
lahf
mov
ja
data16
sbb
popa
cltd
into
pop
add
cld
call
mov
mov
xchg
aas
dec
sbb
shlb
jno
xor
add
ss
jns
icebp
xlat
adc
pop
xor
cmp
add
dec
insl
dec
jo
cli
sahf
mov
imul
bnd
repz
push
hlt
inc
clc
fdivr
sbb
mov
insl
and
push
add
add
cmp
push
cmp
mov
je
mov
xchg
std
sub
dec
or
pop
movsb
cmpsb
jmp
push
loope
loop
ss
xchg
mov
xchg
add
inc
lahf
in
popf
mov
xlat
sbb
pop
mov
sbb
mov
pcmpgtd
loope
mov
sahf
inc
dec
arpl
out
cmp
test
scas
adc
mov
aad
jb
add
in
out
inc
add
sbb
mov
xchg
inc
sub
xor
jbe
add
add
filds
lahf
movb
add
pop
cmp
push
xchg
or
xor
mov
je
cmpl
push
sub
xor
cli
mov
push
add
enter
add
movb
jno
inc
das
popa
lds
add
xor
imul
push
jbe
addr16
add
je
jo
mov
jg
and
pop
cmp
inc
loope
imul
jns
dec
add
cli
insb
mov
add
sbb
movsl
loope
xchg
cmp
pushf
push
mov
push
inc
dec
adc
mov
and
xchg
xchg
pop
inc
mov
popw
pop
sbb
dec
mov
jbe
bound
aam
fildl
jp
lret
push
push
mov
mov
add
pop
xchg
sbb
shrb
add
dec
popf
dec
jg
imul
add
add
inc
mov
rolb
mov
hlt
jg
jo
stc
mov
mov
leave
outsl
lock
sub
mov
add
addb
jno
enter
pushf
jmp
addb
mov
inc
pop
push
enter
loope
dec
sub
mov
test
jns
int3
adcl
inc
test
mov
push
jns
rcrb
cmpsb
sub
dec
mov
lds
fdivs
inc
mov
xor
subl
push
in
jg
jnp
and
inc
add
test
sti
inc
add
xor
scas
push
jb
cltd
je
das
sub
movsl
sbb
mov
je
js
call
cmpsb
stc
mov
jb
and
cmp
pop
daa
rolb
push
adc
leave
add
rorl
add
ret
pop
out
pop
cmc
cmp
out
aas
dec
sub
int
mov
pop
rcrl
ret
in
neg
cli
ds
out
add
push
mov
fiadds
pop
sbb
mov
imul
out
fistpll
fcomps
jbe
outsb
in
add
sar
cmpsb
test
outsb
mov
push
add
movl
aam
jmp
inc
add
mov
xor
dec
lret
daa
loope
add
jb
add
ljmp
add
es
lock
movlps
into
scas
std
std
or
mov
lret
xor
push
or
push
shl
inc
add
adc
mov
ficoms
add
push
xchg
mov
xor
lock
aaa
xlat
and
movb
add
decb
mov
lods
dec
js
sub
add
push
and
xchg
inc
leave
repz
mov
lret
jg,pn
popf
inc
test
adc
addb
add
scas
mov
sub
fwait
in
push
sbb
rep
add
iret
scas
xchg
cltd
pushf
lods
xchg
inc
add
mov
lcall
ret
dec
bound
sub
or
mov
int
test
cwtl
aad
jo
pop
mov
xor
inc
add
push
pop
and
scas
adc
dec
push
movb
lock
pop
fnstenv
stos
in
xor
cmp
leave
rolb
cmp
test
iret
fwait
jae
add
cli
leave
sbb
shll
leave
add
sahf
mov
mov
add
movb
add
or
push
cs
out
pop
jbe
add
ret
in
rolb
in
js
dec
adc
add
sub
test
movb
data16
adc
add
or
push
aam
rolb
or
inc
leave
adc
fstpl
jle
fdivp
mov
dec
pop
mov
icebp
dec
sub
scas
adc
mov
je
jle
fs
popa
xchg
cmp
cmp
push
out
pop
dec
xchg
repnz
xor
add
xchg
cmpsl
les
std
and
jb
ret
stos
ds
pop
fwait
pop
lea
stos
inc
out
dec
outsl
fwait
sub
test
inc
dec
out
rolb
scas
dec
js
sbb
je
cmp
add
fcom
filds
test
add
fcomip
imul
in
mov
inc
add
int3
sahf
mov
add
es
xchg
cmp
sbb
iret
mov
pop
and
mov
std
out
bound
jno
add
lods
in
xor
out
fstps
push
add
xor
add
mov
lock
cmp
iret
loope
xchg
or
movups
pop
test
dec
push
adc
add
lods
or
cmp
loopne
jne
ds
lods
add
nop
test
push
sbb
mov
les
mov
mov
test
stc
or
rol
push
cmp
shrl
int3
rcrb
sti
mov
add
imulb
daa
addl
loopne
adc
push
inc
inc
add
xchg
adc
mov
xorl
clc
jmp
add
cld
fistpll
adc
leave
sub
jae
pop
xchg
repnz
bound
jle
fisttps
add
push
lcall
xchg
sahf
je
add
je
mov
xchg
and
lods
pusha
add
push
lods
xchg
lcall
dec
sarb
adc
and
cwtl
push
les
les
xor
add
out
dec
mov
jne
push
mov
addb
lahf
sbb
hlt
mov
or
loopnew
cmp
cwtl
cmp
add
fadds
inc
add
xor
rolb
xlat
mov
sub
add
ljmp
pop
out
inc
add
push
add
inc
test
adc
add
add
and
pop
sbb
add
inc
fwait
cwtl
push
cs
or
sar
in
daa
xlat
adc
repnz
aas
bound
pushf
ja
add
imul
add
add
ret
dec
out
pop
mov
lret
cld
sahf
nop
fsub
mov
add
int3
push
sbb
push
shrl
jmp
sub
mov
mov
pushf
icebp
sbb
imul
adc
dec
inc
mov
pop
cmp
lret
sbb
ljmp
aas
pop
ss
push
cmp
popa
dec
ror
cmp
aas
jp
xchg
movl
andl
jo
in
jns
add
cmp
sti
in
dec
insl
imul
clc
addr16
cld
movsl
rorl
stos
mov
cmc
stc
lret
mov
rolb
pop
sub
mov
enter
inc
add
add
sahf
adc
add
jne
pusha
add
or
add
daa
mov
mov
jns
out
or
sub
xchg
add
and
push
add
lret
in
mov
scas
cs
pop
pop
inc
add
insb
sub
mov
stos
imul
adc
add
aad
gs
ljmp
addb
push
dec
or
imul
mov
add
jp
dec
leave
shrl
sbb
and
lret
rolb
bound
mov
inc
add
popaw
cmp
insb
jnp
lock
addr16
pop
or
adc
mov
daa
push
xchg
or
arpl
rcrb
es
and
lock
sub
dec
push
lds
cld
inc
mov
xor
adc
movb
add
xor
mov
and
sub
ds
add
inc
mov
xchg
fcmove
sbb
pop
not
repnz
mov
inc
rcrl
xchg
loopne
fldl
je
test
sbb
add
mov
movsl
cld
or
bound
mov
ds
xchg
inc
dec
xchg
cmp
add
or
fxch
xor
lahf
mov
push
add
and
lcall
cmp
add
into
sub
cmp
ljmp
jle
mov
int3
push
push
stc
pop
inc
add
sbb
shlb
clc
push
add
loope
mov
add
adc
dec
push
repnz
enter
sbb
adc
inc
sub
adc
iret
xlat
iret
imul
sub
add
xchg
cmp
movsb
adc
icebp
cld
into
ret
pop
inc
add
add
repnz
inc
add
and
sbb
jmp
add
jecxz
push
add
sub
ljmp
scas
inc
add
adc
pop
sti
dec
mov
in
dec
aas
cltd
pop
pop
lret
jae
mov
popf
sbb
shl
cmp
add
imul
jo
push
adc
enter
test
sub
insl
add
and
dec
loopne
nop
dec
dec
addb
int3
jbe
jmp
jno
bnd
aaa
xor
push
out
or
adc
pushf
cmc
popa
rol
dec
dec
mov
sub
in
jne
dec
notl
scas
dec
popa
test
hlt
dec
cmp
outsb
sti
push
enter
je
cmp
dec
cld
xor
fldenv
dec
add
or
pop
mov
adc
add
mov
add
jecxz
xor
add
dec
pop
cmp
mov
mov
iret
jecxz
popa
js
add
xor
jl
daa
or
jae
push
mov
xor
ds
fcompl
ss
mov
pop
das
orl
pusha
add
aad
lcall
cs
out
inc
add
and
dec
mov
add
fsubr
sahf
leave
adc
mov
aas
aad
push
leave
pop
out
pop
adc
sbb
inc
jp
in
in
mov
leave
push
adc
mov
test
test
bound
adc
cltd
es
cltd
inc
scas
lods
cmc
cmp
sub
xchg
mov
mov
cltd
cmpsl
stos
mulb
ja
jb
push
add
mov
inc
and
popf
mov
fldt
jbe
stc
or
fcomps
cmp
inc
int
mov
xlat
in
stos
jne
or
mov
add
pop
jp
sahf
or
push
inc
push
mov
add
aam
cmp
cwtl
adc
jne
adc
sub
hlt
dec
loopne
xchg
mov
adc
lret
fsubrl
jmp
and
gs
pushf
jns
jmp
sbb
cmpsb
fdivl
xor
cmpsl
lea
outsb
andl
jb
mov
cmp
or
mov
imul
xchg
test
push
clc
test
aaa
mov
push
je
fwait
repnz
loopne
and
sbbl
arpl
aaa
xchg
in
outsb
pop
inc
add
cmp
sub
mov
addr16
arpl
insb
dec
fimuls
pusha
add
and
xor
or
ss
or
js
add
add
and
out
scas
mov
xchg
mov
hlt
push
outsb
dec
xchg
xor
xchg
lret
jle
insl
into
jbe
test
push
dec
cmp
in
jmp
inc
xchg
or
mov
movsb
movb
sbb
push
sbb
add
mov
fnstcw
aaa
clc
push
dec
bound
dec
fld
add
pop
dec
bound
mov
mov
cmpsb
mov
aas
call
inc
dec
cmp
inc
add
cli
lahf
cmp
cmpsl
mov
mov
add
mov
mov
dec
pop
sub
data16
in
mov
xchg
push
sub
mov
out
jg
xor
add
daa
ja
out
sahf
sbb
add
adc
fbstp
pop
and
push
push
mov
sub
out
lods
adc
and
outsb
sar
in
pop
cmp
mov
mov
lret
sbb
add
add
and
mov
add
movsl
outsb
jl
imul
out
aam
lock
mov
mov
jmp
xor
sub
rcll
mov
xchg
enter
lods
push
movb
push
mov
jg
add
pop
mov
fucomp
xor
inc
lcall
in
jno
push
add
push
add
pop
mov
and
je
out
shll
mov
scas
les
sub
es
dec
pop
add
mov
or
sbb
sahf
addb
ret
inc
rcll
inc
add
mov
mov
xor
pop
sub
mov
cmpsl
iret
cli
add
inc
push
pop
lock
movsb
imul
jo
sub
iret
pop
dec
dec
sub
iret
fistpll
fcmovbe
mov
inc
jmp
in
push
enter
ret
xchg
and
cmp
addb
pop
mov
sbb
test
pop
lahf
aaa
xchg
push
push
dec
cwtl
xor
mov
and
mov
mov
xlat
jb
add
getsec
hlt
fsubp
pop
push
add
push
dec
ficompl
fistpll
push
popa
iret
add
lcall
xchg
fdiv
call
jb
pop
jge
into
lret
sbb
clc
adc
jmp
inc
dec
mov
das
out
mov
test
push
inc
add
sbb
stc
dec
mov
cmc
stc
mov
lahf
xchg
inc
add
lods
add
fwait
ljmp
pop
or
add
sbbl
data16
jge
sti
outsl
jno
ja
sub
fstps
xchg
cmpsb
or
mov
push
push
add
adc
push
in
mov
push
in
add
xchg
push
dec
shlb
push
dec
sub
nop
lahf
dec
negl
and
daa
in
xchg
inc
montmul
cmpsb
inc
dec
out
addb
dec
cmp
xor
adc
xor
add
pop
cmpsb
sub
add
pushf
test
mov
pavgw
cwtl
inc
test
push
es
fisubrs
mov
rcrl
cmc
popa
mov
mov
adc
movsb
add
jae
fsubp
gs
imul
shlb
clc
or
jne
push
iret
loopne
xchg
in
jl
add
add
and
rcrl
add
and
mov
dec
loop
aam
adc
pop
push
add
pop
push
mov
into
out
insl
bound
out
scas
xchg
mov
dec
int
add
inc
add
jno
fs
rolb
movsl
repz
insl
jle
lock
xchg
sarb
jae
fcomp
sub
leave
inc
rolb
dec
push
stc
in
xchg
add
ret
insb
jb
xchg
or
cmp
lret
fwait
out
fdivrl
adc
ja
pop
adc
mov
sbb
out
lods
xchg
out
add
clc
adc
jl
leave
mov
fdivrl
addb
fpatan
inc
add
push
mov
shl
cmp
jne
cmp
push
and
push
push
mov
add
aad
jle
jge
add
cmc
insb
inc
adc
add
insb
imul
mov
pop
fwait
mov
ss
movsb
mov
mov
cmp
jge
add
nop
rcl
jnp
ljmp
repnz
push
inc
shl
push
jp
addb
iret
mov
repnz
xchg
push
les
ds
xchg
movsb
stc
testl
jmp
cmp
cmp
stc
lea
and
mov
fcoms
jp
insl
mov
lahf
ds
pop
into
loop
cli
add
ret
aam
cmpsl
fmull
add
add
les
out
inc
add
push
loopne
jnp
sbb
lods
sbb
test
mov
xchg
xlat
sbb
pop
mov
stc
addb
shrb
lahf
push
lret
pop
mov
es
cli
xlat
cmp
arpl
bound
xchg
popf
jp
sub
cmpsb
decl
movb
imul
out
into
dec
add
movsb
aaa
push
fnstenv
add
les
sub
aaa
mov
xor
or
and
enter
mov
adc
sub
xchg
mov
and
imul
das
in
rorl
inc
add
jl
add
mov
add
std
dec
sub
add
inc
repnz
repz
into
xor
xlat
jl
das
ret
hlt
in
lods
lods
mov
divl
faddp
add
push
outsb
test
movsl
xorl
ret
bound
sub
jle
or
ret
cmp
out
inc
fimuls
outsb
and
addb
in
push
jg
call
inc
fisttpll
and
cmp
dec
ss
push
addb
push
lcall
sub
scas
int3
pop
in
mov
mov
push
adc
movsb
cld
jg
xchg
cli
dec
daa
pop
dec
push
add
cmp
repnz
add
dec
mov
movsb
pop
mov
add
cltd
cmp
add
ja
xchg
lcall
sub
add
add
jo
and
push
aaa
push
mov
push
fadds
sub
loope
sub
inc
add
mov
call
repnz
jmp
add
add
pushf
rcll
adc
jl
mov
mov
cmp
adc
pop
inc
add
pushf
jbe
ds
jne
and
sbb
xchg
cmp
add
mov
cmpsb
insb
xor
xchg
push
sub
daa
cli
stos
jle
mov
inc
add
popa
fcoml
add
xchg
lds
push
fldenv
dec
xchg
lods
repz
je
je
push
sahf
pop
jbe
xchg
pop
mov
fidivrs
jno
mov
sbb
sahf
and
pop
cs
aaa
shrb
jmp
add
out
cltd
je
loop
jle
or
stos
push
push
lcall
cmp
jg
repnz
add
inc
add
cmp
adc
mov
pop
fcompl
rolb
add
out
jae
push
push
roll
add
sbbl
addl
add
addb
sub
jle
cld
push
add
pop
les
mov
pushf
mov
mov
add
pop
jp
add
popf
mov
inc
mov
and
push
xchg
push
mov
pop
jae
dec
mov
jle
xor
cmp
fdivrl
in
add
push
add
push
pop
dec
sbb
lret
mov
xchg
std
sub
mov
mov
jp
mov
loope
or
jae
mov
jge
in
adc
vcvtsd2si
xchg
out
cmp
cmp
mov
push
lea
stos
or
mov
aas
add
pushf
inc
add
jle
jg
fbld
add
repz
push
mov
push
add
jnp
pushf
push
jns
ret
inc
call
in
cld
or
pusha
add
or
mov
xchg
add
loop
xchg
cmp
mov
pop
xchg
or
rolb
in
lods
push
pop
adc
add
or
add
loopne
xor
movsl
sti
inc
mov
mov
je
mov
fidivrl
mov
jae
pop
int
jno
jmp
mov
or
inc
add
cmpsl
shrl
rclb
js
out
test
xchg
aaa
out
rcll
jp
pop
pop
jns
das
xchg
iret
cwtl
xor
push
es
xchg
xor
fsts
sahf
ret
movb
popa
lods
shll
ja
incl
mov
outsl
stc
ret
inc
add
hlt
cs
push
cs
xor
jg
mov
stos
test
push
lds
lret
out
out
sbb
add
ljmp
pop
push
push
add
sbb
add
mulb
stos
mov
inc
add
pop
cmc
xchg
sbb
pop
jl
add
pushw
xchg
mov
outsb
mov
arpl
icebp
pop
stos
lahf
fnstcw
push
add
push
add
push
ss
movsl
cmp
xchg
mov
fsubrs
test
pop
cli
addb
inc
data16
bound
outsl
insb
pushf
lds
push
add
daa
cmp
shlb
add
cmpsl
cli
fdivs
out
sub
jbe
cmp
xchg
push
mov
jge
arpl
add
out
pop
xor
ret
shl
leave
inc
add
xchg
addb
cmp
add
int3
or
inc
jecxz
aaa
push
pop
jp
call
lods
int3
repz
ja
imul
mov
add
pushf
push
jle
push
dec
mov
add
std
rol
add
and
push
jns
out
adc
popa
push
push
fsubr
inc
push
pop
or
scas
dec
or
add
cmp
adc
and
jmp
mov
add
add
push
mov
inc
add
rcll
and
shrd
add
pop
div
adc
xchg
fisttps
pop
dec
lock
cmp
cmp
lahf
xor
mov
add
les
add
cmpsl
jl
pop
dec
and
aas
mov
and
dec
pop
negl
mov
std
push
push
mov
gs
cltd
mov
movsb
push
rclb
add
sub
jmp
out
cli
push
sti
mov
add
test
sub
jb
push
jbe
pop
dec
inc
lret
jne
out
das
xorl
xchg
jae
iret
icebp
or
pop
sub
xchg
ja
xor
pop
hlt
jecxz
or
fs
mov
jle
adc
imul
adc
xchg
add
aad
stos
xchg
push
add
mul
test
addl
add
dec
mov
pop
je
cmp
fs
insb
or
pop
dec
imul
dec
std
je
lock
push
jnp
icebp
stc
push
dec
jle
hlt
jbe
add
adc
inc
add
lahf
cmp
or
fsub
mov
scas
out
sbb
outsb
jbe
xor
mov
mov
shll
gs
xlat
jecxz
outsb
fidivrs
rorb
cmp
and
and
push
ljmp
jge
push
aas
fsubs
add
xor
in
pusha
add
add
fst
cs
sub
leave
jnp
inc
add
aas
test
nop
shll
add
dec
adc
jg
add
mov
xchg
mov
gs
push
dec
dec
sub
outsb
icebp
testl
call
enter
add
iret
popa
lret
filds
test
dec
fstps
inc
inc
notl
out
int3
es
mov
leave
lret
movsb
cli
fdivs
mov
je
mov
aas
sahf
mov
cmp
sarl
jnp
fwait
adc
decl
daa
insb
pop
jecxz
repz
pop
xor
mov
mov
add
rcrb
fs
jg
lock
cmp
inc
xlat
shrl
or
cmp
outsb
hlt
adc
js
xchg
mov
push
clc
sbb
dec
xchg
addb
jo
dec
mov
mov
add
scas
push
mov
bound
mov
add
sub
aas
xchg
cli
scas
aas
lods
mov
test
dec
mov
ljmp
cmp
lcall
pop
xchg
jo
sbb
mov
push
add
sub
arpl
data16
xor
pshufw
imul
add
divl
or
push
pop
sbbl
xor
adc
cmpsb
mov
xor
mull
fwait
mov
cmp
mov
mov
sbb
pusha
add
adc
jb
leave
insl
aas
inc
add
adc
dec
out
popa
lods
inc
add
cmp
out
sub
add
xor
jb
leave
push
cwtl
sbb
or
out
inc
xchg
out
pop
xor
mov
mov
cmp
mov
adc
pop
jnp
mov
ret
aam
mov
push
jmp
sahf
add
popa
pop
and
shlb
jae
add
add
jns
lock
das
lds
add
cmp
sub
xchg
popf
pop
movb
mov
and
add
inc
add
dec
scas
push
xchg
loopne
xor
iret
movl
or
mov
inc
add
jb
push
add
fldl
clc
stc
jb
sub
mov
test
in
add
call
stc
jb
lahf
and
frstor
mov
jmp
add
jns
xor
or
jb
jns
ficomps
nop
pop
mov
stc
jb
adc
add
jl
add
pushl
stc
jb
add
fdivr
add
add
jnp
cmpl
add
add
leave
add
add
stc
jb
add
add
arpl
fimuls
cli
push
add
push
data16
push
mov
xchg
ret
fildl
mov
cmpsl
xor
sub
stc
jb
add
add
inc
add
pusha
stc
jb
adc
fisttpl
cmpw
nop
jmp
mov
movsb
bound
adc
mov
test
adc
add
jb
add
add
xor
add
stc
jb
add
icebp
mov
add
nop
jmp
add
bound
add
adc
jb
pop
add
add
leave
jl
dec
or
jb
add
jl
add
repnz
jg
jle
add
add
outsl
lods
add
xor
push
nop
jmp
data16
add
add
aad
add
stc
jb
pop
xor
arpl
add
jb
pop
add
roll
add
scas
xor
stc
jb
leave
fsubrp
ds
stc
jb
jns
add
xchg
add
mov
sub
nop
jmp
lahf
add
add
inc
add
jl
xor
nop
jmp
aas
jl
add
pop
add
add
and
stc
jb
cmp
mov
add
aaa
xchg
inc
add
jb
add
add
sub
popa
stc
jb
add
not
into
mov
push
mov
xchg
ret
add
add
stc
jb
add
in
ja
loop
fisttpll
add
stc
jb
lcall
stc
jb
addl
add
add
sti
add
add
add
add
fcmovnb
add
add
stc
jb
add
movsb
out
add
add
add
add
aas
nop
add
pop
jmp
nop
jmp
ss
add
arpl
jb
jl
add
movzwl
stc
jb
jo
add
test
cmc
add
pop
das
add
xor
mov
xchg
ret
cmpsl
add
add
stc
jb
bound
test
shr
stc
jb
add
jb
pop
stc
jb
xor
leave
sub
fs
stc
jb
lahf
add
push
push
nop
jmp
lahf
xor
loop
adc
pop
fcompl
jb
add
add
sub
and
push
repnz
xorb
outsl
add
fadd
loop
stc
jb
add
or
xchg
jl
jbe
stc
jb
add
in
faddl
xchg
xchg
pop
push
stc
jb
lahf
add
cmp
adc
add
flds
add
fldl
cmpsl
add
pop
mov
stc
jb
add
pop
cmpsl
push
jb
jo
movsb
add
lcall
jmp
mov
jns
fnstenv
add
mov
stc
jb
add
addl
mov
add
jb
add
in
cmpsl
adc
adc
jne
nop
jmp
arpl
outsl
lods
add
push
mov
xchg
ret
add
and
mov
xchg
ret
hlt
ss
clc
xchg
push
mov
xchg
ret
add
cmp
fildl
orb
add
in
add
in
xchg
cmp
ret
nop
jmp
jo
cmpsl
outsl
lahf
add
jns
adc
jne
nop
jmp
add
add
ja
mov
subb
add
add
insl
push
stc
jb
loop
add
cmpsl
jns
add
ror
stc
jb
add
add
or
subb
add
add
cltd
cs
push
mov
xchg
ret
push
add
stc
jb
add
add
stc
jb
ja
lahf
cmp
lds
jbe
push
stc
jb
in
add
pop
mov
nop
jmp
push
in
ret
and
push
mov
xchg
ret
pop
hlt
add
jne
stc
jb
arpl
push
add
push
nop
jmp
add
add
add
movsb
add
add
dec
mov
stc
jb
mov
sub
jb
add
cld
jns
add
sbb
jb
movsb
jns
add
xor
stc
jb
add
sti
imul
stc
jb
data16
in
add
cld
mov
xor
add
in
sub
add
add
add
nop
jmp
in
adc
cmp
leave
stc
jb
add
add
mov
push
mov
xchg
ret
add
loop
add
stc
jb
add
fsub
push
addb
push
push
mov
xchg
ret
loop
jl
ss
and
add
push
mov
xchg
ret
fldenv
int
popa
add
jb
add
jno
leave
mov
mov
xchg
ret
add
fnstenv
clc
mov
nop
jmp
sub
mov
xor
add
stc
jb
lea
add
add
stc
jb
jl
outsl
mov
add
jb
add
add
inc
add
jb
add
add
add
xor
push
mov
xchg
ret
arpl
aam
mov
add
pop
stc
jb
nop
pop
add
loop
add
jne
ret
stc
jb
add
add
add
stc
jb
sub
add
sar
orb
add
cmp
add
outsl
rolb
and
movzwl
stc
jb
add
lahf
mov
pop
mov
push
add
add
lahf
xor
out
outsl
mov
stc
jb
add
pop
mov
stc
jb
ss
adc
jo
add
add
stc
jb
pop
add
push
add
nop
jmp
add
in
cld
leave
add
jne
add
stc
jb
add
clc
jne
stc
jb
movsb
or
jmp
add
add
xor
stc
jb
loop
leave
jo
add
mov
gs
add
jbe
add
sub
lock
add
arpl
popa
add
add
jb
arpl
imul
test
add
add
add
add
inc
into
stos
stc
jb
push
sub
add
fldlg2
add
jno
add
cmp
add
adcl
adc
push
push
mov
xchg
ret
add
hlt
add
fadds
icebp
stc
jb
aas
add
adc
push
mov
nop
jmp
add
add
adc
jb
lcall
mov
stc
jb
outsl
add
pusha
stc
jb
arpl
faddl
jmp
mov
stc
jb
add
add
sub
stc
jb
add
add
sarl
stc
jb
add
add
jmp
mov
sub
ret
loop
add
jmp
add
jno
in
and
mov
stc
jb
outsl
out
add
jge
movb
jb
aas
add
add
cmp
nop
jmp
jo
ja
add
adc
stc
jb
add
fsts
dec
and
stc
jb
add
sub
ds
nop
jmp
xor
clc
jne
stc
jb
add
dec
add
stc
jb
fildl
xchg
fiadds
add
fdivs
sar
cmpb
add
add
adc
jb
leave
out
add
add
push
push
stc
jb
leave
add
mov
nop
jmp
leave
leave
add
add
lahf
and
inc
push
mov
xchg
ret
outsl
pop
jns
add
xchg
nop
jmp
and
sub
add
mov
stc
jb
fildl
aas
pop
fnstcw
add
je,pn
stc
jb
leave
lcall
add
stc
jb
bound
jl
mov
jns
add
sub
add
add
jne
stc
jb
faddl
adc
mov
stc
jb
add
mov
add
jb
or
cld
sbb
add
incl
leave
adc
loop
fistpl
mov
xchg
ret
lea
add
into
movzwl
nop
jmp
add
cmp
sub
push
mov
xchg
ret
hlt
jns
dec
movsb
pop
je
stc
jb
xor
and
fs
jb
pop
lahf
lahf
pop
in
je
stc
jb
in
cltd
add
repnz
mov
nop
jmp
sub
add
dec
sub
add
pop
loope
mov
stc
jb
add
jns
add
add
nop
jmp
lods
add
lcall
jb
add
add
jl
dec
add
jb
or
sub
leave
mov
stc
jb
loop
add
jns
out
push
push
mov
xchg
ret
jmp
nop
shrl
push
stc
jb
leave
fcmovnu
or
mov
movzwl
stc
jb
add
add
cmp
shr
mov
stc
jb
arpl
jle
loop
jmp
add
add
data16
jecxz
test
adcb
lea
add
test
jb
add
fldcw
mov
stc
jb
ja
lahf
add
stc
jb
add
mov
call
stc
jb
faddl
in
add
notl
mov
stc
jb
ss
add
add
push
mov
xchg
ret
xchg
add
stc
jb
sbb
lods
add
stc
popa
push
mov
xchg
ret
add
xor
pushf
push
mov
or
and
push
add
pushf
add
add
jb
add
add
add
enter
add
stc
jb
add
dec
adc
daa
fiaddl
xchg
ret
mov
mov
stc
jb
fildl
add
xor
ret
add
arpl
add
add
jmp
leave
pusha
push
mov
xchg
ret
add
add
mov
mov
xchg
ret
add
bound
inc
mov
add
add
jb
in
cmp
push
loopne
jmp
add
adc
fldl
js
inc
and
stc
jb
outsl
add
ss
cwtl
mov
stc
jb
cmp
out
push
stc
jb
add
dec
lahf
cmp
jmp
add
add
add
push
push
mov
xchg
ret
add
add
jmp
push
add
add
add
outsl
add
jb
add
xchg
and
in
adc
lods
push
mov
add
out
add
add
add
add
add
mov
stc
jb
add
add
add
decl
stc
inc
add
add
stc
jb
dec
faddl
mov
add
or
nop
jmp
fsubrl
adc
lods
call
stc
jb
jl
sub
arpl
stc
jb
aas
add
xlat
mov
add
stc
jb
add
jo
stos
stc
jb
add
and
add
and
decl
push
mov
xchg
ret
jno
add
push
push
mov
xchg
ret
fimuls
pop
pop
ficoml
jb
jo
mov
add
sub
jb
add
add
addr16
into
mov
stc
jb
adc
hlt
push
inc
in
stc
jb
add
add
lea
mov
adc
addl
jns
add
cmc
inc
add
add
or
jb
add
xchg
xor
movsb
stc
jb
addl
jo
lahf
add
dec
nop
jmp
ss
add
shlb
mov
xchg
ret
loop
push
sub
add
jecxz
xor
pop
jne
stc
jb
lea
add
add
stos
push
mov
xchg
ret
leave
add
add
pop
stc
jb
adc
add
add
add
sub
jb
jns
add
add
jb
add
add
mov
jle
inc
add
jns
add
addb
push
mov
or
stc
jb
add
imulb
stc
jb
lcall
ds
add
stc
jb
bound
arpl
hlt
movsb
out
pop
mov
stc
jb
sub
scas
enter
movsl
repz
incl
fidivrs
add
add
stc
jb
add
add
popf
push
mov
xchg
ret
and
jge
stc
jb
data16
in
cltd
cmpsl
mov
push
add
nop
jmp
out
movsb
movsb
ss
test
lret
stc
jb
xor
pop
dec
sub
and
add
add
add
cmp
inc
add
fstps
pusha
add
push
mov
xchg
ret
outsl
pop
loop
add
inc
or
add
add
add
stc
jb
in
add
add
add
ds
push
mov
xchg
ret
add
add
xor
push
mov
adc
add
add
add
inc
loopne
xchg
sub
sub
add
jb
add
push
xlat
mov
inc
cmp
mov
xchg
ret
add
movsb
add
in
mov
push
mov
xchg
ret
or
stc
jb
arpl
leave
pop
test
nop
jmp
pop
leavew
or
jo
add
pop
jne
nop
jmp
nop
fsubrp
dec
xchg
aaa
mov
js
jb
push
add
add
stc
jb
jns
add
or
push
nop
jmp
add
ss
add
add
lret
stc
jb
add
outsl
add
add
call
imul
add
lea
sbb
fistl
inc
add
jns
lea
push
mov
xchg
ret
add
loope
mov
inc
and
jb
add
add
add
mov
dec
xor
nop
jmp
arpl
in
in
add
stc
jb
add
add
add
xor
mov
stc
jb
data16
arpl
push
nop
jmp
add
in
add
push
stc
jb
dec
in
cmpsl
pop
pop
add
dec
mov
stc
jb
in
cld
lea
movb
mov
xchg
ret
add
bound
and
inc
add
jns
jno
mov
add
nop
jmp
ss
add
add
adc
add
stc
jb
add
loop
add
arpl
sti
push
mov
xchg
ret
jo
out
outsl
add
stc
jb
xchg
pop
rcrb
or
jmp
mov
cmp
pusha
push
mov
xchg
ret
cld
add
add
push
mov
xchg
ret
add
add
add
and
push
mov
xchg
ret
hlt
bound
decl
repz
add
pop
pop
loopne
push
stc
jb
arpl
add
sub
nop
add
add
jb
outsl
add
add
test
repz
stc
jb
jns
add
andl
add
add
mov
mov
stc
jb
cmpsl
jmp
and
nop
jmp
lods
add
add
fsubrp
pop
add
push
mov
adcb
ljmp
add
stc
jb
loop
rorb
mov
stc
jb
add
add
hlt
add
fdivl
sar
jb
add
add
push
push
nop
jmp
in
fdiv
add
push
push
stc
jb
add
lcall
popa
add
mov
xchg
ret
add
ja
add
nop
jmp
pop
add
push
mov
xchg
ret
dec
add
add
push
add
stc
jb
add
bound
xor
lret
stc
jb
or
data16
push
nop
jmp
pop
fsubl
test
call
pushl
add
jnp
dec
add
jb
xchg
cmp
push
mov
lcall
jno
jb
lock
lods
mov
push
mov
xchg
ret
add
and
jle
add
push
mov
xchg
ret
aas
add
xor
nop
lock
jmp
adc
mov
mov
call
stc
jb
leave
add
fldt
jbe
stc
jb
add
push
add
loopne
jnp
sbbb
cmp
ror
stc
jb
add
insl
and
push
mov
xchg
ret
data16
mov
stc
jb
add
enter
andb
pop
add
cmp
lea
nop
jmp
add
add
or
adc
add
fucomp
jmp
shl
stc
jb
add
ds
leave
ja
call
stc
jb
nop
add
adc
jb
jns
in
fisttpll
nop
jmp
add
je
stc
jb
lahf
leave
add
push
mov
xchg
ret
xor
icebp
mov
cmc
ljmp
pop
add
leave
rolb
jbe
into
cmp
nop
jmp
cld
add
lahf
add
ret
lds
mov
xchg
ret
xor
mov
and
inc
add
stc
jb
pop
add
faddl
pop
out
push
stc
jb
push
or
push
stc
jb
in
in
add
mov
jmp
add
pop
cmpsl
jns
in
nop
jmp
add
add
nop
add
push
repz
adc
nop
jmp
add
add
je,pn
stc
jb
arpl
add
insb
call
stc
jb
pop
fiadds
add
mov
stc
jb
hlt
mov
sar
adcb
ljmp
out
jns
add
jg
popa
add
mov
xchg
ret
add
jecxz
mov
push
mov
xchg
ret
add
add
sbbb
fildl
cmp
movsb
jns
js
add
stc
jb
push
xor
mov
stc
jb
add
or
stc
jb
jo
add
add
add
pop
fisttps
mov
xchg
ret
add
and
stc
jb
out
add
add
nop
jmp
jns
addl
cmp
lods
mov
stc
jb
adc
loop
mov
cmp
inc
xor
stc
jb
add
add
fildl
orl
mov
xchg
ret
cmp
add
stc
jb
adc
add
in
add
mov
push
mov
xchg
ret
add
dec
add
stc
jb
add
fildl
jns
addb
mov
nop
jmp
leave
add
add
clc
mov
stc
jb
ja
add
add
mov
mov
stc
jb
lahf
push
cmp
add
jb
arpl
in
add
push
stc
jb
leave
add
add
pop
add
gs
and
lods
addl
adc
add
lea
js
nop
jmp
push
in
hlt
or
or
add
jb
nop
cmp
stc
jb
add
add
dec
add
stc
jb
movsb
fsubrl
mov
stc
jb
xchg
pop
jo
cmp
pop
stc
jb
add
add
ficoms
iret
add
stc
jb
add
add
add
cwtl
lcall
add
in
cmpsb
cmpsl
in
and
lods
push
stc
jb
arpl
add
xor
stc
jb
jmp
ds
push
stc
jb
lahf
cmp
add
mov
stc
jb
add
add
in
nop
add
les
push
mov
xchg
ret
add
out
push
push
mov
xchg
ret
jns
adc
mov
and
add
in
fildl
fildl
pop
add
and
add
nop
jmp
xchg
add
jmp
icebp
inc
add
jmp
inc
add
arpl
stc
jb
hlt
jl
fildl
cltd
lcall
jb
in
xor
jno
ja
add
pop
add
stc
jb
leavew
dec
add
cmp
jmp
add
fsubl
xor
push
mov
xchg
ret
outsl
cmp
jne
mov
mov
xchg
ret
add
in
out
and
nop
jmp
arpl
add
add
movb
push
push
mov
xchg
ret
add
add
add
add
mov
push
stc
jb
leave
adc
add
clc
push
mov
xchg
ret
adc
fcoms
incl
fisttpll
add
add
stc
jb
add
add
ss
add
push
mov
xchg
ret
add
hlt
fwait
push
push
mov
xchg
ret
pop
add
leave
js
test
add
stc
jb
and
push
cmp
stc
jb
lahf
sub
add
jmp
stc
jb
add
out
xor
stc
jb
jns
add
or
incl
cld
add
jl
add
pop
stc
jb
lods
lahf
add
bound
jl
push
and
stc
jb
add
add
inc
lock
mov
xchg
ret
xchg
add
jb
stc
jb
or
push
or
jb
add
pop
lea
or
stc
jb
add
ja
pop
adc
adc
add
stc
jb
ja
xchg
fildl
in
add
stc
jb
lahf
fnstenv
add
fisttpll
out
add
fmull
rclb
xor
add
adc
lahf
aam
loope
jne
add
cmpb
incl
add
sar
sbbb
add
add
orb
incl
pop
add
ror
adc
jecxz
mov
stc
jb
add
add
add
sti
push
stc
jb
add
movsb
pop
movsb
loop
add
adc
jb
pop
xchg
or
xchg
pop
mov
stc
jb
xchg
mov
stc
jb
add
add
add
and
in
fsubr
frstpm(287
call
jmp
inc
add
jb
fildl
jno
out
add
popa
stc
jb
add
movsb
add
jl
add
pop
add
add
jb
adc
add
rcr
test
nop
jmp
add
add
lret
and
push
mov
xchg
ret
add
add
not
push
xchg
cli
push
nop
jmp
mov
add
in
xchg
xor
pop
mov
nop
jmp
add
add
add
add
push
push
mov
xchg
ret
add
add
cmp
fsub
jmp
data16
add
clc
mov
stc
jb
xor
jl
popf
add
stc
jb
arpl
lods
aas
add
sbb
jb
push
mov
xchg
ret
xor
stc
jb
add
add
pop
sub
cmp
call
add
xor
stc
jb
cltd
jo
add
stc
jb
add
add
push
push
mov
xchg
ret
add
aas
push
jns
mov
lret
or
incl
add
add
jne
stc
jb
add
out
and
stc
jb
add
add
add
enter
add
nop
jmp
fildl
lahf
add
stc
jb
pop
faddl
add
add
stc
jb
add
test
stc
jb
pop
add
call
stc
jb
cmp
addl
adc
andl
add
test
add
stc
jb
add
stc
jb
xor
ss
stc
jb
add
aas
add
pop
add
jno
lods
add
pop
cmp
jb
push
adc
leave
ja
adc
add
stc
jb
add
outsl
push
dec
push
stc
jb
dec
adc
fsubr
test
nop
jmp
cmp
imul
orb
arpl
movsb
hlt
outsl
add
sub
mov
xchg
ret
cmp
mov
nop
jmp
cmp
cmp
sub
add
jb
xor
add
dec
add
stc
jb
add
sub
inc
stc
jb
pop
add
xchg
test
dec
and
push
mov
xchg
ret
add
adc
dec
out
ljmp
ja
lea
cltd
pop
jns
push
push
stc
jb
arpl
ja
lea
jmp
add
add
or
inc
add
pop
jne
stc
jb
add
jmp
dec
jmp
out
xor
push
mov
xchg
ret
add
mov
xchg
ret
add
bound
inc
sbb
repz
jb
jo
arpl
addl
dec
test
push
mov
xchg
ret
pop
jl
add
mov
stc
jb
add
xor
add
movzwl
stc
jb
ss
fsubr
and
lea
nop
jmp
arpl
add
adc
add
and
inc
add
xor
arpl
push
stos
stc
jb
add
jo
add
add
add
jb
xor
mov
nop
jmp
xchg
leave
dec
push
stc
jb
outsl
bound
add
add
jns
nop
jmp
lods
add
jmp
jb
ds
pop
cmpsl
lcall
sub
inc
loop
add
add
cli
rep
stc
jb
nop
fildl
add
mov
nop
jmp
cmp
add
push
mov
xchg
ret
fiadds
into
movswl
stc
jb
add
arpl
add
dec
sub
mov
inc
add
in
add
jmp
stc
jb
add
add
ficoms
jb
add
flds
adc
mov
stc
jb
cmp
cmpsl
dec
mov
push
mov
xchg
ret
sub
jns
push
stc
jb
aas
add
ss
fsubrl
or
orb
jns
jno
data16
xor
stc
jb
lcall
bound
xor
ja
pop
push
mov
xchg
ret
add
cltd
fisttpl
nop
jmp
lods
adc
in
add
pop
mov
push
mov
xchg
ret
pop
dec
xor
sub
mov
xchg
ret
add
add
add
xorb
loop
add
fsubr
inc
into
mov
stc
jb
add
add
xor
stc
jb
add
push
xor
add
nop
jmp
lcall
stc
jb
mov
cld
mov
cmp
inc
add
add
add
add
add
jb
rolb
in
ss
jb
jns
data16
add
mov
stc
jb
add
mov
scas
fildl
xchg
ret
add
mov
call
jmp
add
ds
stc
jb
push
add
add
pushf
mov
stc
jb
add
xorl
cmp
xor
add
stc
jb
add
xor
xrelease
mov
add
cmp
push
nop
jmp
adc
add
ja
add
and
nop
jmp
add
add
fistpl
test
stc
jb
add
add
pop
cmpl
nop
jmp
add
leave
nop
leave
data16
mov
add
nop
jmp
fstpl
pusha
add
cmp
jb
cmpsl
add
add
and
movsb
stc
jb
add
fistpl
lahf
faddl
cmp
nop
jmp
in
cmp
or
stc
jb
fsubp
add
pusha
add
dec
push
mov
xchg
ret
hlt
add
lods
add
add
add
stc
jb
pop
cmpsl
in
push
rcr
xor
nop
jmp
add
jns
out
add
jns
mov
stc
jb
add
data16
push
test
in
stc
jb
sub
sbb
cmp
jb
add
bound
sub
stc
jb
add
jmp
int3
fdivr
incl
loop
add
mov
mov
stc
jb
add
arpl
jns
xchg
cmp
popf
in
incl
or
add
jmp
stc
jb
add
add
sub
mov
add
inc
add
add
outsl
jne
add
stc
jb
xor
add
test
push
mov
xchg
ret
fimuls
fidivs
jmp
add
fimuls
fsts
mov
xchg
ret
cmp
data16
jo
nop
jmp
in
add
add
fcoml
gs
jb
and
nop
loop
data16
push
push
mov
xchg
ret
add
stc
jb
xor
jl
add
out
ljmp
stc
jb
adc
adc
pop
mov
push
mov
xchg
ret
and
mov
stc
jb
add
add
adc
add
stc
jb
add
in
mov
stc
jb
add
xor
movsb
add
xor
stc
jb
add
ss
xor
push
mov
xchg
ret
add
add
jb
popf
and
nop
jmp
or
add
cmpsb
sub
jbe
stc
jb
add
bound
addb
add
stc
jb
add
add
int3
lods
push
mov
xchg
ret
adc
in
lods
add
std
inc
add
arpl
fiadds
insl
add
stc
jb
lahf
add
add
insb
pusha
push
mov
xchg
ret
add
add
jne
xor
mov
stc
jb
lahf
add
add
cld
push
push
mov
xchg
ret
cmp
mov
cli
inc
add
xor
pop
cmpl
nop
jmp
in
pop
add
in
mov
stc
jb
add
pop
out
dec
push
mov
xchg
ret
add
add
add
test
jmp
jmp
add
add
cmp
adc
xor
inc
add
add
and
push
xor
add
stc
jb
push
arpl
add
cltd
dec
mov
stc
jb
add
in
fildl
add
ljmp
add
in
data16
xchg
nop
jmp
add
out
pop
xor
stc
jb
fsts
mov
stc
jb
add
aas
mov
push
mov
xchg
ret
jns
pop
rcrb
add
stc
jb
add
andl
sub
mov
xchg
ret
in
add
push
xor
nop
jmp
cld
add
xor
add
call
cld
add
sub
stc
jb
add
add
add
xor
add
add
push
sub
ret
add
ja
jle
repz
jb
add
xchg
add
mov
push
mov
xchg
ret
add
pop
data16
movsl
test
inc
into
mov
stc
jb
pop
jmp
add
or
add
cmp
pop
add
add
jb
add
arpl
nop
add
ret
push
je
sub
jb
fsubr
add
add
add
and
inc
add
add
push
mov
xchg
ret
lcall
nop
jmp
ds
lahf
add
fmull
sub
sub
pushl
addl
fildl
add
loope
inc
add
leave
add
stc
jb
arpl
xchg
add
push
add
jl
stc
jb
add
add
mov
fld1
fwait
clc
call
jmp
mov
push
mov
xchg
ret
add
hlt
xchg
mov
xchg
ret
outsl
add
pushf
mov
nop
jmp
add
add
jns
outsl
arpl
add
jb
add
add
icebp
nop
jmp
adc
add
sbb
jb
loop
push
popa
nop
jmp
pop
loop
sub
add
push
mov
mov
sbb
add
add
add
push
mov
xchg
ret
pop
add
inc
add
add
incl
fstpl
pop
push
enter
stc
jb
leave
add
cld
jns
ds
push
mov
xchg
ret
add
arpl
jmp
stc
jb
out
ss
inc
stc
jb
xchg
add
add
hlt
adc
dec
mov
stc
jb
add
mov
add
rep
nop
jmp
jns
sub
lea
adcb
jmp
jns
fisttpll
loopne
add
hlt
push
mov
leave
mov
push
mov
xchg
ret
leave
fildl
xchg
icebp
jg
stc
jb
add
add
movsb
add
add
sti
inc
push
mov
xchg
ret
add
andl
icebp
stc
jb
addl
data16
push
cltd
jmp
ljmp
add
add
hlt
movb
mov
stc
jb
xor
push
mov
push
mov
xchg
ret
sub
add
cmpsl
cltd
pusha
stc
jb
add
pop
lods
loop
arpl
mov
fiadds
xchg
ret
ss
add
add
xor
jmp
cld
arpl
les
iret
cmpl
nop
jmp
add
roll
roll
xor
add
stc
jb
hlt
jl
push
push
mov
xchg
ret
add
sub
and
mov
xchg
ret
add
in
add
mov
clc
lahf
iret
add
stc
sarb
in
dec
cmp
stc
dec
jge
es
adc
sub
mov
int
mov
pop
test
cmp
jmp
push
dec
aam
mov
jmp
lret
dec
shlb
inc
add
cmp
or
cmc
test
adc
das
aad
cmp
and
xchg
clc
mov
dec
push
jbe
mov
enter
push
add
imul
and
and
les
mov
inc
add
cmp
fiaddl
cmpl
pop
addr16
test
addr16
lods
loop
jecxz
jno
mov
les
inc
add
and
fyl2x
mov
add
mov
ja
lds
fnstcw
pusha
add
xor
dec
push
movsb
push
xchg
mov
dec
arpl
ss
add
addb
push
inc
add
add
clc
mov
aaa
adc
insb
mov
aad
xchg
add
mov
les
xor
xlat
decl
jle
stc
mov
stos
out
push
mov
aaa
repz
pop
inc
sub
insb
andl
rolb
cld
xor
pop
lods
lret
nop
xor
pop
cmp
mov
jae
sub
cmp
iret
sbb
add
mov
cmp
push
out
adc
cmp
fwait
mov
ljmp
addb
jge
loopne
in
xchg
fbstp
push
and
bound
insl
lcall
push
ud0
dec
sbb
cli
in
inc
add
fdiv
push
fs
mov
imul
aas
adc
mov
das
xor
fidivs
es
je
push
sbb
and
add
push
mov
pop
pop
out
loop
adc
or
adc
aas
jne
or
adc
sub
add
cmp
ret
xchg
pushf
mov
xchg
inc
add
rolb
imul
out
cwtl
push
cmp
xlat
sub
add
pop
jne
lcall
movsb
and
stos
and
add
push
sub
movsl
push
mov
add
lret
outsl
cmp
test
movsl
xor
test
sbb
add
mov
in
add
xor
jbe
cmp
sub
cmp
fdivl
sbb
or
push
stc
mov
xchg
fbld
add
arpl
ja
mov
fld
add
adc
inc
cmp
add
add
mov
jge
pop
cld
into
cmpsb
sub
add
iret
loopne
test
add
pop
enter
add
cs
outsl
inc
mov
test
push
in
cmp
dec
cmpl
les
lret
jmp
add
xchg
decl
mov
in
jae
push
hlt
cmp
or
xorl
jle
pop
shlb
rolb
mov
mov
jmp
push
mov
lahf
pop
lods
in
ja
mov
add
add
mov
iret
movsl
cli
sbb
xchg
mov
add
jb
add
les
pop
jl,pt
xor
pop
stos
cmp
stc
cli
rolb
sti
pop
ss
or
add
ret
test
loope
jp
ljmp
mov
mov
out
or
add
cwtl
js
repz
add
mov
adc
loop
mov
outsl
and
ljmp
xchg
pop
arpl
push
push
dec
into
sbbl
add
jns
sbb
add
cs
mov
add
adc
xchg
push
aas
es
sub
lahf
push
cmp
movsb
xor
add
mov
add
mov
imul
fldenv
cmp
jb
add
std
or
jae
sbb
das
push
roll
pop
inc
dec
ret
pop
inc
pop
ret
jnp
push
mov
xchg
or
xlat
movb
popa
push
xchg
adc
add
pop
inc
shrl
mov
sbb
sahf
hlt
std
repnz
add
jge
mulb
add
and
add
stos
sbb
clc
test
inc
add
mov
xchg
in
sti
test
cltd
testl
mov
movsb
xor
loop
loop
cmp
mov
daa
stc
nop
jo
push
add
push
and
sub
add
movb
add
xchg
sbb
pop
outsb
rcl
push
or
push
pop
rorl
pop
mov
add
sbb
mov
rolb
jmp
and
cltd
inc
insb
jo
add
repnz
arpl
mov
mov
sub
popf
push
cmpsb
push
adc
push
push
sbb
xchg
lahf
inc
or
in
mov
add
add
cmpsl
jg
add
outsl
cmp
loope
mov
adc
cli
adc
xchg
in
std
and
jg
imul
sbb
jmp
addb
pusha
add
pop
jne
mov
mov
cld
mov
xchg
pop
inc
insb
push
and
add
das
sub
jmp
ljmp
add
stos
cmp
gs
cmp
ror
push
cmp
in
mov
xor
add
lcall
add
sbb
or
je
mov
jns
pop
xor
mov
ljmp
mov
stos
outsb
test
adc
icebp
mov
adc
rolb
dec
xchg
sbb
imul
stos
sahf
lea
pusha
add
stos
adc
mov
decl
into
js
daa
sahf
dec
addb
jnp
add
jecxz
cwtl
xchg
stc
ljmp
sbb
cmp
jg
scas
mov
in
jp
stc
jge
mov
jns
push
dec
mov
xor
das
popf
cmpsb
aam
lret
add
jno
jp
out
call
xsha1
cmpsb
or
jge
pop
loop
jl
fisubl
adc
enter
fisttpll
mov
push
loope
roll
cmpsb
js
notb
pop
cmpsb
lret
sub
add
mov
loope
addb
mov
cmp
and
dec
inc
xchg
bound
das
mov
out
sub
push
loopne
adc
sbb
add
sub
xchg
in
xchg
bound
call
mov
sar
mov
idivl
jle
lcall
xor
pop
aad
test
adc
ds
mov
pop
lcall
fidivl
test
dec
add
push
cli
lea
outsb
dec
test
add
ret
repnz
jb
xor
cmpsb
jo
dec
addb
fs
jge
pop
scas
ret
int3
mov
or
or
mov
enter
lret
inc
add
lret
movsl
ret
xchg
jp
adc
pop
jne
or
xor
add
pushf
and
jns
faddl
dec
fsubrl
insl
mov
shrl
cld
bound
addr16
cmp
je
movb
inc
add
push
lcall
addb
sub
mov
xchg
push
push
pusha
add
add
into
bound
rolb
cmp
or
lret
xchg
cs
add
push
inc
mov
addb
cmp
xchg
dec
add
sbb
loop
add
sub
fistpl
or
addb
or
adc
stos
add
sub
sbb
jbe
lret
in
cld
es
mov
mov
arpl
or
fnstsw
mov
vorps
sub
gs
testb
inc
out
pop
or
lret
and
jne
addb
add
sarb
popf
cltd
cmp
fwait
into
lahf
mov
inc
add
in
scas
out
mov
dec
pushf
lcall
loopne
push
sub
and
mov
pop
pusha
add
les
add
add
ret
lock
add
pop
push
out
mov
mov
test
mov
push
dec
adc
ss
mov
pop
arpl
inc
dec
xlat
lahf
add
mov
xor
jp
xchg
push
or
ss
stc
ljmp
sbb
inc
push
add
cmp
mov
sbb
jmp
add
push
mov
fdivl
sub
je
add
dec
sub
xor
cli
aad
push
js
cmp
cs
mov
mov
xor
add
sbb
call
add
loop
adc
xor
stos
rolb
xor
movb
push
add
jmp
or
rolb
outsb
inc
add
add
sbb
dec
pusha
add
add
fs
pmulhuw
add
push
pusha
add
sti
mov
lret
and
popa
pop
addb
xchg
stos
cli
pop
pop
pop
mov
loope
jle
rol
add
push
jns
pop
js
add
das
pop
pop
push
add
daa
imul
dec
mov
pop
out
rcl
imul
in
movl
filds
add
jne
inc
add
add
pop
sarl
std
add
or
ljmp
lcall
out
mov
leave
cs
mov
sbb
add
rcll
imul
stos
lods
leave
mov
shrb
pushf
ljmp
mull
test
fucomip
mov
add
adc
mov
pop
ja
jle
outsb
bound
cld
dec
ss
adc
fmul
xor
add
dec
inc
add
push
sahf
std
fisubrs
adc
cs
and
shrl
addr16
add
sti
xor
cwtl
ret
leave
sbb
add
and
add
or
test
or
jmp
push
aas
in
mov
add
or
add
xor
mov
shrl
pop
mov
add
aas
jle
test
je
dec
or
mov
gs
and
pusha
add
add
push
mov
mov
add
push
mov
imul
dec
add
out
icebp
inc
aam
or
in
fdivs
xor
lds
adc
fs
pop
and
xchg
push
push
or
test
addb
push
scas
ja
addb
or
aas
jecxz
and
push
mov
ja
or
jg
jge
cld
les
cmp
int3
int
xchg
pop
loope
mov
out
cmp
dec
inc
scas
fstpt
aas
daa
pop
fldenv
add
dec
leave
xor
outsb
jne
xchg
pop
mov
testb
inc
add
lret
adc
push
sbb
cmpsl
or
addb
xchg
jne
pop
popf
cs
pavgb
imul
aam
jae
ljmp
pop
sbb
ljmp
bound
pop
xor
lock
arpl
xchg
mov
hlt
jge
sub
and
jl
je
movsl
fcoml
mov
out
push
and
cmpsl
mov
add
dec
addb
adc
dec
mov
jmp
add
add
pop
xlat
inc
lock
rolb
cli
test
fadds
call
hlt
mov
add
scas
les
mov
lcall
and
gs
xchg
fcmove
push
add
es
jns
dec
mov
out
hlt
sbb
pop
js
inc
jecxz
add
dec
xchg
add
mov
jne
pop
fcmovb
add
pop
sbb
mov
mov
jb
mov
add
mov
adc
insl
test
and
outsl
scas
leave
or
fsubl
jbe
adc
xchg
mov
jmp
imul
lods
sbb
pop
xor
aam
inc
add
push
mov
jno
cmp
dec
out
push
mov
pop
dec
sbb
add
loopne
enter
mov
add
dec
add
das
push
mov
cmp
dec
out
mov
enter
inc
add
push
notb
aas
cmp
leave
cli
aaa
pop
and
imul
push
popf
call
outsb
inc
add
negl
pop
or
pop
cltd
subl
arpl
in
and
outsl
add
popf
adc
pop
enter
adc
sub
in
cmp
sbb
jo
and
mov
stc
fisubl
adc
sarb
add
xor
pop
and
inc
add
das
xchg
sarb
sbb
lock
xor
cwtl
push
pop
mov
xor
sub
aas
stc
add
adc
sbb
push
out
mov
mov
inc
add
cld
popa
inc
add
cmc
movsl
push
lret
das
lods
and
add
add
mov
xchg
cmp
add
xchg
adc
lcall
jle
add
add
inc
out
sbb
add
test
jne
int
dec
movsl
lret
add
mov
add
xchg
clc
adc
test
sub
cmp
mov
add
js
push
popa
outsb
ja
add
iret
frstor
add
push
mov
ss
add
cmpsb
fwait
clc
dec
loopne
mov
sar
sub
out
scas
pushf
scas
mov
fcomip
mov
aaa
es
add
mov
int3
xchg
dec
cmc
outsb
xchg
add
add
xchg
cmpsb
jb
xor
add
add
add
hlt
ret
xlat
inc
pushl
test
es
inc
and
push
push
add
fidivs
scas
stos
insb
fcom
in
inc
and
test
push
addr16
push
int3
nop
repnz
int
add
sbb
mov
adc
in
add
test
mov
lahf
cli
pop
addr16
ret
scas
mov
movsl
jns
sarl
dec
shll
js
inc
add
inc
cmp
loope
sbb
mov
into
push
sub
jle
add
roll
mov
mov
xor
lock
push
add
mov
lea
mov
sti
xchg
dec
push
ds
add
mov
adc
std
jl
fmuls
mov
or
sbb
adc
mov
xchg
enter
xchg
cli
lcall
insl
sub
movb
andl
pusha
add
je
call
loope
inc
mov
push
fnstenv
ss
adc
cmp
mov
jns
add
add
lret
and
nop
jbe
ljmp
stos
movb
mov
shl
sub
leave
in
int3
ds
jge
inc
add
cmp
lcall
add
mov
inc
add
out
push
pushf
es
lods
les
stc
sbb
add
xor
sbb
jns
add
out
dec
inc
add
loop
xor
mov
and
push
in
loope
or
add
aam
mov
andl
insb
rorl
bound
fists
xchg
push
stc
fmull
inc
add
stos
loope
push
cmp
or
popa
mov
fnstcw
mov
cmp
fsubrs
rolb
xor
loope
jns
sbb
pushf
scas
js
push
jle
mov
dec
mov
sub
add
out
cmp
sub
or
aas
push
add
test
xor
pop
loopne
dec
sbb
and
imul
imul
in
pop
mov
push
outsb
sbb
mov
or
pop
stc
loopne
call
je
sub
leave
add
or
xor
jne
xchg
jb
jge
add
adc
cli
push
bound
addb
add
ret
insl
jmp
les
xor
pop
jne
dec
aas
rep
fsubrs
add
mov
movsb
jbe
rolb
scas
rcrl
sbb
push
cmp
mov
pop
por
jb
outsb
mov
add
popa
in
inc
add
stos
adc
aam
inc
push
fwait
mov
cmpsl
insl
push
bound
in
push
jnp
aam
cltd
scas
or
out
rcr
sub
add
pop
xchg
push
mov
jge
stos
ret
cmp
and
mov
push
add
sub
insb
fiaddl
or
out
adc
push
lret
mov
icebp
cmp
das
negl
adc
add
mov
out
pop
icebp
cmpl
jg
ret
mov
xchg
popa
jne
mov
add
ds
adc
mov
repz
dec
js
xchg
mov
lret
outsl
loopne
mov
imul
adc
pop
clc
or
icebp
mov
add
les
pop
int3
in
or
arpl
and
enter
mov
push
enter
xchg
push
int
mov
mov
mov
xchg
addb
bound
in
and
adc
fidivl
in
js
and
mov
mov
notl
cs
dec
out
or
add
sub
push
sub
cmpsb
addb
pop
sarb
std
in
add
jb
movsb
add
rclb
leave
sub
inc
adc
and
icebp
sahf
pop
ss
out
sub
data16
cld
sti
lea
fcompl
aas
dec
test
lods
movsb
insw
outsb
xorl
cmp
hlt
ss
add
into
rcll
fsubr
cmp
stos
les
sbb
mov
add
add
repz
in
inc
es
imul
cmpsb
sbb
cmp
sbb
add
ljmp
mov
mov
cmpsb
aas
cmp
lret
adc
adc
lods
dec
sub
jecxz
popf
stos
out
repz
and
cs
mov
arpl
xchg
mov
daa
mov
inc
add
xor
out
scas
pop
sub
sbb
cmp
and
cmpsl
outsb
ljmp
cmp
or
xchg
std
add
mov
add
jb
add
dec
movb
pushf
loopne
sub
dec
rcl
sbb
fisubrs
out
push
ficoms
mov
push
xchg
addb
stc
pop
ss
sbb
inc
add
pop
mov
loope
bound
imul
xor
xor
add
mov
or
cwtl
mov
inc
aas
cmp
add
repz
scas
inc
jb
pop
fs
es
imul
push
popa
pop
outsb
sbb
mov
add
cmp
lret
and
outsb
and
push
add
push
rolb
hlt
push
test
insb
sub
push
dec
pop
out
dec
push
test
add
inc
xchg
inc
add
mov
and
jns
ret
rorb
push
adc
pusha
add
rcl
bound
imul
pop
sbb
jno
inc
add
mov
cld
fsts
mov
jo
lds
cmc
insl
insl
lds
or
sub
iret
cmp
icebp
or
add
push
add
rcll
jbe
stos
ret
cmpl
and
pop
testb
xchg
movsl
pop
mov
adc
pop
mulb
xchg
das
cmpsb
dec
out
mov
adc
hlt
or
push
sub
cmp
scas
add
jno
leave
inc
add
mov
push
mov
ret
dec
push
sbb
mov
clc
loop
ret
push
sbb
push
push
lcall
xor
hlt
adc
icebp
stos
xor
ds
test
fiaddl
add
mov
push
notb
negl
pop
inc
jno
stc
sbb
iret
dec
rolb
call
aas
pop
cmp
hlt
xchg
and
aam
add
cmp
push
mov
sub
mov
cmc
push
test
cwtl
lret
jmp
shlb
push
mov
push
jb
add
bound
and
imul
add
mov
shlw
cld
jae
mov
push
addr16
sbb
int
call
fimuls
push
mov
cld
lock
addb
add
jbe
add
push
das
xchg
cmp
adc
addb
sahf
dec
addb
mov
into
xchg
push
add
push
in
mov
lcall
dec
movsl
inc
add
icebp
stc
push
ljmp
scas
das
jnp
push
js
add
jecxz
das
lret
inc
add
mov
ja
add
aad
cwtl
xor
mov
add
add
pop
adc
ficomps
or
sbb
push
lods
lods
fcmovne
shrl
add
sbb
sub
aad
sti
test
mov
adc
fsubl
add
aam
inc
pop
pop
jmp
add
jns
push
mov
mov
adc
nop
cmp
int
les
push
mov
dec
push
dec
ret
lds
sbb
cmp
arpl
add
aas
adc
dec
jp
loop
or
jmp
cmp
es
pop
cmpsb
and
cmc
mov
out
push
testb
iret
jns
cmpsl
sub
les
mov
shll
jecxz
mov
cmp
push
cmp
add
lods
out
ja
add
add
daa
or
mov
addb
jbe
lock
mov
add
sbb
push
xor
adc
mov
imul
xchg
pop
out
stos
mov
shrl
sbb
mov
pop
push
mov
lods
cmp
push
jno
mov
shr
aam
out
roll
lods
pop
and
mov
shll
sbbl
or
add
roll
pop
movb
mov
dec
mov
movb
xchg
dec
dec
push
push
jno
add
add
add
adc
mov
inc
add
inc
add
push
mov
and
jge
pop
std
ds
jne
mov
jno
cmp
test
sub
ss
sbb
jns
ret
cltd
testb
dec
dec
xchg
ret
mov
fmul
js
adc
add
add
addb
xchg
dec
les
lods
hlt
mov
mov
and
stc
aam
add
ja
mov
and
pop
mov
shll
loop
enter
or
lahf
scas
popa
xchg
pop
jle
add
cmpsb
stos
pop
fisubs
jp
add
mov
sub
mov
sbb
and
repnz
mov
mov
pusha
add
add
and
js
mov
vpshlq
ret
push
notl
sti
inc
add
push
out
lahf
add
inc
add
js
jge
pusha
add
outsl
ss
sbb
xchg
orl
popa
dec
outsl
pusha
add
add
mov
mov
xchg
pop
cltd
aas
adc
adc
outsb
inc
sub
fnsave
jb
or
add
or
sbb
mov
sti
xchg
pop
xor
lds
jno
fucomip
add
add
cmc
test
gs
add
pusha
add
outsb
mov
fistpll
sub
mov
push
mov
mov
xor
or
imul
inc
xor
add
bound
iret
pop
lcall
push
pop
inc
rcll
xor
js
cmp
das
loop
call
xor
sub
popa
ret
lret
addb
pop
sub
push
repnz
out
inc
scas
push
mov
add
sbb
jle
test
adc
cmp
xchg
cmp
and
movsb
lea
mov
xor
loop
aaa
dec
rcl
xor
inc
adc
jb
stos
jo,pn
sbb
out
cld
add
sarl
testb
lret
stos
clc
inc
add
in
mov
scas
and
int3
stos
aad
jmp
inc
add
dec
pop
dec
leave
nop
popa
jns
mov
into
adc
ret
loope
icebp
xchg
cmc
cltd
adc
les
push
fldcw
into
adc
mov
in
jecxz
jmp
jno
mov
testb
add
add
mov
insl
lods
punpckhdq
loope
mov
inc
add
dec
lahf
das
push
add
mov
les
nop
add
stos
fs
hlt
outsb
pop
cmp
adcl
add
pushf
icebp
jo
int3
rorb
cmp
fnsave
pop
addb
add
xor
or
cmp
add
lods
and
inc
add
mov
cltd
gs
sahf
and
fadds
mov
mov
cmp
pop
test
adc
ret
addb
add
roll
js
jns
add
bound
pop
les
je
adcl
out
loopne
and
sahf
adc
pop
shll
add
cld
sarl
push
push
jo
sbb
dec
mov
inc
mov
test
xchg
imul
xor
sbb
add
notb
cmc
popf
data16
dec
out
nop
mov
and
sbb
scas
ljmp
add
xor
aam
add
inc
fadd
add
pop
in
mov
add
and
das
dec
mov
adc
xor
sbb
dec
imul
inc
add
mov
les
xor
and
cwtl
and
or
lods
mov
dec
jnp
in
je
cltd
xlat
clc
cltd
add
ficompl
add
rolb
jb
jo
loop
lret
aaa
popf
outsl
sub
sbb
mov
cmp
add
bnd
addb
jge
addr16
iret
addr16
inc
cmp
pop
repz
roll
push
test
adc
dec
cmc
punpckhdq
push
mov
add
mov
stos
mov
add
mov
popf
mov
mov
fnstenv
push
addr16
shlb
ficomps
pop
loope
inc
add
mov
cwtl
jae
sarl
lcall
xor
xor
bound
xchg
and
notl
push
add
add
jecxz
popf
dec
mov
in
xchg
xor
scas
pop
jne
sub
loop
arpl
push
sarb
cmp
lret
bound
jecxz
scas
jmp
pop
jo
and
js
popf
stos
scas
cmp
fdivr
add
stos
xchg
mov
sub
sbb
addb
int
das
aas
imul
les
jno
or
cmp
rclb
add
movsl
sub
mov
jae
xchg
inc
pop
fbld
jle
sub
sbb
xchg
sub
inc
add
adc
jl
pop
mov
lret
loopne
cmp
xchg
sub
mov
jns
add
rolb
arpl
call
push
rolb
jg
pop
notl
cltd
gs
jecxz
dec
mov
cmp
int
jne
cmp
stos
jns
sub
cmp
push
cwtl
cmp
cmc
enter
jne
jb
or
out
xchg
hlt
loope
xlat
das
push
push
loope
out
pop
popf
push
add
mov
aad
lods
loope
sub
fs
daa
mov
in
adc
jo
mov
push
mov
mov
push
add
loop
mov
call
push
hlt
xor
sub
fidivl
xchg
or
jecxz
fimuls
xchg
cs
daa
inc
add
cs
mov
jecxz
mov
stos
push
imul
cmp
add
add
mov
mov
les
js
mov
jge
push
testl
test
inc
add
cld
pop
pop
jno
into
aaa
out
mov
add
sti
jns
and
xor
jge
push
add
mov
add
pusha
add
add
adc
mov
add
inc
add
test
pop
test
mov
pop
push
add
jns
fmull
xchg
mov
or
aas
dec
or
lret
sub
test
cmc
fisubs
dec
jae
les
addr16
iret
inc
add
cmc
rolb
jns
rcl
cld
push
jl
lods
mov
lock
sbb
sti
das
pop
and
dec
push
out
cmc
sub
inc
gs
addl
add
fisttpl
sbb
les
imul
shll
dec
add
or
es
add
lahf
jo
sub
clc
or
add
test
xlat
addb
js
mov
xchg
pop
mov
xor
xor
std
iret
adc
add
flds
add
loopne
push
popf
inc
add
xlat
or
fstpt
clc
xor
jp
outsl
push
add
les
loope
outsl
loopne
pop
or
rcll
daa
xor
lahf
push
insb
fstps
inc
add
add
add
mov
mov
mov
jno
mov
adc
fs
shlb
roll
aas
sbb
leave
lods
lret
ljmp
loop
bound
and
and
test
inc
inc
add
sbb
push
add
lock
mov
dec
scas
aas
in
dec
orl
add
jb
mov
sbb
idivb
dec
loop
mov
cmp
add
repz
movsl
mov
ds
frstor
add
jmp
fdiv
cmpsl
xchg
pop
sub
jmp
lods
or
repnz
xchg
dec
jnp
jae
mov
jne
aas
push
mov
add
popf
fldenv
xchg
sbb
hlt
daa
push
adc
add
mov
add
cmp
shr
pop
mov
and
jne
fidivrs
mov
add
fcomps
lods
iret
push
sbb
stos
addb
xorl
sbb
inc
dec
adc
lcall
lret
push
lods
jb
in
fs
test
hlt
xor
add
pusha
add
push
adc
push
aam
add
push
sbb
cmpsl
imul
icebp
and
iret
and
stos
cmpsb
loop
lret
cmp
xor
sahf
xor
xchg
push
fwait
hlt
xchg
push
stos
pop
mov
aam
mov
xor
je
add
cld
fbstp
mov
xchg
cmp
add
mov
pop
aad
add
ret
scas
out
shll
or
out
dec
or
mov
add
jmp
inc
xchg
push
sbb
out
sbb
popf
ret
xor
mov
dec
pop
mov
sub
rcll
pop
imul
add
jne
cmp
or
push
sbb
enter
fcmovne
sub
loop
out
out
rcrl
xchg
or
stos
stos
sbb
loopne
fwait
lods
fimull
test
mov
xchg
cltd
add
out
test
mov
aad
xor
stos
jb
dec
cli
jmp
xchg
push
xchg
and
mov
and
or
mov
add
and
loopne
stos
es
inc
add
js
mov
js
add
call
add
mov
mov
cmpsl
xchg
push
dec
fs
mov
and
movb
ss
jl
mov
push
inc
loop
ficoml
and
cmp
into
fs
sub
pop
inc
dec
fwait
decb
and
jns
push
jp
into
and
cmp
adc
mov
cld
push
rolb
out
shl
and
dec
push
add
cli
outsl
pop
add
add
fcoml
or
add
push
jo
shll
add
xchg
les
popl
lahf
cmp
xor
sub
xchg
fsubrp
sub
sub
push
sub
scas
mov
adc
xor
push
pop
dec
repnz
stos
adc
iret
arpl
pop
mov
loopne
loopne
js
ret
int
cmp
ret
mov
add
xor
das
ret
sub
push
pop
adc
xor
push
and
es
push
test
lret
ja
jnp
lcall
pop
pushf
sub
fcoms
cmp
imul
mov
out
lds
inc
add
popa
pop
lds
mov
pop
cmp
ljmp
cmp
and
add
xlat
adc
push
xor
dec
stos
loop
cmp
lea
and
pop
jnp
mov
lret
dec
sahf
xchg
movl
insl
or
xchg
and
pop
lret
push
mov
pop
xchg
call
dec
sbb
jmp
jae
add
add
add
mov
dec
lret
into
push
add
mov
sti
jbe
jl
sti
push
push
cwtl
adc
iret
leave
in
int3
addb
xchg
sbb
add
fsubl
pop
mov
stos
ret
and
fisubl
add
sub
and
outsl
xor
mov
add
sbb
ffree
push
sbb
or
mov
xor
hlt
repz
add
repnz
rcrl
add
in
adc
clc
xor
sahf
pop
adc
cmp
repz
out
fistps
sarl
cmp
inc
add
cmp
aaa
mov
mov
ljmp
inc
enter
and
push
mov
imul
mov
add
sub
add
jbe
jle
push
add
xchg
add
mov
hlt
nop
mov
bound
jle
icebp
lds
add
xchg
mov
sbb
addb
cmpsl
add
cmp
adc
testb
sub
mov
das
sti
cmp
mov
mov
sti
jne
inc
add
mov
jge
stos
inc
push
jno
or
in
sti
arpl
or
mov
push
adc
les
xor
cmp
adc
xchg
sub
fdivrs
mov
cmpsb
dec
or
out
mov
nop
fwait
mov
dec
push
cmp
into
sbb
inc
add
fs
mov
xchg
outsl
or
add
outsl
shrb
pop
cld
jmp
mov
mov
push
add
stc
or
push
add
fs
and
test
outsb
nop
cli
fcoms
add
cmp
xor
pop
mov
popa
sbb
xchg
pusha
add
mov
xchg
sub
jb
fsubs
sbbl
lret
je
dec
fists
cmp
pusha
add
mov
andl
imul
sbb
adc
mov
test
cltd
loop
push
mov
and
sbb
mov
mov
cmp
cltd
inc
gs
scas
dec
sub
sti
mov
inc
idivl
jmp
inc
addb
sub
lock
outsb
jae
mov
inc
aas
jmp
fdivr
jno
sbb
add
cmpsb
int
in
jb
adc
hlt
neg
mov
test
jbe
stc
dec
mov
aas
sbb
add
test
enter
pop
adc
jnp
stos
ret
jno
xchg
mov
adc
sbb
in
aas
xchg
sub
xchg
adc
loopne
add
lcall
fadds
push
sbb
mov
bound
adc
loopne
push
mov
cmpsb
sub
push
clc
xorl
mov
loope
jno
pushf
mov
xor
cltd
dec
hlt
mov
inc
add
js
fsubl
sub
cmp
sbb
scas
xor
sbb
add
mov
xor
add
iret
mov
add
push
movb
rolb
rolb
es
outsl
add
rorb
js
iret
pushf
movsl
push
insl
loopne
pop
pop
imul
add
sbb
lret
sbb
mov
dec
inc
jne
lcall
cmc
insb
push
iret
dec
add
pop
add
lods
sub
xchg
lret
pop
int
outsl
bound
lods
repnz
ret
fwait
pusha
add
sbb
lock
das
jbe
push
test
sti
ret
int3
sub
or
jp
adc
arpl
or
mov
xchg
mov
sbb
xchg
int
sub
movb
aas
xor
push
add
lea
cmp
fcompp
stos
cmp
add
push
pop
xchg
mov
int3
mov
loope
xchg
ljmp
mov
cwtl
jb
mov
add
add
mov
inc
add
sar
add
lods
mov
mov
mov
sub
add
sub
mov
cmc
cwtl
ret
loop
fldcw
shll
je
insl
int3
fbld
cltd
push
add
addb
add
push
push
xor
dec
inc
sbb
loopne
cmp
sbb
pop
xor
xchg
pushf
jge
sub
stos
xchg
inc
jl
add
add
xchg
mov
sub
aas
jge
xorl
cmp
ljmp
add
add
mov
dec
inc
sbb
xchg
pop
or
sbbl
pop
gs
dec
sbb
cli
mov
insl
sbb
xchg
in
mov
ret
add
jne
xor
sub
bound
lret
mov
lock
add
imul
fiaddl
add
in
rclb
stos
cwtl
jbe
jmp
add
cmp
addr16
jbe
loope
mov
xchg
and
cs
out
enter
sahf
adc
arpl
push
lea
cltd
adc
push
or
dec
cli
aad
inc
add
inc
add
mov
ljmp
fs
ret
pop
stos
lea
sub
dec
popa
call
roll
rolb
mov
mov
aaa
xor
pop
jp
sbb
imull
rcrb
add
fs
incb
add
sti
scas
pusha
add
aam
push
jp
sahf
pop
cmpsl
and
adc
sub
pop
je
dec
or
cmp
daa
sti
std
in
dec
adc
cli
mov
xchg
repz
adc
xchg
fwait
nop
sarl
xchg
mov
cmp
lods
add
mov
das
xchg
jae
repnz
push
popf
mov
ja
push
out
mov
out
add
mov
sbb
or
jnp
pushf
push
or
mov
cmp
or
add
or
ja
push
test
setae
sbb
or
add
sub
xchg
xchg
je
xor
xorl
rcrl
les
dec
es
inc
mov
add
add
adc
lea
cmp
add
sbb
add
hlt
xchg
pop
jle
out
fdivrp
lods
arpl
xor
addr16
mov
pushf
lret
xor
lds
imul
add
mov
push
push
addb
lea
inc
add
mov
mov
jae
or
das
or
scas
sbb
addr16
aad
test
mov
int
outsb
inc
add
jae
movsb
fwait
sub
inc
imul
ret
inc
rol
add
pop
dec
aam
out
lcall
add
jns
add
out
fisubrl
inc
add
mov
dec
inc
add
jns
clc
test
dec
inc
jg
xchg
mov
das
scas
hlt
mov
xor
push
addb
test
push
test
cmpsb
scas
pop
jae
jno
push
push
hlt
or
jae
mov
mov
sahf
cmp
add
popa
or
fstps
dec
pop
jecxz
int3
mov
outsl
jb
cmpsl
sub
inc
add
dec
cmp
mov
aad
and
ss
adc
pusha
add
test
movsb
lret
xor
loope
outsl
rolb
add
iret
and
dec
ret
push
mov
cmp
sahf
sub
pop
lds
pop
push
add
push
add
sub
xchg
push
pop
dec
xchg
xchg
jo
pop
mov
or
scas
lret
mov
clc
adc
push
fcmovne
push
pop
adc
push
jbe
mov
ja
not
movb
jmp
ss
xchg
push
test
out
scas
inc
add
sti
jg
adc
es
jge
nop
sbb
jne
scas
das
sub
fcomps
pop
stc
test
xchg
ret
cmpsb
or
lahf
orl
test
imul
add
add
jnp
jp
mov
mov
push
and
xor
xchg
or
data16
push
inc
fdivrl
rolb
cmp
add
addb
and
mov
jbe
adc
or
xlat
addb
sub
add
lds
jl
cmp
add
push
sbb
sbb
jl
add
lahf
outsl
jmp
iret
mov
out
sub
scas
add
aaa
aaa
xor
sub
add
fwait
mov
xchg
mov
mov
adc
add
lock
imul
sub
pop
push
mov
movsb
adc
sbb
mov
mov
addb
rcrl
push
addb
int
xchg
aaa
rolb
cmp
add
lcall
neg
js
int
xor
les
lock
inc
add
scas
sbb
mov
inc
mov
idivb
repz
subl
popa
lods
stos
scas
mov
jl
jb
add
inc
sub
aad
popa
jl
dec
pusha
add
and
dec
push
mov
lcall
movb
cld
dec
std
das
ret
shrb
in
dec
mov
add
fyl2xp1
inc
add
fdivrs
jecxz
add
mov
out
cmp
les
les
repnz
push
mov
xor
or
xor
gs
jne
mov
dec
mov
xchg
ljmp
cmp
fistpl
clc
std
popa
push
pop
lock
lock
fs
cltd
xchg
clc
xor
test
inc
add
cs
jecxz
add
cmp
addb
add
aam
stc
sbb
jmp
xchg
icebp
inc
fsubl
mov
sarl
stc
movsl
bound
cmp
add
add
into
mov
sub
add
mov
scas
repnz
jno
repz
mov
inc
add
out
rolb
icebp
xchg
lds
inc
hlt
insb
jae
sti
jb
add
movsb
xor
jbe
fptan
jg
gs
js
rcrl
icebp
cmp
lret
and
add
sbb
pop
mov
xchg
mov
xchg
mov
leave
adc
call
rorl
lret
ja
mov
jle
jns
inc
outsb
mov
in
xor
jmp
and
xor
arpl
aas
hlt
fcoml
andl
jge
mov
pop
sbb
ficompl
inc
add
cmp
jmp
cltd
call
or
leave
and
xchg
push
sub
imul
pop
test
mov
and
jb
hlt
imul
test
lahf
out
fnstsw
in
lds
add
add
add
fldt
push
add
or
jne
push
test
jnp
sbb
imul
fs
mov
push
lret
mov
jmp
rclb
mov
pusha
add
faddp
jo
mul
mov
fucom
das
sub
push
mov
pop
dec
cmp
xchg
das
dec
add
ja
repz
repnz
and
jnp
icebp
sub
jnp
xchg
xchg
les
sub
sub
push
clc
or
mov
add
call
xchg
jl
movsb
cmp
movb
movb
pop
in
adc
inc
mov
cmp
push
or
lea
add
pop
jp
mov
mov
sahf
mov
movl
cmp
xchg
mov
loope
int3
sub
mov
les
imul
mov
inc
add
adc
xchg
or
dec
push
rolb
js
add
addb
xchg
in
pop
inc
lods
push
and
mov
rclb
ret
mov
nop
popf
arpl
jns
imul
xchg
fsubrs
xchg
fisubrl
lcall
out
stc
xchg
ja
mov
sbb
addr16
ds
pop
mov
jbe
std
adc
orl
pop
mov
jne
cmc
mov
filds
pusha
add
scas
sbb
loop
ss
sub
dec
loop
sub
imul
out
addl
add
pop
call
movb
sbb
test
adc
loop
mov
xchg
sub
mov
cmp
xchg
js
ljmp
dec
mov
ret
pop
adc
addb
pop
movb
or
add
dec
loop
aad
xor
add
mov
xchg
cmp
and
mov
fdivrs
insb
jnp
outsl
and
lods
adc
jbe
rolb
into
mov
jmp
push
out
outsb
scas
mov
fcompl
ss
andl
jo
mov
xchg
inc
or
mov
mov
aaa
cmp
add
ljmp
leave
mov
push
add
lret
test
add
in
jnp
rolb
add
dec
ret
dec
bound
rolb
call
cmp
and
or
push
mov
pop
mov
inc
aad
rolb
dec
std
addr16
adc
filds
rcrl
rcll
pop
mov
mov
add
mov
adc
mov
add
fisubl
aad
jle
push
scas
sti
dec
mov
insb
testl
add
cmp
xchg
insl
add
pusha
add
lcall
sub
out
mov
cmp
add
fs
and
pop
xchg
pusha
add
lea
jge
add
pop
je
loope
mov
sub
or
shl
pop
rep
inc
add
shrl
mov
in
inc
mov
add
xchg
xchg
jb
in
sub
and
aaa
bound
dec
idivb
fimuls
add
inc
add
xchg
repz
fbld
sub
rorb
bswap
cmp
adc
loopne
xor
xchg
dec
ret
add
cwtl
insb
mov
pop
jp
outsb
mov
mov
stos
inc
add
pop
pusha
add
mov
mov
rcrb
jne
sbb
stos
push
cmpl
roll
xchg
mov
mov
in
ret
fwait
or
out
xchg
lds
xchg
xchg
iret
inc
add
inc
fisubrs
lods
push
pop
or
push
test
negb
popa
loopne
add
pop
stos
cltd
aas
movsl
jp
add
add
add
call
jbe
xlat
jg
notl
je
add
fcomps
sub
pop
push
push
addb
pop
sbbl
or
sub
add
sbb
pusha
add
in
dec
sbb
lret
lret
outsl
outsb
test
sarl
insl
pop
pop
pop
cmp
in
cmc
or
sub
dec
dec
push
add
in
add
iret
sbb
faddl
lds
outsb
inc
add
mov
mov
adc
push
adc
jg
cmpl
sub
add
xor
rcrb
pusha
add
xor
inc
mov
stos
add
bound
call
fnsave
pop
or
cltd
rcrl
fistpl
and
aas
push
cli
cmp
test
mov
add
mov
sub
adc
arpl
in
lret
or
sti
add
push
ret
pop
add
jle
enter
fisubrs
push
ss
loopne
cmp
mov
add
movsb
jb
hlt
cmp
pop
test
push
xchg
sub
loop
cmpsb
std
fcoms
or
sub
into
aam
add
lods
iret
or
stc
sub
pop
add
js
rcrb
mov
add
jp
push
cmp
ljmp
add
xor
add
lret
movb
jbe
dec
and
lret
sti
push
movsl
and
test
arpl
pop
mov
lods
and
mov
inc
inc
mov
int
insb
mov
xor
ror
sbb
lahf
cmp
mov
cmp
nop
push
mov
mov
push
xor
or
je
addb
cmp
stos
data16
out
sti
jnp,pt
add
xor
mov
cmp
or
jge
mov
ljmp
add
hlt
pop
les
and
sbb
mov
pop
fldenv
incb
test
or
push
mov
xchg
pop
scas
xchg
push
test
daa
aam
stc
fxch
and
mov
mov
repnz
and
inc
add
test
pop
call
hlt
pop
lcall
outsb
add
mov
or
out
push
push
add
sub
sub
test
xor
fwait
scas
cmpsb
jnp
cmp
aas
push
sub
pop
mov
ja
mov
add
lahf
cmpsb
jmp
mov
cs
and
sub
jne
xchg
mov
xor
fwait
cmp
add
adc
inc
add
sub
inc
mov
popa
xchg
mov
mov
xchg
push
fsubrp
mov
inc
add
fnsave
and
mov
cmp
jo
xchg
popa
pop
pop
mov
mov
mov
imul
push
add
add
addl
add
add
mov
push
add
jl
xor
mov
add
and
add
outsb
cltd
ljmp
aam
and
lcall
movsb
daa
lods
loopne
or
and
shl
subl
iret
sub
int
sti
or
shll
stos
add
dec
cmp
mov
cmp
dec
inc
add
in
jae
cs
inc
add
xchg
pop
mov
aam
out
lods
enter
stos
scas
xchg
fbld
add
fnstsw
dec
icebp
scas
pop
pop
out
mov
movsb
pop
rcll
mov
popf
adc
cmpsl
jns
pop
fwait
cwtl
xor
mov
cmp
mov
push
es
add
pop
pop
cs
dec
xchg
adc
outsl
pop
insb
daa
hlt
mov
add
sbb
xchg
xor
push
sub
add
and
jnp
lea
imul
add
and
in
lcall
push
mov
jb
cmc
push
fildl
mov
xor
push
mov
push
or
test
add
out
adc
push
test
arpl
dec
scas
jae
add
icebp
popf
mov
pop
lcall
loope
or
mov
push
jl
xchg
int
inc
mov
icebp
lds
gs
sub
testb
mov
imul
loope
pop
cmc
adc
fisttpll
fdivrl
pop
test
inc
mull
addb
mov
in
inc
sbb
lods
jl
pop
aaa
jecxz
add
dec
xchg
xor
push
les
xchg
les
mov
out
mov
push
and
rorb
xchg
inc
add
mov
push
shl
iret
lock
adc
movsl
movb
xchg
sub
sub
or
jb
ficomps
cmpsl
push
add
cwtl
mov
or
fdiv
push
inc
add
inc
flds
lcall
divl
or
and
mov
add
add
jb
mov
inc
add
mov
movb
bound
jb
add
pop
addr16
stos
sbb
sarb
or
insl
add
outsb
int
sbb
push
mov
mov
dec
scas
mov
add
cmc
rclb
jne
rcr
scas
push
mov
xor
pop
lods
mov
sub
add
inc
dec
loopne
ret
popa
test
lods
mov
jmp
add
add
addb
iret
je
and
test
out
mov
mov
push
add
pushf
mov
sbb
int3
loopne
das
stos
push
inc
aam
or
and
adcl
jl
es
pop
push
mov
gs
and
xchg
lret
movsl
sbb
aam
jno
fmull
sarl
sbb
rcr
mov
dec
jns
pop
xor
bound
test
push
mov
clc
test
add
dec
push
aaa
das
dec
dec
add
jge,pn
fcomp
sub
daa
pop
adc
and
jmp
cmp
or
pop
jo
xor
inc
add
loopne
push
jno
add
in
push
mov
add
jl
jno
jbe
xor
lcall
push
add
push
adc
clc
int3
rclb
and
inc
in
xchg
jl
test
pop
ret
jmp
xor
or
sub
inc
add
ret
movsb
ret
dec
fcomi
mov
dec
lods
jns
cld
outsb
xchg
movb
mov
mov
xchg
fcomip
loope
ja
jnp
out
pop
inc
add
jns
push
popa
popf
popa
push
push
mov
out
mov
ret
sbb
and
in
dec
loop
int3
gs
mov
dec
lret
and
adc
add
dec
scas
jbe
int
out
jnp
add
das
mov
lret
rol
clc
aad
mov
mov
inc
mov
add
add
mov
or
addb
idiv
ljmp
push
mov
sbb
add
xchg
in
xlat
bound
in
divb
mov
testb
push
xor
jnp
ss
dec
sti
aaa
fildll
ficompl
mov
imul
shl
jb
or
pop
lahf
sub
add
ss
sti
mov
addb
aaa
shrl
xchg
rolb
add
fstpl
add
dec
sub
mov
jle
pop
ss
ficoml
inc
loope
mov
cmpsb
pcmpgtb
mov
push
add
cmpsb
adc
xcrypt-ecb
cmpsl
push
dec
in
xchg
add
add
push
adc
dec
and
xchg
ja
add
cmp
pop
mov
loopne
or
cmp
clc
loop
xchg
dec
adc
jmp
mov
mov
int
xchg
lret
dec
mov
fwait
mov
inc
add
mov
cmp
jecxz
orl
stc
xchg
inc
addb
pusha
add
leave
je
pusha
add
rcrl
mov
aas
inc
add
mov
jmp
and
inc
add
add
test
or
xor
stc
test
mov
pop
jle
aas
scas
dec
mov
adc
inc
add
es
push
fidivrs
outsl
xchg
mov
add
add
lret
fs
jno
ret
add
popf
imul
test
cmp
clc
addb
add
add
pop
sbb
jp
add
add
lret
xor
mov
mov
dec
sbb
dec
push
add
fwait
cmp
push
ja
add
adc
cmp
jne
ja
cmp
ss
mov
jbe
arpl
add
jno
gs
sub
ja
add
add
adc
xor
aam
sub
add
dec
mulb
and
mov
stos
stos
je
xchg
sbb
pop
loop
push
add
inc
cs
jl
jl
adc
push
pop
in
pop
icebp
push
add
fwait
xor
andl
sbb
neg
xorl
push
insb
les
sub
mov
add
cmp
jo
stc
inc
scas
sar
mov
xor
lret
cmp
add
and
cmp
je
cmpsl
mov
mov
das
jmp
fnstsw
mov
dec
cltd
test
push
mov
pop
pop
sbb
add
push
mov
std
test
jno
jge
xlat
pop
add
icebp
loopne
or
and
dec
pushf
pop
jl
adc
dec
jecxz
xchg
mov
iret
in
dec
mov
push
xchg
inc
xchg
test
mov
aaa
mov
mov
add
vpsubusb
add
jo
cmp
in
outsl
xchg
push
incb
add
or
mov
in
int3
cmpsb
or
mov
add
push
mov
sub
sbb
in
popf
xchg
movsb
add
cmpsb
push
adc
clc
push
enter
mov
rolb
sub
add
aaa
xchg
test
adc
out
sub
loop
and
add
in
mov
lahf
cmp
arpl
js
in
inc
add
mov
xor
in
and
add
sub
mov
sub
push
fists
xchg
xchg
stos
dec
xor
into
xchg
sti
ss
mov
imul
mov
add
clc
sub
test
dec
insb
mov
jo
jne
push
jmp
xchg
jmp
add
sbb
add
push
mov
sti
mov
pop
je
js
dec
lcall
dec
dec
xor
leave
cmp
pushl
xchg
aas
and
es
adc
mov
add
aaa
scas
sbb
mov
push
dec
call
shll
add
push
sti
adc
sub
push
hlt
ss
cmp
out
into
lods
jnp
ret
jge
pusha
add
repnz
test
movsb
sbb
pop
dec
add
sub
je
dec
or
insb
or
lret
adc
add
push
outsb
add
jle
xor
test
imul
xchg
lock
aad
add
mov
cmp
push
pop
jns
push
cmc
pop
imul
dec
adc
movsb
mov
iret
ja
fbstp
aam
sbb
add
xor
mov
outsb
or
or
into
cmpsl
sbb
mov
dec
in
gs
jl
push
cmp
push
nop
inc
ds
mov
insb
addr16
jg
subl
dec
push
cmp
int3
arpl
mov
or
cmpsb
jp
inc
add
das
lret
ja
cmp
push
movsb
cltd
dec
bnd
out
lret
arpl
add
test
loope
xor
adc
add
and
cld
jg
test
repz
add
xchg
cld
pop
divl
add
cmp
mov
or
jg
add
adc
out
fistpl
mov
mov
xchg
xchg
das
mov
pmulhuw
fcompl
add
cli
in
or
cs
cmp
inc
or
sub
loopne
movsb
pop
movb
add
insb
push
sahf
sub
in
addb
out
sbb
cltd
xor
es
and
adc
leave
xchg
push
add
mov
ficompl
out
sahf
and
pop
sbb
xchg
adc
pushf
out
cmpsb
fwait
mov
jle
mov
sub
xor
enter
dec
shrl
sahf
pusha
add
mov
bound
je
test
xlat
dec
rol
ljmp
sub
cmpsb
cmp
arpl
das
or
mov
and
adc
out
testl
hlt
mov
pop
aas
dec
fadds
pop
mov
mov
add
add
cmp
testb
mov
movsl
fmull
loop
and
adc
jg
cld
scas
xchg
fstpl
mov
inc
inc
add
mov
cld
mov
loopne
repnz
push
test
pop
in
or
jge
sub
rolb
and
push
mov
test
fsub
jmp
or
insb
imul
ljmp
pop
fisubrs
mov
mov
lcall
jne
cmpsb
arpl
test
test
add
xor
mov
add
mov
sbb
add
xchg
add
dec
inc
pusha
add
out
jno
loope
add
mov
inc
lret
hlt
int
ljmp
clc
jno
cmpsl
sbb
ja
movsl
dec
and
outsl
daa
pop
sti
xorl
or
stos
into
cli
add
xor
jno
cmp
lahf
ret
add
jg
cltd
aam
orl
mov
cmpsl
out
add
jmp
dec
lahf
adc
ja
add
cmp
jo
jnp
adc
mov
aaa
test
add
mov
das
jno
dec
dec
in
sbb
cmp
mov
inc
push
adc
icebp
xor
cld
jb
les
pop
pop
int
ds
add
xchg
add
xor
add
cmovo
ja
add
xor
popa
test
addb
xchg
sub
int3
es
hlt
cmp
add
cmp
fldenv
repz
ficomps
in
mov
add
mov
add
jg
jg
mov
cmpsb
out
mov
pop
outsl
mov
lea
add
push
cltd
push
clc
mov
add
ljmp
out
sub
sbb
lods
mov
add
adc
jge
and
and
and
fidivrl
mov
mov
shrl
dec
jb
mov
jg
jno
dec
cmp
lcall
pop
cmp
loope
cld
inc
test
pop
testl
filds
jp
xchg
mov
mov
add
add
sub
mov
xchg
xchg
aas
add
sub
mov
dec
cld
pushf
mov
pusha
add
xchg
in
pop
ret
mov
adc
push
xchg
cmp
lods
push
or
sbb
insl
dec
outsl
imul
sub
roll
std
movsl
xchg
fldt
mov
cmp
add
lahf
mov
pop
dec
rolb
cmp
rolb
cmpxchg
push
popf
clc
xchg
leave
and
push
inc
add
icebp
sti
xor
sub
dec
adc
jmp
sub
ficomps
popf
dec
cmp
pop
or
jne
pop
ds
je
dec
in
cmp
pop
and
push
movsb
mov
push
mov
add
sub
jecxz
movsl
or
mov
mov
mov
pop
mov
leave
bound
sub
addb
adc
adcl
jns
jmp
fwait
lret
aas
xchg
or
dec
clc
add
or
push
mov
add
stc
fld
add
xchg
pop
in
aam
gs
ret
mov
add
loopne
fs
int
adc
jnp
xor
mov
outsb
mov
dec
adc
mov
dec
push
sbb
shll
pop
or
jecxz
flds
mov
aam
pushf
or
add
add
add
cmp
cmp
inc
add
test
outsb
loope
mov
sbb
test
xchg
int
jae
sub
xor
pop
mov
loop
add
jnp
imul
pop
pop
mov
jno
mov
in
dec
mov
pop
sbb
les
or
cli
out
sub
xor
or
lea
movb
pop
push
adc
add
inc
add
jnp
or
add
cli
fdecstp
add
pop
jle
xchg
cltd
scas
cmp
lahf
insl
xchg
ja
insl
mov
mov
cmp
pushf
and
outsl
xchg
jmp
add
mov
jg
add
mov
arpl
mov
cwtl
inc
add
cmpsb
mov
movsl
lods
in
xchg
dec
or
jbe
popf
scas
xchg
sbb
adc
add
adc
add
ret
add
in
test
inc
add
bound
sbb
jne
outsl
testl
mov
inc
add
and
pop
pop
jle
inc
cmp
add
and
pop
addb
imul
mov
xor
scas
add
add
sbb
or
aam
mov
mov
and
sbb
jle
sbb
aad
mov
sbb
dec
addb
or
or
pop
fidivl
addb
pop
shrl
mov
mov
push
and
or
sbb
loopne
les
xchg
xor
cli
sbb
add
movsb
pop
iret
mov
jno
mov
sub
and
xchg
lods
ret
dec
dec
mov
lahf
jae
lods
xor
imul
mov
cmp
int
pop
lods
imul
in
add
stos
out
jle
push
addb
lahf
stc
mov
adc
cmp
fnstenv
xor
adc
add
mov
cmp
rclb
ret
mov
mov
mov
mov
rorb
aam
rolb
sub
loope
sahf
aaa
testb
out
mov
and
popa
out
cmp
aam
lods
shrl
rolb
add
das
lret
xchg
inc
add
dec
lea
rolb
push
movsl
xchg
mov
and
or
push
mov
test
out
rolb
sub
pusha
add
pop
xlat
jne
and
nop
dec
xor
mov
mov
or
push
pop
loop
mov
movsl
xor
add
inc
pushf
xor
pop
cmpsl
sbb
jnp
fs
fdivrl
pop
and
lea
add
aaa
push
int
mov
pop
inc
rolb
dec
xchg
clc
nop
rolb
add
push
in
push
loop
jecxz
test
mov
clc
cmpsl
rcrl
mov
mov
stos
push
aam
xlat
outsb
sbb
push
insb
jmp
sti
test
call
mov
ret
icebp
dec
mov
push
xchg
jl
pop
rcll
jecxz
nop
mov
ret
add
ds
cld
cwtl
lret
pop
mov
jnp
pop
lahf
dec
jb
add
mov
das
clc
sbb
jo
lret
inc
add
xchg
mov
sbb
add
popf
addr16
push
cmp
and
dec
dec
arpl
loop
int3
inc
add
iret
push
addb
mov
jno
xor
cmp
sbb
iret
int3
pushf
mov
mov
pop
arpl
push
mov
in
cmp
mov
sub
lods
and
mov
popf
dec
fcoml
push
mov
movsl
push
and
add
add
mov
add
sub
mov
mov
stc
mov
outsb
mov
ret
add
mov
sub
mov
push
xchg
jns
out
hlt
mov
add
mov
mov
loope
and
lret
lahf
test
inc
add
fistpl
addb
rcll
mov
push
lea
add
fsubrp
fs
push
pusha
add
sub
lods
xchg
xchg
xchg
in
add
jns
xchg
in
movsl
or
ja
mov
flds
pusha
add
movsb
imul
lock
bound
clc
outsl
popa
lret
cmp
pushf
out
jg
add
cmp
inc
add
test
dec
push
mov
xlat
in
cmpsb
xchg
fdivrs
loopne
cld
hlt
stos
mov
aam
sbb
in
cmp
add
cmc
les
add
xchg
sbb
pop
mov
pop
inc
lods
sbb
push
jle
push
dec
inc
add
pop
gs
ret
pushf
dec
add
and
loopne
repz
cmp
inc
sbb
mov
xchg
sub
das
cmp
or
add
sbb
or
and
xor
fwait
sub
add
pop
cmp
movb
outsl
sbb
rolb
jle
jb
lea
dec
mov
add
cmp
mov
dec
and
out
jb
mov
add
fisttpll
and
add
add
fdivl
cmp
mov
mov
dec
mov
aaa
stc
addb
sub
push
push
sub
jns
daa
ret
aad
test
test
cld
mov
mov
in
sub
test
add
rcrb
shlb
call
jo
iret
stos
ficoml
aaa
mov
dec
jecxz
call
and
mov
ffreep
mov
xchg
xor
add
stos
bound
clc
stc
bound
mov
cmp
aas
repnz
xorl
mov
add
movsb
mov
lods
rsm
fdivr
xchg
out
lock
adc
xchg
loop
push
or
add
adc
nop
or
mov
mov
sub
sbb
pop
fmulp
sub
pop
jp
notl
cmp
xor
icebp
stos
add
bound
cld
cmp
or
sbb
add
and
btc
xlat
dec
dec
rolb
rorb
lea
mov
gs
popa
stos
data16
bound
fiadds
sbb
testb
add
aaa
sbb
add
les
dec
xchg
outsl
dec
fisubl
inc
dec
icebp
dec
xchg
sub
arpl
adc
add
lea
mov
pushf
pop
sub
add
cs
jecxz
div
push
pop
sbb
cmp
aas
fsubl
push
cli
icebp
mov
add
ret
dec
xchg
scas
addb
push
in
or
sub
pop
and
cmpl
dec
cs
dec
sub
add
pop
pop
xlat
addb
pop
cs
add
pop
jl
ljmp
xchg
pop
fcmovu
add
test
mov
and
shl
into
and
int3
cmpsb
mov
fmul
in
lahf
cmp
es
add
jae
pop
in
rolb
pop
xchg
addb
pop
inc
pop
lcall
mov
loopne
jne
mov
sub
inc
add
call
jecxz
adc
movsb
int3
pop
sbb
add
adc
insb
cmp
outsl
mov
add
mov
jmp
daa
mov
xchg
pop
xchg
dec
mov
push
add
jo
and
ljmp
lds
mov
jbe
pop
idivb
sub
nop
fdiv
sbb
xchg
neg
imul
hlt
add
hlt
and
negb
or
lahf
add
fisubrs
cmp
jo
push
mov
pop
cmc
cmp
inc
into
dec
aas
fucomi
loop
ja
test
add
lods
lock
or
adc
add
pop
leave
ja
test
jp
insb
data16
int
mov
add
out
outsl
loope
and
add
ficoml
push
mov
mov
ljmp
fstpl
jmp
aad
pop
pop
in
mov
bound
inc
add
add
out
xchg
cltd
jns
xorl
addb
xchg
cmpsl
sbb
cmp
inc
add
jnp
daa
add
and
adc
add
lock
xchg
pop
or
mov
xchg
adc
scas
cmpsb
sub
xchg
xchg
dec
outsb
lea
sub
aaa
rcr
sbb
sbb
and
sarb
add
addb
testl
sbb
cmp
out
sub
sub
adc
mov
test
cmp
jne
add
dec
addr16
data16
lahf
push
or
add
or
mov
mov
dec
adc
testb
arpl
add
call
pop
rclb
dec
lock
shrl
lcall
add
nop
push
in
shrl
inc
mov
mov
jmp
push
test
sti
imul
ja
inc
add
insb
sub
in
not
aaa
rcrl
pop
cmovp
rcll
call
xor
mull
xor
dec
or
mov
movntq
out
mov
rorl
enter
addb
mov
in
insl
movl
outsl
addb
push
push
mov
stc
pop
jecxz
dec
bound
add
pop
mov
inc
inc
add
add
fiadds
subl
mov
outsl
pop
pusha
add
test
mov
add
xor
add
sbb
nop
rcr
xchg
xchg
push
movsb
int3
les
lret
sahf
dec
fbld
lret
inc
add
leave
add
push
out
lcall
sbb
mov
out
cs
mov
jmp
loop
movb
cli
and
mov
scas
ja
dec
ret
and
sti
jecxz
aad
add
js
add
mov
aad
mov
addl
ja
sbb
add
add
add
sub
push
rolb
add
rolb
cmp
cmp
cmp
aam
jmp
xor
pop
loop
fstpt
ret
cmp
ret
inc
jmp
in
push
lret
rol
add
mov
xor
jae
mov
fneni(8087
adc
sahf
mov
out
call
fwait
cwtl
xchg
rcl
pmuludq
shl
add
mov
pop
pop
pop
push
sub
scas
aam
pop
mov
jns
je
add
sbb
mov
scas
jecxz
cmp
loopne
imul
data16
mov
outsb
push
imulb
add
inc
stos
add
int3
repz
aam
out
mov
xor
jmp
add
into
inc
add
adc
push
lret
push
jno
add
stos
mov
mov
dec
sar
iret
sbb
scas
or
push
jge
ss
shrd
cld
xchg
xchg
scas
or
push
cmp
bound
sbb
or
add
addb
adc
cmc
sbb
add
stos
cmp
mov
outsl
and
nop
repnz
sbb
xor
sub
push
cltd
stos
jge
push
inc
add
adc
jnp
or
add
fdivrl
pand
dec
lods
or
mov
aad
add
or
cwtl
popa
push
inc
add
inc
fsubrs
dec
test
jmp
lret
mov
dec
cmp
push
outsl
xor
add
std
add
daa
and
jle
fmuls
push
jae
rolb
clc
sbb
iret
add
ss
nop
ret
mov
sub
add
push
jnp
and
movsb
mov
pop
js
add
xor
je
outsl
out
jecxz
aaa
dec
cs
icebp
mov
add
cli
sub
pop
aaa
stos
mov
mov
cmp
mov
xchg
aad
add
lds
push
add
push
enter
repz
fcomps
sub
add
xchg
xchg
dec
cmpsl
ret
sbb
or
push
inc
add
xor
add
xchg
or
jge
and
testb
add
adc
testb
dec
sub
jns
jne
out
mov
add
sub
stos
fidivl
pop
dec
lds
add
cltd
mov
call
mov
fldt
push
gs
lea
out
sahf
dec
sbb
lock
addl
add
inc
outsb
add
add
push
outsl
push
add
jge
outsb
test
add
push
pop
int
shll
shl
jns
mov
pop
cmpsl
push
add
in
cmp
cmpsb
mov
mov
je
repz
mov
add
push
mov
idivb
xor
inc
add
popa
mov
jp
cmpsl
push
cltd
cmp
jmp
mov
xchg
pop
mov
adc
std
push
push
add
test
pop
jbe
lods
aad
cmp
stc
mov
and
ljmp
test
dec
sysret
cmp
pop
mov
sti
jl
popf
xchg
popa
mov
jno
repz
add
add
xor
pop
xchg
subl
clc
mov
dec
test
addb
xor
pushf
cmp
mov
adc
imul
outsl
stos
xchg
movb
and
in
jecxz
add
es
mov
or
stc
ret
mov
inc
loope
data16
fsubs
ds
iret
mov
jl
test
add
pop
sub
stc
movsw
sub
add
adc
inc
push
fidivl
icebp
in
push
and
mov
popf
mov
pop
ret
in
lcall
stos
ja
ljmp
adc
or
cmp
imull
mov
cltd
insb
jg
js
test
stos
inc
and
pop
adc
pop
pop
cmp
das
das
pop
in
sub
xor
out
pop
jmp
repz
push
data16
ss
xchg
cmpsl
addb
out
nop
or
push
pop
lcall
cmp
and
lods
stos
pop
popa
pop
lds
and
data16
cmp
dec
mov
sub
jge
add
lahf
mov
xchg
test
xor
cmp
int3
cmp
sub
test
xlat
pop
xchg
jbe
mov
sub
fstpl
push
adc
xchg
daa
jno
sahf
cld
sub
push
in
insb
call
mov
add
pop
mov
js
pushf
mov
mov
test
add
push
mov
inc
add
mov
test
jg
mov
rorl
mov
mov
in
rorl
or
jle
sbb
mov
and
push
pop
adc
xchg
movsl
fisubs
loopne
cli
in
xchg
or
add
xchg
insb
call
stos
repnz
dec
outsl
mov
mov
mov
aam
sbb
testl
lock
addb
mov
out
add
addr16
add
add
xor
or
pop
add
addr16
addb
loop
add
xchg
into
pop
jle
xchg
jbe
or
jno
inc
add
or
push
rcl
xor
sbb
loop
frstor
dec
ds
and
mov
xor
insb
out
xor
jge
push
sbb
add
inc
iret
and
xchg
xchg
outsl
addb
add
loope
add
out
add
xor
jg
outsb
xchg
repz
pop
mov
pop
mov
adc
in
jle
and
cmpsl
sbb
hlt
xlat
mov
cmc
scas
arpl
jo
scas
cmp
stc
lea
movb
mov
xchg
adcl
inc
fwait
in
es
adc
jle
push
sti
test
cld
les
cs
clc
mov
lret
add
mov
mov
cmp
pop
inc
add
sub
add
add
repnz
mov
mov
push
sbb
sbb
add
out
pop
xrelease
stos
mov
aam
outsl
xchg
dec
in
imul
xchg
mov
adc
inc
dec
add
adc
add
popf
pop
loopne
push
xchg
gs
mov
mov
cmp
aas
sbb
mov
push
add
mov
xchg
xlat
call
cltd
enter
push
pop
cmp
scas
into
xchg
aad
mov
and
or
and
pop
outsl
test
push
mov
stc
inc
add
movsl
inc
dec
or
clc
xor
and
jo
mov
fistpll
and
cmpsb
add
aad
mov
pop
mov
and
xchg
sti
hlt
sbb
jne
aam
add
loope
jae
inc
add
add
cmpsl
lock
dec
sbb
jae
or
xchg
push
pop
test
xchg
std
iret
adc
cmp
add
mov
addb
movsl
ret
je
outsb
std
sub
mov
sub
xlat
out
stc
fiadds
pop
push
sbb
pop
out
fdivr
das
mov
out
or
scas
pushf
xor
aas
fs
std
sbb
sub
adc
sbb
dec
int3
xchg
lock
inc
add
xchg
test
aaa
enter
sarl
rcll
sub
add
dec
int
xor
jb
jge
add
addb
mov
repnz
mov
lea
inc
xor
scas
xor
sub
push
xchg
and
add
fisttpll
xchg
movb
and
jl
jmp
adc
push
adc
enter
rcll
add
clc
stos
sub
repnz
cltd
mov
sub
pop
loope
pop
pushf
sub
xchg
jmp
bound
hlt
xchg
sub
add
aad
pop
fwait
xchg
lret
cmp
cmp
das
xchg
push
ss
pop
add
movsl
popa
ret
jge
fcompl
push
insl
lock
jge
inc
add
pop
push
mov
pusha
add
jb
adc
data16
push
xchg
push
inc
dec
shll
test
add
lahf
sbb
movsl
pop
mov
inc
add
mov
movsb
and
add
pmulhuw
xchg
dec
arpl
adc
sbb
push
hlt
cmp
pop
or
daa
jbe
add
mov
jmp
dec
sti
aad
popf
add
or
test
fmulp
shll
les
arpl
sub
int3
sbb
sbb
add
ljmp
xchg
out
xchg
rolb
push
cmpsb
jecxz
and
in
sbb
pop
inc
add
sub
pop
or
pushl
ffreep
xor
push
jl
xchg
jle
push
push
mov
or
jb
mov
and
mov
push
arpl
or
pop
cmp
lcall
decb
dec
pop
loope
add
out
mov
push
mov
adc
and
adc
xchg
sbb
fsubl
insb
adc
push
mov
sub
jne
out
jl
rcrl
insb
jecxz
ds
sbb
add
frndint
movsl
sub
fcompl
push
add
cmpl
mov
addb
mulb
push
lret
push
add
xchg
out
xor
add
inc
stc
and
cmp
repnz
aad
jae
cmp
shlb
icebp
mov
movsb
pop
cmpsl
aam
xor
sub
xchg
sbb
xor
pop
aad
add
jg
mov
mov
leave
test
mov
outsl
cmp
sub
mov
das
js
add
mov
jle
lahf
shll
jae
add
mov
sub
inc
add
add
push
dec
subl
dec
in
or
rcl
xor
lock
cwtl
nop
in
fisubrs
add
adc
pusha
add
cmp
test
mov
mov
fisttpll
push
fists
lcall
add
insb
mov
add
dec
test
das
mov
aas
js
fisttpl
sarl
cmpsl
fmull
pop
or
dec
sbb
push
movb
fcoml
dec
sub
rolb
add
xor
icebp
jbe
or
shr
loope
jb
insl
addb
jp
sub
mov
movl
add
cli
cwtl
push
out
mov
or
jle
mov
push
pop
sbb
fcoms
enter
lds
fidivrs
pop
inc
and
call
jno
mov
fsubrl
dec
add
test
mov
add
add
adc
les
outsb
or
mov
xor
aam
leave
addb
mov
loope
sub
sub
movsb
repnz
gs
inc
add
xor
int3
inc
xchg
out
adc
xor
adc
nop
out
shl
xchg
sbb
pand
imull
lret
xor
addr16
pop
mov
push
aaa
mov
add
repz
sbb
dec
iret
or
test
imul
xchg
test
mov
jae
sub
int
xchg
xchg
xchg
jae
lcall
std
pop
jae
xor
and
and
jle
popf
pop
push
ret
lahf
push
add
stc
mov
cmpsb
test
push
shll
fst
and
sbb
das
ret
cmp
mov
xor
pop
mov
xchg
jbe
mov
jmp
ss
inc
pop
adcl
mov
movsl
dec
hlt
cmpsl
jl
adc
mov
push
add
mov
dec
xor
inc
inc
add
outsb
push
aas
cmp
xchg
pop
xchg
jnp
add
jns
sub
add
out
roll
add
sarl
mov
mov
rorl
pusha
add
or
divl
sbb
outsl
sub
xchg
jae
push
lock
lret
pop
lds
jl
loope
iret
fistps
push
add
push
cs
sub
shr
jge
fcomps
shr
bound
repnz
add
mov
bound
data16
mov
out
mov
sub
fucom
pop
jb
addb
jg
subl
xor
fcompl
mov
test
enter
dec
inc
add
add
mov
push
push
rcll
add
mov
aam
add
add
xor
in
rolb
mov
sti
jns
mov
xchg
imul
fidivl
addr16
divb
repnz
add
test
fsubl
iret
mov
jns
dec
rclb
std
pop
fildl
leave
inc
add
outsl
out
movb
sub
into
pop
test
rolb
test
imul
add
movsb
stos
push
sbb
add
pop
pushf
xor
mov
mov
and
leave
rolb
insb
cwtl
call
inc
add
aam
push
add
cwtl
lahf
inc
push
test
pop
jl
cmpsl
mov
xchg
test
jns
or
mov
xchg
xor
push
pop
pop
ljmp
ljmp
outsb
push
movsl
dec
mov
jmp
mov
pop
fdivrs
jne
sub
sub
inc
add
into
adc
dec
cmpsb
push
cltd
inc
add
mov
push
push
add
pop
sub
mov
xor
imul
cmp
dec
and
add
and
inc
add
pop
andl
and
dec
pop
popf
add
mov
adc
lahf
js
add
xor
aam
jecxz
ljmp
lea
mov
mov
in
jmp
nop
in
xchg
add
mov
or
mov
in
add
call
inc
cltd
std
insb
jecxz
jne
pushf
push
aas
jg
or
mov
pop
mov
cmpl
sub
push
aaa
push
push
fwait
xchg
ret
jns
add
pop
clc
sbb
jle
dec
int
iret
repz
mov
pusha
add
dec
addb
ds
movb
loop
xchg
addb
xchg
pop
addr16
xchg
jbe
push
call
mov
icebp
cmp
jmp
and
sub
fstp
sbb
cmpsl
int
enter
test
push
pop
mov
cmp
fwait
test
icebp
int
cmpsl
ja
xchg
popf
int3
xchg
sub
adc
in
and
xchg
mov
push
movb
imul
aam
mov
shl
cmc
imul
push
xchg
adc
dec
in
xchg
xor
pop
xchg
add
pop
cmp
loopne
ljmp
jmp
pop
add
pop
cmp
jnp
pop
lret
xor
test
ret
rcll
mov
jecxz
xlat
xchg
xchg
out
stos
pushf
mov
pop
mov
pop
cmp
xchg
icebp
bound
je
pop
sarb
call
js
jp
xchg
cmpsl
mov
rol
add
jae
and
cld
outsb
push
fcoml
xchg
outsl
outsl
mov
pushf
outsl
inc
lahf
mov
gs
stos
mov
clc
jbe
add
push
cmp
leave
pop
xor
out
fadds
mov
mov
mov
push
pop
lret
pop
sahf
add
and
push
add
scas
ret
bound
jns
addb
popl
or
push
add
adc
push
cmp
test
les
sarb
push
in
or
sbb
popf
sbb
inc
mov
pop
iret
jmp
ds
mov
add
xchg
inc
add
or
push
mov
adc
fcmovnu
insb
inc
addr16
xor
and
lock
hlt
fdivr
or
enter
pop
test
cmp
enter
test
mov
inc
repz
xchg
repnz
push
jnp
mov
stc
inc
add
mov
pop
stos
xor
push
insb
inc
cmp
dec
mov
sub
loop
lcall
in
aas
fisubs
push
pop
add
jns
call
cmp
dec
sub
inc
enter
out
mov
hlt
lea
mov
adc
sub
mov
adc
jmp
pop
loope
in
ja
js
add
or
fists
push
test
lret
mov
sub
ret
xchg
repz
inc
add
cmp
pop
sbb
mov
repnz
sub
insb
scas
test
jb
in
xor
rolb
add
jmp
or
aad
cmp
jp
mov
and
fiaddl
cmp
add
insb
cmp
add
std
mov
dec
stos
stc
adc
loop
mov
add
lret
cwtl
dec
scas
jne
or
test
and
mov
and
pop
dec
push
and
push
stos
push
dec
and
lcall
push
jecxz
movb
dec
inc
inc
add
push
addb
jl
pop
int3
jno
cmpsb
stc
mov
out
notl
cli
sahf
mov
ss
sbb
add
fwait
sub
push
pop
sarb
scas
xor
insl
addb
add
pop
sar
pop
add
sarl
add
imul
add
pop
adc
cmp
xchg
push
rorb
cwtl
mov
lods
lods
je
stc
adc
add
in
popf
ja
or
scas
dec
dec
js
dec
scas
addl
jns
out
out
loop
add
lods
mov
mov
add
js
sahf
movb
stos
in
pop
xchg
mov
and
stc
mov
into
xchg
cmp
jae
push
pop
movb
inc
add
add
adc
popa
cmpsb
fbld
inc
add
sub
jne
fbld
jae
dec
ja
sbb
je
and
and
out
lcall
mov
aam
les
imul
jp
popf
sahf
mov
cmp
mov
dec
fbstp
inc
add
ds
out
test
outsb
pavgw
fldl
or
int
and
pusha
add
insl
stc
divb
or
and
mov
cmp
stc
enter
dec
mul
les
in
inc
add
adc
jae
sbb
add
add
aas
jb
or
xchg
ror
pushl
addb
lock
mov
add
mov
cmp
cmpl
sub
cmp
dec
and
push
lods
mov
test
jp
inc
mov
push
fists
hlt
add
add
lock
lcall
ss
add
adc
mov
leave
fisubrs
scas
mov
imull
cwtl
test
lock
lea
and
mov
hlt
push
xchg
mov
xor
sub
sbb
and
inc
add
add
leave
or
add
mov
adc
adc
dec
out
clc
mov
mov
call
lock
mov
pop
test
mov
scas
arpl
ja
cmp
jp
xor
cmp
pop
leave
cld
add
pop
cltd
stos
pop
les
test
jl
adc
bound
stos
push
adc
fldl
pop
xchg
add
gs
rolb
pushf
out
xlat
insl
fisttpl
sti
cmp
jecxz
add
in
push
adc
add
stos
push
cmpsl
push
and
leave
loope
push
lds
mov
mov
add
popl
mov
movsb
stos
arpl
cmp
sahf
mov
inc
add
add
dec
andl
jbe
clc
iret
cmpsb
shll
add
js
fisttpll
or
mov
dec
fimull
lods
xchg
gs
xchg
mov
out
popf
cmpl
sbb
add
jbe
outsb
add
push
and
icebp
push
addb
jne
add
cli
pop
fistpll
adc
in
pusha
add
xchg
add
addb
mov
xor
insl
rolb
pusha
add
lahf
mov
rolb
inc
flds
xchg
or
cmc
and
rcll
push
or
test
icebp
imul
stos
iret
popf
in
sti
jo
cmp
rol
add
es
inc
add
jmp
push
jbe
xchg
addb
add
fidivrl
nop
add
mov
push
inc
add
minps
lods
mov
mov
xchg
or
inc
add
add
xor
fcoms
lds
aas
scas
leave
or
movzbl
loopne
and
xchg
or
rolb
imul
push
adc
dec
fisttpll
cmp
mov
xchg
xchg
dec
fldenv
rorb
idivl
into
imulb
sub
movsb
movsb
fiaddl
mov
pop
outsl
or
add
xor
dec
pop
testl
push
sahf
push
aam
fistpl
addr16
sub
mov
loopne
xchg
add
add
mov
sbb
sbbl
mov
push
sub
lds
in
adc
fstl
enter
push
adc
hlt
out
jae
inc
pop
add
mov
mov
adc
jl
test
jge
add
add
jno
repnz
dec
in
lcall
mov
pop
sti
xor
pushf
jecxz
sbbl
roll
ja
jbe
outsb
daa
cmp
mov
fmul
cmp
hlt
mov
ljmp
js
test
push
push
dec
mov
dec
das
push
sub
inc
inc
jg
fisubrl
dec
in
jmp
lahf
add
outsb
mov
insl
popf
mov
xor
mov
mov
mov
daa
fisubl
jbe
daa
sub
xchg
xor
xchg
lcall
gs
push
test
jp
mov
loopne
add
test
fimuls
and
fiadds
lahf
xchg
fistpll
or
sbb
jnp
int
add
lock
sub
aad
jnp
out
sbb
cwtl
and
cmpsb
add
stos
ss
xchg
push
popf
testb
jns
pop
iret
fnstenv
test
add
and
pop
mov
sbb
dec
popl
jge
add
and
orl
xor
mov
adc
push
add
push
lds
les
in
loope
push
mov
into
cmp
movsl
cwtl
movb
lahf
lock
test
aas
insb
rol
dec
aad
mov
inc
add
icebp
scas
or
fs
lret
mov
je
add
sbb
sbb
addb
dec
mov
xchg
stos
mov
call
add
push
cmp
inc
add
cmp
push
mov
xchg
cmp
pushf
fisubrl
testb
fsubp
fisubrs
add
movsl
std
test
dec
test
rcrl
add
jb
push
pop
inc
add
pop
ljmp
scas
xor
mov
into
mov
sahf
sub
adc
fcmovnb
add
sub
ss
xchg
dec
cltd
push
pusha
add
in
adc
mov
insl
push
add
push
ljmp
sub
cs
pop
sbb
jmp
inc
add
add
add
and
dec
popf
inc
repnz
cmp
popa
pop
jg
mov
movb
inc
add
addb
in
sub
lds
add
fwait
adc
sub
ret
out
dec
repz
addb
mov
push
fdivrl
dec
ret
jnp
add
in
or
adc
push
and
rolb
daa
dec
mov
push
repnz
pop
push
es
add
ja
imul
imul
jecxz
cmp
popf
clc
jae
pop
pop
rolb
mov
xor
cmp
jnp
sub
add
in
sub
fcoms
sbb
push
add
jmp
mov
aas
jecxz
mov
jns
jg
dec
insb
jmp
add
outsb
cmp
call
mov
lcall
es
jo
es
fwait
mov
pop
in
xchg
inc
add
or
test
push
add
jg
mov
add
add
push
cmp
dec
addb
mov
pop
sti
daa
mov
push
decb
fidivrl
dec
mov
or
xchg
movsb
test
cmp
xchg
in
test
imul
fimull
and
mov
loope
sti
push
addb
icebp
cwtl
cwtl
mov
dec
jecxz
add
sbb
lret
out
push
sub
lcall
inc
add
in
sarb
mov
cmp
pop
inc
add
lcall
jge
sub
fimuls
sub
xlat
and
ds
sbb
mov
rcrb
push
add
xor
sbb
hlt
mov
dec
lret
addl
push
inc
add
pop
dec
push
cld
in
fucomip
fcompl
push
ljmp
xchg
imul
mov
sub
jnp
and
in
hlt
out
jecxz
dec
mov
mov
cmp
or
add
lock
insb
imul
jle
and
fcoml
mov
and
pop
fstl
mov
mov
jle
in
mov
lcall
test
mov
popf
lds
rcr
pop
mov
mov
jns
loope
mov
lods
mov
add
ficompl
push
and
lea
mov
mov
add
sbb
jmp
ja
sbb
inc
fistpll
cmpsl
pop
cmpl
pop
cmp
dec
sti
cmp
in
push
jo
out
pop
xor
pop
fcoms
add
pop
adc
lea
pushf
ficoml
rcll
mov
xchg
xchg
dec
loop
jge
clc
addb
lahf
pop
push
mov
rclb
add
in
add
jg
mov
fisttpl
push
cmp
jns
addr16
mov
add
sub
jmp
sbb
jne
mov
js
add
addb
aas
pop
mov
fiaddl
add
xor
add
mov
dec
sbb
sub
aas
push
pop
mov
cmp
jecxz
popf
xchg
or
pop
add
popa
and
add
push
mov
in
fwait
mov
call
add
imul
negl
push
les
out
add
add
addb
xor
repnz
hlt
mov
cmp
stc
ret
fs
mov
sbb
add
add
mov
push
mov
add
imul
in
dec
adc
inc
jmp
in
inc
movsb
mov
inc
sti
popf
sti
cwtl
imul
add
pop
mov
into
or
jnp
icebp
jnp
add
lock
jne
mov
add
imul
movl
scas
aad
or
xlat
stos
popf
sub
pop
adc
test
addb
dec
cmp
ss
ficomps
add
pop
je
inc
add
push
mov
sub
pop
pop
mov
jno
xor
push
mov
xor
jnp
xchg
int3
inc
out
js
push
add
sbb
les
mov
inc
sti
push
sub
sti
mov
cwtl
pushf
adc
ret
jo
cmc
das
leave
cmp
mov
pop
stc
lahf
inc
and
lds
or
and
enter
mov
ja
out
das
add
fbstp
lock
or
cltd
add
aaa
loope
add
adc
imul
popf
mov
bound
sbb
add
jb
mov
fsubp
pop
leave
xchg
or
adc
pusha
add
add
push
ds
fstpt
xor
fdivrs
imul
lock
in
pop
push
cmpsl
and
or
aad
fwait
mov
lcall
jne
add
pop
inc
add
add
jns
pop
roll
add
add
push
mov
or
mov
shrl
jmp
cmpsl
adc
das
cltd
and
push
ss
imul
jge
pop
jo
sub
inc
add
inc
add
sbb
loope
mov
sti
mov
fcmovu
test
add
ret
add
mov
push
out
and
aad
mov
jle
push
imul
ret
lahf
insb
sbb
out
andl
ds
add
jg
aaa
jb
out
mov
push
pusha
add
inc
add
scas
sbb
jne
das
push
and
push
mov
mov
imul
loope
aaa
push
cmp
dec
lahf
jmp
add
flds
lods
pop
rcrb
addb
and
add
pop
not
sbb
inc
add
sub
add
add
ljmp
out
xchg
mov
add
cmp
bound
xchg
test
push
rclb
loopne
lock
ja
ficomps
add
mov
das
cmp
loopne
insl
cmp
lcall
mov
repnz
cmp
jge
or
repz
mov
lea
imul
icebp
lahf
xor
fdivrs
dec
out
xor
xor
add
scas
mov
mov
loopne
shl
ja
lret
pop
inc
add
inc
movsl
roll
outsl
fidivrl
xor
and
mov
fwait
inc
add
out
mov
or
xchg
dec
das
mov
dec
mov
scas
stos
fyl2x
dec
xor
sbb
mov
mov
sub
adc
sbb
pop
dec
jbe
adc
mov
into
and
lahf
imulb
mov
xor
stos
into
imul
cltd
or
push
xchg
pop
mov
or
aas
push
dec
jne
mov
ret
add
cmc
sahf
push
and
shr
xchg
xchg
lds
lock
lret
mov
jbe
jae
in
cmp
mov
push
pop
inc
add
push
jecxz
aam
xlat
fmul
jo
add
stos
mov
bound
sahf
fistpll
rcrb
lcall
lods
in
mov
add
cmpsl
jmp
repnz
mov
iret
pop
xchg
pusha
add
in
fidivl
shr
adc
sub
xchg
push
or
xor
inc
add
test
gs
jo
mov
mov
hlt
jno
inc
add
notb
ds
cmc
xor
pop
pop
xchg
inc
add
pop
push
mov
add
push
iret
push
mov
int3
pop
shl
cmp
cmp
dec
xchg
repnz
stc
lods
jp
and
sub
js
jp
cld
in
daa
inc
fcoml
add
js
or
sbb
pushf
sub
ja
sbb
mov
mov
xchg
add
mov
cmp
or
jge
sbb
push
pop
mov
sub
sbb
add
bound
dec
std
aas
pop
push
adc
leave
jae
push
xor
fwait
jne
sti
repz
scas
mov
movb
add
aaa
imul
push
push
push
movsbl
pop
andl
daa
sarb
jmp
inc
add
add
jp
push
sbb
pusha
add
push
mov
jnp
push
lods
mov
cmpsb
psubb
repz
rorl
sahf
clc
fisttpl
subl
mov
push
shll
cltd
cmp
imul
add
sbb
aas
push
divb
loopne
jae
js
sub
imul
dec
fmull
and
adc
leave
lock
adc
insl
add
xchg
lock
xchg
sbb
xor
test
ret
xor
fbstp
add
add
jecxz
add
jl
mov
movsb
lcall
ja
ja
popa
pop
lds
sti
or
sbb
xchg
insl
mov
lahf
lcall
call
fst
push
dec
push
cmp
lahf
mov
mov
andl
icebp
iret
aad
inc
jg
mov
cmpsl
clc
jae
jp
jb
rorl
outsl
into
jp
js
sbb
add
popf
and
pop
int3
or
shl
xchg
pushf
push
daa
jmp
mov
push
sbb
pop
enter
add
leave
xor
inc
add
push
jnp
add
jge
add
lcall
jns
jmp
addb
mov
adc
pop
ficompl
add
rcr
push
movsl
lds
jns
cmpl
inc
add
mov
dec
adc
cli
lods
ds
add
xchg
mov
movb
push
outsl
insb
in
or
pusha
add
mov
sti
push
sub
into
cmp
les
cli
pushf
xor
stos
das
jge
add
adc
add
insb
movb
mov
mov
movsb
outsb
lretw
arpl
fcmovne
iret
decb
jmp
or
lcall
pop
dec
sbb
pushf
add
popa
stos
sub
pop
rcrl
dec
jp
sbb
inc
add
and
add
xchg
lods
int3
int3
loopne
cmp
mov
arpl
or
jb
pusha
add
mov
xchg
frstor
ds
sahf
jb
sahf
repnz
rcl
cmp
add
jns
add
xchg
xlat
add
mov
shll
jge
dec
test
push
das
push
stc
add
mov
fmuls
push
add
inc
add
mov
mov
dec
dec
mov
push
test
jae
xor
imul
mov
movsl
adc
fidivs
xor
inc
stc
dec
cltd
std
mov
mov
repz
add
dec
pop
xor
mov
pop
rcll
call
add
mov
bound
xchg
and
inc
and
lret
fcomi
and
add
and
pop
ret
std
xor
add
jns
addb
mov
adc
lret
scas
shl
ss
add
mov
outsb
into
fcmove
inc
stos
jecxz
jae,pn
fmulp
jns
shrl
out
sbb
fcmovnbe
push
addb
lock
fldcw
int
mov
dec
mov
and
sbb
xor
xor
add
jp,pt
notb
mov
mov
ja
adc
add
aad
cmp
dec
test
add
popa
std
mov
ret
pop
popf
lock
add
call
add
sbb
add
fwait
sahf
stos
lret
out
cwtl
setg
lods
jp
cmp
shlb
add
rolb
sub
adc
add
sbbl
sbb
jnp
divb
add
jne
and
add
mov
or
push
sub
add
aaa
pop
dec
inc
add
aas
out
loope
lahf
roll
add
test
arpl
mov
inc
add
gs
or
dec
and
mov
jge
lock
add
imul
mov
jle
loop
je
sbb
cmpsl
xor
pop
fadds
cs
xor
pop
add
lods
sub
outsl
push
dec
negl
xchg
out
xchg
mov
push
add
outsb
aas
fs
cmp
mov
mov
jmp
xchg
jecxz
mov
stos
mov
xchg
cmp
sbb
pusha
add
add
mov
in
mov
or
pop
imul
fistps
xor
and
lret
add
fs
sarb
adc
popa
pop
into
pusha
add
xor
mov
test
test
int
and
push
adc
jae
shl
rolb
leave
jae
inc
add
insb
xor
call
jmp
popa
rcrl
adc
enter
lods
adc
cmp
sub
add
fstps
and
dec
shll
xchg
push
pop
addb
cmc
stos
addb
add
add
stc
std
fdivrl
sti
adc
pushf
lock
call
jb
push
add
popf
mov
mull
cmp
xchg
fcompl
int3
xchg
movb
aaa
push
inc
movsl
shl
enter
aam
call
pop
adc
ret
imul
and
pop
cmp
pop
ret
cwtl
jbe
popa
add
leave
or
jnp
add
insb
enter
ret
nop
pop
sub
out
btc
or
lds
jb
jne
push
mov
lret
in
add
jle
jmp
scas
lret
mov
mov
jl
or
xchg
loopne
lock
in
add
sbb
xlat
stos
pushf
mov
inc
add
pop
adc
add
add
in
pop
imul
movb
xchg
out
mov
xor
jecxz
cmp
shlb
fsts
jno
aaa
inc
xor
stos
pop
mov
inc
mov
push
add
nop
mov
jecxz
shl
les
jmp
add
cwtl
mov
cltd
push
pop
int3
add
ja
jmp
ds
lahf
pusha
add
push
inc
add
inc
xchg
xchg
movsb
insb
sub
out
lcall
push
int3
and
pop
sub
jp
fimull
cmp
pop
dec
in
sarl
mov
mov
mov
or
xor
stc
dec
sub
cmp
mov
fcoms
add
jae
xor
call
icebp
aad
adc
test
incb
add
ljmp
data16
push
push
jne
add
mov
xchg
xchg
push
je
jmp
les
mov
jae
pop
xchg
xchg
jo
mov
push
sbb
sbb
scas
cmp
inc
add
cmc
adc
mov
popa
pop
cmc
xor
add
outsb
in
jno
cmovs
or
or
insl
push
add
and
dec
test
movsl
adc
push
inc
add
decl
pop
insl
push
xor
fisttps
cli
jg
dec
cmpsb
and
dec
xlat
sub
add
cli
jle
xchg
icebp
mov
xchg
xorl
fs
fstps
sbb
inc
add
mov
mov
sub
insb
mov
sub
mov
push
mov
test
sub
add
mov
mov
add
add
mov
add
dec
adc
cltd
cmp
insb
addb
inc
out
cmp
xchg
rorl
popf
sub
add
enter
xchg
and
dec
ja
and
adc
adc
stos
jmp
cmp
loop
pop
pop
repz
add
add
jae
mov
sub
xchg
push
and
mov
mov
test
cmc
inc
add
push
sbb
jmp
sahf
aam
xchg
cli
push
pop
ret
add
jmp
imul
jecxz
cmc
out
sub
fiaddl
or
add
and
add
jno
jmp
jge
mov
mov
mov
dec
sti
dec
inc
or
jns
inc
add
dec
les
rolb
cmp
or
ss
int3
jge
test
cltd
test
pop
sub
hlt
es
out
repnz
ficoml
loope
inc
shrb
add
pop
xlat
in
add
xchg
fadds
fisttpl
ja
lds
push
xchg
movsb
adc
pusha
add
mov
sti
push
bound
mov
imul
xor
stc
loop
outsb
xor
mov
xor
incb
add
in
push
xor
or
pop
fcomp
in
jl
fldt
les
and
add
mov
insl
sahf
lea
je
fs
lods
jl
cmp
add
lock
dec
fwait
push
add
mov
lcall
dec
in
xchg
in
mov
aaa
inc
jle
mov
and
lea
add
nop
pushf
xchg
cmpsl
add
add
pusha
add
xor
mov
fdivr
addr16
and
sbbl
shrl
cld
sti
jnp
daa
mov
xor
mov
add
add
lahf
lret
pushf
adc
seta
and
call
mov
lods
adc
add
daa
lds
ljmp
xchg
xor
cs
mov
inc
aam
cwtl
jg
testb
ret
jns
jp
and
addb
mov
shll
popf
xor
addb
hlt
xor
loop
add
add
out
sbb
inc
add
mov
inc
mov
dec
push
xchg
xchg
mov
loopne
sbb
and
insl
lahf
pop
pop
lock
ret
sub
pop
rolb
in
adcl
mov
xrelease
bound
js
add
add
or
aad
inc
and
jl
xchg
fdiv
cmp
xchg
add
cmp
outsb
dec
movsb
jne
xor
dec
addr16
mov
repz
adc
sub
mov
ret
icebp
xchg
cmpsb
test
add
or
movb
add
andl
ljmp
xchg
je
icebp
outsl
cmp
sbb
jp
xchg
cmpsl
jecxz
ds
mov
mov
jmp
aad
mov
push
sub
and
mov
mov
scas
add
leave
jnp
and
jae
dec
mov
dec
repz
mov
movsb
xlat
loopne
dec
inc
into
lahf
push
adc
in
scas
rorl
push
ds
popf
push
in
insl
adc
loopne
leave
inc
add
mov
jg
popf
push
add
addb
xchg
das
mov
rorb
loopne
nop
dec
addr16
and
fildl
repz
or
insb
and
outsb
aam
mov
das
sub
jg
gs
mov
sti
mov
pop
int
xchg
and
arpl
sbb
loopne
insb
stos
push
push
mov
add
mov
jne
ljmp
inc
add
aaa
das
testb
cmpsl
inc
add
inc
ss
jl
and
add
lock
jo
add
test
dec
jecxz
xchg
ss
dec
lcall
xlat
mov
jae
adc
insl
bound
mov
popf
xchg
mov
mov
mov
pusha
add
add
or
sub
or
pop
mov
add
jg
out
fldenv
mov
cmc
pop
stos
lock
add
dec
sarl
js
xor
dec
clc
insl
xchg
adc
sbb
test
lea
xor
sub
add
add
test
push
adc
push
fdiv
rcrl
add
inc
cmp
add
sbb
dec
lahf
fdivrl
mov
arpl
cmp
add
add
add
add
inc
add
movl
fcomip
movsl
pushl
add
sub
sbb
inc
add
or
cmpsb
fwait
pop
testb
movsb
jne
call
pop
call
add
mov
and
add
in
popf
pop
add
pop
mov
outsb
in
mov
and
jle
sahf
addb
xor
inc
add
imul
jbe
add
adc
mov
mov
mov
shl
dec
scas
rol
add
cli
jb
mov
add
jo
mov
jne
or
jno
out
jp
lds
jmp
pop
lcall
xchg
xchg
rolb
mov
or
ret
out
xchg
inc
add
jae
mov
add
lods
movb
scas
subl
out
xor
aas
and
jno
jge
jg
add
outsb
xchg
dec
das
in
mov
aaa
fs
fmuls
ljmp
bound
jp
mov
mov
and
mov
inc
add
je
jp
in
loopne
cwtl
in
jg
out
add
push
jle
negl
arpl
adc
aam
sub
into
mov
xchg
lcall
push
nop
cmp
or
test
xchg
jp
adc
xchg
hlt
cmpsl
pop
cmp
out
cmpsb
xchg
inc
add
imul
add
test
cmp
xor
in
pop
in
cmp
cs
mov
mov
stc
dec
push
call
sub
inc
outsb
xchg
in
or
repz
fmuls
sahf
mov
jne
adc
imul
repnz
push
add
imul
mov
or
and
add
jns
and
add
sbb
and
mov
lret
mov
mov
sub
and
add
mov
dec
mov
jl
lds
jecxz
mov
adcl
cmpsl
out
sbb
in
cmp
xor
xchg
iret
push
push
stc
test
int3
and
jnp
cmp
lds
lcall
fstl
add
pusha
add
out
and
or
jp
adc
adc
ret
add
stos
addr16
sbb
pusha
add
push
add
inc
aad
add
push
cmc
pop
xor
mov
pop
out
cmc
addb
les
test
test
addr16
in
adc
std
das
jmp
in
push
lret
cs
add
cmp
sbb
shl
decb
inc
add
xrelease
mov
jb
loope
add
pop
push
nop
jecxz
dec
repnz
fwait
sahf
shlb
cmp
jno
xchg
cli
mov
sbb
frstor
push
pop
mov
jb
push
leave
inc
add
rol
jne
pop
imul
sbb
add
add
cmp
cmpsl
fwait
and
xchg
aas
out
mov
mov
daa
inc
add
xor
mov
sti
out
and
adc
inc
add
stc
mov
das
insb
divb
dec
repz
aad
fisttps
push
or
je
loopne
xchg
xchg
dec
das
jnp
jns
aas
jb
scas
pop
xor
or
pop
mov
in
jnp
cwtl
dec
into
pop
movsb
mov
fiadds
add
add
mov
outsl
imul
pop
xchg
sub
push
pop
xor
or
in
xor
add
addr16
addb
xlat
movsl
test
and
mov
add
popf
or
inc
and
adc
out
int3
lret
aaa
cmp
jle
push
fcomp
frstor
enter
loop
pop
icebp
movsb
fadds
add
mov
rorl
aaa
jge
in
out
imul
add
ret
movb
dec
push
loope
das
addr16
aas
xchg
into
mov
mov
lcall
xchg
sbb
fs
enter
shr
gs
enter
push
xchg
arpl
out
fldl
jb
add
sbb
int3
movsl
rcr
mov
jmp
push
push
hlt
inc
repnz
dec
je
xor
jl
aaa
daa
sub
icebp
mov
sub
jns
push
mov
add
aaa
mov
mov
pop
jl
stc
push
pop
fnsave
inc
mov
pop
test
bound
clc
jge
outsl
js
gs
add
xor
mov
dec
mov
sub
mov
xlat
xor
add
std
add
out
or
lret
cs
xor
popf
sub
or
sti
dec
std
sbb
ret
jns
ror
add
aad
ficoms
pop
push
xchg
cmp
xor
inc
sbb
negb
sarl
cwtl
push
xchg
and
push
pop
nop
ret
add
xchg
xchg
jae
out
jle
xlat
xchg
pop
inc
add
add
pushf
out
ljmp
add
add
push
push
add
add
inc
add
pop
in
xchg
test
add
sub
add
add
adc
add
insb
xor
into
fwait
pop
shrl
sbb
mov
dec
jmp
sbbl
xor
cwtl
fdivl
xchg
rcrl
mov
sub
cmp
push
nop
xor
inc
mov
add
add
loope
add
add
push
mov
and
jno
inc
mov
push
inc
call
push
mov
testl
fcoml
movsb
xor
mov
out
cmc
xchg
cltd
mov
mov
sbb
dec
or
xor
enter
loop
mov
push
fcmovnu
sbb
scas
push
jp
ljmp
ja
fwait
mov
xor
add
lods
in
or
pop
or
inc
add
add
aas
scas
fcom
add
push
dec
pop
xor
mov
bound
cwtl
adc
sub
out
cmc
inc
adc
mov
xor
pop
jbe
sahf
or
jl
fdivrl
xchg
jns
testb
cmp
jno
jo
mov
stos
push
add
add
adc
mov
inc
add
sahf
push
pop
lea
cmp
jnp
and
and
clc
scas
cld
arpl
addr16
mov
dec
out
cmp
inc
add
adc
movsb
xchg
add
loope
decb
in
lcall
aam
mov
add
push
das
sbb
sbb
add
mov
adc
add
or
in
push
adc
inc
int
dec
add
stos
push
dec
push
mov
popa
sti
sbb
scas
inc
add
fcmovb
stos
fmuls
xor
imul
mov
jg
push
cwtl
es
or
jno
or
addb
cmpsb
or
bound
call
mov
cld
jns
xor
stc
jge
mov
sahf
cmp
dec
dec
jle
mov
add
mov
adcl
adc
loope
rcl
js
push
add
mov
ja
out
out
in
ljmp
les
pop
enter
add
test
add
lods
gs
jge
jl
sbb
addb
or
rolb
imul
lds
mov
add
dec
pop
insb
pop
sub
imul
fdivrp
jmp
notl
sub
or
insl
rdmsr
cli
or
add
mov
pop
mov
lahf
xor
lea
add
push
adc
imull
mov
sbb
cmpsl
mov
inc
add
ds
push
jne
cmp
cmpsb
xor
out
pop
scas
in
xor
xor
add
pop
in
mov
je
add
ds
nop
dec
addb
inc
add
pop
push
add
mov
and
int3
cs
mov
data16
cmpsl
addl
addl
repz
jns
mov
and
xor
jp
sbb
xchg
pushf
jno
jecxz
inc
xor
frstor
rolb
add
xorl
cs
in
clc
adc
add
popf
add
xchg
mov
hlt
sub
sbb
push
jecxz
loopne
imul
popa
das
xchg
out
sub
loope
data16
mov
lret
cmp
ss
lret
cmp
pop
pop
xor
add
jne
sub
or
pushf
repz
pop
dec
mov
sub
add
adc
add
mov
push
jg
lea
cmp
xor
and
movsb
sub
aam
push
ret
cs
pop
pop
lods
movb
bound
or
outsb
inc
lds
fiadds
add
imul
fsubr
add
popa
loopne
dec
imul
inc
add
jl
sub
lods
imul
dec
test
scas
sbb
xchg
inc
add
fldl
add
out
adc
dec
cmp
add
mov
xor
mov
sub
add
cltd
std
pop
mov
sub
scas
iret
cmp
iret
outsl
xchg
cmpsb
sub
add
push
adc
adc
mov
xor
cmp
push
addb
movsb
ret
aaa
xor
jnp
add
sbb
inc
add
xor
xor
add
and
mov
mov
push
adc
insb
sub
mov
jne
sarl
add
arpl
or
xor
add
xor
cmp
cmp
incl
add
mulb
add
add
xor
loopne
add
insb
lea
adc
sub
push
mov
mov
test
and
sar
sbb
pop
inc
pushf
add
push
icebp
push
or
aas
cld
nop
shll
add
sbb
add
ss
sahf
cs
fidivrl
call
and
pop
or
sub
sub
lret
sub
mov
push
fsubrs
fcmovnbe
sbb
mov
in
js
test
mov
add
jnp
mov
add
push
lods
lods
jmp
jmp
addr16
cld
insl
xor
out
loopne
push
rolb
lods
nop
sub
cs
dec
adc
add
fmuls
xor
ret
inc
outsb
inc
mov
fwait
enter
mov
dec
lret
fisubl
add
mov
js
inc
cmpsl
jp
push
cmp
mov
mov
sub
xor
add
repz
lods
mov
into
or
ljmp
dec
not
xor
adcl
fs
add
or
sti
mov
inc
jge
mov
cmp
jns
insb
or
push
mov
ds
pop
mov
mov
sub
adc
imul
push
mov
stos
hlt
xor
inc
movsl
mov
addr16
ret
fldcw
cmc
mov
loop
mov
outsb
or
std
cld
xor
imul
cli
mov
sahf
lret
movsb
shll
jb
inc
add
add
push
stc
dec
sbb
js
jb
inc
add
dec
maskmovq
mull
jge
lcall
add
fiaddl
jp
xchg
pop
pop
testb
and
out
xchg
cld
inc
add
nop
pop
xchg
sub
adc
ljmp
push
loope
add
jno
sub
mov
sub
je
roll
add
rcll
lcall
fnstcw
sahf
pop
in
pop
push
addb
xchg
test
jbe
add
test
add
subl
bound
mov
push
lea
not
push
dec
mov
or
add
push
roll
ffree
xchg
or
daa
mov
mov
addb
and
dec
pop
jge
fldl
add
aad
sahf
fstl
jb
cmpsl
add
arpl
sti
mov
add
add
test
add
sahf
jecxz
or
mov
bound
fcom
mov
lds
in
and
arpl
sub
add
sub
inc
add
addb
and
mov
lret
sbb
sub
push
fiaddl
loope
lds
cwtl
movsb
cmp
jg
lcall
mov
mov
cwtl
cmpsb
loope
lds
scas
cwtl
test
add
out
jns
aaa
xchg
cmp
add
cmpsb
jmp
jnp
loopne
xor
adc
roll
ret
mov
in
shlb
mov
add
addb
fcomp
addl
sar
rcr
inc
add
or
sbb
dec
dec
jmp
jmp
rolb
ja
jmp
mul
or
add
sub
add
sub
mov
xlat
cld
or
and
popa
lods
jno
inc
add
dec
push
xchg
sarl
sbb
mov
and
adc
mov
scas
adc
enter
cwtl
jecxz
xorl
lea
hlt
test
adc
add
dec
repz
xchg
inc
pop
push
jmp
jg
jbe
and
sar
ljmp
movsl
scas
push
dec
inc
dec
add
out
xor
jb
jb
or
add
dec
aad
scas
dec
push
aad
cld
jnp
cwtl
add
int
xchg
mov
add
jl
dec
inc
int
or
inc
add
pop
pop
movsl
movb
push
add
sub
xchg
mov
add
add
add
jle
jle
cli
xor
add
mov
dec
cwtl
dec
add
sti
insb
movsb
cmpsb
int3
cmp
lea
dec
mov
aam
aad
inc
pop
lret
pop
push
cli
fs
jecxz
stos
sbb
mov
push
pop
push
mov
repz
enter
aad
cltd
mov
and
mov
add
jp
movzwl
stos
in
and
int3
mov
mov
xchg
jmp
addl
add
push
cmp
in
stos
mov
pop
ljmp
scas
mov
mov
insb
inc
xchg
jge
and
mov
adc
in
fsqrt
mov
add
lods
das
pop
jbe
sbb
mov
or
cli
stos
push
imul
add
mov
add
xlat
or
mov
scas
mov
mov
mov
les
inc
ja
cmc
movsb
nop
dec
lahf
pushl
sarl
lret
add
les
out
cmpsl
sub
je
mov
pop
movsl
or
outsl
mov
and
or
fnstsw
xchg
jle
enter
ds
lods
jge
xchg
xchg
sbb
loope
imulb
sti
fnstcw
sti
inc
iret
adc
inc
inc
outsl
jg
js
xor
call
add
lods
test
push
addb
jge
fisttpll
xchg
cs
mov
push
pop
dec
lods
push
fdivl
lds
mov
adc
stc
lret
and
popa
dec
mov
mov
push
std
sti
pop
xor
push
pop
push
inc
add
push
in
sub
nop
mull
pop
rolb
add
addb
add
fldenv
cmpsl
in
and
lock
xchg
cmp
mov
aad
cmpsb
inc
add
fmull
les
or
pop
jbe
add
sbb
lret
insl
mov
ljmp
push
jge
int
loope
jecxz
ds
ljmp
aaa
fistl
sub
xor
cltd
dec
pop
addr16
out
pushf
stc
xor
pop
mov
add
nop
cltd
xor
cs
jae
addb
mov
add
arpl
or
test
xor
dec
loop
mov
pop
or
mov
inc
add
call
push
pop
mov
push
mov
pop
sbbl
repz
push
ror
sbb
adc
add
popf
call
xor
addb
add
add
aas
dec
test
test
out
dec
jns
jg
add
pop
add
cmp
xor
mov
mov
xchg
and
push
idivl
lock
aam
pusha
add
in
leave
orl
or
inc
add
cltd
out
int
xchg
mov
push
insb
add
cltd
insb
xchg
insl
xor
bound
outsl
mov
add
shlb
out
or
out
aam
in
int3
movaps
repz
fildll
cltd
addr16
iret
push
icebp
or
sti
stos
cmp
lret
jo
daa
stos
adc
sub
clc
push
adc
xor
sbb
insb
push
sbb
hlt
push
push
fdivp
les
mov
adc
cmc
dec
fisttpl
mov
clc
mov
call
frstor
jnp
add
nop
pop
and
mov
inc
add
andl
mov
int3
pop
lret
cs
pusha
add
popa
aaa
insb
add
sub
push
repz
add
fdivp
push
and
leave
addr16
shrl
shll
jo
