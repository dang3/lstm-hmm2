add
or
or
add
or
add
or
or
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
or
or
add
add
add
or
add
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
or
add
or
add
add
add
add
add
add
add
add
add
add
or
or
or
add
or
add
or
add
or
add
or
or
or
add
or
add
or
add
or
add
add
add
add
or
or
or
or
or
or
add
or
add
or
add
add
add
add
or
add
add
or
add
add
add
or
add
or
add
add
add
or
or
add
add
add
or
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
or
or
add
add
add
add
add
add
or
add
add
add
or
add
add
or
add
add
or
or
add
or
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
or
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
or
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
or
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
or
or
add
or
add
add
add
or
add
or
add
or
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
or
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
or
add
add
add
or
add
or
add
add
add
add
add
add
or
or
add
or
add
or
add
add
add
add
add
or
or
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
or
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
or
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
add
or
add
add
add
add
add
or
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
or
or
add
or
add
or
add
add
or
or
add
add
add
add
add
add
add
or
or
or
or
add
or
add
add
add
add
or
add
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
or
or
add
add
add
add
or
add
add
add
or
or
or
add
or
add
add
or
add
add
add
add
or
or
add
add
add
add
or
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
or
add
or
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
or
or
or
add
add
or
or
or
add
add
add
or
add
or
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
or
add
add
add
add
add
add
add
add
or
or
add
or
or
or
add
or
add
add
or
add
add
add
or
add
add
or
add
add
add
or
add
add
add
or
or
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
or
or
add
add
or
add
add
or
add
add
add
add
add
add
add
or
add
or
add
or
or
or
add
or
or
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
or
add
or
add
add
or
add
or
add
add
add
add
or
or
or
add
or
or
add
add
or
add
or
or
add
or
add
add
add
add
add
add
or
or
or
add
add
add
or
add
or
add
add
add
add
add
add
or
or
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
or
or
add
add
or
add
or
add
add
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
add
or
add
or
add
add
add
or
add
add
or
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
or
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
or
add
add
add
add
add
or
add
or
or
or
add
or
add
add
add
add
or
add
or
add
or
add
add
or
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
or
or
add
or
add
add
add
or
add
or
or
add
add
or
add
or
or
or
add
or
add
or
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
or
or
add
or
or
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
or
add
add
or
or
or
or
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
or
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
or
or
add
add
add
or
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
add
add
or
or
or
add
add
or
or
add
or
add
or
or
or
or
add
or
add
or
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
or
or
or
or
add
add
add
add
or
add
or
add
or
add
add
add
or
or
add
add
add
add
or
add
or
or
add
add
or
or
add
add
or
add
or
add
or
add
add
or
add
add
add
add
or
add
add
add
or
add
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
or
or
or
add
add
or
or
add
add
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
or
or
add
add
add
add
or
add
add
add
or
add
add
or
add
add
add
or
or
add
or
add
add
or
add
add
or
add
or
add
add
or
or
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
add
or
or
add
add
or
add
add
or
add
or
or
add
or
add
add
add
or
add
or
add
or
or
add
add
or
add
or
add
add
or
or
or
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
or
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
or
or
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
or
add
add
add
or
add
or
or
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
add
or
or
add
or
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
or
or
add
add
add
or
add
add
or
add
or
add
add
or
add
add
or
add
add
or
add
add
add
or
add
add
or
or
add
add
add
add
or
add
add
or
or
add
add
add
add
add
add
add
add
or
or
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
add
add
add
or
or
add
or
or
add
or
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
or
or
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
or
add
or
add
add
add
add
or
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
or
add
add
add
add
add
add
add
add
or
or
add
add
or
or
add
or
or
add
add
or
add
or
add
add
or
add
or
or
add
add
add
add
add
or
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
or
add
or
or
or
add
add
or
add
add
or
add
or
or
or
or
or
or
add
or
add
add
add
add
add
or
or
add
add
or
add
add
add
or
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sub
add
add
roll
out
sub
cmp
xorl
out
in
mov
dec
enter
sub
fstpt
test
sbb
mov
cltd
mov
imul
jns
cmpsb
pop
mov
and
xor
push
shrb
add
add
add
add
add
add
sbb
add
add
add
add
pop
popa
test
xchg
cmpsb
and
xlat
mov
sub
mov
add
add
pop
roll
aad
inc
add
add
call
add
in
out
dec
mov
sub
dec
add
add
add
cmpsl
ret
add
call
gs
addr16
xor
mov
mov
insb
mov
inc
sahf
sbb
pop
mov
jle
push
pxor
dec
xchg
add
add
add
icebp
push
fnstenv
jle
loop
mov
mov
mov
cld
andb
inc
cmpsb
cmpsl
xor
push
pop
cmp
add
add
dec
pop
push
sub
add
xor
push
jg
ret
add
add
lods
pusha
add
add
xor
sub
add
add
out
jge
neg
leave
mov
adc
mov
jp
ljmp
add
pushf
pop
cs
test
and
mov
mov
wrmsr
xchg
fstps
popa
cs
cmpsl
sbb
mov
stc
pop
mov
or
add
add
sbb
add
add
add
pop
cli
fdivs
into
lcall
inc
mov
mov
adc
push
adcb
pop
pop
scas
mov
mov
cld
iret
jb
loope
test
add
xchg
mov
mov
mov
mov
outsl
push
xor
cli
sbb
test
loop
mov
movsl
outsl
adc
sahf
sbb
and
push
std
mov
mov
add
add
mov
xlat
xchg
add
add
add
fisttps
cs
xor
and
pop
inc
push
insb
mov
test
clc
or
dec
call
xchg
les
std
jbe
add
add
pop
jno
in
jbe
das
add
add
pop
push
shlb
sbb
mov
sbb
pushf
shll
and
or
insb
add
add
gs
aaa
popa
shlb
add
add
adc
pop
mov
mov
pop
inc
xor
notl
idivl
repz
add
add
add
filds
jo
stos
fiaddl
inc
aad
pop
nop
sub
iret
jge
cmp
add
add
cmpsl
test
sbb
adc
add
add
adc
sbb
mov
add
add
mov
add
add
mov
jecxz
jge
jl
aad
inc
movsl
push
jno
cmp
test
mov
addl
add
mov
pop
into
divb
leave
and
or
add
sub
jbe
iret
fcompp
testl
js
pop
sbb
ljmp
push
fsub
js
sti
sbb
add
je
dec
push
outsl
cmpsb
or
add
add
outsb
mov
dec
mov
add
add
insl
into
repnz
jecxz
jmp
and
repz
add
add
sbb
sbb
add
add
jb
mov
inc
add
add
pop
adc
adc
dec
add
add
es
sbb
pop
dec
sbb
jns
cmc
lock
cmp
inc
in
mov
sbb
add
add
subl
mov
pop
stos
adc
push
pop
sbb
jb
jne
sbb
out
outsw
sar
pop
lock
inc
pop
cltd
pusha
add
add
and
add
add
add
imul
and
jmp
lea
mov
mov
xchg
push
jle
cmp
leave
ss
mov
mov
mov
adc
xor
pop
lock
loope
les
jmp
mov
xchg
and
add
add
mov
ja
cmp
cli
repnz
add
inc
lret
mov
push
jmp
lahf
xchg
dec
sub
adc
or
imul
and
add
add
stos
fldenv
add
nop
jle
test
lret
pop
loop
test
pusha
add
add
push
xchg
sub
bound
cmp
and
dec
adcl
pop
xor
cli
pop
lea
fwait
ljmp
loope
std
and
add
std
insb
mov
stos
add
add
pushl
jl
mov
jo
xor
jne
mov
or
stc
push
pop
mov
add
add
add
add
mov
lds
roll
inc
cmp
loope
ds
fidivrs
cli
and
adc
dec
mov
sbb
lret
hlt
lret
pop
add
loope
outsl
xorb
sbb
mov
push
jae
lock
mov
lahf
cmp
aas
xchg
rcll
ss
adc
lods
cwtl
aam
sti
jno
loop
jae
mov
pop
push
mov
xor
jp
int
rol
xchg
or
add
add
bound
or
add
add
add
add
imulb
add
iret
and
inc
add
add
adc
shl
mov
pop
rcrb
aad
xchg
aaa
das
or
add
imul
xchg
sub
lcall
mov
jl
adc
fistl
xchg
or
add
add
fisubs
add
add
add
mov
daa
add
jmp
sti
xor
mov
add
add
sbb
push
mov
in
mov
mov
xor
add
sbb
into
test
hlt
push
fstpt
jecxz
fisubrs
mov
add
sti
xchg
pushf
xchg
cmpsl
adc
xlat
lea
mov
add
add
and
add
add
adc
push
imul
lock
add
add
mov
xor
sarb
mov
cmc
iret
fnstsw
jmp
clc
jns
cmpb
inc
arpl
inc
and
add
add
leave
pop
ret
jne
lret
imul
out
imul
out
fsubs
add
jne
adc
mov
mov
adcl
fidivl
push
mov
add
add
add
pop
xor
cmp
add
add
sahf
and
add
pusha
add
add
adc
xlat
shll
xor
stc
add
add
add
cmp
push
rolb
mov
push
mov
fisttpl
pop
jnp
ds
push
mov
pop
adc
sub
in
mov
push
loop
popf
push
loop
pop
xor
repz
xor
leave
sbb
xlat
jbe
aas
shr
sbb
test
push
xchg
xchg
push
int
scas
es
inc
fsubrl
push
jp
fld
sbb
fdivrl
insl
jl
test
icebp
stc
scas
cmp
xor
jnp
fwait
cmp
push
jle
sahf
adc
add
add
sbb
lret
fimull
add
inc
pop
icebp
mov
add
add
shl
xor
mov
jo
ds
xor
fisttpll
out
rclb
dec
mov
call
add
js
xchg
jbe
inc
add
add
sarl
add
lcall
jl
mov
cld
jle
mov
mov
gs
cwtl
mov
sub
and
add
add
add
add
ds
arpl
adc
push
dec
shll
adc
rclb
test
cmp
sbb
pop
mov
mov
adcl
lods
cmp
aad
dec
rorl
add
add
mov
out
cltd
aaa
movl
insb
mov
mov
out
cmp
jnp
add
add
add
mov
cltd
jecxz
xchg
out
repnz
fcmovu
push
xchg
sarl
shl
xchg
xchg
into
push
stos
xor
or
mov
and
out
pusha
add
add
int
xor
jo
lods
rcr
push
xlat
mov
add
adc
jmp
mov
repnz
imul
popaw
mov
jnp
or
mov
add
add
out
jne
shll
dec
mov
pop
imul
add
rcr
imul
ret
inc
popf
mov
dec
scas
add
shr
cli
fs
popl
cltd
cltd
xor
ret
fistl
push
int3
daa
pop
xlat
and
add
adc
or
insb
mov
bound
add
inc
xchg
push
jns
std
sbb
add
xchg
pop
hlt
data16
mov
cmp
add
hlt
bound
push
sub
pop
sti
mov
add
cmpsb
in
dec
scas
mov
add
add
in
jge
sbb
xchg
fdivl
jnp
inc
popf
mov
jbe
cmp
add
add
mov
inc
sbb
enter
outsl
xor
dec
push
pop
iret
fisubrs
sbb
pop
sub
adc
xchg
mov
add
add
aaa
adc
or
jnp
jg
std
sbbl
cmpsl
dec
jmp
shll
fldcw
pop
enter
or
or
pop
mov
lret
sahf
scas
or
add
add
sarl
add
add
test
push
ret
mov
xor
dec
add
add
add
add
sbb
jecxz
or
add
add
jns
js
add
add
add
inc
mov
cmp
andl
pushf
dec
mov
fistps
or
pop
sub
jg
and
fmull
add
add
lock
or
add
add
out
inc
mov
push
aad
filds
add
shlb
add
add
or
les
data16
pop
aaa
sub
movsl
fadds
mov
fiadds
push
inc
mov
mov
push
movsb
jg
das
push
jle,pt
push
test
mov
xchg
and
pop
dec
mov
add
add
mov
sahf
jmp
test
inc
out
or
inc
jg
add
add
add
lret
push
sbb
mov
jmp
and
ret
cmp
jno
es
test
cmpb
test
mov
sbbb
mov
mov
aam
or
xor
push
sub
mov
adc
mov
and
add
add
xchg
dec
dec
mov
mov
sub
add
mov
cmp
mov
sti
xchg
fistpl
sub
mov
push
out
popa
sbb
add
add
add
out
jo
mov
mov
repz
shl
int3
jb
mov
jnp
mov
mov
mov
add
aam
jno
mov
mov
jns
add
add
add
sbb
add
add
add
or
cmpsl
mov
bound
loop
pushf
je
push
sbb
xor
push
subb
add
add
and
mov
je
jp
or
ss
mov
in
andl
add
add
ja
add
out
mov
cmp
add
push
jmp
aaa
dec
js
add
iret
lret
or
shll
lret
aas
bound
cmpb
arpl
pop
stc
xchg
sahf
test
add
pop
int3
xor
cmpsb
xor
leave
aaa
cmpb
pushf
mov
pop
inc
dec
mov
in
xchg
mov
xlat
insl
inc
mov
movsb
int
aaa
or
jae
cli
test
icebp
push
bound
je
mov
push
rorb
add
add
stos
aas
jp
mov
inc
mov
aaa
je
mov
lcall
test
mov
cmp
sbb
testb
mov
adcl
es
jo
mov
pop
mov
mov
cmp
mov
pop
fdivs
fwait
jne
pop
shrb
jp
lret
add
add
aad
sarb
sbb
add
add
add
lret
out
pop
movsl
pop
sub
sub
add
add
sbb
add
add
in
cmpsl
push
stos
and
add
add
test
inc
gs
inc
cltd
sti
test
push
jbe
aad
lea
cmp
mov
dec
sub
add
add
add
jb
out
test
fmul
sahf
inc
icebp
insl
jae
mov
sbb
jg
and
add
add
clc
push
mov
pop
popf
sbb
addr16
push
cmpsl
push
bound
dec
add
add
test
xor
mov
aad
fisubs
add
add
sub
mov
mov
pusha
add
add
mov
or
repnz
xchg
cmp
aam
jns
xchg
xor
xor
add
add
imull
stos
push
adc
fdivl
add
add
add
or
add
add
fimull
add
insl
and
add
out
pop
out
cmp
adc
mov
popa
sbb
and
popa
jo
fwait
and
add
add
test
push
ret
add
add
xchg
in
add
sbbb
dec
inc
xchg
and
push
sub
inc
mov
pop
pushf
xor
add
add
sbb
add
out
lods
add
add
add
int3
adc
add
add
add
sbb
push
sbb
add
movsl
xor
cmpsl
mov
sti
or
sbb
clc
xor
test
pop
jb
inc
out
mov
pop
mov
add
add
add
pusha
add
add
jecxz
sbb
andb
dec
arpl
lret
add
add
pop
cmp
jae
add
add
add
inc
xchg
aas
das
mov
test
xor
add
add
add
xor
pop
ret
pop
mov
add
add
add
add
mov
pop
jnp
mov
mov
aaa
pusha
add
add
mov
stos
fsubrl
and
pushf
je
popa
or
ljmp
mov
jmp
xor
xchg
sbb
iret
aas
pop
insl
shrl
add
add
aas
data16
jl
sbb
inc
add
add
popa
loope
imul
dec
mov
mov
clc
dec
push
data16
mov
xchg
mov
inc
xor
sahf
stos
mov
mov
fcomps
add
add
and
cmpsb
push
shlb
notl
pushf
lret
push
fdivs
lahf
cmpsb
adcl
inc
mov
mov
add
add
pop
dec
test
inc
scas
hlt
or
add
inc
xor
ja
push
daa
cld
xchg
add
movsl
push
call
adc
cltd
push
fimull
add
add
add
add
jne
aaa
stos
ja
mov
stos
leave
stos
and
add
add
repz
add
add
pop
add
rcll
addl
mov
add
add
jecxz
gs
inc
add
pop
loopne
push
and
cwtl
sahf
mov
and
ljmp
mov
inc
jno
or
je
les
jg
ss
lods
outsb
cli
lea
mov
sbb
loope
push
push
dec
mov
inc
mov
pop
in
or
or
lahf
mov
push
leave
mov
insl
xchg
xor
inc
das
ret
pusha
mov
add
add
dec
sub
outsb
xor
jo
repnz
inc
add
add
push
xchg
scas
rcrb
inc
inc
jmp
dec
jg
push
push
test
into
push
cltd
leave
adc
mov
and
mov
xchg
pop
in
inc
lret
das
shrl
xchg
idivb
sub
cld
inc
lret
int3
shll
out
fistpll
mov
sub
call
cmp
jne
lea
push
push
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
lock
mov
je
mov
add
lea
clc
jmp
ret
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
cld
call
test
jne
push
call
jmp
test
adc
mov
jbe
shrl
movsl
inc
mov
add
add
ret
fwait
lock
out
add
add
add
xchg
inc
add
test
dec
xchg
in
nop
xor
pop
in
mov
xchg
xchg
xor
or
sub
sub
add
fidivrl
cmp
cmpsb
mov
xchg
inc
or
test
aas
push
push
and
cmp
inc
add
add
dec
int
in
outsb
addr16
push
mov
mov
and
fstpl
and
scas
inc
mov
shlb
jg
mov
data16
add
add
add
sub
sbb
dec
mov
cltd
push
pushf
lods
xchg
das
rcrb
mov
ret
cld
sahf
push
pop
xor
lahf
loop
push
loope
xchg
mov
add
sbbb
cmpsl
es
and
add
add
lock
aaa
cli
sub
mov
pop
push
aad
pop
ret
ja
add
adc
add
add
fbld
cmp
add
add
inc
pop
mov
cmp
adc
icebp
xchg
jno
lret
and
dec
bound
testl
sub
sub
add
pop
aas
sbb
adc
ja
test
and
add
add
pop
lock
cmp
add
add
loop
cwtl
cmp
pop
call
add
popa
inc
push
xor
pop
mov
push
xchg
mov
dec
jno
add
jl
push
not
int3
mov
lret
popf
jae
add
add
mov
stos
push
int
jle
mov
mov
add
add
or
adc
mov
add
jl
test
jb
mov
mov
add
dec
inc
arpl
test
mov
add
push
les
add
add
adcl
push
inc
movsb
enter
dec
mov
mov
sub
add
add
lahf
ja
pop
sub
inc
pop
ret
sub
jno
pop
push
fldcw
add
add
in
subb
add
add
push
sbb
add
push
notb
add
add
mov
stos
or
popa
mov
mov
mov
sub
add
add
mov
fstl
and
add
add
mov
jge
in
adc
lods
cwtl
dec
lock
popa
nop
mov
jne
cs
int
push
or
and
add
add
jg
data16
adcb
dec
mov
dec
jnp
jmp
push
push
jmp
sarl
jae
cmc
dec
mov
data16
imul
sbb
pop
testb
jl
cmp
push
jle
mov
imul
xor
inc
add
add
add
mov
cli
rcr
ret
cmp
push
fwait
pop
das
pop
call
add
add
cld
sub
jb
lds
add
add
ret
fwait
mov
push
push
arpl
xorl
sbb
mov
lcall
add
mov
cmp
mov
add
out
sbb
mov
mov
ljmp
add
pusha
mov
add
add
test
cmovo
add
add
loop
ret
add
add
push
je
dec
mov
fistpl
sbb
imul
mov
xchg
or
add
cmp
inc
mov
add
add
insb
add
add
mov
jns
insb
add
add
mov
add
add
add
je
jae
mov
adc
pop
dec
inc
sbb
jne
icebp
aaa
rorl
sbb
jp
call
movsl
loope
aad
dec
rcrl
add
out
pop
or
popf
lds
mov
add
add
add
adc
adc
and
add
add
jl
fcoml
mov
xchg
int3
js
add
sbb
ja
test
inc
add
cld
stos
lds
add
add
xor
fdivp
xor
mov
push
int
ljmp
loopne
push
sbb
arpl
cwtl
mov
or
fmul
jno
jge
xchg
pushf
push
sbb
push
xchg
iret
gs
add
add
lock
xchg
inc
mov
jecxz,pn
jl
sbb
mov
sbb
pop
add
add
add
ficoms
dec
lds
out
fldt
mov
aam
mov
lret
fsubrl
add
add
into
sbb
adc
xchg
cmp
mov
int3
lods
or
addr16
sbb
jnp
add
add
int
shrl
dec
int
xchg
cmpsl
adc
pmaddwd
data16
or
add
add
stos
fbld
add
add
add
cmc
aad
adc
add
add
add
mov
iret
ficompl
sub
add
add
in
insb
add
add
les
stc
ds
dec
mov
gs
add
sti
loopne
iret
ss
daa
sbb
lret
sub
pop
mov
or
out
cwtl
movsb
rcrb
mov
je
mov
mov
dec
fstl
pop
out
sahf
sbb
xchg
hlt
fwait
jg
std
jle
sbb
jnp
and
shlb
dec
dec
addr16
aad
in
pop
adc
jmp
mov
fisttpll
int
in
push
xor
xchg
outsl
xor
ja
imull
add
arpl
and
add
add
cmpsb
jnp
aas
and
add
add
add
dec
mov
add
jle
mov
add
add
mov
subb
xchg
or
add
add
push
jg
ret
daa
stos
inc
mov
push
rclb
aam
bound
mov
adc
out
mov
push
push
dec
mov
fwait
pop
jmp
add
add
mov
testb
mov
cmp
inc
mov
out
dec
and
add
add
jb
sub
mov
add
sahf
xchg
arpl
jo
rclb
add
shll
add
add
push
mov
jg
mov
je
add
add
cld
add
inc
xchg
inc
add
add
cmp
mov
cli
xor
jp
cmp
add
add
add
mov
in
in
lret
movsl
sbb
adcb
xor
roll
shlb
adc
mov
adcb
cmp
dec
mov
in
inc
cli
fisubs
mov
fcompl
shl
iret
xchg
jne
inc
clc
jmp
add
sar
xchg
bnd
shr
dec
push
inc
mov
int
and
in
push
icebp
add
inc
mov
inc
pop
ds
mov
cmpsl
arpl
add
je
int3
iret
inc
jno
lahf
sahf
and
mov
cmc
adc
jge
or
mov
insb
mov
xchg
and
sbb
pop
add
push
dec
add
add
test
mov
into
and
data16
xor
outsl
les
rcl
or
lods
sub
andl
pop
ds
imul
pop
mov
push
dec
pop
mov
leave
adc
xchg
adc
pop
ds
add
add
add
cmpsl
mov
inc
dec
or
pop
dec
mov
jb
cld
xor
push
imul
inc
pop
xorb
jle
mov
cwtl
mov
mov
fbstp
hlt
loopne
sahf
adc
push
sub
add
add
sbb
or
mov
xchg
pushf
movsb
in
iret
ror
pop
test
adc
es
mov
out
bound
pop
addl
repz
mov
scas
ret
or
fwait
dec
mov
addr16
sarb
or
icebp
jle
push
mov
xchg
sarl
jae
push
sbb
add
add
adc
jno
jmp
lea
jbe
in
ljmp
rclb
lahf
xor
pop
cmp
icebp
mov
jns
pop
repnz
jge
mov
adc
dec
cmp
inc
nop
out
lods
xor
std
lret
mov
add
rolb
dec
add
add
addl
mov
pop
out
shl
popl
mov
outsl
cmpsb
mov
add
add
dec
add
add
test
sub
add
push
dec
fcomp
mov
xor
insb
mov
xchg
dec
iret
rolb
jp
scas
clc
popa
mov
pusha
mov
cmp
mov
xchg
xchg
add
lahf
xchg
push
adc
fisubrs
push
dec
add
add
push
mov
das
mov
pop
jne,pt
mov
mov
sarb
dec
mov
jecxz
mov
sbb
icebp
inc
push
adc
add
add
add
mov
repz
add
inc
testl
addl
add
mov
or
scas
popa
movsl
sarl
jbe
adc
testb
cmp
add
add
pushf
inc
sbb
pop
out
aaa
and
add
add
add
add
insl
scas
std
fbstp
rcll
inc
add
add
sub
fistps
xor
or
das
inc
andb
mov
inc
cli
push
xchg
jge
xchg
addr16
xor
mov
int
stc
flds
add
faddp
pop
xchg
popa
mulb
push
mov
out
fidivs
daa
ret
sbb
sub
add
mov
add
add
add
add
ret
lahf
out
negl
fsts
xlat
es
mov
loopne
mov
mov
or
pop
pop
hlt
fsts
leave
aaa
sub
sub
add
add
sbb
jns
nop
lea
push
popf
nop
mov
inc
xchg
icebp
adc
add
fdivl
data16
adc
or
rorl
scas
lods
jle
pop
cmc
push
inc
inc
and
sub
and
mov
push
add
add
add
ret
lahf
jb
mov
add
fs
mov
mov
stos
out
add
add
jae
in
xor
popa
les
add
out
xor
pop
sbb
mov
add
add
jnp
inc
movsl
nop
sub
jp
sbb
and
iret
scas
mov
jle
sub
add
add
aas
mov
add
add
lret
xchg
sub
fsubs
add
and
std
mov
das
fwait
cmpl
mov
jbe
test
cmp
mov
dec
inc
vmwrite
add
add
push
aad
push
pop
cwtl
mov
hlt
and
fstps
cli
jge
pop
stos
cmp
sub
add
add
test
cmp
jbe
mov
add
mov
and
fnstsw
dec
and
in
nop
and
lods
fisubs
popf
cltd
add
pop
lretw
icebp
je,pn
cmp
mov
or
fsub
repnz
cmp
mov
add
cwtl
cld
movl
aaa
subl
pop
rcrl
scas
iret
and
cwtl
sbb
insb
add
add
xchg
mov
add
dec
ja
mov
aad
cld
jns
jmp
fwait
mov
push
pop
xor
pop
lcall
jmp
je
mov
mov
add
add
add
in
or
fidivs
shll
stc
movsl
cmp
hlt
jl
dec
add
add
add
mov
es
fcoms
fiaddl
pop
pushf
mov
or
add
add
jle
fmuls
and
add
add
sbb
mov
cmpsl
fxch
mov
add
add
and
add
add
or
inc
inc
add
add
cvtps2pi
out
add
add
add
sub
sbb
lcall
sub
dec
sbb
inc
mov
add
xchg
mov
add
hlt
subl
push
pop
push
lds
sub
lds
push
leave
and
and
add
add
hlt
add
add
cmc
dec
jmp
call
add
add
add
imul
mov
sub
pop
pop
jns
out
mov
shll
mov
test
mov
mov
pop
sub
cmc
push
cwtl
ljmp
pop
pop
popf
adc
mov
xchg
xor
add
fstpt
pusha
mov
sub
enter
aas
test
mov
add
add
clc
sbb
add
mov
cwtl
sub
mov
subl
std
sub
cmpsl
push
push
lea
add
lods
push
or
add
add
mov
gs
lods
dec
add
add
mov
jle
sub
cmp
add
add
data16
dec
addr16
mov
add
mov
divb
add
inc
add
add
in
inc
jmp
mov
pop
test
xor
repnz
add
add
sarl
mov
fwait
and
xchg
xchg
shll
xor
test
es
popa
and
jne
xchg
je
lock
xchg
jg
fstl
aaa
insl
test
insl
cpuid
in
imul
aad
add
xchg
add
nop
dec
nop
dec
mov
push
mov
mov
outsl
inc
lods
fcompl
and
pop
sahf
outsl
cmpsb
in
fs
jge
pop
inc
jno
push
data16
out
dec
stos
add
mov
dec
push
repz
push
movsl
dec
mov
orl
sti
mov
add
add
scas
fcomi
aas
ficoms
jne
ljmp
add
iret
clc
sub
add
add
push
mov
pushf
add
add
outsb
jecxz
jno
out
sbb
pop
inc
out
xor
add
xchg
jle
cmpsl
je
adc
sbb
ret
add
add
add
data16
xchg
loope
stos
pusha
add
add
jl
fistpll
sbb
cwtl
or
add
add
clc
repnz
nop
nop
jae
cmp
incl
add
sar
repnz
nop
nop
jae
jne
dec
add
mulb
mov
leave
nop
jmp
addb
add
test
add
je
clc
repnz
nop
nop
jae
das
add
out
fwait
push
mov
xchg
ret
sbb
push
xor
add
mov
clc
repnz
nop
nop
jae
add
add
push
lea
fistpl
nop
push
mov
leave
nop
jmp
cmp
pop
cmp
add
pop
jne
clc
repnz
nop
nop
jae
adc
pop
jp
jmp
repnz
nop
nop
jae
cmp
adc
pop
add
sbb
nop
push
mov
leave
nop
jmp
dec
and
add
add
inc
clc
repnz
nop
nop
jae
xor
loope
add
in
inc
adcl
nop
jmp
add
sbb
xor
push
dec
add
repnz
sbb
mov
leave
nop
jmp
mov
jp
add
cmp
mov
leave
nop
jmp
adc
add
add
jo
add
pop
push
mov
xchg
ret
add
and
add
and
push
popf
ret
cmp
sbb
add
pop
mov
lahf
dec
test
add
lahf
test
add
pop
pop
clc
repnz
nop
nop
jae
adc
add
mul
add
mov
outsl
nop
push
mov
leave
nop
jmp
push
add
addb
add
jle
addb
add
cmpsl
fld1
push
mov
xchg
ret
add
add
testb
faddl
pop
dec
cmpsb
or
push
nop
push
mov
leave
nop
jmp
add
data16
adc
add
adc
in
push
mov
xchg
ret
adc
jne
add
add
pop
pop
scas
pop
push
mov
xchg
ret
push
adc
xor
dec
in
push
pushl
clc
repnz
nop
nop
jae
add
insl
lahf
xor
faddl
cmp
outsb
xchg
push
mov
leave
nop
jmp
test
xor
add
add
jl
xor
int
inc
add
add
lea
popl
jp
stc
jmp
add
pop
add
add
incl
add
add
mov
cld
nop
nop
jae
mov
mov
adc
out
test
nop
nop
jae
xchg
ltr
repnz
pop
pop
add
cmp
dec
imul
das
add
addb
pop
cmp
push
clc
repnz
nop
nop
jae
add
and
add
dec
mov
dec
mov
mov
jbe
add
add
inc
dec
dec
add
add
add
sar
cld
nop
nop
jae
and
adc
add
and
push
clc
repnz
nop
nop
jae
pop
add
pop
and
and
lea
imul
addl
add
push
sbb
add
add
add
mov
cmc
add
clc
repnz
nop
nop
jae
test
add
mov
mov
incl
insl
verw
jp
dec
dec
add
test
not
add
add
add
add
add
add
and
out
push
push
mov
xchg
ret
add
add
add
xor
popa
mov
nop
push
mov
leave
nop
jmp
add
addb
add
add
out
shrl
repnz
nop
nop
jae
outsl
add
sbb
pop
lret
lods
call
push
mov
xchg
ret
sub
add
and
add
inc
mov
nop
push
mov
leave
nop
jmp
add
jp
adc
adc
repnz
nop
nop
jae
add
add
add
mov
in
dec
push
mov
into
add
jae
adc
add
mov
movsb
mov
mov
clc
repnz
nop
nop
jae
add
mov
cmp
add
das
pop
clc
repnz
nop
nop
jae
data16
pop
push
insl
lahf
pop
sbb
sub
clc
repnz
nop
nop
jae
add
sbb
addb
jo
add
cmp
psubb
cld
nop
nop
jae
sub
in
add
cmp
mov
add
clc
repnz
nop
nop
jae
lahf
push
sbb
adcb
clc
repnz
nop
nop
jae
add
add
add
dec
sbb
add
dec
cmp
repnz
nop
nop
jae
xor
pop
xor
mov
jne
and
lahf
add
push
mov
xchg
ret
pop
add
add
add
loop
jle
push
clc
repnz
nop
nop
jae
pop
add
fdivl
pop
sbbb
add
add
add
clc
repnz
nop
nop
jae
adc
add
pop
clc
repnz
nop
nop
jae
lret
add
add
push
aam
mov
leave
nop
jmp
add
add
lea
push
dec
push
add
adc
pop
mov
clc
repnz
nop
nop
jae
add
sbb
loope
das
add
scas
push
push
mov
xchg
ret
and
pop
pop
addb
das
pop
gs
cmovge
lea
xchg
ret
pop
mov
jne
jg
and
adc
add
jne
ljmp
add
add
add
xor
cmp
add
in
leave
nop
jmp
pop
dec
insl
dec
jo
add
add
push
decl
push
mov
xchg
ret
dec
add
and
add
add
test
inc
ret
nop
push
mov
leave
nop
jmp
add
add
add
add
add
push
push
add
clc
repnz
nop
nop
jae
insw
add
add
sub
daa
push
push
mov
xchg
ret
xor
add
add
add
dec
adc
fidivs
mov
leave
nop
jmp
add
add
add
dec
push
clc
repnz
nop
nop
jae
das
repnz
cmp
add
in
leave
nop
jmp
add
adc
xor
add
adc
add
add
ljmp
nop
jae
cmp
push
adc
add
sbb
and
js
nop
push
mov
leave
nop
jmp
add
pop
add
outsb
add
sbb
cmp
push
mov
leave
nop
jmp
sub
add
add
add
pop
and
inc
lock
push
mov
leave
nop
jmp
adc
add
add
into
fdivr
call
clc
repnz
nop
nop
jae
mov
lahf
push
dec
adc
mov
adc
repnz
nop
nop
jae
xor
comiss
xchg
add
mov
mov
xchg
ret
mov
lahf
add
cmp
push
adc
iret
or
inc
add
loope
add
xor
add
inc
add
add
xchg
jl
push
push
mov
xchg
ret
test
add
add
subb
add
cmp
mov
push
clc
repnz
nop
nop
jae
add
add
cmp
gs
insb
add
add
pop
mov
push
mov
xchg
ret
incl
add
add
add
pop
mov
clc
repnz
nop
nop
jae
pop
dec
negb
mov
clc
repnz
nop
nop
jae
add
ltr
sbb
imul
add
pop
jp
xor
adc
add
add
add
add
dec
inc
add
sub
add
cmp
add
dec
add
jl
add
sbb
add
jp
add
and
lea
clc
repnz
nop
nop
jae
add
and
add
mov
push
mov
xchg
ret
and
pop
add
add
jg
push
add
xchg
push
clc
repnz
nop
nop
jae
gs
insl
xchg
outsb
add
pop
add
jo
add
push
mov
xchg
ret
in
insl
lea
insl
cmp
adc
clc
repnz
nop
nop
jae
pop
add
add
jne
add
add
clc
repnz
nop
nop
jae
add
dec
dec
and
adc
clc
repnz
nop
nop
jae
mov
add
cmp
data16
mov
pop
inc
add
add
testb
add
mulb
cld
nop
nop
jae
xchg
add
lahf
outsl
outsb
mov
xor
add
lcall
inc
add
add
das
cmovle
in
mov
clc
repnz
nop
nop
jae
mov
add
add
cmpb
inc
add
pop
add
outsl
sub
add
add
add
add
clc
repnz
nop
nop
jae
repnz
negb
pop
mov
add
repnz
nop
nop
jae
and
addb
xor
repnz
nop
nop
jae
add
push
jo
loop
insl
add
loop
push
mov
xchg
ret
adc
add
add
cmp
shl
nop
push
mov
leave
nop
jmp
cmp
add
add
dec
cmp
test
xor
add
repnz
nop
nop
jae
in
dec
jne
test
fisttpll
test
sub
add
nop
jmp
add
add
add
jnp
clc
repnz
nop
nop
jae
add
mov
adcb
clc
repnz
nop
nop
jae
sbb
data16
andb
jg
in
test
mov
leave
nop
jmp
add
dec
arpl
nop
nop
jae
add
add
add
jo
push
dec
je
jo
cmp
nop
push
mov
leave
nop
jmp
cmp
add
add
loope
jl
imul
clc
repnz
nop
nop
jae
pop
add
add
lretw
lods
inc
mov
add
add
lea
sub
repnz
nop
nop
jae
loop
and
add
add
push
clc
repnz
nop
nop
jae
dec
add
jp
add
dec
xor
clc
repnz
nop
nop
jae
cmp
add
adc
mov
cld
nop
nop
jae
pop
xor
dec
and
sldt
add
inc
add
clc
repnz
nop
nop
jae
das
mov
add
xor
add
mov
xlat
fld1
clc
repnz
nop
nop
jae
test
add
add
add
xor
add
add
add
push
mov
xchg
ret
data16
pop
add
adc
mov
mov
clc
repnz
nop
nop
jae
add
add
decl
lods
sub
std
call
nop
jmp
xchg
push
xchg
add
hlt
cmp
test
repnz
nop
nop
jae
and
add
fisubs
pop
mov
clc
repnz
nop
nop
jae
pop
cmp
add
repnz
inc
clc
push
mov
xchg
ret
outsl
cmp
faddl
push
cmp
add
add
rclb
jp
add
xchg
in
add
lahf
outsb
sbb
cmp
cmp
jae
repnz
nop
nop
jae
mov
gs
jg
and
push
fwait
clc
repnz
nop
nop
jae
add
gs
adc
lea
mov
mov
leave
nop
jmp
cmp
add
jo
add
add
clc
repnz
nop
nop
jae
add
xchg
and
jecxz
test
repnz
nop
nop
jae
dec
addb
push
cmp
push
clc
repnz
nop
nop
jae
add
add
psraw
add
add
scas
dec
or
add
add
clc
repnz
nop
nop
jae
cmp
pop
adc
rcrl
repnz
nop
nop
jae
loop
data16
cmp
cmp
fld1
push
mov
xchg
ret
push
add
add
add
outsb
pop
xchg
add
push
clc
repnz
nop
nop
jae
lea
add
add
lea
test
repnz
nop
nop
jae
outsl
add
repnz
add
shll
push
mov
leave
nop
jmp
jo
add
dec
lret
add
dec
push
clc
repnz
nop
nop
jae
lret
add
in
mov
lahf
dec
cli
mov
clc
repnz
nop
nop
jae
add
dec
cmp
add
add
clc
repnz
nop
nop
jae
outsl
sub
sbb
add
sub
add
repnz
nop
nop
jae
add
add
pop
sbbb
in
push
mov
sar
cld
nop
nop
jae
add
add
add
add
push
mov
clc
repnz
nop
nop
jae
dec
in
test
div
add
mov
clc
repnz
nop
nop
jae
xor
add
dec
mov
add
ss
sbb
clc
repnz
nop
nop
jae
test
insl
add
add
sahf
sbb
repnz
nop
nop
jae
pop
add
add
bsr
cmp
mov
clc
repnz
nop
nop
jae
data16
dec
loope
xchg
add
add
xor
rep
clc
repnz
nop
nop
jae
add
lahf
dec
add
bnd
add
and
in
rolb
dec
lret
xorl
mov
add
add
add
mov
lcall
test
nop
push
mov
leave
nop
jmp
add
add
lahf
rep
clc
repnz
nop
nop
jae
addb
pop
adc
add
mov
add
clc
repnz
nop
nop
jae
gs
pop
test
mov
test
cmpl
nop
push
mov
leave
nop
jmp
add
jo
outsb
add
jne
push
push
mov
xchg
ret
pop
add
ud0
in
add
add
repnz
nop
nop
jae
add
cmp
outsl
xchg
testb
lea
clc
repnz
nop
nop
jae
add
insl
and
add
add
cmp
rolb
clc
repnz
nop
nop
jae
add
test
add
popl
popl
adc
stc
push
nop
push
mov
leave
nop
jmp
mov
cmp
add
push
push
pop
add
loop
fwait
clc
repnz
nop
nop
jae
add
and
gs
xor
repnz
cmp
insl
fwait
clc
repnz
nop
nop
jae
add
decl
test
add
xchg
nop
nop
jae
add
jg
cmp
cmp
popf
call
clc
repnz
nop
nop
jae
push
add
loope
jg
loop
jb
inc
add
add
pop
mov
push
add
clc
repnz
nop
nop
jae
str
add
in
pop
push
mov
xchg
ret
sub
sub
add
add
in
add
addl
sbb
add
dec
test
push
outsb
in
add
repz
clc
repnz
nop
nop
jae
add
pop
pop
loope
add
add
add
mov
nop
jae
add
insl
add
add
xor
psubb
cld
nop
nop
jae
add
add
add
outsb
add
insl
adc
in
leave
nop
jmp
add
xor
pop
push
pop
jne
in
add
clc
repnz
nop
nop
jae
add
sbb
add
mov
clc
repnz
nop
nop
jae
add
add
adc
cmp
add
push
iret
push
push
mov
xchg
ret
mov
add
repnz
into
enter
push
mov
xchg
ret
lahf
dec
add
pop
decl
fwait
je
clc
repnz
nop
nop
jae
add
add
decl
mov
xchg
ret
add
lea
add
add
cmp
mov
xchg
ret
in
sbb
adc
add
loope
dec
and
add
add
fsubrp
push
clc
repnz
nop
nop
jae
jne
add
lea
dec
notl
mov
xchg
ret
add
add
test
add
add
push
outsl
aaa
mov
push
mov
xchg
ret
push
add
add
add
add
add
sbb
add
clc
repnz
nop
nop
jae
jo
add
adc
mov
inc
pop
push
mov
xchg
ret
add
repnz
jg
pop
cmp
push
and
or
add
add
jo
add
clc
repnz
nop
nop
jae
lahf
jp
add
dec
add
xchg
push
inc
add
sbb
add
add
add
gs
push
push
mov
xchg
ret
data16
in
loope
jne
jne
or
push
mov
leave
nop
jmp
in
sbb
lea
and
add
in
xor
clc
repnz
nop
nop
jae
loope
add
fwait
mov
clc
repnz
nop
nop
jae
jp
cmp
add
repnz
nop
nop
jae
add
add
testb
faddl
sbbb
adc
nop
nop
jae
add
dec
lret
add
fsub
mov
clc
repnz
nop
nop
jae
add
add
cmp
add
in
and
clc
repnz
nop
nop
jae
add
subb
add
add
sub
mov
xchg
ret
sub
cmp
data16
add
add
and
pop
clc
repnz
nop
nop
jae
adc
add
jp
sub
dec
add
bound
repnz
nop
nop
jae
add
push
cmp
add
add
sti
mov
clc
repnz
nop
nop
jae
add
add
sub
add
add
push
push
mov
xchg
ret
add
mov
add
jne
add
add
mov
mov
xchg
ret
in
faddl
lea
das
add
cmp
add
jno
movb
mov
and
sub
mov
sbb
call
inc
add
add
add
add
sub
add
nop
push
mov
leave
nop
jmp
sub
mov
pop
add
add
add
repnz
nop
nop
jae
mov
pop
in
pop
add
jo
std
push
push
mov
xchg
ret
add
mov
add
sub
adcb
add
clc
repnz
nop
nop
jae
xor
add
add
mov
data16
fwait
clc
repnz
nop
nop
jae
mov
add
sbb
sldt
jle
xchg
push
mov
xchg
ret
test
add
test
jp
cmpl
nop
push
mov
leave
nop
jmp
add
add
pop
push
add
add
repnz
nop
nop
jae
add
adc
xchg
add
add
adc
pop
push
mov
xchg
ret
in
add
lret
test
add
outsl
push
ja
dec
push
nop
push
mov
leave
nop
jmp
add
add
add
dec
xor
in
mov
add
add
and
lea
fmull
adc
sbb
in
add
nop
push
mov
leave
nop
jmp
jg
lea
pop
add
add
mov
xchg
ret
outsl
cmp
add
add
loope
add
xchg
adcl
jae
sbb
add
pop
add
pop
sub
out
nop
push
mov
leave
nop
jmp
sbb
in
dec
cmp
lahf
mov
push
mov
xchg
ret
pop
pop
add
add
lret
xchg
cmpl
nop
jae
add
pop
add
cmp
lahf
dec
clc
repnz
nop
nop
jae
add
lahf
insl
add
xchg
nop
nop
jae
pop
push
dec
cmp
test
addb
jg
sub
or
add
clc
repnz
nop
nop
jae
jg
add
cmp
div
nop
push
mov
leave
nop
jmp
jg
addb
test
add
nop
nop
jae
cmpb
lahf
cmp
and
add
dec
and
add
add
nop
nop
jae
fdivl
popl
and
xchg
repnz
clc
repnz
nop
nop
jae
pop
add
add
sbb
testb
xchg
xchg
cs
clc
repnz
nop
nop
jae
add
add
add
lret
push
aaa
jmp
add
add
push
xchg
addb
push
test
dec
adc
je
mov
clc
repnz
nop
nop
jae
add
adc
sbb
aad
cmp
add
clc
repnz
nop
nop
jae
add
cmp
add
add
cli
fs
shr
nop
push
mov
leave
nop
jmp
add
add
add
add
in
adc
jnp
add
add
add
loop
add
rcll
repnz
nop
nop
jae
and
add
loope
sub
repnz
mov
mov
add
pop
add
mov
add
add
add
mov
rorl
inc
add
cmp
add
xchg
sbb
insl
adc
enter
nop
nop
jae
pop
add
jg
dec
add
add
and
mov
xchg
ret
add
adc
jg
xor
xchg
test
std
clc
repnz
nop
nop
jae
add
dec
and
dec
xchg
std
mov
clc
repnz
nop
nop
jae
jne
add
add
adc
xor
push
mov
xchg
ret
and
add
add
addb
push
clc
repnz
nop
nop
jae
in
add
test
add
dec
add
and
mov
xchg
ret
jp
add
das
add
jp
jne
mov
push
mov
xchg
ret
add
cmp
pop
add
mov
fistpl
push
mov
xchg
ret
add
xor
incl
add
jo
and
push
mov
xchg
ret
add
jne
pop
add
call
pop
add
mov
nop
push
mov
leave
nop
jmp
sub
add
add
adc
add
add
mov
clc
repnz
nop
nop
jae
outsb
addb
pop
insl
add
push
push
mov
xchg
ret
mov
add
push
cmp
add
icebp
push
clc
repnz
nop
nop
jae
add
pop
mov
xor
add
add
add
adc
flds
ljmp
add
push
and
cld
nop
nop
jae
add
insw
add
insl
jg
cmp
repnz
nop
nop
jae
pop
dec
add
test
push
pop
add
push
mov
leave
nop
jmp
jo
add
xchg
sub
xor
stos
repnz
iret
shr
nop
push
mov
leave
nop
jmp
xchg
add
sub
add
jle
add
nop
nop
jae
xor
xor
loope
add
in
adc
sub
addl
cmp
ret
gs
add
add
add
pop
mov
clc
repnz
nop
nop
jae
in
mov
add
in
out
nop
push
mov
leave
nop
jmp
jne
testb
add
cmp
mov
xor
or
nop
push
mov
leave
nop
jmp
sub
add
xor
and
add
add
rclb
iret
addl
add
lea
testb
add
push
push
mov
xchg
ret
add
add
pop
add
push
or
add
add
xor
cmp
repnz
nop
nop
jae
cmp
push
sub
mov
daa
jb
push
add
add
cmp
cmp
ror
push
shl
insb
mov
iret
xchg
push
mov
xchg
ret
add
add
add
pop
sub
pop
jg
jge
clc
repnz
nop
nop
jae
add
dec
adc
add
add
gs
add
clc
repnz
nop
nop
jae
xor
add
add
jmp
dec
add
sbbb
and
add
lahf
and
add
add
call
inc
add
jg
pop
add
negb
and
adc
repnz
nop
nop
jae
add
add
push
add
test
repz
repnz
nop
nop
jae
cmp
add
dec
and
and
fistpl
nop
push
mov
leave
nop
jmp
data16
add
add
add
repnz
push
clc
repnz
nop
nop
jae
add
add
add
pop
verr
in
leave
nop
jmp
add
dec
pop
dec
add
adc
clc
repnz
nop
nop
jae
test
add
add
cmp
clc
repnz
nop
nop
jae
add
add
das
add
add
arpl
clc
repnz
nop
nop
jae
add
add
jp
add
sub
push
mov
leave
nop
jmp
outsl
dec
add
add
faddl
nop
push
mov
leave
nop
jmp
add
loop
add
add
je
clc
repnz
nop
nop
jae
add
gs
mov
add
clc
repnz
nop
nop
jae
add
test
add
add
mov
clc
repnz
nop
nop
jae
add
and
mov
add
repnz
dec
cmp
repnz
nop
nop
jae
push
loop
push
adc
jo
add
push
mov
xchg
ret
add
test
add
add
push
pop
add
int
push
mov
xchg
ret
add
fmull
insl
add
add
add
xor
nop
push
mov
leave
nop
jmp
lret
loope
add
sub
clc
repnz
nop
nop
jae
add
jne
addb
addb
push
xchg
xor
push
mov
xchg
ret
dec
xor
idivb
add
add
pop
clc
repnz
nop
nop
jae
test
add
adc
add
pop
incl
xor
je
nop
push
mov
leave
nop
jmp
add
jo
add
xchg
mov
clc
repnz
nop
nop
jae
push
add
pop
add
cmp
mov
clc
repnz
nop
nop
jae
jg
insl
dec
cmp
in
pop
xchg
xchg
add
clc
repnz
nop
nop
jae
sub
add
mov
add
ret
clc
repnz
nop
nop
jae
add
add
cmp
mov
cmpw
clc
repnz
nop
nop
jae
test
xor
add
adcl
repnz
nop
nop
jae
add
add
outsb
mov
add
xchg
jge
clc
repnz
nop
nop
jae
add
data16
add
add
stos
popf
add
push
mov
xchg
ret
gs
add
pop
testb
pop
mov
add
add
clc
repnz
nop
nop
jae
add
add
add
pop
mov
clc
repnz
nop
nop
jae
movups
add
xor
sbb
mov
clc
repnz
nop
nop
jae
add
outsl
cmp
xor
push
push
mov
xchg
ret
lahf
add
sbb
addb
loop
and
add
nop
push
mov
leave
nop
jmp
das
dec
dec
jp
fsub
pop
add
in
sub
clc
repnz
nop
nop
jae
jne
add
sub
cmp
incl
add
repnz
nop
nop
jae
lret
add
adc
xor
add
clc
repnz
nop
nop
jae
add
adc
add
pop
dec
filds
cld
nop
nop
jae
adc
incl
lahf
sbb
add
add
sub
add
add
cld
nop
nop
jae
add
add
add
sub
add
xor
clc
repnz
nop
nop
jae
add
add
pop
sub
add
es
add
add
dec
add
jp
mov
clc
repnz
nop
nop
jae
add
jg
jo
sub
popa
add
push
mov
xchg
ret
add
dec
push
add
sub
add
call
clc
repnz
nop
nop
jae
jg
add
add
add
arpl
mov
xchg
ret
cmp
pop
add
add
dec
add
cld
clc
repnz
nop
nop
jae
lret
add
cmp
jo
lahf
add
loopne
push
clc
repnz
nop
nop
jae
push
lea
lea
cmp
add
add
pop
clc
repnz
nop
nop
jae
lea
repnz
and
add
imul
clc
repnz
nop
nop
jae
in
cmp
xchg
jg
test
adc
add
nop
jmp
lret
add
pop
andb
push
mov
push
adc
dec
notb
jmp
add
add
add
call
leave
nop
jmp
add
add
push
sbb
and
insl
pop
clc
repnz
nop
nop
jae
pop
add
jp
cmp
add
repnz
nop
nop
jae
pop
add
add
add
jg
add
mov
push
mov
xchg
ret
pop
jg
mov
pop
dec
repnz
les
dec
cmp
repnz
nop
nop
jae
add
incl
dec
add
and
adc
push
mov
xchg
ret
pop
add
sbb
add
sub
faddl
rcrb
repnz
nop
nop
jae
add
add
cmp
jl
push
push
mov
xchg
ret
cmp
and
add
in
pop
push
fld1
clc
repnz
nop
nop
jae
pop
and
and
daa
fwait
push
mov
xchg
ret
add
test
pop
pop
push
add
xor
add
clc
repnz
nop
nop
jae
cmp
sbb
add
insl
str
xchg
imul
nop
push
mov
leave
nop
jmp
add
testb
fcompl
add
cmp
xor
repnz
nop
nop
jae
jg
push
cmp
data16
add
add
gs
loop
cmp
push
jg
add
cmp
add
xchg
jne
clc
repnz
nop
nop
jae
add
add
das
pop
gs
addl
in
push
add
add
push
bts
test
adc
add
repnz
nop
nop
jae
add
add
add
lods
sldt
clc
repnz
nop
nop
jae
cmp
xchg
add
imul
jno
inc
add
jo
pop
repnz
xor
jg
inc
jl
int3
and
rcll
repnz
nop
nop
jae
dec
add
in
add
add
add
sub
clc
repnz
nop
nop
jae
outsb
pop
mov
incl
testb
cltd
push
mov
add
add
mov
pop
bts
add
inc
add
push
mov
xchg
ret
cmp
testb
ltr
loop
es
nop
nop
jae
outsb
adcb
add
repnz
call
clc
repnz
nop
nop
jae
add
add
adc
mov
cld
nop
nop
jae
dec
pop
sub
pop
add
sbb
adc
sub
push
mov
xchg
ret
sub
xorb
pop
sbb
jg
adc
cld
nop
nop
jae
outsb
add
in
add
and
xchg
mov
nop
push
mov
leave
nop
jmp
jo
fdivrl
xor
testb
addr16
clc
repnz
nop
nop
jae
push
add
add
sbb
rclb
jl
inc
add
add
add
add
add
lock
add
repnz
nop
nop
jae
add
add
add
loope
add
add
push
add
add
mov
roll
repnz
nop
nop
jae
dec
add
pop
cmp
add
add
loopne
add
push
mov
xchg
ret
lea
xor
jp
add
pop
add
ljmp
mov
leave
nop
jmp
dec
in
add
add
in
add
inc
cmp
add
sbb
cmp
ret
add
test
inc
push
mov
xor
mov
xor
add
add
mov
clc
repnz
nop
nop
jae
add
dec
dec
testb
add
mov
clc
repnz
nop
nop
jae
cmp
xorb
pop
add
add
repnz
nop
nop
jae
add
pop
adc
loop
fwait
jmp
clc
repnz
nop
nop
jae
add
add
pop
and
sub
inc
mov
push
mov
xchg
ret
add
add
lahf
add
outsb
mov
cld
nop
nop
jae
loop
add
add
bnd
add
jne
clc
repnz
nop
nop
jae
add
add
pop
insb
inc
add
add
add
add
je
clc
repnz
nop
nop
jae
push
jo
lret
pop
dec
mov
push
nop
push
mov
leave
nop
jmp
sbb
add
push
and
push
clc
repnz
nop
nop
jae
notb
in
pop
add
sti
mov
push
mov
xchg
ret
add
add
add
cmp
inc
push
mov
xchg
ret
add
bnd
push
add
lea
add
clc
repnz
nop
nop
jae
adc
adc
dec
add
add
les
cld
push
mov
xchg
ret
loope
outsl
lldt
cmp
add
adc
cld
nop
nop
jae
add
test
jne
add
test
jmp
and
orb
add
dec
add
in
dec
cmp
repnz
nop
nop
jae
add
mov
push
add
add
add
add
add
fistpl
clc
repnz
nop
nop
jae
sbb
add
add
add
pop
dec
push
testb
cmp
clc
repnz
nop
nop
jae
add
push
cmp
add
pop
mov
nop
nop
jae
incl
fdivrl
mov
pop
add
mov
nop
push
mov
leave
nop
jmp
dec
add
add
cmp
movsb
fcom
add
nop
nop
jae
add
andb
add
dec
mov
repnz
nop
nop
jae
add
adc
add
lahf
add
xor
clc
repnz
nop
nop
jae
sub
add
adc
add
add
and
push
mov
xchg
ret
test
fcoml
and
push
clc
repnz
nop
nop
jae
add
add
data16
push
fwait
push
mov
xchg
ret
insl
add
add
jo
add
push
and
outsl
mov
push
mov
xchg
ret
lahf
add
add
insl
cmp
pop
jmp
add
repnz
cmp
add
add
in
dec
in
mov
clc
repnz
nop
nop
jae
add
cmp
add
pop
add
repnz
nop
nop
jae
jg
xor
mov
add
ds
fld1
push
mov
xchg
ret
adc
sub
dec
orb
pop
cmp
lods
nop
push
mov
leave
nop
jmp
faddl
testb
add
add
inc
sub
repnz
nop
nop
jae
add
add
add
add
inc
add
clc
repnz
nop
nop
jae
add
dec
divb
cmp
stos
clc
repnz
nop
nop
jae
in
add
xchg
jo
data16
add
clc
repnz
nop
nop
jae
add
cmp
add
and
pop
nop
push
mov
leave
nop
jmp
add
add
dec
add
nop
nop
jae
add
push
jo
mov
add
xchg
adc
add
repnz
nop
nop
jae
add
add
push
jg
pushw
ret
fwait
clc
repnz
nop
nop
jae
outsb
mov
adc
add
and
dec
add
add
add
cld
nop
nop
jae
repnz
add
jo
decl
out
clc
repnz
nop
nop
jae
adc
jne
add
in
sub
add
cmpsl
push
mov
add
add
inc
sbb
jnp
cmp
rcrb
divps
jne
mov
cld
nop
nop
jae
pop
sub
das
adc
lret
fld1
clc
repnz
nop
nop
jae
loope
and
add
cmp
add
add
ret
cmp
nop
push
mov
leave
nop
jmp
add
pop
add
clc
loop
jb
clc
repnz
nop
nop
jae
lret
lahf
add
repnz
nop
nop
jae
sub
mov
mov
in
push
mov
xchg
ret
add
add
add
add
ret
sub
add
add
mov
scas
pop
push
mov
xchg
ret
adc
lret
add
add
pop
mov
nop
push
mov
leave
nop
jmp
cmp
repnz
sbb
add
push
mov
xchg
ret
test
pop
insl
add
xor
sub
in
push
add
add
mov
pop
rolb
add
jne
add
filds
xor
add
nop
push
mov
leave
nop
jmp
add
lahf
lret
add
lahf
adc
jmp
pop
cmp
add
add
mov
add
cmp
cmp
mov
test
repz
clc
repnz
nop
nop
jae
outsb
add
add
xchg
mov
push
mov
xchg
ret
add
add
jo
pop
and
loop
in
mov
nop
push
mov
leave
nop
jmp
pop
repnz
paddusb
pop
jne
jg
dec
clc
repnz
nop
nop
jae
add
add
cmp
push
add
aas
jne
clc
repnz
nop
nop
jae
pop
outsl
and
xor
adc
add
add
adc
nop
push
mov
leave
nop
jmp
add
add
add
fdivrs
nop
pop
sub
repnz
nop
nop
jae
add
mov
and
push
mov
xchg
ret
mov
pop
cmp
cmpb
mov
leave
nop
jmp
push
lea
add
nop
adc
cli
jecxz
add
push
mov
xchg
ret
cmp
add
jo
adc
nop
push
mov
leave
nop
jmp
data16
sub
add
repz
nop
push
mov
leave
nop
jmp
in
cmp
add
add
mov
mov
xchg
ret
sub
das
add
add
fstps
nop
jae
add
in
dec
dec
in
pop
add
cwtl
fs
fld1
clc
repnz
nop
nop
jae
add
jg
jo
sub
mov
clc
repnz
nop
nop
jae
pop
cmp
push
pop
add
add
add
cmpsl
test
push
mov
xchg
ret
lahf
testb
and
add
sub
mov
xchg
ret
cmp
in
cmp
add
in
insl
push
clc
repnz
nop
nop
jae
push
fcoml
add
outsb
add
add
es
mov
clc
repnz
nop
nop
jae
add
adc
dec
dec
adc
xor
clc
repnz
nop
nop
jae
push
xor
add
add
xor
jp
mov
nop
push
mov
leave
nop
jmp
lea
fdivl
add
std
test
nop
push
mov
leave
nop
jmp
add
repnz
clc
repnz
nop
nop
jae
add
add
add
add
xor
mov
leave
nop
jmp
add
add
add
xor
add
mov
loopne
repnz
nop
nop
jae
adc
pop
lea
sub
jo
mov
clc
repnz
nop
nop
jae
adc
add
pop
pop
push
mov
xchg
ret
add
repnz
faddl
mov
cmp
adc
add
nop
jmp
sbbb
das
in
mov
lods
clc
repnz
nop
nop
jae
data16
add
add
outsb
xchg
add
call
clc
repnz
nop
nop
jae
dec
add
insl
cmp
add
and
add
add
les
mov
xchg
ret
adc
add
add
sub
adc
nop
push
mov
leave
nop
jmp
add
add
add
loop
lret
add
mov
clc
repnz
nop
nop
jae
fcompl
xchg
add
pop
add
push
fmuls
mov
push
mov
xchg
ret
sbb
mov
add
add
lret
in
inc
cmp
mov
xchg
ret
add
jg
add
add
add
push
jl
sbb
cld
nop
nop
jae
pop
das
add
push
add
iret
shr
clc
repnz
nop
nop
jae
dec
dec
add
gs
add
jg
push
push
mov
xchg
ret
outsb
add
dec
adc
and
rclb
loop
inc
add
add
add
pop
xchg
gs
shr
clc
repnz
nop
nop
jae
add
cmp
cli
adc
jns
clc
repnz
nop
nop
jae
pop
dec
add
pop
push
lret
jg
repnz
repnz
nop
nop
jae
add
add
xor
add
dec
nop
push
mov
leave
nop
jmp
in
insl
add
add
fsubrl
repnz
nop
nop
jae
and
add
add
add
test
pop
cmp
repnz
nop
nop
jae
dec
and
push
repnz
pop
call
nop
push
mov
leave
nop
jmp
add
add
insl
push
add
cld
clc
repnz
nop
nop
jae
data16
add
and
in
outsl
mov
je
clc
repnz
nop
nop
jae
lea
add
test
push
mov
xchg
ret
loope
add
loope
add
add
nop
nop
jae
dec
lea
add
pop
add
pop
add
test
cld
nop
nop
jae
jo
adc
add
add
add
clc
repnz
nop
nop
jae
add
push
add
add
adc
and
mov
leave
nop
jmp
add
add
cmp
pop
clc
repnz
nop
nop
jae
cmp
add
sbb
in
test
rorl
repnz
nop
nop
jae
add
loope
xor
jg
lea
aas
popa
clc
repnz
nop
nop
jae
sub
testb
pop
add
das
shr
nop
push
mov
leave
nop
jmp
outsb
insl
jp
cmp
dec
xor
nop
push
mov
leave
nop
jmp
add
cmp
pop
pop
pop
push
mov
xchg
ret
add
jg
add
add
rclb
jge
add
dec
addb
pop
mov
mov
nop
nop
jae
adc
das
add
sub
dec
in
add
add
cmp
nop
push
mov
leave
nop
jmp
sbb
fdivrl
das
and
push
lahf
call
clc
repnz
nop
nop
jae
xchg
add
add
addb
push
xchg
add
inc
mov
xchg
add
nop
push
mov
leave
nop
jmp
sldt
insl
add
add
push
nop
push
mov
leave
nop
jmp
and
add
gs
aam
mov
clc
repnz
nop
nop
jae
add
and
add
add
add
xchg
fistpl
clc
repnz
nop
nop
jae
in
addb
sub
adc
sbb
repnz
nop
nop
jae
dec
sbb
add
negb
loope
dec
push
fldenv
nop
push
mov
leave
nop
jmp
add
add
add
cmp
std
adc
add
repnz
nop
nop
jae
pop
outsl
add
int
dec
push
clc
repnz
nop
nop
jae
and
add
dec
add
incl
and
cld
nop
nop
jae
pop
jne
add
gs
add
test
mov
xchg
ret
jne
add
popl
outsb
cmp
sar
repnz
nop
nop
jae
insw
add
adc
and
push
add
nop
nop
jae
dec
sub
push
add
add
test
add
clc
repnz
nop
nop
jae
xchg
faddl
add
add
add
add
add
clc
repnz
nop
nop
jae
add
insl
jp
add
and
les
push
mov
xchg
ret
add
add
add
loope
stos
clc
repnz
nop
nop
jae
and
add
test
add
add
mov
push
mov
xchg
ret
push
push
add
add
jo
add
aaa
push
push
mov
xchg
ret
add
add
add
stc
push
push
mov
xchg
ret
adc
add
loope
cmp
cmc
jmp
jo
add
adc
jg
add
add
jne
sbb
clc
repnz
nop
nop
jae
sbb
push
pop
sub
and
sbb
xchg
addl
andl
decl
add
and
add
add
dec
or
add
add
clc
repnz
nop
nop
jae
cmp
adc
hlt
movsl
jne
clc
repnz
nop
nop
jae
add
add
add
add
xchg
je
sahf
xchg
jmp
jb
add
add
mov
pop
add
add
sbb
xor
stos
clc
repnz
nop
nop
jae
add
jp
and
je
pop
ja
clc
repnz
nop
nop
jae
push
dec
add
push
xor
fwait
xchg
xchg
clc
repnz
nop
nop
jae
add
loop
in
add
add
pop
je
clc
repnz
nop
nop
jae
xchg
add
lea
pop
sub
mov
cld
nop
nop
jae
fmull
insl
add
adc
and
add
add
or
cld
nop
nop
jae
in
fcompl
add
add
outsb
pop
rep
clc
repnz
nop
nop
jae
idivb
add
add
jp
add
clc
repnz
nop
nop
jae
add
data16
faddl
and
add
popa
mov
clc
repnz
nop
nop
jae
outsb
add
sbb
push
push
jo
dec
nop
push
mov
leave
nop
jmp
add
xor
add
pop
add
outsb
popf
xchg
clc
repnz
nop
nop
jae
add
cmp
outsb
popl
ljmp
les
inc
push
mov
xchg
ret
outsl
dec
add
add
add
pushl
repz
mov
add
add
mov
jge
sbb
lcall
add
mov
push
clc
repnz
nop
nop
jae
add
sbb
jecxz
jne
push
mov
xchg
ret
and
add
add
adc
jnp
add
add
add
add
add
add
xchg
nop
nop
jae
xor
testb
jp
adc
pop
push
mov
xchg
ret
xor
add
adc
add
in
add
fistpl
clc
repnz
nop
nop
jae
add
add
cmp
pop
pop
mov
clc
repnz
nop
nop
jae
jo
add
sahf
xor
mov
ret
clc
repnz
nop
nop
jae
jg
add
push
add
add
mov
xchg
ret
loope
sub
lea
push
test
pop
dec
repnz
mov
push
nop
push
mov
leave
nop
jmp
xor
add
jo
add
add
sti
sub
nop
push
mov
leave
nop
jmp
add
lret
add
daa
fld1
clc
repnz
nop
nop
jae
add
incl
add
mov
jnp
rcrb
repnz
nop
nop
jae
add
cmp
loop
loope
clc
repnz
nop
nop
jae
add
cmp
orb
adc
inc
clc
repnz
nop
nop
jae
add
add
dec
dec
test
shlb
sub
repnz
nop
nop
jae
das
add
cmp
add
pop
add
inc
cmp
nop
push
mov
leave
nop
jmp
sbb
add
add
jno
push
mov
xchg
ret
data16
cmp
gs
add
add
add
fistl
mov
xchg
ret
add
mov
add
stos
sbb
push
sub
mov
sub
test
repnz
nop
nop
jae
mov
sbb
loope
add
add
add
cld
nop
nop
jae
dec
add
add
pop
adc
outsb
jne
sub
add
add
shrb
cld
nop
nop
jae
popl
add
add
in
add
push
mov
xchg
ret
dec
jne
add
pop
pop
add
mov
clc
repnz
nop
nop
jae
test
pop
add
add
add
clc
repnz
nop
nop
jae
in
add
add
add
xchg
mov
clc
repnz
nop
nop
jae
add
addb
add
and
push
das
popa
clc
repnz
nop
nop
jae
add
add
lea
jne
jg
test
sbb
nop
nop
jae
insl
loop
cmp
mov
add
inc
push
mov
xchg
ret
sub
add
add
sbb
cmp
push
mov
xchg
ret
add
add
add
jo
add
clc
repnz
nop
nop
jae
test
pop
cmp
cmp
mov
xchg
ret
add
add
lea
sub
xchg
add
xchg
fisttpl
pop
inc
add
add
das
mov
add
xor
sar
clc
repnz
nop
nop
jae
lret
add
add
clc
repnz
nop
nop
jae
add
das
xorb
sbb
pop
add
mov
repnz
nop
nop
jae
add
pop
mov
pop
loop
faddl
push
jne
jne
clc
repnz
nop
nop
jae
pop
cmp
add
stc
add
clc
repnz
nop
nop
jae
add
add
data16
rep
nop
push
mov
leave
nop
jmp
add
dec
cmp
add
add
add
in
leave
nop
jmp
jp
dec
test
add
add
xor
dec
mov
mov
clc
repnz
nop
nop
jae
mov
xor
adc
push
clc
repnz
nop
nop
jae
jo
adc
add
sub
sbb
pop
hlt
jne
repz
mov
xchg
ret
add
add
adc
in
add
xor
cld
nop
nop
jae
add
in
add
dec
mov
repnz
nop
nop
jae
push
add
test
adc
nop
push
mov
leave
nop
jmp
add
adc
orb
xchg
push
jne
clc
push
mov
xchg
ret
xchg
pop
add
push
add
add
pop
add
add
clc
repnz
nop
nop
jae
add
cmp
dec
sbb
xchg
clc
repnz
nop
nop
jae
faddl
loop
and
sbb
pop
dec
add
push
push
mov
xchg
ret
add
insl
xchg
sub
add
test
mov
nop
nop
jae
dec
add
and
in
cmp
pop
adc
stos
push
mov
xchg
ret
testb
pop
pop
add
add
xor
add
add
push
mov
xchg
ret
cmp
dec
pshufw
in
dec
add
add
add
mov
lock
mov
add
clc
repnz
nop
nop
jae
pop
add
rolb
lea
nop
push
mov
leave
nop
jmp
dec
push
outsb
add
add
pcmpeqd
rclb
popa
jp
add
add
notb
push
add
rcll
mov
xchg
ret
jne
cmp
add
add
addb
dec
es
addl
cmp
ret
add
jp
add
adc
add
imul
call
add
add
push
loopne
testl
nop
push
mov
leave
nop
jmp
dec
sbb
add
data16
sbb
cmp
repnz
nop
nop
jae
ud0
add
add
in
leave
push
mov
xchg
ret
add
in
add
lahf
adc
add
cmp
cld
nop
nop
jae
pop
jo
add
add
jo
decl
push
inc
add
add
add
pop
testb
add
add
clc
repnz
nop
nop
jae
fsub
add
add
sbb
fld1
clc
repnz
nop
nop
jae
dec
add
add
das
add
mov
clc
repnz
nop
nop
jae
cmp
mov
mov
sbb
in
leave
nop
jmp
cmp
add
in
addb
insb
inc
add
pop
addb
add
insl
and
push
clc
repnz
nop
nop
jae
add
add
add
adc
repnz
nop
nop
jae
pop
add
add
outsb
jg
xor
mov
cld
nop
nop
jae
and
sbb
add
cmp
mov
clc
repnz
nop
nop
jae
cmp
jg
test
add
add
leave
push
nop
push
mov
leave
nop
jmp
add
add
xchg
cmp
add
jmp
and
repnz
nop
nop
jae
xor
pop
add
sub
add
add
add
jo
add
repnz
nop
nop
jae
add
add
add
cmp
test
push
mov
leave
nop
jmp
xor
pop
add
jg
add
add
mov
cld
nop
nop
jae
add
pop
pop
jg
cmp
add
add
repnz
nop
nop
jae
add
and
in
test
pop
clc
repnz
nop
nop
jae
add
add
sbb
and
add
nop
nop
jae
outsl
cmp
call
sbb
popa
push
mov
xchg
ret
mov
add
add
in
add
das
push
clc
repnz
nop
nop
jae
add
add
lea
outsb
add
add
cmpsb
push
int3
push
mov
clc
repnz
nop
nop
jae
push
lahf
loop
pop
repnz
mov
clc
repnz
nop
nop
jae
outsl
add
cmp
lret
add
clc
repnz
nop
nop
jae
dec
test
and
add
add
repnz
nop
nop
jae
repnz
adc
in
in
xor
mov
nop
push
mov
leave
nop
jmp
cmp
add
pop
add
pusha
mov
add
or
add
add
add
mov
cmp
ret
add
cmp
add
xor
fcoml
add
pusha
add
add
sahf
mov
add
clc
repnz
nop
nop
jae
and
pop
pop
sbb
add
das
add
shr
clc
repnz
nop
nop
jae
sub
add
in
add
add
push
clc
repnz
nop
nop
jae
pop
adc
add
add
add
add
add
push
mov
xchg
ret
add
cmp
jg
jp
dec
insl
add
add
add
cmp
in
leave
nop
jmp
lahf
dec
addb
add
mov
clc
repnz
nop
nop
jae
push
pop
pop
add
add
mov
cld
nop
nop
jae
jne
cmp
addb
add
dec
add
add
insl
xor
nop
push
mov
leave
nop
jmp
add
lea
out
clc
repnz
nop
nop
jae
movntps
add
lahf
add
push
push
mov
in
add
add
add
fiadds
rolb
add
inc
inc
push
xor
add
cmp
mov
xchg
ret
testb
mov
mov
lret
lcall
nop
jae
sbb
add
pop
add
pop
add
in
ret
fistpl
push
mov
xchg
ret
mov
dec
ud0
and
clc
repnz
nop
nop
jae
add
add
dec
cmp
push
lcall
mov
xchg
ret
add
add
loop
add
jo
mov
clc
repnz
nop
nop
jae
push
jg
add
add
add
xor
jo
fldl
sbb
cmp
ret
jg
insl
fsub
verr
adc
fistl
cld
nop
nop
jae
dec
add
mov
add
add
add
repnz
nop
nop
jae
cmp
cmpb
sbb
in
cmpl
jae
adc
add
add
inc
and
repnz
nop
nop
jae
sbb
add
in
sbb
add
sbb
nop
jae
add
add
xor
add
in
push
mov
xchg
ret
pop
dec
dec
add
add
loop
testb
adc
mov
call
clc
repnz
nop
nop
jae
add
xor
mov
into
call
mov
leave
nop
jmp
add
cmp
add
dec
jle
mov
push
mov
xchg
ret
add
pop
add
cmp
verr
lock
sub
clc
repnz
nop
nop
jae
cmp
push
add
pop
adc
sbb
and
jno
out
rol
dec
jnp
mov
lea
cli
enter
clc
repnz
nop
nop
jae
add
pop
sub
add
test
scas
jne
clc
repnz
nop
nop
jae
jo
cmp
test
push
mov
xchg
ret
add
add
jo
jne
add
je
clc
repnz
nop
nop
jae
mov
pop
jo
fld1
push
mov
xchg
ret
add
add
pop
add
add
das
rclb
add
clc
repnz
nop
nop
jae
add
adc
inc
mov
clc
repnz
nop
nop
jae
add
incl
cld
nop
nop
jae
add
mov
and
add
mov
add
add
nop
nop
jae
sbb
xor
add
add
pop
cmp
pop
clc
repnz
nop
nop
jae
jg
add
xor
add
add
adc
pop
jae
repnz
nop
nop
jae
add
add
add
add
cmp
push
mov
xchg
ret
add
pop
xor
lea
rorl
cld
nop
nop
jae
add
add
add
test
sbb
mov
xchg
ret
sbb
add
add
push
mov
xchg
ret
add
push
add
add
mov
jno
clc
repnz
nop
nop
jae
jne
testb
lahf
add
xor
xchg
mov
jmp
inc
add
add
add
dec
popl
outsl
add
lock
pusha
clc
repnz
nop
nop
jae
add
ltr
add
add
pop
add
in
leave
nop
jmp
sbb
add
ljmp
inc
inc
push
mov
xchg
ret
outsb
and
add
add
loope
cmc
fistpl
push
mov
xchg
ret
adc
add
cmp
add
std
push
push
mov
xchg
ret
add
add
data16
add
addb
lods
cmpl
nop
push
mov
leave
nop
jmp
add
lret
or
add
add
repnz
nop
nop
jae
add
repnz
cmp
and
pop
fmull
repnz
nop
nop
jae
cmp
add
jp
in
jg
xor
mov
xchg
ret
test
sbb
adc
mov
cld
nop
nop
jae
add
xor
cmp
inc
pop
clc
repnz
nop
nop
jae
mov
add
addb
jg
push
add
push
push
mov
xchg
ret
and
and
add
test
mov
cld
nop
nop
jae
jg
add
add
testb
nop
nop
jae
das
lret
add
loope
dec
add
adc
add
repnz
nop
nop
jae
add
adc
je
clc
repnz
nop
nop
jae
lret
pop
add
xchg
jo
clc
in
pop
nop
push
mov
leave
nop
jmp
add
add
add
add
outsw
add
cmp
nop
push
mov
leave
nop
jmp
mov
popl
dec
add
add
add
add
xor
push
mov
xchg
ret
dec
xor
add
add
dec
add
lea
cld
nop
nop
jae
das
add
in
add
add
inc
pop
clc
repnz
nop
nop
jae
add
add
add
add
adc
mov
push
mov
xchg
ret
add
pop
add
andb
push
mov
xchg
ret
xor
xor
testb
add
dec
add
add
mov
sub
repnz
nop
nop
jae
add
add
add
pop
add
mov
add
add
mov
add
stc
xchg
add
cmp
push
nop
push
mov
leave
nop
jmp
add
add
add
paddb
mov
clc
repnz
nop
nop
jae
add
add
pop
in
add
add
add
nop
nop
jae
testb
add
adc
jne
stos
fdivl
add
outsb
popa
cli
sbb
sbb
cs
push
sub
add
xchg
ja
lock
add
add
or
lods
pop
aam
and
add
add
mov
push
test
add
out
dec
pop
call
pop
int3
outsb
out
fucomp
fldenv
push
dec
mov
clc
fildll
dec
hlt
cmp
jb
ljmp
pop
mov
xchg
add
add
add
pop
lahf
daa
pop
aam
cltd
pop
mov
push
jg
inc
shlb
push
cmp
add
add
outsl
fwait
xchg
in
jae
jg
xchg
cli
pop
dec
push
es
add
add
and
jg
popf
sub
xchg
xchg
inc
inc
std
loopne
in
push
push
sbb
nop
mov
ss
cmc
add
scas
or
push
mov
add
add
sbb
lds
jp
stc
mov
ret
cmpsl
shr
sub
loope
roll
leave
jp
in
dec
mov
add
add
add
cmc
test
aas
pop
repnz
cmpb
jg
outsl
pop
scas
loop
imul
cmpsl
je
push
ds
pop
or
test
add
cmp
mov
push
xlat
xchg
dec
add
add
in
add
add
push
fadd
jb
xor
sbb
push
jle
and
cmp
bound
in
adc
repnz
stos
hlt
hlt
rorl
in
hlt
fsubs
mov
sub
add
add
test
add
add
add
push
sbb
add
fistl
sbb
mov
add
add
pop
stc
outsb
jne
pusha
add
add
in
std
xchg
sbb
adc
rorl
jnp
xchg
outsl
inc
into
sahf
cwtl
enter
cmpsl
dec
in
movb
cmp
add
add
movsl
jns
outsb
fs
jb
push
adc
pop
add
fisubs
add
add
cmp
jmp
add
add
cmp
and
inc
add
add
mov
lcall
add
add
mov
pop
outsb
sbb
mov
add
in
inc
cmc
mov
pop
mov
or
lea
cli
cld
cmp
xor
loop
aad
mov
add
add
or
add
add
aam
sub
mov
pop
inc
mov
sbb
mov
fwait
sub
add
add
add
imul
sbb
into
pushf
sub
paddsw
subl
xor
dec
jae
mov
cmc
jg
in
cmpsl
mov
stos
cmp
rorl
add
add
lock
jbe
ds
jp
jns
aaa
testl
stc
ret
js
jns
fdivrs
or
mov
jge
inc
pop
shl
jmp
inc
push
loopne
add
add
add
xlat
push
sbb
or
add
add
add
enter
flds
rorl
inc
dec
add
add
stc
je
inc
aaa
cltd
sub
add
add
sti
ret
mov
lods
cmpsl
test
test
inc
add
add
dec
mov
pop
arpl
xor
jo
dec
cli
mov
or
add
add
cld
test
pushf
pop
push
dec
cltd
dec
inc
add
add
push
push
int3
test
push
cmpsb
cltd
test
mov
add
add
test
lods
jg
repnz
and
add
add
pusha
add
add
or
jo
push
inc
lret
movsb
sbb
call
dec
mov
pushf
dec
adc
mov
testb
adc
addb
sub
xor
jno
seta
add
add
add
mov
pop
xchg
fimull
ljmp
sarl
push
stos
sub
add
daa
pop
xchg
push
mov
xchg
push
ret
jmp
mov
xor
test
cmp
xor
cmpsl
in
inc
jmp
add
or
add
out
bound
adc
rcll
btr
add
add
ja
inc
jbe,pn
add
pusha
add
add
stos
sub
push
shll
push
cmp
addr16
or
add
add
scas
push
clc
jg
sti
mov
xchg
call
add
fucomip
jle
gs
push
fidivrs
add
sbb
add
add
je
or
int
sahf
mov
push
aaa
pop
jo
dec
cmpsb
orb
cwtl
mov
icebp
ss
inc
inc
popa
pop
or
add
add
pop
pop
adc
repz
cmp
cltd
adcl
inc
add
add
out
out
in
jecxz
mov
add
add
jns,pn
sub
movsl
add
bound
test
pop
xor
stos
fdivr
insb
add
add
xor
sub
ja
stos
push
mov
sbb
add
xor
add
add
mov
mov
int3
xchg
cmp
or
xchg
hlt
pushl
cmc
cli
push
mov
test
mov
data16
cmpb
mov
js
jg
push
ljmp
cli
cs
and
outsl
popa
push
jb
xchg
push
cmpsb
dec
mov
cmc
sbbl
mov
sub
mov
fwait
inc
divl
add
pop
idiv
adc
fdivs
test
roll
mov
out
add
add
std
jle
bound
repnz
xor
sti
fidivrs
add
jae
fbld
and
aas
ret
push
shll
int
mov
xchg
pop
jnp
push
shll
or
adc
pop
pop
stos
sti
dec
or
push
mov
call
aas
rcrl
mov
add
add
add
cmc
pop
test
pushf
aaa
jno
aad
subb
aam
mov
add
add
and
add
adc
dec
clc
sub
add
add
mov
das
push
adc
int
aad
ret
mov
out
pop
lds
add
and
imull
cmp
add
add
push
inc
cmp
out
pusha
add
add
and
add
add
xchg
imul
add
add
out
fnsave
or
sub
int3
sbbl
shlb
fstpt
push
cwtl
fs
cmc
fadds
int3
popf
imul
and
sbbl
insl
push
mov
jle
mov
dec
es
subl
add
jns
adcb
icebp
int3
int
jns
sub
push
pop
int
sarb
stc
xor
out
mov
repz
sbb
adc
lret
int
add
add
push
icebp
mov
ffree
jns
mov
add
jnp
add
add
add
aad
jmp
ret
add
cltd
mov
add
add
and
ljmp
add
repz
test
xor
add
add
insb
mov
leave
adc
aad
testl
cmpl
repnz
jmp
mov
xchg
icebp
and
adc
and
lock
subl
jo
xor
jmp
sbb
repz
jl
xor
adc
loop
mov
stc
popa
sbb
dec
adc
cmp
add
divl
pop
push
addr16
jl
push
or
idivb
in
aam
fimuls
mov
sbb
js
add
add
jecxz
xor
outsb
idivb
test
xchg
mov
mov
pop
arpl
add
add
or
add
add
pushf
and
jge
push
add
ret
insb
mov
sbbl
add
add
add
rcrb
jle
arpl
test
cmp
mov
cwtl
es
dec
scas
inc
push
in
or
add
add
add
mov
stc
gs
arpl
push
push
add
add
add
rolb
in
filds
and
icebp
or
add
add
add
mov
add
enter
sub
add
push
cltd
jge
push
jp
imul
movb
inc
mov
ret
ret
inc
jl
das
fdivrs
mov
cmp
and
lock
cs
jnp
add
add
jl
and
add
add
fldl
adcl
push
and
js
test
nop
jae
or
add
add
enter
or
add
add
std
sub
add
in
cld
imul
add
popa
jno
sbb
pop
mov
add
add
adc
sub
add
xchg
sub
xchg
dec
stos
push
mov
adc
jp
rcl
loope
dec
aam
xchg
mov
bound
mov
add
add
repz
in
test
sbb
sbb
jns
in
or
loop
and
add
add
inc
mov
movb
add
push
aad
cmpsb
loope
jp
lds
pusha
add
add
enter
jecxz
add
adc
push
dec
mov
mov
outsb
in
imulb
push
cmp
pop
jns
arpl
fwait
push
xlat
ja
dec
mov
gs
pop
mov
pop
sub
mov
mov
ret
jle
mov
add
lret
insb
mov
mov
add
sub
adc
or
jnp
add
add
ja
jns
scas
int
sbb
xor
xlat
mov
add
loopne
enter
popa
notl
incl
add
add
and
sub
add
add
lods
nop
xchg
fucomip
mov
jo
pop
fdivrl
cmp
loop
add
add
sbb
mov
mov
loope
and
sub
add
sub
add
add
fwait
mov
pop
cmp
lahf
test
or
mov
call
add
jo,pn
add
add
loopne
dec
mov
xadd
dec
mov
mov
insl
lahf
stos
sahf
shll
mov
mov
add
add
dec
xchg
jmp
fs
dec
test
pop
xchg
and
add
add
xor
hlt
xor
dec
mov
adc
add
add
mov
in
pop
inc
mov
out
sub
and
add
add
sbb
jmp
sub
imul
add
add
imul
add
add
gs
mov
add
add
sub
add
add
xor
fistl
subl
fstps
in
gs
dec
and
int
cmpsl
cs
dec
or
add
add
add
fs
push
push
and
add
add
cmp
arpl
cmp
mov
rorb
and
mov
test
add
add
in
inc
xor
mov
add
iret
mov
add
push
or
add
rcr
js
repz
bound
add
add
push
addb
jbe
mov
daa
xor
pop
out
das
add
add
add
push
mov
mov
add
jle
cmp
sbb
popa
loope
in
roll
adc
xchg
das
jle
sti
call
pop
sbb
dec
xor
push
lock
add
add
pusha
add
add
cmc
mov
test
add
into
adc
pop
push
test
and
cmp
add
add
data16
pushf
mov
cmp
mov
stos
and
jle
mov
and
add
add
push
data16
add
add
add
inc
adc
mov
imul
add
cld
in
aas
jae
xor
popf
dec
mov
mov
add
add
mov
add
mov
jae
sbb
cmp
push
pop
imul
mov
mov
sub
add
add
nop
clc
jno
scas
sub
add
add
xchg
in
int
xor
imul
pop
out
push
cmp
mov
or
movsl
mov
dec
out
enter
les
shrb
repnz
pop
mov
pushf
inc
sbb
xchg
test
addr16
hlt
pop
inc
mov
test
mov
add
add
fisubrs
sub
add
add
fisttpl
add
mov
lods
iret
mov
add
push
int3
adc
out
xor
mov
lret
lea
into
mov
mov
mov
stc
mov
add
lds
jno
out
fdivr
adcb
mov
adc
nop
and
add
add
and
sbb
inc
into
bound
xchg
xor
sub
push
and
mov
add
fbld
inc
add
add
and
inc
fsubrl
xor
sub
cltd
mov
mov
xchg
add
adc
test
pop
dec
jp
sbb
sub
add
add
sub
add
add
xor
sub
add
add
add
das
add
pop
jno
and
outsb
jle
es
movsl
push
scas
imul
insb
mov
or
add
add
fs
popl
and
xchg
pop
sbb
sti
and
inc
inc
mov
lcall
cltd
int
cmp
jmp
rcrl
jmp
stos
fdivl
or
add
add
add
ljmp
xor
es
mov
iret
and
add
add
lock
into
pushf
push
or
xor
fwait
fwait
xor
rcrb
cltd
sti
inc
popl
push
les
clc
pop
lcall
add
add
pushf
push
aam
mov
inc
xor
enter
sub
add
add
lea
add
add
pop
add
mov
shrb
cmp
dec
std
das
pop
insl
scas
inc
add
add
mov
xor
lret
dec
inc
mov
push
insb
add
add
mov
sub
add
adc
adc
mov
push
js
aam
push
out
push
inc
movsl
lock
add
add
mov
test
roll
jg
sub
ja
add
add
xor
adc
into
or
add
mov
push
add
add
rolb
fdivp
hlt
leave
jg
rcrl
and
add
add
dec
mov
adc
out
sbb
lcall
add
or
add
add
rcr
lret
jp
test
mov
mov
push
jo
or
arpl
or
out
mov
loop
test
stos
push
sbb
sahf
cmp
and
xor
loop
add
add
add
cs
sub
sti
jle
cmp
sahf
cmpsb
mov
xor
and
add
add
mov
cwtl
js
add
lret
mov
in
adc
rcr
popf
dec
mov
push
sbb
add
lock
adc
addr16
xchg
xchg
rcr
sbb
mov
outsl
popf
jae
mov
mov
pop
mov
insl
inc
xchg
cmp
xchg
add
add
add
ret
cltd
mov
aam
ss
aam
xor
lea
add
add
inc
es
dec
adc
imul
or
aad
sbb
dec
add
add
roll
or
mov
mov
sahf
popa
or
out
push
jns
aaa
and
add
add
mov
inc
int3
fimull
add
add
pop
and
mov
imul
lock
sub
add
add
pop
test
xor
sbb
add
lods
mov
pop
cmp
leave
or
hlt
pop
cmp
sbb
cmp
cmp
xchg
fdivl
fsts
xchg
fnstcw
mov
add
sub
out
xchg
lcall
adc
cmp
pop
mov
pop
and
cmp
mov
push
fisttps
fs
add
add
dec
add
add
subl
add
mov
bound
sahf
jne
jbe
mov
pop
add
sub
inc
loopne
call
dec
ja
xchg
fcoml
lea
aad
testl
add
cs
adc
push
xor
cmp
in
jo
ret
push
pop
and
fmul
das
cmp
push
pop
mov
add
add
imul
jbe
inc
out
add
xor
out
aas
into
and
sbb
mov
push
popa
inc
pop
mov
fistpll
movsb
ss
ja
cmpsl
or
mov
movsb
mov
jo
iret
cmp
sbb
jno,pt
jno
ret
xor
cmp
daa
js
add
add
ficomps
add
add
jne
push
ja
mov
cld
int
out
stos
imul
popa
pop
mov
xor
cmp
scas
leave
jge
repz
repz
mov
add
lds
inc
mov
push
scas
pop
repnz
adc
mov
mov
bound
inc
mov
js
das
sahf
repnz
in
mov
sub
xor
sbb
jmp
add
add
jmp
inc
add
add
adc
loop
pop
jle
xor
or
add
add
jecxz
inc
jno
xchg
outsl
jne
hlt
jnp
pop
mov
scas
lods
cmp
ds
ja
fmull
add
repz
mov
dec
adc
mov
mov
mov
push
test
and
cltd
movsb
lret
cmp
jg
testl
add
aam
dec
jb
sub
add
add
add
push
lret
scas
push
loopne
stos
lahf
loopne
mov
mov
outsb
pop
int3
sti
imul
sbb
add
in
add
scas
ret
fs
inc
subps
aad
bsf
cmpsl
into
inc
push
fwait
shrl
jg
mov
jg
mov
js
mov
shr
icebp
or
xor
and
icebp
mov
dec
hlt
pop
jns
sbb
add
add
or
or
lcall
xchg
movsb
fcompl
dec
add
add
stos
in
aad
repnz
pop
push
jns
add
add
push
pop
jne
mov
xchg
xor
mov
aam
add
add
adc
jge
mov
mov
in
pop
enter
jp
adc
push
sahf
data16
xchg
mov
mov
movsl
sbb
pop
dec
dec
sar
pushf
push
add
scas
sbb
mov
and
add
add
nop
shll
xchg
es
lds
mov
sbbb
push
push
sbb
pop
repz
xchg
jno
mov
imul
pop
cmpsl
mov
out
or
add
add
mov
lea
cmc
jg
icebp
mov
arpl
loop
xorl
jl
out
lods
jp
pop
push
or
add
add
xor
mov
add
inc
pop
sti
mov
hlt
inc
test
adc
clc
inc
test
test
cwtl
jmp
adc
dec
fisttpll
ljmp
out
lahf
scas
xor
data16
bound
mov
xchg
xor
xchg
mov
add
add
mov
lret
mov
push
adc
or
idivb
negl
sub
sbb
les
xor
sub
add
add
fstpt
jo
rcl
cmp
fwait
mov
xor
xchg
loopne
xchg
inc
movsl
sub
sbb
into
pushl
xchg
xchg
pop
adc
push
std
loope
ror
adc
add
add
mov
mov
push
aaa
adc
mov
jne
adc
jmp
jl
daa
int3
syscall
jno
pop
into
cmp
jmp
jg
testl
mov
arpl
xor
clc
jle
fadds
sub
add
add
fstp
jl
jne
je
push
adc
fisubl
push
xor
cmc
rorb
fs
shrl
xchg
in
lea
xchg
inc
in
rorl
outsl
loop
xor
push
mov
loope
mov
out
jecxz
testb
add
imul
cmpsb
adc
std
imul
addr16
mov
neg
jp
or
test
loopne
mov
jl
out
outsb
clc
sbb
pop
ljmp
inc
idivb
push
ds
in
ljmp
jno
fcoms
add
inc
aam
mov
sbb
sahf
dec
ds
cld
call
add
xchg
imulb
jle
loope
or
jecxz
lret
cltd
gs
shrb
mov
ja
dec
dec
stc
mov
mov
push
xchg
jo
mov
hlt
adc
cmp
loopne
jnp
mov
mov
dec
mov
jbe
scas
imul
shll
and
jns
xchg
insl
enter
dec
out
rorl
add
pop
xor
mov
adc
in
nop
std
or
add
add
test
cmp
shlb
mov
cs
call
pop
jp
lahf
out
cmp
add
add
clc
or
add
cli
cmpsl
mov
or
adc
cmpsl
push
and
add
add
mov
inc
xchg
scas
adc
bound
xor
loopne
sub
add
add
push
add
xor
mov
inc
add
add
push
cmp
cmp
push
movsb
shll
sbb
test
inc
outsl
rcll
pop
rcll
cld
sbb
movsl
mov
ja
add
xor
fnstcw
cmp
xchg
sbb
fdecstp
jae
ds
sbb
or
jecxz
dec
push
sbb
mov
mov
and
add
jl
test
push
inc
mov
out
push
xchg
pop
sub
add
add
mov
sahf
cmp
inc
jle
mov
add
test
jle
mov
cmp
push
mov
add
sub
imul
adc
push
popa
pop
or
popf
xor
add
add
loopne
add
add
lea
lods
stos
xlat
int
mov
jae
je
daa
mov
xchg
and
xchg
addb
add
repnz
pushf
mov
scas
insb
mov
test
xchg
jl
add
ds
push
adc
jo
mov
jecxz
pop
or
add
add
sbb
adc
inc
xor
jmp
adc
jne
cmp
jmp
rcrl
mov
xchg
pop
test
adc
mov
lea
fstp
pop
lahf
pop
push
dec
push
jbe
xor
adc
mov
leave
movsb
imul
imul
and
jp
sbb
add
add
or
mov
aam
cmpl
jb
cs
ret
mov
add
fwait
mov
mov
add
add
jmp
dec
add
add
repnz
ljmp
dec
in
mov
sahf
insl
je
in
cli
jmp
mov
mov
xchg
push
mov
push
sbb
int3
sbb
mov
mov
or
sub
lock
aas
fwait
aas
pop
inc
mov
add
add
frstor
lods
ja
adc
cmpsb
sub
add
add
add
jmp
movsl
test
push
cltd
ja
test
mov
pop
incb
xchg
mov
std
mov
push
sub
add
add
es
scas
xor
arpl
push
jo
js
inc
mov
mov
add
add
jbe
sbb
lods
adc
hlt
aas
fcmovnb
inc
add
add
cmp
inc
fistpll
rcll
std
pop
out
lods
shlb
push
lret
test
add
inc
add
add
scas
mov
out
mov
fcmovu
mov
push
aas
push
fmuls
and
add
add
dec
mov
outsl
and
add
fildll
mov
push
cmp
out
xchg
das
cmp
push
gs
jecxz
add
add
lret
fcoml
das
test
sub
pusha
mov
push
xor
ds
xor
inc
aad
fsubrl
es
inc
pop
adc
jmp
add
add
dec
push
test
lods
mov
jbe
add
push
add
add
test
mov
addr16
push
cmpsb
test
add
add
in
ja
mov
lods
fbstp
scas
add
add
jnp
leave
jb
ss
ret
pop
xchg
icebp
movsb
pop
rcll
mov
dec
daa
mov
gs
and
xchg
addr16
dec
xchg
cltd
lods
or
add
push
push
aam
arpl
add
and
inc
sbb
mov
add
xchg
xchg
sub
inc
mov
adc
xchg
add
insl
mov
test
shlb
addr16
shlb
inc
add
add
iret
les
add
lcall
add
or
imul
xorl
mov
xchg
cmc
vmwrite
or
daa
decl
push
imul
pop
sbb
shrl
add
pop
adc
add
jns
inc
mov
mov
add
add
fdivrs
mov
xchg
outsb
xchg
fmull
add
add
sahf
stos
push
sbb
mov
ljmp
push
inc
add
add
mov
repnz
add
add
js
scas
cltd
sub
jno
pushf
pop
inc
mov
xchg
inc
es
lea
add
add
sarb
mov
aad
sbb
dec
sub
add
add
add
add
jp
adc
dec
dec
mov
lds
add
add
add
jecxz
andl
add
add
loop
dec
mov
lret
shrb
iret
cltd
mov
jle
lret
mov
mov
cmp
sub
add
add
mov
inc
pop
xchg
inc
testb
dec
jo
mov
cmp
or
and
add
add
les
movsb
mov
jle
mov
push
movsb
add
add
add
sub
push
imull
add
test
jb
push
ret
test
add
add
stos
inc
dec
mov
jbe
cltd
icebp
aaa
push
dec
add
add
pop
and
add
add
je
jno
xchg
jns
fstpl
mov
lret
std
loope
add
add
js
xchg
adc
add
add
add
add
add
cwtl
std
and
adc
inc
add
xor
add
add
push
or
add
add
rcr
cmpsl
mov
gs
mov
pop
mov
sbb
add
fwait
test
fildl
cmp
sub
add
add
lahf
push
ret
push
loope
or
mov
lret
in
dec
and
sub
add
add
scas
in
cltd
sub
dec
int3
jmp
lock
add
add
dec
mov
leave
cmpsb
jnp
andb
stos
loope
jecxz
xor
adc
stos
mov
aaa
jae
repz
xchg
arpl
xchg
iret
dec
jmp
mov
push
out
repz
add
sbb
mov
add
or
idiv
sahf
adc
loopne
mov
add
es
adc
add
add
fildl
add
add
rclb
fs
fdivrs
add
add
jnp
lds
add
add
fsubp
adc
jo
inc
aad
das
shlb
add
add
jns
call
add
add
push
sub
xchg
mov
stos
mov
mov
cmp
mov
mov
add
add
jo
inc
pushf
mov
add
pusha
mov
mov
mov
push
inc
lods
insl
jg
push
jae
clc
cmp
adc
dec
mov
repz
cmpsb
mov
add
add
dec
add
add
xor
add
add
ja
and
add
add
rcrl
push
loop
inc
jnp
sub
add
inc
add
add
cmpsl
bound
das
xor
jnp
ret
cmpsl
loop
sbb
or
add
add
pop
mov
fldcw
jnp
jbe
mov
sub
mov
or
add
add
into
mov
fwait
insl
scas
and
movhlps
icebp
shll
cmp
add
add
sbb
xchg
pop
jmp
push
pop
push
hlt
push
sub
or
sub
add
add
clc
xor
add
add
add
jp
xlat
xorb
push
cli
shrl
mov
add
dec
mov
pop
ret
add
add
push
in
fldt
fdivrs
xchg
mov
add
xchg
cmpsb
fwait
jno
insl
repz
mov
in
aad
add
add
ror
stos
bound
inc
mov
mov
adc
and
in
jl
jle
incl
ret
mov
sahf
hlt
je
outsl
xor
call
fwait
in
dec
push
int3
inc
cmp
xor
test
push
lods
xor
add
add
add
add
lea
sub
add
add
fisubl
pop
out
movlhps
xchg
mov
aad
mov
cmp
fcomip
gs
add
add
mov
sub
push
js
bound
nop
xchg
dec
mov
imull
in
xlat
insl
nop
dec
or
inc
add
add
fldenv
mov
add
add
fstps
sbb
testb
fnstcw
popf
daa
cmc
mov
fwait
jno
xor
aaa
shll
jno
mov
sub
add
add
dec
jmp
cmp
pop
stos
xlat
inc
sub
mov
jae
xchg
jp
push
out
cltd
popa
aaa
mov
mov
outsl
dec
aaa
mov
push
jp
daa
jp
or
add
add
data16
add
add
jnp
xchg
xchg
sub
add
add
loopne
mov
cmp
mov
and
in
cmp
xchg
shlb
add
add
std
jno
xchg
int
mov
add
inc
cmpsl
adc
mov
adc
xchg
inc
rol
xbegin
cmp
add
jecxz
dec
stos
ret
insb
mov
jno,pt
negb
in
sbb
inc
out
int
sarl
add
add
push
jne
add
and
add
add
add
add
movl
push
fstl
divb
pop
xchg
adc
test
mov
and
dec
cmp
lret
dec
add
add
inc
in
sub
js
lds
add
pop
mov
out
iret
jb
pop
mov
test
call
inc
popa
out
insl
xor
rorl
sbb
leave
rcll
pop
add
push
and
xchg
push
hlt
stos
or
es
addr16
push
push
lcall
and
pop
je
push
retw
mov
fcoms
mov
gs
pushf
jo
imul
lahf
aad
sub
lret
pop
sbb
mov
je
fsubs
push
gs
jmp
xchg
pusha
mov
out
call
fcomi
pop
inc
adc
mov
rcr
daa
adc
add
add
dec
cmc
sub
adc
mov
test
xor
jmp
xchg
mov
sarb
sbb
inc
out
hlt
test
add
lea
add
cmp
lock
pusha
mov
jp
add
xchg
mov
cmp
jl
add
add
push
mov
idivl
sub
insl
dec
mov
mov
shr
jecxz
hlt
jmp
add
fisttps
gs
fdivs
push
clc
mov
icebp
or
aaa
lret
mov
outsb
push
cmp
mov
add
add
mov
jmp
enter
jg
and
ret
fildl
imul
loopne
xchg
ds
cmp
pusha
add
add
and
add
add
adc
iret
mov
mov
inc
jae
or
push
push
adc
shlb
mov
or
xchg
mov
mov
call
add
push
stos
jl
pop
adc
xor
fstp
or
add
add
js
xchg
add
add
and
add
add
mov
mov
lahf
adc
add
add
fcmove
clc
sub
inc
mov
mov
push
dec
adc
jno
xor
mov
push
sbb
clc
adc
fcomps
jg
lcall
mov
add
pop
out
inc
lds
add
add
add
pop
pop
loop
jns
mov
mov
loopne
cmc
lret
cmp
mov
cmp
add
jp
jns
loope
mov
jo
aaa
loop
mov
mov
xor
xor
ret
mov
sbb
pop
stos
sub
adc
cwtl
inc
add
add
mov
add
scas
in
test
mov
inc
sbb
lock
adc
fmuls
push
repz
fwait
mov
add
xchg
std
mov
xor
add
ja
ds
mov
je
push
adc
mov
loopne
sbb
sub
add
add
mov
pop
test
arpl
xor
or
add
add
cmp
add
add
ret
cmpsb
enter
add
cmp
sbb
fistpll
adc
into
push
push
test
nop
cmpsl
push
push
mov
add
add
inc
rorl
add
adc
push
sti
pop
or
xor
push
xor
xchg
pop
jecxz
or
cwtl
cltd
std
push
mov
jmp
adc
pop
jmp
mov
imul
pop
lock
adc
sub
pop
ljmp
loopne
mov
call
add
add
ds
addl
adcb
aam
enter
pop
xor
pop
into
jl
inc
jl
xlat
adcl
add
add
add
add
mov
popf
jo
movsl
push
cmpsl
pushf
les
rol
mov
adc
jne
jbe
mov
into
push
lods
sbb
ljmp
pop
addr16
mov
add
add
xlat
ds
adc
mov
add
add
push
lcall
add
add
pop
or
add
add
xor
movsb
mov
ja
aaa
and
sbb
sbb
fistpll
mov
add
add
push
jmp
sti
mov
pop
int
cld
add
add
push
pop
lea
out
xor
add
add
xchg
fisubrs
mov
adc
push
movsl
sub
mov
dec
push
mov
or
sbb
xchg
roll
add
add
jns
or
add
add
mov
shrb
push
add
pop
mov
add
push
add
add
cmp
xchg
rcll
gs
add
add
push
cmp
mov
add
add
add
xor
dec
push
pop
adc
mov
out
out
add
sub
add
add
cli
fisubrl
enter
xor
jmp
add
rorl
sub
out
add
addr16
sub
cltd
into
jge
xchg
rcl
push
dec
mov
xchg
insb
mov
out
push
cli
int3
orb
hlt
mov
mov
adc
add
ficoml
sbb
jo
fwait
pop
or
cmp
in
lret
vpackssdw
repnz
mov
sub
xchg
or
imul
xor
add
add
sub
add
add
add
xor
dec
add
add
call
out
ret
mov
ljmp
mov
movsl
cmc
mull
sbb
sub
clc
push
call
imul
movsb
iret
aaa
lahf
and
add
add
mov
xorb
or
add
add
mov
fisttps
sahf
push
repnz
scas
subl
add
js
in
dec
ficomps
mov
in
push
mov
cmp
hlt
mov
sub
imul
mov
xlat
sbb
push
shlb
mov
jp
push
dec
add
add
sti
test
add
aaa
test
mov
dec
sub
jmp
dec
shll
jb
mov
lret
negb
std
out
adc
and
ss
add
add
lds
add
add
shlb
imul
mov
mov
xor
pop
test
pushf
mov
mov
testl
add
add
cmp
mov
inc
in
inc
mov
sbb
adc
out
push
popa
mov
sbb
pushf
pop
xchg
outsl
xchg
cmpsl
jl
insl
jno
add
add
inc
sbb
arpl
add
add
pop
sbb
cwtl
movsb
aad
cmp
lods
enter
sti
xchg
and
xchg
push
adc
pop
or
xchg
mov
imul
adc
add
or
add
insb
mov
ss
outsl
mov
cmc
mov
mov
fwait
push
hlt
call
cmp
leave
mov
add
ret
jge
fdiv
push
mov
or
icebp
out
sub
xlat
ret
or
mov
mov
sbb
xorb
adc
stos
daa
test
aad
and
mov
mov
sbb
mov
mov
pop
mov
sbb
in
add
add
add
pusha
mov
lahf
inc
cmp
stc
jp
lea
add
add
inc
mov
inc
pop
data16
add
add
and
add
add
add
push
mov
xchg
add
add
sbb
push
shll
or
add
add
ljmp
jmp
aaa
leave
mov
add
mov
and
add
add
mov
xchg
dec
out
fmul
adc
cmp
mov
mov
cmp
ss
push
inc
jecxz
cs
fisttpll
insb
add
add
pop
les
add
add
cmpsl
jecxz
loopne
adc
mov
mov
inc
xor
push
rorb
jae
lock
pop
sbb
add
and
mov
add
add
mov
jo
push
adc
in
mov
sub
aas
or
clc
lds
mov
insb
mov
roll
incl
sbb
ret
insb
add
add
push
dec
jno
movsl
fwait
xor
adc
fldcw
mov
adc
ret
jns
jb
adc
das
sub
dec
mov
and
cmpb
inc
mov
les
add
dec
xor
add
inc
xchg
repz
sbb
add
add
mov
push
and
inc
sub
aam
add
add
mov
add
add
in
jecxz
inc
adc
shl
or
add
add
jp
push
hlt
push
jbe
test
cwtl
cltd
lea
cmc
or
push
pushf
cmpsb
sbb
mov
ds
dec
pop
add
sbb
adc
in
xchg
pop
sbb
rolb
orb
add
shrb
or
leave
inc
add
add
mov
sub
add
add
add
outsl
sub
xchg
in
dec
mov
jl
mov
outsl
dec
add
add
imul
xlat
mov
test
pusha
mov
out
sbb
sub
sbb
repnz
repnz
add
xor
mov
out
mov
test
add
add
add
and
scas
inc
jns
ljmp
fnstcw
lods
pop
mov
mov
lret
aam
adc
add
push
icebp
test
fdivrs
mov
inc
ss
cld
xor
sbb
push
fs
push
adc
sbb
push
inc
mov
or
add
add
in
xchg
call
repz
aaa
lahf
add
jne
pop
xchg
cmp
add
cli
fcoml
xor
add
fdivrl
push
ret
sbb
pop
adc
mov
xchg
int
and
mov
mov
and
mov
sbb
xchg
and
dec
dec
mov
dec
sub
rol
inc
mov
scas
sahf
cmc
in
jne
sub
std
pushf
outsb
push
mov
xor
or
push
je
daa
sub
bound
lock
inc
add
add
cmpsl
sbb
push
cmp
or
scas
jbe
mov
mov
std
roll
cmpsl
adc
add
push
sets
mov
dec
xchg
es
rcr
xchg
jge
mov
xchg
cwtl
add
addr16
mov
jno
or
push
in
aaa
lret
add
add
mov
mov
mov
dec
add
add
in
loopne
jb
sbb
test
add
add
fdivp
and
add
add
adc
mov
and
add
add
dec
add
add
inc
lods
jle
test
or
xor
add
mov
mov
xor
inc
mov
or
dec
mov
pop
mov
mov
addl
dec
daa
and
std
cwtl
dec
lea
mov
inc
add
add
add
enter
pop
jae
inc
xchg
push
pop
sub
add
add
das
movsb
sbb
ret
cmp
xchg
mov
mov
iret
push
push
dec
or
add
add
sbb
out
imul
rolb
add
add
lods
inc
add
add
mov
leave
decb
or
ds
push
fstl
sbb
ljmp
add
cmp
dec
add
add
adc
and
leave
mov
in
jmp
sarb
xor
mov
mov
fcomps
sbb
sub
xor
or
add
add
inc
cwtl
loope
jno
js
or
add
add
cltd
mov
test
lods
or
add
add
mov
fisubrl
pusha
add
add
fcoml
push
fsubrl
add
add
add
push
in
push
sub
iret
sti
call
cmp
add
add
push
mov
mov
stos
xchg
adc
imul
in
test
push
test
inc
iret
sub
cmp
test
pusha
mov
arpl
sub
out
in
pop
in
adc
lea
mov
add
add
mov
cmp
xchg
lock
cmp
scas
int3
or
add
add
jmp
aam
mov
js
sbb
add
add
adc
dec
add
add
adc
adc
jge
sbb
push
push
mov
insl
dec
mov
adcb
std
aaa
icebp
pop
mov
aam
cmpsl
dec
pop
add
bound
xchg
lret
cwtl
and
stos
dec
add
add
mov
sbb
sbb
repz
or
cwtl
xchg
add
xor
stc
dec
imul
add
les
or
add
cmp
and
mov
sub
add
add
pop
xchg
dec
imul
add
add
and
stos
sbb
je
mulps
jno
arpl
mov
inc
int3
div
xor
or
add
add
mov
add
jae
ret
and
add
add
lock
imul
loop
cmp
add
add
cmp
scas
std
imul
dec
push
dec
sub
inc
jo
and
xor
sbb
inc
cmp
xchg
fcom
mov
ss
clc
push
xchg
cmpb
mov
call
cmp
xlat
push
js
and
push
and
add
add
das
icebp
or
mov
mov
cs
or
add
add
das
push
push
scas
out
mov
lahf
jbe
mov
add
cmp
insb
add
add
cs
out
sbb
adc
xor
xor
xlat
push
jb
add
add
insl
int3
push
push
and
add
add
dec
cmpsb
inc
shrl
add
add
adc
in
mov
imul
loope
or
stos
add
cmp
popf
push
xor
fstl
cwtl
enter
add
add
ror
inc
cmc
iret
clc
pusha
mov
jp
roll
mov
shlb
pusha
add
add
rcr
mov
add
mov
dec
push
cwtl
sbb
add
xor
xchg
or
cmp
test
mov
rcll
push
icebp
test
push
jecxz
sub
xchg
xchg
adc
pushf
mov
mov
adc
add
add
or
push
xor
andb
add
and
add
add
lea
cld
stc
out
xor
add
add
add
add
xchg
mov
add
pop
lahf
push
scas
push
orl
add
insb
mov
test
dec
mov
cmp
inc
mov
push
out
les
fiaddl
pop
push
call
jmp
lods
lcall
add
add
clc
dec
lods
adc
or
add
add
mov
fsubrp
jg
mov
testl
and
add
add
int3
lahf
test
fidivrs
push
std
or
in
lds
hlt
popa
push
jecxz
ficoml
mov
add
add
add
push
das
std
rcrb
mov
add
add
pop
test
mul
xor
jne
push
dec
stos
loop
pop
mov
sbb
pop
mov
addr16
add
add
and
add
add
fucom
or
jle
sti
and
mov
arpl
mov
pabsw
add
add
add
sti
mov
add
xor
adc
scas
jbe
inc
mov
xchg
ljmp
fnstenv
add
sahf
xchg
dec
fucomp
add
add
add
addb
add
ss
xor
add
add
add
add
add
add
mov
jge
push
and
imul
testb
pop
sub
add
add
mov
pop
negl
mov
add
add
fdivp
pop
xchg
adc
scas
int
inc
jno
ret
popf
inc
add
add
stos
sub
testb
xchg
mov
lcall
jl
mov
adcb
or
xor
sbb
adc
aam
xchg
out
pop
icebp
xchg
fsubrs
imul
add
add
add
imull
adc
mov
push
ss
in
mov
push
mov
pop
leave
push
les
xchg
shrl
xchg
mov
sub
add
add
ficompl
adc
add
inc
mov
push
shlb
add
add
xchg
outsl
movsb
add
add
add
add
add
inc
lcall
inc
shl
and
add
add
xchg
fiaddl
add
add
xor
cld
sbb
add
pop
pop
xchg
xor
insl
push
loop
and
add
adc
lock
gs
add
lods
sarl
add
add
scas
jle
test
sub
xor
scas
cltd
pop
pop
dec
gs
push
inc
mov
pop
gs
mov
add
cltd
sbb
and
fxch
repz
iret
sbb
jp
and
sbb
xchg
pop
adc
test
inc
call
adc
pop
push
and
mov
imul
insb
add
add
xchg
adc
add
add
inc
add
add
add
cld
es
subl
pop
push
repz
orl
lock
add
add
and
add
add
pop
xchg
and
loopne
or
add
add
xlat
decl
add
add
sub
inc
add
mov
call
add
add
sbb
sti
cmp
mov
or
add
add
aad
scas
dec
pop
push
pop
xor
or
mov
outsb
push
mov
loope
dec
add
add
arpl
mov
xor
shrl
push
aas
leave
std
rorl
sbb
inc
add
add
imul
and
add
add
sbb
jmp
mov
outsb
cld
mov
cs
adc
stos
pop
adc
sbb
push
lea
add
sbb
call
sti
mov
pushl
pop
cmp
mov
add
ja
mov
dec
sbb
add
add
lock
int
enter
add
add
add
add
rcr
test
dec
dec
shll
in
adc
into
cmp
mov
stos
scas
nop
push
push
sahf
pop
pop
mov
mov
je
aad
add
adc
jne
icebp
pop
bound
add
add
mov
je
sbb
push
sbb
cmpsb
mov
movb
ja
add
add
dec
mov
jl
fists
nop
outsb
aam
ja
outsb
mov
sub
add
add
cwtl
lret
jg
xchg
jg
mov
xchg
ficoms
test
rcll
testb
inc
icebp
mov
add
cltd
test
mov
add
mov
mov
loope
xor
add
stos
roll
pop
nop
jl
outsb
jecxz
lret
aad
mov
mov
xor
shlb
add
push
test
xorl
ret
mov
inc
mov
jns
add
add
mov
into
jae
aaa
call
inc
mov
insb
add
add
inc
add
add
sbb
jmp
fucomip
push
mov
add
or
inc
xchg
inc
add
add
sahf
add
mov
add
mov
negb
push
leave
push
lret
mov
out
mov
push
shl
xor
shl
enter
mov
shr
xchg
mov
cltd
imul
ja
dec
mov
lods
cwtl
inc
mov
je
sbb
xor
xor
add
out
jae
mov
add
fcmove
jge
jne
negb
ja
dec
rolb
add
ret
movsl
lcall
xchg
sbbb
stos
xchg
add
pop
sub
repz
mov
fdiv
pop
mov
pop
shr
lods
mov
mov
rcr
bound
mov
sbb
dec
mov
adc
out
jp
in
pop
rcr
and
cmp
jb
iret
cmc
jp
cmc
push
xchg
sub
add
stos
push
cs
jne
gs
xor
and
add
add
aas
push
stc
jne
imul
jmp
mov
add
add
add
xor
dec
mov
sub
sarb
add
into
nop
push
mov
dec
movhps
fwait
sbb
orb
imul
shlb
mov
hlt
popf
pop
out
dec
add
add
outsl
inc
cmp
push
leave
push
repz
std
fs
jle
jecxz
faddl
add
add
inc
add
add
cmpsb
imul
mov
add
sbb
mov
adc
sub
mov
lds
inc
into
xchg
mov
mov
add
add
cmp
jecxz
dec
push
mov
push
int3
add
push
in
nop
add
add
add
int3
inc
cmp
movb
dec
popf
add
add
add
and
scas
mov
and
stos
fucomip
mov
inc
push
mov
jp
dec
lods
xor
push
xchg
popf
adc
inc
test
fsts
fcoms
adc
sbb
cmp
add
add
or
add
add
add
add
insb
add
add
cmp
add
add
push
faddl
mov
or
add
aas
in
mov
jae
mov
int
jb
lcall
mov
xor
inc
jno
pop
xorb
mov
cmpsl
leave
into
push
addr16
mov
mov
mov
add
shll
push
notb
js
inc
mov
insb
mov
xchg
sbb
sti
mov
in
repnz
add
add
adcb
test
pop
jl
fstps
jmp
xchg
jg
or
xchg
cmp
popa
mov
mov
jno
decb
in
sub
mov
rcrb
andl
add
addr16
shll
fisubrl
push
sbb
add
xor
repz
mov
scas
pushf
inc
mov
cwtl
mov
push
pop
data16
outsl
adc
cld
shll
inc
jns
movb
nop
mov
jo
mov
add
add
and
add
add
mov
push
add
add
mov
orl
add
xchg
roll
push
xor
enter
out
jl
sbbb
pop
mov
cs
rcrb
fistpll
mov
les
outsl
loopne
mov
out
shll
mov
xor
pop
hlt
add
test
lods
test
xor
cmp
insl
jmp
aad
mov
xor
mov
adc
pop
lods
add
es
sti
les
add
add
mov
mov
or
xor
inc
js
push
add
add
add
test
xchg
or
add
add
xlat
ds
push
mov
add
aad
mov
lcall
lret
ja
roll
add
mov
pop
lahf
ja
inc
xor
adc
push
inc
test
push
cmp
scas
and
or
add
add
inc
sahf
cmp
xchg
jo
dec
or
popf
ds
add
add
mov
mov
loopne
inc
push
stc
push
cmpsl
testb
out
repnz
rclb
add
add
mov
lcall
mov
out
mov
inc
pusha
mov
sub
cmpsb
adc
ror
sbb
ljmp
mov
adc
dec
add
lock
mov
xor
adc
xor
mulb
in
mov
inc
int
cmp
rcr
mov
cmp
jmp
dec
push
mov
sbbb
add
add
xor
add
and
addr16
dec
mov
jbe
jecxz
movsl
mov
pop
fs
imul
insl
xchg
mov
movzbl
jno
aad
addb
mov
push
test
bswap
mov
add
add
clc
leave
cmc
add
insl
jb
dec
add
add
lahf
cld
adc
rclb
in
mov
inc
das
cmp
mov
mov
push
mov
shlb
lcall
sub
cmpb
cmp
mov
mov
jecxz
add
add
add
fucomip
imul
add
ret
rcl
repnz
xor
iret
fmul
daa
adc
xor
add
ds
inc
mov
add
add
addr16
add
out
jns
add
add
mov
mov
pop
xchg
mov
mov
add
dec
add
add
add
jnp
add
pop
pop
mov
add
out
pop
pusha
add
add
int3
jnp
pop
ret
jnp
out
jo
inc
add
add
cwtl
popf
clc
dec
mov
mov
jg
mov
pop
rorb
pop
mov
add
add
bsf
test
push
aad
add
orb
mov
pop
inc
jmp
add
add
inc
xchg
lods
jl
mov
dec
mov
leave
push
sub
loopne
fbld
add
add
std
jl
mov
sahf
or
add
add
and
stos
push
int
mov
std
js
in
jmp
jge
mov
xchg
aad
jp
add
jb
or
add
add
out
and
xchg
dec
add
add
lea
mov
add
jae
inc
imul
add
add
jl
sub
out
cmp
and
add
add
or
add
add
add
add
rclb
inc
jp
xor
cmpsb
lods
ret
or
or
add
add
mov
lods
and
jns
and
cmp
fists
imul
rcrb
lcall
inc
stc
rcl
push
aas
sbb
inc
mov
mov
dec
add
add
jmp
mov
add
stos
jb
or
add
add
pop
in
leave
dec
inc
add
mov
add
add
ret
dec
mov
sbb
add
jns
loope
xchg
mov
loope
data16
stc
movsl
or
add
add
das
in
pop
xchg
rorl
inc
subl
aam
cmp
pop
add
add
and
shrl
add
add
in
adc
dec
xor
and
stc
adc
cs
pop
xchg
mov
add
jecxz
xor
and
cs
jecxz
mov
push
sti
cltd
push
sbb
add
add
insl
fisubrl
add
add
jno
sbb
sbb
decb
add
add
ss
outsb
mov
mov
or
add
add
lcall
xchg
ja
push
push
push
adc
pop
inc
outsb
shlb
xchg
outsl
or
add
add
add
add
jle
lret
push
pop
sub
add
add
addb
xor
pop
jp,pn
repz
ds
add
add
movsb
pop
pop
push
add
add
add
add
mov
and
daa
in
xor
xchg
dec
sub
add
pop
jle
inc
stc
fcomps
out
stc
cmpsl
int3
pushf
mov
lcall
sahf
int3
sahf
xchg
lods
loope
mov
xor
lret
mov
rcrl
iret
nop
decl
roll
mov
rcr
pusha
add
add
dec
fisttpll
inc
mov
or
add
add
stc
data16
shlb
mov
xchg
aaa
sbb
aam
out
mov
insl
jl
mov
add
mov
mov
add
add
add
add
jae
cli
push
cs
popf
and
imul
stos
sahf
stos
ja
cmp
fldl
add
add
lcall
mov
jl
dec
inc
cmp
adc
xor
ss
dec
pop
push
rorl
add
add
adc
popa
or
mov
mov
xor
test
add
add
jmp
mov
nop
mov
cltd
mov
inc
mov
ficomps
pop
std
push
pop
scas
xchg
mov
mov
mov
push
jns
loop
fisttpl
jae
mov
movsb
fnstsw
test
add
xor
aad
sbb
add
xchg
xchg
fsubrl
or
dec
mov
fstpt
xchg
insb
mov
mov
sbb
mov
push
dec
iret
fistl
test
pop
js
sub
add
pop
mov
or
adc
add
rclb
mov
test
add
pop
hlt
out
arpl
es
int
and
add
add
sarl
fwait
imul
jae
pop
dec
arpl
push
mov
les
out
cmpsb
lds
add
add
lds
daa
jo
pop
adc
sbb
mov
push
sub
add
add
xchg
lahf
mov
or
jle
dec
adc
mov
xlat
nop
jle
and
cmp
add
add
pop
cmp
add
sbb
pop
pop
repnz
xchg
and
add
xchg
pushf
cli
cs
out
xor
das
adc
add
and
sbb
and
add
cmpsl
lea
stc
sti
xorb
fstpt
scas
mov
mov
psadbw
mov
roll
add
arpl
mov
cmpl
mov
xor
fnstsw
cltd
faddl
insl
mov
inc
or
jns
repz
mov
push
out
ret
subl
add
add
add
add
mov
pop
aaa
jb
aaa
add
add
add
or
scas
cmp
into
testl
arpl
pop
pop
aas
fld
in
inc
mov
jge
std
call
mov
dec
mov
fidivrs
mov
add
push
ret
dec
pusha
mov
or
jmp
ret
out
jge
adcl
int
mov
mov
cs
cwtl
leave
lahf
pop
js
lods
push
cmp
mov
cmp
add
add
pop
insl
pop
loop
mov
inc
fcoml
mov
outsl
dec
jmp
lea
pop
push
xchg
rcr
sub
or
out
stos
dec
add
add
lods
mov
insl
xor
test
fcmove
add
mov
push
push
shlb
xchg
add
add
aas
push
push
xchg
fadds
sbbb
inc
xchg
pop
loopne
lret
cmp
add
add
add
cld
xchg
pop
adc
outsb
mov
js
fadds
dec
pop
lret
add
inc
add
add
sub
add
add
add
jge
jne
add
cmp
sub
loopne
add
add
xchg
addr16
pop
js
mov
in
xchg
aad
shll
sbb
mov
mov
mov
inc
add
add
inc
add
add
imul
mov
je
lret
frstor
add
add
test
sbbb
pop
cmpsb
out
lods
in
shlb
fcom
in
mov
xlat
faddl
add
add
movsl
jl
ljmp
repz
mov
jl
pop
cmp
add
xor
sahf
loope
dec
ljmp
mov
cmpsb
jmp
mov
aam
pop
push
xchg
adc
test
fwait
adc
add
add
in
out
lcall
xchg
out
ret
adc
call
add
push
add
add
add
add
sti
mov
mov
fmull
mov
inc
fcoml
push
sbb
add
stos
sub
clc
cwtl
in
push
cmp
movsb
bound
js
test
inc
mov
popf
mov
es
add
add
fstp
xchg
fidivs
cs
add
pop
xchg
js
sub
add
add
loope
pop
add
pop
scas
out
mov
cmc
out
out
add
inc
push
push
mov
test
mov
pop
cmc
loop
jb
cmpsl
rorb
sbb
adc
mov
push
add
add
add
icebp
jb
cld
and
add
add
imul
add
add
inc
data16
adc
push
sub
add
add
fcmovbe
pop
ret
and
ret
rorb
cmp
test
pop
add
fnstsw
add
add
add
and
add
add
mov
fimuls
adc
and
add
pop
inc
mov
out
out
mov
adc
movq
add
add
inc
add
add
scas
std
lea
rorb
add
add
dec
mov
add
xchg
int
shl
daa
movb
add
add
pshufw
pop
pushl
pop
mov
xchg
repnz
sarb
push
int
pop
push
mov
dec
les
add
add
xchg
push
lcall
add
mov
arpl
les
cmp
mov
mov
or
mov
mov
cltd
and
pop
adc
xchg
lds
add
add
pusha
mov
add
add
inc
fdivrs
or
or
test
test
or
sbb
rorb
add
add
pusha
mov
mov
sarl
fnsave
addl
call
dec
stos
cltd
or
sarb
sbb
fwait
jbe
mov
ss
push
add
add
add
mov
and
arpl
cmpsb
sahf
arpl
add
adc
cmpl
sbb
int3
pop
jp
mov
add
add
adc
xchg
lcall
dec
sub
mov
test
adc
sub
imul
nop
les
js
adc
jne
cmpb
mov
pop
fcomps
add
add
add
add
xor
push
mov
inc
and
add
pop
jae
mov
fs
mov
adc
das
pop
sub
rorl
inc
lea
pop
jmp
pop
daa
sahf
jnp
mov
cmp
js
dec
add
add
fcoms
fildl
add
lds
call
ficomps
das
shlb
ret
mov
mov
neg
or
add
add
push
jl
das
add
push
inc
pop
addr16
add
add
cmpsl
icebp
repz
or
add
add
outsb
icebp
bound
imul
in
repnz
enter
lods
lods
push
ja
icebp
ror
push
fimull
cmp
stos
fcoms
rcrl
add
add
fdivl
push
ljmp
data16
xor
enter
and
or
cltd
mov
cmc
cli
or
mov
lret
cmp
mov
mov
mov
jmp
inc
cmp
add
lds
arpl
mov
sbb
mov
clc
mov
sbb
jno
inc
aam
pop
mov
add
add
je
scas
outsl
mov
mov
mov
ja
pop
shll
xchg
popf
adc
pop
andb
jns
jl
cmp
add
adc
add
outsl
sub
add
add
jle
sub
add
add
pop
xor
xchg
jp
int3
sub
push
jne
add
outsb
repz
loopne
ret
outsl
je
add
add
push
mull
mov
popa
mov
add
std
adcl
out
pop
lods
stos
adc
scas
sbb
add
add
mov
xchg
push
insl
outsl
xorl
sub
add
add
sbb
add
add
lods
push
loope
aam
int3
pop
xchg
test
mov
sti
addr16
pop
nop
dec
add
add
insb
add
add
aam
lds
cmp
mov
test
mov
aaa
cmp
adc
mov
out
pop
je
popa
mov
or
lcall
push
push
sub
cld
pop
icebp
iret
pop
fs
and
add
add
testb
movsl
pop
mov
and
dec
or
add
add
xchg
ror
sbb
andl
add
rcr
push
push
clc
xor
stos
into
adc
add
mov
dec
inc
inc
mov
push
dec
lea
movsb
insl
insl
mov
nop
popa
jnp
push
fdivrs
shll
mov
pop
mov
sti
jb
or
add
add
cmpsb
mov
xchg
sub
add
add
add
jbe
ss
add
add
jp
fdivr
mov
jmp
insl
and
add
add
mov
xor
add
insb
add
add
fsubs
add
add
orl
mov
popa
or
add
add
add
add
add
testl
mov
out
sub
mov
jns
mov
aaa
pusha
add
add
push
xor
sbb
or
sub
add
add
cwtl
lret
xchg
push
inc
mov
mov
mov
sub
add
add
add
sub
xor
aaa
xchg
add
add
push
xchg
lods
dec
mov
and
add
add
add
scas
aas
icebp
mov
ljmp
mov
test
xlat
xchg
sbb
inc
jl
mov
stos
mov
leave
xchg
cmpl
lea
xor
enter
add
add
dec
mov
jns
mov
sbb
xlat
aas
xor
mov
fs
enter
jns
mov
lret
cmpb
ds
rorb
mov
add
orb
add
inc
add
add
mov
jg
ror
mov
lock
xor
fcmovnu
cs
sahf
mov
push
mov
push
stc
cltd
cltd
frstor
add
das
pop
lret
mov
xchg
adc
push
xchg
dec
shlb
mov
leave
adc
outsl
mov
pop
sub
add
add
xchg
inc
fucomp
sub
les
addb
and
add
add
cmp
adc
adcl
mov
add
cli
cmp
or
push
test
scas
mov
lods
jo
add
add
jbe
repnz
mov
mov
insl
cmp
cmpsb
into
cli
dec
add
add
xchg
popf
lock
or
test
fldt
jl
out
pop
sub
cmp
fisubs
dec
xchg
mov
add
add
add
outsb
pop
dec
loopne
stos
dec
add
add
xchg
mov
adc
mov
jmp
jmp
mov
cmp
jns
add
add
in
mov
inc
add
add
lret
and
add
add
sti
sub
add
aam
pop
inc
mov
nop
push
fs
call
push
mov
hlt
mov
rorb
mov
add
add
out
add
add
push
fdivl
mov
add
cmp
fbstp
add
add
jbe
xchg
movsl
xor
int
jns
mov
jns
xchg
ja
scas
lret
push
jnp
push
sbb
outsb
je
add
add
cmp
pop
xor
sub
or
sbb
rolb
push
pop
movsb
int
in
popa
mov
cmp
pop
add
add
adc
mov
xor
add
add
add
add
jp
lock
mov
mov
add
add
add
mov
shll
add
and
add
add
ret
call
pop
sbb
decl
mov
loope
push
std
cmc
mov
xorb
mov
dec
add
add
lock
lock
push
inc
add
add
add
add
out
fistpll
repz
mov
add
add
aam
cmp
pop
in
sub
mov
popf
out
xor
mov
mov
mov
ja
sbb
hlt
rcrb
mov
mov
push
fildl
add
add
jbe
testl
add
add
adc
add
out
jg
cmp
add
add
inc
pop
add
adc
lcall
call
pushf
jg
adc
xchg
je
adc
push
xor
les
mov
pop
les
xchg
cmp
jo
cmpl
sarb
cmp
push
jmp
mov
int3
jb
jo
repnz
add
sub
add
add
cld
sahf
mov
add
and
add
add
mov
xchg
mov
add
add
sub
cmpsb
data16
xchg
xor
movsb
dec
mov
mov
add
add
lret
jecxz
div
dec
add
or
sahf
nop
jo
add
add
lret
bound
xor
jg
inc
stc
jecxz
mov
js
or
add
add
push
xor
cmc
sbb
inc
push
pusha
mov
sarb
adc
jmp
mov
aam
mov
sub
mov
add
add
repnz
and
outsb
fiaddl
add
xchg
je
adc
sub
clc
xchg
pop
movb
icebp
xor
mov
add
push
xor
xchg
ret
mov
xchg
aad
and
mov
add
add
popf
push
int
out
insb
mov
mov
dec
int
lods
jecxz
adc
sub
push
cmp
cmp
inc
mov
lret
loope
js
imul
xchg
fnstenv
movsb
xor
sar
mov
mov
push
fdivrl
xchg
adc
loope
outsl
pop
push
push
dec
loope
cmp
dec
add
add
mov
jge
adc
daa
bound
add
xchg
repnz
adc
mov
add
stc
mov
push
cltd
xor
loopne
adc
pop
sub
mov
mov
add
adc
adc
mov
imul
cmp
lcall
push
dec
mov
dec
add
add
push
xchg
dec
add
add
dec
xchg
lcall
add
sub
pop
repz
popf
fiadds
shlb
add
add
add
add
lret
out
stos
cld
imul
mov
lret
add
ljmp
mov
adc
rorl
mov
cmp
add
add
mov
pop
js
xor
fistl
sahf
pop
mov
pop
loop
jae
out
or
add
add
add
add
jno
test
aaa
int3
jg
ret
je
imul
add
jbe,pn
ficoms
sub
add
add
hlt
and
add
add
add
inc
mov
inc
outsl
adc
pusha
add
add
hlt
adc
xor
movb
mov
ja
mov
sbb
push
jecxz
push
into
push
jo
push
scas
iret
pop
push
push
outsb
stc
jp
sub
iret
push
sahf
call
rorb
xor
lea
addr16
fstl
movsl
aas
jnp
insl
lret
mov
lods
vmulsd
xchg
jno
lods
inc
add
add
ret
out
test
add
or
add
add
xor
pop
jge
add
add
aam
test
pop
je
mov
and
mov
int
xor
and
lods
or
add
add
in
add
lea
add
add
daa
jl
nop
pop
outsb
gs
push
and
test
adc
xchg
popf
loopne
daa
pop
and
xchg
xor
imul
add
repz
es
jmp
add
pop
and
mov
mov
add
add
add
jns
rorl
add
add
shrl
lret
inc
mov
fwait
fwait
bound
push
in
cmc
add
add
xchg
xchg
sub
in
fs
test
in
or
sti
add
lcall
lret
out
jp
xchg
pusha
mov
push
xor
hlt
mov
add
pushf
mov
add
add
add
inc
mov
xlat
out
cmpl
cwtl
pop
cmp
jns
pop
jb
sub
add
add
addl
adcb
xor
outsb
sahf
icebp
jmp
lods
dec
test
fdivp
mov
sbb
mov
nop
xchg
inc
push
dec
lds
mov
cmpsl
add
bnd
push
xor
data16
popf
pop
gs
mov
ljmp
and
push
cmp
xor
mov
scas
mov
add
add
pop
lret
mov
mov
call
jb
int3
fcmove
mov
jecxz
and
push
mov
sbb
lahf
push
clc
adc
lods
ja
mov
push
cmp
stos
add
in
loope
add
xor
mov
add
fmul
test
jo
jns
inc
loope
aas
dec
icebp
ret
add
lcall
dec
mov
mov
jge
mov
inc
cmp
orb
cmc
cs
lret
mov
shr
add
add
test
movsl
mov
jge
inc
jge
sbb
pop
lea
sbb
repz
test
fisttpl
xor
mov
ret
mov
ja
scas
fstpt
sbb
xor
les
add
cmpsb
mov
xchg
fists
adc
dec
lock
jno
rcll
jns
bnd
jns
push
cmp
mov
mov
aas
out
stos
jmp
add
add
or
movb
daa
popl
push
shlb
aad
mov
mov
sub
mov
sbb
inc
test
sub
mov
arpl
imul
std
call
jnp
inc
dec
cmp
iret
ljmp
shll
jp
mov
aaa
mov
push
xchg
jno
and
dec
fs
add
add
adc
hlt
adc
inc
and
insl
std
fsts
imul
or
add
add
mov
cmp
add
add
add
fdivl
cmc
cmp
sbb
sub
push
inc
sbb
shll
mov
adc
cmp
inc
pusha
mov
sub
add
add
pop
pusha
add
add
xchg
add
cmc
mov
jae
mov
add
add
fistps
push
into
mov
push
in
into
arpl
loope
pop
repz
aaa
fdiv
test
jbe
pop
and
add
in
inc
nop
or
sbb
cltd
jg
add
add
jns
incb
add
add
add
sub
cld
fidivrl
push
jl
mov
jle
xchg
sub
add
cmpb
loope
repz
xchg
mov
add
add
cli
sbb
add
mov
pop
jmp
aad
into
outsl
aad
push
outsl
sub
add
add
add
cs
aaa
insw
hlt
sar
mov
cli
jge
mov
add
sbb
pop
inc
add
add
inc
loop
leave
rorl
push
aaa
shlb
sub
add
add
lret
adc
or
cmp
aad
jp
in
push
mov
repz
push
pop
mov
cmp
add
add
or
lea
dec
rolb
dec
add
add
inc
mov
xor
adc
test
aam
lods
aam
outsb
enter
movsb
and
test
movsb
imul
lds
in
jae
aaa
popf
shll
pop
inc
jge
int3
je
jp
jno
pop
mov
add
pop
cld
sub
dec
lock
stos
push
and
mov
add
xor
mov
xchg
decb
jp
pusha
mov
decb
ror
xlat
pop
mov
mov
push
push
xor
clc
fdivl
add
add
pop
call
dec
sbb
xchg
pop
cli
lods
test
add
push
push
lods
ficompl
xor
add
add
sbb
push
cli
pop
inc
mov
bound
add
add
std
lock
jnp
icebp
or
jbe
lcall
mov
mov
outsb
out
or
loopne
out
mov
mov
movsl
pop
xchg
sbb
lahf
mov
add
mov
mov
xlat
bsr
lods
frstor
insl
inc
mov
jl
add
rol
out
flds
mov
clc
shll
sahf
shr
sub
shl
sahf
xchg
ret
cmp
int3
fs
in
pop
sbb
out
sti
push
lods
sbb
add
lods
push
call
add
add
stos
add
add
add
add
sahf
dec
add
add
std
addr16
adc
inc
in
push
je
ret
adc
stc
es
je
and
lahf
popl
adc
dec
mov
add
add
repz
adc
add
add
lahf
repnz
js
xchg
cld
daa
push
repnz
clc
aaa
mov
cltd
jbe
dec
stos
xchg
popf
dec
fists
cmpsl
mov
add
add
popf
mov
popa
add
add
add
insl
jmp
mov
mov
dec
pop
and
add
add
mov
sbb
mov
add
add
pushf
or
add
add
add
add
fmull
pop
dec
loopne
push
cmp
roll
add
add
add
sub
mov
dec
stos
ss
jle
or
add
add
add
add
stc
adc
cmp
mov
cmp
icebp
sbb
das
imul
or
out
cmp
and
rclb
xor
push
popa
fisubrs
rcrb
and
out
in
icebp
dec
mov
pop
popf
pushf
sti
cmpsl
adc
mov
push
shl
pop
jle
lahf
xchg
add
sub
or
add
add
test
dec
xor
add
movsb
outsb
push
xchg
fwait
in
dec
jae
jno
mov
and
mov
mov
add
add
in
loopne
xchg
test
add
pop
and
sub
fwait
push
cmp
add
out
shl
sub
movsl
jle
shll
inc
sub
cwtl
add
jmp
and
add
push
ljmp
arpl
loop
inc
add
add
outsl
icebp
sub
add
add
adc
into
push
xchg
enter
ds
add
out
outsb
mov
inc
cmpsl
xchg
test
mov
sbb
mov
in
jg
loop
jnp
cltd
xor
mov
mov
add
add
add
std
or
add
add
dec
add
add
ljmp
xor
and
add
add
js
mov
ficompl
mov
cmp
clc
repz
pusha
mov
jb
jle
mov
sub
add
add
add
add
fs
subl
addr16
jl
pop
stos
in
jnp
cmpsl
push
inc
add
add
adc
stc
mulb
add
add
dec
sti
xchg
pop
ret
cmp
xchg
adc
outsl
ficoml
in
cmpb
movsb
lret
mov
inc
lock
sub
add
sub
add
sbb
ret
popl
add
add
xor
out
cmp
push
std
or
ret
jle
shl
mov
mov
cmp
add
sub
out
mov
cmp
mov
shrl
xor
into
xchg
daa
dec
lods
ret
into
out
cmp
sbb
mov
shrb
adc
fwait
and
ljmp
or
sub
jmp
sbb
mov
jbe
bound
push
jmp
adc
clc
pushf
sub
mov
into
add
add
add
sbb
pusha
add
add
dec
or
mov
cltd
icebp
popf
xchg
mov
mov
lret
sbb
add
ret
dec
xor
push
fbld
mov
loope
rclb
mov
sub
insb
mov
xchg
mov
add
es
add
add
mov
add
add
push
and
lret
sahf
ret
or
jecxz
xchg
notl
daa
bound
cwtl
or
popf
imul
push
imul
call
movsb
icebp
cmp
add
and
insb
mov
out
ljmp
add
add
push
les
add
mov
js
push
push
pop
xchg
push
lods
dec
cltd
sti
repnz
cmp
scas
ret
cmp
sub
add
xchg
add
fmull
add
add
lds
lret
insb
add
add
out
mov
xchg
mov
neg
cmpsb
call
sbbl
add
iret
cmp
add
add
lods
jmp
pop
jnp
cmp
jle
inc
mov
mov
scas
out
clc
mov
push
dec
push
loopne
insl
mov
inc
add
add
cwtl
bound
cmovs
add
add
sti
or
add
sub
mov
dec
mulb
fldenv
add
add
movsl
xor
add
shll
add
cmp
xlat
ret
pop
lds
adc
add
cmp
pop
mov
fstl
mov
lds
add
add
sub
push
test
mov
add
add
push
mov
dec
xor
and
add
inc
add
add
dec
mov
xchg
mov
pop
mov
je
sub
xchg
mov
or
stc
pop
notb
and
cltd
cmp
outsl
insl
cmpl
xchg
add
add
add
hlt
ds
mov
sahf
or
add
add
adc
fcompl
loopne
mov
lds
shlb
add
add
loopne
sub
add
add
add
push
jp
push
push
mov
add
add
insb
mov
push
hlt
adc
jl
add
xchg
addl
add
mov
hlt
or
inc
add
add
cli
push
pop
push
dec
cmp
es
push
lret
cmp
cmc
jg
pop
sbbb
mov
dec
push
lea
xor
add
jge
cmp
push
xor
fcomps
ss
cmp
shll
adc
arpl
pop
shll
aad
jecxz
add
add
add
add
add
add
push
push
imul
jge
in
mov
subb
imul
add
cmp
mov
push
cli
test
xorb
or
add
add
add
add
cmp
push
lret
or
pusha
add
add
xor
xchg
dec
cmp
add
add
lcall
xchg
mov
insl
ss
add
add
or
add
add
add
inc
mov
mov
fsubrp
out
into
jecxz
inc
in
and
add
add
call
les
cmc
dec
jo
lret
add
add
repnz
in
mov
add
add
cmp
rcrl
xchg
inc
jge
sbb
sub
or
outsb
std
jle
push
dec
aaa
mov
xchg
mov
or
add
add
jg
mov
nop
sub
aad
out
les
add
jb
aas
adc
or
add
add
adc
adc
xchg
hlt
xor
icebp
repz
jmp
mov
ss
sub
adc
jle
nop
jae
sbb
xlat
mov
mov
push
push
icebp
push
jge
pop
mov
mov
aaa
lea
fld
aam
jbe
fimuls
loopnew
leave
imul
add
add
dec
repz
frstor
mov
inc
add
add
xchg
bound
daa
loop
sub
dec
scas
push
mov
push
inc
lret
jmp
or
stos
inc
mov
add
add
mov
addl
add
add
pop
add
push
rorl
add
xchg
dec
sbb
xchg
sub
add
add
adc
add
add
mov
xor
in
arpl
pop
out
or
jecxz
fistl
in
flds
jno
icebp
or
dec
int
rclb
cmp
pop
xlat
mov
jp
pop
in
add
cbtw
pusha
mov
rorb
icebp
mov
subl
push
mov
nop
mov
add
mov
inc
test
sbb
mov
clc
mov
inc
dec
outsb
ja
cmp
fnstsw
scas
shll
ficoml
jmp
jne
out
imulb
push
mov
out
sti
add
sti
xor
clc
xor
stc
dec
adc
jecxz
sti
out
mov
cli
das
clc
scas
aam
sti
into
stc
je
jnp
xor
lcall
push
ss
dec
icebp
cmc
lcall
or
add
jno
or
add
add
jne
adc
add
add
cltd
je
mov
fs
test
push
hlt
loope
rcrb
shll
xor
cld
cmp
add
add
push
out
add
add
mov
add
xchg
sarb
popf
mov
inc
shl
out
leave
cmp
add
add
das
sbb
and
sbb
test
sahf
fldcw
stc
insl
mov
or
jle
sbb
jne
imul
lahf
sub
add
pushf
lds
xor
and
sbb
nop
repz
ret
inc
sbb
add
add
add
add
sti
and
xor
fcmovne
dec
jns
and
inc
ror
jno
dec
xchg
or
xchg
imul
mov
add
add
fmull
add
scas
pop
cltd
jns
adc
xor
data16
arpl
xor
inc
mov
cltd
aam
cld
mov
add
insl
aad
aas
inc
mov
in
es
xchg
lahf
jmp
lods
outsl
mov
inc
jno
lock
pop
mov
xor
scas
sbb
movsl
add
mov
jbe
stos
cmpsl
sub
pop
data16
jb
add
add
jecxz
loope
add
add
clc
add
xchg
adc
fidivrl
outsl
fwait
inc
add
add
test
push
scas
daa
int3
jle
or
ljmp
add
mov
cmpsl
mov
pop
jecxz
bound
in
xor
jmp
dec
in
xlat
inc
sti
push
push
repnz
ds
dec
add
add
push
sbb
xor
add
add
add
movsl
js
aas
xor
jl
adc
ds
add
arpl
fxch
pop
inc
add
add
lahf
dec
mov
add
add
out
lds
int3
sbb
daa
mov
pop
adc
mov
mov
loop
pushf
add
pop
sub
add
add
add
adc
scas
scas
icebp
addb
add
sbb
add
lret
jno
lods
jecxz
and
add
pop
pop
dec
jo
pushf
inc
out
sbb
insb
add
add
out
jo
nop
lods
xchg
pop
push
aad
add
add
dec
jge
xchg
mov
add
add
jmp
xor
or
xor
int3
mov
cs
adc
add
add
adc
xor
sub
shll
pusha
mov
dec
add
out
repnz
lock
mov
int3
lcall
add
add
adc
sahf
scas
mov
pop
pop
mov
test
mov
jmp
push
cwtl
cli
daa
xor
gs
out
pushf
dec
add
add
pop
cs
daa
fmul
int3
mov
scas
lds
add
add
and
add
add
mov
mov
add
push
mov
add
loop
xchg
mov
int
mov
mov
pop
jb
mov
jnp
or
pop
das
nop
fildll
add
add
add
add
add
or
in
push
ret
jp
movsb
inc
xchg
pushf
lcall
es
fimuls
jnp
mov
adcb
jns
sbb
jne
clc
cli
leave
jle
scas
scas
ret
pop
call
add
jae
ds
loop
dec
insl
js
add
add
mov
mov
call
inc
add
add
push
or
jbe
cmp
pushl
pop
cmp
jge
mov
add
add
add
add
add
and
mov
add
add
lahf
xor
xchg
fadd
mov
int3
xor
lock
mov
add
add
add
inc
or
lret
xor
mov
xor
push
cltd
fsub
das
mov
mov
std
adc
outsl
xchg
stc
inc
xor
enter
out
or
add
add
or
inc
cmp
and
test
xchg
sub
hlt
mov
lret
testl
mov
mov
out
fildl
or
inc
ret
mov
in
mov
imul
add
add
add
out
mov
push
insb
mov
rclb
cmp
movsb
push
scas
xchg
in
sub
xor
inc
sbb
inc
mov
clc
iret
inc
imul
js
cmp
sbb
and
add
add
add
add
pop
aad
and
add
add
push
sbb
sahf
jo
mov
aad
push
add
mov
call
add
add
jge
add
insb
mov
fiadds
add
add
xor
out
mov
pop
and
add
add
sbbl
gs
mov
mov
ja
hlt
repz
stos
xchg
pop
scas
jo
mov
lods
movups
push
orb
shrb
jge
sbb
cmpl
mov
dec
ja
cmpsl
movsl
adc
mov
add
add
mov
mov
jmp
scas
sbb
fdivs
addr16
xchg
lret
and
cmp
jbe
aam
jle
adc
stos
mov
repnz
push
arpl
lcall
dec
mov
sbb
or
add
add
mov
cmpl
mov
sbb
jp
add
add
in
mov
adc
xchg
inc
add
add
add
rorl
iret
mov
and
add
repz
mov
pop
sbb
mov
ds
cltd
dec
adc
add
add
jnp
mov
add
add
add
in
dec
iret
add
aas
pop
in
and
jp
out
int
jnp
roll
add
aam
mov
aam
cmp
add
add
add
xorb
cmc
sbb
mov
aas
sbb
add
add
add
adc
cmp
imul
adc
mov
arpl
lret
outsb
pop
aaa
cmpsl
data16
mov
add
rcrb
lock
dec
inc
cmp
ljmp
je
adc
dec
mov
loope
decl
add
add
add
xchg
pop
adc
testl
inc
ss
hlt
outsb
pushf
add
add
add
xchg
scas
sahf
cli
cmp
cld
mov
sub
add
add
sbb
lock
lret
shrl
inc
xor
add
add
lods
cmp
and
hlt
pusha
mov
xor
mov
dec
sub
push
int3
xchg
mov
push
clc
mov
add
add
xchg
int
outsb
enter
fmull
mov
cmp
les
mov
add
mov
out
outsb
jae
jns
add
add
lds
mov
sbb
fistl
mov
push
mov
inc
mov
xor
pop
cmp
aad
jle
adc
jb
mov
cs
lds
cmc
scas
dec
mov
mov
out
mov
xor
xor
mov
push
lock
inc
int
jge
out
fs
fcmove
insb
mov
xchg
cmpb
xchg
icebp
dec
cmp
add
add
mov
add
add
jmp
mov
push
adc
sub
adc
dec
repz
mov
jbe
mov
add
dec
xchg
cmp
imul
add
add
push
add
add
dec
cmp
jns
shr
add
add
jecxz
sub
add
add
xchg
mov
mov
jmp
pop
mov
mov
push
mov
cmpsl
mov
jge
mov
jno
pop
fucomi
push
notl
xchg
and
jmp
std
push
fbstp
mov
aaa
mov
sub
add
add
sbb
and
add
pop
push
into
or
sub
divb
add
jg
mov
call
add
add
stos
popf
les
sbb
iret
dec
outsb
push
pop
cmp
pusha
mov
das
pop
mov
mov
xchg
mov
lea
adc
sub
add
add
out
ljmp
clc
cld
push
ss
jnp
pop
iret
inc
or
add
add
xchg
ss
je
cltd
adc
add
add
add
lret
fisubrl
ret
and
add
add
add
add
mov
je
xor
push
pop
lods
outsl
idiv
jnp
mov
mov
mov
ret
stos
sbb
mov
xchg
cmp
mov
repz
mov
into
popa
es
mov
push
sbbl
cmpsl
int
mov
and
add
add
cmp
cwtl
jp
fnsave
rclb
push
cltd
sbb
test
mov
pop
nop
mov
mov
mov
cmp
mov
add
lcall
pushf
and
cld
sbb
xchg
icebp
je
enter
inc
sbb
test
mov
test
imul
pop
xor
cs
add
add
cmp
ljmp
test
fwait
adc
mov
test
sbb
inc
cmovns
jg
and
add
add
loope
lret
sbb
subb
lea
push
or
mov
movsl
loopne
cltd
dec
movl
add
fstpt
add
add
imul
mov
add
cmp
outsl
adc
fisttpl
cld
add
orb
add
xlat
xor
add
fadd
sub
add
dec
mov
jnp
mov
movsb
inc
jp
sbb
jp
addl
pushf
mov
stos
ja
mov
jp
xchg
daa
hlt
lret
scas
pop
dec
test
test
sbb
jp
outsb
add
add
mov
fsubrs
add
cmpsl
loope
aad
jle
orl
pop
mov
out
mov
mov
jno
jns
cmp
jle
or
sub
adc
fwait
jmp
mov
mov
cmp
xchg
mov
cltd
pop
inc
add
add
das
adc
das
mov
push
and
divb
ds
stc
popl
add
adc
mov
xor
popf
adc
cmp
nop
jg
push
les
mov
les
jbe
sub
add
add
lock
mov
test
outsb
iret
mov
dec
pop
pop
inc
pushf
sbb
add
add
addr16
test
stos
mov
add
mov
add
adc
add
add
orb
mov
mov
xor
rclb
mov
dec
add
add
xchg
mov
xchg
mov
out
jbe
test
add
sub
add
add
add
xchg
adc
sbb
std
mov
das
mull
inc
mov
int3
outsl
in
stc
jae
outsb
adc
add
pop
adc
arpl
pop
or
add
add
sti
xchg
lret
sub
add
add
in
adc
xchg
mov
add
add
sbb
inc
fsts
fdivrp
sbb
loop
push
and
add
add
aam
movsb
xchg
jo
pop
imul
cld
add
ret
mov
cmc
out
push
pop
xchg
mov
add
add
imul
mov
push
inc
and
jecxz
nop
test
add
add
insb
mov
jne
cld
or
inc
mov
lcall
xor
mov
or
add
mov
mov
fiaddl
add
sub
or
add
imul
add
add
add
inc
popa
add
add
add
cmp
cmp
sti
push
mov
push
movsb
dec
and
add
add
fadds
mov
push
xor
leave
in
mov
jmp
das
outsb
sbb
mov
inc
insl
inc
mov
cli
outsb
cmpsl
fs
aad
stc
pusha
add
add
test
and
add
push
clc
cmp
push
xor
add
add
cmp
and
loopne
cld
ret
mov
popa
icebp
cmp
cmp
add
out
outsb
push
and
push
and
mov
add
add
jmp
sahf
mov
sbb
pop
cli
adc
push
push
sbb
in
enter
ret
add
add
mov
jp
fincstp
faddl
cmp
xor
in
cli
movsl
cmp
push
test
negl
push
arpl
popa
loopne
dec
add
add
add
add
lods
in
arpl
mov
push
jo
or
lods
mov
aad
xchg
cmp
stc
loope
pop
in
push
mov
pop
xlat
pop
mov
and
push
and
add
in
mov
aam
mov
lock
std
out
xchg
jae
add
sub
add
add
xchg
mov
add
add
sub
add
add
mov
xor
ss
in
xchg
mov
fidivrl
pop
rcrb
mov
push
roll
jb
adc
es
push
sub
add
add
cltd
mov
std
movsl
adc
ret
jnp
movsb
jmp
mov
ljmp
mov
pop
dec
add
ret
test
mov
leave
lods
mov
mov
aam
cmp
in
fs
mov
add
ret
mov
xorl
orl
sub
add
add
loopne
je
push
and
lret
push
test
daa
dec
mov
gs
add
mov
scas
mov
out
popf
sahf
inc
mov
add
add
insl
arpl
punpcklwd
negl
xchg
negb
clc
je
outsl
or
dec
xor
stos
cmp
loop
and
add
add
icebp
pop
cmp
pop
fcmovb
pushf
inc
lods
push
ja
jg
in
lcall
mov
les
add
add
mov
ret
push
es
jle
gs
in
pop
dec
mov
sahf
in
push
fsubrs
mov
dec
inc
push
aam
mov
nop
cmp
dec
fiadds
push
mov
decb
add
xor
repnz
jle
repz
mov
cs
mov
cmpsb
cmp
lcall
lock
fdivr
mov
mov
push
ret
sarl
popa
dec
incl
jl
es
fadd
es
outsl
je
sub
push
stc
fistps
leave
push
mov
and
and
fstps
ret
xor
mov
imul
add
add
or
add
in
aam
cmp
pop
or
aad
lock
fbstp
add
add
push
aad
and
jle
cmpsb
roll
add
add
mov
lret
out
jge
rcll
cli
addl
sub
add
add
dec
in
add
add
sub
popa
dec
mov
mov
adc
insb
add
add
fstps
fwait
inc
leave
adc
push
fldl
jns
shrl
sbb
fsubr
popf
add
lret
inc
cs
clc
inc
push
and
mov
jle
in
cld
xchg
fldl
mov
add
jns
sbb
adc
rclb
push
mov
cli
ja
jno
jecxz
xchg
sbb
push
sub
mov
xchg
mov
add
add
xchg
aaa
loop
movsb
mov
push
fs
les
add
add
xchg
in
movl
add
add
dec
into
out
inc
jne
ljmp
fadd
out
pushfw
dec
in
hlt
add
add
stos
or
and
mov
add
add
leave
pop
mov
int3
mov
mov
fdiv
add
add
add
add
add
maxps
add
push
add
mov
add
outsb
outsb
or
daa
sbb
add
add
or
adc
add
add
cs
add
add
std
add
movsl
sub
add
add
rcrb
add
mov
inc
mov
gs
cmp
stos
divb
push
out
add
add
add
dec
cmp
adc
scas
pop
mov
add
rolb
jp
fsts
lea
gs
mov
mov
out
and
add
add
popf
xchg
jne
hlt
pop
fistpll
rcr
push
pop
dec
negb
mov
dec
fcomp
fucom
mov
cmp
shr
call
or
add
add
hlt
add
ret
fsubrs
ljmp
add
add
mov
xchg
xor
out
and
add
add
cmp
fs
arpl
add
mov
gs
mov
add
add
dec
mov
and
add
aam
es
dec
pop
pushf
add
add
adc
mov
js
jbe
pop
jmp
idivl
nop
aad
fwait
inc
je
pop
jnp
lret
sub
addr16
daa
inc
rclb
sbb
xchg
pop
pop
dec
add
add
bswap
add
xchg
rcll
add
add
adc
cmp
hlt
mov
pop
pop
dec
int
push
dec
mov
cmpsl
mov
cmp
push
clc
xor
stos
sub
cmp
jg
adcl
loopne
sbb
movaps
mov
outsb
std
pushf
movsb
mov
jle
jl
dec
mov
int
cmpb
jno
add
add
popf
addr16
and
adc
mov
and
mov
out
mov
push
pop
jns
ljmp
add
push
pop
aaa
and
add
add
mov
sub
cmpsl
je
sahf
out
outsl
into
int3
mov
push
inc
pushf
sahf
mov
xor
or
mov
add
inc
add
add
jp
add
add
imul
lods
xchg
add
insl
mov
push
fcoms
xor
add
add
loope
push
or
add
add
dec
rorb
add
add
add
xchg
nop
sbb
mov
add
cwtl
fld1
lock
inc
mov
jecxz
test
mov
adc
cmp
in
call
out
or
jmp
aas
insl
add
add
add
mov
adc
or
add
add
andl
dec
ds
or
lret
xor
push
add
lods
pop
stos
test
cmp
mov
mov
jge
addl
pop
push
push
dec
mov
mov
add
add
push
pop
push
and
pop
lock
pop
arpl
add
cld
mov
add
shrl
fistl
cmp
mov
jge
pop
inc
cmp
cmc
lds
cmpsl
lcall
fwait
out
mov
idivl
and
add
add
mov
cltd
sarl
pop
jl
add
add
add
dec
pop
add
add
add
movsb
jb
pop
push
imul
xor
cmpsb
xor
cmp
ja
or
add
add
add
mov
test
mov
or
or
add
add
sub
loop
mov
rcrb
cli
int
push
sti
or
add
add
mov
jmp
jb
xlat
cmp
and
pop
push
cmp
les
push
movsl
mov
inc
inc
add
add
scas
js
xchg
fiaddl
xlat
jg
inc
repz
data16
hlt
arpl
add
add
les
dec
mov
add
add
call
testb
mov
lea
cmc
das
scas
dec
test
pop
arpl
jge
and
ror
push
and
add
call
jae
dec
call
sbb
push
decb
inc
mov
repz
iret
mov
lcall
adc
add
xchg
sub
fmul
mov
daa
test
xchg
cld
sbb
add
pop
or
adc
cmp
xor
add
add
out
arpl
add
add
add
clc
rol
mov
mov
loopne
dec
jp
test
pop
decb
mov
mov
add
mov
mov
movsb
dec
pusha
add
add
cmp
sti
pop
in
mov
ret
xchg
ret
insl
movsl
fildll
ret
fsubs
add
add
push
or
add
add
push
pop
push
push
dec
mov
fdivs
pop
mov
popf
xchg
cli
xchg
repz
pop
out
popf
push
aad
daa
je
add
add
adcl
add
dec
lahf
pusha
mov
fst
mov
aas
cmp
push
and
cmp
movsb
mov
scas
mov
inc
jo
and
add
add
addr16
push
mov
mov
pop
call
or
add
add
add
add
xor
es
mov
in
cld
js
jne
pop
xchg
lret
dec
inc
ljmp
add
dec
add
add
xchg
add
push
inc
mov
mov
xor
ljmp
lock
lds
inc
negl
adc
addr16
stos
xchg
xchg
lods
into
adc
loop
outsl
xor
cld
cmp
fsub
mov
add
add
ror
jae
test
push
mov
push
add
add
add
les
add
add
push
xchg
ljmp
add
add
sarl
stos
divl
lcall
test
test
in
jae
dec
into
pusha
add
add
jp
loope
xchg
mov
dec
jmp
mov
xchg
js
rclb
and
adc
cli
rcrl
rorl
add
add
add
repz
xchg
adc
add
add
dec
out
ljmp
add
dec
cmc
jle
je
mov
add
add
xchg
mov
cli
jecxz
ja
stos
sarb
push
dec
dec
jg
mov
dec
pop
xlat
pop
sbb
add
cltd
push
cmp
jge
push
lock
add
add
je
das
es
inc
std
sbb
or
hlt
pop
gs
jp
rcll
add
add
hlt
dec
mov
out
insl
dec
add
add
icebp
in
loopne
inc
pop
mov
rorb
or
sti
jbe
cmp
rorl
pop
sbb
in
mov
mov
lock
in
jecxz
pop
pop
or
xor
and
add
add
negb
aaa
insb
add
add
loope
mov
shll
cli
pop
sub
xor
sub
adc
jle
aam
add
add
imul
clc
add
mov
insl
cmpsb
lods
addr16
daa
in
push
lea
sbb
jecxz
jb
mov
shr
pop
inc
push
or
mov
add
add
or
test
add
add
adcl
fnstcw
add
add
add
xlat
repnz
push
daa
adc
or
les
icebp
xchg
neg
mov
add
add
pop
idiv
cmpsb
shll
jns
jecxz
jno
pop
adc
adc
shlb
std
fisubs
mov
cmp
test
dec
jnp
outsb
ja
adc
sbb
xchg
inc
pushf
sbb
dec
pop
and
add
add
scas
das
fs
loopne
and
icebp
sub
add
sub
cmp
mov
inc
fwait
xor
out
pop
vpsraw
xchg
rorb
add
loop
mov
scas
mov
add
add
add
push
push
and
push
push
aam
sahf
ss
mov
es
add
add
fidivrl
cmp
jg
mov
add
add
pop
jecxz
ja
scas
fistpl
inc
add
add
mov
lods
call
mov
mov
add
add
sahf
popf
dec
mov
jbe
push
adc
add
mov
mov
push
jle
add
add
daa
sub
xor
mov
xchg
push
sub
loop
or
add
add
leave
sub
add
add
sub
cmp
lahf
pop
cld
xchg
sti
sbb
xchg
orl
xchg
cwtl
test
pop
xorl
pop
jbe
or
sub
dec
lret
add
add
scas
cwtl
cltd
lods
dec
add
add
mov
pop
and
add
add
shrb
add
add
add
push
loop
mov
or
loope
pop
mov
into
pop
jge
out
mov
and
aas
cmpsl
cwtl
ja
mov
add
add
push
cmp
add
add
add
movsb
mov
add
add
jge
es
popf
xchg
sub
add
add
and
adc
adcb
pop
adc
add
add
call
pop
leave
dec
push
inc
add
add
pop
lods
inc
inc
shrb
ja
les
fnsave
leave
xchg
dec
jne
and
xchg
fisubrs
add
add
test
inc
add
mov
xor
cltd
and
call
mov
shlb
dec
mov
dec
mov
add
fstpt
adc
dec
cmova
push
pop
or
push
xchg
pop
jne
sub
add
add
pop
mov
xor
insb
add
add
push
dec
nop
cltd
add
add
add
add
ljmp
xchg
jnp
mov
mov
and
pop
ret
push
test
mov
add
cmp
add
aad
and
sbb
sub
stc
cwtl
xor
xor
pop
movsb
jno
jb
movsb
dec
out
mov
std
in
daa
repz
add
add
mov
cmp
pop
hlt
mov
mov
adc
jecxz
adc
call
pop
out
cmp
add
add
pop
push
xchg
xchg
pop
sbbb
repz
test
sar
cli
push
xlat
daa
xchg
sub
add
add
sbb
mov
enter
cmpb
add
add
es
push
pop
addr16
in
or
add
add
sub
add
add
or
or
add
add
or
add
add
stos
sahf
push
push
cmp
add
fisubs
xchg
jge
sbb
das
iret
mov
add
add
add
mov
pushf
jl
cmp
add
imul
sarb
xchg
les
cmp
add
add
add
aaa
outsb
in
add
mov
enter
mov
add
xchg
sti
sti
int3
mov
add
add
add
add
add
push
and
add
add
mov
insb
add
add
mov
add
gs
pop
cmp
xchg
aad
add
add
pusha
mov
fdivr
sub
add
add
dec
sub
sub
daa
xlat
pop
stos
mov
add
cmp
daa
rorl
clc
and
add
add
add
xor
addr16
jae
add
mov
add
add
cmp
cmp
dec
jecxz
adc
jmp
add
adc
mov
mov
sbb
lds
or
add
sbb
daa
or
cltd
ljmp
daa
push
movsb
push
sub
addr16
gs
dec
movsl
mov
jecxz
jo
sub
add
add
push
imulb
mov
jb
mov
test
test
add
add
mov
jmp
inc
loope
lods
lahf
cs
fsubrs
sbb
lods
sub
rolb
sahf
sub
add
add
mov
add
xchg
push
push
lahf
push
lods
mov
pop
daa
pop
xor
add
add
mov
inc
add
add
mov
scas
mov
add
add
sbb
clc
decl
jge
and
test
pop
jnp
push
enter
sbbb
sarl
repnz
in
out
xlat
fdivrs
cmp
int
js
mov
icebp
xor
fstpt
push
sub
rolb
mov
pmullw
je
mov
test
xchg
push
xchg
addr16
dec
imull
cmp
jg
sahf
aad
pop
xchg
xor
jle
and
std
or
cli
cld
pop
add
fsqrt
adc
mov
jle
sti
js
rcll
dec
add
add
mov
add
cmp
add
arpl
aaa
and
pop
inc
xor
xlat
push
rolb
gs
inc
inc
push
sub
stos
push
fchs
fisttps
inc
add
add
lds
jns
ficompl
je
jae
add
add
xor
popa
mov
out
jg
adc
adc
std
add
add
add
int
xchg
mov
add
mov
jge
lret
fimull
mov
sbb
repz
inc
add
add
jbe
cmpsb
adcl
mov
mov
lods
aas
cmp
divl
push
jbe
test
cmp
add
add
pop
insb
mov
enter
adc
movsb
arpl
arpl
xor
sub
add
int3
adc
test
push
sahf
inc
dec
add
add
loope
sti
mov
pop
and
lcall
pop
add
test
mov
cmp
stc
repz
xor
and
add
sub
add
add
add
or
dec
cmp
cltd
jmp
mov
mov
mov
mov
adc
mov
cmpsl
das
pop
in
mov
mov
in
mov
mov
loopne
pop
daa
out
movsl
or
orl
add
mov
xchg
add
dec
add
add
in
add
add
shlb
stc
lods
fwait
rcl
push
mov
int3
inc
mov
jns
push
aam
mov
lock
les
add
add
pop
inc
sub
stos
dec
pusha
mov
repnz
dec
ret
xchg
das
dec
dec
add
add
xlat
push
pop
push
out
es
dec
jnp
stos
xor
testb
push
mov
daa
lock
loope,pn
jns
jecxz
mov
je
push
dec
fnstenv
in
or
add
add
adc
jg
pushf
pop
hlt
mov
rcrl
in
and
fwait
mov
ljmp
ljmp
and
fwait
sti
inc
jecxz
pushf
cld
test
add
jmp
lods
dec
int3
mov
movsl
mov
cwtl
jg
andb
loopne
and
pop
lret
in
xchg
add
add
leave
cmp
cmp
int3
lea
jmp
add
add
inc
mov
sbb
and
pop
mov
mov
xor
and
jo
push
inc
sub
add
add
add
das
movb
int
popf
push
inc
imul
cli
aas
jle
aas
cli
loop
popf
and
mov
cmpsl
push
cmp
mov
cwtl
dec
mov
xor
add
add
push
jae
sbb
add
adc
dec
mov
add
push
sti
and
stos
scas
hlt
test
mov
add
push
push
dec
sbb
aad
bound
int3
es
pop
mov
jecxz
stos
xor
mov
sub
add
add
lds
cmp
xor
insl
mov
mov
jne
push
push
jne
and
outsl
xchg
cmp
in
push
leave
sbb
int3
adc
shlb
jns
lret
xlat
jmp
out
and
and
add
add
aas
jb
add
add
add
add
add
loopew
mov
cmp
cld
push
mov
std
and
rorl
pop
mov
andl
pushf
pop
outsb
mov
imul
sub
pop
into
popa
inc
push
jl
push
test
add
add
pop
or
add
add
test
dec
outsl
nop
insb
add
add
into
push
xor
add
adc
add
add
dec
test
add
add
mov
push
jbe
push
popf
daa
filds
add
adc
mov
sub
add
pop
jp
jb
jb
movb
mov
jp
popf
lea
add
add
clc
movsl
mov
ret
jg
dec
sbb
adc
or
add
add
outsb
rcr
sti
daa
jg
ja
xchg
push
cmp
rcr
sahf
outsb
sbb
add
add
out
pop
adc
sbb
mov
enter
or
pop
pop
dec
mov
ficomps
xchg
add
add
test
add
add
add
bound
add
add
push
gs
and
fists
ret
cmp
imul
mov
fwait
dec
mov
subl
add
add
repz
jnp
icebp
inc
and
xor
scas
inc
inc
mov
sub
mov
add
outsl
dec
mov
iret
or
add
add
dec
add
add
pop
in
std
rcrl
call
inc
cmp
nop
movsl
jg
add
add
out
repz
int3
stc
mov
hlt
jbe,pt
xor
xchg
cld
addr16
in
pusha
add
add
mov
aad
xlat
mov
sbb
pop
aad
in
imul
xchg
push
cwtl
mov
mov
je
xorl
cmpsl
jns
dec
add
add
daa
mov
scas
push
jg
and
add
shll
insl
inc
add
add
xchg
imull
mov
mov
inc
push
add
add
add
push
dec
mov
jne
mov
ffree
push
imul
add
add
add
mov
movsl
nop
fisubl
pop
out
sti
jb
and
push
sbb
cmp
jo
loop
add
add
lock
insl
mov
iret
add
mov
jmp
fildl
add
add
mov
xchg
std
pop
xchg
cld
jl
daa
mov
in
sbbb
sbb
add
add
and
push
add
cmp
mov
add
add
mov
or
pop
push
dec
add
add
imul
mov
adc
push
aad
push
add
add
add
add
push
or
sub
in
push
and
add
add
mov
je
mov
cmc
mov
sbbb
bound
pop
test
icebp
add
add
add
inc
xor
lret
test
add
xchg
nop
mov
mov
aaa
outsb
addr16
adc
push
push
fsubl
outsl
icebp
test
sbb
stos
inc
add
add
and
test
and
pop
add
les
push
dec
ss
negb
pop
aaa
or
add
add
nop
xchg
mov
test
sbb
cmp
push
imull
cmp
add
add
dec
mov
cmpsb
cwtl
cmpb
out
sub
mov
aam
loopne
xor
call
add
ljmp
adc
pop
fmuls
add
add
push
fstl
clc
inc
mov
leave
jg
pop
sbb
popf
mov
lcall
jle
aas
push
mov
mov
xor
add
add
fsts
mov
jb
mov
mov
jnp
ss
enter
xor
push
fstl
adc
add
add
jb
fldt
sbb
loope
xchg
sub
stos
aaa
and
jmp
xor
cmp
add
jb
lcall
jecxz
xor
or
mov
cli
push
faddl
in
inc
inc
add
add
adc
mov
jge
cmp
out
subb
mov
in
pop
das
sahf
stc
mov
or
add
add
insl
rcll
sti
fsubr
les
jo
mov
out
int3
in
enter
dec
dec
xor
add
add
dec
add
add
iret
mov
mov
add
add
add
add
cld
movsl
pop
push
loope
mov
add
add
stos
jnp
xor
popa
out
sbb
mov
cli
xlat
inc
cmpsl
mov
add
add
add
inc
mov
sbb
pop
sub
and
add
add
in
push
sahf
pop
movsl
mov
int3
fists
mov
and
add
add
xchg
das
lods
pop
xchg
dec
subl
sbb
add
or
add
add
andl
bound
or
add
add
xor
insb
mov
xor
add
add
and
mov
inc
iret
sbb
add
nop
fdiv
xorl
cmp
scas
movntq
fbld
cmp
mov
iret
lcall
add
add
fmuls
adc
cmp
leave
jae
notb
jns
and
add
add
mov
add
add
cs
jmp
and
add
add
jnp
dec
push
cmp
data16
add
cld
ss
or
int3
dec
and
sbb
data16
sub
sti
xchg
shll
or
lret
es
or
add
add
pop
sarl
jns
stos
add
xor
lock
not
cmp
xor
mov
push
xor
es
addr16
jg
add
add
add
cltd
add
ss
add
add
add
push
clc
dec
add
add
jge
sbb
mov
add
add
cmp
mov
testb
leave
repnz
inc
pop
subb
add
add
mov
mov
mov
into
push
push
xor
aaa
inc
sbb
inc
cld
jecxz
daa
lds
icebp
cmp
mov
fdivrs
xchg
cmp
in
fs
jp
push
push
fists
negb
sbb
xor
mov
movsl
in
imul
in
sbb
cs
insb
mov
mov
push
into
adc
insb
add
add
add
add
add
bound
mov
add
add
test
mov
mov
sub
add
add
pushf
dec
in
lret
pop
and
add
add
cli
mov
and
jle
or
add
scas
adc
fcomp
pushl
push
sub
mov
popa
dec
and
or
add
add
in
ficompl
jle
aam
icebp
or
add
add
lret
adc
lcall
add
or
jge
add
add
arpl
mov
inc
mov
jle
sub
add
add
or
add
add
lea
add
add
push
xchg
mov
shl
mov
xlat
mov
cmc
add
lret
add
add
ret
int
fistps
sub
add
add
das
or
sub
add
dec
sahf
push
and
test
insb
mov
mov
mov
add
push
add
repnz
out
sti
fwait
xor
fsubr
lret
xor
push
pushf
mov
add
dec
add
add
mov
add
add
push
lds
in
aas
adcl
testb
loope
sahf
pop
icebp
test
bswap
mov
mov
pop
rol
or
jb
scas
fimuls
jo
or
ss
xor
xchg
ja
add
dec
jg
xor
imull
xchg
adc
add
es
dec
adcb
push
sub
add
add
in
sbb
js
fwait
mov
push
iret
aad
push
orl
add
add
imul
inc
push
testb
mov
dec
add
add
lods
and
jle
dec
cld
leave
fwait
mov
out
jl
mov
fisubrs
scas
fs
jb
ja
sbb
movq
in
push
je
fisubs
inc
add
add
add
add
add
js
add
add
or
add
enter
lcall
movsl
adc
xor
outsb
movsb
pop
push
dec
mov
or
notl
dec
divb
cltd
inc
mov
divl
lcall
jno
sub
add
add
mov
cmp
adc
or
dec
pop
sub
add
add
jmp
mov
add
add
loop
cmpl
push
rol
imul
int
add
mov
scas
mov
add
add
in
jmp
and
repz
pop
imull
add
add
xor
xorb
push
lcall
cmp
scas
leave
or
mov
shlb
and
inc
mov
js
push
lahf
lret
add
mov
mov
and
ljmp
inc
icebp
das
sarl
ret
sub
add
add
mov
pop
stos
mov
add
add
cli
push
push
mov
add
add
test
or
add
into
lea
mov
lahf
data16
inc
scas
inc
sub
pop
hlt
shl
add
mov
mov
mov
inc
out
aad
lahf
push
addr16
mov
jg
shlb
clc
aam
inc
xchg
mov
jnp
in
sahf
push
dec
xchg
out
mov
je
and
xchg
pop
mov
je
inc
push
mov
sbb
icebp
notb
mov
mov
inc
mov
add
add
sub
xchg
mov
loope
mov
outsb
mov
rcrb
jo
cmc
dec
arpl
and
adc
mov
dec
or
adcl
jns
mov
in
in
orl
lret
mov
fists
mov
jge
mov
out
stos
push
sarl
pusha
add
add
daa
pop
pushf
aaa
pop
daa
push
sbb
sub
add
add
add
add
out
and
mov
loop
cmp
mov
add
add
jne
repnz
mov
ja
mov
inc
and
and
out
ss
dec
add
sub
pop
pusha
mov
pop
data16
add
add
pop
mov
add
cwtl
mov
and
and
les
outsb
cmp
je
add
add
lea
mov
push
data16
test
cltd
aas
mov
jmp
mov
mov
pop
adc
dec
lcall
lret
or
add
add
sarb
cmp
add
pop
mov
in
pop
and
add
add
inc
mov
xchg
mov
int
jno
jg
add
add
push
cmp
mov
dec
iret
mov
movsb
aad
repz
and
andb
fnstsw
sub
jne
test
sarl
xorl
cmp
inc
stos
or
cmpsl
pop
mov
mov
xor
pop
mov
xor
insb
add
add
inc
ror
mov
out
test
leave
mov
or
fucom
mov
add
mov
mov
xchg
int
stos
and
ds
addr16
mov
push
rcrb
rcrb
jmp
js
loope
notb
add
add
or
aad
test
adcb
add
inc
mov
lock
out
daa
xlat
imul
js
jecxz
mov
push
addb
xor
in
shl
jnp
push
iret
sbb
cmc
mov
iret
jg
and
mov
jg
popf
inc
pop
xchg
jle
ljmp
in
sbb
add
test
push
lds
mov
xchg
pop
or
xchg
stos
inc
test
adc
call
add
inc
mov
cwtl
dec
add
add
xchg
and
cwtl
inc
iret
cld
dec
mov
popf
jnp
lret
dec
add
add
in
cmp
cwtl
sub
pop
addr16
jl
mov
add
add
sub
shrl
xchg
adc
cwtl
sbb
test
test
repnz
jb
lahf
inc
mov
pop
imul
jbe
orb
test
mov
xchg
addr16
mov
jge
jg
enter
cltd
jno
add
add
add
add
add
or
jo
add
add
test
add
push
sbb
pop
cmpsl
push
nop
pop
std
add
popa
sbb
jns
cmp
add
fbstp
pop
add
add
add
inc
xor
and
pop
cmpl
add
add
dec
inc
add
add
mov
add
mov
add
add
push
out
popf
mov
jno
pushf
dec
pop
pop
mov
pop
mov
add
add
test
nop
jae
ljmp
add
lock
add
add
xchg
and
xor
add
pop
xor
jnp
imul
add
add
mov
push
cmpsb
push
lock
add
add
xchg
cli
cmp
add
add
scas
fs
int3
cltd
xchg
fists
shll
and
sub
outsb
lock
hlt
mov
or
and
push
pushf
frndint
jg
mov
scas
daa
fdivl
pop
mov
scas
add
sar
shrl
add
add
or
dec
sbb
jl
adc
push
lcall
dec
add
add
fsubl
and
pop
push
idivl
and
add
add
add
add
xchg
pop
or
inc
fcompl
into
orl
sbb
jae
push
sub
das
addr16
int3
or
ret
sahf
jecxz
cli
pop
mov
add
add
adc
cmp
add
imul
add
add
dec
add
xor
jo
clc
add
add
add
push
push
add
add
add
mov
cmp
jle
testb
lods
movsl
and
cmc
cmp
ljmp
xor
outsl
pushf
and
mov
in
shlb
add
adc
jge
mov
mov
iret
rcll
inc
addr16
mov
adc
add
add
push
lcall
js
orb
add
sahf
push
ss
mov
dec
pushf
fisubrs
outsb
dec
lods
sub
cmpb
add
add
push
jl
cld
mov
test
mov
mov
adc
sbb
test
add
add
jne
es
push
xchg
or
add
add
pop
js
cmp
pusha
mov
xor
shll
add
sahf
movb
xor
js
pop
and
mov
cmp
scas
mov
jae
daa
loopne
insb
mov
andl
push
xchg
mov
stos
mov
outsb
and
movb
xchg
ljmp
add
add
mov
pop
mov
mov
add
fcompl
int
pop
cld
icebp
jl
mov
into
mov
xor
xchg
cmc
loopne
pop
xchg
cs
pop
mov
fimull
pop
sbb
jl
xor
pop
inc
jmp
add
les
mov
loop
xlat
jmp
and
add
add
ss
int3
push
ds
add
add
mov
js
adc
jo
mov
pop
push
jae
fimull
add
add
test
add
mov
clc
in
cmp
add
add
je
pop
mov
mov
add
add
js
insb
mov
sbb
mov
inc
jle
inc
xchg
int
add
add
sbb
lcall
add
sbb
insl
fs
xchg
std
jl
adc
add
add
pop
mov
dec
test
cmp
dec
out
jnp
lock
clc
add
inc
mov
data16
mov
ds
imul
add
shlb
xchg
mov
add
add
enter
add
jge
pop
call
adc
dec
pop
mov
cltd
test
add
add
cltd
pop
and
cltd
scas
in
inc
mov
test
or
add
add
mov
mov
rcl
mov
mov
push
cmp
add
add
out
cwtl
sub
es
cwtl
lcall
shr
test
and
sarl
sub
add
add
gs
pop
test
add
lcall
mov
js
add
add
xchg
mov
cmp
inc
push
es
add
sub
add
add
or
add
add
insb
add
add
add
add
add
cmp
int
mov
mov
jo
in
mov
out
or
add
add
loop
into
and
push
hlt
icebp
lahf
xlat
adc
stos
or
add
add
sub
inc
cmp
rcr
sub
and
mov
or
inc
inc
loope
loop
out
inc
cwtl
add
mov
add
add
jle
adc
inc
xor
mov
push
mov
adc
add
add
push
sbb
cwtl
jle
aaa
cmpl
add
stc
out
dec
mov
add
ror
in
popf
and
push
leave
pushf
jmp
add
mov
int3
mov
pop
call
mov
jbe
rclb
fldt
hlt
out
mov
hlt
ss
cmc
sub
add
add
and
pop
dec
push
out
jns
jp
push
stos
shlb
mov
jmp
shl
aad
mov
add
push
arpl
jl
inc
lea
loopne
movsw
jb
jne
xchg
cld
hlt
jle
inc
jns
in
shl
xor
gs
loop
rcrl
in
ds
int3
adc
inc
insb
add
add
notb
test
add
add
insb
mov
adcb
mov
iret
add
mov
mov
dec
out
xchg
inc
mov
pop
push
jb
orb
mov
push
cmp
inc
ja
mov
cmp
imul
cmp
push
jne
and
mov
add
xor
or
orb
push
imul
aad
dec
mov
clc
insb
add
add
ss
or
out
push
sub
adc
sub
mov
in
jmp
push
cli
lret
dec
mov
xor
add
add
xchg
mov
adc
add
add
add
movsb
jp
mov
jnp
cltd
in
pop
pop
jb
inc
add
add
sub
add
add
aad
arpl
pop
add
cmp
push
test
xchg
add
add
add
stc
fstl
insl
jmp
inc
mov
mov
out
mov
daa
add
lea
popf
jnp
pop
push
push
aaa
xor
mov
xchg
pop
mov
aam
movsb
out
mov
cmpsb
pop
mov
add
add
outsl
lret
xlat
and
add
add
shll
adc
clc
push
inc
sub
sti
insb
mov
testb
data16
mov
aaa
mov
inc
mov
mov
push
or
add
fldl
add
mov
jg
mov
loop
xchg
jne
ds
std
xchg
dec
mov
aas
xchg
adc
jl
dec
test
fidivs
cmpsl
js
pop
aad
mov
sub
sbb
int3
cltd
clc
xor
subb
add
jge
repnz
aad
pop
fistps
add
enter
add
stos
push
or
inc
mov
jle
or
add
add
jp
scas
sub
sub
clc
sbb
sub
outsl
fcomps
js
and
add
add
sti
lods
lcall
add
add
add
xchg
bound
or
xchg
ljmp
add
xlat
stos
xchg
popf
sbb
mov
faddl
lret
fs
sub
add
add
sbb
pop
add
add
and
and
mov
mov
outsb
add
add
add
sbbl
fs
popl
sar
shlb
xchg
aad
xor
sbb
rolb
mov
sti
es
jbe
shrb
lcall
add
cmp
add
subl
and
add
add
add
add
or
add
add
insb
mov
dec
inc
addb
dec
inc
add
add
push
sbb
mov
cld
ret
adc
popf
add
add
repz
sbb
push
int
mov
add
cmpb
add
add
enter
xchg
add
add
add
adc
fbld
mov
jns
pop
add
cli
insl
adc
insl
out
push
popf
push
xlat
dec
adc
and
add
add
fs
cs
mov
bound
xchg
add
add
mov
mov
jnp
push
add
add
add
mov
add
add
xor
sub
inc
loop
out
mov
ret
das
clc
pop
scas
ficompl
fildll
push
outsl
xchg
mov
push
test
jae
mov
pop
dec
cmpsl
mov
add
add
mov
and
add
add
lea
mov
dec
scas
pop
pop
push
ret
sub
mov
fmuls
pop
sahf
daa
sbb
inc
push
sbb
xor
jg
or
jg
insl
clc
imul
frstor
adc
les
and
sub
xchg
scas
mov
daa
leave
or
add
add
pop
or
add
add
sbb
add
add
test
stc
add
mov
dec
adc
jg
and
add
add
lods
scas
or
add
add
sub
add
add
add
push
jb
pusha
mov
inc
add
add
mov
dec
add
add
cmp
addr16
xor
rclb
shlb
sbb
enter
daa
mov
adc
add
insb
add
add
mov
out
and
adc
insl
xchg
xchg
xchg
mov
mov
ja
add
add
add
mov
pushf
xchg
or
fmul
and
add
add
mov
shrl
rclb
cmc
cmpsl
mov
cwtl
add
and
cmp
mov
int
mov
jnp
pop
sti
jl
pop
push
pop
dec
imul
mov
aaa
xchg
adc
add
add
js
pop
es
clc
push
push
lcall
lret
adc
sbb
or
aaa
or
add
add
lcall
fdivl
pop
inc
cmp
jne
imul
inc
outsl
lcall
sub
dec
dec
mov
sub
fwait
in
mov
imul
add
add
aam
mov
sub
sbb
test
bound
repz
add
add
ret
pop
mov
daa
lcall
loope
cwtl
pop
mov
or
add
add
test
movsl
xor
mov
cmp
pusha
add
add
jg
fdivrl
mov
out
iret
popa
loop
or
add
add
aam
test
lods
icebp
and
add
add
sbb
xchg
add
jne
rorl
pop
out
lea
jb
mov
xchg
or
lret
in
repz
enter
sub
clc
cmp
sub
add
add
dec
add
add
test
clc
sbb
mov
mov
pop
mov
add
add
mov
in
mov
cmp
add
add
add
ljmp
mov
and
pop
icebp
mov
in
leave
xchg
jl
push
roll
push
pushf
ficompl
decl
inc
pop
or
gs
movsl
pop
movsl
gs
push
cmc
cwtl
int3
outsl
stc
aam
inc
push
ja
xor
sub
mov
xchg
add
add
mov
jg
mov
test
imul
add
add
add
lret
mov
inc
cmpsl
and
scas
mov
es
pop
scas
popf
clc
xchg
sti
cmp
repz
inc
fldcw
js
pop
push
fildl
ja
mov
mov
pop
mov
imulb
add
add
pop
stos
dec
add
add
and
add
add
rclb
daa
int3
ds
loop
or
mov
sbb
mov
add
cltd
loope
sub
mov
test
stc
js
xchg
sub
mov
xchg
and
sub
jns
pop
cmp
inc
push
lock
je
dec
push
aad
out
pushf
adc
add
add
enter
lods
cmp
xchg
and
xchg
adc
test
mov
pop
mov
push
lret
sti
mov
jno
and
into
in
jmp
adc
sbb
xchg
push
daa
ja
popa
mov
jg
out
movsb
rolb
dec
mov
jb
xchg
pop
es
inc
daa
mov
add
mov
push
jge
int3
lods
push
clc
cmpsb
push
bound
fildl
inc
xchg
and
and
ficompl
and
cltd
mov
cmp
rep
out
fiaddl
add
or
add
add
add
fwait
movsb
testl
std
scas
mov
mov
xchg
or
stos
or
jle
xchg
jb
popa
aam
xchg
push
movsl
lds
imul
out
rcr
fstpt
mov
je
imulb
lea
add
add
xchg
movsb
jp
add
add
das
cmpsb
mov
xchg
xchg
and
add
add
ss
xor
mov
orb
addb
sbb
pop
ds
add
sbb
loopne
dec
mov
lods
adc
add
in
in
scas
add
add
add
imul
lret
mov
mov
mov
push
inc
xor
mov
into
sbb
jb
and
xchg
sub
fsts
sub
cmp
add
mov
mov
inc
add
add
repz
pop
addr16
je
jno
cmp
cld
pop
mov
dec
add
add
data16
pop
sbb
mov
dec
shlb
adc
mov
add
jno
pop
sbb
nop
and
sbb
mov
add
xor
in
vsqrtsd
pop
test
cmp
add
pushf
jbe
add
add
mov
xor
mov
popf
jno
and
hlt
inc
mov
scas
sahf
ss
cwtl
sub
add
add
lcall
inc
sbb
sub
add
add
xchg
cmp
add
jns
shll
enter
mov
cmp
addl
lock
sbb
adc
ficoms
les
test
add
add
and
mov
add
or
movsb
sub
clc
cmc
push
sub
jmp
outsl
cwtl
insb
mov
ffreep
and
lock
jmp
dec
jecxz
add
add
mov
pop
test
dec
dec
sbb
xor
xor
add
add
and
add
add
mov
mov
xor
add
xchg
mov
imul
add
mov
shll
cs
les
add
add
sbb
mov
cli
in
mov
test
test
mov
mov
das
or
add
mov
and
add
add
add
add
mov
das
lock
out
rol
jle
call
pop
push
in
inc
inc
sbb
jle
pop
sahf
insl
popa
xor
leave
mov
out
movsb
sbb
rcll
xor
or
loopne
add
add
sbb
sarl
sub
xor
adc
testl
add
add
fstl
add
add
call
shlb
ret
sub
cmc
inc
or
rcr
idivb
mov
repnz
dec
mov
push
adc
addb
push
loop
or
or
lret
add
add
add
mov
aam
popa
out
and
jl
outsb
outsb
in
push
clc
mov
sbb
xchg
xchg
jo
lcall
add
add
je
es
push
xchg
loop
aas
lods
pusha
mov
push
add
jo
inc
pop
daa
fidivl
push
mov
adc
stos
mov
add
add
into
pop
sub
ja
cmp
scas
lods
lock
lods
addr16
push
mov
sbbb
xchg
inc
lahf
shlb
xor
jp
aam
out
orb
mov
add
add
sahf
mov
int3
iret
loopne
mul
or
add
add
pusha
add
add
cld
in
mov
sub
mov
push
iret
leave
movsl
inc
cmc
inc
lea
mov
xor
inc
add
add
dec
xor
pop
outsl
repnz
xor
mov
je
push
dec
stos
push
mov
push
cmpsb
push
mov
mov
or
xlat
int
cmpsb
jle
in
jge
mov
sub
add
add
iret
ja
dec
iret
dec
mov
sbb
and
add
add
sbb
add
add
push
mov
insb
add
add
int3
sti
push
and
inc
cmpsb
call
in
sti
push
push
lret
cltd
sub
add
add
imul
sbb
add
add
cmp
in
fwait
mov
mov
mov
or
lcall
pusha
add
add
data16
dec
fimuls
ljmp
shrb
add
add
iret
shlb
cltd
sbb
out
cmp
jno
xor
mov
cmp
lods
xchg
push
mov
gs
sub
add
add
pop
sbbl
add
add
mov
jbe
or
movsb
push
and
inc
mov
mov
dec
xor
add
add
add
lret
xor
je
and
pop
or
stos
xchg
addb
test
cwtl
loope
xor
add
mov
mov
add
add
jle
xor
inc
scas
dec
mov
jg
aaa
jo
push
call
aaa
loop
fisubs
push
sarb
push
xchg
push
loope
dec
mov
cmpsb
xor
push
loopne
pushf
mov
imul
add
mov
mov
enter
sub
add
add
add
add
mov
pop
scas
jne
notb
cmp
add
rolb
push
and
leave
sahf
inc
inc
lret
out
adc
push
push
and
gs
jl
fsts
mov
push
xor
lret
sti
jp
add
add
jno
andb
pop
push
pop
dec
xchg
and
jg
add
add
or
jns
insb
add
add
roll
add
scas
lds
pop
dec
mov
loopne
adc
scas
mov
movsb
es
dec
fcomi
shrl
jo
jmp
incb
add
cmc
mov
mov
repz
push
push
pop
leave
jne
fdivs
inc
aam
cmp
add
movsb
lock
mov
add
add
lret
mov
or
add
add
add
add
mov
cwtl
shll
cmp
jge
mov
cmc
icebp
imull
add
add
sbb
popa
pop
mov
add
add
mov
mov
and
sbb
mov
movb
jnp
test
add
add
mov
add
xor
add
add
shrb
add
jecxz
push
rcl
xor
nop
les
adc
icebp
aas
rcrb
dec
mov
cmp
add
add
add
loope
xor
rorb
icebp
add
mov
add
cmpb
add
pop
inc
xor
mov
lods
sarb
and
mov
add
add
add
add
fwait
stc
pop
or
add
add
dec
les
faddl
shll
adc
mov
sbb
add
add
xor
dec
mov
inc
add
add
mov
pop
or
add
add
ret
add
ljmp
xchg
pop
cli
mov
sbb
fwait
pop
fwait
cmpsl
add
fnstcw
neg
addr16
inc
mov
ljmp
cltd
sbb
mov
mov
jmp
sub
add
add
mov
addb
aam
aas
ljmp
mov
movsl
sub
aad
mov
mov
or
add
add
mulb
adc
or
pop
mov
jmp
insb
add
add
xor
add
add
mov
pusha
add
add
je
adc
leave
lods
add
fisubrs
adc
add
stos
push
mov
les
in
jo
mov
push
mov
idivl
add
sbb
push
outsl
pop
dec
add
mov
mov
call
sbb
inc
jle
lds
repz
fistpll
shlb
mov
out
dec
or
mov
and
xor
add
add
fiadds
jge
cli
repnz
add
add
inc
push
mov
sbb
add
jmp
cli
cld
ljmp
mov
dec
test
xlat
ljmp
push
imul
add
add
loop
xchg
fisubs
add
add
inc
add
add
push
lods
jae
sbb
inc
adc
testl
testl
and
repz
pop
xchg
adc
idivl
fwait
cltd
stc
lods
shlb
and
mov
pop
and
or
xor
mov
sti
and
xchg
mov
jnp
add
add
jbe
push
cli
rcll
mov
cmc
xor
std
mov
add
mov
inc
cmpsb
mov
and
nop
push
cli
fmull
push
add
cmp
jg
aas
mov
add
add
sub
dec
rcrl
cs
add
add
push
movsb
pushf
sub
fsubrs
out
lock
add
jnp
xlat
scas
loop
mov
and
add
add
or
es
in
and
out
lret
mov
jns
inc
mov
mov
jns
mov
sarb
add
add
xor
jb
and
add
add
add
add
fisubrs
sub
test
mov
inc
test
push
call
add
add
dec
popf
data16
testb
add
xor
loope
xor
add
add
test
daa
adc
add
jnp
and
add
add
inc
jl
sbb
pop
outsb
test
into
push
lds
add
xchg
add
add
add
push
loope,pt
xor
xor
mov
fnsave
and
xor
xor
sub
add
add
dec
pop
jl
adc
lcall
add
hlt
testw
les
imul
sahf
mov
add
add
out
int
outsb
or
add
add
js
mov
imul
pop
das
test
lods
popa
push
xchg
sub
mov
and
mov
jno
jle
mov
xchg
outsb
push
mov
lods
das
sahf
jmp
push
mov
aas
xchg
cld
push
wrmsr
dec
das
mov
cmc
xchg
mov
in
aad
mov
add
add
fldl
pop
aad
add
add
push
or
movsb
stc
jmp
out
jae
mov
push
cli
das
or
dec
pop
ficomps
or
sarb
or
inc
cmp
add
add
pop
dec
lea
adc
jg
idivl
add
add
mov
adc
das
scas
sbb
add
add
ja
lcall
movsb
jbe
xchg
clc
add
inc
loop
aas
stc
test
add
add
add
sbb
inc
add
add
jo
cmp
inc
ljmp
pop
xor
adc
sbb
pop
or
inc
stc
push
push
inc
and
jg
aaa
push
js
cwtl
js
lds
call
pop
mov
ret
cmp
add
add
xor
in
push
push
jbe,pn
ficompl
xor
rorb
aas
xor
mov
sub
add
cmpsl
gs
pxor
movsl
push
and
add
mov
cwtl
in
sbb
outsl
push
insl
insl
arpl
ror
lods
scas
mov
imul
inc
xchg
test
cld
mov
add
add
lods
sbbb
outsb
or
add
add
mov
or
sahf
sub
add
lods
jbe
in
inc
push
adc
jae
pushf
xchg
mov
jle
pop
xor
jbe
xor
in
adc
cmpsl
sahf
je
inc
les
push
movl
add
add
add
out
lret
cwtl
xchg
out
cmp
pushf
enter
add
add
jl
adc
shl
cmp
insb
mov
mov
lcall
jg
outsl
inc
mov
dec
lds
add
xchg
iret
in
shlb
andl
sbbl
sub
out
pushf
jns
int3
pushl
in
adc
pop
imul
add
add
sub
adc
lea
cwtl
adcl
xorb
movsb
pop
sub
mov
testb
xor
mov
mov
jmp
inc
pop
pop
cmp
adc
sub
add
add
cmp
sbb
add
add
inc
cld
lret
cmp
and
sbb
mov
cmc
push
lds
cwtl
mov
addl
data16
dec
frstor
rcr
dec
add
add
dec
mov
enter
lahf
das
sti
pusha
mov
idivb
adc
sub
add
add
mov
test
nop
scas
movsl
lods
ret
mul
mov
stos
push
lea
adc
pop
sahf
rolb
inc
repnz
add
add
cmp
sub
adc
add
add
fsubrl
add
insb
add
add
xchg
jno
scas
aaa
and
hlt
mov
adc
divb
test
jo
jb
icebp
bound
mov
xchg
sub
sub
popf
mov
lds
test
pop
dec
ret
dec
or
push
jle
sbb
lret
adcl
add
add
add
push
ret
jl
or
add
add
mov
insb
add
add
sub
add
add
jb
clc
fsubs
xchg
imul
outsl
push
mov
cmp
mov
add
add
mov
lock
out
add
ds
push
inc
mov
mov
ret
add
add
add
ror
outsl
or
add
add
dec
mov
push
test
dec
dec
add
add
inc
push
inc
out
fadds
or
sub
add
add
inc
push
push
or
add
add
add
add
add
test
dec
push
stc
pop
cmp
pop
jecxz
popa
scas
cmpl
mov
movsb
xchg
pop
push
daa
mov
loop
mov
movsl
test
mov
pop
and
add
add
push
cmp
add
add
xchg
icebp
daa
push
add
imul
shrl
nop
scas
and
outsl
inc
pop
sbb
add
add
inc
lahf
add
sti
hlt
mov
mov
xlat
xchg
mov
jle
mov
mov
sbb
das
and
lret
sarb
xor
fisttpl
sbb
in
jp
jg
adc
xchg
lods
add
clc
int
es
mov
add
add
push
fs
scas
and
add
add
loopne
push
notl
adc
inc
or
add
add
imul
pop
dec
sbbl
inc
ds
inc
add
add
dec
mov
gs
mov
add
repz
fldl
lds
cmpsl
sub
inc
int3
fcomip
loopne
loop
in
mov
pop
mov
jl
mov
push
mov
adc
jns
lret
jmp
mov
cmp
lahf
jnp
inc
stc
sbb
pop
mov
out
popa
xchg
push
cmp
jnp
add
movsb
repz
sbb
mov
inc
div
sbb
mov
push
pop
popa
scas
daa
adc
mov
inc
mov
rolb
add
add
mov
imul
and
dec
mov
test
es
movsb
sti
or
mov
add
and
mov
add
add
stc
jbe
addr16
mov
arpl
cmp
adc
push
int
mov
jmp
add
test
add
lea
cmp
bound
clc
or
scas
adc
out
insl
adc
add
push
cmp
add
add
inc
mov
test
insl
mov
scas
ds
push
dec
nop
inc
xlat
test
icebp
push
das
push
sti
ror
push
xchg
cmp
cmpsb
cmc
stc
sub
mov
jo
nop
fstpl
insl
cmc
mov
push
jns
jo
mov
mov
mov
mov
jecxz
pop
jmp
add
add
sahf
add
add
add
mov
jg
pop
insl
sub
sub
out
dec
add
add
inc
shrl
cwtl
adc
xchg
mov
mov
add
xor
loopne
cmc
inc
lcall
add
add
imul
xor
adc
fcompl
or
or
pop
loope
into
sbb
xchg
lods
xor
cld
cmp
sub
pop
cmp
add
add
cmp
adc
sbb
in
xor
sbb
lods
bnd
cmp
mov
add
add
out
sub
add
add
arpl
jb
loope
pop
in
lds
dec
dec
mov
mov
mov
sbb
lret
int
ficoml
pop
jmp
xchg
jle
sub
adc
mov
xor
add
add
sbb
test
mov
out
jl
adc
xchg
in
jg
nop
scas
xor
ja
mov
or
cs
mov
jb
leave
xchg
jo
test
neg
cmpsl
pop
add
add
dec
orb
jle
addb
daa
js
cwtl
pop
add
add
add
add
add
add
stc
paddw
pusha
add
add
sbb
lcall
add
mov
jecxz
clc
rclb
and
add
add
test
jp
rcrb
popf
nop
xorb
jne
mov
inc
add
add
xchg
cmp
in
mov
cwtl
mov
rcrl
mov
int3
cmp
mov
push
and
jbe
jecxz
enter
mov
jno
jl
and
rcl
inc
jno
sbb
cmp
mov
nop
out
pop
shl
sbb
stos
call
insl
and
lahf
push
add
cmpsl
xor
cmp
sbb
roll
sub
and
cltd
inc
sti
testb
cmc
xchg
dec
and
mov
xor
add
add
hlt
mov
ret
nop
pop
addr16
sbb
jae
test
aad
cmc
stos
xor
imulb
sub
add
add
lcall
les
pop
movsb
stos
mov
xchg
add
add
cli
out
iret
cltd
mov
hlt
movsb
lock
add
das
and
out
fcomps
cltd
cmp
sbb
sub
push
lcall
add
add
dec
incl
add
cmp
lods
mov
jp
dec
add
add
das
add
aaa
cmp
add
mov
add
add
add
add
dec
ret
cmp
sbb
stos
pop
add
aad
sti
sbb
sarb
inc
loopne
add
adc
iret
and
add
add
push
pop
or
arpl
xorb
xchg
rcrl
adcl
aad
fwait
rorb
inc
cwtl
mov
cli
cmp
xor
inc
jnp
mov
add
add
and
fisubs
add
inc
jae
mov
mov
or
repz
add
fistl
cmp
lock
insb
add
add
test
jle
inc
mov
fwait
cmc
push
xorl
add
add
sbbl
lcall
lea
xchg
dec
add
add
shrb
cwtl
lods
aad
test
ljmp
rolb
add
add
int3
add
test
bound
sahf
mov
decb
fnstcw
add
add
and
add
add
add
push
push
push
sahf
fldenv
mov
enter
movd
xchg
jb
scas
push
shl
push
sbb
xor
jge
inc
push
dec
imul
lea
add
add
inc
or
push
les
push
xor
in
sbb
mov
pop
cs
mov
lret
lcall
mov
aam
sahf
icebp
jno
fdivrs
pusha
mov
cwtl
cmp
mov
lret
jnp
and
dec
scas
jb
fs
mov
add
stos
pusha
add
add
mov
push
sbb
and
add
add
int3
outsl
cmp
jns
repnz
out
int
fcoml
aad
mov
in
jns
mov
divl
add
add
xchg
and
add
add
bound
xchg
jecxz
or
jge
mov
in
out
cmpsb
test
xchg
lds
lahf
sahf
or
jl
leave
pusha
add
add
xor
jge
icebp
fsts
lods
incl
cs
pop
mov
xor
insl
mov
jl
xor
xchg
jge
hlt
loop
jb
adc
add
add
add
and
movsl
dec
pminsw
jbe
stos
fstpl
nop
test
cli
std
icebp
xor
stos
out
fwait
inc
cmp
fdiv
pop
mov
ret
orl
in
aam
dec
add
add
rorl
jbe
pop
sub
push
aad
jb
fidivrs
cmpsb
add
adc
test
daa
sahf
mov
inc
ds
add
add
inc
lock
imul
ljmp
shrl
das
andl
add
and
add
add
add
add
add
add
lods
std
int3
outsb
ret
dec
fidivl
dec
pusha
add
add
jno
cli
int
or
add
add
mov
scas
xchg
sbb
cmpsl
popa
mov
dec
xchg
imul
ds
bound
add
add
add
pusha
mov
and
or
outsb
cmp
add
test
add
add
scas
mov
xchg
cmc
add
rcll
fwait
nop
and
popf
mov
loopne
mov
ret
and
popa
cmp
popf
add
add
add
inc
fnstsw
inc
add
adc
sub
add
add
movsl
inc
add
add
mov
mov
cmp
inc
pop
inc
xchg
mov
icebp
dec
cli
call
add
add
addb
sti
fnsave
out
xchg
add
lret
pop
pop
add
add
add
sbbl
hlt
lret
xchg
xchg
mov
add
jns
push
bswap
cmpsb
xor
pop
sahf
xchg
cmpsb
addr16
mov
add
out
cltd
jnp
lods
cli
mov
shll
out
cmp
cmp
sub
inc
hlt
xchg
movsb
cmpsb
cltd
stos
shld
js
ja
rcrl
mov
jne
jbe
xor
loope
xorb
or
add
add
mov
add
dec
sbb
sub
aam
sarb
sub
xor
add
mov
mov
and
pop
sarl
popa
icebp
aas
pusha
mov
sub
cmpsb
push
pop
shll
arpl
sub
mov
and
push
leave
pusha
add
add
lods
cmp
sbb
mov
and
stos
iret
mov
mov
mov
xchg
fbld
jl
dec
mov
mov
sbb
stos
das
xchg
test
leave
xlat
ljmp
add
add
lret
sub
add
add
imul
testb
add
cmpsl
scas
aaa
mov
mov
add
add
mov
add
inc
xlat
adc
insl
mov
cltd
gs
and
add
test
rcll
jle
sbb
mov
add
jo
mov
push
rcrl
sbb
movsb
jmpw
sub
add
add
addr16
out
ret
in
jle
cmp
xchg
lea
fiadds
pushl
add
mov
aam
or
mov
or
add
add
cld
mov
ja
js
icebp
mov
add
add
add
add
pusha
mov
and
add
add
mov
jne
adc
add
push
div
fwait
test
fcomps
add
data16
popf
xor
push
std
ja
rcl
int3
cmp
xacquire
sbb
adc
sbb
loope
add
add
cmp
mov
mov
lock
cmp
xchg
mov
repnz
cmpsb
mov
pop
mov
lock
movsl
xchg
addl
xor
lahf
mov
fistl
cmp
fisubl
in
pop
in
lea
add
add
mov
or
add
add
pop
add
add
ljmp
sbb
inc
jge
dec
jl
pop
sub
xor
call
int3
xor
stos
dec
mov
cmp
call
and
ja
cld
and
icebp
ret
lahf
mov
out
add
add
jle
dec
xchg
inc
pop
xchg
xchg
jnp
jnp
jle
mov
and
inc
xchg
mov
jbe
add
add
inc
sub
add
imul
mov
lret
lret
mov
or
add
add
push
popf
mov
add
add
add
nop
mov
stc
int
in
popa
sbb
lea
gs
pop
xchg
fiadds
pop
in
test
add
add
mov
call
mov
test
pop
jb
mov
cmp
add
add
in
ljmp
inc
sub
jns
inc
mov
mov
shlb
cmc
ljmp
mov
add
add
mov
xor
adc
jecxz
je
imul
sub
mov
das
outsl
outsb
or
cmpsl
adc
shr
nop
les
add
add
add
mov
add
add
xor
inc
mov
xor
int3
mov
popf
ds
mov
adc
add
add
sbb
add
mov
and
in
mov
clc
fldt
add
inc
add
add
ja
data16
cs
or
push
inc
int
mov
add
pusha
mov
mov
int
mov
aas
pop
aad
mulb
pushf
fstl
bound
add
cmpsb
jns
ja
pop
sub
add
add
int
push
and
xorb
iret
aam
ljmp
sub
add
add
fildl
mov
mov
jns
leave
xchg
sahf
out
mov
add
cmpsl
or
add
add
aas
subb
imul
wrmsr
sbb
xchg
arpl
xorb
or
add
add
cmc
in
aaa
push
addr16
xchg
dec
add
add
aad
loopne
insb
mov
orl
dec
mov
incl
adc
cmpsb
or
add
add
mov
test
popa
jo
cmc
jbe
inc
mov
popf
sbb
pop
std
lods
cs
mov
dec
mov
add
add
lock
arpl
addb
xlat
pop
xor
stos
rolb
int3
outsb
cmpsb
shlb
in
rcr
or
xchg
jmp
arpl
mov
pop
out
stos
lods
into
pop
dec
in
inc
enter
add
add
test
add
add
fistpll
out
jbe
jmp
das
push
out
xchg
rol
jnp
int
mov
lahf
ret
cmp
imul
lea
stos
fisubs
mov
cmp
mov
das
movl
test
mov
imul
negb
inc
test
jp
cmp
les
loop
mov
adc
imul
add
add
add
xor
mov
inc
mov
add
aam
add
add
mov
out
xchg
mov
pop
jb
fld
popf
out
inc
fadd
xchg
mov
cmp
sarl
add
scas
mov
dec
mov
mov
rcrl
xor
add
or
add
add
aas
push
push
rcrb
sbb
add
jns
adc
xor
scas
mov
add
xor
add
add
add
imul
add
lds
loop
dec
mov
stos
jge
out
shrl
add
add
mov
das
in
stos
xor
add
add
sti
lds
cld
scas
repz
pushf
xchg
pop
in
sbb
ror
js
gs
jecxz
mov
pop
in
jecxz
repnz
fucomi
sbb
imulb
add
add
repz
add
add
mov
mov
addr16
adc
add
fwait
lods
jne
lods
mov
pop
movsl
js
push
sbb
test
inc
mov
jmp
insb
mov
daa
mov
sbb
sub
shl
clc
inc
jnp
mov
fistps
sti
or
add
add
pop
push
outsb
bound
sahf
fidivl
mov
cltd
ja
jle
adc
xchg
or
add
add
mov
xor
std
inc
sub
add
add
cmc
sub
nop
call
lods
xchg
mov
xchg
adc
push
xchg
adc
in
fisubrl
add
add
sbb
sub
add
add
add
pop
push
add
add
add
rorl
notl
inc
in
jb
sbbb
jbe
and
add
add
adc
sub
sbb
cmc
repz
loopne
fistpll
outsl
mov
add
mov
in
sub
add
add
add
and
jl
aas
sbb
loope
dec
stc
sbb
xchg
xor
mov
dec
pop
lret
es
das
pop
push
adc
test
xor
cmp
push
push
push
mov
add
add
rcll
add
add
add
insl
jbe
or
sbb
dec
stos
xchg
rcr
sub
add
jp
cli
daa
test
pop
inc
jno
sub
add
add
add
add
mov
movsl
push
addb
add
add
loope
cmpsb
outsb
iret
paddd
mov
repnz
das
insb
mov
out
int
call
cmpsl
dec
mov
sahf
gs
mov
or
out
add
mov
or
add
add
mov
push
enter
jne
mov
loope
stos
add
add
add
mov
inc
and
mov
jnp
mov
repz
push
xchg
inc
add
add
outsl
lock
mov
icebp
decl
stc
outsb
push
sarb
inc
xorl
aam
mov
push
add
add
add
add
sub
in
mov
icebp
mov
lods
cld
dec
mov
add
add
repz
js
fidivrs
add
add
js
movsb
jns
test
add
and
add
add
pop
push
pop
punpcklbw
add
add
loopne
add
add
push
jae
ja
lahf
aaa
fildll
leave
out
cmc
leave
and
add
add
mov
pop
sbb
into
and
sbb
hlt
mov
ret
into
mov
orb
imull
add
add
cmp
xchg
fsubrp
mov
sbb
pop
sub
add
add
add
add
repnz
dec
in
push
mov
test
pop
int3
push
into
fisubl
cmpsl
or
stc
lods
push
fwait
sub
stc
pop
ja
push
pop
add
mov
mov
inc
fcmovnu
sub
inc
in
scas
sbb
add
lea
stos
loope
add
add
cltd
mov
pop
xchg
fstl
add
sbbl
aaa
inc
jno
fcoms
je
add
add
movsl
add
out
mov
clc
loop
sub
cmp
or
mov
sbb
push
xor
add
add
add
add
in
xchg
dec
movsl
jno
jnp
mov
bound
ret
add
add
and
add
add
add
add
aas
repz
out
pop
das
mov
in
add
add
icebp
loope
mov
iret
mov
loopne
jns
jp
out
xchg
xchg
push
jle
out
enter
mov
fldcw
js
sbb
sub
arpl
popa
pop
mov
imul
add
add
jnp
stc
inc
icebp
std
out
mov
and
add
add
push
xor
mov
push
jl
fs
inc
jge
pop
das
mov
sti
and
xchg
cltd
test
push
lahf
loopne
xor
ds
out
fcomp
shll
sbb
jb
cmp
pusha
add
add
pop
xchg
adc
adc
rorb
jge
outsb
or
add
add
jns
imul
cmc
push
inc
rcrl
xchg
adc
divb
nop
ds
cmc
in
sbbb
cmpsl
divb
imull
out
out
mov
cmpsl
out
rclb
out
add
add
jne
mov
dec
mov
mov
adc
pop
shrb
sub
add
sub
add
add
add
arpl
mov
cs
aam
movl
add
test
jae
xchg
cmpsl
or
add
add
and
pop
and
add
add
add
inc
inc
xor
rorb
mov
xor
push
add
add
mov
testl
sbb
add
add
andl
cmpb
mov
mov
mov
xchg
sbb
loope
cmpsb
sbb
repnz
cmp
mov
daa
xchg
inc
test
pop
push
cmp
mov
mov
mov
xchg
jnp
test
cmp
movsl
fucomip
cmpsb
pushf
dec
xorl
cmp
sub
jae
and
and
and
add
add
add
std
sbb
or
add
add
mov
loope
push
pushf
leave
push
jg
cmp
and
mov
mov
jg
hlt
sahf
mov
mov
mov
xor
loopne
fidivrs
mov
dec
jecxz
push
mov
insl
push
and
mov
pop
in
cwtl
sub
scas
mov
mov
lcall
adc
enter
dec
dec
and
lods
mov
add
inc
lahf
xchg
das
clc
xchg
pop
cmpsl
ds
mov
push
jle
lods
rolb
mov
sbb
cmpsl
ss
iret
lret
add
add
add
fistpll
cmp
scas
lods
adc
test
jge
inc
add
add
sar
or
out
cltd
lods
je
push
shr
sahf
scas
mov
mov
out
out
sbb
mov
filds
xchg
push
xchg
pop
mov
pop
jp
sub
add
add
jg
xor
inc
mov
cmp
pop
imul
lret
ret
clc
lret
mov
fsub
daa
sbb
sbb
mov
cmpsl
adc
and
rcrl
jno
out
xorl
shrb
sub
and
add
add
pop
cmc
loop
jo
and
bswap
xchg
pop
insl
jmp
mov
add
add
inc
mov
out
and
add
add
add
andl
jnp
ja
adc
dec
lcall
pusha
add
add
shll
mov
jge
hlt
jbe
mov
dec
add
add
cli
es
add
in
cld
fwait
push
xchg
mull
shrl
aas
lea
jns
jg
mov
mov
mov
fcoms
adcl
je
mov
pop
pop
jmp
pusha
add
add
sbb
test
cmp
mov
add
cld
scas
addr16
mov
frstor
add
add
fbstp
stc
xchg
push
dec
jnp
dec
add
add
call
sub
xor
test
lods
scas
in
push
inc
dec
add
add
repz
cmc
scas
repnz
mov
jno
xor
pop
mov
xchg
xchg
push
test
dec
xchg
cs
add
add
cmpsl
std
popa
mov
hlt
jg
mov
jg
idivb
es
jnp
lahf
aas
lods
test
xchg
pmuludq
rcrl
out
push
stos
jp
fwait
insb
mov
out
imul
fldl
mov
aaa
jo
sti
mov
jae
leave
dec
in
scas
idiv
div
les
add
xor
mov
pop
add
pop
je
lea
add
xlat
clc
cs
sub
clc
or
ljmp
adcl
std
xchg
es
xor
add
sar
cli
jp
adc
add
push
test
xor
and
inc
adc
xchg
add
sub
icebp
in
mov
jne
imul
push
mov
lret
cs
add
add
pop
lods
jo
sbb
push
mov
mov
rclb
mov
adc
pop
daa
out
pop
xchg
or
mov
pop
sub
leave
jp
or
jge
push
add
arpl
push
mov
test
mov
jb
xor
xor
mov
lret
clc
cmp
addr16
shrb
add
add
add
lock
add
add
ret
xor
add
add
das
adc
xlat
ds
inc
xchg
mov
lea
lods
test
jecxz
jo
scas
fs
sbb
dec
movsl
xchg
add
mov
dec
std
xor
mov
jle
shufps
mov
ret
les
mov
jge
sbb
lds
xor
outsb
mov
hlt
xor
dec
add
std
mov
orl
push
cmp
inc
mov
jmp
cld
movsl
nop
cmp
pop
test
lock
nop
scas
movsb
xlat
add
add
add
add
add
jo
adc
cmovnp
rcrl
cld
jecxz
fprem1
popa
negb
lods
pop
sub
add
add
psllw
push
push
orl
push
mov
cmp
cmp
adc
xchg
inc
add
add
iret
jne
cmpsb
adc
sbb
mov
pop
push
shl
addr16
out
adc
into
cmp
in
xchg
push
mov
and
test
fstps
or
add
add
out
sub
add
add
out
inc
pop
pushf
ljmp
std
or
imul
fldenv
sbb
ds
jle
hlt
call
cwtl
dec
and
lahf
sbb
sub
add
add
cli
loop
pop
pop
lea
adc
add
add
or
fnstcw
add
add
dec
stc
mov
jmp
inc
idivl
mov
push
mov
fimuls
cmp
loop
pop
into
push
in
or
and
std
mov
mov
enter
and
js
idiv
std
stos
cmc
inc
or
mov
or
daa
loop
inc
add
add
xchg
gs
sbb
mov
mov
add
add
in
push
movsl
mov
add
add
mov
jle
sbb
mov
push
pop
sbb
xor
jmp
in
dec
or
and
pop
and
enter
xor
add
aam
fadds
add
add
push
sub
add
add
mov
jge
mov
dec
add
add
in
pop
sbb
push
mov
mov
into
sbb
divl
imul
mov
xchg
mov
mov
iret
mov
insb
add
add
inc
imul
fmull
cmp
xlat
push
and
hlt
jecxz
push
mov
cmp
sahf
pop
dec
clc
mov
and
add
add
iret
push
xor
gs
sbb
sub
and
add
ret
add
add
adc
cmpsb
push
or
pop
cmp
mov
insb
mov
jb
adc
pop
inc
xchg
push
mov
inc
add
mov
add
push
popa
sahf
push
mov
cltd
inc
or
jne
add
add
add
repnz
int3
or
add
add
loopne
outsl
cmp
popa
call
push
inc
and
arpl
imul
inc
mov
pop
mov
inc
scas
mov
loopne
add
add
and
add
add
or
add
add
mov
outsb
shlb
flds
cmc
leave
pop
sub
add
add
jmp
les
imul
xorl
add
rcl
inc
add
add
in
sub
add
add
fcmovbe
mov
add
repz
repz
stc
imulb
mov
cmp
jp
addb
push
dec
call
mov
fisubrs
dec
push
dec
call
cmp
inc
outsb
push
push
hlt
cld
dec
add
add
int
mov
pop
pop
test
and
ficompl
and
scas
dec
and
push
jl
dec
pop
mov
add
and
bound
insl
mov
dec
add
add
mov
dec
add
add
xchg
shlb
mov
mov
scas
jl
outsb
sarl
js
push
imul
add
add
mov
cltd
adc
mov
mov
sub
add
add
add
add
add
add
push
vmovaps
lods
or
fstl
sbb
cmp
icebp
leave
fcmovne
pop
mov
or
jbe
rcrb
add
add
sahf
mov
pop
cmp
cmp
fisubl
out
cmc
dec
es
push
dec
cmp
pop
lea
add
fsubrs
pop
dec
xchg
lret
in
lods
fsts
mov
xor
fildl
mov
mov
outsl
or
fsubp
and
insl
mov
pop
xchg
lock
pop
sbb
sbb
mov
sub
call
aam
sbb
jo
cmp
mov
popa
jle
arpl
pushf
mov
push
add
add
add
or
sti
fsubrs
fdivr
shrl
add
xor
int3
sbb
mov
daa
push
int
mov
and
test
mov
data16
add
add
aad
xchg
in
inc
mov
outsb
cli
dec
pop
scas
cmpsb
lret
in
sahf
jne
fdivrs
int
xlat
and
or
add
add
xchg
xor
gs
xchg
jae
sub
add
add
dec
into
js
cmp
add
add
and
clc
pop
rorb
add
add
cld
roll
daa
or
sub
add
add
jl
lds
and
jmp
cmp
stos
ja
mov
inc
mov
ret
or
data16
mov
arpl
add
add
sti
out
cld
icebp
sbbl
mov
loope
sub
add
add
stos
jmp
pop
jmp
inc
pusha
add
add
dec
dec
insb
add
ja
add
add
push
in
add
add
fistl
pop
dec
mov
jp
xor
mov
add
add
jnp
xlat
mov
lods
ds
sahf
add
ja
add
add
adc
xchg
ljmp
stc
inc
add
add
cld
filds
ja,pt
leave
inc
mov
mov
add
inc
inc
mov
lahf
sbb
and
cmp
push
pop
mov
adcb
jae
fnsave
stc
jl
mov
lahf
mov
add
mov
add
add
es
dec
fstps
add
mov
data16
add
mov
in
scas
mull
lods
mov
arpl
mov
mov
arpl
es
in
pusha
mov
fcmovb
outsb
mov
or
add
add
cmp
stos
lahf
in
dec
mov
movsl
xor
jbe
ljmp
mov
mov
fadds
mov
clc
gs
cwtl
fsts
addl
loop
test
push
gs
cmp
push
and
sbb
ljmp
sub
add
out
mov
cmpsl
xor
mov
ret
test
sub
xor
pop
lahf
sbb
clc
movsl
stc
orl
pop
stos
aad
jbe
lock
and
add
add
dec
in
sti
insl
repz
xchg
jnp
mov
pop
test
rcl
and
dec
ds
or
add
add
in
stc
xlat
dec
arpl
xlat
or
add
add
mov
add
or
test
mov
sbb
inc
mov
gs
mov
add
add
xchg
adc
ret
stc
movsb
test
mov
dec
outsl
xchg
or
mov
arpl
inc
mov
insl
add
add
mov
or
mov
push
mov
int3
dec
insb
add
add
ja
arpl
aam
dec
out
loop
js
jno
orl
loopne
outsl
imul
rcrl
mov
sbb
lret
repz
pop
xchg
add
add
cmpsb
sub
add
add
pop
sub
add
add
pop
in
inc
shrb
fucomip
popa
add
adc
out
lods
mov
pop
mov
mov
mov
or
add
add
aaa
pusha
mov
orb
stos
dec
mov
adc
in
cmpsl
adc
add
push
xlat
stos
sub
add
add
jne
addr16
sahf
fbld
add
add
pop
push
int
arpl
push
inc
cmp
jo
jno
add
add
das
mov
add
push
pop
js
sub
add
loop
mov
or
pop
mov
sbb
jnp
xor
pushf
mov
add
push
hlt
mov
add
push
xchg
mov
add
fs
mov
in
loopne
or
dec
mov
inc
xor
mov
out
movsl
jo
push
jle
movsb
adc
xchg
mov
out
jle
push
cs
push
int3
test
add
cmp
add
sbb
loope
or
add
add
add
add
aaa
inc
mov
into
pop
add
int3
adc
add
mov
cwtl
mov
jp
push
cmpl
mov
and
add
add
outsl
test
pop
inc
les
sbb
lcall
or
push
adc
add
ror
pop
adc
and
xorb
es
xchg
mov
add
push
xchg
inc
sub
ret
jl
dec
add
add
mov
daa
jle
add
add
push
cwtl
ds
push
push
adc
add
neg
sahf
insl
icebp
mov
or
sub
add
add
add
add
add
in
aam
add
add
shrl
sarl
test
sub
add
add
pop
dec
sub
add
add
dec
pop
ds
ss
out
add
add
mov
lock
fcomp
xchg
jae
mov
std
push
pop
add
fiaddl
pop
inc
mov
mov
add
add
loop
inc
out
ret
and
mov
mov
mov
pop
pusha
mov
jg
add
mov
test
jne
andb
push
aam
insl
pushf
and
add
add
fisttps
loopne
jle
cs
jno
jmp
add
add
pop
insl
dec
add
add
mov
xchg
inc
jb
jno
pop
addr16
mov
add
add
cmpl
leave
repz
sahf
daa
fs
mov
cli
mov
mov
pushf
leave
pop
jmp
outsb
in
fisttps
add
add
pop
xor
popa
sub
dec
sbb
rclb
cli
sbb
mov
mov
jl
sti
hlt
flds
add
add
aaa
pop
ret
das
dec
pop
ret
imul
aas
push
sti
ret
add
add
ja
dec
xchg
pop
pop
outsb
ret
mov
mov
add
add
idivb
add
add
mov
jge
cmp
test
mov
jge
bound
hlt
mov
adc
adc
mov
fwait
mov
sahf
sbbb
movsl
inc
jae
adc
adc
cmp
int3
faddl
xor
imul
pop
imul
mov
in
dec
nop
sbb
push
adc
fmulp
ror
jge
push
adc
inc
lcall
sbb
xchg
or
adc
leave
cmp
jecxz
mov
or
add
add
out
inc
add
add
xor
adc
inc
lret
popa
mov
into
or
xchg
push
fisubl
pop
subb
stos
pop
je
rep
dec
mov
and
das
mov
shll
add
add
sub
add
add
mov
jge
mov
or
icebp
cli
mov
add
mov
add
add
cmc
push
pop
push
cwtl
add
xchg
add
add
data16
pop
dec
mov
repz
cmp
call
dec
int3
ja
ret
jae
insb
add
add
mov
jne
dec
xor
sub
add
add
loop
inc
mov
scas
pusha
mov
divb
add
cmp
add
dec
es
pop
inc
sahf
jge
xrelease
fisubrs
add
add
mov
outsl
mov
idivl
add
push
inc
dec
push
cmp
dec
mov
mov
cmp
mov
and
add
add
xor
inc
dec
jnp
jno
mov
out
je
mov
inc
ja
cs
adc
pop
add
add
add
rol
dec
mov
pushf
jmp
sbb
fs
inc
js
dec
add
add
xchg
and
test
jne
xlat
ret
sbb
add
add
mov
out
adc
push
popa
into
sub
add
imul
add
add
loopne
cmp
les
add
add
xchg
lret
std
ror
or
pop
in
scas
mov
dec
ja
mov
add
shrb
pop
test
dec
lods
push
add
lock
cmpsl
test
stc
mov
jp
mov
mov
mov
fimuls
nop
mov
lock
push
mov
cmpsb
ds
clc
outsl
ret
mov
mov
cli
pop
sbb
sub
adc
adc
popa
ds
adc
hlt
jmp
pop
int
mov
inc
or
stc
shrb
add
add
pop
aam
icebp
mov
out
lret
cmpsb
mov
mov
push
roll
mov
inc
jl
add
add
add
push
pop
or
ret
lcall
iret
aaa
xchg
out
mov
ror
add
add
add
mov
add
add
cmp
mul
data16
jmp
leave
mov
in
icebp
fsubr
jbe
jge
push
add
mov
mov
jecxz
xchg
imull
inc
hlt
pop
and
ss
mov
xlat
pop
outsb
mov
inc
nopl
push
mov
sub
insb
mov
mov
inc
adc
aad
lcall
push
sub
into
lds
push
mov
ljmp
mov
sahf
mov
incb
fs
pop
adc
add
jp
xor
mov
aad
cld
xchg
loope
mov
xchg
pusha
mov
cmpb
add
add
mov
mov
mov
add
add
cmp
lcall
in
inc
cmp
push
pushf
jmp
out
cmp
cmp
loopne
cmp
mov
mov
add
add
dec
rcll
stos
fisubrl
inc
add
add
jecxz
mov
xor
gs
ret
add
lock
add
add
mov
mov
ljmp
lea
mov
inc
cmpsl
loope
mov
add
add
sbb
mov
out
lcall
mov
mov
cltd
mov
adc
cltd
jno
add
lahf
cmp
cmpb
out
pop
push
xor
dec
aaa
mov
mov
add
jne
and
add
in
aaa
mov
jecxz
inc
int
shl
iret
scas
xor
add
pop
xor
xor
mov
in
lds
adc
ret
push
push
cmpsb
xchg
out
xor
cmp
pusha
add
add
xor
int3
ret
adc
inc
mov
repnz
in
sbbb
add
add
or
jae
les
repnz
mov
cwtl
outsl
pop
insb
mov
dec
addb
xor
add
call
inc
push
jne
ljmp
mov
push
adc
push
sub
add
add
in
in
cltd
out
hlt
xchg
loop
fstps
leave
pop
negb
mov
adc
std
push
mov
mov
dec
outsl
daa
repnz
mov
loopne
mov
sub
mov
lea
add
add
mov
add
add
std
jmp
add
add
sbb
lcall
mov
shlb
jp
xchg
mov
add
gs
aaa
repnz
mov
and
lret
cmp
cmp
loop
out
ret
sarb
bound
cmc
andb
add
or
ss
add
add
add
jo
mov
leave
loope
cltd
std
sbb
nop
push
mov
add
add
xlat
jmp
or
lea
inc
push
nop
jns
jns
lret
rcll
int3
push
popf
add
add
add
jae
mov
decb
add
adc
das
or
mov
rcrl
mov
mov
add
add
add
or
mov
xor
nop
jae
and
jbe
cmp
imul
inc
mov
out
mov
add
ret
movsl
push
adc
sbb
popa
or
imul
iret
cmc
sub
or
addr16
cmp
loopne
pop
popf
pop
pop
jle
or
push
aad
lahf
int3
jmp
leave
or
adc
xor
and
add
add
int3
push
xchg
jg
mov
add
pop
or
lock
js
inc
mov
in
aad
and
push
or
in
mov
xchg
testl
ret
mov
and
xor
pop
lcall
add
add
jns
test
jbe
test
xchg
stc
dec
push
into
arpl
or
adc
xchg
xor
jle
add
add
cmp
int
dec
cwtl
mov
add
fmuls
cmp
pop
or
jecxz
push
popf
fisttps
lret
add
ret
gs
loopne
das
xchg
cmp
xchg
xor
jb
faddl
mov
in
sbb
out
add
roll
out
mov
sbbb
popa
push
mov
fucomi
push
add
add
push
cmp
add
add
xchg
sti
les
sbb
add
mov
cmpsb
sub
jno
pop
pop
mov
mov
inc
mov
das
sbb
orb
fisttpll
and
add
add
cwtl
cmc
loope
arpl
outsl
sub
insl
push
pusha
add
add
cmp
or
sub
add
add
add
add
imul
test
sbb
ret
lahf
sbb
or
cmp
popa
xchg
push
mov
jmp
imul
lahf
into
test
mov
add
sub
add
add
push
loopne
in
adc
icebp
jp
stos
mov
jns
cs
cmp
jno
mov
xchg
sbb
dec
pop
pop
lret
xchg
xchg
xor
movsb
ffreep
mov
sarl
cmpsl
jp
xchg
lret
dec
jo
insl
jp
mov
sub
add
add
mov
add
mull
icebp
imul
add
add
add
add
sbb
inc
ljmp
xchg
aad
pop
ret
lea
sarb
jb
add
add
push
les
sbb
or
sbb
pop
dec
lock
add
xor
jae
pop
adc
push
dec
push
inc
jnp
stos
xchg
ds
xor
pop
cmp
iret
lret
xchg
fistps
sub
pop
xchg
mov
fldl2e
push
movb
sbb
sbb
pop
adc
loope
xchg
adc
subl
in
add
add
jle
mov
imul
xchg
ljmp
xchg
adc
adc
adc
mov
xor
mov
enter
hlt
mov
stc
jl
add
add
cmp
pop
mov
lcall
xor
lcall
out
lret
dec
sub
loop
mov
mov
call
add
imul
xlat
inc
sub
add
int
mov
lcall
mov
cmp
mov
mov
add
pop
movsb
pop
xchg
mov
pop
out
outsb
cltd
pop
cmp
jge
add
add
add
das
jecxz
pop
cmc
xchg
loop
testb
mov
ja
add
add
rorb
add
add
add
push
and
add
add
mov
aaa
cs
jbe
loop
cmp
push
call
jmp
cltd
lret
and
rolb
and
or
mov
mov
jno
cmp
add
add
mov
add
add
scas
fidivs
xlat
shl
lds
jbe
pop
mov
jns
cmpsl
push
sbb
rcrb
fcmove
cs
add
add
movsb
jmp
stc
pop
repnz
cltd
add
mov
cli
dec
jbe
sysenter
pop
and
mov
jl
mov
mov
add
add
cld
adc
shrl
inc
inc
add
arpl
add
add
pushf
add
divb
faddl
push
mov
xor
mov
iret
nop
xchg
inc
mov
mov
fwait
movb
add
dec
mov
mov
or
add
add
cmp
add
add
pop
pop
mov
popa
jecxz
mov
adc
bound
leave
push
test
pop
pusha
add
add
xchg
test
fisubl
pop
pop
pop
cmpsl
jbe
adc
add
add
lods
rcl
sahf
imul
mov
add
in
push
sbb
xchg
shll
and
sbb
iret
mov
add
fwait
psadbw
fnstsw
lcall
xchg
jns
test
add
add
mov
icebp
sub
adc
dec
mov
subb
jp
push
jge
rcll
lret
and
xor
mov
inc
mov
add
add
jne
xchg
imul
mov
xorb
ja
jge
loopne
lahf
enter
daa
mov
jns
jmp
mov
mov
into
imul
add
rclb
out
cmpsb
lahf
xchg
xor
sbb
mov
add
add
mov
push
fsub
push
adc
es
add
add
add
xor
jo
addr16
or
add
add
lcall
add
dec
or
add
add
push
movsb
gs
or
ror
xor
jge
fists
out
out
bound
inc
mov
xchg
mov
inc
jecxz
into
jl
shlb
sahf
adc
add
dec
sahf
push
mov
scas
and
add
add
stos
fidivs
out
add
add
cmp
and
add
add
mov
mov
inc
mov
pushf
jbe
add
mov
sub
aas
jo
gs
push
adc
sbb
call
add
std
xchg
ja
insl
int3
decb
mov
stos
dec
das
adc
ds
xor
sti
int
mov
or
xlat
adc
xchg
jmp
mov
sbb
inc
daa
fstl
loopne
pop
cli
je,pt
pushf
or
push
dec
lods
sarl
test
repnz
jnp
adc
cli
cltd
or
repnz
daa
ljmp
imul
into
inc
scas
mov
xchg
iret
popa
and
add
add
xchg
and
mov
ret
or
xchg
xchg
dec
add
add
pusha
mov
in
pushf
ss
add
mov
lods
ljmp
mov
mov
add
add
sbb
adc
mov
add
add
or
add
add
je
lea
out
and
mov
call
loop
xor
bnd
popf
dec
aaa
inc
iret
test
iret
jb
sbb
out
pop
inc
and
pop
gs
lahf
mov
sub
arpl
sbb
cli
mov
add
add
repnz
add
add
add
or
jbe
jne
xchg
adc
aaa
test
inc
fsubrl
mov
push
pop
mov
cmp
jge
sar
mov
sub
add
add
mov
mov
add
add
rol
lret
icebp
mov
xorb
sbb
aad
mov
loope
jle
out
mov
rcrl
mov
roll
nop
dec
add
add
cs
pop
test
add
add
sbb
gs
les
repz
mov
xor
js
lahf
arpl
insl
inc
enter
jl
cmp
loop
fidivrs
in
aas
popf
gs
int3
aam
pop
mov
add
and
imul
repz
xlat
mov
addr16
push
push
or
add
add
outsl
inc
dec
mov
push
clc
pop
inc
dec
movsl
push
mov
lds
xchg
inc
fsub
push
loope
in
in
gs
sub
lahf
mov
mov
and
add
add
add
cld
xor
adc
fldl
movsl
ljmp
xchg
cmpsb
jmp
add
add
mov
add
cmpsb
int
or
push
add
sarl
mov
test
add
cltd
sub
cmpb
push
or
dec
out
orl
jnp
push
push
ljmp
mov
fsubl
es
cli
pop
jecxz
stos
inc
hlt
je
lcall
loop
cld
insl
mov
subl
pop
popa
add
add
add
push
daa
mov
adc
jle
mov
jae
push
jae
add
add
std
jbe
push
fcomip
mov
add
add
sarb
push
mov
add
add
movsb
pop
test
xor
repz
fisttpll
pop
cmp
add
outsl
jge
ss
mov
jg
cmc
rcll
add
add
add
nop
movsb
outsl
jmp
lods
leave
je
mov
lods
jne
clc
ja
pop
sub
insb
add
add
sbb
jge
add
add
xor
mov
dec
lcall
add
inc
test
sti
or
jne
dec
lret
ja
adc
cmp
add
add
mov
and
add
add
mov
add
adc
stc
xchg
pop
mov
mov
scas
push
fimuls
dec
mov
cmp
fldl
add
add
outsl
into
hlt
adc
sbb
inc
inc
mov
jp
sbb
and
add
add
add
add
add
cs
clc
mov
ret
test
and
dec
fdivr
imul
addl
sti
cmp
call
insb
add
add
dec
add
add
sbb
pop
add
cmp
add
add
rcrb
add
add
rcr
stc
xor
cltd
cltd
fwait
mov
test
pop
bound
mov
push
lock
mov
vpavgw
pop
inc
out
mov
xor
movsb
xlat
test
mov
pop
sbb
mov
or
add
add
aad
adc
movsl
cmpxchg8b
ret
out
mov
jp
mov
inc
fistpll
cmp
loopne
cli
sbb
cs
test
xchg
inc
add
add
add
cmpsb
adc
jo
cmp
xor
mov
hlt
push
inc
mov
fdiv
fs
xchg
icebp
mov
ds
fwait
mov
inc
iret
fcmovnu
pop
push
lahf
mov
outsb
das
cmp
and
add
add
add
add
mov
jle
cmp
lcall
add
std
pop
jbe
insb
mov
jle
dec
sbb
pop
or
fiadds
mov
push
hlt
lods
pop
mov
add
add
mov
daa
sub
add
add
scas
loop
adc
sarb
xlat
jae
adc
and
shll
inc
imull
add
xchg
icebp
dec
mov
imul
add
leave
sti
adc
sbb
adc
mov
jp
sub
add
add
out
mov
mov
push
mov
mov
sahf
push
ja
pop
mov
lret
repnz
or
add
add
shlb
add
add
sub
add
add
or
stc
cmp
into
loope
add
add
add
rcll
add
add
add
add
add
add
add
add
add
pop
xor
icebp
subl
ret
loop
add
mov
xor
popf
adc
add
add
mov
pop
jo
nop
movsl
out
xchg
in
xchg
sub
add
add
xor
xchg
stos
pop
mov
add
pop
adc
xor
add
loop
mov
add
fdivrl
jge
jmp
shl
dec
sub
push
xchg
ficomps
push
scas
cmp
add
push
or
add
add
mov
repnz
loope
lods
lret
jecxz
sub
add
add
dec
mov
adc
push
rolb
ds
mov
test
outsl
es
add
in
push
mov
dec
xchg
jae
xor
pusha
mov
lret
aad
shll
and
add
add
imul
add
push
pop
ss
cltd
das
mov
add
add
add
repz
imul
sub
into
inc
movsb
pushf
imul
imul
xor
xchg
inc
jp
mov
inc
fnstenv
inc
or
adc
pop
lods
push
fldl
cli
sub
add
add
jns
cmp
icebp
imul
mov
mov
add
clc
sti
outsb
lcall
mov
outsb
cmc
sub
add
icebp
fwait
pop
dec
out
dec
xor
pusha
mov
and
jb
lcall
cmpsb
stos
inc
mov
add
push
ja
jecxz
add
add
outsb
stos
aad
lea
in
pusha
mov
push
xchg
aad
js
cmp
or
add
add
jg
pushf
dec
add
add
cmp
aam
in
cmp
scas
in
pop
inc
mov
push
int3
pop
ds
scas
adc
mov
incb
and
and
add
add
aad
dec
add
add
in
or
add
add
mov
movsb
fstps
repz
mov
test
or
add
add
andb
add
or
add
add
cmp
cmovg
adc
outsb
jmp
out
arpl
jno
fisubs
mov
jbe
mov
and
xchg
and
stc
xchg
push
dec
movsb
out
mov
push
sahf
aad
dec
push
or
dec
add
add
jb
pop
cmpsl
adc
repz
cli
mov
or
pusha
mov
adc
enter
add
mov
cmp
or
outsl
pop
lahf
cmp
adc
test
insb
add
add
lea
out
and
add
add
add
or
xchg
adc
fsubp
xchg
std
in
ficoml
or
add
add
outsl
or
jbe
data16
mov
scas
adc
add
or
mov
sub
mov
lods
mov
mov
inc
iret
jmp
das
xchg
shlb
jp
mov
out
jnp
sbb
scas
aas
movsb
mov
shrl
adc
cmpsb
sub
adc
sbb
mov
add
add
or
add
add
sbb
iret
inc
mov
add
add
mov
pop
xor
mov
dec
mov
sbb
adc
add
add
add
mov
mov
dec
mov
adc
int
mov
dec
sub
add
ja
add
add
add
add
add
add
repnz
pop
stos
pop
mov
add
imul
fs
mov
pushf
scas
ret
push
lahf
sbb
xchg
add
add
shll
stos
mov
xchg
jge
stc
mov
nop
loope
jnp
stc
not
aam
mov
xchg
lcall
mov
xor
push
popa
mov
aam
repz
out
idiv
insl
decl
fimull
or
enter
adc
xchg
movsl
imul
stos
pop
and
adc
mov
add
mov
hlt
fmul
dec
pop
pop
or
add
add
insl
pop
faddl
add
add
jg
shr
mov
jecxz
stc
mov
sbb
fildl
mov
test
leave
test
lcall
push
xor
cmp
add
stos
pop
and
add
add
xor
xor
add
push
sub
add
add
mov
aas
jbe
cmp
mov
movzwl
div
and
repnz
jbe
loopne
jmp
shl
xchg
push
adc
stc
insb
add
add
and
jne
mov
add
add
and
or
add
add
inc
sbb
aam
inc
mov
fidivrs
daa
aam
in
mov
scas
sbb
xchg
push
insb
mov
neg
push
pop
das
aaa
repnz
mov
shrb
xorl
lcall
hlt
dec
add
add
pminsw
add
add
insb
add
add
push
out
out
mov
or
pop
mov
adc
adc
mov
mov
add
mov
add
add
add
add
mov
add
cmp
jge
cmpl
jmp
xchg
mov
mov
mov
sti
mov
push
jns
mov
aaa
icebp
lahf
fisubrs
mov
mov
inc
jbe
mov
lods
xor
dec
lock
psadbw
xlat
push
xchg
sub
sbb
fnsave
pop
lcall
in
jns
xchg
mov
add
xor
std
mov
nop
mov
movsbl
add
add
out
jle
popa
mov
mov
incl
leave
stc
in
jmp
clc
movsl
or
cwtl
sti
xor
or
add
add
movsl
lret
mov
pop
mov
add
pushf
sbb
add
add
add
or
aas
mov
add
push
or
test
out
leave
mov
ret
jmp
push
pusha
mov
dec
mov
xor
inc
mov
popf
mov
cmp
push
sub
pushf
adc
or
mov
nop
clc
sbb
add
add
add
push
xor
xor
or
adc
shl
add
add
mov
push
fdiv
xchg
sar
pop
inc
and
cmpsb
jb
pop
in
cmpsl
loope
dec
sbb
iret
outsl
xor
jnp
add
add
add
push
test
and
add
add
sub
sbb
inc
xor
rorb
add
add
int
out
icebp
dec
mov
divb
shrl
bound
add
add
sub
jae
mov
ds
in
fimull
and
outsb
ss
add
add
and
cmp
add
popf
dec
clc
fcos
pop
jns
push
sbbb
sub
add
add
jno
push
mov
add
add
shl
adc
cmp
lods
mov
shlb
mov
inc
repnz
es
std
adc
add
xor
or
mov
jne
mov
pop
aam
adc
jns
stos
sti
imul
cli
aad
mov
cmp
cwtl
pusha
add
add
in
push
aas
lcall
cmp
pop
es
test
ret
add
mov
adcb
dec
mov
xlat
sub
add
add
add
call
xlat
or
add
add
mov
idivl
popa
bound
push
dec
xchg
sbb
loopne
pusha
add
add
rolb
pop
jge
sbb
add
add
push
cmp
stos
call
add
cltd
pop
shlb
xor
push
dec
add
add
jne
pushf
mov
mov
add
add
hlt
inc
add
add
shr
and
sub
adc
push
sub
or
dec
add
add
lds
test
add
add
mov
popa
lock
add
add
pusha
mov
nop
sub
loop
dec
sbb
add
add
add
popf
mov
bound
xor
inc
test
fldenv
cmp
nop
dec
push
lods
jmp
cmc
mov
adc
cmc
jge
enter
loope
pop
jne
cmpl
loop
fiadds
add
push
xchg
stos
loope
pop
mov
je
add
add
add
rcrl
sbb
pop
icebp
push
mov
add
add
jp
sbb
in
jne
adc
sub
jno
out
cs
inc
pop
outsl
xchg
test
int
sbb
test
test
push
cmpsl
add
es
repnz
rolb
mov
push
sarl
clc
mov
add
add
clc
outsl
xor
and
jle
loop
xchg
add
int3
movsl
or
inc
mov
jno
push
js
dec
sbb
inc
add
add
enter
mov
test
inc
add
add
add
fwait
mov
in
sub
gs
xchg
shll
lods
je
mov
sti
loopne
test
add
add
push
xchg
jae
xor
add
add
stos
fisttpll
sbb
cmp
sti
in
adc
mov
mov
add
add
in
insl
xchg
mov
mov
imul
xor
jno
into
pop
mov
das
stos
inc
jae
mov
xchg
mov
sbb
enter
add
pop
sbb
and
add
add
mov
sbb
fcoml
stos
mov
test
addr16
adc
rorb
mov
shrl
jmp
add
out
add
add
cltd
mov
leave
adc
jl
movsl
mov
add
add
lcall
lds
mov
packsswb
add
add
inc
add
add
pop
int
or
outsl
xor
mov
dec
add
add
sub
push
and
in
imul
add
sub
push
sub
add
add
push
mov
mov
xchg
pop
rol
daa
mov
je
add
mov
sbb
mov
xchg
mov
add
cmp
aam
pop
and
add
add
add
add
dec
je
add
add
cmpsb
mov
aaa
adc
jbe
push
aaa
sub
xor
push
mov
mov
add
cld
push
ficoml
test
sub
mov
adc
pop
std
stc
xor
int3
ret
xchg
lods
jns
sbb
cmp
add
cmc
icebp
scas
cltd
jge
call
xchg
mov
and
add
add
popf
push
int3
mov
dec
xor
mov
mov
mov
outsb
hlt
idivb
add
add
push
pop
dec
mov
jl
dec
mov
mov
cmpb
clc
fistpll
inc
ja
mov
fdivl
das
xor
push
jbe
jecxz
out
pop
fdivs
cld
sub
je
mov
imul
add
add
add
add
add
add
shll
pop
daa
repnz
stc
dec
xor
xor
add
add
add
adc
jge
outsl
inc
int
dec
popf
lret
add
add
add
add
mov
or
xor
fstpl
and
jo
dec
sub
add
add
or
movsb
cwtl
jmp
add
add
cli
mov
ljmp
imul
push
xor
mov
xor
test
dec
outsb
xor
add
add
add
xor
jns
add
add
shlb
cltd
ljmp
add
add
mov
add
insb
mov
push
pop
dec
add
add
add
sub
add
add
scas
lahf
mov
add
mov
add
sub
imul
add
add
pop
scas
cmp
iret
jle
xor
xor
xor
pop
sub
add
add
xor
add
iret
xor
mov
ret
clc
fsub
inc
aaa
gs
jns
cmc
fwait
mov
sub
fistps
push
mov
cmp
inc
add
add
test
add
dec
add
add
imul
mov
sti
cld
mov
add
add
inc
aam
sbb
mov
js
aad
adc
out
xor
add
push
lds
pusha
add
add
loop
fwait
sbb
divl
xchg
xlat
movsb
imul
shrb
outsl
sarb
adc
out
hlt
scas
mov
data16
leave
adcb
inc
imul
add
mov
add
add
popa
repz
call
add
add
shl
fcoms
xchg
inc
pop
and
mov
mov
and
les
jbe
cmp
xchg
fsubrl
push
push
lods
sub
xchg
rclb
add
rolb
hlt
mov
std
mov
pop
pop
bnd
lock
data16
sub
in
pusha
add
add
sbb
iret
js
nop
ss
push
xchg
pop
das
sbb
xor
xchg
aas
lods
popf
dec
mov
xlat
daa
stc
pop
in
add
add
add
inc
mov
dec
stc
pop
push
push
adc
or
mov
lds
mov
or
mov
add
aaa
dec
xor
popa
adcb
lret
jecxz
dec
add
add
pop
arpl
xor
add
add
lds
je
fidivs
jno
push
add
add
mov
adc
jnp
mov
mov
jns
out
lea
dec
adc
lock
out
or
add
add
sahf
push
pop
jp
sub
mov
lcall
cmp
add
add
in
xor
js
push
mov
icebp
popf
cmp
and
inc
inc
xchg
shll
jnp
sub
add
sub
add
add
add
bound
jle
lock
cmc
pop
and
and
add
add
imul
sub
add
add
add
add
xor
add
add
dec
xor
mov
inc
pop
or
add
add
sub
add
add
nop
sahf
or
mov
dec
pop
pop
subb
adc
mov
jg
fwait
mov
mov
cwtl
scas
fstps
push
mov
mov
push
or
lock
sub
lret
add
das
mov
enter
add
add
daa
sub
repnz
push
mov
jp
mov
dec
mov
adc
xchg
aam
push
testb
sbbl
mov
add
in
push
sub
arpl
adc
repnz
mov
mov
sbb
icebp
dec
pushf
cmp
xchg
mov
ds
mov
add
ficompl
add
mov
jb
popl
lcall
add
mov
lret
out
or
add
add
add
test
jl
fcoml
cmp
arpl
add
add
add
jp
inc
shll
pop
push
or
movsl
mov
sub
push
add
add
add
mov
inc
add
add
es
imulb
incl
add
add
push
test
xor
loop
shrl
inc
or
loop
xchg
mov
xchg
movsb
ret
pop
sub
add
add
pusha
mov
mov
jns
mov
dec
or
or
add
add
xor
imulb
add
push
scas
mov
xor
push
hlt
enter
pop
adc
mov
add
add
leave
add
insl
sub
add
add
add
push
and
fldcw
ds
xlat
aam
and
xchg
push
lret
push
sbb
in
mov
sub
repnz
aam
xor
pop
cmc
test
enter
add
add
lret
sub
add
add
add
xor
or
add
add
call
movb
add
add
dec
bound
out
adc
int
xchg
lock
fcoml
cwtl
xchg
inc
xor
add
add
add
fldl
jns
mov
and
add
add
jb
adc
pop
xor
bound
inc
add
mov
sbb
out
int
sbb
cmpsl
xchg
push
add
sbb
lea
arpl
pop
hlt
push
pop
pop
dec
cld
or
shrb
add
add
mov
add
add
add
lahf
les
mov
mov
sbb
sub
add
add
loopne
sarl
pop
rol
das
cmc
push
stos
popf
inc
bound
jo
inc
jge
addr16
inc
pop
loop
stos
sub
lahf
xor
pop
and
mov
test
fldcw
inc
mov
cli
jmp
jge
das
fnstsw
pop
fildl
aas
enter
pop
data16
add
add
push
mov
jns
cmp
cmp
test
sti
jmp
add
add
push
lds
add
add
nop
mov
mov
push
inc
xchg
inc
inc
and
fadds
add
dec
add
add
shll
into
mov
hlt
jns
add
add
mov
add
xor
loopne
adc
sbb
sub
add
add
add
add
inc
mov
stc
pusha
mov
imul
aad
push
cmp
pop
push
movsb
adc
sub
lea
add
add
mov
add
or
push
mov
cmc
adcb
push
mov
addb
add
add
call
gs
pop
lods
jo
cmp
cmp
hlt
sbb
insb
mov
sub
mov
and
cmp
fwait
mov
mov
mov
add
or
sub
add
add
stos
mov
push
mov
push
in
cmp
stos
cld
xor
add
add
adc
sub
in
sahf
sbb
lcall
pop
add
aaa
push
dec
add
dec
mov
inc
mov
daa
mov
rorb
add
add
ja
das
dec
sahf
sbb
into
cmpsb
add
add
add
mov
mov
sub
hlt
imul
and
push
jge
push
movsl
mov
mov
out
test
pop
push
pop
mov
sbb
add
push
add
add
sub
aas
sub
xchg
xchg
mov
or
add
add
add
add
add
push
rolb
add
add
cmpsb
icebp
ljmp
ss
pop
out
ds
ret
test
gs
adc
loop
test
mov
or
add
add
adc
and
sarb
dec
dec
mov
dec
movb
mov
divb
inc
or
rcrb
jb
icebp
dec
xchg
lcall
adc
pop
sub
or
pause
push
push
jno
adc
imul
jp
ret
jbe
fistps
cmp
cmpsb
in
mov
pop
xchg
arpl
stos
subb
mov
add
add
loope
mov
leave
mov
loope
pop
jns
fsubrp
jno
repz
clc
push
pop
add
inc
xor
xlat
sahf
lods
int3
pusha
mov
rorl
lods
arpl
mov
add
sbb
adc
xchg
mov
push
sti
mov
add
add
inc
pusha
add
add
cmp
call
add
push
andb
add
mov
idivb
mov
out
mov
add
add
add
fdivs
mov
dec
add
add
push
jg
xor
mov
add
add
add
fisubl
jne
testb
ljmp
movsb
jg
mov
dec
or
mov
aaa
xor
pop
sbb
stos
shll
pop
add
add
add
add
push
mov
test
xorl
movsb
sarl
les
imul
outsl
mov
mov
inc
mov
inc
cld
in
and
add
add
adc
cmp
cmpsl
shll
mov
mov
imul
mov
decb
bound
popf
mov
fdivl
in
sbb
push
xchg
pop
and
adcl
xchg
rcl
push
nop
jb
lds
clc
inc
adc
sbb
add
std
inc
cmpsl
jmp
cmp
or
add
add
pop
decb
add
xchg
addb
add
add
icebp
lret
mov
aas
hlt
jne
aad
cmp
pop
aam
sub
push
rcl
shrb
mov
mov
mov
sbb
outsl
add
push
inc
mov
add
add
add
push
movsl
sti
fisubrs
mov
les
add
xor
or
add
add
push
or
push
mull
add
add
add
add
push
sub
add
add
mov
aad
sub
adc
dec
add
add
fistps
mov
add
add
add
mov
add
add
inc
mov
push
sub
add
adc
es
insl
ret
imul
add
pushf
cs
xlat
or
int
mov
add
or
jns
scas
adc
push
test
mov
or
xchg
jl
ret
mov
mov
call
mov
loopne
dec
mov
addr16
aas
ljmp
fistpll
fwait
lock
sub
ds
mov
sbb
test
add
add
or
add
add
add
add
test
pop
dec
fidivs
push
pop
sbb
add
add
add
add
xorb
mov
icebp
add
pushf
add
call
xor
icebp
repnz
in
inc
sahf
filds
fists
subl
mov
inc
and
add
mov
dec
sbb
in
push
mov
loop
mov
push
cwtl
pop
jne
in
mov
add
add
outsl
adc
mov
push
scas
je
cmp
add
add
mov
js
sbb
mov
mov
and
mov
mov
xor
fxch
int
ss
and
sub
jge
cmp
add
add
cwtl
inc
add
add
xor
and
pop
test
adc
data16
ss
add
mov
cmp
jae
mov
add
dec
mov
pop
sbbb
pop
repnz
and
add
sbb
shlb
icebp
out
ljmp
fcoms
sub
add
pop
inc
or
add
add
ficompl
xlat
addr16
adc
test
fdivs
out
xchg
mov
arpl
push
sbb
mov
imulb
add
mov
sbb
xor
aaa
shlb
add
cs
lahf
add
add
fwait
mov
xor
jnp
out
fildll
lret
add
xchg
sub
in
stos
sub
add
nop
mov
add
mov
adc
mov
add
add
leave
lret
lods
pop
and
jmp
aam
or
addl
sub
lods
clc
incb
push
outsb
inc
daa
push
jb
mov
fidivrs
scas
cmp
dec
rclb
aam
pop
dec
ja
add
add
add
and
add
add
and
jg
stc
cs
xor
mov
add
add
pop
mov
push
cltd
dec
or
cwtl
ret
out
adc
insl
xchg
push
rcrb
mov
add
add
add
add
add
jg
inc
cli
add
add
add
in
cltd
mov
outsb
addr16
in
fldl
xor
fstpt
roll
add
add
test
xchg
in
imul
cmp
enter
push
xchg
int3
adc
sbb
add
stc
pop
ljmp
testb
add
add
test
sbb
mov
add
add
jmp
jp
mov
lods
in
lods
sub
jle
cmpsl
adc
test
sbb
add
popf
sahf
adc
ret
dec
pusha
mov
rorb
ds
popa
mov
ret
loopne
das
push
mov
popf
out
jp
mov
adc
cmc
stos
pusha
add
add
sbb
aam
pop
xchg
int
push
jae
jbe
pop
and
mov
fs
jns
pop
decl
pop
hlt
stos
jg
jle
stc
cli
lods
mov
mov
ret
pop
insb
add
add
les
add
xchg
pop
in
xchg
ljmp
jnp
shlb
movsb
xor
or
sbb
dec
mov
test
pop
xchg
loope
xor
jne
add
push
lret
and
add
add
dec
in
test
push
aaa
sbb
dec
jmp
xchg
mov
mov
bound
push
mov
mov
gs
jae
xor
pop
mov
inc
add
add
test
out
jl
cli
inc
mov
pop
inc
adc
add
dec
mov
add
push
fs
int
push
mov
mov
cs
mov
or
stos
ss
add
add
add
push
icebp
lea
cmpsb
cmp
pop
mov
movsb
cmp
pop
jmp
add
cs
sbb
ljmp
lret
inc
xchg
inc
inc
test
aad
mov
orb
je
cmp
add
add
add
add
arpl
adc
add
add
push
mov
ja
insb
mov
inc
stc
ret
rcrb
pop
or
cs
icebp
scas
idivl
cmp
int
push
popf
fstpl
mov
not
mov
adc
add
add
add
add
insl
roll
jp
mov
bound
pop
jne
dec
lock
scas
dec
jge
js
push
pop
cmp
add
add
daa
orb
add
inc
adc
add
add
add
push
adc
stos
cld
inc
es
maskmovq
testl
add
dec
mov
xchg
add
rorb
fwait
arpl
dec
mov
add
add
cmp
inc
jle
repz
pop
fistl
fdivs
loop
adc
add
add
push
jl
mov
mov
cli
out
test
test
dec
mov
xor
cli
jne
or
and
fisubrl
add
add
or
add
add
arpl
mov
xor
cmpsl
cmp
dec
jle
mov
adc
add
add
add
hlt
in
not
add
xor
dec
adc
mov
in
jp
iret
push
mov
add
mov
addr16
or
rcrl
lcall
por
mov
mov
fwait
loope
jl
or
dec
les
aaa
std
and
aas
je
rcll
lods
adc
mov
add
add
dec
push
xorl
xor
push
add
add
add
push
ljmp
add
adc
adc
lods
mov
or
jbe
push
fsubl
loop
cwtl
mov
push
push
das
push
lds
sahf
or
adc
pusha
mov
pushf
mov
dec
adc
outsl
and
cmp
add
add
test
add
fsubr
push
es
dec
mov
movsb
mov
inc
dec
and
popf
ret
outsl
lea
sbb
push
add
mov
cmp
ljmp
bound
push
in
or
leave
into
ja
cmp
mov
add
add
add
sub
outsb
push
ret
dec
sbbl
fadds
add
test
and
pop
test
add
add
rol
push
inc
imul
bswap
mov
add
add
xor
add
add
in
adc
xor
push
mov
inc
mov
jno
test
mov
mov
jne
mov
aaa
mov
sarb
loop
stos
cmp
mov
jmp
in
push
jne
push
jg
insb
mov
pcmpeqw
inc
imul
movsl
push
shl
mov
pushf
call
addr16
addr16
cmp
icebp
dec
dec
mov
jg
push
xchg
push
rorl
pop
sub
add
add
pusha
add
add
ds
mov
fldt
pop
mov
push
lea
jne
iret
test
test
sub
add
add
adc
pop
jp
sbb
pop
stc
jbe
xor
mov
sub
cmpsb
in
mov
and
idivl
pop
mov
jae
fucomip
fisttps
fwait
cmp
jno
inc
add
add
mov
addr16
pop
cmp
insb
mov
loope
xchg
sub
add
add
lcall
ss
adc
add
add
add
add
push
int3
jo
icebp
test
add
add
clc
sub
add
push
mov
sub
lret
aam
orl
scas
insl
out
push
sbb
dec
add
add
jo
push
addb
add
jp
mov
jo
test
add
push
loopne
mov
popf
popf
fcoml
lods
jg
lods
pop
mov
sbb
dec
pop
es
mov
in
into
adc
xchg
xor
ljmp
leave
xlat
add
loopne
xorb
mov
mov
negb
xor
mov
xchg
jl
pushf
inc
sub
sub
cwtl
fmull
lea
xor
popf
or
add
add
xchg
sti
cld
bound
scas
inc
mov
add
add
cmp
fadds
push
fists
add
add
lret
jmp
mov
xchg
cmp
add
add
sub
add
add
in
xor
repz
fsubrl
add
leave
push
outsb
aas
mov
push
adc
add
add
stos
xchg
mov
pop
lret
xor
adcl
add
movsl
sbb
mov
in
enter
add
add
sub
pushl
xchg
repz
sub
call
push
mov
fwait
add
pop
pop
cmp
pop
xchg
mov
add
add
sub
enter
mov
xlat
push
mov
mov
loop
xlat
add
push
popf
sbb
mov
sahf
mov
les
mov
pop
in
es
or
add
add
add
add
add
mov
mov
jg
stos
sbb
mov
dec
sub
jns
mov
fnsave
ret
arpl
add
aaa
fsubr
jae
mov
in
negb
and
add
add
shl
mov
repz
mov
ret
iret
jnp
leave
loop
out
push
ljmp
xchg
stc
icebp
push
int
and
add
add
dec
mov
cli
or
push
mov
dec
add
add
cmp
mov
sarb
out
push
mov
or
add
add
in
xchg
add
int3
push
scas
mov
add
mov
movsl
jb
adc
sub
add
add
sub
pshufw
lret
add
add
or
mov
repnz
addr16
jmp
lret
sub
xchg
pop
mov
inc
xchg
jge
mov
add
jo
jno
ret
pushf
mov
leave
dec
mov
lea
jnp
sub
out
ret
xor
add
add
push
roll
jg
fwait
sbbb
inc
ja
push
jle
jcxz
xor
cmpsb
xchg
stc
jg
scas
call
add
jnp
jbe,pn
sub
add
add
popf
js
popa
lahf
xlat
ja
aas
scas
test
xor
pushf
inc
inc
mov
add
sbb
pop
sbb
mov
mov
pop
xor
pop
inc
sub
xorl
fisubl
enter
add
add
cli
enter
add
add
out
xchg
mov
add
and
cmp
add
add
xor
cmpsl
jae
ret
nop
push
cltd
push
pop
push
fwait
pusha
add
add
mov
jmp
add
or
add
add
xchg
fists
test
mov
xor
jo
int3
sti
adc
jge
lods
and
add
add
push
dec
les
out
adc
add
pop
or
add
add
popf
push
push
mov
dec
test
push
push
or
add
add
mov
add
inc
jge
call
push
cmpl
sub
mov
or
jne
mov
push
sub
pop
arpl
sbb
add
cmp
add
add
add
add
add
hlt
lea
loope
mov
test
add
xor
cmp
fldt
pop
mov
inc
stos
mov
add
or
add
add
hlt
cltd
fiaddl
xor
repz
das
inc
xor
add
mov
mov
outsl
mov
int3
loope
in
push
das
out
iret
pop
add
add
outsb
cmpb
mov
mov
or
jp
jbe
mov
out
xchg
inc
mov
and
mov
int3
xchg
outsb
mov
repnz
xor
add
jb
push
jg
lock
pop
pop
addr16
pop
adc
dec
push
inc
mov
flds
in
mov
jmp
mov
mov
rolb
sbb
jg
ds
and
pop
or
add
aaa
or
lret
and
mov
mov
cmp
add
add
pop
stos
pop
xor
jo
rcr
jecxz
insl
xacquire
mov
jl
or
add
add
daa
push
fst
insb
add
add
mov
add
mov
sbb
je
mov
cmp
cmp
mov
and
inc
add
mov
add
add
nop
rorb
push
dec
es
mov
add
add
inc
xor
repz
add
add
jg
adc
incl
add
add
add
add
inc
clc
cld
ror
adc
mov
push
dec
add
add
loopne
push
xchg
xchg
inc
dec
movsl
sti
and
cmp
in
mov
adc
mov
mov
push
lods
scas
xor
sub
add
inc
mov
sbb
jle
js
lret
sub
add
clc
mov
pop
add
add
add
jp
ret
fistpll
cwtl
mov
sbb
mov
shl
cld
out
sbbl
xor
mov
js
sub
repz
cli
xchg
add
sbb
add
xchg
xchg
lret
add
sub
inc
sti
pop
aad
cmp
les
push
xor
fmuls
mov
add
movsb
push
mov
punpckhbw
sub
stos
adc
add
add
push
xchg
mov
lret
xchg
inc
mov
add
add
push
push
fstps
add
add
push
mulb
into
rep
stc
pusha
mov
addr16
mul
push
add
add
negl
lcall
out
sub
add
add
adc
and
add
add
test
dec
push
sub
push
cli
int
mov
lock
pop
sub
push
imul
xchg
mov
mov
add
add
or
cmp
adc
inc
add
add
fidivs
mov
cltd
shll
cmp
in
outsb
xchg
or
adc
mov
out
pop
add
fildl
daa
xchg
and
xchg
icebp
dec
pop
or
push
xchg
aaa
mov
mov
cmp
add
mov
push
fs
xchg
push
push
loopne
test
sti
inc
lock
inc
ror
and
add
xchg
mov
lods
fcomip
cmp
adc
pushf
xor
mov
in
add
add
add
add
add
add
add
xor
push
out
jns
add
add
mov
add
add
fstpl
dec
add
add
pushf
sub
xchg
jmp
sub
add
add
add
sbb
cmp
pop
dec
adc
mov
mov
mov
add
sbb
mov
add
add
mov
pushf
and
add
add
stc
push
inc
add
add
push
cmpsl
into
or
add
add
xor
add
add
add
add
rorb
ret
jns
sahf
cmc
jns
pop
loop
sub
popf
jl
fs
pop
fidivl
outsb
testl
sub
movl
xor
pop
lahf
or
add
add
cli
shlb
and
sub
scas
cli
inc
add
add
mov
inc
xchg
in
inc
xor
lds
add
add
xchg
mov
or
add
add
push
push
sarl
fwait
sti
test
pop
inc
test
pop
aas
ror
hlt
xor
add
add
dec
or
mov
add
add
and
xor
mov
xchg
outsl
xor
shlb
sub
aam
and
stos
xchg
mov
gs
push
bnd
cmp
dec
xchg
xorl
xchg
cmp
add
add
add
add
jo
stc
jb
fidivs
addb
dec
add
add
mov
popf
mov
add
inc
add
add
xlat
push
cmpsb
pop
dec
sbb
mov
or
push
push
decb
js
hlt
mov
in
lods
pusha
mov
fimull
add
sub
xlat
sbb
pop
cmpsb
scas
out
push
faddl
jne
adc
add
add
cmp
add
add
icebp
lods
gs
inc
push
xchg
addr16
in
popa
ret
inc
incb
add
xchg
mov
popf
xor
or
xchg
push
leave
bound
fcompl
push
test
adc
sbb
xchg
sbb
lahf
cmp
mov
out
jns
add
add
out
aam
jle
inc
je
mov
in
cmp
add
iret
sub
fucomp
pop
js
jl
jle
jo
test
pop
mov
inc
pop
push
mov
cmpsl
insl
loopne
xchg
inc
add
add
sub
add
add
mov
inc
push
icebp
mov
les
add
add
xchg
pop
mov
add
add
mov
in
cmpsl
sahf
ljmp
add
add
sbb
add
add
test
xlat
cwtl
pop
decb
dec
addl
cmpsl
mov
xor
popa
enter
jbe
mov
movsl
push
adc
les
jg
stos
fcomi
xchg
cmc
lret
out
outsb
jp
pop
andb
fcomps
jns
dec
mov
add
add
ljmp
pop
or
add
add
cwtl
lods
pop
cmp
rcll
rcrl
inc
jmp
pop
shrl
mov
add
add
cwtl
xor
dec
jg
mov
ret
xor
add
out
fnstsw
outsb
jle
xchg
rcll
add
add
add
pop
xor
cltd
cmp
incb
pop
test
aaa
popf
push
xchg
xor
lret
and
pop
xchg
lds
add
or
add
add
aaa
jne
in
push
js
cmpsl
pushf
xchg
xchg
lods
int
popa
xor
add
inc
dec
loope
add
add
loop
inc
mov
in
int3
js
fcomip
adc
pop
cmp
xchg
mov
add
dec
jp
push
movsl
jo
pop
dec
iret
gs
ret
lea
addr16
add
fistps
push
and
xchg
jge
out
adc
add
es
or
sbb
mov
mov
test
shrl
cmpsl
inc
push
stos
test
div
js
notl
data16
rcrl
cmp
cwtl
inc
add
add
cmc
mov
cmpsl
out
push
and
cli
lcall
adc
mov
stc
and
add
mov
xchg
push
mov
imul
add
pop
outsl
in
sub
push
mov
cmp
add
xor
dec
fnstsw
jge
add
add
xor
js
inc
pop
int
leave
inc
mov
sbb
mov
lods
jmp
jns
out
jecxz
test
add
jg
es
mov
and
pop
sar
nop
lock
repz
dec
mov
mov
inc
mov
mov
aas
popf
or
add
add
add
dec
jae
addr16
imul
imul
mov
jb
fisubl
jb
adc
enter
add
add
or
add
add
pop
cmp
mov
add
add
repnz
adc
add
add
je
dec
mov
ret
stos
call
add
cmc
sbb
pop
bound
xor
add
add
and
add
inc
pop
push
cmp
scas
add
add
add
out
jo
push
clc
jmp
add
add
mov
mov
mov
in
sti
xchg
outsl
pop
negb
mov
sub
int
scas
int
xor
fldenv
aam
jns
loopne
cmc
scas
cmpsl
xor
out
sub
add
add
mov
orl
add
inc
fldenv
addr16
lret
mov
aaa
scas
push
movb
pop
clc
pcmpgtb
popa
and
add
add
lds
lret
add
add
sbb
push
sbbb
cmp
xchg
ret
add
rclb
cmc
sbb
xor
mov
add
pop
scas
insb
add
add
pop
lcall
leave
ds
scas
lahf
lds
popf
aad
or
shlb
ror
add
cmp
jno
or
xchg
ss
add
bt
add
add
sub
add
add
add
add
loopne
stos
mov
add
sub
pop
sub
add
leave
gs
jl,pn
je
mov
out
and
add
add
dec
jp
or
lods
or
add
add
and
dec
add
add
mov
dec
xchg
adc
jno
iret
sub
add
add
ljmp
sub
add
add
and
jne
popa
xchg
jae
icebp
xchg
stos
repnz
fstpt
subb
jns
fdivl
cli
sub
add
add
subl
outsl
ret
mov
jbe
out
repnz
inc
add
add
push
cmp
inc
cmp
add
add
add
add
adcl
stos
push
hlt
loope
mov
subb
add
add
add
add
lret
add
jg
dec
cmpsl
sub
add
add
fwait
fwait
jb
icebp
lret
lret
loop
pop
jmp
add
stos
stos
pop
jne
arpl
inc
mov
pop
xchg
cmp
mov
pop
sbb
cmp
jb
xchg
cmc
xor
inc
pop
pop
push
insl
or
sti
and
add
add
outsl
lods
xchg
fwait
dec
push
in
loopne
add
add
add
loope
xor
add
add
mov
imul
push
movl
mov
mov
ss
test
inc
add
add
cmc
popf
mov
shrl
insl
pop
cmp
rcll
test
test
push
inc
ret
mov
lahf
nop
add
add
add
in
imul
add
out
fbstp
xchg
rolb
pop
in
mov
add
adc
ret
jmp
xor
mov
flds
push
icebp
out
jg
sbb
ret
mov
outsl
mov
stos
pop
mov
hlt
cmpsl
mov
adc
add
add
hlt
and
push
push
scas
xchg
les
pop
scas
insb
mov
aam
sbb
jbe
call
lods
stc
mov
add
add
out
dec
push
ljmp
xchg
loopne
out
ret
xchg
push
fsubrl
cmpsl
shlb
sbb
loope
sub
neg
or
cmp
cmp
adcl
sub
je
xlat
test
xchg
or
loop
inc
call
shl
jns
xchg
xchg
js
push
inc
test
pop
ficompl
shrl
std
loope
mov
daa
test
push
or
xor
les
mov
mov
push
fnsave
hlt
sbb
daa
cmc
addr16
add
add
add
or
or
cmp
xchg
aaa
adc
xor
arpl
cld
pop
ja
or
jns
ss
insl
inc
scas
cmc
lea
stos
inc
add
add
rol
stos
adc
arpl
add
add
add
mov
test
cld
stos
ret
pusha
mov
aam
pop
xor
ljmp
and
push
gs
dec
lock
loop
shlb
call
xchg
mov
add
add
add
and
addb
in
popa
test
mov
rolb
add
cltd
xchg
cli
xchg
mov
in
in
rclb
mov
mov
or
pop
addb
mov
push
jnp
outsl
mov
std
arpl
jl
mov
arpl
add
add
add
add
pop
dec
push
psubsb
enter
push
mov
add
testb
add
add
mov
ficoms
nop
pop
cmp
add
add
push
push
xor
arpl
push
mov
jns
repnz
out
sub
fstpt
add
mov
add
std
jns
fimuls
clc
push
adc
leave
adc
adc
out
add
add
stos
mov
lds
add
daa
sbb
sbb
and
push
push
ja
sbb
lea
lret
sbb
lods
pop
cmp
mov
sub
xchg
xchg
xor
leave
xor
sahf
dec
inc
add
add
adc
mov
in
scas
mov
sub
add
xchg
gs
inc
pop
js
aad
cmc
sbb
loopne
or
sbbb
mov
add
add
mov
jbe
push
jmp
adc
push
jg
nop
fwait
imul
add
aaa
outsb
cmp
inc
mov
sarl
add
adcl
add
mov
push
push
cmp
mov
add
ds
sahf
dec
mov
xlat
xchg
jg
pop
cltd
adc
fisubs
in
lahf
mov
push
js
jne
or
cmp
ljmp
add
add
test
lret
mov
arpl
mov
lret
aas
aam
jbe
adc
add
add
add
imul
aam
loope
out
inc
add
add
mov
add
add
ljmp
push
add
test
mov
ja
mov
fwait
inc
push
mov
add
add
add
dec
mov
std
sub
add
add
adc
push
jno
lea
lea
and
movsb
and
sbb
icebp
daa
pop
push
aad
mov
ja
and
mov
adc
stc
adc
add
add
add
leave
lods
out
leave
das
ljmp
push
mov
out
lcall
xchg
pushf
imul
mov
mov
mov
pushw
push
pop
push
loopne
xchg
bound
add
add
add
lea
sub
add
add
add
fmulp
mov
test
add
mov
mov
push
fists
add
add
jnp
mov
add
add
add
add
add
arpl
jne
jno
mov
add
add
mov
add
movl
mov
xor
shr
popf
lods
push
jb
add
add
mov
dec
rcrl
add
jae
daa
dec
outsb
das
lock
sub
jp
xchg
sbb
insb
mov
cmp
inc
mov
scas
jae
sub
stc
push
jne
add
cmp
push
cmp
add
stos
ljmp
add
aas
push
psrlq
shlb
add
add
push
add
add
add
add
add
fcomp
ljmp
int3
and
mov
xchg
pushf
xchg
pop
or
add
add
add
add
mov
mov
clc
stc
mov
mov
icebp
in
pop
pop
ficoms
imul
js
inc
sahf
dec
add
add
jle
outsb
jp
stos
inc
aaa
pop
add
add
mov
subb
add
add
fisubs
add
inc
mov
iret
add
mov
out
test
cmp
jp
sub
mov
add
add
ss
xchg
mov
pop
pop
lds
sbb
add
inc
mov
sahf
das
mov
lret
ljmp
pop
mov
int
dec
jg
mov
xchg
clc
movl
test
add
add
add
mov
push
mul
in
fwait
data16
jnp
dec
mov
push
dec
add
add
aas
enter
lret
lret
add
add
out
fcmovu
ret
hlt
adc
loop
inc
insl
fldcw
je
mov
inc
xchg
aad
mov
add
add
add
xchg
push
sahf
mov
je
loop
cltd
loope
jo
sub
cmc
cmc
lahf
ds
mov
pop
sbb
pop
push
cmp
scas
std
dec
outsb
jg
outsb
addb
mov
dec
adc
shrl
adc
adc
incb
add
shrl
and
mov
jns
and
add
add
sahf
cmp
add
add
and
add
add
clc
inc
add
add
mov
adc
sub
dec
pop
jmp
je
push
cmp
jae
bound
pop
jle
mov
lds
or
sub
sbb
mov
and
negl
push
scas
stos
mov
mov
sahf
jns
ljmp
add
add
gs
push
adc
mov
fildll
add
add
daa
gs
cli
imul
add
add
xorl
sub
add
test
scas
test
hlt
lret
mov
mov
rorb
adc
das
cwtl
loopne
shll
push
out
mov
dec
mov
xor
popa
dec
add
add
add
icebp
orb
add
add
mov
jmp
loop
or
add
add
add
add
loop
sbb
xchg
dec
test
add
gs
in
lret
js
jecxz
fimull
mov
movb
add
xchg
xchg
inc
sbb
push
testb
add
sbb
xchg
sub
add
xchg
xchg
mov
add
in
jo
lret
inc
push
push
sti
jge
sahf
inc
or
mov
cmp
push
pop
int
push
mov
clc
adc
mov
imul
adc
mov
cltd
out
rcrb
jmp
sub
jns
jae
int3
mov
sub
add
sbb
inc
mov
loope
ss
add
add
sub
add
add
je
pop
std
movsl
push
pop
cmp
adc
pop
loope
insb
add
add
aaa
scas
push
add
imul
repz
xor
push
xor
cli
and
add
cmp
jle
mov
test
out
and
jb
scas
loop
xor
imul
pop
xchg
mov
add
add
test
add
add
jge
pop
jp
add
add
add
mov
cs
fdivrs
mov
or
jg
sti
dec
into
clc
xlat
mov
lods
xor
rep
popf
mov
add
add
add
dec
mov
jle
jne
daa
cmp
dec
xor
add
rolb
incb
out
and
add
lahf
jno
popa
xor
inc
push
sbb
add
int3
ljmp
and
add
add
fisubl
fs
push
sub
ja
lahf
js
inc
mov
and
add
add
mov
cmp
and
add
xor
push
fcom
cmpl
sub
ret
add
add
ds
in
mull
xchg
push
jecxz
mov
not
adc
mov
xor
or
add
add
int
movsl
pusha
mov
and
test
xchg
aam
aas
jno
sbb
movl
cmp
add
les
add
add
pop
clc
testl
mov
mov
sbb
mov
add
add
cmpb
jmp
mov
call
pop
sbb
loopne,pn
jecxz
sbb
jns
inc
push
stos
mov
or
inc
lods
pop
nop
out
mov
rcrb
mov
pop
push
and
add
adc
inc
mov
sub
inc
aam
sbb
fs
mov
push
out
ljmp
add
push
or
loope
in
out
inc
add
add
je
inc
mov
shll
sahf
xchg
xchg
xchg
leave
ljmp
dec
clc
mov
mov
dec
mov
lock
js
xor
jmp
add
add
mov
add
push
jb
notl
test
push
adc
add
add
add
mov
xor
in
ret
xchg
mov
adc
orl
mov
mov
jo
ret
loopne
cli
sbb
sub
orl
push
xor
push
xor
dec
mov
jnp
shrb
add
adc
mov
ljmp
add
add
fcompl
cmp
cli
push
xor
inc
push
sbb
pop
iret
fidivs
std
fidivs
inc
hlt
push
fs
mov
lods
mov
push
cwtl
cs
out
add
dec
sub
sbb
add
test
addr16
pusha
mov
jns
mov
push
xchg
xor
es
into
mov
add
fxtract
sarb
out
jnp
xchg
add
mov
push
ja,pn
movsl
mov
xor
scas
ljmp
add
fldenv
test
lret
fisttps
fidivl
fwait
inc
mov
mov
repz
cmp
enter
jmp
jge
test
fsubrl
add
sarl
mov
fimull
xor
popl
add
dec
add
add
orb
add
add
ljmp
inc
mov
les
xchg
jecxz
scas
shrl
inc
sub
mov
clc
mov
outsb
sub
add
add
dec
add
add
xor
sbb
ds
jl
arpl
mov
dec
or
cmpsb
cmp
sahf
inc
cmpsl
sahf
mov
insl
lcall
add
add
mov
mov
add
sub
add
add
add
add
add
add
add
dec
mov
scas
ret
frstor
scas
cmpsl
pop
gs
pop
jl
or
test
push
or
aas
lret
mov
ficomps
test
push
pop
out
mov
sahf
jl
or
xlat
sarb
fcmovne
add
add
repnz
int
addr16
mov
into
sub
scas
test
add
cmpsl
dec
mov
push
aaa
or
inc
les
mov
and
push
xchg
outsl
test
mov
cltd
push
inc
add
add
out
outsb
push
dec
adc
cmp
sub
test
adcb
xlat
insb
add
add
xlat
adcl
out
xor
pop
test
xchg
add
icebp
js
xchg
fmull
scas
inc
call
adc
fucomip
mov
arpl
cmp
pop
lret
add
add
or
mov
add
add
loop
imull
add
stc
push
cmp
mov
and
ss
subl
adc
nop
sub
add
add
and
repz
mov
xor
test
lret
add
add
add
mov
repnz
shlb
add
add
daa
mov
cmc
stos
push
pop
mov
mov
dec
aam
in
repnz
inc
xchg
shlb
add
add
dec
mov
add
add
add
add
or
mov
and
and
add
add
mov
imul
imul
and
add
push
push
aas
add
add
add
jecxz
fwait
stos
dec
xchg
pushf
cli
add
cmp
fs
movsl
sub
add
lods
lock
adc
mov
add
pop
inc
sbb
adc
add
add
add
out
add
add
add
hlt
cmc
clc
sbb
stos
fdivrs
sti
mov
mov
inc
add
add
popa
arpl
fnsave
gs
fdivr
jecxz
push
dec
add
add
dec
adc
adc
mov
test
js
mov
add
xchg
mov
push
gs
mulb
xchg
mov
add
add
mov
jl
mov
jg
sbbl
sahf
je
std
lcall
inc
add
add
sahf
sti
pusha
add
add
mov
push
sub
call
push
and
adc
cmp
jns
add
or
sbb
mov
testl
stos
leave
int
out
outsl
inc
cmc
jns
pop
fnsave
rorl
push
inc
add
add
mov
gs
mov
mov
cmp
cs
mov
mov
dec
mov
sbb
pop
xchg
ja
hlt
fmull
pop
and
add
add
push
jmp
out
fisttpll
jecxz
jb
inc
mov
push
sub
or
add
add
add
add
xchg
fnclex
test
dec
dec
add
add
jmp
push
dec
ficomps
pop
dec
repz
add
repnz
mov
mov
xchg
pop
xchg
test
xchg
mov
cmpsb
and
lcall
push
fisttpl
add
test
add
add
add
imul
flds
add
add
fwait
or
popl
ret
mov
add
dec
add
add
rcl
testb
imul
mov
add
jno
movsb
push
add
add
add
or
loop
mov
std
and
adc
pop
std
or
add
add
test
push
mov
out
lock
lods
adc
call
out
push
ja
out
jp
sahf
jns
jbe
in
sbb
xchg
cs
xlat
dec
pop
fisubrl
gs
fisttpl
adcb
xor
mov
adc
or
mov
test
rorb
inc
xchg
inc
cli
clc
push
mov
imul
jno
sub
or
movsb
pushf
xor
dec
add
add
mov
pop
data16
jg
ficoms
ds
mov
push
fs
sub
push
nop
cld
sub
add
add
pop
mov
jg
xor
add
add
mov
int3
ljmp
sub
add
add
lds
cmp
jae
mov
mov
and
add
add
pop
movsl
inc
add
add
inc
add
add
insl
dec
pop
insl
jbe
and
add
add
sbb
add
or
add
add
dec
pop
add
or
out
cltd
sub
push
adc
jne
nop
mull
push
mov
pop
fcompl
leave
inc
inc
xchg
fsubl
mov
add
push
std
call
aas
out
cmp
mov
rep
ja
imul
sbb
fldt
mov
mov
mov
mov
adc
mov
mov
cmp
add
fbld
add
loop
push
imul
cvtps2pi
loope
fnstenv
or
int
xchg
cmp
xor
mov
and
out
fldt
ja
in
fbld
adc
add
fldt
lods
push
int3
ljmp
sbb
orb
push
insb
add
add
jne
sbb
jg
mov
push
pop
mov
add
mov
add
and
mov
mov
movsb
add
add
add
repnz
add
add
add
dec
mov
inc
add
adc
daa
push
jg
sub
add
add
push
ficompl
mov
dec
mov
nop
out
pop
imul
into
push
xor
inc
mov
in
in
pop
out
mov
sbb
dec
fisttpl
mov
inc
insl
xor
add
inc
add
add
scas
pusha
mov
in
fstl
je
inc
mov
scas
lods
add
adc
add
sbb
add
mov
mov
xchg
jecxz
sub
add
add
dec
std
out
insb
mov
and
add
add
nop
sbb
out
inc
movsb
pop
outsl
sub
stc
sub
add
add
adc
dec
into
pop
lods
std
push
popa
test
pop
cmp
lock
ljmp
add
add
out
out
push
lods
dec
mov
clc
into
mov
dec
jne
lahf
fcoms
dec
push
lahf
push
xlat
lock
mov
fisttpl
mov
iret
loopne
adc
out
xchg
mov
mov
jae
dec
gs
lea
inc
mov
dec
popa
jns
mov
sub
mov
addr16
inc
jp
imulb
xchg
jp
push
sbb
call
std
cmp
xlat
xchg
iret
cmp
add
add
mov
das
cmp
out
hlt
std
fdivrp
test
cmpsb
popf
into
sub
lahf
das
ret
pop
imul
mov
fcompl
cmpsl
stos
mov
push
push
pop
out
out
push
shl
and
add
add
in
pop
xor
lods
lods
or
jmp
mov
jmp
cld
orl
repz
push
xchg
or
add
add
mov
rcrb
add
sbb
add
daa
dec
cmp
jb
adc
jnp
imul
add
add
xor
mov
adc
or
leave
js
es
sbb
lods
and
jmp
sub
dec
inc
dec
mov
test
add
dec
fildl
push
sbb
jecxz
jb
hlt
xchg
adc
sub
add
add
and
movsl
pusha
mov
out
cmp
ret
or
jmp
out
in
lret
cmp
add
add
jge
insb
add
add
mov
xor
xchg
mov
and
mov
jmp
add
cwtl
sub
dec
cmp
test
test
jmp
xor
add
add
add
push
xorb
pop
pop
ja
mov
pop
setnp
pop
fstpl
mov
call
add
mov
add
add
add
dec
pop
add
add
mov
rclb
push
je
lret
mov
add
add
push
xchg
call
dec
add
add
mov
int3
or
add
add
pop
sarl
decb
add
add
enter
pop
mov
test
cli
inc
jns
mov
test
inc
push
test
adc
add
add
sarb
ret
mov
dec
test
cmp
add
cmp
or
add
add
inc
inc
mov
inc
out
add
add
add
into
or
adc
das
ss
mov
mov
pop
jb
fildll
push
movsl
sbb
mov
pop
push
ret
lea
in
mov
xchg
loopne
cwtl
lods
shlb
jmp
test
imul
push
add
add
add
std
dec
add
add
iret
jecxz
int3
mov
lret
add
add
dec
sahf
cmp
repnz
adc
mov
add
add
xor
popa
hlt
sar
fadd
fnsave
mov
push
faddp
lret
mov
xchg
jmp
shl
loop
add
add
dec
add
add
sub
add
add
jl
fadd
push
cli
mov
sbb
popa
cmc
adc
fiaddl
add
add
adc
popa
or
add
add
arpl
fwait
repnz
neg
test
rolb
les
lcall
cmp
add
xor
ficompl
aaa
stos
mov
and
or
in
or
cmp
add
inc
xchg
dec
add
add
pop
sbb
add
add
pop
or
push
sub
dec
scas
jae
mov
sti
sar
xor
cmp
mov
and
call
int
das
pop
and
in
pop
mov
jne
pop
xor
mov
lods
xlat
dec
ja
sub
aaa
sbb
js
jle
mov
mov
add
add
scas
pop
test
enter
mov
cld
xchg
and
or
out
cmp
mov
fcompl
clc
mov
add
je
out
adc
clc
loopne
sbb
dec
or
pop
sahf
inc
jecxz
jns
or
add
add
push
and
add
add
jae
es
adc
aam
or
in
dec
and
rcr
in
sub
xchg
jl
push
xchg
dec
mov
mov
or
add
add
in
shll
adc
cmp
add
out
inc
aaa
bound
mov
mov
mov
add
or
add
add
movsl
fistpll
mov
loop
scas
sub
inc
mov
mov
add
add
xor
outsl
jle
dec
ret
mov
nop
pop
add
repnz
in
add
or
mov
mov
pop
sbb
xor
xorl
push
movsb
push
inc
add
add
in
push
hlt
sbb
push
das
icebp
dec
xchg
add
add
add
shl
pop
dec
mov
dec
jb
sahf
cmp
stos
inc
mov
outsb
and
lds
enter
aaa
scas
mov
jg
insl
sbb
bound
sbb
mov
orb
in
sar
mov
xchg
cmpsl
xchg
leave
mov
sub
and
add
add
int3
in
sbb
add
sub
mov
sti
sub
add
add
add
add
add
add
xchg
push
popf
cmp
ret
arpl
sub
add
fistpl
push
cmp
andl
js
push
fwait
sub
shll
lock
xchg
test
movsl
nop
mov
rcrl
add
add
mov
adc
or
mov
xchg
clc
js
pushf
cmp
cmc
sub
push
jl
das
in
mov
orb
insl
adc
cld
mov
push
pop
pop
push
pushf
xchg
mov
push
addr16
add
add
xchg
mov
mov
cmp
add
add
les
add
hlt
rcl
mov
xorb
dec
lods
cmpsl
mov
lret
shll
lret
roll
imul
fwait
ret
test
outsl
xchg
loop
fcoms
push
mov
add
add
add
xor
leave
mov
pop
pusha
mov
lret
add
test
data16
cmp
outsb
cmpsb
pop
popa
call
add
add
add
add
xchg
adc
jge
sub
fisubs
add
jno
xor
jmp
cmp
mov
cmp
enter
add
push
lods
mov
sub
fucomi
dec
scas
xchg
xchg
jno
mul
push
inc
push
mov
call
das
loopne
shl
inc
add
add
test
push
scas
ficoml
addr16
inc
mov
ljmp
push
movsl
pop
xchg
or
rcrb
popa
test
mov
lock
and
add
add
test
in
and
inc
outsb
xlat
push
dec
add
add
or
stc
jbe
xor
fldcw
push
stos
sbbb
in
push
xor
lret
xlat
insl
jmp
lret
or
ret
push
je
shlb
mov
insb
mov
mov
mov
add
add
adc
pop
sbb
aad
jg
leave
mov
add
add
add
jb
inc
scas
dec
or
lahf
in
push
adcb
neg
loope
fincstp
adc
inc
mov
mov
push
popa
and
and
lods
lock
mov
pop
outsl
and
mov
push
push
sub
or
add
add
insl
lret
inc
sbb
add
add
add
sub
inc
addr16
mov
cmpsb
pop
enter
mov
push
add
add
test
jg
clc
sbb
mov
sbb
add
add
stos
iret
std
sub
jo
xor
es
inc
outsl
push
cmp
and
insb
mov
mov
pushf
clc
sahf
sti
jbe
notb
loope
or
add
add
pop
mov
bound
clc
ret
mov
mov
pushf
ss
stos
xchg
jno
scas
std
push
fldenv
add
jo
mov
push
movsl
xchg
lcall
add
js
mov
pop
in
mov
pusha
mov
xchg
fldcw
add
add
xchg
mov
cmp
add
mov
add
cmp
out
push
xchg
inc
mov
sbb
pop
cld
scas
cltd
xchg
add
add
sub
and
aas
scas
outsl
push
gs
das
adc
das
aam
imul
leave
inc
mov
popf
fidivrs
pop
pop
movsl
or
add
add
pop
jnp
ljmp
add
sbb
nop
inc
sub
add
out
dec
add
add
dec
xlat
inc
mov
es
or
add
add
mov
dec
ret
shlb
sub
insl
add
add
add
mov
mov
inc
adc
test
insl
call
int
sbb
mov
pop
lahf
dec
sub
imul
add
push
into
sub
add
add
pop
jp
dec
dec
outsl
xchg
jecxz
add
add
ffree
and
add
add
mov
shrl
xchg
mov
or
aam
push
out
cmpsl
pop
rorb
add
add
add
add
add
ficoml
cld
sahf
movsl
xchg
std
mov
sub
hlt
sti
fcmovnb
and
gs
cmp
xchg
dec
sbb
enter
sub
cmp
or
and
rcrb
notl
rorl
push
dec
mov
mov
xchg
scas
repz
mov
or
add
add
inc
ret
test
mov
dec
add
add
sahf
testb
dec
push
test
push
mov
mov
sub
add
add
enter
imul
stc
loope
add
add
add
xor
pushf
and
adc
inc
mov
add
loope
inc
sub
xchg
cmp
loopne
mov
out
in
sbb
ljmp
jno
xchg
je
sbbw
lea
sub
add
ffreep
rcrl
push
and
sbb
or
scas
fwait
into
fdivs
mov
cmp
cmp
mov
out
andb
or
inc
lock
sub
jns
jnp
out
out
in
inc
push
mov
jecxz
subb
add
and
add
add
js
pop
and
or
push
pop
into
wbinvd
pop
pusha
mov
cli
mov
jmp
mov
call
xchg
jecxz
mov
mov
cs
je
dec
bound
orb
sub
add
sti
std
aaa
jmp
add
dec
es
sti
ret
arpl
es
add
add
mov
push
mov
lods
jo
lock
add
add
pushf
ss
jge
test
add
xlat
jne
push
in
sbb
enter
adc
nop
stos
out
or
add
add
add
ds
les
add
add
push
push
rcrb
imul
arpl
add
add
add
mov
leave
punpckhbw
adc
sub
inc
mov
ja
lret
xor
repz
add
add
xor
sub
add
add
inc
ja
add
mov
js
adc
dec
in
fidivl
mov
cmp
add
outsl
imull
fnstenv
pop
mov
cmp
sub
mov
call
rcrl
mov
int
dec
loope
mov
cmp
cmovp
cmc
rcr
fldl
arpl
and
add
add
pop
pop
cs
mov
or
cli
loope
jnp
jo
pop
lret
lret
out
mov
jo
aaa
in
mov
test
jnp
data16
imul
add
add
push
movsb
dec
stc
adc
or
add
add
aas
mov
mov
cmp
aam
lcall
add
add
ss
outsl
pop
mov
ret
shlb
add
outsb
ret
stc
out
addr16
dec
negl
stos
out
mov
add
push
jo
xor
into
inc
adc
outsl
and
add
add
daa
into
imul
rorl
fwait
sti
icebp
sub
popa
and
in
int
push
mov
mov
xor
popf
in
jg
mov
jb
xor
add
add
add
add
test
fsts
add
jl
out
pushf
inc
add
sub
sarl
lahf
jl
xchg
std
mov
xor
add
rolb
enter
aad
sub
and
add
add
in
or
add
mov
push
outsb
xor
sbb
shl
inc
add
add
xchg
das
push
fnstsw
mov
xor
add
inc
fisttpll
lds
daa
mov
mov
mov
mov
and
xchg
loope
test
loope
cmp
cmp
jge
repnz
adc
cmp
aam
xchg
pusha
add
add
mov
aaa
lret
add
add
xchg
test
icebp
and
cmpb
sub
cmp
push
cmpsl
sub
jg
xchg
je
xchg
add
add
jae
fnstenv
and
add
add
enter
jmp
jbe
sti
push
cmpsl
jl
aas
xor
mov
jb
sub
lods
pop
mov
add
add
add
lea
js
cs
mov
imul
mov
inc
out
and
add
add
in
cmp
mov
mov
cmp
adc
cmp
dec
insl
push
in
dec
dec
jnp
push
dec
in
and
pop
push
mov
mov
and
push
push
jecxz
insb
add
add
ret
xchg
cmp
sbb
mov
dec
mov
sbb
in
mov
add
add
sub
sbb
enter
add
sbb
bound
add
add
cmp
shl
call
enter
jbe
repnz
mov
add
add
mov
add
and
pop
rcll
dec
mov
ds
sbb
mov
fisttpll
pusha
add
add
jmp
mov
sub
push
mov
and
add
add
loopne
lods
enter
add
push
insb
add
add
pop
cmc
xor
and
int3
jmp
cld
clc
adc
mov
mov
enter
clc
pushf
in
imul
xchg
mov
cmp
xchg
mov
cld
lds
xchg
or
add
add
clc
ds
cld
xor
rolb
addb
mov
push
adc
add
sti
out
xlat
stos
mov
gs
xor
push
mov
add
add
mov
cltd
into
inc
ds
popa
sti
addr16
mov
mov
insb
add
add
cmpsb
fcmovnu
ljmp
add
add
lret
cmp
pop
cli
addr16
std
mov
add
add
mov
pop
loop
pop
cwtl
or
add
ja
jg
fsubrl
testl
add
add
add
xchg
pop
int3
pop
in
gs
enter
xor
movsl
cld
scas
jl
inc
mov
inc
sbbb
jo
mov
nop
cwtl
lret
mov
xchg
int
ret
cwtl
stos
cmp
out
and
ret
fldcw
leave
dec
dec
add
add
enter
addr16
push
cmp
mov
mov
xchg
sbb
imul
dec
ja
pusha
mov
push
add
aam
ljmp
sti
fidivrs
mov
add
add
add
pop
sti
loope
ss
mov
mov
jmp
push
xchg
nop
inc
repnz
pop
push
roll
cld
idivb
loop
bound
xor
pop
mov
add
les
fidivs
fld
arpl
test
add
add
add
pop
sti
fsts
bound
mov
lods
fscale
jmp
pop
push
adc
mov
xchg
ljmp
add
add
push
arpl
jnp
ljmp
movsb
sbb
std
in
or
add
add
in
xor
int
mov
adc
enter
cmp
cmp
aaa
jle
mov
je
in
jo
sbb
or
add
add
jno
inc
add
add
stc
inc
pushf
pop
dec
in
add
aad
jl
mov
mov
push
adc
xchg
test
mov
add
sub
fsubrp
push
or
add
add
dec
add
add
mov
mov
jg
pop
mov
sub
jbe
add
add
loopne
dec
add
add
cmp
lcall
mov
pop
inc
or
add
add
mov
add
dec
dec
mov
sub
add
add
pop
outsl
and
cmc
jnp
cli
push
aas
xlat
ss
dec
lahf
jne
sub
loop
push
dec
clc
inc
mov
inc
mov
addl
in
inc
add
insb
add
add
cmp
aad
sbb
add
add
xor
add
cli
ljmp
and
mov
sub
add
add
loop
leave
clc
dec
adc
pushf
add
add
add
in
sbb
test
jns
mov
xor
out
leave
movsl
js
cmpsl
xchg
filds
add
movsb
rcrl
add
add
add
mov
cmp
bound
sbb
dec
mov
xchg
hlt
cmp
mov
pop
pop
ljmp
add
mov
sub
xor
mov
std
loopne
fnsave
xor
in
cmpb
push
cs
mov
cmp
test
ss
add
add
filds
add
jnp
mov
andb
stos
xchg
test
jp
dec
fdivr
insl
xchg
loope
cltd
xchg
test
push
arpl
pushf
mov
popa
not
enter
add
add
js
push
jb
insl
dec
push
push
mov
ds
xor
inc
mov
test
in
fidivl
add
add
nopl
aad
aaa
jge
add
add
insb
mov
mov
xor
sub
add
add
ja
pop
xor
movlps
add
add
push
mov
loopne
popa
sub
add
xor
dec
push
or
mov
pop
test
mov
pop
push
mov
hlt
out
or
add
add
mov
push
call
add
imul
and
jae
outsl
add
sti
cltd
or
add
and
enter
push
loop
mov
imul
sub
add
add
add
add
das
dec
stos
shlb
imul
in
call
add
ficoml
sbb
cmp
mov
shlb
add
add
adc
add
add
mov
add
pop
and
add
add
jns
jnp
dec
add
add
adc
push
aam
mov
add
add
sahf
push
cmp
sub
cltd
pop
movq
mov
mov
add
and
add
add
xchg
in
mov
cmp
ret
out
cmp
push
mov
dec
xchg
cltd
mov
xchg
mov
add
add
dec
enter
fiaddl
add
xlat
jo
aam
inc
inc
jg
xchg
ja
xchg
popa
nop
ret
sbb
xchg
add
add
add
and
mov
gs
popf
xchg
or
and
push
lret
cmp
cld
je
lcall
sahf
mov
add
jecxz
cmpsb
pop
inc
test
stos
adc
cmpl
add
bound
rorb
popf
or
add
add
mov
cltd
bound
add
add
and
cmpsb
cmp
mov
mov
jl
flds
xor
outsb
test
sbb
dec
mov
ljmp
aaa
pop
jecxz
add
add
add
jb
fbld
nop
shr
aad
stc
pop
sbb
pop
imul
in
hlt
pop
push
pop
cs
cmp
add
add
inc
add
add
push
or
add
add
mov
dec
add
add
xchg
leave
push
popf
loopne
mov
add
mov
insl
sub
add
add
aad
stos
push
mov
inc
iret
xor
push
je
test
cmp
xchg
cmc
bound
mov
scas
mov
imul
insl
loope
cli
dec
mull
inc
movsl
sahf
arpl
add
cmp
inc
add
add
outsl
cmp
mov
xor
incl
add
add
sub
and
add
add
add
out
jle
or
cmc
cmc
enter
sbb
add
add
dec
aam
adc
and
sbb
cltd
jmp
movsb
ret
sbb
fidivs
leave
mov
add
pushf
int
into
xchg
lret
addr16
ds
add
nop
push
push
mov
add
add
sbb
daa
stos
cmpb
test
ss
pushf
stos
add
add
add
gs
xor
int3
cwtl
int
popf
subl
cmpsl
imul
mov
mov
add
mov
test
jmp
dec
push
jecxz
daa
fdivrp
lret
or
add
add
push
call
scas
insb
add
add
pop
inc
ljmp
pusha
mov
stos
dec
add
add
mov
pusha
mov
cmp
cmp
enter
test
idivb
repnz
mov
pop
mov
ret
movsb
or
add
add
push
xchg
dec
add
add
repnz
add
add
jne
add
add
push
mov
add
add
ja
mov
add
add
add
add
jne
loop
je
insb
add
add
test
fistpll
imul
pop
jl
adc
popa
outsl
cs
loopne
aam
cmp
icebp
fimull
lret
mov
ja
push
jl
enter
mov
and
jmp
mov
fldenv
lds
jbe
shlb
jns
jmp
adc
or
lahf
out
xchg
jecxz
mov
and
xchg
xor
roll
lahf
test
jecxz
push
mov
arpl
cld
sahf
decl
xchg
shll
or
mov
add
sbb
ret
hlt
push
jae
stc
add
jle
cmpsl
call
or
add
add
push
xchg
cmp
ds
sub
sbb
insl
xchg
xor
add
add
cmpsl
mov
aas
repz
fisubrs
sub
lock
add
add
add
call
adc
cmp
inc
add
add
mov
nop
enter
add
add
add
add
movb
pop
mov
jmp
push
pop
into
jge
subb
add
pusha
add
add
gs
mov
ds
mov
dec
mov
aam
mov
lods
cmp
lret
pop
sbb
std
and
and
add
nop
sahf
aad
cmp
jg
add
hlt
adc
xchg
mov
cmp
data16
gs
inc
fildl
out
pop
dec
sbb
jne
push
mov
pop
push
mov
add
jae
cmpsl
push
jbe
sahf
jl
dec
mov
add
pusha
add
add
loopne
andb
pusha
add
add
divl
out
mov
fdivs
add
add
mov
dec
jge
gs
jb
enter
and
sbb
cmpsl
add
add
add
sub
nop
lods
ret
in
dec
adc
rsqrtps
pushf
arpl
inc
push
roll
add
xchg
adc
mov
add
add
push
lcall
hlt
or
sub
add
add
add
jno
fsts
movsb
fstl
jmp
and
add
add
lcall
cmp
adc
outsb
rorl
mov
or
loopne
insl
out
xchg
lret
cmp
out
stc
int3
xor
aad
das
and
add
add
add
add
pop
jnp
pop
dec
mov
mov
mov
xchg
data16
test
pop
aas
test
in
inc
pop
in
mov
xchg
dec
pop
lret
or
dec
push
sbb
xor
add
leave
jp
jo
pop
insl
jno
movsl
jbe
and
add
add
add
add
adc
or
fdivl
sbb
add
add
add
add
mov
lods
icebp
cmpsl
leave
out
jns
jo
cld
sbb
jb
pop
ss
cmp
jmp
add
test
cmpsl
or
test
sarl
roll
adc
sarb
jae
mov
add
cmove
add
add
and
add
add
hlt
and
add
add
add
add
add
mov
push
outsb
or
push
mov
add
sbb
mov
mov
int
insb
add
add
or
add
add
add
add
or
and
adcb
ret
jae
add
fcoms
or
add
add
pop
mov
sbb
or
add
add
ret
jmp
ret
xor
mov
sbb
sub
aas
pop
pop
sub
fistps
and
add
clc
jne
out
pop
gs
rcrl
add
add
mov
inc
sub
add
add
sbb
jmp
add
add
jl
pop
sbb
adc
out
xor
sub
hlt
das
mov
int
sbb
add
add
pop
jne
pusha
add
add
test
pop
jns
sbb
fcomip
add
fidivs
cmp
dec
mov
add
add
test
dec
fistpl
sbb
repz
add
add
test
xchg
ljmp
inc
and
xchg
in
push
jp
subb
add
add
aaa
pop
pop
inc
sub
add
jmp
out
add
add
mov
lret
pop
xchg
call
xor
rorl
and
mov
add
add
int
xor
and
add
add
inc
sub
cmc
or
add
add
jae
lcall
js
and
add
add
out
jecxz
movsb
lret
test
sbbb
xor
xchg
rcrb
cltd
adc
dec
fs
jmp
pop
js
test
mov
xor
loop
add
add
push
xor
add
add
cmpsl
or
ret
clc
inc
cmp
test
add
mov
je
popa
xor
mov
sti
cmc
scas
sub
add
add
pop
cmp
sbb
push
popa
and
add
add
or
int3
push
gs
js
mov
arpl
add
add
dec
adc
jg
insb
add
add
jge
cs
mov
sub
jmp
and
popf
lods
movsb
fdivp
cmp
ds
arpl
add
add
adc
add
add
mov
add
add
popf
jns
sarb
std
adc
push
cld
cmc
call
add
add
bound
sti
mov
insb
mov
push
lods
stos
add
mov
test
into
inc
mov
inc
mov
add
add
fdivs
add
je
ja
ja
sub
add
add
cmp
add
xor
test
sti
jle
or
add
add
rorb
dec
scas
fsubrl
xor
inc
push
jmp
add
add
adc
aaa
push
aad
add
add
es
xlat
aad
pop
das
out
addb
sub
mov
lods
inc
outsl
mov
adc
lods
or
or
add
add
dec
mov
je
adc
outsb
sub
xor
dec
insl
arpl
popa
pop
mov
jno
call
pop
mov
aam
xor
and
add
add
or
pop
inc
mov
cmpsb
sbbb
in
xchg
push
jbe
push
subb
add
fwait
mov
cld
add
or
add
push
inc
sub
fldcw
add
add
imul
xchg
test
add
xchg
mov
pop
in
xchg
jge
xor
jbe
xchg
jb
fcmovb
aad
jns
fistps
call
popa
vpaddsb
sub
add
aaa
xchg
daa
add
adc
mov
sub
adc
inc
add
add
xchg
inc
outsb
jns
inc
mov
nop
cs
push
ret
ss
int3
cli
es
push
std
cmc
xor
mov
js
jmp
push
jecxz
adc
int3
mov
xchg
pop
mov
mov
test
xchg
cmp
add
add
jb
pop
popl
ja
mov
and
add
mov
dec
inc
mov
popf
or
pusha
mov
adc
dec
dec
add
add
and
add
add
jle
cld
and
outsl
loop
add
es
das
ficomps
push
div
in
arpl
jns
adc
xor
jns
arpl
mov
test
sbb
cmp
lret
lock
rorl
rolb
add
add
push
sub
and
add
add
loopne
xchg
icebp
sub
add
add
loope
call
xor
negl
pop
pusha
add
add
push
adc
add
add
cmp
inc
rorb
dec
mov
adc
out
pop
add
push
test
pop
mov
sub
sti
sbb
mov
cmp
and
scas
insl
fcompl
add
xor
push
aas
andw
jbe
mov
mov
sub
add
add
leave
ja
fstps
push
mov
xor
loop
pop
dec
mov
add
add
dec
add
add
js
push
xchg
test
mov
shlb
add
add
jg
cmc
xor
add
add
add
inc
adc
add
add
add
popf
mov
aam
in
repnz
int3
es
mov
add
add
mov
add
add
xchg
out
xlat
fildll
add
add
mov
add
cmp
mov
add
add
add
lods
inc
xor
inc
inc
add
add
xor
xchg
or
adc
cmp
push
push
jnp
mov
add
add
add
hlt
jecxz
lock
mov
clc
pop
imul
mov
cmp
mov
pop
les
aam
add
sahf
ret
adc
xor
jnp
push
push
mov
jge
sahf
repz
xchg
lock
cltd
jge
int3
push
lods
sbb
addr16
dec
jnp
add
add
pop
aad
inc
mov
pop
mov
add
add
movl
add
add
jne
in
adc
call
dec
out
dec
add
add
lret
lret
pop
lret
js
imul
sbb
nop
pop
out
ljmp
push
adc
lcall
das
mov
adc
out
mov
xor
add
add
popf
movsb
int
xorb
int
cmp
insb
mov
pop
jmp
mov
hlt
cmpsb
fdivl
out
scas
mov
gs
lret
xchg
add
add
ret
xchg
add
add
addr16
out
mov
push
sbb
in
jne
cmp
add
add
adc
cs
mov
mov
jne
ds
leave
or
mov
add
add
sbb
loop
rcr
and
mov
adc
in
loopne
repz
add
cltd
sub
inc
test
jb
test
jbe
loope
and
mov
fs
call
icebp
dec
mov
add
xor
add
mov
shr
sbb
shl
faddl
cmp
xor
cmp
mov
aam
rcll
pushf
xchg
iret
out
cmp
aad
xor
stos
cmpsb
cmpsb
call
jle
movsl
xchg
lods
adc
std
fistpll
jno
in
or
add
jg
je
jno
cli
stc
ficomps
pushf
dec
add
add
dec
push
je
mov
add
add
lret
in
pop
stos
jns
stc
imul
adc
xchg
int
mov
data16
mov
test
sti
cmp
xchg
mov
add
add
lcall
push
hlt
adc
popf
cmp
inc
mov
cmc
ljmp
or
jmp
fldl
add
add
mov
aad
cld
xchg
adc
cs
mov
aas
icebp
das
inc
mov
ret
cmp
add
add
inc
cmp
in
mov
fldpi
add
jp
fdivrl
cli
mov
andl
lock
or
movsl
mov
les
cmp
in
hlt
clc
test
cmc
dec
hlt
iret
movsb
inc
repz
and
add
add
loop
outsb
les
push
es
inc
loop
or
mov
add
add
add
ds
movsb
lds
ja
xchg
mov
adc
add
ret
push
shr
xor
loopne
lcall
nop
lods
lods
cltd
nop
adc
sahf
aad
push
mov
add
lods
sbb
fmuls
sbb
dec
jb
movsb
jge
mov
outsb
inc
mov
add
hlt
je,pt
jo
or
xchg
cli
mov
mov
add
dec
push
jns
dec
jecxz
adc
cltd
add
add
add
fmul
stc
mov
in
ss
add
add
call
cmpl
mov
adc
xchg
mov
xor
mov
mov
add
bound
add
add
or
mov
dec
stos
sbb
add
rcll
lods
mov
add
add
outsl
push
sbb
ficoms
add
add
mov
push
cmp
jmp
sub
add
add
popl
cmpsb
inc
mov
add
add
add
fisttpll
loope
lods
mov
ss
pop
pop
push
test
jnp
mov
push
jns
mov
loop
mov
add
xor
push
sub
pushf
xchg
into
aaa
je
mov
les
dec
add
add
mov
outsb
fistpll
jg
pop
notb
mov
test
add
add
sub
push
mov
leave
push
sub
push
cmc
cmp
dec
mov
mov
movsl
jne
and
add
add
add
stos
out
pop
cmp
lods
cltd
inc
mov
cli
mov
mov
lds
sti
orl
lcall
dec
hlt
mov
push
loopne
rcrl
aaa
lods
cmpsl
mov
add
test
or
jg
pop
nop
sub
sbb
adc
mov
fldt
add
add
or
mov
add
add
cwtl
add
add
add
ror
push
push
add
add
or
pop
cmp
add
add
jns
xchg
xchg
push
cmp
adc
mov
dec
imul
add
or
xor
cmp
mov
andl
add
xor
mov
lock
add
add
jne
fstpl
add
add
xchg
and
add
add
pop
iret
popf
cmp
xor
insl
push
movsb
mov
or
jne
jnp
and
lret
push
pop
push
sar
xlat
popf
mov
and
mov
push
mov
jo
jns
shlb
lods
jg
lods
pusha
mov
adc
cmc
push
mov
push
aad
jb
rorb
sub
add
add
add
add
rcrl
mov
jl
push
jp
push
jbe
fcoml
outsl
sub
add
add
add
aaa
pop
mov
hlt
rolb
add
mov
push
mov
mov
cmp
cmp
add
add
cmpb
in
cmp
in
xchg
add
add
lods
ret
or
add
add
fbstp
scas
daa
cmp
icebp
adc
push
mov
or
popf
adc
add
add
rorb
lret
xor
stos
leave
jmp
add
add
add
pop
mov
mov
add
add
mov
mov
xchg
and
dec
int
addr16
add
mov
out
negl
cmp
mov
sbb
mov
inc
adc
mov
popf
movzbl
add
add
call
cmpsb
insb
mov
loope
out
add
sbb
pop
in
aaa
add
pop
rcr
or
add
add
ss
or
add
push
cmp
or
frstor
jmp
push
or
xchg
sbb
push
push
fmul
repnz
add
add
daa
mov
add
add
mov
sbb
iret
lcall
js
cmp
inc
mov
adc
add
add
scas
pop
push
ret
push
fst
int
jnp
lret
and
pop
in
jbe
ja
lcall
bsf
or
cmp
mov
mov
add
add
add
xchg
std
mov
idivb
loope
aaa
lods
lret
mov
mov
gs
add
pop
adc
push
inc
add
add
add
ljmp
add
popa
lret
fstpl
jl
pop
add
push
lcall
stos
fimull
jno
jl
push
psubd
lds
or
inc
outsb
cli
xor
adc
mov
mov
outsl
mov
or
out
enter
mov
xchg
imul
loopne
mov
push
neg
jg
ja
sub
add
add
fcoml
mov
inc
mov
cli
xchg
mov
stos
add
jb
mov
sbb
jno
dec
mov
or
in
push
sbb
fbld
fmuls
popa
or
stos
scas
sbb
add
add
or
add
in
add
or
xor
dec
mov
pusha
add
add
cmp
outsl
pop
js
xor
popa
adc
test
add
ljmp
xlat
rcr
lret
mov
add
cmp
xchg
pop
mov
es
ficompl
fnsave
push
imul
in
repz
mov
add
cld
sbb
push
jmp
add
add
int3
popf
push
bswap
cmp
imul
or
mov
imul
lcall
pop
cmc
out
push
pop
repz
and
and
add
add
ss
add
cmp
mov
das
push
inc
lock
nop
push
subl
and
add
add
mov
sbbl
setl
sub
fs
xor
cmpsb
inc
mov
push
sbb
mov
int3
ret
dec
mov
add
add
sbbb
sub
xchg
outsb
mov
sub
add
add
imul
add
rclb
add
add
and
add
add
xor
cld
cld
cmp
cmp
mov
ds
fcomps
bound
fdivrp
jp
loopne
pop
add
mov
popl
mov
scas
push
ret
test
stos
cmp
roll
dec
xchg
jne
push
mov
add
add
mov
es
sub
lret
lahf
leave
sbb
dec
mov
and
add
add
in
aas
mov
xchg
mov
ss
sti
test
xorl
jl
xchg
std
outsl
mov
xchg
mov
mov
add
add
xchg
jg
stc
stos
loope
cmpsb
cwtl
testl
cs
mov
imul
add
ljmp
add
add
add
imul
push
dec
and
xchg
je
ss
adc
add
add
mov
cmp
dec
push
jecxz
clc
xchg
lds
data16
test
add
add
inc
aam
xchg
add
pop
gs
insb
mov
or
sbb
pop
or
push
pop
fadds
ss
mov
xor
xor
out
adc
sahf
mov
std
sarb
fsubrp
push
mov
add
aas
repz
inc
mov
xorl
fs
xor
add
sbb
sar
xor
sbb
add
add
dec
mov
ds
lds
test
in
inc
mov
cmpsb
xchg
mov
outsl
add
push
subl
adc
inc
rcll
loopne
fnstenv
sub
and
mov
lds
ret
add
xor
js
addl
divl
mov
push
inc
arpl
and
mov
enter
xchg
inc
mov
xchg
cmp
sbb
sbb
loope
adc
mov
cmp
sahf
or
add
add
mov
adc
int3
mov
jp
je
aad
xor
cmp
sbb
add
add
and
add
add
push
cmpb
dec
movsb
cld
daa
cmpb
outsb
imul
push
dec
push
repz
shll
sarl
add
pusha
add
add
dec
add
lods
cs
add
adc
xor
add
scas
in
ret
push
inc
lret
mov
insb
add
add
std
std
jo
into
and
jbe
mov
cmp
jmp
jno
dec
mov
sbb
inc
add
add
pop
push
mov
rcrb
pop
stos
mov
jmp
pushf
xlat
leave
imul
shl
lret
mov
push
mov
mov
xchg
jmp
bound
mov
pop
xor
pop
and
add
add
movsl
xchg
movl
pop
cmp
es
stos
lea
add
add
sub
movsb
inc
insb
add
add
inc
test
shr
push
cwtl
pop
lahf
pop
xor
pop
sub
lds
test
jmp
mov
adcl
fldl
add
adc
daa
jge
and
shrb
mov
cmp
rclb
mov
in
insl
jbe
mov
clc
lahf
or
add
add
pop
pop
inc
andb
clc
dec
int
pop
cmp
mov
mov
inc
pop
sbb
jle
rcrb
mov
mov
aad
lock
test
sti
loopne
daa
and
stc
sub
mov
test
fcmovne
in
iret
jl
xchg
gs
rolb
sbb
adcb
sahf
test
add
add
add
nop
xlat
cmp
add
mov
mov
mov
fiadds
jmp
sub
add
add
push
mov
fstl
xchg
pop
enter
inc
mov
call
dec
inc
add
add
push
aas
lahf
in
movsb
adc
push
sarl
add
fsubr
addr16
loope
lods
fisubs
mov
push
mov
adc
out
lds
mov
add
add
outsb
arpl
js
pop
sbb
add
add
mov
ret
mov
add
xchg
xlat
in
test
in
cld
pop
in
arpl
xor
mov
cli
loope
rolb
or
cmp
xchg
sub
sahf
or
cmp
push
mov
dec
add
add
aad
pushf
inc
add
add
mov
dec
mov
nop
mov
add
pop
lahf
dec
popf
sbb
repz
lahf
mov
jg
jmp
int3
rclb
addb
mov
sub
ja
adc
cmpsb
jne
lret
pop
arpl
sbb
les
cmp
cmp
lret
outsl
dec
jne
lret
popa
into
test
cmc
push
xlat
jl
scas
push
sbbb
popf
or
mov
push
add
arpl
mov
add
add
test
sub
add
add
and
lea
jecxz
jne
imul
repz
pop
out
cwtl
adc
sbb
inc
mov
ds
loopne
stos
pop
lock
push
sbb
ror
lret
push
fistpll
mov
out
mov
pop
pop
push
or
dec
and
add
add
add
shll
mov
fimull
mov
nop
icebp
rol
mov
inc
xor
mov
add
add
add
add
mov
pop
add
add
add
inc
sub
dec
mov
push
push
mov
test
jb
loop
int
scas
imul
add
add
inc
sbb
add
addr16
ljmp
sub
ss
xor
lods
lcall
jmp
pusha
add
add
cli
fdivl
jecxz
mov
scas
sub
add
add
faddl
mov
pop
in
adc
add
add
aaa
dec
cmpsl
outsl
movsb
cmp
xchg
movsb
and
add
add
iret
mov
mov
jle
pop
popa
jae
sub
add
add
leave
ja
xchg
icebp
ficompl
sub
add
add
loop
xchg
leave
aas
jg
cmp
add
add
add
leave
clc
aaa
pop
ljmp
mov
sub
add
add
jle
ljmp
popa
pop
in
pop
shrl
add
dec
inc
add
add
push
push
pop
icebp
xchg
cld
push
dec
jle
mov
fsts
mov
roll
out
outsb
fisttps
mov
in
icebp
lret
push
in
jge
jnp
cmp
cmp
push
push
and
add
add
add
mov
movsb
pop
add
add
add
add
jle
loope
xchg
mov
mov
sub
mov
xlat
adc
add
add
add
aaa
stc
idivl
ss
je
push
test
cmpsl
jmp
cmp
inc
mov
sub
or
push
xchg
sti
lahf
js
push
std
sbb
rcrb
les
lahf
sub
dec
mov
aad
das
rol
mov
add
add
dec
xor
shrb
fcmovnu
cli
js
cmp
iret
push
imul
sbb
jno
imul
xchg
xor
xlat
je
ljmp
add
ret
insb
mov
ds
mov
inc
add
add
mov
mov
sahf
enter
add
add
imul
xor
mov
sahf
call
rcrl
sbb
call
jmp
cmp
inc
sub
add
add
mov
inc
push
les
add
test
mov
das
xor
fnstsw
add
add
xchg
or
mov
mov
jns
cs
mov
push
loop
mov
repz
and
pusha
add
add
pop
fwait
insl
test
add
and
add
ret
cmc
popa
mov
clc
test
iret
or
add
add
add
add
add
cli
cmp
add
adc
xchg
scas
cmpsl
xor
loop,pt
inc
ret
xor
pop
push
orb
out
das
les
inc
add
add
pop
xor
adc
mov
add
dec
aad
loop
xor
inc
push
add
lret
lcall
sbb
rcr
and
add
add
mov
mov
pop
add
add
add
jae
ss
mov
add
add
push
xor
in
jg
mov
inc
pop
add
add
add
cwtl
shrb
add
add
and
lret
data16
jmp
sub
out
das
mov
and
add
fsubrl
mov
xor
lea
add
lods
aam
xor
lret
inc
into
test
mov
push
xlat
push
push
repnz
push
adc
test
cltd
xchg
ret
and
mov
add
add
test
adc
ret
add
fildll
mov
mov
pop
clc
sub
add
add
in
test
add
add
mov
add
dec
sub
sti
mov
add
add
sbb
adc
push
cmp
rcrb
rorl
add
add
ret
daa
adc
jns
adcb
lea
adc
add
add
or
add
add
add
test
cmp
sbb
mov
pop
ss
mov
loope
test
add
add
add
adc
push
add
xlat
and
add
add
ret
cmp
mov
push
pop
xchg
inc
mov
jmp
xchg
mul
xchg
and
add
add
lcall
lock
pop
adc
je
or
add
add
mov
fdivrs
or
add
add
lea
jmp
add
add
sbb
or
add
add
pop
je
and
and
fidivrs
testb
nop
inc
xor
xor
jg,pn
cs
mov
mov
test
add
mov
test
xor
add
add
shll
add
add
add
pop
sub
add
add
jo
dec
mov
mov
xchg
xlat
adc
jl
vrsqrtps
xchg
loop
lahf
pop
mov
mov
js
in
addr16
cwtl
sbb
xchg
and
push
sub
add
add
add
push
js
mov
cmp
add
ret
mov
dec
sub
pop
dec
mov
lods
dec
das
mov
push
xchg
lahf
mov
mov
fnstcw
ja
cmpsl
push
xchg
mov
push
xor
push
fdivrl
sarb
jle
or
add
add
xor
addl
out
sbb
enter
sbb
mov
push
outsb
add
xor
add
add
push
aas
xor
std
out
mov
aaa
xor
or
bound
add
add
test
jmp
dec
mov
out
sub
add
add
add
add
arpl
fsubr
fsts
xlat
gs
add
add
and
scas
jbe
jae
aad
loope
leave
add
adc
dec
dec
stos
xchg
add
add
push
out
sub
add
hlt
xchg
andb
add
add
add
decb
aaa
fs
daa
add
xchg
add
add
cmp
pop
cs
jne
adc
loope
sahf
dec
dec
pop
rorb
fldcw
add
inc
or
add
add
jnp
add
scas
in
jbe
jmp
dec
mov
jo
pop
scas
mov
test
sbb
add
add
adc
mov
ret
es
add
add
add
sbb
aas
or
add
add
pop
sbb
add
add
aad
mov
pop
or
in
fsubrs
xor
dec
out
mov
adc
mov
add
jno
sbb
and
ljmp
mov
dec
movsb
loope
cmp
dec
mov
cmp
add
insb
mov
jns
push
ret
movsl
sbb
add
add
sti
fisubrs
add
inc
mov
mov
mov
add
add
adcb
push
or
add
add
add
add
scas
es
notb
sbb
jne
adc
cmp
fmulp
imul
loopne
xchg
insl
push
jno
fs
outsb
xchg
dec
pop
push
es
imul
or
ljmp
icebp
lods
popa
int3
stc
cmp
clc
pop
push
fildl
ljmp
add
pop
sub
jbe
cmc
mov
xchg
xlat
and
mov
fwait
es
mov
add
add
lcall
adc
ss
subl
inc
add
add
add
mov
loope
push
jl
xchg
sub
add
add
sub
add
add
jnp
cmpsl
cld
pop
movsl
repz
add
add
add
add
nop
shll
mov
sub
es
jge
in
shrb
add
add
lock
mov
add
sarb
aam
lret
add
add
add
or
sbb
adc
out
dec
sarl
popf
sbb
mov
cs
inc
add
mov
test
lods
ja
iret
xor
jg
aaa
repz
pop
sbbb
loop
fcmovnu
sub
aam
pop
pushf
fiaddl
mov
push
or
add
add
add
js
cltd
mov
push
enter
xchg
or
add
add
sbb
push
inc
push
push
inc
cs
add
mov
aaa
dec
pop
aad
mov
dec
push
jmp
fs
insl
dec
sub
add
add
push
es
popa
xchg
mov
movsb
hlt
arpl
pop
xchg
cmp
xchg
in
jp
sbb
aam
adc
sub
add
add
cmp
dec
rorl
mov
scas
jecxz
mov
das
mov
add
ficoml
add
add
jb
dec
add
add
mov
inc
cmp
adc
mov
sub
outsb
popa
aam
repz
push
pop
out
lcall
add
push
xchg
mov
addr16
dec
mov
divl
xchg
loope,pt
lcall
pusha
add
add
inc
add
add
jne
loope
add
add
imul
add
add
mov
popf
es
add
add
add
mov
add
add
cmp
cld
pop
test
dec
sub
add
add
das
mov
pop
mov
adc
jl
inc
add
add
fldenv
mov
mov
icebp
mov
jne
arpl
adc
rclb
jle
ffree
mov
int
idivb
push
dec
add
add
jmp
jp
mov
cmp
add
add
xor
mov
repz
fldt
jnp
and
out
push
into
mov
sbb
cmp
cld
stos
push
nop
jle
rorl
push
aam
in
mov
mov
data16
mov
fucomi
fnstcw
cltd
mov
daa
ret
aaa
add
cwtl
ret
insb
add
add
daa
mov
movsl
inc
mov
or
add
add
out
sub
add
add
jo
or
mov
jmp
and
mov
jbe
push
push
add
add
add
add
add
xchg
mov
or
and
or
add
add
jl
push
jne
pop
aad
loop
jle
adcb
add
add
adc
cltd
cmp
cld
fbld
add
mov
sub
add
add
cltd
mov
ss
push
loop
cmp
pop
pop
movsb
inc
cmpsb
mov
loope
in
pop
cmc
cld
cmpsb
fsubl
cmp
cmpsl
push
add
popa
add
mov
xor
mov
sub
mov
sub
add
add
outsb
rcl
gs
jecxz
mov
cmp
jno
xchg
jb
push
or
xchg
dec
iret
mov
push
inc
mov
sub
inc
push
sahf
pop
fs
jge
sbb
nop
jns
push
xchg
in
pop
stos
test
mov
xlat
ja
imul
add
add
sbb
int
aam
pop
movsl
cwtl
leave
mov
xchg
mov
jge
adc
fstpt
repnz
xchg
pop
pop
inc
bound
pop
mov
add
dec
xor
repz
add
add
mov
add
jmp
loopne
ror
add
add
and
add
add
add
add
push
xchg
call
and
out
cmp
sub
lret
mov
xor
mov
fs
repnz
add
ficoml
bound
sbb
lock
call
out
mov
fsubr
mov
mov
test
shrb
adc
test
in
inc
les
stos
sbb
mov
hlt
pushf
or
cmp
jno
mov
out
lods
lods
cmp
out
fwait
aaa
les
aaa
popf
mov
jo
dec
pop
xor
and
dec
add
add
addl
ljmp
scas
push
fdivrl
repz
js
and
add
add
daa
outsb
xchg
leave
sub
add
inc
add
add
test
xor
outsb
or
add
add
cmpsl
loop
sub
jae
mov
fstpl
adc
mov
add
add
test
xchg
fcompp
arpl
in
rcl
mov
aaa
push
mov
mov
testl
add
xchg
add
addl
and
add
add
ret
add
add
add
jle
int
fcomps
mov
ret
mov
add
add
cmp
in
xchg
cmpsb
dec
das
xor
roll
cwtl
daa
call
lds
cmp
mov
pop
fisubs
jg
or
int3
fisubrs
stos
mov
xchg
je
sbb
add
sub
inc
test
add
cmpsl
cld
jae
aas
sti
jno
add
add
add
push
inc
test
add
add
jp
jbe
cmovae
xchg
sbb
push
dec
mov
ds
mov
arpl
add
iret
mov
mov
push
push
push
ficoms
dec
cs
sub
xchg
clc
lds
das
sbb
ret
or
xor
hlt
add
add
xchg
scas
das
inc
mov
push
xchg
add
push
inc
xlat
push
pop
xchg
jg
ss
leave
mov
clc
or
cmp
subl
mov
xchg
jmp
adc
inc
inc
pusha
add
add
inc
xor
add
dec
mov
jl
dec
add
add
push
jno
and
loop
scas
das
aad
cmp
add
add
add
lock
repz
xchg
sbb
push
int3
add
mov
add
add
push
dec
leave
movsl
cs
pop
in
mov
test
add
add
add
jae
mov
pop
jbe
inc
dec
inc
add
add
inc
mov
mulb
int3
mov
popa
jecxz
jnp
xor
sbb
mov
pop
rcrb
insb
mov
stc
stc
js
pop
out
enter
add
add
int
pop
xor
add
mov
imul
std
ret
mov
les
cmp
js
imull
mov
lea
dec
xchg
mov
inc
mov
mov
mov
xorl
or
jg
mov
mov
mov
jecxz
xor
mov
imul
dec
lock
add
and
sbb
imul
xor
out
lods
scas
decb
dec
xchg
mov
movsb
fbld
sub
add
add
addr16
sbb
leave
loope
mov
xor
popf
push
jmp
jg
in
fldt
jb
xor
in
fildl
fbld
popa
adc
add
mov
cmp
out
fildl
fidivs
sahf
adc
dec
rep
pop
test
jge
clc
fistpll
xchg
sbb
repz
adc
mov
mov
xor
into
and
add
add
in
mov
aas
lahf
xlat
sbb
jne
aas
in
mov
add
arpl
pop
lods
pop
cmp
sbb
add
std
stos
outsl
insb
mov
test
sub
mov
lcall
cmp
dec
lock
insb
add
add
jb
pusha
add
add
loop
pop
mov
push
aam
sahf
dec
add
add
dec
in
jnp
arpl
dec
and
jae
cmp
add
rolb
and
add
jns
sub
sbb
mov
sbb
mov
in
lret
mov
sub
add
add
add
in
pop
sub
and
push
and
lret
outsb
push
inc
adc
rep
pop
pop
fs
push
or
jmp
and
add
add
icebp
loope
stc
sub
je
test
mov
add
add
cltd
fisubs
std
xor
fcomi
ret
movsl
add
cli
fld1
and
add
add
out
inc
jg
dec
es
daa
xchg
lods
push
mov
dec
hlt
sbb
dec
or
pushf
cmpsl
jg
imul
xor
pop
pushf
or
je,pn
pop
add
add
push
xor
sti
mov
lahf
mov
add
pop
and
pop
or
mov
push
hlt
je
inc
test
movsb
cmp
shll
ja
inc
dec
add
add
push
enter
mov
xchg
fwait
jecxz
addr16
lret
mov
add
jg
push
sub
es
xchg
mov
nop
shrl
leave
inc
push
xchg
xchg
mov
mov
jle
fsub
mov
in
inc
add
cltd
add
lret
inc
jp
mov
mov
data16
add
lds
cs
pop
adc
sarb
jns
push
movzbl
xor
fucomip
test
add
add
inc
add
add
mov
push
xchg
in
push
xchg
mov
frstor
popf
or
add
add
add
pop
pop
bound
push
lods
int3
imul
cwtl
cmp
ljmp
push
es
mov
mov
push
inc
cmp
fists
fucomp
hlt
in
push
hlt
push
sti
mov
add
add
int3
add
popf
add
add
mov
bound
xchg
pop
movsl
jg
and
add
add
sub
lods
popf
and
pop
cmp
mov
pop
out
ret
test
add
adc
push
mov
inc
sbb
out
bound
std
rcr
cmc
mov
aas
mov
int
jae
inc
add
add
xor
mov
add
add
add
add
add
add
add
add
loope
pop
outsb
ds
xchg
add
mov
aad
sub
scas
mov
pushf
mov
sahf
subl
sub
and
mov
sbb
xor
movsl
leave
movb
sub
add
add
jo
cs
jle
orb
add
mov
rcl
pop
push
cmp
sub
pop
add
add
add
fwait
sti
cwtl
in
push
xor
daa
loopne
inc
mov
imul
add
add
push
lock
add
add
lret
int3
scas
fists
xor
add
xchg
or
pop
stos
pushf
jns
cmp
nop
sub
add
add
cmp
push
mov
pop
xlat
cmovns
cltd
inc
and
xlat
and
movsl
lret
lock
xlat
and
inc
test
push
enter
add
add
fisttpl
xor
dec
mov
loop
leave
xor
cmp
push
mov
xchg
les
add
add
add
add
add
add
daa
xchg
je
icebp
xchg
add
adc
and
add
add
sbb
xor
add
mov
and
add
add
js
je
push
aas
aas
das
loope
out
add
xchg
add
inc
movsb
add
inc
jnp
mov
cmp
jb
stos
dec
fstps
bsf
daa
jne
jnp
icebp
pop
pop
sbb
insb
mov
add
jecxz
cli
mov
xchg
and
imul
and
insl
rcrb
fwait
push
int3
mov
mov
sbb
cmpsb
ds
add
add
mov
in
inc
cmp
add
add
sub
fsubrs
add
add
jmp
sbb
dec
jae
pop
mov
mov
add
shl
sub
add
add
push
fs
adc
add
add
add
ja
mov
mov
test
push
inc
gs
jecxz
cltd
xchg
add
add
ljmp
add
ret
mov
cmc
xor
ljmp
inc
or
sbb
add
add
pop
mov
jns
sahf
fucomi
seto
push
int3
add
add
lock
lods
nop
cmp
add
add
mov
lods
cmc
ds
cli
js
fwait
ds
in
imul
add
jg
loope
aam
mov
cmpb
cmp
add
add
pop
push
xchg
cltd
call
xchg
daa
clc
insl
or
and
add
and
sub
testb
add
push
test
push
inc
ds
test
clc
cmp
jno
add
add
sbb
aam
dec
jp
std
lods
movsl
mov
loop
pop
adc
xchg
add
orb
mov
cmp
inc
mov
push
jmp
mov
dec
jb
and
add
add
inc
add
add
sub
jmp
pop
dec
enter
cltd
push
pop
mov
mov
add
add
in
cmp
add
fmuls
mov
js
dec
mov
push
dec
mov
or
add
add
xchg
push
hlt
cld
cwtl
in
pop
insl
cmpsb
rol
lcall
xchg
sbb
test
or
arpl
or
in
push
adc
dec
es
add
mov
pop
jne
sub
add
add
mov
and
inc
push
orb
push
std
xlat
mov
fdivp
pop
dec
lds
add
add
inc
lods
test
leave
mov
mov
cmp
mov
js
fdivs
iret
mov
push
inc
mov
or
add
add
xchg
fidivrs
add
pop
cmp
pop
push
cmc
add
mov
mov
push
xor
add
add
adc
pop
ja
mov
push
cmp
dec
push
imul
sbb
shll
std
dec
mov
hlt
jbe
sub
add
add
adc
add
add
add
add
rclb
mov
loop
out
stos
pop
sub
add
add
insb
mov
cmp
cmpsl
add
jno
jae
jecxz
mov
cli
fisubl
in
int
push
xchg
inc
push
sbb
jmp
mov
push
sub
cli
xorb
cmp
add
add
cmp
stc
mov
arpl
mov
outsb
mov
aaa
or
pop
pop
outsl
cli
gs
xchg
stos
mov
movsb
shll
inc
mov
cld
pusha
add
add
mov
xor
adc
lods
scas
lods
mov
mov
pushf
js
jp
and
jecxz
das
cmp
cmp
dec
aad
pop
ret
or
pop
adcl
sub
add
add
stos
icebp
push
pusha
mov
mov
xor
mov
sub
imul
dec
mov
int3
adc
sbb
mov
outsb
inc
ds
andl
imul
fisubs
fiaddl
add
add
js
add
add
add
and
mov
iret
and
into
and
stc
sahf
out
mov
add
adc
loope
insl
adc
callw
add
add
add
add
add
push
adc
mov
sbb
jne
xchg
aad
cwtl
xlat
adc
mov
clc
outsl
adc
in
in
mov
xor
add
add
insl
push
jnp
ljmp
cltd
loope
cmp
lahf
movsl
subb
lahf
imul
mov
cltd
dec
insb
mov
push
push
push
xor
hlt
ljmp
sbb
add
add
scas
fsubs
add
add
mov
cld
jne
cwtl
lock
adc
xchg
and
lea
adc
cs
ja
fldcw
mov
outsl
cmp
shrb
jge
hlt
mov
jnp
testl
add
mov
out
fs
add
add
cli
in
and
add
add
jnp
mov
lcall
clc
xchg
pop
inc
inc
mov
mov
mov
icebp
es
jbe
sbb
dec
lret
cmp
outsl
or
loopne
or
jo
stc
leave
push
dec
add
add
jg
rorb
add
add
cli
in
or
dec
mov
neg
mov
push
arpl
lcall
jge
mov
stos
push
jns
push
stos
loopne
je
je
mov
add
add
xchg
mov
psubw
les
xchg
cmp
or
test
add
add
push
ret
mov
loopne
lret
add
add
enter
add
add
push
mov
arpl
cmc
and
push
outsl
cmp
cs
mov
add
add
bound
xchg
pop
sub
cmp
mov
jge
test
mov
mov
mov
add
out
hlt
xlat
lods
xor
clc
jo
test
add
add
add
cmp
out
pop
mov
push
inc
hlt
pop
loop
clc
aaa
jb
lds
xor
add
mov
add
dec
xchg
adc
testb
add
add
mov
shll
mov
fbstp
mov
std
stc
pop
dec
mov
push
push
icebp
or
inc
shrl
add
add
dec
inc
mov
jg
cmc
mov
sahf
filds
add
add
lahf
pop
cmp
mov
inc
xor
test
add
cmpsl
xor
dec
add
xchg
add
add
add
jg
add
mov
add
add
loop
mov
xchg
add
in
jmp
test
jnp
jo
mov
in
push
jbe,pn
adc
adc
add
add
stc
jnp
lret
adc
sub
add
cmpsb
clc
sub
add
add
test
repz
add
add
add
in
sub
addr16
mov
jl
nop
sbb
lods
xchg
adc
pop
popf
jbe
adc
fcoms
fsubrl
add
mov
in
clts
sub
add
add
gs
add
add
add
aas
stc
add
add
add
sbb
mov
mov
or
fadd
pop
push
pop
das
dec
jl
mov
iret
imul
add
add
add
add
nop
fs
imul
mov
cwtl
adc
add
daa
imul
push
les
mov
cltd
cli
rol
notl
mov
idivl
jecxz
sbb
add
mov
gs
xor
je
add
into
sub
add
add
mov
mov
pop
or
add
add
jecxz
lcall
mov
jmp
test
into
dec
cltd
shl
jmp
js,pt
stc
aaa
and
stos
fimull
push
test
adc
sbb
adc
jbe
mov
pop
test
mov
and
sub
cmp
pop
movsb
push
stc
push
mov
push
xchg
push
cmpsb
mov
mov
add
add
shrl
mov
mov
add
mov
adc
movsb
int3
scas
lea
pop
stc
pop
push
mov
add
push
rorb
imul
mov
mov
aad
mov
icebp
adc
mov
cmpsb
imul
and
dec
add
add
sbb
cmp
push
mov
mov
add
add
add
mov
xor
push
mov
sub
add
cmp
mov
inc
add
add
mov
ljmp
xchg
aaa
and
mov
mov
int
xchg
add
add
push
cmp
pop
xor
xor
push
xchg
andl
xchg
adc
fistpl
add
add
or
xor
mov
push
dec
add
add
push
fwait
or
iret
xchg
loopne
jbe
push
sbb
test
mov
add
add
pop
or
inc
jl
cmpsb
pushf
sbb
hlt
loop
shrl
int3
lods
iret
mov
aam
sbb
mov
add
add
xor
cmp
je
mov
add
add
inc
add
add
add
and
andl
js
into
lods
dec
xor
es
mov
cmp
cmpsl
scas
bound
mov
add
add
js
push
in
test
xchg
adc
ds
das
or
add
sub
add
pop
cmp
add
add
push
pop
lods
jnp
lcall
pop
scas
shlb
dec
adc
jmp
test
fucom
or
mov
add
mov
add
popf
xchg
xchg
mov
add
add
mov
add
fidivl
push
xor
mov
lods
dec
mov
add
add
add
sbb
loop
mov
data16
jp
xchg
pusha
mov
cmp
fstp
adcb
loope
mov
add
add
adc
mov
add
fldcw
cld
sbb
add
add
add
add
add
add
mov
add
add
in
jmp
add
fnstenv
mov
sahf
rol
fidivs
mov
add
sbb
hlt
inc
xchg
xor
out
push
sarl
sub
add
add
sahf
sbb
jmp
pop
test
add
push
into
xor
loopne
xchg
int3
cltd
fisubrl
add
add
sub
add
add
aad
cmp
mov
sbb
jns
mov
mov
stos
xor
lret
sbb
into
cli
addl
mov
or
iret
loop
sbbb
inc
dec
jge
lcall
adc
cmpsb
rol
mov
add
mov
ret
xchg
fs
inc
bound
mov
ds
adc
mov
ret
fildll
add
add
add
mov
xor
push
xchg
jl
cmp
subb
nop
dec
dec
mov
sar
mov
dec
jge
int
mov
cs
jge
mov
lods
out
into
inc
out
lods
aam
dec
jne
stos
push
loopne
cmp
cmp
add
add
add
mov
add
add
or
add
add
pop
fs
cli
jae
test
add
insb
add
add
xor
mov
lods
stos
ret
jo
mov
push
push
jb
add
mov
ja
sub
mov
out
out
scas
sbb
pop
nop
mov
add
fidivl
xchg
inc
jp
out
mov
stc
dec
pusha
add
add
out
scas
mov
cmp
sub
sbb
rorb
jne
pop
data16
jns
xor
mov
lahf
shrl
or
xchg
mov
mov
jno
mov
add
cmpl
sarl
in
push
adc
pop
aad
or
and
add
add
xor
pop
pop
jecxz
sti
into
adc
mov
loope
lret
fidivrs
pop
aaa
mov
lahf
je
push
and
nop
stos
dec
mov
mov
inc
add
add
out
fwait
sarl
mov
inc
add
add
mov
sub
cmp
push
dec
mov
or
retw
sub
add
adc
add
add
adc
xchg
push
jne
cld
dec
gs
cli
clc
in
mov
ljmp
stc
stos
push
and
add
add
push
dec
pop
push
popl
add
add
add
mov
jp
pop
aam
add
add
fsubrs
dec
sub
mov
or
movsb
dec
add
add
cmp
add
dec
adc
push
sahf
lcall
loop,pn
inc
and
cmpsl
jb
jo
add
add
inc
pop
ret
daa
in
in
mov
addr16
call
add
or
add
xor
int
decb
rcrb
aam
fistpl
movsl
ret
aam
cmp
lcall
add
pop
je
pop
inc
fcoms
cmp
xlat
dec
aaa
sbb
dec
mov
out
leave
nop
and
add
add
xor
test
push
pop
into
push
push
mov
add
add
and
add
add
and
add
add
repnz
cltd
or
push
jae
call
add
add
add
or
test
pusha
mov
add
add
push
push
push
fisttpl
adc
jle
xchg
lahf
lahf
rorl
mov
adc
add
add
xchg
jmp
sbb
add
add
inc
or
add
add
insl
cwtl
push
in
repz
add
jle
movsb
ds
scas
js
xchg
sub
mov
add
jo
add
add
jnp
mov
push
fucomp
insb
add
add
clc
cli
mov
add
pusha
add
add
insl
std
fcompl
pop
imul
jp
mov
in
add
pop
xchg
xchg
lods
pop
imul
jl
xor
sub
push
dec
les
movsb
stos
lret
out
ret
mov
ds
jmp
mov
std
in
call
xorb
inc
in
jl
mov
pop
js
lret
repnz
push
cmp
mov
add
add
into
cmc
mov
lret
add
call
add
dec
add
add
xchg
mov
mov
xchg
mov
add
add
add
add
add
scas
mov
xor
inc
sbbl
pop
jmp
inc
inc
inc
dec
adc
add
in
mov
sub
js
mov
mov
out
mov
fisubl
lock
adc
out
mov
sub
lret
push
sub
in
shrl
int3
cmp
insl
sbb
dec
sub
lahf
fs
inc
push
cmpsl
adc
mov
jecxz
fimull
push
scas
sarl
add
add
loope
stc
push
xor
ljmp
jb
ss
cli
or
or
mov
inc
mov
mov
push
mov
test
int
pop
sahf
stos
push
shl
xor
enter
rcll
jl
cmovno
mov
insl
fst
in
cltd
sub
add
add
inc
mov
mov
jae
aam
incl
mov
xchg
add
xchg
add
add
add
arpl
into
pop
mov
mov
mov
sar
mov
in
leave
fmull
xchg
jp
jo
push
sub
js
notl
cld
mov
xor
movsl
mov
xor
mov
mov
mov
add
repnz
jge
lcall
mov
addl
push
push
bnd
mov
dec
add
add
sarl
jns
cmp
es
push
cmp
push
sarl
mov
add
mov
ss
or
add
add
in
jne
cmp
cwtl
mov
leave
int
dec
sub
jg
lret
push
xor
ficompl
add
add
mov
dec
ja
idivl
das
xchg
push
sub
cmpsl
stc
pop
lds
xor
pushf
in
and
add
add
add
add
add
lds
insb
add
add
cld
dec
sbb
addl
mov
mov
fstps
inc
fwait
lods
das
arpl
jbe
jle
test
pop
mov
jmp
icebp
fwait
hlt
icebp
add
add
add
repz
add
add
add
jmp
fadds
movsb
lcall
pop
fnsave
fwait
jns
sbb
shr
xor
jns
mov
add
add
jge
repz
sub
inc
mov
mov
test
ljmp
and
add
add
xor
pushf
inc
cmp
add
or
add
add
add
add
jmp
in
adc
mov
sub
add
add
cld
push
cs
jo
and
aad
add
adc
pop
xchg
clc
xor
mov
add
add
mov
xchg
or
push
add
pusha
mov
lahf
ss
cmp
mov
add
add
jb
mov
xchg
bnd
sub
add
add
xchg
rcl
jle
fildll
faddp
cmp
cmp
lock
ja
mov
stos
inc
mov
mov
fcomps
jg
and
stos
sbb
out
je
and
add
mov
ja
repz
add
mov
test
add
mov
aaa
sti
in
jp
mov
mov
lods
test
pusha
add
add
sti
pop
cmpsb
add
mov
rorl
mov
jle
ja
add
add
add
std
shrl
std
fldl
scas
push
cmp
pop
out
dec
xor
push
js
mov
movsl
ss
sbb
inc
add
add
push
pop
outsb
das
sub
test
push
sbb
and
fs
sbb
rolb
push
lock
mov
adc
add
add
dec
jg
inc
xchg
cs
stos
mov
inc
sbb
push
jne
push
sub
add
add
lahf
pop
divb
mov
xlat
ja
cmp
add
add
sbb
stc
out
jbe
adc
daa
and
daa
cs
xor
insl
add
aad
adc
mov
out
lock
ds
mov
add
xchg
insl
sub
repz
int
lahf
jg
lock
mov
mov
jecxz
enter
xchg
mov
pop
xchg
adc
add
xchg
test
xor
loopne
les
mov
mov
fidivrs
cld
mov
add
add
insb
mov
shll
sub
add
add
mov
enter
clc
mov
aam
pushf
xchg
xchg
sub
es
jb
jg
add
add
jns
loopne
js
xchg
adcb
sti
in
add
add
inc
call
lret
cwtl
dec
scas
xchg
shrb
stos
test
test
pop
movsl
ds
sbb
fsubl
pushf
dec
pop
les
popf
ret
mov
jbe
sub
dec
lcall
add
add
push
mov
in
add
add
add
jl
mov
aam
inc
sbb
mov
sub
jb
mov
add
iret
mov
sub
jg
pop
ficoml
mov
jo
push
pop
pop
enter
jns
jae
sbb
lds
test
adc
cltd
clc
out
lock
lret
stos
xchg
sti
es
popf
lods
mov
mov
push
test
dec
add
add
nop
jge
imul
xor
lahf
pop
bound
adc
outsb
sub
inc
mov
and
add
add
add
add
cmp
mov
inc
bound
add
jg
inc
mov
fistpl
aaa
pop
xchg
cld
push
pop
data16
add
add
inc
mov
test
lock
mov
mov
add
add
inc
or
add
add
mov
adc
add
add
add
push
icebp
cmc
cwtl
loop
and
jp
push
hlt
out
and
scas
pop
imul
cld
mov
inc
mov
aas
push
inc
jl
lret
ffreep
push
mov
clc
jns
push
sub
jb
sbb
mov
out
dec
push
xlat
fadds
mov
cmpsb
sbb
fwait
stos
lahf
sti
xchg
les
enter
push
std
mov
ret
adc
xchg
dec
mov
rcrl
adc
add
add
mov
add
add
push
pop
push
pop
insb
add
add
push
rcrb
cmp
das
insl
clc
push
fsubl
add
add
add
add
lods
clc
xor
inc
out
push
mov
mov
mov
adcl
adc
xchg
outsb
out
mov
mov
movsl
lcall
jmp
xchg
fs
ds
ljmp
pop
xor
xor
mov
xchg
jmp
std
ljmp
mov
sbb
jae
inc
loopne
mov
push
pop
cmp
sbb
scas
js
jg
fisubrl
pop
inc
add
add
push
out
cwtl
mov
mul
sub
fcoml
mov
lcall
popa
adc
shl
filds
rolb
pop
push
and
cmp
mov
cwtl
xchg
int3
xchg
nop
adc
add
jnp
add
inc
jbe
add
das
jns
mov
ljmp
xchg
adc
and
imul
fdivrl
bound
add
add
iret
enter
add
or
add
add
xor
or
sahf
iret
gs
sub
arpl
mov
loopnew
add
leave
imul
inc
es
xor
add
dec
push
je
aad
jo
push
test
jl
mov
ret
loopne
pop
add
lea
add
add
mov
rcrl
xchg
lahf
mov
or
cmp
les
dec
cmp
dec
dec
mov
or
jecxz
xor
sbb
rorl
fwait
in
mov
faddp
adc
add
adc
enter
das
cmp
rcl
pop
jle
dec
sub
add
add
and
add
add
mov
xchg
je
or
sbb
add
add
das
xchg
in
cmp
nop
ret
sub
mov
bound
lods
sti
lahf
ficoml
mov
add
add
in
cli
xchg
dec
jmp
pop
xor
add
fidivrs
and
cmpsb
aaa
mov
mov
mov
dec
out
incl
add
add
add
leave
mov
sub
mov
add
add
jbe
jl
iret
jnp
cmpsl
xor
gs
jne
shll
aad
ljmp
push
jbe
mov
push
rcll
mov
out
and
add
add
cmp
jae
cmp
jge
les
insb
mov
and
add
add
and
ret
outsl
push
xorl
or
fbld
jle
push
cmpsl
sub
add
add
call
add
inc
mov
loope
pushf
insl
push
fnsave
add
add
daa
fsubp
lret
jo
and
add
add
add
add
out
hlt
mov
leave
mov
cs
push
loop
icebp
jae
insl
push
cs
sub
add
add
pusha
add
add
dec
loope
aam
xchg
cmp
int
cmc
rep
xor
mov
mov
sub
mov
popa
mov
xchg
add
xchg
cltd
mov
and
call
add
imul
mov
movups
push
jg
int3
inc
mov
push
insb
mov
test
pop
icebp
lea
sub
pop
xchg
or
add
add
jb
dec
in
scas
dec
outsb
shrb
mov
mov
mov
cs
js
pop
test
ds
out
add
mov
cmp
mov
jecxz
mov
cmpb
test
pop
push
mov
add
add
or
add
add
add
or
hlt
out
mov
pop
inc
in
nop
enter
imul
cmc
bound
add
add
add
xor
xchg
push
fistl
dec
mov
mov
out
iret
xchg
andnps
push
cmpsl
sub
add
add
in
je
lods
in
test
jge
push
mov
sub
mov
int
ljmp
add
mov
add
pusha
mov
out
scas
std
ret
shrl
xor
sbb
add
add
xchg
lret
pop
inc
push
sub
and
add
shlb
mov
aad
mov
sbb
in
jl
mov
or
test
or
leave
dec
into
sub
push
push
jbe
dec
mov
lods
std
inc
mov
outsb
add
test
movsl
arpl
enter
xor
add
add
or
add
add
cmp
add
popf
movsb
jge
push
cld
sub
dec
jg
fwait
add
add
add
rcrl
cmpsl
insb
mov
into
hlt
xor
int3
movsb
xchg
xchg
sti
jle
fcmovnb
jmp
cmp
insb
add
add
fimull
xchg
add
add
cs
ljmp
adc
sarl
pop
lret
js
leave
sub
add
add
and
out
mov
dec
aad
dec
mov
test
imul
add
push
movsb
jmp
lahf
mov
add
add
mov
xchg
lret
xchg
and
add
add
icebp
inc
test
or
loop
lea
xlat
fnsave
ret
sarl
mov
mov
outsb
jmp
jmp
lcall
jmp
in
mov
push
jmp
jb
hlt
icebp
lret
pushl
adc
add
add
repnz
add
add
add
add
xchg
das
int
clc
or
jno
rolb
push
fistpl
dec
jg
mov
fbstp
push
pop
or
add
add
add
stos
mov
add
fistl
lea
sub
push
xchg
push
jno
adc
push
xchg
lret
mov
adc
call
add
imull
test
dec
mov
add
js
ss
xchg
ret
imul
insl
and
add
add
sbb
add
shrb
loopne
arpl
add
add
sbb
sti
pop
iret
jnp
out
and
add
add
xlat
test
ss
add
add
cmc
bound
aas
lea
sbb
add
add
popa
xor
dec
mov
xchg
test
pop
loope,pn
push
jecxz
add
add
in
aaa
pop
ficompl
add
add
adc
push
mov
add
add
mov
or
add
add
xor
cmc
sbb
lods
add
jge
dec
jge
ljmp
push
int3
lret
stos
test
imul
and
xor
pop
bound
mov
punpckldq
add
mov
out
fcomip
add
add
ret
loopne
lea
lret
mov
push
mov
add
add
cmp
add
mov
xchg
or
add
add
jno
sbb
int
and
rorb
mov
fwait
push
pop
pop
loopne
pop
xor
ret
mov
push
xor
and
adc
xor
aaa
shlb
dec
push
sahf
sti
rcl
inc
dec
iret
loope
xor
popa
js
pop
scas
or
add
add
or
add
add
mov
pop
add
add
ja
inc
mov
jne
jo
lods
fcomip
or
xchg
inc
sub
mov
lods
sbb
sub
scas
stos
out
jecxz
movsb
jne
and
out
xchg
jo
sub
sub
or
add
add
es
lds
cmp
in
or
outsb
hlt
jg
ja
insl
lret
mov
or
in
jne
sbb
popf
das
testl
mov
dec
pop
dec
hlt
sbb
subb
stos
push
pop
loop
stos
daa
loopne
lcall
or
xchg
cmp
dec
in
bound
loop
adc
fld
pushf
lods
mov
cmc
mov
mov
ljmp
jb
test
lcall
xlat
cmp
ja
xchg
cmovnp
js
xchg
mov
xchg
cmp
or
add
add
mov
je
and
push
loop
cmp
and
jecxz
aam
add
add
int
sbb
int3
dec
push
call
jl
mov
add
add
enter
adc
lahf
inc
xor
mov
hlt
sbb
add
add
mov
jne
sarb
and
loope
movsb
into
std
sti
add
push
add
mov
add
add
std
leave
adc
scas
dec
add
add
sub
sub
add
add
mov
shrl
cmpb
nop
pop
orb
into
adc
xchg
pop
push
ljmp
and
add
add
xchg
fidivs
in
xor
push
mov
jae
mov
mov
imul
mov
adc
in
jge
add
add
fisubl
iret
or
add
add
push
push
push
dec
mov
adc
add
add
sbbb
aad
jl
add
add
pop
data16
inc
add
add
adcb
ja
push
jne
push
sbb
in
mov
pop
jns
mov
mov
add
mov
mov
adc
xor
inc
shll
lret
repz
js
gs
imul
push
shlb
add
fstps
sbb
jle
add
cmp
add
add
adc
jno
es
cli
enter
out
add
lahf
insl
push
or
dec
ret
sub
in
aaa
roll
add
xchg
daa
insl
int3
mov
xchg
mov
mov
adc
push
aam
sti
pusha
add
add
or
popf
enter
jbe
lea
add
add
aas
and
scas
and
add
add
xchg
xor
cli
push
mov
iret
mov
push
xor
xchg
adc
aam
sbb
mov
mov
sarl
add
add
hlt
jmp
dec
dec
xor
adc
shrl
adc
jle
pop
out
je
cwtl
scas
aam
xorb
fidivs
pop
jb
loop
aaa
mov
add
add
out
adc
inc
mov
xor
add
add
add
addb
ss
and
add
add
and
add
add
aaa
cmp
jae
cmpsb
enter
sbb
mov
add
add
hlt
sub
add
add
jae
iret
push
fstps
push
and
fbstp
push
int3
xor
mov
or
jb
out
mov
test
aam
sub
add
insb
mov
push
stos
mov
cli
subb
xor
dec
jp
push
loop
in
xchg
cmp
inc
mov
pshufw
xchg
bound
std
sub
dec
test
sub
pop
push
adc
ss
jle
pop
aaa
bound
cli
lock
add
lods
dec
divb
dec
insl
sub
push
popf
cmp
leave
mov
aas
mov
add
in
lret
outsl
xor
add
push
push
mov
outsl
adc
jle
xchg
adc
inc
add
add
imul
add
pop
ljmp
jno,pt
pushf
pushf
aas
stc
je
xchg
pop
fiaddl
add
add
mov
sub
sbb
add
add
imulb
jg
or
add
add
xor
stos
movsb
dec
xor
or
in
mov
mov
je
dec
mov
push
int3
data16
cmp
add
add
in
mov
jb
imul
lret
add
add
and
add
add
mov
idivl
pushf
fnstsw
add
jbe
sbb
add
add
add
add
add
add
cwtl
fimull
dec
pop
jno
addr16
xor
mov
out
mov
ret
jae
sbb
hlt
inc
add
add
jle
xor
and
add
add
add
add
js
rcrl
rorb
sti
test
adc
repz
add
add
call
pop
pushf
aaa
jl
mov
hlt
dec
inc
sub
roll
cmp
dec
mov
mov
add
cmp
jle
iret
lock
mov
stc
dec
xchg
repnz
repz
jg
movsb
arpl
fsubl
add
add
cmp
dec
xlat
int3
push
adc
add
mov
sbb
repz
loopne
cmpsb
insl
jnp
daa
loope
pop
cmc
movsb
test
cs
sub
shll
mov
push
and
dec
and
add
add
cmp
inc
scas
in
fdivl
rcll
mov
stos
out
lret
mov
mov
je
xchg
xchg
lahf
ss
add
add
jo
enter
add
leave
mov
add
add
xchg
pushf
in
mov
jno
jno
in
mov
lret
pop
dec
mov
xchg
sbbl
loopne
clc
pop
xor
fiadds
add
add
pop
lock
ds
pop
inc
jns
mov
shrd
add
add
xchg
mov
dec
and
insl
rorb
call
cmp
mov
leave
inc
or
add
add
fwait
shll
add
fs
cld
movsl
rolb
add
add
mov
jo
scas
jmp
mov
std
and
add
add
add
add
push
cmpps
mov
ret
arpl
push
lods
push
or
add
add
test
add
pop
push
adc
pop
push
lea
repz
jae
jo
jmp
popf
jne
js
mov
add
mov
inc
lock
ficompl
cmpsl
push
add
xchg
ret
shll
fmull
cmp
push
fwait
mov
push
push
inc
xchg
xchg
jl
mov
add
add
lock
pop
cmc
das
cli
out
or
xchg
dec
push
and
add
add
inc
jns
jp
in
or
push
adc
arpl
inc
pop
xor
add
add
sub
xchg
movsl
sbb
sti
adc
sub
add
add
lcall
add
add
ffreep
adcl
in
lods
test
outsb
jecxz
xor
jbe
mov
sub
in
outsl
repnz
imul
push
stos
xor
cmc
mov
mov
mov
sbb
or
fldenv
jnp
push
add
stos
popa
mov
outsb
mov
scas
dec
cwtl
xchg
pop
mov
xor
add
add
clc
push
push
das
divb
xchg
aam
add
add
jge
adc
add
jmp
test
add
ds
outsl
jge
and
add
add
call
sbb
xchg
iret
mov
test
pop
ret
push
daa
lcall
add
sub
sub
rcll
jo
and
add
add
icebp
out
fstl
add
add
push
sbb
or
mov
dec
out
mov
add
inc
loop
imul
insb
add
add
inc
sbb
dec
sub
sub
lahf
inc
cmpb
jge
jo
mov
inc
outsb
ljmp
imul
add
add
cmp
je
mov
push
xchg
pop
hlt
test
cmp
dec
cmp
jmp
pushf
data16
pop
mov
adc
add
add
es
scas
repnz
adc
jo
add
cmp
outsb
jbe
lret
mov
cmpsb
loope
scas
addl
scas
ljmp
stos
loope
pop
mov
push
mov
pop
or
add
add
adc
and
add
add
insb
add
add
adc
jg
arpl
mov
push
dec
popf
xor
loop
nop
sbb
icebp
rorb
add
mov
das
inc
mov
mov
add
add
movsl
mov
scas
test
jne
test
mov
dec
mov
clc
stos
dec
test
or
add
add
stos
ffreep
cli
cmp
loop
jp
xchg
sub
add
add
insl
lds
xchg
push
aam
clc
sub
add
add
adc
and
cmpb
xbegin
cmc
jb
mov
and
out
lcall
cli
or
add
add
jl
jnp
xor
xchg
jmp
add
add
sbb
or
add
add
repz
add
add
xchg
das
ret
and
jne
stos
jp
mov
cmp
insb
add
add
fsts
and
xchg
xor
xchg
aad
movsb
int3
cmp
test
add
mov
add
jo
les
add
add
adc
repnz
outsl
cmp
js
stos
imul
pushw
push
inc
mov
cmpsl
mov
adc
sbb
dec
fucomp
inc
xor
add
adc
add
or
movsl
cmc
imul
call
xchg
fmuls
mov
rcl
mov
xchg
scas
jne
add
shlb
sarl
out
aaa
jl
inc
mov
mov
add
add
lcall
pop
mov
shl
out
push
mov
jmp
add
cmc
testl
ficoml
sub
add
add
add
add
daa
imul
xchg
push
mov
ds
sbb
mov
cmp
fst
lods
pop
xor
add
mov
ja
mov
mov
test
dec
mov
imull
jnp
add
add
xchg
sub
data16
mov
cmp
repnz
mov
jae
mov
adc
add
xor
mov
pusha
mov
rcrl
flds
adc
dec
lcall
mov
lea
mov
stc
addr16
fildll
mov
fisttpl
jo
jb
adc
add
or
dec
iret
pushf
daa
xchg
int3
out
ret
scas
adc
mov
mov
pop
adc
jbe
push
lock
inc
movl
push
xor
xchg
mov
je
fnstenv
addl
mov
add
add
pusha
mov
push
cmp
dec
sub
jnp
ret
add
add
add
add
add
add
jns
dec
push
iretw
push
xor
pop
aaa
push
push
stc
sbb
imul
addl
and
push
in
jmp
mov
push
dec
jp
add
add
cwtl
leave
sub
add
add
add
pop
lret
mov
rcrl
in
ljmp
and
mov
mov
les
dec
in
mov
mov
mov
inc
scas
pop
pop
ss
add
add
add
mov
leave
das
cmp
and
add
add
orb
out
inc
mov
lcall
or
add
add
out
fisttps
add
fisubrs
add
mov
xorl
xchg
in
dec
mov
push
lret
out
test
sbb
jle
and
inc
mov
and
mov
daa
sub
dec
cmp
out
hlt
pushf
repnz
add
add
cltd
sub
jg
push
adc
inc
jne
cmp
cmpsl
push
xor
mov
adc
add
sub
add
sbb
sub
adc
inc
mov
sub
andl
mov
mov
loope
xor
add
add
add
out
mov
sbb
out
mov
push
cwtl
xor
imull
pushl
in
mov
dec
mov
jae
mov
rorb
stc
inc
sbb
add
insb
mov
pusha
mov
pop
loopne
xchg
aaa
jno
mov
xchg
xchg
and
jne
rclb
lds
add
add
add
add
add
imul
add
add
add
iret
fiaddl
add
add
dec
push
sarb
push
cmp
add
add
lahf
mov
jnp
inc
mov
add
mov
add
add
adc
add
add
add
add
aam
xchg
jns
sub
dec
and
adc
pop
mov
or
mov
insl
xor
repz
jnp
out
jbe
mov
and
pusha
mov
xchg
dec
nop
and
add
add
repz
mov
cmp
mov
push
inc
mov
add
add
add
dec
sbb
mov
fdivr
out
xchg
jae
out
out
ret
sbb
xchg
cmp
shrb
xor
subl
add
add
pop
aad
lcall
add
add
mov
cmpsl
and
es
dec
jae
out
mov
mov
enter
xchg
xchg
xor
adc
aas
pop
test
sti
pcmpeqd
mov
stc
xchg
in
adc
add
mov
add
icebp
adc
pop
xchg
mov
mov
inc
inc
outsb
push
pop
fstl
add
xor
scas
cmp
mov
into
lcall
pop
stc
pop
faddp
sbb
sbb
mov
add
ror
jg
xchg
sbb
pcmpeqw
add
and
add
mov
fldl
add
add
xor
mov
xchg
test
mov
ja
pop
sub
push
sbb
push
or
loope
pop
std
mov
outsl
sub
add
add
add
add
mov
push
and
movsl
add
add
mov
cld
rcrb
pop
inc
iret
int
cmpsl
icebp
sbb
ss
push
pop
mov
dec
mov
int
jg
clc
sub
aas
fwait
shl
push
or
dec
add
add
mov
in
int
inc
add
add
sub
add
add
das
faddl
jae
xchg
and
add
add
mov
pop
fwait
inc
insb
mov
mov
data16
mov
mov
jge
lds
enter
ret
pop
mov
add
xchg
xchg
je
mov
jmp
xchg
mov
add
push
lods
jl
xchg
cmp
cmp
sbb
pop
out
mov
fdivs
or
pop
jae
lcall
and
jecxz
out
dec
add
add
test
sarl
xlat
cltd
lret
mov
cltd
jp
pop
je
inc
mov
add
add
lcall
pop
or
add
add
jnp
dec
jmp
pop
inc
mov
out
xor
add
add
add
and
scas
or
add
add
pop
fwait
jecxz
cmp
push
mov
aaa
int
push
mov
lahf
pusha
add
add
push
mov
mov
mov
add
push
iret
je
mov
add
add
and
mov
add
cmc
out
add
add
xchg
sbb
mov
mov
push
mov
cs
in
inc
pop
hlt
mov
scas
loope
int
leave
addr16
mov
in
xchg
add
add
out
and
lcall
jb
jp
sub
arpl
add
add
stos
mov
add
fwait
ret
arpl
into
jns
sub
das
xchg
scas
sub
xor
movsb
pop
xchg
add
add
add
add
add
test
xor
outsl
pop
sahf
arpl
cmp
or
js
rolb
fisubrl
in
in
jnp
mov
cmp
addr16
push
aam
test
dec
sub
enter
push
inc
ret
ja
mov
add
lods
pop
dec
mov
sbb
es
cld
stc
sbbb
mov
xchg
jbe
sub
add
add
add
push
mov
xor
je
fsubrs
popa
jp
test
inc
sub
mov
repnz
enter
in
mov
xchg
loope
mov
mov
scas
aas
adc
cmp
roll
mov
pop
insl
mov
mov
adc
add
lea
and
inc
add
add
add
mov
loopne
dec
add
add
pop
cmp
test
fmuls
pop
mov
sti
sbb
jae
add
add
pop
jg
cmp
mov
cmp
pop
testb
sub
lret
int3
std
dec
lret
scas
popl
ja
jbe
fistl
daa
mov
inc
ss
push
xchg
iret
pusha
mov
pop
mov
daa
mov
cwtl
repz
mov
sub
mov
mov
addr16
add
add
add
imul
pop
push
fstps
notl
mov
add
pop
pusha
add
add
movsb
adcl
adc
push
fisubl
mov
lock
push
xchg
push
jl
or
inc
add
add
call
stos
orb
add
out
ror
push
inc
mov
inc
pop
in
jne
sbb
sub
fmull
out
fcmove
dec
cmpsl
jo
popa
push
pop
add
dec
pop
jbe
push
out
adcb
lods
jmp
inc
add
add
stos
aam
xchg
mov
inc
mov
push
lret
mov
xlat
xor
mov
push
lret
pop
lahf
mov
imul
add
test
in
adc
repz
add
add
mov
dec
add
add
xchg
mov
add
add
hlt
incl
and
add
add
push
popa
test
inc
mov
push
lgs
paddw
int
enter
shrb
add
fs
jecxz
add
add
add
dec
add
add
xchg
es
mov
in
pop
inc
test
add
add
inc
sub
pop
nop
ljmp
dec
pop
xchg
pop
pop
mov
addb
test
imul
out
mov
ds
mov
imul
lock
jmp
test
sahf
mov
or
data16
sbb
rcrb
or
sub
stos
jmp
and
in
popf
outsb
pop
movsb
and
add
add
sub
mov
mov
add
mov
dec
movsl
call
std
mov
lret
ret
add
add
dec
dec
mov
add
mov
fcmovnbe
in
xor
insl
pusha
add
add
scas
xchg
push
xchg
jns
lods
pop
sbb
cmp
out
nop
sti
xor
roll
mov
add
fmulp
dec
sbb
popf
imul
jle
jns
fdivl
xor
add
aas
pop
add
fcomps
adc
mov
pop
ds
cmp
mov
loopne
hlt
shl
rcrl
adc
repz
negl
mov
adc
push
in
inc
inc
stos
lods
out
push
and
add
add
push
jmp
mov
add
js
xchg
bound
inc
add
add
faddl
jl
add
add
and
or
mov
mov
add
xchg
adc
inc
aaa
and
or
stos
jge
xlat
or
test
push
mov
add
lods
sub
sbb
dec
mov
adc
mov
mov
dec
icebp
xor
sar
jp
mov
aaa
and
std
in
push
adc
dec
pop
lods
cmp
mov
out
fsubrs
pop
daa
adc
cmpsl
sub
add
add
mov
jne
adc
inc
sahf
adc
push
or
roll
add
clc
jo
test
ret
bound
and
add
add
clc
inc
inc
lock
insb
mov
out
cmpsb
cmp
pop
push
dec
add
add
add
in
jo
mov
pop
cmpl
pop
xchg
sbb
pop
rcrb
out
shll
sub
xchg
inc
mov
and
push
push
push
lods
and
add
add
push
sbb
mov
sbb
mov
or
jmp
fcomps
mov
add
adc
scas
push
jmp
pop
adcb
shl
clc
add
xlat
jae
cmpsb
inc
mov
pop
mov
xor
xchg
stc
mov
xor
fadds
test
std
mov
shrb
or
add
popw
sub
push
outsb
or
xchg
mov
pop
cltd
idivl
or
mov
mov
push
sbb
and
sbb
jmp
mov
xlat
pop
sbb
add
add
cmp
cltd
addr16
adc
add
daa
mov
mov
daa
xor
shll
fadds
mov
fcomps
fsubrl
movsb
adc
leave
and
or
add
push
xor
daa
mov
jb
lret
popf
pushf
xchg
das
imul
add
add
mov
std
stos
fadd
clc
in
inc
mov
hlt
sub
clc
and
shrb
inc
mov
clc
aaa
jnp
sarl
dec
pop
adc
add
add
add
mov
dec
stc
daa
sbb
mov
mov
loope
out
inc
fbld
mov
add
add
mov
mov
add
add
add
pop
ret
into
mov
loope
mov
cs
fisttpl
add
add
xchg
test
mov
add
scas
or
lods
mov
jmp
add
add
add
dec
es
int
pop
mov
push
push
xchg
fldt
js
stc
cmp
out
call
lcall
pop
cmp
popf
adc
push
pop
or
add
add
sbb
add
mov
adc
iret
or
add
add
or
cli
jmp
mov
hlt
pop
out
cmp
add
repnz
xor
dec
mov
jno
nop
sub
fadds
loopne
lods
cmc
addl
fdivp
mov
sub
add
add
bound
add
add
test
mov
sub
add
add
movsb
xchg
in
fwait
adc
inc
cmp
or
add
add
jne
mov
out
setg
push
add
mov
outsb
movsl
movsb
outsl
lahf
mov
add
add
rcll
cmc
cmpsb
mov
and
testl
stos
xor
pop
mov
dec
fldenv
test
mov
lock
or
les
orl
add
pop
xchg
mov
jg
lcall
cmpsl
sub
arpl
mov
inc
mov
add
test
jp
sbb
jge
and
sub
add
add
add
cmp
and
add
add
add
jns
pop
mov
add
lret
scas
or
add
add
pop
or
jo
add
add
add
and
mov
pusha
mov
add
add
add
pusha
mov
movsb
fs
mov
add
add
push
fidivl
sub
cmp
push
adc
loop
xchg
pop
jp
cs
aas
pop
jle
push
arpl
xchg
test
xor
sahf
push
jnp,pn
xor
cs
or
add
add
decb
add
xchg
lret
push
dec
lret
je
adc
mov
xor
add
add
and
xchg
sbb
add
or
xchg
pop
add
add
add
xchg
jl
inc
mov
add
mov
add
add
insb
add
add
in
out
and
hlt
call
daa
sti
data16
jl
dec
mov
pop
test
xor
ss
clc
iret
mov
xchg
mov
bound
add
add
cmp
flds
test
sbb
lods
in
push
fmull
add
add
mov
in
dec
rcl
push
cmp
add
mov
xor
lahf
jl
in
fsubp
inc
sub
xor
test
pop
mov
pop
sbb
cltd
jmp
push
es
add
add
jns
sbb
cmp
or
add
add
clc
adc
push
xchg
movl
add
dec
clc
fisubs
jo
lret
daa
and
add
add
push
adc
add
xchg
xlat
fsubl
pop
lea
ljmp
inc
sbb
pop
cwtl
pop
fnstcw
pushf
xor
sahf
call
push
pop
test
test
or
mov
jns
test
push
insb
mov
out
mov
lea
es
mov
add
add
add
sarl
loopne
adc
cmp
jg
add
pushl
adc
add
add
hlt
jnp
fsubp
cmp
push
push
loope
adc
aas
jne
sbb
pusha
mov
hlt
outsb
push
or
aas
jg
mov
xchg
loope
xchg
dec
shlb
add
add
add
out
movb
fmuls
mov
xor
cmp
test
stos
add
rcrb
ret
add
add
je
inc
mov
out
or
js
mov
testb
jle
pop
jbe
subb
les
add
add
movsl
nop
mov
int3
iret
hlt
out
inc
xor
cmp
js
inc
add
add
pop
aaa
movsl
mov
js
xchg
fwait
xor
mov
pop
lret
call
in
pop
insb
mov
jb
pop
cmp
fldt
or
outsl
pop
inc
mov
rorb
in
adc
out
out
testb
adc
sub
add
add
scas
jo
mov
mov
add
add
test
test
mov
push
xor
adc
add
test
mov
in
orb
add
imul
bound
inc
add
add
scas
outsl
fldt
jns
outsl
pop
and
movsl
jecxz
pop
sbb
add
mov
lock
aam
inc
xchg
jb
in
stc
fwait
ja
call
rorl
add
add
in
lgs
cmpsb
mov
add
es
sbb
scas
or
add
dec
sbb
out
mov
add
call
inc
mov
out
dec
push
jp
cmp
dec
ret
fstpt
in
movsl
out
scas
dec
roll
add
add
jne
push
inc
add
add
sub
add
add
add
add
cltd
mov
out
filds
add
add
add
add
inc
inc
add
add
and
fsubrl
add
fiaddl
lret
add
add
add
adc
nop
fwait
push
xor
adc
cmpsb
movsl
out
lcall
add
mov
js
in
jg
inc
daa
outsb
notb
or
add
add
add
add
add
sbb
mov
cmp
xchg
stos
cmp
jae
cltd
cltd
fcmovnb
push
push
sbb
mov
out
pop
repnz
add
add
mov
cltd
data16
sahf
aam
fimull
add
add
add
cli
lret
clc
adc
add
add
mov
push
orl
add
aad
repz
add
add
loope
xchg
pop
dec
gs
push
mov
jle
mov
pop
enter
pushf
xor
in
lods
xor
push
or
lcall
shrl
pop
enter
add
lret
jp
jp
addr16
leave
xchg
pop
pusha
mov
xlat
xchg
mov
je
jle
sbb
mov
lods
sub
mov
mov
mov
push
mov
lds
je
xchg
add
push
sar
in
cmp
push
sti
and
movsb
xchg
jp
sbb
addr16
add
lret
xor
xchg
ljmp
lcall
add
add
add
fbstp
fsubrs
add
add
mov
pop
out
test
psllw
test
add
add
cmpsl
jae
fwait
mov
add
add
pop
pop
adc
shrl
jno
ret
cwtl
test
stos
bnd
sub
fwait
movb
int3
fs
lods
aaa
cltd
mov
sub
add
add
mov
jmp
mov
push
shrb
sbb
pushf
xor
test
xlat
mov
dec
adc
add
add
inc
mov
enter
cmp
jb
inc
sti
hlt
imul
mov
mov
mov
iret
mov
mov
cmp
or
jmp
in
add
mov
or
popa
fisubrs
add
add
fcompl
xor
lea
rolb
add
add
rcll
rep
mov
out
push
xor
add
add
jns
add
add
cmc
movsb
ds
fiaddl
add
add
add
dec
pop
lcall
pop
es
inc
mov
lock
jg
xchg
pop
