add
add
add
es
es
es
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
add
sub
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
pop
lea
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
sbb
sbb
sbb
sbb
push
push
push
push
push
push
add
incb
add
je
je
je
je
je
je
je
je
je
je
je
je
je
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
add
add
add
div
testl
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
repnz
repnz
repnz
repnz
repnz
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
ljmp
ljmp
add
add
add
lahf
lahf
lahf
test
repnz
add
addb
addb
addb
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
mov
mov
mov
outsb
outsb
outsb
outsb
mov
mov
cmc
cmc
cmc
cmc
addb
addb
addb
addb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
enter
ds
add
loope
loope
loope
loope
loope
add
add
enter
enter
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
addb
addb
addb
jae
xlat
xlat
xlat
xlat
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
add
add
inc
inc
inc
inc
inc
inc
inc
inc
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
add
add
std
std
std
std
add
add
cli
cli
cli
cli
lahf
add
cmp
cmp
cmp
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cld
cld
cld
cld
cld
cld
cld
in
in
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
or
or
or
or
or
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcrb
aad
aad
aad
fs
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
add
add
ret
ret
ret
ret
ret
ret
ret
ret
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
add
call
call
call
call
call
call
call
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
clc
clc
clc
clc
clc
jo
jo
jo
jo
jo
jo
cld
cld
cld
cld
cld
add
mov
movsl
movsl
movsl
sub
rcl
rcl
rolb
add
add
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
adc
add
add
sub
sub
sub
sub
sub
sub
add
jo
jo
jo
jo
jo
jo
jo
jo
jo
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
cmp
cmp
hlt
hlt
hlt
hlt
hlt
hlt
add
test
test
test
test
test
add
mov
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xor
xor
adc
adc
adc
in
in
in
in
in
in
in
in
in
in
in
in
in
lahf
add
sbb
sbb
sbb
sbb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
scas
ja
ja
add
add
jo
jo
jo
jo
jo
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
mov
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
or
div
div
div
div
div
div
div
div
pminub
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
add
add
add
push
push
push
push
push
push
push
push
push
push
push
add
or
or
repnz
lret
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
addl
addl
addl
addl
addl
addl
adc
adc
adc
adc
sti
sti
sti
sti
sti
sti
sti
sti
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
incl
add
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
addl
addl
lcall
lcall
lcall
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
sub
sub
sub
sub
sub
sub
sub
add
add
adc
adc
adc
movsl
add
cmp
cmp
cmp
cmp
cmp
cmp
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
add
add
add
add
popl
in
add
xor
xor
xor
xor
xor
xor
add
jmp
dec
dec
dec
dec
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
repz
repz
repz
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
dec
dec
dec
dec
dec
dec
dec
dec
fs
fs
cmp
cmp
cmp
cmp
cmp
add
add
fcmovu
fcmovu
fcmovu
add
add
add
sbb
les
addps
pop
pop
and
and
and
in
add
imul
imul
xchg
xchg
xchg
xchg
xchg
lahf
lahf
lahf
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
pop
pop
pop
mov
mov
jbe
jbe
jbe
jbe
add
xchg
xchg
sub
sub
sub
sub
sub
sub
sub
sub
add
add
add
add
add
add
add
add
add
xor
xor
xor
xor
xor
xor
dec
push
add
add
add
lcall
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
mov
mov
mov
mov
add
add
ja
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
push
push
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
cs
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pushf
pushf
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
add
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
ljmp
sub
sub
sub
sub
sub
cmp
cmp
cmp
add
add
add
test
lods
lods
lods
sub
sub
add
add
lcall
cmp
cmp
cmp
cmp
addl
addl
add
rol
rol
rol
rol
rol
rol
rolb
pop
pop
pop
pop
pop
pop
pop
add
add
rcl
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
add
add
jl
jl
jl
jl
jl
jl
jl
jl
jl
cmp
cmp
inc
inc
inc
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
addb
addb
addb
addb
addb
addb
jl
jl
sub
sub
sub
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
es
sldt
add
add
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
xor
xor
add
add
call
call
call
call
call
call
call
call
call
call
call
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
lea
out
out
out
out
out
out
add
add
add
lret
add
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
aaa
aaa
aaa
aaa
add
jbe
jbe
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
notb
dec
dec
dec
dec
dec
add
add
cltd
cltd
mov
mov
test
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
out
out
out
out
out
out
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
adc
adc
adc
adc
adc
sbb
sbb
sbb
sbb
sbb
repz
add
sub
sub
sub
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
jecxz
jecxz
jecxz
jecxz
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
test
jle
jle
jle
jle
in
in
in
in
in
in
in
in
in
in
in
in
int
int
int
int
int
int
int
int
int
int
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
repz
add
add
mov
mov
add
push
push
push
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
les
push
push
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
cmp
sbb
sbb
sbb
sbb
loop
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
addl
addl
addl
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
add
add
add
add
pop
add
jmp
jmp
jmp
jmp
add
add
gs
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
arpl
arpl
arpl
arpl
arpl
arpl
inc
inc
inc
inc
inc
inc
inc
inc
ret
ret
std
std
std
std
std
std
std
std
std
std
std
std
push
push
cmpsb
cmpsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
or
or
or
or
or
or
or
or
or
or
or
add
add
clc
push
out
stos
mov
andb
inc
push
xor
rclb
push
jge
pop
mov
arpl
fisubrs
sbb
int3
add
ja
fwait
lcall
mov
shlb
loopne
lcall
fbstp
or
inc
pop
or
and
sbb
jmp
cmp
ds
addb
and
in
jbe
lahf
call
xor
xchg
sub
and
mov
push
daa
repnz
inc
add
and
and
and
pop
sbb
in
pop
testb
insb
xlat
dec
addl
loopne
mov
icebp
sbb
mov
pop
push
push
arpl
sub
fwait
das
pop
shll
mov
jb
mov
pop
mov
nop
sbb
andb
data16
pop
xchg
mov
add
pop
call
add
xor
mov
aas
inc
mov
inc
dec
dec
movsl
xor
bound
xchg
in
add
or
outsb
insl
sarb
xor
stos
mov
loop
jbe
fadds
ja
sub
jbe
sti
in
xchg
popa
mov
pusha
addr16
pop
jl
add
in
xchg
inc
into
outsl
xchg
and
or
sub
xchg
add
rcll
jne
mov
das
mov
lret
aas
sti
sub
jae
lock
neg
ljmp
lret
dec
int
addl
subb
and
cmpb
pusha
push
push
mov
pusha
adc
sub
loopne
inc
das
ret
scas
std
jns
fdivs
and
int
out
xchg
xor
inc
bound
loopne
icebp
sarb
cmpsb
and
loopne
mov
ret
xor
mov
adc
out
xlat
roll
shll
and
mov
loop
out
or
ret
inc
push
lods
add
rcpps
add
cmp
add
aam
shlb
stc
push
sbb
loopne
out
sub
inc
movsb
pusha
loopne
cltd
xchg
pop
sarb
verr
rolb
mov
pusha
mov
outsb
jge
das
cmpsb
inc
and
sbb
jo
iret
and
loopne
inc
add
shlb
dec
sbb
icebp
test
inc
lds
mov
loopne
push
add
mov
subb
ret
shr
mulb
inc
pusha
and
xor
sub
mov
adc
fwait
lea
loopne
fistpl
test
in
sbb
scas
and
loope
rolb
and
and
int
sti
test
inc
aad
loop
mov
vaddsd
call
adc
test
daa
fmull
pop
cmovs
loopne
int3
sbb
adc
jae
mov
fiaddl
pop
jle
imul
sti
cmp
xchg
cmp
mov
jae
sbb
jne
jne
cmp
xchg
lods
popa
loop
mov
repnz
adc
cmp
pop
ljmp
loop
mov
mov
rcrb
push
roll
cmp
and
mov
add
negl
adc
fbld
fldcw
in
sbb
add
push
and
in
inc
jns
addb
mov
leave
sbb
stos
pop
sbb
pusha
inc
imul
insb
sub
and
jbe
inc
mov
and
std
and
inc
jecxz
pop
clc
popf
xchg
cwtl
out
and
xor
loop
out
repnz
mov
test
add
imul
cmp
push
sub
and
loopne
jg
ret
addb
jmp
pop
insb
fs
inc
lods
loopne
int3
xchg
enter
mov
jne
add
nop
xchg
cmp
add
cmc
je
jge
xchg
daa
insl
lods
addb
fcoml
xor
jno
loop
loope
stc
inc
js
je
add
push
cwtl
xlat
mov
and
cmc
xchg
lods
push
push
inc
add
and
rcrb
ret
adc
inc
cmp
js
sbb
add
inc
dec
push
ret
je
lods
and
in
xchg
adc
pusha
add
aas
pusha
mov
inc
dec
push
aad
sub
fnop
es
cmpb
adc
sub
inc
add
add
jns
mov
dec
inc
enter
rolb
add
mov
rolb
test
orb
repz
dec
sbb
sbb
xor
out
and
adc
cmc
lock
popa
mov
or
fmull
es
test
and
in
mov
pusha
out
and
or
jp
loope
dec
ret
popa
ret
mov
jl
divl
insl
nop
cltd
adcl
xchg
add
add
inc
stos
fmull
rolb
out
mov
subps
loopne
and
push
xchg
pop
push
lods
pusha
mov
inc
scas
fs
fwait
jb
insl
xchg
fwait
sbb
and
mov
cmpl
lds
push
mov
pusha
loopne
xchg
test
loopne
adc
out
sbb
das
xor
in
out
insl
mov
fs
push
out
outsb
stos
and
lock
pusha
inc
mov
lds
fwait
xchg
mov
pusha
loopne
je
test
add
pushf
out
and
push
inc
ret
div
jge
inc
testl
mov
mov
andb
loopne
push
leave
push
inc
and
xchg
pop
push
ret
pusha
mov
lock
out
push
pusha
rcrb
das
addb
scas
andb
add
lods
imulb
mov
mov
scas
inc
add
pusha
and
add
xchg
inc
dec
mov
addb
fdivs
pushf
js
mov
pushf
inc
push
loopne
add
inc
shr
pop
mov
pusha
add
std
jae
inc
inc
andb
inc
int
cmpsl
mov
inc
lods
pusha
orb
loopne
lret
pop
outsb
loope
lods
jl
jg
sbbl
js
xchg
in
add
cmp
or
mov
xchg
pusha
mov
lret
shlb
cmp
js
or
pusha
dec
movsl
fstps
icebp
jb
scas
inc
pusha
push
bound
adcl
jge
insb
mov
and
mov
pop
rcrl
cmp
pop
adc
loope
popf
por
cmp
shlb
scas
xchg
popa
cwtl
in
pop
xor
add
stos
pop
int
mov
fldl
fimull
jge
test
loopne
cli
shlb
aad
dec
addr16
sbb
inc
andb
sar
sarl
inc
sub
push
loopne
push
and
pop
test
jnp
out
sbb
xor
daa
mov
pop
cmp
inc
je
xor
arpl
shr
mov
andb
and
mov
aaa
andb
lsl
add
add
sbb
add
js
call
mov
or
and
mov
and
inc
test
fisttpl
stos
push
xor
push
test
mov
loopne
push
xchg
scas
and
into
rolb
fdivrs
rolb
push
pop
jg
andb
shlb
nop
inc
leave
add
cmp
mov
and
rolb
ljmp
mov
shlb
shlb
lret
adc
xchg
mov
rcrb
xor
and
and
xchg
loopne
mov
jno
loopne
cld
push
mov
iret
sbb
fldcw
mov
outsl
mov
or
lcall
cmp
cmp
out
or
inc
dec
inc
iret
shrl
andb
xchg
sbb
mov
out
mov
je
push
mov
aam
pop
dec
iret
mov
ja
loopne
mov
repnz
add
loopne
xor
mov
or
sarb
inc
push
inc
push
lock
push
xor
sub
dec
lods
add
and
cmp
ss
or
inc
loopne
ds
lock
insb
jnp
add
inc
cmp
mul
add
and
pmulhw
mov
xchg
enter
add
cltd
push
repnz
add
xchg
adc
ret
scas
rolb
mov
and
pop
outsl
mov
xor
xchg
out
lock
out
cs
sti
dec
stc
mov
insb
push
add
sarb
imulb
xor
inc
pusha
add
sahf
mov
or
test
outsb
jb
mov
xor
pop
xor
mov
mov
and
lock
in
dec
push
and
cmc
jecxz
jmp
int
ret
cmpb
and
sub
cltd
xor
xor
ss
cltd
xor
aas
sarb
cli
shlb
mov
out
push
and
pusha
shlb
dec
pusha
dec
jmp
inc
rcl
imul
or
and
xchg
iret
into
int3
or
add
testb
loopne
xor
pop
push
push
shrl
pusha
sbb
jp
push
sub
push
inc
add
add
jno
xchg
inc
pusha
adc
dec
fbld
daa
loop
addb
xor
loopne
xchg
cmp
cmp
inc
push
mov
dec
mov
outsl
inc
addr16
adc
in
lea
notl
add
loopne
std
insl
mov
pusha
lret
jo
adc
insb
imull
test
loopne
leave
sbb
mov
sub
dec
sar
in
ficomps
repz
imul
mov
mov
mov
mov
mov
shlb
outsb
cmp
stos
test
mov
sub
out
dec
push
push
mov
shl
out
pop
in
cli
sub
dec
cmp
inc
adc
or
mov
mov
mov
jns
movsb
pusha
xorb
out
mov
mov
andb
add
sbbb
dec
push
cmp
push
sarl
hlt
scas
sarl
shlb
loopne
mov
pop
dec
add
inc
add
push
xchg
movsl
sarl
add
mov
gs
mov
jnp
in
push
xchg
dec
pop
sub
testl
xchg
imul
pop
fisubl
addb
aad
imul
aad
dec
mov
jl
andb
andb
lret
xor
dec
pop
mov
and
shl
xor
jecxz
les
xchg
lret
add
push
pusha
out
loope
sahf
aam
aam
test
mov
addb
pop
std
mov
pusha
and
or
out
negb
fdiv
or
sub
shlb
mov
push
xchg
xchg
fiadds
lahf
notl
push
hlt
mov
mov
lret
into
xchg
stc
dec
sub
pusha
xor
dec
fsubl
and
mov
rcr
faddl
andb
push
daa
jl
fdivs
add
pusha
shlb
add
and
fisubrs
adc
lret
adc
pusha
add
add
push
shlb
or
mov
addb
shrb
jmp
sub
add
and
push
ljmp
mov
adc
in
mov
aas
dec
xchg
jle
int3
lods
mov
ror
jmp
jne
loopne
icebp
and
sub
add
mov
cmpl
loope
pusha
cmpb
int
stos
ret
lahf
xchg
leave
daa
test
push
inc
adc
pop
ss
mov
cwtl
stos
or
rolb
inc
add
orb
pusha
and
mov
xor
xchg
outsl
stos
addb
lods
jl
inc
dec
vhsubpd
rclb
pusha
subb
popa
inc
test
push
fisubs
and
mov
leave
jne
and
shrl
and
andb
sub
imul
rorb
mov
out
inc
rcrl
mov
add
and
in
pop
mov
or
sbb
mov
pop
pop
sbb
addb
xlat
mov
pop
push
out
mov
inc
ds
mov
jbe
mov
out
outsb
and
fstl
arpl
add
loopne
inc
and
jge
psubsb
inc
inc
mov
push
movsl
lds
mov
and
shrb
inc
subb
and
fadds
cmp
rcr
pusha
inc
jne
sub
repnz
adc
clc
xchg
in
aam
outsl
loop
jns
movsb
add
test
addr16
fidivs
dec
xchg
pop
pop
push
mov
sbb
mov
adc
loopne
jle
loopne
outsl
push
rorl
push
loop
add
mov
popa
out
jae
rolb
add
dec
inc
mov
jp
ja
stc
pop
fistps
sete
loopne
rol
and
inc
sub
push
mov
jne
in
mov
imul
clc
or
add
inc
inc
std
add
mov
aas
mov
jp
js
pusha
inc
aaa
or
add
addb
iret
mov
mov
jne
xchg
xor
shl
addb
dec
das
pop
add
mov
pop
cmc
into
out
sti
mov
inc
pop
fnsave
cmpsb
mov
or
pusha
cld
loop
xchg
pusha
hlt
ja
loopne
sbb
mov
loopne
jbe
inc
cmp
or
and
pop
inc
mov
rorb
cwtl
pusha
sub
pusha
fldcw
add
dec
dec
sar
enter
jae
fidivrl
sbbl
jnp
imull
mov
outsl
push
lret
loopne
inc
lods
mov
rorb
out
imull
inc
jbe
and
rol
cwtl
jne
dec
daa
mov
and
or
and
mov
cwtl
bound
lock
adc
bound
cmpsb
add
lea
push
mov
pop
lods
jl
les
andb
adc
and
add
jo
stc
and
jg
mov
dec
or
add
mov
enter
push
and
lods
xchg
andb
shlb
int
imul
xchg
nop
lds
loopne
test
inc
or
loopne
ret
add
loopne
sub
shlb
inc
sahf
mov
mov
mov
mov
pushf
inc
js
aas
lods
inc
inc
pop
add
and
repz
add
and
xchg
jnp
adc
mov
jge
pop
mov
sub
inc
hlt
xor
add
mov
cli
movaps
inc
adc
test
pusha
outsb
cmp
xchg
mov
xchg
cmp
js
andb
enter
shlb
mov
inc
test
inc
mov
fdiv
dec
jno
shlb
push
rolb
sbb
cmp
das
adc
pop
lret
mov
mov
loopne
mov
xchg
and
cltd
cmpsb
pusha
and
mov
movsl
xor
xchg
call
cmp
add
loopne
addb
xchg
cmp
sbb
xor
cltd
push
loop
leave
adc
and
sub
loopne
lock
add
and
ja
cmp
add
pop
push
pusha
mov
xchg
loopne
fs
pop
and
lock
fisubs
cwtl
add
aaa
mov
pusha
and
cmp
xor
and
xchg
pushl
pusha
sbb
pop
les
fs
adc
ja
xchg
jg
rolb
cmp
fdivrs
out
lds
mov
in
test
idiv
ljmp
pusha
cmp
inc
mov
sahf
sbb
and
dec
test
sbbb
xchg
pop
jl
inc
and
and
cmpsb
addb
dec
test
mov
jp
mov
xor
jno
push
and
rolb
jb
cmp
sub
shlb
mov
lret
or
ss
pusha
int3
iret
in
js
jo
mov
xor
mov
add
js
pusha
inc
out
mov
loop
jb
xor
push
mov
and
pop
inc
mov
mov
ret
mov
in
lods
and
sbb
or
shlb
rcrb
shl
mov
scas
and
mov
test
and
sub
jbe
movsl
jne
inc
mov
and
mov
mov
stc
or
loopne
inc
and
mov
cmp
int3
cli
iret
mov
sarb
nop
pop
adc
inc
sbb
stos
loopne
repz
loopne
xor
ss
fmulp
out
fstps
pop
testl
mov
ror
mov
adcl
pop
stc
jp
mulb
push
xchg
scas
clc
movb
dec
dec
arpl
and
xchg
imul
shrb
add
mov
scas
inc
add
mov
js
inc
loopne
adc
rorl
add
je
loopne
push
add
iret
insl
mov
fwait
out
shlb
aas
mov
xorl
ss
mov
in
add
push
push
push
push
push
push
call
sub
add
imul
lea
and
cmp
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
stos
loopne
and
inc
test
xchg
out
and
fisttps
das
mov
iret
mov
loope
int3
or
inc
pop
mov
push
pop
push
mov
fldcw
add
repz
pop
sbb
inc
pop
adc
fistpl
xchg
add
sub
pusha
mov
loope
sbb
or
xor
cld
mov
popf
add
shlb
pop
sub
or
mov
xchg
mov
push
or
xchg
es
inc
lcall
hlt
sbb
bound
mov
es
inc
inc
cmp
add
repnz
loopne
lods
shl
mov
decl
in
pop
jp
in
js
inc
add
mov
add
call
xlat
lcall
in
xchg
shrb
fsubr
loopne,pn
sbb
jmp
sbb
cs
add
nop
dec
add
popa
mov
loop
sarl
pusha
pusha
dec
mov
xchg
add
aam
pop
andb
aaa
in
cmp
lret
iret
ret
add
mov
sbb
inc
inc
dec
jnp
imul
pusha
sub
idivl
pop
push
rcll
pusha
inc
xchg
add
addb
shll
fisttpl
xor
lret
push
mov
loopne
jmp
shlb
dec
sarb
inc
xchg
ljmp
push
test
inc
insl
jno
xchg
add
xor
mov
enter
stos
das
int3
sbb
sub
mov
addb
mov
sbb
mov
lds
pop
mov
nop
xor
fildl
inc
sar
pop
dec
pop
data16
loopne
enter
adc
mul
out
push
push
loopne
mov
imul
inc
pusha
mov
push
jg
daa
pop
cmpsl
mov
mov
inc
xor
rorb
andb
pop
les
hlt
cld
fidivs
push
test
mov
ror
xor
int3
and
inc
jl
inc
xchg
inc
sub
stos
and
js
mov
inc
mov
aam
rcrb
jno
dec
lds
mov
mov
jmp
ret
jge
loop
xchg
gs
popf
insb
jl
or
and
lret
das
ret
incl
cmpsb
mov
popa
push
xchg
test
repnz
push
xchg
xchg
nop
adc
adc
sbb
push
aam
in
cs
push
lret
jmp
in
xchg
pop
push
popa
push
mov
mov
out
out
push
lock
lcall
cmpsl
mov
inc
inc
cli
mov
add
add
ficomps
loope
out
shlb
shl
mov
and
pusha
loopne
jne
fcmove
outsb
cmp
mov
add
dec
aaa
sub
fisubl
and
jns
add
mov
adc
fwait
mov
outsl
jge
xchg
testl
mov
sub
inc
inc
mul
xor
ja
test
enter
roll
inc
pop
movsl
push
addb
lcall
cmpsl
sub
xchg
int3
enter
shlb
or
subb
xchg
inc
lcall
es
xchg
pop
es
lcall
xchg
lea
nop
pushl
inc
xchg
mov
fcomi
scas
shl
ds
push
mov
idivl
inc
shll
sbb
mov
cli
mov
and
adc
inc
push
cwtl
cli
fsubl
and
inc
xor
in
mov
mov
repz
data16
pop
jo
addr16
cmp
inc
aad
push
stos
cli
loope
dec
dec
repnz
repz
jg
xlat
and
mov
mov
loopne
loopne
pop
outsb
outsb
fadds
popf
or
or
inc
xchg
imul
jl
inc
pusha
or
pop
or
mov
orb
cmp
int
dec
jecxz
dec
pushf
sub
inc
out
push
mov
lahf
push
inc
jae
cmpsl
clc
mov
shlb
mov
fistl
push
mov
popf
mov
neg
mov
into
jecxz
call
mov
pusha
in
xor
loopne
push
xor
add
into
rcr
jle
add
popf
fsubrs
dec
call
dec
mov
add
pop
push
pusha
and
movsb
addb
mov
insl
add
xchg
fisubrs
lods
mov
fs
andb
add
rcll
jbe
pushf
push
andb
inc
mov
imul
push
les
dec
jno
mov
mov
rolb
mov
mov
inc
inc
aam
sbb
jae
pusha
rcrb
roll
cmp
pusha
push
pop
aaa
pop
loope
pusha
inc
repz
loopne
adc
mov
adc
dec
and
inc
adc
mov
fcomps
hlt
loopne
addb
cli
lods
popf
test
pusha
loopne
lds
out
jle
in
jl
mov
outsl
mov
mov
dec
mov
push
je
add
mov
insl
dec
jns
add
xorl
or
add
leave
pop
mov
pusha
cmp
xor
lret
clc
or
div
in
ljmp
mov
sbbl
and
inc
pusha
shll
and
rol
xchg
mov
loopne
pop
and
xchg
push
fmulp
mov
add
inc
add
and
shr
mov
leave
pop
jg
mov
cmp
dec
popa
dec
pusha
cmp
lcall
loopne
cld
fs
add
xchg
shrb
cltd
pop
xchg
inc
jle
aad
push
lds
test
rolb
mov
lds
mov
shrb
pusha
jmp
inc
int3
xor
addb
and
jecxz
push
test
pop
es
xor
test
rclb
div
fwait
jno
pop
push
ljmp
lcall
loopne
and
mov
xchg
sbb
imul
shl
jg
lret
pop
sub
mov
negb
or
pusha
mov
mov
pusha
and
mov
sbb
test
shrb
jge
jg
jp
jne
and
les
insb
iret
mov
shlb
fs
ds
fisubrs
sbb
in
mov
jae
xchg
sbbl
test
mov
and
sbb
or
add
shr
orl
add
and
xor
sarb
and
add
add
rorb
mov
sarb
bound
mov
push
xchg
mov
or
cmpsl
sub
and
test
loopne
mov
out
andl
lea
add
mov
pushf
movsl
inc
mov
pop
in
and
outsb
lret
xlat
ret
es
or
shlb
inc
arpl
repz
popa
out
shrb
add
inc
bound
mov
push
sub
xchg
and
jle
adc
add
jmp
addb
addr16
sti
mov
dec
or
inc
subb
add
and
inc
fucomip
push
add
fcompl
xor
mov
add
sub
and
outsl
or
lds
jmp
pushf
jae
scas
inc
sbb
jne
divl
lods
popa
xor
adc
sarb
fbld
and
or
fs
and
mov
js
xchg
hlt
or
mov
in
shl
dec
cltd
hlt
popa
push
mov
push
sub
loopne
lret
xchg
xor
push
rcr
loopne
mov
mov
push
inc
inc
dec
pop
jg
outsl
inc
in
pusha
sahf
cmp
pop
cmpsl
add
lahf
adc
scas
lret
dec
fildll
xor
incl
addb
add
andb
aam
mov
inc
mov
rolb
insl
fistpl
push
inc
cmp
mov
mov
addb
bound
xchg
scas
loopne
outsb
or
loopne
add
loopne
adc
dec
dec
adc
xor
stc
or
movl
or
cwtl
pop
xchg
adc
xchg
lods
mov
std
test
pop
pusha
mov
scas
and
je
or
add
inc
les
mov
mov
fs
add
call
test
ror
adc
insl
inc
mov
inc
loopne
in
jmp
cmp
repz
popa
pop
pop
cwtl
mov
loopne
and
push
xor
jmp
jmp
inc
mov
pop
dec
mov
pop
push
xchg
scas
shl
lods
shlb
mov
cmpl
or
and
jne
addb
rep
push
loop
je
add
sub
and
xchg
hlt
in
xor
imul
mov
cmp
cmp
xchg
xor
jecxz
gs
push
jl
push
imul
in
mov
xchg
popa
mov
sbb
add
sbb
mov
jg
addb
daa
mov
outsb
leave
fisubs
andb
repz
sbb
rolb
imul
loopne
sub
gs
xchg
push
shlb
imul
aaa
sub
mov
mov
sbb
pusha
loopne
shlb
jne
dec
sub
andb
sub
test
cwtl
out
in
pop
sbb
add
jmp
or
sarb
in
mov
pop
inc
sub
sarb
inc
seto
adc
ds
in
pop
inc
scas
mov
xchg
mov
mov
sub
pop
out
les
aam
pop
pop
pop
mov
pusha
add
andb
ror
aaa
sbb
cmc
lods
adc
mov
sbbb
lods
push
mov
lock
xorb
or
dec
mov
into
jb
jo
fisubrs
bound
out
repnz
add
or
add
faddp
mov
sbb
data16
addb
popa
jne
bound
test
or
mov
cmp
fildl
lahf
dec
cmp
jmp
adc
mov
mov
sub
mov
cmp
pop
and
inc
inc
hlt
jge
mov
ret
jbe,pt
pop
sub
shlb
fmuls
dec
add
mov
mov
adcl
mov
int3
and
add
inc
inc
mov
inc
inc
in
mov
aad
cmp
jmp
and
pusha
and
cmp
pushf
or
clc
dec
mov
cmp
inc
mov
fidivrs
sahf
pusha
or
loopne
mov
addr16
cmp
adc
mov
jmp
sub
dec
in
icebp
mov
push
inc
push
push
imul
andb
fxch
mov
aas
mov
and
mov
ljmp
inc
xchg
jo
mov
fsubrl
test
pusha
fnstsw
push
and
add
loopne
push
cmp
ds
push
jno
loopne,pn
ret
push
push
adc
pusha
jne
adc
repz
repz
shlb
jmp
cmp
addb
shlb
push
cmp
add
mov
and
jp
cs
pusha
mov
adc
les
pop
dec
and
inc
inc
dec
or
and
push
andb
xor
mov
ror
mov
jg
add
mov
and
cmp
mov
mov
adc
mov
inc
jne
pop
arpl
clc
or
and
test
mov
insl
leave
mov
cltd
and
pusha
add
adcb
jo
push
xchg
dec
pushf
jns
sbb
or
mov
fcmovbe
cmp
in
aas
dec
cwtl
test
lret
mov
cli
repz
test
add
and
repnz
js
or
scas
sarl
xchg
jns
sub
loopne
or
rcr
add
test
add
push
mov
js
les
mov
push
mov
outsb
data16
imul
je
cmpsl
inc
outsl
xor
pop
cmp
mov
aaa
repz
xor
and
xor
popf
sbb
lea
popf
push
dec
adc
dec
shlb
adc
enter
sti
xchg
cmp
loopne
mov
xchg
test
inc
and
loopne
ror
ljmp
loop
test
mov
bound
xchg
test
inc
add
mov
cmpsb
inc
shlb
stc
xchg
pop
sbb
xorl
add
andb
push
sbb
shlb
sub
inc
js
jno
cmp
and
mov
or
adc
or
nop
fisttpll
mov
inc
out
cmp
xchg
out
int
shl
rolb
pusha
loopne
dec
arpl
inc
loopne
xor
jbe
add
cmp
mov
mov
and
ds
sbb
and
lahf
cltd
jp
call
sti
scas
int
pop
and
addr16
loopne
add
mov
sub
push
cmpsl
xchg
inc
adc
ljmp
jp
jmp
clc
adc
mov
or
orb
inc
dec
jecxz
inc
loopne
stc
outsl
test
dec
hlt
push
mov
dec
jne
ds
roll
outsb
popf
mov
dec
cld
fistps
shlb
popa
movsb
inc
pusha
out
and
addb
call
inc
fdivrl
rol
rcl
xor
dec
daa
xlat
push
dec
xor
cld
popf
xchg
std
enter
fsubl
mov
mov
inc
sahf
roll
push
xchg
sbb
shlb
xchg
push
pop
lds
mov
pop
mov
xor
and
fisubl
pop
inc
test
loopne
stos
dec
dec
cltd
bound
jb
cmp
push
andb
mov
inc
into
or
ja
sahf
add
loopne
inc
pop
push
ret
shlb
outsl
push
clc
repnz
nop
cld
jae
add
adcb
je
clc
repnz
nop
cld
jae
or
xor
add
clc
repnz
nop
cld
jae
test
push
mov
xchg
ret
add
add
pop
mov
clc
repnz
nop
cld
jae
add
add
in
leave
nop
jmp
fwait
add
subl
in
leave
nop
jmp
xchg
add
or
lret
clc
repnz
nop
cld
jae
add
mov
inc
push
add
push
mov
xchg
ret
fldl
fldl
hlt
sbb
sbb
push
nop
push
mov
leave
nop
jmp
add
jg
add
dec
cmp
add
clc
repnz
nop
cld
jae
inc
add
sub
mov
clc
repnz
nop
cld
jae
sub
dec
imul
cld
jae
je
mov
repnz
nop
cld
jae
xor
jg
or
and
clc
repnz
nop
cld
jae
fldl
add
sbb
cmpsl
fwait
clc
repnz
nop
cld
jae
add
add
inc
scas
add
push
clc
repnz
nop
cld
jae
inc
add
add
rcll
add
push
roll
int
fstpl
add
push
add
int3
icebp
leave
add
clc
repnz
nop
cld
jae
cmp
out
jg
ljmp
std
pop
clc
repnz
nop
cld
jae
add
add
push
add
sbb
nop
push
mov
leave
nop
jmp
hlt
inc
pushf
add
push
mov
push
mov
xchg
ret
push
add
push
or
fwait
cld
movl
jmp
inc
shll
sub
add
add
push
mov
xchg
ret
add
xchg
jns
cmp
lock
nop
nop
cld
jae
add
add
push
push
nop
nop
cld
jae
sub
scas
mov
mov
leave
nop
jmp
sub
fnstsw
popl
clc
repnz
nop
cld
jae
add
xor
add
jbe
clc
repnz
nop
cld
jae
xor
xchg
repz
nop
push
mov
leave
nop
jmp
dec
sub
ds
imul
inc
dec
add
inc
add
imul
es
nop
push
mov
leave
nop
jmp
dec
cltd
add
mov
lds
mov
leave
nop
jmp
mov
rorl
push
push
clc
repnz
nop
cld
jae
fisttpll
fwait
add
pop
pop
add
nop
push
mov
leave
nop
jmp
dec
jns
add
es
add
pop
add
clc
repnz
nop
cld
jae
inc
add
call
cld
jae
push
add
js
jg
jae
pop
pop
inc
add
mov
add
inc
insb
rorl
je
add
add
add
mov
push
mov
xchg
ret
mov
je
add
repnz
nop
cld
jae
lea
add
push
add
aas
mov
nop
push
mov
leave
nop
jmp
add
add
add
jns
add
or
sbb
add
add
repnz
nop
cld
jae
dec
roll
xor
inc
mov
clc
repnz
nop
cld
jae
roll
add
inc
xor
inc
pusha
mov
repnz
nop
cld
jae
add
add
div
nop
push
mov
leave
nop
jmp
inc
add
mov
mov
add
clc
repnz
nop
cld
jae
fldl
add
add
pop
rep
clc
repnz
nop
cld
jae
cmp
cmp
and
js
clc
repnz
nop
cld
jae
add
inc
sub
andl
aad
inc
add
add
push
push
inc
add
or
mov
push
nop
push
mov
leave
nop
jmp
push
fwait
inc
gs
mov
push
xchg
out
add
clc
repnz
nop
cld
jae
add
nop
push
mov
leave
nop
jmp
test
add
xchg
addr16
push
mov
xchg
ret
add
add
sbb
and
nop
jmp
pop
add
inc
mov
clc
repnz
nop
cld
jae
sbb
scas
stos
add
repnz
nop
cld
jae
xor
add
add
shll
rclb
add
and
xor
js
or
add
push
loopne
dec
push
movsl
pop
push
mov
xchg
ret
add
mov
out
or
add
push
cmp
add
xchg
add
push
mov
xchg
ret
push
add
xor
mov
push
mov
xchg
ret
add
dec
cltd
add
scas
in
ret
jae
loop
clc
repnz
nop
cld
jae
add
or
in
clc
repnz
nop
cld
jae
sbb
add
and
add
popa
push
mov
xchg
ret
inc
inc
add
add
loope
es
mov
push
mov
xchg
ret
add
add
add
add
pusha
shrb
sar
repnz
nop
cld
jae
add
add
add
rep
push
mov
xchg
ret
es
add
loope
xor
pop
popf
push
clc
repnz
nop
cld
jae
and
add
dec
scas
fidivrs
mov
clc
repnz
nop
cld
jae
mov
add
lea
ss
scas
mov
clc
repnz
nop
cld
jae
add
add
nop
push
mov
leave
nop
jmp
ljmp
add
xchg
nop
push
mov
leave
nop
jmp
add
add
add
push
rclb
cld
jae
pushf
roll
add
dec
sub
push
mov
nop
push
mov
leave
nop
jmp
add
add
inc
fisubrs
fistpl
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
sub
or
add
mov
clc
repnz
nop
cld
jae
gs
add
add
imul
nop
nop
cld
jae
add
add
dec
loope
mov
repnz
nop
cld
jae
sub
inc
hlt
add
push
cmp
jl
pusha
push
mov
xchg
ret
add
add
xchg
inc
ljmp
nop
push
mov
leave
nop
jmp
add
lea
add
insl
jne
clc
repnz
nop
cld
jae
stos
inc
fnsave
xor
nop
jmp
cmp
add
sub
mov
jb
sub
nop
nop
cld
jae
pushf
inc
add
inc
xor
pop
push
clc
repnz
nop
cld
jae
add
add
adc
pop
and
repnz
nop
cld
jae
add
add
cmp
repnz
nop
cld
jae
add
add
inc
fwait
stos
mov
nop
cld
jae
inc
sbb
push
addl
call
cld
jae
loope
add
add
rcll
jo
andb
test
push
mov
leave
nop
jmp
push
pushf
add
add
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
add
sub
mov
push
mov
xchg
ret
add
xor
add
push
clc
repnz
nop
cld
jae
inc
xor
add
xchg
add
je
add
clc
repnz
nop
cld
jae
roll
js
ljmp
add
repnz
nop
cld
jae
add
cmp
fadd
stos
nop
push
mov
leave
nop
jmp
add
inc
cmp
and
add
clc
repnz
nop
cld
jae
add
hlt
test
clc
repnz
nop
cld
jae
mov
push
dec
dec
ja
add
add
leave
nop
jmp
js
inc
add
add
inc
cs
nop
push
mov
leave
nop
jmp
push
inc
add
sbb
add
sarl
clc
repnz
nop
cld
jae
add
hlt
add
jmp
xor
inc
add
add
inc
push
add
iret
or
inc
add
add
and
hlt
jg
add
push
xchg
add
add
andb
pop
clc
repnz
nop
cld
jae
add
mov
jle
add
nop
jmp
add
add
repnz
nop
cld
jae
add
add
je
add
mov
stc
pop
add
push
scas
ljmp
mov
inc
ja
hlt
add
add
repnz
nop
cld
jae
add
inc
xor
push
mov
xchg
ret
add
add
push
inc
sub
hlt
arpl
nop
nop
cld
jae
add
scas
add
push
nop
push
mov
leave
nop
jmp
and
add
rcl
mov
adc
repnz
nop
cld
jae
and
xor
test
xbegin
jae
js
addl
and
imul
clc
repnz
nop
cld
jae
add
aaa
mov
clc
repnz
nop
cld
jae
add
add
jge
clc
repnz
nop
cld
jae
add
add
jg
adc
nop
nop
cld
jae
add
add
add
repnz
nop
cld
jae
sub
cmpl
jno
dec
cmp
repnz
nop
cld
jae
add
sbb
js
mov
inc
sbb
nop
jmp
fwait
add
dec
mov
in
leave
nop
jmp
pushf
add
mov
int3
out
push
inc
add
mov
add
xchg
cmp
add
clc
repnz
nop
cld
jae
cmp
dec
sub
clc
repnz
nop
cld
jae
add
mov
inc
add
call
nop
push
mov
leave
nop
jmp
cmp
pop
add
int
pop
jae
push
mov
leave
nop
jmp
fs
add
iret
push
clc
repnz
nop
cld
jae
sarl
mov
push
sbb
mov
xchg
ret
cmp
inc
add
add
addb
ljmp
jae
add
or
add
clc
repnz
nop
cld
jae
hlt
add
dec
nop
push
mov
leave
nop
jmp
add
cmp
dec
orl
push
mov
leave
nop
jmp
inc
scas
addl
and
cld
push
loopne
flds
ja
clc
repnz
nop
cld
jae
add
leave
push
clc
repnz
nop
cld
jae
fldl
pop
add
jl
xor
jns
inc
add
xor
cmp
sub
nop
nop
cld
jae
sbb
add
add
cmp
pushf
and
add
pushf
add
push
loope
add
repz
nop
push
mov
leave
nop
jmp
add
mov
mov
nop
push
mov
leave
nop
jmp
fldl
inc
add
mov
xchg
sbb
push
mov
leave
nop
jmp
mov
and
repnz
nop
cld
jae
je
fstpl
mov
or
in
leave
nop
jmp
jg
add
roll
inc
xor
in
leave
nop
jmp
add
push
or
fisttpll
nop
nop
cld
jae
shl
push
add
push
gs
clc
repnz
nop
cld
jae
hlt
gs
sub
repnz
nop
cld
jae
add
add
add
fwait
xchg
mov
nop
push
mov
leave
nop
jmp
pop
je
and
mov
nop
push
mov
leave
nop
jmp
add
add
test
repnz
nop
cld
jae
dec
add
push
in
mov
test
call
nop
jmp
je
rolb
clc
repnz
nop
cld
jae
add
fs
xchg
push
add
orb
aas
cld
clc
repnz
nop
cld
jae
addl
mov
popf
clc
repnz
nop
cld
jae
add
sbb
mov
loopne
xchg
mov
clc
repnz
nop
cld
jae
add
inc
add
add
add
dec
fisttpll
nop
nop
cld
jae
add
test
sbb
push
clc
repnz
nop
cld
jae
roll
add
mov
gs
add
rorl
sub
add
das
xor
push
mov
xchg
ret
mov
add
incl
add
nop
jmp
pushf
je
or
add
adcb
jmp
push
addl
andb
nop
nop
cld
jae
mov
sub
and
fld1
clc
repnz
nop
cld
jae
pop
inc
add
push
add
mov
clc
repnz
nop
cld
jae
add
gs
cmp
jae
add
push
mov
xchg
ret
add
add
and
nop
push
mov
leave
nop
jmp
rorl
out
jns
cmp
push
sub
pop
outsl
inc
add
add
fisubrl
inc
and
clc
repnz
nop
cld
jae
add
add
shrb
mov
clc
repnz
nop
cld
jae
dec
add
dec
inc
add
add
add
nop
push
mov
leave
nop
jmp
ljmp
repnz
nop
cld
jae
add
sbb
add
or
repnz
nop
cld
jae
add
outsl
pusha
clc
repnz
nop
cld
jae
inc
add
cltd
inc
add
add
push
mov
xchg
ret
mov
js
loope
sar
nop
nop
cld
jae
add
pop
addl
push
mov
xchg
ret
js
add
add
loopne
push
push
mov
xchg
ret
cmp
sbb
add
xor
cmp
repnz
nop
cld
jae
add
add
rclb
jns
clc
repnz
nop
cld
jae
inc
add
add
mov
clc
repnz
nop
cld
jae
mov
add
addb
fld1
nop
push
mov
leave
nop
jmp
js
add
add
push
push
mov
xchg
ret
add
sub
add
roll
repnz
nop
cld
jae
inc
add
dec
xor
clc
repnz
nop
cld
jae
fwait
add
jmp
jns
and
js
add
add
xor
andb
rolb
pause
push
mov
leave
nop
jmp
add
inc
roll
mov
imul
jp
add
xchg
ljmp
mov
clc
repnz
nop
cld
jae
pushf
add
pushf
jbe
push
push
mov
xchg
ret
add
roll
roll
add
rep
clc
repnz
nop
cld
jae
roll
add
add
mov
repnz
nop
cld
jae
rcrl
push
js
rol
clc
repnz
nop
cld
jae
sbb
add
mov
inc
mov
clc
repnz
nop
cld
jae
push
loope
add
add
push
push
mov
xchg
ret
xor
add
pop
add
add
dec
mov
clc
repnz
nop
cld
jae
js
mov
enter
dec
mov
push
mov
xchg
ret
jns
fwait
hlt
roll
inc
gs
clc
repnz
nop
cld
jae
mov
jns
add
push
mov
xchg
ret
dec
hlt
add
mov
arpl
sar
repnz
nop
cld
jae
add
cmp
add
clc
repnz
nop
cld
jae
pop
add
fwait
xchg
stos
pop
mov
jl
push
clc
repnz
nop
cld
jae
add
add
mov
or
xor
repnz
nop
cld
jae
add
stos
add
fwait
clc
repnz
nop
cld
jae
cmp
inc
inc
stos
repz
clc
repnz
nop
cld
jae
add
add
add
cltd
cwtl
call
inc
add
nop
jmp
loope
add
scas
or
repnz
nop
cld
jae
add
add
dec
and
add
stc
shr
push
mov
xchg
ret
hlt
roll
mov
add
fisttps
mov
leave
nop
jmp
inc
js
js
add
movswl
clc
repnz
nop
cld
jae
xchg
fwait
addl
push
add
repnz
nop
cld
jae
push
add
movsb
add
add
or
add
add
add
flds
nop
nop
cld
jae
push
cmp
ja
adc
clc
repnz
nop
cld
jae
fwait
jns
roll
add
repnz
nop
cld
jae
inc
add
dec
xchg
add
mov
push
mov
xchg
ret
or
inc
push
cmp
clc
repnz
nop
cld
jae
add
je
roll
test
nop
cld
jae
sbb
add
js
inc
jp
mov
pop
movb
sti
call
nop
jmp
sub
sub
nop
push
mov
leave
nop
jmp
add
xor
and
repz
repnz
nop
cld
jae
roll
xor
sbb
push
mov
leave
nop
jmp
stos
add
inc
add
add
jb
add
mov
xchg
ret
dec
add
add
sbb
pop
clc
repnz
nop
cld
jae
mov
test
nop
push
mov
leave
nop
jmp
inc
lea
inc
mov
nop
nop
cld
jae
lea
add
push
clc
repnz
nop
cld
jae
add
add
inc
add
add
stos
cmp
nop
push
mov
leave
nop
jmp
add
xchg
add
add
pop
clc
repnz
nop
cld
jae
addl
scas
pop
mov
sbb
clc
repnz
nop
cld
jae
sbbl
add
clc
repnz
nop
cld
jae
inc
inc
fnstsw
mov
nop
push
mov
leave
nop
jmp
add
add
add
push
mov
xchg
ret
add
add
add
dec
daa
pop
clc
repnz
nop
cld
jae
dec
js
hlt
inc
add
inc
dec
test
nop
push
mov
leave
nop
jmp
inc
xchg
add
add
mov
clc
repnz
nop
cld
jae
jg
roll
gs
imul
add
add
inc
add
add
add
leave
nop
push
mov
leave
nop
jmp
inc
dec
add
push
dec
imul
jae
add
add
add
out
jne
clc
repnz
nop
cld
jae
add
add
push
add
push
mov
xchg
ret
add
add
mov
js
pop
push
clc
repnz
nop
cld
jae
scas
or
xchg
clc
repnz
nop
cld
jae
inc
add
push
fucomp
add
xor
nop
nop
cld
jae
xchg
stos
hlt
add
sub
clc
repnz
nop
cld
jae
inc
add
cltd
jne
clc
repnz
nop
cld
jae
add
mov
and
nop
cld
jae
add
sub
add
mov
nop
push
mov
leave
nop
jmp
xor
xchg
hlt
pop
add
push
mov
xchg
ret
inc
sub
mov
add
cmp
ret
add
repnz
nop
cld
jae
js
add
sbb
clc
repnz
nop
cld
jae
cltd
scas
lea
lea
sbb
push
clc
repnz
nop
cld
jae
add
sbb
add
hlt
push
nop
push
mov
leave
nop
jmp
sbb
roll
add
add
jns
seto
in
leave
nop
jmp
inc
push
add
fstl
mov
xchg
ret
inc
add
push
cmp
add
jno
nop
push
mov
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
add
add
inc
sbb
mov
lahf
lea
push
mov
xchg
ret
add
push
add
inc
in
xor
add
clc
repnz
nop
cld
jae
add
out
mov
clc
repnz
nop
cld
jae
pop
xchg
inc
dec
hlt
pop
scas
add
mov
leave
nop
jmp
hlt
sub
and
mov
sar
repnz
nop
cld
jae
shrl
add
mov
mov
clc
repnz
nop
cld
jae
add
add
frstor
xor
clc
repnz
nop
cld
jae
xchg
or
cmc
je
nop
push
mov
leave
nop
jmp
fwait
inc
mov
je
clc
repnz
nop
cld
jae
shrl
add
clc
repnz
nop
cld
jae
add
pop
jle
fistpl
clc
repnz
nop
cld
jae
dec
add
add
inc
or
repnz
nop
cld
jae
push
mov
mov
push
mov
xchg
ret
fwait
inc
add
add
sbb
xor
sbb
clc
repnz
nop
cld
jae
add
jg
add
mov
clc
repnz
nop
cld
jae
add
inc
add
mov
repnz
nop
cld
jae
add
lds
mov
xchg
ret
sbb
je
addl
mov
clc
repnz
nop
cld
jae
lea
add
add
in
inc
adc
mov
xchg
ret
pushf
cmp
add
add
nop
loope
rcrb
push
mov
leave
nop
jmp
inc
or
add
lea
push
mov
clc
repnz
nop
cld
jae
addl
add
xor
push
mov
xchg
ret
inc
inc
inc
push
inc
pushf
xchg
dec
enter
push
clc
repnz
nop
cld
jae
mov
cmp
mov
mov
push
mov
xchg
ret
dec
jns
fwait
add
add
gs
clc
repnz
nop
cld
jae
add
pop
dec
push
nop
push
mov
leave
nop
jmp
shll
add
adcl
jae
and
loope
inc
adc
inc
add
and
sbb
xor
andb
and
cmp
nop
push
mov
leave
nop
jmp
add
je
push
xor
jecxz
and
incl
add
pop
addl
cltd
add
inc
adc
xchg
repnz
nop
cld
jae
rorl
inc
mov
push
mov
xchg
ret
inc
inc
add
add
mov
dec
ret
jmp
nop
cld
jae
xor
dec
loope
nop
push
mov
leave
nop
jmp
add
add
add
addl
clc
repnz
nop
cld
jae
xor
sbb
repnz
nop
cld
jae
hlt
push
subl
inc
jb
clc
repnz
nop
cld
jae
hlt
add
mov
push
mov
leave
nop
jmp
push
pushf
add
hlt
andl
in
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
xor
add
push
nop
push
mov
leave
nop
jmp
cmp
mov
add
inc
and
dec
push
pop
clc
repnz
nop
cld
jae
add
add
push
xor
push
mov
xchg
ret
add
add
xchg
fisubs
push
mov
xchg
ret
add
inc
stos
inc
mov
add
jp
pop
add
nop
push
mov
leave
nop
jmp
addl
xchg
decl
push
mov
xchg
ret
add
fwait
mov
push
clc
repnz
nop
cld
jae
add
ljmp
clc
repnz
nop
cld
jae
add
cltd
add
cld
pop
push
push
mov
xchg
ret
add
add
cltd
add
dec
daa
stos
push
mov
xchg
ret
add
add
pop
xchg
clc
repnz
nop
cld
jae
es
xchg
cmp
add
push
push
mov
xchg
ret
je
out
sub
inc
mov
mov
inc
add
pushf
xor
js
add
pushf
pop
lea
nop
push
mov
leave
nop
jmp
stos
inc
add
jb
add
push
mov
xchg
ret
sbb
add
add
sub
rep
clc
repnz
nop
cld
jae
xor
add
inc
mov
aaa
mov
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
push
inc
fucom
lea
add
in
movsb
nop
push
mov
leave
nop
jmp
push
fwait
add
fldl
add
and
dec
bound
xchg
ret
add
xchg
add
mov
push
mov
xchg
ret
add
inc
inc
fwait
addl
adc
mov
inc
add
add
sbb
nop
nop
cld
jae
add
lods
and
nop
nop
cld
jae
sbb
and
add
push
push
mov
add
nop
jmp
cmp
nop
push
mov
leave
nop
jmp
add
loope
add
inc
push
jno
add
clc
repnz
nop
cld
jae
ljmp
jne
nop
push
mov
leave
nop
jmp
addl
xor
sahf
fs
add
inc
gs
add
add
call
nop
push
mov
leave
nop
jmp
add
in
leave
nop
jmp
inc
inc
add
xchg
cltd
xchg
pop
push
mov
xchg
ret
sub
add
fwait
mov
xchg
mov
xchg
ret
add
shl
add
mov
in
leave
nop
jmp
add
pop
sub
std
add
clc
repnz
nop
cld
jae
js
jns
lcall
mov
adc
xlat
nop
push
mov
leave
nop
jmp
add
push
add
nop
nop
cld
jae
hlt
sub
add
mov
outsb
adc
clc
repnz
nop
cld
jae
gs
add
fldl
cmp
nop
nop
cld
jae
add
sub
inc
add
cmp
nop
push
mov
leave
nop
jmp
add
mov
nop
push
or
shl
add
clc
repnz
nop
cld
jae
add
dec
add
fsubrs
add
clc
repnz
nop
cld
jae
add
and
test
push
mov
xchg
ret
add
add
inc
fstps
mov
xchg
ret
je
inc
jg
add
js
test
nop
cld
jae
cltd
add
pushf
add
jns
xor
repnz
nop
cld
jae
mov
mov
lea
clc
repnz
nop
cld
jae
jns
fwait
fwait
mov
rorl
mov
xchg
ret
add
out
mov
test
in
clc
repnz
nop
cld
jae
addl
push
mov
xchg
ret
add
add
outsb
ljmp
add
loope
inc
sub
xor
pop
inc
add
cltd
sub
add
in
push
push
mov
xchg
ret
add
pop
js
add
dec
imul
clc
repnz
nop
cld
jae
stos
add
add
add
div
clc
repnz
nop
cld
jae
add
add
add
pop
inc
in
push
mov
xchg
ret
add
pop
sub
lea
nop
push
mov
leave
nop
jmp
add
stos
mov
mov
xchg
ret
inc
add
push
stos
add
lret
sub
nop
push
mov
leave
nop
jmp
sbb
or
add
call
clc
repnz
nop
cld
jae
and
cltd
pop
push
clc
repnz
nop
cld
jae
add
sub
add
inc
add
pusha
mov
xchg
in
leave
nop
jmp
sub
add
ds
push
clc
repnz
nop
cld
jae
inc
add
cmp
nop
cld
jae
mov
add
add
push
mov
xchg
ret
sub
inc
js
add
sub
clc
repnz
nop
cld
jae
add
add
fstpl
push
lods
push
clc
repnz
nop
cld
jae
add
je
dec
add
add
movb
mov
xchg
ret
add
add
ljmp
mov
xchg
ret
add
push
sbb
xorl
clc
repnz
nop
cld
jae
xor
inc
add
shlb
add
push
mov
xchg
ret
fnsave
add
test
push
xor
repnz
nop
cld
jae
add
fisttpll
call
clc
repnz
nop
cld
jae
inc
add
add
lret
clc
repnz
nop
cld
jae
pop
push
inc
add
add
jnp
nop
push
mov
leave
nop
jmp
pushf
push
add
sub
jns
andl
in
leave
nop
jmp
add
mov
nop
push
mov
leave
nop
jmp
stos
cmp
add
sub
sbb
clc
repnz
nop
cld
jae
addl
push
pusha
andb
repnz
nop
cld
jae
js
addl
nop
nop
cld
jae
mov
add
js
mov
loopne
cli
sahf
dec
mov
repnz
nop
cld
jae
add
inc
pop
test
push
mov
xchg
ret
dec
add
inc
inc
js
add
xor
mov
xchg
ret
add
add
hlt
add
inc
sub
clc
repnz
nop
cld
jae
test
ror
jne
clc
repnz
nop
cld
jae
push
add
dec
jmp
dec
add
add
sbb
hlt
xor
int3
lods
addb
push
mov
leave
nop
jmp
mov
add
push
mov
xchg
ret
add
add
add
add
add
andb
dec
push
clc
repnz
nop
cld
jae
add
add
sub
in
mov
nop
push
mov
leave
nop
jmp
add
add
dec
add
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
stos
je
add
repnz
nop
cld
jae
mov
add
add
hlt
mov
clc
repnz
nop
cld
jae
sub
and
add
push
push
mov
xchg
ret
inc
inc
push
add
push
sbb
nop
cld
jae
out
roll
sub
inc
add
ret
add
add
add
jns
add
add
add
add
stos
inc
and
lock
rep
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
cmp
add
jne
clc
repnz
nop
cld
jae
add
and
mov
clc
push
mov
xchg
ret
roll
add
pop
clc
repnz
nop
cld
jae
cltd
inc
pop
ljmp
lret
repz
repnz
nop
cld
jae
add
lea
mov
xchg
ret
cmp
loope
js
pusha
loopne
icebp
fwait
clc
repnz
nop
cld
jae
inc
add
add
add
push
clc
repnz
nop
cld
jae
hlt
jg
sub
add
addb
mov
sar
nop
nop
cld
jae
add
out
xor
pusha
clc
repnz
nop
cld
jae
cmpl
jg
add
clc
repnz
nop
cld
jae
pop
add
out
inc
add
clc
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
add
push
int
push
mov
xchg
ret
add
add
add
and
xchg
fsts
push
mov
leave
nop
jmp
inc
add
orl
repnz
nop
cld
jae
add
pushf
test
call
inc
add
out
add
xchg
push
mov
xchg
ret
add
add
js
ljmp
clc
repnz
nop
cld
jae
cmp
mov
iret
jne
clc
repnz
nop
cld
jae
out
add
clc
repnz
nop
cld
jae
add
xorl
clc
repnz
nop
cld
jae
add
dec
sbb
push
mov
leave
nop
jmp
cltd
jg
xor
clc
repnz
nop
cld
jae
add
inc
mov
mov
fstl
mov
xchg
ret
pushf
sub
add
add
and
push
mov
leave
nop
jmp
add
add
inc
js
subl
clc
repnz
nop
cld
jae
add
loope
stos
xor
xor
clc
repnz
nop
cld
jae
scas
out
loope
inc
pop
add
and
ret
clc
repnz
nop
cld
jae
add
jns
add
add
clc
repnz
nop
cld
jae
sub
add
sbb
clc
repnz
nop
cld
jae
test
inc
add
push
xchg
je
add
cmp
add
mov
mov
clc
repnz
nop
cld
jae
dec
roll
hlt
inc
gs
xlat
push
clc
repnz
nop
cld
jae
pop
add
sub
add
push
sub
loopne
lea
clc
repnz
nop
cld
jae
cltd
add
add
js
sbb
mov
leave
nop
jmp
add
or
add
insb
mov
add
repnz
nop
cld
jae
add
inc
sub
divb
add
loope
xor
mov
xchg
xchg
ret
push
add
inc
add
sub
std
sub
nop
push
mov
leave
nop
jmp
add
mov
nop
push
mov
leave
nop
jmp
add
add
test
add
rolb
nop
nop
cld
jae
xchg
add
add
pop
push
clc
repnz
nop
cld
jae
add
add
push
sbb
mov
clc
repnz
nop
cld
jae
pushf
stos
sub
inc
add
pusha
mov
add
nop
push
mov
leave
nop
jmp
add
inc
pop
push
clc
repnz
nop
cld
jae
inc
test
add
repnz
nop
cld
jae
addl
adc
mov
leave
nop
jmp
cmp
ljmp
add
clc
repnz
nop
cld
jae
add
shl
js
pop
leave
clc
repnz
nop
cld
jae
add
add
inc
add
cli
dec
xor
clc
repnz
nop
cld
jae
inc
cmpl
push
push
mov
xchg
ret
gs
hlt
inc
inc
inc
add
jb
loopne
push
xchg
add
clc
repnz
nop
cld
jae
add
scas
sub
clc
repnz
nop
cld
jae
inc
add
mov
hlt
lret
xchg
nop
push
mov
leave
nop
jmp
or
pushf
add
pop
mov
clc
repnz
nop
cld
jae
xor
inc
in
repnz
nop
cld
jae
cmp
add
push
push
mov
xchg
ret
pop
sub
add
fmuls
mov
xchg
ret
test
add
roll
add
cwtl
xor
mov
xchg
ret
add
mov
add
add
xchg
push
push
mov
xchg
ret
add
add
add
loope
push
push
mov
xchg
ret
dec
cltd
hlt
jns
inc
add
push
mov
xchg
ret
xchg
dec
push
cmp
push
push
clc
repnz
nop
cld
jae
add
dec
and
sub
ljmp
je
clc
repnz
nop
cld
jae
out
add
dec
nop
push
mov
leave
nop
jmp
add
mov
add
add
jmp
add
js
dec
mov
inc
fwait
scas
push
clc
repnz
nop
cld
jae
dec
add
inc
sub
mov
rorl
push
mov
leave
nop
jmp
inc
inc
inc
rcrl
add
push
mov
xchg
ret
add
cmp
clc
repnz
nop
cld
jae
js
roll
loopne
xchg
movsb
and
push
xor
mov
clc
repnz
nop
cld
jae
je
add
inc
jg
data16
add
nop
jmp
inc
add
push
cld
push
mov
xchg
ret
test
push
js
cltd
addl
mov
xchg
ret
xchg
inc
pop
add
add
gs
mov
and
pop
push
mov
xchg
ret
inc
mov
add
add
test
push
mov
xchg
ret
add
ljmp
je
add
repnz
nop
cld
jae
xchg
add
xor
inc
push
dec
clc
repnz
nop
cld
jae
xor
pop
hlt
mov
nop
push
mov
leave
nop
jmp
pop
add
sub
pop
addb
cmp
ret
sub
sbb
dec
out
add
push
clc
repnz
nop
cld
jae
add
add
inc
adc
repnz
nop
cld
jae
addl
sahf
push
icebp
mov
clc
repnz
nop
cld
jae
add
roll
mov
in
add
lods
and
sub
adc
stc
xchg
stc
inc
clc
repnz
nop
cld
jae
add
roll
add
add
pop
fwait
push
mov
xchg
ret
test
add
add
into
outsl
pop
push
mov
xchg
ret
add
add
add
sub
clc
repnz
nop
cld
jae
sbb
inc
add
repnz
nop
cld
jae
sub
add
add
sti
pop
push
mov
xchg
ret
add
sbb
fs
add
pop
clc
repnz
nop
cld
jae
xor
loope
inc
test
inc
xor
repnz
nop
cld
jae
add
add
roll
rcll
test
nop
push
mov
leave
nop
jmp
sub
shl
cmp
and
push
nop
push
mov
leave
nop
jmp
add
cmp
add
adc
aas
mov
clc
repnz
nop
cld
jae
add
jne
sar
repnz
nop
cld
jae
pushf
scas
inc
dec
hlt
add
sub
pop
es
and
jl
nop
push
mov
leave
nop
jmp
cmp
call
cld
jae
mov
add
add
nop
ret
movzwl
clc
repnz
nop
cld
jae
add
sbb
xchg
mov
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
in
pusha
rolb
add
repnz
nop
cld
jae
cmpl
pop
je
clc
repnz
nop
cld
jae
inc
add
ss
repnz
nop
cld
jae
or
cmp
out
sahf
adcl
nop
cld
jae
add
dec
push
add
imul
in
leave
nop
jmp
add
jns
add
dec
lods
rol
ret
add
clc
repnz
nop
cld
jae
roll
pop
add
pushl
clc
repnz
nop
cld
jae
stos
add
add
and
shr
addb
add
clc
repnz
nop
cld
jae
sub
add
add
loop
call
nop
jmp
pop
add
ljmp
mov
xchg
ret
inc
add
add
scas
sub
xor
clc
repnz
nop
cld
jae
mov
mov
add
sbb
faddl
push
clc
repnz
nop
cld
jae
add
add
sub
clc
repnz
nop
cld
jae
js
add
and
mov
lea
nop
push
mov
leave
nop
jmp
sbb
add
add
adc
repnz
nop
cld
jae
add
add
and
repnz
nop
cld
jae
fwait
add
fistpl
nop
push
mov
leave
nop
jmp
add
mov
inc
xor
repnz
nop
cld
jae
gs
add
inc
sbb
nop
nop
cld
jae
add
add
add
call
clc
repnz
nop
cld
jae
sub
pop
nop
push
mov
leave
nop
jmp
rorl
sbb
add
nop
push
mov
leave
nop
jmp
add
js
add
jne
clc
repnz
nop
cld
jae
es
out
data16
mov
mov
ljmp
imul
sbbl
hlt
add
inc
stos
jmp
sub
add
dec
cmp
add
ljmp
lock
mov
xchg
ret
add
add
ljmp
jmp
add
xor
add
inc
je
add
in
push
mov
xchg
ret
push
fwait
sub
add
jmp
out
clc
repnz
nop
cld
jae
pushf
roll
push
pop
add
test
test
cli
clc
repnz
nop
cld
jae
add
movzwl
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
sbb
xchg
hlt
add
sub
jne
push
mov
xchg
ret
add
fldl
add
mov
push
clc
repnz
nop
cld
jae
scas
add
cmp
jns
add
inc
and
clc
repnz
nop
cld
jae
push
add
inc
xor
fwait
nop
push
mov
leave
nop
jmp
add
cmp
inc
lcall
inc
add
fldl
push
inc
add
add
lahf
je
clc
repnz
nop
cld
jae
add
push
mov
leave
nop
jmp
add
rcll
cmp
xlat
lea
push
mov
xchg
ret
xchg
test
out
add
mov
nop
cld
jae
ljmp
mov
clc
repnz
nop
cld
jae
dec
fwait
sub
inc
insb
lcall
cld
jae
fwait
add
add
add
stos
clc
repnz
nop
cld
jae
add
inc
cmp
lcall
add
repnz
nop
cld
jae
pushf
cmp
pop
nop
push
mov
leave
nop
jmp
sub
jg
je
hlt
rcll
mov
push
mov
xchg
ret
add
add
lods
inc
and
mov
mov
push
clc
repnz
nop
cld
jae
sub
inc
mov
add
jae
repnz
nop
cld
jae
add
cmpl
repnz
nop
cld
jae
add
pop
hlt
add
add
clc
repnz
nop
cld
jae
mov
fstl
scas
pop
fld1
nop
push
mov
leave
nop
jmp
add
add
and
push
fs
repnz
nop
cld
jae
inc
xor
loopne
sti
fld1
clc
repnz
nop
cld
jae
inc
inc
cltd
ljmp
mov
xchg
ret
add
pop
sbb
rorl
rorl
add
clc
repnz
nop
cld
jae
sub
jg
add
jb
add
nop
push
mov
leave
nop
jmp
dec
add
add
je
mov
clc
repnz
nop
cld
jae
js
add
imul
clc
repnz
nop
cld
jae
add
add
jmp
add
add
add
je
add
ljmp
mov
leave
nop
jmp
shrl
inc
add
cmp
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
inc
hlt
cmp
dec
and
clc
repnz
nop
cld
jae
je
es
pop
push
mov
xchg
ret
je
jg
hlt
add
xchg
outsl
mov
clc
repnz
nop
cld
jae
dec
add
inc
sbb
mov
clc
repnz
nop
cld
jae
xor
test
mov
clc
dec
inc
clc
repnz
nop
cld
jae
add
inc
adc
test
clc
repnz
nop
cld
jae
add
sahf
xor
add
subl
lahf
xchg
movl
push
mov
leave
nop
jmp
scas
push
cmp
inc
hlt
inc
xchg
pop
daa
clc
nop
push
mov
leave
nop
jmp
push
push
inc
fwait
inc
test
add
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
mov
add
addl
cmp
ret
mov
add
add
adc
repnz
nop
cld
jae
dec
add
add
xchg
and
pop
fdivr
clc
repnz
nop
cld
jae
add
add
repz
clc
repnz
nop
cld
jae
jns
js
stos
roll
add
push
push
mov
xchg
ret
jns
add
push
add
push
clc
repnz
nop
cld
jae
add
js
inc
add
testl
xorl
add
add
mov
nop
nop
cld
jae
cmp
or
jbe
add
inc
add
inc
scas
push
add
into
xchg
xchg
push
dec
je
clc
repnz
nop
cld
jae
cltd
scas
sbb
xor
nop
nop
cld
jae
adc
add
push
clc
repnz
nop
cld
jae
js
push
add
inc
add
popa
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
cld
jae
inc
hlt
hlt
pop
mov
mov
leave
nop
jmp
xchg
add
adc
je
clc
repnz
nop
cld
jae
mov
add
pusha
sarb
jmp
inc
add
add
sarl
add
nop
nop
cld
jae
add
cmp
add
adc
repnz
nop
cld
jae
add
inc
add
lds
repnz
nop
cld
jae
add
add
ljmp
repnz
nop
cld
jae
cltd
cltd
inc
add
jns
nop
push
mov
leave
nop
jmp
xchg
inc
hlt
add
add
mov
in
pushf
scas
add
flds
mov
dec
dec
fistpl
clc
repnz
nop
cld
jae
out
add
add
push
or
and
in
leave
nop
jmp
dec
dec
cltd
pop
mov
add
push
mov
xchg
ret
add
add
cmp
clc
repnz
nop
cld
jae
add
cmp
add
add
shlb
nop
cld
jae
add
sub
inc
cltd
push
sbbl
nop
cld
jae
add
add
nop
nop
cld
jae
and
push
push
add
cltd
push
xlat
cmpw
clc
repnz
nop
cld
jae
gs
stos
clc
repnz
nop
cld
jae
inc
add
add
add
imul
in
leave
nop
jmp
fs
xchg
add
pushl
rclb
addl
cmp
ret
add
add
inc
adc
test
clc
repnz
nop
cld
jae
sub
push
es
jecxz
repnz
nop
cld
jae
dec
dec
add
sub
add
repnz
nop
cld
jae
inc
pop
fldl
mov
push
mov
leave
nop
jmp
scas
pop
add
fwait
add
clc
repnz
nop
cld
jae
es
inc
xor
repnz
nop
cld
jae
cmp
pop
add
call
nop
jmp
es
sub
nop
jmp
js
add
cmp
repnz
nop
cld
jae
add
add
and
nop
cld
jae
dec
xchg
lea
xor
clc
repnz
nop
cld
jae
add
add
add
add
sub
jle
clc
repnz
nop
cld
jae
add
inc
add
jne
clc
repnz
nop
cld
jae
add
cltd
push
popf
mov
push
mov
xchg
ret
add
add
and
mov
jne
nop
push
mov
leave
nop
jmp
add
add
roll
push
mov
clc
repnz
nop
cld
jae
inc
xorl
clc
repnz
nop
cld
jae
pushf
add
add
add
inc
mov
push
fdivr
clc
repnz
nop
cld
jae
sbb
loop
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
push
jns
cmp
clc
repnz
nop
cld
jae
add
sbb
or
clc
repnz
nop
cld
jae
je
add
addl
clc
repnz
nop
cld
jae
add
add
insb
jle
jbe
lea
mov
cmp
ret
sub
js
dec
xor
add
repnz
nop
cld
jae
add
add
and
clc
repnz
nop
cld
jae
test
sub
inc
loopne
pusha
mov
dec
jae
add
add
inc
js
add
lods
pop
push
mov
xchg
ret
add
add
jg
jmp
nop
cld
jae
add
fwait
add
mov
pop
add
push
mov
xchg
ret
add
add
mov
in
popf
lods
push
mov
xchg
ret
add
fwait
add
jmp
clc
repnz
nop
cld
jae
add
cmp
enter
in
dec
int3
inc
jbe
add
add
add
push
push
clc
mov
mov
dec
decl
pop
and
shlb
add
fsubrs
adc
adc
loope
aaa
push
inc
iret
pop
jne
dec
pop
repz
push
jns
add
loopne
jo
xchg
adc
loop
pushf
test
mov
andb
xchg
inc
ret
and
add
push
pushl
jmp
cmp
mov
andb
insb
int3
dec
addb
sub
inc
das
in
push
dec
mov
dec
in
xor
je
lret
outsb
stc
loop
mov
shlb
jmp
arpl
cltd
jbe
pusha
jns
faddl
push
inc
jge
into
jl
mov
sub
push
es
add
shl
mov
jle
mov
mov
aam
mov
push
add
stos
addb
mov
pushf
das
push
pop
cmp
mov
mov
sarb
mov
cltd
fwait
addb
jmp
mov
mov
mov
sbb
push
js
dec
fsubl
mov
mov
out
xor
shlb
xorl
adc
fwait
mov
out
std
insb
icebp
or
mov
inc
push
mov
rclb
sbb
aaa
adc
call
cmp
sti
xchg
sub
add
lahf
adc
pushf
outsl
idivb
xchg
sub
and
addb
dec
stos
test
inc
jb
and
shrb
cmp
mov
loopne
xchg
movb
jl
addb
inc
cld
add
inc
dec
jl
cli
inc
cmpsb
rolb
sti
lcall
cmp
pop
or
shl
inc
push
imul
and
xor
dec
push
addr16
sbb
add
inc
jle
in
xchg
and
and
ds
ljmp
and
xor
shlb
inc
push
out
mov
xlat
push
lret
xor
jle
dec
sub
fdiv
xchg
jno
fwait
loope
pop
fldl
lret
xor
or
add
inc
cmc
fs
mov
inc
rcll
mov
add
loopne
xlat
xchg
sbb
dec
xor
enter
pop
xchg
and
loopne,pn
test
loopne
inc
mov
pusha
loopne
jecxz
sbb
adc
pusha
pop
pop
sahf
in
or
rorl
addb
xchg
and
cmp
lods
mov
xchg
aad
jp
and
mov
loop
js
cmp
adc
or
add
xor
rclb
movsb
pusha
sar
mov
sbb
sub
inc
push
inc
cmpb
and
add
cmp
add
shrb
mov
dec
push
sti
or
clc
xor
add
pusha
pusha
adc
inc
inc
test
mov
les
and
inc
adc
cli
jle
popf
cmp
pop
add
add
mov
fstps
mov
cld
sahf
xchg
and
lods
cmpsl
lds
sahf
push
loopne
dec
dec
sahf
cmc
addb
movsb
and
int
test
pusha
addb
xor
ret
adc
or
pusha
jge
sti
xor
jg
inc
push
and
inc
pusha
xor
cld
jge
jns
pop
sub
loopne
pop
test
xor
mov
fisttpl
fbstp
cmp
and
xorb
mov
sbb
sti
insl
pushf
in
into
cwtl
mov
int
and
mov
cmpb
push
add
sbb
add
loopne
mov
loopne
xchg
cmp
fildl
sbb
adc
dec
imul
jl
shr
sub
mov
lds
dec
mov
aad
lahf
dec
aas
jne
mov
and
or
and
jp
inc
pop
loopne
dec
jle
sahf
jge
inc
mov
xchg
pop
mov
rolb
cmpsl
std
test
mov
lods
and
mov
pusha
loopne
or
jo
xchg
arpl
xor
hlt
and
insl
fwait
sub
cmp
fmuls
add
xor
andl
mov
or
pusha
pop
cs
mov
cmp
dec
pop
ljmp
loopne
or
outsb
xchg
aam
inc
stos
adc
lods
shl
movsl
cmp
cli
movsb
add
movsl
push
inc
pusha
outsb
aas
outsl
je
push
xorl
and
jle
xor
and
and
test
mov
and
aas
daa
and
notb
mov
inc
outsb
negl
hlt
je
popf
dec
push
pop
ds
loopne
mov
or
sbb
jno
pusha
add
jns
inc
ret
inc
jns
add
mov
into
jl
adc
sub
lock
ljmp
out
pusha
pusha
jp
jle
inc
pop
and
shrl
loope
int
mov
ljmp
hlt
ja
jbe
jp
popf
ret
inc
inc
pop
xor
addl
ror
imul
in
adc
and
loopne
jbe
pop
enter
fisubrs
pusha
std
mov
sbb
loopne
cmc
push
inc
daa
pop
add
mov
pop
pop
dec
xchg
aaa
out
jp
shr
fistpl
lock
sub
rclb
and
inc
and
push
loopne
sbb
cmpsb
loopne
xor
stos
and
rol
cs
bound
into
dec
rcrl
addps
shl
insl
pusha
cmp
mov
add
loopne
jo
sub
loopne
or
ret
sbb
add
aaa
xor
or
pop
not
jb
pop
and
inc
add
add
jno
pushf
xchg
inc
hlt
sbb
inc
loopne
test
js
cltd
xor
mov
sub
inc
outsl
imul
mov
mov
adc
andb
cmp
loopne
pop
push
inc
jp
sub
sbb
jne
clc
sub
inc
mov
pop
sub
sub
add
inc
and
jno
ds
and
mov
pusha
jp
hlt
xchg
mov
aaa
pop
adc
push
fdivl
rolb
xchg
into
inc
pop
fsub
jmp
sub
addb
add
daa
andb
icebp
lcall
inc
add
add
loopne
ret
and
adc
adc
and
out
mov
pusha
cmp
xor
mov
jo
pop
adc
andb
adc
fs
ss
inc
imul
fisubs
inc
inc
fidivl
add
icebp
andb
mov
cmp
loopne
int
sbb
mov
pusha
jg
and
outsl
inc
test
inc
pusha
xor
data16
rol
mov
jp
mov
fstpl
add
sbb
orl
mov
inc
adcb
mov
ret
xchg
sarb
test
add
push
addb
andb
mov
jne
push
add
shlb
mov
inc
xchg
mov
leave
arpl
adc
push
outsl
sub
clc
add
inc
add
loope
add
jg
pusha
cmp
inc
mov
cmpl
fisubrs
rcrb
adc
data16
add
out
add
inc
fcmovnb
xor
and
fisttpll
or
mov
lcall
push
in
into
or
mov
test
and
inc
dec
cmc
or
jo
mov
push
inc
loopne
inc
shlb
loopne
rclb
hlt
pop
mov
push
xchg
mov
dec
jae
fs
adc
add
cs
mov
push
mov
mov
dec
insl
add
sub
shlb
hlt
adc
call
popf
dec
in
mov
pop
fs
xor
shlb
faddl
mov
pusha
mull
push
mov
int
rol
xchg
push
rolb
inc
and
out
cwtl
rclb
movl
dec
and
sbb
inc
gs
xor
aad
push
mov
inc
cmpsl
jmp
pusha
mov
sbb
sbb
das
cld
loope
sbb
xchg
sub
rolb
cwtl
pop
aas
cmp
icebp
pop
inc
mov
pop
addb
sarb
and
inc
pushf
inc
test
loopne
cmpsl
dec
sysexit
dec
add
xchg
aaa
push
rolb
rolb
lahf
mov
loopne
test
in
or
popa
inc
cwtd
lahf
out
pop
mov
loope
mov
loopne
or
icebp
mov
mov
aas
pop
mov
mov
jl
sub
jne
clc
loope
outsb
inc
jb
xor
lods
and
bound
inc
jl
xor
mov
leave
push
cmpsl
mov
in
aaa
test
insb
cmp
cmp
mov
mov
cmp
add
inc
sbb
addl
rclb
mov
cmp
pusha
dec
xor
repnz
lds
mov
push
dec
sbb
sahf
push
lea
out
and
loopne
sub
inc
push
xchg
pop
jg
in
inc
xchg
cmc
push
xchg
movsl
mov
and
sbb
stos
daa
insb
and
sub
inc
cltd
push
xchg
cmc
xchg
pop
test
and
adc
adc
jb
pop
adc
add
gs
in
out
mov
lret
jbe
sarl
add
jnp
jge
cmp
mov
mov
add
mov
and
dec
scas
xchg
mov
and
jmp
je
fcoml
xorl
sbb
xor
repz
and
or
scas
incb
pusha
in
icebp
and
fdivrp
addb
sub
loopne
es
rcr
xchg
aam
repz
push
mov
clc
push
in
jnp
inc
mov
fldenv
xchg
cmp
jg
ljmp
and
lea
adc
popa
cvtps2pi
cmpsb
mov
mov
pusha
insb
shll
pusha
fst
arpl
andb
inc
dec
adcl
add
xchg
xor
addb
out
les
mov
ret
cmp
add
cmp
loopne
leave
mov
mov
pop
jb
add
std
push
popf
dec
cmp
cwtl
iret
into
cmp
ss
iret
stc
shrl
or
mov
imul
or
mov
loopne
mov
pop
addr16
jg
rolb
rol
xchg
mov
push
iret
inc
test
imul
insb
xor
or
add
shlb
add
xchg
dec
or
inc
push
jp
ret
or
mov
loopne
mov
aad
adc
adc
shlb
pusha
sbb
popa
push
cld
add
and
cld
xchg
mov
std
adc
popa
pop
mov
psrlq
xchg
repz
int
aam
dec
cwtl
test
dec
leave
lahf
iret
sub
loopne
ret
scas
rolb
or
insb
jecxz
shlb
subb
add
or
subb
ret
pop
ljmp
cltd
pop
fwait
xor
gs
push
mov
xor
mov
pusha
mov
fcoml
and
mov
loop
add
mov
out
lahf
clc
xor
outsl
cmp
loopne
hlt
pushf
mov
outsb
in
aad
shlb
loopne
lahf
inc
test
and
inc
aas
aam
movsb
inc
add
mov
addb
andb
add
cmc
push
add
pop
adc
or
popf
sub
jmp
inc
mov
xchg
jg
bnd
fldt
pusha
mov
adc
mov
xor
pop
int
inc
subb
data16
shl
add
inc
mov
rol
xchg
mov
and
stos
inc
add
subb
pusha
loopne
movsl
lock
aas
popa
cltd
dec
add
adc
cs
add
add
out
pop
push
jge
cmc
shlb
lds
fisttpl
cmp
pop
div
adc
add
push
fldl
inc
sbbb
mov
das
sti
in
ror
mov
jle
test
test
push
adc
hlt
je
pusha
faddl
in
mov
rolb
xchg
movb
stc
pop
adc
pop
sahf
mov
ret
mov
imul
leave
pop
mov
jne
push
lret
lret
sbb
mov
inc
dec
repz
movsb
and
jg
mov
and
rcl
dec
out
mov
xor
cld
outsl
push
shlb
rolb
pusha
and
mov
fwait
cmpsb
inc
mov
rcll
aad
mov
inc
and
mov
pushl
add
sub
cmpsb
inc
addb
xor
sti
fnsave
imul
and
or
adc
add
andb
sub
pusha
enter
sub
repnz
into
dec
fsubrs
push
icebp
inc
mov
sub
mov
pushl
fwait
push
inc
cmpb
mov
aam
and
or
adc
pavgw
pushf
jg
andb
andb
pop
daa
scas
call
div
aad
xchg
mov
add
mov
decl
xchg
cmc
leave
pop
and
or
xorb
imul
cmp
jno
push
pusha
xor
das
or
cwtl
and
scas
and
mov
lods
loopne
xchg
data16
xchg
jmp
ret
icebp
mov
ljmp
inc
dec
pop
jecxz
fisttpll
loopne
mov
andb
cmpb
fdivrl
ret
inc
mov
jae
rolb
mov
jno
clc
xor
mov
or
outsl
xchg
xchg
and
pusha
inc
or
xorl
and
mov
pop
mov
push
insl
outsb
test
inc
sub
mov
pop
daa
mov
cli
push
sub
add
and
loop
jns
and
inc
sub
shlb
adc
roll
insb
jmp
inc
xchg
sub
rolb
repz
inc
pusha
sbb
sarb
mov
sti
ret
or
inc
insb
jecxz
leave
sarb
jmp
jno
inc
cmpsl
pusha
push
loope
addr16
aas
sbb
mov
mov
aas
cmp
and
push
cmpsb
loopne
cld
imul
jo
inc
inc
sub
mov
push
pop
insb
dec
imul
jns
out
ss
or
add
and
adc
and
stos
and
cmp
daa
fdecstp
aas
icebp
sbb
popa
xchg
or
inc
push
arpl
ret
pop
gs
adc
and
pop
xor
mov
add
bound
sub
pusha
sahf
mov
in
sbb
loop
jne
insb
fisttpl
mov
and
sub
push
sti
jnp
addr16
andb
out
push
sbb
and
iret
push
shlb
mov
shrb
loopne
fiaddl
mov
aad
adc
mov
outsl
scas
mov
jns
cli
insl
fnsetpm(287
push
mov
cmp
inc
lds
mov
hlt
cmp
push
jne
inc
mov
sub
mov
cmp
addb
fiaddl
mov
adc
push
and
inc
adc
ret
mov
cld
mov
adc
popf
push
loopne
loope
add
xchg
rolb
mov
xor
lock
daa
and
xchg
sub
dec
inc
xor
loopne
fs
add
add
mov
out
and
shlb
loopne
pop
stc
adc
and
and
int3
push
addb
xchg
aam
inc
shrl
pop
js
push
mov
out
jne
add
sub
dec
sub
enter
test
push
test
lods
push
daa
xchg
push
sub
and
mov
shr
std
push
or
mov
and
mov
outsb
add
loopne
push
add
sti
push
sbb
sbb
cmp
pusha
pusha
nop
loopne
adc
pop
and
fldcw
cmp
mov
pop
fisubl
lret
or
loop
mov
sahf
loope
pop
je
ds
sar
xchg
enter
dec
pushf
xor
mov
lret
lcall
sub
pusha
rcrb
hlt
nop
mov
and
pusha
shll
divl
lahf
mov
sarl
int
mov
pop
xor
loop
add
add
inc
add
shrb
andb
mov
loopne
sahf
and
ror
xlat
lds
inc
inc
pusha
imul
mov
and
push
data16
das
mov
jp
jp
mov
inc
loop
cmpsb
and
clc
stos
aad
int
sbb
cmp
mov
mov
lea
lahf
pop
mov
sub
dec
push
mov
cmp
neg
push
dec
in
inc
adc
fcoml
aad
cmp
push
inc
sub
sti
xchg
test
mov
xchg
movsl
cmpsb
inc
loopne
or
mov
or
xchg
sub
jg
adc
movsb
add
xor
mov
inc
xor
imul
rcll
push
push
into
gs
loopne
incl
stc
mov
les
inc
pop
mov
pushf
or
loopne
fists
ds
daa
or
andb
ja
or
sub
scas
push
imul
into
cmpsb
addb
rcr
jge
pushf
bound
loopne
jno
mov
ds
addb
jb
lret
sbb
push
add
push
and
lds
and
pusha
and
adc
cmpsb
inc
mov
pusha
and
pop
insl
and
ret
and
sbb
xchg
mov
sub
inc
or
pop
sub
pusha
pushf
push
and
out
xchg
orl
cld
imul
add
xor
lahf
loop
xchg
inc
and
push
enter
and
ds
dec
stos
loopne
leave
inc
ljmp
adc
adc
jp
mov
add
jg
outsl
add
repz
movsl
mov
cmpsl
daa
das
pusha
inc
mov
jnp
inc
andb
and
imul
mov
loopne
push
sbb
call
mov
loopne
pop
inc
dec
into
test
ret
loopne
fwait
shlb
loopne
out
or
pusha
and
push
push
inc
dec
pop
int3
movsb
pusha
loopne
cmp
push
mov
mov
std
fisttpl
push
ljmp
pop
imul
out
add
and
shlb
add
and
fcompl
add
addb
shlb
addb
sbb
pusha
pop
sbb
lahf
cmpsb
and
mov
paddq
loopne
into
jns
lahf
leave
sub
mov
int3
outsb
icebp
cli
lahf
and
inc
scas
push
xchg
inc
ds
add
add
and
loopne
sar
aaa
fcoms
in
andb
inc
pop
jo
add
dec
xor
mov
lret
cmpsl
sbb
and
mov
idivl
dec
inc
mov
iret
inc
loop
addb
adcl
sbb
inc
inc
inc
add
andb
rorb
and
inc
imul
lds
push
inc
and
adc
add
stc
gs
mov
pop
decb
jae
inc
inc
sbb
out
test
bound
inc
mov
lods
mov
rcrl
sub
andb
shlb
inc
sub
cltd
xchg
shlb
mov
add
push
fwait
inc
push
add
je
add
and
inc
lret
fimull
mov
popf
sarl
mov
cmp
mov
iret
loope
outsl
push
dec
cs
add
or
sti
mov
xor
sub
flds
and
in
js
in
lock
andb
addb
and
jg
js
xor
popf
xor
addb
xlat
add
inc
dec
inc
adc
pusha
add
push
dec
lock
push
xor
jb
sub
rolb
sti
movq
sub
add
xor
out
mov
loopne
xor
andb
repnz
mov
stos
pusha
add
dec
jp
inc
xchg
mov
cmovnp
xor
inc
lahf
xor
and
lock
imul
xchg
mov
loopne
xlat
cmp
push
inc
ficomps
fwait
iret
int
rcrb
addb
sbb
adc
mov
mov
inc
push
pop
jmp
outsw
or
inc
add
lods
inc
loopne
rolb
xlat
shl
push
cmp
out
dec
and
pop
pop
or
mov
loopne
ss
or
int
call
dec
ret
lret
scas
and
iret
inc
cwtl
mov
icebp
or
iret
cltd
cmp
addb
mov
enter
jb
xchg
xchg
inc
xchg
jmp
rolb
scas
andb
mov
subl
aas
data16
loopne
dec
pop
movsb
shlb
inc
int
pusha
add
pop
ja
fsubl
enter
add
mov
out
out
push
jno
xchg
dec
cmp
pusha
and
inc
inc
add
add
or
pusha
scas
inc
cmpb
into
lret
lret
addb
pusha
mov
xor
out
out
cmpsl
or
and
and
cmp
addr16
mov
mov
push
stos
and
hlt
xchg
jle
int
mov
repnz
into
popa
fsubs
jmp
push
or
inc
mov
rolb
jle
pusha
nop
aaa
push
data16
xchg
cmp
fsubs
dec
scas
mov
pusha
cli
fbstp
rcll
lahf
push
scas
inc
cmpsb
pusha
rcl
ja
dec
jmp
add
sbb
mov
add
xchg
add
movsb
shl
stos
test
add
imul
ljmp
outsl
pop
cmpsb
mov
add
push
mov
push
adc
push
fs
xlat
jns
popa
mov
cmp
or
pusha
stos
push
mov
stos
adc
pop
xchg
dec
xchg
out
pusha
and
sbb
add
repnz
jnp
push
shl
ja
mov
in
pop
inc
mov
mov
or
and
rolb
xor
loopne
mov
negb
inc
or
add
jne
addb
loopne
pop
jmp
mov
add
fcoml
mov
fldt
mov
lahf
mov
imul
jle
in
nop
sbb
hlt
inc
adc
add
shlb
add
xchg
push
addb
flds
mov
pop
dec
mov
push
sub
andb
push
add
inc
pop
iret
in
adc
xchg
daa
ja
dec
xor
and
add
rcrl
jne
andb
dec
loopne
hlt
test
inc
and
jl
add
mov
fstps
jno
adc
sbb
shrb
mov
cmp
adc
cwtl
mov
jbe
cmp
mov
mov
lret
out
lret
mov
mov
or
and
add
mov
inc
pop
repz
and
mov
imul
sub
mov
xchg
pop
adc
dec
arpl
inc
mov
insl
jmp
xchg
pusha
mov
addb
rolb
fsubr
shr
scas
pusha
add
mov
sub
inc
mov
mov
cld
sub
pusha
jp
gs
adc
mov
pusha
add
cld
ret
arpl
cltd
cs
repz
pusha
mov
pusha
xchg
scas
inc
mov
mov
imull
inc
fs
mov
and
push
push
add
pushf
fidivl
mov
ljmp
inc
inc
cld
inc
push
adc
loope
mov
add
mov
fisubl
mov
add
mov
movsb
add
lods
add
and
mov
out
sub
add
mov
inc
popf
ret
dec
pop
inc
mov
in
inc
out
fadd
stc
je
and
decb
add
aam
mov
add
push
pushl
call
shrb
fbstp
and
scas
and
rorl
shlb
out
mov
pusha
cmp
xchg
je
faddl
cwtl
gs
in
push
outsb
cli
cltd
lret
test
and
lret
arpl
andl
mov
and
mov
sbb
adc
xchg
scas
in
jp
add
xchg
mov
add
jmp
js
mov
mov
pop
mov
loopne
add
push
aaa
and
sbb
jb,pt
aaa
dec
sub
pusha
cli
bt
xchg
cmp
imul
or
fcomps
jge
cmp
pop
inc
pop
adc
xchg
aaa
xchg
loope
dec
push
pushf
jge
add
mov
out
in
push
sbb
fsubp
xchg
push
clc
dec
xor
imul
loopne
jg
add
inc
mov
cmp
add
sarb
fwait
lods
and
fistps
inc
push
pusha
add
jae
add
inc
fwait
out
mov
inc
std
or
xchg
loope
nop
mov
and
rcrl
iret
aas
rcll
in
data16
push
adc
xchg
inc
or
inc
sbb
loopne
test
rolb
pusha
aad
test
and
nop
dec
int
mov
add
push
mov
xchg
add
xor
imul
pusha
jg
lahf
adc
xchg
jnp
and
pusha
jno
add
shrb
xchg
jp
or
pusha
cmp
push
jnp
cmc
dec
imulb
xor
mov
clc
push
add
jg
cmp
shlb
sub
inc
mov
clc
outsb
sbb
mov
rorb
mov
mov
lret
fcomip
popf
adc
aaa
jbe
push
sbb
popa
insl
xchg
cld
pushf
je
sbb
push
mov
sub
and
xor
test
inc
mov
push
mov
andb
cmpl
xchg
and
ds
adc
rorb
cmp
pusha
sarb
inc
cmp
dec
ror
mov
cs
ljmp
or
addb
lret
mov
mov
mov
add
mov
mov
in
jg
jnp
pusha
rcrb
loopne
pop
or
cs
inc
dec
cmpl
out
sbb
orb
inc
iret
xchg
sub
shlb
insb
or
rcrb
mov
inc
dec
add
pop
test
pusha
repnz
push
pushl
mov
fsts
andb
dec
mov
scas
sub
cs
outsb
scas
pop
push
hlt
cwtl
or
movsb
loopne
das
daa
pop
addl
out
gs
mov
or
sbb
push
sub
mov
mov
into
les
and
mov
shll
pusha
cmpsl
js
mov
lea
jns
xchg
jp
outsb
and
add
divl
fld
mov
xchg
mov
and
add
cmc
adc
jb
insb
call
and
movsl
stos
pusha
inc
sbb
hlt
mov
stc
loopne
mov
lret
jp
and
cli
repnz
jg
scas
shl
out
push
cli
scas
loopne
cmpsb
shl
cmp
cmp
sub
mov
sbb
pop
stc
mov
pusha
adc
rolb
mov
inc
cld
stc
int
aaa
cld
loope
loopne
push
dec
hlt
fildl
add
sbb
pop
pop
popf
mov
inc
push
fsubp
dec
loope
in
pop
push
xor
pop
add
cmpsb
mov
sbb
and
fsub
data16
shlb
repz
dec
dec
push
pusha
and
push
fdiv
daa
xor
out
or
loope
popa
lds
icebp
jmp
lret
not
aad
in
dec
ja
jnp
or
jno
push
cmc
mov
jo
je
pop
or
sarb
or
mov
mov
adc
mov
jnp
adc
mov
rclb
addb
shll
shll
inc
ljmp
jo
loop
in
imul
mov
lea
jno
test
dec
repnz
out
pop
aaa
push
mov
mov
jl
sti
hlt
dec
and
repz
rolb
cmpsb
inc
pusha
outsb
notl
xchg
dec
cmc
ror
sbb
and
movsl
movsb
and
mov
cmp
xor
mov
pop
fildl
xlat
mov
pop
lods
inc
adcb
int3
and
ds
out
mov
push
mov
and
fisubl
add
pusha
enter
rol
jl
movsb
rolb
sbb
shl
xor
push
add
add
or
int3
xchg
rol
add
mov
mov
inc
mov
orl
insb
xor
xlat
scas
add
mov
pop
xlat
jg
mov
and
mov
stos
cmp
dec
imul
mov
rcl
jbe
add
push
and
mov
ret
xor
lret
cmpsl
lret
sub
xor
sub
or
test
add
pop
xchg
inc
inc
and
in
pusha
pusha
fs
mov
pusha
cmp
and
shrb
andb
mov
cwtl
test
inc
aaa
pop
add
jmp
dec
mov
pusha
inc
lret
pushf
lock
fwait
int3
je
mov
xor
and
loopne
test
cltd
outsb
cmp
mov
inc
mov
addb
fbstp
mov
jl
add
jbe
add
andb
imul
rcrb
xchg
shrb
mov
movsl
sbb
loopne
sbb
dec
gs
in
sub
incl
loopne
xor
dec
fdivrl
int3
lcall
add
ret
and
cltd
mov
mov
lcall
mov
in
xor
mov
subl
inc
inc
fstps
mov
fdivrl
and
out
and
sub
and
rolb
popf
jmp
mov
pop
mov
stos
sbb
dec
outsl
cwtl
pusha
je
std
xchg
push
scas
mov
push
and
loopne
cli
or
rolb
icebp
in
pushf
imul
mov
cmp
adc
addb
rcll
fnstcw
scas
outsl
lcall
mov
and
dec
pop
sub
xchg
xor
cmp
outsb
ret
add
loopne
push
push
pusha
mov
andb
add
clc
setae
inc
pop
sbb
inc
test
loopne
rol
fcomp
cmpsb
add
xor
andb
mov
jp
ret
pop
pop
ret
mov
fistps
data16
add
pop
xchg
xorl
mov
inc
loop
adc
mov
push
test
inc
test
shlb
or
addr16
rolb
dec
jg
stos
arpl
pusha
loopne
aam
sbb
fwait
movsb
inc
loopne
push
ret
je
sub
push
andb
pop
or
lds
add
mov
div
mov
scas
add
jp
xchg
sub
aam
mov
outsb
xor
insb
arpl
and
fildll
dec
stos
and
jnp
push
ljmp
dec
sbb
out
xchg
add
push
push
push
addb
sahf
pop
xchg
shr
fsubs
inc
inc
adc
add
adc
or
int
gs
sub
add
subb
mov
scas
shlb
mov
dec
es
push
gs
sub
mov
loopne
adc
jo
xchg
inc
ret
mov
xchg
cmpsl
cmc
pop
push
outsb
inc
test
mov
or
mov
aaa
enter
ja
cmp
pusha
loopne
movsl
inc
stos
inc
rclb
stos
and
hlt
sbb
cmpsl
mov
mov
add
pop
adc
dec
sahf
sbb
add
jecxz
movsl
repz
xchg
xchg
sub
loopne
jmp
fs
pusha
mov
push
shlb
mov
xchg
adc
mov
and
pop
sahf
cmp
add
adc
add
rol
xor
loopne
cld
adc
jno
jmp
repnz
pusha
cmp
cld
out
fs
mov
push
mov
loopne
mov
add
in
cmp
out
adc
cmc
adc
add
mov
outsb
push
shlb
in
lahf
movsl
in
je
jns
repnz
movsl
xlat
adc
push
jbe
andb
push
sti
ljmp
addr16
cltd
mov
and
lds
rcrl
xchg
jo
push
mov
push
addb
mov
pusha
add
xchg
xchg
pop
stos
mov
cli
or
inc
subl
or
rcrb
cltd
int
mov
xchg
int
xorl
imul
or
sbbb
mov
leave
cmpsb
add
scas
mov
cld
ljmp
push
cmp
xchg
mov
and
addl
xlat
jp
lock
out
push
cwtl
movsb
mov
mov
and
lods
sbb
cwtl
and
jb
add
sarb
ret
add
fwait
scas
fistps
imul
xchg
cs
add
scas
add
sahf
mull
fistps
inc
add
mov
aad
icebp
sbb
or
or
push
jge
xor
std
mov
iret
iret
loope
mov
pop
movsl
sbb
ficoms
cmpb
repz
jecxz
jo
and
das
add
xchg
adc
iret
stc
mov
and
in
mov
and
dec
pop
cmpsb
mov
lods
int3
cmp
js
or
mov
shlb
cwtl
ss
ja
and
cmp
aam
nop
jmp
mov
jge
loopne
ror
xchg
xchg
shlb
js
xor
add
cmp
les
xchg
fisubl
adc
push
push
imul
add
add
imul
mov
push
js
ja
mov
pop
in
jle
and
inc
mov
dec
mov
and
mov
shr
es
mov
test
pusha
pop
xor
shlb
rorl
dec
in
mov
mov
loope
pop
mov
push
xlat
insb
inc
adc
mov
stos
pusha
mov
aam
sub
imul
popa
int
and
out
inc
scas
jg
subl
inc
out
sub
and
pop
dec
notb
test
jnp
andb
xchg
addl
xchg
lock
fisubrs
loopne
pop
shll
xor
mov
addb
fdivs
mov
shl
movsl
sbb
insb
xchg
aas
adc
mov
or
lods
xchg
nop
add
sub
dec
sarl
mov
and
call
shlb
loopne
inc
jecxz
arpl
and
pusha
inc
dec
sbb
andb
test
ja
frstor
fs
mov
dec
out
dec
inc
xchg
and
addb
inc
imul
jmp
add
shl
loopne
mov
and
fwait
shlb
sbbb
cmp
lcall
mov
sbb
adc
loopne
xor
and
adc
jnp
and
cmp
arpl
cltd
add
arpl
fsub
js
inc
inc
jbe
mov
add
cmpsl
int3
loope
movsl
aad
jmp
je
popa
lahf
pusha
std
jle
add
or
loopne
cmp
in
adc
mov
push
adc
and
inc
outsb
adc
and
mov
xor
in
xlat
mov
loop
or
and
test
out
inc
shrb
inc
clc
cld
add
ss
mov
inc
xchg
dec
sub
loopne
and
xchg
jge
loopne
mov
loopne
repz
dec
popa
andnps
data16
dec
stc
les
cli
lret
les
add
int3
pop
mov
inc
inc
jecxz
sbb
xor
pop
lock
int
pop
pop
mov
adc
loopne
int3
out
inc
dec
scas
rolb
push
scas
loopne
mov
jnp
mov
or
xchg
pop
cmp
loopne
rcll
dec
and
fcoms
inc
mov
test
addb
xor
insb
push
mov
sbb
sbb
dec
or
loopne
andb
add
mov
lea
sbb
sub
pusha
pop
sbb
clc
movsl
xchg
sub
loopne
test
loopne
mov
shrb
xor
imul
montmul
cmpsb
andb
cmp
es
stos
adc
std
or
inc
lret
jle
mov
pusha
sub
jne
clc
push
leave
scas
mov
jl
inc
add
inc
fmull
lea
es
mov
andb
popf
cmp
stos
loopne
ja
adc
add
push
add
cmp
pop
jle
dec
lods
mov
cwtl
ja
xor
xlat
clc
mov
or
adc
adc
lret
or
std
pop
sbb
push
scas
push
xchg
pushf
and
rcrb
xor
add
stos
pusha
and
into
sbb
or
and
jmp
mov
mov
cmpsb
shlb
es
in
jo
shlb
in
js
pop
fnstsw
and
jle
and
loopne
dec
push
shlb
stos
mov
fstl
add
fst
lods
push
mov
das
repz
xchg
sar
xchg
out
in
rolb
or
add
and
js
xor
add
xor
gs
xor
xchg
or
xor
bnd
lods
mov
mov
pusha
adc
add
add
test
std
dec
dec
pop
add
lea
andb
jl
pusha
push
jns
cmp
mov
std
les
sub
add
inc
loopne
jecxz
inc
pop
rcrb
sub
cmpsb
inc
inc
sub
nop
jp
add
dec
push
scas
inc
mov
push
shll
pusha
xchg
mov
xor
cmpsb
and
sti
pop
dec
nop
push
pusha
and
add
rorb
addb
outsb
push
in
mov
lcall
mov
push
mov
out
popa
jb
sub
add
cmpb
ss
loop
push
enter
arpl
cmp
sbb
inc
xorb
jle
lds
or
rorb
inc
mov
sub
sub
mov
repnz
cmp
inc
jmp
out
test
add
mov
daa
movsb
mov
dec
xor
mov
aas
out
bound
mov
mov
les
rolb
js
jne
and
add
and
mov
add
push
mov
pop
ss
mov
cmp
jmp
cltd
jg
pop
jg
pop
fwait
xchg
lea
dec
enter
inc
mov
mov
dec
jmp
loopne
outsl
insl
rorl
or
mov
and
jmp
adc
pop
jae
sbb
mov
cmp
pop
das
mov
mov
or
pusha
dec
lds
pop
push
mov
loopne
sub
repz
adc
aad
jg
mov
mov
mov
jecxz
mov
ret
stos
and
pushf
fwait
mov
lods
adc
push
test
inc
rolb
jo
or
pop
mov
dec
jno
mov
daa
xchg
loopne
mov
mov
fisttpl
out
rolb
popf
inc
mov
icebp
cmpsb
loopne
mov
shrb
xor
cli
out
in
inc
inc
popa
rclb
inc
push
or
push
and
or
loopne
stc
fwait
lret
inc
je
insl
out
cmpsb
loopne
adc
repz
iret
dec
inc
xchg
sbb
and
pop
cmp
pushf
mov
dec
push
or
pusha
cmp
movsb
mov
sbb
imulb
xorl
out
addb
mov
fisubrl
and
xor
pushf
test
pop
push
mov
in
lret
inc
lea
push
sub
and
cltd
jno
mov
iret
mov
fbld
paddq
lcall
dec
dec
cmpsl
dec
jle
mov
mov
mov
mov
out
inc
push
aaa
add
push
jg
fucomp
inc
push
mov
loopne
cmp
add
out
xlat
and
xchg
xor
repz
mov
mov
movsl
andb
jmp
fsts
popf
xchg
sti
xor
lea
shlb
add
mov
and
addb
cmp
jae
jmp
iret
testl
mov
push
into
xor
sbbl
lcall
repnz
arpl
push
sbb
cmpsb
mov
mov
lret
add
call
rcrb
lcall
les
xchg
dec
mov
adc
icebp
cwtl
jmp
pusha
das
xchg
icebp
sub
add
mov
adc
cli
mov
pusha
and
inc
loopne
inc
push
and
scas
ds
inc
je
push
and
mov
rcrl
mov
movsl
inc
push
pusha
add
shl
test
add
aad
and
mov
rcrb
push
sbb
add
xchg
dec
jge
add
cmpsb
add
mov
mov
arpl
aad
in
inc
jae
sub
jne
loopne,pn
jl
andb
pusha
dec
sbb
invd
rolb
xchg
xchg
aas
idiv
jl
loop
sub
mov
es
adc
pop
adc
add
pusha
jle
xchg
outsb
cmp
mov
push
repz
mov
loop
xchg
push
sub
mov
xchg
lcall
dec
pop
push
mov
lock
pop
imul
add
out
icebp
inc
jne
aaa
popa
lds
xchg
test
and
stos
mov
mov
push
inc
in
outsb
push
mov
lret
imul
add
pop
pop
stc
xor
ds
sub
xor
int3
push
mov
mov
loop
ret
and
dec
push
ss
mov
xchg
cmpsb
rolb
mov
out
jecxz
jno
cld
mov
cld
hlt
mov
dec
pop
das
out
or
cwtl
rcr
sarl
inc
cmc
nop
pushf
xchg
or
mov
pop
daa
xlat
pusha
jae
sub
add
daa
das
jp
rolb
mov
push
mov
mov
add
scas
add
and
inc
rclb
daa
adc
pop
xor
std
pushf
inc
mov
loopne
mov
push
sub
iret
mov
and
inc
mov
xchg
mov
add
ja
popa
pop
or
push
fdivrs
les
rcrb
roll
jae
jo
dec
aas
push
xchg
fisubs
sahf
pop
addr16
nop
pushf
jnp
ror
test
cmc
mov
pusha
rcr
lcall
lahf
add
rolb
pop
jb
dec
stos
loopne
outsb
mov
inc
in
movsb
inc
and
or
push
dec
sbb
xchg
popa
inc
lahf
add
sub
rol
out
pop
jbe
cltd
loope
stos
add
dec
inc
es
pusha
imul
cmp
lret
in
dec
jbe
add
rolb
shlb
pop
sub
inc
adc
and
mov
fsub
xor
pop
adc
pop
mov
xchg
add
lods
inc
and
shlb
dec
and
mov
sub
movsb
shl
jecxz
sahf
mov
inc
mov
pusha
add
pop
insb
data16
cmc
lret
shrl
and
cli
cmp
add
cmp
dec
test
mov
faddl
addb
shlb
inc
inc
inc
sub
orb
js
sbb
cmp
push
or
inc
addb
pop
pop
mov
clc
jg
push
in
clc
iret
cmp
testb
iret
movsl
arpl
cwtl
je
scas
sub
push
push
fisttps
scas
sbb
clc
test
mov
dec
xchg
pop
pop
movsb
mov
ret
mov
movsl
xchg
imul
adc
popa
mov
ja
jle
sbb
dec
push
jb
loope
inc
fwait
pushf
mov
jb
lock
add
add
mov
pusha
mov
add
imul
fwait
push
ret
popf
push
dec
sbb
push
add
adc
sub
aam
daa
cli
sub
and
and
aas
xor
jl
loope
loopne
stos
push
or
fsubl
jb
lock
ret
xchg
inc
stc
or
and
fwait
and
gs
and
pusha
mov
sbb
mov
ljmp
dec
jbe
in
mov
and
pushf
dec
push
aas
ret
inc
mov
lahf
loop
mov
outsl
lods
imul
and
add
sub
jns
rolb
outsl
fnclex
out
push
data16
xor
andb
pop
xor
lock
and
add
mov
iret
and
shlb
push
fucomip
mov
mov
and
imul
cltd
insl
mov
pop
mov
push
add
dec
arpl
jge
outsb
imul
cmpsb
mov
cmp
cmpsl
sub
inc
sub
add
pusha
sar
ja
xchg
stc
out
pop
dec
icebp
call
dec
mov
pusha
dec
lods
jb
sbb
sub
rol
cli
sbb
xchg
movsl
inc
in
std
aas
mov
pop
pop
lds
add
into
mov
rolb
pop
es
push
rolb
pusha
adc
rorb
inc
lods
add
popa
aas
nop
and
loopne
mov
jbe
in
mov
mov
frstor
inc
add
das
je
cmp
mov
jb
mov
aad
sbb
pusha
and
gs
cmp
mov
cmp
pop
or
cmpb
jge
mov
stos
add
inc
adc
dec
jl
loopne
pop
aam
and
sti
fcomps
jp
loopne
pop
fst
push
loopne
push
cmp
xor
inc
std
inc
dec
adcl
addb
shlb
or
mov
inc
mov
ret
mov
xchg
xchg
rcll
inc
pop
push
push
and
int3
jne
dec
mov
loopne
and
loopne
iret
xor
adc
es
add
pusha
andb
jg
add
inc
sbb
adc
push
ljmp
loopne
sahf
mov
xchg
inc
aam
cltd
stos
inc
orb
lea
dec
jo
movsl
movsl
std
enter
xchg
mov
inc
in
cmpsb
add
addr16
pusha
pop
push
shlb
jecxz
and
add
loop
mov
rol
ret
fwait
inc
jmp
mov
scas
sub
add
jle
sbb
adc
xchg
push
ljmp
pop
ss
pop
sub
inc
xchg
mov
push
out
jl
mov
mov
and
jbe
dec
rol
mov
adc
or
and
adc
mov
lock
aam
mov
cmp
lret
or
jmp
lock
rorb
add
jne
cwtl
mov
inc
rcrb
popa
sub
enter
out
sub
repnz
mov
scas
xchg
mov
shr
insl
aas
mov
pop
xor
add
sahf
cmp
jno
insl
repz
mov
pop
or
mov
inc
push
xor
jl
out
cmc
cli
ds
movsl
adc
andb
pusha
dec
sbb
mov
popa
xchg
rol
cli
movsb
inc
loopne
push
aad
push
sub
xchg
pusha
repnz
adc
aas
outsl
data16
repz
sbb
lret
jecxz
sbb
xchg
push
inc
mov
sub
and
sbb
out
inc
lods
xchg
pusha
and
nop
or
inc
mov
gs
shrb
lods
loopne
int3
data16
and
loopne
les
lea
add
xor
lret
jae
mov
and
mov
jb
xchg
pushf
lcall
pop
repz
push
mov
mov
dec
fcmovb
adc
sbb
not
xchg
aam
inc
mov
rclb
sub
addr16
std
xchg
push
mov
movsl
or
pop
imul
and
or
sbb
and
jno
outsl
cs
repz
ds
push
je
shrl
mov
sbb
rorb
pop
stos
add
sbb
mov
pop
xor
jno
mov
pop
lea
cmp
lcall
rolb
and
lcall
inc
adc
sahf
bound
pusha
pusha
mov
dec
test
adc
jl
mov
movsb
mov
dec
add
je
ss
push
outsl
out
pop
xor
fcom
stc
pop
mov
je
adc
xchg
fnstsw
dec
pop
je
pop
shlb
and
and
jne
push
addb
xchg
leave
and
loopne
xchg
xlat
lods
loopne
adc
xor
int3
add
scas
rolb
xor
lds
loopne
dec
jmp
sarb
sub
push
mov
rcll
sbb
jge
xchg
or
pop
xchg
sarb
and
lods
dec
mov
outsb
sub
jecxz
jno
and
pusha
andb
test
loopne
hlt
mov
pusha
add
sub
dec
jg
pusha
ror
int3
adc
lret
or
inc
mov
in
jmp
je
test
jmp
jle
inc
cmpsl
lret
mov
jne
cmp
dec
push
mov
loopne
pop
rolb
add
and
rclb
iret
movsl
jo
mov
mov
mov
push
loopne
idivl
xor
rclb
outsb
jne
int3
scas
mov
inc
mov
add
fisttps
sub
and
pusha
or
fsubr
mov
les
and
clc
test
jo
cmpsl
icebp
push
dec
adc
mov
shlb
ret
rcr
add
and
jecxz
pushf
push
ret
call
pusha
shlb
pusha
cli
mov
pop
add
mov
sub
fnstcw
data16
dec
roll
mov
loopne
aad
mov
inc
xchg
imul
fnstenv
jle
insb
push
dec
sub
roll
push
cld
jo
fsub
xor
xor
cmpsl
cmp
mov
and
cmp
pop
pop
dec
and
xor
in
js
jg
lds
jo
xchg
mov
popf
rcrb
pop
inc
fiaddl
pop
icebp
or
loopne
dec
nop
push
jge
inc
loopne
div
xchg
popa
notl
mov
mov
int
adc
mov
xor
xchg
nop
lock
push
sbbl
cltd
mov
pop
icebp
rcr
mov
inc
rorb
loopne
xchg
jmp
mov
inc
gs
xchg
mov
roll
lock
fldt
mov
pusha
and
mov
es
shrb
jae
sbb
addb
xchg
repnz
out
or
out
js
and
sub
cmpsb
addb
sub
loopne
push
mov
movsb
rol
mov
adcb
in
imul
add
mov
and
pusha
and
inc
inc
ficompl
jb
lcall
and
mov
add
aas
cmp
push
add
outsb
sub
and
or
cltd
jg
pop
xchg
jg
call
insb
enter
mov
mov
mov
xchg
adc
cli
xchg
stos
insb
adc
inc
imul
xchg
test
add
out
or
loopne
mov
pop
mov
mov
mov
and
mov
add
mov
shlb
lcall
sbb
in
cmp
test
sti
mov
mov
movsl
insb
cmp
insl
clc
inc
xchg
repnz
imul
xor
enter
aad
xor
add
mov
mov
push
jecxz
loopne
stos
push
and
inc
adc
imul
clc
xchg
cld
add
rol
repnz
and
mov
and
fidivrs
jge
mov
pusha
subb
adcb
rcrl
aad
js
lods
shlb
add
mov
mov
fs
jl
rorb
xor
stc
cli
add
cmp
out
push
sbb
mov
jmp
mov
inc
add
mov
out
jg
and
aam
mov
pop
fs
and
mov
xchg
jl
pusha
or
sbb
loopne
lods
inc
pusha
xor
sbb
xor
mov
fadd
mov
cmp
push
add
in
fs
mov
or
out
pop
inc
add
ja
into
fisubrl
pop
sbb
addb
dec
popa
add
add
push
mov
mov
jns
out
pop
inc
test
lahf
xlat
push
fidivl
jne
ret
xor
xchg
insl
test
jne
add
pop
xchg
dec
decl
scas
pusha
and
xor
push
repz
rorl
add
andb
xchg
loopne
jno
add
pop
call
nop
aaa
cmp
out
adc
movsb
loopne
inc
push
add
mov
test
and
xchg
adc
loopne
mov
mov
outsb
adc
inc
daa
add
mov
mov
pop
sub
subb
or
pop
lods
add
mov
mov
bound
insb
fwait
sbb
loopne
sti
fildll
mov
pusha
fld
cli
insl
dec
test
inc
add
shll
test
sub
shrb
rolb
imulb
pop
stc
cwtl
xchg
xor
vpminub
push
add
mov
inc
shrl
fs
add
sub
xor
mov
in
in
addb
adc
inc
xchg
mov
add
insl
push
mov
xchg
add
pop
cwtl
imul
ja
aam
dec
sbb
add
out
enter
lds
loopne
mov
lds
enter
insb
push
pusha
inc
in
dec
mov
mov
xor
xchg
cmp
mov
push
scas
xchg
add
loopne
adc
adc
jmp
loopne
loopne
mov
sbb
cs
cmpb
inc
fldenv
mov
sbbb
inc
push
xor
std
lods
add
fisttps
dec
xchg
jno
sub
call
lret
dec
xchg
lods
ljmp
call
call
js
arpl
rep
add
inc
in
out
and
loop
ficompl
jecxz
mov
sarb
add
and
add
pusha
pusha
rolb
add
sbb
push
mov
nop
inc
xchg
out
pusha
and
mov
shl
mov
adc
roll
add
or
inc
pushf
pop
cmp
add
arpl
jl
cmc
andl
push
les
cmp
jb
lret
push
fs
andb
inc
int3
mov
jb
mov
loope
sti
inc
push
fimuls
and
pop
je
scas
rolb
mov
sub
andb
xchg
jo
lds
stos
push
and
add
xchg
or
nop
sahf
fdivrp
jne
call
inc
adcb
add
mov
jl
ja
push
or
pusha
dec
jecxz
cmpsb
and
shll
and
andb
les
mov
in
sbb
ja
cmp
inc
mov
icebp
clc
pop
sar
call
leave
lret
xor
add
pusha
inc
mov
lds
cmp
sbb
xchg
stos
test
inc
adc
in
mov
cmpsb
and
je
inc
sbb
and
push
jns
outsl
push
pop
ret
jbe
push
xlat
add
in
movsl
movsl
or
icebp
leave
and
inc
cwtl
mov
aam
add
mov
into
cli
add
loopne
fbstp
pop
sti
fisubs
and
loopne
mov
shll
and
mov
inc
cmpsb
mov
sbb
mov
in
add
je
add
adc
and
loop
and
mov
xor
mov
out
ret
mov
and
xchg
test
imul
int3
jp
pusha
and
jno
or
add
test
jno
pop
nop
dec
sbb
popa
sbb
xchg
aad
leave
add
lcall
jecxz
cmc
mov
cltd
jp
int
mov
ficompl
adc
adc
add
sbb
stos
mov
loopne
call
inc
dec
lret
test
popf
push
sub
fdivp
sbb
sub
inc
mov
arpl
and
sti
rcrb
cmpsl
xor
mov
shlb
out
mov
cmp
and
inc
pop
popf
push
mov
add
add
mov
es
add
pusha
inc
xchg
gs
cs
inc
pop
pop
xor
pusha
pusha
repnz
shll
div
fwait
mov
inc
sarb
outsl
rol
sbb
out
cmp
add
inc
loopne
stos
loop
jae
xor
or
shlb
dec
xor
push
addb
orb
popa
adc
cmpsb
mov
ljmp
cwtl
orl
sub
push
pop
jecxz
insl
xchg
andb
adc
enter
pop
fmull
pop
repnz
aas
rep
js
jl
push
rclb
lret
mov
push
rcll
sub
jae
push
push
fcmovnbe
ljmp
fistpll
mov
movsl
pop
shrl
loope
push
and
ret
pop
aaa
pop
out
int3
sarl
add
mov
push
mov
cwtl
imulb
stc
push
pop
clc
jo
movsb
add
shl
inc
sub
or
mov
mov
les
xchg
jge
inc
add
and
pop
rol
push
and
or
sbbl
jg
jle
arpl
or
mov
ret
andb
ss
loopne
pop
mov
pusha
inc
gs
jl
inc
roll
mov
shlb
ret
xchg
and
add
mov
loopne
aaa
rcll
lock
out
cmc
ret
addr16
subl
jo
aam
and
cmp
mov
mov
in
pop
aas
push
lea
fistps
push
or
inc
xor
inc
push
or
xchg
in
mov
push
rolb
xchg
dec
int
sub
mov
loopne
add
test
mov
jo
pusha
add
rorb
scas
and
scas
inc
subb
leave
push
jne
insl
mov
and
fmull
add
cltd
xor
or
std
test
lcall
jle
mov
dec
xchg
loope
bnd
add
or
shlb
push
fdivp
dec
push
mov
add
pop
ret
std
ficoms
pushf
movsb
loopne
lock
addr16
add
or
mov
mov
mov
int3
outsl
cld
dec
ret
mov
add
loopne
sub
inc
sub
and
out
xchg
jae
or
enter
or
add
pusha
pusha
fildl
shlb
jb
flds
add
sub
lds
lods
rcll
sub
sarb
add
orb
js
and
jge
leave
lock
addb
mov
push
lcall
or
aad
mov
inc
and
push
xchg
pop
int
add
icebp
cmpsb
inc
rcr
pusha
and
add
and
int3
jae
dec
and
lret
ss
mov
add
mov
inc
pop
daa
shr
insb
ret
dec
nop
popa
pop
add
mov
shll
lods
add
mov
je
push
jns
pusha
shrb
int3
fsubrl
stos
mov
add
or
cmpb
ret
repnz
mov
jp
and
loopne
or
shrb
pop
jmp
enter
sbbb
and
lahf
xchg
pop
int3
or
rorb
cmp
insb
shlb
inc
jns
push
ds
add
push
movsb
loopne
or
shlb
loopne
jl
sub
pusha
jnp
push
lcall
in
xchg
xor
arpl
xchg
cmp
and
imull
add
std
js
adc
cs
pusha
sub
and
jp
and
inc
mov
push
pusha
pusha
movsl
xchg
stos
sub
push
xchg
jbe
test
xor
mov
add
xor
mov
les
pop
mov
xor
mov
shl
clc
mov
inc
push
mov
add
lds
mov
ja
mov
ret
cmpsb
mov
or
mov
idivb
aas
ret
fldl
pusha
add
rolb
jl
xor
add
cwtl
pop
mov
dec
arpl
sahf
add
jnp
out
enter
sahf
adc
and
push
or
in
repnz
and
dec
lods
jnp
dec
inc
fldl
outsl
in
adcl
addb
adc
fadds
inc
clc
ret
lods
xor
inc
or
pusha
insl
js
shrl
mov
add
out
cli
ljmp
testl
mov
imul
cmpsl
faddl
push
adc
aad
adc
fidivrl
rol
lret
daa
and
and
pusha
mov
fdivrl
or
stc
rorb
loopne
test
shrb
pusha
loop
mov
daa
sub
rorb
push
inc
inc
inc
hlt
addl
jp
jns
lahf
pop
xor
pop
mov
cmp
jmp
xlat
sbbl
or
inc
push
shlb
adc
mov
fs
int
les
fwait
dec
js
repz
iret
add
inc
loopne
or
add
pushf
push
jmp
pop
int
lcall
popa
cmp
mov
cmpsl
mov
out
xchg
pusha
ficoml
cmc
fildll
mov
roll
adc
mov
cs
and
push
shlb
or
cmp
pop
mov
and
xor
push
pop
fstl
jne
xor
stos
fidivrs
push
add
add
cmpb
mov
sahf
push
inc
jo
mov
mov
sbb
mov
out
imul
iret
lret
push
leave
icebp
pushf
cmp
inc
inc
cld
mov
jne
hlt
ret
arpl
aaa
add
and
sub
cmp
inc
icebp
aam
pop
sbb
or
sbb
int
and
add
and
sub
adcb
loopne
inc
movsb
loopne
faddp
xlat
mov
cmovge
cmc
into
dec
dec
xchg
aaa
jnp
adc
xchg
push
pop
out
clc
addl
repnz
repnz
cmp
add
das
inc
sub
iret
jg
repz
and
addb
inc
std
mov
mov
pop
sbb
mov
sbbb
xor
push
or
pusha
sub
add
loop
add
outsl
push
test
add
pop
rol
adc
pop
pusha
aas
xchg
lods
and
jp
pop
xchg
cmp
cli
lahf
sub
scas
arpl
mov
rcrl
push
shrb
out
addr16
push
pusha
stc
out
fstpl
mov
dec
lock
sbb
sbb
loopne
and
mov
gs
xlat
mov
jmp
fdivrl
movsl
adc
jle
push
and
pop
dec
sarl
pop
test
inc
cld
xor
sub
loopne
pop
aaa
loope
cmp
push
inc
stos
add
mov
fbstp
mov
dec
xchg
js
daa
xor
or
push
and
andb
loopne
pop
test
push
rclb
push
mov
pop
xchg
add
inc
jecxz
cld
in
jmp
ret
lret
mov
and
xchg
repz
imulb
ds
jno
lahf
jns
and
andb
sahf
sahf
or
rclb
daa
pop
sbb
dec
cmpsb
and
inc
add
mov
data16
andl
cmpb
add
and
cltd
push
cmp
inc
xor
sbb
popf
mov
shlb
push
cmc
mov
rclb
sbb
es
and
or
dec
sti
mov
clc
pop
push
loopne
mov
dec
movsl
popa
mov
mov
fbld
hlt
andb
cmp
or
std
popa
push
jl
pusha
pusha
icebp
pop
jns
xor
cmp
mov
aam
mov
jo
fcomi
dec
rcl
push
ljmp
fdivs
mov
fildll
mov
andl
aad
fwait
mov
and
add
loopne
nop
shll
stos
andb
inc
sarb
inc
fistl
sub
and
add
push
adc
rolb
push
xor
sti
and
inc
gs
cmp
lret
xor
jne
in
in
mov
pusha
push
adc
jg
xlat
or
add
sbb
push
popf
mov
loopne
bnd
xchg
dec
jnp
push
test
pusha
mov
rolb
jge
insl
mov
mov
xchg
aas
test
inc
aad
data16
cmpsb
inc
shl
cmp
add
rolb
xor
fldenv
pop
mov
mov
mov
jg
inc
ljmp
xchg
add
loopne
xlat
imul
fimuls
fst
inc
adc
mov
mov
and
addb
or
inc
loopne
cmp
sarb
arpl
inc
pusha
push
int
loopne
nop
insl
je
outsb
cli
pop
rorl
mov
mov
and
lcall
sub
addb
mov
inc
cmpb
repnz
and
jnp
popf
rcr
jecxz
pusha
ficoml
jae
andb
out
add
pop
cmp
dec
xchg
out
xchg
xchg
or
and
fidivrs
inc
les
lcall
xchg
jmp
lret
xor
sahf
das
and
pusha
cmc
cmp
mov
mov
rolb
inc
loopne
add
add
pop
sbb
ret
dec
adc
cltd
test
inc
add
scas
addb
lcall
in
aad
enter
pusha
cmpsb
inc
loopne
or
mov
pop
mov
cmpsl
lods
aad
aad
and
or
inc
test
and
sbb
cld
adc
add
inc
ss
xor
rsqrtps
jae
andb
fldt
push
movsl
cmp
arpl
aas
notl
aaa
dec
or
stos
and
insl
adc
push
test
stos
and
fs
push
rolb
adc
jo
mov
sbb
add
int3
insb
dec
mov
mov
inc
push
cmc
lods
popa
movb
and
sbb
inc
mov
mov
fstpl
fstpt
mov
es
fcompl
jp
loop
loopne
mov
popa
in
jl
mov
push
and
inc
sbbb
iret
xchg
inc
addr16
cmpsl
pop
adc
data16
jp
inc
cld
mov
and
into
pop
mov
add
lods
push
xor
out
xor
dec
shll
xor
loop
fidivl
jbe
mov
enter
pop
faddl
into
mov
shlb
jo
sahf
hlt
sbb
loope
mov
sbb
sarl
enter
test
ficomps
adc
jle
mov
and
cmp
push
sub
and
pop
scas
outsl
add
mov
loopne
das
inc
xchg
lods
push
hlt
lea
jecxz
mov
fimull
mov
dec
aam
and
enter
or
sbb
jns
xor
inc
xlat
or
pusha
dec
in
outsl
mov
adc
ss
insb
ja
dec
pop
lret
sbb
mov
pusha
lods
and
pusha
stc
sbb
pop
andb
mov
mov
andb
xor
add
sbb
add
mov
cmc
inc
cmp
or
rclb
add
loopne
or
adc
jmp
inc
in
subl
and
dec
in
mov
push
xor
sub
loopne
stos
ljmp
inc
test
inc
insl
or
fidivl
cmp
mov
jmp
jae
cld
xor
cs
and
loopne
imul
mov
mov
lret
fldenv
loop
sub
add
insl
mov
int3
iret
pop
mov
xchg
mov
sub
cmpb
rclb
pusha
add
arpl
enter
push
fcom
sar
gs
xchg
clc
cmpsb
addb
aaa
push
ljmp
enter
mov
xchg
sbb
add
repz
pusha
mov
out
movsl
xlat
pop
fs
fistps
mov
cmp
rcl
mov
fstpl
push
inc
std
lds
mov
cld
int3
pminsw
push
add
or
xchg
adc
pop
andb
xchg
jne
aaa
and
iret
insb
add
push
scas
pusha
rol
sbb
push
movsl
fidivrs
das
fnstcw
add
pusha
push
mov
int
cmpsb
pusha
rclb
jne
xor
rclb
add
xchg
stos
sbb
cltd
mov
loopne
loope
xchg
add
ret
fwait
jp
xchg
fists
jg
mov
pusha
push
inc
aam
and
mov
adc
or
pusha
add
mov
orb
andb
sbb
aas
or
inc
in
clc
call
add
je
sti
or
rolb
ss
or
mov
addb
repnz
inc
lcall
leave
mov
fldcw
pop
loopne
hlt
stos
mov
dec
aad
pusha
add
or
icebp
pop
adc
insl
jmp
inc
arpl
push
loopne
cmc
mov
popf
xlat
xorl
mov
pop
fimull
addb
mov
cmc
cmpsl
push
xchg
mov
mov
pusha
and
dec
jg
outsb
lock
shrl
movsb
addb
mov
sub
loopne
xor
dec
and
rcrb
call
mov
sbb
setge
inc
push
cmp
call
lds
and
sbb
shrl
loopne
popa
mov
addb
mov
subb
sub
mov
out
or
popa
push
icebp
lods
dec
ret
mov
xor
jge
dec
xchg
jae
push
pop
mov
andb
cmpsl
jp
incb
and
or
cmp
fistpl
add
mov
imul
sub
add
mov
xor
adc
test
out
stos
shlb
inc
adc
loop
sbb
lcall
daa
add
sub
subb
sbb
andb
sbb
movsb
loopne
mov
out
jno
pop
loop
sbb
or
insl
xchg
gs
sbbb
inc
jns
add
add
mov
dec
stc
mov
mov
xlat
push
jbe
xor
loopne
xchg
xchg
mov
cmp
sbb
pop
outsl
inc
xor
mov
mov
rcll
ds
test
data16
fcoml
jecxz
jo
pop
cmpsl
enter
or
xor
stos
and
adc
lds
pop
sub
dec
into
addl
and
je
loopne
mov
jo
in
sub
int3
dec
cmpsl
jo
jbe
pop
inc
jp
cwtl
cwtl
je
pop
pop
scas
pop
in
xchg
cli
stc
cmp
jae
adc
popa
or
mov
hlt
add
lea
sarb
addr16
jge
xchg
nop
hlt
dec
adc
jle
and
int3
insb
js
inc
sub
pusha
push
rol
outsb
movsb
loopne
jge
or
or
test
push
pop
hlt
shrl
and
inc
jl
ret
int3
dec
mov
leave
jge
dec
loop
stc
repnz
pop
mov
inc
shlb
pusha
xchg
popa
push
movsb
add
dec
push
add
pop
ficoml
xchg
ret
xchg
push
inc
pusha
add
mov
jns
pop
fbstp
test
and
jbe
enter
mov
out
mov
pop
cwtl
sub
mov
adcl
xor
mulb
and
dec
jo
mov
addb
inc
and
sub
pop
push
pop
js
push
jp
pusha
mov
add
pop
fistl
dec
or
aam
push
push
imul
les
aaa
mov
pusha
mov
dec
cltd
add
adc
pop
fsts
jg
sub
mov
cs
das
fisubs
mov
mov
movsl
push
jle
xlat
in
add
imul
adc
and
inc
xor
aaa
push
add
sbb
addb
scas
xchg
loopne
filds
loop
repnz
xor
aad
add
inc
mov
in
xchg
jg
jp
pop
jo
in
mov
push
stc
sub
inc
mov
mov
jmp
loopne
loop
andb
daa
popa
or
xchg
fildl
and
cmp
add
cli
inc
xor
sub
sahf
mov
xor
testl
or
loopne
cmpsb
rolb
add
mov
jp
mov
jb
mov
xor
jb
stc
sub
int
adc
gs
loopne
cmp
add
push
cmp
clc
pop
pop
es
mov
orb
subb
pusha
aaa
pop
out
es
push
fbstp
dec
adc
cmp
in
cmpsl
pop
push
iret
jbe
mov
cld
pop
cld
loop
add
xchg
sbb
mov
cmpsb
add
sub
call
dec
pop
jle
out
pusha
std
xchg
mov
ss
fildll
add
mov
add
sbb
mov
and
push
fcomip
scas
inc
mov
fwait
xchg
mov
into
xor
mov
imul
out
xchg
or
fisttpl
loopne
in
out
dec
push
add
data16
sti
adc
inc
je
out
push
push
xchg
lret
add
inc
mov
push
ror
rcrl
push
push
mov
fmuls
and
pusha
out
mov
lods
loopne
pop
es
idivb
stc
imul
add
mov
mov
add
jb
daa
into
das
fsubs
push
mov
sub
mov
inc
out
cmp
lahf
inc
mov
minss
pop
xor
mov
inc
mov
mov
add
pushf
in
nop
xor
add
adc
imul
pop
mov
and
jmp
push
lret
inc
cld
ret
fbld
add
adc
and
rol
adc
out
jl
push
mov
adc
jb
jecxz
adc
inc
mov
dec
dec
dec
imul
and
sub
inc
loopne
xor
jg
leave
clc
loop
mov
mov
and
mov
mov
imul
adc
adc
adc
loopne
std
pop
movsl
cmovae
jecxz
scas
cmp
ss
and
push
xchg
xchg
add
add
sub
pusha
incb
insl
xor
push
jmp
mov
daa
push
add
daa
cli
incl
stos
pop
pop
movsb
shl
fs
add
mov
mov
sbb
bsf
dec
clc
sbb
cmp
pop
mov
xor
lret
pop
in
andb
lret
xchg
inc
or
sahf
cmp
jmp
xor
add
xor
sarb
andb
xor
scas
dec
jp
jno
test
pusha
inc
es
dec
gs
sub
jge
and
and
leave
dec
cmp
mov
mov
mov
dec
outsl
sbb
cltd
repz
lret
and
frstor
andb
ud1
rcrb
inc
add
mov
rolb
mov
jle
cmc
cmpsb
pusha
mov
repnz
pop
faddp
cmc
push
jle
jmp
xor
pop
cmc
xlat
lea
sub
push
push
ret
mov
pop
cld
stos
lods
and
popa
nop
and
mov
adc
inc
mov
mov
stc
das
ds
pushf
sahf
repnz
cmp
pop
and
andb
mov
fldcw
fnstsw
or
mov
dec
inc
lret
pop
and
inc
shlb
fistpll
add
inc
pusha
fwait
cmpsl
mov
loopne
add
mov
scas
das
mov
jb
cs
inc
std
mov
in
push
mov
sqrtps
aam
or
add
fcom
pop
xchg
out
mov
add
xchg
aaa
add
inc
add
dec
jmp
adc
in
jb
xchg
or
mov
xchg
cmpsb
mov
aaa
push
into
jbe
dec
bound
out
push
add
dec
mov
add
adc
inc
jno
mov
and
repnz
inc
jl
bound
insl
cmp
enter
mov
sarl
and
mov
pusha
scas
pusha
and
adc
cmpsl
push
sti
jp
mov
mov
and
stos
adc
std
iret
scas
dec
pop
aam
and
cli
repnz
insl
lret
pusha
inc
outsb
ret
pusha
dec
jns
mov
pusha
mov
adc
xor
and
adc
fbld
lods
pusha
add
xor
pusha
inc
lods
sbb
mov
add
sub
shl
in
lret
cmpsb
add
dec
stos
mov
and
movsb
addb
mov
loopne
out
dec
movsb
shl
arpl
popa
cmc
adc
push
push
pushf
fwait
add
rcl
adc
ret
push
jne
imul
pop
sbb
lea
andb
pop
cmpsb
rol
push
addb
aam
icebp
dec
mov
mov
ret
icebp
xor
adc
popa
addr16
mov
pushl
push
fcmovnb
int
mov
fsts
sub
and
and
dec
mov
mov
pusha
or
sbb
ret
loopne
mov
lods
xchg
pusha
push
andb
xchg
call
and
fidivl
sub
mov
lods
rolb
jno
and
mov
lds
dec
bound
andb
addb
lods
pusha
loopne
or
repz
ret
pusha
cmpsl
push
add
xor
aam
loopne
mov
mov
fdivl
sbb
add
and
inc
add
jecxz
fwait
push
push
mov
and
jmp
cmp
icebp
sarb
dec
add
enter
bound
icebp
lds
loopne
addr16
or
pusha
push
and
mov
and
shrb
imul
vcvtusi2ss
ror
jnp
push
bound
push
mov
sbb
outsl
or
loope
addr16
aad
jne
mov
aam
mov
sbb
mov
push
jo
mov
inc
push
out
adc
and
xchg
and
pusha
cmpsb
add
cwtl
notrack
mov
roll
xlat
sbb
mov
adcl
out
xchg
jmp
ficomps
andb
jl
fwait
les
cmpsl
xlat
inc
push
mov
sub
add
aaa
in
fs
sbb
stos
repnz
push
pusha
add
loopne
and
mov
hlt
and
sub
add
hlt
mov
inc
test
mov
push
insb
push
or
xlat
stos
push
xchg
stos
or
inc
pop
adc
stc
sub
add
inc
icebp
push
addr16
and
add
inc
cli
js
fwait
push
pop
xlat
sbb
shrb
in
fstpl
adc
bound
adc
mov
in
jns
ds
adc
data16
ljmp
mov
sbb
add
addr16
mov
add
xchg
mov
fsubl
push
and
mov
lahf
or
sbbb
loopne
adc
sbb
js
shlb
add
or
faddl
rclb
add
and
dec
or
cmpb
pusha
rolb
push
sub
pusha
push
ds
add
dec
xor
jle
add
and
sbb
add
xor
insb
adc
fnstcw
sub
scas
inc
xorb
xchg
jecxz
popa
cli
bound
add
mov
addb
jg
loopne
add
inc
and
pusha
cmp
mov
adc
add
push
out
lock
inc
sbb
mov
fdivrl
ja
and
clc
add
pusha
mov
shl
pop
inc
repz
stos
sub
inc
add
pop
xchg
dec
jp
and
loopne
data16
cmpsl
popa
mov
inc
lds
mov
aam
pop
andb
and
mov
hlt
cmp
push
adc
jbe
imul
int
inc
inc
loop
in
push
mov
icebp
pop
jecxz
jno
pop
mov
outsb
jae
mov
shl
loopne
lret
push
pushf
add
adc
inc
mov
fidivrs
adc
loopne
xor
loopne
or
push
ss
sub
mov
mov
sbb
rolb
mov
not
ret
pop
or
clc
adc
adc
mov
push
fisttpl
aad
or
add
mov
loop
fsubl
out
inc
lahf
test
sti
je
cmc
out
movsl
or
and
je
mov
fadd
mov
and
int3
lea
roll
push
lret
ret
rorl
lret
ficomps
adc
pop
lahf
add
pusha
sti
pop
or
xor
insb
fwait
test
sbb
and
or
fidivrl
repnz
lock
mov
pop
rolb
fsubrl
or
loopne
push
xchg
jl
arpl
xchg
iret
iret
scas
add
xchg
mov
pop
cld
andb
lret
lret
mov
add
loope
push
stc
mov
mov
inc
and
mov
inc
test
cmp
popa
imul
dec
ds
mov
and
sbb
rolb
enter
ja
mov
and
pop
dec
popa
cmpl
sahf
leave
fistps
add
arpl
daa
rorl
loopne
fcomps
repz
lods
or
shll
in
imul
dec
ret
xchg
loop
vdivps
loopne
call
aam
insl
out
in
pop
enter
pop
cmp
jecxz
or
shrb
and
dec
xchg
mov
loopne
icebp
ret
mov
popf
mov
xor
popf
inc
mov
jle
pop
addr16
mov
rolb
fimuls
cmp
cwtl
mov
ret
sbb
and
loope
pusha
inc
lret
inc
fldcw
push
add
fiadds
andb
fisttpl
xchg
lock
xorl
hlt
stc
xchg
add
xchg
movsl
cmp
push
movsl
mov
adc
cmp
xchg
dec
pop
shl
rorb
sbb
or
dec
xor
mov
dec
mul
push
push
xor
lods
add
loopne
arpl
in
aaa
movsl
jge
sbb
aad
rcl
mov
xchg
mov
xchg
mov
and
mov
rcl
inc
addr16
outsl
movsb
pusha
pusha
fcoms
xchg
xlat
pop
or
and
lahf
lcall
insl
roll
fs
mov
or
add
mov
xor
aad
imul
cmp
lock
pusha
loopne
or
jmp
mov
add
dec
xlat
cwtl
xchg
loopne
mov
cmpb
xor
fnstcw
mov
mov
mull
subl
fldenv
mov
daa
jo
pop
inc
imul
xchg
pop
jnp
fwait
mov
mov
add
loopne
shlb
cwtl
jp
fldl
jle
rorl
hlt
mov
sub
fs
mov
xlat
mov
das
sti
insb
pop
xchg
inc
imul
andl
adc
enter
adc
ret
imul
mov
ret
jle
stos
loopne
jo
mov
inc
push
shlb
jge
jle
mov
mov
dec
gs
out
pop
in
and
stos
pop
nopl
add
js
jl
sub
ljmp
push
jb
in
test
and
and
fwait
sub
pusha
stos
inc
sar
movaps
jno
sbb
or
mov
sub
rolb
push
mov
pusha
and
dec
mov
adc
rcl
insl
jbe
nop
jge
imul
scas
sbb
mov
inc
ficomps
in
add
adc
bound
stos
add
lods
loopne
fisttpll
and
ljmp
mov
and
cmp
and
adc
fdivs
jp
js
mov
bound
shlb
addb
shlb
and
xchg
insl
pop
ja
std
addr16
btr
sub
into
movsb
loopne
daa
mov
hlt
inc
pop
fwait
adc
out
pusha
mov
insb
mov
cmp
inc
and
and
subb
aam
mov
xor
adc
pop
popa
cmpsb
shlb
and
lcall
pop
pusha
andb
xchg
xor
mov
inc
inc
and
xchg
jnp
jno
cmp
jl
pop
lds
scas
add
call
xchg
xor
pop
jmp
sub
inc
sarb
jb
in
sub
rorb
or
imulb
outsl
push
test
test
and
mov
dec
sbb
in
dec
inc
push
fisubl
cli
clc
lds
arpl
loopne
fs
jno
js
psllq
sbb
in
jecxz
mov
cmp
sbb
fildl
popa
scas
aam
add
pusha
push
in
push
sbb
xchg
pop
mov
out
xchg
ret
in
lods
mov
push
sub
pop
loop
insb
out
outsl
or
mov
mov
lret
js
or
inc
xor
add
jge
popf
scas
add
das
dec
scas
adc
dec
ret
dec
and
fcoms
jecxz
push
pusha
mov
inc
ss
mov
cmp
addl
loopne
mov
loopne
test
push
mov
and
cmp
bound
mov
mov
in
xor
pusha
mov
push
dec
mov
cmp
dec
jge
pop
push
jp
mov
xor
rorb
gs
and
mov
bound
inc
mov
add
add
cmp
sti
xorl
cld
mov
lea
cmpsb
shlb
jge
and
add
imul
loopne
lds
cmpsb
and
xchg
and
mov
and
mov
mov
pop
repnz
pusha
inc
int3
mov
cmp
out
xor
add
mov
int3
mulb
jno
push
jle
leave
mov
data16
fdivl
pop
jmp
push
add
insb
dec
imul
pusha
mov
loopne
fcmovne
push
sbb
jge
lods
and
loopne
inc
orb
xchg
pop
and
out
jp
cmp
xor
sub
pusha
loop
adc
mov
pop
inc
add
popa
stos
pusha
mov
add
shlb
mov
inc
out
loop
in
rolb
inc
das
addr16
in
ret
lds
lahf
mov
test
mov
fistpll
scas
pusha
add
pop
imul
add
and
add
sbb
gs
icebp
lret
loopne
mov
int
rolb
jp
popa
bound
andb
inc
std
push
xchg
pop
outsl
es
and
in
jne
push
loope
sub
loopne
sub
loopne
in
shlb
mov
nop
mov
imul
xchg
xchg
fnsave
or
test
cmp
mov
stos
inc
and
out
lahf
mov
mov
adc
dec
inc
lods
fmull
addl
cltd
mov
testl
pusha
jl
inc
mov
adc
stc
cmc
fcoml
or
lcall
lock
mov
add
add
pusha
je
fnstsw
mov
lsl
xorl
pop
push
push
inc
dec
cwtl
pop
fstpt
pop
push
loop
inc
and
rcrb
cmpsb
and
jae
fistl
mov
clc
fisttpll
or
fs
inc
shlb
mov
imul
mov
push
je
mull
push
aam
jnp
add
int3
mov
add
inc
nop
dec
popa
cmp
popa
inc
xchg
inc
adc
and
loopne
rolb
jmp
inc
in
out
in
pop
inc
inc
ljmpw
std
scas
and
addb
jmp
dec
dec
jns
movsl
sahf
push
push
rorb
loopne
fsubl
repnz
in
adc
sub
pusha
loopne
out
inc
pop
pop
rcl
test
loopne
std
mov
rclb
js
incb
pop
pushf
adc
pop
mov
into
movsl
push
push
js
push
push
sub
shrl
ljmp
pop
fs
dec
inc
cld
sbb
mov
xchg
mov
mov
std
dec
xor
out
or
insl
subl
sub
push
cmpsl
jg
jge
inc
stc
jl
and
mov
mov
pusha
in
mov
sub
out
lds
outsb
les
mov
add
mov
add
jle
clc
cs
cmpb
sbb
ja
jae
lahf
fisttps
jb
sbb
mov
add
loopne
ljmp
jbe
inc
sbbb
jg
xor
push
bound
and
shlb
imul
push
mov
xor
out
pop
sbb
mov
and
mov
bound
mov
and
sub
add
clc
mov
xchg
xchg
scas
inc
mov
call
addr16
shl
add
dec
cmc
dec
decl
cltd
xchg
rcl
inc
xchg
scas
and
inc
sbb
push
iret
sbb
loopne
les
pop
mov
enter
or
fcmovbe
or
inc
sarb
andb
dec
loopne,pn
lret
enter
jnp
rolb
faddl
jl
add
adc
dec
cmp
int3
jns
jecxz
dec
leave
add
inc
inc
adc
lcall
imul
addb
pop
jge
shlb
lods
in
andb
ret
jo
stos
inc
inc
xchg
ret
push
call
rclb
mov
add
push
out
mov
cmp
out
roll
push
dec
movsl
cmc
sti
pop
dec
aad
fstp
loopne
add
inc
in
mov
add
jb
cmc
stos
lods
add
in
cltd
lret
inc
inc
repz
dec
xchg
arpl
mov
xor
and
inc
gs
stc
jmp
inc
pop
shlb
out
mov
cmp
adc
cmc
jmp
dec
mov
loopne
nop
push
fwait
jae
adc
addb
jl
stos
rolb
mov
leave
cli
js
stos
add
mov
adc
stos
in
pusha
loopne
and
add
sahf
in
pusha
shl
mov
loopne
jbe
mov
mov
and
mov
or
lea
mov
add
sbb
movsb
loopne
xchg
shr
adc
pop
pop
pop
popf
stos
and
in
xchg
jl
lahf
sti
inc
jnp
mov
loopne
dec
sbb
add
inc
inc
and
add
sub
cmp
das
aas
mov
int3
pop
fistps
mov
mov
and
mov
adc
aam
movsl
add
subl
dec
shlb
mov
cli
cmp
imul
test
outsb
xor
cwtl
ja
and
sti
inc
je
push
sahf
out
mov
mov
rcr
test
js
dec
arpl
call
addl
and
loopne
push
adc
ss
xor
in
mov
enter
xor
cmp
lock
aaa
jnp
mov
nop
mov
divl
in
xchg
add
inc
xorb
pop
add
call
pusha
pusha
rcl
dec
pop
pop
mov
inc
dec
pop
call
out
jno
jae
fstl
aad
inc
mov
inc
jns
pop
jle
pop
cmc
and
lods
ljmp
mov
mov
andb
cmp
rolb
es
testb
aam
sub
lahf
ss
subb
mov
idivl
andb
pusha
xorl
pop
outsl
fimull
loopne
cwtl
and
pop
daa
repz
stos
and
jo
xchg
mov
div
dec
std
cmpsl
imul
inc
pusha
inc
mov
sub
lods
inc
add
pusha
pushf
test
mov
sub
add
xchg
test
sub
jl
mov
in
sahf
leave
fimuls
or
negl
insb
sub
jg
dec
pop
cmpsl
and
jmp
add
lcall
xor
loopne
mov
movd
idiv
mov
cmp
icebp
sub
add
arpl
icebp
add
scas
jp
push
pop
inc
into
test
cmp
cmc
sub
inc
pop
adc
ret
out
pop
cmp
mov
jnp
ret
loopne
call
add
mov
inc
adc
pop
aam
xchg
leave
cltd
mov
push
decl
pusha
inc
xor
scas
mov
mov
pop
inc
or
xorb
add
scas
inc
rolb
outsb
xchg
sbb
xlat
cmpsb
add
cmp
lea
int3
cld
outsb
mov
add
fidivrs
push
in
or
lahf
inc
pop
sbb
add
loopne
sahf
inc
adc
sbb
jp
jge
sarl
sahf
mov
cmpsb
add
insl
add
sub
mov
nop
jmp
pop
insl
xlat
mov
inc
add
mov
mov
stc
jmp
xor
loop
xor
adc
andb
push
jbe
dec
pop
test
add
xor
in
mov
stc
ficoms
testl
ret
fldl2t
mull
loopne
inc
or
mov
scas
add
push
push
sub
test
or
add
mov
test
xorl
in
inc
loopne,pn
imul
mov
repnz
arpl
xchg
ljmp
into
jge
ret
arpl
dec
popf
dec
dec
adc
aam
jbe
dec
aaa
jae
mov
add
or
push
dec
lcall
inc
mov
and
insb
push
adc
lock
bound
nop
inc
out
sarl
push
mull
xchg
popf
lock
loopne
in
stos
mov
xchg
push
sahf
sbb
in
shll
test
pusha
lea
cmpsl
lds
test
subb
sti
push
mov
push
or
test
xchg
test
mov
pusha
mov
pusha
jnp
cmc
jg
push
cwtl
mov
sahf
loop
cmp
out
sarb
sarl
sahf
into
xor
add
scas
mov
push
and
adc
add
mov
add
and
test
inc
nop
fdivr
in
in
xor
sub
orl
pusha
add
mov
jp
and
jmp
add
loope
loop
cs
pop
hlt
ljmp
xchg
addb
into
mov
xchg
sbb
loop
fldl
add
mov
pusha
mov
inc
mov
mov
pop
push
xchg
fisubl
mov
adc
xor
das
sub
add
dec
and
jo
imul
adc
lds
inc
pusha
and
aam
add
call
outsb
cmp
adc
rorb
push
daa
cmp
aas
mov
sub
lcall
push
mov
in
push
rolb
add
jo
addr16
or
loopne
pop
in
xchg
or
mov
xor
push
jbe
cld
jb
andb
imul
pop
stc
adc
int3
xor
mov
loopne
dec
sbb
mov
rolb
loopne
pop
les
nop
mov
loopne
call
xchg
jne
pop
add
add
mov
cmp
pop
adc
fidivl
cmp
mov
mov
mov
mov
fwait
jo
dec
mov
and
sub
dec
lret
or
addb
jl
repz
addb
mov
pop
add
and
cli
xchg
test
inc
mov
pop
push
mov
repz
add
mov
dec
jmp
hlt
jbe
shrb
inc
add
cmp
mov
push
lcall
cmc
stos
add
add
lret
frstor
mov
push
xor
loopne
ficoms
mov
xchg
test
mov
and
aad
ds
and
bnd
pusha
nop
icebp
ljmp
push
iret
mov
bound
les
jb
pusha
ror
test
enter
mov
or
std
and
and
push
lcall
cmp
jbe
in
pop
test
jbe
test
jmp
adc
or
les
or
and
repnz
cltd
mov
add
adcl
cwtl
test
jmp
loope
adc
pusha
call
xadd
test
lods
rol
in
imulb
adc
cmpb
data16
rolb
ja
das
js
xchg
pop
lcall
std
flds
and
rcrb
dec
scas
loopne
lcall
cld
sbb
lret
push
inc
mov
inc
orl
fbstp
stc
mov
adc
and
das
adc
cmc
dec
mov
aaa
add
add
call
scas
and
sahf
jecxz
stos
and
adc
mov
dec
and
shlb
jno
daa
lret
fdivrs
pop
or
sti
dec
xchg
insb
jb
sarb
xor
in
cmp
adc
dec
cmp
add
mov
mov
loopne
in
out
flds
inc
rolb
insl
rol
add
mov
mov
lods
mov
test
xchg
insb
sar
mov
mov
mov
jmp
mov
fldenvs
movsl
clc
or
js
and
push
jo
lds
adcl
hlt
scas
loopne
or
addb
scas
lods
add
lock
rolb
jbe
mov
mov
jecxz
inc
loopne
fsubrl
cmp
cmpsl
pusha
clc
rol
inc
aas
dec
fdivl
push
daa
pop
xor
ja
shl
ja
mov
mov
shlb
pusha
shrb
mov
push
xchg
ret
jmp
sbb
fcomi
sti
xchg
fiadds
mov
pop
rcrl
pusha
cltd
sub
and
jo
shlb
xchg
pushf
lcall
xor
inc
sbb
movb
and
lcall
add
dec
in
stc
mov
pop
movsb
add
mov
inc
mov
pusha
xchg
out
stos
adc
or
test
mov
and
mov
inc
mov
inc
mov
inc
cld
mov
xlat
scas
add
fmul
hlt
lods
and
scas
cmpsb
pusha
add
mov
movsb
add
mov
ret
and
es
push
ret
rorb
inc
mov
subl
cmpsl
movsb
loopne
jbe
xchg
or
insl
je
test
in
add
jle
ljmp
fs
out
fdivl
test
mov
and
sbbb
loopne
mov
insl
mov
nop
inc
daa
sbb
shlb
dec
popf
les
lods
rol
mov
je
hlt
or
mov
es
pusha
pop
mov
push
jbe
mov
and
or
xchg
mov
mov
ror
stos
sub
xchg
jle
mov
cs
call
rolb
ja
not
sub
sub
sbbb
divb
jbe
lcall
pusha
pusha
in
push
in
ja
push
mov
loopne
mov
mov
inc
and
ljmp
pusha
and
gs
stc
aaa
adc
shlb
cmpsl
ljmp
mov
push
bound
push
inc
int
adc
lcall
icebp
addr16
addb
andb
addb
inc
xchg
pop
insb
push
cmp
inc
mov
call
movsb
and
daa
in
or
add
gs
jg
adc
jl
mov
sub
mov
mov
out
addb
outsl
or
icebp
add
xor
jb
push
inc
and
fcoms
popf
sbb
leave
out
mov
pop
inc
loope
sbb
and
dec
mov
icebp
adc
cmpsl
int3
xor
adc
mov
inc
stc
mov
add
push
out
rclb
and
test
pusha
in
or
xchg
add
pusha
rorb
or
mov
mov
lea
jecxz
sbb
lods
pusha
inc
xor
xor
aaa
fnstenv
mov
mov
lcall
out
cmp
js
inc
mov
xor
add
les
leave
xor
fstpl
out
mov
mov
xor
adc
mov
pusha
out
push
js
push
xor
dec
push
adc
sub
and
add
rorl
pusha
dec
xchg
shlb
and
add
jecxz
jg
pop
movsl
xlat
inc
cmp
lret
das
outsl
movsl
or
mov
or
pusha
sub
subb
sub
ljmp
jecxz
scas
loope
rorb
inc
icebp
sahf
add
es
aad
inc
fs
stos
loopne
lret
pop
and
and
shlb
call
and
and
aas
or
sbb
pusha
and
or
inc
fnstcw
cmp
jge
nop
aad
leave
in
addb
mov
dec
mov
sub
jne
shlb
and
pusha
pusha
pusha
mov
notb
adc
or
add
mov
pusha
mull
hlt
mov
popf
mov
fwait
leave
xchg
inc
daa
dec
jmp
dec
dec
jns
or
pusha
xchg
adc
loopne
jl
xchg
daa
insb
sti
xor
lds
and
lahf
mov
and
mov
jge
xchg
imul
and
or
pusha
adc
nop
movsl
and
loope
out
jns
iret
mov
inc
stos
andb
pusha
subb
adc
lahf
mov
add
inc
ljmp
mov
sarb
addb
cli
xchg
fisttpl
add
or
mov
les
addb
sub
xchg
or
loope
lods
andb
pusha
and
daa
loop
lea
inc
inc
push
ficomps
test
and
and
andb
jge
lcall
loop
add
lret
ucomiss
sbbb
and
push
cltd
sub
add
mov
cmp
loope
and
pop
mov
mov
and
sub
or
xor
orl
loop
xor
mov
mov
les
pushf
xor
pop
jb
add
sub
inc
mov
push
aas
aas
clc
or
pusha
mov
shl
mov
std
aaa
out
loopne
push
test
and
loopne
inc
insl
in
dec
ficompl
jne
out
loopne
repnz
mov
lahf
mov
shrd
fidivrs
stos
inc
and
inc
pusha
xchg
sbb
gs
add
cmpb
fsubp
dec
mov
dec
cwtl
ds
sbb
addb
lret
fs
sbb
pusha
add
mov
inc
adc
paddusw
pusha
jbe
mov
xor
mov
pusha
and
push
mov
movsl
sarb
inc
sub
push
in
inc
dec
pop
xor
push
inc
add
jl
jl
imul
dec
scas
pusha
pusha
mov
inc
in
mov
shl
imul
mov
into
jl
in
cmpsl
jnp
inc
and
in
lahf
call
mov
pusha
mov
mov
add
mov
xchg
and
rorb
inc
and
mov
jae
shl
das
mov
jmp
bound
leave
dec
test
rolb
push
and
fstl
xor
fcmovnu
xor
pusha
mov
and
mov
push
add
icebp
aam
icebp
imull
mov
and
aaa
or
inc
mov
aad
add
jb
add
mov
cmp
cmp
ret
fcmove
add
test
inc
cmp
lret
add
mov
inc
add
inc
xchg
mov
repnz
clc
mull
inc
loopne
xchg
push
xor
out
add
pop
adc
xchg
ret
jp
sti
mov
pop
pop
aas
fsubrl
xor
dec
cli
jns
js
pusha
shrb
pop
outsb
outsl
lcallw
xor
mov
jbe
mov
adc
push
pusha
shlb
nop
mov
pop
cmovl
popa
mov
loop
dec
in
push
pop
imul
or
imul
pandn
and
ret
add
and
sbbb
adc
add
add
addb
sub
xor
mov
cmpsb
pusha
sarb
mov
mov
sub
rclb
in
xlat
lahf
cmpsb
add
pusha
and
jns
loope
pushf
pop
adc
test
dec
or
add
stos
lods
fdivrs
lret
mov
add
andb
fdivrl
iret
jle
stos
sbb
and
mov
mov
or
iret
dec
adc
xor
xor
test
stos
shl
data16
xchg
inc
dec
fdivl
jno
insb
lods
fsubr
popa
orl
rolb
in
insl
xor
push
xchg
push
in
mov
insb
push
addb
mov
andb
test
jl
mov
add
jb
and
mov
sbb
sahf
or
rclb
pop
mov
add
add
pusha
jns
test
pusha
push
sbb
ror
std
idiv
add
mov
setge
adc
mov
rorb
pusha
test
std
pop
fisttpll
iret
ja
sbb
je
out
pop
or
and
push
faddl
push
fsub
sarl
sbb
ss
mov
pusha
orb
push
add
sbb
inc
xorb
mov
jne
xor
out
hlt
test
stc
push
mov
shl
lcall
or
mov
aas
jns
or
mov
mov
sahf
test
inc
cmc
das
xchg
and
test
mov
shl
xor
inc
and
rolb
pop
dec
mov
shlb
adc
outsb
popf
jae
sub
xor
cmp
test
inc
xor
xor
xchg
add
dec
imul
pusha
cmpsl
mov
inc
pop
sbb
and
and
cmc
inc
mov
jo
cmp
test
rolb
mov
ror
add
dec
lock
jp
pop
popf
and
and
andb
mov
mov
jmp
test
addb
imull
sar
dec
inc
push
and
rolb
addr16
shrl
add
sub
or
and
xchg
dec
pop
adc
mov
mov
sub
and
les
xor
loopne
inc
mov
pusha
inc
addr16
jge
andb
fcompl
lock
popf
sub
add
aaa
mov
shlb
or
pusha
add
dec
sbb
lds
adc
inc
outsl
test
out
iret
jne
pusha
mov
andb
and
and
xor
xor
addb
mov
je
add
call
mov
push
and
fdivrs
dec
mov
push
loopne
mov
xchg
loopne
mov
insl
das
fisttpl
rcrb
int
mov
out
pop
loop
in
cmp
jae
mov
or
loopne
lcall
xchg
xchg
mov
iret
add
punpcklbw
and
sti
imul
inc
insl
clc
enter
mov
rclb
addb
and
or
and
jns
in
cmp
daa
js
addr16
mov
cmpb
inc
push
pop
imul
dec
mov
and
sti
mov
xchg
jl
jb
addr16
pop
fiaddl
jb
shl
enter
mov
adc
inc
adcb
mov
roll
dec
jae
or
cli
adc
sbb
lods
aad
ljmp
addr16
xor
xchg
and
stos
add
push
xor
shl
jmp
int
ljmp
std
ficomps
repnz
loopne
stos
es
movsl
mov
inc
fwait
push
mov
clc
and
mov
inc
mov
adc
shlb
xor
and
and
ljmp
sbb
popf
xlat
push
xor
les
xor
add
xchg
sbb
inc
jae
in
ja
or
push
and
daa
aad
pop
mov
xchg
or
shlb
mov
mov
mov
sbb
add
shl
lret
fimull
xchg
and
jbe
lahf
jbe
cmp
add
scas
pusha
inc
mov
loopne
or
loopne
xor
flds
addb
inc
mov
dec
mov
and
xor
loopne
repz
loopne
and
and
and
lds
and
jb
jb
pop
cld
arpl
pop
mov
add
xchg
int
mov
inc
icebp
pop
jle
sti
clc
jl
or
inc
cmpsl
sub
lahf
push
sbb
cli
into
dec
xor
sahf
in
scas
and
repz
in
inc
jecxz
push
cli
pop
mov
add
pop
mov
xchg
loopne
or
in
and
fbld
rcrb
pop
inc
je
adc
flds
mov
inc
loopne
sbb
int3
stos
add
adc
mov
aad
fisttpll
aaa
adc
add
iret
sbb
xor
pop
outsb
lods
dec
cmp
jne
or
addb
std
fimull
pop
pop
sti
andb
pop
mov
jge
int
pusha
adcb
scas
addb
sbb
sub
loopne
pop
push
sub
sarb
inc
mov
sbb
sti
popa
pop
cmp
push
sub
insb
add
sti
sub
mov
xor
jmp
dec
addb
shll
mov
inc
add
jp
inc
add
shrb
inc
cltd
adc
mov
or
clc
andb
popf
xor
jecxz
cmp
push
mov
mov
push
mov
addr16
mov
mov
lret
adc
addl
push
lods
leave
sti
andb
out
jns
push
inc
add
repz
push
js
adc
call
mov
loopne
addb
mov
mov
out
pop
test
mov
sub
fisubs
pop
dec
stos
mov
jno
mov
and
mov
aad
mov
and
xchg
xor
sub
inc
scas
xor
jecxz
aaa
dec
inc
pop
addb
xor
ja
and
xor
jp
out
or
fmull
loopne
ss
cmp
cmp
mov
sbb
cmc
xor
xor
rorl
andb
inc
and
and
add
push
pop
xchg
jbe
xchg
and
jno
push
add
inc
mov
mov
addb
rol
outsb
imul
roll
xchg
pop
pop
xor
add
clc
jge
push
fisttpl
lock
pop
lods
rolb
and
orb
rolb
or
inc
sub
shl
ljmp
pop
cmp
xchg
clc
mov
push
cli
mov
loopne
cmpsb
pusha
cmpb
pop
jge
inc
xor
cmp
shlb
inc
mov
nop
mov
mov
or
inc
mov
add
jb
addb
mov
in
add
or
inc
pop
mov
mov
or
add
xchg
popl
jle
lcall
add
add
dec
inc
pushf
xchg
push
dec
cmpsl
enter
out
mov
addb
pop
mov
sbb
jle
and
add
push
out
add
and
and
mov
lahf
sub
xchg
mov
and
or
mov
push
or
adc
in
iret
iret
add
add
jmp
in
pusha
pusha
loopne
negb
mov
mov
mov
pop
push
push
or
add
fnstenv
pop
movsl
dec
and
jmp
mov
inc
ror
mov
addb
pusha
add
fistl
loopne
xchg
outsb
pushl
test
inc
xor
xor
rolb
ja
ss
lcall
add
aas
shr
sbb
mov
add
add
and
out
fistl
negb
sbbl
adc
pusha
loopne
andb
dec
scas
inc
sbb
inc
pusha
jnp
jecxz
add
pusha
das
add
loopne
stos
add
and
inc
push
mov
test
add
lret
test
or
dec
dec
sub
hlt
addb
mov
or
cmp
push
xor
ss
pop
lea
mul
inc
mov
mov
inc
push
sar
pop
cli
test
add
push
in
cmp
cmp
jmp
mov
push
inc
add
sbb
jle
clc
icebp
adc
mov
cmpsb
and
mov
sub
lcall
loopne
adc
jb
inc
scas
shlb
lods
loopne
pop
popf
hlt
jge
add
sbb
shlb
sbb
mov
jns
mov
stos
out
mov
scas
cmc
mov
dec
std
and
jbe
mov
fisubl
xorb
add
mov
pop
sbb
inc
inc
shrb
mov
inc
adc
mov
xchg
jne
jae
fildll
subl
dec
packssdw
xor
pusha
add
loopne
push
xor
sbbb
sbb
inc
test
lea
loopne
adc
sub
cwtl
aaa
ficoms
cmpb
adc
sbb
pushf
gs
andb
cmp
push
popa
aam
inc
lea
cwtl
inc
xchg
pusha
jns
sbb
sbb
sub
shlb
pusha
inc
js
lods
pusha
inc
ret
int3
sub
shlb
neg
fidivrs
jp
rol
scas
in
cmc
jl
insl
xor
je
jo
movsb
and
pavgb
dec
or
mov
xchg
sbbb
leave
imul
xchg
shlb
stc
mov
lahf
in
inc
and
pusha
rolb
xchg
push
cmc
mov
out
dec
jecxz
jae
sti
jno
lock
jmp
andb
inc
add
pusha
cmp
mov
icebp
dec
movsb
pusha
shl
inc
and
and
mov
sub
pusha
sbb
push
fidivs
ficomps
dec
lods
enter
push
jne
and
testl
addb
mov
rol
movsl
and
sub
inc
or
std
into
pop
fiaddl
int3
xrelease
or
rorl
dec
arpl
icebp
sub
add
sbb
inc
lods
add
cmp
inc
add
addb
push
fcmovnu
adc
push
fst
mov
fwait
push
out
cmp
mov
shlb
loopne
jl
and
add
jl
pusha
inc
inc
ss
aad
mov
loopne
cmpsb
rolb
aad
mov
pop
lods
rolb
mov
lds
out
inc
mov
ss
and
sub
mov
push
data16
xor
jge
mov
mov
xchg
nop
jl
ja
adc
rolb
push
xchg
rorb
mov
imul
push
cmp
lock
shlb
sub
mov
imul
add
inc
add
jbe
cmpsl
or
loopne
mov
xchg
mov
add
aas
dec
dec
test
shrb
loopne
leave
mov
addb
enter
sub
jecxz
inc
jnp
loop
inc
xor
pop
out
call
loopne
jno
inc
and
hlt
fbld
loopne
add
add
sbb
cmp
jp
lds
aaa
mov
dec
in
push
mov
push
je
mov
fcompl
dec
imul
hlt
mov
out
andb
push
test
add
push
out
imul
pushf
stos
mov
dec
inc
cmp
fcoms
fcmovb
call
add
xchg
stos
xor
add
ret
inc
dec
movsb
and
jno
mov
cmp
xchg
pop
mov
mov
inc
mov
add
and
cld
xchg
loopne
inc
jnp
rol
les
inc
xchg
imul
loopne
jb
adc
add
fistps
mov
daa
sbb
andb
xchg
cmpsb
loopne
push
pushf
sub
movsl
or
inc
scas
add
mov
nop
mov
add
dec
test
shlb
mov
mov
mov
fdivl
jp
push
sbb
ficompl
das
mov
lret
mov
loopne
cmp
ret
sub
repnz
mov
aad
mov
and
lahf
in
pop
push
mov
imul
mov
mov
sub
adcl
and
push
adc
pusha
pusha
testl
lds
add
movsl
lods
add
and
sub
add
sbb
fdivs
jl
ficoms
test
mov
mov
add
out
sbb
jb
jle
pop
dec
mov
sbb
ret
ret
add
shr
pop
lcall
stos
mov
pusha
jle
cmpsb
loopne
js
iret
pushf
movl
flds
cmp
scas
xchg
jno
loopne
in
mov
xorb
sub
add
insb
sub
rorb
loop
loopne
fsub
sbb
inc
push
cli
in
dec
shlb
out
lret
addr16
pop
jae
insb
xchg
loopne
aas
xor
data16
bound
pop
in
pop
test
aas
xchg
rcrl
push
loopne
mov
mov
and
sbb
scas
cmp
pop
xchg
rolb
lret
add
mov
xchg
aaa
jno
call
incb
daa
jmp
lahf
xchg
loopne
cld
pop
dec
lret
add
sarb
icebp
push
jae
or
sarb
into
fcomp
mov
loope
jle
fnstsw
and
add
push
and
adc
jns
aas
test
pusha
add
outsl
mov
xor
mov
shlb
cltd
inc
and
mov
add
jnp
dec
mov
ror
mov
daa
mov
jg
xor
jno
adc
in
mov
nop
addb
mov
enter
mov
ds
cmp
jne
pop
add
ficompl
push
inc
push
ret
lea
lea
ss
lret
shrb
mov
push
sbb
jle
cmp
addb
stc
inc
inc
xchg
loopne,pn
imul
gs
dec
call
pusha
pusha
out
rcll
std
outsb
lock
out
aaa
and
in
add
dec
push
inc
xor
pop
sbb
fmull
inc
jne
addb
xchg
add
jne
pusha
push
pop
adc
fidivrs
stos
jp
cwtl
adc
pop
test
and
neg
push
mov
mov
inc
rcr
cmc
lods
addb
or
or
or
mov
or
mov
lahf
mov
lods
add
push
add
inc
jns
out
mov
iret
inc
call
hlt
add
test
xor
repz
pusha
add
and
inc
fistps
pop
xchg
cld
adc
fisttps
mov
add
inc
mov
jl
jne
ror
adc
dec
or
adc
movsl
addr16
mov
xor
pop
mov
imul
add
add
loopne
sbb
adc
andb
loopne
dec
xchg
or
pusha
andb
and
sbb
adc
cmpsb
inc
inc
es
push
push
pop
jb
aaa
inc
insb
stos
inc
loopne
in
jo
shll
jl
push
mov
sbb
sub
ror
insb
and
add
xor
or
fcomps
inc
inc
clc
xchg
dec
and
cld
outsb
mov
shll
push
daa
sbb
andb
fstl
mov
sahf
push
and
sbb
add
cmp
sbbl
and
scas
pop
pop
jno
adc
push
loop
push
mov
xchg
pusha
cmp
add
mov
fsts
push
pop
add
xchg
shlb
nop
bound
add
dec
inc
addb
cmp
lods
xor
dec
jo
mov
aad
sbb
and
add
mov
loopne
inc
in
loope
adc
int
repnz
adcb
jge
jo
movsb
add
mov
pop
push
test
sub
subb
lret
imul
fcmovbe
or
and
mov
pop
mov
movsl
into
xchg
leave
aaa
clc
pop
arpl
out
nop
and
inc
dec
sarl
and
rol
lods
loopne
jb
push
add
and
and
sahf
fld
sbb
addb
pusha
rorb
test
subb
jmp
loopne
push
ljmp
outsl
pushf
jo
jne
ss
sub
and
lcall
fldt
and
pop
xlat
andb
jne
daa
les
jmp
sbb
movsl
or
sahf
shlb
and
rolb
cs
rcl
in
stos
push
bound
shlb
inc
sbb
cmp
xchg
inc
out
aaa
rol
negl
xchg
and
bound
jns
fsts
jle
lahf
mov
dec
inc
leave
inc
idiv
jne
or
and
fldt
sub
dec
xchg
dec
test
inc
lret
arpl
lea
roll
pop
jno
daa
mov
mov
push
enter
inc
loopne
push
scas
mov
loopne
push
lea
xor
ds
bound
popf
mov
rorb
push
mov
out
cwtl
mov
cmp
es
mov
shlb
xchg
scas
pusha
rorb
xor
adc
arpl
cli
xchg
push
shrb
mov
dec
imul
mov
pop
lret
mov
mov
mov
and
or
out
and
cmp
cmc
dec
ret
sbb
loopne
lods
shlb
sti
loope
aaa
push
mov
cli
adc
addb
popf
xlat
push
sub
add
sub
add
mov
loop
sbb
push
cwtl
dec
insl
xchg
repz
inc
ljmp
push
gs
cmp
inc
pop
ss
loopne
mov
inc
jb
push
mov
scas
loopne
fwait
pop
sub
cltd
cmp
mov
push
and
mov
pusha
or
xor
push
outsb
sub
lea
mov
in
pushf
mov
lcall
loope
es
sbbb
out
and
jmp
push
jnp
loope
or
add
mov
or
inc
mov
inc
sbb
cmc
int3
and
pusha
inc
push
xchg
xchg
cmc
fstl
adc
loopne
loope
inc
fs
sbb
shlb
and
dec
push
shlb
gs
add
jb
pop
sbb
adc
movsl
push
and
jmp
sbb
push
and
push
pusha
jmp
stos
mov
adc
in
adc
pusha
pusha
addr16
pop
dec
ret
pusha
lock
and
mov
sbb
mov
movsl
js
faddl
pusha
ficompl
xor
sub
loopne
sbb
push
mov
int3
pop
mov
xlat
mov
add
loopne
cli
xchg
xchg
cmp
push
push
repz
dec
lock
jbe
icebp
je
mov
adc
mov
inc
aaa
fistpll
cmp
jo
stc
popf
data16
in
adc
rclb
xchg
sbb
push
lret
fwait
out
jmp
or
and
js
lock
add
sub
shlb
and
shlb
xor
add
inc
jge
xor
int3
xchg
lods
addb
and
movsb
andb
repnz
fdivr
outsb
sbb
outsb
cmp
loopne
jmp
xlat
aas
ret
push
dec
inc
lea
insl
ror
jle
add
fdivs
fcmovbe
mov
xchg
stos
mov
sub
sbb
mov
xchg
and
inc
pusha
jmp
xchg
in
rolb
mov
mov
adc
xchg
add
xchg
sub
pop
jb
repz
mov
xor
mov
cmp
dec
icebp
and
loop
faddl
loopne
fwait
pop
sub
xor
sahf
pop
lret
test
mov
andb
and
lea
test
dec
in
xchg
sub
daa
lret
and
inc
aam
into
push
mov
faddp
jmp
xchg
cld
jns
jne
mov
fucomi
xor
mov
andb
sbb
push
pop
mov
add
inc
leave
out
cmp
sahf
xchg
enter
sarb
jl
cli
cmp
mov
repz
jmp
stos
mov
pusha
sbb
fstp
jne
andb
pusha
shlb
call
inc
movsb
loopne
pop
movsb
andb
scas
xlat
inc
pop
fwait
sarl
jo
cmpps
out
cltd
cmp
push
and
aas
mov
pusha
mov
pop
cmpl
andb
push
addb
inc
add
icebp
aam
lret
and
loopne
stos
je
cmpsl
dec
lea
and
adc
shl
add
scas
rolb
push
shll
sahf
das
dec
inc
mov
decl
shlb
ja
das
rorb
mov
add
push
mov
out
arpl
adc
cltd
mov
rolb
andb
into
repnz
xchg
push
dec
dec
mov
dec
clc
push
jle
stos
jnp
stos
and
in
pop
push
fiaddl
rolb
jno
inc
test
andb
out
add
ds
xorl
mov
add
andb
cmc
repnz
mov
fsubrl
shl
out
inc
pop
dec
and
dec
cmp
dec
mov
leave
mov
or
loopne
cmpsl
push
dec
mov
inc
std
mov
lcall
pop
ficoml
insl
mov
xchg
shl
std
xor
ljmp
int3
int3
inc
lea
nop
cmp
int
add
and
jg
adc
lock
rol
jbe
jp
and
cli
lods
rolb
jb
and
loope
ljmp
enter
cmc
jbe
push
pop
push
xchg
pop
inc
lahf
mov
shrb
inc
rcrb
and
repz
jb
push
test
pop
sarb
andb
pop
ljmp
cltd
push
dec
test
shl
dec
and
cld
aad
rcrb
fistpl
sbb
popa
aaa
aaa
dec
cmp
aas
xor
and
sub
add
icebp
pop
fildl
push
xor
inc
push
and
lcall
and
clc
ror
sahf
fwait
scas
mov
cmp
sub
ss
mov
aas
pop
adc
add
loopne
sub
mov
jb
dec
pop
sbb
add
sbb
xchg
jae
mov
cli
lret
or
adc
mov
ja
xchg
in
rolb
insb
ss
and
rolb
mov
inc
loopne
andb
pusha
and
rolb
loop
xor
addb
pop
mov
fdiv
xor
in
fsubl
mov
loopne
out
mov
pop
das
cmp
fmull
loopne
xchg
xchg
push
loopne
in
fcmovnu
pop
inc
push
or
mov
adc
fbstp
xor
add
loopne
adc
test
mov
mov
lret
inc
inc
ss
adc
in
mov
adc
shlb
cli
inc
ja
aaa
mov
aas
ljmp
lcall
add
addb
hlt
lock
push
add
and
push
cli
in
add
jmp
es
inc
popa
and
inc
inc
or
mov
lret
gs
inc
jae
scas
mov
inc
lahf
outsb
or
jnp
test
cmpsl
leave
stc
test
and
into
ja
mov
inc
icebp
jno
shl
subl
pusha
orb
popf
add
loopne
lods
add
cltd
addb
and
inc
bound
xchg
xchg
andb
pop
inc
outsl
cmp
loopne
sub
xchg
loopne
lods
loopne
mov
sbb
in
jns
pusha
rorb
shll
sub
mov
pusha
inc
jne
jnp
loope
mov
mov
add
and
add
test
adc
sub
clc
aad
aam
mov
mov
cmpb
stos
rolb
lahf
dec
push
pushf
loopne
push
sub
aam
andb
out
movsb
inc
add
sbb
popa
repz
ret
xor
outsb
data16
andb
addr16
cmp
lret
sbb
fbstp
sbb
mov
mov
cmp
enter
dec
int
test
sarb
loopne
rclb
mov
pusha
fmulp
push
inc
loopne
mov
and
out
push
nop
mov
loopne
pop
add
cltd
dec
test
xchg
in
pop
into
stc
jl
cmpsl
scas
mov
rorl
jnp
out
ds
add
sub
sub
rcrb
or
push
das
or
mov
pop
and
pop
dec
shrb
loopne
js
cmp
ud0
std
pop
cmp
test
inc
xlat
mov
xor
jo
inc
cmp
pusha
loopne
aas
jnp
fwait
scas
loopne
fs
fcomps
cmc
adc
iret
test
pop
jne
xor
loopne
stos
pusha
add
insb
fwait
stos
test
and
loopne
jns
aam
cld
aam
shlb
testb
loopne
xchg
pop
fsubl
push
mov
movsl
jl
jbe
mov
pop
add
adcb
int3
dec
out
mov
subl
mov
rcrl
mov
add
fmul
cmp
pop
add
add
pop
std
add
push
jl
or
add
mov
mov
shl
xchg
arpl
jmp
cli
in
les
push
dec
xchg
jmp
adc
add
inc
push
adc
pushl
into
stc
mov
mov
loope
and
fisubs
mov
xchg
dec
in
jp
jmp
outsb
pop
jge
inc
dec
adc
sbb
cmp
xchg
inc
stos
and
outsl
jg
sub
pop
mov
int3
imul
ss
sub
sarb
cwtl
mov
and
in
jbe
sbb
or
mov
adc
pusha
inc
mov
sahf
push
rorb
mov
popf
fstpl
or
cmc
repnz
sti
ret
push
cmc
mov
add
test
inc
sub
and
dec
sti
xor
lock
mov
mov
add
xchg
adc
sar
test
sub
cmp
repz
rclb
adc
in
xchg
xor
mov
shlb
dec
aaa
mov
inc
pop
mov
jmp
sti
jmp
push
xchg
sbbb
shlb
jl
push
fwait
push
or
repz
mov
xorb
iret
scas
inc
add
push
pushf
push
inc
mov
mov
pusha
inc
and
xlat
pop
ret
cwtl
lahf
nop
jecxz
fidivrl
clc
loopne
jns
iret
ret
popf
xor
in
popf
mov
xor
addb
dec
cmp
jl
jle
stos
test
fwait
mov
mov
push
or
pusha
mov
stos
sbb
mov
xor
icebp
push
push
rorl
jo
adc
add
sbb
mov
cwtl
mov
inc
pop
mov
add
and
sbb
movsb
pusha
and
divl
or
fwait
loopne
or
mov
adc
fisubl
mov
sub
sti
dec
incb
mov
into
mov
je
scas
push
inc
outsl
bound
dec
iret
das
cltd
xor
stos
fldl
xorb
into
or
cmpsl
in
jb
in
jmp
pop
fistps
jge
ss
loop
push
pop
int
rolb
or
mov
add
shlb
aas
pusha
test
idivl
jmp
sub
pusha
mov
out
les
es
ror
mov
and
or
xchg
outsl
jecxz
inc
and
cltd
mov
push
setg
call
out
int3
dec
sbb
loopne
leave
pop
mov
mov
xor
push
cmp
sub
enter
loopne
cltd
loope
pop
xor
and
and
xlat
hlt
pop
popf
cwtd
sub
orl
sbb
lods
push
les
mov
gs
cmp
fdivl
mov
fstpt
rorb
add
mov
cmc
imul
push
and
push
mov
jnp
mov
loopne
push
and
add
lahf
sti
in
neg
lods
push
and
mov
sar
je
jl
mov
cmp
and
sarl
cli
and
inc
scas
daa
mov
jb
mov
test
dec
test
pushf
and
cmp
inc
shlb
imul
subb
add
rorl
in
or
loopne
dec
and
dec
repz
hlt
cwtl
dec
push
cmp
arpl
jae
mov
push
mov
or
xchg
sar
xor
negl
jnp
add
aad
inc
push
icebp
scas
std
adc
pushf
push
push
mov
loop
dec
xchg
shll
inc
pusha
push
leave
jl
loopne
xor
pop
pop
dec
xchg
aas
and
loopne
lds
aaa
adc
cmp
cld
xor
inc
rcl
mov
les
andb
fnsave
lret
out
inc
adc
add
cmp
lret
xchg
xor
mov
sub
mov
adcb
das
fiaddl
insb
adc
xchg
in
mov
adc
sub
fadd
xchg
jl
or
dec
and
xchg
pcmpgtd
xor
cmp
sbb
and
inc
xchg
cmp
xchg
xchg
xor
or
imul
dec
addl
and
inc
pop
ret
enter
loopne
xor
push
mov
inc
arpl
loopne
andl
js
stc
out
nop
nop
and
push
inc
test
rol
pusha
and
pop
and
shrb
inc
mov
lock
and
mov
xor
jge
mov
pusha
push
shl
jno
push
and
sub
mov
sub
movsl
mov
pop
cmp
sub
orb
ret
or
pusha
adcb
or
rolb
xor
test
push
mov
lret
les
push
cmp
and
push
mov
loopne
std
jmp
push
scas
adc
mov
in
test
inc
and
adc
call
lods
aaa
insl
mov
pop
and
movsl
ret
jne
test
inc
loope
xchg
or
js
test
loopne
fildl
inc
pusha
pop
or
mov
outsl
imulb
andb
pop
ret
minps
loop
jle
ret
out
adc
add
mov
shrb
aam
shl
mov
inc
cmp
into
or
shlb
mov
scas
addb
cmp
imul
push
ds
push
fcmovbe
cmp
popa
adc
icebp
outsl
sbb
in
add
subl
xor
imul
cld
mov
push
pusha
add
add
mov
insl
or
lea
or
es
inc
call
lea
clc
addb
push
or
ja
out
iret
imul
push
leave
cmp
adc
gs
loopne
ja
sbb
pop
mov
into
pinsrw
mov
and
adc
insl
in
push
push
ret
xor
fcmovnb
ret
and
xlat
add
sahf
adc
sbb
loopne,pt
pop
daa
cmpsb
and
hlt
mov
pusha
and
pop
pop
ret
loope
push
jnp
out
pop
and
mov
cs
inc
cwtl
dec
xchg
rol
jp
movsb
add
push
xadd
and
add
dec
or
mov
or
add
data16
rclb
enter
mov
pusha
jne
cmp
cmp
fs
push
pop
sub
lods
loopne
repz
jns
repnz
imul
add
mov
jno
out
adc
pop
jmp
js
inc
jae
push
pusha
inc
je
mov
cmp
loopne
call
add
add
into
add
inc
icebp
dec
dec
pop
shll
out
shl
ds
js
loopne
add
pusha
das
push
mov
lsl
or
add
xor
lret
repz
lock
cmp
subl
andb
call
sub
jns
loop
sbb
call
xor
fs
pop
hlt
and
hlt
dec
and
andb
xchg
rorb
mov
dec
rcll
pop
jecxz
imul
mov
fimuls
iret
lock
push
sbb
in
sub
loopne
add
mov
jl
enter
bound
add
loop
repz
enter
lahf
scas
sub
push
jmp
rcrl
imul
test
cli
jmp
cmpsb
mov
test
xor
inc
inc
dec
shll
out
lds
sub
lret
outsb
jo
les
shl
add
in
mov
add
loopne
or
rcrb
mov
pop
sti
sub
pusha
mov
mov
scas
xor
adc
mov
inc
and
movsl
dec
arpl
loopne
ljmp
add
pusha
dec
cmp
loopne
and
call
hlt
into
rcr
xchg
mov
adc
stos
mov
data16
adc
shlb
xor
ret
push
jp
and
fadd
jg
xchg
enter
rolb
inc
and
push
add
and
negb
ficoms
cltd
loop
rolb
mov
rorb
je
pusha
cwtl
add
mov
das
fcom
cmp
add
or
add
shlb
test
xor
mov
cmp
sbb
sub
jnp
stos
xor
mov
mov
ss
rclb
in
in
fwait
push
pop
mov
loopne
je
and
push
jb
cs
inc
and
xor
xlat
cmpsb
pusha
shrb
jmp
push
lret
outsb
rcrl
and
xchg
test
inc
insb
clc
dec
sahf
cwtl
outsb
dec
imul
lahf
dec
pop
and
loopne
fiadds
rolb
xor
lret
in
mov
mov
adc
enter
push
push
call
loopne
push
add
stos
pusha
add
and
rolb
std
outsl
mov
mov
push
mov
jg
mov
jne
or
loopne
pusha
inc
push
mov
stc
sahf
and
cmpb
jns
dec
mov
addb
dec
pop
and
stc
xchg
or
and
mov
scas
add
stos
addb
ljmp
inc
add
shrb
and
add
loopne
loopne
inc
jecxz
test
add
addb
or
xlat
mov
in
mov
inc
loopne
ljmp
sbb
add
push
test
mov
lds
fsts
stos
lods
push
jge
sarl
andb
loopne
pop
mov
pop
inc
add
andb
xchg
ljmp
dec
mov
pusha
push
dec
cli
pop
sarl
imul
dec
lret
loopne
push
daa
mov
sti
ss
int
mov
mov
push
in
insl
fsubrl
js
enter
cmpb
xor
enter
mov
fs
pop
int3
ror
shlb
mov
clc
int3
lcall
aad
xchg
addb
inc
divb
mov
adc
repz
ss
rorb
jbe
fisubrl
xchg
mov
loopne
mov
pop
xor
xchg
sbb
and
mov
std
inc
in
adc
pushf
test
push
arpl
adc
loopne
fs
addb
pop
jne
adc
jl
mov
push
dec
scas
and
imull
addb
daa
dec
int
sbb
pop
fcoml
add
and
movsl
insb
into
adc
jne
jo
das
xchg
imul
jnp
loopne
clc
pop
test
lret
add
shrl
push
lret
add
xchg
pop
loopne
and
aam
mov
iret
andb
add
pusha
sub
mov
lea
and
xor
mov
xchg
leave
push
stos
loope
sbb
inc
add
es
mov
in
sub
sbb
adc
fs
sbbl
add
pop
dec
cmc
or
adc
xchg
push
shlb
mov
repz
fisubrl
add
nop
mov
fsts
adc
push
and
das
imul
or
sarl
pop
insb
adc
inc
hlt
decl
sub
addb
sub
mov
sti
inc
xor
clc
mov
pusha
sub
mov
inc
cmpsl
jns
dec
add
add
add
mov
shl
push
jp
lret
add
cmp
and
inc
jl
movsb
loopne
pusha
ficompl
jnp
xor
and
movsb
and
and
xchg
xchg
push
inc
xorb
subb
enter
sub
inc
add
and
fldenv
mov
jle
xchg
dec
adc
add
or
inc
mov
add
xchg
repnz
fwait
mov
fiaddl
jb
sbb
push
jb
inc
pusha
push
pop
les
data16
loopne
iret
or
test
fimull
push
shlb
xor
das
sbb
addb
and
mov
data16
cwtl
cmpl
sti
lret
xchg
pusha
mov
fld
jl
sar
insb
push
loopne
das
dec
in
xor
pop
xchg
jmp
add
dec
inc
les
push
push
jmp
push
jno
or
subl
popa
cmp
xchg
mov
pushl
inc
push
icebp
adc
test
nop
inc
ljmp
cwtl
out
roll
pop
or
inc
add
sub
add
add
adc
sub
pop
pop
fwait
cmp
dec
into
push
imul
pop
adc
movsl
dec
cs
cmova
and
stos
sub
jbe
andb
jl
outsb
xchg
rorb
pusha
jl
mov
pusha
loopne
mov
inc
loopne
scas
add
mov
les
pusha
orb
andb
and
loope
add
push
push
nop
mov
mov
add
or
or
pop
mov
mov
shrb
pusha
dec
and
fcom
cmp
rolb
lret
decl
insb
popa
test
jo
jae
mov
out
in
mov
add
aam
inc
shl
and
pushf
xchg
mov
add
fcompl
lcall
dec
push
cli
xor
sbb
mov
add
pusha
rorb
mov
lock
mov
lret
inc
es
dec
dec
bound
or
jns
pop
es
add
loopne
andb
andl
pop
cmp
adc
lret
pop
cmpsb
mov
push
fstpt
push
xor
data16
dec
cmp
mov
or
repnz
roll
and
xor
loopne
adc
orb
daa
mov
pop
pop
aaa
rcrl
rorb
mov
push
int
xchg
inc
loope
jo
stos
stos
lret
and
std
dec
sbb
dec
fdivrl
and
mov
push
jecxz
rol
cmp
cmpsb
pusha
add
pusha
inc
popa
mov
mov
shrb
adc
nop
add
push
and
cli
sbb
mov
daa
push
outsb
mov
mov
mov
inc
inc
imul
add
xchg
inc
mov
mov
and
jmp
or
pop
and
loopne
inc
mov
xor
xchg
push
pop
faddl
jge
dec
inc
frstor
mov
adc
lods
mov
jg
mov
and
inc
fildl
push
cmc
xchg
xor
repnz
pop
arpl
jbe
add
cmp
lds
xor
rcll
sub
in
push
bound
call
or
dec
lea
cmp
imul
jnp
jbe
sbb
call
pop
sbb
sub
or
pop
push
std
pop
adc
fwait
popa
daa
imul
jnp
mov
mov
sbb
xchg
mov
dec
hlt
jge
and
mov
cmp
mov
loop
mov
xor
rorb
or
xor
pop
adc
andl
and
mov
ljmp
repz
dec
xor
sbb
pop
rolw
pusha
repnz
loope
cmp
out
push
dec
mov
xchg
sahf
lods
mov
out
push
adc
xchg
sbb
mov
pop
outsb
inc
or
mov
sarl
inc
mov
cmpl
add
gs
insb
arpl
mov
mov
adc
xlat
push
cmp
dec
jg
jo
xor
mov
jnp
sbb
push
push
scas
scas
andb
mov
insl
jno
mov
mov
pusha
addb
out
cltd
push
push
mov
add
int
in
aas
jns
mov
pusha
addb
mov
add
add
jb
ss
cmpsl
popf
add
inc
and
dec
inc
cwtl
mov
insb
add
pusha
shl
popf
das
and
mov
mov
loopne
ret
int
leave
add
shl
sbb
repz
sub
test
rol
lahf
ss
sahf
cmp
or
inc
ret
lds
lods
andb
add
rolb
mov
mov
adc
xor
addb
adc
call
mov
loopne
push
ss
pusha
cwtl
or
add
shrb
adcb
or
and
jb
cmp
push
inc
mov
inc
sti
push
xchg
and
loopne,pn
pop
or
xchg
dec
xchg
psubsb
pop
stos
xchg
inc
cmp
push
mov
pop
mov
fcoml
push
jbe
adc
outsl
sbb
pushf
jnp
rolb
or
mov
mov
add
mov
sbb
mov
out
sub
inc
call
pusha
mov
jo
jg
outsl
les
into
lock
addb
lds
mov
out
jbe,pt
gs
fcomps
lds
ja
insl
rcll
out
add
orb
aad
lret
sti
mov
insl
out
shlb
and
loopne
add
adc
mov
insl
cmpsl
popf
test
xor
andb
gs
pusha
jbe
add
rcrb
sbb
sub
adcb
jecxz
mov
lods
xchg
andb
lods
push
add
mov
addb
ror
mov
mov
cmp
movsb
shlb
outsl
repz
xchg
fildll
dec
mov
loopne
bound
add
shr
and
imul
insb
mov
pusha
mov
add
je
movsb
rolb
in
add
fsts
jg
inc
inc
mov
or
out
pop
jae
imul
fs
add
mov
add
and
andb
dec
xor
mov
mov
loopne
push
aas
sub
lret
push
shlb
cmp
xchg
push
shlb
popaw
jns
mov
jg
sahf
jg
gs
mov
push
add
lds
addb
call
dec
sbb
adc
jnp
lahf
stos
notb
daa
push
xchg
jp
mov
loopne
sub
popa
dec
in
mov
or
inc
das
xchg
inc
sub
mov
pop
xlat
popa
mov
imul
imul
sbb
xor
jne
inc
add
into
xchg
pop
jo
adc
mov
hlt
pop
ficoml
xchg
inc
and
inc
push
fsubrl
push
fwait
neg
push
pop
jl
push
sub
and
push
addb
lahf
push
add
push
sbb
sub
and
or
into
xor
xchg
loopne
ret
das
js
ljmp
es
loopne
inc
add
sbb
fwait
mov
xchg
popf
sub
loopne
or
lcall
shlb
inc
into
lea
inc
fidivrs
mov
push
jp
cmp
andb
outsb
cmp
adc
mov
adc
xchg
lret
das
movsb
and
push
cmp
and
or
std
fdivl
sahf
lret
scas
jmp
popf
mov
add
pushf
lea
inc
loopne
pusha
lods
pusha
loopne
dec
in
cmp
pop
adc
mov
xchg
and
mov
stos
sub
xor
clc
mov
outsl
mov
jecxz
push
mov
in
inc
loopne
and
add
inc
jne
shlb
cmc
insl
cmc
into
fisttpl
jb
xchg
dec
or
mov
outsb
js
loopne
dec
dec
and
cmp
fdivrl
out
pop
movsl
fstpl
xchg
fs
mov
inc
js
popa
inc
push
loopne
sub
sub
loopne
and
inc
adc
daa
notb
and
add
inc
mov
rolb
hlt
dec
sbb
pop
enter
mov
mov
ds
pop
aam
sbb
stos
shlb
ja
add
int
pusha
inc
cmp
sbb
shl
testl
inc
ret
dec
pop
cmpsl
movsb
and
mov
in
inc
loopne
shrl
rorb
add
mov
mov
xlat
pop
xlat
loopne,pn
in
negb
add
fwait
push
and
scas
and
and
ss
sbb
inc
jg
fstpt
cmp
les
test
add
and
mov
shll
jge
rolb
rcrb
in
ficoms
jg
jno
loopne
xor
fdivl
scas
jge
dec
mov
fnstsw
int3
pop
xlat
sahf
or
mov
andb
ret
testb
add
sub
subb
loopne
rorl
and
mov
das
jne
dec
cmp
cmp
cmp
or
cli
arpl
pusha
and
in
jle
pop
jmp
mov
mov
mov
pop
in
xchg
pop
xor
pop
sub
shl
mov
stc
roll
mov
pop
push
jmp
cmp
das
icebp
idiv
cmpsl
outsl
in
lret
mov
les
rol
mov
ja
daa
gs
fcomip
cmc
cmc
dec
mov
rcr
es
mov
imul
test
shrl
and
mov
fbstp
inc
inc
ret
shlb
xchg
fldenv
in
mov
inc
inc
push
push
dec
rorl
or
pusha
test
pusha
ja
ljmp
mov
inc
ja
int3
cmp
inc
ret
xchg
shlb
repnz
repnz
pusha
xor
mov
dec
xchg
pop
sbb
pop
mov
loopne
sbb
insb
sarb
add
or
sbb
clc
jecxz
and
jecxz
mov
mov
adc
ror
shr
add
xor
out
cld
int3
fmul
rorl
and
jae
jl
jno
lret
aaa
jmp
pusha
and
lock
add
inc
out
mov
loopne
imul
popf
mov
and
and
sub
std
pop
push
push
movsb
pusha
rolb
shrb
imul
mov
inc
mov
jns
add
and
inc
in
dec
inc
push
jns
mov
imul
jle
inc
addb
cmp
mov
clc
inc
cmp
xchg
xchg
jae
xor
and
xor
xchg
inc
test
and
scas
in
and
push
push
stos
or
cmpb
sub
xorb
add
inc
inc
daa
sbb
repz
call
pusha
adc
mov
test
add
add
jmp
pop
dec
cmp
mov
mov
mov
jle
es
mov
cli
test
and
loopne
jnp
xor
inc
repz
or
add
loopne
adc
inc
out
into
lock
shlb
mov
pusha
inc
mov
and
push
fwait
stc
rorb
mov
out
sbb
push
sti
test
test
pop
pop
mov
xor
push
cmp
mov
mov
pushf
lret
pop
ret
loop
sub
aas
insl
stc
pop
nop
hlt
and
cmpsl
dec
mov
mov
jg
test
xchg
pop
outsb
test
inc
jecxz
mov
and
dec
dec
fdivrl
and
icebp
sbb
jnp
gs
call
repz
fistps
dec
out
push
dec
sub
mov
and
sbb
leave
sub
sbbb
mov
addr16
mov
push
fsubs
mov
and
lods
pusha
loopne
outsb
je
inc
loopne
push
xchg
repz
lods
mov
out
pop
popf
mov
sbb
pop
rorl
mov
incl
test
add
out
aas
aad
push
and
rcll
lock
adc
fcoms
jecxz
and
pusha
hlt
out
add
shll
mov
rcrb
rorb
and
shrb
mov
sahf
aas
sbb
and
imul
jne
or
pusha
mov
and
loopne
mov
loopne
lret
xlat
mov
mov
push
xchg
addb
xchg
lds
pop
arpl
mov
imul
iret
ds
lcall
mov
lcall
das
adc
push
addb
dec
jo
insb
and
jmp
mov
mov
outsb
push
mov
inc
incl
and
push
cli
pop
push
mov
mov
xchg
inc
cmc
fnstsw
push
arpl
mov
mov
mov
pusha
and
mov
add
mov
and
mov
and
sbb
fwait
ret
jecxz
dec
testl
push
xchg
adc
pop
adc
and
cld
xor
rcl
sub
inc
or
not
cmp
sub
and
call
addb
adc
mov
subps
adc
pop
cli
inc
push
faddl
add
xor
in
xor
sub
fimuls
and
and
andb
and
or
mov
lods
mov
addb
in
ret
in
xchg
daa
call
stos
jo
jbe
std
hlt
lret
adc
adc
int3
int3
das
jbe
pusha
shlb
imul
push
and
shlb
add
mov
jecxz
leave
or
inc
cltd
cld
sbb
xchg
mov
xchg
pop
add
push
mov
pusha
sbb
loop
in
fsubs
inc
addb
js
xor
repz
test
add
jb
cmp
sbb
addr16
andb
leave
jl
inc
and
and
aam
dec
sbb
mov
pop
rcr
add
sub
mov
pusha
adc
mov
inc
jecxz
pop
lds
jp
xor
cwtl
jmp
std
pop
cmp
push
xchg
and
inc
and
inc
mov
mov
cmpsb
shlb
decl
mov
push
push
movsl
jge
mov
mov
insb
test
dec
mov
loopne
sbb
cmpsb
add
dec
loop
enter
and
jecxz
andl
shr
or
repnz
and
fs
hlt
inc
xchg
rorb
pop
xchg
scas
addb
sbb
fbld
imul
inc
mov
imul
pop
movsb
mov
sub
stos
and
mov
push
push
mov
lahf
jne
cltd
aas
loop
fimull
and
stc
inc
pop
fldl
mov
pusha
hlt
pushf
adc
mov
dec
stc
aam
pop
pusha
popf
jecxz
cmpsl
psubd
ficomps
fmul
mov
inc
cltd
cs
addb
int
cmp
sbb
xor
loopne
mov
cmp
clc
andb
pop
and
add
pusha
je
loopne
xchg
dec
xchg
imul
clc
test
ret
and
add
cmp
int
and
scas
pusha
loopne
gs
add
mov
adc
or
xchg
and
and
add
add
or
rcrl
loopne
sub
stos
loopne
cltd
rcr
in
imul
loopne
cmp
mov
loopne
in
pusha
rcrb
pop
xchg
add
cmpsl
inc
decb
dec
in
push
push
inc
loop
push
pusha
inc
arpl
mov
das
inc
add
add
insb
movsl
xor
loopne
andb
jns
test
arpl
stc
addb
pop
fdivrl
cmp
add
ret
dec
adc
test
add
imul
loopne
push
repnz
add
jb
pop
jae
and
cmp
and
sbb
inc
and
ret
lret
inc
adc
inc
mov
lock
adc
rolb
or
loopne
lret
pop
adc
or
loopne
xor
and
pop
or
inc
cmpl
rol
mov
mov
xchg
pop
or
xchg
xlat
inc
and
shrl
dec
sub
loopne
insb
scas
sbb
call
loopne
add
cmpb
adc
out
fwait
xchg
imulb
clc
mov
adc
stc
das
cmc
mov
dec
sahf
xchg
jecxz
fisttps
inc
popw
int
push
cmc
xor
jb
mov
mov
ret
xor
cmpsl
dec
sbb
adc
dec
or
xor
and
shrb
xor
sub
dec
dec
fcomip
dec
mov
icebp
lcall
pushf
rclb
inc
dec
push
mov
add
jp
insl
call
add
mov
jp
xchg
insb
mov
std
add
call
pushf
inc
std
mov
shlb
push
pusha
mov
or
insb
jnp
mov
add
mov
sbb
push
adc
pop
clc
jmp
add
rolb
jo
mov
and
inc
pusha
scas
shlb
push
pop
inc
xchg
jae
lret
loopne
fcoml
cld
das
fsts
sahf
das
pop
or
inc
in
lds
repz
add
add
jb
in
mov
aam
les
or
test
and
jns
rol
aaa
pop
cli
mov
sbb
sbb
pop
cmp
orl
imul
pop
mov
popa
jbe
mov
fcoms
inc
dec
insb
ljmp
dec
pop
dec
push
pop
mov
inc
fbld
loopne
cwtl
and
lods
add
test
loopne
les
push
lock
adc
out
mov
mov
push
jne
aam
bound
sbb
mov
dec
lret
sbbl
lcall
mov
arpl
adc
jge
stos
insb
ja
sbb
push
scas
add
js
pusha
inc
add
inc
xchg
adc
mov
xchg
and
pop
shrb
rol
mov
stos
fisttpl
icebp
inc
arpl
xor
rcl
incl
andb
pusha
adc
and
cltd
sti
xchg
push
loopne
and
loopne
pusha
movsb
add
imul
call
and
fs
sbb
je
decl
loopne
inc
test
add
jl
mov
rolb
push
je
icebp
lods
pushf
dec
add
inc
lods
lea
inc
cmpl
fistpl
xchg
ljmp
xchg
inc
mov
push
and
push
mov
cltd
inc
fsubrs
addb
ljmp
mov
cmp
shlb
and
pusha
lret
mov
enter
inc
mov
xor
adc
mov
mov
xor
test
mov
mov
or
pusha
pop
pop
cmpsb
pusha
andb
fisubs
loopne
shll
test
fistpll
cmp
jbe
xor
imul
lods
and
or
mov
insl
call
mov
inc
sbb
jne
cld
cltd
iret
cmp
sbb
je
or
jmp
sbb
adc
notl
loopne
scas
pop
popa
cmp
aam
add
add
and
dec
dec
sbb
mov
shlb
loopne
push
mov
inc
jge
sbb
fmull
push
test
subb
inc
add
test
add
fwait
cmp
cmp
jle
mov
movsl
xchg
push
mov
xchg
cmp
std
dec
repnz
add
dec
pop
xor
xor
pusha
jmp
addr16
and
subb
or
and
hlt
lret
inc
addr16
jne
lcall
repz
add
add
rcrb
mov
jge
pop
subl
mov
sti
mov
jmp
mov
mov
push
and
xchg
add
dec
sbb
mov
or
shrb
cmpsb
pusha
cmpb
mov
or
sub
cmp
sbb
add
loopne
pop
xchg
and
inc
and
loopne
mov
dec
xor
test
mov
add
notl
arpl
mov
iret
test
xor
rolb
gs
cmp
push
and
inc
ljmp
fwait
ret
mov
out
push
mov
pop
in
loopne
push
aad
mov
jle
lods
inc
mov
and
mov
loopne
cmp
fmull
insb
pop
dec
or
pop
pop
lcall
outsl
imul
int
icebp
insl
and
mov
popf
mov
inc
push
insb
push
sbb
hlt
dec
lahf
notl
sbb
rolb
and
js
push
lods
cwtl
jmp
ret
xor
sub
mov
dec
jb
bsf
loopne
sbb
loopne
add
sarl
pop
dec
ss
aas
mov
fs
add
sub
pusha
sub
inc
shlb
jp
call
div
add
and
and
push
add
pushf
pop
cmp
scas
and
jnp
in
sub
inc
mov
arpl
addb
xchg
add
cmp
pusha
mov
jb
shlb
pop
clc
outsl
sbb
addb
mov
imull
fwait
inc
mov
cwtl
sbb
stos
jl
xlat
or
outsb
dec
pusha
loope
daa
cltd
xchg
mov
adcl
pop
push
inc
out
inc
sbb
into
loope
out
add
cmp
push
loopne
dec
cmc
or
insl
cwtl
cwtl
push
cmp
sbb
icebp
pop
pop
push
add
ja
adc
xchg
or
iret
lock
lcall
jo
mov
and
lods
in
ljmp
stc
decl
cmp
mov
adc
int
mov
mov
rcrb
xchg
jo
jae
dec
mov
cmp
and
and
inc
je
icebp
adc
and
sub
mov
nop
enter
push
insb
mov
xchg
int
dec
mov
scas
test
loopne
push
inc
add
xor
pusha
inc
dec
mov
dec
pop
das
shrb
and
jae
xchg
jae
pop
lret
addr16
ret
scas
mov
push
and
add
stc
inc
sub
adc
js
xchg
lcall
xor
mov
sub
sub
pop
sub
das
dec
sub
clc
fwait
in
loopne
inc
push
pop
icebp
or
mov
mov
xchg
add
mov
es
cmpb
mov
fwait
cmp
jbe
dec
fisubs
addb
hlt
iret
mov
test
int
inc
bound
loopne
add
add
push
mov
lea
stos
sbb
push
icebp
icebp
add
rolb
mov
inc
inc
jecxz
sub
movsb
add
fcomip
outsb
fstp
cmp
loopne
mov
push
mov
ss
pop
push
aad
rolb
pop
cltd
mov
add
pop
aad
mov
addb
xlat
push
jl
dec
mov
shl
xchg
rcll
mov
ficoml
shll
jno
and
loopne
mov
daa
mull
adc
lcall
shl
andb
pushf
loop
mov
and
inc
mov
loopne
in
lahf
mov
jle
push
sub
add
cmc
sbb
dec
arpl
loop
rolb
pusha
add
shlb
ret
lret
jecxz
lock
pushf
jb
pop
sub
out
js
and
andb
js
cli
lods
dec
xor
andb
and
inc
mov
xchg
mov
dec
xor
fwait
sbb
mov
add
inc
andl
add
mov
adc
fsubp
cmp
add
iret
dec
arpl
pusha
pop
rcrb
mov
aad
out
xchg
jmp
mov
xchg
repz
inc
pop
movsb
inc
and
mov
stos
mov
sub
ret
xor
mov
loopne
push
xchg
mov
mov
and
mov
fldenv
and
jmp
rolb
shl
addb
inc
stos
shlb
ds
or
sub
fwait
cmp
test
subb
inc
rclb
cmp
jp
fs
pusha
xorb
andb
cmc
push
mov
sbb
shrb
mov
jecxz
mov
add
testl
ret
mov
push
adc
pop
leave
inc
inc
popa
scas
andb
add
inc
bound
lods
mov
mov
aaa
mov
mov
movsl
cmp
push
loopne
xor
fs
outsb
lods
test
xor
popa
xlat
fwait
push
dec
mov
call
shll
and
mov
nop
ds
loopne
mov
cmp
pusha
mov
cltd
push
sub
xchg
xor
dec
cld
adcl
arpl
shlb
adc
dec
pop
jb
mov
fistps
imul
rolb
sbbb
shrl
ret
xor
pop
in
push
sbb
js
int3
jbe
shl
push
inc
cmp
adc
lods
inc
std
cmp
cmp
popa
jle
mov
or
push
ss
jecxz
mov
jmp
hlt
jb
pop
fidivs
pop
clc
pop
xchg
jno
xchg
and
mov
mov
sub
pusha
int3
cmp
dec
xchg
push
fistpll
mov
dec
ret
shll
loopne
rolb
rcrb
leave
fisubrs
subb
add
jg
jl
repz
aam
loopne
xor
lret
pop
push
mov
sub
andb
lahf
cmc
fldt
jl
in
jge
mov
pop
xchg
xor
repz
add
ret
mov
dec
enter
add
mov
int
add
ret
roll
add
loopne
pop
push
imull
mov
mov
jle
mov
push
decb
ror
daa
xor
aas
decl
andb
in
jp
in
ja
repnz
jbe
shlb
adc
pop
xchg
xchg
fmull
jae
push
push
outsb
sbb
shll
jge
or
adc
or
pusha
jl
ss
jo
mov
ja
pusha
mov
sub
arpl
mov
and
daa
in
push
jno
mov
cmp
push
xchg
loope
jns
push
inc
mov
mov
fistpll
xor
test
in
sub
mov
enter
pusha
jp
cmpsl
aam
or
mov
mulb
addb
and
and
add
and
andb
loopne
stc
movsl
sub
shl
ja
das
mov
loopne
stos
mov
popf
rclb
call
xor
test
popa
arpl
add
rolb
jle
lds
les
ffreep
rsqrtps
test
jne
and
push
pusha
inc
aad
mov
popf
addb
dec
dec
pop
jne
cmc
cmp
ficoms
test
shrb
idivb
das
ja
sbb
cmp
xor
mov
js
ds
jb
cld
out
cmp
mov
inc
mov
bnd
imul
sub
xor
cs
push
add
scas
fwait
push
aaa
stos
sub
and
inc
mov
mov
push
shlb
loopne
mov
dec
jns
shl
pop
mov
mov
nop
sub
adc
pusha
rol
mov
jne
add
pop
mov
and
pop
cmp
dec
mov
rorl
outsl
dec
add
in
mov
lods
outsb
ss
lods
adc
pop
int
movsl
bound
pop
pushf
jl
insb
and
pusha
inc
inc
fstpt
sbb
dec
lock
mov
and
jge
rolb
and
inc
jp
sahf
inc
or
push
cs
loopne
add
inc
jecxz
cmp
add
loopne
fcomp
cltd
mov
sub
and
inc
or
loop
add
stc
pop
sbb
and
jno
push
bound
sbb
outsl
call
pop
or
push
add
dec
ret
inc
scas
cmp
jmp
jp
pop
mov
lea
add
pop
pop
inc
pop
dec
adc
outsl
push
negl
fldl
pop
mov
sbb
mov
incb
loopne
nop
test
mov
mov
mov
xchg
scas
mov
adc
inc
pusha
xchg
mov
addr16
push
push
ret
mov
imul
loopne
cltd
fwait
pop
ret
mov
pop
mov
push
loope
pusha
in
popf
cmp
mov
stos
shlb
mov
adc
mov
xor
push
xchg
mov
jmp
inc
fists
js
cmp
shrd
xchg
and
add
dec
jne
aaa
cwtl
jb
cmp
inc
jno
in
arpl
data16
adc
adc
jbe
cmp
mov
add
rcrb
inc
pusha
pop
jno
jae
push
jae
inc
rclb
loopne
into
push
pop
push
push
loop
test
and
out
shrb
and
js
cmp
loopne
addb
clc
bound
sahf
gs
fdivrl
pop
push
in
je
xchg
enter
cmpb
mov
int
fisttpl
into
addb
inc
addb
mov
in
shlb
push
fildll
fs
fcomi
xchg
aaa
dec
jmp
inc
xor
or
mov
cld
or
add
andl
shlb
aas
sbb
scas
pusha
add
and
inc
aam
test
add
push
add
andb
icebp
das
mov
add
les
add
rclb
mov
jnp
mov
cmc
std
inc
mov
jb
scas
andb
out
xchg
in
xchg
inc
xchg
hlt
shll
xor
and
mov
push
outsl
lcall
sub
mov
jo
mov
in
mov
pop
fs
jne
or
jle
out
jne
lods
inc
sbbb
push
mov
mov
sbb
mov
iret
pop
and
and
inc
inc
rcrb
jae
fisttpll
subl
rolb
addr16
mov
movsb
loopne
or
loopne
add
add
mov
data16
mov
mov
jmp
inc
lea
mov
xor
and
pusha
inc
push
cmp
flds
pusha
and
cmp
sub
addr16
and
mov
nop
loope
test
and
mov
pusha
xchg
pop
imul
loop
xor
mov
leave
loope
or
pusha
xor
sub
inc
fstp
inc
in
repnz
shll
pusha
inc
push
mov
into
das
push
pop
add
negl
fbld
pop
nop
aaa
jnp
mov
mov
shrb
mov
pop
cmpsl
pop
sub
mov
or
fadds
jmp
dec
shll
push
inc
pop
das
jmp
andb
loopne
push
xchg
popl
xchg
test
shll
pushf
dec
xchg
inc
pop
lret
sbb
add
sbb
and
fisubl
shlb
out
fdivr
mov
mov
sub
pusha
sbb
scas
and
push
mov
cmp
in
adc
arpl
mov
dec
aas
shr
mov
add
xchg
mov
dec
jle
and
ljmp
xlat
data16
shrb
shlb
jno
and
arpl
rolb
sub
out
inc
clc
inc
and
sar
jmp
loopne
push
jbe
ret
je
sti
cmp
mov
clc
xor
jbe
mov
xlat
and
mov
fdivs
xchg
stc
sub
sti
pusha
popf
mov
orb
movsl
mov
mov
inc
add
cmpsb
mov
iret
dec
loope
and
inc
mov
inc
adcb
and
insb
fdivs
loope
imul
mov
andb
jmp
pop
dec
sub
and
adc
stc
lods
and
xchg
mov
sub
push
cmp
dec
daa
outsl
gs
push
test
xchg
pushf
mov
mov
xor
shlb
pop
in
jl
jmp
adc
lret
mov
and
rol
pusha
mov
test
add
lock
inc
sbb
ss
cmp
xchg
dec
insb
popf
and
cmp
xchg
cmp
in
das
clc
sub
sub
and
sub
mov
sub
sbb
or
mov
adc
test
and
mov
pusha
int3
mov
ja
inc
mov
or
pusha
jecxz
and
movsb
shlb
nop
push
or
loopne
clc
xchg
adc
xchg
shlb
dec
and
cmc
shlb
loope
dec
xor
jbe
js
push
les
arpl
sbb
jecxz
cmc
fwait
cmpsb
add
outsb
stos
ret
cli
stc
outsb
hlt
std
mov
add
aaa
test
add
inc
pusha
push
sub
dec
mov
pop
jo
or
loopne
pop
push
adc
add
sbb
in
push
aad
int
pusha
add
pushf
dec
adc
mov
inc
insb
xchg
jno
gs
mov
inc
mov
adc
rolb
pusha
and
jnp
cwtl
insb
lret
mov
inc
data16
push
add
pop
lcall
push
loope
or
and
addb
sub
push
fwait
cmp
lods
cmpsb
mov
push
fists
jle
cmp
sub
rorb
add
scas
int
andb
or
shlb
shlb
rcll
bnd
inc
loopne
xchg
mov
pusha
sarb
and
ficoms
andb
sbb
shr
push
addb
das
add
dec
sarl
imul
add
xorb
fsubrl
lods
dec
adc
js
push
imul
xchg
mov
lock
inc
and
fiadds
dec
rcl
pop
repz
mov
dec
push
sub
inc
cli
and
push
call
pusha
das
mov
and
loop
and
mov
push
les
xor
add
sbb
add
shlb
repnz
leave
mov
loopne
xchg
push
inc
and
rol
loope
imul
cmpsl
je
jns
xchg
push
loopne
adc
scas
and
mov
loopne
or
inc
fcmovnbe
aaa
sbb
pusha
mov
pusha
mov
pop
lret
aaa
fcmovnb
sub
adc
test
dec
inc
andb
and
mov
pusha
jl
jge
andb
cmp
adc
add
test
loopne
test
fimuls
popf
xor
dec
outsb
jae
adc
aad
addr16
mov
mov
hlt
adc
dec
and
mov
outsb
notb
jb
inc
fidivl
test
adc
add
inc
std
into
sub
and
sahf
push
mov
stc
addr16
outsb
adc
add
jb
into
jecxz
xor
iret
xchg
arpl
mov
push
sahf
and
shrb
inc
out
pop
fstp
outsl
fisttps
cmp
mov
shl
loopne
repnz
aad
xchg
movsb
mov
pop
jae
mov
stos
inc
mov
and
push
popf
fwait
ljmp
and
das
xchg
pushf
cs
mov
adc
das
mov
pop
movsl
pushf
aas
mov
movb
repz
jno
test
xchg
inc
pop
gs
push
push
or
or
mov
loopne
outsl
imul
or
jbe
mov
out
out
mov
sbb
cli
xor
inc
adcl
jl
add
rol
stos
addb
push
fdivrl
push
pop
and
int3
jl
add
and
mov
je
ret
and
inc
cmp
cli
movsl
sub
mov
xor
inc
dec
xchg
popa
mov
lea
and
xchg
jl
pusha
pusha
ffree
arpl
shl
inc
and
lret
ret
fcoml
and
mov
repz
push
add
loopne
popf
jo
and
loopne
mov
std
inc
mov
cld
push
test
mov
loopne
loope
loopne
sub
xlat
rolb
jge
aad
aas
addl
and
pusha
add
andb
cltd
repnz
fldenv
outsb
sbb
dec
push
shlb
and
push
pusha
inc
daa
xchg
add
fmull
mov
and
test
push
mov
fldenv
sti
adc
jp
fistpll
mov
pusha
adcb
push
jo
push
and
dec
jp
mov
loopne
iret
rclb
loopne
push
into
add
inc
ds
jno
das
inc
in
loopne
pop
sti
push
or
inc
xor
pop
xor
idivl
shlb
loopne
adc
fdivrl
dec
mov
inc
test
fcoms
sub
out
mov
mov
inc
pop
cmp
movsb
and
iret
stos
outsb
pop
int3
repz
adc
inc
mov
frstor
loop
or
stos
mov
cmp
lcall
insl
add
shrb
xchg
inc
call
dec
sbb
mov
adc
fcmove
sahf
iret
adc
xor
gs
addb
push
dec
lods
mov
mov
popa
inc
mov
cmpsl
das
cmc
aad
inc
add
pop
shlb
jnp
mov
or
lcall
and
cmp
orl
jge
lret
cld
cmovnp
dec
mov
inc
jecxz
fistl
jl
pusha
adcb
or
and
ret
jbe
stc
mov
inc
add
and
loopne
push
adc
mov
push
and
push
lock
addb
sbb
mov
xor
xor
pop
mov
xchg
push
and
sub
andb
dec
nop
ret
into
pop
dec
fs
in
mov
cmp
test
dec
mov
mov
fsts
jo
pusha
loopne
loopne
inc
jg
fcomps
arpl
mov
and
scas
push
add
rol
mov
int3
cld
and
fs
jne
inc
enter
loopne
push
pop
enter
jmp
mov
dec
cmp
cmpsb
inc
mov
mov
add
int
mov
mov
adc
aad
dec
sbb
aas
jmp
out
pop
and
pusha
push
adc
jmp
push
shlb
mov
movsl
mov
loopne
jbe,pt
or
ret
cmp
pop
test
and
scas
push
bound
pop
jmp
sarb
xchg
xorl
lret
sub
sti
sbb
cltd
mov
lods
mov
dec
adc
adc
dec
pop
imul
mov
iret
push
movsl
ficompl
loopne
mov
mov
xor
iret
data16
out
addb
inc
cli
mov
decl
add
mov
test
inc
into
gs
add
and
and
push
xor
xor
sbb
push
imul
sbb
pusha
sbb
jg
mov
sbb
lcall
fiaddl
jmp
mov
push
loope
push
nop
dec
ret
mov
sub
cmp
mov
xchg
rclb
rolb
inc
and
test
pop
pop
push
and
jecxz
push
mov
inc
add
lahf
and
pop
xchg
sbb
mov
pop
sbb
and
pusha
orb
arpl
rolb
jno
sbb
jmp
loopne
popa
rclb
stc
addb
inc
in
sbb
stc
xchg
ret
and
and
add
sbb
xor
mov
sbb
test
test
sbb
aas
fcomps
pop
sbb
es
dec
arpl
test
loopne
aam
mov
rorl
ficoml
inc
inc
mov
inc
cmp
add
shlb
sub
add
mov
sti
enter
pusha
jg
and
inc
adc
dec
or
aam
xchg
js
xor
mov
mov
dec
cmc
push
push
cltd
inc
loop
cli
push
jno
sub
mov
rcrb
push
pop
push
insl
bound
adcb
flds
les
scas
mov
int3
add
popa
mov
fstpl
js
addb
push
fs
dec
mov
and
cmp
movsl
sbb
mov
movsl
xchg
add
or
add
pop
mov
pusha
add
out
cmp
mov
adc
shl
cmp
xchg
adc
mov
jno
aad
data16
cmp
mov
pop
sti
mov
rol
xchg
adcl
cld
loope
stos
stc
pushf
push
pop
adc
lcall
out
and
shlb
clc
lods
inc
and
shlb
pusha
sbb
loopne
mov
in
pop
push
bswap
mov
or
and
sbb
cwtl
pop
data16
and
imulb
repz
push
shlb
mov
mov
adc
or
push
ret
movsl
dec
mov
mov
js
jge
popf
cmpsl
xor
dec
mov
pusha
fs
and
and
inc
lahf
push
mov
and
mov
xchg
call
or
loopne
or
pusha
cmp
mov
mov
addb
cmc
test
loopne
loopne
sub
jns
ds
sbb
cwtl
cmp
add
fs
and
andb
mov
add
push
mov
loopne
std
jecxz
xchg
pushf
add
mov
orb
dec
ror
push
pusha
add
inc
push
bound
andb
fidivl
mov
add
movsb
inc
and
in
out
cmp
sub
pusha
sahf
push
push
lock
mov
mov
jle
mov
add
rol
and
mov
or
mov
daa
xor
notb
xchg
add
bound
ret
daa
mov
mov
pop
xor
pushf
shrb
dec
mov
mov
mov
sub
data16
pop
loopne
adc
inc
loopne
inc
loopne
pop
jle
pushf
and
push
aas
add
cmpb
xchg
mov
pop
test
pop
shrb
pop
sbb
push
xor
lret
test
cld
jns
mov
and
subb
sbb
and
mov
loopne
sar
sbb
and
frstor
das
int
insb
and
loope,pt
push
pusha
and
xor
pop
out
loop
mov
inc
fwait
jbe
pop
cmp
jae
add
arpl
enter
and
outsl
xor
xchg
fisubs
outsl
push
pusha
loopne
rcrl
pusha
cmpsb
and
jecxz
sti
xor
insb
push
push
fdivrs
mov
xlat
jo
mov
add
sarb
xor
push
pop
adc
out
scas
mov
inc
stc
outsl
adc
iret
loopne
pushf
imul
mov
and
fnstcw
stc
mov
xchg
sti
shl
sahf
jle
mov
and
xchg
pop
push
inc
add
xchg
add
loopne
andb
mov
mov
jne
jo
int
mov
popf
pop
fmulp
adc
hlt
xchg
xorb
mov
inc
popf
call
adc
cmpsl
fcmove
mov
push
jecxz
aaa
ss
popa
mov
xchg
lods
addb
addb
pop
sbb
scas
pusha
and
mov
clc
or
inc
repz
bound
jbe
sbb
inc
sti
dec
les
cmpl
inc
jl
cmp
sub
xchg
std
pop
pushf
cmp
movsl
in
jo
mov
es
add
sub
pop
push
in
adc
int3
push
add
pop
push
lret
xlat
imul
insb
rcll
pop
or
data16
rcrl
mov
push
popf
ds
and
imul
jmp
xchg
addb
inc
xchg
xchg
psubd
pop
dec
xchg
sub
mov
inc
mov
inc
addb
mov
nop
add
rcrb
aaa
outsl
fidivrs
mov
and
test
sbb
jnp
js
mov
mov
mov
xchg
sbb
int
dec
sbb
cmpsb
and
fadds
aad
and
mov
inc
pusha
test
ud2
jmp
lcall
sahf
inc
xchg
es
ficompl
xchg
imul
dec
sbb
sahf
xchg
ljmp
and
inc
xorl
push
adc
shlb
into
push
cmc
mov
fwait
cmpsb
loopne
jl
shl
imul
lahf
push
xor
push
and
add
popf
mov
sarl
push
push
inc
inc
lcall
repnz
in
add
cmp
adc
jmp
xchg
mov
push
xchg
scas
and
in
and
iret
push
and
dec
and
shlb
aad
loopne
mov
jl
adc
mov
addb
mov
int3
pop
jge
cmpsl
or
andb
loopne
leave
hlt
ja
inc
push
pusha
pusha
insl
sub
and
shl
dec
dec
pop
fisttpll
jbe
clc
sub
shlb
and
inc
dec
push
pop
add
daa
dec
sbb
jg
xor
mov
test
add
loope
add
inc
cwtl
iret
dec
stos
pusha
shlb
push
int
in
shlb
sbb
andb
inc
fisubl
xor
mov
pop
inc
xchg
lahf
mov
pop
loopne,pt
cli
lds
mov
jmp
shll
addb
lcall
call
cmp
fsubl
stc
popf
xchg
sbb
and
shlb
shl
add
jne
das
sub
lods
idivb
push
pusha
inc
adc
andb
pop
cmp
add
shlb
dec
pop
cmp
sahf
out
pop
and
and
cwtl
rclb
xorb
inc
enter
mov
add
pop
scas
sbb
xchg
rep
andb
mov
das
in
lock
loope
out
xor
stc
les
sbb
int
inc
loopne
or
and
cli
out
out
add
fwait
pop
pop
push
pop
jnp
mov
icebp
and
mov
leave
mov
loopne
adc
xchg
dec
inc
popa
shrb
inc
cmp
je
ficompl
mov
add
xorb
js
cltd
sub
mov
push
jl
lods
loopne
insl
pop
sub
pusha
pop
jecxz
sbb
and
addb
mov
cmp
pop
pop
or
fildl
push
fidivrs
lods
mov
inc
sbb
jl
rep
pusha
andb
int3
hlt
inc
inc
nop
sub
mov
push
mov
add
pusha
insb
fisubrl
stos
mov
inc
inc
andl
mov
add
lods
loopne
lods
add
into
jle
inc
js
push
jge
sbb
notb
pusha
inc
rol
dec
pop
and
fadds
pop
in
mov
and
loopne
out
xchg
adc
outsb
cmp
mov
rclb
mov
leave
mov
or
outsb
xchg
out
mov
add
add
jae
in
mov
shll
jle
andl
jne
jmp
cwtl
lret
movsl
sub
es
mov
mov
rol
mul
adc
push
push
outsl
addr16
loopne
fstl
leave
add
mov
add
add
and
xchg
cwtl
cmp
insl
mull
and
jnp
mov
and
inc
mov
pop
shlb
and
add
pop
lcall
pop
aas
mov
inc
pop
inc
adc
ss
lret
dec
insl
iret
xor
sar
fs
sub
or
bound
testl
lds
push
inc
loopne
add
and
and
fdivl
push
push
andb
cs
inc
fs
sbb
dec
mov
jle
clc
or
and
or
inc
mov
ja
loopne
push
addb
sub
ret
iret
jno
addl
ds
xor
push
xlat
dec
int3
cmpsb
add
mov
adc
jae
sub
sub
pusha
add
or
in
div
stos
pusha
pusha
mov
dec
fstp
and
pusha
mov
leave
ficoml
jnp
addr16
and
inc
and
xchg
xor
insb
jne
loopne
out
pusha
mov
jecxz
push
ds
dec
icebp
es
and
je
mov
enter
cmpsb
pusha
and
addb
fimuls
fs
inc
mov
inc
push
iret
push
add
stos
and
xchg
lock
das
inc
mov
sbb
ss
mov
orb
mov
mov
xor
add
inc
add
inc
jmp
insl
sub
loopne
clc
shr
pop
ds
jo
rolb
and
and
pop
arpl
mov
xor
pop
xor
shlb
add
mov
andb
repnz
sub
mov
adc
xchg
push
cwtl
cmp
or
cltd
add
enter
rorb
mov
xchg
mov
adc
push
xchg
add
jle
fiadds
stos
add
push
mov
add
add
inc
mov
add
jae
mov
andb
lods
add
xor
add
roll
push
mov
xor
xchg
repz
add
adcl
jne
dec
loopne
lock
push
rorl
add
mov
jl
inc
push
mov
lods
inc
loopne
add
mov
add
ljmp
nop
xor
je
push
pop
jmp
and
loop
and
sub
add
adc
test
fldenv
pusha
orb
inc
ret
sub
cmpb
ja
shrb
into
or
fidivrl
andb
adc
and
xchg
int
adc
push
cmp
mov
push
jmp
jg
or
loopne
xchg
mov
loopne
fs
or
push
mov
ja
lods
add
cwtl
add
inc
and
out
push
mov
mov
fs
inc
loopne
and
sbb
addb
fistpl
scas
sbb
arpl
xor
out
adc
out
loop
lcall
dec
xchg
loopne
test
insl
lock
or
leave
cmp
inc
mov
notl
pop
addb
out
adc
ss
inc
lods
xor
cmp
push
ja
mov
inc
adc
std
ret
popf
sub
xchg
popa
sub
andb
leave
mov
xor
out
movsl
bound
mov
arpl
pop
sbb
xchg
insl
mov
adc
mov
dec
push
inc
into
ret
mov
addr16
xorl
cmc
std
jns
add
sbb
repz
fincstp
xor
inc
mov
jmp
fs
cmp
mov
sub
addb
jnp
pusha
ret
in
jno
out
daa
ds
mov
fsubrs
fs
and
cs
subb
outsb
jl
cmpsl
dec
inc
fbld
loopne
mov
ds
in
lods
cmp
push
sbb
scas
and
adc
cmpsb
add
cli
and
loopne
mov
push
push
mov
decl
test
cli
rcrl
sbbb
mull
in
imul
jno
dec
xor
and
add
pusha
mov
mov
dec
aas
dec
je
leave
xchg
push
push
call
and
lcall
outsl
stos
test
add
sti
stos
loopne
ja
jmp
xor
xor
or
loopne
jnp
in
pop
in
je
pusha
and
push
int
les
mov
add
xor
push
inc
pusha
fnstenv
mov
push
adc
mov
cli
cmpsl
cmp
mov
mov
andb
fucomi
mov
addb
addl
pusha
sbbb
imul
gs
or
fstp
loop
into
lret
sbb
inc
xor
push
mov
add
jl
fiaddl
adc
popa
arpl
push
inc
unpckhps
pop
sbb
pusha
inc
xor
stos
mov
jmp
inc
out
test
test
inc
pusha
jns
inc
arpl
dec
cmp
out
jecxz
setl
mov
mov
push
cmpsl
stos
inc
and
add
popf
pop
push
dec
mov
inc
loopne
std
orl
jle
jmp
or
xchg
jbe
dec
or
inc
add
inc
jg
call
xor
pop
push
xchg
jmp
loopne
xor
and
xor
rolb
adcb
push
cmpsb
inc
and
xorl
mul
jl
jne
mov
add
add
mov
mulb
loopne
adcl
rolb
and
aas
sti
mov
lcall
inc
mov
dec
xchg
push
imul
add
mov
push
ret
test
inc
jb
adc
and
andb
addb
inc
sub
pusha
adc
pusha
call
dec
sub
shrb
add
push
insb
loop
adc
push
jmp
stc
mov
push
pop
jmp
fisubl
lret
arpl
popa
pop
xchg
mov
addb
sarb
add
xchg
adc
mov
xchg
inc
out
cmp
mov
sub
fs
xchg
dec
cmpsb
mov
data16
pop
enter
pusha
inc
dec
popa
jp
and
and
inc
mov
dec
mov
xor
ss
icebp
aas
repnz
jnp
fs
cmp
int
jae
jne
add
scas
sub
xor
add
arpl
mov
addb
repnz
test
shr
loopne
cmp
cmp
add
lods
mov
xor
cmpsl
lss
ja
dec
and
aad
adc
aad
mov
fidivl
in
cmc
mov
inc
dec
push
xor
mov
clc
clc
inc
mov
ds
xor
push
out
jbe
dec
dec
mov
add
jne
xchg
sub
outsl
push
out
outsb
and
mov
push
xor
lret
and
xchg
jmp
sti
dec
mov
push
and
add
loopne
insl
test
and
fstl
stc
xchg
sbb
mov
mov
out
pop
dec
repnz
add
xchg
ja
xchg
stos
cmp
cmp
adc
loop
es
gs
pop
scas
mov
pusha
stos
jl
push
mov
xchg
cltd
jb
dec
into
in
adc
and
lock
xor
loop
mov
pop
fpatan
scas
andb
and
sbb
cmpsb
pusha
orb
mov
out
and
and
add
jno
and
push
aaa
or
mov
dec
xchg
nop
xchg
lods
inc
mov
sbb
cmp
mov
mov
test
inc
mov
arpl
jle
push
lods
cmp
adc
rorl
and
mov
loopne
lcall
pop
pop
bound
loopne
mov
shlb
inc
push
inc
rorb
inc
leave
mov
jb
andb
das
jno
xlat
mov
xchg
xor
mov
xchg
jecxz
ljmp
fistpll
pusha
add
clc
push
rorl
adcb
jne
or
inc
test
jg
and
in
pop
mov
pop
and
lods
incb
subb
ds
mov
lock
xchg
xchg
in
cmp
push
iret
stos
aam
push
imul
and
mov
inc
clc
sbb
loopne
dec
cmp
adc
gs
addr16
mov
cmc
inc
ret
mov
arpl
or
push
in
ds
pop
popf
xchg
repnz
xchg
pop
adc
inc
pusha
dec
pop
popf
and
and
aad
mov
fwait
adc
mov
jge
push
int
mov
out
cmp
stc
sub
rclb
outsb
pop
add
cmp
repnz
push
mov
mov
xor
mov
ret
push
cmp
pop
pop
sti
xor
loopne
ja
or
lcall
jmp
xorl
bswap
xor
mov
add
sbb
stos
mov
mov
push
push
xchg
les
add
lods
loopne
xchg
std
adc
mov
pop
cmpsl
and
xchg
mov
inc
mov
inc
fsub
and
dec
rclb
out
jns
adc
bound
add
mov
repnz
add
scas
mov
mov
and
addb
lret
clc
mov
loopne
iret
push
cli
dec
mov
stc
and
shll
pusha
pop
cs
add
std
inc
or
and
jbe
mov
rolb
int
add
jae
loopne
decb
addb
lods
addb
inc
push
gs
fmull
mov
loop
xchg
pusha
inc
add
xchg
sahf
and
mov
pusha
and
push
lods
in
xor
add
pop
andb
mov
xchg
fsubs
cmp
mov
adc
inc
mov
popf
lret
sti
mov
inc
sbb
mov
pusha
arpl
repnz
mov
hlt
popf
cltd
rcll
rorl
cmp
test
int
sbb
jno
pop
xchg
and
dec
push
bound
sti
and
andb
xchg
jbe
pop
test
shl
les
mov
push
mov
out
or
mov
inc
inc
je
cmp
je
jp
imul
movsl
and
addr16
add
imul
int3
cld
adc
push
add
out
xchg
xchg
sbb
inc
mov
inc
mov
pop
stc
ss
stos
inc
pusha
inc
aad
cmp
pusha
inc
jne
popa
mov
aaa
dec
outsb
and
mov
jmp
cmpsb
loopne
xchg
loopne
movsb
pusha
loopne
cmp
pushf
mov
test
mov
hlt
xlat
gs
fs
jge
lret
add
add
orb
inc
push
and
shl
sarb
mov
cli
inc
int
gs
lods
and
leave
imul
repz
in
dec
jns
data16
sbb
sub
scas
and
xor
fisubl
loopne
stos
push
mov
loopne
xchg
xchg
in
and
xbegin
addb
pop
xlat
xchg
xor
inc
and
arpl
icebp
hlt
mov
mov
inc
iret
test
and
jecxz
xor
stc
aad
std
loop
mov
out
or
jne
fmull
fs
les
ret
mov
mov
sub
pusha
rolb
push
cmp
ljmp
pop
hlt
xchg
dec
mov
push
aaa
in
pushf
rcr
addb
nop
adc
dec
dec
jge
sahf
ret
push
pop
push
jo
es
hlt
imul
shl
add
rcl
inc
inc
add
pop
adc
cld
inc
popa
out
pop
repz
icebp
clc
dec
sbb
inc
rclb
test
lods
mov
jg
jno
cld
aam
pop
push
add
adc
mov
shlb
dec
movsb
add
mov
paddsw
sub
pushf
cmp
rorb
mov
sub
dec
fsubrp
add
adc
inc
and
and
movsl
mov
ljmp
mov
daa
pop
jge
std
xor
pop
xor
insb
imul
inc
inc
in
xchg
adc
fcomps
fdivs
pop
in
notl
mov
mov
pusha
inc
sti
iret
out
out
stos
pusha
add
nop
pop
setp
inc
aas
and
add
fdivs
pop
data16
inc
inc
data16
add
cmpsl
hlt
jne
pop
mov
adc
mov
lea
repz
imul
add
call
shrl
cwtl
and
mov
stos
and
add
test
inc
in
mov
sub
xorl
xchg
inc
jl
add
aaa
leave
inc
push
shlb
dec
hlt
andl
push
in
cmp
dec
in
loope
lcall
orl
outsb
mov
hlt
loopne
incl
add
mov
cmp
dec
adc
adc
mov
sti
insl
arpl
or
rorl
jb
loopne
mov
sub
xlat
loop
lods
fdivrp
adc
cwtl
outsl
hlt
addb
ret
call
pusha
mov
or
ljmp
mov
mov
js
dec
sub
aas
ss
aad
outsb
jmp
xchg
push
mov
loop
and
rol
in
cwtl
outsb
test
push
add
fidivrl
ja
lods
pusha
loopne
lea
imul
andl
les
inc
jo
and
push
fldt
das
cmp
aas
mov
xor
mov
pop
cwtl
mov
daa
dec
lcall
and
pop
fadd
jnp
les
in
mov
cmpsb
and
scas
jns
adc
push
inc
push
pusha
loopne
andb
mov
imul
xchg
pop
mov
jge
inc
mov
mov
and
dec
repz
mov
and
popa
mov
pop
dec
sub
pusha
push
mov
push
cwtl
loopne
lcall
cmp
loopne
shlb
ret
sub
push
xchg
add
out
and
rclb
lcall
out
rcrl
sbb
and
sbb
inc
mov
inc
cmp
xor
das
popf
movsb
and
mov
mov
andl
dec
jb
nop
sbb
dec
mov
stos
and
inc
stc
popf
inc
dec
les
loopne
inc
jecxz
inc
fidivrl
shl
cmp
int
out
gs
test
mov
jne
sub
lods
inc
pusha
or
sbbb
or
pusha
stos
rol
out
sub
pusha
sub
inc
inc
leave
scas
rolb
pop
loop
loopne
out
popf
adc
cmc
lea
and
add
xlat
mov
jno
in
fimuls
je
divl
and
js
pop
fldenv
and
je
aas
adc
lret
call
and
xchg
stos
loopne
shlb
jnp
addb
and
xchg
loop
and
adcb
xchg
lret
pusha
enter
loope
jo
test
mov
or
and
and
inc
xor
xchg
cltd
push
mov
or
lret
mov
add
add
ret
adc
mov
movsb
andb
add
cli
fbstp
mov
dec
cld
inc
push
push
pusha
dec
cmc
pop
push
aad
mov
lret
push
lahf
outsl
das
imull
mov
scas
cwtl
jae
fwait
int3
loope
inc
adc
loope
pop
xchg
enter
mov
lret
push
mov
ss
inc
mov
and
rorb
mov
inc
fucomip
hlt
nop
jg
mov
iret
lcall
mov
iret
mov
fistps
jle
shlb
xacquire
mov
push
fcomps
das
push
fimull
shrb
repnz
dec
xor
hlt
lret
mov
pusha
inc
ds
adc
shlb
xchg
jno
in
adc
test
fstpl
daa
aam
cwtl
lods
add
scas
loope
mov
mov
mov
addb
mov
inc
jge
sub
mov
dec
mov
je
push
pop
pop
jle
cmp
sbb
pop
out
pop
sub
mov
inc
aaa
mov
shrb
or
or
inc
or
repnz
jge
add
mov
outsb
or
movsl
test
iret
cli
lcall
fwait
insb
cltd
stos
int3
ja
mov
sarb
loopne
mov
pusha
xchg
cmpb
pcmpeqd
rolb
mov
nop
leave
cmc
shr
dec
xchg
ficoms
rolb
scas
add
dec
sbb
and
sti
fwait
xchg
mov
mov
dec
dec
xchg
dec
sub
jnp
xchg
call
jp
push
lea
ss
loopne
aad
fadd
xchg
mov
rolb
scas
inc
rcr
mov
add
adc
xor
lahf
xor
daa
loop
imul
mov
inc
ljmp
les
add
pop
lds
lea
xchg
inc
inc
or
mov
add
and
fisubl
jno
andl
xor
mov
cmp
inc
mov
and
add
and
nop
adc
jno
mov
int
xchg
js
test
pop
dec
mov
addb
and
push
test
out
enter
add
rorb
dec
inc
aas
lea
inc
inc
shlb
and
pop
sub
fists
in
adc
xor
xchg
cmp
pop
dec
mov
jg
push
inc
shlb
loopne
fnstsw
pop
mov
lods
dec
mov
pusha
adc
inc
adc
xorb
movsb
and
ret
and
add
ss
outsl
pop
hlt
sub
fdivrs
pusha
xorb
aam
jb
dec
pop
pop
int
loopne
leave
movsl
sbb
and
cld
jp
pop
dec
arpl
loopne
fstps
les
rolb
rcr
xchg
push
rcll
shrb
xor
pop
ret
nop
leave
push
mov
mov
movsb
loopne
popf
movsl
fcmovne
cmc
in
jl
mov
xchg
xchg
orb
stos
pusha
andb
jbe
add
data16
mov
add
outsl
movsl
inc
sbb
shlb
shl
adc
cmovne
add
mov
dec
in
jbe
testb
add
test
pop
jl
rolb
push
xchg
pusha
sbb
shlb
sar
mov
pop
fwait
sub
orb
sbb
mov
jg
cmp
pusha
cmpb
pop
mov
pop
pop
mov
in
or
gs
add
mov
icebp
cmc
pop
in
xlat
mov
loopne
xorl
pop
shr
xchg
ret
in
push
cmp
xor
pop
adc
scas
fisttpll
mov
sub
out
and
push
pop
mov
lea
movsb
rolb
adc
stc
ret
inc
inc
loopne,pn
je
push
pop
xchg
push
pop
loope
loopne
inc
mov
mov
inc
add
sahf
inc
add
loopne
pop
lock
inc
push
test
loopne
loop
dec
outsl
sub
and
sbb
inc
seta
dec
jo
push
lock
mov
pop
inc
ret
adc
xchg
clc
in
int
ret
inc
dec
lahf
dec
repnz
leave
enter
es
shrb
dec
cmpsl
adc
inc
pop
out
std
and
pusha
sub
push
and
aad
mov
arpl
test
pusha
mov
ret
mov
add
mov
orl
ljmp
mov
xchg
lret
push
lea
jo
idivb
fidivl
and
jae
mov
lret
popf
mov
mov
in
addb
xor
lahf
jg
jmp
popa
js
adc
xchg
sbb
push
lret
je
add
sbb
shlb
inc
and
sti
push
adc
cmp
aas
adc
and
xorl
addb
mov
mov
push
mov
pop
mov
iret
cwtl
push
mov
mov
mov
in
andb
pusha
in
dec
xchg
mov
and
popa
or
jb
test
xchg
push
pusha
mov
negb
pusha
mov
mov
mov
clc
or
jbe
push
pusha
add
and
lock
xor
push
out
adc
add
andb
test
andb
sti
daa
lcall
les
dec
adc
fisubs
mov
inc
add
mov
loopne
cmc
sub
pusha
loopne
inc
daa
mov
cmp
dec
push
xor
loopne
and
fimuls
rolb
nop
rclb
ret
ret
cmp
imul
adc
add
inc
add
decl
and
enter
mov
ds
jne
adcl
push
js
rolb
jmp
dec
outsb
and
pusha
inc
mov
cmpsb
rolb
jg
xor
pusha
and
jnp
adc
sahf
mov
mov
pop
dec
sub
inc
cmp
push
movsb
add
scas
mov
dec
mov
repz
add
andb
adc
and
stc
movsl
cltd
aas
jb
call
dec
fldcw
pusha
pusha
sbb
scas
lea
scas
inc
inc
fiadds
mov
leave
js
or
inc
arpl
outsb
lods
jae
cmp
add
movsl
sbb
pop
adc
pop
stos
lods
addb
loopne
mov
andb
jle
loopne
inc
jae
rorb
rcrb
add
sbb
sbb
cmp
fcoms
mov
shll
lret
repz
faddl
mov
nop
pop
aam
out
dec
add
cmp
jb
js
loopne
cmp
subb
rcrb
cmp
lret
mov
pop
push
pop
adc
out
mov
push
pop
adc
mov
add
mov
gs
enter
or
rolb
push
adc
test
mov
mov
push
pusha
and
and
cmpb
pop
outsl
loope
add
jae
inc
xor
scas
sti
andl
add
leave
daa
lret
mov
fs
fnstcw
adc
inc
popf
and
and
sti
sub
lods
pusha
loopne
xor
dec
shl
xor
mov
pop
inc
ja
dec
popf
stc
aam
iret
xchg
jns
mov
sbb
add
xchg
movsl
or
jno
or
mov
xchg
adc
inc
pop
push
and
lods
loopne
xchg
cmp
xchg
mov
shr
sub
or
pusha
in
xor
pusha
adc
mov
pusha
xchg
sbb
iret
imul
shl
out
sbb
mov
loopne
fdivrs
cmp
sub
subb
xchg
inc
push
add
mov
pusha
xorb
xorb
and
pusha
loopne
pusha
inc
cwtl
sbb
jo
cmp
rorl
addb
jge
adc
sbb
and
enter
ja
mov
push
lret
pusha
cltd
xor
pop
pop
cmc
cmc
pusha
scas
mov
cmpsl
xchg
iret
xor
mov
orb
rcrl
mov
out
mov
add
bound
movsl
andb
lds
cmpb
ret
mov
scas
stos
andb
xchg
loopne
stos
sahf
sub
inc
push
and
mov
pusha
pusha
in
push
loope
jae
adc
andb
mov
adcl
mov
pusha
and
pusha
mov
or
mov
add
mov
inc
xchg
out
xchg
xchg
add
cmp
jg
pop
bswap
leave
jmp
dec
fdivs
ret
cld
and
xor
sbb
adc
out
xor
testl
add
movsl
jl
hlt
popf
lcall
and
insl
imul
mov
add
inc
cli
or
adc
sub
and
add
pop
test
pusha
gs
cmp
sbb
inc
enter
and
mov
add
inc
aad
mov
jbe
lret
test
mov
inc
and
jl
lea
call
add
adcb
setnp
insb
popa
dec
adc
push
sbb
xchg
xchg
scas
xlat
lret
xor
and
add
test
fisubrs
sbbl
inc
ret
xchg
divb
mov
fsincos
je
adc
pop
lods
mov
fistpl
imul
push
push
jns
pop
xchg
mov
rolb
mov
mov
xchg
jl
push
and
jle
jne
sti
nopl
add
cmp
scas
rolb
shll
aam
and
and
mov
inc
andb
jmp
xor
addb
vpminub
das
xchg
fdivl
daa
mov
jmp
out
addb
addb
loopne
dec
cs
loopne
fwait
adc
inc
mov
mov
rolb
shrb
inc
xor
push
rcr
je
jp
push
leave
xchg
in
aad
push
cmp
and
test
add
je
addb
mov
aam
cs
shrb
adc
push
movsl
jge
test
orb
jb
andb
xchg
cld
add
xchg
decl
push
sahf
std
mov
sub
dec
add
ficomps
inc
roll
xorb
iret
scas
pusha
add
into
cwtl
jg
mov
ffreep
in
adc
sub
pop
paddd
icebp
dec
mov
les
fs
lea
aaa
in
adc
add
test
and
out
imul
fs
popl
add
es
loopne
shr
insl
jno
dec
xchg
cs
and
jae
or
xchg
mov
outsl
fstl
xchg
addb
xor
jg
and
dec
xchg
push
lret
pop
shlb
rol
or
shlb
add
rcrb
adc
push
pushf
dec
mov
mov
flds
add
mov
xor
pusha
and
loopne
test
and
popa
scas
inc
and
rolb
jne
jno
and
dec
incb
loopne
jae
push
dec
mov
pusha
inc
in
add
adc
or
cmpb
inc
sarb
sarb
js
loop
rol
aaa
stc
dec
mov
jno
pop
ret
test
inc
mov
push
add
cmp
add
pusha
and
scas
aad
loopne
cmp
cmp
mov
sti
inc
insb
daa
repnz
out
mov
std
pop
movsb
mov
push
imul
or
pushf
pushf
sub
orb
mov
add
loopne
push
nop
mov
sbbb
adc
sbb
add
andb
and
stc
jne
ja
inc
pusha
mov
push
push
repz
cli
cmp
mov
movsb
andb
and
fsubs
sti
sub
and
fwait
outsb
mov
ds
pop
inc
out
jmp
add
loopne
or
cmp
sbbb
inc
xchg
scas
and
lds
int3
inc
push
rolb
inc
les
ds
leave
lods
ret
outsb
pop
inc
lock
add
xchg
outsl
push
mov
or
xchg
jnp
mov
out
push
and
out
test
iret
mov
jmp
jecxz
mov
xchg
xor
ljmp
and
inc
mov
and
and
mov
xchg
sbb
testb
fwait
es
add
cs
rclb
pop
hlt
test
inc
push
les
imul
scas
adc
push
push
xchg
cltd
xchg
add
ja
lahf
test
add
jbe
idiv
ret
xchg
cmpsl
sbb
arpl
xchg
repz
xor
cmp
push
inc
jp
fsubs
popf
pop
or
cmp
jge
scas
sub
aas
je
jns
add
idivl
pop
sub
push
cmp
pop
shrb
loopne
pop
sub
rclb
dec
dec
mov
lds
pop
insl
mov
sbb
mov
inc
pusha
lock
pushf
lods
inc
ror
pop
inc
mov
and
mov
dec
or
mov
jl
movsb
inc
add
mov
mov
xchg
out
and
add
xor
insl
mov
and
loop
pop
inc
dec
xor
jbe
sbb
and
mov
push
pusha
rorb
pusha
and
inc
or
inc
imul
xlat
sbb
sbb
push
pushf
shll
pusha
fimuls
incl
xchg
jp
sqrtps
out
insl
or
xorb
inc
adc
or
fldt
push
rolb
jp
push
loopne
xor
out
ja
jns
shlb
rorl
inc
mov
lods
pop
mov
mov
loopne
cld
into
sbb
addb
mov
and
rdtsc
sahf
xchg
lods
dec
jno
addb
inc
add
fistps
and
test
pusha
cmp
sub
and
rcl
outsl
push
stos
inc
xchg
mov
out
mov
cmp
and
lods
rol
mov
add
push
addb
imul
and
dec
push
call
xor
add
add
xchg
shlb
pop
cmp
cmpsl
mov
dec
popa
aad
jns
mov
rclb
or
or
call
mov
mov
xchg
jnp
inc
lret
aam
in
or
enter
sub
mov
mov
mov
aad
in
lret
enter
xor
mov
andb
cmpsb
rolb
dec
test
and
aaa
xorl
mov
rcrb
add
pusha
jle
and
add
add
mov
aas
jo
mov
in
mov
jne
cmc
push
aas
push
add
fwait
xchg
outsb
sub
rclb
cmp
stc
sbb
shll
ficompl
js
stc
ja
loopne
addb
xlat
jecxz
mov
inc
loopne
dec
popa
ja
cs
loopne
push
push
fwait
dec
test
bound
mov
cmp
ja
scas
in
scas
loopne
pop
lret
pop
sub
dec
test
jnp
and
pop
jg
in
lods
sti
xor
and
jg
lahf
mov
mov
or
add
and
jmp
jle
dec
mov
mov
add
adc
jnp
mull
into
jmp
shlb
in
inc
inc
dec
loopne
mov
loopne
bound
jns
mov
mov
add
xor
and
xor
aam
mov
aam
lock
imul
in
data16
jbe
add
mov
mov
xor
mov
mov
push
dec
cmp
pop
stos
and
xchg
rolb
fsubrs
fld
sbb
or
sar
dec
fdivr
or
add
shll
insl
cmp
add
decl
dec
inc
sbb
insl
dec
xor
js
addr16
pop
cli
stos
mov
pusha
xchg
fidivl
leave
jne
scas
aas
pop
shrb
stos
andb
add
scas
das
jle
cmpsl
insb
mov
inc
pop
inc
test
cld
xchg
lods
scas
lods
inc
mov
mov
rcrl
mov
cmp
rcrl
imul
fnstcw
mov
fs
movsb
inc
add
loopne
xchg
and
inc
sarb
aaa
xchg
outsl
aam
adc
sub
inc
pop
and
addb
in
repz
loopne
icebp
mov
lcall
pusha
mov
sub
add
push
insl
jl
int3
inc
fdivs
cmpsb
add
cmp
add
pop
insb
cmp
jp
lea
mov
inc
cwtl
and
sarb
add
dec
xchg
lret
adc
jg
loopne
mov
adc
test
pusha
iret
fnstsw
movsl
test
push
pop
les
xchg
jg
jl
xchg
adc
cli
mov
add
movsl
movsb
add
hlt
sbb
add
pusha
push
sub
add
lock
test
jno
notb
int3
and
aaa
pop
dec
xchg
and
mov
mov
int3
cmp
jno
cmpl
and
mov
stc
inc
loopne
sub
mov
push
xor
outsl
leave
inc
mov
andb
xchg
inc
lock
ret
cli
sbb
shlb
add
mov
mov
and
mov
mov
adcb
inc
push
mov
mov
frstor
and
andb
addb
push
dec
movl
pop
mull
jl
pop
add
inc
and
shrb
mov
lea
loopne
push
and
add
cmp
fnstenv
aas
push
sbb
dec
outsl
fstpt
fdivrp
hlt
pusha
test
inc
sub
or
sub
and
mov
loopne
cmp
add
mov
test
and
and
pusha
add
scas
loopne
dec
aas
cmp
out
pusha
inc
sbb
roll
pop
push
out
cmp
sbb
data16
fnstenv
loopne
xchg
icebp
adc
inc
push
dec
jo
adc
dec
lods
rol
out
andb
rolb
lock
addb
dec
push
xor
aaa
in
mov
jo
adc
push
adc
mov
inc
dec
add
shlb
add
sub
push
xchg
in
xchg
cmp
mov
rcr
test
jo
adc
addb
andb
andb
add
mov
add
loopne
clc
shlb
jo
pop
stc
pop
dec
jo
inc
test
push
movsl
out
pop
xor
adc
add
rcrb
cwtl
pop
out
fdivs
mov
xor
lods
mov
lret
jbe
xchg
inc
xor
fsubrp
vcvttpd2dqx
inc
inc
push
jle
imul
hlt
movsb
add
fistpll
mov
scas
loopne
mov
push
je
dec
inc
sti
add
repnz
test
and
pop
ror
mov
icebp
adc
repnz
shll
dec
mov
cmp
loopne
fadds
adc
cmpsb
add
cli
pop
repnz
push
add
loop
fwait
adc
js
push
add
aaa
popf
lea
aad
sbb
jmp
aam
inc
rcll
adc
mov
daa
iret
xchg
lret
popf
xchg
lahf
cmc
xor
out
jg
cmp
pusha
subb
gs
cli
sbb
repnz
sub
shlb
inc
enter
shl
loopne
out
iret
add
mov
jmp
cli
lods
add
push
pusha
xor
cmpsb
rolb
fidivrl
roll
lods
inc
inc
jb
push
mov
ficomps
dec
outsb
roll
shlb
pop
dec
push
pop
jbe
or
mov
jne
in
pop
andb
add
dec
rcrl
std
sub
les
and
push
jno
icebp
leave
inc
pop
push
mov
and
rcrb
pop
sbb
arpl
push
add
loopne
repnz
inc
es
add
scas
add
pop
lcall
fst
xchg
loopne
add
mov
bswap
int
addb
sti
aaa
in
mov
inc
fs
shlb
inc
add
xchg
int
push
lahf
in
add
pusha
loope
dec
push
dec
add
subl
inc
ja
movsl
cmp
push
addb
inc
fdivrs
fsts
push
cmp
loopne
test
inc
inc
shlb
push
gs
test
rolb
mov
sbb
sbb
xorl
cmc
mov
pusha
mov
jecxz
stos
cmp
test
or
jp
push
adcl
xor
mov
mov
mov
jge
lret
test
xchg
rcrl
add
mov
cmp
inc
add
mov
andb
and
scas
mov
cld
pop
lret
pusha
jmp
cld
adc
pusha
and
mov
push
icebp
jae
push
push
loopne
mov
lock
or
xorl
out
sub
add
in
shlb
out
sub
xorb
push
shlb
and
pusha
mov
jbe
sbb
out
push
or
mov
mov
addr16
mov
addb
flds
xchg
ljmp
mov
pop
jo
adc
mov
rol
add
mov
stos
mov
mov
lret
jl
movsb
mov
stos
rolb
add
lock
mov
loopne
dec
sbb
and
xchg
mov
mov
pop
je
and
or
dec
loop
pusha
xor
lock
andb
rcr
and
mov
pusha
loopne
mov
push
movsb
mov
mov
cmp
pop
and
inc
add
mov
shrd
push
sub
pusha
sbb
mov
inc
mov
pushf
jbe
rolb
xor
pop
int
xor
js
call
mov
sub
cmp
add
and
add
xchg
mov
addb
sub
pusha
add
pusha
sub
ljmp
and
rolb
mov
bound
and
push
inc
pusha
fmull
jecxz
mov
push
pop
rorl
addb
inc
add
xchg
and
adc
adc
push
shl
mov
loopne
dec
push
cmp
mov
pop
mov
outsl
mov
xor
stc
aas
shll
imul
sbb
iret
adc
mov
pop
or
lods
pusha
loopne
pop
les
imul
and
push
xor
pusha
sub
rcrb
mov
pusha
and
inc
cmpsl
ja
push
clc
cmpsb
loopne
inc
jecxz
stos
xor
int
add
mov
push
pop
pop
pop
loope
and
cmpb
sarb
and
lods
add
mov
cmp
xlat
cmp
jge
mov
pusha
cmc
fmul
push
adc
dec
pop
sub
pusha
pop
jo
insb
jmp
mov
pop
mov
shlb
or
inc
subl
in
xor
add
jle
inc
cmpsl
adc
lods
icebp
scas
add
outsb
mov
mov
mov
mov
cltd
test
pusha
fdivl
xor
mov
add
and
andb
cmp
jp
scas
inc
inc
xor
aad
sub
mov
pusha
cmp
popf
mov
aam
mov
push
mov
sti
push
or
and
xlat
test
add
or
subl
out
cmp
loop
pusha
cmp
nop
out
add
loopne
mov
iret
dec
mov
pusha
pop
gs
out
cmp
cmp
stos
andb
xlat
sub
add
add
ror
negl
nop
sbb
test
mov
ja
xor
es
add
and
dec
xchg
ret
sub
addb
jno
sub
nop
mov
push
loope
imul
gs
pop
lock
dec
mov
mov
repz
cmp
fimuls
add
mov
add
mov
pusha
and
loop
nop
or
cmc
ret
push
push
loopne
inc
data16
mov
mov
shlb
pushf
icebp
jae
dec
fdiv
scas
push
dec
daa
sbb
mov
jg
imul
sbb
pop
ja
mov
dec
das
pop
test
test
pusha
mov
adc
ljmp
and
and
rclb
je
rorb
push
mov
and
jb
shll
ja
sub
shr
out
out
fwait
push
andb
mov
add
gs
sti
dec
mov
sub
xlat
cmp
repnz
stc
cltd
jb
pop
fcoml
mov
in
lods
and
jo
gs
pusha
insb
in
inc
mov
fcom
sub
lcall
loopne
xor
loopne
pop
cwtl
sbb
pop
sub
sub
dec
xchg
sarl
pop
add
and
je
or
mov
addb
pusha
and
pop
xchg
andb
pusha
add
rolb
std
shlb
inc
push
xor
out
clc
xor
dec
sbb
or
shlb
in
push
hlt
mov
stos
and
fbld
andb
test
cmc
cmp
in
aaa
pop
decl
shlb
jo
add
fimuls
jge
sub
and
enter
das
sbb
fidivrs
loop
sti
daa
or
fwait
xor
loopne
loopne
dec
mov
and
cmp
dec
or
add
dec
lcall
mov
shll
in
xchg
andb
rclb
push
mov
loopne
in
dec
in
aas
pop
std
aaa
xorl
jle
ffree
scas
and
addb
ds
out
sbb
jnp
leave
push
sub
rcl
cltd
push
cmp
sti
data16
das
mov
cmpl
subl
subb
pop
les
pusha
dec
sub
and
andb
mov
pop
cmp
lods
mov
and
hlt
iret
jl
mov
es
or
loopne
icebp
icebp
jno
add
inc
add
or
pusha
and
cmp
add
sub
inc
jmp
sub
push
sbb
outsl
sbb
lret
fcompl
push
sub
pusha
imul
sti
dec
shr
stos
xchg
push
jg
in
dec
mov
inc
add
loopne
or
bswap
jmp
in
mov
fisubrs
into
inc
or
dec
jp
add
xchg
rep
push
stos
popf
dec
aas
sub
lret
mov
inc
and
nop
addr16
int
in
or
and
dec
push
andb
das
repnz
add
mov
divb
xchg
xchg
insb
frstor
xchg
rolb
aaa
sbb
shrl
pusha
adc
movsl
xor
lcall
jb
test
add
std
icebp
hlt
out
jmp
test
insb
jg
hlt
je
adc
adc
dec
inc
mov
pop
jnp
ljmp
sbb
xchg
loopne
test
inc
push
pop
nop
outsb
mov
shlb
xchg
mov
popa
enter
nop
mov
and
push
mov
and
sbb
xor
add
mov
xchg
loopne
cmp
mov
out
sbb
rolb
mov
rorl
std
and
mov
ds
sbb
shlb
add
sbb
rcrb
pop
jp
mov
mov
cld
jecxz
loop
clc
sbb
fmulp
jge
and
bound
and
add
or
xchg
jg
push
imul
mov
pop
inc
bnd
addr16
add
ja
pop
mov
push
movsb
and
ja
scas
mov
jmp
shlb
inc
icebp
pusha
mov
pop
mov
add
pusha
sbb
or
movsl
lcall
rcrb
jmp
scas
pusha
shlb
daa
add
or
inc
loopne
and
push
mov
cmpsl
pop
xor
loopne
arpl
fsubr
pusha
add
add
jge
cld
sub
add
movsb
shlb
pusha
rclb
dec
cmp
rolb
jbe
movsl
jb
jl
call
fbld
loopne
pusha
or
fists
xchg
add
or
ss
or
jl
mov
sbb
mov
sub
ret
xchg
dec
fistl
sub
pop
cmc
lods
shl
push
data16
sub
inc
pop
jg
sub
xchg
ret
push
or
shl
clc
or
add
mov
insb
inc
fdivl
inc
mov
addb
outsl
mov
xchg
mov
pusha
pop
inc
jle
and
lret
or
and
hlt
xor
bound
loopne
lahf
movsb
pusha
loopne
mov
xor
sbb
push
dec
xchg
rorb
insl
and
add
add
inc
mov
roll
mov
push
loope,pt
jecxz
loopne
add
xchg
and
jne
cltd
xor
jg
sbb
imul
mov
popf
int3
dec
mov
icebp
sub
loopne
popa
pop
or
dec
ficompl
rolb
scas
or
cmp
cmp
subl
push
add
mov
jmp
rolb
testb
ds
cld
outsl
fistpll
inc
pop
shrb
and
loopne
std
add
loopne
cmc
loope
sub
shlb
and
sub
fs
mov
ljmp
pop
mov
movsb
pusha
and
push
andb
loopne
jle
addr16
inc
in
test
pusha
sbb
rcrl
loopne
xchg
cmpxchg
in
push
mov
cli
gs
inc
daa
adc
out
adc
xchg
inc
sbb
icebp
xchg
cld
nop
jnp
test
push
fdivrl
cmpsb
pusha
rolb
xchg
test
and
test
fsubs
rolb
and
and
out
test
add
fsubp
push
push
jecxz
shlb
rorb
xor
lods
stos
mov
and
rol
out
iret
jecxz
movsb
add
inc
nop
repz
arpl
fdivl
sti
dec
shrb
lcall
or
loopne
cld
and
addb
xor
sahf
arpl
sbb
loopne
push
and
lods
pushf
mov
cmp
pop
jmp
test
fstl
xor
and
rolb
cld
adc
mov
sub
pusha
dec
imull
pop
es
mov
addb
ficompl
stos
mov
out
mov
add
jle
ret
mov
adc
addr16
shlb
js
insb
ljmp
xchg
jecxz
loopne
pushf
enter
mov
dec
enter
call
mov
and
stos
lods
add
jmp
adc
mov
sbb
adc
sub
add
sbb
sub
mov
sub
add
imul
pop
sub
inc
add
and
pop
ficomps
push
mov
jmp
pop
sub
cmp
popa
and
sti
fs
and
lds
inc
mov
pop
popa
jbe
in
rolb
bound
std
xor
insl
dec
mov
mov
and
mov
pop
fcmovb
lock
mov
shlb
push
inc
mov
jbe
xchg
pop
ret
pusha
shll
sbb
loopne
sbb
shlb
in
xchg
jnp
or
inc
jb
xor
ficomps
test
rolb
fwait
roll
xchg
test
pusha
orb
jns
fldcw
int3
lret
xchg
lds
sub
pusha
jmp
loop
inc
imul
pop
stc
or
mov
add
push
movsl
imul
push
push
imul
pop
inc
jns
mov
rcll
fadds
test
push
shlb
push
and
sti
out
add
add
add
or
inc
pushf
pop
cmpsb
mov
test
dec
addr16
das
and
addr16
inc
loopne
lcall
inc
sub
pusha
addb
push
and
inc
adc
mov
scas
int3
pop
rolb
xchg
fwait
cmpsb
rolb
arpl
movsb
loopne
jo
popf
das
out
pop
or
in
js
cmc
mov
jo
cmpsl
in
cmpsb
andb
cmpsl
imul
xlat
jne
fidivl
pop
xor
in
xchg
daa
xor
add
int
inc
aam
push
dec
sub
add
mov
ja
dec
pushf
fwait
and
roll
in
sahf
push
pusha
add
pop
scas
inc
loopne
loopne
and
inc
imul
push
scas
inc
inc
popf
incl
mov
addb
lds
mov
xor
xor
dec
adc
frstor
out
mov
lock
rcr
sub
inc
xchg
cli
pop
aas
dec
lods
andb
and
push
or
loopne
xchg
dec
adc
pushf
jae
shl
pop
lret
dec
jecxz
adc
sbb
add
out
cmc
mov
loopne
into
test
xor
push
add
and
inc
fistpl
inc
pop
pop
stos
inc
add
jae
andb
or
jmp
adc
shlb
pusha
push
inc
sub
loopne
mov
jnp
enter
and
push
and
movsb
inc
shlb
xchg
ja
or
inc
push
pop
daa
mov
call
mov
std
adc
sti
adc
mov
lcall
mov
icebp
pop
bound
mov
or
and
xor
add
pusha
lods
shlb
addr16
pop
int3
out
in
andb
mov
into
adc
std
mov
lcall
cmp
out
and
ja
jns
add
rol
lods
loopne
sbb
test
pop
iret
clc
push
add
enter
and
loope
push
mov
sbb
pop
mov
rolb
fisubrl
aam
push
jns
call
hlt
sbbl
roll
xchg
data16
fsubr
jb
inc
icebp
xor
imul
andl
shlb
inc
test
and
sbb
popa
sub
add
sub
sub
and
or
adcb
pusha
mov
xor
clc
testb
mov
insl
or
dec
jnp
inc
add
pop
ja
mov
stos
inc
sarb
arpl
pop
xor
mov
mov
stos
and
xchg
fs
xchg
fstl
mov
or
adc
shrb
ret
test
mov
lock
xchg
test
mov
loopne
lods
push
loope
outsb
mov
push
outsb
mov
add
pusha
add
push
mov
mov
cmp
mov
mov
out
xchg
xor
int
stos
mov
pop
xor
dec
iret
xor
cmp
push
js
mov
lock
inc
std
mov
pop
test
shlb
sbb
jecxz
sarb
pusha
xor
dec
dec
bound
and
stos
cmp
sbb
add
cmp
xor
adc
clc
out
clc
or
loopne
inc
mov
fmuls
add
loopne
sti
inc
cmc
nop
push
and
push
cmp
cmp
mov
pop
mov
shrb
dec
ret
cmp
popa
scas
add
insb
xor
mov
ja
mov
sti
and
shlb
pusha
add
andb
mov
mov
ljmp
mov
sub
xchg
rolb
ds
dec
jne
mov
and
xchg
push
jno
insl
push
inc
in
jae
daa
and
in
mov
jae
test
add
pusha
mov
jmp
repz
push
ret
and
pusha
test
sbb
lret
dec
dec
push
add
push
push
shl
mov
lcall
rolb
inc
push
mov
cltd
leave
cmpsl
mov
in
jns
sub
hlt
dec
cs
cmpb
add
pusha
shrb
mov
lods
lods
rolb
aaa
add
repnz
fs
loop
xchg
loopne
mov
loopne
push
sbb
add
loopne
outsl
fwait
cmpsl
std
cmp
sbb
inc
fs
iret
insl
mov
addb
into
loopne
inc
cld
andb
hlt
mov
pushf
inc
mov
sti
rolb
sahf
jge
fwait
mov
or
repz
fcmovbe
cli
je
xchg
jecxz
mov
popf
cmp
sbb
cli
and
push
or
add
pop
lods
inc
mov
pop
jb
movsb
and
pop
inc
push
dec
movsb
shlb
and
int3
mov
sub
cmpb
xor
jg
jne
test
xor
or
xor
imul
fsubp
je
cwtl
fildl
cvtps2pd
push
arpl
mov
and
inc
stos
add
xchg
sbb
push
and
mov
mov
and
jbe
in
xor
pop
sub
cmp
and
xor
mov
js
mov
stos
and
mov
loopne
push
in
sub
aaa
lret
mov
and
pusha
dec
adc
fs
jnp
xchg
pusha
add
dec
fadds
loopne
out
and
shlb
adc
nop
jg
rclb
sbb
rclb
call
sbb
notl
mov
pusha
test
call
xlat
sub
orb
loopne
push
cmp
lahf
rcll
mov
jnp
jle
mov
cmpsl
popa
pusha
sbb
out
flds
or
adc
andb
addb
shl
xchg
xor
add
xchg
sbb
cmp
pop
fwait
bnd
stc
lods
mov
loopne
jmp
fdiv
push
adc
int
int
scas
and
das
add
insb
sub
mov
into
test
loop
mov
insb
fldl
sbb
repnz
mov
and
rcrb
call
imul
and
add
mov
jno
or
cmp
xchg
out
mov
mov
arpl
out
sub
stc
out
mov
in
lahf
dec
lret
loope
addr16
insb
mov
and
xor
fidivrl
add
shlb
inc
sub
push
push
pop
and
sbb
jns
sarb
mov
loopne
lret
pusha
loopne
andb
xchg
lea
mov
lret
jle
sbb
fbld
pusha
orb
add
mov
and
outsl
mov
shll
pusha
cmpsl
movsl
aaa
pop
ret
xorb
xor
rcl
mov
in
repz
rcll
gs
add
jne
and
ja
shlb
mov
and
and
div
add
add
fwait
adc
aaa
in
dec
aad
idiv
icebp
mov
aad
ljmp
fwait
push
pop
lock
lods
addb
and
mov
je
pusha
pusha
cld
mov
push
in
nop
sub
pushf
icebp
jmp
fcoms
jecxz
cmp
arpl
push
aas
sub
and
outsl
push
inc
inc
js
adc
cmp
jecxz
mov
pop
je
cmp
movsb
inc
rclb
lret
jns
test
sbbb
inc
add
push
cmp
loope
insl
cwtl
iret
sbb
mov
cmp
push
inc
inc
mov
iret
or
mov
pop
pop
inc
adc
loopne
sti
data16
subb
jp
cmpl
mov
jne
rcrb
and
mov
sbb
fldcw
mov
mov
pop
jl
clc
fadd
pop
daa
adc
pushf
ljmp
nop
leave
xchg
aaa
pop
xchg
lcall
imul
scas
inc
inc
mov
pusha
arpl
je
cmpsb
rolb
push
pop
lock
xor
dec
add
mov
mov
lock
inc
mov
shlb
xchg
pop
push
add
pop
dec
mov
bswap
sbbl
and
jnp
scas
outsb
lods
mov
dec
sbb
mov
xor
inc
add
mov
or
add
mov
pusha
shrb
aad
xor
sbb
daa
ficompl
mov
lods
fdivr
mov
orl
in
adc
mov
mov
pusha
shl
repnz
inc
mov
mov
mov
fistpl
andb
push
cmp
ja
mov
pop
imul
loopne
mov
or
shrb
add
aam
dec
or
cwtl
push
sahf
push
pusha
and
fucom
fcom
repz
std
mov
xor
clc
jmp
mov
and
adc
jecxz
ret
sahf
cs
add
rol
stos
and
divl
inc
pop
xor
dec
dec
adc
gs
pop
mov
pusha
and
pop
mov
insl
arpl
shl
xchg
cmpb
add
mov
cmp
int3
imull
pusha
sub
loopne
add
cli
adc
dec
bound
mov
shlb
xchg
iret
sub
fsub
jge
and
adc
leave
movsb
inc
mov
pusha
inc
pop
inc
cmp
insb
mov
pop
push
mov
add
xor
mov
bound
inc
cmc
push
in
push
loopne
std
jge
jnp
paddw
cld
in
loopne
mov
cmpsl
mov
pop
sub
pusha
add
in
addb
add
pop
xor
lahf
xchg
pusha
cmpl
dec
loop
fs
and
mov
loopne
js
out
andb
hlt
test
loopne
popa
jnp
mov
loopne
lcall
pusha
and
icebp
loop
movsb
shlb
dec
out
scas
and
adc
inc
ret
xchg
movsl
stc
xor
dec
jge
fnstenv
sahf
push
movsb
add
cwtl
cmpsb
rol
fsubrp
xchg
incb
cmp
addr16
daa
add
ljmp
mov
add
ficompl
and
pusha
mov
mov
mov
sbb
jnp
out
adc
je
gs
add
sub
arpl
je
movsl
fstpt
sub
pusha
add
fwait
popf
test
dec
clc
adc
cmpsl
rclb
xor
subl
xchg
push
pusha
pusha
cmp
mov
add
mov
dec
pop
push
sub
loopne
insl
cmc
in
in
out
into
sbb
and
sarb
or
and
je
sub
lcall
add
movsb
shlb
andb
mov
into
ja
test
jns
add
xchg
mov
dec
out
pop
test
mov
outsb
idivl
fwait
lahf
popa
dec
test
and
sbb
mov
or
andb
mov
pop
cmp
inc
mov
add
add
fs
inc
mov
mov
jne
push
pushf
pop
repnz
push
loopne
je
sahf
cmp
jo
push
inc
inc
add
pop
push
into
ja
and
sarb
loopne
fisubl
add
and
jae
mov
pusha
or
mov
and
aas
insl
repz
scas
shlb
lcall
mov
aam
mov
and
js
inc
data16
aaa
lahf
jo
pop
inc
push
dec
push
call
push
and
add
loopne
popa
clc
push
in
fisubrl
add
scas
add
inc
scas
and
xchg
leave
mov
andb
ret
pop
push
icebp
iret
ljmp
mov
pusha
mov
sar
dec
pop
test
lahf
stc
jne
add
and
add
rorb
mov
mov
add
inc
inc
sahf
push
and
sti
and
fucomip
in
mov
mov
and
mov
push
cmp
cmc
mov
mov
shl
bound
insb
mov
or
lods
loopne
mov
push
lcall
inc
mov
xor
addb
xor
lret
add
mov
cmp
cltd
adc
loopne
inc
fs
test
mov
mov
inc
push
cmp
pusha
add
mov
add
repz
pop
imul
push
xchg
sub
test
mov
inc
sbbb
mov
sbb
shr
nop
inc
movsl
mov
arpl
std
xchg
and
pop
sub
inc
and
shlb
aas
es
add
dec
repnz
dec
fisubs
mov
bound
pusha
test
pop
fldenv
inc
mov
sub
mov
mov
cmpsb
inc
rcrb
stos
je
inc
adc
jge
add
push
fstpl
xchg
clc
loop
rorb
pusha
rolb
ret
testl
xor
sub
sbb
mov
fisubs
movsb
add
xlat
xchg
mov
mov
inc
add
and
lret
ret
and
inc
lcall
dec
mov
and
mov
mov
mov
push
negb
xchg
and
dec
sbb
fldl
add
mov
andb
mov
mov
and
push
shlb
addb
repnz
or
add
xchg
pop
or
into
movsb
addb
inc
mov
mov
jo
sbb
fucomip
jl
sbb
stc
mov
push
pop
loop
mov
shr
lds
and
shrb
scas
pusha
shlb
mov
loopne
out
lods
and
dec
imul
loope
and
loopne
adc
add
and
mov
pop
aaa
ror
ja
ljmp
test
pusha
in
pushf
jge
shll
in
out
cmp
shl
repnz
repz
mov
push
adc
loop
ret
dec
into
loop
lret
sbb
jbe
jns
push
stc
jbe
js
pusha
mov
jb
lret
incl
pop
xor
push
addb
addr16
bound
lahf
pushf
sbb
jmp
cli
sbb
add
inc
add
fldt
push
and
inc
into
dec
mov
add
test
inc
and
pusha
jg
sti
int
in
fidivl
cwtl
dec
fsts
andb
sti
in
add
pusha
add
loopne
sub
shlb
xchg
icebp
pop
stos
inc
jge
andb
mov
mov
aaa
push
mov
jl
pop
add
inc
pop
and
pusha
jnp
std
add
push
pusha
pusha
pop
pop
dec
mov
insb
mov
mov
pop
or
xchg
int
daa
or
adc
xchg
adc
push
into
adc
loopne
idiv
mov
cmp
lods
or
push
loopne
mov
pop
cmp
or
adc
mov
shrb
and
negl
xor
js
aam
and
jecxz
sbb
adc
mov
test
add
bound
dec
stc
mov
or
shlb
mov
dec
push
rol
adc
popa
clc
jnp
shlb
insl
mov
jg
cmp
fucomip
xchg
das
or
fwait
lret
xchg
lret
xchg
lea
sti
sub
loopne
mov
mov
cmp
addb
and
cmove
sub
mov
loope
les
fdivr
xchg
pop
std
leave
pop
out
pop
in
imul
add
daa
mov
mov
insb
fwait
aad
gs
cmc
sbb
loopne
mov
or
sub
mov
mov
addb
or
or
mov
filds
cmc
into
out
pop
pop
mov
inc
or
cmp
insl
aaa
pushl
xchg
rol
outsl
shlb
incb
sub
and
rcr
inc
and
cld
adc
mov
vcmpsd
push
ja
jbe
gs
movb
loopne
rorl
and
sub
popf
mov
dec
in
push
add
or
out
cmpsl
test
add
out
add
jmp
jecxz
xchg
mov
js
je
adc
call
sbbl
adc
aas
nop
jns
add
addb
inc
and
ds
sbb
shl
lss
add
pop
add
lods
xlat
sbb
pusha
mov
sbbb
lea
shll
repnz
and
loopne
loop
arpl
cs
loopne
movsl
in
mov
stc
mov
xor
std
daa
cmp
add
