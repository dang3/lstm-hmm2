loope
lret
dec
cmp
stos
sbb
jne
into
loop
sub
xchg
fdivrl
jg
lret
ljmp
mov
mov
add
mov
xor
fdivl
lret
inc
add
das
adc
mov
dec
adc
pop
mov
clc
sbb
das
sub
lods
inc
pop
je
pop
shrb
sub
sbb
scas
and
or
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
sub
mov
cltd
mov
addb
push
add
ret
sbb
pop
das
scas
les
push
pop
push
ret
inc
sub
add
ja
mov
movb
adc
sub
push
cmp
push
out
movsl
js
dec
mov
jbe
jo
xchg
fwait
mov
fs
xor
add
xor
cmpsl
cmp
add
add
jmp
lret
jecxz
scas
ljmp
add
mov
lods
mov
stc
and
sbb
out
fdivrs
inc
add
adc
cltd
test
pop
inc
add
push
add
test
jl
das
jg
inc
or
fiadds
imul
inc
jg
pop
or
xor
sbb
std
dec
lcall
icebp
test
xor
mov
push
fidivs
test
jecxz
ret
sbb
push
dec
pop
outsl
jmp
add
test
mov
pop
jbe
jle
call
fmul
mov
rep
enter
push
aam
add
push
sub
pop
int
mov
div
mov
mov
lret
pop
outsb
xor
mov
add
add
pop
and
and
neg
adc
cmpsb
xchg
dec
or
out
les
push
dec
cs
dec
push
add
outsl
push
fisubl
xor
xchg
cmp
mov
mov
cwtl
jne
cmpsl
sbb
and
add
xor
pop
sub
loop
add
cmp
out
fxch
mov
int
dec
push
bound
es
loop
inc
aaa
or
daa
ret
cmpsl
dec
enter
add
and
notl
or
mov
jno
shr
lock
in
xchg
jae
and
add
fsubs
add
ss
pushf
pop
jns
dec
loop
mov
ds
fiaddl
jnp
call
mov
xchg
push
aaa
sub
imul
nop
inc
adc
aam
ret
lds
mov
jecxz
push
ja
gs
dec
fstl
add
add
or
jl
ljmp
push
in
pusha
add
es
sti
dec
push
mov
add
fcompl
pop
bound
or
add
dec
rolb
mov
rolb
adc
dec
xchg
lock
in
daa
ljmp
or
aas
movsb
cmp
add
bound
dec
pop
out
xor
mov
or
std
lahf
out
xor
add
enter
movb
std
jne
daa
insl
jg
aas
int3
mov
pop
and
fdivs
sbb
outsl
xchg
in
inc
add
and
add
sub
lahf
shll
es
add
pop
addb
mov
jecxz
pop
lea
and
lret
and
imul
push
mov
jle
stc
stc
add
sbb
aaa
std
xor
data16
scas
xchg
or
std
or
push
add
jo
rolb
cmpl
inc
add
imul
cltd
adc
ret
jns
inc
xor
sarl
fwait
sahf
in
mov
stc
adc
add
jp
adc
xchg
mov
pop
push
fimuls
rcll
repnz
mov
sub
sub
aaa
loopne
pusha
add
sub
xlat
xchg
pop
adc
aam
jle
pop
push
add
sub
fcmovb
add
inc
add
add
jns
pop
jmp
add
mov
call
jnp
mov
xchg
cmp
push
add
sbb
outsb
pop
ljmp
lea
add
push
cmp
adc
mov
cltd
mov
ljmp
and
stc
popf
add
xchg
jbe
outsb
outsb
loop
cmc
mov
mov
ss
nop
repz
and
sub
jl
mov
dec
inc
add
repnz
adc
or
jnp
pushf
stos
pop
loopne
xchg
fdiv
adc
mov
lcall
repnz
jl
data16
adc
dec
pop
cmp
jg
cmp
out
jnp
push
jmp
mov
mov
not
and
mov
insl
dec
data16
insl
aaa
shr
pop
in
push
sbb
pop
and
mov
push
inc
add
test
push
sub
idivb
scas
sbb
out
xchg
or
add
leave
fisubrl
fwait
out
cmp
lock
shll
lret
dec
inc
add
outsl
rolb
add
and
push
imul
xor
sub
add
mov
loopne
and
mov
pop
mov
les
mov
pop
push
add
dec
andnps
sbb
cmp
fimull
jno
add
aaa
clc
lahf
shll
add
mov
add
into
adcl
add
sbb
in
cs
es
mov
sub
sub
cli
clc
sbb
push
add
inc
lods
cmp
in
lcall
stc
movl
xor
inc
dec
adc
outsl
adcl
movsb
add
call
jmp
mov
movsb
stos
cmp
in
mov
lcall
ds
inc
add
add
add
repnz
sbb
lret
pop
cltd
cld
adc
xchg
ja
les
pop
call
add
mov
cwtl
cmp
cltd
sbb
ficompl
xchg
aam
mov
pop
ja
adcl
std
fldenv
mov
xchg
sbb
fiadds
lock
xchg
push
dec
mov
sub
add
sub
scas
xchg
aad
popa
int3
xchg
mov
jnp
test
aam
add
arpl
add
cmp
jne
addb
xor
cmp
in
lcall
out
gs
test
roll
add
std
push
std
xchg
inc
push
or
push
shl
pop
fbstp
rcll
jb
or
mov
sub
xor
loopne
outsb
cmp
movb
pop
push
out
test
add
idivb
int3
dec
adc
or
rcr
daa
testb
inc
xchg
stos
and
inc
jle
pushf
cwtl
nop
mov
inc
call
in
repz
ret
push
mov
add
jge
add
pop
mov
mov
test
popf
or
or
cmpsb
or
add
jecxz
mov
enter
sahf
aam
cmc
je
mov
les
sbb
mov
ficoms
lahf
repnz
xchg
rclb
mov
dec
pop
mov
push
out
add
or
in
xlat
xchg
in
in
jg
add
mov
mov
enter
loopne
fst
fisubrs
aaa
shlb
xchg
dec
cli
jmp
in
add
lret
lahf
mov
mov
and
ljmp
mov
sub
fwait
test
addr16
push
sbb
inc
dec
aad
jo
in
aaa
mov
inc
add
jle
sub
add
gs
lods
shll
add
xchg
pop
adc
jns
ret
hlt
push
int3
cmp
iret
dec
insb
or
xor
movsl
cmp
mov
or
push
jecxz
sub
mov
add
lock
cmpsb
addr16
cwtl
dec
mov
fwait
lods
jmp
push
adc
dec
js
out
mov
xor
add
lea
into
xor
or
cmp
dec
aam
mov
push
jmp
cmpsl
es
inc
xchg
jne
add
and
sahf
pop
fidivs
loopne
cmp
cs
jmp
incb
fcmovu
cmp
cmc
jp
and
dec
sub
add
push
dec
pop
sbb
fs
add
dec
xlat
mov
les
add
je
or
imul
cli
and
fldl
xchg
icebp
lds
add
mov
fildll
into
icebp
lahf
stc
aam
shlb
pop
gs
test
cmp
cmpsb
lods
mov
pop
jl
repnz
mov
arpl
inc
add
andl
addb
cmpsl
push
and
aaa
test
lods
cmp
scas
sub
dec
sub
push
cmp
lahf
sbb
mov
icebp
rolb
popf
cmc
adc
out
movsb
cmpsl
and
rolb
or
int3
aaa
cli
es
cmp
mov
mov
adc
std
fistpll
test
mov
and
test
in
mov
add
mov
rcll
testl
sub
lret
push
loopne
xor
fisttpl
add
adc
push
xchg
jl
or
addb
sbb
popf
in
loopne
push
mov
stc
jp
mov
std
pop
xchg
test
jbe
imul
rolb
pop
pop
dec
pop
add
cmp
adc
add
adcl
aad
add
adc
add
insl
rcr
mov
fnstsw
add
in
and
dec
mov
add
test
rolb
mov
and
mov
add
sbb
out
test
fisttpll
sarb
das
insl
sub
jae
xchg
mov
call
mov
xchg
shl
pop
out
cli
sahf
lret
pop
addr16
stos
push
adc
mov
nop
add
daa
cld
mov
xchg
and
add
push
inc
add
out
cmc
sahf
mov
rolb
popa
cmp
icebp
fldenv
add
out
sub
sbb
insl
xchg
lds
add
xchg
adc
arpl
push
push
add
push
outsl
mov
and
xor
aad
dec
add
xchg
scas
sub
rol
add
push
mov
nop
push
add
cmpl
jno
stos
dec
aad
mov
rolb
dec
and
mov
mov
add
imul
in
sub
and
loopne
add
dec
inc
add
addb
data16
adc
daa
call
jg
mov
rcl
out
add
rorl
and
mov
mov
int
fwait
mov
mov
cmp
insl
addr16
push
cs
pushf
or
xchg
into
in
add
cmp
sbb
sbb
cmp
add
pop
loope
adc
mov
xchg
mov
dec
cld
pop
sub
sub
leave
sub
fcomip
int3
sarl
pop
mov
adc
xchg
dec
nop
or
push
gs
out
test
loope
dec
ret
mov
jne
adc
and
add
sub
adc
js
out
nop
cwtl
clc
dec
fwait
jae
bound
cmpsb
stos
adc
pop
daa
jecxz
mov
jmp
xlat
imul
in
les
mov
add
jg
mov
fiadds
call
xchg
aaa
dec
rorl
sarl
and
adc
add
jl
add
adc
sub
pop
test
jnp
sahf
mov
dec
adc
lock
add
and
add
add
push
fcomp
pop
push
jecxz
xchg
fwait
loop
lahf
loope
jbe
add
add
jae
jp
push
lds
scas
sahf
pop
cmp
cmpl
enter
les
dec
push
add
out
sahf
push
cmp
gs
dec
cmp
into
lea
ss
jle
dec
movb
lcall
or
cmc
jae
cmp
xchg
and
pop
loop
lods
jbe
gs
loopne
mov
adc
jbe
push
xchg
std
jo
scas
js
dec
dec
mov
or
push
xchg
aad
dec
push
add
jmp
shll
movsb
in
jae
adc
adc
dec
dec
mov
xchg
adc
imul
xlat
adc
test
dec
push
mov
addb
outsl
loope
dec
or
push
imul
sbb
pop
int3
sbb
int3
cltd
add
mov
push
add
arpl
jno
add
sub
mov
addr16
loope
or
push
shll
cmpsb
and
add
fyl2xp1
enter
mov
pop
orl
repz
repz
scas
pop
dec
xchg
cmp
push
ret
cmp
movsb
mov
and
rcll
movsl
jle
pop
xchg
mov
xlat
xchg
pop
repz
jo
js
jne
and
fwait
popa
mov
test
cmp
add
enter
jecxz
inc
add
or
inc
inc
add
xor
sub
mov
or
je
fucomp
sub
js
inc
add
pop
pop
add
jmp
cmpsl
loopne
pop
insb
add
movsl
add
mov
mov
rolb
mov
es
cmp
add
sbb
jecxz
and
or
std
mov
jle
loopne
add
mov
ss
mov
scas
into
fiadds
mov
fcomps
jle
rolb
dec
movb
sub
xchg
cmc
inc
add
xchg
test
dec
sahf
sarl
add
add
jne
cmp
dec
repnz
xrelease
pop
popa
les
cwtl
push
inc
add
push
add
add
xchg
and
or
jg
mov
mov
lock
and
or
lahf
rolb
sub
fsubl
cmpsl
mov
dec
mov
push
movb
test
dec
adc
and
add
mov
add
hlt
add
loope
mov
ret
int3
je
lds
repnz
push
mov
pusha
add
fdiv
cmp
stos
pushf
sahf
loope
lods
and
mov
icebp
enter
sbb
xor
idivl
aad
sub
pop
mov
jnp
dec
mov
rclb
icebp
in
dec
movsl
in
test
call
sbb
pop
std
push
dec
andl
add
mov
inc
add
push
call
lds
fsubrl
cmpsl
or
stos
shrl
je
ljmp
jge
jmp
sbb
inc
sbb
outsl
dec
scas
add
and
add
add
lods
cmp
lcall
outsl
cwtl
push
pop
xor
rcrl
xor
jo
fstl
sub
sub
add
lods
stc
xchg
or
add
sub
pminub
mov
in
arpl
hlt
fcmove
cmp
push
add
addb
add
add
mov
sahf
pop
mov
fsubrs
add
pop
sbb
movb
in
mov
shrb
rolb
dec
xor
inc
add
mov
mov
int
add
rclb
testl
lret
mov
lock
add
movb
pop
jo
cmc
or
sub
bound
shll
into
imul
pop
call
leave
cltd
mov
scas
stos
ret
cmp
and
test
xchg
mov
add
and
insb
dec
pop
mov
aas
lret
jno
inc
mov
cmpsl
movsl
std
pop
xchg
cmpsl
add
mov
rolb
push
mov
jae
add
movsl
mov
jl
mov
sarb
xor
std
adc
or
movsb
addb
cli
sahf
xor
shrl
push
aad
jmp
mov
add
imul
cmc
push
movb
xchg
cmp
push
out
sarl
or
daa
pop
pop
push
xor
mov
pop
lock
mov
jbe
jns
xor
adc
jge
add
xchg
loope
xchg
call
add
mov
test
adc
mov
in
xchg
sub
popf
pop
pop
iret
stc
lret
arpl
mov
fwait
lods
in
sbbl
sbb
aad
out
loopne
shrb
outsl
in
lahf
add
shlb
push
and
push
je
and
sub
xchg
mov
mov
pop
mov
cmp
xchg
cwtl
sbb
add
pop
cmp
pop
ret
sub
push
aaa
cmc
test
and
popf
mov
inc
add
loopne
add
mov
jg
adc
add
mov
mov
flds
in
xchg
inc
add
xchg
cvtps2pd
add
xchg
jo
adc
fbstp
stc
lock
add
add
pop
int3
mov
out
add
add
pop
sbb
lret
sub
stos
sbb
cmp
adc
add
sub
inc
rorl
clc
les
cs
cmp
cltd
insl
sti
pop
mov
add
inc
cmp
ret
xor
add
sbb
jg
dec
add
popa
imul
add
adc
loopne
les
jo
xchg
fiadds
addb
or
mov
sbb
add
cmp
cmpsb
outsl
es
cmp
les
push
xor
aad
ja
sarb
lahf
and
dec
ljmp
je
mov
jbe
test
out
scas
ret
repz
pop
xchg
mov
or
pop
mov
sub
lahf
testl
loopne
push
incb
mov
add
addb
add
mov
scas
out
cli
inc
into
es
xor
cmc
mov
add
add
push
outsl
fldcw
add
stc
call
jge
out
jle
pop
xor
xchg
dec
testb
insl
push
xchg
mov
icebp
xor
add
mov
stc
lds
xchg
fmull
mov
pusha
add
mov
cmp
xor
add
pop
push
xchg
dec
mov
cmp
mov
ffreep
add
inc
faddl
jne
add
jne
cwtl
inc
add
add
xchg
fs
stc
iret
or
or
mov
dec
test
pushf
cmp
mov
sbb
mov
jl
ds
dec
rorl
mov
add
fnstsw
insb
mov
add
nop
test
xor
pop
push
mov
pop
in
sbb
imul
fwait
xor
lret
cmc
setl
fwait
mov
int3
movsb
or
mov
sub
cmp
pop
int
add
je
je
lds
add
or
push
sub
cmpsl
adc
test
push
add
arpl
lods
iret
mov
out
push
ret
decb
sub
cli
in
cwtl
mov
sub
cli
dec
movl
mov
sti
fstpt
push
sahf
in
and
mov
cmc
les
lods
push
mov
and
add
dec
sub
xchg
imul
lret
add
dec
movsl
ja
pop
push
pop
arpl
je
loop
add
add
je
xchg
push
aam
movsb
fimuls
test
std
les
inc
jns
mov
loopne
popf
fwait
pop
or
mov
push
js
add
das
bound
jl
scas
push
inc
xorl
lea
ja
les
loop
into
xor
fisubl
mov
dec
ret
test
mov
into
scas
mov
inc
add
subl
divb
xchg
or
std
mov
add
int3
outsl
ja
test
lret
data16
mov
enter
pop
out
cltd
pop
mov
js
dec
ret
mov
test
mov
loop
rcll
cwtl
jb
sub
pop
dec
xchg
rolb
aad
pushw
fs
bound
das
popa
rolb
lahf
movb
jb
push
add
mov
ret
inc
or
sbb
and
outsl
mov
adc
inc
jecxz
sti
mov
in
into
or
cmp
sub
xor
or
mov
add
ds
jo
and
ja
aaa
enter
add
xor
adc
cwtl
pop
pop
jp
lret
adc
add
add
xor
and
xchg
mov
jecxz
js
mov
fcoml
dec
aaa
imul
sub
adc
fsubs
lea
movsb
rolb
add
flds
or
add
mov
or
popf
hlt
mov
addr16
ljmp
add
lret
sub
jno
pop
frndint
xor
sahf
data16
pop
int3
test
sbb
unpcklps
stos
adc
and
scas
dec
xor
mov
out
xchg
sbb
addb
mov
xchg
stc
mov
fidivl
inc
rolb
inc
stc
inc
add
lods
jno
mov
sbb
add
jb
push
xchg
jbe
mov
int
pop
test
add
adc
cmpsb
mov
mov
pop
repz
bound
pop
mov
jnp
fdivs
mov
inc
add
std
jae,pn
push
mov
cmp
movsb
push
in
push
or
and
fcmovu
in
and
push
push
mov
cmpsb
push
inc
add
enter
add
ljmp
pop
xchg
inc
add
imul
insb
jnp
add
add
sub
push
test
inc
add
sub
fstpl
and
leave
push
daa
aaa
dec
mov
bound
and
sub
ss
stc
cmp
pop
xor
and
scas
push
sub
sub
outsb
push
pop
aaa
and
cwtl
mov
or
sbbl
or
lock
mov
push
mov
popf
cwtl
mov
scas
dec
and
xchg
jns
jg
xchg
xchg
insl
ja
loopne
push
adc
aaa
fcomps
add
pop
or
add
popa
mov
call
imul
shl
int3
shll
imul
aam
push
jecxz
stos
jge
jp
push
push
or
mov
in
jns
push
fisubrs
add
mov
jno
pop
jge
lret
ficomps
cmovno
add
cmp
cs
mov
ret
mov
add
inc
mov
shl
js
mov
sbb
cltd
or
out
and
test
bound
in
inc
add
inc
nop
or
in
stos
int3
jnp
jb
dec
pushf
icebp
mov
add
inc
les
popl
rcrl
sub
ret
movsl
adc
sahf
and
in
popa
int3
jns
add
rcrl
enter
add
pop
inc
xchg
in
xor
rorb
push
inc
dec
dec
push
outsb
lods
inc
xchg
jl
add
pop
and
xlat
cmp
xor
test
or
stos
call
mov
dec
lahf
pop
mov
sbbl
sub
mov
mov
lds
iret
and
add
xor
dec
testb
push
mov
add
cmpsl
scas
mov
or
adc
pushf
jne
jl
stos
and
add
add
mov
into
sbb
sub
mov
add
pusha
add
sarb
in
sahf
inc
add
mov
pop
loope
sbb
imul
mov
mov
xor
sbb
mov
orl
frstor
addb
js
stos
jae
lea
pop
shl
inc
pop
jle
or
psrlq
add
rolb
sbb
dec
add
std
pusha
add
jg
mov
add
and
jmp
scas
pop
aam
or
sbb
lock
gs
add
add
adc
push
in
std
mov
gs
loop
ror
daa
andl
aam
mov
fwait
cs
inc
add
clc
adc
sbb
or
xchg
icebp
pop
lock
xor
add
mov
int
popa
addb
je
sub
mov
or
stos
pushf
leave
fiadds
sub
roll
and
mov
cmpsl
popf
jmp
icebp
addr16
jbe
inc
add
dec
cltd
iret
xor
lret
jno
adc
xor
gs
mov
or
pop
shr
ds
stos
adc
flds
add
sbb
fisubl
insb
inc
or
xor
sub
mov
mov
add
or
icebp
les
loop
imul
stc
insl
insl
les
mov
xor
mov
xchg
adc
xchg
xor
js
sbb
push
iret
shll
in
sti
subl
jnp
les
dec
and
and
sbb
dec
push
fidivrl
xor
add
std
es
hlt
iret
ss
stc
push
xor
enter
push
aaa
xor
popa
lahf
popa
add
sub
das
sub
jne
ljmp
add
frndint
jecxz
jl
sbb
sub
cmp
inc
add
je
fsubrl
add
or
mov
mov
jnp
insl
or
jp
jns
jns
clc
and
and
mov
mov
cmp
dec
in
stc
dec
mov
mov
inc
out
inc
add
ja
inc
je
cmp
and
cmpsl
rcrb
aas
adc
dec
inc
xor
xor
in
shll
mov
adc
fcmovnb
cwtl
mov
cmp
or
dec
in
push
repz
pop
dec
sub
pop
fs
sub
mov
test
and
cmp
push
les
pop
jne
add
sub
scas
stos
add
add
lcall
adc
jo
jmp
into
out
jae
outsb
jg
in
xchg
js,pt
movsb
mov
and
push
sahf
and
push
add
lret
pop
in
scas
jb
cltd
xchg
add
in
or
lds
punpckhwd
mov
xchg
jo
leave
jecxz
pushf
in
and
ret
push
mov
xrelease
movsl
fs
imul
lods
in
test
je
scas
lea
fidivl
mov
icebp
std
dec
lret
adc
dec
jl
inc
add
inc
pop
mov
or
movb
test
xchg
push
aaa
imul
insb
jns
sbb
fsub
lods
cmpsb
dec
sub
sub
pop
pushf
adc
jmp
add
sub
push
adc
cli
fnstenv
loope
call
test
cld
jg
push
add
dec
jp
add
movsl
repnz
fdiv
dec
mov
ret
fucom
adc
in
rolb
push
add
imul
mov
and
sbb
dec
ja
arpl
out
add
cs
and
pop
xchg
or
lret
sarl
outsb
loope
and
xor
sub
clc
movsb
test
ja
sub
mov
pop
or
adc
add
lds
push
sub
mov
mov
adc
aas
mov
aam
add
mov
add
xchg
jl
add
les
test
popf
fcmovnu
cld
int
stos
xchg
pusha
add
jl
xor
inc
add
in
cs
xchg
add
aaa
hlt
rcrb
scas
sbb
push
sub
jne
inc
add
xorl
mov
lds
sbb
mov
xor
cltd
inc
cltd
stos
movsl
in
das
rolb
adc
pop
in
xchg
sub
js
cltd
hlt
mov
int3
jp
lahf
or
dec
faddp
gs
or
sub
adc
xlat
cmp
addl
cmp
xchg
sbb
xchg
mov
into
push
mov
std
fsts
pop
mov
fiadds
jo
rcrb
sarl
push
add
inc
add
and
ret
lea
xor
dec
mov
daa
rolb
lods
mov
jl
dec
and
mov
movb
mov
scas
pop
xor
test
adc
lods
mov
mov
cmp
xchg
mov
gs
fldl
add
stc
adc
mov
sti
sbb
pop
in
popa
dec
and
ja
cs
xchg
ds
fdivrs
and
add
sbb
add
test
adc
out
repz
cmp
arpl
rcrb
add
rolb
cmpsb
and
sub
outsb
mov
or
add
pop
sub
js
cmp
mov
fucomip
insb
push
shlb
xchg
cli
movb
pop
mov
pushf
loope
daa
clc
in
push
add
mov
pop
or
add
out
mov
sbb
notb
push
aad
in
xlat
sub
inc
add
fwait
pop
addr16
das
pop
pop
mov
add
mov
dec
push
arpl
push
scas
push
lds
inc
add
jecxz
add
cld
jecxz
cmpsb
or
add
cld
adc
adc
sarb
test
push
mov
add
les
arpl
mov
add
or
add
sub
xchg
divl
add
push
or
add
jb
pop
adc
lret
pop
mov
add
scas
iret
push
push
add
cli
and
jl
mov
add
xor
fs
pop
data16
xchg
xchg
jle
in
sarl
loop
push
js
aas
mov
cltd
popa
mov
push
jbe
repnz
add
pop
lret
popa
or
jl
lds
jne
and
je
add
mov
mov
add
push
stc
into
addr16
add
mov
adc
aam
jo,pt
mov
push
dec
ret
dec
adc
pushl
add
nop
outsl
pop
in
mov
pop
push
pop
cmp
cmpsb
cmc
fmuls
into
mov
mov
and
pop
aas
xlat
fildl
add
sub
inc
add
pop
push
push
out
sahf
and
idivl
sti
mov
leave
stos
or
adc
add
add
das
aam
and
movsb
sbb
mov
mov
ja
stos
lea
cld
jno
les
gs
sbb
add
push
mov
aam
cmp
jge
cmp
pop
mov
lods
add
mov
insl
xor
outsl
bound
ljmp
out
cmc
push
lcall
shll
std
push
xchg
mov
mov
jbe
xchg
add
das
dec
dec
or
pop
add
cs
xchg
jns
add
add
jecxz
and
adc
push
add
push
arpl
ja
inc
add
inc
inc
add
push
mov
push
mov
and
sub
pop
jns
adc
fwait
lret
add
add
add
nop
fsubs
cmc
es
out
fldcw
jns
sbb
mov
add
mov
and
outsb
pop
mov
add
xchg
daa
sub
mov
mov
orl
xor
pop
sub
add
cwtl
dec
fsubl
cmc
adc
mov
les
iret
popa
sti
out
xor
bound
out
jecxz
push
insb
cmpsb
push
mov
jecxz
add
jbe
cmp
sbb
push
pushf
push
bound
enter
les
cmp
xchg
rcrb
out
mov
lock
dec
mov
data16
repz
mov
add
add
push
sbb
sbb
add
pop
rolb
gs
mov
push
or
shl
vpmuludq
outsl
insb
ret
sbb
sahf
sbb
push
imul
mov
add
es
loop
xchg
je
or
mov
or
add
and
mov
mov
mov
mov
jne,pt
mov
jne
mov
test
or
pop
cmove
addr16
addr16
pushf
mov
ror
das
or
mov
sahf
push
add
inc
add
add
pop
outsl
rolb
rorl
cmc
mov
xor
cmp
xor
add
xchg
test
xor
add
lds
mov
scas
out
cmp
test
imul
cltd
and
add
call
aas
inc
data16
push
mov
loop
out
fdivrl
cmp
pushl
ds
xchg
add
cmp
pop
dec
dec
and
jno
add
add
mov
mov
lea
ret
and
add
in
std
add
rcrb
xchg
imul
xor
imul
ljmp
lret
lods
xchg
aaa
into
imul
add
fcomps
jno
add
scas
or
pushf
mov
push
or
fisubrl
hlt
xor
int3
psllq
popa
aaa
xchg
lods
jecxz
mov
add
ljmp
add
jbe
aad
push
jo
inc
add
subl
or
xor
pop
bound
push
pusha
add
fstl
mov
les
out
aad
imul
loope
outsb
jns
fst
sahf
mov
jae
jnp
movb
sbb
aaa
pop
sub
lds
cmc
aad
adc
mov
push
lahf
xchg
push
mov
jl
in
cmp
cmp
mov
and
or
add
add
adc
jb
sbb
mov
ficompl
push
add
stos
rolb
add
inc
add
pop
mov
adc
js
fisubs
and
and
adc
js
test
ljmp
xorl
mov
loope
mov
sbb
rcrb
sbb
movsl
minps
mov
test
xchg
mov
mov
in
jg
add
lret
push
adc
mov
cmp
jmp
loop
pop
addb
in
mov
jmp
inc
add
mov
bound
imul
in
add
mov
jmp
mov
test
mov
sbb
cwtl
scas
lretw
pop
insb
sbb
inc
sub
sbb
mov
out
jecxz
sbb
cli
dec
xchg
mov
add
in
and
mov
add
pop
pop
icebp
repnz
mov
fmull
ret
les
and
rorb
add
dec
push
fdivrl
jno
inc
add
xchg
addb
xor
xor
inc
test
jle
daa
dec
push
or
sub
sub
cmp
xchg
jae
mov
pushf
pusha
add
xlat
push
add
add
test
mov
cmpsb
fcompl
dec
add
in
mov
push
test
out
or
cli
sub
jecxz
and
dec
pop
cs
inc
pop
gs
insb
rclb
mov
inc
add
jmp
jmp
xor
inc
xor
dec
sbb
leave
cmc
cli
call
adc
jl
jne
and
fnstsw
or
dec
adc
xor
add
js
mov
js
sub
dec
xor
lea
and
cmpsb
xchg
clc
js
arpl
inc
xchg
rorl
pushf
ret
xor
xor
add
xchg
adc
flds
adc
mov
dec
call
aas
push
jae
jnp
pop
lret
lock
inc
inc
add
arpl
xchg
push
ds
outsb
pop
or
and
push
leave
mov
iret
push
add
adc
ja
inc
mov
int3
pop
aaa
pop
testl
add
das
ss
int3
xchg
mov
ret
sub
rolb
cmp
fistpll
call
int
out
nop
cmpsb
adc
sbb
into
dec
popl
add
inc
ja
out
pop
ja
lds
sub
lret
or
cld
mov
sub
inc
add
mov
movsb
fucomip
mov
arpl
je
testl
mov
mov
pop
popf
testl
cmp
xor
shr
xchg
movb
mov
and
ss
addb
int
pop
clc
lock
add
mov
movb
mov
inc
sbb
xchg
mov
mov
test
mov
xchg
cmc
xchg
cmc
mov
push
es
mov
mov
cwtl
cmp
stos
mov
push
sub
sbb
push
lret
or
add
mov
mov
imul
fwait
jge
or
push
jo
sbb
ja
dec
out
cld
stos
ret
inc
add
mov
dec
fs
add
add
mov
test
imul
pop
cwtl
out
jae
adc
testb
cltd
call
inc
dec
loope
push
and
inc
add
nop
mov
addr16
add
aas
test
mov
flds
add
xor
test
and
cmpsl
or
outsl
test
mov
aaa
rcr
cmp
add
addb
push
dec
cmp
in
test
pop
sahf
fwait
aaa
ficoml
add
sub
ja
loop
or
mov
lods
dec
mov
les
inc
add
inc
jne
xchg
and
xchg
mov
and
lock
addb
data16
xorl
mov
push
xor
add
xor
push
xor
cld
push
jno
cmc
test
les
and
xor
fistpl
jg
jge
or
push
push
pandn
and
jo
pop
jl
add
inc
add
aaa
loope
pop
scas
xchg
aad
int
mov
inc
mov
add
ljmp
jae
jbe
mov
jl
add
inc
mov
fcoml
test
xchg
fstps
mov
xchg
icebp
xchg
hlt
jns
jecxz
lahf
adc
or
outsl
ds
fidivs
ret
xchg
add
push
iret
fisubrl
sub
and
jno
div
sub
add
pushf
push
and
pop
adc
jb
lcall
mov
adc
add
jg
inc
add
push
movsl
add
add
add
adc
ficoms
test
add
popa
xchg
movsl
dec
xchg
jp
imul
mov
sub
imul
add
cmp
sub
add
pop
sbb
jne
push
mov
enter
fidivl
inc
add
add
dec
dec
mov
xchg
add
xor
push
imul
sbb
sub
adc
stos
stc
lcall
add
mov
inc
add
popf
mov
xor
lret
xchg
inc
add
cwtl
out
jp
add
dec
sub
rorl
outsb
fnstenv
cmpsb
dec
mov
cmpsl
mov
cmc
adc
dec
cli
sbb
notb
leave
xor
aas
pop
dec
in
cs
jecxz
dec
mov
dec
fs
xor
pop
sub
outsb
movsb
aaa
stc
insb
lret
stos
lahf
mov
in
mov
pop
out
bound
cwtl
jle
cs
jmp
mov
fimuls
es
dec
nop
jle
pop
xchg
add
lds
inc
add
dec
in
and
jmp
and
cld
scas
sar
xchg
mov
movsb
sub
stos
negl
push
xor
sub
jo
inc
jne
in
adc
pop
dec
popw
enter
dec
sub
sub
in
mov
sbb
mov
adc
push
cmp
push
mov
dec
adcl
loope
cli
shl
jnp
imul
dec
xor
mov
cmpsb
jg
test
jno
mov
clc
fdivrs
sti
fcoms
test
aas
mov
aaa
xlat
fstps
cmp
cmc
loope
dec
call
flds
add
addr16
sub
mov
or
cmp
aas
bound
das
or
lcall
pop
and
dec
lea
loop
mov
cli
inc
pop
leave
xchg
adc
or
stc
outsl
stos
mov
sub
stos
or
xchg
stos
pop
mov
add
sar
bound
xor
add
add
xor
dec
xor
add
repz
testb
rorl
mov
ja
mov
fidivrl
sub
aas
or
in
pop
stos
jg
xchg
xor
mov
adc
ret
adc
adc
jnp
sub
pop
cli
or
mov
mov
xchg
xchg
dec
jns
mov
loop
add
in
fwait
aaa
push
push
push
ret
adc
out
xor
jl
add
jo
pop
cld
decl
dec
mov
push
push
rolb
jge
fstp
or
fdivrl
addb
lock
mov
dec
cmc
cmp
mov
sahf
or
movsl
shr
dec
ljmp
out
shll
mov
inc
add
add
push
js
mov
loopew
or
add
mov
int
not
rolb
or
mov
dec
push
xchg
sub
ficoml
adc
mov
push
add
adc
add
jg
dec
ds
inc
add
push
mov
ss
pop
push
mov
je
dec
test
insb
pop
mov
ja
icebp
adc
add
lods
cmp
pop
pop
or
jl
pop
inc
add
mov
ja
loop
aam
add
add
jns
add
insl
jb
les
cmc
ljmp
aad
fildll
cmp
scas
push
adc
arpl
xchg
test
aaa
pusha
add
push
xchg
add
add
nop
decb
dec
aad
adc
add
add
decl
addr16
setg
or
xchg
movsl
inc
add
add
xchg
movsb
sub
int3
mov
loope
add
jmp
jp
dec
ja
arpl
push
inc
cs
dec
testb
jmp
js
cmp
int3
jg
int3
cs
push
stos
insb
inc
pop
mov
cltd
mov
in
mov
jae
repnz
add
and
insb
and
add
shlb
imul
negl
cmp
jl
mov
add
mov
mov
push
pop
out
incb
bound
movb
inc
add
repnz
push
xor
imul
xlat
out
adc
ror
push
ret
fstps
xor
xchg
test
enter
pop
arpl
add
inc
jmp
cmp
inc
lds
int3
push
imul
sti
jb
add
pop
cmp
rorb
add
sub
out
lret
fcomps
sbb
jae
dec
mov
add
push
mov
add
cmp
xor
jae
lock
add
lods
in
les
xchg
cmp
pop
mov
add
jecxz
add
out
sub
fsubl
xor
insl
mov
dec
push
xor
jmp
dec
divb
pushf
push
lods
fs
push
pop
cmc
ljmp
xchg
and
mov
xor
mov
lods
cmp
or
mov
cmp
cmp
jmp
gs
imul
lods
iret
adc
sub
fsubl
xchg
cmp
jae
add
outsb
sbb
xchg
cmpsl
insl
sbb
mov
add
xchg
out
dec
scas
movsb
ljmp
enter
flds
mov
rcll
ja
stos
mov
lret
sahf
mov
scas
mov
add
jecxz
add
xor
dec
push
sub
and
inc
jmp
mull
mov
mov
xor
lods
adc
les
pop
and
cltd
fnstcw
xor
js
mov
add
movsl
and
out
imul
scas
inc
add
mov
add
and
ffreep
add
push
test
xchg
dec
test
repnz
data16
mov
add
mov
popa
in
mov
sbb
add
push
mov
and
sub
sub
insl
lahf
mov
bound
aas
popf
push
loopne
addr16
xchg
adc
repz
fcoms
mov
fidivl
enter
mov
cs
xor
push
jno
loop
repz
in
cmp
scas
out
add
push
lods
pop
mov
in
xchg
xchg
mov
adc
pop
cmc
lea
jae
aaa
pop
jnp
add
or
xchg
or
pop
mov
sbb
xor
fsubp
cwtl
out
pop
loopne
xor
std
push
mov
divb
xor
jae
add
lods
sbb
add
push
add
aam
add
fnsave
call
mov
out
cmp
push
xlat
jne
and
xchg
jns
mov
sbb
inc
add
dec
fstps
or
mov
test
xlat
ret
xchg
jp
add
iret
into
cltd
pop
xchg
test
into
mov
int3
push
sub
lret
xchg
push
xchg
rcl
in
add
xor
daa
add
inc
add
imul
inc
add
mov
pop
inc
add
inc
add
push
xchg
mov
cmp
daa
std
cmp
add
mov
test
push
push
loop
icebp
jmp
mov
vdivsd
sub
xor
add
and
and
outsb
pop
push
pop
push
lea
add
add
mov
in
repz
dec
sarb
aam
inc
add
lcall
inc
add
cmp
jl
xchg
push
inc
add
mov
or
add
add
dec
lahf
xor
out
cmp
jecxz
mov
shll
lret
dec
xlat
fsub
notl
clc
fsubr
mov
mov
mov
mov
mov
push
dec
addb
lret
add
dec
mov
jl
inc
or
xchg
movb
pop
mov
out
pusha
add
and
mov
mov
scas
fidivs
add
pop
mov
dec
pop
sbb
inc
and
stos
adc
in
dec
sti
sti
or
adc
jb
mov
lods
int3
mov
mov
and
mov
movsb
push
rolb
add
cwtl
mov
pop
cmpsb
jno
push
ljmp
loop
icebp
add
add
adc
lock
add
fnstsw
jge
mov
negb
outsb
adc
pop
xor
out
pop
pop
stc
rclb
aaa
jmp
add
pop
sub
add
filds
in
mov
movsb
inc
add
pop
jle
pop
popf
cmp
cmp
push
ljmp
stos
cmp
sbb
add
cltd
mov
pop
adc
sub
add
outsb
fsubs
rcll
add
loop
xchg
rolb
js
arpl
out
mov
cld
lds
cmpsl
cmp
int3
and
addr16
pop
inc
add
dec
mov
sub
push
cmc
inc
out
adc
jb
sub
leave
mov
out
mov
xor
stc
shl
test
popl
xchg
in
bound
lock
jecxz
xchg
sub
inc
mov
sbb
or
jns
out
addb
sub
ja
imull
cli
mov
mov
imul
add
out
in
lahf
inc
and
inc
mov
cld
das
lcall
sbb
add
lods
and
jae
ljmp
add
shl
in
xchg
jmp
add
repz
mov
jnp
aas
das
test
mov
add
fimull
xchg
sahf
dec
pop
xchg
stos
cmp
or
mov
pop
adc
gs
mov
pop
cmp
xchg
jmp
add
lret
inc
adc
ret
mov
loop
and
cmp
shrl
pop
and
mov
xchg
adc
and
xor
cmp
into
adc
or
pop
sti
mov
add
iret
or
ret
mov
ja
lret
cli
js
loop
jecxz
mov
cmp
sbb
lock
sub
and
dec
movsl
pushf
sbb
add
das
xor
cwtl
pushf
std
test
adc
add
cmp
xor
fisubl
mov
fmuls
pop
out
rolb
imul
int3
mov
jns
pop
jno
fists
mov
data16
pushf
pop
adc
mov
cmp
inc
add
pushf
inc
add
add
dec
fsts
xchg
ljmp
int
sbb
addr16
inc
arpl
sbb
in
mov
data16
cli
fucomi
cmc
and
adc
add
add
mov
mov
push
adc
in
mov
int3
test
mov
add
cmp
xor
pushl
pushw
add
xchg
ss
mov
les
dec
push
ret
push
add
mov
xchg
ret
aaa
lcall
adc
stos
xchg
mov
aaa
mov
movb
cltd
std
cmp
add
add
mov
add
mov
sbb
push
movsl
lods
push
arpl
imul
sbb
jbe
cmovs
push
push
fisubl
int
in
pop
xchg
rorl
mov
push
mov
or
fnstsw
imul
mov
jecxz
add
push
or
jb
jp
add
add
lahf
cmp
add
pop
mov
loopne
mov
add
jl
push
push
mov
push
addb
pushf
lcall
shl
daa
daa
or
sub
repnz
add
dec
mov
lods
pushf
sbb
in
and
fwait
sub
xchg
stos
or
inc
add
jecxz
add
add
adc
aad
arpl
int
je
divl
sti
sub
dec
mov
shll
xchg
and
clc
fistpll
call
stc
mov
movsb
gs
xchg
iret
jo
and
push
int
imul
sbb
jo
mov
mov
imul
mov
mov
dec
mov
sbb
clc
mov
ret
icebp
in
add
sbb
sub
bound
push
in
testb
pop
nop
insl
call
insl
je
mov
outsl
out
xor
add
pop
or
add
push
insb
dec
mov
add
gs
dec
sbb
and
imul
roll
mov
ds
decb
lahf
js
jo
loopne
pop
cmp
push
popa
inc
add
mov
js
xor
mov
les
test
add
fldl
cmpsb
nop
shlb
stc
push
add
mov
out
add
sti
cmpsb
sti
je
mov
insl
mov
lods
mov
rolb
out
movsb
mov
fs
rcl
mov
jne
and
mov
xor
push
xchg
hlt
cmpsl
out
fld
ret
jge
sub
data16
fisubrl
xor
imul
pop
and
mov
dec
pop
scas
adc
sub
mov
dec
stc
outsb
test
insb
xchg
xchg
inc
jne
cli
pop
mov
or
enter
cmp
xchg
leave
jb
insb
push
pop
xchg
movb
or
fdivrl
mov
inc
add
jge
stos
int
xor
jb
sbb
outsb
mov
pop
and
mov
fsubrs
and
in
fdivs
aaa
dec
loop
lcall
sub
xchg
cmp
add
fsub
frstor
pop
add
ret
enter
sub
in
or
xor
add
inc
add
in
xchg
pop
mov
lret
ja
mov
xchg
sub
xchg
push
inc
add
pop
or
add
cli
nop
fildl
addb
clc
movsb
mov
xor
pop
sahf
mov
gs
xor
jbe
jle
add
xchg
xchg
vpsubsw
cmp
push
xor
and
cmp
les
dec
push
and
adc
ret
into
outsb
fs
hlt
aam
add
mov
add
insl
mov
loope
roll
scas
repnz
cltd
add
push
scas
in
decl
in
dec
xchg
fs
popf
outsl
insl
cmc
adc
add
sti
sbb
xor
mov
mov
jb
loope
out
jnp
sbb
jnp
sbb
hlt
mov
xchg
mov
insl
int
xchg
addb
jge
out
xor
pop
outsb
lods
insb
add
cmp
fmull
aad
push
add
loope
dec
into
lods
cli
add
push
dec
sbb
add
xor
popf
cmp
push
js
or
dec
addb
in
cmpsl
movb
dec
jns
rclb
loop
incb
and
xor
add
sbb
jmp
ret
pop
bound
mov
add
addb
cld
fidivrs
push
add
mov
stos
aas
fucom
pop
enter
lods
dec
mov
adc
jo
add
lods
add
sub
inc
xchg
xchg
rolb
jb
dec
popf
mov
push
out
jns
mov
out
fstp
fidivrs
sub
jmp
hlt
lods
loop
aas
clc
inc
add
inc
ds
out
cmpsb
mov
xor
sub
jge
aas
xchg
test
pushf
lret
mov
xchg
cmp
out
insl
cmpsb
iret
addr16
add
imul
pushf
ds
jmp
insb
push
add
and
push
mov
and
int3
fisubrs
ret
sti
call
add
loop
add
push
mov
add
mov
sti
sub
xchg
lock
mov
cltd
mov
mov
xchg
mov
outsb
pop
jecxz
add
addl
pushf
jg
push
push
cmpsl
inc
add
xor
cld
inc
add
push
adc
or
xchg
mov
cmpsb
inc
add
inc
or
mov
sub
mov
and
in
pushf
xor
xor
scas
adc
push
fisttpl
fmull
cmc
dec
std
xchg
outsl
lods
clc
or
ds
rorb
fwait
clc
mov
inc
add
mov
add
into
popa
mov
jmp
inc
add
mov
insb
mov
mov
lds
mov
cmc
in
add
aaa
iret
fldl
flds
cmp
xchg
lods
dec
xchg
movb
add
outsl
and
adc
loope
inc
xchg
mov
sbb
movb
push
inc
add
rolb
sbb
out
pushf
test
divb
test
dec
pop
and
xor
mov
cmp
xor
adc
add
or
add
pop
xchg
arpl
repz
daa
and
mov
andl
mov
xchg
push
push
xor
movsb
fldcw
fdivrl
repz
add
inc
and
xchg
movsl
mov
add
cmp
add
into
push
push
ja
jae
idivb
pop
insb
stc
sub
nop
sub
add
jnp
loop
or
sub
mul
testl
push
mov
adc
jne
minps
add
add
xchg
pop
dec
pop
dec
mov
push
push
pop
push
std
lods
xchg
push
mov
pop
gs
mov
and
jae
inc
add
mov
mov
and
adc
roll
outsb
movsb
pop
push
cmpsb
and
scas
stc
push
sub
das
out
cmp
std
push
xchg
les
dec
pop
sub
sbb
add
fwait
aam
shr
xor
test
lret
jg
mov
mov
xor
xor
cli
mov
fcompl
loop
push
and
xchg
enter
adc
fcmovu
fwait
stos
inc
aad
rolb
sbb
inc
add
clc
fwait
push
dec
movb
add
inc
add
repz
push
jmp
sub
sbb
cmpsb
and
imul
push
clc
out
outsb
and
sbb
rcrl
jmp
jo
push
ret
cli
dec
pop
daa
mov
test
push
movsl
mov
into
sti
stos
and
xchg
repnz
stc
addr16
pushf
or
cltd
ret
add
pusha
add
xor
cld
adc
jnp
and
fistl
icebp
sub
add
sbb
lahf
jge
loopne
jl
xchg
leave
into
sti
jns
adc
adc
xchg
dec
add
lcall
add
rolb
movb
lcall
rcrb
pusha
add
in
inc
add
inc
jae
es
adc
dec
jg
add
add
xor
mov
mov
sub
out
insb
pop
sbb
jmp
es
xchg
push
push
ljmp
call
in
icebp
sti
fisttpll
inc
adc
jns
add
flds
add
fwait
and
addb
push
lods
lods
mov
mov
jecxz
inc
add
xor
addb
dec
cmc
cmp
in
xchg
lock
xor
pushf
mov
dec
and
jle
pop
cwtl
ljmp
loope
leave
jb
addr16
or
jae
scas
dec
dec
pop
lods
shr
sbb
movsl
pop
sbb
add
sub
mov
or
sbb
addb
add
ret
mov
cmp
pop
ret
stos
adc
and
movsl
add
push
ds
std
hlt
sbb
push
inc
add
iret
pop
push
jecxz
cwtl
lea
sbb
imul
jp
ja
rcrb
jbe
mov
mov
imul
adc
push
insb
daa
push
or
in
or
movb
mov
add
jmp
lock
pop
popf
ljmp
push
jmp
dec
pop
ffree
add
out
jno
fnstsw
pop
jecxz
cmp
push
push
jp
test
add
and
mov
sbb
push
sub
mov
std
mov
sti
fisttpl
mov
xor
lds
dec
lahf
mov
sub
xlat
or
push
or
aam
xchg
or
das
daa
in
enter
faddp
or
ds
jns
scas
pusha
add
jl
enter
dec
cmp
fisttpll
mov
loopne
cmc
jns
js
add
xchg
cwtl
repz
add
push
int
add
mov
pop
jecxz
sahf
push
mov
add
mov
add
adc
add
add
add
inc
push
push
cmp
push
add
testl
cs
fs
repnz
bound
jne
or
aad
add
xor
fdivrl
imul
test
cmpsb
push
dec
les
fdivl
xchg
inc
add
fldl
leave
xchg
sbb
xchg
dec
lahf
fdiv
enter
les
pusha
add
fisubl
pushf
xor
and
dec
gs
sub
daa
les
sub
test
les
jb
out
pushf
enter
xchg
and
and
xchg
jbe
mov
xor
sbb
pop
xor
pop
enter
dec
cmc
lods
xchg
aam
mov
imul
sbb
add
push
lds
add
push
pop
add
idivl
mov
shlb
add
in
int3
mov
std
add
jg
and
imul
add
add
rolb
or
leave
cmp
in
not
sbb
ljmp
push
add
mov
ret
jo
cmp
add
mov
movsl
inc
cmp
pop
rolb
or
mov
fdivrs
sbb
push
add
cmp
popl
out
pusha
add
xchg
add
sbb
inc
add
cli
js
popf
out
fsubrs
add
aad
cmp
inc
dec
and
pop
lods
lcall
jmp
stos
psubw
add
mov
push
imul
mov
insb
push
cltd
sbb
mov
out
jnp
icebp
xchg
mov
push
out
inc
pop
push
adc
rcll
sbb
jecxz
xchg
adc
add
aad
push
sbb
sub
push
scas
cli
adcl
mov
sbb
loopne
rcr
adc
mov
not
add
mov
add
add
cwtl
shlb
movsb
std
popf
or
cmp
mov
add
jbe
inc
add
nop
std
iret
aaa
push
es
leave
push
push
lods
fwait
push
xchg
push
nop
push
mov
sbb
leave
fldenv
out
clc
ficompl
pop
fnstcw
das
mov
cmp
jmp
add
push
lahf
movsl
sarb
adc
fiaddl
adc
jno
push
sti
test
sbb
or
dec
outsb
loopne
sar
icebp
gs
add
js
xchg
jo
add
or
outsb
dec
xchg
std
inc
pop
aad
idivl
lcall
mov
rcrb
adc
xor
cs
adc
repnz
std
pop
sbb
add
lods
mov
les
aad
mov
xchg
push
lcall
imul
push
popf
cmc
xor
xchg
bound
pop
sub
fcomp
stos
lea
mov
gs
push
sahf
lcall
sbb
xchg
dec
sbb
test
fistpl
push
jb
mov
insb
icebp
aas
xlat
into
add
bound
gs
js
je
rcl
push
add
stos
hlt
sbb
dec
sahf
adc
inc
add
or
xchg
roll
adc
add
inc
loopne
push
xchg
xor
test
add
in
push
iret
addb
popa
push
pop
mov
add
ja
scas
pop
xchg
loope
and
add
add
daa
or
daa
mov
jo
in
mov
imul
mov
ret
lcall
push
cmp
add
mov
dec
gs
daa
adc
jle
add
movb
mov
xor
rcrb
dec
pusha
add
jnp
dec
addb
jo
bound
mov
sarb
add
ficomps
lods
in
jl
loope
pop
mov
fdivrs
add
pop
mov
fcomip
sti
stos
test
jmp
lret
add
scas
int3
scas
dec
push
xor
shll
fcmovu
imul
add
xor
or
add
jmp
imul
add
rolb
pop
adc
roll
mov
je
insl
cli
mov
ljmp
mov
jb
mov
jmp
mov
add
push
add
filds
jb
cmp
inc
add
cld
dec
les
mull
pusha
add
add
cmp
rolb
add
pop
popa
test
icebp
xor
xor
jp
lods
jp
add
fildll
cmpsb
xchg
lcall
xor
or
or
mov
and
add
mov
movb
sbb
xor
add
addr16
jge
mov
adc
movb
jo
imul
jl
mov
clc
divl
dec
add
lea
mov
mov
cld
fcoml
pushl
mov
rolb
inc
ja
sahf
repz
or
xchg
mov
loopne
push
ficoml
mov
lds
out
fimull
bound
sbb
mov
mov
jl
inc
add
pop
xchg
bound
xor
test
pop
fcoms
mov
sub
in
xor
stos
and
das
adc
icebp
mov
pop
mov
in
cwtl
fadds
add
dec
out
inc
add
repz
push
roll
jnp
cltd
or
loop
xor
ds
inc
jl
stos
fsub
out
jl
mov
inc
icebp
mov
push
fisttpll
mov
lcall
push
xchg
inc
stos
mov
jne
js
testl
sub
sub
pop
pop
add
movsl
mov
add
mov
adc
add
ja
scas
dec
ficomps
pop
jge
mov
popf
bound
push
sahf
scas
add
mov
imul
push
xchg
xorl
cmp
jge
mov
prefetch
enter
mov
xchg
lods
mov
pop
movb
jno
jg
jae
add
inc
add
cmpsl
jae
out
rcrl
repz
in
fmuls
push
xchg
jne
mov
mov
jmp
jnp
add
leave
je
test
jle
rcll
daa
shll
xchg
enter
stos
outsl
sti
dec
push
add
out
add
aam
xor
mov
andl
fldl2e
adc
push
dec
js
push
ficompl
or
fcompl
scas
popa
jp
push
jle
mov
loope
scas
add
call
popa
loopne
jl
cmc
push
add
push
cmpsb
fcmovne
add
add
push
jg
dec
and
rcl
mov
hlt
scas
mov
jb
les
addb
gs
fiadds
js
daa
sbb
mov
fbstp
pop
sub
ds
or
xor
sub
fiaddl
xor
add
mov
cli
dec
sbb
push
inc
out
inc
xchg
aaa
in
aad
jge,pn
addr16
dec
jns
add
mov
cmp
movb
push
ss
not
ja
add
movsb
or
xor
bnd
dec
add
outsb
cmp
aaa
stos
push
out
dec
fcoms
add
out
cld
xor
in
ljmp
in
or
loop
addb
movsb
xorl
iret
int
jge
and
test
add
add
jnp
sbb
out
jns
jnp
aam
xchg
jae
sbb
mov
add
inc
add
stc
xor
negb
std
mov
lods
imul
std
aad
jae
out
mov
add
bound
cmp
andl
sbb
push
enter
test
add
adc
xchg
sbb
mov
add
imul
xor
xchg
loope
cli
pop
jmp
xchg
int3
mov
packssdw
adc
pop
cld
mov
jno
adc
push
add
sub
mov
aas
adc
sub
and
in
cs
fistpl
outsl
adc
push
and
mov
dec
cwtl
inc
jecxz
xor
cmp
add
dec
pop
pop
outsb
sti
iret
out
xchg
pop
sub
pop
jl
mov
adc
out
es
cwtl
roll
xchg
bound
outsb
mov
loope
ljmp
fildll
dec
out
push
and
cmp
insb
adc
aad
add
jge
rolb
push
aaa
push
jo
repnz
xchg
jle
xchg
and
notb
add
fsubrs
cmp
dec
sti
xor
mov
es
push
or
aad
sub
xor
mov
iret
lods
int3
out
lock
pop
jo
sub
enter
test
lahf
ds
mov
hlt
gs
sub
mov
xchg
mov
cmp
push
int3
enter
cld
adc
imul
jge
in
movsb
mov
enter
movsl
popa
int3
xlat
sbb
ds
pop
push
fiadds
sbb
adc
icebp
lods
dec
test
imul
mov
inc
add
gs
sbb
sub
adc
inc
add
lods
lock
pop
xlat
cld
outsl
inc
add
push
and
push
pop
push
imul
bound
push
sub
outsl
scas
ljmp
push
add
add
lret
and
bnd
add
ja
lods
push
lods
ja
jl
xchg
xor
dec
shll
stos
stos
jmp
cmp
sbb
jo
test
add
mov
add
push
in
adc
sahf
push
mov
dec
inc
sbb
xor
lods
loopne
dec
je
or
fcmovb
add
push
add
add
add
ja
negl
mov
sbb
adc
push
es
and
sti
mov
add
jb
sub
xlat
xchg
or
add
xchg
rolb
or
mov
insb
push
movsb
lret
pop
stc
test
test
add
mov
mov
adc
push
dec
xor
test
mov
test
adcl
int3
js
push
test
daa
push
inc
add
testl
hlt
dec
fsubs
cmp
add
ret
dec
xorl
aad
xchg
hlt
ja
cmp
movsl
rolb
sub
sbb
mov
mov
cli
cmp
add
fsubl
lret
push
mov
loope
fucomp
mov
incb
mov
das
mov
lret
mov
sti
mov
jg
mov
mov
ss
cmp
mov
jo
add
push
cmp
adc
adc
fcmovne
push
ds
sarl
sbb
in
push
add
add
push
lods
push
std
jno
sub
fdivrl
in
sub
sub
adc
xchg
roll
jb
mov
mov
mov
in
out
loope
dec
adc
dec
negb
sub
inc
add
xchg
and
xchg
mov
xchg
or
mov
out
xor
into
aam
sub
js,pn
cmc
das
xor
jge
push
nop
iret
inc
aad
add
call
imul
mov
jns
xor
add
fwait
pusha
add
mov
ret
dec
and
pop
clc
sbb
ds
cmpsb
outsb
pop
es
dec
xchg
hlt
lahf
ljmp
jle
rolb
incb
stc
repnz
stc
das
xchg
fdivrl
outsl
ret
clc
adc
adc
mov
sti
xor
mov
sbb
xchg
ret
cmpsl
pushf
mov
sti
jns
movb
add
popa
lods
mov
mov
loope
mov
push
addb
or
xchg
or
fbld
hlt
pusha
add
xor
cld
inc
add
adc
ret
add
mov
mov
cmc
shll
push
pushf
popf
call
das
lret
jo
ds
mov
push
inc
add
in
xchg
dec
xchg
jnp
add
aaa
push
insl
loope
stos
ljmp
lods
mov
xor
sbb
pop
popf
jo
addb
sub
imul
and
inc
pusha
add
in
xor
adc
push
push
jle
out
jl
push
test
push
or
and
fcmovnb
pop
pop
ljmp
sbb
das
mov
lea
fistpl
inc
add
dec
mov
fcomi
add
enter
addb
outsb
push
xchg
mov
add
push
movb
push
add
cmp
add
jo
insb
jb
push
aam
das
mov
out
add
dec
sub
mov
repz
dec
aad
insb
clc
pushf
repnz
xchg
mov
fst
shll
mov
das
movsb
push
add
inc
mov
clc
jno
and
notb
icebp
fbld
test
scas
mov
ljmp
movb
sbb
and
dec
aam
xchg
sub
sub
and
add
lods
jmp
sbb
add
sub
dec
pop
pop
adc
or
nop
je
sti
jnp
inc
jmp
pop
sbb
and
push
add
popa
adc
sbb
sbb
js
xor
inc
and
jl
in
sub
loope
nop
repnz
dec
jbe
dec
inc
add
scas
jl
sbb
push
jmp
add
fiaddl
cmp
es
lods
push
push
add
js
cmp
jle
mov
inc
xchg
hlt
jecxz
in
ret
in
add
push
adc
js
add
inc
add
sub
add
fildll
cmpsl
ljmp
into
lds
sbb
cmp
mov
loopne
adc
sub
xchg
lods
jmp
repnz
aaa
sbb
cld
test
les
mov
movsl
pop
sbb
push
popa
dec
fisubl
out
movb
add
push
inc
jmp
arpl
push
mov
out
xchg
ds
jg
movb
add
lea
mov
aas
jbe
int
aam
push
xchg
push
push
jl
or
popf
sbb
aam
loop
subl
mov
push
lods
cmp
adc
out
push
jbe
pop
ljmp
stos
shlb
xchg
stc
and
outsl
xchg
add
jle
xchg
xchg
push
sbb
xchg
out
mov
or
or
inc
add
dec
int
mov
inc
mov
mov
jae
clc
addb
arpl
movsb
loope
inc
int3
sub
sbb
mov
cli
fwait
add
test
lods
pop
lds
fsubs
idiv
inc
mov
and
mov
mov
mov
sbb
add
jnp
das
dec
pop
dec
xchg
fildll
mov
ljmp
call
rcrl
xchg
sbb
mov
push
cmp
out
mov
sub
lods
or
nop
mov
imul
add
insl
addb
movsl
aas
cltd
or
shll
je
out
stos
add
in
jmp
inc
sti
mov
or
push
add
xchg
dec
add
and
addb
mov
dec
fisubrl
add
adc
lcall
mov
adc
je
xor
pop
jg
lods
testb
xor
jl
or
outsb
gs
cmp
mov
jae
mov
sti
xchg
jo
mov
scas
fcmovnbe
gs
mov
cld
cs
inc
fcomip
jne
clc
lods
outsl
cli
mov
roll
lods
jle
xor
loop
adc
mov
and
rcrb
adc
sbb
add
dec
stos
scas
jns
jmp
stos
push
xor
xchg
cmp
daa
push
jb
in
mov
mov
cwtl
and
out
arpl
test
fisttpl
adcl
or
popa
push
and
add
inc
add
adc
arpl
add
pop
sbb
loope
lods
pop
repz
mov
and
mull
jbe
fidivs
push
cmp
sahf
mov
adc
push
in
pop
loop
sub
sbb
stc
inc
mov
mov
leave
xor
aam
js
xchg
sbb
loop
data16
jl
jnp
popa
addb
push
ret
cmp
icebp
adc
pop
pop
sbb
xchg
insl
jp
add
pop
inc
add
add
sbb
faddl
mov
jnp
mov
xor
cltd
test
shll
xchg
rorb
pop
jb
push
add
lock
jl
out
inc
clc
repz
dec
mov
movsb
clc
gs
jns
pop
rolb
imul
push
add
pop
test
xchg
test
mov
sbb
dec
ficomps
cmp
rolb
jl
out
lret
pop
icebp
mov
adc
inc
leave
shll
adc
clc
popa
mov
mov
fildll
out
add
mov
je
push
dec
or
pop
lcall
mov
jo
mov
std
xor
or
lcall
sbb
ljmp
pop
stos
cs
push
mov
and
ffreep
add
fwait
sub
pop
inc
add
in
adc
adc
mov
mov
out
pop
mov
xchg
call
cmp
addb
jnp
sbb
shr
or
mov
test
mov
pusha
add
add
cmpsl
and
ja
cmp
sub
cmp
fldl
pop
mov
or
enter
daa
jecxz
movb
inc
add
inc
add
or
fwait
cwtl
pop
push
add
stos
call
xor
mov
mov
lock
lahf
ja
ficomps
cltd
mov
xchg
jne
mov
sbb
add
xchg
aas
sub
xor
lcall
xchg
pop
jge
inc
or
xchg
pop
xor
popl
cld
in
outsl
xchg
xchg
mov
cmp
sarl
aas
add
cmp
push
call
clc
sub
jno
divl
das
pop
push
hlt
test
fsubs
mov
cmp
addl
mov
std
sbb
addb
dec
pop
ficompl
aas
sub
and
std
repnz
stc
cmc
repnz
and
mov
xchg
push
insb
lahf
jns
movsbl
inc
adc
jb
movsl
fs
cli
rolb
dec
add
push
arpl
add
pop
lea
cli
out
sub
cmp
xchg
ret
movsl
scas
cmc
cmp
aam
push
xchg
add
mov
fs
lock
cmp
jns
push
add
add
movsl
mov
dec
ja
cs
push
jne
sbb
jns
xchg
xor
push
add
clc
or
mov
scas
inc
add
scas
out
fwait
and
das
adc
aam
clc
enter
negl
shl
in
packuswb
or
leave
xor
push
push
adc
cs
cmp
test
pop
addb
add
add
mov
cmp
jle
and
enter
jmp
xchg
push
mov
fstl
setl
dec
xchg
adc
add
jmp
pop
lds
mov
add
mov
ljmp
jmp
lret
xor
cld
xchg
fadds
xor
scas
shl
cmpsb
xchg
inc
add
or
mov
xor
mov
push
add
sti
lahf
test
push
fildl
pop
test
insl
jmp
scas
pop
jns
sbb
push
jb
mov
jne
mov
jne
add
inc
popf
mov
push
inc
sub
sbb
outsb
cmpsl
loope
mov
jno
loope
les
cli
imul
inc
out
daa
lock
xchg
flds
bound
inc
test
mov
sbbl
mov
nop
repnz
mov
orl
jne
iret
leave
mov
pop
repnz
and
add
andl
les
ret
mov
cld
inc
or
xor
cmp
aas
mov
mov
imul
add
add
add
cmc
test
int3
imul
rorl
add
int
aam
popl
mov
or
sub
mov
inc
xchg
popf
lods
out
cs
int3
mov
jb
pop
aas
popf
arpl
mov
cli
xor
clc
mov
movb
call
movsl
out
std
jo
cmp
jno
add
loop
xchg
fbstp
ja
add
iret
mov
call
cmp
icebp
sbb
cmpsl
cmp
mov
faddp
add
ja
out
popa
ja
and
jmp
adc
ficompl
gs
add
fldcw
and
dec
xor
xchg
mov
aad
cli
jno
xor
mov
mov
adc
nop
inc
fidivl
jne
fnstenv
repz
repnz
xchg
or
mov
inc
sbb
sbb
into
or
mov
lds
jle
les
cmp
mov
jb
mov
xchg
sub
shll
clc
mov
mov
ret
fistl
int3
ret
mov
dec
fxam
dec
mov
dec
mov
inc
add
add
ljmp
ret
stos
sahf
inc
loopw
add
rcll
test
adc
push
xor
sub
pop
sub
fldl
mov
and
mov
xor
inc
add
add
xor
dec
sbb
jnp
lods
outsb
jbe
xor
fcoml
sub
rcr
into
das
rorl
mov
jle
icebp
sub
pop
xchg
out
gs
sub
ss
gs
mov
dec
daa
in
insb
dec
add
or
add
cmp
mov
dec
insb
test
cmp
mov
loope
mov
iret
add
adc
fdivrl
ljmp
bound
xchg
rolb
add
insb
add
ss
push
repnz
repnz
cltd
push
je
outsb
int3
pop
cmc
test
es
pop
or
inc
add
push
shl
add
xchg
imull
add
dec
xor
iret
and
mov
dec
movsb
fs
flds
push
dec
lds
pusha
add
push
mov
jg
pop
push
daa
sub
sub
lahf
add
insl
jo
add
cmpsb
fildl
push
push
in
jo
movb
xor
dec
nop
xchg
in
inc
add
lret
lret
jg,pt
insl
in
mov
ja
or
push
pop
inc
fmull
rolb
or
clc
push
pop
jnp
ret
add
mov
xchg
pop
pop
cmp
in
inc
lock
push
adc
shr
icebp
dec
push
std
pop
outsb
lods
dec
dec
out
lods
push
jo
inc
orl
gs
ds
dec
out
outsl
dec
cmp
lret
fs
or
insb
mov
xor
or
nop
pop
mov
pop
pushl
jg
mov
inc
add
add
movsb
push
les
xchg
mov
xchg
adc
out
pop
or
pop
iret
imul
lock
mov
cmc
test
fimull
sub
sub
test
fdivl
or
xor
pop
mov
cmpl
xor
fsubl
mov
xor
lea
add
add
mov
sub
inc
loope
je
insb
lods
mov
jmp
mov
dec
jae
jae
add
pop
and
cltd
mov
leave
aad
xor
mov
jmp
insl
fimull
sub
int
add
push
jo
adc
or
pusha
add
add
adc
lcall
nop
and
add
leave
in
mov
or
push
xor
push
add
popa
ja
sub
jno
icebp
add
stos
cmp
xchg
lock
out
xchg
adc
jp
pop
pop
add
aam
lret
test
clc
fwait
mov
push
adc
clc
mov
dec
popf
bound
in
out
testb
js
cmp
pop
xchg
adc
push
sub
jbe
push
or
clc
nop
push
sbb
mov
fimuls
addb
or
cmp
inc
lds
cmp
mov
add
inc
out
cmp
ss
pop
adc
rorl
lea
jnp
cmp
lcall
adc
mov
test
scas
cld
or
adc
aaa
popa
mov
sub
cwtl
jb
xor
and
xor
inc
jnp
cmpsl
inc
add
lahf
movl
dec
jge
icebp
fbstp
pop
xor
stos
sub
xor
cmp
clc
lds
add
sub
out
addb
test
in
mov
mov
movsl
add
mov
cmp
or
addr16
add
lea
jle
mov
leave
mov
add
dec
mov
xchg
dec
pop
pop
or
add
nop
dec
or
insl
in
aas
mov
sbb
popf
mov
dec
cmp
lret
mov
mov
imul
add
js
popf
test
stos
push
sub
jno
negl
push
fstpt
fs
inc
add
jmp
adc
mov
call
stc
mov
dec
xchg
cmp
cmc
into
xor
cmpsl
rol
mov
insl
pop
jbe
clc
aam
bound
repz
sbb
sbb
add
mov
test
adc
adc
mov
les
sbb
add
std
outsl
or
mov
sbbl
xchg
pop
push
xor
ja
fwait
inc
add
lds
sub
cmpsl
mov
xor
xchg
xor
mov
inc
push
add
pop
movb
sub
jg
fnstcw
mov
dec
das
pusha
add
jle
add
addb
xor
je,pt
in
mov
mov
scas
push
cmp
subl
lahf
aam
and
out
jno
cmp
mov
jnp
stos
ljmp
mov
lret
xchg
mov
mov
test
sbb
fisttpl
inc
sub
out
pop
outsb
mov
sub
inc
and
sub
addl
dec
push
lock
hlt
mov
mov
ja
adc
incl
add
sbb
push
inc
mov
fidivs
into
test
inc
es
jg
mov
roll
inc
add
cmp
add
leave
test
mov
sahf
addb
iret
add
push
ret
sub
push
xlat
xor
pushf
mov
add
dec
mov
into
push
test
adc
aaa
jg
test
hlt
mov
rcll
and
mov
jno
out
pop
rorb
mov
popl
add
add
test
in
push
jmp
cmp
shrd
add
jg
inc
add
add
add
test
cmp
dec
xchg
add
ret
pop
ljmp
fldt
fstl
mov
dec
mov
lahf
aad
aaa
aaa
roll
jno
fcoml
xor
add
sbb
loope
add
dec
in
jmp
lds
add
pop
imul
add
mov
inc
mov
add
pop
pop
leave
out
mov
xorl
sub
sti
fs
mov
scas
nop
pop
fcompl
and
add
cmp
addb
lods
inc
sahf
pop
je
or
insl
scas
xchg
popa
enter
mov
dec
mov
mov
cs
icebp
add
imul
jne
rolb
movsl
jnp
jb
xor
lcall
xchg
mov
int3
add
outsb
mov
add
cmp
cs
lea
in
push
sbb
pop
cmpsl
ja
or
movb
mov
pop
jno
enter
loopne
lods
xor
subl
pop
vpsubsw
xchg
dec
movsl
outsl
ljmp
movsl
shll
mov
push
mov
mov
mov
adc
push
cmpsb
xchg
fildll
imul
pop
jne
dec
add
leave
cmp
lods
shlb
push
xor
pop
pop
mov
stc
nop
jb
fiaddl
push
mov
push
push
mov
xchg
ret
sbb
aas
add
mov
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
and
aas
mov
addb
add
add
ret
add
add
mov
add
stc
nop
jb
add
je
stc
nop
jb
jo
cld
pusha
push
mov
xchg
ret
add
add
jbe
call
stc
nop
jb
jg
add
add
stc
nop
jb
scas
jbe
aaa
add
cmp
nop
jb
fisubl
stc
add
sub
mov
stc
nop
jb
lods
push
mov
xchg
ret
lods
ja
fidivl
add
nop
jb
jae
add
add
dec
jmp
stc
nop
jb
jg
add
dec
lock
add
add
add
sub
stc
nop
jb
add
add
add
push
mov
xchg
ret
arpl
popl
cmp
nop
cld
nop
jmp
aas
add
push
mov
xchg
ret
add
add
test
mov
stc
nop
jb
lahf
jbe
sbb
jb
sbb
add
add
and
in
add
add
mov
inc
addr16
movzwl
push
mov
xchg
ret
add
jp
jg
stc
nop
jb
add
mov
jg
pop
adc
sbb
inc
add
add
adc
add
or
add
cmp
and
add
nop
cld
nop
jmp
add
push
pop
cmp
nop
cld
nop
jmp
aad
sbb
nop
jmp
add
add
mov
push
mov
xchg
ret
fwait
inc
add
pop
mov
stc
nop
jb
and
add
stc
nop
jb
add
aad
add
and
stc
nop
jb
roll
out
add
ss
mov
adc
repnz
add
add
stc
nop
jb
add
add
push
add
xor
add
stc
nop
jb
add
xchg
stos
push
mov
xchg
ret
fiaddl
add
adcb
je
nop
cld
nop
jmp
sbb
sbb
stc
nop
jb
add
add
xor
nop
cld
nop
jmp
or
jo
nop
cld
nop
jmp
add
add
add
push
nop
cld
nop
jmp
ret
push
push
ds
and
nop
jb
add
shll
add
nop
jmp
arpl
push
add
jb
add
or
ja
aad
add
jae
outsb
mov
stc
nop
jb
add
ficoml
add
pop
push
mov
xchg
ret
stc
jo
add
xchg
call
and
lret
add
add
add
add
inc
add
add
nop
cld
nop
jmp
incb
mov
add
add
nop
jb
add
add
stc
nop
jb
or
add
inc
add
add
push
mov
xchg
ret
add
test
add
sub
jge
stc
nop
jb
ret
data16
add
dec
add
cld
nop
jmp
add
mov
lods
int3
jmp
stc
nop
jb
ret
popl
jbe
xor
sbb
stc
nop
jb
and
add
lods
stc
nop
jb
add
lret
add
and
dec
nop
cld
nop
jmp
add
add
ret
roll
lahf
jne
stc
nop
jb
add
dec
nop
cld
nop
jmp
add
popl
mov
and
call
stc
nop
jb
add
xchg
outsb
push
stc
nop
jb
xchg
add
sub
cmp
jb
add
arpl
add
loopne
pop
push
mov
xchg
ret
ret
out
jo
mov
push
mov
xchg
ret
add
add
lret
mov
xchg
ret
add
fiaddl
add
add
nop
jb
loop
sub
nop
jb
jae
dec
mov
xchg
pop
lea
stc
nop
jb
add
imul
push
mov
xchg
ret
xlat
inc
test
ret
inc
xchg
je
movzwl
stc
nop
jb
add
fiaddl
inc
add
push
mov
fldl
cmp
xlat
add
and
dec
and
stc
nop
jb
test
add
sub
nop
jb
ret
retw
andb
mov
nop
jb
add
sbb
inc
cmp
nop
jb
aas
add
mov
xchg
mov
nop
jb
add
add
sub
stc
add
nop
jmp
add
arpl
mov
stc
nop
jb
adc
nop
cld
nop
jmp
add
xchg
out
jp
mov
stc
nop
jb
aaa
pop
shl
stc
nop
jb
or
cmpl
nop
cld
nop
jmp
cmc
jg
aas
sbb
pop
add
nop
cld
nop
jmp
and
add
add
mov
stc
nop
jb
add
mov
stc
nop
jb
add
in
add
push
mov
xchg
ret
loop
loop
mov
stc
nop
jb
sub
add
data16
push
push
add
jmp
add
ret
sub
jb
add
add
add
nop
jb
add
push
fisubrl
popl
jb
add
or
mov
je
add
nop
jb
add
add
add
jecxz
leave
push
push
mov
xchg
ret
and
popa
add
nop
jb
sub
add
add
adc
je
stc
nop
jb
push
or
lret
stc
nop
jb
push
add
push
stc
nop
jb
mov
xchg
stc
nop
jb
sub
add
mov
das
sbb
add
nop
jb
add
add
imul
stc
nop
jb
add
add
test
or
rclb
mov
inc
add
add
push
mov
xchg
ret
add
add
nop
jb
push
mov
sub
jp
nop
cld
nop
jmp
xchg
add
stc
add
push
mov
nop
jb
and
cmc
popa
enter
stc
nop
jb
sub
dec
add
call
stc
nop
jb
lret
fucompp
rorb
add
pop
add
popl
adc
mov
stc
nop
jb
add
sbb
fldl
jmp
xchg
sub
add
out
aam
outsl
mov
stc
nop
jb
and
add
mov
add
stc
nop
jb
add
add
imul
jmp
or
add
incb
mov
stc
nop
jb
add
mov
sahf
mov
stc
nop
jb
jg
push
pusha
stc
nop
jb
add
out
ret
lea
nop
cld
nop
jmp
test
add
dec
sahf
push
stc
nop
jb
fwait
dec
add
inc
and
nop
jb
popa
sub
add
jne
cmp
test
add
stc
nop
jb
outsb
stc
sbb
mov
jb
add
add
jmp
in
loope
add
push
mov
stc
nop
jb
add
add
ja
add
enter
mov
xchg
ret
jae
add
aas
nop
cld
nop
jmp
sub
scas
mov
inc
inc
add
nop
jb
sub
ret
add
rep
stc
nop
jb
mov
loop
and
stc
nop
jb
add
add
in
pop
stc
nop
jb
add
add
and
std
push
nop
cld
nop
jmp
add
mov
and
testl
nop
cld
nop
jmp
add
add
add
nop
jb
and
add
or
nop
jb
loop
sub
add
popa
test
cld
nop
jmp
ret
add
ret
add
xor
push
mov
xchg
ret
xchg
add
xchg
stc
nop
jb
stc
imul
test
fiadds
xchg
ret
add
popl
cmp
movb
nop
jb
xchg
and
popa
fmuls
test
nop
jb
ret
stc
jo
add
push
mov
xchg
ret
lods
add
jne
rol
inc
jbe
push
adc
mov
stc
nop
jb
adcb
bound
lds
lock
stc
nop
jb
mov
scas
in
mov
stc
nop
jb
aaa
aas
add
stc
adc
inc
add
add
jbe
test
fmull
cmp
add
inc
xlat
add
xchg
cs
push
mov
xchg
ret
add
mov
stos
add
stc
nop
jb
arpl
sub
sub
mov
stc
nop
jb
add
mov
mov
stc
nop
jb
arpl
add
inc
add
mov
jmp
add
add
add
add
stc
nop
jb
add
add
mov
xor
stc
nop
jb
ja
add
add
add
push
stc
nop
jb
aas
add
incb
add
pop
nop
cld
nop
jmp
add
sub
sbb
cld
nop
jmp
add
add
add
or
jmp
inc
add
scas
test
jg
pop
and
nop
jb
jbe
add
add
roll
pop
ret
stc
nop
jb
sub
add
add
mov
mov
push
mov
xchg
ret
mov
add
xor
stc
nop
jb
add
ret
scas
pop
nop
cld
nop
jmp
sub
sbb
sub
mov
dec
stc
nop
jb
mov
add
cmpb
nop
cld
nop
jmp
data16
sbb
aaa
scas
add
stc
nop
jb
aas
inc
xchg
arpl
jl
and
aad
inc
add
add
mov
push
stc
nop
jb
add
ret
arpl
aad
pop
jne
stc
nop
jb
imul
and
nop
jb
addb
ret
and
mov
nop
cld
nop
jmp
xchg
cltd
push
stc
nop
jb
lods
add
jge
jne
push
mov
xchg
ret
ret
xchg
add
xchg
out
mov
stc
nop
jb
jbe,pt
popa
lahf
ss
ja
xchg
mov
loopne
inc
add
add
cmp
cld
nop
jmp
jbe
add
aas
popa
dec
push
stc
nop
jb
add
push
xlat
add
mov
push
mov
xchg
ret
add
add
push
sbb
stc
nop
jb
add
add
ja
push
stc
nop
jb
add
out
dec
aad
sub
stc
nop
jb
add
add
lret
add
stc
nop
jb
dec
add
inc
add
add
stc
nop
jb
add
add
stc
nop
jb
add
sub
pop
add
push
mov
xchg
ret
add
sbbb
inc
add
ret
add
aas
incl
sar
nop
jb
xlat
scas
sub
add
loopne
adc
add
mov
xchg
ret
mov
popl
jb
push
push
mov
xchg
ret
mov
arpl
mov
xchg
ret
add
jg
jmp
nop
cld
nop
jmp
add
add
jle
clc
nop
cld
nop
jmp
add
arpl
pop
add
nop
cld
nop
jmp
or
sbb
aas
in
je
stc
nop
jb
and
nop
jb
add
add
mov
repz
pop
stc
nop
jb
imul
mov
xchg
ret
add
add
add
push
stc
nop
jb
add
add
add
push
push
mov
xchg
ret
shll
add
cmp
nop
cld
nop
jmp
mov
add
loop
loopne
outsb
lea
push
mov
xchg
ret
add
stc
cmp
test
jb
add
fimull
nop
jmp
add
or
add
xor
stc
nop
jb
popl
dec
inc
add
test
nop
jb
sub
shrd
jb
jg
xchg
add
in
je
stc
nop
jb
add
push
mov
xchg
ret
push
ds
sub
jmp
andb
add
roll
add
andb
add
add
add
add
in
inc
add
aad
push
movsl
lds
test
nop
cld
nop
jmp
add
aas
add
add
test
nop
cld
nop
jmp
add
and
jb
lods
aas
ret
add
loop
mov
push
mov
xchg
ret
aas
sub
outsl
push
push
mov
xchg
ret
fcmove
add
in
add
add
pop
push
or
js
add
mov
stc
nop
jb
jg
push
stc
nop
jb
add
add
add
rorl
jmp
add
jae
mov
stc
nop
jb
imul
mov
stc
nop
jb
inc
xchg
add
add
jl
stc
nop
jb
ds
add
nop
jb
fwait
dec
add
add
add
stc
nop
jb
stc
add
mov
mov
stc
nop
jb
add
add
loop
push
jmp
adc
incl
fwait
test
add
push
mov
xchg
ret
add
je
add
stc
nop
jb
arpl
and
movswl
stc
nop
jb
add
push
mov
xchg
ret
add
push
add
neg
add
mov
aad
xor
push
imul
sbb
cmp
nop
jb
arpl
add
push
ret
pushf
test
push
mov
xchg
ret
jbe
add
mov
nop
jmp
add
xchg
add
add
test
add
stc
nop
jb
aaa
sub
dec
push
mov
xchg
ret
jbe
inc
add
das
ret
stc
nop
jb
sbb
jo
arpl
mov
stc
nop
jb
arpl
ds
xchg
push
mov
xchg
ret
jg
ficompl
mov
nop
cld
nop
jmp
mov
sbb
mov
push
mov
xchg
ret
ret
add
jb
add
add
cld
nop
jmp
add
sub
call
stc
nop
jb
add
add
jmp
stc
nop
jb
add
add
add
nop
cld
nop
jmp
incb
fimuls
jb
xlat
add
out
mov
stc
nop
jb
fiaddl
add
cmc
mov
add
stc
nop
jb
mov
mov
stc
nop
jb
and
push
add
nop
jb
add
xchg
fiaddl
movb
add
stc
nop
jb
add
add
or
insl
stc
inc
add
sub
stc
nop
jb
sub
add
ds
mov
stc
nop
jb
add
add
ds
nop
cld
nop
jmp
lahf
add
cwtl
mov
nop
cld
nop
jmp
or
lock
mov
xchg
ret
and
arpl
xchg
icebp
stc
nop
jb
add
add
loopne
stc
nop
jb
add
sub
add
imul
nop
cld
nop
jmp
add
xor
sub
js
inc
add
add
popa
stc
nop
jb
mov
add
inc
testl
add
sbb
sub
or
incl
add
add
add
insl
add
nop
cld
nop
jmp
xchg
jbe
add
add
insb
inc
stc
nop
jb
add
leave
mov
stc
nop
jb
add
scas
add
rol
add
ljmp
and
incl
add
add
dec
pop
stc
nop
jb
sub
add
add
insb
and
stc
nop
jb
outsb
add
sub
sahf
ja
stc
nop
jb
cmc
mov
jp
movsb
push
mov
xchg
ret
add
add
in
add
outsl
add
add
adc
inc
outsl
push
nop
cld
nop
jmp
fwait
add
jg
arpl
test
mov
stc
nop
jb
xchg
fisubl
xchg
and
nop
jb
outsb
mov
add
movl
add
add
pop
mov
nop
cld
nop
jmp
add
nop
cld
nop
jmp
mov
incb
ret
lret
outsb
add
stc
nop
jb
add
jg
sbb
xchg
nop
cld
nop
jmp
add
xchg
add
popl
mov
push
mov
insb
dec
add
ds
add
movb
or
jb
popa
add
add
fwait
inc
js
or
stc
nop
jb
add
add
enter
jb
xlat
sub
add
loop
jo
pop
mov
stc
nop
jb
add
sub
add
call
stc
nop
jb
add
popa
ret
add
cmp
cld
nop
jmp
mov
aas
add
jp
add
or
add
add
add
movzwl
stc
nop
jb
data16
pop
push
mov
xchg
ret
jo
and
shll
jns
add
nop
jb
scas
ja
call
nop
jb
add
add
popf
dec
stc
nop
jb
add
add
scas
add
cmpl
sbb
inc
push
xor
mov
stc
nop
jb
test
add
aas
push
add
mov
xchg
ret
xchg
add
cmc
add
or
push
mov
xchg
ret
add
add
push
mov
xchg
ret
or
roll
xlat
sub
nop
jmp
ret
lret
jne
add
stc
nop
jb
add
cli
push
nop
cld
nop
jmp
xchg
popl
lods
add
add
add
nop
cld
nop
jmp
add
inc
or
test
nop
jb
add
je
nop
cld
nop
jmp
outsb
or
cmpsl
push
add
shl
stc
nop
jb
fidivrl
add
pop
mov
stc
nop
jb
add
mov
cld
nop
jmp
scas
add
lods
fwait
aas
aas
fimuls
testb
cmp
ret
fidivl
ljmp
jmp
add
add
push
mov
xchg
ret
add
add
arpl
push
stc
nop
jb
add
xlat
push
add
leave
mov
stc
nop
jb
sub
xlat
outsb
and
pop
nop
cld
nop
jmp
add
loopne
xor
add
push
mov
xchg
ret
xchg
add
push
mov
xchg
ret
add
add
and
nop
cld
nop
jmp
add
ret
ret
add
outsl
nop
cld
nop
jmp
add
mov
call
nop
cld
nop
jmp
popl
dec
pop
push
mov
in
xchg
add
out
or
add
add
add
nop
jb
add
add
jl
nop
cld
nop
jmp
add
add
ds
pop
stos
cmp
nop
cld
nop
jmp
add
ds
push
mov
xchg
ret
roll
add
add
jp
push
mov
xchg
ret
jo
xchg
add
scas
mov
stc
nop
jb
or
arpl
mov
dec
in
and
inc
xchg
loope
adcb
lahf
rep
stc
nop
jb
popl
add
aaa
ret
daa
or
fdivrp
nop
jb
inc
xchg
add
ds
sbb
jb
push
cmc
fiaddl
stc
arpl
push
stc
nop
jb
sub
add
add
add
mov
xchg
ret
add
arpl
pop
add
stc
nop
jb
add
mov
pop
or
nop
jb
add
lret
or
jb
mov
add
addb
subl
add
add
pop
call
stc
nop
jb
popl
jo
push
push
stc
nop
jb
add
aas
jo
shr
nop
cld
nop
jmp
add
data16
jne
stc
nop
jb
add
lock
mov
loop
add
fiaddl
add
outsw
push
stc
nop
jb
xchg
add
ret
xchg
outsb
mov
xorb
aas
sub
fiaddl
jp
test
stc
nop
jb
add
aaa
addb
dec
push
stc
nop
jb
or
sub
sub
iret
jb
stc
nop
jb
mov
sbb
addr16
add
add
add
jae
push
push
mov
xchg
ret
stc
jg
add
add
push
mov
xchg
ret
test
pop
mov
stc
nop
jb
sub
arpl
add
cld
nop
jmp
imul
xor
push
mov
xchg
ret
add
xchg
addr16
add
pop
jmp
jb
arpl
add
sub
push
add
stc
nop
jb
and
add
outsb
mov
stc
nop
jb
xlat
stc
add
fimuls
jb
push
roll
add
mov
add
nop
cld
nop
jmp
add
or
orb
add
push
add
xchg
iret
mov
push
mov
xchg
ret
add
jae
enter
mov
xchg
ret
add
lahf
add
nop
jmp
add
popl
add
stc
nop
jb
add
aas
mov
imul
add
add
add
add
add
xchg
mov
mov
xchg
ret
cmc
add
mov
insb
je
stc
nop
jb
mov
or
stc
nop
jb
fs
nop
cld
nop
jmp
add
fwait
imul
add
movzwl
stc
nop
jb
scas
add
stos
pushl
push
mov
xchg
ret
fcmovbe
sarl
mov
stc
nop
jb
add
add
sbb
add
stc
in
inc
add
or
lret
add
pop
flds
xchg
ret
add
add
cld
and
nop
cld
nop
jmp
add
add
and
nop
cld
nop
jmp
mov
add
cmp
xor
inc
add
aas
xchg
pop
mov
stc
nop
jb
stc
xchg
or
stc
repz
rclb
cli
inc
add
sub
and
nop
jb
xlat
xchg
add
mov
shl
add
add
lods
mov
cmpl
nop
cld
nop
jmp
or
ljmp
adc
inc
dec
and
cmc
jo
rep
stc
nop
jb
add
add
xlat
add
roll
xchg
ret
add
jbe
daa
push
push
push
add
stc
nop
jb
add
lret
xlat
shrl
jl
xor
or
inc
add
xlat
adc
stc
inc
add
add
lret
xchg
or
sub
call
or
and
ljmp
sti
incl
sub
sbb
les
cld
nop
jmp
add
add
stc
nop
jb
scas
add
jae
repz
testb
cmp
ret
add
mov
add
add
add
add
add
sub
mov
xchg
ret
outsb
popl
stc
add
pusha
push
mov
xchg
ret
add
push
nop
cld
nop
jmp
lahf
add
add
loopne
add
outsl
push
stc
nop
jb
sub
stc
add
push
sub
xor
mov
add
mov
ja
mov
nop
cld
nop
jmp
sub
sub
outsb
decl
stc
nop
jb
add
add
aaa
add
mov
je
stc
mov
stc
nop
jb
add
mov
inc
add
test
sub
popa
add
mov
xchg
ret
aas
mov
push
mov
xchg
ret
add
add
call
nop
jmp
imul
mov
clc
inc
add
add
add
add
nop
jb
add
ds
nop
jmp
add
add
add
push
push
mov
xchg
ret
add
sub
sub
push
mov
xchg
ret
add
rcll
pop
mov
stc
nop
jb
add
stc
add
push
sbb
jmp
stc
cmc
add
pop
nop
cld
nop
jmp
sub
add
add
daa
mov
sar
nop
jb
add
lahf
sub
scas
mov
stc
nop
jb
cmc
add
sti
stc
nop
jb
add
add
movzwl
stc
nop
jb
mov
adc
mov
cld
nop
jmp
and
cmp
add
ja
push
nop
cld
nop
jmp
aaa
add
pop
nop
cld
nop
jmp
popl
mov
stc
add
or
nop
jb
lret
sub
stc
nop
jb
add
mov
test
nop
jb
sub
fbstp
add
push
mov
xchg
ret
add
add
sahf
add
nop
cld
nop
jmp
sub
jg
lret
les
nop
cld
nop
jmp
xchg
shll
adc
insb
add
nop
jb
or
sub
add
nop
cld
nop
jmp
add
cmc
outsb
mov
js
nop
jb
add
test
call
stc
nop
jb
xchg
add
and
nop
cld
nop
jmp
cmc
and
add
add
add
add
incl
or
mov
adc
stc
nop
jb
add
add
pushf
mov
stc
nop
jb
push
add
add
stc
nop
jb
xchg
mov
enter
jb
ret
add
ret
add
mov
inc
add
add
add
rcrl
push
loopne
nop
jb
lahf
and
loop
ljmp
out
pushl
add
add
loop
xor
push
mov
xchg
ret
xlat
xchg
add
les
nop
cld
nop
jmp
add
sbb
sbb
jb
sub
add
add
aas
call
stc
nop
jb
inc
xchg
add
nop
jb
add
test
add
add
mov
add
nop
jb
add
add
push
pop
mov
nop
cld
nop
jmp
sbb
ja
add
pusha
add
je
stc
nop
jb
jo
adc
mov
stc
nop
jb
add
add
int
inc
and
stc
nop
jb
add
add
div
nop
cld
nop
jmp
add
add
sub
sub
test
jmp
stc
nop
jb
add
into
pusha
push
mov
xchg
ret
add
xchg
add
mov
xchg
ret
out
add
jne
stc
nop
jb
add
jb
lea
nop
cld
nop
jmp
ret
add
mov
mov
nop
jb
sub
add
xor
pop
stc
nop
jb
mov
push
sbb
sub
pop
push
push
mov
xchg
ret
scas
jbe
add
cmp
mov
xchg
ret
add
ret
jae
push
add
mov
push
mov
xchg
ret
push
outsb
scas
loop
xor
push
mov
xchg
ret
stc
add
mov
mov
mov
push
mov
xchg
ret
arpl
imul
mov
incl
xlat
sbb
icebp
cmc
inc
add
add
addr16
or
test
icebp
stc
nop
jb
ror
mov
nop
cld
nop
jmp
aas
fiaddl
jae
push
test
iret
or
inc
add
mov
outsl
mov
nop
cld
nop
jmp
sub
outsb
and
or
nop
jb
out
jae
inc
addb
test
push
push
push
mov
xchg
ret
dec
add
add
nop
jb
loop
jo
cmc
sub
add
push
mov
xchg
ret
inc
mov
jbe
stc
nop
jb
jo
jo
mov
nop
cld
nop
jmp
mov
call
in
stc
imul
sbb
add
outsl
xchg
test
fistpll
stc
nop
jb
or
xor
sub
in
jmp
shrl
add
pop
push
mov
add
nop
cld
nop
jmp
sbb
or
sar
nop
jb
ja
add
add
rorb
mov
nop
cld
nop
jmp
add
stos
nop
cld
nop
jmp
add
add
fiaddl
mov
mov
stc
nop
jb
out
dec
nop
cld
nop
jmp
dec
add
add
fisubl
mov
push
mov
xchg
ret
sub
add
ret
add
stc
nop
jb
add
add
sbb
add
movzwl
stc
nop
jb
add
popa
addb
call
stc
nop
jb
dec
popl
call
inc
stc
nop
jb
shll
cmpsb
push
stc
nop
jb
fwait
add
add
add
mov
inc
add
sub
lods
xchg
dec
add
stc
nop
jb
add
push
stc
out
adc
pop
mov
stc
nop
jb
ret
aad
or
add
stc
nop
jb
ret
stc
add
add
incl
nop
cld
nop
jmp
add
add
push
stc
nop
jb
add
add
mov
clc
stc
nop
jb
add
mov
outsb
or
add
xorb
incl
add
push
add
push
add
sub
stc
nop
jb
addb
fwait
add
stc
nop
jb
add
add
or
add
nop
cld
nop
jmp
add
xchg
mov
add
nop
cld
nop
jmp
jae
add
xlat
das
mov
stc
nop
jb
mov
std
add
push
mov
xchg
ret
dec
add
dec
mov
nop
cld
nop
jmp
and
add
sub
mov
jns
jns
add
ljmp
dec
push
push
mov
xchg
ret
lahf
add
arpl
call
stc
nop
jb
add
mov
in
sub
clc
in
call
add
add
jg
pop
mov
sti
lea
nop
cld
nop
jmp
jg
fiaddl
push
sub
fcoms
stc
incl
xlat
movsl
cmp
loop
stc
nop
jb
add
add
xchg
cwtl
sub
stc
nop
jb
add
ret
and
cli
stc
nop
jb
sub
add
add
outsl
cmpw
stc
nop
jb
add
aas
push
stc
nop
jb
mov
add
add
pop
push
stc
nop
jb
aas
and
loop
add
jl
jmp
subb
add
shl
add
test
push
mov
xchg
ret
add
pusha
stc
nop
jb
add
add
jae
imul
shr
lcall
add
push
add
stc
nop
jb
add
out
pop
add
nop
cld
nop
jmp
add
jo
rorl
push
mov
xchg
ret
inc
dec
mov
mov
add
pop
push
xchg
movsl
scas
add
add
popa
in
inc
add
add
dec
xor
jne
scas
mov
stc
nop
jb
add
add
cmpb
add
or
stc
nop
jb
cmc
mov
push
nop
cld
nop
jmp
lahf
add
add
lahf
mov
mov
nop
cld
nop
jmp
jo
cmc
dec
stos
stc
nop
jb
or
xchg
aaa
mov
jg
mov
addb
add
or
fdivrp
pushl
push
mov
nop
cld
nop
jmp
sub
nop
jb
add
add
add
ret
sub
nop
jb
add
aas
add
not
fidivl
rclb
in
incl
arpl
xchg
sub
mov
xchg
ret
add
test
jmp
jb
add
adc
sbb
fcmovu
stc
nop
jb
push
popa
xchg
inc
add
addb
ljmp
add
push
add
add
jb
add
push
add
data16
pop
add
stc
nop
jb
add
fisubrl
rcll
fildl
xchg
ret
add
add
and
iret
jne
nop
cld
nop
jmp
add
lock
add
add
mov
aad
jne
stc
nop
jb
push
xlat
js
outsl
arpl
add
nop
jb
add
sahf
xor
stc
nop
jb
add
lret
into
add
nop
cld
nop
jmp
push
add
add
add
test
call
jb
out
dec
xchg
nop
cld
nop
jmp
add
jo
and
mov
add
push
or
leave
pop
inc
mov
in
mov
add
inc
push
icebp
scas
push
stc
nop
jb
add
or
popl
stc
nop
jb
sub
and
outsb
cmpsl
or
jg
stc
nop
jb
imul
mov
stc
nop
jb
add
mov
add
nop
jb
add
ds
sub
stc
nop
jb
add
aas
add
add
cmpl
nop
cld
nop
jmp
push
add
mov
es
nop
cld
nop
jmp
lock
push
mov
xchg
ret
add
add
stc
mov
stc
nop
jb
scas
shl
push
or
nop
jb
add
add
add
into
pop
stc
nop
jb
add
add
sub
push
push
mov
xchg
ret
out
add
mov
insb
insb
stc
nop
jb
test
aad
stos
mov
stc
nop
jb
add
sub
into
pusha
stc
nop
jb
sub
add
mov
mov
xchg
ret
push
mov
jo
add
data16
mov
stc
nop
jb
add
lcall
orb
sbbb
add
cld
nop
jmp
add
sub
add
pop
push
mov
xchg
ret
add
add
sub
jmp
mov
add
sub
pusha
add
inc
stc
nop
jb
add
outsb
subb
nop
jb
popa
add
sub
add
pop
push
mov
xchg
ret
outsb
incb
sbb
add
nop
cld
nop
jmp
lahf
arpl
imul
adc
fdivrp
incl
stc
add
or
mov
xor
das
mov
stc
nop
jb
add
xlat
add
lods
pushl
push
mov
xchg
ret
add
add
sbb
nop
jb
fiaddl
add
jg
cmc
or
jb
add
popa
add
add
scas
test
nop
cld
nop
jmp
arpl
add
loop
movsl
xor
add
add
add
nop
jb
popa
outsb
sub
jmp
nop
cld
nop
jmp
jbe
add
and
ds
add
div
inc
add
add
add
add
nop
jmp
add
loop
mov
add
nop
cld
nop
jmp
add
rcll
and
push
mov
xchg
ret
out
mov
icebp
inc
add
add
lcallw
nop
jb
fwait
mov
ret
fiaddl
add
add
pop
mov
stc
nop
jb
aas
jae
xchg
sbb
nop
jb
stc
or
add
push
add
nop
jmp
add
push
aaa
add
push
js
nop
cld
nop
jmp
add
loop
mov
nop
jb
ret
jg
ret
lods
xchg
in
mov
mov
push
lds
add
dec
push
and
test
and
roll
cli
add
add
xlat
sti
and
fisubl
cld
lock
pushf
out
xchg
and
out
dec
daa
xor
ficompl
jbe
js
mov
imul
mov
or
aam
cmp
je
gs
add
in
push
test
sahf
sub
inc
add
add
add
add
sti
push
dec
lods
pop
daa
jmp
push
filds
xor
repz
inc
dec
xor
and
inc
add
mov
mov
cmc
data16
adcl
mov
and
mov
outsl
notl
hlt
addl
push
ss
inc
add
dec
loop
or
inc
add
inc
add
inc
lock
stos
sbb
and
jne
aam
dec
addb
mov
mov
dec
mov
mov
adc
add
mov
lds
pop
sbb
add
addb
jne
fidivs
jp
lea
call
or
push
flds
add
xor
incb
add
ret
push
mov
xchg
lods
pop
lret
push
lods
xchg
jle
mov
mov
push
sub
cltd
sub
stos
mov
rolb
mov
sub
pusha
add
sbb
fs
xchg
mov
adc
mov
add
lret
outsb
fcmovb
leave
arpl
mov
push
adc
mov
int3
cmpsl
icebp
test
cmpsb
mov
stc
jecxz
fstl
mov
sbb
fucom
stc
shrl
mov
cmp
push
mov
sub
cmp
loop
repz
mov
test
inc
add
add
or
inc
sub
sti
fdivl
inc
push
inc
sbb
mov
xor
push
or
xchg
add
jb
jmp
popa
test
in
lret
int3
dec
and
lods
xchg
mov
mov
popf
call
loop
xor
cmp
cmpl
add
mov
testl
push
lea
dec
inc
pop
mov
xchg
push
add
sub
add
jmp
lods
pop
adc
mov
add
fists
lret
out
jns
in
sub
outsb
dec
mov
add
lret
addb
mov
cmp
push
add
cwtl
jmp
sub
stos
xchg
mov
adc
out
ret
inc
mov
sub
cltd
xchg
out
inc
add
xor
push
cld
decl
addl
outsl
repz
mov
outsb
iret
dec
hlt
movsb
negl
idivl
lods
lods
mov
ret
and
sbb
int3
in
sub
xchg
iret
cmpsb
das
push
fbstp
ljmp
or
and
or
or
lods
int
xchg
pop
ret
pop
push
xlat
xchg
lret
je
ja
add
xor
inc
add
ret
lods
in
push
sub
ret
jmp
mov
test
jp
in
add
sbb
add
sbb
fstps
les
or
add
fdivrs
sar
pop
push
add
fs
mov
loope
add
xchg
mov
cmpsb
push
push
push
mov
add
negl
jnp
mov
out
daa
mull
mov
cmp
pop
jnp
mov
push
add
enter
mov
enter
add
jle
push
or
shrb
push
stos
push
int
pushl
adc
xchg
xchg
ret
jecxz
dec
mov
out
out
mov
sbb
add
cmp
push
pop
xchg
and
push
inc
add
loopne
rorb
sub
add
jmp
and
xchg
les
gs
add
add
add
sub
add
inc
sub
frstor
addb
xchg
insl
pop
push
addl
addl
in
lods
scas
fwait
lock
or
and
lock
imul
push
les
out
ss
repnz
adc
pop
rorl
ss
cmpsl
stos
push
out
mov
jno
cmp
add
xchg
movb
iret
mov
fistps
jnp
jle
fwait
rolb
xchg
imul
push
scas
js
aad
add
jp
shll
jp
add
in
jnp
test
lds
movsl
mov
cli
addb
mov
mov
sbb
cli
xchg
jno
sbb
movsb
loop
fstl
rcrl
fucomip
inc
sahf
neg
stos
sub
push
push
movb
mov
xorl
add
mov
aas
rcrb
je
pushf
fisubrs
pushf
jne
dec
and
dec
push
inc
cmp
add
mov
push
jbe
add
and
je
jbe
imul
xor
fsubr
xchg
out
in
sbb
or
adc
loop
dec
xchg
ret
cmp
aad
push
test
inc
add
push
fs
xchg
dec
dec
inc
rcr
inc
add
mov
add
cmp
and
pop
cs
inc
add
inc
add
loope
pop
mov
mov
imul
repnz
into
sahf
xchg
add
shl
insb
lods
jecxz
sbb
inc
or
xchg
jecxz
and
lcall
out
cmp
and
mov
xlat
sbb
outsb
in
mov
fwait
xchg
fucom
sbb
adc
add
xor
je
xor
jge
push
mov
pop
push
fists
mov
imull
dec
jne
mov
lds
add
cmp
bound
cmpsb
out
pop
andl
inc
add
cmp
add
hlt
out
push
add
outsb
push
bound
data16
fildll
xchg
inc
add
xchg
aas
pop
inc
add
add
cld
mov
add
add
mov
add
dec
stc
dec
in
add
imul
jb,pn
jae
add
mov
cli
mov
pop
and
add
cmp
or
lods
leave
dec
lds
add
mov
mov
or
lock
lods
xor
mov
push
mov
xchg
cs
loop
inc
stos
stc
es
inc
les
scas
loope
xchg
jbe
sub
dec
aad
jmp
pop
pusha
add
bound
into
andnps
cs
rcll
mov
aaa
sub
neg
xor
xchg
mov
pop
inc
out
push
idivb
pusha
add
sahf
divl
ficoml
add
mov
add
mov
test
lods
outsb
into
cmpsb
pop
icebp
xchg
pusha
add
shll
sbb
fistpl
nop
sub
dec
push
add
add
int
pop
orl
add
insl
cwtl
ds
shl
dec
push
ret
addb
ret
mov
add
outsb
subl
add
outsb
pushf
daa
aad
push
rcrl
add
bound
cmp
add
sbb
jmp
jmp
push
repz
add
add
or
push
jo
push
pop
pop
xor
in
movsl
jno
jae
or
stos
addr16
scas
adc
xchg
dec
or
adc
add
movsl
fistps
in
xchg
loopne
mov
mov
or
adcl
mov
push
stos
inc
add
and
xorl
imul
push
iret
adc
sbb
into
mov
add
add
inc
add
repnz
mov
testb
mov
and
cli
mov
sbb
mov
cmp
adc
push
add
or
popf
xor
into
mov
lcall
push
pop
sahf
sub
add
in
sbbl
pop
cmp
jle
fcomip
imul
add
jmp
add
adc
popf
das
xor
add
out
jns
and
sbb
fisubrl
inc
add
cmp
sti
cmpl
pop
xchg
mov
add
jmp
fyl2xp1
fnstcw
out
cltd
insl
mov
add
daa
repnz
rorl
add
out
lret
lock
inc
add
out
mov
mov
or
or
cmc
movsb
ja
add
imulb
lahf
lcall
cwtl
and
cwtl
addb
ljmp
mov
dec
sbb
add
add
lds
xchg
lods
inc
in
push
movsl
add
jl
in
or
add
xchg
dec
and
icebp
sub
addb
fsubp
addb
cmp
mov
scas
dec
rcll
mov
fdivr
paddusb
xchg
push
and
lahf
addb
mov
jle
sarb
dec
aas
in
aam
test
mov
or
sbb
jnp
xor
fnstenv
mov
cmpsb
mov
dec
rcrb
stos
in
inc
add
pop
mov
mov
cmp
add
mov
iret
fidivrs
or
testb
xor
fnstcw
jl
lcall
inc
movsl
push
pop
mov
lods
mov
add
jbe
or
add
pop
cmp
es
movsl
cld
les
sub
ret
pop
and
jnp
fs
iret
pop
frstor
push
movb
adc
cmp
popa
or
push
and
cmp
jmp
ret
mov
mov
mov
xchg
dec
jl
fsts
xlat
sti
inc
push
orl
lea
mov
or
aaa
push
int3
rclb
test
movb
ret
insl
pop
cmp
dec
sbb
xor
mov
addb
enter
push
push
push
or
shlb
adc
inc
out
add
or
xchg
lahf
xchg
out
outsb
jp
icebp
xor
dec
fbld
loopne
jnp
xchg
fcmove
rorl
push
out
sub
addb
add
fildll
mov
xchg
mov
aas
push
xchg
repnz
pop
mov
jae
addr16
add
in
or
cld
dec
loop
add
pop
bound
lret
stos
xor
xchg
cld
fildll
sub
data16
or
add
fstps
push
add
mov
lahf
cmpsl
stos
mov
sub
lahf
out
subl
sbb
add
adc
jmp
add
xchg
xchg
or
cmp
and
icebp
sub
or
lock
adc
inc
add
pushf
push
loop
movsl
inc
add
out
xchg
repnz
dec
lods
mov
add
add
push
cmpsl
addb
repz
sar
add
int3
sarb
mov
divb
sbb
cli
mov
add
pop
adc
add
push
add
sub
add
jecxz
mov
mov
dec
lds
ret
call
and
les
inc
xchg
out
dec
inc
add
lret
loope
add
in
jbe
sub
xchg
inc
add
or
nop
adc
or
bound
jae
fsubs
bound
xchg
test
cmp
inc
out
cwtl
jo
adc
mov
sbb
pop
in
sbb
test
add
adc
add
sbb
decb
cmpsl
sub
aam
test
sub
inc
add
addb
adc
pop
mov
add
push
pop
aaa
fld
add
in
lods
mov
iret
mov
jl
mov
cmc
add
into
jbe
addb
jle
mov
lcall
je
arpl
lods
out
push
mov
inc
addr16
cs
loop
pop
dec
jle
dec
push
stos
mov
cmp
xchg
addb
js
cmp
pop
test
push
mov
insl
aaa
jnp
add
xchg
bsr
jge
loope
popa
xor
pop
sti
jg
sub
rcrl
pop
pop
mov
mov
es
negl
movb
ret
mov
mov
mov
sub
jnp
add
repz
testb
jne
sti
mov
inc
add
sti
dec
addb
add
loopne
bound
and
inc
add
lods
push
pop
push
cld
fstl
and
addb
add
push
push
push
pop
xchg
stc
std
sti
stos
sbb
repz
orl
add
xchg
clc
dec
pop
dec
aad
jge
push
cmovg
mov
xchg
pop
lds
add
ficomps
or
xor
mov
inc
add
mov
cmp
mov
jle
jns
jl
xchg
ja
jae
arpl
cmc
ret
xchg
scas
stc
xchg
inc
cmpsl
mov
jo
jns
inc
add
addr16
popa
hlt
mov
jnp
dec
clc
adc
ss
pop
dec
out
fs
es
movsb
gs
push
ds
xor
or
addb
add
loope
dec
sub
xor
lods
push
adc
lds
xchg
dec
test
movsb
bound
xchg
mov
add
sub
scas
add
int
jge
lea
dec
loope
bound
movb
rcrl
repz
stc
popa
xchg
pop
ljmp
dec
cmpsl
sbb
incb
jb
pop
je
pop
jmp
inc
add
out
pushf
in
jbe
xor
add
cltd
stos
ret
pop
and
mov
add
in
scas
outsl
in
jge
jle
sar
insb
pop
cmp
imul
or
jbe
pop
idivl
mov
enter
cmp
sarl
pop
and
inc
add
mov
xchg
xchg
xor
pusha
add
jne
int3
xchg
xor
insb
sahf
push
mov
sbb
jg
inc
add
add
inc
negb
outsl
mov
test
mov
mov
add
or
xchg
rolb
out
and
mov
add
add
jno
cmpsl
addb
push
shlb
cld
jp
add
cltd
mov
add
bound
xor
jmp
and
adc
sub
cs
sub
in
lahf
int3
mov
ror
call
lcall
cld
mov
out
and
loop
aas
pop
dec
mov
call
or
cmp
and
les
pop
jne
inc
add
fucomp
jl
aaa
movsb
and
cld
addr16
jmp
sti
leave
loopne
pop
icebp
pop
xchg
lods
rcr
fimull
push
mov
mul
cmpl
adc
fadds
ret
mov
add
pop
pop
outsb
jl
les
mov
movsl
hlt
loopne
shl
dec
das
sbb
add
dec
lret
sub
scas
out
pop
into
leave
fidivl
push
xor
cwtl
out
lahf
test
rcll
ljmp
mov
add
stos
repnz
out
xor
sub
push
push
sub
jno
lods
push
inc
leavew
mov
outsl
movsl
or
mov
out
add
ja
xchg
push
add
nop
jp
cmp
sub
in
pop
adc
mov
ljmp
and
rolb
ljmp
scas
call
pop
fildll
sub
lahf
fs
lcall
pushf
or
xchg
mov
div
iret
icebp
movsl
mov
push
data16
addb
mov
insb
stos
fnstenv
add
outsb
mov
add
ret
add
lcall
jg
dec
pop
push
inc
add
adc
jnp
scas
std
dec
jae
mov
xchg
mov
add
scas
sbb
cmp
or
movsl
push
fwait
mov
add
mov
std
jmp
int3
testl
inc
add
pop
push
lahf
push
jmp
inc
add
cmp
jmp
push
jae
pop
js
movb
mov
les
push
int3
sti
cmc
cmp
pop
jp
mov
scas
pop
dec
adc
testl
jp
in
iret
imul
pop
fisubs
pop
adc
mov
pop
and
xchg
xchg
cmp
sbb
dec
jmp
inc
add
jno
xor
jno
xlat
dec
push
push
add
enter
adc
pop
bound
rorl
arpl
sbbl
mov
imull
mov
add
rolb
ljmp
mul
cmp
sub
imul
cmpsl
or
inc
add
popa
cmpsl
aad
add
cmp
sbb
fwait
xchg
stc
jle
lds
test
jle
and
movsb
push
cmp
mov
pop
bound
js
cli
sub
adc
popa
mov
dec
in
and
cwtl
add
into
add
xor
mov
ret
inc
add
add
sbb
pop
leave
adc
xchg
in
ret
mov
sbb
sbb
push
call
sbb
mov
je
pop
cld
push
sub
shrl
add
xchg
inc
add
add
cwtl
fsubr
mov
pop
lret
ljmp
xor
push
add
lea
add
in
shll
add
cwtl
pop
test
xchg
inc
pop
addb
add
xor
aaa
mov
mov
stos
mov
sarl
ja
and
add
mov
push
jle
cmc
sbb
dec
aas
sbb
push
pop
fwait
hlt
gs
cld
cmc
shll
mov
stos
int
pushl
or
ficoml
in
lods
push
std
aad
push
lods
jb
xor
push
pop
xor
sbb
iret
sahf
and
mov
int3
dec
push
into
rcll
bound
push
test
add
add
cmp
enter
scas
lahf
rcrl
jge
add
leave
adc
mov
add
mov
test
movb
outsl
cmp
add
test
shlb
gs
imul
add
in
and
andl
add
out
xchg
mov
jmp
inc
repz
fistpll
adc
inc
add
imul
clc
cmc
xchg
jge
loopne
sub
je
mov
sbbl
jbe
icebp
lret
lcall
xor
add
scas
pop
ja
sahf
aaa
shl
outsb
push
test
bound
adc
in
dec
jns
test
mov
movsb
push
jecxz
in
cwtl
sbb
ja
cmp
movsb
xchg
loopne
mov
addb
repz
dec
jbe
ljmp
fadd
add
je
add
lock
or
mov
loop
scas
sti
pop
movb
mov
imul
je
sub
add
movb
add
aam
adc
mov
sbb
sbb
pop
test
ret
ret
dec
mov
hlt
rcrl
mov
test
mov
add
add
dec
inc
add
cmp
mov
mov
adc
dec
test
jne
adc
shld
insb
aad
add
gs
push
js
pop
adc
add
les
push
aad
mov
pop
mov
xchg
cmp
push
mov
jecxz
fisttps
fs
rolb
or
add
pop
ds
ret
fsubr
adc
mov
mov
push
cli
jge
mov
mov
das
and
mov
ljmp
add
les
fmul
and
dec
filds
add
ja
push
cs
xlat
in
out
imul
pop
outsb
shld
add
push
repnz
cld
das
insb
mov
add
add
cwtl
addb
mov
pop
xchg
sbb
cs
mov
add
movsl
jecxz
xlat
xor
test
cmp
push
inc
add
subl
jecxz
add
adc
add
and
mov
xchg
movsl
out
gs
sub
lret
das
dec
leave
add
cltd
aas
out
aas
sub
imul
rcll
icebp
mov
add
aas
hlt
loop
cmp
push
jb
fnstcw
ret
int
xchg
shll
add
addr16
addl
ljmp
xor
push
mov
pop
cli
mov
daa
push
or
ss
cmp
lret
daa
mov
int
add
jg
cs
out
je
xchg
dec
or
mov
int
pop
adc
std
cld
fdivr
add
scas
ss
push
enter
sbb
dec
add
in
out
jno
mov
add
push
pop
loopne
jl
dec
stc
out
xchg
stc
es
hlt
lea
mov
cltd
and
je
rcl
dec
jne
mov
jecxz
sub
jecxz
add
lods
dec
add
mov
shrl
jp
in
adc
dec
add
mov
imul
les
pop
jge
jb
push
nop
jl
fcoml
add
pop
jecxz
insl
xchg
push
jb
add
gs
sbb
cmpsl
andl
push
imul
dec
pop
mov
push
xor
negb
iret
js
add
pop
clc
lea
push
addr16
jns
lret
or
jge
aam
sub
addr16
jo
add
cld
stc
in
push
out
cmp
mov
add
cmp
mov
fisubs
fcoms
sbb
rcrb
aaa
adc
add
pop
lock
inc
add
xor
push
xor
adc
call
lods
iret
dec
pop
or
sahf
sbb
push
xchg
mov
inc
jb
xor
add
repz
pop
inc
add
xor
xchg
setns
xchg
lods
cmp
add
xlat
popa
mov
inc
add
outsl
in
add
mov
mov
and
mov
mov
add
or
fbld
cmpsb
cmp
or
cmp
stos
loope
add
mov
shr
sub
adc
std
ljmp
sti
add
sbb
xchg
push
mov
adc
add
les
in
add
stc
hlt
add
aas
dec
movb
lea
shll
jbe
lds
jmp
aam
sti
sbb
pop
pop
aam
leave
xchg
loope
mov
add
inc
add
ljmp
repnz
and
pushf
pop
aas
xchg
lcall
cli
fucomi
or
pop
add
sub
push
xchg
pop
shrb
dec
test
pop
jns
pop
dec
mov
cmp
mov
in
xchg
and
push
clc
movsb
xchg
in
push
mov
in
addl
sar
out
xchg
aad
ss
outsl
mov
mov
mov
add
jo
jne
dec
out
leave
in
or
mov
mov
and
jb
xor
dec
pushf
dec
sbb
pushf
push
rcrl
aaa
fld1
je
imul
test
push
push
add
lea
out
adc
xchg
jmp
xor
or
mov
mov
cmp
lock
in
stos
fdivs
add
push
popf
fstps
in
ret
add
adc
mov
fidivrs
add
add
push
or
cli
sbb
mov
repnz
xchg
test
loopne
shr
test
std
adc
lock
push
into
sbb
sbb
jge
mov
xchg
insb
data16
loop
jmp
popf
std
cmp
test
mov
fucomip
into
jmp
dec
mov
jg
add
add
mov
push
scas
sub
push
jp
cld
mov
or
cmp
dec
lret
cs
fwait
add
addr16
sbb
jl
stc
sub
jle
addb
pop
int
std
sbbl
hlt
sbb
mov
mov
add
cld
je
in
add
pop
inc
add
aad
addb
pop
ljmp
mov
cmc
cmovge
and
test
cld
jbe
xchg
rcrl
mov
lock
xchg
push
pop
adc
movsb
aam
bound
out
test
das
pop
into
outsb
mov
bnd
fldenv
out
sti
mov
pusha
add
out
test
dec
nop
loopne
fcmovu
shll
dec
or
xchg
cmp
les
popf
jno
aam
fildll
cmp
add
pop
ds
and
sbb
add
xchg
push
push
cld
decb
xchg
jo
add
out
hlt
or
dec
pop
out
xchg
imul
ficomps
add
ljmp
out
fmuls
add
mov
xor
adc
dec
lods
mov
aaa
pusha
add
mov
fnstsw
jge
push
outsb
out
jnp
mov
adc
mov
ret
addb
jnp
add
fnstcw
cld
ret
ds
daa
popf
push
cs
scas
pop
cmc
xchg
in
jns
leave
cwtl
int3
pop
psubusw
aaa
push
mov
lahf
push
std
add
dec
addb
pop
nop
push
outsl
mov
and
xor
mov
js
addb
mov
xchg
jns
add
outsb
rclb
and
jle
and
std
jle
inc
add
lods
inc
es
lahf
loop
sbb
data16
or
out
fildll
data16
pop
push
insb
fwait
out
push
add
dec
and
stos
push
jle
add
das
popa
jno
mov
inc
fistpll
mov
cld
add
mov
pop
and
outsb
adc
fcmovnb
add
push
or
inc
add
test
sub
cmp
mov
xor
ror
out
negl
add
cltd
cmp
sbb
sbbl
jne
jns
add
in
and
sbb
mov
xor
add
mov
in
or
rclb
aas
adc
jbe
cmp
add
add
incl
addr16
xchg
sbb
sarb
decl
jmp
adcl
ja
cs
xor
ficomps
je
and
jl
add
popf
mov
sub
test
dec
shll
je
mov
jnp
push
inc
cltd
xor
add
out
inc
add
mov
gs
stos
cmp
sub
jno
dec
shll
add
loope
jmp
imul
or
ljmp
push
lret
test
fcom
mov
sub
mov
inc
add
je
pop
inc
fst
into
pop
mov
call
lret
out
aas
and
out
fidivrl
dec
mov
in
repnz
adc
add
dec
in
test
xchg
sbb
pop
popf
jecxz
push
mov
mov
add
insb
test
pop
sbb
sbb
xchg
pop
mov
add
or
add
mov
or
negb
ja
cmp
testl
rorl
lret
or
and
daa
es
add
in
rolb
dec
es
add
inc
test
xor
dec
pop
pop
idivl
jp
sbb
sbb
inc
pop
in
int3
dec
push
ret
daa
enter
push
hlt
sbb
cmpsb
addb
and
push
xchg
jecxz
out
add
pop
sub
add
jae
xor
pop
xchg
icebp
rcll
fisubs
arpl
jecxz
cmpsb
jecxz
mov
stos
pop
popf
fs
arpl
adc
sarl
pop
jmp
mov
cld
insl
sbb
mov
outsb
cmp
push
test
stos
rorb
pop
ficoml
push
hlt
fmuls
dec
cmc
inc
add
bound
sbb
lcall
add
fnsave
dec
pop
jl
je
cmp
fidivrs
mov
cs
add
lds
or
push
xor
inc
add
xlat
fldt
and
pop
adc
es
int
mov
and
adc
leave
inc
call
push
decb
sub
mov
lcall
pop
cli
xchg
cmc
jecxz
pmulhw
or
mov
add
ss
dec
add
into
out
add
leave
addb
iret
jle
mov
js
add
add
inc
lret
and
add
dec
decl
jp
push
stos
dec
into
sub
test
add
mov
clc
jp
outsb
cmp
stos
sbb
jl
inc
and
add
jle
lret
cmp
pop
lods
inc
scas
stc
inc
add
cmp
cmc
daa
dec
xchg
pop
pop
pop
ds
or
cmp
xor
int
loopne
jae
gs
adc
arpl
add
mov
push
fists
mov
test
insl
test
aam
scas
add
inc
nop
ja
sbb
add
cmpsb
fildll
jle
pop
cmc
push
addb
mov
pop
ffreep
add
jmp
std
mov
movsb
adc
push
popf
das
outsl
adc
std
pop
pop
test
inc
lret
aaa
jno
pop
pop
popa
jae
or
push
lods
push
test
jecxz
fwait
mov
push
cmp
mov
and
or
ret
pop
daa
sub
inc
add
popf
addb
jae
adc
push
leave
pop
out
push
push
cmp
xor
sbb
aam
sahf
jne
dec
imul
sub
cmp
push
cmpsb
cmc
xchg
inc
jno
daa
dec
movb
stos
es
sbb
mov
sub
mov
movb
sarb
addr16
add
add
push
add
sbb
imul
add
dec
inc
and
or
packssdw
fdivr
sub
sbb
je
dec
fwait
hlt
es
mov
aaa
xchg
iret
mov
mov
xor
push
add
cmpsl
push
enter
dec
insb
ret
repz
jg
adc
nop
bound
leave
jmp
add
pop
out
imul
inc
pop
add
dec
movsl
push
mov
add
stos
aam
add
fstp
shr
jl
rolb
push
xchg
add
add
inc
rolb
mov
loope
cmp
data16
xor
imul
mov
imul
imul
lods
mov
das
add
icebp
popf
add
adc
or
popf
shrb
jge
lea
pop
lds
jle
jno
xor
xor
pusha
add
push
push
rolb
xor
test
scas
out
faddl
fisubl
jnp
imul
outsl
xchg
in
in
je
outsl
mov
cs
cmpsb
add
lea
je
jmp
jbe
mov
sahf
lds
jmp
popa
call
fs
pop
and
sub
adc
add
mov
adc
sub
xchg
lahf
add
popa
cmp
or
add
xor
and
mov
cmp
mov
dec
movb
test
and
push
add
mov
cmp
lock
repnz
mov
and
fildl
clc
popa
inc
add
dec
xchg
or
sub
insl
les
sub
incb
cmc
inc
fidivl
cmc
or
lret
fwait
scas
pusha
add
test
fldl
cs
or
mov
shlb
lea
jns
add
sub
out
hlt
cwtl
fiaddl
pop
mov
ret
pop
xchg
inc
pop
adc
addb
jecxz
sub
daa
fwait
movsl
imul
std
or
add
sti
push
pop
cmpl
jl
dec
aam
loop
add
bound
ret
mov
jnp
fisttpll
pusha
add
push
mov
and
push
out
std
nop
sti
repnz
addr16
add
je
addb
mov
cmp
xor
pop
lret
lea
fildll
outsl
adc
ret
push
mov
jmp
test
lret
and
cltd
or
insl
jg
sub
sub
add
add
popf
stc
xchg
divl
fsts
add
mov
sub
les
inc
add
popf
push
popf
jns
cmpl
inc
add
xchg
rolb
sub
test
cmp
add
push
xor
sub
sub
add
clc
and
push
pop
jecxz
push
repz
pop
or
cmpsl
lds
push
je
addb
or
gs
add
dec
into
ja
xchg
mov
movb
iret
stc
or
xor
sbb
sub
fsub
sbb
jae
data16
add
xor
sti
sbb
addb
outsb
frstor
add
outsb
or
push
lcall
pop
push
jb
xchg
pop
jl
and
mov
sbb
dec
psubd
add
shl
cmp
inc
add
mov
xor
pop
mov
imul
add
mov
int3
ffree
fsubl
or
mov
inc
add
pop
add
xchg
scas
lcall
lahf
in
test
sub
add
fistpll
fcomps
xor
or
cmp
loop
lahf
jo
pushf
clc
add
fisubl
pop
xor
cmc
adc
out
inc
add
sahf
adc
adc
nop
stos
xchg
clc
xchg
cmpsb
call
add
fimull
incl
add
cld
jb
fsub
frstor
xchg
inc
add
mov
jge
add
test
add
add
mov
adc
push
pop
dec
clc
pop
in
pop
xlat
or
in
lea
mov
push
rcrl
sbb
fisubs
out
das
roll
add
adc
inc
ja
add
cmp
add
inc
add
aas
mov
data16
in
add
dec
call
aas
pop
push
leave
push
test
sub
dec
adcl
aaa
dec
inc
add
jle
push
dec
push
mov
xorl
loope
xor
fnstcw
into
xor
gs
test
add
pop
insb
sbb
add
add
jecxz
inc
add
inc
add
push
adc
fistpll
add
jae
nop
sub
pop
cmp
or
loop
loope
pop
inc
mov
jb
sti
dec
loope
hlt
icebp
imul
cmc
jg
dec
push
aam
cs
sbb
hlt
cli
cmp
leave
and
insl
sbb
adc
push
mov
push
and
jg
out
pushf
push
fisubs
and
jp
mov
nop
ret
push
icebp
jmp
add
out
mov
mov
jb
pop
aad
add
add
test
in
cmp
pusha
add
popf
cs
and
les
mov
jo
mov
xor
inc
add
adc
add
jae
sub
bound
pop
vpsubd
aad
jecxz
and
add
and
int3
lret
shrb
inc
mov
push
jae
add
in
test
add
inc
add
add
mov
rolb
scas
shl
imul
add
es
ljmp
add
das
mov
jge
xor
mov
inc
mov
inc
add
jno
cltd
jmp
pop
xor
lret
adc
mov
fstps
pop
cmp
shrl
shll
ljmp
add
inc
out
xchg
push
ds
add
and
push
push
push
add
jmp
int
imul
mov
mov
cmc
das
mov
pop
xchg
clc
cwtl
sub
cmp
ljmp
xor
jge
movsb
and
add
pushf
dec
and
mov
aad
clc
das
xlat
jg
xchg
movb
lcall
push
add
jb
add
aad
or
and
add
mov
fs
cs
int3
or
jmp
jle
mov
loope
adc
addb
fisubs
inc
add
add
push
sub
ret
add
cltd
jne
repz
stos
xchg
and
je
rol
add
int
push
mov
jno
int
add
fs
push
dec
loope
push
out
jae
lret
ds
hlt
xchg
jle
lock
or
fs
jbe
inc
xor
jnp
add
in
fbld
xor
std
lret
ja
inc
push
xchg
fnstcw
xchg
jl
push
data16
sbb
pop
xchg
mov
cmp
or
adc
addb
add
xor
cs
push
jo
add
dec
xlat
out
jno
pushf
popl
loop
cltd
repz
add
mov
dec
test
clc
inc
jle
in
arpl
cmp
jae
cmpsb
stos
int
add
fistl
mov
mov
cltd
xor
into
mov
stos
ljmp
sti
adc
adc
shll
lock
push
ss
jmp
mov
leave
push
notb
mov
pop
xchg
movsb
push
ljmp
lds
into
cli
sub
xor
push
push
pop
cmpsb
lret
pop
sub
dec
in
arpl
loopne
addb
outsb
sbb
cwtl
pop
in
jge
xchg
jle
fisubrl
mov
bound
dec
jns
lock
add
jno,pt
sbb
ds
dec
lock
adc
sbb
insb
sbb
add
adc
je
daa
in
icebp
das
xor
add
clc
js
iret
fistpll
mov
loopne
pop
out
pop
pop
movsl
xchg
int
add
out
dec
xchg
xchg
sub
pop
daa
jle
icebp
dec
xchg
addb
or
iret
cmpsb
lret
mov
xor
xor
mov
fwait
loopne
mov
adc
lmsw
pop
ss
lock
je
out
and
addb
hlt
mov
xor
pop
xchg
push
movsbl
adc
ds
movb
fsubs
mov
cmp
dec
sub
nop
pop
sahf
sbb
cmp
data16
test
bound
mov
jp
iret
in
scas
add
cmpsb
jmp
in
shrl
push
into
cmc
aam
cmc
adc
jge
pop
imul
dec
stc
jge
jns
ss
add
shlb
push
pusha
add
add
add
dec
xchg
out
sub
movsl
mov
ds
ljmp
aad
sbb
loopne
adc
stc
xchg
out
bound
jl
fsubrp
insb
xchg
and
xchg
fiadds
sub
sbb
int3
mov
push
and
sbbl
imul
fldcw
sbb
pop
mov
stc
jmp
sti
sbbl
ret
xor
add
add
std
flds
add
pop
stc
mov
loope
pop
jbe
pusha
add
popa
jge
sbb
movsl
addr16
cmpsl
push
add
scas
and
inc
add
lds
lahf
insb
dec
pop
push
cmc
aas
sarl
rorl
jo
sub
inc
fs
mov
pushf
inc
cli
mov
out
scas
pop
push
in
mov
push
mov
les
inc
sub
repz
ret
hlt
mov
arpl
add
lcall
out
cmp
lret
mov
xor
enter
push
and
jge
loope
pop
idiv
jns
add
scas
mov
loope
pop
mov
outsb
xor
jns
addr16
cvtps2pd
ja
cmp
fidivs
and
jl
fsubrs
mov
add
aad
jb
shl
sbb
roll
mov
lock
cmp
xchg
sub
stos
repz
mov
or
pop
ds
stos
addb
popf
xchg
sbb
frstor
add
out
xlat
push
outsb
clc
sar
mov
enter
dec
inc
jle
enter
pop
xchg
ja
jo
and
add
aas
xor
imul
loop
shl
insl
push
push
jecxz
mov
int
addb
sbb
mov
cmp
popa
sbb
dec
fdivrs
add
bound
test
sub
sbb
pushf
xchg
sti
inc
mov
sub
int3
cmp
jnp
inc
mov
add
mov
aas
mov
fmuls
adc
fdivs
test
jnp
lods
dec
cmc
in
add
pop
stc
add
push
dec
aaa
dec
cli
xor
in
sub
faddl
jle
xchg
push
xor
add
mov
loope
pop
rcr
pop
jne
inc
add
and
push
push
or
mov
ficoml
inc
add
insl
dec
aad
icebp
repnz
pop
push
xor
xchg
stos
adc
and
jno
add
add
leave
ja
jl
xor
aas
and
xor
add
aas
dec
es
popf
loope
add
sub
out
xchg
lods
adc
mull
push
push
and
add
sbb
mov
xchg
push
add
xor
cmpsw
mov
sti
sbb
faddl
pop
pop
ret
addr16
jne
adc
pop
in
iret
add
dec
fnstenv
add
add
add
or
icebp
push
dec
jne
xchg
xchg
fdivrl
jb
out
add
dec
les
mov
sub
loope
jle
sbb
iret
cltd
movsb
inc
add
mov
pop
enter
cmc
jecxz
inc
add
dec
or
add
add
jmp
mov
jno
imul
and
ror
cld
fbld
popa
or
arpl
dec
imulb
addb
add
addl
fs
cmp
push
sub
push
or
addb
rolb
jle
xadd
fmull
lahf
and
roll
add
stos
pop
cltd
imul
jp
movb
push
dec
jbe
es
push
dec
xchg
movsb
mov
pop
mov
inc
add
inc
add
and
pop
cwtl
movb
push
std
inc
cmp
jns
mov
cmp
add
cmp
test
out
xchg
xchg
inc
pop
sahf
incb
push
mov
rolb
add
shrb
fwait
sub
adc
cs
ss
adc
xchg
jg
imul
out
mov
adc
xor
add
shrl
xchg
add
btr
adc
xor
std
mov
dec
daa
stos
je
lods
adc
sub
stos
and
daa
push
jae
add
notb
add
inc
sbb
add
jno
add
adc
pop
adc
xchg
mov
mull
push
dec
dec
inc
add
push
shrb
jb
add
aas
and
mov
test
cmp
jns
add
mov
leave
jge
addl
add
push
movsb
xchg
and
push
mov
data16
fldl
add
rolb
add
movsb
outsl
or
out
insb
and
mov
das
xor
pop
insl
mov
adc
scas
xchg
xor
xor
dec
sub
ss
leave
test
icebp
xchg
mov
dec
jne
pop
stos
aas
mov
fldenv
adc
out
cmp
inc
add
fnstsw
pop
pop
mov
jmp
jg
xchg
std
mov
adc
pop
lcall
cmp
rolb
cltd
rolb
cmpsl
mov
mov
test
cmp
pop
push
push
ret
pushf
mov
push
lods
inc
add
add
inc
add
enter
out
sub
dec
movb
xor
xchg
outsb
or
push
int
fwait
movzwl
inc
add
test
sahf
scas
rorl
pop
pop
cltd
nop
out
test
shr
pop
jge
jmp
add
fs
or
add
dec
call
dec
xor
jecxz
es
shrb
ss
pop
enter
mov
dec
inc
shlb
popf
jnp
int3
jg
mov
stos
mov
xchg
adc
dec
sub
add
pusha
add
mov
arpl
insb
repnz
sti
test
xor
add
cmp
xor
imul
stos
int3
ds
stos
sub
mov
add
jae
std
push
jbe
gs
add
sbb
inc
cli
inc
mov
xor
cmp
shll
scas
aas
popa
std
xchg
test
add
or
test
fcmovne
pop
testl
cmp
add
jbe
ja
xchg
ljmp
sub
xor
out
jl
pop
add
add
sbb
scas
mov
lret
or
into
mov
pop
or
mov
aam
pop
lock
jb
add
lods
ljmp
mov
repnz
or
dec
repz
sub
add
jbe
sub
jl
and
bound
sub
inc
add
cmp
std
dec
ja
das
add
test
jge
jecxz
or
and
stc
dec
xor
mov
add
cmp
jns
or
outsl
enter
addb
xor
mov
jo
shll
adc
add
cmp
popa
or
dec
js
pop
cmp
add
daa
lar
mov
sbb
or
int
dec
pop
push
push
add
or
mov
aad
je
xchg
in
jle
dec
xchg
push
lret
decb
or
fs
filds
bound
mov
push
in
jg
xlat
fdivrs
mov
xlat
out
or
jns
lahf
aas
addb
lods
jle
pusha
add
call
shrb
daa
nop
fsub
fwait
mov
adc
andl
gs
subl
dec
dec
outsb
out
pop
push
shl
js
xchg
daa
into
xchg
mov
sub
jp
sbb
add
nop
dec
mov
mov
or
mov
lods
jbe
scas
or
pop
loop
add
and
pop
or
cmp
out
sti
cmp
inc
add
cmp
mov
add
mov
mov
mov
call
int3
inc
add
cmp
in
inc
add
jecxz
pop
in
js
cmp
divb
cmp
pusha
add
mov
and
cmp
mov
dec
bound
dec
lea
push
lahf
sbb
lods
loope
ret
mov
inc
and
negb
xchg
cmpsl
data16
dec
push
cltd
mov
push
xchg
jno
lock
cmp
sbb
inc
add
js
sbb
cld
mov
push
xchg
sbb
addb
jnp
sbb
es
outsb
push
nop
push
mov
mov
in
jmp
pop
cmp
cltd
push
test
sbb
and
stc
mulb
jb
push
movsb
or
add
mov
lahf
notl
jo
addb
test
lods
mov
push
add
test
sarb
popa
out
or
or
adc
xchg
xchg
push
fsubl
int
push
insb
jne
xchg
sbb
xchg
push
add
pop
inc
add
aas
ret
fwait
jle
jnp
push
add
xor
xlat
addb
mov
add
nop
fldl
sahf
adc
and
lods
jl
in
outsl
jl
push
push
sbb
scas
dec
pop
rcll
sub
in
loope
rolb
repz
cltd
rcrl
aad
int3
das
mov
mov
xor
dec
mov
mov
sarl
ds
je
cmp
or
lock
jge
in
mov
xchg
or
stos
test
pop
adc
sub
pop
out
xchg
sti
in
clc
addb
loop
add
cmp
pusha
add
push
pop
leave
xor
std
hlt
icebp
or
data16
pusha
add
push
mov
add
add
inc
add
bound
cmpsl
and
fisubl
inc
push
pop
jle
adc
loopne
data16
addb
mov
ds
adc
add
lcall
jns
aad
lcall
mov
xor
xchg
push
rcr
ds
add
mov
mov
movsb
jle
fmull
ljmp
mov
add
shll
add
cmp
cmc
cli
jle
add
insl
fsubrs
mov
push
mov
and
cmp
mulb
add
pop
xchg
fnstenv
sbb
mov
out
stc
fcoms
cmp
shl
sbb
ljmp
pop
pop
out
sbb
sbb
push
and
les
call
push
les
inc
lds
mov
adc
out
push
xchg
cwtl
or
jp
xor
lahf
cmp
in
push
add
or
add
icebp
incb
add
add
jne
roll
push
mov
stos
mov
in
lock
rcrl
and
loope
mov
fs
push
and
inc
add
pop
cmp
xchg
mov
fwait
aaa
push
or
and
dec
popa
fwait
enter
mov
add
sbb
lcall
sub
jno
and
add
ret
mov
popa
orl
mov
fwait
mov
sub
lea
sub
mov
and
sahf
ret
cmpsl
addb
add
addb
mov
cmpsb
mov
and
gs
std
cmovo
in
cli
jo
leave
aad
xchg
lods
push
std
cli
insl
xchg
mov
scas
int3
dec
test
xlat
xchg
mov
shll
cmp
mov
data16
jbe
xor
and
mov
imul
iret
adc
test
pop
cmc
sahf
std
push
pop
xchg
sub
add
add
jae
addb
push
push
lock
inc
dec
popa
jle
or
insl
or
xchg
inc
mov
out
mov
stc
xorl
pop
testl
stc
ret
cli
addb
clc
inc
add
sti
dec
add
nop
movsl
dec
pop
mov
movsb
sti
dec
std
rcl
dec
enter
ret
into
popa
mov
inc
adc
push
leave
inc
add
add
rcr
mov
pop
ja
addb
xchg
loopne
sbb
daa
out
gs
lahf
mov
outsb
ljmp
test
push
loope
add
add
add
lods
xchg
clc
bnd
or
push
inc
add
and
add
leave
pop
sti
xor
ljmp
sahf
jecxz
hlt
mov
into
jp
stos
adc
aad
mov
fisubl
stos
clc
push
std
pop
mov
faddl
cltd
push
call
aaa
lds
js
je
add
fidivrs
push
aam
mov
das
pop
lret
add
jnp
or
movsb
lods
sub
lea
int3
fistps
jge
add
pop
mov
or
dec
and
jl
push
nop
daa
xor
popf
inc
jno
test
push
adc
imul
jecxz
inc
add
addb
or
cmp
jmp
lea
adc
xchg
test
xor
rolb
aad
dec
xchg
outsb
mov
mov
cmp
mov
add
rol
mov
and
ss
jae
inc
add
fidivrl
test
into
xor
add
mov
movsl
sub
add
out
hlt
mov
xchg
mov
mov
pop
in
add
stc
sub
cmpsb
or
or
cmp
lea
lret
sub
sub
jmp
sar
rolb
add
arpl
sub
fimull
xor
xchg
adc
aad
lret
mov
adc
jo
and
aaa
pop
cmc
mov
inc
add
add
es
or
add
popa
and
mov
aaa
stos
aas
or
ret
jb
jmp
or
add
test
or
gs
adc
test
test
dec
dec
xchg
imul
pop
arpl
pop
push
je
push
xchg
in
pop
jne
iret
fldl
in
sbb
dec
xlat
pop
pop
imul
or
dec
addr16
push
popf
test
out
add
rep
lods
push
cmp
xor
addb
pop
popa
cld
inc
emms
jle
sbb
out
mov
add
lods
ret
xor
xchg
jne
pop
push
add
inc
add
pop
int
icebp
test
jns
stc
add
xor
fcoml
push
test
adc
sub
leave
lea
add
jb
push
cmp
mov
cld
mov
sub
mov
loop
scas
and
movb
pop
lods
enter
xchg
cmp
ret
rolb
push
mov
add
xchg
loopne
sub
aad
xchg
cld
fwait
sti
push
js
in
inc
add
sahf
mov
jl
movl
mov
repnz
add
push
jae
add
pop
scas
leave
pop
fwait
xor
out
popa
dec
cmc
bnd
ret
das
dec
inc
add
in
mov
out
bound
out
and
add
push
cmpsb
mov
jae
or
mov
add
test
mov
xor
or
cltd
mov
int
push
out
jno
test
fmull
lea
cmpsl
mov
inc
add
mov
xchg
cwtl
jne
mov
into
in
pop
inc
cmp
test
imul
aam
addl
mov
push
outsb
jae
or
imul
and
add
rcll
notl
test
xchg
and
sub
cmp
and
enter
lods
adc
cs
push
inc
add
arpl
outsl
test
mov
mov
push
jnp
lret
mov
daa
test
call
insl
jg
rclb
cmp
roll
pop
in
xchg
xchg
pop
je
ret
jmp
mov
insl
fucomip
adc
add
pop
inc
jae
iret
mov
outsb
jecxz
mov
or
lret
add
or
push
add
xchg
scas
lods
dec
cmp
inc
je
jmp
out
xor
movsb
add
sbb
inc
call
out
or
add
add
pop
pop
jno
dec
xchg
sahf
mov
xor
jmp
inc
roll
add
xor
lods
test
add
mov
sub
decb
add
mov
dec
cld
loopne
lcall
pop
movsl
or
add
hlt
cmc
mov
cmp
sbb
andl
icebp
lock
loope
fs
xchg
jb
cltd
push
lret
jle
inc
sub
icebp
out
sub
movb
ret
xchg
pop
cli
rolb
sbb
mov
push
fmul
inc
sahf
addr16
push
ds
in
movsl
mov
jns
int3
adc
test
pop
jno
imul
cmp
add
mov
mov
inc
pop
push
lea
jne
in
inc
add
pop
decl
jo
mov
push
les
xchg
adc
mov
inc
int
cmp
stos
clc
xchg
cld
dec
add
jle
add
or
xchg
push
dec
add
out
xchg
ljmp
aam
outsl
dec
or
push
mov
les
dec
lods
adc
jns
lods
mov
in
lds
dec
rolb
mov
pop
mulb
add
pusha
add
int
stc
repnz
mov
je
lock
int3
outsl
lcall
inc
cmc
movsb
sti
sbb
add
sub
add
je
pusha
add
icebp
ljmp
stc
mov
movb
dec
ret
xor
outsb
add
je
out
xor
dec
jg
add
lods
lahf
push
pop
lock
jb
jne
jnp
mov
fs
fisttpl
inc
add
xchg
stc
xor
adc
add
xor
xchg
dec
pushf
fcompl
icebp
pmuludq
ss
loope
fwait
and
popa
ja
dec
loop
jp
xchg
mov
iret
repz
jp
dec
lcall
xchg
pop
dec
test
sbb
lods
outsl
jnp
and
pusha
add
imul
sahf
inc
pop
jo
sbb
aaa
mov
jb
popf
lret
loopne,pn
cmpsl
add
add
pushf
das
xchg
enter
fisttpl
dec
xchg
icebp
ret
pop
cmc
push
xlat
pop
or
and
xchg
pop
or
movb
add
outsb
push
addr16
cmp
jno
repnz
adc
add
out
cltd
js
lret
or
cli
pop
das
cmpsl
dec
jecxz
test
lret
or
arpl
and
push
outsb
in
bound
loopne
push
add
iret
rorl
pop
out
xor
or
sbb
and
shl
add
add
xchg
insb
dec
cwtl
mov
roll
enter
add
fwait
mov
add
mov
add
in
mov
nop
imul
and
sbb
rolb
sub
rorb
adc
adc
push
mov
xor
bound
inc
xor
jne
cli
lret
mov
fisubs
lret
sbb
es
cld
lahf
in
aam
dec
dec
sti
pop
call
lods
jnp
lret
mov
add
lret
push
rol
add
fs
in
or
mov
sbb
loopne
pop
sub
mov
adc
es
mov
pop
movb
or
std
inc
add
je
or
dec
es
cs
popf
pop
ds
std
push
add
movsl
pop
call
adc
daa
mov
ds
push
lods
cld
push
mov
std
dec
xchg
loope
sbb
add
adc
add
adc
inc
add
mov
pop
add
pop
addr16
ss
lret
es
adc
mov
pop
fs
xlat
in
adcl
test
pop
aas
dec
movb
ret
jp
sbb
cmp
insb
scas
jne
or
aaa
cmp
and
call
lock
xchg
dec
aam
add
add
mov
push
pop
mov
or
cmp
ret
sar
xchg
int3
sahf
push
fs
mov
je
lcall
push
repnz
sar
in
push
movsl
icebp
stos
loopne
mov
ss
mov
add
das
test
movsb
add
dec
cltd
dec
daa
rorl
push
dec
lcall
xchg
popa
xchg
mov
insb
cli
rol
add
add
add
roll
add
stos
xor
lea
dec
push
pusha
add
out
add
and
inc
test
ret
inc
add
cmpsl
sbb
mov
push
dec
and
xchg
sub
or
test
outsb
stos
jno
add
into
test
xchg
push
add
sub
imul
add
dec
pop
pop
in
enter
add
sti
js
pushf
pop
sbb
addb
enter
cmp
add
add
fbstp
dec
sbb
test
push
inc
push
scas
and
add
movsl
pop
pop
inc
add
les
mov
stos
pusha
add
mov
or
add
add
mov
and
jnp
notb
addb
cmpsb
rolb
fsubs
add
xchg
and
xor
sbb
add
fidivrs
mov
xchg
jmp
lret
mov
cli
stc
sub
enter
and
les
icebp
les
lods
push
xor
out
jno
jecxz
or
mov
adc
ret
ficoms
xchg
call
loopne
pop
inc
insl
into
adcl
add
cmpl
sarb
nop
mov
call
fwait
jp
clc
dec
adc
xor
inc
inc
add
in
stos
popf
ret
and
xor
xchg
pop
ja
xchg
pop
stos
and
mov
ret
rclb
inc
push
jge
jp
mov
xor
ja
fs
add
lcall
fnsave
xchg
mull
addr16
and
aam
sbb
cmp
in
jne
test
add
pop
aam
imul
mov
push
dec
daa
cmp
in
roll
shl
push
jmp
cwtl
addb
shll
add
testb
dec
rolb
pop
jle
enter
and
jg
hlt
addb
sbb
aas
pop
or
rclb
xlat
sub
sub
or
and
enter
push
add
bound
lods
insl
les
mov
or
das
jb
mov
pop
gs
cld
and
inc
add
or
out
clc
in
inc
add
or
or
pusha
add
dec
push
dec
je
pop
repz
daa
xor
or
lock
test
daa
mov
into
jae
add
add
jbe
pop
int
add
int
sbb
nop
testl
rolb
jl
data16
test
rcr
cmp
stos
sbb
xor
fisttps
cmc
push
add
and
mov
mov
mov
xchg
loopne
outsl
jnp
add
inc
add
into
xchg
pushw
add
inc
lds
stos
stos
push
mov
add
je
pop
es
fimuls
add
imul
fwait
leave
push
or
inc
mov
push
add
push
aas
gs
push
mov
add
aaa
lea
and
les
lret
dec
push
icebp
dec
clc
aaa
dec
int
pusha
add
add
ss
sbb
dec
xchg
sarl
push
test
mulb
lcall
les
xchg
push
loopne
mov
pop
hlt
enter
mov
jmp
pushf
jecxz
aas
and
add
sub
out
add
cmpl
lret
test
inc
add
test
jg
mov
daa
fidivl
insl
add
push
cwtl
cmp
mov
mov
sarb
jecxz
test
and
or
push
and
roll
clc
cmpsl
push
add
clc
stc
xchg
jg
addb
out
test
sub
ret
ja
add
fdivr
push
dec
push
mov
fidivrl
or
cmpsb
bnd
sahf
and
fisttpl
cld
scas
or
mov
icebp
cltd
mov
adc
aaa
sub
add
pop
movsb
je
movb
test
paddsb
add
gs
test
out
jbe
ss
adc
fs
aaa
cmp
shrb
push
ss
inc
jmp
pop
mov
add
add
inc
xchg
mov
add
dec
rolb
into
std
mov
jnp
adc
xchg
sldt
test
sti
mov
cmp
mov
mov
pop
std
mov
add
jmp
lahf
xchg
push
enter
mov
mov
inc
mov
xor
pop
inc
add
jbe
sub
xor
push
mov
mov
lods
hlt
add
add
mov
mov
cwtl
jmp
jmp
fisttps
cmp
fldl
add
add
movsl
mov
adc
mov
jecxz
xor
test
pop
rolb
pop
jnp
adc
xchg
jo
sbb
fsubr
mov
ss
adc
push
in
xchg
mov
sbb
fstpt
mov
lds
mov
mov
hlt
mov
lcall
xchg
push
dec
push
out
xchg
test
jge
out
xchg
loop
mov
sub
arpl
cs
mov
imul
mov
sbb
xchg
cmpsl
daa
jg
xchg
aas
xlat
dec
mov
jb
mov
jne
mov
dec
xchg
mov
cmc
push
adc
sbb
dec
xchg
mov
or
out
adc
scas
call
aam
roll
push
add
fstpl
les
push
xchg
repz
jnp
int3
mov
xor
mov
out
cmp
pusha
add
fimull
sahf
mov
jge
mov
adc
jns
sbb
add
inc
add
sarb
push
movsb
popa
fs
mov
lea
das
mov
imul
pop
inc
add
push
scas
ror
add
add
fdivrl
ljmp
add
sbb
ret
and
xor
push
inc
cmp
aam
add
jno
sub
add
test
inc
add
mov
dec
test
add
inc
adc
mov
loop
test
mov
push
insl
mov
daa
stc
aam
mov
ljmp
inc
fiaddl
dec
xor
push
in
or
push
or
and
add
testl
add
hlt
aas
das
loope
dec
fs
out
jg
xchg
jae
testl
fs
dec
add
xor
mov
lods
sub
xor
out
out
out
das
or
daa
fistps
cmp
inc
dec
inc
add
sub
pop
outsb
jecxz
lods
inc
lds
mov
fcomps
jo
mov
xor
add
enter
add
and
pop
int
add
sub
dec
cmp
cld
rorl
jns
add
movsl
jmp
dec
js
js
add
hlt
addb
jg
popa
lret
jne
inc
add
cli
add
dec
cmp
jl
fucomip
sbb
add
adc
dec
test
mov
push
cmpsl
mov
scas
sbb
add
ss
add
push
xchg
lcall
les
andl
js
lock
inc
mov
add
lock
aas
lcall
fcomps
jns
mov
sbb
mov
lock
add
imul
es
push
cmc
sbb
cltd
dec
push
inc
cmpsb
inc
add
add
movb
jmp
add
push
stc
adc
add
mov
dec
inc
add
pop
push
push
mov
sbb
add
jmp
inc
hlt
cmc
outsl
movb
jecxz
test
outsl
adc
xor
lret
in
jb
fsubs
add
push
push
enter
xchg
daa
xor
xchg
xchg
movsb
movsl
cmp
add
jmp
add
xchg
ljmp
scas
pop
jle
pushf
push
add
test
movb
sbb
out
add
out
insl
ret
mov
out
js
repnz
bound
int3
and
jle
mov
mov
or
outsb
jl
mov
and
int3
jae
gs
add
and
sahf
bound
stos
addb
lret
adc
rclb
jp
mov
into
out
lock
test
popa
sbb
inc
add
lret
add
add
lods
ret
insb
mov
push
sahf
je
mov
add
add
xor
add
and
loope
inc
add
pop
out
add
clc
movsl
adc
cmpsb
mov
add
popa
icebp
push
pop
cmpsl
arpl
into
pop
jo
push
add
xor
xchg
push
jl
lret
push
std
mov
inc
add
jnp
push
add
mov
dec
adc
out
bound
mov
sarl
push
or
call
scas
jecxz
mov
dec
mov
add
add
std
pop
mov
mov
das
lock
add
in
insl
sub
adc
adc
pop
gs
xor
stos
popa
rorl
xchg
sbb
dec
add
add
and
sti
add
add
dec
sbb
add
add
ss
or
and
or
imulb
add
xchg
jge
adc
push
outsl
jns
jae
fdivl
in
cmp
popf
sub
push
enter
int3
inc
pop
adc
jmp
fnsave
int
insb
pop
aaa
ret
jg
xchg
mov
hlt
ja
dec
xchg
in
stos
push
adc
or
int
out
repz
cld
jle
mov
push
sub
es
cs
call
pop
out
sbb
mov
dec
push
mov
mov
adc
mov
cld
mov
mov
scas
nop
repz
add
add
inc
add
jnp
jb
int3
scas
mov
cmpsb
push
lods
mov
add
sub
lods
and
shlb
mov
inc
add
lret
outsb
insb
and
cmp
loop
ret
popa
mov
aaa
je
inc
add
xor
push
loopne
inc
add
fs
out
jle
lsl
fiadds
add
ss
sbb
adc
movsl
jne
cmc
loope
push
add
test
arpl
add
js
xor
add
inc
add
fdiv
xchg
nop
lods
inc
inc
add
lock
xor
jg
cwtl
xor
data16
jecxz
mov
lock
arpl
idivl
xor
add
std
icebp
lret
add
lahf
stc
xlat
call
push
das
add
sbb
pop
pop
fwait
repz
and
aas
and
jl
jbe
movb
enter
shll
add
or
add
das
mov
data16
mov
mov
inc
add
hlt
dec
repnz
out
adc
push
fldcw
iret
ret
test
std
or
adc
fstl
or
daa
xchg
jle
repnz
add
insl
mov
incb
cmp
adc
push
aad
cmp
mov
mov
addr16
pop
pop
jne
xchg
addb
add
mov
add
inc
notb
call
pop
jecxz
shrb
movsl
ljmp
incl
add
adc
enter
mov
add
cli
aam
mov
rolb
aaa
push
insb
jmp
es
xchg
bound
scas
pop
sahf
cli
mov
mov
add
movsl
jne
pop
mov
add
jnp
dec
sub
mov
and
scas
fisttpl
inc
add
cmp
push
sub
cmc
mov
pop
cltd
mov
nop
fldcw
pop
outsb
xchg
lcall
cmp
js
xchg
inc
out
mov
cmp
mov
add
insb
outsl
xchg
enter
cwtl
inc
add
mov
rolb
adc
add
sbb
addr16
movsl
inc
pop
sbb
sub
sbb
cmp
arpl
fcomps
xchg
loop
add
jbe
and
and
loop
dec
or
add
add
and
loop
stos
jns
mov
jg
xor
ss
mov
pushf
xor
and
adc
cmp
add
std
and
add
add
jp
xchg
fsts
sbb
sub
scas
mov
out
scas
sahf
lods
scas
aaa
clc
pop
sub
jae
and
nop
out
aaa
popf
jne
sub
add
add
std
jecxz
xchg
lret
aad
mov
xchg
pop
insb
push
sub
stos
xor
pop
mov
push
mov
cmp
push
cld
incb
cmpsl
insl
cs
insb
jecxz
xor
das
cmp
mov
pop
or
mov
andl
js
and
jb
push
pushw
dec
jae
jnp
ret
data16
sub
ret
loopne
dec
pop
gs
dec
inc
mov
movsl
push
repz
ss
mov
xchg
mov
adc
lock
setge
data16
dec
dec
cmp
add
sub
ret
stc
popf
cs
mov
add
addb
inc
or
das
stos
and
pop
inc
add
out
popf
cmp
rol
in
sub
mov
icebp
mov
mov
cmpsl
fnsave
dec
in
xchg
mov
mov
cmpsb
mov
add
outsl
mov
push
dec
jo
das
jle
stos
lds
cmpsb
xlat
push
dec
mov
add
jns
dec
jno
sbb
mov
add
and
into
dec
mov
sub
xchg
jo
test
arpl
lret
es
in
gs
sub
jbe
das
fsubrs
outsb
ja
push
xor
add
dec
jo
add
cld
jge
jmp
aad
int3
cmp
mov
add
jmp
pop
ret
adc
xchg
adc
xor
mov
mov
scas
xor
popf
mov
pop
rclb
mov
sti
adc
in
cmp
xor
imul
dec
mov
lods
addb
test
or
push
mov
movb
mov
xchg
xchg
repnz
aas
adc
sub
lret
and
data16
cld
je
leave
movsl
hlt
mov
sbb
inc
add
add
mov
jle
mov
movsb
shl
in
mov
pop
mov
aam
test
nop
fbld
add
js
jge
inc
add
jno
leave
push
pop
add
add
cmp
ds
shll
int3
mov
dec
je
sub
push
movsb
imul
sbb
cld
and
or
xchg
fisubrs
ds
xor
mov
das
stos
mov
add
mov
add
leave
mov
jns
jl
insl
push
add
ss
xchg
rolb
inc
test
imul
rolb
movsb
add
stos
mov
adc
rol
add
sti
push
sbb
push
fnstcw
inc
add
notl
pusha
add
mov
pop
lods
xchg
jne
push
add
sbb
shlb
xchg
hlt
in
add
inc
add
or
xchg
clc
or
xor
std
popa
in
and
cmp
or
add
add
jmp
xor
out
sub
and
int
pop
roll
add
mov
jae
add
out
jecxz
cmp
adc
inc
add
add
add
cs
mov
jns
dec
loopne
imul
enter
popa
add
add
adc
or
scas
mov
cmp
push
pop
dec
les
test
fisubs
rcl
mov
inc
add
not
pusha
add
int
jecxz
out
mov
add
inc
add
adc
ss
mov
cmp
imul
addb
mov
fnstcw
add
es
fildll
lods
jle
int3
insb
add
je
movsl
mov
pop
aas
sbb
or
and
mov
xchg
add
pop
adc
add
pop
lret
xchg
inc
add
mov
cwtl
mov
lock
jge
dec
jecxz
or
rep
ror
jecxz
add
hlt
clc
or
pop
inc
fwait
movsb
sbb
arpl
rolb
sbb
ljmp
cmp
rcl
lea
and
mov
mov
clc
mov
cmp
and
pop
clc
test
adc
insb
les
add
or
jnp
xchg
in
add
adc
add
and
out
xchg
push
adc
xchg
sub
sub
insl
movsl
mov
mov
cli
fdivp
jge
xlat
into
data16
rorl
into
adc
pop
iret
cmp
inc
add
add
imul
push
cmp
mov
pop
mov
pop
call
icebp
cmp
and
inc
jnp
scas
jmp
adc
mov
push
cmp
inc
add
adc
dec
pop
push
mov
and
icebp
mov
lcall
jg
sbb
cltd
push
xchg
xor
insl
push
add
into
pusha
add
cli
sub
aad
clc
add
inc
daa
jo
shrb
loop
pushf
out
inc
pop
js
iret
aas
and
insb
pop
mov
repz
fs
inc
add
les
in
mov
cmpsl
inc
mov
addb
mov
ljmp
je
mov
lds
add
mov
inc
mov
adc
and
jo
mov
stos
and
push
es
cmp
addr16
mov
je
push
into
mov
dec
add
pop
test
cmp
mov
jmp
aaa
repz
mov
inc
xchg
or
cmp
mov
inc
movsb
cwtl
jmp
xchg
inc
add
leave
lods
cmp
adc
xor
jg
xchg
inc
push
jo
add
je
pop
and
fldcw
aam
xchg
shr
xchg
loope
push
mov
mov
xor
mov
jnp
adc
or
add
inc
inc
add
scas
ret
add
fwait
pop
jl
fstl
lods
jno
add
adc
xchg
fadds
jl
pop
adc
fadd
add
addr16
cmp
aam
ljmp
dec
leave
cmp
adc
jg
cmp
push
xchg
pop
sub
xchg
adc
push
data16
out
add
lds
jb
add
js
mov
cmp
xchg
test
pusha
add
repnz
dec
leave
les
loope
add
pop
filds
imul
sub
aad
shll
or
or
pop
cmp
push
inc
add
mov
sub
cmp
daa
out
and
in
push
pop
pop
xor
push
jl
xor
ja
inc
add
add
pop
fucompp
cli
movsb
xchg
test
stos
jle
mov
add
into
call
dec
mov
fidivrl
add
mov
add
push
add
push
mov
mov
and
xchg
cmpsl
or
in
mov
mov
pop
or
mov
jb
out
invlpg
outsb
xor
dec
ljmp
lea
in
push
mov
sbb
call
push
mov
push
out
push
fs
or
cli
test
cmp
push
js
xchg
decb
pop
out
out
cmp
add
lret
jns
xchg
movsb
jns
out
or
je
sub
out
mov
and
mov
xchg
mov
movsb
pushf
fucom
stc
int3
dec
pop
xchg
xlat
data16
into
pushl
cmc
push
mov
pop
jge
jge
add
and
or
dec
sbb
sub
jge
cmpsb
test
sub
and
pop
cmpl
add
lods
test
pop
cmp
cli
sub
xchg
mov
inc
add
icebp
je
xchg
stos
popa
and
xchg
cmp
xchg
movsb
or
dec
pop
aam
add
into
mov
cmp
add
imull
or
add
inc
add
add
jno
pop
xchg
and
insl
test
and
fmull
mov
add
mov
pop
mov
jno
shlb
mov
add
pslld
movsl
mov
stc
in
cltd
push
sahf
fldl
fisubl
jnp
mov
ja
fnclex
inc
add
push
pop
in
sbb
add
pop
xchg
pusha
add
out
jmp
mov
pusha
add
cli
xor
in
jb
out
lods
or
inc
aam
cmpsl
add
jecxz
fs
lods
into
jbe
add
inc
cmp
dec
xchg
test
stc
int
push
add
cmp
popf
cmpsb
imulb
mov
add
sub
outsl
mov
outsl
pop
ret
daa
lcall
add
push
int3
outsb
cmpsb
push
mov
mov
jno
mov
mov
xchg
pushl
jnp
adc
daa
mov
fcmovnu
dec
xor
inc
add
enter
sub
xor
add
push
xchg
and
fdivrl
inc
push
add
enter
mov
clc
test
cld
test
inc
call
xor
add
and
and
stos
test
push
push
sti
loope
leave
cmp
add
lret
sub
mov
xchg
mov
in
adc
pop
test
fistl
pusha
add
and
pop
push
pushf
bound
data16
pop
pop
hlt
fs
popa
xchg
adc
push
jo
jle
adc
or
add
bound
stc
jg
inc
xchg
or
bound
lock
lahf
inc
add
adc
not
es
ljmp
adc
mov
push
dec
cwtl
loop
es
and
fisttpl
adc
aaa
jbe
das
sbb
push
xor
int3
daa
pop
sbb
mov
ds
rorl
or
sub
cmc
dec
dec
arpl
and
or
add
xor
add
pop
movb
lods
cmp
movb
push
and
push
iret
xchg
data16
sub
push
aaa
int
outsl
push
xchg
mov
sti
add
test
rcll
out
imul
push
add
sub
pop
add
sbb
test
sbb
jae
call
and
xor
enter
rolb
add
or
dec
sub
adc
push
cld
rol
push
mov
sub
pop
inc
add
push
negl
js
jns
repz
aaa
and
out
add
sub
push
test
rolb
mov
push
imul
and
sti
jg
ret
cmp
mov
pusha
add
popa
or
pushf
jg
sbb
and
test
outsl
xor
enter
enter
xchg
sbb
hlt
mov
sbb
push
test
fldl
add
jbe
mov
fs
adc
and
notb
jnp
lahf
jb
jo
jmp
add
add
mov
push
sti
dec
jl
fstpl
dec
lret
jae
xor
push
add
es
int
inc
adc
add
mov
jp
push
add
sbb
lock
inc
mov
nop
movsl
scas
test
clc
ret
jg
cmp
pop
lahf
jno
rcrl
sarb
jg
add
mov
inc
add
dec
push
dec
add
xchg
add
sbb
jb
out
cmp
dec
mov
scas
lcall
fldt
popa
repz
push
arpl
sub
add
cltd
or
enter
les
xchg
std
gs
mov
jne
fistpll
int
or
movsb
adc
adc
test
mov
mov
out
mov
mov
or
stos
jb
sub
icebp
fildl
add
int3
xchg
in
lods
mov
test
lods
add
xchg
push
pop
jecxz
lds
push
ficomps
fidivrs
fstpt
or
icebp
xchg
loope
dec
mov
lock
call
sbb
add
arpl
cmp
daa
xchg
add
sub
cmpsb
sbb
sub
push
mov
je
mov
jl
push
cmpsb
inc
add
add
dec
lret
aas
push
rorb
pop
aas
xor
addb
cmc
shlb
pop
out
ja
inc
mov
xor
stc
js
and
xor
or
gs
or
popa
rolb
mov
mov
push
jne
pop
dec
adc
iret
aad
lret
cmp
sub
mov
mov
loopew
int3
leave
ljmp
pushf
leave
sbb
push
or
add
pop
out
pop
or
hlt
add
shlb
addb
rorb
int
ret
out
fbstp
sub
xbegin
sub
scas
xor
adc
adc
insb
popa
sub
adc
test
fisubrl
mov
xor
adc
xor
jmp
sub
loopne
fisttps
aad
inc
add
jl
add
leave
rcrl
add
enter
into
daa
inc
add
inc
mov
outsl
popf
push
adc
inc
dec
xor
mov
xor
ljmp
or
mov
repz
les
lahf
inc
in
in
cmp
sbb
adc
add
or
add
je
mov
push
add
rorl
movb
inc
add
and
push
adc
mov
cmp
xchg
sbb
push
test
and
sarl
inc
inc
stc
fists
cmpsl
jge
jne
fs
addl
mov
mov
push
mov
jl
insl
push
mov
pop
insl
ret
add
mov
addb
push
add
leave
lret
out
and
lods
jg
jecxz
fdivrl
mov
test
jl
icebp
popf
test
inc
pop
lahf
pop
fdivrl
mov
pop
out
hlt
or
imul
mov
movsb
xchg
adc
or
pusha
add
cmp
inc
add
inc
and
stos
fadds
in
mov
xchg
mov
inc
fisubrl
xor
pushf
jp
add
xor
loope
mov
enter
leave
movb
fs
addb
xchg
in
rcr
push
mov
inc
and
inc
add
icebp
lods
push
frstor
jp
comiss
push
scas
xor
adc
loopne
sbbl
mov
sbb
add
fadd
add
and
rolb
es
call
cmp
dec
movb
sub
inc
add
in
mov
adc
mov
dec
pop
xor
cli
hlt
mov
and
xor
inc
add
sbb
mov
clc
jle
cld
addl
fcoml
adc
jne
mov
nop
adc
push
xchg
push
shll
or
xchg
fisttps
add
mov
popf
dec
jne
pop
cwtl
jb
pop
and
pop
adc
std
add
cmp
lea
add
cmc
push
mov
addb
icebp
lret
mov
movb
xor
out
je
mov
cmp
frstor
jo
and
fistpll
cld
negl
out
xor
fs
cmp
xchg
dec
and
inc
mov
mov
cld
inc
add
lods
fmuls
sub
pop
dec
mov
inc
add
lea
imul
add
dec
sub
and
jmp
mov
aas
push
dec
push
add
jge
sub
sbb
adc
jno
popa
add
leave
and
aad
in
scas
sub
hlt
std
sub
call
scas
xchg
mov
addb
pop
cmc
push
std
lods
test
cmpsb
mov
outsl
mov
mov
movsb
jmpw
pop
aaa
jle
mov
inc
outsb
lahf
lret
mov
test
and
cmp
sub
cmc
or
imul
shll
cmp
sub
mov
inc
jns
daa
add
push
sbb
lea
add
sub
test
mov
xchg
insl
fwait
mov
mov
sti
data16
loope
and
jle
dec
inc
lcall
dec
or
xchg
mov
fistpl
in
jo
leave
stos
pop
movsl
push
stc
push
mov
push
mov
sbb
xor
test
hlt
mov
inc
and
push
aas
jl
dec
hlt
popf
sbb
add
mov
sti
in
rolb
push
jge
bound
insl
fcom
in
inc
add
pushf
lret
cmpsb
in
dec
xchg
in
pop
xor
cmp
push
mov
add
call
cmp
pusha
add
test
jbe
add
shll
rolb
dec
sbbl
sbb
movb
jecxz
aam
jnp
jp
out
in
pop
mov
fs
dec
sub
hlt
jg
ss
add
jno
mov
cmp
test
push
sbb
or
add
mov
pushf
repnz
xchg
mov
mov
add
add
lret
rclb
int3
out
jns
push
fimuls
es
dec
pinsrw
mov
adc
dec
xor
in
test
cmc
sbb
inc
add
repz
adc
out
mov
mov
and
pop
cmp
outsl
xchg
add
cwtl
aaa
dec
out
dec
jmp
or
adc
pop
xchg
test
les
movb
xor
lcall
lcall
and
dec
lcall
dec
fs
xchg
pop
fdiv
inc
add
adc
xor
cs
add
pusha
add
aam
pop
shr
mov
or
add
push
lahf
lret
addb
and
ret
insb
sub
inc
add
lods
sbb
and
push
fcoml
in
push
mov
jmp
movsl
mov
aad
adc
stos
lret
stc
mov
mov
lds
jecxz
in
inc
add
inc
add
sbb
mov
pop
lods
hlt
addb
aaa
push
add
aad
sub
xchg
adc
repz
push
mov
rclb
xor
mov
dec
les
pop
xchg
xor
cmp
nop
or
and
push
stc
adc
int3
data16
sub
arpl
daa
push
add
gs
push
jg
aam
out
jnp
dec
cltd
rcr
push
arpl
in
leave
cmp
add
pop
scas
push
icebp
lods
fwait
and
imul
xchg
xchg
scas
test
test
popa
adc
cltd
mov
fisubs
ret
lahf
je
fs
lret
leave
rolb
in
cmp
add
mov
push
bound
pop
jbe
addl
add
inc
sahf
xchg
in
push
int
addr16
mov
dec
xor
leave
mov
adc
lret
push
sub
sbb
clc
and
push
mov
add
movb
inc
jge
rolb
outsl
aam
sbb
pop
cmpsl
call
mov
add
mov
cmp
shll
ljmp
rclb
fisubl
adc
subl
dec
adc
es
lcall
das
je
xor
add
add
stos
and
sti
pop
mov
pop
xor
pop
and
jle
add
shlb
repnz
pop
mov
add
call
rorb
sbb
add
jae
sub
add
aaa
ja
add
and
mov
cwtl
add
cmp
add
or
or
sub
lcall
add
dec
fbld
adc
push
rclb
mov
sbb
sub
lret
or
xor
cmp
mov
mov
out
xor
aaa
addb
gs
es
push
loop
iret
inc
sub
stc
push
cmp
and
test
ljmp
add
rolb
pop
add
mov
mov
xlat
ficompl
push
mov
inc
add
inc
repz
or
rolb
aas
stos
mov
xchg
push
cmp
sbb
add
add
shlb
push
nop
out
and
xchg
addb
inc
or
ss
add
pop
sarb
aam
movsb
inc
add
pop
mov
test
mov
aad
nop
xchg
rolb
cmp
pop
lods
stos
repz
sub
add
add
sti
les
in
rorb
loopne
in
push
add
mov
std
xchg
ss
adc
and
jmp
mov
cmp
les
mov
movsb
dec
rolb
sti
leave
data16
add
add
iret
inc
lret
xchg
jae
out
cmp
dec
sub
xchg
push
inc
add
xorl
or
arpl
adc
ss
pushf
mov
sbb
lea
mov
cltd
inc
les
repnz
out
or
jp
fdivr
mov
inc
add
jns
jge
mov
jne
cmp
data16
mov
bound
mov
loopne
inc
add
aas
clc
nop
push
mov
mov
pop
mov
add
jo
or
movb
in
mov
xchg
mov
scas
sbb
add
sti
inc
rcrb
add
out
rclb
mov
pop
xlat
xchg
call
pushf
cmpsb
mov
mov
sti
aas
pop
mov
repnz
xchg
mov
cld
mov
push
xor
inc
add
shrb
or
and
ud1
rdpmc
lods
adc
pop
xchg
mov
addb
js
jge
sarl
mov
and
or
push
xchg
in
loope
mov
arpl
cli
xor
gs
inc
add
pop
jle
ret
jne
dec
jnp
das
jae
push
cmp
movb
icebp
dec
cmp
dec
movsb
mov
add
ja
jmp
cmpsl
xlat
cmpsb
rcrb
ss
aam
addb
cmpsl
and
lds
pop
in
jns
add
xor
adc
sub
mov
push
mov
add
outsl
push
jne
cmp
mov
xor
mov
xchg
mov
mov
xor
fldl
add
sub
nop
insb
int3
dec
cmpsl
notl
imul
add
push
sahf
pop
std
adc
xchg
aaa
sbb
dec
or
jg
add
pop
adc
xor
cli
and
cmp
inc
add
sub
les
or
mov
xor
jl
xchg
push
leave
add
add
cs
fisubs
and
inc
add
pushf
addb
mov
sub
jecxz
mov
mov
fsts
js
cmp
push
subl
or
add
pushf
out
in
addb
ja
jno
lcall
xlat
xor
sahf
push
add
cmp
test
add
loop
or
add
inc
cmp
mov
stc
fildll
xlat
insl
adc
xor
add
ja
add
cmp
dec
imul
add
pop
cwtl
loop
aad
addb
loop
scas
xchg
fst
lods
lahf
or
add
int3
pushf
aaa
inc
add
add
add
fmuls
ffree
add
movsb
imul
cmpsl
add
fimuls
cmc
fnstenv
out
punpcklbw
mov
lea
loopne
cmp
lods
adc
mov
xorl
xchg
inc
inc
inc
in
or
sbb
or
call
popf
jg
sub
lods
gs
inc
fnstsw
xor
mov
mov
popf
nop
pusha
add
xchg
sbb
add
inc
add
and
and
mov
mov
fistpl
mov
sub
cmpsl
xchg
imulb
in
push
xchg
sahf
ss
and
pusha
add
jmp
xchg
sbb
push
dec
cmpsb
pop
cmpsb
daa
scas
add
mov
jl
inc
add
mov
nop
pop
fwait
dec
movsb
bound
sbb
insb
call
movsl
rolb
push
sub
xlat
jno
je
push
add
cmpsb
std
imul
je
push
pop
adc
dec
add
jns
leave
daa
or
add
xchg
mov
xchg
xor
movsl
shl
inc
sbb
add
xor
jmp
addb
cld
ss
out
ret
xchg
inc
clc
std
push
bound
mov
test
xchg
lods
sub
movsb
std
std
inc
or
loop,pt
or
arpl
mov
cmpsb
push
es
add
lea
sub
push
add
rorl
out
das
xor
movb
daa
pop
mov
and
pop
negl
add
outsl
mov
xchg
jmp
aas
push
add
daa
test
scas
cwtl
jecxz
jp
sub
inc
add
adc
jge
xor
pusha
add
imulb
cmp
fnstcw
mov
mov
test
rolb
cmp
and
lods
lret
dec
cmp
add
adc
mov
lcall
pop
popf
push
add
adc
leave
lahf
mov
pop
out
jbe
push
fsubrs
pop
nop
rcll
adc
in
lea
rcrb
mov
mov
scas
push
add
mov
aad
add
sub
push
xor
mov
jmp
pushf
dec
jbe
dec
and
sub
add
add
jmp
add
jge
rolb
ret
xchg
inc
add
and
xchg
jns
stc
cmpsl
sbb
or
inc
adc
out
add
sub
jp
stos
leave
fcoml
jne
mov
mov
xorl
scas
jno
lcall
and
aas
ret
xor
mov
add
les
mov
add
add
cs
shll
aam
xchg
xchg
adc
mov
outsl
pushf
jle
add
sbb
aaa
ljmp
jae
dec
pop
xor
les
mov
test
fidivrs
subl
push
jae
pop
mov
push
fld1
pop
jl
ror
lods
sbbl
test
adc
loope
adc
xor
sub
add
in
sar
pushf
addb
lret
shll
dec
xchg
jp
add
adcl
mov
test
jmp
pushf
hlt
add
mov
dec
push
loope
pushf
push
aam
pop
push
in
inc
jp
lret
enter
lea
xchg
movb
les
dec
mov
out
add
addb
insb
push
mov
fwait
jb
dec
mov
test
insl
fadd
inc
lcall
and
pop
hlt
das
jle
leave
fs
jns
ja
mov
scas
jmp
push
shll
outsl
ljmp
xchg
clc
scas
pop
aam
in
xchg
in
es
jp
mov
fstl
inc
add
in
imul
cmc
pop
xor
xchg
repz
jmp
jbe
test
dec
out
xchg
out
dec
sbb
push
add
xor
jle
in
popa
sbb
in
add
mov
mov
mov
mov
adc
popa
bound
jbe
inc
add
mov
add
lcall
dec
sub
addb
push
cmc
dec
xchg
mov
movb
ds
push
sub
push
fmuls
jg
jmp
nop
rolb
mov
cmp
add
adc
into
mov
fisubrs
mov
cmp
sub
adc
in
jge
fmulp
xchg
adc
mov
fcompl
inc
cmp
inc
add
xchg
loope
je
push
xor
and
loop
fidivrs
jp
repnz
xor
sbb
cs
cs
cli
sub
sbb
fcomps
fistps
or
adc
inc
add
xchg
mov
sub
insb
push
mov
stos
movsl
jne
js
mov
cltd
aad
loop
or
movsb
jns
inc
sub
cmpsb
pop
lods
lahf
mov
and
xchg
insb
xor
les
inc
pop
cmpsl
add
mov
stc
incl
push
push
mov
xchg
sbb
pop
jns
insb
mov
inc
add
fwait
or
xchg
outsb
push
mov
add
dec
and
dec
movsb
push
aaa
jp
dec
add
mov
add
adcl
mov
in
out
mov
inc
add
into
pop
push
out
mov
add
fs
lret
clc
enter
int3
sub
pop
xchg
shr
mov
dec
lods
js
adc
dec
pop
sbb
add
add
addb
outsl
and
rcrb
jns
jg
rclb
add
add
xchg
inc
push
aas
inc
or
mov
mov
xlat
fmuls
mov
cmp
je
xchg
inc
add
loop
add
fs
addb
nop
scas
sbb
push
call
dec
imull
ds
add
sub
les
push
add
cmp
movsb
out
jecxz
pop
dec
sbb
push
and
xor
sahf
pusha
add
mov
call
repz
dec
imul
int3
mov
adcl
add
call
xchg
addr16
hlt
movb
jp
cmp
pusha
add
sbb
push
lret
out
and
sub
push
add
jmp
outsl
xor
dec
xchg
cmp
mov
aas
aaa
mov
outsb
cmp
iret
add
push
mov
stc
jns
loopne
mov
cli
in
sub
push
loopne
ja
lds
dec
xchg
mov
das
dec
inc
cmp
pop
mov
mov
dec
nop
and
lods
andl
in
out
and
stos
and
jo
add
jl
cmpl
and
lret
mov
test
push
mov
xchg
pop
lea
iret
frstor
cld
pop
jecxz
and
test
xchg
mov
les
or
jb
add
jp
jb
iret
daa
psllq
push
popl
add
in
aaa
enter
push
mov
popf
insl
push
leave
and
sarl
daa
popa
insl
shr
out
mov
hlt
popa
pop
aam
adc
imul
rolb
add
outsl
push
rcl
cmp
insl
aad
sarl
add
inc
aas
stos
xchg
scas
loope
lds
test
push
jb
add
push
and
loope
mov
mov
iret
jb
mov
mov
scas
mov
pop
ficoms
es
cmp
add
pusha
add
add
mov
sarw
mov
movb
cld
fiaddl
mov
pusha
add
push
or
fdivs
loopne
imul
rclb
jge
in
cmp
stc
addr16
sub
push
push
xor
jno
jns
add
ret
push
or
dec
repz
ja
mov
jo
mov
imul
add
mov
jmp
jb
add
and
and
scas
push
jae
pop
addb
pop
jge
cld
jmp
mov
addr16
or
and
mov
jl
cmp
pop
sbb
xchg
or
push
cmp
enter
jp
ja
lods
ret
cmpsb
dec
dec
mov
cwtl
ja
and
ss
sub
sahf
pop
and
sub
jo
sbb
add
sub
scas
pop
mov
lea
add
sbb
inc
add
xchg
xchg
xchg
ja
add
dec
loope
or
push
fisubrs
push
inc
push
rorl
add
cmp
cmp
test
pop
xchg
xor
int
in
mov
pop
scas
xor
adc
lret
sbb
shlb
or
or
xor
lock
or
idivb
cwtl
push
arpl
and
xchg
sbb
xchg
lods
lea
or
ljmp
dec
jmp
xor
lret
lahf
dec
das
push
push
mov
sub
scas
sahf
jmp
fildl
test
enter
inc
add
add
add
and
jge
pop
test
hlt
scas
addb
int
adc
xchg
xchg
fs
xor
repnz
pop
jnp
cltd
inc
add
pusha
add
mov
outsl
nop
std
mov
sub
xchg
xchg
jle
test
add
lcall
cld
adc
std
jmp
cmpsb
dec
mov
and
ret
cmp
lods
fistpll
sbb
bound
cmp
push
cli
outsl
fwait
out
inc
add
mov
add
mov
dec
movb
arpl
inc
mov
cwtl
js
push
push
pushf
inc
xchg
adc
sahf
lret
mov
mov
or
adcl
test
push
sub
sti
addb
mov
jl
inc
add
addr16
aam
add
jb
lds
add
fstpt
pop
mov
repz
xchg
aam
outsb
jmp
or
rolb
outsb
sbbl
sub
add
jl
mov
pop
jae
fwait
mov
scas
push
lahf
lods
fsts
push
mov
daa
stc
in
test
jno
outsl
test
inc
outsl
pop
or
xchg
pop
cmp
jmp
jecxz
sub
mov
xchg
jg
xchg
leave
in
or
out
sbb
jl
sbb
mov
or
push
pop
sbb
rcll
movsb
cli
adc
leave
addb
sub
cmp
mov
push
std
iret
cmp
sbb
sti
inc
aad
js
popf
shll
imul
mov
add
jae
sbb
cwtl
jnp
pop
mov
add
leave
push
add
cmp
mov
rcrb
jl
add
arpl
add
in
addb
jge
inc
add
aaa
xor
pop
or
sub
addb
sub
test
mov
add
cmp
les
lea
movsb
xor
add
enter
mov
add
rcr
imul
popa
rolb
mov
hlt
idivb
push
lds
push
push
imul
sbb
pop
jae
push
xchg
loopne
fldl
mov
das
xchg
inc
add
xor
add
push
stos
sub
and
lahf
dec
xchg
push
das
test
scas
ds
pop
cmpsb
inc
add
orl
pop
movsl
lea
xor
inc
add
add
popf
xchg
sbb
mov
cmp
out
fadds
inc
and
mov
es
iret
outsl
outsl
movb
std
andl
sub
clc
pop
cmp
mov
push
jmp
pop
or
push
and
add
mov
rolb
loope
pusha
add
mov
add
movl
cld
testl
loop
std
sbb
fwait
xchg
xchg
adc
sbb
add
cltd
and
hlt
rorb
pop
add
out
test
mov
jle
xchg
sub
iret
pause
sub
enter
pop
aam
ret
sub
popw
pop
cs
dec
lret
inc
add
pop
loop
js
ds
mov
in
scas
fidivrs
addr16
push
jne
mov
pushf
jb
hlt
fldt
shlb
inc
sub
add
cld
mov
imul
mov
and
sti
ljmp
movsb
incl
aaa
sbb
fildl
add
sti
inc
add
and
push
scas
xchg
push
popa
or
cmp
jmp
sub
add
mov
and
adc
sub
lods
std
xor
popf
xchg
ret
push
jle
mov
add
mov
cmp
sub
repz
mov
mov
pop
aam
jmp
cmp
mov
je
enter
lds
fsubr
pusha
add
test
pop
jle
pop
es
xchg
scas
insl
in
inc
xchg
inc
aaa
push
inc
cmp
jl
push
jge
sub
in
sahf
xor
mov
cld
mov
adc
jle
aam
mov
dec
push
pop
dec
lock
dec
mov
adc
add
ss
fs
xor
push
add
cmp
int
sarb
jnp
xchg
mov
ja
or
add
xorl
lods
stos
mov
dec
push
inc
add
sbb
pop
lret
pop
pop
lret
in
mov
icebp
jle
dec
push
jns
les
pop
dec
push
pop
bound
aad
ja
shr
ds
scas
and
and
test
and
adc
sub
stos
mov
insl
push
aaa
dec
and
scas
xchg
les
icebp
popf
lea
add
pop
sub
sbb
mov
rclb
lods
lcall
or
jns
and
mov
mov
sbb
or
sub
or
jbe
add
dec
addb
push
aam
test
std
scas
iret
xchg
pop
rolb
fnstcw
repz
dec
or
js
xchg
mov
mov
popa
jnp
jae
add
or
fsubr
push
inc
pop
lods
lods
outsl
ficomps
add
fld
or
cmpsb
lods
jle
inc
pop
xor
jp
cmp
fbld
or
sbb
cmp
adc
dec
adc
sub
ret
lods
jb
jle
in
stos
inc
add
mov
into
and
inc
sub
fcomip
mov
test
push
enter
add
jmp
push
and
cltd
into
shrl
sbb
add
jmp
and
xor
mov
mov
and
jnp
cwtl
mulps
add
ljmp
cld
inc
test
bound
je
push
push
mov
cmp
add
pop
fs
fisttpl
or
add
sub
xlat
mov
cli
pusha
add
push
pop
not
push
sarb
sbb
popf
nop
jmp
sbb
cmp
data16
xor
movsl
repz
addb
dec
hlt
sub
in
scas
rolb
test
loopne
jno
cmpsl
mov
je
sub
arpl
dec
cmp
add
sbb
mov
lea
and
mov
dec
push
adc
mov
add
add
sub
scas
and
js
icebp
jne
loope
mov
in
inc
sbb
adc
push
loope
and
push
test
cmp
cmp
xlat
bound
enter
and
xchg
into
mov
ss
xor
dec
movl
push
neg
daa
stos
ja
xchg
pop
ljmp
add
inc
or
fs
addr16
aad
dec
mov
xor
mov
xchg
push
sub
mov
mov
and
test
pusha
add
addb
lret
sar
in
pop
test
aam
sub
add
pop
andl
sub
add
pop
adc
mov
movb
jle
flds
add
lahf
rcll
lods
icebp
mov
add
sub
sub
inc
add
pop
push
inc
add
sub
push
push
push
lods
mov
aam
je
xchg
xor
cmp
jecxz
rcrl
mov
jmp
mov
bound
out
or
rolb
iret
xchg
xlat
les
or
add
cmp
add
and
cmp
add
add
sub
push
fidivrs
shl
fld1
outsb
dec
incb
movsb
and
icebp
inc
add
pop
jl
out
inc
add
aam
lea
adc
mov
call
adc
aas
add
es
daa
push
sahf
jne
inc
xchg
mov
xchg
mov
xor
inc
add
xchg
cld
mov
jmp
iret
jl
fadds
mov
mov
loopne
and
pop
movb
fldl
jb
add
dec
jp
fldt
cmp
xchg
js
lcall
add
push
push
xor
or
mov
cld
rcll
sub
adc
insl
ja
lods
sahf
push
or
sbb
sbb
lea
xchg
push
imul
push
es
and
lock
cmp
add
mov
insl
push
data16
sub
mov
dec
sahf
mov
add
sbb
adc
jb
hlt
pop
test
add
add
jge
shll
repnz
add
cmp
jns
out
adc
mov
inc
add
es
push
mov
mov
add
or
movsl
stos
add
pop
faddl
popf
mov
fstps
ds
int3
scas
xor
xor
aam
add
mov
sub
push
mov
cmc
pusha
add
ljmp
cltd
iret
dec
jmp
mov
cld
push
inc
add
mov
rclb
loopne
adc
ficoms
add
lret
repnz
pop
jge
outsl
es
and
bound
adc
movsb
repnz
repz
adc
push
sbb
stos
sbb
add
sahf
cmp
add
add
adc
xor
nop
and
mov
fimull
inc
pop
pop
or
bound
mov
and
sbb
je
add
add
add
add
or
pop
pusha
add
add
cmp
outsb
mov
mov
scas
imul
mov
imul
jp
mov
xchg
inc
add
add
pop
sbb
add
mov
add
jge
push
out
xchg
mov
rolb
repnz
movsb
mov
pushf
add
shll
and
pop
arpl
push
push
andnps
js
jo
xchg
pop
add
fwait
mov
rorb
stos
jg
roll
sbb
hlt
hlt
mov
push
fidivs
andl
add
pop
mov
or
gs
jns
das
add
dec
mov
mov
mov
mov
orl
jg
sahf
sbb
addb
inc
add
jmp
xor
lcall
neg
inc
ja
mov
add
xor
mov
fisubrs
ja
sbb
aam
add
push
jae
push
xor
add
dec
lea
add
sbb
std
cmp
idivb
pop
cli
sub
sbb
dec
dec
push
ror
inc
lods
ret
or
lcall
sahf
inc
add
cltd
fnstsw
jne
mov
or
insl
xchg
into
mov
dec
sbb
rolb
or
notl
dec
mov
pop
jne
cmc
icebp
ficoms
ds
add
repz
or
sub
adc
add
add
cmpsl
push
inc
sub
add
test
inc
add
mov
push
ret
les
fdivrs
mov
mov
or
and
jge
fs
sub
mov
arpl
add
pusha
add
xor
push
mov
add
mov
ljmp
xchg
test
stc
stos
add
or
addb
notb
stos
pop
push
rcll
in
and
jns
add
fs
add
call
xor
insb
fists
es
in
mov
lea
pop
popa
and
jg
popa
cltd
xchg
mov
add
jne
dec
pop
shll
jnp
cwtl
fcomp
sahf
adc
addb
sbb
stos
bound
xor
push
jp
ss
data16
and
movsb
adc
out
xchg
cmc
mov
push
inc
add
mov
sub
movsb
mov
jbe
rclb
pop
fldcw
stc
in
aam
mov
push
fsub
push
roll
js
test
jb
aam
or
loopne
inc
add
aam
mov
scas
ja
fdivrp
xor
rolb
xor
ds
imul
ds
mov
mov
rorl
mov
loope
sub
movsl
and
test
mov
lret
movsb
jecxz
add
std
pop
mov
xor
add
mov
sbb
js
lahf
xchg
lret
test
cmp
into
mov
or
jne
icebp
jle
cmpsl
ret
pop
push
cmp
xchg
jnp
inc
add
jle
jmp
fiaddl
filds
daa
xlat
ja
clc
aas
dec
mov
sub
add
add
mov
dec
adc
int
sbb
iret
mov
or
lahf
or
inc
add
or
mulb
add
in
inc
imulb
push
pop
jmp
pop
shl
jge
test
sbb
push
out
int3
ljmp
dec
xlat
mov
mov
ficoml
xchg
mov
aam
xchg
in
mov
inc
push
addr16
push
pop
push
fs
scas
popa
cmpsb
xor
dec
outsb
cmp
addb
mov
add
subl
add
xor
add
or
enter
punpckhbw
adc
imul
mov
sbb
or
add
xchg
imul
es
aam
ficompl
jg
fcmovb
add
int
shrb
imul
rolb
sarl
inc
cmpsb
cmc
cs
cli
std
jp
sub
cmpsb
scas
pop
sti
add
fstpl
jmp
jecxz
sub
out
pop
flds
cmp
fs
jp
scas
int
cmp
mov
pop
addb
push
push
les
xchg
xor
inc
add
movsb
push
int
adc
cmc
jecxz
movb
rolb
cmp
inc
test
out
sub
and
data16
add
mov
into
sahf
int3
outsl
push
sub
push
ljmp
faddl
sub
out
std
call
inc
ljmp
shrb
mov
add
jl
mov
adc
cmc
jmp
mov
push
insl
ficompl
mov
sub
cs
add
mov
fstpl
add
movsb
lret
xchg
shll
int3
lret
xor
add
cmc
sub
roll
nop
rep
test
cmp
xchg
dec
mov
jle
call
movsl
in
cld
cmp
push
pop
xchg
out
adc
xchg
xchg
sub
cwtl
scas
lret
mov
xor
sarb
sub
sbb
adc
or
imul
in
jmp
and
xchg
mov
shll
outsl
cltd
scas
leave
sbb
js
cwtl
aas
sbb
int
inc
aaa
dec
fistpl
fxch
cli
ret
dec
scas
pop
jecxz
jp
cmp
add
adc
push
add
outsl
leave
push
int3
test
xor
outsb
cmp
and
icebp
dec
les
inc
add
add
xor
add
sbb
mov
mov
je
xchg
jge
pop
test
insb
and
int3
daa
popf
pop
xchg
imul
cmpsb
xorl
sbb
jge
adc
adcl
add
inc
add
hlt
add
leave
cmp
subl
ljmp
add
jg
dec
add
pop
push
mov
add
add
mov
loope
add
mov
sbb
push
mov
sbb
inc
scas
cli
movsb
mov
xor
mov
cmp
or
jg
mov
mov
ud1
movsl
cmp
stos
dec
jp
test
aaa
in
rolb
add
repz
int
pop
enter
mov
imul
add
adc
stos
jne
out
inc
add
in
push
popa
addr16
xchg
dec
mov
out
xor
xchg
cli
push
cmpsl
aam
cmp
pop
icebp
or
push
hlt
xor
xor
addb
add
cmp
test
dec
mov
pop
mov
pop
xor
std
sub
dec
mov
push
mov
jae
xchg
jb
add
inc
add
push
mov
lcall
aaa
shrl
dec
mov
fldl
ja
xor
cmp
adc
movb
mov
add
fwait
mov
inc
add
mov
cmpsb
xor
pop
pop
or
mov
mov
add
adc
clc
movsl
imul
cltd
das
xchg
int
bound
std
xor
testb
insb
ret
rolb
aaa
and
add
fwait
pop
sub
dec
xor
jle
pop
sahf
outsb
out
addb
idivl
ficomps
dec
cmp
insb
mov
cmc
inc
inc
add
jle
xlat
add
mov
xchg
or
inc
pusha
add
mov
push
in
add
add
arpl
xchg
fildl
lods
shrl
lcall
cmp
xchg
mov
jnp
cmpsb
mov
gs
fmull
jne
add
add
adc
pop
loopne
and
jns
cmp
addb
mov
lods
addb
xor
outsb
outsl
pop
pop
flds
cmpsb
gs
sbb
mov
cmpl
insl
add
and
pop
out
mov
lahf
test
add
cmp
cmc
loop
pop
jg
xchg
mov
sbb
and
iret
ret
addb
lods
insb
insl
jbe
add
pushf
cld
repnz
loopne
mov
clc
inc
cli
xor
and
mov
xor
lds
and
dec
mov
push
mov
sahf
sub
sbb
mov
in
mov
sub
add
aas
add
int
jns
mov
movsb
cmc
pop
push
inc
add
fs
test
pop
xchg
in
and
mov
cmp
sub
out
sbb
adc
mov
mov
notb
sbb
loope
cmp
int3
scas
insl
aas
jl
and
pop
xchg
xchg
xchg
cld
in
dec
xchg
iret
xlat
repz
out
xor
add
mov
mov
inc
add
shl
popa
add
add
mov
push
fmull
jb
leave
movb
ds
mov
xor
shr
lret
hlt
scas
xlat
jbe
inc
push
add
or
lock
adc
and
pop
mov
lds
inc
add
incb
js
inc
mov
test
pushf
lock
add
sub
pop
nop
mov
inc
js
cmc
xor
inc
add
scas
pop
cltd
push
push
cmpsb
mov
cld
cmpsl
jmp
jp
and
dec
fs
xchg
addb
and
add
lret
and
jl
mov
inc
addr16
iret
inc
add
inc
add
sbb
int3
sbb
add
rclb
jle
jle
fiaddl
add
push
inc
add
inc
add
fadd
pusha
add
loope
add
push
jo
scas
mov
rcr
je
in
into
sub
mov
add
adc
fwait
push
inc
add
push
mov
icebp
addb
add
dec
mov
xor
fsubs
inc
inc
add
inc
xchg
sar
mov
aad
xchg
xchg
insl
xchg
push
test
mov
add
add
mov
lcall
out
cmpsl
mov
lods
jl
mov
xor
add
rolb
test
and
repnz
cmp
pushf
pushf
adc
add
lods
mov
jecxz
add
sub
push
xchg
incl
aad
aam
in
rolb
outsb
rolb
xor
mov
add
push
pop
inc
jno
inc
add
iret
add
insl
inc
add
add
xchg
cld
xlat
loope
iret
gs
pop
push
cmpsb
sub
mov
outsl
dec
mov
add
xor
aad
incl
add
cmp
sub
stos
inc
add
sub
stos
int3
cwtl
dec
push
or
outsl
out
xlat
cmp
jne
jbe
mov
cmp
add
jle
popf
xor
push
jbe
add
enter
fnstcw
les
movsl
and
fidivrl
je
pop
fstl
mov
pop
push
inc
add
add
dec
aad
lock
cmpl
jnp
sbb
pop
lock
test
and
mov
xor
aam
sbb
xor
iret
outsl
jae
dec
mov
lds
daa
frstor
jo
ja
ret
push
push
mov
mov
in
xchg
fwait
mov
pusha
add
adc
addb
insb
pop
add
jbe
ficoml
pop
cmp
sbbl
in
push
xor
add
sub
add
mov
add
add
out
cmc
test
sbb
in
inc
jbe
les
roll
or
lret
fisubl
push
add
add
adc
xor
xor
inc
jbe
xor
lods
xchg
data16
fisttpll
iret
cmpsb
mov
divb
sahf
cmp
jb
mov
lret
ljmp
addb
fldcw
icebp
inc
add
xor
add
adc
add
mov
iret
jecxz
call
xchg
scas
addb
in
add
in
inc
add
mov
pushf
mov
xchg
push
fsts
pop
push
jnp
addr16
cmc
test
pop
jp
mov
ffree
add
sti
iret
cmc
icebp
pop
pop
push
fwait
xor
pusha
add
cmp
hlt
repnz
mov
clc
das
or
je
add
mov
sub
sbb
pop
push
xchg
fmull
cmpsl
or
add
out
mov
adc
mov
fnclex
les
mov
push
or
xchg
jb
icebp
int3
adc
add
leave
xchg
push
testb
ret
push
pop
and
add
outsb
inc
add
mov
test
and
ljmp
pop
bnd
xchg
lea
aaa
cmp
inc
add
mov
fdivr
sbb
pop
push
add
adc
fdivrl
push
int3
ds
inc
add
lahf
sbb
mulb
xor
cmp
inc
add
adc
aaa
sbb
add
xchg
lds
stos
or
add
push
pop
mov
or
xchg
int3
jb
sbb
jl
ljmp
sbb
out
pop
sbb
add
bnd
gs
mov
add
push
add
xor
add
add
and
mov
jmp
in
or
jg
insl
lcall
mov
dec
data16
icebp
push
test
pop
mov
inc
add
push
add
push
sub
scas
loopne
ficoms
push
jge
mov
mov
iret
cs
add
and
lea
add
cld
adc
or
in
out
inc
add
xchg
ja
ljmp
inc
add
xor
aam
sbb
or
jnp
js
and
les
sub
adc
dec
sarb
mov
dec
out
in
sbb
sarl
cs
aad
data16
jbe
loop
daa
pop
repnz
and
push
add
cmp
add
inc
add
cld
push
fwait
or
dec
in
pop
dec
cld
das
add
insb
nop
imul
movsl
icebp
and
add
clc
pop
fs
dec
stc
ds
push
fiaddl
sti
movsb
xor
cmpsl
clc
jnp
mov
inc
je
rolb
jmp
pop
ss
ret
lcall
cltd
push
pop
sub
mov
jbe
mov
out
pushf
leave
or
jae
int
add
mov
jle
bound
out
inc
add
imul
rolb
js
icebp
cwtl
ljmp
popf
lods
out
repnz
addr16
scas
popf
sbb
push
sbb
cwtl
xchg
cwtl
decl
sbb
add
clc
bound
stos
insl
jae
cli
int3
cwtl
xor
mov
rcr
mov
mov
aam
cmpsb
cmpsl
push
jnp
jns
stos
sub
push
inc
div
aas
pop
lods
dec
xlat
sti
or
adc
mov
add
add
loope
jns
add
bound
push
pop
push
or
fildll
fidivrs
lds
jp
add
lcall
xchg
inc
bound
mov
lahf
cmp
push
mov
cld
je
add
insb
mov
les
xchg
adc
mov
pop
ret
add
cltd
mov
sub
sub
mov
cmp
pop
fisubl
loopne
sub
add
add
movsl
xor
add
outsb
mov
lcall
sti
xor
adc
call
cmp
pop
sub
lods
adc
add
mov
add
add
add
sbb
int
push
jl
add
repnz
jno
and
loop
add
or
mov
fisttps
push
and
add
xor
push
lds
test
fst
pusha
add
dec
xor
popf
cli
push
add
icebp
enter
popa
adc
iret
cmp
sbb
ja
add
fwait
sti
mov
bound
or
jp
outsb
in
pop
jmp
pop
lock
mov
cmp
negb
or
inc
aas
fiaddl
test
shl
sub
push
hlt
push
or
cwtl
xor
jp
fs
jo
sarl
mov
rolb
adc
mov
jmp
push
add
repz
sbb
popa
call
xchg
pop
pop
lret
dec
ret
stc
cmc
mov
cmp
mov
jg
xor
add
gs
xor
add
and
or
fstpt
sarb
xchg
push
cmp
fwait
mov
add
sbb
outsl
movss
xor
add
out
jnp
ret
pop
lock
add
add
push
mov
cmpsl
pop
repz
xor
lcall
add
jne
js
xchg
mov
mov
lcall
dec
je
xor
aas
fistpl
movb
stos
fdivrs
out
aas
aaa
dec
ret
mov
sub
add
sarl
or
add
jnp
add
shlb
cmp
xchg
leave
fisttpll
mov
pop
out
in
jnp
mov
xor
outsl
add
cmpsl
sub
movb
sbb
aam
or
icebp
fildl
test
pop
sbb
ja
mov
pushf
aaa
add
jle
imul
mov
sub
inc
add
daa
lret
sbb
les
or
add
addb
inc
sub
scas
jg
inc
add
add
scas
clc
jno
jge
sbb
les
in
sbb
jmp
cli
jne
ret
xor
dec
ficompl
cli
jae
and
xor
mov
in
push
xchg
mov
addr16
les
push
push
addb
cltd
ficomps
out
mov
or
in
jo
movb
cmp
or
ds
fwait
push
rolb
push
adc
adc
push
mov
loope
orl
mov
add
jmp
addb
leave
rorb
inc
test
push
daa
pop
cwtl
sti
mov
or
in
das
lds
scas
inc
add
xchg
jmp
adc
cli
sub
jns
push
or
cmpsl
cli
rolb
scas
mov
mov
xor
add
jg
inc
add
lods
push
add
stos
ljmp
lret
sbb
sbb
xchg
dec
jmp
in
stos
popf
dec
xchg
test
jb
test
push
jo
add
dec
shrb
mov
stos
shl
push
dec
mov
iret
testb
pop
dec
into
leave
pop
and
pop
fisttps
out
arpl
jo
sub
lods
mov
lock
push
xor
aaa
mov
sub
outsb
pop
stc
and
std
pop
mov
testb
movsl
fbld
jl
cmp
cs
lret
xchg
enter
cmp
enter
ss
push
and
add
cmp
mov
into
mov
clc
mov
jmp
sub
popa
ret
jbe
add
mov
fs
test
sub
mov
dec
adcl
stos
scas
sbb
inc
push
pop
jbe
test
cmp
bound
and
imul
push
cmp
es
xor
and
push
leave
insb
adc
sbb
fnsave
bnd
es
cmpl
mov
jne
pop
or
cmp
push
jecxz
and
cmpsb
jnp
rolb
jge
mov
adc
mov
roll
or
addb
xor
cmc
arpl
add
mov
add
mov
test
push
add
fsubrs
shll
mov
addb
filds
jne
call
movsl
mov
mov
in
gs
pop
test
inc
sbb
jge
enter
inc
xchg
sub
add
aad
add
aaa
cmp
ret
fwait
pusha
add
add
add
into
and
cmc
addl
inc
add
and
add
into
shr
add
ja
add
mov
pop
in
pop
lods
js
ffreep
add
outsb
and
adc
jecxz
cmp
mov
ret
or
pop
aad
xor
mov
dec
xchg
cli
jge
add
or
add
pop
insb
call
test
addb
dec
xor
fbld
sbb
add
mov
add
aad
stos
xor
insb
pop
inc
add
add
repz
push
sahf
jns
add
mov
bnd
pop
cmp
and
push
mov
jne
lahf
gs
out
xlat
jb
cmp
xlat
xor
call
sub
mov
xor
stc
js
sarl
add
or
mov
clc
cld
cmp
mov
mov
mov
daa
push
ss
adc
jae
outsl
orl
inc
add
lahf
loop
mov
mov
cltd
into
iret
scas
xor
inc
add
sahf
push
pop
lcall
pop
out
fcomi
or
nop
icebp
insl
mov
mov
stc
sbb
mov
gs
pop
imul
and
lods
sbb
hlt
in
lcall
jg
pop
leave
out
js
push
push
add
add
lcall
fbld
cmpsb
cmpsb
or
movsb
icebp
xor
outsl
jmp
push
int
fs
leave
jo
cmpsb
addr16
dec
push
repz
xchg
lcall
xchg
sub
jmp
pop
and
lock
repz
add
fidivrl
les
adc
add
test
shll
enter
mov
in
xchg
test
add
movb
add
add
or
add
es
add
rolb
dec
xor
cmp
pop
adc
xchg
movsl
jae
cmp
out
sbb
iret
daa
add
mov
ret
outsb
popl
mov
or
popf
xchg
jecxz
cli
pusha
add
je
or
dec
xchg
imul
popf
xchg
sub
mov
rcll
int3
jmp
fcomip
adc
fs
push
add
jmp
roll
loop
out
outsb
data16
sub
dec
push
daa
push
aaa
hlt
mov
pop
shr
call
add
sarb
or
push
movb
jbe
xor
lods
jecxz
aam
add
rorb
and
movsl
mov
adc
dec
loop
add
out
nop
test
insb
cwtl
pop
repnz
addb
in
jns
out
enter
addb
add
aaa
movsb
fldt
movb
pusha
add
fsubs
add
int3
mov
inc
add
pop
test
xor
inc
ret
mov
jnp
rcr
fcoms
arpl
div
sbb
lods
imul
add
stc
sbb
push
cmp
inc
add
push
sub
add
inc
iret
cs
mov
movsb
mov
xchg
jle
add
nop
ljmp
inc
xchg
inc
mov
fwait
dec
mov
je
sbb
sub
aas
push
rcrl
add
jmp
inc
add
rolb
xchg
ret
cli
stos
movb
add
das
out
adc
imul
out
push
mov
push
xchg
xchg
push
mov
arpl
add
addb
xchg
mov
sub
lds
push
into
nop
aas
pop
fistps
lcall
add
bound
movsb
imulb
xor
push
add
sbb
jae
jle
std
add
jg
and
xor
cmp
lods
hlt
pop
sbb
pop
cmp
cmp
or
adc
mov
fs
xchg
mov
test
lock
inc
add
stc
mov
add
inc
sub
xor
cltd
icebp
sub
xor
add
push
or
jge
sub
out
fdivs
or
cwtl
sbb
daa
pop
addb
lea
cmp
and
mov
ss
xchg
dec
add
jl
add
pop
sbb
mov
mov
add
mov
hlt
je
add
mov
fwait
test
repz
xchg
add
movsb
lahf
mov
inc
cmp
test
sahf
dec
add
pop
or
insl
outsb
and
add
iret
stos
fnstenv
pusha
add
adc
push
or
push
xor
fisubl
jle
movsl
or
cmp
mov
divb
mov
xor
aas
lods
adc
and
jo
add
add
testl
mov
icebp
mov
add
add
add
rorb
rolb
add
sub
or
icebp
iret
fiadds
repz
and
pop
mov
stos
pushf
fsubrp
mov
aaa
sub
push
jecxz
ret
mov
add
adc
add
loop
nop
push
add
int3
fisttpl
push
add
push
add
dec
cltd
lods
outsb
dec
xor
add
xor
add
push
aaa
ss
sbb
mov
sbb
and
shll
add
in
push
push
out
data16
cwtl
lock
or
mov
movb
arpl
lret
adc
int3
fisttpl
mov
mov
mov
or
in
test
push
mov
inc
add
adc
stc
cmp
adc
mov
push
mov
inc
add
ja
ja
pop
dec
mov
sub
fstpt
adc
rcr
es
xchg
dec
or
push
xchg
dec
data16
xchg
xchg
stos
mov
adc
dec
pop
sub
xchg
sbb
add
das
addb
pop
xor
sahf
push
push
pop
dec
sarl
jp
xchg
rcrl
outsb
adc
add
dec
cmc
repnz
rolb
mov
fs
xchg
sbb
and
adc
scas
xor
add
sar
and
jb
fstp
cwtd
push
xlat
enter
enter
dec
es
pop
negb
cmp
cltd
pop
loop
cmp
ror
xchg
scas
stos
pusha
add
add
lods
mov
pop
xchg
xor
repz
imull
les
mov
loopne
jp
shlb
scas
jno
ljmp
call
into
mov
push
dec
mov
jp
cmp
sbb
cmp
sub
movsl
mov
dec
in
xchg
dec
mov
cmpsb
inc
add
gs
mov
add
adc
ret
jp
je
ljmp
cmp
adc
int3
iret
stos
xor
ljmp
ja
in
pop
mov
stc
sub
call
add
inc
sbb
dec
mov
sbb
test
sub
inc
add
icebp
loope
decb
and
xlat
xor
cs
add
imul
add
or
sub
dec
popf
call
aad
push
inc
xor
sbb
xchg
fbstp
outsb
loopne
inc
add
xor
outsl
mov
jns
xchg
or
cmp
inc
add
inc
add
out
push
ja
imul
mov
mov
sub
jno
lock
add
pop
jge
jge
jge
add
into
ret
clc
add
mov
rclb
cli
fdiv
jae
mov
into
daa
outsb
aaa
out
add
or
add
pop
push
in
aam
cltd
xor
add
push
mov
mov
pop
and
mov
lcall
cmp
push
jg
cmpsl
xlat
hlt
lret
inc
add
iret
dec
cmpsb
pop
inc
add
stos
and
push
adc
mov
ret
dec
jle
mov
rcr
jb
add
jae
addr16
in
pcmpgtb
xlat
lds
xchg
sarb
xchg
cwtl
ret
mov
bound
or
mov
into
and
adc
push
add
adc
sbb
push
test
sub
xchg
cmpsl
mov
scas
adc
add
xor
inc
movsb
insl
push
jo
xor
pop
jp
jae
orl
pop
mulb
mov
xchg
fcoms
add
push
lds
mov
lret
dec
jp
sub
clc
fwait
push
lods
imul
sub
xor
or
sub
rclb
push
movb
cmp
into
jg
mov
imul
loopne
push
push
enter
push
sub
mov
out
xor
push
push
in
test
push
mov
flds
dec
lret
xchg
lcallw
loope
loopne
iret
lcall
and
and
push
add
add
pop
shll
repnz
cmpsl
int3
add
sbb
int
bound
hlt
jne
lahf
inc
add
add
adc
lea
push
rcrb
pop
or
ja
je
add
in
stos
out
aas
pop
jge
inc
bound
or
add
adc
mov
jmp
add
aad
outsl
ss
cmpsl
adc
add
sti
mov
add
sahf
stos
shll
and
in
enter
sub
xchg
ja
dec
inc
in
dec
xchg
aas
in
mov
in
test
push
lret
push
dec
fmull
rcrl
mov
mov
lods
and
add
ja
int
sarb
daa
mov
lea
mov
sub
loope
mov
adc
mov
ret
addb
add
add
cli
xchg
sbb
cs
stos
repz
mov
xor
push
xor
xchg
addb
sub
lods
mov
inc
inc
jae
mov
and
cmp
jg
add
movsl
add
mov
push
add
lea
cmpsb
pop
ret
addr16
bound
sti
mov
rolb
enter
add
mov
sbb
lret
insb
test
icebp
ljmp
nop
xor
add
mov
mov
lea
or
ja
add
cmc
bound
and
pop
imul
sbb
and
enter
pop
repz
add
inc
mov
push
js
add
roll
outsb
int3
push
test
test
add
sub
pop
addr16
loopne
and
jg
add
arpl
out
mov
xor
cmp
mov
or
and
mov
adc
mov
mov
icebp
push
push
dec
outsl
mov
dec
adc
dec
xchg
pop
jb
fs
lahf
pusha
add
mov
cld
inc
gs
fiaddl
dec
cmp
jle
mov
movb
mov
xchg
adc
cmpsl
cmp
das
shl
inc
sbb
inc
add
sub
pop
out
test
out
xchg
push
