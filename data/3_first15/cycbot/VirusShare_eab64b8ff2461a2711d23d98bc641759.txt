neg
in
or
dec
mov
ret
popa
sarl
aas
addb
push
lods
test
add
cmc
in
mov
xor
iret
iret
repnz
sub
cltd
cwtl
dec
mov
lods
test
adc
test
pop
push
xchg
xor
push
fstps
shll
sbb
std
test
and
pusha
add
in
dec
aam
jg
mov
pushf
pop
mov
fstpt
jle
rcll
mov
leave
das
mov
bound
xchg
int
je
add
add
mov
mov
daa
or
adc
imul
push
imul
sahf
jl
jle
add
mov
lahf
iret
ja
add
jae
xor
cmc
pop
addb
cmp
lahf
stos
sbb
xchg
sub
in
push
les
cmp
jmp
fnstenv
enter
pop
iret
mov
sbb
lods
scas
and
xor
in
mov
mov
cwtl
cmp
and
stc
mov
push
add
mov
jb
sbb
ret
loope
add
inc
add
push
shl
lret
mov
add
dec
fldl
xchg
popa
or
mov
loopne
scas
mov
dec
sub
add
lea
lret
pop
sbb
rorl
adc
in
fwait
test
add
cltd
or
dec
cmp
xor
mov
call
push
call
or
xchg
dec
dec
loop
imul
xchg
sub
inc
pop
mov
add
cli
mov
and
inc
add
test
std
popa
dec
adc
lea
dec
fildl
xchg
cmpsl
and
inc
sub
pop
pop
push
xor
loopne
addb
nop
ret
outsb
push
aad
fcomps
jmp
push
push
out
mov
jle
add
cmp
cltd
inc
add
and
enter
add
sbb
and
cmp
in
inc
add
in
cmpsl
push
xchg
rorl
push
add
add
push
imul
jo
lea
ds
fidivl
jo
sti
decl
add
mov
andl
jecxz
cmpsb
int3
cmp
mov
cmp
fwait
add
into
fmul
push
movsb
ret
into
jl
call
pop
jb
push
sti
mov
add
aaa
xchg
push
cmp
xchg
icebp
das
mov
jne
addb
xor
test
push
mov
rolb
pop
mov
cmp
mov
lods
mov
xor
movb
push
sbb
arpl
imull
das
popa
mov
iret
loope
push
insl
mov
mov
lods
jle
xor
inc
out
mov
add
and
add
pop
push
xor
and
jg
add
add
xchg
shr
popa
pop
jp
add
sar
pushf
mov
mov
mov
and
push
addr16
xor
push
imull
jg
push
and
and
fildl
outsl
stos
add
xchg
stos
xlat
adc
add
adc
cmp
arpl
icebp
les
movsb
lret
mov
add
shrb
push
add
iret
xchg
adc
enter
test
jne
rolb
rclb
test
stos
outsb
dec
fidivs
fbld
lret
es
and
in
addb
data16
mov
push
ds
or
add
rcrb
xchg
sub
and
jne
and
out
scas
mov
pop
add
mov
mov
push
hlt
cltd
out
add
mov
push
into
popa
cwtl
fbstp
movsb
out
jo
das
mov
sar
or
add
rorb
mov
xlat
out
sub
jl
mov
jne
pop
adc
in
xorl
outsb
mov
jmp
nop
dec
or
xor
mov
mov
sbb
add
fstpt
add
loope
dec
mov
xor
sub
inc
jecxz
pop
mov
xchg
popf
xor
add
pop
cpuid
fsubrp
mov
fsts
stos
fwait
xchg
xchg
cs
mov
mull
test
or
add
sbb
ret
aad
pop
jae
sti
jnp
mov
ror
xor
mov
add
lds
and
inc
sbb
das
xor
sub
in
pop
add
es
add
add
mov
mov
add
push
cmp
cmp
add
add
add
jae
roll
lahf
sub
push
add
sbb
push
fimuls
sub
add
mov
out
xor
add
pop
jb
addb
or
xor
add
push
push
add
in
push
and
jno
nop
inc
add
sub
cmpsl
call
int
mov
xor
fists
push
imul
insb
imulb
jns
mov
mov
fidivrl
add
in
pop
dec
xor
js
add
jp
add
cmp
jp
push
pop
mov
fwait
insl
push
fwait
mov
lret
mov
add
add
push
jg
push
pop
push
out
jecxz
loopne
xchg
addb
cwtl
mov
or
xchg
xor
addb
lods
icebp
adc
mov
adc
xchg
mov
push
stc
or
inc
add
das
jle
addr16
mov
add
mov
fimull
fstpl
hlt
push
sbb
mov
push
jg
fyl2xp1
xor
sub
pop
mov
add
in
jmp
mov
int
mov
pusha
add
frstor
jb
lds
pop
stos
mov
inc
add
or
sub
add
pop
cwtl
lret
jb
mov
add
mov
pop
sahf
jl
inc
add
ja
add
sub
cmp
icebp
pop
movb
pop
scas
inc
mov
jp
inc
add
repz
cmp
jmp
repz
sti
psadbw
faddl
inc
add
and
testb
sub
sub
dec
cmp
aam
pop
subl
push
insb
and
mov
pop
sub
nop
movsl
xlat
and
shlb
in
lods
icebp
jne
xor
loopne
add
pop
inc
add
push
push
leave
pushf
gs
add
clc
jno
fs
mov
jmp
addb
into
sub
mov
je
pop
xchg
mov
out
ja
mov
inc
add
ret
imul
push
jp
les
add
cmp
test
xchg
ljmp
mov
add
jns
iret
add
lock
xchg
test
sub
add
mov
lods
das
dec
ret
bound
xor
and
rolb
jb
dec
enter
lds
add
mov
add
push
xchg
and
pop
bound
pop
rol
add
xor
add
andl
cld
inc
or
ds
mov
xlat
sbb
pop
es
inc
add
mov
outsb
push
xchg
mov
cmp
push
fisubrs
xchg
daa
add
xor
xchg
pop
add
lods
and
mov
repz
andl
int
outsb
adc
out
inc
add
add
addb
notl
in
std
xchg
or
scas
dec
lock
or
jp
add
mov
hlt
inc
push
push
or
mov
addr16
sub
mov
cli
xlat
inc
add
push
lods
ds
xchg
mov
add
add
xchg
xchg
test
or
outsl
mov
push
test
add
cwtl
pop
cltd
add
push
int3
lock
es
xchg
push
sub
ret
push
arpl
lahf
test
mov
int3
mov
push
add
or
call
iret
das
cmp
add
or
ss
mov
les
test
scas
fidivrl
add
testb
add
fstl
les
and
xor
add
xor
cmpsl
push
rcl
shr
mov
mov
push
movsl
iret
cmp
addb
mov
dec
pop
dec
xchg
cmp
dec
dec
and
xor
add
mov
inc
dec
inc
add
clc
loop
add
mov
iret
lret
icebp
and
fwait
mov
mov
xor
outsl
add
inc
jecxz
jp
pusha
add
fsubl
add
sub
repnz
outsl
pop
pop
in
movsl
add
repnz
add
les
mov
leave
pop
repnz
xor
add
pop
inc
add
inc
add
and
orl
xchg
out
cltd
push
sub
imul
xlat
hlt
int
cli
pop
xlat
cwtl
mov
loop
xor
mov
aas
out
or
and
lods
addb
in
std
test
xchg
inc
addb
out
int3
xlat
fst
mov
inc
add
or
pop
outsb
cmp
psllw
sub
in
ret
loope
jbe
add
mov
repnz
sub
sub
add
aam
add
daa
rep
das
jnp
stos
movsb
loopne
adc
xor
pushf
pop
fucomi
test
xor
lcall
add
es
imulb
arpl
xchg
or
add
inc
out
pushf
mov
xchg
out
fwait
repnz
add
add
add
push
cwtl
push
mov
or
mov
xchg
daa
jmp
pop
mov
fst
pop
mov
add
sbb
sbb
mov
rcr
outsb
lea
out
out
aad
cmp
add
xor
ja
lcall
add
push
popa
sub
sahf
movsl
data16
ja
adc
das
lods
je
add
add
clc
out
aad
idivb
test
push
pusha
add
stos
inc
add
xor
mov
popf
int
sbb
jbe
or
in
add
push
test
xchg
stos
inc
leave
lods
push
sti
shll
cmpsb
xor
add
sarl
add
in
cmpsb
xchg
hlt
cmpsl
push
in
mov
loope
nop
cld
popa
rcrl
add
lcall
sub
rolb
lret
fisttpll
icebp
mov
mov
js
outsl
test
add
call
idivb
inc
add
iret
dec
adc
addr16
sbb
rclb
pushf
fsubl
xor
addb
sub
sub
outsl
ds
imul
leave
mov
jns
aaa
push
cli
subl
or
repnz
enter
aas
adc
test
push
scas
int3
push
fsubs
test
dec
ljmp
neg
mov
adc
mov
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
ds
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
or
xchg
lea
sub
xacquire
pop
add
mov
cs
push
push
lret
jmp
add
add
mov
lret
in
insb
pop
les
clc
ret
dec
mov
jae
stc
dec
scas
mov
insl
pop
push
sahf
xor
into
add
pop
js
shl
push
mov
xchg
test
aas
mov
dec
insl
mov
push
xor
or
insl
stos
in
add
inc
addb
push
or
add
jl
pop
push
insl
jno
cwtl
rolb
mov
add
pusha
add
addb
pop
adc
stc
minps
xor
fwait
cld
loope
rcll
cmp
sub
shl
dec
dec
jb,pn
test
mov
add
outsb
bound
scas
gs
add
cwtl
xor
jno
loop
dec
les
daa
shll
add
ret
add
add
add
adc
xor
and
shl
mov
mov
jb
inc
bound
loop
fadd
add
nop
or
pusha
add
movsb
stos
xlat
test
add
int3
test
in
popf
ds
sbb
lret
sahf
les
hlt
in
inc
xchg
mull
shrl
push
movb
lcall
mov
aaa
and
mov
dec
mov
mov
movsb
sbb
mov
cmp
pop
dec
ss
pushf
mov
mov
inc
add
lds
pop
xchg
push
jecxz
cltd
fildl
xor
shl
popa
sti
test
sub
sbb
scas
fcoml
daa
daa
sbb
popa
scas
repz
add
ja,pt
int
or
ret
in
stos
js
lds
bound
fs
mov
test
shl
mov
mov
push
test
push
ss
and
lods
std
jnp
lea
push
int3
in
movsb
mov
notl
lret
push
xor
movsb
int
sub
jl
shll
imul
cli
mov
add
mov
movb
add
das
sub
leave
push
test
mov
add
lods
jb
in
add
arpl
dec
dec
flds
xchg
movsb
push
sahf
dec
add
cmc
add
add
cmp
add
lahf
cmp
aaa
jb
adc
arpl
loop
cmpsb
daa
int
sbb
mov
inc
fs
xor
std
or
cmp
lock
imul
add
push
enter
out
sub
xchg
fidivrl
add
add
mov
dec
xchg
xor
fstl
or
sbb
dec
xor
dec
xchg
adc
in
sahf
in
gs
xor
ret
jae
mov
inc
pop
repnz
sbb
xchg
mov
push
lahf
sub
mov
add
add
add
in
or
movb
dec
jb
inc
xchg
or
test
aad
nop
adc
js
mov
mov
pop
je
add
adc
fwait
sbb
imul
add
lret
inc
add
pop
lods
add
pop
sub
xchg
add
scas
jns
jne
dec
lods
and
das
clc
mov
xlat
push
mov
cmp
cs
adc
mov
add
lcall
pushf
add
mov
push
es
dec
call
cmpsb
mov
and
sahf
pop
add
dec
test
xor
leave
int3
sbb
mov
lods
movb
xor
xchg
xor
mov
sbb
cmp
sbb
pop
inc
push
filds
jp
sub
inc
add
je
imull
adc
test
or
ljmp
add
cmc
add
test
scas
push
sub
push
aas
scas
push
add
ja
push
add
mov
cmp
je
je
das
cmc
mov
int3
and
sbb
fsubs
addb
testb
ds
jno
jmp
idiv
dec
jmp
pop
sub
and
test
iret
movsl
leave
jecxz
fbstp
sarl
mov
xchg
xchg
int3
mov
mov
add
hlt
nop
and
xlat
inc
shll
and
imul
jae
adcl
mov
add
mov
mov
neg
ss
adc
xchg
test
mov
insb
leave
jg
xchg
scas
nop
loope
adc
rolb
xchg
xchg
sub
popf
into
ljmp
and
sub
cmp
stc
xor
repnz
adc
add
ja
add
sbb
icebp
repz
adc
mov
sub
dec
out
shlb
stc
cld
fmull
pop
fldenv
xchg
fisubs
jl
aad
mov
in
jae
popf
mov
jo
sub
mov
cli
sub
mov
ficoms
push
sbb
shll
and
xlat
and
in
ds
pop
pop
movb
psrlq
data16
mov
movsb
inc
add
icebp
in
ret
dec
loop
rclb
or
push
xchg
arpl
imul
shll
add
test
jb
push
lods
imul
sub
mov
in
shrb
in
icebp
inc
add
dec
insb
and
je
mov
jecxz
or
addb
and
push
dec
add
orl
roll
rolb
pop
ror
xchg
lods
sbb
pop
pop
push
add
adc
mov
cmc
fisubrs
das
inc
add
popf
insl
inc
add
sbb
mov
stc
xchg
subl
in
cmpl
sbb
adc
lcall
sbb
mov
add
gs
add
jecxz
pushf
into
addb
mov
add
xor
sti
sbb
pop
xlat
xor
jl
add
xchg
jo
sub
or
xor
mov
repz
add
cmp
cmpsb
rcrb
les
test
loopne
add
hlt
repnz
push
push
roll
add
sahf
lret
fptan
cmp
or
mov
inc
add
mov
inc
jmp
add
add
imul
push
add
jnp
pusha
add
icebp
scas
rorl
imul
mov
ja
add
roll
xchg
mov
std
ljmp
ljmp
addb
dec
fistl
adc
lret
cmp
pop
jp
adc
aad
jmp
bnd
mov
add
dec
mov
sub
dec
mov
and
and
fimuls
test
call
arpl
pop
inc
ljmp
xchg
rcrb
ds
fstpl
stos
xor
xor
sub
daa
jae
cmpsb
mov
in
dec
mov
fstpt
mov
pop
subl
aad
push
xchg
mov
in
pop
jl
pop
sbb
pushf
dec
lret
cmp
hlt
fwait
inc
add
pop
jb
add
clc
ret
xor
adc
and
mov
adc
adc
xor
shl
mov
lret
inc
pushf
cmc
push
and
dec
xchg
and
add
mov
add
add
add
roll
dec
jp
jle
mov
add
add
aaa
inc
add
sbb
cmc
addb
pop
and
fucom
xchg
call
mov
jle
or
xchg
xchg
movb
dec
xchg
aad
sub
pop
lea
mov
shlb
add
clc
les
rol
mov
scas
or
inc
add
int
add
push
addb
add
icebp
mov
std
loope
mov
sub
xchg
movsl
or
je
mov
cmc
adc
add
addb
gs
mov
clc
mov
lods
cmp
clc
sahf
fsubl
add
nop
lds
push
daa
lret
and
nop
dec
pop
mov
jb
sbb
les
nop
cmpsb
push
test
call
mov
js
cmp
mov
lods
loope
inc
add
loop
xchg
lods
adc
adc
add
add
xchg
clc
fdivs
add
lds
jmp
in
mov
shrb
imul
push
xchg
mov
dec
adc
roll
leave
cmpsl
jecxz
adcl
adc
push
rolb
add
jmp
lods
loopne
cmp
cmp
cwtl
jns
jmp
loope
mov
sub
outsl
and
mov
mov
jle
loope
sbb
imulb
not
movsl
shrl
mov
insl
scas
cmp
rolb
pusha
add
insb
ljmp
fnclex
push
lahf
popf
dec
mov
es
pop
outsb
mov
fs
test
push
shlb
add
or
push
inc
mov
jp
stos
xor
add
icebp
sub
dec
lods
xchg
jbe
sub
mov
cli
sbb
mov
jecxz
sbb
mov
jns
pop
popf
adc
jp
dec
cmp
pop
mov
movb
enter
push
dec
and
lret
aaa
ss
jl
jl
repnz
add
jno
bound
out
adc
add
sub
mov
rcr
loop
inc
mov
stc
or
sbb
icebp
lahf
pop
pop
ss
movb
fildll
aaa
rcll
notb
dec
cmp
shrl
outsb
lock
and
or
test
adc
xor
add
je
sbb
xor
arpl
xor
loope
push
stc
scas
and
lcall
xlat
sbb
out
pop
mov
rolb
out
add
push
pop
lret
mov
xor
js
leave
xchg
bound
gs
fcomps
fiaddl
add
xchg
fwait
add
push
fildll
pushf
add
mov
mov
fsubr
push
or
sbb
mov
pushf
insl
pop
test
clc
test
push
subl
repnz
inc
and
popf
mov
cmc
inc
add
negb
pop
mov
mov
jmp
or
addb
xor
test
loope
mov
xor
addb
or
add
pop
mov
sahf
push
mov
sub
mov
in
leave
jg
fsub
pop
xor
roll
and
cmc
xchg
mov
push
and
jo
fmuls
mulb
ljmp
or
add
cmp
loopne
dec
mov
test
xlat
jns
movb
movb
cmpsl
cvttps2pi
pop
das
jecxz
jmp
lds
add
jge
arpl
sub
sub
dec
in
das
fstp
mov
es
test
aad
mov
out
ffree
outsl
fidivs
add
adc
pop
shll
mov
je
and
divb
fimuls
ss
movb
xorl
add
push
xor
bound
leave
inc
jge
and
mov
movb
adc
pop
jl
jecxz
scas
push
or
int
dec
xchg
adc
fisubs
fs
btrl
dec
lock
and
sahf
mov
aaa
aaa
iret
inc
xor
iret
lods
cs
ret
sub
and
jle
sbb
xchg
inc
add
add
aaa
jne
add
test
xor
insb
push
add
sbb
out
das
jl
lock
test
cld
stos
mov
push
or
data16
sbb
mov
xchg
insb
jl
fstpt
fiaddl
sti
pop
popa
negl
ret
mov
orl
ror
movsl
je
gs
sbb
or
mov
nop
lcall
add
loope
add
or
test
add
sbb
add
insb
add
xchg
cs
addb
pop
popf
fmuls
jg
ds
stos
les
scas
push
mov
xor
add
lret
mov
sbb
idivb
mov
mov
xchg
cmp
iret
lret
add
imul
xchg
insl
adc
mov
sbb
cmp
out
loopne
adc
repnz
push
std
mov
aam
cmpsl
xchg
or
add
and
adc
add
or
cwtl
pop
scas
ror
std
out
mov
imul
mov
mov
xchg
cwtl
ds
and
out
insb
mov
scas
inc
push
test
mov
xor
push
pop
and
jp
jg
in
push
ljmp
sub
decb
rcrw
add
mov
lret
ret
arpl
inc
cmp
bound
iret
test
jnp
scas
xchg
add
js
mov
add
or
jle
lods
cmc
cmp
cld
push
xor
add
movsb
cmp
pop
test
rolb
mov
cwtl
or
push
add
jle
rcrl
push
dec
hlt
outsl
into
cmp
jge
mov
fiaddl
jae
ja
add
push
sub
and
adc
sahf
fiadds
pop
andl
push
out
lods
mov
dec
jb
or
mov
roll
and
xor
fwait
int
inc
adc
push
add
push
shl
push
add
adc
insb
cmp
addb
sub
inc
add
add
xor
mov
and
inc
add
sarb
add
out
add
cwtl
mov
mov
int
ffreep
add
mov
or
int
and
and
lcall
nop
lds
movsb
mov
add
and
adc
imul
arpl
lods
mov
fdiv
and
and
mov
fdivrl
insl
add
or
mov
jle
repnz
mov
insb
filds
aam
mov
jge
cmp
fstl
repz
frstor
in
lret
push
xchg
and
add
popa
mov
mov
pop
xchg
cmp
jns
mov
and
shll
or
cld
les
sub
mov
sub
and
add
xchg
mov
mov
pop
mov
add
inc
add
sbb
stos
mov
add
push
idivl
ja
or
adc
inc
mov
push
sbb
push
addr16
cltd
xor
cli
cs
inc
add
add
inc
add
ret
scas
in
loop
shll
in
jge
ja
std
jb
add
lock
insb
pop
push
add
pop
push
pushw
or
pop
jle
int
xor
in
pop
or
jle
adc
cmp
jnp
rol
add
aaa
mov
int3
or
insl
out
int
fs
dec
sarl
bound
and
xor
paddsw
fcoms
fs
dec
lea
sub
les
sarl
cmpsb
icebp
sbb
mov
jmp
mov
add
mov
test
xor
loopne
mov
inc
add
cmp
out
mov
mov
je
pop
cmpsb
cmpsb
insl
mov
or
test
add
fnsave
jae
xlat
test
jnp
adc
dec
jbe
addb
mov
sbb
push
mov
mov
push
aaa
jmp
addb
ret
sbb
fldcw
and
sbb
inc
add
add
cmp
test
in
sbb
or
mov
inc
add
movb
loop
lods
inc
fbstp
daa
sub
int
add
ficoml
enter
add
add
aam
mov
mov
add
inc
add
negb
add
nop
lret
cli
push
jmp
leave
loopne
xchg
dec
rolb
sahf
stos
int3
and
enter
add
mov
jns
mov
popf
insb
fst
pop
mov
out
add
je
xchg
sbb
inc
adc
js
je
loope
sbb
xor
rolb
or
movsb
flds
mov
mov
loope
clc
xor
inc
adc
std
into
pop
ret
fcoms
rcrl
sarl
and
ret
inc
add
push
ficomps
movsl
jnp
pushf
movsb
mov
movsl
add
push
dec
sub
push
fcom
mov
push
movb
cmp
ffreep
stc
mov
int
pop
cmp
enter
or
in
fimuls
in
cmp
lret
mov
inc
add
jae
pop
mov
cltd
test
addr16
mov
sub
xor
add
pop
push
aaa
shrb
mov
les
rolb
xchg
inc
add
xchg
shl
repz
mov
add
insb
cs
test
dec
push
add
jge
je
rolb
fwait
addb
mov
inc
outsb
stc
sub
push
jns
icebp
and
into
sbb
add
lret
push
xchg
add
jmp
and
popf
nop
test
mov
enter
mov
jo
add
sbb
add
jbe
lret
imul
add
pop
push
lret
cmpsb
mov
jmp
inc
add
scas
push
daa
mov
push
push
or
add
cmc
negl
lret
push
xor
sbb
aas
ds
jp
sub
nop
sbb
ret
js
cmc
push
insl
push
or
push
repz
mov
in
shrl
add
mov
or
mov
cmc
pop
sbb
ret
sub
push
sbb
cmp
or
in
xor
xor
call
fisttpl
vpandn
adc
jmp
lods
xchg
or
in
xor
add
mov
xlat
jns
mov
addb
xchg
loop
addb
push
add
pop
sbb
scas
dec
jge
fwait
int3
aad
add
loope
rcrl
jp
addr16
pop
int
ficoms
inc
add
call
out
pushf
or
or
dec
adc
dec
adc
rolb
pop
inc
add
int3
jmp
jne
cmp
dec
dec
pop
xor
sub
mov
nop
cmovs
add
inc
sti
ret
mov
in
lret
pop
addb
jl
sti
pop
xchg
fldl
inc
inc
xor
adc
in
in
adc
in
add
xchg
dec
push
mov
sbb
fildl
add
frstor
filds
insb
push
xchg
hlt
xchg
clc
xorl
aam
add
jo
add
pop
stos
and
call
push
outsb
fistl
adc
pop
push
jbe
popa
fistps
add
lret
pop
cld
xchg
loopne
fs
add
add
push
add
mov
inc
add
testb
sbb
mov
mov
adc
inc
add
into
lock
push
repz
and
cmp
fisttpll
add
or
sti
dec
push
lret
sbb
aas
push
ljmp
sbb
fcomps
cmp
shll
lahf
rcrb
ds
movsl
fisubrl
dec
and
je
add
jp
mov
push
je
or
push
add
lahf
fcmovbe
icebp
iret
adc
mov
lock
enter
xchg
in
jg
lahf
out
rcl
jne
sbb
push
xchg
jge
add
jge
cmp
lcall
pop
sub
add
push
push
mov
loope
dec
fwait
or
push
add
rolb
jo
addb
fwait
sub
pop
xor
sub
add
addb
add
pusha
add
leave
xchg
lahf
and
repz
repnz
cwtl
rol
add
data16
hlt
xchg
gs
pushf
inc
add
inc
add
add
fsubl
jno
inc
or
cwtl
je
test
cld
bound
scas
lahf
mov
js
mov
pop
xlat
adc
or
mov
ss
mov
add
test
sbb
fisubrs
rcll
inc
or
cmp
mov
cmpsb
xor
lahf
xor
mov
das
rcr
inc
icebp
add
lods
pop
mov
in
jne
es
sub
mov
imulb
xchg
les
js
cs
test
out
outsb
adc
sbb
inc
add
negl
subl
iret
jg
add
and
test
jo
cmp
inc
sbb
bndstx
out
mov
pop
hlt
xchg
aas
cli
outsb
sub
ud1
inc
add
jno
add
push
add
push
repnz
aas
aaa
out
xlat
pusha
add
mov
jmp
int3
push
repz
cmp
and
mov
xchg
jecxz
jmp
ret
call
lahf
cmp
sub
call
mov
aam
cmp
and
jp
cmpsl
shrl
dec
cmpsb
jmp
scas
inc
lret
shl
or
cltd
or
mov
push
sbb
lea
adc
in
test
adc
fwait
xor
pop
sub
int
add
les
push
lret
cmp
outsb
outsl
push
sbb
aam
testb
inc
add
shrl
pop
jl,pn
stos
cmp
add
add
aaa
xchg
cmc
sbb
add
push
or
test
xor
adc
add
sahf
mov
out
scas
mov
mov
mov
add
cld
pop
inc
add
adc
jno
test
les
dec
dec
sub
cmpsb
jge
adc
sti
dec
xor
push
mov
imul
leave
sub
gs
jns,pn
stc
movsb
pop
fimuls
and
mov
mov
mov
xchg
push
push
cld
popf
pop
outsl
ret
push
pushf
cmc
push
lds
repz
imul
jne
add
lcall
adc
add
das
inc
add
mov
mov
xor
iret
lds
adc
decl
mov
movsb
and
shrl
lahf
pop
mov
inc
add
adc
add
dec
push
jbe
push
xor
test
fsubrl
ljmp
arpl
scas
roll
daa
in
push
cltd
pusha
add
pop
nop
pop
sahf
sbb
jp
pop
addb
stos
and
pop
ljmp
out
in
adc
and
xchg
lds
gs
jo
lods
out
xor
xor
out
sub
jmp
ficoml
add
ja
add
adc
nop
icebp
mov
je
into
or
xchg
fucomi
cmpsl
mov
pop
xchg
dec
rcll
outsb
sub
push
mov
aas
cmp
push
aaa
inc
add
das
and
fwait
sbb
add
add
inc
daa
push
mov
fadds
iret
lcall
neg
aad
out
lds
dec
add
pop
fwait
mov
push
ss
pop
test
call
test
add
popa
mov
fnsave
or
int3
sbb
jnp
idiv
jecxz
inc
insb
mov
dec
mov
arpl
lds
push
add
add
mov
adc
add
adc
pop
or
hlt
xchg
cs
mov
into
sub
xchg
mov
bound
repnz
mov
mov
fsubrl
add
cli
xchg
xchg
decb
in
les
add
adc
pop
adc
add
call
mov
cld
les
sarl
add
aad
mov
inc
add
mov
mov
mov
mov
xchg
dec
mov
lahf
xchg
hlt
ret
pop
or
pop
mov
gs
in
iret
scas
fcom
cmp
pop
aad
cmpsl
rorl
aam
je
movb
fwait
cmpsl
outsb
lret
mov
and
xor
inc
add
in
mov
push
push
mov
pop
xor
push
jae
stos
mov
inc
scas
adc
cwtl
sbb
aad
pop
fdiv
push
clc
loope
and
xchg
dec
loope
xor
addb
je
je
mov
or
sbb
mov
sub
mov
add
push
or
pop
pop
pop
push
sbb
adc
add
mov
fisttpl
les
cwtl
mov
xchg
in
push
pop
jp
mov
add
push
mov
sbb
call
movsl
cmp
in
movsb
popf
sbb
clc
andl
bound
sub
mov
arpl
or
not
sub
dec
lahf
push
mov
dec
xor
sbb
jb
daa
out
mov
mov
adc
mov
sub
lods
xor
add
mov
push
adc
into
mov
es
je
stc
test
aaa
and
xor
or
jp
bound
repz
inc
add
cs
lds
dec
sbb
xchg
mov
lahf
in
or
jae
add
cmp
leave
mov
push
mov
add
add
push
or
jbe
xchg
add
ja
fdivrl
mov
dec
push
addb
enter
imul
stos
lret
addl
push
sub
pop
cli
mov
add
pushf
xchg
xchg
sarl
jb
add
inc
add
jnp
adc
xchg
shrl
cld
movsl
std
xor
xor
out
mov
addb
push
rcr
sbb
stos
cmpsl
jl
outsl
test
add
xor
enter
xchg
test
outsb
xchg
fnstenv
xchg
xchg
mov
push
movsb
out
lea
insb
xor
xor
add
or
fidivrl
scas
clc
test
xchg
jae
cmp
xor
push
jb
div
cld
cmp
xchg
add
fs
push
add
dec
fdivrs
les
scas
movb
xchg
jmp
sub
add
loopne
cmc
lahf
scas
icebp
inc
aam
lock
lahf
sub
mov
mov
dec
je
sbb
das
out
mov
out
outsl
inc
pop
out
pop
leave
xor
repnz
cli
push
outsb
fs
lock
sbb
xchg
ficompl
pandn
neg
movsl
leave
in
subl
cli
jnp
add
test
cmp
jae
jo
lods
xchg
pop
sub
stos
or
pop
push
push
stos
addr16
dec
movb
pop
fcompl
cwtl
sldt
jo
mov
mov
cmc
repz
add
cmc
clc
daa
clc
mov
add
inc
pop
push
in
xor
mov
add
xchg
out
fmuls
pop
xchg
dec
pusha
add
sbb
mov
sarb
pop
cli
jl
and
xor
test
jecxz
jne
cmp
pop
dec
mov
or
pusha
add
nop
mov
stos
pusha
add
push
test
stos
or
inc
add
fistpl
shrl
push
add
cmp
ja,pn
jl
insb
inc
add
mov
jns
xchg
lds
push
add
xchg
and
add
in
pop
xchg
rcrl
je
inc
add
insb
mov
and
push
std
inc
pop
mov
and
or
sbb
add
add
mov
pop
testb
rolb
jmp
add
cmp
stc
mov
dec
cli
in
adcl
mov
jnp
add
inc
add
fnstenv
pop
xchg
hlt
test
out
in
fidivrl
jmp
push
jg
adc
add
test
add
inc
add
ret
sub
les
dec
push
ret
lock
push
push
mov
addr16
inc
addb
ss
push
mov
xor
mov
mov
xchg
jl
pop
imul
dec
aas
pop
add
mov
pop
fsts
push
mov
jmp
mov
cmp
push
cmpsl
addb
ret
add
test
scas
push
xor
add
add
sub
add
mov
cmp
xor
or
sub
dec
negb
mov
xchg
les
rorb
add
xchg
add
out
xor
jmp
lret
and
inc
add
add
inc
popa
out
cmp
shrl
test
or
jb
imul
mov
dec
aam
sbb
aam
sahf
pop
xor
inc
lods
outsb
aad
push
stc
in
mov
insl
mov
adc
adc
inc
add
lods
jno
repnz
adc
add
leave
pop
xchg
ror
push
popf
pop
mov
push
rolb
push
xchg
bound
push
pop
ljmp
mov
lcall
mov
jnp
push
popa
mov
jge
ret
mov
jbe
es
out
ret
test
into
daa
popf
add
leave
and
fadds
mov
mov
mov
rcll
cmp
addb
std
mov
push
in
aad
xor
push
mov
add
add
jg
mov
fnstsw
cmpsb
xchg
xor
movb
fcomps
fcompl
mov
mov
add
pmaxub
sub
lret
imul
push
cmpsl
jl
cmp
mov
push
add
rcrb
xchg
stos
sbb
add
out
adc
movb
ret
mov
xchg
loope
dec
movsb
inc
pop
fs
ret
pusha
add
pop
push
jno
pop
inc
out
ljmp
or
nop
dec
lret
js
mov
add
mov
pop
lods
popf
pop
fdivr
test
pop
add
push
popa
ja
inc
add
les
jns
int
mov
add
fadds
data16
dec
inc
fistpl
push
into
out
cwtl
sahf
dec
push
adc
xchg
mov
add
shlb
cli
push
rolb
fwait
xchg
push
push
int3
movsl
in
xor
test
pop
fldl
pop
imul
pusha
add
and
icebp
data16
int3
push
add
and
cs
aas
xchg
les
lahf
mov
mov
rorl
jae
sub
pminub
pcmpgtb
fstp
and
lmsw
pop
imul
jp
stos
clc
pand
pop
out
imul
popa
sar
push
add
sahf
inc
ljmp
ja
mov
xchg
ret
add
or
push
mov
pop
hlt
loopne
inc
out
popa
divb
xor
pop
add
int
cltd
cmpsb
mov
mov
insl
and
sub
add
sub
push
mov
mov
gs
adc
pop
testl
dec
test
int3
roll
add
daa
cltd
dec
or
movsl
adc
cmp
and
sbb
and
mov
andl
aam
daa
ret
loop
shll
int3
pop
nop
jecxz
and
lods
mov
and
xor
sbb
hlt
push
xlat
xchg
aaa
enter
and
scas
jmp
cmc
push
xchg
jmp
sbb
push
push
pop
out
dec
mov
add
push
inc
adc
rolb
cmp
push
sub
mov
add
aad
cmpsl
mov
pop
and
in
inc
shrl
add
loopne
lea
push
push
test
repz
nop
aas
shrb
push
ret
pop
cmpsb
xor
add
test
clc
mov
pop
pop
fucompp
cmp
add
adc
mov
mov
pop
xchg
jg
push
cmp
mov
aam
mov
das
mov
mov
loop
inc
add
adc
cmp
and
out
pusha
add
mov
add
and
mov
add
jns
pushf
push
rorl
xor
mov
sub
pop
dec
cmp
arpl
inc
in
imul
movsb
jne
jl
sahf
in
dec
aas
xchg
or
cwtl
push
je
xchg
jle
push
sbb
aad
das
addb
shrb
jae
add
ljmp
inc
add
mov
add
mov
mov
adc
sbb
mov
pop
or
add
mov
fidivrs
pusha
add
push
mov
jg
xchg
rorl
cs
jecxz
test
xchg
cmpsb
push
xchg
push
sub
sbb
jmp
add
sbb
pop
loope
sub
cmpsb
movsl
push
xor
in
test
add
sarl
pop
mov
lea
cmpsl
addb
ficoml
jb
dec
push
mov
add
jle
sbbl
pop
adc
rcrl
lods
pop
inc
lock
add
movsb
scas
push
add
ret
sbb
mov
and
out
ljmp
fimull
les
out
jae
jns
addr16
add
push
pop
pop
rcrl
cmp
mov
pop
xchg
pop
mov
jge
sub
cmp
jle
mov
hlt
pop
jmp
stos
xchg
shrl
pop
push
jmp
add
mov
fisubrs
popf
inc
add
xor
dec
testl
out
adc
mov
outsb
aas
fwait
cmp
xchg
ret
jns
dec
sbb
outsb
xlat
push
ret
add
pop
xchg
loope
das
push
inc
add
push
mov
cs
clc
sub
iret
xchg
xchg
cmp
or
pop
loopne
xchg
fwait
dec
cs
xchg
mov
lret
or
add
lret
loopne
lcall
cmc
add
arpl
es
mov
fnstenv
jnp
imul
cmc
data16
or
mov
cld
xor
cmp
cmpsb
push
add
push
jmp
xor
cmpsl
jbe
dec
jbe
mov
movsl
jbe
mov
pop
push
js
and
test
dec
call
adc
jne
cmp
push
mov
in
add
mov
cmp
loope
add
cltd
int
pop
ljmp
popa
xchg
dec
mov
jmp
int
push
dec
push
xor
je
cmp
shl
adc
dec
inc
sbb
mov
sahf
test
loop
xor
sub
push
sbb
add
cli
sbb
xchg
outsl
sahf
test
dec
or
pop
xchg
push
pop
push
mov
cltd
adc
xchg
pop
ss
imul
daa
adc
mov
pop
outsl
test
mov
lcall
leave
stos
add
mov
xor
cs
add
in
or
into
xor
add
outsl
stc
jmp
sahf
add
sbb
adc
lods
lret
loop
into
push
ret
fucomi
add
add
outsl
sub
fadds
cmp
jb
stos
ret
pop
or
clc
jno
insl
insb
xchg
jl
sub
pop
pop
add
out
dec
mov
jae
add
adc
outsl
xor
arpl
add
push
pop
xchg
addb
push
leave
pop
mov
jns
out
call
ficoms
dec
clc
fadds
sub
jle
jge
jo
je
push
add
hlt
inc
insb
mov
add
jmp
mov
or
call
arpl
adc
cmp
add
lret
dec
jp
adc
cmp
add
int
add
add
scas
addr16
mov
adc
lret
xor
fcmove
xchg
addb
mov
add
loopne
ds
cmp
dec
cmpsl
in
insb
out
dec
adc
ja
sbb
mov
mov
in
aas
ret
fstpt
add
ljmp
addb
insl
bound
scas
xor
movsl
and
sbb
xchg
js
mov
stc
arpl
push
adc
add
add
push
sahf
rcrb
pop
and
adc
xchg
cmpsl
pushf
icebp
and
scas
xchg
push
ret
push
adc
xor
jb
jns
add
mov
pushf
cmp
repnz
inc
nop
push
lcall
dec
push
dec
xor
enter
jmp
xchg
xor
in
loop
add
jl
imul
scas
mov
insb
mov
call
push
inc
in
das
or
cmp
call
sbb
shrb
scas
add
xor
sbb
adc
shlb
adcl
out
pushf
cmp
or
sub
sahf
pop
mov
in
test
xchg
mov
nop
push
dec
mov
add
in
insb
add
inc
mov
testb
push
enter
test
enter
add
out
add
add
fs
xor
scas
call
cmp
mov
lahf
fidivs
cmp
and
cmpsl
lahf
push
push
sbb
imul
loope
in
imul
lods
inc
movb
dec
movb
fmuls
mov
dec
jmp
cmpsl
leave
int3
mov
and
addb
addb
loop,pt
xor
pop
inc
add
divb
loopne
fdivl
xchg
mov
add
mov
outsb
push
inc
add
cmc
pop
mov
xor
mov
add
jecxz
lods
aas
nop
push
fistpl
adc
jb
testl
push
aam
es
data16
or
pushf
nop
lahf
rorb
pop
movb
dec
andl
popf
imul
add
scas
mov
js
add
add
outsb
mov
imul
sbb
lahf
sub
adc
dec
aaa
sahf
jae
mov
bound
rclb
pop
mov
insb
frstor
and
push
xor
shrl
mov
ret
jmp
int3
call
jae
jg
dec
push
mov
xchg
clc
push
sbb
ret
js
pop
mov
jns
push
dec
push
mov
xor
mov
or
sub
les
pop
cmp
notl
dec
sub
push
fnsave
cld
inc
mov
cmpsl
or
adc
outsb
jge
cmp
mov
xchg
into
loopne
xor
shl
lahf
dec
ret
rcr
jle
jge
cmp
sbb
mov
pop
xor
inc
add
movd
add
aas
add
std
ja
sub
popf
jb
add
mov
lods
iret
rclb
sti
pop
mov
cwtl
fwait
mov
mov
pop
xchg
or
xchg
and
add
jp
test
or
in
mov
mov
sbb
fdivrs
lds
std
les
js
movsl
dec
add
cmp
cmp
lea
add
inc
pop
stos
loope
or
add
shll
pop
shl
xor
ficoml
mov
sbb
gs
mov
sbb
sbbl
movb
sbb
jmp
pusha
add
ds
inc
cmpsl
addl
ljmp
fs
call
jp
pop
scas
in
mov
test
orl
pop
xlat
jmp
fisttpll
jnp
add
xchg
pop
movsb
stos
sarl
mov
sub
dec
and
loop
mov
push
jg
into
xchg
add
xor
cmpsl
bound
int
xlat
mov
add
ds
iret
dec
xchg
test
sub
push
addb
je
imul
movsl
cmpl
and
shl
addl
pop
data16
mov
mov
lret
push
mov
add
jmp
lea
lods
mov
jmp
inc
add
in
xchg
dec
xchg
ret
sbb
add
fcmovb
xchg
mov
roll
add
jp
inc
xchg
rclb
cld
xchg
push
stos
adc
scas
xor
sub
data16
push
or
cmpsb
bound
lcall
add
addb
and
rcl
rolb
push
add
std
push
or
push
xchg
les
daa
and
scas
test
addr16
test
adc
popl
addb
insl
repz
jle
add
cmp
addr16
sbb
inc
sub
mov
fldt
xor
ss
out
adc
xlat
inc
push
push
rcrb
xor
mov
les
pop
insl
mov
fstps
aam
dec
nop
in
xchg
lods
ljmp
mov
add
fidivl
cmp
push
push
mov
add
lock
push
dec
scas
ret
nop
pushf
pop
lds
add
imulb
add
push
jle
aas
cmp
loope
adc
es
das
stos
mulb
xchg
loope
add
gs
cmp
jne
and
push
xchg
sub
popa
imul
ss
sub
add
adc
cmpsb
dec
add
pop
mov
add
loop
aaa
mov
jmp
int3
fsubrs
bound
sub
call
push
and
test
loop
add
add
pop
mov
mov
adc
add
sub
idivl
adc
in
fwait
sub
jbe
les
or
insl
int3
shrb
repnz
cmpsl
jle
out
lock
fwait
ja
sbb
push
cmp
and
test
inc
add
insl
shll
cmp
add
sub
dec
shl
mov
scas
mov
rcrl
xor
xor
push
add
cmp
fldt
aad
ds
loope
mov
and
repz
or
add
in
add
mov
negb
add
movsb
push
push
push
xchg
mov
cmc
ret
jns
aad
add
mov
stc
add
mov
pop
ss
cmp
or
sti
mov
add
dec
aas
pop
cmpsl
xor
and
cmpsb
aad
aaa
call
dec
fidivl
pusha
add
dec
movsl
fwait
into
inc
fistps
pop
enter
push
rorl
add
stos
mov
add
out
cwtl
scas
or
fisttpll
mov
dec
insl
movsl
cmc
daa
hlt
loope
mov
sbb
and
aaa
aad
add
mov
add
mov
into
out
jl
add
jo
loop
mov
jne
cli
mov
test
in
lret
mov
xorl
negb
push
sbb
out
std
pushf
pop
mov
sbb
jecxz
insl
jmp
dec
fcomps
rolb
add
add
add
gs
sarb
sbb
fidivrl
xchg
arpl
push
outsl
jg
add
setge
addr16
incl
inc
pop
sbb
or
cld
jge
int3
loope
outsb
movb
lahf
sub
hlt
aas
sub
pushf
ss
add
add
scas
cmpsb
ss
cmp
or
or
sti
ds
sbb
add
add
xor
stos
shrb
imul
cmpl
jg
adc
and
scas
sbb
imul
mov
add
push
cmp
inc
sub
push
or
mov
ret
leave
and
in
xor
dec
ds
hlt
cltd
xchg
ds
mov
push
pop
xor
and
add
xchg
sbb
add
sbb
add
mov
test
inc
add
add
out
das
push
inc
add
mov
dec
push
cli
push
cmp
es
rolb
xchg
dec
xor
add
add
ja
andl
add
sbb
clc
inc
movsb
insb
lock
add
cmp
add
jo
add
add
fwait
xor
jae
lock
mov
dec
and
dec
ss
sub
add
mov
cmp
arpl
dec
adc
pop
hlt
cld
jbe
xor
mov
dec
adc
dec
jno
xchg
push
or
stos
das
lods
fistpl
xchg
push
push
pop
je
bound
leave
repnz
insb
test
or
dec
jp
inc
cmp
stos
sub
repz
add
dec
inc
jno
dec
imul
jo
jnp
or
push
jp
jb
jno
dec
lea
jmp
mov
add
int
add
adc
call
jo
pop
arpl
add
inc
add
jno
fcoms
add
leave
movsb
aas
xchg
xchg
push
and
in
addb
xchg
pop
dec
xchg
arpl
and
xlat
dec
jl
leave
call
xchg
fbld
add
gs
adc
sldt
sbb
leave
loop
add
cmc
das
mov
subl
rolb
dec
jp
add
sbb
add
pop
or
add
jnp
imul
sbb
mov
rcll
xchg
loope
aad
scas
jmp
or
push
jb
inc
jg
pop
dec
cli
adc
cmp
xor
fs
add
stos
or
add
pushf
fldt
jbe
ds
push
inc
add
mov
loope
arpl
add
out
adc
dec
stos
xor
in
mov
ror
and
or
sub
or
add
jbe
jp
fdivrs
jp
test
rorl
daa
jge
insb
add
mov
out
mov
test
repz
fldl
ret
cmp
mov
sahf
loope
mov
adc
mov
pop
mov
push
cmp
dec
mov
les
push
mov
daa
inc
add
out
daa
xor
dec
jecxz
sub
icebp
pop
adc
add
loop
repnz
in
rolb
int
fnstenv
loop
sti
out
adc
add
mov
add
sub
addb
inc
pop
lcall
repz
rol
in
mov
stos
mov
pop
add
or
jg
mov
icebp
mov
lea
sbb
add
stc
or
stos
mov
pop
mull
add
lret
lahf
dec
add
jge
jns
sbbl
test
jp
fdivrs
out
add
add
fwait
jo
push
es
pop
es
cmpsb
mov
xlat
pop
sub
stos
out
push
iret
xchg
dec
pop
push
nop
or
push
cmpsl
cmp
push
cmovge
scas
outsb
jae
pop
ss
xchg
in
stc
inc
add
imul
pop
loop
movsl
lods
ret
addb
mov
adc
mov
jae
ja
dec
adc
cmp
dec
pop
fnstsw
dec
mov
ds
or
mov
xorl
add
mov
outsb
sbb
mov
addr16
ret
sahf
insb
int3
and
inc
add
mov
imul
ss
aam
mov
add
add
mov
add
fwait
movsb
data16
fsts
int
and
bswap
and
jp
add
sub
cmp
sbb
add
push
adc
cmp
call
mov
sub
mov
movsb
adc
xor
pop
fcoml
stc
xor
xchg
cmp
add
mov
xchg
sub
insl
jbe
xchg
cmpsb
adc
data16
lret
cmpsb
adc
cmpsb
xlat
stos
push
bound
mov
add
xor
mov
mov
dec
ret
push
mov
test
lea
pop
mov
and
sbb
add
sub
insl
lods
adc
lods
push
jecxz
imul
jle
mov
clc
adc
push
add
int3
pop
push
into
cmp
arpl
inc
add
out
mov
add
xchg
pop
aam
push
icebp
stos
push
jae
insb
and
clc
fs
xchg
es
mov
les
test
inc
add
roll
iret
cld
jno
mov
add
add
inc
add
inc
add
jne
outsl
mov
xchg
dec
repnz
fdivl
add
xchg
lahf
push
add
out
jge
cmp
mov
sub
add
jle
ljmp
lret
inc
add
jbe
mov
loop
jo
add
sbb
loop
xchg
fcmovnbe
and
lods
add
enter
in
loopne
mov
hlt
fcomi
ds
mov
ljmp
je
xchg
nop
lret
test
push
xor
lods
inc
add
test
pop
adc
push
fs
psrad
test
add
jg
add
jne
dec
sbb
adc
imul
movb
aaa
push
lods
rorb
lds
cmpsl
jp
inc
das
pop
add
rolb
cmpsl
mov
repz
rorb
fistpl
sub
jnp
lahf
jmp
outsl
sub
add
jl
jae
fnsave
aad
loopne
cmp
imul
or
sub
add
dec
faddp
xor
push
mov
mov
adc
xor
insl
push
pusha
add
sbb
xor
pop
push
inc
ret
out
sub
pop
push
push
mov
add
out
sbb
pop
out
mov
push
inc
cltd
inc
and
fmull
fwait
dec
in
push
insb
push
mov
push
test
ror
adc
movsb
rolb
dec
enter
inc
rorb
adc
jb
mov
push
xlat
pop
lahf
pop
jmp
les
mov
jo
xor
repz
cs
xchg
xchg
mov
repz
enter
clc
mov
xchg
cltd
movsl
pop
call
ret
sti
jecxz
adc
mov
aas
fists
add
pop
fidivrs
in
mov
stos
loope
popl
shlb
xchg
adc
sbb
addb
cmp
inc
shll
or
xchg
xor
sarl
ds
movsl
pop
loope
dec
arpl
push
rcl
or
lcall
movb
xchg
addb
repz
outsl
push
andl
les
or
loope
add
stos
addb
mov
shlb
add
add
incl
stos
aam
std
xchg
mov
lods
addb
stos
or
ja
outsb
jo
icebp
dec
jne
mov
dec
or
enter
lahf
jmp
inc
xor
push
int
adc
dec
xor
pusha
add
sub
adc
push
jo
or
and
out
test
add
xchg
addb
testl
std
imul
pusha
add
add
push
add
or
mov
and
clc
rcll
fucomi
jp
pop
xchg
imul
outsl
jae
fisubrl
addb
fldcw
add
lret
jp
sbb
sub
sub
add
inc
xchg
imul
add
pop
test
add
leave
arpl
out
push
mov
inc
loop
mov
inc
add
sbb
sub
loopne
data16
cmp
mov
push
shrl
insl
in
ss
jne
imul
add
dec
mov
jp
fcoml
iret
test
ror
aaa
sar
pop
and
stos
xchg
cs
xchg
push
negb
push
add
mov
mov
mov
add
jbe
add
mov
add
pop
data16
jmp
int
jnp
movb
pop
imul
fidivrl
mov
cs
popa
sub
sbb
sub
je
inc
pop
in
add
sbb
fcoms
fisubrs
std
faddl
arpl
fstpt
lret
movb
jmp
lret
cmp
push
scas
cmp
in
arpl
lahf
fidivrl
pop
mov
xor
push
es
add
movb
xor
xchg
in
test
push
and
mov
jmp
int3
in
pop
jmp
adc
int3
jno
push
mov
push
lcall
inc
mov
and
roll
hlt
push
add
or
xchg
sub
les
es
and
fld
add
aaa
add
push
addb
pushf
std
test
lea
add
mov
sub
push
in
adc
out
xchg
les
mov
sub
add
shlb
pop
pop
inc
add
repz
mov
add
sbb
add
inc
add
call
js
cmp
ficompl
add
imul
add
cwtl
push
nop
ret
add
in
sbb
add
and
xchg
xchg
sub
inc
add
add
dec
sub
inc
add
mov
ss
adc
pop
ja
add
test
xor
out
loopne
in
out
fs
mov
or
mov
or
ret
rorb
jbe
mov
pop
test
mov
rcr
pop
addb
repz
insb
fs
pop
stc
sbb
or
jns
in
jno
pop
inc
add
loop
int3
in
imul
xchg
pop
mov
out
adc
xor
imul
mov
nop
inc
add
insl
mov
mov
lods
sbb
add
sub
fs
add
addb
add
pop
outsl
push
pop
inc
stos
xchg
fs
jg
arpl
in
sub
pusha
add
pusha
add
add
movsb
sti
inc
add
add
add
data16
add
mov
and
pushf
inc
add
add
in
stos
jae
cmp
mov
xchg
fcoms
xchg
adc
cld
popa
inc
mov
jne
sbb
testl
divl
loop
jns
rolb
outsb
mov
pusha
add
fsubr
dec
jns
sub
add
cwtl
fildl
push
loop
stos
ds
cwtl
ret
sbb
mov
out
ret
shll
mov
in
dec
push
std
popf
roll
cmc
lods
xchg
inc
add
cmp
add
ss
pusha
add
jmp
jne
out
add
fwait
sbb
push
mov
test
jo
cmp
sub
test
and
and
add
outsb
imul
insl
in
jne
loopne
push
sbb
bound
loop
aaa
sbb
inc
add
push
inc
mov
cmc
gs
and
mov
call
mov
aas
cli
dec
add
es
mov
pop
mov
pop
sbb
frstor
add
add
clc
les
leave
aas
ds
inc
or
push
ja
out
xchg
xchg
fstl
out
mov
aas
ficompl
bnd
jecxz
sarl
xor
loop
xlat
in
xchg
xchg
fwait
enter
lretw
test
js
cmpsb
int
xchg
jecxz
lds
and
push
xor
ret
popf
fstpl
sbb
push
xchg
movsb
mov
push
jo
loopne
xor
push
cmpsl
xor
ljmp
negb
mov
or
mov
dec
subl
jns
into
push
pop
pop
lds
scas
les
repz
test
es
jg
les
test
shrl
add
fisubl
dec
test
add
idivl
dec
je
stc
fimuls
out
outsb
imul
jmp
mov
test
bound
mov
pop
subl
sub
test
and
add
cmc
xorl
add
dec
rcrb
out
sahf
call
jns
add
cmpsl
movsb
adc
dec
push
xor
mov
mov
cs
lods
fbstp
mov
mov
pop
cltd
mov
jmp
add
out
dec
gs
add
xor
jmp
sbb
sbb
enter
out
fstpt
test
insl
shlb
jp
dec
ds
jbe
jns
xchg
cmp
fdivp
shlb
add
xor
pop
repnz
mov
into
mov
mov
sbb
into
pop
adc
sbb
fmuls
push
pusha
add
inc
insl
adc
cmp
addr16
add
outsl
push
out
ds
outsb
lahf
addl
in
push
push
xchg
rcrb
push
lret
sub
mov
add
dec
lret
mov
add
mov
out
sub
xor
lret
into
rcll
xchg
and
divb
aad
sub
add
loop
lret
ds
std
nop
outsb
pushf
enter
mov
mov
shl
sbb
fisubs
jne
push
shll
push
test
addb
mov
add
xlat
adc
mov
sbb
test
mov
movsb
ja
aaa
push
xor
sbb
cmp
inc
xor
or
pop
das
ss
or
jae
stc
das
push
add
adc
push
arpl
push
data16
sbb
pop
testb
call
insb
mov
xchg
jb
cmp
cmpsb
cltd
imulb
jb
in
lahf
adc
lahf
push
jp
scas
das
fnstsw
int3
sub
add
mov
stc
or
aaa
inc
repz
out
pop
mov
jno
adc
xlat
xchg
jg
add
hlt
int
add
mov
xchg
adc
ds
daa
sbb
and
xchg
pop
cmp
mov
add
cld
and
xor
push
xor
pushf
addr16
xor
cmp
xchg
pop
cli
jno
xlat
lock
insl
inc
push
fdivl
dec
sti
addr16
sub
or
or
xor
add
add
add
std
dec
pop
gs
dec
push
scas
fnsave
aam
jmp
lret
pop
push
jae
fwait
jg
scas
lea
xor
repnz
push
xchg
mov
jbe
je
add
aam
pop
jmp
pop
jg
cwtl
cmp
or
add
jne
mov
inc
aam
and
mov
add
sbb
jne
rolb
aam
add
xlat
ja
lahf
imul
jb
test
mov
das
inc
dec
sbb
mov
add
ret
add
lea
roll
sub
adc
stc
lock
lret
out
mov
test
and
add
push
cs
or
mov
lods
push
fwait
mov
loopne
add
xchg
fistpl
xchg
rol
popa
sti
or
test
ljmp
hlt
pop
or
cmp
aaa
outsl
xchg
or
es
lods
add
sbb
inc
adc
sbbl
outsb
mov
add
in
cwtl
shrl
shl
jl
add
add
cwtl
adc
mov
js
int3
lcall
xor
cmp
sbb
or
mov
pop
filds
xor
xchg
xchg
divl
mov
out
in
cs
jo
in
je
je
stc
addb
mov
adc
mov
cmc
sbb
cli
cmp
fadd
add
int3
scas
insb
stos
cltd
popa
into
arpl
out
icebp
mov
add
je
add
arpl
mov
xchg
xor
les
pop
pusha
add
aaa
xor
adc
sbb
out
push
testb
movsl
pop
pop
lret
pop
jbe
sub
repz
shlb
and
pop
mov
dec
outsb
jne
pop
push
jbe
ret
pusha
add
jp
push
cmpsl
std
cld
and
and
push
sti
mov
mov
ja
frstor
xchg
lea
and
std
mov
xchg
jle
xchg
adc
cli
mov
pop
xchg
add
pop
cmp
sub
pop
jge
lds
add
xchg
decb
dec
pushf
cs
arpl
bound
mov
js
int
and
and
addb
adc
add
fisubrs
insb
loope
xchg
mov
out
sub
scas
notl
fidivrl
mov
pop
movb
or
push
fcomps
xor
imul
xor
clc
xchg
cli
mov
pop
mov
inc
add
repnz
inc
jnp
jecxz
repz
scas
xchg
fnstsw
adc
push
clc
and
hlt
fwait
mov
push
mov
arpl
dec
repz
adcl
hlt
aaa
pop
mov
add
rolb
mov
xlat
clc
inc
add
std
xor
sahf
lods
clc
mov
popa
jle
leave
mov
xlat
adc
rcrl
add
jmp
sbb
addb
mov
dec
fwait
mov
es
mulb
scas
iret
pusha
add
add
imul
add
or
cmpsl
pop
cmp
add
lcall
mov
push
mov
mov
add
pop
sbb
decl
sbb
sahf
push
mov
fs
push
pushf
pop
sub
inc
add
fwait
or
sahf
jno
data16
push
outsb
sub
push
in
mov
pop
clc
inc
leave
cmp
jg
fisttpl
and
xlat
push
sbb
arpl
std
hlt
rcl
repnz
mov
js
repz
inc
daa
push
add
das
sbb
scas
dec
sub
mov
jbe
gs
add
sbb
mov
xchg
or
add
xchg
arpl
mov
stos
mov
inc
in
mov
hlt
mov
pop
hlt
or
sbb
aam
lock
fiaddl
xchg
or
repz
js
mov
addb
jmp
mov
push
mov
es
inc
add
mov
out
cld
jmp
dec
stos
inc
add
ret
lods
jnp
pop
mov
lock
repz
std
imul
add
mov
jl
popf
mov
rol
add
loopne
cli
cs
insl
lods
dec
repz
arpl
or
divb
loop
je
inc
mov
sbbl
mov
in
or
cs
pop
add
addb
outsb
pusha
add
dec
insb
jb
mov
pop
mov
aam
mov
sbb
cmovge
loop
lea
xor
mov
pushf
and
jno
mov
mov
std
push
test
addb
into
xor
ja
add
xchg
in
js
push
xchg
cli
inc
sbb
xor
add
xor
gs
je
ret
movsb
cmp
mov
pop
or
in
movsl
fcoms
fidivrs
popa
loop
movsl
xlat
mov
add
bound
sub
pop
ds
outsb
sbb
xor
mov
inc
aam
dec
fwait
mov
outsl
ret
jns
mov
adc
mov
inc
add
lret
pushf
xor
mov
lret
daa
fstpl
jnp
and
mov
loop
xor
push
xchg
lock
inc
add
cs
xchg
dec
nop
cmc
sbb
cmpsl
and
sub
cmp
push
addb
mov
inc
add
jmp
push
enter
pop
addb
dec
imul
or
sarl
cmc
inc
add
add
add
jle
rolb
add
pushf
xor
mov
add
add
add
mov
jbe
dec
cmp
xor
sub
aas
imul
movsb
jl
fs
aad
ja
jo
xchg
mov
mov
lcall
pop
mov
fcmovu
dec
into
add
mov
mov
add
or
add
jl
in
call
test
adc
adc
push
jns
mov
fiaddl
xor
jle
lods
scas
pop
hlt
cmp
mov
fisttps
cs
imul
or
mov
jl
cs
lods
dec
mov
lock
push
lea
add
out
jp
add
jecxz
or
and
jle
fdivrl
fimuls
in
enter
shll
rorl
add
or
cmp
add
push
push
rorb
addb
in
adc
mov
adc
mov
call
add
imul
enter
fidivl
fimull
inc
add
movb
add
and
push
sbb
mov
sub
sbb
test
jbe
pop
jbe
les
push
and
adc
sub
scas
add
rcl
adc
ret
add
loope
sbb
jmp
add
scas
hlt
dec
cmp
dec
stc
roll
shrl
lcall
lock
scas
push
pop
arpl
ficoms
mov
mov
push
inc
add
mov
cld
or
mov
add
inc
add
and
xor
cmp
or
sbb
lock
scas
adc
jp
and
xor
xchg
sub
jno
mov
jbe
xchg
in
or
mov
rcl
xor
jo
add
out
lea
dec
mov
xor
sbb
cltd
cwtl
xor
mov
dec
xor
fsts
ljmp
push
subl
movb
cld
les
mov
mov
ret
jae
sti
lock
hlt
sbb
loope
js
idivl
mov
add
or
sbb
je
and
int
bound
add
cs
and
cmp
addb
sub
push
and
or
jmp
test
cs
and
and
add
and
mov
jl
xor
addb
add
test
and
lock
cmp
mov
xchg
js
adc
mov
inc
arpl
movsb
dec
fwait
pop
fiaddl
add
mov
orl
aam
cmpsb
mov
mov
int
lds
faddl
jo
xchg
int
mov
xchg
mov
and
xchg
and
arpl
xchg
push
jb
add
mov
test
pop
add
and
xor
cmpsl
pop
jo
push
pusha
add
xchg
or
test
pop
add
add
scas
ja
or
fwait
stos
stos
bnd
add
sbb
cs
add
jl
loop
fs
dec
rorb
xchg
and
or
cmp
jmp
das
mov
dec
negb
inc
sbb
mov
mov
and
enter
sbb
dec
mov
jnp
movb
mov
sbb
ss
jb
mov
and
add
mov
aaa
sbb
in
mov
es
movb
push
dec
jmp
pusha
add
push
mov
mov
sub
or
push
dec
cmp
shlb
ja
inc
add
arpl
xchg
data16
sub
bound
movb
add
sub
xor
and
lock
aad
inc
stos
out
scas
and
adc
inc
add
mov
addb
movb
js
mov
icebp
cld
js
aam
cmp
test
cld
adc
stos
test
or
inc
add
xor
roll
xor
sub
add
mov
xor
test
jmp
ret
xor
dec
mov
imul
inc
add
ret
dec
mov
rol
add
mov
xchg
push
jl
ljmp
arpl
out
repnz
mov
scas
outsl
and
push
jmp
push
cmp
sub
inc
out
jge
push
pusha
add
sar
daa
mov
or
out
lret
cmp
inc
jg
sbb
xchg
insb
inc
add
rol
rorl
mov
leave
dec
fnsave
loop
fstps
xor
test
pusha
add
ss
and
aam
sbb
ss
cmpsl
inc
and
stc
daa
sbb
and
addb
inc
add
filds
scas
adc
inc
add
fnstenv
fidivs
fildl
arpl
add
or
stos
stos
out
jp
xor
mov
add
aam
xchg
dec
jae
imul
divb
psubsb
lahf
rcll
inc
add
bswap
mov
push
in
test
mov
stos
jns
mov
stc
push
add
sub
dec
bound
xor
pushf
jg
ror
xchg
mov
popf
xor
adc
push
data16
aaa
rol
add
or
mov
cmpsl
add
test
fistl
outsb
or
mov
sbb
pop
ds
pop
push
add
sub
add
in
fidivs
mov
sti
or
nop
jmp
scas
rclb
mov
push
test
cli
loopne
pop
enter
add
sub
popa
push
adc
lods
pop
ja
movb
cmc
andl
into
and
daa
jge
imul
push
stos
xor
int3
enter
js
outsb
js
lahf
xchg
jnp
cld
push
imul
clc
aaa
mov
test
add
inc
and
pop
iret
pop
or
incb
or
icebp
ret
stc
xor
jbe
add
mov
test
add
clc
jmp
scas
mov
ss
mov
fdivr
in
and
icebp
dec
add
pop
aad
or
dec
jl
int
lcall
scas
mov
fcoms
sbb
sbb
dec
test
fldt
jmp
xchg
pop
jl
xor
js
out
push
cmp
add
adc
jbe
pop
mov
sarb
std
scas
hlt
xlat
inc
dec
push
fnstenv
jl
xchg
dec
xlat
xchg
or
cmpsb
scas
and
aam
mov
lahf
pop
mov
dec
in
addb
sub
loop
repnz
rcrl
pop
ss
inc
mov
xor
movsb
daa
outsl
jb
and
lds
sahf
push
jmp
or
add
add
aam
add
dec
iret
and
add
xchg
aaa
mov
add
lahf
ficomps
pop
movb
jmp
mov
sub
add
fistps
cmp
mov
dec
cmp
incl
flds
lahf
fcomps
iret
cld
leave
dec
into
fmul
divl
inc
pop
add
jbe
add
fadd
mov
int3
sub
add
lock
pop
jae
inc
int
add
cmp
ret
cmp
enter
mov
arpl
push
push
jne
inc
sbb
xor
jbe
sbb
xchg
xchg
insl
cmp
inc
add
movsl
out
adc
imul
cmpsb
dec
cltd
lcall
int
lock
and
icebp
and
adc
xchg
dec
xchg
data16
push
sbb
out
sbb
in
lret
mov
mov
add
cmp
iret
mov
jns
cli
insl
data16
inc
add
add
mov
jno
movsl
out
inc
add
and
jno
jno
push
lods
or
xchg
insb
mov
lods
jbe
into
fs
arpl
mov
add
push
test
jp
outsl
cmp
fs
lods
adc
push
sbb
xor
pushl
cmp
lods
push
push
out
aam
xchg
addl
or
jg
sti
mov
mov
push
fisubrl
add
adc
xor
fcompl
mov
aas
aam
xor
cltd
mov
xor
add
les
int
jno
test
lahf
and
push
mov
aas
js
jl
adc
lret
cmpsb
jle
and
add
int
mull
mov
inc
add
add
vpaddusb
in
add
int3
mov
add
mov
test
lods
in
push
add
fcmovb
mov
add
add
and
popf
xor
mov
add
xor
pop
loopne
lds
movsl
lds
cli
sbb
in
call
dec
pop
fimuls
xlat
rolb
adc
sbb
rcrl
ret
cmp
rolb
sbb
jns
mov
add
mov
dec
aad
push
add
dec
cmpsl
bound
sub
popa
jg
andl
add
lea
dec
sbb
fdivrs
clc
sbb
popf
or
fwait
cmp
je
lcall
sti
addr16
lea
dec
sbb
test
lret
popa
jae
add
fildl
cmp
adc
lock
mov
add
dec
insl
iret
pop
repz
cmp
pop
in
add
add
dec
mov
push
sti
cwtl
leave
int3
adc
fisttps
and
mov
lods
leave
xchg
pop
lahf
mov
sbb
incb
add
mov
call
fnstsw
cmc
jg
pop
mov
jmp
push
je
add
loope
les
aad
inc
add
mov
jae
adc
add
pop
leave
mov
sub
add
pop
mov
aas
jmp
dec
fdivrp
pusha
add
adc
pusha
add
lods
xor
push
enter
sbb
push
add
sub
sahf
xchg
jno
imul
sarb
pop
jb
ret
and
mov
repnz
fdivr
inc
add
mov
push
and
xor
push
call
dec
loopne
add
int
pop
leave
xlat
shl
in
push
add
add
mov
mov
add
add
xor
jae
adc
add
add
in
imull
push
jb
dec
add
adc
push
mov
pusha
add
movsb
dec
dec
les
xchg
add
sub
es
mov
js
out
mov
and
mov
jne
fwait
mov
mov
lahf
dec
push
add
add
adc
fisubs
decl
sahf
cmp
sub
and
rclb
pop
jg
scas
cwtl
cmpsl
mov
pop
jp
mov
rolb
addl
pop
inc
add
or
mov
add
pop
ljmp
fisttpl
mov
jp
add
pushf
push
or
and
jo
add
mov
mov
addr16
dec
addb
add
adc
sub
inc
add
mov
add
or
es
das
ds
push
add
and
lods
mov
add
mov
andl
rolb
mov
mov
add
jle
xchg
dec
push
push
call
or
mov
jnp
sub
and
add
adc
jl
fs
cmc
das
push
enter
mov
stc
push
cmpsb
les
inc
add
divb
add
out
and
jae
stos
mov
daa
fiadds
adc
orl
mov
xchg
push
lods
mov
xchg
xor
inc
sub
hlt
jo
call
and
adc
sbb
enter
adc
or
fwait
lcall
push
data16
lods
adc
xchg
pop
or
add
add
sbb
roll
or
mov
add
mov
inc
add
mov
imul
xchg
inc
xchg
mov
pusha
add
nop
jp
jns
jno
xor
pop
and
push
movb
lea
push
mov
sub
add
stc
jp
stos
fmuls
outsb
inc
add
insb
inc
add
add
sbb
ja
inc
push
add
mov
scas
or
xchg
shl
movb
and
adc
fcom
adc
ljmp
dec
and
movsl
fwait
lcall
mov
sub
add
cwtl
mov
and
aam
popa
jno
push
mov
jnp
cld
pop
mov
jae
cs
push
lret
shr
aam
or
imul
clc
xchg
push
aaa
inc
add
pop
aas
add
pop
and
test
movsl
or
int3
nop
push
xchg
pop
mov
adc
sub
cltd
lcall
xor
pop
fcmovbe
dec
push
mov
xchg
das
jae
cmc
xchg
shr
nop
fidivrs
sbb
or
mov
scas
mov
insl
push
and
push
add
adc
lods
xchg
mov
add
pushf
rorl
xchg
mov
inc
add
push
jo
mov
lahf
insl
jmp
in
leave
lock
mov
stos
xor
xlat
adc
insl
decl
insb
add
mov
xlat
ljmp
jae
inc
pop
mov
ds
shr
xchg
repnz
popf
in
sbb
leave
pop
out
mov
add
fistpl
out
movsl
mov
add
add
add
mov
jmp
xlat
push
ljmp
mov
push
jge
shll
rolb
xchg
cld
sbb
cmp
lcall
out
sub
in
jae
add
add
xchg
jp
and
fwait
xchg
ret
into
adc
jno
addl
mov
and
dec
sub
lock
jo
sbb
inc
dec
pop
push
fistpll
push
jl
fsts
mov
pop
rcrl
leave
jns
add
test
test
out
fcoml
ret
jmp
arpl
push
sti
push
lods
cmp
ds
xchg
outsb
cs
insl
in
mov
loop
mov
loop
add
lahf
mov
mov
adc
mov
dec
aaa
inc
add
scas
push
push
pmaddwd
xchg
idivb
xlat
xor
arpl
pusha
add
into
outsl
push
pop
daa
addb
add
fwait
shlb
lods
rorb
adc
fisubl
cmp
jmp
or
dec
in
inc
add
in
call
sbb
mov
dec
sub
add
movsl
inc
add
ror
adc
js
cmc
ljmp
repnz
call
lcall
sbb
mov
adc
mov
aaa
pop
movsb
xor
dec
adc
scas
xchg
sub
ljmp
xor
pop
xor
add
movsb
jecxz
dec
int3
sbb
inc
lock
dec
in
add
add
test
or
int3
adc
rol
leave
mov
xlat
mov
mov
pop
mov
insb
lds
sahf
mov
movb
add
arpl
dec
jg
movb
add
fisubrl
add
ret
scas
or
mov
add
addb
imul
sbb
int
sti
in
xor
add
xor
rol
mov
repz
xlat
out
in
mov
adc
pop
inc
add
xlat
int3
leave
movb
push
xchg
inc
sub
pop
inc
call
addr16
ja
sbb
or
pop
sub
add
popa
ficoms
add
adc
fistl
shlb
dec
pop
push
imul
and
notl
outsb
rolb
mov
push
daa
iret
lcall
cmp
jl
add
or
sub
add
cmc
xor
test
or
cmp
addb
push
leave
out
xor
and
jno
jns
add
js
add
ret
mov
xorl
add
or
icebp
pop
push
fisubl
add
add
jle
cmc
rcrb
mov
js
imull
add
ja
or
jecxz
lods
sbb
add
mov
jb
sbb
add
inc
add
add
sbb
pop
cmpsb
or
fisubs
add
mov
dec
cmp
pop
push
enter
mov
mov
jecxz
add
xchg
and
add
add
mov
rcr
scas
iret
stc
mov
xchg
mov
ja
jns
pop
es
add
cmp
std
inc
add
les
popa
inc
add
stos
mov
iret
or
xor
sbb
inc
add
add
mov
insb
cmp
jns
jb
out
rol
add
sbb
xor
orl
cmc
outsb
mov
shll
add
std
std
stos
cld
mov
out
adc
decb
cmp
mov
in
adc
popf
std
push
fdivrl
leave
cmp
jnp
or
std
xlat
dec
cld
push
and
mov
lret
shl
add
sahf
xor
push
or
sahf
mov
add
mov
dec
bound
sub
sbbl
dec
lock
add
mov
mov
mov
sbb
mov
fistl
or
into
fists
push
sbb
sbb
test
push
adc
xor
jge,pt
xchg
cwtl
push
decb
outsb
es
and
push
lock
jg
push
das
push
popf
pop
in
mov
mov
movb
or
jb
scas
rolb
jmp
add
xchg
in
add
inc
pop
mov
lea
pop
ss
hlt
adc
les
js
in
pusha
add
mov
jecxz
sub
inc
stc
push
xor
in
or
rclb
add
cli
je
add
pop
push
pop
fdivs
fistpl
add
cmp
pop
adc
dec
insb
and
sub
cltd
xor
cs
mov
stc
enter
xchg
add
shlb
ret
insb
or
out
popa
cltd
or
xchg
rorl
mov
add
pop
mov
add
sbb
repnz
ds
add
and
imul
or
lods
pop
shll
fidivs
add
mov
xor
and
lock
sub
cmpsb
sub
leave
out
insl
push
aad
insl
ss
push
or
mov
jae
add
adc
xchg
in
das
lcall
push
xchg
pop
gs
test
stos
or
adcl
lcall
mov
jmp
sub
sahf
repz
into
sub
ret
pop
add
jge
insb
and
int3
adc
add
add
movsb
test
add
push
int3
rclb
xor
imul
insl
scas
in
addb
push
add
and
jo
leave
pop
repnz
push
dec
cmpsb
inc
fdivrs
inc
ljmp
bnd
pop
out
sub
pop
popa
lea
xor
or
add
popf
imul
inc
add
sti
adc
push
das
in
dec
xchg
jo
push
dec
and
pop
bound
fbstp
int3
ret
cmp
or
inc
add
mov
daa
clc
pop
jl
xchg
aaa
hlt
lcallw
mov
push
nop
cs
add
cmp
das
adc
cmp
idiv
dec
cli
sbb
jl
ret
add
fsubl
into
mov
pop
out
jns
push
in
cwtl
sub
popf
pop
out
dec
inc
fistps
jmp
aas
xor
pop
sub
outsl
xchg
push
and
mov
lods
shll
ja
cmp
jne
sbb
add
scas
std
sub
and
adc
scas
push
and
bound
inc
adc
call
in
dec
cmpsb
lret
mov
sub
add
jecxz
xlat
pushf
adc
sub
push
cld
fwait
int
add
fbld
test
push
sbb
negb
add
addb
cli
add
js
pop
addb
mov
insl
cwtl
pop
push
sub
mov
ret
add
mov
ja
add
sub
xchg
mov
jb
lahf
jne
test
inc
pop
movsl
arpl
scas
imul
and
jno
ss
scas
jg
adc
ss
add
xor
cmp
test
xchg
xlat
sub
add
jmp
arpl
popa
cld
mov
mov
lret
add
add
jmp
inc
in
dec
and
imul
push
cmpsb
pop
ret
repnz
rcll
scas
cmp
dec
gs
daa
insb
arpl
loop
add
add
push
loope
jns
jge
mov
scas
out
sub
dec
in
std
cs
jae
in
cwtl
inc
add
add
lret
jge
sbb
mov
out
in
bound
test
test
lret
add
jg
dec
cmp
inc
add
mov
pushl
pop
mov
lahf
add
or
stos
or
xchg
push
js
mov
add
add
lret
mov
xor
sbb
pusha
add
pop
repz
daa
and
jbe
out
sub
jle
leave
test
jmp
inc
add
cmpsb
mov
push
cmp
push
mov
shrl
jbe
out
cli
stc
aas
pushf
jp
mov
add
or
cltd
mov
nop
mov
out
mov
js
mov
inc
add
mov
incl
pop
push
inc
push
cli
lahf
mov
and
hlt
sbb
or
xchg
mov
out
test
rolb
aaa
orl
or
jae
pop
xchg
xchg
dec
mov
mov
test
push
scas
dec
iret
cwtl
push
popa
loop
xor
xchg
test
push
ret
add
lahf
lea
push
inc
add
cmp
test
inc
add
mov
jle
pusha
add
jb
pop
mov
add
cmc
sbb
or
add
jne
mov
ficoms
sub
add
sbb
dec
and
shr
into
mov
dec
jg
xor
je
mov
adc
aad
fildl
mov
mov
imul
push
aas
rolb
iret
push
scas
mov
aad
shll
loop
stos
push
mov
inc
aad
pushf
cwtl
adc
stos
xchg
sub
push
dec
mov
cld
ss
push
add
xor
lret
cld
xor
rorl
lea
sbb
fidivrs
pop
out
repz
mov
sbb
daa
adc
shll
push
inc
clc
arpl
enter
add
xchg
dec
sbb
xchg
mov
dec
cltd
nop
pop
sub
mov
cmp
pop
dec
insb
mov
cltd
sub
ds
xchg
and
test
xchg
std
ja
pop
jl
clc
or
cmp
addl
sub
lock
mov
loope
xchg
mov
inc
stos
push
inc
mov
testl
adc
bound
inc
add
xchg
into
pop
cmp
mov
add
popa
out
xchg
cs
imul
jle
add
push
xchg
lds
mov
jle
mov
cmpsb
inc
fsubrp
pushf
iret
mov
xor
fstl
mov
mov
data16
add
jle
add
xchg
mov
fwait
rorl
push
ss
and
and
jl
je
stos
add
movsb
imul
dec
loopne
aam
cmp
stc
jb
add
dec
jge
mov
stc
jb
add
insb
xchg
add
xorb
imul
pusha
fiadds
xchg
ret
movsb
add
fucomi
mul
and
leave
and
add
add
add
pop
adc
xlat
jmp
nop
jmp
xchg
add
or
addr16
mov
stc
jb
add
mov
add
xorb
add
std
jne
stc
jb
add
add
int
test
add
stc
jb
add
mov
imul
cmp
ret
add
xor
xor
add
nop
jmp
sbb
add
xor
jb
add
adc
insb
inc
jb
stc
jb
add
dec
sbb
cli
add
nop
jmp
hlt
fsubl
std
push
stc
jb
add
push
add
add
sbb
daa
add
jmp
sbb
add
inc
sbb
xchg
add
mov
stc
jb
insb
adc
adc
push
cli
inc
add
push
mov
decl
push
mov
xchg
ret
add
add
xor
int
dec
add
jb
movsl
cmp
add
sub
jb
out
add
add
xchg
stos
mov
stc
jb
sub
add
sbb
call
add
ss
hlt
mov
lret
and
nop
jmp
movsl
add
add
jno
lea
jb
sub
add
add
mov
nop
jmp
imul
add
jge
out
incb
mov
jecxz
add
movsb
add
adc
incb
add
xchg
ret
add
jp
jae
add
push
mov
xchg
ret
adc
das
add
nop
jmp
add
add
add
and
nop
jmp
add
pop
mov
stc
jb
ds
insb
mov
push
mov
xchg
ret
add
cmp
add
mov
xchg
ret
movsl
add
add
stc
jb
add
mov
fsubrl
push
stc
jb
dec
add
add
neg
rep
stc
jb
add
mov
add
dec
leave
add
push
mov
xchg
ret
movsl
add
add
add
jb
pop
add
add
add
stc
jb
add
xchg
mov
add
add
stc
jb
jge
jp
add
mov
mov
add
movsb
xchg
xlat
xor
not
push
mov
xchg
ret
movsl
add
shl
pop
stc
jb
add
sub
push
push
mov
xchg
ret
inc
or
addr16
push
push
mov
xchg
ret
add
pop
pusha
stc
jb
or
pop
add
xchg
movb
add
nop
jmp
add
movsb
add
xor
sub
jmp
stos
add
dec
out
add
je
xor
nop
jmp
add
push
out
xor
nop
jmp
sbb
add
aas
push
stc
jb
add
xlat
xor
inc
loopne
jb
xlat
add
add
and
test
add
stc
jb
xor
adc
cmpl
nop
jmp
add
add
add
inc
fistl
jmp
add
inc
add
stos
xor
data16
dec
add
stc
jb
push
xor
jb
add
fiaddl
cmp
add
fcoml
inc
mov
andb
add
pop
movsl
add
stc
jb
add
add
enter
lret
adc
add
add
mov
stc
jb
add
add
out
xor
jmp
stc
jb
inc
add
add
outsl
insl
arpl
jb
addb
mov
stc
jb
add
add
push
stc
jb
add
adc
stos
cmp
nop
jmp
movsb
add
adc
jb
add
pop
push
sbb
movsl
fldenv
jbe
stc
jb
add
inc
add
nop
jmp
mov
add
add
in
add
push
mov
xchg
ret
add
pop
push
mov
xchg
ret
add
pop
rep
stc
jb
mov
xor
stc
jb
push
mov
pop
adc
xchg
out
ljmp
lods
push
add
add
addl
adc
push
nop
jmp
jp
add
adc
dec
xor
stc
jb
popf
jp
add
imul
stc
jb
mov
jg
jno
stc
jb
pop
add
popf
push
stc
jb
cmp
pop
xor
add
add
dec
nop
jmp
add
mov
imul
pusha
add
push
mov
xchg
ret
add
outsb
add
enter
add
stc
jb
add
cmp
icebp
nop
jmp
or
fildl
xor
inc
push
mov
xchg
ret
pop
cmp
stc
jb
add
cmp
fdivr
flds
adc
add
add
add
mov
nop
jmp
push
add
add
mov
call
and
add
add
outsb
mov
nop
jmp
fdivl
add
popf
add
pop
loopne
imul
nop
jmp
jge
xlat
add
xor
stc
jb
dec
xlat
add
add
and
mov
xchg
ret
mov
or
jb
add
add
xor
cmp
jb
xor
add
push
stc
jb
push
dec
outsb
add
add
lods
push
stc
jb
adc
jge
add
add
and
push
mov
xchg
ret
add
add
jg
stc
jb
add
xor
push
mov
mov
xchg
ret
add
movsl
add
lea
jmp
add
add
ja,pt
add
jb
stc
jb
movsl
add
les
jl
stc
jb
add
inc
adc
inc
add
stc
jb
inc
movsl
dec
int3
lods
stc
jb
pop
hlt
add
xor
add
push
mov
xchg
ret
add
mov
stc
jb
faddl
sbb
sbb
add
jmp
movb
add
stc
jb
add
adc
stc
jb
outsb
sbb
add
add
push
mov
xchg
ret
movsl
xchg
add
push
stc
jb
pop
add
loop
add
adc
sbb
xor
jb
add
add
pop
fucomi
lea
nop
jmp
add
sub
add
stc
jb
cmp
mov
inc
add
rcl
mul
and
addb
jge
dec
mov
add
clc
stc
jb
dec
add
pop
add
jge
jne
dec
pusha
push
mov
xchg
ret
add
add
test
sub
inc
add
mov
stc
jb
xchg
add
mov
jge
test
stc
jb
add
add
mov
stc
jb
dec
add
inc
xor
stc
jb
add
or
dec
add
push
stc
jb
movsb
push
mov
dec
xor
add
sub
stc
jb
stos
add
cmpsl
movb
add
and
add
add
jge
add
dec
dec
je
stc
jb
add
mov
popa
add
mov
xchg
ret
adc
sti
add
add
incl
add
std
push
stc
jb
add
xor
push
shr
push
stc
jb
push
add
add
add
daa
cmp
mov
xchg
ret
xchg
jge
add
push
xchg
and
pop
add
stc
jb
add
out
mov
add
jmp
xor
push
mov
add
stc
jb
movsl
add
sub
pop
idiv
jmp
add
mov
jmp
add
add
incb
mov
jmp
ds
mov
stos
cmp
nop
jmp
cmp
or
mov
jb
sbbb
mov
stc
jb
hlt
add
add
nop
jmp
push
data16
pop
add
inc
push
mov
xchg
ret
popf
movsl
pop
jge
sbb
icebp
stc
jb
adc
add
mov
stc
jb
xchg
add
mov
movsl
add
nop
jmp
ss
add
mov
inc
add
jl
stc
jb
add
jno
int
stc
jb
outsb
cmp
pusha
add
and
nop
jmp
fstpt
xchg
movsl
add
adc
stc
jb
imul
jb
movsb
add
cmp
mov
mov
xchg
ret
add
popa
add
mov
xchg
ret
faddl
add
pop
sub
nop
jmp
add
adc
adc
sub
add
jge
sbb
pop
stc
jb
push
cmp
cmp
ret
push
stc
jb
addl
add
add
push
inc
mov
push
push
mov
xchg
ret
mov
out
popf
mov
sbb
add
jb
pop
add
add
add
add
mov
adc
in
fwait
and
fadds
scas
pop
add
call
adc
incl
add
add
push
daa
push
dec
add
nop
jmp
out
movsl
add
add
add
cmc
push
shl
push
add
jb
mov
add
add
adc
or
in
add
pop
dec
add
lret
popa
roll
loope
test
push
mov
xchg
ret
movsl
add
dec
adc
stc
jb
pop
pop
andl
in
xchg
add
dec
mov
shrl
jmp
add
pop
add
mov
dec
pop
add
push
mov
xchg
ret
mov
xlat
and
nop
scas
push
push
mov
xchg
ret
popf
add
add
nop
push
jle
lods
and
imul
adcb
addb
and
jae
push
push
mov
xchg
ret
cmp
fsubr
sub
jmp
ds
xor
add
dec
add
jmp
add
push
push
and
inc
add
nop
jmp
jp
mov
out
add
negb
push
loopne
jb
add
fildl
add
add
mov
push
mov
xchg
ret
xlat
add
fnsave
rclb
lock
add
pop
jg
in
jne
stc
jb
outsb
add
andl
sub
incb
mov
jle
stc
jb
sbb
add
add
je
stc
jb
add
sar
jb
add
mov
xchg
cwtl
mov
stc
jb
add
xor
test
sar
xor
add
add
add
mov
nop
jmp
add
add
movb
pushl
push
mov
xchg
ret
add
call
addb
roll
xor
add
xor
mov
stc
jb
add
fisttpl
push
sbb
orb
add
xchg
add
popf
add
mov
jb
mov
pop
movswl
stc
jb
add
dec
add
mov
add
jb
fistl
movsb
into
mov
nop
jmp
jge
add
push
mov
mov
stc
jb
add
and
ss
mov
inc
add
sub
add
add
and
insb
fcompl
add
cmp
and
jb
add
addb
pop
add
xchg
sbb
add
add
ss
add
add
jb
jge
dec
add
cmpsl
mov
nop
jmp
add
sbb
fildl
out
mov
stc
jb
cmp
cmp
push
adc
jb
add
add
cmp
push
stc
jb
dec
movsb
cmp
jge
cmpw
nop
jmp
mov
jg
jge
add
nop
jmp
inc
add
mov
add
mov
push
mov
xchg
ret
sarl
leave
add
stc
jb
add
xchg
fildl
adc
stc
jb
add
xchg
add
add
add
stc
jb
data16
add
jmp
add
add
add
ljmp
or
add
adc
add
push
mov
xchg
ret
add
mov
inc
add
jb
insb
movsl
push
add
add
mov
stc
jb
add
xchg
pop
inc
add
and
stc
jb
incb
pop
xor
xor
call
stc
jb
movsb
xor
add
stc
jb
add
add
add
add
add
add
jb
adc
xor
pop
stc
jb
data16
inc
mov
movsb
pop
add
movsb
stc
jb
mov
xlat
movsb
add
add
mov
stc
jb
xlat
add
push
mov
xchg
ret
xchg
add
add
shl
stc
jb
imul
ficoms
incl
add
push
call
mov
xchg
ret
add
jp
faddl
sbbb
add
add
and
inc
in
jb
incb
add
add
or
jb
pop
add
add
pop
add
imul
stc
jb
add
sub
pop
out
mov
stc
jb
add
xlat
add
add
mov
stc
jb
add
outsb
xor
mov
nop
jmp
xor
add
mov
stc
jb
pop
pop
sub
orl
mov
xchg
ret
popf
jg
add
jno
xchg
cmp
adc
jb
add
add
dec
outsb
xor
xor
stc
jb
dec
dec
addb
xorb
jb
add
jp
xlat
add
add
xchg
scas
add
stc
jb
pop
inc
mov
push
stc
jb
cmp
add
add
lods
shl
stc
jb
pop
jge
inc
mov
pushl
push
mov
xchg
ret
hlt
add
jno
add
stc
jb
add
adc
and
ror
stc
jb
add
imul
inc
jmp
and
add
jge
loop
mov
stc
jb
movsb
outsb
add
add
dec
cld
nop
jmp
xor
add
add
fcmovnu
mov
sbb
inc
add
add
nop
out
pop
mov
stc
jb
add
mov
pop
pop
movsl
clc
add
stc
jb
push
movsb
test
stc
jb
add
pop
add
dec
jmp
nop
jmp
add
cmp
jo
das
je
nop
jmp
jp
adc
pop
pop
push
mov
xchg
ret
add
mov
mov
xchg
or
add
xor
xor
shr
push
mov
xchg
ret
add
call
jb
xor
movsb
add
xchg
stc
jb
mov
pop
shll
add
aaa
into
push
push
mov
xchg
ret
pop
fdivrl
xor
icebp
in
add
stos
adcl
jae
push
mov
xchg
ret
pop
add
mov
stc
jb
jge
sbb
stc
jb
data16
push
stc
jb
add
add
xchg
hlt
inc
add
mov
adc
jb
add
cmp
add
mov
xlat
in
xor
jb
outsb
inc
dec
add
mov
popf
outsl
or
jns
pop
imul
popa
stc
jb
xchg
add
xor
xor
cmp
ret
jge
add
arpl
jb
movsb
add
add
subb
add
add
movsb
xor
out
hlt
nop
jae
and
mov
pop
push
mov
xchg
ret
add
add
mov
stc
jb
add
jb
adc
add
and
mov
stc
jb
xlat
stos
add
inc
add
nop
jmp
xchg
out
movsb
popf
xchg
xchg
add
lea
stc
jb
sbb
xor
add
xchg
jae
cmp
nop
jmp
add
pop
outsb
add
add
stc
jb
add
imul
cmpsl
mov
popf
stc
jb
dec
sbb
xor
push
mov
xchg
ret
stos
push
add
adc
mov
jmp
xchg
stos
adc
add
add
push
mov
xchg
ret
jg
addl
aas
jne
stc
jb
add
mov
add
lahf
add
nop
jmp
mov
adcb
nop
jmp
faddl
add
add
add
and
jmp
adc
les
jb
add
movsl
xor
jae
rolb
mov
push
mov
xchg
ret
add
addb
push
nop
jmp
add
inc
push
add
divb
or
stc
jb
cmp
inc
push
mov
scas
enter
lods
hlt
incl
mov
hlt
loopne
ret
stc
jb
xchg
dec
jp
movsl
add
pop
mov
and
loopne
add
ds
test
jecxz
incl
addl
add
add
dec
push
mov
xchg
ret
pop
add
push
mov
xchg
ret
popf
xor
fsubrl
fs
insb
stc
jb
xor
das
je
nop
jmp
fistpl
xlat
push
add
add
inc
add
or
jne
push
mov
xchg
ret
xlat
mov
nop
dec
and
stc
jb
xor
outsb
inc
push
mov
dec
lret
je
adc
add
sahf
inc
lods
inc
nop
jmp
sub
hlt
out
add
popa
add
jmp
pop
adc
dec
aas
push
mov
add
rorb
add
add
and
add
stc
jb
add
adc
add
nop
and
ss
mov
stc
jb
pop
inc
andl
repnz
jb
movsl
add
add
adc
adc
add
add
pop
add
or
mov
add
stc
jb
xchg
add
addb
mov
push
mov
xchg
ret
out
add
add
add
add
fdivrl
add
dec
adc
mov
xchg
ret
movsb
add
jne
nop
jmp
add
stc
jb
movsl
fildl
mov
ds
jae
test
nop
jmp
add
sbb
call
decl
xchg
add
insb
insb
nop
jmp
add
pop
add
jle
inc
and
stc
jb
dec
movsb
mov
fdiv
sbb
jb
add
add
pop
stc
jb
inc
add
roll
fcoml
icebp
sahf
jne
stc
jb
add
add
mov
sti
icebp
incl
add
xor
xlat
add
jb
fsubrl
add
add
fmuls
out
inc
add
xchg
add
jae
pop
stc
jb
pop
out
incb
outsb
outsb
add
adc
cmp
add
add
mov
stc
jb
add
rep
stc
jb
add
xor
add
xor
inc
add
add
add
sti
mov
stc
jb
add
pop
movsl
mov
icebp
stc
jb
pop
out
xlat
movsl
inc
add
inc
sbb
ret
add
add
cli
add
push
pop
pop
push
movsl
mov
outsl
test
push
mov
xchg
ret
add
adc
jb
inc
add
pop
xchg
and
idiv
jb
xchg
sbb
pop
add
pop
or
mov
xchg
ret
add
jg
ficoml
jb
add
add
add
pop
or
cmpl
nop
jmp
push
ss
hlt
jmp
xchg
repz
jmp
movsl
add
movzwl
nop
jmp
add
rcll
mov
xchg
ret
out
add
bound
inc
add
xor
mov
nop
jmp
add
add
adc
sldt
stc
jb
inc
adc
add
xor
stc
jb
dec
xchg
add
add
movswl
stc
jb
xlat
add
and
nop
jmp
add
ss
add
add
add
faddl
pop
push
sbb
xor
add
nop
jmp
out
add
pop
dec
jnp
push
mov
xchg
ret
add
mov
xorl
sub
jb
add
xchg
add
hlt
int3
mov
stc
jb
mov
mov
jb
jb
add
jne
stc
jb
add
mov
stc
jb
movsl
add
mov
stc
jb
xchg
popf
xlat
add
pop
mov
stc
jb
push
sbb
inc
add
xchg
or
add
adc
or
in
push
stc
jb
add
add
xor
fimull
cli
incl
add
insb
jae
add
nop
jmp
add
add
out
add
mov
cmp
ret
pop
stos
add
mov
mov
xchg
ret
add
pop
add
dec
movzwl
stc
jb
add
jg
push
pop
push
stc
jb
add
add
imul
ljmp
dec
insb
add
push
mov
xchg
ret
movsl
out
add
adc
adc
jb
movsl
out
hlt
add
adc
outsl
mov
stc
jb
movsl
add
push
sub
sbb
add
stc
jb
movsl
jge
mov
stc
jb
add
cmp
pop
jge
inc
inc
add
jb
cmp
push
xchg
or
add
mov
add
in
add
incb
mov
inc
stos
stc
jb
add
insb
decb
cmp
push
add
stc
jb
insb
add
add
js
add
rcrl
xor
add
and
aas
pop
push
mov
xchg
ret
mov
add
nop
jmp
add
mov
hlt
dec
add
lods
push
mov
xchg
ret
add
add
stc
jb
push
add
mov
stc
jb
add
repz
cmp
pushl
insb
movsb
roll
add
mov
jb
add
jge
add
subb
lcall
add
movsb
lea
sub
jb
inc
add
add
add
jb
xor
add
add
push
mov
xchg
ret
add
xlat
ret
pop
and
loope
incl
decb
add
mov
xchg
ret
jge
xor
add
int
mov
add
add
filds
cmp
add
mov
stc
jb
add
add
inc
sub
movb
push
jmp
add
movsb
add
add
nop
jmp
add
cmc
stc
jb
push
cmp
add
pop
mov
push
push
mov
xchg
ret
add
add
xor
jb
xor
add
add
jns
stc
jb
add
add
add
and
incl
add
pop
add
outsb
into
sub
stc
jb
cmp
add
push
mov
xchg
ret
add
inc
outsb
push
stc
jb
add
push
mov
sbb
and
jb
add
stos
add
ljmp
movsl
add
stc
jb
add
add
cwtl
add
add
add
dec
add
mov
stc
jb
add
popa
sti
stc
jb
add
add
push
mov
out
push
add
fisubrs
add
add
call
stc
jb
dec
add
xlat
in
mov
stc
jb
inc
add
add
xor
jmp
out
in
pushl
add
add
movsl
cmpsl
inc
xor
pusha
stc
jb
add
add
add
add
or
nop
jmp
mov
add
jp
scas
and
push
mov
xchg
ret
mov
add
add
stc
jb
add
imul
or
mov
xchg
ret
pop
decb
incb
jmp
or
add
add
mov
stc
jb
add
add
pop
xor
nop
jmp
add
inc
movsl
imul
inc
sub
mov
inc
add
add
or
orb
inc
pop
cmp
adc
test
incl
add
inc
add
jp
mov
nop
jmp
dec
faddl
dec
movsl
adc
jmp
add
add
or
add
lock
mov
nop
jmp
add
andb
mov
adcb
incl
xchg
add
add
mov
jmp
movsl
push
add
add
add
add
stc
jb
xchg
add
test
jb
add
or
out
inc
add
ss
add
mov
stc
jb
push
es
inc
push
adc
dec
lea
nop
jmp
pop
inc
xor
mov
mov
loop
add
jmp
add
mov
ds
inc
test
push
mov
xchg
ret
mov
insb
add
adc
inc
add
add
sub
mov
xchg
ret
adc
or
movsb
loop
stc
jb
sub
pop
jne
nop
jmp
mov
add
cwtl
mov
stc
jb
add
sub
jbe
push
mov
xchg
ret
add
or
popa
add
mov
xchg
ret
add
jb
add
mov
je
cmp
leave
jmp
add
addb
cmpsb
inc
and
xchg
ljmp
incl
xlat
movsl
add
add
add
stc
jb
add
sbb
jmp
ds
adc
add
sub
push
mov
xchg
ret
pop
xor
movb
xor
mov
stc
jb
dec
xchg
outsb
add
dec
push
stc
jb
movsl
add
add
add
mov
jmp
rolw
xlat
add
clc
push
mov
xchg
ret
inc
add
ret
jmp
fwait
add
add
jge
xor
add
xchg
dec
push
push
mov
xchg
ret
movsl
jge
jge
fists
mov
xchg
ret
add
dec
add
push
push
mov
xchg
ret
push
mov
dec
adc
mov
stc
jb
ds
or
stc
jb
pop
movsl
inc
out
faddl
add
nop
jmp
xchg
add
dec
add
dec
adc
push
mov
xchg
ret
add
fistl
call
stc
jb
pop
add
clc
add
stc
jb
add
cmpb
jmp
add
jb
add
push
mov
stc
jb
or
add
nop
jmp
inc
pop
outsb
movsl
ds
or
jb
add
dec
out
push
inc
add
add
shl
add
out
outsb
add
add
jns
nop
jmp
add
inc
add
mov
popa
stc
jb
pop
mov
stos
pop
sbb
jb
add
add
inc
imul
mov
stc
jb
add
shrl
push
mov
xchg
ret
movsb
add
pop
or
jb
jge
push
xchg
add
cmpb
ret
push
stc
jb
xchg
add
adc
lahf
pusha
stc
jb
add
add
faddl
jg
call
stc
jb
add
hlt
add
add
stc
jb
add
add
push
add
add
stc
jb
add
add
add
mov
add
nop
jmp
out
add
add
add
or
mov
add
jb
fcoml
out
xchg
cmpsb
in
mov
stc
jb
adc
decb
dec
add
jb
xor
add
xor
pop
push
push
mov
xchg
ret
cmp
add
jne
stc
jb
add
xor
dec
and
push
mov
xchg
ret
insb
ss
fwait
add
add
jb
add
add
mov
inc
and
jb
add
fdivr
add
ss
mov
stc
jb
hlt
add
mov
push
mov
xchg
ret
mov
sar
jb
adc
pop
sub
or
jmp
movsl
add
add
arpl
dec
mov
stc
jb
mov
adc
mov
faddl
stc
jb
add
and
js
jb
add
hlt
add
les
inc
add
mov
push
sub
ret
add
mov
inc
add
mov
xor
call
call
jne
nop
jmp
xor
add
pop
mov
stc
jb
fcomi
addb
stos
movzwl
stc
jb
imul
addb
dec
xor
add
push
mov
xchg
ret
cmp
dec
popf
arpl
popa
add
jb
add
add
sar
addb
add
mov
add
aam
xor
push
mov
xchg
ret
pop
add
stc
jb
movsb
sub
add
jmp
jp
rcrl
inc
add
inc
pop
push
stc
jb
cmp
xorb
mov
xchg
daa
adc
jb
xchg
hlt
add
pop
add
or
pop
cmp
mov
xchg
ret
jg
add
stc
jb
movsb
add
add
jmp
jg
add
fildl
jge
stc
jb
add
aaa
xchg
or
test
out
stc
jb
add
stc
jb
xlat
mov
jge
mov
stc
jb
add
xor
int
mov
add
loopne
add
add
pop
push
outsl
std
mov
push
mov
xchg
ret
xor
mov
jb
movsl
adc
xor
add
stc
jb
jge
add
insb
add
add
arpl
fdivrp
stc
jb
xchg
add
mov
and
movzwl
stc
jb
jge
add
stc
jb
pop
jge
mov
popf
push
daa
mov
pop
call
decl
add
in
add
push
mov
xchg
ret
jp
movsl
lds
out
out
clc
call
jge
add
dec
into
ret
stc
jb
add
add
add
movsb
add
cltd
mov
stc
jb
inc
add
add
mov
call
incl
imul
add
popa
jecxz
add
add
dec
xor
jmp
nop
jmp
insb
dec
add
ss
pop
mov
nop
jmp
cmp
pop
movsl
add
inc
mov
dec
cmp
jb
popf
add
add
mov
push
push
mov
xchg
ret
faddl
push
add
popa
pop
shr
stc
jb
xor
jg
add
dec
mov
stc
jb
sub
sub
std
stc
jb
faddl
sbb
jb
add
pop
push
push
mov
xchg
ret
pop
add
dec
dec
pop
push
stc
jb
out
fistl
adc
cmpl
nop
jmp
push
inc
hlt
jg
add
movsl
cmpsb
fadds
and
inc
add
xor
addb
call
add
add
mov
push
mov
xchg
ret
add
mov
std
mov
stc
jb
movsl
add
je
nop
jmp
add
add
push
mov
xchg
ret
fdivl
jge
mov
stc
jb
movsb
xor
popf
mov
repnz
push
stc
jb
addl
add
add
add
mov
xchg
ret
orl
adc
sub
jmp
add
pop
add
push
add
nop
jmp
jge
add
add
je
add
jb
add
pop
add
jb
add
add
data16
in
inc
jnp
je
sub
xor
inc
add
inc
add
mov
stc
jb
add
test
stc
jb
add
and
jo
push
push
mov
xchg
ret
add
xchg
sub
add
imul
adcb
incl
add
add
push
sub
or
jb
add
mov
jge
stc
jb
xor
adc
and
push
mov
xchg
ret
dec
dec
sub
jmp
add
add
adc
add
dec
xor
stc
jb
add
pop
xchg
rolb
jns
push
mov
xchg
ret
cmp
inc
add
in
cld
inc
add
adc
add
and
nop
jmp
add
jge
pop
stc
jb
add
add
pushf
ret
add
add
add
inc
outsb
pop
xlat
movsb
push
stos
nop
jmp
xchg
add
add
jp
push
add
rclb
pop
out
inc
add
cmpb
movzwl
stc
jb
add
movsb
pop
cmc
enter
xor
add
stc
jb
popf
jge
add
test
stc
jb
dec
mov
popf
adc
andb
incl
add
jge
xor
adc
std
stc
jb
add
fucompp
stos
call
incl
add
add
scas
mov
stc
jb
add
jge
add
add
ret
stc
jb
mov
add
inc
test
idiv
call
add
flds
mov
xchg
ret
jp
add
out
subl
push
mov
xchg
ret
add
xor
arpl
cli
mov
nop
jmp
inc
add
xchg
push
mov
push
mov
xchg
ret
sbb
or
add
jb
add
inc
in
stc
jb
add
push
add
add
in
cmp
push
mov
xchg
ret
add
out
mov
sbb
lcall
dec
xor
add
jb
add
add
xchg
outsb
mov
imul
nop
jmp
inc
jg
xchg
pop
dec
add
decl
mov
push
nop
jmp
add
rcrl
add
add
nop
jmp
add
movsb
fmull
mov
stc
jb
add
jecxz
and
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
pop
inc
aam
add
mov
call
incl
out
jge
iret
add
push
mov
xchg
ret
incb
mov
out
and
add
mov
xchg
or
mov
mov
mov
inc
add
daa
or
xchg
sbb
mov
inc
das
ss
cli
mov
rcll
push
jo
stos
sbb
out
cmpsl
push
adc
push
and
addb
mov
es
movsl
jg
jg
jecxz
scas
jg
mov
and
popa
iret
sarl
sbb
repnz
jmp
pusha
add
mov
add
dec
out
nop
jp
inc
mov
xor
loopne
sbb
mov
call
xor
iret
jns
and
ret
and
or
inc
add
repnz
or
jge
cld
sbb
mov
enter
loope
leave
fbld
repnz
in
xchg
hlt
push
mov
add
test
mov
mov
add
mov
popa
in
push
sbb
dec
sbb
cmp
xor
xchg
xor
sbb
into
or
out
mov
lahf
and
outsl
hlt
mov
cltd
push
stos
cmp
or
add
mov
popf
jp
xchg
mov
outsl
fnsave
dec
aaa
xchg
shrl
jae
push
push
lods
test
cmp
pop
and
mov
xor
inc
add
ret
jno
dec
sbb
scas
pop
or
or
mov
dec
lret
insb
mov
clc
mov
lret
cmp
fnsave
xchg
cmpsl
icebp
sti
les
addr16
add
push
cmp
in
out
hlt
xor
movsb
add
cmp
and
sbb
mov
jns
xor
rorb
mov
add
bound
mov
xchg
mov
ljmp
add
lcall
add
cmp
inc
mov
pop
jbe
mov
fldenv
lahf
out
adc
or
cmpsb
mov
ret
mov
mov
nop
add
shl
jae
sbb
in
sub
inc
push
cmpsb
clc
cltd
gs
add
jg
add
pop
lods
fisttpll
add
jae
mov
add
xchg
in
nop
loop
divb
stos
mov
int3
push
dec
cltd
stos
lods
adc
movsb
nop
cmp
mov
cli
xor
mov
gs
ja
sbb
mov
call
push
test
cmpsb
gs
push
cmp
pop
xchg
pop
pop
inc
rorl
add
nop
addb
mov
pop
fidivrs
cmp
mov
push
jnp
add
adc
mov
test
push
xchg
add
add
push
xchg
pushf
push
lods
xchg
nop
jl
out
imul
stos
ljmp
inc
add
adc
push
mov
negl
dec
sub
jno
les
mov
jmp
push
cmpl
fnsave
out
xchg
jb
xchg
cmp
jae
add
imul
scas
and
sub
hlt
adc
add
mov
mov
rolb
pop
push
cli
call
lret
sti
sbb
movb
adc
mov
std
aam
adc
add
addb
add
repz
sbb
ss
add
adc
mov
in
mov
push
in
std
add
push
add
cmp
inc
mov
rcrl
pcmpgtw
sub
mov
repz
out
sub
es
jg
movl
add
mov
mov
xchg
jecxz
add
cli
cmpsb
or
mull
cmp
jmp
jg
sbb
pop
or
jae
jle
ret
push
pop
inc
cmp
test
ret
jg
xor
cmp
fnstenv
out
rcrl
add
mov
ja
ret
inc
sub
jg
addr16
ret
xchg
xchg
push
mov
popf
sbb
leave
push
jae
mov
int3
insb
repz
mov
inc
cld
inc
add
fstps
add
jle
icebp
cmc
scas
insl
adc
je
out
jns
sub
or
ret
fldcw
ss
ret
push
xor
ljmp
pop
test
add
xor
negl
xor
xor
loop
mov
push
test
loopne
jo
nop
mov
and
or
repz
call
add
dec
jle
ja
add
xchg
iret
pop
shrl
sti
lock
imul
int3
ret
jl
sub
movsl
mov
jge
sahf
nop
ret
cmp
popf
inc
pop
jge
pop
lods
mov
mov
pop
ja
and
jecxz
add
pop
jns
mov
push
add
ret
push
outsb
daa
adc
cmovs
test
push
push
add
stc
fdivrl
fistpl
jmp
sbb
stos
add
imul
ss
sub
fdivp
adc
mov
aam
add
adc
movsb
dec
pop
inc
cmpsb
and
sbb
and
adc
out
sbb
ficompl
mov
or
mov
addb
repnz
push
push
cmp
and
ret
jle
test
cld
lret
in
cmp
fidivs
cmpsl
inc
pop
loope
loopne
pop
imul
or
lock
ss
xor
pop
jno
and
std
inc
add
or
push
ds
les
in
imul
jmp
pop
inc
add
adc
or
aad
mov
shll
dec
out
cmp
cs
test
psubsw
pop
or
mov
add
jge
add
testb
test
mov
push
pushl
mov
pop
pushf
push
add
add
daa
shlb
sub
es
notb
jl
add
add
adc
adc
in
movsb
aas
xor
ja
xlat
or
fldenv
inc
add
jns
sbb
mov
mov
stos
dec
insb
out
ret
jmp
sbb
lahf
mov
data16
shr
adc
fistpl
add
xor
mulb
add
xchg
icebp
lret
add
notl
lahf
jl
dec
lods
pop
dec
mov
xchg
push
sbb
or
outsl
pusha
add
pop
lret
add
xchg
xor
iret
aam
cmp
and
out
adc
pop
dec
je
pop
sub
lock
pushf
out
icebp
fwait
lahf
int
add
lret
cmp
loop
add
pop
push
ret
inc
jl
loop
std
push
mov
movsl
mov
gs
out
jp
fisubs
sub
dec
test
lock
jbe
mov
push
xor
mov
jp
or
lods
mov
sub
lret
xlat
cmp
adc
addr16
stos
imulb
jl
pop
frstor
add
test
push
mov
push
bsf
jae
fcomps
ss
inc
add
pusha
add
mov
xchg
pop
jnp
adc
pop
xor
nop
push
adc
lock
mov
xchg
mov
add
negl
in
and
add
dec
push
test
cmpsl
sbb
ds
xor
test
cmp
xor
add
xor
and
fucom
lock
jbe
repnz
push
mov
aas
mov
std
push
sbb
add
icebp
jge
shl
lods
or
enter
dec
mov
jmp
ficoml
xchg
addr16
push
dec
inc
add
adc
dec
xchg
inc
rcrl
jg
pop
mov
inc
add
mov
je
push
outsb
test
cld
aaa
add
fsubrs
movsb
and
and
sti
sti
jne
loopne
dec
xor
sahf
lret
push
lds
add
xchg
das
pop
lea
fisubs
ja
mov
add
xchg
ss
jg
mov
add
call
fldcw
test
addb
shlb
insl
das
movb
fcoml
push
hlt
and
add
add
das
sub
or
pop
cwtl
xchg
js
popa
out
lret
inc
add
lods
outsb
outsb
sti
or
ffree
add
cmp
cli
mov
mov
add
xor
and
stc
rcll
rolb
enter
scas
pop
xchg
or
xor
imul
inc
add
fwait
leave
xlat
or
hlt
test
inc
add
popf
push
lea
scas
neg
mov
clc
cmp
dec
es
bound
mov
int
mov
xchg
bound
pop
jg
jne
lcall
in
dec
pushf
add
stc
loopne
cmp
rolb
call
out
xchg
jg
push
jne
mov
add
dec
jle
lahf
aas
or
nop
cmpsl
cwtl
mov
sbb
and
xchg
pop
push
outsl
repz
xchg
sub
adc
stos
sbb
sti
sarl
fs
pop
xlat
std
aam
add
push
xor
insb
sub
sbb
das
mov
ds
sub
add
add
add
test
push
je
mov
cmp
add
add
jg
sbb
jle
push
push
js
jb
add
add
outsl
addb
cwtl
mov
loop
cs
daa
inc
loop
add
sub
push
dec
mov
lret
ret
xchg
lret
inc
add
add
lock
cli
inc
dec
mov
mov
stos
stos
push
loope
add
in
xor
jne
xchg
dec
lea
clc
stc
daa
js
movsl
lods
sub
and
xor
jg
pop
sbb
sbb
add
xchg
lret
cmpsb
cli
mov
das
push
or
cld
mov
outsl
cli
cltd
dec
mov
jmp
xor
push
sbb
shll
jbe
testb
xchg
push
insb
and
cmc
repz
stos
sqrtps
pop
loopne
loopne
and
ds
pop
jp
and
push
fadd
add
xor
js
pop
cmp
xlat
inc
cmpsl
mov
popa
into
fdivl
push
in
lret
or
iret
in
data16
movsl
subl
cmp
push
es
pop
aaa
into
int3
das
push
xchg
xorl
test
inc
hlt
lcall
mov
mov
push
mov
jl
lock
lods
mov
dec
test
adc
mov
xchg
popf
fnstcw
pushaw
add
fidivrs
hlt
add
ret
and
nop
xchg
ret
sub
es
movsl
pop
les
test
es
shl
push
sub
lcall
out
xor
adc
and
fnsave
jecxz
insl
nop
out
ss
icebp
xchg
xor
out
bound
pushf
loope
mov
push
inc
mov
mov
lock
add
pop
aas
or
sub
addl
imul
ret
imul
adc
adc
sub
imul
popa
fsubrs
addr16
mov
jge
pop
lcall
add
push
rcr
bound
inc
add
repz
jns
add
insl
sbb
leave
mov
cwtl
sbb
xor
repnz
add
push
mov
jle
add
cmpsb
jge
jns
jle
addb
dec
nop
push
jae
xchg
inc
jne
and
push
pop
push
xchg
sahf
dec
xchg
jnp
jnp
and
cs
insl
mov
jno
add
mov
xor
pop
movl
shll
sub
add
jnp
mov
inc
add
enter
add
leave
pusha
add
add
out
jmp
jmp
push
in
sti
in
xchg
scas
mov
push
divl
cli
mov
rolb
in
jb
orl
inc
add
add
pop
xchg
mov
push
sbb
ds
xchg
cmp
jne
fiadds
outsl
mov
rolb
xor
ss
push
in
movsb
fs
fwait
dec
lcall
cmp
test
cmp
inc
add
add
add
rolb
outsl
sbb
pop
sbb
jnp
test
rcr
rcrb
sub
inc
add
test
push
inc
add
add
inc
add
add
push
pop
xchg
or
dec
ror
or
push
ds
mov
cli
xor
pop
xor
repnz
mov
js
scas
cmpsb
cltd
fildll
rolb
ficompl
into
lret
cmp
xchg
shll
jno
xlat
cmpl
sub
inc
add
xchg
mov
pop
aam
pop
jne
iret
push
ret
daa
ficomps
fcoml
pushf
outsl
mov
xchg
aaa
iret
mov
xor
aaa
cmpsb
daa
xchg
jg
loop
cs
mov
adc
or
jp
inc
add
movsb
dec
daa
jae
mov
not
xlat
test
inc
movsb
insb
or
test
dec
aas
ret
jecxz
loopne
and
pop
mov
aas
sbb
in
push
xor
mov
insb
mov
loope
add
add
cmpsl
sbb
lcall
out
inc
jle
xor
addb
inc
add
mov
data16
fwait
call
repnz
bound
fistl
cmp
leave
lea
xchg
adc
add
aad
push
add
inc
and
lahf
push
add
add
add
or
fsts
jg
aaa
dec
xchg
sbb
mov
cld
mov
std
push
mov
stc
xchg
jne
add
dec
jp
push
add
add
mov
daa
pop
out
int3
push
inc
add
push
inc
cmpsl
and
pop
in
cmp
in
mov
sbb
xchg
add
jle
jb
scas
add
scas
insl
leave
adc
xchg
and
cmc
mov
cli
loopne
loop
dec
xchg
jae
add
mov
pop
sahf
jecxz
mov
test
mov
aad
das
pop
or
dec
int3
jb
lahf
add
mov
pop
xlat
or
fistps
stos
loopne
ja
vmread
add
out
add
add
nop
in
push
fwait
out
cmp
cmp
in
les
push
mov
in
loopne
and
inc
dec
inc
add
gs
sbb
mov
mov
dec
test
mov
loope
adc
mov
fsubrs
fadd
lahf
pop
nop
adc
add
jmp
inc
add
arpl
js
js
mov
xor
jecxz
mull
mov
xchg
jne
and
add
aas
cmp
aam
mov
mov
mov
mov
lock
std
sub
sti
mov
and
jbe
or
xor
sbb
xor
push
std
fdivrl
sarl
jo
stos
rolb
pop
stos
enter
xor
mov
sub
adc
rcrb
dec
push
popa
ret
loope
insb
push
cmp
sub
aam
les
ja
bnd
subl
add
das
inc
add
add
or
cld
dec
cmp
clc
or
push
hlt
inc
add
movsb
fists
mov
fld
stos
and
jmp
add
insl
sbb
js
test
pop
lock
add
aas
cmp
stc
fisttpll
fisubrs
mov
push
xchg
xchg
sbb
sarl
mov
xor
push
fisubrl
add
mov
out
fisubl
xor
mov
pop
mov
xlat
fildl
lret
adc
add
std
ret
testl
cmp
ret
movsl
fwait
aaa
inc
add
add
push
pop
dec
cmp
daa
mov
and
in
dec
mov
dec
mov
movsl
and
add
mov
cmpsb
add
jmp
fldl
lds
or
add
movb
popa
addb
outsb
jo
out
sbb
dec
inc
pop
xchg
movl
aaa
dec
in
jae
aam
jmp
inc
add
mov
add
xor
add
sbb
clc
jo
daa
addr16
mov
xor
ret
add
mov
jnp
movb
mov
in
pop
insb
fsubp
sub
pop
lock
add
add
pop
shlb
cmp
popf
sub
rorl
push
xor
mov
call
xor
shrl
rol
add
icebp
pop
mov
or
lds
sub
int
or
cmp
cs
mov
popl
add
test
pop
jmp
sub
stc
aad
loope
or
dec
xor
out
sahf
scas
es
ja
add
lahf
jb
add
sbb
push
cmp
iret
dec
cmp
or
add
dec
xchg
mov
add
fs
add
cli
push
cld
or
or
mov
ja
dec
mov
or
and
mov
cmp
jb
inc
movsl
mov
pop
pop
xchg
pop
cmpsl
rcl
or
jle
cmc
inc
add
add
repnz
mov
add
fdivrl
jecxz
push
jle
sahf
ret
mov
pop
or
add
std
xchg
dec
and
add
adc
data16
lods
sub
mov
add
enter
dec
inc
add
sar
inc
add
stos
loop
ret
mov
xchg
loope
jge
cmp
fadds
add
jno
test
mov
xchg
xchg
mov
jmp
add
clc
dec
arpl
or
cmp
test
inc
add
out
jge
push
jno
orl
push
sti
mov
cmp
push
inc
add
or
add
push
cs
inc
ss
sbb
lock
push
mov
sub
mov
popf
popa
mov
adcl
jge
add
ret
pop
fistl
fbld
jae
fsub
cmpsb
mov
ds
scas
jae
int
and
rcrb
lods
add
ss
inc
ret
aad
push
lcall
inc
int3
mov
mov
push
rolb
cwtl
or
xchg
popf
dec
sarb
fdivrl
jne
in
jmp
and
sbb
or
fsubs
std
test
and
or
jb
popf
das
rclb
in
fdivrs
adc
insl
imul
xchg
jb
sbb
jle
scas
aam
repnz
push
fwait
xchg
negl
push
loop
cld
and
dec
inc
xchg
stos
mov
aam
add
jns
repz
int3
and
pop
movsl
test
jle
ljmp
ja
xchg
cmp
enter
cmp
add
cmc
mov
xor
subl
mov
fwait
push
mov
pushf
mov
das
out
add
leave
testl
adc
xchg
hlt
cmpsb
in
jae
mov
push
rolb
mov
jmp
add
mov
push
cmp
roll
sub
mov
mov
push
mov
jo
add
push
xchg
movb
cmp
sub
jecxz
out
movsl
ret
ss
jmp
add
sbb
cmc
es
fwait
and
xor
jbe
repz
add
fistl
pop
and
adc
pop
fcmovnb
add
call
mov
xchg
push
add
add
mov
add
jbe
or
sti
fsubr
mov
mov
psubsw
inc
add
push
mov
inc
add
in
cwtl
insb
jle
mov
inc
add
cmp
sub
imul
movsb
in
popa
adc
shrl
add
xor
inc
divl
test
xchg
adc
push
lods
add
scas
and
mov
dec
movb
daa
and
or
dec
push
sub
pop
cmp
add
mov
jbe
repnz
je
cmc
shll
add
dec
mov
adc
add
mov
xchg
push
movb
sbbl
push
push
adc
sub
movb
mov
mov
aas
pop
outsb
data16
lret
mov
jb
mov
cmp
filds
pop
inc
add
stc
push
jns
mov
dec
scas
inc
mov
mov
dec
push
or
push
add
cli
lahf
ja
imul
adc
rolb
hlt
push
and
filds
int3
call
push
popf
movsb
or
sub
xchg
fldenv
add
repnz
push
xchg
aad
das
or
push
repnz
jl
pop
push
fistl
mov
inc
mov
mov
mov
in
fidivs
pop
adc
add
push
popl
movhps
dec
out
scas
and
mov
mov
mov
ljmp
int3
test
xchg
mov
scas
ret
jmp
cli
and
sahf
mov
int
insb
dec
lock
and
xlat
push
add
add
cmpsb
or
dec
push
pop
xor
imul
push
call
add
xchg
or
jge
fdivr
idivl
int3
mov
in
xor
jle
lea
loopne
lret
mov
lea
sub
add
fisttpl
lcall
flds
add
add
setne
inc
add
mov
loopne
pop
jnp
adc
inc
pushf
hlt
xor
push
dec
jns
jg
pop
push
daa
das
pop
xlat
pop
and
mov
inc
shrl
clc
movb
push
jp
jmp
cmpsl
iret
ja
aad
cmp
sarl
push
inc
add
jmp
push
xchg
mov
in
enter
mov
mov
call
div
lret
xchg
das
stos
lock
movsl
dec
xchg
mov
mov
scas
cli
add
mov
add
jo
sti
ret
add
outsb
sbb
push
pop
or
cmpsl
xchg
xchg
jae
mov
add
gs
out
lods
repnz
pop
out
pop
xchg
inc
ljmp
jecxz
into
inc
jp
dec
push
insb
or
add
xchg
dec
int
in
mov
cmp
in
fimull
push
lahf
fidivl
jno
dec
mov
imul
adc
inc
jle
and
push
daa
dec
dec
or
js
pop
push
or
ret
fsubs
stos
sub
add
sub
testl
jb
xchg
pop
mov
push
lods
dec
pop
les
inc
sbbl
add
mov
test
inc
popa
inc
add
mov
sub
dec
mov
cs
mov
fstp
jge
pushf
lcall
lcall
push
jl
in
rclb
adc
lods
cmpsb
popf
dec
push
dec
and
scas
mov
xor
pop
inc
add
ds
pop
jo
lock
adc
sub
mov
dec
cmp
dec
mov
cmp
ror
mov
add
and
int
loopne
dec
mov
mov
clc
and
cmp
push
mov
cld
ss
cld
dec
mov
hlt
ret
xlat
insl
inc
ret
loope
add
mov
xchg
mov
cwtl
das
add
arpl
xchg
or
icebp
lea
jno
dec
lods
outsb
rolb
jo
dec
jns
jb
and
add
enter
mov
add
and
adc
adc
add
jecxz
test
inc
xor
stc
stc
pop
aas
jle
add
sbb
fisubl
test
adc
push
xchg
into
std
imul
stos
icebp
bound
sbb
sbb
rorl
nop
or
add
int3
dec
rclb
mov
cli
frstor
jns
add
addb
add
popf
inc
add
push
ja
add
pusha
add
dec
pop
in
xchg
push
add
inc
add
ljmp
or
push
sbb
leave
jge
rcrb
xchg
add
mov
dec
aaa
fsubrl
push
mov
add
aaa
xchg
mov
mov
and
fiadds
mov
scas
mov
add
jle
add
stos
mov
mov
insl
add
pop
lock
arpl
xchg
pop
inc
test
sub
pop
and
adc
addr16
lcall
jl
add
or
movb
mov
stos
shr
stc
jbe
push
sub
mov
jp
lea
add
stc
rcrl
xor
scas
outsl
jno
movsl
pop
pop
inc
or
rolb
dec
into
sbb
push
pop
inc
add
out
fstp
adc
jo
push
lret
int
cld
les
mov
int
pusha
add
mov
subl
add
cmpsl
mov
mov
loop
pop
sub
and
mov
sub
pop
insb
jge
add
into
les
cltd
fidivl
xchg
add
aas
jae
ljmp
cli
cwtl
xchg
jl
pop
push
push
loop
mov
mov
push
lods
mov
mov
imul
pop
fwait
push
xor
mov
mov
jnp
cwtl
mov
add
and
xchg
cmp
fiaddl
repnz
pop
push
or
outsl
fistps
insb
loop
psllw
mov
add
add
jne
lahf
mov
cli
sub
push
dec
dec
cltd
mov
xor
int3
pop
adc
js
xor
scas
fdivl
and
xchg
mov
and
popa
push
adc
cmp
sub
jp
mov
cmc
add
cmpsl
shlb
or
xchg
adc
or
inc
add
out
rol
add
jne
pop
and
dec
push
and
jbe
pop
push
cmp
push
aas
mov
iret
mov
pop
aas
mov
lcall
inc
sbb
rolb
iret
loopne
or
xchg
repz
push
dec
insb
add
mov
mov
inc
roll
ja
test
mov
push
xchg
popf
adc
and
fidivl
mov
in
imul
lds
std
lods
sub
pop
pop
addb
decb
jmp
add
stos
pop
imul
mov
std
cmpsw
push
stc
dec
icebp
jmp
enter
int3
and
xchg
inc
add
mov
loop
aas
push
ffreep
add
int
dec
lahf
nop
inc
roll
ficoms
inc
jae
aam
mov
cld
mov
and
and
loop
mov
sub
pop
xor
ficomps
xchg
movsb
jl
add
adc
add
mov
pop
mov
xor
jg
rcrb
mov
cli
rcrb
xchg
in
int
lods
fists
cs
je
std
shll
jge
jl
xchg
ret
add
push
add
scas
test
mov
cld
sub
push
sub
mov
add
cmp
ljmp
xlat
and
mov
jo
cwtl
rcrb
xchg
lea
js
pop
pop
imul
cmp
push
lret
push
filds
mov
push
pop
ljmp
mov
dec
sbb
push
jno
ret
and
inc
add
addb
and
mov
ret
inc
loop
jg
aad
push
fildll
int
jns
sti
push
sahf
cmpsb
jnp
xchg
stc
xchg
xor
xor
out
or
or
jbe
out
insl
adc
cmp
cmp
push
pop
pop
mov
iret
mov
xchg
addb
push
mov
lock
jae
shlb
add
jbe
lods
shl
in
push
imul
add
lcall
inc
add
sbb
mov
add
lret
cli
xlat
inc
add
cmp
add
movb
mov
sysenter
movb
add
or
icebp
jge
loopne
jge
rcrl
cmp
ret
cmp
push
dec
ja
iret
lret
out
pop
adc
aam
mov
hlt
and
or
fidivs
rolb
mov
cld
pop
pop
inc
add
js
add
std
mov
sbb
cmp
sbb
adc
test
aas
mov
dec
jecxz
cmc
jae
cmpsb
in
fsubrl
mov
push
sbb
adc
add
add
xchg
adc
push
push
jno
push
dec
jb
shll
jp
aas
push
xor
stos
add
xchg
cmpsl
add
adc
xchg
out
mov
sbb
push
cli
and
fdivrp
push
add
cmp
jp
testb
mov
fnop
xchg
lods
mov
ljmp
inc
inc
add
cmp
add
hlt
out
mov
jnp
je
push
call
jo
sbb
scas
popf
out
cwtl
out
sbb
gs
mov
mov
stc
sbb
mov
enter
ret
push
sub
push
inc
add
mov
stos
std
mov
pop
js
sbb
sub
fdivrl
and
add
stos
xchg
imul
aam
jl
out
xor
adc
jo
subl
fiadds
int3
stc
push
out
add
mov
cmc
sbbl
jo
loop
or
xchg
push
adc
int3
roll
cmp
cli
push
hlt
mov
popa
sahf
pop
xchg
inc
add
mov
es
repz
add
cmp
loope
lods
aam
mov
xchg
sbb
loope
or
in
mov
sahf
jp
xor
mov
adc
stc
ja
pop
cs
add
pop
int
xchg
hlt
xchg
xor
sub
add
fnstenv
jbe
pop
repz
int3
adc
push
add
add
sub
add
and
add
cltd
jno
mov
insb
aas
and
les
outsl
jecxz
js
mov
push
cld
pop
pop
popa
push
or
pop
add
into
lret
xor
xchg
rorb
sbb
mov
test
lea
pop
subl
filds
mov
cmpsl
pop
cltd
cs
mov
sti
push
icebp
repz
out
imul
outsl
mov
imul
jmp
popa
adc
ja
aad
sub
jne
pop
xchg
clc
fildl
rcrl
pop
je
inc
loope
cmp
add
aaa
cmpsb
pop
cmpsb
add
add
add
out
add
xor
aam
nop
xor
adc
fisubl
insl
cs
mov
fldt
pusha
add
dec
jg
stos
cmp
jns
cltd
xor
add
push
add
in
sub
jge
sti
inc
add
enter
les
jge
dec
aam
movsb
jecxz
test
dec
jns
lret
les
mov
or
add
cmc
pop
cs
int3
jge
inc
add
shll
dec
sbb
in
addb
lret
ja
dec
inc
add
mov
into
lret
addb
fld1
xor
inc
ja
cli
test
pusha
add
aam
add
xchg
xor
cwtl
push
jl
out
pop
push
repz
xchg
inc
enter
daa
in
dec
mov
bound
inc
add
clc
lock
add
jmp
sub
repz
xchg
adc
mov
push
or
addr16
mov
stc
mov
mov
dec
shr
test
out
mov
add
xor
insl
push
scas
fbld
pop
stos
xor
shll
das
xor
clc
cmpsl
lcall
mov
xchg
rolb
jnp
mov
aas
fldcw
mov
sub
outsl
jbe
movb
mov
or
add
daa
jg
xor
push
cltd
dec
int3
lret
add
add
and
push
ljmp
jbe
das
scas
mov
jmp
lods
mul
std
push
mov
ljmpw
movsb
fs
aas
sub
lea
sub
jnp
xor
or
adc
add
leave
xor
in
mov
movb
js
sbb
cmc
ret
lods
lret
cmp
ja
add
xchg
add
mov
add
mov
xchg
lock
sbb
aad
cwtl
clc
fwait
stos
ljmp
lret
add
add
sbb
dec
les
mov
jnp
sbb
lods
out
inc
inc
add
xor
mov
fwait
movsb
sub
add
sub
add
popa
cmp
xorl
add
mov
mov
ss
xchg
js
mov
pushl
and
jo
jb
jge
or
add
mov
sub
ret
mov
cmp
imul
adc
enter
jmp
add
aam
and
or
in
mov
mov
xor
xchg
push
add
mov
xchg
int3
int
jmp
jle
or
sub
movsl
lahf
mov
xor
dec
testb
pusha
add
xorl
jp
out
test
dec
mov
sbb
cmpsl
arpl
cmp
add
add
movsl
add
popf
pop
lds
mov
and
arpl
adc
add
es
hlt
xchg
dec
adc
test
icebp
sbb
arpl
je
push
std
push
fnstsw
scas
and
sbb
mov
test
out
repnz
mov
das
push
sti
nop
sti
adc
inc
and
pop
jne
inc
push
movl
mov
cmp
mov
or
xchg
dec
cmpsl
xlat
arpl
jne
mov
out
int3
xchg
addr16
jle
mov
mov
sbb
adc
imul
popa
enter
add
mov
jmp
sahf
mov
jmp
adc
inc
and
arpl
add
mov
pop
or
lahf
fmul
je
addb
add
dec
and
cmpsb
push
sbb
mov
movsb
movsl
dec
mov
ret
shr
int
nop
cmpsb
sub
add
out
xor
or
add
lock
mov
jp
mov
push
push
in
mov
cmp
xchg
repz
aas
rclb
in
iret
mov
add
addb
xchg
addb
adc
sub
and
cmp
pushf
jo
jb
fdecstp
fimull
test
or
inc
pop
inc
add
inc
add
dec
clc
xchg
cwtl
call
adc
sub
push
mov
fistl
out
xchg
xchg
jmp
add
pop
xor
xchg
out
fsubrl
js
outsl
pusha
add
or
push
mov
je
jp
fisubs
aaa
lcall
ret
or
fstps
and
out
add
push
xchg
popf
push
ffree
jbe
add
mov
add
out
dec
fstps
test
paddsw
aas
mov
xlat
movb
lods
lea
notl
add
xor
bound
mov
mov
add
pop
mov
or
and
dec
inc
les
pusha
add
data16
sub
cmp
xorl
icebp
cs
enter
pop
inc
add
fs
pusha
add
and
ljmp
daa
rolb
test
das
aaa
xor
sub
stos
pusha
add
mov
fidivrs
scas
inc
add
fstl
call
or
add
hlt
or
cmpsb
sub
add
xchg
ss
xchg
adc
les
sub
add
or
std
xchg
mov
inc
add
add
push
addr16
repnz
sub
add
cmpsb
stc
or
icebp
and
sub
adc
inc
add
addb
adc
iret
inc
add
and
jge
xlat
sub
jb
push
jne
in
jl
scas
mov
aas
pop
cwtl
movsl
inc
add
xor
cli
insb
nop
cltd
cmpsb
insw
jmp
outsb
movsb
xor
cmp
xor
xchg
xor
cmp
aaa
out
jmp
add
popf
mov
mov
push
ljmp
add
call
pusha
add
cmp
mov
inc
out
jge
cmp
rcrl
outsb
sbb
scas
push
add
mov
out
aam
lahf
and
add
fbstp
arpl
dec
dec
cmp
push
jge
lahf
dec
jecxz
xlat
xchg
enter
xchg
insb
hlt
fsubrl
push
int3
inc
add
cli
aad
add
inc
add
fadds
jno
add
addb
fidivrl
adc
mov
ljmp
adc
pop
and
adc
add
and
and
mov
test
xor
arpl
lds
cmp
ret
filds
add
mov
push
adc
ds
xor
and
test
or
fidivl
add
mov
jle
mov
loop
xchg
ja
pop
ljmp
adc
call
je
inc
add
pop
mul
mov
pop
cwtl
sbb
jo
sti
mov
dec
aad
icebp
pop
fmull
xchg
cmpsl
and
jecxz
mov
mov
in
inc
pushf
or
sbb
arpl
ss
add
frstor
add
movsb
loopne
jbe
fdivl
push
inc
add
xchg
fadd
mov
imul
cmpsl
pop
lock
xchg
std
dec
dec
fildl
mov
add
lea
adc
dec
rorl
jmp
pop
inc
test
adc
jno
jno
push
int
mov
int
std
dec
pushf
push
sti
cmp
add
dec
push
stos
push
xor
sti
fwait
ljmp
fidivrs
icebp
addb
ss
js
fadds
in
adc
add
call
or
inc
add
mov
dec
adc
add
add
push
mov
stos
call
js
std
cmp
jle
push
clc
push
add
adc
add
divl
add
mov
add
add
jnp
pop
cmp
ret
jne
and
test
dec
cmp
jmp
mov
je
mov
push
cmc
movb
lea
sub
jne
add
fwait
adc
add
add
pushl
dec
lcall
mov
cwtl
movb
sahf
jmp
jp
pop
inc
add
push
jecxz
inc
add
das
cmpsl
cmpsb
sbb
lea
out
es
cmc
icebp
scas
lret
lods
xor
sbb
push
sahf
lret
inc
add
add
jmp
cli
sub
push
adc
and
add
inc
add
sub
test
in
push
jb
mov
sbb
mov
js
dec
inc
cmpsb
jp
popa
jp
push
add
cmpl
stos
mov
shll
xor
add
out
jecxz
pop
jge
gs
test
add
cmc
sub
add
insl
mov
inc
cli
fsubl
mov
adc
mov
or
inc
mov
add
and
orl
pop
dec
test
push
enter
aas
dec
sarb
add
mov
mov
jl
popl
jne
add
shrb
inc
jge
subl
pop
and
in
ds
add
push
cmp
pop
bound
mov
lea
add
jg
xchg
icebp
adc
jns
out
xchg
push
pop
fs
or
mov
imul
push
bound
in
loop
iret
cmp
pop
mov
loopne
mov
scas
mov
jnp
push
mov
scas
pop
mov
mov
nop
mov
cmp
call
movsb
jl
nop
stos
sbb
cmp
mov
xor
icebp
lret
shll
loope
inc
add
leave
mov
icebp
and
test
in
xor
mov
fists
push
out
dec
push
popf
js
jno
rclb
ljmp
or
loope
pop
popf
mov
xor
xor
jmp
or
sub
je
es
je
out
std
adc
rcl
das
sbb
jg
inc
lea
pop
push
arpl
jns
add
add
push
jge
bnd
pop
mov
test
sub
inc
xor
inc
add
mov
push
or
xchg
cmp
fs
add
or
rcll
add
lea
sbb
mov
pop
enter
or
jp
mov
push
adc
insl
ja
jbe
xor
pusha
add
gs
or
jmp
sub
sub
adc
cwtl
addr16
lods
rcrb
and
add
mov
mov
add
pop
mov
xchg
or
adc
jnp
shll
leave
ja
scas
cmp
xchg
idiv
xchg
and
insb
sbb
push
mov
and
dec
add
lock
and
pop
adc
add
mov
jo
dec
lods
mov
shll
das
mov
add
es
jns
js
sbb
jg
addb
xchg
adc
fistl
test
jbe
add
into
dec
jno
stc
sub
icebp
dec
sub
mov
or
leave
imul
pop
flds
pop
gs
aaa
lret
ret
je
mov
dec
pop
icebp
ss
ret
movsb
inc
xor
fldcw
imul
fsubp
pop
dec
and
ret
xchg
lret
dec
jnp
pop
sbb
dec
push
or
cmp
mov
arpl
hlt
icebp
es
add
add
jl
shl
jae
lods
sahf
sahf
push
dec
shll
push
loop
sub
rolb
xchg
out
jecxz
push
mov
leave
inc
add
lods
push
dec
rcrl
int
ds
xchg
addr16
mov
sahf
lock
bnd
scas
sbb
int
sahf
jb
xor
lret
addb
inc
add
sub
xor
push
dec
cwtl
cmp
fisubs
shll
add
les
sbb
mov
aaa
and
push
add
ficomps
adc
xchg
sbb
mov
ss
sbb
and
cmpsb
mov
or
mov
add
dec
das
clc
sub
movsl
fdivs
mov
adc
jl
add
jb
xchg
cmpsb
into
adc
inc
sub
dec
sbb
stos
nop
cmp
push
outsl
jo
jbe
add
lea
scas
mov
mov
inc
add
rorb
or
and
add
ds
adc
je,pt
add
xchg
push
xor
or
mov
push
gs
add
ror
mov
push
xchg
inc
sbb
imul
and
mov
pop
inc
add
mov
cmp
sbb
pop
scas
stc
mov
add
fbld
adc
lods
test
scas
pop
dec
mov
addr16
das
leave
xchg
mov
fcmovnu
sub
add
out
add
je
popa
iret
in
xor
add
push
adc
lret
cltd
arpl
push
mov
popa
pop
lcall
jae
dec
jge
mov
inc
add
outsl
repnz
sub
aas
sub
lret
mov
and
xchg
adc
add
pusha
add
or
inc
adc
jb
mov
pushl
aad
mov
adc
cmp
sti
lret
jns
add
aad
arpl
std
xchg
sti
dec
or
and
pop
outsl
icebp
insb
dec
ffree
add
add
xchg
mov
imul
nop
and
fs
xchg
outsl
dec
stos
iret
gs
xor
fnsave
stc
fldenv
adc
popf
push
pop
testl
add
iret
jg
loop
ljmp
sub
mov
fldcw
stos
adc
sbb
jo
add
push
inc
sbb
std
sbb
fs
pop
xor
add
add
inc
add
mov
mov
add
mov
fsubrs
add
and
lahf
mov
loop
into
out
rolb
xchg
push
mov
aam
movsb
jo
orl
xor
cmpsl
iret
ficoms
rcrl
inc
or
loopne
das
jno
rolb
jge
pusha
add
int3
mov
mov
mov
lahf
mov
xchg
sbb
mov
jnp
pop
mov
push
fcomi
lahf
shll
add
jb
mov
push
pop
std
lock
add
into
in
add
test
add
mov
add
add
mov
inc
add
repnz
lahf
mov
arpl
shlb
add
xlat
fidivs
jl
pop
lahf
bound
pop
inc
add
xchg
push
fisttpll
xchg
clc
jl
push
push
mov
sarl
sub
and
and
cmp
cmp
test
data16
lcall
shrl
call
imul
add
je
int
out
es
add
mov
fs
cmp
insb
bound
xor
movb
push
lds
pop
push
fisubl
push
loope
mov
and
mov
sub
shll
insl
fstps
int3
or
and
push
mov
mov
cli
mov
push
imul
shrb
mov
mov
add
es
test
jp
inc
add
idiv
lcall
rolb
lea
sbb
pop
call
and
test
sub
cs
cmp
sub
mov
lods
ja
add
pop
fwait
inc
add
add
leave
push
mov
jmp
jnp
fwait
in
mov
lret
aad
jmp
mov
stc
pop
pop
adc
push
mov
pop
jle
pop
mov
jl
cbtw
enter
xor
scas
cmp
jo
push
push
ficoms
xor
int
sub
add
nop
add
mov
mov
loope
dec
imul
jle
push
mov
stc
dec
int3
pushf
or
add
jmp
jecxz
bswap
add
cld
mov
add
push
pusha
add
stos
push
jp
scas
xchg
push
add
sti
test
pushf
inc
add
add
sub
fwait
loope
jbe
or
out
cld
jnp
out
aaa
shl
das
movsl
fldl
add
test
add
scas
mov
push
scas
js
jle
inc
add
sub
push
stos
lea
mov
mov
mov
pop
fsts
testl
add
loopne
add
into
adc
xlat
sbb
jmp
in
jle
add
sarl
loopne
test
jmp
adc
xchg
loop
pop
dec
out
xchg
push
jmp
dec
out
pop
sahf
xor
mov
out
and
in
mov
pop
test
mov
sub
testl
das
arpl
xchg
adc
add
xor
sbb
add
push
pushf
out
mov
lds
sbb
call
loope
dec
add
fimull
ror
and
repz
add
xor
pop
cmpsb
dec
test
jmp
inc
add
aam
mov
bound
or
and
adc
inc
xor
mov
pop
and
ljmp
adc
fldl
fwait
das
in
leave
sub
or
sahf
sbb
lods
jg
daa
bound
adc
fisubrl
cmp
adc
pop
xchg
in
add
mov
xchg
lret
sub
mov
das
push
pop
sub
mov
adc
sbb
mov
push
int3
fisubrl
xchg
int
and
repnz
movsb
xchg
adc
adc
cmp
int
add
std
add
shlb
lds
pop
xlat
adc
icebp
mov
cmp
addb
out
dec
clc
cmp
out
ror
add
ljmp
fdiv
adc
add
idivb
test
push
fisubrl
push
jnp
push
int
leave
or
pop
fldcw
sub
mov
cmpsl
fs
pop
addb
stos
lahf
cmp
jg
leave
lret
push
mov
jne
inc
flds
adc
add
cmp
movb
add
dec
push
loope
or
ficoms
dec
stos
cmp
hlt
cmp
pop
pop
stc
push
push
cmp
add
mov
push
pusha
add
sub
and
and
imul
push
inc
xor
dec
mov
mov
add
scas
mov
push
nop
pop
lret
add
enter
mov
lock
add
hlt
mov
ret
xor
push
inc
add
mov
leave
addb
test
add
mov
add
cs
pushf
pop
sub
add
enter
dec
push
cli
movsb
adc
test
push
mov
pop
arpl
mov
in
add
loope
jmp
gs
cmp
mov
mov
and
in
and
jg
pop
in
js
mov
in
jb
cmp
jle
cmc
call
loope
lcall
les
fistpll
lods
das
aad
jmp
pop
mov
fidivl
adc
xlat
sbb
xchg
ds
sti
cmp
add
add
cmp
jl
xchg
pop
rorb
fcoms
add
lock
add
inc
add
inc
add
jl
shlb
addb
lods
dec
add
bound
data16
outsb
je
xor
fildl
cmp
jns
pop
sbb
fisttpll
mov
iret
fists
cltd
cmpsl
pop
test
jnp
inc
mov
xor
add
mov
pop
daa
cltd
cmc
and
push
sub
ds
icebp
lods
stos
dec
cmp
xchg
rcrl
add
out
lahf
or
dec
mov
push
add
out
sbb
xor
lds
xorl
lret
mov
xor
mov
inc
add
or
add
add
inc
add
out
in
out
cld
nop
cli
je
popa
icebp
jno
mov
mov
js
insl
nop
pop
scas
pop
movb
sub
jg
sbb
inc
push
scas
clc
ficoms
fldenv
popa
lea
rorl
push
lcall
shrb
add
or
in
addb
mov
inc
add
dec
in
aas
cmp
mov
xchg
dec
addb
not
xorl
add
add
js
pop
xor
sub
mov
stos
cmpsl
push
pop
addb
pop
clc
push
add
sub
clc
enter
add
in
cmpsb
addb
gs
inc
add
mov
jbe
scas
and
faddl
ds
lcall
xchg
cmp
dec
jns
scas
icebp
movsl
cli
mov
lods
jg
addr16
add
cmp
aad
aam
insl
inc
add
sbb
xchg
lock
lret
inc
jmp
xlat
push
clc
and
jecxz
sbb
mov
inc
add
testb
int
add
push
push
mov
cmp
push
add
enter
jb
adc
pop
xorl
repnz
mov
xor
cs
les
sub
push
loopne
icebp
stos
popf
and
push
movsb
mov
or
imul
mov
xchg
rcrb
rcrl
and
xor
popf
mov
cmpl
xchg
mov
rclb
add
fwait
push
jl
fiaddl
xor
lahf
clc
pop
dec
xchg
call
cmp
test
cmp
dec
repz
std
loope
mov
adc
loope
mov
pop
or
imul
xchg
push
cltd
adc
sub
jg
sbb
gs
adc
add
rclb
cmp
inc
add
mov
adc
xchg
mov
outsl
mov
add
test
xchg
movsl
icebp
xchg
lret
rcl
inc
add
sarl
adc
cltd
lret
cmp
mov
aad
mov
leave
int
dec
outsl
out
xor
addb
add
ret
add
lea
test
adc
flds
xchg
fsubrs
test
test
outsl
dec
mov
out
mov
xchg
aaa
pop
xchg
sbb
popf
mov
mov
xchg
push
add
mov
mov
mov
stos
test
aad
daa
and
loop
imul
sbb
lock
hlt
mov
mov
adc
ja
push
addr16
xchg
mov
mov
les
lods
jp
decl
push
cmp
dec
fldcw
xchg
in
lret
insl
das
rep
int
adc
push
xchg
mov
push
aad
sahf
pop
es
sahf
add
jmp
mov
pusha
add
sub
mov
test
imul
test
add
daa
mov
ljmp
sub
mov
add
imul
ljmp
xor
mov
xchg
sbb
orl
add
sub
jge
xchg
sbb
and
jg
dec
and
jecxz
inc
add
xchg
adc
push
jmp
pop
clc
popw
or
imulb
pop
lret
ss
testl
test
lods
add
mov
jnp
jge
xor
xchg
data16
test
dec
xor
adc
divb
and
sub
ficoml
xchg
notb
test
aam
xor
add
outsb
vmovapd
push
scas
xchg
nop
pop
rcrl
fldl2e
test
movsb
ljmp
cmp
xor
jne
add
insb
jp
add
push
sub
fldl
dec
stos
or
loope
inc
add
add
add
prefetch
push
lret
xchg
mov
xchg
lahf
dec
push
test
inc
add
ss
add
repz
cmpsl
sbb
daa
addb
and
xchg
jbe
std
mov
ljmp
loop
cmp
jnp
lock
int
push
pusha
add
sbb
in
sub
in
mov
adc
clc
push
popa
xor
xor
sahf
pcmpeqw
jecxz
mov
jno
pop
outsb
daa
dec
aam
xchg
xchg
cld
scas
sbb
add
roll
out
rolb
mov
add
add
mov
lods
lahf
in
jno
inc
push
mov
pop
sbb
mov
mov
cmp
xor
dec
push
add
xor
stos
push
push
lret
std
fwait
cmp
clc
std
int
xor
adc
inc
add
sbb
cmp
xchg
mov
fstpl
xchg
insl
mov
push
pcmpeqb
adc
mov
mov
push
mov
add
add
add
cmp
pop
or
fstpl
sbb
das
jp
rorl
clc
push
lods
and
and
loope
sbb
mov
sarl
sub
mov
xchg
pop
int
in
daa
pop
shr
lods
push
stos
mov
sar
data16
xlat
imul
xchg
mov
call
movsl
ljmp
cmc
mov
cmp
mov
in
jmp
pop
sbbl
pop
mov
je
jns
data16
pop
stc
pop
mov
xchg
mov
das
or
in
and
mov
insl
fidivrs
mov
inc
add
jnp
mov
mov
addr16
sub
push
sub
sub
cmp
loope
xor
sbb
pop
push
xchg
mov
mov
test
pop
mov
dec
out
mov
pop
pop
dec
out
sbb
add
adc
add
jecxz
add
imul
xchg
pop
ret
and
lds
sub
fwait
adc
rcll
mov
in
addb
sub
cltd
pusha
add
enter
dec
out
add
push
add
movsb
xor
movb
or
cmp
test
pop
jmp
adc
mov
push
in
inc
add
mov
or
pop
cwtl
insl
mov
lods
or
pusha
add
xchg
pop
pop
fnstsw
and
sub
add
arpl
mov
mov
inc
add
pop
repz
mov
xor
mov
adc
xchg
std
sub
loopne
ljmp
movsl
mov
mov
lock
adc
lret
sub
xchg
lea
push
mov
mov
mov
movsb
sub
inc
dec
push
arpl
aas
sbb
sarl
popf
sbb
or
adc
sbb
jmp
repz
or
pop
in
push
ljmp
or
xchg
lds
push
pusha
add
inc
add
iret
mov
push
outsb
jp
addl
adc
dec
hlt
xchg
sarl
mov
movb
mov
negb
sub
mov
incb
inc
add
push
sti
and
dec
xchg
mov
mov
daa
and
mov
popf
and
cmc
or
jne
jne
add
add
xchg
daa
jnp
push
imul
and
ret
inc
add
mov
addl
clc
sub
sbb
inc
popa
adc
jnp
fisubs
cmpsb
movsl
add
test
mov
pushf
addr16
das
cmp
adc
xor
xor
push
aad
pop
and
aam
xor
lcall
mov
leave
dec
sti
or
add
lea
repz
pop
adc
mov
and
cld
adc
add
add
dec
addb
ss
rolb
add
pop
fiadds
mov
pop
xor
add
into
das
mov
out
push
jnp
mov
aaa
mov
pop
lret
xchg
pop
mov
ljmp
add
hlt
adc
movb
add
mov
stos
movsb
xchg
sbb
insl
cmp
or
xchg
push
lcall
lret
dec
adc
pop
in
out
in
push
mov
xchg
push
ds
stos
xchg
repz
fs
xor
cmp
ja
mov
push
push
std
jle
jb
nop
jnp
gs
cs
mov
push
movsl
fistps
outsb
pusha
add
add
mov
fsubs
ja
lds
push
add
mov
add
inc
add
xlat
aaa
push
and
sub
push
push
loopne
scas
dec
inc
mov
lret
lcall
add
xchg
fs
stos
adc
cld
out
out
fmuls
push
sbb
loope
add
mov
add
bound
pop
outsl
cmc
jmp
fistpll
mov
and
lret
scas
and
push
cmp
pop
sahf
inc
xchg
jns
add
sbb
orl
leave
fsubrl
movsl
je
lds
leavew
dec
dec
cmp
cli
ret
cs
inc
add
and
ds
inc
add
add
add
imul
cwtl
call
in
nop
xor
test
sub
jmp
pop
jbe
cmp
pop
in
xchg
inc
add
mov
push
pop
gs
push
repnz
sub
pop
test
xchg
add
push
stos
add
mov
sub
push
std
imul
jne
jmp
add
cmp
mov
stc
sub
stos
in
mov
dec
sub
mov
iret
nop
jne
scas
mov
cmp
push
shll
mov
add
inc
cld
outsb
or
outsl
sub
lret
push
adc
call
jg
dec
imul
lcall
loop
inc
inc
add
mov
shl
cld
movq
pushl
push
add
data16
push
mov
xlat
ficomps
jl
sub
inc
add
sub
rcrb
add
mov
add
cmp
jo
add
je
and
faddl
cld
fisubrl
add
out
ret
aas
faddl
nop
ss
mov
insl
or
jns
mov
movb
subl
loopne
add
popa
sbb
in
jecxz
cmc
cwtl
mov
pop
mov
push
add
sub
pop
idivb
and
jmp
add
mov
push
les
inc
sbb
push
sbb
push
imul
decb
xchg
scas
push
lods
jg
jl
sub
add
mov
rolb
incl
mov
mov
adc
out
inc
clc
je
sub
mov
addr16
repz
sti
daa
mov
xor
sub
xor
notl
cs
jnp
add
inc
jmp
xchg
popf
into
fisubs
sbb
cmp
fwait
mov
mov
fdivrs
jno
push
icebp
xchg
pop
add
dec
incl
dec
ret
cs
cmp
pop
jnp
or
add
sub
mov
pop
scas
sti
ja
jae
add
push
xchg
loope
ds
mov
cmp
xchg
inc
add
cmpsl
push
mov
fucomp
addr16
std
xor
add
fcoml
sub
add
out
das
mov
mov
popa
shr
popa
outsl
stos
insl
stc
fisubs
jmp
jl
fisttpl
pop
imul
dec
mov
inc
push
or
add
loope
push
or
xchg
lret
rol
add
xchg
cmpsb
frstor
iret
xor
mov
jne
rol
inc
add
inc
ss
add
jge
mov
sbb
fwait
jae
lods
sarl
add
lods
stc
hlt
or
add
add
daa
pop
mov
jne
add
lret
fs
fnstenv
daa
inc
pop
movb
add
mov
push
hlt
repz
sub
iret
int
pop
inc
add
push
addb
add
popa
movb
outsl
or
inc
add
into
flds
pop
sub
divl
aam
lea
add
hlt
cmp
test
dec
lock
imul
movsl
addb
out
dec
les
add
add
inc
add
mov
je
into
fbld
hlt
push
gs
rcrl
pop
mov
das
sbb
les
daa
dec
fldenv
jbe
fsubp
pop
xchg
push
add
push
lret
or
fidivrs
cmc
adc
in
addb
jnp
jns
out
insb
dec
push
pop
add
xor
outsl
inc
lods
lock
push
mov
mov
addb
aam
cwtl
stc
and
lcall
inc
cmpsl
mov
xor
inc
into
mov
and
shl
rolb
dec
jo
mov
cmpsb
loopne
rolb
jmp
add
mov
icebp
enter
mov
jns
push
xor
mov
jnp
mov
add
xor
repnz
add
sbb
out
pop
adc
lods
adcl
mov
add
add
mov
mov
xchg
popf
loop
mov
jae
push
cmc
insl
adc
xchg
xchg
pop
sbb
insb
push
pusha
add
or
cmpl
call
cwtl
incl
add
cwtl
leave
leave
loop
mov
nop
jge
call
sbb
js
xor
xchg
cwtl
pop
mull
jge
mov
icebp
sub
inc
push
sbb
add
and
xor
push
sbb
pop
mov
fcomi
pop
adc
adc
lock
mov
idivl
jecxz
sub
jno
dec
insb
inc
add
push
stos
scas
fs
add
arpl
fs
mov
mov
addb
sub
add
add
pop
or
push
je
in
adc
dec
cmp
into
mov
aas
addl
out
adc
add
mov
jg
clc
insb
lea
test
push
mov
push
sbb
pop
xchg
sub
push
mov
add
popa
nop
jle
mov
loopne
mov
dec
pop
mov
fcmovbe
cmp
adc
xor
repz
rolb
loopne
jge
aad
div
mov
pushf
lret
xor
add
adc
push
push
call
iret
adcl
rolb
cli
cmp
add
filds
bound
mov
cmp
shrl
jns
mov
nop
mov
xchg
push
inc
add
push
push
sub
popf
and
das
cmpsb
adc
test
cmp
add
jns
lret
lcall
add
add
and
popf
fstl
inc
add
and
pop
iret
sbb
xchg
lds
sub
mov
rolb
out
pop
outsl
jle
in
dec
fbld
sbb
xchg
addb
cmp
dec
push
pop
cmp
in
sub
fnsave
jb
enter
push
enter
das
xor
inc
hlt
in
in
shl
or
jnp
sti
scas
ja
add
loopne
outsl
pop
mov
testb
inc
mov
into
xsha256
cmpsb
push
shr
add
shll
sbb
jne
enter
lret
addr16
sbb
add
push
mov
mov
pop
xor
mov
rolb
scas
out
mov
ret
jbe
or
dec
push
in
jge
cmc
add
dec
nop
sbb
in
es
push
inc
add
test
repnz
add
mov
pop
adc
sbb
xor
mov
shlb
repz
fbstp
add
push
and
cmpsb
and
push
aas
daa
sbb
stc
ja
adc
or
mov
daa
adc
pop
jae
test
sbb
outsl
push
mov
daa
movb
out
or
fmuls
add
popf
pop
add
mov
les
mov
adc
decl
addb
lock
cmc
fdiv
cltd
or
fisubrl
xor
dec
mov
fsub
sub
add
pop
push
lea
pop
stos
jle
data16
sti
push
in
cmpsb
lods
sub
mov
xchg
insl
push
sub
add
cmp
ljmp
cmp
add
movsb
push
fdivr
push
push
decb
xor
xor
aaa
xchg
cmpsb
jl
sbb
dec
std
push
add
hlt
addb
icebp
xorl
movb
lds
pop
mov
dec
orl
nop
push
or
fidivs
mov
ret
dec
adc
jg
jbe
inc
mov
adc
jl
push
add
pop
xchg
aaa
insb
sub
into
mov
mov
je
lea
fisubl
and
xor
addr16
mov
mov
add
das
sbb
insb
outsb
loope
outsl
pusha
add
push
mov
mov
pusha
add
daa
add
inc
add
hlt
inc
jp
test
stos
cmp
outsl
scas
inc
add
push
xchg
mov
mov
ret
fisttpl
imul
imul
sbb
adc
mov
mov
push
aad
add
in
shll
loopne
add
push
dec
pop
inc
jl
sub
mov
cmp
imul
mov
add
aaa
out
push
mov
push
adc
push
or
les
push
mov
push
stc
sahf
fnstcw
pushf
sub
xchg
mov
jle
int
icebp
clc
movb
and
inc
add
hlt
shlb
jbe
mov
outsb
dec
adc
inc
add
mov
xor
popf
add
push
sub
cmp
mov
mov
rolb
insb
repnz
stos
data16
cmp
cmp
sahf
push
in
popa
add
push
jge
pop
or
test
mov
and
pop
imul
add
cmc
inc
clc
mov
xor
in
or
jp
jno
outsb
insl
mov
lahf
sbb
mov
popf
jle
daa
cltd
pushf
pop
mov
lods
pop
fisttpl
jg
daa
xchg
and
scas
ret
cmc
mov
outsb
adc
les
loope
or
fsubrs
fiaddl
fdivrs
imul
aaa
mov
add
das
out
inc
jnp
pop
cli
mov
mov
popa
mov
pop
push
push
sub
xchg
cmp
cmc
adc
inc
inc
add
cwtl
mov
add
mov
mov
int
sbb
mov
ss
mov
adc
lods
and
xchg
ffreep
aam
or
add
insb
ficompl
push
stc
lea
adc
push
sbb
int3
aam
mov
mov
das
inc
inc
add
aas
sbb
push
fdivr
outsl
aas
aaa
aas
mov
into
mov
lret
idivb
testb
cli
and
cmp
mulb
add
pushf
and
push
das
dec
dec
mov
push
push
cmpsb
sbb
add
add
sbb
shll
cld
stos
and
sub
test
cmp
sub
xchg
jae
lods
mov
add
arpl
push
shlb
mov
xchg
pop
int
sbb
lock
jns
movb
dec
add
mov
sbb
setbe
into
movq
cwtl
mov
jno
rolb
sub
popf
in
adc
pop
mov
test
insl
jge
lods
sahf
dec
rcl
vcvtpd2psx
jecxz
sahf
lret
jle
jb
in
jge
or
pop
pop
jnp
add
jecxz
dec
rolb
and
out
jle
jmp
imul
and
pop
or
dec
cmp
sub
jp
sbb
mov
pushf
add
cltd
cmc
pop
pop
aad
mov
pushf
test
jg
lret
cltd
dec
push
cmp
add
fidivs
jo
jne
ret
and
jnp
jb
xor
jp
add
bound
cli
jge,pt
push
xor
cmp
xchg
outsb
daa
add
add
movb
cs
test
les
lret
sub
outsb
sub
xchg
shll
js
lods
jmp
mov
mov
div
data16
sbb
inc
mov
data16
add
mov
xor
pushf
pusha
add
cmp
xchg
loopne
inc
ret
push
fnstenv
inc
add
add
mov
add
ja
pop
sub
out
lcall
je
bound
adc
sarb
jecxz
not
and
xchg
push
gs
pop
mov
daa
lds
mov
gs
xor
ja
in
aas
sbb
xchg
inc
dec
inc
add
sbb
mov
jg
sarl
mov
cmp
in
cld
fisubl
mov
stos
jmp
cltd
mov
fs
dec
cmp
int
aaa
mov
pop
inc
add
ficompl
dec
mull
orl
xchg
mov
inc
add
jmp
ds
cmp
repnz
jl
pop
xchg
iret
fldcw
xchg
adc
inc
add
push
push
lret
sbb
xchg
xchg
divl
std
add
add
cmp
xchg
call
hlt
es
pop
sbb
sbb
addb
mov
fstpl
ret
cmp
lock
or
mov
icebp
ja
movb
inc
add
adc
jbe
add
inc
mov
add
and
fcoms
fwait
dec
mov
rcll
daa
mov
jns
xlat
ret
xchg
mov
inc
or
pushf
sbb
xchg
addr16
lret
add
gs
inc
cmp
fildl
jb
fdivrp
sbb
aas
jl
popf
cmp
cmp
les
rcl
rcr
mov
icebp
push
or
mov
scas
sub
in
pop
sub
pop
lcall
int3
movb
xchg
ret
mov
adc
into
outsl
ja
clc
mov
int3
test
imul
rcll
push
and
dec
lock
push
push
dec
lea
mov
mov
mov
push
test
inc
mov
dec
adc
int
arpl
jmp
pop
pop
fmuls
shlb
add
into
int3
outsl
lret
dec
add
shrl
rcr
and
imul
add
xlat
adc
inc
push
jl
mov
clc
mov
mov
rolb
call
das
add
ja
add
ret
jbe
mov
mov
insl
jno
in
scas
sbb
sbb
xchg
fwait
ret
loop
sti
mov
mov
mov
add
std
loopne
mov
bound
rcl
lods
mov
add
mov
xchg
daa
xor
movsb
xor
add
xlat
push
xor
jb
std
sbb
mov
gs
and
sub
sub
lock
or
sub
inc
add
inc
add
xorl
in
and
adc
dec
ds
add
mov
xor
scas
in
clc
cmc
jae
push
bound
lea
popa
fdivs
outsb
or
or
fcoml
out
and
orl
jmp
inc
add
and
stc
aaa
addb
or
xchg
jecxz
aad
and
stos
in
scas
cmc
and
sbb
ret
bound
fisubrl
lea
add
add
add
and
dec
xchg
fisttps
repz
inc
add
add
iret
jnp
sarl
nop
dec
imul
and
cs
mov
xlat
xchg
movb
cmpsl
jae
sbb
mov
add
jno
inc
add
and
mov
mov
enter
lcall
mov
in
xchg
fwait
sbb
cwtl
jns
xor
mov
aad
fistl
daa
ss
rolb
out
movsl
sti
fnstcw
and
out
pop
iret
shll
imul
rcll
push
scas
mov
dec
add
fwait
outsl
jmp
sub
sbb
lods
sbb
ja
xchg
adc
xchg
or
push
cld
leave
jmp
inc
add
cld
xchg
and
push
add
mov
mulb
push
xchg
fnstenv
inc
xor
add
xchg
xlat
mov
sbb
dec
jecxz
sbb
ljmp
add
cmc
adc
dec
dec
sub
pop
loop
pop
imul
pushf
ret
movsb
push
shll
xlat
stos
push
mov
xor
xor
add
mov
adc
pop
push
sub
aas
cld
xchg
aad
das
mov
psubd
and
imul
pushf
push
xchg
repnz
fstps
imul
rcrl
cmpsb
inc
rcl
mov
sbb
dec
xchg
dec
push
decl
mov
and
add
movb
add
js
mov
fsubrs
push
mov
add
xlat
and
dec
int
jae
outsb
inc
add
push
and
rcll
pushf
mov
in
xor
push
in
pop
xor
xorl
cmc
mov
pop
mov
inc
ret
dec
in
add
leave
imul
mov
jg
xor
mov
mov
lret
repnz
adc
xchg
mov
ss
add
call
add
pop
cmp
add
imul
addr16
fbld
flds
imul
push
sbb
add
lds
aam
xor
push
jle
ficoml
test
cld
and
push
test
cmp
inc
loope
ss
das
cwtl
into
test
in
add
test
fdivrp
ror
stos
mov
jle
movsb
iret
xchg
test
sti
mov
add
addr16
popf
ficoms
sahf
imul
push
cmp
inc
fistpll
xor
push
mov
sbb
sahf
mov
sbb
ss
mov
ss
mov
push
es
add
inc
stos
sahf
sub
les
xchg
cmpl
sbb
testb
dec
daa
pop
ja
lea
divl
add
add
leave
cwtl
stos
cmp
pop
xlat
ret
mov
pop
cmp
addb
rolb
fldenv
cmpsb
insl
xchg
or
fdivl
and
addb
dec
cmc
js
int
lods
xlat
stos
push
dec
lahf
in
sub
pusha
add
addb
jbe
mov
add
mov
loop
or
xchg
inc
add
xchg
movsb
jo
mov
jle
int
out
dec
dec
lea
dec
pop
cs
push
bound
adc
sbb
es
pop
xchg
imul
jmp
sub
rclb
iret
add
fwait
int3
aad
mov
adc
push
adc
xchg
pop
inc
add
sub
add
lea
pop
jl
rolb
mov
sub
cmp
add
and
inc
add
pop
jno
and
movsb
div
jns
sahf
mov
push
push
call
into
pop
jge
add
pop
arpl
cmp
sub
lret
insl
cmc
stos
imul
jne
cmc
or
repnz
sub
mov
fcompl
mov
int
fdivrs
testl
dec
mov
pop
lcall
push
je
adc
xor
out
mov
fsub
push
fsts
ljmp
add
add
pcmpgtd
stos
mov
add
add
cmpsb
dec
mov
jne
test
je
xchg
and
mov
int
jbe
leave
inc
add
sbb
lds
shll
add
movsl
in
sbb
arpl
sti
enter
out
jmp
push
sbb
add
pop
add
lock
cmp
add
cmc
out
fwait
pop
push
jmp
inc
inc
add
sti
add
adc
mov
movsb
fnstenv
mov
ja
cmp
mov
inc
sarb
sbb
cld
dec
pop
and
xchg
and
add
add
jnp
xor
push
mov
xchg
fwait
js
sti
jb
dec
repz
add
stos
jp
add
decl
pop
mov
cli
dec
out
push
pusha
add
mov
add
les
mov
xchg
dec
jecxz
out
dec
adc
push
add
sub
xchg
divl
push
out
sub
push
jbe
subl
add
xor
jecxz
test
xor
fs
scas
inc
movb
cld
cmp
dec
and
scas
lret
or
mov
lods
addr16
xor
mov
cmp
in
daa
out
jecxz
xchg
inc
and
addr16
xchg
push
cmp
mov
mov
clc
mov
xchg
dec
jne
and
push
mov
out
stc
dec
mov
lods
outsb
pop
scas
out
arpl
add
push
mov
punpcklbw
int3
sbb
addr16
test
and
add
cmp
mov
mov
pushf
cli
gs
enter
cmp
inc
shl
pop
pop
out
daa
ds
push
imul
ljmp
adc
addl
aam
movb
inc
add
sbb
mov
lods
rolb
mov
and
mov
jmp
lea
mov
lret
lcall
mov
mov
pusha
add
into
rolb
popw
jmp
push
testl
add
add
mov
inc
add
push
add
cltd
cltd
ds
push
int
add
add
add
cmp
fcmovb
jae
out
mov
test
adcl
jae
mov
movsb
push
xchg
imul
inc
fnstenv
mov
sub
mov
dec
les
jg,pt
popf
ljmp
fwait
fwait
cmp
lcall
das
mov
push
mov
aas
test
outsl
or
pop
enter
adc
rclb
and
gs
lahf
fsubrl
sub
arpl
insb
add
pop
into
inc
cld
ja
int
or
adc
fsubs
sbb
int3
push
cmp
push
xchg
mov
pop
add
xchg
cmp
fiaddl
daa
mov
push
and
cmp
ret
mov
adc
out
sub
scas
add
cmp
stc
or
movb
push
sbb
aaa
loop
add
sbb
mov
nop
and
fldenv
dec
or
popa
adc
inc
add
lods
xchg
sub
frstor
mov
aad
aaa
lods
mov
int3
jge
popa
pop
pop
sbb
xor
incl
add
mov
dec
adc
mov
add
add
dec
inc
add
das
out
mov
test
mov
loop
inc
movsb
mov
stos
aaa
mov
adc
inc
add
sbb
add
dec
add
push
add
shrl
jge
and
sub
push
pop
adc
pop
push
imulb
ljmp
iret
gs
popl
jle
dec
pop
addr16
stc
mov
jnp
pop
xchg
into
fdivrl
rcl
outsb
or
jl
or
mov
sub
daa
cmc
pop
bound
add
inc
movsb
js
push
mov
mov
xchg
dec
sub
xchg
test
add
push
jmp
movsb
adc
or
notl
shr
add
add
lods
xor
add
scas
aam
push
in
dec
insl
cld
loop
xor
jg
push
xchg
add
mov
and
push
mov
rcrl
add
xchg
stos
les
test
test
pop
and
ljmp
aas
jne
ret
dec
xchg
dec
jle
add
mov
mov
bound
cltd
shrl
shl
or
stc
adc
gs
rolb
pop
sub
cwtl
pop
repnz
aad
jnp
je,pn
xrelease
fisttpll
in
pop
sbb
int
and
ds
les
mov
fisubrs
lret
loopne
lock
aam
into
in
xchg
or
or
dec
lcall
push
push
test
out
and
and
mov
iret
fidivrs
imul
adc
jecxz
jmp
fs
mov
imul
aam
mov
dec
sbb
sbb
jnp
sbb
cmp
mov
ffree
xlat
lock
inc
add
jecxz
pop
fsubr
pop
daa
mov
push
sub
push
push
inc
mov
mov
sbb
push
add
ficomps
add
lret
loopne
rorb
pop
cwtl
sub
jnp
jl
dec
insl
jmp
add
scas
push
in
add
cwtl
mov
pop
test
cwtl
enter
xchg
mov
pop
push
and
adc
mov
add
pop
lahf
scas
adc
jns
pop
stos
loopne
and
and
xlat
dec
xor
pop
jae
fisttps
xchg
dec
cs
xchg
xchg
aad
cmp
out
jae
xor
lds
add
ror
jne
scas
je
mov
imul
add
lock
cltd
loope
push
pop
cmp
mov
arpl
aas
aas
jnp
mov
iret
mov
mov
in
nop
rcrl
lds
clc
add
cmpsl
js
add
add
rcrl
add
xorl
mov
cmpsb
jbe,pn
xlat
rcr
pop
push
popf
test
fists
shrl
addb
in
out
adc
sub
mov
fwait
or
inc
cli
stc
inc
add
xchg
pop
sub
inc
mov
insb
sahf
cmc
addl
aas
shll
xor
dec
js
mov
jp
xchg
xchg
imul
inc
int3
pushf
inc
add
cld
movsl
and
mov
pop
mov
sbbl
sbb
lods
xchg
mov
insb
lods
pop
test
xor
int3
or
xor
mov
cld
popf
es
sub
adc
loop
scas
mov
ss
mov
add
loop
iret
pop
iret
jnp
add
cmpsb
mov
daa
lahf
jne
add
mov
data16
pop
pop
out
aad
mov
stc
test
xor
add
push
add
sbb
push
add
inc
pop
pop
jmp
sub
cmc
std
jg
sahf
iret
dec
rolb
in
aas
ss
inc
xchg
push
in
les
adc
in
and
sub
ljmp
add
stos
in
psraw
xchg
and
das
loope,pn
pop
sbb
bound
fwait
int
loope
or
add
stos
fcmovbe
out
mov
int3
les
subl
ds
loop
ret
mov
das
or
sarb
jecxz
sub
jg
fildll
pop
xchg
std
push
stos
xor
mov
dec
xchg
or
cmp
jo
insl
sti
outsl
ja
cmp
scas
filds
lret
sbb
into
dec
mov
inc
inc
add
cmp
push
popf
imul
test
pushf
scas
scas
or
or
xchg
imul
add
dec
sbb
push
cmp
jge
push
mov
fcmovu
mov
pop
popa
dec
popa
inc
add
int
mov
pushf
popf
ret
cmp
lret
xchg
int
cltd
aad
mov
movsb
jno
add
pop
std
das
adc
push
pusha
add
sbb
sbb
or
sub
push
or
or
and
xor
sbb
jnp
imul
outsb
js
cmpsb
jnp
xor
imul
stc
pop
or
into
jae
push
cmpsb
leave
in
adc
mov
add
add
sbb
mov
cmpsl
push
xchg
js
mov
sar
mov
bound
xchg
and
stc
sarb
movsb
sub
and
data16
mov
int
loopne
popf
push
mov
mov
aad
aaa
sti
inc
ret
mov
add
add
xor
cmp
push
aad
cli
inc
jbe
inc
add
in
ja
push
stos
xlat
into
adc
inc
fnclex
and
inc
adc
leave
arpl
repz
fucomi
xchg
daa
mov
sub
leave
stos
mov
andl
xchg
aam
pop
mov
pop
mov
fstps
mov
stc
andl
test
test
add
push
addr16
inc
add
xor
push
int3
idiv
mov
ds
sub
inc
add
ror
xor
fcomp
enter
dec
add
jge
add
adc
add
loope
loope
rcrl
jle
test
push
and
stc
iret
pop
and
out
mov
xor
mov
in
add
add
mov
mov
cmp
test
add
and
in
mov
mov
sti
mov
ljmp
pop
cld
mov
ljmp
lock
jnp
adc
clc
shr
addr16
ds
fwait
icebp
mov
leave
ret
cmp
into
pusha
add
xchg
movsl
mov
adc
test
adc
mov
add
arpl
add
loopne
xchg
sub
sub
cli
adc
jle
jb
fnstenv
addr16
lds
add
jecxz
bound
leave
das
mov
and
add
in
cmpsl
cwtl
sub
icebp
or
outsl
das
out
movsb
sub
inc
sbb
add
jbe
cltd
sbb
sbb
cwtl
push
sahf
jb
xchg
mov
in
pusha
add
punpckhwd
mov
pop
dec
mov
xchg
pop
lock
mov
js
ja
out
sub
xchg
fisubs
stos
mov
add
out
xchg
addr16
pop
xchg
in
or
icebp
stos
fstps
push
xor
movsl
add
inc
cld
sahf
inc
jge
dec
lret
dec
mov
in
out
out
outsb
inc
dec
pop
lcall
inc
add
xor
add
mov
and
push
adc
dec
lcall
sbb
sbb
mov
mov
addb
and
lods
shrl
nop
mov
mov
add
push
push
xor
fnstcw
sub
and
add
int
xor
negb
mov
rcrb
cld
gs
and
xlat
or
in
dec
and
lods
fldcw
dec
mov
pop
pop
loope
je
incl
mov
push
insl
test
and
sbb
xor
negb
cwtl
jmp
mov
and
ret
mov
mov
mov
add
mov
mov
mov
mov
std
adc
ret
dec
movb
xchg
adc
lahf
sub
in
lods
adc
in
push
push
push
outsb
fwait
xchg
mov
lods
pushf
fcomi
fsubl
push
dec
in
add
je
shlb
push
clc
inc
add
pslld
pop
dec
sahf
jne
jp
mov
cmpsb
or
nop
aaa
insb
mov
jp
addb
sbb
out
das
mov
dec
push
pop
pop
in
nop
dec
and
xchg
loopne
movsl
ffree
push
ss
sub
addb
xor
mov
jne
dec
sti
test
cmp
aad
fnclex
addb
bound
push
repnz
ret
fcompl
add
lods
fs
lcall
enter
cmc
pop
cli
fcompl
in
out
clc
js
cmc
out
and
mov
test
ja
dec
int
push
loope
add
bnd
std
test
fwait
mov
popf
das
mov
scas
dec
iret
lock
pop
sub
mov
leave
adc
mov
xchg
add
in
incl
mov
add
and
addb
mov
sbb
push
aad
push
pop
js
fiadds
jmp
dec
or
cwtl
faddl
aam
add
push
or
add
add
ret
cli
dec
loop
push
fwait
in
into
mov
xchg
popf
fdiv
inc
pusha
add
sbb
ret
sti
stos
jecxz
lcall
out
jmp
sub
jmp
js
add
out
sub
sarb
and
xchg
out
dec
call
adc
clc
fcoml
fsub
lret
push
inc
add
sbb
pop
xor
sbb
out
shl
call
icebp
jno
cltd
ret
push
aam
test
addb
cmp
pop
jmp
sahf
dec
shlb
dec
fisttps
cmp
imul
add
pushf
lods
add
cmpsl
arpl
enter
xchg
fwait
add
and
cs
push
mov
push
in
mov
imul
ljmp
cmp
push
stos
push
and
sbb
fstps
fdivrl
or
les
xor
push
push
or
daa
xor
je
cltd
xorl
inc
lcall
rolb
mov
jecxz
mov
aaa
test
mov
push
xor
inc
movsb
icebp
loopne
mov
dec
in
push
mov
push
xorl
jnp
ds
int
add
mov
xor
loop
push
mov
inc
jo
xchg
stos
jne
jbe
repnz
jmp
sbb
push
jne
push
add
jo
imul
test
pop
dec
hlt
leave
mov
add
into
sbb
mov
xor
add
pop
xchg
lods
sub
pusha
add
xchg
dec
sti
adc
xchg
insl
fcomps
mov
sbb
les
mov
cmpsl
les
push
stc
mov
add
fadd
add
dec
cld
aad
adc
xor
push
pop
inc
add
xchg
out
in
cmp
add
adc
dec
inc
add
pop
rorb
inc
add
add
sub
mov
mov
mov
mov
out
add
xchg
sub
addb
sub
sbb
imul
stc
bound
xor
add
lds
add
sub
sahf
push
push
push
cmp
inc
mov
movsl
add
mov
mov
pop
ss
scas
dec
cmc
mov
sarl
inc
add
cmpsb
outsb
pusha
add
push
in
mov
mov
rolb
add
cltd
sti
pop
mov
aam
xchg
ret
shlb
mov
movb
inc
roll
movsl
push
leave
inc
add
mov
pusha
add
pop
xchg
into
shll
mov
lods
nop
int3
cld
xor
sbb
add
push
add
int
add
add
cwtl
or
dec
es
movsl
or
adcl
rclb
pop
out
push
and
inc
add
xor
pushl
add
int3
stos
sbb
or
add
xchg
add
jns
jp
add
add
hlt
ljmp
iret
push
les
inc
add
cmpsl
int3
jp
fucomp
fcoml
sbb
or
fcoms
sub
stos
fidivs
dec
xor
mov
roll
jnp
fcompl
lods
nop
or
sub
jb
test
repz
cmpl
stos
insl
hlt
cmp
cwtl
cmc
jae,pn
add
out
inc
dec
add
and
outsl
int
add
je
add
push
fsts
gs
add
jae
stos
jmp
es
jnp
data16
pop
jno
test
mov
xor
cltd
decl
lret
pop
test
popa
in
dec
loop
xchg
mov
je
lcall
dec
mov
lahf
cmp
aad
dec
pushf
jle
or
mov
mov
cmp
sub
rep
xchg
xchg
mov
inc
push
xchg
mov
sub
and
jo
cmpsb
ja
or
scas
sub
sub
imul
cmp
mov
fs
fcmove
aas
lds
jmp
inc
add
jge
lock
sub
or
add
add
adc
fisubs
dec
mov
test
je
and
inc
cmpsl
jne
andl
xchg
mov
das
mov
sub
add
out
cli
dec
movb
out
sbb
mull
loopne
xor
add
jl
jg
adc
aas
fcmovu
rcrb
mov
sbb
cmp
test
or
push
hlt
inc
outsb
push
mov
scas
pushf
into
cmp
mov
and
inc
lea
xor
gs
inc
daa
mov
addb
lret
test
inc
or
sub
dec
push
out
iret
sub
or
push
mov
xchg
and
mov
sub
push
insl
cmp
cmp
test
mov
sub
in
add
stos
xchg
addr16
popf
pop
mov
addr16
cmp
push
out
outsb
fstl
add
mov
add
add
sub
push
lret
ja
mov
mov
std
mov
divb
fsub
dec
mov
clc
jle
loop
fimull
jns
adc
aas
pop
cmp
push
out
mov
rolb
jo
stc
pop
sbb
mov
ja
sbb
fdivs
sahf
lds
mov
add
add
rolb
pusha
add
add
add
adc
mov
xorl
lods
enter
mov
incl
add
add
sub
out
xor
outsl
addl
add
lock
add
push
mov
dec
and
cli
cmp
pop
and
icebp
rcrb
cmc
adc
pop
xchg
sbb
push
enter
bound
sub
add
ljmp
add
add
repz
movsb
call
adc
sbb
xchg
mov
xchg
sti
cmp
push
testb
mov
mov
lds
dec
pop
jne
stos
sbb
jnp
loopne
push
loop
pop
cmp
rcpps
jmp
mov
jp
push
fs
mov
inc
aaa
jne
out
and
ja
js
sub
pop
imul
aam
inc
dec
jb
aam
push
xchg
stos
xchg
clc
mov
sbb
repz
cltd
stos
cmc
dec
sub
in
and
jecxz
pop
sahf
fsubs
sub
movsl
mov
mov
sahf
xchg
cmc
mov
dec
fisttpll
mov
push
add
mov
mov
or
and
sub
sbb
sbb
imul
stc
push
push
jmp
push
addb
imulb
sbb
add
jecxz
mov
add
out
shl
fiaddl
rol
outsb
test
sarl
movsb
fisubl
mov
imul
and
inc
add
or
ret
outsb
gs
add
add
jnp
in
mov
add
and
cmp
cwtl
xor
or
xor
fcmovnb
add
subl
stc
mov
fs
rolb
fiadds
mov
lock
push
mov
jo
addb
mov
insl
mov
push
pop
shll
rorl
daa
movb
lcall
js
je
insb
mov
dec
cs
add
or
add
popa
aam
add
das
jecxz
mov
aaa
inc
add
xchg
sbb
mov
pop
jo
sub
add
xor
jae
je
add
lret
cld
outsb
jmp
add
sub
mov
imulb
push
sbb
daa
inc
add
cmp
add
in
mov
sbb
insb
das
mov
lods
push
out
xorl
movsl
fabs
jge
outsb
ljmp
dec
in
rolb
jnp
jb
add
das
adc
mov
xor
or
and
or
movb
jo
lods
dec
mov
mov
mov
addb
rolb
xor
xchg
jmp
mov
sarl
jg
push
xchg
push
push
mov
jns
pop
rolb
popa
xchg
sub
xor
dec
or
shrd
mov
dec
bound
iret
leave
xor
bound
pop
repnz
movb
stos
pushf
pop
rolb
pop
sbb
adc
add
inc
test
sub
sbb
xchg
add
jbe
das
aas
xchg
cli
adc
sbb
pusha
add
xchg
ja
faddl
mulb
add
adc
or
outsl
push
add
arpl
mov
jnp
sbb
les
xchg
paddq
or
sahf
fldcw
pop
sub
cmc
fistl
push
add
add
pop
pop
pop
inc
add
cmpsl
lods
sahf
rolb
lods
rcrl
movsb
xor
dec
or
aaa
stos
sbb
push
mov
and
xchg
xor
addl
xchg
scas
fnstenv
lea
cmpsl
addb
lahf
addr16
in
outsb
mov
dec
jo
and
sub
sbb
dec
lock
in
cmp
push
jno
fs
or
mov
inc
push
es
dec
imul
cmc
sbb
adc
lds
test
xchg
inc
pushf
pop
ret
or
les
dec
xor
into
inc
idivb
lea
sbb
gs
out
cltd
xor
add
push
and
sub
test
fisubs
pop
xchg
pop
pop
jl
sbb
add
insl
sub
mov
pushf
ret
xlat
aas
xchg
test
or
jbe
insb
ja
aad
or
cmp
and
push
fs
in
jnp
fdiv
jmp
add
add
ss
sub
or
add
mov
pop
add
out
daa
arpl
sub
add
mov
in
testb
pusha
add
xor
add
push
in
outsl
pushf
or
idivl
in
xchg
add
push
ret
sub
dec
mov
mov
fimuls
call
in
cmc
sbb
and
loop
dec
sub
pop
cmp
add
imul
mov
insl
addb
pop
and
dec
mov
ljmp
or
and
cs
or
je
jnp
popa
stos
or
fbld
mov
or
imull
xchg
adc
shl
xchg
mov
addb
hlt
mov
imul
adc
and
fadd
add
add
mov
orl
std
inc
add
xor
and
rolb
jne
sub
jge
push
jecxz
mov
add
add
out
addr16
imul
adc
jo
pop
mov
sub
cli
int3
or
sbb
add
jb
sahf
and
scas
jge
mov
fs
fwait
cmc
hlt
int
add
push
call
or
push
movsl
xor
add
cmpsl
jae
arpl
mov
mov
int
xor
addb
call
mov
rcl
push
xchg
lock
push
iret
mov
hlt
std
mov
mov
gs
fs
mov
mov
iret
inc
popf
and
dec
adc
xchg
or
cmp
lods
scas
xor
ja
jecxz
lds
xchg
inc
das
les
adc
daa
and
inc
add
push
push
test
test
lret
jo
push
pop
sub
pushf
les
lahf
xor
lods
cwtl
cs
sbb
xor
add
cmp
mov
movb
sub
movb
or
movb
mov
std
and
add
mov
push
add
lcall
adc
sbb
shrl
push
push
adc
add
outsl
mov
js
pop
add
mov
out
ret
hlt
sbb
mov
adc
into
mull
jae
not
cs
test
pop
insb
push
push
leave
mov
scas
add
dec
fcoml
jl
pusha
add
shlb
add
add
adc
inc
add
add
inc
add
jg
inc
inc
decb
jno
jp
dec
adc
aam
stc
inc
push
mov
push
dec
inc
and
scas
or
xor
inc
or
pop
push
cmp
mov
sbb
mov
inc
std
cmp
add
gs
cli
push
mov
cmpsb
iret
mov
jl
inc
bound
add
and
mov
adc
add
sub
pop
push
iret
adc
into
outsl
pop
mov
cltd
in
dec
les
bound
xchg
push
mov
adc
pop
mov
mov
loopne
addb
aaa
mov
push
push
sahf
push
add
add
leave
mov
imul
out
rcrl
sub
adc
imul
lcall
ja
js
cli
and
gs
fildl
ljmp
pop
sbb
pop
xchg
jmp
mov
pop
jg
mov
in
push
pusha
add
in
out
out
or
scas
popa
and
cwtl
movb
popf
and
or
popl
popa
scas
mov
xchg
mov
dec
mov
aad
or
pop
aas
xchg
outsl
mov
or
fst
shll
sub
cmpsb
xchg
out
sub
cs
pop
add
les
xchg
mov
adc
add
mov
sarl
inc
add
pop
idiv
aaa
add
cmp
add
out
adc
cmpsb
out
pop
or
js
je
insl
mov
test
push
arpl
jb
mov
push
add
loopne
fcos
push
jne
pop
addb
xacquire
add
mov
movsl
cmpsl
xor
inc
add
js
jle
mov
out
xor
sbb
dec
fcoml
xchg
iret
enter
pop
rcr
pop
bound
arpl
test
arpl
mov
jle
jge
lret
sub
lock
sub
inc
add
jle
pusha
add
xlat
push
repz
std
ja
xchg
mov
adc
push
jo
mov
sbb
outsb
fs
mov
jb
lret
pop
inc
into
add
fnstcw
add
or
push
rorb
add
les
xor
ss
push
cwtd
add
call
loope
aas
movl
pop
nop
and
jb
mov
lar
or
or
int3
lahf
xchg
push
xlat
dec
sub
rolb
adc
outsl
loop
xor
shrb
cld
int
push
xchg
popa
jecxz
jno
add
adc
dec
push
add
mov
nop
aas
mov
stc
aad
cltd
cwtl
cwtl
lahf
aam
inc
dec
lea
add
xchg
inc
lds
add
lret
mov
ljmp
pop
lds
mov
push
sub
addb
pop
mov
popf
les
rolb
dec
mov
dec
or
cmp
scas
imul
mov
add
add
fisttpll
test
xchg
vminpd
test
movsl
imul
cmp
dec
push
add
insb
xchg
and
dec
mov
sbb
cmp
inc
cmovp
add
mov
sahf
daa
lcall
add
or
dec
rolb
mov
movsb
inc
add
add
cld
push
pop
push
in
nop
dec
scas
cmc
popf
inc
sbb
add
sbb
scas
std
stc
pop
stos
adc
fnstsw
adc
cmp
lock
mul
cmp
movb
fisubrl
movsb
popf
mov
sub
add
adc
push
outsl
hlt
cli
xchg
lcall
addb
cmp
pushf
sub
ffreep
jb
xchg
repz
lret
or
lea
mov
addb
push
iret
in
xchg
cmp
xor
repz
pop
push
addr16
pop
xor
push
loope
cmpsl
dec
lret
lcall
ret
xor
or
add
push
in
movb
add
loopne
xchg
fsubl
xor
xchg
fsubrl
scas
mov
pop
xchg
arpl
jecxz
addb
dec
imul
dec
sahf
jns
movsl
mov
jbe
sbb
add
add
add
cmpsl
push
frstor
and
xlat
inc
push
dec
push
add
mov
stos
out
fmulp
cltd
inc
inc
insl
and
dec
mov
mov
mov
inc
add
cmp
add
aaa
xor
addr16
xor
sbb
fstps
lahf
jae
sub
pop
pop
ss
cmp
adc
inc
add
cmp
mov
adc
imul
xchg
jns
xor
jbe
outsb
and
xchg
bound
cmp
pop
scas
test
cld
sbb
fcmovnu
or
loopne
addb
movsb
push
neg
imul
adc
inc
add
fidivl
mov
jne
lret
std
mov
inc
fdivr
aas
iret
std
and
add
add
sbb
push
add
mov
or
imul
shl
inc
punpcklbw
or
sub
add
xchg
test
imul
ret
loope
shlb
add
mov
mov
add
fmull
ja
int3
push
add
add
jns
jo
sbb
pop
addb
mov
pop
sarb
fisttpll
mov
shrl
lcall
and
fcoms
jecxz
pushf
mov
int
movsb
addb
jle
pusha
add
ret
add
jecxz
movsb
mov
xor
push
mov
push
loope
mov
testl
ret
loopne
cmp
fstpl
sub
add
test
into
repz
xchg
inc
add
ret
push
pop
in
cmp
add
rcll
jo
test
xor
jne
pop
xchg
add
arpl
add
sarb
add
gs
cmc
jnp
inc
sub
add
cwtl
xor
xchg
test
jmp
or
mov
test
lock
lods
lea
nop
idiv
and
xlat
xchg
in
iret
test
jmp
jo
xchg
add
jne
pop
je
adc
mov
movsb
insb
lock
arpl
adc
add
popa
in
repz
fstpt
les
mov
add
push
inc
cwtl
fldenv
xchg
outsl
dec
push
popf
push
inc
add
mov
add
arpl
outsl
sub
pop
leave
repz
movsl
jg
inc
mov
push
pop
loope
stos
cltd
pinsrw
and
xor
pusha
add
or
add
cmp
dec
lcallw
lret
sub
xlat
cmpsb
cmpsl
cs
clc
inc
out
rolb
lds
stos
xchg
stos
movsb
sub
mov
mov
ja
add
add
pop
popf
pop
out
sub
shrl
pop
push
adc
fstpt
addb
add
pop
sub
inc
daa
fldt
jbe
jo
mov
popf
adc
jle
xchg
insb
leave
jg
int3
push
lock
aad
imul
andl
into
mov
sbb
and
mov
push
test
and
lcall
fsubs
jg
enter
insl
xlat
jle
out
ret
test
jmp
movsb
sbb
aad
popf
shlb
int
insl
movsb
push
fldcw
adc
mov
loope
add
sar
mov
push
les
aad
into
mov
movb
mov
cmp
outsb
jl
sub
scas
xor
pop
icebp
inc
push
fistpll
pusha
add
inc
push
je
add
dec
in
jns
add
mov
add
outsb
loope
cld
add
push
in
push
xchg
addb
push
add
sbb
mov
cmp
sub
add
push
mov
out
insb
mov
xchg
lods
push
sub
jns
pop
loope
or
inc
jl
lds
pop
fwait
lahf
je
add
adc
push
loop
notl
add
push
xchg
lods
int3
inc
add
pusha
add
std
test
adc
xor
lock
cmp
push
jno
js
addb
ljmp
jp
add
daa
and
sbb
sub
incb
ds
inc
cmp
xchg
xchg
insl
addb
sarl
fisubrs
addr16
adcl
ss
push
mov
jmp
push
mov
cmpl
leave
stc
push
fsubs
xchg
jge
aas
sub
in
jp
mov
mov
mov
shr
jecxz
stc
jecxz
leave
xchg
sti
mov
into
push
push
test
xlat
jl
add
mov
rcrl
mov
imul
inc
add
dec
push
les
aam
adc
add
pop
clc
test
dec
mov
insb
dec
clc
dec
loope
pusha
add
pop
lcall
ja
leave
jle
mov
lahf
jne
add
sbb
add
pop
pop
sub
mov
sbb
cmc
addb
add
ret
addb
adc
jmp
sbb
cmpsl
push
push
xor
add
add
xor
imull
add
inc
xchg
ret
pop
shll
rolb
pop
mov
add
jecxz
add
add
adc
sahf
pop
mov
into
xor
mov
mov
and
jbe
sbb
pop
loope
imul
es
mov
cmp
js
push
out
adc
push
repz
and
mov
add
jnp
out
lret
inc
add
sub
xlat
dec
pop
hlt
inc
add
mov
neg
and
jge
jo
clc
addb
push
dec
rolb
cltd
std
testl
adc
add
sub
pop
dec
jb
push
cwtl
mov
notl
sbb
jl
fiadds
jmp
and
aaa
pop
or
mov
cmc
inc
or
addb
addr16
pop
cmp
and
or
fdivl
aaa
loope
cmp
iret
inc
scas
out
pop
jno
xchg
add
sub
push
adc
pop
dec
fstl
cmp
into
adc
xor
das
loope
inc
data16
test
push
pop
cltd
mov
cmc
dec
and
dec
pop
adc
jmp
add
mov
mov
stos
in
es
shr
lret
push
cmp
mov
stos
and
mov
rorl
lahf
inc
add
mov
mov
pop
push
push
filds
popa
xor
xlat
dec
pop
cmpsl
push
rolb
dec
lods
gs
push
loop,pt
and
sbb
je
aaa
test
sub
lahf
inc
add
lcall
push
or
sbb
sti
popf
icebp
fcomp
imull
gs
in
or
dec
cltd
jp
inc
pop
xor
pop
int
ret
dec
mov
ret
pushf
jp
sbb
insl
je
adc
push
cwtl
add
jae
inc
das
jl
sbb
adc
jmp
xchg
jmp
in
icebp
cmp
cmp
movsl
mov
rorb
aaa
test
ds
cmpsl
pop
jno
pop
movb
sub
scas
arpl
push
jno
xor
rcrb
movsl
xor
jmp
jmp
dec
xchg
out
test
mov
pop
inc
cmp
add
movsl
mov
add
cmp
cmp
int
mov
sbb
cmpsl
or
pop
fists
pop
ficoms
xchg
xchg
movsb
or
insb
jae
xchg
mov
mov
fsts
jg
mov
adc
mov
mov
call
or
sbb
lret
pop
rolb
inc
add
dec
push
sbb
mov
je
clc
mov
add
add
pop
sub
imul
lahf
push
fidivs
mov
mov
das
xchg
out
add
xchg
mov
rcll
add
vmovss
sub
fdivr
fstl
lcall
pop
leave
imul
jno
or
addb
push
sbb
inc
jno,pt
push
xlat
mov
movsl
mov
mov
inc
xchg
mov
mov
test
dec
arpl
insb
pop
jne
icebp
and
xor
movb
enter
dec
jae
mov
lahf
push
movsb
xchg
call
sbb
pop
and
jo
add
mov
cld
fsts
test
push
pop
mov
iretw
popa
dec
push
and
xor
imul
jmp
xchg
mov
sub
fucomi
int3
push
add
es
adc
sbb
loope
ret
adc
sub
outsl
cltd
in
repz
lods
push
popf
out
push
cli
loop
jmp
dec
push
into
dec
sub
inc
movsb
and
lahf
clc
dec
jmp
pop
or
ss
mov
ret
xor
add
lret
push
sub
dec
ret
or
or
sti
mov
xchg
jl
test
leave
adc
jns
int3
cmp
push
in
scas
push
mov
mov
add
test
lcall
jno
rolb
lret
inc
add
pop
mov
fcoms
adc
adc
std
jl
jb
xchg
xor
jp
sub
inc
add
les
and
xchg
xor
pop
in
mov
cltd
sbb
push
addr16
insb
xor
daa
xchg
ds
pop
movsb
dec
je
add
jns
mov
push
cs
sub
loopne
jae
inc
add
add
lahf
push
mov
cmp
lea
aad
aad
js
adc
jmp
add
mov
clc
outsb
fxch
fsub
and
std
push
add
popa
cmpsb
int
mov
and
rolb
loop
or
pop
pop
cmp
sub
jb
mov
pop
add
pop
idivb
pop
insb
inc
in
jbe
mov
arpl
add
xchg
sbb
dec
movsb
hlt
test
rolb
int
pop
sbb
jae
inc
add
xchg
and
sbb
aam
loope
dec
and
adc
movsb
imul
add
addb
aas
out
cmp
and
insl
dec
or
or
mov
pop
aad
add
mov
or
dec
xor
push
inc
inc
fcomp
lds
mov
adc
add
jno
mov
fidivl
jl
or
fisttpl
xchg
ror
jbe
fnstsw
std
lods
popa
jno
add
pop
flds
sbb
lods
int3
cltd
je
cli
sub
fs
cmp
jg
and
cli
push
cmpsb
ljmp
lahf
insb
xchg
arpl
add
inc
add
add
sbb
cmp
dec
xchg
and
pop
test
mov
add
mov
jo
add
and
aam
mov
dec
rorl
and
clc
icebp
mov
leave
jmp
loop
das
je
arpl
ds
pop
add
add
data16
mov
sti
test
ret
pop
and
movsl
sbb
inc
add
lcall
dec
push
xor
mov
rcr
jne
jp
movq
jnp
add
mul
inc
add
sub
fbld
inc
add
lods
je
hlt
adc
ficoms
adc
add
pop
les
pop
jns
sbb
jne
cltd
mov
inc
add
push
push
push
push
mov
idivl
jl
push
ss
popa
mov
pop
sub
cmp
push
dec
sub
push
add
add
sbb
aam
push
lods
paddb
add
scas
test
add
sarl
add
sub
xchg
and
pop
mov
inc
sbb
dec
adc
test
xchg
das
lret
movb
lret
ret
push
into
rolb
add
or
shrb
push
push
cs
fwait
in
mov
shl
outsl
in
test
pop
es
mov
out
jae
push
xchg
add
jno
cmp
cmp
adc
or
mov
adc
lds
or
or
xor
xchg
pop
in
push
pop
push
lcall
mov
movsb
cmpsl
pop
push
mov
mov
push
add
cmp
and
jl
arpl
or
dec
cmpsb
and
pop
add
and
or
pop
inc
add
int3
pop
sub
sub
cs
dec
mov
data16
push
rcll
add
mov
push
push
cltd
xchg
xor
or
xchg
xchg
mov
arpl
cmp
shrb
ljmp
mul
fimuls
push
xchg
xchg
dec
subl
je
sti
dec
inc
add
push
repnz
imul
add
mov
cwtl
pop
pop
jbe
push
loopne
jl
jp
out
in
or
fidivs
sbb
cmp
add
push
insl
add
adc
es
mov
roll
rolb
or
xor
loope
push
dec
pop
or
add
lret
testb
dec
cltd
or
lcall
outsl
lock
bound
jl
les
mov
sbb
mov
insb
movb
jg
xor
dec
mov
mov
add
inc
or
mov
stos
xor
cwtl
ds
hlt
aad
es
mov
and
mov
les
mov
xchg
add
add
shrl
movsb
popa
mov
or
jmp
jo
pop
xchg
ja
push
les
jmp
pop
push
xor
inc
add
dec
jae
ss
or
add
add
mov
lods
pop
cmc
push
imul
xchg
vmaskmovdqu
aaa
dec
lock
xor
or
movsb
bound
inc
add
outsl
out
mov
sub
or
lock
pusha
add
xchg
fldl
aam
dec
and
fwait
sub
insl
jge
fs
mov
cltd
cmpsb
mov
inc
add
lcall
fisttps
rorb
outsl
jg
ja
adc
mov
mov
or
jo
out
shlb
sbb
mov
add
out
jae
add
movsb
mov
add
movsl
cmp
insb
mov
es
and
inc
ss
add
sti
ret
int
shll
add
jo
inc
add
mov
jo
sub
leave
daa
adc
cmc
cmp
je
cmp
pop
mov
add
xchg
push
add
out
movb
stc
mov
add
test
sahf
mov
je
lret
enter
add
pushf
loop
xor
lock
pop
or
jmp
inc
add
xchg
cmpsb
cli
mov
push
call
push
add
inc
je
test
lods
xchg
movsl
or
mov
mov
lret
pop
mov
bound
xor
add
mov
ja
pushf
mov
xchg
jne
test
mov
fadd
jne
into
adc
cmp
dec
pop
std
and
and
add
arpl
ljmp
stos
rcrb
inc
xchg
pushf
into
fxch
xchg
test
jae
int3
xchg
push
addb
jb
push
adc
cmc
cli
hlt
leave
mov
loopne
add
inc
inc
mov
cmp
add
test
mov
xor
sbb
stos
out
fs
lahf
fwait
out
out
fs
fwait
int
into
ljmp
sahf
out
shlb
jmp
and
or
rolb
dec
mov
add
add
in
pop
mov
add
cld
icebp
aaa
aad
les
sarl
lods
cmp
push
rorb
adc
pop
pop
inc
add
imul
lea
jae
imul
and
int
sub
out
shll
add
ds
inc
or
or
clc
fistpl
pusha
add
xchg
movb
or
xchg
test
ret
sbb
je
imull
jp
mov
add
jmp
add
xchg
insb
xchg
mov
pushl
sbb
cltd
es
add
pop
les
mov
ret
iret
rolb
xchg
add
lret
or
pusha
add
xor
stos
fdiv
rcl
and
cmc
jns
add
cmp
in
movsl
popf
jp
xchg
xor
int3
push
and
inc
loopne
aam
xchg
lods
sub
xor
cmp
push
sbb
les
mov
and
cmp
leave
jmp
add
mov
add
add
imul
addb
nop
fsts
out
pop
sbb
fisubs
pop
and
outsb
int3
addb
stos
mov
push
les
and
pop
and
dec
fmulp
in
cmp
loop
insl
xor
xor
xchg
dec
xor
xor
data16
mov
cs
arpl
mov
cmc
lret
push
rorl
mov
sub
cs
adc
pop
mov
add
arpl
push
fs
push
mov
dec
enter
add
das
ljmp
ja
testl
xchg
inc
ja
sbb
sub
add
imul
repnz
aaa
enter
jmp
jb
sbb
leave
jnp
roll
mov
dec
xchg
es
push
mov
insl
jno
add
lea
xchg
lods
mov
aam
add
jmp
mov
lahf
rolb
add
in
cmp
xchg
lock
xor
mov
jne
add
lret
mov
inc
add
xchg
jns
add
add
movsb
imul
sbb
shr
adc
add
pop
aam
add
mov
cwtl
lock
cltd
fwait
dec
ja
or
inc
add
adc
adc
scas
fcoml
add
xlat
cmp
sti
nop
jb
dec
and
loop
adc
and
push
in
test
cmp
ficompl
gs
jno
rcrl
es
cmc
stc
mov
ss
lds
int
bound
fs
and
addb
lahf
ds
xchg
and
aaa
sub
mov
fcomps
int3
sbbl
loope
xor
cmp
and
ja
add
sti
cmp
loopne
mov
and
aad
sahf
mov
lea
lahf
pop
mov
aad
dec
inc
add
sbb
rolb
add
inc
add
outsb
cmp
xor
xchg
jg
add
add
enter
add
jns
nop
adc
mov
jb
insl
sbb
lret
into
test
sub
movb
push
bound
lret
xlat
ret
cmp
test
movsl
dec
xor
cltd
mov
lea
xor
inc
xor
fwait
dec
mov
repnz
leave
dec
cmpsl
xlat
popa
xchg
xchg
mov
ret
iret
add
mov
jle
imul
mov
dec
popf
and
xchg
xor
shll
inc
add
lahf
imul
leave
or
add
pop
push
mov
aas
cmp
xor
add
lret
mov
and
fnstsw
mov
pop
lds
test
ss
loop
shl
jbe
popa
imul
cmp
cmp
mov
pop
push
or
pushf
inc
aas
add
mov
inc
add
or
shl
add
jbe
push
addl
outsb
jb
push
jge
sub
popl
scas
dec
int3
icebp
faddp
add
outsl
les
push
inc
add
fs
popa
fcmovbe
jle
pop
cmp
add
int3
or
dec
adc
dec
adc
xchg
add
and
daa
mov
popa
inc
dec
or
add
sub
inc
push
fildll
divb
roll
add
or
fbstp
jb
xchg
std
je
mov
dec
outsl
jmp
xchg
dec
xor
fisubrs
jl
icebp
push
cmp
stos
xchg
pop
pop
scas
push
out
inc
ds
cli
jmp
and
adc
jmp
sub
push
mov
movsb
lods
je
add
add
and
sbb
jbe
and
push
xor
fdivrs
mov
add
testb
jnp
into
cmp
leave
inc
add
pop
aam
popa
stos
xchg
and
inc
int3
sub
lods
jge
outsb
movb
xchg
fdivp
scas
cs
mov
cmpsl
mov
push
bound
or
push
ficoms
in
outsb
in
out
or
mov
sbb
test
push
gs
push
inc
add
pop
stc
outsb
int3
add
cmp
xlat
and
or
pop
jnp
jle
xchg
sbb
mov
xchg
rolb
cmp
hlt
jge
inc
add
add
negl
out
xchg
imul
add
rolb
nop
cmp
xorl
sbb
push
loopne
push
pop
je
je
pop
mov
hlt
xchg
out
fsts
testl
mov
xor
inc
movntq
add
in
insb
dec
sarl
add
inc
add
aas
aam
sbb
xor
stc
movsb
push
mov
rcll
xchg
sahf
mov
xchg
movsb
ret
imul
add
test
pop
mov
jae
xchg
xchg
rep
sub
cld
arpl
pop
lcall
lea
or
add
movb
fiadds
push
xchg
icebp
fisubrs
mov
jmp
movb
arpl
fistpll
sbb
sub
add
scas
dec
test
add
jns
sbb
add
pop
mov
or
fsts
shrb
call
cmc
popf
dec
inc
add
pusha
add
arpl
add
push
ljmp
in
mov
sbb
andl
cmpl
jne
add
pop
pop
cmp
inc
add
in
fcoms
cmp
fmul
out
dec
or
insb
mov
mov
xchg
shlb
pop
sbb
ja
loop
pop
xor
mov
test
xor
pop
rolb
movb
arpl
das
lds
jnp
in
aam
filds
adc
into
test
cmp
sbb
lea
jecxz
jge
sub
nop
nop
aas
out
sub
out
add
icebp
adc
mov
das
inc
add
add
mov
add
xchg
std
add
add
and
into
mov
mov
mov
sbb
sbb
jp
mov
inc
idivl
ljmp
imul
stc
mov
ds
sahf
and
sbb
mov
dec
mov
pop
ljmp
pop
jnp
dec
or
test
test
push
mov
jns
jne
or
movsl
out
pop
aam
stos
nop
dec
mov
inc
add
or
mov
das
adc
jae
shr
jno
stos
cli
sbb
mov
push
xchg
clc
jle
loop
lret
hlt
sbb
lahf
xor
addb
push
mov
enter
es
add
jg
xor
cltd
pop
pop
xor
stc
push
sub
jns
push
mov
js
out
xor
incb
push
adc
stos
les
mov
jge
adc
push
lods
fcoml
sti
mov
pop
insl
incl
add
lds
notb
pusha
add
mov
pop
cs
das
enter
pop
cmp
add
jmp
push
jg
or
divl
hlt
mov
out
addb
lea
addb
and
pop
mov
add
ljmp
mov
dec
jp
addb
add
inc
add
add
sbb
aaa
ljmp
and
scas
push
lds
mov
pushw
cmp
jmp
mov
xchg
push
inc
jge
fwait
sbb
shr
cli
cmp
js
xlat
addb
mov
lock
pop
popf
fsts
pop
lea
xor
js
jge
xor
add
movsl
jbe
dec
ret
movsl
jns
pop
dec
or
mov
pusha
add
cmp
add
in
stc
ficompl
rolb
shrl
mov
mov
jecxz
jge
mov
lods
mov
xor
addb
sti
call
xor
add
push
arpl
sbb
fwait
fwait
pop
or
stc
jne
jo
add
in
in
ds
pop
mov
int3
lahf
loope
mov
stos
add
and
mov
xchg
cmc
aam
cltd
mov
iret
js
hlt
add
ja
mov
add
jo
jae
aad
add
dec
insb
push
cld
inc
add
add
pop
dec
add
adc
das
scas
insl
jb
out
push
sti
lods
jmp
mov
push
addb
clc
loop
data16
sub
push
add
sub
cld
rolb
test
push
add
repz
mov
sub
lods
cltd
dec
mov
sbb
or
xor
sub
scas
repz
pop
xchg
xor
add
ds
stos
das
arpl
bound
fwait
mov
inc
add
mov
pop
out
ret
push
sbbl
fnstcw
mov
xchg
add
loope
lahf
jle
jecxz
pop
xor
enter
adc
mov
sbb
gs
cmp
add
add
fadds
push
mov
and
mov
das
jae
stc
arpl
cld
fsubl
and
imul
add
xlat
xlat
out
mov
fdivrs
jmp
jbe
les
add
mov
add
mov
ret
mov
loope
insb
sbb
das
or
inc
add
mov
mov
push
movsb
dec
sub
lcall
xor
ja
sub
inc
add
cmp
fwait
fwait
insl
enter
daa
fucomi
imul
jmp
fimuls
mov
inc
clc
push
sub
inc
add
or
add
bnd
add
sbb
mov
out
add
mov
test
loope
stos
aas
imul
dec
frstor
outsb
jne
popf
addb
sbb
add
adc
out
ja
pushf
rolb
dec
fimull
pop
mov
cmpsl
pop
ljmpw
cmc
loopne
pop
popa
imul
adc
push
int
stos
xchg
scas
leave
addb
xlat
out
jle
inc
push
sub
inc
add
sub
sub
repnz
push
cmc
sbb
arpl
push
int
xlat
dec
nop
sbb
mov
into
adc
sbb
mov
push
clc
stos
mov
negl
mov
cld
jae
dec
call
call
xchg
adc
int
pop
jp
int
movsb
insb
dec
adc
call
add
jmp
js
pop
ljmp
xor
mov
jmp
xchg
js
lea
insl
and
fwait
arpl
cmp
sbb
or
pushf
punpcklwd
loop
ljmp
mov
push
add
nop
std
mov
mov
dec
pop
push
add
rorb
pop
push
in
aaa
std
in
pop
in
js
mov
add
mov
xchg
mov
add
fs
inc
and
sub
add
jne
add
out
xor
sbb
add
test
mov
mov
cltd
pop
jmp
cltd
fcomps
hlt
loopne
mov
jae
and
out
xchg
aad
shrl
or
in
hlt
push
push
fisubs
add
int
movsb
scas
pop
add
xchg
cs
push
jnp
sub
add
pop
bound
out
clc
dec
or
cmpsl
stc
lret
xor
sbb
xchg
orl
addr16
dec
mov
data16
add
push
pop
xchg
fldenv
call
outsl
iret
mov
pop
cli
movsb
in
and
aas
fisttpl
ret
or
sbb
sub
or
lahf
or
addb
sar
adc
arpl
sub
in
mov
add
push
scas
dec
clc
xor
fdivl
and
call
and
hlt
ret
cmc
pop
mov
cli
xor
pusha
add
fistpl
xor
add
sub
xor
cwtl
and
lcall
add
testb
lods
and
dec
dec
test
push
adc
or
cmpsl
enter
sub
xor
fisttpll
jecxz
decl
pop
out
shrl
cli
repnz
xor
lock
ffree
add
lret
negb
mov
lret
inc
xchg
pop
loope
mov
sbb
insl
dec
ret
mov
jbe
out
call
or
out
movb
or
and
add
sahf
dec
jbe
in
data16
xchg
xchg
das
ss
aas
or
add
sub
add
outsl
or
hlt
mov
and
mov
add
xchg
bound
testl
sbb
fwait
enter
mov
cmpsl
fwait
xchg
mov
or
mov
lods
xor
sub
push
lcall
add
imul
bound
or
push
sti
popf
ljmp
lea
loopne
pushf
fs
loopne
call
xchg
pop
in
jmp
nop
iret
shrl
fs
add
dec
mov
aam
inc
test
fiaddl
out
and
and
repnz
mov
jg
add
jo
pop
sbb
inc
add
jmp
sbb
xchg
add
out
cli
jns
xor
mov
outsb
xor
jne
data16
rcl
mov
xchg
dec
das
push
push
jp
mov
add
or
push
hlt
call
push
push
jge
jae
jae
jp
cmpl
sbb
mov
or
ret
push
jae
push
inc
add
movb
mov
bound
loop
shll
out
sub
push
pop
push
jo
mov
add
notl
sub
shl
in
add
repnz
jne
adc
nop
cwtl
push
jecxz
push
jl
cwtl
ret
int3
loop
pop
push
adc
xchg
inc
shll
cmp
xor
mov
cwtl
add
icebp
cwtl
addl
pusha
add
add
dec
in
push
mov
add
cmp
addb
push
jns
repz
push
inc
dec
repnz
xchg
pusha
add
push
sub
sub
lods
xor
leave
repnz
inc
add
sbb
xchg
test
dec
je
cmp
xchg
cs
dec
repz
call
xor
fcomi
out
xor
cmp
push
popf
jle
mov
xchg
inc
add
dec
xchg
push
adc
clc
pusha
add
addb
xchg
add
mov
fdivr
xchg
mov
add
xchg
cmp
ret
cli
nop
mov
mov
es
mov
jl
jg
loop
sub
rorb
in
mov
popa
jecxz
mov
cmp
adc
addb
sub
loopne
je
cmp
adc
mov
add
xor
cmp
xchg
pop
in
add
addb
xor
xchg
xchg
jle
test
cmp
shlb
xchg
jo
or
add
cmp
sbb
cmpsl
aaa
dec
cltd
js
xchg
xchg
mov
ja
xchg
les
xchg
call
out
out
ret
lcall
add
mov
cmpsb
inc
add
mov
out
scas
pushf
cmc
clc
cmp
mov
xor
movsl
xor
cs
sbb
or
sbb
lahf
or
jecxz
mov
aad
rolb
cwtl
push
dec
jb
addb
or
add
aaa
lea
mov
jae
mov
xchg
addb
adc
lods
push
inc
imul
lock
sub
ret
pop
mov
mov
jno
fisubrs
xchg
hlt
ja
jmp
daa
kmovb
cwtl
pop
popf
xchg
out
fstps
fldcw
shlb
hlt
cli
int
lahf
mov
enter
push
or
lods
arpl
mov
scas
inc
add
mov
xchg
lea
cmpsl
nop
nop
mov
add
mov
cli
fcomps
loopne
mov
add
into
iret
inc
add
jne
add
loopne
pushf
in
and
or
pop
nop
cmp
or
mov
jl
stos
inc
cmp
add
in
cli
cmp
and
and
mov
test
inc
add
shrl
add
aad
mov
into
jne
mov
xor
leave
insl
int3
and
insb
or
jne
test
and
xor
jo
push
and
pop
stos
xchg
js
aam
stc
iret
jnp
mov
lret
shll
mov
push
mov
lods
les
push
and
push
cmp
sub
add
xchg
daa
lret
movsl
dec
mov
jp
stos
faddl
lcall
or
loop
push
push
mov
js
std
mov
add
dec
add
jne
push
or
div
and
xchg
jg
xchg
loop
jge
add
out
stos
cmp
fucomip
cmp
lret
push
add
sbb
insb
jb
push
add
in
mov
cmc
call
in
or
repz
sub
push
in
out
int3
testl
xor
add
and
and
in
adc
mov
xchg
jecxz
mov
sbb
xchg
add
orl
hlt
out
cmp
movb
cmc
fnstcw
push
cld
xor
das
xor
mov
lret
jo
lahf
popa
add
repz
fidivl
add
into
or
add
out
sbb
rclb
test
mov
jnp
sub
repz
jge
ficoms
in
xchg
lds
stos
lahf
testl
jne
jl
sub
or
js
mov
shlb
ret
lahf
adc
adc
add
mov
pushl
arpl
mov
cs
push
add
lods
mov
mov
stos
arpl
push
and
les
int
sbb
mov
mov
inc
add
ret
dec
jl
jle
popl
cmpsl
bound
jge
jmp
jb
aam
inc
jle
push
push
cld
jns
cmp
inc
out
imul
pop
cltd
into
xor
subl
repnz
add
jbe
sbb
jo
adc
cmpsl
pop
jmp
movsl
leave
cld
adc
into
fcomps
loope
mov
aam
sahf
icebp
push
sub
jl
and
push
adc
mov
mov
lds
add
mov
add
jbe
sub
jmp
xchg
popf
adc
jne
mov
daa
popa
adc
lods
clc
and
add
maskmovq
imull
fimull
pop
aam
xchg
jo
add
shlb
mov
fwait
mov
jp
ret
adc
gs
shlb
ss
in
add
xor
inc
add
dec
sub
flds
nop
inc
movb
js
rclb
or
mov
cwtl
mov
mov
jno
push
cmpsl
mov
cld
mov
test
inc
add
xor
sub
jmp
add
add
pushf
jecxz
add
xor
xchg
addr16
mov
fistpll
pop
jge
ret
and
lods
loope
cmpl
movsl
pop
stos
sub
or
jl
fstps
sbb
add
adc
pop
loop
lock
add
lds
fs
sbb
add
clc
bound
scas
pop
imul
int
adc
cmp
xchg
mov
lock
leave
xor
sbb
mov
rolb
mov
add
add
ss
outsb
xchg
lret
inc
xlat
sbb
add
jl
dec
out
add
xor
inc
add
dec
pop
loope
les
int
add
ret
inc
add
add
add
popa
mov
and
fcmovb
add
inc
add
cmp
aam
roll
jne
dec
cmpsb
mov
hlt
mov
jge
add
fucomp
stos
xchg
out
sahf
or
add
or
adc
mov
lcall
push
add
cmc
pusha
add
add
xchg
adc
decb
jns
and
lock
rcl
inc
ret
jo
aas
xchg
ficompl
repnz
test
adc
loop
shlb
shrl
add
scas
insb
dec
je
out
and
outsl
pusha
add
adc
and
rolb
shrl
add
mov
add
pop
lea
cmpsb
in
jmp
sub
push
sbb
and
fisubrl
mov
push
icebp
in
cmp
in
push
test
popf
movsl
jmp
add
mov
add
cmp
mov
sub
mov
xor
ror
les
insl
lods
cli
xor
mov
aam
add
push
cld
jecxz
cmp
bnd
outsl
es
ljmp
adc
adc
imul
test
fstp
or
xchg
mov
mov
insb
dec
adc
iret
popa
popf
cwtl
cmpsl
movsl
inc
add
rcrb
test
popf
or
insl
imul
jmp
int
mov
lea
sbb
rolb
mov
popf
aas
shl
int3
push
imul
add
sbb
addb
inc
lret
and
fsubl
mov
inc
add
adc
add
or
add
sar
repz
in
movb
repnz
shlb
dec
lret
test
lret
les
dec
fimuls
add
add
lea
aam
cmc
inc
lahf
pop
pop
rclb
mov
or
dec
pop
bound
jo
loope
push
add
push
ds
sbb
add
inc
out
mov
push
add
mov
test
cmp
sbb
mov
fildl
add
add
