insl
xchg
pushf
in
in
xchg
jge
dec
push
sub
xor
xchg
lods
adc
jno
push
xchg
call
add
outsb
jo
mov
sbb
loop
test
fstpl
or
xor
xor
cmp
or
je
add
cwtl
xchg
add
cli
hlt
mov
pop
ja
add
mov
adc
add
sti
nop
or
lods
fistpll
cltd
icebp
mov
testl
push
or
push
mov
leave
sbb
jnp
fmuls
int
mov
lock
add
jg
mov
pushf
pop
push
push
sbb
lret
jg
xchg
lock
insb
ljmp
pop
scas
bound
repz
popf
loop
je
pusha
add
lcall
lock
xchg
fistl
into
dec
hlt
xchg
sarw
add
lret
in
repz
test
cld
std
scas
arpl
xor
pusha
add
mov
add
popf
or
mov
enter
sti
push
add
jbe
pusha
add
test
add
cmp
test
lea
add
push
sahf
in
scas
out
pusha
add
adc
adc
cmpsb
inc
fmull
fmul
adc
ds
mov
cmpsl
test
addr16
add
jno
es
jnp
add
jp
and
dec
mov
jo
pop
pop
test
stc
dec
lahf
in
mov
rcrl
xchg
or
or
sahf
or
fiadds
dec
lods
push
add
cmp
cltd
into
in
or
je
sbb
sub
ja
emms
or
xor
mov
xchg
push
pop
add
rcrl
cmp
imul
movb
pop
popa
cltd
pushf
scas
loope
jb
test
add
adc
scas
jmp
cmp
mov
pop
int3
inc
add
in
cmp
ja
cli
mov
add
rcr
lods
call
jmp
addb
add
or
pushf
pop
addb
add
push
xor
pop
xchg
pop
movsl
mov
dec
mov
add
js
sub
add
sarl
mov
jge
lods
cmc
lds
popf
or
push
repz
hlt
xor
lahf
loope
sbb
add
dec
or
sbb
mov
mov
lret
xchg
cmp
clc
lahf
mov
popf
push
add
add
ret
fwait
adc
pop
enter
cli
pusha
add
in
mov
bound
pop
pop
aad
pop
mov
bound
xchg
jnp
add
cs
add
pushf
in
sbb
lock
enter
loop
out
add
addb
mov
add
in
pop
adc
mov
movsb
out
stc
pop
push
loope
add
add
outsb
addb
sarl
daa
icebp
out
add
in
or
adc
icebp
xor
fsubrs
arpl
sub
xor
or
sbb
jg
jp
mov
sbb
repz
scas
pop
jbe
dec
jp
sbb
adc
sbb
jge
fnstsw
int3
ret
inc
add
inc
arpl
enter
pushf
sub
pop
inc
add
popf
xor
mov
les
call
loope
mov
add
insb
add
adc
push
ljmp
add
xchg
pop
adc
pop
dec
es
add
sti
std
sbb
mov
into
mov
add
or
cmp
mov
sub
pusha
add
cmp
adc
out
mov
pushf
push
add
jbe
rolb
jecxz
std
enter
out
xchg
xor
clc
add
insb
push
or
xchg
mov
sub
das
sbb
xchg
jo
and
xor
scas
imul
stos
ret
mov
mov
out
sbb
lahf
inc
mov
arpl
sub
mov
xchg
aam
imul
test
add
dec
add
into
test
add
int3
sub
js
cmp
lods
and
in
stos
push
out
imul
ret
cmpsb
and
push
xor
mov
popf
and
jl
dec
mov
cltd
fstl
fcompl
xor
mov
jp
xchg
sub
adc
xor
add
repnz
out
push
das
adc
sbb
arpl
in
add
jmp
add
sbb
cmp
ds
in
popa
mov
sub
mov
xchg
cmc
enter
and
jge
arpl
sti
xlat
cmc
cmp
adc
cmpsl
ss
mov
cs
sbb
les
adc
popa
data16
jge
cmpsb
mov
add
cmp
int
scas
iret
cmp
ret
adc
add
les
fs
ficoms
and
pop
adc
push
push
add
ret
push
jge
in
sub
scas
pop
add
pusha
add
jne
cltd
push
push
push
in
cmc
add
push
pop
hlt
pop
pop
divb
push
jbe
shrl
and
sbb
mov
call
jbe
pop
test
add
inc
add
xor
mov
repz
loope
mov
push
add
pop
push
xlat
test
daa
or
jnp
mov
mov
insl
push
mov
in
ret
xor
jns
mov
dec
in
addr16
loope
movb
icebp
pop
fs
aas
xchg
popa
rclb
pop
fwait
xchg
jnp
mov
fildll
mov
insl
mov
in
jns
mov
jae
pushf
sbb
aaa
repz
add
jl
jge
sub
dec
jmp
test
movsb
xchg
mov
push
or
or
add
je
dec
push
jns
fst
sbb
movb
or
or
jmp
fistpl
cmp
leave
int3
addr16
mov
lea
push
icebp
fmul
inc
add
pop
add
add
sub
test
mov
dec
mov
jg
add
popl
mov
mov
mov
pop
mov
loop
adc
aad
test
jecxz
add
lods
ss
cmpsb
addr16
jecxz
lods
imul
cmp
jecxz
jno
or
add
push
es
mov
jnp
ret
rcrb
add
add
in
adc
dec
sub
dec
sbb
int
dec
pop
popf
aam
mov
inc
scas
arpl
and
fdivr
pop
cld
sub
dec
out
ss
add
mov
add
addb
loope
add
sbb
stc
push
pop
dec
aaa
clc
loopne
divb
das
or
sub
cld
inc
loopne
or
adc
add
dec
scas
inc
add
and
xchg
sbb
add
sar
test
ret
ljmp
jo
ljmp
shrl
scas
mov
cmp
adc
xor
addr16
sahf
xchg
push
pop
sbb
das
mov
notl
lret
out
cs
pop
lea
push
iret
sub
gs
mov
xchg
cld
push
sub
and
rcrl
scas
lods
fcmovb
sbb
add
push
sti
iret
mov
xchg
adc
mov
rorl
lahf
xchg
mov
xchg
rolb
icebp
mov
push
add
fnstsw
mov
mov
dec
mov
add
add
test
loope
and
sub
in
pop
rcl
mov
add
movb
mov
or
mov
out
xor
cmp
push
testl
mov
addb
dec
bnd
xor
mov
sbb
test
mov
test
adc
add
or
add
out
sbb
cld
enter
es
popa
push
test
pop
stos
sub
in
sub
push
mov
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
ds
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
push
lret
add
add
dec
fs
std
xchg
sub
imull
ljmp
add
mov
mov
fisubrl
sbb
dec
xor
cwtl
push
hlt
pop
inc
mov
sbb
in
addb
xchg
push
mov
mov
pusha
add
stos
xor
aas
sub
repz
dec
ret
clc
sub
shr
jb
add
add
es
push
popf
sbb
clc
je
lds
add
jnp
shll
addb
and
pop
inc
add
adc
cld
lret
leave
loop
negl
xbegin
dec
push
and
fst
pop
popa
pop
ljmp
add
leave
add
fistl
mov
bnd
and
add
aad
jbe
lahf
dec
pop
sarl
jmp
add
xor
add
add
push
mov
into
push
pop
jg
sub
mov
divl
and
and
fs
addb
add
jg
push
mov
mov
and
incb
je
jmp
out
pop
adc
std
movb
arpl
cmpsl
push
in
hlt
scas
addr16
int3
pop
lcall
dec
add
push
mov
adc
cmp
insl
sbb
dec
fwait
dec
dec
sbb
mov
push
sahf
xrelease
daa
sbb
adcl
addb
xchg
adc
je
push
lock
fwait
leave
inc
mov
push
push
neg
sub
outsl
or
jns
push
mov
clc
push
bound
lods
out
pop
repz
dec
or
and
cmp
adc
ja
shll
addl
or
sub
dec
inc
add
outsl
cmp
push
fsubp
and
pop
out
dec
or
sti
mov
add
outsl
mov
xchg
mov
add
or
cmpsl
mov
dec
into
adc
mov
or
pop
loop
and
lods
jae
adc
cmc
dec
cld
test
pop
loop
dec
xchg
adc
in
movsb
popa
mov
rclb
add
loope
inc
add
inc
add
pop
movsl
pop
imul
movsb
jg
rolb
xor
shll
mov
lods
jl
stos
add
xor
add
pop
xor
and
sbb
push
mov
stos
mov
pop
bound
mov
mov
jae
loop
loope
mov
add
test
sti
inc
rolb
pop
and
into
mov
adc
and
sahf
nop
pop
sub
cmpsl
loopne
enter
mov
ja
clc
xchg
fadd
add
xor
std
sub
mov
stos
jb
add
push
es
lods
aaa
das
je
sbb
scas
jmp
push
adc
sub
lahf
xor
mov
push
push
test
popa
js
or
cmp
xlat
push
ja
add
scas
in
mov
lods
js
ss
ret
daa
loop
setge
sbb
add
and
rolb
aas
subl
dec
ret
sbb
dec
adc
rolb
add
add
xchg
mov
aad
out
add
ljmp
mov
data16
lret
inc
pop
aad
js
sub
xor
jge
xchg
xchg
outsl
adc
cmp
or
out
fistpl
loope
sti
rcll
addb
ljmp
sarl
loope
pop
xchg
and
adc
add
add
xor
jo
nop
sbb
mov
inc
add
sub
pop
daa
add
jne
add
mov
lds
mov
call
cmp
ror
fnsave
fcmovnbe
fsubrl
and
addr16
call
aas
out
pop
shll
hlt
jne
mov
popa
repnz
adc
bound
sahf
mov
xchg
and
jns
xor
and
add
mov
lea
adc
jmp
cmp
and
pop
out
dec
insl
out
sub
ds
add
les
lahf
sub
add
lahf
bound
jb
fs
leave
aam
mov
nop
shlb
enter
data16
add
fnstcw
mov
jae
mov
es
dec
addb
cwtl
sbb
les
mov
inc
add
add
add
bound
imul
jmp
in
fidivl
cmp
sub
in
xor
loop
fs
aas
dec
xcrypt-ctr
cmpsl
sbb
hlt
cmp
jp
ds
cld
lahf
sbb
adc
or
cmp
pop
outsb
dec
push
mov
subl
xchg
test
inc
add
stos
pop
aas
mov
dec
adc
xor
inc
add
push
popf
enter
mov
ret
iret
add
movsb
sub
and
movsl
jb,pt
daa
cmpsb
insb
xchg
xor
push
add
cmp
loope
and
adc
imul
lock
add
adc
sbb
add
xchg
ret
mov
mov
sub
mov
push
xor
mov
cmpsl
sub
push
add
xor
adc
add
scas
dec
sahf
push
test
jl
pop
les
pusha
add
push
fsub
cli
xchg
xchg
movsl
inc
add
push
mov
add
mov
mov
popf
cli
sub
add
rcll
test
push
mov
mov
loopne
mov
popa
adc
mov
scas
push
add
test
cli
push
psrad
or
or
pop
cmp
add
lods
icebp
push
add
in
adc
sub
xchg
es
gs
popf
mov
add
sbb
jne
addb
add
shrl
cmpsl
std
fnstcw
imul
adc
push
test
xlat
enter
mov
inc
add
bound
ret
sub
add
lea
imul
dec
and
cld
jl
rolb
iret
fwait
xchg
mov
pushf
jle
cmpl
inc
add
mov
xchg
pop
inc
add
cwtl
popf
add
imul
aaa
mov
data16
dec
jne
fcom
mov
fcmovbe
addr16
fsubrs
mov
jecxz
mov
stos
mov
mov
fcoms
addr16
add
sub
imul
cmp
icebp
dec
cmc
addb
test
adc
add
mov
jb
add
daa
jg
mov
filds
sbb
rclb
aad
cmp
mov
loop
stc
orl
add
insb
pop
push
add
xchg
push
add
pop
fstl
push
pop
xor
adc
adc
adc
frstor
jno
adc
jae
push
sbb
fwait
in
pop
mov
fwait
xchg
call
xor
int
jge
pop
test
push
stos
or
jae
aad
mov
xchg
outsb
mov
pop
dec
pushf
push
push
xor
mov
movsb
ds
ds
mov
repnz
adc
jecxz
xchg
outsb
xor
lock
ds
push
pop
loopne
aam
pop
adc
pop
xchg
jp
repz
sub
call
xchg
imul
paddb
fs
add
sbb
push
mov
add
aaa
mov
sub
push
xchg
sbb
add
cmp
addb
push
add
scas
pop
popa
lahf
in
pushf
mov
rcrb
dec
dec
sbb
loopne
leave
mulb
xchg
mov
xor
add
gs
movsb
add
lods
addr16
fsubr
xor
pop
jle
push
cbtw
add
sub
add
and
das
hlt
jo
das
scas
pop
repnz
lock
cmp
dec
ds
push
xlat
or
shrl
fisubs
sbb
pop
loopne
dec
cmp
daa
cmc
mov
add
shll
inc
jle
inc
add
fsubrp
gs
es
cltd
mov
faddp
add
std
sbb
lock
cmpsb
sub
stos
and
add
addb
adc
insl
xchg
call
out
mov
stos
and
ret
mov
jp
cmc
es
add
and
mov
mov
ret
fiaddl
xchg
js
mov
add
inc
add
sbb
fstp
xor
jecxz
movb
xorl
xchg
and
in
add
jmp
test
mov
xorl
ja
test
icebp
test
xlat
cmp
out
shll
sbb
cwtl
dec
jmp
mov
dec
loope
sub
or
mov
mov
mov
jns
test
jle
sbb
insl
cmc
or
adc
and
sub
mov
push
adc
cwtl
and
out
aad
ljmp
ret
adc
ss
int3
mov
gs
add
gs
jl
jge
or
addb
adc
out
jbe
add
jo
xlat
mov
popf
xchg
xchg
and
mov
test
add
cmp
xchg
sbb
ds
xor
dec
push
and
xchg
sub
mov
add
imul
outsl
fbld
adc
pushf
add
pop
xchg
sub
stc
add
in
lds
mov
cmpsb
notb
data16
bound
bnd
mov
dec
notl
movsl
and
fidivl
dec
mov
mov
mov
sub
xchg
sbb
jae
add
lods
movsl
inc
add
fdivrl
mov
and
add
rclb
jl
add
clc
fwait
adc
cs
data16
inc
add
leave
jmp
cmp
cltd
push
jnp
add
inc
add
fimull
mov
pusha
add
roll
call
notl
lods
cmpsl
rcrl
jecxz
add
xchg
or
mov
pop
adc
xor
lods
lcall
push
adc
sbb
fisttps
fisttps
sub
into
pusha
add
clc
les
popf
fcompl
add
or
add
aas
mov
scas
imul
popf
mov
sbb
loope
sbb
jle
fldcw
sub
mov
jg
aad
add
pop
loop
iret
mov
lcall
int3
mov
add
add
ret
cmpsl
addb
mov
mov
call
nopl
jmp
dec
lods
in
push
add
fwait
dec
fistpll
add
movb
in
sbb
mov
lds
ljmp
pop
jne
imul
out
jg
sbb
pushf
out
dec
xchg
adc
add
stc
in
sub
wbinvd
xchg
aad
out
mov
call
shl
enter
lock
add
jne
add
and
cltd
je
inc
add
push
add
cmp
pop
shrb
out
movsb
adc
mov
cmp
lds
imul
jp
inc
add
insb
mov
daa
stos
or
and
cmc
ret
push
inc
add
lret
adc
pop
jno
cmpsb
movsl
xchg
das
icebp
dec
jno
xchg
mov
fwait
and
xchg
add
pop
mov
pop
and
ss
aad
cld
gs
ret
jo
xor
inc
add
jg
sbb
rol
cld
or
jns
fisttpl
xchg
xchg
inc
mov
sub
cli
push
add
rolb
push
mov
movd
cmp
addb
addb
aad
jbe
cmp
iret
addb
fwait
stos
vfrczps
mov
xor
int
push
xchg
mov
ficoms
jnp
push
adc
rcrl
repz
add
cmp
mov
pop
xchg
test
lods
or
xchg
loopne
pop
ljmp
and
sbb
iret
or
jl
loop
add
cmp
and
mov
aaa
icebp
jmp
cwtl
insb
roll
ret
xchg
add
nop
dec
push
insb
inc
add
cs
cli
jge
sti
and
addb
lret
adc
lods
fldenv
pop
lret
in
jl
fsubrp
movsl
enter
and
mov
js
add
mov
je
mov
stc
loop
pop
sub
orl
inc
add
mov
sub
lret
daa
jnp
sub
push
icebp
ja
ds
pop
mov
dec
inc
add
mov
jle
shrl
mov
imul
pushf
adc
add
pop
lods
imul
add
cmp
pushf
jl
repz
and
pop
mov
add
fcompl
lahf
test
push
outsb
cmc
pop
fcompl
test
cli
and
or
dec
dec
push
pop
mov
adc
adc
cmc
jecxz,pn
popa
in
testb
jp
popa
pmulhw
test
xchg
outsb
addr16
mov
or
mov
in
cmpsl
scas
rolb
add
cmp
pop
pushf
xorl
loop
ret
sbb
mov
pop
xor
pop
std
pop
scas
dec
adc
test
mov
les
imul
add
inc
cmc
mov
mov
repz
push
or
and
xchg
cmpsl
test
movsb
daa
jmp
repnz
adc
push
loopne
or
or
push
add
pop
rorl
pop
ret
enter
iret
or
add
add
stc
mov
mov
stos
outsl
cmp
xchg
sub
jns
int
pushf
inc
add
in
fwait
movb
test
addb
jl
pop
test
jae
add
jl
test
nop
jl
or
mov
sti
sbb
sbb
into
ljmp
push
out
xor
and
dec
stos
cmp
or
fmull
dec
rolb
aaa
dec
push
and
jo
clc
pop
cmp
mov
ret
aad
or
imul
cltd
adc
add
xchg
push
xchg
sahf
xor
pop
out
xor
cmp
idivl
xchg
inc
add
loop
cmc
dec
les
xor
or
push
out
or
sbb
ret
cmpsb
loope
sahf
xor
enter
jge,pt
arpl
jbe
add
int
inc
add
or
jo
mov
push
push
stos
mov
in
mov
jle
insb
cli
cwtl
inc
add
add
in
rorb
pop
push
fbstp
rcrl
les
adc
xor
cmpsl
xchg
push
filds
inc
add
jnp
push
test
pop
sub
outsb
xorl
xorl
and
mov
lock
add
xchg
inc
popa
pop
jae
mov
arpl
mov
test
add
push
shll
jmp
fs
add
imul
jo
pop
xchg
add
jo
mov
les
adc
xchg
insb
int
and
push
lcall
testb
in
data16
js
jbe
push
add
add
push
xchg
negb
or
xor
bound
ret
nop
and
mov
cs
sbb
ja
inc
add
push
add
jno
cmp
cmpsl
push
cmc
push
ljmp
inc
mov
in
popa
mov
cmp
xor
ret
in
repz
sbb
movsl
test
mov
fs
adc
icebp
loope
inc
insl
les
rcrl
scas
iret
cs
adc
in
sbb
cmp
pop
in
nop
dec
pop
cmp
clc
dec
cmp
mov
sub
dec
movsb
and
sub
add
rcr
inc
add
es
aas
stos
or
add
add
rolb
outsl
lret
push
scas
test
popf
aaa
insb
mov
data16
xchg
fdivp
xor
iret
fidivrl
jnp
jnp
pop
cmp
popw
nop
mov
fadds
add
in
push
pushf
fcmovbe
inc
mov
mov
add
hlt
cmp
movsl
rorb
outsb
imul
das
mov
mov
cmp
mov
or
mov
inc
add
add
push
addb
jle
inc
insb
lds
mov
aaa
cltd
lcall
fs
aam
scas
push
pop
sub
push
test
or
jae
add
push
sbb
jmp
into
les
jl
mov
and
pushf
pop
stos
sub
ret
mov
test
and
out
add
insb
shl
lods
adc
shrb
add
add
inc
inc
mov
or
pop
dec
filds
dec
xor
jnp
add
add
imul
xor
into
fwait
cmc
dec
loop
out
int
ficoms
sub
cltd
pop
lock
bound
mov
mov
jmp
into
jge
adc
movsb
ret
xchg
loopne
or
pop
aam
fwait
mov
pop
test
enter
and
mov
imul
jg
bound
cmp
sbb
mov
cwtl
leave
inc
add
popf
dec
idivl
loope
push
sbb
les
jecxz
pop
push
add
insl
frstor
fbstp
push
adc
xor
movsb
pop
shll
mov
push
shlb
inc
cmp
add
pop
ja
mov
aaa
test
into
inc
stos
add
stos
out
dec
push
hlt
fwait
add
mov
movb
add
jecxz
paddusb
jp
mov
lahf
mov
add
dec
movsl
arpl
pusha
add
sub
or
push
gs
xchg
lcall
sub
pop
insb
pushf
add
mov
sbb
aam
shrb
and
mov
cmp
xor
dec
push
scas
push
insb
adc
cmp
das
out
fwait
sub
ret
test
addb
sbb
nop
imul
les
cmp
ljmp
xor
in
jbe
hlt
or
divb
pop
in
add
dec
test
push
pop
stos
push
push
lock
in
xchg
mov
ljmp
mov
ljmp
imul
movlps
jp
aas
mov
fsubrl
mov
mov
or
cmp
mov
sti
sub
std
pop
mov
inc
add
insb
add
dec
arpl
movb
rorl
pop
pop
int
add
sbb
and
popa
mov
xchg
jno
leave
lds
mov
add
add
stc
push
adc
sub
jmp
inc
add
dec
movsb
mov
adc
add
pop
shrl
jmp
xchg
outsl
in
jecxz
adc
icebp
flds
add
movb
fisubs
daa
movb
aaa
sbb
jmp
mov
push
cld
cli
dec
mov
fildl
sbb
xchg
scas
xor
cmp
xchg
and
add
ret
lds
mov
mov
add
clc
pop
xchg
mov
pop
mov
add
or
pop
xor
cmc
mov
mov
push
cmp
lret
stos
sbb
dec
jns
xor
push
pop
roll
inc
inc
cltd
hlt
jne
je
add
cmp
insl
loopne
mov
dec
pop
or
cs
inc
add
add
je
xchg
in
cltd
shrl
pusha
add
xchg
enter
add
jle
sub
test
add
insl
push
movsl
mov
les
add
lcall
jmp
push
add
pop
push
cwtl
loop
xor
call
mov
adc
pop
lds
fucomp
pop
pop
cltd
jo
add
stos
inc
fstpt
pop
aas
aas
pop
pop
les
stc
xor
add
dec
push
gs
dec
jno
adc
add
in
add
add
cmpsb
pushf
test
jo
jne
rorb
inc
add
leave
icebp
push
mov
sbb
or
sub
cli
lods
mov
dec
cmc
adc
addb
jge
jae
lret
not
fimull
lahf
fdivrp
adc
sub
insl
cltd
ljmp
lods
dec
add
inc
sub
adc
orl
repnz
mov
sbb
push
push
add
add
cli
enter
mov
jne
fnstsw
mov
imull
or
rcll
lret
jmp
add
sub
add
jmp
int
leave
and
stc
xlat
rorl
repnz
mov
push
jo
mov
daa
das
cmc
fidivrs
and
cmp
es
imul
ds
or
add
and
and
setg
add
or
push
lret
jle
add
jbe
push
push
jnp,pt
mov
dec
dec
subl
pusha
add
pop
adc
out
mov
mov
fldenv
pminsw
fiadds
adc
out
insb
jb
add
pushf
out
push
sub
pop
flds
pop
lret
mov
push
rorl
scas
fldl
and
push
notl
fs
lds
mov
push
mov
cmp
jmp
in
mov
sub
lods
in
cmpsb
cmp
pop
outsl
jne
xchg
fs
dec
je
mov
arpl
scas
pop
inc
adc
or
add
js
out
and
stc
dec
adc
push
dec
shll
movsl
int3
mov
pop
jge
jmp
mov
cli
mov
xor
lret
inc
add
xor
add
xchg
jle
loopne
cmpsl
mov
add
cmc
adc
gs
jns
addr16
inc
add
or
cltd
ret
bound
mov
add
notl
mov
push
adc
cmp
mov
add
xor
cmp
outsl
pop
pusha
add
push
outsl
out
dec
in
addb
test
cmpsb
movsb
mov
push
xor
mov
sub
add
fwait
jge
in
adc
pusha
add
cmp
ret
sbb
sub
cmpsb
or
mov
mov
push
and
mov
fistl
cmpsb
lret
std
out
jge
outsl
movsl
jbe
inc
add
movsb
push
int
aam
add
push
add
pop
sbb
sbb
pop
jg
ret
mov
inc
mov
sub
sub
aas
sbb
adc
ljmp
mov
or
iret
add
push
lods
push
mov
aaa
xor
add
stc
aas
out
shr
push
sub
outsb
push
movsb
mov
movsl
cmpsb
sbb
in
std
sub
fistl
in
adc
test
mov
push
xchg
fsubl
pop
jg
xor
insl
xor
pop
add
call
cmp
mov
bound
or
mov
push
cs
test
cwtl
inc
loope
lods
xchg
sub
jnp
jg
loopne
cmp
enter
inc
cli
pushf
adc
rclb
negb
inc
add
push
inc
add
out
mov
push
add
sub
adc
mov
add
xor
push
jno
add
lret
mov
pop
jno
pop
cmp
sti
xor
jbe
push
mov
in
mov
or
inc
loop
dec
addb
int3
inc
add
loope
shll
js
cmp
rcrl
add
cli
lret
push
jle
add
sbb
repnz
ret
ds
push
out
js
inc
add
arpl
pop
out
pop
dec
add
or
aaa
subl
mov
fstl
shrb
scas
fdiv
mov
mov
dec
movsb
cmp
sbb
xchg
mov
sbb
into
push
mov
xchg
rolb
add
add
jl
and
out
int
adc
mov
data16
and
loope
xor
pop
mov
inc
add
fildll
jecxz
xchg
cmpsl
xchg
inc
add
add
pop
jmp
loop
mov
lcall
adc
add
sbb
push
adc
mov
jmp
jle
xlat
sbb
das
push
repnz
or
mov
add
ljmp
mov
xor
pop
push
add
add
ret
rolb
popa
call
popa
mov
loopne
mov
dec
jle
cmp
jnp
cmp
inc
add
lods
pop
fcmovu
sarl
lahf
mov
inc
add
adc
sahf
xor
xlat
cmp
add
jp
add
aaa
out
push
sub
bound
dec
divb
inc
inc
mov
adc
pop
xor
addb
sbb
jmp
fldt
jns
add
ss
jo
ja
sbb
sti
outsb
clc
fldt
out
test
push
xor
cmp
lcall
mov
xchg
cmp
pop
imul
push
stos
xor
cwtl
jp
mov
and
cwtl
add
push
cmp
js
sub
int
nopl
jb
bound
sbb
testb
loopne
pop
cmp
add
push
das
push
pop
sbb
inc
add
cld
jbe
adc
loop
in
pop
jle
add
jmp
xchg
xor
add
add
cmp
pop
negl
xchg
cmp
bsr
sub
imul
fxch
stc
mov
pop
fiadds
fnstenv
xor
test
cmp
subl
mov
rol
into
xor
push
mov
mov
mov
cmp
inc
add
push
rol
add
push
hlt
inc
or
test
pusha
add
frstor
sahf
xor
clc
lcall
pop
idiv
ja
pop
sub
stos
inc
add
mov
rcr
cwtl
dec
int3
mov
mov
movsb
jb
std
outsl
dec
fistpl
mov
aam
fwait
in
int
sbb
loopne
movsb
leave
fcomp
adc
jg
adc
test
cmp
dec
loopne
add
pop
sbb
call
xchg
lock
mov
rolb
add
jne
aaa
movb
add
cmpsl
ret
mov
xor
ret
adc
adc
jns
jmp
das
gs
in
or
das
cmpl
add
cmpsb
sarb
cmp
add
ret
idivl
data16
addb
filds
fdivrs
out
pop
inc
add
in
dec
jae
out
jle
or
and
mov
cmc
add
lods
add
flds
push
ret
les
movsb
jnp
pop
nop
push
mov
sarb
test
das
repnz
xchg
add
add
fisubrs
add
dec
rol
lods
lcall
pop
or
popa
and
jb
xor
xchg
filds
add
add
dec
push
jp
in
mov
and
adc
mov
mov
xchg
popa
mov
mov
adc
scas
jae
add
adc
dec
or
dec
push
add
add
call
fldt
push
stos
les
mov
aam
out
pushf
xchg
aas
mov
adc
in
loope
mov
add
cltd
in
movsl
int
mov
add
xlat
sbb
sarb
push
rolb
jecxz
repnz
divl
mov
inc
mov
jle
sahf
or
push
add
mov
sub
daa
lods
sti
in
push
mov
push
mov
out
xor
cmpsb
es
insb
xchg
aaa
push
cmp
xchg
push
mov
test
pop
les
adc
adc
cld
cli
bound
mov
mov
xchg
das
jb
or
lret
addb
adc
push
xchg
fimuls
imul
and
add
xchg
pop
sarb
js
rolb
add
test
es
xchg
sub
repnz
fsubs
jo
iret
jns
push
aad
cld
pushf
aad
sbbl
inc
and
popf
mov
pusha
add
lret
addr16
es
pop
pop
outsb
fwait
add
cld
mov
add
mov
fmul
mov
and
and
cld
push
ja
repnz
punpckhwd
cmpsl
jae
ss
add
add
xor
insb
popf
lods
mov
xchg
ss
mov
pop
push
das
adc
loop
jp
xchg
xor
xor
xchg
jne
adc
sbb
jp
addb
stc
clc
ljmp
add
push
push
or
ret
mov
cmp
pop
repnz
lcall
mov
insl
dec
add
add
add
mov
push
mov
mov
sbb
cltd
cmp
push
xchg
cmp
add
mov
jl
xchg
shrl
sbb
inc
ljmp
loopne
xorl
popa
aas
stos
scas
jmp
imul
stos
scas
fmul
cmp
addb
fbld
mov
sbb
push
add
fcomp
je
ret
inc
mov
pop
add
in
in
fwait
testb
insl
stc
mov
addb
push
sub
cmpsl
sbb
pop
js
fiaddl
bound
jmp
push
mov
jmp
mov
xor
cmpsl
bnd
cwtl
test
adc
sbb
arpl
stos
push
mov
cmp
mov
stc
popa
pushf
mov
push
inc
xlat
mov
adc
and
stos
xor
jo
adc
repnz
inc
jmp
add
sbb
mov
mov
adc
mov
cmpsb
or
test
xchg
insb
mov
add
aaa
mov
lods
leave
cmp
add
push
jns
inc
add
ret
mov
test
cmp
insb
imul
dec
mov
cmc
ss
or
and
or
inc
dec
jg
in
cmp
mov
movb
loop
stc
test
xor
idivb
add
ret
inc
add
add
mov
add
add
fists
mov
sub
movb
xchg
ret
dec
dec
mov
rolb
xor
push
lds
mov
add
xchg
sbb
xor
arpl
add
imul
push
mov
pop
dec
pop
inc
add
out
push
addr16
sahf
xchg
add
outsl
add
jbe
add
pushf
and
xor
test
lahf
push
pop
stos
aam
or
adc
adc
out
lock
in
fidivl
mov
jnp
push
cmc
mov
xor
add
xor
lahf
negl
dec
and
dec
mov
ds
int
gs
push
add
xchg
outsl
lret
pushf
pusha
add
out
sbb
cmc
push
inc
add
fdivrs
jmp
xor
hlt
cmp
sahf
stos
addb
xchg
xchg
or
add
inc
pop
adc
mov
dec
dec
pop
aas
xor
mov
mov
je
mov
pop
jbe
jns
pop
nop
or
add
and
mov
push
insb
mov
loope
mov
push
push
mov
sbb
out
dec
adc
pop
pop
orl
inc
add
out
cmp
cs
into
jne
es
aaa
xchg
add
imul
add
add
push
dec
push
pop
pop
sbb
out
push
push
test
pop
mov
inc
add
xchg
addb
idiv
mov
sub
push
in
movb
out
sbb
xchg
adc
test
cmp
inc
add
fwait
jae
or
dec
sbb
add
addb
mov
cmp
xor
pushf
xor
ficompl
mov
mov
out
mov
rolb
jg
dec
call
jmp
xchg
adc
jl
sbb
dec
add
push
sbb
xchg
jp
in
mov
add
cwtl
sub
jp
clc
sbb
inc
add
add
mov
jns
call
add
push
lods
cwtl
jg
or
mov
fstpt
arpl
push
ds
push
dec
aaa
fiadds
fldt
ret
xchg
jecxz
add
bnd
sub
jp
lret
adc
pop
clc
inc
pop
aad
decb
movsb
jg
sbb
add
sbb
jge
repz
jecxz
jae
mov
mov
addb
addb
int3
adc
and
es
xor
aam
mov
sub
mov
xlat
push
mov
sub
imul
daa
adc
out
jo
or
repnz
cmpsl
push
sbb
leave
popf
add
stos
cmpsb
dec
data16
add
and
or
mulb
fisttpl
xor
aam
pop
dec
dec
mov
jbe
sbb
adc
test
add
and
inc
add
hlt
test
dec
pop
enter
adc
loopne
push
pop
push
int
mov
into
lods
sub
add
cwtl
dec
adc
add
pop
push
jle
popa
mov
xchg
cmpsb
incl
pop
adc
int3
adc
ljmp
add
cltd
push
xor
add
mov
sub
cs
mov
xor
jmp
lret
scas
push
movb
push
cmp
into
adc
cli
call
aam
xor
jo
mov
mov
addb
aas
outsl
lahf
cld
or
fisubl
add
addb
std
ret
xchg
loope
jmp
push
dec
add
hlt
mov
add
xor
es
push
pop
push
js
pop
dec
mov
add
fmuls
inc
push
frstor
xchg
dec
jae
push
adc
push
cwtl
aam
out
stos
mov
cmp
movsb
mov
je
sahf
data16
cmpsl
fsts
fwait
push
and
cmp
add
cmp
in
bnd
push
jae
ss
rolb
int3
movb
aad
adc
ss
hlt
mov
fisubrl
cmp
pop
cmp
add
leave
adc
mov
mov
bound
sbb
push
cmpsb
ja
fwait
and
and
fwait
sub
or
lock
dec
mov
ret
addr16
lock
push
jnp
lods
xlat
sbb
repnz
repz
jmp
pop
add
adc
and
call
movl
xor
mov
aad
ja
in
je
test
jns
cmp
cmp
add
pop
pop
cwtl
sub
sub
xor
cltd
addb
call
mov
ljmp
pop
mov
addb
pusha
add
cwtl
int
mov
scas
fdivrl
std
bound
int3
jg
dec
inc
add
add
punpckhdq
inc
add
cmpsl
jmp
outsb
push
addb
xchg
and
hlt
sti
sqrtps
adc
lods
call
lods
enter
mov
out
inc
add
cmp
add
in
adc
mov
pusha
add
stos
std
jg
cmp
inc
add
bnd
inc
add
lds
mov
movsl
mov
jae
add
fdivl
pop
jbe
adc
fld
mov
inc
add
xor
mov
adc
cmp
cmp
mov
rolb
xor
adc
mov
mov
adc
jp
mov
xchg
movsl
test
sub
and
pushf
inc
add
push
add
mov
arpl
mov
xchg
mov
popa
hlt
and
mov
pop
notl
dec
lods
in
adc
jbe
push
mov
pop
inc
sbb
dec
push
and
pusha
add
sahf
cmp
rcrl
push
jne
test
add
or
mov
push
adc
scas
jno
add
iret
popf
sub
add
xchg
pusha
add
mov
adc
fwait
push
or
mov
cmp
jmp
lcall
loope
scas
mov
sbbl
out
outsb
aaa
and
or
scas
les
add
pop
ret
pusha
add
out
xchg
sub
out
push
out
cwtl
lahf
adc
inc
add
les
fstps
popa
ljmp
mov
stc
jbe
sbb
lea
cmp
movsl
push
ret
dec
mov
mov
and
iret
lcall
xor
les
nop
or
and
jae
into
gs
adc
adc
insb
jae
dec
pop
mov
add
inc
js
lret
mov
xchg
lods
xchg
or
add
push
cli
and
imul
je
add
add
mov
sbb
pop
out
insb
arpl
outsl
lahf
cs
jl
out
push
clc
loope
mov
mov
add
mov
inc
mov
es
cmc
xchg
sbb
adc
and
std
insb
jp
mov
xor
add
mov
add
or
dec
int
cltd
or
lret
xchg
mov
inc
mov
ffreep
jge
add
ret
and
add
gs
jecxz
pop
sbb
movb
add
imul
add
xchg
mov
push
add
jg
add
iret
xchg
addb
repz
and
andl
xchg
stos
cmp
mov
jecxz
add
adc
stc
mov
xor
xchg
cltd
imul
ja
cmp
ds
jns
mov
ja
push
xor
and
push
cmpsl
xor
divb
jge
adc
in
push
or
mov
js
pop
jbe
add
pushf
mov
leave
adc
cmpsb
push
cltd
popl
scas
push
insl
inc
add
insl
mov
imul
insb
xchg
hlt
sub
lods
xchg
push
jb
test
jge
aad
movsl
iret
loope
fsubrl
ljmp
in
aad
sub
pop
cmp
mov
rorl
xor
push
repz
mov
addb
add
mov
add
adc
pop
ret
loope
cli
xchg
jnp
cmpsb
cli
cmpsl
lahf
mov
sbb
pushl
mov
and
mov
adc
mov
jbe
hlt
push
repz
test
add
cmpsl
lahf
int3
jge
repz
push
sbb
add
xchg
in
cmp
sbb
xchg
bound
xchg
or
or
cs
inc
icebp
xor
out
xrelease
push
fimuls
ljmp
pop
push
add
mov
pop
cmp
scas
outsb
repz
repz
pop
push
add
movsl
mov
addr16
jbe
push
inc
add
popa
pop
push
dec
ja
jp
fdivrp
popa
mov
pop
out
aam
out
and
xor
and
fdivrs
mov
sarl
dec
xchg
mov
sarl
in
out
leave
push
ret
addr16
xchg
pop
jne
dec
movsl
ja
jne
cmpsb
and
fs
rolb
mov
add
cs
test
faddl
add
and
sbb
jle
and
out
or
clc
push
sub
cmp
push
rorl
inc
add
push
test
cmp
cmpsb
imul
xor
mov
add
and
push
cwtl
pop
loope
fistpll
icebp
jecxz
sbb
add
leave
xchg
lock
add
stc
adc
ret
fldt
mov
push
jecxz
jnp
pop
iret
mov
shl
dec
cmc
mov
cmp
dec
lock
xchg
aas
imul
stc
cmp
cmpsl
call
push
jl
js
add
mov
add
fisubrl
pop
and
and
shll
xchg
mov
ja
aam
mov
xlat
fisubl
lds
adc
sahf
fdivrp
mov
adc
jnp
loopne
dec
inc
addb
ror
xchg
testb
bound
mov
pop
clc
cmp
jbe
mov
insb
cmp
das
mov
adc
adc
insl
cmp
adc
cmp
xor
jo
mov
cmp
movb
adc
and
adc
insl
jns
push
rcrl
mov
dec
and
fidivrs
mov
xlat
dec
dec
std
movb
pop
ret
enter
dec
ss
mov
scas
test
lret
pop
jl
lret
mov
push
scas
test
repz
nop
jb
mov
add
stos
xchg
push
cwtl
cmp
test
push
jne
pushf
cld
or
addb
lcall
push
cmc
jae
jbe
mov
sbb
pop
nop
sbb
add
and
je
sbb
std
sbb
add
add
fwait
popf
xchg
mov
jecxz
add
repz
add
or
inc
cmp
cmp
movsb
or
add
add
stc
sbb
orl
pop
roll
xchg
sbb
test
pop
mov
push
jge
push
cmp
outsb
icebp
mov
movb
lds
dec
inc
fwait
mov
add
xchg
popa
xor
sarl
cmp
push
xor
fwait
outsb
fnstcw
xchg
clc
xor
add
xchg
ja
imul
jno
imul
add
mov
aaa
and
xchg
push
xlat
fcoml
mov
xchg
xor
add
stc
mov
cmp
mov
loop
sbb
jg
outsl
xlat
pop
or
shrl
cmc
inc
add
stos
add
add
dec
xchg
cmp
cmp
movb
sub
mov
mulb
mov
jno
pop
ljmp
in
dec
lods
dec
sub
jae
inc
movb
add
rclb
popa
es
scas
out
cmpsl
out
sub
mov
repnz
add
sahf
mov
test
nop
out
das
hlt
push
jp
insl
fnstsw
loopne
push
xchg
out
mov
mov
xor
inc
addb
pop
rcll
push
sarl
inc
test
mov
enter
aad
aam
pusha
add
insl
imul
les
push
lret
xchg
add
add
aas
cli
sbb
sbb
pop
daa
add
std
jns
hlt
xor
aaa
inc
add
int3
ss
xchg
daa
mov
add
mov
fstpl
shrb
pop
cmp
inc
jmp
enter
push
stc
pop
std
push
shl
addr16
popf
js
addl
mov
xor
pop
mov
xor
xor
and
pop
mov
lahf
dec
nop
inc
add
mov
lret
adc
stc
xor
or
add
or
adc
adc
bound
mov
dec
icebp
adc
adc
push
or
lds
add
adc
xchg
xchg
cmc
lret
clc
adc
mov
fisttpll
add
cld
or
jo
push
push
xor
sub
mov
out
xor
lds
mov
or
mov
mov
pop
jmp
xchg
xor
xchg
lret
lea
dec
jno
lcall
sub
cmc
jl
ret
push
xchg
mov
fsubrl
lahf
cltd
loop
or
push
ss
add
lds
lds
sahf
dec
xor
add
inc
pop
shr
pop
insb
aam
dec
mov
cmc
adc
inc
xlat
clc
dec
add
push
mov
jo
lret
loopne
test
adc
mov
sahf
and
add
cvttps2pi
mov
add
fwait
aad
add
mov
add
leave
mov
xchg
mov
rcr
xchg
jo
ret
daa
mov
push
daa
sub
mov
ss
mov
pop
mov
icebp
mov
pop
cmpsb
mov
and
pop
div
xchg
ja
mov
and
inc
decb
add
jbe
adc
lock
adc
fidivrl
pop
movb
dec
push
add
inc
scas
loope
inc
fnsave
popf
or
scas
mov
jbe
shlb
add
sbb
mov
pop
fmull
adc
out
loop
std
jle
push
xchg
jnp
jecxz
nop
xlat
xor
jb
jmp
fstpl
add
loope
dec
fistpl
imul
sub
add
jmp
cli
dec
int
pop
cmpsb
imul
movsb
lea
add
add
sub
movsl
push
ja
dec
aas
lock
inc
add
hlt
and
les
call
mov
or
call
arpl
sbb
fidivrl
scas
enter
xor
bound
sub
lcall
dec
mov
out
xchg
cmc
rolb
pop
xchg
sbb
lock
js
add
xlat
and
jle
mov
sbb
add
add
jmp
add
push
mov
bound
add
fs
add
push
and
stc
bound
scas
jbe
lods
xchg
sbbl
dec
mov
test
push
popa
ret
add
insl
mov
push
add
fldln2
daa
lret
test
push
add
jle
sub
fmuls
xchg
shll
mov
mov
dec
push
popa
mov
adc
mov
pop
addb
jl
arpl
xorl
sub
push
ja
enter
jp
hlt
das
and
and
fidivrs
out
cmpsb
sti
cwtl
xor
cmpl
insl
das
sbb
fisubl
jo
adc
jo
mov
mov
jno
add
jg
fstl
push
cmp
cwtl
jecxz
jns
dec
sahf
js
mov
jno
push
jmp
jp
sub
lds
sbb
cmc
pop
fimull
movsl
test
xchg
outsb
push
enter
or
xchg
inc
sti
adc
fsub
fldt
test
call
sub
notl
repnz
or
jle
rcr
mov
adc
int3
lods
les
bnd
mov
icebp
sub
dec
jle
jg
and
cmp
scas
dec
clc
ja
inc
push
fcmovu
mov
leave
mov
push
popf
mov
mov
mov
int
mov
es
mov
xchg
movsb
push
std
roll
jo
push
cmc
jae
mov
add
cmpsb
adc
insl
lret
scas
push
jns
lods
or
or
cmc
push
outsl
mov
xchg
or
sbb
push
mov
lds
jb
adc
stc
push
cltd
xchg
das
mov
mov
loope
pop
mov
add
jmp
sti
popf
addb
xor
jmp
clc
pushf
dec
and
movsb
es
cmp
movsl
push
nop
or
inc
add
sbb
cmp
or
aad
cs
movsl
add
sub
insl
push
sub
jl
mov
push
pop
push
mov
data16
mov
or
test
xchg
outsb
fwait
call
xchg
sarl
dec
aam
xchg
sti
cs
sbb
hlt
fxch
xchg
test
mov
sbb
fsubrl
cwtl
xchg
jl
mov
mov
push
mov
add
mov
sbb
dec
lods
frstor
sub
mov
pop
cmp
mov
mov
mov
aaa
ljmp
loopne
inc
movq
outsl
lds
loope
lea
xchg
cmp
add
out
mov
push
xor
add
mov
mov
out
ret
cs
orl
add
xor
daa
or
stos
pop
in
add
and
out
shlb
enter
add
inc
jmp
xchg
clc
adc
push
in
lret
mov
fcmove
mov
insw
cmpsb
std
pop
das
push
mov
push
sub
jp
out
sub
push
dec
mov
cmp
mov
mov
jo
push
cwtl
in
mov
cwtl
movb
adc
fcmovbe
addr16
iret
pop
movsb
shrb
aam
sub
xchg
outsl
sti
push
mov
test
jo
idivl
icebp
testb
mov
sub
jne
mov
xchg
ljmp
mov
add
add
cmc
movb
mov
sbb
cs
cwtl
enter
add
dec
ljmp
je
daa
cmpsb
inc
add
xchg
test
rorl
iret
inc
stc
and
mov
xchg
mov
adc
imul
lock
ret
cmp
add
xchg
sbb
stos
xchg
sub
into
ja
add
cltd
mov
inc
clc
cwtl
nop
push
push
add
jne
mov
jecxz
cld
or
mov
pop
call
shr
mov
sub
sti
cmp
sub
cli
mov
xchg
xchg
test
dec
cmp
xchg
out
cmp
out
xchg
jae
pop
into
sub
pop
xlat
popf
mov
add
mov
xor
and
xor
pop
stos
repz
xor
mul
and
bound
nop
insb
out
add
add
lds
inc
add
mov
inc
add
in
xor
dec
hlt
jg
add
leave
dec
enter
add
addb
sti
jl
outsl
sbb
jle
mov
adc
in
inc
push
sahf
outsb
or
out
push
repz
mov
add
scas
fwait
lret
incl
movl
mov
fildll
jb
push
pop
shlb
cld
inc
popa
call
xor
push
rolb
add
add
and
lods
test
add
fiaddl
xchg
jne
add
push
stos
ret
cmp
imul
mov
inc
les
rolb
add
bound
ss
push
stos
mov
mov
cmp
cli
or
add
jl
imulb
nop
sbb
mov
shrb
inc
sub
jmp
rcr
xchg
into
sub
cld
adc
insb
pop
add
inc
add
sub
dec
sarb
or
push
adc
cs
xchg
inc
bound
movsb
xor
fists
rolb
movb
and
mov
enter
lahf
xchg
xchg
mov
xor
cmp
push
xlat
loopne
xor
add
sbb
add
mov
add
add
add
repz
inc
add
imul
push
pusha
add
inc
in
or
test
aam
in
dec
shrl
push
push
scas
push
inc
repz
add
pop
sbb
lock
fcoml
or
leave
xchg
push
aam
add
rcll
or
jo
lods
lds
dec
xchg
pusha
add
inc
add
xor
mov
add
add
mov
jns
mov
shrb
addb
xchg
ret
push
mov
lret
or
imul
jle
cld
in
mov
dec
icebp
les
xor
imul
cmp
push
add
add
test
int3
and
jns
xor
icebp
cmp
les
scas
add
lret
jge
cmp
mov
mov
add
outsb
mov
inc
stc
imul
add
and
sub
pop
push
sbb
cmpl
mov
add
popa
sub
inc
add
fisubs
test
push
sbb
leave
stos
push
xor
xlat
xor
aaa
sbb
roll
mov
mov
loopne
pushf
fnsave
sbb
jmp
sti
push
pop
cltd
mov
xor
scas
nop
imul
jle
add
pop
mov
scas
fdivs
mov
jle
push
arpl
xchg
jne
fsubs
dec
mov
pop
aam
dec
add
loope
mov
jbe
addb
push
push
fistl
ljmp
jae
cmp
add
xchg
leave
jae
ja
add
add
out
loopne
testb
mov
adc
mov
mov
add
jnp
fsubl
nop
fidivs
dec
push
jmp
mov
dec
test
cmp
leave
jp
fwait
in
add
push
cmp
push
imul
insb
fstps
lods
aad
fs
push
push
xchg
push
lds
mov
js
jge
daa
icebp
out
negb
jg
mov
call
or
inc
add
mov
in
pop
addr16
mov
add
aad
mov
add
out
jne
loope
or
cmp
adc
add
fidivl
outsb
rcl
loopne
xor
stos
jne
jecxz
test
in
imul
add
outsl
jne
mov
add
mov
sub
and
xor
push
push
clc
mov
scas
imul
add
and
xor
data16
lock
push
lcall
mov
test
lret
xlat
sti
andl
adc
sub
daa
push
and
fisttps
les
lods
adc
pop
push
xor
lea
rcl
dec
push
imul
loop
das
lea
pop
push
into
jo
xchg
pop
or
add
shrl
push
pusha
add
or
adc
add
out
add
push
push
xor
icebp
test
push
add
loopne
mov
dec
lock
inc
add
ror
xchg
inc
inc
add
movsb
insb
xor
lock
push
repz
push
aad
jecxz
cmp
cmp
dec
rcrb
or
rolb
out
mov
add
jle
aaa
xor
je
fidivrl
out
insl
add
stos
mov
mov
cmp
push
popa
jo
push
outsb
xchg
cld
xchg
or
mov
shl
subl
push
in
push
cmp
imul
jnp
cli
add
rcrl
sub
add
push
imul
add
jmp
inc
add
xchg
and
mov
xchg
and
add
push
and
xchg
repz
lds
in
js
or
ret
jg
pop
cmp
add
cmp
xor
mov
add
fstpl
stc
inc
jne
cmp
in
mov
add
push
lret
mov
lods
sub
adc
es
inc
add
add
movsb
cs
cwtl
push
push
or
out
add
insb
mov
pop
daa
nop
mov
inc
pop
push
xchg
jae
xchg
fdivl
ret
gs
add
add
push
scas
sbb
rolb
int3
ss
popa
inc
add
movsl
jo
fdivrs
fdivrs
or
xchg
in
mov
sub
add
xchg
rolb
std
jecxz
and
inc
add
inc
jle
aad
pop
mov
lret
pop
mov
rclb
mov
cmpsl
rolb
lcall
jnp
in
sahf
ds
lock
or
cmp
jle
shll
mov
dec
sub
jns
into
jb
pop
arpl
movb
adc
dec
jne
mov
lods
dec
push
roll
cs
inc
add
add
loopne
mov
cs
ds
ja
inc
add
add
mov
mov
and
int
pop
and
xor
inc
mov
push
cmp
pusha
add
and
dec
and
orl
xchg
push
icebp
mov
xchg
adc
lods
pop
dec
pop
out
add
push
in
jo
iret
jo
pop
pop
repz
pop
and
add
mov
sub
pop
xchg
test
push
loopne
scas
sarl
jno
std
cmpsl
test
add
add
repz
jo
add
pop
sahf
xor
jle
xchg
sub
mov
add
int
xchg
bndstx
cs
ret
pop
sbb
mov
add
add
cmpsl
popf
scas
sub
dec
xor
xchg
adc
out
or
add
adc
add
adc
sbb
je
jg
cltd
movsl
inc
lahf
or
cmp
dec
bound
jne
xchg
frstor
or
sub
add
leave
fistps
jp
add
bound
inc
add
std
xlat
shr
sbb
inc
add
add
add
sbb
mov
mov
int3
ljmp
xchg
dec
push
xor
mov
outsl
mov
xor
or
jne
pop
insb
lcall
outsb
dec
xorl
jmp
jnp
jno
pop
xchg
or
inc
xor
loope
insb
cmp
xor
aam
jmp
sub
sub
in
or
or
xor
add
stos
out
js
int3
movsb
xor
insb
inc
add
test
in
add
add
in
adc
add
int
cli
push
adcl
je
mov
mov
add
inc
ds
nop
popf
sub
add
fstl
or
add
add
push
jmp
mov
pop
loopne
add
fisubrl
fsub
rcll
sbbl
clc
cli
dec
repz
mov
fdivrl
mov
ja
xchg
xor
jnp
adc
cmpsb
in
xchg
lods
cmp
iret
shll
jo
xor
aas
dec
push
adc
inc
lahf
sbb
push
adcl
fbld
int3
mov
add
scas
pusha
add
pop
leave
inc
add
lods
xor
and
xchg
jo
std
cld
scas
mov
test
addb
xchg
or
fsubrl
mov
addb
cmp
jno
jae
mov
jo
push
xchg
push
mov
in
sbb
lcall
add
adc
pop
test
push
add
test
and
and
mov
int3
sbb
enter
les
arpl
push
sbb
or
and
pushf
int3
cwtl
loope
sub
push
repnz
idivb
jno
movb
out
mov
and
mov
xchg
inc
add
add
outsb
sbb
pop
jbe
mov
idivb
fnstsw
cs
cmp
fdivl
sub
pushf
and
pop
movb
sti
leave
push
add
xchg
lea
add
mov
testl
xor
movb
decb
das
and
push
mov
pop
lcall
shrl
pop
cmp
mov
lds
push
imul
lcall
popa
or
xor
icebp
add
push
jb
adc
add
push
rolb
mov
add
or
sahf
pop
push
lahf
out
neg
xor
push
dec
mov
add
mov
xchg
push
add
jb
jo
jmp
push
adc
add
pop
fdivrs
and
sahf
ja
inc
add
lds
add
aas
arpl
cmp
lds
inc
add
add
jb
add
rcll
mov
aas
mov
sahf
add
cmpsb
lahf
xor
xor
add
and
out
push
add
sbb
add
add
add
mov
adc
mov
sub
addb
gs
jmp
cli
adc
add
movsl
shlb
mov
nop
mov
sbb
lock
popa
aam
add
add
jmp
out
add
add
adc
sti
int
add
std
mov
cmp
mov
inc
jae
negb
fdivs
in
add
addb
push
or
popf
cmp
xchg
mov
sarl
mov
mov
mov
ds
std
into
int3
fsts
cli
xor
xor
add
add
mov
mov
movsl
lahf
xor
mov
enter
dec
push
add
sub
cmp
ljmp
pop
test
adc
loopne
shll
js
cltd
xlat
test
repz
out
sbb
loopne
jne
hlt
jnp
pop
xlat
outsl
mov
pop
ss
sbb
xchg
jnp
and
jae
and
inc
add
pushf
cld
imul
pop
sbb
fstps
push
mov
pop
outsl
bound
push
sbb
addb
adc
dec
leave
adc
shrb
mov
cld
lahf
jmp
pop
in
adc
mov
call
lea
test
ss
mov
pop
les
jl
mov
aam
fidivl
mov
ret
xlat
movl
loop
stos
imul
add
sti
cmpsb
sub
inc
data16
decb
outsb
int3
dec
rcrb
jl
xchg
pop
lods
loop
xchg
mov
mov
arpl
shlb
pop
inc
in
test
das
pop
push
test
and
jle
xchg
in
add
shl
fsubl
test
lods
add
add
into
jmp
dec
test
fcomps
push
ds
cmp
add
lds
adc
movb
xchg
lcall
xchg
stc
push
sub
int3
in
pop
and
fs
mov
or
lods
inc
add
jecxz
dec
xor
mov
push
stc
rorl
lahf
arpl
adc
xchg
cmp
ljmp
insl
inc
add
arpl
pop
pop
inc
add
jecxz
sbb
inc
add
stos
insl
jne
adc
out
push
out
cs
pop
or
std
cwtl
adc
fbstp
pop
push
lds
jnp
adc
add
adc
aaa
or
addb
and
pop
leave
pop
out
xchg
addb
add
or
cmpsb
push
add
fdivs
cmc
out
hlt
popf
jnp
jnp
punpckldq
lock
sbb
adc
sbb
lea
mov
jb
das
jmp
ss
ror
les
divb
ss
cmpl
jns
pop
out
and
cs
out
cld
stc
dec
test
cmpsl
pop
ljmp
sbb
add
jbe
jo
sub
imul
cmpsl
popa
in
xor
rclb
adc
aas
insb
pop
ret
adc
loopne
fistl
mov
add
mov
xchg
and
add
out
mov
nop
dec
sahf
stos
out
mov
sbb
xchg
std
sub
shr
fs
daa
aad
in
adc
dec
scas
nop
lret
std
test
shrb
push
inc
fwait
dec
sub
jne
add
leave
pop
cli
mov
pop
pop
sbb
add
bound
sbb
pop
movsl
sahf
xorl
pop
nop
mov
sbb
insl
insb
icebp
jmp
sub
scas
andl
jbe
sti
push
rcrb
cmp
data16
ja
mov
les
pmaddwd
push
adc
into
in
int
or
mov
jg
mov
and
jmp
cmp
or
adc
add
lods
push
lcall
pextrw
inc
cmp
cmp
push
add
pop
mov
dec
push
push
add
repz
inc
add
inc
add
repz
xchg
adcl
add
dec
xchg
lcall
add
xlat
cs
shrl
or
jo
call
scas
mov
xor
jecxz
mov
movb
mov
add
fs
movsb
mov
dec
xchg
inc
add
push
or
xor
adc
lret
add
aam
mov
xchg
inc
add
sti
or
xchg
loope
movb
scas
sub
fchs
popl
daa
aaa
xor
push
iret
shll
xor
cmc
loop
cmp
loope
add
fs
mov
adc
add
sub
and
mov
cld
push
mov
sbb
movb
cmp
gs
lea
in
xor
lahf
fidivrl
rolb
pop
cmp
add
dec
and
xchg
in
sbb
jp
pop
adc
jno
shr
lds
dec
in
js
fstpl
fs
cmc
mov
cmpsb
mov
push
test
push
add
leave
push
inc
sarl
ljmp
pop
pushf
je
mov
shl
nop
sub
ficoml
fdivl
add
mov
jp
xor
inc
lret
jb
add
mov
add
ret
add
in
les
xchg
dec
jle
pop
push
adc
add
pop
movsl
sbb
insl
mov
sbb
cmpsb
iret
fisubrl
sahf
xchg
sbb
lahf
arpl
cltd
mov
lods
jo
add
xchg
xchg
pushf
fsubs
mov
sub
add
fbstp
cmp
jne
int3
addb
repnz
xchg
xor
daa
or
adc
cli
xor
cld
dec
jmp
imulb
cmp
mov
sub
sahf
fs
mov
loop
sbb
add
aam
mov
jp
sbb
cmc
mov
xor
cmpsl
jl
aad
scas
es
sub
out
adc
outsb
pop
lock
add
push
addr16
pushl
xchg
sbb
mov
pop
call
mov
shrb
jmp
cmp
push
lods
mov
movb
add
mov
shr
out
xchg
fnsave
ret
push
aaa
xor
add
mov
sti
mov
gs
cmp
data16
jb,pn
xor
sbb
test
addb
in
add
fcos
xor
movsb
xor
loopne
loope
ss
cltd
sbb
sub
scas
ja
jmp
ss
int
mov
adc
int
add
and
in
pop
cwtl
xchg
sbb
cmpsb
sbb
add
adc
xor
repz
dec
mov
xchg
cmp
inc
add
inc
mov
out
stos
and
xchg
add
fs
and
jp
xor
jo
jb
leave
add
ret
inc
add
fstl
daa
pop
lret
push
lcall
xchg
mov
push
outsb
mov
inc
mov
dec
adc
lret
lods
xchg
pop
xchg
int3
xchg
pusha
add
adc
ficoml
clc
mov
mov
ljmp
call
add
jp
lcall
inc
add
orl
ret
pop
xchg
jb
std
push
add
dec
pop
pop
jg
in
cmp
push
jbe
push
fnstcw
nop
stos
inc
add
les
cwtl
add
sub
and
add
jae
loopne
add
add
negb
add
inc
add
dec
rolb
push
repnz
pop
rclb
imul
nop
rolb
and
jg
jecxz
push
xchg
push
mov
in
add
cmp
push
add
out
and
push
mov
mov
adc
scas
stc
fstl
inc
add
add
mov
insl
sar
cmp
push
add
sbb
daa
jo
adc
addr16
das
add
cmc
icebp
sahf
cmp
push
mov
push
jno
loopne
cld
mov
add
daa
xorl
lods
movb
dec
push
sub
sub
mov
mov
inc
add
xchg
xor
xor
xor
jbe
mov
adc
adc
outsb
xchg
fdivr
push
xchg
cwtl
inc
mov
add
jmp
fidivs
call
mov
pop
es
push
push
je
sti
outsl
out
inc
add
jge
das
divl
pop
out
cmp
sbb
jbe
inc
add
movb
sbb
fldt
arpl
aam
gs
mov
mov
cmp
dec
and
sub
pop
fdivp
incb
push
cwtl
jmp
sbb
mov
loopne
lcall
lret
fisttpll
test
add
addl
adc
add
adc
cwtl
sti
cmp
addb
test
push
nop
jns
jl
adc
icebp
rolb
mov
nop
fsubs
push
lods
inc
add
les
and
inc
pop
adc
jno
les
xchg
jp
dec
sub
sarl
inc
add
xor
add
push
push
xchg
dec
popf
and
mov
outsb
fs
cmp
in
mov
mov
or
mov
jno
push
jmp
ds
stos
sbb
addb
aas
ljmp
xor
or
ljmp
jecxz
jge
add
add
add
inc
add
add
jecxz
loop,pn
inc
add
mov
add
cmpsl
out
jae
mov
dec
addr16
daa
in
add
sbb
add
or
pushf
mov
lock
and
lret
rolb
cmp
imul
add
xor
std
add
mov
sub
push
shll
mov
pop
enter
addr16
fisttpl
pop
add
pop
popa
cmp
pusha
add
jno
int
mov
rorl
das
pop
lock
fxch
mov
fdivrl
pop
testb
incb
lret
adc
fwait
mov
sub
add
sahf
cwtl
nop
adc
cmc
pop
inc
pushf
pushf
jne
sub
inc
test
inc
push
lods
cmpsb
pushf
fldt
fbstp
mov
stos
in
iret
ret
jmp
jmp
or
push
ficoml
sbb
ss
fisubs
pop
fdivrs
adc
and
xchg
xchg
stos
aam
shl
sbb
mov
rcr
inc
add
insl
or
add
jecxz
pop
push
rolb
ljmp
jecxz
sbb
pop
les
repz
dec
scas
enter
in
mov
ret
cmpsb
call
clc
shlb
add
or
fwait
pop
movsb
imul
popa
notl
sti
push
clc
sub
add
loope
add
xchg
adc
call
scas
sub
mov
sahf
pminub
mov
add
shrl
lahf
mov
xor
push
pop
fisttpll
xor
les
pop
or
pop
lret
aas
mov
mov
lcall
outsb
nop
push
sbb
push
add
add
popf
mov
cmpsl
xchg
sub
and
subl
arpl
pop
mov
push
scas
or
sti
enter
shll
adc
inc
add
inc
add
call
cmp
push
lret
push
add
add
jne
xchg
mov
adcl
call
out
push
pusha
add
in
jmp
add
das
xor
ss
sarl
icebp
xchg
adc
sub
dec
in
and
pop
pop
dec
push
leave
mov
add
lods
xchg
fsubr
cmpsl
lods
add
xor
lahf
ja
mov
adc
aad
and
imul
cltd
ret
popa
sbb
cld
sbb
lds
mov
ja
pop
cld
jmp
cmc
lds
cmpsb
inc
add
push
out
xchg
jp
cmpsb
sbb
jl
add
fstps
push
sbb
leave
xchg
jle
test
push
dec
lcall
dec
test
add
jno
lock
mov
sbb
fsts
jnp
aad
adc
sbb
movsb
or
mov
sbb
pop
test
icebp
out
hlt
ret
out
add
xor
jns
out
fsubrp
push
add
or
adcl
cld
lret
testl
inc
inc
add
add
jg
loop
and
pop
imul
add
mov
shll
into
in
mov
stos
loop
cmp
xchg
das
test
inc
inc
add
pop
pop
sbb
addb
scas
mov
add
cmp
add
fidivs
mov
mov
mov
hlt
or
and
scas
mov
inc
add
mov
les
lret
daa
les
mov
fisubrl
jge
inc
add
mov
arpl
inc
add
loop
dec
xor
adc
enter
inc
add
je
and
jne
mov
jns
mov
mov
push
mov
roll
ss
mov
scas
pop
pop
adc
mov
push
fdivrs
out
mov
xchg
dec
xchg
inc
fistl
mov
cmpsb
push
jmp
movsb
in
outsb
mov
stos
fsubrs
gs
mov
cmp
mov
js
das
push
not
pushl
push
cmc
js
push
jge
add
rolb
pop
in
jmp
es
jle
ret
jg
pop
nop
add
mov
insl
leave
cmc
aad
and
movsl
cmp
and
bound
int3
mov
mov
hlt
call
scas
sub
push
sar
notb
test
and
add
sarb
lcall
or
add
push
dec
movsl
incl
or
or
xchg
in
push
xor
push
lea
jmp
rolb
fnstsw
addb
jl
cmp
add
in
jnp
mov
add
add
jp
movsb
lahf
and
into
inc
add
addb
inc
fistpl
mov
pop
bound
cmp
add
cmp
mov
inc
stc
inc
ret
mov
xchg
add
xchg
mov
jbe
adc
std
jae
jns
push
inc
add
and
out
or
dec
or
mov
divl
add
shll
xchg
sub
push
popa
mov
inc
add
push
testl
into
xchg
jb
fldt
pop
aaa
mov
jg
jnp
xchg
outsl
push
cmp
lcall
mov
xchg
imul
pop
dec
mov
and
push
aaa
push
add
fmuls
aaa
arpl
cltd
int
iret
pop
ja
dec
push
inc
int
les
sahf
push
popf
mov
add
dec
mov
add
inc
hlt
sub
fbld
loop
push
dec
dec
fidivs
sti
sub
enter
push
in
dec
dec
out
pop
add
inc
add
inc
add
ja
rcr
and
or
xchg
lock
bound
loope
pop
dec
insb
xorl
test
ret
xchg
xchg
mov
negb
mov
das
sbb
addb
jmp
push
lahf
mov
lcall
and
out
icebp
cs
inc
add
jb
add
in
jp
xor
add
sub
fwait
inc
jnp
in
aad
push
icebp
mov
lcall
movb
sbb
mov
es
add
fcmove
stos
mov
mov
rclb
push
add
push
sti
cmp
pop
mov
out
add
negl
jo
lods
mov
and
xor
xor
push
fimuls
mov
lcall
xchg
push
add
rorl
lahf
popf
and
fiadds
addb
push
mov
insl
jg
jmp
movsl
or
into
push
ss
push
scas
call
into
enter
lock
test
lock
mov
stos
int
cltd
bound
pop
cmp
mov
xor
in
add
add
add
sbbl
xor
rcl
jnp
add
scas
cmpsl
pop
mov
imulb
movsb
add
push
cmp
js
int3
push
pop
pop
pop
add
mov
add
cwtl
test
test
sti
pop
repnz
mov
aas
mov
andl
addr16
sbb
xor
and
sbb
test
cmc
xor
adc
cmp
or
push
cmpsl
jb
add
sub
lahf
inc
xchg
adc
sub
xchg
jge
in
rolb
xor
or
add
insb
and
push
fldenv
je
cld
sarb
into
dec
mov
add
jno
addl
mov
mov
add
push
adc
sbb
mov
cmpsb
push
xchg
sub
or
add
add
mov
movsl
movsb
mov
add
dec
test
adc
lods
out
sti
pop
mov
inc
ret
or
gs
sub
push
fimuls
push
or
sub
sbb
sub
loop
sbb
xchg
imul
mov
sbb
ret
fnstsw
cmpsl
movb
pop
adc
xchg
int
sbb
or
fstl
mov
push
je
cs
dec
ffreep
add
repz
push
or
and
sbb
add
leave
xchg
lret
les
xchg
loop
stos
lock
aas
iret
push
add
pop
jne
xor
xlat
gs
iret
push
std
xchg
mov
fiadds
rolb
icebp
push
je
rolb
mov
pop
dec
into
int3
lods
loop
aad
gs
mov
test
lods
sbb
dec
adcl
das
addr16
mov
add
inc
add
das
xchg
mov
dec
ds
jnp
and
and
xchg
and
push
mov
cmp
popl
decb
add
jecxz
mov
jne
mov
mov
fwait
xchg
je
mov
or
sub
cmpsl
mov
int3
leave
daa
loopne
lds
mov
leave
sbb
push
lahf
js
sar
mov
rcrb
negl
mov
add
sbb
add
cmp
popf
xor
mov
or
les
sub
xchg
pop
or
inc
xchg
dec
mov
das
das
dec
pop
fisttpl
add
dec
insb
mov
mov
rolb
aas
clc
mov
xor
mov
add
add
mov
les
mov
rcrl
sahf
dec
scas
ja
mov
dec
jge
stc
mov
rolb
mov
mov
pop
imul
mov
xor
nop
add
movb
fisttps
pop
scas
in
xor
add
sbb
xlat
xchg
xor
pusha
add
push
cli
adc
sub
push
mov
into
mov
add
leave
imul
xor
add
cmp
mov
mov
fmulp
out
or
jno
clc
enter
push
mov
test
jae
add
sbb
mov
scas
dec
dec
into
push
sub
add
sub
cli
mov
mov
rolb
add
mov
add
xor
add
xor
rcl
inc
add
fsts
add
inc
dec
pusha
add
mov
add
mov
roll
imul
ds
add
add
ja
les
mov
push
mov
popl
enter
mov
add
sahf
bound
ret
aaa
cmpsb
push
jge
xchg
popa
fs
add
push
imulb
dec
xor
xchg
rcrl
fst
lds
ljmp
psadbw
cmp
or
adc
ret
cmpsl
nop
add
jl
cmp
cltd
jb
sbb
cmc
sbb
cwtl
dec
adc
fwait
out
out
lret
fstp
fadd
xor
je
or
ret
jnp
int3
dec
fisubl
inc
add
xchg
adc
negb
sub
dec
insb
loop
outsb
cmc
dec
xchg
aas
jbe
fstpt
mov
jmp
addl
add
cltd
dec
stc
pop
mov
mov
test
sbb
jbe
pusha
add
xchg
sub
mov
in
add
addb
mov
pushf
imul
lods
sti
enter
mov
sub
les
lcall
mov
jo
mov
ds
int
jae
out
xor
xchg
jge
sti
movsl
lea
lds
or
cli
push
xchg
outsl
fists
xchg
xchg
sbb
movb
jle
or
add
addb
shl
loopne
add
iret
xor
loopne
xor
xlat
fsub
std
adc
mov
jae
add
cld
sbb
push
or
dec
mov
add
and
sub
xchg
out
adcl
dec
or
mov
jl
fdiv
lret
repz
push
aad
lods
stc
imul
sbb
jns
jno
or
mov
icebp
mov
aas
adc
jecxz
push
push
int
outsb
xor
or
arpl
mov
mov
inc
das
fsubl
push
adc
cmp
sarl
shlb
add
movsb
frstpm(287
in
adc
clc
clc
sub
leave
mov
push
add
mov
mov
addb
add
sub
mov
ds
pop
push
rolb
sbb
add
sub
xor
mov
mov
or
sub
adc
sbb
jne
inc
out
add
cmp
addr16
iret
xor
cmp
xchg
pushf
mov
jo
push
into
jecxz,pn
cmp
add
add
daa
mov
push
xchg
mov
adc
jb
add
xchg
fwait
cmp
and
add
cmp
add
add
js
addl
repnz
in
dec
loopne
cmp
mov
repz
and
mov
and
insl
cmovbe
outsb
mov
inc
js
hlt
jp
lret
fs
add
jle
xor
loope
mov
fsts
movsl
shrb
or
dec
in
dec
movsb
lea
jl
ror
xchg
push
adc
dec
gs
jmp
and
inc
add
add
mov
push
fisubs
mov
xchg
vpshufd
out
std
sbb
clc
arpl
dec
cmpsb
insb
inc
add
mov
hlt
cmp
dec
dec
mov
mov
jle
push
mov
pop
pop
adc
or
mov
out
cmp
add
sbb
add
bound
movb
mov
scas
xchg
ljmp
xchg
jo
loope
stc
sub
xor
jbe
mov
leave
inc
or
push
mulb
dec
pop
inc
mov
sbb
sbb
movsl
pop
inc
dec
jno
mov
dec
in
das
gs
cmp
inc
iret
arpl
cli
mov
mov
and
adc
fwait
push
inc
pushl
add
daa
pop
adc
jp
add
mov
mov
xchg
mov
addb
clc
adc
test
stos
in
jge
jns
mov
xor
push
cmp
mov
or
mov
cmc
imul
push
out
jno
mov
inc
add
mov
loopne
add
daa
xchg
push
xor
repz
pop
rorl
pop
fisubs
mov
pop
popa
inc
div
lret
lds
jle
mov
cmp
add
pop
into
or
mov
cld
pop
jmp
add
std
mov
in
mov
xor
sbb
inc
add
aam
ss
pop
cmp
inc
add
or
out
mov
add
adc
xchg
sbb
add
addr16
icebp
jne
fsubl
lods
xor
sub
ljmp
shr
pusha
add
or
jbe
mov
scas
cmp
jmp
aad
jb
pushf
out
fdivs
xchg
mov
dec
add
pop
mov
pop
popa
xchg
test
lds
and
push
jae
add
roll
cmc
popa
push
lods
and
xchg
mov
fidivrl
mov
jl
add
int3
or
lods
pop
das
sub
inc
add
ljmp
adc
jmp
outsl
mov
xchg
sbb
dec
ret
ret
lea
pop
xchg
xchg
nop
loop
push
mov
lcall
adc
sbb
insl
cmp
sub
add
mov
mov
repz
lods
shlb
int
dec
test
out
ds
push
sbb
ss
pusha
add
aam
bound
mov
add
add
repz
icebp
xchg
sbb
add
jg
fcoms
pop
cmpsl
jns
cmc
js
xor
and
jno
adc
and
inc
add
dec
mov
fs
adc
ret
jecxz
in
jge
pop
xor
jbe
cwtl
jnp
and
in
addr16
add
add
adc
add
outsb
cmp
les
das
das
pop
push
loopne
jo
icebp
sbb
inc
add
mov
movb
aas
sarl
repnz
mov
sub
cmp
nop
test
imul
mov
shrb
pop
mov
movsl
pop
movb
push
scas
rcll
add
daa
mov
js
add
aas
mov
lret
cmp
and
insb
movsl
les
xchg
lea
push
and
and
sbb
pop
dec
pop
pop
roll
cmp
jmp
dec
addb
add
jmp
push
add
dec
or
loopne
jecxz
rorb
and
xchg
les
adc
popf
addb
inc
es
inc
add
xchg
adc
sbb
cwtl
les
subl
add
jge
in
subl
out
add
jle
jecxz
push
jl
sbb
add
movl
ret
mov
js
jle
push
add
sti
stos
mov
or
add
mov
add
dec
xor
repnz
xlat
adc
add
adc
push
icebp
aaa
fmuls
lahf
pop
cmc
loope
out
incb
add
pop
mov
shlb
xor
jle
rorb
add
cmc
jg
cmp
xor
xchg
jnp
add
inc
add
into
dec
xchg
mov
add
divl
test
mov
dec
pop
repnz
pop
ljmp
pop
mov
add
scas
insl
mov
add
or
mov
leave
imul
mov
xchg
xchg
dec
insl
mov
int3
aam
clc
dec
sub
xlat
sbb
loope
add
and
jo
add
in
mov
out
fisubrl
pop
add
jae
inc
pop
mov
add
jbe
enter
mov
aas
mov
or
pop
js
mov
inc
jno
sbb
add
dec
or
lret
addb
mov
leave
outsl
js
xor
xor
jmp
mov
sti
insb
push
addb
xchg
adc
bound
xor
xor
and
int3
into
mov
ss
aaa
inc
and
jecxz
cmp
or
mov
adc
push
in
pop
mov
addb
xlat
dec
shrl
mov
jno
xchg
pop
jns
add
and
add
dec
add
dec
int
ds
data16
in
lret
mov
add
bound
movsl
push
cmp
fstpl
add
into
pop
vpmulhuw
enter
cltd
inc
jg
rcll
add
shr
add
daa
or
add
outsl
dec
xchg
clc
mov
sbb
aas
or
lahf
sub
xchg
test
cmp
test
add
popl
cmp
test
add
push
adc
dec
adc
pushf
dec
cmp
cmpsb
pop
cmp
add
ljmp
xor
cmpsl
pop
popf
repnz
add
inc
add
pop
insb
aas
pop
xor
loope
push
ja
xchg
int
mov
mov
cmp
mov
add
jb
add
add
repnz
stc
jb
add
repz
fisttps
mov
adc
jb
repz
and
pop
mov
stc
jb
mov
int
push
nop
jmp
add
aas
inc
cmpsb
xchg
xchg
dec
call
nop
jmp
mov
sub
jb
inc
add
add
lret
and
js
jb
add
dec
adc
add
add
and
stc
jb
mov
dec
pop
add
add
push
test
push
mov
xchg
ret
jns
and
jb
add
add
sub
add
jne
stc
jb
add
add
add
shrb
mov
stc
jb
add
not
push
mov
xchg
ret
add
add
xor
add
jb
add
add
mov
adc
and
inc
add
add
or
orb
add
add
mov
xchg
ret
cli
add
add
push
add
add
jb
add
call
add
add
add
addl
pop
je
stc
jb
popf
add
jmp
add
cmp
add
add
add
ds
stc
jb
add
add
or
and
add
sahf
jns
cmp
imul
daa
add
add
mov
jge
ret
jmp
add
push
cli
add
xchg
and
add
add
push
mov
xchg
ret
jne
mov
pop
scas
add
stc
jb
aas
add
push
stc
jb
jns
add
data16
and
jb
adc
add
and
and
jb
jae
int
dec
add
stc
jb
pushf
add
add
jnp
jne
stc
jb
inc
add
sbb
subb
add
rcrb
pop
je
mov
jns
popa
add
mov
xchg
ret
cs
in
fwait
stos
push
mov
xchg
ret
add
aas
add
lods
mov
stc
jb
adc
aas
add
jne
stc
jb
add
jnp
xor
stc
jb
rcrb
imul
stc
jb
jl
add
add
popa
in
mov
nop
jmp
add
stc
add
add
add
jo
nop
jmp
add
add
xor
jo
pop
nop
jmp
adc
adc
add
add
stc
jb
add
add
sarb
jb
add
mov
add
stc
jb
add
test
sub
mov
push
mov
xchg
ret
add
add
inc
add
sbb
add
add
add
stc
add
add
push
mov
xchg
ret
add
and
jb
mov
add
jb
add
add
addr16
je
stc
jb
add
add
stos
push
mov
xchg
ret
rolb
add
dec
xchg
stc
jb
add
sbb
and
mov
jb
add
orl
push
mov
xchg
ret
add
mov
stc
jb
fisubs
int
add
aas
adc
add
addl
mov
nop
jmp
add
add
faddp
add
jle
push
mov
xchg
ret
add
sub
repnz
test
jb
fwait
add
push
mov
xchg
ret
add
and
stc
jb
and
add
and
cld
add
push
mov
xchg
ret
add
add
stc
jb
push
add
call
stc
jb
add
dec
cmp
jb
add
add
loop
push
mov
xchg
ret
mov
inc
stc
jb
add
fwait
and
add
arpl
in
jb
stc
jb
rolb
aam
test
push
mov
xchg
ret
add
xor
cs
stc
jb
add
dec
rcrl
and
add
add
stc
jb
les
dec
nop
jmp
add
jne
add
jns
add
mov
mov
xchg
ret
mov
jno
lods
push
mov
xchg
ret
add
add
push
mov
xchg
ret
add
add
cmpl
daa
or
add
and
andb
add
in
inc
mov
call
stc
jb
repz
add
popa
add
mov
xchg
ret
add
mov
mov
stc
jb
and
add
add
xchg
mov
push
fiaddl
mov
xchg
ret
jae
add
stc
pop
mov
add
add
add
push
movb
sub
clc
stc
jb
ficomps
add
sahf
mov
jb
add
data16
and
jb
add
and
add
movsl
inc
add
mov
jb
fwait
add
adcl
shll
mov
add
stc
jb
add
add
movzwl
stc
jb
popf
add
cmpsb
add
js
stc
jb
add
jae
les
add
in
and
nop
jmp
fiadds
repz
add
add
cwtl
pusha
push
mov
xchg
ret
add
add
cmp
test
sbb
add
jb
dec
dec
aas
call
adcb
and
add
add
jb
mov
add
xor
push
mov
xchg
ret
add
mov
jne
nop
jmp
add
and
mov
lock
push
add
push
mov
xchg
ret
add
add
clc
add
stc
jb
mov
add
cmp
add
adc
mov
push
stc
jb
sbb
add
test
stc
jb
aas
jo
cmpsl
add
pushw
stc
jb
add
add
popa
add
mov
xchg
ret
add
stc
jb
fwait
jnp
add
add
add
push
mov
xchg
ret
data16
adc
pushf
add
add
jb
adc
cmpsb
les
aas
lods
stc
jb
add
adc
adc
jg
nop
jmp
add
add
add
add
stc
jb
push
jl
add
push
mov
xchg
ret
add
mov
sub
stc
jb
mov
dec
adc
stos
and
add
add
add
popf
add
stc
jb
dec
cmpsl
inc
adcl
adc
push
stc
jb
add
cmpsl
int
add
mov
stc
jb
add
add
jl
add
jp
nop
jmp
add
popf
add
push
iret
add
nop
jmp
aas
add
les
aas
mov
stc
jb
pop
fdivrp
aas
add
pusha
stc
jb
add
sahf
add
add
add
and
sub
inc
add
add
popl
roll
add
mov
and
stc
jb
data16
add
popf
sar
push
push
mov
xchg
ret
les
and
push
ss
mov
push
mov
xchg
ret
add
add
and
nop
jmp
add
add
add
call
hlt
inc
add
add
jmp
mov
xchg
ret
add
stc
jb
add
add
adc
add
add
outsb
mov
stc
jb
sub
add
sub
js
pause
jmp
add
mov
xor
add
stc
jb
and
inc
add
inc
mov
mov
xchg
ret
mov
loopne
mov
nop
jmp
data16
add
jp
push
add
jb
add
xchg
adc
mov
stc
jb
add
roll
xor
aam
stc
jb
add
add
jne
nop
jmp
int
add
cmpb
add
shlb
stc
sahf
rcr
rcll
decb
add
add
inc
pushf
add
add
cli
shl
stc
jb
add
add
popf
push
mov
pusha
leave
add
incb
mov
add
mov
mov
mov
mov
add
jb
jl
pop
sub
mov
nop
jmp
add
stc
jo
adc
fdiv
lcall
add
add
push
mov
cmp
nop
jmp
sahf
add
rcrl
add
inc
add
push
mov
xchg
ret
add
sarl
imul
add
and
add
mov
and
nop
jmp
add
and
jo
add
cmp
add
cmpsl
add
rolb
adc
push
mov
xchg
ret
add
add
stc
jb
add
popf
call
stc
jb
add
add
std
mov
stc
jb
repz
add
fimuls
push
stc
jb
cs
add
add
aas
ja
mov
stc
jb
fiadds
add
movsb
outsb
ret
nop
jmp
add
add
add
add
or
call
add
add
aas
mov
add
xor
stc
jb
add
cmp
lock
lret
fisttpll
add
add
pop
add
jnp
mov
pop
push
mov
xchg
ret
adc
mov
add
add
jb
add
outsl
sbb
add
jb
push
sahf
aas
cli
mov
mov
stc
jb
add
add
add
stc
jb
inc
cli
test
dec
add
adc
jb
mov
int3
jmp
stc
jb
add
sub
subl
data16
add
add
add
stos
stc
jb
adc
add
add
sbb
jb
add
addl
jae
inc
add
and
adc
inc
popf
ret
stc
jb
add
addl
lods
pushl
stc
jb
add
ret
mov
sbb
add
stc
jb
adc
push
mov
xchg
ret
and
add
sahf
push
nop
jmp
add
and
add
xchg
stc
jb
and
add
add
xchg
cltd
mov
nop
jmp
add
add
inc
add
stc
push
cmp
stc
jb
add
and
xor
jmp
add
popf
adc
add
mov
xchg
ret
and
add
add
sub
jmp
roll
cli
popf
xchg
stc
jb
add
fwait
mov
rolb
in
je
stc
jb
add
nop
jmp
mov
add
and
mov
xchg
ret
add
add
cmp
push
mov
xchg
ret
add
add
pop
push
mov
xchg
ret
add
add
add
stc
jb
add
add
xchg
xor
add
adc
inc
mov
call
stc
jb
add
inc
and
stc
jb
and
cli
add
mov
push
mov
xchg
ret
add
inc
dec
jl
mov
dec
mov
add
addr16
ljmp
and
test
sbb
notl
add
stc
jns
mov
jns
add
int
popf
add
add
add
stc
jb
sbb
add
mov
mov
add
stc
jb
pushf
and
gs
add
jmp
stc
jb
add
cli
add
add
imul
stc
jb
add
cmp
je
stc
jb
and
add
imul
jae
fwait
add
push
mul
lsl
nop
jmp
and
add
imul
out
add
add
add
add
mov
nop
jmp
repz
xchg
icebp
fnstcw
stc
jb
pop
add
xor
add
stc
jb
add
add
stc
jb
repz
add
or
repz
jb
add
repz
cmpsb
add
add
js
test
stc
jb
sbb
inc
sbb
xor
add
nop
jmp
add
add
and
jb
in
add
and
jl
jb
push
jb
jb
pop
add
je
nop
jmp
add
jmp
jae
jb
add
stos
mov
stc
jb
add
or
jb
add
add
add
add
nop
jmp
shlb
add
divps
jb
rclb
cli
pushf
add
adc
or
addr16
add
stc
jb
pop
cs
and
jb
jnp
jo
add
and
add
js
stc
jb
sahf
add
pop
mov
jae
jb
stc
jb
add
push
es
loopne
lock
call
mov
xchg
ret
es
adcl
add
stc
jb
repz
add
stc
jb
popf
mov
mov
lea
nop
jmp
add
add
out
add
push
nop
jmp
and
inc
and
add
add
stc
jb
add
add
add
push
nop
jmp
int
add
add
scas
pop
nop
jmp
add
add
pop
add
add
jno
mov
nop
jmp
adc
jns
test
stc
jb
mov
pop
mov
je
stc
jb
inc
inc
inc
add
nop
jmp
cmp
sub
xor
add
stc
jb
add
stc
jb
add
add
leave
stc
jb
add
sub
pop
add
mov
cmp
add
add
dec
add
add
add
xchg
lock
stc
jb
adc
add
mov
stc
jb
and
add
nop
jmp
add
add
xorl
fldl
xchg
ret
add
add
add
lret
adc
add
jb
add
add
xchg
mov
stc
jb
add
sahf
sbb
jb
add
mov
and
popa
stc
jb
push
add
jns
sahf
adc
push
mov
xchg
ret
adc
les
sar
subb
shlb
mov
stc
jb
sahf
roll
add
pop
int
inc
loopne
mov
xchg
ret
aas
cli
mov
inc
add
jne
stc
jb
pushf
and
push
stc
jb
mov
and
sbb
data16
sbb
jb
and
sub
mov
add
stc
jb
fwait
fwait
test
sahf
cmpsb
in
add
stc
jb
and
pop
aas
addl
add
mov
xchg
ret
jae
add
addb
sti
jmp
stc
jb
pop
dec
jo
pop
jne
stc
jb
and
add
mov
stc
jb
and
dec
add
addl
add
add
aas
mov
push
stc
jb
cmpsb
jne
add
add
stc
jb
add
add
test
shl
incl
add
add
mov
nop
jmp
les
repz
cli
add
sub
icebp
stc
jb
pushf
and
and
add
add
roll
add
mov
dec
jne
stc
jb
add
add
ror
stc
jb
add
int
add
add
fstps
mov
xchg
ret
and
add
jne
stc
jb
jnp
add
nop
jmp
stc
popf
rolb
fiadds
cmp
jb
adc
add
add
stc
jb
add
adc
shrb
fwait
pop
hlt
mov
add
stc
jb
add
mov
cmp
add
pop
sarb
jg
nop
jmp
mov
cmpsl
cs
mov
stc
jb
fimuls
add
add
mov
push
mov
xchg
ret
add
adc
stc
jb
cmpsb
dec
add
jl
add
push
mov
add
add
add
inc
call
in
fidivrs
jecxz
push
stc
jb
add
stc
inc
and
jb
add
jl
stc
add
push
mov
xchg
ret
inc
add
mov
stc
jb
add
and
aas
add
adc
mov
add
add
decl
push
mov
xchg
ret
pop
add
idivl
adc
add
incl
jnp
mov
mov
rep
nop
jmp
add
repz
add
jl
xor
jb
add
and
jns
add
stc
jb
add
shll
or
add
jb
add
add
pusha
push
mov
xchg
ret
add
es
out
mov
stc
jb
add
add
pop
mov
stc
jb
add
subl
push
stc
jb
mov
add
stc
jb
add
add
sbb
jb
jne
add
add
push
push
mov
xchg
ret
mov
mov
push
mov
xchg
ret
add
cmpsl
arpl
mov
stc
jb
add
cs
cltd
ret
nop
jmp
and
pop
data16
mov
movsb
stc
jb
mov
inc
add
add
dec
nop
jmp
pop
add
inc
and
add
push
mov
pop
stc
jb
add
dec
adc
mov
cmp
add
stc
jb
jne
cmpsb
es
push
mov
xchg
ret
test
adc
adc
je
stc
jb
cli
add
sub
jb
mov
add
add
cld
pop
stc
jb
add
add
in
in
add
stc
jb
add
adcl
mov
stc
jb
add
jo
mov
push
in
add
add
rep
nop
jmp
add
add
mov
clc
pop
stc
jb
sahf
int
pop
add
cli
jae
add
stc
jb
jo
cli
sahf
cli
les
stc
jb
add
add
add
mov
and
nop
jmp
fwait
add
fwait
dec
mov
stc
jb
add
add
cmpsb
add
sub
push
mov
xchg
ret
add
pop
mov
dec
nop
jmp
sahf
add
rolb
pop
pushf
les
add
stc
jb
popf
add
cli
fisubl
xor
add
stc
jb
mov
add
add
incl
add
cmpsb
mov
jb
add
rcll
stc
jb
jl
add
or
xlat
out
inc
add
add
add
add
nop
jmp
add
aas
jns
sbb
add
xor
sub
jmp
sub
ret
cs
xchg
lods
mov
stc
jb
popf
repz
sarl
aaa
cltd
push
stc
jb
sbbl
dec
and
push
mov
xchg
ret
stc
pop
and
push
stc
jb
mov
and
add
mov
stc
jb
add
add
dec
add
popa
add
mov
xchg
ret
add
push
add
stc
jb
add
movb
mov
xchg
ret
jns
add
jb
add
add
push
stc
jb
add
add
les
sub
sbbb
add
fiadds
jne
aad
dec
push
mov
xchg
ret
stc
mov
mov
push
mov
xchg
ret
add
mov
stc
jb
add
nop
jmp
jo
add
add
mov
lock
xchg
ret
les
add
sbb
stc
jb
add
add
and
add
pop
nop
jmp
jns
add
jns
add
mov
cmp
jmp
and
sbb
sub
aaa
or
xor
incl
add
popf
cli
mov
stc
jb
aas
cli
add
pop
stos
push
mov
xchg
ret
add
rolb
call
fldl
xchg
ret
aas
dec
add
add
add
nop
jmp
pushf
jo
int
les
push
stc
jb
add
adc
push
push
mov
xchg
ret
add
jns
sahf
mov
pop
out
incl
inc
add
add
add
stc
jb
add
sahf
add
push
push
movzwl
nop
jmp
and
and
add
cmp
mov
xchg
ret
jnp
mov
subl
push
mov
xchg
ret
jne
call
adc
inc
add
add
add
mov
xchg
ret
add
jmp
fwait
data16
and
dec
sub
mov
push
mov
xchg
ret
add
repz
movsl
stc
jb
add
add
dec
ret
hlt
clc
test
push
mov
xchg
ret
add
add
sub
jb
and
pop
mov
lea
push
mov
xchg
ret
jl
inc
mov
jb
shlb
pop
add
stc
jb
add
les
add
add
push
mov
xchg
ret
add
es
mov
push
mov
xchg
ret
add
mov
popf
xchg
add
add
pop
push
jb
jl
add
pop
or
jb
add
repz
add
push
stc
jb
add
test
pushf
cmpsb
les
lea
nop
jmp
aas
add
add
add
sub
nop
jmp
pop
push
mov
int
rcll
push
stc
jb
add
add
jno
stc
jb
add
add
stc
jb
aas
in
rorb
dec
aas
jmp
nop
jmp
add
mov
add
jb
add
add
dec
sub
mov
inc
add
add
aad
mov
mov
sbb
incl
add
add
push
inc
sub
jb
push
add
sub
mov
call
pushl
and
stc
jb
dec
add
add
nop
jmp
and
and
dec
dec
add
cmp
jb
cmp
jns
adc
push
push
je
add
mov
xchg
ret
add
add
scas
mov
stc
jb
add
test
add
push
mov
xchg
ret
sahf
pop
inc
jne,pn
stc
jb
cmpsb
add
ljmp
lcall
test
add
test
mov
pop
stc
jb
les
mov
cli
add
sub
popa
add
mov
xchg
ret
mov
mov
stc
jb
add
lods
add
push
mov
xchg
ret
dec
sub
mov
stc
jb
push
add
aas
int
cld
popa
push
mov
xchg
ret
sbb
rcrb
push
nop
jmp
add
add
mov
add
jae
add
test
nop
jmp
jne
cmp
add
jl
and
jb
jae
cmpsb
add
xchg
inc
add
xchg
cmpl
cmc
jmp
add
call
imul
jmp
add
and
mov
nop
jmp
and
mov
or
lahf
out
jns
add
add
mov
stc
jb
int
aas
dec
int
pop
add
stc
jb
dec
mov
add
rclb
add
add
and
sub
nop
jmp
cmp
push
dec
popl
stc
jb
add
adc
and
jb
add
in
mov
stc
jb
add
and
add
stc
jb
add
adc
add
sbb
jmp
cli
mov
add
add
jb
dec
add
cmp
dec
adc
mov
xchg
ret
add
add
or
add
add
xchg
adc
loope
xchg
push
mov
xchg
ret
roll
add
fistps
jb
stc
and
add
add
stc
jb
mov
sahf
add
lahf
xor
stc
jb
sub
lods
ret
stc
jb
add
xchg
fmuls
addb
add
add
mov
call
repz
aas
popf
mov
push
sti
stc
jb
adc
add
cmp
test
jmp
popf
dec
popf
add
add
jb
add
and
data16
out
add
jne
add
repz
mov
stc
jb
shrb
add
mov
sub
ret
push
and
cmp
rclb
in
add
fwait
mov
jb
add
add
mov
js
nop
jmp
les
add
add
stc
jb
add
stc
jb
mov
dec
add
lret
push
mov
xchg
ret
dec
add
inc
push
lea
sar
or
jmp
add
jns
and
mov
mov
push
mov
xchg
ret
add
add
mov
stc
jb
jae
les
popf
stc
addb
add
cmpb
incl
adc
add
push
stc
jb
add
mov
dec
jl
les
jb
add
adc
or
mov
stc
jb
add
push
stc
jb
aas
add
add
add
jns
pusha
stc
jb
add
jnp
add
les
sub
jb
and
sahf
inc
jns
xor
add
push
mov
xchg
ret
sbb
add
mov
xchg
ret
data16
out
add
or
jb
add
add
faddl
stc
jb
add
repz
mov
xchg
ret
add
ficomps
pop
stc
jb
add
add
and
loop
add
jb
les
add
pop
add
in
rep
nop
jmp
add
and
lock
push
push
mov
xchg
ret
in
pop
les
loop
nop
xor
push
sub
nop
jmp
jns
add
add
push
stc
jb
in
pop
les
ljmp
incl
jo
add
pop
add
add
jb
add
dec
add
add
in
ljmp
add
pop
dec
add
nop
jmp
dec
cmpsb
and
int
and
leave
jmp
stc
jb
add
cmpsl
cmp
repz
incl
push
jne
add
and
add
cmp
add
nop
jmp
adc
add
idiv
jb
mov
popf
add
jnp
mov
orb
add
add
add
aad
cmp
dec
cmp
jb
inc
adc
aam
push
stc
jb
add
add
fiadds
add
stc
jb
aas
pushf
and
dec
add
add
incl
jl
les
test
add
add
jb
cmp
cmpw
stc
jb
roll
add
mov
stc
jb
mov
add
add
pop
and
jb
mov
jl
mov
jb
les
dec
add
nop
jmp
aas
sbb
add
cmp
dec
sub
stc
jb
add
add
cmpsl
pop
push
push
mov
xchg
ret
rolb
add
xchg
cmp
jmp
mov
incl
add
cltd
push
stc
jb
add
add
add
xchg
call
decl
jo
cwtl
pushl
push
mov
xchg
ret
dec
les
xchg
sub
mov
xchg
ret
add
dec
nop
jmp
add
aas
add
xchg
rcll
jae
inc
add
add
sub
mov
stc
jb
add
add
xchg
sub
mov
adc
add
mov
stc
jb
jns
rolb
push
stc
jb
add
add
cmp
jmp
sub
add
cmpsb
jo
add
inc
popa
daa
lret
nop
jmp
and
dec
add
push
stc
jb
add
mov
and
jne
push
mov
xchg
ret
and
adc
pop
stc
jb
pop
adc
adc
mov
nop
jmp
add
add
in
pop
stc
jb
add
add
test
xor
add
stc
jb
add
mov
stc
jb
add
add
in
add
popf
push
mov
std
add
dec
add
add
mov
stc
jb
add
in
stc
fsubr
mov
add
stc
jb
int
dec
adc
nop
jmp
pushf
add
and
add
out
idiv
incl
test
add
pop
add
stc
jb
adc
and
jmp
fwait
add
add
mov
clc
nop
jmp
repz
add
mov
lcall
inc
add
inc
and
mov
stc
jb
push
add
lcallw
lret
call
roll
add
push
mov
add
stc
jb
les
add
nop
jmp
aas
add
shlb
in
xor
pusha
testb
sub
ret
mov
xor
push
mov
xchg
ret
shll
mov
sbb
jb
jae
mov
mov
nop
jmp
add
jnp
les
mov
push
mov
xchg
ret
rolb
cmpsl
sahf
pushl
push
mov
xchg
ret
add
add
add
jmp
add
and
sub
pop
pusha
nop
jmp
cli
and
mov
add
add
push
mov
xchg
ret
add
mov
mov
xchg
ret
aas
adc
and
adc
jmp
or
push
mov
xchg
ret
add
xor
push
mov
xchg
ret
add
mov
pop
stc
jb
add
add
add
out
shr
push
mov
xchg
ret
mov
int
pushl
stc
jb
sahf
pop
pushf
fiadds
jae
addb
push
mov
and
xchg
mov
add
enter
jo
mov
stc
jb
push
add
add
add
cmovae
jb
and
add
push
push
jecxz
jmp
int
add
add
fwait
mov
add
incl
jl
add
aas
dec
subl
mov
incl
add
add
aas
and
add
nop
push
pushf
call
stc
jb
add
mov
orb
jmp
add
cmp
incl
add
add
add
mov
stc
jb
jnp
add
and
dec
je
jnp
jbe
stc
jb
add
rolb
sub
clc
push
mov
xchg
ret
adc
add
ror
push
mov
xchg
ret
cmp
jmp
fcos
incl
add
mov
mov
stc
jb
add
rorl
mov
stc
jb
dec
adc
pop
stc
jb
add
addl
leave
sub
stc
jb
add
and
jns
push
jecxz
pop
clc
push
nop
jmp
sbb
shlb
push
mov
xchg
ret
repz
popf
or
js
fiadds
jne
rolb
adc
adc
jb
add
mov
mov
stc
jb
dec
fwait
add
add
jns
add
incl
nop
jmp
add
add
testl
add
jb
pushf
add
aas
xchg
dec
push
stc
jb
dec
add
add
clc
add
stc
jb
add
adc
dec
mov
stc
jb
aas
test
add
inc
xchg
xchg
test
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
cmpsb
add
fidivs
stc
jb
and
add
add
mov
add
stc
jb
add
add
push
stc
jb
add
add
add
mov
nop
jmp
les
add
mov
stc
jb
mov
jmp
nop
jmp
stc
jo
dec
add
mov
nop
jmp
cli
add
mov
sub
loope
stc
jb
in
mov
push
mov
xchg
ret
cli
dec
sbb
jae
shl
push
mov
xchg
ret
sub
popa
add
mov
xchg
ret
aas
add
jb
cmpsl
sbb
imul
fiaddl
xchg
ret
aas
inc
jl
cmp
jb
sub
aas
adc
dec
pop
push
mov
xchg
ret
push
jns
mov
mov
stc
jb
add
aad
repnz
mov
stc
jb
add
icebp
xchg
cmp
loop
add
inc
add
adc
mov
stc
jb
add
mov
ljmp
jns
rcl
add
stc
jb
popf
aas
fimuls
rolb
sub
jb
add
sbb
mov
stc
jb
addl
addb
add
mov
add
mov
xchg
ret
add
dec
imul
stc
jb
sub
adc
push
mov
xchg
ret
repz
add
repz
test
cmp
jae
push
mov
xchg
ret
add
dec
scas
rep
stc
jb
add
sahf
add
enter
xor
add
stc
jb
add
add
add
jb
pushf
add
int3
je
stc
jb
repz
add
jmp
les
add
mov
push
mov
xchg
ret
cli
push
adc
jb
add
sub
add
cli
sar
push
mov
add
push
add
aas
push
add
xchg
xchg
add
sub
xchg
cmpsb
movb
nop
jnp
xor
xor
int
mov
lea
imul
jg
pusha
add
lea
ret
jl
add
in
fidivs
add
sbb
pop
aad
jl
lods
jmp
les
das
xor
outsb
pop
push
or
fsubrp
aas
jae
add
sub
adc
add
jnp
xchg
mov
lret
sub
cmc
les
xchg
mov
mov
push
test
add
add
outsl
xchg
inc
push
repnz
fsts
iret
or
push
fs
lret
fwait
loope
aas
jae
jmp
or
call
mov
add
xchg
icebp
stos
fistpll
jae
xchg
outsb
movsl
push
pop
push
iret
pushf
add
or
out
add
jmp
ja
jno
add
or
loopne
push
lods
stos
movb
scas
decl
mov
pop
jno
add
mov
stos
movsb
inc
add
cmc
or
xchg
or
popa
cmp
mov
nop
int
lret
push
js
push
sub
inc
sbb
test
sub
xor
outsb
popf
mov
jecxz
adc
cmpsw
sub
js
add
idiv
mov
push
test
mov
lcall
jo
add
enter
scas
xor
fsubl
clc
xor
test
add
std
out
and
pusha
add
fdivrs
cmp
cmpsb
rolb
lods
and
nop
les
mov
sahf
pushf
loope
xor
ds
aas
jge
add
out
fdivr
sbb
jmp
addb
add
les
cs
add
sbb
addb
add
cwtl
and
repz
mov
lods
imul
nop
mov
mov
pop
lock
sub
mov
test
lods
ret
jl
add
lods
sbb
in
fcmovnu
cmp
xchg
hlt
fcomp
testb
mov
inc
add
inc
je
push
imul
mov
dec
gs
paddq
call
cmp
scas
push
mov
push
push
fwait
les
add
cmp
adc
mov
jb
mov
in
xchg
fwait
rcrl
inc
add
ret
into
push
mov
iret
sub
mov
adc
dec
js
add
mov
popa
addb
in
popa
pop
inc
add
loop
dec
lods
xor
cmp
ds
out
adcl
mov
add
sbb
pop
mov
imul
lods
xchg
call
iret
xchg
xor
gs
push
in
jae
xchg
rolb
ret
mov
pop
testl
or
mov
mov
lea
add
int3
out
mov
adc
cli
loopne
pop
xchg
jnp
add
or
lds
addb
jge
ja
daa
call
inc
add
inc
add
popa
addb
sbb
mov
popa
stos
xlat
mov
mov
xchg
or
aaa
aad
jge
mov
enter
sbb
mov
in
xor
popf
enter
addb
add
sbb
je
popa
sti
out
stc
mov
cmpsl
idivl
jbe
add
add
or
out
push
cmpsl
push
sbb
pop
stc
xchg
sub
mov
addb
and
push
clc
dec
scas
pop
cmpsb
mov
jp
sub
stos
mov
xlat
push
and
or
jae
lretw
dec
scas
mov
adc
loop
mov
std
xchg
or
cli
je
gs
jae
aaa
push
es
jp
add
into
movsl
or
into
jne
sub
lock
in
test
inc
adc
mov
jae
add
repz
sub
fisubrl
mov
rolb
push
mov
jecxz
fidivs
pop
push
arpl
sbb
aam
in
fadds
add
pop
insb
dec
in
sub
stos
mul
push
mov
pop
mov
push
pop
scas
addb
inc
cmp
test
shr
loopne
add
push
out
add
add
ja
add
scas
pop
sub
sub
add
mov
dec
insl
mov
jnp
out
outsw
add
ret
add
leave
and
cmp
xchg
stos
mov
stc
subl
push
addr16
je
aam
mov
xor
xchg
push
outsl
inc
adc
push
add
rcrb
int3
ss
add
inc
sbb
add
jmp
ret
mov
mov
fimuls
fcmovb
add
mov
pop
inc
add
push
fmuls
fcompl
mov
mov
push
add
add
loop
jl
cmp
insb
imul
xor
or
dec
add
push
add
hlt
pop
pusha
add
dec
jne
pusha
add
int3
push
mov
jb
add
add
sahf
or
arpl
xor
shll
mov
dec
sti
push
sbb
mov
int3
adc
jnp
jge
cld
add
mov
inc
add
fnstcw
es
jne
push
push
movsl
or
pusha
add
popl
jecxz
mov
mov
xchg
xchg
jae
xlat
iret
addb
pop
into
test
xor
dec
mov
aad
dec
in
out
xchg
pop
mov
lea
inc
add
cmp
add
ja
mov
test
out
push
adc
call
pop
flds
add
in
inc
xor
xchg
frstor
ds
scas
sub
mov
cs
rcll
aam
negl
int
mov
ffree
dec
push
mov
inc
insb
loope
ljmp
fisttpl
adc
repz
enter
popa
pushl
add
sbb
lock
and
jno
add
inc
add
aaa
cs
rorl
out
lea
mov
and
jbe
cld
fwait
xchg
je
add
sahf
addr16
dec
adcl
inc
mov
xor
ljmp
jle
add
mov
mov
rolb
popf
test
inc
push
add
movb
push
add
mov
xchg
and
scas
cmpsb
mov
cmp
out
imul
fs
fldl
rcr
or
js
xor
mov
and
inc
sarb
mov
pop
iret
call
push
bnd
enter
and
stos
mov
add
dec
adc
daa
and
int
add
mov
push
or
test
cli
push
jg
incl
push
insl
pusha
add
inc
jbe
dec
inc
callw
mov
add
addb
sbb
jp
cmp
and
movb
ja
mov
fwait
cmp
add
add
cwtl
mov
mov
mov
sub
leave
mov
dec
fnsave
fisttps
mov
repz
add
jno
xor
lods
out
cmp
cwtl
jne
add
mov
mov
in
js
cmp
add
push
ja
out
in
push
nop
xchg
aad
add
and
add
jmp
fstpt
xor
jb
xor
and
loop
sbb
add
insl
cmc
out
jp
in
in
and
xchg
mov
push
xchg
pop
mov
adc
scas
fcmovnu
out
pop
cmc
mov
inc
add
push
push
pop
inc
add
test
jo
bound
xor
ret
add
add
mov
jge
push
sub
pushf
in
addb
pop
lret
pushl
dec
in
scas
movsl
or
cmpsb
mov
jne
nop
sub
sti
or
cmp
dec
push
lock
add
cmp
mov
dec
push
test
fcompl
shrb
or
sbb
mov
fnstenv
cmp
add
shrb
sbb
outsb
pop
pop
int
repnz
outsb
mov
into
int3
pop
sub
ss
sub
add
out
mov
mov
adc
sbb
aam
int
inc
xor
add
lcall
imul
lahf
xor
pop
lds
andl
fimuls
lret
in
arpl
int
dec
push
movsl
pop
mov
fs
popf
adc
dec
mov
add
push
pop
pushf
add
and
lea
cmp
add
sub
dec
loopne
add
lods
sti
rolb
jl
add
ds
sbb
inc
jp
mov
sbb
mov
sub
in
dec
fnstenv
movb
rolb
sbb
add
fsin
dec
cmpsl
and
daa
cmpsl
mov
js
mov
movb
lea
and
insb
iret
pop
aam
stos
adc
pop
insl
push
inc
add
jne
jns
fnstenv
cmpsb
sbb
fldl
rol
add
jo
xchg
dec
into
lahf
mov
sarl
ds
je
movsb
nop
xor
fdivrs
test
jl
iret
push
fld
in
dec
call
shll
mov
add
pop
xchg
cmpsb
cmpsb
jbe
add
ret
push
scas
les
push
pop
movsl
xlat
xchg
sbb
test
xchg
jns
out
aad
mov
cmc
sbb
sbb
out
push
jne
lds
cmp
push
push
into
xchg
jno
add
adc
xor
mov
out
loop
adc
add
es
lret
add
dec
iret
jp
movsb
and
scas
lods
or
add
loop
jnp
rolb
pop
pop
inc
icebp
bound
inc
pop
pop
scas
and
pop
lret
lods
pop
cld
pop
push
adc
mov
jle
mov
xor
pop
rorb
cmp
mov
movb
int3
inc
add
and
push
jns
add
fisubl
stos
je
push
sbb
mov
adc
push
xchg
jns
leave
ret
xchg
mov
cmp
addb
or
add
ret
lods
ret
movb
fcmovnb
xchg
scas
mov
rorl
hlt
daa
fisubs
add
adc
dec
stc
jno
mov
xor
add
subl
xchg
inc
cmpsb
pushf
jle
aaa
lret
mov
fadd
insb
jecxz
cld
push
jnp
or
add
add
ja
mov
and
fiaddl
ret
repz
or
jle
les
push
add
aas
or
xchg
jl
call
mov
mov
inc
add
fistps
xchg
es
cmpsl
mov
add
adc
dec
mov
lret
mov
sahf
adc
and
imul
mov
xor
dec
pop
ljmp
faddl
add
je
push
jnp
sub
jmp
imul
xchg
xchg
shrl
push
cmp
xchg
es
sbb
jp
add
cli
sbb
add
aad
popf
mov
sub
xchg
jecxz
pop
mov
xor
bound
sub
jne
loope
scas
inc
jnp
movsl
jo
push
pushf
scas
pop
and
sub
jp
push
jb
mov
xor
int3
cmp
add
add
sbb
add
das
ja
int3
adc
or
add
sub
push
lods
sysexit
lretw
jne
sarb
xchg
lret
xor
ja
mov
out
mov
cmpsl
fsubrl
arpl
or
adc
ds
or
mov
inc
xchg
or
mov
cmp
sub
xchg
mov
add
hlt
pop
inc
stos
jae
movb
cwtl
xor
enter
pop
lock
add
nop
xchg
pop
repnz
push
dec
cmp
icebp
das
mov
jle
mov
out
ss
inc
scas
cmc
rcr
dec
add
adc
in
out
sbb
add
adc
lock
inc
add
mov
rsm
xchg
lock
lret
jecxz
or
test
std
std
fs
fimuls
fwait
pop
pop
adc
dec
nop
dec
cmp
jl
push
test
pop
sbb
inc
add
add
rol
add
inc
adc
or
and
and
dec
sbb
divb
int3
loope
sbb
inc
cmp
rcll
sub
cli
add
addb
cmp
addb
pop
mov
push
push
or
and
xchg
add
or
add
hlt
cmp
lea
xor
sbb
mov
fucomi
dec
mov
mov
hlt
mov
idivl
add
call
push
inc
add
add
xor
lea
cmc
add
fdivrp
pusha
add
add
add
or
dec
iret
rclb
pop
das
scas
ret
or
shlb
data16
sub
stos
orl
xchg
dec
push
cwtl
jmp
popa
adc
add
enter
ror
mov
out
pop
shll
adc
std
lret
push
cmp
adc
clc
sbb
push
sbb
xor
out
jns
addb
adc
mov
movb
add
loopne
fimuls
popf
loopne
add
icebp
dec
fnstsw
mov
mov
dec
hlt
mov
call
add
sbb
out
dec
mov
movsb
and
add
int
add
loopne
fsts
cmp
sub
jle
add
addr16
and
shlb
inc
add
jo
gs
cmpsl
push
jg
xchg
push
sbb
insl
stos
cmp
popf
or
sub
lahf
xchg
adc
mov
inc
arpl
and
hlt
out
loope
xor
add
divb
movsl
or
jmp
add
jl
shll
add
add
dec
lds
and
push
add
testl
inc
add
in
stos
fldt
jo
inc
xchg
xchg
arpl
cmp
push
in
iret
je
jmp
fnstsw
mov
filds
neg
ja
cmp
mov
add
mov
scas
push
push
into
inc
js
adc
fcmove
adc
outsb
les
mov
data16
inc
js
mov
outsl
push
pop
jp
xlat
out
sub
add
rcll
add
jecxz
add
je
cmp
or
dec
cmp
sub
pushf
pop
jb
fld
in
add
jl
cli
sub
rclb
aas
push
addl
sub
add
add
lea
test
xchg
outsb
and
adc
mov
xchg
xchg
jno
push
dec
push
sahf
jno
cltd
xor
lret
stos
daa
mov
dec
aas
add
into
push
test
arpl
ds
adc
mov
mov
add
insb
pop
inc
add
clc
jbe
mov
lods
stos
negb
pop
inc
sub
rol
add
addb
push
pushf
sbb
jbe
jb
insb
adc
sub
dec
movb
fwait
cmp
rcrl
add
add
in
pusha
add
add
and
dec
ss
inc
xor
add
add
cwtl
in
lret
cmpsl
test
or
lds
dec
inc
add
pop
and
xchg
rclb
icebp
mov
jmp
fs
sub
cmp
xchg
or
pop
or
rclb
xchg
into
mov
in
xchg
out
ja
out
pop
jecxz
add
xor
jno
add
dec
ljmp
mov
lret
xchg
add
dec
clc
cmc
femms
jae
rolb
xchg
sbb
je
adc
xor
sub
mov
add
mov
mov
cwtl
mov
movsl
mov
inc
add
lret
sti
iret
fsubrs
add
add
iret
jnp
jmp
mov
jnp
mov
mov
xor
clc
lods
insl
dec
inc
add
jae
add
mov
rolb
or
sbb
add
add
fidivl
dec
cmp
pop
pop
addb
pop
loop
lret
inc
loope
inc
xor
aad
cmp
movb
xchg
xchg
loope
add
das
push
shll
ficomps
pop
aas
mov
stc
inc
and
mov
mov
pop
push
aaa
lods
mov
in
jne
dec
inc
sarl
enter
je
xchg
scas
jb
jb,pn
cli
mov
icebp
jg
cmp
add
add
cmp
ret
cmpsl
and
sbb
add
jmp
mov
mov
add
and
cmp
inc
add
mov
mov
scas
js
out
pop
dec
mov
pop
mov
insl
jno
xlat
jecxz
xor
out
popf
lods
jge
sti
and
out
sti
xchg
jo
jp
adc
mov
sub
out
lret
dec
jg
and
push
push
test
sub
add
and
pusha
add
outsb
nop
cltd
nop
xor
lahf
pushl
add
mov
or
call
xor
fucomp
mov
cmp
jnp
jmp
fnstenv
dec
mov
mov
add
ret
pop
addb
dec
sbb
out
xor
add
adc
jle
xchg
add
jns
add
in
sbb
jb
lods
shrb
add
pop
mov
shl
mov
fisttps
sbb
cmpl
das
lock
arpl
add
nop
test
sub
inc
add
fistpl
push
leave
movsb
mov
mov
out
addb
mov
dec
rolb
out
es
lds
cwtl
outsl
sbb
daa
add
push
add
mov
xchg
or
cmpsl
pop
add
rcll
cmp
sbb
lods
sub
lret
fwait
outsl
das
loope
imul
or
add
bound
ss
add
jbe
add
pop
icebp
xor
pop
xchg
mov
xchg
pop
push
sub
ljmp
xchg
mov
mov
or
pop
loope
loopne
icebp
lds
repnz
add
add
movb
mov
shrl
addb
pop
repz
sbb
and
adc
scas
addr16
bound
jne
cmc
mov
aad
inc
add
jmp
lret
xor
inc
add
add
jae
lahf
cmc
xor
cmp
dec
xchg
ljmp
lds
push
jno
and
or
mov
cli
jl
xor
mov
sub
cmpsb
dec
inc
add
push
xchg
gs
dec
loop
addl
icebp
lret
mov
cmpsb
mov
or
insl
jge
in
pop
mov
cmp
xor
pusha
add
int
outsb
pusha
add
sub
hlt
sub
push
xor
jg
mov
inc
daa
or
lret
inc
add
js
lock
jno
pop
lds
inc
add
adc
ja
hlt
xor
jno
stos
imul
cmp
pop
jns
adc
or
add
push
lock
mov
adc
push
movb
lock
cmpsb
insb
xchg
jg
add
mov
arpl
jmp
lahf
pop
add
sub
adc
inc
add
mov
lcallw
and
cltd
fdivl
loop,pn
cmp
shlb
dec
sub
sbb
push
add
pushf
movsb
aad
xor
into
out
mov
or
bound
stc
popf
cmp
into
cld
xor
adc
cmp
jmp
pop
inc
add
lahf
sbb
sbb
cmc
addb
testb
addb
popf
in
push
aad
jnp
mul
jmp
cmp
sbb
inc
addr16
into
je
insb
jnp
cmpsb
adc
dec
loopne
sbb
lahf
cltd
mov
and
mov
pop
and
push
jp
or
cmp
insb
mov
xor
or
mov
dec
iret
mov
mov
sbb
imul
adc
rcll
add
mov
add
sub
fldenv
negl
cmpsl
rcll
bound
bound
enter
push
add
jge
xchg
lds
adc
inc
add
call
push
cli
xlat
xor
cld
sbb
dec
mov
add
sbb
sti
push
add
xor
cli
fxtract
test
in
pushf
push
xchg
jno
movsb
je
das
push
sahf
inc
je
movb
sti
test
mov
add
je
rolb
push
add
ret
dec
int
add
leave
xchg
pop
inc
sbb
ror
fistl
add
repz
mov
jge
mov
loopne
mov
inc
add
pushf
inc
xorl
inc
add
fucompp
frstor
add
testl
mov
ret
mov
aaa
jno
sub
lods
push
leave
cmp
scas
rol
imul
cs
sbb
clc
mov
mov
je
add
pushf
test
icebp
scas
pop
sbb
add
xor
stc
ja
xor
pop
xchg
jg
push
xchg
nop
or
inc
sbb
js
lods
shlb
push
popl
xchg
xor
aad
out
sub
pop
loop
icebp
and
pop
movsb
inc
add
push
xchg
imulb
lds
cmp
push
mov
out
loopne
popa
or
xor
dec
test
stc
adc
movsl
fsubrl
add
or
pop
mov
adc
addr16
cld
mov
jp
dec
dec
ja
aam
add
pop
sbbl
in
xor
lahf
push
push
enter
push
pop
test
push
inc
add
stos
add
pop
and
inc
add
ret
add
mov
add
add
push
xor
add
add
ret
xor
ficompl
int
xor
mov
jp
dec
into
stc
push
jg
mov
andl
mov
je
cmp
xor
not
jae
add
cmc
fcomps
leave
stc
and
out
movsb
les
jmp
out
push
sbb
movsl
rolb
mov
test
cmp
mov
cwtl
inc
je
and
cmp
int3
mov
mov
jg
dec
mov
scas
and
cmp
stos
lret
mov
xor
adc
daa
dec
mov
inc
imul
cmp
inc
add
push
mov
inc
add
add
fdivs
add
outsb
mov
add
hlt
sahf
mov
ljmp
in
add
shrl
push
xor
in
fsubrs
scas
ret
leave
std
ret
mov
push
add
addr16
jge
mov
pushf
test
repnz
xchg
jmp
add
popf
xchg
sbb
addl
or
outsl
add
test
add
pop
lret
add
pusha
add
loope
lahf
xchg
mov
roll
cmp
add
lahf
mov
jb
test
dec
in
mov
lahf
cmp
jge
shll
xor
flds
dec
or
xor
inc
add
cmp
xor
add
sbb
ja
push
test
add
inc
adc
sarl
mov
and
mov
and
in
sub
outsl
int
iret
add
sub
xor
cmp
test
sub
gs
adc
movb
in
fistpll
arpl
and
test
into
fsubrs
repz
pop
pop
les
fdivrs
in
mov
mov
ljmp
out
cwtl
jbe
sbb
mov
adc
hlt
adc
insb
lock
ds
in
fdivrs
out
xchg
aam
pushf
addl
aas
stc
stos
aas
fadd
add
mov
add
leave
aad
sub
hlt
les
or
int3
fdivs
push
jo
mov
test
sbb
aad
scas
aam
scas
cmp
mov
cmp
mov
xchg
ja
xor
add
cmpsl
xor
push
adc
dec
dec
int3
sbb
cmp
shll
sub
nop
add
scas
les
ljmp
ljmp
sarl
cmp
jle
mov
scas
shlb
jle
fs
aad
add
pop
mov
sbb
mov
cmc
add
xchg
shr
lds
addb
jle
ret
aam
and
aas
add
pop
lock
add
push
addl
cmpsb
add
in
and
jae
and
mov
push
sahf
pop
dec
pop
mov
mov
add
mov
mov
xchg
mov
add
jnp
xchg
fs
pop
ret
je
pop
scas
lds
enter
pop
inc
add
fimuls
jae
cmp
mov
pop
dec
inc
add
mov
sahf
jb
push
mov
and
mov
cmc
sub
mov
test
jbe
cmpsl
adc
push
add
mov
jbe
jo
and
mov
cmp
gs
sub
sbb
test
cmp
inc
add
pop
cmp
cmpsl
out
mov
hlt
sti
mov
jb
sub
dec
pop
sub
icebp
ret
lock
mov
outsl
adc
or
inc
dec
and
mov
jp
data16
mov
stos
insl
scas
cmp
nop
pop
adc
out
sbb
repz
jne
pushf
fsubr
ret
mov
test
ja
arpl
jbe
sub
popf
out
cmp
ds
jge
jmp
add
xlat
pop
imul
hlt
mov
mov
xor
clc
cmp
inc
add
clc
and
inc
adc
movsb
cmp
xor
sub
es
les
sbb
or
jl
shlb
xor
lds
sbb
mov
add
add
pop
dec
lods
fwait
fwait
fwait
xlat
setns
inc
add
in
bound
clc
rcr
fnstenv
jge
insl
xor
out
call
push
adc
mov
inc
push
pop
xor
xchg
incl
add
jbe
shll
sbb
test
addb
and
pusha
add
mov
pusha
add
jmp
stos
pop
out
repnz
jo
jno
addb
xchg
xchg
inc
add
sbb
loope
frstor
scas
xchg
aad
movsl
lea
rolb
cmp
stc
outsb
pop
xchg
faddl
xlat
sbb
mov
hlt
pop
les
sbb
pop
loop
xchg
pop
jbe
cmpsb
mov
mov
daa
adc
jo
push
add
and
sti
add
loop
repnz
pusha
add
bswap
lods
push
or
inc
add
call
mov
sub
add
push
push
iret
adc
mov
add
lcall
dec
movsl
rcr
femms
add
pop
aas
cmp
mov
pop
pop
les
es
popf
sub
push
dec
dec
ret
ret
dec
xchg
dec
mov
sub
xor
enter
ja
adc
push
je
dec
pusha
add
xor
and
cmpsb
sub
xchg
pop
in
xchg
push
jge
ret
push
sub
push
das
out
shll
nop
adc
out
pushf
mov
jmp
add
and
jo
inc
add
add
add
add
data16
xorl
in
das
test
push
pop
mov
leave
fs
add
loope
js
xchg
icebp
mov
pop
pop
cmpsl
sbb
adc
push
test
sub
mov
icebp
push
dec
addl
pop
adc
ror
mov
dec
or
outsb
or
sub
test
ret
xchg
xor
pushf
lea
push
pushf
ljmp
xchg
fistpll
add
add
push
mov
hlt
add
clc
sahf
cmpsb
popl
shl
mov
xor
aas
cmpsl
sub
popa
push
sbb
mov
push
int
xor
sbb
add
and
jnp
fistpll
mov
fcoms
or
and
push
xor
xchg
lods
cwtl
fisubrs
add
add
cmp
fsubl
add
inc
ficompl
push
jb
add
add
and
mov
insl
ja
sub
in
rcll
cmp
xor
inc
xchg
jnp
insl
push
add
mov
push
addb
sti
stos
in
stc
mov
out
popf
push
leave
push
cwtl
lahf
cmc
or
pushf
rolb
add
add
testb
mov
jno
test
pushf
xchg
orl
loop
lods
and
aas
lods
cmp
add
in
das
mov
or
inc
adc
inc
add
fnstcw
aaa
pop
push
imul
arpl
dec
loop
cmpsl
push
add
lahf
dec
mov
xchg
mov
dec
xchg
or
mov
lret
sbb
push
imul
call
push
mov
mov
push
rolb
adc
cli
sti
push
mov
mov
xor
jmp
add
mov
xor
ss
js
add
inc
add
jl,pn
imul
out
jge
or
adc
mov
pop
adc
sub
repz
sub
adc
push
loop
or
adc
inc
or
pusha
add
sbb
outsb
and
xlat
pop
pop
std
adc
inc
add
cmpsl
imulb
push
jne
xchg
test
mov
popf
sti
xchg
mov
and
pop
je
cmc
cmp
das
scas
or
jle
ds
ficompl
addb
sub
js
cli
enter
or
sbb
nop
lea
daa
int3
fs
pop
sbb
sub
add
int
repnz
cmp
pop
jo
cmp
add
sub
fsubrl
outsl
div
push
and
jg
push
ret
and
das
lret
mov
outsb
add
call
mov
sbb
movb
push
push
cmp
or
mov
pop
test
sti
mov
sbb
popa
xor
orl
test
add
dec
stos
xchg
cmc
mov
je
add
add
dec
jmp
mov
add
mov
jecxz
add
and
std
lock
cmp
sub
rclb
pop
aaa
adc
outsl
or
mov
mov
mov
push
jnp
mov
mov
or
mov
dec
js
adc
push
fwait
mov
shrl
fs
cmp
add
xchg
or
add
push
sub
xchg
andl
cmc
test
lahf
jae
sbb
fidivrl
fwait
cmc
push
in
lods
and
addb
add
data16
mov
nop
lcall
movsl
push
inc
sub
and
and
push
cmp
ss
pop
shl
fcoms
scas
adc
xor
jp
sbb
sbb
add
icebp
ficoms
in
je
add
mov
pop
fs
push
aaa
jns
dec
push
adc
mov
add
add
add
xchg
icebp
imul
cmp
pop
add
jl
lcall
sbb
fmull
ret
divb
and
test
mov
xchg
mov
out
dec
es
xor
add
mov
sub
jmp
pop
je
popf
in
mov
jo
dec
adc
cmp
mov
mov
shlb
add
ror
sahf
dec
or
cltd
or
xchg
scas
push
jbe
outsl
mov
push
popa
js
pop
rclb
cmpsb
insb
sbb
in
push
mov
movsl
sub
add
lahf
addb
jle
and
add
mov
xor
jae
push
imul
out
jae
ja
add
inc
add
add
inc
push
or
dec
push
pop
out
outsb
popf
jg
and
sub
jmp
int
jp
xor
inc
add
adc
mov
add
mov
sti
in
push
dec
ljmp
in
movb
mov
sub
pop
js
pop
ss
push
lods
outsb
or
xor
ret
ret
outsl
push
jle
add
add
mov
aad
movsl
adc
mov
push
test
push
or
das
loop
dec
ds
pop
push
int3
addl
mov
mov
stos
insl
inc
cmp
add
push
loope
mov
add
or
call
sub
push
mov
jle
pop
pop
or
or
rcl
and
inc
mov
int
addl
jne
cli
xchg
cld
jge
add
or
mov
pop
and
insb
out
pop
test
sub
lcall
add
ds
add
movsb
movzbl
fwait
jb
insb
out
shl
fimuls
daa
enter
or
xchg
movq
add
cmp
xlat
addl
xor
sub
cmpl
or
in
pop
xchg
pop
jl
or
insl
insl
xchg
lods
ljmp
mov
adc
cli
mov
movsb
adc
sti
loopne
inc
roll
push
adc
mov
push
enter
iret
xor
les
stos
push
mov
or
aam
cmp
lock
leave
push
xor
dec
jae
clc
cld
dec
movb
jecxz
rcrl
mov
pop
dec
sahf
sbb
je
add
jno
pop
adc
dec
cmp
mov
or
xchg
cld
out
cld
xor
scas
xor
adc
or
out
jno
sbb
push
xchg
pop
xchg
cmp
shrb
aam
movb
inc
add
mov
push
push
loop
scas
rcrl
jmp
push
sti
push
insb
aas
sbb
add
test
jne
ds
popa
rolb
add
jbe
and
inc
add
dec
inc
test
cli
nop
notl
ret
xchg
adc
lret
xchg
xor
xchg
add
or
inc
add
ret
stc
loope
cmp
mov
mov
bound
xchg
add
xchg
push
pop
cmp
addb
sbb
push
xchg
or
outsl
shll
dec
lcall
aad
sub
movsb
fdivs
push
adc
push
cmp
xor
test
clc
or
mov
sub
shlb
mov
add
xchg
loope
jbe
out
sti
cmc
nop
mov
adc
jnp
movsb
das
sub
jle
add
or
fisttpl
sbb
mov
jmp
in
scas
xor
sbb
mov
stos
sbb
les
movsb
dec
out
push
mov
add
add
std
aaa
dec
sahf
movb
shll
jecxz
and
lds
loopne
dec
mov
mov
add
add
pop
push
clc
aam
dec
sbb
mov
xchg
jl
rolb
add
mov
insl
adc
fists
add
inc
jl
lds
cmp
cld
stc
out
add
jno
add
push
or
lahf
out
mov
movsl
rolb
xchg
mov
mov
mov
mov
jecxz
add
loop
xor
inc
add
dec
mov
sbb
pushf
rolb
fldcw
pop
mov
fs
insb
out
leave
test
add
adc
adc
add
clc
decl
inc
add
xchg
and
iret
sbb
jae
pop
lock
scas
scas
pop
dec
jnp
mull
add
mov
bound
dec
xor
add
and
gs
pop
fnsave
pusha
add
stc
cmp
addb
xchg
xchg
fs
mov
jl
in
shll
and
jb
addb
das
push
shlb
mov
sbb
les
pop
jg
push
inc
mov
inc
add
hlt
sbbl
mov
cmpsl
xchg
cmp
jmp
dec
ja
std
add
push
adc
or
mov
sub
or
scas
adc
addb
imul
ds
or
test
or
sub
leave
sbb
fimull
and
out
xor
and
ja
mov
or
jnp,pt
testl
mov
add
xor
add
add
mov
or
pop
inc
cmp
subl
add
bsf
xor
dec
jb
addb
cs
xchg
push
enter
fldcw
dec
ret
into
push
jno
shll
cmpl
jb
lock
mov
push
in
out
sbb
add
adc
mov
icebp
call
fildll
mov
int
mov
add
in
add
test
ljmp
sub
mov
cmp
jge
xchg
add
mov
js
cld
mov
add
xchg
inc
xchg
pop
shr
cmc
lods
xchg
call
jecxz
xchg
mov
out
inc
add
or
ret
dec
jg
add
rclb
inc
add
loopne
mov
lret
lods
or
into
mov
add
aaa
jle
dec
jb
or
xor
dec
xchg
add
repnz
inc
adc
fisubrl
pop
inc
and
lahf
sub
add
jbe
outsl
ret
pop
cmpsb
adc
addb
jl
sbb
adc
scas
adc
push
fsubrl
out
repnz
jae
or
stos
push
push
das
iret
adc
sub
fildl
fwait
std
gs
lret
mov
cmc
leave
cs
clc
jns
add
nop
out
fistps
imul
jnp
incb
dec
jl
add
mov
rolb
dec
mov
ja
jae
and
and
clc
je
fildl
xchg
mov
xor
inc
add
call
sbb
in
jl
push
jae
sbb
stc
push
add
mov
cmp
iret
loop
ss
sar
or
or
lock
cld
xchg
push
add
mov
add
into
push
movb
and
mov
movq
mov
and
cmp
lcall
popf
push
testb
jmp
nop
bound
or
clc
inc
fcoms
inc
xchg
arpl
call
pop
aad
or
insb
ja
and
test
leave
or
mov
pop
popa
push
sbb
jge
lds
jb
jb
cli
xor
in
push
daa
xor
or
ljmp
dec
int
rolb
mov
lea
popf
rcl
ja
movb
and
test
cmpl
outsl
mov
das
addb
int3
jp
rcrl
sub
roll
add
rcrl
xor
sbb
jge
fs
scas
imul
cmp
fisubl
pusha
add
imul
xchg
test
pop
mov
shl
xor
cld
mov
push
inc
add
xchg
movsb
cmp
les
pushf
cmp
lods
or
inc
addr16
js
dec
xchg
xor
js
scas
es
push
xchg
mov
push
clc
nop
xor
add
add
in
inc
add
add
push
mov
pop
fsubrl
xchg
jb
cld
dec
xor
mov
hlt
mov
jl
hlt
mov
jnp
scas
jae
and
or
sub
ja
les
insb
push
dec
xadd
hlt
or
test
pop
roll
add
sub
fdivrl
mov
lods
aas
stos
test
insl
sbb
mov
movsl
dec
xor
xchg
les
popa
out
pop
scas
or
sub
xchg
mov
add
sub
clc
xor
fisttps
inc
repz
cmp
push
les
shr
inc
add
pop
add
ja
rolb
repz
scas
cmpsb
mov
cmp
mov
mov
xchg
fwait
sub
inc
add
cmc
stos
std
xchg
repz
or
aaa
daa
nop
outsb
cltd
pop
inc
add
pop
pusha
add
xlat
les
inc
mov
jmp
add
add
and
aas
pusha
add
scas
dec
push
loop
sub
xor
sbb
inc
xchg
and
add
jns
test
ja
pop
mov
nop
jno
jmp
negb
ja
inc
inc
pop
cmp
cmc
gs
std
ljmp
scas
inc
add
cwtl
and
inc
mov
cmp
std
addr16
addb
ljmp
xchg
add
add
dec
rcrl
sbbl
or
cmc
movsl
cmp
pushw
and
roll
iret
out
xlat
xor
pop
push
inc
add
mov
pop
xor
dec
sbb
fsub
sbb
aas
in
pop
push
addb
cmp
clc
fbstp
mov
cmpsb
pop
mov
inc
call
sbb
lock
lea
xchg
in
sbb
cmpsl
int
and
mov
mov
sub
add
dec
fwait
xchg
std
mov
test
cs
js
mov
and
sbb
and
out
fidivrl
xor
dec
xor
sti
mov
rcrl
stos
outsl
jmpw
and
scas
fs
lahf
outsb
int3
je
lret
lcall
add
mov
add
arpl
sbb
fwait
sub
jp
mov
and
adc
call
lcall
cwtl
aas
add
lods
push
repz
jb
cmpsl
pop
or
icebp
subl
test
sbb
aaa
das
imul
aas
pop
addr16
and
and
dec
jge
adc
lods
das
xor
cmpsb
popa
sahf
loope
pop
inc
pop
popf
insb
addr16
xor
aad
add
mov
jg
pusha
add
mov
bound
test
jnp
dec
xchg
pop
cmp
mov
dec
adc
add
lods
out
popa
sahf
mov
enter
jb
pop
enter
xor
in
roll
arpl
dec
xchg
pop
xchg
nop
jp
ffree
je
in
sub
jge
cmpsl
cmp
mov
push
dec
aas
fwait
lcall
lcall
xchg
mov
push
test
mov
push
adc
add
cltd
ds
push
rclb
inc
out
rorl
into
fwait
daa
lcall
cmp
scas
dec
or
mov
fwait
lret
jmp
lret
sarl
pop
push
inc
fsubl
fwait
enter
fwait
addb
xor
mov
push
add
dec
pop
xor
add
sbb
sub
sub
repz
lods
stc
mov
mov
ds
add
mov
movb
jp
and
mov
rcrl
pop
mov
loopne
push
add
and
testl
and
dec
je
jg
ret
xor
imul
adc
mov
add
jo
movsl
sub
add
jo
mov
jnp
fcmove
movsb
out
dec
fcoms
cmp
add
movsl
sbb
xchg
or
in
int
pop
lahf
dec
push
outsb
jg
add
cs
push
clc
stos
fldcw
dec
shlb
sbb
fxch
dec
mov
mulb
mov
test
pop
inc
add
pop
or
sti
and
fimuls
cld
adc
add
das
addb
adc
aas
gs
cs
out
xor
rcl
in
lret
jle
mov
negb
xchg
inc
jmp
ljmp
xor
add
movsb
aas
lret
shlb
add
jb
add
addr16
test
cld
sahf
dec
mov
or
add
jo
es
adc
pusha
add
add
out
sub
jae
mov
or
sbb
mov
sahf
jmp
mov
pop
movsl
xor
es
xlat
stos
dec
add
mov
mov
xor
mov
push
add
add
push
lds
add
int3
outsl
xchg
outsl
xor
imul
movb
js
push
add
test
icebp
int3
lods
in
cmpsl
xchg
inc
add
cmp
add
jbe
xlat
xor
int3
daa
sbb
add
add
mov
xchg
in
addr16
sbb
xchg
clc
jg
push
pop
inc
add
loop
and
adc
in
addb
add
lds
mov
outsl
cmpsl
sbb
aad
cld
cmpsb
movsb
pop
sub
test
add
cltd
mov
xchg
js
xchg
pop
and
gs
leave
fisubrl
xchg
addb
xor
mov
mov
out
pop
aam
mov
jg
adc
add
xchg
inc
xor
dec
mov
mov
add
je
sub
addr16
sarl
mov
cld
adc
addr16
ret
mov
mov
pusha
add
mov
xlat
and
push
stc
cli
jp
popa
enter
push
movl
xchg
add
in
add
add
add
push
add
mov
mov
jno
pop
cmp
inc
std
sbb
mull
add
xchg
or
in
dec
mov
out
jecxz
pushf
imul
jl
jp
lahf
rorb
mov
push
add
sbb
aas
push
xchg
repz
inc
add
sub
loopne
sbb
outsb
mov
add
add
sbb
push
loope
stos
mov
iret
adc
mov
mov
push
mov
sahf
popa
stos
test
cmpsl
and
loope
addb
mov
pop
add
push
mov
add
pop
sub
mov
clc
mov
add
add
jp
mov
push
scas
pop
repz
sbb
scas
cltd
repz
out
xor
mov
idiv
adc
lods
add
xlat
je
and
stos
adc
adc
push
mov
fimuls
jno
inc
add
bnd
ja
mov
jp
ret
mov
insb
lea
push
and
pushf
pop
mov
jmp
add
add
les
loopne
dec
pop
cld
stos
mov
add
push
push
jecxz
adc
sbb
jg
lcall
inc
add
adc
jle
jl
aas
test
adc
clc
jge,pt
cmp
roll
xchg
nopl
mov
sub
jle
jo
inc
push
or
pop
lret
cltd
xchg
add
fisubrl
push
repz
jmp
xor
jb
pop
les
dec
xchg
hlt
xor
icebp
jl
addb
and
mov
scas
inc
add
in
xor
into
addb
es
sub
cmp
out
mov
cli
insb
mov
and
push
sbbl
cmp
dec
mov
push
mov
fiaddl
cmp
outsb
jle
testl
xchg
dec
addb
lret
cwtl
fstpt
nop
popf
cmp
mov
int
mov
jnp
add
sbb
icebp
hlt
addr16
cmp
pusha
add
push
add
pop
pop
call
push
out
inc
divb
add
and
pop
cmp
test
cmp
repz
fs
jle
pop
lahf
sbb
cli
popf
loopne
or
les
add
xor
pop
lock
mov
add
mov
popf
cmp
shll
mov
pop
jnp
xchg
cli
fdivp
sub
add
out
js
jbe
mov
sbbl
pop
push
cwtl
or
stos
lods
mov
or
dec
adc
out
mov
enter
adc
or
imull
jae
add
loop
testb
inc
mov
push
sbb
jmp
clc
in
rcrl
or
rcrl
push
mov
add
and
jg
inc
add
push
add
popf
fninit
and
rolb
jmp
leave
pop
adc
ffreep
lds
add
add
add
adc
add
pop
sahf
mov
jbe
in
pop
inc
add
add
pop
xchg
xchg
test
inc
add
bts
cmp
xchg
xchg
jo
scas
jge
leave
xchg
rorl
sub
mov
inc
ficoml
jne
int
pop
xor
pop
scas
push
push
mov
pop
loop
and
repnz
repz
xchg
mov
lods
sbb
std
ljmp
pop
iret
dec
mov
xchg
inc
add
jae
cmp
dec
jns
fildll
std
cwtl
inc
jecxz
or
fnstenv
and
mov
popa
dec
inc
add
xchg
aas
mov
gs
testb
call
jge
movb
adc
lahf
or
lret
mov
or
sti
lret
pop
mov
call
xchg
cmp
cmp
xlat
test
inc
add
push
pusha
add
dec
imul
and
add
pop
aaa
int
push
or
rorb
cld
scas
cld
rorb
leave
test
movsl
stos
jmp
push
or
xor
mov
sbb
aad
cli
inc
jecxz
addb
ficoms
xor
sub
jno
out
icebp
lret
cld
mov
cmp
add
mov
xchg
pop
shlb
or
sbb
cld
negb
pusha
add
and
push
bound
cwtl
fs
sti
mov
add
jge
into
pop
int
jno
xchg
dec
sub
cwtl
test
and
xchg
pop
popa
xorl
xchg
and
jecxz
add
test
cmp
add
fiadds
fs
add
out
pop
dec
jecxz
dec
sarb
pushf
imul
iret
push
jle
fcomi
push
negb
fisubs
subl
xor
cmc
fisttpl
out
sbb
inc
add
cmp
jb
outsb
push
or
jnp
push
push
adc
movb
insb
subl
in
addr16
mov
mov
loope
cmp
aam
and
xchg
bound
lods
ficomps
mov
sub
or
leave
xor
bound
and
jbe
and
xor
inc
push
adc
push
jge
aam
scas
sahf
cmp
inc
add
mov
fldt
outsb
jecxz
inc
repz
lock
inc
pop
mov
test
push
lahf
mov
jne
stos
adc
inc
add
imul
dec
push
lahf
mov
adc
add
pop
jmp
jno
sbb
sub
ret
testb
push
mov
lret
mov
das
dec
jp
cs
sbb
xchg
les
sarl
mov
fwait
jmp
and
inc
add
lahf
mov
add
imul
mov
popl
dec
outsb
imul
add
je
lods
and
daa
xchg
cmp
mov
mov
fisubrs
icebp
mov
std
sahf
out
les
cmp
inc
add
inc
add
inc
mov
inc
add
add
test
lock
lahf
sbb
jge
pop
sbb
push
add
add
pop
popa
out
xor
or
and
rol
add
push
or
and
xor
add
or
add
jmp
fistpl
scas
sbb
add
pop
loop
add
xor
sub
jo
pop
sbb
imul
add
jmp
dec
sbb
xchg
jg
add
mov
ror
iret
pop
and
adc
aas
loop
add
and
inc
mov
scas
jb
inc
ret
push
adc
fsub
jne
and
jl
jae
add
add
nop
popl
rol
loope
and
add
mov
cmp
xchg
sbb
test
sbb
jmp
js
imul
clc
pusha
add
lcall
push
inc
add
adc
bound
cli
sbb
pop
loope
scas
iret
pop
cli
mov
add
mov
in
mov
call
mov
add
stos
aas
xchg
in
xchg
sub
add
mov
inc
add
popa
rorl
aaa
push
pop
decl
scas
adc
movsb
pop
loopne
or
sbb
xchg
xor
sbb
lods
xor
lcall
scas
sbb
movb
jg
add
ret
adc
add
inc
imul
in
and
add
notl
stos
pop
jae
inc
xchg
push
movsl
adc
mov
dec
je
mov
mov
cmp
out
pop
and
rolb
mov
shl
jmp
sub
out
pop
pop
or
inc
and
ret
dec
data16
ret
add
sbb
js
add
jp
push
inc
or
mov
rcrb
test
sbb
mov
into
jecxz
mov
mov
jl
or
cmc
mov
cwtl
repnz
lahf
clc
inc
add
add
and
mov
mov
sbb
out
xor
mulb
xlat
out
xchg
ds
outsb
fistpll
inc
add
test
push
stc
inc
add
je
inc
add
xor
xor
sbb
pusha
add
jg
xor
mov
ds
fisttps
enter
mov
std
or
add
std
xorl
into
jns
jbe
add
add
cmp
hlt
int
testl
add
ja
pop
shll
repz
cmp
or
cmpsb
mov
mov
pop
add
and
and
cmp
iret
mov
cltd
stc
add
push
jns
cmp
stc
inc
add
mov
ds
rorb
leave
js
insl
inc
add
fists
add
pop
and
mov
popf
jno
sub
jp
xor
stos
lret
pushf
mov
jnp
pop
aaa
aaa
cmp
mov
add
adc
inc
add
lds
test
lret
call
add
mov
imul
out
leave
inc
add
jl
enter
arpl
mov
mov
add
dec
dec
push
enter
adc
add
mov
add
gs
movb
pop
mov
xor
into
pop
xor
nop
inc
pop
cwtl
mov
arpl
push
xchg
sahf
or
cmp
add
out
xchg
out
lcall
or
cmp
in
imul
imul
jb
data16
jp
addl
lret
dec
mov
dec
subl
out
push
xchg
xor
jmp
pop
push
xchg
aad
mov
dec
js
test
push
xchg
jg
in
aam
add
aaa
js
scas
test
mov
pop
addb
add
rol
add
pop
or
push
imul
xor
mov
push
push
inc
add
in
pushf
dec
xlat
mov
addb
cmc
pusha
add
add
test
pop
mov
sbb
add
fsubr
test
add
push
das
shl
jg
xor
dec
inc
add
daa
dec
mov
rolb
loop
jmp
mov
ja
mov
int3
outsl
push
aaa
push
sub
add
mov
mov
mov
test
in
and
negl
lods
pop
sbb
leave
test
mov
add
xchg
icebp
cmpsl
out
add
add
andl
sti
pop
or
cmp
enter
add
add
add
sub
mov
outsl
stos
in
int
jecxz
addb
xchg
jno
sbb
and
sbb
add
jle
test
int
mov
mov
aas
add
pop
pop
lea
cmp
fdivrp
div
mov
test
push
in
flds
sahf
fwait
addb
jecxz
mov
movsb
stc
or
jne
lods
push
je
inc
add
jno
dec
mov
sub
and
pusha
add
insl
adc
jle
inc
movsb
mov
setle
es
mov
into
adc
hlt
jg
pushf
cmp
stc
icebp
sub
bound
aad
pop
aas
xchg
jne
jnp
mov
add
and
add
inc
fdiv
lahf
stc
dec
movsl
sti
mov
sub
xchg
jle
pop
mov
inc
add
dec
rcll
add
and
add
nop
push
dec
idiv
icebp
mov
leave
popa
daa
mov
es
pop
adc
xor
jno
insb
add
xchg
push
jne
add
add
push
add
gs
xlat
repnz
xchg
loopne
imul
out
in
loopne
test
inc
rcll
mov
add
shr
addb
sahf
aas
fisttpll
aad
jmp
ja
mov
add
inc
add
pop
pop
or
push
mov
adc
sbb
dec
sbb
add
xor
stos
cli
sti
jecxz
push
cs
and
jmp
out
pusha
add
int
cli
aas
imulb
sbb
push
mov
outsl
ret
push
xlat
cmc
sbb
push
ljmp
jl
shrb
data16
cmp
and
movb
dec
repnz
cmp
fwait
in
cmp
stc
mov
mov
mov
in
and
add
mov
mulps
add
or
push
push
add
out
nop
mov
mov
pop
dec
sbb
adc
iret
push
and
mov
dec
or
push
hlt
test
jae
xor
nop
mov
lret
add
jbe
lods
jp
sub
iret
lods
pop
cs
pop
mov
push
clc
push
popa
xor
add
test
js
pop
imul
nop
mov
inc
imul
ja
int3
int3
sbb
inc
xor
mov
jp
addb
add
sub
push
imul
lods
imul
repz
pusha
add
test
add
je
dec
pop
or
add
xor
dec
or
mov
outsl
dec
int
movsb
cs
mov
lahf
push
ficomps
xchg
push
xchg
xchg
jle
cmp
jns
sub
out
adc
jnp
imulb
in
jmp
mov
imul
hlt
pop
xchg
xchg
into
ja
int
lods
out
mov
cmp
imul
sti
mov
insl
out
test
cmp
icebp
sbb
push
dec
push
dec
inc
mov
jb
in
jg
rcrl
or
sti
mov
inc
add
xor
cmp
sub
and
filds
inc
add
push
popf
icebp
push
hlt
xor
jecxz
mov
mov
jne
mov
inc
add
inc
xlat
inc
add
fcoml
xchg
and
js
sbb
fs
js
pop
pop
cmpsl
sti
or
out
lret
enter
xchg
sub
cmp
jnp
stc
cs
stc
sbb
test
js
pop
ljmp
cmp
scas
scas
dec
cmpsb
cltd
pop
push
clc
in
ds
mov
inc
into
mov
dec
inc
js
add
fwait
xchg
sbb
push
push
in
mov
outsb
adcl
test
stc
lret
ja
cli
dec
lret
mov
sbb
inc
dec
js
xor
mov
add
add
mov
sub
cltd
fs
imul
jle
mov
mov
test
jge
pop
pop
sbb
sub
add
add
sarb
add
mov
and
test
daa
push
xchg
add
jmp
cmp
inc
add
mov
mov
sbb
data16
add
push
jnp
xchg
xchg
pop
pop
pushf
add
add
sbb
cltd
pop
inc
add
jb
clc
addr16
jns
jnp
aam
movb
adc
aas
sbb
jg
mov
cmc
dec
cli
imul
out
cmpsb
js
add
mov
test
lret
mov
dec
call
add
sbb
jmp
push
mov
pop
push
cwtl
int
jbe
in
insl
cmp
xchg
push
rep
lods
jae
add
add
in
or
add
arpl
fcomps
mov
js
inc
add
add
dec
jnp
mov
movsb
repz
ret
mov
sarb
inc
add
fbld
ret
outsl
scas
aad
popf
das
sbb
into
jmp
jns
add
bound
es
stos
push
mov
in
jae
mov
or
jmp
out
jo
es
or
pop
pop
add
cmpsb
int
in
sbb
jb
movb
fwait
mov
loopne
xchg
push
jbe
fxch
aas
sub
add
repnz
loopne
cld
addb
inc
add
jo
xlat
xchg
lahf
pop
inc
push
cld
das
stos
mov
jmp
xor
sbb
push
mov
add
cmp
cmpsl
mov
or
pop
in
jnp
into
mov
pop
idivl
jmp
add
or
pop
movb
sbb
imul
add
push
mov
addb
push
je
jb
mov
add
add
xchg
mov
mov
xor
pop
mov
scas
enter
stos
or
ret
inc
imul
cmpsl
cltd
xchg
mov
jg
outsl
push
mov
stos
leave
lds
mov
stos
int3
aam
push
add
pop
jl
cmp
push
icebp
mov
imul
lock
mov
mov
aam
pop
enter
push
add
jg
cmp
mov
hlt
lcall
fldcw
in
add
xor
mov
fucomip
jae
mov
cmp
and
int
lret
push
add
inc
add
mov
sub
in
cld
jb
mov
xchg
jg
jl
sub
pop
pmaxsw
sub
lock
xor
pop
sub
mov
roll
dec
xchg
jbe
mov
fidivrl
lock
add
arpl
test
xchg
into
out
stos
into
sahf
mov
mov
push
cmp
lods
das
push
rcrb
int
ret
stos
mov
sub
testl
lds
xchg
aad
aaa
dec
sbb
mov
fistps
pusha
add
push
or
lds
pop
sub
out
cmp
add
addb
testb
test
jnp
and
xor
push
movsb
sub
mov
movups
cmpsb
mov
xor
leave
adc
cmc
addr16
or
jmp
or
sahf
mov
loopne
push
xchg
mov
icebp
xor
lods
xor
adc
sbb
xor
out
movb
xor
nop
clc
cs
push
or
aam
mov
mov
out
add
sub
mov
mov
aas
xor
das
cmp
adc
xchg
pop
in
call
jne
mov
jb
scas
je
add
mov
int
and
adc
iret
insb
push
add
movb
push
leave
push
jb
xchg
and
and
push
xchg
pop
cli
addb
dec
cmpsb
mov
xor
sbb
jo
push
rcll
sbbl
adc
mov
scas
int3
sbb
cmp
xchg
pop
into
loope
add
add
add
test
mov
inc
add
aam
and
add
jg
push
loop
in
xchg
clc
sbb
int
cmpsb
add
popf
push
jns
add
mov
pop
pop
fldenv
xchg
shrl
int
stos
les
fwait
or
add
or
sbb
and
mov
add
pop
push
jb,pt
xchg
jae
test
cwtl
pusha
add
dec
in
cmpsl
mov
lahf
int
add
pop
mov
jmp
push
or
sbb
push
mov
movb
loop
jns
stc
xchg
adc
sbb
arpl
cwtl
aad
and
pop
into
scas
inc
add
jb
push
jmp
sub
xchg
ficoms
cmpl
aam
mov
sub
mov
xor
mov
add
fildll
or
js
aad
into
mov
push
dec
add
dec
ds
and
mov
mov
es
inc
add
test
mov
add
xchg
lea
scas
les
cmp
movb
mov
mov
xlat
std
jl
and
test
dec
cmp
inc
add
fchs
lods
dec
imul
xor
ret
ljmp
sub
imul
adc
add
pop
arpl
addb
into
stc
out
push
mov
pop
imul
sub
add
add
jl
add
add
leave
inc
add
xchg
add
pop
fs
pop
mov
sub
add
sti
dec
adc
and
std
xor
rolb
lcall
and
ficompl
das
idivb
mov
push
subl
mov
mov
in
push
add
shrl
pop
and
pop
cltd
and
lcall
add
add
xchg
sbb
rcrb
out
mov
add
cmp
mov
xchg
mov
adc
ss
mov
das
push
cmp
sbb
sti
aam
mov
xlat
repnz
add
add
ror
ss
movsl
in
jne
pusha
add
in
xor
dec
cmp
jmp
add
push
and
pop
push
mov
inc
mov
jge
and
cmc
adc
push
iret
sti
addb
add
popf
or
ja
out
sbb
in
mov
add
lahf
int3
pop
int
dec
in
test
je
mov
cltd
jmp
cmc
lock
fnstsw
fnstcw
inc
fsubrl
dec
mov
add
sub
pop
sahf
and
cmp
sub
mov
mov
out
add
lahf
xchg
cli
pmulhw
inc
fsubr
xchg
loope
lods
fdiv
test
xor
mov
mov
pop
repnz
mov
push
lods
add
call
les
cmp
idivb
test
and
jge
mov
nop
call
aam
and
dec
ja
mov
xor
rolb
push
cmp
insb
pop
mov
fisubs
rolb
movsb
pop
mov
inc
or
pushf
je
add
adc
adc
sahf
pop
loopne
jmp
mov
dec
push
gs
or
add
imul
loope
fwait
sarl
popf
inc
rolb
scas
adc
ja
ret
or
xor
cmp
jbe
movb
cmpl
cmp
test
dec
inc
add
inc
cmp
adc
sub
call
sub
lret
gs
dec
cmpsb
adc
push
push
add
or
and
addb
push
ja
lods
scas
lret
and
sbb
jmp
xchg
lcall
out
mov
add
je
dec
push
jg
addr16
dec
mov
enter
adc
push
adc
popf
push
out
inc
fldl
scas
xchg
and
mov
inc
add
pop
sahf
xor
sbb
movsb
xor
out
out
lods
adc
add
sahf
cld
addb
cs
pop
aas
ja
aas
xor
insb
popf
dec
mov
aaa
pop
jle
je
add
sbb
rorl
addb
int
hlt
incl
cmpsb
pushf
add
ja
adc
bnd
add
imul
add
data16
pop
jo
loope
dec
scas
in
fwait
stc
mov
cmp
rcrl
mov
inc
add
xchg
mov
shrb
insb
inc
add
loop
pop
mov
or
decl
sbb
iret
call
mov
pop
xlat
in
fdivrs
inc
add
mov
xor
in
mov
sbb
add
add
scas
scas
inc
add
jle
insb
mov
pop
inc
add
inc
add
push
out
in
fistpll
sub
icebp
mov
aaa
gs
mov
js
add
call
jb
inc
add
dec
loopne
xchg
cmp
xchg
pop
fisubs
xor
jns
adc
hlt
outsb
popa
add
gs
loope
aad
insl
jbe
jo
addl
cmpl
add
xor
lahf
sbb
or
nop
add
insl
je
dec
add
xor
adc
jmp
idivl
pop
fcmovb
sbb
xor
lds
add
mov
das
adc
sub
lods
ret
cli
mov
add
add
push
mov
aas
sti
addb
add
sub
insb
mov
xor
sub
jbe
addb
adc
and
addb
add
addb
aas
std
repz
add
sbb
imul
push
inc
popf
arpl
add
aas
xchg
dec
insl
mov
add
in
fmull
cmp
jae
je
sub
shlb
cmc
push
fdivs
andl
add
sbb
or
dec
addb
insb
mov
add
push
add
pop
mov
mov
xor
adcl
test
dec
pop
jbe
cmp
outsl
repnz
aam
sub
out
sbb
enter
fsub
jne
arpl
jp
push
cs
nop
mov
jno
mov
jnp
cmpsb
jle
sbb
adc
xor
push
data16
mov
movsl
loope,pn
add
mov
xchg
lahf
inc
cmp
pop
adc
popa
mov
sti
aam
cmp
dec
inc
add
lahf
mov
negl
pop
dec
or
adc
push
jle
sbb
fisubrs
push
sub
and
lods
call
pop
sti
mov
push
in
hlt
call
call
add
pop
or
jecxz
adc
lods
divl
add
add
push
mov
cmp
fidivrl
pop
jns
addb
mov
add
inc
idivl
cmp
add
loop
mov
shl
jmp
inc
adc
add
pop
add
pusha
add
jbe
int3
scas
mov
push
add
add
xchg
sub
cmpsb
mov
sti
addr16
add
out
insl
xlat
lahf
jbe
pushf
sarl
iret
push
lahf
dec
xor
rolb
dec
clc
xchg
fistl
add
or
adc
std
into
aad
fwait
add
fmul
in
sahf
icebp
sbbl
inc
add
call
jl
jp
dec
mov
cs
push
jl
call
cmp
sahf
imul
sbb
mov
sub
and
lahf
sub
daa
xor
lret
les
test
pop
push
xchg
jne
stos
push
or
dec
aam
pop
shrb
or
arpl
enter
in
nop
rcrl
addb
gs
adcl
sbb
add
mov
shll
mov
ss
adc
push
dec
cmpsl
nop
rolb
add
mov
stos
sub
icebp
addb
mov
mov
push
or
mov
jecxz
mov
cltd
adc
xchg
adc
cwtl
mov
repz
mov
adc
pop
scas
dec
aas
movb
sbb
cmc
adc
out
sbb
cmp
or
cs
xor
xor
xor
mov
ljmp
les
out
loopne
nop
filds
sbb
lea
lock
mov
jecxz
xchg
fxch
mov
add
shrl
pop
mov
mov
mov
test
ss
sub
and
pop
xchg
mov
or
addb
bound
xlat
xchg
adc
jnp
imul
in
scas
test
cmp
mov
ret
fcmovnb
imul
addr16
jns
cmp
cmp
outsb
sub
jge
jb
lock
lods
add
or
xor
xchg
icebp
jne
imul
ret
mov
mov
mov
aam
mov
dec
mov
add
scas
mov
adc
rolb
adc
sarl
insb
sub
shl
xchg
bound
mov
dec
xlat
sbb
mov
cli
add
xchg
addr16
arpl
int
cltd
mov
mov
into
inc
ffree
sbb
cli
les
xor
adc
add
and
sahf
add
inc
jp
call
xchg
fisttpll
cmp
inc
add
inc
xor
jmp
add
dec
daa
lods
push
push
and
fdivrl
and
adc
addr16
xor
pop
shlb
adc
outsb
lock
jl
dec
ljmp
arpl
mov
pop
adc
enter
cmc
jl
mov
add
ljmp
mov
xor
push
inc
movsb
aaa
push
jbe
jg
dec
out
adc
arpl
cwtl
sub
imul
mov
mov
add
int
lods
sub
mov
mulb
gs
insb
leave
jge
add
xor
jne
and
xchg
jmp
add
sahf
push
es
or
mov
insl
mov
add
mov
arpl
call
push
pop
pop
jns
and
or
mov
aaa
dec
in
aam
test
mov
add
mov
sbb
adc
add
jno
dec
je
imul
movb
push
fisttpll
int3
dec
icebp
lret
orl
addr16
pop
sbbl
xor
ja
adc
out
popa
ss
xchg
sub
or
dec
pop
sbb
add
push
addr16
in
adc
mov
sbb
add
lss
adc
in
xor
fwait
popa
addb
cmp
sub
pop
outsl
movsb
sbb
mov
in
cmp
aas
out
add
or
mov
inc
movsb
gs
xchg
pop
mov
movsb
xchg
fstps
add
movsl
fcoml
pop
xchg
mov
jg
and
sub
jno
mov
out
jb
fldenv
sbb
pusha
add
push
aas
nop
push
mov
out
outsl
mov
das
xchg
inc
jnp
stos
in
addr16
add
pushf
pop
bound
lret
addr16
xor
outsl
test
aaa
xor
jle
push
add
fsubl
stos
jg
lock
mov
xchg
jbe
add
lods
ret
test
mov
in
aam
cmp
out
dec
add
jo
sub
mov
or
xchg
adc
clc
adc
push
fsubl
dec
and
sub
ret
lcall
rorl
or
push
jbe
add
test
dec
ss
cs
les
or
cmp
ja
xchg
mov
sbb
stc
inc
add
out
outsl
sti
insb
jp
repnz
fidivl
out
lea
xor
out
shrl
push
pop
pop
xchg
and
jge
jge
add
xchg
add
addb
add
cmp
push
inc
add
lcall
sub
add
mov
inc
add
es
xchg
pusha
add
xchg
pop
dec
cmp
cmp
inc
add
or
add
and
iret
mov
add
or
dec
stos
mov
arpl
pop
int3
sbb
bnd
loopne
and
add
add
jmp
add
mov
out
pop
stos
push
push
imull
adc
es
sar
sbb
shrl
and
xor
lods
jno
test
dec
add
pop
inc
add
or
mov
pop
rolb
imul
scas
push
jbe
mov
lods
mov
jne
sarl
adc
imull
loopne
bound
mov
sbb
cmp
fimull
xchg
gs
arpl
clc
stos
scas
iret
icebp
lods
fisubs
jbe
fcmovu
sbb
inc
mov
jbe
roll
roll
imul
addb
stc
mov
xchg
je
hlt
out
repz
movb
shrb
pop
cmp
lds
pop
add
lcall
mov
in
and
or
movsl
ss
xchg
jae
and
ss
fsts
arpl
mov
fnstcw
xchg
mov
sub
fs
pusha
add
rcrl
test
icebp
rolb
jo
popf
pop
out
adc
jns
or
sbb
mov
lahf
jecxz
xor
lret
xchg
in
adc
les
xchg
cmp
dec
sbb
pop
jne
bound
cmp
add
lret
mov
notb
jp
push
cmc
mov
xchg
cmpsl
push
add
in
xchg
xor
cmp
call
movsb
xchg
or
or
scas
and
insb
fsubrl
incl
shrl
xchg
and
popa
lret
mov
loope
mov
adc
sub
rolb
repnz
pusha
add
mov
xor
and
mov
addb
mov
sub
iret
push
out
pop
pop
repz
cltd
fwait
push
fsubp
cli
sbb
ljmp
repnz
mov
push
add
lret
movsb
data16
dec
aam
xchg
jo
fucom
adc
lret
add
or
add
in
ja
scas
xlat
cmp
sbb
and
lods
pusha
add
aaa
mov
lea
sarl
inc
fstpt
jnp
dec
xchg
pushf
push
cmpsl
lahf
adc
or
stos
fldt
add
bound
incl
or
pop
and
sbbl
inc
jo
sbb
loopne
or
mov
add
lret
pop
faddl
sub
nop
sub
subps
cld
inc
sbb
push
pushf
popa
insb
std
mov
jmp
fidivs
lea
sub
das
mov
dec
jmp
add
fdivs
jl
sbbl
lods
pusha
add
pxor
and
sbb
adc
outsl
lock
mov
dec
in
add
es
popa
pop
cs
push
push
add
dec
jp
push
dec
push
jp
fucom
dec
lods
push
and
leave
shll
inc
add
mov
mov
add
sub
movl
add
push
xor
imul
inc
rep
cmpsb
rolb
or
mov
mov
push
ret
jle
xchg
mov
mov
hlt
inc
jg
aad
add
call
ret
sbb
mov
push
mov
push
fnstcw
out
movsb
sahf
xor
sub
add
mov
push
mov
cmc
bound
dec
inc
add
xchg
jp
sarl
mov
cmp
in
add
mov
cmpsl
fwait
pop
pop
and
insb
mov
push
data16
mov
add
and
jmp
adc
sbbl
xchg
icebp
sbb
ret
mov
sbb
outsl
popf
addr16
into
js
and
cmc
adc
int
or
mov
add
mov
cmp
lods
pop
xchg
mov
mov
sbb
sub
mov
addr16
add
and
out
addb
hlt
addl
bndstx
bound
movsl
adc
fistps
pusha
add
insb
flds
dec
xchg
xor
push
flds
data16
movb
pop
mov
xor
ret
xor
inc
jg
jno
es
fnstsw
call
xchg
xchg
jns
cmp
fstl
hlt
mov
or
imul
push
push
jbe
xor
xchg
stos
clc
inc
add
cld
mov
jg
add
lahf
push
aam
sub
add
pushf
mov
mov
adc
add
xchg
add
mov
or
stos
mov
dec
pop
je
or
aam
adc
and
cmp
test
xchg
das
pop
xchg
sub
pop
into
xorl
pusha
add
mov
sub
and
ljmp
ret
mov
repnz
and
add
cmp
pushf
adc
cmp
and
add
cmp
jge
out
aam
add
push
add
loope
push
int
mov
inc
add
int
ljmp
add
clc
xor
add
add
jmp
inc
add
in
aas
outsl
xchg
xchg
daa
cli
or
xor
or
jge
adc
mov
pop
or
xor
fimuls
addr16
add
outsl
xchg
fldl
in
add
ret
push
lcall
stos
and
hlt
xor
ljmp
xor
cmp
mov
es
cmp
push
and
add
jbe
xchg
int
cmp
xor
and
dec
lock
ss
fildl
sbb
cmp
lods
cmp
pop
jnp
notl
bound
or
das
aad
mov
jo
in
popf
lcall
pop
xlat
cmp
push
dec
push
mov
mov
inc
cmpsb
shrb
into
push
mov
add
scas
push
add
insb
inc
fcmovnbe
testl
add
in
ret
out
mov
lcall
clc
mov
or
mov
mov
lahf
shlb
pop
mov
mov
dec
inc
add
rolb
xchg
bt
adc
scas
jge
xchg
scas
rcrl
jge
mov
sbb
fldt
add
fisubrs
add
cmp
shlb
sbb
xchg
pop
xor
mov
mov
add
sbb
dec
mov
add
aad
lcall
push
insb
sbb
repnz
sub
shr
mov
popa
out
sub
inc
in
nop
imul
sub
daa
jl
loopne
add
movsb
aaa
lret
dec
ljmp
or
mov
pop
and
add
xchg
popf
push
add
xor
push
jno
adc
ret
sahf
push
cmovb
test
lock
jb
push
jl
stos
or
repz
jno
arpl
dec
pusha
add
add
inc
sbb
mov
pop
mov
test
cwtl
push
addr16
add
and
mov
dec
dec
out
push
popf
repz
adc
pop
insb
xor
lods
mov
mov
adc
sub
and
jno
add
es
xchg
enter
mov
add
pop
dec
sbb
popa
mov
ror
icebp
ror
cmp
outsl
dec
push
mov
ljmp
or
divl
add
add
rolb
popf
test
push
stos
call
dec
jp
test
and
push
jne
repz
dec
fisubs
xchg
mov
xchg
aam
add
bound
mov
repnz
cmp
inc
push
cmp
mov
fsub
mov
cmp
popa
jae
cmp
dec
jp
das
lea
popa
add
jmp
add
inc
les
test
add
icebp
icebp
popa
inc
ficompl
les
push
cltd
cmpsb
add
js
fldl
hlt
mov
fstl
ret
ss
push
xor
stc
mov
add
sub
cmpsb
aad
add
cmp
test
sub
xlat
in
js
fists
jmp
mov
mov
lock
dec
lea
adc
mov
inc
scas
mov
sbb
in
inc
add
loopne
mov
cmpsb
mov
inc
add
sub
xor
int3
sbb
enter
mov
pop
mov
and
xchg
mov
and
jnp
sarb
lahf
jecxz
pusha
add
popa
xchg
dec
xchg
add
push
cvtpi2ps
mov
xchg
cmp
add
sub
cmp
sar
dec
ds
lret
insl
push
add
and
xchg
imul
mov
add
fnstsw
add
add
cmp
int
out
sub
in
sahf
test
sti
daa
sbb
shll
imul
ss
dec
adc
andl
push
adc
inc
add
lahf
jl
add
and
fs
pop
mov
add
cmp
es
sbb
inc
adc
dec
cmpsl
mov
add
mov
into
pop
mov
pop
jb
xor
push
mov
add
mov
or
ret
enter
adc
cmp
or
push
pop
pop
xchg
push
imul
mov
in
fisttpl
sbb
xchg
faddp
pop
dec
ret
add
mov
ror
push
push
clc
scas
dec
shl
push
jne
sub
fnstsw
mov
shrl
inc
add
push
cltd
pop
ljmp
fsubrl
add
adc
jg
test
mov
add
adc
stos
mov
add
push
pop
adc
std
sub
ds
aas
jge
pop
mov
rolb
inc
cli
mov
out
lret
push
aad
xor
lea
add
lcall
or
pop
push
jb
mov
add
push
movb
outsl
push
jae
mov
rcrl
push
cmp
test
es
add
enter
cmpsb
mov
xor
pop
loopne
add
add
mov
xchg
add
cmp
pop
sbb
mov
lock
or
aaa
jle
xor
jbe
add
into
pop
test
test
or
pop
mov
jg
inc
add
icebp
into
xchg
ljmp
mov
add
notl
dec
stc
fptan
dec
ja
xchg
sub
xchg
dec
xchg
add
add
xchg
xor
psubusb
test
sbb
outsb
test
nop
sbb
push
lret
fstl
sub
jge
icebp
or
cmp
fistpll
sub
jbe
movsl
adc
xor
test
add
or
lods
lret
push
mov
popf
negb
mov
ja
add
outsl
imul
shrb
repnz
add
pop
or
jle
push
inc
add
test
pop
call
dec
bound
dec
mov
ss
popa
mov
fstpt
cmc
sarb
push
mov
scas
popa
cmp
add
push
mov
xor
mov
movsl
mov
adc
pop
inc
add
mov
push
or
fisubrl
cmp
fsubrs
xor
add
xor
dec
mov
or
outsb
sti
std
mov
or
mov
cmp
idivl
dec
xor
cmp
enter
xor
lods
sahf
pop
movsl
mov
mov
cmp
mov
cmp
add
dec
cld
stc
sbb
mov
lock
xchg
lods
out
add
lret
inc
test
push
and
outsb
neg
stc
and
mov
sbb
ror
xor
iret
icebp
mov
push
add
or
push
das
push
adc
add
icebp
mov
imul
je
push
lcall
insb
xlat
push
inc
jne
mov
call
xchg
ja
xor
rolb
das
shr
and
int
xchg
push
cltd
add
repz
mov
mov
sbb
je
add
adc
cld
imull
out
push
gs
mov
lods
dec
loope
mov
inc
int
add
pop
lea
add
lods
nop
adc
dec
jno
stc
jge
ret
inc
jecxz
rolb
add
sbb
fwait
call
rorl
add
cwtl
mov
icebp
enter
gs
stos
out
mov
add
mov
ja
jmp
adc
icebp
fsubrl
fs
sbb
les
jle
dec
dec
mov
xor
clc
or
les
dec
mov
stos
ret
mov
or
mov
push
dec
mov
lods
popa
pop
adc
add
loopne
jmp
add
aaa
xor
xchg
add
lock
sub
or
lret
jle
lods
repz
je
push
test
ljmp
sub
rorl
pop
inc
es
jle
nop
into
pop
hlt
fwait
mov
cltd
and
popf
push
sbb
js
add
addb
fwait
gs
fs
add
rcr
adc
xor
fstl
sub
mov
pop
in
lock
push
xchg
mov
dec
sub
jl
mov
and
pop
xchg
jge
jae
add
ret
lods
leave
inc
add
fidivs
cmp
pusha
add
sub
inc
add
pop
cmp
leave
cmp
out
sub
icebp
shl
out
mov
orl
adc
les
ja
push
and
add
cmp
test
add
loopne
jns
sbb
fcomps
aas
push
dec
adc
xlat
push
sti
adc
dec
sbb
call
pop
xlat
lret
xor
lahf
daa
and
or
add
adc
xorl
fwait
cwtl
jno
in
add
xor
add
push
add
out
mov
add
xchg
pop
push
xlat
cmp
lcall
aaa
sbb
pop
inc
add
inc
in
xchg
mov
mov
fnsave
lea
sub
xchg
add
pop
cltd
insl
sub
pop
mov
or
in
push
add
ret
add
pop
sahf
jae
data16
jle
add
sub
sub
cmpl
cld
ds
addb
mov
add
add
xchg
jle
jne
cmp
jge
and
mov
out
addr16
enter
movb
adc
test
jl
xchg
sbb
dec
or
gs
adc
addb
adc
das
dec
scas
add
mov
jl
or
jno
mov
stos
inc
je
dec
mov
fwait
or
jb
adc
add
mov
or
jle
xchg
push
mov
xchg
cmp
inc
sbb
pusha
add
mov
pushf
xchg
mov
setno
lea
or
cli
xor
ja
addb
xchg
xor
setno
adc
xor
or
add
int3
out
mov
push
jle
sahf
xchg
sti
mov
in
fistl
movsb
mov
insl
push
pop
in
das
xchg
bound
jnp
jne
jmp
les
sub
std
popa
adc
aam
jnp
mov
push
lret
pop
sub
insb
out
mov
inc
scas
bnd
or
mov
add
fistpll
dec
jae
push
cmpsl
lea
decl
add
add
repz
push
add
mov
mov
in
insb
rolb
cli
push
pop
fsubl
scas
add
dec
pop
dec
movsl
ds
out
add
adc
addb
in
aad
push
jge
push
fsubrs
dec
imul
jle
jnp
notb
dec
jne
jnp
out
inc
ret
xchg
push
or
hlt
push
xchg
xchg
daa
ja
aaa
rcl
aam
int
mulb
add
push
std
testb
push
fnstcw
push
or
rorb
dec
orl
dec
sbb
add
mov
mov
jecxz
loope
xor
push
in
fcmovne
xor
fcomps
mov
out
repz
push
push
outsb
mov
filds
mov
mov
or
mov
cld
dec
dec
jbe
addr16
add
dec
es
sbb
jecxz
dec
xor
adc
jecxz
dec
xchg
jno
dec
mov
mov
outsl
adc
sbb
xorl
push
add
add
in
and
cmp
bound
movsb
imul
adc
or
inc
dec
lret
xor
sbb
mov
and
pop
xlat
lods
add
in
xchg
aad
dec
scas
mov
repnz
lods
and
movb
int3
push
or
add
mov
pop
imul
test
aad
add
dec
sub
jae
xchg
push
and
rclb
xchg
pushf
mov
addr16
cltd
imul
clc
out
inc
or
mov
mov
mov
push
sbb
movb
or
test
jb
push
sbb
popf
ret
pop
sub
out
push
ficomps
movb
inc
and
adc
mov
jge
mov
push
pushf
into
inc
add
jmp
aaa
add
stc
roll
xor
jns
cli
xor
mov
add
mov
aad
xor
gs
dec
imul
mov
mov
jnp
iret
ficoms
ret
test
add
jmp
ja
push
add
in
sarb
out
xor
icebp
xchg
mov
push
add
push
stos
lret
lahf
adc
push
test
scas
push
popa
or
add
or
mov
imul
sbb
loopne
add
cltd
or
fsubrl
dec
enter
pop
jmp
pop
movzwl
xchg
test
xor
cs
add
dec
ret
rolb
ja
repz
insl
jl,pn
in
push
push
pop
mov
jmp
movsl
xor
inc
add
dec
sbb
pop
sbb
adc
int
nopl
add
push
jl
sub
fbstp
mov
push
pop
mov
das
mov
sbb
and
cmpsl
mov
mov
dec
pop
xor
xor
shlb
addr16
lds
push
mov
clc
addr16
stc
into
xchg
mov
and
test
dec
sbb
lret
dec
stc
push
dec
into
cmp
mov
xchg
push
ret
add
loopne
pushf
pushf
jmp
in
ss
xchg
or
mov
gs
sub
mov
push
dec
sbb
insb
mov
hlt
sar
jne
lret
les
out
adc
daa
mov
lret
jns
nop
add
sbb
and
push
add
adc
or
pop
inc
inc
dec
mov
stc
jmp
jo
fiadds
lds
jp
dec
imul
leave
xchg
cltd
sti
imul
hlt
jp
xor
push
mov
shll
popa
out
inc
xchg
sahf
inc
add
movsb
push
test
sub
in
insl
xchg
idivb
ljmp
fisttps
bound
push
push
mov
push
pushf
push
out
cmc
pop
mov
insl
stos
dec
jge
insl
mov
lahf
jnp
stos
cmp
ret
fbld
clc
mov
orl
dec
pushl
jne
fnstenv
lret
jmp
pop
push
dec
inc
jae
sub
add
je
loopne
hlt
call
cltd
jl
out
sub
push
aad
add
cmp
add
push
and
add
ret
aam
adc
ljmp
dec
push
push
xchg
je
xchg
cmp
pop
repz
test
add
jp
push
in
cmp
mov
out
and
adcl
addr16
daa
adc
add
add
inc
sbbl
call
rcll
not
jmp
fldt
add
add
dec
add
xchg
lods
push
add
fucomp
ret
cmp
lods
sbb
inc
add
pop
pusha
add
js
aad
stc
jge
jo
jae
add
nop
or
icebp
mov
jg
inc
mov
imul
mov
arpl
sub
push
fstpl
dec
and
xor
add
jp
push
cmp
scas
or
ds
mov
add
adc
out
mov
adc
add
add
bound
add
mov
push
mov
rolb
dec
add
pop
and
add
aam
pop
mov
pushf
xchg
push
loopne
cmp
jbe
mov
push
popf
arpl
leave
lds
es
push
mov
push
jbe
and
dec
jnp
inc
xor
fwait
loopne
pop
push
add
xchg
pop
adc
xor
pop
clc
lods
fidivl
int
sub
and
cld
jb
pop
repz
push
vpmadcswd
sub
and
xchg
jl
add
fsubrl
jnp
in
pop
cmpsl
lods
pop
mov
cmp
jle
pop
pop
add
mov
lcall
sahf
idiv
shll
cmpsb
sbb
lds
scas
xchg
pop
mov
adc
bound
or
addb
addb
addb
repz
push
das
dec
leave
cmp
inc
push
add
test
fidivl
mov
cld
sbb
add
addb
add
jbe
mov
ds
fs
test
pop
call
mov
push
inc
add
push
jo
mov
popf
or
test
cmp
dec
cs
test
rcrl
and
pop
sbb
add
sarb
add
sbb
stc
push
push
fdivrl
in
inc
add
cmp
mov
lds
pushf
xchg
mov
sbb
cmp
les
push
add
mov
pop
clc
add
xchg
or
sbb
mov
inc
pop
inc
add
push
mov
add
lret
pop
lock
fcmovbe
xchg
push
sarb
lods
imul
cmp
ret
add
sbb
cli
repz
add
lods
mov
popa
push
mov
data16
lea
sbb
add
xor
sti
lahf
sti
test
adc
sbb
and
mov
jge
mov
jo
add
add
dec
jl
insl
in
dec
or
pop
mov
loope
jmp
test
fildll
sbb
cmp
xor
mov
sub
add
mov
add
sub
sbb
clc
out
and
mov
and
fwait
pop
sub
mov
push
in
adc
mov
mov
mov
jmp
ljmp
add
shll
rcrb
dec
bound
mov
mov
xor
add
or
cmp
mov
add
pop
lock
mov
mov
rclb
sub
push
add
push
div
sti
cmp
pop
fs
inc
and
mov
xchg
inc
add
addb
add
pop
or
mov
movb
add
add
out
push
lcall
sbb
add
rolb
push
pop
push
mov
stos
das
shlb
mov
mov
cmpsb
fucomip
dec
in
fsubs
in
or
sbb
hlt
adc
out
inc
out
std
fnsave
add
subl
add
cmpsb
nop
push
jno
mov
ficoml
mov
add
add
dec
jbe
sbb
aad
popf
addb
sub
das
inc
add
ljmp
ss
inc
add
fucom
jbe
test
adc
ljmp
push
iret
inc
add
and
and
out
mov
cld
sbb
ljmp
pop
lods
out
out
dec
loopne
call
jnp
push
cmc
dec
cmp
inc
outsl
outsb
xor
xor
jo
lret
clc
sub
sub
test
add
mov
push
pop
and
imul
mov
add
or
int
adc
mov
sub
outsl
xor
fsubp
aaa
mov
orl
dec
jbe
aas
testl
mov
add
ror
add
cltd
jb
jl
and
push
add
lea
lea
jbe
stos
cld
xor
movb
jl
pop
adc
ljmp
lcall
cmpsb
iret
push
loop
xchg
jno
inc
ret
addb
jg
lahf
sti
jno
lods
or
in
cli
jmp
mov
icebp
jns
add
push
pushf
clc
push
dec
out
clc
xchg
or
lods
outsb
dec
and
shrb
inc
lcall
popf
add
mov
addb
or
adc
mov
sub
idiv
jp
inc
add
adc
cmpsb
and
enter
or
jp
jno
fsubr
lds
dec
movl
sahf
das
lahf
xchg
or
pop
mov
add
out
inc
add
add
sub
sbb
adc
xlat
enter
xchg
pop
pushf
xor
add
cmpsl
adc
xor
add
call
cmp
test
pop
cmpsl
mov
jle
sbbl
xor
add
push
stc
arpl
add
mov
hlt
xor
popa
xor
lds
cmpsb
fistpll
xlat
sub
mov
ret
les
push
addb
addr16
push
aam
loope
lcall
xchg
sbb
dec
mov
lcall
cli
mov
push
icebp
cmp
push
inc
jnp
fsubs
movb
inc
add
cs
nop
jp
inc
int
sub
dec
test
jp
je
fsubs
sub
mov
in
or
in
aaa
in
in
mov
inc
pop
out
pop
nop
mov
jnp
add
call
ror
ja
dec
pop
cs
sbb
add
xchg
xor
sbbl
mov
push
sub
addb
pusha
add
push
pop
shlb
call
and
iret
jns
adc
mov
ret
xchg
jo
jle
cmp
pop
xchg
mov
xor
popf
xor
pushf
xor
lods
push
add
add
adc
test
xchg
fdivrl
jne
xchg
mov
stc
fldenv
pop
sti
push
or
loop
sub
xchg
ret
imul
pop
dec
scas
dec
push
test
xchg
in
mov
add
sbb
aaa
outsl
es
push
mov
add
cmpsl
or
sbbl
xchg
sub
sbb
or
es
dec
sub
sub
jmp
xchg
cmp
sub
sahf
jle
pusha
add
mov
pushf
roll
or
push
mov
cmp
sbb
mov
lods
ljmp
cmp
pop
push
adc
pop
jmp
fucomi
je
jg
mov
jle
cli
mov
xor
xchg
sub
cmp
pop
jne
or
loop
jnp
mov
sub
add
and
jbe
and
xchg
cmpsb
cmp
loop
xor
data16
xchg
jecxz
sub
add
inc
add
insl
mov
cltd
fnstsw
add
push
push
add
sbb
jg
add
push
pop
sub
cmpsl
sub
pop
cmp
fwait
test
xchg
jmp
jae
xchg
xor
xchg
xchg
fs
adc
addr16
xchg
adc
and
add
cltd
loopne
aad
mov
mov
popf
mov
mov
fwait
les
or
test
int3
cmp
es
popa
dec
mov
cltd
inc
ret
imul
std
xor
pop
and
mov
test
fwait
pop
addb
or
outsb
into
lock
call
push
add
lock
sbb
dec
cmp
out
adc
lock
and
xchg
mov
add
mov
and
mov
xchg
jle
and
xchg
sahf
and
adc
call
adc
add
in
cmp
movb
sbb
lods
addb
add
idivb
jo
adc
add
clc
cmpsb
lahf
aas
in
js
stos
inc
add
fldenv
test
ja
xor
xchg
xor
dec
outsl
jns
into
xor
inc
dec
clc
mov
stos
adc
cwtl
ficompl
dec
sahf
adc
mov
mov
and
cmp
rcll
test
loopne
icebp
sbb
aad
test
stc
sbb
push
push
add
cmp
inc
add
mov
imulb
mov
in
sahf
lcall
adc
mov
mov
add
insb
jae
add
cmp
loope
inc
add
imul
addb
inc
add
push
add
out
mov
sub
faddl
xlat
test
xlat
jg
cmp
sub
nop
xchg
dec
add
testl
mov
fstl
repz
mov
push
sbb
fnstsw
dec
mov
insl
aaa
or
loope
jb
jb
push
mov
push
push
mov
add
pushf
dec
out
test
jbe
mov
inc
add
add
int3
push
leave
or
adc
add
mov
std
scas
xchg
rolb
arpl
out
les
mov
xchg
add
adc
out
push
add
push
pop
xchg
cmp
iret
stos
jmp
gs
cmp
int
xchg
fstps
test
addb
jl
lea
cmp
xlat
mov
popf
loope
lds
cli
xor
jecxz,pn
jl
stos
pop
mov
inc
add
mov
pop
or
or
mov
fiaddl
addr16
dec
push
in
mov
cmc
jne
sbb
in
mov
idiv
icebp
pop
outsb
or
addb
cmp
or
dec
pop
adc
shlb
loopne
aam
popf
lcall
lcall
mov
lahf
push
or
add
or
int3
lds
mull
lahf
add
push
popa
icebp
popa
int
nop
push
dec
inc
inc
push
inc
mov
imul
or
pop
jne
or
cmp
adc
lods
movsl
mov
xor
and
dec
aad
mov
cmp
scas
out
daa
lret
cmp
fidivrl
xchg
lds
adc
negl
int3
insb
jno
push
inc
add
dec
cmpl
popa
sbb
sub
sub
mov
pushf
mov
add
mov
imul
lds
test
mov
add
and
add
push
add
lcall
ret
push
leave
lods
mov
jecxz
sti
aaa
fldt
aas
xor
outsl
jmp
popf
popa
mov
mov
mov
add
fldcw
add
mov
mov
xchg
cmc
and
xchg
lods
test
mov
mov
jp
xchg
mov
add
sub
add
inc
add
int
add
add
xchg
inc
icebp
pop
adc
test
fs
dec
and
imul
add
ljmp
or
icebp
std
mov
xchg
cmp
sti
aam
mov
imulb
int3
cli
mov
mov
mov
add
sbb
psrld
dec
in
insb
xlat
loopne
push
xchg
out
push
lods
insl
mov
adc
test
xchg
cld
clc
push
movsl
xor
fwait
push
lret
lea
add
and
add
mov
fwait
sbb
ljmp
inc
add
mov
rolb
cld
cmp
jae
xchg
mov
xor
jo
je
das
aad
xchg
es
movsb
inc
add
sub
ret
sub
pop
adc
add
add
cli
jle
mull
or
or
cld
sbb
add
stos
mov
cmp
test
lret
addb
xchg
decl
enter
add
mov
insl
dec
cmp
mov
mov
jg
pop
movsl
test
jnp
aad
and
ja
pop
mov
addb
add
movsb
int
add
lret
popa
mov
jl
loopne
ds
add
das
xor
add
dec
outsb
ljmp
cmc
mov
push
add
jne
fxch
int
add
cmpsb
mov
ret
dec
mov
cmp
int3
scas
push
dec
ljmp
inc
add
adc
rorb
or
lret
addb
jge
loop
inc
add
dec
push
enter
packuswb
and
push
cmp
shrb
sub
je
mov
cmc
xchg
jnp
cmpsb
outsl
daa
aam
es
mov
lock
lods
and
repz
jp
jecxz
sbb
inc
add
add
repnz
sahf
jo
xor
xor
std
push
insl
sub
inc
pop
ffreep
aad
add
add
add
in
mov
push
add
movsl
in
outsb
js
das
mov
pushf
in
mov
mov
inc
movsb
lds
das
dec
rcrl
xor
mov
shll
inc
and
push
add
cs
and
popa
je
popf
jmp
outsb
cmp
xchg
lret
sahf
fcomps
add
enter
jb
insl
push
add
pop
inc
add
xchg
xor
arpl
xchg
int
out
xchg
jne
inc
add
sti
cs
out
adc
call
sbb
push
push
pop
test
popf
lds
push
rolb
add
jg
add
inc
inc
add
sub
ja
mov
jl
mov
jnp
fmuls
or
scas
lahf
and
lds
add
xor
lret
jmp
lods
xor
bound
sub
mov
xchg
cmp
mov
push
push
mov
jb
add
mov
es
frstor
mov
jae
push
sbb
or
jl
popl
inc
cs
and
adc
push
mov
je
jl
test
xor
cmp
inc
add
pop
outsl
sbb
data16
xor
add
mov
add
int
addr16
lcall
fisttpl
les
dec
dec
inc
jmp
adc
add
ja
jbe
push
add
dec
ret
popf
sbb
add
cmp
add
leave
int
cwtl
push
mov
aad
mov
scas
jp
out
adc
popf
cmp
jl
xchg
movsb
sbbl
stos
wrmsr
jae
mov
push
scas
jecxz
out
push
pop
subl
aaa
hlt
dec
pop
adc
cmp
pop
jae
xor
mov
sub
cwtl
lea
cmp
enter
jns
cmp
sbb
cmp
mov
mov
je
ucomiss
fstpl
jne
cmpsl
data16
xchg
addb
dec
inc
add
out
push
xchg
gs
pop
inc
in
loopne
add
lods
push
mov
mov
and
scas
arpl
fiaddl
xchg
in
push
rcll
add
push
jns
clc
or
lea
mov
in
mov
mov
js
imul
mov
stc
jae,pt
add
popf
and
add
sub
ljmp
aad
adc
je
or
jle
add
rolb
cltd
mov
fidivs
xor
cmpsl
mov
add
sub
dec
rcr
jmp
pushf
sub
jle
or
jo
int
insb
xchg
add
std
pusha
add
mov
movsb
sub
mov
mov
sbb
loop
mov
sbb
xchg
mov
icebp
jge
cmp
pop
push
pop
cmp
movb
repnz
and
ss
ret
pop
inc
mov
push
add
cmpsb
cmpsb
lret
jmp
sahf
aas
lds
popa
jae
mov
and
mov
outsl
jle
cmc
inc
je
sub
or
sub
loopne
dec
push
xor
pop
inc
add
clc
pop
movsb
cmp
add
and
sbb
fs
pop
mov
adc
sahf
mov
and
mov
pop
ret
addb
movsl
andl
out
add
aas
mov
pop
sbb
jl
loopne
into
and
cmp
push
mov
push
sarb
dec
bound
sarl
mov
testb
and
aas
and
jl
int3
gs
add
jg
fldcw
adc
stc
dec
nop
push
jp
jbe
fs
addb
pop
jge
stos
push
lea
test
bound
jo
and
scas
out
rcrb
add
or
add
or
sbb
mov
test
xor
hlt
jnp
jae
add
bound
or
andl
out
add
testb
loop
inc
add
adc
mov
or
dec
add
inc
and
lods
mov
and
or
xor
jecxz
movsl
cmp
add
mov
add
add
cmp
jg
add
shlb
mov
inc
add
mov
adc
ja
push
mov
push
mov
mov
sahf
xchg
sbb
adc
mov
and
cmp
out
nop
insl
cmp
add
ljmp
roll
mov
adc
dec
ds
scas
add
hlt
rcrb
jge
pop
ret
pop
daa
sbb
sahf
fimull
jecxz
dec
mov
pushw
je
push
add
sub
sub
inc
add
jbe
mov
add
repz
popa
jecxz
jmp
and
xchg
xchg
out
sbb
call
fsubrl
cmp
mov
shll
stos
mov
cmp
ljmp
mov
cmpl
pop
sub
pop
or
ds
aaa
js
or
xchg
pop
mov
sbb
addb
loop
add
add
adc
sbb
add
sbb
mov
add
or
add
iret
xchg
int
cmp
rolb
mov
or
inc
pop
jbe
inc
add
or
dec
subl
pop
sub
pushl
lret
sbb
add
sub
sub
sbb
adc
test
call
adc
mov
daa
mov
rolb
addr16
repnz
std
and
adc
xchg
nop
mov
inc
add
xchg
xor
sub
jg
or
add
lret
xor
clc
sbb
dec
or
les
cwtl
xchg
lahf
pop
in
shl
cmp
add
hlt
imul
or
sbb
cmp
std
ss
movb
adc
mov
repz
add
je
add
int
add
arpl
jecxz
ret
mov
lock
add
or
jecxz
add
test
pop
aaa
push
push
add
dec
jno
mov
xlat
cs
in
adc
pop
xor
rorb
test
pop
inc
mov
add
das
fwait
ljmp
dec
pop
das
pop
dec
loope
pop
xor
out
pushf
imul
add
adc
hlt
loopne
int3
in
lea
rcr
push
in
shll
stos
mov
stc
or
and
sti
xor
std
jge
cld
decl
mov
jge
inc
add
in
push
lods
std
test
andl
rcrb
dec
negb
pop
pop
jp
mov
sub
in
add
mov
mov
xor
rclb
arpl
push
movsb
lock
or
push
insl
xchg
rorl
sbb
add
mov
flds
dec
push
sarl
mov
sub
sub
jns
sbb
jne
or
jl
inc
mov
adc
roll
mov
fsubp
scas
mov
test
and
pop
add
or
rolb
dec
mull
dec
in
xchg
jp
inc
add
int3
inc
add
jb
push
fmull
xchg
sbb
aaa
pop
and
jbe
mov
add
jnp
ljmp
cmpsb
imulb
sub
sub
outsb
aaa
imul
adc
mov
mov
pop
scas
lcall
mov
xchg
mov
add
jo
ja
xchg
push
loopne
aas
fstps
mov
and
add
mov
loope
addr16
aam
into
xorl
and
jge
clc
mov
nop
lahf
mov
rolb
add
das
pop
imul
inc
add
xor
fistpll
repnz
iret
push
cmp
loop
les
or
inc
add
nop
or
jns
mov
lret
aad
inc
pop
and
jno
mov
test
mov
data16
test
stos
es
adc
int3
mov
mov
add
sahf
xlat
ffree
push
xchg
xchg
and
rorl
add
aam
add
cmp
mov
mov
add
xor
cmp
xchg
rolb
mov
test
push
sub
ss
ss
add
lds
nop
add
das
lods
mov
mov
jle
add
outsb
mov
and
ficomps
mov
js
lds
das
or
lods
outsb
testb
push
jmp
fs
dec
xor
inc
add
push
shrl
stos
ja
pop
movsb
mov
mov
pop
add
lahf
jo
hlt
jmp
test
pop
loope
lahf
out
xor
adc
inc
mov
je
iret
iret
jns
nopl
pop
inc
stc
or
stos
or
loope
fwait
rcll
dec
cmp
scas
pop
push
cmpsb
dec
fs
pop
jo
push
cmp
adc
das
arpl
adc
push
cmovle
sbb
mov
into
dec
add
stos
aad
sahf
pop
and
out
test
pop
clc
xor
addb
xor
jl
lock
pop
mov
mov
jge
add
sbb
test
pop
dec
fcmovu
pushf
addl
sbb
stos
rcl
push
dec
outsl
inc
mov
flds
mov
movsb
mov
add
dec
pop
movsl
mov
pop
jle
push
imul
pop
xor
xor
add
or
xchg
xchg
adcl
lcall
popf
or
jbe
pop
xchg
mov
dec
scas
icebp
pop
cs
lret
fcmove
test
adc
add
test
or
xor
lock
test
mov
rolb
push
mov
and
insl
nopl
addr16
imul
pusha
add
push
test
movsl
mov
cmp
pop
int
call
dec
and
add
ds
subl
add
in
fwait
das
and
inc
addr16
add
fsubs
in
sbb
or
add
icebp
pop
shl
jge
out
sbb
sbb
cmp
imul
cmp
out
cmp
mov
inc
add
jnp
add
push
out
roll
cs
clc
int
xor
sbb
and
mov
aad
add
movsl
dec
sub
sub
fs
push
out
push
inc
repz
add
in
movsb
test
cmp
add
or
add
or
and
pop
push
jne
sbb
aas
scas
mov
aas
or
dec
out
fcoms
repnz
cmp
add
and
adc
add
scas
cs
pop
mov
mov
nop
add
je
lcall
lret
mov
addb
lret
out
mov
movsb
xchg
in
scas
lret
mov
jne
sbb
add
pop
ds
xchg
and
inc
add
cmp
push
mov
popa
movsl
loop
and
cmp
arpl
out
aas
movsl
shrl
shll
and
rcll
adc
add
sbb
mov
cmp
xor
jle
in
add
jmp
cmp
je
rcrb
xor
loop
xlat
inc
in
lahf
mov
loope
in
adc
push
or
mov
cmovns
jp
loope
mov
addr16
push
adc
and
add
push
pop
shll
jmp
jbe
call
cli
cltd
outsl
daa
pop
xor
in
std
int
xchg
mov
push
push
movl
sti
adc
mov
out
mov
mov
inc
add
add
cmp
mulb
ja
mov
inc
xor
xchg
aam
cmp
clc
insb
inc
add
jae
add
je
popa
addb
cwtl
mov
jmp
cmp
mov
inc
add
jle
test
push
mov
sbb
enter
lods
stos
enter
xor
in
dec
cmp
negl
or
cmp
push
in
cmp
mov
js
cmc
ss
mov
and
mull
add
mov
adc
notl
add
and
div
mov
fidivrl
lods
js
pop
int
out
xchg
fisubs
add
aaa
loopne,pt
xchg
jle
loopne
jecxz
sbb
jnp
push
imul
add
add
lock
dec
dec
cld
aaa
aas
fmul
pop
mov
mov
xchg
js
loopne
push
loope
rcr
lods
popa
popa
test
jne
jg
xor
dec
iret
in
adc
fwait
sub
ss
cmpsl
imul
push
test
mov
inc
add
sub
mull
fldcw
es
add
mov
mov
or
aam
int
cld
addb
mov
mov
cmp
aam
addb
lret
lahf
lods
stos
lock
aaa
js
lret
rcl
mov
lret
xor
test
pop
fs
sub
cli
scas
add
pop
inc
pop
push
psubsw
data16
mov
sti
jbe
addb
lret
pop
pop
jle
adc
push
clc
mov
ss
lods
or
sbb
jns
movsl
sbb
add
mov
or
sub
xor
mov
in
dec
lret
cmc
sub
sbb
int3
imul
jl
push
mov
push
dec
mov
addr16
xchg
rcll
test
sbb
test
out
popf
std
and
cli
xlat
loope
int3
pop
scas
jl
pop
mov
je
mov
add
dec
jno
push
cmp
mov
insl
push
ret
stos
popa
xor
out
jmp
xchg
dec
jae
pusha
add
outsl
out
cmp
cmp
adc
out
cmp
cmp
fiadds
lcall
inc
out
clc
pop
or
std
aaa
lahf
popf
adc
sti
pop
mov
cmp
mov
in
fst
es
pop
addb
fisttpl
dec
out
out
les
jae
push
add
add
fists
lds
inc
jno
in
fisttpl
icebp
and
mov
imul
call
jg
pop
push
leave
cmpsl
sti
addb
add
cld
jmp
add
adc
imul
fisttps
or
lcall
and
inc
add
and
xor
in
gs
pop
push
sbb
dec
mov
add
jmp
stc
or
mov
stc
xor
xchg
xlat
pop
arpl
aad
mov
cmp
adc
dec
les
repnz
add
mov
fnstenv
stos
sahf
insb
and
add
sub
mov
cwtl
dec
mov
loop
lahf
mov
andl
xlat
mov
sbb
xor
test
out
mov
sbb
add
xor
push
push
and
add
jmp
sbb
stos
cmp
and
dec
inc
movsb
gs
sbb
adc
andl
push
add
ret
js
jg
mov
add
cmc
add
xor
add
jne
mov
fdivr
pop
std
sub
dec
xchg
adc
pusha
add
cwtl
and
enter
insl
adc
push
push
shld
add
inc
dec
pop
aam
enter
ficomps
xor
sbbl
lahf
xchg
adc
dec
lret
push
pop
mov
jae
pop
jmp
inc
mov
pop
pop
jmp
es
push
inc
xchg
mov
push
ror
push
add
jbe
xchg
in
andl
pop
pop
xchg
dec
mov
je
movsb
mov
les
inc
add
jl
add
lcall
iret
mov
add
mov
add
aad
xchg
cmpsl
xchg
add
cld
lock
addb
lds
jge
cs
cmp
in
jae
mov
mov
xor
push
ret
sbb
addb
mov
call
nop
jl
mov
out
push
fldl
sbb
sub
stos
cmpsl
mov
or
fistl
outsl
mov
xchg
add
popa
mov
add
push
xor
mov
stos
mov
mov
push
push
jle
int3
mov
lods
es
arpl
aas
xor
scas
mov
add
jne
mov
mov
jmp
rolb
test
mov
xor
jecxz
dec
out
jno
lods
xor
push
cmp
lods
insb
fisubrl
add
lcall
and
shl
lcall
add
aas
cwtl
jo
sub
repnz
leave
or
xorl
sub
mov
aas
daa
jmp
dec
fadds
fistps
mov
sbb
cmpsl
cli
xchg
inc
add
dec
loopne
in
or
sub
bound
jmp
repnz
jp
stos
scas
add
mov
add
or
addb
inc
add
jns
mov
xor
mov
sbb
sbb
int3
push
push
into
int3
mov
cmp
mov
cli
xchg
popa
push
mov
and
insl
fmull
fwait
mov
popf
pushf
stos
int
fisubs
sahf
divb
enter
out
das
pop
push
out
pop
stos
cmp
pushf
notl
pop
adc
push
inc
adc
add
shll
mov
xchg
bound
fucomp
jl
inc
add
les
clc
mov
xchg
cs
mov
ds
cltd
lods
cmp
cmp
add
sbb
test
add
sub
imul
out
add
lods
jns
rolb
add
jb
gs
cwtl
repnz
push
les
les
daa
mov
cld
or
enter
add
push
mov
mov
cmp
or
lahf
bound
arpl
rcrb
movsb
lret
aad
add
push
or
lcall
stos
cmp
repz
dec
loopne
jge
add
add
add
sub
popa
push
push
popa
rorl
imul
negl
sub
pop
pop
addr16
stc
leave
mov
bound
dec
jmp
xor
aam
addb
adc
adc
cmc
fildll
mov
sbb
cmp
or
jae
mov
add
or
add
xchg
mov
jp
xor
add
sub
test
outsl
jge
xchg
lea
test
sub
or
movb
fisubrs
arpl
xchg
lods
imul
sbb
sub
je
cmp
iret
cmp
outsb
add
xchg
out
inc
add
and
ds
sbb
insb
mov
add
rolb
dec
add
mov
push
lret
movsl
repnz
add
jge
mov
pop
dec
lea
xchg
or
mov
aam
addb
int
add
add
inc
lret
mov
aas
ja
and
in
gs
out
shll
cmpsb
inc
pop
fs
pop
xchg
push
orl
pop
movq
dec
cli
cmc
lods
arpl
jne
mov
pop
xor
mov
pop
imul
and
add
sub
pop
leave
mov
out
xor
vorps
cmp
xchg
pop
gs
mov
sub
mov
jge
pushf
mov
ds
aas
xchg
add
add
jecxz
sub
test
or
mov
rcrl
and
test
mov
add
add
mov
mov
fcmovnu
jp
add
adc
xor
lds
dec
jecxz
lods
and
lods
push
push
or
pop
or
stos
xchg
xchg
pop
jae
jne
dec
sub
add
xchg
divb
into
nop
add
test
sti
and
dec
push
or
rorl
enter
add
repnz
mov
bound
insb
pop
ljmp
xchg
daa
cmp
aam
add
add
xchg
stos
push
jge
int3
mov
and
inc
inc
add
add
sbb
or
aad
xor
leave
in
xor
insb
test
js
push
mov
mulb
pop
movsb
lods
mov
add
data16
mov
dec
cmpsl
mov
push
in
mov
out
mov
or
jl
pop
sbb
call
mov
mov
xchg
inc
add
fs
sti
and
movsl
jbe
std
shrb
mov
cmc
mov
xchg
sahf
ljmp
mov
mov
jg
sbb
mov
xor
jne
inc
ret
or
pop
jge
scas
adc
cmp
aaa
imul
inc
add
test
pop
pusha
add
inc
add
sbb
jle
scas
cld
enter
pop
mov
je
sub
sbb
xchg
aam
fidivrs
jo
or
sub
push
js
or
push
sub
fdivrl
xchg
movb
dec
cmc
jne
leave
and
jl
pop
fildl
pop
and
data16
fdivl
test
pop
aad
mov
loopne
xor
dec
xchg
rcrl
xchg
sub
data16
pop
and
insl
jecxz
aam
call
push
rclb
stos
or
out
imul
cs
and
jle
xchg
mov
shl
lods
cmp
fdivr
lock
out
ljmp
clc
jbe
dec
mov
add
add
scas
sub
lret
pusha
add
orl
xor
cmpsb
addb
addb
jo
jo
sub
cmpsb
lahf
pop
mov
xlat
cmp
test
jg
lds
stc
popf
mov
sub
mov
mov
or
outsb
push
mov
sbb
mov
jle
addr16
and
adc
inc
lret
dec
inc
int
add
xchg
repz
pop
insl
push
in
imulb
mov
adc
repnz
push
jl
fcompl
jp
mov
dec
add
dec
add
dec
bound
repz
fidivs
lret
xchg
push
mov
sbb
push
icebp
lahf
mov
or
rorb
leave
in
repnz
dec
aaa
add
mov
add
repnz
pushf
adc
xchg
mov
cmp
xchg
les
mov
jmp
loope
add
test
xchg
maskmovq
notl
or
xchg
insb
lcall
mov
mov
push
mov
mov
addb
xor
lahf
out
and
bound
leave
mov
fdiv
mov
add
mov
sti
xchg
nop
cmp
sbb
mov
xchg
insl
cli
lods
mov
jo
jmp
mov
inc
add
add
nop
addb
repnz
add
xchg
inc
jl
js
mov
imul
jbe
push
mov
cli
pop
call
add
sbb
pop
pop
dec
lret
jne
out
pop
int3
fisubrl
sub
mov
and
jmp
lea
add
xchg
pop
call
popf
ret
bound
add
mov
push
add
in
lds
in
mov
lods
mov
inc
inc
add
jbe
fsubs
movb
pop
push
je
filds
add
imull
add
gs
cwtl
loopne
stos
adc
mov
ret
jg
xchg
jg
xor
cmpsb
orl
add
xchg
shll
jnp
lods
lea
sti
cmp
jmp
and
push
and
xchg
addb
sahf
scas
loope
jno
enter
add
mov
add
incb
bound
pop
jg
daa
jnp
add
lods
jo
adcl
add
pop
outsl
int
loopne
or
sub
dec
and
push
and
je
popf
fnstsw
sub
add
add
lahf
inc
test
add
icebp
jbe
dec
pop
xlat
daa
fwait
push
cmpsl
orl
iret
stos
std
jmp
addb
movb
add
loopne
add
daa
sbb
mov
hlt
inc
add
jo
jge
add
cs
adc
xor
adc
and
cld
scas
iret
les
daa
daa
xor
dec
or
xor
add
gs
add
test
stos
mov
mov
jno
daa
xlat
cmp
fistps
push
mov
addb
sub
stos
mov
add
adc
or
inc
add
mov
add
jecxz
add
rorl
jb
xchg
mov
add
jg
dec
test
or
popf
sub
mov
imul
in
cli
subl
enter
popa
jle
adc
xchg
in
movb
cmp
mov
rolb
std
pop
pop
dec
sbb
mov
mov
data16
daa
lods
loope
pop
lock
int3
cs
mov
clc
ret
loope
leave
rclb
jl
jecxz
addb
add
addb
mov
push
mov
cmc
dec
pop
jno
fbld
mov
fnstsw
sarl
push
jmp
imul
out
add
sbb
scas
ror
push
add
popa
repz
aad
lods
mov
mov
push
jl
rcl
arpl
ja
stos
inc
add
loope
and
lock
addb
subl
sub
mov
iret
scas
cld
in
shr
pop
mov
jae
push
sbb
cmpsl
dec
pop
push
bound
mov
loope
daa
sahf
dec
xchg
mov
ret
fucomp
nop
movsb
mov
sarl
jmp
or
mov
ret
ret
cltd
mov
mov
je
pop
rolb
or
lret
xchg
mov
mov
mov
negb
or
add
push
mov
mov
push
and
test
dec
dec
lcall
fstps
shlb
div
cmp
pop
pop
loope
push
out
fcompl
out
add
cmc
pop
sahf
push
add
std
out
xor
int3
stc
adc
add
or
add
jl
inc
add
mov
std
sbb
sbb
jbe
fdivr
jnp
pushf
sbb
add
add
test
fisubrl
add
pop
add
test
fiadds
mov
imul
mov
dec
pop
sub
xor
push
add
imul
push
jno
jmp
repz
add
fs
stc
pop
gs
push
add
add
add
test
mov
adc
ds
ret
push
scas
ja
js
and
sbb
repnz
add
push
out
insb
xor
dec
mov
fs
mov
popf
adc
add
inc
and
idivl
or
add
jmp
add
or
sbb
push
add
addr16
or
add
aam
cmp
add
or
cmp
inc
test
cmc
xor
mov
fdivrl
cmp
nop
mov
ja
sub
add
imulb
arpl
sbb
xor
add
fwait
pop
in
stos
dec
adc
les
rolb
aas
pop
and
outsb
xchg
test
mov
and
mov
ret
pop
cltd
rolb
cltd
sub
xlat
or
lahf
repz
pop
sbb
mov
add
popa
sub
icebp
mov
rolb
dec
or
sarb
add
xor
adc
adc
btrl
call
out
ret
test
popa
mov
dec
mov
push
push
push
pop
add
dec
int
mov
icebp
adcl
ret
push
roll
xchg
lcall
jp
pop
leave
xchg
inc
addb
xchg
jo
loope
movhps
add
bound
lods
addb
or
sbb
call
mov
dec
xchg
xchg
outsb
lret
or
push
jp,pt
dec
repnz
push
cwtl
inc
adc
enter
ljmp
add
clc
sub
push
bound
test
xor
add
add
movsl
cmc
cmp
cltd
cmp
cmp
cmp
adc
dec
adc
outsl
jp
adc
add
nop
loopne
lds
push
cmc
sbb
imul
pop
dec
mov
jle
in
mov
les
je
jne
cli
rolb
stos
mov
daa
pop
mov
sti
and
add
sbb
mov
mov
xor
rolb
inc
add
mov
inc
add
dec
xchg
ljmp
rolb
inc
add
int
stos
mov
fbld
pop
xchg
lods
dec
mov
rcr
jmp
out
in
jge
mov
stos
or
outsb
clc
sbb
dec
mov
pop
cmpsb
mov
jge
inc
add
movsl
mov
dec
out
mov
pop
pop
sti
lcall
jo
jo
aad
scas
push
fucom
adc
in
inc
add
cmc
push
mov
es
imul
in
add
aam
test
mov
mov
adc
add
or
mov
lea
mov
and
lods
imul
dec
inc
add
out
lods
mov
cmp
add
add
shll
mov
scas
sbb
and
dec
popf
cmpsb
pop
sub
jns
fimuls
dec
push
jmp
rorb
shlb
push
das
add
or
sub
std
lock
adc
adc
adc
push
push
stos
or
js
sub
scas
test
sub
mov
sbb
fnstenv
fbld
and
aad
add
push
lahf
cmp
or
add
add
sub
loop
inc
pop
sbb
or
add
jno
pop
in
jo
nop
negl
movsb
pop
xor
add
dec
jmp
mov
scas
sbb
add
and
cmp
mov
xchg
addb
stc
addb
or
mov
add
rorl
repz
lcall
dec
mov
push
into
jb
pop
cld
inc
add
mov
rolb
inc
pop
inc
add
mov
fmul
negl
mov
jno
fwait
jb
loope
loopne
xor
jno,pt
pop
or
inc
sbb
in
out
mov
int
mov
mov
addb
and
add
popf
iret
inc
add
je
ror
or
push
and
add
xlat
addr16
inc
add
outsl
jns
sub
xor
lea
into
mov
jl
sub
popa
inc
cmp
leave
mov
cmp
xor
test
aaa
mov
sbb
lahf
xchg
sub
dec
popa
repnz
mov
jmp
add
adc
jl
les
push
cwtl
movsl
inc
add
inc
outsb
mov
rcll
pop
add
loop
pop
sbb
mov
jecxz
cltd
inc
add
insl
xlat
mov
stos
fiadds
add
mov
xchg
nop
sbb
cmc
imul
mov
push
push
mov
lods
adc
add
push
rolb
mov
sbb
xor
jno
sub
adc
adc
testl
xchg
and
pop
jecxz
jecxz
insw
sub
mov
sbbl
in
xchg
imul
mov
sub
jbe
xor
out
xchg
xchg
sbb
jns
push
in
repnz
inc
add
adcl
add
aam
pop
dec
mov
les
andl
ret
mov
mov
xchg
sbb
inc
rorl
je
add
add
imul
mov
add
icebp
ret
inc
add
or
push
imul
in
fimull
cmpsl
xor
addb
inc
pusha
add
add
sub
repnz
lock
ja
out
and
jne
pop
ja
mov
in
loopne
or
addl
hlt
mov
data16
jp
ret
les
sbb
cld
pop
jbe
mov
inc
movsl
mov
add
movsl
std
test
or
stos
popa
push
xor
mov
mov
fs
pop
mov
leave
insl
rorl
notl
cmpsb
sub
adc
or
add
leave
xor
mov
lret
add
loop
mov
xor
outsl
int3
mov
idivb
cmpsl
and
inc
xchg
and
and
nop
xor
sub
inc
xchg
outsl
push
jb
pop
das
nop
shrb
add
cmp
mov
sbb
dec
sub
adc
scas
mov
leave
popa
inc
cmp
repnz
out
sub
lock
rolb
xchg
jae
ret
cli
shll
or
or
cmp
test
xchg
ret
adc
loopne
jecxz
and
adc
dec
adc
jns
sub
xchg
or
lret
fwait
mov
test
sub
enter
cmp
mov
out
mov
loope
jb
loope
cwtl
and
jns
xorl
data16
push
test
cmp
cltd
and
in
mov
cmpsb
pop
or
bound
test
mov
push
fistpl
jne
sub
fwait
xor
xor
in
add
int
lcall
mov
test
nop
xchg
xchg
xlat
test
jg
xchg
popf
ljmp
cmc
test
aaa
incb
pop
cmpl
xor
xor
cmp
clc
loope
leave
cltd
fstps
xor
mov
mov
lods
outsl
jecxz
add
js
add
nop
repz
stc
sub
ret
data16
mov
mov
adc
nop
sbb
es
outsb
lods
push
cmpsl
and
and
js
lds
icebp
sbb
inc
scas
ret
cmp
dec
movb
xor
addb
push
cmp
ds
fcoms
std
cmp
insl
test
push
pop
sub
add
mulb
movsl
loop
ss
push
cmp
enter
xorl
add
mov
cwtl
daa
xchg
je
out
call
aad
add
xor
dec
adc
mov
ss
addb
inc
add
add
sub
rolb
jno
aas
fbstp
divb
fistps
cmp
jno
scas
jne
or
lods
les
lret
and
popa
jl
sub
mov
add
mov
push
loopne
arpl
mov
out
sbb
push
xchg
or
jp
pop
sbb
out
and
and
daa
ss
mov
cmp
scas
push
pop
lock
add
cmpsb
lea
sub
test
sub
mov
push
dec
cmp
add
mov
insb
mov
mov
cwtl
into
or
and
push
adc
add
push
pop
and
jae
adc
popa
sbb
jbe
dec
in
lcall
or
popa
scas
push
imul
fldenv
xchg
enter
xor
xlat
dec
stc
rolb
out
adc
out
push
push
jle
sbb
jbe
cltd
mov
mov
jge
ror
ficomps
jmp
mov
fidivrl
pop
xor
fdivs
push
add
xor
jecxz
inc
add
aad
push
add
and
cmp
jl
ja
xchg
fldl
add
jae
jnp,pt
cmpsb
sbb
mov
in
sbb
and
dec
mov
xor
pop
cltd
xor
pusha
add
lcall
dec
mov
test
xchg
shlb
mov
adc
bound
xlat
stos
push
movsl
ds
sbb
sti
in
stc
xor
mov
adc
ljmp
sarl
lcall
ficompl
fisttps
jg
add
ret
fnsave
dec
pop
xchg
pop
lods
mov
mov
stc
cld
jns
xor
or
mov
ret
repz
push
xor
icebp
xchg
popa
jl
leave
cmp
addb
add
mov
add
bound
ret
mov
xchg
sbb
xchg
arpl
inc
dec
jmp
repnz
add
scas
popl
cld
mov
test
jbe
scas
out
pop
push
xlat
and
pop
dec
ss
sbb
or
cld
push
inc
sub
movsb
fdivrp
cmpsl
enter
and
out
pusha
add
adc
into
in
jp
call
mov
jne
add
push
das
jo
mov
rolb
stos
push
js
aas
xchg
pop
daa
je
testb
add
xchg
imul
div
sbb
push
test
pop
je
xchg
shll
sbb
mov
in
loopne
shr
sbb
out
bound
cmpsl
imul
ss
pop
iret
sub
fstpt
push
add
jnp
dec
addr16
popa
pop
xchg
jbe
add
enter
aam
cltd
aaa
xor
adc
push
sbb
add
mov
stos
inc
add
cmp
out
xor
xchg
cmovo
xor
adc
cmpsb
enter
arpl
test
push
inc
repz
fcompl
fisubs
shll
pop
inc
daa
xor
test
dec
mov
movsb
jae
mov
aad
mov
nop
es
add
loope,pt
push
imul
fidivl
sub
mov
inc
add
sbb
xor
adc
add
fmul
jle
push
daa
pop
inc
movsl
add
add
ljmp
xchg
stos
out
mov
add
test
jle
mov
sbb
outsl
or
sahf
in
data16
stos
inc
add
add
stos
push
add
pop
cmp
jne
cmp
add
ds
mov
adc
ret
jns
xchg
pop
pop
aad
pop
aaa
push
addb
jp
lock
filds
fisubrl
jae
imul
mov
out
pop
sbb
addb
repz
or
mov
testb
sbb
or
pop
mov
fildl
and
or
xor
loop
add
js
into
mov
pop
cmpsb
or
jnp
push
test
rcr
mov
jp
add
inc
icebp
xchg
pop
dec
imul
stc
lods
imul
in
add
das
cli
sahf
jns
sub
push
insl
cmp
dec
std
in
bound
xor
and
push
aad
pop
jne
pop
test
and
mov
add
xchg
fmul
mov
or
xchg
mov
loop
mov
xlat
jg
mov
xchg
movsl
fwait
pop
adc
dec
or
scas
inc
add
push
dec
call
lock
pop
in
movb
inc
add
testb
