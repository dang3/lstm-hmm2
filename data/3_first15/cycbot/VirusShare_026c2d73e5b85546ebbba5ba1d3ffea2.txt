mov
shr
das
pop
jae
mov
mov
popf
sti
or
dec
jge
xor
data16
mov
fsubl
test
push
gs
rolb
mov
outsl
jp
push
add
jnp
xchg
or
mov
mov
add
inc
add
jp
add
and
add
fistl
add
int3
je
in
xchg
insb
ja
cmp
cmp
inc
rolb
jmp
sbb
sbb
add
and
mov
jns
or
lcall
ret
add
mov
mov
jno
push
jb
mov
push
jecxz
push
fistps
mov
cmp
pushf
cmc
ss
add
inc
add
loop
mov
sub
add
mov
xchg
in
jmp
jo
mov
cmp
imul
mov
cmp
lods
pop
roll
add
fsubs
push
add
mov
add
negb
shll
insb
jge
pop
mov
dec
pop
mov
mov
lcall
cmp
mov
mov
lcall
icebp
scas
sbb
push
xor
mov
inc
inc
push
sub
in
movsl
shll
and
mov
out
cmp
leave
sub
lock
mov
pop
leave
mov
mov
add
mov
xchg
les
mov
jg
or
mov
or
add
stos
push
jo
mov
pop
or
dec
fnsave
call
push
es
scas
mov
mov
add
xchg
popf
cmp
ljmp
jo
mov
mov
dec
xchg
and
mov
push
or
cwtl
cmpsb
fisubs
pop
stos
out
xor
mov
aam
outsb
int3
jp
lods
dec
add
addb
imul
mov
lret
mov
mov
and
mov
mov
add
rolb
mov
enter
fcoms
dec
mov
xchg
sbb
mov
mov
ret
dec
mov
addb
jbe
clc
sahf
xor
mov
add
pop
jo
mov
add
addb
dec
test
push
loope
xchg
push
ljmp
mov
sahf
out
rcll
sahf
rolb
cmp
roll
int
cmpsb
pop
pusha
add
xor
and
mov
mov
or
popa
push
add
adc
xor
insl
inc
add
mov
leave
pop
push
mov
xchg
or
mov
cld
mov
scas
xchg
jecxz
cmp
fmuls
add
repnz
dec
lea
dec
cmp
in
sub
push
push
push
push
push
push
cld
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
pop
lods
aas
sbb
ljmp
cmp
xchg
pop
add
mov
hlt
xor
outsb
jb
mov
imull
mov
mov
shll
lods
xchg
ror
or
in
xchg
jno
xchg
add
add
mov
xor
jl
xor
jg
test
outsl
scas
inc
pop
adc
xchg
add
xchg
xchg
adc
imul
mov
pushf
or
fwait
adc
mov
push
dec
lret
int
pshufw
sarl
jl
cwtl
das
es
jns
and
xchg
mov
enter
jae
pop
jl
or
scas
pop
decl
imul
cmp
push
or
out
inc
cli
divl
jnp
xor
stos
insb
test
xlat
push
cmp
sub
cs
sbb
add
scas
xor
loope
mov
jl
mov
adc
mov
jnp
sbb
jb
mov
add
jbe
cmpsb
or
push
mov
add
clc
cmp
jl
mov
xchg
or
add
mov
push
loop
mov
pop
ret
mov
mov
aas
mov
das
loop
mov
inc
fisubrs
add
add
mov
dec
jno
jo
mov
clc
nop
add
xchg
pop
cli
xor
loopne
mov
faddl
xor
xchg
push
insb
push
decl
xchg
daa
in
adc
mov
xchg
addb
imul
movb
std
fcmovnbe
pop
pop
outsl
push
pop
daa
add
xchg
pop
das
jmp
xchg
inc
mov
rolb
mov
mov
mov
daa
mov
cmp
push
jns
xchg
es
pop
adc
add
and
xchg
add
lret
mov
add
mov
enter
pop
push
es
decb
rolb
mov
outsb
insb
dec
and
push
shll
push
pop
pop
stos
stos
mov
fsubrs
xchg
ljmp
js
fnstenv
jp
cli
js
or
mov
mov
std
or
push
push
add
fmull
add
sbb
dec
insl
add
mov
cmpxchg
mov
popa
lods
das
fucomip
and
inc
iret
jo
mov
inc
repnz
jnp
jae
daa
daa
jbe
mov
pop
mov
jno
cld
sti
mov
hlt
dec
push
clc
mov
jge
or
sub
mov
mov
mov
aad
insb
scas
fists
add
mov
nop
add
repz
push
xor
mov
or
add
lea
mov
mov
xchg
test
mov
mov
xchg
add
repz
aaa
or
mov
add
fwait
mov
movsb
ret
xchg
out
mov
fmull
push
inc
adc
add
mov
nop
add
adc
in
mov
sbb
incl
cmc
add
add
clc
xor
add
pop
hlt
insb
lock
push
jnp
add
mov
mov
fsubrs
mov
push
scas
fwait
das
aaa
or
xor
mov
pop
cli
jge
mov
out
cltd
mov
add
add
mov
xor
imul
or
ds
mov
or
inc
inc
repnz
mov
or
pop
dec
loop
mov
inc
adc
sti
bound
mov
stos
mov
testl
pop
imul
push
aam
push
cmp
in
pusha
add
rolb
rolb
mov
das
cmp
dec
adc
add
pop
and
mov
push
in
enter
push
fwait
push
push
sub
imul
add
clc
addb
pop
mov
lahf
in
and
add
je
add
pop
mov
push
add
add
mov
mov
jg
cmc
neg
sbb
mov
mov
scas
loope
xor
lret
mov
sub
jae
push
push
inc
sbb
stc
dec
loopne
mov
jp
lret
rolb
mov
add
movsl
xor
xchg
in
insb
addl
je
mov
cmp
and
xchg
out
jno
cmp
xchg
cmp
pop
rolb
mov
xchg
add
vcvtsd2si
rorl
push
arpl
addr16
js,pn
pop
maxps
mov
scas
rol
inc
add
imul
xchg
int3
xchg
push
add
or
into
movsl
sub
inc
sub
in
xor
mov
xchg
jns
stc
xchg
cmpsl
dec
or
movsl
add
mov
fwait
dec
inc
add
leave
mov
or
mov
mov
xchg
shl
outsb
xor
add
in
adc
mov
pop
pop
pop
lcall
xchg
repz
mov
sbb
mov
mov
mov
lret
cmp
xor
add
xlat
rcr
out
outsl
mov
add
mov
ret
and
mov
lret
inc
loopne
mov
xchg
mov
mov
imul
cwtl
sub
loope
cmc
lret
mov
cmp
les
test
jne
add
mov
test
xorl
mov
pop
sub
jo
mov
lret
ljmp
inc
mov
mov
icebp
scas
std
stos
pop
shll
cmp
add
addb
jnp
add
bound
mov
es
stc
fists
scas
aam
push
cltd
faddl
loope
and
stos
jecxz
ficoml
push
jo
mov
adc
jbe
jae
sbb
addl
movsl
sbb
add
mov
jecxz
fiaddl
add
mov
dec
enter
mov
and
mov
loope
push
add
incl
fsubrs
sti
imul
cltd
lds
ds
sbb
inc
cmp
add
add
mov
mov
es
sbb
in
cmc
insl
inc
push
ror
dec
lcall
lock
push
ljmp
jp
fidivl
add
neg
icebp
movsl
pop
or
mov
sub
add
addr16
sub
add
jmp
mov
clc
jns
add
push
sarl
dec
or
push
fwait
or
fs
imul
sbb
or
mov
add
push
jo
mov
and
cmp
mov
stos
jnp
add
aad
aam
mov
imul
push
jns
add
mov
mov
mov
cmc
int
sub
mov
fs
outsb
push
add
push
add
popf
dec
jne
adc
mov
push
adc
mov
hlt
xor
mov
lret
lds
push
mov
mov
aad
stos
mov
mov
test
dec
jo
mov
popf
js
dec
lods
dec
pop
cmc
hlt
dec
or
mov
cmpsl
cld
iret
sbb
mov
daa
push
hlt
mov
stos
scas
mov
mov
aad
pop
and
mov
and
mov
mov
inc
lcall
das
pop
push
push
add
jno
xor
mov
mov
adc
scas
mov
add
loopne
mov
sahf
in
xor
mov
add
push
fbstp
mov
aam
call
mov
pop
sub
sub
sti
xor
sahf
jle
xor
in
mov
repnz
add
inc
and
in
jecxz
and
dec
or
aam
add
into
gs
mov
call
cmp
es
stc
mov
xor
mov
lods
ret
cmc
jae
std
popf
ret
scas
dec
push
cmp
mov
mov
add
add
aas
or
jecxz
jmp
mov
mov
add
jb
mov
add
les
mov
adc
inc
cmp
repnz
into
mov
mov
imul
mov
cltd
sbb
jle
int
add
scas
pusha
add
cmp
add
mov
add
mov
xlat
ljmp
fidivs
mov
pop
jnp
mov
or
mov
mov
mov
pop
in
add
test
add
imul
xor
pop
xchg
add
mov
cmp
inc
add
mov
daa
gs
mov
test
add
dec
mov
xchg
popa
insb
stc
enter
add
jns
sbb
xor
cmp
repz
imul
sub
scas
je
mov
in
dec
mov
icebp
mov
push
xchg
xchg
push
xchg
mov
mov
loope
lret
mov
mov
adc
mov
mov
cmp
fwait
fwait
mov
neg
pop
ja
add
std
rolb
pop
jae
aad
and
mov
jo
mov
or
lahf
stos
adc
mov
stc
xchg
mov
mov
sahf
adc
mov
add
mov
xor
jae
add
xchg
lods
xlat
out
cltd
or
shr
cwtl
pop
sbb
scas
imul
push
add
jg
out
jae
dec
mov
mov
loop
mov
sti
les
jecxz
mov
push
fldenv
ficomps
push
mov
xchg
add
lret
stos
adc
sub
adc
mov
cmp
loopne
mov
mov
ret
aam
in
mov
jb
mov
inc
jecxz
lods
xor
mov
pop
sub
pop
sub
push
mov
jmp
loope
jle
jmp
mov
rolb
mov
sbb
and
mov
sbb
inc
mov
sbb
or
inc
cmp
dec
movsb
popa
sub
mov
pop
jne
sub
mov
mov
sub
lods
pop
dec
lahf
dec
aam
ret
inc
add
mov
xlat
mov
push
push
mov
mov
push
jl
fld
mov
mov
add
jmp
inc
jbe
fdivrs
jnp
pusha
add
cmp
inc
push
cld
sbb
enter
mov
mov
data16
arpl
adc
adc
fbstp
add
jbe
daa
push
leave
std
int
call
adc
mov
pop
pop
movsl
lret
push
sbb
mov
and
jg
add
cmpsb
inc
ret
mov
xchg
inc
or
pop
mov
aaa
test
pop
fdivl
jp
mov
movsb
fisubrs
out
js
rolb
mov
and
mov
cli
pop
push
pop
fistl
mov
mov
daa
mov
js
xor
mov
mov
mov
int
jle
cmp
jo
mov
in
add
dec
xchg
leave
inc
rolb
imul
mov
xlat
rolb
mov
imul
add
sbb
pushf
int
testb
test
loope
jmp
add
adc
push
xchg
imul
mov
jae
gs
push
mov
mov
pop
inc
xor
out
push
pop
pop
xor
jnp
add
mov
clc
mov
and
jnp
xchg
add
mov
mov
xchg
cmp
jo
mov
mov
leave
leave
fwait
js
pop
addb
into
rolb
mov
add
stos
xchg
add
aam
repnz
nop
add
out
aas
pop
lods
inc
push
jo
mov
pushaw
add
xchg
scas
inc
cli
jmp
add
mov
xlat
shr
test
shrl
or
push
addr16
stos
xor
cli
sbb
test
xchg
cmp
mov
push
xchg
sub
mov
mov
mov
pop
in
pop
rolb
mov
or
or
rcrl
rolb
mov
arpl
mov
je
jne
sbb
inc
add
xchg
add
addr16
push
or
outsb
cmp
pop
je
pop
cld
aaa
pop
push
fists
mov
jbe
add
add
pop
or
movsl
lea
jg
cmpsl
xchg
add
imul
dec
xchg
xchg
and
add
adc
mov
mov
aad
imul
xchg
loope
popf
pop
shll
add
imul
aam
rolb
mov
cmp
add
add
int
add
xor
mov
push
mulb
mov
push
sub
add
pop
jne
mov
addr16
std
mov
mov
mov
jmp
ja
add
sbb
add
or
and
mov
add
aas
jns
les
push
add
mov
test
push
outsb
mov
or
rcll
stc
mov
mov
lahf
es
scas
cs
bound
mov
add
int3
into
andl
div
add
sbb
jl
cmp
pop
icebp
push
in
ja
mov
mov
imul
sbb
adc
mov
scas
movsb
push
setbe
or
add
dec
sub
rolb
rolb
mov
rolb
mov
int3
pop
clc
dec
test
in
add
mov
fwait
out
cwtl
sbb
jecxz
add
mov
mov
mov
test
mov
adc
mov
adc
test
jmp
dec
push
jnp
add
add
mov
or
sub
and
add
pop
pushf
out
mov
push
sub
add
mov
cmp
add
sbb
add
add
push
out
pushf
fisttps
gs
aaa
mov
add
dec
imul
mov
adc
mov
popf
mov
or
lret
dec
inc
imul
out
add
call
pop
push
aad
out
add
std
jecxz
jmp
add
test
pusha
add
rorl
mov
ljmp
cltd
aam
push
lcall
and
add
imul
or
and
add
add
mov
daa
fistl
cmc
shll
mov
imul
jmp
adc
sub
mov
mov
add
nop
add
push
xchg
cmp
loope
fcomi
fidivs
push
mov
ds
push
sbb
js
sbb
mov
add
cli
lret
in
push
aam
fisttpll
add
fdiv
add
push
add
shl
or
jo
mov
rolb
mov
add
fiaddl
inc
add
lods
cmpl
add
adc
mov
add
mov
mov
in
popa
cmp
add
add
and
mov
clc
movsl
pop
jno
jbe
sub
and
cmp
sbb
or
ucomiss
test
fs
test
add
add
int3
mov
mov
sbb
or
sti
pushf
push
mov
pop
cs
push
f2xm1
add
or
sbb
adc
mov
mov
inc
mov
daa
test
loop
mov
mov
add
pop
push
iret
bound
mov
adc
xor
data16
cmpsl
je
add
scas
lret
adc
add
mov
ss
dec
and
js
insb
fwait
stos
push
cmp
incl
add
outsb
mov
mov
cmp
stos
mov
je
adc
mov
mov
fstpl
js
add
mov
add
push
je
add
out
aam
outsl
add
stos
jecxz
jmp
jo
mov
sub
push
add
mov
add
cmpsb
das
mov
add
dec
lods
jge
inc
test
sbb
dec
iret
push
dec
jb
mov
or
out
andl
sbb
dec
in
leave
pop
sti
fwait
push
add
outsl
dec
xchg
or
in
addl
jnp
pushf
adc
mov
add
add
sti
mov
jmp
in
loope
xchg
add
jns
stos
pop
adc
mov
loopne
mov
dec
arpl
pop
push
mov
mov
xor
push
andl
and
add
sub
data16
addr16
mov
repnz
mov
outsl
sahf
repnz
aad
push
mov
add
mov
push
mov
cmp
jmp
inc
sbb
pop
sbb
mov
pop
test
mov
mov
lea
jmp
je
cmpsb
sbb
test
daa
pushf
lock
inc
cmp
lret
jge
mov
push
loope
aaa
pop
in
mov
mov
inc
add
add
cmp
jecxz
mov
add
lods
out
fcomip
sbb
pop
jp
sbb
add
mov
pop
rolb
out
push
in
xchg
rolb
mov
out
inc
aad
pop
mov
and
js
aas
movsb
loop
mov
add
aam
add
insb
addl
inc
add
mov
add
inc
mov
cmovl
inc
insb
xchg
sahf
mov
mov
daa
and
fistl
fsubl
lods
nop
add
mov
sbb
lcall
mov
mov
insl
pop
mov
pop
cmpsb
nop
add
arpl
xor
mov
add
mov
mov
mov
mov
mov
cmpsb
mov
mov
add
mov
pop
ret
loop
mov
jo
mov
dec
stos
insb
test
test
aam
add
aas
inc
icebp
xchg
add
sub
xor
lea
scas
std
in
test
mov
mov
add
mov
add
call
pop
scas
push
sub
add
mov
cmpsl
lea
fs
pop
call
xor
rolb
mov
test
cs
repnz
adc
mov
add
xchg
ret
fbld
jae
adc
add
mov
out
popf
repz
mov
add
mov
cmp
mov
mov
jno
sbb
sbb
dec
jb
mov
out
int
sub
outsb
cmp
add
push
lea
add
cmc
ds
xorl
pop
cvtpi2ps
pop
outsl
mov
push
es
std
inc
pop
dec
iret
push
add
and
mov
xchg
and
add
aaa
jns
loopne
mov
push
add
sti
inc
cmc
pusha
add
jbe
nop
add
pop
sub
in
add
mov
lret
jmp
test
mov
movsl
cmc
jecxz
das
stc
daa
popf
bound
mov
mov
lods
mov
int3
pop
inc
adc
outsb
jle
movsl
push
adc
jb
mov
cmc
fstps
ja
lahf
sbb
mov
in
mov
xor
mov
add
dec
test
and
fimull
mov
add
ljmp
sub
jecxz
cltd
xor
cwtd
jnp
leave
fnclex
add
add
sub
mov
mov
adc
mov
add
pop
fcompl
movsb
arpl
mov
sub
aas
xchg
add
nop
add
sahf
rolb
mov
mov
in
mov
mov
loop
mov
inc
add
mov
add
mov
push
mov
inc
add
data16
mov
add
add
jnp
sti
push
add
mov
mov
xor
mov
xchg
pop
push
add
inc
dec
cmp
and
adc
mov
and
mov
push
dec
pop
push
dec
push
lods
bound
mov
mov
cli
idivl
ds
xchg
js
jb
mov
sub
cmp
mov
sub
mov
xor
bound
mov
repz
mov
stos
js
cmp
std
ljmp
imul
adc
add
sbb
push
in
cli
stos
in
roll
jbe
sbb
jg
enter
pop
addb
and
mov
mov
enter
pop
dec
lahf
add
jecxz
fwait
insl
jl
add
mov
xor
sub
jnp
cld
jg
sbb
mov
add
mov
push
cmp
inc
mov
mov
mov
inc
and
add
add
mov
int
add
mov
jle
iret
xor
mov
roll
add
rorl
cs
test
mov
or
sbb
mov
mov
decb
inc
add
add
mov
hlt
xchg
sbb
data16
rolb
mov
jg
sbb
fstpl
or
cld
inc
adc
add
mov
add
adc
addb
les
mov
scas
scas
call
mov
or
add
push
mov
mov
mov
push
mov
pop
push
aad
jnp
popf
inc
add
fwait
push
dec
pushl
je
jno
add
sub
jns
add
mov
add
cmpl
test
loopne
mov
add
rorl
cmp
outsl
inc
add
incl
fs
repnz
add
cmp
in
fstpl
push
imul
push
imul
loop
mov
push
add
mov
dec
push
xor
icebp
inc
stos
dec
jne
cmc
cwtl
inc
in
ret
fsts
popa
fcomp
mov
dec
movsb
xchg
xor
mov
jb
mov
jle
insl
imul
add
xlat
stc
mov
add
imul
add
add
lods
nop
add
add
test
rcll
ret
adc
mov
inc
xor
mov
imul
push
insl
jp
test
or
mov
adc
mov
lock
mov
adc
insb
fucomp
xor
mov
add
inc
add
and
mov
jg
andl
mov
push
data16
ja
jge
movsb
mov
lret
jns
xor
in
add
cmp
mov
das
sahf
dec
cld
imul
sbb
mov
lock
dec
jmp
or
aad
adc
popf
loopne
mov
in
jmp
mov
add
pop
pop
and
pop
sbb
dec
repz
add
add
mov
pop
lods
and
mov
cwtl
xor
lcall
add
jge
add
xchg
dec
notb
xchg
fwait
xchg
jbe
add
fwait
outsl
popa
rolb
mov
loope
iret
out
std
addb
mov
jecxz
push
xor
add
out
out
fwait
mov
gs
add
add
repnz
jmp
inc
testb
in
pop
and
pushw
sahf
rorl
mov
xchg
lahf
cli
mov
lods
das
adc
add
cmp
and
lcall
loopne
mov
push
and
mov
add
stos
addb
aaa
pop
ret
loopne
mov
jle
pop
sub
jge
cmc
jo
mov
jge
jnp
out
add
jne
push
int
sbb
ja
icebp
fimull
add
sbb
sbb
mov
rcrl
adc
je
xchg
jg
add
pusha
add
inc
ret
pop
sub
push
int3
test
addl
sub
mov
adc
mov
repnz
add
fdivl
add
mov
cmp
pop
jge
imul
jne
add
orps
es
mov
je
push
add
loope
sti
push
fwait
incb
mov
or
insl
icebp
cmpsb
adc
xor
add
push
mov
pusha
add
adc
stc
mov
mov
addb
xor
dec
sbb
bound
mov
pop
adc
mov
sbb
mov
mov
jmp
adc
es
add
outsl
icebp
addb
bound
mov
lea
xlat
add
fdivrs
and
mov
sub
mov
mov
dec
jecxz
sub
jle
mov
popf
xchg
inc
in
push
push
stos
mov
add
add
inc
pushf
repz
call
bound
mov
add
mov
rolb
mov
cmpsl
mov
jmp
mov
cmp
add
add
push
xchg
mov
ret
fcmovne
rcrl
roll
push
cmovno
mov
jae
inc
add
mov
add
mov
add
xor
cmc
push
lods
lea
dec
lcall
out
add
sbb
mov
xchg
movsb
cltd
xor
mov
add
add
mov
push
test
aad
ja
add
in
cmpsb
movsb
dec
push
stc
xor
mov
mov
mov
xor
mov
cmpsl
cwtl
rolb
mov
and
mov
and
mov
outsb
or
sbb
cmp
lahf
enter
mov
jnp
push
outsl
mov
mov
mov
arpl
cmp
outsl
sub
jl
cmp
ss
pop
mov
mov
add
mov
jns
add
mov
popf
mov
movl
lahf
enter
mov
cmp
pushf
fdivrl
jmpw
add
les
mov
mov
add
cmp
rolb
mov
test
add
adc
mov
jae
push
loopne
mov
mov
lahf
inc
rcll
jle
add
mov
gs
sbb
add
ret
add
mov
add
xchg
leave
inc
add
adc
mov
add
push
cmc
mov
push
adc
add
in
stos
popa
fbstp
xchg
es
stos
mov
mov
adc
daa
xor
fbstp
add
dec
pop
insb
inc
pop
cmp
jo
mov
adc
rolb
mov
movsb
xchg
movsl
pop
jne
add
ss
mov
std
into
lock
or
mov
inc
xor
movsl
addb
lret
dec
push
aaa
inc
adc
mov
add
cli
mov
jno
mov
mov
add
sti
pop
and
add
mov
cld
scas
lret
popa
and
mov
cltd
ret
sahf
mov
mov
add
fsubrs
mov
rolb
sbb
icebp
adcl
insb
adc
jp
add
push
mov
and
mov
mov
pop
loopne
mov
cmpsb
inc
rolb
mov
in
lods
or
lock
or
add
xor
loop
mov
xchg
mov
in
inc
or
push
aas
sti
scas
adc
mov
fcomi
outsb
adc
mov
jmp
loop
mov
testb
xor
sub
sbb
cmp
add
push
shll
add
stos
dec
jmp
add
in
mov
jne
add
pop
cmpsl
fwait
jle
jmp
test
add
dec
das
int
in
add
mov
mov
mov
push
mov
std
mov
xor
add
mov
mov
xor
and
mov
mov
fcoml
jl
imull
xchg
pusha
add
add
mov
sub
mov
mov
repnz
insl
lret
addb
cmpsw
aaa
add
cmc
cmpl
rolb
mov
jle
add
add
mov
in
add
iret
pop
lea
fmull
outsb
inc
aad
test
mov
mov
pop
sub
mov
add
mov
or
cltd
pop
cli
shl
jg
jp
sbb
mov
mov
fildl
repz
mov
add
push
xlat
enter
sbb
push
or
scas
pop
in
push
add
mov
and
mov
pushf
es
js
shl
pop
stc
outsb
loope
inc
mov
js
xchg
add
push
or
jbe
add
nop
add
push
add
xchg
lds
dec
clc
addb
cmp
add
push
push
pop
ja
and
add
test
hlt
xchg
xor
mov
cli
inc
push
ret
icebp
sti
push
add
mov
jbe
leave
imul
hlt
xchg
mov
jo
mov
cmpsb
cmp
mov
sahf
xchg
add
decb
push
stc
fmull
jmp
push
pop
fidivrs
xlat
mov
mov
lds
inc
mov
mov
xchg
sbb
lods
mov
cltd
pop
imul
mov
adc
test
rolb
popa
pushf
rolb
mov
lods
pop
sub
mov
mov
sub
add
nop
add
jbe
or
cld
fistl
add
mov
adc
mov
add
nop
add
mov
ret
stos
cmpsb
aam
out
xlat
and
mov
xchg
add
adc
clc
push
pop
les
mov
and
mov
jge
add
push
add
sub
sbb
dec
push
add
out
xchg
dec
xor
mov
imul
inc
mov
add
pop
sbb
pop
bound
mov
cmp
sahf
mov
cmp
roll
mov
and
mov
add
jo
mov
ficompl
cmp
mov
addb
lret
and
mov
push
daa
push
sub
push
mov
frstor
insl
jns
rcll
mov
mov
sub
mov
add
adc
popf
xor
mov
mov
mov
outsb
ret
rolb
mov
fcomps
adc
mov
shl
push
lds
in
or
aad
mov
xchg
push
dec
xchg
sarl
aam
pop
rorl
cmpl
add
sub
add
add
mov
in
mov
lcall
push
add
cmpsb
sbb
mov
lods
test
fwait
jmp
cmp
mov
inc
xchg
pop
std
adc
mov
imul
cmpsl
push
add
and
mov
fdivl
push
ret
cld
xchg
xor
adc
mov
add
mov
push
jns
int
aam
or
fmull
xchg
add
add
push
xchg
add
js
cltd
fwait
lea
mov
fistpl
addb
mov
lret
push
add
add
xchg
add
inc
jmp
push
push
loopne
mov
sub
shll
add
xchg
add
jnp
add
adc
add
pushf
pop
sti
pushf
cmc
in
add
mov
aam
add
add
sub
push
add
pop
inc
add
in
sbb
sbb
mov
addb
mov
aad
or
add
xchg
add
add
pop
and
cmpsb
and
mov
cmp
pop
imul
mov
mov
scas
rol
test
adc
cmp
movsb
mov
sbb
add
cmp
sbb
subl
mov
jne
out
addb
popf
mov
dec
enter
jg
add
and
lds
xorl
mov
and
mov
and
sbb
add
or
jle
and
mov
cmp
clc
inc
jl
jecxz
mov
rolb
mov
cmc
bound
mov
ljmp
sub
xchg
popa
mov
mov
add
clc
mov
loopne
mov
push
push
lahf
or
cs
xchg
cwtl
movsl
outsb
xchg
jns
add
aad
add
sbb
add
stos
rcrl
inc
add
mov
fwait
loop
mov
scas
lods
rol
add
add
mov
orl
add
add
push
repz
add
in
sahf
add
cmp
mov
dec
push
add
jecxz
add
fistl
loope
add
and
push
add
mov
lret
in
and
mov
sbb
jg
mov
rolb
mov
mov
sub
nop
add
push
inc
sub
inc
mov
repnz
adc
add
jb
mov
lods
cmp
cli
jg
stc
jecxz
je
jnp
xchg
add
mov
mov
xor
mov
add
enter
andl
insb
jne
scas
test
sahf
cmpl
sub
out
mov
jo
mov
negb
cmp
add
sub
add
lock
inc
loopne
mov
mov
add
mov
or
jb
mov
mov
mov
dec
sbb
adc
add
or
xchg
mov
cli
stos
jg
data16
outsb
xor
mov
cli
out
cwtl
push
stc
lret
js
sahf
fmuls
nop
add
pop
ror
bound
mov
lods
outsb
movsl
enter
add
add
push
gs
fnsave
out
pushf
xor
add
ja
inc
dec
jns
add
fs
lret
or
fimuls
push
addb
xor
cmpsb
jmp
lret
int3
push
xchg
mov
and
fiadds
push
add
push
in
bound
mov
les
ja
addb
and
mov
add
add
test
mov
cmp
enter
xor
mov
cmp
adc
mov
and
mov
dec
cwtl
sahf
je
out
lock
rcll
add
add
mov
xor
add
test
addr16
add
mov
and
mov
add
mov
mov
mov
cltd
sub
cmc
mov
add
jmp
pop
dec
cmp
fnsave
add
ds
sub
adc
arpl
inc
cmpsb
lods
push
shrl
popa
out
add
fistpll
jl
pop
leave
mov
jns
fbld
mov
inc
xchg
popl
sub
or
repnz
outsb
cmp
mov
and
sub
add
into
adc
add
mov
inc
inc
pop
sub
add
dec
sub
xchg
jbe
icebp
and
outsb
xchg
outsl
jl
sti
sub
jmp
push
out
push
sbb
pop
test
adc
sub
dec
loopne
mov
add
movb
add
mov
sub
mov
lahf
fbstp
fldcw
mov
pusha
add
mov
cmp
inc
add
add
mov
stos
subl
inc
add
das
push
sub
test
inc
int
and
add
cs
aam
cmp
inc
insl
iret
dec
inc
add
push
pop
jnp
cltd
out
mov
dec
push
les
add
sub
mov
mov
mov
mov
mov
mov
sub
lds
push
arpl
pop
aam
inc
add
pop
daa
enter
fwait
add
xchg
ljmp
rolb
lods
adc
nop
add
std
stos
jne
or
fcomps
mov
add
int3
call
ret
dec
divl
dec
jno
je
lret
sbb
sbb
test
hlt
js
fnstcw
pop
sbb
add
pop
clc
ja
into
mov
mov
test
push
insb
popf
lods
push
test
lcall
cmp
mov
xor
add
add
mov
ds
or
repnz
inc
loop
mov
jae
jae
pop
repnz
loop
mov
add
mov
add
sar
cmp
js
push
sub
fstpl
pop
mov
ror
push
or
cmpsl
cmp
mov
add
lods
dec
xchg
cmpsl
xchg
ficoms
stc
scas
fnstsw
lods
daa
fisubrl
test
imul
addr16
pop
decl
cmp
jns
ret
stos
lahf
scas
mov
add
mov
jle
cmp
add
dec
sbb
scas
ja
int
sahf
je
out
push
add
adc
nop
add
pop
xlat
dec
push
inc
add
test
jmp
cmp
mov
testl
cmpsl
cwtl
bts
xlat
push
pop
mov
test
add
add
mov
push
lds
add
sahf
hlt
imul
lea
mov
mov
out
pop
inc
jp
shll
xchg
imul
mov
xor
mov
cmp
jge
or
insl
fidivl
fimull
add
mov
jno
add
inc
mov
adc
add
imul
add
mov
das
arpl
dec
fisttps
add
mov
add
mov
xchg
test
movl
push
push
inc
cli
arpl
pop
clc
xor
mov
enter
add
push
ss
rcl
pop
add
rolb
cld
insb
std
xor
mov
and
add
movsl
lahf
adc
pop
out
addb
popf
fwait
std
inc
sub
mov
aam
lea
mov
loop
mov
cmp
mov
enter
mov
add
fcompl
cld
cmc
adc
mov
fimull
jns
data16
dec
test
xor
mov
cs
jecxz
mov
jmp
sub
aad
mov
cld
pop
dec
cwtl
mov
pop
ret
mov
lods
movq
mov
cmp
pop
xor
hlt
pusha
add
mov
call
test
and
mov
pop
dec
jnp
mov
mov
notl
imul
dec
fiadds
jno
jge
dec
in
addr16
add
js
add
sub
cli
loopne
mov
scas
dec
push
add
add
mov
lret
xorl
pushf
add
add
jle
movsl
mov
add
adc
push
sbb
adc
mov
les
fucomip
fstpt
mov
pushf
cmpsl
push
mov
add
and
arpl
mov
addb
jecxz
add
fildll
aaa
mov
fs
dec
push
add
add
lcall
scas
mov
push
aaa
xchg
int3
sbb
aas
inc
hlt
je
adc
mov
lock
mov
xchg
pop
push
pop
pop
mov
lods
push
leave
add
mov
sub
mov
mov
add
inc
and
push
int
hlt
push
or
cmp
push
mov
sbb
push
add
mov
mov
add
push
mov
daa
cmpsl
outsb
fnstcw
mov
adc
add
mov
or
dec
imul
out
add
mov
xchg
scas
sbb
add
std
mov
pop
idivb
push
cmc
icebp
mov
jge
inc
mov
mov
add
jns
xchg
daa
xor
mov
mov
sub
add
into
jl
loopne
mov
xor
mov
cmpsl
repnz
insl
loope
or
pop
push
xchg
es
pop
mov
cmp
dec
adc
mov
lahf
add
dec
clc
lods
out
repnz
push
add
mov
push
add
leave
mov
add
add
mov
lret
add
addb
ljmp
sbb
jle
add
das
lods
shl
mov
cli
arpl
adc
mov
sub
lds
rcr
scas
fisubs
rolb
imul
aad
sti
mov
add
rolb
fwait
mov
mov
lods
and
cld
pop
pop
jl
add
and
mov
orl
pop
pop
mov
xor
mov
shl
add
jns
and
and
mov
in
cmpsl
inc
rcll
movsb
add
xchg
mov
mov
sbb
mov
out
inc
jp
inc
mov
lret
push
add
add
mov
or
cmp
add
inc
addb
mov
add
and
sbb
mov
sub
mov
add
add
adc
xchg
aad
add
add
mov
out
sub
xchg
push
fstpl
push
add
gs
lahf
scas
das
dec
xor
cmp
les
pop
lods
add
rolb
mov
mov
mov
scas
add
mov
daa
xor
ds
lods
mov
dec
ss
or
mov
mov
add
add
mov
push
dec
pop
mov
cwtl
lds
pop
adc
inc
jecxz
jns
test
add
dec
int
push
cmp
es
shrl
add
add
lds
in
lahf
sbb
cmpsl
mov
mov
push
cmpsb
pop
sub
mov
push
bound
mov
dec
or
cmp
inc
sub
mov
add
aaa
jmp
adc
fstp
cmp
add
jns
and
sti
mov
test
xchg
out
push
mov
mov
add
mov
mov
cmp
jg
cltd
jb
mov
cld
lds
inc
loop
mov
ss
jmp
out
outsb
or
add
add
sbb
cmp
add
cmp
inc
adc
mov
or
jno
nop
add
mov
mov
mov
push
or
xor
vunpcklps
dec
jle
clc
in
test
add
jo
mov
xchg
outsb
lret
stos
lds
add
mov
jns
add
and
mov
adc
push
xchg
movsl
es
lret
nop
add
daa
pop
jl
stos
mov
add
mov
dec
cmp
sub
xchg
add
xchg
out
push
inc
mov
loopne
mov
sti
in
jp
add
mov
aad
add
jae
cmp
or
add
dec
imul
xor
mov
jae
mov
lahf
mov
insl
loopne
mov
mov
sti
cwtl
sub
cmp
adc
ds
xor
add
flds
adc
mov
aas
push
add
cmp
jae
and
add
int3
mov
jle
sbb
mov
add
mov
add
push
ss
fwait
dec
pop
pop
push
jne
cmp
adc
mov
sti
add
pop
push
cmp
data16
and
out
jns
out
pop
inc
cmpsl
cwtl
nop
add
xor
add
push
aad
ret
jnp
rol
add
mov
push
addb
pop
mov
mov
and
mov
sbb
dec
call
add
push
and
mov
add
loopne
mov
fistpll
dec
js
lret
div
or
push
cmc
cld
je
push
ljmp
jne
test
add
and
sbb
xchg
adc
mov
loope
icebp
test
push
repnz
inc
push
add
mov
jle
push
insl
inc
pop
pop
mov
bound
mov
and
cmp
or
pop
lahf
cmp
setge
add
cwtl
or
iret
lds
adc
add
push
fchs
add
and
or
add
adc
xchg
mov
dec
mov
add
scas
sub
sti
lock
icebp
sbb
imul
mov
and
or
cmpsb
hlt
add
jg
xchg
dec
pop
jno
aad
sahf
decl
js
pop
xor
mov
mov
inc
movsl
jle
fistpl
jmp
sub
and
mov
fwait
daa
out
cmc
xlat
push
adc
daa
in
xor
xchg
xchg
cmp
add
mov
mov
movsl
sub
mov
xor
mov
add
pop
fstps
sbb
add
xor
add
mov
aam
es
add
push
add
in
mov
xor
mov
insl
stc
sbb
adc
mov
add
loopne
mov
lods
sub
add
gs
mov
add
add
add
sub
xchg
ss
add
jae
push
add
sub
aas
pop
push
dec
jp
xor
mov
in
in
mov
cmp
add
dec
add
mov
and
mov
pop
in
fdivrl
mov
test
in
ljmp
add
lret
mov
hlt
jno
add
mov
mov
jle
rorl
das
push
stos
in
mov
add
mov
enter
mov
xor
and
adc
mov
icebp
js
mov
xchg
in
sub
pop
pop
mov
leave
jnp
dec
addb
ljmp
or
mov
lahf
sub
or
mov
mov
xchg
push
xchg
das
and
mov
daa
push
add
pop
popf
xchg
in
xchg
fs
add
mov
add
addb
cwtl
daa
test
mov
daa
inc
cmp
adc
shl
cld
and
mov
pop
insl
pusha
add
mov
mov
mov
push
hlt
jmp
sub
inc
or
add
mov
mov
sbb
scas
inc
add
rolb
mov
add
jle
mov
es
sub
push
popf
test
push
dec
lds
add
insb
add
mov
mov
dec
xchg
stos
loope
add
xchg
add
adc
add
mov
addb
je
in
jp
pop
icebp
jge
les
mov
call
add
adc
scas
push
inc
xor
fucomi
dec
pop
jp
mov
out
in
pop
and
fs
cmp
in
and
add
sbb
add
cwtl
pop
lock
add
inc
adc
or
imul
fists
mov
mov
mov
lds
inc
xchg
add
subps
in
xor
mov
dec
push
imul
pop
je
xchg
add
add
out
out
xor
jae
out
repnz
rcll
mov
in
jp
sbb
enter
js
add
hlt
or
jo
mov
jno
in
dec
jmp
shl
sub
inc
xchg
popa
nop
add
sub
fwait
pop
dec
or
imul
jno
add
mov
mov
stos
adc
push
nop
add
imul
jp
pop
ret
mov
mov
clc
outsb
sub
rolb
mov
in
dec
xchg
bt
lds
in
in
orl
inc
add
cld
repz
mov
jmp
fbstp
inc
inc
dec
mov
add
test
repnz
popf
sub
add
push
add
add
mov
aam
popf
hlt
enter
stc
out
jnp
icebp
dec
pushf
lcall
and
addl
mov
leave
icebp
or
js
nop
add
addb
lods
mov
cmp
loop
mov
jle
mov
loopne
mov
mov
into
fstl
sub
lea
mov
push
xchg
into
sti
push
into
lea
pop
jg
add
jnp
clc
xor
mov
add
loope
stos
mov
cltd
hlt
scas
test
mov
add
add
mov
fidivl
mov
std
jne
loopne
mov
iret
in
mov
mov
add
fstpt
xor
add
dec
test
inc
scas
and
sbb
fisttpll
add
scas
dec
lahf
andl
mov
add
rorl
sbbl
push
fstps
jo
mov
in
pusha
add
mov
in
pop
mov
and
int
add
movlps
popf
mov
inc
fwait
jo
mov
add
stos
out
popf
pop
addb
dec
cmc
adc
mov
test
lret
dec
stos
das
out
std
push
rolb
mov
test
or
addb
cmpsl
addb
test
mov
sbb
jle
stos
popa
jb
mov
jl
loop
mov
or
jo
mov
pop
ds
lret
outsl
out
pushf
and
inc
lcall
mov
mov
gs
std
mov
mov
lods
clc
sbb
inc
add
adc
mov
out
movsb
ljmp
cmp
add
push
add
out
jl
in
out
lea
xor
mov
jne
push
inc
fisttpll
insl
enter
sbb
push
pop
cs
in
scas
movsl
fnstcw
cmp
nop
add
notb
mov
adc
mov
xchg
add
push
add
pop
jge
repnz
mov
ret
cs
sbb
jg
test
insl
aam
push
pusha
add
je
in
sbb
cmp
dec
cmp
mov
call
mov
mov
add
out
pushf
incl
inc
rep
rol
mov
cmp
or
mov
sub
into
push
arpl
add
add
add
mov
out
int
xor
mov
adc
mov
push
mov
xchg
aaa
mov
sbbl
mov
adc
push
insl
je
mov
push
addb
jno
fsubrl
sbb
scas
shll
cmp
mov
ficoml
mov
xchg
push
mov
pushl
jge
add
or
test
into
in
rolb
mov
rolb
adc
enter
pop
mov
mov
movsl
or
cli
or
ljmp
test
add
aam
iret
enter
mov
aad
jnp
add
mov
fwait
mov
or
jae
and
rolb
mov
lods
push
add
mov
lahf
mov
mov
add
retw
sub
push
add
jge
ret
jl
jg
add
xchg
icebp
stc
sbb
add
add
or
add
comiss
dec
cmp
mov
sbb
loope
sub
lahf
das
cmc
mov
mov
addb
aad
dec
lret
push
adc
cwtl
rolb
mov
jl
and
mov
cmp
rolb
mov
inc
cwtl
out
int3
push
jmp
imul
les
rcl
push
jl
sub
inc
add
rcll
adc
leave
mov
xchg
push
add
rolb
mov
add
push
pusha
add
mov
sbb
into
fcmovnb
sti
fsubrl
mov
mov
add
int3
enter
leave
outsb
imul
add
mov
sbbl
or
sbb
mov
sti
dec
or
add
dec
cmp
push
std
lea
xchg
xor
fistpl
fcmovb
lcall
mov
sub
add
sbb
jmp
sub
imul
xchg
in
xchg
je
popa
repnz
fcompl
ret
adc
mov
out
add
push
cltd
les
mov
cwtl
bound
mov
push
icebp
mov
jmp
ret
test
inc
add
jbe
cmp
and
addr16
popf
cmp
aam
ficomps
negl
arpl
inc
cmpsb
shll
add
rcr
stos
ret
repnz
jb
mov
add
pop
clc
data16
mov
mov
pushf
adc
mov
fwait
inc
or
mov
mov
pop
inc
add
dec
pop
jmp
xor
mov
daa
sub
mov
mov
mov
or
add
xor
popf
mov
or
xor
mov
add
xor
mov
in
push
mov
in
pusha
add
push
dec
mov
sub
leave
dec
xchg
je
mov
dec
fidivrl
add
mov
cmp
fcoml
add
lds
and
sbb
jle
dec
xlat
out
adc
aas
cmp
xchg
xor
mov
std
scas
mov
mov
mov
mov
test
jns
xchg
lret
jmp
sub
add
scas
xlat
or
addb
in
mov
sub
cmp
je
out
pop
call
mov
sbb
push
push
cmpsb
push
cli
push
jl
es
mov
stos
add
rcll
adc
mov
call
mov
add
pop
mov
add
fbstp
add
rolb
mov
add
scas
rolb
mov
stos
notl
sub
add
mov
call
xor
negb
mov
mov
mov
add
add
add
jl
add
pop
mov
add
add
mov
add
out
ret
pop
xor
sub
mov
negl
mov
inc
pop
mov
jge
sub
sub
add
cmpsl
dec
dec
pusha
add
pop
mov
dec
xchg
add
pop
fidivrl
hlt
push
mov
arpl
popl
cs
and
mov
cltd
bound
mov
test
push
cli
shl
add
add
jne
pop
add
mov
add
loopne
mov
and
cmc
jp
pop
add
dec
in
mov
mov
jecxz
add
lcall
lret
add
mov
add
mov
notb
cli
pop
adc
out
xor
mov
adc
cmp
sub
or
cs
xchg
test
cmp
mov
aaa
or
aas
aad
test
xor
into
sub
sahf
xchg
data16
popf
mov
add
add
bound
mov
out
xor
mov
jno
push
jb
mov
imul
imul
and
add
mov
imul
addr16
xor
add
mov
xor
mov
movl
mov
insl
mov
mov
add
xor
movsb
sub
movsb
mov
fcomps
sub
jae
add
mov
cmp
sbb
rolb
mov
add
push
sti
add
add
notl
in
or
xor
stos
pop
cld
push
add
fucom
out
fldcw
mov
push
ficompl
repnz
rcrl
inc
lods
sti
pop
xchg
add
sub
cmc
and
mov
jge
jg
sub
sbb
addb
repnz
aad
and
mov
xor
mov
add
and
les
mov
pushf
dec
and
xor
mov
mov
addb
scas
jb
mov
dec
fdivrl
mov
mov
sbb
pop
out
movsl
adc
sbb
add
loopne
mov
mov
add
cmpl
add
add
mov
mov
add
arpl
in
addb
call
mov
and
or
dec
in
xor
mov
jbe
add
cmpsb
sbb
add
sbb
xchg
popf
aaa
cmc
jmp
imul
add
pop
inc
dec
out
lods
mov
inc
ss
adc
mov
add
add
push
add
pop
mov
lock
mov
xchg
scas
or
mov
cltd
xor
mov
aad
add
add
mov
jecxz
add
jns
inc
mov
add
mov
mov
adc
add
sub
addl
mov
jb
mov
add
jae
movsb
repz
jae
out
mov
mov
into
xchg
xor
mov
pop
dec
mov
lcall
add
add
mov
add
mov
sub
add
outsb
adc
mov
xor
fsubl
add
push
mov
inc
add
into
clc
jp
mov
mov
mov
pop
pop
pusha
add
daa
cli
mulb
mov
mov
je
jnp
pop
nop
add
add
rcll
dec
and
cli
add
mov
out
sub
dec
in
jge
pushl
data16
add
mov
lahf
icebp
jnp
call
mov
pop
inc
push
add
jle
leave
rolb
cltd
fcoml
push
mov
fwait
test
movsb
lret
aas
in
push
cmp
add
out
inc
cld
jle
addb
movsb
sbb
jl
outsb
lahf
mov
rol
xor
add
mov
mov
addb
adc
jmp
mov
add
imul
mov
rcrl
enter
pop
leave
mov
xchg
adc
mov
call
or
sbb
pop
leave
push
sub
push
add
mov
lods
mov
add
or
add
or
ret
xor
xchg
lcall
sub
add
sbb
mov
mov
arpl
mov
cmpsl
inc
sub
add
mov
push
leave
lock
ljmp
lods
xchg
jb
mov
jmp
cwtl
and
mov
addr16
adc
enter
mov
sub
mov
addr16
add
loope
sub
push
push
mov
mov
psrld
mov
jo
mov
add
sbb
cmp
cmp
cmp
call
push
add
jo
mov
js
sub
icebp
in
rolb
mov
mov
test
push
xchg
adc
mov
in
popl
mov
mov
fisubl
push
lods
insl
int3
jl
test
xor
sub
add
push
lock
jecxz
insl
pop
mov
inc
push
loope
dec
into
je
jmp
push
push
push
popa
adc
add
mov
mov
cmp
std
push
les
mov
add
adc
mov
in
mov
fdivl
cmp
call
or
pop
idiv
repz
xor
add
dec
leave
sub
cltd
in
bound
mov
notl
mov
xchg
std
ret
push
popl
sub
mov
mov
arpl
push
inc
nop
add
mov
jbe
idiv
xor
push
mov
in
adc
in
pop
push
xlat
push
add
jg
add
icebp
jge
rolb
mov
fldenv
fbld
mov
lahf
add
mov
test
xchg
scas
add
push
call
test
push
add
inc
sbb
int
add
mov
arpl
das
outsl
mov
leave
jo
mov
push
add
insb
jb
mov
inc
xchg
add
xor
mov
push
mov
in
xor
mov
das
cmp
xor
adc
je
lret
mov
js
sahf
xor
inc
mov
loop
mov
pop
aas
pushf
dec
iret
or
add
xor
mov
fwait
cltd
sbb
aaa
push
cmp
sub
add
out
jb
mov
lock
out
mov
adc
insb
mov
insl
bound
mov
xor
pop
mov
push
mov
xchg
popf
and
pusha
add
lock
add
lods
adc
mov
pop
repnz
out
jge
imul
mov
mov
jg
addr16
sbb
sub
pop
das
cmp
scas
in
es
sub
stc
or
add
mov
test
js
pop
sub
fistl
and
mov
dec
idiv
adc
addb
pop
push
xor
mov
mov
loope
fimull
add
rolb
mov
jle
add
mov
jb
mov
add
add
icebp
iret
xlat
addr16
loope
mov
push
flds
add
push
mov
testl
add
mov
outsb
or
mov
sub
add
xor
mov
or
mov
imul
in
add
fsubrp
push
fnstenv
outsl
stos
or
fwait
and
mov
iret
roll
les
add
lret
jge
in
adc
mov
pop
xor
pop
cmp
mov
jmp
cmp
add
xchg
mov
add
fsubr
out
mov
mov
add
jp
xchg
add
mov
xchg
aas
and
icebp
or
cld
sbb
xchg
or
daa
jmp
out
push
in
sub
loope
mov
pop
jne
push
jl
lods
push
aaa
pop
inc
add
sbb
lea
push
out
loop
mov
roll
rolb
fisttps
mov
sub
call
out
push
stc
cmp
fdivrp
dec
adc
mov
mov
aaa
cld
mov
fsqrt
cmp
movsl
and
add
rcrl
mov
jnp
add
mov
add
xchg
adc
add
ret
jae
and
mov
stos
push
or
adc
inc
or
test
push
add
mov
ja
stc
jbe
hlt
xchg
movsb
mov
dec
cmp
hlt
ss
jmp
add
mov
add
inc
adc
mov
enter
jecxz
xor
stos
xchg
jmp
pop
fxch
pop
enter
out
or
mov
jne
sbb
fld
fs
dec
or
jo
mov
xor
mov
je
push
test
daa
sbb
mov
add
xchg
out
or
loopne
mov
mov
mov
test
and
push
cld
stc
mov
mov
popf
es
pop
rolb
nop
add
add
arpl
daa
pop
adc
mov
mov
nop
add
pop
adc
add
xchg
dec
mov
fisubrs
jae
xor
mov
sub
xchg
lock
xor
mov
push
sbb
add
outsb
rcl
cmpsb
xor
cltd
mov
mov
add
nop
add
lods
xorl
mov
mov
mov
stos
mov
mov
add
mov
add
xchg
add
mov
mov
ljmp
addb
test
std
add
lahf
faddp
pop
jp
clc
repnz
loope
dec
add
cmp
div
add
mov
lret
xchg
pop
jnp
bound
mov
iret
add
mov
add
add
push
add
cmp
add
xchg
addr16
jge
mov
enter
dec
scas
sub
out
out
jb
mov
out
xor
inc
ljmp
push
pop
xchg
movsb
fisubl
xor
or
movsl
pop
and
lcall
lcall
inc
je
shrl
mov
fiadds
lahf
add
add
add
inc
and
mov
mov
jle
cwtl
pop
mov
push
jo
mov
imul
mov
mov
push
xchg
stc
push
rol
insl
loop
mov
jnp
push
addb
dec
and
mov
or
push
add
or
ret
ret
mov
add
mov
repnz
xchg
sub
xor
add
shrl
sub
outsl
ficoml
add
rolb
mov
addb
jbe
add
inc
add
stos
xor
mov
or
jne
arpl
sub
dec
popf
xchg
dec
adc
add
dec
pusha
add
or
sbb
out
and
mov
or
add
push
movsl
pop
sub
add
adc
mov
sbb
mov
sbb
jmp
add
adc
mov
add
imul
sarl
sarl
add
mov
xchg
or
add
add
pop
addr16
call
jge
and
out
mov
test
mov
test
stos
jae
dec
dec
mov
or
cmp
xchg
and
mov
fimull
rolb
mov
loopne
mov
push
ret
xor
mov
add
lds
xchg
insb
lods
cmp
or
mov
xor
mov
mov
add
push
enter
mov
add
dec
and
add
rolb
mov
cmp
add
xlat
push
pop
fwait
inc
dec
jecxz
push
push
lds
mov
jbe
fsubr
clc
inc
pop
sti
cmp
hlt
repz
movsl
mov
add
dec
xor
mov
add
stos
xor
mov
gs
sub
jecxz
cmp
xor
mov
into
repz
pushf
lock
out
data16
xchg
in
push
rorl
mov
sub
loope
or
test
rolb
mov
fimuls
jb
mov
inc
or
bsf
mov
sbb
add
sbb
cmp
ret
movsl
pop
loop
mov
jle
xchg
in
add
pop
lcall
pop
test
mov
mov
adc
mov
xor
add
mov
pop
bound
mov
cli
dec
mov
scas
stc
sbb
ret
push
push
mov
test
pop
pop
dec
cld
push
add
add
or
xor
clc
fcmovne
mov
repz
mov
outsb
popf
jp
mov
mov
add
pushf
cmpsl
rolb
mov
sbb
popa
inc
outsb
cmp
daa
push
add
or
add
sbb
dec
jmp
pop
int3
pop
data16
call
mov
pop
les
push
mov
lret
sub
add
lea
in
bound
mov
aam
pushf
pop
repz
mov
add
imul
jl
mov
add
pop
sub
mov
loope
fsubr
stc
mov
inc
inc
add
sbb
out
daa
jo
mov
aam
push
test
mov
dec
clc
sbb
clc
push
add
lea
addb
fdivr
cmp
push
add
mov
ss
xchg
stos
in
sub
mov
fistps
stos
pop
ret
jbe
push
jp
notl
jp
imul
and
mov
add
cmp
xchg
inc
imull
loop
mov
arpl
lret
loop
mov
out
mov
mov
jne
fld
daa
outsl
cli
mov
loopne
mov
push
push
push
lods
loopne
mov
fs
imul
hlt
xor
test
pop
mov
mov
mov
in
aas
inc
xlat
inc
add
ret
dec
sbb
sahf
jae
add
ds
sbb
in
dec
sub
lds
jb
mov
sbb
aad
jl
cs
sub
add
mov
cmp
add
cmp
out
jo
mov
mov
sti
mov
insl
pop
sub
mov
and
mov
jo
mov
fstpt
pcmpgtw
lret
dec
imul
not
addb
test
cmc
and
mov
sbb
mov
add
stos
pop
adc
outsl
call
xchg
leave
inc
mov
push
add
add
cmc
or
gs
xchg
add
mov
xor
test
add
fwait
iret
mov
sbb
lret
jbe
add
lret
pushf
test
inc
rolb
mov
inc
ss
out
add
pop
int
adc
mov
fstps
push
pop
xor
les
addl
jg
rolb
stc
ljmp
stos
push
jno
or
or
iret
movsb
les
fs
mov
add
in
lds
dec
lods
cmc
scas
cmpsl
mov
add
push
push
pop
mov
in
cwtl
add
ficomps
mov
and
mov
divb
jbe
xchg
add
xor
insb
hlt
push
nop
add
adc
pushf
jno
xchg
enter
in
jno
int3
push
mov
sub
pop
stos
sahf
dec
mov
and
mov
add
int3
dec
jnp
inc
xor
nop
add
popa
pop
sbb
add
push
jb
mov
cmpsb
lea
push
or
add
mov
mov
cmpl
jle
or
fiaddl
sarl
addb
sub
addr16
gs
xor
dec
push
inc
add
lods
les
sahf
jg
call
divb
sbbl
mov
push
sbb
push
mov
loop
mov
mov
cmp
dec
adc
add
into
mov
pop
repnz
mov
test
jg
push
daa
pop
repnz
mov
loopne
mov
insb
adc
add
mov
mov
add
mov
add
or
sbb
mov
mov
ja
add
arpl
add
add
fs
sahf
adc
add
cmc
xor
mov
add
add
outsl
pop
addr16
mov
and
mov
jbe
movsb
ret
pop
or
pop
push
mov
mov
push
add
push
call
mov
lea
mov
test
mov
sub
push
dec
pop
popf
and
aam
fcmove
pop
nop
add
lret
aam
mov
and
mov
fcmovnu
les
lock
xlat
aaa
sbb
les
addl
sub
add
sbb
fwait
das
lods
mov
mov
nop
add
rolb
mov
push
pop
lods
sub
add
jne
pop
movsb
adc
mov
inc
mov
enter
cmp
ds
xchg
mov
mov
inc
fsubs
stc
lahf
in
xchg
jb
mov
add
add
mov
add
mov
mov
sbbl
add
add
push
sub
stos
es
push
in
addr16
aas
movsl
dec
test
imul
out
mov
lcall
mov
jp
dec
mov
in
cmp
mov
cmp
cmc
adc
add
mov
sub
add
add
pop
outsb
pop
movsl
sub
iret
dec
cmp
push
add
mov
cwtl
xchg
add
add
xor
mov
add
sub
popa
gs
push
cs
xlat
orl
pop
lret
mov
mov
jg
and
in
ss
mov
adcl
pop
mov
imul
mov
add
pop
or
sub
call
mov
aas
sbb
mov
mov
pop
icebp
icebp
imul
nop
add
enter
sbb
gs
and
addb
inc
adc
mov
dec
int
cld
pushf
nop
add
cmc
cmp
add
add
mov
ja
repz
cmc
push
dec
or
leavew
ror
pop
mov
and
sub
add
sub
fdivrs
jbe
add
shrl
insb
ret
or
cwtl
mov
cltd
mov
lahf
dec
push
add
mov
add
movsl
push
xor
mov
jb
mov
stos
jnp
dec
jne
xchg
add
js
inc
dec
rolb
jae
add
mov
inc
cmp
jnp
add
add
mov
icebp
pop
add
imul
or
add
inc
mov
add
clc
jno
out
mov
dec
ret
xlat
cmc
icebp
fst
js
dec
push
jnp
mov
add
testl
jns
ljmp
mov
mov
lea
mov
add
cmp
push
jb
mov
movsb
xchg
sub
sbb
cmp
add
push
out
popa
js
xor
cmpsl
jbe
sub
outsl
pop
imul
sub
mov
int
add
dec
jge
fbstp
add
add
mov
out
sbb
xchg
imulb
addr16
in
and
mov
jg
or
add
aam
je
lcall
leave
rolb
mov
or
js
mov
ficompl
add
enter
add
shl
imul
movsl
xor
in
dec
mov
mov
test
mov
xor
mov
dec
nop
add
mov
out
jp
icebp
pop
aaa
sahf
mov
mov
mov
arpl
add
mov
popa
xlat
int3
loop
mov
lret
push
add
add
mov
push
mov
pop
cmp
lods
mov
mov
sahf
insl
repz
xchg
add
add
mov
lahf
mov
imul
mov
stos
gs
add
mov
dec
adc
mov
ret
cmp
mov
nop
add
jnp
addb
aam
into
iret
ss
mov
add
jecxz
add
push
jbe
inc
add
scas
cmp
mov
repz
xor
mov
xorl
repnz
movsl
dec
out
add
pop
aas
test
add
jmp
pop
nop
add
add
lds
mov
pop
xchg
jns
push
jb
mov
in
shll
test
fsubr
aad
in
addr16
sbb
jnp
daa
divl
add
rolb
mov
inc
add
mov
jg
aam
mov
sbb
mov
sarl
lods
inc
mov
jno
dec
je
loop
mov
add
mov
jg
inc
data16
sbb
insl
aad
movsl
idiv
cmpsb
shll
add
out
cs
int3
call
insb
insl
mov
add
int
push
sub
lahf
mov
add
push
add
aam
cli
ljmp
add
pop
cli
push
addb
dec
sub
mov
ja
out
data16
mov
out
add
lret
stc
rcr
add
xchg
cmp
xor
loop
mov
lret
es
mov
dec
ja
add
add
push
add
pop
imul
rolb
mov
mov
mov
mov
mov
mov
xchg
dec
dec
imul
aad
pop
jle
icebp
and
mov
mov
add
pushf
jp
inc
or
in
pushf
and
mov
add
notl
push
add
mov
xor
mov
pop
push
jno
lods
or
add
test
mov
mov
cmp
dec
jo
mov
add
mov
push
pop
ja
mov
mov
xor
xor
mov
int3
inc
pusha
add
jg
cmc
out
outsb
dec
sarl
pop
test
popa
mov
jae
xchg
ret
in
mov
cmpsl
stos
imul
js
push
in
push
add
add
daa
fists
jmp
fwait
inc
xor
dec
push
dec
mov
mov
sti
mov
mov
add
jno
pop
jbe
jecxz,pn
add
in
pushf
negb
insl
pop
mov
addb
mov
rolb
mov
mov
sub
out
cmp
movsl
lods
ds
hlt
sub
fadds
stos
add
mov
enter
or
mov
mov
jno
pop
jg
jns
add
mov
add
jne
shll
das
xchg
dec
rolb
mov
add
ffreep
data16
enter
add
leave
jnp
iret
daa
xor
insl
jne
scas
cwtl
rolb
mov
and
ss
mov
add
call
scas
xor
jmp
and
mov
mov
push
pushf
or
add
xor
mov
add
mov
cmc
imul
mov
mov
mov
cmc
ds
aam
lea
mov
mov
cwtl
filds
add
xor
mov
sbb
mov
push
stc
gs
xor
and
mov
add
or
into
pop
rolb
mov
cmp
out
add
mov
and
stc
pop
out
inc
jecxz
inc
add
in
cmpsl
jno
dec
or
ljmp
pop
inc
in
add
sub
dec
push
add
popf
loopne
mov
mov
mov
sub
jb
mov
jmp
push
adc
jno
cltd
ret
outsb
cmpsb
xchg
cmp
xor
lds
fstps
push
sub
je
pop
fsubl
xchg
jg
add
mov
xchg
or
cmp
inc
mov
or
jno
mov
loopne
mov
jne
lds
add
fs
in
cmpsl
inc
add
mov
mov
mov
jle
sbb
adc
mov
and
push
add
setle
insb
sbb
push
push
push
mov
add
les
ret
pop
daa
cmp
mov
add
jp
xchg
loope
pop
popf
mov
sbb
popa
jbe
push
sub
push
in
inc
xor
loope
inc
dec
or
popa
out
add
mov
ljmp
loop
mov
gs
jae
inc
rcll
lds
add
out
xor
mov
jp
pop
cmp
push
adc
loope
add
es
sub
add
addb
inc
add
mov
jle
inc
add
ds
fidivs
push
mov
pop
mov
stc
ret
in
cwtl
xor
mov
lcall
mov
jnp
out
pusha
add
jge
add
mov
pop
stc
idivb
daa
in
sbb
daa
cmpsb
jno
jne
xchg
sbb
stc
cmp
bound
mov
add
fsts
icebp
xor
idivl
mov
movsl
xchg
stos
push
add
mov
sbb
std
sub
jbe
sbb
pop
dec
xchg
pop
lcall
mov
movsl
fwait
scas
sbb
mov
testb
aam
jmp
cmovge
imul
add
inc
dec
idivb
fchs
add
ror
sub
cmp
sti
fidivl
arpl
rolb
mov
ljmp
mov
aaa
in
push
dec
push
icebp
mov
mov
pop
and
lret
xchg
mov
add
adc
xor
fildll
xor
mov
push
add
add
add
inc
add
repnz
nop
cld
jae
xchg
add
pop
rolb
mov
add
in
nop
leave
jmp
stc
and
dec
jmp
add
add
in
push
aad
pop
add
add
add
mov
nop
leave
jmp
add
add
sub
add
loop
mov
adcb
clc
repnz
nop
cld
jae
mov
add
test
and
add
repnz
nop
cld
jae
add
add
and
repnz
nop
cld
jae
test
jle
int
popa
clc
repnz
nop
cld
jae
adc
add
push
fadd
loop
clc
repnz
nop
cld
jae
testl
into
mov
clc
repnz
nop
cld
jae
mov
mov
push
mov
xchg
ret
add
push
add
add
push
mov
nop
leave
jmp
mov
add
and
addb
in
js
rcrb
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
les
push
xchg
add
add
add
sar
nop
nop
cld
jae
test
cli
imul
sti
add
add
in
nop
leave
jmp
add
stc
fstpt
clc
repnz
nop
cld
jae
sub
mov
lea
mov
xchg
ret
and
add
out
repnz
nop
add
push
mov
xchg
ret
stc
add
add
add
fldl
sti
clc
repnz
nop
cld
jae
add
lods
add
test
cld
or
nop
leave
jmp
insl
test
mov
clc
repnz
nop
cld
jae
rorb
cmp
push
mov
nop
leave
jmp
add
scas
je
clc
repnz
nop
cld
jae
add
je
add
dec
roll
xchg
ret
in
push
xor
mov
je
clc
repnz
nop
cld
jae
mov
add
add
inc
sub
inc
icebp
inc
add
mov
stc
push
sti
add
clc
repnz
nop
cld
jae
out
add
add
lret
cmp
add
push
mov
nop
leave
jmp
add
mov
push
mov
nop
leave
jmp
inc
rcr
in
add
push
mov
nop
leave
jmp
mov
aad
cli
call
leave
clc
repnz
nop
cld
jae
ror
jle
push
sub
push
add
clc
repnz
nop
cld
jae
add
push
add
add
mov
clc
repnz
nop
cld
jae
add
cmpsb
push
push
decb
repnz
nop
cld
jae
jmp
add
mov
adc
mov
push
push
mov
xchg
ret
add
pop
add
xchg
and
repnz
nop
cld
jae
fildl
add
insl
add
jne
add
clc
repnz
nop
cld
jae
mov
add
add
in
nop
leave
jmp
add
sub
je
clc
repnz
nop
cld
jae
push
adc
clc
repnz
nop
cld
jae
xor
add
jns
add
flds
xchg
ret
add
add
fcoms
repnz
nop
cld
jae
pop
mov
push
testl
pushl
clc
repnz
nop
cld
jae
add
cmpsb
ds
clc
repnz
nop
cld
jae
add
add
add
push
sti
jmp
push
add
adc
roll
test
add
add
add
add
repnz
nop
cld
jae
or
add
mov
repnz
nop
cld
jae
stc
mov
sbb
lea
repnz
nop
cld
jae
or
add
add
sub
clc
and
push
mov
nop
leave
jmp
add
add
jle
add
mov
nop
leave
jmp
add
push
cli
add
push
xchg
adcl
add
push
mov
nop
leave
jmp
insl
shl
push
add
add
add
clc
repnz
nop
cld
jae
stc
sub
add
add
clc
repnz
nop
cld
jae
jmp
push
mov
nop
leave
jmp
stc
add
shl
push
add
add
stos
call
clc
repnz
nop
cld
jae
sub
xor
add
push
mov
nop
leave
jmp
add
xchg
add
or
mov
call
clc
repnz
nop
cld
jae
add
cli
add
mov
push
mov
nop
leave
jmp
add
and
cwtl
mov
clc
repnz
nop
cld
jae
and
les
push
mov
add
add
push
add
add
pop
push
mov
add
cs
cmp
xor
add
xchg
ja
add
push
mov
xchg
ret
add
add
pushf
mov
clc
repnz
nop
cld
jae
pop
add
add
lsl
clc
repnz
nop
cld
jae
shrl
push
add
cmp
mov
nop
leave
jmp
add
add
or
add
push
clc
repnz
nop
cld
jae
and
add
clc
repnz
nop
cld
jae
and
push
push
add
call
clc
repnz
nop
cld
jae
test
push
daa
addl
nop
nop
cld
jae
push
push
dec
add
add
nop
cld
jae
jmp
mov
adc
jae
clc
repnz
nop
cld
jae
pop
or
xor
lea
clc
repnz
nop
cld
jae
add
add
jmp
add
call
add
aas
add
add
add
repnz
nop
cld
jae
add
add
dec
cmp
repnz
nop
cld
jae
sub
push
aam
mov
push
mov
nop
leave
jmp
add
fisttpl
add
jno
pusha
clc
repnz
nop
cld
jae
sub
inc
add
imul
leave
jmp
add
rolb
add
add
clc
repnz
nop
cld
jae
insl
add
adc
out
mov
push
mov
xchg
ret
aad
mov
add
push
mov
nop
leave
jmp
testl
insl
add
fsts
mov
xchg
ret
xor
pop
add
hlt
add
mov
add
clc
repnz
nop
cld
jae
pop
add
nop
nop
cld
jae
add
add
add
inc
add
adc
repnz
nop
cld
jae
in
call
pusha
clc
repnz
nop
cld
jae
push
add
add
pop
add
xchg
addr16
push
clc
repnz
nop
cld
jae
mov
sub
jle
in
mov
push
mov
nop
leave
jmp
add
add
mov
jle
repz
mov
nop
leave
jmp
je
add
mov
add
add
clc
repnz
nop
cld
jae
fnsetpm(287
push
xor
add
add
nop
nop
cld
jae
push
add
add
and
mov
push
mov
nop
leave
jmp
mov
add
addb
pop
push
clc
repnz
nop
cld
jae
and
add
push
repnz
nop
cld
jae
add
xchg
mov
add
nop
nop
cld
jae
add
sub
add
fistpll
jmp
jmp
inc
sub
add
add
or
clc
repnz
nop
cld
jae
sub
add
pop
call
clc
repnz
nop
cld
jae
cld
add
or
xor
add
clc
repnz
nop
cld
jae
push
add
mov
jb
push
mov
xchg
ret
or
add
test
movb
repnz
nop
cld
jae
cld
les
add
cli
push
push
mov
xchg
ret
push
push
add
jle
pop
add
push
clc
repnz
nop
cld
jae
add
add
push
xor
push
ss
cmp
push
mov
nop
leave
jmp
mov
add
add
add
ret
push
mov
nop
leave
jmp
xchg
mov
add
push
jmp
add
cld
add
cld
les
push
sub
push
adc
pop
dec
and
clc
repnz
nop
cld
jae
pop
add
addb
subl
clc
repnz
nop
cld
jae
sub
mov
aad
ficoml
repnz
nop
cld
jae
add
mov
fs
add
mov
clc
repnz
nop
cld
jae
or
mov
and
mov
xchg
ret
add
add
push
cli
add
or
clc
repnz
nop
cld
jae
and
push
xchg
add
add
repnz
nop
cld
jae
je
xor
add
adc
mov
clc
repnz
nop
cld
jae
add
pop
xchg
add
push
mov
nop
leave
jmp
rclb
add
or
cmpl
in
nop
leave
jmp
add
adc
mov
repnz
nop
cld
jae
pop
adc
push
push
add
push
mov
nop
leave
jmp
add
rolb
add
add
repnz
nop
cld
jae
xchg
and
ret
push
ja
not
push
mov
nop
leave
jmp
pop
add
mov
xchg
push
add
cmc
jecxz
add
add
add
aaa
je
clc
repnz
nop
cld
jae
rolb
and
mov
xchg
ret
and
add
iret
or
nop
cld
jae
and
call
stos
push
mov
sbb
add
rolb
daa
add
inc
add
jp
mov
shr
adc
add
aas
out
push
les
call
and
push
mov
xchg
ret
mov
testl
inc
add
adc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
push
je
out
call
cli
call
and
and
add
mov
cmp
push
mov
nop
leave
jmp
add
add
add
mov
mov
mov
push
mov
xchg
ret
rol
hlt
add
mov
mov
clc
repnz
nop
cld
jae
hlt
add
push
push
add
add
clc
repnz
nop
cld
jae
jle
jle
test
mov
pop
add
nop
inc
inc
add
add
add
add
or
xchg
mov
push
mov
nop
leave
jmp
call
and
add
nop
nop
cld
jae
add
hlt
push
xchg
imul
and
add
clc
repnz
nop
cld
jae
add
add
je
mov
push
mov
xchg
ret
add
push
jmp
mov
clc
repnz
nop
cld
jae
iret
add
cmp
clc
repnz
nop
cld
jae
add
inc
sub
ret
add
mov
add
add
xchg
imul
mov
clc
repnz
nop
cld
jae
mov
or
lret
clc
repnz
nop
cld
jae
add
add
mov
jns
movsb
clc
repnz
nop
cld
jae
notl
les
add
push
mov
xchg
ret
add
add
pop
add
shrb
repnz
nop
cld
jae
add
add
push
and
insb
cmc
inc
add
add
mov
aad
add
clc
repnz
nop
cld
jae
add
add
jge
add
clc
repnz
nop
cld
jae
add
add
rolb
rolb
mov
inc
add
add
mov
push
roll
mov
rolb
xchg
ret
add
mov
add
add
pop
clc
repnz
nop
cld
jae
add
lods
mov
mov
push
mov
xchg
ret
imul
fistl
in
insl
movzwl
push
mov
nop
leave
jmp
sub
out
mov
clc
repnz
nop
cld
jae
add
and
mov
stos
push
mov
nop
leave
jmp
fs
addb
in
pop
clc
repnz
nop
cld
jae
pop
add
push
add
mov
mov
push
push
mov
xchg
ret
sub
mov
je
addb
cmpsl
dec
push
push
mov
xchg
ret
xor
add
add
mov
clc
repnz
nop
cld
jae
push
mov
and
push
push
mov
nop
leave
jmp
push
testl
mov
mov
clc
repnz
nop
cld
jae
push
pop
add
aas
add
push
mov
xchg
ret
sub
add
mov
clc
repnz
nop
cld
jae
add
div
pop
mov
push
mov
xchg
ret
cli
add
add
nop
nop
cld
jae
add
add
add
xor
dec
out
add
push
add
add
fcomi
pop
add
sub
stc
clc
repnz
nop
cld
jae
add
add
or
add
ret
push
mov
xchg
ret
add
push
add
iret
adc
xabort
nop
nop
cld
jae
add
add
jle
xchg
fwait
and
clc
repnz
nop
cld
jae
test
pop
jne
clc
repnz
nop
cld
jae
add
push
add
push
mov
nop
leave
jmp
push
and
mov
mov
xchg
ret
add
push
aad
add
ljmp
nop
cld
jae
inc
add
pop
jle
cmp
mov
nop
leave
jmp
je
call
in
mov
test
cmp
ret
add
mov
push
pop
push
add
pop
clc
repnz
nop
cld
jae
add
add
fs
push
mov
nop
leave
jmp
mov
add
in
mov
add
mov
push
mov
nop
leave
jmp
in
add
icebp
or
repnz
nop
cld
jae
mov
add
add
mov
inc
add
add
pop
add
jne,pt
clc
repnz
nop
cld
jae
inc
add
or
nop
nop
cld
jae
push
les
sub
shl
clc
repnz
nop
cld
jae
add
cli
add
push
mov
nop
leave
jmp
add
or
mov
add
lods
rep
push
mov
xchg
ret
inc
xor
add
add
clc
repnz
nop
cld
jae
mov
pop
add
add
jno
call
push
mov
xchg
ret
push
inc
add
pop
out
push
ss
and
push
fs
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
add
sti
mov
clc
repnz
nop
cld
jae
push
pop
adc
mov
mov
add
clc
repnz
nop
cld
jae
add
add
sbb
in
nop
leave
jmp
add
or
test
or
repnz
nop
cld
jae
and
mov
push
clc
repnz
nop
cld
jae
inc
lods
pop
mov
inc
cmp
clc
repnz
nop
cld
jae
sub
add
xchg
sbb
push
mov
xchg
ret
add
out
add
roll
mov
cmpw
push
mov
nop
leave
jmp
add
inc
pop
pusha
add
add
clc
repnz
nop
cld
jae
out
adc
cmp
mov
nop
leave
jmp
and
add
push
add
nop
nop
cld
jae
mov
add
adc
push
mov
xchg
ret
cli
add
add
lods
mov
sub
jne
push
mov
xchg
ret
push
add
push
add
rolb
mov
xor
clc
repnz
nop
cld
jae
push
add
dec
add
pushl
push
mov
xchg
ret
add
add
and
ret
add
clc
repnz
nop
cld
jae
aas
xchg
jmp
jmp
inc
clc
repnz
nop
cld
jae
cld
add
add
inc
add
in
nop
leave
jmp
add
add
push
push
xorb
mov
loopne
add
imul
mov
aaa
dec
je
push
mov
nop
leave
jmp
insl
add
notb
pusha
add
mov
push
mov
nop
leave
jmp
add
or
mov
xchg
ret
pop
or
or
dec
push
add
nop
add
mov
xchg
ret
add
push
add
add
idiv
repnz
nop
cld
jae
les
add
pop
fsubrl
clc
repnz
nop
cld
jae
imul
xchg
add
add
mov
addl
push
push
cmp
add
addr16
psubsb
repnz
nop
cld
jae
add
cmp
sti
push
mov
nop
leave
jmp
mov
add
fldt
mov
nop
leave
jmp
call
add
push
mov
xchg
ret
fucomi
xchg
and
sarl
push
mov
xchg
ret
push
add
or
add
sbbl
cmp
ret
add
and
add
add
add
repnz
nop
cld
jae
add
add
add
repnz
nop
cld
jae
push
add
add
test
mov
nop
leave
jmp
hlt
add
push
lods
push
clc
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
push
stc
add
add
test
push
mov
nop
leave
jmp
add
push
imul
mov
daa
call
nop
leave
jmp
call
add
clc
repnz
nop
cld
jae
add
push
xchg
push
or
testl
nop
nop
cld
jae
xchg
add
adc
add
push
pop
mov
clc
repnz
nop
cld
jae
push
push
pop
add
add
add
clc
repnz
nop
cld
jae
mov
insl
scas
pop
push
mov
nop
leave
jmp
add
mov
push
add
and
repnz
nop
cld
jae
add
mov
add
mov
push
mov
mov
add
add
add
and
jbe
mov
jmp
push
mov
nop
leave
jmp
jmp
add
sub
icebp
push
mov
nop
leave
jmp
add
xchg
push
add
add
in
nop
leave
jmp
jle
adc
call
push
push
mov
nop
leave
jmp
add
mov
add
push
push
mov
xchg
ret
push
je
add
push
mov
jg
ss
repnz
nop
cld
jae
adc
or
xor
mov
clc
repnz
nop
cld
jae
push
imul
add
jmp
add
push
mov
nop
leave
jmp
add
push
add
repnz
nop
cld
jae
add
stc
add
mov
and
mov
or
clc
repnz
nop
cld
jae
add
int
add
add
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
les
add
sub
test
jle
add
repnz
nop
cld
jae
mov
inc
addb
addb
int3
lea
clc
repnz
nop
cld
jae
and
stc
movsl
xchg
sarl
xor
clc
repnz
nop
cld
jae
push
add
mov
clc
repnz
nop
cld
jae
add
add
mov
and
repnz
nop
cld
jae
jmp
add
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
mov
in
add
cmp
add
add
call
shl
push
mov
xchg
ret
xor
add
add
add
nop
cld
jae
sub
pop
add
add
push
mov
nop
leave
jmp
add
push
add
cmp
nop
nop
cld
jae
rcll
mov
push
popf
and
clc
repnz
nop
cld
jae
negl
pop
dec
sub
mov
mov
xchg
ret
add
iret
hlt
add
and
push
mov
xchg
ret
and
cld
iret
inc
add
push
mov
nop
leave
jmp
mov
add
add
add
jne
clc
repnz
nop
cld
jae
jle
add
call
push
mov
nop
leave
jmp
adc
jg
out
out
clc
call
in
nop
leave
jmp
add
and
in
add
inc
add
lock
add
add
adc
repnz
nop
cld
jae
add
add
addb
pop
mov
push
mov
xchg
ret
add
mov
xchg
into
mov
push
mov
xchg
ret
add
cli
jmp
mov
push
mov
xchg
ret
imul
cli
test
jne
clc
repnz
nop
cld
jae
inc
shlb
iret
or
cld
jae
mov
mov
mov
aad
bound
mov
add
repnz
nop
cld
jae
cli
add
in
mov
clc
repnz
nop
cld
jae
aad
xchg
test
call
clc
repnz
nop
cld
jae
stc
test
mov
aaa
xchg
and
pop
push
add
adc
repnz
nop
cld
jae
mov
add
add
adc
repnz
nop
cld
jae
aad
jmp
js
push
mov
xchg
ret
inc
and
addb
push
mov
lret
push
leave
add
push
fiaddl
add
push
add
push
mov
nop
leave
jmp
add
add
xchg
push
add
push
add
add
push
mov
xchg
ret
sarb
add
insl
imul
mov
clc
repnz
nop
cld
jae
mov
add
imul
inc
clc
repnz
nop
cld
jae
adc
movsl
xor
or
add
repnz
nop
cld
jae
dec
dec
add
in
mov
push
mov
nop
leave
jmp
call
add
push
out
pop
push
mov
xchg
ret
cld
add
in
add
push
pop
sti
push
mov
xchg
add
insb
test
stos
add
add
mov
nop
nop
cld
jae
mov
hlt
mov
mov
nop
nop
cld
jae
add
add
pop
mov
nop
nop
cld
jae
lods
inc
jle
add
push
add
mov
in
nop
leave
jmp
aad
push
add
in
fmull
nop
nop
cld
jae
add
add
mov
push
clc
repnz
nop
cld
jae
add
add
pop
adcl
mov
add
lea
clc
repnz
nop
cld
jae
add
and
mov
mov
add
repnz
nop
cld
jae
out
add
xchg
stc
psubsw
push
out
xchg
sub
add
add
sub
pop
flds
xchg
ret
add
add
add
add
mov
xchg
ret
push
notl
add
aad
je
pushl
push
mov
xchg
ret
add
sub
mov
xchg
ret
jmp
add
jmp
ljmp
imul
add
add
pop
les
add
push
mov
nop
leave
jmp
mov
add
add
mov
add
rcr
clc
repnz
nop
cld
jae
add
stc
mov
rolb
mov
rep
clc
repnz
nop
cld
jae
pop
or
aad
cli
add
dec
leave
clc
repnz
nop
cld
jae
push
and
add
hlt
sahf
sub
push
mov
nop
leave
jmp
pop
cli
iret
add
add
repnz
nop
cld
jae
add
push
add
add
mov
add
clc
repnz
nop
cld
jae
out
add
push
clc
repnz
nop
cld
jae
add
pop
add
test
dec
sub
repnz
nop
cld
jae
mov
add
sbb
xor
add
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
jmp
add
xchg
inc
jg
jne
push
mov
xchg
ret
add
add
push
add
clc
repnz
nop
cld
jae
xor
sub
add
mov
add
clc
repnz
nop
cld
jae
and
add
adc
nop
cld
jae
add
addb
mov
clc
repnz
nop
cld
jae
xchg
aad
add
add
jmp
mov
addb
add
push
add
pop
in
push
clc
repnz
nop
cld
jae
aas
add
cli
call
mov
push
mov
xchg
ret
xchg
add
fucomi
mov
add
jmp
lods
add
cli
add
add
xchg
push
clc
repnz
nop
cld
jae
test
push
add
cli
mov
push
mov
xchg
ret
add
add
add
xor
add
clc
repnz
nop
cld
jae
pop
call
nop
nop
cld
jae
rolb
add
add
clc
repnz
nop
cld
jae
add
pop
rclb
sub
leave
jmp
mov
out
hlt
add
mov
clc
repnz
nop
cld
jae
mov
add
pop
imul
push
mov
nop
leave
jmp
add
add
mulb
clc
repnz
nop
cld
jae
add
aas
add
pop
dec
ret
clc
repnz
nop
cld
jae
sub
mov
pop
mov
add
repnz
nop
cld
jae
add
inc
imul
nop
cld
jae
add
add
stc
and
or
repnz
nop
cld
jae
sub
pop
rcl
aad
popa
clc
repnz
nop
cld
jae
jmp
adc
dec
call
push
mov
nop
leave
jmp
cmp
push
je
jmp
push
add
push
sarb
insl
add
stc
add
and
clc
repnz
nop
cld
jae
inc
and
sbb
mov
xchg
ret
cli
add
add
xor
or
in
nop
leave
jmp
mov
add
push
add
loop
mov
mov
nop
leave
jmp
add
les
pop
out
add
push
mov
add
xor
add
adc
out
add
imul
leave
jmp
add
call
jne
clc
repnz
nop
cld
jae
add
add
fmull
repnz
nop
cld
jae
aas
mov
pop
push
mov
xchg
ret
add
add
adc
mov
adc
repnz
nop
cld
jae
add
hlt
xchg
mov
in
nop
leave
jmp
mov
inc
xchg
add
cmc
fmull
mov
push
clc
repnz
nop
cld
jae
add
add
add
incl
push
mov
nop
leave
jmp
add
sarb
mov
push
mov
xchg
ret
add
push
pop
mov
add
mov
mov
nop
leave
jmp
push
add
add
mov
and
clc
repnz
nop
cld
jae
imul
add
add
mov
push
mov
nop
leave
jmp
and
mov
pushf
cmpl
push
mov
nop
leave
jmp
add
out
mov
repnz
nop
cld
jae
mov
add
xchg
add
popa
push
mov
nop
leave
jmp
call
push
add
clc
repnz
nop
cld
jae
inc
shrl
les
les
addb
sarl
cmp
aas
add
mov
cli
in
add
pop
pop
mov
push
mov
nop
leave
jmp
inc
insl
out
add
cmpl
push
sldt
sub
add
lods
mov
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
add
add
push
add
ljmp
add
fildl
insl
adc
dec
add
clc
repnz
nop
cld
jae
insl
mov
mov
jne
clc
repnz
nop
cld
jae
push
jle
add
adc
add
push
mov
nop
leave
jmp
push
lods
cld
test
jne
clc
repnz
nop
cld
jae
add
pushl
fistl
sahf
xlat
inc
add
push
add
add
jmp
mov
into
call
clc
repnz
nop
cld
jae
mov
add
arpl
testl
push
mov
nop
leave
jmp
push
iret
out
lret
call
clc
repnz
nop
cld
jae
and
xor
repnz
nop
cld
jae
add
idivb
push
mov
nop
leave
jmp
add
mov
pop
clc
repnz
nop
cld
jae
add
add
add
sub
push
xchg
lods
and
imul
jmp
add
pop
add
add
test
mov
repnz
nop
cld
jae
test
add
in
add
ljmp
outsb
testb
add
inc
call
cld
jae
add
add
leave
mov
clc
repnz
nop
cld
jae
sar
lods
mov
add
jae
dec
push
add
add
add
pop
popa
push
mov
nop
leave
jmp
add
mov
aas
mov
dec
test
push
mov
nop
leave
jmp
xchg
add
add
add
pop
sub
in
nop
leave
jmp
pop
insl
add
shrb
sldt
clc
repnz
nop
cld
jae
test
push
repnz
nop
cld
jae
hlt
call
repnz
nop
cld
jae
pop
add
add
test
clc
clc
repnz
nop
cld
jae
and
add
in
nop
leave
jmp
push
add
in
sub
xor
into
xor
push
mov
nop
leave
jmp
cli
add
jle
shlb
push
mov
xchg
ret
add
add
iret
or
add
push
mov
nop
leave
jmp
push
add
xor
sarb
lds
xchg
ret
add
inc
lods
add
ret
sahf
inc
push
mov
xchg
ret
add
lods
add
add
out
dec
shr
push
mov
xchg
ret
add
aad
repnz
mov
add
clc
repnz
nop
cld
jae
add
xor
repnz
nop
cld
jae
out
fildl
add
add
nop
cld
jae
fildl
add
add
add
mov
clc
repnz
nop
cld
jae
xchg
out
rcr
xor
clc
repnz
nop
cld
jae
je
push
add
stc
add
test
add
clc
repnz
nop
cld
jae
add
imul
push
mov
clc
repnz
nop
cld
jae
imul
sti
clc
repnz
nop
cld
jae
add
add
out
or
add
clc
repnz
nop
cld
jae
add
add
mov
fdivl
rclb
into
inc
add
and
push
add
nop
cld
jae
xor
add
or
mov
xchg
ret
mov
mov
add
or
clc
repnz
nop
cld
jae
add
add
dec
outsl
push
clc
repnz
nop
cld
jae
add
and
mov
mov
nop
leave
jmp
add
out
push
add
or
mov
nop
leave
jmp
mov
push
add
pop
inc
sbb
dec
add
mov
xchg
ret
add
add
push
clc
repnz
nop
cld
jae
add
add
int3
add
clc
repnz
nop
cld
jae
pop
or
mov
jno
clc
repnz
nop
cld
jae
push
sub
fstpt
mov
incl
pop
add
rorb
add
les
lahf
push
push
mov
xchg
ret
push
and
add
mov
cs
clc
repnz
nop
cld
jae
rcl
add
push
add
pop
clc
repnz
nop
cld
jae
out
and
insl
mov
aaa
imul
nop
cld
jae
add
add
mov
nop
leave
jmp
push
add
add
aad
add
int3
add
clc
repnz
nop
cld
jae
xor
add
push
fndisi(8087
adc
add
in
nop
leave
jmp
mov
add
add
mov
nop
leave
jmp
add
add
cltd
decl
push
mov
nop
leave
jmp
rolb
mov
xchg
add
add
inc
adc
mov
nop
leave
jmp
add
push
call
add
clc
repnz
nop
cld
jae
add
aad
sbb
nop
nop
cld
jae
add
add
shll
dec
push
mov
nop
leave
jmp
inc
add
add
add
mov
cmpl
nop
leave
jmp
push
sub
add
mov
ret
push
movzwl
clc
repnz
nop
cld
jae
and
filds
xbegin
jae
add
add
xor
scas
xorl
push
mov
nop
leave
jmp
add
addb
lahf
mov
clc
repnz
nop
cld
jae
testl
mov
jbe
mov
clc
repnz
nop
cld
jae
pop
imul
mov
add
mov
push
clc
repnz
nop
cld
jae
iret
push
test
add
mov
jmp
add
sub
add
add
mov
add
mov
xchg
ret
add
add
sub
repnz
nop
cld
jae
add
add
pop
test
push
mov
nop
leave
jmp
add
add
pop
add
lret
clc
repnz
nop
cld
jae
add
or
inc
lock
repnz
nop
cld
jae
adc
add
call
clc
repnz
nop
cld
jae
aad
imul
and
mov
clc
repnz
nop
cld
jae
jmp
push
loopne
mov
cli
imul
clc
repnz
nop
cld
jae
insl
add
add
pusha
clc
repnz
nop
cld
jae
cld
jmp
add
cmp
push
mov
nop
leave
jmp
sub
xchg
add
mov
shrl
mov
nop
leave
jmp
add
shrb
mov
movl
jae
add
out
add
int3
add
clc
repnz
nop
cld
jae
call
add
repnz
nop
cld
jae
add
push
sub
mov
mov
clc
repnz
nop
cld
jae
add
mov
pop
clc
repnz
nop
cld
jae
and
and
mov
clc
repnz
nop
cld
jae
add
mov
popf
clc
repnz
nop
cld
jae
xchg
push
push
rolb
sub
nop
cld
jae
add
add
sub
jmp
cld
jae
mov
and
dec
mov
clc
repnz
nop
cld
jae
jle
pop
jg
movb
repnz
nop
cld
jae
add
add
xor
push
mov
xchg
ret
push
add
add
lods
add
push
mov
stc
add
clc
push
mov
sti
add
incb
fstpl
clc
repnz
nop
cld
jae
mov
sub
add
cmp
jbe
clc
repnz
nop
cld
jae
iret
add
lods
mov
push
mov
xchg
ret
insl
add
iret
xchg
xchg
in
xor
push
mov
xchg
ret
adc
stc
add
or
add
clc
repnz
nop
cld
jae
mov
push
jecxz
add
mov
adc
cld
jae
add
add
jns
jge
clc
repnz
nop
cld
jae
les
or
add
dec
push
mov
nop
leave
jmp
add
imul
dec
add
push
mov
nop
leave
jmp
mov
add
jmp
popa
add
repnz
nop
cld
jae
add
ficoml
mov
xchg
ret
add
add
add
add
clc
repnz
nop
cld
jae
adc
inc
loop
mov
nop
nop
cld
jae
pop
sbbb
add
add
mov
clc
repnz
nop
cld
jae
add
je
hlt
add
nop
cld
jae
xchg
add
add
add
inc
adc
repnz
nop
cld
jae
mov
pop
shr
clc
repnz
nop
cld
jae
and
add
add
push
mov
nop
leave
jmp
add
add
pop
fucomi
push
sub
mov
clc
repnz
nop
cld
jae
sub
stc
add
jmp
repnz
nop
cld
jae
add
lods
add
add
shl
inc
add
stc
add
push
add
in
nop
leave
jmp
pop
or
add
add
fidivrs
clc
repnz
nop
cld
jae
add
cld
add
mov
add
clc
repnz
nop
cld
jae
sub
jge
nop
fdivrp
pushl
and
add
add
add
add
mov
push
mov
nop
leave
jmp
add
sub
xchg
xor
mov
les
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
aas
hlt
jle
push
adc
add
clc
repnz
nop
cld
jae
hlt
stc
add
aad
jmp
stc
clc
repnz
nop
cld
jae
inc
add
pusha
add
add
repnz
nop
cld
jae
iret
add
sub
push
add
idiv
clc
repnz
nop
cld
jae
pop
add
jle
clc
repnz
nop
cld
jae
add
call
push
sub
movsb
push
mov
xchg
ret
and
out
add
lods
push
mov
xchg
ret
pop
mov
pop
xchg
dec
add
add
nop
nop
cld
jae
push
fildl
je
and
add
add
stc
add
add
add
bound
mov
movzwl
clc
repnz
nop
cld
jae
add
testl
fadds
nop
nop
cld
jae
add
add
add
call
clc
repnz
nop
cld
jae
add
add
addb
cld
jne
clc
repnz
nop
cld
jae
add
and
lsl
clc
repnz
nop
cld
jae
inc
add
add
add
mov
push
mov
xchg
ret
add
or
add
or
icebp
push
mov
nop
leave
jmp
push
add
hlt
add
add
lock
add
adcb
call
movswl
clc
repnz
nop
cld
jae
sub
mov
add
repnz
nop
cld
jae
push
and
sub
call
xchg
add
add
hlt
hlt
push
add
xchg
xor
div
inc
les
repnz
nop
cld
jae
add
add
push
add
mov
clc
repnz
nop
cld
jae
inc
add
sti
push
push
mov
nop
leave
jmp
add
pop
push
mov
nop
leave
jmp
iret
adc
stc
add
xor
or
xor
add
clc
repnz
nop
cld
jae
add
imul
clc
repnz
nop
cld
jae
add
add
add
mov
mov
nop
leave
jmp
add
and
add
mov
or
popf
xor
add
add
add
pop
push
mov
xchg
ret
push
je
mov
in
add
clc
repnz
nop
cld
jae
push
je
mov
push
insl
mov
clc
repnz
nop
cld
jae
add
mov
mov
push
mov
xchg
ret
call
pop
pop
mov
clc
repnz
nop
cld
jae
add
add
add
push
mov
nop
leave
jmp
add
add
mov
repnz
nop
cld
jae
cli
out
xor
aas
xchg
add
and
clc
repnz
nop
cld
jae
mov
add
and
lret
mov
clc
repnz
nop
cld
jae
add
scas
push
clc
repnz
nop
cld
jae
add
addb
add
clc
pop
push
mov
nop
leave
jmp
add
add
push
sub
dec
cmp
repnz
nop
cld
jae
inc
aas
pop
add
add
faddl
dec
cmp
in
inc
push
add
je
and
add
add
and
mov
xlat
push
inc
add
leave
add
clc
repnz
nop
cld
jae
add
or
pop
dec
rep
clc
repnz
nop
cld
jae
add
add
mov
push
mov
nop
leave
jmp
add
xchg
add
iret
jle
je
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
add
aas
pop
stos
clc
repnz
nop
cld
jae
add
push
fildl
sub
repnz
nop
cld
jae
add
sub
xor
add
clc
repnz
nop
cld
jae
inc
add
mov
nop
leave
jmp
rcrl
aas
add
or
rol
push
mov
xchg
ret
push
add
or
sub
jg
push
mov
nop
leave
jmp
add
mov
mov
nop
leave
jmp
iret
mov
add
adc
add
call
in
nop
leave
jmp
push
push
add
shlb
xor
clc
repnz
nop
cld
jae
add
add
add
push
mov
sar
repnz
nop
cld
jae
add
add
mov
int
mov
repnz
nop
cld
jae
stc
imull
push
push
mov
xchg
ret
mov
add
add
cmp
push
mov
nop
leave
jmp
push
add
add
imul
ret
out
dec
add
clc
repnz
nop
cld
jae
add
je
clc
repnz
nop
cld
jae
cli
add
add
push
mov
nop
leave
jmp
xchg
push
push
push
add
add
lcall
repnz
nop
cld
jae
mov
cld
add
mov
push
mov
xchg
ret
add
add
test
aas
push
clc
repnz
nop
cld
jae
lods
roll
add
and
repnz
nop
cld
jae
adc
add
pusha
push
mov
nop
leave
jmp
out
push
add
add
and
push
mov
nop
leave
jmp
pop
add
add
add
push
clc
repnz
nop
cld
jae
add
negl
add
push
cs
clc
repnz
nop
cld
jae
push
jle
push
add
fidivs
add
push
mov
xchg
ret
test
fs
lea
clc
repnz
nop
cld
jae
add
or
xor
sub
push
mov
nop
leave
jmp
mov
push
add
adc
mov
nop
cld
jae
add
add
sub
lea
push
mov
nop
leave
jmp
add
out
pop
aad
pop
clc
repnz
nop
cld
jae
add
mov
cld
jo
mov
inc
xor
push
mov
nop
leave
jmp
and
add
movb
nop
nop
cld
jae
imul
add
popa
add
repnz
nop
cld
jae
out
add
mov
repnz
nop
cld
jae
add
pop
push
push
mov
nop
leave
jmp
push
add
dec
hlt
add
aas
or
mov
clc
repnz
nop
cld
jae
sub
lock
adc
mov
nop
leave
jmp
hlt
pop
and
mov
nop
nop
cld
jae
add
and
add
bound
mov
add
mov
inc
add
sub
iret
add
lahf
stos
push
mov
xchg
ret
add
push
lods
add
mov
clc
repnz
nop
cld
jae
or
add
add
mov
nop
leave
jmp
add
imul
in
mov
clc
repnz
nop
cld
jae
inc
push
jmp
test
call
in
nop
leave
jmp
add
add
aam
inc
popa
pushf
mov
clc
repnz
nop
cld
jae
push
jmp
mov
add
push
mov
nop
leave
jmp
add
jle
or
mov
push
clc
repnz
nop
cld
jae
add
xchg
aad
jmp
push
mov
xchg
ret
add
add
mov
mov
cld
jl
clc
repnz
nop
cld
jae
add
add
test
nop
cld
jae
dec
add
add
add
cs
clc
repnz
nop
cld
jae
add
add
pop
add
je
push
mov
nop
leave
jmp
add
lods
add
push
clc
repnz
nop
cld
jae
lods
or
add
add
xor
mov
clc
repnz
nop
cld
jae
add
add
stc
adc
mov
add
add
jbe
add
mov
mov
out
lods
push
mov
xchg
ret
pop
pop
add
iret
inc
xor
adc
nop
nop
cld
jae
pop
or
add
mov
dec
pop
push
mov
xchg
ret
add
sub
cld
testl
repz
mov
xchg
ret
pop
and
and
sub
notl
addb
and
add
mov
in
ret
add
lret
js
xor
fistps
call
sbb
cwtl
cmpsl
int3
fists
push
sbb
mov
mov
loop
mov
test
fsub
add
lods
push
lods
jl
add
mov
int
testl
sub
add
inc
add
mov
in
cmp
mov
add
stc
out
xchg
xchg
fnstsw
add
pop
sahf
in
xchg
pushf
das
pop
sbb
xrelease
bound
mov
mov
jns
add
dec
stos
rolb
mov
lea
mov
add
add
sti
std
pop
sti
das
jbe
in
xlat
packuswb
iret
fs
add
mov
lods
push
mov
icebp
daa
ds
test
add
pushf
loop
mov
adc
mov
xchg
aaa
pop
in
ret
mov
xchg
push
pop
mov
push
outsb
or
outsl
jno
repnz
pop
and
mov
iret
je
sbb
add
push
outsb
or
test
gs
mov
add
mov
aas
inc
add
add
shll
pop
xor
rolb
mov
jp
or
fisubl
fcompl
mov
hlt
mov
rolb
mov
or
cmp
stc
loop
mov
sub
in
sti
inc
pop
mov
add
mov
cli
rolb
lret
out
xor
mov
add
add
in
out
loopne
mov
mov
gs
in
lret
mov
cmpsb
add
jbe
iret
push
or
add
stos
or
sub
fnstenv
add
and
add
mov
add
mov
mov
lea
mov
mov
fidivs
mov
mov
js
jg
fcompl
fcompl
gs
dec
mov
dec
int3
mov
inc
jo
mov
jecxz
pop
mulb
fwait
hlt
jle
cwtl
mov
inc
dec
xor
mov
std
popa
mov
mov
sub
xor
mov
daa
addb
inc
mov
sbb
mov
fistps
lods
and
xchg
fisttpl
mov
jo
mov
ss
jae
add
mov
xor
jecxz
in
fimull
mov
dec
xor
mov
add
jno
pushf
mov
int3
inc
sbb
lods
sub
jns
mov
mov
fistpll
add
mov
fistpl
mov
jle
ja
add
ss
cmp
add
mov
insl
lods
imul
add
pop
push
add
das
outsl
mov
mov
inc
add
into
mov
add
inc
jp
pop
pop
mov
dec
loop
mov
mov
and
mov
add
mov
addr16
aam
fnstenv
add
add
mov
mov
inc
add
mov
mov
mov
add
pop
mov
icebp
test
mov
mov
mov
mov
mov
rolb
fwait
inc
setne
lcall
cwtl
stos
pop
jnp
add
xchg
push
add
xor
mov
or
add
cmc
xchg
add
incl
xchg
xlat
pop
loope
dec
insb
test
sub
arpl
ret
jbe
out
mov
fisubl
add
ja
scas
pop
inc
rolb
lret
add
adc
ds
sbb
stos
nop
add
cmp
mov
ret
out
jle
inc
inc
add
adc
insb
rolb
jb
mov
repnz
xor
mov
xchg
add
add
pusha
add
mov
mov
pusha
add
pop
cli
stos
pop
cwtl
xchg
out
and
add
mov
or
add
mov
lahf
and
xchg
bound
mov
arpl
xor
rolb
mov
mov
stos
out
adc
inc
lcall
cmp
xchg
nop
add
cmp
mov
fidivrl
jns
push
aad
pop
xor
cwtl
gs
mov
mov
add
in
inc
add
leave
and
mov
add
cmp
inc
clc
loop
mov
mov
and
mov
add
mov
pop
inc
jbe
cvtpi2ps
ret
lret
sbb
aam
loopne
mov
inc
js
fldl
or
xchg
mov
mov
add
cmp
add
add
add
add
rolb
mov
xchg
mov
out
inc
add
mov
cli
xor
and
sar
divl
pop
cmp
repz
fwait
dec
and
push
add
adc
mov
mov
mov
or
in
xchg
pop
lahf
sbb
jg
dec
cmp
jo,pn
mov
sub
inc
add
rolb
inc
add
mov
loope
ss
ljmp
mov
jns
stos
dec
mov
mov
std
pop
mov
lods
sub
clc
and
loopne
mov
sub
pop
cmp
loop
mov
mov
add
add
loope
and
cmpsl
rolb
push
int3
fisubrs
in
fidivl
cmp
dec
aad
xchg
xchg
sub
jmp
hlt
inc
add
jmp
push
jecxz
cmc
push
xchg
lds
jnp
sbb
and
inc
mov
addps
loopne
mov
push
add
add
mov
add
cmp
outsb
sub
mov
mov
add
xor
imul
in
xor
mov
add
add
aaa
inc
add
add
bound
mov
add
jmp
aaa
jbe
add
add
cli
push
pop
xchg
rolb
mov
add
mov
cmpl
adc
mov
cwtl
aas
cld
inc
incb
mov
es
mov
push
das
and
outsb
add
mov
mov
jno
sub
imul
mov
adc
btr
ficomps
sub
add
push
mov
add
popa
sub
cmp
jle
add
mov
add
mov
add
mov
cmp
xor
mov
mov
mov
mov
dec
sub
fdivrp
jg
sahf
dec
movsl
in
inc
stos
ret
jo
mov
insb
inc
je
fidivs
mov
mov
jg
add
add
cmp
idiv
fmul
cmp
into
xlat
lret
out
adc
mov
cld
sbb
add
mov
gs
push
add
out
jge
add
inc
mov
enter
push
test
add
mov
in
pop
pushl
shl
aaa
cmp
or
adc
mov
xchg
adc
mov
adc
xchg
mov
fistps
push
hlt
test
jecxz
or
cli
or
cmp
cmp
dec
lret
mov
rcl
cmpsl
imul
in
jns
xchg
incl
mov
frstor
add
jbe
xchg
xchg
and
mov
mov
add
test
sub
sbb
addr16
cltd
in
addb
mov
movsb
push
add
mov
add
das
sahf
sub
cmp
jl
xchg
mov
sub
mov
mov
sbb
sbb
clc
test
push
lods
in
push
in
pop
pop
fxch
and
cltd
mov
dec
xchg
stc
cwtl
push
jmp
je
jge
popf
js
ja
jge
add
mov
jno
pop
push
cmp
fistl
mov
insl
fmull
je
lock
or
outsb
push
or
mov
mov
add
rolb
mov
es
insl
lods
jb
mov
inc
int3
loop
mov
pop
sub
add
test
lret
mov
sbb
add
mov
addb
jmp
inc
add
sbb
mov
xchg
jns
incb
lock
inc
mov
cmc
outsl
sbb
lea
addb
decb
inc
add
and
inc
pushf
gs
inc
push
pop
popa
test
and
add
push
add
add
mov
fsubr
imul
mov
addr16
sbb
mov
mov
daa
sub
and
pop
icebp
lret
sub
push
and
das
repz
das
mov
dec
loope
push
int3
xchg
loope
jae
add
shrl
add
jl
jb
mov
mov
mov
add
mov
mov
mov
sbb
xchg
add
pop
cmp
xchg
add
inc
rorl
mov
push
out
idivb
mov
mov
adc
add
mov
cs
outsl
enter
sub
mov
add
xchg
inc
add
stos
inc
ja
stc
xorl
out
push
addb
push
dec
ret
lea
dec
test
mov
push
push
jecxz
and
mov
push
jl
add
inc
shrl
sub
fcmovbe
pop
pop
inc
out
adc
add
stos
xchg
mov
movb
fsubl
add
and
mov
movsl
lret
mov
ret
sub
jae
ret
es
ret
cli
jb
mov
fistl
imul
inc
xchg
iret
xor
mov
into
rolb
mov
pop
icebp
fcompl
wrmsr
add
sahf
orl
mov
mov
jge
es
add
mov
ss
mov
divl
mov
add
add
mov
add
cmc
std
xor
mov
mov
mov
ret
adc
mov
mov
repnz
push
and
mov
add
xlat
rolb
mov
cli
lods
add
mov
mulb
inc
outsb
pop
xchg
cmp
lea
scas
dec
add
add
cmp
add
jno
loop
mov
and
mov
mov
test
add
xor
mov
cmp
mov
pop
dec
imul
hlt
int
testb
add
jns
movsb
mov
adc
mov
fidivl
inc
jl
mov
imul
sub
inc
add
rolb
pop
and
mov
outsl
dec
loopne
mov
adc
mov
mov
out
xchg
lret
cmp
sub
add
lds
mov
push
fwait
pop
adc
shr
inc
in
mov
int3
cmp
add
add
mov
xor
fistl
daa
fcmovnb
mov
outsb
fisttps
test
cmp
leave
cmp
fcomip
pop
inc
call
in
push
add
lahf
setb
mov
jo
mov
cmp
into
xchg
add
call
mov
sbb
ljmp
xchg
push
popf
cmp
or
push
mov
add
call
ds
add
sbb
rolb
mov
fwait
add
pop
out
bound
mov
sbb
add
pop
push
adc
lret
push
out
push
add
adc
dec
xchg
xchg
add
jmp
and
jmp
or
cmp
adc
inc
stos
pop
movsl
out
cmp
xlat
outsb
push
add
inc
dec
or
add
aam
add
pop
out
insb
shll
addb
fs
pop
push
or
cmp
jns
xchg
add
dec
or
and
cmp
sbb
lods
loopne
mov
add
dec
jle
lock
pop
into
push
adc
mov
mov
add
das
ja
add
out
dec
mov
sub
ds
mov
add
add
mov
lods
push
add
jge
push
cld
cmpsl
mov
xor
nop
add
enter
je
cli
cmp
pushf
mov
and
add
fwait
cs
scas
mov
push
test
out
or
mov
add
mov
add
aas
icebp
mov
out
and
mov
inc
xlat
xchg
push
adc
mov
adc
mov
insb
add
pop
mull
jmp
mov
push
daa
or
add
add
pop
mov
mov
scas
cmp
mov
add
lock
cltd
nop
add
add
mov
ss
addb
xchg
imul
and
mov
lds
adc
ja
popf
jmp
mov
sbb
add
inc
add
mov
lods
aaa
out
inc
int3
xlat
pushf
jmp
mov
pop
dec
adc
fdivrl
aad
pop
sub
stos
cli
call
jns
xchg
pop
xchg
add
mov
repz
and
jae
xlat
pop
int
pop
or
hlt
mov
mov
cmpl
popa
dec
mov
mov
jbe
add
push
dec
loope
pop
mov
cmp
mov
enter
add
mov
xchg
add
mov
sub
pop
dec
inc
mov
or
add
jle
inc
outsb
das
cli
jle
insb
and
push
sbbl
das
pop
into
rolb
mov
xor
in
arpl
enter
adc
mov
push
gs
mov
cld
jg
rolb
mov
roll
mov
testb
sahf
inc
lea
mov
pop
dec
lret
fdivl
outsl
lods
aas
test
add
jp
add
and
rolb
sti
push
pusha
add
pop
cltd
cmp
movsb
cmpsl
inc
lret
mov
cmp
test
repnz
cwtl
mov
pop
push
rolb
cli
mov
push
jecxz
dec
ds
mov
mov
daa
sbb
mov
arpl
pop
clc
pop
mov
dec
adc
icebp
ss
into
addb
lahf
and
mov
cmc
repnz
arpl
stos
xchg
mov
mov
xchg
add
mov
fcmove
jnp
push
in
jecxz
lods
adc
inc
adc
xor
mov
pop
js
ss
add
out
cmp
xor
in
mov
add
add
add
scas
aam
lds
ds
stos
repnz
jno
insl
shrl
inc
enter
mov
mov
pop
xlat
xchg
jge
movsb
stos
dec
movsb
sbb
add
push
imul
mov
mov
outsl
scas
call
mov
inc
add
ret
fs
xchg
lds
out
enter
mov
add
mov
rolb
mov
adc
mov
in
push
add
std
ds
and
mov
push
adc
and
jbe
icebp
xchg
gs
fdiv
lahf
repnz
mov
out
xor
dec
jmp
push
inc
add
push
clc
mov
cmp
and
xchg
addb
and
add
adc
add
cmp
adc
lods
xchg
jle
fiaddl
push
sbb
aaa
xor
mov
pop
push
mov
mov
into
dec
loope
push
insb
cld
cli
push
add
cli
jle
sub
mov
in
addr16
cmp
add
insb
xchg
imul
inc
ud1
xchg
add
mov
cli
jge
xchg
mov
add
in
xor
iret
push
pandn
xor
cmp
gs
pop
lahf
in
xchg
xchg
lods
repnz
add
and
mov
fbld
add
and
xor
xchg
push
test
stos
jae
jnp
or
adc
add
std
loope
lds
repz
insl
lea
sbb
and
int
in
xchg
inc
insb
cmp
bound
mov
xor
mov
add
add
add
mov
das
ret
adc
mov
add
add
call
mov
inc
jae
addr16
rol
lock
jns
pop
fsubr
aas
xor
mov
add
fldl
mov
mov
jge
xlat
data16
mov
and
mov
loope
jo
mov
add
add
cltd
sub
iret
dec
les
add
dec
addb
xor
lret
sbb
in
imul
mov
add
addb
sbb
into
mov
sbbl
lea
fildll
sub
mov
xor
loope
add
inc
add
push
add
add
xchg
and
mov
sbb
popa
inc
add
aad
scas
ret
xor
xor
test
call
stc
adc
mov
lcall
loope
outsl
mov
mov
fidivrs
lods
aas
lea
fidivrs
jmp
sub
push
add
mov
mov
add
mov
mov
out
or
add
cwtl
xchg
frstor
add
ja
xor
mov
mov
mov
in
aam
xchg
in
xchg
mov
add
pushf
xlat
into
insl
inc
jmp
sub
imull
std
icebp
jp
add
jae
cli
shrl
stos
inc
fisubrs
mov
add
repnz
inc
add
fbld
rolb
mov
addb
and
add
add
fbstp
and
mov
add
je
jae
mov
les
inc
fucomip
rolb
mov
dec
adc
add
mov
or
pop
test
div
push
cmp
mov
mov
add
adc
adc
mov
add
sbb
mov
fabs
push
in
add
mov
rolb
mov
inc
xchg
roll
call
add
add
pop
fistl
xchg
adc
mov
mov
clc
inc
sarl
adc
mov
je
or
call
pop
dec
lock
xor
adc
lret
fwait
push
mov
mov
mov
push
loopne
mov
add
mov
ja
icebp
push
iret
mov
es
testb
out
add
sub
add
jno
jne
imul
add
mov
sahf
pop
mov
jecxz
imul
add
and
sub
add
mov
call
push
and
mov
mov
pop
xor
and
popf
test
mov
add
stc
add
sbb
push
js
lds
mov
outsl
fwait
sbb
sbb
mov
cmc
or
add
inc
pop
in
or
add
mov
mov
mov
mov
sbb
mul
add
and
mov
or
xchg
sub
jecxz
jge
mov
repz
stos
daa
imul
lret
mov
imul
add
mov
mov
mov
mov
xchg
adc
aaa
adc
rcll
fmul
negb
mov
add
mov
sahf
mov
pop
ss
adc
adc
mov
roll
add
push
stos
mov
mov
sub
xchg
daa
inc
pushf
gs
xor
adc
mov
outsl
mov
in
sub
or
mov
add
mov
stos
dec
icebp
lods
pop
les
repz
pushl
mov
mov
ret
and
dec
movsb
gs
dec
sub
add
or
mov
xor
loopne
mov
sub
in
cs
add
add
mov
xor
push
mov
rolb
rolb
mov
mov
add
loop
mov
add
rolb
mov
xchg
mov
xchg
inc
lahf
push
add
loopne
mov
sbb
jno
adc
mov
dec
imul
add
jge
lretw
push
and
mov
leave
nop
add
int
mov
inc
add
push
xchg
mov
xor
aam
lret
add
add
jp
push
repz
mov
mov
add
mov
decb
push
add
xor
lods
xor
xchg
xchg
outsb
das
in
push
roll
xor
cmc
repnz
inc
inc
add
add
faddl
mov
mov
add
cmc
pop
outsb
mov
mov
add
dec
call
push
jmp
inc
icebp
cltd
and
mov
pop
imul
mov
cmp
adc
add
add
bound
mov
bound
mov
xchg
loopne
mov
pop
push
mov
addr16
add
test
inc
dec
shll
push
inc
mul
add
out
and
mov
add
push
add
insl
pop
mov
call
add
or
fldenv
rolb
mov
add
mov
adc
inc
mov
pop
xchg
movsl
push
add
inc
pop
xor
fistpll
push
mov
xor
cmpl
outsb
cmp
sbb
dec
popl
xor
mov
xchg
inc
add
cmp
mov
push
cmc
test
orl
rolb
in
fstps
inc
mov
or
add
fsts
mov
divb
cmp
add
out
pop
mov
inc
mov
fwait
popf
mov
mov
add
lret
add
mov
negb
xor
mov
add
jg
les
mov
ja
std
in
cmpl
jo
mov
sbb
scas
sbb
mov
scas
pop
scas
test
sbb
icebp
mov
or
inc
add
jb
mov
or
imul
add
mov
jns
and
mov
mov
inc
sub
leave
das
jno
movsl
ds
dec
enter
outsb
cmp
mov
in
push
adc
mov
push
pop
lret
dec
ja
add
lret
jns
arpl
push
into
adc
mov
lret
rolb
mov
jne
xchg
mov
mov
repz
mov
dec
sub
xchg
add
pmaxsw
idivl
xchg
add
mov
fs
mov
add
imul
cwtl
add
mov
add
mov
cmpsl
sbb
mov
pop
cmc
mov
mov
add
adc
mov
les
mov
sbb
or
sub
test
scas
outsl
rolb
mov
mov
divb
repnz
sbb
dec
jmp
pop
mov
mov
jp
rolb
mov
mov
pop
iret
pop
mov
mov
fmulp
sti
mov
ss
cli
mov
dec
inc
filds
add
xor
add
jle
roll
lds
inc
add
pop
push
sub
add
cltd
loope
adc
faddp
scas
jo
mov
cmpsb
cld
sbb
out
cmovp
orl
sahf
inc
mov
addr16
mov
loopne
mov
jbe
xchg
add
mov
cmpsb
push
xchg
mov
add
add
adc
mov
xchg
pop
xor
testb
push
lahf
roll
xchg
add
mov
aad
mov
hlt
sub
xchg
shrl
scas
mov
inc
sbb
ret
pop
int3
mov
into
int
mov
push
adc
shrl
inc
test
adc
mov
push
adc
mov
adc
add
push
or
leave
inc
add
into
in
enter
mov
add
add
stos
call
pop
push
sbb
add
fadd
stos
setbe
add
or
cmp
fisubs
das
and
mov
stc
xor
inc
fwait
les
xchg
stos
sbb
inc
or
leave
and
mov
mov
dec
les
xchg
sub
std
je
inc
add
add
popf
enter
add
mov
mov
mov
sti
lods
sub
imul
jae
xchg
add
pop
add
inc
add
add
add
data16
mov
pop
mov
add
mov
mov
mov
cmpsb
xor
mov
ljmp
mov
fsubrl
mov
cmc
loopne
mov
mov
add
add
call
sbb
jge
ss
add
mov
add
mov
or
test
mov
adc
cltd
jl
push
mov
add
or
cmc
jecxz
leave
push
stos
push
imulb
adc
sbb
add
mov
cld
adc
sahf
add
mov
adc
mov
jne
adc
add
ret
push
push
add
add
add
sub
add
pop
daa
clc
outsl
pop
or
add
fs
jl
adc
add
mov
mov
fcmovnbe
add
mov
add
mov
xchg
cmpl
inc
add
lretw
ja
movhps
pop
incb
add
pop
inc
add
inc
pop
or
xchg
inc
xchg
jmp
adc
enter
mov
add
addb
jbe
add
aam
add
jo
mov
sbb
pop
insb
addl
mov
adcl
daa
sbb
fmull
add
lret
or
push
jecxz
or
mov
iret
jbe
cmc
push
add
fsubs
mov
add
add
xchg
inc
add
shll
fsubl
add
mov
add
push
add
sbb
in
out
lahf
in
add
mov
mov
jno
outsb
push
add
insb
cmc
inc
push
adc
or
lcall
mulb
add
xchg
loop
mov
add
adc
mov
fidivrs
les
setp
int3
je
inc
add
arpl
add
fs
lds
push
sbb
mov
cmp
mov
push
xlat
inc
add
mov
cs
or
add
ds
cmp
cmpsl
pusha
add
adc
mov
insb
mov
and
loop
mov
or
fnstsw
add
es
pop
fldenv
mov
xchg
ss
out
sub
pop
dec
adc
mov
jne
sub
and
add
mov
ljmp
xchg
add
mov
push
imul
hlt
stos
or
mov
mov
inc
add
push
sbb
shll
mov
and
mov
add
jge
cmp
jne
cmc
sub
cwtl
and
into
push
mov
mov
xorl
jo
mov
add
dec
movsb
pop
rolb
std
cli
pop
mov
cmc
push
movsb
pop
jge
mov
mov
outsl
js
psllq
add
adc
sbb
imul
pop
fucomp
add
mov
addb
cwtl
sub
sub
mov
add
arpl
popl
cs
addb
sub
sub
addb
mov
adc
mov
mov
sub
mov
add
push
stc
xor
mov
xor
popa
pop
cmp
adc
sbb
mov
scas
jecxz
pop
stos
xor
rolb
push
cmp
popa
and
pop
jne
adc
mov
or
in
popf
mov
inc
rolb
pusha
add
pop
mov
addb
mov
nop
add
add
mov
xadd
mov
mov
ret
jge
inc
scas
mov
int
imul
jg
mov
dec
aas
les
popf
stc
imul
add
pop
out
imul
loop
mov
xor
mov
nop
add
shrl
or
sbb
mov
loopne
mov
mov
loop
mov
es
add
pop
fisubs
mov
mov
mov
addr16
mov
daa
mov
or
jg
jle
add
dec
pop
mov
mov
xor
mov
testb
int3
jb
mov
aaa
in
add
fisubrl
lret
add
add
jns
xchg
hlt
rcrl
sahf
dec
or
jbe
sub
add
add
mov
add
rolb
mov
out
pop
jno
push
add
adc
out
clc
lds
mov
add
push
pop
add
add
popa
outsl
push
xchg
add
mov
mov
lea
pop
and
mov
pop
insb
rolb
xor
insb
pop
dec
and
loop
mov
cmp
ljmp
mov
jmp
test
mov
mov
mov
add
ret
cs
adc
es
dec
aam
mov
ljmp
cmp
xor
mov
scas
outsl
pop
iret
imul
mov
pop
jne
lea
pop
scas
insb
xor
adc
add
das
or
hlt
xchg
loop
mov
mov
pop
mov
cmpsb
les
add
and
testb
add
mov
sbb
mov
mov
sbb
lods
leave
out
rolb
mov
bound
mov
xor
push
test
imul
ljmp
add
xchg
pop
lea
mov
inc
mov
cmpsl
aam
mov
in
arpl
and
xchg
imul
mov
mov
cs
jle
rcr
push
loope
ret
aam
leave
fucomip
add
sbb
pop
pop
aaa
neg
dec
orl
add
sbb
mov
outsl
mov
xchg
push
clc
sbb
add
es
stc
mov
mov
sti
aad
dec
lods
push
das
mov
jg
add
pop
fiadds
les
vpaddusw
xchg
sub
push
mov
rolb
mov
out
lds
pop
mov
repz
sub
mov
jmp
aad
jb
mov
ret
lahf
pop
lret
xor
and
mov
add
mov
mov
xlat
mov
sub
orl
pop
and
mov
sbb
cwtl
adc
ljmp
loopne
mov
pop
ja
add
add
bound
mov
xchg
dec
xor
int
mov
lret
or
les
add
xchg
outsl
mov
push
out
movsb
sbb
sub
call
inc
adc
icebp
xchg
push
hlt
pusha
add
mov
add
jecxz
ds
lea
inc
or
incb
mov
cmc
and
mov
lds
insb
dec
out
pop
inc
add
add
leave
mov
mov
ret
mov
xchg
mov
mov
xor
adc
leave
xor
sub
push
negl
jmp
xor
inc
addb
adc
mov
movsl
push
je
add
push
mov
add
ret
or
mov
push
mov
xor
mov
mov
push
ficompl
or
add
lahf
lock
add
mov
and
mov
cwtl
push
add
cmp
push
inc
repz
enter
cmp
ret
scas
dec
xchg
mov
ja
add
in
xor
test
pop
add
aas
push
add
mov
pop
loop
mov
rep
iret
sub
lret
dec
lds
aas
sbb
xor
out
std
pop
adc
mov
negb
push
fs
cmp
jcxz
mov
add
jg
adc
pop
repz
cld
add
mov
stos
lods
push
int3
das
adc
mov
roll
ret
or
mov
fidivl
inc
ret
ljmp
data16
imul
or
repnz
fs
pop
sbb
mov
xchg
fldcw
pop
or
arpl
adc
in
push
add
ja
bound
mov
xchg
ds
leave
adc
test
add
gs
and
mov
jg
pop
ljmp
leave
cmpsb
xchg
pop
mov
bound
mov
pop
leave
shrl
data16
mov
jle
dec
out
or
mov
je
cmpsb
mov
pusha
add
sub
icebp
dec
pushl
add
dec
dec
rcll
js
mov
add
shrl
dec
sbb
add
mov
xor
mov
mov
jae
sbb
or
add
cmc
jae
rolb
mov
ds
ljmp
mov
imul
add
arpl
ss
jae
daa
lret
mov
jge
push
std
test
mov
xchg
cltd
and
mov
add
add
xor
loop
mov
add
fimuls
jmp
sub
mov
mov
adc
mov
dec
inc
cmpsb
div
pusha
add
mov
xchg
add
mov
or
adc
mov
add
aad
in
mov
mov
dec
ds
mov
korw
aad
xor
add
mov
mov
xchg
add
mov
sub
mov
add
add
aas
push
mov
add
stc
cwtl
subl
test
cmp
or
sbb
add
add
cmp
dec
jle
xchg
adc
mov
icebp
pop
pop
int
adc
add
test
lret
dec
mov
mov
xchg
pushf
lock
lahf
push
pop
mov
mov
fistpl
add
mov
dec
fidivl
fwait
dec
push
bound
mov
push
imul
movsl
or
dec
xor
dec
faddl
ds
cltd
pop
cltd
enter
dec
fisubrl
inc
add
jecxz
xchg
sbb
gs
mov
loope
pop
mov
mov
mov
add
add
fs
sahf
fs
and
pop
and
push
inc
add
into
call
add
fcmovnbe
xchg
jp
pop
rolb
mov
jp
add
mov
lcall
in
push
sahf
pop
popf
ja
inc
fs
mov
fisubrl
sbb
fiadds
int3
push
xchg
mov
cltd
loopne
mov
push
push
inc
xor
cmc
jnp
pop
fsubs
sub
xor
jle
mov
push
int
loop
mov
add
mov
mov
fcompl
push
jecxz
push
dec
js
and
mov
add
outsb
xchg
pop
push
mov
movsl
inc
xchg
sti
adc
mov
push
addr16
mov
mov
mov
fwait
lods
mov
xchg
inc
add
add
and
lahf
xchg
call
mov
add
or
add
and
add
mov
mov
mov
mov
movsl
sbb
jno
add
dec
imul
add
std
frstor
pushf
push
xchg
jae
and
std
push
jge
fldl
dec
rcl
arpl
sahf
jg
inc
dec
push
inc
add
mov
mov
add
add
popa
repz
jne
inc
and
add
nop
add
xor
sbb
lods
das
mov
hlt
fucomip
sti
nop
add
cli
iret
or
ret
pop
add
pushf
aam
or
out
mov
ficompl
jmp
shrl
lcall
aas
push
add
mov
in
cmpsb
lcall
addb
repz
repnz
sub
add
or
rolb
mov
inc
adc
mov
add
dec
incb
mov
jp
test
or
mov
mov
mov
sbb
mov
add
ja
aaa
lahf
loop
mov
lret
add
mov
cmp
fnsave
bound
mov
add
mov
add
cmp
add
xor
mov
inc
je
out
imul
dec
xor
mov
sahf
stos
fisttpl
add
add
stos
xor
mov
cmp
push
ds
add
cmp
xchg
stos
and
dec
cwtl
jge
add
addb
or
loop
mov
jecxz
xchg
mov
fdiv
jbe
out
cmpsl
movups
add
mov
ja
popf
js
fsubl
imul
insb
add
mov
dec
jp
adc
jle
cmp
cmp
mov
jno
repz
jb
mov
call
xorl
mov
add
add
mov
loop
mov
add
xor
scas
sbb
sub
add
mov
xchg
inc
scas
dec
test
out
and
mov
add
lahf
push
shll
jne
sub
add
je
add
add
mov
rolb
mov
loop
mov
out
jno
mov
and
mov
mov
std
jle
add
adc
inc
fadd
dec
push
imul
add
jp
xor
mov
rolb
hlt
add
inc
add
imul
add
jmp
jle
jae
sub
add
rolb
bound
mov
cmp
xchg
fimull
pop
inc
mov
dec
xchg
mov
dec
add
inc
add
adc
add
mov
add
fdivp
mov
lret
dec
imul
icebp
inc
dec
inc
adc
jae
push
ljmp
in
out
adc
es
sub
jns
jne
testb
mov
jne
lahf
lcall
cld
xchg
dec
and
mov
dec
imul
mov
push
in
mov
mov
dec
iret
cld
sbb
jmp
aaa
adc
scas
ljmp
dec
into
out
lea
int
out
aam
cmpsl
testb
fmuls
push
fadds
dec
push
and
sbb
shll
mov
mov
scas
xlat
je
out
xchg
in
mov
push
xor
mov
dec
in
jmp
clc
and
jb
mov
and
add
pop
hlt
dec
push
je
mov
jae
mov
xchg
bound
mov
mov
pop
pop
int
add
add
fs
cmc
and
inc
add
or
mov
jl
mov
mov
add
cmovs
add
rolb
cld
sbb
mov
dec
adc
xor
out
rolb
jne
lods
mov
out
testl
sar
pop
inc
push
add
add
outsb
cs
jge
jecxz
imulb
lods
lret
pushl
add
lds
test
sahf
outsl
jge
aad
pop
and
mov
xchg
mov
fcoml
movb
fcmovnb
lods
push
jmp
add
filds
mov
mov
mov
mov
test
cmpsl
push
loop
mov
fisubs
mov
mov
mov
push
repnz
cs
add
mov
mov
cmp
and
mov
std
mov
push
add
fmull
jb
mov
loope
jp
pop
adcl
adc
push
scas
jnp
mov
mov
dec
hlt
mov
pop
xchg
add
mov
jecxz
cs
push
lahf
js
add
xor
mov
add
fildl
fiadds
add
mov
les
popa
xor
or
dec
jle
mov
jae
xchg
out
ss
in
jnp
xchg
and
mov
mov
lea
mov
pushf
push
fsts
add
aas
fidivl
mov
add
addb
call
jb
mov
or
in
les
sbb
jp
push
rcll
dec
cwtl
mov
cmpl
mov
cmpsl
pop
testb
js
hlt
push
std
icebp
lret
insl
movsl
test
mov
add
mov
dec
cmp
push
and
add
dec
inc
loopne
mov
add
mov
add
mov
in
outsl
ljmp
xchg
les
add
add
ficoml
mov
mov
xchg
push
add
rolb
cmc
nop
add
add
fcoml
inc
jo
mov
dec
pop
loop
mov
push
stos
in
add
movsl
pop
js
sub
addb
mov
mov
and
mov
mov
int3
xchg
add
cwtl
jne
adc
add
fsubl
add
mov
std
call
lods
push
js
ljmp
fildll
rcll
aad
add
mov
scas
imul
in
or
sbb
jbe
pusha
add
xchg
jae
rcll
iret
outsb
insl
cltd
ljmp
iret
sub
dec
fs
arpl
jno
sub
pop
and
mov
xor
das
pop
jge
rolb
mov
or
mov
out
movsb
sbb
mov
fcmovb
in
mov
jg
inc
xchg
and
mov
add
fdivs
add
sbb
push
stos
jmp
icebp
rolb
cltd
int
add
out
add
add
fsubp
test
jl
jp
sub
mov
inc
dec
sbb
and
mov
add
call
add
mov
add
add
es
add
add
cmp
add
mov
sarl
cmpsb
dec
sbb
dec
dec
mov
cmpsb
fs
pop
sub
out
xor
mov
jmp
add
fsubl
add
outsl
lret
cmpsl
scas
rorl
inc
mov
push
lea
sti
aas
in
mov
cmp
mov
cld
cmove
ret
push
shll
jge
les
push
shll
mov
add
in
rolb
lods
loop
mov
fdiv
stos
loop
mov
mov
add
add
pop
xlat
mov
inc
out
divl
or
mov
cwtl
cld
fwait
add
add
mov
lcall
add
das
cmp
mov
mov
imul
mov
sar
dec
or
daa
in
dec
fstps
repnz
mov
test
mov
add
push
add
xor
sub
pop
mov
jl
test
push
add
popl
mov
mov
faddl
xchg
mov
add
roll
add
and
mov
cltd
pop
cld
shll
xchg
xchg
cmpsb
push
mov
stc
xchg
gs
cmp
fs
xor
mov
add
add
cltd
mov
mov
rolb
mov
jle
push
enter
incl
push
add
lods
sub
add
movsl
mov
call
hlt
lea
mov
aad
out
pop
adc
mov
pop
jle
stc
pop
inc
scas
into
mov
xor
insb
mov
xor
jae
out
imul
fwait
add
mov
cmpsl
xor
mov
pop
add
mov
mov
mov
rcrl
jns
mov
dec
push
iret
scas
pop
or
sub
jno
add
jmp
adc
fdiv
movsl
sbb
add
cmp
adc
add
jmp
sbb
cmp
jp
cmpsb
out
push
xchg
xchg
add
mov
js
mov
xor
mov
lods
out
dec
inc
rcll
dec
andl
mov
add
dec
inc
mov
icebp
pop
or
std
mov
sub
mov
negb
jo
mov
std
push
jg
stos
js
mov
mov
imul
stos
test
popf
sub
mov
jae
fistps
adc
mov
add
or
pushl
add
fidivrs
mov
mov
mov
push
fldt
fs
in
add
dec
push
push
add
stc
in
outsl
hlt
in
repz
or
add
lea
mov
mov
neg
mov
and
fiaddl
pop
cmp
sbb
cmp
test
gs
ficompl
push
mov
popf
push
aas
ficoms
and
mov
add
hlt
outsb
push
rolb
mov
add
es
mov
sub
mov
pop
dec
rep
andps
cmp
inc
add
gs
mov
dec
jl
dec
sbb
inc
cs
lds
hlt
cli
inc
add
mov
test
sbb
mov
sbb
test
out
inc
stc
fdivrs
jge
add
imul
mov
cmp
inc
add
add
nop
add
or
and
mov
mov
bound
mov
sbb
add
mov
jb
mov
mov
repnz
mov
int
stos
arpl
outsb
lds
rolb
mov
pop
jo
mov
mov
add
test
mov
pop
fcmovnbe
fidivrs
lret
mov
adc
mov
add
mov
or
push
add
mov
aas
data16
add
in
addr16
jbe
sub
mov
fwait
mov
mov
mov
xorl
mov
cmp
rorl
mov
pop
adc
lds
mov
mov
bound
mov
test
jnp
mov
cmp
xchg
lret
mov
std
adc
mov
mov
and
lcall
adc
push
add
clc
cmc
ja
add
add
and
addb
sub
mov
mov
cmc
ret
addb
icebp
push
adc
cwtl
jg
pop
dec
sub
xor
mov
test
rolb
mov
test
mov
mov
dec
sub
lds
jne
xor
mov
movsl
adc
test
mov
mov
xor
pop
push
add
add
fcmovnbe
add
mov
mov
rolb
std
dec
ljmp
add
push
cltd
ds
pushf
imul
gs
mov
mov
aad
jns
fistps
adc
mov
fwait
xor
cmp
or
lahf
lret
call
add
mov
into
leave
out
push
xor
arpl
add
add
testl
mov
cmp
mov
ret
inc
lds
fsubrl
adc
movups
mov
mov
nop
add
push
push
ljmp
xor
jbe
fisttpll
add
inc
add
xchg
addb
lds
mov
adc
mov
jns,pn
int
xchg
cmpsl
fdivp
popa
push
add
add
pusha
add
fstpt
ljmp
pusha
add
add
cld
aas
call
mov
jl
jecxz
add
sub
std
mov
test
test
xchg
mov
inc
rolb
je
cmp
mov
mov
xchg
jne
mov
pop
xchg
mov
and
int3
mov
insl
arpl
sbb
mov
mov
lds
mov
imul
pop
pop
add
mov
mov
mov
pop
gs
clc
gs
mov
lods
in
das
ret
sbb
leave
orl
cmp
outsl
xchg
mov
mov
add
insb
sti
clc
xor
and
mov
lretw
daa
adc
mov
les
insb
jo
mov
fs
ret
loope
into
or
mov
add
testl
mov
int3
scas
addb
negl
jg
fildll
jno
add
inc
dec
jne
or
test
mov
mov
cmpsl
lods
cmc
mov
pop
addb
sarl
add
bound
mov
xor
cmp
add
add
test
add
mov
jns
lea
xor
add
or
sbb
inc
jp
out
lret
sarl
push
cmp
add
mov
stos
aas
lret
cli
jmp
dec
pop
inc
sbb
inc
add
aam
int3
sbb
icebp
sbb
movsb
jecxz
push
inc
cmp
nop
add
add
dec
std
lcall
dec
adc
mov
mov
xchg
ficoms
xor
pop
js
addb
jno
push
adc
or
stc
pop
subl
add
mov
stos
popa
ds
lds
mov
mov
xchg
xchg
xchg
mov
cmp
and
jmp
mov
das
mov
out
inc
add
mov
les
repnz
add
int
mov
mov
push
and
mov
ds
lret
ljmp
add
adc
std
push
xchg
add
xlat
mov
dec
mov
xor
aas
xchg
and
mov
ljmp
loop
mov
cmpsl
xchg
mov
push
je
mov
mov
push
add
outsl
in
cmp
cmpl
fisubl
jns
sti
cmp
hlt
jo
mov
mov
cltd
pop
loop
mov
call
add
mov
add
jmp
test
mov
fldl
stos
movsb
cmp
sbb
imul
add
mov
lahf
sbb
cmp
mov
xlat
add
xchg
push
add
push
pop
adc
mov
add
in
pop
sti
xor
nop
add
adc
lahf
jne
insb
mov
rolb
mov
add
mov
sub
ds
sub
jo
mov
inc
add
aaa
fimull
add
mov
add
aas
mov
idivl
leave
mov
add
mov
add
cltd
xor
addl
rcrl
call
pushf
rolb
mov
add
mov
fildl
xchg
mov
add
cmp
cmp
mov
popf
adc
xor
mov
push
lods
fisubrl
add
jecxz
sbb
xor
mov
cs
pop
rcl
and
mov
and
pop
adc
jecxz
sub
mov
xor
mov
mov
popa
in
or
in
add
sub
xor
mov
ret
aam
aad
xchg
fcmovbe
add
mov
inc
add
scas
push
add
sbb
negl
js
addb
jns
std
rolb
fdivp
mov
mov
push
add
pop
jne
add
mov
mov
add
push
insb
shrl
add
mov
mov
jnp
test
nop
add
sub
pop
inc
add
mov
add
repnz
ds
mov
mov
add
repnz
fisubs
add
jb
mov
add
mov
mov
xor
mov
mov
mov
mov
arpl
mov
mov
mov
bound
mov
rolb
outsb
adc
mov
out
cmpl
jl
pop
shll
pop
jb
mov
imul
out
push
add
enter
mov
out
push
fistps
adc
sahf
cmp
adc
xor
add
dec
cld
das
add
push
out
cmp
scas
mov
int
xchg
ljmp
push
mov
inc
add
add
add
sub
cld
in
loope
dec
ss
xchg
lret
enter
add
clc
xchg
and
pop
add
fadds
and
jae
add
out
jge
movsb
dec
mov
jle
add
rolb
mov
mov
dec
iret
jno
shr
ret
cmp
jb
mov
rolb
mov
add
popf
jp
jecxz
addb
rolb
add
icebp
mov
sti
sahf
std
inc
arpl
lret
mov
imul
xchg
imul
leave
es
stos
dec
push
add
add
mov
aas
mov
bound
mov
and
mov
mov
cmpsl
or
mov
pusha
add
mov
mov
jg
cli
adc
mov
dec
jmp
cmpsb
push
mov
mov
lods
in
sti
or
test
add
pop
jne
divl
add
ficomps
mov
jb
mov
out
lds
sub
adc
add
fsubs
add
mov
out
jbe
cmpsl
imul
push
xor
mov
movsb
mov
mov
jmp
xor
cmove
stc
popf
testb
int3
cmp
insb
xlat
add
jnp
dec
cmc
popf
xor
mov
mov
pop
add
out
add
adc
mov
or
jp
inc
add
leave
fisubrs
outsl
sbb
jle
mov
mov
mov
nop
add
xor
mov
ss
inc
rolb
mov
mov
add
stc
jae
xchg
jbe
add
ja
or
add
inc
popf
push
rolb
loop
mov
aaa
inc
inc
pop
sahf
daa
mov
sub
in
pop
into
push
in
xchg
inc
stos
jmp
imul
adc
add
mov
js
repz
or
push
push
cmpsb
sub
lahf
rolb
divb
js
dec
gs
push
xchg
stos
xlat
xchg
add
sbb
pop
pop
mov
jg
mov
in
or
shll
push
mov
mov
mov
jl
pop
popa
mov
sbb
fldl
add
add
cmpl
sbb
add
adc
mov
add
frstor
mov
sbb
add
inc
pop
push
add
mov
mov
xchg
cmp
mov
sbb
fisttpl
jne
xchg
add
fstpt
mov
mov
sarl
mov
rolb
jp
lcall
loop
mov
add
add
out
or
xchg
mov
jbe
add
pop
add
mov
rolb
mov
jecxz
pop
mov
iret
add
jecxz
out
mov
xor
add
mov
xchg
add
mov
inc
fwait
cmpsb
or
add
pushf
dec
pop
sub
add
adc
mov
add
adc
push
xor
stc
sbb
stc
fldcw
pusha
add
ja
add
mov
fisubs
xor
xor
mov
pushf
or
mov
mov
push
add
fisttps
rolb
mov
jl
add
and
adc
push
mov
mov
in
pop
cmp
mov
adc
mov
push
int3
inc
add
sub
jnp
imul
mov
and
dec
leave
fcmovnb
in
add
mov
stc
ss
scas
mov
mov
out
mov
notb
pop
repnz
xchg
add
xchg
lods
les
mov
adc
int
mov
dec
mov
pop
loopne
mov
ds
insl
mov
mov
mov
call
add
movsl
sti
rep
mov
imul
stos
imull
mov
inc
lcall
ret
or
mov
xlat
mov
not
dec
dec
ds
cmp
xchg
add
popf
cli
and
test
push
fwait
inc
jns
dec
out
add
sbb
jecxz
test
inc
sub
xchg
pop
xchg
fmuls
push
sahf
das
cltd
pushf
push
stos
iret
call
nop
add
add
push
add
roll
iret
mov
mov
dec
add
fsubs
add
movsl
out
jp
fidivl
idivl
pop
outsl
ss
stos
leave
fadds
sub
inc
adc
xchg
xor
xor
mov
mov
in
ret
adc
mov
movsb
xchg
sahf
icebp
pusha
add
add
imul
iret
mov
mov
mov
mov
cld
test
add
pop
in
add
push
mov
lret
mov
jbe
mov
dec
and
jo
mov
andl
les
mov
jmp
mov
mov
pop
xorl
divl
add
ds
and
mov
add
xor
mov
lahf
arpl
scas
pop
sub
out
in
sbb
or
cmc
inc
pop
sbb
imul
add
inc
add
mov
mov
add
and
push
and
add
or
mov
xor
cmp
push
cs
fwait
inc
push
add
cltd
sbb
adc
scas
ret
lods
mov
addr16
and
push
xor
adc
mov
and
mov
cmovl
push
add
push
adc
add
add
add
inc
add
jo
mov
add
dec
scas
adc
add
add
mov
pushf
add
in
add
xchg
mov
dec
mov
or
cmp
xchg
dec
cwtl
imul
rorl
mov
stc
jmp
loope
in
scas
shl
ficomps
lods
xchg
add
ret
xchg
inc
aaa
in
jle
mov
inc
lea
xor
mov
sahf
loop
mov
mov
sbb
add
xchg
mov
test
xchg
add
sub
inc
jo
mov
outsb
and
mov
mov
add
in
xor
mov
cld
or
pop
or
dec
sbb
imul
mov
sbb
add
push
xor
mov
sbb
in
sbb
cmp
repnz
or
cmpsb
cmpsb
pop
pusha
add
aas
rolb
push
es
push
xor
daa
jmp
mov
fwait
testb
xchg
add
jg
and
pop
rcrl
aas
inc
fsubrl
push
mov
mov
pop
lret
ljmp
mov
mov
mov
pop
stos
mov
jge
add
js
mov
ror
lods
loope
scas
insl
cwtl
scas
popa
push
lahf
iret
jp
hlt
out
insb
scas
leave
inc
add
mov
mov
js
popa
mov
cmpsl
push
call
and
push
and
dec
push
stos
xchg
mov
xchg
loop
mov
mov
pop
pushf
test
xchg
fadds
ss
outsb
addb
or
mov
inc
cwtl
push
leave
pushf
mov
sbb
dec
movsb
push
add
iret
outsb
inc
cltd
add
add
xchg
mov
call
add
cmp
rolb
mov
adc
ss
mov
xor
mov
addb
or
std
lock
adc
mov
je
inc
rolb
mov
jecxz
mov
popa
jp
hlt
fidivs
outsl
adc
mov
adc
jne
es
add
jp
out
push
jbe
add
pop
cltd
jge
and
mov
push
nop
add
jae
or
int
jge
lods
hlt
pusha
add
pop
sbb
test
in
int3
nop
add
xchg
add
adc
je
lcall
mov
sub
in
mov
dec
push
xchg
mov
imul
mov
bound
mov
jecxz
lret
dec
test
push
loop
mov
test
arpl
jg
roll
sub
dec
clc
cmp
testb
add
cld
rolb
mov
mov
add
lahf
iret
hlt
out
repz
mov
adc
repz
sbbl
jne
mov
adc
testl
pop
test
fwait
xchg
push
test
divb
dec
push
add
out
cmp
mov
mov
add
mov
add
out
add
inc
int
cmpsl
mov
mov
int3
xchg
pop
icebp
icebp
in
into
repz
stos
nop
add
into
pop
rolb
mov
pop
mov
aas
mov
lahf
push
sbb
push
stc
call
push
inc
or
cmp
sub
std
sti
ret
adc
adc
notl
mov
daa
repz
aas
call
adc
mov
enter
das
ljmp
mov
fldt
rol
add
push
cmpsl
int3
mov
mov
icebp
inc
dec
cmc
arpl
fisubl
in
test
add
cmpsb
xchg
sbb
add
sub
aaa
inc
or
add
lahf
in
inc
xchg
add
add
jl
out
mov
mov
sub
jno
adc
push
repz
nop
add
jecxz
add
add
push
jecxz
pop
dec
add
mov
mov
addb
addl
call
mov
mov
mov
sub
mov
push
movsb
xor
sahf
fwait
std
rolb
orl
xchg
adc
mov
add
xchg
add
add
mov
mov
out
sbb
add
add
test
insl
cmp
addb
sub
and
xchg
mov
mov
mov
mov
and
test
jnp
lret
test
add
hlt
std
mov
add
stos
add
fdivrs
int
sbb
push
add
cmp
pop
nop
add
dec
xchg
int
add
lods
xor
mov
div
pop
add
add
xchg
outsb
in
xchg
rolb
mov
cmp
add
add
pusha
add
push
add
mov
add
mov
leave
dec
mov
inc
pop
sti
aaa
cltd
dec
fldcw
in
sub
and
mov
stos
mov
add
aam
add
push
fistps
ret
addb
testl
push
jmp
adc
negl
sbb
int
arpl
add
fildll
add
mul
xchg
xchg
pop
jmp
les
popa
stc
stos
mov
cmp
add
test
lds
scas
jp
add
or
add
jbe
lret
mov
and
add
in
and
mov
xlat
in
xchg
js
jg
add
jnp
add
lods
lock
repz
sbb
dec
leave
cmp
xorl
pop
mov
dec
repnz
mov
mov
mov
popf
lahf
mov
mov
int3
das
and
rcrl
sub
mov
popf
ja
dec
mov
add
dec
mulb
add
add
add
sub
add
in
test
addr16
or
arpl
add
cmpsb
mov
mov
lret
movsb
shll
and
leave
jae
mov
imul
test
push
pop
mov
iret
sbb
mov
jmp
xchg
jge
addb
push
add
lret
add
dec
pushf
fs
push
push
cmp
mov
mov
imul
sbb
repz
mov
xchg
dec
mov
mov
mov
aam
push
sbb
add
das
cmp
inc
add
jle
lock
gs
fildl
mov
fildl
mov
test
shll
pusha
add
add
jg
jae
push
imul
pop
imul
sub
ljmp
lea
aas
fisttpl
addr16
cli
add
rcr
sahf
in
loop
mov
sub
sub
roll
pushf
jl
sti
int
lret
mov
add
sbb
add
pop
jecxz
push
add
popa
addb
cmp
mov
in
jno
jb
mov
int3
cmp
and
cmp
add
jno
test
pop
push
rcrl
pop
lds
in
fwait
je
add
mov
inc
in
cmp
cmp
add
lock
mov
push
push
add
pusha
add
inc
ss
or
add
lahf
xor
mov
xor
lds
test
xchg
add
add
cmp
icebp
stos
es
insl
scas
fs
mov
aas
ffreep
add
imul
adc
mov
mov
add
cltd
inc
push
add
mov
mov
cmp
outsb
jge
aam
jns
addb
jnp
stos
pop
sbb
int3
out
add
mov
rolb
mov
push
push
or
arpl
push
add
enter
mov
and
mov
cltd
pop
int
shrl
push
push
sbb
pop
imull
jl
sub
add
add
movl
mov
ret
nop
add
cmp
mov
xchg
mulb
mov
mov
fs
lods
xchg
pop
loope
xor
or
push
add
ficoms
add
loopne
mov
cmc
fcoml
ds
lods
daa
or
pop
xor
mov
rolb
jge
add
data16
adc
mov
sub
mov
mov
mov
fs
mov
inc
inc
icebp
add
mov
das
add
test
sbb
xchg
mov
mov
cmp
add
jl
ret
fcompl
push
movsb
pop
insl
jg
xchg
add
sub
mov
mov
or
add
mov
push
rolb
cmpsb
jl,pt
sbb
mov
lahf
mov
add
xchg
adc
sbb
mov
sub
or
rolb
mov
dec
cmp
add
pop
jno
jmp
imul
aam
add
in
ja
push
cs
in
xor
popf
loopne
mov
lods
stos
cwtl
add
mov
add
add
adc
mov
ja
out
add
jbe
and
jl
add
jbe
je
mov
inc
add
mov
jl
scas
push
nop
add
mov
pop
xchg
ret
xchg
loopne
mov
ret
addb
aam
lea
mov
pop
lcall
sub
add
divb
mov
jp
fistps
add
js
scas
out
je
fcmovne
arpl
jae
inc
pop
xchg
scas
gs
inc
add
pop
filds
add
xchg
mov
and
mov
push
xchg
push
cli
lock
add
mov
add
lods
xor
into
mov
ret
loopne
mov
cld
jle
add
pop
rolb
inc
add
mov
iret
daa
add
out
pop
pop
mov
add
jmp
pop
xor
ss
arpl
push
add
mov
xor
movsl
xchg
pop
pop
mov
xor
mov
add
and
ret
push
add
orl
and
sub
jle
out
xchg
rcll
lret
adc
add
mov
lock
fistl
jmp
iret
jle
subl
mov
xchg
add
int3
outsb
outsl
mov
fmull
addr16
push
add
fsubrp
push
xchg
add
testb
aas
repnz
mov
mov
in
scas
repnz
ss
fcmovnu
inc
add
mov
stos
mov
scas
mov
and
mov
adc
mov
cwtl
jne
add
add
arpl
add
add
sarl
sahf
sbb
xchg
xlat
rolb
xor
inc
out
push
add
insl
sbb
add
iret
adc
xchg
pop
sahf
notl
loopne
mov
icebp
cmpsb
xor
mov
mov
dec
or
sahf
push
jl
sti
fcompl
test
add
fs
dec
or
fstpl
movsb
jge
mov
dec
sbbw
and
test
inc
idivb
push
and
enter
daa
lret
xor
test
add
dec
push
ss
cmp
inc
lods
movsl
dec
lds
mov
push
lods
jno
test
pop
push
addb
movb
sub
adc
jo
mov
arpl
jge
or
lret
aaa
scas
imul
xor
inc
pop
mov
push
pop
inc
es
insb
or
sbb
addb
addb
fs
xchg
aas
ret
jecxz
or
add
mov
add
mov
mov
sub
inc
mov
fbstp
aas
icebp
cmp
sbb
mov
or
sbb
push
in
int
fbld
mov
mov
ficoml
push
dec
aaa
ljmp
test
inc
add
mov
add
mov
xor
push
add
jle
add
pop
mov
jo
mov
mov
add
stos
jecxz
mov
insb
rolb
mov
xchg
lea
lea
add
popa
dec
mov
test
or
jg
and
add
aad
lret
scas
lods
rcll
call
add
mov
add
fsubs
insb
inc
sbb
jp
add
jp
pop
ds
mov
int3
add
fildll
push
scas
adc
mov
add
push
push
inc
std
bswap
push
add
mov
addb
scas
out
ja
xor
mov
inc
add
add
es
mov
inc
movsl
mov
push
mov
fst
add
or
das
adc
jo
mov
add
mov
addb
inc
add
xor
loop
mov
mov
lcall
mov
xchg
sbb
dec
nop
add
shrl
int3
stos
sahf
in
sub
add
add
add
pushf
push
adc
movsl
neg
addb
cwtl
rolb
mov
add
inc
add
sub
sbb
sub
sahf
add
mov
bts
add
jno
and
arpl
repz
insl
cmp
ficompl
js
add
add
mov
lret
inc
add
cs
stos
test
add
mov
add
popa
jecxz
es
lcall
sbb
sub
mov
pop
xchg
dec
jo
mov
rolb
mov
add
push
rolb
mov
sbb
mov
pop
mov
int
sbb
rcll
xchg
or
dec
scas
pushf
scas
xor
out
hlt
insb
mov
ret
insl
mov
dec
loope
adc
sbb
lret
aam
push
arpl
sub
sbb
icebp
mov
bound
mov
mov
rol
mov
add
sbb
imul
clc
gs
jne
inc
inc
mov
add
loope
sbb
daa
sbb
adc
sub
sub
push
mov
add
mov
add
pop
test
int
lods
sbb
dec
or
inc
movsl
xchg
mov
sbb
divl
ljmp
push
add
dec
mov
sti
clc
mov
mov
mov
jp
inc
jo
mov
adc
mov
add
les
loopne
mov
add
add
jecxz
add
add
cmp
and
mov
divl
mov
aaa
mov
lahf
adc
mov
sub
fs
sahf
add
sahf
push
sbb
mov
dec
enter
mov
scas
mov
mov
ss
add
ds
loopne
mov
add
mov
add
pminub
iret
hlt
fisubs
inc
popf
or
outsb
imul
ljmp
add
sarl
mov
mov
mov
out
mov
arpl
add
arpl
add
imul
insl
pop
cmp
in
inc
dec
dec
inc
repnz
push
add
mov
adc
fld
mov
rolb
pop
xor
aas
cmp
fldenv
jge
jae
sbb
jle
mov
movsl
adc
mov
negl
cwtl
out
iret
push
insl
sbb
or
stos
add
jnp
stos
stos
dec
xor
loope,pt
rolb
mov
sub
mov
push
add
mov
cs
mov
dec
in
or
mov
and
adc
lahf
cmc
inc
je
mov
mov
movsb
rolb
mov
cld
mov
and
mov
mov
cmp
enter
sub
add
addr16
push
xlat
xor
sbb
rcr
icebp
xor
lret
jbe
push
add
ret
je
das
push
aad
mov
mov
push
movsl
arpl
xor
mov
jno
pop
faddl
add
add
mov
ret
popf
sub
and
movsb
add
mov
stos
imul
mov
leave
pop
add
mov
push
lret
fnsave
bndldx
ret
xchg
int
sub
xlat
in
push
pop
rcrl
fwait
jge
add
add
sbb
enter
mov
divb
bound
mov
cwtl
das
push
mov
inc
add
inc
sbb
mov
mov
js
outsl
xchg
dec
add
or
aad
loop
mov
mov
addb
sbb
push
es
mov
lods
jl
push
xchg
jo
mov
in
imul
xor
add
add
pop
addr16
pop
mov
mov
std
sbb
sbb
sbb
dec
inc
add
and
mov
push
test
mov
cmp
lods
and
mov
add
add
add
or
int
add
pop
adc
add
imul
push
inc
js
sbb
icebp
sbb
xchg
loope
in
cltd
fadds
mov
dec
test
das
stos
xchg
inc
add
push
sbb
add
mov
add
jg
push
imul
leave
mov
inc
jne
int3
push
lret
imul
jo
mov
add
push
add
and
std
and
mov
push
xchg
cmp
mov
mov
sti
cmp
xor
mov
imul
add
add
pop
or
lds
mov
mov
push
add
mov
movsb
sbb
dec
pop
xchg
dec
mov
or
mov
rolb
lret
mov
mov
dec
sbb
xchg
insl
mov
or
insb
add
addb
pop
loopne
mov
insb
fnstsw
ficompl
insb
stos
mov
add
jb
mov
aaa
cltd
or
add
mov
into
pushf
fisubrl
adc
mov
mov
or
in
and
or
pop
mov
cmpsl
xor
sahf
js
mov
sub
addb
inc
push
mov
mov
cld
stc
push
sahf
fsubrl
xorl
add
movsl
mov
cmpsb
mov
cmp
int
cmp
aas
sub
mov
add
xchg
jne
cmp
mov
bound
mov
loope
lcall
fildll
or
xor
popa
dec
lock
xor
popf
data16
jge
ss
or
and
mov
mov
pop
jno
repnz
and
mov
mov
add
int3
adc
push
stc
insl
sbb
jb
mov
mov
mov
outsl
lds
hlt
mov
mov
jns
sti
imul
mov
or
outsl
test
add
push
push
out
sbb
add
fidivrl
cmp
add
push
std
ret
ret
sbb
add
icebp
aad
push
in
sub
dec
mov
ret
pop
scas
mov
push
mov
sahf
sahf
in
add
mov
enter
push
push
xchg
push
adc
sub
jl
data16
add
add
push
and
mov
ret
in
add
inc
dec
pop
sub
add
fmul
aam
or
jo
mov
push
push
sbb
add
call
xchg
add
dec
in
mov
mov
jp
dec
icebp
mov
mov
mov
xchg
jns
push
pop
xchg
clc
push
add
add
jg
ljmp
jbe
add
fwait
je
xor
mov
sub
and
mov
xchg
scas
mov
xchg
addb
leave
xor
mov
mov
add
lcall
inc
xchg
inc
push
add
aaa
and
sti
push
popa
mov
push
xchg
mov
mov
roll
mov
dec
sub
out
xchg
rolb
ds
xchg
dec
cmpsl
lret
dec
cmp
pop
scas
push
push
cld
aad
mov
dec
dec
mov
mov
out
push
mov
add
rolb
mov
mov
cli
or
popa
xchg
ljmp
mov
and
mov
mov
xchg
xor
aad
fiadds
add
cmp
add
or
push
xchg
add
xchg
pop
mov
xchg
add
pop
addl
push
call
add
ljmp
add
mov
dec
mov
add
inc
xor
cmp
inc
add
dec
add
mov
push
add
mov
test
xchg
fwait
arpl
cli
mov
call
mov
movsb
out
cmpsb
dec
jmp
add
inc
add
clc
stos
ret
hlt
div
sbb
pop
mov
mov
cld
test
push
inc
add
jp
aad
adc
mov
adc
out
dec
sub
test
add
push
add
mov
sbb
xchg
sub
cltd
push
icebp
cwtl
sub
adc
mov
jo
mov
pop
pop
leave
movsbl
push
add
scas
jnp
xor
mov
xchg
aad
add
ds
popa
test
fmuls
mov
insl
js
aad
cmp
jle
jne
push
cmp
ret
aas
call
push
aam
add
push
inc
jbe
add
test
add
mov
imul
addl
add
cli
adc
mov
jo
test
mov
pop
sbb
add
lds
cmpl
cmp
xchg
cli
addb
lods
or
aam
push
add
outsl
movsb
pop
cmp
notb
mov
sbb
cmpsb
sbb
or
lods
pop
clc
cmpsb
outsl
jbe
into
cmp
roll
and
fs
sbb
add
repz
in
ds
mov
sti
sbb
imul
xor
gs
test
jne
and
xchg
xlat
add
or
cld
mov
mov
add
sbb
pop
inc
out
divl
mov
ffreep
add
stc
fwait
pop
mov
mov
scas
repnz
inc
lods
out
mov
xchg
jmp
int
stos
lods
sbb
pop
leave
inc
lods
jae
je
sub
xor
popf
test
sbb
jbe
lahf
nop
add
test
add
jp
xchg
or
ljmp
loope
movsb
sbb
lock
int
xchg
div
add
mov
jle
data16
mov
xchg
sahf
push
jge
mov
push
add
mov
inc
pusha
add
leave
rolb
mov
pop
out
test
out
adc
mov
rolb
mov
aad
pop
out
add
scas
mov
cmpsl
cltd
add
scas
icebp
mov
je
daa
dec
mov
shl
add
mov
lcall
sub
lret
mov
add
jl
add
add
mov
out
push
push
repz
addb
xlat
fnsave
jo
mov
repz
or
add
mov
mov
sbb
xchg
add
mov
sti
jb
mov
roll
add
cmpsb
adc
mov
repz
adc
lock
stos
out
xlat
jns
mov
aad
mov
mov
mov
sub
sub
jno
shll
mov
mov
scas
sbb
ja
mov
dec
mov
mov
std
in
jge
jns
imul
sahf
sbb
xchg
insl
lods
call
fldl
push
movsb
divb
adc
mov
xlat
insb
mov
sbb
scas
sub
out
and
mov
jp
add
mov
sbb
sub
add
inc
xchg
adc
mov
adc
mov
adc
sbb
xor
outsl
jno
xchg
and
mov
cmc
push
and
pop
gs
push
sub
fnstcw
sbb
inc
fidivrl
fwait
bound
mov
xchg
enter
xchg
in
cmpsl
mov
add
xchg
outsb
mov
mov
mov
add
sbb
orl
pushf
mov
sbb
jmp
es
xchg
or
insl
mov
cwtl
and
test
mov
jns
xor
out
pop
xor
lret
push
dec
mov
pop
arpl
cmpsl
xor
push
jno
repz
xor
mov
inc
add
out
push
mov
mov
out
js
mov
add
loop
mov
add
mov
outsl
xor
add
lahf
popa
test
movsb
arpl
cmc
clc
mov
xor
push
inc
pop
mov
ja
jo
mov
lods
adc
add
jo
mov
dec
cmp
xchg
add
mov
sub
addb
xor
addb
jg
das
imul
ljmp
add
mov
add
mov
push
in
fcoms
add
leave
out
push
sub
fmuls
int3
mov
mov
or
sti
pop
mov
mov
mov
adc
or
cwtl
jb
mov
xchg
add
out
push
movsb
cwtl
imulb
and
or
or
test
pusha
add
mov
fwait
sub
loope
xor
adc
add
adc
add
clc
add
pop
xlat
mov
push
xchg
xlat
push
add
mov
mov
nop
add
lods
flds
mov
aam
nop
add
mov
add
add
mov
sub
xor
and
mov
add
add
hlt
sti
add
xchg
xor
inc
jle
fsubl
add
sub
out
sahf
cmp
pusha
add
mov
lock
nop
add
inc
aad
cli
add
mov
aaa
mov
add
mov
adc
cmp
xor
and
mov
sbb
fildll
add
mov
ja
jne
rolb
mov
add
and
ffree
pop
in
aam
insb
int
roll
mov
sbb
mov
fistps
xchg
push
inc
es
in
xor
ds
divl
std
lcall
outsl
aas
iret
cmpsb
jle
add
rolb
adc
pop
sbbl
cs
or
repz
in
push
sbb
leave
int3
xchg
fnstsw
add
mov
mov
les
jne
xor
push
aam
jmp
add
xchg
push
add
ljmp
xchg
cltd
push
add
xchg
add
mov
sbb
add
mov
add
add
sbb
mov
xor
mov
cmp
sub
jl
jg
jmp
inc
stos
cmp
cltd
sub
push
cmp
dec
pushf
pop
pop
push
push
push
xchg
shrl
pop
lret
fucomip
js
jg
mov
mov
xchg
scas
mov
add
and
aad
movsl
nop
add
shrl
pop
arpl
jge
add
call
pop
dec
and
jb
mov
or
xchg
add
pop
inc
pop
subl
inc
sbb
fdivrp
bound
mov
mov
cwtl
inc
push
ret
imul
lods
pop
insl
addr16
mov
mov
push
lock
add
sahf
and
mov
loopne
mov
addb
inc
add
mov
daa
inc
scas
jle
inc
fmulp
mov
outsb
adc
cmp
add
add
lock
mov
aam
loope
lods
push
popf
ss
pop
xlat
insl
mov
xchg
push
mov
stos
jecxz
add
dec
add
mov
inc
sub
dec
xchg
sub
sbb
xchg
push
dec
aaa
sbb
hlt
insb
fdivl
insb
inc
cmp
scas
je
cmp
cltd
es
add
xchg
addb
fldcw
mov
add
std
popa
and
add
insb
mov
mov
push
in
mov
add
mov
enter
push
add
mov
notb
add
add
mov
add
mov
add
ss
cld
mov
fs
jnp
scas
cld
movb
lock
leave
int3
sbb
add
rorl
and
add
mov
and
mov
mov
jae
test
pop
cmp
cmp
rolb
or
or
mov
scas
rcrl
cmp
push
addb
jb
mov
sbb
arpl
jne
cs
mov
mov
rolb
mov
lock
xchg
add
xor
mov
mov
mov
mov
xor
mov
or
add
mov
aam
loopne
mov
int3
imul
mov
xor
pop
cwtl
xchg
add
out
inc
add
mov
add
xchg
inc
add
clc
inc
sub
or
xor
mov
adc
add
fldenv
add
test
xchg
mov
outsl
les
mov
aaa
xchg
lods
xchg
jo
mov
mov
pop
clc
test
mov
jge
jle
sbb
js
mov
cmpsl
data16
je
nop
add
cmpsl
fbstp
addr16
iret
test
sub
or
dec
aas
mov
es
add
imul
aad
test
mull
push
or
jge
out
adc
mov
in
jno
add
mov
aaa
sub
sbb
mov
sub
jae
repnz
jl
outsb
jns
ror
iret
mov
or
sbb
jae
dec
add
insb
cmp
addb
rolb
mov
or
push
movsl
push
or
movsl
or
mov
dec
mov
add
jo
mov
xchg
add
add
xchg
add
rolb
ret
inc
cmpsb
sahf
push
loope
sub
adcl
movsl
sti
pusha
add
and
push
add
mov
in
add
add
fstl
adc
mov
sbb
add
inc
add
xor
jmp
mov
push
add
sub
rolb
pminub
das
add
mov
into
push
lock
or
je
movsb
mov
test
add
repnz
lods
out
bound
mov
pop
cmc
pusha
add
mov
mov
adc
pop
add
stc
lret
or
mov
add
mov
add
mov
add
fmuls
scas
divb
fsubr
cmp
add
imul
shll
add
nop
add
cmp
stos
call
and
mov
jle
enter
add
add
popf
mov
nop
add
sbb
roll
mov
or
rolb
mov
add
cltd
jp
add
add
bound
mov
inc
subl
imul
jmp
sub
pop
inc
cs
inc
add
scas
jno
daa
add
mov
sti
jg
mov
call
mov
jno
mov
sbb
aam
xchg
add
mov
aam
mov
inc
mov
push
add
lret
sbb
mov
jmp
dec
nop
add
mov
xchg
sub
dec
fs
or
add
xchg
dec
enter
add
pop
int3
and
insl
enter
aas
dec
and
mov
sbbl
std
pop
mov
clc
jle
jp
inc
mov
leave
lret
aad
add
add
loopne
mov
push
test
jno
lds
mov
mov
test
addb
movb
mov
add
inc
mov
add
mov
jns
adc
dec
data16
xor
jno
push
icebp
imul
inc
dec
adc
mov
cld
das
lods
mov
mov
or
aas
int
pop
in
out
mov
mov
add
jle
roll
add
mov
dec
cmp
add
mov
pop
rolb
mov
enter
xchg
jns
lods
loop
mov
mov
sbb
adc
adc
xchg
adc
in
adc
mov
dec
dec
xchg
fdivp
add
movb
pop
mov
adc
mov
mov
cmpsb
jge,pt
enter
xchg
add
or
sarl
add
mov
push
and
mov
add
jb
mov
sub
push
sub
jae
or
in
cli
jle
sub
jp
ds
pop
cmp
mov
fmull
hlt
fstpt
das
inc
inc
add
mov
sbb
test
mov
xor
add
inc
and
jb
mov
add
mov
loope
and
mov
das
mov
mov
lea
mov
pop
js
or
mov
mov
mov
add
mov
pop
stos
filds
pushf
sub
outsb
andl
scas
in
aaa
fwait
xor
and
mov
shll
add
mov
jmp
das
xchg
add
xor
dec
fildll
mov
pop
pop
aas
sti
jae
push
xchg
cld
stos
mov
jnp
push
enter
dec
push
mov
in
popf
push
hlt
sbb
call
dec
xor
dec
fisubl
add
add
xchg
aam
addb
mov
push
jge
xchg
dec
int
jp
sub
add
imul
add
cmpsl
mov
add
lods
push
cld
repnz
rcrl
add
out
je
and
mov
xchg
add
mov
sahf
xchg
out
loopne
mov
xchg
test
test
cmp
mov
fdivrl
pop
rcl
das
dec
test
pop
sbb
cli
and
mov
add
pop
std
addr16
push
ds
adc
mov
add
insb
ja
pop
sub
insl
cmp
mov
xchg
add
jecxz
lret
mov
add
mov
cmp
add
add
sbb
mov
mov
rolb
mov
mov
movsl
loop
mov
lock
loope
hlt
cmp
add
mov
mov
leave
decl
sub
sahf
notl
mov
xchg
push
lock
test
add
add
push
imul
cmpsl
and
mov
rolb
mov
cmpsl
mov
das
inc
or
add
sbb
cmp
cmpsl
xor
test
sbb
inc
jno
das
xor
cmp
mov
call
adc
mov
pop
dec
pop
imul
cmp
add
add
add
lret
mov
add
addb
xchg
sar
jne
add
inc
aaa
inc
fisttps
or
out
loope
addr16
xchg
add
inc
add
push
imul
mov
add
call
sti
sub
dec
fsts
xor
mov
lret
mov
xor
aaa
adc
dec
stos
jno
dec
push
dec
mov
mov
mov
add
pop
out
mov
pushf
in
add
and
outsb
pushf
and
mov
add
add
add
push
sbb
and
incb
movl
or
add
mov
fs
and
mov
mov
sub
mov
inc
xor
inc
pop
fimuls
xchg
jge
jmp
push
test
add
jne
add
inc
scas
fstpt
shr
out
test
sbb
ljmp
mov
xor
mov
addr16
pop
ds
enter
and
add
sub
sbb
sahf
mov
mov
jns
mov
mov
sub
test
xlat
xchg
fdivr
push
rolb
mov
add
jae
stos
push
add
add
mov
jnp
les
cmp
xchg
jl
xchg
jmp
movsb
rolb
mov
ljmp
addb
xchg
jp
push
add
mov
movsb
xchg
add
pop
fs
iret
aam
das
scas
fdivr
lea
dec
mov
mov
lock
test
add
and
mov
or
add
jg
mov
lock
sub
sub
adc
sti
push
psubq
jns
add
xchg
inc
push
jnp
push
cs
loop
mov
push
mov
mov
bound
mov
mov
int
lret
test
cli
jle
jae
xchg
mov
lahf
add
mov
sahf
dec
push
out
sbb
je
dec
xchg
pop
sub
mov
add
loop
mov
jno
inc
add
shr
loop
mov
add
jo
mov
mov
ja
pop
xlat
cs
mov
movsl
sti
fdivrl
and
mov
mov
pop
shll
ss
aad
add
mulb
rolb
mov
add
and
cmp
add
out
arpl
mov
sub
and
mov
mov
movsl
test
int
mov
rolb
mov
inc
jno
ficoml
add
cmpl
pop
ret
mov
and
fdivr
ljmp
sub
leave
lock
filds
add
lahf
mov
mov
add
and
mov
test
cmc
mov
mov
sbb
popf
loop
mov
xchg
les
call
int3
push
pop
mov
icebp
mov
add
into
decb
insl
lea
sbb
sbbl
jo
mov
adc
cmp
add
addb
jg
cmpsl
arpl
mov
mov
add
fnstcw
add
iret
fdiv
fmull
xchg
add
pop
mov
lss
mov
push
leave
into
sbbl
push
xadd
mov
mov
hlt
sub
push
es
cmp
add
mov
outsl
jecxz
add
scas
push
add
mov
mov
mov
insl
stos
ja
stc
out
fnstsw
cmp
push
push
out
xchg
cmpl
std
xchg
imul
test
add
inc
addb
pop
fisttps
ret
sbb
movsb
stos
add
mov
aam
cmp
push
jno
and
add
mov
jne
shll
add
pop
mov
xlat
adc
fucomip
adc
mov
sbb
test
into
and
add
xchg
add
ljmp
mov
mov
inc
push
or
jge
and
mov
mov
jg
sub
pushf
mov
adc
add
xchg
cwtl
subl
ret
xchg
mov
inc
add
sbb
insb
clc
sbb
push
jno
rolb
mov
mov
mov
sub
or
or
xchg
jp
in
xchg
je
sahf
enter
mov
xor
add
movsl
pop
clc
adc
add
out
aad
add
call
add
or
mov
mov
mov
sbb
xchg
add
mov
dec
data16
test
mov
add
jae
sti
mov
pop
sub
mov
rolb
mov
add
cmpsl
test
pop
aam
or
rolb
mov
pop
cmp
add
push
dec
jbe
test
pop
xor
fwait
lret
insl
dec
movsl
push
and
xor
loopne
mov
sbb
aas
bound
mov
add
adc
or
dec
sti
push
mov
xchg
add
pop
jo
mov
pop
jmp
nop
add
push
add
mov
in
sub
add
add
mov
cmp
mov
jb
mov
add
cltd
dec
jns
push
mov
or
rolb
mov
pop
addb
out
xor
jge
adc
and
add
ss
lahf
repnz
add
mov
in
imul
mov
testl
call
or
std
xchg
int
in
fs
outsb
or
fadds
sbb
lods
xchg
fcmovb
and
lcall
and
sbb
or
jge
add
add
adc
add
mov
imul
add
pop
jo
mov
dec
pop
adc
add
adc
mov
add
or
cmc
iret
sub
add
push
pop
pushw
mov
mov
loopne
mov
and
addb
gs
scas
je
lahf
in
lock
lret
mov
mov
imul
add
xor
jg
sub
xchg
dec
xchg
cmp
daa
js
addb
test
cltd
hlt
cmp
cmp
add
dec
adc
mov
and
dec
xor
jmp
inc
mov
call
adc
andl
mov
pop
jge
loop
mov
xchg
push
add
aam
negl
aas
jp
dec
pop
ss
cmc
jmp
xchg
sbb
daa
dec
pop
jb
mov
mov
ret
test
imul
out
fsubrp
cmp
fldl
cs
mov
outsl
addb
js
sbbl
add
adc
cli
das
xchg
add
pusha
add
jmp
mov
repz
push
pop
dec
sbb
dec
pop
or
sqrtps
setbe
clc
pushf
addb
mov
push
sbb
imul
add
cmp
xchg
lock
test
jnp
mov
or
add
xchg
add
add
cmpsb
inc
add
mov
add
and
mov
xchg
or
out
sbb
xchg
loopne
mov
sub
pushf
or
xor
mov
test
add
xchg
mov
inc
xchg
movsl
adc
xor
mov
mov
jbe
cmp
cmp
inc
inc
ja
xlat
lds
dec
adc
mov
les
iret
sub
sub
std
roll
ret
pop
pop
xlat
add
add
cmpsb
imul
mov
sar
out
pushf
aaa
loopne
mov
push
pop
loope
fs
out
mov
adc
mov
test
push
rolb
push
outsb
test
lods
sub
add
or
pop
gs
adc
lcall
lods
and
mov
add
mov
inc
sbb
sbb
fstpt
mov
mov
mov
dec
ficomps
pop
inc
or
cmc
xlat
sub
push
lret
mov
jl
inc
add
insb
pop
xor
aaa
jl
mov
mov
mov
add
addb
jnp
mov
pop
push
jnp
scas
adc
dec
clc
or
mov
add
mov
leave
call
jl
in
add
mov
mov
sahf
test
inc
add
mov
in
daa
xor
mov
rolb
dec
and
push
test
aad
lret
xchg
test
movsb
mov
outsb
adc
mov
insb
out
sub
loopne
mov
xor
rolb
mov
mov
cmpsb
lds
sub
ds
dec
lahf
mov
lods
leave
push
cmpsb
push
out
je
cmp
inc
jp
mov
add
mov
pushf
push
add
pushf
div
inc
aas
dec
iret
nop
add
mull
inc
add
xchg
add
mov
adc
jecxz
lret
mov
iret
pop
pop
pushf
mov
push
dec
flds
dec
fidivrs
mov
xor
add
add
cltd
mov
sub
daa
push
pop
fiadds
mov
add
push
sub
jb
mov
cltd
icebp
stos
inc
mov
cmp
fstps
test
add
imul
and
stc
pusha
add
lret
aam
add
jecxz
mov
dec
inc
pop
mov
mov
add
jle
add
push
add
add
xor
mov
add
cltd
mov
jp
mov
add
add
cmc
sbb
add
rcrl
call
or
jle
mov
scas
add
mov
add
xchg
ljmp
xchg
inc
and
or
add
add
das
mov
inc
jge
stos
and
or
jle
adc
repz
mov
fwait
push
cmp
fstpl
mov
movsb
adc
stos
loop
mov
mov
xchg
add
mov
mov
aam
inc
add
sbb
mov
mov
push
mov
jl
push
hlt
cmp
mov
scas
out
adc
mov
xchg
adc
pop
adc
jns
or
adc
add
add
add
cwtl
mov
stos
rolb
mov
mov
xchg
mov
mov
dec
popf
mov
mov
cwtl
bound
mov
pop
push
test
cltd
cmpsb
sbb
sub
sbb
jns
xchg
add
add
ds
cmp
aaa
xor
out
call
jbe
cmp
rorl
faddp
add
jge
xchg
mov
add
mov
mov
or
mov
cmp
test
pop
jp
pop
pusha
add
cmp
addb
repz
adc
mov
mov
add
mov
mov
add
mov
rcrl
add
mov
add
shrl
rolb
mov
sahf
lret
pop
repz
or
xchg
iret
or
nop
add
lcall
lea
pop
xor
push
fstp
inc
std
movsl
es
mov
mov
testb
fisubrs
mov
testl
mov
pop
in
cmp
imul
stc
jp
cmp
xchg
cmp
mov
std
and
mov
lret
loope
adc
push
int
add
test
dec
imul
pop
lea
sub
out
pop
movsb
add
pop
and
and
movq
add
pusha
add
fs
loope
add
aad
push
insl
jns
inc
sub
cmp
iret
mov
daa
rolb
mov
jae,pn
push
xchg
xor
mov
add
mov
sbb
bound
mov
std
push
push
dec
add
mov
test
and
roll
fs
dec
inc
add
sahf
mov
addb
into
fisubrl
and
mov
into
ds
add
stos
mov
xchg
rolb
mov
add
add
rolb
lea
cmpsl
aam
sub
ret
fwait
out
and
xchg
sub
mov
add
ret
dec
jnp
push
add
loop
mov
xchg
dec
or
add
std
push
fmul
cmp
out
out
popf
paddq
mov
add
incl
adcl
rolb
lock
mov
push
insl
insb
xchg
es
pop
aad
into
inc
fcoml
mov
ret
mov
scas
mov
arpl
mov
add
test
dec
mov
fucom
push
daa
sub
mov
add
mov
cld
sub
jp
clc
rolb
mov
add
add
cmc
push
push
mov
leave
lahf
pop
out
pop
ret
and
mov
lods
pop
cli
jl
mov
rcll
adc
dec
pop
and
test
cmpsl
int
jbe
movsl
scas
jmp
mov
es
into
shrl
daa
xchg
add
add
add
jae
adc
mov
mov
mov
push
adc
mov
dec
lods
ss
icebp
pop
cvttps2pi
jmp
push
dec
or
mov
mov
ret
mov
add
push
divl
mov
call
stos
xor
mov
fcoml
mov
dec
notb
mov
add
cmp
fsubp
insl
sub
add
arpl
mov
jle
dec
jnp
ljmp
in
lret
sbb
cmp
hlt
aaa
addb
roll
add
sbbl
aaa
rcll
mov
jmp
loope
mov
mov
add
jecxz
and
mov
and
mov
add
rolb
mov
mov
inc
les
aam
add
mov
add
mov
cmpsl
gs
std
lcall
mov
dec
jno
xchg
repnz
add
mov
pop
pushf
add
mov
repz
pop
mov
add
xchg
mov
mov
inc
add
add
and
ds
mov
stc
mov
out
xlat
pop
mov
and
addb
sbb
sbb
mov
mov
cmp
add
je
jne
add
xlat
mov
add
je
jo
mov
xor
add
lods
mov
pop
add
mov
stos
lock
add
adc
add
mov
jecxz
push
add
mov
add
add
je
jno
in
in
jmp
jnp
daa
push
add
sub
scas
xchg
in
pop
mov
insl
dec
shrl
inc
add
fsubs
and
ljmp
mov
add
mov
or
fs
add
out
cmpsl
int3
push
and
mov
lock
loopne
mov
push
add
add
add
cmpsl
je
inc
cmc
xor
gs
idivb
lret
jl
inc
add
sbb
ss
jne
mov
insl
outsb
aam
mov
mov
mov
jmp
and
into
inc
add
xor
mov
dec
inc
dec
sti
lds
scas
xchg
add
out
popf
dec
psrlw
add
ret
je
dec
add
add
or
add
jns
adc
push
pop
daa
add
out
in
or
xchg
cmpsb
outsb
dec
inc
xchg
add
ljmp
out
sub
lea
mov
daa
mov
dec
hlt
xchg
add
mov
push
scas
mov
adc
mov
mov
aad
daa
js
lock
jne
cld
hlt
movsb
test
add
mov
int
add
add
cld
cmpsb
ret
fldz
and
mov
ljmp
into
jno
in
add
aas
mov
add
adc
lds
popf
stos
cmpsw
push
add
push
add
mov
fsubrl
jb
mov
xor
xchg
int
cmp
fldt
cmp
fwait
loope
add
sbb
cmp
or
icebp
aas
mov
mov
add
das
insl
rolb
mov
inc
cltd
sbb
out
jb
mov
add
mov
mov
push
test
add
pop
outsb
and
add
mov
movb
lods
mov
xor
mov
mov
enter
arpl
std
out
inc
add
dec
popf
lds
mov
fwait
js
mov
in
ja
inc
icebp
add
bound
mov
scas
rolb
or
add
mov
cltd
add
mov
repz
jg
fistl
int3
jl
pop
xor
in
loop
mov
xor
mov
xchg
pop
lcall
scas
ljmp
add
insb
aad
or
mov
pop
cwtl
mov
mov
lods
out
adc
mov
mov
xor
mov
mov
push
or
push
and
jb
mov
mov
mov
mov
mov
mov
test
ret
jecxz,pn
add
add
daa
push
sbb
sahf
out
push
stos
pop
inc
add
aaa
push
add
lds
add
loopne
mov
mov
jmp
pusha
add
xchg
test
mov
in
add
ja
je
out
jno
loop
mov
jp
xchg
sub
ljmp
lds
add
lcall
movsb
or
xor
add
xor
push
mov
mov
inc
dec
je
mov
add
push
scas
xchg
add
xchg
inc
or
add
add
dec
insl
mov
and
mov
mov
leave
les
add
mov
pop
and
mov
dec
or
jl
scas
addb
das
pop
dec
or
push
mov
mov
mov
mov
cltd
clc
inc
add
dec
adc
mov
stos
pop
sub
xchg
pop
push
js
cmpsl
sub
mov
add
mov
cmpsb
addb
xor
mov
lahf
in
or
mov
dec
jns
sbb
add
aad
jo
mov
into
in
xor
mov
outsb
xor
adc
add
mov
push
decb
cwtl
out
push
cmp
pop
push
in
xor
mov
fucom
adc
mov
cmp
and
test
pop
adc
mov
test
lds
ret
dec
sub
ja
les
add
push
sub
add
in
cmp
add
mov
mov
adc
mov
add
add
xchg
cmp
mov
int3
lcall
add
inc
ljmp
add
pop
insb
cmp
xchg
xchg
cs
add
dec
sub
sahf
pop
inc
bound
mov
cwtl
shll
cmc
adcl
mov
jge
je
and
roll
mov
lods
sub
mov
add
mov
mov
pop
jmp
add
add
xchg
mov
add
lea
pop
mov
add
dec
xor
stos
mov
mov
mov
mov
fcompl
rorl
ljmp
mov
mov
add
pop
jecxz
jl
cwtl
sti
and
mov
outsl
int3
mov
add
sub
bound
mov
aas
cmp
mov
xor
adc
mov
mov
pop
mov
mov
add
push
push
repz
mov
add
pop
movsl
test
add
rcrl
or
popf
or
xchg
pop
les
cmp
cmp
das
xchg
sub
bound
mov
mov
dec
hlt
sahf
fildl
mov
inc
mov
mov
into
inc
imulb
or
addb
lea
jae
dec
mov
add
shll
add
add
xchg
test
pop
push
xchg
mov
sahf
xor
cmp
mov
pop
push
mov
stc
sbb
fwait
sub
cld
es
mov
push
add
xchg
leave
addb
lea
jecxz
mov
add
adc
mov
xor
xchg
cld
lods
and
sti
xchg
sub
addr16
test
mov
ret
cmc
lahf
cmpsb
cmp
add
cmp
mov
mov
mov
push
sarl
add
dec
cmp
add
movsb
and
mov
mov
test
push
fisubrs
add
mov
es
mulb
add
loope
ret
int3
push
rorl
mov
inc
xor
mov
addb
movsl
idiv
ret
fwait
add
mov
jecxz
xchg
add
aad
cmp
nop
add
inc
xor
mov
into
ljmp
mov
jne
jo
mov
mov
movsb
cmp
cli
sub
and
add
and
add
movl
inc
leave
adc
xchg
dec
add
add
ja
hlt
mov
push
push
dec
fnstsw
fs
add
int3
jp
popf
jecxz
add
fisubs
es
push
pop
stos
push
lahf
sti
loop
mov
lods
std
das
dec
stos
or
dec
sbb
pop
aaa
je
or
jmp
push
stos
inc
out
hlt
sbb
mov
test
fiadds
sbbl
out
dec
mov
hlt
inc
push
xor
repnz
pop
lock
adc
mov
movb
stos
push
repnz
fistps
add
mov
and
mov
mov
pushf
test
aaa
idiv
jbe
sbb
ja
push
fidivs
cmp
outsb
in
mov
mov
jecxz
add
add
fucomp
shll
iret
cmc
sbbl
mov
movsb
repz
mov
jne
rolb
mov
mov
and
nop
add
lret
aam
inc
inc
push
ja
lods
jmp
pushl
add
xorl
cmp
in
iret
out
mov
mov
mov
sbb
mov
hlt
cmp
insb
enter
sbb
clc
idiv
jnp
fidivl
add
adc
xor
add
call
fmuls
add
mov
add
mov
add
sub
les
push
add
inc
cwtl
mov
addb
add
sbb
lret
mov
mov
add
jno
push
daa
adc
loopw
mov
xchg
push
add
jle
and
mov
mov
inc
fwait
add
add
mov
sar
or
insb
mov
add
add
leave
or
mov
add
fcomps
pushf
cli
jno
lods
mov
imul
push
into
inc
xor
aad
xor
inc
add
push
imul
add
in
add
shll
mov
add
jne
fistps
xchg
shll
punpckldq
mov
xor
inc
jbe
stos
lods
dec
iret
sbb
mov
add
add
mov
lods
std
adc
in
add
sbb
arpl
mov
add
repnz
mov
add
ret
adc
fists
sbb
int
jns
mov
jge
pop
loope
bound
mov
dec
scas
pop
push
sbb
pop
cltd
popf
inc
icebp
and
popa
inc
nop
add
rolb
mov
add
fbstp
pop
xor
mov
push
sahf
repz
dec
mov
test
test
mov
mov
cmp
mov
fs
add
mov
mov
xchg
xchg
xchg
mov
jle
add
sub
test
xchg
add
xchg
xchg
in
js
jo
mov
stos
push
add
mov
xchg
movsb
mov
jg
sub
jb
mov
cmpsl
and
mov
int3
inc
mov
add
jmp
jbe
loop
mov
push
imul
jno
add
pop
xor
push
notl
add
and
ficoms
add
pop
nop
add
sub
add
xlat
dec
fstpt
lret
icebp
insl
sub
add
rcll
cs
adc
mov
mov
mov
add
daa
sub
xchg
pop
mov
add
repnz
xchg
mov
je
push
mov
mov
add
add
pop
fwait
push
sar
es
insl
aaa
xchg
mov
xchg
gs
xchg
aam
jae
add
cmp
fsub
ret
push
mov
btr
mov
push
fbld
xor
mov
push
jns
dec
dec
xchg
les
scas
arpl
fsts
cmp
pop
sub
inc
test
mov
add
add
fwait
inc
add
sub
pop
inc
adc
sub
dec
aad
inc
outsl
cmpsb
add
add
pop
mov
add
mov
fucomi
andl
dec
insl
add
mov
sub
mov
lock
mov
stos
inc
add
out
test
movsb
mov
pop
pop
jl
add
adc
adc
mov
out
push
into
fsubrs
daa
popa
mov
mov
add
leave
ret
jle
pop
push
mov
das
mov
pop
rolb
dec
insl
ja
dec
xchg
dec
jmp
jns
ret
sub
mov
pop
sub
mov
mov
sbb
cwtl
rolb
mov
in
mov
mov
mov
mov
pop
cmp
add
add
mov
cmp
push
sbb
inc
mov
xchg
pushf
push
push
repz
add
mov
adc
push
inc
into
ss
mov
mov
dec
add
add
ss
sbb
pop
jg
outsl
mov
or
data16
adc
mov
not
push
xchg
xchg
mov
jnp
mov
or
fsubr
loop
mov
test
mov
cli
pushf
and
mov
adc
cmp
add
adc
mov
add
add
aaa
fmul
add
mov
stc
pop
inc
ret
xchg
das
sub
dec
dec
sub
and
push
add
adc
bound
mov
add
jle
mov
test
add
fdivrl
fs
insb
xor
mov
inc
mov
push
cltd
movsb
sti
mov
outsl
rcll
test
lds
add
mov
sbb
push
loope
rolb
mov
jae
not
xchg
pop
js
add
sub
inc
or
add
imul
dec
add
add
aam
adc
mov
insl
mov
in
dec
div
pop
rcr
faddl
jne
dec
pop
imul
test
scas
notb
mov
addb
lcall
mov
mov
pop
mov
addr16
adc
call
mov
cs
push
mov
in
dec
rorl
xor
outsb
in
into
int
add
dec
shll
add
or
mov
cs
sbb
or
cmp
dec
out
jnp
mov
add
imul
jb
mov
add
mov
jb
mov
add
arpl
enter
xchg
mov
loopne
mov
sub
lea
div
add
dec
sarl
aad
fidivs
xor
xchg
mov
rolb
mov
in
sbb
cmc
rcrl
rorl
lret
sbb
add
push
dec
addr16
mov
std
sbb
mov
loope
add
movsl
lods
aam
add
cmp
jle
idivl
dec
int
add
add
cmpsl
or
fcoms
loope
mov
fcoms
lods
inc
add
push
stos
lds
outsl
addb
ljmp
mov
inc
scas
and
imul
adc
xchg
stos
push
aam
mov
pop
adc
mov
inc
dec
xor
mov
lods
inc
add
add
mov
fwait
dec
jbe
add
mov
sub
pop
dec
push
loop
mov
mov
aad
ret
and
cltd
je
add
or
add
mov
ljmp
bound
mov
das
in
push
addl
xchg
add
repnz
and
mov
mov
sti
jb
mov
add
loopne
mov
dec
test
mov
mov
lods
and
cmp
repnz
ja
test
jecxz
pop
xchg
add
mov
test
cmp
outsl
pop
repnz
xlat
popa
xchg
jmp
arpl
aam
jno
dec
inc
push
jns
imul
cltd
and
pop
or
jle
inc
mov
add
mov
mov
mov
lret
add
pop
out
or
pop
jle
in
or
leave
js
cmpsb
xor
mov
das
mov
add
xchg
push
push
push
sbb
icebp
aaa
notl
aam
pop
dec
cwtl
enter
cld
stos
xor
mov
sub
stc
jmp
add
lods
repz
mov
add
mov
jb
mov
adc
mov
dec
push
scas
dec
push
mov
mov
xchg
xchg
out
test
outsb
jae
mov
mov
cmc
out
dec
push
pusha
add
add
pop
das
adc
ds
into
add
lret
cmpsl
stos
movsb
mov
and
add
out
add
icebp
xlat
adc
push
sti
cmp
add
add
ret
sub
in
fsubrl
mov
shll
cmp
stos
test
mov
lea
add
dec
mov
cld
jne
dec
icebp
jecxz
movsl
stos
sub
jmp
add
add
add
mov
dec
xchg
aas
lods
aad
mov
addb
or
adc
or
clc
in
mov
stos
cli
mov
fsubrs
mov
add
mov
mov
rolb
xor
mov
jo
mov
add
jno
inc
add
mov
mov
aad
sub
cmp
adc
push
add
cmovo
mov
xor
iret
lock
aam
cmpsb
add
mov
push
sub
or
adc
or
mov
ja
add
mov
xor
cli
insl
sbb
sub
dec
add
push
mov
ficoms
add
insb
dec
lods
imulb
sbbl
add
mov
das
and
mov
ret
fidivs
xchg
add
mov
add
mov
fiaddl
fwait
nop
mov
sbb
cmp
fwait
adc
int
pop
mov
mov
pop
dec
xor
mov
add
adc
push
fmulp
lcall
fwait
testb
mov
dec
jmp
stos
movsl
in
out
sbb
mov
sub
cmp
xor
mov
and
push
pop
mov
mov
sbb
add
add
dec
jns
adc
mov
ds
cli
fmull
add
and
or
addb
cli
outsl
push
test
add
je
aaa
xor
arpl
fimuls
adc
xor
sbb
mov
clc
mov
fwait
rolb
dec
lahf
divb
add
sub
mov
adc
mov
mov
scas
pop
lret
xor
add
into
pop
dec
adc
mov
lret
add
add
mov
add
add
stos
ja
inc
in
add
add
xchg
xchg
fcomps
out
daa
sub
into
pop
mov
add
mov
xor
add
xchg
fmul
xchg
xor
or
xor
jle
add
or
bound
mov
rolb
rolb
mov
mov
aas
dec
jne
pop
mov
mov
add
movsb
or
jns
inc
pop
xchg
dec
mov
add
mov
adc
mov
add
mov
push
xlat
stos
push
pop
cmpsl
inc
add
addr16
movsl
push
add
mov
mov
mov
add
out
adc
hlt
sahf
leave
pop
add
pop
push
loopne
mov
rolb
mov
sbb
mov
add
roll
xchg
pop
dec
rolb
mov
cmc
push
mov
mov
add
mov
jmp
sub
imulb
xchg
add
mov
sbb
int
and
mov
mov
xor
mov
test
mov
push
push
loope
xchg
leave
pushf
xchg
arpl
ret
cmp
hlt
movl
cmc
or
ficompl
loope
iret
xor
addb
xchg
add
cmp
push
adc
adc
mov
add
mov
adc
mov
lret
mov
add
add
mov
xchg
or
add
aam
sub
test
mov
mov
inc
dec
dec
mov
push
lds
shll
mov
mov
imul
sub
cmp
jp
or
mov
es
sti
enter
add
jmp
mov
fstl
nop
add
mov
lret
ss
and
add
or
push
rolb
mov
leave
cmp
clc
cs
cltd
adc
mov
add
jp
fcoms
shrl
mov
xchg
xor
sti
cmp
es
push
ja
scas
outsb
das
nop
add
repz
dec
cmpsb
mov
mov
in
ds
iret
lock
inc
mov
and
mov
add
outsl
movsb
jmp
pop
mov
jp
jmp
mov
inc
jmp
add
mov
fnstcw
rolb
mov
sub
daa
inc
ja
jns
mov
add
lret
and
mov
push
jne
mov
xor
mov
add
mov
mov
stos
mov
in
data16
int
fcomp
rolb
mov
add
sub
fcmovnb
xor
insb
and
cmp
mov
add
rolb
mov
xchg
xchg
inc
popf
pusha
add
sahf
adc
mov
call
dec
mov
outsl
adc
cmp
out
cmp
push
lahf
scas
aaa
push
jo
mov
push
push
pop
adc
mov
or
add
enter
je
fldenv
mov
push
jle
mov
inc
push
add
add
jmp
jb
mov
push
add
mov
mov
call
pop
jb
mov
cwtl
addl
adc
ss
mov
std
sahf
xlat
fisubrl
add
add
push
call
xor
mov
jge
push
jne
iret
cmp
xchg
add
add
mov
arpl
add
jmp
mov
data16
add
mov
addb
pop
cld
ret
cmpsl
jnp
cmp
sub
and
mov
mov
dec
daa
push
add
insl
push
xchg
xor
mov
pushf
sbb
add
pop
xchg
mov
push
push
stc
addb
pop
test
add
cli
and
mov
xchg
sahf
das
lcall
cld
dec
push
add
cltd
and
pop
adc
xchg
xchg
add
add
aam
mov
or
dec
or
mov
mov
mov
mov
mov
mov
insb
dec
int3
xlat
outsl
push
sbb
dec
dec
into
addb
push
cmpsb
jge
imul
dec
xchg
mov
add
mov
dec
jb
mov
and
mov
add
pop
sbb
mov
or
popa
setno
rolb
mov
mov
push
rolb
mov
cmpsl
jbe
add
add
push
cwtl
out
and
mov
add
add
popf
xchg
add
cmp
daa
pop
das
xchg
fwait
cmc
ret
mov
pushf
ret
flds
add
sub
add
mov
mov
sbb
add
pop
inc
add
push
dec
dec
ja
dec
add
mov
add
mov
mov
jge
mov
sbb
mov
pop
loopne
mov
movsl
outsb
push
addb
pusha
add
xchg
cmpsb
xchg
push
add
sub
rolb
mov
add
movsl
dec
mov
add
lock
and
outsl
std
pushf
sub
popf
sbb
aam
ds
and
add
mov
add
movsb
add
add
cmpsb
bound
mov
sub
ret
int
sub
les
repnz
idivl
fwait
dec
push
leave
movsb
ja
stos
insb
outsl
jg
cwtl
mov
add
cld
sub
adc
sbb
xor
mov
xor
mov
imul
lods
and
mov
out
mov
mov
repnz
xchg
dec
sub
mov
add
popf
mov
pop
cmp
sub
pusha
add
add
jg
std
testl
mov
add
addr16
mov
int3
inc
add
mov
mov
add
mov
or
jp
mov
add
scas
add
mov
add
rcrl
mov
xchg
xchg
mov
add
add
add
add
cmp
inc
cmp
sub
xchg
fistpll
cmp
add
stc
test
jnp
pop
sub
adc
mov
pop
clc
iret
mov
testb
addb
idivb
mov
mov
mov
mov
out
ret
xchg
in
sub
inc
pop
adc
rolb
rcl
lret
aaa
insb
aaa
repnz
or
in
andl
movsb
mov
jnp
stos
and
mov
mov
adc
mov
mov
add
add
sub
mov
enter
adc
mov
add
xchg
mov
inc
addb
testb
jecxz
add
add
dec
pop
outsb
hlt
cmc
shrl
add
mov
mov
addr16
in
mov
rcll
dec
and
mov
leave
out
push
add
or
cmp
into
sub
add
or
iret
and
mov
outsl
push
inc
push
add
paddusw
test
inc
fbstp
add
rolb
mov
push
aam
add
add
add
addb
enter
test
push
ret
xor
mov
jnp
xor
cltd
cwtl
cli
aad
add
cltd
addr16
setnp
mov
pop
fildl
in
cmpsl
xor
mov
push
cmp
test
or
in
lods
sbb
mov
cs
pop
cmp
mov
xor
mov
mov
outsl
aad
jmp
mov
add
popf
sub
sbb
add
xor
pop
xchg
add
cmp
sub
mov
push
js
int
rorl
ret
subl
add
mov
add
add
mov
inc
jb
mov
imul
adc
mov
mov
xor
mov
adc
mov
add
aam
pop
add
mov
gs
cli
mov
loop
mov
or
mov
sbb
and
sbb
xor
jae
pushf
outsb
mov
push
add
sub
or
adc
add
repnz
mov
call
fs
dec
ss
pop
addr16
adc
jb
mov
dec
sub
loop
mov
mov
loop
mov
adc
mov
add
dec
in
test
test
sbb
push
out
out
pop
push
push
das
cmpsb
pop
ja
push
movsb
mov
mov
ret
add
cld
xchg
cmp
ret
jae,pt
inc
xor
push
dec
test
dec
sub
push
mov
test
add
sub
ds
mov
mov
cmp
fcmovnb
fbld
sti
dec
inc
add
add
inc
out
xchg
lock
popf
enter
xchg
or
cltd
pop
pop
inc
add
mov
test
push
add
bound
mov
lcall
add
lea
sahf
jo
mov
adc
mov
mov
add
cmp
pushf
xchg
mov
xchg
sahf
dec
adc
mov
sub
cmp
push
push
add
aas
leave
inc
mov
addb
mov
ret
pop
bound
mov
addps
jg
data16
mov
push
xchg
ds
lods
xor
cmp
add
push
dec
xchg
scas
add
mov
rolb
outsl
mov
in
add
lahf
inc
add
mov
mov
add
lods
in
aam
jae
int
jno
cmp
bound
mov
std
aas
cmp
pop
rcll
xchg
out
push
rolb
mov
adc
movsl
nop
add
inc
out
out
movsb
mov
fnstsw
jmp
lcall
dec
xor
mov
out
rolb
mov
add
fwait
insb
fsubrs
xchg
aaa
lods
enter
mov
add
xor
mov
xchg
stos
or
add
mov
pop
addb
xor
mov
mov
add
inc
xor
mov
jo
mov
inc
addb
jl
push
add
cmpsl
or
mov
inc
cmpsl
or
out
add
cmp
jmp
cmp
pop
jae
repz
sub
scas
in
jb
mov
add
jns
cmp
into
mov
add
lret
lods
xchg
fstpl
popf
scas
aad
add
lea
mov
mov
rolb
jo
mov
pop
jne
insl
dec
jg
shrl
adc
fisubs
add
mov
xchg
push
add
or
cli
lret
mov
shl
add
leave
add
cs
insb
jp
mov
mov
jmp
dec
in
or
add
jge
and
imul
test
rolb
mov
sbb
push
xorl
sub
add
or
mov
and
mov
mov
sbb
mov
cwtl
out
dec
xor
fcomip
add
jl
pop
in
inc
sub
push
dec
inc
push
mov
add
add
je,pn
ja
mov
add
add
mov
mov
xor
mov
xlat
xchg
sub
push
bound
mov
mov
and
xchg
xchg
xor
add
pushf
xchg
sub
adc
pushf
test
lea
out
add
mov
aad
cmp
stos
pop
dec
bound
mov
shl
bound
mov
and
call
scas
movsl
jecxz
mov
jmp
mov
jns
popf
mov
orl
int
scas
mov
mov
fsubl
lret
xchg
mov
into
mov
xchg
pop
inc
rolb
ss
add
mov
push
mov
push
xchg
push
add
pop
xor
mov
mov
fwait
jns
mov
mov
xchg
xchg
xor
clc
sub
add
mov
loope
ja
xor
sbb
inc
add
add
jne
scas
les
cmp
fisubrs
sub
xchg
add
sub
push
add
ja
xchg
or
xchg
es
test
and
mov
lods
sub
add
lcall
push
add
mov
add
mov
xchg
pop
sbb
mov
mov
cmpsb
lods
jne
push
sub
sar
adc
mov
sbb
add
mov
nop
add
jns
xor
mov
add
aam
std
mov
jae
pop
xor
jns
add
icebp
add
mov
add
mov
pushl
aas
test
das
sti
push
pop
mov
divl
add
lds
data16
pcmpgtw
or
mov
outsb
push
mov
adc
mov
jl
xor
inc
cmpsl
sbb
inc
sarl
xchg
add
fdivl
shl
pop
out
adc
mov
add
mov
pop
dec
repnz
add
mov
rolb
mov
inc
jp
add
push
fbld
loopne
mov
out
and
add
add
icebp
dec
notl
sbb
xor
add
add
mov
shll
fsubl
imul
movsb
push
add
add
cmp
add
mov
stos
stc
pop
rolb
mov
imul
mov
mov
add
push
aaa
lock
jne
add
leave
fists
dec
addr16
add
stos
scas
add
daa
fisubrs
add
ss
int
int
sarl
mov
pushf
cmpsl
mov
add
add
leave
cld
bound
mov
negl
orl
mov
cmp
push
add
sbb
cmp
push
add
add
outsb
sub
dec
repz
jp
movsl
mov
add
add
inc
cwtl
test
add
push
repnz
out
mov
push
add
fidivl
mov
call
adc
lcall
add
inc
add
pop
stc
fcmovnu
movsb
into
cmp
mull
dec
cmp
add
cwtl
push
sbb
mov
data16
rcll
mov
pop
pop
push
aaa
rolb
mov
add
xchg
int
mov
sbb
inc
push
mov
add
jb
mov
fisubrl
out
imul
add
mov
add
pop
jno
sahf
pop
sbb
mov
lods
into
iret
hlt
ret
iret
test
mov
xchg
cmp
test
jne
ljmp
add
cmp
add
and
mov
loopne
mov
or
add
and
mov
mov
mov
add
dec
lahf
inc
test
mov
mov
and
xor
mov
add
inc
popa
mov
mov
cld
das
pusha
add
pop
lea
dec
ss
call
mov
imulb
imul
pop
cmp
mov
rcll
in
cld
je,pt
add
add
mov
cwtl
out
and
mov
pop
push
imul
sub
cmp
add
mov
js
ljmp
repz
std
imul
in
sarl
mov
dec
add
xor
mov
inc
pop
sbb
add
add
pop
dec
fidivrs
pop
push
add
dec
mov
inc
pop
addb
dec
outsl
pusha
add
mov
clc
mov
dec
add
scas
jp
cld
loope
inc
int
push
add
mov
fidivs
sub
lods
jge
add
fadd
cmp
outsl
test
add
pop
fmuls
adc
add
jle
test
idivl
dec
lcall
or
lock
in
pop
push
fadds
cmp
or
stc
mov
pop
add
xchg
mov
push
add
mov
cmp
add
add
xorl
mov
mov
mov
mov
mov
xor
push
add
sub
mov
add
imul
jns
pushf
fists
or
mov
aaa
cmpsl
xchg
into
rolb
inc
out
fadd
add
lock
loope
push
xchg
mov
aam
add
add
fisubrs
push
pop
adc
mov
mov
daa
inc
add
mov
add
push
ja
fldl
jno
dec
push
dec
push
jmp
add
and
mov
nop
add
mov
mov
add
xchg
xchg
fbstp
add
sar
aad
add
mov
mov
cmp
imul
xor
roll
sar
sub
insl
adc
mov
adc
in
sbb
dec
or
mov
mov
push
out
addb
cld
test
or
or
rcll
mov
mov
pop
sahf
mov
mov
mov
add
cmp
int
add
mov
ffreep
ljmp
test
add
loope
or
add
cmp
loope
cltd
cmp
out
fcmovu
dec
inc
lret
test
in
inc
movsb
das
es
mov
add
std
leave
addb
dec
xor
xor
mov
jmp
sub
sub
and
mov
mov
loop
mov
mov
push
std
je
test
inc
jo
mov
cmpl
dec
push
push
jmp
out
lods
divl
mov
jecxz
or
shl
add
mov
fldl
and
add
mov
add
mov
faddl
jo
mov
inc
cmp
lcall
sub
add
xchg
jne
push
scas
push
add
xlat
xchg
add
sbb
dec
push
adc
cltd
mov
je
and
jecxz
loope
rolb
mov
hlt
and
mov
xchg
scas
mov
or
pop
xchg
sbb
mov
lock
cld
dec
addb
cmp
xchg
add
push
fdivrs
add
push
mov
push
cmp
lock
and
mov
add
push
sub
cmp
inc
call
push
or
adc
mov
mov
add
mov
lock
cmp
jns
or
mov
mov
jae
pop
cltd
dec
test
mov
cmp
push
add
in
cmc
dec
test
rcll
mov
push
rcrl
mov
xor
mov
cmp
addb
mov
lahf
insl
movsl
outsl
call
add
mov
add
xchg
popa
add
add
pop
jecxz
popf
mov
dec
or
push
push
dec
aaa
in
inc
add
das
std
sub
cmp
arpl
fbstp
xor
mov
add
faddl
lret
cmpsl
xchg
test
das
jbe
cmp
add
mov
dec
in
sahf
loopne
mov
mov
add
ret
cli
push
jmp
rol
inc
pop
jge
add
cltd
adc
mov
sub
ljmp
or
add
mov
enter
popa
cs
add
sub
and
rolb
mov
call
fnstcw
sbb
inc
add
inc
addb
inc
adcl
shrl
xor
mov
add
xchg
add
popa
rcrl
and
add
jg
add
mov
xchg
mov
pop
sub
sub
add
gs
js
aad
xor
add
sbb
add
in
sub
pusha
add
pop
popf
cmc
and
mov
mov
mov
movsb
cmc
insb
mov
jno
divl
adc
xchg
divb
mov
add
mov
add
je
xchg
pop
pop
sub
test
add
sti
push
mov
add
mov
mov
dec
cmp
test
mov
mov
out
sti
outsl
jl
sub
roll
xlat
shl
add
cwtl
and
cmp
repz
mov
outsl
adc
adc
inc
and
mov
fstpl
aaa
shr
pop
push
mov
add
mov
in
movsb
inc
pop
imul
mov
mov
inc
mov
add
scas
jae
xchg
arpl
jl
adc
xchg
or
sub
imul
pop
cmc
clc
jae
and
int3
pop
popa
movsb
bound
mov
mov
or
add
faddl
pop
add
push
fwait
pop
or
inc
loopne
mov
fcoml
movd
in
pop
lahf
or
bound
mov
pop
pop
sbb
add
lret
nop
add
add
imul
inc
cmc
pop
mov
and
inc
fwait
cmpsb
cmp
inc
mov
push
and
mov
push
adc
sahf
ss
stos
push
add
add
xor
pop
insl
mov
mov
into
adc
pop
xchg
add
aas
inc
lret
scas
xchg
sub
or
add
push
mov
xchg
sbb
pop
pop
or
lds
scas
mulb
add
or
and
std
mull
mov
test
lods
xchg
movsb
xchg
mov
scas
scas
rolb
adc
mov
mov
xchg
in
mov
dec
inc
add
add
lret
les
in
ljmp
push
pop
sbb
into
stos
repz
sarl
lods
outsl
inc
or
and
mov
jae
sahf
push
xlat
jo
mov
cltd
out
daa
add
add
sub
sbb
inc
xorl
lahf
lods
stos
cmpsl
adc
scas
test
mov
mov
inc
add
xor
mov
lods
adc
insb
and
sub
xor
mov
add
ds
mov
ljmp
mov
jbe
add
add
mov
aad
xlat
and
js
fwait
bswap
mov
pop
or
lret
xorl
jnp
mov
mov
add
or
cmpsb
lahf
imul
add
xchg
sahf
fildll
add
pushf
or
add
xchg
out
aad
xor
push
ret
inc
data16
push
clc
test
mov
jne
mov
inc
inc
je
dec
dec
xor
mov
adc
daa
push
add
mov
pusha
add
mov
iret
imul
push
idiv
pusha
add
adcl
pop
test
and
xor
mov
pop
jb
mov
je
out
push
push
xor
mov
add
data16
cmp
add
pop
scas
push
mov
jge
jl
nop
add
mov
cmp
addb
jbe
jbe
stos
pop
addb
dec
jg
jbe
enter
stos
mov
jae
push
add
and
dec
out
jbe
repnz
lcall
mov
add
add
dec
mov
fidivrs
mov
add
add
pop
fdivs
sub
sti
xlat
clc
push
add
adc
mov
mov
call
lods
add
mov
and
mov
and
mov
add
push
aaa
sub
pop
js
add
inc
xor
mov
add
or
cmp
jp
sub
add
cmp
jmp
jl
cli
dec
dec
fmuls
test
mov
mov
rolb
mov
subl
add
mov
dec
inc
xlat
fiadds
pop
test
push
add
sub
das
out
and
mov
mov
xor
mov
pusha
add
add
add
sub
movsl
std
into
pop
mov
ret
shrl
adc
mov
or
pop
popa
xlat
sti
xor
mov
add
inc
add
lcall
in
outsl
test
mov
lods
jl
fiaddl
xlat
sahf
pop
loop
mov
inc
mov
or
pop
dec
mov
mov
lea
das
xchg
cs
mov
jo,pt
mov
ret
xlat
add
mov
and
pop
in
jg
and
ss
or
imul
mov
mov
add
and
inc
rcll
mov
xchg
or
repz
movsl
add
movsl
pop
mov
mov
add
and
sub
addb
add
cmp
xlat
scas
mov
faddl
out
jmp
add
add
add
