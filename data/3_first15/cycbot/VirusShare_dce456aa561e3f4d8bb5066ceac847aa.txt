push
mov
outsb
mov
or
xchg
jbe
popa
jb
push
xchg
add
adc
add
xor
and
pop
ljmp
lahf
sbb
push
jo
loope
or
mov
lret
mov
in
jae
mov
addb
enter
lods
sub
sbb
xchg
add
xor
outsb
insl
rolb
inc
add
cltd
imul
xchg
mov
dec
xor
in
xchg
scas
data16
push
adc
add
xor
jmp
leave
mov
fmul
les
jae
or
ja
les
sbb
pop
scas
cmpsb
push
push
leave
fadds
adc
sbb
add
sbb
xchg
std
and
jo
xchg
mov
adc
xor
cmp
adc
add
cmp
mov
ret
aas
ds
mov
pushf
nop
lahf
inc
add
aaa
jmp
mov
jmp
clc
repz
add
and
xchg
ds
loope
mov
xchg
es
sub
add
cld
ljmp
mov
into
push
or
clc
cmp
js
dec
dec
or
push
lahf
bound
sti
inc
add
test
popa
cmpsl
and
roll
cmp
fwait
jns
add
adc
cmpsb
and
add
add
push
xor
shll
xor
xchg
fnsave
mov
mov
sbb
adc
xor
add
addb
xchg
dec
cmp
insl
idivl
xorl
mov
test
sbb
out
or
sub
fisubrl
jl
xor
push
icebp
mov
xor
and
and
xchg
sarb
cltd
mov
add
addr16
vpmacsdd
daa
mov
mov
pop
or
dec
mov
addr16
dec
pop
aaa
sub
ret
stc
xchg
push
add
cmp
sub
jae
cmp
fwait
or
or
adc
loop
movb
out
fst
call
mov
mov
test
sarb
sbb
jmp
movsl
adc
movb
mov
stos
jo
sti
dec
mov
sbb
push
and
fstl
pushf
insb
jecxz
cmc
mov
fsubr
add
movsl
imul
xor
rcrb
ret
jo
lahf
push
and
in
sub
jne
out
cmp
cli
and
hlt
rolb
xchg
repz
add
cmpsb
lret
loop
xor
inc
add
outsb
insl
adc
sbb
stos
mov
mov
or
out
rorb
sub
enter
push
or
xchg
fstpt
xor
addb
and
in
out
adc
jge
cmp
pushf
arpl
call
jge
sub
mov
inc
arpl
add
mov
daa
inc
add
sub
add
in
fmul
cmp
fldcw
xor
daa
jno
mov
add
push
test
adc
loop
xchg
or
mov
aam
fnstsw
mov
mov
cmp
inc
add
in
push
loopne
sbb
sbb
jbe
inc
add
repz
and
jo
mov
sub
xchg
das
nop
mov
xlat
or
gs
in
mov
into
jb
or
sub
mov
push
add
jge
mov
add
cmp
pop
bound
movb
push
dec
mov
xchg
inc
fs
add
fmuls
mov
in
jb
daa
pop
mov
push
nop
pushf
mov
loopne
add
jg
jns
mov
sarb
add
inc
out
cli
jno
mov
add
fcompp
push
mov
xor
test
inc
mov
mov
fs
add
push
test
fwait
out
mov
pushf
sub
jp
negl
test
sbb
lock
mov
sub
mov
sbb
loop
fmuls
mov
add
fs
loope
jmp
jmp
cmc
lock
mov
or
add
sub
aas
lea
out
or
out
hlt
cmp
sar
jns
test
inc
stos
movsb
mov
fstp
dec
fcomi
adc
mov
lret
sbb
mov
adc
xor
adc
movb
test
xchg
stos
sahf
mov
add
add
outsb
xchg
pop
sti
jbe
add
fwait
lods
mov
adc
data16
sti
enter
push
icebp
xor
pushf
test
mov
inc
clc
cmp
add
jp
pop
jle
filds
add
pop
ljmp
jnp
xchg
xor
pop
das
jge
enter
repnz
jnp
add
add
mov
mov
sahf
testl
xor
std
out
add
mov
paddusw
cmp
cmp
in
test
into
das
lret
mov
xchg
mov
push
push
les
or
add
push
inc
sub
xor
and
cli
hlt
dec
subl
mov
popa
or
inc
add
add
and
adc
fdivrs
push
adc
cmp
mov
sub
and
mov
cli
inc
add
bound
fldcw
jns
mov
xor
lock
fists
add
shll
and
pop
mov
repz
adc
xchg
shll
sub
adc
xchg
cmp
testb
int3
cmpsb
pop
pop
ret
dec
popa
cmp
and
iret
add
mov
imul
mov
ljmp
jge
xchg
shlb
xchg
and
add
js
add
ss
mov
add
cmp
dec
je
add
lods
push
mov
test
xor
push
add
pop
movsb
loopne
icebp
sub
les
pop
jnp
xor
scas
clc
or
add
xchg
std
out
or
cmp
mov
sahf
push
imul
lret
push
fnstenv
fists
mov
loop
mov
inc
add
int
mov
cmpsb
movsl
out
aam
das
jae
test
stc
insl
push
dec
cmp
scas
jae
push
inc
in
mov
add
movb
imul
lcall
test
mov
xchg
cmp
ljmp
sbb
std
xor
mov
loop
sub
fiadds
sar
cli
xlat
adc
subl
cs
pop
ficoml
add
ret
mov
mov
repnz
xor
mov
push
test
xchg
aad
add
test
lret
jae
divb
or
lahf
mov
rorb
or
cmpsb
mov
stos
std
addb
mov
les
inc
add
fisubl
mov
das
fsubs
push
dec
add
pop
push
cli
cmp
pushl
ret
popl
dec
xchg
pop
mov
fsubrs
sarl
jmp
movl
sub
imul
push
xchg
clc
out
dec
insl
jp
test
add
mov
inc
add
outsl
aas
mov
jbe
mov
les
ds
inc
add
popf
push
std
mov
mov
inc
add
push
jle
and
cmp
jp
mov
adcl
add
inc
add
subl
cmp
ljmp
vmwrite
jge
add
xchg
or
pop
push
aaa
addb
add
adc
jae
lea
std
push
add
xor
jb
jne
addr16
add
jg
jbe
sub
xchg
and
sub
sbb
push
add
jecxz
sbb
out
inc
sbb
icebp
push
arpl
les
cmp
ja
lea
xchg
jno
mov
fadd
add
inc
cmp
dec
inc
mov
lret
inc
cmpsl
movsb
jmp
imul
mov
aas
sub
add
dec
daa
and
xchg
out
add
jbe
imul
movb
rolb
and
jge
test
pusha
add
js
inc
leave
or
cmpsl
push
mov
movsl
sub
in
add
mov
jne
sub
jb
sbb
sub
movsl
add
fistps
pop
in
dec
je
fmuls
xchg
scas
sub
xchg
push
loopne
add
cmpsb
aam
out
cmp
mov
sub
mov
mov
add
fldcw
inc
pushf
arpl
or
mov
jnp
mov
or
mov
movsb
andl
sbb
push
mov
js
add
std
inc
add
movsb
mov
push
inc
ret
shrl
std
aas
adcl
sti
enter
fcmovnbe
mov
mov
adc
fnstenv
daa
fmul
movb
add
addb
add
call
add
jo
inc
aad
add
icebp
sbb
je
jecxz
insb
push
push
arpl
or
adc
xchg
ljmp
ja
sti
push
icebp
je
iret
push
add
add
fadds
pop
xchg
iret
stos
addb
or
mov
bound
pop
add
push
add
in
loope
add
pushf
pop
pop
fcompl
scas
aaa
xor
lock
add
jle
add
out
mov
leave
push
lock
outsl
mov
in
mov
cmc
and
pop
das
icebp
push
in
push
sbb
xor
cmp
and
mov
push
aad
loope
or
loop
lret
nop
add
shl
push
adc
lahf
xchg
push
push
in
add
xor
addb
enter
add
mov
add
pop
sub
icebp
mov
mov
adc
add
xor
sub
adc
pop
and
push
inc
add
lret
add
mov
jmp
test
sbb
sahf
xor
mov
ret
paddusb
in
pushf
or
xchg
cmp
xlat
sbb
add
sub
jecxz
andl
add
pushf
test
pop
inc
in
jmp
icebp
out
push
daa
js
fisubrl
xor
jae
mov
pop
mov
test
cltd
movsl
jl
add
push
int3
imul
imul
addb
cs
sahf
mov
les
mov
lcall
sub
aad
rolb
add
add
jg
and
mov
sub
pop
xchg
icebp
cmp
add
es
loop
test
test
rcll
mov
cmpl
loopne
mov
pop
std
inc
add
movsb
int
adc
xor
mov
loopne
jne
xor
sub
or
mov
xacquire
xchg
stos
repz
aas
and
add
mov
bound
loope
mov
adc
test
xchg
cmpsb
pop
sub
fisttps
and
sub
lods
outsl
mov
mov
add
sbb
jecxz
mov
test
bound
rorl
push
push
stc
out
xchg
out
dec
mov
or
sbb
test
add
xchg
mov
add
iret
clc
scas
js
cli
inc
add
xor
inc
int
stc
lock
adc
jne
rcr
js
mov
shlb
add
nop
mov
incl
add
imul
cmpsb
inc
add
jecxz
sub
mov
mov
jl
jns
xchg
dec
sbb
and
cmp
in
push
xor
ds
push
add
loop
add
imul
shll
xchg
insl
inc
add
mov
mulb
and
nop
push
pusha
add
or
xchg
mov
dec
mov
jecxz
divl
imul
fidivrl
mov
in
sub
mov
lods
fadd
add
push
inc
ja
xchg
mov
add
test
add
cmc
movsb
xchg
push
negb
clc
mov
out
imul
pop
pop
and
sahf
lock
mov
or
push
out
clc
adc
mov
cld
popl
xchg
mov
or
in
sbb
int
std
add
into
xchg
rolb
sub
int
sbb
sbb
fwait
or
cmp
push
pop
mov
mov
stos
mov
and
fildll
inc
add
rolb
xchg
fmull
mov
inc
pop
sbb
pop
lret
shrl
mov
mov
and
jmp
dec
xchg
movsb
fisubrl
scas
cmp
jmp
test
push
dec
jo
xchg
shlb
insb
mov
mov
add
repnz
lret
and
push
lret
mov
loope
sbb
and
mov
and
cmpsl
bound
pop
addb
jge
and
inc
add
cmp
inc
add
pop
jmp
xchg
mov
imul
add
xchg
cmp
dec
push
icebp
pop
addb
mov
sub
test
test
add
jne
sbb
scas
scas
mov
jmp
xchg
cmp
add
subl
dec
and
repz
inc
add
jb
add
cmp
mov
or
adc
testb
push
add
in
inc
add
ljmp
sbb
jmp
aaa
adc
jmp
sub
mov
idivb
jmp
stc
inc
add
dec
and
sub
lods
ret
adc
shlb
lret
sbb
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
mov
adc
add
add
lret
mov
and
jecxz
xchg
clc
ss
mov
cmp
stos
aam
push
dec
addb
add
cmpsb
leave
adc
movb
inc
add
adcl
push
push
mov
jmp
sahf
xchg
dec
sub
sbb
lds
cmp
rcrb
pop
jns
decl
std
lahf
push
fcomps
fwait
pop
jle
insl
inc
out
sub
mov
shll
and
jge
xchg
fdivrs
add
add
scas
mov
push
add
add
push
mov
stos
xchg
sub
add
lods
sarb
pushf
addb
add
and
movb
subl
out
repnz
inc
add
pop
ja
subl
nop
pop
add
lret
movsb
sub
sbb
mov
in
repnz
repz
or
dec
leave
adc
shlb
ja
push
rolb
push
inc
pushf
bound
movsl
into
pop
inc
add
sarb
cmp
addr16
add
daa
xchg
jge
xchg
add
add
sbb
mov
mov
xor
in
add
add
out
lods
shl
mov
add
repz
filds
mov
into
mov
mov
test
subl
jle
adc
jp
out
push
inc
out
dec
xlat
bound
add
and
rolb
add
pushf
xor
arpl
pop
movsl
mov
mov
mov
inc
addb
pop
cli
mov
xor
add
stos
scas
je
addb
jb
dec
cmp
mov
add
outsb
sahf
mov
mov
in
cmp
repz
insl
adc
jge
loop
add
add
mov
into
xchg
xchg
inc
add
jno
jecxz
addb
adc
popa
popf
lea
ret
imul
cmp
adc
ds
imul
scas
mov
inc
add
add
dec
inc
add
bound
psubq
mov
gs
jns
stos
dec
fistl
jecxz
dec
iret
fwait
out
insb
fldenv
mov
call
xchg
inc
jae
mov
outsb
inc
popf
jl
add
jns
cmp
imul
inc
add
int
add
out
stos
and
movsb
mov
scas
gs
add
jae
insb
sbb
mov
sub
xchg
fwait
mov
insb
fisttps
inc
dec
jne
lods
rorb
mov
repz
add
outsb
inc
add
cltd
dec
shll
add
lcall
add
sbb
add
arpl
das
int3
jl
shrl
push
in
cmc
loop
add
xchg
sbb
and
cli
and
stos
jns
xchg
inc
add
cltd
mov
push
jge
adc
or
push
add
inc
add
push
push
add
movsb
push
ret
test
jne
idivb
repnz
add
insl
and
movsl
pop
addb
sbb
enter
in
add
mov
int
incl
add
arpl
imul
rolb
xchg
pop
into
stc
push
fildll
dec
test
jae
cmp
pop
fdivl
and
and
pop
add
repz
mov
leave
jae
mov
hlt
ljmp
lods
sub
mul
fsubrs
or
push
outsb
cmc
inc
sub
je
es
data16
out
sub
add
aas
mov
scas
or
and
dec
jo
movsb
mov
lcall
cmp
mov
mov
add
xor
insb
cld
out
arpl
imul
sub
stc
xor
roll
jg
int3
xlat
mov
pop
mov
sbb
add
sti
negb
jge
clc
mov
ret
bound
push
test
xchg
in
sub
push
call
test
jl
adc
dec
nop
hlt
mov
pop
xor
mov
inc
add
mov
fnsave
xchg
mov
or
push
xchg
repnz
pushl
clc
rolb
xor
cmp
mov
popf
std
cmp
addb
imul
orl
mov
fisttpll
incl
movsb
xchg
push
outsb
out
mov
add
roll
xchg
sbb
push
bound
imul
xlat
int
dec
insb
inc
xchg
mov
adc
insb
adc
mov
mov
add
rolb
dec
bound
push
or
fsubr
push
mov
fisubrs
or
ss
enter
mov
inc
inc
addb
ljmp
add
cmp
sub
sbb
inc
add
add
imull
repnz
movb
mov
mov
mov
dec
mov
lret
adc
enter
movb
xor
jns
jl
fwait
outsl
bound
push
fsubs
movb
jnp
sub
adc
dec
mov
jle
jns
xchg
enter
sub
cmp
mov
xchg
push
cmp
pop
push
das
cmpsb
pop
pop
rolb
xchg
jmp
mov
add
add
push
push
dec
push
dec
push
aaa
push
add
adc
orl
inc
add
pop
mov
mov
sbb
add
lds
mov
arpl
lock
hlt
icebp
sub
cmpsb
mov
xchg
xor
or
insb
in
pop
arpl
and
movsb
fstps
mov
fbld
dec
fisttpl
or
shrb
inc
add
sbb
add
pop
ss
sub
sub
add
or
add
dec
loope
sbb
jbe
xchg
dec
lea
jp
int
add
test
fwait
insb
not
outsl
mov
xorl
add
add
xchg
fisubrs
push
pop
dec
dec
das
mov
repnz
and
pop
adc
and
add
and
les
mov
in
xlat
jmp
scas
imul
addb
sahf
add
inc
add
outsl
sti
out
lea
bound
cmp
add
les
xor
add
test
fwait
pusha
add
adc
sub
jmp
cmp
push
jle
adc
push
arpl
xchg
lret
fwait
movb
or
xchg
jmp
add
je
mov
addb
movb
dec
pop
daa
pop
push
scas
stos
sbb
cmc
stos
adc
addb
repz
xor
pop
out
lret
dec
jno
js
test
jl
fwait
shlb
add
mov
leave
addb
add
add
mov
pop
aad
cmpsl
dec
dec
sbb
mov
popa
insb
mov
ret
xor
fadds
rorl
add
and
les
sub
add
push
jns
xor
lods
in
imul
add
out
shl
or
add
mov
aaa
cmp
and
jecxz
cmpsb
lock
stc
hlt
hlt
nop
mov
lea
cmp
add
ret
cmp
rcr
dec
xor
jae
inc
add
outsl
pop
inc
add
in
cmpsb
fs
add
xor
adc
xchg
and
test
imul
add
pop
shll
pop
ret
mov
cmc
mov
xor
test
cmp
cltd
fistpl
imul
push
jg
stos
mov
fistl
filds
mov
jg
add
mov
dec
cld
pop
cmp
add
add
sub
in
fsubr
scas
cmp
sbb
gs
sahf
push
lahf
stc
lock
gs
cmp
xor
mov
sti
insb
or
pop
lret
xchg
lock
push
in
jmp
jnp
fistl
test
test
mov
xor
push
ljmp
dec
adc
pop
adc
xor
adc
mov
repnz
and
sbb
stos
sub
int3
lods
cs
mov
arpl
loop
stos
xor
jne
and
pop
add
popa
jo
dec
pop
push
xor
add
mov
fmuls
jnp
aad
inc
add
sbb
pop
push
clc
pop
push
pushf
call
and
mov
out
ror
fcompl
out
pop
addb
mov
icebp
lret
jnp
and
fnclex
addb
jae
xor
jnp
jle
add
aam
sbb
imul
inc
divl
addb
lret
loop
mov
outsl
dec
je
lods
js
data16
adc
jae
shr
int
push
add
sbb
sahf
test
stos
mov
in
bound
sbb
lods
mov
pop
outsb
bound
cmp
fcmovne
push
jmp
cmc
cmp
add
insl
icebp
ffreep
outsl
outsl
adc
xchg
je
inc
sub
cmc
ret
repnz
aad
in
cmpsl
push
repnz
xchg
pop
out
xor
int3
in
add
inc
lcall
movsl
sbb
stos
cld
jp
cmp
mov
adc
add
daa
jb
adc
ds
add
fldl
jo
movb
jo
push
add
fisubl
add
je
unpcklps
in
test
add
or
and
jno
pop
lret
mov
mov
mov
add
lcall
inc
out
inc
adc
pop
mov
les
cmp
fisttps
or
adc
testl
into
shll
or
pop
aad
add
sbb
xchg
pusha
add
inc
cli
lock
mov
test
pusha
add
dec
stos
js
clc
fstpt
add
add
mov
add
aas
mov
daa
push
xchg
cmp
push
mov
mov
mov
jns
ja
mov
and
adc
jp
xor
int
mov
add
cmp
add
sahf
cmp
dec
xchg
in
xchg
fcmovb
fdivr
sbb
add
add
pop
stos
ja
mov
add
mov
dec
xchg
out
icebp
addr16
push
lds
pop
out
xchg
xor
jo
data16
sahf
aaa
add
in
add
loop
movb
mov
or
pop
notl
cmp
pop
bound
add
mov
push
lahf
xor
sbb
lods
stc
adc
dec
adc
jb
add
add
mov
movsl
lcall
icebp
rolb
pop
out
lds
dec
mov
fcomps
arpl
or
dec
pop
add
enter
and
insb
sbb
in
add
adc
add
sbb
inc
add
dec
sub
pop
int
fisttpll
jmp
jl
dec
loopne
inc
add
push
mov
in
pop
add
dec
lods
sbb
jae
push
fcomp
ljmp
rcr
std
lock
inc
xor
adc
mov
cmp
dec
push
and
add
add
add
push
xor
add
inc
add
push
xchg
and
add
jp
shlb
jmp
push
scas
loope
add
cli
pop
fs
add
jge
sbb
out
gs
out
add
mov
sub
outsl
loope
aaa
mov
and
hlt
or
leave
les
stc
das
dec
addb
into
inc
push
add
and
fs
inc
add
mov
test
aam
adc
mov
xor
stos
ljmp
cld
test
push
pop
scas
fdivs
rcll
sub
inc
adc
std
fbstp
xchg
std
dec
xor
aam
incl
cltd
in
jge
loopne
ljmp
mov
mov
push
inc
pop
movsl
lods
mov
push
mov
cwtl
and
mov
icebp
or
jecxz
adc
push
test
fidivl
jge
add
jae
jne
or
nop
rolb
push
ret
mov
or
push
and
xlat
adc
sbb
out
mov
je
xchg
in
sub
or
sahf
sub
adc
push
scas
push
in
nop
adc
incb
add
mov
xchg
iret
lahf
jae
scas
dec
loop
dec
cwtl
jno
sub
jmp
push
pop
adc
mov
mov
pop
das
loop
adc
imul
xchg
xchg
jg
mov
or
fdivl
and
hlt
and
sbb
xlat
aam
xchg
sub
mov
cltd
mov
mov
pushf
mov
cmp
test
adc
movb
or
add
xor
movb
dec
imul
and
add
mov
inc
add
jl
ret
cli
fsts
xchg
fwait
add
xchg
add
jne
mov
lcall
sbb
ds
mov
jnp
xchg
addl
pop
jl
add
mov
inc
add
xchg
ret
cmp
mov
popa
das
xchg
bound
sbb
or
sti
mov
mov
stos
xchg
dec
and
negb
ljmp
add
aad
add
cld
xchg
inc
int3
std
lods
cmpsl
arpl
push
add
add
fwait
daa
cld
ret
xchg
sldt
mov
shlb
add
xor
jl
add
fbstp
loop
add
inc
add
push
and
mov
jb
sbb
ja
or
push
push
add
add
aas
dec
addb
add
ret
cwtl
cmp
lret
pop
lock
in
or
and
mov
insb
lods
cmp
imul
dec
in
ja
adc
loop
adc
jg
add
cmc
mov
pop
mov
push
inc
xchg
and
jbe
jecxz
inc
sbb
fidivrs
jecxz
andl
add
ret
add
sti
aas
rcrb
mov
add
and
dec
and
xor
add
dec
int
repz
sarl
lds
test
cmpsl
ret
lcall
sub
sbbl
xchg
scas
fstpt
hlt
test
movlps
and
add
std
cli
or
jmp
in
mov
rcrl
jne
mov
adc
hlt
and
jle
in
stos
add
sub
cmpsb
add
or
cs
cli
cs
scas
addl
aas
sub
xchg
add
inc
add
or
push
add
add
mov
cmpsl
adc
jl
cmpsb
cmp
add
fs
xor
fidivrs
add
lcall
add
add
jae
aaa
xor
add
adc
sbb
add
or
add
adc
sti
sub
add
xchg
test
int3
test
jl
mov
pusha
add
test
push
nop
adc
adc
out
or
jno
sbb
or
stos
mov
movsb
xchg
mov
icebp
les
add
pop
sbb
js
push
fidivrs
cmpsb
ret
test
dec
pop
test
les
lcall
leave
jno
xor
mov
fs
add
lahf
mov
add
iret
cmp
cld
mov
mov
or
imul
xchg
sbbl
aas
jle
in
pop
ret
ss
repz
sub
dec
xor
pop
aad
lods
cs
dec
add
push
jle
stos
and
out
clc
ffree
add
xchg
add
jb
mov
or
sbb
jb
xlat
push
mov
clc
movsb
sbb
cmp
xor
ds
and
shll
loope
jge,pn
lret
in
mov
add
push
mov
shrb
or
push
inc
add
repz
shrl
aas
adc
sbb
pop
pop
lods
or
inc
cmp
xor
cmp
add
inc
sub
mov
popa
rcl
movb
inc
cmp
add
sub
cmp
inc
in
push
movb
add
jl
add
add
test
inc
push
xchg
in
cmp
adc
xchg
js
dec
fnsave
or
dec
into
jge
inc
add
enter
mov
mov
add
fnstcw
into
out
dec
pop
idivl
lea
add
push
inc
jns
imul
repz
out
xchg
cmp
inc
adc
add
pop
movsl
lods
xor
cmp
shll
add
in
push
mov
mov
xor
loopne
add
add
add
jecxz
rcrb
push
fiaddl
aad
aad
push
mov
dec
arpl
and
and
or
xor
inc
inc
add
lock
push
cli
push
add
add
sbb
ljmp
mov
dec
mov
je
addb
faddl
shlb
add
pop
repnz
testl
ret
xchg
mov
loop
inc
lock
jno
sub
sub
jg
cwtl
xor
mov
ficompl
movb
jno
into
lods
and
rolb
inc
add
pushf
test
into
insl
cmp
pusha
add
add
mov
push
jp
pop
dec
sahf
push
imul
sub
cmpsb
rolb
and
popf
sbb
adc
ror
loop
add
test
adc
aaa
mov
xor
and
xchg
mov
fldenv
inc
add
add
xchg
mov
mov
push
lock
in
adc
adc
in
fmuls
pop
std
pop
and
add
out
repnz
les
jecxz
add
xchg
jmp
add
rcrl
push
jns
add
stos
adc
call
adc
call
iret
add
rolb
and
jne
repnz
sbb
mov
aas
pop
xchg
out
inc
es
xchg
inc
add
pop
test
or
mov
divl
addl
jb
fildll
jecxz
addb
mov
mov
int
dec
fdivrl
jo
outsl
fmul
inc
add
in
std
mov
xchg
push
add
sbb
test
inc
daa
dec
pop
popl
pusha
add
mov
add
push
or
pushf
enter
and
into
mov
lahf
and
add
pop
add
mov
aam
lea
enter
les
lret
adc
jecxz
and
je
cmp
imul
xor
inc
add
nopl
jbe
out
outsl
imul
cmp
lods
pop
xor
inc
add
mov
add
sti
cmp
xchg
push
test
cmp
xchg
mov
sub
pop
jno
push
test
mov
fstps
xchg
pop
sbb
sub
addr16
pusha
add
jne
push
cmc
pop
pop
aas
shrl
loopne
jne
icebp
xchg
push
inc
add
mov
enter
sub
sahf
enter
sub
loope
jbe
add
mov
repz
sbb
inc
addb
add
mov
xchg
cmp
cld
stc
test
mov
cmp
faddl
sub
les
and
enter
dec
sub
add
mov
jbe
fbstp
inc
add
add
xchg
negb
mov
push
jbe
jg
addb
and
call
cmp
fnstsw
add
nop
subl
jb
add
cmp
sbb
sbb
js
rolb
add
mov
or
in
pop
xorl
dec
mov
pop
pop
dec
fildll
aad
add
lahf
lds
test
mov
mov
sahf
jbe
gs
sub
mov
jb
add
push
aas
xor
or
out
loope
adc
mov
cmpsb
jg
pop
and
mov
rclb
loopne
ljmp
inc
add
mov
mov
int
add
jg
mov
outsl
sub
shrl
add
popa
lds
xchg
inc
xchg
cld
lods
dec
fnsave
push
add
decl
mov
mov
loope
fists
or
mov
push
or
rcr
mov
or
nop
pop
sub
xor
mov
enter
jecxz
sbb
and
lret
testb
fs
cwtl
enter
adc
shll
rolb
mov
sti
cmpsl
and
sbb
or
lret
or
dec
sbb
addb
mov
stc
cwtl
or
ds
dec
sbb
pop
pop
xor
push
add
or
je
testb
popf
mov
inc
add
jmp
add
xchg
pop
adc
xchg
adc
repnz
and
fistpll
jae
stos
push
roll
mov
push
loope
mov
add
xor
push
fstpt
jmp
add
jg
aas
cmc
adc
adc
es
pop
sti
outsl
xor
movsl
inc
add
adc
test
rclb
sarl
jle
addb
or
nop
pop
sub
adc
xor
int
jmp
adc
int
sbb
test
mov
into
jp
xor
cmpsl
loopne
add
add
mov
aas
jno
or
icebp
mov
cmp
popf
mov
add
sbb
jecxz
cld
jecxz
sub
out
ljmp
add
add
mov
int3
push
jno
mov
or
into
pop
cmp
loope
cmp
in
aas
inc
add
mov
sbb
enter
xor
jbe
test
sbb
imul
movsl
clc
add
gs
cmpl
cmc
das
jnp
or
popf
inc
add
cmp
dec
rolb
add
leave
icebp
mov
mov
gs
into
sub
in
stos
pushf
jnp
push
adc
add
xor
js
mov
roll
mov
fwait
dec
rcll
xlat
stc
xlat
xchg
popa
mov
rorl
or
sub
xor
jecxz
sbbl
rorb
mov
cmp
add
add
and
iret
sbb
popf
fisubl
iret
jbe
push
push
add
int
repz
add
imul
xor
rolb
mov
mov
sbb
ds
add
in
ja
fldenv
sub
sbb
sub
add
movsl
pop
add
xor
jp
inc
add
mov
frstpm(287
sub
int
jo
inc
add
xchg
push
das
lcall
int
mul
xor
add
add
sub
sbb
push
and
sub
mov
das
test
jbe
outsb
cs
jge
add
fldenv
aad
iret
inc
add
dec
cmp
ror
icebp
xchg
movsl
ljmp
mov
cmp
in
add
push
into
mov
popf
push
adc
sahf
inc
gs
aam
mov
cmp
xor
shlb
add
inc
add
rolb
roll
je
movsb
pop
pushf
xchg
hlt
pop
jno
add
push
jne
shll
xor
mov
rorl
imul
repnz
xchg
int
iret
hlt
mov
mov
sahf
mov
adc
mov
jns
lahf
mov
psllq
scas
or
movsl
and
lods
xor
add
repnz
cs
imulb
jge
pop
xchg
es
ret
int3
fwait
xor
add
adc
fistpl
aas
xchg
mov
inc
mov
jno
inc
add
jp
repnz
dec
adc
movsb
cli
mov
push
and
ss
jg
sub
mov
int
or
pop
jg
sub
fstpt
mov
hlt
jne
fstps
push
add
movsb
inc
xchg
inc
sbb
add
add
add
daa
sub
mov
jecxz
int
sbb
sub
sbb
sbb
push
sub
jnp
xchg
xor
call
gs
add
inc
add
sbb
cltd
cmp
xor
and
xchg
jg
sbb
sti
cmp
int3
sahf
add
xchg
lods
loop
and
pop
jg
xor
dec
pop
fisttps
sbb
in
sbb
jns
dec
mov
out
xchg
adc
jle,pn
jo
push
jp
add
and
stc
adc
adc
inc
cmc
xchg
or
jge
dec
pop
sub
dec
xchg
mov
xchg
pop
lahf
cmpl
mov
cli
ret
les
icebp
xchg
outsb
and
sub
add
push
or
das
out
push
cmp
cmp
shrb
jmp
cmp
add
loopne
mov
push
push
repz
je
in
pop
and
repnz
cmc
cld
out
add
in
cltd
cmpsl
js
add
iret
adc
add
insl
inc
inc
xchg
pop
cld
mov
xchg
fs
or
lock
fcmove
imul
dec
pop
sbb
popf
ret
insl
popf
and
xor
bnd
popa
pcmpgtb
mov
pop
es
sbb
jns
enter
testb
cmp
pop
mov
rcll
lods
or
xor
idivl
xor
aas
xchg
bound
sub
scas
stos
and
xchg
fadd
add
mov
in
xor
stos
jmp
push
ss
cltd
adc
mov
test
gs
pop
insb
adc
out
inc
pop
int
lods
int
aas
adc
pop
add
inc
jno
cmc
xlat
in
inc
add
mov
jns
scas
ja
push
dec
pop
xchg
lahf
xchg
clc
mov
add
fstp
subl
xlat
scas
mov
cwtl
push
push
xlat
inc
mov
and
push
lret
or
test
add
ja
add
les
orl
and
jmp
inc
add
sbb
lods
jb
xchg
mov
out
pop
ss
fldenv
jae
mov
adc
aaa
and
stos
push
push
xchg
jecxz
int
mov
push
mov
sbb
xchg
loop
outsb
cmp
adc
bound
jmp
push
sbb
out
dec
push
add
clc
push
scas
push
aas
mov
lock
pop
mov
pop
fdivl
jno
push
sub
cmpsl
dec
lea
add
add
add
loopne
jmp
insb
orl
std
call
xor
lods
xchg
imul
les
xor
rclb
add
fld
int
add
ja
or
cmp
push
xchg
or
mov
gs
hlt
xor
inc
mov
int
add
pop
jecxz
mov
scas
or
ss
push
pop
or
sbb
or
dec
sahf
rol
push
js
dec
cmp
shr
mov
addl
inc
es
jb
jge
mov
push
jg
xchg
and
adc
mov
daa
shlb
scas
or
cmp
pop
jmp
add
arpl
cmp
mov
or
sbbl
add
push
inc
std
add
dec
jecxz
jae
cmp
sub
push
mov
in
cmpsb
decl
jmp
or
aas
xchg
jmp
push
inc
add
mov
add
iret
mov
je
scas
jo
add
leave
test
mov
jne
ret
ds
pop
es
add
mov
sbb
adc
add
mov
jnp
and
inc
fnstsw
int
adc
cmc
mov
and
xor
mov
js
pop
cs
mov
hlt
cmpl
adc
test
jne
push
std
cld
dec
je
add
repnz
sbb
xor
mov
inc
add
out
mov
mov
pushf
dec
loope
push
inc
xchg
mov
and
insl
mov
lds
xchg
pop
xor
addb
mov
rcrl
and
aam
mov
aam
in
addb
in
add
jo
scas
push
add
xor
jmp
mov
pop
sti
xor
out
ja
stos
fstl
and
sub
cs
mov
test
sub
movsl
aas
inc
add
mov
repnz
or
cltd
addb
cs
and
inc
add
mov
mov
jl
das
jb
jnp
or
add
das
lahf
test
mov
inc
jbe
xor
add
or
sarb
add
test
loope,pn
push
jle
jae
add
faddl
dec
fmull
scas
popf
filds
pop
and
ret
inc
outsb
cmp
add
aad
and
or
icebp
and
bound
inc
add
dec
cwtd
xor
xchg
in
daa
and
dec
sub
jle
addr16
dec
or
jp
or
pop
dec
push
add
stos
mov
add
cli
mov
jp
or
mov
jbe
jl
xor
out
add
sub
xor
add
je
add
mov
dec
sarl
mov
shrb
std
lock
dec
mov
add
inc
shrl
pop
sub
mov
fs
sub
add
push
ljmp
sahf
mov
xchg
shrb
xchg
jge
int
adc
pop
jb
test
call
nop
popa
dec
cmc
cmp
add
pop
lea
or
enter
pop
push
je
pop
dec
pop
cltd
push
jle
les
mov
sbb
bound
jmp
xor
push
jno
ret
ljmp
pop
mov
call
add
shrl
fsubp
mov
stc
add
push
sub
mov
or
mov
push
xchg
pop
inc
inc
dec
ja
and
mov
aam
dec
push
test
inc
add
test
jo
jle
push
dec
movsl
hlt
xlat
clc
xor
stc
sub
cmpsl
mov
mov
jg
add
adc
loop
shrl
sub
mov
mov
ret
sbb
xchg
movsb
lcall
arpl
pop
loopne
jo
or
cmpsl
fs
std
aad
nop
jl,pn
or
test
mov
scas
mov
rcll
and
dec
lock
repnz
leave
cwtl
popa
cmpsb
sti
xchg
push
iret
aad
xchg
fstp
dec
repnz
addb
pop
sbbl
push
jp
mov
scas
pop
in
es
pop
and
leave
xor
add
xchg
das
mov
adc
or
popf
sbb
aaa
cmpl
add
popa
mov
jecxz
mov
inc
add
les
adc
and
add
push
mov
mov
sbb
out
hlt
jb
jl
mov
fs
mov
movsl
jno
pop
inc
add
xchg
dec
imul
inc
add
stos
sbb
xor
in
loope
stc
mov
push
add
leave
int
push
pop
or
nop
stos
imul
xchg
jmp
mov
add
int
mov
add
dec
jno
repnz
lods
lcall
lea
outsb
das
xor
lods
jno
xchg
out
mov
adc
fs
dec
mov
les
dec
lods
add
in
repnz
outsb
jb
jmp
mov
push
lds
inc
add
mov
adc
adc
push
push
add
je
mov
pop
in
add
cmp
lret
push
lds
sub
pop
stos
add
shrb
jno
sbb
mov
ret
test
or
and
xlat
sbb
jne
add
int
cltd
subl
mov
outsb
or
mov
sub
xchg
jp
add
loopne
cmc
repz
and
shll
rcrl
sbb
adc
mov
xor
xchg
mov
daa
dec
lds
sbb
fcmovnu
and
iret
ds
rolb
test
in
jno
mov
es
fisubrs
lds
add
pop
xchg
mov
or
daa
or
cmpsl
push
repnz
xchg
std
aam
sub
in
dec
lock
or
sub
add
inc
repnz
add
outsb
insb
leave
stos
les
adc
icebp
std
xor
cltd
sbb
cmp
testl
fxch
lcall
sbb
clc
push
divb
xchg
neg
inc
add
sub
push
add
lods
adc
out
jbe
out
lret
add
push
movsl
movsb
lret
or
add
stc
addb
loop
out
add
cmp
in
pop
aad
bound
xchg
fwait
arpl
pop
cli
shll
add
cmc
cli
xor
jne
fwait
jle
or
mov
jl
add
add
xor
sub
movsb
jmp
xor
sbb
leave
xchg
push
dec
or
jno
ss
and
push
pop
mov
fisttps
add
addb
xchg
out
push
cs
sub
test
jns
and
mov
addl
add
cmc
mov
dec
push
push
jo
lods
inc
jns
loopne
out
popf
fs
or
out
add
movb
jmp
jno
jl
xchg
xorl
mov
jl
add
clc
iret
jge
and
ret
enter
mov
push
insb
out
xchg
pop
bound
stos
stos
push
add
and
scas
xor
adc
pop
and
dec
popf
or
add
pop
mov
clc
fstpl
xchg
fsubs
pushf
mov
scas
mov
int3
mov
push
dec
mov
ss
fcompl
pop
pop
rolb
mov
add
iret
hlt
addb
and
mov
idivl
and
pop
mov
xorl
xchg
mov
movb
insb
popa
ja
add
divl
push
add
mov
icebp
es
addr16
fldt
add
cbtw
mov
jge
sbb
icebp
inc
add
aad
call
out
lahf
push
lds
cli
rolb
or
stos
add
jno
dec
leave
jb
xchg
lods
add
adc
dec
and
and
pop
pop
div
in
push
mov
xchg
dec
fs
rclb
notb
xchg
inc
add
or
cltd
adc
dec
mov
andl
bound
mov
insb
fwait
xchg
les
and
adc
dec
cmp
icebp
dec
addl
popa
ja
stos
pop
adc
ja
stos
std
pushf
push
call
daa
notb
sub
jne
pop
pop
jno
loope
mov
mov
push
add
mov
jno
cmp
add
sarb
jnp
and
push
shll
movsb
sub
cmpl
push
mov
add
ja
js
add
dec
inc
add
mov
cmp
in
push
sbb
push
js
push
fucomip
sbbl
addr16
push
sbb
adc
dec
mov
mov
xor
out
mov
lock
test
test
jg
dec
dec
hlt
pop
jle
sbb
sub
enter
loop
out
mov
jmp
bound
jbe
add
ja
dec
loopne
dec
xchg
and
adc
or
xor
fs
iret
js
fs
add
or
int
inc
add
int3
sub
enter
iret
adc
mov
inc
mov
add
pop
inc
scas
popa
xchg
jg
aam
ficompl
pusha
add
and
push
mov
adc
fstps
call
cmp
testl
add
inc
add
aad
in
cmp
mov
popl
add
and
mov
add
cmp
push
jnp
addl
movb
xor
pusha
add
sub
lret
movsb
jne
fsubs
bound
fs
add
mov
adc
pop
cmp
ret
mov
addb
jne
sbb
aad
pusha
add
pop
jne
sti
sbb
add
stos
jl
fucom
add
fldcw
fidivrl
stc
xor
or
lret
test
roll
mov
lea
fsts
jle
iret
adc
adc
addb
add
jns
pop
pop
add
xchg
mov
leave
fwait
shl
jge
mov
mov
adc
add
daa
daa
ds
js
mov
xchg
out
fstps
movsl
adc
je
gs
stos
insb
pop
pop
xchg
scas
test
aas
jns
test
das
cmpsb
out
pusha
add
enter
imul
daa
aaa
jl
xchg
shll
test
aam
add
add
add
aaa
and
xchg
pop
adc
mov
lock
jo
rcr
jecxz
jae
aas
add
leave
sbb
or
call
mov
enter
xchg
test
sbb
and
add
pop
dec
test
sub
pop
decl
stc
int
mov
add
int
mov
outsl
inc
add
mov
jb
xor
bound
add
sub
add
mov
icebp
and
add
adc
aam
mov
push
mov
add
xor
push
and
cmp
js
rolb
or
pop
and
cmp
or
movb
or
push
cli
sbb
inc
mov
aam
ret
sti
push
xor
scas
push
cs
loop
push
hlt
mov
add
pop
repz
add
les
mov
push
xor
add
push
add
movb
std
sub
jg
inc
add
pop
fwait
pop
pusha
add
mov
adc
mov
mov
jg
fidivl
aaa
sub
out
test
into
loop
icebp
dec
lret
arpl
xchg
lock
adc
jae
mov
xchg
xchg
dec
add
sahf
popf
cld
xlat
inc
arpl
jbe
add
lcall
add
rorb
loope
jg
repnz
daa
push
iret
mov
dec
loopne
icebp
scas
stos
inc
xor
push
add
sub
aaa
outsl
mov
scas
dec
mov
mov
xor
xchg
daa
push
popa
mov
fnstenv
movsl
mov
jbe
ds
or
ja
mov
outsl
into
sbb
add
and
sbb
jmp
test
out
repnz
add
inc
cld
addr16
mov
and
xchg
sbb
add
lret
mov
xchg
scas
popa
sbb
mov
aam
sub
pusha
add
add
in
push
jge
mov
add
mov
add
cli
outsl
push
hlt
cmp
je
aad
mov
mov
add
daa
js
ficompl
cmp
je
insl
out
gs
xchg
sti
loopne
mov
test
test
add
int
add
rclb
lock
mov
mov
movb
movsb
sub
rcr
mov
pop
push
ret
jecxz
or
arpl
add
arpl
inc
aas
adc
enter
mov
dec
adc
or
insb
push
add
dec
arpl
jmp
inc
add
mov
nop
add
aas
mov
fwait
jns
popa
add
aas
push
mov
out
mov
pusha
add
add
jbe
dec
test
push
mov
sub
mov
addb
push
ds
stos
xchg
adc
fbld
add
add
push
mov
addb
aad
or
push
add
es
clc
sbb
add
dec
movsl
sbb
xor
imul
mov
xor
daa
xchg
mov
pop
xor
js
pop
add
out
add
adc
outsl
mov
cwtl
lret
les
outsl
les
and
sub
add
dec
lret
push
int
push
add
cwtl
mov
lods
jle
add
inc
scas
testl
cwtl
inc
cmp
cmp
mov
pop
arpl
sub
lahf
stos
pop
test
pop
adc
sti
push
addb
std
leave
scas
out
add
enter
push
push
inc
lret
add
icebp
xor
add
fisttpl
addb
movb
cltd
add
inc
dec
push
rolb
mov
mov
xchg
and
icebp
and
fdivl
idivb
xor
pusha
add
pop
or
mov
xchg
mov
rcl
xlat
cmp
cli
push
jno
xor
adc
xor
fs
loope
out
and
pop
mov
les
sahf
mov
ret
test
movsb
and
pop
lret
xchg
xchg
add
ficoms
pop
or
pop
or
loopne
das
insb
icebp
dec
push
or
call
insl
out
jecxz
jmp
pop
mov
mov
int3
xchg
test
pop
arpl
mov
pushf
imul
pushf
and
jecxz
clc
jne
cmp
test
inc
add
ds
sbb
pop
sub
iret
mov
stos
out
jnp
xor
lods
fcmovne
push
sub
decl
iret
call
scas
jo
rcll
movb
add
mov
cli
pusha
add
mov
or
data16
jmp
add
and
imul
pop
mov
cmpsl
aas
push
mov
cmp
jl
add
loope
leave
cld
mov
das
sbb
ljmp
decb
inc
add
add
jb
jo
mov
adc
dec
mov
dec
loop
imul
push
add
ds
mov
fs
xor
fbld
jmp
loopne
jp
mov
push
add
mov
nop
jb
or
inc
mov
lret
repz
sbb
dec
decl
in
icebp
add
sbb
mov
add
test
les
inc
int
clc
out
xor
push
and
std
cld
div
sbb
jne
lds
loope
or
xchg
mov
xlat
inc
add
ds
dec
movzbl
mov
inc
into
xchg
sub
sbb
and
and
pop
xor
jnp
std
int
add
addb
loopne
cmp
add
std
rcrl
or
scas
call
mov
add
xchg
xchg
sbb
cmp
stos
lods
lcall
stos
addb
fs
push
push
add
xchg
jae
movb
or
pop
ror
push
out
pop
mov
in
add
enter
mov
xlat
outsl
insl
movsl
sub
push
cli
jl
push
pop
adc
mov
mov
sti
push
in
in
push
pop
mov
xor
cld
xor
and
push
inc
add
nop
push
mov
fimuls
test
mov
push
subl
inc
and
dec
inc
add
sub
insb
sbb
add
popf
addb
fs
xchg
rol
add
push
jmp
outsl
cmp
data16
dec
out
addb
cmpsb
lcall
popf
mov
leave
shlb
add
add
adc
push
mov
add
jnp
pop
mov
mov
add
or
cltd
xor
fisttpll
push
push
mov
dec
sbb
dec
insb
and
into
lahf
leave
mov
sti
cmp
mov
int3
mov
outsb
jae
dec
sbb
inc
add
pop
dec
pop
ljmp
pop
bound
or
fcmovb
add
dec
push
pushf
in
add
add
outsl
xchg
mov
push
inc
std
mov
adc
adc
outsl
into
andps
jmp
loope
xchg
xor
aaa
pop
daa
add
fcmovbe
cmp
add
add
dec
adc
mov
cli
std
movb
and
add
popf
mov
ret
dec
movb
pop
jg
xor
adc
sub
fsubl
add
mov
popa
mov
push
cld
repnz
fcmovnb
sbb
pop
pop
popa
mov
xchg
jp
out
push
inc
add
in
aaa
repz
es
inc
add
test
push
enter
enter
addb
add
scas
in
fdiv
mov
add
sub
adc
daa
pop
xchg
int3
or
lret
lret
mov
xor
adc
xchg
xor
mov
out
fwait
stc
pop
lahf
out
cmc
xchg
mov
add
pop
in
add
shr
out
arpl
push
push
mov
pop
arpl
or
jle
daa
jle
jmp
and
sahf
mov
jle
aam
roll
cmp
addr16
mov
addb
hlt
cmp
ss
stos
outsb
mov
ret
add
mov
or
ret
shr
fsubs
add
add
add
jmp
or
mov
add
push
test
icebp
cmp
test
fwait
mov
push
add
cmp
in
sub
hlt
rolb
pop
std
xor
fs
xchg
add
fsubrs
popf
lods
data16
or
or
cwtl
xchg
daa
pop
in
pop
add
jg
mov
xlat
cltd
mov
pop
inc
pusha
add
push
xchg
cs
lcall
mov
mov
lcall
sbb
fists
movsl
mov
xor
xchg
push
mov
push
and
sub
fucomp
mov
pop
mov
jnp
cmc
out
or
add
jb
lea
aas
jecxz
lock
ficoms
push
jle
je
addb
xchg
fs
in
mov
pop
fwait
lods
push
mov
lret
adc
xor
addb
add
ror
in
add
aaa
iret
fdiv
call
inc
les
jmp
lret
les
mov
fsubs
add
aad
stc
repnz
xor
pop
dec
repnz
jbe
add
xor
add
mov
push
adc
cmpsb
xchg
out
sbb
addb
aam
adc
out
xlat
test
or
cmpsl
and
or
icebp
inc
add
jmp
ja
movsl
loopne
sub
mov
test
add
ss
ret
outsb
push
dec
cld
outsb
popa
insl
fldt
inc
lods
xchg
shll
adc
test
cmp
jns
lea
fildl
sahf
cwtl
movsl
outsb
int
ds
ds
andl
pop
or
mov
jge
dec
hlt
scas
clc
jmp
rcr
push
add
xorl
sbb
pop
bound
mov
rorl
xor
dec
loop
add
jl
icebp
ds
hlt
or
jge
aaa
push
fdivrs
jnp
and
add
adc
mov
sahf
ss
inc
add
cmc
mov
push
inc
add
int3
push
and
pop
int3
gs
mov
nop
cmpsb
mov
scas
clc
sarl
add
cmpsb
mov
pushf
movb
insb
sbb
xchg
addb
adc
shrb
movb
add
cmp
push
sbb
vmovupd
sub
daa
or
jl
imul
sti
and
sub
mov
jb
mov
idivb
stos
bound
adc
jp
in
add
push
adc
add
mov
xchg
push
jbe
xchg
xor
mov
add
and
add
cmp
mov
mov
rol
cmp
lret
mov
mov
add
pop
ss
add
outsl
jle
push
cwtl
lret
rolb
test
cli
std
data16
dec
xor
clc
enter
les
bswap
mov
ret
cmpsl
scas
fists
call
xor
add
shrl
add
cmp
xor
cltd
sahf
jp
fabs
jl
fucom
lods
aas
es
xchg
in
lods
and
cmp
int
sub
inc
int3
movsl
cmpsb
pop
xchg
ret
jle
push
adc
cmpsl
sub
rorl
dec
mov
dec
push
addb
popf
fistl
inc
add
insb
pop
gs
jmp
outsl
mov
fs
jbe
mov
add
dec
imull
outsb
js
dec
in
push
jnp
xchg
cld
sub
add
add
mov
mov
enter
add
inc
add
inc
add
add
mov
fs
aad
insb
js
js
mov
pushf
addl
jne
sub
std
jno
xor
jle
fsubrl
jne
and
add
test
sub
add
and
xchg
sub
jmp
add
fisubl
sbb
jg
xchg
fwait
push
sbb
ficoml
and
pop
jb
cmpsb
fdivl
ja
or
sbb
add
cltd
lock
jb
inc
add
movsl
jmp
int3
dec
nop
popa
push
ficomps
outsl
lret
push
push
imul
add
xchg
dec
dec
mov
xor
movsb
aaa
inc
add
add
aam
js
jecxz
sub
inc
add
dec
pop
pmulhw
js
movsl
push
add
arpl
dec
mov
pop
push
add
pop
movb
repnz
ss
les
es
mov
add
mov
add
test
push
shlb
inc
add
imul
add
outsl
mov
vminps
and
ret
dec
stos
xchg
add
mov
sub
inc
adc
jmp
loope
roll
fwait
push
cpuid
lret
addb
lret
xor
sub
into
mov
pop
pop
mov
lret
add
jg
fwait
mov
mov
xor
jecxz
and
xor
femms
test
mov
xchg
daa
cmp
cmpsl
push
inc
fwait
pushf
out
scas
rcrl
nop
aas
xlat
add
add
sub
lcall
icebp
lahf
outsl
push
and
leave
lock
fcompp
int
or
add
mov
rcrl
scas
outsl
insb
rolb
adc
jmp
fucomp
dec
insl
push
enter
adc
xchg
push
inc
add
fsubl
adc
xchg
mov
pop
out
dec
mov
pop
add
push
add
mov
xor
lea
push
out
add
in
and
mov
std
ljmp
mov
jbe
lea
rcr
mov
pop
aas
sbb
das
stos
adc
pusha
add
pop
and
mov
add
add
aad
dec
aas
add
pusha
add
mov
mov
or
mov
in
addr16
sbb
xchg
arpl
sbb
fdivrl
int
sub
xor
jl
jnp
aaa
daa
mov
cwtl
xchg
sbb
jae
pop
push
outsl
loopne
add
cli
or
push
add
pop
stc
insl
and
adc
cs
test
mov
stos
mov
or
xlat
cmp
fistpll
cmpl
in
push
lds
pop
xchg
push
jb
and
fldl
or
add
lods
add
loop
cld
mov
ljmp
es
scas
popf
pushf
xchg
nop
dec
lods
and
and
mov
mov
cmp
stos
pop
and
sahf
sahf
stos
mov
into
jl
add
adc
push
inc
add
stos
imul
push
xor
lock
pop
or
arpl
push
sarb
test
jg
imul
jge
movsb
dec
ss
adc
gs
add
out
int
sub
es
xchg
xor
stc
mov
mov
in
out
bound
fnsetpm(287
sub
add
pop
xor
ret
jne
fwait
repz
ja
sub
cld
js
mov
add
sub
jno
aas
or
add
add
insl
mov
sbb
add
mov
push
adc
lods
lret
repnz
cmp
add
int
fcoml
lret
sahf
andl
pop
push
add
lea
and
das
push
cmp
xor
add
or
int3
xchg
lods
push
pushf
sbb
push
add
fidivl
and
enter
lock
add
std
inc
mov
bound
and
pusha
add
xchg
mov
pop
shlb
push
mov
popf
cld
push
sarl
imul
mov
adc
pop
out
inc
and
sbb
and
pop
fs
outsl
cmp
dec
and
pop
sbb
add
arpl
loope,pn
in
and
mov
jns
insb
inc
push
ljmp
in
pushf
pusha
add
leave
out
push
rolb
shl
stc
cmc
push
lahf
mov
lcall
hlt
adc
sbb
add
shlb
sub
jmp
jno
jle
sti
and
cmp
int
xchg
jns
pop
inc
and
insb
xor
mov
jns
ficompl
in
or
loop
jmp
stos
addb
out
mov
inc
add
push
and
in
adc
jle
popa
cmp
inc
add
out
or
cmp
ds
jae
push
push
cld
lock
cwtl
js
sbb
inc
add
add
jno
add
cmp
xor
xchg
cmp
xchg
nop
or
add
xor
dec
pop
or
jmp
add
sahf
aad
sub
jmp
stc
dec
or
jo
pop
xchg
mov
mov
adc
popa
leave
cwtl
loope
dec
push
xor
sbb
jmp
xor
adc
push
inc
adc
push
pop
out
mov
arpl
ds
rolb
movsb
cmp
jge
cwtl
and
imul
jne
xchg
push
icebp
std
clc
or
adc
lock
pusha
add
add
test
ror
imul
fmuls
add
scas
shll
add
loop
push
cmp
xchg
cwtl
aaa
xchg
movb
data16
cmpsb
inc
ds
mov
sbb
add
inc
add
dec
xchg
hlt
xorps
adc
add
repz
stc
ret
add
lret
cld
add
mov
sarl
sub
dec
sub
xchg
add
pop
mov
je
adc
lahf
jp
inc
das
mov
aad
pop
inc
add
mov
scas
add
push
imul
jp
add
shrb
outsl
xor
add
fcoms
dec
dec
push
lock
pop
idivb
cmpsl
mov
aaa
add
pop
mov
movsl
rcl
or
add
movb
and
pop
adc
pop
add
mov
mov
inc
and
xor
test
cmpsl
jb
xchg
mov
outsb
and
dec
and
shrb
outsb
call
es
out
pop
xchg
std
pop
push
xlat
outsb
dec
shlb
add
dec
psrlq
xorl
add
cs
jge
icebp
movsl
dec
test
in
inc
add
jb
adc
popa
addr16
outsb
movsl
popa
dec
cmp
clc
mov
and
das
mov
add
xchg
push
xchg
mull
add
aam
ret
sbb
outsl
mov
xor
ret
out
add
cltd
mov
enter
int
push
loope
pop
dec
aas
mov
aad
mov
cmp
icebp
mov
lcall
dec
jnp
or
stc
mov
bound
lds
mov
pop
test
leave
sti
cwtl
xchg
jo
repnz
ds
mov
pusha
add
imul
dec
mov
add
adc
enter
push
ret
mov
or
mov
add
mov
push
or
jb
mov
add
in
mov
mov
das
adc
lods
jne
or
mov
jl
sbb
insl
cmpsb
cmpsl
and
repz
enter
ret
repz
mov
cmp
xchg
inc
add
and
jno
push
addb
mov
imul
shlb
jne
in
dec
test
xchg
inc
rcrb
or
inc
jecxz
les
push
or
inc
xor
add
jg
mov
cmpl
pop
rol
add
mov
adc
mov
imul
and
add
jbe
in
bound
jmp
test
pop
cwtl
fimull
sub
dec
ss
popf
lret
mov
add
sbb
mov
jle
cmp
fabs
mov
add
xchg
ret
push
pushf
push
jb
pop
mov
mov
lock
call
test
add
push
in
jg
rcll
std
aad
aam
add
int3
cmp
xor
dec
cwtl
pop
push
adc
loop
mov
mov
cmp
fwait
icebp
inc
out
scas
rolb
mov
add
xor
or
add
int
adc
dec
xor
hlt
call
add
pop
xor
mov
adc
adc
add
mov
cmp
ds
add
mov
cmp
addl
add
addb
mov
mov
shlb
and
aam
jge
imul
fwait
mov
sub
lret
push
push
pop
inc
add
insl
and
cmpl
mov
or
lods
add
sub
cmp
xorl
add
addb
sarl
jb
xor
add
pop
cmp
fisttpll
cli
pop
imul
add
testl
imul
cli
test
add
or
dec
xor
aaa
mov
push
or
lods
or
sbb
add
mov
pop
lret
daa
rolb
cltd
jmp
fsubrl
jmp
fsubs
push
add
pop
sbb
leave
sbb
inc
add
pop
push
dec
or
xchg
sbb
movsb
xchg
aad
xchg
mov
shll
xlat
data16
data16
xlat
cmc
jns
add
sub
push
in
push
push
push
jnp
push
inc
add
adc
data16
adc
insb
rcll
cs
lock
cmp
stc
push
jl
add
sar
iret
xchg
roll
xchg
andl
nop
addb
pushf
mov
add
cmpsl
loope
mov
outsl
movb
add
xchg
mov
xchg
dec
lods
add
sub
add
fbstp
adc
dec
sub
cmp
xchg
xlat
lahf
jg
and
imul
sbb
xor
mov
push
jbe
add
mov
mov
adc
mov
aad
pop
push
addb
push
test
sti
out
push
hlt
mov
mov
std
insl
push
movb
push
movntq
and
pop
lret
out
loopne
leave
call
cmpsb
add
pop
insl
mov
add
cmp
add
jl
ds
jle
inc
add
inc
add
jbe
push
addb
js
mov
mov
lea
push
xchg
shl
dec
xor
pop
aaa
sub
lea
adc
sub
lods
mov
xor
aaa
xor
shrl
add
pop
arpl
inc
add
cmpsl
dec
push
flds
cmc
adc
lea
addb
movsb
test
add
jne
jno
ret
push
lods
sbb
xchg
adc
xor
push
inc
add
sub
pushf
adc
data16
adc
sub
call
enter
testl
rclb
in
js
mull
out
in
in
dec
or
add
rolb
shl
es
add
add
inc
mov
push
mov
jbe
push
mov
bound
xchg
hlt
shll
jl
aas
loope
sub
xor
push
jo
ljmp
outsl
sar
rorb
adc
mov
hlt
jge
add
xchg
out
sarb
loope
inc
aaa
out
xor
jnp
mov
add
fs
add
outsb
sarl
sub
pushf
dec
clc
dec
lds
in
add
add
dec
pop
cld
lret
leave
fsubrl
addb
sbb
mov
int
pushf
xchg
popf
into
sarb
addb
addb
dec
fs
mov
testb
out
sbb
fildl
cli
mov
inc
cmp
aad
mov
insl
mov
pop
lret
add
add
dec
dec
mov
popa
mov
out
cwtl
es
mov
popf
and
mov
cs
lret
add
push
outsl
mov
rolb
xlat
lcall
test
pop
orl
sti
popf
add
inc
imul
add
push
rorb
call
fsubp
insl
test
test
sub
jbe
test
lea
bound
rcll
addb
push
adc
xor
hlt
jae
outsl
stos
lahf
add
jb
std
xchg
cmp
mov
int
mov
call
cmp
add
scas
rolb
xor
add
je
rolb
sbb
loopne
sbb
mov
add
add
jnp
je
out
insb
sub
xor
fucomi
jns
and
mov
fs
push
fimull
into
ss
and
and
daa
lret
arpl
mov
insb
mov
mov
sub
or
add
xor
adc
inc
add
enter
xor
mov
dec
mov
mov
add
dec
inc
add
jmp
sub
rolb
and
in
ror
into
stos
bound
push
movb
xchg
cmpxchg
pop
shr
xchg
add
call
mov
xchg
movsb
jecxz
pop
lea
or
int3
mov
jecxz
scas
jns
or
or
frstor
out
cltd
mov
lcall
add
add
notl
js
fimuls
add
lcall
push
stos
popf
add
imul
inc
add
rolb
add
movb
sarb
add
movsl
xor
fwait
in
pop
dec
les
subl
inc
out
dec
dec
ret
cmpsl
into
repnz
add
cmpsl
xchg
out
js
and
iret
out
ds
add
outsb
inc
mov
lods
in
outsl
cltd
xor
lock
mov
movsl
das
xchg
jl
mov
fs
add
int3
lds
rolb
pushf
jnp
test
cmp
fadd
add
repz
jge
add
cmpsb
mov
stc
call
ja
jnp
rclb
repnz
sbb
cmp
sarl
add
cltd
movsb
mov
enter
add
xor
call
push
or
pusha
add
iret
adc
fwait
adc
mov
out
xor
jne
mov
in
add
lret
add
movsl
pop
mov
cmp
add
lret
xor
addb
test
mov
stos
out
movsl
adc
imul
int3
loope
aad
imul
xlat
loope
xor
jae
jns
ss
cmp
dec
insl
jae
pop
not
jo
lods
jne
fbld
aaa
outsl
jb
mov
je
inc
or
cmp
jmp
pop
mov
add
lds
mov
pop
inc
add
sbb
and
das
sti
test
aas
cmp
cmp
cmp
add
fcmovne
pop
and
imul
in
test
repnz
dec
mov
adc
cmpl
mov
sub
mov
add
push
or
jae
mov
xor
push
paddusw
add
lret
and
mov
push
sbb
xor
into
mov
aad
mov
subl
test
leave
cmp
mov
add
inc
in
das
jecxz
xchg
mov
inc
cmc
mov
adc
cs
movsb
push
roll
add
jns
mov
push
add
scas
mov
push
das
xorl
sub
add
mov
adc
add
cmp
adc
cmp
lret
cmp
rolb
movb
sbb
into
xor
inc
sbb
ret
mov
out
jae
fnsave
add
add
fwait
jmp
adc
xchg
jo
inc
add
popfw
aam
pop
lods
pop
sbb
xor
daa
cli
icebp
pop
rolb
lahf
rorl
gs
cmp
insl
nop
scas
aas
sahf
or
jl
mov
add
ss
cmp
jmp
fmull
add
ret
adc
push
adc
and
jmp
jge
jmp
cmp
add
fs
xchg
rcrl
enter
xchg
je
xchg
cli
pop
pop
inc
add
and
mov
xchg
sbb
gs
setp
jb
or
add
ljmp
pushf
test
xor
fidivl
insl
xor
jge
ljmp
push
or
out
add
shlb
pop
push
jno
xor
push
push
pushf
jae
or
jns
test
jb
add
mov
scas
pusha
add
add
repnz
jno
dec
test
add
xor
pusha
add
daa
les
xchg
call
mov
sub
adc
push
cli
rolb
das
cmpsb
or
mov
je
shrl
add
mov
popa
arpl
clc
xlat
stc
lret
rcrl
notb
add
insb
mov
mov
jbe
xchg
andl
popa
jno
lahf
cmp
add
inc
dec
mov
imul
movsl
sbb
xchg
push
bound
xor
add
add
clc
movsl
loope
iret
lods
jp
add
sbb
mov
adc
addb
jns
lahf
ss
add
or
cltd
mov
cmp
jno
aam
add
dec
push
jp
repz
gs
scas
xor
imul
xchg
movb
or
js
mov
xchg
mov
pop
shll
pop
scas
adc
add
sub
push
ficoml
jp
sti
cmp
stos
cld
jns
movsb
int3
and
fs
clc
mov
add
add
push
jbe
mov
ficompl
add
mov
inc
shll
ljmp
add
push
sbb
jmp
mov
gs
cmp
sbb
arpl
xor
in
int
imul
inc
mov
hlt
jecxz
add
lcall
add
shll
lret
sub
mov
adc
fwait
scas
mov
mov
loop
sub
add
xchg
pusha
add
inc
add
sub
cltd
data16
pop
inc
mov
test
mov
stos
jle
popa
rcll
add
cmp
mov
jae
and
inc
and
mov
ss
pop
les
xor
jae
fstpl
pushf
mov
add
repz
sub
in
cmp
movb
inc
lods
xlat
mov
or
popa
sub
sub
addb
pop
movsb
stc
dec
mov
or
in
int3
jmp
dec
dec
loope
int
jmp
and
push
add
xchg
rolb
insb
test
push
mov
popa
mov
dec
mov
mov
dec
stos
popa
dec
jmp
add
inc
add
push
add
test
push
xchg
sub
fsubl
sub
mov
fcomi
mov
push
insb
sbb
mov
lret
xor
add
push
mov
xor
pop
std
and
mull
ds
inc
and
add
add
adc
mov
nop
jp
sti
dec
stc
xor
push
mov
pusha
add
and
das
push
jb
mov
movsl
rcr
icebp
add
rcll
add
in
push
pushf
or
add
jp
bound
push
add
rolb
scas
cmp
lahf
inc
nop
jne
add
inc
add
xor
pop
pop
bound
xchg
lds
dec
add
cmp
push
adc
or
rolb
pop
int
sbb
andl
fsubr
sub
mov
add
pop
scas
jmp
in
femms
int3
lock
loop
daa
xchg
sub
jge
dec
mov
mov
stos
xchg
or
test
sub
adc
cmp
rclb
or
xchg
or
out
mov
lods
daa
aam
loop
outsl
pop
and
add
push
rolb
icebp
mov
add
or
std
dec
gs
sti
jae
mov
mov
or
push
leave
shll
stc
outsb
cli
inc
orl
aaa
xor
push
in
nop
loop
addb
xor
dec
sbb
xor
loopne
adc
and
pop
xor
ret
or
nop
lret
add
xchg
cmc
les
enter
imul
jne
int3
dec
mov
aaa
and
outsb
out
bound
ss
mov
aas
jl
add
cmp
aas
mov
jmp
lods
in
aam
add
mov
ret
jge
aaa
xor
out
mov
add
pop
rol
pop
sti
sarl
daa
je
jo
lock
testl
cmc
push
adc
lods
and
pop
in
out
out
jle
ljmp
push
in
add
jmp
int
dec
out
add
or
jno
movsl
add
lods
cwtl
xor
adc
scas
xchg
test
mov
inc
add
push
fldt
minps
mov
cmpsb
addb
sbb
jae
add
xlat
jle
cwtl
xchg
je
mov
add
imul
mov
mov
mov
pushf
lds
mov
mov
scas
pop
mov
mov
pop
iret
xor
cmp
sbb
push
test
push
cltd
pop
sbbl
and
mov
adc
and
add
sahf
pushf
test
loope
bound
loope
add
adc
test
hlt
and
hlt
subl
outsb
ljmp
mov
aad
enter
xchg
xchg
std
mov
xchg
je
inc
fnsave
cmc
inc
xchg
mov
repz
sar
xchg
dec
pop
xchg
inc
nop
push
pop
mov
gs
repz
jo
and
jmp
add
mov
mov
lret
mov
mov
sub
and
xchg
sti
nop
cmp
push
adc
decl
stos
add
mov
leave
sbb
xchg
std
dec
fiadds
add
cwtl
or
add
xor
and
mov
scas
jbe
pop
adc
add
mov
mov
repnz
lds
sti
inc
pop
inc
sbb
jge
cld
loop
fistpl
and
and
out
inc
add
out
jns
int3
cmp
lods
call
mov
or
add
mov
jae
add
sub
in
fsubl
pusha
add
sahf
jl
add
jle
pop
int
out
jge
fbld
push
mov
call
xchg
sub
inc
add
add
fistpll
inc
add
daa
jno
pop
inc
push
xchg
jg
push
cs
inc
add
add
add
sbb
add
lods
out
hlt
pop
lods
enter
nop
cli
mov
movsb
jmp
push
xor
inc
add
je
test
aam
cmpsl
cmp
sbb
push
mov
sti
std
xchg
and
xchg
mov
pop
jmp
insb
jno
sahf
add
jl
lea
add
mov
movb
insb
call
jns
mov
mov
mov
push
addb
add
mov
xlat
outsl
add
fimuls
push
add
call
or
xchg
jb
into
popf
pop
cmp
call
pop
push
pusha
add
mov
out
and
insl
sti
ja
xchg
ja
jmp
and
repz
dec
daa
pop
push
rcr
aad
or
pop
fdivrl
jns
das
fs
notb
cld
sbb
xor
cmp
subw
es
mov
mov
and
add
xor
inc
add
popa
and
or
add
dec
pop
test
cld
loop
xchg
outsb
gs
add
test
xchg
lahf
xor
addb
mov
stc
mov
pop
cs
loopne
pop
fstpl
aaa
int
push
add
pop
decl
xor
sbb
pusha
add
movb
xlat
mov
mov
shrl
or
jno
mov
inc
int
mov
divb
jge
cmp
and
jg
push
negl
mov
imul
cmp
mov
and
scas
sub
xchg
scas
xchg
into
push
add
xor
add
popf
sbb
testl
add
mov
jmp
cmp
mov
in
popa
mov
fcomps
xchg
les
jno
push
repz
inc
inc
jns
stos
pushf
stos
jo
pop
unpckhps
cmp
sbb
jnp
sub
lds
in
jecxz
pop
repnz
stos
and
cmc
add
call
add
aam
out
dec
lods
sub
add
scas
cltd
ljmp
cmpsl
mov
pop
pop
stos
push
push
cmpsl
mov
in
loop
popa
inc
jne
push
fisttpl
jnp
sbb
push
add
lret
fwait
sti
call
insb
test
negb
jo
out
add
pop
fidivrl
inc
add
and
jb
rcrb
add
inc
add
pop
mov
movq
xor
outsl
fincstp
push
sbb
xchg
jmp
sub
fwait
add
scas
mov
jbe
sbb
mov
add
xchg
sub
xchg
mov
xchg
fcmovu
gs
xor
dec
mov
push
mov
xchg
sub
pop
ffreep
add
fldenv
inc
data16
sbb
add
or
adcl
pop
push
add
aaa
ret
jne
das
cltd
out
dec
xor
arpl
inc
add
ret
lcall
push
push
add
pop
sbb
in
sub
sub
dec
ds
and
sbb
sbb
add
mul
xchg
xor
aad
jmp
mov
sbb
test
les
stos
out
push
xchg
imul
mov
sub
mov
cwtl
xchg
fdivrs
jmp
scas
das
inc
dec
or
hlt
add
push
mov
xlat
push
cmpsl
in
xchg
popf
mov
mov
push
std
lret
and
mov
cmp
sarl
cmp
sub
push
mov
xor
jbe
pop
sub
add
add
push
imul
xchg
mov
enter
cmp
pmullw
add
push
add
add
dec
and
cmpsb
push
jmp
add
sub
mov
shll
iret
xor
icebp
stos
xchg
pop
jne
fcoms
xchg
test
sub
jg
xor
mov
and
pop
negl
aas
inc
add
cmp
dec
mov
add
sbb
cmp
movsl
lcall
dec
add
orl
scas
ja
data16
jbe
pop
fadds
sub
jo
inc
add
jb
loope
add
pop
add
bound
jne
push
inc
add
push
in
inc
add
in
jecxz
inc
add
add
jmp
mov
add
sub
lods
rol
add
push
subl
mov
ret
std
mov
sub
jl
mov
mov
addb
int3
push
jne
das
adc
pusha
add
add
addb
add
scas
dec
fdivs
out
data16
je
loope
xchg
out
rcl
push
mov
add
addb
aam
jmp
cli
ret
lock
ja
arpl
mov
mov
iret
in
cld
fwait
xchg
rolb
sahf
dec
imul
insl
lcall
jmp
and
and
cmp
aas
je
arpl
add
cmpsb
dec
ja
jne
inc
sub
cli
jnp
add
pop
shlb
or
jnp
add
add
cmp
cmp
pop
movsb
xor
les
addb
js
fcoml
dec
push
in
sub
adc
mov
fcomi
xor
and
into
loopne
les
jg
or
mov
je
lock
pop
mov
xchg
add
in
add
lret
add
add
inc
add
mov
xor
insb
mov
sti
xor
nopl
dec
imul
les
loope
std
add
insl
mov
xor
std
mov
xchg
dec
or
jae
imul
mov
sbb
enter
mov
rol
fucom
lcall
je
clc
jle
addr16
insl
mov
test
sti
lahf
stos
lahf
xchg
aam
add
and
inc
add
sbb
repnz
jno
cmpsl
mov
xchg
push
popa
inc
push
mov
repz
outsl
imul
js
cmc
outsb
and
aam
jno
add
cmp
mov
push
insl
lahf
jle
jbe
pop
pop
push
out
mov
inc
ret
icebp
inc
add
test
pop
lahf
xor
xor
push
push
stos
mov
jle
sbb
lods
jp
test
push
scas
pushf
insl
add
shrl
cmp
jb
jo
sbb
inc
add
es
mov
rcr
and
xlat
ja
cmp
or
outsb
pusha
add
ja
pop
adc
sti
xor
mov
in
jl
sub
aam
add
out
test
mov
cmp
lcall
loopne
pop
add
addb
pusha
add
fcmovu
sub
dec
in
or
and
arpl
enter
push
mov
add
mov
xor
cmpsb
nop
mov
or
or
sbb
sbb
sub
mov
adc
add
outsb
in
add
push
test
jne
add
sbb
mov
or
shlb
lret
push
test
sub
xchg
inc
add
mov
push
jbe
enter
test
pop
cmc
loopne
adc
xor
lock
jb
cli
ljmp
xor
add
jne
cmc
sbb
add
pop
ljmp
roll
cmp
jno
cld
lret
mov
pop
cli
out
lods
cmp
add
mov
inc
cmp
and
mov
popf
push
push
aad
sub
dec
add
inc
add
adc
dec
jae
jae
cmpsl
fbstp
cmp
push
adc
inc
add
mov
into
dec
sub
icebp
mov
cwtl
js
jne
outsb
push
add
fdivr
push
inc
or
mov
lock
push
lds
mov
pop
in
and
shrb
fst
dec
cmp
vandnps
jnp
mov
xor
ds
add
pop
mov
jno
lods
fcomps
jae
mov
mov
ja
add
add
ja
repz
movsl
loopne
cmp
mov
ljmp
fbstp
insb
pop
mov
add
add
ror
cld
and
add
aaa
add
mov
mov
and
cmp
push
sbb
add
add
xchg
test
out
xor
sarb
or
inc
add
mov
xchg
xor
mov
jl
enter
sbb
movb
mov
loop
pop
adc
jecxz
or
repnz
xlat
lcall
cmpsb
or
or
ss
repnz
test
stc
in
xorl
int
hlt
cmc
pusha
add
xchg
fistpll
scas
daa
add
cmp
mov
adc
add
add
cltd
mov
insl
dec
out
jo
mov
aad
call
xor
xchg
aam
push
les
loope
add
add
mov
ljmp
movb
cmpsb
cwtl
inc
cmp
adc
inc
add
add
dec
stos
movl
add
inc
add
sub
xchg
int3
out
idivl
cmp
inc
sub
sbb
mov
sbb
jb
das
mov
add
sub
fsubp
iret
mov
inc
add
inc
push
arpl
rolb
insl
or
pop
adc
sub
add
jne
stos
gs
dec
rcrl
outsl
aaa
cmp
fistpl
hlt
pushf
rorl
cmp
sub
xor
outsl
inc
add
lret
xor
xorl
pop
out
inc
ret
adc
andl
imul
cli
movsl
xor
cmp
fstl
aam
rolb
add
cmp
lea
push
adcl
sbb
pop
xor
gs
aad
stos
fstl
lods
mov
add
pop
cld
fs
or
mov
insl
inc
add
mov
jg
repnz
jecxz
xor
mov
cli
popf
pop
daa
push
loopne
inc
add
mov
out
add
mov
out
jl
sbb
incl
mov
xchg
jl
xchg
cltd
pop
pushf
leave
lret
js
jmp
add
nopl
cs
mov
xor
dec
mov
in
fstpt
add
movb
inc
stos
les
jnp
dec
adc
jbe
inc
add
popa
icebp
jno
test
stos
xlat
lret
shlb
fxch
cmp
sti
jno
xchg
push
push
pop
mov
jnp
loopne
orl
cmp
mov
addb
jne
dec
cmpsb
cmc
push
dec
cmpsl
jne
mov
je
cmpsl
add
out
aam
push
dec
insb
insb
scas
imul
adc
xor
push
fsub
dec
in
dec
fdivl
mov
add
add
sbb
xchg
cmpsl
out
fistps
lret
sbb
fs
das
decb
outsb
in
mov
add
adc
pop
nop
push
add
mov
mov
lret
and
stc
cmp
adc
xchg
xor
add
add
cs
lret
in
mov
pop
sbb
xchg
adc
sbb
loopne
mov
dec
rolb
and
add
cld
adc
mov
xlat
ret
mov
ror
push
sbbl
or
jo
mov
clc
stc
xlat
movb
or
lret
and
mov
add
movb
fs
mov
inc
lret
in
add
add
pop
pop
adc
cld
sub
cmp
bound
les
pop
test
test
fdivl
rorl
dec
sub
arpl
add
add
or
add
add
mov
pop
stos
movb
scas
jecxz
cltd
xor
add
cmp
ret
push
mov
mov
pop
or
mov
dec
hlt
mov
std
outsl
inc
add
add
and
mov
mov
and
xlat
insl
mov
push
xor
jnp
insb
push
mov
inc
add
and
and
push
sbb
jno
and
jge
cmp
add
xor
mov
mov
stc
inc
frstor
adc
pop
call
push
mov
push
dec
jg
sub
jbe
addb
fwait
mov
add
mov
dec
sbb
outsl
xor
inc
pop
mull
rcrl
xor
in
in
ljmp
sub
xchg
and
cmp
dec
bound
mov
dec
adc
cwtl
pop
sub
and
add
push
shll
out
addl
adc
stos
jbe
or
push
jmp
movb
testl
mov
testl
in
inc
add
mov
addb
dec
in
ret
add
mov
dec
pop
fs
popa
push
mov
jno
lret
addb
jae
les
inc
add
or
dec
adc
adc
cmp
push
movsl
stc
pop
sahf
fisttps
jo
fsubr
in
aad
sub
pop
jmp
arpl
sbb
cmp
push
dec
inc
add
mov
ljmp
mov
mov
jecxz
dec
push
movb
addr16
pop
leave
mov
dec
inc
and
fs
add
push
add
add
leave
push
xor
inc
pop
dec
pop
sarl
and
movb
ja
leave
jmp
aad
loop
add
in
stos
push
add
sub
ja
jns
pop
mov
lds
sbb
test
std
jmp
xchg
adc
add
jmp
adc
aas
ret
xor
jmp
movaps
std
aam
lock
lret
inc
add
rolb
sbb
loope
xchg
cwtl
fwait
xchg
inc
daa
pop
scas
add
nop
lock
loop
pop
cmpsb
add
rolb
add
cld
rcrl
pushf
xrelease
std
fisttpl
add
aaa
movsb
mov
mov
cli
push
or
and
pop
movsb
aam
ss
or
and
jae
cld
pop
cmc
adc
sub
jb
adc
sub
and
jnp
cmp
add
xor
ljmp
cmp
adc
add
in
pop
mov
pusha
add
cli
and
or
add
dec
mov
push
and
xchg
mov
push
jnp
in
sub
xor
and
ss
out
lock
pusha
add
xchg
and
out
scas
popa
mov
es
mov
adc
int
addr16
xor
faddl
pop
sbb
jmp
je
add
sub
ret
and
or
scas
sub
add
lods
sbb
fisttpl
add
jnp
xor
sarl
xchg
mov
adc
jge
loope
insb
mov
stc
nop
es
add
add
mov
popa
add
cld
nop
jmp
add
add
cli
test
nop
cld
nop
jmp
add
push
push
mov
xchg
ret
and
mov
mov
jns
add
mov
xchg
ret
dec
xor
add
push
add
nop
es
xor
jbe
cmc
dec
mov
stc
nop
es
add
jb
inc
sbb
jmp
jns
mov
adc
pop
push
mov
stc
nop
es
cwtl
push
add
add
mov
stc
nop
es
fistl
lods
outsb
rep
stc
nop
es
and
and
nop
jmp
add
cmp
aam
imul
and
push
mov
xchg
ret
add
add
das
cmpw
nop
cld
nop
jmp
jns
add
add
add
pop
add
stc
nop
es
pusha
inc
add
sbb
pusha
add
movb
nop
es
sub
add
test
nop
es
add
add
mov
push
mov
xchg
ret
add
add
call
jb
add
pop
faddl
xor
mov
xchg
ret
jns
cmp
push
inc
scas
add
stc
nop
es
test
add
hlt
add
pop
nop
cld
nop
jmp
fildl
add
pop
add
test
or
add
add
add
add
jae
and
push
mov
xchg
ret
add
add
xchg
outsb
add
push
mov
xchg
ret
add
or
pushf
pop
nop
cld
nop
jmp
test
ret
sub
add
xor
push
stc
nop
es
test
push
push
add
stc
nop
es
add
add
add
test
nop
cld
nop
jmp
push
addb
mov
mov
nop
es
add
pop
stc
nop
es
add
add
add
xlat
adc
stc
nop
es
add
cwtl
mov
test
nop
es
mov
aam
mov
push
mov
xchg
ret
cmp
mov
pop
outsl
ret
nop
cld
nop
jmp
mov
inc
pusha
add
add
sbb
nop
es
stos
adc
add
mov
rclb
xchg
in
inc
add
jmp
stos
push
push
mov
xchg
ret
lods
add
add
add
les
stc
nop
es
xorb
inc
in
mov
xchg
ret
add
push
add
nop
es
add
add
add
fildl
addb
inc
mov
in
mov
nop
cld
nop
jmp
push
add
lea
nop
cld
nop
jmp
add
xor
jne
stc
nop
es
pop
mov
ret
cltd
push
stc
nop
es
xchg
add
add
sbb
outsl
push
stc
nop
es
xchg
mov
jae
mov
stc
nop
es
add
mov
add
stc
nop
es
add
inc
push
je
stc
nop
es
jb
pop
mov
push
mov
xchg
ret
ret
add
push
mov
xchg
ret
fldt
add
notl
repz
add
add
mov
add
nop
es
sub
sbb
pushf
dec
nop
cld
nop
jmp
jmp
jg
mov
outsl
mov
nop
cld
nop
jmp
faddl
sub
test
stc
nop
es
add
repz
add
stos
stc
nop
es
cmp
je
jne
or
in
xor
push
mov
xchg
ret
jmp
add
fildl
out
sti
mov
stc
nop
es
add
neg
xor
negb
lea
push
mov
xchg
ret
call
stc
nop
es
mov
add
xor
sub
repz
nop
es
fildl
add
hlt
sub
cwtl
xor
stc
nop
es
sbb
and
add
cmp
nop
jmp
add
add
aam
and
jmp
stc
nop
es
add
sbb
add
cmp
dec
cmp
cld
nop
jmp
add
inc
add
lods
pop
jne
push
add
mov
mov
xchg
ret
and
mov
stc
nop
es
fildl
adc
add
stc
nop
es
jg
outsb
addl
add
push
mov
xchg
ret
add
add
fcmovnbe
in
push
push
mov
xchg
ret
add
dec
add
and
stc
nop
es
sbb
xor
inc
pusha
jg
fcoms
mov
cmp
ret
testl
mov
add
nop
es
aam
jmp
ds
stc
nop
es
dec
addb
add
sbb
sub
nop
es
add
mov
mov
pop
daa
sub
inc
lock
add
mov
add
add
nop
es
add
fildl
push
add
int3
jne
stc
nop
es
xor
fcomps
nop
es
pusha
add
add
add
popa
pop
mov
nop
cld
nop
jmp
add
xor
mov
pop
xor
nop
cld
nop
jmp
aam
xor
jns
mov
stc
nop
es
add
add
add
adcl
push
mov
xchg
ret
add
pop
add
add
add
stc
nop
es
add
outsl
pop
stc
nop
es
jns
add
and
add
sbb
jmp
add
sbb
sbb
sub
sti
stc
nop
es
xchg
sub
aam
int
popa
add
nop
es
jmp
add
nop
es
inc
add
jg
pop
stc
nop
es
add
xor
addl
sub
and
add
push
xchg
xchg
add
stc
nop
es
sbb
mov
add
add
nop
es
jg
add
es
add
xor
add
sbb
incb
inc
add
jne
sub
sbb
nop
sbb
add
nop
es
add
cmp
push
mov
xchg
ret
or
xchg
pop
cmpsb
loope
ret
nop
cld
nop
jmp
test
add
mov
add
scas
dec
nop
cld
nop
jmp
add
xor
testl
push
stc
nop
es
add
and
nop
cld
nop
jmp
add
push
adc
lods
sub
stc
nop
es
add
sub
mov
xor
nop
cld
nop
jmp
add
jb
hlt
cwtl
add
nop
es
add
inc
mov
dec
inc
stc
nop
es
sub
aam
push
jbe
stc
nop
es
cwtl
add
test
sbb
nop
jmp
add
call
jmp
stc
nop
es
fildl
jns
rclb
dec
push
stc
nop
es
adc
add
xchg
mov
mov
stc
nop
es
faddl
jg
ret
or
nop
es
addl
insb
cmpl
nop
cld
nop
jmp
add
xchg
aam
add
push
mov
xchg
ret
jns
faddl
adc
add
push
push
mov
xchg
ret
inc
add
cwtl
add
loopne
mov
insb
and
stc
nop
es
push
add
es
add
add
repz
stc
nop
es
add
add
imull
cld
nop
jmp
xchg
add
cmp
add
nop
es
lods
xchg
add
cmp
cmc
inc
add
jg
mov
add
fdivrs
nop
cld
nop
jmp
test
add
outsb
mov
stc
nop
es
add
add
cmpl
jmp
mov
add
add
add
push
stc
nop
es
sub
test
jns
inc
int3
rep
stc
nop
es
add
test
push
nop
cld
nop
jmp
call
add
addl
mov
stc
nop
es
test
cmc
inc
add
pop
stc
nop
es
xchg
dec
je
inc
mov
mov
xlat
mov
jg
add
aas
jbe
add
nop
jmp
sub
sbb
push
nop
cld
nop
jmp
jns
add
mov
add
fdivl
mov
out
inc
add
xchg
negl
add
mov
jne
stc
nop
es
add
xor
mull
nop
es
sub
add
mov
stc
nop
es
inc
sub
add
mov
stc
nop
es
jne
mov
ds
stc
nop
es
mov
jmp
mov
stc
nop
es
imul
cld
nop
jmp
xchg
add
scas
imul
nop
cld
nop
jmp
jmp
addb
add
in
mov
stc
nop
es
add
add
or
pop
or
nop
es
jmp
add
push
mov
xchg
ret
add
add
or
xchg
mov
sti
inc
add
inc
sbb
arpl
popa
add
mov
xchg
ret
jne
xor
pusha
out
mov
push
mov
xchg
ret
cmp
push
push
mov
xchg
ret
call
push
sbb
nop
es
add
add
cmpw
stc
nop
es
sbb
enter
mov
inc
add
add
jg
pop
or
in
inc
add
add
add
mov
mov
stc
nop
es
mov
add
fistpl
add
cld
nop
jmp
add
fildl
inc
jb
cmp
nop
cld
nop
jmp
add
sub
mov
cmpl
nop
es
add
sub
add
iret
clc
stc
nop
es
or
add
add
stc
nop
es
xor
sub
xor
add
stc
nop
es
add
aaa
addb
push
push
mov
xchg
ret
sub
xchg
out
add
lea
stc
nop
es
jns
inc
sub
ret
stc
nop
es
je
add
add
sbb
nop
es
add
sbb
jmp
enter
es
jns
add
inc
mov
mov
stc
nop
es
add
add
add
add
push
xchg
pop
not
push
mov
xchg
ret
testl
push
add
add
nop
es
xchg
sbb
sub
add
add
add
clc
incl
add
or
nop
jmp
jns
je
add
test
add
jb
cmp
xchg
jne
faddl
dec
mov
stc
nop
es
ret
add
lock
add
add
or
add
fs
sbb
add
nop
es
inc
adc
aaa
pushf
push
stc
nop
es
sub
inc
xor
pop
add
mov
nop
cld
nop
jmp
add
add
xorl
mov
mov
cmp
ret
jns
add
shll
nop
jmp
add
mov
xchg
add
xchg
cmpl
orb
incl
inc
jmp
fimuls
es
add
xor
add
stc
nop
es
add
pop
jb
incb
jne
nop
cld
nop
jmp
jns
inc
add
adcl
adc
add
adc
add
ss
mov
stc
nop
es
adc
mov
jb
add
negl
mulb
nop
es
add
adc
out
mov
stc
nop
es
mov
add
jmp
mov
stc
nop
es
add
add
add
stc
nop
es
testl
scas
shr
stc
nop
es
inc
add
sbb
push
stc
nop
es
jmp
imul
es
add
inc
jg
ja
call
stc
nop
es
jb
jb
rdtsc
add
stc
nop
es
mov
notl
or
xchg
stc
nop
es
add
inc
in
jmp
stc
nop
es
add
pop
mov
stc
nop
es
sub
add
and
dec
add
nop
cld
nop
jmp
add
sbb
sbb
gs
stos
stc
nop
es
fadd
add
mov
mov
mov
mov
xchg
ret
inc
add
xor
add
stc
nop
es
add
add
lods
sbb
pop
add
push
mov
xchg
ret
fdivl
jns
pop
mov
stc
nop
es
testl
nop
es
add
add
jne
faddl
dec
add
stc
nop
es
pop
test
faddl
fistpll
lret
nop
jmp
cmp
add
dec
stos
stc
nop
es
cli
add
pop
xchg
je
stos
call
stc
nop
es
push
sbb
stc
nop
es
add
imull
sub
sbb
cmp
adc
add
add
cld
rep
nop
cld
nop
jmp
add
add
push
test
add
add
stc
nop
es
call
inc
pop
mov
nop
cld
nop
jmp
adc
add
add
outsb
inc
mov
dec
cmp
nop
es
mov
jmp
add
and
mov
xchg
ret
xor
movzwl
stc
nop
es
jg
push
jmp
jb
cmp
add
rolb
add
nop
cld
nop
jmp
mov
ret
inc
add
push
mov
xchg
ret
add
cli
fisttps
es
and
sub
add
movb
inc
add
dec
push
stc
nop
es
add
hlt
stos
mov
add
adc
add
add
jns
jo
push
stc
nop
es
jns
add
add
jne
mov
mov
push
mov
xchg
ret
add
add
add
add
nop
es
add
add
push
or
movb
pop
loop
add
add
test
mov
add
inc
xor
popf
add
jp
add
add
pop
jne
add
nop
es
faddl
add
add
jne
stc
nop
es
add
sbb
decl
stc
nop
es
jns
inc
jb
jne
mov
stc
nop
es
add
add
add
nop
es
sub
add
dec
rep
stc
nop
es
add
add
add
pusha
add
add
nop
cld
nop
jmp
sbb
add
mov
stc
nop
es
inc
mov
add
push
mov
je
add
movl
insl
push
je
fwait
xchg
stc
nop
es
xor
add
fsubr
add
cmc
stc
nop
es
xchg
push
sub
popa
add
nop
es
hlt
xor
add
nop
es
addb
adc
inc
add
nop
es
test
aam
add
jecxz
mov
jmp
addb
add
movl
fbld
mov
stc
nop
es
sbb
mov
xchg
ret
xchg
addb
aam
mov
stc
nop
es
jg
add
and
int
push
loopne
nop
es
xchg
stos
push
or
xchg
sub
add
stc
nop
es
add
imull
int
pop
jae
nop
es
or
add
xchg
nop
and
stc
nop
es
or
mov
add
cmp
les
nop
es
add
sub
je
into
decl
push
mov
xchg
ret
add
xchg
imul
xor
add
stc
nop
es
pop
add
cld
nop
jmp
add
sub
add
adc
jmp
fstpt
add
add
call
cltd
and
nop
cld
nop
jmp
fmull
push
add
mov
mov
nop
jmp
sbb
add
pop
add
imul
es
add
add
add
jb
sub
add
sbb
inc
stc
nop
es
jne
add
mov
es
add
add
xor
and
roll
add
add
sbb
and
in
sub
jo
nop
cld
nop
jmp
and
call
and
nop
cld
nop
jmp
ret
add
jns
mov
nop
cld
nop
jmp
add
add
xchg
jb
jne
mov
add
inc
lods
nop
jne
movsl
daa
mov
nop
jmp
faddl
add
jb
inc
add
cs
stc
nop
es
je
jmp
or
mov
xchg
ret
add
add
fistpll
stc
nop
es
fldt
add
es
pop
faddl
mov
push
xor
add
stc
nop
es
add
xor
nop
cld
nop
jmp
je
sbb
aam
push
data16
iret
je
stc
nop
es
imull
sbb
nop
jmp
add
add
xchg
add
dec
push
mov
xchg
ret
xchg
call
mov
jmp
stc
nop
es
mov
insl
push
stc
nop
es
repz
pop
pusha
jmp
inc
sbb
sub
nop
jmp
mov
xor
add
push
mov
xchg
ret
adc
jne
cmp
add
mov
mov
xchg
ret
notl
add
pop
call
stc
nop
es
add
jns
pusha
nop
cld
nop
jmp
add
jne
cwtl
add
xchg
mov
stc
nop
es
add
push
mov
testb
movb
mov
xchg
ret
add
lods
xchg
aam
mov
stc
nop
es
add
fildl
add
mov
jmp
jns
add
add
cmp
mov
nop
es
xchg
outsb
add
add
add
mov
xchg
ret
add
add
push
mov
xchg
ret
add
add
add
jmp
fistl
add
add
sbb
push
stc
nop
es
add
cmp
cmp
fdivr
xor
push
mov
xchg
ret
xchg
sub
add
xchg
xchg
out
push
push
mov
xchg
ret
add
add
add
xor
scas
enter
jmp
adc
add
jns
mov
je
stc
nop
es
add
enter
cld
nop
jmp
xchg
cmp
xchg
stos
addb
pop
push
mov
xchg
ret
add
cwtl
pop
add
dec
mov
nop
cld
nop
jmp
mov
add
jns
sub
stc
nop
es
adc
xchg
add
sub
push
mov
aam
cld
xchg
addl
int3
push
pop
add
in
add
add
mov
stc
nop
es
add
jns
add
xor
stc
nop
es
add
add
pushf
pop
stc
nop
es
stos
cli
add
repz
sbb
add
stc
nop
es
sub
add
jb
add
nop
cld
nop
jmp
test
xchg
add
add
add
mov
call
stc
nop
es
add
call
sbb
loop
stc
nop
es
add
push
fildl
test
push
sub
jno
inc
add
cli
add
add
push
stc
nop
es
pusha
test
adc
je
call
repz
stc
nop
es
hlt
add
mov
clc
add
add
es
add
add
add
stc
nop
es
push
add
add
mov
mov
xchg
ret
add
shl
stc
nop
es
sbb
sub
add
sarl
or
nop
es
cwtl
add
fcomi
push
aam
push
add
sub
stc
nop
es
xchg
add
test
mov
xchg
ret
jns
add
jg
push
mov
into
xlat
jl
add
out
and
js
push
add
nop
es
add
popa
mov
or
stc
nop
es
outsb
add
inc
xor
stc
nop
es
add
sbb
mov
stc
nop
es
add
add
or
stc
nop
es
lods
cli
jg
and
popa
nop
cld
nop
jmp
add
add
add
xor
icebp
push
inc
add
call
add
add
add
add
mov
adc
nop
es
add
add
mov
stc
nop
es
pop
cmp
inc
add
add
nop
es
add
add
add
repz
add
add
xchg
ret
add
add
add
push
adc
stc
nop
es
and
add
mov
cli
call
or
add
add
jns
jge
rclb
incl
xchg
ret
sbb
hlt
add
mov
push
mov
xchg
ret
add
add
dec
sbb
dec
sub
inc
add
aam
jb
mov
adc
nop
es
sub
cld
nop
jmp
xchg
pusha
mov
hlt
je
mov
stc
nop
es
add
push
dec
push
stc
nop
es
add
add
movsl
pop
mov
stc
nop
es
add
add
cmp
nop
es
addl
and
outsb
add
stc
nop
es
add
xchg
pop
add
mov
stc
nop
es
mov
inc
add
nop
es
sbb
and
nop
es
mov
insl
add
push
mov
xchg
ret
add
hlt
add
and
mov
test
in
stc
nop
es
jns
jb
mov
stc
nop
es
add
add
sbb
nop
jmp
fdiv
sub
inc
hlt
add
cld
nop
jmp
jns
add
and
cmpb
test
nop
es
outsb
pusha
and
add
test
nop
es
jmp
sbb
mov
push
mov
xchg
ret
sub
inc
jmp
add
stc
nop
es
jne
add
pop
add
adc
nop
es
push
add
add
js
stc
nop
es
push
sbb
add
faddl
mov
pop
push
mov
xchg
ret
jg
add
add
jg
add
stc
nop
es
add
mov
add
add
insb
add
add
add
iret
or
inc
add
add
jns
dec
pop
stc
nop
es
stos
add
divl
add
nop
cld
nop
jmp
hlt
add
add
cwtl
sbb
nop
es
xchg
test
add
jns
hlt
je
jne
stc
nop
es
inc
add
jae
pop
mov
stc
nop
es
fistl
add
push
mov
xchg
ret
push
imul
nop
cld
nop
jmp
add
add
repz
mov
jno
ret
stc
nop
es
add
or
add
jne
aaa
cs
push
mov
xchg
ret
imul
jmp
xchg
xor
cmp
nop
jmp
jns
sbb
sbb
add
pop
je
stc
nop
es
add
pusha
xor
stc
nop
es
fildl
outsb
add
add
mov
xchg
ret
sub
xchg
ret
andl
nop
cld
nop
jmp
add
fsubrl
add
add
pop
pop
push
mov
xchg
ret
add
add
adc
add
push
stc
nop
es
stos
fcompl
push
add
sub
pop
or
xchg
ret
add
faddl
adc
addr16
mov
loopne
inc
add
sbb
hlt
sbbb
jmp
sub
add
add
add
in
push
stc
nop
es
jmp
mov
add
push
nop
cld
nop
jmp
add
add
add
test
nop
es
addl
nop
es
add
mov
add
add
push
xlat
and
pop
pop
nop
cld
nop
jmp
add
xchg
repz
inc
cli
add
es
test
lods
add
add
je
or
cld
nop
jmp
sub
mov
inc
sub
call
es
test
add
add
add
add
stc
nop
es
ret
stos
pop
add
shl
nop
cld
nop
jmp
xchg
test
add
cmp
fsubrl
inc
stc
nop
es
fildl
add
dec
inc
push
rcll
ljmp
jmp
add
push
idiv
stc
nop
es
addl
jne
stc
nop
es
add
add
subb
pop
mov
adc
add
outsl
add
push
mov
xchg
ret
add
div
add
fcoms
nop
es
mov
add
push
and
stc
nop
es
sub
test
ret
nop
cld
nop
jmp
xchg
sbb
add
jb
sbb
push
stc
nop
es
test
xchg
add
add
clc
push
mov
xchg
ret
fcomi
add
movl
nop
jmp
inc
add
add
add
sub
shrb
cld
nop
jmp
jg
add
push
add
in
mov
stc
nop
es
add
add
add
nop
cld
nop
jmp
add
add
add
ret
mov
stc
nop
es
add
outsl
popa
fs
nop
es
testl
add
outsl
pop
nop
cld
nop
jmp
fildl
add
sbb
xor
repz
call
nop
cld
nop
jmp
fildl
jns
adc
or
mov
adc
cld
nop
jmp
jb
mov
mov
es
add
add
add
ret
mov
nop
es
add
mov
stc
nop
es
add
mov
stc
nop
es
mov
add
adc
push
mov
xchg
ret
mov
aam
jns
push
inc
enterw
cmc
stc
nop
es
aam
add
cld
nop
jmp
add
add
rcl
xor
iret
test
nop
cld
nop
jmp
jmp
sbb
add
add
add
mov
inc
add
add
sbb
pusha
push
mov
xchg
ret
faddl
add
xchg
inc
jmp
add
add
nop
es
add
call
cmp
ret
addb
popf
inc
push
mov
xchg
ret
xchg
push
add
push
cmc
imul
sar
inc
add
jns
add
add
mov
xchg
ret
cwtl
add
or
add
cmp
nop
cld
nop
jmp
xchg
hlt
cli
xchg
outsb
push
arpl
add
nop
es
add
add
mov
clc
ljmp
add
jae
add
push
mov
xchg
ret
sub
test
mov
test
mov
push
mov
xchg
ret
xchg
outsb
aam
cli
sub
je
inc
add
mov
add
add
xchg
mov
nop
es
add
cmp
add
stos
push
stc
nop
es
addb
movl
mov
nop
cld
nop
jmp
add
dec
add
imul
add
add
push
add
push
sti
mov
nop
cld
nop
jmp
testl
add
add
xchg
nop
cld
nop
jmp
add
add
je
call
push
mov
xchg
ret
add
add
add
pop
mov
nop
cld
nop
jmp
add
faddl
adc
jae
xchg
stc
nop
es
add
xchg
add
xchg
divl
xlat
repnz
add
add
pusha
push
lods
mov
stc
nop
es
add
adc
out
rcll
jb
add
add
add
fcomi
hlt
fisttpl
nop
es
add
mov
stc
nop
es
cli
add
repz
nop
cld
nop
jmp
add
add
add
aas
mov
stc
nop
es
add
mov
add
mov
inc
add
fdivrl
push
xor
stc
nop
es
mov
cwtl
fistpll
nop
cld
nop
jmp
idivl
add
mov
mov
stc
nop
es
inc
jns
jmp
sbb
pop
out
call
jmp
mov
test
push
inc
add
xor
add
add
or
nop
es
lods
stos
add
fistl
cld
nop
jmp
jns
sub
call
pop
ret
push
mov
xchg
ret
hlt
inc
jb
sbb
fdivrl
jne
stc
nop
es
mov
jne
gs
cld
nop
jmp
add
sbb
push
inc
call
andb
ljmp
xor
add
flds
nop
jmp
jmp
je
fmuls
es
add
sbb
xchg
fcoml
add
nop
es
add
push
ret
out
lret
stc
nop
es
add
add
add
add
stc
nop
es
ret
test
idivl
call
nop
cld
nop
jmp
pop
add
add
insl
mov
push
mov
xchg
ret
add
add
xor
call
clc
pushl
add
add
push
stc
nop
es
xor
imul
add
imul
add
add
mov
jne
stc
nop
es
add
xchg
mov
mov
xchg
ret
xor
sbb
jb
add
push
mov
xchg
ret
call
add
jle
nop
cld
nop
jmp
mov
cli
fcompl
add
sti
add
add
or
add
pop
lods
add
add
add
nop
es
jmp
cmp
nop
es
add
mov
add
nop
es
add
add
call
stc
nop
es
push
stc
nop
es
sbb
push
mov
add
inc
shll
xchg
pop
mov
stc
nop
es
add
mov
call
add
cld
nop
jmp
add
stc
add
nop
cld
nop
jmp
call
add
jle
add
nop
es
je
add
addl
add
stc
nop
es
add
adc
add
stc
nop
es
mov
and
stc
nop
es
add
hlt
add
outsb
push
stc
nop
es
mov
jmp
add
xor
xor
stc
nop
es
add
inc
aam
sub
add
dec
sti
stc
nop
es
mov
mov
fsubl
xor
add
stc
nop
es
xor
xor
stc
nop
es
add
sub
add
push
sbb
push
push
mov
xchg
ret
add
add
add
jle
adc
nop
es
test
dec
push
mov
stc
nop
es
add
hlt
icebp
adc
add
jp
add
add
test
xchg
mov
es
add
add
mov
jbe
fsubrs
push
mov
xchg
ret
imul
and
sbb
es
add
cwtl
add
aad
rcll
sbb
add
nop
cld
nop
jmp
add
add
movsb
lea
mov
xchg
ret
xchg
add
add
cwtl
aam
mov
stc
nop
es
je
add
add
aam
jmp
stc
nop
es
repz
fldt
nop
es
mov
add
add
nop
es
hlt
mov
hlt
cli
mov
push
add
xchg
mov
repz
sub
stc
nop
es
add
sbb
inc
aaa
sbb
mov
xchg
ret
sub
add
cmp
jne
push
mov
xchg
ret
jne
inc
pop
sbb
sbb
mov
inc
add
pusha
cli
add
add
rep
push
mov
xchg
ret
hlt
mov
add
jmp
nop
cld
nop
jmp
add
cwtl
mov
or
jmp
add
add
add
push
stc
nop
es
je
pop
repz
add
jg
cmp
es
add
and
dec
stc
nop
es
xchg
inc
xor
repz
or
test
nop
es
add
mov
mov
inc
add
sbb
mov
mov
stc
nop
es
call
jb
add
rolb
mov
stc
nop
es
fildl
test
es
cmp
nop
cld
nop
jmp
repz
sub
nop
cld
nop
jmp
add
stos
aad
nop
mov
nop
es
add
mov
jne
push
stc
nop
es
add
stos
add
add
cld
clc
stc
nop
es
add
push
stc
nop
es
jns
dec
xchg
inc
add
test
nop
cld
nop
jmp
jne
sbb
cwtl
pusha
sbb
imul
lahf
fdivrp
incl
jns
push
mov
mov
stc
nop
es
add
add
sbb
sbb
nop
jmp
pusha
stos
adc
add
add
sub
stc
nop
es
add
add
sbb
push
stc
nop
es
jne
xor
xor
nop
jmp
sub
add
add
add
mov
xchg
ret
add
push
push
mov
xchg
ret
add
add
stos
jg
mov
stc
nop
es
pop
or
and
inc
push
mov
xchg
ret
sbb
hlt
add
and
push
mov
xchg
ret
je
add
popf
push
mov
xchg
ret
sub
add
add
stc
nop
es
add
cmc
movsl
push
add
nop
cld
nop
jmp
add
add
add
sub
nop
es
mov
jne
add
repnz
sub
stc
nop
es
xchg
fcmovnb
add
add
push
stc
nop
es
sbb
push
add
rep
stc
nop
es
add
push
mov
xchg
ret
add
add
mov
jne
mov
or
stc
nop
es
sub
cld
nop
jmp
push
xchg
sbb
add
lods
stos
pusha
stc
nop
es
aam
call
add
add
stc
nop
es
add
add
movl
add
mov
xchg
ret
hlt
pusha
inc
push
fsts
sub
cmp
ret
add
jmp
push
mov
xchg
ret
faddl
fdivl
add
call
cmc
incl
mov
adc
stc
nop
es
add
repz
adc
jne
lret
mov
stc
nop
es
cwtl
cwtl
add
jmp
stos
notl
cmc
jmp
mov
stc
nop
es
xchg
push
add
mov
nop
cld
nop
jmp
adc
add
add
jns
call
stc
nop
es
xchg
je
add
rorl
push
stc
nop
es
add
add
test
jb
add
add
add
ja
ja
pop
push
mov
xchg
ret
sbb
hlt
add
push
add
push
stc
nop
es
adc
add
or
nop
es
fildl
pop
add
sbb
push
mov
xchg
ret
jns
add
or
jns
add
push
mov
xchg
ret
call
repnz
add
nop
cld
nop
jmp
add
add
add
cmp
nop
cld
nop
jmp
inc
je
mov
outsb
push
push
mov
xchg
ret
addl
jne
les
scas
mov
stc
nop
es
add
add
add
adc
dec
adc
nop
es
add
add
or
jl
push
mov
xchg
ret
add
or
jne
xchg
or
sar
es
ret
add
sbb
adc
mov
incl
add
stc
nop
es
sbb
add
mov
stc
nop
es
add
dec
inc
mov
repnz
imul
sub
lcall
mov
dec
add
cld
nop
jmp
jmp
jmp
sub
incl
add
add
imul
subb
jns
cwtl
aam
add
lods
mov
stc
nop
es
add
mov
jecxz
mov
pop
and
nop
es
add
add
fsubr
inc
mov
add
add
in
ljmp
add
es
jns
pop
aam
add
mov
nop
cld
nop
jmp
mov
jmp
cld
or
stc
nop
es
adc
sub
xorb
nop
jmp
lods
stos
jns
pop
mov
stc
nop
es
add
add
add
push
xlat
call
out
ljmp
insb
call
stc
nop
es
xor
sbb
push
add
pop
mov
push
mov
xchg
ret
and
pop
add
add
mov
xchg
ret
add
jns
call
add
fdivr
incl
jne
sbb
add
hlt
inc
add
addb
mov
push
xlat
or
xchg
ret
xchg
ret
add
jnp
push
mov
xchg
ret
add
add
les
fidivrs
stc
nop
es
sub
test
sub
pause
cld
nop
jmp
add
add
jns
add
jne
xor
ret
push
push
mov
xchg
ret
fildl
jns
sub
add
push
lea
push
mov
xchg
ret
add
push
push
mov
xchg
ret
add
push
repz
xorb
lods
add
sub
ljmp
int
add
fsubr
or
xlat
push
xchg
add
ror
aad
shll
pop
mov
or
sbb
sub
lock
les
sti
cmpsl
xor
sub
adc
sbb
cmpsl
pop
dec
insl
mov
and
into
jle
lea
pop
iret
outsb
addb
cs
jb
popf
imul
push
movb
aam
add
xchg
repz
and
add
push
jns
adcl
jne
incb
test
cmp
sub
cmp
rcll
cmp
test
scas
scas
sti
pusha
add
lret
test
sub
cmpsb
fs
pop
mov
lea
shrl
cmp
xor
les
fcoml
xor
cmp
mov
popa
dec
in
std
lods
cmpsl
mov
int3
push
xchg
lea
sub
push
add
lods
xchg
stos
pop
xor
fldcw
sbb
popa
mov
fsub
lea
mov
adc
loop
lods
stc
cmp
sub
movsl
outsl
shll
add
imul
cmp
loope
push
dec
lock
inc
add
pop
fldl
pmulhuw
push
out
dec
int3
inc
add
add
mov
mov
sub
jno
or
outsb
push
xlat
mov
add
push
sar
clc
sarb
shlb
in
mov
stc
and
fists
lahf
mov
mov
mov
push
push
push
les
leave
icebp
mov
sbb
sub
int3
scas
pop
mov
push
stos
aas
notb
add
dec
js
pop
mov
sub
add
jnp
js
add
and
push
ljmp
movsl
aaa
cld
inc
add
mov
sbb
adc
cltd
add
and
sbb
hlt
dec
xor
and
stos
bound
test
mov
movsl
push
outsl
fcompl
addr16
add
scas
test
add
rorb
mov
sbb
or
push
imul
shll
cld
push
shll
add
pop
add
jbe
push
cmp
mov
stc
jbe
add
push
mov
fsubrl
add
adc
jp
outsl
cmp
mov
cmpsb
xor
mov
ret
shufps
lret
cld
pop
sub
jmp
test
aam
addb
sub
lret
cmp
enter
in
idivl
pop
cs
pop
xor
mov
mov
mov
mov
add
add
sbb
jl
jno
sub
jle
ficomps
jp
add
je
and
faddp
add
jg
adc
xchg
jns
add
dec
add
add
lods
mov
add
push
fldenv
inc
push
add
js
xor
sbb
test
hlt
xchg
dec
jl
jbe
adc
sub
push
lock
inc
add
lret
mov
sbb
add
loop
cld
sbb
sbb
pop
ret
cmp
and
add
pop
sub
bnd
rolb
or
add
add
outsl
lea
jb
inc
popf
repnz
hlt
sahf
inc
add
jl
loope
cmpsb
addl
fs
cmp
icebp
add
inc
pop
int
repnz
aam
inc
jp
push
in
cmpsb
aaa
lea
add
dec
sbb
roll
and
fs
inc
xchg
dec
or
lahf
cmp
scas
push
leave
add
or
lret
stos
jl
push
push
gs
mov
dec
aad
flds
mov
lret
mov
sub
jo
lret
adc
lods
jge
mov
or
stc
dec
sbb
repnz
dec
mov
add
mov
mov
add
mov
mov
idiv
xor
dec
xchg
fucom
pop
testl
stos
adc
lea
jnp
popf
sub
addb
in
cld
sub
sbb
push
push
stc
jb
cmp
mov
outsl
test
jb
call
ljmp
or
ffreep
add
push
xor
push
loope
movb
add
inc
add
pop
test
mov
jp
lcall
imul
add
and
test
adc
xor
sbb
mov
fiaddl
mov
sti
jnp
adc
inc
add
mov
fsubrp
lahf
test
ja
sbb
into
outsb
jo
lahf
jl
pushf
in
cmp
cmpsb
push
mov
jmp
nop
or
pop
bound
or
sbb
aam
add
call
add
sbb
fldenv
rolb
push
add
dec
test
outsl
js
or
jmp
xchg
repnz
icebp
inc
inc
xor
imul
push
xor
cltd
jnp
nopl
call
nop
inc
add
leave
imul
cltd
pop
loope
test
imul
shll
mov
and
push
jge
add
xchg
les
shlb
add
movsl
jno
arpl
add
imul
cmp
inc
add
or
or
inc
add
xor
shrl
push
fisttpll
inc
add
push
bound
scas
testl
adc
xchg
xor
or
pop
push
xor
jno
repnz
fdivrs
xchg
test
mov
arpl
sub
mov
or
lcall
push
sub
jmp
data16
xlat
insl
imul
jns
scas
mov
xchg
rolb
add
add
fwait
nop
lea
fisubs
pop
and
mov
add
and
aas
lods
mov
notb
insl
in
xor
cmp
stc
in
mov
pop
jle
prefetchw
imul
jo
sbb
push
add
mov
sbb
cwtl
je
mov
add
push
mov
adc
cltd
in
scas
lds
adc
pop
loopne
aad
add
sub
add
jle
sub
addb
add
enter
add
imul
aaa
sbb
lods
das
jbe
jno
xchg
addb
or
sbb
fwait
jno
or
fists
out
add
inc
add
sub
in
add
ret
sbb
addb
out
adc
lahf
mov
faddl
mov
je
push
jb
add
sbb
dec
ja
rclb
fs
mov
push
lret
mov
dec
out
push
jb
loop
sbb
scas
adc
sbb
pusha
add
rorb
iret
popf
or
adc
jmp
and
cmp
jmp
insb
sti
cmp
int
lcall
sbb
and
mov
scas
mov
aaa
jbe
xchg
cmp
push
aaa
mov
or
add
nop
aaa
dec
ja
jno
in
leave
inc
cwtl
sub
aam
lahf
ss
inc
and
add
cs
repnz
in
jl
shrl
xor
sub
inc
add
add
ret
pop
cmp
mov
or
push
loopne
add
ljmp
cltd
push
add
fdivr
mov
inc
adc
int3
popl
or
lahf
daa
es
stc
cmp
out
rcl
pop
dec
daa
mov
sbb
fbld
cmp
bound
insl
repnz
add
rolb
jae
aad
data16
fisubl
push
insl
test
cmpsb
fcompl
das
and
xchg
shl
jnp
test
int3
aam
aam
sahf
pop
mov
mov
dec
lcall
je
sub
enter
mov
add
sub
add
mov
imul
sbb
dec
mov
sub
mov
inc
insl
mov
insl
push
jle
push
lock
pop
add
push
add
insb
jae
sbb
xchg
jb
push
inc
mov
mov
lods
lahf
shlb
lahf
dec
iret
out
jg
add
int3
stos
fs
pop
adc
push
leave
cmp
ja
jge
xchg
insb
imul
xchg
mov
pop
pop
xchg
sbb
dec
xor
stos
lahf
add
push
gs
xchg
bound
out
sbb
cmp
lcall
out
leave
inc
add
rcll
jb
scas
push
movb
jle
pop
xchg
mov
and
jb
sbb
mov
int3
mov
or
add
sub
stos
or
scas
in
inc
add
gs
sub
js
cmp
mov
insl
push
arpl
out
push
enter
add
scas
xchg
inc
add
jae
ljmp
add
rorb
cmpsl
mov
push
jns
inc
xlat
and
stos
fsubr
movb
jp
ss
daa
fld
add
or
xchg
xor
outsb
in
add
movb
add
xor
jmp
popf
iret
mov
xchg
mov
imul
add
enter
mov
in
enter
add
ret
lahf
ret
xlat
pop
enter
pushf
mov
add
shl
cmp
mov
add
test
stos
dec
in
inc
add
mov
enter
test
jbe
in
daa
mov
add
imul
insb
xchg
js
mov
inc
add
add
dec
rolb
push
stos
xor
sahf
lods
mov
into
cmp
repnz
adcl
pop
jno
dec
push
adc
add
jge
dec
mov
mov
pop
sbb
push
scas
and
ret
addb
dec
sbb
dec
mov
repz
add
popa
fs
and
fstl
xchg
jne
fisubl
sbb
sbb
mov
adc
add
push
push
stc
cltd
mov
mov
out
dec
fsts
enter
test
inc
loop
sub
mov
inc
add
add
inc
jns
push
lock
sub
add
push
mov
in
cmp
cld
inc
stc
and
mov
xchg
cmp
dec
jno
sub
mov
lcall
pushf
faddl
sbb
insl
sbb
add
imul
and
xchg
and
fsub
addb
nop
lock
jno
jmp
rolb
pusha
add
dec
les
das
or
inc
add
inc
sub
mov
push
cmp
mov
mov
inc
in
mov
pop
pop
and
popf
mov
test
sbb
adc
sbb
jne
add
fisubl
xor
rolb
ljmp
mov
jecxz
out
test
stos
gs
pop
inc
rorb
xchg
jne
mov
addb
cs
xchg
mov
aam
outsl
outsb
pop
imul
adc
adc
add
mov
aam
sub
xor
mov
mov
xchg
test
cmp
sarb
xchg
aas
repz
add
nop
mov
sub
cli
push
sbb
mov
jo
lcall
xor
les
add
lret
test
insl
les
pop
nop
pushf
int3
xchg
mov
inc
add
call
stos
dec
imul
icebp
jns
xchg
mov
sbb
add
repnz
lock
or
push
test
jp
cmp
nop
push
int
iret
lods
pusha
add
in
sub
ljmp
clc
sbb
movsl
lret
fcomps
mov
cmp
adc
dec
scas
sarl
mov
and
jecxz
adc
mov
sbb
or
fldl
test
cld
clc
shll
xchg
aaa
or
xor
gs
mov
jmp
adc
ret
lret
sbb
insl
pop
lock
add
mov
loop
gs
inc
add
and
call
mov
inc
inc
add
mov
outsl
mov
add
adc
rclb
icebp
cmc
mov
xor
jns
and
nop
mov
add
push
in
mov
jno
addr16
cmc
push
mov
mov
sub
sub
loope
cmp
lcall
test
dec
jns
loopne
pusha
add
adc
mov
lods
adc
rolb
stos
and
dec
test
mov
inc
adc
mov
mov
jmp
addr16
out
dec
out
rcll
push
add
test
punpckldq
lcall
lods
mov
inc
sbb
jnp
icebp
and
push
fs
lret
aaa
bound
pop
and
cli
xchg
outsb
pop
xchg
add
lret
mov
insb
stos
sahf
hlt
and
inc
add
xchg
sub
add
aaa
aam
jnp
push
pop
test
xor
and
ret
jge
icebp
dec
hlt
jp
mov
addb
push
movsl
dec
testb
mov
int
push
sbb
inc
add
xchg
inc
add
sub
add
hlt
jge
rolb
mov
jp
addb
dec
inc
es
xlat
addr16
or
sbb
loop
mov
push
fwait
push
inc
add
mov
pop
jb
pop
push
push
aas
aam
loope
add
int3
jmp
fs
decl
add
ficoml
lcall
lods
js
add
cli
xor
insb
sbb
add
repnz
ja
cmc
or
add
jg
into
sbb
add
daa
scas
add
pop
mulb
cmovg
leave
lret
das
sahf
sarb
add
lods
add
cmp
fistps
sbb
outsl
inc
add
lods
push
push
movsb
mov
in
sahf
fisubrs
std
es
add
xchg
mov
sarl
push
ficoms
mov
pop
sub
add
add
pusha
add
bound
push
mov
arpl
rolb
add
hlt
pop
and
dec
outsb
adc
imul
add
jg
in
aad
add
gs
jbe
arpl
mov
cmp
es
mov
pushl
dec
cmp
and
imul
cmc
and
sub
xchg
icebp
cwtl
jmp
xchg
and
fdivrs
sub
jle
add
cwtl
movsb
or
pop
stos
lods
and
mov
add
sbb
js
adc
into
shrb
push
bound
sbb
or
and
cld
inc
add
push
fnstcw
dec
push
add
add
add
es
jge
nop
and
add
add
mov
jnp
and
in
add
call
add
movsb
mov
and
pusha
add
outsb
xchg
loope
pushf
loopne
jmp
mov
and
jae
loopne
in
rcrb
int
popa
out
dec
push
dec
mov
lods
sbb
and
push
cld
mov
out
lods
into
push
mov
add
jge
push
push
add
rcrb
out
mov
lret
cmp
jmp
mov
loop
outsb
mov
enter
rcrb
xchg
push
add
dec
or
int3
pop
push
mov
add
arpl
sbb
enter
inc
add
xchg
pop
jle
testb
add
fnstenv
xor
stos
jo
aaa
inc
add
mov
stc
cli
test
add
cwtl
or
cld
cmp
mov
adc
or
add
imul
mov
fimuls
add
xchg
aam
les
jl
mov
and
lret
pop
cmp
lahf
mov
pop
sub
in
jecxz
cmp
cmp
shlb
and
or
add
cmpsl
adc
inc
add
call
jns
pushf
out
sbb
add
mov
add
add
mov
add
add
loop
pop
rcrl
notl
pop
xor
daa
lock
sub
les
sbb
clc
movsb
scas
sbb
mov
add
pop
sbb
scas
lcall
push
pop
jp
cmp
adc
scas
dec
cmp
jo
adcl
sub
add
movsb
pusha
add
loop
mov
sub
cmc
popa
insl
mov
mov
call
add
int
mov
data16
int3
sub
pop
lret
js
mov
test
imul
mov
adcl
rolb
add
xchg
push
push
and
ja
bound
push
bound
int
aaa
xor
ja
jl
test
imul
lret
rcrl
icebp
fnstsw
add
sbb
add
call
test
jle
adc
sarl
add
aas
adc
xor
fisubrs
jb
jae
daa
sahf
dec
xchg
rolb
xchg
push
xchg
push
imul
xchg
xor
add
lret
add
pop
adc
pop
es
mul
sub
add
enter
fidivrl
jg
add
add
add
mov
sarl
shll
stc
cmp
jno
sbb
aaa
sbb
jno
mov
fdivrs
stos
mov
xchg
cmpl
pop
xlat
push
xchg
xchg
jno
cmpsl
add
das
dec
clc
push
shr
scas
xchg
das
add
int3
int3
xchg
lret
push
adc
sub
mov
out
jbe
jne
xor
mov
adc
popa
or
leave
ss
les
mov
inc
int
pushf
push
push
add
add
fiaddl
inc
pop
or
addb
push
pop
cmpsb
xor
in
and
fdivl
rcrl
mov
add
sbb
test
pop
sbb
fadd
add
movb
arpl
leave
lock
loopne
jle
push
cmp
jb
ss
enter
jp
jecxz
add
lret
add
andl
sbb
lret
test
xor
jbe
fisubrl
mov
fsin
ss
leave
testl
dec
mov
aas
push
xchg
icebp
sub
sti
shr
cwtl
pop
xchg
cli
sub
pushf
call
mov
adc
push
or
lods
sbb
popa
jmp
addb
fstpt
cmpsl
inc
pusha
add
rorw
movb
rolb
aaa
stos
cmp
pop
fdivrl
movlps
fsub
dec
mov
add
cltd
pop
jge
add
shrl
scas
dec
sbb
add
pop
mov
nop
cltd
in
movsl
jle
add
ret
sub
mov
adc
jbe
cmp
mov
mov
jp
imul
ret
push
jmp
mov
fsubr
sarb
dec
adc
pop
dec
fwait
push
add
popa
mov
enter
add
pusha
add
sbb
add
lods
inc
add
sub
mov
mov
cmp
roll
call
jle
fidivrs
add
push
push
pop
cwtl
jge
sahf
jg
add
xchg
shll
sbb
ss
iret
pop
and
cld
xlat
and
bound
sbb
jg
pushf
leave
movsb
out
pop
xlat
negl
sub
inc
add
das
cmc
dec
and
inc
add
cmpsb
ret
les
call
lds
nop
cmp
inc
add
pop
xchg
mov
cmpsb
mov
and
in
sbb
add
jecxz
nop
lret
ret
jecxz
aaa
iret
mov
mov
mov
into
push
add
aas
int
adc
popf
test
cmp
movl
push
jl
cwtl
inc
add
pop
in
jnp
sbb
je
push
movb
or
hlt
out
div
add
sahf
cwtl
subl
add
lret
inc
add
movsb
lds
pop
push
shrl
sub
leave
and
and
rolb
out
imul
push
movb
pop
test
ja
ss
xchg
jge
mov
fistl
pop
inc
sti
jle
dec
in
jne
jb
clc
dec
xchg
filds
inc
sub
jmp
inc
add
add
push
jne
push
add
add
or
jnp
call
push
jnp
jae
cs
js
sub
in
add
cwtl
mov
adc
inc
add
popa
std
rcr
stos
add
stc
pop
mov
add
jmp
insl
fidivs
pusha
add
sahf
jo
shll
xor
jb
and
jns
push
lcall
out
dec
cmp
cmpsl
out
ss
xlat
aad
mov
inc
add
add
sub
pop
ret
jno
les
ljmp
icebp
imul
enter
fisubs
cmp
fstl
repz
lds
data16
adc
leave
loop
and
lcall
xchg
xchg
hlt
stos
stos
xchg
test
pop
jl
pusha
add
lds
movsb
or
cmpsb
call
scas
mov
icebp
fimuls
lds
cmpsl
ljmp
add
movsb
pop
stc
mov
mov
dec
add
inc
add
jge
insl
insl
and
rol
cwtl
mov
xchg
cmp
je
push
paddusw
in
mov
outsl
sub
cmpsb
repnz
add
lret
sub
push
lock
add
add
sbb
lds
jmp
dec
push
pop
add
add
imul
push
dec
inc
add
cmc
in
lock
xchg
and
mov
jnp
add
mov
mov
jno
psllq
mov
add
add
mov
push
xor
cmp
test
push
add
adc
test
lea
add
and
xor
stos
push
mov
clc
rsm
xchg
test
and
xor
ds
or
insl
addr16
jne
mov
clc
lods
shl
push
add
add
test
jge
jl
cmp
pop
lahf
and
sahf
add
lahf
ljmp
popf
cld
adc
ljmp
push
sbb
popa
mov
pop
jg
xlat
mov
mov
cmpl
jg
sub
mov
mov
sub
rcrb
add
call
leave
sub
popa
outsl
rolb
push
add
jmp
std
mov
gs
das
jg
cmp
or
popa
and
mov
rclb
gs
and
lock
xchg
xor
rorl
dec
aas
cmp
imul
mov
cmp
in
scas
jge
add
ss
lods
fnstenv
jo
jecxz
push
add
add
movsb
sbb
lock
sub
shrl
out
mov
adc
dec
dec
pusha
add
dec
movb
cmp
sub
inc
add
jo
and
notb
call
sbb
es
cmp
add
push
aaa
rolb
ficomps
bnd
xchg
ja
add
scas
gs
push
sub
lcall
test
sbb
cmp
popa
and
xor
incb
addl
cmp
aaa
jmp
rcll
inc
mov
inc
add
lret
fs
repz
and
movsl
movb
out
push
dec
dec
imull
mov
jl
movb
fsqrt
add
lret
mov
inc
adc
and
inc
je
xor
mov
das
out
dec
movb
add
push
jl
out
add
shl
cmp
add
or
cmpsb
jne
or
idiv
gs
fbld
gs
test
movhps
cmp
add
sub
cwtl
mov
aas
loope
call
cmp
popa
pop
fwait
rcrb
and
in
insb
sbb
jbe
fcomp
adc
scas
addb
cld
cli
aaa
sub
pop
push
std
ret
bound
push
add
ret
lea
mov
dec
push
sbb
idivb
or
mov
ss
jp,pt
jmp
movsl
jb
adc
and
shrb
sub
xchg
pop
sbb
gs
or
inc
add
pop
aaa
mov
add
dec
out
add
mov
xor
icebp
mov
cmpsb
push
aam
inc
add
push
fdivs
push
add
xchg
add
sarl
lods
inc
push
inc
add
jbe
lock
jge
into
jo
sub
jge
add
arpl
sub
sbb
aam
pusha
add
mov
in
fstp
loop
repnz
popa
insl
add
cmp
push
lahf
xchg
int
mov
sub
and
pop
jo
mov
xchg
cmovbe
lods
cwtl
movsl
push
jbe
in
lods
sub
xchg
mov
cwtl
xchg
mov
push
stos
cld
jmp
inc
add
add
pop
fnstenv
and
dec
cmp
push
add
pusha
add
and
movsl
cltd
insb
fidivrs
inc
add
imul
push
addr16
sbb
mov
jae
stc
pop
or
jne
mov
add
mov
fiaddl
icebp
push
sbb
into
jp
or
mov
sbb
inc
nop
push
shlb
dec
fmuls
pop
icebp
push
xchg
add
in
out
mov
testb
cmp
xchg
les
add
cmc
add
ja
xor
sbb
int
lock
mov
xlat
mov
add
inc
sub
shll
lret
dec
mov
out
add
dec
jmp
pop
xor
lret
jnp
repz
cmova
and
push
cmp
inc
add
push
xlat
mov
les
fimuls
cmp
fsubrs
add
movb
hlt
jg
inc
add
cld
or
add
mov
pusha
add
in
jp
ljmp
mov
push
add
and
scas
fadd
add
cmp
xchg
xor
rolb
mov
addb
add
shll
mov
divl
jp
xchg
arpl
add
add
bound
stc
movsl
jg
int
daa
rcll
jbe
lods
hlt
in
nop
sbb
add
out
jne
push
pop
sahf
inc
add
jne
in
cmc
cmpsb
dec
inc
pop
xor
fwait
adc
movsl
adc
ds
inc
add
mov
sbb
ds
cltd
lds
xchg
cmp
aad
adcl
add
xchg
fs
push
rol
faddl
cmp
je
add
dec
pop
rorb
add
rorl
into
push
mov
popf
out
cmp
jp
adc
add
dec
nop
inc
jl
mov
lock
adc
push
stos
xor
shrb
and
cmp
dec
push
xlat
mov
lock
mov
xor
cmp
out
sbb
sbb
lret
cld
and
outsb
push
pop
push
lods
push
cwtl
test
cltd
inc
add
cmp
movb
stc
cli
adc
add
insl
int
out
test
and
addb
mov
add
and
ljmp
inc
add
cltd
or
cmp
sets
scas
adc
test
hlt
cli
add
addr16
jb
cmpsb
push
insl
or
cmc
push
or
and
add
and
xchg
imul
or
xor
mov
int
dec
iret
mov
mov
lock
and
test
adc
sbb
fsts
lods
ljmp
inc
hlt
cmp
fcom
mov
je
xchg
and
add
fs
add
clc
rolb
sbb
aas
inc
add
adc
dec
sub
or
movsb
cmp
xchg
cltd
push
mov
pushf
fsts
mov
sub
movsb
jg
insl
and
or
mov
add
push
les
in
dec
aaa
xor
mov
addb
es
jmp
in
inc
pop
push
add
mov
push
xor
les
cmp
inc
sbb
aaa
sbb
add
xor
mov
cld
sub
mov
subl
inc
add
loop
insb
ss
mov
jge
in
les
ret
jbe
cmc
inc
loop
jno
insl
pop
mov
scas
push
push
mov
test
lcall
mov
stos
repz
push
add
pop
push
adc
sub
stos
gs
mov
or
jge
cmp
xlat
pop
movsl
call
inc
add
and
ljmp
addb
jne
lea
jae
add
loop
adc
xchg
xchg
loop
inc
sti
inc
add
xor
int
addb
rcr
or
jo
sub
mov
arpl
cmpsl
mov
rcrb
shll
nop
cmp
mov
cmp
aaa
enter
dec
das
mov
mov
in
cmp
add
add
cltd
lcall
cmp
jg
or
jecxz
sbb
add
movb
shl
in
or
or
in
inc
add
add
icebp
push
xchg
push
xchg
jb
gs
jns
mov
add
mov
test
cmp
mov
mov
nop
notb
test
jne
sbb
push
sahf
in
lea
lcall
dec
stos
je
xchg
movsb
fucomi
arpl
push
lods
cmc
scas
pop
dec
outsb
push
xor
faddl
mov
in
xor
sbb
addb
scas
sbb
nop
call
insl
jno
adc
cmpsb
out
jnp
std
adc
cmp
jle
pop
cmpl
push
xchg
arpl
pop
fidivs
xor
mov
add
test
ror
insl
mov
adc
dec
aaa
and
andl
decb
push
add
out
ret
dec
movb
sbb
dec
mov
imul
jns
push
mov
dec
lock
movb
ret
cmp
dec
or
cld
addl
mov
movb
fs
jbe
push
lds
add
lcall
push
mov
cmp
push
movsl
sub
aaa
push
ds
shrl
mov
xchg
popa
stc
cmp
mov
xor
inc
jecxz
js
sahf
aad
adc
fcmovnu
or
je
dec
mov
lret
mov
mov
add
xor
test
dec
cmp
add
push
or
mov
adc
add
stc
bnd
adc
les
sub
add
push
std
sub
pushl
rorb
out
sub
add
daa
inc
into
pushf
adc
mov
push
lcall
adc
add
and
in
and
xor
cmp
pop
mov
lods
dec
je
out
in
test
jns
push
cmp
addb
movb
mov
out
mov
xchg
neg
pop
xor
mov
sti
shr
pop
dec
mov
dec
outsb
jge
fdivs
in
mov
jns
and
add
and
out
test
mov
scas
out
into
addr16
or
popa
in
xor
xor
cmp
mov
mov
adc
fimuls
aaa
out
adc
dec
repz
js
mov
fiaddl
dec
jno
inc
push
add
sbb
insl
dec
mov
mov
outsb
xchg
cmp
sub
mov
or
fldenv
sub
movsb
in
mov
adc
dec
mov
pop
mov
lahf
xchg
and
mov
faddp
add
shlb
or
push
add
xchg
push
pop
cmp
jmp
sub
repz
ds
sbb
inc
xor
in
cmpsl
jge
mov
shl
test
adc
in
pop
call
sbb
adc
mov
pop
imul
movsb
dec
or
sahf
daa
mov
or
movsl
mov
pop
pop
and
push
xchg
push
jg
outsb
aad
dec
jno
lds
inc
addb
aam
stc
xor
add
jbe
sub
mov
jecxz
mov
add
sub
lods
cmp
in
ljmp
out
cli
pop
les
fwait
push
cli
add
and
jns
int
add
or
xor
sarl
push
sub
cwtl
add
cmp
add
fs
add
std
sub
cmp
dec
in
and
push
xor
rorl
push
xchg
and
add
lcall
push
nop
mov
in
jo
insl
adc
arpl
dec
pop
push
adc
je
outsl
decl
add
dec
mov
outsl
or
cli
add
and
pop
jecxz
add
cmpl
aad
pop
push
gs
ljmp
add
mov
out
insb
mov
getsec
sub
out
imull
mov
jb
lods
sarb
xchg
lahf
flds
popl
jns
mov
insb
loopne
xchg
xchg
pop
xor
or
ret
add
arpl
and
icebp
clc
rolb
or
add
pop
and
cwtl
iret
lea
add
popf
data16
out
out
imul
data16
push
add
jne
add
push
nop
sub
jb
repz
pop
cmp
xchg
nop
pusha
add
adc
loop
gs
inc
add
jp
cld
mov
test
cld
testl
cmc
wrmsr
jb
inc
add
popl
add
shl
sahf
jo
in
in
and
bound
jne
cmc
ss
cmpsb
out
and
push
mov
jmp
stos
push
add
imul
mov
aaa
movsl
insb
mov
and
fadd
sbb
add
or
sub
xor
hlt
dec
pop
jecxz
pop
dec
ficoms
sub
repz
bound
pop
xchg
mov
cmpsb
lds
mov
sbb
orl
add
lcall
add
xor
out
jb
hlt
cmc
rolb
jno
ret
add
jb
add
shll
mov
enter
mov
cltd
into
test
jecxz
popa
stos
jb
add
sub
xchg
dec
hlt
cmp
mov
pushf
add
push
push
push
repz
sub
cmp
addpd
or
dec
gs
add
push
fcom
loope
mov
jne
les
fld
add
xchg
sub
add
mov
add
ret
jno
out
int3
xchg
into
add
lcall
sbb
jbe
negb
movb
jb
lret
pop
mov
subl
sbb
sbb
les
push
int
mov
xor
push
add
insl
add
sbb
inc
add
addb
add
add
fwait
into
js
hlt
pop
insb
es
fs
jno
and
push
xchg
rcl
inc
add
bswap
fstpt
stc
sbbl
les
sub
enter
into
std
aam
mov
xchg
lahf
xchg
aaa
sbbl
sbb
cli
addb
xor
jb
jbe
dec
lods
or
pop
sub
sbb
cmp
call
mov
mov
mov
add
out
in
inc
add
cmp
pop
mov
xchg
jge
jle
adc
dec
stos
pop
ret
lret
aas
pop
daa
lret
ja
add
popf
push
fmull
cmpl
sbb
sbb
lahf
cltd
mov
mov
mov
pop
sbb
pop
out
push
pop
enter
jl
call
mov
repnz
loopne
mov
mov
lock
std
xchg
fnstenv
cmpsl
mov
aam
lea
push
mov
jae
sub
iret
imul
fcoml
xchg
in
cmc
out
add
inc
add
sbb
add
lcall
fs
mov
ja
dec
inc
dec
mov
cmp
and
sub
sti
cmpsb
pop
mov
dec
mov
cwtl
push
cmpsb
add
or
dec
pushf
push
add
cmp
add
mov
popa
dec
insb
outsl
mov
dec
and
add
test
push
add
mov
bnd
fs
lea
lock
imulb
imul
fwait
jo
stos
cmpl
pop
sub
lret
push
out
out
push
frstor
sbb
cmp
sbb
test
mov
add
mov
push
test
mov
out
cmovnp
xor
ja
imul
and
inc
add
jge
sub
cmp
add
les
cmpsb
xchg
negl
cmpsl
cmp
movsb
pop
inc
jle
add
add
cmp
out
stc
gs
sub
add
or
xchg
ja
xor
dec
insl
pop
pop
ja
testb
add
inc
add
jle
push
jmp
jp
mov
add
push
add
inc
add
mov
jno
mov
inc
or
mov
push
mov
jl
inc
add
fwait
test
mov
or
cmp
add
std
outsb
mov
xlat
dec
push
aas
outsl
jb
add
add
aas
stc
pop
pusha
add
xchg
adc
or
or
xor
cmp
insl
sahf
mov
add
fxch
cwtl
jl
inc
add
sub
jl
dec
mov
addb
xor
inc
add
gs
or
es
or
aaa
fcoml
dec
scas
pop
xchg
arpl
pop
test
leave
out
adc
ret
add
sub
bound
gs
cs
repz
cmp
adc
stos
mov
add
add
xchg
and
addr16
mov
scas
mov
inc
sbb
mov
test
cmp
and
cli
inc
mov
pop
add
jge
add
xor
add
and
pop
pop
adc
int3
rcrl
push
pop
add
adc
cmpsb
call
arpl
dec
cmpsl
xchg
add
sbb
xor
push
xchg
lock
xchg
mov
push
loop
je,pt
xchg
sahf
push
xchg
mov
push
leave
push
mov
or
in
xchg
mov
loopne
add
push
push
lods
fdivl
sub
stos
dec
adc
divb
jbe
call
mov
shl
sahf
sub
xchg
outsl
cmp
and
loop
es
inc
add
mov
mov
hlt
mov
and
adc
mov
push
xchg
and
nop
std
jb
lret
test
cmp
fisttps
and
inc
add
xor
es
or
xchg
idiv
pop
sbbl
test
jns
daa
xchg
rorl
ljmp
lret
or
outsb
sbb
inc
movb
insb
sub
xor
push
data16
sbb
lock
pop
je
sub
shrb
ret
sbb
sti
mov
or
fcomi
dec
repz
mov
mov
push
outsl
in
adc
sub
cmpl
add
mov
je
clc
out
inc
loop
repnz
add
add
jo
sbb
cwtl
fnsave
cli
jl
mov
xchg
mov
roll
mov
lcall
sbb
mov
pushf
movsb
call
daa
stos
xlat
or
int
rorb
call
push
bound
mov
test
in
cmpsl
xor
sub
stos
dec
data16
movsb
xor
movsb
jecxz
mov
repnz
jne
enter
xchg
popf
jg
xchg
xchg
jl
lods
jecxz
adc
fldenv
jmp
addr16
add
adc
outsb
dec
sahf
mov
jmp
xor
popa
test
rcrb
xchg
lds
fs
xchg
fxch
add
dec
inc
add
jecxz
and
pop
loope
jo
pushf
shl
and
shlb
mov
fnstenv
pop
aam
and
in
or
std
and
jno
daa
add
es
add
ds
or
iret
negl
mov
stc
ret
mov
das
jo
jb
cmp
cmpsl
test
add
inc
add
repz
ret
call
imul
addb
push
jns
lock
nop
adc
insb
cmp
faddl
xchg
loopne
mov
shlb
notb
pushf
mov
lret
shlb
push
iret
cmp
mov
push
fldcw
xchg
fwait
xchg
sub
add
push
jno
mov
pusha
add
mov
fisubrl
mov
cmp
rolb
add
dec
int3
inc
add
mov
mov
cmp
add
in
sbb
movsb
inc
xor
in
adc
push
sub
xchg
or
in
or
sbb
add
push
and
mov
push
mov
mov
mov
stos
or
add
scas
add
jmp
sub
sarl
ss
xor
stos
push
outsl
dec
scas
es
inc
and
mov
add
ror
loop
pop
incb
mov
xor
sub
cltd
push
push
push
mov
pop
pop
adc
sbbl
int3
int
lret
stos
cmp
push
sbb
mov
icebp
mov
movsb
aam
mov
add
and
bound
out
aad
pop
jmpw
aaa
adc
clc
sbb
add
add
repnz
dec
cmp
dec
inc
or
and
cmpsl
xchg
inc
pop
iret
cmp
lret
mov
inc
addb
icebp
jb
sub
add
mov
pop
pop
aad
cmp
test
jno
inc
adc
shll
js
add
data16
in
add
mov
jae
dec
fistpl
popf
lock
add
loop
lods
mov
out
out
addb
xchg
push
add
push
mov
and
out
or
repnz
or
shl
push
data16
dec
cmpsb
sbb
bound
cld
clc
in
xchg
lea
dec
dec
loopne
jb
popf
clc
or
nop
mov
aas
xchg
sub
cmp
add
enter
mov
push
sub
iret
stos
leave
dec
push
sub
mov
sub
inc
add
xchg
sbbl
mov
pop
imul
mov
out
fs
ret
bound
sbb
cs
idivb
mov
adc
add
add
add
or
popf
push
enter
push
decb
loop
inc
pop
fiadds
mov
lret
xlat
das
inc
test
dec
fwait
rolb
add
leave
jg
add
jmp
sbb
jecxz
sub
sbb
clc
test
mov
data16
xchg
addl
arpl
adc
push
repz
movsb
xchg
sub
pop
inc
add
jns
test
xchg
add
push
fst
mov
cmc
xchg
jne
dec
jo
mov
mov
fwait
loope
mov
rep
adc
jg
rcr
cltd
sti
mov
sbb
cmpsb
stc
clc
out
pop
dec
jns
lret
movsb
aas
sbb
in
add
call
lock
iret
or
add
adc
nop
dec
test
ss
adc
out
call
loopne
mov
adc
add
sti
sub
stc
in
je
or
outsb
imul
aas
sbb
std
stos
push
in
mov
fcomip
dec
and
adc
int
add
add
sub
inc
add
pop
and
add
lea
sub
jno
mov
pusha
add
aam
jb
je
clc
add
in
mov
pop
mov
ss
fucomi
mov
stc
addb
neg
ljmp
add
pop
arpl
xlat
inc
add
imul
pop
adcl
mov
inc
add
add
je
xor
sub
cmp
mov
in
push
push
test
mov
sub
add
add
in
scas
pop
adc
leave
dec
xchg
flds
add
bound
cwtl
mov
lahf
jns
or
pop
dec
lods
bound
out
out
mov
adc
arpl
pusha
add
pop
daa
xchg
dec
jg
add
fwait
std
int
pop
jp
jnp
lea
add
mov
popf
xchg
mov
outsl
in
mov
aaa
xchg
and
jg
test
xchg
aas
mov
ret
adc
add
inc
lcall
push
in
xchg
sbb
jge
jle
jmp
mov
int3
repnz
add
stos
mov
lods
mov
scas
sar
jle
repnz
clc
adc
mov
scas
mov
negb
pop
clc
movsb
int
bound
loope
mov
lahf
adc
es
in
add
xor
mov
out
jo
add
and
add
dec
sbb
jae
push
inc
cltd
std
sbb
pop
mov
xlat
iret
pop
popa
dec
xor
sbb
and
mov
xchg
mov
jo
lcall
add
into
fstps
and
inc
xor
mov
ffreep
add
adc
out
and
lret
pop
mov
leave
xlat
dec
cmpl
mov
add
push
lret
inc
add
mov
xlat
je
ja
out
jmp
add
adc
js
add
pop
sub
mov
cwtl
adc
ret
cmc
push
inc
sbb
or
push
addb
push
cwtl
dec
lahf
mov
add
nop
sbb
add
sbb
jl
and
daa
into
arpl
mov
aam
aad
and
adc
insb
mull
lret
sbb
sbb
lods
jbe
imul
and
test
add
sbb
popl
jge
ficomps
int
imul
mov
xchg
inc
clc
and
adc
or
pop
mov
add
dec
mov
test
sub
loope
add
mov
inc
cld
add
cli
push
call
dec
int3
sarb
sarl
pushf
xor
shrl
sbb
push
jecxz
xchg
add
ljmp
testb
add
dec
xor
xchg
fcomps
xchg
mov
pop
inc
add
cli
cli
inc
add
push
xor
add
dec
jae
add
add
jnp
mov
cmp
daa
int
push
add
movb
add
jle
mov
xchg
add
outsl
push
add
xchg
sbb
xchg
push
icebp
scas
aam
cmpsb
std
sti
sbbl
sbb
fwait
dec
sarb
push
arpl
cmp
jmp
add
push
xchg
dec
lret
pop
jbe
jns
lods
adc
mov
add
sbb
jne
fisttps
sbb
xchg
iret
cmp
mov
mov
sub
add
xchg
jl
mov
inc
add
imul
in
adc
and
test
xchg
adc
and
imul
cli
jbe
or
mov
ret
add
outsb
mov
add
stos
sub
dec
sub
insl
adc
add
stc
mov
adc
ljmp
add
add
mov
pop
das
lahf
sub
iret
push
shll
push
jbe
cmc
jecxz
ja
arpl
fistpl
add
stos
cmp
cmp
xchg
loopne
add
popa
jl
xor
add
scas
inc
cli
xchg
dec
xor
jo
add
mov
push
jb
das
xchg
xchg
sbb
push
cmc
cmp
adc
jnp
push
xchg
sbb
add
add
testl
push
xor
and
mov
fidivs
popa
imulb
inc
nop
pop
cmovnp
jp
pop
sbb
test
jg
xchg
loopne
inc
add
loope
inc
add
orl
paddusb
sub
test
inc
push
loope
stos
addr16
adc
pop
or
xchg
addb
add
inc
sbbl
dec
and
jo
xor
push
mov
js
loop
mov
inc
add
lcall
inc
xlat
leave
or
mov
mov
sub
adc
xor
push
pop
push
jp
sub
shl
std
outsl
test
pop
and
lret
call
mov
lods
inc
jl
mov
jmp
sub
and
pusha
add
les
sbb
movsb
mov
outsb
jecxz
add
testl
add
pop
inc
cmp
lret
sbb
cli
sbb
outsl
lret
jbe
inc
cs
stos
incl
add
adc
jmp
push
xchg
inc
add
add
mov
mov
jbe
fs
and
add
popf
rolb
add
andl
out
or
lods
mov
aaa
pop
add
mov
push
das
ret
mov
pop
mov
out
loope
pop
int
dec
cmp
cli
addb
pop
loope
add
cltd
ret
adc
dec
popa
sbb
cld
sub
add
mov
cs
push
sbb
mov
and
out
je
jg
shlb
fsubl
dec
bound
sbb
addb
adc
cmc
ss
jae
int
lret
and
mov
popa
push
scas
sbb
rolb
ret
jmp
aas
enter
movb
add
adc
cmp
fdivrs
add
inc
add
sbb
mov
sar
aad
in
out
stc
lahf
das
ja
std
cltd
cmp
mov
je
add
add
lret
mov
imul
or
sti
out
lret
cmp
jo
ja
in
cmp
xchg
cmc
insb
dec
addr16
and
mov
cmp
add
push
and
sub
push
outsl
cmpsl
lcall
mov
mov
dec
jmp
jg
push
cmp
mov
pop
inc
add
mov
mov
push
in
mov
test
addr16
call
mov
lret
lcall
movsl
add
loop
nop
daa
aad
adc
pusha
add
adc
popa
lock
aaa
inc
add
popf
inc
add
add
cmp
movsl
mov
mov
mov
ficompl
xor
sbb
mov
jbe
sbb
xor
nop
inc
add
movsb
add
addr16
cmp
xchg
imul
add
cld
inc
add
adc
add
add
aam
outsb
xchg
fisttpl
add
add
jo
in
jmp
add
arpl
rcrl
sbb
xor
xlat
jne
push
stc
or
ret
sbb
adc
pop
insl
jge
adc
lcall
pushf
inc
sti
pop
rolb
jne
inc
add
mov
rolb
push
push
cmp
jge
sub
insl
rep
mov
out
mov
out
adc
pop
jp
add
cmp
scas
mov
arpl
sbb
inc
add
cmp
sub
add
pop
movsb
xlat
pop
jns
jo
aam
mov
add
rclb
roll
clc
test
push
push
ret
mov
mov
pop
jno
add
or
stos
mov
add
jo
lods
outsl
cltd
ja
into
mov
inc
add
enter
lods
push
dec
push
add
mov
inc
add
cmp
imul
add
mov
imul
repz
and
xchg
inc
add
xchg
add
pop
loopne
jle
mov
mov
and
lahf
cld
cmpsb
and
addb
je
pop
fs
mov
jns
jecxz
int3
cmp
and
pop
adc
inc
push
movsl
adc
lock
sub
xor
lahf
test
jae
and
cmp
nop
int3
lahf
insl
in
pop
pushf
pop
or
dec
mov
dec
pop
push
mov
shr
mov
xchg
rolb
cs
xchg
cs
scas
xchg
pop
mov
jae
pop
ljmp
push
lret
addb
mov
add
arpl
or
push
mov
repnz
xor
xchg
inc
add
outsl
or
sub
lret
mov
sbb
movsb
mov
mov
mov
hlt
dec
jp
add
xchg
loope
stc
adc
xor
mov
xchg
cmc
adc
xlat
gs
or
jbe
and
addr16
loopne
fs
shrl
xor
add
mov
add
stc
in
out
popa
or
jmp
movsb
cld
ret
xchg
rcll
sub
leave
mov
push
sar
adc
cmpsb
ljmp
fisubrs
insl
imul
aam
lds
add
out
testl
cmp
lret
mull
add
call
inc
add
ret
mov
sbb
add
mov
test
pop
pop
jae
repnz
inc
test
xchg
arpl
into
stos
mov
daa
dec
sbb
out
or
push
or
loop
es
adc
add
aaa
xchg
scas
movsl
cmp
dec
push
pop
movb
mov
out
xchg
inc
adc
mov
lods
nop
and
cmpsl
sbb
shlb
inc
in
pop
shll
cwtl
sub
fcmovb
add
push
repnz
addb
add
hlt
lret
cmc
paddd
add
scas
movsl
into
mov
enter
and
xchg
mov
inc
in
pop
mov
add
sarl
add
in
inc
add
leave
in
hlt
inc
mov
jp
mov
push
cmp
cmp
lea
test
in
sub
jmp
aaa
inc
add
out
add
call
add
jnp
scas
push
add
add
arpl
mov
mov
add
cmp
outsl
dec
hlt
iret
xchg
pop
xor
outsl
mov
jg
add
sbb
test
out
movsl
and
call
out
and
pop
int
icebp
out
cmp
pop
clc
cmp
ror
push
mov
aaa
call
outsl
or
imul
add
sti
loop
cmpsb
pop
lret
rcl
out
mov
fnsave
cmp
add
adc
add
lea
jae
pop
sub
inc
add
inc
add
rcrl
dec
sbb
ds
xchg
movsl
cmpsb
divl
loope
jae
pop
test
gs
leave
addb
jmp
add
mov
push
mov
add
mov
jo
gs
sub
andl
mov
add
insl
dec
adc
pop
sub
sub
cmp
sub
mov
mov
or
push
xchg
in
adc
lcall
inc
add
jns
add
push
lods
xor
pushl
mov
mov
testb
fwait
mov
xor
add
jb
imul
cmp
mov
icebp
xchg
jns
and
jp
stos
repnz
negb
pop
mov
lret
icebp
or
mov
push
dec
push
xchg
adc
in
add
pop
pop
xor
inc
pop
cltd
scas
mov
js
xchg
aam
mov
in
and
not
inc
xor
fisubs
mov
jns
mov
rolb
or
jmp
mov
das
pop
ja
mov
sbb
insb
out
aad
push
sub
push
movsb
jne
sbb
dec
sbb
xlat
inc
and
mov
icebp
aaa
pop
sub
arpl
jo
ficoml
sub
adc
adc
dec
scas
sub
add
aaa
sbb
cmp
xchg
mov
aam
test
mov
mov
jne
lods
cs
cltd
pop
jbe
mov
faddl
dec
loopne
push
mov
test
add
push
adc
xor
inc
mov
test
add
js
add
jge
jnp
xor
je
decb
int3
inc
add
daa
into
lret
pusha
add
mov
push
inc
add
es
or
xchg
mov
add
mov
mov
rolb
sbb
lock
cwtl
popa
out
xchg
neg
lret
prefetch
add
jo
adc
adc
dec
cwtl
cmpsl
scas
outsl
lea
push
repnz
dec
jns
add
add
jecxz
out
sub
add
jecxz
fdivl
add
sub
in
pop
jl,pn
mov
frstor
out
stos
jle
popf
std
inc
sbb
and
cmp
aaa
fwait
in
jecxz
adc
push
enter
jl
mov
cmovns
jg
sti
inc
add
cltd
add
inc
mov
cmp
add
divps
inc
jbe
pushw
bound
lea
add
ret
and
in
fninit
mov
fisubrs
sbb
scas
leave
ficompl
aam
psubusb
jge
jg
mov
data16
inc
add
pop
xor
push
inc
add
mov
jle
jp
pop
mov
push
fsub
insl
outsb
mov
movsb
data16
inc
call
xchg
cli
cltd
xor
imul
add
shlb
xchg
sbb
hlt
and
mov
stos
clc
sbb
jl
cld
mov
pop
scas
jecxz
add
jp
popa
pop
xchg
jno
inc
add
in
sub
imul
test
ret
xor
cmp
aas
pop
lea
jne
or
inc
flds
lock
insb
fwait
out
test
adc
mov
jp
fwait
in
add
sar
fcoml
add
mov
fcompl
in
iret
adc
jecxz
or
add
mov
int3
pop
out
xchg
cmovb
loopne,pt
xor
daa
add
movb
push
add
add
pop
xchg
and
mov
addb
add
daa
int3
adc
aas
ret
jl
ja
add
cmp
xchg
add
xchg
xor
jge
rcll
and
popa
lods
fdivp
and
inc
imul
ja
rcrl
cltd
das
lcall
pop
sbb
pop
cmpsb
notb
xchg
mov
insl
sbb
pop
push
pop
pop
mov
lret
aaa
hlt
adc
sbb
lret
adc
aas
jecxz
pop
jns
outsl
inc
add
int
add
inc
pop
and
push
pop
idivb
dec
jecxz
lcall
lock
xor
sbb
push
mov
aad
push
add
or
loop
or
out
mov
out
add
mov
das
aad
ret
jge
mov
pop
sub
adc
adc
and
mov
mov
mov
push
jo
dec
in
movsl
cwtl
or
lahf
cwtl
sub
sbbl
in
add
add
fldcw
sti
std
cmp
lock
arpl
inc
std
addb
das
daa
data16
in
out
and
outsb
inc
scas
loope
std
out
jge
outsb
je
inc
sbb
mov
jmp
hlt
mov
inc
add
rolb
lret
fdivl
daa
cmp
cmp
lods
int
and
inc
pop
movsl
jne
add
add
mov
xor
push
cmp
jae
inc
lds
push
addb
xchg
sbb
cli
mov
jg
inc
add
rorl
cmc
outsb
loope
clc
or
cld
push
sub
out
bnd
adc
add
add
mov
pushf
pop
roll
add
ret
popf
xchg
scas
out
cmpsl
bound
jle
in
add
push
loope
insb
push
add
push
ret
daa
push
or
add
fnstenv
pop
ss
jbe
or
add
pop
aas
in
rcl
push
test
mov
sahf
inc
mov
mov
mov
repz
cwtl
mov
cltd
add
push
mov
divl
or
xor
and
jmp
mov
add
and
ret
leave
scas
cmpsl
scas
je
bound
jmp
rcll
fisubl
and
rcl
adc
dec
enter
mov
sub
xchg
loopne
mov
je
sub
leave
loope
hlt
out
jae
mov
ja
mov
rorb
or
add
fsubl
xchg
pop
iret
and
sbb
pop
addb
fidivrl
cmp
mov
xchg
insl
imul
add
jo
lods
aad
movb
inc
inc
add
insl
pop
lcall
insb
and
pop
dec
inc
add
sbb
fsubrl
sti
imulb
stos
mov
lcall
pop
dec
movsb
into
scas
dec
push
add
mov
fidivrs
int
mov
mov
sbb
mov
stc
outsl
les
xchg
flds
rorl
imul
scas
ret
jle
push
stc
sub
outsl
test
inc
arpl
add
nop
and
cmp
dec
dec
imul
or
xor
enter
fwait
paddusw
sub
cmp
push
inc
add
inc
add
push
and
sub
mov
fisttps
rolb
ret
inc
test
addl
mov
mov
int
or
mov
sti
sub
jmp
fcomps
aas
mov
in
fidivs
xchg
insl
jecxz
xor
xor
addr16
or
mov
mov
mov
movb
add
xor
inc
add
xchg
or
dec
dec
xor
adc
out
sbb
in
adc
and
fidivrs
or
enter
add
mov
in
dec
scas
lret
mov
or
insb
ret
xchg
or
jp
adc
ss
add
push
ret
cltd
mov
add
jp
ja
mov
dec
lea
lcall
subw
mov
cmp
cmc
dec
out
movsb
jle
test
push
cwtl
dec
hlt
or
jl
jne
mov
add
xchg
shl
adc
inc
movsl
rcrb
and
xlat
push
repz
aas
daa
mov
mov
add
dec
addb
popa
or
jl
addb
sahf
pop
jp
add
mov
push
aam
push
add
and
sub
add
add
movsb
rolb
inc
inc
rorl
lret
pop
stos
mov
jns
add
addb
sub
jle
add
shrl
or
add
xchg
xchg
aad
nop
shlb
add
fs
testl
sbb
imul
sub
xor
rcll
push
movsl
xor
add
pop
adc
mov
lret
xor
bnd
test
sahf
lret
mov
push
lahf
adc
fnstcw
pop
xchg
pop
add
adc
inc
add
fimull
enter
insb
adc
mov
ret
mov
add
jecxz
lock
pop
inc
push
and
hlt
nop
lds
push
gs
lods
push
push
rcll
and
or
test
xor
add
cmp
out
mov
add
enter
pushf
cltd
addb
ds
mov
mov
sbb
das
js
int3
sbb
addb
jp
add
jle
add
in
sti
jg
bound
pop
xor
test
cmp
pop
das
push
out
pop
pop
lea
jecxz
mov
dec
mov
repnz
pop
movb
gs
out
xlat
aam
aaa
xor
add
push
mov
imulb
aad
jmp
add
lret
insb
lods
or
xchg
and
jmp
into
mov
mov
inc
in
xor
lcall
js
jecxz
popf
push
pushf
imul
pop
test
inc
push
fwait
mov
test
inc
mov
cmc
fwait
xor
or
sbb
sbb
xor
add
outsl
add
sbb
imul
sub
xchg
dec
or
sub
add
push
pop
test
out
movsb
ficompl
fcoms
mov
mov
push
push
or
lahf
movsl
insb
sbb
adc
repnz
fnstcw
sbb
lods
cmp
xchg
mov
sub
leave
lret
inc
add
push
sub
insl
cmpsb
adc
enter
mov
scas
lcall
lods
cld
or
dec
testb
sbb
push
adc
inc
add
cmp
or
addb
mov
sub
or
mov
mov
dec
jae
adcl
enter
pop
ljmp
cmpl
sub
mov
std
out
cltd
repz
rolb
inc
add
mov
push
stos
mov
jmp
xchg
xor
push
scas
adc
stos
xlat
fwait
cld
sbb
pusha
add
mov
cmp
mov
add
jbe
insb
mov
ret
push
mov
in
ret
jecxz
mov
push
dec
ds
dec
iret
lahf
inc
mov
adcl
add
sgdtl
and
or
rolb
or
dec
push
pop
push
xchg
popa
sub
push
mov
push
insb
push
add
inc
mov
lret
in
jne
and
out
sub
jbe
ret
mov
dec
adc
mulb
add
or
cmc
cltd
out
jmp
add
pop
add
iret
mov
movb
push
mov
cmpsb
mov
jge
iret
movb
add
add
mov
ds
jo
notb
into
movsl
fldcw
push
cmp
inc
add
repz
imulb
sub
add
test
mov
insl
lea
arpl
mov
add
aam
add
int3
sbb
int3
ficomps
adc
hlt
movsl
pop
cmp
clc
sub
pop
icebp
and
outsl
dec
cli
xchg
frstor
add
outsb
sbb
push
addps
repnz
and
lahf
push
pop
sbb
stc
loope
inc
lcall
out
jns
push
shll
xor
pop
ret
mov
add
add
sbb
xor
xor
cmp
lret
int
repnz
xlat
push
das
rclb
lahf
das
xchg
pushf
and
je
loop
popa
dec
int
subl
addb
cmp
fiadds
xchg
push
cmc
dec
push
pop
fistpl
jo
add
mov
in
ret
ljmp
xor
jne
out
sub
push
ret
xchg
jns
xor
les
sti
scas
popf
test
imul
sbb
add
lcall
stos
jae
out
push
add
add
add
pop
jmp
rolb
int
xor
add
jne
xchg
push
jge
lock
dec
xor
cmp
jmp
mov
add
movb
and
adc
testb
fdivrs
add
add
stos
or
mov
push
sub
jmp
add
jnp
inc
mov
out
and
pushf
xchg
lock
add
add
xchg
jp
dec
dec
mov
mov
mov
mov
sbb
daa
lahf
lds
cs
cli
cld
xchg
aam
inc
sti
cmp
sub
fistpl
addb
sti
rcll
and
and
jns
push
cmp
shll
xchg
sbb
scas
sub
gs
add
icebp
sbb
in
and
fsts
jno
add
xchg
mov
or
push
in
js
ds
outsl
push
stc
sub
mov
out
xchg
bound
push
ret
pop
hlt
jns
add
cmp
movsb
xor
in
into
add
jge
in
cmpsl
cli
cmpsl
js
sti
movb
loope
roll
dec
jecxz
cmpsl
or
xor
add
leave
out
dec
fucomip
mov
lret
pop
fdivrl
push
jg
sub
add
mov
mov
cmpsl
cmpsl
adc
cmpsb
jno
xor
add
ljmp
addr16
sub
lret
or
and
jmp
push
mov
push
xor
cmc
mov
sub
adc
data16
pop
jnp
jle
pop
scas
cmp
iret
jp
jns
stc
inc
push
pop
ds
xchg
inc
ffree
add
ss
add
xor
xchg
cwtl
xchg
add
dec
jbe
addb
imul
clc
out
inc
add
push
cmp
sbb
clc
add
xchg
pop
inc
cltd
mov
add
adc
scas
lret
adc
push
movsl
mov
das
mov
add
lea
cltd
shr
sbb
cmp
ret
mov
jb
mov
cld
xchg
in
loope
pop
sbb
add
lea
lret
cld
bound
xchg
cmp
stos
pusha
add
add
fiadds
fmull
cmp
add
mov
pop
inc
add
dec
or
mov
adc
push
data16
inc
pop
jns
add
add
aas
fistl
and
cmp
pushf
mov
je
les
cmp
and
fwait
popa
fcompl
add
mov
add
cmp
in
fsubs
xchg
jle
mov
mov
test
mov
pushf
insl
adc
cmp
add
add
lock
fstps
addb
repnz
mov
xchg
icebp
mov
add
cmc
inc
mov
ret
cmpsb
pusha
add
jmp
movsb
mov
in
int3
pop
or
out
dec
jns
std
mov
sub
in
xchg
aad
adc
xchg
cwtl
add
out
mov
ret
sub
stos
pop
add
adc
outsl
or
add
aad
xchg
mov
mov
add
testl
dec
sahf
loopne
jle
pop
pop
rolb
in
pop
lea
mov
sub
gs
cli
pop
jb
mov
mov
fmull
call
sbb
cmp
lods
enter
cmp
jno
jb
add
cmp
cli
es
and
hlt
inc
add
ljmp
add
mov
insl
sub
mov
add
mov
add
and
mov
ret
jmp
pop
mov
push
and
add
inc
mov
mov
sub
inc
add
cli
out
cmp
repz
jecxz
ret
jmp
add
mov
inc
mov
stc
pop
xor
scas
hlt
dec
mov
push
dec
push
add
add
dec
inc
add
pop
in
cmp
ds
and
fstpl
imul
popf
in
mov
fistpll
sub
loop
clc
or
dec
fcoms
int
add
pop
cwtl
or
pop
pop
push
xchg
ss
xor
add
das
outsb
jno
push
push
add
clc
xor
ss
into
cmp
jl
test
out
roll
push
pop
jno
out
mov
aas
fisttpll
add
loop
push
sub
lock
or
xor
mov
jecxz
aad
in
outsb
or
add
mov
jecxz
mov
pop
ret
hlt
push
jl
lea
ss
mov
adc
nop
lods
lds
lock
scas
lods
enter
les
fcoml
sarl
popa
cmp
mov
movsl
cmp
add
pop
daa
xchg
je
dec
push
mov
stc
lcall
mov
int3
mov
rcll
popa
push
xchg
add
mov
xsha256
cmpsb
push
loopne
add
and
push
das
movsb
mov
loope
push
inc
add
add
sbb
in
cs
pushf
xchg
adc
mov
ss
test
js
sbb
lods
and
pop
and
add
out
push
bound
jno
imul
pop
push
pop
nop
stc
ds
sub
lret
fs
out
push
mov
fisubs
or
push
adc
sbb
push
popf
sub
add
push
insl
sub
push
mov
les
cmp
mov
lcall
cmpl
mov
imul
divb
xchg
insb
pusha
add
xor
out
or
ss
sub
add
loop
inc
jb
je
add
cli
mov
add
imul
pusha
add
ja
pop
loope
adc
adc
clc
and
nop
mov
rcrl
cmp
sbb
stos
mov
cwtl
daa
or
dec
into
mov
adc
loope
add
jmp
adc
in
or
add
inc
add
xlat
mov
add
in
sub
cmp
xor
adc
lcall
xchg
mov
int3
in
and
jne
push
in
xchg
xchg
cld
jle
dec
push
rolb
jmp
out
ljmp
jns
enter
loope
popf
mov
and
loopne
add
adc
dec
int3
imul
inc
add
sahf
pushl
clc
decb
aaa
cmp
push
and
call
xchg
mov
jo
add
lahf
mov
or
add
insb
popa
push
mov
call
cmp
add
xchg
dec
mov
or
mov
mov
cmp
add
or
test
pop
jl
mov
movb
daa
adc
out
add
ficoms
cmp
and
pop
int3
hlt
popa
mov
test
fisttps
cmpsb
in
push
or
xchg
add
add
add
add
xchg
sub
cmpsl
hlt
roll
add
inc
add
mov
mov
cld
movsb
adc
pop
fwait
xchg
pop
movb
je
sti
add
xor
dec
outsb
ret
mov
or
mov
pop
pop
mull
fwait
jae
xchg
cmp
adc
lret
sbb
mov
lahf
fisubs
cwtl
addb
mov
add
add
lods
adc
fisttpll
stos
pushf
sub
xchg
dec
xor
mov
loopne
xchg
sbb
jno
pop
or
cli
mov
seto
int3
scas
adc
lea
add
xchg
das
jo
in
je
sbb
mov
addr16
and
or
icebp
cmp
andl
popf
inc
js
das
lea
mov
outsb
lret
xchg
fstpt
add
decb
pop
insb
lds
or
in
push
les
movsb
sub
xor
les
xchg
fs
cmc
imul
add
dec
test
sbb
out
idivb
or
add
dec
dec
int
xor
inc
add
sub
dec
pusha
add
popf
ljmp
dec
inc
add
add
mov
gs
lcall
int3
or
cmpsl
dec
rolb
pop
add
ret
mov
nop
pop
aas
or
add
es
dec
inc
sub
cmp
sbb
ljmp
gs
mov
add
jbe
fs
adc
test
inc
add
push
xor
mov
clc
cmp
inc
pop
cmp
mov
in
loop
ss
xor
cmp
and
push
ret
add
add
in
xchg
pop
inc
add
inc
add
jno
aad
aam
lsl
xchg
or
push
mov
out
pop
sub
sbb
addb
add
jns
sub
insb
ret
or
inc
add
out
push
addb
lea
adc
out
mov
loopne
add
ja
dec
jae
push
int3
sbb
mov
call
sbb
jne
outsl
out
dec
dec
lea
fcom
lret
pop
mov
scas
test
lahf
mov
mov
cmp
push
movsl
gs
cmp
ljmp
xor
out
and
push
addb
add
scas
ret
inc
or
daa
pop
popw
insb
bswap
jno
add
add
lahf
mov
dec
in
in
mov
push
std
int3
movb
push
xor
adc
push
pop
and
mov
inc
add
dec
fstl
dec
push
jae
jge
mov
pop
cmp
int
add
clc
sbb
fcom
mov
das
les
cmp
xchg
stc
je
mov
nop
and
testb
dec
rcr
mov
add
das
aaa
dec
fmull
xchg
mov
hlt
pop
adc
ljmp
sbb
mov
mov
mov
int
jecxz
in
ficoml
into
jae
or
cmp
sbb
iret
xchg
xor
rcrl
add
imul
cmp
shll
add
push
xchg
out
add
adc
daa
or
adc
xchg
das
push
hlt
and
inc
cmp
adcl
adc
cmpsb
jnp
mov
outsl
iret
mov
or
sub
lock
hlt
dec
jmp
add
xchg
inc
add
call
inc
add
pop
jne
add
or
add
loope
stos
adc
mov
mov
lock
jo
inc
jo
add
xor
lods
cmc
fnstenv
dec
sbb
sbb
cmp
add
dec
jecxz
add
fnstenv
mov
jecxz
ret
icebp
fildl
scas
add
fs
call
xor
xor
popf
jae
xchg
or
inc
add
les
xchg
scas
aam
push
fs
cmp
loope
mov
dec
add
and
cmp
out
mov
sbb
xchg
xor
push
pop
outsb
fistpll
aad
push
and
lock
xchg
pop
sbb
xchg
cmp
xchg
movsl
jb
adc
push
ret
xor
jnp
xchg
out
adc
mov
sbb
or
leave
xchg
out
push
add
jge
sbbl
iret
inc
test
and
in
xchg
hlt
jg
pop
pop
inc
sub
sbb
add
push
add
insb
mov
sub
dec
xchg
cld
repnz
add
sbb
add
jle
cmc
int
gs
mov
add
adc
sub
jo
dec
and
push
mov
addb
or
inc
ja
adc
lea
xchg
sbb
rcrl
cmpsb
popf
sti
push
repz
jo
mov
mov
xchg
lods
jnp
rolb
add
add
cli
pop
sti
sti
pop
mov
jle
ja
mov
push
frstor
loopne
add
add
ja
xor
out
push
and
ret
movsl
jl
jbe
add
add
xchg
fildll
sbb
pop
sub
inc
mov
push
xchg
and
dec
mov
scas
jmp
sbb
stos
and
ljmp
cltd
call
int
xchg
dec
out
mov
arpl
add
push
add
sub
neg
inc
add
aaa
addr16
in
mov
cmp
pop
outsb
loope
lret
ret
xchg
add
adc
pop
je
repnz
xchg
call
icebp
sbb
nop
loope
adc
sbb
add
cmp
add
rorb
imul
dec
aad
sbb
in
jb
lods
adc
test
mov
mov
enter
leave
mov
int
movsl
xlat
lock
mov
cmc
pop
stos
adc
rolb
add
add
insl
xchg
ds
outsb
xchg
inc
add
mov
mov
mov
rcr
arpl
add
lea
mov
das
inc
push
in
idivb
jle
mov
mov
inc
nop
or
xor
popf
push
loopne
or
lods
push
addb
repnz
imul
jmp
jl
xchg
push
mov
cmp
dec
loop
mov
pop
cld
pop
mov
add
cmp
mov
movb
mov
and
inc
dec
dec
mov
jno
or
pop
icebp
out
inc
out
bound
mov
nop
sbb
clc
jne
add
mov
mov
add
ja
movsl
inc
cmp
enter
sub
lea
es
inc
xor
add
rcll
jmp
cmp
in
lret
adc
fmull
add
jle
add
or
adc
scas
sub
pop
mov
xlat
fwait
adc
imul
icebp
mov
inc
add
dec
inc
fldt
xor
pusha
add
fwait
hlt
sar
roll
aam
push
out
cmp
push
not
mov
addb
outsb
outsl
cld
outsb
les
mov
outsb
xor
fwait
nop
xchg
ja
or
lret
lret
in
outsb
inc
add
mov
mov
push
add
mov
add
daa
adc
or
jno
push
push
push
adc
push
fwait
pop
mov
mov
aas
adc
inc
add
add
lds
add
aam
push
pop
mov
cmpsl
xor
invd
cli
iret
or
stos
add
jge
xchg
mov
add
add
mov
or
push
dec
js
push
jns
repnz
sahf
xlat
pop
cmp
into
outsl
pop
fcomps
add
addb
popf
std
lahf
jae
sub
js
in
jge
insb
mov
pop
sub
sub
std
jno
mov
sbb
pop
addb
mov
jle
out
notl
bound
push
dec
dec
cmp
popl
add
push
lods
add
aam
test
insl
je
pop
add
lods
pop
xchg
dec
xorl
stc
mov
xchg
loop
jecxz
add
stc
sbb
ret
test
in
movsb
dec
dec
stos
mov
gs
inc
and
aam
cs
xchg
push
inc
add
mov
loopne
cmp
mov
pop
notb
cmpsb
cmc
mov
xor
int
imul
adc
es
add
out
je
dec
gs
test
mov
fmul
cmc
out
jg
adc
cltd
xchg
lods
and
jo
in
pop
rcrl
xchg
mov
sub
adc
out
push
fsubrl
cmc
mov
mov
mov
loope
inc
imull
stos
pop
addb
add
cmp
dec
xchg
and
or
and
pusha
add
mov
pop
xchg
pop
cmp
xor
pop
mov
mov
xor
mov
cmp
inc
mov
test
add
xchg
push
movsb
cmp
movsl
xor
ljmp
jge
imul
mov
addb
test
mov
and
pop
test
test
adc
jb
add
daa
jge
mov
mov
push
add
imul
test
les
xchg
mov
rcr
xlat
pop
into
push
mov
ss
mov
xor
gs
les
imul
pop
mov
mov
outsl
sub
data16
loopne
add
int3
repnz
xchg
rclb
add
cmp
inc
add
jecxz
add
or
lods
jns
insb
jmp
les
lret
and
loop
sbb
cltd
dec
pop
das
call
cmp
dec
imull
movsb
jge
div
hlt
cmp
repnz
stc
or
cwtl
sbb
pushf
and
fs
mov
adc
fcmovb
or
out
je
pop
mov
add
mov
add
inc
dec
mov
int
mov
in
jecxz
add
cmp
jmp
imul
addb
gs
xchg
pop
pop
ror
loop
jge
outsl
dec
andl
shll
dec
mov
dec
dec
pop
push
mov
mov
addb
add
cmp
xchg
mov
mov
imul
pushf
pop
jge
mov
sub
xor
mov
loope
rep
sbb
mov
test
loop
std
data16
pop
in
add
push
lret
mov
sbb
mov
jbe
add
add
scas
xlat
int3
and
stc
mov
xchg
mov
push
or
loop
push
sub
xor
dec
pop
sbb
adcl
jmp
out
flds
add
mov
xor
xchg
test
jbe
sub
pop
mov
cli
xchg
imul
out
pop
and
jns
sub
xchg
cltd
dec
js
mov
sbb
push
push
xchg
popl
add
push
aaa
ds
imul
pop
push
repnz
add
xor
cld
inc
mov
repnz
mov
lods
jp
xchg
fcoms
dec
fcmovb
add
add
cmp
xchg
leave
loop
mov
add
int
je
fs
adc
xor
leave
repnz
ja
add
nop
pop
leave
gs
add
xor
nop
xor
add
add
cmp
insl
push
push
add
inc
ret
fmuls
data16
xchg
arpl
fbld
daa
leave
out
mov
jb
jns
repz
imul
mov
ss
sub
shll
call
push
and
add
xchg
xchg
out
stc
cwtl
fwait
jb
ja
sub
mov
cltd
push
push
and
add
fsubs
es
add
push
cmp
es
add
popf
ficoml
sbb
pop
jp
push
sbb
mov
loopne
add
jae
jl
jne
insl
add
mov
adc
push
negl
in
call
push
mov
outsl
push
add
test
test
lret
popf
lret
xor
mov
pop
dec
std
inc
add
pop
and
push
inc
shlb
stos
daa
sbb
sbb
fiaddl
ds
dec
mov
or
inc
pop
out
fmuls
pop
into
pop
push
inc
ss
test
xor
scas
fadds
adc
daa
dec
aaa
aaa
push
lea
add
mov
jp
pop
sub
push
ficompl
popa
xchg
stos
int
cmpsl
and
testb
sub
adc
mov
repnz
out
inc
stos
scas
jmp
fldl
popf
or
jb
into
push
cmp
fsubl
add
repnz
idivl
add
shl
daa
movups
movb
push
outsb
inc
add
sbb
add
fs
sub
pop
adc
aas
adc
jno
inc
add
lds
int
mov
pushf
pop
or
aaa
icebp
dec
fildll
xchg
push
aas
xchg
mov
add
push
adc
clc
cmpsb
inc
dec
jo
mov
out
sbb
bnd
cli
call
or
sbb
and
fildl
mov
or
sub
mov
rolb
xchg
lock
add
add
movsl
sub
push
insl
rolb
add
add
add
sbb
fsubr
les
sahf
cmc
xor
mov
mov
mov
add
mov
add
add
jbe
add
in
fimuls
loop
out
adc
fcmovnu
xchg
pop
fdivrp
sbb
mov
push
ljmp
imul
addb
mov
xor
jae
bound
movsl
ret
imull
add
sbb
dec
insl
push
es
or
cs
lods
lds
inc
jge
xor
in
pop
mov
add
cmp
or
add
sti
inc
add
mov
testb
ja
xor
mov
adc
hlt
pop
stos
pop
pop
mov
jl
add
ss
les
add
ficomps
sbb
mov
rolb
pop
pop
sbb
xlat
push
xchg
in
lds
arpl
gs
jo
std
push
push
jne
into
sahf
das
cmp
out
xchg
or
pop
mov
push
mov
add
movsl
sub
mov
fnsave
xchg
lods
jle
sub
repz
ret
daa
fwait
loope
int3
test
fcmovb
add
add
leave
jmp
inc
add
jmp
jb
shll
es
test
cmp
aas
jne
aam
je
scas
lahf
or
xor
add
movb
sub
or
inc
add
and
xchg
pop
lret
dec
negb
add
es
shll
cmpsl
outsl
iret
and
add
xstore-rng
cmpsl
xchg
push
xor
cmp
adc
add
inc
pushf
lcall
lahf
mov
hlt
fisttpl
push
adc
add
jbe
lret
cld
pop
imul
pop
fildl
add
cmp
mov
mov
aaa
aam
movsl
rol
add
setbe
pop
std
popa
movb
in
xchg
ljmp
push
jne
cmp
add
jl
addb
pushf
mov
xor
jne
sbb
add
notb
mov
add
add
pop
cmp
fcomp
rolb
hlt
jge
call
and
nop
sub
xchg
sub
ljmp
xchg
movsl
out
pop
das
sbb
std
addb
cmpsb
push
push
popa
mov
sbb
cli
dec
add
scas
xchg
sbb
stos
push
add
mov
mov
addr16
inc
test
and
ljmp
and
and
sub
xchg
test
adc
je
cmp
jnp
mov
add
add
nop
sbb
jmp
add
jno
push
dec
inc
add
rclb
psllw
add
dec
jae
dec
aaa
push
inc
in
ret
movsb
mov
sar
jae
std
mov
stos
jo
add
int3
sub
jle
inc
add
mov
mov
fnstsw
test
aad
add
repz
xchg
fs
sahf
xchg
pop
pushf
and
out
inc
add
daa
mov
sub
mov
inc
add
add
repz
sahf
jl
pop
ljmp
mov
lcall
hlt
dec
mov
add
add
js
je
or
jp
dec
cvttps2pi
or
push
mov
adc
aad
dec
xlat
inc
inc
add
or
xchg
mov
mov
xchg
ds
or
divb
out
xor
into
movsl
shl
add
sbb
stos
jnp
dec
stos
inc
add
and
push
daa
fldenv
cmp
mov
or
mov
lds
lock
call
ret
in
xor
outsl
push
rolb
and
pop
fwait
bnd
mov
mov
push
mov
sub
ss
add
cmpsb
repz
dec
mov
push
inc
inc
add
icebp
xor
pop
pop
push
mov
lret
popa
mov
cmp
sub
cmc
cwtl
sahf
stos
ds
sbb
lods
pop
add
loope
mov
out
arpl
dec
icebp
cwtl
adc
jns
jae
scas
test
movb
and
aad
dec
push
lods
das
loopne
dec
out
mov
and
xchg
mov
pop
push
xchg
mov
pop
mov
fnstsw
dec
ss
dec
xchg
cmp
mov
aad
imul
fcom
cmp
ds
add
cltd
js
add
pop
cs
jl
sbb
clc
popf
call
mov
add
add
or
clc
adc
mov
mov
out
cmp
stos
aaa
adc
or
sub
sbb
mov
add
sbb
and
cmpsl
ror
ljmp
out
add
das
ss
addb
popf
mov
arpl
push
addb
xor
and
loope
shrl
push
jns
or
add
in
call
mov
add
mov
inc
add
sub
push
and
mov
sub
int
add
add
add
or
subl
nop
jg
mov
add
cmp
in
inc
add
add
loop
and
adc
stc
pop
out
shl
sub
add
push
test
rolb
gs
movsl
mov
adc
rolb
cmpsb
rcr
cltd
stos
push
fwait
add
shll
cmp
repz
dec
js
stos
mov
pop
inc
cwtl
cli
fucomip
sahf
mov
inc
imul
mov
push
aam
in
and
dec
push
int3
mov
in
mov
lods
popf
sbb
inc
add
push
and
mov
mov
insb
sbb
and
lods
push
rcl
mov
and
fwait
jbe
in
mov
add
sub
sahf
out
mov
sub
ret
outsl
rcrl
scas
fidivrs
out
inc
add
add
lea
aad
xor
jge
add
mov
test
orl
jp
cs
add
insl
movsl
loope
pop
stos
inc
sub
dec
sbb
sbb
cmpsb
movb
nop
mov
dec
inc
rolb
arpl
mov
incl
add
jecxz
push
incl
mov
mov
adc
xor
mov
inc
push
mov
addb
incb
mov
mov
pop
cmp
addb
xchg
jg
xor
enter
jae
cmp
and
add
ljmp
and
movb
psllq
negl
mov
cmp
jo
pushf
mov
or
pushf
fstl
pop
jno
mov
adc
inc
in
aam
jmp
sub
pop
dec
stc
popa
cld
lea
jbe
out
mov
les
out
into
outsl
or
movsb
lock
sahf
pop
mov
movb
cltd
pop
xchg
sbb
ficoml
sub
jl
push
jp
push
cmpsb
in
xor
dec
rcrb
or
lret
or
es
push
ret
sbb
sbb
repz
adc
data16
mov
jnp
mov
add
fdivr
inc
cmp
testl
mov
loop
clc
in
pop
adc
jne
add
shl
sbb
xchg
cmp
jg
jns
add
sbb
mov
rcrl
sarb
mov
enter
stos
fwait
push
sub
fdivl
xor
inc
push
add
lea
insl
cs
add
sbb
add
jo
ds
insw
aam
xchg
xchg
sbb
xchg
jmp
xchg
inc
add
adc
and
inc
push
xchg
icebp
mov
add
iret
xlat
ss
add
outsl
inc
add
or
jnp
jnp
push
sahf
test
es
jecxz
inc
add
cmpsb
push
mov
mov
cwtl
mov
xchg
data16
jae
or
dec
cmp
fadd
add
mov
je
aas
mov
xchg
push
popa
dec
mov
sbb
out
dec
lea
sub
scas
outsl
in
addb
jecxz
pop
loopne
int3
insb
mov
mov
pop
cli
xchg
mov
add
jo
inc
add
jns
insb
mov
add
stos
xchg
movsb
sub
ss
sbb
jno
adc
repz
cld
ja
dec
movsl
mov
mov
std
push
mov
adc
scas
lods
hlt
jcxz
jle
add
mov
repnz
out
ss
add
add
cmp
adc
arpl
inc
add
push
adc
mov
loop
movsl
mov
mov
idivb
add
xacquire
add
mov
and
repz
out
mov
push
sbb
push
or
push
outsl
xor
sbb
ja
lods
mov
pop
and
push
gs
push
xor
movsl
or
out
or
or
xor
pop
mov
fwait
les
jecxz
daa
sub
aas
aam
xchg
mov
call
fsts
scas
jnp
mov
jno
add
jo
inc
add
lds
dec
mov
or
addr16
ret
inc
bound
xchg
fisubs
xor
jecxz
inc
add
and
xor
cmp
mov
sub
jecxz
test
add
add
mov
daa
sbb
or
xor
or
testb
inc
add
fcomp
addb
ret
mov
push
lahf
jns
sbb
push
test
sbb
dec
jle
push
pop
cmp
jle
lods
mov
es
ja
out
xor
push
loopne
jns
add
rol
xor
add
mov
adc
mov
stos
jl
pop
je
loopne
jle
add
add
sub
jge
sub
mov
pop
sbb
add
add
pushf
push
xchg
dec
cli
nop
push
add
scas
movb
mov
rolb
mov
movb
nop
inc
pop
dec
and
push
mov
movsb
mov
push
dec
dec
fwait
es
pop
mov
bnd
mov
mov
stos
dec
pop
xor
pop
cmp
mov
clc
jne
add
jl
aam
lret
mov
sbb
push
adc
in
movl
cmc
pop
sbb
rorb
xchg
push
lret
int3
adc
jmp
dec
mov
subl
push
js
js
add
lcall
add
addb
xor
lock
add
and
imulb
cs
inc
add
add
out
pop
dec
loop
pop
sarl
push
xor
mov
mov
add
mov
sahf
insb
ret
add
roll
test
in
dec
sbb
dec
clc
outsl
add
push
cmp
sub
loopne
movsb
pop
nop
cmc
inc
add
push
aad
mov
mov
jmp
dec
stc
mov
sbb
or
lret
scas
mov
outsb
out
sub
inc
push
mov
mov
ja
fmull
repnz
mov
jmp
int
out
push
add
inc
add
or
add
leave
lret
in
add
add
ss
lods
in
das
and
cwtl
dec
fmuls
and
xor
rcrl
add
mov
ja
inc
add
adc
daa
mov
out
sbb
cmpsb
imull
cmc
fildll
and
daa
push
in
adc
mov
jl
popf
fbld
test
push
jg
mov
add
and
dec
lret
xchg
iret
repz
jl
loope
lahf
sarb
add
and
fimuls
mov
cmpsl
push
les
shl
mov
jmp
pop
lahf
orl
movl
mov
cmp
sbb
add
mov
jmp
add
sbb
mov
add
addb
push
inc
gs
dec
or
movsl
test
sub
mov
add
adc
icebp
mov
ss
add
daa
push
test
and
addb
jmp
xchg
inc
cmpsb
lods
ljmp
jo
adc
jle
add
xor
cmpsb
shll
mov
fnstenv
pusha
add
push
cmpsb
pop
rolb
xlat
nop
popw
and
hlt
outsl
sbb
pop
dec
insb
pop
bound
cmp
hlt
aad
push
inc
cmp
mov
push
and
push
jle
and
lret
mov
pop
pushf
int
enter
ss
aad
loop
std
and
ja
add
add
and
dec
push
pop
jne
ret
or
push
loopne
jg
lahf
pusha
add
shll
addr16
sahf
push
sub
ss
jno
shrb
insl
and
push
es
sbb
jne
xchg
pop
cld
sbb
mov
les
jb
movsl
imul
gs
adc
push
add
into
adc
sbb
andl
inc
add
mov
cmp
out
test
outsb
fdivrl
push
sub
inc
add
pop
sub
or
add
sub
pusha
add
jecxz
jno
dec
rolb
dec
xchg
addb
dec
cmpsb
mov
or
sbb
out
testb
ljmp
sbb
negb
adc
sbb
outsl
xchg
add
xor
jae
rcr
mov
out
rcrb
add
fsubr
popf
inc
add
pusha
add
movsl
sbb
mov
das
loopne
push
inc
add
mov
out
hlt
or
sbb
mov
jmp
repnz
xchg
scas
pusha
add
mov
add
into
jmp
mov
lods
sbb
ja
xor
cmpsb
cmpsb
mov
and
push
in
fisttpll
cmp
mov
addb
and
sub
lret
add
cmp
testl
hlt
and
mov
out
int
pop
addb
push
clc
jnp
popf
test
or
rolb
addr16
adc
out
inc
popf
or
jae
and
mov
mov
test
mov
mov
mov
das
inc
mov
xchg
fnstenv
clc
ficomps
jne
add
xchg
push
aaa
jne
rcll
mov
dec
jle
inc
add
cmp
sahf
stos
mov
jmp
adc
adc
mov
lcall
lea
xchg
and
pop
inc
add
dec
fwait
jl
mov
mov
and
mov
mov
pop
push
add
fs
or
in
sbb
add
push
add
ds
dec
sbb
jmp
sbb
sub
xor
pop
mov
push
cltd
lcall
imul
loope
mov
stos
mov
fmull
lret
imul
inc
add
mov
adc
mov
lahf
inc
add
jp
cmc
dec
pop
shll
adc
lcall
out
mov
repz
fs
test
pop
imul
and
rolb
addb
movsl
loope
adc
decb
or
lret
xor
pop
lds
xchg
push
into
lret
xor
or
iret
incb
mov
imul
xor
add
jmp
add
nop
xor
fs
cmpsl
repz
ret
add
iret
inc
cs
mov
xchg
outsb
stos
mov
mov
in
ss
popl
push
cmp
in
rcrb
andl
sbb
add
xchg
stc
out
add
das
jle
and
mov
jno
pop
jle
add
loopne
push
add
lock
rolb
outsb
addb
les
cmpsb
out
loope
mov
or
xor
xchg
faddp
frstor
cmp
jae
enter
push
push
cmp
mov
mov
addb
addb
and
inc
add
and
add
mov
nop
lret
inc
add
das
fstpt
cli
fs
add
daa
cmovae
int3
xor
lahf
adc
ljmp
add
and
in
or
add
xchg
out
outsb
jmp
push
mov
pop
arpl
sti
and
or
adc
or
lahf
fwait
mov
add
addl
testl
or
addr16
incl
jne
add
jo
lret
push
add
arpl
addr16
add
popa
xchg
popf
cs
add
cmpsl
ljmp
pop
and
outsl
daa
push
cltd
inc
push
iret
cmpsb
dec
jno
dec
test
mov
mov
add
ror
push
sub
std
mov
roll
xchg
dec
enter
add
pop
pusha
add
push
in
add
adc
and
cmpsb
mov
mov
pop
fcomps
pop
jnp
movsl
xchg
adc
jne
lcall
pop
dec
ficompl
xor
push
jmp
cmc
mov
into
sub
sbb
das
adc
add
xor
add
pop
pushl
sti
push
push
in
adc
xchg
pop
jecxz
repnz
jo
pop
incl
es
mov
sti
sahf
sbb
fmull
addb
gs
add
xor
int
fldenv
mov
add
lea
adc
int
and
xor
jmp
lods
xchg
addb
cmp
repnz
mov
pop
dec
sbb
xor
outsl
mov
inc
add
xchg
out
pop
lret
or
sub
stc
out
jb
int3
cmpsb
cmp
int
das
aaa
mov
lret
jecxz
mov
and
xchg
inc
add
dec
popf
sti
pop
in
mov
inc
xor
fstpt
insb
pop
sub
pop
xor
mov
and
mov
test
iret
sbb
jg
into
mov
sub
addb
xchg
sub
ljmp
hlt
mov
add
mov
lock
mov
pop
cs
lret
add
add
popa
xchg
bound
rol
mov
add
es
int3
xchg
xor
pop
sarl
dec
inc
jae
cltd
sbb
fs
inc
add
lock
adc
rolb
shll
push
mov
movsb
pop
cltd
mov
xor
xchg
gs
add
add
shll
mov
mov
fmul
sub
ljmp
scas
lock
addb
ds
push
add
push
add
or
xchg
xlat
test
add
dec
int3
mov
add
icebp
fs
jnp
add
std
inc
add
imul
xchg
test
fwait
adc
mov
push
rolb
mov
sub
dec
dec
addr16
stos
out
lea
mov
cltd
imul
scas
mov
sub
outsb
rcll
pop
lods
jnp
loop
mov
out
cmp
sti
rorl
add
insl
lret
add
lret
iret
outsb
inc
mov
cwtl
mov
inc
add
add
les
inc
add
aad
lods
testb
jne
icebp
repz
cmp
cmp
add
cmpsb
out
fsubrl
mov
aad
jge
mov
add
cmp
mov
mov
or
xchg
cltd
rolb
push
mov
ljmp
add
shrb
and
fwait
jp
addb
stos
loop
fxch
rcr
pop
inc
leave
xor
pop
push
add
push
xor
push
mov
mov
adc
sub
xchg
cmp
cmp
jp
jae
pop
adc
mov
pop
iret
pop
in
jle
fs
pop
cs
inc
xchg
iret
movsl
cmpsl
and
inc
inc
sti
cld
out
pop
pop
loop
add
enter
out
jmp
stos
addb
mov
sub
mov
push
nop
in
xor
dec
dec
cmp
add
add
pushf
mov
lods
aad
loope
adc
orl
lock
popa
xchg
fstps
movb
decl
adc
fdivp
loop
nop
in
or
add
jg
stc
fsubl
testl
sbb
repz
ret
pop
arpl
mov
push
test
mov
mov
inc
add
add
cmpsb
and
xor
outsl
adc
dec
mov
or
nop
dec
lock
popf
adc
add
ss
add
es
call
add
lret
sub
xchg
push
xchg
pop
cmpsl
mov
or
add
mov
daa
jbe
sbb
pop
icebp
into
sub
test
shll
jmp
add
out
in
jge
and
in
ss
jge
xchg
ljmp
rol
adc
cli
daa
addb
cltd
js
aad
mov
adc
test
push
xchg
inc
cmp
daa
int3
add
inc
add
sbb
sub
test
mov
mov
push
addb
mov
add
xchg
xchg
xchg
fucom
imul
movb
bound
pushl
mov
fstpl
cmp
pop
sbb
aad
sub
jl
and
shlb
fldcw
jmp
mov
push
je
sahf
pop
ljmp
xor
inc
sub
push
movb
sub
add
int3
dec
in
imul
mov
fidivl
cmp
adc
lahf
sub
outsb
movsb
mov
lds
sbb
push
cs
jl
adc
xor
lahf
out
clc
test
jns
call
aas
leave
test
iret
aaa
mov
mov
add
lahf
lret
mov
sub
push
mov
ss
scas
sbb
out
rorl
popa
std
pusha
add
fmuls
cld
mov
pusha
add
pop
cld
cs
ja
and
add
jl
lahf
rorb
and
cmp
test
and
xchg
addb
aad
add
sahf
jns
mov
movsl
scas
jns
add
ret
ret
rorl
sbb
adc
push
xchg
ret
inc
lods
dec
repz
fbld
psllq
add
bound
repz
add
scas
pop
dec
mov
jl
js
or
cld
and
jnp
xlat
jmp
jle
lods
pop
addr16
scas
les
in
push
push
call
iret
jne
test
lds
add
test
cmp
and
push
cmp
push
xor
repnz
pop
pop
stc
pop
loop
push
push
and
pop
imul
fiaddl
add
addr16
adc
jl
icebp
add
or
scas
adc
ret
cmp
enter
push
daa
and
dec
ret
add
add
push
fisttpl
xchg
or
push
and
adc
add
jmp
sbb
bound
in
inc
add
xchg
jno
mov
mov
loope
cli
sbb
cmp
insb
sub
dec
pop
bswap
xlat
xchg
lcall
gs
aam
fcoms
add
fnsave
mov
loopne
loope
cmp
mov
loop
pusha
add
movsl
cwtl
jmp
sbb
jmp
movsb
icebp
movsb
sbb
add
pusha
add
or
and
pop
mov
mov
xor
jns
add
bound
arpl
add
add
sub
js
call
sbb
dec
mov
shl
jp
mov
add
lods
out
aad
xor
test
cltd
lock
sbb
int
lds
or
ds
xor
cmpsl
mov
push
push
dec
cmp
push
insb
outsb
out
incl
bnd
enter
add
add
mov
mov
repnz
inc
add
dec
sub
cmc
int3
int3
or
or
xchg
gs
ss
int
lcall
add
add
cmpsb
cltd
dec
negb
ret
aam
cmp
sti
addr16
add
mov
xlat
ja
xchg
icebp
jp
push
mov
pop
and
push
cmpsb
clc
je
mov
add
add
mov
cmp
cmp
das
cmp
inc
sub
mov
lods
call
cmpsl
fdecstp
scas
stc
jb
dec
push
inc
stc
ljmp
popa
and
pop
inc
repnz
sbb
pop
mov
add
push
inc
test
inc
fidivs
add
jne
dec
inc
add
mov
scas
addb
mov
imul
lahf
addr16
xlat
xchg
add
or
pop
xor
inc
add
std
xchg
push
cmp
nop
or
add
dec
and
enter
in
cs
inc
mov
pusha
add
and
test
filds
aam
mov
mov
add
add
xor
shrb
pushl
in
loope
cltd
adc
jecxz
add
and
ja
fwait
xchg
cmp
xor
shll
jmp
or
inc
imul
jbe
aam
popa
imul
xor
mov
xchg
lea
add
call
fisubl
lret
jb
ret
mov
jge
cmc
cli
and
pop
add
fidivl
push
dec
mov
lret
xchg
bound
inc
or
xchg
call
aas
stc
pop
bound
adc
add
add
iret
out
arpl
das
cld
lds
sahf
cmc
sub
in
add
pop
test
sbb
movb
clc
lea
or
and
mov
in
sub
or
inc
cmc
pop
jle
cmpsl
push
jno
jp
add
xchg
push
jno
jmp
jbe
xchg
stos
mov
test
shll
add
mov
lods
mov
inc
or
fwait
xchg
sti
fwait
adc
aas
mov
out
pop
pop
add
test
add
xor
icebp
jp
xor
and
inc
add
jbe
add
jecxz
push
jle
add
sub
add
xor
mov
dec
sahf
push
cmp
arpl
ds
lods
pop
shll
aad
and
int
or
and
mov
lcall
cmpsl
jmp
xlat
gs
inc
add
int3
je,pt
imul
test
test
adc
adc
xor
sbb
dec
outsl
pop
movsl
ljmp
pop
test
outsb
jmp
pop
pop
popf
sub
jne
lret
lcall
mov
jae
dec
and
add
jl
mov
cli
push
lcall
pop
dec
mov
scas
jb
add
mov
clts
add
icebp
jne
pop
cmp
fsts
and
out
xchg
mov
std
aas
mov
inc
inc
jbe
out
xor
cmp
shrl
std
add
or
cmp
or
pop
cmp
sbb
xchg
and
imul
sub
das
stos
lea
test
cwtl
xor
stos
insb
push
jne
aad
or
mov
int3
dec
iret
mov
add
adc
add
data16
movb
cld
in
inc
add
bound
hlt
ret
push
test
jb
popa
test
add
mov
add
push
pop
pop
outsb
data16
mov
xlat
sahf
mov
jmp
callw
fs
cmp
mov
xchg
lods
sbb
repnz
enter
xchg
push
xor
cs
movb
cmp
add
imul
xor
cmp
add
pusha
add
mov
addb
cli
cwtl
fwait
iret
inc
jb
jae
and
and
adc
movsl
add
lcall
jmp
and
adc
cwtl
mov
lahf
into
lds
mov
pop
aad
sbb
gs
lea
sub
daa
push
mov
mov
ds
mov
repnz
insb
in
sbb
scas
cmc
inc
xor
pop
lret
push
cli
ljmp
add
jge
ss
add
mov
and
pop
jb
movsl
adc
call
jmp
sub
dec
int3
lahf
pop
xor
add
push
push
fwait
jnp
jns
add
add
add
pop
sub
pop
rorl
test
js
xchg
jg
leave
mov
fidivl
in
loopne
aaa
rorl
repz
cmp
and
cmp
xchg
cmp
ret
xor
sbb
addb
insb
add
push
add
inc
add
adc
aam
and
add
lock
xchg
jge
xchg
add
addb
jg
mov
iret
insl
xor
clc
lods
stos
or
addb
mov
jp
sub
add
mov
mov
gs
sbb
mov
push
and
fsubs
add
add
push
sti
lcall
jl
inc
dec
rcl
mov
xor
jnp
int3
mov
iret
jg
sbb
push
incb
lret
sub
stos
gs
test
out
ja
dec
js
jne
add
popa
popa
add
cltd
ss
test
repz
xchg
sbb
iret
addb
push
pop
xchg
dec
push
cmp
daa
popa
ljmp
cmp
iret
lea
fldcw
cmp
jo
and
add
lds
lcall
sahf
xor
into
imul
and
movsl
add
add
mov
cmp
xor
dec
movsl
ss
mov
xor
hlt
adc
cs
in
cmp
mov
loopne
iret
cmp
pop
rolb
sub
pop
dec
leave
rcll
jl
cmp
jmp
int3
mov
pop
xor
mov
jecxz
mov
or
aaa
insb
push
scas
jne
rolb
call
xchg
inc
add
jae
sub
and
mov
jl
flds
out
fstpl
xchg
gs
mov
push
dec
mov
mov
xor
testl
fisubrs
out
stc
adc
in
mov
cmpl
pop
dec
add
adc
sub
mov
dec
bound
addr16
inc
pusha
add
lret
cld
inc
testl
add
jecxz
inc
shlb
js
lcall
mov
fwait
pop
test
or
sbb
bound
in
fdivrl
and
or
dec
push
popa
sub
sbb
adc
jbe
mov
sub
mov
out
addb
add
pop
call
loopne
adc
fists
pop
rorl
loope
pop
in
inc
add
fcoms
add
lock
addb
call
xchg
sbb
cmc
loopne
cmp
aad
sub
pop
jmp
mov
popa
call
aad
gs
insl
popf
push
movsb
mov
outsb
push
inc
add
addb
add
mov
pop
pop
jmp
xor
dec
mov
movb
jmp
push
out
les
stos
jno
mov
lret
pop
mov
pop
cld
mov
stc
mov
push
mov
inc
add
xor
ds
test
leave
cmpsb
xor
jle
jb
cmc
mov
sbb
icebp
divb
inc
add
ds
lret
rorb
sbb
cli
js
mov
mov
adc
cmp
dec
sub
pop
sbb
cmp
mov
mov
jp
xor
pop
pushf
cmpsl
leave
fadd
xchg
mov
mov
cmc
jns
push
rclb
mov
add
idiv
pop
inc
add
jbe
sar
sub
mov
enter
ljmp
bnd
ror
pop
cmpl
dec
mov
lret
jns
stc
scas
cwtl
or
aam
sbb
adc
call
dec
adc
jmp
int3
and
in
jns
push
mov
add
add
jns
addb
rep
icebp
jnp
fidivs
inc
sub
add
sarl
ret
std
cwtl
fidivl
icebp
dec
fsub
mov
js
mov
mov
xchg
int
fisubrl
ds
out
pushf
icebp
insl
push
lods
mov
xchg
sub
divb
mov
not
push
add
test
jge
add
push
mov
aam
in
fwait
test
or
std
mov
dec
rclb
icebp
sbb
mov
popa
and
sub
add
fwait
js
nop
lods
test
in
aaa
cmp
mov
add
stc
mov
and
push
push
mov
mov
mov
mov
adc
cmp
test
cmp
jmp
repnz
xchg
xchg
aam
sarl
jmp
cmc
les
pop
mov
jne
jl
add
add
add
test
jmp
stos
mov
inc
add
jae
xchg
adc
jecxz
in
addb
pop
shl
mov
fidivs
xchg
jmp
hlt
xchg
push
ljmp
pop
mov
push
add
jno
sbb
into
and
or
pop
pop
ja
dec
xchg
add
sbb
add
test
repz
adc
inc
jecxz
mov
push
add
jo
cltd
repnz
lds
add
movb
shrl
inc
xchg
jge
or
push
rolb
xchg
test
cld
shrb
scas
addb
outsl
ljmp
cwtl
push
hlt
add
out
jmp
dec
cmp
cmp
mov
push
movsb
pop
adcl
popf
les
push
out
int
rolb
ja
lds
lock
ljmp
clc
out
fwait
sti
jae
es
or
jle
jl,pt
jns
mov
sbb
mov
jp
jecxz
je
cmp
add
add
outsb
sbb
xchg
push
out
stos
push
add
push
fwait
movsl
sar
xchg
andl
xchg
in
and
insl
rolb
mov
outsb
xchg
inc
add
jbe
pop
inc
add
dec
jp
loop
fwait
sti
out
sub
adc
lahf
pop
bound
pop
adc
into
push
dec
cmp
in
add
das
mov
adc
mov
mov
add
and
aad
push
xor
das
jno
mov
stc
inc
notl
hlt
jmp
xchg
adc
pop
xchg
xor
add
aaa
dec
mov
mov
or
addb
fildl
push
dec
cmp
lea
fildl
add
pop
jg
xlat
and
popf
add
aaa
xchg
fstpt
cmpsl
add
shl
push
repnz
js
cmp
add
dec
mov
daa
scas
movb
mov
push
dec
test
adc
xlat
rcll
jmp
ja
sbb
call
ror
ljmp
dec
js
dec
movsb
push
jo
int3
rorl
fists
fimuls
or
scas
pushf
popa
in
aam
scas
pop
rclb
mov
sarl
rol
and
xchg
or
cmpsl
or
mov
daa
cwtl
test
add
nop
pop
jbe
pop
cmpsb
ss
xchg
out
xchg
xchg
xchg
xchg
adc
cmp
dec
mov
repz
xchg
or
add
aad
add
sbb
lret
stos
test
mov
ret
aad
add
xchg
lods
cltd
mov
setge
push
addb
iret
mov
xor
pop
int
xor
adc
add
mov
inc
dec
jp
add
aaa
rorl
cmpl
inc
add
xor
sbb
mov
insl
je
add
les
xor
stc
or
adc
scas
leave
ss
add
add
xchg
fsubs
cmp
pop
mov
out
mov
mov
nop
subl
cs
xchg
pop
fs
xchg
cld
or
and
push
cmpsb
ds
cmp
add
jge
add
add
pushf
movsww
call
add
cmp
push
push
pop
lea
xchg
jb
or
scas
mov
shrl
pop
add
test
mov
xor
ret
lods
js
pop
lea
std
incb
dec
loopne
fcoml
pusha
add
cvttps2pi
aaa
add
outsb
divb
lret
mov
bswap
pushf
ret
es
adc
xchg
test
into
les
rolb
comiss
cmpsb
mov
ljmp
mov
add
adc
cmp
aas
cmovl
xor
add
and
out
mov
clc
lcall
rcll
mov
flds
lahf
jl
sub
in
jns
scas
cmc
dec
xchg
dec
cmp
mov
pushl
rclb
add
cmp
jl
fimuls
and
lcall
outsl
mov
decb
add
mov
pop
jl
and
and
pop
mov
js
addr16
jg
sub
repnz
pop
dec
add
lock
loope
mov
push
lods
mulb
pop
mov
mov
ret
sub
mov
imul
cmp
pop
stos
xor
add
dec
in
popa
sahf
rolb
adc
cmpsl
pop
inc
int
jo
add
test
inc
jae
or
es
push
jb
fstpl
sub
sub
mov
xor
arpl
and
jg
pop
mov
subl
sbb
or
fsub
ret
outsl
cmp
ljmp
sub
stos
test
mov
cmp
push
ret
in
aas
jno
cmp
mov
xor
lret
test
jae
lods
scas
xor
add
hlt
enter
inc
add
rcl
sub
mov
sub
add
mulb
stos
fisubrl
xor
add
fldcw
mov
mov
insl
dec
out
sub
lock
popa
jbe
mov
repz
lods
mov
add
arpl
in
adc
dec
mov
xchg
push
cli
jbe
sbb
pop
stos
out
pop
sub
push
jbe
or
popa
arpl
cmpsl
mov
xrelease
jg
dec
xchg
mov
out
mov
lea
in
jne
cmp
and
push
cli
dec
aas
mov
mov
dec
das
out
lea
jnp
add
sbb
repz
and
mov
pop
out
push
daa
lret
iret
scas
dec
shll
decb
dec
icebp
pop
cs
cmp
testb
cmp
out
cli
out
push
mov
add
jo
xor
test
pushf
jp
dec
cmp
popf
jnp
inc
fnstcw
dec
cmp
outsb
fst
test
adc
inc
sarl
pop
cmp
xor
add
mov
xlat
push
ss
xchg
es
sub
add
pop
sbb
movsb
mov
les
cmp
xchg
push
xchg
push
mov
cld
out
add
mov
sub
dec
push
jmp
xor
and
test
sahf
enter
out
arpl
jbe
ds
mov
mov
and
call
jns
lretw
push
insb
and
into
add
push
repnz
insb
packsswb
movsb
mov
add
cmp
sub
fs
and
dec
lea
ljmp
push
test
cmp
mov
jg
and
xor
add
sub
lds
test
cmp
add
add
add
add
add
pop
das
or
mov
pop
cmpsl
hlt
dec
lret
mov
add
xchg
pusha
add
je
bound
outsb
pop
hlt
xlat
add
aad
mov
push
cli
loope
aad
mov
cmp
cmp
mov
je
icebp
xor
mov
pop
or
outsl
mov
jne
out
popa
lcall
sub
add
dec
dec
dec
pop
addb
pop
lock
sbb
jge
add
outsl
jno
das
lds
outsl
inc
add
mov
jo
add
add
pop
les
jno
add
adc
movb
pop
inc
cltd
lock
shll
dec
js
add
test
cmp
sub
add
add
cwtl
push
lds
inc
add
inc
mov
mov
insl
cwtl
sbb
xchg
mov
sbb
add
or
dec
adc
add
jae
stos
inc
add
jno
cli
fcmovnb
lea
jb
addb
ret
fwait
pop
cmpsl
movsb
outsl
ret
arpl
aad
mov
push
and
lcall
add
inc
add
icebp
xlat
mov
add
push
ds
xchg
push
sub
int
sbb
sbb
mov
jae
addl
inc
add
sbb
inc
js
add
or
cmp
sub
loopnew
flds
mov
in
cmp
mov
in
addb
sahf
popf
ficoms
jp
sbb
adc
aam
jnp
dec
push
pusha
add
imul
mov
dec
leave
inc
add
pop
mov
or
mov
mov
rcl
mov
adc
xor
pop
adc
fldenv
test
fsts
lock
xor
aam
cld
jnp
rorl
and
lds
ja
or
js
push
nop
mov
and
cmp
std
lahf
sbb
add
xchg
add
outsb
inc
jo
mov
and
daa
fldenv
add
add
in
das
xchg
call
xlat
cmp
cmpsl
in
addb
out
dec
jg
xor
jae
jmp
push
adc
lods
xchg
fwait
ss
jmp
nop
mov
dec
add
push
jno
jne
pop
repz
and
mov
pop
filds
movb
dec
in
sbb
es
in
or
es
cld
hlt
ret
xchg
dec
loopne
pop
push
dec
push
les
jl
sbb
jmp
jbe
sub
xor
mov
outsb
cltd
jne
add
or
or
push
sbb
popa
inc
int
add
in
inc
add
clc
or
ljmp
ss
ret
inc
or
adc
rcl
pop
fcmovnb
add
add
cmpsl
inc
add
ss
and
push
adc
lret
call
push
out
outsb
sbb
mov
cmp
xor
xchg
imulb
sbb
xor
