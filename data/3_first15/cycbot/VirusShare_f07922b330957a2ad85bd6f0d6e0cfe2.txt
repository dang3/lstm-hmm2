adc
rorb
movsb
add
add
jo
daa
rolb
push
add
push
sbb
cmpl
rcl
add
add
mov
cmc
mov
inc
add
xchg
into
fsubr
in
enter
add
add
dec
mov
outsb
mov
mov
jns
fistl
add
jecxz
add
icebp
das
pusha
add
fistps
and
add
mov
add
add
add
aas
or
loopne
mov
lds
add
add
add
mov
fs
dec
std
lcall
fcoms
cld
mov
cmpsl
repnz
dec
mov
pop
daa
sbb
incb
add
mov
push
add
or
add
cmc
adc
xchg
mov
jp
loope
add
sub
iret
les
insl
add
mov
and
mov
jmp
mov
jge
adc
jne
insl
enter
insb
xchg
and
add
mov
rolb
push
push
fstpt
xchg
push
add
data16
outsl
and
mov
lcall
xrelease
dec
or
popl
mov
gs
push
add
xlat
cmp
fnstenv
jnp
cli
ss
add
fimuls
mov
outsb
jle
add
sarl
daa
add
jp
add
mov
add
add
xchg
call
add
add
mov
xorl
test
add
outsl
jecxz
mov
cmpsl
out
test
in
adcl
add
nop
add
mov
add
add
stc
jae
imul
imull
inc
cmpsb
add
cwtl
movsbl
dec
lods
fldl
into
xchg
add
sbb
stc
in
les
lds
in
add
data16
add
cmp
add
pop
add
mov
orl
push
mov
movl
add
add
add
sub
mov
rolb
clc
fwait
pop
xor
in
mov
insl
stos
cli
pop
inc
add
testb
inc
add
decb
xor
xchg
pop
aad
jl
add
mov
add
add
pusha
add
gs
and
mov
je
mov
mov
pushf
div
test
jb
test
jl
add
mov
mov
mov
adc
js
mov
sub
lret
pusha
add
mov
add
pop
sarl
add
loopne
insl
and
mov
add
pop
fists
loop
repz
lds
mov
mov
push
data16
cmp
sbb
add
add
cld
jle
fldcw
add
cmc
or
push
js
add
insl
rolb
into
push
add
or
fsubr
mov
add
imul
lea
shl
add
scas
xchg
adc
mov
cmp
dec
mov
pop
stos
rep
clc
xor
hlt
add
pop
rolb
and
jle
popa
adc
scas
movsl
xor
inc
negl
faddl
add
incl
fistps
add
fiaddl
cli
fidivrs
pop
lahf
add
mov
cmovae
xor
lea
add
insl
and
loopne
fs
or
mov
mov
add
leave
mov
xor
sbb
cmp
icebp
mov
add
jge
xor
adc
push
daa
cmp
mov
lds
cmpsb
add
add
add
push
pusha
add
aad
add
les
mov
push
add
lock
add
adc
add
lret
test
dec
stos
clc
xlat
pop
cmp
test
adc
add
into
xchg
add
push
int
movaps
mov
and
sub
sbb
add
push
in
add
mov
push
add
out
loop
imul
dec
das
dec
xchg
mov
mov
mov
add
cli
mov
mov
add
add
fdivrp
dec
aad
or
cmp
stc
movb
mov
add
jl
add
pop
pushf
ret
add
cmp
mov
pop
pop
jp
add
and
add
movsl
push
add
adc
sub
xchg
jge
ret
aas
jnp
and
int
lret
xchg
jmp
sub
cmp
fucomip
scas
sbb
add
loopne
mov
loopne
mov
xchg
sbb
mov
inc
int
bound
mov
add
jae
out
jbe
in
stc
ljmp
xor
sub
fldl
roll
js
mov
add
sbb
movb
loope
and
pushf
add
add
cwtl
mov
pushf
leave
daa
addb
xchg
mov
add
mov
in
dec
cmp
mov
mov
jl
test
cmp
sub
push
mov
xor
push
add
lret
push
add
push
add
sbb
das
je
and
rolb
fwait
pop
or
mov
add
mov
adc
pop
stos
xor
or
testb
out
add
mov
inc
aam
and
add
incl
movb
inc
add
les
cwtl
add
add
jmp
inc
add
das
mov
add
inc
dec
in
or
add
push
add
iret
rolb
xchg
out
or
cli
pop
mov
push
add
rolb
mov
mov
add
lret
add
fldl
call
push
add
test
adc
mov
xchg
adc
xor
pop
pop
daa
movsb
add
in
cmc
scas
add
add
dec
pushf
sar
pslld
mov
add
add
aad
xor
adc
cmp
rolb
rcr
add
in
inc
repnz
push
pop
mov
dec
and
mov
imul
fsubrs
add
and
mov
dec
mov
add
mov
add
pop
jne
jle
add
mov
inc
push
add
sub
xor
je
mov
std
popf
mov
push
add
adc
dec
dec
rolb
push
add
add
mov
icebp
jle
add
and
mov
push
add
mov
inc
add
stos
addl
aad
dec
mov
push
scas
rolb
or
mov
xchg
outsb
adc
out
les
rolb
or
mov
testb
add
ljmp
adc
add
push
pop
jo
mov
add
daa
add
or
stc
push
add
insb
jl
sub
add
add
add
mov
test
addb
add
clc
pop
jp
add
add
sub
add
sbb
add
addb
add
mov
rolb
outsb
pop
ds
jl
aam
mov
pop
imul
add
movsb
add
pop
nop
add
add
mov
mov
and
sub
adc
xlat
add
mov
add
imul
push
add
cmp
popa
lahf
lock
jmp
aam
cwtl
cli
sbb
imul
dec
add
fstps
dec
push
add
das
subl
data16
inc
add
adc
mov
lcall
rolb
dec
jns
negl
pop
mov
lods
or
xchg
cmp
ficoml
add
lahf
pop
mov
cltd
sub
jp
repnz
in
xchg
mov
addb
add
xchg
add
out
fdiv
add
cli
insl
add
ret
nop
add
add
inc
add
add
add
push
pop
enter
jo
dec
daa
das
out
divl
add
fdivr
sahf
pop
mov
enter
xor
pop
rolb
ljmp
aam
sub
repnz
cmp
cltd
fadds
mov
add
push
add
or
xchg
into
repnz
add
or
add
pop
lods
lret
mov
loope
inc
add
daa
jb
mov
lahf
aaa
push
jl
nop
add
addr16
addl
mov
adc
add
dec
call
pop
jle
add
add
add
in
add
or
xchg
mov
stos
push
add
cmpsl
inc
add
pop
testb
inc
add
repnz
pop
cmpsl
bound
mov
dec
jb
add
mov
push
mov
add
sbb
int3
stc
dec
mov
jnp
cs
pop
in
cli
add
xchg
in
jecxz
add
add
mov
jg
sub
addb
push
add
mov
or
add
jne
mov
jne
loopne
sub
mov
add
cmp
add
cmp
push
add
add
add
add
das
push
xchg
xor
ds
add
mov
mov
add
mov
adc
imul
sub
add
and
mov
add
mov
aas
addb
add
sbb
add
add
es
mov
mov
push
add
divl
mov
test
add
add
add
add
add
add
mov
cmp
push
ror
fmulp
fstpt
add
scas
fwait
dec
fnsave
pop
shll
add
test
imul
fs
add
mov
fs
in
xchg
add
add
or
inc
add
add
iret
dec
sbb
pusha
add
add
xbegin
mov
dec
xchg
imul
stc
push
add
or
ds
add
add
mov
or
enter
add
dec
mov
pop
aas
dec
insb
idivl
add
push
add
add
xchg
inc
pop
pop
or
add
push
xchg
mov
add
add
das
push
movsb
add
add
push
loope
inc
add
mov
and
div
ss
cmp
add
mov
jne
rolb
mov
cmpsl
cmp
leave
out
pop
inc
add
add
add
add
add
sub
insl
mov
mov
sub
pop
loope
add
jl
adc
mov
std
adc
or
add
mov
add
dec
bound
mov
add
xchg
in
mov
testb
notl
je
rcl
push
add
mov
test
add
add
sbb
add
in
inc
lret
xlat
xor
jecxz
out
repnz
add
fimull
adc
add
pop
insl
mov
insb
mov
or
sbb
dec
shll
sbb
sbb
add
call
adc
add
mov
add
add
add
sub
jl
add
add
mov
rolb
add
mov
movsl
sbb
add
mov
clc
pop
fstps
incb
add
cltd
add
sub
stc
aas
loope
rorl
add
cmp
mov
add
mov
jno
data16
jo
movb
add
add
add
add
inc
push
add
add
add
jbe
add
pop
pop
repnz
fisubrs
jns
movsb
add
data16
lret
mov
mov
cli
mov
or
add
add
stc
mov
dec
mov
mov
stos
cli
in
add
scas
iret
std
pop
out
icebp
test
mov
movb
add
mov
cld
adc
jg
xchg
add
xor
sbb
dec
and
mov
nop
add
push
add
push
add
ljmp
add
popf
add
sti
pop
sub
in
sbb
insl
ret
add
out
add
cli
jns
add
push
add
cltd
repnz
scas
cmpl
movb
add
push
adc
ljmp
mov
sub
add
mov
mov
push
push
mov
inc
jl
push
ficompl
push
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
mov
push
pop
push
push
jmp
jmp
add
add
xchg
test
imul
add
loop
jnp
add
lods
xorl
adcl
cmp
call
add
mov
pushf
push
and
mov
sarl
add
mov
jl
cmp
push
add
rcll
fptan
add
xchg
inc
mov
jbe
in
adc
pop
jbe
adc
push
add
fbld
negl
sub
mov
add
push
test
jo
repnz
arpl
roll
jg
adc
mov
sbb
js
fdiv
add
sub
adc
jns
dec
lea
add
add
cmp
add
pop
push
add
xor
in
fadds
jecxz
incb
stos
push
add
dec
arpl
add
add
xor
xlat
sahf
je
les
rolb
mov
add
int3
in
mov
daa
sub
add
xor
add
int
push
add
add
mov
and
add
movsl
add
mov
adc
pop
cwtl
jo
xchg
add
add
add
mov
add
add
ljmp
jno
out
cmp
mov
sub
ret
add
jecxz
push
mov
add
in
test
add
add
lcall
add
dec
jno
pop
push
jecxz
push
xor
cmp
fucomi
jmp
add
add
add
rcrl
add
add
add
push
add
addb
adc
add
cmp
push
add
add
inc
dec
sti
add
int3
outsl
loop
dec
out
mov
adc
fmuls
stos
out
mov
jne
pop
cmp
mov
test
adc
dec
jnp
mov
mov
add
mov
stc
pop
xor
pop
jl
shll
push
add
add
stos
fsts
add
mov
or
adc
jge
mov
in
imul
mov
pop
cmp
xor
je
pop
rolb
out
mov
add
out
jg
add
je
cltd
push
sub
addr16
into
mov
add
out
roll
add
std
cmpsb
add
stos
mov
jp
add
add
and
fmuls
test
add
mov
add
fsub
dec
mov
mov
aam
rcrl
inc
add
pushf
or
add
add
jle
aam
sbb
sahf
lcall
add
lret
mov
pop
sbb
xchg
add
xchg
mov
add
dec
pusha
add
add
push
rolb
dec
and
pop
repnz
lods
dec
lock
pop
mov
or
popf
iret
loop,pn
jb
mov
push
add
outsb
sub
iret
mov
loopne
and
add
scas
imul
add
add
add
add
out
push
cmp
mov
ja
inc
add
int
add
repnz
pusha
add
add
pop
jmp
add
add
stc
mov
hlt
add
sub
mov
jp
ja
jnp
add
add
or
cmp
iret
ja
cmp
sub
cmpsl
ljmp
mov
xchg
rolb
orl
add
ret
xor
push
add
cmp
add
pop
jle
xchg
add
sbbl
mov
add
data16
add
jg
lahf
sahf
jno
mov
mov
sbb
mov
fwait
pop
cltd
adc
add
mov
in
lar
mov
push
xchg
mov
add
or
lock
add
add
or
lret
or
add
outsb
add
pop
cmp
add
aad
jp
add
and
shll
add
loopne
mov
out
mov
dec
sti
cmp
inc
mov
add
add
mov
push
cmpsb
add
add
add
in
cmp
icebp
pop
call
add
inc
scas
lret
dec
push
push
add
int3
sub
push
add
mov
repz
test
ds
shll
js
add
add
add
lods
movsb
add
cmp
fstps
dec
lahf
lods
cmp
push
add
outsl
cltd
stos
dec
add
sub
arpl
lds
mov
dec
std
xor
add
pop
cmp
out
add
add
sub
stos
adc
xchg
mov
sarl
gs
and
lret
dec
in
sub
push
add
mov
add
xchg
adc
sub
icebp
push
les
call
push
jecxz
add
loopne
mov
mov
loop
lock
pop
mov
cmc
jp
ds
ja
add
jmp
imul
xchg
xchg
mov
add
jl
add
xchg
adc
ret
sub
add
push
insl
popa
test
movb
fcoms
sbb
inc
add
xor
aad
and
mov
inc
test
mov
sahf
jns
add
xlat
sbb
or
sbb
icebp
cmp
pop
inc
add
mov
fldcw
out
jno
pushf
dec
outsb
push
add
je
lahf
repnz
add
outsl
dec
dec
dec
dec
hlt
add
push
mov
iret
jb
pushf
mov
adc
mov
insb
scas
adc
or
mov
adc
add
lock
call
add
popf
imul
cmp
aad
add
aaa
outsb
mov
jbe
les
push
scas
ljmp
imul
add
mov
repnz
dec
addb
xor
mov
out
ret
fcompl
dec
jno
arpl
add
pushf
dec
sbb
insl
inc
add
add
xor
lods
adc
add
pop
dec
jecxz
dec
jo
mov
add
xchg
dec
mov
roll
mov
xchg
add
add
sbb
icebp
mov
add
loop
das
jmp
add
mov
jns
lods
jmp
pop
sbb
add
xchg
jne
xchg
add
add
add
mov
add
add
jle
and
jecxz
stc
jnp
pop
pushl
test
inc
jmp
mov
cmpsb
add
out
xor
dec
sbb
stc
dec
lcall
stc
mov
add
add
icebp
repz
inc
add
add
add
jmp
test
mov
add
jo
push
add
lahf
jno
mov
xchg
ds
mov
add
add
add
rcrl
inc
add
daa
jle,pn
lret
mov
ficompl
sub
dec
jge
add
in
mov
mov
xchg
cmp
cmp
pop
xlat
cmp
dec
fwait
push
inc
add
mov
add
sub
add
add
xor
movsl
sub
loop
or
push
jle
aam
mov
jo
add
into
mov
fwait
jge
jns
fxam
dec
sub
sbb
je
mov
int
adc
add
push
movsb
add
cvttps2pi
add
mov
movsb
add
mov
add
out
cmpsl
add
mov
xchg
adc
outsl
sbb
fwait
xorl
add
jp
add
mov
sbbl
add
mov
sub
add
add
pusha
add
add
add
jno
jnp
sbb
pusha
add
loop
xchg
sti
loop
push
add
mov
int
add
repz
push
leave
stos
jecxz
aaa
mov
jbe
insl
pop
data16
add
add
mov
xor
fisubs
fwait
push
add
fs
mov
rolb
cli
jg
or
cmpsb
add
mov
sub
jbe
sbb
add
test
add
mov
add
push
add
add
and
mov
lcall
add
lcall
add
mov
add
add
add
add
js
add
mov
add
shll
add
stos
cld
repz
dec
mov
lea
subl
movb
sbb
add
inc
push
jae
cs
adc
inc
add
rolb
jl
push
fldenv
mov
cmp
roll
add
add
push
sbb
add
sbb
add
enter
add
jbe
xor
add
jno
loopne
inc
add
pop
dec
in
insb
cmp
call
add
fcom
add
add
insb
pop
jnp
add
add
add
add
xchg
add
fadds
add
add
add
add
add
add
inc
add
orl
xor
in
push
arpl
jge
add
addb
add
add
fsubs
lcall
mov
pop
icebp
lret
fsubl
add
cmp
insb
lock
jl
mov
rcll
enter
add
cmp
stos
jo
add
bound
mov
jp
in
xchg
add
push
xchg
je
or
outsl
mov
in
and
mov
mov
push
inc
add
sahf
push
jecxz
in
xchg
add
add
jne
ss
test
out
aam
jle
bound
mov
xchg
jbe
add
ljmp
lcall
lahf
jae
icebp
push
add
rolb
mov
aad
mov
add
add
fucomip
mov
int3
out
mov
mov
add
push
dec
out
and
mov
iret
fstl
das
addb
add
jb
leave
rolb
mov
cmpsl
jae
add
mov
hlt
add
and
mov
das
xchg
add
add
xor
add
add
mov
movl
push
add
push
scas
mov
loope
lret
call
lret
insb
out
jbe
iret
add
add
lea
add
leave
aad
adc
inc
dec
adc
jne
pop
pop
inc
add
in
aas
pop
mov
mov
add
das
pop
xor
fnstenv
add
popa
cmp
add
call
add
mov
ljmp
add
cld
testb
mov
hlt
add
in
repz
hlt
add
add
cmp
add
add
inc
add
adc
dec
ret
adc
std
cmp
sub
inc
add
add
fsts
add
aas
lock
mov
xchg
xor
cmp
add
add
add
add
mov
addb
mov
add
repnz
dec
sbb
add
clc
xchg
xchg
cmp
sbb
add
push
jg
jg
jae
add
add
cmc
push
add
push
push
insb
fstp
xchg
add
add
int
or
add
mov
add
add
imul
fldcw
addb
mov
mov
inc
std
adc
test
xchg
sbb
frstor
xchg
add
inc
out
adc
jecxz
xchg
je
add
mov
add
add
fwait
movb
add
aas
nop
add
pop
int
sub
add
add
mov
add
fsubl
movsb
add
add
lea
add
xchg
add
in
dec
pop
clc
add
mov
dec
int3
jbe
or
mov
lods
cmp
add
lret
add
add
lock
imul
xchg
mov
inc
add
sub
stos
lcall
xchg
push
loopne
mov
insb
mov
add
lahf
pop
out
sbb
add
inc
add
xchg
imul
cmp
and
adc
sub
jmp
data16
insl
jp
ficoml
aam
sub
jl
add
add
push
add
mov
cmp
mov
and
add
or
add
in
mov
sbb
pop
jne
add
inc
lret
imul
ja,pn
push
stos
xchg
cs
xor
push
add
push
add
stc
and
mov
mov
movsb
add
add
jmp
popa
shll
insb
lcall
test
mov
jge
add
add
add
and
sahf
cmp
add
add
mov
dec
mov
and
add
dec
cmp
and
jecxz
push
rolb
popf
movsb
add
fbld
movsb
add
add
cmp
cs
inc
stos
aam
fidivs
jo
xchg
enter
jecxz
add
mov
adc
mov
add
ds
or
add
add
xchg
add
add
mov
out
in
cmp
add
add
add
fwait
add
mov
add
addb
add
adc
imul
add
add
sbb
mov
lock
add
add
lcall
xchg
adc
add
add
add
fcmovbe
add
mov
inc
xchg
add
push
xchg
push
add
add
add
cwtl
mov
mov
insl
incl
daa
enter
add
mov
add
or
add
add
les
mov
add
add
dec
enter
add
outsb
cld
xor
mov
and
add
add
xchg
add
stc
mov
add
pmullw
call
mov
sbb
pop
sbb
push
fdivp
push
mov
add
add
add
or
add
mov
dec
fwait
enter
addb
xchg
cmp
xchg
add
aam
mov
push
add
mov
aaa
orl
inc
add
cmc
mov
mov
sbb
add
pop
push
push
jmp
lods
in
fwait
addb
pop
mov
xchg
mov
lods
sbb
add
call
jl
outsl
cmp
xor
and
add
xor
xor
mov
pop
nop
add
add
dec
iret
xchg
outsl
clc
dec
jb
push
add
xchg
xor
arpl
fstpt
add
mov
in
mov
add
jae
aam
mov
add
inc
add
cs
bswap
mov
mov
jge
leave
mov
add
dec
sub
xchg
mov
sub
hlt
add
mov
jnp
popf
and
mov
out
ds
add
loopne
mov
test
add
pop
sbb
aaa
fs
sbb
pop
xor
test
add
add
aam
movsb
add
add
mov
add
add
mov
pop
iret
in
lea
shll
sub
push
fadds
add
add
sbb
xchg
cmp
add
out
mov
mov
add
rdtsc
loope
add
repz
leave
xor
sbb
pop
jo
fimuls
lods
jmp
add
loope
test
adc
mov
add
stos
stos
jae
fcmovnb
add
stos
mov
pop
xchg
add
xor
add
add
cmc
pusha
add
ret
in
das
cmp
add
add
add
add
ret
add
adc
sbb
mov
sbb
add
dec
pop
mov
inc
add
movsl
push
add
mov
pop
popf
sbb
add
add
out
jno
add
add
inc
test
add
add
xchg
add
mull
insb
pop
sbb
adc
popl
or
add
fadds
data16
dec
lcall
add
movb
data16
daa
push
add
mov
push
add
out
into
shll
icebp
mov
add
dec
mov
add
add
add
and
inc
insl
pushf
sub
stc
push
outsb
jo
popl
add
call
lcall
add
push
add
cltd
out
test
jns
popf
xchg
xor
push
pushf
jno
inc
add
test
pusha
add
add
push
or
push
add
mov
add
jno,pn
or
add
add
add
mov
mov
xchg
sarl
addb
pop
scas
clc
imul
shl
mov
add
dec
sahf
daa
add
in
mov
push
lcall
lahf
ret
fcoml
add
inc
cwtl
ret
push
outsl
adc
clc
add
lods
outsb
add
add
dec
adc
lea
add
sub
fisubl
add
and
or
lret
jae
add
inc
or
inc
add
rolb
ljmp
xor
add
cmp
cmp
inc
clc
mov
add
out
mov
jp
add
xor
mov
jp
cs
test
push
aas
popf
push
jnp
jbe
xchg
add
sub
xorl
push
add
push
ljmp
mov
sub
and
cmp
jne
ja
add
add
and
mov
jl
push
add
mov
add
mov
popa
dec
jge
mov
dec
enter
dec
inc
mov
add
mov
mov
add
cmp
add
xor
add
add
xchg
push
add
add
jb
mov
or
das
aam
pushf
push
cmpsb
add
adc
or
add
sbb
repz
add
mov
jo
js
add
pop
inc
add
cld
jmp
dec
mov
sti
je
daa
dec
data16
packssdw
dec
hlt
add
add
sbb
in
xchg
inc
jno
or
lock
aam
popa
testb
mov
divl
mov
lds
mov
xchg
add
push
fiadds
mov
add
imul
push
add
push
fsubrl
and
mov
add
out
out
add
lods
jle
mov
add
je
mov
jg
scas
sub
add
sub
out
or
add
dec
xchg
int
add
sub
jecxz
jnp
xor
jle
add
pop
jnp
add
mov
mov
rolb
cmp
jnp
add
add
add
adc
add
std
movsl
and
mov
jl
mov
add
test
add
add
or
mov
mov
cmp
xor
js
add
add
jle
jle
add
sbb
sbb
int3
lock
es
out
and
mov
add
add
push
pop
xor
fisttps
pop
ss
or
scas
mov
sub
ds
xchg
scas
cmp
pop
popf
roll
sti
insl
jbe
jbe
inc
add
mov
mov
cli
push
add
lock
arpl
stc
or
xor
lret
add
add
add
fnstenv
test
add
popf
cmp
adc
push
pop
je
bound
mov
aad
add
xchg
add
add
add
push
jnp
ja
out
cmp
mov
nop
add
pop
popa
loope
sti
mov
das
jo
cmc
push
add
int3
cmpsl
aad
add
add
pop
or
ret
add
or
add
fdivs
repnz
mov
dec
add
mov
pop
aam
push
add
test
xor
add
aad
sub
test
sbb
add
call
scas
push
aas
popa
cmpsl
adc
jge
or
popa
lds
jge
push
inc
out
pop
stc
mov
xchg
add
cli
sbb
push
mov
jl
pop
inc
add
and
dec
inc
mov
inc
add
iret
addb
xchg
add
dec
testb
lock
add
mov
cmpsl
roll
rolb
ja
jmp
jge
call
xchg
add
cmp
pop
or
mov
dec
enter
add
adc
pop
dec
cmp
sbb
jne
cmp
push
add
aas
movb
adc
sub
push
testb
bound
mov
movsb
add
icebp
ficoml
add
dec
and
jb
sbb
lcall
lahf
sahf
mov
pop
lret
dec
pusha
add
cwtl
mov
addr16
cmp
loopne
push
add
sbb
popf
xchg
pop
cld
mov
add
xor
add
xchg
movsl
nop
add
inc
add
xor
jbe
test
hlt
add
imul
lods
out
cmp
lahf
pop
scas
movsb
add
mov
jne
loop
mov
in
xchg
lret
push
add
insl
xorl
rolb
addb
sahf
cmpsb
add
add
pop
cmp
jnp
add
mov
das
add
mov
cmp
mov
xor
push
adc
imul
add
js
push
movsl
popf
mov
xor
mov
mov
lods
orl
mov
mov
mov
loope
add
jae
outsl
in
sub
jle
adc
aam
lock
add
mov
in
lock
hlt
add
cli
pop
adc
add
cmpsb
add
sahf
sub
mov
add
push
add
mov
add
mov
inc
fcoml
test
lret
out
sub
add
mov
add
in
popf
dec
xchg
add
stos
jne
outsb
and
add
or
aaa
dec
ret
fcomi
or
inc
add
jecxz
add
imul
paddb
mov
add
xor
pop
mov
dec
or
jge
cmp
adc
sahf
xchg
add
in
ljmp
adc
testb
cld
cmp
push
add
add
je
push
push
add
test
pop
jp
inc
add
mov
xchg
cmpsl
mov
out
xchg
add
dec
fidivl
inc
add
mov
leave
addb
add
add
pop
scas
dec
add
mov
push
lret
mov
cli
xchg
loopne
mov
add
jns
sbb
ffree
add
add
ficoml
add
movsl
jne
add
sahf
push
add
or
dec
aad
into
mov
and
dec
nop
add
push
add
lods
jbe
or
add
and
mov
adc
pause
add
push
fistpll
add
add
das
std
lcall
add
mov
shrl
les
out
fistpl
or
add
cmp
mov
add
mov
add
imul
cmp
mov
mov
in
aaa
mov
testb
add
jae
adc
out
mov
cmp
or
jmp
stos
xchg
jp
fdivrl
aam
and
mov
push
add
ret
xchg
mov
add
add
std
adc
xchg
ficomps
hlt
add
test
add
sub
add
jo
in
icebp
mov
data16
adc
outsl
adc
hlt
add
sub
sub
push
out
push
add
xchg
pop
add
mov
outsb
mov
insb
gs
xchg
mov
nop
add
sti
adc
mov
data16
dec
adc
mov
inc
add
int3
mov
or
mov
sbb
addb
dec
jle
xor
inc
fcoms
jnp
mov
das
fisttpl
cmp
sub
inc
add
clc
cmpsb
add
pusha
add
add
andl
pop
mov
cs
pop
inc
add
jae
add
push
add
jo
jmp
add
add
pop
repnz
stc
push
mov
mov
pop
in
movsb
add
aad
add
cmpl
add
test
into
push
mov
stos
loope
inc
add
ljmp
mov
add
ret
les
xor
push
add
lods
filds
cmp
add
clc
iret
or
xchg
rolb
add
pop
push
or
add
aad
mov
add
sub
adc
adc
add
sti
pop
pop
and
add
sub
add
jp
subl
add
adc
mov
jno
add
add
rolb
jp
les
lods
jle
add
push
add
add
add
cmp
cli
loopne
fwait
push
add
add
pop
sub
add
mov
imul
fldt
stos
mov
in
repz
jne
add
add
dec
leave
aam
or
xchg
lods
adc
test
add
and
lahf
cmp
arpl
imul
add
xchg
cmp
sbb
sahf
inc
xchg
add
or
sbb
dec
aas
in
cmp
xor
jns
dec
jg
dec
dec
leave
dec
cmp
cmp
adc
bound
mov
cmp
int3
aad
mov
js
push
add
add
out
adc
cs
daa
mov
cltd
push
push
add
scas
jecxz
test
sub
add
add
add
enter
movsl
popa
cmp
or
gs
out
shr
mov
jnp
mov
sbb
insb
cmpsb
add
dec
out
xchg
add
cmpl
dec
jns
add
mov
add
push
add
dec
jp
lods
lea
dec
mov
push
add
add
xor
in
cmp
add
movsl
fstpl
add
lahf
add
or
ret
data16
pushf
fldenv
sbb
fists
movsl
and
fldl
inc
aam
mov
or
addb
mov
loop
es
add
gs
sbb
adc
add
fnstsw
sub
lods
aad
add
add
inc
sbb
cmp
mov
fnstsw
test
fwait
outsl
pop
test
jle
flds
in
fildll
icebp
ljmp
or
aam
data16
jle
or
mov
add
push
add
push
rolb
mov
add
aam
xchg
add
sbb
mov
sub
adc
add
pop
stos
inc
cmp
add
jg
outsb
mov
decl
add
into
int
add
movb
sti
cltd
push
clc
sbb
add
rolb
in
mov
cwtl
imul
push
add
les
jb
ds
rolb
add
add
pop
pop
and
mov
jge
add
xor
das
or
outsl
out
inc
call
add
pop
loope
add
adc
mov
jo
pop
pop
inc
add
xchg
add
add
push
and
dec
out
inc
xchg
fidivrl
add
add
add
add
call
add
or
sahf
cmp
scas
sbb
push
add
push
add
mov
add
leave
lods
lds
xor
xor
cmp
mov
push
mov
mov
push
jbe
movsb
add
mov
mov
or
jae
add
add
cs
xor
leave
jb
mov
je
cld
mov
mov
aaa
loope
cmp
lock
jge
test
scas
fs
mov
and
jne
add
pop
ds
or
inc
pop
ja
loope
lock
add
movsl
push
add
add
mov
insb
pushf
xchg
push
add
cmpsb
add
mov
add
mov
lods
jae
hlt
add
mov
jge
out
bound
mov
leave
dec
sub
ret
pop
mov
lea
pop
rorl
jle
xchg
loop
ret
call
mov
cli
std
inc
repnz
jns
rolb
arpl
mov
add
add
enter
ja
leave
not
lock
daa
addb
xor
mov
ja
loope
stc
sub
mov
inc
add
add
xchg
insl
mov
jo
mov
add
add
add
jo
xor
push
dec
or
dec
push
add
movb
nop
add
add
add
lock
repz
add
lret
dec
jno
testb
les
push
add
mov
insl
ljmp
add
mov
or
add
push
pop
arpl
flds
cmp
adc
test
adc
testb
add
push
add
ljmp
mov
loop
fiaddl
les
inc
add
mov
insb
inc
add
dec
dec
or
xchg
cmp
ja
mov
jecxz
xor
sbb
rolb
or
add
add
pcmpgtw
xchg
pop
std
movsb
add
mov
ja
ret
inc
jge
xchg
add
das
cli
inc
add
test
pop
push
add
sub
cmp
ljmp
imul
dec
pushf
dec
push
add
in
dec
into
shrl
jne
mov
or
out
pop
inc
add
mov
ds
xchg
js
add
push
addb
jo
push
clc
mov
mov
jbe
nop
add
and
je
test
outsl
cmp
std
in
test
add
pop
addb
addb
je
lods
cltd
xor
push
imul
push
test
add
int
dec
jae
popa
mov
pop
imul
or
cmp
jbe
arpl
add
rolb
add
mov
push
add
add
or
jns
add
or
mov
push
enter
movsb
add
in
add
mov
add
add
add
xchg
mov
jo
and
cmp
ja
add
enter
icebp
outsb
je
cmpsb
add
scas
dec
add
mov
add
add
push
daa
jecxz
sub
mov
add
dec
and
mov
add
jge
movb
add
loope
dec
xchg
add
mov
imul
outsl
xchg
add
add
cld
push
add
pop
stos
test
fistps
cmp
dec
enter
inc
add
fisttps
add
stos
adc
pop
loope
and
jne
inc
add
aam
jg
pusha
add
push
add
add
add
mov
out
mov
pop
pop
xchg
add
add
pop
jae
add
aad
add
xchg
pop
in
jb
inc
jecxz
mov
testb
add
pop
rolb
lods
lret
or
add
rolb
sbbl
adc
pop
es
add
das
add
push
add
add
adc
and
mov
add
mov
xchg
popf
lods
pop
mov
rolb
mov
xor
pop
popf
ret
pop
sbb
xchg
add
add
add
add
mov
sub
pop
pop
fst
add
adc
mov
imul
add
enter
mov
mov
fwait
pop
out
inc
icebp
jb
rolb
jmp
add
add
mov
add
xchg
mov
adc
ret
sub
test
add
add
sbb
hlt
add
xor
xor
ljmp
xchg
and
mov
mov
mov
sbb
inc
add
jle
add
xchg
repnz
adc
loopne
mov
aad
pop
dec
xchg
add
add
cmc
sbb
add
in
ds
int3
inc
add
add
lods
mov
mov
loopne
dec
movsb
add
sbb
jnp
add
mov
mov
in
sub
or
mov
add
mov
or
and
add
repnz
or
testb
fidivrl
and
mov
jg
fbld
imul
add
add
add
add
imul
xchg
mov
pushf
mov
adc
jmp
add
ficompl
add
add
add
dec
pop
arpl
pop
stos
inc
add
psubusb
addb
adc
inc
add
add
out
xchg
xchg
or
add
push
add
add
test
pop
lea
add
add
cltd
mov
fstpt
shll
push
stos
or
adc
add
pop
je
imul
jge
add
imul
insb
mov
test
sbb
mov
add
add
outsb
mov
fsubp
add
mov
ljmp
cs
pop
ds
popa
push
test
sbb
add
add
inc
out
roll
add
pusha
add
add
jmp
mov
insb
sbb
push
xchg
add
addb
inc
add
sahf
push
add
daa
rolb
lock
add
jg
mov
lahf
mov
cmp
add
add
pop
push
repz
test
cs
add
in
add
mov
add
mov
mov
mov
push
cmp
add
add
test
add
gs
sbb
xchg
pop
xor
xchg
mov
insb
xchg
rolb
addb
add
neg
cmpsb
add
maskmovq
mov
add
mov
pop
cwtl
jae
or
outsb
pop
bound
mov
aam
jae
xor
popf
popf
leave
roll
cltd
mov
mov
inc
lods
roll
or
pop
fcomi
add
fldcw
imul
mov
xor
outsl
cmpsb
add
mov
dec
dec
mov
xor
xchg
jnp
adc
lahf
imul
icebp
lods
imul
push
add
jp
loop
mov
push
add
add
rol
mov
xorl
add
stos
mov
mov
add
jmp
mov
in
mov
add
into
sub
rolb
adc
rolb
add
popf
dec
add
icebp
imul
or
cli
ret
sbb
add
add
or
add
add
dec
test
addb
sbb
add
sub
add
add
add
aad
inc
add
pop
push
add
cmp
bsf
popa
mov
add
jo
xchg
lock
movb
jp
mov
dec
mov
fimuls
or
push
xor
lods
and
mov
add
push
test
ds
add
add
add
adc
mov
cli
insb
xor
cmp
dec
pop
push
enter
std
sub
mov
mov
pushf
movsl
arpl
add
ljmp
and
add
and
mov
add
add
add
jge
sbb
call
int3
mulps
jne
jno
xchg
bound
mov
push
adc
add
dec
add
mov
mov
add
inc
lea
loope
add
jae
mov
or
dec
cmp
add
cmc
lret
lock
add
pop
sbb
pop
xchg
shl
cs
out
sub
add
dec
adc
into
addb
add
sbb
inc
add
xchg
mov
mov
add
addb
sbb
jb
mov
or
es
add
add
ljmp
cs
add
leave
add
pusha
add
jge
mov
fldt
cs
add
jbe
gs
add
fwait
pusha
add
add
addb
loop
fldl
out
cmpsl
adc
mov
sub
jo
jo
add
push
or
test
pusha
add
test
xor
push
add
push
add
xor
jnp
jp
or
inc
add
cmp
add
lcall
addr16
sub
jbe
sub
cmc
and
mov
mov
add
add
stos
or
pop
aad
add
lods
cmp
std
push
mov
mov
add
inc
sub
mov
sub
add
lock
popf
mov
sti
jae
inc
and
add
mov
cs
mov
shll
stos
ret
mov
cld
inc
inc
stc
les
pop
mov
add
inc
test
add
lods
dec
dec
leave
jecxz
insb
imul
cs
add
lret
stos
dec
in
mov
add
outsl
ret
add
add
mov
mov
add
add
mov
xchg
decl
in
daa
add
jg
iret
fistps
mov
mov
pop
call
add
add
mov
add
cmpl
cmpsb
add
ret
push
add
or
add
outsl
das
adc
add
vandnps
lret
cwtl
fwait
lret
and
dec
lret
ja
stos
jge
pop
pop
add
stos
or
lret
and
mov
xor
xchg
cli
dec
cmp
and
lcall
push
add
add
scas
push
add
add
add
add
jno
add
movb
mov
lea
xchg
mov
loop
mov
fists
add
cmp
jo
and
dec
shl
testb
sub
add
add
sarl
int
jne
fisubs
add
add
adc
add
divl
add
add
add
popf
push
dec
lret
mov
fbstp
loope
ljmp
or
addb
xor
xchg
rolb
das
inc
dec
jne
mov
xor
pop
push
add
xorl
test
lock
dec
dec
sub
mov
add
notl
outsl
movsb
add
add
adc
ret
jne
add
cmp
mov
dec
dec
jg
shll
add
mov
add
sahf
inc
mov
add
add
add
jecxz
iret
orl
or
mov
mov
add
add
mov
cmp
add
add
add
stos
call
mov
jne
mov
jl
cmpsl
insb
lret
aam
sub
stos
push
mov
or
fcmove
jge
add
add
cmp
push
add
sbb
cmp
sbb
add
nop
add
xchg
cmp
leave
mov
mov
push
add
add
add
add
mov
jno
rolb
repz
mov
gs
add
push
add
mov
fldl
add
jecxz
mov
add
xchg
daa
pop
les
fwait
jbe
mov
out
in
into
addb
add
mov
addr16
add
add
add
cmp
add
add
and
mov
adc
adc
sbb
mov
add
in
sub
add
add
outsb
and
mov
jl
add
rolb
jbe
cmp
pop
push
mov
mov
les
push
add
add
lret
pushf
in
mov
das
cmp
orl
int
leave
mov
add
adc
push
add
int
add
mov
add
add
and
add
negl
sbb
xchg
add
add
xchg
mov
jg
or
add
add
sub
cmp
dec
pusha
add
dec
testb
ds
data16
adc
pop
in
bound
mov
mov
pop
in
jmp
aaa
loop
lea
mov
mov
mov
stos
loopne
jg
push
add
push
add
xlat
mov
repz
add
mov
mov
aas
jb
pop
in
fstl
and
xor
pop
out
xchg
add
mov
aas
mov
cmp
add
push
outsb
into
adc
sub
mov
or
lea
int3
dec
out
mov
imul
push
add
mov
sub
add
ljmp
icebp
push
movsl
cli
iret
stos
mov
push
push
iret
jmp
add
movb
sbb
fnstcw
add
jo
sbb
inc
add
jecxz
in
cmpl
push
inc
add
in
mov
push
add
adcl
add
adc
add
mov
jle
jl
dec
xchg
lock
add
test
cmp
cmp
add
inc
cmp
mov
add
add
lret
test
cs
ret
mov
je
dec
sbb
add
fldcw
or
outsl
cltd
in
pop
cmp
pop
lahf
sti
popa
push
add
add
mov
add
add
add
mov
jb
out
dec
addb
add
lods
out
nop
add
inc
add
cmp
add
jg
stc
jge
rolb
add
and
test
or
dec
je
filds
add
jne
mov
mov
add
push
add
cmp
add
lret
mov
mov
insl
xchg
je
out
add
movsl
mov
les
hlt
add
dec
cwtl
push
and
add
ret
aam
jbe
push
test
mov
jmp
out
dec
cmpsl
sti
mov
mov
rolb
imul
iret
aas
int3
xchg
test
push
add
push
int
stos
pop
mov
add
mov
mov
sub
push
aam
push
add
icebp
lahf
jne
lahf
das
cmpsl
cmp
cmc
xor
sub
add
cmp
mov
jmp
mov
add
inc
or
adc
mov
fcoml
mov
inc
add
add
xlat
push
add
jge
add
mov
xchg
lods
bound
mov
push
in
jecxz
test
popf
out
pop
mov
daa
loop
std
lret
jno
ret
inc
test
dec
outsl
leave
bound
mov
mov
add
std
mov
and
ret
dec
cli
outsl
mov
add
add
add
add
bound
mov
or
add
add
add
sub
jmp
out
in
add
add
add
aaa
dec
jne
add
jnp
outsl
or
sub
mov
add
mov
add
add
sbb
add
inc
add
add
and
add
addb
stos
in
jnp
add
fstps
mov
pop
sub
cld
ret
and
mov
mov
lret
jle
test
inc
add
xor
sti
leave
into
mov
add
scas
out
js
pop
and
mov
cmpsb
add
int
lcall
imul
inc
add
dec
adc
mov
jns
insl
ffree
add
xor
fists
mov
fistpl
push
insb
mov
cld
rep
jbe
inc
add
jmp
ja
test
lods
sub
add
add
add
push
mov
xchg
mov
add
add
push
inc
inc
add
adc
pop
cmp
mov
incl
adc
push
add
fwait
jl
add
sub
mov
add
popa
sbb
adc
jnp
into
cmpsb
add
addb
dec
pusha
add
xchg
in
inc
add
bound
mov
add
xchg
add
out
lret
lahf
fwait
std
pop
movb
add
cmp
sub
inc
add
jl
add
clc
sub
dec
pop
or
inc
mov
mov
hlt
add
add
cmpsb
add
add
bound
mov
mov
mov
add
jl
popl
mov
mov
add
fdiv
add
mov
or
adc
jne
loop
mov
pusha
add
add
add
xchg
leave
jge
cltd
das
xchg
xchg
add
mov
fdivrl
add
ret
popf
ret
mov
or
add
add
mov
push
add
repnz
sbb
add
out
test
push
add
cmp
add
pop
rcrl
add
shll
add
insl
movsb
add
into
fdivp
mov
xchg
mov
add
mov
int
mov
add
or
mov
pop
addb
adcl
xchg
adc
xchg
mov
mov
add
pop
and
mov
popf
in
movl
sbb
add
add
inc
add
lods
inc
mov
add
jp
mov
cltd
das
push
ds
into
or
test
add
pop
adc
arpl
call
push
add
and
dec
fistps
or
add
push
add
int3
inc
add
add
add
add
add
outsl
out
push
pop
mov
mov
or
xchg
sub
je
movsb
add
orl
lods
jns
mov
cmp
lret
das
cmp
mov
add
push
add
mov
mov
shrl
add
add
add
sbb
outsl
jns
jne
cld
inc
int3
mov
aad
add
leave
mov
rolb
mov
pushf
bound
mov
mov
stc
add
in
add
add
jmp
popf
pextrw
jbe
mov
rcll
clc
lods
xchg
stos
cmp
add
jmp
stos
outsl
dec
push
add
cmp
add
pop
pop
add
mov
in
push
add
movb
and
loop
pop
out
and
mov
add
mov
add
pop
outsl
mov
mov
jl
push
add
dec
sbbl
or
xchg
into
jmp
add
pop
roll
lea
sahf
xchg
add
mov
out
push
call
xorl
ss
test
test
imul
jl
dec
fldl
add
mov
mov
add
add
test
test
add
jae
push
or
sbb
cmp
stos
cmp
imul
add
imul
loop
js
add
add
mov
add
mov
mov
test
pop
xor
shrl
test
adc
arpl
and
in
push
stos
inc
in
inc
int
insb
dec
mov
fwait
mov
sbb
sahf
adc
add
add
mov
sbb
xchg
insb
xor
sbb
add
mov
mov
sub
dec
jle
add
add
add
add
add
mov
add
pop
icebp
mov
adc
flds
rolb
add
add
nop
add
push
lcall
add
jns
dec
outsb
cs
add
imul
mov
test
adc
cmp
les
xchg
or
addb
add
mov
xor
mov
add
xchg
lcall
add
add
xor
sbb
shr
stos
stc
xor
sti
or
push
add
add
cmp
cmp
fnstcw
pop
mov
add
lret
rolb
ficoml
adc
cmp
nop
add
add
pop
cs
xchg
mov
xchg
js
test
mov
push
add
fmuls
out
mov
or
gs
jo
mov
lods
adc
outsb
movsl
in
iret
mov
add
loopne
xchg
add
mov
add
push
mov
mov
incb
cltd
and
add
in
lea
clc
movsb
add
ja
add
mov
add
add
shll
aam
lahf
pop
cltd
cmpsb
add
mov
icebp
mov
and
rolb
or
pop
call
add
rolb
inc
sti
dec
push
dec
adc
pushf
mov
gs
cli
outsl
dec
add
mov
lods
cwtl
enter
loopne
movsl
aaa
aam
fcmovb
jecxz
mov
iret
adc
cmp
add
add
add
add
mov
adc
jmp
testb
jge
add
add
out
add
aaa
jno
stc
lds
icebp
add
shrl
fidivrl
adc
leave
sarl
inc
add
add
sub
fmull
add
std
jge
push
add
or
push
add
push
ds
scas
jns
pop
lock
pop
iret
out
push
lret
dec
popa
std
add
mov
daa
bound
mov
data16
cmp
mov
inc
and
xor
ja
popf
mov
push
add
add
add
adc
jle
xchg
ret
xchg
add
pop
scas
or
push
add
leave
sbb
add
add
shl
dec
sbb
add
inc
add
add
fcompl
and
mov
or
add
mov
mov
xlat
rcll
jae
cmc
les
adc
sub
dec
mov
xchg
fwait
les
jp
cmpl
lahf
iret
jecxz
add
lret
sbb
inc
add
leave
jp
mov
fwait
lahf
ja
dec
outsb
orl
loop
mov
lds
add
mov
add
adc
std
push
add
jb
les
hlt
add
xchg
add
sbb
xchg
add
add
add
mov
xlat
lcall
xchg
cld
fwait
add
mov
aaa
out
xchg
add
add
orl
in
add
add
mov
xchg
add
pop
ljmp
mov
jp
add
sub
add
in
pop
repz
inc
add
inc
scas
jl
cmc
in
mov
clc
out
pop
int3
add
cmpsl
into
lds
add
inc
add
push
add
pop
sbb
aaa
cmp
adc
mov
js
or
push
add
rolb
add
mov
cmp
add
in
add
pop
push
or
lret
or
das
ret
dec
jle
push
add
out
add
and
mov
dec
int
mov
xchg
sbb
and
add
xchg
add
dec
rolb
les
dec
dec
sub
out
add
add
inc
add
add
add
sti
cld
mov
in
scas
push
in
shl
push
add
in
mov
add
push
add
cld
aas
mov
jno
cmp
jnp
add
aaa
fadds
dec
and
pop
cltd
adc
add
loope
cmpsl
adc
cld
out
add
mov
in
cmp
je
sub
push
dec
lods
icebp
sti
inc
js
jnp
add
std
xchg
add
add
out
loopne
stc
sbb
mov
ljmp
add
outsb
push
push
pop
dec
popa
insl
mov
ljmp
mov
push
mov
mov
insl
add
mov
pushf
das
addb
add
jge
dec
mov
data16
xor
imul
fstpl
mov
mov
sahf
push
icebp
add
mov
fcoms
sub
into
sub
add
add
dec
int
mov
fnstcw
mov
imul
mov
add
add
lahf
cmp
incb
lret
mov
test
out
lock
add
add
add
mov
push
inc
push
bound
mov
fimuls
add
mov
add
js
add
add
sbb
cmp
add
add
iret
out
arpl
jp
push
add
pushf
and
mov
xor
or
add
lret
aaa
stos
fdivl
scas
aaa
orl
sub
fildl
push
add
aam
addb
js,pt
push
add
loope
stos
xor
xchg
inc
add
pop
les
std
xchg
ljmp
ja
stos
insb
ficoms
mov
xchg
jno
jnp
cmp
stos
in
std
jle
jns
test
lds
clc
or
push
loopne
dec
pop
fsubrl
sbb
push
test
add
xchg
push
mov
mov
imul
add
mov
loop
ficompl
das
xchg
pop
js
ret
add
mov
stc
call
add
mov
test
add
dec
pushf
push
mov
inc
add
add
fsubr
std
jnp
inc
clc
xchg
movsl
mov
jns
push
add
and
mov
rcll
sub
add
add
outsl
nop
add
sub
inc
add
cmp
mov
add
testb
add
dec
ret
fnsave
xchg
inc
arpl
mov
add
test
inc
add
rolb
mov
adc
and
dec
movsb
add
add
sbb
scas
and
mov
fwait
bound
mov
add
add
pop
and
mov
jns
icebp
addb
cmpsb
add
ret
add
mov
fiadds
mov
add
addb
insb
ljmp
mov
bound
mov
add
dec
pop
fcomps
mov
dec
sbb
mov
pop
leave
xor
add
add
movsb
add
test
and
pushf
in
sqrtps
add
imul
mov
add
mov
push
add
aad
sbb
nop
add
and
iret
ret
xor
mov
out
imul
mov
add
add
in
mov
pusha
add
icebp
outsl
rolb
js
and
add
aaa
xchg
and
adc
pop
push
into
push
mov
or
inc
in
daa
outsb
and
mov
add
sbb
and
inc
add
sub
add
xor
ss
sub
in
nop
add
outsl
out
outsl
out
push
add
mov
add
mov
inc
add
add
das
in
imul
add
jb
movsl
imul
xchg
sahf
pushf
pop
adc
xor
pop
dec
and
add
push
inc
jne
xchg
loopne
rolb
mov
test
test
adc
in
out
add
add
add
sbb
adc
add
and
mov
jns
add
mov
jge
lock
cmp
repnz
mov
jbe
or
insl
sti
into
enter
adc
add
pop
leave
lcall
add
add
scas
dec
dec
and
js
add
scas
mov
fsubrs
add
adc
or
clc
pop
leave
das
movsb
add
xchg
add
mov
add
add
add
mov
push
add
push
add
add
mov
call
int3
repnz
mov
add
mov
repnz
repz
inc
pusha
add
add
icebp
cmp
add
movsl
jmp
mov
add
mov
mov
sub
ja
pop
lahf
adc
add
lock
pop
and
movsb
add
adc
add
mov
lock
jb
mov
add
adc
mov
jp
xor
mov
add
jo
cmpsl
ficomps
add
sub
xor
js
pop
pop
or
mov
add
fstpt
cs
lcall
stc
inc
mov
add
add
add
push
add
sti
push
hlt
add
into
rcll
mov
idivl
add
cmc
jp
mov
cmp
repnz
jp
pop
push
add
pop
sub
and
add
sub
add
add
mull
xorl
fbstp
add
cs
mov
add
add
add
cmp
add
xor
add
loope
sub
add
cmp
push
sub
ret
pushf
xchg
add
add
pop
daa
dec
mov
add
imul
fstps
adc
movsl
sub
mov
ja
mov
mov
xchg
arpl
in
aaa
mov
addr16
fsubs
adc
mov
xchg
movsl
fildl
sub
fwait
push
xchg
loopne
rolb
lahf
vunpckhps
add
call
add
jne
inc
add
hlt
add
sub
add
mov
sti
push
add
add
add
outsb
inc
add
nop
add
cli
clc
mov
ljmp
add
mov
cli
jmp
mov
push
adc
mov
add
pusha
add
jne
cmp
inc
add
add
push
add
add
pop
rolb
xlat
leave
cld
dec
imul
int
mov
sub
pop
test
add
xchg
add
add
lods
jg
add
add
push
fldl
add
add
add
rolb
pop
test
add
mov
hlt
add
mov
sub
inc
push
hlt
add
jl
mov
in
dec
sbb
add
fnstenv
add
push
adc
push
mov
ret
add
outsb
sub
add
cmp
test
xchg
ja
ss
add
pop
imul
mov
mov
repz
xchg
lods
int
call
mov
xchg
xchg
pop
cmp
add
push
add
add
pop
lahf
cmpsl
dec
ret
iret
je
add
rolb
add
add
and
jbe
data16
and
jae
stc
vminss
pop
bound
mov
add
rcll
mov
mov
mov
add
lea
dec
int
add
or
add
sti
xchg
sbb
mov
addl
xor
add
mov
sti
jns
aas
or
xor
fwait
mov
icebp
daa
jg
pushf
sti
stc
rolb
xchg
add
lock
sbb
add
loop
daa
mov
mov
in
pop
dec
sti
psubq
push
addr16
orl
lods
jl
inc
add
jecxz
iret
sub
mov
pop
mov
or
jmp
add
mov
add
sbb
icebp
dec
lea
int
xchg
add
movsb
add
outsl
fcoml
outsb
inc
add
jns
or
cmpsl
call
and
fmuls
rolb
add
mov
add
cs
add
inc
push
imul
outsl
rcr
rolb
push
push
cmp
fs
push
not
add
mov
push
dec
outsl
and
mov
shl
adc
and
inc
jne
push
cmp
dec
xor
out
dec
xchg
add
cmp
xchg
add
xchg
mov
add
out
mov
sbb
add
movsb
add
mov
dec
add
mov
add
fisttpl
dec
mov
add
add
mov
aaa
fxch
inc
jns
add
out
push
add
add
and
sbb
cld
push
ret
out
inc
in
mov
add
push
les
and
jne
add
rcrl
inc
add
xor
mov
jge
pushf
mov
inc
jb
sub
add
xchg
outsb
pop
lds
stc
mov
fcompl
popa
xor
and
add
add
dec
mov
daa
pop
fcoms
add
bound
mov
popa
das
push
add
dec
sub
outsb
pop
lods
mov
fs
std
rcll
insl
mov
inc
add
jo
daa
mov
jae
xchg
mov
pop
xchg
add
jno
lds
lcall
mov
pop
std
jae
sbb
add
out
cmp
subl
add
add
adc
popf
pcmpgtd
ret
add
fdivrl
sbb
sbb
jnp
add
lret
add
xor
add
movb
call
xor
adc
xchg
rolb
add
subl
sahf
mov
hlt
add
add
outsl
mov
sub
mov
add
sbb
dec
stos
lahf
in
push
jmp
add
popa
das
int
dec
jne
addb
add
mov
add
outsl
pop
inc
add
into
js
add
popa
aas
pop
stos
cwtl
push
mov
pop
xchg
data16
ljmp
xor
and
mov
adc
add
arpl
dec
aad
dec
adc
ret
daa
out
sbb
rolb
addb
xchg
testb
lret
sub
add
mov
add
daa
pushf
mov
mov
adc
push
add
out
in
jl
ljmp
or
add
mov
add
enter
fisubs
mov
mov
popf
call
das
add
add
test
add
test
xor
pop
bound
mov
movsl
adc
sub
lcall
jg
add
arpl
jns
add
in
insb
or
add
add
lcall
ret
sub
add
das
test
jmp
jg
mov
add
push
add
mov
cmpsb
add
inc
lods
add
add
add
loope
testb
mov
jp
xor
imul
add
pop
mov
sbbl
add
mov
add
scas
fisubs
insl
bound
mov
cmp
or
insl
cmpl
lea
jmp
sbb
dec
push
cltd
enter
add
jno
push
mov
sub
add
xchg
mov
add
jge
sbb
add
add
inc
outsb
sbbl
xchg
or
xchg
adc
and
add
mov
add
push
adc
pop
ljmp
in
mov
js
pop
imul
in
xchg
add
pop
stc
lods
and
or
sub
insl
xor
imul
xor
push
enter
mov
add
add
test
inc
add
pop
insl
sub
add
mov
add
mov
bound
mov
xchg
add
push
ret
leave
add
add
mov
xlat
pop
adcl
adc
lods
cs
inc
add
push
xor
imul
scas
sub
cmp
jno
cld
lods
lds
mov
cmp
pop
jge
repnz
push
add
mov
dec
in
or
add
sbb
arpl
add
push
mov
mov
add
loopne
insb
inc
add
mov
add
xor
insb
dec
mov
loopne
mov
xor
push
push
add
hlt
add
loopne
enter
add
add
add
mov
pop
test
mov
addb
jle
add
add
add
mov
mov
xchg
adc
cltd
xor
jecxz
add
add
add
add
push
jo
mov
mov
jmp
sub
ret
pushl
rolb
and
mov
cmp
add
or
xor
add
lea
je
pusha
add
stos
sub
cmp
and
add
les
enter
pop
insb
lret
sbb
mov
and
inc
add
and
mov
das
jb
push
insb
ds
xor
in
mov
testb
sahf
fstl
sbb
mov
insb
add
mov
add
pusha
add
mov
ljmp
mov
add
push
add
xor
mov
dec
dec
incl
lret
add
lahf
outsb
outsb
fldl
sbb
add
add
add
arpl
inc
add
sarl
push
cmp
and
mov
pusha
add
sub
mov
mov
outsl
out
das
adc
sbb
push
add
repz
sub
mov
and
shll
testb
add
add
out
sbb
add
pop
addb
pushf
mov
add
push
rolb
scas
mov
and
call
mov
pop
aad
add
addb
jne
add
jl
shrl
pop
lcall
sbb
jmp
add
jmp
jne
test
cld
add
add
push
out
sahf
push
add
add
mov
add
adc
popa
out
nop
add
add
adc
shl
lock
add
push
pop
js
push
dec
mov
pop
pop
xor
add
mov
add
cmp
xor
rolb
jne
add
and
add
fs
dec
jg
add
xor
pop
jae
add
mov
add
xchg
add
mov
lds
mov
dec
inc
add
dec
int3
mov
ljmp
pop
xor
sub
add
test
adc
sahf
inc
daa
xchg
insl
add
add
aaa
jnp
dec
or
push
dec
jns
add
adc
lock
lods
push
add
in
ja
add
das
js
mov
cmp
hlt
add
outsb
lret
xor
mov
in
repnz
add
add
fisttps
pop
and
inc
mov
add
fidivl
add
pusha
add
js
jmp
add
and
mov
jg
cli
rolb
push
add
add
adc
add
dec
fidivrs
mov
out
jp
or
imul
add
movsl
sbb
add
add
add
add
rolb
xchg
add
ret
clc
pop
pop
mov
xorl
sbb
jnp
add
add
and
add
lret
loopne
and
mov
cmp
sbb
add
cmp
es
add
add
in
add
iret
push
inc
add
add
dec
mov
add
xchg
add
push
add
mov
add
addb
add
lret
icebp
pushl
pusha
add
mov
stos
sub
mov
mov
cmp
mov
aam
pop
push
add
add
lahf
or
add
xor
cmp
into
int3
and
pop
adc
jo
icebp
test
add
fiadds
pop
dec
inc
add
add
aas
shll
lret
jg
add
push
pop
lods
movsb
add
in
outsl
cmp
add
cmp
or
in
movsb
add
decb
pop
in
gs
adc
addb
out
pop
and
add
add
and
and
mov
aam
push
leave
mov
cld
dec
sbb
test
add
inc
add
jno
mov
sahf
cmpsl
dec
fildll
pop
sbb
add
sub
mov
mov
cmp
inc
add
cmpsl
jge
in
cmp
jle
js
add
add
push
pushf
aas
and
iret
rolb
lret
pusha
add
lock
pop
cltd
pop
adc
inc
add
xor
mov
add
jno
xchg
push
add
daa
fwait
out
cmp
push
add
adc
cwtl
sbb
fwait
mov
mov
add
push
add
fistps
add
push
add
add
or
bound
mov
add
dec
roll
mov
xchg
fildll
scas
mov
ljmp
ret
add
cmp
out
jbe
lret
pop
dec
decb
add
inc
and
add
les
xchg
aam
in
fidivs
call
repz
mov
data16
ds
mov
aaa
and
cmp
cmp
mov
pop
mov
inc
add
xor
insl
outsl
or
add
pop
movb
push
add
push
add
out
sahf
je
mov
add
add
add
imul
add
stos
cltd
rolb
lds
fnstcw
inc
add
outsl
std
out
aam
int
mov
or
dec
pushf
cmp
rolb
add
add
sbb
add
add
mov
add
add
mov
notl
add
add
enter
mov
jg
lds
xchg
addr16
add
and
movsl
pop
add
add
add
add
push
mov
add
mov
mov
and
jge
or
add
cmp
and
mov
jp
add
dec
dec
cmp
add
sar
xchg
scas
dec
std
pop
out
or
data16
mov
jecxz
lock
jp
movsl
jae
add
sahf
jb
lock
sbb
add
add
int
add
push
or
jns
insl
movsl
pop
cmp
icebp
rcrl
sarl
mov
xchg
add
das
and
mov
cmp
add
push
add
mov
add
pop
jl
add
pop
cmp
add
jne
insl
mov
add
jns
xor
gs
add
pusha
add
add
xor
loopne
xor
les
sub
add
lcall
mov
dec
int3
outsl
jo
pop
repnz
add
jne
add
add
push
rolb
add
movsl
fwait
aam
mov
sub
xor
inc
test
add
cmp
mov
ret
dec
clc
lcall
lock
cld
fisubs
mov
sbb
add
mov
fmulp
add
mov
ret
aas
stc
mov
test
or
jo
jo
in
add
add
mov
mov
add
add
jns
xor
jne
mov
add
popa
dec
in
data16
push
enter
fsts
pushf
jnp
add
mov
add
lea
movsb
add
dec
addb
fidivrl
inc
adc
rolb
dec
adc
jno
cmp
jo
stc
dec
out
movb
add
mov
jg
add
ljmp
std
jge
outsl
sub
mov
faddl
cli
and
fisttpll
inc
or
pop
push
add
arpl
ret
hlt
add
mov
add
sbb
sub
jnp
add
jle
add
add
sub
add
sub
mov
mov
bound
mov
push
add
popf
js
daa
fst
or
xchg
add
mov
push
add
jl
ja
add
mov
mov
cmpsl
sbbl
add
push
out
movsb
add
mov
incl
add
pop
gs
dec
testb
rolb
popf
ficoms
icebp
fisttps
jmp
add
and
add
mov
or
out
push
add
or
add
in
je
loopne
inc
mov
push
jl
add
add
mov
add
sub
add
add
add
xlat
and
mov
out
push
or
pop
iret
loopne
out
mov
clc
bound
mov
lods
arpl
add
jmp
loopne
das
movntq
add
add
ss
addb
add
addb
push
and
mov
mov
add
add
add
jp
into
pop
jge
jno
and
mov
add
add
xchg
data16
lret
lret
push
mov
aad
mov
add
rolb
mov
scas
lods
out
push
add
mov
mov
jp
add
push
add
add
add
add
hlt
add
daa
dec
cmp
add
js
add
push
add
add
cs
add
or
inc
clc
jb
jle
out
add
push
inc
or
add
je
adc
int3
inc
imul
cmp
pop
mov
mov
in
stos
pop
ret
addl
add
add
mov
leave
push
add
fwait
push
add
or
call
mov
push
add
xchg
mov
lock
add
cmc
adc
inc
pop
push
jle
mov
push
add
cmpsb
add
jge
pushf
ret
add
mov
bound
mov
and
imul
pop
add
push
add
add
movb
inc
add
int
ret
mov
sub
jl
call
add
cmp
add
cwtl
mov
add
cmpsb
add
sub
add
data16
push
add
out
addr16
in
jl
add
ja
std
in
pop
mov
sbb
scas
add
add
xchg
sbb
add
mov
ds
add
and
pop
sub
push
lret
mov
lahf
or
xchg
cmp
iret
sub
mov
shll
xchg
call
add
mov
add
add
mov
mov
movb
insb
fs
add
add
add
push
add
sti
jnp
mov
add
inc
add
pop
cs
add
add
les
pop
dec
cltd
inc
add
bound
mov
add
sub
xchg
add
push
add
add
sbb
loope
add
adc
dec
push
lods
gs
subl
add
sub
lahf
rolb
ret
stc
pop
outsl
hlt
add
xchg
jg
add
repz
add
jle
add
xchg
jmp
fidivl
add
mov
into
sub
gs
and
into
shr
out
add
stos
int
data16
popa
sub
rolb
push
and
mov
outsl
push
add
add
popf
push
cwtl
std
mov
add
mov
lret
insb
repnz
ljmp
out
xchg
xor
add
push
add
sbb
cltd
mov
adc
mov
jg
xchg
add
add
add
jecxz
lret
out
inc
jp
dec
call
inc
add
fiadds
push
in
and
add
ret
in
dec
mov
int3
cmc
jno
int
add
testb
adc
imul
sub
add
arpl
lea
sub
das
pop
hlt
add
lds
xchg
add
sbb
icebp
scas
add
test
mov
add
and
xchg
add
fwait
pop
dec
aad
add
sbb
xlat
sub
in
mov
mov
cmp
dec
adc
lods
cmpsl
ds
add
mov
and
call
js
jl
add
cli
testl
std
fisttps
add
mov
fwait
xchg
add
lahf
mov
mov
pop
ja
daa
mov
ret
pop
or
pushf
pop
ror
dec
dec
cmp
scas
sub
add
add
xchg
add
xor
test
mov
sbb
mov
mov
push
add
jl
roll
add
adc
fs
add
and
mov
mov
push
add
imul
xchg
mov
js
data16
cmc
pop
mov
add
add
nopl
cmp
dec
adc
arpl
lock
lods
pushf
xor
sbbl
cmp
rolb
add
nop
add
out
insb
ljmp
add
mov
fldl
xor
mov
xor
add
testb
xchg
sbb
add
add
add
add
mov
jbe
test
in
lahf
mov
add
push
add
adc
mov
jne
inc
add
popa
xchg
aaa
insb
scas
sbb
add
data16
add
add
flds
push
popa
mov
stc
cmp
imul
fidivl
add
add
add
mov
sbb
sub
sbb
cmc
les
enter
mov
cmp
add
out
movsl
mov
add
add
add
add
mov
push
in
add
inc
mov
and
mov
add
xchg
addb
mov
add
lss
pop
xchg
jo
bound
mov
add
inc
adcl
mov
add
add
push
add
cmp
add
data16
add
mov
or
xchg
dec
movsl
lret
mov
leave
push
sub
add
add
cmpsl
into
aad
popf
xchg
add
add
mov
in
pop
xor
xlat
and
test
and
aam
iret
je
movsb
add
scas
dec
popf
dec
test
add
and
mov
sbb
add
add
sti
rolb
or
add
insl
cmp
mov
jne
xchg
add
lcall
rolb
inc
and
pop
or
mov
and
mov
add
pop
jl
dec
mov
add
mov
sarl
fdivr
or
incb
ret
or
cmp
int3
ljmp
pop
out
add
jae
xchg
pop
out
dec
psrad
jecxz
into
mov
push
add
mov
xor
pushf
ret
cmp
pop
in
add
inc
inc
sbb
mov
daa
cli
cmp
sub
dec
jne
add
cld
lea
addb
add
sbb
add
jge
add
shll
adc
icebp
fidivrl
divl
add
add
sti
roll
mov
push
add
mov
jle
add
xor
jp
add
cmp
lar
mov
outsl
inc
add
jg
xchg
cli
mov
std
dec
outsl
jo
dec
and
xor
mov
add
pop
testb
testl
aaa
leave
dec
sub
ljmp
mov
lods
push
cltd
fmuls
ljmp
add
aam
lock
leave
test
add
clc
cmpsb
add
rorl
inc
add
cmp
mov
add
mov
adc
pop
push
add
jo
mov
icebp
push
outsl
mov
mov
inc
add
sahf
sbb
les
jl
mov
lcall
test
add
and
add
add
and
mov
add
mov
jno
lret
jb
cli
add
mov
fistps
aaa
mov
add
movb
outsb
cmp
ficoml
sbb
push
add
mov
xchg
jge
add
add
add
jne
dec
xchg
dec
xor
dec
dec
mov
add
add
add
push
add
adc
sahf
sub
add
xchg
cmp
add
jb
in
shrl
or
add
add
pop
cld
xchg
mov
mov
add
lcall
bound
mov
xchg
add
fsin
aad
add
cmp
icebp
mov
mov
xchg
add
sub
aam
cmp
das
sub
xor
das
fstpl
mov
add
iret
xor
negl
aaa
jg
jae
or
push
fcoms
add
add
fsub
add
jp
inc
add
mov
inc
mov
fxch
rolb
repz
jl
jl
xchg
sbb
xchg
pop
dec
outsl
insb
push
push
pop
add
add
insb
mov
pop
lret
mov
sti
push
movsl
in
orl
inc
dec
lret
int3
adc
jmp
fst
add
roll
add
add
movb
mov
pop
daa
pop
mov
cmpsb
add
je
jge
add
loopne
filds
testb
and
add
adc
rcrl
mov
loopne
dec
mov
mov
mov
adc
scas
addb
mov
repnz
pop
jle
add
test
dec
stc
mov
lahf
aam
call
cmpsl
dec
push
add
test
mov
mov
add
add
pusha
add
rcrl
jg
popa
or
mov
jl
mov
mov
mov
mov
pop
add
mov
add
add
andl
fcmovnu
jno
aad
rolb
stc
or
add
rorl
and
mov
stos
xlat
mov
pop
push
add
add
jbe
push
add
add
adc
cmc
cmp
insb
ja
add
mov
sbb
add
add
push
xor
sbb
sub
push
mov
add
daa
orl
addb
add
sbb
cmp
or
add
or
or
adc
or
cwtl
mov
fstpl
add
outsl
icebp
clc
movsb
add
jns
sbb
jnp
add
fdivrp
push
add
pop
movsb
add
dec
pop
push
add
mov
test
add
inc
pop
sub
pop
scas
loopne
insb
fmull
into
insb
outsl
outsl
out
push
add
mov
into
sbb
out
fnsave
add
sub
or
pop
push
insb
push
add
push
addl
lods
inc
add
add
mov
add
mov
out
in
mov
add
add
xchg
inc
add
add
pop
movb
lret
push
add
sbb
stc
push
add
push
add
aas
es
pop
push
add
add
ret
mov
je
pop
add
mov
adc
rcll
jns
dec
sub
fsubr
xchg
add
lods
xchg
add
add
jp
cmpsl
addr16
imul
add
stc
nop
es
incl
data16
push
add
stc
nop
es
lea
sti
pop
pop
lret
push
mov
stc
nop
es
aam
insb
add
nop
es
sbb
push
test
add
stc
nop
es
incl
sbbb
nop
es
add
mov
or
jb
add
add
add
add
sti
xchg
stc
nop
es
add
add
in
adc
pusha
stc
nop
es
add
add
add
call
nop
cld
nop
jmp
insb
imul
add
sbb
nop
es
les
and
es
add
lea
mov
nop
cld
nop
jmp
sbb
add
add
es
push
xor
add
jb
inc
add
lods
cmp
add
pop
call
stc
nop
es
lgs
pop
jp
stc
nop
es
add
add
add
and
sub
inc
add
add
nop
es
add
add
mov
add
mov
add
in
test
fs
nop
es
add
stc
nop
es
pop
bound
add
lea
stc
nop
es
bound
loope
call
stc
nop
es
cmp
add
mov
stc
nop
es
add
stos
notl
or
add
sbb
jb
add
add
cmc
cmp
movb
mov
xchg
ret
add
sbb
xchg
cltd
dec
push
mov
xchg
ret
add
pop
add
add
filds
xchg
ret
clc
mov
loop
iret
pop
stc
nop
es
jmp
add
add
test
nop
es
les
add
popa
push
mov
xchg
ret
mov
sti
add
repz
pop
push
mov
xchg
ret
add
sub
mov
in
add
stc
nop
es
add
add
add
sbb
inc
add
in
add
jmp
stc
nop
es
add
mov
mov
push
push
mov
xchg
ret
add
add
mov
nop
cld
nop
jmp
adc
add
add
sahf
lea
sub
nop
jmp
add
xor
in
add
stc
nop
es
sahf
xor
in
push
mov
add
add
add
popa
jl
xchg
jbe
loopne
rcr
mov
nop
cld
nop
jmp
clc
xor
fsubrl
inc
and
nop
es
mov
cpuid
add
cld
nop
jmp
testb
add
sti
adc
sbb
add
nop
es
add
divb
inc
nop
cld
nop
jmp
subb
add
mov
xchg
ret
mov
cmpl
jmp
add
sbb
add
add
nop
es
clc
add
jmp
push
stc
nop
es
add
mov
sbb
add
nop
es
add
lcall
es
add
mov
add
stc
nop
es
sahf
add
add
add
scas
add
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
add
add
add
lods
and
stc
nop
es
xor
repz
nop
es
add
stc
nop
es
adc
cmp
dec
cmp
nop
cld
nop
jmp
les
in
add
cltd
push
stc
nop
es
add
clc
clc
testb
pop
fadds
in
inc
add
icebp
add
add
add
add
stc
nop
es
adc
add
mov
push
mov
bound
xchg
push
pop
add
leave
add
dec
and
cmpsl
lret
add
nop
es
testb
add
clc
pop
mov
stc
nop
es
add
add
add
testb
dec
stc
nop
es
pop
mov
adc
andl
jb
jmp
jmp
stc
nop
es
add
add
pop
add
stc
nop
es
add
jle
and
nop
es
add
mov
mov
mov
pushf
push
push
mov
xchg
ret
add
andl
js
add
nop
es
jno
add
mov
add
nop
jmp
add
add
das
clc
cmc
rolb
mov
stc
nop
es
sub
add
add
movsl
mov
cmp
es
mov
add
add
add
nop
es
mov
add
addb
add
testb
add
cmp
popa
add
mov
xchg
ret
clc
dec
mov
movb
es
das
testb
push
mov
xchg
ret
sti
add
icebp
add
mov
stc
nop
es
pop
add
dec
push
push
mov
xchg
ret
les
add
add
add
stc
nop
es
add
mov
stc
nop
es
in
div
lods
inc
jmp
stc
nop
es
dec
sbb
bound
mov
add
xor
neg
rep
stc
nop
es
add
add
add
jmp
nop
cld
nop
jmp
add
add
add
hlt
add
add
add
and
stc
nop
es
add
adc
nop
cld
nop
jmp
inc
pop
in
sbb
mov
mov
fmuls
nop
es
pop
les
add
nop
add
mov
stc
nop
es
subl
test
nop
cld
nop
jmp
inc
mov
dec
add
add
add
fimuls
mov
nop
jmp
add
clc
cmp
push
mov
xchg
ret
repz
xor
add
stos
push
mov
xchg
ret
add
mov
cmc
addl
mov
popa
add
mov
xchg
ret
pop
insb
pextrw
add
es
cmc
add
cmp
push
insl
mov
stc
nop
es
icebp
lods
pop
lcall
incl
adc
sub
pop
mov
mov
adc
nop
es
add
insb
add
add
stc
nop
es
add
fwait
pop
stc
nop
es
lods
add
add
nop
cld
nop
jmp
sub
mov
add
pop
lea
stc
nop
es
add
add
sbb
cld
nop
jmp
das
add
lds
nop
es
sbb
mov
mov
add
stc
nop
es
add
mov
mov
push
mov
xchg
ret
xchg
popl
add
mov
bnd
add
data16
add
aas
mov
nop
cld
nop
jmp
add
mov
sbb
in
lret
xor
push
nop
cld
nop
jmp
mov
inc
add
inc
mov
es
das
cmc
jmp
mov
nop
cld
nop
jmp
add
sahf
les
add
pop
add
push
mov
xchg
ret
insb
add
add
nop
cld
nop
jmp
inc
lds
add
mov
nop
cld
nop
jmp
sti
inc
add
add
daa
xor
rclb
incl
add
les
add
mov
nop
es
jmp
and
mov
addr16
test
or
nop
jmp
add
cmp
nop
cld
nop
jmp
add
adc
add
add
nop
cld
nop
jmp
mov
vmwrite
add
cmp
sar
nop
es
incw
adc
dec
or
nop
es
xchg
add
les
hlt
add
add
inc
mov
js
add
stc
nop
es
add
data16
add
or
nop
jmp
icebp
add
add
add
adc
nop
es
add
add
addb
push
push
mov
xchg
ret
lods
sbb
lea
pop
pushl
mov
nop
cld
nop
jmp
adc
mov
add
stc
nop
es
add
pop
add
add
push
mov
xchg
ret
add
aam
lret
adc
adc
aam
xchg
fsubrp
pop
adc
add
nop
es
add
add
fwait
mov
push
mov
xchg
ret
mov
nop
push
mov
xchg
ret
xchg
sbb
sbb
inc
push
stc
nop
es
data16
pop
cmp
and
push
mov
xchg
ret
jmp
movsl
pop
mov
stc
nop
es
add
add
mov
es
pop
add
add
mov
ret
mov
stc
nop
es
add
sub
mov
add
add
or
add
inc
push
mov
xchg
ret
clc
sti
jns
add
add
push
stc
nop
es
cmc
pop
clc
lods
add
test
nop
es
adc
dec
add
nop
cld
nop
jmp
addl
inc
add
or
stc
nop
es
add
sbb
mov
sar
nop
es
jns
sbb
add
add
push
stc
nop
es
add
jno
aam
pop
mov
stc
nop
es
add
or
mov
es
add
pop
add
mov
nop
cld
nop
jmp
lea
lds
add
add
fwait
push
push
mov
xchg
ret
jns
in
mov
inc
inc
xchg
add
stc
nop
es
adc
add
add
mov
push
add
add
add
add
add
adc
shll
orps
nop
es
add
add
popl
in
in
fists
mov
xchg
ret
adc
lea
xchg
add
dec
jne
stc
nop
es
add
add
es
das
icebp
add
add
mov
stc
nop
es
lret
add
xchg
add
cwtl
leave
stc
nop
es
add
pop
add
add
mov
mov
mov
stc
nop
es
aam
add
mov
in
nop
es
clc
sbb
popa
nop
cld
nop
jmp
add
add
xorb
jmp
jp
nop
cld
nop
jmp
testb
add
pusha
add
mov
xchg
ret
insb
lret
jns
incl
int3
add
push
mov
xchg
ret
add
sti
mov
push
mov
xchg
ret
adc
add
adc
nop
add
cmpsb
add
mov
stc
nop
es
jns
cmpw
nop
cld
nop
jmp
sti
pop
sti
add
add
mov
fnsave
call
movsl
out
inc
add
add
lds
cld
nop
jmp
negb
in
aam
add
stc
nop
es
aam
add
add
inc
add
add
nop
es
adc
incl
les
jmp
mov
xchg
ret
repz
add
rolb
inc
add
xor
stc
nop
es
add
dec
add
fisttpl
test
sldt
stc
nop
es
add
and
sub
nop
es
add
inc
add
mov
add
nop
es
add
int
add
stc
nop
es
insb
adc
add
push
nop
cld
nop
jmp
icebp
add
add
stc
nop
es
adc
sbb
add
jne
stc
nop
es
pop
add
push
out
push
stc
nop
es
add
sbb
add
mov
cld
nop
jmp
sbb
cmc
add
add
push
add
sub
stc
nop
es
add
add
add
imul
incl
mov
add
mov
jne
push
mov
xchg
ret
repz
xor
int3
mov
nop
cld
nop
jmp
das
add
add
jno
cmpl
nop
es
pop
cmp
add
push
stc
nop
es
sbb
add
dec
movzwl
nop
cld
nop
jmp
mov
cmp
mov
add
stc
nop
es
add
lods
in
push
mov
mov
mov
add
add
jle
in
nop
cld
nop
jmp
mov
adc
cmc
pop
add
xor
xchg
add
mov
stc
nop
es
mov
add
sbb
add
nop
es
xchg
add
xor
or
stc
nop
es
sbb
stc
nop
es
in
add
add
mov
nop
cld
nop
jmp
in
clc
sbb
cmp
mov
push
mov
xchg
ret
inc
add
add
fimull
test
or
add
nop
es
add
add
inc
push
mov
xchg
ret
add
add
add
stc
nop
es
clc
jno
sbb
add
mov
nop
cld
nop
jmp
mov
adc
mov
stc
nop
es
cmc
pop
pop
clc
add
fstl
in
cmp
add
add
in
andnps
xlat
add
stc
nop
es
clc
pop
add
add
les
inc
add
mov
xchg
ret
add
lds
mov
add
add
push
stc
nop
es
adc
mov
stc
nop
es
mov
data16
jb
add
lret
pop
data16
cmpsl
push
and
mov
mov
stc
nop
es
adc
adc
add
xchg
add
add
stc
nop
es
sahf
ljmp
movsb
add
mov
stc
nop
es
add
cmova
and
mov
xchg
ret
add
add
cmp
add
push
stc
nop
es
add
add
stc
nop
es
in
cmp
bound
sbb
stc
stc
nop
es
add
cld
cmpl
nop
cld
nop
jmp
mov
sti
adc
lds
es
add
add
pop
clc
add
sub
cld
nop
jmp
jns
add
add
in
add
jb
add
mov
inc
jmp
stc
nop
es
add
add
in
and
add
add
js
test
nop
es
fs
add
add
sub
nop
es
cmp
add
push
add
dec
mov
stc
nop
es
add
add
add
nop
jmp
add
add
pop
out
mov
nop
es
add
pop
in
jno
lret
sbb
add
es
add
pop
push
mov
xchg
ret
add
mov
pop
stc
nop
es
add
sub
icebp
sbb
and
stc
nop
es
repz
mov
jnp
stc
nop
es
jns
add
add
mov
push
add
mov
xchg
ret
sti
add
cmp
add
ret
sub
mov
xchg
ret
add
or
testb
mov
stc
nop
es
add
add
add
stc
nop
es
add
add
vmread
jb
mov
add
testb
outsl
push
stc
nop
es
repz
incl
add
add
decl
push
mov
xchg
ret
add
add
add
add
add
mov
nop
es
sub
mov
mov
stc
nop
es
sahf
add
add
add
add
jb
fs
mov
jge
test
add
stc
nop
es
add
sti
push
nop
cld
nop
jmp
mov
xchg
xchg
pop
adc
add
nop
cld
nop
jmp
add
add
add
jb
add
pop
mov
adc
mov
add
and
mov
jb
nop
es
add
add
push
push
mov
xchg
ret
les
push
fmull
lods
jmp
add
in
dec
sub
nop
es
sub
icebp
lret
add
es
add
mov
add
add
push
add
stc
nop
es
add
add
add
stc
nop
es
in
add
mov
stc
nop
es
mov
cmp
xor
add
stc
nop
es
add
loope
inc
add
stc
nop
es
les
add
lods
les
mov
nop
cld
nop
jmp
add
mov
sbb
xor
xchg
daa
ss
sub
nop
cld
nop
jmp
add
icebp
add
and
nop
cld
nop
jmp
add
jmp
push
mov
xchg
ret
sahf
add
sti
xor
popa
add
mov
xchg
ret
add
sti
adc
push
push
mov
xchg
ret
add
add
jle
loop
nop
cld
nop
jmp
popl
add
mov
sbb
mov
xchg
ret
add
pop
cmp
call
stc
nop
es
mov
add
add
stc
nop
es
add
mov
jno
add
pop
cld
ljmp
sbb
mov
nop
cld
nop
jmp
clc
add
mov
add
nop
es
mov
les
add
testb
add
mov
stc
nop
es
cmc
incl
add
insb
mov
add
sub
nop
cld
nop
jmp
add
add
mov
sub
push
mov
xchg
ret
add
aam
add
xor
xor
mov
push
mov
xchg
ret
lods
sub
add
jns
add
fdivs
rclb
add
add
mov
add
jb
stc
nop
es
jns
add
add
nop
cld
nop
jmp
decl
dec
add
mov
mov
stc
nop
es
lret
add
jmp
xor
xchg
cwtl
movzwl
stc
nop
es
adc
add
sbb
nop
es
mov
add
mov
xchg
ret
jns
clc
add
stos
stc
nop
es
add
data16
les
shll
jge
jmp
jb
add
add
mov
es
xor
popl
les
andl
nop
es
cmp
or
mov
xchg
ret
add
add
sub
mov
test
adc
or
sbb
insb
add
add
stc
nop
es
add
adc
jne
stc
nop
es
in
add
movsb
add
popf
in
call
add
add
xor
ror
push
mov
xchg
ret
cmp
add
decl
push
mov
xchg
ret
pop
add
adc
nop
es
incl
pop
add
dec
xor
stc
nop
es
add
addb
pop
mov
nop
cld
nop
jmp
mov
mov
lahf
call
stc
nop
es
jno
add
or
stc
nop
es
sub
sbb
leave
stc
nop
es
cmp
lret
add
stc
nop
es
inc
in
lret
lea
add
nop
jmp
add
les
mov
push
mov
xchg
ret
sub
mov
gs
popa
add
nop
es
in
adc
xorl
stc
nop
es
add
mov
push
mov
xchg
ret
sbb
add
add
stc
call
and
add
pop
add
pop
fsubl
cld
nop
jmp
cmc
fs
add
mov
je
push
push
stc
nop
es
sahf
add
stc
nop
es
icebp
sub
in
mov
stc
nop
es
mov
add
and
and
stc
nop
es
add
xchg
add
cld
nop
jmp
add
jmp
push
push
mov
xchg
ret
pushl
inc
add
sub
nop
es
add
adc
pop
pushl
stc
nop
es
pop
sbb
pushl
mov
xchg
ret
add
data16
pop
jns
add
movzwl
nop
cld
nop
jmp
add
add
dec
push
push
mov
xchg
ret
add
cmc
dec
incl
mov
and
push
mov
xchg
ret
add
add
sub
lret
push
push
mov
xchg
ret
sbb
fs
nop
cld
nop
jmp
xchg
bound
movsl
add
push
jge
stc
nop
es
add
pop
xor
shl
nop
cld
nop
jmp
add
add
les
add
stc
nop
es
adc
clc
cld
nop
jmp
cmp
add
add
aam
or
es
bound
add
adc
nop
es
xchg
adc
add
rep
nop
cld
nop
jmp
add
addl
je
cltd
inc
push
mov
xchg
ret
cmp
lgs
add
andl
jb
add
add
int
add
add
cmpb
add
stc
nop
es
mov
lods
cmp
lds
nop
es
adc
add
jmp
stc
nop
es
inc
xor
inc
cmp
mov
xchg
ret
das
add
add
je,pt
stc
nop
es
mov
pop
call
or
add
sub
nop
cld
nop
jmp
clc
add
add
aad
inc
stc
nop
es
mov
in
sub
xchg
add
insb
je
stc
nop
es
xor
cmpl
mov
lea
xchg
sub
jmp
incl
jmp
sbb
pop
stc
nop
es
add
adc
and
mov
cld
nop
jmp
add
xchg
xchg
bound
fs
add
in
inc
std
add
add
xchg
xlat
add
icebp
mov
sbb
nop
es
sahf
sbb
add
pop
jne
stc
nop
es
clc
mov
and
nop
es
cmp
add
inc
pop
pop
and
nop
cld
nop
jmp
clc
add
add
pop
inc
stc
pop
nop
cld
nop
jmp
jno
repz
add
mov
nop
jmp
add
incl
add
add
jbe
or
es
add
cmp
movsl
push
ljmp
add
das
add
sbb
nop
es
jno
cmc
icebp
sbb
cmp
add
or
adc
add
adc
add
ret
stc
nop
es
jno
add
dec
add
data16
cmpl
nop
cld
nop
jmp
pop
mov
mov
imul
stc
nop
es
sahf
add
add
add
add
sub
jl
inc
add
add
add
out
add
add
fiaddl
test
cltd
mov
stc
nop
es
in
mov
add
neg
pop
push
mov
xchg
ret
dec
lds
adc
nop
cld
nop
jmp
lods
mov
lds
add
stc
nop
es
clc
repz
dec
push
mov
xchg
ret
les
add
add
in
add
in
mov
stc
nop
es
add
push
add
add
out
inc
add
add
pop
addl
mov
push
mov
xchg
ret
mov
push
push
mov
xchg
ret
inc
testb
add
stc
nop
es
add
clc
mov
add
stc
nop
es
xor
mov
nop
es
add
cmp
add
mov
mov
stc
nop
es
clc
incl
cmp
mov
stc
nop
es
mov
rep
stc
nop
es
pushl
adc
mov
xchg
ret
pop
add
cmp
add
add
add
push
mov
xchg
ret
add
mov
mov
add
add
pop
add
leave
cwtl
nop
hlt
daa
xchg
cld
mov
stc
nop
es
cmp
pop
jmp
stc
nop
es
adc
nop
es
add
sbb
cli
mov
stc
nop
es
cmp
icebp
add
nop
es
sahf
clc
add
jmp
jnp
nop
jmp
add
adc
adc
sahf
shr
stc
nop
es
add
mov
mov
push
mov
xchg
ret
cmp
dec
pop
add
je
stc
nop
es
add
pop
out
add
stc
nop
es
add
clc
pop
clc
cmc
inc
sub
loop
mov
xchg
ret
mov
mov
add
stc
nop
es
add
add
aaa
addb
push
push
mov
xchg
ret
mulb
clc
pop
mov
stc
nop
es
clc
add
add
nop
cld
nop
jmp
les
add
repz
pop
lcall
push
nop
es
add
sbb
test
stc
nop
es
jmp
inc
lock
mov
xchg
ret
cmp
jmp
jo
call
nop
jmp
inc
das
add
testb
add
pop
add
add
nop
es
add
mov
faddl
nop
jmp
idiv
incl
jno
add
push
stc
nop
es
add
lret
add
addb
and
cmc
arpl
add
nop
jmp
sbb
add
add
add
pop
xor
stc
nop
es
xchg
mov
add
sbb
icebp
mov
nop
es
xchg
pop
mov
add
mov
stc
nop
es
cmc
mov
das
add
popa
bound
mov
add
out
add
add
pop
cmp
add
mov
stc
nop
es
add
pop
add
add
add
stc
nop
es
add
jne
push
mov
xchg
ret
das
add
cmp
dec
add
cld
nop
jmp
add
add
add
repnz
add
mov
mov
add
xor
stc
nop
es
mov
sub
add
nop
jmp
cmp
addl
pop
movsb
add
adc
inc
add
in
mov
add
xlat
or
jmp
jb
add
fidivrl
stc
nop
es
mov
es
stc
nop
es
inc
add
mov
add
add
nop
es
add
data16
mov
pop
stc
nop
es
dec
mov
xchg
xor
sub
push
mov
xchg
ret
add
add
add
add
stc
nop
es
add
pop
add
sbb
add
add
daa
jmp
cld
nop
jmp
lods
pop
mov
mov
mov
stc
nop
es
add
add
add
test
push
mov
xchg
ret
add
add
cld
push
mov
xchg
ret
sbb
inc
sbb
stc
nop
es
clc
add
fs
insb
mov
push
mov
xchg
ret
sub
lods
add
cmpsb
add
pop
stc
nop
es
mov
pop
mov
mov
and
add
ret
add
inc
call
and
mov
clc
add
adc
add
add
push
mov
add
in
add
jno
add
jg
stc
nop
es
testb
cmc
add
loopne
add
add
nop
jmp
pop
sbb
les
pop
lea
nop
cld
nop
jmp
add
sbb
aam
mov
call
stc
nop
es
sbbl
add
mov
stc
nop
es
mov
add
add
add
add
stc
nop
es
jno
add
add
nop
es
sub
add
add
add
cmp
dec
cmp
cld
nop
jmp
in
dec
das
xchg
mov
push
stc
nop
es
xor
sub
sbb
divl
add
cltd
mov
stc
nop
es
in
add
nop
es
add
cmp
mov
es
add
cmc
add
das
clc
das
add
stc
nop
es
dec
mov
dec
test
nop
cld
nop
jmp
sbb
mov
icebp
iret
add
stc
nop
es
add
ficompl
mov
xchg
ret
cmp
add
adc
cmp
rclb
roll
xchg
ret
aam
xchg
mov
lods
push
nop
cld
nop
jmp
add
add
cmc
imul
add
sbb
add
data16
incl
add
scas
mov
stc
nop
es
add
cmc
add
add
push
push
mov
xchg
ret
icebp
das
add
jmp
push
ljmp
jmp
add
lods
add
clc
add
stc
nop
es
adc
mov
incb
xchg
ret
jno
mov
clc
add
aad
cmc
stos
rep
stc
nop
es
add
add
push
mov
sti
add
outsb
push
add
add
dec
add
and
cld
nop
jmp
cmp
add
add
push
mov
xchg
ret
sbb
data16
dec
mov
stc
nop
es
sub
mov
xor
add
stc
nop
es
add
mov
mov
push
mov
xchg
ret
add
add
add
call
nop
cld
nop
jmp
mov
bound
add
stc
nop
es
sbb
les
nop
es
clc
testb
in
sti
mov
nop
cld
nop
jmp
sbb
sti
in
jno
out
je
nop
cld
nop
jmp
add
xchg
jmp
add
stc
nop
es
add
add
xor
stc
nop
es
add
mov
add
inc
push
mov
xchg
ret
repz
pop
and
mov
nop
jmp
insb
sbb
lods
add
data16
mov
popa
add
mov
xchg
ret
clc
add
add
jmp
nop
cld
nop
jmp
mov
xchg
fidivs
sar
es
add
add
mov
xor
nop
es
mov
mov
push
add
xchg
lods
xchg
stc
nop
es
aam
cmp
add
cmp
mov
nop
cld
nop
jmp
add
add
bound
imul
lret
add
icebp
sahf
in
adc
pop
mov
push
mov
xchg
ret
add
add
cmp
mov
stc
nop
es
pop
xchg
sub
add
xchg
arpl
add
xchg
dec
mov
stc
nop
es
add
mov
stc
nop
es
add
mov
mov
stc
nop
es
add
add
add
stc
nop
es
add
push
mov
xchg
ret
add
add
stc
nop
es
lss
add
fbld
nop
es
les
add
jno
add
add
imul
stc
nop
es
cmp
add
fimull
es
xchg
add
jne
stc
nop
es
add
das
dec
xor
stc
nop
es
add
add
push
loopne
nop
es
add
adc
mov
adc
stc
nop
es
pop
add
cmp
push
push
mov
xchg
ret
add
add
mov
stc
nop
es
jno
xor
jne
stc
nop
es
add
xor
out
pop
call
nop
cld
nop
jmp
addl
add
push
mov
xchg
ret
cmp
sub
fs
loop
stc
nop
es
insb
incl
sub
stc
nop
es
dec
sbb
les
inc
push
mov
xchg
ret
pop
add
cmp
lea
stc
nop
es
cmp
add
sbb
add
mov
cld
nop
jmp
add
add
mov
stc
nop
es
add
add
add
test
nop
es
adc
or
stc
nop
es
cmp
adc
add
mov
push
mov
xchg
ret
add
add
add
jne
push
mov
xchg
ret
add
xor
stc
nop
es
add
bound
jne
add
push
push
mov
xchg
ret
add
add
pop
icebp
mov
nop
es
add
add
ret
std
add
push
mov
xchg
ret
mov
vsqrtpd
jge
inc
add
sbb
push
sbb
jecxz
add
add
lea
push
add
add
stc
nop
es
lcall
cmp
aaa
dec
lea
push
mov
xchg
ret
add
lods
lret
and
inc
and
push
mov
xchg
ret
mov
insb
aam
add
add
stc
nop
es
sbb
pop
sbb
add
push
push
mov
xchg
ret
add
pop
subl
push
mov
xchg
ret
bound
sbb
mov
stc
nop
es
repz
add
das
sub
mov
es
add
add
add
jne
stc
nop
es
sub
clc
lcall
inc
add
pop
lds
les
add
jb
mov
mov
stc
nop
es
das
pmulhw
add
xchg
xchg
push
or
nop
es
add
lods
add
test
nop
es
cmp
jb
push
mov
xchg
ret
add
xchg
add
adc
inc
add
add
jae
nop
es
mov
mov
mov
xchg
ret
pop
add
mov
adc
nop
es
xchg
adc
icebp
aam
xchg
push
nop
cld
nop
jmp
add
notb
add
stc
nop
es
pop
lds
mov
mov
push
mov
add
fldcw
add
push
add
aaa
ljmp
nop
es
add
fiadds
add
nop
cld
nop
jmp
les
add
dec
push
add
add
js
nop
cld
nop
jmp
pop
add
inc
call
inc
or
add
nop
es
add
mov
add
push
mov
xchg
ret
mov
sbbl
sbb
es
add
icebp
lds
add
stc
nop
es
pop
add
mov
stc
nop
es
add
add
add
mov
push
mov
xchg
ret
data16
cmp
add
rolb
jno
push
push
mov
xchg
ret
add
cmc
in
add
pop
rep
stc
nop
es
das
aam
add
pop
gs
je
stc
nop
es
andb
stc
nop
es
xchg
adc
mov
mov
mov
nop
es
data16
icebp
add
mov
add
stos
lea
nop
cld
nop
jmp
add
adc
cmp
push
mov
xchg
ret
add
repz
add
nop
cld
nop
jmp
add
adc
popl
jmp
mov
stc
nop
es
add
add
add
loope
jne
stc
nop
es
jno
repz
stc
nop
es
add
clc
add
add
nop
cld
nop
jmp
clc
jno
add
pop
push
stc
nop
es
mov
add
mov
push
stc
nop
es
xchg
cmp
add
add
push
sub
repnz
incl
insb
inc
add
push
imul
in
inc
add
das
pop
pop
add
and
nop
es
xor
les
mov
ret
cld
nop
jmp
add
repz
add
sbb
repz
push
add
mov
stc
nop
es
add
lods
clc
add
clc
dec
and
repz
mov
xchg
ret
add
sti
jge
push
mov
xchg
ret
in
add
incl
pop
lea
es
add
add
add
mov
push
inc
or
nop
es
jmp
add
repz
pusha
push
mov
xchg
ret
addb
data16
xorl
nop
jmp
add
bound
sub
sbb
mov
xchg
ret
mov
icebp
add
add
das
call
stc
nop
es
orl
jne
nop
cld
nop
jmp
call
pop
fcoml
nop
es
popl
clc
add
lret
cmc
inc
cmp
pop
fldl
xchg
ret
add
movzwl
stc
nop
es
add
mov
push
add
push
mov
add
add
stc
icebp
lds
dec
sbb
es
sbb
add
repz
nop
jmp
add
add
test
inc
add
shl
stc
nop
es
lods
add
aam
add
sub
repz
nop
es
add
inc
mov
lock
cmpb
nop
cld
nop
jmp
jno
les
jmp
add
cmpb
add
popl
mov
xchg
ret
lods
das
les
add
add
cs
nop
cld
nop
jmp
data16
icebp
add
add
pop
lods
stc
nop
es
add
add
add
clc
adc
aad
sub
nop
jmp
add
insb
add
jno
mov
test
cld
nop
jmp
sbb
add
stc
nop
es
clc
sti
add
inc
add
es
add
pop
in
sub
add
jb
add
mov
add
add
cld
nop
jmp
add
pop
addb
add
push
nop
cld
nop
jmp
sub
icebp
data16
add
mov
sti
mov
stc
nop
es
add
aas
mov
es
add
rep
push
mov
xchg
ret
adc
add
or
push
mov
xchg
ret
sahf
add
inc
add
add
mov
xor
nop
cld
nop
jmp
mov
add
push
mov
xchg
ret
add
add
stc
nop
es
add
adc
add
sub
add
stc
nop
es
jns
add
add
mov
xchg
ret
in
xchg
mov
movl
add
nop
cld
nop
jmp
add
repz
gs
add
add
nop
es
pop
add
push
add
and
push
mov
xchg
ret
add
mov
add
jbe
xor
add
add
stc
nop
es
add
lods
lds
icebp
stc
nop
es
fs
add
mov
in
xor
bound
add
add
add
mov
add
rolb
add
stos
add
xchg
add
mov
cmc
dec
adc
mov
add
add
add
mov
xchg
add
and
mov
lcall
add
and
mov
add
add
cmp
std
jae
add
add
xor
iret
fidivrl
lret
add
cwtl
sbb
pop
xchg
add
sbb
push
aaa
cwtl
movsb
add
out
fadds
add
movsl
or
shl
add
imul
lds
lret
aas
sti
pushl
sub
addr16
stos
jmp
cmp
xor
imul
cmpsl
mov
adc
cmpsl
jl
adc
hlt
add
add
add
pusha
add
movb
add
sbb
and
js
add
adc
pop
call
out
jo
or
popa
ja
add
addb
or
testb
xchg
pop
xchg
add
mov
add
add
add
add
dec
addb
mov
imul
mov
dec
ds
sub
jge
ljmp
add
repnz
into
aam
dec
scas
rolb
sbb
add
add
add
add
es
adc
mov
push
add
call
add
add
js
imul
inc
lret
fsqrt
inc
add
rolb
add
daa
inc
add
xor
les
mov
xor
inc
sbb
sub
push
add
mov
ja
pop
and
mov
cmp
testb
rolb
add
das
lret
icebp
jae
add
push
es
jbe
inc
mov
add
add
add
add
mov
add
out
add
pop
or
add
shll
and
movsb
add
add
add
add
ret
data16
xor
cld
jge
add
popa
jne
movsb
add
push
xor
in
fcomp
mov
sub
xchg
aam
clc
mov
push
add
add
mov
add
iret
bound
mov
add
push
jle
add
mov
repz
mov
jmp
cltd
iret
push
sub
add
lcall
add
add
add
jmp
add
ja
add
push
add
jo
inc
fistpl
lcall
fnstenv
push
sub
aad
push
dec
jl,pt
add
add
mov
cmc
andl
arpl
fdivrs
ret
test
cmpsl
sub
insb
out
add
add
or
ror
push
add
inc
add
aaa
dec
add
pop
cmpsl
inc
arpl
sti
clc
jae
sbb
add
add
add
data16
add
push
popa
jae
mov
arpl
inc
imul
int
pop
mov
mov
add
pop
push
add
data16
jno
pop
iret
sbb
icebp
or
imul
stc
mov
push
add
lea
sti
lret
add
jp
gs
mov
xor
add
addb
add
add
dec
in
pushf
cli
cmpsb
add
add
movsb
add
cmp
sub
add
pop
sbb
inc
add
add
add
add
add
pop
cmc
sbb
ret
xchg
add
scas
pop
fsts
add
cld
inc
add
mov
mov
lcall
icebp
cmp
mov
out
dec
imul
add
mov
mov
xor
and
mov
sbb
add
inc
in
sbb
cli
mov
ret
sahf
imul
add
xchg
adc
mov
add
or
mov
movb
xchg
hlt
add
add
mov
push
cmc
lock
adc
cmpsb
add
xchg
add
outsl
leave
fwait
lock
bound
mov
mov
add
mov
add
insb
jae
mov
stos
sbb
in
insb
fdivrs
loop
sub
inc
pop
outsl
jecxz
out
stos
and
rcrl
sub
sti
xchg
jl
jl
add
cli
or
add
or
ds
andl
add
loopne
lea
subl
fstpl
dec
fpatan
mov
add
pop
jecxz
xor
test
add
add
xlat
stos
pop
std
xor
movsl
loope
jmp
xchg
shll
mov
pop
sarl
mov
add
add
sub
icebp
lods
sbb
push
add
add
add
test
mov
mov
fists
sub
add
add
dec
dec
pop
jne
inc
sbb
aaa
enter
add
ja
movsl
push
add
mov
insl
arpl
int
ljmp
xlat
xchg
mov
mov
lcall
cmp
or
inc
add
scas
or
xchg
mov
movsl
inc
add
stc
gs
add
add
test
inc
cltd
jge
mov
xchg
call
and
mov
movsb
add
clc
inc
add
mov
movsb
add
mov
xchg
add
add
leave
jbe
adc
jo
stos
lock
push
mov
cmp
add
dec
movsl
mov
add
mov
pusha
add
pusha
add
add
push
lock
pop
xor
jnp
add
cmp
add
mov
sbb
in
sub
push
add
jl
insb
into
lfs
inc
add
inc
arpl
push
pop
outsb
inc
jg
mov
xchg
mov
jae
push
lods
xorl
loope
add
cli
sbb
mov
fists
mov
add
std
imul
sub
std
lcall
aad
add
out
int3
adc
test
lahf
out
add
xor
cmp
int
sbb
jle
loop
mov
test
add
add
inc
add
sahf
xchg
add
in
daa
lods
int3
pop
add
add
lcall
add
fsubs
daa
push
add
mov
jnp
add
add
xchg
arpl
mov
xlat
cs
rolb
mov
ja
cmp
mov
mov
sbb
add
mov
add
mov
xor
dec
je,pt
and
inc
add
add
jge
cmp
add
cmp
fists
add
add
mov
daa
pop
clc
push
out
add
add
add
mov
add
add
add
jg
or
mov
lock
jl
xor
add
add
stos
ljmp
xor
pop
cld
xor
adc
nop
add
add
xchg
add
or
mov
xchg
js
add
mov
std
xchg
add
push
add
add
pushl
cmp
mov
cmpsb
add
call
add
add
dec
stc
aad
add
mov
add
ss
aam
mov
mov
xchg
inc
xchg
movsb
add
add
xchg
data16
xor
add
pop
pop
mov
add
outsb
dec
cwtl
pop
adc
dec
and
cwtl
mov
outsl
dec
repnz
mov
pop
xor
push
hlt
add
cmp
test
add
mov
movsb
add
push
mov
push
rolb
lahf
mov
add
push
and
mov
sbb
add
shll
fwait
out
pop
pop
mov
jns
addb
lahf
adc
cwtl
push
xorl
arpl
mov
add
lods
scas
gs
loope
rolb
add
pop
jae
or
add
add
jnp
lahf
es
dec
mov
jge
pop
sub
ficoms
add
hlt
add
add
stos
mov
sbbl
add
push
add
fsubs
cmp
add
pop
int
stos
add
add
ds
dec
mov
in
push
add
int3
xor
pop
repz
pop
aad
add
add
ja
add
mov
sub
add
int3
push
add
add
sub
dec
lock
add
inc
add
lods
mov
ret
add
xchg
les
and
mov
add
ja
pop
dec
jbe
inc
lods
out
mov
data16
jbe
mov
and
mov
dec
stc
inc
add
add
cmp
das
cmp
xor
cmpl
mov
xchg
xchg
add
lahf
and
mov
lods
cmp
mov
daa
fnstcw
repz
cmp
add
add
adc
out
xlat
mov
icebp
into
inc
call
lret
dec
add
mov
add
loop
inc
jae
filds
mov
add
out
out
lock
mov
dec
and
mov
pushf
push
jns
push
add
pop
xor
hlt
add
add
adc
inc
xchg
push
ret
pusha
add
aam
mov
gs
jns
xchg
add
inc
add
pop
sbb
add
ret
incb
fstl
add
gs
adc
adc
cwtl
mov
sti
mov
cltd
lock
add
add
add
bound
mov
stos
sub
test
adc
jg
add
or
test
lahf
outsb
loopne
adc
dec
mov
add
inc
pop
mov
mov
add
add
test
shrl
inc
add
mov
jns
fadds
inc
addb
xor
or
adc
addb
cld
ret
add
fstps
daa
adc
pop
pop
xlat
mov
movsl
sbbl
lods
xchg
push
add
add
cmpsb
add
xor
inc
add
add
add
push
add
lods
xor
cld
fildll
les
rol
inc
jl
vpsllq
add
push
add
cmp
jo
cld
pop
mov
sbb
cmp
xlat
test
add
jge
sbb
adc
loop
ret
dec
stc
sbb
pop
and
out
lahf
jge
int3
out
in
decl
xlat
jb
mov
add
jecxz
fildll
mull
jbe
in
jne
add
sub
call
data16
jp
pushf
mov
lds
add
jo
addb
dec
lods
arpl
push
add
and
mov
or
add
mov
mov
lcall
add
add
mov
in
jne
add
cmpsb
add
add
add
push
mov
fistps
add
and
outsb
and
add
add
add
mov
mov
fbld
add
addb
add
mov
icebp
scas
mov
push
lahf
jbe
fldcw
pop
and
add
add
mov
addb
add
sbb
jecxz
popf
add
mov
data16
or
add
add
jecxz
add
cmc
lods
pop
dec
jge
cmpsl
push
movb
xor
call
jo
loop
lds
insb
mov
add
add
sub
cmp
pop
inc
testb
adc
mov
add
cmp
mov
add
pop
push
add
dec
or
add
add
dec
imul
push
add
add
scas
testb
imul
xchg
push
and
js
jl
and
jno
jb
dec
cmp
jbe
dec
inc
outsl
cwtl
inc
add
int
sub
add
push
jmp
push
push
mov
add
mov
mov
jecxz
sbb
aam
dec
push
scas
push
add
sub
loope
jmp
stos
repz
lods
pop
mov
and
mov
lods
sub
push
add
das
or
mov
cvtps2pi
sahf
inc
pushf
adc
mov
add
icebp
cmp
cmp
add
dec
mov
and
pop
jl
lcall
push
call
dec
push
pop
lahf
jge
lret
sub
jnp
sub
adc
negl
mov
push
add
fcoms
lahf
pop
add
dec
jecxz
add
loop
fadds
dec
add
fwait
sub
aas
out
xchg
add
mov
push
add
mov
adc
lcall
add
fmull
in
xor
dec
addb
in
mov
add
lods
rolb
movsl
push
add
mov
add
push
bound
mov
add
sarl
outsb
sarl
rcl
add
mov
fdivrl
popa
lcall
lds
jnp
mov
stc
cld
xchg
dec
add
mov
cld
push
add
xor
add
mov
fwait
xchg
dec
js
add
add
popa
repnz
sbb
add
mov
mov
jl
and
add
add
jge
mov
nop
add
add
adc
pop
stos
stos
fmulp
or
add
mov
lds
inc
add
pusha
add
xchg
add
xor
jns
lods
arpl
add
add
add
imul
mov
shll
xchg
dec
mov
xchg
add
add
add
mov
xor
rolb
adc
cs
add
lea
and
mov
add
jp
lods
movb
lahf
xlat
sub
and
add
jecxz
test
or
std
dec
adc
mov
ljmp
add
mov
nop
add
sbb
add
xchg
add
call
sub
add
push
xor
add
xchg
fstpt
dec
cs
add
dec
stos
add
shll
add
or
add
repz
xchg
push
add
add
push
sbb
popf
jmp
and
adc
add
hlt
add
ljmp
sub
sub
mov
xchg
and
cmp
add
inc
test
add
add
call
sub
add
add
or
add
jle
adc
pop
sbb
pushf
pop
bound
mov
je
add
mov
add
mov
add
add
outsb
add
add
add
sbb
add
jbe
popf
or
add
jbe
sub
pop
mov
mov
add
sbb
mov
inc
add
ret
rcl
pop
clc
pusha
add
mov
das
inc
popa
dec
xor
cmpsb
add
fsts
bswap
add
mov
add
daa
stos
push
testb
movb
fsubs
or
and
mov
jmp
stos
mov
jb
add
push
movb
cli
scas
xchg
add
outsb
xchg
add
inc
add
add
jns
add
loope
mov
lea
scas
pop
xchg
xor
add
test
aas
negl
xor
dec
xor
mov
test
and
cmp
add
add
add
xor
hlt
add
out
add
popa
pop
mov
scas
data16
stc
mov
add
rolb
in
shrl
push
add
mov
push
add
mov
add
dec
sub
push
add
mov
push
add
add
xor
icebp
mov
push
add
in
add
sti
ds
lds
mov
add
ret
xchg
add
sti
insl
sub
cmpsl
dec
push
movsl
add
add
add
mov
or
jge
push
add
push
sbb
rcll
int
add
add
push
and
mov
pop
stc
inc
add
and
add
add
icebp
and
mov
or
in
popa
add
mov
aam
flds
xchg
add
imul
add
add
xchg
jb
je
arpl
sbb
adc
inc
add
dec
and
mov
add
movl
add
andl
mov
in
imul
sub
add
sahf
xor
cld
fwait
rolb
sahf
push
pop
data16
add
jmp
sbb
push
fmuls
xlat
push
jge
aam
mov
call
inc
or
leave
xchg
cmp
sbb
add
mov
add
rolb
add
fisubrs
dec
ret
cli
mov
cmpsl
add
mov
ret
iret
dec
inc
insb
mov
addb
ja
loopne
push
pop
cmp
imul
add
mov
sub
sahf
andl
cwtl
js
das
loopne
inc
add
mov
and
repnz
or
and
mov
int
pop
out
adcl
adc
jns
push
mov
push
add
mov
test
push
mov
ret
inc
xchg
arpl
ret
cs
test
add
mov
sbb
add
imul
ja
test
add
pop
and
jo
inc
xchg
add
and
mov
mov
add
sbb
or
add
outsb
sub
pop
adc
loopne
iret
sbb
push
add
add
dec
inc
add
repnz
loope
add
add
dec
pop
out
xor
rorl
pushl
xchg
add
add
ret
incl
push
add
fisttpll
add
add
daa
xchg
test
out
lods
push
add
daa
or
pop
test
sti
cld
sub
icebp
scas
jnp
mov
or
mov
pop
andl
xorl
jae
xor
inc
add
add
es
xor
and
mov
add
dec
adc
push
or
dec
mov
pop
fdivs
mov
sub
mov
les
mov
add
lock
int
add
add
mov
leave
sub
pop
rolb
orl
dec
mov
imul
mov
add
mov
addb
test
add
and
sbb
add
addr16
fldl
adc
cmp
dec
xor
dec
dec
mov
pushf
lret
insb
and
add
jp
rolb
pop
incb
mov
lods
or
in
dec
xor
mov
add
jmp
sub
mov
movb
add
add
push
add
add
mov
push
add
add
jno
add
iret
stc
into
js
mov
add
cmc
in
rolb
andl
xchg
add
addr16
movsb
add
jmp
ja
leave
clc
mov
enter
xor
insb
repnz
add
stc
jno
add
into
pop
inc
add
loope
sub
push
add
cmp
add
cmp
inc
add
add
loop
xlat
idivl
popf
cmp
add
push
add
fisubrs
sub
pop
outsl
mov
or
out
out
jnp
mov
dec
sub
pop
or
xchg
imul
push
out
mov
add
cmp
lret
xchg
dec
sub
imul
outsb
cmp
xchg
add
jbe
fbstp
jmp
lcall
popf
inc
inc
add
and
fstps
cmpsb
add
add
into
adc
dec
int3
enter
stc
xlat
addb
cmpl
pop
outsl
pop
test
xlat
xorl
mov
scas
push
xchg
mov
lahf
push
xchg
outsl
cmp
mov
mov
xchg
mov
mov
mov
test
movsb
add
xor
scas
cwtl
xlat
xchg
inc
add
add
add
add
xlat
sbb
xor
mov
xchg
add
cltd
xchg
add
pop
pslld
outsl
cmp
xorl
fdiv
call
push
add
xchg
test
add
push
int
mov
xlat
clc
jne
cmp
push
add
bound
mov
add
push
add
add
push
xchg
mov
pop
call
mov
add
lret
pop
mov
add
ja
daa
outsl
add
mov
sbb
pop
inc
add
mov
mov
add
add
addr16
popa
cwtl
xchg
aam
xor
mov
dec
test
imul
bound
mov
push
aad
add
test
je
mov
aam
hlt
add
add
inc
adc
jle
or
push
test
out
push
in
outsl
adcl
add
std
lea
push
add
dec
pusha
add
add
add
sub
pusha
add
add
add
mov
movsl
rolb
ja
add
mov
mov
lret
add
loop
and
mov
add
pop
lock
and
mov
push
add
add
add
sahf
and
out
mov
dec
inc
and
mov
sub
mov
push
add
push
add
add
sub
xor
bound
mov
or
xor
sbb
add
push
pop
lret
fs
push
add
push
add
pop
aam
mov
imul
in
jo
adc
popf
jnp
sbb
aas
aam
addb
cmpsl
adc
mov
add
insl
inc
mov
xchg
add
test
aad
add
xchg
add
pushf
enter
icebp
add
and
add
add
test
add
add
aaa
out
test
adc
add
or
add
xor
pop
jl
mov
pushf
add
lret
repz
and
cmp
push
mull
out
lock
mov
stos
inc
add
pop
pop
int
push
lret
mov
rcll
cmpsb
add
scas
sbbl
fucomip
mov
add
add
add
push
add
bound
mov
add
push
add
add
add
imul
xchg
add
lret
cmp
push
adc
mov
mov
xchg
add
aam
cmp
outsl
and
mov
add
je
fistpl
xchg
cmc
outsb
rolb
sub
imul
add
mov
add
add
add
add
int3
xor
add
testl
cmp
rolb
mov
add
add
push
jle
add
add
cmp
testb
jg
inc
add
cmp
cmpl
cltd
jl
mov
in
add
mov
inc
add
imul
lods
sub
mov
data16
jns
add
mov
xor
outsb
xchg
add
popl
jnp
push
add
add
and
mov
add
out
testb
add
sub
sarl
push
or
cmp
push
pop
aas
cs
add
add
pop
iret
dec
pop
jo
imul
xor
in
ret
mov
add
jmp
hlt
add
add
jbe
aas
mov
add
mov
add
mov
js
leave
mov
mov
leave
push
add
add
add
stos
cmp
ljmp
add
add
add
adc
in
cmp
pop
lds
add
add
dec
sbb
add
das
xchg
mov
movsl
mov
mov
je
xchg
out
aaa
xor
xchg
rolb
jecxz
arpl
add
addb
push
add
add
mov
jae
pop
adc
inc
add
and
flds
mov
add
mov
ret
jmp
add
inc
lret
push
sahf
out
add
cwtl
sbb
add
add
mov
add
cmpsl
push
add
cmp
inc
add
mov
inc
sti
mov
stc
in
pop
cmp
out
fldl
rolb
loopne
lods
mov
adc
or
ret
add
repz
out
orl
add
std
test
ret
jb
dec
and
mov
in
xchg
mov
mov
mov
cmp
int3
dec
addb
add
lods
xchg
sbb
xchg
push
add
fldcw
pop
or
lahf
int3
lock
add
mov
leave
and
ds
or
add
popf
ror
pop
repnz
das
adc
movsl
adc
add
pusha
add
repz
cmc
cmp
out
pop
das
movsb
add
add
je
into
movsb
add
mov
pop
pop
fs
xchg
testb
nop
add
mov
leave
mov
test
add
js
add
add
add
lock
cli
add
mov
test
test
mov
add
jle
and
or
add
sub
add
rolb
add
mov
repz
cmp
push
sahf
mov
mov
add
mov
add
add
pop
dec
addb
and
iret
push
ljmp
mov
dec
mov
jns
jno
add
prefetcht0
stos
scas
xor
inc
xor
add
add
mov
add
test
add
mov
dec
and
add
addb
fiadds
push
add
cmc
add
mov
ljmp
sahf
les
inc
push
sub
dec
sub
pop
or
add
add
ficoml
push
add
sahf
jge
add
fisttps
imul
ret
movb
mov
mov
icebp
mov
and
add
xchg
mov
pushf
add
sub
imul
jl
push
iret
clc
xchg
and
dec
rolb
in
jno
outsb
ret
jecxz
ja
xchg
add
pop
push
in
xchg
push
ret
arpl
and
add
add
int3
push
add
cmp
sahf
xor
idivl
add
mov
fidivl
pop
daa
fcomps
add
add
aas
outsl
mov
adc
ljmp
mov
push
repz
fdivrs
pop
mov
add
inc
add
mov
rcrl
add
dec
shrl
rolb
mov
push
xchg
add
add
fmull
scas
cmpsl
iret
loop
data16
mov
mov
jp
out
sub
aam
add
testb
add
or
add
push
add
add
sub
aas
lret
add
push
call
push
add
add
fldl
adc
int
and
add
add
mov
jb
enter
add
and
push
add
xchg
int3
in
out
mov
int3
loopne
mov
add
add
fwait
or
stos
inc
add
add
test
inc
add
add
into
xchg
add
add
mov
add
add
mov
arpl
adc
pop
xor
cmp
stc
outsl
scas
lret
leave
cmp
add
mov
lods
loop
insl
xor
cltd
pop
sbb
jle
addr16
add
mov
test
xchg
add
imul
adc
clc
stos
andl
add
pop
xor
cmp
jns
loope
add
or
mov
iret
mov
xchg
add
inc
dec
stos
dec
rolb
cs
pop
xchg
xchg
add
outsl
push
int3
enter
dec
in
ret
addb
jg
lds
add
add
add
fadds
add
mov
pop
out
mov
xor
push
add
add
jecxz
int
add
data16
add
mov
mov
mov
add
repz
and
cwtl
cmp
sbb
add
add
add
sbb
fmul
mov
add
clc
imul
add
add
add
mov
add
add
push
pop
lock
ret
fimull
xor
sub
mov
add
nop
add
and
mov
addb
push
mov
dec
fidivrl
add
ljmp
hlt
add
jno
enter
testb
add
cmp
add
addr16
add
add
iret
stos
dec
lods
and
movsl
dec
arpl
or
test
icebp
ja
add
add
jp
int3
fs
aad
loope
add
add
aam
adc
mov
mov
aas
pop
clc
out
xchg
sahf
pop
in
orl
xchg
ficoml
add
xchg
push
jg
add
inc
add
test
add
add
test
test
addb
mov
push
add
add
sti
mov
mov
sahf
loopne
xchg
add
or
push
add
repnz
pop
add
pusha
add
sub
mov
fsubs
push
push
out
pop
sbb
cmpsb
add
loop
adc
adc
scas
bound
mov
jb
out
test
inc
nop
add
shl
mov
and
mov
add
ljmp
pop
xchg
imul
scas
fiadds
mov
xchg
jge
xor
mov
ret
pop
in
mov
add
cld
testb
out
mov
mov
cmc
add
jmp
add
add
ret
cmp
mov
push
mov
add
add
mov
push
fldln2
push
lea
jl
pop
dec
sub
mov
xchg
xchg
add
sbb
add
mov
add
add
addb
add
mov
sbb
add
inc
add
rcrl
xchg
add
mov
mov
dec
arpl
aaa
sti
jns
add
add
dec
cmp
add
out
xlat
js
add
add
faddl
add
insl
mov
add
and
mov
ds
pop
lahf
in
dec
pop
in
xor
subl
xchg
add
add
add
mov
mov
std
mov
loope
pop
or
add
mov
fwait
js
adc
mov
cwtl
es
pop
jae
iret
test
add
lock
loope
loope
add
daa
xor
xor
adc
aaa
ret
sub
jb
sbb
fadds
add
or
out
pop
movsb
add
push
stos
loope
push
and
aas
or
cwtl
add
sub
sub
cmp
out
cmp
sub
jo
in
addb
scas
cmp
xchg
add
mov
gs
int
or
jb
push
add
inc
imul
add
cli
xor
or
pop
nop
add
add
popf
cli
dec
rolb
or
mov
test
cltd
aaa
push
cmpsl
cmp
dec
rcrl
add
xor
inc
inc
call
jmp
test
jnp
xchg
out
jno
shrl
add
ds
add
mov
push
add
incl
add
lods
sub
iret
fmuls
pushf
add
lods
push
pop
test
sbb
call
dec
mov
mov
fwait
rolb
stos
inc
push
mov
add
gs
lcall
sbb
mov
gs
add
mov
mov
add
add
add
add
test
add
leave
andl
jge
push
add
cs
bound
mov
add
jmp
cli
sub
add
jne
mov
and
mov
add
xchg
xor
add
jno
inc
push
add
mov
aam
mov
jb
cmp
inc
movsl
popa
rolb
push
add
adc
lods
icebp
pop
cwtl
jmp
add
add
add
dec
jl
xchg
je
bound
mov
add
add
xchg
add
add
adc
rolb
add
add
jl
imul
add
xorl
add
jmp
loope
inc
fistpll
shrl
clc
cmp
pop
loop
xchg
addb
add
add
add
sbb
add
imul
and
addl
addb
cmp
cwtl
jecxz
rolb
in
xchg
add
mov
inc
cmp
add
rolb
add
add
add
lea
ret
iret
add
add
add
xlat
adc
rolb
mov
mov
sub
add
add
test
cmpsb
add
add
mov
or
lods
clc
xor
inc
inc
add
cmp
add
push
testb
add
int
int
push
add
add
imul
or
add
fwait
xchg
clc
pop
pop
stos
sahf
in
imul
cli
popf
ss
pop
jbe
imul
xlat
mov
pop
pop
xor
add
jb
jns
xchg
add
out
and
add
mov
xchg
add
add
mov
mov
add
aam
ljmp
outsl
movsb
add
add
xchg
add
add
insl
jle
add
sbb
or
sub
add
lea
bound
mov
scas
cmp
pop
addb
sar
dec
add
cwtl
imul
test
dec
lret
xchg
add
add
cmp
add
add
xlat
inc
add
cmp
inc
add
je
sub
xchg
sub
test
mov
cmp
int
add
jmp
jge
add
add
mov
and
add
jae
push
add
mov
adc
sub
or
add
mov
and
mov
test
in
push
add
add
insb
sbb
dec
or
push
add
or
aam
or
add
push
int3
mov
push
inc
add
add
and
pop
call
int3
xchg
scas
in
sbb
inc
sub
jnp
jecxz
fistps
jae
out
pop
sbb
pop
movb
es
pop
jns
add
cmpsl
sub
nop
add
cwtl
mov
cwtl
jo
or
add
add
cmc
int3
fidivl
add
jg
nop
add
enter
cmp
add
sub
aas
push
pusha
add
int
add
adc
insl
movsl
push
or
cwtl
pop
out
ds
add
arpl
add
jg
mov
xor
jno
add
adc
add
rolb
loope
add
xchg
add
xor
in
das
mov
mov
add
ljmp
xor
mov
rolb
xchg
xchg
scas
xchg
scas
mov
add
add
add
add
add
lds
pop
push
dec
jb
cltd
repnz
fmulp
call
add
lock
sarl
ljmp
cmp
in
and
pop
jo
rolb
cmpsl
in
pop
lea
mov
xor
add
adc
add
fisttps
mov
add
cli
loopne
imul
data16
testb
arpl
arpl
addl
cmpsl
pushf
das
aaa
xrelease
sub
add
add
cmp
inc
testb
sbb
sub
in
fisubrs
add
in
loop
adc
xchg
adc
push
inc
add
push
add
cmp
int
add
mov
add
add
add
rolb
je
add
pop
in
fwait
dec
sti
adc
mov
lcall
mov
add
add
out
sti
aaa
int3
je
call
xchg
add
add
push
xor
stc
sti
xor
gs
add
loopne
sub
mov
push
add
add
sbb
cltd
sarl
cli
and
fsubrs
xchg
xchg
imul
das
mov
pop
xchg
negl
cld
loop
test
add
mov
mov
out
cmp
add
outsb
insl
mov
mov
mov
mov
push
add
push
add
mov
push
add
movl
and
mov
pop
in
mov
mov
or
add
add
add
add
sub
add
push
mov
add
inc
add
mov
add
dec
fs
xchg
add
fs
cltd
add
add
add
add
add
addb
and
jge
out
ret
add
in
mov
pop
jae
je
xchg
mov
fistl
dec
cld
movsl
xor
add
dec
sub
adc
lods
inc
add
imul
add
add
mov
adc
mov
cs
add
clc
push
mov
add
add
xlat
loop
pop
add
in
test
add
add
les
mov
movb
sub
jno
add
mov
add
mov
in
mov
xchg
add
test
cmp
add
inc
loope
jns
add
mov
adc
loope
cmp
add
xor
jmp
and
mov
add
enter
shll
pop
insl
lods
xchg
out
add
mov
pop
sarl
add
add
fildll
repz
stos
cs
mov
pop
or
add
add
addb
add
addb
data16
add
push
and
in
adc
push
das
push
add
add
jae
xor
lods
add
add
add
and
mov
add
add
add
add
shll
mov
rolb
filds
push
add
ljmp
dec
movsb
add
add
inc
add
add
mov
xrelease
add
cmp
lock
cltd
mov
mov
push
mov
testb
fwait
jns
jno
add
inc
add
mov
add
dec
mov
mov
add
mov
movsb
add
xor
mov
dec
movsl
lcall
stc
cmp
and
mov
mov
fsubrl
mov
dec
pop
add
das
repnz
jp
addb
adc
adc
sarl
dec
cmp
addb
add
jnp
add
mov
lock
stc
mov
jnp
add
incb
lods
adc
mov
into
jle
add
inc
add
add
lcall
hlt
add
scas
incb
inc
add
xor
pop
and
insl
fstpt
popa
movl
add
stos
outsl
dec
sbbl
dec
mov
add
jo
sub
xor
mov
pop
shrd
xor
mov
insl
dec
scas
jmp
outsl
imul
dec
out
xor
jb
fstps
cmp
pop
sbb
add
imul
addb
lods
push
mov
jns
inc
push
add
add
mov
and
sbb
int
push
add
add
scas
add
les
gs
testb
adc
push
shl
xchg
mov
dec
push
aaa
push
add
add
mov
jns
add
dec
ret
pushf
daa
leave
sbb
add
mov
dec
std
cmp
daa
push
add
mov
xchg
add
enter
cmp
sub
pusha
add
loopne
dec
js
and
jge
xchg
mov
add
test
clc
daa
lods
arpl
ljmp
add
add
mov
iret
pop
mov
out
jno
add
add
add
add
ret
push
adc
addb
add
add
mov
pop
pop
dec
test
xchg
mov
enter
add
sub
push
and
dec
imul
xor
jae
inc
add
add
test
add
add
fcmovu
clc
int
enter
fadds
add
pop
clc
xchg
lods
fcompl
roll
adc
ljmp
push
js
add
mov
push
cltd
jne
ret
scas
stos
pushf
test
adc
in
jle
add
add
mov
push
add
pushf
fimuls
add
dec
sbb
aad
mov
sahf
push
add
add
rcrl
pop
dec
and
in
enter
pop
adc
dec
stc
inc
insl
add
adc
adc
add
xor
popa
mov
daa
fnstsw
ret
add
add
std
xor
lock
add
insb
mov
scas
pop
push
pop
dec
in
add
loopne
mov
add
jge
jbe
mov
je
dec
shl
add
sub
outsl
and
scas
mov
mov
or
mov
add
in
inc
leave
xchg
out
mov
jecxz
movsb
add
mov
test
testb
dec
dec
mov
add
mov
jnp
cli
pop
das
movsb
add
push
mov
rdtsc
sbb
add
xchg
add
add
mov
add
mov
addb
add
add
data16
fcom
add
sub
mov
push
mov
add
inc
add
pop
movsl
daa
popa
pop
push
add
je
fimull
addb
sahf
and
mov
xchg
add
add
int
mov
cmp
xchg
stos
push
sub
dec
data16
add
add
cwtl
mov
add
push
xchg
add
inc
rolb
add
add
mov
add
pusha
add
add
cmpsl
cltd
cmp
loopne
iret
movsb
add
add
mov
add
mov
mov
in
jb
sub
add
rolb
icebp
mov
pop
repz
addr16
add
push
sub
pop
or
xchg
cmc
dec
and
shrl
stc
jl
mov
sub
mov
outsl
into
js
addb
xchg
popa
pop
mov
mov
mov
add
xor
sbb
cmpsb
add
add
xor
add
les
dec
cwtl
rolb
jp
add
enter
inc
sarl
add
add
add
add
clc
lea
add
sbb
pop
pop
and
mull
mov
xchg
pop
decl
aad
clc
stos
pop
add
add
add
add
add
add
mov
imul
add
inc
add
mov
adc
into
shll
mov
jbe
in
sbb
and
xlat
mov
mov
push
add
add
gs
addb
jg
add
sbb
lahf
fstps
add
mov
or
lahf
insb
mov
add
mov
add
cld
adc
call
pop
dec
sbb
repnz
addr16
or
jl
add
sub
add
fisttpll
mov
repz
ja
je
pop
dec
ret
cs
call
cs
push
insl
lcall
add
nop
add
add
rolb
cmpl
dec
cmpsl
inc
and
push
add
add
cmp
pop
testl
add
ret
stc
fsubrl
addr16
add
jno
add
sub
add
add
mov
pusha
add
add
push
cmc
lock
hlt
add
add
xchg
mov
pop
scas
clc
addb
add
ljmp
mov
mov
fwait
push
push
add
push
add
mov
imul
add
test
cltd
push
mov
xor
sbb
add
add
outsb
dec
out
subl
outsb
mov
dec
arpl
fucom
add
repnz
or
aad
aas
or
mov
lahf
xchg
mov
add
and
mov
sub
xor
add
add
inc
lret
jo
mov
movsl
shll
iret
loope
jb
sub
add
insl
out
inc
mov
stc
mov
xor
push
outsb
fwait
and
inc
int
add
mov
jge
add
fs
add
add
in
push
add
mov
outsl
loopne
stos
xchg
ss
ret
ja
vpsubsw
mov
inc
mov
jecxz
adc
add
pop
data16
add
ja
add
xor
mov
sbb
les
jns
mov
outsb
int3
jne
in
mov
mov
jle
jo
pop
cli
add
pushf
and
lods
inc
mov
mov
jl
in
nop
add
fisttpl
add
sub
add
nop
add
ret
test
add
mov
cs
lods
sub
push
add
movsb
add
push
add
pop
lret
test
add
lret
sti
xor
add
scas
iret
add
aaa
les
popf
outsb
push
jne
add
add
add
jmp
and
mov
cmp
push
or
mov
cmp
add
jle
in
ret
add
mov
add
mov
cmc
mov
sbb
cmp
add
push
gs
mov
out
mov
add
add
mov
add
loopne
stos
in
fwait
mov
int
aam
or
pusha
add
or
daa
repnz
cmp
add
push
add
sbb
add
add
dec
add
mov
popf
imul
sarl
add
mov
mov
imul
add
add
pop
movsl
aad
mov
xor
je
xor
add
add
jb
lock
add
push
add
in
xor
and
ljmp
das
dec
adc
add
cmp
jl
jns
fiaddl
add
add
ja
stos
sbb
hlt
add
pop
jmp
add
add
pop
push
jmp
pop
push
testb
jge
je
fistpll
jecxz
bound
mov
add
xor
mov
dec
cmpsb
add
pop
aam
mov
jb
aam
dec
jae
or
inc
add
add
add
xchg
add
imul
adc
mov
addb
leave
xchg
add
pop
lods
lock
dec
loope
dec
aad
sahf
out
adc
dec
mov
add
xchg
xchg
repnz
movsl
scas
cmpsl
mov
and
cwtl
lea
in
xchg
xchg
pushl
jmp
jl
add
mov
add
sbb
cmp
mov
mov
hlt
add
sahf
cmp
add
push
add
push
add
add
mov
or
stc
xor
cmp
cld
fs
cmc
rolb
jns
add
lock
addb
adc
push
add
mov
add
scas
pop
stos
loop
mov
mov
pusha
add
add
dec
repz
cwtl
stos
fdivrl
scas
fidivl
add
push
add
dec
loop
xor
cld
mov
testl
mov
lods
pop
lea
stos
cmp
xchg
add
xchg
mov
addb
add
pop
xchg
add
sbb
in
loop
stc
adc
mov
jmp
adc
movsl
xor
test
add
xchg
add
cld
seta
or
in
cltd
mov
jle
cmpsb
add
add
xor
int3
pop
insb
out
adc
sbb
add
and
add
rcrl
and
mov
xchg
jge
add
cs
add
xor
push
add
pop
sti
ret
xchg
gs
iret
dec
cli
inc
insl
mov
add
add
pushf
fnsave
add
aad
or
mov
es
mov
push
cmc
pop
lret
sub
add
lods
and
pop
xchg
add
scas
xchg
mov
add
xchg
loope
add
add
adc
add
stc
imul
jecxz
cmp
popa
pop
stos
fmuls
data16
inc
in
fnstcw
rolb
fisubl
cmpsl
mov
add
add
mov
adc
add
xor
scas
rolb
mov
mov
mov
add
xor
mov
add
popf
inc
add
add
push
out
xor
mov
dec
pop
out
test
mov
add
jo
adc
push
jb
imul
cmp
lahf
add
mov
daa
and
add
mov
mov
iret
addb
dec
jne
add
or
fcomp
add
imul
pop
loop
cmpsl
xchg
add
add
ljmp
cltd
hlt
add
cmp
push
faddp
das
push
nop
add
jns
mov
dec
xlat
cmp
fmulp
les
push
add
fmulp
or
or
imul
test
lods
sbb
add
rolb
outsb
inc
add
inc
add
add
mov
mov
mov
cwtl
mov
fsubp
jns
xchg
cmpsb
add
lock
dec
or
pop
push
add
xlat
enter
add
pop
movsb
add
mov
sbb
insb
insb
out
lock
filds
add
test
lods
push
pusha
add
adc
add
cvtpi2ps
aas
js
in
call
add
add
add
test
add
lcall
add
shll
pop
int
add
icebp
sbb
dec
test
sbb
ret
add
add
sbb
scas
pop
xchg
add
in
cwtl
aas
add
add
ficompl
rolb
int3
jmp
add
jmp
inc
add
sub
inc
add
decl
popf
mov
add
pop
outsl
rolb
mov
inc
add
adc
mov
add
add
xchg
push
add
push
movsb
add
cld
fldt
or
or
mov
gs
jne
sahf
adc
sub
xor
xchg
cli
and
mov
jb
sbb
xor
mov
add
add
add
rolb
mov
add
sub
or
adc
mov
push
outsb
mov
scas
or
sbb
pop
in
push
add
add
push
jb
idivl
add
outsl
mov
inc
add
push
add
xchg
shrl
add
add
add
push
add
mov
rolb
push
xchg
add
inc
add
sahf
out
jno
xlat
xor
mov
add
mov
add
jae
out
adc
add
pop
addb
push
push
add
mov
jle
sub
popa
scas
push
add
dec
mov
pop
movb
adc
xor
add
add
mov
add
push
add
decl
fsubs
add
cli
and
mov
push
sub
and
or
cli
rolb
fdivr
dec
sbb
xchg
mov
mov
push
mov
mov
std
and
aaa
push
mov
daa
popa
jae
enter
adc
dec
jnp
push
call
xor
dec
das
inc
xor
jl
add
rcrl
rolb
loop
scas
repz
dec
int
mov
fistpl
lods
adc
and
out
cmp
add
aam
les
mov
add
xlat
pushf
in
add
sub
sar
subl
add
sbb
add
sbb
add
std
add
sbb
mov
cmp
dec
sbb
add
inc
pop
aas
inc
xlat
loop
add
mov
jns
add
add
or
add
notl
mov
xchg
and
mov
ffreep
sub
add
sub
mov
inc
add
jae
or
sahf
pushf
std
pop
dec
insb
adc
lds
push
data16
sbbl
add
shll
jecxz
sbb
add
add
nop
add
jmp
add
iret
arpl
jecxz
nop
add
popf
addb
add
mov
in
add
decl
fadd
mov
add
jb
mov
rcrl
dec
int3
push
add
dec
outsl
pop
mov
mov
push
jp
add
add
xchg
test
xchg
and
test
mov
imul
pop
pop
leave
mov
out
add
jl
add
mov
push
add
punpckhbw
enter
fldenv
pop
das
and
mov
jle
add
add
adc
gs
push
rolb
enter
xchg
mov
call
xor
add
add
add
dec
hlt
add
add
push
movsb
add
aad
mov
and
aas
dec
mov
adc
cmpsb
add
cmpsb
add
sti
rolb
test
add
sarl
xchg
add
xor
mov
add
cwtl
into
ja
fld1
imul
xchg
mov
movsb
add
mov
add
je
aam
dec
mov
sub
add
push
add
xchg
rolb
addr16
ds
sbb
add
in
pusha
add
add
mov
aaa
pop
aam
mov
das
mov
sbb
cs
outsl
sub
lods
test
mov
sub
mov
ret
movsl
jb
stc
ds
sub
push
add
data16
sub
add
add
pop
mov
adc
addb
cmc
stc
inc
add
lea
ja
cltd
ret
jo
mov
xchg
add
jl
jl
mov
std
out
cltd
repnz
add
int3
and
cmp
outsl
arpl
out
fsubl
mov
bound
mov
fwait
inc
add
inc
or
mov
fcmovne
sbb
pushf
adc
dec
int
add
test
add
in
pop
xchg
add
andl
fs
jmp
mov
add
lahf
mov
dec
test
xchg
add
add
xchg
add
mov
add
cs
aaa
push
add
ffree
add
mov
add
add
cld
out
sbb
mov
leave
inc
add
add
cmp
dec
test
mov
mov
and
mov
add
adc
mov
add
add
data16
adc
mov
gs
mov
incl
or
subl
push
add
mov
sbb
adc
jge
xchg
add
add
add
add
scas
xchg
pop
sub
add
dec
rcrl
aad
bound
mov
inc
lock
flds
fwait
sub
je
push
loope
sbb
push
add
lret
or
add
adc
rolb
jp
repnz
mov
push
add
add
pop
jnp
mov
push
add
or
inc
add
add
add
aam
push
add
jge
dec
rolb
jl
inc
mov
jecxz
fcompl
jno
add
dec
out
stos
ret
push
add
sbb
lret
mov
sahf
jge
sub
add
daa
xor
fwait
int3
lds
faddl
faddl
xchg
mov
add
dec
pushf
test
adc
hlt
add
dec
jle
dec
das
xlat
jle
add
mov
mov
mov
scas
jmp
pop
popf
dec
push
jns
sub
fmuls
mov
add
lret
in
adc
lahf
mov
jle
sbb
jo
jmp
mov
push
out
addb
add
out
icebp
push
push
testb
jecxz
mov
pusha
add
call
and
add
add
and
mov
add
jmp
add
out
je
adc
add
mov
and
add
int3
dec
add
jns
and
mov
ret
lods
mov
add
cmp
addb
push
loopne
xor
dec
lods
cmp
imul
or
sbb
scas
out
aad
sahf
jp
add
lods
not
inc
pop
xchg
add
icebp
pop
sub
add
out
xchg
add
push
add
addb
sahf
mov
push
add
mov
or
ss
add
add
movsl
adc
xchg
pop
rolb
in
add
mov
test
jbe
pop
mov
fcoms
xlat
jns
push
xchg
add
dec
or
mov
push
push
add
add
pusha
add
test
pop
sub
cld
fildll
mov
push
popf
sbb
push
add
out
push
add
add
xor
add
addb
iret
je
mov
fcomp
mov
cmp
add
lret
push
testb
addb
ret
inc
push
out
addb
add
in
shrl
xlat
adc
rcrl
int
test
add
lods
test
cmc
movsl
jge
cmpsb
add
scas
mov
add
orl
add
add
add
inc
add
cmp
add
pop
repz
fistpll
inc
add
lods
hlt
add
call
sub
add
add
add
adc
jmp
addl
add
add
dec
cltd
and
and
mov
push
stos
mov
cmp
lret
or
outsb
lcall
into
inc
push
add
pop
mov
frstor
or
add
mov
pop
aaa
insl
sbb
insl
jge
mov
ret
inc
mov
jb
mov
add
repz
cmp
and
mov
fsubrs
pop
repz
mov
inc
arpl
ljmp
inc
outsl
call
add
or
lods
jbe
fistl
rolb
adc
mull
xor
add
mov
scas
add
sti
or
add
popf
jbe
mov
lea
ds
add
add
add
mov
and
cmpsb
add
add
pop
jno
addl
pshufw
add
add
add
inc
add
sahf
jecxz
add
add
xchg
or
imul
pop
outsl
repnz
add
out
rolb
jne
add
xor
add
add
xchg
stc
call
add
test
fisubs
add
add
add
movb
test
dec
xchg
scas
inc
add
add
xchg
xchg
sub
call
add
pop
arpl
mov
adc
xchg
dec
mov
add
push
add
lcall
cmp
imul
pop
jle
addb
sub
popa
insl
leave
mov
add
xchg
jns
or
cmp
jp
add
hlt
add
dec
popa
cmp
loopne
mov
add
test
loope
add
push
add
rep
mov
xor
mov
jb
or
add
push
out
ss
add
mov
push
add
xlat
and
mov
dec
jae
add
add
add
shll
popa
iret
sti
popa
jp
add
imul
add
rolb
lret
push
add
inc
add
add
int
and
pushf
push
or
jno
add
sub
add
add
add
add
add
les
ja
cld
xchg
or
mov
add
call
test
xlat
inc
pop
xor
inc
add
add
gs
xchg
cmc
pop
les
repnz
and
add
mov
pop
fldcw
mov
sbb
add
mov
test
add
add
push
sarl
outsb
dec
clc
fimull
add
add
cmp
shll
add
pop
cmp
add
add
inc
add
lods
cmc
add
mov
je
jns
add
add
xchg
add
stos
xlat
mov
shll
into
mov
repz
icebp
ljmp
add
add
pop
test
inc
mov
mov
jno
xchg
or
add
insl
lods
or
addr16
add
lahf
daa
push
push
add
add
test
enter
aas
cltd
and
mov
mov
addb
mov
adc
aaa
sub
dec
stos
push
add
add
rolb
push
and
ret
out
pop
mov
xchg
add
mov
sbb
dec
sub
dec
stos
sbb
pop
add
add
inc
sbb
inc
add
add
repnz
addb
add
imul
add
lret
dec
cwtl
je
and
sub
or
fdivl
rorl
add
pop
xor
dec
mov
add
movsb
add
int3
push
add
mov
jae
pop
jbe
cmp
sbb
mov
add
mov
sub
jmp
imul
add
mov
jp
and
mov
mov
mov
or
test
mov
mov
push
sbb
add
add
jecxz
shll
data16
push
add
cmpsb
add
imul
add
mov
add
mov
les
sbb
fs
pop
fidivrl
aad
insl
cli
adc
xchg
lods
popf
lods
add
inc
add
call
sbb
add
pop
shll
xor
push
jg
stos
jne
adc
pop
jne
add
mov
fcmovnbe
add
jge
rcll
stc
dec
cmp
and
sub
ret
xlat
lock
fiadds
std
sahf
lcall
loopne
xlat
push
add
dec
mov
xchg
add
add
xor
add
add
jb
jnp
sti
jg
pop
jp
xchg
jnp
add
inc
jge
mov
mov
int3
cmp
mov
mov
add
add
lret
call
sbb
add
jbe
jns
mov
or
dec
cltd
testb
push
aad
scas
lret
das
scas
rolb
sbb
ljmp
xor
fnstcw
pop
pop
xlat
out
or
add
data16
inc
ja
aaa
bound
mov
add
addb
push
inc
dec
mov
mov
gs
xchg
je
sub
ds
add
add
inc
add
cmp
add
xor
cmc
xchg
jle
add
icebp
movsb
add
xor
subl
mov
in
mov
lock
lret
add
add
stos
fs
pop
repz
mov
or
cmp
mov
add
fmull
lret
jle
sbb
movb
add
add
mov
cmp
addr16
test
aas
mov
add
cmpsb
add
push
add
repz
push
cltd
sub
mov
add
fisttps
adc
enter
add
sbb
jl
mov
or
add
imul
mov
xchg
add
daa
xchg
add
add
add
sbb
add
cwtl
add
mov
out
or
dec
stc
je
clc
cmovnp
cmpl
add
hlt
add
addb
bound
mov
inc
add
add
add
push
add
pop
test
jb
cli
push
xchg
add
add
jns
mov
dec
int
aam
sub
pop
pop
pop
xchg
call
add
add
xchg
mov
sbb
lods
cmp
int3
adc
xchg
mov
dec
sbb
jns
test
mov
das
xor
movq
xchg
add
add
jns
xor
sub
dec
dec
and
add
mov
add
sahf
push
dec
jne
pop
sahf
pop
cli
xchg
add
movsl
test
imul
call
repnz
sub
dec
aam
aas
outsb
lret
inc
pop
cwtl
sbb
mov
stos
mov
arpl
mov
add
sbb
sub
loop
adc
sar
movsl
xchg
xor
test
call
add
lret
xor
add
push
add
add
data16
daa
pop
bound
mov
daa
ds
push
push
add
stos
mov
arpl
mov
and
mov
mov
push
add
inc
outsl
mov
outsb
aas
jne
std
fisttpll
jg
popa
mov
das
sbb
imul
mov
add
mov
push
xor
cmp
xor
inc
add
jecxz
mov
add
add
fdivrl
adc
add
adc
jb
jmp
dec
in
push
add
add
pop
dec
add
mov
add
add
cmp
xchg
movb
jl
cmpsl
xchg
adc
add
add
adc
aam
xor
or
loope
add
jae
push
add
mov
add
data16
mov
pop
add
test
cmpsb
add
xchg
mov
add
testb
jle
mov
mov
add
pop
and
xor
pop
test
push
pop
cmp
cmpsb
add
xchg
add
mov
cmp
pop
fwait
cmc
mov
add
add
add
test
adc
lahf
outsb
lret
adc
incb
add
mov
rcl
add
pop
sbb
enter
sub
inc
add
add
add
pop
xlat
mov
je
ss
rdtsc
adc
ds
divl
sbb
scas
cmp
shll
js
mov
add
add
add
dec
inc
ret
add
fcoms
push
add
mov
ds
cmp
das
mov
roll
add
test
mov
ljmp
add
add
add
add
mov
adc
mov
leave
and
mov
jo
test
add
add
jb
or
add
add
add
ja
or
add
into
loopne
lds
jbe
mov
push
add
lods
stos
cli
add
mov
les
xchg
add
add
xor
jno
jno
push
cmpsb
add
add
fnstcw
in
cmpl
add
iret
pusha
add
mov
stos
les
testl
and
pushl
sbb
test
mov
push
add
add
add
dec
fbstp
les
les
hlt
add
add
testb
add
sbb
dec
push
add
rcr
bound
mov
add
adc
add
jbe
fwait
outsb
adc
cld
mov
insl
jl
add
add
add
lock
iret
addb
dec
test
imull
lret
jp
loope
jmp
jmp
in
fidivs
add
push
xchg
cmpsb
add
mov
pop
jnp
nop
add
add
dec
out
cmpsl
inc
add
in
aam
add
test
std
addb
sbb
das
mov
bound
mov
les
push
add
repnz
add
jns
jp
add
mov
xlat
pop
push
pop
repz
push
sbb
in
sub
add
add
cltd
or
add
inc
test
out
mov
cmpsl
sbb
mov
push
cmc
sbb
add
repz
or
add
or
cmpsb
add
push
call
ja
sbb
hlt
add
ds
jecxz
sub
sbb
mov
cmp
out
cmp
or
add
mov
pop
mov
add
add
ljmp
rolb
outsl
pop
or
lea
mov
inc
or
jno
add
mov
call
imul
adc
sti
cmp
add
int3
test
pushf
push
xchg
add
test
test
add
add
jns
cmp
lcall
insl
icebp
mov
addb
in
les
lods
lods
cmp
add
mov
cmp
cmp
mov
test
cmc
push
lea
inc
rolb
xchg
cwtl
mov
or
push
dec
pop
dec
std
repz
xchg
add
push
add
inc
add
add
inc
add
cltd
dec
ja
xchg
inc
add
add
add
add
insl
call
sub
inc
add
jo
sub
inc
bound
mov
stos
mov
lods
imul
addb
jg
cmpsb
add
in
out
push
add
add
add
add
in
cld
stc
addb
adc
addb
add
pusha
add
add
movd
mov
aam
push
add
add
and
pop
mov
add
xchg
fwait
rolb
rolb
inc
add
mov
add
add
jne
mov
add
add
cmpsb
add
add
mov
sub
cmp
fldcw
nop
add
aaa
pop
call
call
sbb
cmp
imul
mov
adc
icebp
insb
cs
inc
sub
in
and
mov
enter
in
ja
dec
mov
add
mov
out
jg
cmpsl
dec
inc
adc
inc
add
cmp
mov
push
add
inc
cld
cmp
ret
mov
add
fisttps
add
mov
or
add
sbb
add
mov
add
push
mov
js
add
lcall
pop
xchg
mov
stc
jo
cltd
pusha
add
hlt
add
add
add
mov
mov
mov
imul
push
add
mov
add
cld
push
add
mov
jecxz
push
cwtl
xor
add
mov
push
mov
add
dec
ret
and
int
cmp
dec
mov
jb
stos
mov
mov
sub
add
mov
aad
mov
add
add
add
je
jnp
or
cld
out
add
add
add
adc
arpl
add
inc
add
add
xchg
jbe
lahf
fstpl
lods
sbb
jbe
daa
dec
addl
pop
mov
mov
arpl
add
add
loop
jno
sub
mov
fwait
or
mov
cmp
add
jg
add
add
xchg
add
add
adc
or
add
pushf
mov
or
bound
mov
add
mov
xlat
or
lock
mov
add
add
jp
fldenv
rolb
and
mov
xchg
add
add
iret
push
add
mov
add
pop
fisttpll
data16
fstpl
sbb
and
pop
inc
xchg
add
cmpsb
add
loopne
push
sub
aaa
int
dec
mov
mov
mov
add
cltd
cmc
mov
cli
pushf
adc
jecxz
add
imul
xor
add
cmp
inc
add
jns
add
add
cli
mov
add
mov
add
xchg
das
aad
sahf
pusha
add
adcl
mov
inc
add
mov
lcall
stos
rolb
add
adc
out
pop
push
jp
add
add
mov
sahf
ds
adc
mov
adc
pop
push
addr16
add
add
add
pusha
add
rolb
test
mov
add
ljmp
add
adc
jp
push
jo
movb
add
movsb
add
xor
add
sbb
mov
mov
int
add
xor
sbb
xchg
pop
roll
fists
mov
inc
add
dec
xchg
pushf
out
data16
insl
pop
add
ret
imul
sti
lcall
inc
add
jmp
add
rorl
mov
add
rolb
mov
das
push
add
inc
inc
test
cli
sahf
sbb
sbb
push
add
testb
je
out
jbe
dec
add
sbb
add
gs
jae
add
enter
in
pop
dec
or
jns
add
ljmp
add
pop
pop
pop
pop
mov
cmpsb
add
jae
add
cli
mov
icebp
out
mov
dec
mov
mov
test
xlat
pop
sbb
add
and
mov
loopne
push
test
iret
outsl
adc
add
add
scas
mov
add
or
ret
lods
int3
ficompl
out
add
add
inc
jae
add
jnp
dec
cmp
dec
or
inc
mov
add
mov
sbb
add
add
mov
jle,pn
mov
add
les
jno
pop
cmc
mov
mov
dec
mov
push
mov
push
add
add
add
jbe
cld
movsb
add
jp
add
add
fidivs
scas
and
cli
bound
mov
xor
shl
mov
add
outsl
jbe
fneni(8087
add
loope
bound
mov
movb
add
loop
js
mov
dec
cmp
decb
inc
add
rolb
sbb
add
iret
mov
or
add
add
data16
ja
xchg
add
movsb
add
lods
jl
rcll
cmc
add
add
pop
gs
adc
push
bound
mov
dec
sbb
mov
scas
add
lods
and
sub
gs
scas
int3
rcll
pop
aas
cmp
xlat
jo
dec
outsb
imul
add
icebp
add
add
lcall
in
add
adc
imul
fs
dec
aad
bound
mov
xor
cmp
xchg
xor
daa
mov
add
add
jns
lods
push
add
mov
mov
mov
push
add
add
xchg
add
mov
add
fsubl
mov
lods
jbe
sarl
sbb
test
lods
and
lods
and
mov
add
add
mov
inc
add
hlt
add
add
jl
cmp
xchg
add
cld
cmpsb
add
push
cmp
mov
add
mov
and
mov
addb
fstpt
mov
fbstp
jne
mov
add
xchg
imul
stos
and
mov
add
add
or
add
test
js
add
xchg
push
add
jp
inc
mov
or
add
mov
xor
fcomip
jle
scas
mov
add
mov
bound
mov
scas
jne
inc
add
sub
add
je
mov
add
add
add
add
or
mov
dec
movsb
add
out
lock
fsubr
pusha
add
add
movsl
jge
or
pop
jp
addb
adc
add
add
or
shl
lock
jecxz
arpl
movsl
ss
pop
ja
cmp
add
out
push
add
mov
sbb
mov
sbb
add
lods
data16
inc
add
cs
xor
cltd
sub
add
xchg
add
add
in
scas
push
add
les
or
je
repnz
push
add
pop
stc
lcall
xor
add
add
cld
roll
and
stos
cmpsl
xchg
push
add
cmp
push
add
inc
add
add
mov
fisubrl
sbb
test
inc
xchg
pop
adc
pop
push
scas
fdivrp
sbb
xchg
add
mov
enter
add
mov
add
nop
add
adc
pop
or
dec
repz
sbb
cmpl
add
addb
pop
sbb
cmp
cmpsl
mov
mov
addl
int
data16
add
in
ret
or
add
pop
mov
fwait
in
add
je
testb
mov
movsl
in
dec
fidivl
add
jno
xor
xor
xor
sahf
adc
inc
add
int3
mov
in
sbb
movsl
das
data16
movb
add
mov
lret
sbb
add
xchg
outsb
aas
push
add
lods
xlat
jo
fwait
adc
ret
inc
add
mov
fcmovb
push
add
lea
push
add
lock
add
stos
rolb
sub
scas
lahf
add
mov
inc
aaa
lcall
jns
dec
dec
lret
add
jae
mov
jbe
cmc
fidivrl
mov
stc
jmp
dec
push
pop
xchg
and
in
and
mov
mov
xchg
dec
sub
in
mov
lahf
hlt
add
iret
mov
movsl
inc
testb
sahf
cltd
sti
mov
rcll
mov
xchg
mov
xchg
add
add
mov
icebp
clc
pop
cmp
mov
add
add
adc
enter
fiadds
push
rolb
jg
rolb
jg
pop
or
pusha
add
add
xlat
dec
pop
arpl
mov
add
jg
test
mov
icebp
movsl
or
add
jne
add
fs
add
add
imul
rolb
add
xor
icebp
addb
sbb
sub
shrl
mov
outsl
and
out
es
daa
aad
test
jge
repnz
add
adc
cmpsl
push
fidivl
add
mov
add
rolb
add
add
add
or
add
insb
sbb
in
jbe
cmp
add
xor
add
insb
push
clc
int
add
add
mov
ret
cld
mov
jmp
add
test
pop
stos
fstpl
popa
xchg
add
cmpsb
add
pushf
push
add
fmull
movsb
add
add
and
inc
add
or
add
stos
mov
stos
or
aaa
gs
mov
sub
cmc
das
xor
sub
add
mov
addb
sub
cmpsb
add
add
inc
or
cmp
add
test
inc
push
add
jno
adc
sbb
imul
add
add
call
sti
or
mov
pop
fsub
cltd
mov
or
jmp
push
add
dec
jg,pn
pop
movb
add
add
stos
adc
daa
pop
push
inc
add
imul
in
repnz
mov
mov
sub
add
xor
add
add
into
xchg
std
mov
dec
sub
mov
pushl
cmpsl
add
cli
jmp
add
mov
jb
lea
adc
aas
mov
jmp
mov
add
add
aaa
jmp
add
xchg
imul
dec
ljmp
mov
ds
xor
rolb
jne
add
pop
cmp
mov
mov
add
adc
mov
xchg
les
gs
sbb
pop
bound
mov
add
sub
add
sub
and
pop
shll
roll
mov
mov
jb
mov
or
adc
add
xchg
add
sbb
pop
aaa
fistl
add
add
out
dec
adc
xor
add
inc
add
add
sub
filds
add
mov
ficoms
movsb
add
or
mov
xchg
add
in
or
iret
int
jmp
jmp
add
mov
fisttpl
add
add
in
xor
add
dec
push
dec
xchg
mov
iret
out
sbb
lret
add
add
aad
add
rolb
arpl
out
ja
mov
add
test
lods
cmp
push
add
nop
add
cmpsl
outsl
ljmp
in
je
adc
adc
add
mov
call
xchg
push
inc
add
dec
sbb
add
add
push
add
pop
push
adc
xchg
mov
mov
fmul
sbb
dec
or
ret
mov
pop
fsubp
sbb
lret
jle
add
subps
addb
xchg
std
inc
sbb
xor
fwait
pop
mov
jae
test
jg
add
cmpsb
add
add
or
mov
pop
sbb
add
xchg
int3
push
add
add
in
pop
int
add
add
or
jecxz
aas
ljmp
add
inc
push
stc
xor
insb
rolb
jl
add
loopne
aam
in
xchg
add
sahf
push
add
add
mov
mov
rol
add
push
test
add
mov
ljmp
sti
dec
dec
movb
add
add
pushf
jno
mov
das
andl
fistl
ret
push
add
add
addb
push
pushf
push
mov
loopne
mov
add
mov
aas
repnz
bound
mov
or
jmp
cld
aad
add
mov
add
sub
add
sbb
add
xchg
add
add
mov
add
pop
pusha
add
pop
fs
add
add
cmp
lahf
dec
pop
ret
fdivs
add
leave
adcl
add
sub
imul
in
xor
push
inc
add
sub
add
add
mov
jo
inc
enter
in
cli
jo
pushf
mov
fcomip
add
cmp
jl
add
imul
xor
loop
mov
jo
xor
add
mov
out
pop
cltd
popa
enter
or
add
test
adc
icebp
and
mov
bound
mov
inc
or
add
push
xor
testb
loope
push
add
add
add
dec
pop
xor
inc
jns
sub
mov
fdivr
mov
xchg
add
adc
testb
add
pop
mov
movb
daa
inc
shll
mov
or
push
xor
jmp
mov
std
data16
pop
sub
xchg
mov
add
pop
xlat
mov
mov
outsl
das
xlat
andl
add
mov
add
add
and
fdivp
add
mov
in
xor
dec
movsb
add
add
mov
sbb
add
add
clc
ret
add
pop
test
pop
movsb
add
add
adc
lahf
and
add
cmp
stos
or
scas
inc
maxps
cmovae
pushf
lods
movsb
add
mov
push
add
add
add
sub
add
lret
mov
mov
jne
add
movb
add
add
add
pop
push
xchg
dec
xchg
mov
jle
add
add
add
mov
add
mov
add
add
dec
xchg
jnp
pusha
add
mov
add
add
adc
add
rolb
sub
pop
jle
jmp
mov
cmp
mov
add
ja
outsb
mov
movb
loope
add
add
mov
fucomi
or
mov
add
sbb
loopne
cld
dec
repz
jmp
add
and
das
pop
adc
xor
lea
loopne
int
hlt
add
repz
add
mov
jne
loopne
mov
or
pop
aam
addb
in
jo
add
mov
and
mov
add
pushl
add
cltd
mov
add
mov
jns
add
mov
nop
add
mov
in
clc
loope
sub
xlat
dec
rolb
insl
sbb
gs
add
add
int3
sub
flds
mov
jnp
movsb
add
mov
or
jge
cmp
loope
enter
mov
in
loope
add
daa
push
push
add
add
aas
sahf
aas
inc
add
fwait
mov
mov
cmp
loopne
js
push
add
mov
dec
leave
push
add
push
add
push
add
or
or
add
add
add
lods
lock
sbb
mov
add
cmc
clc
pop
dec
sbb
xchg
add
out
mov
mov
clc
rolb
or
add
push
add
cmp
add
mov
add
add
add
xor
push
add
mov
jb
mov
xor
iret
add
pop
mov
mov
add
mov
mov
mov
mov
cmp
sti
xchg
push
sbb
dec
jb
or
mov
jae
dec
int3
jmp
push
outsl
push
push
add
fldt
push
add
add
add
add
add
add
mov
push
add
sub
add
add
add
sbb
scas
cmp
xchg
dec
xor
cmp
dec
mov
add
outsl
mov
insb
mov
mov
add
xchg
testb
add
sbb
int3
adc
inc
pushf
dec
cmpsl
sub
jmp
add
push
add
add
pop
add
mov
mov
sub
add
add
aam
jbe
sub
popa
bound
mov
mov
add
addr16
dec
and
jg
add
mov
movsb
add
push
jnp
mov
stos
xchg
pop
cmpsb
add
movb
add
inc
add
mov
movsb
add
inc
mov
imul
add
aas
adc
add
jmp
lea
add
add
mov
js
fcoml
lea
shll
fldcw
add
mov
add
outsb
push
add
rolb
and
scas
arpl
add
push
pop
push
add
and
add
cmpsb
add
mov
push
xor
pop
mov
jne
adc
add
popf
xchg
add
lahf
pushf
pop
lea
cli
cmc
add
inc
add
les
dec
sub
jne
push
add
pushf
arpl
jb
jo
push
dec
mov
jecxz
add
fs
add
push
adc
mov
into
mov
stos
leave
adc
mov
add
sahf
and
daa
jns
add
aaa
push
lea
mov
dec
push
add
add
mov
dec
jp
add
bound
mov
xchg
add
in
ljmp
push
ja
cmpsl
pushf
xchg
pop
sbb
dec
mov
fimull
inc
out
xchg
sbb
adc
adc
enter
mov
add
cmpsb
add
dec
pusha
add
and
add
rcll
xor
inc
add
add
sub
xor
push
mov
add
pop
and
mov
add
xor
sub
or
stc
lret
in
fld1
adc
fwait
cmp
dec
xor
push
add
pop
imul
rorl
dec
sahf
sahf
aaa
cld
fsubr
or
repz
aam
mov
cld
push
xchg
adc
movb
xor
pop
in
mov
adc
or
stc
or
mov
test
sbb
jne
sub
and
pop
idivl
dec
pop
xchg
push
add
add
add
out
sub
movsb
add
add
into
in
push
add
add
add
mov
int3
pop
repnz
into
adc
jno
add
pop
je
pushf
or
and
mov
add
add
xchg
gs
and
negl
aas
push
add
add
mov
popa
aaa
adc
add
add
mov
mov
add
dec
insl
mov
call
fsubl
inc
add
movb
pop
dec
and
push
test
mov
aaa
paddsb
test
mov
dec
pop
mov
fists
lahf
push
add
mov
dec
lods
xchg
cmp
jne
movb
and
mov
inc
jg
add
mov
and
xor
shrl
faddp
add
addb
push
xchg
add
add
add
mov
scas
loopne
addb
xor
stc
pop
hlt
add
jb
mov
sbb
repnz
dec
mov
fsub
add
add
push
add
mov
add
mov
add
inc
add
mov
add
data16
add
xor
jge
fimuls
sbb
add
add
add
sbb
adc
ja
push
fdivrl
and
mov
stos
sub
xchg
add
mov
add
addr16
xchg
dec
cmp
nop
add
add
into
mov
add
flds
js
push
add
int3
pushf
mov
mov
push
add
movsl
scas
and
or
dec
lock
mov
add
push
add
xor
jl
or
sub
mov
pop
mov
add
fwait
out
icebp
xchg
sub
mov
add
or
lods
adc
push
push
add
or
ja
lds
mov
add
stc
gs
fwait
int
jns
outsl
xchg
add
add
add
add
cmp
xchg
fimull
add
jb
push
add
pop
pop
mov
add
mov
cwtl
xchg
add
sti
add
add
xchg
xor
mov
test
cwtl
add
add
xor
int3
mov
sub
nop
add
add
add
add
add
mov
fiaddl
incl
add
cmpsb
add
add
add
add
test
mov
ds
add
insb
bound
mov
add
cli
aaa
lret
les
aaa
sub
jp
add
lret
mov
je
mov
xor
add
inc
or
add
addl
add
fwait
xor
lret
cmp
and
add
adc
add
and
mov
sbb
cltd
test
add
fbstp
outsl
ret
add
mov
nop
add
bound
mov
add
xchg
dec
test
xor
dec
cmp
xchg
jo
push
add
mov
jg
add
push
add
fidivrs
cmp
and
ds
aam
nop
add
ja
inc
add
aam
and
rolb
dec
out
xor
mov
mov
add
shll
cmp
frstor
add
xor
push
ficomps
lahf
bound
mov
mov
gs
adc
adc
xor
sbb
push
gs
test
add
mov
testl
inc
adc
and
mov
add
pushf
addb
add
xchg
mov
add
add
add
rcrl
add
mov
mov
lods
xchg
jne
push
add
add
dec
adc
sti
fxch
mov
add
inc
jp
sub
add
pushf
pop
xor
nop
add
pop
jge
add
movsl
and
add
mov
jecxz
add
add
pop
inc
imul
repnz
add
add
jg
add
out
stc
int3
test
add
add
test
add
adc
cmpsb
add
ret
jge
mov
jmp
jb
push
or
add
add
add
push
lahf
aam
test
push
add
out
sub
outsl
test
dec
stos
or
add
lods
sbb
add
aaa
mov
jo
mov
shrl
add
loop
lret
mov
and
mov
enter
pop
in
fadds
cltd
and
mov
add
movsl
xor
jp
into
test
scas
xchg
sbb
and
movb
testb
outsl
fldl
mov
sbb
test
add
aaa
lock
add
inc
test
pop
push
add
aas
loopne
pop
faddl
push
xchg
pop
outsl
jae
inc
add
jle
jle
xor
addb
add
add
add
push
xchg
add
loope
in
arpl
loope
add
add
add
es
xchg
fcmovbe
add
add
add
add
xchg
sbb
shrl
mov
add
mov
dec
arpl
or
add
cs
addb
add
into
mov
add
xchg
cwtl
pop
out
movb
imul
fistl
dec
inc
inc
movsb
add
sbb
add
fprem1
sbb
lods
popa
test
or
addb
mov
and
mov
add
mov
add
push
lock
movb
add
add
add
add
and
add
test
in
stc
fadd
movswl
dec
pop
jmp
add
add
aad
mov
and
mov
mov
add
or
and
pusha
add
add
add
jb
mov
inc
imul
mov
jge
add
sub
add
hlt
add
movsb
add
add
push
push
adc
add
add
and
mov
movsl
addb
add
addb
test
outsb
inc
lock
aaa
lahf
jl
stc
xlat
scas
or
push
add
jbe
push
add
add
imul
mov
mov
cmpsl
xchg
push
add
loope
add
add
outsb
add
xchg
aam
imul
inc
add
add
mov
jne
dec
push
add
cmp
push
add
sti
add
out
and
xlat
jmp
add
notl
mov
xchg
add
add
jl
add
push
add
jg
push
test
adc
xor
add
mov
lods
aad
outsl
adc
test
lcall
pop
dec
and
adc
mov
add
add
xchg
mov
add
sub
call
add
add
xchg
ljmp
imull
fidivl
in
add
ljmp
add
jne
fbstp
aad
adc
dec
test
add
sbb
dec
jnp
jnp
call
inc
adc
fistl
mov
movntps
and
mov
aam
cmp
fidivl
add
jmp
cld
mov
and
mov
sub
add
insl
scas
push
fimuls
add
add
and
jg
sbb
pop
inc
mov
test
lds
mov
adc
testl
dec
loop
loope
or
add
ret
in
cwtl
cmp
test
add
sbb
add
lods
repz
add
add
add
mov
add
test
frstor
dec
popf
popa
cmp
insb
mov
insb
mov
pop
stc
pusha
add
add
cmp
scas
hlt
add
add
pushf
ljmp
pop
sub
ds
cmp
sub
pushf
push
pop
lods
mov
iret
js
add
jmp
mov
inc
and
mov
out
mov
push
add
add
and
mov
add
iret
mov
roll
add
ja
in
ret
add
enter
add
ret
iret
movb
add
add
add
mov
push
nop
add
ret
inc
add
mov
add
movb
sbb
add
aaa
js
cmpsb
add
into
rorl
add
dec
xchg
add
or
xor
pop
mov
xchg
cs
jnp
or
pop
mov
cmp
popa
pop
push
add
jnp
add
add
pushf
add
xchg
or
das
or
or
add
dec
lock
ss
add
arpl
loop
push
pusha
add
jge
in
arpl
inc
add
mov
mov
adc
cmp
jg
xlat
int3
mov
push
fwait
add
add
add
mov
or
rcrl
adc
or
insb
sub
add
add
push
add
jbe
mov
add
add
aam
and
jg
pop
leave
mov
or
test
adc
add
add
outsl
inc
movsl
sahf
in
fstsw
xor
xlat
popf
lcall
test
add
add
add
aas
mov
mov
or
add
mov
lods
insl
lret
cmp
inc
jnp
add
add
add
fldcw
add
repz
pop
mov
ret
aas
jle
push
arpl
pop
js
pop
or
mov
adc
add
add
add
and
add
add
xchg
stos
lret
mov
in
xor
sub
add
inc
add
add
addb
cld
adc
pop
in
add
cmp
mov
movsl
clc
sbb
stos
cli
sbb
pop
aas
mov
mov
mov
mov
lahf
into
pop
xor
mov
jmp
sbb
add
shll
add
mov
xchg
les
push
add
clc
cli
repz
push
je
dec
idiv
std
js
add
add
lock
testb
sub
stos
out
add
sbb
dec
test
add
xchg
add
add
add
iret
gs
jns
test
imull
mov
je
xchg
jge
sbb
and
mov
sbb
int3
int
adc
push
addr16
pop
mov
push
adc
repnz
out
repz
add
push
push
add
sbb
pop
cmp
addl
mov
and
xchg
jae
add
xchg
add
add
add
mov
cmc
inc
add
pop
out
mov
sbb
mov
jge
insb
sti
test
lret
bound
mov
je
mov
jns
or
pop
loop
cwtl
sti
dec
mov
out
jnp
lock
pop
xchg
add
mov
jnp
push
add
pop
arpl
add
outsl
xor
xchg
and
repz
frndint
adc
sbb
rcl
add
add
add
add
pop
movsb
add
leave
fcoml
aad
add
jae
inc
or
adc
adc
xchg
add
add
ljmp
insb
jg
add
ficoms
and
outsb
mov
dec
fnstenv
add
cmp
add
cld
mov
pop
mov
inc
add
xor
sub
add
push
test
imul
xor
xchg
hlt
add
ret
aam
jmp
xchg
sub
movsb
add
xchg
stos
out
stos
ja
jp
sar
add
loope
jge
dec
mov
mov
adc
subl
mov
dec
pop
cmp
movsl
xor
add
mov
sti
out
jbe
and
xchg
in
pop
or
add
add
lods
popa
adc
loope
dec
insb
add
cltd
dec
sbb
xchg
sub
add
add
mov
outsl
pushl
add
xchg
add
mov
xor
jecxz
add
test
popf
int3
dec
imul
jg
add
pushf
dec
lret
xor
stc
xchg
fisubrs
push
add
add
lock
fbstp
popf
jecxz
out
cli
cmpsl
das
stos
testb
jl
mov
shll
jae
and
mov
lods
fucom
adc
pop
fnsave
add
mov
lock
pop
or
pop
popa
mov
nop
add
add
push
xchg
add
add
scas
aaa
add
test
and
push
add
movb
adc
jge
lahf
test
mov
cmp
add
pushf
inc
add
dec
int
dec
add
mov
or
adc
lock
cmp
mov
inc
or
push
std
mov
inc
push
test
lock
cmpsb
add
dec
mov
add
cmp
or
add
push
add
out
push
xor
mov
add
arpl
add
mov
mov
sbb
jl
lahf
mov
add
xchg
add
lods
test
int
sub
adc
inc
adc
xor
or
les
cmpl
fbld
out
stc
imul
fldcw
add
mov
int
cltd
push
add
dec
xchg
add
test
mov
je
mov
hlt
add
add
jle
jmp
add
lcall
inc
adc
scas
inc
add
push
lret
movsb
add
aad
add
add
add
jecxz
repz
pop
rolb
add
aaa
xchg
add
push
add
sahf
adc
mov
mov
add
jno
mov
cwtl
dec
rolb
add
addr16
add
cmp
xor
push
jae
rolb
pop
repnz
loop
fcmovb
add
add
add
push
add
stc
sbb
push
add
in
daa
xor
xchg
aad
mov
aas
or
sub
jl
lods
repnz
mov
add
cs
add
sub
xor
data16
ficoml
add
leave
push
pop
into
sbb
in
nop
add
mov
shl
sbb
add
push
add
daa
sbb
add
enter
mov
int3
mov
add
popa
lods
pop
stc
out
sub
add
add
add
adcl
fstpt
push
cmp
add
mov
xor
mov
add
or
xlat
adc
add
aad
add
or
imul
and
add
les
fistpll
mov
mov
add
test
imul
popl
sbb
add
add
mov
aas
dec
test
mov
add
insl
sub
ds
lods
cld
sub
in
lock
add
pop
sub
add
add
mov
bound
mov
cli
lea
mov
add
outsb
cmp
clc
adc
add
lret
mov
push
out
insb
push
add
jmp
rorl
and
add
mov
enter
sbb
in
jne
add
add
dec
iret
outsb
pop
fwait
ret
out
clc
stos
push
add
lret
add
pop
jmp
add
add
add
sub
fwait
jb
mov
push
xchg
lret
sbb
add
mov
dec
xor
scas
and
mov
outsb
jg
fimuls
pop
xchg
add
push
jl
add
std
add
mov
pop
xchg
add
stos
push
icebp
fbld
add
sub
add
cmpsl
push
sahf
mov
lea
add
arpl
mov
push
stos
inc
inc
xchg
push
add
int
sub
ficompl
mov
inc
add
inc
add
add
pop
je
ds
add
add
add
ljmp
clc
sbb
sub
xchg
inc
add
add
xchg
dec
mov
bound
mov
mov
pusha
add
test
fldl
push
inc
in
mov
cmp
xor
dec
push
or
daa
aas
and
add
lret
mov
jge
add
push
ror
mov
scas
push
add
mov
lret
mov
add
add
pop
pop
popf
das
jle
call
add
and
mov
mov
jp
roll
xor
cwtl
jae
add
cli
add
rolb
fstpt
or
leave
xchg
mov
or
xchg
lods
cmp
mov
push
rcr
sbb
add
lret
orl
pop
push
add
add
out
jnp
add
mov
add
add
jo
test
add
add
add
loop
int3
mov
movsl
push
in
add
push
sub
adc
mov
add
das
xor
aas
push
nop
add
fdivrs
adc
negl
cmp
add
ret
add
mov
je
or
imul
add
or
pop
outsl
sarl
pop
cwtl
addb
add
add
pushf
dec
psubb
cltd
push
add
adc
mov
add
add
sbb
out
jmp
add
add
jmp
and
mov
push
rolb
jae
add
jo
sbb
ljmp
data16
cmp
mov
enter
mov
add
add
add
sub
xor
loope
inc
add
add
mov
add
add
xor
and
mov
sbb
add
mov
add
bound
mov
mov
push
movsl
add
mov
xchg
lods
push
cmp
ficomps
mov
add
rolb
xor
and
aad
jb
addb
add
imul
jge
add
rorl
popf
rcl
fst
add
xchg
cld
add
add
mov
jb
jb
push
add
add
mov
sbb
jns
add
mov
mov
sbb
cmpsb
add
addr16
add
add
add
sub
jp
insb
repnz
add
add
mov
sub
movsl
lahf
popa
hlt
add
add
dec
dec
mov
movsb
add
sub
jae
add
sti
sub
add
add
movsl
aad
cmpsb
add
jg
out
gs
sub
and
mov
pusha
add
jge
jnp
jg
mov
jns
mov
lahf
ret
pop
sbb
and
lods
mov
ret
adc
adc
daa
xor
push
add
daa
xor
dec
xchg
add
gs
lods
cmp
add
fldt
popf
xlat
dec
add
add
iret
or
aam
sub
ficomps
add
sbb
mov
sub
add
or
add
add
mov
xchg
sbb
add
dec
pop
pop
and
mov
cltd
sub
xor
xorl
dec
out
rolb
lods
nop
add
dec
xor
add
popa
jmp
rcr
xchg
js
out
adc
add
inc
call
add
add
push
int
cmp
lcall
add
add
add
pop
js
sbb
add
sub
adc
cltd
cmp
add
and
mov
mov
add
mov
sub
ret
add
outsb
lds
jl
pop
jp
pop
pop
cld
add
mov
dec
xor
jns
aaa
or
mov
pushf
xchg
gs
add
xor
add
pop
stc
jns
adc
cli
mov
or
add
add
add
lcall
fildll
add
pop
adc
outsb
repz
add
mov
dec
cwtl
push
sbb
add
dec
enter
insl
lahf
mov
dec
xchg
dec
push
add
add
add
mov
fcoml
mov
div
add
test
xor
lods
imul
add
ljmp
cmp
fnstenv
add
clc
in
cmp
inc
add
adc
mov
pop
bound
mov
add
pop
push
je
or
xor
pavgb
fmul
push
add
cmc
push
mov
add
sbb
xchg
xchg
inc
add
hlt
add
mov
xchg
add
add
add
pop
sub
add
xor
mov
mov
add
addb
add
and
add
stos
jmp
jmp
cs
sbb
adc
jno
sbb
enter
add
movsb
add
das
adc
je
leave
xor
mov
mov
jns
add
jo
dec
inc
add
sub
repz
gs
testb
sub
add
rorl
add
add
movb
iret
test
mov
pop
or
xchg
mov
cmp
scas
dec
addr16
lret
jno
sub
lret
inc
mov
repnz
cmpsl
add
std
enter
pop
aas
sbb
add
insb
aaa
subl
add
hlt
add
add
jns
jmp
jno
cs
dec
add
mov
pop
call
mov
bndldx
ret
rolb
int3
jns
add
stc
fnstsw
jnp
add
add
add
add
cmc
cmp
lcall
and
add
add
add
pop
push
add
or
add
add
std
fdivs
add
fwait
insl
sbb
rolb
stos
mov
sbb
xor
jle,pt
and
lret
aaa
mov
add
cmp
aas
or
add
push
push
add
and
mov
test
clc
js
out
inc
jne
and
mov
iret
aam
je
pusha
add
out
shrl
add
mov
ja
add
out
int3
and
mov
add
or
rolb
add
mov
add
icebp
scas
leave
xchg
and
rolb
clc
cmpsl
xor
or
push
add
inc
add
movsl
mov
fiaddl
add
add
add
add
add
ss
add
mov
jmp
sbb
aad
add
out
bound
mov
push
sbb
jp
data16
lret
adc
mov
call
push
add
add
inc
add
add
sub
mov
pop
xchg
lahf
cli
sbb
add
fcoms
add
dec
js
push
mov
add
push
outsb
std
mov
add
dec
sbb
sbb
mov
pop
jmp
add
mov
push
add
sarl
jnp
mov
add
lods
xchg
leave
mov
add
add
add
and
and
mov
repz
mov
mov
push
add
mov
xor
push
add
sbb
mov
inc
push
add
dec
imul
mov
jb
call
aam
sbbl
cmp
add
inc
add
mov
jmp
add
xor
cmp
mov
mov
add
daa
xor
add
in
add
aaa
push
add
xor
or
add
xor
mov
or
add
add
add
xchg
sbb
add
fsubrs
add
inc
ret
lret
pop
mov
xor
rolb
pop
xchg
push
mov
adc
cli
outsb
inc
jbe
adc
sub
xchg
cmc
adc
lds
xor
dec
mov
mov
sti
mov
dec
in
mov
stc
fisttpl
fsubl
das
scas
push
add
lret
cmpsb
add
mov
sub
fisttpl
sub
mov
add
mov
lret
popf
out
and
mov
add
and
add
mov
add
add
xchg
add
mov
pop
iret
and
loope
add
push
add
aas
or
adc
mov
loopne
xor
fisubrl
cmp
ret
loope
cmpsb
add
mull
ret
ds
fidivrl
rcll
pop
inc
mov
pop
jmp
add
mov
jp
cmp
add
lret
std
pop
jbe
inc
add
add
add
add
mov
add
into
int3
lods
out
mov
add
pop
sub
add
add
add
sub
cld
pushf
test
es
add
out
and
mov
sbb
mov
mov
lock
sarl
add
aad
add
xchg
pop
test
testl
mov
pop
sub
cmovo
mov
insl
repnz
add
add
mov
xorl
shl
mov
xchg
add
or
iret
imul
mov
push
add
rorl
adc
mov
testb
jae
pop
pop
jg
loope
sub
cmp
movsb
add
add
add
add
test
into
imul
jo
push
inc
imul
rcll
inc
fcompl
mov
add
add
stc
bound
mov
add
lods
inc
add
mov
mov
scas
xor
pop
pop
test
push
dec
mov
mov
stc
out
int3
stc
push
movsb
add
fistps
inc
mov
add
push
add
and
add
rolb
scas
repz
loope
add
mov
test
mov
out
xor
jl
mov
pushf
lahf
loopne
fmull
cmp
add
cmp
sub
add
and
cmp
mov
je
pusha
add
stos
aad
ss
add
inc
add
icebp
sbb
jo
enter
test
add
sub
in
lds
arpl
jo
das
adc
add
mov
mov
sahf
adc
and
inc
repz
mov
insl
xchg
add
jae
testl
add
xchg
pop
and
pop
cs
insl
les
or
daa
lods
into
mov
dec
and
dec
add
nop
add
mov
add
add
lock
lods
or
add
add
pop
nop
add
filds
add
push
stos
ror
add
cld
cmp
add
aad
sbbl
stc
sbb
dec
jae
jl
or
movsl
jnp
mov
jno
aas
scas
lods
xchg
add
add
loop
mov
pop
cmc
mov
add
mov
and
fcoms
dec
pop
addb
xchg
add
add
add
or
scas
sbb
add
push
add
adc
sti
jnp
mov
cmp
add
loopne
mov
mov
fsub
add
pushf
nop
add
sub
out
outsb
ret
add
add
jecxz
add
or
mov
add
jne
sbb
push
add
popa
and
add
mov
add
add
cmp
les
xor
or
xchg
ret
sbb
xor
add
sub
add
adc
dec
iret
mov
orl
xchg
xor
dec
out
sub
add
jb
jle
add
fdivs
nop
add
in
cmp
pop
inc
jmp
push
add
ljmp
add
add
add
mov
jmp
mov
out
pushf
pop
out
mov
push
add
std
lret
adc
loopne
push
aam
pushf
fmull
pop
mov
scas
add
xchg
dec
mov
test
add
xor
mov
insl
movb
sbb
clc
cmp
xor
inc
add
add
sub
inc
and
fnstcw
add
in
test
push
dec
and
mov
je
int
push
mov
cmp
imul
jmp
mov
sbbl
test
add
inc
jo
jl
jae
add
in
cli
mov
pop
loope
inc
add
in
mov
inc
add
add
sbb
pop
push
fsubs
xchg
or
jmp
add
inc
pop
cmc
xchg
ds
sub
add
xchg
xlat
scas
pop
test
add
pusha
add
fadd
sbb
lret
inc
sub
jle
jge
das
mov
add
xor
xor
movsl
and
xchg
scas
mov
pop
cmp
fmull
push
cmp
lock
add
and
addr16
xchg
data16
mov
xchg
cmp
add
add
mov
or
in
cmc
test
mov
sti
nop
add
jb
repz
std
movb
add
dec
and
inc
add
add
iret
jg
inc
dec
sub
mov
lods
sub
and
aaa
mov
ljmp
arpl
dec
sbb
or
mov
or
mov
ds
dec
test
rolb
pop
adc
or
add
mov
push
add
mov
add
std
sarl
mov
ljmp
add
push
dec
stc
out
jae
add
fidivrs
pop
push
add
add
inc
add
xor
sti
mov
movl
add
xor
mov
imul
pop
inc
add
jl
enter
hlt
add
notl
aam
aad
add
stos
adc
loopne
add
bound
mov
adc
inc
add
pusha
add
fsubrs
pop
rolb
and
dec
insb
mov
add
icebp
sbb
das
js
add
lret
inc
adc
jle
iret
xchg
jno
adc
push
add
adc
inc
add
mov
lods
popf
test
inc
and
add
outsl
sbb
add
cmovbe
mov
xor
xchg
dec
adc
push
add
xchg
add
lds
lahf
fldl
push
add
and
add
jo
mov
add
adcl
rcll
iret
out
xor
and
mov
add
add
lods
and
add
cwtl
cmp
add
bound
mov
add
xchg
push
add
mov
xor
sub
add
mov
dec
jo
mov
add
pop
inc
add
enter
sub
jbe
test
popa
xor
mov
sub
jnp
test
mov
push
add
scas
dec
xlat
out
inc
add
sub
repz
adc
sub
mov
stos
jmp
add
mov
ds
popf
test
dec
fidivs
add
mov
pop
or
dec
mov
mov
mov
int
add
xor
mov
inc
add
fildll
addr16
test
xor
or
pop
xchg
jp
andl
push
mov
inc
mov
jo
cld
insl
jns
nop
add
xor
hlt
add
add
sbb
xlat
std
lods
sbb
sti
push
imul
mov
xchg
jnp
or
add
inc
clc
je
dec
push
inc
jp
lods
imul
pop
das
mov
cmpsb
add
and
mov
add
cmp
xchg
or
addb
lds
je
pop
sub
add
add
imul
add
test
loopne
add
mov
lret
jmp
pushf
jecxz
xchg
stos
inc
adc
inc
add
add
jle
add
sub
mov
es
inc
call
daa
xchg
lret
xchg
add
jge
les
out
and
add
add
add
aas
cmp
je
bound
mov
or
stos
lea
les
xchg
add
shrl
addb
dec
inc
and
or
add
mov
hlt
add
mov
add
push
add
add
add
and
xchg
jbe
repz
aaa
dec
adc
imul
mov
rolb
mov
mov
test
loop
inc
push
add
push
add
mov
add
int
sub
push
in
jl
add
iret
imul
leave
lahf
incl
or
push
add
arpl
or
mov
add
and
jno
add
add
into
mov
or
or
test
add
add
sbb
clc
fdivrs
mov
scas
mov
fisttps
add
add
jo
outsb
js
into
sahf
ljmp
add
fldenv
add
mov
adc
ret
jae
add
in
cmp
sahf
repz
mov
add
add
mov
adc
paddq
pop
cmp
sub
add
add
jo
push
fldt
lds
dec
xchg
in
rolb
out
adc
dec
mov
pop
outsb
pop
test
add
jge
add
mov
add
cmp
mov
inc
add
add
addb
cmpsb
add
sub
xor
outsl
rolb
dec
push
inc
cld
pop
test
loop
xor
sub
test
mov
inc
cmp
add
mov
adc
add
stc
test
jns
or
pop
push
stos
inc
add
insl
mov
sub
sbb
popf
dec
push
add
fdiv
add
add
and
cmpsb
add
loop
cmp
xchg
add
pushf
push
rolb
clc
icebp
mov
movsl
jo
add
neg
and
mov
add
addb
lock
cli
mov
pop
data16
in
xor
xlat
movsl
mov
mov
xchg
xlat
mov
scas
xchg
sbbl
scas
into
add
mov
add
test
add
add
add
cmpsb
add
adc
push
push
add
add
mov
jle
sub
add
enter
fisubrs
add
cmp
mov
sub
mov
leave
pop
push
je
sbb
movb
popa
sbb
in
or
inc
adcl
xchg
add
gs
adc
cli
jnp
add
cmpsb
add
xchg
xchg
add
pushf
cmp
ds
add
movsb
add
hlt
add
fdivrp
movb
add
outsl
adc
lcall
mov
and
aas
jmp
pushf
js
imul
icebp
nop
add
lahf
xchg
std
scas
cmpsl
idivl
pop
es
movsb
add
add
sub
push
fdivrs
add
add
into
jl
sub
movsb
add
mov
popa
testb
aaa
sub
pop
subl
mov
cmpsl
adc
mov
add
mov
fiaddl
imul
stos
add
add
mov
repnz
pop
ljmp
jmp
out
in
in
add
mov
loopne
push
shll
inc
add
mov
inc
add
inc
add
hlt
add
mov
sub
dec
fwait
je
mov
and
add
inc
sbb
fsubr
fildll
add
mov
mov
or
ljmp
adc
pop
cmp
add
insb
or
push
mov
mov
add
dec
nop
add
addb
push
mov
or
ret
xor
inc
out
push
add
add
addb
adc
stos
add
mov
xor
test
add
jmp
sub
lds
loope
mov
iret
imul
fsubr
sbb
call
add
xor
mov
inc
add
sbb
data16
mov
icebp
loopne
outsb
lds
stos
xor
inc
add
mov
xor
decb
and
mov
add
add
jecxz
add
mov
and
repz
mov
dec
jbe
push
add
xor
add
add
add
add
mov
xchg
add
cmp
cmpsb
add
mov
xchg
cmp
repnz
xorl
jle
xchg
fwait
adc
popa
xchg
add
in
pop
push
add
out
xchg
add
xchg
add
add
mov
addb
jnp
mov
pop
add
jecxz
add
add
pusha
add
add
add
mov
mov
daa
into
mov
rolb
sbb
add
call
add
add
mov
sbb
add
repnz
imul
sbb
add
add
xlat
or
addr16
cld
mov
add
xlat
adc
icebp
lock
xchg
loop
cmp
movsb
add
test
push
daa
shll
imul
arpl
mov
add
add
mov
add
rolb
push
les
xor
movsb
add
aam
mov
jno
add
jo
pop
and
sub
add
adc
mov
mov
dec
imul
or
sub
inc
add
pop
imul
mov
inc
xor
adc
jmp
mov
out
popf
leave
out
jbe
jo
cld
push
mov
jge
icebp
lock
int
stos
insb
cwtl
pop
call
add
add
add
add
rorl
add
addr16
scas
jae
outsl
mov
ds
loope
add
popa
inc
add
add
add
lods
inc
push
sbb
divl
ss
add
add
or
push
add
add
add
cld
mov
add
mov
xor
push
add
mov
cmpsl
mov
rolb
cmp
adc
inc
add
movsb
add
and
in
add
mov
push
add
loop
ljmp
add
add
push
mov
jbe
adc
jecxz
add
cmpsb
add
pop
sub
add
mov
jne
aad
add
sti
xchg
adc
lret
add
add
mov
fstpl
data16
sahf
daa
mov
daa
dec
out
sub
and
loope
xchg
popa
dec
lcall
inc
add
lret
or
dec
int3
or
xlat
mov
jmp
mov
add
mov
add
jb
loopne
popa
leave
in
fsts
add
push
add
and
das
xchg
pusha
add
aas
adc
dec
ljmp
popf
push
add
mov
add
sbb
aam
shl
inc
pop
sbb
cltd
out
repnz
dec
sub
add
ljmp
ljmp
adc
mov
popf
adc
daa
loop
sub
add
jb
add
sub
movsb
add
fiadds
xchg
movb
mov
ret
cmp
in
jno
add
xchg
add
dec
mov
mov
pop
movb
ret
fldl
sbb
loopne
int3
rolb
add
jnp
and
mov
neg
nop
add
lods
cmpsl
pop
mov
cmp
add
rolb
mov
push
cmp
lret
repz
add
lcall
push
lret
add
jp
dec
aad
add
mov
in
gs
add
dec
xchg
add
cli
cmp
xchg
sti
jmp
data16
mov
mov
and
add
addr16
add
out
inc
pop
jmp
scas
mov
add
xor
add
add
adc
pop
and
xor
mull
add
fisubrs
daa
pop
xchg
add
inc
add
add
into
pop
pop
mov
xor
add
fidivrs
mov
test
loope
das
pop
add
xchg
fldl2e
scas
ds
xchg
add
cs
pop
adc
mov
mov
add
rolb
subl
sbb
mov
rcll
add
add
add
jge
bound
mov
movb
add
add
imul
add
add
shll
add
pop
test
faddl
xchg
add
loope
xlat
pop
sbb
movb
fisubrl
mov
ret
add
pop
loop
jp
and
mov
cmp
int3
adc
jmp
jle
mov
cs
lods
mov
add
daa
pop
in
cli
dec
xor
add
leave
test
jmp
add
imul
das
mov
das
fstl
pop
xor
pop
iret
aad
add
add
inc
int
sbb
jbe
lahf
rcl
add
push
ljmp
ljmp
js
sbb
lcall
cmp
mov
sbb
add
xchg
add
xor
push
add
jl
adc
add
call
fistpll
add
add
in
add
neg
int3
mov
add
add
stc
clc
lret
imul
stos
jae
mov
add
pop
repnz
add
dec
out
add
add
in
and
mov
outsl
in
pop
je
test
add
push
rcrl
jge
stos
call
outsb
cmp
add
add
or
add
clc
outsl
xchg
testb
add
leave
pop
xor
add
sub
dec
inc
add
add
mov
jo
in
jns
mov
xor
lock
pop
inc
add
mov
sbb
add
loope
ret
dec
mov
adc
add
movsl
pop
inc
add
add
inc
add
push
mov
or
cltd
adcl
test
dec
adc
mov
inc
cmp
jne
add
add
setg
add
jae
loope
jbe
popa
lods
push
addb
add
cmp
sti
mov
mov
cmp
jne
add
jae
jne
popa
mov
add
add
and
add
aad
sti
add
mov
mov
add
add
and
add
xor
mov
out
pop
add
add
add
les
mov
mov
add
add
mov
mov
daa
movb
ss
repnz
add
lods
cmp
mov
mov
add
xor
and
add
add
push
xchg
add
addr16
add
add
jae
cmpsl
push
add
add
push
sar
sahf
jo
or
arpl
and
les
xchg
xchg
add
ljmp
test
sbb
cs
mov
scas
push
add
je
nop
add
sbb
add
pop
cmp
lods
or
add
cmp
add
stc
jbe
jle
sti
mov
add
add
add
stos
scas
mov
pop
addb
sub
movsb
add
cwtl
out
mov
add
leave
mov
out
fwait
std
les
insb
pop
in
inc
add
xor
cmpsl
sti
cwtl
mov
mov
mov
mov
mov
cmp
sbb
out
fistps
inc
add
push
sbb
pusha
add
mov
loopne
cmp
add
mov
add
stos
cmp
push
add
add
aaa
adc
xchg
dec
mov
add
jno
fwait
mov
jecxz
jnp
add
mov
sbb
add
inc
enter
or
push
fwait
add
mov
xchg
add
mov
mov
pop
push
add
add
xlat
in
sbb
call
jge
add
inc
iret
jecxz
cmp
es
xchg
add
jb
stc
aad
cmc
and
mov
mov
push
add
repnz
or
add
cld
add
mov
add
mov
add
imul
in
add
addb
push
add
add
data16
add
mov
inc
mov
fisttps
add
inc
add
add
push
lds
in
mov
lods
negl
add
out
mov
jl
jge
push
stc
adc
outsb
enter
xor
lock
scas
xchg
add
mov
or
add
add
add
push
add
jl
sub
jp
addr16
add
mov
jg
add
sbb
lcall
inc
add
xchg
lcall
cwtl
jmp
std
dec
sbb
add
mov
inc
add
dec
test
add
add
add
je
addb
sbb
dec
fstl
pop
sub
scas
xor
add
lock
and
mov
mov
or
add
inc
cmp
std
or
fsts
add
inc
in
jmp
repnz
aam
jg
cmp
sbb
add
jge
add
xor
ljmp
mull
bound
mov
add
add
add
pop
mov
into
inc
add
pushf
xor
ljmp
add
lahf
push
mov
dec
cmc
fisubrl
add
push
add
add
jge
lret
mov
outsl
pop
push
jbe
add
std
mov
xor
xlat
testb
clc
cld
fstl
jne
inc
scas
in
cmp
iret
int
add
mov
sbb
add
add
add
add
add
push
add
iret
pop
rolb
mov
jmp
add
out
loop
pusha
add
cltd
es
add
add
loop
js
dec
idiv
mov
add
add
aaa
or
mov
int3
fdiv
mov
out
push
add
add
add
fnstcw
add
mov
jns
cmp
add
ds
test
add
cmp
pop
rolb
mov
dec
adc
add
and
and
mov
testb
cmc
pop
cmc
cld
out
subl
add
add
aas
xlat
popa
push
lret
rcl
xchg
testb
pop
rolb
aam
ss
aam
inc
xchg
mov
add
in
jne,pt
mov
inc
add
push
mov
mov
adc
in
pop
addb
add
add
inc
add
xor
leave
ljmp
add
lea
lret
mov
iret
mov
and
pushf
addr16
mov
xchg
dec
and
push
add
pop
mov
dec
xor
or
sbb
fsubs
iret
cmpsl
mov
sbb
repnz
cmc
adc
add
mov
pop
lock
mov
push
pushf
cmp
jb
cmp
sub
mov
add
lods
pushf
or
in
add
in
dec
fmuls
jp
dec
mov
inc
cmp
add
mov
sbb
jb
aam
lret
rolb
nop
add
jnp
xchg
lods
and
mov
add
add
pop
popa
pop
push
std
jno
or
jns
push
rolb
xchg
add
fidivl
ja
push
add
in
mov
popf
filds
pop
and
dec
loopne
scas
push
lock
mov
add
jae
lock
rolb
inc
add
data16
test
outsl
xchg
sahf
hlt
add
repnz
push
stos
add
xchg
pop
pusha
add
addb
xor
sub
sub
pop
add
pop
inc
stos
mov
mov
popa
outsl
adc
mov
aam
add
scas
cmpsb
add
add
lahf
or
rolb
test
xor
mov
add
and
testb
dec
or
fucomp
sub
push
mov
push
ss
sub
inc
out
pop
mov
dec
int
add
ja
jae
add
mov
js
jle
add
add
cwtl
je
jb
xor
push
add
outsb
fwait
mov
push
add
cwtl
lret
dec
mov
mov
cwtl
add
add
stc
test
addb
ds
cltd
mov
sbb
add
movsb
add
add
pop
jns
mov
mov
adc
lret
push
add
jae
mov
push
add
add
insl
aas
nop
add
inc
add
add
xchg
nop
add
lret
out
fwait
roll
xor
sub
mov
cmc
xlat
loopne
mov
movb
sub
imul
add
popf
inc
ja
ds
sbb
adc
mov
mov
mov
add
add
icebp
loop
mov
nop
add
add
nop
add
jp
sahf
inc
add
cmp
outsl
adc
nop
add
lahf
pop
xchg
add
sub
add
lods
les
test
add
cmp
mov
add
add
mov
jae
push
add
jns
add
xor
les
imul
icebp
rolb
xor
mov
adc
add
std
push
sti
iret
testb
push
add
addb
or
dec
loope
add
xchg
add
push
rcr
dec
jbe
sarl
addb
sub
add
mov
cmpsl
test
cmpsl
js
xchg
lods
push
add
xchg
xchg
add
and
lret
add
add
add
add
xchg
add
or
je
data16
add
outsb
mov
cmpsl
out
inc
clc
sbb
lret
add
add
and
mov
insb
or
adc
fwait
jg
int3
hlt
add
lea
cmc
mov
cmp
mov
roll
in
inc
jo
jno
mov
enter
cli
and
cli
dec
addr16
stos
dec
ljmp
add
add
adc
adc
rolb
pop
call
add
add
add
mov
inc
add
iret
add
cs
daa
mov
add
mov
out
sub
add
imul
leave
mov
bound
mov
daa
xor
push
mov
sub
cmp
call
add
mov
mov
sbb
add
sbb
pusha
add
lock
add
cli
xchg
add
pop
add
mov
add
aaa
jmp
xchg
or
repnz
dec
cmp
ret
xlat
add
insl
sbb
inc
add
es
mov
dec
xchg
add
sbb
add
add
mov
fwait
xor
adcl
clc
out
pop
xor
add
push
add
sub
in
and
mov
add
pop
fcoms
imul
add
inc
jno
add
pop
sub
add
sti
sbb
jb
xchg
add
mov
mov
mov
pushf
js
addr16
xor
addb
pusha
add
data16
cmp
dec
push
and
mov
icebp
add
mov
add
mov
jbe
mov
and
mov
add
xchg
add
add
sti
aam
aaa
test
cmpl
nop
add
add
fldt
aad
loopne
or
mov
add
cld
pop
out
mov
add
push
add
adc
add
push
add
or
outsl
inc
loopne
je
add
ret
testb
add
mov
cmp
add
pop
push
movsb
add
xchg
adc
sbb
push
push
ljmp
add
int3
rolb
mov
fcmovnbe
lret
clc
test
add
dec
mov
ljmp
movb
mov
jge
in
add
add
mov
pop
or
pop
or
add
aas
and
add
mov
add
pop
pop
lret
and
mov
aam
xor
push
add
dec
mov
in
les
out
xchg
stos
dec
ret
xchg
lahf
sub
xchg
add
lods
push
mov
pop
jg
rolb
add
ljmp
mov
add
aaa
mov
add
iret
inc
push
add
cmp
and
mov
cmp
aad
add
fsub
add
insl
aam
mov
dec
lds
add
mov
daa
in
mov
jne
push
movsb
add
sub
add
into
mov
rcl
insl
and
mov
add
add
mov
add
sahf
pop
adc
rolb
in
lea
or
sub
add
and
mov
int3
dec
popf
xchg
add
mov
add
add
addb
insl
icebp
mov
adcl
or
dec
xchg
xor
add
mov
test
in
mov
add
pop
faddl
add
scas
mov
into
adc
cli
jns
repnz
dec
and
fidivl
in
iret
gs
loop
inc
add
lock
sti
pop
jbe
push
mov
jle
pop
adcl
outsb
das
pop
in
add
mov
pop
rolb
incl
pop
addb
in
jp
das
in
mov
adc
push
and
mov
lods
xchg
add
ja
and
mov
cmpsl
xlat
cmpsl
add
mov
cmpsl
xchg
add
ret
mov
add
add
mov
mov
jbe
sub
sbb
pop
aaa
xchg
rcll
add
icebp
movsl
sub
inc
add
jne
jp
and
add
pop
mov
add
mov
add
frstor
addl
fistps
add
test
mov
xchg
cld
pop
repz
add
iret
iret
popf
pop
mov
rolb
cmc
test
pop
loope
pop
push
add
xchg
add
mov
cs
mov
mov
push
add
sub
jg
test
fcoml
out
outsl
push
lods
andl
adc
push
add
in
fbld
mov
cs
rolb
and
mov
lods
aas
dec
push
jns
add
cltd
inc
xchg
add
jl
add
rolb
fiadds
cld
addb
jge
fnstsw
aad
add
add
jbe
fmuls
pop
jp
arpl
les
mov
inc
xchg
pop
cmp
add
data16
xor
cwtl
inc
add
add
add
jecxz
add
insl
pop
ret
mov
mov
cltd
and
out
push
cmc
pop
ljmp
cmp
add
dec
movsb
add
add
add
add
lods
out
add
sbb
add
add
outsb
outsb
inc
add
pop
dec
adc
or
pop
test
add
in
rolb
and
data16
add
pop
mov
add
mov
add
loopnew
push
add
xchg
add
call
repz
add
bound
mov
add
add
and
lods
xchg
add
add
aas
daa
push
add
pop
repnz
add
mov
enter
lret
ds
add
add
mov
fldt
mov
add
sbb
sbb
add
jp
ja
jo
mov
adc
pusha
add
mov
loope
add
rolb
test
pop
adc
fisttpll
mov
sub
add
lods
and
pop
push
pop
test
lea
leave
xchg
dec
cmp
add
fdivp
adc
add
add
add
add
pop
test
imul
add
add
popf
jmp
sub
daa
push
add
rolb
sbbl
movsl
stos
sub
add
adc
xor
les
lea
add
out
insb
inc
add
and
xor
add
fnsave
ret
scas
and
mov
cmp
add
lods
dec
test
mov
add
add
add
cmp
mov
push
xlat
dec
inc
pop
xor
add
mov
add
rcrl
add
pop
xchg
add
sbb
xor
adc
xor
add
das
or
mov
fistpl
inc
add
add
shrl
add
add
add
lods
mov
in
stc
adc
stc
dec
dec
inc
add
add
add
enter
adc
mov
loop
pop
insb
and
xchg
add
movb
add
add
insb
and
mov
ret
jne
add
mov
jae
add
add
add
jo
in
outsb
xchg
add
test
testb
mov
inc
mov
pop
arpl
add
and
mov
shll
add
add
jnp
testb
add
mov
add
xor
inc
add
jge
add
fwait
mov
aad
cmp
mov
add
cmp
mov
add
testb
add
fisubs
add
mov
lret
jecxz
ret
add
add
lcall
add
jb
mov
lret
xor
mov
pop
xchg
inc
add
ret
add
out
mov
addb
pop
sbb
arpl
or
roll
mov
mov
repnz
push
into
add
mov
xor
stc
sub
dec
jae
enter
add
add
add
cli
rcrl
mov
icebp
cmp
imul
jae
xor
pusha
add
add
mov
mov
jne
clc
aas
fisttpll
add
stos
push
sub
add
and
mov
xor
pop
dec
mov
xchg
add
jnp
sub
mov
loopne
daa
test
enter
repz
pushf
and
xor
inc
stc
jle
add
add
add
add
add
lds
add
add
mov
jb
xchg
or
mov
or
mov
test
inc
mov
push
add
sub
sahf
inc
add
mov
add
xor
iret
test
lea
into
sub
xor
cmp
mov
push
add
mov
enter
inc
jl
xlat
jecxz
cld
icebp
pop
popa
jmp
orl
xchg
cmp
adc
lods
inc
dec
insl
cmp
xchg
sub
mov
xor
aas
movb
add
mov
sbb
pop
fists
mov
test
ficompl
dec
lret
sbb
push
add
and
mov
ficompl
add
aad
add
inc
add
add
push
testb
nop
add
push
add
std
hlt
add
test
or
pop
sti
mov
xchg
add
add
add
ret
scas
push
adc
and
mov
daa
fdivs
add
add
add
adc
shrl
push
sbb
fisubs
add
add
lret
sub
xor
add
rolb
mov
movb
cmpsb
add
shrl
or
std
rolb
push
add
add
add
leave
adc
iret
xchg
daa
dec
iret
cmp
pop
pop
or
fldl
add
add
cmpsb
add
dec
xlat
lret
push
add
dec
jg
jnp
lea
fildll
add
test
adc
push
add
insb
and
add
dec
xor
add
cmpsb
add
push
add
addr16
loop
cmc
js
push
popf
cmp
adc
xchg
ret
mov
pop
enter
add
dec
in
rolb
bound
mov
xor
es
xor
cmp
sti
cmc
lret
pop
jmp
xchg
fwait
ljmp
sub
mov
jo
pop
test
dec
add
addb
mov
add
add
add
mov
add
pop
in
jno
lahf
push
mov
jmp
cmp
push
mov
add
in
and
dec
hlt
add
and
push
mov
lock
push
add
mov
add
inc
add
mov
popa
popf
and
add
pusha
add
add
add
pop
and
mov
shr
lds
jmp
lret
fimuls
add
sub
add
jne
and
mov
add
jne
xchg
add
add
mov
mov
daa
popf
add
mov
test
mov
mov
jns
paddusw
fnstcw
frstor
inc
add
cli
pop
leave
push
lock
add
add
cmp
xchg
add
add
xchg
sti
movb
xchg
daa
jns
add
mov
lods
repnz
or
inc
add
add
add
push
cld
fisubl
mov
in
inc
and
push
add
mov
add
add
add
pop
nop
add
dec
loopne
pop
addl
add
inc
add
jp
adc
jge
call
cmp
add
and
xor
push
mov
pop
pop
lret
scas
dec
or
add
movsb
add
inc
add
iret
in
insl
mov
xchg
loop
jo
inc
add
cld
lods
aaa
in
in
loope
fadds
add
add
add
xor
mov
pushf
sub
add
add
xchg
xor
cltd
mov
mov
lret
add
test
add
pop
sbb
mov
das
cmc
addb
testb
add
dec
sbb
xchg
xlat
cs
add
ds
add
adc
stc
dec
xchg
and
add
enter
out
cmpsl
fstl
dec
and
add
scas
pop
fiadds
test
jge
add
mov
lods
mov
add
add
add
add
fwait
data16
or
cmp
add
add
pop
aaa
test
dec
push
add
xchg
clc
lods
test
add
add
in
cmp
cmp
hlt
add
fadd
add
add
add
in
into
lahf
loope
sbb
data16
scas
mov
add
data16
scas
cmc
stc
sub
mov
add
movsb
add
add
add
sub
pop
rolb
mov
sub
mov
ret
sarl
add
int
loope
add
jmp
arpl
cmp
ret
mov
lret
pop
push
add
add
push
add
scas
add
lods
fmull
enter
add
add
pop
push
add
fs
add
mov
dec
or
xchg
mov
add
or
add
icebp
add
pop
jmp
add
mov
jnp
cld
fisttps
mov
ljmp
add
shr
fisubrl
stos
adc
popa
mov
jp
data16
cmp
ret
push
lea
popa
sub
add
in
add
xor
cmp
lret
rolb
nop
add
mov
pop
cmpsl
cmp
ss
sbb
add
aam
xor
sub
mov
inc
jg
add
add
scas
pushf
rcrl
mov
stc
dec
cmpsl
clc
sti
mov
gs
movsb
add
add
push
addb
filds
add
cmp
test
jns
add
inc
add
ja
add
dec
inc
add
add
mov
mov
addr16
jecxz
add
mov
sbb
movb
or
lods
dec
outsl
rolb
scas
xor
dec
imul
mov
dec
int3
rcl
adc
sub
dec
xchg
inc
or
ja
mov
pop
cmp
add
add
and
ret
mov
data16
add
add
in
jbe
lret
mov
das
sub
mov
nop
add
xor
neg
push
add
push
add
scas
out
push
add
insl
dec
push
and
mov
stos
movsl
xchg
add
mov
dec
lods
xchg
add
add
add
iret
jno
add
cmpsl
inc
mov
sbb
or
and
jae
stc
loopne
sbb
enter
movsb
add
or
add
add
es
std
sub
inc
add
add
add
es
pop
std
xchg
sub
cltd
push
push
xor
inc
add
in
ljmp
add
add
jg
inc
out
je
addb
push
push
add
jp
scas
int
add
pop
shrl
dec
mov
add
stos
ja
xchg
pop
mov
les
push
test
mov
mov
ficompl
mov
movsl
xchg
add
int3
and
jmp
ja
add
sbb
add
add
or
add
ret
jg
add
add
mov
jnp
add
add
arpl
inc
add
sti
fwait
mov
push
add
cmp
add
add
add
inc
add
addl
add
add
add
push
add
jp
sub
icebp
lret
dec
rolb
divl
or
mov
add
mov
scas
push
cltd
push
add
add
je
xchg
add
push
add
xor
add
lods
mov
pop
ret
mov
cltd
mov
addr16
cmp
stos
pop
mov
pop
out
pmuludq
fldcw
insb
andl
int3
fsubl
movb
test
cmc
bound
mov
xchg
lods
jl
call
add
add
add
