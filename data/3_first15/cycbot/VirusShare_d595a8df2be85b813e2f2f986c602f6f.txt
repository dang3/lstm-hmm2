rol
add
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
fs
add
cmc
cmc
cmc
cmc
cmc
cmc
add
add
add
add
and
and
and
and
inc
inc
inc
fcomp
inc
inc
inc
inc
inc
inc
sub
sub
sub
sub
sub
sub
sub
pop
pop
pop
pop
pop
pop
add
add
add
add
jbe
add
add
jg
jg
jg
jg
jmp
jmp
jmp
jmp
jmp
les
add
add
add
sbb
sbb
sbb
sbb
sbb
add
add
add
cs
xlat
xlat
xlat
xlat
fisubrs
add
add
out
add
add
aas
aas
aas
aas
add
add
cmp
cmp
cmp
add
add
add
add
or
add
inc
inc
inc
add
add
add
pop
pop
xchg
sbb
add
add
sub
cwtl
cwtl
xchg
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
jp
push
push
test
mov
popl
inc
inc
lret
mov
jb
jns
add
sbb
sbb
jno
jno
jno
out
add
leave
gs
xor
dec
dec
dec
dec
add
jns
jns
add
add
add
add
ja
jmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
das
das
das
das
das
das
cli
cli
cli
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
fcomp
fadds
popf
popf
popf
popf
popf
inc
inc
mov
mov
jp
inc
inc
add
add
in
in
in
add
leave
leave
leave
leave
leave
xor
add
add
pop
pop
inc
inc
inc
inc
sbb
push
push
add
add
add
add
int3
int3
int3
add
pop
pop
pop
pop
pop
add
add
add
xchg
insl
insl
mov
mov
mov
mov
mov
mov
push
push
sub
sub
sub
push
inc
push
push
push
push
sbb
out
out
out
out
into
into
into
into
xchg
xchg
mov
mov
out
lods
add
fimuls
scas
scas
scas
scas
scas
jmp
rolb
fcmovnu
fcmovnu
fildl
add
div
div
divl
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
add
ds
add
add
add
fs
mov
mov
mov
add
add
add
add
loope
loope
loope
mov
add
add
add
orb
add
cmp
cmp
add
xor
add
add
dec
dec
dec
mov
fcmovu
fiaddl
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
loop
add
add
push
mov
add
push
push
push
push
push
nop
nop
nop
nop
add
and
and
dec
dec
dec
dec
dec
dec
div
div
pop
pop
pop
inc
inc
rcl
rcl
shlb
pop
pop
pop
pop
pop
pop
pop
pop
add
add
nop
nop
nop
nop
nop
or
add
add
add
add
add
add
popl
add
add
nop
nop
nop
nop
nop
or
or
into
into
into
into
adc
adc
adc
add
dec
int
add
add
add
movsl
movsl
movsl
adc
adc
or
stc
stc
stc
stc
stc
stc
stc
stc
sbb
xchg
add
or
adc
adc
adc
jno
jno
jno
add
add
roll
add
insl
add
ret
pushf
pushf
pushf
add
fs
imul
or
or
or
add
add
add
add
dec
xor
add
rcl
rcl
add
add
add
add
add
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
xchg
data16
add
cmp
cmp
cmp
cmp
cmp
add
add
fidivl
sbb
mov
add
push
js
xchg
xchg
xchg
xchg
xchg
or
or
or
or
jl
jl
ja
ja
ja
add
add
add
iret
iret
iret
iret
iret
iret
jo
jo
jo
nop
mov
mov
add
add
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
add
test
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
mov
or
jnp
jnp
jnp
jnp
jnp
jnp
lods
lods
lods
add
dec
dec
dec
dec
dec
dec
dec
add
add
leave
mov
mov
mov
xchg
jb
jb
jb
jb
jb
mov
mov
add
xor
inc
inc
sbb
sbb
div
mulb
and
and
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
add
add
add
add
sub
add
add
and
mov
add
add
scas
scas
scas
scas
scas
scas
adc
add
into
into
add
add
repz
movsl
sub
add
imul
imul
add
add
jecxz
jecxz
jecxz
xchg
xchg
xchg
xchg
xchg
sub
data16
data16
add
out
out
test
add
dec
int3
cmp
cmp
cmp
cmp
add
jno
add
in
add
add
sub
xor
xor
push
gs
outsb
outsb
outsb
outsb
outsb
out
and
popa
popa
popa
add
add
inc
inc
inc
inc
add
add
and
and
and
and
and
and
and
and
mov
add
aad
add
add
and
cmpsb
add
or
or
or
add
add
jne
jne
jne
popf
in
in
in
in
in
in
stos
stos
fs
add
fcmovu
ficoml
jno
add
add
add
pop
mov
movsb
movsb
movsb
add
add
add
add
loop
loop
loop
push
loop
xchg
add
scas
scas
sub
sub
mov
mov
add
add
add
add
mov
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
sbb
sbb
movsb
in
sahf
sahf
sahf
add
add
add
add
call
sub
sub
jecxz
jecxz
jecxz
sbb
fs
jecxz
jecxz
jecxz
jecxz
aam
mov
mov
mov
mov
mov
push
add
loope
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
add
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fildl
xchg
xchg
add
sub
sub
sub
sub
sub
add
sbb
sbb
push
daa
daa
add
add
add
stos
add
clc
clc
clc
clc
clc
clc
clc
mov
iret
iret
sbb
sbb
sbb
pop
pop
mov
mov
add
es
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
aaa
aas
aas
aas
aas
aas
aas
add
add
add
add
add
add
and
and
and
and
and
and
mov
add
test
add
add
add
add
add
add
add
sub
push
les
movsb
add
add
adc
adc
adc
adc
adc
adc
daa
add
insb
insb
insb
insb
insb
or
ljmp
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
aam
aam
aam
aam
add
add
add
iret
iret
insl
mov
and
add
inc
inc
inc
inc
add
add
add
push
push
add
stos
stos
stos
stos
stos
stos
stos
stos
add
jbe
jbe
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
xor
imul
imul
imul
imul
imul
addr16
pop
pop
pop
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
imul
cmp
clc
clc
loope
add
fisttpll
or
add
rcl
rcl
rolb
add
add
add
out
out
out
out
out
aad
aad
aad
aad
aad
aad
aad
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
add
mov
add
add
add
push
push
push
push
push
push
add
add
add
inc
add
xor
add
nop
nop
nop
nop
nop
lock
out
mov
add
rcl
rcll
nop
nop
nop
nop
dec
dec
dec
dec
dec
add
add
add
add
add
jno
jno
jbe
jbe
jbe
jbe
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
fwait
fwait
fwait
add
xchg
xchg
xchg
xchg
xchg
add
cmp
sti
sti
repnz
fwait
fwait
lods
lods
lods
lods
lods
lods
lods
ss
add
add
hlt
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
enter
test
add
add
mov
add
sub
mov
add
jmp
jmp
jmp
jmp
jmp
or
cmp
cmp
cmp
add
pusha
pusha
pusha
pusha
pusha
add
add
mov
and
dec
add
add
add
add
jge
adc
or
or
or
or
or
or
or
or
or
or
gs
add
push
push
push
sahf
sahf
sahf
dec
dec
add
add
add
add
dec
popa
outsl
outsl
insl
insl
insl
insl
insl
fwait
fwait
fwait
add
add
ds
gs
add
add
add
dec
dec
dec
dec
mov
sbb
addr16
add
add
add
add
aam
add
add
add
adc
adc
adc
add
xor
add
or
or
or
or
sbb
sbb
leave
leave
leave
leave
leave
leave
leave
addr16
lea
lea
rol
add
stos
stos
stos
stos
push
push
jno
jno
and
add
add
add
add
jns
jns
add
pop
pop
mov
add
add
add
jle
jle
add
add
mov
mov
add
add
add
add
sub
push
push
add
add
add
add
add
addl
jae
mov
addb
xchg
add
add
aam
add
movsb
movsb
mov
mov
add
add
add
ja
ja
stos
stos
stos
stos
stos
stos
stos
lock
incl
add
add
add
pop
xchg
xchg
jg
jg
jg
jg
jg
jg
jg
daa
daa
daa
daa
daa
daa
daa
jb
int
add
push
push
push
push
push
push
add
add
and
add
xchg
xchg
add
mov
dec
dec
push
push
xor
push
push
push
adc
adc
mov
mov
mov
mov
sti
sti
add
inc
inc
inc
sub
inc
jecxz
add
sub
lock
inc
inc
inc
inc
inc
fcomp
fsubs
and
out
out
mov
mov
mov
mov
mov
mov
jp
or
or
add
mov
or
or
or
inc
inc
inc
inc
movsb
movsb
add
push
push
push
push
push
push
push
push
out
out
out
out
out
out
push
push
pop
pop
pop
pop
mov
lret
jl
jl
cmp
cmp
test
div
testb
add
lods
lods
lods
lods
lods
lods
add
ss
add
iret
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
repz
push
in
in
add
add
add
pop
pop
add
add
add
jns
sub
les
add
out
mov
add
add
add
and
add
add
sbb
xchg
xchg
add
add
out
push
push
faddl
jecxz
jecxz
movl
add
add
add
add
and
and
and
stos
stos
stos
stos
stos
loope
loope
loope
loope
add
add
inc
inc
inc
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
fcmovnu
fcmovnu
add
mov
enter
enter
enter
repz
cs
add
add
add
xor
xor
xor
xor
xor
aad
aad
aad
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
sbb
add
leave
leave
leave
leave
leave
fcomp
fadds
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
data16
mov
mov
mov
mov
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
push
push
push
mov
mov
mov
add
jns
jns
jns
jns
jns
add
add
add
inc
inc
in
in
add
in
add
add
lahf
lahf
add
add
add
sub
lock
sbb
add
add
push
push
push
push
push
push
add
add
add
ss
and
adc
adc
adc
add
stc
lea
cmp
push
push
push
push
push
push
push
push
add
inc
inc
inc
inc
inc
add
add
or
add
cmovge
leave
xchg
xchg
xchg
xchg
out
add
add
and
add
add
and
and
and
and
and
and
and
cld
mov
add
add
xlat
or
inc
inc
inc
inc
jmp
add
dec
dec
dec
dec
dec
xor
xor
mov
add
and
and
and
fisttps
lahf
lahf
lahf
add
add
mov
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
lahf
jge
jge
jge
mov
mov
mov
add
mov
add
add
add
add
sbb
add
add
add
push
shrl
add
popa
popa
popa
popa
popa
popa
popa
in
insb
insb
insb
insb
add
add
sub
sbb
sub
sub
sub
sub
aaa
ss
out
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
push
push
push
cs
add
add
js
js
mov
mov
js
js
add
add
cmp
cmp
cmp
add
add
add
add
inc
inc
inc
inc
inc
add
fcmovnu
fcmovnu
fcmovnb
rol
rol
rol
add
add
add
mov
arpl
add
add
add
jae
add
mov
mov
add
add
arpl
or
add
ss
jnp
add
pusha
pusha
pop
pop
pop
pop
ds
stc
stc
fwait
fwait
fwait
fwait
jmp
jmp
jmp
cs
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
test
test
test
xchg
xchg
add
add
add
sub
jecxz
jecxz
jecxz
add
add
sbb
sbb
add
add
add
rcl
rcl
rcl
rcl
rcl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
aad
aad
xlat
push
add
add
add
add
in
in
in
in
outsl
outsl
outsl
add
add
add
insb
insb
insb
insb
pushf
pushf
pushf
add
fcmovnu
fcmovnu
fcmovnu
mov
cmp
cmp
push
push
push
add
add
rolb
mov
add
dec
dec
dec
dec
dec
dec
dec
dec
lahf
lahf
lahf
add
add
add
push
out
out
out
out
out
sldt
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
adc
adc
adc
stc
stc
add
add
in
in
add
sub
cmpsl
jl
jl
int3
int3
add
add
add
dec
dec
dec
dec
dec
add
add
jmp
mov
mov
xchg
add
mov
add
mov
add
add
add
fldcw
jge
movsl
movsl
movsl
inc
inc
or
or
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
ja
ja
ja
jbe
cs
add
add
mov
add
add
aam
aam
aam
aam
aam
aam
lahf
cs
add
add
loopne
loopne
loopne
loopne
movsl
movsl
add
add
add
or
out
icebp
icebp
dec
dec
push
add
ret
ret
cmp
cmp
cmp
cmp
out
out
out
ja
add
int
int
int
int
xor
xor
std
std
xchg
xchg
jo
jo
insl
insl
insl
insl
insl
push
pop
pop
incl
add
imul
cs
popa
mov
mov
leave
insb
insb
insb
insb
insb
insb
add
add
add
popf
popf
popf
popf
popf
popf
ja
xchg
add
add
add
jbe
jbe
enter
enter
xlat
xlat
xlat
xlat
xlat
xlat
xlat
std
std
std
std
paddb
add
xchg
xchg
xchg
xchg
add
ljmp
add
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
rol
rol
rol
sarl
int3
int3
int3
int3
int3
int3
add
push
push
mov
add
mov
out
out
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
mov
cmp
cmp
add
xor
xor
xor
jno
jno
jno
jno
jno
jno
add
add
add
push
lret
lret
lret
lret
addl
icebp
icebp
icebp
icebp
icebp
add
add
roll
add
add
add
add
insl
insl
jbe
jbe
jbe
jbe
add
mov
add
add
and
and
and
and
loope
pop
pop
pop
pop
add
add
in
in
in
in
add
inc
inc
inc
inc
and
and
adc
adc
ret
ret
ret
add
add
jb
jb
add
add
adc
adc
adc
add
cld
cld
cld
cld
cld
cld
cld
cld
add
outsl
outsl
outsl
add
add
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
add
in
in
in
in
in
insl
insl
add
mov
mov
ds
add
add
adc
adc
adc
adc
adc
test
xor
xor
add
jb
add
add
push
push
push
push
pop
pop
pop
pop
pop
jae
jae
into
into
into
into
into
into
into
into
stos
stos
stos
insb
clc
clc
clc
clc
clc
mov
jnp
jnp
jnp
jnp
pop
pop
add
add
xor
xor
xor
xor
xchg
xchg
jle
jle
adc
adc
adc
or
addl
add
add
popf
popf
popf
add
mov
movb
add
add
repnz
add
add
add
add
incb
xchg
test
test
add
add
add
add
das
das
inc
inc
push
push
push
add
dec
dec
addl
filds
and
and
leave
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
jl
jl
jl
jl
jl
jl
jl
jl
add
add
mov
add
add
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
movsl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
mov
mov
add
jbe
jbe
jbe
jbe
jbe
inc
add
add
sldt
add
div
adc
adc
adc
aad
aad
add
stos
stos
in
or
or
sahf
push
push
push
push
inc
inc
inc
outsb
outsb
inc
addl
in
in
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
add
add
add
ljmp
xlat
add
add
add
pop
pop
pop
lock
mov
push
push
push
push
push
push
push
push
lret
repz
adc
pop
pop
pop
add
dec
dec
mov
enter
fcmovnu
fcmovu
add
mov
mov
paddq
inc
add
add
add
repz
pop
pop
pop
pop
pop
add
add
add
mov
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
in
in
lret
lret
add
mov
rcl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cli
cli
cli
cli
cli
cli
cli
cli
or
or
rol
add
add
add
and
addb
add
add
add
rclb
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
add
add
push
push
jbe
jbe
add
add
rcl
rcl
adc
adc
adc
mov
data16
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
sahf
adc
add
add
add
aam
aam
add
jae
jae
stc
stc
stc
stc
stc
stc
stc
stc
div
add
add
fldl
add
add
jb
jb
push
push
push
push
push
push
push
in
in
in
in
in
in
in
in
in
in
filds
mov
cmc
cmc
test
inc
inc
inc
inc
inc
cmp
cmp
int3
int3
add
xor
cmp
jle
jle
add
add
jmp
jmp
jmp
jmp
sldt
pop
pop
pop
pop
pop
lret
lret
lret
lods
lods
jae
jae
add
add
dec
dec
dec
dec
dec
ret
stc
stc
stc
sub
add
add
iret
iret
iret
iret
aam
add
add
add
add
movsl
add
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
mov
add
add
js
js
js
js
js
inc
inc
inc
inc
inc
inc
inc
incb
add
add
pop
pop
pop
add
add
imul
add
lock
add
add
add
add
mov
cli
cli
cli
add
ret
ret
mov
mov
add
cli
into
add
add
cs
cs
dec
dec
test
rol
rol
rolb
sbb
sbb
sbb
add
outsb
outsb
dec
dec
dec
add
push
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
filds
add
sldt
add
add
add
ds
push
push
push
push
push
push
push
push
push
jecxz
pop
pop
pop
and
pop
iret
iret
iret
std
std
std
add
add
add
rcl
rcl
rcl
add
add
scas
scas
scas
add
adc
adc
adc
sti
sti
sti
sti
sti
add
add
std
std
std
std
std
std
std
std
add
add
and
mov
add
add
jmp
add
push
push
push
add
xlat
xlat
xlat
xlat
xlat
xlat
add
add
jnp
jnp
add
add
cmp
cmp
cmp
xchg
iret
iret
xchg
jbe
jbe
jbe
jbe
jbe
lret
lret
add
add
xor
dec
dec
dec
dec
sub
add
mov
rcl
add
jns
dec
dec
dec
dec
add
inc
inc
add
add
add
pop
pop
pop
pop
sub
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
incl
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
es
cmp
cmp
cmp
and
out
out
out
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
cmp
fcmovnu
fcmovnu
fcmovnu
fcmovnu
add
add
add
mov
pushf
pushf
fstp
fstp
add
add
add
add
jge
add
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
add
add
in
in
in
in
add
rcl
rcl
rcl
add
add
add
lret
lret
lret
add
mov
mov
add
je
clc
clc
loope
loope
addl
adc
adc
cmp
div
div
iret
iret
add
add
add
add
add
add
ja
ja
aam
add
or
stc
stc
stc
stc
aas
sti
sti
sti
sti
sti
sti
sti
sti
sti
xor
add
mov
mov
jle
jge
jge
jge
jge
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
xor
xor
add
ja
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
insl
insl
insl
insl
jns
lret
lret
lret
jge
add
in
in
in
in
jb
jb
jmp
addl
adc
adc
adc
adc
adc
adc
rcl
rolb
jno
jno
jno
pop
add
add
add
icebp
icebp
and
and
and
xor
add
add
xchg
xchg
xchg
xchg
rol
rol
add
add
add
add
add
push
add
add
lret
lret
lret
lret
lret
fiaddl
add
add
lret
lret
lret
lret
add
add
add
lret
lret
lret
mov
add
add
add
add
add
jg
aam
aam
aam
add
add
add
add
mov
call
call
call
add
daa
daa
daa
daa
daa
sti
sti
sti
sti
add
imul
add
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
pushf
pushf
pushf
test
cld
mov
mov
mov
add
add
or
or
or
ret
add
add
add
xchg
pop
pop
or
mov
add
add
adc
adc
adc
lock
mov
mov
xchg
add
stc
stc
popf
popf
popf
popf
popf
popf
popf
add
pop
pop
pop
pop
pop
pop
pop
pop
add
add
sbb
sbb
add
add
add
add
add
add
add
add
mov
cmc
add
into
into
into
std
std
scas
mov
enter
enter
clc
clc
adc
adc
test
add
outsb
add
addb
inc
inc
clc
mov
mov
mov
mov
mov
mov
add
rol
roll
test
add
add
rolb
add
xchg
add
out
add
add
add
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
add
add
add
cmp
inc
push
push
push
push
stos
stos
stos
stos
add
add
and
test
push
push
sti
sti
sti
add
add
add
mov
jbe
mov
add
ja
ja
add
add
mov
repnz
jge
jge
stos
stos
stos
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
add
add
add
pop
pop
pop
cs
ja
ja
pop
pop
cmp
add
add
add
aad
add
add
add
es
int3
int3
int3
int3
int3
add
add
inc
inc
inc
inc
inc
inc
add
add
add
into
into
movsb
movsb
gs
add
add
stos
push
loopne
loopne
loopne
loopne
int3
int3
nop
nop
nop
js
js
jle
jle
sbb
call
fdivl
fwait
arpl
fidivrs
mov
cmp
add
adc
xor
aam
sub
add
mov
iret
sti
imul
sub
movsl
mov
sbb
pop
rorl
mov
je
test
add
neg
dec
jge
nop
aam
sahf
aad
cmc
push
cmp
and
std
das
out
cmpsb
add
lret
add
push
mov
bound
add
gs
add
xchg
sbb
je
add
dec
insl
lock
or
add
popa
mov
cltd
mov
inc
imul
add
add
cmp
push
mov
add
popf
popf
out
adc
add
inc
adc
cmp
add
shl
outsl
ljmp
add
dec
je
or
add
bound
add
inc
dec
aas
loop
sub
add
bound
mov
add
sub
xchg
addb
xchg
push
mov
cmpsl
insb
jne
add
add
sbb
fbstp
sarb
subl
sbb
jle
rcl
adc
or
add
sbb
in
xchg
les
dec
test
dec
xchg
imulb
dec
cmp
mov
add
pop
clc
push
mov
in
jmp
addb
dec
add
aam
and
add
adc
addb
imul
add
arpl
lret
add
fstps
daa
in
add
add
lret
sbb
push
inc
into
movsl
mov
insb
movsl
cmp
mov
add
stos
add
jns
pusha
xchg
sarl
add
aas
mov
rcrb
push
out
call
add
loop
xorl
sbb
imul
pusha
std
mov
je
add
xchg
jmp
xor
enter
ret
pop
lods
add
inc
pusha
inc
push
mov
add
mov
les
outsl
sti
out
xor
test
add
out
into
lock
and
add
inc
inc
inc
sub
cmpsl
mov
mov
add
mull
add
xchg
pop
fiadds
xchg
push
jno
in
dec
jb
jno
xor
inc
loope
das
orl
sbb
push
in
mov
adc
orl
add
mov
cmp
sbb
add
add
adc
std
clc
adc
sub
fists
loop
scas
add
repz
push
mov
stos
push
imul
add
adc
add
add
ss
cmp
hlt
sbb
push
jmp
dec
mov
or
add
push
push
fldl
bound
add
jecxz
mov
fmull
add
aad
loop
adc
movsb
add
and
pop
and
insb
xor
push
jge
add
xor
add
mov
mov
popa
inc
sub
add
sub
mov
add
lea
and
push
addb
ds
pop
lea
popf
sbb
add
jo
pushf
jge
mov
mov
roll
add
mov
and
push
dec
jae
in
aaa
movsb
add
aas
bound
add
inc
aam
fadds
in
mov
lock
xchg
inc
cmp
xlat
push
dec
sbb
add
lwpval
sub
addb
ffreep
test
add
add
imull
in
inc
jo
cmpsb
add
mov
cmpeqps
add
mov
add
loopne
pop
mov
int3
push
add
mov
pusha
in
out
adc
leave
bound
add
addb
jae
dec
or
add
pop
adc
jno
insl
rorb
add
sub
add
das
pop
cmpsb
add
inc
cli
cltd
mov
jns
test
add
and
out
lock
mov
pop
sbb
add
out
adc
add
aas
sbb
lock
and
add
add
or
add
scas
add
xchg
push
push
pop
adc
nop
mov
add
mov
add
sbb
cmpsb
add
cmc
push
cld
mov
sti
fsubr
mov
add
add
repz
xchg
leave
cli
lret
xor
mov
jle
add
push
add
add
jg
in
sbb
dec
and
add
mov
jmp
inc
jbe
and
add
sbb
add
int
inc
mov
inc
xor
sub
mov
add
dec
pop
ljmp
or
add
add
add
xor
adc
add
scas
add
insb
mov
jecxz
loope
or
add
iret
imul
add
cld
or
pop
shlb
jp
xor
cmpsb
add
add
xor
sub
add
jg
mov
mov
push
or
add
incb
sbb
adc
xor
dec
insb
lea
shll
enter
inc
ss
in
test
add
and
add
ficomps
gs
sub
inc
jge
adc
out
jle
push
pop
test
add
pop
fistps
xor
add
add
aad
scas
add
loope
lcall
jp
sub
add
add
mov
add
mov
add
mov
lret
add
adc
imul
add
mov
sub
add
out
repz
add
in
mov
mov
add
pop
sti
mov
ds
add
mov
fstpl
adc
add
test
add
push
stos
add
out
add
rolb
jl
nop
mov
fistps
lds
add
lahf
addb
mov
mov
int3
cmp
add
cmc
and
add
sbb
mov
lret
push
out
fisttpl
add
add
push
js
and
add
mov
adc
jb
leave
enter
add
lcall
xchg
test
add
or
add
cwtl
stc
sar
mov
mov
out
adc
mov
dec
int
enter
js
in
or
add
xchg
mov
cmc
inc
arpl
xchg
cmp
jp
fidivl
pop
cmc
call
sbb
out
mov
xorl
xchg
jnp
pop
cmp
add
sti
fwait
int
rclb
adc
cwtl
cmp
int3
enter
out
mov
add
mov
sbb
and
add
insl
out
jmp
fwait
cmpsb
add
ret
add
xchg
movsb
add
fwait
cmp
mov
rcrl
pop
mov
mov
add
dec
gs
adc
or
and
add
in
or
add
add
push
inc
ja
int
mov
push
add
jecxz
addb
imul
shll
imul
jno
xor
outsb
fimuls
inc
jmp
add
nop
or
rclb
outsl
fwait
jbe
xor
add
xchg
addr16
mov
lods
add
jae
scas
outsb
pop
pop
mov
add
add
add
pop
sub
ret
push
hlt
xor
add
adc
sub
add
out
jmp
sar
jbe
pushf
jne
test
inc
jae
stos
xor
mov
sub
add
test
mov
mov
mov
cmc
pop
sub
add
loope
dec
loopne
or
add
data16
aad
mov
add
pushf
dec
out
dec
add
insl
addb
addb
loope
push
xchg
add
add
cmp
xchg
push
mov
cmpsl
sbb
add
fdivrl
jo
inc
inc
push
dec
fwait
dec
enter
push
rorl
cmc
fldz
push
cmpsl
sub
add
inc
dec
int3
lret
stc
addb
stos
add
cmp
add
pop
mov
add
insl
inc
xchg
add
add
flds
dec
adc
mov
add
mov
add
xchg
pop
pop
jns
pop
roll
xchg
add
mov
inc
xchg
fcmovne
insb
rol
mov
aam
lahf
aas
mov
pop
add
mov
add
bound
add
add
add
lock
mov
add
inc
and
mov
aad
add
gs
stc
or
dec
sub
cmp
add
or
and
add
pop
mov
add
add
inc
loop
jno
or
add
add
mov
jnp
jge
sbb
add
add
rorb
sarb
fldenv
das
adc
lcall
pop
cld
inc
fcoml
inc
pop
enter
jae
fwait
xchg
pop
push
mov
jp
imul
jo
mov
add
mov
cmpsb
add
add
outsl
ficompl
addb
mov
aas
dec
stos
add
mov
rol
iret
xchg
jno
adc
enter
add
loope
push
mov
add
mov
add
rcr
adc
iret
inc
outsb
jge
cmp
pop
xorl
add
das
sahf
jae
call
loope
aas
fisubrs
popa
xor
add
pop
mov
add
adc
sub
add
mov
je
add
movq
or
add
add
pop
data16
add
add
fmuls
lret
loop
mov
lret
push
and
add
cmp
or
add
fcomps
cmp
testl
dec
push
mov
gs
or
xor
jno
mov
add
mov
add
pop
and
add
fs
rcrl
add
fsubrl
and
add
imul
mov
jle
add
sahf
push
mov
gs
cld
sbb
cwtl
pop
adc
cmpsl
xchg
fidivrl
xchg
popa
lcall
mov
add
sbb
add
push
add
jb
stos
push
or
cltd
fcomps
adc
add
sbb
iret
mov
dec
pop
into
push
add
add
add
cli
cmp
mov
lods
aaa
divl
loopne
out
adc
test
add
test
jg
stos
add
mov
repz
add
xor
add
pop
mov
mov
add
add
gs
mov
scas
add
scas
add
notl
mov
push
xchg
or
cmc
jge
xchg
or
add
xchg
insb
mov
add
xor
dec
and
add
jl
add
js
pushf
mov
push
test
add
xor
add
xor
add
std
lret
loope
xchg
mov
add
add
pushf
jns
stos
faddl
add
add
loop
mov
add
arpl
add
dec
imul
fucomi
jg
dec
pop
add
jns
test
add
push
xor
pusha
mov
cmp
add
add
adc
dec
addb
push
sbb
inc
inc
inc
inc
pop
ret
add
add
loope
sbb
add
imul
out
mov
mov
jg
imul
or
hlt
pop
daa
loop
inc
mov
sti
add
imul
fmull
add
rcl
mov
cmp
jmp
mov
mov
add
shrl
mov
add
mov
sub
add
loopne
ljmp
jg
add
mov
add
add
mov
mov
mov
push
in
pop
mov
jecxz
push
adc
addb
mov
lahf
pop
std
fists
xchg
scas
add
push
fistl
in
pop
mov
mov
add
add
pop
ds
notb
negl
add
push
xchg
movsb
add
lcall
sub
add
int3
adc
mov
ds
cmp
shrb
or
mov
pusha
idiv
mov
mov
sbb
shl
out
xor
pop
outsl
loop
xchg
mov
aad
sbb
jmp
push
cmp
add
test
add
add
add
jmp
clc
mov
add
in
aam
cld
fisubl
add
xor
arpl
mov
shr
ret
jp
test
add
pop
ret
rorl
lds
add
testb
add
add
and
mov
xchg
xchg
add
jae
mov
mov
roll
add
xor
or
fnstenv
and
stos
scas
movsb
add
inc
inc
gs
popa
stos
add
add
or
add
add
pop
mov
add
jle
rol
sti
jae
fwait
test
loop
sub
jns
ss
sub
dec
stos
add
jmp
sbb
jge
inc
sub
add
imul
pop
jmp
add
jmp
xchg
in
push
stos
jp
lods
add
or
add
sub
add
flds
add
xlat
gs
insb
add
fst
push
push
xchg
fucom
adc
xchg
add
pop
pop
mov
js
addb
lret
pop
xchg
push
adc
cmpsl
jle
xor
mov
push
xor
xor
lds
xchg
sub
push
iret
popa
cli
imul
add
das
lds
cmpsb
add
aad
ljmp
and
add
dec
xchg
add
add
mov
and
jns
lahf
sub
add
jae
add
add
xlat
lds
pushf
outsl
out
jecxz
adc
dec
sar
loopne
ret
and
add
pop
and
add
test
add
out
or
add
push
jecxz
add
sub
xor
pop
dec
mov
add
add
add
adc
cmc
adc
jp
stos
add
xchg
jb
aam
loop
cmpl
add
lock
jg
arpl
int3
lret
lcall
js
test
add
add
sub
add
ja
or
add
enter
add
add
cmp
xchg
mov
and
pop
pop
add
add
mov
je
add
xlat
sub
add
or
add
sub
add
sub
bsr
test
mov
add
dec
or
jp
add
jmp
add
mov
lods
mov
add
inc
in
outsl
mov
mov
cmp
cpuid
add
cmp
ljmp
dec
add
xor
mov
inc
jl
in
add
aad
or
gs
push
clc
loop
mov
mov
xor
pusha
adc
add
icebp
add
or
add
add
into
mov
dec
xchg
push
sbb
push
add
sub
add
push
add
scas
add
xor
sbb
xor
mov
push
dec
adc
push
add
mov
mov
or
add
add
mov
imul
scas
add
int3
stos
add
push
cmp
in
fmull
add
loope
add
int
add
call
mov
insb
jae
add
adc
cli
call
pop
enter
out
call
movsl
cwtl
mov
add
iret
mov
mov
add
jmp
adc
jno
stos
or
cmp
pushf
cmp
xchg
adc
ds
cmc
pop
xor
mov
jg
fnstenv
shlb
and
sbb
inc
mov
add
add
add
pop
and
add
mov
add
stc
mov
pop
fldenv
add
dec
leave
in
add
xlat
fwait
ss
scas
movsl
cmp
add
mov
add
lds
test
add
lods
jae
jb
and
add
or
cli
imul
dec
aam
scas
xchg
adc
shrl
xchg
add
xchg
jb
add
fwait
jge
mov
addr16
xor
test
fdivl
xor
mov
dec
dec
mov
add
scas
lret
cmp
mov
add
xor
jmp
add
dec
ljmp
dec
bound
bound
add
cmpsl
xchg
pop
ljmp
add
aas
mov
pop
scas
sti
sub
sbb
fxch
lods
add
add
add
sahf
xchg
in
outsl
xchg
leave
cmp
add
insl
xor
lret
ret
clc
sahf
and
add
sbb
dec
cmp
jle
push
or
filds
jo
add
inc
push
pusha
addb
xor
inc
and
add
push
aam
add
adc
lcall
push
push
jb
mov
in
and
add
mov
add
jbe
add
add
cwtl
int3
or
adc
add
addb
cld
push
fsub
out
add
fs
out
mov
add
mov
add
insb
pushf
xlat
in
cmp
cmpsb
add
adc
add
add
sarl
stos
pop
xchg
dec
cmp
add
lods
add
add
mov
push
add
mov
cwtl
and
pop
mov
add
sub
add
call
push
push
fsub
add
add
add
rcrb
xchg
js
add
rcrb
sub
add
test
in
fmull
or
add
div
push
mov
fwait
aaa
rcr
xor
and
pushf
out
mov
add
xchg
add
movsb
add
popa
push
mov
in
lret
add
add
add
add
add
add
and
xchg
mov
stos
or
pop
fwait
push
add
add
adc
add
adc
test
sub
add
or
adc
add
cmp
add
add
ss
push
fstpt
rcrb
lock
xor
je
cli
xchg
insl
push
lret
jae
add
mov
out
mov
ds
call
fstpl
xor
add
call
cmp
pop
pop
xchg
xor
aam
add
xchg
sbb
inc
adc
outsb
lock
fcoml
in
arpl
in
pop
fists
stc
cmc
and
add
aaa
bound
inc
aas
dec
cltd
cltd
xchg
or
rolb
shrl
push
inc
pop
and
js
jecxz
mov
add
push
jmp
mov
xchg
loope
mov
add
gs
push
xchg
or
add
neg
lret
push
mov
inc
jge
cmp
lcall
add
or
sub
sahf
push
fsubrs
xor
mov
add
add
test
add
outsb
das
push
mov
nop
or
add
shlb
sti
dec
add
add
pop
roll
scas
add
mov
add
dec
sub
cmp
pop
sub
add
xchg
roll
hlt
add
ret
sbb
add
mov
fcmovnbe
std
mov
ffree
xchg
in
fistpl
jmp
jl
addb
repnz
add
and
cltd
out
push
sub
add
add
push
insl
addb
add
add
add
and
add
leave
insb
insb
mov
pop
repz
imul
add
sub
cli
sarl
add
xor
jmp
dec
mov
outsl
das
xor
inc
roll
adc
movsl
xor
cmp
add
adc
add
cmp
outsl
inc
ret
add
or
icebp
les
idivb
sbb
xchg
xor
add
xchg
push
jmp
bound
mov
dec
mov
add
sub
add
jb
adc
xchg
addb
shlb
scas
pop
arpl
mov
mov
shrl
loopne
or
inc
jne
pusha
or
add
gs
mov
dec
sbb
cmp
add
add
add
push
jecxz
add
push
out
push
add
popa
stc
pop
xor
inc
mov
mov
pop
dec
fdivl
mov
add
gs
insl
imul
mov
add
insl
mov
pop
add
ja
adc
sub
sbb
imull
jle
fldenv
add
aaa
jnp
out
add
add
sub
add
sti
addb
mov
push
ss
aad
add
mov
pop
mov
add
pop
cli
pop
mov
dec
cmp
xchg
mov
add
sldt
add
inc
addb
push
inc
enter
add
in
fxch
xor
pop
in
xchg
add
pop
cmp
ds
sti
push
scas
add
scas
stos
inc
mov
inc
mov
add
xchg
imul
pop
cli
push
add
mov
add
inc
push
lcall
dec
jg
xchg
stos
add
repnz
arpl
add
lea
imulb
dec
xor
lock
dec
in
inc
push
mov
add
sub
lock
cld
scas
add
daa
mov
add
iret
imul
xor
jnp
mov
add
add
test
add
mov
add
xchg
and
call
out
inc
loop
add
sub
add
insl
pusha
pop
imul
add
pop
repz
insl
aad
adc
fsubrs
popf
in
xor
sbb
mov
add
enter
fidivrs
out
adcl
std
mov
add
dec
xchg
mov
pop
out
pop
fimuls
push
inc
aad
pop
pushf
add
mov
push
lds
negb
adc
cmp
push
mov
enter
add
mov
add
lret
push
add
cmc
push
add
add
add
or
add
xor
sub
add
icebp
addr16
sbb
add
icebp
das
xor
jecxz
add
mov
add
loope
or
add
mull
add
sub
addb
jp
push
xchg
mov
and
add
mov
push
mov
pop
dec
out
xor
or
add
add
dec
mov
in
jmp
mov
add
ljmp
add
out
jno
fistpl
std
jecxz
xchg
negl
inc
icebp
add
jecxz
repz
fbstp
scas
aaa
cmpsb
add
arpl
add
adc
jne
add
call
mov
cmp
add
rcrl
jne
outsl
push
jae
gs
mov
lcall
xor
inc
xor
jo
dec
mov
inc
gs
add
pop
jmp
xchg
mov
fisttpll
xchg
inc
mov
add
add
sub
add
cmp
add
aad
sub
and
add
fwait
jl
aas
and
add
add
cmc
push
inc
xor
add
out
pop
test
add
ss
push
push
in
jle
movsb
add
fmuls
cmp
add
ss
add
in
stos
stos
add
dec
jge
incb
add
add
add
scas
out
stos
add
stos
add
pusha
and
add
add
jp
outsl
push
mov
stos
add
or
add
mov
add
mov
cwtl
pop
ficomps
pop
mov
sbb
or
add
lds
icebp
xchg
loop
mov
mov
cmp
push
jg
push
test
inc
pop
addps
mov
add
rcrb
loopne
xchg
mov
mov
addb
mov
add
outsb
inc
aad
xor
aam
sbb
lods
add
jl
adc
dec
push
out
add
aad
bound
add
addb
mov
jns
ss
addb
idivb
xchg
outsb
fwait
iret
jmp
cmpsb
add
loope
ret
cmp
inc
rorl
add
aas
scas
add
das
popa
loopne
xchg
out
pop
jp
rcll
pop
add
out
fildl
movsl
push
mov
add
inc
sbb
push
xchg
aas
out
jb
jg
test
xchg
cmp
das
cmp
adc
insl
imul
add
jp
int
jbe
and
add
push
cltd
dec
adc
mov
adc
adc
mov
add
dec
push
fildl
in
lods
add
daa
movsl
aaa
into
jb
insb
dec
leave
sbb
mov
fsubl
add
xchg
add
and
add
mov
fucom
f2xm1
stos
mov
cmp
movsl
bound
add
xchg
mov
test
stc
xor
sti
ret
test
add
xor
sub
in
aaa
xor
hlt
dec
ljmp
mov
jns
clc
in
mov
les
int3
rcrb
stos
gs
add
ficoms
sbb
add
xchg
fldcw
sahf
mov
fsub
mov
add
pop
xchg
and
add
push
add
scas
nop
jp
addb
test
add
lret
aas
cmpsl
movsl
rcrb
cmp
jl
add
add
add
xchg
pop
mov
add
or
or
push
fnstenv
and
add
mov
cmpsl
mov
outsl
mov
add
pop
jmp
add
add
jbe
bound
add
lea
loop
bound
fs
pop
cmp
add
push
rcr
add
add
pop
out
cmp
or
add
add
add
repz
sarl
sti
dec
add
add
jle
add
or
add
add
add
or
add
out
addb
xchg
repz
pop
cmp
imul
inc
test
mov
arpl
sbb
sti
dec
push
jge
notl
popa
dec
sbb
les
push
adc
jns
fadd
jp
mov
adc
out
repnz
ja
adc
mov
fdecstp
sbb
nop
mov
add
mov
add
shll
sub
add
xor
mov
scas
add
jno
inc
mov
add
faddp
lods
repnz
add
aam
mov
jmp
fnstenv
iret
ficoms
push
xchg
or
add
arpl
inc
dec
sub
pop
test
add
add
cmp
xchg
xor
pop
cli
jns
in
mov
add
je
mov
cmp
pop
mov
add
adc
jg
outsb
jnp
repz
xchg
xor
dec
hlt
je
aad
cli
fldl
mov
add
xor
pushf
jmp
push
icebp
aas
cltd
xor
ja
dec
fsts
jb
hlt
adc
stos
icebp
xor
sahf
sub
add
add
inc
fdivrs
rclb
in
in
das
cmp
add
addb
sbbl
inc
dec
popf
pusha
pusha
inc
icebp
jo
push
add
jne
cmp
adc
and
add
sbb
mulb
adc
mov
sub
add
mov
add
dec
in
repz
das
test
add
pop
sarl
in
mov
outsb
jmp
add
mov
inc
inc
jno
or
scas
add
imul
pop
daa
push
jb
jb
push
mov
mov
sub
orl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
push
lret
lea
andl
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
notrack
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
add
sub
and
jmp
push
mov
jmp
add
add
fsubr
jl
add
jl
and
add
aas
lea
add
add
cwtl
sbb
cmp
add
sbb
inc
adc
add
cli
outsb
mov
push
add
cmp
addr16
or
add
add
xor
dec
lahf
cmpl
cmp
xor
stc
rol
or
cmp
lods
lret
add
in
cld
and
push
add
cmpsb
add
jle
mov
add
or
add
lret
add
add
cmp
je
inc
xor
call
add
std
mov
and
dec
loop
lds
add
mov
dec
ds
add
fcoml
adc
imul
add
andnps
xchg
sahf
aaa
or
add
popf
fcoms
sbb
pop
inc
xchg
xchg
mov
add
das
test
add
jmp
lahf
mov
out
int
push
lock
aad
aad
sti
dec
out
out
sbb
in
mov
mov
cmp
xchg
ljmp
je
out
sti
insl
mov
add
add
xchg
and
xchg
mov
icebp
lret
cld
sbb
pop
pop
orl
sub
add
push
repnz
cmpsb
add
pop
mov
adc
add
jle
cli
xor
jmp
inc
xor
fsubrs
cmp
in
out
ss
or
add
add
in
dec
adc
or
jl
test
add
add
and
fiadds
fsubrl
insb
add
in
push
adcl
jmp
shlb
xchg
xor
jecxz
add
dec
lcall
sub
add
lock
mov
shrl
lret
repz
mov
test
add
lret
sub
add
loopne
in
shll
sarl
and
add
xchg
cwtl
cwtl
add
repnz
mov
add
insl
add
nop
out
bswap
aam
mov
pop
dec
loope
stos
xor
movb
jo
mov
add
add
push
xor
cmp
push
leave
mov
add
rcll
aas
add
add
mov
outsl
enter
cmp
repz
inc
daa
test
add
sbb
mov
push
xrelease
add
add
jp
and
jle
jbe
test
add
or
add
dec
insl
cmp
add
gs
in
pop
lret
mov
add
shrb
jo
lods
mov
mov
add
adc
or
std
fisubl
and
add
and
add
adc
add
inc
jp
fwait
cmp
add
aaa
fsubrp
mov
pop
lahf
std
in
shll
fadd
cwtl
pop
imul
push
cmpsl
push
fsubr
mov
add
fcomps
add
xor
and
add
std
jo
fstl
cwtl
cld
in
sbb
xchg
faddl
add
nop
pop
push
incl
dec
pop
pop
push
add
mov
adc
push
addb
xlat
fistpl
aam
mov
popf
rcl
sub
in
mov
lods
add
push
filds
enter
dec
sub
add
sbb
int
add
fiaddl
shlb
dec
frstor
icebp
mov
add
mov
add
add
add
sti
cmp
fsubr
in
imul
ds
filds
add
int3
paddb
xor
out
pop
pop
int3
xor
jns
mov
add
mov
pop
pop
test
add
cmp
dec
daa
arpl
mov
add
test
add
outsl
mov
jbe
push
mov
xchg
add
daa
test
add
push
add
aam
add
stos
add
inc
test
dec
adcl
bound
mov
das
mov
dec
sub
add
jmp
cmp
dec
jbe
jp
push
sub
add
add
jae
mov
add
cmp
add
or
mov
insb
jl
push
add
addb
lock
jnp
bound
add
mov
xor
ja
inc
pop
mov
adcl
add
repz
push
movsl
dec
pop
ret
add
mov
mov
add
je
and
add
je
ljmp
jl
insb
sub
add
mov
add
movsb
add
outsl
fdivl
and
jmp
lock
rclb
aad
ret
lahf
and
add
add
sub
add
inc
inc
push
or
add
ss
dec
add
add
or
adc
add
jmp
adc
mov
add
or
add
and
add
jp
in
nop
push
pop
jno
xor
mov
ljmp
add
xchg
addb
mov
jl
add
push
or
add
sahf
into
sbb
sub
sub
add
ret
xchg
add
xor
test
add
test
in
pusha
jge
xchg
shlb
out
adc
mov
nop
dec
sahf
push
arpl
mov
add
test
sub
arpl
std
test
add
negb
inc
cld
mov
stos
add
int
push
nop
pop
pop
scas
mov
sub
les
add
sub
fcoml
jp
test
add
mov
push
call
xchg
cmpsb
add
jnp
add
xchg
mov
dec
rcrb
into
xchg
mov
add
repnz
hlt
out
sub
add
dec
mov
add
mov
add
inc
pusha
xchg
xchg
repz
pop
divb
lahf
push
stos
add
rcrb
lods
inc
hlt
xor
rcrb
add
pop
aam
pop
in
add
add
or
add
sub
add
mov
cmpsb
add
outsb
sahf
inc
popa
pop
jo
or
mov
adc
test
or
add
or
stos
push
add
add
shll
add
mov
inc
fwait
add
in
leave
int3
and
add
dec
out
cmp
js
add
stos
add
sarb
mov
add
inc
mov
add
add
add
mov
aad
add
enter
sti
cmp
jne
sahf
js
hlt
fwait
push
and
and
add
lock
aad
outsb
and
add
xchg
jmp
repz
xchg
loop
jp
pop
addb
sarl
in
mov
mov
mov
outsb
push
cld
mov
ret
and
cmp
adc
mov
add
jnp
xor
add
push
jecxz
add
sbb
add
cli
iret
push
dec
xchg
add
add
pop
int3
lea
add
stos
add
pop
mov
and
add
add
xor
imul
add
mov
nop
or
dec
cmp
nop
push
sub
add
add
jo
jb
inc
or
add
inc
lret
lds
scas
add
jo
filds
pop
mov
xchg
call
mov
jp
jnp
push
addb
cwtl
or
add
fistpl
lds
pushf
sahf
and
mov
add
mov
test
add
out
inc
lock
xchg
pop
xchg
push
and
add
add
ds
mov
dec
fnstsw
pop
ds
jg
cmp
sub
inc
push
and
add
fs
repz
shll
or
add
test
add
xor
mov
andl
push
push
add
and
add
push
dec
xchg
call
int3
out
mov
pop
enter
add
scas
add
scas
sub
adc
data16
test
add
pop
add
xchg
mov
ds
bound
push
add
xchg
daa
dec
dec
fildl
add
add
imul
or
or
and
fadds
sub
adc
aas
test
das
xchg
sarl
test
add
outsb
daa
addb
adcl
add
fs
pop
xlat
movsb
add
xchg
ds
xchg
outsl
xor
out
out
pop
les
imulb
add
add
add
dec
sub
add
arpl
jecxz
xor
mov
lahf
pop
mov
je
add
sub
add
movl
add
scas
js
or
sub
add
sbb
or
stc
out
and
pusha
sub
add
add
iret
dec
sbb
mov
add
dec
mov
add
inc
cmc
push
inc
sub
add
fisubrs
movsb
add
xchg
mov
mov
das
aad
mov
daa
jl
mov
in
int
add
test
pop
sub
add
pop
mov
jno
mov
iret
cmpsl
cmp
and
add
cmp
imul
mov
xor
stos
add
xor
mov
add
sbb
adc
jnp
jg
aam
add
lods
add
or
pop
add
add
add
aad
cmc
pop
and
add
fisttpl
dec
cwtl
jae
add
aas
cmc
clc
scas
add
sar
jae
mov
add
out
fldl
add
pop
inc
into
pusha
dec
shlb
addr16
div
xchg
dec
mull
mov
sub
add
push
mov
cmp
add
xchg
add
insb
pop
rorl
and
add
mov
shlb
adc
scas
add
jle
lds
outsb
addb
test
add
add
fs
aas
fidivs
pop
fildl
loopne
sbb
add
fcoml
inc
dec
shrb
leave
and
add
cltd
add
add
ret
pop
imul
cmc
in
inc
sub
shrl
jnp
mov
stos
add
pop
mov
sub
add
test
add
lcall
sahf
or
aad
lea
aaa
loop
cltd
cmp
das
insl
inc
sub
das
in
mov
jns
add
jg
add
fwait
into
imul
mov
add
or
push
add
nop
int
cwtl
mov
shll
pop
mov
jne
add
imul
gs
inc
movsl
mov
fmul
pop
jno
mov
insb
push
scas
jo
xchg
jge
xor
add
loop
mov
add
loope
add
jns
dec
ret
add
dec
movsl
mov
shll
nop
push
int3
lock
lret
add
mov
mov
mov
ffreep
mov
stos
add
xor
insl
stos
nop
dec
push
mov
add
xor
xchg
add
xchg
aaa
lods
add
and
add
pop
sahf
mov
test
jecxz
ljmp
add
add
pop
pop
ljmp
add
outsl
xor
stos
add
pop
jno
stos
add
stc
pop
jne
or
add
lret
dec
sub
add
mov
fwait
jecxz
xor
sbbl
mov
push
add
jge
popl
xchg
and
add
and
jae
mov
cld
pop
sbb
jge
and
add
xchg
addb
daa
inc
jns
pushf
lcall
dec
sub
fdivrs
ja
add
and
mov
add
or
aaa
and
loop
inc
cmp
mov
add
cmp
cmp
push
push
dec
jmp
testb
das
adc
add
mov
jmp
mov
ljmp
add
in
out
jae
mov
lods
add
add
push
call
sti
pop
rorb
imul
jge
add
push
lahf
lods
mov
stos
add
jg
add
loope
int
ja
pop
xchg
sbb
xor
add
lods
and
cmpl
dec
into
mov
jb
pop
sbb
add
lds
jmp
add
add
fisttpl
add
cmp
out
mov
add
add
add
xchg
add
lea
add
stc
fiaddl
inc
and
mov
jl
cltd
xlat
scas
add
iret
dec
jnp
add
loopne
mov
ret
lea
scas
add
xchg
add
xlat
dec
jae
pop
jg
mov
mov
cmpsb
add
xchg
add
and
ljmp
pop
icebp
or
add
incl
or
add
xor
lret
add
jne
into
cltd
cmp
sbb
sub
add
test
add
jecxz
clc
xchg
cwtl
cmp
fldcw
lcall
enter
outsb
add
add
add
or
add
dec
xchg
add
pop
jecxz
sti
pop
dec
repz
mov
add
mov
shl
shrb
xchg
add
aam
xchg
das
mov
add
outsb
ds
cmp
or
add
and
divps
dec
mov
test
add
sub
add
dec
addb
push
adc
test
jns
test
add
add
push
push
mov
add
das
pop
jo
add
mov
add
mov
pop
mov
push
push
adc
aaa
mov
sub
add
lahf
iret
fidivs
and
fisubrs
cwtl
cmc
jp
pop
fadds
fwait
mov
mov
mov
add
add
sub
add
adc
dec
xchg
ja
add
and
add
aam
cltd
js
mov
add
fstp
cmpsb
add
jbe
cltd
nop
rolb
push
mov
fucomip
shll
fcomps
bound
add
fcom
test
add
add
test
mov
fwait
js
aaa
pop
pop
adc
mov
add
inc
mov
sahf
xor
je
jnp
xor
add
int
mov
add
add
jbe
add
mov
add
cmp
out
aam
loop
mov
add
or
pusha
and
add
je
cmp
hlt
sub
add
xor
dec
xor
or
push
mov
sub
inc
xor
xchg
add
out
cmp
add
mov
add
add
add
cld
cmpsl
push
adc
xlat
pop
or
add
add
add
ljmp
xchg
orl
add
add
jnp
cmp
gs
bound
lret
or
add
mov
add
push
insb
icebp
mov
inc
xchg
pop
adc
cwtl
cmp
out
call
nop
jmp
add
add
test
add
sub
add
and
cmp
cmp
repz
clc
repnz
nop
nop
jae
stc
add
test
add
nop
push
mov
leave
nop
jmp
add
stc
aad
jle
clc
repnz
nop
nop
jae
add
cmp
pop
clc
repnz
nop
nop
jae
add
scas
push
popl
dec
cmp
repnz
nop
nop
jae
stc
add
cmp
add
outsl
mov
clc
repnz
nop
nop
jae
fwait
jbe
pop
dec
add
loopne
clc
repnz
nop
nop
jae
loope
loope
cmp
xchg
test
xchg
ret
cmp
add
add
jmp
nop
nop
jae
add
mov
push
push
sbb
leave
add
clc
repnz
nop
nop
jae
fsts
mov
add
add
xchg
add
pop
cwtl
dec
pop
mov
rorb
cld
nop
nop
jae
dec
push
add
test
mov
leave
nop
jmp
cwtl
addl
mov
xchg
ret
add
jbe
add
pop
stc
add
lods
clc
repnz
nop
nop
jae
movl
stc
push
xor
cld
nop
nop
jae
popf
add
and
xchg
add
clc
repnz
nop
nop
jae
shr
add
test
fdivs
add
clc
repnz
nop
nop
jae
lret
pop
int3
add
clc
repnz
nop
nop
jae
pop
fwait
add
pop
jmp
incl
add
mov
fwait
pop
add
push
add
rcll
mov
xchg
ret
add
mov
dec
jo
xorl
clc
repnz
nop
nop
jae
subl
mov
leave
nop
jmp
add
mov
cld
nop
nop
jae
popf
add
cmp
jne
clc
repnz
nop
nop
jae
add
dec
das
mov
push
mov
xchg
ret
add
cwtl
leave
xchg
push
mov
leave
nop
jmp
sub
add
add
add
mov
nop
nop
jae
out
int3
clc
imul
or
clc
repnz
nop
nop
jae
add
dec
push
push
mov
xchg
ret
add
add
add
add
add
add
cld
stos
mov
clc
repnz
nop
nop
jae
movl
add
fisubs
fwait
sbb
cld
nop
nop
jae
addl
push
push
mov
xchg
ret
mov
cs
pop
sub
fwait
xchg
inc
add
pop
rcll
add
add
xchg
pop
clc
repnz
nop
nop
jae
add
dec
add
out
jbe
add
mov
rclb
mov
cmp
ret
add
xchg
add
add
loop
xor
push
mov
xchg
ret
add
stc
in
test
push
mov
leave
nop
jmp
fwait
test
jmp
mov
xchg
ret
adc
pop
add
or
push
mov
cld
nop
nop
jae
or
stc
add
cld
nop
nop
jae
add
add
mov
sbb
clc
repnz
nop
nop
jae
lock
dec
adc
loop
mov
xchg
ret
add
mov
cmp
cmc
add
push
mov
xchg
ret
mov
stc
cmp
cmpb
xchg
ret
loope
add
jne
clc
repnz
nop
nop
jae
imul
push
clc
repnz
nop
nop
jae
mov
add
mov
sar
repnz
nop
nop
jae
add
or
fwait
fwait
jo
inc
clc
repnz
nop
nop
jae
pop
push
int3
mov
cmp
inc
push
mov
xchg
ret
add
lret
mov
fsubl
rep
clc
repnz
nop
nop
jae
lret
add
add
sub
js
daa
dec
nop
push
mov
leave
nop
jmp
fwait
pop
add
push
add
xchg
lea
nop
push
mov
leave
nop
jmp
add
jae
clc
repnz
nop
nop
jae
add
add
add
pop
push
add
clc
repnz
nop
nop
jae
flds
xchg
add
mov
push
mov
xchg
ret
add
clc
add
clc
repnz
nop
nop
jae
add
add
dec
add
cmp
add
clc
repnz
nop
nop
jae
scas
add
cwtl
bound
flds
leave
push
mov
xchg
ret
sub
add
dec
add
add
mov
clc
repnz
nop
nop
jae
mov
add
mov
cld
nop
nop
jae
roll
add
add
add
pop
push
mov
xchg
ret
add
pop
add
loopne
fwait
clc
repnz
nop
nop
jae
movsb
push
mov
add
push
nop
jae
push
popf
shrl
fsubs
das
add
nop
push
mov
leave
nop
jmp
add
xor
clc
repnz
nop
nop
jae
bound
add
or
mov
clc
repnz
nop
nop
jae
add
add
mov
add
add
clc
push
mov
xchg
ret
mov
add
adc
bound
cmp
repnz
nop
nop
jae
sbbl
repnz
repnz
nop
nop
jae
add
pop
and
in
addb
cmp
ret
mov
roll
add
hlt
cmp
cld
nop
nop
jae
add
add
sbbl
cld
nop
nop
jae
add
add
dec
stc
mov
sbb
add
sar
add
out
add
clc
repnz
nop
nop
jae
cmp
pop
add
add
add
clc
repnz
nop
nop
jae
cwtl
sub
add
add
imul
mov
leave
nop
jmp
stc
stc
dec
flds
leave
pop
imul
adc
adcl
ret
add
pop
dec
sbbl
mov
nop
nop
jae
or
add
insb
lock
add
xchg
push
clc
repnz
nop
nop
jae
add
mov
push
and
push
mov
leave
nop
jmp
pop
mov
cmp
mov
roll
mov
xchg
ret
and
lret
or
add
mov
add
lea
clc
repnz
nop
nop
jae
add
lret
dec
jbe
decl
mov
xchg
ret
stc
add
out
mov
add
jg
clc
repnz
nop
nop
jae
push
mov
bound
add
jne
nop
push
mov
leave
nop
jmp
add
jno
clc
repnz
nop
nop
jae
stc
sar
mov
leave
add
push
mov
xchg
ret
cmp
add
cmp
xchg
jmp
pop
leave
bound
mov
add
jbe
lock
and
mov
nop
nop
jae
push
or
add
push
clc
repnz
nop
nop
jae
add
add
add
idiv
or
repnz
nop
nop
jae
int3
mov
frstor
mov
xchg
ret
mov
mov
add
push
clc
repnz
nop
nop
jae
mov
stc
rcrl
mov
lret
fistpl
push
mov
xchg
ret
flds
add
add
cmp
cld
nop
nop
jae
loope
add
add
jbe
ds
call
nop
push
mov
leave
nop
jmp
pop
add
cwtl
or
add
enter
mov
leave
nop
jmp
push
int3
sbbl
clc
repnz
nop
nop
jae
stc
and
scas
shrl
push
jl
fucomi
leave
adc
add
add
out
loope
mov
cs
xchg
jmp
nop
jae
pop
mov
mov
pop
bound
clc
repnz
nop
nop
jae
mov
add
call
shrb
cmp
ret
add
cmp
add
add
mov
inc
mov
inc
xchg
nop
push
mov
leave
nop
jmp
or
add
int3
sahf
mov
mov
clc
repnz
nop
nop
jae
fwait
add
lret
add
mov
repnz
nop
nop
jae
mov
stc
mov
add
mov
mov
add
fld1
clc
repnz
nop
nop
jae
push
mov
dec
cmp
nop
push
mov
leave
nop
jmp
cmp
add
adc
idiv
clc
repnz
nop
nop
jae
fwait
movsb
add
xchg
push
xchg
add
int3
dec
and
pop
xchg
inc
add
and
loope
or
leave
nop
jmp
add
mov
cmp
push
mov
leave
nop
jmp
test
add
sbb
cld
nop
nop
jae
xlat
sbbl
add
mov
sar
push
mov
int3
int3
add
cmp
nop
push
mov
leave
nop
jmp
add
add
fld1
clc
repnz
nop
nop
jae
dec
add
add
test
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
push
add
mov
xor
push
mov
leave
nop
jmp
add
add
insb
rorb
clc
repnz
nop
nop
jae
add
mov
ret
clc
repnz
nop
nop
jae
cmp
add
ljmp
nop
push
mov
leave
nop
jmp
add
add
test
add
clc
repnz
nop
nop
jae
add
mov
add
add
int
and
repnz
nop
nop
jae
add
add
add
push
mov
xchg
ret
add
xor
add
into
sub
sub
add
nop
jmp
add
pop
adc
or
add
movl
cmpsl
push
clc
repnz
nop
nop
jae
leave
cmp
dec
add
add
pop
clc
repnz
nop
nop
jae
pop
add
mov
cmp
data16
add
stos
add
push
and
clc
repnz
nop
nop
jae
and
das
mov
nop
push
mov
leave
nop
jmp
cmp
dec
lret
mov
andl
in
leave
nop
jmp
jbe
add
xchg
cltd
inc
add
push
roll
popf
mov
call
clc
repnz
nop
nop
jae
mov
mov
inc
add
clc
repnz
nop
nop
jae
add
out
add
add
push
mov
xchg
ret
add
add
add
add
cld
nop
nop
jae
cmp
mov
int3
add
push
pop
push
mov
xchg
ret
add
int3
and
add
das
add
push
mov
xchg
ret
test
out
add
xor
clc
repnz
nop
nop
jae
add
add
cmc
fld1
clc
repnz
nop
nop
jae
stc
lret
add
xchg
pop
sub
clc
repnz
nop
nop
jae
cmp
cmp
add
nop
push
mov
leave
nop
jmp
add
pop
mov
decl
clc
repnz
nop
nop
jae
add
add
add
push
es
jecxz
repnz
nop
nop
jae
add
cmp
dec
mov
jbe
add
stos
add
dec
sarl
stos
mov
clc
repnz
nop
nop
jae
pop
mov
jns
clc
repnz
nop
nop
jae
sub
imul
add
push
push
mov
xchg
ret
and
add
fwait
add
rcrb
mov
leave
nop
jmp
add
add
test
repnz
nop
nop
jae
add
dec
add
mov
cld
nop
nop
jae
add
pop
add
jns
cld
nop
nop
jae
mov
add
add
and
repnz
nop
nop
jae
dec
sub
mov
cmpl
jae
mov
addr16
clc
repnz
nop
nop
jae
xlat
mov
mov
add
mov
add
test
repnz
nop
nop
jae
push
clc
add
clc
repnz
nop
nop
jae
xlat
add
add
mov
push
mov
xchg
ret
mov
cmp
push
push
mov
xchg
ret
add
xlat
lret
cmp
dec
cmp
repnz
nop
nop
jae
add
mov
cmp
cmp
cld
nop
nop
jae
add
dec
add
dec
cli
shl
mov
cmp
add
add
sub
jbe
cmp
add
mov
cwtl
pop
popf
fidivl
sti
clc
repnz
nop
nop
jae
add
pop
add
add
dec
jne
clc
repnz
nop
nop
jae
push
add
push
mov
xchg
ret
add
lret
fldcw
clc
repnz
nop
nop
jae
add
add
mov
mov
xchg
ret
loope
mov
add
pop
push
mov
xchg
ret
push
bound
add
nop
dec
add
clc
repnz
nop
nop
jae
popf
stc
pop
movl
mov
adc
push
mov
leave
nop
jmp
add
add
add
add
repnz
nop
nop
jae
stc
add
add
push
mov
xchg
ret
adc
imul
stos
je
clc
repnz
nop
nop
jae
add
imul
in
leave
nop
jmp
add
add
stc
cmpsb
add
adc
call
clc
repnz
nop
nop
jae
clc
add
add
jge
add
pop
or
add
out
mov
jg
repnz
nop
nop
jae
add
movsb
mov
mov
loopne
xor
add
push
add
pop
add
clc
repnz
nop
nop
jae
pop
add
add
rclb
nop
jmp
int3
jbe
add
add
clc
repnz
nop
nop
jae
add
jbe
add
movzwl
clc
repnz
nop
nop
jae
xchg
mov
clc
repnz
nop
nop
jae
add
imul
div
nop
push
mov
leave
nop
jmp
add
out
leave
add
add
mov
clc
repnz
nop
nop
jae
mov
add
add
sbb
push
mov
xchg
ret
and
mov
pop
fistps
repnz
nop
nop
jae
or
mov
pop
pop
fld1
push
mov
xchg
ret
add
out
add
pop
push
mov
xchg
ret
pop
mov
add
repnz
nop
nop
jae
mov
pop
mov
push
cmp
add
cmp
push
mov
leave
nop
jmp
add
add
nop
push
mov
leave
nop
jmp
add
leave
sub
imul
mov
clc
repnz
nop
nop
jae
int3
mov
mov
rclb
xchg
inc
add
dec
dec
mov
mov
push
mov
xchg
ret
mov
jbe
stc
and
pop
mov
in
jae
ljmp
in
add
movb
jmp
sbb
pop
clc
repnz
nop
nop
jae
cmp
xchg
add
cmp
clc
repnz
nop
nop
jae
add
bound
or
nop
nop
jae
cmp
add
xor
repnz
nop
nop
jae
cmp
cwtl
or
clc
repnz
nop
nop
jae
mov
add
cmpl
xor
clc
repnz
nop
nop
jae
xlat
pop
add
mov
test
cld
nop
nop
jae
mov
xchg
jne
clc
repnz
nop
nop
jae
push
and
and
mov
xchg
ret
mov
roll
pop
add
jns
call
inc
add
xchg
insb
add
mov
add
and
add
fdivr
repnz
nop
nop
jae
add
jbe
add
mull
repnz
nop
nop
jae
bound
mov
call
inc
add
cmp
dec
bound
add
or
push
mov
leave
nop
jmp
add
test
push
leave
clc
repnz
nop
nop
jae
add
add
jnp
nop
push
mov
leave
nop
jmp
and
add
add
or
mov
xchg
ret
out
add
or
jbe
add
nop
push
mov
leave
nop
jmp
bound
popf
add
add
add
nop
push
mov
leave
nop
jmp
add
imul
movsb
cmp
clc
and
add
mov
nop
push
mov
leave
nop
jmp
push
add
add
add
xor
clc
repnz
nop
nop
jae
add
inc
push
clc
repnz
nop
nop
jae
movl
cwtl
cmp
cld
nop
nop
jae
out
clc
dec
add
add
xor
nop
push
mov
leave
nop
jmp
mov
scas
add
add
clc
repnz
nop
nop
jae
push
xchg
add
repnz
nop
nop
jae
push
add
fwait
push
mov
xchg
ret
stc
add
imul
aam
push
clc
repnz
nop
nop
jae
add
cmp
jmp
addl
add
add
sbb
repnz
nop
nop
jae
clc
dec
push
add
inc
shl
clc
repnz
nop
nop
jae
out
dec
mov
add
repnz
nop
nop
jae
roll
scas
out
add
add
push
inc
push
mov
xchg
ret
add
leave
add
push
add
stc
inc
jmp
add
add
add
movsb
pop
popf
scas
out
or
add
push
cmp
nop
push
mov
leave
nop
jmp
add
fxch
popf
pop
pop
nop
push
mov
leave
nop
jmp
push
pop
add
scas
lret
add
add
push
mov
xchg
ret
add
stc
add
cwtl
dec
push
ljmp
mov
xchg
ret
scas
add
add
inc
xchg
inc
add
mov
add
mov
add
add
cmp
and
lret
cwtl
add
push
add
stc
scas
add
xchg
add
fld1
nop
push
mov
leave
nop
jmp
add
or
inc
pop
add
push
mov
xchg
ret
mov
push
int3
or
add
mov
clc
repnz
nop
nop
jae
add
add
add
clc
nop
push
mov
leave
nop
jmp
mov
sub
mov
clc
repnz
nop
nop
jae
add
mov
popa
clc
repnz
nop
nop
jae
push
cmp
add
add
or
mov
xchg
ret
xlat
or
add
sbb
add
mov
mov
clc
repnz
nop
nop
jae
stc
mov
leave
mov
clc
repnz
nop
nop
jae
leave
add
add
add
cmp
mov
jge
clc
repnz
nop
nop
jae
addl
in
mov
ds
add
xor
in
xchg
ja
inc
mov
mov
clc
repnz
nop
nop
jae
xlat
add
jbe
push
push
mov
xchg
ret
add
out
add
mov
adc
nop
push
mov
leave
nop
jmp
cwtl
jbe
add
rorl
nop
nop
jae
mov
add
mov
sub
nop
nop
jae
clc
push
add
add
or
add
rclb
nop
jmp
add
push
mov
add
cwtl
xchg
sub
add
nop
jmp
push
xlat
or
test
repnz
nop
nop
jae
add
adc
clc
repnz
nop
nop
jae
add
movsb
insb
add
add
add
xchg
sub
push
mov
xchg
ret
add
sub
adc
xchg
in
leave
nop
jmp
mov
loope
add
xchg
inc
add
lock
lret
add
mov
add
repnz
nop
nop
jae
and
test
add
push
add
ja
js
add
clc
repnz
nop
nop
jae
mov
add
add
add
push
mov
mov
pop
popa
add
xchg
add
add
test
dec
nop
push
mov
leave
nop
jmp
and
add
sub
in
stos
add
sub
pop
jae
add
bound
loope
insb
or
xchg
adc
add
lock
add
mov
dec
push
clc
repnz
nop
nop
jae
stc
add
aam
mov
clc
repnz
nop
nop
jae
cmp
push
cs
push
clc
repnz
nop
nop
jae
add
add
int3
add
outsl
cmp
nop
push
mov
leave
nop
jmp
add
mov
add
push
mov
leave
nop
jmp
push
pop
add
add
mov
clc
repnz
nop
nop
jae
add
std
mov
clc
repnz
nop
nop
jae
add
adc
ret
loopne
ret
roll
mov
xchg
ret
pop
lock
lock
outsb
and
repnz
nop
nop
jae
pop
fwait
dec
pop
imul
add
pop
rep
clc
repnz
nop
nop
jae
and
loope
push
pushl
clc
repnz
nop
nop
jae
and
add
repnz
nop
nop
jae
stc
add
mov
push
mov
xchg
ret
cmp
add
test
fwait
clc
repnz
nop
nop
jae
pop
add
mov
adcl
add
push
push
mov
xchg
ret
cwtl
add
mov
roll
add
repnz
nop
nop
jae
mov
cwtl
stc
add
add
pop
clc
repnz
nop
nop
jae
add
add
cwtl
add
fwait
clc
repnz
nop
nop
jae
push
lock
xchg
clc
repnz
nop
nop
jae
or
lret
pop
mov
test
push
mov
xchg
ret
stc
pop
and
push
pop
clc
repnz
nop
nop
jae
add
add
add
mov
mov
leave
nop
jmp
popf
add
add
fstps
icebp
nop
push
mov
leave
nop
jmp
and
add
mov
add
add
clc
repnz
nop
nop
jae
add
add
add
mov
leave
nop
jmp
loope
or
mov
or
repnz
nop
nop
jae
add
dec
add
xor
movsl
clc
repnz
nop
nop
jae
add
mov
add
and
add
clc
repnz
nop
nop
jae
pop
push
add
add
clc
repnz
nop
nop
jae
mov
add
add
inc
mov
nop
push
mov
leave
nop
jmp
cmp
add
push
clc
repnz
nop
nop
jae
mov
cmp
add
popf
jae
push
mov
xchg
ret
clc
mov
or
test
push
mov
incb
sub
aaa
js
popf
ret
add
add
inc
test
call
nop
jae
add
mov
add
cmp
je
clc
repnz
nop
nop
jae
add
mov
not
push
mov
xchg
ret
push
add
add
mov
add
nop
nop
jae
insb
or
scas
pop
roll
add
pop
push
mov
xchg
ret
lret
add
cmp
jae
push
mov
xchg
ret
popf
mov
stc
add
int3
dec
cmp
pop
clc
repnz
nop
nop
jae
add
sub
or
jbe
flds
cld
nop
nop
jae
xchg
jecxz
clc
repnz
nop
nop
jae
add
add
add
call
add
clc
repnz
nop
nop
jae
and
or
add
add
add
lcallw
cld
nop
nop
jae
add
add
scas
add
out
clc
repnz
nop
nop
jae
add
add
cmp
mov
leave
nop
jmp
adc
or
jne
clc
repnz
nop
nop
jae
add
lret
mov
stos
clc
repnz
nop
nop
jae
insb
pop
cmp
mov
cld
nop
nop
jae
pop
add
and
call
clc
repnz
nop
nop
jae
mov
mov
sbb
mov
leave
nop
jmp
mov
add
mov
add
clc
repnz
nop
nop
jae
lret
add
add
add
nop
push
mov
leave
nop
jmp
cmp
add
cmp
add
std
fwait
push
mov
xchg
ret
int3
push
stc
addl
iret
mov
nop
push
mov
leave
nop
jmp
add
lret
test
in
leave
nop
jmp
push
add
cmp
int
movsb
push
mov
xchg
ret
imul
sub
add
add
mov
clc
repnz
nop
nop
jae
push
sbb
call
clc
repnz
nop
nop
jae
dec
cmp
stc
std
call
clc
repnz
nop
nop
jae
cmp
push
push
mov
xchg
ret
stc
insb
add
add
mov
or
add
push
clc
repnz
nop
nop
jae
out
pop
lret
add
cld
clc
repnz
nop
nop
jae
add
add
add
jne
clc
repnz
nop
nop
jae
pop
mov
or
shl
pusha
clc
repnz
nop
nop
jae
add
cmp
mov
add
xchg
cmp
nop
push
mov
leave
nop
jmp
add
mov
add
cld
nop
nop
jae
mov
add
add
pop
jnp
roll
push
mov
leave
nop
jmp
add
sub
mov
add
add
nop
nop
jae
add
xchg
dec
fistpl
clc
repnz
nop
nop
jae
lret
add
push
add
repnz
nop
nop
jae
dec
fwait
scas
push
add
stc
mov
repnz
nop
nop
jae
fwait
add
cwtl
xlat
and
aaa
push
clc
repnz
nop
nop
jae
add
add
add
push
mov
xchg
ret
clc
mov
add
fld1
push
mov
xchg
ret
add
imul
add
mov
add
clc
repnz
nop
nop
jae
or
add
xchg
push
mov
add
mov
scas
add
add
add
loopne
and
push
mov
leave
nop
jmp
popf
fwait
insb
add
and
mov
add
repnz
nop
nop
jae
clc
add
pop
lret
add
call
clc
repnz
nop
nop
jae
clc
movsb
add
push
add
adc
mov
xchg
ret
add
add
mov
pop
add
push
mov
xchg
ret
out
add
movl
sbb
cmp
repnz
nop
nop
jae
add
test
push
mov
xchg
ret
stc
cmp
jbe
add
cmp
lods
mov
clc
repnz
nop
nop
jae
fldcw
add
daa
fld1
jmp
add
push
add
insb
dec
rcll
add
fstl
mov
xchg
ret
rcl
loope
pop
mov
add
lahf
push
clc
repnz
nop
nop
jae
add
add
jns
call
nop
jae
dec
add
fistpl
clc
repnz
nop
nop
jae
add
mov
push
add
push
clc
repnz
nop
nop
jae
pop
pop
add
hlt
pop
ss
push
clc
repnz
nop
nop
jae
fyl2xp1
add
add
in
pop
shll
push
les
aaa
add
push
hlt
mov
add
xchg
clc
repnz
nop
nop
jae
int3
scas
or
and
mov
mov
add
repnz
nop
nop
jae
or
add
clc
repnz
nop
nop
jae
scas
mov
mov
clc
repnz
nop
nop
jae
pop
add
or
add
sub
call
clc
repnz
nop
nop
jae
add
jne
inc
and
push
mov
xchg
ret
add
inc
stos
add
cltd
add
clc
repnz
nop
nop
jae
lret
add
add
clc
repnz
nop
nop
jae
add
mov
add
pushl
push
mov
xchg
ret
add
mov
sbb
xchg
dec
mov
dec
push
push
mov
xchg
ret
or
scas
mov
add
idiv
clc
repnz
nop
nop
jae
add
add
je
clc
repnz
nop
nop
jae
add
mov
mov
leave
nop
jmp
cmp
sub
add
mov
lock
repnz
nop
nop
jae
add
mov
lea
repnz
nop
nop
jae
pop
mov
add
add
repnz
nop
nop
jae
mov
mov
add
out
add
cld
nop
nop
jae
mov
mov
add
pop
mov
push
mov
xchg
ret
add
popf
add
xor
repnz
nop
nop
jae
add
add
add
mov
call
nop
jmp
out
add
gs
nop
push
mov
leave
nop
jmp
int3
pop
add
push
sub
add
in
leave
nop
jmp
pop
push
add
movsb
loope
popf
and
mov
push
clc
repnz
nop
nop
jae
leave
add
add
cld
nop
nop
jae
loope
pop
bound
push
clc
repnz
nop
nop
jae
add
xchg
push
sbb
mov
xchg
ret
add
mov
cwtl
mov
fistpl
clc
repnz
nop
nop
jae
and
jbe
or
mov
xchg
ret
mov
or
or
add
push
fistpl
clc
repnz
nop
nop
jae
add
leave
add
sar
repnz
nop
nop
jae
test
or
and
add
int
pop
jae
repnz
nop
nop
jae
add
add
push
mov
nop
push
mov
leave
nop
jmp
loope
mov
add
add
add
test
add
clc
clc
repnz
nop
nop
jae
mov
pop
add
idiv
repnz
nop
nop
jae
cs
mov
stc
flds
pop
xchg
nop
push
mov
leave
nop
jmp
add
pop
or
jbe
mov
clc
repnz
nop
nop
jae
adc
pushw
ud0
push
mov
xchg
ret
rorl
pop
xor
xchg
clc
repnz
nop
nop
jae
add
adc
bound
mov
jae
cli
clc
repnz
nop
nop
jae
add
mov
add
shrl
push
mov
xchg
ret
add
add
mov
repnz
nop
nop
jae
add
add
push
rorb
add
repnz
nop
nop
jae
and
add
and
repnz
nop
nop
jae
sub
sub
mov
cli
cli
inc
lea
nop
push
mov
leave
nop
jmp
cmp
cmp
add
clc
repnz
nop
nop
jae
add
cmp
ret
jmp
add
add
xchg
mov
std
pusha
clc
repnz
nop
nop
jae
sbbl
push
in
push
nop
push
mov
leave
nop
jmp
add
add
add
mov
add
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
add
add
lret
mov
nop
push
mov
leave
nop
jmp
lock
mov
clc
repnz
nop
nop
jae
add
add
add
inc
push
nop
push
mov
leave
nop
jmp
push
mov
pop
sub
int3
mov
mov
push
mov
xchg
ret
add
mov
add
add
mov
clc
repnz
nop
nop
jae
add
lret
cmp
add
adcb
jmp
dec
add
mov
jne
clc
repnz
nop
nop
jae
dec
pop
add
out
out
clc
clc
repnz
nop
nop
jae
fwait
and
sar
repnz
nop
nop
jae
add
add
sub
lods
add
cmpsl
add
clc
repnz
nop
nop
jae
add
xlat
add
add
je
clc
repnz
nop
nop
jae
push
add
xchg
push
clc
repnz
nop
nop
jae
add
or
xchg
mov
clc
repnz
nop
nop
jae
add
clc
roll
add
les
repnz
nop
nop
jae
adc
mov
add
insb
sbb
pusha
mov
repnz
nop
nop
jae
test
lret
add
xor
nop
nop
jae
dec
jbe
mov
add
stc
insl
push
mov
pushaw
add
sbb
add
add
xchg
add
inc
add
lods
dec
nop
push
mov
leave
nop
jmp
add
mov
cmp
push
mov
add
push
jo
test
nop
push
mov
leave
nop
jmp
add
add
and
nop
push
mov
leave
nop
jmp
add
and
lods
mov
xchg
ret
and
xlat
add
add
add
push
in
clc
repnz
nop
nop
jae
or
inc
adc
push
mov
leave
nop
jmp
movsb
add
add
push
mov
leave
nop
jmp
add
mov
add
add
add
mov
inc
add
add
mov
cld
nop
nop
jae
add
add
and
add
arpl
sti
nop
push
mov
leave
nop
jmp
cs
add
clc
repnz
nop
nop
jae
add
mov
add
add
mov
add
add
jno
add
push
clc
repnz
nop
nop
jae
add
mov
cmp
jbe
push
push
clc
repnz
nop
nop
jae
cmp
push
outsl
push
nop
push
mov
leave
nop
jmp
pop
add
add
push
add
nop
test
add
idivb
mov
clc
repnz
nop
nop
jae
add
adc
xchg
xor
clc
repnz
nop
nop
jae
mov
sub
and
test
mov
xchg
ret
test
or
add
clc
repnz
nop
nop
jae
add
add
shr
clc
repnz
nop
nop
jae
stc
add
flds
mov
push
push
mov
xchg
ret
fwait
loope
or
imul
out
add
clc
repnz
nop
nop
jae
or
pop
clc
repnz
nop
nop
jae
mov
cs
push
rorb
add
xorl
clc
repnz
nop
nop
jae
push
add
pusha
lds
mov
xchg
ret
lock
cmp
add
add
mov
clc
repnz
nop
nop
jae
add
add
adc
cld
nop
nop
jae
cmp
xlat
dec
add
test
nop
push
mov
leave
nop
jmp
add
fnstcw
add
add
out
cmpl
jae
lock
add
repnz
nop
nop
jae
add
popf
test
clc
repnz
nop
nop
jae
add
int3
add
clc
repnz
nop
nop
jae
fwait
xlat
mov
add
jnp
inc
sub
nop
jmp
cmp
stc
insb
cmp
repnz
nop
nop
jae
adc
add
xlat
push
clc
repnz
nop
nop
jae
push
and
repz
nop
push
mov
leave
nop
jmp
add
mov
mov
clc
repnz
nop
nop
jae
push
cmp
dec
and
adc
inc
add
pop
cmp
add
mov
add
push
movzwl
clc
repnz
nop
nop
jae
jbe
add
imul
clc
repnz
nop
nop
jae
add
cmp
add
repnz
nop
nop
jae
stc
stc
add
leave
pop
icebp
xor
nop
push
mov
leave
nop
jmp
dec
push
add
mov
clc
repnz
nop
nop
jae
add
jbe
add
clc
repnz
nop
nop
jae
add
mov
stc
add
out
add
add
nop
push
mov
leave
nop
jmp
or
stc
cltd
lea
push
mov
xchg
ret
jbe
push
lock
mov
in
leave
nop
jmp
add
add
add
or
lods
jae
add
xlat
add
mov
or
mov
xchg
ret
sub
add
add
cwtl
outsl
pop
nop
push
mov
leave
nop
jmp
add
add
cmp
shrb
add
mov
push
loopne
clc
repnz
nop
nop
jae
roll
cmp
mov
push
mov
xchg
ret
dec
add
add
add
add
push
fldl
dec
cmp
repnz
nop
nop
jae
add
mov
fistps
nop
jae
adc
push
loope
add
dec
jo
or
test
push
mov
leave
nop
jmp
imul
add
loopne
add
clc
repnz
nop
nop
jae
add
add
add
lods
add
jecxz
clc
repnz
nop
nop
jae
cmp
scas
add
add
push
mov
leave
nop
jmp
leave
pop
add
cmp
cmpsb
add
jecxz
xchg
or
add
nop
jmp
mov
dec
mov
add
mov
decl
cmp
mov
add
add
or
add
repnz
nop
nop
jae
xchg
dec
insb
pop
adc
add
adc
in
leave
nop
jmp
jbe
int3
add
add
mov
pop
clc
repnz
nop
nop
jae
mov
loope
add
loope
fdivp
xchg
clc
repnz
nop
nop
jae
dec
xchg
mov
add
add
push
mov
leave
nop
jmp
mov
mov
add
clc
repnz
nop
nop
jae
cmp
add
rolb
repnz
nop
nop
jae
or
add
mov
xchg
ret
roll
add
mov
push
mov
xchg
ret
add
insb
add
pop
clc
repnz
nop
nop
jae
add
add
add
lea
mov
xchg
ret
add
pop
add
inc
push
lods
push
mov
xchg
ret
mov
add
push
add
sub
xlat
jno
add
and
test
nop
nop
jae
popf
or
lret
lock
pop
pop
or
add
jb
mov
add
ds
pop
push
insb
sbb
mov
clc
repnz
nop
nop
jae
and
mov
add
add
clc
repnz
nop
nop
jae
cmp
add
lcall
nop
jae
cmp
mov
adc
nop
jmp
add
imul
jno
clc
repnz
nop
nop
jae
cmp
add
fstp
sbb
push
mov
xchg
ret
and
mov
aam
je
clc
repnz
nop
nop
jae
pop
add
addb
insl
push
push
mov
xchg
ret
movsb
add
or
pop
lcall
and
repnz
nop
nop
jae
mov
leave
out
clc
repnz
nop
nop
jae
stc
add
add
clc
add
add
nop
jmp
popf
and
add
repnz
nop
nop
jae
add
add
loope
leave
xor
clc
repnz
nop
nop
jae
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
inc
into
fldt
sub
repnz
nop
nop
jae
add
mov
sbb
clc
repnz
nop
nop
jae
clc
clc
cmp
movsb
int3
mov
add
sbb
add
repnz
nop
nop
jae
shl
add
clc
repnz
nop
nop
jae
cmp
movl
call
nop
push
mov
leave
nop
jmp
push
add
repnz
nop
nop
jae
cmp
mov
clc
repnz
nop
nop
jae
add
leave
add
or
sarl
sub
nop
jmp
add
push
pop
add
mov
clc
repnz
nop
nop
jae
movl
xlat
pop
nop
push
mov
leave
nop
jmp
loope
jbe
insb
pop
add
insl
mov
clc
repnz
nop
nop
jae
mov
add
dec
mov
xor
clc
repnz
nop
nop
jae
add
add
test
repnz
nop
nop
jae
flds
add
jns
add
add
cwtl
add
cwtl
add
cli
test
cld
nop
nop
jae
mov
dec
jbe
add
sub
clc
repnz
nop
nop
jae
dec
push
add
jb
fisubl
add
mov
jne
clc
repnz
nop
nop
jae
add
orl
adc
pushl
mov
cmp
test
clc
repnz
nop
nop
jae
add
add
loope
xchg
cmpl
nop
jae
add
add
in
pop
push
mov
xchg
ret
add
mov
mov
mov
xchg
ret
add
add
cmp
lcall
clc
repnz
nop
nop
jae
lret
mov
fisttpll
test
repnz
nop
nop
jae
test
inc
push
adc
nop
push
mov
leave
nop
jmp
and
add
fidivs
mov
add
push
mov
xchg
ret
add
add
add
mov
xchg
ret
insb
stc
sub
add
scas
add
nop
push
mov
leave
nop
jmp
add
mov
loope
add
test
clc
repnz
nop
nop
jae
or
pop
cwtl
flds
clc
repnz
nop
nop
jae
movsb
add
add
push
xlat
pusha
loope
rclb
cltd
inc
add
cwtl
test
add
mov
test
call
nop
jmp
stc
sub
add
mov
push
mov
xchg
ret
mov
add
add
xor
xorb
xchg
ret
or
mov
cmp
addb
pop
je
clc
repnz
nop
nop
jae
push
add
pop
jl
clc
repnz
nop
nop
jae
add
mov
mov
xchg
ret
popf
imul
adc
nop
push
mov
leave
nop
jmp
mov
add
movsb
addl
jmp
movsb
jbe
jbe
sub
add
add
into
add
add
jmp
rorl
repnz
nop
nop
jae
mov
jbe
mov
clc
repnz
nop
nop
jae
and
addl
sbb
clc
repnz
nop
nop
jae
add
roll
popf
pop
fwait
clc
repnz
nop
nop
jae
add
stc
adcl
jle
add
and
add
add
add
add
add
clc
repnz
nop
nop
jae
cmp
add
pop
add
add
add
repnz
nop
nop
jae
int3
cmp
add
repnz
nop
nop
jae
imul
mov
add
push
mov
xchg
ret
or
pop
mov
add
add
leave
sub
repnz
nop
nop
jae
movl
push
mov
xchg
ret
fwait
add
add
push
clc
repnz
nop
nop
jae
add
add
notb
mov
nop
push
mov
leave
nop
jmp
add
stc
add
fwait
add
add
push
mov
leave
nop
jmp
clc
add
add
mov
pusha
clc
repnz
nop
nop
jae
add
mov
xchg
mov
sub
nop
nop
jae
mov
stc
cmp
or
add
nop
push
mov
leave
nop
jmp
dec
mov
lret
mov
repnz
nop
nop
jae
push
add
add
lock
sti
push
mov
xchg
ret
cmp
cmp
mov
adc
repnz
nop
nop
jae
mov
lret
add
mov
add
nop
movsl
add
push
mov
xchg
ret
pop
and
add
lret
fistpl
clc
repnz
nop
nop
jae
add
dec
mov
clc
repnz
nop
nop
jae
push
add
add
cmp
nop
push
mov
leave
nop
jmp
add
add
repz
clc
repnz
nop
nop
jae
stc
push
push
and
lret
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
add
add
add
push
push
mov
xchg
ret
mov
add
add
cmp
add
add
nop
push
mov
leave
nop
jmp
add
pop
out
ret
pop
pop
add
add
add
add
add
lock
sarb
repnz
nop
nop
jae
add
out
and
cmp
cld
nop
nop
jae
stc
push
loope
add
add
and
add
add
test
nop
nop
jae
lret
add
mov
ljmp
mov
xchg
ret
add
pop
addl
adc
test
add
repnz
nop
nop
jae
pop
dec
add
push
mov
leave
nop
jmp
add
test
movsb
clc
repnz
nop
nop
jae
add
push
add
add
sbb
clc
repnz
nop
nop
jae
mov
movl
xor
sub
add
clc
repnz
nop
nop
jae
add
add
lahf
pop
clc
repnz
nop
nop
jae
xchg
add
push
add
fs
jmp
clc
repnz
nop
nop
jae
add
jbe
fwait
mov
clc
repnz
nop
nop
jae
fwait
shr
add
inc
and
push
mov
leave
nop
jmp
add
add
push
lock
cld
nop
nop
jae
push
push
add
mov
jo
mov
clc
repnz
nop
nop
jae
add
add
add
add
push
jl
ljmp
nop
jae
lret
add
or
add
pushf
and
push
mov
leave
nop
jmp
insb
lock
mov
popl
clc
repnz
nop
nop
jae
push
and
add
add
clc
repnz
nop
nop
jae
stc
cmp
lock
add
cld
nop
nop
jae
add
add
push
add
xor
clc
repnz
nop
nop
jae
add
add
adc
jmp
push
mov
leave
nop
jmp
out
add
add
enter
clc
clc
repnz
nop
nop
jae
add
add
jnp
sbb
add
clc
repnz
nop
nop
jae
cmp
add
jo
add
div
pop
cmc
clc
push
mov
xchg
ret
add
add
push
add
dec
add
cld
nop
nop
jae
add
add
xchg
mov
add
inc
push
clc
repnz
nop
nop
jae
push
adc
pop
cmp
add
cmpw
clc
repnz
nop
nop
jae
add
fwait
clc
repnz
nop
nop
jae
add
add
xchg
movsb
cltd
push
nop
push
mov
leave
nop
jmp
mov
add
cld
nop
nop
jae
add
imul
mov
mov
xchg
ret
lret
add
push
lock
nop
push
mov
leave
nop
jmp
jbe
add
add
leave
add
lahf
push
push
mov
xchg
ret
out
add
xlat
push
mov
add
clc
repnz
nop
nop
jae
stc
add
leave
lcall
nop
nop
jae
add
pop
add
sbb
test
repz
repnz
nop
nop
jae
movsb
push
pop
add
pushl
clc
repnz
nop
nop
jae
xlat
jbe
add
lret
add
clc
repnz
nop
nop
jae
dec
mov
add
shlb
mov
xchg
ret
add
add
sub
leave
daa
push
clc
repnz
nop
nop
jae
mov
add
push
pop
lea
push
mov
xchg
ret
dec
add
mov
add
add
clc
repnz
nop
nop
jae
jbe
add
dec
add
pop
and
repnz
nop
nop
jae
adc
stc
cmp
pop
loopne
fwait
clc
repnz
nop
nop
jae
insb
and
cmp
mov
sub
mov
xchg
ret
stc
cmp
add
add
add
rolb
push
das
push
push
mov
xchg
ret
stc
cwtl
clc
add
aas
add
clc
repnz
nop
nop
jae
rcll
cmp
xchg
clc
repnz
nop
nop
jae
mov
add
mov
nop
nop
jae
add
add
add
push
mov
xchg
ret
add
stc
and
add
cmpw
nop
push
mov
leave
nop
jmp
mov
or
clc
repnz
nop
nop
jae
or
out
push
add
cltd
cmpl
nop
push
mov
leave
nop
jmp
popf
sarl
add
add
ss
push
mov
leave
nop
jmp
mov
add
dec
sub
jmp
add
clc
repnz
nop
nop
jae
add
idiv
stc
and
test
mov
add
push
mov
xchg
ret
add
stc
pop
mov
mov
adc
clc
push
mov
xchg
ret
pop
pop
pop
dec
stc
add
pop
mov
nop
push
mov
leave
nop
jmp
mov
mov
mov
xchg
ret
add
jbe
popf
mov
add
sti
clc
repnz
nop
nop
jae
dec
cmp
dec
cmp
repnz
nop
nop
jae
mov
cmp
mov
xchg
ret
clc
add
add
rorb
cmpsl
xchg
xchg
ret
add
cmp
bound
cld
add
add
iret
add
add
cmp
aas
int3
nop
test
add
sub
mov
mov
in
rolb
sbb
xor
std
sbb
mov
add
add
stc
fsub
stc
scas
pop
pop
test
add
jo
pop
out
mov
mov
xchg
xchg
add
xchg
aad
add
cmpsb
add
or
add
adc
add
cmp
and
in
xchg
mov
mov
inc
fidivs
sbb
movsb
add
xor
jbe
loope
shlb
sti
test
add
mov
add
sti
xor
nop
mov
mov
xor
and
ljmp
pop
daa
jbe
dec
fisubrl
add
adc
push
pop
xchg
add
insb
jno
test
fwait
pop
add
add
add
mov
add
out
add
dec
xchg
add
inc
inc
inc
xchg
mov
fcompl
aas
mov
add
dec
adc
xchg
fs
ds
mov
in
dec
pop
fsubs
xchg
leave
fwait
insl
jle
add
shlb
xchg
add
sbb
dec
sbb
dec
rcll
lret
scas
ret
jno
mov
loopne
add
aad
add
jns
and
add
xchg
add
std
mov
jnp
add
cmp
inc
imul
in
mov
gs
cmp
inc
stos
loop
inc
leave
lods
xor
loop
gs
add
add
push
ja
lock
movsb
add
arpl
pop
push
dec
jbe
fldt
add
in
jmp
fnstenv
sarl
sbb
or
add
push
cmpsb
add
xor
jns
adc
ja
mov
add
mov
inc
sar
add
add
add
add
int
jo
add
jo
fidivrl
and
add
fstpl
add
fisubrl
xchg
cmpl
ja
rcl
shrl
cmpsl
push
mov
cmp
out
stc
push
add
adc
outsl
clc
rorb
add
call
ds
and
outsb
fcmovu
addr16
test
add
jb
int3
mov
add
frstor
sub
loopne
add
add
add
test
add
daa
mov
scas
add
dec
clc
mov
inc
insl
xor
xlat
cmp
add
dec
inc
xlat
push
pop
xchg
sub
add
mov
scas
cltd
ja
xchg
add
xchg
cmpsb
add
dec
and
add
add
and
lds
les
mov
aas
frstor
add
mov
movsb
add
mov
pop
addr16
add
fs
pop
xchg
sbb
loopne
push
or
pop
popa
adc
icebp
adcl
ljmp
jae
popf
test
add
sub
add
bound
xor
mov
add
addb
push
pop
fwait
scas
scas
ja
add
add
jae
call
sbb
jne
addb
fcomp
mov
dec
lret
xchg
add
add
lcall
repz
xor
ret
ret
lods
add
stc
push
mov
imul
in
pop
addr16
add
mov
add
std
mov
insl
loopne
mov
add
push
jae
mov
addb
icebp
adc
int
add
add
lds
addl
jnp
pop
adc
popa
mov
or
stos
add
or
add
jno
adc
jae
add
xchg
add
loope
inc
clc
mov
fsubl
jmp
push
jp
jbe
test
add
add
pop
push
jge
insl
loop
adc
inc
xchg
and
add
sti
xchg
cli
out
aas
aad
add
in
sahf
sbb
popf
cmp
add
add
add
js
add
in
lods
sub
add
add
jne
lret
add
xchg
mov
aaa
shlb
lds
push
mov
gs
and
add
stos
mov
add
sahf
jo
add
xchg
add
or
add
xor
add
je
add
adc
stos
add
jmp
add
mov
add
add
push
das
mov
add
loopne
negb
movsl
cmp
sbb
add
lret
jp
inc
fnstcw
pop
ja
pop
jb
dec
stos
mov
add
out
iret
xchg
lods
sub
add
imulb
add
add
or
add
dec
jo
jle
push
popf
aas
dec
mov
add
jmp
fxch
out
les
insb
cmp
ret
and
jnp
cld
mov
insb
sub
add
inc
cmp
jns
add
shlb
out
fmuls
xchg
ljmp
push
add
sbb
add
xchg
shlb
mov
add
aam
leave
pusha
out
lahf
movsb
add
add
sar
sub
add
push
xor
or
lret
mov
aam
mov
and
add
push
add
ja
sub
jmp
inc
daa
aad
inc
push
jbe
cmp
add
aam
jae
jl
fmul
sbb
mov
cli
xchg
cld
sbb
mov
aaa
and
add
into
fnstenv
ficoml
pop
sub
add
or
add
and
les
add
add
xchg
xor
lods
add
aad
lahf
pushf
xchg
jne
push
jnp
lods
icebp
pop
mov
dec
shrl
ds
and
adc
push
inc
bound
sub
add
xlat
pop
push
pop
aaa
xor
add
mov
test
add
lret
and
add
add
jp
xor
push
je
das
cltd
push
lret
push
mov
add
add
mull
idivb
and
add
push
add
xchg
and
fs
push
cmp
pop
mov
and
add
lds
and
add
jb
ja
push
lock
arpl
insb
push
add
rcr
mov
test
xchg
out
pop
outsb
lods
xchg
push
dec
jp
sub
fs
add
add
adcl
jmp
out
lods
add
xchg
negb
loope
icebp
jae
add
ret
xchg
inc
mov
pop
mov
pop
pushl
and
add
xchg
mov
mov
fsubrl
mov
ja
rolb
add
cmp
jle
repz
inc
clc
or
popf
cmc
and
add
addb
push
stos
add
mov
xchg
mov
stos
add
xchg
jl
cmp
add
sarl
outsl
gs
out
dec
mov
adc
ds
jg
sub
add
push
xor
add
xor
nop
sbb
notl
loope
outsl
pop
jg
cmpsb
add
jns
add
add
push
xor
pop
shrl
or
cwtl
xchg
add
mov
cmpsl
dec
enter
add
ret
mov
add
sbb
adc
xor
add
addb
and
add
jle
adc
scas
xchg
out
pushf
dec
stc
or
or
sbb
shl
fistpll
mov
call
aam
movsb
add
jnp
push
addb
loope
loopne
jmp
sub
add
inc
data16
add
mov
add
add
add
dec
mov
stc
sub
add
mov
sbb
js
bound
add
rdpmc
jp
jge
mov
add
lret
add
add
add
add
add
arpl
add
arpl
imul
pop
mov
add
add
fildl
loop
add
cltd
fdivrp
and
add
add
daa
pop
push
and
add
addr16
ja
and
add
addr16
imulb
add
ja
int
ror
mov
add
sti
inc
mov
xor
mov
repz
fistpl
fcomip
das
dec
and
or
mov
rcr
cmpsl
jns
std
mov
add
pop
rcrb
xchg
into
gs
inc
xchg
inc
mov
add
add
add
movsl
inc
sahf
lret
outsb
sub
add
std
add
add
pop
push
por
adc
pop
into
std
xor
roll
cli
addb
push
push
ret
jg
inc
mov
xchg
or
addb
jg
std
jne
aaa
std
mull
inc
in
aam
dec
pop
sbb
out
xchg
lds
jl
pop
jge
test
add
mov
add
xchg
add
sbb
push
mov
in
bound
loopne
mov
into
xchg
pop
xchg
aam
and
pop
outsl
dec
out
adc
pusha
cmp
shll
jnp
pop
dec
dec
not
mov
dec
data16
in
filds
xor
pop
lods
icebp
adc
add
sbb
add
add
stos
add
ficompl
dec
mov
adc
stos
add
insl
lcall
xchg
cmpsl
xlat
gs
insb
xor
ret
repnz
dec
mov
add
jb
mov
jmp
add
fwait
pop
jle
xor
popf
adc
imul
outsb
push
loop
pop
or
test
add
add
jb
lret
dec
dec
mov
cmp
add
dec
pushf
ret
in
fbld
sbb
add
test
mov
jns
inc
push
add
cltd
mov
inc
lods
add
sub
push
push
pop
jns
mov
add
test
add
icebp
push
sahf
pop
dec
repz
and
add
add
sbb
add
arpl
loopne
incl
cwtl
xor
add
shll
scas
add
das
stc
iret
ljmp
cltd
fldenv
out
lret
mov
in
ret
inc
push
xchg
dec
mov
mov
mov
loope
add
jmp
or
push
inc
pop
hlt
pop
in
jecxz
add
in
fdivrl
dec
jle
popf
sub
add
nop
das
push
push
mov
repnz
sub
popf
jge
ror
sbb
fcompl
and
add
ret
xor
test
ja
pop
mov
add
lret
je
dec
jecxz
add
sbb
shlb
addb
loope
pop
mov
lea
add
cli
add
hlt
movsb
add
adc
mov
push
add
mov
fwait
inc
or
imul
iret
or
add
jl
repz
sub
add
shl
jbe
and
add
add
or
and
add
ss
lods
xorl
push
loop
mov
lahf
push
add
add
dec
push
xor
sub
add
xor
repnz
enter
into
inc
jae,pt
inc
cmp
mov
mov
add
push
into
and
inc
sub
add
and
das
push
gs
add
adc
push
jbe
add
addb
push
pushf
loopne
push
mov
cmp
add
js
jmp
shl
hlt
out
rorl
add
add
add
push
dec
cmp
iret
xchg
flds
or
add
movl
add
test
inc
mov
or
cli
stos
add
ja
cli
push
add
imul
mov
add
adc
sti
inc
lret
add
add
cltd
fistpl
cmp
add
ficompl
adc
cmc
rorb
out
mov
push
mov
rcl
fists
fisubs
repnz
mov
iret
test
fsubrs
sahf
lock
add
inc
mov
xchg
mov
add
adc
push
push
add
test
add
out
jo
add
add
repz
add
cmpsb
add
sub
mov
pop
iret
jb
rclb
push
iret
push
or
popa
ficoml
pushl
dec
push
dec
push
pusha
xchg
test
add
xor
mov
add
test
mov
add
addb
imul
mov
sbb
add
cltd
mov
add
and
add
add
mov
pop
repnz
mov
add
shr
repz
test
mov
test
add
add
pop
shlb
add
add
insb
cltd
ds
mov
cmp
mov
lods
add
stos
add
xchg
push
loope
stos
pop
sub
mov
lahf
xchg
pop
in
fiadds
cmp
pop
fucomp
aaa
repz
push
add
sub
add
mov
add
lods
add
aaa
iret
test
add
in
ret
jo
push
xor
cld
lret
leave
fcmovbe
add
add
mov
adc
cmp
xor
jne
inc
mov
repz
lahf
jnp
push
add
mov
fcomps
ss
add
mov
popa
int3
cmp
add
add
add
cmp
fdivrs
das
mov
add
test
add
add
addr16
test
add
addb
xor
mov
dec
rcr
jg
out
mov
cltd
xchg
in
sbb
xlat
add
cmpsl
lods
call
scas
out
mov
iret
pop
out
fcomps
mov
js
jo
scas
inc
mov
mov
add
add
cmp
push
lret
mov
out
les
bound
scas
cld
int
popa
jp
push
in
lret
add
sti
mov
add
cmp
hlt
ja
fadd
cmpsl
leave
out
in
sbb
add
pop
mov
add
addr16
mov
add
iret
out
add
sbb
mov
inc
inc
lret
out
push
hlt
and
cli
lds
or
stos
add
aad
lret
jno
and
or
add
gs
pop
out
imul
lcall
in
cmpl
jecxz
adc
add
add
add
add
add
pop
out
out
jns
push
stos
add
insb
xor
jp
cmp
pop
mov
shll
loope
add
lret
fcompl
adc
mov
cmp
pop
push
adc
or
add
pop
xor
add
xor
add
sbb
jo
shrl
adc
cltd
das
sub
mov
add
or
call
mov
adc
sahf
enter
scas
add
ja
inc
add
push
and
movsl
lea
add
fldl
cmovno
ljmp
jle
push
sub
inc
pop
sarb
pop
into
into
sub
add
bound
sub
add
lea
jl
mov
add
xor
ljmp
fidivl
inc
loope
sbb
add
movsl
mov
add
add
adc
mov
lret
add
negb
or
jae
test
add
add
push
pop
lahf
lret
and
add
xchg
add
scas
add
jb
add
pop
add
adc
ficompl
pop
aaa
lods
add
sarb
jb
mov
add
xchg
xchg
adc
mov
test
mov
stos
add
sub
lret
movsl
das
mov
xchg
out
lret
dec
mov
cltd
hlt
push
lcall
add
icebp
dec
mov
sub
jne
insl
outsb
add
adc
add
stos
loop
scas
add
cltd
aas
cmc
stc
push
in
add
pop
sahf
in
adc
mov
jbe
pop
mov
repz
mov
add
pop
and
sti
cmp
inc
inc
loop
cmp
add
dec
test
add
push
jecxz
mov
push
xor
dec
and
lret
mov
dec
addl
pop
imul
add
inc
repnz
xchg
add
mov
add
jbe
add
inc
mov
sahf
sbb
add
sub
add
sbb
add
dec
ljmp
sbb
add
add
stc
fnstenv
or
add
add
jl
fxch
sbb
pop
popa
jne
clc
mov
add
stos
loop
xor
inc
les
repz
pushf
push
pop
pop
mov
loope
adc
pop
cmp
shr
xchg
loope
jmp
dec
addb
jns
mov
add
jmp
add
add
jnp
lock
sti
lock
int3
movsb
add
adc
mov
mov
add
add
xor
and
out
inc
pusha
mov
sbb
xor
add
xchg
movl
add
add
add
outsb
or
add
xorl
jge
shll
xchg
test
add
stc
jmp
imul
cmp
pop
mov
add
add
repnz
out
xchg
cmp
dec
addb
repz
dec
inc
cltd
inc
nop
and
and
add
int3
inc
or
test
add
lret
add
add
pop
jno
and
add
aam
and
add
add
inc
into
or
je
ljmp
gs
testl
ror
ss
divb
mov
xor
or
add
ja
add
and
add
in
cmp
imul
dec
jl
push
add
adc
pop
or
shll
and
push
mov
add
xchg
or
add
cltd
test
add
test
dec
ja
addb
stos
loope
jl
fldenv
clc
leave
aas
xor
mov
sub
dec
xlat
in
subl
add
iret
fdivrs
push
xor
loopne
push
jp
mov
imul
in
nop
adc
insb
unpcklps
das
cmp
test
add
mov
dec
lds
cmp
pop
push
repnz
sub
add
pop
cmp
sbb
sub
add
jns
mov
sub
add
shll
ljmp
addb
outsl
imul
push
ret
mov
push
add
xor
aad
lcall
add
shlb
dec
mov
add
arpl
push
fs
in
ja
add
add
loop
jle
and
add
shl
scas
fs
popf
std
nop
lods
add
mov
xor
jns
cmc
push
adc
mov
add
clc
adc
mov
les
out
mov
inc
fcoml
adc
add
and
add
inc
addb
inc
shll
add
push
add
lahf
testl
fiaddl
and
aaa
in
inc
aas
cld
and
sbb
and
add
add
mov
add
add
arpl
xor
outsl
push
mov
xor
cld
rorl
mov
mov
add
cmp
add
and
out
repnz
lret
fs
jle
pop
or
pop
lea
inc
push
add
push
stos
imul
add
shll
push
fs
mov
jl
add
and
mov
add
repz
add
add
inc
mov
mov
xchg
jle
lods
xchg
das
mov
xchg
add
dec
push
lcall
add
mov
add
jns
mov
jle
add
push
jecxz
cltd
adc
les
pop
sbb
add
fcoml
scas
movsl
mov
add
jge
add
je
jecxz
cmp
add
push
cmp
imul
pop
jg
stc
jb
loopne
mov
sub
add
call
xor
sbb
repz
xor
push
ret
lret
dec
inc
fidivl
movsb
add
jl
push
add
mov
xchg
add
mov
jns
js
add
aam
mov
add
mov
out
add
aas
add
cmpsb
add
arpl
cld
mov
and
add
add
jnp
cmc
lret
xor
lods
add
movsb
add
stos
add
data16
and
add
adc
pop
lret
xor
push
sub
push
lods
add
scas
jns
add
pop
mov
add
addb
and
add
out
adc
lahf
clc
push
add
mov
add
jmp
sarb
adc
addl
out
add
mov
pop
dec
lcall
xchg
scas
mov
or
add
add
fnstenv
cmp
int
jbe
movsb
add
dec
pop
push
add
add
or
add
pop
scas
outsb
daa
dec
sub
push
add
out
inc
shl
das
movsl
jne
les
add
adc
dec
bound
add
or
push
push
add
mov
push
dec
cmp
add
add
add
cmc
jle
or
adc
add
daa
ss
adc
sbb
rcll
push
add
test
into
cltd
pushw
inc
mov
cltd
insl
xchg
hlt
enter
add
lea
mov
add
shufps
aam
mov
inc
mov
add
sub
dec
fiaddl
add
jnp
xchg
add
inc
or
add
notb
fyl2xp1
sbb
test
add
cmc
push
add
mov
in
lds
add
inc
and
add
pop
mov
add
lret
add
add
fs
adcl
jg
add
mov
add
cli
call
or
add
add
jp
clc
xchg
andl
add
push
aas
test
dec
mov
test
add
add
mov
jno
imul
add
rcrl
repz
test
add
addb
shrl
shl
mov
scas
add
sub
add
lods
add
add
add
add
jnp
imulb
add
call
xor
in
bound
add
shlb
add
lock
shld
test
add
jns
cmpsl
scas
and
add
rol
clc
jecxz
mov
insl
testl
js
dec
jle
add
add
mov
and
add
pop
pop
push
add
in
xor
mov
pop
sbb
fisubs
scas
add
dec
mov
add
addps
insl
dec
mov
or
add
add
xor
mov
add
adc
pop
xor
loop
mov
add
notb
or
add
xor
jbe
add
mov
xor
mov
xor
stos
add
adc
lret
jne
pop
inc
dec
lods
xchg
add
bound
add
fldt
add
mov
add
sbb
inc
add
lds
xchg
dec
mov
or
add
pop
out
rol
mov
mov
mov
mov
add
rol
mov
std
pop
out
mov
add
arpl
std
xor
xchg
test
add
xor
sub
add
repnz
add
push
daa
pop
les
arpl
das
inc
lcall
call
jmp
add
add
add
and
add
rcll
insl
loope
shll
add
std
lock
aam
xchg
xchg
je
movsb
add
mov
test
mov
mov
xchg
push
add
fwait
hlt
and
mov
mov
and
add
add
outsl
lock
jle
jmp
jno
sbb
bound
fcmovne
movsl
pop
jno
sbb
test
add
sbb
cli
iret
xchg
mov
outsb
test
mov
add
add
jae
push
dec
popa
das
pop
lret
lea
add
or
inc
cmpl
add
mov
add
movsb
add
xor
push
stos
add
add
add
into
cmc
mov
add
lods
inc
loop
insb
xor
add
ss
mov
mov
add
bound
cwtl
mov
dec
jbe
test
mov
push
insl
adc
idivl
popw
in
adc
add
jp
add
mov
add
mov
add
add
adcl
pop
mov
add
and
add
xchg
add
fidivs
add
dec
ss
fsubrl
cmp
mov
dec
jb
cmpsl
sub
in
jecxz
ja
inc
and
add
fstps
jle
stos
jle
repnz
hlt
cwtl
jae
call
add
lds
add
aas
fistpl
ret
push
test
push
add
ljmp
add
or
add
inc
cmp
add
jge
mull
add
jb
jae
stos
add
and
add
jp
add
adc
popf
loope
push
push
popa
int
pop
enter
pusha
insb
test
add
shrl
add
add
add
add
sub
add
sub
add
std
cli
and
mov
inc
fidivrs
sbb
fbstp
add
aaa
mov
rclb
add
mov
add
inc
iret
test
cwtl
jge
and
mov
add
mov
and
add
or
add
movsl
xchg
mov
add
scas
add
leave
mov
popa
add
dec
cld
jmp
add
ficoms
xchg
pop
mov
add
add
pusha
shr
jge
rcr
out
shll
add
mov
mov
lcall
jae
xchg
add
add
push
add
inc
inc
cwtl
in
daa
adc
mov
add
fmull
adc
lcall
add
sbb
push
push
mov
insl
sbb
pushf
adc
push
insb
adc
add
mov
jns
mov
mov
add
fwait
cwtl
push
push
add
or
mov
das
jl
lods
sub
pusha
fwait
jns
inc
aam
enter
or
add
out
cmp
repz
repnz
pop
or
add
add
loope
dec
pop
xor
pop
outsb
dec
mov
add
push
mov
divl
add
mov
ficoml
inc
shrb
in
mov
insl
imul
xchg
ficoms
add
dec
fcompl
add
add
adc
popf
je
or
add
add
adc
sti
mov
mov
xor
out
ss
cwtl
repz
jp
popf
and
push
aad
sbb
add
sbb
add
jne
pop
addb
movsl
mov
add
push
dec
fadds
xor
inc
push
xchg
or
add
lcall
out
je
nop
insl
mov
cmp
push
add
pop
cmpsl
std
lods
sarl
push
mov
arpl
in
notb
movsl
jge
mov
inc
pop
and
das
inc
fldt
movsl
push
fnstsw
mov
mov
sbb
add
push
je
jo
xchg
mov
xlat
inc
mov
add
test
jne
in
sahf
test
add
cli
popa
insb
gs
jae
popf
mov
add
cmp
shrl
add
cmpsb
add
stos
add
xchg
inc
jge
push
mov
add
sub
add
or
sbb
mov
sbb
xchg
cmpsb
add
test
pavgw
xchg
movsl
insb
adc
sbb
scas
out
cmc
mov
add
xor
lock
movsb
add
add
add
dec
inc
out
clc
jns
loope
in
popl
jne
jb
add
in
mov
and
push
jge
in
push
ret
addb
addl
inc
pop
aas
cmp
add
sbb
inc
test
add
in
orl
add
xchg
ret
pop
cltd
test
add
pop
or
add
ret
add
enter
inc
stos
add
sbb
mov
add
je
pop
adc
mov
outsl
lock
aam
and
add
add
add
imull
je
movsl
fsubs
mov
divb
sahf
adc
or
pop
inc
sub
add
out
insl
jns
jl
mov
push
mov
add
add
push
cmp
add
mov
add
outsl
les
add
aas
and
add
lcall
addb
xor
push
or
add
dec
jg
mov
add
cmp
in
out
and
inc
call
add
in
repz
aaa
fstpt
sub
push
add
ja
sar
add
or
sbb
cmpsl
adc
sub
add
xor
sbb
sbb
cmp
testb
adc
popa
mov
add
movsl
cmp
gs
frstpm(287
lret
mov
loope
add
and
cmpsb
add
addb
rolb
out
shrl
push
add
sub
add
add
add
add
add
and
add
cmp
push
mov
pop
inc
divb
andl
fs
or
add
jne
in
push
imul
test
add
cmp
fidivs
mov
add
add
mov
add
pusha
sub
jmp
and
add
test
add
cmp
push
add
sbb
jg
sub
add
push
cmp
xor
pop
pop
frstor
mov
out
cld
fstpt
mov
sbb
imul
add
int3
sbb
add
mov
push
add
jne
mov
add
jmp
inc
out
mov
mov
add
pusha
mov
imull
push
shl
sbb
jno
add
sbb
pop
pop
or
add
mov
or
xor
cmp
fdivl
dec
and
add
out
mov
add
mov
lods
jno
icebp
mov
add
push
add
sbb
loopne
cmp
add
inc
push
cmc
pop
push
andl
leave
sbb
jno
ja
js
test
add
jg
inc
mov
add
add
in
clc
inc
push
fidivs
arpl
lods
push
repnz
mov
jns
add
add
sub
lods
mov
add
jl
cmpsb
add
fidivl
sahf
fildl
add
xchg
jbe
mov
add
mov
testb
mov
add
add
bound
add
mov
add
aas
iret
jge
leave
ficompl
imul
or
mov
in
add
into
and
add
cmpl
rolb
pop
aas
jbe
xor
jae
in
mov
neg
push
incb
int3
notl
jb
pop
fdivl
lahf
mov
xor
fmuls
add
pop
mov
lahf
imul
fistps
movsb
add
cld
dec
fs
mov
add
stos
add
lahf
nop
in
dec
pop
xchg
adcl
sbb
out
repz
push
and
js
mov
ficomps
add
add
push
adc
add
inc
sub
loope
add
adc
add
dec
mov
jne
in
movsl
gs
fcmove
and
data16
cwtl
push
test
mov
sub
add
stos
add
gs
cmp
rolb
cld
and
add
stos
dec
lahf
testl
scas
add
mov
add
add
or
add
add
in
loopne
repnz
mov
pop
add
jno
mov
add
jae
mov
add
dec
imul
add
cld
add
add
add
pop
in
add
out
jne
std
jno
fisttps
add
imul
addr16
add
aaa
fstps
cmp
inc
and
add
sbb
xor
cld
idivb
or
stos
jae
add
pop
adc
add
loopne
xchg
or
fldcw
enter
iret
faddl
nop
dec
lds
fmuls
add
test
add
hlt
mov
in
imul
mov
add
ret
mov
pop
inc
pop
test
add
add
mov
add
jo
pop
test
add
sub
add
inc
call
sbb
xor
fisttps
shrl
add
add
outsb
pop
inc
repnz
fbld
push
int
ret
cmp
data16
sub
add
popf
daa
pop
cld
lret
je
pop
cmp
jmp
mov
add
xchg
add
xchg
jmp
stos
repnz
popa
out
cwtl
arpl
sbb
test
add
lahf
push
mov
aam
mov
jecxz
test
add
pop
pop
pop
das
push
add
add
nop
mov
pop
or
add
mov
add
add
add
mov
dec
clc
rorl
stos
add
movsl
and
add
les
add
dec
jbe
scas
addb
lds
dec
and
jne
jo
mov
fcoml
mov
add
test
add
add
test
add
xor
adc
decb
add
popa
fucomi
call
xchg
or
fcoml
and
add
cwtl
push
ret
out
dec
lret
and
stos
add
sub
add
bound
out
xor
or
xor
pop
mov
add
push
outsl
add
add
jle
mov
dec
fwait
dec
fldcw
aam
bound
jg
push
add
mov
add
lcall
dec
mov
scas
add
add
add
pusha
bound
cmp
test
add
fstps
shlb
testb
mov
out
fstpt
or
add
in
lods
add
incl
add
jno
outsl
xchg
and
add
rcll
dec
xchg
jo
add
icebp
dec
cmc
add
add
js
lahf
and
add
or
pop
lret
scas
sbb
les
add
inc
inc
mov
std
adc
add
inc
movsl
into
popa
cmc
pop
mov
data16
add
test
add
add
fs
fwait
inc
int3
push
mov
arpl
aam
shl
mov
and
jnp
inc
test
mov
hlt
cmp
test
add
iret
sub
inc
and
add
push
or
add
mov
jmp
sub
add
xchg
cmpsb
add
negl
sti
out
hlt
popa
sub
add
test
add
add
push
aam
enter
xchg
clc
pop
popf
xchg
ret
popa
pushf
mov
jge
push
dec
inc
and
cmp
add
adc
mov
add
mov
ss
or
add
ucomiss
add
sti
les
xchg
test
fisubs
je
mov
jae
femms
add
jl
add
lock
stos
add
xor
dec
fsubr
add
cmpsl
xorl
frstor
add
add
stos
add
repz
add
popa
cmc
aad
mov
add
xor
mov
jo
dec
in
add
stc
lods
ja
cltd
pop
pop
addb
insb
pusha
mov
inc
loopne
add
sarl
or
add
fsubrl
push
addb
aas
icebp
into
sbb
mov
data16
je
insl
imul
add
mov
add
adc
add
jno
mov
add
xor
add
push
je
and
add
add
popf
mov
add
and
add
push
and
add
or
add
xchg
clc
adc
dec
cmp
out
out
ret
in
in
push
and
add
adc
cmpsb
add
inc
rol
dec
push
xchg
dec
ss
add
pop
pop
pop
enter
add
aam
scas
sub
lahf
inc
out
xchg
mov
jp
hlt
pop
adc
in
inc
mov
dec
cmp
jo
cwtl
push
add
and
sbb
mov
add
xchg
mov
add
test
add
add
xchg
add
xchg
repz
out
pop
inc
ss
orl
cmp
outsb
sbb
clc
or
add
add
sbb
xor
add
ret
enter
push
jge
add
add
and
add
fs
into
push
add
in
inc
mov
add
or
add
jge
push
sub
xor
sahf
aaa
mov
adc
sub
add
mov
mov
add
subl
aad
sub
add
mov
pop
or
add
jnp
fdivp
jmp
inc
and
add
cmp
or
add
add
sub
add
pop
clc
sbb
add
mov
add
sub
add
sbb
fsubr
enter
lgs
add
ljmp
add
dec
dec
fbld
add
nop
imul
lock
mov
fcomip
push
cwtl
pushf
movl
add
sti
xor
add
imul
adc
ja
xor
sti
iret
jge
scas
adc
add
add
jl
adc
fldcw
dec
rcrl
and
add
add
jnp
ljmp
mov
cli
sub
add
inc
cmc
loopne
push
lods
sbb
lods
push
inc
add
add
xlat
jge
movsl
mov
mov
out
push
mov
add
popf
push
arpl
call
add
mov
add
mov
sub
add
xor
outsb
mov
test
add
inc
test
add
push
iret
rcl
mov
loope
loopne
addb
xor
add
mov
pop
insb
in
fdivs
ss
nop
imul
jne
xchg
decb
add
in
xchg
add
ret
dec
clc
cwtl
repz
jmp
jp
fisttps
inc
push
xchg
gs
add
shrb
inc
loopne
addb
shrl
inc
imul
add
pop
aam
mov
gs
enter
or
add
jns
dec
xchg
sahf
dec
jnp
enter
add
inc
ja
add
push
daa
ret
mov
add
add
add
dec
jg
ret
sbb
mov
add
and
add
mov
cli
pop
jp
scas
add
test
add
pop
inc
sub
cmpsl
icebp
mov
sahf
xor
xchg
rorb
mov
pop
stc
jbe
gs
pop
adc
lcall
mov
add
add
dec
inc
xor
jge
mov
arpl
add
frstor
jns
fwait
cmpl
sbb
mov
idivb
push
sub
add
mov
movsl
loopne
lds
test
add
into
sub
add
cmp
jle
add
and
add
cmpsb
add
xor
add
add
outsl
or
add
cli
addb
mov
sahf
fldenv
add
mov
xchg
daa
adc
mov
adc
jae
scas
arpl
test
add
mov
hlt
jne
jp
add
add
or
test
add
add
or
push
mov
pushl
sbb
xchg
sbb
mov
add
cmp
repz
mov
ds
call
sub
add
sub
in
or
clc
cmpl
popa
jns
dec
aas
inc
ret
lods
jl
jbe
icebp
adc
xor
addb
stos
shll
cmp
lret
mov
fsubp
daa
push
or
add
pop
std
push
inc
fisubl
jno
add
adc
divb
jge
adc
mov
sub
add
nop
lret
add
xchg
popa
and
add
add
ljmp
mov
mov
cmc
add
add
mov
dec
jg
inc
mov
pop
and
add
add
xchg
xor
mov
aad
push
add
ds
mov
das
shr
xchg
xor
push
add
adc
mov
cltd
hlt
push
loop
mov
and
add
lea
or
add
imul
js
add
adc
mov
add
lahf
lcall
lock
cmpsb
add
aam
add
xchg
jg
push
adc
add
mov
push
imul
push
jecxz
add
jae
add
loop
push
add
jbe
mov
add
push
inc
jmp
addr16
add
add
popa
cltd
repz
hlt
fwait
push
add
and
outsl
adc
fistpl
outsl
lock
add
movsl
mov
jne
add
cltd
sub
add
add
add
jl
icebp
jno
aaa
or
add
cwtl
cli
jge
and
add
push
fidivs
mov
addb
cltd
sahf
mov
add
fstl
cmp
pop
inc
sub
add
and
add
mov
adc
mov
inc
lahf
fldt
add
fnstcw
cwtl
jnp
bound
mov
bound
lcall
lret
mov
cmc
lods
xchg
fwait
push
cld
pop
lods
clc
jmp
fwait
mov
add
icebp
mov
cmpsl
and
shl
sub
add
and
add
test
add
add
jae
lock
loope
into
icebp
dec
mov
add
xor
add
or
inc
mov
jbe
lahf
test
inc
pop
loope
lcall
add
lcall
push
add
lcall
jb
push
dec
push
enter
mov
mov
ja
clc
hlt
sub
sbb
xchg
inc
inc
push
add
cltd
shll
imulb
xor
mov
add
add
sub
add
rolb
loope
ds
stos
cld
movsb
add
mov
add
jns
jne
ljmp
add
pushf
lcall
mov
and
jno
mov
bound
int3
rcl
sub
add
and
jmp
mov
andl
lret
rcl
pop
jae
or
or
cmp
cmpl
rcll
fs
js
mov
negl
lods
add
jecxz
daa
leave
mov
add
test
imul
mov
mov
jg
cmp
mov
add
add
xor
cmp
add
dec
fbld
add
add
add
push
add
jl
add
xor
mov
decl
add
mov
aad
inc
add
add
je
out
mov
insl
add
add
sbb
and
add
add
mov
add
rclb
cli
xchg
ret
into
mov
dec
xchg
cmp
dec
loop
sbb
add
pop
std
jle
sub
add
mov
add
inc
or
add
jns
ret
in
daa
jno
dec
xor
add
mov
jge
xchg
sub
add
push
pop
jge
mov
mov
xor
add
dec
sbb
jo
les
xchg
sbb
insb
sbb
add
int
stos
add
add
and
add
inc
inc
cmpsb
add
jl
xor
cld
bound
scas
add
mov
lods
jae
dec
dec
and
add
adc
mov
add
mov
and
add
or
sub
mov
jbe
push
inc
or
sub
adc
mov
mov
add
in
add
sbb
add
xor
sbb
dec
mov
add
mov
push
in
sbb
sahf
jle
call
addb
enter
jns
xor
jns
loope
xchg
pop
insb
aas
fdivrp
fucomip
or
add
pop
je
std
push
add
pop
ljmp
aam
pop
repnz
pop
xchg
fdivs
jb
adc
add
xlat
mov
scas
mov
push
nop
sbb
xchg
add
add
ret
jle
xchg
xor
add
daa
cmpsb
add
dec
mov
lock
aaa
adc
push
sub
add
addr16
mov
and
add
inc
in
cmpl
or
add
fwait
xchg
test
add
xchg
dec
pop
movb
out
and
bound
rorb
add
sbb
psubusw
loopne
push
in
ret
sbb
xchg
pop
mov
add
xchg
idivb
addb
push
cmp
cmp
push
xor
jnp
mov
cmp
dec
pusha
xchg
addr16
sub
jns
rcrl
add
mov
add
addb
data16
add
loop
sub
add
arpl
add
js
push
add
mov
pop
addb
push
lret
mulb
xor
add
test
les
loope
lds
add
addr16
mov
ja
loope
insb
push
and
mov
add
cmp
dec
sub
fsub
imul
lea
dec
sub
add
test
add
add
rolb
add
cld
mov
push
cmp
pop
dec
sub
add
xchg
or
mov
inc
xorl
aaa
mov
out
dec
mov
fisubs
mov
add
sbb
shl
adc
add
jmp
cmovp
int3
cmp
outsl
add
add
add
adc
add
inc
nop
insb
shlb
imul
xchg
mov
ret
push
xor
xor
inc
push
int
jo
add
fnstsw
ja
mov
add
add
jge
xor
add
stc
das
mov
add
add
lods
and
add
test
xor
out
add
push
pop
cld
adc
push
pushf
sbb
add
pop
and
mov
add
mov
dec
xchg
into
nop
cmp
add
add
add
add
addb
loope
pop
jle
test
add
sbb
sbb
or
add
mov
aas
push
aas
push
and
add
sub
add
aas
outsl
pop
les
stc
in
mov
ds
insl
xlat
cmpsl
add
add
dec
into
idivl
add
lret
out
mov
push
rorb
sbb
call
mov
add
fstps
ret
add
add
sbb
cmpl
push
mov
push
mov
fsubs
leave
popf
hlt
in
in
in
add
aaa
mov
add
dec
nop
lret
inc
push
mov
jbe
test
rol
sbb
nop
add
add
addr16
pusha
negb
push
adc
add
adc
sub
pusha
inc
adc
dec
addl
jg
add
add
jb
mov
add
dec
rorb
jl
movsl
mov
cwtl
std
js
add
add
add
cwtl
and
add
clc
sub
call
add
add
hlt
mov
add
stos
add
push
mov
jb
cmp
sbb
imul
mov
fisubrl
jae
add
add
sbb
xchg
sarb
mov
addb
mov
sub
add
pop
or
repz
in
iret
mov
lcall
sub
add
sub
pop
cmp
lea
mov
jbe
add
int
addb
adc
into
mul
pop
testl
push
add
xchg
xchg
fiadds
cmp
xor
add
mov
xchg
lods
sahf
mov
flds
sti
cmp
mov
je
inc
add
fwait
add
mov
xchg
or
lahf
test
and
add
push
cmp
push
jns
das
mov
push
dec
xchg
nop
mov
ret
cwtl
je
inc
xchg
ds
lds
jmp
xchg
addb
mov
mov
sub
cmpsl
into
xor
in
jmp
jle
aam
lcall
mov
dec
push
or
add
xlat
push
pusha
mov
add
fs
mov
add
push
sbb
pop
add
push
loope
add
mov
int3
adc
enter
add
mov
add
bound
dec
cmp
sti
ljmp
int3
jmp
and
add
jle
add
or
add
ljmp
add
pop
mov
push
mov
das
mov
test
imul
or
add
fcoms
add
je
imul
push
add
imul
add
mov
add
out
dec
adc
push
lods
add
sub
inc
fidivl
mov
jbe
add
add
addr16
cmpsl
dec
addr16
repz
adc
bnd
pop
adc
int
cmp
cmp
lods
add
ja
mov
dec
push
filds
stos
jg
popa
mov
xchg
mov
daa
cmp
jnp
push
loopne
mov
pushf
xchg
add
movsl
jae
int
add
add
fistl
xchg
add
mov
add
icebp
xchg
sbb
add
add
or
fucomi
andl
loope
leave
and
jle
add
out
mov
ljmp
dec
fcomps
sub
das
stos
rolb
cmp
add
jmp
add
push
sub
jl
push
pusha
andl
jb
leave
fwait
aas
and
sbb
mov
pushf
dec
cmc
xor
fmull
test
cmp
hlt
push
dec
jne
mov
add
sub
add
jo
test
add
or
add
sub
add
dec
loopne
aaa
addb
adc
rclb
add
add
repz
adc
add
fstl
movb
add
lds
jne
push
and
add
mov
lret
add
js
ret
cmp
jns
jmp
fnstsw
add
test
mov
add
xchg
scas
add
mov
add
jmp
out
insb
inc
xchg
cmc
mov
or
les
fwait
pop
adc
mov
ljmp
xor
sub
pop
add
add
jbe
test
mov
and
mov
mov
push
pop
sub
add
stos
add
pop
ds
xchg
add
out
aam
jo
adc
xor
addb
cmp
ja
insb
std
in
mov
or
movsb
add
out
add
dec
pop
pop
sub
add
xor
rorl
jbe
mov
mov
add
xchg
add
mov
add
push
adc
add
sub
cwtl
test
ss
push
or
add
test
xchg
dec
repz
cmp
add
aam
ja
in
pop
js
inc
pop
cwtl
jno
xchg
add
mov
sub
mov
fsubl
cmpsb
add
xor
imul
jg
add
fs
fwait
cltd
iret
xchg
inc
fidivl
daa
sub
add
or
add
lods
add
lret
xchg
add
negl
add
cwtl
out
lock
leave
addr16
add
push
add
cmpsl
ljmp
add
adc
in
fs
mov
add
cmp
cwtl
sbbl
add
popw
int
adc
xor
add
xor
aad
int3
sub
add
mov
push
stc
iret
sahf
iret
jbe
adc
data16
enter
xchg
add
into
push
push
xchg
fstl
push
jl
push
add
ret
inc
sbb
add
adc
jge
add
add
jp
dec
aad
mov
pushf
sub
cmp
loopne
aaa
aad
sub
add
sarl
xchg
dec
jo
mov
or
dec
sbb
std
sub
cmp
push
mov
add
jns
sbb
or
add
aad
stos
jg
inc
dec
das
sbb
stc
daa
dec
movsb
add
sub
add
pop
outsl
dec
push
mov
cmp
sub
add
mov
ficompl
mov
add
push
add
add
add
or
add
scas
mov
sbbl
mov
add
pop
mov
test
mov
add
scas
fadds
sub
add
cmpsb
add
adc
rcll
mov
add
and
stos
add
repnz
dec
push
push
dec
leave
push
xlat
cmp
fdivrs
test
add
sub
pop
adc
jns
inc
in
pop
xchg
sbb
pop
pop
xchg
mov
add
sbb
cltd
pop
sbb
mov
push
add
movsl
mov
dec
push
lock
mov
adc
sahf
inc
sbb
test
jge
add
into
sahf
jl
xlat
movsl
out
imul
mov
add
add
fwait
loope
cmp
testb
add
dec
nop
xchg
aam
aad
pop
or
add
dec
stc
push
mov
jecxz
sub
mov
jnp
lcall
add
mov
adc
int3
mov
add
add
lret
sub
add
add
add
xchg
test
add
mov
out
cmp
imul
xchg
and
je
cmp
mov
stos
add
cmpsl
andl
fnsave
fst
jae
stc
dec
lcall
test
add
add
mov
scas
add
adc
push
adc
movsb
add
inc
mov
push
movsb
add
push
dec
dec
int
add
mov
les
mov
add
and
pop
cmove
mov
add
das
xchg
shll
gs
push
jp
fisubrs
inc
inc
js
iret
add
push
add
mov
add
jns
mov
add
or
pop
pusha
shl
data16
and
add
stc
mov
jmp
jno
add
push
jne
ss
outsb
add
add
pop
xor
xchg
and
add
inc
dec
sbb
jo
addr16
cwtl
add
mov
jns
insb
into
ret
add
add
mov
xor
mov
inc
jns
dec
aas
pop
cmpsl
in
stos
xchg
sub
add
out
out
xchg
sahf
adc
outsb
add
jb
sbb
add
repz
add
or
xor
fmull
lock
test
mov
add
repz
jns
add
push
adc
xor
sub
add
push
jecxz
cli
aad
mov
mov
dec
mov
in
jg
sub
add
test
test
insb
sbb
addb
sub
add
xor
mov
add
addb
pop
adc
add
add
addb
pop
jg
fnstenv
adc
jno
push
iret
in
dec
je
dec
pop
dec
sbb
cmp
stc
jmp
lret
in
add
add
icebp
test
add
add
or
mov
mov
inc
lods
add
test
add
push
jo
bound
lods
add
sbb
add
jns
cmp
idivl
aaa
push
cmp
pop
lret
add
fidivrs
test
pop
dec
xchg
adc
add
rcrb
sub
iret
negb
dec
daa
cmpsb
add
xchg
sub
loope
add
cmpsl
pop
mov
addr16
sbb
add
fmull
sub
add
sub
add
cli
or
push
iret
inc
jae
test
push
add
jle
in
enter
pop
pop
cmpsb
add
or
add
add
idivb
mov
add
enter
pop
out
je
mov
fistl
sbb
std
decb
mov
test
add
notl
aad
add
out
inc
fstp
push
fwait
xchg
ja
adc
lods
add
icebp
call
shll
adc
add
ret
leave
mov
add
add
ljmp
popa
inc
ficoml
addb
mov
inc
test
add
add
inc
cmp
sbb
and
push
data16
mov
cmp
jle
jmp
jne
leave
das
mov
sbb
sub
add
insl
hlt
adc
xchg
cld
setle
daa
inc
in
pushf
clc
pop
mov
xchg
xor
test
add
sub
lret
pushf
shrb
add
push
dec
fisubrs
add
lods
add
push
jne
mov
add
jp
in
add
inc
std
test
add
loope
scas
push
add
ret
sub
add
lods
js
sub
repz
xchg
lock
add
add
add
fxch
push
pop
ds
pusha
inc
jle
add
dec
lahf
fidivrs
fcomi
and
imul
jecxz
in
sub
add
inc
mov
add
or
jne
call
data16
out
add
adc
lret
add
add
add
mov
in
jecxz
lcall
add
loope
jmp
pop
xor
inc
or
add
add
mov
add
arpl
jle
cmpsl
in
mov
test
add
test
add
inc
xchg
xchg
jecxz
add
xlat
dec
cmpsl
mov
add
pushf
loopne
das
mov
add
addb
dec
or
test
add
dec
pop
xor
pushf
add
add
out
push
sub
add
adc
push
add
add
inc
pop
fwait
clc
repnz
adc
jnp
add
mov
add
cli
push
add
xchg
push
inc
pop
daa
loope
dec
push
sbb
dec
add
add
popf
movsb
add
movsb
add
jmp
add
sbb
and
add
ja
mov
push
jmp
mov
add
mov
lds
cmc
enter
subl
dec
lahf
adc
icebp
inc
ljmp
lock
add
add
cltd
inc
daa
push
add
inc
push
add
sbb
sub
add
add
ja
jns
add
or
aaa
int
cmp
rcrb
arpl
mov
dec
daa
push
mov
mov
inc
in
lret
add
out
adc
loope
xor
add
mov
push
into
fwait
stos
mov
cltd
bound
movsl
push
aaa
dec
rorl
add
ret
mov
add
pop
push
jmp
pusha
sub
js
add
push
pop
mov
xchg
jmp
add
add
sbb
add
mov
or
add
xchg
xor
xor
push
add
mov
add
jmp
add
push
adc
jge
xor
pop
adc
sbb
sti
sarb
xor
bound
jmp
js
cmp
fidivl
pop
add
fiadds
inc
push
test
add
pop
movsl
sub
daa
out
ret
fldenv
add
arpl
mov
iret
xor
jb
mov
add
xchg
sub
add
add
add
sbb
lahf
imul
add
cmpsb
add
leave
adc
or
int3
addb
jl
test
mov
dec
arpl
iret
imul
add
out
xchg
mov
addb
shr
sbb
std
pop
sbb
add
sbb
divb
pop
ds
adc
add
shlb
fnstcw
push
dec
testb
add
inc
add
add
add
ljmp
fisubrl
cmp
scas
add
insl
push
and
add
inc
cli
add
xchg
sbb
adc
jb
and
repz
sbb
cld
xor
add
cmpsl
test
add
add
lock
dec
cwtl
repnz
jge
sbb
mov
mov
loope
dec
cmp
add
inc
pop
mov
cmp
mov
icebp
movsl
gs
cltd
add
mov
and
add
aas
xchg
mov
popf
or
add
add
mov
push
std
sub
add
and
add
push
cwtl
pop
lret
out
sub
add
pop
add
add
add
mov
add
mov
add
jno
xor
out
xchg
add
add
lahf
push
add
pop
aaa
adc
imul
loopne
dec
jnp
pushf
add
cmp
ss
aad
dec
insl
clc
ret
add
fildl
add
aas
add
add
sbb
icebp
xlat
imul
cmp
idivl
inc
inc
and
add
add
push
pop
inc
lret
lret
mov
sub
add
mov
xchg
mov
dec
icebp
leave
rcl
and
push
xor
in
mov
imul
jl
fwait
insl
imul
leave
jl
jnp
pushl
add
jnp
push
jb
add
shrb
add
jle
dec
scas
ljmp
push
pop
xor
cmc
add
add
pop
push
xchg
bound
mov
add
cmova
add
add
push
add
out
mov
add
aad
mov
lcall
lret
stos
add
aaa
dec
iret
add
icebp
push
shll
add
lahf
ja
add
mov
add
les
add
add
popa
push
aad
add
push
adc
test
add
inc
cmc
push
push
push
jle
sub
add
and
add
in
dec
inc
jle
dec
daa
pop
rcr
xchg
inc
and
add
or
mov
ficompl
jo
mov
mov
add
mov
add
add
dec
sub
in
mov
addr16
rorb
out
test
sbb
insl
ljmp
icebp
xchg
xchg
repnz
add
push
add
add
add
stos
xchg
add
cmpsl
sub
repnz
test
cmp
jne
xlat
push
daa
addr16
xchg
adc
dec
cmpsl
mov
add
mov
movsl
mov
add
xlat
fdivl
add
sbb
and
add
mov
ficompl
inc
cmc
and
xor
fldt
adc
pop
jge
mov
sbb
rclb
add
pop
mov
push
add
inc
fisttpll
out
cmp
inc
int3
jmp
add
mov
mov
add
xchg
mov
adc
add
cwtl
jp
sahf
aad
push
adc
loop
add
gs
cld
jns
stos
add
push
movsl
cmpsb
add
hlt
add
fsqrt
lcall
pop
je
pushf
xchg
addr16
test
add
sub
mov
adc
add
xor
add
xor
add
dec
ljmp
test
add
add
lret
clc
mov
pop
data16
imul
in
cli
and
sbb
cmpsl
xor
aas
sar
ja
jne
ret
push
mov
xor
stc
dec
ret
mov
add
add
add
pop
xchg
cmp
xchg
enter
add
add
clc
pop
xchg
fcomps
mull
lock
sub
add
addb
xchg
mov
stc
add
add
and
lds
imul
add
add
pop
cmp
nop
js
mov
add
dec
lock
push
add
inc
sahf
pop
cltd
dec
sbb
push
add
mov
pusha
gs
scas
lock
test
popf
mov
sbb
sbb
add
xor
add
sub
add
mov
add
add
add
pop
mov
iret
push
and
add
notl
inc
cmpsl
xchg
push
scas
add
jae
sbb
adc
add
dec
sbb
pop
sahf
fadd
insl
popf
enter
lahf
pop
fildl
add
cmpsl
pop
inc
jge
add
cli
subl
addr16
xchg
xor
das
movsl
vpsubq
inc
mov
jne
and
add
nop
mov
mov
add
inc
int
popa
das
into
jno
aad
add
pop
les
in
add
adc
pop
mov
add
movsb
add
add
add
dec
add
add
inc
adc
adc
popa
add
add
add
mov
add
push
fbstp
call
add
xchg
dec
pop
inc
jl
insl
fs
outsb
cli
mov
shlb
inc
ljmp
push
push
xor
hlt
push
push
add
mov
and
mov
add
movsl
mov
xor
addr16
aas
push
pop
xchg
int3
sti
xor
lcall
add
test
add
popf
xchg
call
arpl
dec
jb
xchg
cmp
repz
cmp
sti
in
pushf
or
add
stos
sub
add
arpl
jmp
dec
mov
xchg
fs
pop
ds
push
test
add
ja
add
lds
add
add
add
das
cli
dec
sbb
out
pop
outsl
cmp
ss
xchg
adc
add
jle
ss
jne
inc
xor
add
sbb
addb
push
add
mov
add
not
push
insb
movsb
add
mov
fisttpll
aaa
sub
add
cld
loop
jb
add
add
repnz
and
lret
fistpl
add
add
add
clc
pop
test
add
push
add
xchg
push
push
pop
popf
inc
dec
fnsave
mov
outsb
mov
jge
add
inc
gs
movsb
add
adc
js
add
mov
rcll
add
pop
sbb
cmp
fcmovbe
lods
out
sub
pushl
rol
push
sub
or
add
iret
cvttps2pi
add
mov
fst
add
int
aaa
xchg
cmp
and
add
rolb
dec
adc
jne
cmpsl
fldt
sub
jnp
pop
test
push
jnp
lods
or
xchg
xchg
std
cli
and
add
dec
sub
add
add
pop
sub
add
sbb
fcompl
xchg
aaa
lods
add
out
pop
push
xor
add
pusha
mov
xor
lods
add
cmpsl
mov
wrmsr
adc
jp
add
adc
jnp
pop
mov
add
icebp
jmp
add
xchg
inc
das
mov
sahf
mov
loopne
add
lcall
add
fldt
jecxz
push
pop
add
add
pop
add
fidivl
repnz
add
test
push
push
aam
or
add
add
mov
add
and
add
in
sti
cmp
enter
sbb
popf
mov
cmp
and
add
add
inc
test
push
add
push
xchg
add
scas
add
mov
cmp
push
xor
dec
lods
add
push
nop
and
cwtl
out
add
or
movsl
sub
add
test
add
mov
add
jns
movsl
xchg
mov
add
jp
sbb
add
pop
or
fidivl
mov
jg
pop
addb
cmp
mov
jmp
enter
pop
data16
idivb
lea
pushf
loope
and
add
push
add
add
xlat
call
cmp
xchg
in
pop
xor
nop
xor
adc
cmp
add
sbb
inc
mov
add
jecxz
sbb
lahf
or
add
mov
pop
mov
add
add
add
add
test
add
int3
push
and
add
mov
filds
xor
rorb
add
jo
xchg
mov
sbb
mov
enter
or
add
lods
add
shl
lods
adc
test
add
mov
scas
add
icebp
push
call
mov
sub
cmpsb
add
stos
push
pusha
scas
add
mov
jge,pt
push
or
add
add
push
sti
int3
cld
rcl
jno
les
add
aad
lock
add
stos
add
add
lods
jg
fnstcw
mul
loope
icebp
inc
popa
clc
inc
movsb
add
mov
add
xchg
clc
dec
add
xor
sahf
roll
add
call
call
cmp
add
aas
data16
mov
hlt
ds
xchg
sub
and
add
push
adc
add
or
add
lds
or
inc
shlb
rcrl
or
add
sbb
add
arpl
jo
and
xor
add
sahf
dec
mov
add
hlt
cmp
jle
stc
sub
jne
dec
icebp
repz
add
sbb
pop
jbe
cmp
arpl
lds
sar
add
add
mov
movsl
or
add
mov
dec
cmp
inc
add
add
clc
push
scas
loopne
push
push
sbb
mov
fiaddl
jb
mov
xor
jbe
xchg
add
add
scas
inc
sub
add
add
add
std
and
add
call
pop
mov
ret
mov
fmulp
inc
add
add
dec
stc
scas
in
imul
popa
cmpsb
add
loope
xor
aaa
pop
les
mov
fstl
mov
gs
stc
jge
add
add
dec
in
int
mov
pop
dec
pop
sbb
sub
add
add
sub
add
xchg
push
mov
add
push
rorl
outsb
pop
jo
addr16
ljmp
add
dec
jge
add
add
inc
sar
push
xchg
sbb
shrb
mov
stc
stc
pop
pop
mov
jmp
data16
xchg
clc
in
or
sbb
mov
add
sbb
adc
add
mov
add
add
add
scas
add
inc
push
jge
in
or
lret
add
mov
jns
add
out
add
into
popl
add
add
stos
add
mov
xchg
pop
pop
cmp
cltd
xlat
out
js
lods
int
jnp
testl
pop
in
push
hlt
in
xor
push
push
cmp
pop
jne
mov
lahf
mov
xor
add
addb
out
fwait
mov
add
add
incb
xchg
add
dec
pop
jp
stos
fcmovnb
rcrb
xchg
add
popf
pop
xchg
idivb
out
hlt
push
add
cmp
push
insl
pop
jp
add
add
insl
lds
movl
mov
jge
xor
add
mov
fistps
setbe
lahf
xchg
mov
add
mov
dec
add
add
cli
hlt
xchg
add
adc
add
into
test
out
adc
fadds
fnstenv
lcall
inc
ljmp
mov
add
fwait
in
pop
xchg
adc
add
push
xchg
jle
and
imul
add
mov
inc
sbb
stc
cmp
add
add
mov
adc
xchg
add
sub
mov
lods
les
enter
imulb
push
adc
lcall
add
add
add
add
mov
add
cmc
enter
pop
mov
fsubrs
lods
rolb
movsl
or
add
dec
push
jns
jge
aas
mov
js
xor
pop
jne
mov
xchg
add
addb
xor
and
add
cltd
jl
bound
daa
shl
cli
in
jnp
repz
cmpsb
add
cmp
jne
into
or
dec
pop
pop
bound
pop
pop
push
out
les
xchg
jae
add
sti
inc
adc
add
add
add
pushf
or
add
inc
testl
daa
lds
mov
add
mov
adc
sahf
in
sub
add
mov
add
ficoms
add
imul
iret
aaa
test
inc
imul
or
add
jo
in
mov
add
mov
add
add
add
mov
mov
mov
fucom
adc
cmp
jne
mov
lret
xor
adc
scas
pop
out
mov
add
or
xchg
xchg
pop
jo
push
hlt
stos
add
and
add
dec
and
add
sahf
adc
add
sbb
xor
add
add
add
mov
add
mov
add
and
add
xor
or
lds
fbstp
sub
cli
xchg
and
add
adc
loopne
xchg
iret
push
add
in
test
loop
add
gs
int3
sbb
cmc
fstp
ror
out
fnstenv
jns
ds
fimuls
add
add
add
popf
mov
add
icebp
repz
pop
inc
inc
sbb
jg
data16
xchg
js
cmpsl
rcr
out
mov
add
je
enter
cmp
ljmp
add
inc
lahf
push
push
mov
add
push
or
pop
aam
pop
js
pop
xor
jecxz
cmc
push
push
sub
and
out
push
add
adc
add
mov
adc
mov
lcall
or
dec
jecxz
stos
add
out
sbb
adc
xor
sbb
lcall
insl
pop
pushf
test
add
aad
leave
sub
sub
in
shl
and
xchg
aam
insb
or
add
push
xor
mov
add
push
push
fiaddl
cmpsb
add
cmc
movsb
add
pusha
andl
adc
add
cmp
out
xchg
add
dec
shlb
add
cpuid
add
fsubs
outsl
push
hlt
lea
mov
add
repz
xchg
sub
add
jns
add
xchg
ret
mov
mov
outsb
lret
sbb
jno
fdivrl
cmc
sub
mov
or
add
cmp
ljmp
imul
lcall
out
pop
mov
add
push
bnd
mov
daa
add
add
xchg
add
arpl
pop
pop
mov
sbb
mov
cmp
adcl
je
lea
icebp
add
push
fst
call
jo
pop
mov
jae
mulb
push
xchg
pop
cli
dec
shlb
inc
sbb
add
push
cmc
ror
add
dec
mov
xor
add
add
nop
icebp
jle
fcompl
add
and
add
stc
int
test
add
movsb
add
push
in
add
mov
daa
dec
jl
add
popf
lcall
sub
add
mov
lods
add
adc
add
in
rcrl
js
icebp
repz
push
cmp
and
jbe
inc
stc
mov
pop
xchg
jecxz
add
add
pop
dec
mov
add
cmpsl
add
add
or
stos
xchg
or
add
out
add
add
notl
test
add
loop
shl
sahf
ror
xchg
fmulp
dec
iret
je
outsb
dec
lds
push
insl
roll
add
xor
insl
jle
std
ds
push
iret
mov
add
and
add
je
add
push
mov
popa
pop
scas
add
and
add
add
mov
add
or
cmp
add
jae
and
add
xor
add
test
add
cmpsl
adc
add
push
push
xchg
test
add
popa
adc
push
pop
mov
mov
add
mov
add
add
je
mov
pushf
fstl
add
push
push
sub
add
outsl
sbb
aas
xor
js
sub
fldcw
test
add
dec
ljmp
add
add
jb
adc
add
xor
add
add
inc
xchg
fstl
sarb
lods
push
xor
add
adc
sub
add
jmp
mov
add
add
or
shlb
rcrb
xor
push
jnp
jmp
fwait
and
cmc
push
add
mov
mov
int3
scas
stos
inc
jae
add
out
hlt
loop
add
mov
mov
clc
sub
popl
into
add
cmp
fadd
dec
lret
mov
movsl
mov
add
add
adc
adc
int3
mov
push
dec
fstpl
jecxz
jle
rep
add
add
add
mov
pop
sub
jecxz
pop
fdivrl
add
add
mov
pop
fisubrs
add
jb
add
shr
push
adc
fistl
add
push
jl
add
xchg
xor
add
push
imul
ss
pop
call
mov
add
sahf
repz
out
push
std
xor
cltd
rclb
add
mov
adc
adc
dec
icebp
out
sub
insb
inc
icebp
outsb
xor
or
std
das
cwtl
aam
cwtl
clc
push
add
js
add
add
mov
mov
add
mov
icebp
push
out
mull
jb
jnp
or
add
loop
daa
inc
xlat
add
mov
add
cmp
mov
add
sbb
mov
jae
adc
mov
dec
je
test
add
add
and
scas
dec
outsb
lahf
hlt
mov
sbbl
sub
add
add
iret
lds
add
rcrb
pop
into
add
or
push
inc
lret
not
add
add
pop
or
xor
xlat
push
inc
pop
dec
pop
xchg
addr16
vmptrst
add
mov
add
test
add
imul
add
sub
push
xchg
mov
pop
xor
bound
shll
mov
add
jbe
add
test
fsubrl
in
or
add
dec
sub
add
add
fsubl
add
outsb
test
add
add
or
xor
cmpsl
in
pop
jo
arpl
or
add
xor
cmp
and
add
movsl
lahf
and
add
and
add
shlb
daa
xchg
add
or
add
cld
inc
inc
stc
jp
das
jbe
mov
cmc
sbb
add
add
ljmp
fistpl
add
mov
insl
test
add
add
sub
mov
daa
xlat
jo
dec
jle
lock
add
add
scas
add
sahf
popf
aas
mov
add
add
call
add
cwtl
xchg
and
add
nop
pop
ret
lea
cmp
xchg
popf
pop
pop
addr16
sub
ds
scas
xchg
add
inc
sub
add
pop
sbb
xchg
add
add
jno
add
jmp
and
add
enter
enter
mov
fimuls
mov
add
lock
ds
push
add
pmaddwd
xchg
pushf
mov
add
aam
add
cmp
add
lret
jmp
and
add
or
in
add
fisttpl
or
add
das
dec
jae
add
clc
pop
lret
loopne
xor
rcrl
test
add
mov
add
add
test
add
lds
ja
add
jbe
ja
and
add
fstpl
js
jae
cmp
in
add
andl
fnsave
lret
add
dec
inc
insl
arpl
mov
add
dec
mov
lods
add
ds
mov
pop
mov
mov
and
add
pop
xor
inc
pop
sub
lret
mov
out
sub
add
add
xchg
lods
add
jge
add
repz
orl
pushf
in
fwait
pop
add
sbbl
scas
inc
popa
xor
gs
push
or
add
lods
push
jne
dec
xor
sub
add
add
in
mov
push
cmpsl
xchg
stos
add
dec
mov
add
inc
in
mov
in
das
fisubrs
int3
mov
add
call
dec
mov
mov
in
jl
push
scas
adc
daa
xor
mov
xor
addb
cmp
pop
adc
push
imul
repnz
or
add
sub
add
jmp
cmc
pusha
cld
imul
add
shll
cmp
loopne
shlb
adc
add
cmc
hlt
or
fadds
out
mov
sti
sub
aaa
cmpsl
cmpsb
add
jge
add
add
mov
push
cltd
leave
arpl
xchg
pop
loope
pop
mov
mov
lods
ffree
add
add
xchg
fdivrl
std
jmp
fisubrl
add
or
add
ds
imul
mov
add
or
add
daa
popl
jp
add
clc
adc
pop
std
negb
jb
and
loop
pop
jp
gs
add
push
sbb
push
aad
sahf
ja
add
sarl
add
add
xlat
push
add
mov
mov
mov
popa
jno
cmp
pop
adc
xchg
test
add
or
add
add
jae
andl
cmp
or
sbb
xchg
mov
add
cmove
inc
or
mov
jl
out
dec
mov
loopne
sti
in
repnz
mov
sub
xor
rorl
add
fisttpl
bswap
insl
hlt
out
jne
add
divl
ret
add
sbb
repz
add
xor
or
pusha
push
xchg
add
pop
aad
in
int3
jne
pop
mov
repz
mov
add
cmp
int
add
in
fisubrs
rsm
add
addb
movsb
add
jnp
int3
dec
mov
jmp
loopne
popa
movsb
add
fldl
mov
and
test
and
dec
lods
add
add
add
addb
hlt
int3
lock
or
clc
xor
fisubl
je
and
push
add
movsl
loope
add
mov
add
add
stos
mov
scas
sbb
add
jb
jp
cld
fwait
push
repnz
fucomi
add
test
add
sub
add
ret
pop
scas
xor
pushf
push
mov
mov
cmpsl
adc
xchg
xlat
stos
add
inc
imul
ja
or
add
scas
add
test
mov
mov
sbb
cmp
inc
fcmovb
fs
fdivrl
jno
insb
push
in
push
icebp
pusha
movsl
fistpl
mov
add
add
xchg
repnz
dec
in
imul
add
xor
adc
add
stc
sbb
mov
std
shl
xor
jns
rorb
scas
add
je
push
add
xlat
sbb
pushl
add
xor
add
add
repz
bnd
popa
shlb
add
add
lds
lahf
dec
addb
dec
hlt
ss
add
add
add
add
sub
add
inc
sti
roll
add
mov
add
add
and
add
sbb
cmp
xor
stos
popf
add
movsb
add
xchg
adc
cmp
mov
rolb
add
xchg
add
inc
lahf
sbb
cmp
add
inc
inc
cmpsl
mov
bound
lock
add
lret
pusha
add
add
pushf
adc
mov
push
enter
xchg
cmp
lcall
push
fidivrs
add
fistpl
aas
fcomi
inc
in
jnp
cmpsb
add
jnp
add
push
mov
sbb
sbb
jne
rorb
add
inc
call
in
repz
lock
xchg
adc
inc
lahf
mov
pop
adc
push
adc
add
sarb
xor
add
ljmp
cmp
mov
pop
sahf
pop
xor
gs
or
jb
sub
scas
aas
inc
jmp
add
icebp
bound
add
cmc
std
shlb
loope
add
ja
jbe
lret
mov
mov
xor
pop
sbb
jae
jmp
dec
jle
icebp
data16
add
dec
xor
in
ficompl
pop
popa
mov
in
pop
dec
adc
push
push
adc
mov
lcall
add
jge
add
lods
add
add
jbe
icebp
addr16
push
add
add
test
add
pop
notl
lret
adc
fs
imul
out
add
sub
add
decb
shr
faddp
or
ret
out
sub
std
pop
sbb
jecxz
jne
or
lods
add
pop
imul
mov
add
jmp
test
add
add
test
add
and
add
addb
xchg
inc
in
lret
jmp
push
or
add
adc
rolb
inc
push
inc
dec
xor
cmp
jp
mov
jmp
adc
insb
sub
add
fisubrs
add
outsb
xor
inc
fnsave
pop
hlt
mov
add
pop
push
add
inc
imul
mov
sub
cmp
clc
scas
bound
adc
jo
jmp
mov
xor
repz
cmpsb
add
cmc
in
lcall
aas
mov
add
pop
sbb
loopne
mov
aad
insl
adc
xor
in
pop
push
lds
add
xor
inc
push
aas
inc
xor
pop
inc
fcoml
out
jg
stos
add
addb
mov
add
jno
lods
or
push
add
dec
xchg
sub
outsb
and
int
movsl
pop
adc
add
fnstcw
mov
add
mov
popf
das
mov
add
addb
ds
add
fisttps
lods
add
shr
aas
ret
je
loop
xlat
and
pop
sti
inc
aad
mov
push
add
pop
addr16
add
add
cmp
arpl
mov
inc
jnp
add
push
mov
add
add
cmp
sub
add
inc
mov
test
add
roll
push
loopne
xchg
daa
mov
add
xchg
lea
add
rol
mov
fs
mov
add
add
stos
add
add
jne
add
and
lock
cmp
cmp
add
xor
lcall
push
aam
jno
ret
add
mov
xlat
pop
scas
mov
arpl
add
xor
aaa
mov
jl
jp
fwait
xor
int3
cmp
mov
js
ljmp
add
add
int3
mov
dec
mov
xchg
dec
push
add
adc
sub
add
jns
push
ret
jle
cmpsb
add
or
mov
add
repnz
scas
push
xchg
xlat
ret
scas
add
dec
sbb
push
xchg
cmp
xchg
sub
add
cmp
lods
imul
add
jno
addr16
arpl
add
or
add
jge
xchg
xor
cmpl
add
repnz
pop
leave
nop
adcl
xor
outsb
icebp
cmpsw
add
jno
sub
add
sbb
ljmp
dec
jle
add
daa
dec
cmp
add
movsb
add
xchg
addr16
add
push
hlt
movl
add
cld
inc
imul
gs
cmpsb
add
pop
ret
mov
inc
mov
add
pop
hlt
jmp
mov
pop
xor
dec
test
add
mov
add
pop
sbb
add
out
cltd
pusha
adc
mov
or
add
and
add
cli
pop
gs
lret
int
push
repz
add
pop
xor
ss
xor
test
add
pushf
rcl
imul
add
inc
cmp
in
addb
pushf
aam
mov
and
add
sarb
sbb
psrlw
out
std
cli
add
xor
inc
xchg
and
stos
mov
pop
xor
mov
add
ss
inc
scas
add
mov
add
xlat
or
lahf
fcmovnb
jl
sbb
add
aam
cmp
xor
sbb
adc
add
xchg
data16
lcall
add
sbb
out
popf
xchg
dec
mov
sbb
cmc
pop
fmulp
popa
push
add
inc
cmp
sub
ja
xchg
gs
push
adc
jae
jl
mov
rcll
je
and
add
xchg
int3
ret
jb
add
daa
insl
mov
in
sbb
push
add
mov
mov
pop
mov
cld
imul
cld
incb
std
adc
jmp
out
hlt
jno
or
add
add
mov
fsts
idiv
cmpsb
add
inc
shrb
in
add
out
mov
cmp
jg
stc
add
add
faddp
or
add
mov
add
fwait
pop
sbb
add
jg
dec
aam
fists
xchg
jne
jne
sub
add
xor
push
shl
xor
add
call
bound
sarb
test
les
add
popa
stc
js
cwtl
clc
mov
sub
add
add
xchg
out
sbb
jbe
mov
mov
insl
mulb
adc
jg
out
pop
cmc
loop
push
add
cmpsl
add
add
sbb
add
test
roll
add
lcall
dec
or
mov
andl
mov
add
pop
cmpsl
jbe
mov
aam
mov
shrl
lds
add
or
add
in
add
add
loop
add
add
aam
aad
add
daa
loopne
cmp
aaa
repz
pop
add
add
pop
xchg
data16
pop
test
jb
dec
adc
push
add
stos
add
push
inc
xor
aas
out
sarb
add
xor
add
jmp
roll
add
into
andl
fwait
mov
adc
test
dec
mov
add
sahf
insb
lcall
add
lods
add
cld
bound
sub
add
inc
arpl
add
inc
in
or
add
or
sbb
scas
mov
add
jnp
add
stos
add
add
sub
add
dec
adc
ficoms
aad
mov
inc
cmp
add
add
jnp
add
ljmp
add
repz
addb
stc
jbe
sbb
push
mov
jne
movsb
add
cltd
or
add
add
adc
add
dec
popf
mov
ret
sbb
add
sti
enter
int
mov
mov
aaa
and
xor
in
xchg
outsb
stc
mov
add
or
lods
jge
add
cli
jo
and
mov
jo
ss
aaa
push
add
mov
jnp
sub
add
add
fldenv
or
inc
scas
imul
add
adc
lret
xchg
inc
fdivs
jno
jns
add
mov
add
lds
jmp
jns
add
mov
pop
in
lds
outsb
push
lret
sbb
add
loopne
mov
inc
addb
mov
pop
cmp
jo
xor
addl
dec
mov
fdivl
sub
shll
fisttps
add
dec
adc
jmp
nop
pushf
mov
xchg
repnz
xor
push
adc
xchg
jmp
add
cmpsb
add
iret
addb
cmp
add
or
outsb
mov
add
aad
shrb
jmp
jge
hlt
mov
movsb
add
je
rolb
or
sbb
lods
add
cld
fwait
xor
icebp
ss
outsb
test
add
or
add
pop
mov
push
jne
aad
lea
loopne
cmp
into
xor
fwait
adc
pop
inc
cltd
dec
lods
lock
add
stc
xlat
xchg
xchg
inc
jge
ss
hlt
add
adc
add
add
add
leave
aaa
xchg
add
mov
add
push
call
lcall
inc
sbb
loop
add
jbe
pop
xchg
xchg
push
je
outsb
mov
add
aam
add
or
mov
and
add
sub
add
add
jne
inc
mov
pop
add
add
add
mov
adc
fsubl
int
out
mov
addr16
sbb
push
mov
add
push
push
pusha
or
repnz
loope
cld
mov
ret
cmc
out
loop
or
add
xchg
pushf
add
add
lds
dec
adc
jle
push
pop
sti
dec
pop
add
sub
cltd
mov
push
out
not
in
adc
inc
push
push
dec
nop
cmpsb
add
mov
add
jb
add
push
sbb
sti
cli
xlat
lret
shl
push
jg
cld
mov
add
sbb
fnstenv
adcl
dec
addr16
push
inc
pop
xchg
test
add
add
lods
add
imul
add
shrb
add
iret
cmpsl
mov
int
add
mov
out
enter
push
add
scas
dec
xor
push
sub
add
imul
lods
mov
add
outsl
cld
lahf
bound
mov
fdivrl
push
in
rcl
ja
xchg
inc
pop
pusha
push
add
mov
xchg
jnp
xlat
sti
inc
icebp
pop
movsb
add
mov
pop
and
add
add
fnstsw
cmp
add
cmpsl
testb
insb
jecxz
and
add
aam
cmpsb
add
out
test
add
add
pop
jg
out
adc
add
jecxz
cmpsb
add
jns
mov
add
add
repz
or
and
sbb
int
mov
clc
sbb
nop
dec
sahf
dec
mov
mov
addb
xor
push
outsb
in
popf
fwait
dec
xchg
jnp
jno
sbb
xchg
dec
iret
pushf
inc
sbb
add
jmp
push
loope
fstps
add
xchg
movl
movsl
adc
add
dec
adc
add
pop
stc
insl
push
push
lahf
pop
xchg
adc
into
imul
fwait
xchg
pop
daa
cmp
clc
pop
and
add
enter
pop
test
add
aad
sahf
mov
and
add
push
xor
add
mov
jne
or
scas
add
add
add
cwtl
mov
stos
jmp
adc
pop
fld
jp
sub
add
add
push
sbb
mov
stos
add
insl
xchg
pushf
xchg
das
pop
std
pushf
mov
mov
les
roll
add
sbb
adc
or
add
js
pop
insb
int3
cmp
add
int
push
add
pop
mov
sub
add
adc
xor
xchg
pop
or
xlat
cmc
jl
outsl
scas
add
mov
push
add
sahf
mov
testw
jb
or
push
xor
cmp
and
add
mov
pop
push
in
jbe
popf
sub
add
xchg
pop
and
add
sti
push
add
ss
orl
pop
loope
pop
fwait
rolb
add
adcl
xchg
lea
fildll
add
stos
mov
add
enter
push
sub
add
leave
cmpsl
dec
add
int3
lret
cmp
add
adc
aad
add
or
ror
jae
dec
nop
sbb
int3
fdivr
mov
sarb
sub
xchg
xchg
insb
inc
mov
add
mov
sbb
mov
aaa
movsb
add
sarb
lret
mov
add
dec
shrb
int
mov
shll
add
insb
mov
add
mov
data16
fisubrs
add
cmc
inc
imul
icebp
xlat
shrl
add
insb
inc
int
jl
dec
repz
cmp
pusha
xchg
add
pop
xor
jp
in
cmp
push
cmpsb
add
mov
jmp
mov
loopne
xor
pop
dec
push
push
mov
and
push
and
add
jbe
scas
add
or
in
leave
xchg
xchg
lods
movsl
and
scas
pop
dec
xchg
xchg
data16
add
fwait
xor
adc
or
add
addr16
add
cmp
or
std
loope
adc
xchg
push
add
fcmovnu
dec
xor
sbb
or
jne
dec
jmp
pop
cld
std
incl
add
pcmpeqd
mov
add
xchg
mov
xchg
pop
add
pushf
mov
jp
inc
fiaddl
cmc
inc
xor
fcompl
fldl
add
jne
stc
ds
dec
je
lds
push
add
adc
stos
add
dec
and
add
and
add
add
xor
test
std
frstor
jnp
add
mov
pop
adc
adc
push
inc
iret
push
ret
inc
jmp
push
rep
addb
adc
ss
in
je
loope
add
xlat
cltd
mov
inc
xor
fdivp
jb
add
sbb
add
dec
inc
imul
out
or
add
push
addb
xorl
add
cmp
mov
add
js
add
add
pop
lock
add
add
mov
jbe
push
inc
push
ss
aam
into
test
add
roll
add
add
push
xchg
out
mov
mov
shlb
dec
aaa
idivb
fwait
sub
add
insb
repnz
add
push
lods
ja
sub
pop
cmp
bound
pushf
adc
add
jnp
dec
popa
and
add
add
pop
addr16
xor
divb
mov
addb
xchg
add
add
push
pop
aas
mov
inc
insb
inc
repnz
add
lahf
lret
out
fcmovnu
jae
mov
sbb
jle
dec
xor
rcll
insb
hlt
lock
jge
scas
mov
mov
rclb
add
lahf
call
add
mov
add
int3
xchg
add
movsl
test
out
sbb
sub
add
mov
scas
add
loopne
lods
inc
dec
push
mov
add
lret
jecxz
xchg
outsb
sub
add
test
call
adc
icebp
inc
addb
push
push
mov
aad
xor
and
or
mov
add
push
mov
test
add
sub
push
dec
fcmovnbe
lret
sbb
sub
add
xor
lret
shl
addr16
add
xchg
call
add
js
add
movsl
sub
add
add
int3
insl
add
add
dec
ret
jbe
mov
add
and
pop
sub
add
test
out
int
sub
add
add
jne
add
mov
mov
mov
add
lock
cmpsb
add
scas
add
add
push
dec
inc
insb
jl
jle
jl
cmp
jbe
addb
test
add
add
cmp
sbb
mov
imul
jg
xchg
test
add
push
jae
jns
or
add
add
add
dec
or
add
push
arpl
add
cld
jo
jbe
add
and
add
add
imul
cmpsb
add
adc
popf
mov
add
ljmp
add
mov
out
in
mov
shrb
add
add
insb
inc
sbb
add
sbb
addb
pusha
jmp
test
add
repz
add
add
mov
add
xchg
andl
add
dec
ss
mul
int
dec
ret
aad
add
xchg
or
add
dec
push
and
add
lds
aaa
imulb
jne
add
add
push
mov
add
insl
popa
fwait
cmpsb
add
adc
add
lock
sbb
add
add
call
rorb
aaa
mov
mov
cmp
loope
dec
dec
sarl
mov
or
add
dec
sub
add
add
mov
cmp
mov
pop
test
add
add
stos
add
addb
or
add
jmp
cmp
sub
xor
fidivrl
jmp
add
fiaddl
add
add
adc
pop
mov
sbb
pop
sahf
js
loop
xchg
out
add
cmp
das
aas
and
add
add
sbb
fs
daa
dec
xchg
jge
mov
add
insl
lahf
sub
add
sbb
fsubrl
add
jmp
add
ret
sarl
stos
add
and
add
lods
aaa
sbb
sbb
add
push
mov
shlb
lret
mov
in
mov
add
out
add
fs
cli
stos
jne
stc
add
add
hlt
mov
in
addb
shll
leave
repz
fnsetpm(287
out
mov
add
push
lahf
dec
rorl
cmp
lcall
jmp
mov
jp
jle
fnstenv
stc
jnp
das
repnz
out
fisubrl
add
and
mov
push
popf
ret
or
add
push
or
add
add
dec
fsubrp
pop
sbb
add
mov
pop
fiadds
add
add
ret
add
ret
enter
mov
jbe
add
inc
push
add
movsl
push
addr16
sub
add
dec
and
add
je
cmp
add
aam
add
xchg
shll
push
push
and
inc
push
mov
in
jp
cwtl
repz
add
ret
mov
ja
int
push
adc
add
push
aas
mov
stos
add
cmp
fidivrs
lods
sub
lock
ret
mov
add
add
cmp
lods
xor
xchg
sti
inc
mov
add
das
lret
mov
inc
inc
hlt
adc
add
addb
addr16
test
add
add
sahf
jmp
add
push
imulb
add
cmp
mov
add
add
fmull
add
outsl
lods
add
stc
sub
pop
cmp
push
xor
inc
nop
and
mov
jmp
pop
mov
pop
sbb
sbb
outsb
stos
add
movsl
mov
or
add
xlat
addb
stc
and
add
jp
mov
xlat
mov
gs
and
add
jne
add
add
add
jmp
loope
add
addb
lahf
push
cwtl
in
bsf
jnp
fists
ja
or
das
movsb
add
cmp
mov
aaa
mov
pushf
sub
add
jge
add
mov
xchg
xchg
jg
push
cmp
les
add
add
push
jp
add
cmc
out
jecxz
mov
scas
add
xchg
fistpl
add
inc
xchg
jnp
lahf
mov
xor
shlb
push
inc
mov
jo
fimuls
stos
mov
das
test
repnz
test
add
xor
or
add
pop
test
add
add
dec
xor
addb
sbb
out
enter
xchg
add
xlat
aad
mov
in
xlat
jle
mov
add
fwait
xor
mov
mov
add
js
mov
add
push
and
mov
pop
dec
add
push
jb
cwtl
mov
sbb
add
lea
pusha
sahf
stos
sbb
dec
leave
sub
nop
pop
sbb
jp
stos
xor
rcll
add
or
add
xchg
inc
sbb
dec
mov
add
movsb
add
push
hlt
mov
mov
mov
in
add
lret
in
inc
lea
test
add
loopne
add
mov
mov
test
add
add
scas
add
mov
add
add
imul
add
gs
js
dec
sbb
xor
and
add
add
icebp
cmpsl
inc
fsubs
add
and
adc
loope
jp
add
movsl
insb
push
add
out
pop
stos
push
add
cli
stos
add
lods
add
xchg
outsl
and
adc
add
push
adc
insb
xor
add
or
add
add
pusha
nop
jl
pop
mov
sub
add
jb
add
ds
shl
ja
fstps
addb
or
add
add
movsb
add
or
add
fstpl
adc
sbb
incl
add
in
lods
sub
add
mov
add
xchg
add
add
shll
adc
in
fcomps
aaa
fcoms
daa
push
add
mov
add
rcrl
and
add
test
add
cmp
call
add
test
test
add
and
add
mov
add
test
add
scas
add
xchg
pop
push
add
std
sbb
inc
adc
inc
jmp
add
ret
loope
je
add
js
mov
push
add
add
adc
inc
in
add
mov
add
js
mov
xchg
push
cmc
sub
add
in
inc
lea
add
mov
jl
pop
push
punpckhwd
add
inc
xlat
add
js
dec
ss
sub
add
xchg
mov
add
inc
cmc
mov
add
dec
stc
push
xchg
jb
negb
cwtl
xor
sahf
pop
pusha
lcall
dec
adc
cmpsl
popa
fsts
add
int3
dec
outsl
push
push
jg
popl
mov
ret
add
mov
adc
add
jge
outsl
xchg
movsb
add
clc
inc
lret
push
inc
inc
push
push
nop
pusha
or
add
cmp
cld
mov
ljmp
in
mov
add
pusha
popa
mov
ss
adc
sbb
mov
add
sti
daa
inc
and
add
push
test
add
inc
add
push
scas
jmp
add
add
mov
add
xchg
pusha
addb
cmp
add
fistps
push
mov
add
ret
add
divl
add
add
add
add
add
lahf
or
add
jno
cmp
lahf
ds
mov
stos
pop
mov
aas
inc
cmp
imul
dec
sub
out
repz
les
add
lahf
add
add
mov
inc
mov
add
scas
ret
sub
add
dec
or
jle
add
in
inc
int
cmp
xchg
add
dec
add
loope
jmp
rclb
add
dec
icebp
cld
cld
shlb
xlat
inc
je
add
add
fisubs
out
push
addb
and
add
cmp
insb
movsl
int3
mul
mov
add
aam
add
inc
xor
out
and
call
fists
xor
add
mov
mov
add
pop
loope
mov
add
mov
je
pop
add
inc
fs
or
add
clc
jmp
and
mov
adc
test
add
test
push
mov
add
imul
mov
imul
add
xchg
aaa
xor
fsts
fldcw
add
pop
cmp
in
cmp
mov
repz
mov
lret
pushf
add
mov
add
adc
and
add
sarl
mov
lahf
inc
jns
mov
add
call
dec
push
jb
mov
add
dec
mov
daa
jecxz
jecxz
xchg
out
fdivs
jo
xchg
imul
lods
cmp
add
add
push
add
add
dec
pop
mov
stos
aam
divb
xor
hlt
add
hlt
push
add
push
add
dec
mov
ret
test
add
rcll
lret
sti
mov
fisttpl
xchg
icebp
dec
sahf
aaa
xorl
stc
inc
add
add
clc
imul
and
test
lret
sub
add
add
dec
outsb
outsl
pop
stos
add
stos
add
or
push
add
call
add
add
scas
sub
add
push
bound
ja
mov
mov
add
or
add
mov
loope
movsb
add
sub
insb
int
jno
mov
loope
push
sbbl
dec
cmp
push
scas
add
sbb
stos
inc
outsl
in
add
inc
push
mov
jbe
xchg
imul
push
outsb
repnz
mov
add
xchg
push
add
outsb
and
mov
movsl
fstl
add
cli
mov
add
in
sarl
andl
adc
gs
ljmp
out
lcall
or
add
add
pop
sahf
testb
dec
data16
add
psubd
dec
sbb
loope
popf
in
add
ret
cmp
add
add
add
pop
sbb
inc
sub
imul
sub
jns
out
fidivl
xchg
add
inc
xor
add
rcll
add
loop
sub
add
movsl
add
push
inc
shrb
cmp
js
fisubrl
sub
add
popf
mov
add
jns
sbb
add
shlb
pop
push
daa
jl
fsubrs
lahf
lods
add
loop
jbe
jb
enter
ljmp
sti
mov
lcall
add
sbbl
cmp
imul
adc
icebp
inc
mov
add
cmp
shl
adc
fwait
movsb
add
lcall
jge
add
in
cmp
sbb
dec
call
std
add
sub
push
push
cmpsb
add
lods
sbb
loop
lea
add
in
imull
add
jbe
jl
xor
dec
add
add
and
add
xchg
add
rorl
add
movsb
add
movsb
add
cmpl
cmpl
int
lea
add
add
sub
add
and
jl
jmp
pusha
flds
loopne
jb
jb
sbbl
add
or
add
add
cmp
add
test
add
add
mov
add
addb
sub
add
aam
loop
mov
and
add
sbb
fs
mov
fmuls
pop
scas
add
mov
add
push
test
add
add
add
repz
inc
or
or
add
les
dec
imul
add
shl
dec
cmp
add
add
add
int
dec
lcall
xchg
and
push
add
inc
fldt
add
xchg
stos
push
jbe
add
dec
scas
add
scas
add
std
cmpxchg
repz
pop
mov
xor
add
stos
outsl
adc
inc
loopne
or
and
add
std
lret
xchg
loope
mov
add
add
arpl
sbb
sub
add
xchg
in
mov
ja
mov
dec
xchg
or
add
scas
add
repnz
sbb
jge
add
les
ds
pop
pop
rorb
loope
add
out
stos
add
sub
add
or
add
add
addb
dec
imul
sbb
loopne
add
add
fisubl
popl
icebp
mov
add
push
mov
add
incb
jle
xchg
push
jb
jle
xor
add
ss
xchg
imul
add
sub
or
add
inc
lods
add
out
sub
add
sub
add
add
add
add
dec
ss
add
cmc
test
mov
roll
add
or
add
fstl
addb
xchg
cmpsl
push
mov
jnp
fidivl
out
push
mov
lret
out
cmpsl
and
add
add
sub
into
loopne
sbb
jp
and
mov
add
pop
jno
testl
or
sbb
add
or
jo
inc
jbe
push
arpl
add
test
ds
aam
mov
push
movsb
add
mov
sub
mov
push
mov
mov
adc
fistpl
add
fiaddl
or
add
outsb
xchg
js
jno
ss
push
push
add
fimuls
test
add
lcall
out
xor
stc
arpl
jb
mov
add
mov
pop
bound
cld
clc
addl
std
lds
mov
add
add
sub
add
mov
jecxz
xchg
jo
xchg
inc
lods
add
add
aam
fs
mov
add
add
and
xchg
out
dec
ljmp
cmp
nop
mov
push
fdivrs
sbb
cmp
pop
inc
popf
pop
shll
pop
sub
icebp
lods
add
sbb
xchg
std
hlt
fsubrl
add
add
xchg
add
push
add
sbbl
inc
hlt
xchg
add
add
insl
lock
inc
das
pop
shrl
add
mov
add
adc
sub
pop
in
xchg
and
add
jecxz
or
add
add
ret
push
out
hlt
add
add
out
cwtl
and
add
add
out
jge
mov
dec
test
add
leave
cmp
xor
add
push
inc
gs
adc
cmp
pop
cli
xchg
add
add
xor
xchg
movsl
fwait
imul
add
xlat
arpl
arpl
fs
xchg
push
add
xchg
popa
inc
inc
sub
add
push
xor
cmp
test
add
sti
xor
inc
inc
adc
add
sbb
imulb
xchg
xchg
push
sbb
in
add
out
outsl
out
push
xchg
aad
mov
movsl
imull
add
mov
add
enter
add
movsb
add
inc
mov
xchg
xor
xchg
dec
add
jge
mov
pop
loopne
stos
add
add
add
rol
in
pop
adc
popa
push
add
mov
add
and
ret
ljmp
lret
add
test
movsl
ret
js
rcll
ret
into
clc
cwtl
add
add
cli
jecxz
sti
fildl
jns
add
pusha
loopne
pop
sbb
addr16
in
and
cmpl
retw
shll
loope
aas
dec
adc
add
test
add
fstl
add
scas
add
add
add
xchg
pop
dec
fwait
adc
xchg
or
add
push
adc
cwtl
push
inc
sti
sbb
mov
dec
stos
add
mov
add
xor
mov
nop
mov
or
add
jb
jne
xchg
js
add
add
test
add
lock
jno
aam
imul
add
shll
add
mov
cmovo
add
dec
sub
add
add
add
lcall
lods
fimull
add
dec
sub
add
out
insb
daa
dec
in
pop
call
mov
mov
or
dec
fs
add
daa
push
pop
or
add
in
ret
add
xchg
stc
push
dec
adc
shrb
and
add
mov
rclb
shr
stc
pop
in
shl
lea
adc
pop
addb
rcll
in
negb
pop
jb
ret
adc
jb
push
repz
or
sub
add
std
xchg
call
pop
std
lcall
jg
or
add
stc
or
or
pop
out
pop
je
add
mov
mov
push
add
fcomi
ret
sub
add
in
add
add
pusha
aaa
stos
push
mov
out
pop
bound
testl
inc
movsb
add
test
add
jmp
dec
outsb
xor
outsb
adc
add
mov
js
dec
cmp
cmpsb
add
mov
sti
jno,pt
cmp
xchg
insb
jno
add
jnp
fdivr
arpl
cwtl
dec
enter
inc
sub
mov
add
clc
addb
daa
pop
sbb
in
shrl
add
pop
xchg
mov
add
and
add
outsl
das
mov
inc
pushf
repnz
add
lea
mov
icebp
out
add
push
sub
add
mov
add
leave
std
or
shrb
mov
push
add
data16
xor
dec
pop
arpl
incl
xor
mov
add
js
mov
dec
pop
movl
repz
js
push
rcl
push
sub
cltd
sub
jl
xor
xor
mov
jne
sar
inc
fcoml
add
add
lods
test
dec
mov
mov
sbb
inc
insb
popf
sub
mov
pop
fimuls
mov
jecxz
xor
int
pop
pop
mov
lret
push
adc
xchg
or
and
add
mov
data16
add
add
repz
sbb
fninit
cmp
fs
add
add
cmp
add
cld
leave
or
mov
jle
call
roll
pushf
cltd
mov
push
sbb
cltd
cmp
hlt
mov
fisubs
xor
push
push
adc
cmp
xchg
lcall
rcl
in
push
sub
add
add
pop
inc
cwtl
bound
add
add
add
sbb
insl
or
xchg
insl
push
sbb
scas
add
addr16
imul
add
addb
mov
insb
scas
add
insl
out
pusha
sub
add
mov
cmp
insl
iret
hlt
int
add
add
scas
sahf
leave
rolb
pop
or
add
ss
xor
data16
hlt
pop
insl
mov
mov
mov
mov
add
adc
add
adc
aad
adc
repnz
pop
and
add
push
add
xor
scas
add
lods
add
aaa
xor
add
enter
add
mov
lahf
dec
sub
lret
pop
fadd
ja
shll
sub
add
cmpsl
mov
jle
push
mov
push
mov
mov
insb
xor
sub
cmp
mov
cmpsb
add
jbe
dec
loope
stos
and
xor
cltd
icebp
push
adc
or
add
add
stos
add
push
dec
mov
add
fsubrs
mov
add
add
mov
add
imull
mov
mov
adc
insl
mov
adc
cmp
adc
xchg
sbb
add
add
pop
adc
push
in
mov
stc
inc
xor
or
add
lods
loopne
or
add
popl
add
inc
cltd
push
inc
jmp
imul
jno
sarl
cmp
inc
sbb
dec
popf
mov
add
xor
add
xchg
push
pop
das
push
push
cld
xchg
adc
fwait
stc
cld
mov
aad
mov
in
test
add
pop
cmp
xor
or
cltd
inc
pop
mov
add
pusha
insl
adc
add
xchg
or
dec
out
push
add
lret
inc
xchg
lods
cmp
lods
test
add
bound
push
cmp
testl
lods
mov
inc
mov
dec
ret
add
sbb
mov
cmpsl
int3
pop
mov
lret
mov
xchg
shl
mov
add
sub
cli
addb
fucomp
xor
cmp
ds
out
in
sub
add
or
add
mov
add
flds
sub
add
ljmpw
xlat
ja
or
add
dec
mov
mov
addb
mov
fwait
cmc
push
daa
pop
icebp
and
cmp
aam
aad
xchg
add
jae
out
mov
mov
jmp
xor
fisubrl
sti
call
xor
lods
add
pop
or
add
mov
popf
or
add
dec
push
loopne
add
addb
pushf
pop
pop
jb
xor
and
add
stos
dec
daa
mov
add
mov
add
dec
add
add
xchg
or
pusha
sbb
repz
add
jmp
hlt
mov
or
decl
fcmovb
cmp
mov
mov
pushf
push
add
add
gs
fmull
aas
dec
repz
outsb
or
add
add
cltd
inc
jae
repnz
add
or
jp
icebp
jnp
mov
ljmp
add
xor
jle
sbb
jmp
dec
fnstenv
loope
mov
test
add
bound
lcallw
add
add
and
add
cld
pop
dec
fmull
sbb
add
xchg
sbb
adc
addb
popl
add
add
cwtl
jle
add
cmp
add
mov
add
jbe
add
xchg
jne
jns
adc
mov
repz
inc
cmp
dec
sub
add
mov
imul
add
mov
or
add
xchg
ret
add
lods
add
pop
push
lock
ret
mov
cmp
xchg
add
ja
pop
xchg
add
mov
loop
dec
push
addb
fwait
outsl
fs
add
into
mov
test
dec
dec
xchg
xor
add
add
pop
movsl
lds
cld
lahf
rclb
add
lds
add
cmc
mov
orl
ljmp
add
jbe
sbb
lahf
ret
dec
add
add
xlat
cltd
ds
add
add
add
pop
jp
jne
sub
add
dec
dec
mov
addb
inc
and
add
cld
push
sub
add
cmp
inc
test
add
push
notl
rcrb
rcl
add
xchg
aam
or
add
aam
jnp
sbb
sub
add
in
inc
add
push
jnp
add
mov
leave
sbb
push
add
scas
add
mov
add
decl
fdivp
std
push
fcoml
shll
push
pop
rorb
mov
sarb
jne
bound
sbb
xlat
pop
sub
add
push
mov
add
imul
movsl
orl
pop
and
sbb
inc
push
add
pop
pop
push
add
mov
repnz
int3
xchg
aad
adc
aad
cld
xor
and
add
add
jp
pop
pop
mov
aas
insl
adc
jp
pop
xchg
xor
add
inc
lea
add
pop
dec
mov
xchg
xor
ljmp
add
loop
dec
sbb
inc
sub
add
das
fcoms
dec
mulb
fstpl
xchg
xor
adc
sbb
add
sti
and
add
add
add
std
mov
add
rorb
in
jbe
add
andl
add
dec
inc
pop
js
cmpsl
push
sub
push
fs
mov
cld
iret
addb
mov
lea
je
push
add
mov
inc
ss
xchg
xlat
les
mov
pop
cmpl
push
call
add
add
loop
push
dec
sti
cwtl
cmp
adc
adc
dec
int3
aas
fnstenv
jp
sub
mov
add
add
pop
sbb
push
mov
mov
mov
mov
add
outsb
mov
sahf
push
jl
dec
popa
dec
push
scas
lret
sti
arpl
add
add
scas
add
aas
inc
xor
push
add
test
add
aad
mov
mov
pop
jle
fisttps
or
enter
rcrl
and
jo
cmp
in
push
lret
xchg
mov
mov
push
shll
inc
pop
outsb
xchg
pop
or
add
dec
push
add
jno
aaa
aas
mov
add
add
out
add
push
cmp
sub
add
mov
pop
test
add
cmc
inc
inc
clc
ffreep
sub
add
icebp
pop
scas
add
pop
aad
add
xchg
mov
gs
or
sub
add
add
jbe
imul
stos
notb
mov
inc
lret
pop
mov
fxtract
mov
jnp
test
outsb
xor
out
xchg
cwtl
push
mov
hlt
stc
or
jecxz
jl
mov
daa
fbld
hlt
mov
bound
dec
fmuls
add
mov
mov
outsb
dec
rcrb
js
xchg
add
add
sbb
push
test
inc
xor
shll
ret
mov
aam
pop
jo
lods
add
scas
rorb
add
add
fiaddl
les
ja
into
jo
push
push
add
add
xor
in
add
in
adc
xchg
imul
xchg
adc
inc
test
daa
sub
add
and
lods
cmp
arpl
add
mov
add
mov
daa
aas
rcr
xor
mov
add
shll
xchg
mov
add
aam
push
xchg
cltd
and
add
in
mov
adc
lods
cmp
inc
and
add
in
xor
fldenv
push
rcll
add
pop
ss
fs
push
int
inc
js
out
dec
cmp
dec
test
add
shll
les
sbb
add
fdivl
cmpsb
add
sbb
movsb
add
jp
sub
add
popf
ds
mov
cmp
jbe
shl
push
movsb
add
and
add
fadds
add
dec
and
add
shrb
add
push
dec
addb
xor
xchg
add
add
dec
daa
inc
data16
and
add
sub
inc
outsb
scas
jo
add
pop
repz
int3
dec
adc
add
pop
mov
add
pop
je
sbb
xor
add
or
enter
push
xchg
in
dec
sub
xchg
jle
push
outsl
jg
stc
sbb
daa
push
add
add
or
add
add
and
add
push
and
add
inc
jo
fldcw
add
mov
xchg
arpl
add
insb
mov
test
xchg
scas
and
movsl
repnz
add
aad
pop
xor
inc
call
idivb
add
add
add
pop
inc
add
mov
insl
cmc
in
test
add
add
outsb
pop
insl
cltd
pop
stc
lds
pop
mov
add
iret
mov
ss
mov
add
mov
add
xchg
movsl
hlt
xchg
mov
pop
cmp
ss
inc
xor
add
push
fdivs
loopne
sahf
imul
jmp
mov
add
gs
popf
jbe
add
inc
dec
pop
sub
mov
arpl
mov
int
push
add
scas
add
cmp
arpl
outsl
jo
xchg
iret
pop
sarb
inc
jnp
in
sub
add
and
add
xchg
mov
and
push
cmp
and
add
bound
ss
das
movsl
xor
arpl
mov
enter
sarb
lahf
adc
inc
fidivrl
int3
repz
cli
push
dec
add
add
and
sub
add
in
inc
dec
lret
shll
add
scas
add
lods
add
int
xor
jo
jnp
or
setne
sbb
mov
push
xchg
data16
leave
inc
inc
pop
cmp
add
or
add
movsb
add
inc
mov
ficompl
jle
ss
inc
jns
sub
rol
xchg
xchg
add
add
xchg
fisubrl
ret
testb
lcall
dec
jp
xor
jl
add
dec
inc
sahf
sarb
rorl
rclb
jo
iret
push
sub
add
add
dec
push
popa
xchg
xchg
add
mov
add
mov
loopne
mov
add
push
lcall
adc
add
jo
jle
fucom
out
loope
in
and
add
clc
repnz
shll
sub
xchg
sub
data16
in
pop
rol
sbb
sub
lret
mov
dec
fnstsw
loope
lock
push
add
and
add
sub
add
add
pop
inc
lds
pop
xor
dec
daa
mov
mov
cmp
push
outsl
repz
add
xor
pop
dec
scas
add
outsl
nop
pop
addr16
cwtl
cmp
jle
pusha
adc
add
pop
push
call
mov
fstps
out
sbb
insl
push
into
test
add
in
cwtl
dec
xchg
sub
add
adc
cmp
int3
sarl
fcmove
daa
dec
cmp
dec
push
xor
mov
pop
lahf
adc
stc
mov
add
add
nop
push
lods
add
mov
dec
loop
fbld
aaa
ds
jne
add
jmp
mov
add
inc
dec
insl
adc
mov
xchg
inc
sbb
popl
add
fisttps
mov
add
fldl
aam
push
add
iret
cmp
add
add
add
add
add
xchg
add
cmpsl
rclb
dec
ljmp
ret
add
mov
xorl
adcl
fwait
stos
imull
sub
add
add
int3
jbe
or
subl
inc
jnp
xlat
div
scas
add
push
in
mov
add
add
hlt
cmp
out
ret
push
mov
add
mov
cmp
cmp
dec
jb
xchg
out
add
bound
inc
iret
out
mov
mov
lret
loopne
sub
dec
jmp
ss
das
outsl
js
insl
sbb
xor
pop
sub
mov
add
add
mov
rorb
sbb
test
add
jo
or
add
bound
ja
ret
mov
add
mov
add
mov
stos
xchg
cmp
aaa
out
or
pop
sahf
aaa
push
in
jmp
sti
cmp
add
rcrl
xchg
test
lock
adc
pop
mov
xlat
outsb
xchg
insl
aas
in
addb
mov
lea
cmp
jge
shll
add
jnp
imul
adc
xor
sarl
imul
ljmp
or
cli
int
ret
jnp
cwtl
jae
int3
add
push
sub
add
xchg
sbb
inc
jne
jae
sbb
dec
mov
fstps
js
sahf
dec
lods
roll
add
lds
xor
add
in
outsl
add
add
cmp
and
add
into
pop
mov
push
jecxz
pop
pop
add
jne
add
inc
jle
cmp
ret
add
adc
pop
xchg
aaa
shl
enter
add
mov
adc
and
add
in
push
add
inc
lea
pop
out
movb
push
mov
push
jbe
popf
movsl
xlat
inc
cli
addb
test
add
adc
cmp
inc
dec
cmpl
mov
or
add
add
faddp
sbb
rcl
xor
and
add
add
dec
mov
cwtl
in
mov
mov
nop
push
adc
or
add
add
add
pusha
jb
testl
aaa
sti
pop
xchg
and
add
push
inc
push
mov
add
and
add
mov
call
cmp
cmp
lock
scas
popf
and
insl
cld
push
adc
add
inc
fs
add
fildll
add
cltd
repz
inc
ds
xchg
jle
stc
call
rcr
push
addb
cmpsb
add
pop
or
mov
jb
push
notl
mov
add
repnz
int3
and
add
mov
das
mov
push
mov
add
ds
in
cmc
stos
loopne
mov
icebp
inc
and
add
sub
stc
dec
mov
xor
adc
adc
jmp
sbb
cmp
stos
add
nop
sbb
add
pop
or
pop
or
add
add
add
add
dec
nop
rcl
inc
stc
scas
cmp
mov
outsl
pop
inc
mov
pop
cmpsb
add
in
call
mov
and
mov
add
or
add
cmp
shrl
cwtl
cmp
stos
add
sbb
std
test
xor
and
hlt
push
imull
dec
sbb
gs
xor
push
push
fisttps
add
fs
jns
stc
jo
sub
add
jne
pop
ljmp
sub
mov
insl
jmp
shl
sahf
adc
mov
shll
adc
sbb
dec
xchg
movl
out
xlat
or
repz
add
cmpsb
add
int3
dec
fxch
add
add
adc
lcall
or
xchg
clc
mov
mov
add
add
inc
or
inc
icebp
cmpsb
add
jns
jg
fisubrl
out
into
add
add
mov
add
dec
sbb
mov
sbb
push
pop
or
adc
xor
add
xchg
test
add
pushf
scas
add
jno
movsb
add
add
cmp
add
pushl
add
insl
fcmove
das
dec
sbb
sarl
fstps
inc
cld
push
add
mov
aaa
gs
add
ljmp
add
lods
add
inc
adc
mov
push
ficoms
cmp
ss
and
push
add
add
add
cmpsb
add
cmp
int3
jns
dec
push
jl
int
add
testl
xor
out
lock
leave
mov
add
in
add
in
into
cmp
jne
mov
cmp
in
ret
push
je
imul
jbe
inc
repz
stos
add
ret
lods
add
mov
mov
idivl
dec
mov
std
xchg
dec
inc
adc
cmpsb
add
neg
cmp
and
add
fdivrp
sbb
pop
and
add
sub
shll
arpl
push
les
insb
or
sbb
lret
add
sub
add
inc
outsb
lds
aaa
ret
movl
add
add
mov
test
add
mov
faddp
cltd
addb
push
add
popa
mov
add
mov
pop
inc
mov
add
mov
loope
jecxz
mov
addb
imul
cld
adc
pop
cmp
std
mov
jne
imulb
add
in
cwtl
mov
add
js
mov
add
enter
add
lcall
xor
xchg
push
xor
lods
xor
scas
add
push
add
ljmp
lods
add
cli
push
xchg
loope
repnz
int3
xor
ja
sub
jnp
push
int
mov
add
add
and
fwait
xchg
xchg
add
loopne
mov
cmp
repnz
add
lret
add
adc
insb
insl
xor
pop
jno
cmp
sub
add
and
add
push
jg
mov
decb
cmp
xchg
xor
clc
movsb
add
cmp
fstps
in
sub
add
mov
hlt
fistpl
add
or
add
shlb
pop
in
cmpsb
add
or
mov
aam
mov
xchg
add
add
add
rcrl
xchg
add
add
ds
add
push
movsb
add
mov
cmp
push
daa
xchg
shl
sub
add
cmp
sub
cmp
ficompl
scas
add
lods
add
mov
add
add
add
loope
lods
add
lahf
add
add
adc
or
test
add
aad
decb
mov
jmp
pop
lret
and
imul
out
outsl
js
add
aam
arpl
or
aam
movsl
adc
imull
add
fs
xor
jmp
dec
xor
add
xchg
pop
jl
add
mov
sbb
dec
dec
xchg
jne
imul
lods
add
and
add
daa
or
add
lcall
insl
add
add
mov
das
stc
cmp
add
push
cmp
jno
and
add
test
fmulp
in
pushf
xor
aam
loope
sbb
out
loopne
fldenv
push
add
loopne
xchg
test
fnsave
add
add
push
imul
add
stc
scas
add
call
leave
add
add
add
add
mov
adc
and
add
push
sbb
sbb
push
addb
repz
ret
add
add
jns
les
scas
add
pop
pop
and
fwait
cmp
jns
pop
aam
nop
jae
add
push
add
or
add
push
fidivrs
pop
sbb
out
sub
add
cmc
pop
movsl
mov
add
mov
jno
cmp
push
not
jmp
aad
add
cli
lcall
test
add
mov
fsts
jecxz
mov
daa
mov
add
test
mov
adc
and
add
inc
lods
clc
sub
add
and
adc
xchg
lret
mov
inc
ljmp
jae
fdivrp
push
cmp
dec
into
push
ret
or
add
ss
add
inc
sub
add
add
out
mov
pusha
xchg
sub
add
cltd
jae
sbb
add
lret
add
sahf
mov
pop
xchg
sbb
fwait
xor
mov
add
push
jle
sbb
test
add
add
shll
ljmp
stos
dec
mov
or
xlat
pop
js
test
cmpsl
push
cmp
adc
pop
jae
out
lret
lahf
mov
push
add
cmpsb
add
ret
ja
imul
xlat
daa
aas
mov
addr16
je
arpl
lock
pop
and
sarb
shrb
idivb
add
dec
aaa
lahf
and
add
stc
sbbl
loope
jne
jg
jp
add
lea
into
lds
add
jmp
out
mov
inc
jb
leave
hlt
mov
repz
add
inc
je
mov
outsb
add
mov
into
jp
lret
add
add
scas
add
push
add
or
add
out
and
mov
add
add
add
and
outsb
call
add
lahf
xchg
sub
add
addb
pop
xchg
rcr
cmp
dec
push
jp
jne
aam
movsl
jb
add
add
nop
mov
fimull
mov
add
shl
sub
add
daa
repz
push
xor
sar
sbb
add
cmp
ret
cwtl
pop
inc
shll
int
loop
sar
push
jl
pushl
mov
add
imul
adcl
fcom
sahf
pusha
sbb
add
jb
push
or
add
add
or
add
push
inc
scas
cmp
dec
push
push
pop
pop
shll
push
fdivl
das
cli
les
jae
pop
lret
add
ss
cmp
push
jle
jne
scas
add
cld
nop
in
imul
daa
fmuls
fisubl
lods
add
push
sub
add
lcall
mov
cmp
add
les
roll
idiv
jae
xchg
cmc
cmp
add
outsb
xor
push
jns
lock
add
jecxz
add
nop
cmp
add
mov
repz
lods
ss
pushf
outsl
jmp
add
jge
jmp
add
xlat
xchg
inc
push
sub
xchg
fwait
cltd
bound
xor
add
push
frndint
xor
mov
mov
add
ljmp
in
scas
sbb
add
jb
notl
cmc
popa
cmp
adc
add
add
add
jecxz
add
mov
flds
add
mov
mov
add
add
mov
add
sub
inc
or
add
add
jnp
mov
cli
gs
leave
add
inc
repnz
add
push
jp
hlt
nop
xchg
mov
jmp
add
stc
out
mov
mov
add
lret
add
ret
sub
test
add
test
add
movsb
add
je
add
lods
add
int
cwtl
fsubrl
add
mov
push
rorl
dec
cli
cmp
xlat
dec
sub
add
in
add
mov
add
inc
movsl
cwtl
imul
imul
add
add
jo
mov
ss
dec
inc
lcall
add
insb
movsb
add
addb
imul
js
in
sbb
add
add
xchg
js
adc
insb
add
add
mov
fbstp
rol
jle
add
jae
ss
add
cli
lods
add
sub
add
js
or
add
dec
and
addr16
mov
add
xor
xor
add
fdivs
mov
add
dec
hlt
inc
jg
add
add
cmp
lret
add
pop
ret
add
cmp
icebp
xchg
xchg
adc
mov
dec
out
loop
scas
add
jo
add
inc
les
jp
mov
xchg
inc
loope
mov
test
add
js
jbe
mov
add
iret
in
mov
add
or
rclb
call
insb
or
add
lods
repnz
mov
sub
add
push
imul
add
repz
pop
mov
mov
or
add
cmp
mov
mov
mov
pop
ret
mov
add
mov
add
mov
adc
mov
add
scas
mov
inc
loope
pusha
addb
outsb
shrl
xchg
push
add
dec
in
mov
add
add
xor
xor
repz
jmp
bswap
lret
or
add
jg
or
add
shrl
add
xor
jge
fdivl
bound
lret
cmp
mov
add
push
fsubr
int
data16
mov
in
lock
inc
xor
xor
jo
push
imul
add
fcmovnbe
push
jg
repnz
cmpsl
pushl
push
or
add
cmp
je
sti
jns
xlat
and
add
push
mov
add
out
int3
sbb
imul
gs
add
les
imul
jp
lret
inc
lcall
mov
jns
in
outsl
or
add
outsb
xchg
mov
add
push
add
xchg
pop
mov
add
add
add
call
add
decb
sbb
mov
xchg
sbb
mov
add
out
fsubrl
sub
add
aad
mov
push
jecxz
sbbl
out
add
xchg
lahf
push
add
out
jae
lods
add
cli
cmc
add
add
push
movsl
dec
scas
int
icebp
add
mov
mov
sub
add
mov
addb
and
add
dec
fbld
inc
and
add
add
add
in
add
add
mov
add
add
push
cltd
sti
add
add
pop
aam
add
and
add
jns
lcall
mov
add
mov
add
xchg
pusha
outsl
movb
add
pop
adc
cmp
add
mov
pop
iret
jae
add
add
mov
push
leave
repnz
lret
mov
scas
add
addb
pusha
enter
add
xchg
push
adc
add
add
iret
mov
add
shll
jge
in
enter
ljmp
clc
inc
iret
ljmp
test
add
add
add
push
push
add
cmpsl
in
cld
mov
and
add
js
in
cmp
pop
das
test
add
imul
mov
mov
add
add
jns
xchg
repz
lret
int
lea
sub
jg
negb
adc
pop
jo
sahf
rol
sub
add
cmp
movsl
push
xorl
sub
add
add
add
sbb
lret
das
and
add
add
add
addb
filds
add
inc
push
lea
push
pop
sub
add
xchg
mov
fucom
int
mov
push
popa
lcall
ja
sbb
dec
adc
pop
jnp
into
xchg
bound
addb
xor
dec
adc
shl
mov
add
pusha
loope
adc
rorb
stos
or
add
inc
xchg
aas
jl
lock
cmpsb
add
int3
xchg
dec
shlb
dec
jns
ds
sub
add
fdivs
ret
dec
popa
in
or
pop
push
mov
add
std
adc
jle
je
repnz
movsl
jecxz
test
add
test
sahf
dec
mulb
add
iret
in
sti
in
and
add
add
add
add
add
dec
pextrw
add
mov
mov
jnp
icebp
inc
repz
lea
ret
nop
xor
or
add
add
shlb
scas
add
mov
add
mov
pop
jge
mov
push
pop
xorl
popa
out
cmp
adc
mov
add
xchg
pop
les
fisttpll
inc
inc
inc
sahf
insb
lods
inc
rorl
add
dec
into
gs
or
add
lock
shl
xchg
add
test
add
lret
add
push
add
test
je
or
scas
add
shlb
lcall
cmp
push
addb
mov
clc
je
dec
dec
inc
je
add
mov
mov
add
cli
xchg
mov
add
add
jne
or
add
imul
pop
inc
sub
xor
xlat
cli
std
fidivrs
movsb
add
pop
or
xor
out
pop
jne
std
sbb
cmp
lahf
jl
add
jge
inc
jb
fs
in
mov
add
add
adc
inc
and
add
add
addb
sarb
add
fdivrl
cmp
dec
xchg
dec
mov
add
add
mov
add
or
push
push
cmp
adc
out
scas
ret
push
add
pop
loopne
push
add
dec
push
jno
sub
cli
mov
or
mov
lret
loop
add
flds
lret
adc
add
lahf
push
les
add
icebp
dec
add
sub
add
cli
mov
inc
sub
inc
stos
add
insl
cmp
in
sbb
push
add
pop
or
add
hlt
int
mov
push
xor
sbb
or
push
leave
push
add
jmp
mov
insb
scas
add
fimuls
cmp
out
out
jg
mov
mov
rclb
dec
sbb
xor
add
and
addb
cmp
lret
je
sbb
call
pop
sbb
xlat
in
add
gs
out
dec
xchg
dec
stos
pop
and
add
xchg
cwtl
mov
add
and
add
gs
cmpsl
int
addl
add
cmc
dec
jbe
xlat
xchg
add
dec
push
ss
pop
dec
or
add
out
cmp
add
cmp
popa
and
pop
mov
add
lods
add
xlat
test
cwtl
imulb
and
add
xchg
mov
scas
add
aas
mov
add
test
add
mov
adc
sub
addb
cmp
inc
outsl
movsl
mov
add
subl
add
add
xchg
pop
cmp
pop
mov
push
add
sub
add
add
movsl
popa
jb
add
insl
mov
scas
sarl
xor
popf
sti
clc
addb
aam
std
pop
out
push
xchg
data16
add
add
push
rcrl
and
lret
cmp
sahf
fcompl
adc
jae
out
dec
pushf
push
add
dec
lret
jle
push
push
test
mov
mov
fstpl
jae
shr
and
add
and
add
ds
dec
addb
jb
mov
ja
add
add
cmc
xor
xchg
cmpsb
add
imul
insb
jnp
add
add
xchg
push
pusha
dec
ret
adc
jo
mov
int3
mov
add
ret
adc
jg
add
xchg
fstl
hlt
and
in
pushf
or
add
cmp
addb
call
add
add
push
addr16
sbbl
add
xchg
dec
popl
jmp
jae
add
cmc
push
pop
je
pop
push
addr16
in
xchg
add
div
jmp
sub
add
lcall
add
jno
and
sub
cwtl
sub
add
lret
pop
shrb
in
mov
push
add
and
add
fbstp
repz
rcl
dec
stc
pop
xor
xchg
lahf
xchg
lds
sbb
loope
jmp
jo
sahf
ljmp
add
add
mov
mov
add
add
mov
js
int
add
js
call
jl
and
add
setbe
mov
cmpsl
sub
push
sbb
add
mov
add
add
insl
arpl
adc
sbb
int
fs
dec
cli
mov
add
add
push
sbb
add
pop
dec
outsl
pop
jecxz
jecxz
xchg
cmc
adc
stos
add
sbb
jmp
add
mov
add
jns
lods
add
mov
loop
sub
add
imul
rcrl
push
push
add
sub
xor
adc
add
jnp
push
jnp
mov
add
lods
add
fdivl
shlb
rorb
add
cmp
mov
mov
call
inc
call
mov
add
push
jne
inc
push
loope
test
jge
push
adc
out
lock
pop
fiadds
daa
ss
jg
add
xchg
mov
push
ret
repnz
leave
loop
aaa
mov
add
adc
add
pusha
jg
jne
mov
mul
cmp
repnz
ret
pop
mov
pushl
mov
pop
fbld
pop
add
inc
xchg
cwtl
push
inc
jae
stos
loopne
lret
clc
xchg
test
xchg
inc
pop
jae
dec
lds
add
add
push
xchg
ja
adc
add
stos
sub
add
add
mov
add
ja
adc
xchg
mov
pushf
jae
mov
mov
add
imul
add
add
add
add
xchg
nop
stos
add
rcrb
cmp
int
push
dec
jg
mov
pop
inc
mov
js
or
gs
xor
push
iret
cmp
mov
add
and
mov
jl
xchg
test
push
xchg
lods
rolb
hlt
lock
lods
add
dec
xchg
cmp
mov
add
mov
pushf
and
add
add
mov
add
and
jl
add
add
add
ljmp
stos
jge
enter
std
ret
arpl
int3
stos
add
inc
cmp
sbb
ss
inc
rcll
fildl
add
lahf
sub
inc
into
dec
sub
into
pushf
mov
jae
lcall
add
iret
xor
xor
addr16
fcomi
mov
fstl
push
push
add
into
loopne
mov
add
add
add
lcall
xor
add
fistps
movsb
add
in
sub
dec
xlat
xchg
out
test
add
add
mov
add
cmp
add
sub
sbb
pop
or
add
popf
mov
sub
add
insl
mov
add
lea
push
cmp
aaa
sahf
inc
subl
int3
add
and
adc
aad
xor
shll
imul
add
pop
inc
fldz
rclb
add
out
cli
pusha
nop
xor
add
adc
fnstenv
imul
cmc
insb
xchg
add
cmp
add
mov
xlat
push
xor
ficompl
add
call
xchg
call
cwtl
into
inc
cmpsb
add
mov
add
jecxz
cmpsl
add
add
jno
add
ret
test
add
int3
or
dec
fldl
ret
add
add
add
inc
insb
rcr
sbb
add
shl
add
subl
add
add
add
mov
addb
cmp
hlt
cmp
xchg
cmp
push
add
rcrl
sub
add
xchg
mov
inc
popf
jmp
add
pop
push
add
mov
cltd
call
ja
lret
fistl
adc
push
xor
adc
add
ja
cmp
xor
fimuls
cmp
mov
add
stos
dec
repz
pop
fsubs
or
add
lea
add
addb
cmc
push
loopne
inc
imul
or
in
inc
jmp
subl
fmuls
add
dec
push
jns
insl
jge
sub
sbb
lock
xor
xchg
cmp
inc
icebp
and
add
cmp
add
out
push
pop
les
pop
ret
imul
push
sbb
ret
push
mov
add
mov
and
add
add
pop
sarl
das
ds
xor
inc
iret
cli
mov
add
add
dec
add
out
stos
add
aam
daa
add
mov
pop
jl
push
shll
push
xlat
clc
scas
or
xchg
push
les
add
aad
icebp
jmp
lret
pop
pop
ss
or
inc
fiadds
mov
add
add
mov
jns
add
adc
lcall
add
push
mov
or
add
push
dec
sbb
mov
add
sbb
fcoml
mov
fcomps
adc
mov
add
fwait
adc
add
sub
add
mov
mov
and
add
push
jecxz
js
fnstcw
mov
les
sub
inc
push
out
lcall
cmp
enter
mov
lods
add
mov
add
test
add
std
lock
std
imul
mov
xor
imul
movl
adc
sbb
add
out
jl
add
addb
jge
jno
jae
stc
mov
add
xor
cmpsb
add
fldcw
mov
xor
add
add
add
dec
addb
ret
jecxz
test
add
in
addb
popa
dec
das
inc
mov
pushf
mov
lods
sbb
aas
imul
add
push
add
add
pop
lods
popf
jb,pt
add
mov
push
add
adc
aaa
jg
roll
mov
add
loopne
sbb
push
xchg
lods
mov
or
add
adc
aam
popa
insl
ss
leave
pop
pusha
lcall
hlt
mov
loop
and
add
outsl
dec
sub
add
adc
add
lcall
pop
mov
rorb
out
adc
insb
sub
data16
ds
mov
ja
imul
or
add
insl
sub
aaa
inc
jae
add
sbb
add
lret
add
dec
pop
dec
push
sbb
movsb
add
jmp
imulb
sub
add
aaa
fwait
icebp
push
fisubs
mov
sbb
fwait
cmpsb
add
cmp
shlb
insl
aas
or
add
inc
popf
mov
add
inc
and
add
pop
test
or
add
xchg
mov
test
pop
out
push
gs
loop
dec
adc
scas
sub
add
test
add
xchg
rcrb
jl
sub
add
xor
mov
shl
scas
je
std
arpl
add
icebp
push
cmp
push
ds
dec
stc
sahf
leave
call
add
jno
sarb
mov
lock
add
push
add
mov
pop
fbld
addr16
add
lret
int3
sub
push
ret
adc
add
gs
xor
add
add
mov
add
xor
into
lock
inc
pop
mov
cmp
xlat
push
and
add
sbb
pop
data16
adcl
fcoms
divb
add
lret
arpl
mov
add
nop
shll
addr16
sub
add
cli
leave
addb
mov
add
sbb
add
imul
add
xor
ret
add
cmp
sub
add
pop
popf
adc
xchg
add
ret
add
hlt
bswap
shrl
mov
add
loopne
lds
xchg
jb
push
add
mov
push
popl
inc
sahf
in
dec
rcrb
add
add
xlat
cmpsl
mov
jecxz
mov
lret
jnp
xor
jae
dec
leave
mov
out
push
dec
jecxz
add
nop
mov
fdivl
into
or
mov
add
mov
or
data16
add
lcall
sub
sbb
pop
mov
add
dec
loop
and
add
cmp
push
imul
movsl
jne
mov
add
add
negb
sbbl
jle
add
bound
fwait
sub
lods
add
sbb
add
sbb
cmp
lds
rclb
jge
in
aaa
jae
push
imull
and
add
insl
xor
sbb
pop
sarl
pop
jnp
fwait
addb
xchg
add
stos
mov
inc
jg
add
dec
pop
and
add
add
adc
add
mov
inc
cmpsb
add
or
hlt
daa
mov
add
std
xchg
loope
pop
mov
add
add
scas
add
xchg
fsubrs
scas
mov
leave
mov
add
push
pop
cmc
das
nop
roll
pop
movsb
add
cmp
pop
mov
in
les
repz
mov
loop
add
aaa
pop
addb
mov
add
add
sbb
mov
js
add
or
add
jle
cmp
shl
movsb
add
out
call
call
sub
add
in
jo
dec
repnz
push
adc
push
scas
test
add
mov
les
inc
out
jge
sbb
adc
add
notl
inc
rclb
mov
fs
sub
add
jae
add
pop
mov
stos
jbe
add
lret
add
push
and
add
mov
add
aaa
xor
fmuls
xor
fmull
addr16
or
add
add
lahf
and
and
add
dec
pop
xchg
insb
cltd
andl
testb
xor
add
std
mov
add
pop
cmp
or
nop
sub
add
add
jg
scas
shll
add
sti
test
into
push
mov
pop
call
inc
sub
cltd
jns
fnstenv
adc
dec
dec
mov
jg
roll
sti
subl
add
push
and
add
adc
ja
xchg
sub
inc
popf
testb
hlt
push
sub
mov
mov
popa
aam
out
mov
add
add
add
mov
adc
sub
aad
outsb
addb
iret
mov
add
cmp
fs
fidivl
add
add
leave
pop
add
sbb
push
stc
inc
leave
adc
add
push
lods
add
sub
add
jl
xor
jle
iret
sti
inc
or
add
add
push
fmull
xchg
adc
add
pop
div
pop
scas
add
mov
add
add
mov
scas
add
inc
mov
jp
sbb
cmp
mov
stos
mov
add
popf
sub
cmp
sbb
rcll
pop
sbb
adc
loope
fsubrp
sti
sbb
adc
cmp
repz
add
adcl
icebp
or
add
or
add
add
sahf
mov
jns
mov
ss
stos
add
mov
add
mov
add
cmp
jg
sbb
daa
xchg
pop
jecxz
add
dec
inc
lret
cmp
pop
out
pop
fldcw
dec
leave
sti
jns
mov
repnz
fwait
xchg
out
push
pop
mov
add
aas
mov
add
pop
int
adc
das
xchg
ds
pop
xchg
adc
add
add
push
jne
ss
mov
add
jbe
pop
mov
add
cltd
ds
test
mov
notl
add
inc
mov
add
push
jae
dec
pop
cmpsl
mov
add
pop
cmp
dec
filds
add
add
add
cmp
je
imull
dec
dec
pop
ja
shll
adc
movsl
or
add
addb
lock
add
data16
add
lret
ds
or
cmc
jae
cmpsb
add
inc
lds
add
scas
mov
cmp
leave
cwtl
cli
lds
imul
lods
rcrl
sub
xchg
mov
jns
test
jno
out
out
add
dec
ret
mov
sub
add
mov
addb
cmp
mov
sub
das
inc
cmpl
add
add
mov
add
mov
add
jg
add
ror
inc
ss
stos
add
dec
loope
mov
lock
leave
sbb
mov
in
sub
add
add
pop
push
mov
jecxz
mov
add
fistl
into
jns
add
or
add
cmp
scas
add
ret
test
cmp
adc
add
xchg
je
lods
add
cmp
pop
xor
add
dec
roll
add
aad
sub
in
cmpsl
and
add
mov
add
rcrl
sahf
popa
push
cli
xchg
stos
lods
add
loopne
jl
aam
lods
add
hlt
icebp
jnp
in
add
cmp
in
sub
add
dec
dec
fninit
add
scas
add
or
mov
bsr
jecxz
fbstp
add
lcall
add
popf
mov
outsb
cltd
add
je
cltd
xchg
pop
in
or
add
cmpsl
jnp
in
outsb
xchg
flds
add
daa
mov
mov
imul
ret
lret
xlat
add
pop
lods
add
mov
mov
lds
add
sub
add
subl
add
fucomi
call
mov
add
add
bound
add
daa
rcll
stc
or
test
add
pop
fcomps
aas
outsb
outsl
mov
sahf
jne
push
mov
xchg
fstpl
and
rcll
add
mov
dec
jns
add
mov
movsl
jo
call
push
add
das
pop
add
mov
add
ret
or
add
fidivl
fcomi
pop
xchg
out
mov
ds
and
lock
lock
test
add
add
sbb
sti
xor
push
add
add
mov
sub
jne
xchg
xchg
test
add
add
push
add
in
std
jnp
mov
add
inc
jmp
pop
mov
add
mov
mov
icebp
dec
dec
xchg
add
add
add
push
mov
into
dec
mov
cmp
jmp
mov
test
add
ret
add
add
out
xchg
sbb
mov
add
mov
pop
or
js
outsb
movsl
pop
push
add
rorl
and
add
add
sbb
cmpsl
pop
inc
bound
add
xor
add
inc
adc
sti
add
add
test
add
mov
mov
jae
mov
add
jle
xchg
das
test
add
mov
push
sub
add
mov
add
add
fs
add
mov
ret
pop
sub
push
dec
jnp
insb
cmp
jecxz
dec
lock
lods
add
jno
lahf
je
add
fisubrs
pushf
test
add
inc
xchg
dec
mov
add
add
loop
add
icebp
cmc
outsb
int3
mov
jbe
and
add
ret
cwtl
dec
sti
xchg
mov
and
add
out
daa
mov
icebp
mov
push
inc
cltd
push
add
add
add
mov
or
add
test
mov
cmp
mov
lret
test
add
add
add
xchg
addr16
adc
xorl
mov
add
cltd
fcmovnb
dec
cltd
dec
dec
mov
aas
les
ret
popa
loop
iret
jno
dec
scas
add
insb
or
mov
sub
add
pop
jne
cmp
add
in
inc
ss
test
add
add
test
add
dec
jae
mov
mov
arpl
fnstenv
lret
pop
pop
jle
into
or
push
inc
xchg
xchg
enter
add
cmp
mov
out
clc
nop
test
in
insb
xchg
pop
jno
add
jnp
lock
push
in
dec
icebp
jecxz
xchg
xchg
sahf
jb
mov
add
lods
cmp
daa
push
loope
add
test
add
lds
cmp
adc
jns
aad
or
add
xchg
jmp
stos
add
add
jg
xchg
pop
add
add
push
pop
aad
dec
or
mov
add
push
inc
push
pop
ds
add
cltd
pop
jbe
mov
add
xor
cmp
mov
pop
in
add
repz
addb
clc
add
cmc
jmp
or
hlt
loopne
pop
pop
mov
cmp
add
inc
nop
cmp
sub
add
jmp
mov
in
mov
das
mov
mov
into
adc
mov
add
cmp
ret
jbe
insb
mov
add
outsl
xchg
fwait
stos
add
test
mov
popl
inc
bnd
aam
lds
test
add
and
add
arpl
outsb
cmpsl
lcall
add
jne
sub
mov
push
jp
movsl
out
lret
and
add
inc
leave
and
mov
add
add
jb
ja
cmpsl
roll
cmp
test
shrl
add
mov
add
add
or
add
jl
das
mov
sbb
sub
or
add
add
int3
and
jecxz
dec
imulb
clc
iret
clc
adc
roll
push
add
mull
mov
pop
sub
cwtl
jb
shl
or
add
add
fcmovnu
xor
sub
add
mov
add
add
push
sbb
mov
jns
push
add
out
loopne
test
add
repz
out
or
mov
bnd
loop
push
pushw
add
adc
scas
in
mov
fisubrs
add
or
arpl
insb
mov
cli
and
add
sub
add
push
mov
sbb
or
add
add
sub
add
ds
arpl
aas
fsub
pop
je
aas
mov
test
add
lret
jecxz
sub
notb
add
jp
data16
call
add
jno
in
dec
xchg
ret
or
add
mov
lods
ljmp
shll
or
dec
pop
sti
add
push
adc
lahf
bswap
pop
inc
push
stc
pop
test
adc
add
and
add
loop
push
add
icebp
and
add
in
enter
ss
test
sbb
cmpsl
bound
add
cmp
xor
push
push
add
outsb
cmp
cmpsl
dec
push
loope
xchg
xchg
add
popf
sbb
in
rol
mov
bound
ss
jecxz
adc
arpl
push
cmpl
xchg
cmp
inc
fnstenv
mov
out
inc
leave
stos
add
ret
imul
xor
xchg
pushf
out
jo
aam
les
add
jmp
arpl
or
cwtl
xchg
mov
add
leave
mov
add
mov
sarb
add
push
mov
adc
dec
lds
mov
push
fisubs
add
push
lret
out
add
rcrb
loopne
aas
sbb
popf
addb
fiadds
add
add
and
add
popf
shl
out
mov
add
push
cmp
jb
mov
xor
sub
add
jo
enter
add
add
xchg
add
jbe
loop
mov
jae
or
sbb
rolb
push
add
or
loopne
leave
leave
xlat
push
sub
sbb
add
pop
mov
add
dec
mov
out
cmp
insb
out
jns
inc
mov
and
jno
lcall
test
xchg
pop
pop
stos
add
sub
mov
add
fwait
in
cld
fbstp
mov
xor
add
add
pop
push
loop
add
add
push
ret
roll
sub
inc
cmp
out
xor
add
rorb
and
in
sub
and
add
and
add
inc
out
addr16
loopne
pusha
add
lcall
jge
lods
add
and
add
add
mov
add
add
add
in
clc
std
sub
add
mov
fisubrl
lahf
das
popf
clc
jne
push
lcall
stos
add
cltd
sbbl
testl
add
adc
js
leave
xchg
ret
cmp
add
dec
js
test
add
add
push
add
icebp
pop
adc
or
add
push
and
and
add
add
add
xchg
ds
push
add
cmp
int
add
add
add
or
push
mov
stos
lahf
faddl
adc
inc
addb
push
add
shrl
call
and
add
jne
inc
xchg
xchg
dec
not
mov
imul
cmp
ret
add
rcl
dec
sbb
add
stos
push
add
das
push
and
add
xchg
jge
and
add
fsts
adc
push
jne
mov
add
add
rorb
add
jle
add
or
add
addr16
jecxz
mov
add
and
add
add
out
push
addb
out
int
in
add
subl
jo
pop
lret
mov
cmp
push
or
add
xchg
mov
push
mov
mov
or
add
or
add
fstl
das
inc
xlat
mov
add
mov
fyl2xp1
jecxz
enter
imulb
sub
push
mov
mov
lahf
push
mov
ret
mov
add
jle
add
dec
mov
add
add
mov
inc
adc
add
sub
add
sahf
mov
lods
sub
add
push
sbb
add
aaa
mov
add
xchg
fs
mov
ljmp
cltd
sbb
mov
mov
mov
in
adc
xlat
push
fwait
shlb
mov
roll
int
xchg
add
xchg
aam
add
jb
cltd
mov
dec
mov
add
cltd
sbb
lods
add
jne
add
mov
add
xor
test
jl
loop
add
pop
icebp
gs
sub
add
cld
sub
test
add
add
lods
add
add
sar
sub
add
or
add
outsl
adc
add
xor
daa
xchg
push
or
sub
add
std
pusha
and
add
mov
add
pushf
push
xchg
cli
ja
dec
test
add
rcrb
out
sub
add
add
add
mov
inc
sbb
les
add
fstps
cltd
jae
add
test
xchg
mov
add
ss
add
add
add
fisubrl
push
mov
add
fistpll
add
into
adc
jmp
aam
add
mov
pop
out
aad
add
cwtl
xor
adc
xchg
mov
imul
push
mov
jl
add
dec
jbe
push
xor
in
add
idivb
addl
add
sub
add
add
inc
movl
add
jo
xor
add
dec
lret
cmp
lods
add
add
add
clc
or
addb
xlat
xor
lcall
adcl
xor
clc
insb
loopne
cld
lods
xchg
mov
mov
push
fistpl
add
xchg
mov
add
aas
pop
into
push
in
pop
inc
pop
lret
xor
xlat
xchg
add
add
fsubrs
cmp
add
in
push
sbb
xor
mov
pop
dec
mov
and
xor
stc
cmp
push
add
pop
adc
shlb
inc
js
add
sbb
add
adc
xchg
and
addr16
push
dec
shll
push
data16
add
mov
dec
popa
movsl
popw
je
add
sub
dec
xchg
xlat
cmc
lods
fs
dec
outsb
rol
add
pop
out
lods
fistpl
lea
in
dec
mov
add
xchg
add
push
add
rclb
jp
sbb
mov
add
fdivr
lret
mov
or
mov
cpuid
add
sub
add
sbb
je
dec
sub
add
test
add
add
inc
adc
add
sub
add
mov
add
addb
xor
add
xchg
or
add
mov
add
nop
sti
cmp
stos
sbb
push
push
add
and
testl
xorl
add
pop
ljmp
fdivrp
fldl
add
mov
lock
push
arpl
push
push
add
add
nop
dec
rcrl
add
cmp
jl
jnp
loopne
mov
add
xchg
clc
pop
outsl
addb
sbb
sub
add
cmp
add
add
add
lods
add
mov
add
mov
add
pusha
jge
insb
or
daa
icebp
lahf
or
add
sub
add
add
lock
mov
dec
das
inc
xor
add
out
cmp
ret
sbb
icebp
addb
sub
add
outsl
insl
pushf
xchg
mov
lods
add
fimuls
mov
adc
jb
hlt
ret
js
shrl
hlt
dec
sub
add
ja
test
add
inc
push
add
nop
xor
add
add
notb
mov
out
test
push
mov
push
inc
lods
mov
add
xlat
jp
cli
jp
aaa
mov
add
add
xor
add
movsl
and
add
add
mov
add
in
out
adc
lcall
lcall
push
sti
push
or
out
add
jp
iretw
jb
pop
push
loopne
mov
or
add
dec
test
fisubl
sbb
aam
xchg
int
xchg
addb
mov
jp
add
sub
fadds
dec
lock
cld
inc
cmp
ret
and
lret
add
fldenv
or
cmpsb
add
pop
jns
jp
xchg
inc
icebp
dec
test
adc
popf
jmp
mov
adc
dec
cmc
lods
add
nop
cli
int3
cltd
sahf
rorl
add
cmp
ds
add
dec
icebp
jns
pop
test
add
mov
add
adc
pop
enter
filds
jae
mov
add
push
lret
push
push
sbb
cli
lret
push
push
push
arpl
fs
in
lahf
insl
clc
loope
ret
add
pop
js
add
insl
ret
xchg
std
mov
les
dec
xor
xor
adc
mov
add
add
push
je
test
mov
xchg
ljmp
dec
ljmp
xlat
push
add
sub
xor
add
pop
scas
add
test
add
jne
in
std
test
adc
in
aas
adc
lret
jo
xor
adc
out
mov
cmc
xchg
sub
add
loop
insl
ret
or
add
dec
mov
rcll
add
sbb
xchg
andl
jmp
push
mov
loop
adc
les
dec
cwtl
sub
add
add
lcall
add
cwtl
pop
arpl
test
add
add
jmp
pop
or
or
add
fcmove
shr
inc
mov
add
pop
loope
add
dec
add
imul
add
loopne
add
adc
into
sub
add
dec
or
and
push
pusha
pop
jecxz
add
in
iret
aas
stos
add
outsl
fldenv
rol
mov
add
mov
or
add
dec
push
rol
and
rolb
pop
sti
and
add
push
mov
cltd
cmp
inc
arpl
stos
rorl
add
rorb
mov
ret
push
dec
push
sbb
imul
mov
sbb
cmp
mov
int
dec
loopne
xchg
and
add
cmpsl
jl
cmp
pop
test
add
jl
loopne
mov
add
lret
mov
xor
and
add
sti
les
xchg
repnz
dec
push
lock
xchg
std
xor
add
cmp
mov
add
add
fndisi(8087
arpl
add
add
add
popa
and
adcl
pop
cmp
sti
mov
add
push
add
add
add
push
setno
dec
push
cmp
cmp
mov
xchg
fistpll
test
add
inc
mov
add
jae
add
pop
sbb
xchg
jb
xlat
sar
cltd
scas
add
mov
mov
add
ss
fidivs
test
mov
push
push
add
push
pop
aas
jb
and
add
ss
inc
pop
pop
shlb
adc
add
xor
add
cmpsl
jge
push
rcrl
push
addr16
mov
adc
in
popf
pop
aam
mulb
add
test
mov
xchg
mov
mov
push
fwait
icebp
jg
add
fst
movsb
add
jb
mov
jmp
xor
xor
pop
xor
test
imul
mov
lret
or
outsb
cmp
pusha
lods
dec
jmp
fisubrl
push
inc
add
adc
insl
rorl
mov
lock
lods
je
loope
dec
addb
stos
cmp
ds
dec
inc
cltd
jmp
sub
add
jns
in
sub
jbe
cmp
fisttpl
pop
pop
daa
or
add
clc
inc
fdivrl
and
add
dec
mov
add
xor
jae
add
bnd
add
or
add
xor
sub
add
add
jl
or
add
or
add
pop
cmp
add
jl
pop
xor
adc
jb
bound
mov
inc
or
or
sub
add
jb
scas
add
pop
push
movsb
add
jmp
pushf
pop
add
add
movsl
std
xchg
push
add
fs
into
or
add
shrl
add
pop
push
ret
stc
sbb
movsb
add
nop
mov
add
sub
add
das
ljmp
and
jns
mov
mov
sbb
mov
inc
sub
jno
hlt
cmp
push
sbb
sbb
addb
insb
ret
rcll
mov
rcr
add
xchg
fstl
clc
in
outsl
sbb
add
out
mov
add
inc
mov
push
add
xlat
jge
fs
addb
inc
add
dec
sbbl
add
aad
pushf
pushf
repnz
add
inc
push
je
loopne
das
lods
add
outsb
loope
push
sbb
mov
rcrb
inc
inc
jbe
rolb
test
add
add
add
test
add
arpl
mov
loope
mov
test
lock
fs
loope
mov
add
adc
cmp
je
mov
out
xor
sbb
mov
jnp
das
xchg
mov
fs
repz
popf
mov
jge
out
cmc
jae
pop
add
add
adc
shll
add
dec
cmp
add
push
adc
and
add
rolb
add
bnd
add
sbb
add
inc
mov
xlat
jp
negb
cmp
out
push
sub
mov
inc
sbb
jmp
pop
mov
push
sbb
jns
sti
imul
sub
add
rcll
cmc
mov
or
add
daa
and
add
mov
add
add
add
test
dec
pushf
daa
pop
jne
std
outsl
dec
popf
cmpsb
add
xor
add
adc
add
inc
mov
jno
fsts
mov
popf
andl
cld
jle
dec
or
add
add
add
addb
xchg
cli
outsb
adc
fdivr
in
cmp
addb
roll
pop
adc
fcomps
add
add
pop
inc
dec
jo
loopne
jl
arpl
aaa
loope
inc
jmp
mulps
js
push
les
mov
add
mov
add
lret
or
add
xchg
mov
jo
movl
sti
add
ljmp
add
sbb
cmp
ret
push
mov
add
mov
and
add
add
add
aad
add
jo
in
push
mov
add
dec
xchg
lcall
add
fadd
xchg
sbb
mov
add
mov
rcrb
mov
add
mov
mov
add
add
add
add
or
cmp
xchg
add
mov
add
loopne
gs
das
xchg
add
mov
shr
add
add
push
repnz
push
ljmp
xor
aas
into
cmp
jmp
pop
icebp
mov
add
fcompl
inc
add
ret
add
cmp
out
mov
dec
cmpsb
add
mov
or
repnz
stos
cld
add
add
push
scas
lret
addb
xor
push
clc
xchg
fdivrl
add
stc
jle
xor
test
int3
jns
test
or
push
cwtl
enter
gs
push
dec
fldenv
movsl
les
leave
leave
je
push
ficomps
add
mov
inc
inc
xchg
jg
repnz
int
lock
jne
stos
add
jo
out
push
add
ret
mov
cli
and
hlt
or
add
bnd
loope
inc
jp
arpl
mov
lods
jno
xchg
add
rorl
bt
pop
and
pushf
cmp
add
sbb
add
repnz
sahf
roll
sarb
add
test
add
add
or
jle
cwtl
mov
popa
push
test
push
push
add
mov
movsb
add
idivl
add
ret
aas
jle
sub
add
lret
inc
jmp
mov
sbb
clc
pop
add
cmp
add
push
sbb
sub
add
add
movd
lods
add
mov
add
shll
test
jne
mov
add
aaa
mov
adcl
nop
sub
add
dec
loop
or
add
rcll
inc
insl
mov
shlb
inc
add
add
add
in
or
ss
mov
sub
add
push
mov
push
add
add
add
neg
lcall
pusha
adc
add
les
add
jns
data16
add
and
sub
dec
std
mov
add
adc
xchg
lock
cmp
add
aaa
scas
add
scas
add
cmp
cmp
movsb
add
push
mov
push
fdivrl
outsl
dec
inc
jns
add
jp
pusha
into
cmc
dec
and
inc
push
loope
fcoms
outsb
sub
fisttpll
ds
lret
mov
xchg
call
pop
jmp
jle
outsb
leave
xchg
hlt
out
cmp
sub
add
add
push
add
jmp
lods
add
shlb
pop
sahf
cmpsb
add
repnz
mov
mov
popa
xor
xchg
add
daa
dec
push
mov
add
sbb
ljmp
push
lret
divl
add
lahf
mov
add
daa
pop
loop
jg
xchg
add
dec
pop
adc
add
push
nop
movsb
add
out
cmp
jge
addb
cmpsl
rolb
add
jne
pusha
xor
fisttpl
and
add
call
jp
or
mov
mov
dec
jb
add
jbe
pop
inc
in
out
xchg
aas
dec
inc
jp
inc
and
add
mov
inc
xrelease
add
jecxz
sub
add
xchg
xor
sub
add
add
sarl
cmp
jnp
lcall
pop
mov
add
ret
lods
add
xor
fsubrp
inc
sbb
add
out
insl
ss
shr
or
add
add
mov
shll
add
add
insl
xlat
fadds
add
mov
sahf
bound
add
cmpsl
ret
pop
inc
test
add
sahf
call
arpl
test
add
add
incl
stos
test
or
add
add
sub
add
das
push
jno
out
and
add
sbb
add
movsl
imul
add
scas
mov
jne
push
xchg
add
jle
aam
mov
add
std
int
jno
inc
lods
add
mov
mov
add
lahf
mov
add
sbb
daa
dec
pusha
stc
pop
jmp
and
add
pop
mov
add
mov
add
sbb
push
jge
add
adc
pop
daa
fwait
jb
sbb
enter
push
hlt
xchg
jno
imul
lds
ss
pop
sbb
sbb
aaa
orl
add
sub
add
push
in
das
adc
in
dec
inc
rcrl
add
out
jbe
jmp
in
maskmovq
les
push
jns
das
insl
add
test
cmpsl
icebp
mov
lods
add
sti
std
lods
add
cwtl
fcmove
mov
fcomps
lea
and
add
loop
push
std
popa
fisttpl
add
popf
mov
and
add
and
add
dec
fsub
mov
add
mov
add
add
fidivrs
xor
push
clc
lcall
dec
jle
add
mov
add
dec
cltd
das
sti
pop
das
ret
lock
test
add
je
or
add
mov
xor
dec
dec
push
mov
sbb
pop
dec
addb
or
add
pop
fwait
or
add
mov
scas
cmp
push
xor
add
aad
sbb
out
dec
mov
sbb
push
popa
movsb
add
pop
sbb
add
scas
imul
pop
jo
sub
add
jle
inc
pop
xchg
cmp
mov
imul
ficoml
jno
jb
and
xchg
pop
inc
mov
mov
dec
dec
or
add
cmpsb
add
popa
scas
jne
aaa
stc
or
add
ja
cmp
and
add
add
shrb
clc
adcl
add
mov
add
push
mov
jl
sub
add
sahf
fwait
fwait
into
aad
add
lcall
repnz
mov
mov
loop
add
pop
pop
cwtl
adc
add
sbb
push
push
dec
fcompl
add
xchg
add
mov
test
add
enter
add
add
xchg
les
sub
add
out
subl
lret
xor
gs
rclb
mov
imul
add
or
cmp
add
xchg
dec
shrl
add
stos
loop
add
mov
xor
pop
repnz
add
add
pop
pop
mov
add
push
pop
add
dec
dec
pop
stos
addb
dec
sub
shll
bnd
add
aaa
mov
js
or
add
add
out
cli
sbb
add
add
inc
inc
shl
push
jecxz
ss
sbb
ss
jecxz
jp
cwtl
arpl
add
add
add
inc
in
imul
popa
cwtl
xchg
add
jns
fsts
das
scas
pop
pop
cmp
push
pop
daa
xchg
and
add
add
test
add
sti
rol
xchg
add
add
add
xlat
fcompl
shl
add
ljmp
lock
std
dec
xchg
adc
fsts
jg
test
add
mov
add
xor
in
cmp
stos
add
sub
add
arpl
scas
add
xor
in
movsb
add
inc
push
mov
test
add
cmp
cmp
jo
add
cmp
in
inc
rcll
sbb
roll
cmp
ret
xlat
adc
out
dec
dec
cmpl
xchg
pop
add
add
add
fmuls
xchg
lock
add
pusha
imul
add
mov
add
push
mov
cmp
xor
pop
adc
add
inc
jae
mov
add
in
adc
loop
addb
cmpsl
cli
daa
lahf
jb
dec
pop
fwait
in
xlat
adc
clc
add
add
xor
xor
sbb
sub
add
push
pushf
or
clc
ss
cmp
scas
sub
add
pop
sti
jbe
mov
add
add
xchg
test
pop
mov
add
cmp
add
add
outsl
push
add
add
addr16
scas
add
das
hlt
push
xchg
clts
add
rclb
movsb
add
dec
mov
add
add
add
add
test
popa
sbb
xchg
repnz
pop
pop
inc
mov
add
xchg
in
aad
add
or
add
xchg
add
cmp
mov
add
push
add
add
jle
mov
test
add
daa
xchg
fcmovne
shl
jbe
daa
mov
mov
testl
jl
inc
or
add
mov
sbb
imul
addr16
mov
inc
in
or
add
mov
mov
mov
test
xchg
or
or
add
add
mov
add
and
sub
adc
mov
add
or
add
fidivs
sbb
add
daa
inc
pop
adc
adc
outsb
icebp
shrb
sti
je
and
add
mov
add
mov
pushf
mov
fcoml
jo
lret
rcl
popa
pop
pusha
mov
add
popa
xor
mov
xchg
cwtl
pop
call
cwtl
lods
and
add
lret
in
lahf
push
push
add
inc
out
pop
push
lcall
test
add
adc
and
pop
inc
and
pop
jmp
inc
or
add
add
jns
enter
add
negl
push
lret
jecxz
or
add
mov
add
add
lret
imul
idivb
out
add
mov
je
sti
xchg
inc
pop
repnz
add
add
sub
add
das
push
test
hlt
inc
sahf
push
pop
imul
mov
hlt
test
pusha
in
int3
lds
aam
cmp
dec
sahf
popa
push
call
inc
shl
inc
addb
std
addb
jb
mov
add
enter
pusha
dec
out
cmp
sti
cmp
movsl
dec
mov
cmpsl
shrl
jbe
inc
call
sbb
and
add
add
mov
add
sbb
jg
movl
ljmp
daa
xchg
in
mov
add
xlat
ficoml
test
add
mov
mov
add
ret
pushf
out
dec
jge
xchg
push
push
adc
data16
add
mov
add
or
add
mov
sbb
enter
add
adc
add
jge
mov
test
add
xor
std
xor
push
xor
sub
add
cmp
add
push
dec
push
bound
mov
dec
enter
insl
mov
add
add
subl
mov
add
cmp
push
jl
notb
add
adc
movsl
in
cmp
adc
add
add
jge
clc
inc
pop
cmp
pop
pop
pop
insb
cmp
add
test
add
add
add
pop
scas
add
aad
and
jmp
jo
add
shll
or
cmp
pop
out
and
clc
push
insb
inc
mov
cmp
loope
je
add
fwait
sub
jge
fs
ret
cmp
add
mov
inc
jg
ds
mov
xor
lock
add
jne
gs
dec
mov
add
lret
mov
add
add
xor
xchg
cmp
rcrl
dec
inc
xchg
in
inc
add
cmp
jle
dec
popf
gs
mov
cmp
sbb
fdivl
add
cld
arpl
add
add
imul
cmpsl
rclb
pop
lds
ret
add
loopne
ret
data16
add
jae
xchg
cli
das
mov
add
add
jmp
jbe
dec
mov
push
fcmove
xchg
add
jo
lahf
pop
repnz
movsl
jp
xorl
mov
jge
add
xor
sarl
cmpsb
add
jnp
add
dec
nop
pop
push
aad
add
mov
xchg
mov
sub
add
in
in
mov
add
add
mov
outsb
adc
inc
push
sar
insb
dec
imul
loopne
push
xor
add
sub
xor
add
mov
jnp
inc
inc
xor
sbb
fsubrs
adc
repz
icebp
cmp
push
add
or
add
sbb
add
add
add
sub
add
subl
je
sbb
testl
out
adc
add
sbb
add
mov
dec
lea
jmp
sub
add
xor
mov
test
add
negb
dec
cmp
jbe
dec
push
sub
xchg
nop
pop
inc
dec
inc
arpl
jmp
adc
push
sbb
sbb
jle
add
push
inc
sub
test
add
xchg
popf
sub
add
or
adc
hlt
adc
xor
repnz
imul
xchg
test
mov
lret
lods
in
adc
add
test
add
fidivl
in
and
add
fcomps
call
add
fnstsw
push
dec
repz
jae
add
in
mov
sarb
insb
fbstp
pop
imul
add
add
or
add
add
cltd
inc
adc
aam
pop
lods
add
ret
je
add
or
mov
add
add
fwait
inc
in
mov
ret
imul
stos
add
mov
cmp
fs
push
add
inc
sbb
inc
lret
jecxz
mov
sub
add
sub
add
mov
add
or
add
dec
lds
and
add
sbb
add
sub
add
push
push
outsb
or
aad
mov
inc
sub
add
sbb
rorl
cmpsb
add
adc
shr
pop
mov
rol
movl
loopne
repnz
out
jge
jbe
push
xchg
lods
loope
and
add
dec
xor
add
sbb
out
test
pop
mov
pop
stc
push
enter
inc
lahf
jbe
rep
add
dec
mov
call
add
cwtl
daa
push
call
sub
mov
cltd
movsl
and
xor
xor
call
push
inc
mov
jnp
add
clc
push
pusha
jge
call
add
add
xchg
push
fsts
sbb
or
add
fstl
add
and
add
and
add
pop
xchg
cli
sub
add
outsb
pop
add
movsb
add
scas
sbb
jg
popl
hlt
jle
add
mov
dec
mov
add
test
add
dec
xchg
pop
inc
xchg
aam
cmp
imul
lds
push
addb
mov
pop
repnz
cmpsl
bound
and
add
cmpsl
and
add
mov
add
pop
fildll
sub
add
add
outsl
rdmsr
xchg
add
sbb
in
lods
add
jae
add
lret
xchg
cli
pusha
pop
adc
loopne
push
add
pop
notb
mov
repz
cmp
in
push
data16
aad
cmpsl
lods
imul
int3
data16
mov
add
jb
xchg
icebp
pop
push
mov
popa
jecxz
into
jmp
xchg
inc
daa
jecxz
mov
icebp
bnd
fidivl
xor
in
pop
xor
xchg
aam
xchg
dec
stos
arpl
xor
les
iret
push
xlat
add
inc
jp
sbb
push
pop
mov
add
stos
ret
push
and
lret
push
inc
negl
sbb
add
pop
popa
mov
iret
adc
add
add
cmpsl
imul
inc
loopne
add
test
xor
subl
add
sbb
cld
arpl
xor
pop
ds
stc
stos
add
stos
out
ljmp
fldl
inc
stos
add
mov
cmp
dec
iret
cmp
add
and
lret
lock
and
std
stos
scas
arpl
jmp
repz
aaa
jae
std
xchg
sbb
jne
add
push
aas
jmp
sbb
add
add
add
or
mov
jb
add
stos
add
dec
stos
add
dec
mov
add
dec
in
push
push
dec
push
dec
xchg
aam
or
add
adcl
imull
cmpsb
add
pop
in
add
jle
stc
enter
fst
jb
in
add
mov
movsl
test
add
add
sub
popa
mov
pop
enter
inc
addr16
fwait
inc
push
adc
mov
add
call
ds
fnstsw
fwait
mov
lds
add
arpl
xchg
mov
das
jmp
add
xor
inc
cmpsb
add
inc
popa
stos
pop
imull
xor
lret
fistpl
pop
xchg
insb
loop
add
mov
add
lods
add
mov
add
in
mov
rclb
push
jle
add
and
add
add
add
ret
out
mov
add
outsl
daa
dec
dec
call
cmp
ljmp
xor
jne
add
mov
pop
in
stos
add
aam
in
add
inc
push
sub
add
in
inc
jno
sbb
cmc
cmp
sbb
xchg
sbb
add
scas
add
pushf
fwait
ds
les
fsub
bound
inc
aas
loopne
add
xor
jecxz
xchg
mov
sub
add
and
add
add
stos
clc
jl
adc
call
add
push
inc
repz
add
pop
in
pusha
addb
mov
adc
inc
and
enter
cmc
movsl
js
gs
cmp
repz
add
addb
je
jbe
adc
andl
iret
mov
xor
xor
pop
arpl
scas
push
ja
scas
test
xchg
test
add
push
add
add
add
das
sahf
sub
xor
and
add
mov
cmp
and
add
fwait
popf
xchg
mov
add
add
add
loope
scas
inc
test
add
mov
add
xor
mov
adc
sbb
shll
add
jb
ljmp
test
sbb
test
add
add
std
addb
lods
add
les
jbe
mov
add
dec
adc
mov
add
sti
in
imul
faddp
and
add
icebp
pop
lock
fcoms
lcall
add
add
