cwtl
neg
dec
incl
mov
xor
add
sub
add
xor
xor
mov
add
stos
cli
and
add
ds
mov
inc
add
mov
outsb
xchg
add
mov
push
in
fbld
jne
inc
add
arpl
add
add
xchg
add
fstl
dec
rolb
leave
movsb
add
addb
add
add
add
mov
testb
repnz
jno
ljmp
add
pusha
add
or
mov
lock
sub
add
jl
add
cld
dec
pop
mov
add
stc
enter
and
mov
std
push
add
and
add
ret
mov
sbb
sub
aad
add
add
push
add
cwtl
test
add
add
add
or
aam
push
jmp
push
push
rolb
mov
jb
jns
push
stos
sarl
mov
mov
ds
push
addb
add
mov
xchg
lods
loop
addb
and
pop
stos
lahf
in
addb
add
xchg
push
fwait
mov
push
add
add
rorl
jbe
addr16
cmp
xor
dec
push
in
sub
add
or
cwtl
ja
xor
cmp
cmpsb
add
add
sti
imul
mov
mov
repnz
stos
scas
cmp
add
out
add
dec
lods
mov
sbb
sbb
add
pop
daa
jbe
jb
mov
movsb
add
cmp
add
cmpsl
jle
mov
push
add
imul
cli
add
fisttps
jecxz
xchg
add
add
test
pop
mov
cmp
add
add
pop
testb
iret
mov
push
outsb
xchg
mov
fldcw
shl
aad
or
add
fnstenv
in
lret
jmp
sub
test
addb
aaa
mov
mov
pop
adc
loop
addb
testb
mov
pop
cld
add
push
ljmp
jge
add
mov
add
pop
lock
icebp
rorl
sub
add
pop
push
sub
pushf
lea
jb
testl
add
dec
flds
add
add
xor
mov
jg,pn
mov
add
ja
add
mov
mov
add
and
mov
add
mov
add
add
push
jns
jg
orl
lret
dec
add
mov
inc
add
jns
adc
add
add
inc
add
add
xor
test
popa
xor
pop
ljmp
push
and
xchg
lcall
push
fisttpl
xor
mov
lret
stos
xlat
jp
gs
push
add
add
cmp
stos
inc
push
add
add
cs
push
add
rolb
sub
and
and
mov
cld
jecxz
lret
pop
dec
xchg
dec
in
addr16
in
push
fstl
add
add
repz
addr16
push
add
dec
cmp
in
sub
add
or
je
cwtl
insb
int3
test
or
dec
and
scas
or
lret
add
es
pop
xchg
scas
xchg
popa
pop
in
xchg
add
fildl
pop
dec
mov
in
pop
lock
add
sbb
sbb
ret
stc
mov
mov
add
std
and
call
add
out
mov
add
lods
ljmp
out
add
cmp
add
or
mov
ret
add
add
aad
add
add
add
push
and
mov
add
add
jmp
sub
lret
jbe
les
iret
gs
sbb
add
rolb
and
mov
sbb
mov
outsl
loop
jnp
add
rcll
repz
add
insb
inc
dec
jg
daa
jnp
cmp
stos
in
lock
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
push
add
imul
rolb
and
mov
test
lahf
jbe
jge
push
popf
pop
xor
rolb
cmp
gs
and
add
dec
stos
dec
outsl
in
xchg
mov
mov
mov
push
add
clc
mov
add
xchg
add
mov
testb
movsb
add
add
adcl
out
sbb
jb
inc
add
imul
int3
fidivrs
fimull
add
add
add
dec
scas
mov
sub
add
add
add
mov
cmp
inc
add
mov
xor
mov
mov
add
add
outsb
or
add
jmp
add
add
xchg
add
test
mov
mov
les
lcall
inc
push
add
in
gs
add
push
fldenv
mov
pop
rolb
pushf
pushf
popf
mov
lock
mov
repnz
out
sbb
cmpsl
data16
mov
sub
stc
dec
mov
movsl
add
mov
imul
stos
pop
addb
add
popa
cmp
adc
add
movsb
add
imul
add
inc
add
add
pop
push
imul
test
add
add
movsb
add
stos
addl
mov
mov
dec
add
fbstp
sarl
mov
xchg
out
popl
add
fists
add
pop
addb
sub
add
ds
add
mov
mov
add
dec
imul
dec
jnp
cmp
adc
push
popa
movsb
add
movb
add
xchg
add
add
add
ja
add
pop
xchg
dec
pop
adc
out
jns
daa
cmp
sub
add
add
dec
inc
dec
inc
leave
in
imul
mov
mov
sbb
mov
mov
jmp
add
add
add
jno
add
push
add
int3
mov
lds
call
jmp
add
sahf
jg
jne
mov
add
add
inc
int3
int3
clc
xor
cmp
add
sbb
das
xchg
in
psllq
xchg
das
enter
mov
outsl
addb
popa
daa
fadds
call
add
adc
xchg
fisubs
mov
test
and
pusha
add
add
add
mov
add
js
mov
addb
insl
mov
and
mov
lea
add
mov
push
jecxz
add
adc
add
inc
add
add
xor
das
out
add
mov
add
mov
jne
or
add
cmp
cmp
inc
add
add
repnz
add
add
sbb
add
mov
inc
add
lods
ret
fmulp
inc
adc
out
cwtl
outsl
icebp
movsl
mov
add
adc
mov
loope
add
dec
pop
inc
add
sub
or
add
mov
rolb
pop
lds
cltd
in
fistps
clc
adc
xchg
pop
and
mov
push
add
xor
add
in
add
lods
lds
mov
add
and
push
aas
pop
test
mov
iret
stos
push
dec
pop
mov
aas
cmp
rolb
gs
pop
add
pop
sti
mov
aaa
push
icebp
xchg
and
mov
mov
xchg
mov
add
jb
mov
enter
pop
xor
mov
std
jb
dec
lods
rcll
jne
add
mov
hlt
add
add
push
add
ljmp
push
cli
add
mov
outsb
mov
mov
js
and
inc
bound
mov
add
icebp
pop
adc
add
xchg
aam
adc
jnp
push
add
mov
js
test
dec
mov
and
int3
mov
add
jecxz
add
and
mov
addb
sarl
movsl
jmp
or
mov
mov
pop
sahf
jle
das
aam
fdivrp
sbb
inc
add
sbb
push
push
add
add
add
lret
sub
cmp
cli
push
ljmp
call
xor
enter
test
pop
cmp
out
movsl
pop
jg
pop
out
aam
js
add
xor
addb
lret
sbb
in
sub
add
jecxz
push
ret
mov
aam
sti
xchg
jge
add
xchg
add
jg
add
test
lcall
sbb
rcrl
ret
sahf
fsubr
and
loopne
insb
icebp
adc
add
add
jae
inc
or
add
fwait
cld
add
add
add
stos
mov
rol
push
fimull
std
iret
mov
xor
sub
jne
repnz
xor
outsb
sti
int
shrl
test
xlat
rolb
cli
jg
test
fsubs
add
nop
add
add
sahf
hlt
add
std
inc
push
mov
add
mov
sahf
rolb
data16
cmp
int
add
dec
mov
in
sbb
mov
scas
jge
aam
jno
jp
add
add
incl
add
cli
test
inc
push
add
add
mov
mov
mov
add
jp
popa
test
in
insl
enter
fimull
cmp
dec
repnz
xor
add
hlt
add
add
addr16
add
add
mov
mov
add
mov
add
fbstp
cmc
pop
movb
adc
dec
inc
add
inc
cli
jecxz
push
addl
add
je
jmp
sub
add
mov
xor
adc
xchg
xchg
in
push
dec
mov
add
and
iret
mov
mov
pushf
push
add
add
push
add
loope
cmp
dec
loope
pop
shl
sti
adc
pusha
add
in
push
or
testb
jns
and
mov
enter
and
mov
stos
out
lods
add
lds
cmp
xor
aaa
rolb
cmp
add
add
mov
aad
add
push
jno
add
sub
repnz
fcmovu
lcall
fwait
adc
movsb
add
inc
add
rolb
bound
mov
popf
xchg
push
int
ja
add
or
push
add
lock
xchg
stc
cmp
cmp
add
add
mov
xchg
add
insb
mov
sub
push
add
add
mov
dec
int3
movsl
cmp
add
or
add
rorl
push
aad
inc
add
sub
add
pop
call
cwtl
or
aam
bound
mov
ljmp
add
push
cs
es
popf
cs
add
cmpsb
add
pop
mov
sub
jl
adc
rorl
add
adc
xchg
lret
mov
rolb
xchg
je
cmp
adc
push
add
cmp
rolb
fbld
or
add
mov
addb
add
cmp
test
add
sti
cmp
movb
add
add
pop
lret
inc
inc
add
arpl
add
lret
out
and
add
push
xor
add
add
add
pop
cmp
fmul
and
xchg
jge
out
mov
push
add
fcoml
dec
mov
fdivrs
push
add
add
adc
pop
jns
add
xchg
scas
cmpsl
mov
outsb
out
movb
loop
inc
add
fmull
in
mov
adc
hlt
add
loopne
dec
addr16
add
xchg
pop
pop
into
or
and
add
add
mov
add
sub
sub
cld
addb
add
add
adc
scas
lods
jne
loopne
daa
or
in
push
add
rolb
pop
int3
jle
testb
sub
sbb
add
mov
inc
jo
popa
xchg
lret
jle
add
gs
insb
jno
add
inc
out
int3
das
sub
add
mov
xchg
test
outsb
cmp
xor
je
cld
sub
sub
sub
sti
jl
add
dec
xchg
add
add
fdivrl
aam
dec
enter
call
mov
mov
mov
lahf
pop
mov
and
mov
sbb
cltd
xchg
add
mov
add
dec
testb
scas
adc
fisubrs
push
std
loope
add
jno
add
mov
pop
dec
or
add
sbb
cmpsb
add
push
add
mov
clc
sahf
std
and
mov
mov
lods
iret
cmpsl
xchg
add
mov
fimull
leave
into
and
aaa
cmp
pop
aad
aam
sbb
movsl
pop
push
je
sub
add
add
test
pop
jge
add
or
arpl
add
mov
sbb
inc
hlt
add
add
sub
add
vminsd
xor
xor
addb
mov
add
add
add
push
add
add
cld
test
mov
xchg
mov
add
or
push
xor
dec
xchg
imul
pushf
jnp
aaa
add
mov
in
aad
xchg
add
mov
lea
movsb
add
add
cmpsl
outsl
and
mov
add
mov
lret
jne
popf
sbb
push
mov
mov
and
mov
stos
in
adc
into
test
test
inc
add
into
mov
stc
mov
push
enter
push
or
movb
test
cmp
add
xor
add
sbb
mov
add
pushf
fisubs
cltd
dec
mov
sub
cmp
int3
xchg
nop
add
add
jmp
and
mov
dec
rolb
jo
push
scas
mov
or
aam
dec
adc
add
dec
or
add
xchg
add
les
mov
pop
mov
lahf
dec
pop
ret
inc
out
sbb
bound
mov
jae
add
ret
cmc
ret
add
imul
mov
jb
lods
push
add
push
xchg
add
xchg
out
add
fidivrs
mov
add
add
add
lods
loope
dec
test
add
into
into
push
es
fsubl
mov
pop
sahf
fidivs
add
les
and
mov
jl
pop
mov
rorl
mov
push
add
das
jno
mov
lock
add
lds
add
sub
adc
out
lret
imul
add
add
mov
repnz
add
sbb
jp
add
inc
add
jle
cwtl
jo
cmp
int
add
xor
xchg
lahf
mov
aam
daa
hlt
add
testl
mov
pop
mov
xchg
add
test
add
mov
lret
fistps
lret
pop
cmpsb
add
and
mov
mov
sbb
or
out
out
ret
fnstsw
jae
or
ja
mov
std
dec
dec
out
cmp
push
add
fidivl
xor
pop
rolb
cmpsl
add
mov
add
repnz
add
pop
xor
sub
arpl
add
mov
pop
lcall
xor
mov
and
mov
add
add
repnz
or
pop
data16
add
cltd
push
addr16
movb
fcoms
repz
push
add
nop
add
and
clc
ret
xchg
add
dec
mov
dec
mov
mov
pop
lret
add
addb
imul
add
add
mov
or
add
add
rolb
cmp
in
bound
mov
loopne
xlat
neg
scas
js
add
insl
sub
pop
cmp
sarl
lods
rcll
and
and
add
push
add
rorl
add
or
push
add
cmp
add
test
sub
add
scas
jae
mov
outsb
xchg
pop
stos
sbb
sub
addr16
lret
es
add
enter
rol
add
std
cmpsl
mov
cmpsb
add
addb
add
add
popl
pop
test
or
popf
xor
rolb
add
rcll
sub
outsl
and
add
mov
icebp
push
adc
add
repnz
addb
movsb
add
stc
lcall
add
addb
dec
xchg
add
xchg
add
add
movsb
add
push
add
int
bound
mov
add
xchg
add
add
add
stos
mov
sub
xchg
add
push
mov
mov
add
decb
jp
or
mov
add
mov
add
in
or
hlt
add
add
pop
push
add
int
js
cld
dec
test
jo
enter
rolb
add
mov
adc
add
mov
jmp
dec
or
mov
add
in
les
jo
and
push
cltd
push
cmp
test
jne
add
fxam
add
inc
adc
xor
loope
add
lock
sarl
inc
test
out
cmp
xchg
add
add
jp
fwait
cmp
sti
xlat
nop
add
add
add
pushf
icebp
or
xor
fnstcw
add
test
sahf
test
mov
mov
cmp
jae
add
sbbl
add
mov
mov
or
xchg
pop
xchg
lods
jge
cli
push
int
add
jp
and
pop
and
mov
fwait
test
cmp
cld
add
mov
add
in
out
inc
xor
xchg
add
fsubrs
push
xor
inc
mov
xor
cmp
loope
scas
and
mov
add
mov
xchg
add
add
and
aaa
sbb
push
repz
and
inc
lcall
mov
sub
mov
push
leave
mov
mov
adc
push
add
add
and
jp
mov
sbb
inc
add
add
sbb
ljmp
rolb
xor
add
cmpsl
sahf
mov
test
add
mull
jmp
mov
outsl
mov
loop
sti
mov
add
outsb
aam
dec
rolb
sub
repnz
add
std
jp
add
addb
mov
inc
outsb
push
adc
ss
addb
test
das
adc
aaa
xchg
add
mov
js
add
xor
xchg
or
inc
add
and
jg
inc
add
mov
pop
movsb
add
jle
add
aaa
xlat
sub
xchg
mov
push
add
aas
fisubrs
sub
mov
or
sbb
sub
add
mov
add
inc
add
subl
add
xchg
sbb
out
lret
loope
test
or
aam
xchg
add
mov
rolb
pop
add
add
movsb
add
sub
and
pusha
add
mov
add
mov
mov
add
mov
xchg
push
inc
jle
xchg
pop
addb
add
lret
xor
xchg
add
nop
add
add
fsts
outsb
fisttps
loopne
fmul
xlat
aam
and
imul
mov
add
mov
add
add
add
xchg
test
roll
add
into
mov
add
xchg
add
add
add
sar
add
nop
add
in
xor
idivl
testb
mov
add
add
jne
add
pop
pusha
add
add
mov
lods
test
add
add
add
data16
xchg
imul
add
outsl
adc
addb
popf
or
sub
mov
jno
add
add
mov
das
insl
push
int
add
add
add
dec
xor
adc
add
add
inc
add
add
arpl
push
sbb
fs
test
loopne
decb
movb
sbb
insl
inc
add
xchg
les
sarl
je
jmp
enter
decb
mov
mov
jne
add
sbb
cltd
inc
sti
dec
sbb
add
test
iret
jae
enter
pop
rolb
xor
pushf
adc
lcall
push
push
or
sbb
ds
popf
xor
add
in
sti
imul
mov
push
add
inc
add
add
sbb
mov
add
sbb
add
pop
mov
xchg
sbb
sbbl
add
mov
lahf
cli
jns
mov
mov
jl
cmp
add
add
add
imul
cmp
or
add
add
jl
imul
add
mov
push
add
cmpl
adc
or
add
add
data16
les
jge
mov
dec
adc
add
js
dec
pop
les
mov
data16
add
mov
lahf
adc
add
inc
dec
cmp
jns
jmp
stos
in
jge
add
data16
lea
ds
add
ljmp
mov
rolb
mov
xchg
loop
push
add
shll
mov
push
add
add
push
add
push
add
fisttpl
cmc
repnz
pop
cmp
in
xchg
addb
sbb
xchg
fcomip
mov
mov
dec
hlt
add
shl
add
adc
pusha
add
dec
leave
sbb
add
jae
in
mov
lahf
add
dec
clc
mov
gs
cs
xor
rolb
cmp
inc
imul
adc
in
add
mov
je
mov
add
push
add
add
popa
add
add
inc
add
add
les
int3
pop
ficompl
ret
testb
cld
xchg
loopne
sbb
sub
pop
inc
pop
filds
add
push
add
sahf
mov
add
mov
into
cs
daa
imul
xchg
ret
jne
add
add
jb
cmpl
pop
sub
xchg
xor
scas
push
add
push
push
shr
sub
xor
fdivrp
or
add
mov
inc
add
into
sub
in
aad
lds
cmpsb
add
out
sahf
les
push
lcall
addb
add
push
cmpsl
jmp
pop
jp
fistpl
inc
add
scas
lahf
or
xchg
add
data16
push
add
jo
jl
sub
mov
arpl
es
ds
add
add
in
rcll
add
rolb
push
add
pusha
add
and
fwait
pop
int
aaa
ret
addr16
add
add
pusha
add
sub
mov
xor
movsb
add
mov
push
add
leave
js
add
add
mov
sub
cld
push
loope
dec
xor
leave
ret
mov
shrl
xchg
add
mov
enter
cmp
add
sbb
inc
add
add
test
jbe
loop
jns
add
dec
cmp
pop
push
js
add
iret
insb
fadds
rolb
add
fidivl
dec
test
fwait
aas
adc
xor
add
mov
rolb
and
sub
push
loopne
mov
add
push
lret
mov
bound
mov
xor
rolb
push
jge
jle
mov
pop
mov
cmp
cmpsb
add
pop
lahf
cwtl
addb
das
cwtl
mov
rcr
add
pop
mov
mov
pop
es
mov
mov
add
iret
sbb
repz
jnp
stos
or
cmpsl
mov
insl
fidivrl
ds
add
add
sub
cmp
xchg
or
lret
les
fbld
add
in
dec
addr16
jp
xchg
push
mov
mov
and
mov
push
add
jge
add
jg
add
popf
mov
push
pop
sub
sbb
shrl
and
add
mov
test
popa
dec
addr16
add
mov
cltd
pushf
push
dec
push
add
mov
es
inc
add
cltd
jne
mov
add
push
mov
jle
movsl
imul
dec
popf
jbe
adc
cmp
mov
pop
data16
popa
jae
add
adc
jno
xchg
sti
lock
sbb
xor
mov
push
add
add
adc
roll
dec
int
add
mov
add
and
mov
add
push
jbe
into
fmuls
cmpsb
add
nop
add
add
ficoms
frstor
stos
push
add
add
aam
xchg
mov
stc
or
jno
or
jns
add
add
call
rolb
bound
mov
pop
push
add
add
add
ljmp
test
jo
mov
jnp
pusha
add
and
mov
add
in
mov
fsubr
imul
jnp
jbe
push
add
add
pop
fs
fisubl
add
data16
add
stos
sub
xchg
movsl
movsl
and
cmc
xchg
xchg
mov
add
jb
xchg
push
aas
lods
rolb
add
jne
add
push
add
cmp
add
ret
js
pop
pop
jg
push
fisttpll
into
or
or
jecxz
lret
inc
sub
add
roll
mov
jmp
out
add
or
xchg
add
add
add
rolb
xor
push
out
and
mov
fwait
jne
ja
cwtl
aas
jecxz
add
add
mov
sub
xor
add
pusha
add
or
xchg
jl
frstor
mov
xchg
add
xchg
xlat
mov
add
add
push
add
add
sbb
adc
push
pop
insb
cmp
xchg
add
aam
sbb
xchg
cli
mov
add
add
mov
mov
adc
je
dec
inc
add
lret
hlt
add
sbb
mov
jae
das
adc
stc
and
mov
dec
jns
push
lcall
add
cwtl
enter
es
add
clc
pop
addl
add
sbb
xor
fistl
jne
push
or
and
cltd
and
inc
adc
add
xchg
enter
or
cwtl
bound
mov
pusha
add
add
add
mov
int
lods
xchg
call
test
push
add
mov
dec
lret
or
outsl
in
add
cmp
xor
add
push
add
add
maxps
lret
cmp
add
or
add
dec
rolb
sbb
add
mov
repnz
add
jecxz
add
mov
insb
in
sahf
xchg
je
mov
add
adc
add
push
add
mov
push
mov
push
lahf
ljmp
clts
add
sbb
pushf
mov
mov
add
add
cmp
enter
fsubrs
sub
add
cmp
add
push
add
rolb
sub
or
push
testb
aad
adc
loop
sahf
cmpsl
jp
add
inc
add
shl
and
add
pop
mov
adc
lahf
push
sbb
out
ja
inc
add
add
mov
arpl
or
mov
adc
add
notl
push
add
inc
add
mov
test
xchg
fsubrl
add
sbb
sbb
sbb
stc
add
jmp
sub
les
lods
cmp
mov
cmpsb
add
jl
mov
add
mov
add
mov
pop
movsb
add
push
add
mov
add
and
mov
data16
sbb
scas
test
add
cmpsb
add
sbb
mov
add
int
mov
add
jb
jmp
mov
mov
add
mov
daa
cmp
push
add
test
mov
pop
push
mov
add
sub
add
mov
add
inc
add
add
push
movsb
add
out
aam
inc
add
pop
insb
xchg
adc
fs
ljmp
dec
push
jl
add
add
shrl
add
mov
out
dec
fdivs
scas
dec
mov
push
and
mov
sub
cmp
or
mov
xchg
xchg
out
in
dec
mov
insl
sbb
mov
cwtl
dec
cmp
jne
push
add
or
add
inc
jnp
mov
pop
fwait
and
mov
jnp
add
or
or
add
add
add
ljmp
add
cmp
sbb
mov
dec
jno
add
les
int
lea
jge
ja
mov
addr16
push
add
add
add
rolb
sti
sbb
ret
add
or
jmp
mov
add
xchg
inc
mov
or
add
std
xor
add
mov
fs
add
lret
in
inc
add
pop
mov
mov
cmp
inc
add
cmp
imul
pop
pop
adc
push
add
inc
xor
sub
daa
testb
sub
xchg
iret
mov
popa
ret
sub
push
push
test
add
into
cmp
imull
mov
add
add
add
mov
adc
add
pusha
add
adc
inc
add
rolb
cli
scas
mov
rolb
sub
or
sub
les
test
insl
mov
cltd
cli
adc
movsl
or
add
jae
add
add
add
sub
add
add
push
fwait
add
sub
testb
lock
pop
push
in
out
xor
mov
add
mov
dec
scas
or
add
add
cltd
inc
add
add
or
add
push
cmp
cmp
insb
call
insb
mov
mov
daa
pop
mov
push
add
xor
mov
add
push
sbb
roll
data16
aaa
into
sub
add
mov
int
jno
add
xor
add
in
out
push
add
add
add
add
std
aad
xor
add
mov
jbe
arpl
inc
add
mov
stc
icebp
scas
outsb
mov
mov
or
sbb
mov
add
addb
pusha
add
ficomps
scas
add
add
or
aad
rolb
addr16
xchg
xchg
lea
xor
aam
int
int3
sbb
add
xchg
cwtl
cmc
mov
cmpsb
add
cmc
mov
nop
add
add
pushf
dec
or
inc
add
int3
pop
mov
push
rolb
cmp
adc
mov
cmpsb
add
add
add
mov
into
cmpsl
fmull
cmpsl
sub
cwtl
out
add
filds
mov
add
add
repz
jns
add
jle
mov
add
mov
data16
add
jge
popa
arpl
xor
or
push
add
mov
cld
mov
inc
lods
test
enter
xchg
add
add
cmc
jl
mov
lcall
js
out
push
jb
jnp
add
add
push
add
add
into
stos
xor
test
mov
add
mov
jp
add
cmpsb
add
xlat
into
adc
and
mov
add
sbbl
daa
addb
jne
daa
dec
push
je
fcmovb
add
rolb
ficomps
mov
inc
add
clc
cltd
add
add
push
and
adc
sbb
testb
push
add
sbbl
inc
add
fistps
repz
sub
setl
cmpsb
add
add
add
push
popa
jp
fcoms
add
sub
add
add
iret
mov
add
lock
add
mov
cmp
add
cmp
data16
xor
jno
xor
decl
stos
push
add
inc
add
add
orl
add
adc
push
add
pop
push
pop
mov
add
add
cs
clc
inc
add
add
out
ja
or
add
sub
add
loope
lcall
cmc
movsb
add
test
js
mov
gs
addr16
aas
xor
xor
add
testl
push
je
cmc
nop
add
and
mov
or
add
in
pop
leave
cmpsl
movsb
add
test
push
sub
jne
cmp
int
jb
sbb
sub
and
mov
add
in
push
cmp
sahf
ret
or
push
add
es
scas
std
cmp
push
cmpsb
add
add
jmp
lahf
pusha
add
jo
sub
add
es
int
mov
int3
lds
out
popf
sbb
push
lcall
xchg
xorl
add
in
inc
add
nop
add
mov
mov
add
add
dec
scas
cmp
icebp
test
push
add
push
add
add
add
jne
ja
loop
clc
pushf
int
movsl
mov
xchg
out
rol
add
xor
leave
out
setnp
test
dec
aad
in
add
mov
add
xchg
add
sub
xor
loopne
mov
sti
jle
adc
xor
lds
fstps
mov
out
xlat
and
mov
mov
lcall
push
mov
testb
sub
add
or
or
adc
dec
pop
clc
fisubl
inc
mov
pushf
mov
xchg
sbb
mov
movsb
add
push
add
inc
add
sbb
cmc
pop
jo
movb
inc
add
les
add
cld
rcll
gs
pop
pop
xlat
push
add
mov
push
adc
jns
dec
test
inc
adc
imull
xchg
xor
out
xor
jns
fidivs
mov
xor
push
jmp
add
stos
dec
push
bound
mov
jns
mov
mov
jns
add
sub
cmpsl
out
push
sub
call
movb
mov
in
jp
adc
push
addb
mov
pop
add
xchg
mov
js,pt
push
ds
add
add
pop
repz
push
add
add
and
mov
out
mov
add
add
add
dec
jo
mov
jecxz
add
in
push
mov
cmp
push
xchg
pop
popf
fiadds
dec
outsl
sti
sbb
push
add
add
mov
cmp
add
cmpsb
add
and
lret
stc
fiaddl
push
add
add
mov
push
fwait
ja
adc
sti
ljmp
mov
dec
andl
cwtl
stos
ret
ds
clc
fwait
cltd
pop
dec
and
sbb
rolb
jnp
movb
and
mov
out
xor
mov
loopne
or
sbb
add
rcrl
int
sbb
cmp
add
fmuls
stc
int3
mov
jl
pop
fildl
or
add
inc
add
mov
rolb
mov
add
pop
add
mov
in
add
dec
popf
add
fldpi
jns
arpl
jg
cli
adc
mov
nop
add
sbb
add
xchg
add
or
dec
outsb
bound
mov
pop
sub
movsl
inc
add
xchg
cmp
sbb
add
mov
cs
mov
add
repz
in
push
test
or
mov
add
mov
aas
xchg
xchg
mov
jo
xchg
add
jecxz
add
movsb
add
movsb
add
add
add
fidivs
in
cli
pop
test
xchg
test
fcoms
fildll
es
add
add
je
in
xor
add
jb
sbb
add
add
lea
dec
pop
and
adc
mov
repnz
push
xchg
mov
ret
bound
mov
jne
add
leave
push
add
add
add
cmp
jge
add
dec
jmp
add
out
testb
add
cmpsl
jg
cmp
add
icebp
rolb
add
jne
add
dec
mov
push
add
jl
add
add
lret
inc
add
lret
sbb
fsubp
add
jo
push
add
cltd
jp
add
fcoms
add
or
loop
adc
mov
les
movsb
add
add
loop
push
add
add
add
add
nop
add
adc
and
xchg
into
sub
add
add
out
addb
add
fdivl
add
add
adc
and
cmpsl
imull
cmp
xor
cmc
or
push
addb
sbb
add
add
shrl
flds
clc
in
insb
lds
add
movsb
add
mov
add
mov
add
mov
mov
add
add
and
mov
out
aas
mov
les
jl
add
add
std
add
sbb
inc
add
jge
sub
sbb
icebp
mov
rolb
sbb
sub
stc
leave
mov
or
cmp
pop
addb
add
rolb
mov
add
mov
xchg
add
xchg
int
rcl
and
mov
test
mov
fnstsw
mov
sbb
jns
add
add
js
pop
sub
js
rolb
cmpsb
add
sub
add
mov
add
mov
mov
jp
sbb
pop
xlat
shrl
add
mov
add
adc
jb
out
sahf
mov
dec
push
jecxz
in
outsb
jl
and
jbe
in
or
subl
add
inc
add
lods
in
pop
lock
add
dec
mov
push
in
rolb
add
add
add
mov
jp
dec
fidivrl
sbb
mov
mov
cltd
and
jl
lret
add
mov
into
inc
add
add
add
mov
xchg
add
sub
add
nop
add
sub
ja
xchg
add
mov
add
sbb
mov
adc
lret
aam
and
mov
test
sub
add
mov
mov
data16
outsl
or
add
adc
push
fwait
dec
mov
pop
rolb
push
jno
add
scas
sbb
add
sub
add
pop
orl
add
push
sub
add
stos
pop
rolb
xor
and
mov
and
mov
mov
es
xor
sbb
add
test
cmp
jecxz
pop
ljmp
add
or
add
je
push
add
dec
add
inc
sbb
cltd
xor
adc
insb
int
add
addr16
pop
dec
xchg
inc
in
loopne
out
popf
jns
cmc
cmc
dec
fcompp
mov
inc
add
cmp
je
lahf
sbb
jge
jl
xchg
mov
add
pop
popa
outsl
mov
and
xor
add
add
add
das
mov
cmpsl
lods
lret
repnz
pop
pop
and
add
add
loope
cli
mov
sub
add
pusha
add
jl
add
mov
pop
mov
cld
cltd
xor
test
jp
add
es
sub
pushf
test
add
jg
lcall
call
add
jns
add
add
mov
popf
push
pop
mov
or
mov
pop
outsl
ds
pop
push
and
mov
test
add
sub
lret
aad
mov
outsl
jmp
xor
push
add
mov
add
scas
xor
push
add
mov
xchg
pushf
pop
push
add
movsb
add
jmp
add
add
addr16
add
add
add
add
xchg
add
repz
out
cmp
fldenv
mov
dec
jecxz
add
pop
fcomps
pop
and
add
inc
add
pusha
add
add
add
add
fdivrl
inc
add
add
pop
aad
mov
pusha
add
test
xchg
add
jp
pop
jmp
inc
mov
adc
adc
dec
inc
push
add
add
jmp
add
add
jmp
addb
add
mov
sub
add
andnps
jns
jp
daa
subl
add
sbb
testb
add
jno
jmp
inc
add
add
dec
repz
out
push
lods
fcoms
inc
add
add
add
add
add
std
xlat
push
add
cmp
add
pop
or
sub
and
testb
mov
mov
push
cmp
add
mov
mov
iret
jnp
and
add
add
insb
dec
inc
add
nop
add
mov
jge
add
jg
ret
pusha
add
ret
test
data16
sahf
dec
addb
add
testl
add
insb
push
push
add
stc
add
lcall
inc
aaa
ret
enter
mov
add
test
outsl
add
add
add
adc
jmp
xchg
xchg
sti
sub
inc
daa
xchg
add
add
jne
sti
fsts
add
add
jb
loop
leave
out
adc
rolb
add
push
xchg
in
add
cltd
out
rolb
outsb
frstor
add
cld
inc
add
jle
add
js
cmpsl
movsl
test
rorl
jge
pop
xchg
or
add
mov
add
mov
inc
add
popf
sub
add
add
jge
add
mov
das
int3
ret
sbb
adc
adc
pop
add
add
mov
add
data16
or
add
sti
add
fildll
add
dec
fldt
jae
jp
mov
cwtl
dec
lea
inc
fldcw
xchg
add
ja
add
add
jnp,pn
mov
add
ds
push
testb
xchg
add
add
into
pop
cmpsl
mov
add
inc
cld
lods
mov
imul
pop
inc
add
out
add
jmp
add
dec
inc
lret
loope
add
fmull
in
add
fadd
add
lods
add
mov
add
add
add
mov
inc
out
jg
mov
xchg
cmp
mov
add
add
jge
and
sti
je
add
push
mov
clc
add
sub
inc
add
loope
sbb
add
cmp
and
sbb
cltd
rolb
add
add
andl
clc
lret
mov
stos
testb
add
in
and
pop
outsl
jbe
ret
addr16
pop
add
add
add
in
dec
movsl
add
add
add
test
jb
loope
add
dec
nop
add
fimull
scas
lahf
jp
or
das
loope
lret
fidivrl
add
sub
add
add
add
test
adc
cld
mov
pop
fnsave
add
cwtl
mov
jbe
in
xchg
add
nop
add
fiaddl
mov
inc
add
lret
mov
out
aad
or
movb
push
add
add
add
pusha
add
add
add
movsl
setne
adc
add
sbb
inc
add
inc
add
cmp
std
cmpsb
add
fsubl
mov
add
add
daa
pop
add
sbb
add
adc
xchg
pop
out
addr16
nop
add
add
add
add
xor
mov
or
xor
pop
mov
call
add
dec
rolb
add
inc
xchg
inc
cmc
dec
pop
adc
rolb
inc
cld
jg
add
les
rolb
sbb
pop
push
idivl
imul
add
add
xchg
inc
push
add
leave
daa
mov
add
add
mov
sbb
add
sti
inc
add
shr
rolb
stc
mov
push
add
add
insl
push
jle
add
cmpsb
add
inc
add
mov
aad
stos
mov
insl
add
lds
add
add
add
add
mov
das
addb
mov
push
add
add
out
imul
jmp
testb
pop
sahf
or
ret
mov
and
fildl
cmp
inc
add
xchg
sahf
rolb
fwait
bound
mov
lret
rolb
movsl
test
add
and
mov
adc
lea
add
mov
fnsave
icebp
daa
xchg
push
add
adc
mov
fildll
add
mov
and
mov
add
in
adc
mov
call
add
imul
int3
push
outsl
adc
add
cmp
cli
sahf
aad
ret
mov
add
mov
les
mov
add
call
or
cli
add
bound
mov
jmp
add
fadds
add
mov
add
inc
xchg
repz
add
add
sbb
cmp
sbb
mov
out
inc
add
mov
add
xor
fucomi
adc
sbb
sub
cmc
data16
add
mov
int
out
jnp
mov
add
inc
add
add
imul
addb
add
add
std
inc
add
jnp
fsub
lods
aaa
or
fdiv
add
call
xchg
cmp
pop
and
stc
dec
ja
in
jb
loop
jne
jmp
dec
lock
cli
stc
test
sbb
fidivrl
je
dec
mov
mov
arpl
les
repnz
or
les
mov
mov
adc
aad
daa
push
cmp
xchg
xchg
jmp
cmp
addb
add
jp
mov
jae
mov
cs
push
movsl
or
imul
dec
lcall
out
dec
pop
push
dec
adc
lea
jle
into
jmp
jb
or
inc
fwait
cmp
add
add
pop
repnz
dec
leave
dec
push
add
and
data16
adc
add
pop
lock
pushf
daa
or
test
push
add
push
inc
add
lret
testb
sbb
dec
lods
lahf
ja
or
pop
adc
mov
inc
mov
ficomps
cld
xchg
cmp
pop
sub
cmp
add
stc
sbb
mov
jecxz
add
scas
jns
outsl
daa
int
lods
dec
aad
scas
mov
add
ficoms
inc
add
add
mov
add
add
push
add
lds
add
addb
mov
push
add
add
add
out
shll
sub
insb
push
nop
add
add
push
push
fcmove
lea
add
testb
sbb
fdivp
add
add
mov
add
add
add
cli
adc
dec
push
add
fstps
stc
or
add
add
adc
add
imul
xlat
cmc
adc
test
add
pusha
add
ja
mov
les
rcl
add
add
add
mov
add
nop
add
aam
arpl
outsb
scas
pop
xor
pop
cmp
add
adc
roll
enter
xor
fwait
pop
imul
add
add
pop
pop
loopne
lret
sbb
pop
jl
xchg
jmp
jge
push
add
add
inc
add
dec
cld
push
add
add
add
aaa
movsb
add
and
or
out
inc
iret
push
add
sub
adc
movsb
add
or
insb
push
add
jns
hlt
add
jb
push
add
inc
add
add
add
mov
add
push
mov
xor
xor
inc
or
jge
rorl
add
movsb
add
cmp
add
xor
mov
add
call
add
mov
cmp
add
fmull
cmc
mov
add
mov
shll
inc
repz
or
mov
jge
push
jns
dec
in
call
push
dec
scas
mov
mov
leave
fsts
cwtl
xchg
push
int
test
loopne
cltd
or
bound
mov
push
pop
cs
rolb
xchg
and
mov
add
add
mov
mov
add
push
pop
imul
insb
xchg
ret
xchg
add
mov
rorl
out
mov
xlat
jnp
add
aad
out
js
add
push
add
add
movb
sbb
sbb
mov
jp
push
cmp
add
in
jno
add
add
add
add
add
cwtl
sbb
mov
rolb
ja
or
add
push
scas
jg
imul
jbe
addl
mov
fcmovbe
add
jbe
sub
scas
test
test
add
stos
pop
test
jmp
js
test
add
add
mov
iret
call
pop
loope
xor
mov
and
mov
inc
movsl
dec
mov
sbb
inc
add
jle
fistl
movsb
add
call
pusha
add
add
add
mov
test
adc
add
movb
pop
mov
add
pop
inc
add
pop
out
mov
adc
mov
add
popa
out
testl
jnp
sbb
add
pop
adc
pop
sbb
les
sub
add
push
add
cmp
sbb
pop
pop
cmp
clc
sti
lea
sbb
pop
imul
mov
add
pop
arpl
pop
inc
mov
add
and
lret
inc
add
out
aam
out
cmp
add
mov
sahf
mov
cmp
inc
add
mov
jo
mov
mov
add
add
add
mov
adc
sti
daa
mov
lods
and
xchg
or
push
xor
xchg
add
xor
inc
dec
rolb
add
stos
pop
testb
jl
mov
popf
add
mov
in
jp
add
mov
les
xchg
sub
out
leave
jnp
sbb
add
incb
mov
dec
add
or
mov
jns
lds
mov
xchg
inc
out
ljmp
adc
cmp
mov
testb
add
add
cmp
xchg
adc
push
cs
rolb
add
stos
sti
mov
dec
mov
add
add
add
add
mov
int3
int3
or
add
xchg
jae
mov
add
das
xor
mov
pusha
add
sbb
add
adc
test
ds
icebp
pop
stos
jbe
daa
testb
cmpsb
add
cmc
xor
fst
mov
mov
sahf
gs
push
add
arpl
add
or
sub
jecxz
xchg
add
frstor
arpl
ljmp
das
enter
add
mov
lcall
mov
in
outsb
std
test
in
cmpsb
add
addb
insb
ljmp
mov
int
push
add
mov
add
mov
xchg
in
mov
test
add
add
add
push
add
ret
std
inc
sbb
add
add
mov
add
adc
push
imul
cmp
add
insl
into
cmc
int3
xchg
outsl
jno
add
cs
cmp
mov
inc
add
sbb
add
xor
add
inc
add
inc
add
adc
mov
xchg
add
ss
xchg
or
rcr
loopne
inc
add
clc
aas
cmp
add
sbb
push
mov
xchg
push
add
mov
ret
jne
pop
loop
adc
add
mov
mov
add
movsl
sbbl
outsb
jae
add
mov
dec
jecxz
stc
das
mov
add
addr16
dec
push
add
add
add
push
mov
aam
push
add
cmp
add
stc
std
and
mov
test
add
mov
adc
and
out
push
add
and
mov
cmpsl
cs
dec
sub
mov
mov
data16
add
sub
add
mov
sbb
call
add
pop
pop
dec
popa
sub
add
ret
fistpll
mov
xchg
push
or
add
or
adc
repz
mov
dec
or
daa
movsb
add
test
adc
das
dec
jo
add
mov
cmpsl
ret
add
mov
xchg
add
ljmp
push
push
outsb
xchg
add
mov
add
dec
fdivr
mov
int
cmp
add
movb
add
push
add
arpl
add
xor
daa
inc
add
jl
add
cmp
jae
fnstsw
add
jge
add
add
xchg
add
aad
dec
pop
jnp
add
push
add
test
pop
addb
test
add
inc
cmp
adc
add
sbb
mov
add
pop
lods
and
mov
add
jle
movb
mov
add
cmp
jmp
adc
lret
mov
fidivrs
or
inc
cmp
inc
gs
xchg
jl
push
push
mov
out
add
inc
push
imul
add
std
mov
dec
int3
xor
mov
testl
inc
test
adc
stos
fwait
push
add
adc
fistl
ss
addl
add
testb
lods
call
adc
daa
jae
add
lock
add
push
add
add
dec
dec
lea
jns
add
rolb
mov
add
mov
in
jle
lcall
add
cld
add
push
cltd
mov
inc
enter
imul
xlat
push
add
add
xor
add
sub
rolb
icebp
cli
cs
enter
fidivrl
cltd
inc
mov
cmp
add
add
rolb
mov
and
jmp
repz
cmp
je
mov
lret
push
jo
add
jne
mov
mov
out
test
test
cli
xor
es
sub
add
add
aaa
jp
cmp
stc
dec
mov
add
add
jge
mov
ljmp
aad
jecxz
mov
dec
test
sub
add
stos
dec
sarl
jo
cli
add
mov
mov
push
add
add
xor
jmp
pop
inc
cmp
xchg
push
add
scas
outsl
cmp
xchg
add
jg
add
gs
push
addb
nopl
popf
rolb
add
add
add
aad
add
add
dec
insb
jno
fbstp
cs
shrl
mov
ja
cmp
add
push
add
inc
cmc
jge
mov
jns
mov
shll
test
or
pop
stc
pop
jae
add
dec
rolb
popf
test
pushf
push
mov
and
mov
in
add
sbb
fucomip
lcall
insl
push
je,pn
into
jl
add
add
pop
add
mov
js
fwait
xchg
adc
cmp
dec
je
fbstp
add
mov
add
adc
dec
pushl
leave
mov
mov
push
mov
add
and
add
add
mov
adc
add
cld
mov
jb
dec
pop
push
mov
int
add
xlat
dec
push
fistl
fwait
jb
rolb
cli
push
out
in
xor
pause
add
loop
jle
inc
add
adc
xchg
cmp
sub
mov
int
add
mov
mov
add
lea
add
out
or
add
add
sub
xchg
jecxz
insb
fisubrl
cmp
add
jne
add
ret
add
int3
pop
sbb
sub
xlat
mov
add
sbb
add
test
pushf
pop
jb
adc
pop
dec
lods
and
mov
xor
in
mov
add
mov
mov
add
add
add
add
mov
mov
ja
arpl
jge
sbb
jno
jns
clc
inc
inc
add
ret
std
cmp
add
add
in
dec
testb
pop
inc
pop
pop
mov
gs
addr16
mov
pop
cs
add
sbb
cmp
xor
pop
mov
mov
rolb
mov
add
mov
dec
leave
fmuls
push
add
adc
pop
mov
pop
repz
add
cli
jo
add
cmp
mov
add
mov
clc
ds
add
add
add
lods
dec
push
out
cwtl
jle
lcall
add
fstl
dec
mov
dec
adc
add
add
xchg
add
add
push
add
dec
pop
mov
sbb
ret
sbbl
add
and
jb
cld
jl
les
adc
xchg
inc
xor
jle
les
arpl
or
je
out
xor
mov
add
jne
add
dec
out
out
push
add
dec
mov
vunpcklps
cmc
fmuls
push
add
out
dec
adc
sbbl
in
add
push
push
mov
pop
fwait
sub
rorl
lods
daa
ja
mov
push
dec
xorps
push
add
enter
add
sub
lret
add
add
push
dec
push
add
dec
es
fsub
mul
jae
add
jnp,pt
jecxz
stos
inc
add
inc
add
rolb
inc
or
jno
add
jp
jbe
or
add
add
add
xor
mov
jae
add
add
mov
js
ret
fbld
lahf
mov
fisubrl
add
cwtl
in
lcall
mov
insb
adc
gs
rolb
stos
mov
add
fnsave
mov
xor
rol
mov
inc
sbb
add
ljmp
ret
add
loope
add
add
iret
clc
push
add
add
cmp
rolb
add
add
adc
movsl
push
add
pop
mov
orl
mov
add
ds
call
not
pop
movsb
add
cmpsl
push
add
add
push
aas
int3
insb
sub
xor
ficomps
add
in
jecxz
add
dec
inc
in
inc
xor
pushf
push
xchg
mov
ficoml
xchg
add
or
and
mov
adc
sub
add
mov
inc
inc
xchg
add
adc
add
fcompl
jne
cli
add
sbb
int
add
out
cli
xor
pop
fiadds
add
ds
in
cwtl
leave
jg
add
adc
xchg
jg
mov
jno
dec
stos
push
add
cmpl
jne
arpl
or
iret
pop
cmp
mov
push
sub
ja
push
mov
rorl
cmp
inc
add
push
dec
adc
addr16
out
mov
add
add
add
lahf
dec
lret
add
add
jg
add
mov
add
sbb
stos
test
fwait
mov
pop
jecxz
sbb
add
add
fwait
in
les
aas
mov
jmp
dec
sub
cmp
add
mov
test
sbb
xor
mov
cmp
rolb
faddl
mov
cld
imul
mov
rolb
xor
add
insl
xchg
sti
inc
pushl
ljmp
negl
loop
repnz
adc
cmpsb
add
out
add
mov
stc
mov
add
mov
inc
add
in
or
stc
outsl
jns
add
in
jp
nop
add
add
and
mov
mov
and
imul
dec
sub
add
in
pop
or
sbb
in
xor
movb
cmp
xor
inc
add
push
mov
push
add
data16
mov
cld
cmp
repz
pop
aaa
loopne
cmc
jecxz
mov
add
lret
dec
mov
or
add
add
mov
das
xor
and
xchg
enter
pusha
add
test
mov
scas
xchg
cltd
push
stos
pop
pop
data16
xor
mov
xor
jno
add
mov
cmp
daa
push
add
imul
add
inc
add
add
call
mov
cmp
mov
dec
add
clc
add
mov
add
incl
add
cmp
jg
in
popf
stos
jg
add
add
mov
add
movsl
jbe
mov
imul
in
add
cmp
add
jno
add
add
push
add
add
popf
push
add
sti
or
push
add
out
mov
or
add
sbb
out
out
push
add
cli
or
pop
in
test
pusha
add
mov
mov
sub
adc
mov
ja
add
add
call
sbb
or
iret
mov
push
mov
out
fldcw
add
sbb
xchg
add
inc
add
add
aam
movsl
int
aam
leave
je
xchg
add
add
pop
cltd
hlt
add
ja
xchg
add
scas
loopne
aas
jo
inc
add
add
add
add
adc
mov
cltd
aaa
push
add
add
or
cmp
add
cmp
sbb
sub
rolb
inc
add
mov
popa
xchg
mov
add
fildl
xor
outsl
mov
in
xchg
fdivrs
into
cwtl
rolb
sbb
push
stc
xor
jno
fistl
add
add
add
add
add
add
je
xchg
add
add
je
lret
add
iret
sti
lahf
sarl
mov
out
push
mov
jne
add
xchg
popf
mov
add
xor
mov
nop
add
add
and
mov
mov
jne
sbb
add
lods
lahf
xlat
inc
add
add
fsubrl
pop
gs
stos
and
xor
adc
mov
lods
sbb
in
imul
adc
push
add
or
add
mov
pop
sbb
xchg
sub
loop
jmp
sub
xchg
or
jl
inc
add
jle
add
add
mov
add
add
adc
rolb
sahf
imul
js
add
sti
sub
clc
xor
cmp
cwtl
out
push
add
in
repz
add
fstps
xor
stos
sbb
rcll
add
add
add
add
jbe
movsl
shl
stc
inc
out
cmp
add
add
jns
add
mov
mov
or
mov
sbb
add
add
xchg
add
les
int
test
fs
pop
jb
sub
pop
dec
cld
lods
mov
cmp
mov
es
loopne
cmp
pop
lods
mov
pop
or
and
and
ret
rolb
pop
stc
les
lret
lahf
fisubs
add
add
add
add
test
adc
aaa
jb
xor
sbb
lods
test
dec
push
add
add
mov
sub
daa
addb
add
add
pop
mov
mov
add
add
xchg
xchg
sub
jmp
mov
add
repz
push
jnp
add
aam
sbb
sbb
filds
mov
add
loop
stos
sub
add
mov
pop
pop
das
xchg
adc
sbb
ret
push
fld1
jle
popa
int
cmp
rolb
jb
xor
add
mov
push
add
xchg
mov
lcall
add
lahf
and
hlt
add
inc
add
xlat
xor
lret
pop
popf
fdivrl
add
mov
add
or
mov
stos
loopne
sub
movb
dec
rorl
or
mov
push
or
fbld
sbb
imul
aas
sub
out
imul
movb
add
movb
add
jae
fdivrl
add
cwtl
call
fsubrl
jae
aad
and
adc
pop
push
addb
add
jl
jno
or
cs
icebp
and
add
add
ret
test
add
mov
add
add
add
pop
loopne
jecxz
popf
sbb
adc
push
add
nop
add
sub
mov
fimuls
outsl
push
add
add
push
add
pushf
out
cmc
push
push
daa
nop
add
adc
add
add
jb
pop
inc
add
and
add
imul
roll
push
cltd
mov
dec
mov
add
out
jg
or
mov
xchg
mov
sbb
mov
repnz
bound
mov
add
hlt
add
sbb
pop
sbb
dec
xor
jle
roll
mov
add
add
cmp
leave
test
add
clc
dec
cmp
adc
popa
mov
add
aaa
push
jecxz
push
sbb
jns
rorl
add
dec
jle
sbb
pop
push
add
lock
iret
jnp
cmp
shl
mov
add
add
popf
push
shl
add
mov
add
ljmp
or
xlat
push
cmpl
add
jne
xchg
add
add
mov
cli
mov
mov
add
add
mov
out
push
add
bound
mov
aam
or
add
fwait
imul
cs
push
ds
xor
add
popa
mov
sub
add
add
push
mov
popf
lret
mov
in
dec
or
aas
inc
add
mov
shll
pop
xchg
xchg
pop
and
mov
add
jns
xorl
arpl
push
cld
jg
add
sbb
push
movsb
add
out
jge
push
add
add
inc
test
jl
addb
popa
cwtl
jg
mov
add
inc
add
int
in
fdivrp
jnp
pop
dec
fcoml
add
dec
jge
push
je
aad
mov
push
add
cli
out
pop
xor
mov
adc
mov
or
scas
fstpt
popf
popf
jne
push
add
pop
pop
mov
cmc
aam
add
mov
imul
loopne
imul
jp
add
add
jp
jg
add
bound
mov
add
mov
mov
cmp
outsb
inc
add
js
cld
jl
xchg
add
add
pop
stos
inc
jne
dec
push
cmp
jmp
xchg
adc
clc
bsf
and
and
cld
mov
adc
xchg
add
add
add
aaa
push
xor
adc
ficoms
sbb
mov
fsubrp
mov
add
ss
in
or
rolb
popa
push
add
insl
xor
pop
mov
add
repz
add
add
add
add
dec
sub
jl
add
lock
add
data16
add
addb
lcall
add
ja
push
mov
or
loopne
push
add
ja
test
add
lds
add
jmp
jmp
andl
add
scas
int3
mov
paddb
ret
adc
ja
add
lahf
sub
loop
cmp
mov
inc
mov
lds
adc
enter
push
add
ja
lret
pop
adc
jno
popf
and
mov
les
sti
lret
ret
test
in
lahf
ret
add
add
jg
hlt
add
add
mov
xchg
add
mov
fwait
outsl
cs
pop
test
add
mov
rolb
cmp
dec
into
pop
inc
test
add
js
add
add
and
add
add
leave
inc
push
add
lret
add
dec
cmp
jb
jbe
jno
fdivp
stos
sbb
testb
daa
aam
aaa
ret
add
and
testb
add
add
dec
ret
or
stc
aad
mov
add
add
pusha
add
stc
fnstsw
out
in
test
and
add
xchg
or
add
inc
mov
add
or
add
mov
add
add
add
mov
mov
stc
cmp
add
add
sti
adc
add
add
mov
add
push
scas
out
cmp
or
les
addb
outsb
jns
repnz
dec
sub
or
jo
adc
flds
add
std
jge
add
add
enter
add
add
add
mov
add
add
mov
add
add
cmp
test
pop
rolb
lea
inc
add
add
mov
xor
lret
mov
int3
pop
movsl
jle
cmp
outsb
fcmovnb
add
push
add
lret
add
mov
inc
xor
add
mov
add
push
loopne
movb
add
mov
or
add
lock
adc
jle
mov
lods
jl
add
mov
adc
pop
dec
add
mov
add
jecxz
hlt
add
movsb
add
mov
fs
repz
add
xor
decl
mov
icebp
and
mov
sub
mov
add
lods
addb
add
and
mov
jp
pop
bound
mov
inc
push
in
rolb
test
lahf
pop
test
add
xchg
xchg
scas
daa
jle
add
add
cmp
ss
add
add
cmp
lea
jae
adc
lds
stos
notl
lea
add
add
add
nop
add
shrl
mov
add
push
add
imul
imul
or
movsb
add
and
js
inc
add
add
add
ja
add
add
sarl
add
mov
sbb
int
add
mov
inc
add
cmc
test
int3
xorl
add
push
sbbl
ljmp
sbb
mov
loope
mov
sti
cmp
add
mov
mov
aas
sbb
add
cwtl
add
and
roll
outsb
mov
lods
nop
add
sbb
mov
lcall
add
mov
fistpl
sbb
iret
mov
add
push
add
add
pop
cmp
mov
add
fistpl
or
add
jno
pop
stc
cmpsl
jmp
add
rolb
mov
add
cld
jle
dec
add
cwtl
rcrl
mov
movb
add
xor
rolb
add
cld
dec
or
mov
addb
add
xor
cmpsb
add
ret
cmp
add
orl
int3
outsl
mov
add
mov
add
mov
jno
jecxz
add
or
xor
mov
jg
or
aaa
pop
sbb
xchg
xchg
js
mov
loope
add
pushf
iret
xchg
add
js
xchg
sub
add
out
addl
push
add
stc
xchg
pop
cltd
inc
add
pop
das
mov
stc
ficoms
cmp
xor
vmovntdq
sub
add
or
add
add
jge
push
jp
add
add
add
add
stos
in
push
jae
mov
add
or
sub
insl
cmpsl
cmpsl
xchg
inc
add
pop
ja
xor
jmp
or
add
mov
or
mov
leave
jne
add
add
mov
lods
movsl
sbb
add
jl
cmp
test
xchg
add
roll
mov
and
mov
add
fldenv
add
mov
jmp
add
call
add
lea
data16
xor
jno
sub
adc
sbb
into
loopne
xchg
scas
push
rcr
jns
cli
mov
lahf
sbb
mov
inc
add
jecxz
dec
pop
and
mov
movsb
add
mov
add
outsl
push
add
movsl
jl
add
cld
dec
cmp
jecxz
movq
xchg
pop
popf
rolb
jo
jg
les
pop
xor
push
jmp
adc
sbb
pop
sbb
add
add
std
aas
mov
aam
dec
loop
jle
and
add
bound
mov
xchg
and
addl
ret
mov
pop
rolb
pushf
stos
jbe,pn
cwtl
mov
cmp
lock
push
add
jo
or
add
iret
sub
icebp
push
add
popf
fcmovne
push
add
sbb
add
mov
jno
cltd
les
or
add
add
or
add
add
stos
nop
add
scas
rolb
jp
push
mov
sbb
add
outsb
out
mov
add
add
pop
aas
sbb
jbe
add
add
add
test
jae
cmp
repnz
data16
pop
sbb
sub
int3
daa
leave
out
aas
push
cmpsl
jnp
mov
jp
adc
add
adc
add
add
sub
xchg
inc
outsb
call
add
add
es
mov
add
shl
lds
daa
imull
iret
addl
icebp
adc
repnz
cmpl
add
add
add
cmp
mov
push
dec
xchg
add
add
rorl
pop
sahf
and
mov
std
imul
add
add
add
add
xchg
add
movb
add
jo
mov
xchg
xchg
add
add
rolb
jmp
sbb
fsubl
sub
shll
add
pop
sbb
xor
popf
lcall
xchg
add
xchg
adc
fistps
add
cmc
jecxz
cmp
xor
insb
dec
or
or
add
adc
jg
mov
lea
mov
cltd
aam
jns
add
xor
push
push
sbb
fisubl
mov
or
xchg
add
xchg
inc
add
lret
jb
xchg
add
dec
dec
mov
sbb
jmp
xor
xor
sub
add
movb
xchg
add
rolb
pop
cmpsb
add
add
outsl
mov
xchg
rolb
inc
out
dec
dec
dec
add
add
add
add
cmpsl
out
xchg
iret
leave
pop
sbbl
lret
cltd
push
and
rolb
adc
dec
popa
rolb
xchg
add
sub
push
sbb
cmc
push
dec
jp
jge
in
inc
add
movsb
add
in
xlat
dec
xchg
test
add
add
push
add
sub
add
push
je
pop
rolb
loope
xor
xchg
add
gs
add
adc
sbb
add
add
mov
ja
dec
jmp
sbb
mov
cmp
insl
insb
xchg
add
mov
xchg
js
add
push
cs
add
addb
add
std
jg
call
out
cltd
sub
add
outsb
daa
pop
adc
sub
push
xchg
rorl
enter
add
add
push
add
les
add
add
push
add
add
dec
or
xchg
insl
les
aad
hlt
add
add
test
sbb
cmp
push
fstl
jge,pt
and
mov
dec
inc
xor
inc
push
add
dec
pusha
add
imul
push
add
mov
lret
cwtl
add
add
ret
add
inc
stos
ja
add
sub
fcomp
in
jnp
add
mov
testb
das
mov
cwtl
and
adc
push
inc
add
int3
into
add
mov
add
add
mov
ret
push
add
add
xchg
add
add
fisubrs
add
mov
and
add
and
push
clc
jge
add
add
out
scas
mov
out
rolb
dec
jne
loope
inc
inc
push
add
xchg
inc
bound
mov
push
add
je
adc
add
or
lahf
movb
or
add
add
outsb
popf
mov
cmp
add
push
add
jp
adc
inc
pop
fstl
add
cltd
cmp
js
add
ss
xor
push
add
xor
add
mov
push
xchg
add
add
add
loope
fildll
and
add
rolb
insl
xchg
cmpsb
add
jnp
jae
add
push
fwait
lock
hlt
add
add
lock
push
arpl
add
mov
scas
hlt
add
ja
das
das
push
or
cmp
shl
mov
out
jecxz
add
aaa
pop
mov
dec
movsl
or
add
or
jecxz
ret
into
insb
jo
sbb
add
add
add
sub
data16
or
add
or
shrl
jmp
cmpsl
das
stos
hlt
add
add
sub
or
or
and
mov
mov
popa
mov
xchg
add
sub
push
add
lea
add
add
or
ljmp
add
add
add
iret
dec
mov
add
mov
test
fisttpl
fstpt
mov
ficoml
mov
jno
ds
inc
add
add
add
dec
pop
popf
mov
push
add
into
je
sar
xchg
mov
stos
bound
mov
add
jmp
imul
lret
mov
add
add
mov
add
loopne
mov
je
xor
ja
nop
add
mov
push
data16
repnz
fs
dec
ret
sbb
sbb
pop
pop
out
push
mull
add
add
dec
dec
fcmovnb
movsb
add
inc
jmp
mull
scas
mov
repz
or
add
push
add
mov
push
sub
add
cmp
inc
test
into
mov
xchg
inc
cli
mov
jmp
xlat
push
add
cmp
xor
add
push
add
jmp
jecxz
fildl
add
addr16
add
dec
in
fnstcw
add
xor
cmp
add
or
xchg
add
add
mov
mov
pop
inc
add
mov
inc
outsl
test
jg
add
scas
rolb
jbe
fimuls
add
test
push
gs
jl
push
add
add
xchg
add
jo
push
add
lret
and
add
jns
push
add
das
jge
xchg
jle
add
ja
sbb
xchg
rolb
test
mov
out
imul
cld
repnz
xchg
add
sti
sahf
in
nop
add
sbb
push
cli
adc
mov
push
ror
daa
push
add
mov
pop
scas
fsubrs
cwtl
loop
jb
test
sub
push
add
mov
add
dec
xor
xchg
out
jns
test
jg
xchg
inc
add
dec
sbb
xchg
add
sub
add
and
testb
add
push
add
addb
add
add
leave
ljmp
dec
xor
jo
stc
jecxz
add
inc
add
addb
stc
xchg
dec
sub
or
cli
xchg
rcrl
add
sbb
lock
mov
out
lods
push
add
fldenv
add
add
jns
movb
das
mov
xor
add
rorl
in
jo
leave
xchg
gs
xchg
add
mov
jnp
jo
adc
stos
adc
sti
outsl
add
mov
cmpl
mov
imul
sbb
mov
add
jg
inc
iret
aaa
cmp
js
xor
das
push
call
jl
sbb
adc
add
mov
mov
aad
add
mov
scas
cld
fsubl
xchg
sbb
fstpl
and
mov
mov
pushf
test
in
mov
or
mov
test
adc
call
cmp
add
out
ljmp
and
mov
push
xchg
add
inc
add
dec
in
imul
and
mov
iret
ljmp
inc
pop
leave
scas
inc
xor
jl
xchg
imul
add
mov
add
add
add
add
in
add
pop
rolb
mov
mov
into
dec
or
add
das
stos
scas
xor
imul
add
xchg
add
lcall
jp
and
mov
addr16
lcall
imul
xchg
rolb
rolb
jb,pt
xchg
add
lcall
or
add
mov
dec
aaa
insb
out
push
repz
out
leave
mov
push
add
loopne
int
mov
and
shll
or
icebp
scas
xchg
add
pop
pop
push
add
or
repz
jmp
mov
insb
je
jbe
popf
mov
enter
arpl
dec
and
add
jge
inc
add
adc
imul
adc
cmp
add
insb
leave
insl
cltd
sub
add
mov
js
addr16
cmp
popa
das
lds
xor
mov
add
testl
add
mov
cmp
add
add
xchg
add
dec
in
sbb
add
push
jg
dec
jne
add
stos
jg
add
mov
push
xlat
sub
aaa
xor
mov
add
cmp
xchg
add
mov
add
add
loopne
dec
fbld
movsb
add
pop
jns
add
add
sbb
clc
pop
out
add
add
xchg
add
call
lret
xchg
add
fiaddl
loop
lods
jae
rcll
cld
adc
pop
mov
fimull
sub
add
or
mov
pusha
add
fsubrl
testl
push
std
mov
mov
outsb
pop
inc
add
sbb
add
lahf
pop
loop
push
mov
ja
add
and
add
popf
pop
mov
inc
mov
cmp
movsl
fimuls
addr16
add
js
add
add
add
push
xlat
out
mov
ja
sti
in
and
push
add
add
stc
jmp
loop,pt
aam
icebp
dec
popf
data16
into
mov
xlat
imul
imul
inc
add
mov
dec
in
les
pop
inc
add
add
sbb
push
cltd
out
inc
mov
add
clc
sbb
jae
aaa
je
pop
or
add
mov
add
mov
or
xchg
lret
pop
or
or
add
xchg
add
add
add
add
pop
adc
jge
loop
in
cmp
push
rolb
data16
push
add
pop
mov
scas
jnp
mov
rolb
sti
lahf
imul
iret
das
loopne
inc
add
add
mov
push
lret
add
add
or
dec
jl
jmp
test
add
dec
push
add
add
sub
add
dec
leave
push
stos
push
inc
jg
push
add
pop
sbb
rcll
aas
xchg
push
add
xor
sub
add
mov
fcompl
add
xor
jecxz
add
xchg
push
inc
add
repnz
jae
add
pusha
fwait
cld
nop
jmp
fwait
out
add
add
sub
cld
nop
jmp
fistl
insl
add
add
enter
jb
fwait
cld
nop
jmp
inc
sub
test
mov
xchg
ret
add
gs
add
add
dec
clc
repnz
jae
add
xchg
cmc
dec
xor
xchg
popf
mov
clc
repnz
jae
add
add
add
nop
jmp
add
sub
arpl
rorl
jae
xor
inc
pushf
or
push
mov
push
mov
xchg
ret
daa
add
fisttpl
lcall
out
inc
add
add
add
jp
loop
push
mov
xchg
ret
out
popl
insl
addb
addb
lret
outsl
sub
add
repnz
jae
xchg
imul
clc
repnz
jae
add
rclb
inc
xchg
or
movb
mov
xchg
ret
add
add
mov
fwait
cld
nop
jmp
arpl
add
cs
add
sbb
jmp
repnz
jae
add
jnp
add
and
mov
or
add
add
add
xchg
popf
daa
cltd
add
clc
repnz
jae
sub
push
popf
add
jnp
fwait
cld
nop
jmp
add
add
rorl
add
mov
clc
repnz
jae
add
daa
sub
add
nop
jae
arpl
add
out
add
clc
repnz
jae
add
clc
add
jmp
jp
fwait
cld
nop
jmp
insl
add
mov
add
push
mov
xchg
ret
rcl
add
pushl
push
mov
xchg
ret
arpl
test
add
xorl
add
add
xchg
fdivrl
clc
repnz
jae
daa
pushf
fwait
test
jns
clc
repnz
jae
add
out
xchg
jge
test
repnz
jae
jnp
add
out
add
adc
repnz
jae
xchg
pushf
mov
mov
fwait
cld
nop
jmp
add
push
xchg
add
and
clc
repnz
jae
add
xor
mov
xchg
ret
add
add
and
jnp
mov
clc
repnz
jae
mov
and
mov
inc
add
ja
inc
add
xor
jmp
lret
xchg
ret
fwait
test
fistpl
clc
repnz
jae
add
add
lock
repnz
jae
xchg
fwait
add
add
push
xchg
add
mov
clc
repnz
jae
cwtl
xor
shll
add
clc
repnz
jae
add
add
out
shll
lcall
sub
add
add
arpl
mov
push
mov
xchg
ret
xchg
add
scas
out
movsb
add
add
ja
mov
push
mov
xchg
ret
add
add
repnz
jae
add
rcrl
push
clc
repnz
jae
inc
cmc
add
cld
add
mov
popa
add
cld
nop
jmp
sar
add
popf
gs
jmp
test
sub
add
repnz
jae
scas
add
push
add
add
and
add
add
repz
ja
outsb
je
repnz
jae
out
inc
cwtl
jmp
sar
nop
jae
inc
add
mov
add
fsubl
popa
add
repnz
jae
add
dec
out
add
jae
add
cwtl
cwtl
sub
dec
and
add
sbb
mov
xchg
ret
cs
add
add
ret
sbb
sbbl
add
mov
fmull
test
push
add
fwait
cld
nop
jmp
cwtl
sub
daa
jle
mov
mov
cltd
add
pop
dec
add
fwait
cld
nop
jmp
imul
push
push
sub
nop
jae
add
and
add
cld
nop
jmp
add
or
add
add
clc
repnz
jae
add
sbb
insb
mov
clc
repnz
jae
mov
add
imul
add
add
xchg
orb
lea
fwait
cld
nop
jmp
mov
dec
xchg
add
add
test
repnz
jae
add
add
xlat
xor
mov
fwait
cld
nop
jmp
pushf
add
rolb
movzwl
mov
fwait
cld
nop
jmp
nopl
pushf
add
or
repnz
jae
addb
pop
or
add
popa
clc
repnz
jae
add
dec
add
lea
clc
push
mov
xchg
ret
add
add
scas
test
add
mov
push
mov
xchg
ret
cld
add
push
add
xor
add
fwait
cld
nop
jmp
je
bound
mov
nop
jae
add
pushf
add
add
incl
nop
jae
xor
add
mov
ret
add
arpl
inc
add
add
clc
push
jo
movsl
bound
mov
mov
clc
repnz
jae
clc
add
add
cmp
repnz
jae
add
add
cwtl
rolb
stos
add
clc
repnz
jae
add
rorl
testb
add
jae
arpl
add
mov
or
add
repnz
jae
cwtl
cs
add
push
add
add
clc
repnz
jae
add
add
gs
lea
push
mov
xchg
ret
repnz
fwait
add
add
jmp
add
jnp
out
dec
add
add
cmp
xor
add
clc
repnz
jae
add
imull
push
mov
xchg
ret
add
add
sbb
clc
repnz
jae
inc
sub
insl
add
push
mov
xchg
ret
add
add
out
inc
addb
push
clc
repnz
jae
cwtl
add
add
sub
pop
lcall
add
inc
mov
add
cmp
cld
nop
jmp
push
add
dec
xchg
push
cld
add
add
jl
clc
repnz
jae
sldt
add
xchg
fistpl
sar
nop
jae
add
arpl
add
mov
push
add
clc
repnz
jae
dec
scas
add
add
sar
repnz
jae
pushf
inc
xchg
add
add
mov
fisttpll
jae
add
rolb
add
repnz
jae
insl
cwtl
add
pushf
pushf
stc
push
clc
repnz
jae
negb
gs
nop
jmp
push
ret
rcrb
je
add
clc
repnz
jae
add
inc
mov
test
adc
add
repnz
jae
rolb
bound
mov
mov
test
add
add
pushl
add
cmp
cld
nop
jmp
add
ljmp
roll
imul
add
add
pop
loopne
add
cld
add
add
clc
repnz
jae
cld
cwtl
mov
roll
fisttpl
nop
jae
sbb
add
add
mov
lea
clc
repnz
jae
add
add
push
add
mov
clc
repnz
jae
add
mov
add
adc
ja,pt
fwait
cld
nop
jmp
push
add
jge
clc
repnz
jae
push
insl
sarb
cmp
repnz
jae
ret
xchg
popf
add
dec
cmp
repnz
jae
push
ret
mov
add
loop
fwait
cld
nop
jmp
add
add
lods
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
add
mov
jne
clc
repnz
jae
or
mov
mov
clc
repnz
jae
add
fimuls
nop
jae
add
add
add
pop
pop
clc
repnz
jae
roll
xor
mov
fisttpll
inc
movl
push
push
add
test
clc
repnz
jae
inc
out
add
adc
repnz
jae
add
add
cmpsl
or
clc
repnz
jae
add
xchg
or
rcr
add
cs
je
das
mov
clc
repnz
jae
add
add
add
out
fwait
decl
clc
repnz
jae
mov
mov
lods
movzwl
clc
repnz
jae
add
add
clc
repnz
jae
out
add
add
add
nop
jae
imul
ret
movntq
clc
repnz
jae
daa
add
add
push
add
repnz
jae
add
out
add
addb
add
lock
mov
clc
repnz
jae
add
add
mov
push
mov
xchg
ret
push
fildl
sub
add
fwait
cld
nop
jmp
je
add
xchg
inc
lret
add
clc
repnz
jae
daa
out
add
add
clc
repnz
jae
cld
add
sbb
rorl
inc
add
add
ret
sbb
inc
and
cld
nop
jmp
movnti
pushf
add
add
add
nop
jae
inc
add
add
add
add
dec
push
clc
repnz
jae
arpl
inc
add
add
mov
clc
repnz
jae
add
movsl
pop
mov
fwait
cld
nop
jmp
fwait
jnp
xor
and
xchg
js
popl
clc
repnz
jae
push
add
mov
pop
popa
fwait
cld
nop
jmp
popl
add
mov
je
clc
repnz
jae
and
add
movswl
clc
repnz
jae
popl
popf
add
or
repnz
jae
xor
add
imul
fwait
cld
nop
jmp
add
out
add
add
test
cmc
xor
div
fwait
cld
nop
jmp
cwtl
add
add
cmc
xor
add
loope
add
clc
repnz
jae
mov
inc
mov
fwait
cld
nop
jmp
add
inc
pushf
mov
push
mov
xchg
ret
out
addb
mov
fsubrp
mov
add
clc
repnz
jae
add
add
pop
push
mov
xchg
ret
mulb
rorl
mov
dec
add
repnz
jae
rolb
cld
insl
add
add
clc
repnz
jae
and
add
add
push
push
mov
xchg
ret
repnz
sbb
push
clc
repnz
jae
arpl
inc
fld
clc
repnz
jae
push
push
add
je
xor
nop
jmp
shrb
test
add
add
push
mov
xchg
ret
add
add
add
je
clc
repnz
jae
add
add
add
rcrb
cli
incl
add
sbb
movsb
flds
xchg
ret
add
arpl
add
xchg
cmp
cld
nop
jmp
jnp
add
add
imul
push
add
fildl
push
faddl
jo
fwait
cld
nop
jmp
add
add
add
pop
xor
test
add
clc
repnz
jae
add
rorb
add
add
repnz
jae
fildl
dec
add
add
push
mov
xchg
ret
pushf
add
xchg
mov
negl
and
add
add
repz
cld
nop
jmp
add
xor
add
rorb
jae
push
add
add
rolb
xor
push
mov
xchg
ret
add
jnp
add
sbb
push
mov
xchg
ret
xchg
add
popf
out
dec
and
mov
nop
jmp
popf
add
add
add
add
and
mov
and
push
mov
xchg
ret
mov
mov
nop
jae
add
std
call
clc
repnz
jae
add
dec
cmp
repnz
jae
add
rcl
clc
pushl
push
mov
xchg
ret
add
or
scas
ficoml
repnz
jae
add
add
pop
lea
clc
repnz
jae
cld
add
cld
mov
scas
mov
push
mov
xchg
ret
inc
add
xor
cmpsb
add
sbb
repnz
jae
mov
repnz
repnz
jae
add
shll
add
dec
lds
jmp
clc
repnz
jae
add
add
add
repnz
jae
add
add
in
jne
clc
repnz
jae
scas
cs
stos
movzwl
clc
repnz
jae
xchg
add
add
add
clc
repnz
jae
jnp
add
add
or
sar
repnz
jae
out
fldt
mov
out
add
repnz
jae
mov
pushf
addb
push
dec
mov
clc
repnz
jae
clc
add
icebp
pop
add
clc
repnz
jae
add
add
add
add
movsb
add
add
add
test
push
mov
xchg
ret
daa
imul
clc
repnz
jae
inc
xor
add
add
fwait
cld
nop
jmp
inc
add
add
add
push
mov
xchg
ret
add
popl
add
inc
add
fwait
cld
nop
jmp
add
ret
add
xchg
add
jnp
ljmp
out
add
out
add
adc
out
mov
clc
repnz
jae
inc
add
and
mov
mov
ret
inc
stc
push
clc
repnz
jae
add
add
pop
inc
add
pop
xor
push
mov
xchg
ret
add
add
pop
mov
push
mov
xchg
ret
imul
je
clc
repnz
jae
mov
sbb
or
repnz
jae
testb
roll
inc
add
movb
add
clc
repnz
jae
out
clc
xlat
fistl
mov
xchg
ret
push
push
add
shlb
fwait
ret
clc
repnz
jae
ret
dec
add
xor
pushf
add
jecxz
push
clc
repnz
jae
add
out
cs
je
push
add
add
add
movsl
add
int3
setg
repnz
jae
pushf
sbb
inc
add
mov
lea
fwait
cld
nop
jmp
addb
add
test
call
add
add
add
dec
clc
dec
inc
clc
repnz
jae
add
add
mov
clc
repnz
jae
fwait
add
jnp
popl
add
repnz
jae
mov
rolb
inc
xor
add
repnz
jae
add
incl
jge
fwait
cld
nop
jmp
add
add
push
add
cmp
dec
adc
dec
cwtl
add
arpl
add
push
add
loopne
xchg
pusha
add
add
add
clc
repnz
jae
add
ds
fwait
cld
nop
jmp
popf
add
imul
add
add
add
clc
repnz
jae
addb
add
jle
clc
repnz
jae
dec
add
je
add
add
xor
push
mov
xchg
ret
add
cs
shll
add
clc
repnz
jae
add
add
mov
fwait
scas
inc
dec
rol
clc
repnz
jae
out
dec
jnp
add
cmpl
addl
add
add
jae
add
add
add
and
cmp
in
add
add
scas
fwait
dec
cmc
xchg
ja
mov
clc
repnz
jae
sbb
add
dec
add
clc
repnz
jae
fildl
add
add
clc
repnz
jae
mov
add
clc
repnz
jae
pushf
arpl
add
repnz
jae
repnz
add
enter
in
ljmp
je
scas
negb
or
outsl
arpl
add
lock
incl
add
dec
imul
jno
clc
repnz
jae
add
rcrb
add
add
repnz
jae
add
add
sub
clc
repnz
jae
add
push
outsb
add
push
mov
xchg
ret
add
arpl
sarl
popa
add
mov
xchg
ret
add
add
add
stos
out
add
xor
inc
add
gs
xchg
mov
pop
push
mov
xchg
ret
add
push
mov
add
clc
repnz
jae
ret
push
imul
sbb
add
repnz
jae
scas
add
lcall
jae
rcr
add
and
add
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
add
cs
push
mov
xchg
ret
add
add
dec
add
mov
clc
repnz
jae
add
repnz
mov
clc
repnz
jae
repnz
push
mov
xchg
ret
add
add
add
repnz
jae
add
out
or
push
fwait
cld
nop
jmp
jnp
inc
dec
add
sub
je
loope
stos
push
mov
xchg
ret
add
add
dec
inc
or
repnz
jae
add
add
inc
inc
insl
sub
xabort
nop
jae
add
xor
test
push
sub
sbb
add
add
mov
clc
repnz
jae
add
add
jmp
add
xchg
dec
out
popf
testl
cmp
call
and
dec
cs
add
repnz
jae
add
add
sub
mov
xchg
ret
ret
insl
add
cmovg
jno
mov
fwait
cld
nop
jmp
add
out
push
daa
push
add
add
outsl
or
add
add
add
add
repnz
jae
scas
cs
pushf
add
rolb
ret
mov
clc
repnz
jae
add
xor
add
fldt
clc
repnz
jae
add
arpl
add
popf
cmpl
fwait
cld
nop
jmp
cmc
add
fiaddl
mov
xchg
ret
add
dec
push
scas
push
jnp
add
clc
repnz
jae
add
fwait
arpl
fsubs
repnz
jae
add
inc
pop
cli
add
clc
repnz
jae
add
xchg
scas
imul
nop
jae
add
add
add
add
dec
fwait
cld
nop
jmp
xchg
push
pushf
add
and
pushf
rolb
pop
add
push
mov
xchg
ret
add
add
add
pusha
clc
repnz
jae
add
arpl
add
repz
xor
push
mov
xchg
ret
add
mov
add
addb
test
push
mov
xchg
ret
push
add
add
add
add
push
mov
xchg
ret
add
arpl
cmc
ficoms
repnz
jae
add
cwtl
add
xor
in
shl
clc
repnz
jae
dec
add
jnp
pop
clc
repnz
jae
rcl
add
add
push
push
mov
xchg
ret
add
inc
sbb
push
mov
xchg
ret
mov
xor
and
addr16
movzwl
clc
repnz
jae
pushf
xchg
pushf
add
mov
push
adc
add
add
add
ret
fwait
add
call
nop
jae
out
mov
add
add
sti
lcall
dec
push
clc
repnz
jae
add
add
push
sbb
mov
adc
cld
nop
jmp
add
add
add
add
repnz
jae
add
cmc
insl
or
data16
push
mov
xchg
ret
repnz
cs
je
rolb
test
repnz
jae
xchg
inc
add
inc
add
add
mov
stos
clc
repnz
jae
fwait
dec
add
scas
add
mov
cmp
mov
xchg
ret
add
arpl
es
add
mov
clc
repnz
jae
inc
inc
clc
subl
push
mov
xchg
ret
daa
push
and
dec
add
clc
repnz
jae
inc
test
add
clc
repnz
jae
add
mov
repnz
jae
dec
add
xchg
add
or
nop
jae
or
mov
int3
dec
fwait
cld
nop
jmp
roll
add
insl
imull
cmp
push
mov
xchg
ret
add
add
cmp
or
inc
add
pushf
repnz
sub
repnz
jae
add
add
repnz
jae
push
mov
shlb
add
lods
add
push
mov
xchg
ret
testb
push
add
jle
add
idiv
lcall
inc
ret
je
mov
jae
setl
add
scas
add
and
nop
jae
setl
fwait
add
test
bound
mov
mov
jmp
add
incb
add
test
stos
mov
nop
jmp
repnz
add
add
imul
jae
add
inc
push
daa
mov
clc
repnz
jae
out
je
and
add
add
clc
repnz
jae
inc
mov
cs
add
incl
fwait
cld
nop
jmp
xchg
push
insl
jnp
repz
mov
clc
repnz
jae
add
add
xor
clc
repnz
jae
add
and
mov
repnz
jae
cwtl
insl
add
sub
fwait
add
add
repnz
jae
add
rclb
loopne
add
add
add
rclb
sub
repnz
jae
cmc
and
test
add
popa
add
cld
nop
jmp
add
add
push
inc
add
imul
clc
repnz
jae
add
insl
js
xchg
hlt
lcall
or
add
push
add
lret
clc
repnz
jae
add
xorb
add
pop
cmp
mov
xchg
ret
daa
add
call
clc
repnz
jae
add
add
dec
push
clc
repnz
jae
add
pop
arpl
sub
imul
mov
xchg
ret
scas
add
add
add
dec
cmp
repnz
jae
mov
add
test
call
nop
jae
ret
add
clc
mov
clc
repnz
jae
add
mov
add
add
repnz
jae
out
push
add
enter
jae
add
daa
gs
add
pusha
clc
repnz
jae
scas
inc
add
mov
cmp
test
push
add
fwait
cld
nop
jmp
or
add
clc
repnz
jae
je
insl
daa
dec
popa
jae
sbb
in
das
loopne
and
addl
sbb
add
movsb
push
mov
xchg
ret
je
add
add
loope
add
push
add
add
add
repnz
jae
out
dec
add
xchg
mov
xchg
ret
out
arpl
add
add
ret
clc
repnz
jae
out
add
repnz
je
sub
push
mov
xchg
ret
add
add
lcall
jae
add
add
je
inc
push
pop
pop
clc
repnz
jae
add
daa
out
add
jecxz
jmp
add
pushf
add
add
rcrl
cwtl
js
xor
repnz
jae
add
add
add
test
add
nop
jae
add
dec
sbb
jg
clc
repnz
jae
dec
scas
cs
add
jno
add
clc
repnz
jae
push
add
cs
dec
add
pop
push
mov
xchg
ret
push
add
add
add
je
fwait
cld
nop
jmp
insl
add
clc
repnz
jae
add
add
add
repnz
jae
scas
push
add
mov
mov
mov
mov
call
xchg
add
inc
or
mov
xchg
ret
add
add
bound
mov
in
clc
repnz
jae
inc
test
push
pop
pop
fwait
cld
nop
jmp
add
je
add
add
dec
push
clc
repnz
jae
add
add
xchg
add
movb
or
push
mov
xchg
ret
and
add
decl
add
repnz
daa
insl
push
sub
add
rep
clc
repnz
jae
and
dec
or
repnz
jae
add
scas
push
loope
add
mov
push
mov
xchg
ret
repnz
mov
cmp
fwait
cld
nop
jmp
push
dec
or
repnz
pop
out
mov
clc
repnz
jae
xadd
clc
repnz
jae
add
cwtl
push
add
lea
clc
repnz
jae
arpl
and
add
shr
clc
repnz
jae
add
cwtl
dec
add
int
cmp
fwait
cld
nop
jmp
xchg
add
cmc
fistpl
clc
repnz
jae
cwtl
add
out
add
fiaddl
nop
jmp
mov
out
pop
movzwl
fwait
cld
nop
jmp
add
inc
add
ret
push
clc
repnz
jae
pushf
je,pn
inc
add
daa
cmc
fucomp
sub
lcall
ret
imul
xchg
adc
scas
cmpw
fwait
cld
nop
jmp
add
xchg
add
std
and
clc
repnz
jae
cmc
arpl
mov
clc
repnz
jae
scas
sub
mov
mov
or
clc
repnz
jae
inc
cs
add
dec
add
mov
xchg
ret
add
movsl
clc
repnz
jae
add
pop
add
add
push
mov
xchg
ret
add
fwait
scas
sub
repnz
jae
add
bnd
dec
clc
add
jge
movb
nop
jae
add
out
and
mov
stos
fwait
cld
nop
jmp
mov
add
add
ret
lock
repnz
jae
add
or
clc
repnz
jae
add
dec
and
enter
jae
xor
gs
add
sbb
pop
add
popl
arpl
add
inc
cwtl
cld
testb
add
add
clc
repnz
jae
push
add
repnz
push
popa
ds
push
mov
xchg
ret
popf
add
cwtl
add
mov
fwait
cld
nop
jmp
add
add
cmp
nop
jae
mov
inc
mov
mov
clc
repnz
jae
add
jnp
xchg
add
jg
repz
repnz
jae
scas
add
pusha
add
jmp
jae
add
add
add
add
mov
repnz
jae
add
dec
mov
fwait
cld
nop
jmp
add
add
push
add
and
ss
fwait
cld
nop
jmp
or
xor
push
add
imul
fwait
cld
nop
jmp
inc
add
je
popl
xchg
add
test
push
mov
xchg
ret
add
rolb
cwtl
or
cli
clc
repnz
jae
add
xor
add
enter
push
mov
xchg
ret
add
xchg
insl
stc
add
clc
repnz
jae
mov
negb
add
test
add
clc
repnz
jae
add
daa
push
add
mov
clc
repnz
jae
add
sbb
nop
jmp
cmc
popl
or
ret
gs
xor
push
mov
xchg
ret
inc
arpl
xchg
cld
ret
stos
mov
clc
repnz
jae
add
dec
add
add
mov
clc
repnz
jae
add
add
pop
push
mov
xchg
ret
cs
add
add
jb
clc
repnz
jae
add
inc
arpl
jmp
add
add
add
cwtl
add
add
repnz
jae
popf
add
cwtl
arpl
je
push
mov
add
incl
add
jecxz
mov
cltd
sub
add
aam
add
clc
repnz
jae
add
push
add
cs
shr
clc
repnz
jae
xchg
add
gs
sub
clc
repnz
jae
out
add
add
push
cmp
nop
jae
repnz
add
cld
nop
jmp
scas
je
scas
popf
add
add
dec
xor
clc
repnz
jae
add
add
cmpl
fwait
cld
nop
jmp
add
xchg
inc
add
popf
push
clc
repnz
jae
insl
mov
cmp
jae
repnz
jae
imul
pushl
clc
repnz
jae
pop
add
add
push
in
clc
repnz
jae
scas
sub
test
mov
clc
repnz
jae
popf
add
pop
push
mov
xchg
ret
daa
add
clc
dec
pushf
sub
clc
repnz
jae
mov
ret
and
mov
andl
jae
xor
clc
repnz
jae
add
dec
sub
mov
sub
aam
inc
add
push
inc
add
add
repnz
jae
out
rolb
add
mov
clc
repnz
jae
add
and
fcmovnb
add
pop
clc
repnz
jae
add
or
mov
add
imul
jae
pop
add
add
gs
push
clc
repnz
jae
mov
add
dec
mov
clc
repnz
jae
add
arpl
add
in
mov
clc
repnz
jae
push
arpl
push
add
int3
pop
clc
repnz
jae
xchg
mov
out
dec
add
iret
push
push
mov
xchg
ret
out
pushf
imul
test
fwait
cld
nop
jmp
str
add
add
mov
movsb
clc
repnz
jae
add
add
add
nop
jae
add
shl
out
add
clc
repnz
jae
roll
out
mov
test
add
mov
clc
repnz
jae
pushf
repnz
popf
arpl
mov
push
mov
xchg
ret
push
add
add
and
clc
repnz
jae
out
sbb
add
push
mov
xchg
ret
add
imul
push
mov
add
sub
push
dec
add
sub
aad
sbb
pop
push
mov
xchg
ret
add
add
popa
and
mov
add
or
fwait
cld
nop
jmp
add
cwtl
or
add
decb
jae
gs
cwtl
add
push
add
mov
adc
clc
repnz
jae
xchg
ret
xchg
add
push
fwait
cld
nop
jmp
rolb
add
scas
add
add
mov
fwait
cld
nop
jmp
add
jnp
add
pushf
add
push
push
mov
xchg
ret
pop
add
out
and
mov
repz
mov
xchg
ret
add
mov
ret
push
mov
xchg
ret
push
sbb
cmp
jmp
push
fwait
test
add
xor
addl
push
out
clc
repnz
jae
add
mov
add
repnz
jae
cmc
add
add
mov
clc
repnz
jae
je
inc
add
or
je
clc
repnz
jae
add
sbb
clc
repnz
jae
insl
add
add
pushf
mov
push
mov
xchg
ret
add
mov
repnz
pop
jae
cld
nop
jmp
xchg
popl
jno
add
fwait
cld
nop
jmp
repnz
add
add
sub
nop
jmp
add
add
insl
mov
je
jo
int
movsb
clc
repnz
jae
scas
and
mov
clc
repnz
jae
add
add
add
cwtl
add
jne
clc
repnz
jae
add
push
mov
xchg
ret
xor
mov
dec
rcrb
jmp
fwait
dec
add
dec
mov
fwait
cld
nop
jmp
add
add
ds
clc
repnz
jae
scas
cwtl
add
jnp
jle
inc
xor
clc
repnz
jae
add
add
xchg
lods
mov
clc
repnz
jae
add
add
je
push
cwtl
mov
fwait
cld
nop
jmp
push
xor
daa
push
xchg
clc
repnz
jae
add
add
popf
rolb
hlt
add
test
out
sbb
andl
jmp
add
mov
nop
jmp
scas
add
pop
add
xchg
add
add
movzwl
fwait
cld
nop
jmp
mov
xchg
add
and
push
mov
xchg
ret
add
orb
or
repnz
jae
add
daa
add
cld
nop
jmp
cs
add
push
push
add
mov
push
clc
repnz
jae
rolb
and
testb
pop
clc
repnz
jae
add
roll
add
pushf
mov
jge
clc
repnz
jae
add
add
clc
repnz
jae
add
out
scas
in
cltd
pop
clc
repnz
jae
add
inc
add
movsl
lahf
les
clc
repnz
jae
add
add
mov
nop
jmp
xchg
add
out
pushf
cwtl
pushf
add
xchg
add
push
clc
repnz
jae
rolb
add
inc
add
imul
in
lcall
add
out
push
gs
mov
xor
add
clc
repnz
jae
cmp
movsb
add
out
add
clc
repnz
jae
inc
add
add
popa
in
inc
pop
call
clc
repnz
jae
add
out
dec
push
push
mov
xchg
ret
repnz
out
add
xlat
xchg
les
dec
mov
push
mov
xchg
ret
mov
add
pop
pop
xchg
repnz
jae
mov
add
xchg
imul
add
mov
mov
jne
add
clc
repnz
jae
out
cld
add
fstpt
loop
fwait
cld
nop
jmp
add
add
add
fwait
cld
nop
jmp
or
cld
add
sub
nop
jae
or
fildl
inc
cwtl
adc
lcall
subl
lcall
shlb
lcall
out
incl
fwait
add
movsl
lods
push
clc
repnz
jae
dec
add
add
cwtl
jnp
add
fwait
cld
nop
jmp
repnz
add
dec
add
test
add
clc
repnz
jae
add
outsb
push
clc
repnz
jae
gs
sbb
add
cmp
repnz
jae
add
out
inc
add
clc
repnz
jae
rol
or
add
push
mov
xchg
ret
cwtl
pushf
inc
xchg
inc
add
push
mov
xchg
ret
gs
insl
iret
push
push
mov
xchg
ret
add
xchg
add
add
ljmp
jae
cs
add
push
clc
repnz
jae
subb
add
or
in
add
add
cltd
mov
pop
add
aad
jmp
mov
cld
nop
jmp
add
add
or
fildl
xchg
ret
push
push
cs
push
push
mov
xchg
ret
add
sbb
and
mov
and
add
leave
fwait
cld
nop
jmp
add
add
xlat
aas
mov
clc
repnz
jae
mov
and
add
jp
lods
and
imul
nop
jae
add
insl
inc
ss
add
and
mov
clc
repnz
jae
insl
gs
add
jbe
clc
repnz
jae
cmc
clc
mov
enter
jae
add
scas
roll
mov
add
sub
cmc
jecxz
lcall
xlat
call
sub
add
lock
add
push
xor
add
add
xor
clc
repnz
jae
out
add
mov
lcall
idiv
ljmp
insl
dec
out
and
push
mov
xchg
ret
add
add
add
out
out
clc
clc
repnz
jae
add
out
add
mov
xchg
ret
add
add
movd
clc
repnz
jae
add
add
add
add
mov
mov
jge
jbe
add
and
add
mov
xchg
ret
ret
sbb
add
fwait
cld
nop
jmp
insl
push
add
arpl
and
push
mov
xchg
ret
psubb
add
repz
jae
add
cld
xor
mov
clc
repnz
jae
add
add
nop
jae
arpl
add
add
inc
xchg
add
pop
call
and
cwtl
arpl
add
add
and
jbe
inc
add
cs
inc
and
add
mov
clc
repnz
jae
push
add
mov
add
mov
fwait
cld
nop
jmp
add
add
add
push
es
inc
push
mov
xchg
ret
add
add
arpl
sub
clc
repnz
jae
and
add
mov
push
mov
xchg
ret
inc
inc
xchg
add
dec
and
mov
fwait
cld
nop
jmp
out
int
mov
fwait
cld
nop
jmp
inc
shrb
add
inc
clc
repnz
jae
add
add
add
add
add
repnz
jae
fwait
add
add
add
clc
repnz
jae
mov
scas
xchg
dec
mov
clc
repnz
jae
add
add
arpl
insb
insb
clc
repnz
jae
add
mov
mov
push
mov
xchg
ret
add
add
popa
add
mov
xchg
ret
add
pop
jne
fwait
cld
nop
jmp
insl
add
cld
nop
jmp
inc
add
cld
push
add
call
clc
repnz
jae
add
addb
mov
push
mov
xchg
ret
repnz
xor
insb
lea
push
mov
xchg
ret
rolb
add
clc
repnz
jae
and
fwait
add
lea
nop
jmp
and
add
add
add
std
add
icebp
xor
scas
add
out
sbb
jg
clc
repnz
jae
add
pop
add
je
push
mov
add
push
or
loop
fildl
add
je
in
mov
clc
repnz
jae
cld
or
xor
clc
repnz
jae
push
out
add
add
xchg
add
push
clc
repnz
jae
add
pop
add
and
repnz
jae
add
push
add
jne
clc
repnz
jae
add
add
jmp
add
test
add
scas
add
repnz
jae
add
testb
xor
mov
add
add
cmpsb
mov
push
add
mov
sbb
nop
jmp
xchg
test
inc
test
out
mov
push
mov
xchg
ret
add
add
clc
repnz
jae
and
test
arpl
add
nop
jae
or
insl
add
dec
mov
fwait
cld
nop
jmp
popf
daa
inc
add
pop
add
push
mov
push
fwait
cld
nop
jmp
add
out
add
jle
add
add
xorl
incl
inc
add
js
push
mov
xchg
ret
repnz
add
clc
out
mov
clc
repnz
jae
repnz
mov
clc
repnz
jae
out
add
pop
inc
clc
repnz
jae
add
gs
add
mov
nop
jae
add
xchg
add
cmp
dec
sub
sub
inc
add
add
lret
clc
repnz
jae
sbb
dec
add
clc
repnz
jae
add
push
mov
add
fiaddl
adc
add
cli
cmp
mov
stos
out
mov
jl
in
add
push
sub
and
mov
add
jl
fisubl
mov
add
cmp
cld
xor
leave
jae
add
pusha
add
paddw
jge
cmpsb
add
add
add
mov
mov
inc
add
sbb
add
lods
pop
repz
mov
sbb
mov
out
sub
mov
dec
int
mov
mov
fstps
mov
inc
mov
test
add
add
mov
fcompl
add
add
addb
add
mov
ja
data16
xor
aaa
xchg
cmp
inc
add
add
aaa
cmp
fisttpl
mov
add
jno
add
ficompl
jp
adc
mov
mov
mov
adc
mov
lcall
ret
push
dec
mov
mov
int3
pop
addb
fimull
clc
test
add
fisubrs
add
add
pop
mov
add
inc
mov
inc
add
pop
jl
fisttps
add
dec
and
mov
imul
xlat
push
add
daa
pop
cmp
sbb
rol
in
pusha
add
add
mov
inc
repnz
lahf
jge
mov
push
mov
mov
lahf
mov
push
add
loop
std
cwtl
jnp
add
in
mov
std
adc
add
test
jl
out
jl
inc
or
inc
add
test
inc
add
aad
js
decb
stos
insb
jmp
sbb
add
add
mov
adc
xchg
add
push
sub
mov
psrlq
lds
add
jp
sub
push
dec
repnz
add
mov
add
add
int3
inc
add
dec
push
sub
add
enter
mov
add
sub
in
sbb
push
add
nop
add
js
jo
cli
pop
pop
in
jmp
cld
mov
and
mov
push
mov
and
add
cld
pop
push
xor
addb
ret
add
mov
or
add
inc
add
in
addb
insl
faddp
push
add
inc
push
add
daa
and
out
add
push
jge
in
leave
and
mov
push
add
in
imul
xlat
cwtl
pop
int3
ja
add
in
push
add
add
movb
std
or
and
sbb
add
aad
gs
repnz
incl
dec
mov
add
add
pop
cld
xor
gs
fidivrs
rolb
inc
add
stos
sti
rcll
addb
cwtl
push
add
jbe
push
add
ljmp
add
aam
xor
push
add
adc
fwait
sub
add
cmp
add
call
addb
cmp
add
mov
add
jo
jae
repnz
js
add
add
add
popf
icebp
dec
lods
add
mov
stos
hlt
add
rcr
cli
or
add
pop
iret
or
fstpl
add
add
add
add
add
mov
and
inc
popa
xchg
add
add
cmp
lahf
rcll
mov
add
std
pop
int
add
add
xlat
pop
and
daa
jge
ret
shll
data16
data16
jecxz
add
xchg
in
addb
mov
rdmsr
add
bswap
lock
lods
int
loope
add
movsl
dec
pop
fcomps
aam
pop
int
xor
nop
add
stos
add
mov
std
xor
push
push
xor
shl
mov
lds
add
and
out
cmc
lds
dec
push
sbb
add
das
mov
or
lods
adc
add
mov
and
jb
or
lea
sahf
fmul
cltd
add
cld
popf
mov
sub
rolb
outsl
and
and
add
std
push
leave
jbe
aam
sub
add
insb
popf
dec
icebp
les
loop
mov
add
mov
iret
dec
add
dec
pop
mov
add
mov
jns
add
ds
add
add
mov
cmp
popa
dec
xchg
rcll
pop
jl
add
outsl
sti
adc
lcall
ja
inc
add
pusha
add
cwtl
or
sbb
mov
lret
out
divl
add
xlat
or
pop
aad
sbb
fld
int
add
shrl
out
jg
lds
add
add
addb
in
sub
in
in
push
add
sbb
mov
js
pop
or
add
add
add
push
inc
pop
pop
sub
sub
test
sbb
movsb
add
add
cwtl
gs
mov
pop
pop
mov
add
add
jae
roll
mov
lret
sub
adc
mov
add
add
add
movb
mov
add
mov
dec
xchg
std
jge
mov
add
cmpsl
mov
out
rorl
mov
mov
sub
jecxz
lock
jl
add
add
push
add
stos
sbb
dec
mov
dec
sbb
loop
shll
xlat
sbb
mov
mov
cmpsl
fcmovbe
inc
add
mov
xchg
xchg
addb
add
jno
add
adc
add
out
mov
das
add
cmp
inc
add
rolb
or
sbb
mov
or
jp
pop
or
dec
insb
loop
outsb
pushf
aaa
jl
dec
inc
add
inc
call
mov
mov
shll
add
out
icebp
cs
mov
sbb
stos
decb
aad
gs
outsb
dec
jmp
mov
add
int
xor
sbb
cs
xor
xchg
mov
cmp
mov
int3
or
add
popa
mov
add
mov
mov
mov
jnp
push
add
xor
jb
scas
dec
sub
adc
mov
add
lods
out
inc
add
sub
sub
mov
add
adc
inc
add
mov
add
imul
addb
sahf
mov
mov
sub
add
daa
cmp
xor
mov
mov
cltd
fwait
js
add
pop
leave
pop
ja
addb
testb
add
dec
int3
sbb
add
test
out
in
cltd
das
sub
popa
movb
mov
dec
ds
add
mov
push
sbb
add
in
fucomp
movb
rolb
add
add
pop
adc
aad
inc
mov
cmpl
mov
push
add
add
stc
inc
filds
inc
add
mov
add
repz
cmp
inc
add
add
rolb
into
in
dec
cwtl
int3
jns
jmp
pop
test
enter
add
je
in
loope
pushf
mov
int3
push
jo
cld
inc
add
iret
aaa
add
mov
mov
jmp
sbb
mov
cmpsl
ret
mov
not
sub
ret
or
add
pop
push
mov
add
out
in
add
rcrl
jge
stos
or
stos
fwait
mov
mov
int
add
add
pop
add
and
mov
out
and
outsb
inc
add
jns
shll
mov
cli
adc
and
mov
push
dec
mov
scas
xor
push
push
add
pop
int3
mov
add
sbb
mov
add
mov
addb
repz
sub
inc
add
outsb
int3
cmpsl
lods
aad
sarl
sub
mov
jle
sbb
out
adc
mov
inc
add
inc
out
add
sub
inc
jmp
jb
clc
out
add
rolb
sub
ds
add
add
mov
insb
pusha
add
mov
pop
loope
add
adc
add
adc
hlt
add
xchg
add
xor
leave
int3
rolb
cmp
loop
pop
and
mov
add
mov
inc
rorl
pop
outsb
dec
jno
dec
dec
pop
test
scas
addb
cmp
add
and
mov
sbb
sahf
xchg
add
add
leave
add
scas
pop
pop
sbb
into
mov
and
test
add
rorl
and
mov
add
lret
sbb
pop
xor
mov
or
push
scas
fistl
add
mov
mov
add
mov
mov
imul
pop
add
xchg
fcmove
in
enter
rolb
sbb
cld
in
mov
das
fsubrl
sub
addb
mov
mov
add
or
repnz
mov
imul
sbb
cmovo
mov
add
mov
call
mov
inc
cs
mov
in
pop
stc
bound
mov
data16
pop
scas
mov
add
decb
inc
dec
sub
dec
jle
jo
jmp
cld
mov
push
add
push
add
jns
sbb
and
lahf
xchg
sub
add
mov
add
in
sub
push
addb
test
into
leave
dec
mov
add
adc
sub
les
mov
add
dec
test
push
add
mov
test
icebp
addb
adc
push
arpl
pop
lahf
enter
mov
push
cmp
dec
cli
adc
mov
xchg
lea
jnp
add
fucomi
xchg
fstp
dec
fstp
or
jg
add
mov
add
add
adc
cmp
nopl
sbb
xor
mov
data16
lret
mov
xor
movsbl
sahf
popf
xchg
push
add
add
mov
push
push
add
testb
lret
sti
lahf
lods
xor
mov
adc
cli
faddp
adc
mov
pop
stos
adc
add
inc
add
jl
add
jns
and
mov
add
mov
loop
lock
cmpsl
fdivrp
cld
dec
movsl
mov
xchg
add
fstpt
and
mov
in
add
nop
add
push
add
add
mov
jae
pop
inc
xor
into
pop
cmp
or
ficompl
mov
add
mov
bound
mov
imul
gs
add
inc
cltd
cmp
inc
aam
cld
mov
xchg
add
add
add
inc
add
mov
add
add
mov
or
pop
scas
jl
add
add
and
mov
jno
add
add
sub
add
aad
add
bound
mov
dec
mov
add
add
add
mov
add
mov
insl
sahf
cmp
fdivrs
pop
fistl
add
iret
push
add
stos
js
add
add
test
icebp
mov
inc
xchg
add
int
incb
adc
add
add
inc
add
jno
jmp
test
sub
jae
dec
pop
mov
add
add
sbb
add
punpckhwd
jno
int
adc
mov
and
and
mov
std
inc
lret
xor
add
faddp
add
add
imul
testb
scas
dec
fiadds
pop
jmp
mov
add
sti
mov
and
add
sbb
add
push
mov
mov
and
add
std
imul
fbld
mov
xchg
inc
add
add
mov
push
inc
mov
out
cmp
jp
add
int
add
test
xor
add
add
icebp
clc
enter
cmp
add
add
push
add
mov
add
mov
insb
mov
xor
scas
test
xor
decl
add
push
add
mov
add
mov
push
add
xor
out
cmp
push
fwait
xor
fldl
imul
add
int3
push
testl
sub
dec
mov
xor
jno
int
xor
add
pop
pop
sarl
data16
out
xchg
fnsave
pop
addl
jge
push
dec
out
xchg
add
xor
out
movb
add
push
mov
add
add
add
lods
pusha
add
rolb
jae
jecxz
popa
sbb
ret
jl
fdivr
mov
add
pop
jge
lea
loop
daa
insb
fbstp
push
add
jecxz
add
mov
add
add
test
lret
add
add
mov
idivl
rol
push
add
jge
sbbl
add
jnp
pop
ja
js
add
xchg
testl
outsb
and
add
ds
add
xlat
sarl
adc
sbb
scas
add
jns
mov
xchg
and
add
pop
xchg
mov
dec
xlat
inc
test
int3
out
icebp
xor
aaa
data16
mov
lret
fwait
dec
fsub
add
mov
test
fwait
dec
jbe
sahf
add
pusha
add
cmp
add
imul
add
pop
daa
cltd
cltd
roll
in
adc
add
add
add
mov
in
mov
add
addb
cmovno
mov
test
push
cmpsb
add
mov
add
add
add
xchg
add
sbb
hlt
add
add
sbb
add
ljmp
addr16
add
add
add
sub
jnp
data16
movsb
add
add
add
inc
sti
cmc
inc
add
call
add
add
icebp
jecxz
in
rolb
pusha
add
mov
and
je
je
mov
add
xchg
je
filds
loope,pt
mov
sahf
add
mov
pop
mov
mov
push
scas
inc
mov
jmp
xor
push
pop
fstpt
testb
jl
enter
adc
fdiv
add
add
std
stos
jle
adc
adc
fsubl
add
add
and
mov
pop
fimuls
sti
rcll
add
xchg
movsl
in
inc
add
and
and
mov
lods
add
add
add
popf
movsl
jmp
add
add
jne
fdivp
add
pop
mov
mov
cmp
inc
push
in
lods
inc
add
adc
icebp
inc
adc
jo
inc
add
pop
cmc
stos
in
jmp
mov
jns
add
cmp
and
lahf
ljmp
add
adc
xchg
add
inc
add
add
jmp
cmp
jmp
inc
inc
add
pop
jp
jae
testb
out
lahf
fwait
hlt
add
insl
sub
pop
addb
add
in
push
add
add
mov
mov
add
ds
jnp
add
test
sbb
pop
or
mov
push
add
popf
pop
fucomi
mov
add
out
lret
lds
add
adc
pop
daa
int3
cmp
cmp
add
in
js
add
mov
add
repz
rol
add
lret
xchg
mov
imul
push
and
mov
fucomi
mov
xchg
jle
sub
add
aaa
mov
xor
mov
sbb
dec
ljmp
add
add
popa
xchg
add
rolb
fsubrs
jle
add
mov
sub
add
and
mov
loopne
rolb
lea
or
dec
mov
fsubs
mov
mov
add
adc
push
add
pop
xor
fisubrs
push
add
popf
sub
leave
xchg
outsl
fsubrs
out
sidtl
js
lock
add
data16
scas
dec
call
iret
out
xchg
add
enter
add
cwtl
or
add
outsl
lock
mov
add
out
aaa
repnz
add
mov
mov
add
roll
dec
sbb
mov
add
add
lds
sbb
loope
iret
mov
and
mov
gs
add
testl
add
add
xchg
add
mov
add
push
dec
inc
movsb
add
cmp
add
fsubrs
push
lret
lods
dec
fidivrl
add
insb
or
lea
push
add
cmp
xor
and
mov
add
xor
sbb
mov
and
mov
rorl
mov
push
add
out
jns
add
push
icebp
and
mov
add
imul
orl
add
andl
cmpsb
add
fidivrl
add
cmc
xor
leave
pop
aam
cmpsl
test
add
push
mov
pop
cmpsb
add
dec
xor
mov
dec
lock
cmp
inc
add
push
add
add
sub
mov
out
add
test
push
add
mov
add
add
fidivl
jns
add
dec
loop
sub
psllw
mov
mov
mov
bound
mov
sub
add
jne
pushf
mov
movb
js
add
xorl
push
add
out
adc
ljmp
cmc
dec
mov
jle
test
add
enter
pop
mov
add
add
or
xor
rolb
xor
push
add
jae
add
add
xlat
dec
pop
xchg
add
and
std
cwtl
and
fildll
xlat
out
cld
stos
jne
gs
cmp
adc
mov
insl
mov
ljmp
in
add
insb
stos
negl
add
add
and
inc
fimuls
add
push
add
cmp
js
cltd
ja
mov
add
mov
mov
addb
add
xchg
sahf
arpl
rolb
add
xchg
sbb
adc
mov
pop
shll
add
std
dec
cmp
imul
add
addb
adcl
add
aaa
addb
testb
add
xor
xor
inc
add
scas
jl
rolb
inc
cmp
xchg
out
cmp
test
outsl
insl
xor
data16
pop
test
fidivs
cwtl
das
xor
fdivrl
or
add
cmpsl
xlat
fldenv
mov
das
mov
or
pop
popf
cld
stos
sbb
xchg
add
lcall
cmp
add
add
scas
push
leave
xor
sub
inc
add
pop
sarl
push
add
add
aaa
and
mov
add
add
fnsave
or
sub
add
adc
add
repz
and
ss
orl
dec
add
mov
add
add
add
push
ret
cmc
pop
lock
adc
or
rorl
xor
add
mov
add
jb
cmpsl
imul
cltd
in
sub
fmull
mov
in
xchg
cmpsl
mov
icebp
ljmp
add
rolb
mov
mov
dec
adc
mov
push
add
xchg
add
add
pop
mov
call
add
or
xor
mov
sbb
test
sbb
loope
jbe
push
add
fsubrl
adc
add
mov
pop
test
sbb
cwtl
aaa
cmc
outsb
mov
add
add
add
or
add
mov
add
add
inc
add
out
cltd
leave
inc
movsb
add
aam
clc
in
adc
adc
mov
add
pop
xchg
sti
mov
lock
lcall
mov
push
jno
hlt
add
add
push
add
add
add
ja
add
mov
loop
or
leave
outsb
cmp
jp
dec
xchg
xchg
fwait
mov
cmp
adc
cmp
jnp
xchg
add
lds
sahf
mov
jb
out
cmpsl
aas
inc
add
ret
fs
jp
js
jne
mov
xchg
add
pushf
faddl
insl
int
add
mov
jb
inc
add
sahf
cli
add
mov
fldcw
ret
jns
inc
add
and
enter
add
shll
or
addr16
testb
sbb
xchg
pop
lret
sub
adc
add
xchg
add
add
add
loopne
inc
mov
stos
sub
sbb
add
and
mov
ja
add
mov
mov
dec
std
sub
add
mov
add
add
fmulp
mov
in
imul
call
sub
add
add
je
pop
jmp
das
mov
pushf
movsl
lret
jbe
aam
xchg
jmp
test
add
loop
sub
and
xor
jle
add
insl
imul
imul
mov
sub
add
mov
inc
cwtl
adc
and
lods
add
add
add
cmp
loope
lahf
loope
loope
xor
stos
push
rolb
les
out
lea
add
add
sub
in
or
subl
mov
add
out
or
add
add
out
scas
mov
lea
dec
mov
sti
pop
jle
and
leave
xor
push
add
aam
jo
stos
repz
add
push
add
add
pcmpgtw
loope
sbb
dec
sbb
sbb
cmp
out
call
add
imul
add
add
sbb
fnstcw
pusha
add
xor
dec
jp
in
lock
xchg
out
test
mov
mov
into
loop
lret
adc
ret
jp
mov
add
out
sbb
xor
adc
add
add
cmp
and
mov
lea
push
add
push
ljmp
add
add
jle
add
mov
add
pop
push
add
mov
dec
add
dec
add
mov
outsl
jne
xor
leave
dec
stos
push
add
int
add
test
negl
clc
hlt
add
andl
testb
add
pop
aam
in
stos
fcomps
rorl
add
mov
or
imul
int
movsl
flds
clc
pop
jne
pushf
pop
loop
or
add
add
add
lds
add
repz
sahf
push
fcmove
xor
sub
inc
lea
cmpsb
add
repnz
add
add
mov
add
add
mov
fdivs
jg
pop
rcrl
ds
pop
loopne
jg
add
add
inc
push
add
sbb
mov
add
add
add
add
pop
dec
or
mov
pop
test
fdivl
add
add
adc
out
add
outsl
xlat
jg
mov
push
std
mov
add
add
cmp
push
add
add
add
add
xchg
add
int
add
mov
xor
sbb
pop
aas
testb
stos
mov
xor
sbb
sbb
add
jbe
out
iret
loop
pusha
add
mov
daa
push
rolb
testb
test
scas
push
pop
jae
add
ss
addb
sbb
fdiv
sub
mov
cli
inc
add
add
push
jp
add
mov
push
mov
add
lods
les
jmp
push
add
add
add
sub
jne
mov
mov
add
ret
add
push
add
leave
sub
std
push
add
add
aas
adc
cmc
push
add
add
iret
dec
aas
sub
in
dec
iret
and
add
repnz
cmp
cmove
or
add
or
aam
cmp
rcrl
add
add
pop
jecxz
add
or
jae
add
add
xor
push
add
mov
ret
jle
lret
sarl
test
add
adc
test
cli
imul
pushf
rolb
lock
xchg
mov
xor
add
or
sub
mov
enter
test
add
test
scas
cmc
mov
icebp
pop
push
add
in
jl
flds
sbb
push
add
jb
lahf
xor
add
add
add
clc
pop
std
sub
add
add
and
mov
sub
addb
ljmp
sbb
add
mov
add
jecxz
dec
cmpsl
jnp
and
les
xor
hlt
add
add
addb
rolb
xor
mov
fwait
xor
aaa
adc
mov
fnstcw
mov
gs
jno
push
add
inc
mov
add
and
mov
add
into
and
mov
ja
test
adc
and
mov
outsb
aaa
lods
fdivs
add
add
add
add
out
xchg
rorl
add
mov
add
sbb
enter
add
mov
sub
movq
ret
bound
mov
clc
pop
aaa
add
int3
test
lahf
dec
js
xchg
jg
jbe
adc
xor
pop
imul
add
push
shll
add
out
or
js
mov
movsb
add
andl
insb
jne
mov
mov
add
ja
aad
add
xor
mov
cmp
xor
ret
je
cmp
mov
or
cmp
out
push
add
add
adc
adc
push
xchg
add
add
add
add
sbb
ret
inc
push
add
and
add
lds
pop
xor
pop
add
lock
hlt
add
xlat
rolb
xchg
test
aaa
dec
movsl
inc
add
add
jle
addb
add
addr16
add
xchg
add
fwait
mov
mov
dec
mov
in
xchg
lret
clc
or
lcall
pop
out
dec
xchg
push
add
and
mov
lods
mov
test
sar
sub
jmp
cmpsl
ja
xchg
repnz
lock
int3
cmc
and
pop
pop
and
add
ljmp
xchg
cmc
jbe
cmp
xlat
mov
mov
add
jge
pushf
enter
add
cmp
fucomp
popf
add
add
xor
and
dec
mov
mov
ss
loope
push
outsb
jb
ficomps
adc
aas
movsb
add
popa
mov
mov
std
sub
add
and
sub
addb
pop
xchg
add
cmpl
fwait
xchg
jg
shrl
scas
stc
pop
cltd
movsl
jl
add
cmp
add
add
mov
aad
jnp
pop
xchg
sub
scas
and
addb
add
pop
mov
xor
jno
and
mov
add
dec
xchg
xor
jbe
push
add
rolb
jg
cmp
add
shl
add
push
add
in
js
jns
loop
js
cmpsb
add
sub
add
mov
in
test
lds
lret
jmp
sub
add
jecxz
dec
push
add
and
cmc
loopne
scas
mov
and
mov
jg
cmp
in
filds
or
lcall
adc
in
lcall
stos
dec
pop
xor
icebp
sub
add
mov
add
add
cs
dec
popa
popf
fisttps
xchg
pop
data16
rolb
je
pop
sub
pop
in
in
cmp
inc
add
sbb
add
imul
inc
add
mov
out
aad
or
popa
jle
jae
je
loope
add
xor
adc
in
int
sub
rolb
dec
in
fsubrl
test
fsubl
popa
xor
jle
sub
adc
rolb
imul
fdivrp
dec
jecxz
add
stos
sub
xor
push
je
and
mov
int3
jo
mov
add
or
cltd
scas
cmp
add
icebp
imul
jmp
add
int3
dec
sub
add
jle
xchg
sbb
cmp
enter
adc
dec
sbb
mov
jl
add
adc
sbb
pop
or
add
fstpl
dec
test
sbb
lcall
iret
adc
xor
cltd
jne
jmp
sub
xor
addb
add
ds
add
sbb
mov
bound
mov
mov
add
add
rorl
add
aam
inc
sbb
adc
js
inc
data16
add
inc
add
je
pop
mov
jne
push
add
lahf
and
xlat
pop
lods
mov
add
mov
sbb
mov
pop
xchg
test
add
imul
add
push
sbb
add
js
add
add
ljmp
add
and
fstp
test
add
jnp
cltd
mov
add
mov
pop
push
add
sub
add
mov
movsl
out
out
call
mov
jmp
fcompl
jmp
popf
mov
mov
xchg
pop
das
dec
inc
add
push
add
mov
ret
test
das
addb
ds
add
add
add
add
imul
mov
mov
outsb
leave
sub
mov
in
mov
xchg
push
add
add
sbb
or
das
and
shll
mov
outsl
faddl
and
cld
jbe
add
bound
mov
adc
ljmp
inc
mov
outsl
lods
inc
add
add
inc
adc
add
xor
add
pusha
add
lds
test
movsl
jmp
ss
cwtl
aas
cli
aad
sub
push
sbb
ret
add
leave
ja
out
sub
push
rolb
hlt
add
cltd
call
inc
add
adcl
xchg
add
pop
dec
adc
ds
add
fwait
aaa
inc
sub
add
test
add
xchg
cmc
dec
aad
dec
movl
repnz
push
mov
add
loop
adc
sbb
add
add
enter
bound
mov
pop
ret
dec
test
xchg
add
mov
ret
popa
test
sahf
push
add
mov
push
add
add
jg
xlat
fldt
pop
lods
fbstp
add
add
add
jecxz
rolb
jne
out
cmp
imul
loope
xlat
pop
ja
filds
mov
repz
add
imul
push
aam
jg
add
add
mov
add
dec
scas
mov
add
out
les
mov
push
add
add
mov
inc
aad
push
add
inc
add
mov
scas
jb
add
rolb
xchg
add
mov
mov
iret
xchg
dec
jo
repz
mov
push
xor
mov
mov
insl
push
jle
jb
movsl
jne
sti
movsl
push
stos
xchg
add
out
pop
mov
push
or
and
mov
add
cltd
lcall
xor
popa
data16
popa
cmp
add
add
add
fwait
aaa
mov
and
mov
adc
dec
jbe
pop
aam
push
mov
shrl
adc
daa
sbb
das
adc
mov
clc
movsb
add
sbb
add
add
add
addb
repnz
adc
data16
cltd
sbb
add
add
fmulp
dec
or
push
add
add
adc
pop
shr
mov
lcall
adc
xlat
add
mov
cmp
orl
add
xor
testb
cmp
add
sub
pop
and
or
add
out
in
iret
mov
rolb
movb
popf
testb
stc
adc
data16
mov
stos
xor
repz
test
mov
mov
rolb
call
xchg
xchg
mov
mov
sub
add
lods
mov
add
dec
mov
jae
add
add
or
push
add
xchg
add
add
and
adc
stos
out
pop
sahf
push
add
mov
add
add
add
add
addr16
aam
mov
add
daa
xchg
add
jecxz
add
cld
add
addb
and
add
add
pop
sub
out
push
pop
pushf
rolb
add
mov
or
repnz
imul
lea
add
fs
dec
pop
cmpsb
add
fistps
xor
add
and
add
ret
push
add
add
adc
ljmp
imul
add
add
dec
cmpsb
add
idivl
or
jbe
data16
movl
sub
scas
and
mov
inc
add
out
add
stos
push
orl
cwtl
lahf
ret
mov
add
popf
cwtl
jmp
add
cmc
mov
testb
xchg
ret
mov
inc
lds
add
jne
mov
cmp
mov
insl
es
test
xor
sub
pop
jnp
mov
outsl
imul
loopne
in
mov
add
cmp
add
data16
out
negl
nop
add
push
dec
out
push
add
add
add
add
add
inc
add
add
add
and
mov
adc
mov
add
mov
das
ja
add
lcall
add
inc
xchg
add
cwtl
jp
sub
insl
jg
gs
sub
mov
ljmp
add
mov
pop
test
add
mov
addb
jnp
add
out
fnstsw
cwtl
mov
mov
add
mov
add
cwtl
lcall
add
add
mov
add
movsb
add
lock
add
add
mov
out
dec
icebp
sub
aam
sbb
imul
add
ljmp
add
inc
add
push
xor
mov
lret
dec
mov
ja
add
aad
pop
test
xchg
movsl
inc
pushf
movsl
adc
mov
cltd
dec
xor
stos
push
dec
addb
mov
add
add
add
mov
adc
mov
push
xchg
gs
mov
sbb
xchg
add
xor
ljmp
inc
add
mov
jl
rcr
and
jle
jp
mov
addr16
flds
cmp
testb
add
imul
enter
sub
mov
inc
jbe
dec
sub
add
inc
add
dec
fisttps
sbb
add
int
jmp
add
add
sub
jmp
adc
mov
add
addb
add
adc
xchg
add
test
rolb
test
fsubrl
decb
sub
jmp
jge
add
add
sbb
add
pop
aaa
pop
add
mov
jge,pn
addb
push
add
jl
or
mov
xchg
or
adc
add
push
add
xor
loope
data16
add
sub
out
dec
pop
jno
mov
dec
xchg
add
test
gs
leave
mov
mov
add
data16
xchg
mov
add
sbb
lahf
jecxz
stos
push
add
add
daa
les
loop
cmpsl
lods
adc
pop
mov
add
lods
stos
and
xchg
lret
xchg
xchg
add
mov
xchg
fimuls
add
mov
jp
addb
add
insl
mov
mov
adc
lahf
scas
inc
and
mov
pop
lcall
add
add
std
adc
testb
insb
outsl
mov
cmp
mov
xchg
add
mov
aad
inc
add
stos
nop
add
cld
pusha
add
fbld
add
mov
xchg
pusha
add
pusha
add
sbb
les
rolb
in
adc
pop
sub
sbb
mov
or
cmpsl
jg
inc
in
add
sub
iret
push
add
sbb
je
mov
add
push
add
add
mov
inc
add
add
add
ja
push
cmp
add
mov
mov
and
push
fldt
lods
add
add
mov
jbe
sbb
add
or
mov
insl
movsl
jno
add
add
add
add
fwait
pop
mov
inc
add
add
adc
mov
and
loope
leave
mov
frstor
and
mov
add
add
mov
pop
repnz
add
add
push
les
pop
enter
ret
fstps
push
push
add
sub
fnstenv
lds
cmp
add
mov
cmpsb
add
add
addb
in
sbb
cltd
sbb
lock
add
mov
dec
cmp
add
sub
movb
cmp
add
add
mov
push
jp
add
mov
add
add
add
sub
add
cltd
dec
int3
ficomps
in
xchg
add
mov
add
scas
inc
add
sti
fucomi
lods
add
push
movb
popf
add
mov
xchg
mov
out
out
les
add
and
mov
jecxz
add
xchg
test
add
mov
mov
add
add
add
ja
dec
xor
cmp
add
dec
mov
push
data16
cld
adcl
add
std
and
mov
xchg
add
popa
mov
add
jo
inc
pop
int3
clc
fadds
mov
dec
push
adc
int3
test
xor
add
jne
scas
pop
aad
add
add
xor
cmc
rcl
lock
cmp
aad
sub
push
add
xchg
add
scas
mov
jg
mov
jp
pop
mov
push
push
ja
add
testl
add
stos
popf
jmp
imul
jo
cltd
iret
cmc
and
sub
rolb
and
inc
add
add
dec
push
test
ds
jmp
fnsave
sub
inc
add
add
jno
mov
clc
stos
fstpt
add
ds
push
push
push
testb
in
fildl
add
mov
sbb
into
jge
and
add
test
xorl
add
ret
lahf
mov
adc
dec
mov
add
add
add
addr16
adc
sbb
loope
pushf
sub
dec
mov
add
jbe
lret
push
shr
loopne
mov
push
add
add
dec
les
nop
add
add
add
jne
movsb
add
add
lock
lods
add
ljmp
add
scas
aam
daa
outsb
push
add
add
sub
cmc
lcall
cmp
jecxz
and
mov
clc
ds
nop
add
outsl
inc
pop
lods
rolb
shrl
xlat
insl
repnz
pop
movl
loop
jns
aas
in
cmp
mov
inc
add
dec
dec
inc
add
fcmovb
add
jl
in
hlt
add
add
add
add
mov
mov
mov
test
add
movswl
out
pop
loope
inc
rolb
dec
pop
pushf
dec
push
add
sub
add
or
movsl
ret
data16
mov
jmp
add
sbb
stc
cmp
notl
data16
add
add
add
cmc
jp
add
dec
pop
add
cmp
mov
mov
mov
add
cmp
mov
das
mov
fwait
xor
add
lcall
cmp
pop
cli
divl
sar
push
add
lfs
sahf
lock
and
sub
add
add
ret
xchg
add
mov
push
inc
add
xor
add
lret
mov
pop
insb
pushf
pop
subl
or
mov
xlat
cmpsl
sub
out
lock
add
and
dec
test
or
jo
push
add
stc
jne
adc
jae
sub
jmp
imul
push
adc
sub
pop
into
ljmp
gs
testb
add
add
mov
jae
add
test
sbb
add
jecxz
jg
mov
cltd
xchg
movsb
add
push
add
addb
cwtl
mov
sub
je
cmpsl
mov
fstl
mov
clc
inc
enter
out
add
lret
push
add
add
ret
dec
jmp
xchg
add
or
cwtl
in
sub
xchg
arpl
iret
mov
jnp
call
mov
add
in
insb
rolb
nop
add
add
add
and
push
or
scas
push
xchg
es
aam
xchg
push
mov
lret
sub
add
jmp
add
add
adc
mov
xor
add
mov
aam
sub
dec
push
aad
ret
or
add
shr
out
inc
push
pop
add
or
clc
inc
sub
jge
out
add
jl
sti
daa
pop
or
mov
mov
in
dec
rolb
jg
mov
fwait
dec
add
inc
sub
dec
loope
add
or
enter
repnz
jg
or
les
mov
ret
mov
cs
addb
add
add
ds
and
xchg
ja
or
xchg
add
jno
in
push
add
pop
or
ljmp
add
add
push
adc
pop
xchg
mov
jg
mov
add
adc
mov
sub
add
lret
jbe
fucom
mov
out
bound
mov
or
pop
sub
add
add
cwtl
mov
ljmp
add
add
mov
xchg
data16
sub
loop
cwtl
jmp
mov
test
xor
sub
add
add
lret
xlat
xchg
lods
pop
mov
rcll
or
add
inc
add
lret
ret
mull
mov
add
inc
add
sub
and
loope
ds
add
add
cmp
cld
add
testl
loope
std
add
push
inc
rolb
xor
mov
fists
or
cmp
or
push
loopne
leave
dec
sarl
add
rolb
add
mov
sbb
mov
popf
imul
add
mov
mov
jns
push
add
jle
add
addr16
lock
mov
out
add
add
or
xchg
add
xchg
sti
push
add
sub
jns
out
add
xchg
add
add
stc
push
xor
mov
fidivrs
adc
jmp
lods
push
mov
leave
mov
int3
mov
mov
adcl
adc
mov
imul
or
add
sub
cld
pop
mov
add
inc
add
add
outsl
js
int
pop
add
mov
xchg
or
in
and
jno
shll
push
add
mov
bound
mov
add
call
add
nop
add
inc
xlat
add
aaa
dec
xlat
pop
sub
xlat
shr
addl
mov
push
add
je
mov
xchg
data16
add
add
adc
push
add
sbb
add
lret
jne
add
fbld
add
xchg
add
inc
push
push
add
outsb
dec
xchg
inc
sbb
inc
push
add
arpl
add
dec
adc
jno
add
mov
bound
mov
gs
nop
add
add
mov
add
scas
rolb
adc
sub
jno
mov
pushf
mov
rcll
add
cs
sbb
inc
push
add
xchg
or
add
and
pop
stc
add
mov
add
out
lods
xlat
add
pop
dec
lahf
les
popf
negl
and
lods
and
mov
add
mov
lods
dec
pushl
pop
aam
pop
mov
add
push
add
add
pop
inc
lods
sbb
test
in
fdivs
cld
pop
xchg
add
add
ret
add
add
mov
add
mov
inc
rolb
clc
loop
and
or
sbb
xorl
add
add
test
decb
nop
add
xchg
mov
in
mov
shll
add
dec
imul
add
xor
push
xor
pop
std
in
mov
inc
add
or
add
lcall
xlat
jle
add
add
fcmovb
push
mov
pop
xor
adc
lret
int3
mov
add
jno
push
add
add
add
adc
sbb
je
xchg
xchg
add
jl
inc
add
divl
movsl
jno
mov
add
jecxz
add
add
or
sbb
mov
pop
addb
mov
mov
stos
sbb
add
add
sub
mov
mov
dec
iret
icebp
xchg
dec
jns
ds
add
outsb
mov
call
enter
pop
push
add
into
int
add
mov
movaps
incb
aam
mov
repz
add
pop
cli
xor
add
push
add
add
in
xchg
pusha
add
add
repz
stos
add
testb
add
jmp
dec
ds
dec
dec
aas
movsl
mov
push
in
mov
rolb
jmp
pop
jg
stos
cmp
mov
jns
xlat
les
mov
js
jnp
addl
adc
dec
repnz
jle
pushl
add
dec
mov
xchg
add
cmp
in
roll
add
mov
xchg
cli
adc
add
addb
add
cmpl
ljmp
add
lahf
xchg
pusha
add
add
inc
push
add
pop
rolb
pop
mov
iret
je
cmpsl
out
and
in
inc
add
addb
cmp
mov
iret
jl
add
add
jg
mov
ret
add
dec
add
mov
xor
int
add
cmp
int
iret
or
dec
pop
jbe
test
add
loope
add
fdivrp
mov
add
push
add
loopne
pop
jmp
add
pop
or
push
add
stc
jnp
add
mov
add
mov
add
sti
mov
iret
add
ljmp
add
add
mov
add
add
in
fmull
call
and
pop
xchg
add
add
pop
das
clc
out
out
jp
add
jg
add
xchg
out
clc
insb
test
lods
addr16
xchg
push
add
sbb
push
jae
add
or
sti
outsb
cmp
mov
ja
cmp
xor
cwtl
and
xchg
mov
add
add
hlt
add
ljmp
pop
add
test
xlat
add
and
sub
cltd
rolb
jnp
jno
push
mov
add
xor
sub
xchg
sub
lcall
mov
popa
fistpl
js
int3
jb
test
inc
add
add
add
push
add
add
shl
icebp
cs
lea
movsb
add
stc
mov
gs
pop
xchg
or
addb
xor
push
add
hlt
add
add
add
fldcw
add
add
cltd
mov
mov
inc
add
aam
xor
add
int
xor
clc
inc
push
dec
out
pop
repnz
popa
adc
inc
add
add
xor
imul
add
call
add
adc
test
add
jl
add
aas
push
mov
movb
cmp
add
adc
add
jae
inc
add
jmp
pop
push
add
icebp
and
add
add
fidivrl
sbb
cwtl
jge
add
add
lahf
jle
add
add
mov
aas
movb
popf
mov
lahf
outsl
xchg
ret
fcoms
sub
mov
add
hlt
add
outsb
mov
mov
js
add
mov
or
mov
xchg
add
add
push
jno
add
fildll
dec
cmpsl
mov
jmp
sbb
adc
dec
xor
shll
mov
popf
or
mov
jp
ret
add
add
or
jl
add
test
add
xor
cmc
insl
sbb
movsl
leave
insl
push
add
push
add
sahf
dec
imul
mov
lock
movsl
mov
add
sub
testb
mov
add
push
add
sbb
scas
int3
jbe
push
add
sub
add
jbe
xor
fstp
dec
in
mov
mov
mov
ret
add
add
push
add
rolb
jno
adc
mov
sbb
sbb
cli
insb
loopne
pop
scas
jle
in
gs
add
dec
xchg
inc
add
mov
aad
mov
mov
add
enter
dec
outsl
rcr
pusha
add
pop
mov
push
fcoml
rolb
push
add
mov
mov
add
shrl
add
aad
inc
add
push
add
cmpsb
add
rolb
loopne
jns
jbe
imul
cmc
mov
mov
adc
lret
dec
sub
push
add
push
push
stc
mov
aas
inc
add
pop
rolb
ret
fcmovnu
subl
adc
pop
lahf
push
icebp
out
push
add
add
add
imul
out
add
mov
fiaddl
das
dec
sahf
sub
popa
rol
push
add
jecxz
add
ja
add
insl
cmp
int
or
xor
push
lret
testb
lods
pop
imul
add
inc
add
jg
add
cs
in
xorl
aad
dec
cmp
jecxz
scas
out
int3
add
popf
mov
inc
add
add
inc
lods
movb
shrl
je
mov
int3
popf
inc
push
add
out
pop
add
mov
div
add
add
fistpll
add
lea
test
add
mov
loope
jno
jb
ljmp
add
xchg
fsubrl
add
fwait
pop
pop
popa
inc
hlt
add
push
mov
cwtl
loope
adc
add
aas
add
pop
jg
jmp
pop
aad
add
jmp
arpl
xlat
dec
lock
add
add
out
xor
add
aam
stos
ljmp
ficompl
add
sub
cs
add
int
in
lods
and
mov
push
or
add
mov
icebp
dec
push
sti
jno
add
test
add
ja
pusha
add
add
add
push
jle
jne
cmc
ret
cmp
mov
cmpsb
add
jns
push
push
add
loop
test
mov
fwait
sub
add
testb
out
add
cld
mov
testb
add
lock
sbb
movsl
or
cmp
add
sub
or
ror
push
add
mov
pop
dec
xor
in
jo
lcall
pop
rolb
add
pop
cltd
mov
mov
add
add
aas
mov
std
mov
ret
jmp
loope
xchg
dec
jecxz
dec
mov
add
int
aaa
xchg
add
aam
call
mov
daa
inc
add
ja
adc
add
add
sbb
add
add
enter
jnp
add
add
add
pop
lret
sub
int
add
jecxz
pop
lock
add
add
add
les
jo
repz
add
cld
iret
or
testb
out
add
add
add
add
push
add
jmp
and
mov
xchg
jns
or
xor
data16
mov
jne
lret
add
push
add
pop
arpl
mov
sahf
xchg
add
add
and
mov
loope
mov
movb
add
add
rolb
add
xchg
xchg
add
lret
mov
insl
icebp
pushf
xchg
dec
or
sub
add
and
push
add
add
fildll
add
jae
data16
add
mov
add
dec
jle
add
xchg
cmc
dec
loopne
pushf
lods
add
and
addb
stc
add
maskmovq
adc
cmp
cwtl
dec
inc
add
insb
bound
mov
scas
cltd
add
add
out
mov
flds
adc
ja
fwait
mov
add
pop
mov
add
dec
ret
cmp
fwait
add
pushf
push
add
mov
lret
repnz
loope
or
add
add
movb
xchg
jne
lret
add
push
add
dec
push
bound
mov
mov
mov
lock
lea
add
xor
rcrl
add
xchg
or
add
add
pop
push
add
cmp
aaa
dec
fdivl
add
sub
add
add
adc
mov
inc
aam
push
sbb
lahf
popf
sti
jl
aas
jecxz
enter
lods
jecxz
and
add
stos
fwait
addb
add
cmp
ljmp
mov
sbb
add
out
insb
mov
sub
ror
add
sbb
mov
in
push
fisubl
sub
dec
xchg
rolb
inc
repnz
adc
leave
cmpl
adc
sahf
sbb
xchg
add
call
add
inc
in
in
add
mov
jns
movb
clc
push
lret
in
xor
decb
add
sbb
add
xchg
add
mov
addr16
add
add
std
mov
repz
sbb
add
out
mov
add
add
pushf
call
xchg
loope
add
testb
push
add
add
arpl
dec
incl
add
es
add
movsb
add
cmp
sub
add
add
or
add
clc
div
data16
sub
xlat
xchg
std
or
mov
add
push
test
pop
push
mov
data16
jb
loopne
loop
mov
mov
and
add
xchg
ja
loop
mov
stos
push
add
cld
sbb
xor
sti
inc
loopne
mov
int3
xlat
xor
push
outsb
xor
rolb
fstps
pop
mov
sahf
or
lcall
cmp
pop
sbb
add
stos
and
add
add
xor
mov
or
adc
aas
mov
insb
mov
add
ret
lret
pop
mov
jae
add
add
sbb
xor
push
add
scas
lods
dec
sbb
sbb
aaa
mov
shll
jno
test
fmuls
pop
mov
inc
add
cmc
ret
cmp
add
add
add
add
add
push
add
fdivr
or
mov
in
add
mov
popf
jnp
fdivp
add
jge
daa
insb
fimull
push
add
add
add
mov
add
add
into
arpl
and
mov
out
push
add
add
push
leave
xchg
aas
adc
stos
adc
lock
movsb
add
call
inc
jnp
outsl
mov
add
add
ret
or
mov
cmp
add
fists
add
movsl
out
jmp
insb
jne
add
scas
mov
clc
xchg
addb
add
xor
jne
mov
mov
add
sbb
aaa
add
mov
clc
lahf
sub
sub
sahf
in
inc
add
add
add
cs
jo
movb
out
js
clc
ljmp
fsubs
mov
and
xchg
add
jmp
add
sbb
aad
popf
mov
add
mov
add
adc
xchg
dec
std
arpl
adc
inc
mov
add
mov
add
mov
push
add
inc
add
mov
shrl
or
mov
stos
and
add
mov
add
addb
add
xor
add
add
out
pop
jg
int
cwtl
ror
add
je
sbb
in
mov
inc
and
std
lods
push
add
add
stos
xor
lea
sbb
jbe
add
mov
mov
mov
addb
jbe
popa
dec
mov
dec
pop
jge
sahf
add
mov
lods
je
pop
cltd
imul
inc
add
add
inc
dec
xlat
rolb
adc
in
mov
mov
jbe
mov
mov
add
out
in
js
mov
add
aad
add
mov
add
int3
bound
mov
add
inc
add
call
mov
pop
mov
js
xchg
lods
loope
inc
xor
rolb
pop
rolb
push
add
mov
add
movb
and
imul
out
add
mov
loop
ret
push
insb
mov
sub
mov
dec
mov
pop
sbb
into
nop
add
mov
es
or
push
add
in
and
add
jp
push
addl
cmp
iret
ret
pop
ret
add
lods
xor
fbstp
add
stc
sbb
rolb
add
cmpsl
lods
add
or
pop
bound
mov
add
push
add
xor
scas
stos
insl
clc
sub
mov
lods
xor
inc
fsubrp
adc
mov
add
ljmp
pop
sbbl
push
add
sub
fstl
andl
add
add
outsl
add
add
add
add
mov
leave
pop
add
cwtl
movsl
cmc
mov
add
pop
xchg
int3
xor
arpl
add
pop
cmpsb
add
outsl
dec
adc
or
push
mov
mov
sahf
cmpsl
leave
sbb
add
or
add
add
pop
pop
xchg
lods
movsl
inc
fisttpl
add
add
scas
cmpsb
add
add
push
add
pusha
add
add
add
mov
jnp
mov
or
add
add
add
je
mov
out
movsb
add
add
add
out
cmp
add
mov
add
xor
pushf
and
repnz
insb
mov
ljmp
testb
add
repnz
lahf
mov
lods
xor
lret
add
mov
in
dec
mov
push
hlt
add
sub
ljmp
inc
add
cmp
push
inc
add
xlat
aas
pop
xor
add
add
add
cmp
or
mov
add
or
push
data16
jb
in
dec
pop
fcom
pop
out
insb
xchg
das
cltd
iret
add
add
add
pop
in
add
push
add
movb
jecxz
fcoml
push
add
add
xchg
jne
testb
dec
push
add
add
adc
mov
add
add
mov
cmp
sub
dec
adc
lea
nop
add
pop
cmp
mov
push
add
add
cltd
movb
ret
popa
hlt
add
add
dec
clc
inc
add
lds
scas
jle
sbb
pop
fwait
cs
pop
iret
out
sub
add
add
add
pop
mov
add
adc
and
push
xchg
sbb
aam
addr16
movsl
mov
jae
and
cli
jae
adc
mov
xchg
add
add
add
inc
inc
fstps
lcall
mov
xchg
add
out
push
sub
ret
aaa
add
mov
je
aam
xchg
and
sub
cmp
xor
mov
add
aam
xchg
iret
mov
mov
sub
aam
lds
add
mov
adc
and
mov
add
push
pop
cmp
ret
sti
xchg
inc
cmp
repnz
mov
bound
mov
and
mov
xlat
cli
cmpsl
cmp
dec
lds
jg
inc
add
xor
cmp
xlat
leave
popf
lds
pop
leave
jmp
mov
mov
inc
cli
fwait
jbe
mov
dec
lods
xorl
mov
add
std
fsts
push
jge
test
add
addb
lods
rolb
aaa
outsl
mov
cmp
add
push
add
pop
jno
in
aaa
dec
jnp
add
add
add
out
loope
mov
push
add
sbb
add
sub
lret
daa
pop
sbb
add
loopne
and
add
add
add
lret
jae
add
and
dec
and
add
add
cmp
cmc
fstl
ficoml
add
lret
dec
sbb
xlat
mov
cmp
mov
jbe
xchg
rolb
movsl
add
mov
scas
xchg
jo
or
add
push
jecxz
push
add
push
add
push
out
fdivrp
add
stos
cmpsl
pop
decb
imul
add
add
jns
add
pusha
add
mov
add
mov
add
add
mov
add
adc
mov
add
mov
add
jl
mov
push
add
push
mov
sbb
sub
xchg
fdivrs
outsb
jl
scas
push
inc
imul
dec
pop
mov
mov
cltd
sbb
push
mov
cld
addr16
adc
add
xchg
add
jne
add
cmpsl
ds
ja
dec
rolb
xchg
jae
push
add
add
out
or
xchg
stos
and
dec
fwait
jl
dec
imul
inc
add
outsb
mov
pop
daa
mov
push
add
mov
pusha
add
rolb
hlt
add
add
mov
lahf
xor
insb
or
pop
push
cli
leave
mov
add
imul
lds
lock
popf
adc
adc
iret
test
xor
sub
dec
jo
cmp
fimull
add
add
and
mov
add
add
imul
mov
cmp
and
imul
add
add
cmp
in
inc
add
add
mov
clc
pop
inc
add
lods
xchg
jo
adc
pop
lret
popf
icebp
insl
pop
xchg
dec
xor
jb
data16
mov
add
mov
add
add
xchg
mov
adc
mov
lret
add
mov
popa
int3
sbb
add
xchg
add
out
dec
mov
add
and
or
stc
aas
fdivp
add
out
mov
test
add
add
add
int3
addb
imul
add
mov
adc
jg
and
add
add
mov
add
mov
add
adc
dec
fadds
adc
xchg
adc
add
out
out
pop
and
movsl
sti
in
arpl
add
cli
movb
ds
in
inc
and
mov
inc
mov
nop
add
add
push
add
xchg
sbb
inc
or
das
and
add
sub
test
cmp
inc
pop
xchg
add
sbb
lods
mov
or
add
mov
sbb
add
fstpl
nop
add
in
mov
nop
add
add
xchg
add
mov
fwait
sahf
inc
test
fldl
cmp
adc
push
add
sahf
cld
xor
leave
add
xor
sub
imul
jp
nop
add
lock
add
int
lahf
bound
mov
adc
mov
addr16
cmc
dec
nop
add
add
mov
sbb
cmpsl
jnp
add
cmp
std
ret
sub
xchg
mov
ljmp
mov
mov
mov
pop
adc
add
mov
pop
inc
inc
add
sahf
mov
ljmp
insl
push
add
add
mov
cmc
sbb
jns
jmp
hlt
add
sub
addb
cwtl
add
mov
mov
mov
add
inc
add
and
mov
add
mov
xchg
fsubrl
add
mov
repz
sub
mov
add
mov
out
or
sub
add
add
push
add
push
mov
add
pusha
add
pusha
add
mov
pusha
add
add
aad
add
add
add
add
mov
add
add
inc
mov
dec
cmp
add
add
add
add
or
pop
sub
push
cmp
or
gs
mov
in
inc
enter
jb
and
mov
xchg
add
addr16
out
rolb
sbb
add
sbb
pop
in
imull
lods
ret
add
mov
dec
push
add
mov
adc
xor
fistps
aaa
adc
inc
enter
add
add
data16
and
mov
fidivl
sbb
add
mov
add
je
sbb
or
dec
cli
je
fst
add
add
add
fnstcw
scas
and
add
add
sbb
and
daa
xchg
pop
fiadds
add
add
pusha
add
add
adc
push
add
add
add
mov
movsl
clc
push
lock
sub
add
add
jne
push
add
loopne
test
in
fisubs
add
addb
fadds
data16
push
add
add
add
mov
add
sbb
push
cmpl
pop
pushf
and
mov
adc
js
add
cmovle
adc
dec
cli
jl
push
add
add
add
xchg
add
mov
mov
push
lcall
push
add
add
mov
add
mov
aam
arpl
add
pop
add
inc
cmc
ret
adc
dec
into
fwait
stos
insb
pop
popa
in
xchg
add
add
add
mov
cmp
dec
mov
add
pop
test
out
pop
mov
mov
inc
xchg
and
add
add
add
add
cmpsl
sti
jp
mov
push
add
push
and
mov
cmp
jge
pop
cmpsb
add
add
mov
lock
icebp
insl
aas
add
out
ljmp
add
jmp
and
push
rolb
mov
mov
aaa
mov
pop
or
scas
inc
push
loopne
outsl
aam
jns
push
jle
inc
add
push
add
add
mov
ret
inc
add
add
adc
pop
dec
loop
addr16
loopne
push
add
add
add
cld
push
add
add
push
add
add
add
mov
sarl
add
dec
into
leave
rorl
add
dec
stos
pop
push
add
fcmovnb
or
mov
jle
stos
data16
scas
xorl
cmp
jbe
dec
mov
xchg
add
or
add
popf
and
add
add
stos
rolb
and
or
push
pop
jecxz
loopne
repz
dec
mov
add
cld
xor
shufps
in
cmp
add
add
fimull
and
pop
adc
in
cmc
sahf
repnz
add
outsb
popf
dec
pop
int
popa
dec
add
in
mov
add
popa
addr16
out
js
add
push
jmp
dec
sbb
or
sti
loop
inc
jno
lock
ja
lcall
in
les
cltd
mov
jns
data16
and
push
add
fs
add
add
dec
loopne
jne
or
add
test
jle
add
mov
sti
test
popa
and
mov
std
pop
mov
lret
xchg
addr16
sahf
sbb
add
add
fwait
or
xchg
arpl
repz
stos
xchg
call
stos
iret
jg
add
xchg
add
mov
mov
inc
fidivl
cmp
incl
in
pop
pop
test
mov
add
add
add
add
mov
outsb
mov
gs
add
sub
jb
push
rolb
mov
mov
in
sbb
push
add
add
lock
add
xor
xlat
add
sbb
push
inc
add
movsb
add
add
jae
shl
std
mov
lods
mov
add
mov
cltd
jae
daa
inc
add
add
pushf
js
sbb
test
pusha
add
add
add
fisubrs
mov
repz
mov
mov
in
push
fsubrl
pop
outsl
pop
into
js
dec
xor
sbb
pop
adc
inc
add
cmc
lret
dec
call
add
aaa
jmp
add
add
cmp
mov
xchg
add
out
test
rolb
fsub
add
add
out
sbb
add
addb
push
add
leave
add
sbb
add
push
or
sbb
dec
jns,pt
add
mov
loope
add
mov
das
ficoml
test
or
jno
xchg
add
inc
add
nop
add
mov
push
add
add
cmp
add
mov
add
and
mov
add
fnstcw
add
popl
bound
mov
jmp
add
mov
sbb
in
aam
push
fidivl
jb
push
add
mov
jne
add
shll
add
add
iret
scas
insb
jl
add
add
mov
popf
mov
fsubrl
data16
push
and
in
add
push
mov
sbb
cltd
and
pushf
add
adc
and
aas
loope
cli
sbb
and
mov
fisubs
add
mov
adc
cmp
out
mov
push
in
xchg
add
adc
loopne
inc
add
into
or
add
cli
hlt
add
imul
shll
in
pop
pop
add
sub
sbb
ja
add
or
push
add
add
add
add
add
js
mov
sti
mov
stos
fwait
xchg
add
scas
pop
loope
add
repnz
add
add
out
icebp
inc
xlat
push
add
decl
mov
pop
fucompp
movsb
add
arpl
sub
imul
add
ret
out
and
out
push
xchg
fidivl
add
mov
mov
iret
xor
mov
add
add
cmpsb
add
push
add
mov
xor
addb
repz
call
imul
add
mov
add
add
add
js
add
add
cmp
sbb
cli
push
add
jbe
push
xchg
mov
addb
fcomp
push
stc
daa
xor
mov
push
add
pop
pop
iret
push
push
add
nopl
leave
inc
add
add
rolb
pop
jl
add
add
push
add
add
add
push
add
add
mov
xchg
pop
daa
imul
sbb
add
inc
add
in
sti
inc
movb
frstor
add
add
sbb
cli
ljmp
pop
push
cmp
jmp
add
jle
inc
mov
mov
dec
add
mov
insb
jb
cmp
mov
cs
add
enter
add
adc
test
and
add
add
xchg
inc
add
int3
popa
mov
lods
adc
pop
adc
inc
mov
insb
orl
ftst
add
movb
aaa
cmp
imul
imul
xor
inc
add
xchg
xor
jp
les
lods
dec
dec
cmp
xchg
add
jecxz
mov
dec
js
add
lahf
sbb
add
cmp
aaa
add
cld
int
fstl
add
and
loope
add
loop
aad
iret
adc
and
call
mov
movb
mov
add
inc
pop
lahf
mov
add
add
mov
add
add
add
daa
jnp
add
add
pop
sub
sti
cmp
testb
add
data16
mov
hlt
add
loopne
adc
add
add
jecxz
sub
out
push
add
add
inc
add
xchg
je
xorl
add
cmp
sub
add
sbb
stos
aad
or
add
adc
add
xchg
mov
xlat
sub
cmp
add
mov
aad
add
and
mov
add
stos
inc
rcrl
and
sub
add
add
add
push
xor
cmpsb
add
add
jae
mov
dec
cmp
loope
add
repz
les
add
lcall
xchg
mov
shrl
add
add
bound
mov
add
xor
mov
addb
icebp
fstl
add
xor
cld
push
out
mov
add
add
adc
and
stos
jmp
jb
inc
sbb
push
add
add
add
and
mov
inc
lret
pop
arpl
mov
dec
testb
add
cmp
xchg
add
push
add
sbb
push
aaa
popf
loop
mov
into
inc
mov
mov
test
xor
cmc
sahf
inc
add
int3
xlat
push
add
jne
sahf
jmp
xchg
and
pop
loop
dec
sahf
and
mov
adc
cli
fwait
sbb
add
outsl
inc
add
or
add
inc
in
subl
lcall
aas
daa
pop
data16
repnz
scas
jp
add
add
rolb
mov
push
add
add
add
adc
xchg
inc
add
hlt
add
dec
mov
add
push
push
add
shll
in
push
test
pop
sahf
adc
fsubl
mov
ret
inc
xchg
xor
stos
imul
mov
cld
vpextrw
lds
mov
add
lahf
sar
mov
loope
add
add
add
xchg
outsl
dec
pop
and
call
xor
popf
jle
movsb
add
mov
inc
repz
and
mov
lcall
fadd
push
add
dec
mov
outsl
test
add
lock
add
add
jmp
xor
add
xchg
add
out
std
lahf
jle
loop
push
add
add
mov
cwtl
inc
out
test
inc
add
out
xor
cmp
add
je
xchg
clc
add
sbb
add
enter
and
dec
das
in
stos
inc
pop
inc
add
int3
mov
add
add
cmp
add
imul
aad
fmuls
daa
stos
test
pushf
cmp
addb
add
aad
adc
out
mov
sub
outsb
aaa
and
add
leave
addb
sbb
xor
lcall
mov
mov
dec
cmp
out
imul
xor
pop
jb
lret
ds
inc
into
pop
popf
lret
insl
repnz
fwait
jecxz
lds
adc
bound
mov
inc
pop
jnp
stos
js
jg
add
mov
cmp
mov
pop
jg
lahf
in
roll
stos
out
push
jecxz
stos
jb
mov
lock
stos
call
stos
lcall
add
push
outsl
lcall
insb
pop
dec
movsb
add
ljmp
xchg
rcrl
movb
add
inc
lods
lret
pop
xor
movsl
sahf
sbb
in
in
mov
gs
add
dec
or
sbb
dec
movb
add
adc
push
in
add
adc
jno
mov
ret
sub
lea
jne
flds
rolb
sub
ret
ret
mov
int3
mov
xor
pop
movsl
cmp
call
jge
jbe
in
out
call
scas
lea
out
data16
add
xchg
sahf
cmp
fdivr
lds
push
add
mov
add
and
frstor
mov
add
dec
in
push
add
mov
push
add
dec
push
add
stc
push
pop
push
out
or
ret
mov
fisttpll
sbb
lret
repnz
ds
sub
add
call
add
add
mov
fistl
out
mov
jno
add
inc
aam
pop
pop
sti
leave
aas
lret
out
rcll
add
xchg
add
cmp
add
inc
add
add
add
in
push
add
popf
addb
enter
add
add
movsb
add
mov
sbb
add
add
mov
jns
jp
add
cmp
lock
inc
add
mov
sub
add
sbb
inc
add
mov
xlat
lods
xchg
bound
mov
add
je
jb
data16
outsl
out
sbb
jnp
pop
add
sbb
inc
add
add
aam
sub
add
movsb
add
lds
dec
xchg
mov
jb
cmpsb
add
fidivrs
stc
dec
lods
cmp
cmp
mov
add
mov
add
jmp
add
mov
stos
clc
lds
dec
subl
outsb
add
mov
loop
fsts
sub
add
les
adc
sti
push
add
fstpt
pop
pushf
fcmovnb
cwtl
jnp
mov
repz
add
pop
adc
add
mov
sbb
jbe
test
repz
push
inc
test
cmc
push
icebp
cld
xchg
add
lods
sub
add
add
mov
dec
jle
add
int
xchg
repnz
pop
add
mov
xor
movb
xchg
mov
mov
jl
add
push
addb
in
inc
xchg
add
cmc
or
out
add
mov
push
add
add
mov
add
insb
cmp
add
add
movsb
add
mov
and
ljmp
out
ficoms
into
cld
aam
inc
xchg
xchg
fs
jnp
rolb
ja
add
add
add
incl
mov
mov
add
add
or
sbb
add
mov
xlat
mov
push
add
fwait
xchg
add
sub
int3
testl
add
int
pushl
pushf
testb
add
xlat
xchg
mov
stos
pop
push
mov
jo
cltd
in
int3
lahf
pop
add
repnz
pop
or
cwtl
leave
test
cmp
mov
add
mov
daa
sbb
lock
sub
push
add
testb
add
inc
ret
cmp
dec
xchg
add
add
sub
jo
fdivrs
sub
xor
mov
stos
add
push
add
add
add
mov
adc
sub
inc
add
ja
les
cli
pop
rolb
enter
adc
hlt
add
stc
cmc
cmp
add
out
sbb
into
sbb
push
sbb
lret
push
add
add
or
sahf
inc
mov
mov
xchg
add
push
jbe
mov
loopne
pop
iret
sub
das
mov
add
adc
pop
xlat
movb
test
mov
clc
cld
sti
pop
out
and
dec
pop
mov
pushf
and
push
decl
fbstp
ret
js
xor
xchg
inc
add
xchg
mov
hlt
add
enter
aad
add
pop
mov
add
out
repnz
add
mov
or
stos
rolb
sub
inc
add
xchg
rolb
pop
pushf
dec
sti
sahf
xchg
pop
sbb
add
and
shr
add
add
clc
push
add
sbb
mov
xor
add
stos
int3
mov
in
sbb
lock
mov
sbb
mov
xchg
add
ret
into
xchg
add
add
push
movsl
lock
cli
fldcw
std
add
mov
leave
notl
add
loop
imul
add
add
cmpsb
add
ds
xor
and
add
test
or
or
andl
mov
add
and
adc
pop
lock
push
add
rcl
fbld
xor
je
repz
or
xchg
add
adc
and
and
loopne
inc
add
adc
mov
mov
mov
add
push
add
mov
mov
cmp
cmp
push
pop
cmpsb
add
mov
pop
mov
pop
push
add
in
cmc
adc
lds
sti
lods
sbb
out
adc
add
add
pop
fcomp
mov
mov
leave
sbb
jle
mov
lods
pop
jnp
add
adc
imul
add
add
xchg
pop
inc
push
data16
sub
fwait
mov
dec
mov
loop
test
add
add
or
repnz
add
mov
inc
ds
add
test
cmp
rolb
jl
cmp
stc
mov
add
add
add
add
aad
mov
push
dec
scas
mov
jge
and
andl
inc
dec
and
mov
add
es
int
add
icebp
enter
add
pop
fldt
mov
ret
hlt
add
add
xchg
outsl
in
cmpsb
add
xchg
movsl
inc
add
jg
jo
movb
xor
mov
scas
gs
jns
add
mov
ss
add
cmp
scas
mov
icebp
and
pop
mov
xor
pop
or
mov
add
mov
sub
addl
icebp
pusha
add
mov
lahf
inc
cmc
xchg
into
or
add
jle
jp
add
gs
jle
cs
nop
add
add
add
add
mov
add
mov
test
leave
adc
mov
dec
mov
ds
add
mov
ret
xor
xchg
add
xor
insb
std
or
lds
fidivl
cli
and
add
push
add
add
and
add
add
mov
add
dec
dec
pop
mov
jecxz
jnp
dec
insb
sbb
out
inc
add
add
leave
insb
outsl
pop
and
bound
mov
fcomps
add
stos
mov
pop
inc
add
sahf
addb
add
mov
outsb
into
inc
add
xchg
add
adc
ret
sbb
mov
dec
cmpsb
add
add
aam
xor
aad
cmp
add
dec
roll
and
add
movsl
leave
addb
movsb
add
mov
add
imul
fdivr
xor
imul
rolb
xor
mov
roll
je
and
movb
out
clc
jnp
xor
stc
rolb
add
cmp
pop
cld
xor
movsb
add
jle
aam
push
xchg
add
mov
inc
xor
mov
xor
popf
or
mov
xchg
mov
push
add
fadd
add
arpl
add
int
stos
mov
add
add
pop
sub
add
add
js
in
loop
mov
in
dec
push
inc
xchg
mov
mov
cltd
imul
fcmovb
add
pop
mov
ss
or
rolb
je
aaa
and
mov
add
add
jmp
je
mov
rolb
enter
jns
push
add
and
mov
in
pop
imul
dec
and
push
int
push
rolb
sbb
lcall
mov
cmp
add
pop
incl
in
adc
data16
add
mov
sub
mov
jns
add
jg
xor
jb
lock
mov
inc
add
jle
dec
out
std
addb
movsl
lcall
add
and
stos
mov
imul
aas
imul
bound
mov
inc
add
cmc
mov
cmp
jne
stos
inc
mov
sub
inc
add
lret
adc
mov
call
inc
jp
add
lahf
xorl
mov
int3
and
mov
cltd
dec
cmc
rolb
adc
fdivrl
insl
adc
add
add
ret
rcll
mov
mov
out
push
add
ljmp
push
add
add
xor
es
add
mov
dec
add
add
test
inc
add
add
add
pop
insb
sbb
add
mov
or
add
or
outsb
xchg
push
add
push
add
dec
mov
outsl
testb
fsubl
cmp
test
add
jb
cli
cld
and
mov
add
inc
add
sub
addb
mov
add
bound
mov
or
push
add
add
add
cmp
lret
imul
mov
adc
mov
inc
add
mov
add
adc
jmp
dec
mov
lahf
jne
cmpsb
add
cmc
pop
fs
lcall
mov
inc
iret
mov
sbb
pop
xor
fld
sbb
sbb
fdivl
add
jp
add
pop
sbb
push
add
je
mov
or
sub
mov
and
mov
add
test
daa
mov
inc
add
pop
pop
fiadds
mov
fisttpll
jp
push
jbe
mov
pop
push
adc
lea
cmp
inc
push
add
and
out
xlat
cmc
sbb
stos
lods
fmuls
mov
add
mov
add
rcrl
lods
mov
in
les
movb
xchg
ja,pn
loopw
stos
pusha
add
movsb
add
sbbl
xchg
xchg
add
mov
add
inc
add
testb
adc
add
std
pop
pop
jo
shrl
ds
xchg
add
add
cmp
add
add
dec
and
mov
movb
pop
fnsave
ljmp
jno
xor
pop
lret
sub
and
mov
add
daa
push
add
xchg
push
add
int3
mov
cmp
dec
add
mov
lret
rolb
cmp
and
add
rolb
add
ljmp
add
pop
sahf
xchg
inc
add
enter
add
xchg
ds
sti
fmuls
xchg
add
mov
and
mov
mull
add
add
sbb
test
add
inc
mov
add
sysexit
mov
imul
lds
sbb
loop
xor
mov
add
add
mov
add
add
mov
jae
add
flds
jge,pn
mov
add
push
dec
sbb
insl
sbb
rcrl
mov
mov
fwait
addr16
add
add
aad
push
add
sub
ret
dec
mov
jp
add
xchg
pop
clc
adc
movsl
and
mov
add
loop
push
xor
pop
popa
pop
adc
js
add
push
je
enter
jge
mov
je
imul
xchg
dec
jle
lret
aad
add
add
xchg
add
mov
add
clc
insb
movsl
incl
mov
mov
dec
ret
subl
xchg
pop
scas
cmp
add
int3
outsl
inc
jno
outsb
daa
add
loope
jmp
add
mov
inc
add
pusha
add
add
dec
test
and
mov
add
fwait
aad
add
add
add
add
add
xchg
add
je
mov
jmp
add
add
mov
mov
sbb
sub
add
push
sti
lds
fsts
sbb
ret
add
and
add
add
imul
sub
nop
add
testl
jne
repnz
add
mov
mov
add
gs
add
lret
adc
pop
xor
push
add
add
jo
xor
pop
jge
add
imul
add
mov
add
add
testb
push
stos
jb
xor
decl
push
add
lret
push
add
mov
pop
jmp
lods
jne
testb
pop
testb
mov
lods
bound
mov
fcoms
fcoms
enter
add
add
or
lret
loop
in
mov
push
and
stc
push
add
jmp
push
add
rolb
hlt
add
push
sahf
or
mov
cmpsl
fisttpll
adc
test
or
std
xor
adc
adc
xchg
into
lds
pop
xchg
add
push
inc
pop
jne
push
add
add
mov
add
imull
or
jmp
add
add
push
add
out
inc
inc
add
lret
and
mov
jl
int3
cmpsb
add
pop
mov
adc
imul
sub
stos
adc
stos
icebp
rol
add
sbb
rolb
fldcw
scas
add
test
jo
mov
adc
cmp
cltd
push
add
rolb
add
push
add
add
cli
mov
rolb
les
hlt
add
lods
cmp
add
add
mov
dec
cmp
add
xchg
ficomps
push
add
add
add
cmpsb
add
mov
xor
add
mov
add
lcall
mov
sahf
popf
push
add
push
add
mov
add
mov
dec
jmp
fdivrs
add
pusha
add
popa
xchg
rolb
pop
sbb
adc
add
push
add
mov
add
lea
fwait
mov
add
add
out
repz
mov
dec
mov
jb
sub
mov
fs
xchg
das
xor
add
add
push
call
add
in
std
dec
aas
shll
fldenv
repz
dec
rcrl
je
movb
out
inc
add
push
sbb
cld
stos
mov
pop
movsb
add
addb
add
cmp
je
pop
inc
add
insb
repz
insl
popa
dec
gs
cmp
imul
add
addb
push
aas
inc
add
adc
dec
add
scas
fadd
imul
cmc
xchg
mov
mov
outsb
addb
add
add
sbb
mov
cmp
insl
mov
subl
pushf
xor
pop
dec
stos
cwtl
xchg
jns
repz
add
mov
jp
pop
add
pusha
add
mov
mov
cmp
mov
and
mov
mov
mov
mov
dec
mov
repnz
and
loope
adc
jmp
add
ret
dec
and
add
xor
xchg
clc
jge
aad
and
mov
xchg
add
sbb
add
add
pop
sub
sbb
add
lcall
lods
mov
add
insb
js
std
jo
int
xor
xchg
add
jo
jns
imul
cmp
add
imul
mov
ds
add
add
mov
add
add
pop
push
stos
scas
jae
add
push
add
add
movsl
pop
mov
jae
add
and
mov
inc
add
mov
lds
mov
add
sbb
add
add
cmp
add
push
add
test
dec
bound
mov
bound
mov
add
add
pushf
ja
data16
lret
ja
pop
adc
les
mov
xor
jg
stc
sub
add
add
js
lock
add
movsb
add
inc
daa
je
or
or
les
xor
ret
jge
sub
add
mov
xchg
add
movsb
add
add
add
add
xchg
add
mov
cmpsl
xchg
out
adc
xchg
sub
add
enter
xor
jge
mov
and
test
mov
hlt
add
pusha
add
and
mov
data16
mov
cmp
jecxz
push
add
cwtl
lock
push
add
test
push
add
jbe
pop
push
fcomps
stc
repnz
sbb
push
pusha
add
adc
scas
jmp
add
rolb
mov
add
add
add
jg
add
add
add
data16
addb
and
mov
les
push
add
jno
sub
mov
mov
inc
cmc
add
add
add
add
aas
fldcw
out
inc
leave
mov
add
add
dec
fsub
xchg
mov
insb
loop
sub
jmp
add
lock
lcall
shll
xchg
js
inc
add
leave
xchg
add
jo
adcl
lea
push
add
jnp
inc
add
add
cmp
movl
mov
add
out
leave
inc
and
mov
inc
sub
add
mov
add
addb
and
pop
ja
mov
testb
cli
mov
in
add
imul
pop
add
mov
xor
cmpl
out
into
aam
cmp
add
add
sbb
add
stos
std
lret
mov
add
mov
subl
cli
fsubrl
add
adc
loope
add
add
stos
rolb
rolb
fcompl
rolb
xchg
add
cwtl
push
ja
add
repnz
das
push
je
mov
int
jno
js
call
push
add
add
mov
jnp
popf
xchg
add
sub
pushf
pop
jle
add
out
bound
mov
add
add
push
add
mov
dec
addb
cmp
pop
mov
popf
std
xchg
add
add
add
mov
in
sub
jbe
loop
out
add
add
cmp
adc
cmp
int
lcall
add
add
cmpsl
fsubl
filds
jp
jmp
stos
and
mov
add
add
add
sub
add
dec
dec
rolb
sbb
movsl
outsb
xchg
dec
aaa
fsubl
add
in
mov
rcrl
xchg
call
push
add
lcall
pop
mov
push
insl
out
fcoml
lds
add
add
add
aas
mov
inc
adc
mov
add
stos
adc
and
sub
cmpsl
adc
lea
mov
repnz
dec
scas
insb
xor
jae
jbe
rolb
inc
insl
or
add
add
mov
add
xor
fwait
iret
pop
sub
add
je
les
pop
fdivrl
xor
xchg
add
add
inc
add
add
gs
aaa
hlt
add
sub
pop
fwait
push
hlt
add
xchg
ja
out
push
add
add
comiss
add
loope
test
jge
push
lret
rolb
mov
je
aaa
sbb
pop
out
mov
and
outsb
mov
push
add
pop
dec
dec
ja
add
stos
loop
rolb
sbb
sbb
call
add
orl
cmpl
sbb
add
add
aas
fistpll
mov
cmp
sbb
jle
inc
add
push
sub
push
pop
adc
std
add
mov
mov
rolb
add
dec
mov
cltd
in
enter
popf
jge
add
add
fimull
popf
inc
add
loopne
push
jmp
cmpsl
mov
fisubs
add
in
mov
push
push
cmp
nop
add
arpl
inc
add
inc
add
cmp
add
add
xchg
repnz
and
cmp
mov
sbb
addr16
cmp
stos
xor
aaa
frndint
cmp
inc
add
dec
push
mov
jae
out
dec
or
mov
cwtl
or
imul
xor
jmp
add
dec
out
adc
lret
ds
pop
nop
add
add
push
add
out
mov
add
xchg
add
push
add
sub
add
push
out
adc
mov
add
pop
lret
js
ficoms
add
xchg
add
outsl
mov
jmp
xchg
icebp
movsb
add
add
jmp
in
jbe,pt
aaa
jecxz
mov
add
imul
push
aad
sar
adc
nop
add
jmp
push
add
mov
dec
mov
imul
add
cmp
xorl
popa
adc
test
add
jmp
add
mov
adc
clc
pop
arpl
push
add
mov
data16
add
lock
scas
rcll
pop
popa
jg
cmpsl
arpl
call
lcall
data16
xchg
inc
sub
decb
pop
leave
movsb
add
outsl
in
sub
dec
sub
push
add
lcall
cmp
mov
pusha
add
stos
cmp
mov
and
mov
add
mov
addr16
jmp
add
add
cmpsl
cwtl
jmp
mov
add
add
cmp
sbb
or
aas
fcomip
add
fisubs
jo
jp
inc
add
cmc
ljmp
jo
add
add
clc
add
sub
cmp
pop
sub
add
mov
xchg
jo
pop
rolb
lcall
mov
add
test
sahf
add
pop
movsl
testl
aam
xor
add
mov
mov
add
mov
cmpsl
push
add
mov
add
add
mov
add
mov
adc
add
add
out
mov
faddl
lock
into
inc
std
sarl
or
test
and
mov
add
adc
mov
mov
add
lret
mov
push
add
test
add
add
movsl
push
fistps
xor
push
add
test
sti
and
add
cmp
std
notl
add
in
lret
mov
jle
sahf
dec
pop
testb
mov
push
es
add
mov
ffree
add
adc
xor
mov
in
and
mov
add
xlat
jg
ret
jmp
add
int
cmp
add
add
enter
add
rolb
push
div
or
cli
lcall
stos
sub
fwait
and
add
mov
pop
fbstp
fistps
fwait
jmp
add
add
int
into
lret
jae
add
add
mov
cmpsb
add
add
add
or
mov
loope
sub
add
add
add
add
aas
adc
pop
js
roll
and
xlat
push
lcall
into
mov
add
std
pop
cs
add
inc
push
add
add
inc
add
arpl
scas
sub
addb
add
add
jo
in
sub
rcll
xor
mov
cmp
push
add
add
push
add
test
imul
push
add
out
cltd
add
and
mov
movsb
add
jmp
in
sbb
push
je
sub
cmc
pop
pop
aaa
xchg
dec
jl
mov
cld
pop
push
add
out
mov
mov
out
add
gs
lods
in
push
cmpl
add
cmpsl
dec
fwait
mov
add
add
adc
mov
add
mov
addb
inc
add
add
add
ds
sub
adc
push
addb
fdivl
and
add
sbbl
sub
rolb
jne
mov
cs
daa
jg
leave
cmc
mov
lahf
mov
fcomps
arpl
add
add
mov
fs
enter
bound
mov
cmp
adc
cmpl
scas
rolb
xor
pushf
mov
add
mov
add
sbb
add
test
aas
popf
push
mov
movzbl
std
aas
into
fidivrs
add
xchg
insb
or
add
sub
add
add
hlt
add
dec
cmc
pop
outsl
icebp
add
mov
push
add
add
iret
pushf
addps
xchg
add
add
cwtl
loopne
xchg
add
insl
mov
and
mov
nop
add
add
sbb
dec
fisttpl
out
ret
mov
jmp
add
sub
fidivl
add
add
add
add
movb
cs
add
push
mov
orl
mov
xchg
aas
pop
or
cmp
add
xchg
add
inc
add
psubq
pop
mov
and
mov
fists
xor
mov
sbb
mov
std
das
sahf
dec
xchg
and
adc
fildl
cmpsb
add
movsl
and
ret
ds
iret
repnz
add
lret
jno
mov
add
add
add
add
dec
mov
stos
jp
insb
mov
add
addr16
sub
push
add
sub
mov
outsb
xchg
add
outsl
adc
testb
adc
icebp
es
push
add
mov
jnp
sbb
add
mov
cmc
repz
or
jle
add
bound
mov
sbb
push
add
add
add
mov
je
fcomip
stos
aaa
mov
scas
repz
rcll
pushf
inc
xor
std
ret
sarl
pushf
cmc
cmpsl
sarl
sub
add
mov
in
or
push
add
scas
sahf
ds
jbe
testb
jmp
add
iret
mov
adc
loopne
add
mov
addl
add
and
mov
stos
mov
add
add
dec
jo
mov
fcoms
push
test
shll
xchg
cmp
mov
lock
hlt
add
mov
sub
cmp
std
lock
loop
sub
pusha
add
adc
cmpsl
jno
xchg
dec
and
mov
add
pop
cmp
add
imul
add
movsl
mov
push
jl
add
dec
xchg
fiadds
add
xor
add
mov
and
sbb
js
int3
or
pop
fnstsw
adc
inc
pop
test
add
les
insl
loope
outsb
aam
cmpsl
js
add
in
adc
out
lods
add
mov
adc
insb
popf
data16
adc
out
loop
dec
xor
stc
inc
in
stc
decb
jo
int
add
add
sub
cmpsb
add
movsl
arpl
pop
movb
mov
add
cs
add
add
stc
dec
ficoms
out
mov
insb
lcall
cld
rolb
adc
iret
sbb
icebp
imul
push
add
out
pop
inc
add
mov
add
cmpsb
add
cmp
xor
jge
gs
sbb
mov
mov
mov
out
nop
add
xor
pushf
dec
rcll
xlat
xlat
push
aaa
stos
pop
loopne
add
mov
xchg
sbb
sbb
add
pop
xchg
add
add
xor
cmp
loope
inc
clc
mov
xor
push
add
add
sub
add
add
sahf
mov
dec
xor
pop
jo
stos
movsb
add
push
add
inc
add
aam
sbb
add
das
sbb
hlt
add
ja
add
add
cld
xchg
cltd
lret
sbb
loopne
mov
loopne
rcrl
mov
out
testb
mov
push
add
add
pop
aam
test
or
mov
pop
mov
fcmovnb
add
fstps
or
mov
sub
mov
inc
iret
mov
xor
aad
add
pop
out
out
add
add
mov
mov
fiadds
pop
xor
jns
pop
in
push
add
cmc
or
inc
xor
mov
jb
fs
ljmp
inc
and
mov
add
jns
add
pop
addb
add
or
hlt
add
jle
ret
add
mov
test
in
and
repnz
add
cmpsb
add
add
fmul
fildll
add
add
cmpsl
jnp
aam
mov
pop
sahf
mov
mov
mov
push
add
add
nop
add
test
clc
ficomps
add
push
add
adc
mov
and
mov
sti
cmpsl
xchg
std
fadd
add
mov
pop
mov
test
les
adc
fsubrs
je
roll
mov
add
sbbl
add
sub
adc
add
add
cmp
test
add
add
loopne
cmpsl
hlt
add
sarl
pop
aam
add
pushf
adc
cmp
out
add
ret
push
add
imul
add
addb
movsb
add
daa
pop
jns
add
add
ljmp
cmp
lods
cwtl
pop
fldcw
testb
jecxz
cld
pop
mov
in
push
xor
data16
pop
add
cmp
lret
sbb
add
add
add
add
in
add
add
xchg
pop
mov
jo
push
popa
xor
pop
add
mov
ret
test
ret
push
add
loopne
js
addb
addb
xor
stos
lcall
push
jmp
push
add
add
mov
mov
cmp
call
cmp
fwait
sbb
pop
stos
ds
add
leave
popf
inc
cmpsb
add
add
add
in
fdivrs
aas
data16
mov
and
add
les
fwait
xchg
add
add
mov
xchg
add
dec
mov
aaa
jb
mov
sub
pop
mov
in
mov
add
addb
add
add
mov
in
add
add
insb
push
add
mov
imul
loopne
mov
add
in
mov
pop
or
pop
push
add
jg
jnp
pop
sub
add
push
push
add
movb
sub
outsl
push
frstor
addb
add
ljmp
inc
add
push
pop
out
pop
push
mov
add
pop
or
jecxz
pop
fucomi
inc
add
out
sub
jb
add
call
sahf
mov
xchg
xchg
add
pop
xor
mov
bound
mov
inc
jmp
jecxz
and
ror
sbb
xchg
add
add
inc
sbb
add
pop
and
or
add
jnp
add
arpl
add
add
fiadds
add
lods
adc
mov
cld
jne
xchg
dec
lea
rolb
sti
pop
and
pop
inc
add
add
mov
add
fwait
push
add
inc
add
add
add
sub
testl
mov
push
add
xor
addb
out
enter
add
add
add
loopne
mov
inc
add
add
add
outsl
nop
add
add
jl
mov
leave
sub
push
mov
add
int3
sub
add
jp
enter
adc
dec
outsl
sub
xchg
insb
push
add
cmp
add
rolb
daa
std
lods
pop
push
rolb
pop
cmp
mov
mov
loopne
or
fdiv
add
mov
add
push
add
dec
or
dec
xchg
pop
sbb
adc
push
sti
jbe
rolb
loope
rolb
ja
push
stos
cwtl
sbb
test
dec
data16
iret
clc
push
add
and
add
add
add
sub
popf
pop
aad
lods
or
add
test
jns
add
or
mov
addr16
lret
fsts
fyl2x
and
mov
xchg
mov
fisubl
add
fistps
leave
jo
inc
jg
sti
xor
ret
out
add
popa
pop
icebp
pusha
add
addb
add
add
add
movsb
add
jns
add
add
push
add
pop
sbb
add
add
imul
push
add
lods
sub
hlt
add
jb
jns
mov
rcll
dec
fisubs
fdivrs
xchg
add
push
les
aad
add
jb
in
xor
sub
xchg
add
cpuid
add
lods
xor
jg
or
add
fsubr
mov
sub
adc
xor
mov
bound
mov
add
mov
arpl
and
add
rolb
mov
pop
xor
lahf
rcll
in
push
in
add
add
add
add
xor
rcl
add
add
add
xchg
add
pop
push
imul
jae
scas
out
sub
inc
add
ja
imul
jecxz
dec
cmp
add
add
sbb
add
add
inc
into
addr16
adc
jge
ret
cltd
stc
xchg
add
scas
out
loope
add
jl
ret
add
adc
add
jno
mov
adc
cmp
pop
jl
ja
hlt
add
sbb
xor
mov
insb
add
add
mov
pop
dec
rolb
aam
cs
add
xlat
cmp
add
add
fwait
inc
cmp
test
add
add
jg
push
sbb
add
pop
push
add
aad
add
add
pop
push
add
add
test
popa
mul
add
add
push
sub
cmpsl
ret
dec
mov
adc
mov
sub
add
xor
add
or
bound
mov
popf
sti
jmp
xchg
lret
add
or
aam
adc
scas
xor
add
lret
push
add
rcll
adc
cwtl
loope
xor
mov
xchg
sub
push
outsl
test
loopne
jmp
mov
cmpl
in
popf
or
sbb
std
lahf
adc
dec
sahf
lea
testl
sub
imul
adc
or
mov
mov
fidivrl
sbb
add
mov
or
add
mov
adc
loopne
jns
add
scas
arpl
loop
inc
add
loopne
dec
or
cmp
mov
mov
rolb
jmp
add
add
or
sub
or
scas
leave
lcall
adc
popf
xor
js
hlt
add
int3
push
add
add
test
add
lods
clc
leave
mov
push
add
mov
mov
jnp
mov
jo
lret
add
add
addb
lahf
lods
mov
mov
outsl
out
mov
enter
ret
in
repz
mov
stos
add
mov
mov
add
mov
cld
sbb
add
addb
inc
pop
fdiv
add
add
push
pop
xor
push
add
cmpsl
les
addr16
movsb
add
add
cmp
daa
shl
add
mov
push
add
data16
push
add
add
hlt
add
add
or
rolb
cli
xor
repz
ja
cmp
add
add
add
dec
push
add
or
add
add
xlat
sub
jb
mov
jne
add
xor
mov
ja
movsb
add
incl
add
sbb
sub
add
add
stos
mov
push
push
jno
psrld
jge
pop
enter
xchg
add
push
cmp
js
movsb
add
mov
fistpl
jns
pop
mov
inc
rolb
add
stos
xchg
push
inc
cld
icebp
push
push
add
sub
sub
jl
jmp
xchg
add
sub
jecxz
out
inc
add
sub
xor
into
out
clc
dec
jmp
in
out
in
lock
dec
popa
inc
imul
push
add
sbb
call
sub
clc
push
sub
and
mov
xchg
mov
sti
push
add
add
cmc
and
mov
xlat
push
rcl
add
add
stos
out
xchg
pop
bound
mov
pop
push
add
or
add
ficompl
sub
icebp
les
icebp
push
mov
dec
bound
mov
cs
cmpsl
mov
jb
in
ret
adc
outsb
mov
movb
lock
push
inc
out
sbb
aad
outsl
mov
add
add
xchg
add
pushf
or
mov
outsb
test
pop
movsl
fwait
push
lret
mov
and
mov
xor
cmc
mov
fisttpl
mov
and
sti
mov
ret
mov
cld
xchg
add
cmp
pop
sub
add
mov
mov
repnz
add
aad
add
add
cmp
or
mov
or
mov
add
push
pop
adc
add
add
scas
and
mov
sub
add
imul
add
mov
cwtl
scas
lock
nop
add
and
pop
enter
mov
add
lock
jbe
pusha
add
cmp
ljmp
add
fists
and
pushf
jo
cmp
bound
mov
add
ja
mov
test
lds
mov
jae
add
scas
or
xchg
add
fwait
jg
add
push
mov
cld
inc
mov
add
add
pop
jnp
add
add
loope
push
add
dec
mov
cmp
nop
add
outsb
hlt
add
jne
add
sbb
cs
mov
mov
les
jge
add
sub
scas
hlt
add
repz
mov
cmp
cmpsb
add
add
add
scas
push
add
xchg
push
add
inc
testb
add
add
dec
fwait
jbe
into
arpl
or
rolb
lret
out
sbb
cmp
add
add
or
add
xor
mov
pop
addr16
dec
sub
or
loope
clc
mov
pop
push
insl
sti
mov
enter
pop
scas
aas
inc
cmp
add
add
mov
or
push
pusha
add
mov
inc
sub
dec
fwait
jg
add
jb
and
sbb
inc
add
mov
adc
std
mov
mov
mov
sahf
mov
aam
dec
jmp
jo
lods
imul
jae
out
and
or
mov
mov
add
add
dec
jae
add
add
addb
mov
xchg
add
mov
in
or
add
add
add
mov
movb
add
outsl
cli
shll
daa
scas
mov
add
movb
aaa
add
ds
cmc
lret
cmp
and
add
cmp
add
aam
movb
fs
push
add
add
nop
add
adc
inc
add
add
lds
lock
xor
push
mov
fmul
push
cs
xor
iret
cwtl
sbb
scas
in
jb
scas
faddp
scas
mov
add
add
add
dec
push
ja
mov
rolb
mov
inc
add
push
dec
testb
and
ret
add
adc
fwait
or
jo
rolb
mov
mov
in
subl
add
jb
xor
dec
je
jmp
fildl
add
cltd
dec
sub
enter
mov
mov
addb
add
xor
insl
push
add
out
test
add
add
inc
add
outsl
mov
lcall
mov
mov
add
push
fists
and
xor
push
into
xchg
push
dec
xchg
jbe
inc
add
push
sub
add
pop
ds
push
add
cwtl
dec
call
cmp
jb
fldcw
lds
add
das
les
popf
fisubrs
inc
xor
xor
jnp
pop
repnz
mov
fsubrp
fdivrl
lahf
jne
add
dec
or
sbb
mov
je,pt
and
mov
add
subl
xor
mov
add
add
or
int
add
add
js
popa
xor
je
sbb
push
add
cwtl
cmp
in
add
mov
mov
in
xchg
push
ficoml
rolb
or
and
cmp
add
and
xor
jns
add
mov
imul
lcall
imul
xchg
hlt
add
aam
sahf
add
xchg
add
inc
stos
and
mov
xchg
add
sbb
mov
add
jnp
add
add
push
add
mov
sub
push
add
push
add
adc
xchg
mov
clc
inc
add
add
adc
dec
jg
sahf
push
add
popa
das
into
sub
je
add
ljmp
lods
mov
add
ret
dec
loop
int
mov
add
add
lret
sbb
add
mov
movsb
add
add
add
mov
add
sub
xlat
push
add
pusha
add
leave
cmc
stos
mov
mov
add
mov
add
mov
outsl
xchg
rorl
cmp
pop
ss
xor
mov
add
add
adc
jns
cmc
ljmp
ja
add
fisubrl
lret
add
add
push
insl
lods
iret
inc
add
add
add
add
js
xchg
add
out
mov
jne
add
cmpsb
add
or
cmp
sbb
add
flds
lds
jp
push
mov
mov
mov
add
push
cmp
add
add
cs
pushf
test
movb
pop
icebp
adc
rolb
inc
add
mov
in
arpl
jae
add
dec
insl
cmp
loope
add
add
pop
test
dec
mov
sub
jae
dec
test
add
add
les
pop
mov
add
add
test
stos
addb
push
movsl
push
pushf
int
add
add
cs
lock
add
add
mov
add
jae
jge
add
mov
push
add
rolb
je
xlat
cmp
add
ds
inc
add
pop
inc
add
stos
into
add
shl
add
cmpsb
add
xchg
add
xor
mov
pop
insl
mov
hlt
add
add
add
cli
test
jne
add
add
pop
lock
lea
add
jg
add
scas
sbb
mov
add
add
xor
mov
pop
loopne
mov
cmp
jnp
out
sub
and
mov
out
dec
in
leave
push
cmp
pop
cmpsl
jg
outsl
xchg
inc
add
inc
add
mov
add
sub
cmp
adc
pushf
mov
xchg
add
jge
addl
add
add
add
add
inc
add
pop
enter
out
test
in
jnp
testb
add
add
pushf
adc
repnz
fisttpll
rolb
loope
rolb
mov
cmp
es
push
add
adc
data16
xor
sbb
add
testb
add
add
add
frstor
in
stos
dec
rolb
sti
push
add
addr16
jmp
xchg
add
in
aas
int
push
fildl
insb
xor
add
xchg
add
add
add
iret
stos
test
fmul
add
outsb
and
add
add
add
or
jge
ret
in
in
inc
add
and
pop
cmp
add
xchg
xor
sbb
pop
dec
inc
loop
int3
ja
pop
mov
ftst
add
add
add
add
pop
fsubrs
add
cmp
scas
int3
sbb
cmp
mov
dec
mov
test
pop
out
mov
add
push
add
test
add
lods
repnz
movsl
adcl
pop
popa
adc
add
ds
or
addb
ja
jb
mov
mov
xchg
dec
fildll
dec
dec
outsl
add
fsts
rolb
aam
rolb
and
daa
pop
mov
mov
xchg
adc
lret
add
hlt
add
add
jns
xchg
add
xlat
pop
push
lock
cmc
ficompl
nop
add
add
add
add
mov
add
add
insl
pmaxub
rolb
add
mov
ss
xchg
and
mov
lds
das
add
addb
add
mov
add
add
negl
mov
push
add
mov
cltd
sbb
loop
jle
add
mov
movb
lock
add
adc
into
dec
mov
sbb
xlat
mov
nop
add
stc
bound
mov
je
sti
dec
imul
xorl
sub
and
mov
aaa
adc
jecxz
pusha
add
push
add
xchg
add
lds
jns
sub
add
in
insl
sub
add
add
sub
push
mov
add
imul
add
aam
scas
sbb
int
clc
jo
ret
mov
pusha
add
jg
jmp
pop
pop
insb
daa
andl
add
mov
add
pop
hlt
add
xchg
and
mov
add
les
jo
cmp
mul
add
push
ret
push
add
ror
xchg
add
add
test
adc
je
mov
add
les
mov
movsb
add
mov
add
add
add
sub
subl
sbb
lds
add
lcall
mov
push
add
outsb
roll
cmpsl
mov
cmpl
pop
push
fwait
loop
dec
and
dec
jecxz
in
int3
add
mov
or
add
xchg
pop
imul
loope
lahf
pop
enter
popa
lahf
xorl
movsl
adc
or
or
cs
jnp
mov
push
push
add
add
mov
add
sub
add
adc
add
lcall
add
add
mov
add
push
push
xor
add
outsl
xchg
add
add
mov
testb
addb
add
add
or
and
mov
add
sub
push
add
xor
in
push
push
add
mov
add
and
mov
add
lret
sbb
sbb
fistpl
mov
mov
push
push
popf
cli
nop
add
sbb
add
add
add
add
aam
adc
mov
jns
add
sub
add
fucomip
push
add
pop
cmp
out
add
pop
daa
addb
mov
ljmp
add
fildl
icebp
pop
jb
loop
mov
cli
mov
dec
sub
add
add
movb
inc
dec
sbb
cmp
fstl
bound
mov
dec
pusha
add
sahf
fcoms
bound
mov
je
in
xchg
pop
bound
mov
add
aas
daa
mov
pop
mov
clc
sbb
dec
shll
mov
jne
mov
and
dec
pop
jecxz
stos
sub
jo
sti
insb
movb
xor
cmc
mov
rolb
outsb
or
add
add
add
sub
sbbl
std
jp
aam
push
add
aas
loopne
rolb
pop
roll
icebp
aam
mov
and
add
mov
inc
add
and
xor
jne
add
hlt
add
push
addb
data16
mov
add
adc
xchg
xor
add
and
mov
or
cmp
mov
mov
pop
mov
add
add
add
add
sub
inc
push
add
add
aaa
das
pop
xchg
add
add
loope
add
mov
lret
xor
mov
xor
out
stc
aaa
mov
sbb
adc
push
add
add
add
add
sbb
add
aas
out
xchg
add
add
out
mov
iret
lcall
mov
int3
clc
sub
add
xchg
add
cmpxchg
push
fsubl
xlat
aas
pop
lret
jle
dec
loop
pop
mov
int
dec
and
mov
sbb
add
call
adc
cltd
jno
jo
ja
add
mov
add
adc
pop
hlt
add
mov
fcoms
add
mov
mov
rolb
jle
clc
jmp
sbb
ror
movsl
repnz
mov
js
pusha
add
pop
or
add
mov
jb
xchg
dec
and
mov
xchg
enter
popf
dec
repnz
add
dec
jle
inc
add
add
test
mov
jmp
sbb
or
mov
add
pop
testb
add
testb
add
shll
add
add
add
adc
or
add
movsl
cmp
cmpsl
mov
movb
add
add
movsb
add
push
aaa
sub
xchg
out
jb
cmp
je
inc
sti
pop
pop
adc
aaa
xchg
mov
add
add
arpl
add
imul
add
pop
sub
fsubs
add
fnstsw
loopne
and
enter
dec
inc
add
sarl
aas
cmpsl
adc
and
mov
push
cmp
mov
mov
add
jo
xor
enter
jae
scas
imul
or
dec
cmp
into
test
mull
pop
stc
sub
into
scas
push
push
stos
dec
xor
add
push
pop
stos
or
ret
imul
add
into
leave
lds
data16
inc
add
sub
add
cmp
push
add
add
lret
add
sub
push
add
push
in
jb
or
or
cli
mov
cli
or
add
into
xor
mov
sub
fdivrp
dec
xchg
pop
mov
aad
cmp
and
add
add
decb
test
ja
lret
sub
add
js
mov
add
sbb
jle
add
out
add
jge
js
add
mov
pop
rolb
ret
mov
add
mov
jbe
cmp
add
add
xor
pop
and
mov
loopne
outsb
icebp
jle
out
cwtl
in
push
leave
xchg
add
jae
add
mov
jl
add
pop
and
mov
arpl
add
je
fwait
xchg
add
rolb
loop
push
add
xlat
or
ret
stos
mov
loopne
mov
sbb
in
data16
cmp
outsl
lret
test
add
enter
push
add
jnp
addb
add
xor
stc
dec
and
insb
stos
sub
push
aad
je
push
add
add
sbb
mov
add
out
out
add
pop
loope
lods
sub
add
add
pop
xchg
add
movsl
pushf
inc
add
fnstenv
fildll
add
add
add
add
mov
add
sbb
cld
roll
dec
sti
push
add
insl
add
dec
adc
lds
adc
push
cmp
mov
in
lret
mov
in
incb
stc
in
sbb
fucom
outsl
lahf
imul
xor
inc
push
cs
xor
dec
and
mov
push
lmsw
add
enter
orl
jnp
add
pop
and
mov
add
add
sbb
add
in
jge
add
loopne
ficomps
add
pop
dec
inc
roll
add
cld
jbe
clc
push
add
push
add
dec
clc
pop
inc
repz
and
add
sub
add
out
bound
mov
cmp
add
loopne
lods
xor
push
add
add
jmp
add
jbe
or
aaa
mov
stos
push
dec
insl
dec
fiadds
cmc
outsb
test
add
adc
insl
clc
pusha
add
mov
or
loop
pop
mov
mov
pop
movsl
filds
add
rolb
imul
inc
sahf
jg
popl
adc
add
add
pop
pop
dec
rolb
pop
sub
add
pop
adc
je
cmp
lcall
add
nop
add
loopne
cli
push
pusha
add
jge
cmc
xchg
mov
xchg
add
or
data16
add
dec
or
lock
add
jp
pop
int3
rolb
add
xchg
sub
add
les
lock
sub
xchg
add
add
data16
jae
imull
arpl
add
xchg
sub
jp
add
pop
mov
gs
mov
add
xchg
add
add
cmp
addr16
add
add
aad
add
dec
fdivl
inc
add
xchg
add
movsb
add
mov
add
add
inc
add
cmp
push
add
add
mov
mov
repnz
mov
sbb
add
out
dec
lcall
add
sbb
pop
inc
test
xchg
jno
add
fidivs
dec
adc
push
add
ja
pusha
add
xor
scas
les
mov
sub
add
add
add
xor
add
add
in
dec
imul
jp
add
lods
push
xor
out
movb
add
insl
pop
jb
cmp
xchg
repz
ds
or
adc
or
mov
addb
rorl
add
mov
add
add
mov
sub
cmp
add
dec
inc
mov
xchg
mov
mov
mov
adc
xchg
add
push
add
gs
ljmp
add
imul
add
add
nop
add
push
add
ret
or
mov
addb
pop
cmp
testb
in
mov
adc
movl
jnp
lock
add
rolb
pop
dec
sbb
fs
lcall
mov
in
adc
push
add
loopne
jno
cli
jecxz
cmpsb
add
cmp
stos
in
sub
add
inc
fwait
pop
cmp
add
add
add
das
outsb
push
jns
shll
push
add
in
xchg
ljmp
mov
add
mov
add
std
sbb
fwait
addb
add
adc
mov
add
and
std
dec
jp,pn
add
outsl
in
leave
addb
insb
mov
repnz
adc
lods
adc
fsubrs
pop
in
lea
add
mov
iret
add
test
add
mov
sub
test
pop
int
mov
cmpl
addb
pop
cld
out
stc
lahf
xchg
add
stc
lahf
fwait
les
push
add
pop
and
mov
popf
aaa
push
add
push
add
lahf
push
sub
add
add
add
jl
lds
add
add
add
mov
int3
inc
fsts
jb
mov
jle
jp
rolb
add
ret
sar
mov
add
sbb
add
cli
adc
sahf
incb
inc
add
mov
pop
mov
sahf
daa
mov
xchg
add
test
push
call
add
cwtl
jg
test
sbb
xchg
push
cltd
and
mov
pushf
jmp
aam
dec
mov
xor
out
add
mov
popf
fildll
mov
in
cmp
add
push
or
pop
les
mov
out
leave
add
incb
popl
popf
loope
loopne
cmp
pop
mov
xchg
add
add
leave
adc
jnp
add
mov
shrl
popa
mov
add
add
add
adc
push
push
pop
leave
inc
sub
add
stos
and
mov
stc
arpl
jg
add
and
mov
or
xor
inc
add
or
add
and
mov
push
out
mov
mov
add
hlt
add
inc
fdiv
add
xor
mov
add
add
xor
hlt
add
mov
dec
out
dec
push
add
inc
add
addr16
and
call
add
test
jmp
push
add
mov
dec
test
jae
add
aaa
mov
and
lret
in
stos
pop
mov
fimuls
add
pop
cltd
movsl
mov
clc
or
mov
add
pop
cmp
addb
cmp
add
pop
fucomip
mov
add
inc
add
pop
pop
jne
add
stc
add
add
add
add
mov
mov
sub
inc
dec
insl
xlat
xchg
daa
roll
mov
or
add
add
sti
cmp
add
scas
das
jmp
lea
pop
and
arpl
add
jmp
add
add
mov
loope
push
jae
mov
rorl
inc
mov
test
nop
add
add
insb
out
push
cs
rolb
pop
dec
xor
xor
incb
add
sbb
mov
and
mov
add
xchg
clc
dec
mov
push
add
jp
add
popa
pop
xlat
xlat
cmp
add
dec
mov
test
inc
add
pop
push
add
mov
rolb
into
mov
xchg
add
out
fdivrl
movb
fadd
add
add
fnstsw
add
add
dec
dec
sbb
lea
add
das
push
add
pop
inc
add
jae
add
jo
mov
popf
shl
add
sbb
sbb
sub
or
add
cmpsl
push
popf
jge
mov
push
add
add
mov
inc
and
xchg
movsl
mov
fwait
jns
adc
jge
repz
into
xchg
add
iret
aaa
cltd
jg
dec
jecxz
xor
adc
add
cmp
add
adc
mov
je
js
dec
add
adc
ds
sbb
gs
mov
add
add
rolb
add
nop
add
fcom
addb
add
jecxz
les
mov
stc
xchg
mov
push
add
add
mov
mov
add
daa
fildl
mov
jl
inc
add
ret
and
int
add
jle
stos
dec
sti
adc
int3
and
pushf
jae
mov
add
fimuls
mov
add
mov
aam
scas
push
add
mov
add
push
add
imul
jo
or
add
push
add
mov
push
add
inc
sub
add
cwtl
xchg
add
popf
aaa
pop
cli
aaa
xchg
add
adc
add
in
je
mov
xor
fcomi
mov
add
test
mov
jae
pop
inc
add
enter
lods
test
lret
mov
out
add
or
add
add
push
add
or
add
add
pop
inc
add
test
out
sahf
movb
test
add
add
jns
xchg
mov
loopne
cwtl
cmc
movb
add
add
aaa
ja
add
add
bound
mov
scas
xor
jae
add
and
mov
addr16
das
pusha
add
and
mov
ret
add
mov
add
add
mov
add
ds
add
dec
fimuls
add
pop
push
repnz
jno
pushf
or
mov
hlt
add
xor
xchg
les
inc
add
imul
stc
push
add
dec
xor
add
cwtl
shl
sub
nop
add
call
add
xchg
add
mov
xchg
and
mov
cmc
and
shll
pop
cwtl
insl
leave
add
fistl
dec
mov
cmpsb
add
and
mov
das
sbb
add
xor
add
jb
sbb
mov
add
mov
add
add
incb
or
lcall
mov
jno
addb
push
cmpsb
add
add
and
push
adc
jg
sahf
int3
cli
dec
jmp
ret
dec
adc
add
das
dec
jno
cmp
adc
mov
push
add
mov
rolb
loopne
pop
sub
nop
add
add
xor
bound
mov
add
xchg
add
add
loop
cmc
cmp
movsb
add
cmpsb
add
add
ljmp
fists
xchg
jno
in
arpl
add
add
add
adc
iret
movsl
push
scas
sbb
sahf
stos
or
add
iret
leave
sub
dec
cmp
add
xor
add
sbb
add
push
mov
addr16
sbb
inc
sti
sbb
inc
mov
add
dec
adc
xor
jb
cmp
lea
aad
xchg
ljmp
int3
insl
push
push
cmp
cmc
mov
push
cmpsb
add
mov
inc
add
xlat
lret
ja
xchg
jp
xchg
add
cwtl
pushf
add
mov
cmp
add
push
or
shll
push
sbb
pop
or
push
add
inc
das
testb
pop
std
push
cmpl
xchg
cmc
or
enter
xchg
add
add
xchg
add
mov
push
test
fsts
cs
rolb
jo
lods
repnz
push
add
push
jae
add
repz
add
leave
daa
adc
mov
xor
mov
mov
add
add
test
push
add
xchg
je
add
add
