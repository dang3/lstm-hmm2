int3
sbb
dec
xor
pop
sbb
dec
cmpsb
jne
or
popf
loopne
add
sub
lcall
add
cmp
cmp
sbb
add
add
inc
add
or
mov
mov
add
aas
mov
leave
adc
lds
pop
cli
cmp
lret
sbbl
add
adc
jmp
out
ljmp
dec
addr16
sub
xor
and
repz
add
add
or
pushf
jne
sbb
fidivrl
das
stos
cmp
sub
push
and
jmp
sbb
add
jno
pop
arpl
pop
aas
rol
add
add
sti
or
mov
mov
push
mov
ret
xchg
nop
ret
call
popf
cmp
in
loopne
mov
xchg
mov
inc
call
dec
adc
xchg
rcl
cwtl
jb
fucomp
mov
pop
pop
shll
xchg
aam
jb
daa
xor
movb
pop
aaa
and
aad
test
test
or
sbb
scas
sub
inc
add
mov
push
pop
xlat
jo
or
inc
cs
pop
mov
in
xlat
rcrb
enter
movb
lods
fs
fstps
addb
jg
and
aaa
nop
push
mov
lds
add
push
push
mov
or
sub
sub
mov
addb
inc
add
addb
mov
mov
mov
or
dec
dec
xchg
fwait
mov
or
adc
call
jmp
mov
leave
mov
mov
mov
add
out
mov
fistps
xchg
or
jmp
outsb
push
and
dec
dec
xchg
pop
cmc
repz
popa
rorb
in
jns
add
fs
push
push
sub
ret
xchg
mov
and
xchg
sbb
mov
add
pop
dec
movb
mulb
cmp
mov
lret
mov
movsb
fiadds
mov
add
in
jbe
aam
iret
and
cwtl
cmp
shr
cmp
jp
mov
lds
add
lock
xchg
xor
scas
lcall
ret
cmp
add
in
insb
cld
and
sbb
or
bound
pop
repz
cmp
add
rcll
push
pop
xchg
sti
stc
or
out
movsl
sub
or
mov
sbb
add
add
mov
inc
add
pop
stos
lret
jo
push
sbb
ret
cmp
icebp
mov
mov
mov
sub
push
decl
mov
loopne
mov
cmp
mov
xchg
push
adc
add
cmpsl
sub
inc
add
xchg
mov
fldenv
cmp
sbb
stc
outsl
inc
add
sbb
pop
and
pop
mov
cmp
xchg
jno
jae
and
sti
cld
lahf
hlt
rcrl
adc
inc
mov
jbe
push
jmp
lock
daa
pop
scas
test
loope
fidivl
add
int
in
inc
pop
sub
dec
data16
add
adc
jne
rcll
inc
add
into
jecxz
lcall
scas
mov
jmp
mov
stos
repz
mov
jno
mov
addb
dec
out
ret
pop
xchg
push
add
outsb
popa
bound
or
jb
xchg
repnz
mov
mov
jne
add
add
adc
sbb
pop
insl
shll
repz
add
dec
repnz
adc
or
repnz
out
mov
add
sub
je
sub
inc
pop
pop
cmp
add
lea
hlt
pop
call
out
sbb
jp
pop
jnp
scas
push
cmpsl
xor
mov
add
loope
add
int3
add
scas
push
insl
insl
and
idiv
xor
push
pop
aam
inc
add
rolb
leave
adc
sti
test
adcl
mov
daa
cltd
aam
pop
and
daa
ljmp
std
and
add
jne
dec
in
inc
add
hlt
xlat
jl
cmc
pushf
mov
je
dec
sbb
inc
sbb
mov
dec
lods
mov
cmp
sbb
lea
aam
fucomip
gs
push
mov
lock
test
dec
mov
xlat
mov
pop
mov
out
imulb
js
mov
mov
push
out
outsb
shrb
iret
or
lret
js
xchg
or
lock
lahf
xor
add
je
dec
mov
mov
xchg
sub
sub
hlt
sarl
lcall
addb
test
fisttpll
cld
push
jmp
sbb
loopne
movsl
pop
fwait
imul
pop
add
negl
ret
pop
jno
jnp
ret
sbb
repnz
aam
out
mov
addb
fisubl
add
xchg
movsl
push
push
push
sub
mov
enter
sbb
push
mov
push
sbb
movsl
scas
dec
ffreep
add
cmpsl
arpl
jl
scas
lods
int
repnz
outsl
adc
adc
mov
cmc
sbb
push
xlat
call
jl
dec
add
fcompl
push
lods
inc
add
xor
cmp
mov
add
sbb
movb
test
push
inc
xchg
lahf
outsb
fnstsw
xchg
lret
add
pop
flds
adc
mov
mov
lods
cmc
scas
ficompl
cli
addb
inc
add
jnp
xchg
fdivrl
jp
mov
mov
xchg
jbe
add
mov
sub
jl
mov
inc
add
sbb
adc
shrl
and
cltd
mov
int3
std
das
ret
pop
addb
test
cmp
add
sbb
xchg
or
xor
ret
jl
add
add
bound
mov
sbb
hlt
pop
cmpsl
mov
xchg
insb
and
mov
add
mov
dec
pop
sahf
dec
bound
jae
addb
mov
je
xchg
lahf
pop
xchg
addr16
push
xchg
sahf
aam
ret
or
sub
dec
dec
and
xchg
in
jg
nop
mov
mov
rolb
mov
cmp
xor
in
int3
inc
add
jae
shr
hlt
bound
adc
inc
add
lahf
xchg
and
cmc
lods
nop
ds
mov
loope
mov
ds
sub
lea
adc
fwait
cmp
xor
rcr
cmp
add
sbb
movsb
xchg
and
adc
pop
test
jle
add
addb
add
add
int
cmp
fcmove
fidivrl
xchg
jo
pop
stc
xor
sub
test
mov
sbb
mov
addb
rorb
xchg
addr16
or
pop
outsl
adc
jne
outsl
xchg
outsb
dec
push
adc
repnz
out
into
xchg
pop
fs
dec
addb
xor
xor
out
add
adc
xlat
sub
add
movb
add
sbb
in
inc
jbe
jl
sbb
or
add
dec
push
add
daa
out
jp
addb
out
imul
cmpsb
add
hlt
in
lret
inc
xchg
addb
js
or
js
push
lods
inc
pusha
add
lds
pop
scas
push
or
xlat
push
loop
pop
test
scas
adc
aam
int3
xchg
aaa
test
imul
stos
dec
ficoms
mov
and
aas
pushf
ret
push
or
mov
inc
lods
inc
sub
imul
push
add
out
mov
imull
fsubrs
stc
jl
jmp
add
add
jae
sahf
orl
push
stc
aad
stos
xchg
jo
pop
pushf
inc
add
push
dec
and
aaa
shlb
and
cld
arpl
add
cld
cmp
pop
mov
add
lret
mov
std
out
js
decl
inc
insl
aaa
enter
lods
dec
push
dec
out
rolb
jnp
jecxz
jecxz
daa
lods
sbb
push
imul
test
cs
std
mov
cmp
fadds
inc
push
movb
arpl
xchg
movsb
lahf
roll
bound
insl
cmp
sarl
dec
pop
jp
push
out
pop
push
das
push
sbb
fcmovbe
int
dec
jne
das
iret
movb
xchg
popa
dec
pop
popa
xchg
movsb
mov
nop
mov
lret
mov
jp
cmp
mov
sub
push
jne
push
push
ret
loope
scas
pop
add
inc
add
jle
pop
jb
push
add
int
jle
push
mov
push
push
xchg
or
add
push
in
fdivl
dec
xchg
jo
int3
lds
inc
add
addb
pop
ja
mov
sub
fmull
mov
add
daa
testb
jle
imul
outsb
stc
decb
in
pop
hlt
aaa
scas
cld
fidivrl
insl
mov
icebp
mov
xor
rolb
xchg
jae
add
insb
cwtl
xchg
dec
ret
stc
ljmp
and
push
movb
jbe
push
pop
das
test
sbb
add
sahf
popf
xor
cld
or
in
mov
inc
add
stos
and
sub
icebp
lcall
jle
loope
add
xor
inc
lret
rolb
xor
xchg
shrl
in
aam
sub
inc
leave
roll
aad
push
add
xor
jmp
into
and
jns
cmp
mov
mov
xor
cmc
and
xchg
repz
sbb
ret
pop
mov
aaa
loope
push
and
or
stc
adc
mov
scas
mov
add
push
pop
addb
add
adc
sub
ret
jno
outsl
sbb
add
ret
cmc
xor
xchg
fiaddl
pop
adc
pop
mov
movsb
mov
inc
pop
pop
cltd
cmpsb
sahf
ret
into
aaa
dec
mov
mov
xorl
jbe
pop
daa
mul
aaa
pop
fwait
push
mov
xlat
data16
xor
add
call
dec
jmp
cli
sbb
and
cmp
sub
add
jmp
lock
pop
inc
add
push
cmp
jne
bound
fsubrl
adc
movaps
insb
jno
add
fdivs
loop
mov
test
shll
sbb
and
mov
loopne
cmp
jns
mov
dec
mov
xor
push
xchg
pop
jno
notl
lret
movd
jle
add
repnz
sub
mov
xlat
mov
adc
lret
lods
pusha
add
dec
nop
mov
mov
add
inc
add
sub
push
nop
ret
pop
or
and
add
cmp
mov
test
adc
sub
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
push
cltd
cmpsl
xchg
rcll
push
sahf
std
aam
jg
les
jb
iret
adc
stc
cmpsl
add
push
add
movb
add
jne
inc
add
pop
mov
pop
dec
loope
dec
pop
stos
hlt
addr16
xchg
in
mov
loope
in
mov
idivl
push
mov
mov
add
or
shr
dec
ror
push
or
mul
sub
imul
cmp
mov
add
xor
or
addr16
adc
add
push
or
add
xchg
and
fmuls
jl
cmpsl
push
and
mov
xor
add
add
pop
outsl
lock
and
mov
xor
inc
add
add
popf
mov
fcomps
repz
out
scas
mov
xor
jno
add
aam
ljmp
addb
sbb
call
xor
mov
mov
mov
adcl
adc
insl
scas
repz
repnz
mov
or
pusha
add
jmp
movsb
movsl
dec
cli
es
aaa
dec
add
loopne
pusha
add
je
or
or
addb
jae
add
test
cvtdq2ps
loop
stos
addb
fadd
add
xor
lea
add
popf
jns
cmp
rolb
jecxz
scas
mov
movb
ljmp
fwait
adc
idivb
lods
fnstenv
mov
dec
out
push
pop
les
idivl
gs
add
pushf
xlat
int
mov
xchg
inc
in
aas
movsl
testl
mov
push
dec
push
loop
jmp
add
xor
add
dec
movb
jle
xchg
or
push
dec
xor
xchg
rcrl
shll
pop
sub
adc
inc
add
mov
jns
pop
xor
adc
sbb
lock
daa
adc
das
insb
stos
iret
push
out
jb
mov
adc
jae
fimuls
incl
cltd
je
mov
or
dec
sub
pop
loope
iret
sub
lods
ret
aas
or
mov
cmp
add
addr16
mov
adc
add
mov
mov
jns
mov
pop
call
gs
repnz
nop
lahf
aas
jae
add
add
outsl
arpl
add
fdivl
notl
out
pop
fbstp
ret
add
les
dec
lock
inc
xor
pop
in
inc
pop
push
pusha
add
addb
sub
sub
lds
mov
jb
repnz
ret
lock
add
dec
popf
std
cmp
loope
xor
mov
xor
repnz
stc
mov
movsl
shll
movb
fsubrl
xchg
xorl
aad
sub
or
lds
adc
push
add
inc
add
inc
add
cmp
jae
push
add
sarl
data16
imul
xchg
cmpsl
in
das
jecxz
leave
fstl
bound
adc
jbe
cwtl
adc
inc
add
sub
xor
fdivrl
push
lea
stos
jmp
jge
cltd
jnp,pt
adc
icebp
pushf
das
mov
addb
rdtsc
push
and
adc
xchg
mov
enter
stc
insl
lods
sub
add
daa
inc
pop
sti
push
push
push
and
fnstcw
das
fmulp
inc
sbb
jg
sbb
outsb
cmp
mov
add
adc
inc
cltd
cs
enter
cld
sahf
jmp
xchg
stos
pushf
sub
repnz
bound
dec
lock
add
pop
pushf
push
dec
shrl
imul
push
add
fidivrs
ret
sti
and
out
pop
xlat
stos
lods
jbe
sub
loop
add
add
jo
add
inc
add
dec
mov
cmp
outsb
add
subl
movsb
ret
gs
mov
push
les
rolb
es
repz
mov
incb
add
insl
dec
filds
lods
mov
mov
popf
stos
cltd
push
movntps
repnz
pop
imul
fstpl
xchg
pop
je
fdivr
and
rcrl
sbb
hlt
adc
sbb
push
iret
orl
fcoms
jo
sbb
lock
xchg
or
xor
inc
add
ret
dec
js
fxch
cmpl
es
mov
and
ds
or
push
rcr
ja
ds
test
in
jb
inc
imul
jae
daa
xchg
mov
pusha
add
xchg
jecxz
pusha
add
mov
add
jb
or
das
cwtl
sub
outsl
pop
jne
xor
push
xor
add
divl
add
and
fldcw
add
pop
outsl
push
and
movsb
cmp
loopne
mov
mov
jae
xlat
sub
sub
icebp
call
inc
pop
clc
out
fmuls
je
pop
scas
inc
add
leave
cmpsl
les
fisubrs
nop
cli
mov
add
sub
add
jbe
or
ljmp
and
popa
out
push
add
sbb
sub
mov
pop
sub
add
lea
loopne
data16
leave
mov
ret
mov
adc
vmwrite
rolb
scas
pusha
add
pop
in
adc
pop
pop
lds
pop
mov
xchg
add
and
cmp
xchg
icebp
push
out
cwtl
xchg
and
add
or
inc
add
fucomi
decb
int
aas
mov
ret
cmpsl
das
data16
scas
mov
or
add
mov
cmc
pop
call
xchg
jmp
sbb
pop
adc
mov
ljmp
sahf
xor
xchg
inc
add
mov
arpl
push
add
aas
xchg
xor
aad
xchg
xor
lock
mov
and
aas
add
mov
mov
mov
test
nop
lea
nop
mov
cmp
mov
sti
daa
xor
add
je
and
inc
cmp
add
repnz
pop
push
cmp
cmp
push
pop
idivl
fnstsw
orl
addl
test
movsl
dec
ja
pop
int3
pop
ror
sub
dec
ljmp
outsl
sub
add
outsl
lods
and
inc
in
jl
pop
jge
jmp
xchg
test
mov
fdiv
cmp
push
lret
jae
dec
js
lock
cmp
push
enter
pop
or
mov
xchg
and
loop
int
ja
cmp
adc
int3
cmp
xor
gs
add
xor
aad
nop
inc
add
pop
pop
imul
add
shll
mov
add
add
sub
js
addl
test
jnp
sbb
les
pop
dec
or
cltd
stos
clc
sub
mov
xchg
loop
out
mov
add
push
das
loope
cmp
loopne
mov
in
mov
push
sub
mov
ficomps
cmp
mov
mov
jno
ja
das
cli
pop
out
repz
or
loopne
pop
push
arpl
jnp
mov
aaa
popa
lds
daa
sbb
dec
adc
dec
inc
rcl
ljmp
imul
jnp
mov
pop
push
add
sub
cmp
jno
loop
js
push
call
jbe
int
add
scas
adc
lcall
ret
and
loope
les
inc
test
add
fsubp
sub
push
dec
loopne
sub
test
xlat
sldt
push
imul
cmp
and
imul
and
das
sub
add
jnp
xor
xchg
push
jecxz
dec
cltd
lahf
gs
aad
out
push
mov
sub
hlt
fwait
aaa
movsb
push
jge
bound
dec
popa
dec
mov
mov
ss
add
aad
jbe
xchg
and
movb
xchg
insl
movsb
cmc
add
ret
fiadds
xchg
repz
stos
lock
jmp
push
mov
cltd
aam
cmp
jmp
imul
mov
add
add
or
add
movsb
and
gs
push
adc
js
ja
lahf
std
adc
mov
cmpsl
stc
repnz
cmp
dec
fisubl
idivl
add
mov
rolb
xor
push
into
stos
or
add
daa
xchg
fcoml
inc
add
int3
mov
pop
inc
add
scas
sub
add
adc
add
cmp
loop
aam
fwait
mov
outsb
push
or
add
xlat
enter
and
repz
leave
insb
popf
push
add
subl
mov
add
addb
inc
outsl
or
andl
push
cmp
xchg
jns
or
lahf
mov
cld
lods
adc
pop
jl
add
out
add
dec
test
in
ffree
jns
jne
call
outsb
testl
xorl
add
or
scas
rolb
call
fs
pop
adc
dec
sub
enter
pushf
lods
push
insl
test
add
jge
add
fadds
icebp
cmpsl
pop
mov
or
xor
jl
push
aam
xchg
pop
jmp
in
add
cli
pop
mov
mov
jg
lcall
loopne,pt
daa
push
pop
lds
add
add
push
sub
add
lds
xor
add
mov
add
and
add
aas
lcall
xor
add
or
rcrl
add
js
pop
js
mov
loope
insl
push
in
inc
push
xor
dec
arpl
js
jl
cmpsb
lods
push
xor
add
lods
add
or
orl
in
push
or
rol
hlt
mov
rcrb
add
fdivrp
or
decl
cli
dec
ss
ret
cld
dec
hlt
addb
stc
icebp
std
push
ficoms
pop
loope
repnz
and
shrl
fxam
pushf
inc
jns
fstpl
sahf
jle
imulb
cmp
imul
imul
add
call
dec
dec
dec
movsl
scas
cmp
add
mov
cld
cld
inc
add
add
mov
stos
je
leave
push
in
xorl
xchg
jle
hlt
idivb
lcall
and
outsb
jb
xchg
jmp
das
mov
pop
sbb
rcr
cmpsb
xor
movb
pop
repnz
lods
fs
testb
jmp
cs
push
aas
mov
add
popf
xchg
sub
aam
out
iret
push
addb
jne
pop
movb
ja
test
fwait
nop
mov
addb
test
addb
enter
jnp
sub
inc
add
add
mov
lock
add
les
push
idivb
jge
aam
out
gs
pop
push
out
cmp
fdivrs
inc
add
inc
add
sub
aad
add
pop
dec
add
inc
add
add
les
aad
lret
mov
add
addb
xchg
sbb
les
les
rolb
add
mov
test
cmp
jbe,pn
das
push
out
pop
lahf
jp
in
and
in
test
sbb
stos
mov
les
fstpl
add
push
out
push
add
ja
cmp
mov
inc
add
pushf
enter
and
js
adc
stc
cmp
jns
push
in
sbb
add
sbb
cmp
add
jecxz
scas
add
adc
out
nop
shlb
call
pop
cmpsb
push
cmpsb
fmul
jmp
xor
adc
pop
lahf
sahf
dec
testb
out
xchg
mov
out
inc
enter
incb
iret
ds
pop
jmp
adc
sub
or
push
sbb
lahf
or
mov
test
adc
cmc
xchg
ret
fisttpll
test
cli
xlat
sbb
out
xchg
shrb
test
add
add
add
ss
mov
inc
sti
addb
mov
jo
daa
out
mov
inc
add
outsb
mov
inc
add
divb
outsb
les
jmp
bound
xor
mov
and
xchg
mov
div
add
push
cmc
shrl
xor
add
lds
add
aam
xchg
out
pop
iret
mov
mov
das
daa
loopne
imul
inc
mov
mov
mov
jno
dec
inc
add
xorl
mov
mov
mov
mov
jne
les
and
push
mov
ds
jp
and
sbb
jmp
into
and
xchg
adc
outsl
sti
mov
and
dec
dec
inc
mov
sbb
push
or
les
lahf
push
jle
int
pushf
cmp
ror
push
add
rcrl
add
sbb
lods
lcall
add
pop
pop
cmp
add
sbb
or
insb
inc
sarb
ljmp
dec
iret
and
add
push
scas
rolb
jb
out
sbb
ljmp
push
rolb
loope
mov
mov
in
dec
xchg
addb
lock
fcmovnu
hlt
data16
iret
movb
mov
pop
das
adc
jle
lea
add
rolb
out
push
xchg
ret
jmp
outsl
xchg
dec
test
add
add
inc
add
xchg
mov
xor
add
cld
loope
push
movsl
xor
sbb
mov
jns
push
sar
xchg
dec
in
sub
pop
jnp
mov
mov
jne
rcr
sub
stos
repnz
mov
cwtl
sti
insl
jge
lea
insb
mov
pop
xchg
sbb
cld
sbb
and
xor
or
dec
ficoms
cld
insl
xor
addb
test
jl
stos
jno
fadds
xchg
jno
push
orl
out
adc
cmp
or
ds
inc
add
jne
fnstsw
jb
xor
sahf
faddl
test
outsl
pop
sbb
adc
int
or
add
push
jge
and
pop
jns
test
mov
mov
lret
out
in
xchg
pop
ljmp
mov
dec
or
bound
cmp
dec
aad
aaa
adc
mov
push
mov
loop
aaa
push
xchg
sub
imul
mov
pop
cmp
mov
pop
ljmp
out
scas
push
mov
shrl
aas
xor
pop
popa
adc
mov
lods
adc
dec
fcom
sub
xchg
and
add
pop
push
ljmp
lods
shr
push
sbb
mov
in
xor
iret
xchg
jl
mov
icebp
daa
sub
loop
xchg
push
js
movb
out
lods
pop
pop
pop
loope
dec
dec
mov
loopne
test
add
mov
inc
addb
mov
push
dec
cltd
push
xchg
repz
sbb
cs
dec
xchg
lods
das
sub
das
stos
rclb
bound
push
mov
stos
mov
inc
add
jns
pop
enter
xor
fstl
test
and
dec
push
nop
jmp
sbb
call
xor
sbb
in
mov
addb
or
sub
hlt
dec
jo
dec
mov
add
out
push
cmp
out
iret
dec
sbb
jno
push
outsb
and
adc
push
dec
pop
or
push
adc
je
out
data16
out
pop
nop
jbe
pop
stc
test
xor
ret
aam
mov
mov
add
mov
and
fldt
stos
or
cmp
mov
xor
bound
add
pop
cmp
jae
add
push
pop
dec
sarl
xor
fimull
mov
or
stos
and
xchg
sub
cmpsl
adc
movsb
mov
fildll
incb
inc
xor
mov
test
or
out
push
jb
ret
daa
loop
ljmp
cmp
out
sub
xchg
cmp
in
add
jae
cmp
in
mov
loopne
loop
mov
xchg
bound
jg
sbb
add
or
pop
cmp
push
lahf
stos
adc
fdivrl
in
and
movsb
movsb
pop
pop
add
mov
lods
das
add
add
xlat
add
mov
jb
clc
add
cs
ret
dec
pop
xchg
xor
pop
inc
add
mov
mov
cmp
add
jo
adc
mov
loop
js
mov
jnp
scas
sahf
sbb
add
dec
mov
push
inc
add
aad
add
xlat
scas
pop
pop
faddl
fimuls
sahf
push
jle
cmp
and
jbe
test
or
cmp
aam
imul
bswap
or
cmp
push
aas
xor
imul
cmp
shll
sbb
imul
inc
add
mov
cli
popf
cltd
mov
mov
in
push
sahf
push
loopne
add
add
orl
rcrl
cmp
add
sbb
lods
mov
std
test
stos
add
repz
popa
lret
jno
lds
push
xchg
es
jmp
xor
fiadds
mov
adc
and
sbb
clc
fidivs
xorl
add
js
add
neg
mov
loopne
lea
lods
pop
dec
test
push
jns
insb
sub
mov
or
push
xor
sub
call
mov
dec
shlb
jns
xchg
popa
popf
ret
add
cmc
pop
jne
fcmovne
inc
sub
push
cmpsl
sbb
jb
repnz
pop
pop
add
cmp
mov
ds
mov
add
repnz
dec
dec
inc
add
cmp
cmp
outsb
aad
add
push
jne
add
and
push
and
push
add
sub
add
pop
dec
jecxz
add
dec
sbb
xor
sub
or
ds
test
cmp
adcl
int
dec
xor
mov
lcall
adc
mov
mov
les
lcall
repnz
sub
loopne
jns
add
fwait
dec
xor
data16
push
xchg
and
mov
jb
cld
xor
sti
stos
aad
scas
cmp
pop
scas
fdivr
xchg
cmp
mov
imul
push
les
xchg
sbb
dec
sbb
cli
iret
and
adc
add
daa
movsb
push
shll
pushf
mov
addr16
sub
rolb
xor
xchg
or
inc
add
roll
mov
das
cmc
sbb
in
aaa
mov
add
flds
cmp
jno
sbb
push
xchg
push
add
test
jae
mov
adc
add
pop
jne
dec
add
divb
popf
pop
fwait
mov
add
outsb
stos
sbb
add
testl
ffreep
add
data16
scas
inc
add
push
sbb
inc
add
outsb
mov
xor
insb
mov
movsl
xor
push
std
outsl
pop
fcompl
jl
mov
push
xchg
je
dec
aaa
loope
bound
and
jecxz
insb
cmp
pop
xor
mov
loopne
jae
scas
movsl
sbb
mov
inc
jns
pmulhuw
xor
cmpsl
xor
insl
shrl
xlat
lds
inc
add
sub
dec
sbb
mov
fstpl
dec
outsl
or
inc
add
push
adc
xchg
lret
cmp
shll
stc
lods
popf
enter
or
mov
in
push
loope
in
stc
sbb
lret
inc
lods
idiv
cmp
out
cmp
cmovb
test
adc
mov
sub
sbb
ss
aam
mov
test
jp
enter
test
repnz
jnp
fisubrl
fidivrl
push
add
xor
outsb
stos
mov
add
popa
std
repnz
std
cmp
add
popa
stc
and
lcall
jnp
or
push
sub
push
movb
adc
add
xchg
nop
movb
adc
fcomp
addb
popf
mov
fsubrl
push
out
insb
icebp
dec
sub
repnz
clc
pop
mov
mov
fisttpl
insl
nop
std
scas
or
add
stos
push
cmpsl
adc
jb
lods
xchg
push
cmp
decb
jno
fadds
pushl
insl
out
mov
push
ja
lock
pop
xchg
jecxz
push
lea
outsb
mov
push
xchg
dec
hlt
enter
sbb
mov
jl
and
and
fs
cmp
mov
ljmp
outsl
bound
int3
imul
popa
mov
sahf
jae
add
push
repz
in
inc
repnz
sub
jmp
jle
adc
adc
aad
xchg
outsb
dec
adc
xchg
inc
add
sbb
add
or
data16
sahf
push
pop
lea
push
test
repnz
mov
lcall
inc
cmp
scas
dec
mov
std
cld
inc
push
fstp
sbb
cmp
jmp
sahf
dec
mov
cld
mov
push
stc
adc
sub
mov
cmp
lcall
fwait
data16
jnp
dec
ja
jno
into
mov
add
out
sub
jge
pop
push
mov
jmp
lret
jp
cmp
imul
popf
ljmp
mov
and
push
add
sbb
add
mov
out
sbb
sbb
bound
mov
xor
add
hlt
adcl
je
add
test
add
aam
xor
call
mov
sti
adc
and
shlb
and
add
lret
mov
add
jno
xchg
xchg
dec
repz
mov
call
mov
jb
addb
push
xor
mov
lea
aas
pop
push
hlt
stc
pop
std
pop
fsubrl
js
insl
scas
divb
addr16
pushf
hlt
xchg
cmpsb
push
add
sti
cmpsb
pusha
add
fsubs
mov
je
insl
sbb
enter
mov
push
or
icebp
sbb
mov
in
or
pop
ss
adcl
inc
out
push
add
xor
sub
in
adc
mov
enter
jo
add
mov
pop
push
xchg
mov
out
xor
ja
pop
pop
into
sub
cmc
and
jno
jp
add
fs
iret
roll
push
and
sbb
ss
sbb
iret
lret
lock
ss
gs
mov
sarb
dec
add
cmp
cmpsl
inc
add
int
test
iret
jno
imul
fadds
xchg
fcoms
shl
lea
mov
je
dec
xchg
xor
xor
mov
push
add
and
stc
jg
or
jmp
mov
jo
ds
lds
mov
add
dec
sti
cmc
xchg
xchg
jae
sahf
je
xor
lea
repnz
adc
dec
testb
dec
sub
jmp
mov
add
dec
mov
test
xchg
pop
call
xchg
push
xchg
push
sbb
add
test
scas
and
ljmp
leave
lret
int3
add
sub
or
xchg
pop
je
pushl
aaa
jns
mov
adc
ljmp
dec
push
mov
cmc
mov
imul
xor
or
fmuls
cwtl
ret
cs
es
pusha
add
cmp
push
mov
jne
aad
jge
in
push
xorl
movsl
and
sarl
movb
outsb
int
mov
stos
cmp
idivl
fistpll
add
mov
arpl
mov
pop
sub
inc
add
addb
gs
inc
add
add
shl
inc
add
dec
jae
mov
mov
add
cmp
inc
add
jo
inc
add
loope
and
inc
xchg
mov
rcr
inc
push
loope
add
cwtl
ret
in
lock
xor
mov
and
push
das
push
push
sbb
stos
iret
aaa
clc
xor
add
pusha
add
lock
ficomps
mov
out
aas
iret
es
or
lea
inc
imul
add
inc
divb
out
sub
popf
ret
and
cs
dec
jecxz
mov
lods
xchg
inc
add
mov
cmpsl
push
fldl
cld
fmull
ja
in
sbb
call
add
insb
or
gs
data16
cmp
mov
sbb
or
and
add
les
xchg
fs
aas
mov
stos
outsl
and
push
add
stos
or
and
and
and
bound
mov
cs
cmpsl
xor
dec
sbb
movsb
mov
add
addb
sbb
mov
add
es
jmp
cmp
jo
dec
stc
xor
sbb
jle
cmp
xchg
and
push
mov
jge
icebp
scas
ljmp
xorl
jp
rcrb
sub
lods
pop
loopne
gs
andl
icebp
cmc
fdivs
add
es
fbstp
pop
adc
mov
mov
nop
or
jns
adc
enter
adc
mov
rolb
hlt
mov
or
cmp
stos
fstpt
and
sbb
dec
mov
sbb
dec
rcl
xchg
imul
add
xchg
icebp
inc
xchg
lahf
sub
int
sub
rep
rolb
pop
andl
in
jge
cwtl
outsl
mov
mov
add
hlt
movsb
cmp
cltd
cltd
sti
mov
adc
push
pop
stos
pop
dec
xor
scas
popf
mov
dec
pusha
add
adc
mov
fstps
test
and
adc
shl
jecxz
add
mov
cmp
inc
fmuls
push
cmpsb
orl
icebp
shl
subl
repnz
mov
jp
or
cmp
pop
mov
fisttps
mov
or
mov
imul
nop
inc
add
xor
fwait
push
pop
cmpsl
dec
orl
push
addl
lods
mov
mov
and
aas
insw
shll
push
adc
aam
jmp
adc
mov
aad
pop
jle
pop
xor
jbe
sub
add
cs
pop
cmc
mov
mov
add
or
pop
les
xor
jl
shll
je
inc
add
js
mov
xor
or
push
adcl
xchg
lock
xchg
insb
mov
push
sbb
push
addr16
es
sub
out
sti
dec
cmp
out
shll
mov
mov
jb
lcall
add
xchg
out
mov
and
loope
xor
cmpsb
xchg
insb
dec
rcrl
lcall
xor
xchg
add
movb
std
jp
scas
ficompl
and
es
adc
loope
sub
pop
pop
mov
add
and
lods
cld
aam
add
lret
cli
jmp
addb
cltd
mov
push
in
mov
popa
shrb
mov
jno
mov
mov
mov
js
out
xor
add
pusha
add
add
pop
arpl
rcl
mov
add
mov
lea
or
xor
loop
jl
orl
push
pusha
add
fisttpl
mov
cmc
xchg
stos
ret
lock
add
cmp
pop
lods
jnp
inc
add
cmp
cmp
push
addr16
xchg
add
ret
add
push
add
xor
cmp
add
sbb
scas
jae
and
cmc
roll
ss
cltd
cmp
cmp
int
filds
in
push
rolb
faddl
add
sub
pop
xor
adc
xchg
dec
fmull
arpl
jp
jo
imul
fistpl
or
push
and
cmp
shll
pop
ficoml
xchg
xor
cmp
jne
jg
add
mov
pop
imul
push
lret
sbb
xchg
pop
outsb
mov
sbb
mov
imul
repz
xchg
addb
xor
in
call
xor
add
add
lret
fwait
ja
pop
cmpsl
pop
or
and
movb
aad
pop
jmp
mov
jmp
cmp
int
pop
xor
add
loope
aam
add
sub
and
sahf
aad
mov
xor
enter
jg
out
lret
adc
cmp
add
aas
pop
test
ja
dec
cmpsl
addb
mov
jae
cmp
cmp
add
jns
inc
add
insb
insl
jg
ret
pop
aam
pushf
mov
pop
adc
pop
mov
mov
add
and
pop
ret
adc
xor
movsb
and
inc
out
jnp
cli
fsubl
mov
das
jnp
xchg
aam
leave
mov
xchg
push
rolb
testb
lcall
cmp
xchg
cmpsl
cwtl
dec
add
sub
push
pop
pop
pop
cmp
add
addb
lret
add
mov
push
jns
fcoml
add
add
mov
add
out
jno
scas
imull
dec
in
pushf
and
xor
push
jl
fiaddl
add
add
and
dec
sahf
fsubrs
in
push
xchg
adc
ja
pop
fsubs
add
mov
popf
mov
iret
loopne
pushf
sub
aam
pop
mov
mov
ret
jo
je
inc
add
lock
dec
cmp
adc
add
fcompl
xchg
push
mov
orl
xchg
in
out
jns
outsb
or
fsubp
shll
xor
push
add
movsl
lret
cmp
push
fldt
sbb
call
mov
dec
cwtl
ret
inc
add
inc
add
xor
dec
jp
dec
adc
add
jo
leave
dec
loop
push
cmpsl
lock
daa
mov
inc
sub
addb
or
mov
jmp
jns
das
xchg
inc
add
in
dec
or
in
cs
sub
sub
add
jbe
loope
add
push
sbb
add
adc
pop
push
inc
add
sub
xchg
mov
pop
mov
and
dec
adc
cmc
jmp
xor
iret
fwait
jb
test
add
out
arpl
inc
xor
inc
xor
sbb
fnsave
sub
inc
add
les
jns
push
xchg
in
add
sub
pop
je
mov
inc
add
push
sbb
scas
cld
ficoml
add
cltd
test
add
dec
dec
mov
sbb
gs
pop
sub
lds
cmpsb
das
aaa
sub
mov
es
inc
jno
nop
dec
jecxz
cwtl
int
je
and
sub
sub
rorb
sub
pop
pop
mov
adc
stc
rcrb
xchg
leave
in
stos
jg
push
enter
adc
mov
in
add
ljmp
lret
clc
sub
cmp
lret
sub
sbb
xor
inc
add
mov
inc
or
adc
rclb
push
dec
test
ja
cmpsl
ret
adc
add
xchg
sub
lret
aad
js
push
aad
mov
lea
adc
cmpsb
imul
repz
movb
jg,pt
insb
movsb
mov
add
jbe
add
push
daa
push
mov
xchg
xchg
notl
xor
jae
notl
repz
xchg
add
xchg
mov
enter
nop
adc
in
jge
fldt
mov
out
mov
movb
test
test
insl
nop
add
add
xchg
and
addb
shrl
loopne
and
fisttpll
xchg
jle
hlt
xchg
jecxz
ret
adc
add
dec
pop
push
push
jo
adc
sbb
loope
int3
jl
add
cmp
and
outsb
pop
aad
negb
sbb
push
loope
xor
add
ja
repnz
cs
jno
and
mov
jecxz
fs
adc
pusha
add
add
add
test
adc
add
stos
adc
mov
adc
in
in
fwait
insb
xchg
cmpsw
mov
dec
in
inc
add
dec
addb
add
add
add
dec
and
mov
add
lcall
ja
or
insb
movsl
fwait
lahf
icebp
movsl
sbb
aaa
std
xchg
cld
cmp
repz
mov
xchg
mov
cs
and
mov
out
into
or
inc
mov
pop
or
pop
inc
add
pop
and
cmp
mov
aas
movsb
fldcw
add
pop
xor
rolb
mov
add
jae
adc
jo
addb
inc
add
test
rcll
sub
xchg
cmp
outsb
jmp
cmp
mov
and
mov
cmc
xchg
pop
xchg
pop
out
movsl
jmp
iret
pop
or
adc
fdivr
mov
iret
insb
add
adc
cmp
xchg
mov
and
push
mov
mov
popf
addr16
frstor
sbb
fsubrl
add
sahf
jp
add
inc
add
fbstp
aad
cwtl
stos
sti
lds
or
push
out
inc
imul
adc
jecxz
imul
jnp
cli
sbb
pop
pop
mov
clc
loope
lods
or
fwait
arpl
mov
lods
movsl
jmp
add
xor
xchg
push
or
add
cli
mov
inc
add
xchg
mov
push
lret
jle
cmp
or
adc
das
in
sti
lods
mov
xor
rolb
shrl
sbb
int
cmp
mov
jns
lret
pushf
push
add
sbb
xor
push
lds
cmp
in
aad
dec
and
scas
scas
test
lds
scas
pusha
add
pop
dec
out
ja
sahf
lahf
out
jae
fildll
adc
mov
sub
addb
sub
mov
fsubrs
mov
jg
add
or
movsl
and
test
sbb
lahf
std
sar
or
fcmovne
les
pop
sarb
std
mov
mov
push
rcll
inc
add
lods
push
fildl
jl
loopne
pop
and
rorb
mov
add
cmp
inc
popa
fldl
xchg
in
inc
add
hlt
ret
mov
jl
inc
add
cwtl
std
mov
or
push
add
rorl
mov
inc
add
add
lcall
aam
aam
incb
pusha
add
push
rcrl
add
nop
in
push
cmp
aas
rcll
into
mov
mov
add
and
xchg
inc
add
and
mov
push
stos
insb
loop
mov
pusha
add
xchg
iret
add
dec
loopnew
mov
sub
jno
lcall
insl
pop
addr16
clc
pop
ja
mov
cmp
xchg
mov
mov
inc
add
xor
cs
fsubrl
mov
movsb
dec
add
lods
ficoml
cmp
int3
adc
loopne
push
and
jmp
je
movsb
sti
out
inc
add
xchg
arpl
call
cmp
jns
pop
fiaddl
pop
rorb
not
push
jns
out
popf
mov
inc
add
scas
cmp
pop
jecxz
in
inc
add
shrb
cmp
add
lret
xor
push
cld
es
dec
lret
sbb
and
out
cmpsb
mov
inc
add
xchg
roll
std
loope
or
add
ret
or
jmp
aam
xchg
lock
cmpsl
mov
mov
test
push
cld
dec
dec
test
aad
sub
sub
jne
cltd
loope
dec
mov
add
call
xlat
sbb
xchg
adc
and
add
add
imul
add
sub
les
sub
addb
int
ja
ret
addl
or
jg
push
add
jge
add
jl
das
dec
mov
push
mov
xchg
jecxz
push
jbe
insb
leave
sbb
clc
shrb
movsb
sub
out
aad
xor
out
cmp
jle
inc
add
pusha
add
mov
insb
cmpsb
pusha
add
mov
and
xchg
pop
out
push
xchg
xchg
cld
mov
add
scas
fsubrl
and
imul
sbb
ss
add
push
mov
sub
push
cmpl
in
add
add
fdivrp
xor
add
cs
imul
addb
stos
repz
add
add
xor
xchg
dec
inc
add
int3
inc
sbb
mov
insl
aam
xlat
jge
add
aaa
std
xor
fs
movb
out
push
into
in
iret
jne
sbb
push
push
jmp
sub
cmp
dec
sub
adc
sbb
pusha
add
xchg
les
icebp
cltd
push
inc
add
adc
add
adc
add
aaa
mov
sbb
add
push
xchg
leave
mov
fldt
icebp
dec
addb
jle
lods
mov
loop
push
inc
mov
sub
ja
in
imul
sbb
jns
mov
or
mov
mov
roll
popf
mov
xor
je
cmp
add
sub
mov
lret
sbb
and
add
xchg
inc
mov
loopne
nop
sbb
mov
test
hlt
push
testb
inc
mov
and
and
ffreep
add
in
sub
fmuls
dec
push
sbb
fxtract
or
push
add
adc
add
adc
xchg
push
cmc
imul
mov
add
sti
clc
test
xor
in
xchg
aad
or
fisttpl
daa
add
xchg
sti
mov
mov
lods
das
mov
and
cli
sbb
xchg
adcl
mov
inc
add
dec
addb
mov
or
test
adc
xchg
sub
pushf
sbb
adc
adc
sti
push
and
out
add
mov
icebp
imul
or
in
and
pop
xor
je
push
aas
mov
adc
into
jle
fs
popa
mov
lcall
test
push
sub
xchg
jg
pop
test
jp
add
test
jecxz
mov
pop
xchg
shll
inc
add
das
cmpsl
cmp
mov
mov
or
mov
inc
add
les
mov
push
or
jle
aas
aas
fcoms
push
movsl
jns
into
jge
pop
cwtl
rcll
sbb
arpl
add
filds
cmp
jge
xchg
inc
add
out
testb
dec
test
in
add
pusha
add
jb
call
sbb
add
sub
mov
je
push
aas
imul
add
fsubrs
cmp
jmp
cmp
add
dec
adc
addr16
mov
fs
fnstcw
aaa
jecxz
add
dec
xchg
inc
add
xchg
adc
add
lcall
cmpsl
pop
es
add
repz
inc
insb
dec
push
cmpl
push
add
lods
or
les
xor
mov
xchg
mov
add
test
gs
mov
jns
movsl
fwait
add
push
add
xchg
adc
push
sub
daa
mov
add
xor
xchg
mov
aad
movb
lret
xchg
pop
mull
jp
cld
pop
lds
mov
jo
lods
jmp
or
mov
in
push
sbb
int
sub
jecxz
add
push
dec
push
es
sarl
data16
loope
addr16
out
addr16
rorl
dec
rolb
cmp
jnp
xchg
xchg
cmp
pop
jle
push
popa
mov
nop
incl
add
mov
adc
je
mov
adc
add
aaa
call
fdivl
jle
jnp
lret
iret
bound
imul
mov
ds
push
notb
pop
in
fiaddl
mov
lahf
mov
inc
add
sub
add
mov
pop
cmp
xchg
ljmp
movsb
ficoms
pop
in
mov
test
xchg
addb
xchg
xor
jl
fimull
dec
outsb
cmp
jnp
add
push
xchg
mov
mov
dec
jmp
popf
sub
pop
scas
push
arpl
push
gs
rorl
addl
pop
push
add
add
sbb
or
add
add
pop
cmp
leave
push
stos
movb
hlt
and
xchg
jmp
or
inc
dec
or
push
bound
into
fstps
stos
clc
xor
pop
jbe
cli
cmp
xor
add
add
add
in
cmp
adc
adc
mov
inc
add
dec
test
daa
test
jle
lret
vunpckhps
inc
jo
jl
jno
cmp
add
sbb
add
mov
xlat
inc
add
je
ss
mov
sbb
test
out
sbb
or
int3
xor
iret
dec
pushf
pop
outsl
adc
xchg
xchg
sahf
lret
push
cltd
adc
add
clc
add
out
lret
ds
fcomps
push
scas
ret
and
lret
xchg
arpl
add
push
lret
idivb
add
sub
pop
mov
pop
std
and
pop
xor
sbb
std
addl
mov
les
scas
sbb
push
test
addb
nop
pop
cli
cmpsl
sbb
or
shrb
rcll
int3
adc
inc
les
dec
xlat
mov
outsb
lret
xor
sbb
movups
leave
cmp
fcmovne
sahf
add
pop
sti
out
pop
xor
add
cltd
xlat
mov
sbb
add
lahf
jp
pause
rolb
cwtl
add
push
daa
push
sub
mull
flds
mov
inc
add
cmpsl
add
add
hlt
ljmp
pusha
add
bound
in
xor
or
out
imul
pop
dec
lcall
or
add
sub
mov
mov
jmp
dec
adc
scas
pop
dec
call
ffree
add
call
incl
cwtl
jae
shr
xchg
sbb
in
cs
sub
mov
ja
cwtl
lcall
jb
ret
ficoms
jo
mov
call
mov
add
cmp
or
add
xor
dec
jns
mov
mov
cli
rcll
sub
incl
adc
mov
mov
sbb
xor
dec
addb
addb
add
add
cmpsb
cmp
popa
nop
jmp
add
rolb
ds
pop
push
cmp
or
add
sahf
rcl
add
add
and
ja
andl
call
and
mov
stos
and
or
jb
int
add
sbb
test
adc
add
mov
jns
xchg
inc
add
in
inc
add
stos
insl
mov
into
jne
leave
sub
outsl
dec
ret
xchg
or
mov
and
or
add
icebp
jmp
add
in
cmp
jg
push
fstl
add
xor
xchg
mov
repz
cwtl
ret
mov
lds
inc
add
sbb
int
arpl
add
push
sti
notb
les
inc
add
cmpsb
xchg
clc
lds
test
mov
dec
mov
aad
cmc
scas
fcomip
sub
cltd
test
sub
dec
inc
push
or
lds
fistpll
sub
sti
popa
enter
inc
push
sbb
xchg
cmp
add
movsl
fs
hlt
cs
pop
ret
sbb
jo
aaa
mov
fstps
xor
and
dec
sub
add
and
ret
adc
pushf
push
add
jecxz
xor
sub
add
add
adcl
dec
fnstcw
in
cmc
addb
xchg
into
xchg
add
jno
and
ss
add
pushf
les
sbb
shlb
add
jno
add
mov
inc
stc
dec
outsb
xlat
int3
jl
dec
lcall
aaa
out
pop
jae
add
and
jbe
sub
sbb
das
wrmsr
scas
rcrl
sti
shll
cmp
imul
fmulp
sbb
sahf
movsl
mov
clc
sarl
sub
mov
xchg
out
cmp
lock
jb
loope
mov
add
dec
out
std
mov
adc
mov
fadds
mov
jle
pop
push
cmpsb
lods
out
lcall
and
mov
sbb
hlt
sub
pop
jae
xchg
cmp
adc
pop
and
enter
mov
jnp
jae
clc
outsb
gs
iret
out
or
xor
pop
ljmp
jnp
xchg
or
insl
shlb
stc
stos
mov
cmp
pop
pop
jae
push
int
ds
jne
jg
addb
repnz
js
jge
add
add
addb
dec
bound
mov
cmc
repz
addr16
add
addb
xchg
add
add
dec
jae
ror
mov
sbb
or
mov
enter
cmp
fstpl
scas
cs
test
mov
test
cwtl
sbb
and
push
outsb
pop
cld
lods
add
adc
xchg
decb
test
add
pop
jb
dec
or
push
jmp
mov
pusha
add
into
cltd
jle
mov
lods
push
pushf
xchg
rep
add
add
jg
ljmp
adc
in
cmp
mov
mov
sti
rolb
movsl
bound
push
xchg
arpl
je
shl
jmp
stos
movnti
dec
in
sbb
das
mov
pop
mov
leave
mov
mov
ret
pop
enter
aam
add
out
and
xchg
jne
shlb
cmp
jbe
mov
mov
mov
jmp
mov
stc
adc
dec
imul
sar
inc
dec
push
das
jb
ljmp
mov
imul
add
pop
pop
lret
movsb
mov
insb
mov
jp
ja
js
adc
push
mov
add
xor
out
or
popf
lods
pop
outsl
mov
dec
sub
mov
jne
mov
mov
test
adc
je
sbb
mov
inc
dec
or
inc
add
mov
out
data16
dec
rol
scas
loop
jmp
jp
faddl
add
fstps
mov
popa
mov
sarb
ss
addb
cmp
rolb
jle
sbb
mov
fisttps
std
out
xor
ljmp
loop
sub
mov
and
repnz
leave
test
inc
mov
pop
lret
mov
inc
add
jb
sbb
push
push
cli
fwait
add
outsb
mov
add
dec
jl
mov
push
addr16
adc
pop
fnstcw
cmp
jb
pop
inc
add
add
call
icebp
cmp
cmpsb
ret
or
cmp
shl
dec
cmp
add
gs
mov
mov
inc
add
pop
jecxz
jnp
jg
pop
xlat
adc
mov
ds
xchg
jmp
cmp
jmp
and
add
lods
mov
call
enter
xchg
mov
add
mov
rolb
mov
jmp
incb
aas
std
xchg
mov
rolb
roll
adc
mov
mov
push
and
fcmovnb
add
leave
lahf
push
sbb
pop
or
jecxz
add
push
repz
jl
mov
notb
addb
test
add
add
inc
into
sbb
rolb
fistl
fwait
enter
cmp
jg
negb
mov
mov
push
pop
dec
insb
mov
shlb
mov
jp
sbb
lret
xchg
addb
ror
jne
out
mov
ret
addr16
cmp
dec
daa
in
and
add
or
insl
lea
aas
jle
add
or
mov
cmp
xchg
ret
ds
pushf
jmp
lcall
add
inc
jae
cld
imul
or
mov
adc
outsb
push
and
cltd
js
pop
mov
add
in
adc
add
loop
bound
ljmp
out
jl
jno
push
add
push
call
xlat
mov
imul
jns
jmp
test
xchg
in
call
mov
add
addb
repz
or
add
jo
lret
inc
xchg
in
push
lods
popf
jne
jno
loop
add
popa
inc
add
jne
lret
inc
sbb
jmp
add
add
add
ficomps
jmp
mov
vcvtss2si
jnp
pop
lret
aad
cmp
push
add
movsb
or
push
and
lea
sti
in
movsb
aam
xchg
repnz
mov
jbe
pop
jle
jecxz
and
jns
test
and
sbb
ljmp
imul
xchg
loope
in
and
sub
pop
sub
popf
add
out
sub
fsubr
xchg
add
out
push
bound
inc
frstor
pop
pop
inc
inc
add
fmull
fbstp
dec
addb
xchg
pop
fnstcw
rorl
jb
fisubrs
or
xchg
vpaddsb
mov
push
mov
loop
mov
add
push
sti
in
xchg
jge
push
lods
push
popf
pop
sub
sub
sbb
push
xor
mov
ljmp
into
repnz
xchg
scas
inc
add
xchg
cld
jg
inc
call
push
stos
imul
lahf
xchg
in
loop
lret
pop
popf
mov
pop
imul
test
setne
popf
xchg
xchg
inc
shll
jle
push
add
movb
pop
push
rolb
add
add
daa
jne
pop
add
fdivrs
pop
add
cmp
add
ficompl
adc
fs
fcoms
mov
xor
mov
dec
push
add
loop
sahf
or
and
and
add
jp
mov
or
mov
movsl
bound
mov
pushf
sub
or
mov
dec
mov
enter
fwait
loop
add
jo
mov
add
leave
mov
mov
lods
xchg
aam
push
test
sub
test
lods
jle
push
lds
dec
stos
ret
sbb
add
jle
shlb
wbinvd
imul
mov
xchg
jno
mov
jg
push
add
push
test
add
push
imul
fldt
adc
aam
inc
out
test
jo
mov
or
add
mov
add
call
idivl
mov
sbb
adc
cmc
and
inc
add
xchg
fadd
add
in
fisubrs
cld
scas
loop
filds
add
pop
pop
fs
or
add
xchg
loopne
fsubl
or
test
lcall
dec
lods
ss
push
inc
add
lret
lret
es
inc
sub
out
negl
xorl
sbb
xor
inc
movsl
in
rolb
dec
lock
jnp
mov
sub
nop
push
dec
cmp
xorl
addb
add
or
pop
lahf
mov
sub
mov
je
add
enter
cs
scas
std
pusha
add
addr16
lret
add
mov
jecxz
pop
outsb
cld
movb
lock
mov
jg
aaa
pop
and
in
xor
mov
imul
push
pop
subl
sti
xchg
inc
cmp
in
mov
cmp
jnp
js
sahf
mov
push
add
push
add
divl
jae
cmc
mov
inc
add
cmp
add
xlat
mov
js
addb
push
pop
push
fiaddl
aas
or
xchg
add
movsb
push
gs
mov
dec
ficomps
push
add
push
dec
push
stc
cmpsb
xchg
jecxz
and
add
inc
mov
push
shll
sub
fidivrs
mov
and
cmc
inc
add
test
gs
or
dec
outsl
xchg
hlt
jns
dec
sarl
mov
popf
jl
mov
sub
pop
icebp
inc
fsts
adcl
scas
clc
and
push
nop
fstps
adc
add
pop
mov
adc
adc
adc
cmp
lret
add
and
insl
sti
xchg
jg
add
push
bound
mov
push
inc
mov
or
or
cmpsb
test
js
jge
sbb
pop
mov
out
int3
sbb
je
cmp
movb
adc
aad
pop
dec
sbb
push
xor
xchg
lea
cmc
mov
test
daa
mov
inc
add
inc
add
scas
jmp
cmp
aaa
gs
xor
add
in
stos
jne
cmp
lret
mov
push
add
test
daa
cltd
xchg
je
lea
cs
out
leave
sub
outsb
lret
addb
shr
mov
or
add
mov
xchg
fdivrl
sahf
ficomps
bound
and
mov
cmpsb
and
mov
fistpl
popf
leave
sbb
sti
outsb
xchg
push
jne
xchg
cmp
adc
add
push
or
rolb
cmp
or
shrl
push
call
sub
rolb
cltd
add
xchg
dec
push
movb
lods
mov
pop
addb
aas
mov
mov
add
cmc
and
pop
stos
mov
add
call
sub
jne
lret
adc
in
stos
mov
pop
je
jg
add
xor
dec
jge
in
pop
and
xchg
xchg
mov
pop
out
addb
xchg
addb
xchg
sub
sahf
cmp
jo
rep
jnp
bound
push
in
scas
jae
mov
or
jo
fs
testl
mov
fstpl
pop
rorl
sub
int
add
or
cwtl
sub
sbb
out
mov
sbb
jo
cld
aad
jge
xchg
dec
mov
jne
lea
xor
outsb
or
pop
xlat
and
lret
pop
or
jae
xchg
adc
in
icebp
sub
and
push
inc
add
jno
add
xchg
into
xchg
popf
sub
xchg
addr16
adc
jg
xor
jge
add
dec
xchg
xor
mov
sbb
repz
cs
inc
add
sub
cmp
mov
scas
pop
sub
jae
addb
sarl
add
mov
jb
and
mov
cmpl
cmp
sbb
or
adc
mov
call
jns
xchg
out
jb
lods
xchg
call
pop
js
pushf
in
push
imul
and
repz
push
add
push
add
in
or
jp
dec
cmp
stos
fs
xchg
jg
stc
mov
fnstenv
lds
add
pop
aad
stos
xor
into
or
mov
pop
xor
and
mov
add
jae
loopne
add
cmc
test
or
pop
cmp
call
pusha
add
daa
mov
mov
jl
std
cmp
stos
adc
clc
or
and
mov
in
add
subl
mov
pop
je
call
cmp
cmp
insl
and
data16
cli
mov
add
and
dec
adc
xor
cltd
xor
out
xor
add
mov
jno
mov
sbb
mov
xor
ret
add
ja
ret
fimull
mov
ja
jne
dec
pop
jb
lcall
add
jne
insl
inc
add
inc
add
shrb
dec
mov
bound
or
lods
dec
rcl
loop
cltd
pop
xchg
loopne
mov
andl
sarl
cld
movsl
aad
das
popf
adc
pushf
addb
sub
xor
pop
mov
add
insb
jp
add
pop
push
imul
pop
sub
lahf
jl
mov
icebp
fs
into
xchg
ret
aas
incl
into
aam
jbe
or
aam
mov
in
jbe
std
dec
mov
ror
insl
jbe
mov
mov
pushf
cmc
es
daa
xchg
adc
xchg
je
jecxz
cld
cmp
adc
aad
lret
add
cltd
jne
jmp
pop
mov
cmp
xchg
jae
rcrl
mov
fbstp
adc
pop
lcall
jle
fstp
arpl
xor
inc
dec
rolb
rcrl
push
jmp
inc
outsl
lock
xor
add
rcl
out
aas
jp
fdiv
aaa
in
cmp
bnd
add
repz
or
roll
and
fs
jg
mov
sbb
jae
xchg
jno
sub
xchg
and
push
adc
cmpsl
jae
dec
sbb
lock
pusha
add
adc
ss
in
dec
jmp
testl
jb
add
out
popa
test
sub
add
test
add
lea
mov
imul
sbb
ljmp
fistpll
stos
imulb
add
or
mov
sbb
jnp
dec
negb
ror
pop
xchg
movsb
cmpsl
mov
add
iret
not
lahf
sub
jge
sub
cmpsb
out
mov
addb
adc
jne
popa
jbe
sbb
add
push
outsl
aas
pop
lcall
xchg
in
adc
aaa
jge
stos
inc
adc
inc
mov
clc
rcll
sbb
movsb
aas
sbb
mov
mov
iret
mov
int3
jge
jb
dec
int
push
sub
gs
cli
jge
movb
add
sbb
mov
or
push
adc
out
mov
inc
xchg
cmp
jo
test
mov
xchg
mov
in
push
cltd
jmp
mov
sbb
mov
loopne
popa
movl
add
mov
add
or
xor
xchg
fcmovbe
aad
test
jns
sahf
loop
imul
pusha
add
xor
lret
jne
add
js
adc
mov
sub
add
add
test
xlat
lock
add
xchg
ljmp
jnp
fucomi
xchg
inc
add
dec
mov
xchg
and
xchg
test
mov
test
mov
and
mov
lcall
loop
push
push
loop
mov
or
fnclex
cs
mov
out
xchg
jecxz
imul
add
cmp
pop
jg
addb
cmpsw
inc
add
sarb
mov
js
cltd
iret
adcl
lods
loopne
fisubs
les
push
add
sbb
mov
add
adc
dec
fsubs
test
fsts
mov
dec
add
shlb
lods
rolb
push
inc
sahf
cmp
push
add
adc
test
insb
fsubl
mov
pop
ja
add
shlb
mov
inc
leave
addb
jo
popa
jge
jno
pop
or
cmc
sbb
insl
xchg
inc
add
jb
pop
dec
xchg
test
daa
add
bound
jbe
hlt
inc
add
and
enter
add
or
mov
add
add
nop
sub
and
mov
lea
sbb
sbb
pop
adc
and
mov
jecxz
add
outsb
aas
lahf
cmp
xchg
mov
xchg
mov
shrl
jae
jmp
or
cli
mov
clc
jg
lahf
fstps
outsb
je
mov
add
and
and
js
xor
and
cmpsb
lcall
int
add
test
imul
jae
movb
test
imul
cmpsl
cs
add
xchg
stos
pop
pushf
jg
xchg
lret
data16
fwait
movb
nop
push
mov
add
in
leave
ljmp
loopne
or
pop
mov
gs
xchg
pop
push
and
adc
ss
mov
es
jo
push
cmp
inc
sbb
pop
and
sub
rolb
dec
inc
mov
xchg
cmp
or
add
into
aaa
or
cmpsl
add
xor
lods
ds
sub
push
xchg
addr16
push
xor
gs
idivl
xor
cmp
int
sub
pushf
mov
arpl
lret
imul
inc
add
in
icebp
cmp
test
add
arpl
jbe
pop
xchg
fdivl
int3
movsb
rolb
repz
mov
ret
ss
shrl
push
das
sub
test
loopne
jae
add
jl
sbb
add
and
fdiv
popa
jns
and
sahf
repnz
cmpsb
aas
leave
dec
push
ret
or
sbb
fldl
test
pop
test
dec
pusha
add
icebp
insl
add
jge
je
loope
xor
cmp
in
cmp
and
fistps
popl
insl
jecxz
jae
cli
lock
fwait
adc
and
scas
data16
mov
lods
pusha
add
add
add
dec
xlat
push
and
add
addb
jae
add
pop
ret
pop
mov
pop
or
and
inc
cmpsl
xchg
inc
add
adc
jge
inc
add
cmpsl
in
xchg
sub
cld
or
dec
mov
mov
mov
jae
into
push
mov
das
adc
ljmp
movb
add
in
addb
mov
inc
inc
add
mov
int
add
mov
es
add
add
add
jl
cld
mov
addb
cmp
xor
hlt
gs
dec
neg
mov
mov
add
rclb
scas
pop
aad
into
cmp
cmp
in
cmp
add
clc
or
enter
icebp
enter
sbb
pop
js
int
lcall
dec
inc
add
cmp
add
into
in
insb
jmp
test
lret
pop
mov
icebp
loopne
addb
add
fidivl
push
pop
xor
lock
inc
add
add
popf
iret
pop
jecxz
scas
inc
adc
cmp
fdivp
add
inc
add
xchg
dec
in
repz
inc
add
add
jl
add
lds
add
movb
test
jmp
rolb
mov
jmp
xor
fucomp
pop
stc
inc
xchg
scas
loope
sbb
xor
cmp
push
or
or
add
pusha
add
add
or
pop
and
xor
es
jecxz
mov
push
push
fisttpl
inc
add
inc
out
add
dec
fwait
in
pop
or
mov
sbb
jmp
movb
add
mov
mov
notb
push
add
in
mov
sub
sub
lcall
ret
push
add
loopne
sarl
out
dec
loopne
cmp
fwait
scas
xor
pop
pop
cli
sub
add
cmp
inc
pop
hlt
sti
sub
cli
das
mov
enter
fs
adc
xchg
loopne
aad
adc
adc
lret
call
inc
adc
les
cmp
dec
xchg
fdivrl
mov
xchg
add
push
and
xchg
cmp
cltd
orl
cmpsl
aas
adc
je
fwait
xchg
or
dec
cmp
scas
out
jmp
cld
aaa
sbb
out
sbb
adc
sub
stos
or
in
dec
loopne
mov
mov
hlt
jg
xchg
mov
loope
mov
scas
insl
mov
aad
xchg
mull
add
scas
mov
arpl
outsb
in
repz
testb
inc
add
insl
aaa
mov
sub
pushf
jp
push
stos
mov
xor
mov
or
or
mov
cltd
divl
mov
jg
in
jb
daa
insl
push
push
add
adc
add
pause
pop
jno
xchg
add
adc
cmp
add
outsl
outsb
insb
adc
and
out
pusha
add
jo
ds
les
addr16
ds
in
sbb
cs
out
sti
adc
lcall
fwait
mov
cmp
push
add
adc
mov
les
and
popa
sahf
pop
mov
add
sub
in
mov
lock
lahf
cltd
addr16
cmc
jge
mov
mov
loop
or
iret
xlat
push
fistpl
dec
test
lods
lcall
add
xor
mov
mov
out
add
and
sarl
push
jae
jae
mov
imull
jecxz
ds
xchg
xchg
movb
jb
scas
movb
mov
push
movb
rcrl
add
sub
scas
jno
jns
mov
xor
pushf
push
jne
in
out
shlb
xchg
flds
add
shll
or
nop
loopne
ret
mov
xchg
fimuls
jg
daa
or
push
fsubl
push
cld
push
inc
add
or
adc
dec
and
iret
sub
repnz
ss
push
insl
scas
mov
mov
movb
add
or
pop
ret
lea
xor
add
mov
fldl
les
cmp
leave
jle
iret
lret
adc
gs
pushf
outsb
xchg
popl
sub
js
lcall
sahf
loope
subl
cmpsl
jo
mov
dec
xor
iret
push
jge
idiv
push
inc
add
lcall
xchg
test
and
stos
ljmp
dec
sub
sbb
pop
scas
xchg
sub
sbb
xor
inc
imul
xchg
lods
data16
test
lods
xchg
cwtl
leave
aad
sbb
ljmp
arpl
xor
movw
stc
push
xchg
or
add
bnd
add
or
dec
ret
clc
jae
ret
jo
lea
ljmp
into
outsb
add
aas
push
js
add
mov
xchg
lods
dec
dec
and
mov
add
xchg
in
mov
ja
jp
add
movb
std
into
xchg
push
add
mov
cmp
mov
and
nop
cwtl
pushf
or
test
lcall
ljmp
add
jmp
loopne
or
imul
xor
rcr
dec
les
movsl
movsl
mov
scas
sub
int
xchg
icebp
mov
xor
and
cmpl
in
or
xor
mov
and
js
adc
shrb
jno
nop
xchg
xchg
stos
jmp
pop
or
jnp
loopne
mov
mov
or
add
add
repz
dec
sarb
decl
mov
ss
jne
shl
dec
dec
mov
outsl
sub
cwtl
cs
add
sbb
mov
add
cmp
dec
movsl
ljmp
adc
xchg
sub
push
sti
lea
add
add
rorb
xchg
mov
add
addb
jle
mov
xchg
push
cltd
xchg
imul
and
cmp
repnz
jecxz
add
xchg
xor
sub
movb
mov
xchg
or
insl
inc
add
fistl
xchg
les
dec
xchg
inc
add
sbb
mov
test
idiv
test
adc
add
sub
addb
cltd
pop
movsl
and
add
xchg
lds
pushf
inc
sub
sbb
aad
add
mov
addb
add
outsb
mov
std
scas
jae
jmp
and
cmp
rolb
push
xchg
adc
nop
les
imul
jo
add
mov
xchg
inc
addr16
xor
push
add
cli
jecxz
add
add
popa
out
mov
pand
jmp
xor
mov
lret
out
or
inc
cmp
cli
adc
aaa
test
adc
jae
add
mov
adc
mov
hlt
int3
jnp
push
aam
enter
or
xor
bound
pusha
add
jo
test
mov
sub
add
arpl
movsb
xor
add
addb
and
lret
pop
out
cmc
sub
mov
mov
inc
std
mov
jl
add
jns
int3
xor
jmp
mov
add
cmc
jae
xchg
repz
out
sub
pop
loop
lds
push
lds
jb
mov
or
add
cld
xlat
dec
add
jecxz
les
jb
imul
lods
xchg
dec
lds
jecxz
or
frstpm(287
or
aam
jno
xor
ja
add
mov
add
jbe
push
fistpl
mov
in
sbb
pop
aaa
xchg
dec
lods
movb
addr16
mov
test
adc
test
add
rolb
cltd
ljmp
add
ljmp
sbb
dec
imul
add
mov
iret
inc
add
js
xchg
pop
or
and
mov
into
cmc
bound
mov
popf
out
dec
inc
add
or
daa
shll
fwait
push
or
ficoml
dec
and
mov
aaa
sbbl
cmpsb
jb
call
pop
push
add
adc
mov
jecxz
mov
and
addr16
mov
dec
dec
mov
xchg
add
addb
test
ja
enter
dec
pop
jl
sub
mov
sub
pusha
add
add
add
enter
lcall
add
add
jne
dec
inc
add
mov
and
pop
push
add
inc
inc
add
mov
addb
dec
outsw
outsb
sbb
repnz
fwait
adc
jecxz
add
mov
out
mov
add
sbb
xchg
ljmp
pop
mov
add
mov
enter
cs
ret
add
nopl
fmull
mov
xor
add
shlb
add
and
rcll
add
loope
add
push
dec
test
pop
mov
rorl
push
loop
and
into
loopne
pop
push
ljmp
je
test
xchg
push
xor
ss
gs
jo
xchg
mov
js
jge
addl
je
cld
lret
jnp
or
xchg
fwait
mov
nop
call
push
jno
cmc
push
shrb
icebp
or
roll
test
fcoml
or
shl
mov
lret
les
lea
add
cltd
stos
inc
add
pop
insb
or
dec
and
xor
add
movsl
mov
inc
add
inc
add
test
push
mov
imul
add
iret
jbe
add
xor
in
loope
das
fs
xchg
sbb
push
inc
add
add
sbb
in
fwait
popf
push
inc
fs
push
repz
mov
pop
loop
lds
inc
test
and
jo
pop
jl
and
rcl
xchg
mov
xchg
gs
and
imul
push
ror
pop
mov
fwait
lds
fimuls
pop
and
add
cmp
jo
in
dec
xor
push
std
xor
inc
add
roll
xchg
fcmovne
popf
repz
adc
sub
sub
jbe
add
add
cmc
lods
sub
dec
cmc
repnz
in
sub
push
sbb
inc
lods
inc
xchg
test
mov
jbe
adc
aad
inc
dec
cmp
mov
ljmp
mov
mov
mov
scas
pop
and
sub
and
xlat
pushf
std
enter
xchg
movb
xor
mov
outsl
mov
push
repz
push
dec
mov
int
pop
pushf
mov
imul
or
dec
pop
loop
pop
insb
push
add
inc
add
leave
sbb
push
adc
pop
or
sub
mov
lret
xor
push
pop
xor
pop
mov
pop
and
dec
mov
sub
lcall
or
js
push
leave
adc
movsb
fwait
lret
fwait
jle
add
addb
sti
sub
push
enter
test
mov
add
inc
add
xor
inc
xchg
ucomiss
js
in
jecxz
xchg
icebp
add
jne
mov
inc
add
pop
mov
ja
add
fwait
mov
jmp
sbb
shlb
xchg
mov
das
mov
scas
sbb
push
sub
inc
add
mov
mov
shr
pop
es
inc
imul
push
jne
dec
or
push
jmp
rcl
in
pusha
add
fimull
dec
push
mov
sbb
pop
push
inc
add
xchg
mov
std
fwait
js
lret
mov
inc
add
add
push
addb
xor
cmp
sbb
pop
outsb
lods
imul
add
adc
lahf
stos
adc
les
roll
add
in
setb
in
sahf
nop
sub
and
shll
inc
xchg
or
inc
xchg
cli
push
push
add
in
xchg
or
ss
cmp
fidivl
frstor
lahf
pause
mov
add
jle
clc
dec
lea
popa
xchg
cmp
xchg
inc
xor
add
sbb
bound
int
jle
jbe
fwait
mov
lds
arpl
addb
call
das
andl
bswap
addb
mov
sbb
cli
jmp
leave
add
sti
fstpt
call
add
dec
mov
setbe
out
adc
outsl
icebp
cld
in
adc
in
mov
lahf
pop
inc
push
call
mov
movsb
and
mov
imul
dec
xor
sub
mov
cltd
sahf
cmpl
es
lock
popa
cwtl
adc
adc
xchg
addb
mov
leave
ret
iret
add
jns
sbb
fwait
pusha
add
cwtl
mov
add
sub
divb
xor
add
sub
in
jmp
in
cld
rcrl
push
jo
jae
dec
cmpsb
mov
inc
add
add
das
int3
insl
ds
mov
mov
cmp
inc
add
test
jge
mov
fdivrs
fwait
test
adc
sbb
cmp
inc
in
and
insl
aaa
aas
test
aad
mov
sbb
pop
testl
and
xchg
adc
or
pop
dec
out
xchg
repz
mov
gs
out
cmp
in
pop
and
test
and
jp
mov
mov
push
mov
fstl
cld
cmc
inc
sbb
leave
xor
xchg
lock
mov
add
mov
shll
push
add
sub
movaps
data16
add
sub
mov
bound
hlt
mov
push
jmp
test
dec
fdivs
xchg
adc
jl
aam
jg
and
clc
iret
pop
es
ret
cltd
ja
and
cwtl
dec
xchg
jns
das
inc
mov
lods
outsl
in
lcall
jne
aaa
xchg
mov
mov
inc
add
add
sub
add
pop
mov
arpl
push
pop
out
pop
jge
adc
sbb
shll
mov
adcl
fmul
sub
ret
push
cmpsl
sbb
cmp
add
icebp
in
dec
movsb
insb
push
imulb
aam
push
pop
in
or
sub
rcl
jge
ret
fidivrs
scas
cltd
stos
and
mov
aad
add
arpl
adc
testl
add
lret
mov
xor
movsb
pop
ds
xchg
and
fsubrl
xor
clc
and
incl
inc
pop
fistpll
mov
addb
fidivrs
inc
add
and
test
inc
add
xor
das
loope
inc
loop
and
add
arpl
nop
gs
push
push
mov
icebp
mov
rolb
xor
ljmp
popa
sub
gs
mov
xchg
mov
xchg
addb
les
pextrw
or
sub
mul
rcrl
sarl
test
outsl
cmp
add
fldenv
in
loop
movsb
and
jmp
add
scas
orl
lock
test
stc
repnz
cltd
insl
and
add
out
pop
add
add
mov
pusha
add
sub
aaa
add
rolb
outsb
es
xor
mov
stos
push
or
push
add
lahf
leave
cmc
rcrl
add
dec
push
pop
mov
dec
jmp
loop
stos
loop
bt
sbb
fistps
pop
lods
pop
mov
add
rolb
add
shrl
add
pop
push
mov
pop
fsubl
mov
dec
dec
cs
adc
aam
push
push
inc
add
pop
cmp
stos
stos
sub
add
loop
mov
clc
insl
imul
ret
push
test
dec
movl
out
xor
outsl
int3
push
xlat
gs
mov
rcrl
repz
insl
or
cs
cmp
add
pusha
add
add
push
cmp
mov
clc
push
xchg
lret
xor
cmp
pop
adc
leave
adc
and
sbb
pop
testl
ffreep
push
fcom
out
push
push
add
into
lods
push
int3
in
mov
ror
nop
inc
js
cmp
push
js
dec
dec
leave
dec
pop
mov
xchg
aaa
fwait
or
jb
mov
sub
add
iret
jmp
in
mov
mov
mov
sbb
jecxz
leave
xchg
int3
shlb
test
cmpsl
mov
movb
cmp
lcall
inc
add
imul
xadd
jle
add
pop
add
mov
pop
outsl
fiadds
cmp
fs
addb
into
mov
into
cmc
xor
pop
mov
and
fsubl
mov
sbb
cmp
xchg
inc
loopne
xchg
fucomi
xchg
xchg
popa
mov
cwtl
in
and
jbe
inc
add
jae
daa
mov
sbbl
movsl
add
dec
xchg
add
iret
mov
sbb
push
cmpps
popf
stos
cmpl
daa
mov
cmp
jmp
shll
rcrl
fucomi
popf
test
int3
pop
jnp
push
cmp
xchg
hlt
ret
xchg
inc
add
lock
scas
push
int
mov
sbb
test
test
pop
cli
jmp
add
repz
inc
or
cmp
mov
sbb
jnp
inc
xchg
xor
add
pop
cmpsb
pop
ficoms
push
push
add
mov
cli
mov
lods
inc
add
int3
adc
repz
stc
arpl
add
sbb
fistpl
adc
lret
nop
out
ret
out
mov
sbb
inc
add
cmpsb
mov
mov
pop
xor
sub
daa
iret
pop
hlt
xchg
loope
into
stos
iret
stos
adc
xor
or
test
std
lret
sbb
jns
pop
test
cltd
push
aad
and
das
dec
stos
push
sub
push
and
add
les
ret
and
push
fmul
into
js
lahf
mov
popf
xor
ficompl
push
or
sub
jmp
add
js
movb
xor
lds
mov
pop
add
out
ret
push
jmp
icebp
push
pop
cmpsl
jp
jg
mov
add
sbb
mov
cmp
jp
pop
mov
popf
insb
xor
mov
mov
cmp
add
jecxz
sub
push
or
sbb
add
and
xchg
dec
push
dec
sarl
pop
dec
imul
mov
mov
xchg
mov
jb
push
xor
jno
or
add
scas
adcl
adc
xchg
aaa
out
add
out
dec
mov
lret
dec
ds
mov
cli
std
arpl
imul
pop
in
cltd
gs
dec
hlt
xchg
faddl
out
out
mov
sub
sti
orl
fstpt
add
pop
inc
add
pushl
or
add
jl
out
cmc
jp
test
jmp
cs
jmp
push
push
push
mov
add
mov
add
aas
dec
scas
lret
cmpsl
jmp
rorl
aad
cmp
popa
mov
popf
xchg
push
xlat
outsl
push
push
add
ret
mov
lcall
pop
xor
sbb
add
lods
jns
shl
push
mov
loop
fwait
sti
or
cmp
xchg
xor
cltd
mov
xor
push
fisubl
add
jmp
and
xor
cld
out
xor
and
mov
and
adc
or
mov
xchg
cmp
cmp
mov
add
jbe
add
sarb
cmp
dec
mov
lahf
rcrb
mov
adc
sbb
int3
push
sub
fnstenv
and
mov
sub
add
sub
dec
push
and
stos
jns
jge
lock
lods
dec
ljmp
outsb
xchg
and
inc
dec
lret
fdiv
lods
mov
es
mov
std
cmp
lock
sub
lret
push
cmp
push
clc
mov
jge
add
lds
nop
testb
mov
mov
sbb
add
iret
push
sub
mov
sti
rcrb
sub
sub
dec
repz
add
mov
push
cltd
add
sbb
in
or
ficoml
mov
enter
dec
jbe
sbbl
xor
data16
jns
push
cmp
arpl
insb
cmp
push
jecxz
add
add
cmp
dec
aaa
add
mov
jb
xchg
add
mov
nop
stc
pop
xor
add
push
arpl
push
in
das
cmp
test
add
and
pop
pop
mov
mov
repnz
fmuls
mov
mov
fmull
in
mov
inc
in
push
jle
pop
adc
add
scas
and
inc
fs
jo
jmp
addr16
rolb
es
fnstcw
movups
xchg
mov
in
jecxz
lret
cwtl
leave
fwait
or
dec
xor
lock
mov
add
or
pop
adc
add
out
fdivrs
insb
gs
xlat
dec
mov
test
stos
push
sub
xor
repz
js
jp
xchg
xor
mov
cli
push
xor
push
and
mov
neg
dec
aas
sbb
inc
out
bound
int3
push
push
add
jns
add
and
mov
mov
or
cmc
stos
aas
sbb
cwtl
pop
jmp
imul
addb
lock
inc
clc
sbb
add
xlat
imul
pop
jbe
testb
push
jmp
adc
test
push
and
outsb
std
bndstx
iret
aad
dec
cltd
xchg
xchg
lock
add
mov
sub
cwtl
mov
and
mov
xor
add
out
add
sub
scas
arpl
or
and
data16
pop
dec
gs
push
sbb
lahf
jl
add
sub
aaa
mov
xchg
and
cmp
add
sub
outsl
cltd
test
aas
adc
in
mov
adc
lds
cmp
and
repz
aas
ret
push
movsl
jbe
add
mov
or
loop
add
call
mov
sahf
daa
fisttps
aad
cmp
jb
lock
sti
push
push
push
inc
adc
add
inc
add
lock
aad
out
lea
sub
repz
add
outsl
mov
sbb
sub
stos
mov
into
test
push
sub
sti
test
mov
outsl
cmp
mov
pushf
addb
into
jmp
push
ss
jmp
xor
dec
dec
xchg
jmp
dec
rcll
ds
addb
push
jbe
rep
nop
mov
sbbl
xor
in
cmpl
fucomi
mov
daa
cmp
add
outsl
mov
add
xor
mov
push
mov
testl
daa
sti
rcr
subl
nop
int
mov
mov
mov
add
test
jnp
pop
les
lods
clc
in
pop
mov
add
xchg
movsb
inc
add
out
lds
add
xchg
pop
mov
mov
add
add
mov
mov
adc
add
mov
and
mov
mov
pop
pop
aam
lods
dec
inc
xlat
hlt
dec
pop
in
jl
cmp
xchg
cmp
repnz
mov
dec
cmp
arpl
push
insb
addb
push
lea
pusha
add
pop
xchg
std
jnp
sbb
dec
adc
add
into
adc
arpl
add
lds
cmp
xchg
mov
add
ret
loopne
shrl
jp
mov
adc
cmp
xlat
add
cmp
add
fcmovu
mov
mov
enter
in
xchg
call
xor
sbb
xchg
scas
repz
xor
push
add
pop
jg
dec
mov
stc
nop
es
scas
add
packssdw
add
add
bound
add
in
add
add
stc
nop
es
adc
xchg
jb
add
pop
inc
add
pop
add
mov
inc
add
jbe
mov
nop
cld
nop
jmp
shrb
fmuls
inc
and
push
mov
xchg
ret
add
xchg
sub
push
nop
cld
nop
jmp
dec
cmp
add
mov
nop
cld
nop
jmp
popf
add
add
mov
stc
nop
es
add
sbb
mov
push
dec
imul
addb
add
fadds
add
nop
cld
nop
jmp
add
test
push
stc
nop
es
add
add
add
add
push
stc
nop
es
add
xchg
xchg
movsb
incl
pop
pop
dec
stos
stc
nop
es
mov
bound
mov
dec
push
mov
xchg
ret
sldt
add
add
repz
nop
es
add
add
insl
and
push
mov
xchg
ret
add
lea
push
mov
xchg
ret
add
jnp
sbb
stc
nop
es
movsb
add
add
xor
push
nop
cld
nop
jmp
insl
add
xchg
movsb
add
mov
sub
sbb
inc
add
popa
add
push
lret
pop
stc
nop
es
adc
jnp
add
repz
nop
es
das
add
cmp
es
cmp
ret
add
popf
popa
jl
ret
push
mov
xchg
ret
std
scas
push
fisubs
mov
stc
nop
es
add
loop
inc
add
add
add
popa
or
stc
nop
es
call
cmpl
nop
jmp
adc
add
add
inc
add
aas
xchg
nop
cld
nop
jmp
add
add
pop
xchg
add
xchg
adc
lahf
mov
stc
nop
es
aaa
movsl
add
push
add
add
jnp
add
xor
add
push
stc
nop
es
add
sub
mov
adc
add
stc
nop
es
push
add
cs
stc
nop
es
aaa
rolb
add
push
push
mov
xchg
ret
das
add
fldl
adc
stc
nop
es
popa
add
add
iret
add
stc
nop
es
add
add
mov
mov
xchg
ret
insl
xchg
add
xchg
add
dec
lea
push
mov
xchg
ret
popa
scas
add
in
scas
push
nop
cld
nop
jmp
and
pushf
add
mov
add
dec
pusha
stc
nop
es
add
xchg
jb
mov
and
and
add
sbb
add
jge
jnp
jne
stc
nop
es
add
add
nop
es
insl
jnp
add
adc
push
stos
mov
stc
nop
es
add
add
cld
nop
jmp
xchg
insl
adc
cmp
add
dec
add
stc
nop
es
add
cli
push
push
mov
xchg
ret
jnp
add
mov
rep
stc
nop
es
test
lods
and
add
std
mov
stc
nop
es
and
add
fisttpll
add
cmpsl
lods
push
mov
inc
test
adc
pop
push
xchg
add
jg
sar
es
scas
add
add
xchg
jmp
add
stc
nop
es
fisubrs
adc
bound
push
mov
xchg
ret
cmp
movsb
add
mov
add
stc
nop
es
popa
add
movsl
dec
add
add
sbbb
add
add
and
xchg
add
add
nop
cld
nop
jmp
xchg
add
add
ffree
pushf
out
add
adc
stc
nop
es
mov
popf
mov
stc
nop
es
add
sub
fwait
mov
push
mov
xchg
ret
rolb
add
ss
sbb
test
add
stc
nop
es
add
add
mov
inc
add
add
jmp
push
stc
nop
es
add
jb
movsb
dec
popf
add
push
stc
nop
es
add
mov
ffree
es
mov
stc
nop
es
mov
popa
ficoms
sub
sbb
add
add
and
sti
mov
nop
cld
nop
jmp
fdivr
scas
add
jp
pause
cld
nop
jmp
add
and
add
mov
lret
call
stc
nop
es
lcall
dec
add
and
jl
mov
stc
nop
es
stos
add
mov
stc
nop
es
add
add
movsl
add
mov
stc
nop
es
jmp
shr
push
stc
nop
es
adc
nopl
pushf
xchg
add
mov
adc
nop
es
popa
es
pushf
push
aam
mov
push
mov
xchg
ret
add
pop
cmpsb
ret
sbbl
je
add
stc
nop
es
add
das
add
push
mov
xchg
ret
lldt
add
mov
adc
nop
es
push
add
cmp
nop
cld
nop
jmp
sbb
add
nop
cld
nop
jmp
fadds
push
scas
add
add
add
inc
add
es
add
ljmp
push
push
shlb
mov
inc
add
jge
std
add
xor
nop
jmp
add
add
mov
call
stc
nop
es
jb
pop
add
call
stc
nop
es
and
add
imul
inc
cli
call
stc
call
lea
push
mov
xchg
ret
add
add
fdivrs
mov
xchg
ret
add
nop
cld
nop
jmp
push
call
add
dec
mov
stc
nop
es
movsb
add
jnp
add
mov
push
mov
xchg
ret
jge
setb
add
mov
stc
nop
es
adc
add
popa
inc
xor
xor
add
stc
nop
es
add
hlt
or
nop
es
roll
mov
popa
cld
add
push
mov
xchg
ret
popa
test
add
ret
mov
stc
nop
es
add
insl
punpckldq
sbb
stc
nop
es
add
add
and
je
stc
nop
es
add
iret
sub
nop
es
das
add
mov
call
add
xchg
ret
xchg
xchg
add
movsl
jle
push
and
mov
stc
nop
es
fldl
add
add
and
cmp
sbb
cmp
ret
push
inc
mov
je
stc
nop
es
add
push
js
nop
cld
nop
jmp
xor
add
add
xor
lods
push
mov
xchg
ret
sub
add
popf
add
inc
and
stc
nop
es
adc
cmp
sub
fistl
add
add
std
dec
jmp
insb
push
nop
cld
nop
jmp
add
add
mov
add
xchg
lret
stc
nop
es
pushl
adc
and
and
add
push
add
rorl
jg
stc
nop
es
add
add
scas
add
out
rep
stc
nop
es
push
add
mov
stc
nop
es
pushf
add
mov
orb
add
add
cmp
mov
xor
add
stc
nop
es
add
mov
es
add
add
cmp
insl
enter
push
mov
xchg
ret
add
dec
popa
adc
mov
nop
cld
nop
jmp
add
jmp
adc
nop
es
push
pop
cmp
add
cltd
add
stc
nop
es
es
and
pop
movq
es
add
add
verr
mov
stc
nop
es
jmp
cmp
loope
cld
nop
jmp
cmp
add
mov
cld
nop
jmp
incl
add
add
mov
and
add
nop
es
add
das
inc
or
add
nop
es
dec
add
add
nop
mov
and
add
push
add
add
and
sahf
mov
nop
cld
nop
jmp
and
mov
add
rolb
lea
nop
cld
nop
jmp
fiadds
add
add
stos
adc
es
xchg
iret
add
sldt
add
cmc
inc
add
stc
nop
es
and
add
add
fsubs
popa
add
mov
xchg
ret
add
add
or
nop
es
mov
add
add
pop
popa
mov
jb
add
add
popa
add
mov
stc
nop
es
roll
fadds
add
push
mov
into
rolb
cltd
lret
fstps
mov
in
cmpsb
xchg
xor
aam
add
icebp
int3
movswl
stc
nop
es
popf
xchg
add
cmp
test
nop
es
add
pop
call
jb
cmp
fstpl
xchg
fisubs
test
add
xor
inc
add
add
add
scas
lods
push
mov
xchg
ret
add
scas
sub
jnp
repnz
sbb
jbe
stc
nop
es
add
add
bound
sti
pop
stc
nop
es
add
add
mov
nop
cld
nop
jmp
movsl
and
scas
faddp
add
add
push
mov
xchg
ret
fldl
add
jle
cltd
jmp
nop
cld
nop
jmp
add
add
mov
mov
nop
cld
nop
jmp
add
cmp
stc
nop
es
mov
das
add
add
stc
nop
es
dec
add
mov
es
aaa
scas
sub
xor
push
mov
xchg
ret
es
fisttpll
pop
and
jg
stc
nop
es
xchg
lods
add
pop
add
lea
es
scas
fsubrp
cmp
mov
stc
nop
es
add
cmp
ffree
add
stc
nop
es
dec
dec
add
in
and
nop
es
and
add
and
es
es
add
pushf
add
add
std
stc
nop
es
add
add
push
jae
dec
mov
push
mov
xchg
ret
xchg
add
add
lret
add
nop
cld
nop
jmp
add
add
shl
nop
cld
nop
jmp
add
add
mov
xchg
fwait
mov
push
mov
xchg
ret
mov
cmp
push
mov
xchg
ret
add
shrl
fistl
cld
nop
jmp
xchg
add
add
add
sbb
adcb
add
roll
add
stc
nop
es
push
add
add
add
add
es
add
jnp
add
add
nop
es
add
add
cmp
cld
nop
jmp
add
and
add
stos
jmp
nop
es
add
es
pop
mov
stc
nop
es
sarb
add
in
add
or
add
nop
es
add
and
je
stc
nop
es
jb
pushf
cmp
stc
nop
es
cmp
add
mov
add
add
add
add
fiadds
mov
adc
add
nop
es
test
jle
sub
popa
add
nop
es
and
add
add
mov
stc
nop
es
add
add
add
mov
jmp
aaa
ljmp
insl
adc
cmpsl
mov
popf
nop
cld
nop
jmp
add
add
mov
nop
es
movsl
add
add
stos
popa
cmp
pop
and
nop
es
movsl
aaa
add
rcll
sbb
add
nop
es
add
jb
add
xor
lock
nop
es
jmp
sldt
add
popa
add
nop
es
add
lea
stc
nop
es
add
das
aaa
pushf
popa
rorl
cmc
out
inc
add
adc
add
sarl
cli
stc
nop
es
add
add
sbb
nop
es
call
or
nop
es
add
call
repnz
cli
imul
stc
nop
es
add
jle
adc
call
add
xchg
ret
das
jnp
add
add
mov
leave
and
push
mov
xchg
ret
movsl
and
and
add
stc
nop
es
add
sub
movsb
add
jecxz
decl
push
mov
xchg
ret
add
adc
and
push
mov
xchg
ret
add
iret
rolb
add
sbb
cld
nop
jmp
add
adc
add
ljmp
jmp
and
popa
add
andl
jb
add
enter
es
frstor
add
popf
jnp
add
loope
add
add
stc
nop
es
push
fldl
pxor
sti
nop
cld
nop
jmp
popf
xchg
jb
add
add
mov
mov
xchg
ret
add
add
movsb
movsb
bound
fmull
jb
popa
add
fisttps
test
stc
call
add
add
add
ljmp
loopne
add
add
add
add
add
inc
add
adc
add
push
fwait
add
push
mov
xchg
ret
bound
add
stc
nop
es
add
add
add
les
add
nop
es
mov
pop
nop
cld
nop
jmp
and
add
movsb
pushf
sbb
add
stc
nop
es
add
xchg
add
loop
mov
xchg
ret
popa
add
add
fdiv
aad
add
push
mov
xchg
ret
cmp
add
es
push
add
add
add
das
adc
mov
stc
nop
es
xchg
shll
pop
mov
push
mov
xchg
ret
push
and
add
inc
add
xor
nop
cld
nop
jmp
fadds
push
sete
add
jo
jne
stc
nop
es
add
cmp
movzwl
stc
nop
es
call
adc
jb
popa
add
add
add
nop
es
rcr
add
add
nop
cld
nop
jmp
dec
movsl
jnp
add
mov
stc
nop
es
add
xchg
add
add
jg
movsb
nop
cld
nop
jmp
add
popa
call
test
nop
cld
nop
jmp
lcall
jnp
lock
mov
nop
cld
nop
jmp
add
rolb
pop
stc
nop
es
add
mov
add
adc
cmp
nop
es
add
add
pop
lods
mov
push
cmp
ret
lods
iret
jmp
sub
add
jmp
pop
xchg
add
or
xor
add
stc
nop
es
cmp
xor
stc
nop
es
ret
add
add
mov
nop
es
add
addb
mov
stc
nop
es
jmp
add
add
push
mov
xchg
ret
add
add
lods
movsl
mov
jb
push
mov
xchg
ret
jb
stos
add
cld
nop
jmp
das
movsb
add
adc
aad
clc
movswl
stc
nop
es
add
sysenter
shrl
imul
stc
nop
es
add
cmp
cmp
add
cmpw
nop
cld
nop
jmp
pushf
add
add
hlt
mov
jb
rcr
jb
movsb
sbb
add
stc
nop
es
xor
add
add
push
stc
nop
es
add
add
jmp
cmp
nop
es
fdivrs
add
pushf
xchg
movb
das
add
stc
nop
es
add
add
test
nop
es
mov
scas
pusha
add
mov
mov
xchg
ret
add
add
add
mov
stc
nop
es
pushf
jb
add
add
roll
imul
stc
nop
es
xchg
add
stos
add
mov
jo
nop
cld
nop
jmp
add
add
and
cmp
push
stc
nop
es
jmp
sub
xchg
mov
das
and
nop
cld
nop
jmp
popa
adc
lcall
add
jne
push
push
mov
xchg
ret
punpcklwd
setge
je
nop
cld
nop
jmp
mov
std
call
stc
nop
es
xchg
dec
lods
insl
jp
cmp
es
xchg
jnp
iret
test
icebp
stc
nop
es
xchg
sarl
add
push
icebp
push
ret
stc
nop
es
cmp
frstor
cmp
push
add
cmp
add
add
jmp
mov
stc
nop
es
iret
add
sar
pop
outsb
pop
stc
nop
es
add
add
xchg
add
femms
test
nop
cld
nop
jmp
xchg
and
add
fildl
mov
xchg
ret
dec
add
sub
pushf
call
stc
nop
es
std
add
dec
pop
push
stc
nop
es
add
xchg
es
pushf
add
pop
push
mov
xchg
ret
popa
and
push
push
mov
xchg
ret
push
add
add
and
add
jne
outsb
jmp
stc
nop
es
mov
jle
test
loope
pop
stc
nop
es
and
xchg
bound
add
add
popf
call
push
mov
xchg
ret
add
add
pop
mov
es
mov
xchg
scas
popf
add
popa
add
nop
es
and
ret
movsb
bound
fdivrp
stc
nop
es
cmp
add
imul
nop
es
popa
add
add
push
cmpl
nop
cld
nop
jmp
mov
add
ret
add
push
stc
nop
es
add
pop
roll
add
and
es
add
dec
sbb
lds
mov
stc
nop
es
add
add
add
lret
nop
jmp
mov
add
and
enter
nop
jmp
ficomps
add
lret
nop
es
pop
push
add
push
add
add
stc
nop
es
add
add
mov
stc
nop
es
cmp
pop
xchg
xor
add
stc
nop
es
push
pop
bound
loope
add
push
or
and
loopne
movsb
lock
scas
mov
stc
nop
es
add
insl
adc
add
jmp
nop
cld
nop
jmp
add
add
push
mov
xchg
ret
pop
add
add
cs
mov
jl
add
fwait
je
add
mov
inc
and
pop
stc
nop
es
test
adc
jge
dec
nop
cld
nop
jmp
adc
bound
jnp
and
fdiv
movsb
push
mov
xchg
ret
adc
xor
push
fsubs
jle
nop
cld
nop
jmp
add
add
test
add
mov
xchg
ret
add
ret
hlt
sbb
es
add
add
and
aaa
out
pop
sub
nop
cld
nop
jmp
add
add
lods
jge
sub
jne
stc
nop
es
popa
fstp
jb
add
xor
or
stc
nop
es
add
add
bound
mov
stc
nop
es
add
add
xor
mov
stc
nop
es
add
clc
add
stc
nop
es
add
jmp
loop
cmp
stc
nop
es
add
add
addb
lahf
push
stc
nop
es
add
add
add
jne
stc
nop
es
adc
add
and
inc
add
out
jmp
nop
cld
nop
jmp
adc
mov
add
inc
add
cmp
jmp
nop
cld
nop
jmp
popa
jnp
add
lret
testl
nop
cld
nop
jmp
popa
add
popf
iret
add
stc
nop
es
das
add
add
mov
mov
nop
cld
nop
jmp
add
setl
push
inc
add
test
movb
mov
xchg
ret
add
shr
push
mov
xchg
ret
xchg
cmp
cld
nop
jmp
add
add
call
or
nop
es
add
mov
add
insb
add
stc
nop
es
add
pop
add
dec
push
nop
cld
nop
jmp
mov
pushf
add
addb
push
stc
nop
es
shrb
add
sbb
inc
and
nop
es
add
pushf
das
popf
jmp
addl
inc
add
cld
nop
jmp
mov
add
and
push
jmp
stc
nop
es
fisubrs
mov
dec
adc
jecxz
add
xchg
es
add
push
push
mov
xchg
ret
jle
jb
add
add
ss
loop
ret
stc
nop
es
add
push
push
xchg
shlb
xor
add
stc
nop
es
mov
cld
nop
jmp
jnp
cmp
pop
xchg
incl
inc
add
push
lahf
mov
push
mov
xchg
ret
add
add
add
xor
jg
nop
cld
nop
jmp
decl
stos
cmp
popf
add
pop
stc
nop
es
jb
and
add
jb
jb
je
add
dec
push
mov
xchg
ret
cmp
rclb
xchg
rcll
nop
xchg
dec
add
stc
nop
es
pushf
pushf
mov
adc
nop
es
verw
add
push
mov
xchg
ret
add
shll
mov
stc
nop
es
add
popa
add
test
add
nop
cld
nop
jmp
lods
push
dec
add
imul
es
add
pushf
shll
test
nop
cld
nop
jmp
add
add
add
movsb
mov
mov
stc
nop
es
std
cmp
add
out
out
clc
stc
nop
es
push
push
add
lea
nop
cld
nop
jmp
das
add
xor
push
stc
nop
es
xchg
add
xorps
mov
cld
nop
jmp
push
add
shrb
shr
stc
nop
es
adc
and
aaa
xor
mov
stc
nop
es
add
and
add
push
mov
xchg
ret
and
ret
add
dec
mov
nop
cld
nop
jmp
fldl
mov
cmp
add
pop
pop
push
mov
xchg
ret
jmp
scas
call
mov
nop
cld
nop
jmp
adc
add
add
nop
es
jnp
add
add
or
add
inc
add
ret
cmp
add
daa
ja
ret
push
mov
xchg
ret
mov
add
add
sar
nop
es
and
xadd
loope
xchg
nop
sub
pop
filds
xchg
ret
dec
add
add
pop
test
nop
cld
nop
jmp
mov
add
mov
xchg
ret
aaa
roll
add
add
and
push
mov
xchg
ret
add
pushf
lods
hlt
xlat
aas
mov
stc
nop
es
test
xor
fimuls
nop
jmp
call
cmp
jge
rclb
ljmp
movd
les
stc
nop
es
add
bound
jmp
cld
nop
jmp
popa
add
dec
add
popa
in
ror
stc
nop
es
xor
rcr
adc
es
sub
add
mov
add
add
stc
nop
es
shlb
push
push
mov
xchg
ret
add
add
mov
push
jge
dec
and
push
mov
xchg
ret
add
imul
add
iret
add
fstl
dec
or
add
push
add
add
add
iret
jno
add
stc
nop
es
adc
cmp
adc
add
nop
es
popf
dec
insl
stos
adc
or
jne
stc
nop
es
add
pop
add
dec
push
out
add
stc
nop
es
add
add
mov
add
addr16
pop
stc
nop
es
popa
and
jmp
fsubs
dec
adc
dec
jmp
and
pushf
add
add
mov
add
nop
es
and
bound
or
nop
jmp
add
xchg
push
add
aaa
icebp
js
stc
nop
es
add
iret
call
inc
add
int3
push
stc
nop
es
add
adc
add
std
add
add
jecxz
stc
nop
es
add
add
ljmp
call
add
add
lods
push
mov
call
add
in
add
add
or
nop
cld
nop
jmp
add
add
xor
jne
stc
nop
es
aaa
scas
add
jl
sbb
cld
nop
jmp
add
nopl
call
aas
adc
out
jmp
add
pop
mov
sub
nop
es
add
ljmp
push
stc
nop
es
rolb
add
shl
stc
nop
es
add
xadd
jge
mov
stc
nop
es
add
dec
popa
stos
jle
add
fdivrp
nop
es
add
xchg
add
std
add
add
push
mov
xchg
ret
pop
shrl
cmp
and
nop
cld
nop
jmp
and
add
test
mov
or
test
std
stc
nop
es
das
add
xchg
fadds
es
add
addb
mov
nop
cld
nop
jmp
add
pop
roll
mov
es
call
mov
push
mov
xchg
ret
jge
std
sarb
adc
mov
stc
nop
es
popa
add
xchg
popf
add
push
mov
xchg
ret
jmp
dec
adc
ja
inc
add
sbb
sar
nop
es
iret
add
add
add
jge
dec
add
cld
nop
jmp
popf
push
add
add
jg
nop
cld
nop
jmp
adc
bt
adc
mov
stc
nop
es
add
add
popa
add
rcrb
add
stc
nop
es
mov
jmp
mov
xchg
ret
jb
add
push
add
xor
test
or
mov
xchg
ret
add
add
call
sar
nop
es
mov
add
pusha
push
mov
xchg
ret
mov
push
int3
je
stc
nop
es
dec
es
into
call
stc
nop
es
jle
add
push
mov
sub
es
add
popf
add
popa
fucomi
adc
nop
es
adc
cmp
aas
popa
stc
nop
es
movsl
add
shll
add
es
call
and
mov
nop
cld
nop
jmp
test
add
push
mov
xchg
ret
add
add
add
cld
out
add
add
mov
notl
lock
cmp
add
cmp
sar
es
push
adc
cmp
dec
xchg
push
pop
add
push
mov
xchg
ret
add
add
jle
sti
jne
stc
nop
es
das
add
and
jle
add
std
incl
bound
and
popa
or
stc
nop
es
add
add
mov
add
add
nop
es
aaa
dec
add
fldl
xchg
ret
add
popa
push
movsb
es
pushf
ja
stc
nop
es
cmp
insl
and
fadds
dec
cmp
nop
es
roll
mov
aaa
pop
xor
push
mov
xchg
ret
add
xchg
stos
mov
nop
es
add
jle
fldl
and
mov
nop
cld
nop
jmp
popf
adc
sbb
es
and
popa
add
add
xchg
movsb
sahf
call
stc
nop
es
add
add
mov
mov
xchg
ret
add
jge
add
das
dec
cs
stc
nop
es
add
add
cmp
cli
inc
add
push
add
xchg
rcrb
nop
cld
nop
jmp
test
add
mov
jo
test
nop
cld
nop
jmp
add
add
ret
add
das
mov
push
mov
xchg
ret
xchg
jnp
ret
add
xchg
dec
mov
stc
nop
es
jge
add
not
push
mov
xchg
ret
xor
add
movsb
adc
cmp
add
nop
cld
nop
jmp
xor
roll
cmp
in
js
pop
push
cmp
add
les
add
mov
jl
cmc
or
add
nop
es
add
jb
insl
mov
stc
nop
es
add
sub
es
add
cmp
pop
add
mov
xchg
ret
sub
stos
add
inc
add
nop
es
popa
bound
adc
sub
pop
in
inc
add
add
mov
nop
es
add
add
fadds
flds
jb
adc
add
add
outsb
ret
stc
nop
es
add
mov
push
add
push
insl
mov
push
mov
xchg
ret
add
add
pop
add
and
add
stc
nop
es
lods
std
add
add
add
jl
sar
nop
es
xchg
jge
jge
add
xchg
push
lea
mov
add
cld
nop
jmp
pushf
add
stos
bound
jg
test
nop
es
bound
add
or
xchg
ret
add
sldt
add
xchg
bound
adcl
fcoms
in
inc
add
mov
lret
adc
cmp
inc
add
add
movsl
push
add
xchg
insl
div
nop
cld
nop
jmp
add
dec
cmp
fiadds
jle
out
test
mov
stc
nop
es
xchg
mov
popa
jmp
nop
es
rcr
add
add
jne
gs
nop
es
add
ret
popf
mov
inc
add
jmp
popa
mov
add
paddsw
mov
xchg
ret
add
dec
add
add
lret
mov
xchg
ret
mov
movsb
add
es
add
popa
popa
adc
add
es
jb
sub
add
mov
stc
nop
es
add
pop
jne
stc
nop
es
iret
add
mov
sub
es
xor
jmp
popf
popf
sti
jne
stc
nop
es
cmp
jge
jp
js
nop
cld
nop
jmp
ret
push
add
stos
add
mov
mov
xchg
ret
sldt
dec
jne
stc
nop
es
aaa
pop
add
add
push
mov
xchg
ret
test
and
movsb
add
ficoml
nop
es
add
add
aam
insb
inc
stc
nop
es
add
adc
add
xor
push
mov
xchg
ret
add
add
and
inc
subl
add
add
jge
std
jmp
mov
stc
nop
es
add
add
pop
nop
cld
nop
jmp
xchg
fadds
sub
cmp
sar
es
add
cmp
add
add
fistl
nop
es
movsb
jge
movsl
pushf
add
cli
popa
stc
nop
es
add
xor
xsave
aaa
or
xchg
ret
add
add
add
add
push
mov
xchg
ret
push
add
add
add
cmp
jne
stc
nop
es
sbb
cmp
sbb
stc
nop
es
jb
add
mov
push
mov
xchg
ret
cmp
add
add
imul
nop
cld
nop
jmp
add
bound
jl
ret
push
mov
xchg
ret
jmp
add
cmp
push
mov
mov
stc
nop
es
scas
add
rolb
daa
and
push
nop
cld
nop
jmp
add
sbb
fisubs
das
dec
push
mov
xchg
ret
xchg
jb
sbb
mov
stc
nop
es
dec
add
push
mov
xchg
ret
xchg
add
add
ret
dec
ret
nop
cld
nop
jmp
add
push
add
add
mov
nop
cld
nop
jmp
cmovs
add
and
lea
nop
cld
nop
jmp
push
adc
dec
add
jnp
shr
stc
nop
es
fadds
add
add
movb
lret
pop
stc
nop
es
das
test
sldt
xchg
add
ret
sbb
addb
jmp
add
popa
ror
push
nop
cld
nop
jmp
cmp
std
iret
pop
cmp
popa
cmp
jmp
cmp
pop
add
jge
push
xchg
sub
mov
xchg
ret
popa
sbb
mov
stc
nop
es
jge
add
xor
add
add
repnz
incl
cmp
mov
nop
es
mov
sub
stc
nop
es
movsb
jnp
add
add
jb
xchg
add
add
add
in
nop
es
dec
add
add
stos
dec
stc
nop
es
adc
fldl
add
std
das
cwtl
pop
stc
nop
es
add
fldl
add
add
popl
stc
nop
es
iret
xchg
add
and
adc
cs
nop
es
cmp
add
in
jns
add
nop
add
jbe
out
xchg
mov
loopew
push
push
mov
xchg
ret
add
verr
add
add
stc
nop
es
dec
inc
dec
cmp
rolb
sbb
mov
xchg
ret
cmp
add
add
popa
add
mov
dec
nop
cld
nop
jmp
add
add
popf
cmp
sub
add
push
mov
xchg
ret
cmp
movsb
add
mov
testb
cmp
ret
xchg
popf
add
jmp
mov
stc
nop
es
movsl
jmp
add
in
and
stc
nop
es
add
add
add
test
inc
in
stc
nop
es
adc
test
vmcall
dec
popa
stc
nop
es
xchg
popf
bound
or
dec
add
nop
es
adc
jb
add
inc
add
push
sub
mov
stc
nop
es
jnp
mov
fmuls
es
jge
cmp
add
jbe
enter
stc
nop
es
jle
dec
scas
cmp
movzwl
stc
nop
es
jge
add
add
cld
nop
jmp
add
shr
jmp
adc
add
adcb
test
and
mov
stc
nop
es
cmp
or
stc
nop
es
xchg
pop
and
mov
add
gs
inc
add
sbb
in
mov
stc
nop
es
xchg
jmp
add
and
lea
stc
nop
es
and
add
aaa
xor
jne
stc
nop
es
add
xchg
xchg
xor
add
stc
nop
es
add
add
add
rcr
stc
nop
es
sub
ret
add
xor
mov
xchg
ret
dec
add
pop
pusha
stc
nop
es
movsl
mov
jmp
insb
add
stc
nop
es
rorl
add
stc
nop
es
movsb
stos
add
add
lods
stos
fiadds
es
dec
add
add
sbb
nop
es
es
add
mov
in
fcomps
push
add
loope
test
aad
insl
mov
stc
nop
es
sub
dec
jne
stc
nop
es
adc
movzwl
stc
nop
es
sub
std
add
push
mov
xchg
ret
jle
fiadds
add
jle
mov
stc
nop
es
add
add
es
pop
imul
stc
nop
es
add
add
add
lods
pop
stc
nop
es
insl
jb
popf
add
pop
mov
mov
stc
nop
es
pop
add
movsb
add
add
add
out
decl
mov
mov
stc
nop
es
add
add
push
stc
nop
es
add
cmp
and
push
add
mov
stc
nop
es
add
iret
cmp
push
mov
xchg
ret
incl
pop
push
xchg
loope
popa
fldcw
push
mov
xchg
ret
add
mov
je
stc
nop
es
std
add
js
mov
stc
nop
es
add
fisubs
nop
es
add
jmp
add
push
mov
xchg
ret
add
and
add
negl
xor
stc
nop
es
add
add
add
stc
nop
es
iret
ljmp
mov
stc
nop
es
adc
adc
push
add
test
mov
xchg
ret
add
add
add
out
dec
pop
stc
nop
es
das
add
add
test
pcmpgtb
add
nop
es
add
jmp
jb
push
mov
add
push
add
xchg
dec
nop
nop
cld
nop
jmp
adc
add
ret
mov
dec
lods
and
mov
push
mov
xchg
ret
popa
das
roll
xlat
adc
add
or
xchg
ret
add
jge
popa
add
fistl
cld
nop
jmp
incl
and
and
adc
iret
or
sbbb
fdivrp
roll
ret
mov
fcoml
inc
clc
sbb
add
ljmp
popa
add
mov
xchg
ret
lods
add
add
lea
nop
cld
nop
jmp
add
push
iret
sarl
movsb
aam
sub
stc
nop
es
pop
call
movsb
scas
mov
stc
nop
es
and
popf
cmp
mov
jne
stc
nop
es
iret
add
mov
nop
cld
nop
jmp
add
add
xchg
popa
sarb
push
or
cld
nop
jmp
add
add
std
add
push
push
or
cmp
ret
adc
add
add
rep
push
mov
xchg
ret
add
scas
add
test
stc
nop
es
add
push
movsl
aas
add
stc
nop
es
add
lods
movsb
add
sbb
push
mov
xchg
ret
mov
add
div
push
les
nop
es
add
push
in
cmp
nop
cld
nop
jmp
add
add
add
stc
nop
es
add
and
add
mov
pusha
stc
nop
es
test
add
add
add
call
loop
incl
scas
test
and
and
push
mov
xchg
ret
add
push
mov
add
add
add
imul
fidivrs
xchg
add
insb
imul
dec
aaa
aad
imul
jne
cmpsb
sub
stos
sbb
or
lock
or
jecxz
push
or
sti
xchg
rcr
jg
add
ret
fdiv
inc
add
mov
inc
add
aam
xchg
adc
and
lahf
cmpsb
and
cwtl
inc
add
xor
dec
add
jo
lcall
mov
std
xor
in
xchg
repz
movb
xchg
ss
dec
enter
inc
mov
inc
add
in
dec
dec
inc
add
scas
int
jo
pop
cwtl
cli
mov
or
adc
pop
rcl
das
jg
adc
into
aad
pop
out
add
and
sub
aas
mov
stos
das
je
add
frstor
xchg
mov
icebp
adc
ljmp
fdivr
stos
dec
cmp
push
bound
cli
mov
jle
or
aaa
rorl
xor
cmp
or
adc
mov
push
cmp
push
xchg
pop
addb
notl
fwait
das
aam
jecxz
adc
lea
push
stos
je
call
in
notb
arpl
inc
adc
popa
inc
add
cs
mov
adc
daa
dec
pop
fisttps
cmpsl
popa
faddl
xlat
push
xchg
pop
cmp
les
inc
ljmp
pop
ret
notl
insb
adc
sbb
outsb
std
pusha
add
in
movsl
out
xlat
aam
dec
aas
add
inc
add
out
jnp
loopne
adc
dec
push
repz
jl
jecxz
fisubrl
sarb
mov
testb
sbb
pop
push
adc
push
push
jecxz
add
add
inc
add
enter
add
out
jl
inc
add
out
mov
popa
mov
sbb
add
cmp
adc
push
jp
dec
cli
xor
mov
and
pop
cmpsb
cmp
add
rolb
icebp
fwait
xchg
mov
xor
xchg
scas
sbb
cmp
or
mov
add
mov
add
add
mov
idiv
xchg
in
cltd
inc
add
int3
sbb
adc
mov
mov
pop
xchg
cmp
sub
lods
dec
or
adc
jno,pt
add
push
insb
mov
add
ja
add
fwait
xchg
push
fiadds
sahf
xchg
ret
mov
test
mov
mov
add
mov
bound
mov
dec
stc
add
or
add
sub
lret
dec
pop
rolb
lcall
stc
out
add
and
xor
pop
addr16
and
test
mov
jmp
xchg
fwait
rolb
mov
insl
add
rep
push
add
cmp
pop
jmp
add
bound
xlat
adc
mov
sub
inc
add
jb
out
mov
sub
add
xor
add
and
popf
repz
add
jge
addb
pop
add
hlt
add
sub
mov
jae
ficomps
addb
sub
dec
add
bound
call
mov
inc
add
pushf
ret
jb
clc
neg
pop
mov
mov
push
add
imul
ret
lods
dec
cwtl
int
and
divb
fs
push
add
and
and
mov
mov
pop
mov
loopne
cmp
popa
cwtl
insb
sub
mov
icebp
hlt
and
add
add
inc
push
mov
decl
add
push
cmc
and
imul
jo
mov
lods
mov
testb
xor
mov
loopne
push
fwait
dec
push
out
rorl
fisttpl
addr16
mov
inc
imul
and
push
in
mov
sub
add
sub
pop
fisttpl
inc
add
iret
jne
icebp
int3
xchg
mov
jmp
mov
fwait
dec
sahf
mov
or
fmuls
pop
imul
orl
pop
pop
xor
sub
lret
jno
add
je
fisubrl
jb
xor
xlat
scas
filds
add
scas
stos
in
jecxz
push
mov
mov
fsubl
int
addr16
adc
add
jmp
test
add
add
or
push
mov
fpatan
lret
ds
cmp
call
cltd
or
jg
sub
cli
push
jp
adc
movsb
sbb
push
test
scas
iret
pop
jl
add
js
mov
movsl
hlt
sti
push
add
pop
js
test
add
rorl
mov
out
into
or
add
inc
pusha
add
test
add
cli
adc
cmp
add
test
cmc
and
test
lods
test
outsl
jge
mov
add
loope
lret
xchg
mov
fdivrl
and
add
rorl
cmpsb
test
mov
push
cmpsl
cmpsb
xor
insb
jmp
inc
dec
dec
in
aaa
jmp
xlat
xor
and
out
cmp
out
adc
icebp
mov
add
ficoml
andl
mov
or
cmp
pop
jp
sbb
and
call
sbb
push
orl
add
ja
fists
andl
xlat
stos
and
imul
xchg
call
in
adc
out
push
add
sti
push
mov
dec
xchg
mov
icebp
test
add
mov
add
jb
sbb
mov
sub
pop
mov
xor
jle
dec
xor
jnp
fdivrs
sahf
add
push
xchg
jge
sub
sbb
add
jno
cmpl
sub
fnsave
add
inc
mov
outsl
dec
int3
fcmove
inc
mov
lock
add
scas
xchg
lcall
hlt
ljmp
ret
push
xlat
movsl
rorl
movsb
adc
lock
stos
push
push
pop
cmc
push
add
leave
sarl
movb
in
pop
aam
daa
dec
jle
push
int3
push
loopw
pop
mov
movsl
pop
or
pop
sti
inc
repnz
push
mov
jmp
xchg
jmp
mov
fisubrl
call
hlt
pop
xor
xchg
ljmp
push
mov
dec
out
add
rolb
sbb
fdivr
hlt
jmp
xchg
mov
mov
add
adc
mov
mov
mov
jb
sub
insl
jb
push
push
paddusb
cmp
fidivs
fdivr
addb
xor
insb
scas
fmuls
pop
fs
out
jae
xor
add
rolb
add
repz
imull
push
cltd
xor
xchg
mov
push
add
data16
jmp
in
rolb
add
insl
cmp
add
push
push
mull
in
inc
add
in
movsl
pop
out
pop
xchg
outsl
jbe
cmpsl
cmpsb
sti
movsb
mov
mov
mov
sbb
pop
adc
inc
addb
ret
add
addb
mov
fucom
add
sti
addr16
addr16
cmp
enter
fyl2xp1
jns
add
mov
mov
jns
jno
int
mov
add
aad
aam
push
hlt
cmp
ret
jg
add
out
cmp
jno
add
mov
ret
shlb
add
popf
xchg
add
faddl
add
and
sbb
add
out
xor
loop
xchg
inc
add
ds
lds
mov
pushf
cs
je
add
stc
addr16
add
adc
aad
xlat
and
xor
dec
lds
jnp
add
fucomp
and
cmp
sarl
leave
jb
hlt
lcall
stc
rorl
inc
mov
push
cli
mov
mov
ja
lds
loope
into
sbb
stos
in
push
outsb
inc
add
dec
mov
fistpl
outsb
clc
lret
push
add
in
jnp
pop
cmp
cmp
push
lcall
mov
add
lret
dec
cld
xchg
add
dec
loop
mov
imul
ret
sub
and
mov
add
dec
dec
jno
push
into
pop
cmc
stos
xchg
xchg
int3
adc
test
mov
xor
stos
inc
add
insb
lret
push
add
pop
hlt
mov
out
daa
cmp
dec
mov
sti
push
dec
lcall
mov
dec
xor
xor
xor
jnp
inc
add
add
xor
ds
fldt
inc
outsb
push
or
sub
add
stos
add
lods
das
mov
xchg
xor
dec
jg
test
push
jne
add
fucomp
push
loop
cmp
repnz
aaa
adc
or
add
adc
popf
pop
or
mov
fmull
lea
mov
lret
popf
inc
aaa
sti
push
adc
out
add
out
push
mov
inc
fmull
push
adc
xor
mov
aas
jge
push
adc
mov
lds
aam
lret
addb
lahf
les
or
push
sub
add
dec
mov
xchg
sahf
xor
insl
lcall
dec
in
xlat
pop
jnp
mov
push
ds
insl
xchg
dec
arpl
jge
sub
add
xor
adc
adc
mov
movb
push
jg
rolb
dec
mov
jne
repnz
sub
movsb
int3
ret
js
jmp
mov
iret
cmp
in
les
or
jne
add
mov
ret
js
mov
mov
adc
mov
jnp
iret
mov
fdivrl
mov
hlt
ret
add
sub
add
dec
cli
push
leave
and
push
scas
pop
cwtl
arpl
lods
jno
lret
pop
out
add
addb
or
mov
out
and
loop
push
lock
jne
add
aaa
fdivrs
leave
jecxz
sub
popf
push
add
les
sti
push
aad
add
add
mov
cmpsb
cld
iret
mov
insl
jno
push
cld
aas
mov
mov
bound
popf
popf
cmp
jmp
movsl
jne
fcoml
xor
rolb
bound
enter
push
out
mov
mov
pop
pushf
lods
sub
pop
fnstsw
imul
push
jb
adc
out
push
mov
jne
cmc
dec
sbb
inc
add
pop
dec
inc
pop
outsb
test
push
sahf
cmpsb
repnz
cs
in
add
loopne
pop
mov
movsb
pop
shl
testb
outsb
jge
fsubrs
mov
jmp
push
addb
adc
push
shlb
popf
cmp
ss
mov
sub
cmc
xchg
loopne
in
negl
stos
add
cmpsb
inc
add
out
add
and
out
in
insb
xor
int
mov
sub
addr16
addr16
lock
cmpsl
hlt
mov
cmp
add
js
popf
cmc
xor
imul
add
mov
out
hlt
inc
inc
add
popa
addb
cmpsb
fsubp
adc
cwtl
push
xor
xor
add
xlat
pop
sbb
ds
pop
pushf
shll
xor
xchg
dec
jae
xchg
repz
sub
fistpll
sahf
out
outsl
xchg
idivl
push
cmc
jl
mov
dec
test
rolb
xchg
sub
add
cmp
fnstcw
sub
jo
cmpsl
cmp
outsb
imul
push
or
sbb
pop
rcl
lds
xor
cli
sub
inc
xlat
lock
hlt
lcall
add
mov
and
pop
sti
xor
and
add
js
ret
pop
sub
sub
imul
test
std
rolb
fcmovu
call
jno
push
push
push
add
add
add
pop
push
or
jns
inc
inc
iret
mov
lcall
dec
inc
mov
or
clc
rolb
pop
mov
idivb
push
sub
add
repz
mov
add
test
aaa
popf
add
scas
and
sub
icebp
xchg
jno
lret
sbb
shr
push
pop
js
cmp
xor
inc
lret
sahf
fwait
xor
sahf
fidivs
push
or
add
lcall
add
call
fdivl
jne
mov
dec
or
inc
cwtl
dec
fisubrl
stos
or
xchg
push
mov
mov
outsb
pop
jg
sbb
xor
sahf
lahf
scas
adc
int
stos
cmc
adcl
xchg
sbb
sbb
mov
stc
mov
jmp
inc
add
dec
cmpsl
outsb
faddl
ror
into
pushf
add
daa
dec
dec
inc
add
cmp
sub
insl
or
icebp
and
pop
enter
neg
lea
bound
ret
cmp
rol
add
in
enter
mov
sbbl
fdivs
and
push
lcall
cltd
cmp
out
lcall
cmp
xlat
adc
add
shlb
call
stc
sbb
pop
je
cmc
dec
mov
inc
sbb
jbe
rol
add
fnsave
cmp
loop
movsb
pusha
add
bound
and
fcmove
sbb
stos
int3
stc
imulb
mov
xor
in
sbb
add
add
jne
lods
mov
shrl
sbb
add
pop
lahf
xchg
fiaddl
loope
xor
sbb
jne
or
pop
add
push
sti
testb
jle
add
dec
lret
sub
xor
sub
repz
jp
mov
or
add
stos
repnz
inc
fdivs
ss
repz
jne
adc
or
or
ret
pop
and
mov
push
and
pop
cmp
xor
mov
popf
push
out
loop
mov
out
pop
and
ljmp
out
and
sub
inc
add
xchg
or
pop
rcll
std
jg
add
add
fnsave
rolb
push
call
inc
add
sub
loopne
repz
lea
dec
cmpsb
xor
cld
fsubr
sub
pop
sbb
popa
jmp
add
test
cmp
hlt
cltd
xor
imul
rolb
shll
xchg
enter
fiaddl
xchg
test
sub
loope
fnstcw
sbb
mov
xchg
add
pop
jge
adc
icebp
in
and
rcll
daa
clc
cwtl
pop
push
fsubp
push
jmp
inc
add
cs
xor
and
push
pop
lods
lock
lret
inc
add
test
jle
ret
sub
movb
xchg
jl
jbe
adc
add
fsubr
push
incb
popl
push
adc
pop
stos
int
out
daa
jle
adc
dec
xchg
movsl
xor
sti
data16
inc
sar
cmpsb
pushf
pop
sbb
mov
ss
add
push
arpl
and
ret
add
or
mov
jbe
xchg
push
mov
pusha
add
mov
addb
fmul
orl
adc
stc
pop
stc
cmp
push
add
out
sub
sbb
inc
add
add
inc
sbb
cmpsb
into
imul
dec
jbe
add
mov
fistpll
mov
dec
nop
rcll
stos
or
add
mov
mov
inc
jle
fsubr
xchg
mov
dec
aad
push
mov
or
jns
add
mov
loop
mov
add
jno
sbb
cmpsb
addb
arpl
add
mov
adc
xchg
jp
sub
mov
int3
fcompl
mov
add
cmp
cmp
add
cmpsb
bnd
dec
inc
fldcw
and
loope
cmp
mov
inc
add
add
rcrl
aam
aad
hlt
mov
mov
idivl
push
pushf
mov
fcomps
push
ja
fldcw
sbb
push
dec
inc
gs
lahf
test
push
mov
inc
orl
pop
push
dec
and
mov
lcall
fldcw
xchg
dec
mov
cltd
inc
dec
iret
addb
je
jg
add
mov
add
xor
mov
jae
mov
scas
xchg
js
sbb
add
cmpsb
rolb
xchg
packsswb
adc
or
imul
mov
fiaddl
jo
mul
adc
std
sub
int3
pop
pop
imul
dec
stc
gs
fildl
xchg
pop
cmp
stos
or
js
in
add
add
outsb
les
fistpll
fcmovbe
arpl
lds
mov
mov
xorl
mov
jmp
es
push
push
inc
add
mov
add
gs
sarl
insl
daa
js
iret
into
roll
pop
push
add
nop
adc
xchg
out
xchg
hlt
int3
insb
lea
add
stc
adc
push
xchg
ljmp
xchg
mov
popa
xchg
negb
add
add
xlat
fdiv
mov
jp
fidivrl
add
pop
cmp
outsl
fists
sub
data16
inc
negl
xlat
push
xchg
hlt
ret
or
add
dec
push
out
and
mov
lcall
jne
outsb
inc
add
fisttpll
iret
icebp
jb
lds
mov
cmp
cmp
outsl
imulb
mov
push
push
adc
adc
add
inc
xchg
dec
out
jns
xlat
repz
ss
imul
stos
xchg
push
inc
cs
clc
push
scas
mov
into
stos
pop
rorb
sub
les
mov
add
lea
adc
fidivrs
sbb
fdivrs
faddl
sub
mov
sbb
adc
shr
mov
cld
push
loopne
push
mov
and
xchg
por
add
pop
sar
xchg
add
pop
pop
dec
es
mov
sarl
xchg
xchg
dec
addb
outsb
imul
jbe
or
movb
add
mov
add
add
jp
and
mov
aaa
arpl
adc
stos
jmp
aam
add
dec
ljmp
mov
push
std
inc
add
loop
mov
leave
xchg
inc
xchg
icebp
or
jle
stc
cmc
test
pop
imulb
add
adc
jne
cmp
fwait
cmp
adc
outsl
jnp
push
jne
and
add
rolb
pusha
add
pusha
add
push
xchg
int
push
and
sbb
push
push
in
pop
dec
enter
cmp
cmpps
hlt
aam
rolb
inc
add
mov
movb
fstps
xlat
sbb
shll
fstpl
les
mov
add
addr16
jbe
add
int
inc
pop
shll
filds
es
push
mov
je
insl
dec
into
popa
les
aas
push
add
xchg
daa
xlat
hlt
in
es
add
in
test
add
adc
and
sub
mov
dec
jge
bound
shll
popf
push
add
adc
adc
add
lods
inc
pop
push
add
pop
mov
jns
fmuls
sbb
add
sub
adc
xchg
push
cmc
cmc
ret
scas
enter
xor
cli
adc
sti
divl
in
xor
addb
out
sbb
add
or
test
or
outsl
out
xchg
xchg
insl
scas
push
add
pusha
add
out
dec
fimuls
addb
add
mov
rolb
fsubr
cmp
ret
ja
lahf
insb
sub
movb
add
add
sti
das
aas
inc
pop
sti
sbb
jl
or
sbb
test
push
fcompl
mov
sti
out
add
or
adc
cwtl
inc
add
movsl
iret
jno
test
lock
cmp
xchg
or
xchg
outsb
pop
nop
inc
inc
lret
imul
add
mov
add
je
add
ficoml
xchg
sbb
pusha
add
or
cs
sbb
inc
add
stc
sti
pop
sbbl
xchg
sti
adc
adc
sbb
adc
inc
arpl
add
sub
les
xchg
aas
pop
add
mov
and
pop
xor
jg
push
imul
ret
adc
xchg
xchg
fucomi
sbb
ss
add
mov
mov
ficomps
push
shlb
sti
pop
pop
mov
push
decb
sbb
add
inc
add
add
lock
xlat
fwait
sub
orl
add
lods
and
xor
cmc
xor
repz
add
pusha
add
fsub
jl
push
add
fisubs
xor
mov
movsl
push
xor
sbb
mov
adc
movsl
push
mull
ficomps
mov
lcall
stos
in
pop
sub
mov
cltd
mov
add
movb
jo
add
jecxz
mov
or
add
ljmp
sbb
mov
cmc
jle
and
mov
and
mov
pop
inc
add
outsb
movsl
jge
mov
into
lret
bound
jbe
dec
gs
cli
mov
aad
add
fists
and
sub
mov
xchg
inc
push
xchg
test
add
aaa
test
add
arpl
add
mov
setg
shrb
addr16
xchg
out
rclb
por
and
rep
scas
and
jns
and
mov
jmp
inc
add
imul
add
sbb
fdiv
dec
clc
mov
in
and
add
add
cmpsb
dec
xchg
in
add
inc
add
jmp
shll
movb
sahf
out
iret
sbb
inc
insl
inc
add
push
ffreep
add
push
mov
push
push
add
ja
out
lds
movb
jl
sbb
arpl
push
clc
xor
add
mov
and
mov
pop
rolb
pop
test
dec
in
inc
jle
push
mov
loopne
leave
add
popf
scas
pop
jl
scas
dec
cmpsl
mov
add
add
rclb
jb
push
xor
or
xor
outsb
and
jns
add
lock
mov
testb
push
and
pop
mov
xor
dec
scas
cmc
mov
jns
inc
add
loop
fists
orl
dec
and
rorb
push
rolb
test
add
scas
dec
jne
pop
repnz
add
outsb
pop
pushf
dec
push
jp
xchg
repz
mov
jo
xor
movsl
and
push
pinsrw
mov
or
lret
push
push
test
pushl
xor
aas
inc
add
push
pop
loopne
dec
cmp
imul
mov
mov
xchg
cmp
add
xorl
add
outsb
lds
in
dec
pop
ss
adc
cmc
mov
xlat
or
test
inc
movb
push
mov
insb
addr16
or
sbb
and
sub
mov
out
push
add
add
addb
sti
enter
dec
mov
dec
jg
add
lds
fsubrs
jns
dec
add
jecxz
pop
xor
lcall
fld1
mov
leave
push
mov
xor
insb
test
outsb
in
pusha
add
imul
or
add
add
add
pushf
mov
xchg
mov
bound
into
mov
mov
std
outsl
inc
rorl
cmp
rcll
lret
dec
xchg
mov
or
mov
push
lds
cli
mov
adc
lret
jb
cmpsb
cltd
mov
pop
roll
add
lods
icebp
outsl
xchg
pop
loop
mov
inc
mov
mov
dec
not
sbb
push
lret
or
orl
repz
adc
sub
and
xlat
cli
in
lods
pop
hlt
in
ret
fbstp
mov
mov
xor
cwtl
or
mov
and
push
rcll
fcoms
mov
mov
aad
jp
or
inc
add
sbb
mov
add
cmp
inc
add
add
aas
addb
int
dec
into
push
jne
add
out
int
fwait
mov
sbb
add
cmpsb
mov
and
test
rolb
or
add
jge
lahf
xchg
xchg
repz
mov
movsl
jno
iret
js
das
cmp
shrl
xchg
sub
jne
stc
cmp
add
push
add
cmpsl
mov
jnp
add
xor
jmp
lds
fbld
pushf
push
mov
lahf
pop
inc
incb
ret
out
addb
push
pop
xlat
xchg
jmp
std
xorl
dec
dec
in
xlat
testb
rcrb
cmpsb
rol
add
pop
push
je
jnp
jns
dec
es
scas
dec
das
adc
out
scas
inc
add
or
mov
add
xor
leave
jo
adc
inc
add
movb
jecxz
mov
decb
fdivrl
sbb
loope
add
hlt
jno
jmp
cld
inc
add
sbb
sub
dec
jnp
into
js
cmc
mov
insl
ret
mov
jbe
add
daa
xchg
aam
rolb
pop
in
aaa
in
mov
lret
int3
mov
pop
fs
cli
inc
add
pop
movsb
mov
add
mov
push
jl
in
repz
inc
or
inc
aaa
into
jno
sbb
clc
mov
push
icebp
jmp
jecxz
xchg
hlt
addb
push
repz
out
jmp
stc
or
cli
cmpsb
push
push
and
in
ficomps
popf
cld
jae
jg
xchg
fdiv
mov
out
cmpsl
in
nop
push
cltd
inc
add
mov
roll
add
xor
adc
mov
add
sub
mov
incb
push
sbb
mov
sarl
or
or
call
push
jnp
mov
add
inc
add
lds
popa
test
xlat
test
repz
in
cmp
sbb
add
imul
dec
and
sbb
mov
xlat
lcall
jle
mov
sbb
dec
lods
add
cmpsb
test
push
sbb
add
sahf
enter
jle
jle
dec
loopne
inc
dec
push
stos
loope
xchg
jg
inc
add
lret
sub
add
das
ss
cld
mov
imul
fidivl
ucomiss
sti
xlat
stos
aad
imul
outsl
or
stos
jg
mov
add
jbe
lret
cltd
loop
xchg
dec
fs
or
push
mov
push
cld
dec
xchg
je
and
mov
fmuls
push
mov
add
imul
xor
dec
gs
inc
add
or
pop
mov
mov
faddl
fldenv
cmpsl
jnp
mov
add
sbb
mov
push
mov
into
loop
pop
loope
out
jmp
add
push
stc
mov
aam
aam
out
mov
in
popa
xor
sbb
pop
fldenv
movsl
jp
add
dec
mov
sub
add
pop
cli
adc
jg
nopl
jno
push
out
pop
les
jae
outsl
cmp
out
fwait
imul
das
fucom
je
and
cmp
les
cmpsb
pop
mov
pop
mov
mov
test
clc
mov
mov
cmp
arpl
iret
inc
ret
cmp
inc
dec
cli
inc
jns
test
or
cmp
loop
jecxz
cmovno
mov
iret
add
add
les
add
insb
adcl
push
in
add
punpcklbw
or
adc
mov
pop
push
xchg
fs
pop
xor
les
mov
add
mov
test
add
mov
mov
ret
pop
or
pop
call
adc
pushf
or
push
call
xchg
repz
lock
mov
cmpsl
je
pop
daa
cmc
clc
push
mov
push
daa
push
in
sub
sarl
imul
add
loopne
cmp
mov
and
mov
add
dec
inc
add
pop
mov
fadd
add
lret
sahf
cmpsb
inc
add
scas
xchg
inc
add
mov
int
mov
ljmp
add
jmp
mov
jg
pop
fbstp
xor
mul
cmp
rolb
fadds
mov
dec
fdivrp
aaa
push
xchg
mov
ficomps
inc
push
push
into
push
add
addb
cltd
hlt
bound
ss
or
scas
fdivp
mov
add
movb
xor
bound
xchg
dec
sbb
daa
push
fsubs
stc
ficoms
out
andl
call
xchg
mov
fisttpll
mov
cmc
in
shll
movsl
and
jnp
mov
cld
cmp
dec
inc
lods
jp
mov
cmp
push
add
loop
out
pushf
cmp
inc
jo
sub
add
mov
jmp
add
test
fcoml
or
push
mov
and
or
movsl
rcr
stc
add
mov
mov
sbb
sbb
add
sub
push
rcl
testl
fidivl
add
fisttpl
mov
pop
adc
cmpsb
cmc
lock
add
cwtl
addb
sbb
arpl
aaa
xor
add
out
call
push
mov
jnp
and
sub
pop
push
mov
fsts
sub
bound
imul
push
call
lea
or
aam
dec
pushf
test
lcall
xor
data16
lahf
dec
addb
pop
out
xchg
mov
xor
out
mov
xchg
bound
scas
sub
movb
mov
aaa
addr16
xlat
int3
ret
aad
popf
adc
add
add
xchg
lret
add
imul
out
mov
mov
cli
rcll
push
add
or
and
push
sub
push
push
dec
movb
shlb
ds
mov
jnp
mov
lods
cmp
push
stos
insb
je
dec
jge
add
xchg
ljmp
test
and
push
notl
lods
and
jae
push
sub
mov
clc
mov
lcall
add
subl
jb
test
push
add
mov
repz
sbb
loop
lods
lea
jnp
sub
faddp
add
out
push
and
call
repz
fsts
push
pop
dec
sbb
pop
xor
add
ret
dec
xor
sub
push
mov
pop
ja
mov
sbb
insl
icebp
cld
mov
outsl
and
loope
or
sbb
add
and
fldl2t
push
sbb
fiadds
or
shlb
and
lahf
add
lea
jmp
pop
push
nop
dec
stos
pop
xchg
daa
aas
dec
sub
mov
nop
mov
inc
add
sti
icebp
sub
sbb
jno
aaa
imul
pop
push
mov
inc
aad
fistl
add
push
roll
pop
ds
sbb
ljmp
addb
rcrl
sub
mov
dec
mov
mov
jno
dec
test
jg
pop
sub
adc
or
sbb
push
add
mov
ficomps
xor
jp
add
inc
add
imul
stos
inc
xchg
testb
add
sbb
mov
xor
shlb
mov
lods
aaa
cld
dec
sbb
clc
add
lock
xor
mov
cmp
add
ret
enter
jo
dec
mov
aad
nop
cmp
xor
mov
movsl
lret
test
xor
push
pop
and
cmp
cmp
xchg
in
dec
jns
sbb
or
test
jo
xchg
dec
scas
bswap
inc
dec
shl
xchg
iret
xchg
jno
mov
mov
add
idiv
leave
jae
pop
cmpsl
std
pop
and
mov
cmp
fdivrl
or
aas
int
test
pop
insl
mov
insl
mov
popa
xor
out
add
jle
add
cwtl
fs
sub
gs
mov
sbb
or
add
sbb
mov
rcrb
ljmp
arpl
sbb
push
popa
pop
jo
adc
add
out
add
loop
aas
ficoms
fs
jge
sti
fisubs
pop
addb
fists
add
and
in
push
mov
outsb
mov
mov
aaa
lds
lret
cltd
mov
and
das
adc
out
add
and
push
popf
loope
pop
cltd
cmp
shrl
leave
cmpsl
mov
add
movsb
inc
add
je
enter
sub
sub
and
jmp
add
dec
mov
mov
jae
pop
mov
jb
fs
or
repnz
inc
fnstcw
xchg
aam
and
xor
ret
cmc
jae
pushf
mov
rorb
add
hlt
dec
sbb
mov
xor
cmp
and
movsb
aad
ret
jl
aad
add
xor
push
cmp
jnp
xor
add
add
fchs
xchg
mov
cmp
out
ja
cmova
push
xlat
jne
cld
pusha
add
rorl
mov
les
fdivl
jo
or
push
leave
sbb
fnstcw
push
add
dec
mov
lret
adc
add
enter
push
xchg
bound
pop
mov
xchg
dec
pushf
lahf
or
flds
shll
jmp
mov
adc
pop
mov
sbb
loopne
sub
inc
add
and
or
push
inc
sub
adc
cwtl
adc
ljmp
push
roll
loop
test
inc
insb
sahf
dec
jmp
sbb
roll
add
mov
leave
sti
xchg
xchg
rolb
jge
mov
aad
push
mov
jo
pop
ds
fdivrl
mov
sti
sub
fldenv
scas
push
push
xor
push
shll
and
add
rolb
xchg
xchg
rolb
nop
shll
add
mov
push
imul
loopne
popf
mov
repz
add
pop
cmp
ret
cltd
aas
int
add
in
adc
add
mov
add
addr16
push
xchg
cmp
jmp
add
push
add
mov
rcl
ds
arpl
cmp
inc
add
push
arpl
mov
out
test
add
sub
jle
sub
test
lea
dec
stos
insl
cmp
and
push
leave
adc
mov
xor
addr16
sbb
push
stc
jo
and
sub
pop
frstor
loope
in
out
cli
fwait
es
stc
push
rsm
shl
and
inc
sbb
sbb
arpl
add
adc
cs
pop
cmpsb
ljmp
adc
iret
jg
cwtl
addb
test
lds
lods
adc
fnsave
daa
mov
enter
adc
popa
pop
ror
pop
inc
add
mov
add
aam
test
pusha
add
fldt
add
adc
jae
mov
lea
addb
hlt
sub
add
pop
jae
pop
fmul
add
lods
mov
ror
fildl
add
lahf
push
cmpsb
jl
push
add
or
test
add
mov
jb
push
jp
add
cltd
leave
jbe
add
mov
jp
scas
inc
push
movsl
addr16
sbb
add
add
or
jo
xlat
xchg
xchg
push
loope,pn
jb
sub
jns
rcrl
fs
inc
js
xchg
int3
lods
xchg
cmp
sub
mov
sbb
add
mov
inc
or
lods
test
and
sub
negb
negl
ja
pop
sub
das
test
stos
jmp
lods
mov
push
cmc
xchg
fsubp
aaa
ret
xchg
mov
out
dec
cmc
jne
jo
add
push
orl
cwtl
movb
mov
in
sbb
fcomp
int
dec
mov
int3
inc
rorl
ja
imul
addr16
sti
jnp
adc
jb
add
push
loopne
sub
imul
add
xor
sub
inc
add
sahf
xchg
popf
flds
mov
jnp
arpl
ret
shll
sub
lret
ljmp
dec
in
pop
addr16
sbb
icebp
sub
insl
lret
xor
add
hlt
enter
mov
lock
add
add
out
push
pop
in
or
loope
test
mov
in
lcall
jns
jle
jge
loop
xchg
enter
add
enter
lds
imul
addr16
push
jge
es
jge
add
mov
add
sbb
add
testl
insb
out
data16
insl
loop
add
es
add
cpuid
xor
leave
mov
mov
add
insl
sub
mov
xchg
sbb
and
out
les
dec
ret
inc
add
pop
scas
lret
dec
dec
lea
add
stos
imul
fdivs
lock
jg
fldt
enter
lret
mov
add
add
ds
jecxz
jns
das
sbb
pop
shll
push
lret
jp
test
add
jmp
xchg
jne
jmp
fs
popa
cmp
push
dec
xor
or
movsb
pop
push
add
repnz
stos
lahf
mov
push
sub
outsl
aam
jno
fildll
jle
mov
dec
sbb
or
movsl
stos
imul
add
mov
popf
arpl
movsl
mov
movb
push
mov
insb
aas
out
xlat
xor
lahf
add
popl
sub
icebp
fwait
cmp
push
in
clc
jp
ficoms
das
dec
dec
cwtl
add
loopne
into
sarl
sbb
ljmp
dec
popf
loop
add
popa
loopne
and
pop
or
js
fmuls
adc
inc
fiadds
mov
negb
out
xor
das
xchg
jb
and
push
push
mov
dec
fwait
imul
mov
aas
add
add
notb
pop
leave
popa
cwtl
addb
fsubr
fmuls
cmc
test
dec
scas
arpl
bound
addr16
sbb
push
outsb
addb
jo
leave
into
sbb
pushf
push
or
xor
aas
leave
inc
cltd
cmc
cli
imul
test
xchg
jg
lcall
dec
cld
xor
jo
mov
rorl
cmp
cmc
add
test
add
or
adc
xor
adc
repz
xchg
jns
or
loopne
mov
pop
add
mov
add
xor
pushf
ljmp
mov
testl
and
cmc
je
push
ja
les
lea
fistpl
ret
jne
insl
push
xor
repz
cld
pop
cmp
jo
repz
pop
and
jl
pcmpgtw
or
sbb
shl
movl
test
add
and
pop
pop
or
push
sbb
outsb
mov
rdpmc
icebp
push
sbb
mov
arpl
enter
add
cld
jmp
inc
scas
inc
lret
pop
ljmp
sbb
nop
daa
fcmovnb
add
push
jge
pop
out
xchg
cmp
cmpsl
and
sub
fstps
sbb
adc
mov
ja
pop
shll
imull
ss
outsl
jp
pop
sub
inc
add
or
aad
mov
les
push
fldt
hlt
jb
loope
mov
xor
insb
js
mov
outsb
jbe
rolb
push
inc
test
push
and
cmc
rolb
or
dec
pusha
add
and
in
subl
jne
sbb
xchg
cwtl
cli
test
les
xor
push
movsl
test
test
add
rolb
add
fidivs
add
sub
stos
ret
fwait
out
cld
or
push
or
pop
mov
mov
cmp
clc
outsl
adc
fldt
gs
xchg
push
add
push
mov
imul
leave
push
jbe
add
aas
jmp
dec
aad
nop
test
cmp
mov
add
stc
xor
test
or
out
add
sub
and
mov
mov
pop
jmp
icebp
and
scas
inc
add
add
scas
mov
cli
daa
test
xchg
add
add
cltd
push
rolb
mov
data16
in
lret
push
enter
sbb
xor
js
xchg
sub
mov
cmp
add
hlt
adc
ss
add
shr
cmp
sub
xchg
jp
jp
add
ds
add
sbb
loopne
adc
mov
inc
add
pop
shlb
lret
pop
sub
jns
jnp
dec
out
in
cmp
dec
sbb
mov
pop
frndint
cmc
cltd
xor
test
add
pushf
aam
dec
ret
add
rcrl
inc
sub
add
icebp
insl
cmpsb
std
sub
cmpsl
cmova
mov
popf
or
add
out
in
mov
cmp
and
fs
jp
add
cltd
adcl
mov
fs
in
add
outsl
add
lahf
addb
mov
in
repz
imul
clc
clc
dec
dec
adc
cltd
fs
mov
xor
add
sar
sub
and
adc
scas
pop
push
scas
sahf
add
pop
mov
sub
dec
jne
aam
fdivr
lds
movsb
in
fcomps
pop
adc
mov
add
adc
loope
add
movb
add
xor
mov
jg
xchg
and
test
and
and
jnp
xchg
ret
dec
popf
jl
iret
lret
jmp
pushf
mov
dec
stc
das
ror
jne
mov
sbb
icebp
xchg
in
bound
pop
fsts
mov
clc
outsl
sbb
pop
movsb
mov
jle
imul
xchg
lea
cmp
inc
add
jecxz
in
xor
sub
fs
sub
popa
sbb
push
out
aaa
and
test
in
fists
shll
push
push
rcr
pop
push
aad
and
pop
and
inc
add
movsb
inc
jle
xchg
imul
mov
add
sbb
push
sarb
aaa
mov
mov
call
lock
mov
add
and
rolb
dec
push
or
mov
push
push
xor
add
mov
int
jmp
ss
cmp
mov
and
sbb
bound
xor
add
aaa
call
addb
and
test
add
pop
fists
pop
mov
mov
movsl
in
xchg
iret
inc
add
xor
enter
inc
add
push
into
sti
jae
cmpsl
and
inc
add
mov
mov
inc
cld
outsl
arpl
leave
lret
inc
fmul
into
xor
cs
push
add
xchg
push
pop
aam
add
data16
xor
insb
and
and
mov
test
push
xchg
dec
push
nop
xorl
iret
stc
push
bound
fnstsw
dec
mov
adc
push
daa
sub
bound
in
addr16
add
inc
aaa
xchg
dec
jnp
inc
jnp
add
xchg
mov
dec
dec
and
in
rolb
or
outsb
out
addb
xchg
dec
xchg
mov
popf
jne
in
add
push
sbbl
mov
xchg
add
cmp
mov
jle
out
arpl
add
inc
and
sbb
adc
push
mov
add
cmp
add
adc
outsl
stos
cli
and
cmp
inc
cmp
js
gs
popaw
pop
mov
and
mov
lret
roll
js
jae
pop
es
and
push
dec
addb
mov
faddl
add
sbb
mov
jmp
mov
xchg
aam
aad
insb
adc
pusha
add
add
dec
sub
stos
lcall
inc
add
xchg
pop
or
fnsave
mov
sub
dec
mov
stos
test
rolb
sar
mov
and
or
fsubs
lret
bound
dec
cmp
repnz
add
das
cltd
add
dec
sbb
add
sbb
xlat
cwtl
test
dec
add
repnz
fdivr
pop
test
addb
xor
out
shl
out
jns
push
xchg
add
fmul
mov
pop
cmc
cmp
add
sub
add
outsb
jno
push
ret
xchg
loop
fidivrl
jno
scas
ror
lea
popa
add
pop
std
lret
xchg
push
xchg
sbb
and
insb
pusha
add
mov
fdiv
ret
or
push
inc
add
cmp
in
or
loop
insb
mov
sbb
pop
incl
lea
mov
jmp
pop
fstl
mov
add
lret
stos
dec
fsubp
jae
jnp
pusha
add
pop
cmp
mov
jnp
addb
add
popf
jl
mov
cwtl
mov
adc
adc
fisttpl
into
and
push
mov
sbb
inc
mov
jge
and
push
sbb
addb
lock
enter
jbe
iret
sub
mov
pop
sub
dec
adc
push
add
ret
out
pop
jmp
out
outsb
addb
rcrl
dec
aam
and
ret
xor
inc
and
add
lret
xchg
adc
xchg
enter
pop
sub
pusha
add
pop
clc
push
cmp
cltd
stos
imul
sbb
add
dec
shld
je
inc
int3
inc
add
insb
in
push
rcl
addb
push
sti
jo
mov
lods
sub
addb
test
jmp
mov
std
sub
addb
add
mov
shr
sarl
xchg
clc
loope
adc
cmp
and
mov
cmp
clc
incb
jmp
notb
lahf
test
mov
das
frstor
sti
jae
jo
pop
push
mov
mov
cld
dec
out
and
adc
mov
xchg
and
xchg
shrl
add
dec
jg
jno
cmp
movsb
loop
mov
push
lret
out
add
das
icebp
ds
add
pop
shl
sub
std
stos
xchg
or
fst
cwtl
lods
ds
push
add
xchg
pop
push
jecxz
mov
sti
sub
add
or
fimull
inc
add
lds
xor
test
addb
add
add
jl
aas
and
lods
mov
in
mov
xchg
sub
cmp
jl
ss
je
inc
add
add
out
add
dec
sub
jo
loop
pop
cmp
and
and
lcall
bound
stc
sub
popf
pop
ja
mov
cmpsl
iret
or
xor
cmpsb
lods
pushf
loopne
add
mov
jo
add
jbe
push
add
mov
in
mov
pop
fcomp
pop
ss
fisttps
pusha
add
mov
push
ret
shl
lcall
add
push
jbe
addb
lcall
sub
ret
sbb
popa
or
int3
icebp
mov
leave
nop
int3
adc
bound
xchg
mov
rorl
sbb
mov
push
mov
adc
loopne
leave
cmp
cwtl
xchg
mov
lods
mov
clc
test
pop
xor
cmp
jl
insl
mov
dec
pop
lcall
mov
gs
push
cmp
frstor
in
stos
dec
sub
sbb
or
sbb
lods
push
xchg
test
and
inc
add
out
out
outsb
jo
adc
push
ret
repz
xor
sbb
or
outsl
adc
cmpsb
or
add
sub
inc
add
or
lock
fbld
outsl
mov
xlat
sbb
mov
or
mov
and
push
dec
xchg
lcall
pop
mov
and
push
insl
mov
fdiv
xchg
cvttps2pi
in
cmp
aad
add
inc
scas
fmull
loopne
loop
andl
mov
add
mov
mov
cs
sbb
arpl
add
push
fmulp
xchg
fs
mov
push
xchg
cmpsb
push
nop
es
aas
pushw
xlat
dec
adc
jbe
lret
addb
sub
cmp
and
mov
adc
imul
jle
popf
das
push
out
scas
stos
test
pop
sbb
test
pop
cmpsb
dec
not
inc
add
inc
inc
xchg
cli
adc
lds
sub
cwtl
je
mov
add
loop
mov
xchg
into
popa
fwait
inc
add
xor
stc
pop
cmc
push
mov
xor
clc
dec
call
mov
xchg
sub
cmpsl
jge
or
cmpsl
ja
push
nop
shrb
xchg
insl
fs
and
pop
sbb
mov
adc
bound
cmp
shr
mov
arpl
insb
cmpsb
push
int
adc
mov
mov
jne
mov
fwait
sbb
das
add
out
je
add
lahf
sbb
leave
cmc
call
lock
pusha
add
jmp
add
dec
orl
jb
sbb
test
jp
test
add
add
jmp
dec
test
xor
add
add
ret
or
mov
loopne
push
arpl
pop
sbb
adc
ss
in
xor
mov
and
inc
ds
lret
cmp
stc
ja
mov
lock
cmp
in
cmpsb
dec
mov
outsl
ret
arpl
mov
out
xchg
lret
je
mov
fsubrl
sbb
xchg
clc
mov
pop
ljmp
ljmp
imull
nop
xor
xor
jns
and
adc
push
push
bound
xchg
mov
sbb
fbstp
repnz
insb
jne
add
and
jb
and
imul
in
push
and
jb
fprem1
mov
add
mov
mov
fdiv
xchg
pop
shll
cmp
pop
cltd
icebp
mov
into
mov
notl
push
les
sbb
stos
or
mov
jb
int
pusha
add
sti
fs
jno
mov
imul
or
fistpll
inc
add
add
aas
shrl
pop
jl
dec
into
mov
movsb
test
fdivs
mov
imul
jns
aad
xchg
mov
pop
int
mov
push
test
add
lret
stos
or
mov
mov
jmp
sub
fstl
jmp
add
pop
and
outsl
insl
scas
xchg
xrstors
add
cwtl
pop
fimuls
cmp
pusha
add
dec
or
arpl
sub
push
cmp
or
adc
xchg
sub
lretw
sub
add
xor
ljmp
ret
shlb
les
mov
ja
lea
xor
dec
mov
lods
xchg
out
inc
pop
sbb
adc
arpl
pop
push
mov
aam
and
hlt
xor
add
mov
mov
push
add
std
leave
ret
cltd
xchg
pop
push
cmp
mov
adc
sub
test
mov
mov
push
mov
lret
pop
gs
sub
mov
xor
mov
lods
in
adc
daa
addb
jno
stos
dec
sub
dec
incl
ja
cs
inc
scas
addb
add
mov
xor
mov
ficoms
repnz
mov
movsb
insl
into
adc
in
mov
mov
cmp
xor
lret
jl
mov
scas
insl
lcall
arpl
mov
test
sbb
add
shr
imul
aad
mov
sub
mov
popa
jmp
sub
add
add
and
icebp
in
bound
test
cli
cmp
inc
repnz
mov
test
mov
adc
outsl
sbb
push
cmpsl
inc
dec
adc
dec
loop
add
inc
addr16
add
int
pop
outsb
push
repz
add
push
enter
jns
out
stos
jb
in
popf
test
cmp
pop
addb
aaa
lock
cmp
loop
dec
sub
dec
inc
mov
xchg
bswap
cmp
mov
loopne
add
or
sarl
xor
mov
jge
lods
divb
cmp
outsl
outsl
fists
push
pusha
add
in
adc
jg
add
test
in
fisttpll
outsb
aad
inc
test
sbb
fistpll
lock
mov
test
aam
xchg
jnp
outsb
inc
or
xor
or
rorl
movb
test
into
cmc
sub
aam
lcall
fmull
lods
sarl
dec
filds
dec
dec
cmpsl
insb
or
addr16
mov
insb
inc
add
jecxz
jno
xor
push
dec
adc
cmpsb
jmp
cmpsb
int3
loope
pop
arpl
fsubl
add
add
fildll
inc
hlt
test
ds
popf
xchg
rcrb
mov
xchg
mov
pop
and
cmp
leave
adc
adc
inc
add
jae
xor
adc
mov
movsb
test
nop
loope
add
add
das
int3
movsl
push
or
add
jo
pop
rol
add
sti
cmp
jnp
dec
jae
xchg
sbb
mov
and
daa
add
push
lods
and
mov
cmp
aam
pop
inc
add
xlat
popf
pop
mov
add
or
push
sub
add
sbb
js
ret
fdivl
adc
faddl
add
push
repz
repz
cli
cmp
xchg
cmp
pop
jnp
inc
mov
pop
dec
inc
xor
stc
xchg
iret
jle
in
and
adc
shl
daa
scas
nop
mov
fldt
or
jge
arpl
xchg
test
add
or
push
shlb
or
loopne
incb
imul
mov
sbb
je
incl
arpl
cld
dec
push
xchg
jecxz
add
push
push
jl
push
dec
xchg
imul
push
ja
movsb
fldenv
sub
sbb
sub
xor
push
add
addr16
out
dec
push
inc
cltd
xor
rolb
mov
cmp
int3
in
sti
jno
pop
mov
cld
dec
out
or
scas
pop
pop
or
xor
push
or
push
adc
and
stc
and
and
or
sub
jne
xlat
push
test
adc
aas
call
nop
mov
add
add
sahf
jne
gs
loope
sti
jp
push
ret
pop
fbstp
xchg
xor
cmpsl
inc
add
inc
test
add
addb
xchg
dec
or
out
loop
cli
lcall
imul
mov
fcomp
in
push
add
testb
adc
scas
dec
int3
push
stos
jne
and
gs
cmp
add
mov
jmp
jmp
in
pop
enter
arpl
out
push
cmp
daa
cld
lods
mov
cmp
scas
ss
les
xchg
add
push
dec
xor
add
mov
inc
popa
pop
xorl
add
cmpsb
int
add
call
sbb
outsb
pop
lret
xor
les
lret
add
stc
std
mov
add
jbe
xchg
movb
std
mov
cltd
lret
ret
int3
inc
add
in
clc
or
xor
ret
fdivl
add
and
icebp
inc
das
mov
fxch
pop
inc
add
add
divb
xor
add
sahf
add
gs
lret
mov
adc
vhsubps
pop
push
and
lcall
sbb
pop
bnd
mov
lds
push
aam
mov
mov
lea
hlt
jecxz
ljmp
inc
dec
dec
daa
mov
popf
das
or
pop
inc
add
jp
data16
push
xor
push
dec
jae
add
and
or
and
cmpsl
aad
pop
jle
addb
testl
out
jl
xor
int
sahf
xchg
fs
mov
mov
dec
inc
loop
lods
sbb
js
xchg
movsl
push
mov
out
mov
dec
ja
add
add
mov
inc
add
dec
mov
inc
gs
mov
sbb
sbb
addb
pop
ds
add
pop
mov
push
imul
add
loope
dec
into
inc
add
dec
adc
sbb
add
cmp
or
add
pop
add
iret
push
inc
add
outsb
dec
pop
lods
inc
outsl
and
aas
movsl
and
adc
cmp
or
add
cmp
ret
add
pop
mov
inc
call
pop
mov
add
cmp
push
dec
sbb
jp
arpl
pop
jno
pusha
add
mov
add
loope
push
push
mov
ja
ss
cli
lds
movsl
scas
sti
int
add
xchg
add
lods
sti
xor
add
daa
rorl
sub
cs
inc
add
mov
push
cmp
out
decl
mov
cmp
popf
sub
mov
push
addb
shrb
push
inc
add
sbb
iret
mov
cmp
dec
sub
mov
js
popa
cmp
push
push
cmpsl
adc
dec
mov
into
push
push
add
pushf
adc
jo
cmp
add
and
xchg
bound
mov
sti
and
mov
inc
add
aam
in
mov
inc
add
push
cmp
leave
popf
in
outsl
scas
inc
scas
das
inc
xor
les
js
add
in
fwait
or
mov
push
je
inc
testb
sub
and
xchg
and
sbb
pop
or
ja
dec
js
push
rcll
je
fistpl
out
lods
cmpsl
aas
stos
or
mov
bound
xchg
addr16
scas
mov
jbe
int
push
rolb
rcrb
push
add
in
push
fwait
leave
or
aad
cwtl
push
inc
add
cmp
add
push
xchg
icebp
mov
mov
imul
or
or
push
std
xor
pop
add
sahf
jno
mov
lahf
ret
mov
mov
pop
push
mov
pop
cmpsb
push
pop
stos
mov
std
cs
pop
jo
add
pop
push
int3
into
mov
sub
icebp
movsb
and
sahf
mov
je
add
out
mov
add
xor
adc
in
mov
mov
repnz
xchg
fcoms
test
aas
adc
lahf
lds
cmc
xchg
pop
das
shlb
add
pop
stc
scas
ficoms
jle
aas
bound
mov
jmp
pop
test
push
add
aaa
stos
adc
mov
adc
pop
cmp
in
leave
das
mov
mov
inc
cltd
enter
lods
pop
pop
aad
nop
jns
ret
sub
pop
sarl
mov
dec
call
jo
imul
movsb
sbb
stos
cmpsb
fs
in
xor
lret
add
out
push
xchg
pop
or
insb
cmp
out
add
cmc
popf
call
sahf
mov
inc
add
ret
ret
add
cmp
lret
or
cmpsl
pushf
loop
push
in
adc
lcall
ret
lcall
dec
jge
jp
mov
stos
addb
lahf
outsb
and
adc
xor
pop
std
aaa
push
movb
in
fldenv
loope
or
add
cmp
popf
pop
jl
pop
gs
fistpll
dec
movsb
test
push
sub
call
repnz
es
repz
arpl
pop
xchg
mov
pop
sahf
xor
push
or
ret
call
fcmovnbe
lods
sbb
cltd
iret
test
jne
and
lret
fists
push
and
cmpsl
lret
pop
lret
lret
movsb
insl
add
ss
sbb
cwtl
pushf
xchg
mov
mov
sbb
xchg
out
fsubrs
fwait
add
adc
pop
and
add
pop
in
sbb
ljmp
loope
test
cmp
or
mov
test
sub
out
clc
flds
adc
mov
or
jecxz
js
xor
pushf
fsubrl
pop
jbe
cli
movsl
data16
dec
xchg
lcall
add
outsb
push
xor
lock
addr16
mov
sub
xchg
cld
lcall
in
js
push
or
loop
fcoms
xchg
mov
cmpsl
mov
adc
call
repz
add
daa
pop
inc
push
add
cmp
adc
dec
aas
sahf
hlt
nop
xor
jecxz
mov
mov
lret
addb
lret
enter
test
mov
fidivs
in
repz
mov
lods
mov
jl
pop
cmp
mov
out
pop
xor
lock
rcl
push
add
mov
jbe
nop
pushf
ror
movb
stos
cmp
pop
js
mov
xchg
mov
adc
add
out
dec
ljmp
mov
jae
mov
aaa
test
jne
push
dec
or
pop
or
inc
add
add
popa
roll
pop
add
pusha
add
ret
bound
mov
scas
in
loopne
das
pusha
add
arpl
or
push
adc
sub
roll
loope
lods
xor
cs
push
aam
or
ret
lods
mov
xchg
inc
inc
add
jbe
js
int3
pop
add
xchg
cmp
clc
jns
and
add
pop
icebp
insb
imul
sbb
push
mov
fprem
xor
fnsetpm(287
jecxz
jb
in
adc
add
xchg
loopne
jge
sbb
xchg
shr
in
test
push
push
xchg
dec
int3
cmpsb
shl
and
lods
add
jnp
mov
mov
and
push
pop
lret
push
xchg
cmp
jmp
pop
cld
popf
jo
cmp
push
push
repnz
imul
iret
mov
add
shl
jmp
sub
out
ret
pushf
sbb
rcrl
sub
out
repz
or
mov
and
add
jno
ret
adc
outsb
push
add
cs
ret
lret
or
lret
into
xchg
inc
add
add
adc
sub
xchg
or
dec
jle
int
ds
stc
test
add
jbe
sub
mov
push
sti
pusha
add
xor
pop
inc
cmp
stos
xchg
mov
loope
sub
sub
cs
mov
and
push
adc
and
add
pop
fsubs
push
add
fdiv
stc
pop
sti
je,pt
jno,pt
adc
loopne
mov
out
xlat
mov
mov
jp
pop
mov
jnp
adc
mov
add
cmp
test
inc
xchg
pop
mov
add
ret
std
pop
cmp
mov
inc
dec
adc
sub
iret
mov
add
pop
stos
pusha
add
jge
das
jb
jg
in
pop
addb
lret
dec
sbb
push
xchg
pushf
negb
cmpsb
orl
dec
jno
ljmp
aas
imul
sub
add
adc
call
mov
rol
add
inc
add
in
or
les
rol
lahf
outsl
repnz
lret
test
push
jg
gs
mov
inc
ljmp
jecxz
sbb
add
or
xchg
rolb
and
cmp
icebp
lret
data16
mov
shlb
pop
test
adc
xlat
mov
addb
ja
pop
mov
or
mov
fs
adc
add
add
test
add
or
cmpsb
imul
jl
mov
inc
mov
pop
mov
add
iret
sub
outsl
movsb
fs
cwtl
mov
in
mov
aad
scas
outsb
dec
jmp
imul
add
clc
add
aaa
pop
mov
rolb
hlt
xor
scas
mov
pop
dec
dec
or
pusha
add
lods
xchg
insl
mov
icebp
inc
add
add
popa
sti
mov
mov
or
shl
les
imul
call
add
add
add
mov
add
lds
push
adc
repz
notb
pop
aas
enter
pop
jne
add
outsl
xchg
dec
repnz
test
mov
inc
add
loop
cwtl
data16
addr16
add
adc
movb
daa
pushf
movsb
movsl
jmp
outsb
push
add
dec
or
and
lahf
cmpsl
lds
fbstp
rolb
iret
in
jge
mov
ljmp
insl
ror
adc
orl
out
push
lret
hlt
nop
aad
lret
mulb
clc
cmpsl
std
pushf
dec
push
int
and
lret
icebp
stos
cmp
mov
ds
adc
mov
mov
dec
push
imul
bound
out
jnp
test
cmp
adc
inc
add
addb
std
sub
mov
sahf
and
lods
xchg
icebp
xchg
jmp
stos
jbe
lret
sbb
loop
push
cltd
and
loop
xor
loopne
pop
sti
mov
sub
push
addb
mov
fnstsw
arpl
pop
sahf
clc
and
int
pop
push
cvtdq2ps
dec
xchg
out
in
cld
sub
shlb
jle
push
cmpsb
ss
jb
mov
pop
mov
add
mov
push
mov
or
push
inc
add
sbb
pop
xor
pop
lahf
rolb
xor
push
out
pop
insb
mov
mov
outsb
mov
mov
out
jno
sub
xor
aad
popf
sub
fildl
xchg
cli
fadds
add
movsl
and
out
pop
fistpl
in
sti
sub
xor
loope
push
int
movsl
pop
in
clc
out
xor
jno
add
stos
loopne
xchg
cld
lret
jmp
sub
add
xchg
mov
inc
add
pop
or
xchg
movsl
scas
push
ljmp
les
arpl
ror
fiadds
pop
push
ja
push
add
add
jle
bound
xchg
das
jno
or
inc
jge
das
ret
push
lret
pop
inc
jmp
inc
add
xor
rolb
mov
loopne
adc
hlt
test
pop
xchg
add
add
popf
xchg
jge,pn
and
add
inc
adc
rol
add
divl
jo
cwtl
cmp
mov
add
daa
pop
mov
mov
insb
cmp
or
sti
add
jae
mov
sub
xchg
roll
jbe
add
inc
jecxz
in
test
sbb
push
test
hlt
mov
and
add
flds
sub
outsb
sbb
leave
or
pushf
cmp
stos
jno
rorb
and
hlt
in
mov
mov
cmp
addb
inc
add
ja
ficoms
out
xor
dec
push
gs
add
cmc
jmp
push
push
mov
sahf
cmp
mov
dec
popf
sti
addb
jnp
or
in
clc
ret
mov
pop
aas
cmp
mov
mov
pop
leave
out
cwtl
jae
xor
movsb
inc
lret
mov
add
rclb
add
pmullw
in
int
jae
add
inc
add
fs
insb
data16
fimuls
xlat
push
mov
add
ret
push
inc
add
pop
test
repz
mov
loopne
and
xchg
stos
fsubrs
sub
add
cmp
int
mov
nop
dec
inc
adc
pushf
dec
and
mov
inc
add
pop
mov
push
pop
push
mov
pop
movsb
inc
add
stos
add
jae
pusha
add
in
mov
lcall
lds
mov
jmp
outsb
pop
mov
in
aas
pop
adc
subl
xchg
push
bound
pop
cwtl
push
and
mov
ja
repnz
mov
cmp
jecxz
aas
push
inc
dec
add
dec
push
mov
mov
mov
add
shr
and
test
cmpsb
jno
inc
add
fs
xor
cmpsb
ja
push
aas
push
and
aad
xor
adc
add
add
xchg
cmp
jg
inc
add
xchg
mov
cld
adc
add
les
outsb
test
lods
mov
xor
out
imul
hlt
xchg
xchg
add
inc
jbe
jae
sbb
inc
add
add
popf
xor
add
test
insl
ss
xchg
pop
jno
add
or
xchg
pop
cltd
push
cmp
shll
add
movsb
sahf
sbb
pop
das
adc
inc
hlt
cmp
cmp
or
imul
push
ljmp
inc
add
ret
ja
es
inc
mov
arpl
rolb
add
addb
jp
cmp
lahf
sub
mov
dec
mov
and
cmc
shll
sbb
jnp
add
sub
adc
jns
cld
mov
xchg
sbb
jl
xchg
fsubl
mov
mov
fadds
push
add
cmp
xchg
push
push
aam
cld
dec
jbe
pop
outsb
cmc
aaa
jmp
adc
and
int3
and
clc
and
insl
xchg
lcall
data16
test
outsb
push
icebp
xchg
and
inc
movb
bound
jmp
jnp
lods
bswap
stc
out
inc
add
sti
out
pop
aaa
insb
jl
cmp
les
xor
or
loope
add
cmpsl
pop
sbb
rolb
out
hlt
mov
push
xchg
insl
out
aaa
sub
mov
cmc
adc
sti
inc
cmp
xlat
test
loop
dec
out
in
push
mov
sub
cmp
cmp
lods
shl
push
cmp
jmp
add
inc
cltd
jl
in
mov
lds
add
or
inc
add
insl
jne
arpl
add
fisttpl
fidivs
mov
ja
lret
into
pop
jae
lock
fcompl
fucomi
xchg
cld
or
enter
nop
scas
or
sub
mov
mov
movb
mov
std
ret
sub
add
movsbl
out
gs
add
cmp
fidivrs
and
mov
add
insb
sbbl
add
outsl
jg
cmp
mov
add
cmc
push
add
sub
fs
scas
call
adc
pop
adc
push
jl
loope
xchg
mov
jns
iret
push
inc
arpl
mov
popf
dec
icebp
mov
leave
cmp
pusha
add
mov
loop
xchg
jl
fwait
bound
mov
add
xchg
out
repz
imul
xor
mov
fildl
add
jo
lods
shl
or
je
xchg
push
cwtl
rsm
fisubrs
dec
frndint
sub
sub
sub
sub
in
push
cmp
loope
cmp
mov
add
int3
insb
push
mov
xor
mov
rolb
aas
push
lret
mov
mov
add
ss
popf
ljmp
sub
into
int
inc
add
movsb
dec
lret
xorl
or
add
std
call
add
das
mov
cwtl
jno
rolb
mov
gs
in
jb
shlb
add
pusha
add
push
cmp
mov
sub
xchg
popf
enter
lods
jbe
dec
push
icebp
aas
xchg
jp
add
in
movsl
ja
pusha
add
addb
add
fwait
mov
ljmp
mov
mov
dec
pop
push
jmp
xchg
push
mov
imul
push
add
lds
push
adc
sahf
add
out
insl
insl
fnsave
xchg
lcall
mov
inc
add
in
inc
addb
enter
dec
jecxz
pop
mov
imul
into
bound
dec
lods
mov
or
cwtl
arpl
leave
ficoml
jns
testb
or
and
lods
mov
addb
dec
mov
sub
push
push
xor
mov
add
lahf
cmp
in
outsb
sbb
mov
dec
cmp
packsswb
leave
add
add
sbb
sub
ret
jnp
test
fnop
pop
les
add
cmc
push
sub
sub
popa
cmp
call
push
add
adc
mov
imul
xor
test
add
push
cs
popa
ss
mov
xchg
push
push
add
dec
popa
add
push
mov
mov
ljmp
scas
cmp
sbb
add
cmp
test
sbb
sub
pop
xchg
mov
jb
and
test
inc
add
mov
cmc
dec
sub
lcall
fldl
add
mov
std
adc
loopne
mov
push
cmc
push
mov
mov
xchg
das
iret
js
push
aam
fisttpll
stos
dec
andl
adc
lret
xor
adc
adc
push
stos
inc
add
adc
cmp
in
cmpsl
sbb
sbb
mov
out
pusha
add
and
xchg
mov
cs
mov
inc
add
push
std
mov
pop
and
push
add
pop
mov
mov
xchg
std
loopne
mov
jle
scas
mov
loope
mov
add
mov
adc
test
inc
add
cltd
mov
mov
xor
into
lods
jo
jge
popa
inc
mov
xchg
test
pop
mov
dec
push
mov
shll
add
lahf
ficompl
sbb
mov
add
test
insl
dec
loopne
add
cmp
mov
test
imul
pushf
movb
adc
inc
sub
data16
push
add
mov
sub
adc
gs
sbb
cld
loopne
cmp
add
test
push
mov
stc
mov
popf
insb
xchg
mov
not
stos
push
jmp
aad
adc
sub
outsw
pop
xlat
xor
add
push
pop
dec
jns
add
insb
ret
pop
jb
add
xchg
iret
mov
dec
out
sub
popf
fnstsw
in
jae
inc
inc
add
aam
scas
fsubr
pop
sbb
aad
or
pop
int
icebp
loop
pop
imul
add
and
mov
imull
loopne
add
or
int
rorl
sti
gs
mov
lret
add
cmp
inc
add
add
mov
outsb
test
pop
lcall
movsl
test
insb
aaa
adc
idiv
gs
mov
cmp
xchg
sub
sbb
push
dec
test
mov
cmc
jp
xchg
xor
fisttpl
in
popa
sbb
add
es
add
add
mov
mov
ret
ss
imul
icebp
jl
mov
fwait
and
test
stc
addr16
add
xor
out
ds
jbe
stos
push
fistl
add
inc
sbbl
mov
je
outsl
mov
jp
jle
dec
mov
add
out
std
test
insl
mov
and
in
or
hlt
fsts
addl
add
stc
jge
fwait
push
add
add
dec
jmp
shlb
incl
add
xchg
adc
jbe
push
out
sbb
inc
add
lret
jne
mov
add
add
popa
leave
push
lcall
add
lods
inc
add
cmpsb
inc
pop
fcoms
push
jbe
sub
lret
mov
add
and
lods
dec
mov
leave
in
call
test
add
jnp
mov
or
cli
clc
mov
xor
add
stos
cmpsb
inc
add
add
add
je
pop
pop
and
xchg
xchg
pop
jl
mov
xchg
loopne
sub
lods
adc
stc
jae
pushf
mov
or
stos
cmp
notb
smsw
add
add
dec
insl
stc
and
push
pop
sbb
sahf
fnstsw
stos
cs
scas
dec
lock
dec
inc
jp
or
shrl
add
cmpsb
add
or
inc
add
pop
xor
gs
js
sub
xor
sub
pushf
fwait
inc
int3
sub
xchg
sbb
mov
jno
sub
ret
std
int
js
jle
movsl
push
adc
cmpl
dec
cld
addr16
mov
mov
and
psubb
clc
jb
cmc
inc
add
push
repnz
inc
sbb
test
jmp
and
sub
jne
or
pop
mov
push
cmp
addb
mov
imul
add
add
mov
add
adc
add
into
test
push
fcmovb
add
inc
add
add
daa
call
push
js
pop
imul
lcall
filds
adc
aam
fimull
lret
stc
fs
lahf
lock
mov
cmp
cli
jb
stos
dec
neg
xchg
into
cmc
fwait
ret
add
roll
and
sbb
fisttpll
into
pusha
add
mov
cmp
adc
jle
inc
popa
sahf
loope
int3
in
fdivs
movsb
or
fadds
push
sbb
add
inc
add
dec
mov
add
jmp
adc
in
mov
inc
add
add
pushf
mov
jo
pop
add
setne
xor
movsb
popa
hlt
scas
mov
jnp
enter
fneni(8087
nop
out
lock
test
lret
das
xchg
rolb
mov
pop
pop
outsl
sti
pop
mov
mov
movb
int3
mov
addr16
aam
add
adc
flds
push
jno
jno
pop
enter
div
inc
cmp
add
pop
adc
mov
add
add
push
ret
loopne
aaa
cwtl
add
sti
mov
popa
aam
lahf
pop
ret
inc
jmp
xchg
ss
aaa
push
out
dec
and
lock
outsb
rolb
and
fadd
add
jle
sub
add
inc
add
xor
jmp
fcoms
inc
icebp
pop
icebp
imul
add
and
xlat
mov
fisubrs
imul
std
adc
mov
mov
es
xor
dec
sub
jns
ljmp
mov
push
nop
dec
lcall
sub
fwait
enter
lds
xchg
mov
add
test
push
sub
cmp
push
addb
mov
add
lds
int
jl
test
xchg
inc
mull
xchg
in
add
lret
xlat
aad
fisubrl
mov
imul
sub
pop
adc
add
sbb
add
dec
insb
add
test
lock
iret
dec
xchg
test
xchg
jmp
fsubr
clc
in
testl
xlat
xchg
lods
pop
mov
fwait
leave
iret
push
push
fimull
sbb
addb
jne
lods
dec
lcall
cmp
and
adc
out
leave
pop
bound
adc
int3
inc
lahf
hlt
mov
jo
addb
mov
aam
dec
pop
fyl2x
sbb
jg
insl
pop
jbe
cmp
faddl
add
push
xor
outsl
clc
lods
cmp
sub
add
fwait
inc
popa
xor
test
movsl
rcr
out
clc
inc
add
add
jp
xchg
loop
fs
dec
push
stos
fbstp
push
or
jnp
movsl
gs
lods
out
push
xlat
lahf
addr16
add
int3
xchg
add
add
adc
jle
and
cmc
test
add
in
ljmp
and
sti
or
cld
push
add
fstpt
fcmovnu
pop
sbb
push
jb
frstor
or
push
add
xor
imul
aaa
insl
or
setl
mov
adc
lcall
add
fwait
lods
testb
push
mov
hlt
push
sub
mov
mov
mov
mov
lret
inc
add
xor
arpl
and
fistl
xchg
sbb
mov
push
addb
mov
mov
push
fsubl
inc
inc
add
icebp
fcmovnu
mov
lret
data16
or
in
and
pop
cld
enter
mov
inc
or
mov
push
int
cmp
cmp
loopne
aam
sarl
out
fisubrs
add
push
add
add
xchg
mov
inc
add
in
dec
pop
addb
mov
adc
dec
and
ret
loope
out
sbb
into
pop
fwait
jbe
pop
add
push
cmp
xchg
push
adc
imul
scas
inc
add
push
scas
mov
mov
or
in
cmpsb
cmp
outsl
push
cwtl
movsb
pop
jns
mov
mov
sub
shll
movb
dec
mov
xchg
rorb
out
ret
repz
and
stc
sub
pop
jmp
test
movsb
or
add
adc
addb
mov
call
adc
dec
sub
stos
pop
leave
out
push
jno
in
fwait
out
jnp
pushf
push
stos
fs
add
and
push
cmpsl
ja
arpl
stos
jl
bound
lods
pop
dec
dec
push
in
scas
mov
mov
into
xor
fdivrs
xchg
xchg
push
test
add
sbb
test
in
stos
or
pop
dec
or
jmp
test
std
mov
jbe
mov
push
push
add
testb
pop
fwait
cli
cld
lds
xor
imul
or
sahf
addb
xor
pop
push
mov
sti
pop
aam
mov
pop
push
data16
or
cli
out
rolb
cld
lahf
fcmovb
add
jmp
sub
mov
sub
dec
adc
push
repnz
mov
and
arpl
loop
je
mov
aas
fists
jbe
mov
push
add
push
add
popa
xor
addb
pop
pop
lret
fsubr
stos
in
adc
jecxz
inc
add
add
stos
mov
inc
les
nop
cld
pop
mov
bound
push
push
outsb
xlat
cmp
je
jp
hlt
rorl
xchg
cmp
jno
or
and
in
sub
cmp
imul
add
add
jnp
dec
clc
mov
jl
sbb
ret
outsl
mov
sbb
orl
sbb
pushf
movsl
jnp
jno
dec
jns
add
sahf
mov
push
xor
les
jle
enter
sbb
imul
jle
and
sbb
lret
cmp
in
ret
push
sbb
lahf
add
fimull
out
addl
cli
pop
std
cmp
xor
sahf
div
ja
push
sub
cmp
scas
rorl
icebp
daa
call
addb
add
xor
sbb
call
movb
fdivrp
add
inc
add
sub
adc
jno
mov
outsb
push
add
icebp
in
stos
mov
sbb
jge
sub
mov
sub
lock
add
adc
ret
mov
std
int3
popf
lods
xchg
cmp
pushf
cld
int
add
pop
cmp
shr
sub
add
push
xchg
into
int
outsb
push
adc
enter
fbstp
aad
lds
add
adc
fcmovnbe
bound
daa
in
int
xor
xchg
pop
dec
inc
repz
in
dec
push
loop
sub
push
stc
sub
add
sub
sarl
clc
adc
das
xchg
mov
xor
inc
add
cli
cmpsb
mov
cmp
sti
cmp
xor
loope
test
rolb
or
ficoms
decb
leave
das
or
rorl
lea
mov
daa
mov
test
add
fcoml
fildll
xchg
outsl
jecxz
cmp
mov
mov
rcr
stc
mov
lods
add
lds
add
shlb
sub
es
daa
sbb
mov
cmp
repnz
ljmp
xchg
push
mov
add
xor
and
push
add
add
pmaddwd
loope
js
adc
je
adc
and
pop
cli
roll
fldenv
add
lea
cmpsl
mov
jno
out
cmpsl
nop
pop
push
mov
movb
xor
mov
xchg
or
jecxz
decl
add
mov
repz
mov
fwait
cmc
fimull
jmp
push
insl
jge
nop
or
std
and
push
outsb
repz
mov
sbb
les
jns
pop
xchg
xchg
hlt
mov
call
add
xchg
inc
mov
jnp
scas
jg
push
addb
into
inc
mov
pop
pop
inc
xor
notb
jb
cmp
sub
aad
inc
and
or
andl
push
jb
flds
adc
popl
add
add
mov
ret
mov
and
push
jle
push
push
mov
sbb
sub
jg
insl
iret
jecxz
or
mov
push
add
aad
add
xor
lcall
test
pop
mov
icebp
mov
ret
xchg
ljmp
insl
cmp
sbb
add
add
movb
cs
lret
xor
push
push
adc
jmp
lret
mov
inc
loope
pushf
push
loopne
lods
inc
lods
inc
ret
loope
inc
sti
sbb
ja
dec
cmc
sbb
scas
dec
sub
lret
mov
mov
dec
sub
xchg
aas
imul
xor
xchg
cs
das
sbb
iret
imul
jecxz
movsb
dec
leave
push
movb
pushf
xor
jle
and
insb
push
jnp
popa
cmpsl
incb
add
lcall
repz
inc
lret
push
ret
xor
cs
add
cwtl
xor
xor
ret
adc
shrb
fwait
iret
push
and
ss
mov
lret
lret
dec
addl
lret
movsb
jb
lods
adc
lea
add
cwtl
adc
mov
inc
add
sub
push
movb
add
lcall
dec
in
or
shrb
add
xchg
inc
dec
mov
dec
lds
or
push
fsts
cli
mov
add
jl
dec
mov
push
mov
or
shrl
movsl
bound
push
add
sbb
ljmp
aad
outsl
fcomps
pop
dec
jns
add
sbb
fwait
push
ret
pop
add
sub
sub
call
out
mov
add
ja
fimuls
call
cmpsb
les
popf
mov
stos
test
add
mov
pop
hlt
mov
dec
imul
xor
lods
inc
add
jle
push
xor
add
je
es
mov
xchg
popa
repz
addb
and
popa
fcompl
sbb
mov
add
mov
xor
lock
add
jp
pop
addb
add
cmp
mov
cmp
repnz
movsb
push
rorb
movb
outsb
outsb
push
and
clc
xchg
stos
mov
add
movsl
lock
add
fstps
addb
test
popl
cwtl
stc
or
jecxz
dec
into
movsl
mov
scas
cmp
movups
repz
pop
inc
add
xor
add
jns
fimuls
js
sub
shlb
fcmovne
clc
lock
xchg
leave
jb
shrl
cmc
pop
inc
pop
sub
pop
rorl
add
dec
sbb
push
mov
jp
add
cltd
sbb
add
xchg
jp
sub
add
add
insb
scas
push
popa
jl
out
dec
or
mov
clc
out
pop
inc
add
and
push
in
push
ffreep
add
pextrw
adc
mov
mov
mov
xor
popf
mov
test
es
fisubs
xchg
sub
jne
popa
dec
fs
lahf
adc
arpl
movb
pop
jg
add
add
out
in
cmpsb
rol
add
cmp
add
xchg
jbe
rcrl
and
cwtl
lds
insl
negb
ret
push
loope
dec
inc
add
mov
or
popf
or
jae
add
adcl
shlb
mov
sbb
pop
test
jp
testl
sbb
mov
roll
mov
mov
jne
sarb
mov
dec
sub
xor
mov
add
outsb
sarb
jo
fildl
mov
xchg
xor
mov
mull
rolb
lea
pop
fs
imul
sub
outsb
inc
ss
add
decb
sub
inc
add
and
mov
mov
inc
mov
mov
mov
push
iret
int3
jmp
add
sbb
ficoms
test
lds
mov
ficoms
loope
xchg
addb
jle
sti
jnp
and
popa
shrb
sub
mov
das
hlt
rclb
pop
pop
add
shll
fwait
cmp
xor
dec
mov
loopne
jmp
nop
adc
repz
sbb
mov
rolb
roll
mov
add
test
fs
pop
add
test
movb
jl
push
ret
pop
mov
adc
cmp
lcall
pop
jne
xor
scas
jge
pslld
cmpsl
xchg
iret
inc
lods
dec
sbb
ret
push
stos
aad
add
imul
mov
lret
outsl
popa
push
aam
arpl
push
add
jae
or
addb
add
pop
rcll
cmp
out
sub
clc
and
mov
jae
xchg
pushl
or
mov
scas
jae
add
fwait
imul
hlt
mov
insl
repz
add
push
pop
cmp
mov
add
mov
adc
xchg
push
loop
int3
xor
adc
sbb
sahf
js
lret
sbb
xchg
aad
add
pushf
or
push
cmc
lahf
add
mov
xor
add
aam
movsb
sbb
adc
mov
mov
sbbl
jbe
and
pop
movb
add
lcall
jne
dec
sub
mov
in
clc
inc
xchg
push
dec
and
scas
and
popf
divb
andl
js
dec
out
mov
fisubrs
cmp
push
fadds
lcall
stos
xchg
mov
sbb
add
mov
adc
dec
add
in
imul
sbb
fisubrs
jnp
inc
out
je
push
xchg
in
or
out
mov
rolb
sub
and
add
mov
mov
jp
xchg
mov
addr16
add
xor
add
decb
outsl
cmp
dec
mov
mov
add
add
les
addr16
lock
fstp
leave
xor
jecxz
movb
clc
icebp
inc
and
pop
imul
jmp
leave
ja
mov
repnz
pop
lea
cmp
dec
addb
mov
fisttps
movntps
scas
movsl
pop
dec
cli
inc
cmp
insl
mov
sti
mov
repnz
insb
add
add
rcll
sub
xchg
add
out
loop
jbe
add
cltd
inc
or
sub
ljmp
test
dec
mov
xor
loop
jmp
scas
int3
jbe
addb
mov
or
add
pop
push
pop
sub
add
jb
push
xor
mov
and
and
lock
in
jmp
mov
bound
xchg
mov
outsl
mov
rolb
adc
fisttpll
add
push
jle
lds
mov
dec
add
push
inc
add
xchg
dec
frstor
mov
out
call
jne
loop
mov
push
dec
xchg
icebp
mov
mov
xor
lods
stos
daa
mov
loopne
adc
mov
bnd
dec
cwtl
dec
aaa
inc
cmp
jbe
mov
pop
cwtl
loopne
add
out
test
inc
add
jne
je
out
add
test
mov
cs
cwtl
loop
lret
push
cmpsl
pop
imul
inc
out
dec
lret
les
push
dec
mov
fs
adc
jnp
xchg
jmp
push
call
dec
or
lods
xor
add
adc
popl
add
lea
cmp
xchg
pop
inc
add
pushf
adc
cld
fists
dec
fucomp
or
icebp
rcrl
mov
mov
push
add
add
aaa
cmp
jb
push
jl
jl
inc
add
xor
loop
push
xor
push
shll
pop
lea
sbb
inc
add
dec
xor
es
mov
pop
mov
mov
or
enter
rorb
add
push
leave
jne
addl
fdivrs
orl
repnz
sbb
into
repnz
xor
dec
stc
sub
fldcw
dec
int
cmp
gs
mov
xor
dec
sahf
mov
cmp
add
mov
mov
mov
fidivrs
xchg
mov
iret
jb
add
add
push
pop
mov
in
inc
lahf
mov
push
inc
test
outsb
test
outsl
pop
out
push
ds
stc
test
outsb
add
xchg
dec
lock
mov
lahf
push
jnp
mov
cmpsb
ret
lcall
and
bound
js
add
pusha
add
xor
add
cld
out
pop
push
leave
push
mov
push
mov
rclb
add
xchg
add
xchg
sub
pop
imul
iret
std
in
xor
add
push
fcmovbe
push
add
add
xchg
lock
in
rorb
push
mov
stc
out
add
cmp
hlt
loope
pop
xor
add
jge
add
add
popf
pop
test
scas
xchg
cs
add
or
mov
rorl
sub
cmp
gs
repz
mov
gs
out
shrb
mov
and
inc
add
sarl
bnd
dec
mov
out
gs
add
faddl
jae
or
jg
stos
xchg
fstps
imul
sub
sarl
dec
test
mov
sar
repnz
ds
mov
outsb
pushf
popf
mov
and
cwtl
popf
das
dec
jge
std
mov
jp
push
hlt
jae
dec
js
lea
shrl
push
lret
mov
cmpsl
imul
mov
mov
pop
add
shrb
gs
scas
cmpsb
push
add
sbb
loop
add
scas
je
ds
jo
mov
and
mov
inc
add
ja
into
mov
and
nop
xor
lret
fwait
out
jecxz
call
add
bound
nop
or
inc
inc
add
pop
into
test
mov
cmpl
adc
xchg
std
add
fldenv
incl
jo
xor
add
add
xchg
mov
add
movsl
pop
push
and
dec
xchg
mov
add
jnp
xor
push
sub
popa
jno
outsb
ss
lock
mov
sub
stc
fdivl
rolb
add
jge
fimull
push
je
pop
mov
jmp
mov
cmpsb
mov
fisubrl
xor
lods
bnd
daa
loopne
add
ljmp
jg
addb
imul
lcall
dec
repnz
ret
cmc
and
leave
popf
pop
lods
inc
ds
inc
add
popf
dec
mov
add
add
pop
cltd
stos
mov
int
int
cli
sbb
add
or
inc
adc
ss
nop
sub
into
cwtl
push
mov
popa
mov
cwtl
cmpsl
sbb
shrl
outsb
mov
testb
sahf
mov
push
sarl
pusha
add
push
fcomps
push
add
rolb
add
pop
loop
or
dec
cmp
rcll
adc
lods
fisttps
fisubs
int3
mov
mov
sbb
add
cld
cmp
test
pop
loop
insb
movq
dec
cmp
aad
push
jge
cmp
movb
or
js
aaa
mov
fcom
and
out
lds
jb
push
sbb
in
pop
jnp
mov
popf
test
out
div
je
shrl
bound
addr16
ret
pop
scas
mov
add
mov
loope
pop
movsb
or
add
imul
js
jle
xor
mov
test
loope
push
fnclex
jmp
ffree
insb
mov
cmp
mov
roll
add
in
icebp
stos
pop
mov
pop
add
jp
xchg
faddp
adcl
or
repz
push
jns
sahf
cmp
push
add
popa
xchg
not
cmp
push
xor
out
and
add
jp
add
mov
fldl
add
jne
arpl
jbe
add
mov
sbb
xchg
push
mov
sub
inc
xchg
mov
aaa
ss
dec
and
popa
mov
rol
lods
and
add
mov
push
cld
inc
push
rcr
jge
popa
xor
addr16
xchg
pop
loopne
scas
outsb
dec
push
repnz
add
test
pop
xor
scas
outsl
cmc
call
mov
int
add
mov
adc
aam
add
mov
push
icebp
out
mov
std
adc
mov
push
lahf
sbb
imul
mov
test
push
int3
cltd
maxps
dec
mov
loopne
fnstsw
jle
xchg
mov
push
xchg
sbb
inc
pop
xor
sbb
xor
repnz
push
add
ficompl
adc
mov
sbb
and
call
add
fsub
dec
cs
cmp
adc
add
xlat
jnp
pop
loopne
add
push
pusha
add
icebp
inc
add
mov
test
lret
js
fadds
stos
stc
negl
xchg
and
add
cmc
into
push
lea
out
out
push
add
mov
pop
and
dec
xchg
enter
cmc
nop
fiaddl
add
movsb
test
stos
xor
adc
sub
mov
popf
fisttps
aaa
sbb
jle
sbb
xor
pop
addr16
jg
sub
sbb
pop
jmp
les
movb
cmc
adc
popa
pop
cmp
add
xchg
in
loop
xor
add
jmp
pop
jecxz
cmp
inc
jbe
jl
call
data16
cmp
cmpsb
jmp
cmp
repz
int
xchg
xor
jo
jae
jbe
inc
lock
incb
mov
jg
test
xchg
and
cwtl
test
push
scas
stos
fsubs
and
lods
rolb
dec
fnstenv
and
lock
dec
add
clc
inc
mov
sub
jns
push
imul
cltd
or
jecxz
add
fmull
sub
cld
outsl
sbb
mov
jns
out
pop
inc
and
int
inc
add
mov
imul
add
cmpl
je
addb
popf
jle
lahf
pop
mov
lods
xorl
ss
mov
repz
adc
xchg
sub
lret
xor
addl
les
or
mov
fsubrl
stc
inc
pop
sbb
dec
mov
add
add
xchg
jne
stc
rcr
mov
sub
mov
testb
dec
push
js
movsb
stc
xor
xchg
into
pushf
popf
jmp
add
fs
add
add
sahf
sub
add
inc
sub
negb
lea
pop
pushf
sbb
add
ljmp
es
jl
xchg
dec
jecxz
add
mov
mov
jne
pop
inc
inc
add
mov
mov
xchg
xchg
out
pop
fisubl
bound
stos
scas
inc
add
add
fwait
adc
push
aam
lretw
test
lds
lret
push
inc
add
xchg
ja
add
sbb
bound
pop
rolb
adc
mull
les
rcll
add
add
sbb
cmpsl
pop
xor
fs
imul
in
mov
push
repz
push
sbb
cli
neg
cltd
mov
push
sub
add
faddl
test
movsb
xchg
mov
mov
addb
jle
pop
movsl
push
cli
fwait
pop
aaa
imul
add
addb
push
dec
ficompl
stc
push
jbe
sbb
insb
scas
xor
add
sub
add
push
lea
mov
pushf
pushf
loop
ret
scas
rolb
jl
les
sub
dec
lea
dec
lds
add
insl
test
negl
mov
cpuid
lret
add
clc
cmpsl
lret
clc
shll
jg
pushf
les
das
cs
repnz
jge
int3
insb
daa
cmp
dec
dec
mov
jp
and
scas
sti
in
arpl
outsl
or
add
insb
shlb
pop
mov
pop
gs
jb
movb
mov
xor
push
add
adc
call
mov
in
push
add
ljmp
gs
in
add
push
test
or
add
mov
inc
add
jo
cmp
out
test
pop
int
xor
roll
mov
enter
push
jb
enter
push
add
add
or
add
icebp
movsb
mov
addr16
or
add
add
mov
aad
lea
cmc
add
mov
fiaddl
push
cli
xchg
mov
outsb
inc
rorb
mov
cmc
movb
and
out
mov
jp
lock
ds
rolb
les
add
dec
outsl
ficomps
int3
sbb
ficoml
jl
xor
mov
lock
mov
sub
loope
call
sub
push
jg
jmp
leave
xlat
xor
mov
add
add
add
hlt
mov
fstl
cmp
mov
cs
enter
push
jmp
lea
iret
rolb
dec
int3
sub
cmp
outsb
pop
dec
pop
pop
shrb
add
mov
fbstp
pop
pop
inc
add
rolb
cs
fwait
sub
in
js
xchg
pop
loop
add
aam
test
xchg
mov
lcall
dec
popf
scas
cmp
out
aaa
jge
aad
sbb
es
and
fs
int
xchg
je
jmp
sub
jp
mov
add
xchg
aam
lods
or
pushf
mov
or
mov
mov
xchg
and
test
push
add
jmp
push
out
add
mov
mov
jb
lods
mov
sbb
mov
mov
or
int
dec
rorb
inc
sbb
or
add
cli
xlat
push
mov
mov
jmp
cmp
out
jb
adc
jns
int3
xchg
in
lock
mov
cmp
add
mov
and
lret
add
jb
addb
add
mov
sbb
incb
mov
scas
pop
mov
add
repnz
push
aam
test
lahf
dec
popf
mov
mov
popf
pushf
and
push
inc
add
test
ds
add
lret
sbb
add
movb
mov
cmpsl
mov
inc
aad
pop
add
cmp
mov
mov
ja
mov
imul
and
dec
addr16
bound
add
mov
sub
loop
in
int
cld
pop
pop
inc
add
cld
lahf
popf
mov
add
loop
and
fnsave
testb
in
adc
add
mov
push
xchg
mov
fnstenv
ljmp
je
inc
dec
or
push
out
cs
arpl
mov
jnp
loop
jge
ljmp
add
dec
das
test
inc
pop
xchg
iret
aad
repnz
jle
add
mov
imul
cltd
cs
fs
add
bound
pop
push
add
pop
leave
xor
mov
xlat
imul
lds
popa
lcall
popa
cmp
divl
scas
insl
jg
das
daa
fs
add
adc
outsl
sahf
mov
lcall
popa
int
in
out
mov
rep
sub
push
add
popa
hlt
ja
push
jo
sbb
adc
mov
jb
ret
enter
lods
jbe
jo
shrl
out
pop
push
and
aaa
rclb
scas
aad
xchg
popa
cmc
mov
adc
adc
sbb
push
sbb
and
mov
push
and
pusha
add
push
repnz
adc
jae
add
rclb
in
push
adc
and
lcall
jae
pop
ret
cs
out
mov
mov
lods
sub
cmp
inc
sbb
add
in
push
fcmovnbe
insb
and
add
push
lret
add
movsl
jl
fidivl
outsl
or
ljmp
add
mov
jo
xchg
mov
add
out
pop
fucomp
bound
cmp
int3
cltd
jl
shrl
add
jbe
adc
add
add
aaa
scas
jbe
call
cmp
jp
mov
push
lret
add
adc
mov
lds
icebp
push
add
sbb
in
dec
pushf
xor
call
fcomps
daa
mov
out
xor
add
dec
pop
pop
stos
scas
int
rolb
popa
out
shl
mov
mov
addb
or
pushf
icebp
inc
add
xor
pop
shll
imul
push
inc
add
addb
data16
in
lds
sbb
ret
nop
fsubr
mov
fld
add
je
in
cmpsl
addb
lcall
lret
mov
lret
outsl
lea
xor
adc
ljmp
pop
in
lods
mov
test
push
add
subl
les
xchg
push
mov
jl
cmp
jl
inc
add
xlat
mov
shrl
nop
pop
and
push
mov
call
fs
repz
icebp
inc
push
lret
push
aas
sub
nop
push
cmpsl
movups
test
sbb
je
xchg
sahf
idiv
jno
add
adc
aas
jmp
mov
xchg
dec
repz
add
loopne
insl
decb
aaa
into
aam
roll
add
jl
aaa
cltd
add
xor
cmp
into
jns
hlt
jecxz
push
js
aas
addb
push
scas
pop
xchg
imul
push
cli
xchg
test
cs
adc
fldcw
sbb
add
jb
mov
jne
jp
jbe
push
cmc
mov
es
add
jne
pop
pop
jbe
int3
and
add
and
aad
mulb
cmpsl
xor
mov
mov
popa
jecxz
sbb
mov
adc
std
mov
sbb
js
inc
add
push
rclb
sbb
fwait
mov
lds
mov
add
jecxz
add
jb
add
cld
push
mov
add
jbe
add
out
push
jecxz
lods
and
pop
addr16
mov
jno
mov
std
lods
cmp
sub
mov
jmp
add
and
rcrb
in
jae
das
or
mov
adc
fs
pminsw
cmp
xor
adc
outsb
in
or
and
add
cmp
jns
sub
fsub
push
mov
sub
mov
insl
mov
and
cmp
adc
in
decl
and
mov
add
push
in
std
mov
mov
add
sbb
xor
add
or
shl
or
mov
fucomip
mov
dec
mov
lods
pop
and
out
fldenv
push
loopne
cmpsl
lea
movb
xchg
lods
inc
sbb
jo
into
mov
or
dec
int3
or
or
add
sub
xchg
mov
imul
xchg
inc
inc
add
xchg
jle
xor
loop
int
in
stos
pop
cmp
inc
add
sarl
xor
mov
pop
fcomp
dec
push
repz
cmp
inc
add
inc
jno
dec
cmpsb
into
int3
mov
rclb
sub
icebp
cmpsb
add
ss
xor
gs
mov
insl
dec
cmp
push
ret
adc
dec
cli
add
sbb
pushf
repz
std
push
std
loope
popa
pop
mov
xchg
test
outsl
jae
sbb
cltd
mov
sbb
out
pushf
sub
xor
and
lret
fnstenv
adc
xorl
add
inc
xorl
movsb
test
ret
aaa
xchg
rorb
add
inc
cmp
int
inc
out
inc
add
mov
test
mov
stos
aam
repz
adc
jp
ja
inc
add
outsb
and
mov
xlat
in
or
es
inc
add
push
rcrb
pop
add
addr16
sub
and
add
push
fldt
aad
inc
add
daa
outsb
sub
add
add
sahf
dec
pop
cltd
xor
and
test
fstpt
test
mov
addb
nop
fcoms
xor
pop
cmp
add
mov
sbb
inc
data16
add
aaa
mov
addr16
cmpsl
mov
dec
in
test
mov
push
add
add
pop
or
add
sbb
mov
sti
xor
jecxz
add
sub
push
xor
outsb
adc
bound
jae
mov
add
add
repz
add
xor
push
fprem1
repnz
loopne
insb
mov
sahf
addb
call
les
jge
sub
adc
jae
push
lds
fcoms
sub
jb
add
gs
jo
mov
pop
outsb
push
scas
or
dec
inc
xchg
icebp
loope
stos
or
pop
adc
mov
add
and
adc
pusha
add
sbb
ficomps
lahf
adc
xor
add
aad
aad
xor
lahf
int
sbb
jae
iret
out
mov
jmp
add
inc
add
jo
fnstcw
dec
lret
pop
inc
xor
sub
add
movsl
inc
add
dec
or
add
cli
push
push
popa
mov
add
sub
enter
mov
dec
push
inc
add
cmp
out
lock
outsb
scas
test
add
mov
add
call
or
pop
xchg
orl
fimuls
xor
adc
dec
decl
jge
inc
xor
mov
xchg
cmp
and
cmp
dec
in
fcompl
imul
clc
xor
clc
aam
xchg
lods
lods
movsb
loope
ds
sub
and
adc
mov
sti
or
inc
add
ret
or
insl
jb
add
leave
int
pushf
nop
nop
mov
pop
xchg
dec
cmp
out
repz
cld
pop
outsl
hlt
cmp
addb
shlb
mov
ret
cmc
jbe
mov
daa
xchg
ffree
add
add
mov
mov
rolb
add
ss
add
xor
outsl
fcmovu
in
jae
mov
in
dec
roll
jecxz
mov
add
loop
xchg
and
pushf
out
sarl
bound
mov
in
xor
inc
aad
mov
sub
ficomps
subl
mov
xchg
out
ss
add
add
scas
dec
xchg
cmp
push
arpl
dec
and
lret
sub
pusha
add
test
jmp
pushf
cmp
or
les
int3
sub
sar
jle
in
and
add
mov
dec
lods
aad
jecxz
add
imul
sbb
add
xor
mov
mov
sub
leave
or
add
das
out
jns
push
and
push
and
addr16
mov
push
test
negb
ret
mov
pop
and
dec
test
xchg
and
pop
jnp
mov
xchg
jp
popf
std
lcall
test
hlt
pusha
add
fisubl
add
mov
test
cmp
pop
mov
and
xchg
sbb
pop
sbb
sti
das
inc
pop
adc
add
push
pop
out
fistpll
sub
jne
or
enter
mov
je
stos
jo
les
les
mov
xchg
sub
fcmovnb
lock
repz
jmp
jns
mov
mov
mov
inc
add
cmpsb
movsb
cld
push
int
cmp
cmc
xchg
xchg
mov
add
sbb
mov
xchg
rolb
mov
inc
add
mov
inc
mov
jno
gs
pop
mov
xor
movsl
inc
xlat
sub
cmp
cmp
icebp
stos
out
ret
movl
pop
int
pop
mov
lock
add
jp
fcomp
popa
in
push
test
add
add
sti
addb
pusha
add
add
rolb
mov
or
cli
xchg
cwtl
sbb
sti
shll
push
pop
xchg
lock
add
das
inc
and
push
aaa
into
mov
arpl
popf
and
xor
add
insb
insb
xor
addr16
ret
inc
add
lods
or
add
in
aad
clc
cltd
mov
mov
inc
xchg
stos
shll
int3
inc
push
jae
pop
mov
arpl
insl
ret
pop
outsl
and
popa
fisubrl
pusha
add
arpl
or
loop
and
adc
add
stc
int
push
jb
add
insb
dec
sub
add
xchg
dec
xor
addb
fsubl
mov
test
pop
jge
stc
ja
lds
rcll
inc
add
test
fcoms
repz
iret
and
movsl
or
movsb
adcl
arpl
jmp
or
jnp
push
xchg
xchg
cmpsl
cmp
jb
leave
push
mov
mov
shll
jp
ret
sbb
and
int
mov
out
int3
sbb
mov
cmp
fnsave
adc
inc
add
repz
sub
jo
add
inc
add
out
pop
jnp
rolb
dec
out
aas
xchg
jno
ljmp
out
push
add
mov
mov
jb
xchg
imul
sub
and
or
test
outsb
jb
movsb
insb
cwtl
jp
shl
add
pop
out
pop
jmp
imulb
sub
lock
inc
lret
fldt
int3
mov
je
fbstp
icebp
inc
add
repnz
and
mov
je
pop
pop
aas
mov
add
imul
shll
sbb
hlt
popf
jle
sub
daa
shll
rcr
ja
xor
mov
dec
pop
iret
pop
nop
cmp
inc
and
aas
xchg
push
sbb
push
add
mov
adc
add
enter
lea
jge
sub
out
orl
les
lods
test
test
test
lock
les
or
loope
in
xchg
xchg
insl
cwtl
out
int
xor
stc
fistl
dec
std
add
mov
or
pop
mov
sarb
mov
jecxz
add
fsubl
fs
fisttps
inc
push
add
add
and
inc
fstps
sti
pop
mov
bound
mov
repz
xchg
pop
cmp
mov
adc
cmp
mov
addb
addb
loopne
pop
frstor
and
pop
pop
adcl
push
add
xlat
bound
sbb
mov
xchg
das
movsb
jl
sbb
jbe
movsl
pop
xchg
sbb
xchg
popl
fnsave
insl
stos
jmp
insb
jbe
sub
js
add
ss
jmp
push
test
sub
addr16
mov
inc
add
mov
xchg
test
and
bound
scas
xor
lret
add
jo
popf
and
xchg
mov
pop
adc
cld
jp
aad
xchg
pmullw
push
imull
clc
call
add
xor
lea
jbe
loope
popa
jmp
ljmp
xchg
xor
xchg
mov
or
fdivl
test
and
stos
aad
cmp
shr
rolb
cmp
xor
shr
cli
inc
add
inc
sbb
mov
out
and
in
jle
mov
push
cwtl
clc
and
fsub
outsl
jb
push
addr16
xor
sub
movsb
es
lcall
loope
push
lret
sarl
inc
add
cltd
sbb
rolb
and
stos
mov
and
mov
sub
adc
scas
and
add
inc
xchg
mov
or
aad
mov
adc
add
cwtl
out
mov
js
dec
push
popf
mov
xor
mov
daa
push
jp
inc
add
xchg
movsb
add
notb
jbe
mov
addr16
add
cmpsl
mov
push
jl
inc
cltd
and
lea
outsb
sbb
add
mov
inc
add
fs
sub
addb
outsb
jge
data16
les
and
mov
sbb
mov
xor
mov
daa
cld
repz
add
pop
push
testb
mov
enter
xchg
imul
scas
mov
gs
hlt
jae
filds
cld
addb
pop
cmp
test
cmp
ror
add
mov
iret
xchg
mov
test
cmp
outsb
cmp
pop
rclb
mov
out
mov
cli
mov
das
jmp
push
or
xor
jo
std
jmp
nop
mov
push
popa
ss
pop
lcall
dec
in
xor
iret
xor
sahf
stc
cltd
cmp
call
lods
fldl
orl
data16
sub
add
jae
adc
push
add
ret
insb
xor
loop
sbb
cmp
mov
xchg
xor
cmp
stos
mov
aaa
sub
subl
or
notl
or
dec
cmp
push
hlt
fidivrl
pop
stos
jnp
mov
or
lods
sub
add
mov
pop
add
xor
xchg
mov
rolb
lret
dec
push
iret
push
sub
push
push
add
or
xchg
stos
push
sub
scas
int3
and
add
into
jno
push
cwtl
scas
inc
add
sbb
pop
cmpsb
xchg
jg
leave
ret
pop
jns
idiv
mov
mov
and
add
popa
fcompl
movsb
mov
mov
stos
call
int
in
xor
mov
cmp
mov
jp
arpl
gs
insb
pop
pusha
add
add
xchg
sub
je
ret
add
jo
add
repz
dec
repz
cwtl
imul
or
cmc
lcall
push
rcrl
int
jle
sti
or
add
jbe
cmp
mov
xchg
add
push
or
cwtl
mov
mov
cmpsl
dec
pop
sub
loop
add
pusha
add
and
and
xchg
lds
add
add
cltd
lret
jl
pop
adc
addb
lods
mov
aaa
lea
pop
adc
xor
stos
jle
cmpsb
xchg
fsts
loop
mov
aaa
dec
je
jne
movsl
push
rorl
sbb
mov
jmp
push
popf
inc
cmp
ret
stos
in
inc
add
xorl
in
inc
add
jne
cs
lahf
jge
mov
cmp
ret
jg
mov
mov
cs
pushfw
roll
notb
xchg
rcrb
lods
cmpsl
mov
add
imulb
insl
xchg
jae
dec
and
cmpsl
dec
adc
jb
jae
iret
repnz
es
pusha
add
dec
xchg
stos
cmp
cmpsb
inc
add
or
push
add
xchg
add
repz
sbb
sub
imul
or
mov
stos
out
add
or
jl
pushl
sbb
and
mov
pop
dec
rorl
sbb
add
add
sarb
cmp
jmp
dec
imul
xor
mov
loopne
dec
cwtl
mov
sbb
add
and
dec
mov
push
cld
mov
lea
cmp
adc
imul
xor
arpl
push
add
add
mov
mov
xchg
ret
pop
dec
sbb
loope
ljmp
fwait
ljmp
test
stos
daa
hlt
out
cmp
add
add
ljmp
leave
cmpsb
stos
stc
adc
loope
pop
shlb
mov
bound
dec
in
loope
cs
xlat
mov
in
dec
into
lcall
add
sahf
scas
mov
in
aaa
inc
rclb
test
sub
ret
jne
in
in
and
outsl
adc
testb
fnstcw
mov
xchg
cmc
scas
cmp
nop
push
shl
std
or
cmp
jno
xchg
mov
pop
xchg
mov
out
dec
sbb
das
jle
cld
xchg
adc
mov
jmp
inc
movsl
dec
fdivr
xchg
testl
add
ret
adc
aad
lret
sbb
or
test
fdiv
inc
and
inc
add
dec
fwait
adc
imulb
push
adc
enter
pop
in
pop
cmp
mov
insl
inc
lahf
lahf
add
push
lret
cmp
aaa
and
push
push
jns
lea
je
stc
jle
add
adc
imul
dec
shll
add
mov
lcall
add
push
push
sub
add
pop
sbb
inc
rolb
ror
inc
add
es
inc
add
imul
addb
push
push
xchg
push
gs
push
or
aas
shlb
shr
jle
clc
adc
mov
jg
mov
and
pop
xchg
xchg
add
cmpsl
pop
idivb
add
xor
add
xchg
add
xchg
xchg
and
sub
test
jle
add
push
les
rolb
mov
xchg
add
and
xchg
test
push
movb
aas
and
in
inc
loope
adc
mov
mov
dec
out
rcr
dec
insb
pop
adc
xor
add
sub
insl
and
add
sti
adc
imul
daa
aad
add
push
add
mov
cltd
jl
mov
and
xchg
test
test
add
mov
push
add
addb
aam
add
xchg
jp
stos
jbe
scas
outsl
mov
pop
inc
mov
test
fistl
add
movsl
test
inc
add
rclb
hlt
fs
and
or
adc
cli
push
add
dec
jmp
push
sbb
mov
sub
dec
inc
add
push
jg
xchg
xchg
orl
ret
lcall
loop
out
gs
xor
xor
mov
test
xor
dec
rolb
int
jae
mov
jge
dec
outsl
mov
mov
mov
popf
lret
add
xchg
lcall
push
add
mov
and
jecxz
imul
jecxz
add
jl
addb
adc
jecxz
pop
cmp
cmpl
ret
addb
add
bound
inc
add
icebp
jmp
xchg
cwtl
hlt
cmp
es
lock
mov
jle
inc
outsb
popa
out
or
out
ja
clc
outsb
jle
icebp
mov
loopne
mov
pushf
fildll
gs
in
jnp
into
xor
add
sbb
in
lods
imul
cmpl
sbb
mov
ror
push
push
mov
add
cld
ret
pusha
add
jge
sbb
imul
data16
mov
fldcw
and
fisubl
test
mov
dec
fwait
cmpsb
pop
adc
sub
pop
xor
insb
in
jle
jmp
xchg
lcall
mov
pop
pop
or
test
or
mov
sti
leave
mov
sbb
add
jmp
cmpsl
inc
xchg
mov
enter
add
sub
mov
sarl
xchg
pop
jge
insb
cs
adc
inc
add
xor
jp
rolb
mov
adc
adc
adc
and
mov
sahf
loop
add
adc
add
mov
add
leave
mov
dec
pop
mov
js
push
addb
add
add
xchg
fs
xor
movsl
shlb
fcompl
daa
inc
loope
xor
repz
gs
jne,pt
cmpsb
jl
pop
popl
or
jmp
add
cmp
jo
add
add
cmp
sub
xchg
mov
lds
addr16
or
les
test
mov
sbb
cmpsl
out
sub
push
add
pusha
add
push
arpl
out
gs
dec
aam
fstpt
stc
aaa
ljmp
data16
jle
sub
cltd
add
addb
mov
and
popa
frstor
inc
add
jge
mov
test
push
outsl
mov
gs
das
dec
add
into
and
mov
add
icebp
inc
or
jo
pop
mov
fcmove
mov
jnp
mov
pop
lock
shrl
cmp
pusha
add
add
cltd
add
mov
test
test
inc
add
dec
test
sbb
mov
and
add
js
pop
sub
lods
js
cmpsl
pop
push
push
mov
add
je
dec
pop
and
xchg
jge
std
scas
test
vmwrite
pop
cmp
push
or
add
pop
push
movsl
ljmp
pop
push
sub
cmp
sti
mov
outsb
ret
jns
xor
mov
sbb
xlat
movsb
movsb
cmp
mov
sub
add
test
dec
dec
adc
mov
aas
inc
xor
cmp
sti
inc
add
mov
mov
cli
jbe
xchg
jl
mov
loop
mov
cmp
adc
push
imul
les
jne
test
imul
iret
sub
fimuls
pop
rcr
cmp
push
leave
inc
inc
add
addb
push
cmp
dec
shll
sub
outsl
xchg
and
pushf
popf
push
test
cmpsl
cmp
movb
inc
add
dec
jne
arpl
mov
fidivrl
jb
and
inc
add
xor
cli
bnd
add
jmp
jp
fwait
cmpsb
sarl
cmp
xor
dec
mov
es
xchg
push
mov
jmp
cmp
pusha
add
jnp
dec
xor
nop
enter
and
mov
mov
shlb
add
dec
stc
inc
add
add
hlt
jbe
out
test
mov
pop
adc
inc
add
jnp
mov
and
or
sbb
xchg
outsl
xchg
sub
jge
mov
fldcw
adc
rcrl
ficoms
xchg
es
int3
xlat
es
pushf
jno
testl
mov
vpshuflw
xor
lods
or
hlt
cmc
sub
bound
xchg
add
das
lods
fs
les
cmpsb
or
push
nop
imul
fiaddl
nop
and
lods
nop
pop
les
test
and
xchg
gs
mov
fs
dec
jnp
jmp
or
add
jne
movb
enter
xchg
jle
pusha
add
ds
lock
repz
stos
jne
sbb
xchg
or
adc
pop
frndint
dec
cmp
ds
or
xor
dec
mov
add
stc
in
and
inc
lret
test
cmp
movsl
inc
inc
add
mov
adc
push
adc
add
push
ljmp
or
push
lcall
and
sbb
out
inc
mov
add
inc
cmp
insl
jle
jb
fimuls
mov
addl
mov
jbe
jge
xchg
adc
xchg
xor
pop
imul
mov
mov
or
inc
add
out
repnz
cmp
cltd
or
outsb
pop
daa
fsubr
mov
push
aaa
lock
pop
mov
int3
xor
sub
arpl
adc
scas
sbb
xchg
dec
mov
mov
pop
pop
dec
pop
xchg
std
mov
movsb
out
lds
sbb
ja
stc
sbb
jne
jl
inc
addr16
add
xchg
add
push
sbb
add
in
pop
dec
inc
add
testl
add
pop
movl
mov
divb
xchg
jnp
int3
imul
mov
add
xor
mov
add
flds
or
jmp
lret
popa
popf
push
add
mov
aaa
cmp
cwtl
pop
mov
mov
mov
mov
mov
mov
mov
pop
sub
call
add
add
popa
sbb
lret
scas
scas
orl
mov
pop
popf
sub
and
int3
in
cwtl
jecxz
mov
mov
shlb
arpl
xchg
cs
test
jmp
add
dec
lcall
push
mov
mov
add
push
nop
xor
xlat
sbb
lock
cltd
dec
les
pop
sbb
pop
and
push
xor
adc
fldz
icebp
xlat
pop
shrl
sbb
add
loopne
jge
lcall
insb
sub
add
ret
or
scas
mov
add
add
xlat
cmp
mov
add
xchg
test
sbb
add
filds
lods
push
test
push
dec
pop
sub
and
inc
add
loope
pop
into
mov
mov
daa
or
mull
out
add
add
es
mov
repz
repz
movsb
inc
add
int
mov
sub
or
xchg
add
mov
lea
test
jmp
mov
test
sub
jl
cmp
int3
stc
test
add
sbb
test
adc
push
rcll
cli
push
aad
pop
js
pop
pop
sub
nop
shll
addl
cmp
add
scas
mov
outsb
mov
subl
cmc
stc
sbb
cmp
daa
divl
int
sub
test
xlat
sbb
pop
pusha
add
xchg
push
insb
cld
mov
fistpll
pop
push
push
lret
outsb
push
pushl
call
bswap
repz
add
cmp
add
pop
dec
repz
add
fistpll
sbb
jmp
add
fadd
add
dec
mov
jnp
inc
sub
adc
or
fildl
shlb
mov
fs
pushf
dec
mov
and
push
inc
add
ror
fistpll
inc
add
add
add
sti
jne
nop
push
add
loope
push
or
sub
arpl
pushf
loop
push
add
mov
adc
pop
lods
pusha
add
sbb
mov
jecxz
sbb
insb
dec
xchg
xor
xor
rcll
mov
cltd
test
jno
and
mov
lahf
jo
jbe
cmp
mov
mov
xlat
xchg
add
pop
xchg
jp
mov
pop
cmp
add
xor
add
ret
sub
xor
repnz
and
test
and
jmp
add
pop
test
mov
xchg
decb
insl
jbe
pop
xchg
add
xchg
and
pavgb
xor
roll
jno
cmp
lret
outsb
push
add
les
cli
mov
add
add
adc
xor
xchg
or
sub
jecxz
jo
cmpsb
ja
test
lods
fisttpl
adc
add
add
adc
push
mov
adc
cmpsl
std
mov
popa
movsb
cmp
addb
add
sbb
test
sbb
sub
rep
mov
xchg
adc
jle
xor
sub
xchg
cmpsl
and
in
mov
mov
adc
xchg
rorl
std
sahf
xchg
scas
addb
jge
dec
mov
or
pusha
add
sbb
ret
ret
sub
add
inc
cmpsl
stos
pop
sub
mov
enter
lahf
incl
xchg
cli
fstpt
pop
inc
add
lcall
rorb
lock
outsb
in
lcall
or
add
pop
addr16
les
add
xlat
adc
cmp
arpl
je
add
add
push
and
add
icebp
add
pop
cs
sahf
fbstp
inc
nop
ficomps
inc
icebp
xor
stos
add
xchg
add
push
arpl
bnd
pop
mov
inc
add
rcrl
adc
mov
pop
jp
insb
movsb
inc
adc
and
mov
dec
sub
std
push
add
push
std
test
xchg
mov
fstpl
mov
or
mov
and
xor
sbb
bound
fs
xor
cmp
roll
sub
jecxz
jo
in
aam
fsubrs
xchg
pop
addl
ljmp
sub
sub
adc
pop
cmpsb
mov
adc
das
lds
ds
pop
cmpsl
scas
scas
movl
inc
dec
sbbl
adc
cltd
mov
adc
imul
das
ljmp
add
inc
xchg
leave
add
testb
and
inc
add
aad
jge
fisubrs
and
sbb
sarb
ret
shlb
test
add
xchg
mov
lret
mov
test
dec
loop
sti
cmp
xor
in
lcall
sub
dec
out
out
inc
movsb
test
mov
ljmp
shrl
mov
test
jg
movb
xchg
push
push
push
sti
jno
movb
add
cmpsl
jecxz
ret
or
mov
cmp
add
push
or
iret
mov
daa
pop
mov
mov
add
xor
mov
mov
lret
mov
and
mov
adc
jbe
clc
cmp
add
jge
adc
add
inc
lahf
jae
adcl
or
xchg
fisttps
pop
jge
add
xchg
ret
jne
enter
xchg
jl
dec
aas
jl
sbb
movsl
cmp
xor
jge
jecxz
push
outsb
shll
add
mov
aaa
ja
add
scas
mov
jbe
and
mov
enter
push
jnp
rclb
add
mov
add
in
mov
test
insl
lss
mov
add
adc
xchg
mov
add
xor
add
lcall
cmp
mov
add
add
sar
addr16
fs
push
jae
dec
stc
mov
in
cmc
cmp
inc
add
push
lahf
or
add
std
outsb
scas
cmp
mov
out
push
shr
sbb
push
cmpsb
xor
std
mov
scas
repz
out
dec
mov
sub
les
adc
xor
lahf
or
fiaddl
mov
cmp
lods
out
test
js
faddl
add
mov
mov
inc
mov
add
ljmp
xchg
xchg
pop
ljmp
add
inc
movsb
enter
aaa
mov
cmpsl
je
and
nop
fstl
push
addb
xchg
inc
add
es
std
inc
add
add
sub
sub
fwait
jmp
adcl
mov
stos
imul
orl
mov
add
into
mov
add
or
push
pusha
add
dec
jb
mov
pop
adc
xchg
aas
and
add
cld
addb
pop
test
inc
add
cli
sahf
pop
jno
in
mov
add
sbb
add
mov
xor
add
mov
add
es
add
add
push
add
mov
mov
sbb
sahf
add
push
push
shlb
xlat
add
shll
mov
imul
ja
jo
out
jo
add
mov
lahf
inc
add
rolb
mov
shrl
fcoml
xchg
mov
addb
push
mov
xchg
rolb
test
adc
aas
cmp
push
or
inc
out
xchg
xlat
test
add
inc
add
cwtl
and
jecxz
add
adc
stos
push
addr16
xchg
sub
inc
mov
outsb
pop
das
add
add
pop
movsl
cmp
repz
pop
cli
lahf
sbb
ret
push
inc
cmp
jl
pop
jb
pop
pop
outsb
xchg
ljmp
mov
push
test
mov
cmpsb
pop
lcall
jns
cmp
cmpsb
cmp
cmpsl
in
mov
iret
inc
dec
inc
add
xor
loopne
jnp
adc
cmp
mov
dec
and
add
jecxz
sbb
imul
jae
sub
add
aaa
jmp
mov
aad
loop
add
push
mov
inc
sahf
jno
add
xor
mov
lods
inc
add
in
out
mov
int3
test
mov
rcrl
cmp
movb
or
inc
add
rclb
aas
rorb
cmc
sub
insb
push
out
cmp
hlt
and
cwtl
lock
inc
add
push
insb
add
mov
out
and
pop
sti
cltd
jae
aad
sahf
xchg
sti
cmp
pop
je
mov
movsl
pop
je,pn
sbb
mov
and
add
fiaddl
dec
les
jg
xor
or
in
sbb
adc
repnz
and
mov
popa
mov
mov
stos
and
test
pop
lock
jl
mov
dec
cmc
in
scas
pop
jnp
add
xor
mov
and
inc
ss
push
add
mov
repnz
mov
les
push
push
sub
dec
or
jle
inc
push
xor
push
dec
xor
lret
or
mov
cmp
stos
sbb
jbe
jb
inc
add
stos
imul
lea
inc
add
add
xor
add
or
dec
xchg
adc
pop
dec
cmp
repz
lahf
movsl
addb
add
push
dec
popa
push
jnp
leave
aam
in
dec
dec
daa
inc
and
gs
cmpsb
push
mov
mov
add
addb
jp
push
mov
push
iret
adc
mov
movb
inc
add
aaa
mov
and
mov
nop
cltd
and
mov
addb
movsb
sbb
sub
xor
addb
sbb
psrlw
pusha
add
inc
add
jns
mov
sbb
xchg
pop
ja
mov
sbb
xchg
movb
roll
jecxz
pusha
add
out
mov
cs
xchg
fstl
cmp
shrl
add
out
jmp
xchg
or
test
sub
outsl
addb
add
es
addb
cmp
adc
mov
sbb
or
repz
les
sub
test
sbb
add
test
adc
add
pop
in
xlat
add
ja
fs
mov
jl
scas
mov
jne
iret
xor
aas
loop
pop
iret
inc
add
or
movb
sbb
push
jmp
gs
add
fcomip
aad
enter
jbe
test
arpl
add
dec
scas
and
or
aam
test
cld
fiaddl
xor
cmp
data16
mov
mov
es
aad
rorl
jp
sysenter
cmp
add
sbb
push
int3
les
fcmovnb
add
add
inc
add
add
jo
jno
lret
add
lods
test
cs
pushf
mov
sti
pop
push
mov
add
mov
xchg
dec
pusha
add
addl
xchg
loop
adc
xlat
test
stc
popf
xchg
mov
aas
push
bound
pop
aam
add
dec
fsubrl
push
sub
cmp
repz
xor
jno
mov
add
add
mov
aam
dec
dec
mov
sub
test
lock
pop
mov
lret
or
cwtl
ffree
add
rolb
inc
fwait
in
and
push
mov
xlat
lret
jae
ljmp
bound
xor
cmpsb
pusha
add
cmc
leave
leave
dec
inc
add
clc
jbe
pop
aam
dec
cwtl
mov
mov
add
dec
xor
bound
mov
fldlg2
das
pop
aam
xchg
add
es
insl
xchg
out
or
add
xchg
dec
jno
add
pushf
pop
jl
jb
fbld
add
iret
dec
call
xor
mov
insl
sub
xor
shlb
xor
cmp
add
add
cmp
xor
sub
xchg
and
adc
out
fisttpll
add
ljmp
mov
mov
pop
insl
push
sahf
push
mov
mov
dec
cmp
repnz
sub
jns
xor
push
test
pop
mov
add
adc
dec
ljmp
stos
popf
pop
repnz
divl
mov
je
sbb
les
adc
xchg
xchg
movb
inc
add
aas
sbb
dec
push
and
ja
pop
lods
add
sbb
jl
xor
imul
mov
mov
out
popf
hlt
sti
cmp
or
dec
and
add
jns
aad
repz
push
in
mov
ljmp
jno
jg
push
out
push
popa
pop
and
xchg
jp
push
add
bound
icebp
pushf
out
mov
loope
cmp
pop
push
mov
add
add
add
push
jns
add
adc
xlat
pop
mov
dec
mov
sub
sahf
xchg
pop
fsubrl
loopne
in
int3
sub
pop
xchg
testl
and
push
enter
push
xor
aad
into
dec
ja
inc
add
push
std
xor
cltd
or
add
adc
data16
popa
or
icebp
enter
jno
jmp
dec
cmp
stc
adc
fldl
add
add
clc
xchg
imul
das
push
fisubl
out
jmp
js
sub
mov
push
repz
inc
mov
add
ss
adc
pop
cmc
push
inc
add
mov
inc
add
addr16
add
les
cs
sub
xor
imul
jb
or
aad
ss
jmp
sbb
cmp
jns
arpl
pop
out
scas
in
mov
sbb
add
cmp
movsl
mov
ret
movb
inc
addb
pop
insb
sub
adc
sahf
sbbl
sbb
jbe
aam
shl
test
out
xchg
lock
cmc
int3
and
fisttpll
popf
pop
add
mov
xchg
sbb
lahf
rorl
push
adc
or
and
jno
or
add
in
mov
dec
arpl
aam
add
add
add
push
into
lods
pop
mov
arpl
or
imul
fildll
push
and
xlat
inc
out
imul
sarb
lsl
inc
add
cmp
push
jnp
iret
and
mov
clc
ljmp
icebp
pop
leave
ret
add
lds
sub
jp
add
or
insb
rorl
sahf
mov
mov
addb
cmpsl
fwait
hlt
test
jns
ds
cmp
mov
lds
jne
idivl
pop
cmp
ss
lods
sub
popl
test
sbb
pop
sub
arpl
sti
in
pop
lret
adc
xor
jmp
ja
jge
out
dec
cmp
outsl
out
nop
add
add
es
pop
adc
push
dec
aad
loopne
outsl
add
mov
mov
sub
mov
mov
ss
jbe
movb
cmp
add
incl
inc
add
fiaddl
jle
rolb
add
sub
mov
add
addb
lret
dec
push
pop
scas
adc
add
stos
das
jae
xchg
xchg
aad
in
mov
sub
ret
mov
cmp
dec
dec
jmp
std
outsb
push
iret
inc
add
lret
lods
mov
lea
add
mov
dec
in
clc
notl
je
mov
ss
idivb
or
rolb
cmp
mov
addb
dec
adc
sub
add
mov
jo
mov
add
mov
ljmp
loop
hlt
insl
sbb
stos
jge
push
add
ds
pushf
mov
std
inc
clc
sti
jp
add
out
inc
add
lods
movb
sbb
test
test
lods
filds
add
scas
int3
bound
lcall
mov
rolb
aam
and
ds
lcall
jbe
add
data16
pop
xor
mov
cli
xchg
pop
mov
adc
inc
add
pusha
add
sub
mov
xchg
xchg
rorl
insl
lahf
jl
mov
rcll
mov
fisttps
movsl
or
sub
je
ret
out
jne
lods
dec
fisubrl
aas
shrl
aam
jl
cmp
mov
xchg
gs
add
cmpsb
inc
inc
add
