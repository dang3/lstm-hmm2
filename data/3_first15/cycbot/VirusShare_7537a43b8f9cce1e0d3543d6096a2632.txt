add
fstp
fstp
mov
pop
pop
pop
pop
test
test
arpl
add
repnz
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
movsl
sub
or
or
or
add
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
pusha
pusha
call
add
add
mov
lea
add
add
add
out
out
out
out
out
out
out
out
add
add
movsb
movsb
movsb
movsb
movsb
movsb
add
add
lods
lods
add
mov
mov
mov
dec
dec
mov
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
insb
insb
insb
insb
add
mov
mov
cld
cld
xchg
xchg
push
push
push
push
push
push
push
push
push
add
add
dec
out
out
out
lods
lods
lods
lods
lods
lods
lods
mov
cmp
addb
jne
pop
pop
add
add
add
add
xchg
push
push
push
push
daa
daa
add
add
add
add
adc
adc
cmp
cmp
add
addb
add
add
add
add
ds
add
nop
nop
nop
nop
nop
cmpsl
aas
aas
aas
aas
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jg
jg
add
add
add
add
ss
push
push
push
addl
addl
addl
xchg
add
lock
add
jnp
jnp
inc
inc
inc
inc
inc
inc
mov
mov
add
add
add
add
push
push
push
push
push
add
add
cmp
jecxz
mov
add
in
add
cli
cli
cli
cli
cli
add
out
mov
add
icebp
icebp
icebp
icebp
imul
cmp
cmp
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
push
push
xchg
xchg
add
add
add
mov
xor
xor
and
add
add
or
or
loope
loope
add
int
int
int
int
add
add
add
add
adc
adc
adc
pop
pop
pushf
pushf
pushf
pushf
pushf
aad
add
nop
nop
add
add
add
add
add
add
mov
lea
lea
add
add
std
add
add
add
inc
inc
inc
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
add
mov
mov
push
popl
push
add
add
ss
jns
jns
jns
mov
mov
mov
incl
mov
lret
lret
xchg
xchg
xchg
xchg
repz
mov
xchg
xchg
add
add
sub
sub
sub
sub
sub
insb
insb
insb
insb
insb
insb
insb
sbb
sbb
push
push
add
add
add
jg
jg
jg
jg
jg
add
pop
pop
pop
add
add
add
or
add
xchg
xchg
xchg
xchg
xchg
or
jle
jle
jle
jle
jle
jnp
jnp
jnp
jnp
jnp
add
sub
sub
add
scas
scas
scas
scas
scas
scas
scas
outsl
outsl
add
add
xor
push
push
push
push
push
push
push
push
push
push
adc
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
jle
mov
push
push
add
add
test
add
add
add
jns
jns
ret
ret
call
out
add
mov
mov
pushf
add
imul
add
add
cmp
cmp
mov
mov
mov
add
mov
cld
cld
add
add
sbb
and
and
add
jbe
les
push
push
push
push
push
push
jb
je
je
je
inc
mov
mov
es
inc
inc
inc
inc
inc
mov
add
add
inc
inc
add
add
jecxz
jecxz
cwtl
addl
mov
mov
add
mov
add
add
div
div
sbb
sbb
stc
stc
stc
stc
stc
stc
stc
outsb
outsb
outsb
outsb
stos
stos
stos
stos
stos
add
nop
nop
nop
add
xor
xor
xor
xor
xor
xor
add
add
loope
xor
xor
xor
xor
xor
fwait
dec
dec
dec
dec
dec
push
fs
add
add
fldcw
test
test
bound
bound
bound
bound
bound
add
add
cli
cli
add
add
add
dec
incl
jae
add
add
or
cli
add
add
xor
xor
xor
xor
add
add
xor
xor
xor
xor
xor
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
sub
add
enter
adc
adc
addb
push
push
push
push
push
push
push
push
push
addl
jge
xor
sbb
sbb
sbb
jmp
jmp
in
in
in
in
in
in
sbb
add
add
xor
xor
xor
xor
xor
xor
ret
ret
jnp
jnp
jnp
jnp
jnp
jnp
jnp
mov
mov
lret
or
or
or
or
or
or
std
xchg
rolb
cmp
cmp
add
add
cs
pop
pop
and
mov
or
stos
ljmp
add
mov
push
cmp
cmp
adc
fcmovu
addb
sti
sub
or
or
or
or
js
js
js
lahf
lahf
add
add
fs
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
add
add
add
cli
cli
out
out
inc
inc
jbe
add
xchg
fiadds
add
pop
pop
pop
pop
mov
adc
jle
add
or
sub
add
daa
add
jne
jne
jne
jne
jne
jne
and
and
and
inc
add
sub
sub
sub
sub
sub
outsb
outsb
outsb
cmp
cmp
jb
jb
data16
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
xchg
xchg
xchg
xchg
xchg
xchg
add
fistps
or
or
or
or
or
add
out
out
out
out
dec
mov
fstpt
mov
add
sbb
sbb
jno
add
add
add
sub
add
dec
dec
dec
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
mov
mov
mov
mov
mov
add
pushf
pushf
pushf
pushf
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
inc
fcmovnu
fcmovnu
fstpt
add
add
addb
and
add
add
out
xchg
fldt
mov
add
lods
lods
lods
lods
addr16
add
add
add
add
and
and
test
add
fwait
ss
inc
inc
inc
daa
daa
rcl
rcl
shl
jecxz
jecxz
jecxz
jecxz
and
and
and
add
add
add
add
mov
mov
mov
scas
mov
inc
inc
and
and
add
add
add
add
add
and
and
add
add
add
add
pop
mov
mov
cwtl
cwtl
add
add
out
out
repnz
xchg
add
int
int
int
int
add
pusha
pusha
mov
mov
das
cld
cld
jmp
mov
cld
cld
test
add
mov
mov
rcl
rcl
mov
mov
mov
mov
mov
mov
mov
mov
add
test
dec
dec
dec
dec
dec
add
push
push
push
push
push
push
push
cli
mov
mov
dec
dec
dec
mov
aam
aam
aam
aam
aam
aam
aam
aam
inc
inc
inc
mov
mov
inc
dec
dec
dec
dec
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
add
add
mov
dec
dec
dec
dec
dec
add
add
add
add
adc
add
add
dec
dec
cli
xor
xor
jns
pop
rolb
scas
scas
scas
scas
scas
scas
scas
scas
scas
xchg
cmc
cmc
cmc
cmc
les
add
add
add
add
add
add
test
lret
lret
lret
lret
lret
lret
jecxz
add
add
add
add
jmp
jmp
jmp
jmp
add
add
inc
out
out
sbb
sbb
pop
pop
push
cmp
and
and
and
and
and
and
xlat
xlat
nop
nop
nop
nop
int
add
push
incl
mov
in
mov
mov
mov
mov
add
add
out
add
add
sbb
addb
roll
add
add
add
mov
mov
mov
mov
loop
lods
lods
add
rcl
popa
popa
popa
div
or
push
push
push
add
add
lahf
lahf
lahf
add
clc
clc
xchg
xchg
xchg
data16
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
lcall
add
add
add
add
add
add
push
add
add
cmc
cmc
cmc
add
and
es
jbe
push
push
push
push
outsb
lcall
add
add
add
and
and
and
and
or
add
add
and
and
and
and
lods
lods
lods
or
or
or
or
or
or
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmpsb
cmpsb
out
out
add
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
outsb
outsb
outsb
outsb
outsb
outsb
add
add
add
arpl
add
dec
add
cmp
cmp
add
add
sbb
sbb
add
add
lods
lods
lods
lods
lods
bound
add
lret
lret
lret
add
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
add
add
iret
mov
iret
addl
or
iret
add
adc
add
add
add
push
push
fs
add
add
add
add
add
sbb
sbb
add
add
jnp
jnp
add
add
sub
sub
out
out
out
out
out
out
out
out
out
add
xor
lea
dec
dec
dec
jle
jle
jle
or
or
or
inc
cmp
cmp
cmp
cmp
out
out
out
out
out
add
add
sbb
sbb
sbb
cmp
cmp
cmp
jl
jl
jl
pop
pop
data16
add
add
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
loope
loope
enter
add
add
add
aaa
add
pop
pop
add
pop
xchg
xchg
jg
jg
jg
jg
jg
jg
popa
sub
add
lahf
lahf
les
push
push
fcmovnu
add
inc
inc
inc
incl
add
add
add
pop
pop
jmp
add
xor
add
add
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
add
pop
push
push
push
add
jge
add
and
and
and
and
and
add
add
add
out
out
out
add
movl
add
add
add
add
mov
inc
inc
inc
inc
inc
add
add
add
add
add
mov
mov
add
js
js
js
js
js
js
add
add
add
add
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
out
out
out
add
addl
sub
sub
add
add
xchg
add
add
add
imul
imul
and
and
and
and
and
and
sldt
add
data16
push
push
push
push
push
in
in
in
in
in
in
in
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
or
or
fcmovu
add
cmp
cmp
cmp
pop
test
test
test
rol
leave
leave
leave
leave
sub
sub
sub
add
add
mov
adc
add
iret
iret
iret
iret
iret
xor
add
add
div
div
add
add
and
and
and
and
and
add
out
imul
imul
imul
sbb
xor
xor
add
add
mov
mov
mov
mov
out
out
cltd
cltd
cltd
or
iret
iret
iret
iret
iret
iret
iret
iret
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
jle
add
add
add
xor
add
add
add
add
inc
inc
inc
inc
add
add
add
add
ret
ret
ret
ret
ret
jecxz
jecxz
jecxz
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
inc
inc
add
add
add
mov
dec
dec
dec
dec
dec
dec
dec
dec
js
js
js
js
js
sbb
add
add
fwait
fwait
fwait
adc
sub
pop
scas
in
jp
jp
jb
jb
jb
xchg
add
add
add
dec
dec
dec
dec
and
jge
mov
xchg
xchg
add
jno
mov
mov
xchg
enter
addl
add
xor
vpsraw
loope
adc
pop
pop
pop
jmp
jmp
add
ljmp
ds
add
add
add
add
imul
leave
mov
adc
push
push
fstp
fstp
cmp
cmp
dec
dec
dec
dec
dec
add
dec
dec
dec
dec
dec
dec
cltd
add
add
addr16
jno
add
add
mov
leave
add
add
in
ret
ret
ret
ret
ret
sbb
sbb
test
dec
lods
lods
cmp
cmp
add
add
add
cmpsl
cmpsl
cmpsl
sbb
sbb
sbb
dec
dec
dec
dec
les
popa
popa
popa
add
add
add
add
add
xchg
lcall
je
je
inc
and
add
dec
sub
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rol
add
adc
cmp
cmp
cmp
mov
xor
xor
xor
xor
xor
add
icebp
icebp
icebp
icebp
icebp
icebp
lods
lods
lods
lods
lods
lods
push
push
push
push
push
mov
mov
mov
add
mov
test
add
leave
mov
sub
sub
add
cmc
cmc
cmc
popl
add
lea
scas
scas
add
add
add
out
out
add
add
sub
add
das
cmp
cmp
cmp
cmp
cs
repz
div
div
imull
sub
sub
add
add
mov
mov
mov
mov
mov
mov
clc
clc
clc
clc
clc
adc
adc
adc
adc
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
repz
insb
insb
insb
insb
insb
insb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
das
das
das
das
das
sub
sub
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
ret
ret
ret
add
sub
xchg
xchg
xchg
mov
lret
xor
xor
xor
xor
xor
sub
sub
mov
mov
add
add
add
repz
nop
nop
nop
nop
nop
loope
loope
mov
mov
add
add
add
das
das
das
das
das
adc
mov
mov
les
add
add
add
stos
inc
inc
inc
inc
add
add
dec
dec
dec
dec
dec
dec
add
add
add
add
jbe
jbe
jbe
jbe
mov
clc
clc
clc
add
lock
rcl
roll
cmc
cmc
out
out
add
add
add
jge
jge
jge
add
add
add
jnp
jnp
fcmovnu
add
add
add
jbe
rol
rol
rol
rol
rol
rol
mov
pop
xchg
xchg
xchg
xchg
fiadds
popf
faddl
inc
inc
inc
inc
add
add
jnp
jnp
jnp
jnp
cmpsb
cmpsb
cmpsb
cmpsb
rcl
xchg
xchg
xchg
aas
or
or
mov
mov
mov
or
dec
dec
dec
jbe
shlb
and
pop
pop
pop
pop
mov
movl
and
addl
add
add
add
leave
add
add
add
add
mov
movb
add
add
add
insl
insl
insl
insl
insl
insl
insl
insl
or
mov
mov
mov
mov
mov
rcl
rolb
add
add
ret
data16
add
cmc
cmc
cmc
add
sbb
sbb
push
push
push
push
push
test
test
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
ja
ja
push
push
cmp
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
add
add
movsl
das
das
add
addl
fwait
fwait
pop
pop
pop
pop
add
add
ljmp
ljmp
dec
dec
dec
add
add
es
cmc
cmc
cmc
cmc
cmc
cmp
cmp
xchg
jecxz
in
add
add
in
in
addb
into
into
add
gs
dec
dec
dec
dec
dec
stc
stc
stc
stc
stc
add
add
add
into
into
into
into
xlat
xlat
xlat
xlat
xlat
add
addl
dec
dec
rcl
roll
add
add
lret
lret
lret
lret
lret
lret
lret
ja
ja
ja
ja
ja
ja
jmp
cmpsb
in
in
in
in
call
call
jmp
jmp
mov
add
add
add
add
add
pop
add
add
add
push
push
push
push
push
push
push
stos
stos
or
adc
adc
adc
add
add
add
fcomp
fcomp
rol
add
add
pop
add
add
add
scas
ds
insl
insl
insl
mov
jmp
jmp
add
das
das
pop
pop
pop
pop
pop
jecxz
jecxz
jecxz
jecxz
sub
sub
sub
sub
sub
sub
jno
jno
cmp
cmp
cmp
cmp
add
add
add
popa
popa
popa
popa
popa
popa
aam
aam
aam
dec
dec
dec
dec
dec
sbb
div
div
div
testb
add
add
insb
insb
insb
lret
lret
lret
add
sldt
add
mov
mov
mov
mov
mov
insb
insb
insb
insb
inc
inc
inc
push
push
add
add
clc
clc
clc
clc
clc
mov
insl
insl
mov
mov
mov
mov
add
add
repz
add
add
lods
lods
dec
dec
dec
dec
pop
pop
pop
pop
add
mov
mov
cmp
add
add
add
jg
add
add
add
add
add
inc
add
adc
xchg
xchg
xchg
xchg
xchg
xchg
and
and
and
and
incl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
add
ljmp
and
data16
add
push
ret
ret
add
add
add
or
or
add
add
add
mov
shrb
das
das
das
das
das
das
das
inc
inc
inc
inc
inc
inc
inc
xor
int3
int3
add
add
sti
sti
sti
sti
sti
sti
add
add
repz
xor
xor
xor
add
js
js
js
js
pusha
pusha
jge
jge
out
out
out
out
out
stos
stos
stos
stos
add
adc
adc
adc
adc
adc
adc
adc
aad
aad
aad
aad
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
and
and
and
add
add
add
add
add
cmp
add
pop
pop
pop
pop
pop
mov
add
add
xchg
xchg
xchg
add
add
rcl
rolb
add
add
xchg
mov
mov
add
add
push
push
push
sub
sub
sub
add
add
add
add
add
aad
lea
add
add
pop
jae
jae
jae
sub
xor
xor
xor
add
push
push
push
push
push
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
lahf
lahf
lahf
lahf
lahf
lahf
pop
pop
pop
pop
adc
jb
jb
or
or
or
or
or
or
dec
dec
dec
addl
addb
add
jg
jg
add
add
add
jnp
inc
int3
cs
jne
jne
jne
jne
jne
arpl
add
add
xlat
xlat
xlat
add
add
aaa
addr16
xchg
xchg
add
add
add
mov
xchg
xchg
test
test
stc
add
add
pop
pop
pop
pop
pop
add
add
add
add
xor
xor
xor
xor
adc
adc
adc
adc
add
add
sldt
add
add
sub
sub
insl
into
into
into
into
pop
pop
pop
pop
pop
int3
int3
int3
int3
pop
pop
sbb
add
add
add
ret
ret
ret
ret
ret
ret
ret
ret
ret
jp
add
add
add
mov
add
push
push
push
push
push
push
push
add
loop
loop
loop
loop
add
add
lock
xor
xor
xor
add
add
push
out
out
out
out
out
out
inc
inc
inc
inc
inc
inc
add
pop
pop
pop
pop
pop
pop
jns
jns
jns
jns
jns
jns
jns
adc
adc
push
push
push
push
push
push
dec
jmp
fcmovnu
fcmovnu
push
add
cld
add
add
psubq
mov
mov
adc
adc
adc
adc
ds
add
add
add
add
adc
mov
mov
mov
popa
popa
popa
popa
popa
popa
popa
popa
fstp
fstp
fstp
add
cmpsl
add
sbb
sbb
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
add
add
jno
add
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
repnz
add
add
add
add
add
addl
xor
repz
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
and
addl
add
add
cli
cli
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
ret
ret
ret
ret
ret
add
add
and
add
push
add
add
jne
jne
jns
add
lock
add
add
mov
mov
mov
mov
mov
mov
mov
iret
std
xchg
inc
inc
inc
add
xchg
xchg
xchg
xchg
ljmp
add
add
add
add
lret
lret
lret
imul
add
add
add
xchg
mov
popa
add
add
add
and
sub
bound
bound
bound
bound
bound
bound
inc
inc
inc
inc
inc
inc
or
or
or
mov
mov
add
add
inc
inc
addb
addb
adc
adc
adc
push
push
push
push
icebp
out
out
out
out
add
add
add
xchg
stc
stc
stc
inc
jmp
jmp
add
mov
movsl
movsl
movsl
repnz
add
add
add
ds
add
add
add
add
insl
xor
xor
xor
dec
dec
dec
dec
dec
dec
dec
test
or
cs
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
jb
adc
adc
inc
add
cld
cld
cld
cld
mov
add
add
add
add
add
mov
mov
mov
pop
pop
pop
pop
pop
add
add
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
jle
jle
add
add
push
add
add
ds
add
add
add
add
pop
pop
add
pop
pop
add
in
in
in
in
add
add
add
dec
dec
rcl
rcl
add
add
mov
mov
add
lret
lret
add
add
add
add
lret
add
jb
or
or
or
or
or
or
or
or
add
add
jb
jb
jb
add
incl
add
add
scas
test
add
add
adc
add
jne
jne
jne
jecxz
jecxz
jecxz
jecxz
jecxz
add
mov
mov
cs
inc
inc
inc
inc
add
add
sub
sub
imul
imul
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
test
add
and
and
add
sub
sub
add
ret
ret
ret
sub
lods
lods
lods
jae
jae
loop
loop
loop
loop
loop
loop
scas
scas
add
lea
add
pop
xchg
mov
add
add
adc
dec
dec
sub
sub
jle
cmp
add
mov
dec
dec
dec
dec
dec
dec
dec
daa
daa
cmp
add
add
xchg
xchg
xchg
xchg
lods
lods
lods
lods
fwait
hlt
xor
xor
xor
xor
or
add
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
hlt
hlt
std
std
jo
jo
jo
pop
pop
and
add
add
jecxz
in
add
mov
mov
mov
scas
scas
scas
nop
nop
nop
out
out
add
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
sub
sub
sub
pop
pop
pop
pop
addl
add
add
add
test
add
or
stc
stc
stc
ds
dec
dec
add
add
add
add
fstp
repnz
push
push
push
push
push
add
gs
pop
pop
add
add
add
push
push
add
add
cmp
add
add
add
lea
lea
xor
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pusha
add
add
add
add
jae
jae
mov
clc
push
push
push
push
push
push
push
mov
gs
add
adc
add
add
es
cmc
cmc
cmc
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
sahf
sahf
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
add
mov
mov
inc
inc
inc
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sub
loopne
add
add
add
cmp
cmp
add
and
and
and
and
lods
lods
push
push
push
aaa
aaa
aaa
aaa
aaa
add
add
add
addl
sbb
mov
ret
ret
ret
js
and
and
and
sbb
sbb
add
add
cld
cld
cld
cld
cld
adc
gs
std
into
into
into
into
into
rcll
add
mov
mov
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
add
add
add
xchg
xchg
xchg
add
add
cmp
mov
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
pop
pop
pop
pop
pop
pop
loopne
or
mov
mov
in
in
in
in
add
test
inc
inc
inc
inc
inc
inc
inc
cmp
add
add
add
sub
add
adc
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
data16
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
outsl
outsl
mov
add
add
and
int3
int3
div
div
div
div
div
testl
add
add
add
push
push
push
push
push
push
push
push
pop
pop
pop
mov
add
add
fucomip
out
out
push
push
clc
clc
clc
clc
clc
clc
je
je
lret
lret
lret
lcall
lcall
adc
add
addr16
add
add
call
rcl
rcl
rcl
add
scas
scas
add
jne
jne
jne
std
std
std
std
std
std
mov
pop
pop
pop
pop
add
add
add
loopne
cmp
jmp
or
outsl
xchg
idivl
stc
and
push
fs
jb
bound
out
mov
imul
pusha
es
sbb
ret
mov
pusha
lcall
fidivrs
push
in
js
sbb
mov
pusha
lret
mov
sbb
cld
add
inc
mov
xchg
ret
sub
outsl
into
mov
or
out
fcomps
pushf
js
inc
loopne
xchg
movsb
inc
inc
loop
adc
sub
stc
lods
xchg
add
and
dec
cltd
add
xorb
inc
outsb
movsl
sbb
pusha
dec
idivb
inc
pop
nop
inc
sbb
int
jl
and
rolb
pushf
xor
xor
int
jb
mov
jp
inc
xlat
jbe
inc
repz
push
xor
ret
xchg
cmpsl
int3
mov
xchg
xor
pusha
sub
cmpl
xchg
arpl
push
inc
jmp
addl
push
fcomip
mov
loopne
push
mov
jp
push
ljmp
mov
test
fsubrl
rolb
and
shrb
jge
add
sub
jl
fmul
fiaddl
pop
gs
out
add
inc
lea
or
addb
inc
jne
pop
shrl
add
pop
in
pop
jmp
inc
imul
xor
xor
scas
loopne
loop
jae
add
jae
and
add
dec
jne
fidivs
sbb
jl
pusha
loopne
mov
mov
cmpsl
pushl
add
sbb
pop
andb
dec
insb
mov
push
fs
or
mov
pusha
mov
adc
fsubrl
jge
sbb
jp
xchg
rclb
mov
ss
rcrb
mov
pusha
fldl2t
push
sbb
jne
aad
sub
add
mov
int
pusha
add
mov
mov
jns
stos
pusha
and
es
inc
into
cld
scas
or
add
and
push
ret
inc
and
sub
inc
jg
shl
and
pop
sub
andb
iret
mov
orb
lcall
out
jecxz
push
ret
rorb
or
xchg
fidivs
inc
sbb
lahf
es
shrb
call
outsl
pop
xchg
mov
xchg
mov
adcb
fwait
mov
arpl
fs
shlb
loopne
xor
mov
inc
mov
mov
add
push
dec
addb
imul
cmpb
push
and
or
mov
icebp
push
jge
or
add
out
inc
out
aam
inc
and
sub
arpl
and
fadds
icebp
fs
xor
pusha
rclb
xchg
jle
mull
mov
sbb
scas
into
xor
arpl
push
insb
mov
mov
pusha
mov
jb
pushf
stos
inc
add
add
mov
jl
mov
andb
movsb
addb
and
mov
das
xchg
insl
pop
add
sbbb
mov
je
inc
loopne
addb
into
inc
ret
fisubl
fwait
cmpsl
push
xchg
fisttps
and
mov
and
fld
dec
or
mull
jmp
movsl
mov
shlb
pusha
testb
pop
adc
mov
pop
push
mov
stos
add
ljmp
rclb
dec
lret
shl
fsubl
loopne
mov
pop
movsl
insl
mov
pusha
aam
jae
sub
insl
sbb
pop
mov
jecxz
push
rcrb
imul
pusha
mov
inc
adcb
fucomi
sar
mov
and
repnz
xchg
out
pop
nop
arpl
sub
insl
and
addb
xchg
mov
repz
mov
shlb
pusha
add
mov
add
or
std
adc
gs
stos
xor
xchg
ror
sub
push
add
jo
dec
movsb
loopne
mov
pop
in
gs
loopne
in
sbb
sub
rolb
push
pop
xor
mov
sub
mov
jmp
mov
xor
pusha
loopne
mov
xor
push
add
rcrb
pusha
pusha
adc
subb
add
rol
cmp
out
inc
mov
fsts
insl
sub
lret
inc
and
test
loopne
xor
mov
pusha
adc
cmp
into
les
add
ljmp
fildl
int
xor
pusha
loopne
stos
xchg
pop
lock
adc
call
mov
push
inc
and
andb
out
js
daa
and
sbb
mov
and
andb
jle
xchg
sub
sub
pop
jecxz
add
notb
je
jb
xchg
sbb
std
jnp
mov
push
es
outsb
mov
hlt
add
cmp
lcall
jnp
loopne
addb
pushf
leave
sub
loop
shl
gs
mov
pop
rorb
inc
cmp
and
sbb
cmc
es
xchg
and
shll
inc
sbb
push
stos
cmp
cli
in
xchg
pop
bound
inc
and
and
push
fisubrl
faddl
movsl
gs
and
fnstsw
mov
add
or
dec
fwait
test
bnd
xor
push
rcrl
pop
mov
add
imul
test
pusha
adcl
mov
push
ss
inc
mov
mov
adc
jnp
sub
adc
out
inc
loopne
inc
mov
sbb
pusha
mov
pusha
add
out
xchg
mov
adc
loopne
ds
ljmp
addb
xchg
int
add
shlb
xchg
stos
mov
inc
sbb
rolb
cltd
mov
mov
ljmp
insl
cmp
and
sbb
cmpsb
mov
mov
inc
loopne
icebp
jecxz
jl
and
add
lcall
inc
arpl
repnz
and
jo
in
cmp
xor
icebp
call
mov
pop
sti
psubd
rcl
fwait
sbb
aas
in
shll
xor
mov
aad
lds
rolb
xor
lahf
xor
jae
je
daa
xor
ja
ljmp
mov
inc
push
les
rolb
sbb
mov
push
sub
sbb
add
and
clc
or
cmp
cmpsb
add
test
jl
fbstp
ret
pop
ret
movl
rclb
ret
subl
movsb
rol
push
andb
out
mov
addb
and
idivl
cld
sub
out
cltd
jg
int
aaa
and
inc
xchg
lret
aas
fsts
jb
in
fcomps
or
mov
fldt
mov
iret
imul
add
inc
subb
mov
stos
inc
shr
sbb
mov
scas
add
push
sbb
testb
and
and
cmp
pusha
and
mov
sbb
inc
dec
cmp
mov
int
lods
loopne
in
push
sahf
xchg
add
mov
loopne
std
mov
inc
cmp
adc
mov
fcoms
in
movsb
and
adc
shl
iret
dec
test
and
andb
jb
cmc
out
push
add
mov
inc
js
sub
in
add
sbb
sahf
lahf
mov
outsl
gs
sub
je
or
sub
loopne
fcomip
add
in
imul
mov
addb
and
dec
mov
push
int
addb
mov
sbb
add
mov
mov
cmpsb
andb
mov
in
in
jmp
pop
mov
add
jo
add
mov
ficomps
xchg
push
add
adc
and
add
add
sbb
fstpl
xchg
repz
mov
jo
and
push
xchg
inc
pusha
lods
loopne
xor
mov
xchg
mov
mov
jle
mov
and
dec
lcall
mov
cltd
push
fwait
leave
cmp
mov
adc
insb
arpl
inc
test
cli
dec
adc
adc
xchg
mov
push
repnz
shlb
add
pusha
mov
outsl
sarb
jmp
pop
mov
push
adc
and
jns
add
mov
stc
xchg
inc
dec
das
hlt
stos
inc
inc
popa
add
shrb
dec
daa
dec
jns
fadd
or
es
loopne
sub
jne
sbb
rolb
or
int
mov
fsubrp
push
push
mov
sarb
cmp
sarl
xchg
mov
hlt
rorl
add
lods
mov
sbb
into
xchg
popf
loop
pusha
loopne
sbb
mov
sar
fnstcw
in
cltd
out
jge
inc
dec
sbb
sbb
jns
shlb
mov
je
cs
add
les
mov
cwtl
cmp
movsl
out
int3
imul
insl
or
and
add
mov
pop
or
loopne
pop
pop
andb
in
inc
add
xor
sbb
xchg
call
imul
shl
in
inc
sbb
inc
daa
push
cmpsb
pusha
add
dec
adc
mov
enter
mov
pop
and
adc
adc
jmp
sub
into
push
jbe
or
fwait
mov
mov
adc
and
imull
dec
sub
into
idivl
push
sbb
sub
iret
and
sub
jb
nop
ret
ret
inc
inc
jo
mov
testb
mov
pop
pop
sarb
push
add
cmpsl
jno
ds
inc
mov
repnz
and
adc
aam
xor
sub
inc
and
inc
inc
pushf
outsb
outsb
adc
int3
stos
mov
clc
mov
jg
out
daa
mov
dec
stc
push
jno
adcl
and
inc
lret
push
mov
push
inc
mov
arpl
xor
mov
popl
iret
jecxz
cmp
add
sbb
fwait
or
sub
add
fcoml
test
andb
rol
pusha
and
in
lcall
pusha
shl
mov
inc
pusha
sbb
inc
mov
mov
in
sub
icebp
inc
scas
pusha
add
xchg
cmp
insl
je
jns
cwtl
int3
je
rcrb
pusha
sbb
push
add
rcrb
pop
xchg
mov
pop
jp
mov
add
dec
jle
gs
setbe
sub
subb
enter
ds
mov
or
sbb
sbb
and
and
mov
pop
jne
loopne
inc
or
loopne
loopne
rol
rol
push
add
jp
das
inc
int3
nop
idivl
mov
push
mov
sti
pop
shr
pushf
add
cmpps
xchg
and
xor
fwait
xchg
movsb
loopne
and
roll
sti
out
and
and
pusha
push
les
and
lret
add
mov
icebp
pusha
cmp
xchg
fs
mov
and
sub
mov
icebp
insl
call
cmp
fimuls
outsl
rcl
cltd
sbb
fs
fwait
into
pushf
idiv
dec
lock
and
xor
jns
pop
push
push
lock
and
shrl
inc
add
gs
xor
aaa
movsl
mov
sbb
or
aas
das
cmpsb
mov
mov
rolb
mov
jle
imul
push
sbb
inc
xorb
pop
or
sbb
cmpl
pop
loopne
push
cmp
pop
or
pusha
leave
mov
and
sub
out
out
xor
jns
inc
iret
out
add
mov
inc
add
xchg
push
or
inc
jo
loopne
and
sbb
mov
in
inc
rclb
dec
outsb
fiadds
cmp
cmp
sti
dec
test
test
dec
adc
movsb
mov
leave
sub
adc
js
aaa
insl
negl
add
incb
shrb
pop
fistpl
inc
mov
pop
shlb
repnz
push
clc
loopne
imul
subb
mov
out
sub
add
push
into
loopne
nop
jle
sub
jmp
and
mov
jg
outsl
pushf
push
in
popl
sahf
ja
add
or
pop
nop
mov
push
in
mov
mov
ds
inc
inc
enter
ds
sbb
loopne
adc
cltd
jmp
push
add
out
cmpsl
pop
into
scas
loopne
sbb
testb
mov
jne,pt
pop
test
andb
movsb
loopne
or
mov
popf
mov
add
stos
and
imul
mov
inc
loopne
scas
jmp
shlb
adc
dec
mov
or
mov
rolb
add
and
inc
cmpsl
jae
jbe
stc
out
in
dec
jo
in
loope
pop
add
cmp
sbb
add
pop
or
jge
push
jae
cmpsb
loopne
and
and
jg
cli
jle
call
loop
mov
sahf
aas
lods
and
and
pop
outsl
imul
and
add
in
mov
adc
xchg
imul
add
shl
xor
nop
push
je
lods
add
sbb
sub
dec
mov
and
movsl
mov
adcl
jbe
dec
test
pusha
push
smsw
mov
addb
dec
xchg
ret
mov
inc
aas
pop
dec
sub
pushl
adc
inc
in
xor
mov
roll
sar
pop
and
cli
jecxz
std
sub
dec
cmp
dec
jnp
jae
test
and
sbb
loopne
shl
mov
repnz
jb
fcompl
jmp
mov
movsb
rolb
xchg
jg
popa
je
fcoml
stos
mov
xorl
push
cmp
sbb
add
adc
pusha
loop
push
std
outsl
sub
loopne
int
loopne
add
pushf
add
rolb
add
xlat
in
lea
les
add
repz
cmp
ret
loopne
push
xor
jl
jmp
cld
adc
push
jmp
cli
shlb
stos
and
jno
add
sbb
mov
subb
and
fnstenv
mov
inc
jg
out
xchg
andb
push
add
pop
add
daa
push
add
out
cmpsb
pusha
cmpb
mov
add
inc
push
mov
pop
cli
or
mov
xor
sbb
fwait
aaa
stc
or
inc
or
and
add
loopne
sub
rclb
loopne
dec
mov
add
mov
mov
inc
push
imul
loopne
inc
or
mov
mov
inc
mov
push
push
lock
std
bound
adc
loopne
pusha
pusha
xchg
aam
insb
mov
mov
shlb
mov
cwtl
popf
sbb
inc
mov
ja
into
cmp
in
sub
pusha
and
insl
gs
pop
and
pop
sbb
xchg
addb
mov
pusha
mov
adc
xor
fbstp
mov
pusha
repz
xor
sub
jo
jns
outsl
mov
and
pop
ja
push
aaa
lahf
jmp
and
push
movsb
pusha
mov
inc
sub
andb
cmp
dec
cmpsb
and
mov
jle
mov
and
dec
mov
ss
xlat
xchg
mov
out
mov
mov
sar
leave
into
fistpll
shlb
mov
andb
ret
ljmp
adc
addb
jge
addr16
data16
adcl
inc
mov
loopne
notb
shlb
out
pop
aaa
xlat
test
cmpsb
pusha
addb
in
pop
cli
mov
push
and
loopne
mov
roll
cli
fldenv
js
ds
fwait
cmp
mov
xchg
push
adc
mov
or
inc
and
push
dec
ds
and
loop
inc
mov
cmpsl
incb
stos
andb
aad
sbb
cmc
cwtl
push
out
lret
fstpl
inc
add
push
pop
and
out
je
insb
mov
addb
xchg
inc
lods
add
push
jae
test
and
addl
sbb
fdivrs
out
les
iret
inc
mov
bnd
addb
push
add
arpl
xchg
out
pop
movsb
pusha
rcrb
push
mov
std
sub
and
int
xchg
mov
mov
repnz
leave
test
fdivl
mov
mov
xor
das
sbb
add
cmc
shl
pop
cmp
mov
loopne
xor
dec
leave
cmpsl
xlat
jle
inc
sti
sbb
sub
ja
loopne
adc
popf
sub
out
add
mov
xchg
and
inc
ljmp
arpl
sbb
add
and
rol
push
in
scas
mov
and
ja
xor
stos
sarl
mov
xor
loopne
push
data16
sbb
cli
int
mov
rolb
and
mov
stc
notb
sub
and
inc
call
inc
or
add
test
pusha
dec
sbb
scas
pusha
and
push
and
mov
cmc
mov
gs
sbb
xchg
movsl
inc
imul
in
or
in
call
rcrb
movsl
out
mov
popa
pop
jnp
jne
adc
ss
ffree
cmpsb
loopne
imul
sar
hlt
add
addr16
clc
inc
cmc
dec
add
inc
xchg
sarb
sahf
stc
mov
out
addr16
lea
stc
push
add
js
or
inc
jns
cltd
outsl
jb
int3
sub
shlb
cmp
mov
inc
inc
mov
pop
mov
inc
mov
pusha
addr16
inc
add
loopne
nop
dec
pop
lahf
loop
test
test
pop
sahf
pop
lcall
cmp
enter
mov
andb
out
int
dec
mov
in
or
add
stos
and
ss
rolb
jle
push
mov
orl
test
popf
adc
sahf
cmpsb
and
addb
imul
pusha
daa
inc
out
and
sbb
inc
ret
dec
dec
pushf
or
pusha
xor
and
cmpb
push
xchg
sub
out
lock
jae
cmpsl
inc
jp
loopne
cmp
pop
nop
jl
push
cmc
incb
icebp
xchg
imul
ja
mov
outsl
cmp
testb
loope
sbb
dec
ljmp
leave
lahf
jge
loopne
add
adc
jo
or
popf
adc
loopne
mov
int
jp
cltd
ljmp
sbb
int
xchg
dec
mov
les
and
mov
cmp
dec
jl
stos
loopne
pop
repz
xor
cmpsl
popa
rorl
jbe
das
mov
gs
adc
mov
jb
insl
and
scas
fsubr
sub
rcll
or
ss
mov
ja
add
mov
adc
and
pusha
loopne
fcomps
in
pop
arpl
inc
and
push
stos
addb
lea
imul
xchg
rcrb
enter
inc
jb
adc
inc
inc
adc
popa
push
mov
fisubrl
and
popa
inc
push
test
subb
push
aad
rolb
or
loopne
mov
pusha
jbe
pusha
sub
aas
scas
sub
jmp
loopne
inc
in
dec
inc
rcll
mov
and
inc
enter
lret
ss
push
pop
mov
mov
pusha
call
pop
decb
inc
pusha
icebp
sub
xor
movsl
das
add
loopne
test
and
pop
xlat
sbb
xchg
sbb
inc
mov
inc
pop
pop
xor
cltd
cmpl
mov
add
cmp
rol
sub
sub
fs
dec
jo
lods
addb
cmc
cld
add
outsl
push
roll
push
xchg
in
mov
fwait
je
cmp
ds
inc
xor
pushf
pop
xchg
int
mov
outsb
or
pusha
sub
rolb
xor
fsubrs
and
add
rorb
push
and
mov
icebp
insl
inc
add
and
add
add
inc
push
sbbl
fimuls
push
pushf
jg
or
loopne
cmc
jne
addb
rolb
dec
popf
sbb
jo
add
push
or
popa
mov
jg
subl
mov
ret
std
sbb
mov
mov
ds
cmpsl
mov
mov
nop
das
cmp
inc
push
and
rcr
imul
xchg
jmp
insb
out
xchg
ss
push
mov
in
popa
loop
xchg
lds
pop
mov
and
jmp
jg
mov
push
push
pop
mov
mov
add
pusha
ror
mov
scas
pop
sahf
mov
mov
push
dec
movsb
pusha
sbbb
add
xchg
gs
sub
das
dec
mov
call
fndisi(8087
fidivs
add
test
inc
inc
or
adcb
or
and
out
fwait
mov
and
cmc
mov
add
aas
sub
mov
int3
icebp
add
orb
pusha
adc
pop
add
inc
sub
cmp
mov
dec
sub
push
jge
addb
lds
cmpsl
loope
outsl
arpl
andb
pusha
mov
inc
shl
ss
insl
or
xchg
repz
sub
loopne
mov
push
jge
stos
clc
sbb
repz
add
loopne
or
loopne
mov
inc
loop
ljmp
sub
push
loopne
loope
pusha
loopne
jp
in
pop
push
fsubrs
mov
jo
mov
test
sbb
movsl
mov
idivb
icebp
push
jge
mov
sub
add
adc
enter
lea
addl
fsts
out
add
xor
add
sbb
idivb
and
clc
out
push
dec
popf
dec
xchg
push
jb
jg
mov
add
in
mov
xor
inc
jge
inc
std
clc
mov
xor
sbb
push
cmp
or
inc
test
loopne
mov
lds
push
enter
or
stos
inc
inc
pop
fistl
push
bound
in
jg
mov
shlb
sbb
lcall
and
xchg
push
mov
cmp
mov
inc
loopne
dec
ja
sbb
mov
loopne
fmuls
fisttpl
or
or
xor
mov
xorb
pop
push
add
sbb
pop
loop
sub
mov
addb
xor
rorb
add
cmpsb
mov
add
popf
shlb
stc
fwait
pusha
test
movsb
loopne
lods
cmpsl
andb
inc
clc
fcoms
mov
pop
cmpxchg
pop
and
jbe
lds
cmpsl
push
jae
adc
pusha
cmpb
mov
mov
inc
divb
faddl
cmp
add
dec
call
call
insb
pushf
mov
enter
loopne
inc
cmp
xorl
xor
cmp
mov
arpl
mov
addb
add
orl
sahf
fadds
loopne
cltd
xchg
test
or
sbbl
rcrb
and
loopne
ja
movsb
and
lcall
loopne
xchg
sbb
cmp
add
and
test
inc
dec
mov
ja
sub
push
jo
bound
popf
cmp
data16
mov
jle
sub
pusha
add
and
into
jbe
lahf
sub
mov
inc
and
mov
mov
adc
inc
shrl
adc
test
and
aad
ss
cmp
add
loopne
mov
in
pop
fs
int
mov
push
sub
sub
xlat
jg
cmp
inc
and
mov
push
stos
pusha
loopne
lods
nop
movsb
and
loopne
lods
pusha
add
inc
and
add
mov
push
addb
jecxz
testl
inc
jmp
dec
outsl
sbb
mov
mov
and
push
pusha
addb
es
loopne
dec
pop
pushf
nop
je
sahf
out
das
rol
mov
cmp
pusha
and
loopne
add
lahf
mov
inc
lret
daa
aam
add
mov
pop
xchg
mov
fstpt
mov
cmp
repnz
pop
mov
adc
mov
loopne
es
leave
or
add
adc
inc
rclb
pusha
inc
addb
subb
aad
ret
mov
lcall
addr16
jmp
pushf
jne
popf
lods
and
add
dec
dec
adc
sbb
loopne
pop
gs
or
loopne
push
hlt
outsl
fsubs
std
movsl
ficoms
xchg
mov
rcll
pushf
inc
rep
int
cmp
pop
shlb
lock
and
push
inc
cmpsl
mov
mov
icebp
and
inc
inc
shr
mov
push
mov
sarb
cmp
pusha
and
jbe
inc
cmp
lock
loopne
jl
and
xor
push
adc
mov
sbb
insb
ds
rcl
inc
pushf
out
ss
rolb
pusha
dec
push
scas
or
add
adc
shlb
jae
jno
push
les
and
push
jmp
shlb
and
xchg
sbb
js
cmp
xchg
mov
cmpsl
out
xor
imul
bound
and
loopne
nop
add
jmp
inc
inc
mov
repz
loop
rolb
pop
gs
test
inc
loopne
stc
enter
cmp
add
sub
orb
and
inc
jp
pusha
pusha
cli
jns
add
js
fidivrs
filds
jns
adc
pop
cmp
shlb
cmpsb
pusha
mov
fldt
repz
shlb
adc
mov
and
dec
hlt
lods
adc
push
cwtl
lods
mov
loop
add
pusha
imul
inc
pop
lods
or
shlb
ds
or
rolb
sub
shlb
js
imul
mov
data16
cmp
loope
and
scas
cmc
fcoml
pop
popa
pusha
pop
addr16
add
jp
and
mov
loopne
loop
mov
sbb
es
cmpb
mov
or
out
stos
loopne
push
dec
add
or
dec
xor
xchg
or
cmp
shlb
add
cmp
or
shrb
loopne
and
jl
sub
andb
lock
mov
fisubrs
add
xchg
fcomp
out
ja
push
mov
pop
xor
ret
sahf
test
sub
add
gs
sub
sarb
outsl
movsb
loopne
mov
rolb
cltd
scas
pusha
pusha
mov
push
cmp
mov
push
stos
dec
mov
xchg
dec
push
cld
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
cmp
cld
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
add
aam
push
movsb
and
mov
lea
inc
shlb
sub
xchg
add
add
pusha
iret
xor
aas
aam
and
mov
xchg
fstl
xor
adc
fst
add
andb
ret
lods
nop
pop
jns
xchg
mov
inc
inc
in
mov
jae
cmpsb
andb
bound
push
xchg
ds
sti
mov
inc
shl
fwait
push
inc
inc
out
lret
dec
test
inc
and
movl
and
daa
mov
shlb
loopne
adc
rolb
xor
loopne
lcall
ret
out
fnstsw
mov
and
add
arpl
push
mov
push
add
xor
dec
test
mov
push
mov
and
mov
ljmp
fwait
jno
hlt
sbb
inc
mov
and
imul
shlb
or
xor
sarb
xor
inc
jnp
cmpsl
cwtl
add
les
fistpl
lret
add
loopne
sub
pop
sbb
and
add
dec
mov
dec
aaa
pop
lret
lods
hlt
outsb
movsl
pop
sub
gs
popa
sbb
cmpsl
out
sarl
mov
or
mov
add
rorb
add
push
mov
sti
adc
arpl
aaa
mov
jge
mov
shlb
and
leave
fs
dec
je
imul
rolb
div
cmp
js
cmpsl
sbb
inc
mov
and
test
jbe
adc
inc
stos
addb
push
and
fbstp
pop
inc
test
push
loopne
sbb
jne
add
fs
xchg
jbe
rcr
mov
jno
fmull
loopne
add
popf
push
xor
loopne
addl
loopne
add
inc
jp
jnp
mov
stc
in
test
shlb
jnp
inc
mov
push
fwait
dec
mov
mov
xchg
sbb
ret
mov
inc
sbb
lret
addr16
push
and
fiaddl
mov
or
mov
mov
je
aas
push
jo
mov
imul
jne
pusha
pusha
mov
dec
xorl
cmp
mov
insb
rcll
jb
pushf
inc
in
mov
mov
addr16
in
arpl
lock
and
loopne
test
jo
cmp
cmpsb
pusha
mov
mov
shrb
fistpll
gs
mov
aad
add
sar
call
cmp
fldenv
outsl
clc
shl
repnz
or
inc
popa
hlt
decl
loopne
pop
push
and
adc
add
xor
lret
push
add
pop
insl
sbb
mov
sub
aad
add
pop
pop
int
int3
mov
mov
out
sahf
outsb
xor
pop
das
clc
jmp
je
push
mov
lahf
sub
ret
mov
ss
stos
loopne
pop
inc
jno
test
inc
push
int3
sbb
pop
int
sub
mov
in
sub
adc
pop
sub
mov
ss
xor
fisttpll
popa
pop
mov
and
adcl
adc
jp
sub
clc
sub
das
outsb
out
jne
mov
pop
lret
imul
xchg
subl
addb
in
mov
iret
cmpsb
pusha
add
push
and
dec
dec
inc
add
lods
andb
jnp
out
stos
loopne
dec
adc
fildll
sub
inc
or
and
movsb
and
jecxz
jne
mov
add
xchg
sub
push
mov
push
xchg
jg
pop
insl
outsl
push
jne
sbb
or
aas
pop
ret
xor
jmp
rol
ror
or
pop
fnsave
push
test
andb
inc
ljmp
repnz
adc
mov
xchg
dec
dec
loopne
lahf
dec
test
in
sbb
adc
repz
lret
js
les
movsb
loopne
pop
pushf
insl
int
sbb
mov
rolb
aaa
loop
call
adcl
mov
push
and
lds
loopne
in
arpl
fidivrl
mov
cwtl
fwait
cmp
cwtl
das
sub
add
xchg
and
inc
into
add
mov
jecxz
test
in
loopne
lds
call
out
push
mov
mov
inc
cmp
mov
shll
rolb
pop
into
loope
call
cmc
dec
mov
dec
sbb
xchg
inc
pusha
xor
je
lret
pop
inc
test
pusha
nop
arpl
or
dec
icebp
xchg
add
and
pusha
and
dec
push
cltd
scas
shll
pusha
push
mov
lods
push
xlat
stos
cld
or
in
iret
lock
xchg
ficompl
leave
cltd
test
loopne
inc
jb
mov
or
ss
lret
add
loopne
test
fs
sub
andb
push
loopne
std
or
or
in
sbb
and
mov
enter
push
imul
insl
imulb
loopne
pusha
andb
xor
leave
jns
pop
cli
dec
sarl
and
inc
das
inc
loop
cld
cmpsb
add
fsubrs
mov
xchg
or
aad
loopne
imul
mov
add
and
roll
out
jg
jge
xchg
adc
cli
mov
adcb
pop
jns
call
sbbb
mov
lcall
inc
ret
arpl
or
inc
enter
pop
push
inc
jp
add
xchg
aaa
stc
push
jnp
test
loopne
inc
aad
mov
jne
rol
push
sub
or
sarb
out
cmp
add
ds
or
and
xchg
mov
push
out
dec
fwait
imul
shlb
inc
js
inc
xor
add
or
add
test
pop
xchg
add
dec
aam
jmp
sahf
and
lds
and
loopne
nop
shrl
sbb
push
imul
inc
pop
sub
jecxz
inc
or
jnp
cli
mov
jo
cwtl
cmp
push
lds
mov
insb
les
inc
mov
cwtl
and
mov
fistl
pusha
loopne
aaa
push
test
and
xlat
mov
andb
in
adc
scas
push
and
mov
or
lods
rolb
pop
jmp
in
xchg
outsb
movsl
mov
mov
popa
mov
add
inc
mov
sarb
into
mov
xchg
in
fidivrs
cmpsb
add
xor
inc
cmp
icebp
rorl
cmovae
daa
arpl
inc
mov
pop
pop
imul
jns
mov
add
adcl
cld
sub
psubb
mov
pusha
subl
aas
push
add
xor
mov
dec
das
mov
sar
mov
pop
icebp
sbb
xchg
jecxz
addr16
inc
or
adc
jmp
pop
incl
pop
dec
arpl
xchg
cmpb
mov
sub
pusha
arpl
adc
iret
std
aas
ret
stos
shlb
rolb
sbb
mov
and
push
pop
test
fstps
xchg
shr
or
adcb
cmp
or
dec
push
leave
adc
shlb
push
leave
scas
shrb
dec
cmp
mov
test
adc
andb
and
adc
push
xlat
mov
mov
xchg
mov
fisubrs
ljmp
sahf
pop
dec
cmc
sub
movsl
dec
jbe
clc
pop
jns
xlat
repnz
inc
mov
mov
xlat
aas
inc
cli
call
xchg
aad
pop
mov
test
mov
push
dec
adc
bound
loop
mov
inc
sahf
inc
bound
negl
dec
loope
arpl
cmpl
inc
push
aam
inc
clc
lock
lahf
in
insl
std
inc
mov
lods
jne
inc
push
call
xor
inc
push
cmp
je
and
lret
out
lret
add
inc
add
pop
mov
data16
out
stc
jno
sub
in
and
sbbb
dec
sarl
imull
and
pusha
sub
add
xlat
pop
push
rolb
shlb
jmp
add
mov
jo
inc
inc
lds
outsl
mov
jbe
aam
adc
mov
js
out
add
jno
aad
mov
loopne
loopne
cmp
or
xchg
lock
add
imul
std
jp
movsl
addb
push
jecxz
in
test
loopne
push
add
mov
jbe
xchg
pop
popf
sbb
xchg
sbb
lds
loopne
imul
and
mov
mov
inc
add
add
pop
add
out
xabort
loopne
lock
mov
rcl
out
addr16
xor
movsl
inc
lds
jp
test
call
mov
inc
lea
inc
inc
xor
mov
scas
shlb
add
pop
mov
inc
push
xchg
js
inc
and
pop
bound
pusha
add
rolb
stc
push
popf
mov
and
push
popa
mov
dec
sub
xchg
sti
stos
dec
test
pusha
jno
sbb
push
dec
mov
jl
lcall
idivl
add
andb
dec
sub
push
mov
addb
mov
out
ret
and
inc
pusha
sbb
rol
outsb
rorl
or
dec
jl
jg
and
loop
dec
pop
test
pusha
mov
add
inc
popa
xor
xchg
push
bndldx
stos
or
xor
cwtl
or
loopne
stc
ss
fidivl
cmc
hlt
and
mov
ljmp
mov
lret
bound
lahf
inc
stc
imulb
imul
jae
rolb
cmpb
pop
hlt
loopne
addb
imul
jge
in
les
inc
cmpsb
addb
push
sti
scas
inc
xor
lock
test
push
cmp
inc
add
stc
aad
rolb
addb
dec
xor
ljmp
mov
loopne
add
jno
jle
stos
sub
and
outsb
pushf
mov
pop
iret
mov
dec
sub
inc
sbb
add
outsl
sub
add
ja
imulb
addb
lcall
data16
adc
test
add
fsubrs
in
inc
mov
test
xor
xchg
fnsave
loopne
jg
sbb
es
sub
lods
rolb
jecxz
add
in
push
ret
test
add
fisubl
and
mov
loopne
or
shrb
inc
xor
js
xchg
lods
add
mov
mov
dec
lods
lock
fsubrl
mov
pop
mov
loopne
push
cmc
dec
push
and
fadds
aaa
or
addb
iret
lcall
xchg
popa
jb
adc
lret
jnp
pusha
loopne
loope
mov
cmpsl
push
andb
and
cmp
inc
pop
hlt
fsubrs
shr
mov
xor
mov
xchg
lret
inc
lahf
lret
mov
shlb
loopne
mov
or
sub
inc
adc
and
mov
mov
mov
loopne
inc
in
into
andb
aaa
sub
inc
mov
jne
xor
loope
jecxz
clc
rcr
dec
fstpt
sub
add
addb
dec
jge
loopne
pop
int3
jmp
add
or
int3
add
jmp
lock
adc
and
movsl
inc
xchg
sub
loopne,pn
cld
arpl
pop
push
xchg
adc
and
clc
lock
std
jecxz
push
jbe
jo
mov
sbb
loopne
pop
push
or
hlt
fsubrs
pusha
cli
adc
jae
cs
and
pop
inc
pop
pop
xchg
rorb
rol
outsl
ret
jnp
add
les
shlb
mov
xchg
or
andb
xlat
lods
xchg
movb
and
and
jo
add
mov
add
in
sub
mov
push
andl
gs
mov
cwtl
sti
sbb
shlb
adc
and
les
loopne
je
xchg
insb
sub
orb
inc
pop
les
arpl
add
add
add
mov
shl
add
cmp
inc
mov
jo
lea
shrl
arpl
shll
test
repz
add
gs
testb
mov
xor
sbb
cmp
jge
imul
jnp
xchg
push
jbe
inc
push
mov
mov
xchg
shlb
and
push
push
sarl
loopne
push
daa
mov
in
leave
jge
sub
loopne
adc
and
inc
nop
daa
xor
or
mov
push
inc
cltd
dec
add
and
mov
imul
mov
sbb
and
std
add
andb
dec
std
inc
arpl
outsb
mov
and
aam
xor
adcl
jl
fs
lods
out
mov
add
loopne
jg
stos
loopne
bound
insb
jns
mov
loopne
std
icebp
sarb
cmp
xchg
push
aas
data16
pusha
sbb
aaa
testb
and
stos
jbe
pusha
pusha
ror
stos
add
in
into
jecxz
and
jb
sub
pusha
push
add
shrb
dec
pop
xchg
repnz
jmp
pop
cmpl
ficompl
and
jmp
mov
mov
mov
int
xor
jno
add
fisttpll
imul
ret
or
pop
arpl
jle
shll
fdivrs
rorb
jnp
add
insb
mov
jecxz
mov
loopne
mov
out
add
adc
push
dec
fimuls
divb
sbb
xchg
test
pusha
ds
ror
call
adc
clc
inc
cmpsb
add
mov
mov
nop
cld
jae
add
lahf
pop
orl
lret
xor
add
repnz
nop
cld
jae
add
idivl
clc
repnz
nop
cld
jae
loope
incl
rorb
clc
repnz
nop
cld
jae
push
jbe
iret
test
incl
pusha
int
push
mov
xchg
ret
add
lcall
add
repnz
nop
cld
jae
or
popf
add
push
push
clc
repnz
nop
cld
jae
add
dec
mov
inc
inc
movzwl
clc
repnz
nop
cld
jae
jle
test
out
stc
mov
clc
repnz
nop
cld
jae
pop
pop
dec
mov
lock
jg
sbb
clc
repnz
nop
cld
jae
add
and
pop
push
mov
xchg
ret
inc
push
push
lcall
test
test
mov
leave
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
xlat
push
add
push
push
rep
push
mov
xchg
ret
or
lods
sbb
push
mov
xchg
ret
pop
add
add
mov
nop
nop
cld
jae
add
add
add
add
xchg
je
clc
repnz
nop
cld
jae
dec
add
addb
or
mov
nop
nop
cld
jae
lods
sub
pop
add
iret
repnz
sub
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
pop
add
out
sbb
pusha
inc
popa
jne
nop
push
mov
leave
nop
jmp
add
add
movzwl
clc
repnz
nop
cld
jae
pop
incb
add
pushf
icebp
pop
clc
repnz
nop
cld
jae
test
add
mov
enter
test
sbb
nop
nop
cld
jae
add
mov
xchg
ret
mov
mov
mov
xor
xchg
add
clc
repnz
nop
cld
jae
add
insb
lcall
push
mov
leave
nop
jmp
sbb
test
or
add
int
pop
jae
repnz
nop
cld
jae
add
incb
jle
cli
xlat
add
clc
repnz
nop
cld
jae
decl
in
add
movzwl
clc
repnz
nop
cld
jae
add
sbb
ja
add
iret
add
pushl
add
nop
nop
cld
jae
loope
fiadds
pop
test
add
pop
add
clc
repnz
nop
cld
jae
add
mov
pusha
xchg
sbb
insb
inc
add
add
dec
add
andb
inc
sbb
cmp
add
add
out
add
mov
mov
nop
push
mov
leave
nop
jmp
add
add
mov
jno
add
add
leave
nop
jmp
mov
stos
clc
repnz
nop
cld
jae
add
jo
call
clc
repnz
nop
cld
jae
add
lahf
push
mov
push
mov
leave
nop
jmp
push
add
add
sub
inc
loop
testl
nop
push
mov
leave
nop
jmp
dec
add
test
repnz
nop
cld
jae
pop
iret
add
add
pop
push
cmp
mov
push
mov
xchg
ret
popa
xlat
out
add
add
push
movzwl
clc
repnz
nop
cld
jae
mov
aaa
call
clc
repnz
nop
cld
jae
sbb
clc
repnz
nop
cld
jae
decl
dec
pop
test
cltd
add
clc
repnz
nop
cld
jae
add
mov
bound
jmp
dec
fiadds
add
mov
dec
pop
mov
add
inc
clc
repnz
nop
cld
jae
lods
repnz
lods
add
insb
push
loop
sub
repz
xchg
ret
pop
xchg
iret
add
add
and
inc
shlb
add
clc
repnz
nop
cld
jae
add
sldt
or
mov
xchg
ret
mov
add
pop
pop
clc
repnz
nop
cld
jae
add
out
iret
add
sbb
nop
push
mov
leave
nop
jmp
repnz
push
add
sbb
add
clc
repnz
nop
cld
jae
add
add
push
es
jecxz
repnz
nop
cld
jae
add
lahf
fisubrs
call
clc
repnz
nop
cld
jae
sbb
sbb
xchg
cld
clc
repnz
nop
cld
jae
test
add
mov
pusha
and
add
mov
arpl
add
repnz
nop
cld
jae
add
out
iret
ret
test
add
clc
repnz
nop
cld
jae
popf
mov
test
mov
lea
push
mov
xchg
ret
mov
add
jbe
aas
call
push
mov
xchg
ret
pop
push
add
add
and
add
repnz
nop
cld
jae
add
out
out
clc
clc
repnz
nop
cld
jae
dec
test
add
rcr
sbb
clc
repnz
nop
cld
jae
add
add
sbb
hlt
stos
mov
idiv
clc
repnz
nop
cld
jae
nop
add
cld
xchg
mov
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
ficoms
lods
jbe
mov
loopne
mov
dec
push
add
and
insb
xchg
add
add
test
or
push
sub
push
cwtl
inc
add
add
add
in
fidivl
push
mov
leave
nop
jmp
add
add
popf
les
rol
mov
icebp
nop
push
mov
leave
nop
jmp
pusha
add
add
pop
xchg
clc
repnz
nop
cld
jae
mov
out
add
add
pop
mov
imul
clc
repnz
nop
cld
jae
repnz
sub
push
mov
leave
nop
jmp
add
add
popf
add
cmp
push
mov
leave
nop
jmp
add
jo
mov
push
push
mov
xchg
ret
sbb
fiadds
dec
add
add
sbb
repnz
nop
cld
jae
jbe
lcall
adc
repnz
nop
cld
jae
add
btr
add
mov
xchg
ret
loope
pop
add
jmp
nop
cld
jae
add
out
mov
add
call
clc
repnz
nop
cld
jae
add
add
mov
outsb
adc
nop
cld
jae
add
add
leave
add
repnz
nop
cld
jae
add
mov
and
mov
xchg
ret
pop
fiadds
dec
dec
lcall
popa
nop
push
mov
leave
nop
jmp
mov
add
add
fistpl
push
mov
xchg
ret
push
add
push
pusha
add
add
push
mov
xchg
ret
add
add
pop
test
and
repnz
nop
cld
jae
pusha
pop
add
sbb
rep
clc
repnz
nop
cld
jae
dec
add
xchg
mov
add
clc
repnz
nop
cld
jae
add
add
fiadds
and
xor
clc
repnz
nop
cld
jae
add
xlat
mov
clc
repnz
nop
cld
jae
pop
iret
pop
sub
sarl
repnz
nop
cld
jae
leave
push
add
repnz
nop
cld
jae
add
add
out
lahf
arpl
nop
cld
jae
push
mov
test
iret
or
inc
add
fimuls
add
and
inc
add
jmp
iret
add
add
add
test
and
call
inc
add
fiadds
jmp
jo
add
clc
repnz
nop
cld
jae
add
add
in
xchg
out
mov
les
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
popf
add
leave
dec
insb
add
in
add
clc
repnz
nop
cld
jae
iret
add
push
pusha
clc
repnz
nop
cld
jae
add
xchg
add
repz
mov
xchg
ret
add
add
xlat
add
add
xchg
and
dec
xchg
movaps
add
iret
sbb
repnz
nop
cld
jae
push
test
hlt
sub
add
cmp
les
mov
xchg
ret
mov
insb
xlat
insb
add
push
mov
clc
repnz
nop
cld
jae
pop
jbe
add
add
push
mov
xchg
ret
out
incb
add
iret
add
fsubs
inc
or
repnz
nop
cld
jae
or
xchg
pusha
add
mov
loopne
fld1
clc
repnz
nop
cld
jae
add
add
add
push
loope
icebp
add
clc
repnz
nop
cld
jae
popa
add
mov
mov
repnz
nop
cld
jae
add
xchg
add
incb
pop
sahf
int3
and
aad
inc
add
add
mov
popa
pop
clc
repnz
nop
cld
jae
pop
add
jl
loopne
and
loopne
fwait
clc
repnz
nop
cld
jae
pop
fiadds
fidivs
cmpw
nop
push
mov
leave
nop
jmp
popa
add
fwait
push
mov
xchg
ret
add
jo
fdivp
add
les
push
push
mov
xchg
ret
add
out
add
adc
imulb
test
push
mov
xchg
ret
add
mov
add
fwait
clc
repnz
nop
cld
jae
add
repnz
movsb
clc
repnz
nop
cld
jae
jbe
dec
push
dec
les
repnz
nop
cld
jae
incl
lcall
inc
int
test
repnz
nop
cld
jae
add
mov
push
mov
leave
nop
jmp
mov
pop
jmp
pop
add
iret
add
add
pop
mov
mov
xchg
ret
add
add
sub
mov
jecxz
clc
repnz
nop
cld
jae
add
add
add
xchg
lahf
imul
clc
repnz
nop
cld
jae
adc
add
test
mov
nop
push
mov
leave
nop
jmp
sub
pop
add
push
orl
imul
in
jo
dec
xchg
mov
mov
clc
repnz
nop
cld
jae
sbb
dec
add
add
mov
sub
xchg
push
and
pop
insb
pop
mov
add
dec
clc
repnz
nop
cld
jae
add
add
push
add
jno
sti
nop
push
mov
leave
nop
jmp
pop
push
dec
push
push
add
add
shl
clc
repnz
nop
cld
jae
xlat
loope
test
add
shlb
mov
xchg
ret
push
mov
push
push
mov
mov
clc
repnz
nop
cld
jae
mov
add
loopne
xor
add
nop
push
mov
leave
nop
jmp
xlat
add
aad
sbb
clc
repnz
nop
cld
jae
jle
out
add
sbb
repnz
nop
cld
jae
add
dec
add
add
nop
nop
cld
jae
mov
pop
andb
outsb
push
repnz
nop
cld
jae
pop
add
popf
mov
pcmpeqd
nop
nop
cld
jae
add
add
jne
clc
repnz
nop
cld
jae
mov
clc
repnz
nop
cld
jae
sbb
iret
add
add
jp
push
push
mov
xchg
ret
add
add
add
inc
imul
in
leave
nop
jmp
loope
fsubp
dec
and
and
repnz
nop
cld
jae
fisubs
jb
mov
mov
leave
nop
jmp
lods
xchg
mov
rcl
pusha
shl
add
clc
repnz
nop
cld
jae
add
fidivrs
push
mov
xchg
ret
push
add
push
in
push
jno
add
repnz
nop
cld
jae
push
in
test
add
mov
mov
xchg
ret
lcall
test
clc
repnz
nop
cld
jae
add
push
add
clc
repnz
nop
cld
jae
add
add
add
add
cmp
mov
xchg
ret
add
and
add
sbb
nop
nop
cld
jae
add
push
add
nop
push
mov
leave
nop
jmp
iret
xchg
add
mov
repnz
nop
cld
jae
add
loope
out
pusha
aam
leave
clc
repnz
nop
cld
jae
loope
sub
add
add
arpl
mov
leave
nop
jmp
adc
jbe
add
sub
mov
nop
push
mov
leave
nop
jmp
dec
iret
add
sbb
fisttpll
nop
nop
cld
jae
add
fldl
jne
nop
push
mov
leave
nop
jmp
nop
add
insb
add
mov
out
mov
xchg
ret
dec
push
pop
nop
punpcklbw
adc
mov
nop
push
mov
leave
nop
jmp
dec
leave
add
add
pushl
push
mov
xchg
ret
add
add
out
add
xchg
fs
pusha
push
mov
xchg
ret
jbe
add
add
add
and
nop
jmp
pop
add
add
add
mov
pusha
mov
clc
repnz
nop
cld
jae
or
pop
rep
clc
repnz
nop
cld
jae
add
add
add
sub
repnz
nop
cld
jae
add
fiadds
movq
mov
add
repnz
nop
cld
jae
pop
add
add
mov
leave
nop
jmp
xlat
iret
hlt
add
jbe
sbb
add
clc
repnz
nop
cld
jae
lods
test
sub
inc
pop
test
nop
push
mov
leave
nop
jmp
xchg
add
add
jecxz
addb
add
repnz
nop
cld
jae
in
lahf
push
std
add
nop
push
mov
leave
nop
jmp
mov
in
orl
add
les
pusha
loopne
mov
clc
repnz
nop
cld
jae
test
push
add
imul
clc
repnz
nop
cld
jae
pop
and
xchg
pop
push
nop
push
mov
leave
nop
jmp
lcall
hlt
fisttpl
nop
cld
jae
jbe
add
repnz
shl
sbb
mov
leave
nop
jmp
out
xchg
add
clc
repnz
nop
cld
jae
incl
add
sbb
loope
xchg
jb
push
push
mov
xchg
ret
pusha
lcall
add
int
cs
add
clc
repnz
nop
cld
jae
add
gs
push
mov
xchg
ret
iret
hlt
btr
sbb
mov
xchg
ret
xlat
out
test
add
sub
add
repnz
nop
cld
jae
hlt
jle
add
jbe
ret
clc
repnz
nop
cld
jae
out
add
add
add
add
nop
cld
jae
leave
test
add
add
nop
push
mov
leave
nop
jmp
les
add
sbb
clc
repnz
nop
cld
jae
add
add
inc
fimuls
nop
cld
jae
add
nop
insb
push
add
add
clc
repnz
nop
cld
jae
add
pop
and
and
clc
repnz
nop
cld
jae
add
add
xlat
lea
nop
push
mov
leave
nop
jmp
add
xchg
subb
lret
add
add
add
leave
add
nop
xchg
add
nop
push
mov
leave
nop
jmp
jbe
or
add
rep
push
mov
xchg
ret
pop
test
nop
sub
dec
push
cwtl
aaa
mov
push
mov
xchg
ret
add
dec
mov
data16
sar
nop
nop
cld
jae
inc
add
add
push
mov
xchg
ret
dec
in
insb
add
leave
nop
push
mov
leave
nop
jmp
mov
mov
and
mov
xchg
ret
add
add
adc
popf
adc
fbstp
xchg
ret
add
leave
iret
xchg
rep
nop
push
mov
leave
nop
jmp
popf
add
hlt
dec
add
das
mov
clc
repnz
nop
cld
jae
add
add
je
clc
repnz
nop
cld
jae
push
pop
repnz
inc
and
mov
push
mov
leave
nop
jmp
punpcklwd
add
pusha
mov
push
clc
repnz
nop
cld
jae
sub
mov
add
mov
mov
xchg
ret
add
mov
add
nop
cld
jae
add
add
add
aas
nop
push
mov
leave
nop
jmp
test
in
popa
xchg
add
mov
clc
repnz
nop
cld
jae
add
test
pop
and
and
clc
repnz
nop
cld
jae
add
lea
nop
push
mov
leave
nop
jmp
add
pop
add
add
adc
add
nop
jmp
pop
jle
add
mov
cld
jae
decb
test
add
pop
cs
add
mov
clc
repnz
nop
cld
jae
pusha
mov
or
clc
repnz
nop
cld
jae
pop
add
add
fwait
clc
repnz
nop
cld
jae
add
pusha
dec
add
add
rclb
and
nop
push
mov
leave
nop
jmp
add
in
xchg
lods
fld1
push
mov
xchg
ret
test
in
pop
inc
pusha
mov
and
mov
xchg
ret
mov
xlat
mov
fld1
clc
repnz
nop
cld
jae
add
add
add
add
push
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
sbb
sbb
add
mov
sub
repnz
nop
cld
jae
add
add
iret
pop
mov
add
clc
repnz
nop
cld
jae
xchg
add
verr
scas
andb
clc
clc
repnz
nop
cld
jae
fiadds
jb
xchg
mov
clc
repnz
nop
cld
jae
add
pop
incb
out
inc
push
add
push
clc
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
push
mov
add
les
push
call
clc
repnz
nop
cld
jae
fiadds
out
push
shr
clc
repnz
nop
cld
jae
pushl
add
add
insb
xchg
push
clc
repnz
nop
cld
jae
add
fiadds
add
jle
add
clc
repnz
nop
cld
jae
popf
add
popf
dec
jp
xorl
nop
push
mov
leave
nop
jmp
add
mov
leave
nop
jmp
loope
add
add
repnz
nop
cld
jae
mov
add
mov
test
nop
push
mov
leave
nop
jmp
les
adc
mov
nop
push
mov
leave
nop
jmp
out
add
incl
imul
ret
add
push
lahf
add
jno
jge
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
repnz
add
loopne
lock
mov
repnz
nop
cld
jae
add
add
fistpl
clc
repnz
nop
cld
jae
leave
out
add
mov
fists
push
mov
leave
nop
jmp
xchg
add
add
popf
add
push
dec
nop
push
mov
leave
nop
jmp
mov
mov
clc
repnz
nop
cld
jae
jo
mov
push
aaa
rep
clc
repnz
nop
cld
jae
popf
inc
dec
add
mov
xor
clc
repnz
nop
cld
jae
lahf
popf
xlat
lods
add
add
cmp
nop
nop
cld
jae
sub
add
or
rcl
fistpl
push
mov
xchg
ret
iret
out
test
add
add
pop
clc
repnz
nop
cld
jae
dec
popa
add
mov
inc
pusha
jbe
pop
clc
repnz
nop
cld
jae
add
popa
add
sar
mov
xchg
ret
pop
jbe
add
test
add
nop
push
mov
leave
nop
jmp
pop
add
add
fistpll
clc
repnz
nop
cld
jae
add
add
inc
pop
nop
push
mov
leave
nop
jmp
xlat
popf
add
adc
and
add
clc
repnz
nop
cld
jae
pop
add
add
add
repnz
nop
cld
jae
add
inc
std
je
clc
repnz
nop
cld
jae
add
add
cmpsb
rol
inc
lea
clc
repnz
nop
cld
jae
add
fidivrs
nop
push
mov
leave
nop
jmp
popa
or
xchg
add
popa
sbb
or
shlb
add
ja
fs
repnz
nop
cld
jae
mov
addb
push
or
push
mov
leave
nop
jmp
pop
lahf
add
and
nop
nop
cld
jae
iret
push
xchg
jle
inc
sub
push
mov
leave
nop
jmp
add
les
dec
push
nop
push
mov
leave
nop
jmp
sbb
test
dec
mov
push
mov
xchg
ret
add
xchg
loope
add
adc
andb
nop
cld
jae
sub
dec
pop
mov
mov
nop
push
mov
leave
nop
jmp
mov
jbe
or
add
repnz
nop
cld
jae
jmp
loop
rol
clc
repnz
nop
cld
jae
push
add
pusha
pusha
shrl
push
mov
leave
nop
jmp
add
and
ret
push
push
mov
xchg
ret
add
add
add
jle
test
add
jno
lret
mov
leave
nop
jmp
lods
add
sbb
push
jno
nop
push
mov
leave
nop
jmp
add
add
pop
dec
add
xor
nop
push
mov
leave
nop
jmp
xlat
add
push
loopne
std
fwait
nop
push
mov
leave
nop
jmp
add
pop
pop
pop
add
dec
pop
nop
push
mov
leave
nop
jmp
xlat
add
xor
add
repnz
nop
cld
jae
iret
push
movsb
pusha
mov
inc
xor
push
mov
xchg
ret
add
push
add
add
pop
mulb
add
nop
push
mov
leave
nop
jmp
or
mov
mov
clc
repnz
nop
cld
jae
jbe
sbb
add
int3
pop
pop
push
mov
xchg
ret
fiadds
add
add
add
push
push
loopne
jl
push
clc
repnz
nop
cld
jae
pop
add
fiadds
les
add
nop
nop
cld
jae
add
mov
push
push
mov
xchg
ret
sbb
add
str
add
push
clc
repnz
nop
cld
jae
test
add
adc
add
pop
push
clc
repnz
nop
cld
jae
add
sbb
push
add
mov
clc
repnz
nop
cld
jae
sbb
add
push
mov
xchg
ret
add
dec
dec
add
inc
outsl
xchg
push
mov
xchg
ret
add
add
lcall
insl
subb
in
leave
nop
jmp
lahf
sbb
mov
call
clc
repnz
nop
cld
jae
add
pop
nop
push
mov
leave
nop
jmp
mov
mov
clc
repnz
nop
cld
jae
add
add
incl
lahf
add
in
push
push
mov
xchg
ret
sbb
pop
add
out
add
nop
popf
add
push
mov
xchg
ret
out
add
lods
sbb
add
cmp
repnz
nop
cld
jae
add
movmskps
add
nop
nop
cld
jae
add
mov
add
jno
test
add
nop
push
mov
leave
nop
jmp
add
cld
in
adc
push
mov
leave
nop
jmp
add
add
inc
add
pop
push
push
mov
xchg
ret
add
add
push
add
add
mov
xchg
ret
mov
insb
pusha
inc
addb
add
nop
push
mov
leave
nop
jmp
push
add
add
ret
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
dec
in
in
add
add
mov
nop
push
mov
leave
nop
jmp
nopl
les
add
inc
xchg
nop
push
mov
leave
nop
jmp
pop
popa
in
add
test
inc
dec
clc
repnz
nop
cld
jae
add
test
pop
mov
mov
clc
repnz
nop
cld
jae
push
mov
mov
clc
repnz
nop
cld
jae
add
add
xchg
cmp
nop
push
mov
leave
nop
jmp
add
out
jmp
call
cld
jae
add
pop
add
cld
loopne
rolb
call
cld
jae
add
jbe
jbe
leave
pop
nop
push
mov
leave
nop
jmp
dec
add
pop
add
add
aad
nop
push
mov
leave
nop
jmp
push
add
lahf
pop
pop
add
fld1
push
mov
xchg
ret
add
add
add
je
sub
repnz
nop
cld
jae
sbb
add
test
jle
xchg
clc
repnz
nop
cld
jae
add
popa
add
in
add
stos
call
nop
push
mov
leave
nop
jmp
and
ret
add
nop
push
mov
leave
nop
jmp
push
add
push
clc
repnz
nop
cld
jae
pop
and
pop
pusha
or
sar
repnz
nop
cld
jae
add
loope
push
les
clc
repnz
nop
cld
jae
and
loope
mov
clc
repnz
nop
cld
jae
dec
or
add
push
add
call
clc
repnz
nop
cld
jae
test
lcall
clc
repnz
nop
cld
jae
in
add
andb
fstl
repnz
nop
cld
jae
add
in
push
add
nop
push
mov
leave
nop
jmp
add
dec
leave
in
mov
clc
repnz
nop
cld
jae
add
inc
out
push
pusha
jl
and
out
shr
clc
repnz
nop
cld
jae
pop
add
add
pop
xor
mov
mov
leave
nop
jmp
add
add
in
xor
pusha
and
pusha
xorb
add
repnz
nop
cld
jae
xchg
add
cld
add
repnz
nop
cld
jae
nop
dec
add
add
or
xchg
inc
add
insb
mov
add
and
ss
clc
repnz
nop
cld
jae
add
push
movsl
push
mov
add
movsl
jmp
sub
add
add
mov
jno,pt
jl
push
clc
repnz
nop
cld
jae
test
dec
add
les
add
push
mov
leave
nop
jmp
inc
mov
jle
and
xor
add
nop
push
mov
leave
nop
jmp
popa
add
push
imul
nop
cld
jae
jle
add
add
ret
loopne
loopne
jmp
sar
repnz
nop
cld
jae
add
daa
stos
clc
repnz
nop
cld
jae
add
bndldx
pop
clc
repnz
nop
cld
jae
mov
in
add
xchg
add
dec
mov
clc
repnz
nop
cld
jae
dec
add
add
in
dec
cmp
repnz
nop
cld
jae
ficoms
popf
hlt
ficomps
mov
mov
push
mov
xchg
ret
add
sbb
repnz
repz
clc
repnz
nop
cld
jae
add
push
add
fsubrp
sbb
pop
pop
add
clc
repnz
nop
cld
jae
lods
add
dec
andb
push
push
clc
repnz
nop
cld
jae
add
add
clc
nop
push
mov
leave
nop
jmp
out
or
mov
push
add
mov
in
leave
nop
jmp
add
add
cld
push
mov
xchg
ret
mov
add
push
add
add
cmpsl
es
clc
repnz
nop
cld
jae
add
add
popf
adc
add
repnz
nop
cld
jae
out
test
repnz
test
repnz
nop
cld
jae
pop
and
jne
clc
repnz
nop
cld
jae
push
in
sub
add
je
clc
repnz
nop
cld
jae
mov
or
repnz
nop
cld
jae
dec
leave
adc
test
loope
clc
clc
repnz
nop
cld
jae
out
jo
add
xchg
add
mov
push
mov
xchg
ret
add
push
sub
clc
repnz
nop
cld
jae
lods
pop
add
add
dec
cmp
repnz
nop
cld
jae
jle
fiadds
add
in
popl
clc
repnz
nop
cld
jae
add
dec
add
mov
imul
repnz
nop
cld
jae
dec
add
sbb
push
clc
repnz
nop
cld
jae
xchg
dec
dec
or
mov
clc
repnz
nop
cld
jae
sub
add
outsl
jmp
fiadds
add
xchg
loope
sub
add
or
mov
leave
nop
jmp
add
add
add
ds
ret
je
clc
repnz
nop
cld
jae
mov
jmp
mov
xchg
ret
incl
mov
dec
icebp
mov
clc
repnz
nop
cld
jae
add
popf
push
add
add
mov
xchg
ret
add
nop
jle
adc
inc
dec
adc
lret
add
repnz
nop
cld
jae
pop
popf
add
clc
repnz
nop
cld
jae
fiadds
add
hlt
push
push
push
mov
xchg
ret
insb
test
add
inc
popa
add
dec
test
test
add
add
out
add
sbb
hlt
xchg
push
nop
sub
nop
nop
cld
jae
add
les
xchg
add
clc
repnz
nop
cld
jae
out
hlt
pop
add
mov
sbb
mov
repnz
nop
cld
jae
add
insb
pop
xor
clc
repnz
nop
cld
jae
jbe
mov
mov
inc
mov
nop
push
mov
leave
nop
jmp
les
and
loop
push
mov
leave
nop
jmp
jo
add
add
popf
adc
call
clc
repnz
nop
cld
jae
lahf
les
add
adc
push
mov
leave
nop
jmp
add
in
mov
add
leave
nop
jmp
hlt
add
adc
mov
push
mov
leave
nop
jmp
insb
dec
mov
lock
jmp
in
and
pusha
add
jle
jle
test
add
and
jne
push
mov
xchg
ret
add
pusha
mov
mov
clc
repnz
nop
cld
jae
xchg
add
lods
dec
leave
cmp
mov
clc
repnz
nop
cld
jae
add
add
int3
in
push
mov
xchg
ret
mov
add
iret
add
push
nop
push
mov
leave
nop
jmp
jle
lahf
adc
pushf
rorl
repnz
nop
cld
jae
jbe
add
add
add
gs
nop
push
mov
leave
nop
jmp
add
adc
add
add
and
add
mov
add
add
repnz
mov
incb
add
push
clc
repnz
nop
cld
jae
add
add
mov
inc
push
mov
xchg
ret
add
add
popf
add
pop
lahf
jns
rcll
mov
xchg
ret
add
popa
mov
add
push
mov
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
pop
mov
pop
dec
push
push
clc
repnz
nop
cld
jae
lcall
adc
dec
nop
push
mov
leave
nop
jmp
pop
pop
add
add
push
nop
push
mov
leave
nop
jmp
add
add
out
jbe
nop
mov
inc
add
add
add
dec
add
push
mov
leave
nop
jmp
add
add
lods
jbe
add
mov
xchg
ret
add
test
add
mov
clc
repnz
nop
cld
jae
fiadds
insb
add
push
mov
xchg
ret
test
leave
mov
mov
mov
repnz
nop
cld
jae
dec
add
stos
addb
nop
cld
jae
push
and
pop
push
dec
pop
clc
repnz
nop
cld
jae
xchg
les
add
dec
lcall
sbb
nop
nop
cld
jae
add
add
repnz
xlat
pop
push
mov
xchg
ret
mov
jle
add
pop
jo
push
mov
nop
push
mov
leave
nop
jmp
add
add
xlat
fistpl
push
mov
xchg
ret
inc
add
adc
add
and
aaa
lss
clc
repnz
nop
cld
jae
add
cltd
fld1
push
mov
xchg
ret
add
add
popf
add
jo
shlb
nop
cld
jae
jbe
xlat
mov
popa
add
clc
repnz
nop
cld
jae
add
popf
xchg
add
xchg
sub
nop
nop
cld
jae
leave
mov
sub
add
repnz
nop
cld
jae
add
dec
pop
pusha
pop
adc
repnz
nop
cld
jae
add
add
dec
sub
ss
repnz
nop
cld
jae
sbb
lahf
setbe
clc
repnz
nop
cld
jae
add
add
pop
iret
mov
clc
repnz
nop
cld
jae
add
mov
std
mov
clc
repnz
nop
cld
jae
jbe
repnz
add
push
push
mov
xchg
ret
push
add
loope
lahf
add
mov
push
mov
xchg
ret
mov
add
ret
clc
repnz
nop
cld
jae
add
add
dec
inc
clc
repnz
nop
cld
jae
add
add
in
imul
nop
nop
cld
jae
add
add
push
mov
xchg
ret
in
les
pand
clc
repnz
nop
cld
jae
mov
jmp
clc
repnz
nop
cld
jae
iret
iret
add
cmp
xchg
inc
add
add
loope
push
hlt
mov
clc
repnz
nop
cld
jae
add
add
cmp
push
mov
leave
nop
jmp
dec
add
jle
repnz
nop
cld
jae
fimuls
movntps
nop
nop
cld
jae
out
add
add
pop
clc
repnz
nop
cld
jae
dec
add
dec
add
movb
repnz
nop
cld
jae
add
jbe
add
clc
repnz
nop
cld
jae
add
add
xor
popf
jmp
add
in
add
and
bound
push
faddl
add
push
clc
repnz
nop
cld
jae
mov
add
sbb
add
clc
repnz
nop
cld
jae
add
sbb
push
mov
xchg
ret
pop
add
add
hlt
inc
pop
mov
nop
push
mov
leave
nop
jmp
add
mov
pop
add
clc
repnz
nop
cld
jae
mov
insb
or
mov
xchg
ret
add
add
add
nop
cld
jae
popa
add
mov
push
clc
repnz
nop
cld
jae
and
repnz
add
clc
repnz
nop
cld
jae
add
push
movzwl
clc
repnz
nop
cld
jae
insb
sbb
insb
adc
add
cs
sub
push
mov
xchg
ret
les
mov
add
test
repnz
nop
cld
jae
lcall
add
cmpl
nop
nop
cld
jae
nop
xchg
test
movsl
mov
clc
repnz
nop
cld
jae
mov
mov
push
mov
xchg
ret
lahf
xlat
test
add
jo
pop
clc
xchg
cmp
nop
push
mov
leave
nop
jmp
dec
add
add
rcrb
pop
push
mov
xchg
ret
add
add
in
add
hlt
xchg
nop
push
mov
leave
nop
jmp
test
add
pop
pop
pusha
nop
push
mov
leave
nop
jmp
mov
dec
add
mov
push
mov
xchg
ret
add
add
mov
leave
nop
jmp
add
add
add
mov
repnz
nop
cld
jae
add
dec
lods
mov
add
clc
repnz
nop
cld
jae
lahf
add
test
mov
jmp
pop
mov
add
mov
add
sbb
push
nop
push
mov
leave
nop
jmp
add
mov
add
cmp
test
nop
push
mov
leave
nop
jmp
les
jge
clc
repnz
nop
cld
jae
add
xor
and
push
mov
xchg
ret
add
iret
add
push
push
jb
movsb
rolb
inc
add
pusha
inc
adcl
jae
out
add
pop
push
out
loope
sub
ret
nop
push
mov
leave
nop
jmp
pop
xlat
popa
add
add
add
or
inc
add
add
loop
add
pop
jmp
daa
dec
nop
push
mov
leave
nop
jmp
add
mov
test
push
xlat
cmpsb
rolb
add
nop
push
mov
leave
nop
jmp
add
xchg
clc
add
clc
repnz
nop
cld
jae
add
incb
mov
in
leave
nop
jmp
in
pusha
test
sub
mov
xchg
ret
add
or
test
inc
push
push
mov
xchg
ret
nop
pop
test
and
pop
fld1
push
mov
xchg
ret
mov
add
mov
add
clc
repnz
nop
cld
jae
xchg
iret
add
dec
data16
bound
clc
repnz
nop
cld
jae
add
add
sbb
jne
clc
repnz
nop
cld
jae
adc
adc
pusha
xchg
mov
mov
xchg
ret
loope
add
push
adc
movsb
inc
inc
shlb
nop
nop
cld
jae
add
btr
test
aam
call
nop
jmp
mov
jbe
push
popa
clc
repnz
nop
cld
jae
pusha
add
dec
cmpl
nop
push
mov
leave
nop
jmp
jle
mov
jbe
in
sub
add
mov
add
roll
repnz
nop
cld
jae
ficomps
movsl
push
push
mov
xchg
ret
add
pop
repnz
add
add
sub
nop
push
mov
leave
nop
jmp
iret
add
sti
pop
clc
repnz
nop
cld
jae
jo
xchg
test
add
push
mov
cmp
inc
add
mov
add
sahf
imul
add
sarb
out
add
nop
nop
cld
jae
sbb
add
iret
inc
addb
mov
jmp
add
iret
add
test
mov
add
jg
nop
push
mov
leave
nop
jmp
lods
mov
mov
lea
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
adc
popf
mov
jmp
pushl
clc
repnz
nop
cld
jae
iret
pusha
add
push
push
mov
xchg
ret
mov
sub
dec
add
add
clc
repnz
nop
cld
jae
add
popf
add
clc
repnz
nop
cld
jae
jle
pop
in
out
add
dec
call
pop
cld
clc
repnz
nop
cld
jae
in
add
iret
popf
test
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
mov
les
pop
jmp
call
leave
nop
jmp
inc
add
add
push
jle
inc
lea
nop
push
mov
leave
nop
jmp
repnz
dec
add
pop
sub
clc
repnz
nop
cld
jae
test
faddp
add
add
push
mov
xchg
ret
add
add
add
add
xor
clc
repnz
nop
cld
jae
push
add
nop
push
mov
leave
nop
jmp
add
add
imul
nop
cld
jae
add
lcall
icebp
jl
nop
push
mov
leave
nop
jmp
add
mov
ret
nop
push
mov
leave
nop
jmp
add
sbb
mov
data16
inc
clc
cmp
repnz
nop
cld
jae
fiadds
incb
insb
mov
mov
repnz
nop
cld
jae
fdivrp
mov
inc
dec
leave
push
push
mov
xchg
ret
fimuls
add
add
mov
or
inc
pusha
sbb
mov
xchg
ret
add
add
pop
in
add
mov
and
add
pop
sldt
das
xor
nop
push
mov
leave
nop
jmp
or
add
mov
xchg
ret
dec
repnz
dec
add
stc
add
push
mov
xchg
ret
add
add
mov
pusha
mov
nop
nop
cld
jae
jo
out
push
add
mov
clc
repnz
nop
cld
jae
add
add
shl
clc
repnz
nop
cld
jae
add
sub
push
mov
leave
nop
jmp
add
mov
add
cmpl
jae
add
sub
repnz
nop
cld
jae
adc
mov
andl
nop
cld
jae
add
pusha
inc
dec
pop
push
mov
xchg
ret
invd
test
add
add
add
nop
nop
cld
jae
add
push
add
xchg
mov
inc
clc
repnz
nop
cld
jae
add
test
add
js
inc
pusha
lea
push
mov
xchg
ret
sbb
nop
sbb
jle
roll
repz
repnz
nop
cld
jae
jle
iret
add
repnz
nop
cld
jae
add
push
push
jbe
pop
jne
clc
repnz
nop
cld
jae
mov
add
add
clc
repnz
nop
cld
jae
out
sub
push
add
xor
nop
push
mov
leave
nop
jmp
lahf
add
and
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
add
jbe
add
add
ds
negl
cld
jae
add
adc
pop
add
xchg
lods
push
push
mov
xchg
ret
add
add
popa
add
add
shr
push
mov
xchg
ret
push
pop
dec
fsubp
add
clc
repnz
nop
cld
jae
popf
iret
add
adc
push
mov
leave
nop
jmp
sbb
mov
inc
loopne
cmp
nop
push
mov
leave
nop
jmp
jo
incb
mov
add
add
mov
clc
repnz
nop
cld
jae
add
add
popf
hlt
add
ud0
clc
repnz
nop
cld
jae
add
imulb
add
repnz
nop
cld
jae
add
popa
add
add
clc
repnz
nop
cld
jae
add
add
push
mov
nop
nop
cld
jae
pop
test
mov
loope
inc
add
dec
iret
add
add
iret
inc
pop
push
mov
xchg
ret
dec
sub
add
pop
xchg
out
push
mov
push
mov
xchg
ret
out
push
mov
aad
jl
and
sarl
xchg
ret
add
mov
pop
cmp
add
adcb
aam
fistpl
clc
repnz
nop
cld
jae
add
add
jle
mov
push
mov
xchg
ret
add
add
popf
popa
dec
and
dec
sub
repnz
nop
cld
jae
adc
pop
add
add
call
nop
jmp
sbb
verr
pop
clc
repnz
nop
cld
jae
push
add
jae
xor
push
mov
xchg
ret
mov
add
add
iret
cld
push
mov
cmp
nop
push
mov
leave
nop
jmp
add
dec
add
push
mov
xchg
ret
mov
add
xor
push
nop
push
mov
leave
nop
jmp
add
add
adc
mov
xchg
ret
add
add
pop
mov
popf
mov
clc
repnz
nop
cld
jae
add
dec
mov
repnz
nop
cld
jae
add
pop
add
add
lahf
push
nop
push
mov
leave
nop
jmp
out
add
or
xchg
pop
mov
test
cmp
ret
add
and
repnz
add
mov
mov
xchg
ret
add
add
add
ret
add
push
mov
xchg
ret
push
dec
mov
movswl
clc
repnz
nop
cld
jae
fiadds
incb
nop
jle
xor
push
mov
xchg
ret
nop
add
les
add
loope
push
mov
xchg
ret
jbe
mov
mov
repnz
nop
cld
jae
adc
mov
std
clc
repnz
nop
cld
jae
pop
mov
cli
loopne
mov
clc
repnz
nop
cld
jae
loope
cmpxchg
add
mov
cmp
repnz
nop
cld
jae
popa
popa
test
inc
mov
repnz
nop
cld
jae
add
mov
push
mov
push
mov
xchg
ret
dec
mov
lahf
fdivrp
push
push
mov
xchg
ret
pop
iret
inc
test
add
or
in
xor
push
in
add
cmp
mov
mov
clc
repnz
nop
cld
jae
jo
add
clc
mov
and
add
clc
repnz
nop
cld
jae
lahf
repnz
add
clc
inc
je
clc
repnz
nop
cld
jae
add
test
rcr
gs
clc
repnz
nop
cld
jae
nop
add
lcall
pop
and
push
mov
xchg
ret
add
test
inc
in
inc
push
mov
xchg
ret
test
mov
loope
and
dec
imul
cld
jae
add
add
push
mov
leave
nop
jmp
add
psraw
lea
nop
cld
jae
add
push
dec
add
jmp
lods
add
add
add
add
fwait
clc
repnz
nop
cld
jae
add
fiadds
add
add
push
mov
xchg
ret
add
test
add
lods
push
push
push
mov
xchg
ret
in
test
iret
mov
push
xchg
nop
cld
jae
add
mov
outsl
jne
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
mov
dec
cmp
repnz
nop
cld
jae
mov
in
mov
nop
push
mov
leave
nop
jmp
loope
add
and
nop
push
mov
leave
nop
jmp
sbb
out
add
jno
dec
cmp
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
iret
sbb
pop
add
pusha
add
movb
mov
leave
nop
jmp
sub
add
fiadds
push
test
push
inc
add
dec
add
add
test
addb
lods
push
mov
xchg
ret
add
push
add
loope
add
gs
clc
repnz
nop
cld
jae
dec
add
push
add
add
rolb
add
clc
repnz
nop
cld
jae
add
add
add
adc
stos
test
xchg
ret
add
pusha
mov
mov
add
lcallw
clc
repnz
nop
cld
jae
add
add
add
add
nop
push
mov
leave
nop
jmp
mov
add
les
and
xchg
inc
add
add
add
dec
push
or
sti
add
add
nop
push
mov
leave
nop
jmp
xchg
les
fcom
dec
enter
pusha
or
add
pusha
pop
add
shlb
add
lret
clc
repnz
nop
cld
jae
add
pushl
nop
inc
add
mov
mov
mov
add
adc
nop
push
mov
leave
nop
jmp
add
push
clc
repnz
nop
cld
jae
add
add
in
jecxz
push
mov
xchg
ret
add
and
fiadds
dec
out
jns
cmp
nop
nop
cld
jae
repnz
add
and
lea
add
nop
jmp
fiadds
mov
cmp
nop
jmp
add
iret
mov
psubsw
fdivrp
jmp
fiadds
add
mov
jle
jne
nop
push
mov
leave
nop
jmp
add
add
pusha
subb
cmp
mov
push
mov
xchg
ret
dec
pop
lods
add
add
addb
xor
xor
clc
repnz
nop
cld
jae
popf
mov
and
repnz
nop
cld
jae
mov
add
add
mov
cmpsb
pusha
pusha
lahf
mov
clc
repnz
nop
cld
jae
popa
push
insb
mov
les
nop
push
mov
leave
nop
jmp
fdivrp
add
add
add
push
mov
xchg
ret
lcall
add
add
add
test
aaa
jg
add
push
testl
test
dec
test
pusha
add
mov
xorb
push
sbb
mov
aas
sub
cmpb
shl
mov
mov
or
outsl
lret
push
loop
mov
mov
out
xchg
push
loopne,pn
jbe
out
or
pusha
jp
mov
cmp
add
push
fcompl
aas
test
and
xlat
test
loopne
jg
das
pushf
js
or
inc
xchg
jle
hlt
ljmp
loopne
jge
movb
sbb
dec
aaa
mov
clc
dec
cmp
add
out
jns
loope
push
add
add
cltd
nop
outsb
jno
dec
mov
push
ds
aam
ret
lcall
pusha
rcrb
adc
xor
inc
pop
dec
and
andb
leave
cmc
sub
loopne
repnz
out
pop
aaa
insl
sub
cmpsb
pusha
and
jg
mov
cmc
push
pusha
xorb
das
adc
pop
shll
sti
adc
or
shlb
out
cli
or
sub
rorb
jns
imul
rcrl
in
roll
push
adc
xsave
sahf
mov
shlb
inc
cwtl
repnz
mov
dec
add
xchg
sub
scas
mov
mov
cmp
sahf
mov
rcrb
push
lods
adc
pusha
add
movsb
addb
or
inc
adc
mov
xor
fsub
push
mov
andb
stos
enter
pop
xchg
shlb
sub
mov
addl
pusha
cli
xor
bound
mov
orb
lds
push
mov
add
jno
loopne
sub
loopne
fcomip
cld
push
fsubrs
and
dec
mov
sarb
stos
and
push
addb
dec
jecxz
addr16
aam
and
jns
and
inc
sub
mov
and
mov
push
hlt
pusha
es
xchg
xchg
in
inc
add
rorl
ret
and
add
xchg
jmp
ret
out
movsl
call
adc
jne
jle
jecxz
push
aaa
mov
sbb
xor
rclb
leave
addb
lea
sbb
ja
fists
add
shlb
adc
cmp
mov
adc
jne
adc
adc
rcl
sbb
pop
jae
fldl
add
pusha
add
pusha
xchg
jns
lods
pop
sbb
pusha
add
fisubs
sub
dec
mov
and
loopne
ja
sti
push
sub
rolb
je
cmp
orl
inc
push
das
xchg
mov
addb
add
add
dec
xchg
dec
in
fistps
or
fiaddl
inc
subb
pusha
mov
rcr
inc
add
cwtl
pop
pop
call
cltd
push
mov
mov
mov
cmp
mov
pop
pop
pop
pop
mov
sbb
add
mov
es
add
sbb
sbb
jg
dec
and
rclb
cltd
inc
sub
pusha
mov
pop
arpl
add
fs
pop
cmp
shll
cmpsb
mov
cli
filds
or
adcb
mov
hlt
addr16
bound
pop
adc
rolb
addb
loopne
sub
loopne
loopne
and
shrb
fs
into
lret
dec
jnp
loopne
cmp
repnz
loopne
jb
mov
loopne
mov
outsl
fnstcw
adc
inc
adcb
pusha
iret
int3
das
mov
sarb
outsl
and
pop
fstpt
dec
push
add
rolb
pop
idiv
jnp
scas
loopne
mov
mov
shrb
xchg
sbb
dec
jg
test
pusha
out
mov
cmp
cwtl
dec
sub
pushf
push
je
add
pop
sahf
xchg
aam
loopne
ljmp
mov
mov
adc
sub
shlb
flds
lds
and
add
xchg
mov
xor
and
mov
rcl
andb
fwait
adc
cmp
xchg
mov
shlb
lds
xchg
addr16
xor
sub
psrlq
lret
std
aad
popa
cmpl
outsl
push
pop
jp
call
enter
enter
and
mov
cli
inc
inc
sub
and
pusha
movsl
cmpsb
and
inc
inc
loopne
test
cmp
add
ljmp
adc
push
fistpll
and
push
sahf
sub
pusha
dec
sub
shlb
jle
mov
leave
mov
movsb
mov
add
dec
std
fs
jne
sub
rcl
inc
jmp
adc
lods
mov
add
push
cltd
loopne
loope
pusha
loopne
mov
inc
dec
push
mov
mov
clc
xor
cmp
mov
pusha
inc
in
out
aam
add
test
mov
fs
mov
pushf
push
mov
inc
jecxz
mov
cwtl
in
lods
xor
jge
and
insl
mov
rolb
movsb
rolb
rolb
inc
add
cltd
inc
ljmp
aad
adc
push
dec
jg
testb
aam
inc
mov
out
scas
add
call
loopne
idiv
cmp
jecxz
xchg
stos
fists
mov
out
lea
add
pop
stos
loopne
mov
adc
pop
push
pushw
add
mov
ss
cmp
je
or
scas
movsb
shlb
push
xor
xchg
rcrl
and
and
ja
mov
loopne
jae
xor
or
fs
dec
xchg
jne
dec
clc
filds
scas
add
mov
mov
cmp
jb
inc
int
bound
or
jnp
jnp
cltd
pop
subb
negl
xchg
or
jmp
jbe
push
push
add
cmc
jo
test
mov
fsubrs
pop
xlat
sub
pop
xchg
repnz
std
pushf
pop
sub
repz
rol
mov
leave
rcrb
std
enter
and
out
loope
mov
and
pop
or
mov
add
andb
cs
loopne
mov
jmp
mov
xor
andb
mull
psraw
lods
inc
shlb
jo
call
jo
ja
inc
jb
pusha
add
cmp
mov
in
shlb
cmp
jbe
dec
divb
lock
mov
mov
repnz
add
out
add
inc
sbb
andb
mov
pusha
pop
ljmp
jae
xor
jecxz
dec
sub
xchg
jmp
ss
mov
dec
insb
jmp
mov
vorps
jnp
sbb
pop
mov
adc
sub
xor
add
aaa
xlat
cmpsb
addb
adc
lret
in
push
out
ja
jle
add
and
add
aas
dec
adc
push
jno
xor
pop
adc
mov
sub
and
orb
pusha
sub
sbb
lret
add
sub
nop
test
and
add
or
shl
xchg
sub
mov
inc
shrl
mov
mov
and
cli
mov
test
cmpb
inc
les
ds
sbbl
pusha
inc
mov
loopne
jp
les
xchg
jg
pop
aad
jp
and
cmpsl
nop
or
mov
pusha
in
add
stos
loopne
cmpsl
pop
xchg
mov
shl
mov
mov
inc
xchg
les
xchg
sbb
rolb
pop
jg
addr16
pop
loop
push
ja
pushf
fld
je
addb
mov
repz
xor
and
mov
shrl
cmc
xor
int3
lret
cmp
mov
loopne
sub
xorb
sbb
jnp
arpl
loopne
fildll
pushf
adc
rolb
pop
test
sbb
pushf
push
cmp
inc
mov
fisttps
addb
iret
arpl
mov
ret
pop
out
rorl
aaa
lods
push
jne
insl
mov
adcb
fs
lret
inc
out
les
enter
mov
dec
call
int3
mov
loopne
fsubrp
stos
jl
or
ror
in
pop
hlt
int
imul
mov
inc
mov
xor
or
loopne
ds
jnp
and
push
in
inc
add
jb
aam
sahf
popa
pop
adc
fwait
mov
mov
mov
mov
movsl
inc
in
les
or
and
stc
mov
and
xchg
pop
jg
xchg
sub
shlb
ljmp
sub
loopne
rcll
arpl
inc
ds
inc
mov
std
lock
add
or
add
js
pusha
add
stc
mov
addb
pop
sbb
pop
inc
sahf
out
cmpsb
add
test
ss
sbb
imul
push
pop
nop
and
push
aaa
dec
add
and
test
and
icebp
pop
xchg
mov
mov
add
in
cmp
cld
ljmp
shlb
xchg
jnp
mov
addb
lret
aaa
stc
leave
push
xor
or
loopne
hlt
rcl
push
inc
out
mov
cmc
pop
in
push
addl
mov
mov
and
or
inc
orl
pop
fs
sar
and
pusha
ss
and
and
dec
push
aas
mov
sub
pusha
xchg
sahf
inc
imul
cmp
adc
cltd
xchg
pop
shl
add
inc
mov
roll
pop
hlt
leave
jecxz
adc
push
adc
cmp
inc
aaa
mov
popa
or
shl
movsl
jmp
sbb
jl
xchg
push
add
xchg
lods
andb
and
or
push
fidivrl
sub
add
pusha
add
add
data16
and
xor
jg
add
push
out
loop
loopne
adc
push
push
jns
loopne
xchg
sarb
movl
push
mov
push
sub
movsb
pusha
shl
inc
orb
fcoms
inc
imul
or
jne
popf
loop
lods
shlb
cmp
xchg
mov
repnz
push
or
inc
inc
iret
push
mov
xlat
insl
nop
mov
orb
add
cmp
xor
iret
scas
xchg
sarb
cmp
inc
add
mov
test
mov
mov
dec
and
daa
lcall
mov
cmp
mov
sub
shlb
aaa
nop
mov
loopne
dec
fadds
in
xchg
jae
dec
push
or
loopne
aas
sub
outsl
mov
and
and
mov
ljmp
in
rcrb
outsl
push
lock
lods
inc
pusha
and
and
and
test
sbbb
push
sub
add
jno
int3
push
adc
ds
fdivrp
mov
mov
pusha
and
nop
je
out
pop
dec
popf
stc
mov
push
lods
loopne
mov
fwait
ret
push
movsl
fcmovnb
jne
push
inc
and
mov
paddb
mov
inc
push
fldt
add
inc
testl
outsl
loope
rolb
mov
inc
jo
push
pushf
push
in
ret
and
loopne
lods
and
xor
inc
jne
add
loopne
das
xlat
push
xor
xchg
xchg
inc
neg
add
loopne
pusha
cmpb
jne
inc
mov
sub
scas
loopne
loop
andb
pusha
dec
add
xor
mov
adc
jle
add
adc
pusha
rclb
mov
or
mov
push
stos
rolb
js
ret
ds
aaa
add
shrb
cmp
sub
mov
pop
adc
mov
mov
cmp
hlt
mov
and
push
adc
loopne
and
test
add
out
xchg
sbb
rclb
call
push
les
pusha
subb
gs
mov
data16
and
jge
stos
loopne
inc
xchg
clc
mov
inc
and
lods
rol
ja
jo
or
sbbb
dec
cmpsb
add
imul
xchg
jmp
jge
add
pop
push
and
addr16
loopne
pop
push
mov
pusha
inc
jp
loope
adc
dec
pop
test
loopne
push
jae
mov
loopne
and
push
and
mov
add
cmpb
add
xchg
aaa
and
add
mov
cltd
push
sbb
outsb
jo
pusha
mov
or
mov
or
shlb
test
stos
or
and
pop
mov
pop
jp
add
dec
sbb
pusha
int3
xor
dec
daa
sbb
push
out
mov
jg
sub
cwtl
flds
lret
mov
adcl
loopne
jle
cmp
into
mov
cwtl
adc
mov
setg
mov
cmp
sahf
ds
sub
data16
xchg
mov
daa
cli
aaa
mov
adc
mov
mov
mov
pop
clc
shlb
jnp
icebp
push
mov
arpl
lock
rolb
xor
sbb
sub
ret
mov
mov
int3
cmp
pop
push
outsb
pop
mov
cmp
cltd
rorl
daa
movsb
mov
jns
arpl
inc
pop
add
sbbb
jnp
addb
hlt
in
fsubrl
pusha
shl
add
arpl
mov
rol
sbb
mov
pusha
sbbb
xchg
xor
inc
pusha
loop
add
andb
push
cs
inc
pusha
push
lea
and
mov
mov
loopne
scas
mov
or
and
jno
mov
sub
fcmovu
loopne
loopne
fisubl
stos
mov
xor
sub
xchg
das
pop
outsl
sub
add
xlat
jmp
std
fcoml
enter
andb
add
outsl
rcl
stos
inc
xorb
dec
andb
stos
and
arpl
xor
scas
imul
xor
rolb
pop
in
and
mov
push
and
cmpb
xor
push
gs
xchg
push
loope
inc
xor
ds
cltd
lds
and
xchg
sahf
lahf
xchg
push
cmpsl
in
or
cld
fnstsw
xor
dec
xorl
dec
sub
pusha
movsl
std
mov
push
cmp
stos
clc
push
pop
dec
mov
add
stos
jecxz
sbb
popf
pop
push
je
inc
subb
mov
inc
and
cltd
mov
mov
and
pusha
adc
and
faddp
jns
js
andb
push
adc
rcrb
push
and
jne
std
insb
in
pop
ljmp
loopne
fs
mov
xchg
and
or
pop
stc
pop
aas
loopne
jo
cld
xor
xchg
pop
adc
adc
mov
inc
int3
jg
mov
xchg
adc
jno
mov
mov
xor
out
mov
jae
xchg
inc
or
mov
movsb
and
aam
ret
push
test
nop
mov
shl
cld
addb
es
xchg
gs
sbb
add
ds
mov
leave
xchg
and
inc
mov
push
loopne
imul
lea
mov
addb
inc
mov
icebp
in
in
sbb
or
popf
mov
jg
push
lret
shll
js
inc
xchg
jbe
push
clc
mov
shl
in
push
insl
sbb
out
sbb
push
std
mov
shlb
into
mull
mov
bound
in
cmp
mov
sbb
dec
push
insl
dec
push
aad
cmp
addb
mov
push
faddp
lret
je
and
dec
sti
mov
xor
and
fwait
adcl
mov
sub
sub
or
outsb
jle
shl
rep
pop
lea
and
fiadds
loopne
jl
jae
std
add
imul
inc
pop
adc
mov
mov
into
pop
scas
xchg
dec
hlt
push
jo
or
sbbb
cmpsl
cmp
popa
loopne
shlb
jo
mov
mov
push
mov
rolb
push
jp
clc
xor
call
adc
push
mov
inc
loopne
out
lcall
cmpsb
and
xor
lcall
and
mov
pop
mov
adc
mov
mov
repz
adc
push
xchg
push
adc
sbb
repz
loopne
stc
push
inc
outsl
mov
cmpsl
push
push
mov
jnp
outsl
adc
dec
hlt
lcall
and
call
or
loopne
repz
push
rcrb
mov
inc
push
daa
dec
subl
fs
notl
call
cmp
mov
shl
in
test
add
pop
jg
push
rolb
flds
mov
jecxz
inc
push
mov
cmp
cmp
mov
xchg
and
insb
cmp
add
xor
cmpl
loopne
fstpt
and
and
add
jmp
dec
jge
ja
jmp
leave
lcall
sub
push
add
sarb
mov
loopne
mov
rolb
sbb
or
xchg
icebp
cmp
inc
subb
pusha
and
fsts
out
into
pushf
dec
jns
sarb
lods
and
rolb
mov
jmp
shl
mov
and
mov
adc
lcall
xchg
mov
inc
mov
cwtl
mov
aam
xlat
dec
insb
xchg
cmp
out
mov
push
and
and
loopne
inc
jns
dec
rcll
loope
ret
jmp
loopne
adc
pusha
fs
mov
insl
repnz
test
dec
jb
sbb
ds
xchg
jle
test
xor
dec
or
xorb
mov
mov
addb
jge
and
and
fnstcw
jge
pusha
add
jecxz
xchg
lods
and
sub
loopne
push
mov
mov
mov
inc
pop
add
inc
outsl
mov
and
inc
data16
adc
pop
lods
add
popf
mov
inc
loopne
aaa
in
xor
int3
rclb
pop
xchg
fistpll
mov
lea
movsb
mov
push
or
inc
mov
sbbb
push
mov
mov
call
pop
test
sub
and
pusha
test
add
add
subb
shrb
dec
mov
loop
test
mov
add
mov
inc
mov
add
xorb
dec
pop
add
xchg
mov
mov
pusha
ss
fists
leave
xor
pushf
mov
cmp
addr16
shll
in
in
dec
movsl
push
mov
sub
divl
pushf
scas
data16
xor
mov
jle
addb
out
dec
cmc
and
pusha
shll
and
scas
pusha
mov
pop
mov
mov
mov
pusha
xor
cmc
xchg
addr16
pop
cwtl
andb
inc
add
inc
shl
jno
inc
pop
mov
sbb
adc
loopne
dec
push
loopne
nop
lods
mov
mov
outsl
sbb
mov
sti
test
push
mov
andb
cmp
lds
jo
jbe
pusha
loopne
arpl
push
movsb
and
lea
xchg
stc
aas
xor
rcrb
jecxz
decl
loopne
push
mov
inc
dec
mov
dec
pop
ja
out
js
mov
mov
enter
xchg
ljmp
adc
add
or
jmp
scas
adc
jge
mov
mov
dec
mov
inc
imul
mov
mov
stc
ds
xor
pushf
mov
adc
sbb
pop
push
push
addb
mov
mov
out
ret
ja
push
mov
sbb
loope
leave
stos
or
inc
and
sbb
cmp
mov
inc
pusha
les
add
inc
mov
xorl
pusha
arpl
adc
xchg
pop
mov
dec
fdivrp
push
int3
jp
push
cmc
lods
movsl
scas
and
xor
sub
loopne
xlat
jge
jo
mov
data16
xor
jmp
incb
sbbl
jmp
pusha
shl
pushf
dec
test
shlb
inc
add
loopne
into
cmc
xor
aaa
jecxz
push
xor
sbb
inc
sbb
add
jl
lret
imul
addb
add
xor
mov
in
mov
mov
sub
inc
mov
out
jb
push
clc
popa
pop
cltd
lods
mov
fcmovne
add
mov
inc
shr
icebp
ss
ja
jmp
mov
fists
cmc
js
cmp
sbb
loope
sbb
mov
int3
je
mov
jae
mov
movsb
addb
and
pusha
inc
sahf
mov
cmc
test
jp
repnz
and
fistpll
inc
lock
push
mov
addb
loopne
add
loopne
cmc
cmpsb
pusha
loopne
mov
in
shr
mov
out
xor
rol
sub
loopne
cltd
daa
add
das
xor
incb
and
aad
addb
gs
in
lcall
in
loopne
mov
les
adc
roll
loopne
andb
push
lahf
fcoml
and
das
ja
sub
and
push
inc
add
cmp
cmpsb
inc
and
jg
rclb
enter
fnstcw
out
add
push
mov
and
inc
ret
fisubl
negb
addb
pop
lea
icebp
fwait
pop
lcall
pusha
inc
mov
stc
into
in
loop
pusha
inc
or
mov
push
and
int
clc
jnp
rcrb
inc
loopne
and
sub
insl
dec
and
or
cwtl
mov
stc
imull
xchg
jo
add
int
add
clc
sbb
insl
ljmp
mov
loopne
stos
and
loopne
mov
inc
in
add
loopne
into
repz
sbb
sbb
push
out
xchg
pop
jl
mov
orb
pusha
gs
insl
mov
hlt
cld
and
fwait
das
stos
shlb
scas
mov
or
and
rolb
inc
pop
test
shlb
cltd
rcrl
faddl
notl
int
dec
bound
mov
pusha
ja
mov
and
loopne
and
add
addb
movsb
mov
cmp
scas
into
sbb
leave
or
repz
lahf
mov
inc
outsl
xor
jb
enter
test
loopne
xchg
jno
shll
out
lcall
fs
rolb
push
sbb
inc
adc
pusha
std
push
pop
xchg
xlat
inc
fcompl
jle
xchg
cmp
popa
cmp
and
mov
andb
mov
sarb
xor
jl
fstl
test
inc
fwait
lahf
cmp
or
cld
aas
or
cmpb
pusha
pop
add
test
mov
dec
or
jp
push
arpl
adc
xor
mov
push
mov
pusha
mov
cmpsb
and
pop
xor
stos
pusha
mov
cmp
push
aad
jno
mov
lret
ficoml
inc
shll
daa
in
and
and
arpl
shlb
pop
pusha
jbe
fmull
rolb
pushf
pop
push
add
mov
outsb
sbb
push
shlb
adc
mov
test
and
xchg
pop
lock
push
dec
mov
iret
pop
andb
inc
je
enter
andb
dec
xor
cmpsb
mov
sahf
and
lds
rol
test
fimull
call
jne
mov
sub
pop
xchg
es
outsl
push
out
xor
test
inc
pop
or
addb
pusha
adc
jo
mov
and
sub
lret
push
outsl
iret
cwtl
loopne,pn
mov
xchg
push
scas
loopne
jecxz
push
and
cmpsb
add
hlt
shrl
mov
push
inc
pusha
cltd
mov
cmp
popf
lods
and
adc
loop
add
jge
jle
mov
mov
in
add
lock
insb
test
jb
mov
push
int3
add
aad
dec
inc
mov
adc
sti
addr16
xchg
pop
cltd
mov
pusha
and
pop
insb
xor
inc
fadd
sbb
fbld
scas
shlb
rcrl
lods
or
mov
iret
jg
shlb
sub
jnp
inc
mov
mov
lret
rcr
mov
add
test
mov
add
fs
out
adc
les
lret
pop
pop
mov
scas
addb
mov
insb
add
loopne
addb
out
dec
mov
mov
and
outsb
loop
test
pop
jl
add
inc
push
shl
inc
outsl
dec
push
rclb
cmp
jb
enter
lods
sbb
into
and
push
mov
xor
cmp
xor
cs
add
adc
or
loopne
sarb
add
or
and
sub
xor
sbb
xchg
shrb
sub
and
or
sbbl
loopne
adc
loopne
fcoms
cmpsb
andb
mov
bound
fdivs
loope
data16
shl
fildl
or
scas
shlb
mov
jl
sahf
cld
pop
insl
mov
shlb
out
pusha
loopne
out
fnstsw
rol
in
ds
pop
movntq
out
sub
rol
xchg
out
and
sbb
xchg
cmpsb
rolb
and
pusha
jp
mov
jle
aas
xor
addb
sbb
sbb
and
loopne
rclb
add
sbb
lcall
mov
insl
jmp
bound
inc
inc
arpl
js
push
sarl
setb
shl
leave
dec
sub
loopne
xchg
subl
sbb
outsl
xor
das
add
nop
jp
and
rolb
imul
xchg
mov
add
fidivs
shr
dec
lcall
ljmp
dec
daa
cmp
sub
notb
xchg
addr16
xor
lea
dec
inc
sub
xchg
add
inc
das
cmp
dec
shl
mov
shlb
incl
into
bound
pusha
pusha
int
push
xchg
sub
pusha
jo
clc
cli
or
pusha
add
pop
xlat
adc
mov
loopne
add
push
icebp
ret
cltd
mov
and
mov
adc
add
dec
orl
xor
xchg
push
mov
addb
mov
lahf
pop
lcall
fs
adc
mov
mov
and
push
mov
or
fwait
jnp
andb
test
addb
cltd
mov
mov
dec
dec
xchg
push
pop
mov
pusha
loope
pop
and
jmp
iret
push
push
inc
pusha
add
and
loopne
jle
fsubrs
lcall
or
rclb
mulb
push
test
loopne
out
inc
mov
and
out
or
fisubs
ror
jecxz
jb
and
push
mov
pop
cmc
call
mov
xchg
cmp
sbb
js
or
pop
inc
hlt
add
ja
shlb
dec
mov
in
mov
gs
shl
je
stos
and
test
das
lods
add
jecxz
f2xm1
dec
mov
mull
sub
sub
nop
andl
pop
mov
leave
adc
and
or
and
sub
inc
pop
add
mov
nop
sarb
aas
push
add
movsl
cld
insb
in
subl
add
lock
loopne
je
icebp
aaa
ds
sbb
lret
mov
ror
push
fwait
jmp
mov
and
mov
inc
in
pop
bts
push
rolb
jae
lock
dec
jmp
and
loopne,pn
jae
shrl
int
or
mov
out
popf
sub
jp
out
and
and
dec
dec
push
and
cmp
xorl
cmpb
imul
mulb
mov
out
into
xorl
jmp
mov
pop
test
sarb
sbb
adc
pusha
inc
cmp
lds
or
dec
inc
dec
and
mov
std
jle
and
xor
out
xchg
mov
shll
es
insb
int
cmp
xor
loopne
inc
popl
in
or
addb
xorb
dec
sahf
push
or
cmc
mov
xchg
rolb
inc
inc
mov
cli
adc
adc
jbe
mov
add
addb
movsl
add
mov
ja
push
lahf
decl
xchg
and
mov
sbbb
dec
loope
outsl
cld
inc
in
push
daa
inc
or
cld
data16
or
add
pusha
pusha
fdivrs
in
add
jae
xor
repz
or
fs
outsl
lret
orl
push
lods
jb
aaa
repz
jecxz
and
or
nop
clc
fwait
or
stos
rol
imul
push
inc
insl
jl
pop
loope
cltd
pushw
rcll
dec
fdivrs
cmpsb
mov
and
and
loopne
aas
clc
and
loopne
andl
and
stos
inc
sbbb
pop
test
mov
das
push
xor
orb
pop
push
ret
mov
jno
cmp
adc
std
sahf
lods
mov
mov
pop
lods
xchg
adc
ror
mov
xor
addb
mov
inc
inc
pusha
adc
daa
cli
cltd
adc
in
lock
adc
loopne
and
add
jmp
bound
mov
outsl
pop
mov
push
cmpsb
loopne
mov
iret
xor
mov
std
or
inc
addr16
push
pushf
adc
scas
add
cmp
jnp
dec
dec
jle
xor
loopne
icebp
mov
push
lret
ss
dec
add
cmc
jns
lcall
pop
mov
in
mov
idivb
loopne
mov
jbe
inc
pusha
pop
inc
or
xchg
sti
jg
lcall
ds
pusha
cs
scas
pushl
aas
inc
lret
and
push
icebp
mov
jb
pusha
dec
addr16
pop
and
mov
enter
pop
inc
or
mov
loopne
xchg
dec
sub
adc
es
ss
pop
mov
dec
sbb
mov
andb
pusha
sbb
pusha
and
add
out
or
mov
sti
mov
jno
popf
xchg
fnstsw
add
mov
jb
jbe
ficoml
jbe
cmp
in
outsb
and
add
or
sbbb
jmp
mov
mov
lea
push
mov
xor
inc
xchg
int3
popa
mov
out
lcall
sub
xchg
and
pop
testb
and
mov
mov
popf
arpl
pop
push
mov
fwait
adc
in
or
add
daa
clc
jae
cmovp
out
and
adc
into
roll
sub
inc
cmp
inc
test
cmp
repz
shlb
jmp
add
loopne
push
and
xor
inc
arpl
pusha
xorb
dec
dec
cmp
dec
ficoms
imul
dec
mov
sbb
addr16
rcll
std
inc
add
imul
je
into
lret
cld
and
and
fld
andb
add
dec
adc
cmc
stc
lcall
mov
in
sbb
shlb
mulb
dec
popf
cmp
test
cmp
mov
testb
outsl
rcrb
mov
xor
cmc
data16
shl
xchg
mov
addb
pop
mov
jle
and
ror
and
mov
and
push
mov
and
mov
sub
loopne
fistpll
cmpsb
and
lcall
pop
and
xlat
ljmp
cmpsb
loopne
lret
loopne
and
ret
xchg
pusha
and
pop
pop
mov
jne
mov
and
pop
push
cltd
mov
popa
loope
inc
push
mov
xorb
cmc
dec
pop
sub
adc
mov
jnp
and
adc
insb
dec
jo
mov
inc
mov
and
loopne
scas
mov
mov
mov
and
adc
pop
lcall
fstl
sahf
xchg
inc
lahf
cmp
gs
movsl
add
in
pop
push
dec
das
adc
rolb
sahf
cmc
lret
and
call
cmp
or
pushf
mov
mov
mov
push
into
xchg
lea
push
add
loopne
adc
add
xor
lea
sub
loop
mov
loopne
mov
mov
loopne
loop
xchg
push
popf
mov
fdivs
pop
inc
xor
add
push
movsb
shl
daa
lds
mov
movsl
outsl
clc
mov
pop
mov
and
cmpsl
jmp
lcall
rol
dec
enter
inc
mov
jl
sti
adc
cmp
push
addb
lret
addl
xlat
mov
cmp
push
jle
lods
or
xorb
shlb
sub
loopne
leave
nop
pusha
dec
les
je
sub
or
mov
inc
sub
aaa
fdivrs
dec
xchg
adc
test
pusha
movl
test
xor
stc
pop
repnz
das
imul
sub
xchg
pop
pop
or
stc
std
imul
insb
int
or
lock
andb
or
inc
mov
and
sbb
jo
loopne
ret
rolb
inc
sar
mov
rolb
mov
jmp
dec
stos
jl
inc
out
cmp
outsb
push
orl
mov
add
pusha
or
loopne
inc
adcb
stc
push
addb
rolb
sub
pusha
push
and
popa
andb
fmuls
call
dec
loope
push
add
mov
shlb
shlb
add
xor
sub
js
decb
mov
aam
add
ret
lods
mov
mov
inc
shrb
pop
fucomip
xchg
in
jnp
jne
push
mov
push
loopne
rorb
add
push
jg
out
test
mov
icebp
in
loopne
fmuls
jb
pusha
pusha
std
cwtl
sbb
call
dec
andb
outsb
mov
pusha
mov
addb
imul
mov
pop
jmp
test
jl
ret
sbb
cmpsl
shrl
outsb
popa
dec
jo
into
stos
jns
adc
sbb
and
leave
in
loopne
gs
and
loopne
js
push
pusha
mov
dec
aad
lcall
pusha
pusha
out
test
sbbb
mov
pop
inc
adc
insb
push
movsb
addb
xchg
jb
inc
shlb
pop
dec
ficompl
push
in
push
shlb
inc
stc
mov
test
testb
aad
rorl
cs
add
pop
rcr
jbe
add
mov
loopne
stos
dec
mov
mov
repz
or
dec
fistl
lds
or
add
pusha
add
mov
js,pt
lea
and
add
xor
pusha
inc
mov
pusha
loopne
into
jge
mov
ficoml
xchg
xchg
mov
in
or
mov
int
das
jns
inc
mov
cli
inc
shll
inc
shll
mov
jnp
mov
rcrb
addb
shl
in
jge
pusha
add
or
mov
dec
mov
pop
pusha
mov
mov
dec
push
in
and
and
and
int
ds
sbb
loopne
mov
test
adc
loopne
cmpsb
mov
or
mov
lahf
in
bound
andb
jmp
mov
in
and
addb
push
cmp
daa
rclb
mov
and
mov
cltd
mov
out
int3
adc
enter
imul
mov
add
aam
into
pop
daa
in
jno
add
addl
jbe
pusha
add
pop
daa
mov
loopne
xchg
pop
push
mov
inc
and
dec
xchg
xchg
dec
ds
jo
pop
or
dec
clc
mov
pushf
movsl
xchg
jo
outsb
imul
mov
pop
jbe
mov
mov
ficompl
mov
cwtl
insl
mov
pop
sub
inc
mov
mov
cmpb
decb
push
call
mov
shrl
add
adc
xorb
or
dec
push
and
movsl
imull
pop
shlb
mov
stos
xor
pusha
and
xor
and
jae
andb
sbb
loopne
mov
nop
leave
ja
jp
test
loopne
test
loopne
and
cmp
mov
ljmp
mov
pusha
add
popaw
cmp
ret
lods
fstps
xor
xchg
je
mov
push
inc
xorb
sbb
push
inc
sti
jne
sub
inc
xchg
push
xchg
mov
loopne
daa
sub
pusha
rolb
sbb
pop
inc
jb
dec
sbb
and
loopne
int
add
pusha
ret
and
into
add
and
aam
fsubl
mov
imul
or
rcr
das
addr16
sbb
gs
jbe
std
and
or
loopne
xor
sub
jb
sahf
div
incl
pusha
loopne
xor
mov
fwait
adc
lret
sbb
out
and
add
mov
cli
mov
jbe
sub
test
cmp
sub
push
nop
test
fdivs
or
sbb
dec
jge
pop
es
inc
jp
andb
and
rolb
and
ds
jno
mov
stc
into
push
hlt
inc
int3
ror
insb
cmp
xchg
lock
dec
sub
and
out
xor
and
gs
xchg
jne
xor
jae
jnp
mov
aas
sub
pusha
and
adc
outsl
mov
add
aad
stc
push
je
lcall
add
inc
sub
add
rorl
outsl
mov
inc
subb
fcompl
adc
jmp
ds
andb
cmp
movsl
fld
mov
hlt
add
in
call
push
ret
ss
mov
enter
test
pusha
adcb
mov
fwait
dec
or
mov
mov
mov
hlt
testl
fdivrs
inc
loopne
daa
pop
insb
cwtl
adc
js
push
xchg
repnz
adc
inc
cwtl
mov
aaa
lcall
sahf
movsl
ljmp
les
jo
rorb
xorb
inc
and
mov
adc
xchg
jp
inc
subb
rolb
sbb
inc
pop
sbb
mov
inc
andb
call
add
sbb
push
int
out
mov
pop
pop
push
hlt
aaa
push
andb
jge
test
leave
in
cmpsl
loopne
or
mov
pop
dec
push
pop
mov
mov
loopne
add
les
add
mov
mov
out
test
add
xor
add
mov
lcall
pusha
lds
loopne
cmp
and
mov
sub
shlb
loopne
mov
mov
and
stc
and
or
pusha
cmpb
loopne
pop
fdivr
mov
xchg
inc
setnp
pusha
sbbb
pop
xchg
inc
dec
inc
xor
inc
sbb
fisttps
push
sti
outsb
test
fs
stos
shlb
loopne
fdivs
cmp
inc
mov
shlb
pusha
scas
pusha
add
and
and
adc
jecxz
aas
les
sbb
mov
test
decb
ljmp
loopne
aas
xchg
xor
sub
and
imul
push
inc
inc
dec
dec
dec
mov
add
andb
mov
pop
or
adcb
pusha
xor
sbb
sub
and
sti
xchg
pop
sti
iret
add
insl
aaa
push
ret
add
dec
fsubl
mov
cmovns
jae
in
or
mov
jb
lds
or
iret
sahf
or
xchg
push
ss
xor
inc
sarb
andb
mov
fldt
arpl
pop
adc
andb
and
adc
clc
loop
icebp
outsl
mov
pusha
shr
shrb
loopne
fistl
mov
sahf
ss
das
mov
loopne
loopne
or
hlt
mov
jge
int
das
pop
lock
xchg
dec
mov
dec
das
fs
dec
mov
sbb
inc
push
and
negl
mov
sbb
call
jecxz
outsb
xchg
and
cmpl
rcrb
push
andb
jge
rorb
out
jne
adc
cwtl
adc
xchg
pop
sub
daa
movsb
inc
loopne
mov
rclb
mov
xchg
jae
js
imul
add
lods
and
hlt
inc
test
rcr
jns
repz
adc
and
movsb
pusha
loopne
mov
mov
lahf
adc
aas
fsts
addr16
hlt
jle
and
lea
lret
loopne
bound
dec
xlat
cli
int
lds
mov
mov
aaa
js
and
jb
aas
jo
cmc
xor
jns
and
imul
mov
dec
fmuls
frstor
addb
loopne
fnsave
lret
mov
and
hlt
pop
mul
and
loopne
andb
mov
fildll
addb
add
sbb
push
and
sub
add
push
or
mov
inc
pusha
sub
sub
and
nop
out
adc
enter
mov
sub
xchg
sahf
int
dec
in
imul
xchg
sahf
lahf
mov
inc
jae
mov
rorl
inc
mov
in
mov
push
lods
add
cmpsb
add
cmp
sbbb
rol
loopne
ja
test
and
jle
pop
psllw
lcall
imul
sub
mov
shrb
mov
nop
mov
imul
data16
ds
xchg
mov
test
inc
sub
pop
mov
adc
aas
inc
mov
xlat
mov
xchg
rol
sub
add
jecxz
xchg
daa
push
adc
call
add
mov
mov
push
rol
add
mov
inc
and
and
je
mov
loopne
test
pop
or
call
roll
lcall
sbb
xor
fucomip
adc
and
inc
inc
push
pop
insb
dec
pop
call
lea
xchg
xchg
lds
and
and
adc
inc
shlb
outsl
mov
rol
loopne
out
inc
mov
lock
sbb
iret
stos
pusha
pusha
ja
ret
cld
mov
incl
and
addb
or
jae
js
sub
cli
cmp
inc
add
add
lock
mov
add
lds
dec
out
pop
sub
loopne
stos
shlb
stc
mov
shlb
loopne
mov
pop
nop
xchg
dec
cwtl
shlb
mov
add
xchg
fdivr
and
mov
movsb
inc
and
ljmp
dec
inc
iret
ficoml
cmp
outsb
jmp
inc
and
sbb
mov
cmc
clc
outsl
push
jecxz
sbbl
negl
cltd
mov
pop
push
pop
test
inc
rcr
std
in
inc
loopne
jns
enter
jmp
cmpsb
loopne
ss
pusha
loopne
call
divl
andb
aad
add
add
jecxz
push
mov
adc
sub
push
add
ja
jb
xor
pusha
pusha
aam
inc
mov
dec
jmp
jle
fisubl
push
cwtl
add
xor
pusha
add
pusha
test
stc
popa
mov
inc
cwtl
les
aaa
inc
lods
or
mov
mov
push
xchg
js
and
cmp
mov
aaa
loopne,pn
movsb
mov
cmpsb
and
xchg
inc
inc
jns
arpl
mov
loopne
jae
mov
enter
rcll
andb
jmp
ljmp
pop
out
arpl
and
loopne
pop
rolb
loop
mov
jb
jl
inc
cmpsl
xor
sbb
test
rclb
mov
popf
in
mov
fwait
rol
pop
xor
dec
loop
hlt
pop
roll
loopne
mov
sbb
cmp
je
lds
add
mov
xchg
in
push
in
jae
jno
add
inc
test
xchg
push
mov
push
and
loopne
mov
pop
rol
outsl
out
xchg
int3
sbbl
stos
and
fstpt
fidivrs
cmc
pop
mov
add
dec
pop
mov
out
movsb
pusha
mov
sub
addr16
adc
pop
lret
dec
cmpsb
loopne
jp
push
add
mov
test
inc
push
sub
add
dec
pop
test
repz
cmp
in
mov
mov
mov
cld
loopne
dec
push
jle
pusha
loopne
lock
add
push
and
jnp
int3
adc
iret
xor
dec
scas
mov
ja
jle
pop
rorb
aad
push
inc
mov
mov
add
cmp
mov
and
movsb
pusha
mov
lds
cmp
xor
addb
loopne
pusha
mov
sbbb
shl
pusha
mov
pusha
test
or
std
pop
sti
push
jecxz
std
rorb
in
fs
pop
movb
repnz
cmp
sahf
loopne
aam
push
or
pusha
outsb
sub
mov
sarb
add
andb
rolb
leave
insl
insb
gs
jl
jns
inc
mov
jns
mov
sub
andb
mov
mov
inc
push
push
mov
fcomps
das
mov
lods
jo
mov
decl
add
mov
inc
fistpl
fcmovbe
jnp
dec
jl
sub
les
sub
sub
and
shlb
loopne
sbb
and
pusha
mov
std
push
jp
int
jno
fdivrl
fbstp
sub
mov
addl
push
in
enter
loopne
inc
aas
mov
xchg
mov
mov
cmp
push
shlb
push
out
pop
jbe
dec
scas
pusha
add
and
add
test
lea
and
and
and
push
mov
jnp
mov
sub
fistpll
cmpsl
push
test
and
pusha
scas
loopne
fadds
inc
inc
flds
add
add
sbbb
stos
pusha
inc
mov
and
addb
addr16
aas
inc
roll
nop
lret
pusha
loopne
sub
loopne
je
pop
scas
pop
pop
ret
sub
lret
enter
iret
dec
mov
or
mov
pusha
shlb
xor
daa
xlat
imul
dec
add
loopne
and
loopne
lods
loopne
lea
hlt
into
sub
mov
pop
pop
pmaddwd
pop
add
stos
xchg
fstps
inc
dec
data16
adc
dec
sbb
mov
inc
xor
mov
and
mov
inc
aad
cmpsb
add
clc
lds
push
and
das
lods
into
addr16
bound
xchg
xor
pop
sbb
mov
jecxz
sti
jecxz
icebp
pop
sahf
lds
mov
xchg
mov
insb
xor
fldenv
add
shl
mov
pusha
shlb
fmuls
loopne
mov
sbb
cmp
jl
jnp
push
pop
xor
inc
mov
enter
shlb
inc
scas
cmp
adc
adc
inc
xchg
pusha
mov
adc
call
mov
and
mov
out
rolb
push
jnp
pop
fdivrl
cltd
ja
lods
inc
and
adc
mov
xchg
icebp
sarl
inc
mov
mulb
pusha
jmp
mov
or
pusha
push
mov
and
sarb
pusha
pusha
je
xchg
test
add
lcall
sbb
push
mov
and
sub
cmpsb
mov
cmpsl
testl
mov
cmpsb
andb
mov
repnz
or
loopne
jae
cltd
jbe
in
add
sub
pusha
insl
mov
and
pop
adc
adc
or
js
jmp
cwtl
or
xor
inc
loopne
loop
jg
push
loopne
je
push
and
sub
addb
xchg
mov
mov
push
loop
dec
jno
nop
adc
loopne
mov
or
add
dec
jp
push
pusha
and
rolb
addb
adc
or
xlat
dec
rclb
cmp
lods
ret
mul
sub
inc
loopne
sti
push
inc
icebp
xchg
lods
dec
lret
das
addr16
loopne
pop
popa
cmpsb
and
stc
jbe
in
jecxz
andb
lds
fmuls
shlb
gs
lods
xor
jmp
ds
subl
add
mov
test
jp
fists
icebp
leave
andl
in
xor
add
loopne
loope
ds
inc
and
stc
jns
mov
jo
jno
roll
jnp
dec
std
pop
sbb
jp
dec
fists
and
jmp
loopne
adc
xchg
push
andb
adc
pop
and
shlb
inc
loopne
push
sarl
loopne
leave
test
fistpll
into
cmc
adc
gs
aaa
pusha
xchg
int
repz
mov
movsl
stos
cmp
pop
stos
and
loopne
or
mov
xor
and
subb
mov
cmp
inc
into
cmp
and
loopne
dec
lds
sbb
loopne
mov
sbb
pop
test
andb
loopne
inc
loopne
xchg
mov
addb
data16
or
mov
arpl
out
in
push
addb
lret
insl
jns
or
rorl
aas
and
and
out
nop
push
addb
add
daa
iret
sub
mov
das
and
pop
and
adc
and
jae
jne
les
mov
rolb
jns
stos
andb
out
scas
inc
mov
adc
mov
pop
adc
sbb
pushf
sub
add
or
loopne
insl
jl
jecxz
clc
insl
add
mov
push
xchg
test
mov
xchg
icebp
mov
arpl
lock
loop
mov
inc
pusha
stos
lods
inc
and
jl
xor
cmp
inc
push
sahf
cld
inc
mov
data16
popf
pop
push
int
das
cmp
xchg
test
rcl
push
mov
cld
adc
xchg
shlb
out
aam
cwtl
packsswb
pop
aam
inc
mov
push
adc
movsl
notl
add
addb
lds
loopne
lods
mov
andb
aas
mov
cmp
jb
add
mov
test
je
addb
stos
andb
lret
dec
test
add
stos
andb
add
loopne
xchg
or
addb
mov
or
sbb
dec
cmpsb
inc
xor
jmp
loop
mov
out
pusha
addb
add
inc
inc
andb
stos
push
rolb
push
cmpsb
andb
and
aaa
dec
imul
inc
adc
test
popa
and
out
xor
add
push
push
mov
aad
inc
out
mov
inc
xchg
popf
cmp
dec
mov
loopne
adc
mov
iret
add
xchg
inc
addr16
jecxz
jle
mov
mov
std
icebp
and
shlb
imul
in
inc
mov
mov
dec
cli
push
lods
jbe
xor
mov
inc
xorb
and
or
inc
icebp
and
pop
push
imul
clc
adc
pop
mov
fucomi
dec
shll
andb
mov
add
ja
pop
jns
and
popf
xchg
jb
addr16
mov
push
mov
push
ret
add
sub
sahf
mov
inc
mov
or
push
scas
lret
mov
roll
and
inc
mov
int3
lods
mov
stc
pop
xlat
mov
ss
adc
or
xor
insl
pop
add
add
xor
scas
inc
sub
cmp
jo
andb
addr16
aam
pusha
add
sub
ljmp
mov
fiaddl
scas
loopne
xchg
push
ljmp
mov
add
mov
stos
addb
imul
jge
pop
cli
pop
lea
imul
cmp
lahf
sub
int3
sub
into
or
xchg
aas
in
loopne,pn
and
loopne
bound
mov
mov
dec
mov
call
sarb
cmpsb
add
dec
mov
fcompl
shrb
testl
inc
pop
push
or
mov
shrb
adc
lret
inc
repnz
out
inc
push
repnz
in
popf
jp
jmp
inc
and
shlb
rolb
aas
add
dec
fs
pop
int3
test
loopne
fisubl
jmp
xor
inc
loopne
inc
mov
out
fs
mov
test
loopne
push
pusha
pusha
add
add
jne
push
loop
pusha
jl
cmpsb
and
dec
lcall
xor
and
mov
mulb
add
mov
loop
push
aam
inc
fadds
loopne
cmp
mov
add
pusha
fs
dec
mov
cmp
mov
lds
jno
push
pop
hlt
pop
dec
mov
orb
pusha
shr
inc
outsl
gs
and
mov
mov
cmp
mov
fldcw
jne
inc
cltd
shll
adcl
test
adc
xchg
pop
mov
push
push
xchg
push
lret
pusha
or
loopne
data16
fs
mov
bound
pop
or
sbb
sub
pusha
or
outsl
sub
mov
cmp
xor
add
pusha
data16
cmp
jmp
xor
shl
imul
xorl
sub
mov
js
cwtl
das
or
movsb
and
jne
xor
push
lcall
pusha
iret
sub
rolb
inc
add
fs
sarb
pusha
and
xor
popa
int
adc
hlt
inc
push
adc
es
arpl
test
mov
xchg
inc
dec
test
loopne
mov
fcomps
push
addb
xor
and
push
cld
jge
lods
pusha
add
stos
xor
mov
sbbb
jmp
jbe
jbe
push
insl
imul
dec
leave
je
sbb
adc
sbb
jmp
add
mov
or
mov
ljmp
mov
xor
rcll
inc
out
pusha
and
mov
shlb
mov
dec
pop
out
mov
daa
jle
mov
jnp
in
push
out
jp
add
inc
mov
clc
and
dec
mov
adc
mov
and
shll
mov
inc
shrb
scas
and
push
jmp
repnz
repz
xchg
mov
loopne
xchg
and
andb
stc
mov
dec
stos
xchg
xchg
mov
pop
fs
in
repz
enter
andb
cmc
add
lcall
sar
and
repnz
and
rcll
mov
push
pusha
mov
mov
das
cmp
cmp
aas
cwtl
push
mov
mov
xor
daa
inc
sub
addb
rcrb
sub
daa
in
mov
jmp
int3
repz
add
and
inc
bound
pusha
shlb
jg
mov
ja
fisubrl
inc
aas
scas
dec
icebp
imull
mov
xchg
out
pop
fisttpl
or
sub
or
adc
push
stc
dec
ret
sub
adcb
daa
push
lock
sbb
mov
cmp
lock
loop
sahf
cmp
in
inc
movsb
shl
add
imul
in
dec
pop
jg
pop
lods
and
inc
int3
xchg
dec
fwait
dec
ja
xor
mov
cmp
pop
imul
cmc
jo
out
or
inc
sub
dec
add
sbb
arpl
loope
movsb
inc
inc
aas
xor
idivl
pop
push
das
add
push
add
mov
jmp
shl
jns
adc
pop
sbb
dec
and
mov
adc
jmp
adcl
inc
add
jmp
pusha
and
ja
insb
pop
mov
push
add
mov
mov
add
das
mov
mov
jmp
lock
arpl
inc
and
jae
and
iret
outsl
sbb
push
inc
loopne
mov
pop
fs
je
fcmovnb
cmpsl
mov
cmpb
mov
loop
xlat
xor
inc
dec
insl
data16
loope
jae
xchg
mov
cs
and
xor
xchg
icebp
scas
and
pop
fdivs
add
xor
push
rol
scas
in
xchg
call
test
andb
mov
and
shlb
jno
rolb
sbb
cli
or
ret
jbe
loopne
cmpsb
inc
add
mov
and
loopne
inc
ja
mov
sub
pop
push
mov
and
out
mov
notl
dec
movsb
loopne
mov
jmp
shlb
rol
stos
inc
inc
movlps
pusha
sbbb
lds
pop
sarb
push
jne
sub
pusha
cmp
pusha
or
loopne
dec
arpl
fstps
in
enter
inc
insb
mov
add
mov
add
test
ljmp
loope
inc
mov
add
mov
lock
stos
pusha
pusha
arpl
jle
sub
addb
sbb
push
jge
push
leave
mov
and
ret
adc
int3
out
add
and
mov
cmp
sub
add
jg
sub
in
fcoms
or
andb
pop
fsts
fisubl
mov
jle
mov
xchg
sub
inc
mov
pop
inc
fdivrs
ret
inc
scas
pusha
loopne
pop
mov
std
mov
sbbb
loopne
jl
cli
sub
jmp
inc
dec
repnz
fstp
insl
pop
jb
mov
and
and
inc
jnp
jmp
rol
inc
push
xor
repz
std
sub
and
pusha
addb
cwtl
jmp
stc
ret
sar
lods
and
cwtl
xchg
dec
cwtl
push
test
add
or
mov
cmp
andb
xor
addb
setge
xchg
loopne
lret
xor
lret
inc
mov
dec
push
dec
mov
lods
lret
jmp
inc
inc
jl
pop
loopne
dec
xchg
jp
loopne
test
adc
aad
mov
mov
push
in
lds
mov
pop
xor
or
inc
inc
mov
jmp
mov
mov
sub
mov
aam
inc
or
ret
add
stc
inc
mov
adc
dec
iret
add
mov
xchg
js
loope
int3
outsb
repz
and
and
pop
mov
stc
dec
stc
push
cwtl
dec
js
mov
mov
mov
hlt
mov
mov
pusha
sbb
lock
addr16
sbb
test
and
pusha
fcomp
out
push
adc
jl
pop
add
orb
popf
xchg
lret
mov
sti
adc
iret
enter
rcl
mov
pop
mov
ror
jno
cmp
xchg
pusha
pminsw
into
lret
rolb
push
mov
adc
pop
xor
add
and
xlat
cld
repz
inc
xchg
or
dec
mov
jecxz
insl
inc
cli
xor
pusha
xor
loopne
jae
cmpsl
aaa
adc
into
cltd
pop
adc
insb
xchg
mov
adc
fwait
cmp
add
cmpb
divb
out
rolb
and
add
mov
mov
pusha
cld
sub
out
mov
and
add
rsqrtps
mov
jno
sbb
pop
push
and
and
cmp
jnp
mov
inc
cmpb
cmc
jnp
inc
add
es
test
shlb
or
xorb
fisubrs
rolb
pusha
pusha
out
test
pusha
pushf
les
add
push
pop
mov
and
adc
jo
jne
mov
push
add
cltd
xlat
push
rclb
inc
cli
and
test
add
cmc
nop
pop
movsl
gs
push
call
xchg
fisubrl
pusha
inc
imul
pusha
sbb
mov
loopne
push
shl
mov
and
and
add
call
iret
lock
pop
push
xor
push
add
pusha
inc
in
sub
fnstenv
xchg
inc
sub
sub
jnp
push
fidivl
add
sbb
iret
pusha
lret
jp
xchg
inc
push
loop
in
faddl
jbe
sub
inc
mov
and
mov
je
add
mov
inc
dec
dec
sub
mov
imul
and
aad
pop
shrl
pusha
andb
and
adc
dec
add
add
inc
scas
and
cmp
jo
insb
dec
out
dec
rorl
push
bound
in
lds
imul
push
pop
mov
loopne
sub
pop
andb
out
scas
in
mov
mov
dec
adc
xorl
xchg
and
lods
ret
push
and
rolb
lods
rol
add
das
pushf
test
loopne
dec
xchg
addr16
add
jns
xchg
jecxz
xor
in
std
jns
loopne,pn
arpl
jo
jg
and
pushf
pop
leave
push
addb
andb
cli
das
push
xor
pop
sbb
pusha
rolb
jbe
adc
rorl
push
push
xchg
insb
jno
and
mov
jns
push
pusha
shrb
ret
insb
dec
dec
stc
mov
mov
inc
and
rorb
add
test
xchg
mov
fwait
movsb
addb
add
cmp
in
mov
pop
and
loopne
fsts
repz
andb
js
mov
and
jecxz
mov
add
mov
loopne
lcall
sbb
insl
and
and
pop
mov
shlb
pop
pop
add
or
addr16
push
dec
pop
xchg
repnz
push
fsubrs
jnp
add
ret
pusha
push
add
addb
mov
sti
int3
fwait
imul
push
fwait
outsb
push
sbb
addb
push
inc
cmp
fs
pusha
sbb
les
xor
addb
pusha
and
cmc
mov
in
mov
cmp
pusha
mov
mov
jne
das
repnz
std
xor
and
inc
or
and
mov
pusha
inc
push
mov
push
lret
xlat
iret
xchg
and
lret
insb
loopne
mov
cli
sar
fisubrl
je
jp
clc
xchg
int3
or
loopne
pop
jg
add
rol
or
lods
and
call
mov
call
cltd
nop
divb
pop
pop
lahf
orl
cwtl
adc
leave
push
cld
out
mov
mov
lods
scas
inc
inc
scas
rclb
int3
cmp
mov
or
xor
pop
push
popl
loopne
xchg
and
addb
addb
icebp
cmp
and
add
sbb
je
or
gs
clc
out
jo
pop
negl
pusha
test
cmpsl
push
add
add
ds
out
jbe
ret
ret
mov
push
lock
aam
lock
cmp
sar
das
jo
outsl
test
mov
pop
adc
inc
inc
push
addb
jp
flds
push
push
sbb
adc
sub
mov
pusha
pusha
dec
push
fsubr
sbb
cmc
inc
add
in
cmpsl
std
aad
mov
mov
mov
mov
testl
lret
xchg
loopne
jns
neg
enter
xor
outsb
inc
mov
movsb
pusha
inc
xor
pop
push
mov
ror
xchg
xchg
je
inc
mov
pop
dec
repz
cmp
lret
scas
rolb
add
mov
orb
inc
ds
es
or
shlb
adc
addb
cmp
push
and
inc
mov
in
shl
pop
xchg
mov
dec
aad
orl
dec
xchg
idiv
push
jle
addr16
mov
ror
rolb
negb
mov
mov
mov
loopne
ja
jle
test
shlb
pop
shlb
inc
clc
ds
mov
ss
mov
lret
pop
lcall
and
jns
mov
lock
icebp
and
mov
ret
sub
jnp
mov
mov
add
loopne
dec
in
icebp
and
xchg
into
mov
loopne
rolb
inc
cmp
xchg
ret
std
cmp
call
adc
jle
andb
mov
mov
loopne
les
inc
adc
or
aad
push
and
push
and
inc
in
cmpsl
xchg
push
addb
sti
in
xchg
test
add
dec
jne
orl
xchg
outsl
cmp
addb
aad
ret
insb
jns
enter
loopne
pop
aad
fwait
push
fistpl
adc
inc
mov
pop
movsl
push
popf
push
iret
stos
insb
pop
in
xchg
xchg
aad
jmp
mov
andb
andb
mulb
lret
gs
loopne
sbb
cmp
rclb
andb
das
out
pop
test
inc
and
mov
pusha
and
pop
xor
dec
add
mov
adc
push
inc
loop
repz
and
xlat
fcoms
test
ds
bound
rolb
bound
and
mov
and
mov
out
movsb
mov
ljmp
mov
push
imul
add
and
mov
pop
inc
out
mov
addr16
rcr
push
adc
xchg
call
int
fwait
adc
cli
jne
sbb
jmp
and
push
arpl
data16
ror
pusha
sbb
mov
inc
ljmp
sbb
inc
loopne
and
sar
push
jbe
lcall
cltd
push
insl
data16
sub
and
repz
jmp
xorb
adc
leave
xchg
pusha
jg
ja
mov
and
mov
and
add
cmp
xchg
mov
mov
cli
jnp
in
lret
outsl
mov
and
mov
pop
xchg
sbb
pushf
push
and
sahf
cltd
push
mov
add
add
rolb
mov
mov
andb
aas
pop
addr16
lds
andb
mov
and
int3
push
addl
and
sbb
mov
mov
and
push
das
rorb
aam
xchg
mov
xchg
jge
jg
and
rcrb
ret
adc
inc
aaa
xor
xlat
lods
add
shlb
mov
loopne
gs
andb
inc
add
shll
pop
inc
pop
in
or
scas
add
push
dec
addr16
stc
sub
and
jecxz
or
fdivrl
rorl
jle
inc
sbb
js
loop
leave
mov
or
mov
pop
leave
imul
pusha
pop
xchg
mov
in
shlb
add
ret
cmp
add
dec
push
popl
jp
pop
mov
dec
shlb
mov
sub
and
mov
sti
cmpsl
sub
enter
rcll
add
mov
xor
pop
dec
shll
subb
in
mov
adc
jb
lret
inc
add
xor
mov
pop
addb
imul
lret
les
xor
mov
adc
addb
in
push
lcall
sbb
outsb
mov
or
inc
loop
aaa
enter
and
mov
jae
inc
inc
jmp
pop
shll
dec
rolb
loopne
xor
lret
mov
push
cmp
mov
cmp
sbb
xchg
jecxz
xchg
mov
andb
or
jno
cmp
in
loop
pusha
and
enter
aas
mov
sub
repz
jl
mov
inc
and
add
pop
les
add
adc
pusha
xorb
orb
add
or
loopne
jg
sub
inc
sbb
lock
inc
mov
fistpll
adcb
test
jnp
addb
mov
xchg
dec
dec
pusha
insl
pop
iret
pop
repz
cmp
inc
mov
pop
cmp
add
mov
jns
addb
pop
push
and
subb
jl
sub
subb
jmp
push
mov
push
push
int3
mov
jge
lahf
xlat
neg
ljmp
and
imul
pop
jmp
mov
shlb
mov
mov
push
das
mov
cmpxchg
pusha
and
addb
sub
test
or
andb
rcr
pusha
pusha
jg
and
dec
movsl
adcl
and
add
push
outsb
ljmp
js
sahf
jno
sbb
mov
push
shr
mov
cmp
leave
adc
lahf
test
add
cmp
cltd
out
ljmp
sub
push
inc
stos
ret
pop
xor
scas
mov
mov
mov
pusha
addl
pusha
sar
sub
sbb
adc
add
add
icebp
mov
out
add
inc
and
add
mov
dec
mov
pusha
add
out
bound
mov
in
and
mov
sahf
test
sbb
mov
lret
lods
mov
loop
sbb
xor
int3
repnz
rcll
push
loop
push
xchg
add
xlat
pop
xchg
rcl
sbb
test
leave
int3
and
insl
add
and
call
inc
pop
arpl
cmp
mov
push
and
jbe
enter
cmp
and
mov
mov
icebp
jbe
out
cld
inc
lea
sbb
inc
inc
in
pop
lods
add
mov
xor
dec
inc
fstpt
leave
testl
adc
stos
cli
dec
and
test
push
or
rol
scas
or
outsl
push
aaa
icebp
aas
inc
mov
push
cmc
jg
rolb
mov
and
inc
mov
inc
dec
adc
dec
jl
xchg
push
sub
loopne
pop
rcrl
push
xor
push
mov
adc
mov
inc
mov
popf
movb
xchg
sbb
jnp
mov
gs
sub
inc
mov
pusha
out
adc
add
and
js
sub
jge
mov
mov
mov
sbb
shlb
lea
enter
es
fwait
adc
add
jecxz
jecxz
cmp
stos
flds
mov
shlb
clc
outsb
xor
mov
adc
ret
repnz
dec
push
nop
data16
jge
mov
pop
push
addr16
adc
nop
ficompl
sahf
scas
pusha
adcb
sbb
shlb
in
pop
push
sti
xchg
pop
int3
xor
hlt
cld
pushaw
mov
mov
lds
push
sub
jbe
mov
pop
push
sbb
addb
jp
mov
pusha
xor
add
inc
aad
lds
inc
push
cmp
sahf
xchg
aam
or
loopne
mov
mov
push
add
in
insl
aas
mov
or
ljmp
add
dec
cmp
scas
loopne
addb
popf
and
inc
aaa
dec
fcoml
or
subb
lret
push
add
and
addb
cld
out
push
dec
xlat
loope
pusha
mov
out
dec
push
in
adc
mov
inc
rclb
les
imulb
pusha
pusha
hlt
popa
xchg
addr16
loopne
imul
aad
pop
jbe
pop
inc
cli
sbb
into
jp
add
loopne
jge
mov
cltd
fsubrs
sar
pop
xlat
andb
pusha
dec
std
movsl
scas
add
add
sahf
scas
add
das
arpl
and
loop
clc
lods
loopne
xor
aas
pop
clc
or
or
mov
ret
test
cli
jecxz
fbld
cmp
shrb
sti
mov
sbb
ss
mov
inc
mov
and
cmp
add
shlb
sub
cwtl
imul
xchg
test
add
fs
xor
mov
xchg
fwait
loopne
cmpsb
loopne
push
lret
sbb
das
adc
and
inc
inc
push
xor
scas
jge
imul
notl
cmc
dec
inc
clc
subl
cmp
add
xchg
fwait
gs
scas
inc
mov
mov
ror
dec
or
loopne
fisubl
lahf
jge
stos
and
je
mov
add
ss
rolb
add
inc
and
mov
loopne
adc
lds
inc
adcb
idivl
cld
enter
je
int
jecxz
pop
jbe
add
int
shl
and
outsb
jg
int3
jnp
pusha
inc
mov
add
scas
dec
pop
xchg
pop
pop
aam
sbb
sub
aad
inc
inc
dec
and
jl
lods
loopne
cmc
enter
sub
shlb
push
loopne
mov
addb
loopne
mov
pusha
shlb
or
pusha
hlt
cli
xchg
shrl
push
scas
and
adc
loopne
add
dec
inc
rcrl
fisttpl
cld
inc
mov
cmp
mov
shlb
cmp
rcll
pop
lcall
sub
loopne
cwtl
fwait
cwtl
add
inc
mov
je
xchg
pop
fbstp
repz
loopne,pn
imul
andb
loop
cmpsb
add
call
pusha
xorl
jno
test
adcb
pop
int3
ret
inc
shlb
not
pop
pop
xor
inc
into
clc
je
or
add
sbb
sbb
and
dec
pop
lea
addr16
and
mov
inc
test
inc
insl
mov
loopne
or
ret
inc
inc
jmp
or
stc
jle
xchg
add
xor
test
inc
inc
jg
cmpsb
addb
sbb
jmp
mov
inc
pusha
popf
mov
in
shrb
cmp
push
jg
movsl
add
add
mov
sub
and
sub
loopne
mov
xlat
out
pop
vmovntps
sub
loopne
and
cmp
pop
xchg
xchg
inc
sub
mov
lods
cmpsb
loopne
jp
lcall
inc
lods
mov
adc
xchg
in
fdivrl
movsb
pusha
loopne
sbb
incl
sbb
add
xchg
add
jae
rolb
or
int3
inc
jne
and
xor
xchg
rorl
and
pop
flds
mov
mov
xchg
and
sbbb
scas
pusha
mov
mov
and
sub
add
imul
xchg
sub
and
rolb
cmp
test
loopne
mov
xor
fs
inc
cmp
ficompl
jne
mov
shlb
inc
xchg
lea
loopne
addb
mov
movsl
in
and
mov
out
fistl
pop
mov
aas
test
pusha
add
inc
pusha
cmp
and
mov
and
stos
pop
cmp
aas
in
inc
push
xchg
dec
out
add
shlb
icebp
cld
dec
insb
mov
test
outsb
les
xor
es
andb
or
shrb
loopne
and
shlb
popf
repz
out
sbb
push
dec
les
in
mov
es
ret
push
and
mov
and
mov
loopne
sbb
pushf
xchg
pop
repz
xchg
icebp
lock
pop
xchg
mov
sub
pusha
xchg
sbb
add
setno
pop
mov
and
add
addb
push
add
mov
mov
xorb
and
push
outsl
outsb
dec
xor
mov
mov
pop
scas
repz
push
inc
mov
lock
loopne
daa
lods
stc
jp
shl
sbb
in
int3
mov
bound
pop
fidivrs
push
das
fwait
addb
mov
mov
imul
push
fidivl
jo
loop
inc
loopne
xchg
mov
jae
pop
popf
jb
jle
xchg
in
jl
mov
call
daa
add
inc
xchg
and
dec
loop
enter
push
roll
pop
pushf
inc
jne
sbb
mov
loopne
or
lods
out
push
sbb
test
add
stc
int
mov
jecxz
mov
add
pusha
sbb
ljmp
inc
mov
jnp
xchg
scas
sub
or
and
add
or
loop
int3
add
pop
sub
pusha
js
pop
mov
inc
rcrb
or
mov
in
push
dec
push
adc
sub
incl
mov
outsl
mov
adcl
loopne
andb
jge
xor
mov
lret
fwait
les
pushf
xchg
jle
mov
add
iret
push
iret
loope,pt
jmp
cmc
jge
adc
sub
add
adc
and
outsl
inc
int
and
xchg
xor
fisubs
ror
cmpsl
or
dec
hlt
add
mov
adc
in
push
je
and
inc
inc
daa
pop
pop
push
cmpsb
andb
sub
mov
loop
jmp
mov
pop
cmp
aam
or
mov
leave
enter
sub
mov
and
lods
call
mov
nop
xchg
test
xchg
mov
loopne
cmp
and
cli
xchg
lret
ljmp
movsl
data16
pusha
idivl
pop
icebp
popf
mov
out
jae
std
sbb
lret
inc
je
out
hlt
dec
xor
cmp
cmp
and
out
icebp
test
rcrb
pop
jb
adc
stos
pop
sub
shlb
in
and
arpl
test
aas
out
test
jl
mov
jl
xchg
repnz
shll
aam
lods
das
mov
pusha
adc
and
mov
push
adc
into
mov
les
data16
fists
test
xor
mov
pop
adc
adc
jge
shl
movsb
add
fiadds
je
and
lahf
jg
cmc
jae
lahf
sbb
jbe
pop
and
ret
ret
push
xor
shlb
popa
hlt
dec
lcall
add
lock
and
outsl
cmp
rorb
pop
inc
stc
iret
ss
and
xchg
xor
xchg
mov
addb
cli
mov
ja
inc
fcomip
xor
cmp
and
cmpsl
xor
or
out
inc
mov
dec
cli
inc
aas
inc
rolb
jno
jo
pop
insl
mov
loopne
aas
out
pop
loope
in
pop
adc
dec
out
pusha
inc
fdivr
andb
ss
aas
icebp
repnz
int3
test
mov
lods
jbe
mov
andl
mov
int
lds
cmpsb
loopne
cmpl
mov
dec
dec
cmc
pop
lret
loopne
xor
dec
shll
pop
rol
cmp
js
and
xchg
in
insb
pop
xlat
sbb
push
mov
and
popf
xchg
shll
pop
jecxz
sbb
and
sub
mov
sbb
push
fmull
mov
adcl
cmp
shrb
imull
mov
lods
fistps
test
lcall
mov
push
ret
cltd
loop
mov
push
mov
sahf
add
add
adc
ret
or
add
aam
add
addb
and
sbb
andb
mov
dec
mov
add
pusha
add
jl
into
sub
repnz
inc
cld
enter
pusha
frstor
pop
popw
rclb
adc
and
sbb
pop
loope
and
or
pusha
inc
mov
cmp
lds
lea
shlb
int
addb
xchg
mov
push
pop
cmp
jp
mov
pop
jb
out
mov
loopne
add
add
shrb
outsb
pop
cmp
adc
loopne
mov
adc
add
adc
dec
insl
xchg
adc
ss
cmpsb
add
sti
data16
inc
nop
loopne,pn
pop
addb
mov
in
dec
cmp
cwtl
mov
inc
test
rcr
and
aad
loop
daa
push
jne
decl
pusha
pusha
cmp
lahf
cmc
pop
stc
jne
or
paddq
fistps
inc
add
add
movsb
mov
shlb
pop
cmpsl
jns
or
rcrb
or
cmpsb
inc
add
lret
aad
rolb
sbb
ja
jno
andb
and
add
xchg
pop
xchg
lahf
jge
xlat
push
xor
jp
sahf
in
lret
xor
pusha
and
lahf
dec
fmuls
push
in
pusha
xchg
data16
loopne
pop
cld
xor
pop
stc
mov
out
pop
push
mov
inc
hlt
jae
push
in
dec
vmovshdup
scas
and
in
pop
mov
nop
mov
call
mov
xorb
sub
sbb
sub
loopne
mov
aaa
arpl
and
dec
je
and
jle
lods
pop
lcall
inc
mov
addb
mov
nop
insl
outsb
into
arpl
pop
dec
cmp
xor
psubusw
sbb
cmp
and
lods
add
push
cwtl
cwtl
int3
dec
or
pusha
push
xor
rorl
push
mov
xchg
pushf
iret
out
pop
cmp
loopne
pop
dec
cmp
andb
xor
cld
or
and
mov
out
jl
ret
test
pusha
adcl
add
cld
je
add
dec
lret
pushf
js
xor
scas
mov
rolb
dec
repnz
sub
loopne
rolb
sbbb
adc
mov
addb
jg
inc
std
jae
add
mov
xor
addb
adc
je
adc
xchg
test
adc
call
sbb
adc
inc
add
leave
xchg
inc
pusha
jns
mov
jl
and
nop
rcr
mov
inc
add
loope
decl
test
push
insb
jnp
mov
adc
inc
shlb
sarb
js
and
push
adc
loopne
out
jmp
add
add
adc
adcb
push
dec
and
shl
xor
inc
pusha
sbb
subb
inc
andb
addb
lods
cmp
xor
pop
cltd
pop
in
fiaddl
jg
sub
dec
gs
mov
addb
std
inc
les
out
inc
inc
shll
outsl
aad
or
mov
pushf
sbb
inc
adcb
iret
inc
cs
andb
gs
fldl
sub
pusha
fmull
inc
loopne
cmp
add
repz
pop
inc
pop
sbb
push
mov
mov
sub
pushf
mov
and
rolb
xor
or
cmc
xchg
pop
pop
sub
loopne
inc
mov
sarb
xor
loopne
repnz
pop
fwait
jecxz
pusha
jo
pop
and
add
sub
and
les
pusha
mov
orb
mov
andl
and
mov
fs
add
add
mov
xchg
movsl
pushl
shlb
xor
iret
out
std
jge
mov
mov
mov
jns
stos
and
lock
xor
or
add
shlb
test
shrl
stos
add
test
pusha
jo
adc
or
lahf
or
jmp
outsb
loope
add
ret
outsb
pop
pop
inc
xor
in
js
or
inc
mov
loopne
lret
jnp
sarl
cmc
adc
hlt
ljmp
mov
push
andb
adc
jp
cmp
std
sub
add
sti
add
inc
mov
and
js
mov
jns
cmp
jnp
push
cmp
and
pop
subl
mov
jnp
mov
inc
shr
dec
jae
dec
test
insb
lret
ret
mov
adc
mov
cmc
shll
xchg
out
pop
inc
daa
dec
aam
xlat
pusha
pop
jge
cwtl
repz
jle
sub
sub
and
data16
add
xchg
inc
repnz
out
cmp
insb
inc
dec
or
dec
cli
adc
xor
lret
clc
test
inc
mov
jp
pop
mov
add
in
lods
and
sbb
xor
movb
pop
jb
or
shrl
shlb
pusha
dec
mov
inc
js
loopne
popf
inc
andb
data16
add
jp
add
loopne
loop
dec
push
insb
jb
andl
dec
popa
fwait
les
xor
dec
int
pop
lea
push
fcompl
rclb
or
loop
cmp
xor
inc
pusha
cmc
push
ret
mov
fisttpl
adc
mov
jecxz
mov
loopne
jnp
lds
or
pop
pop
pop
iret
sbb
add
add
and
icebp
in
mov
xchg
addb
pusha
into
nop
sub
cmc
fstps
xor
xchg
dec
jne
jb
mov
and
scas
std
fwait
sub
pusha
shrb
inc
int3
cmpsl
popa
xchg
mov
pusha
pusha
mov
jl
loope
fcomip
fsin
lds
push
addb
lock
pop
mov
pop
into
fucomip
dec
out
mov
xor
pusha
sbbb
pop
out
js
cmp
lods
mov
addr16
lcall
lret
iret
pop
xchg
loope
lea
xchg
or
xchg
and
pushf
out
mov
pusha
and
lods
add
imul
sarb
add
and
shlb
xchg
cmpl
nop
andb
test
pusha
add
loopne
scas
cmp
sub
repnz
scas
add
clc
push
push
and
imul
fwait
mull
loopne
ss
inc
sub
mov
ret
add
fisubl
or
cmp
dec
or
add
mov
lret
inc
dec
adc
mov
mov
mov
cmc
push
lret
sub
xorb
dec
mov
or
dec
std
mov
sbb
sub
adc
or
pop
aas
lds
inc
add
shrb
dec
jl
js
cmpsb
and
mov
mov
push
lret
inc
mov
fiadds
stc
xchg
mov
inc
outsl
mov
xchg
inc
xchg
out
aas
out
jmp
inc
add
cmp
loopne
sbb
mov
mov
pop
mov
rol
cmpsb
andb
add
stos
add
jp
inc
jnp
ret
mov
cmc
sub
test
inc
imul
mov
dec
dec
aam
mov
sbb
popf
mov
bound
shlb
stc
sub
push
cmp
sbb
xchg
mov
jl
out
push
and
add
shlb
repnz
loopne
mov
enter
lds
addb
ficompl
cmp
jmp
push
pop
sub
mov
mov
daa
sbb
add
mov
movsl
shll
cmp
loopne
mov
shr
das
je
je
xchg
sub
xchg
xor
mov
mov
and
push
pop
xor
je
inc
rolb
add
and
test
shlb
adc
xor
and
addb
xor
push
enter
enter
sub
sti
add
mov
jae
ljmp
test
pop
adc
aaa
xor
push
hlt
lods
and
aaa
lock
mov
jae
mov
and
mov
mov
and
sub
inc
dec
and
cli
mov
sbb
daa
leave
bound
rcrl
pusha
andb
dec
inc
adc
mov
outsb
xchg
sub
inc
outsl
xchg
push
add
inc
scas
andb
inc
jbe
pusha
add
mov
mov
jbe
pop
loop
ud2
and
pusha
push
std
cmp
mov
push
stos
pusha
xchg
push
in
pusha
adcb
or
adc
pop
xchg
iret
cwtl
adc
xchg
imul
adc
pushf
mov
lock
pop
push
xor
mov
repnz
cmp
mov
sahf
pop
inc
in
icebp
int
js
int
mov
rorb
test
inc
inc
sub
cmpb
mov
rorb
enter
fs
push
add
jmp
and
cmpsl
jne
pop
insl
in
jbe
shrb
xchg
or
andb
mov
inc
daa
jmp
push
and
inc
push
pusha
dec
in
int3
je
add
sub
movsl
xchg
pusha
mov
jbe
add
inc
sbb
test
loopne
rcl
scas
shl
pop
gs
pop
loope
lret
test
adc
or
inc
and
stos
and
enter
xchg
fdivrs
add
test
inc
add
mov
mulb
add
push
dec
push
orl
test
add
mov
shll
nop
dec
in
sbb
and
add
rorb
inc
popa
cmp
push
add
in
lods
inc
pcmpeqd
xchg
pop
stos
mov
out
ficompl
xchg
push
mov
shlb
jb
and
cld
popa
fwait
dec
mov
cs
pop
jmp
jno
add
int3
movsl
lret
or
adc
pop
loop
pusha
andb
sub
adcb
in
jl
dec
or
jp
mov
xorb
add
sbb
mov
orb
ret
das
test
int
jb
dec
add
push
mov
lods
pusha
inc
cmpsb
mov
xchg
dec
xchg
addr16
jge
pushw
jl
mov
add
and
out
popa
scas
mov
cmpb
shll
mov
cmp
mov
in
js
xchg
mov
out
push
xchg
jp
aam
adc
clc
add
outsl
andb
cmp
mov
or
mov
mov
fstpt
lds
loopne
mov
andb
cmp
add
sbbb
sub
rcll
mov
pop
add
test
mov
addb
xor
ja
sti
jo
push
insl
rcll
add
movsl
fdivrl
mov
mov
or
out
clc
aaa
pop
push
mov
lock
call
out
mov
and
dec
loop
je
xor
adc
xor
loopne
dec
mov
mov
loopne
les
cmp
xorl
adc
jp
aam
mov
add
addl
dec
cmp
je
mov
and
fidivs
pop
adc
addr16
add
push
sub
mov
inc
ds
in
push
arpl
sbb
std
add
sarb
imul
fincstp
data16
aaa
inc
and
mov
les
pusha
jecxz
cmp
add
addr16
push
loop
xor
mov
push
push
jmp
popf
hlt
push
mov
cmp
daa
dec
dec
lcall
push
or
arpl
stc
xor
lahf
inc
mov
clc
or
add
push
inc
jg
in
push
jge
xchg
shl
push
mov
les
add
and
and
lahf
inc
repnz
rolb
loopne
sbb
and
leave
cli
lods
mov
aam
adc
stos
mov
ret
inc
test
loopne
jmp
filds
cmp
inc
and
std
inc
adc
or
loopne
jge
pusha
loopne
outsb
icebp
es
test
inc
pushf
xor
xor
add
jne,pt
outsl
mov
inc
out
je
mov
pop
es
adc
andb
mov
pusha
ror
icebp
cld
push
hlt
dec
test
push
loopne
decb
mov
or
push
shlb
mov
push
fwait
jle
call
cmc
push
mov
push
push
cmp
xor
mov
ljmp
xabort
repz
sbb
dec
sahf
pushf
add
loopne
and
and
dec
xlat
xchg
jle
xchg
mov
pop
mov
dec
lret
mov
sbb
mov
sarl
cmp
xchg
push
push
rcll
fs
inc
icebp
cwtl
arpl
push
jbe
cmp
adc
shl
mov
inc
movsl
mul
fistps
xorb
and
ljmp
mov
pusha
mov
aad
rol
pop
call
and
stc
jg
cmpsb
mov
xlat
fmuls
sub
pusha
sahf
xchg
mov
loopne
jmp
ja
cmc
cmpsl
divl
add
lea
data16
and
and
cmpsb
shlb
mov
sti
sbb
roll
popl
loopne
push
sarb
sub
psubsw
sub
sub
loopne
xchg
sbb
mov
andb
push
xor
sbb
fucomi
mov
dec
lods
and
mov
mov
nop
ja
mov
push
mov
sti
fimull
jae
ja
pop
cli
nop
sub
inc
inc
in
mov
jecxz
call
xor
test
loopne
add
cmpb
rcl
cld
mov
rcrb
push
imul
xor
inc
pusha
adc
lods
add
dec
data16
fs
stc
roll
dec
mov
or
and
shl
mov
mov
add
pop
sbb
add
lahf
outsl
cs
and
adc
or
dec
call
inc
and
jb
add
add
repz
add
shlb
outsb
inc
inc
pop
repz
mov
xlat
pop
outsb
cmp
int3
test
add
mov
or
imulb
addr16
loopne
in
xor
sub
mov
and
mov
add
popa
mov
stos
nop
mov
cmp
fwait
xchg
sub
add
loope
inc
sarb
lret
stos
add
scas
scas
mov
jae
jecxz
mov
add
fidivrs
cmpl
stos
add
lods
and
xchg
and
inc
add
mov
mov
jno
mov
xchg
cmp
idivl
and
or
mov
add
jge
cltd
xor
fs
out
mov
push
ret
cmp
cmp
mov
dec
out
dec
dec
sti
insb
add
pop
int3
out
add
andb
add
xor
std
sub
xorb
andb
repz
call
loopne
lods
cwtl
imul
xchg
and
inc
pusha
fnstenv
repz
hlt
push
mov
rclb
mov
xor
inc
add
shlb
or
aaa
mov
jl
dec
popf
cmc
sbb
in
mov
mov
icebp
pusha
xchg
dec
xor
popf
mov
xor
orw
shlb
dec
sub
scas
shl
insb
mov
xchg
cli
lret
mov
and
lret
aas
cmpsl
dec
mov
mov
xor
fiaddl
adc
pop
mov
scas
or
mov
imul
shl
pusha
inc
xchg
adc
fists
xor
push
or
rcrb
and
jle
add
aam
xchg
mov
push
popf
xchg
or
inc
xor
sbb
jmpw
jnp
mov
mov
add
mov
mov
test
shrb
clc
mov
or
and
cli
mov
inc
mov
scas
addb
or
in
popa
push
sub
pusha
adc
imul
clc
repz
sbb
xchg
push
bound
andb
iret
loopne
insb
mov
loopne
or
pusha
insl
lret
push
sbb
addb
repnz
cmc
pop
and
and
in
mov
pop
idiv
xor
dec
mov
or
add
xor
mov
and
cwtl
cmp
loopne
dec
pop
cmp
gs
add
cmpsb
loopne
jecxz
test
adc
ss
loopne
inc
and
push
stc
pop
dec
sbb
push
add
mov
mov
shl
pop
xchg
lret
and
fwait
imulb
and
ror
inc
fadds
pop
out
std
test
pusha
orb
lret
insl
call
and
jecxz
xlat
mov
pusha
out
divb
insb
fsubrs
and
and
pusha
lods
fstp
lahf
sub
and
hlt
jmp
fcoms
jle
mov
fsubrs
mov
and
and
sub
rcrb
pop
aam
add
push
sub
loopne
mov
js
loopne
aaa
fildl
test
pusha
inc
jle
xchg
lods
inc
rcr
mov
inc
sub
jecxz
rcrb
pusha
sbbb
sti
sbb
imul
lods
rolb
popf
rcrl
rolb
andb
sbb
jne
or
add
push
inc
cmpb
fdivl
inc
push
fisubrl
and
jg
loop
add
stc
je
inc
stc
pop
cmp
cmpsb
pusha
loopne
add
inc
inc
rcrl
mov
pusha
rclb
xor
iret
jne
mov
jmp
in
int
flds
orb
les
pusha
add
hlt
icebp
sub
and
cmp
addb
in
xchg
mov
fidivrs
mov
cmp
xchg
into
lret
adc
fnsave
add
shlb
ror
jg
push
mov
out
andb
sbb
jecxz
mov
push
add
stos
cmp
int
and
mov
add
xlat
aaa
xchg
xor
addb
jbe
loopne
pop
rcll
sbbl
mov
pusha
sbb
inc
shrb
and
inc
inc
pop
cld
mov
xor
and
and
jne
fidivl
mov
int3
push
push
xor
push
xchg
js
insb
cmpl
sub
sbb
mov
dec
push
jno
clc
sbb
addb
js
push
mov
dec
sub
je
pushf
pop
adc
loopne
fcmovb
pop
movsl
lods
cmp
mov
ror
iret
or
sbb
fstpt
xor
ja
loopne
mov
fnstcw
mov
rcll
jecxz
das
xor
sarl
mov
dec
pushf
repz
mov
icebp
sbb
stos
add
add
cmpsb
inc
pusha
out
gs
in
or
mov
push
lods
mov
jbe
jl
pop
pop
xchg
rolb
rclb
nop
fwait
shll
rolb
jp
and
push
testl
and
repz
popa
nop
push
xor
aam
jmp
fmull
inc
and
jmp
bound
sahf
sub
mov
inc
cmp
and
rorb
sub
cmpb
pop
xadd
add
and
mov
and
cmp
sub
clc
addl
out
and
add
and
add
mov
sbb
xchg
ret
je
jmp
add
or
add
lret
xchg
mov
mov
sti
nop
add
popf
ret
xor
push
loope
inc
pusha
mov
jns
adc
rolb
lret
stc
sbb
enter
mov
aas
insb
xor
stos
pusha
mov
out
test
fsubl
testb
loopne
add
mov
pusha
dec
xchg
call
mov
rcl
dec
pop
js
ret
dec
adc
xchg
mov
icebp
push
pop
mov
push
inc
mov
in
mov
add
loopne
and
rolb
hlt
scas
loopne
popf
les
pusha
rclb
out
push
pop
xchg
stos
mov
dec
sub
pop
add
loopne
dec
mov
mov
sbb
iret
andb
mov
fs
decb
loopne
loop
andb
lods
addb
stos
pop
mov
lcall
stos
add
jo
aaa
push
cmp
jns
and
push
mov
mov
jns
dec
das
out
push
clc
lret
fmuls
jns
adc
out
xchg
xchg
mov
loopne
lods
loopne
xchg
inc
sti
lcall
add
pop
jp
scas
mov
lea
popf
out
call
in
or
repnz
icebp
mov
aas
cmpsb
mov
mov
cmp
adc
lret
dec
push
loopne
ljmp
push
in
cmp
inc
rclb
lret
pusha
inc
jmp
jle
mov
and
andb
orl
and
xchg
xchg
out
pop
mov
mov
jns
mov
xchg
cmp
addb
push
and
adc
loopne
jge
sbb
cli
test
lock
pop
fsts
lret
inc
mov
sbb
cld
jno
into
mov
inc
test
and
and
loope
andb
adc
inc
add
push
add
add
ja
mov
push
xchg
lods
add
add
jbe
or
mov
les
sbbb
testb
rorb
loopne
mov
cmpsl
movsl
and
lret
pusha
or
sub
pusha
add
cmp
push
inc
mov
jge
setle
int
ret
addr16
cld
inc
rorb
add
mov
out
push
jl
and
dec
js
inc
fists
dec
addr16
sbb
hlt
mov
cli
aad
sub
dec
jg
shlb
inc
pop
insl
mov
add
andb
push
add
xor
cmpsl
adc
mov
or
loopne
lahf
push
repz
insb
sbb
jge
loopne
decb
loopne
inc
xor
fldenv
call
jg
or
cmpl
lret
xor
dec
outsb
mov
push
in
ja
add
add
mov
loop
and
int3
dec
dec
pop
cmpsb
loopne
jmp
iret
pop
sub
or
es
pusha
mov
mov
inc
add
in
sub
or
pop
mov
loopne
daa
xchg
adc
inc
addb
pushf
test
out
nop
mov
or
pusha
fsub
and
mov
push
je
scas
loop
adcl
xor
dec
cwtl
jns
ret
inc
gs
sarb
xchg
sbb
shlb
and
jp
cmpsl
rclb
mov
mov
popa
jg
cmc
and
jecxz
fisttpl
mov
popf
push
pusha
mov
dec
push
sbb
sti
mov
sbb
cmpsb
and
xchg
cwtl
inc
lea
lcall
xlat
or
mov
add
inc
pushf
repnz
sub
and
ret
push
jg
sbb
adc
dec
incb
lds
scas
shlb
inc
in
je
loop
jnp
and
pop
cmp
inc
mov
and
loope
inc
andb
sarb
xchg
cmp
in
adc
outsl
push
cli
test
dec
insb
sbb
mov
rolb
mov
fistl
cmp
jb
mov
mov
adc
push
inc
jae
je
cs
mov
rolb
mov
rcll
mov
mov
adc
add
mov
lret
add
fsubrs
addb
add
je
push
orb
in
fbld
je
je
nop
dec
mov
mov
and
les
cld
cmp
loope
sub
add
stos
inc
and
shrb
loopne
mov
insb
fwait
push
jno
add
out
test
mov
loopne
loopne
push
and
push
addr16
lods
mov
jmp
hlt
xchg
jb
dec
outsb
xchg
scas
loopne
xchg
push
andb
xchg
inc
and
pop
and
add
mov
aam
cltd
dec
pusha
fs
scas
jno
ss
lods
mov
xchg
shlb
and
mov
push
jno
nop
or
shl
pusha
and
add
rol
inc
pop
add
add
xor
or
fwait
icebp
and
pusha
test
push
rolb
das
adc
enter
pusha
inc
and
add
mov
imul
pop
cmp
mulb
es
shrb
pop
mov
ret
jg
inc
sbb
nop
xchg
inc
mov
add
stos
pusha
pusha
jge
lea
lds
inc
lds
fwait
jge
in
inc
and
aas
mov
cs
inc
pop
pop
jne
jge
test
rorb
lea
and
jo
mov
dec
mov
mov
mov
inc
add
adc
cmp
xor
das
jbe
and
int
cld
jp
pop
lcall
std
rorb
and
or
loopne
jae
sti
mov
and
xchg
inc
loopne
je
dec
mov
add
loopne
rcrb
loopne
jbe
and
sub
mov
enter
pop
out
andl
xlat
pop
inc
dec
gs
adc
push
leave
cld
pusha
push
loopne
dec
mov
sbbl
aam
out
stos
inc
addb
loopne
jo
out
and
xchg
jle
les
mov
andb
jp
movsl
pop
cmp
popa
ret
push
mov
mov
addb
inc
sub
mov
add
and
lods
shlb
data16
mov
push
sub
andb
jp
push
adc
jle
pop
sub
add
cmp
out
jae
rorl
pusha
andb
fldt
orb
repz
pop
aad
pop
fildll
loopne
mov
loopne
iret
adc
sbb
leave
inc
sbb
pop
les
add
inc
outsb
push
dec
dec
in
sub
mov
xchg
cmc
popf
inc
test
jecxz
and
in
loopne
mov
lret
aas
cli
inc
sbb
sub
call
inc
pop
aam
jmp
loopne
and
lcall
mov
mov
mov
jne
xchg
and
xchg
adc
inc
sbb
sbb
sub
add
andb
iret
mov
adc
stos
stos
sbbl
push
or
jmp
inc
sbb
jne
popa
adc
inc
test
add
fbstp
push
rolb
outsl
je
mov
push
or
cld
outsb
sbb
lcall
imul
and
mov
gs
mov
cmp
aas
outsl
sbb
mov
data16
int3
add
cwtl
inc
cmp
bswap
mov
mov
lds
jmp
jecxz
imul
imul
and
mov
mov
or
rorb
int
and
ficoms
ja
sbb
shlb
repz
sbb
lods
dec
cltd
popa
insb
mov
jp
ffreep
pop
mov
jbe
dec
call
cmc
out
or
add
loopne
shlb
cmp
mov
dec
xchg
je
push
inc
icebp
cmc
movsl
jno
outsl
aaa
xchg
cmp
scas
andb
add
mov
inc
cli
pop
std
ja
adc
movsb
inc
add
jb
add
jb
and
shlb
mov
jmp
add
cmp
rcrb
pushl
loopne
and
and
out
pusha
inc
pop
add
dec
stos
xchg
sub
mov
rolb
adc
scas
shlb
cwtl
lcall
xchg
sub
jp
fsts
and
stc
imul
fdivl
inc
push
xchg
addb
fnstsw
jge
stc
mov
lcall
loopne
mov
imul
dec
imull
push
das
cmc
or
and
aam
fistpll
add
dec
push
repz
repnz
rcl
scas
push
adcl
jo
pop
inc
les
jg
movsl
insb
mov
cltd
sbb
cmp
imul
pusha
mov
orb
inc
loopne
loopne
ja
mov
test
addb
std
xchg
bound
dec
sar
sarb
iret
xor
loopne
push
test
pusha
pop
sub
scas
lea
loopne
sub
cmc
out
lock
cld
jecxz
cltd
scas
scas
pop
mov
nop
mov
and
fisttps
mov
mov
ret
pop
jo
cli
popa
inc
sbb
andl
ljmp
loopne
daa
sarl
xor
aaa
or
loopne
pop
les
or
loopne
aam
sahf
dec
out
mov
out
enter
outsl
push
push
adc
lock
mov
pop
jbe
xchg
jb
xchg
and
jne
ror
dec
sar
pop
and
and
addb
shll
mov
loopne
xacquire
and
mov
xor
pop
sbb
mov
mov
mov
mov
inc
call
inc
or
orl
fwait
push
shlb
and
ficompl
repz
xor
inc
inc
inc
out
pop
scas
sbb
xchg
jmp
and
xor
xchg
xchg
sub
jecxz
pop
pop
aad
sub
and
rcl
sbb
cmp
call
cltd
dec
sbb
mov
stos
xchg
in
loopne
xchg
outsb
inc
xchg
adc
stos
loopne
bound
call
or
and
mov
cmpsb
and
mov
sbb
jo
pop
cmp
mov
andb
inc
jno
cmp
int
les
loopne,pn
sub
gs
movsl
and
dec
rcll
call
pusha
push
out
and
add
cs
adc
test
js
addr16
into
mov
jle
stos
shlb
std
pop
or
mov
sbb
rcpps
sub
int3
inc
sbb
dec
mov
punpcklbw
mov
mov
xor
add
rorl
xor
mov
inc
add
add
inc
test
cmp
popa
mov
addb
shlb
rolb
nop
mov
inc
pop
xchg
repnz
in
mov
hlt
xchg
xor
jmp
cltd
repz
mov
pop
stc
and
not
enter
jnp
mov
fbld
push
mov
and
pop
lods
dec
pop
iret
xchg
mov
and
sub
and
sti
repz
add
sbb
std
fdiv
test
insl
cmpsb
loopne
std
and
add
and
in
aas
pop
not
add
and
dec
dec
iret
mov
inc
rolb
sahf
test
fdivrp
pop
mov
dec
mov
rolb
cltd
sbb
xchg
adcl
inc
adc
aad
push
mov
lods
push
mov
pusha
loopne
cmp
mov
pusha
loopne
mov
out
mov
ret
lret
and
mov
loopne
outsl
out
fidivrl
loopne
or
mov
loopne
inc
mov
push
andb
add
inc
inc
mov
pop
aad
or
push
adc
mov
addb
push
push
into
mov
pop
cmp
mov
sahf
and
add
and
sbb
add
mov
mov
and
cmp
dec
fs
stc
jge
cli
pushf
xchg
hlt
xlat
fdivs
icebp
and
sub
or
mov
loopne
inc
repz
in
adc
lea
in
int
xchg
inc
and
scas
out
xlat
fwait
ret
cmp
ror
out
fsts
test
loopne
stos
test
and
fisttps
loop
dec
mov
inc
in
xor
ds
adc
jl
pop
repnz
and
mov
and
inc
lea
and
les
movsb
inc
inc
pusha
push
inc
mov
into
outsl
mov
add
push
push
or
addb
pop
add
popl
xor
mov
jae
inc
xchg
fwait
data16
or
and
push
cmp
and
and
and
pusha
out
das
addr16
adc
in
bound
xlat
std
add
fldt
lahf
add
inc
mov
and
repz
sahf
adc
cmc
xchg
and
xchg
dec
sub
pusha
nop
ljmp
es
pusha
jnp
in
sub
sbbb
jns
inc
mov
and
inc
sub
andb
mov
dec
aam
cli
jbe
fisubs
loope
cmpsb
inc
add
lods
setb
nop
dec
filds
shlb
push
mov
movsb
rolb
mov
jmp
add
pop
add
int3
imul
and
push
xchg
adc
jp
lret
jns
jae
out
inc
sbb
rolb
inc
push
pop
lret
dec
mov
std
test
jge
sahf
xchg
es
mov
into
xchg
push
add
sti
sbb
pusha
mov
addb
fisttpl
frndint
jecxz
out
bound
push
jle
cmp
xchg
xchg
push
repnz
and
and
je
lahf
out
dec
mov
dec
push
shlb
addb
das
aaa
mov
gs
scas
inc
and
lahf
lea
mov
sarb
and
aas
mov
popa
sub
mov
xchg
mov
call
fnstsw
fistpll
sbb
fmull
rol
fidivl
jl
cmp
imul
mov
mov
mov
jg
xchg
inc
mov
inc
shlb
xor
stc
push
dec
test
js
add
and
scas
shl
jecxz
jl
daa
int
mov
add
addb
xor
mov
cmpsl
idivb
pop
and
sbb
insl
pop
jle
xor
stos
xor
jae
add
and
pop
repz
jnp
pop
jmp
inc
outsb
and
sahf
out
mov
add
jl
and
pop
adc
mov
andb
loopne
inc
popa
stos
loopne
sahf
mov
xor
rolb
pushf
aam
loop
movsl
pop
gs
pusha
add
push
or
jge
xchg
mov
dec
mov
dec
es
sbb
mov
fwait
cwtl
insl
mov
push
loope
or
pusha
dec
leave
lock
pusha
fadd
add
pusha
pop
aam
lock
xor
in
jp
ret
and
xchg
aas
popa
push
dec
loop
pop
push
add
stos
inc
inc
mov
sarb
shlb
and
or
ret
fucomi
and
mov
ror
push
das
jb
sub
shll
or
xchg
mov
push
mov
dec
lcall
ret
push
in
xor
lret
les
lret
jb
mov
cmpsb
pusha
ror
add
mov
add
nop
outsl
pop
xor
loopne
outsb
out
adc
pop
je
jne
andb
inc
cld
fildll
mov
inc
dec
js
loope
mov
mov
push
sbb
mov
out
fdivl
xor
adc
sar
sbb
xor
or
loop
mov
jmp
sbb
and
idivb
and
and
addb
xor
add
test
aas
das
push
and
ds
rcrl
shlb
mov
stc
add
mov
cld
jmp
aam
inc
insb
xchg
mov
and
sahf
xor
mov
pusha
and
xchg
mov
shrb
push
and
repz
in
mov
mov
sahf
fwait
mov
rclb
fs
pop
dec
std
pop
jmp
leave
scas
mov
push
xor
add
push
push
cmp
iret
push
dec
cli
mov
pusha
pusha
jbe
or
je
inc
int
inc
mov
mov
adc
cmpb
jb
mov
inc
pop
jge
loopne
stc
mov
cld
jmp
push
push
sbbl
addr16
sub
scas
lods
mov
push
fcoms
xchg
cmp
in
xchg
add
out
fimuls
pusha
mov
pop
addr16
pusha
pusha
sub
add
lret
xlat
fldcw
mov
pusha
and
cltd
adc
outsb
sub
and
jp
mov
sbbl
lcall
push
and
arpl
add
into
lret
pop
lock
out
jge
cwtl
xor
not
pop
sbb
icebp
pop
xchg
xor
popf
jnp
std
loope
xchg
sti
sarb
xchg
ret
fldl
outsl
add
xchg
jnp
pop
addb
int
loope
rol
cmpsl
jns
inc
push
and
inc
outsl
cmp
test
pop
dec
popa
pop
sbb
add
xor
push
loopne
mov
ret
pop
int3
int
xchg
push
jge
shlb
aam
xchg
mov
lods
rolb
int3
das
aam
and
movsb
andb
stc
xchg
pop
cwtl
pop
sbb
pusha
andb
inc
movaps
xchg
push
sub
shlb
add
jmp
lock
arpl
pop
push
jnp
shl
xchg
stos
and
adc
or
loopne
rol
dec
sbb
andb
insb
inc
int3
pop
inc
scas
addb
mov
xor
pusha
inc
lcall
loopne
xor
mov
mulb
jge
sbb
scas
in
loopne
icebp
jmp
dec
mov
push
clc
adcl
shrl
cwtl
pusha
and
inc
push
pusha
mov
sarb
imul
test
loopne
loop
cmp
mov
xor
mov
loop
mov
cmpsl
enter
lods
inc
inc
mulb
sbb
inc
aaa
xor
inc
add
lcall
mov
pop
into
cmp
sub
cli
pop
sub
outsl
enter
rolb
mov
xchg
mov
pop
mov
shrl
shlb
int3
flds
add
sub
test
mov
movb
aad
inc
jl
dec
jne
xchg
loopne
lret
push
mov
mov
sarl
cmp
shl
inc
outsb
pushf
mov
mov
mov
pop
in
inc
add
or
mov
jbe
xchg
inc
lock
xchg
push
popa
mov
loopne
add
fwait
pop
dec
cmp
push
test
inc
mov
ss
jae
mov
loopne
sahf
daa
cmp
addb
shl
sti
fidivrl
dec
ret
mov
in
icebp
gs
jle
in
inc
mov
iret
dec
inc
adc
mov
faddl
aaa
fmul
out
sub
push
popf
xchg
lret
and
cmp
add
enter
in
pop
dec
xlat
dec
scas
pusha
and
sbb
call
mov
pusha
fmull
mov
push
repz
in
ret
lock
and
les
mov
add
sbb
in
mov
dec
aaa
push
movsl
inc
push
ret
mov
xorb
jns
add
popa
mov
adc
pop
xchg
pusha
mov
add
cwtl
out
pop
jle
shlb
aas
pop
sbb
add
movsl
jo
push
jg
xor
rolb
pusha
loopne
push
out
iret
xchg
bound
add
addb
jg
xor
out
in
shlb
push
mov
and
sarl
inc
loop
loopne
loop
adc
fnsave
and
xchg
in
popf
mov
add
test
shl
jbe
popa
jecxz
mov
xor
fcomps
rep
sub
enter
outsl
in
mov
push
repnz
add
loopne
or
insb
push
jg
pushf
out
cli
add
rorb
mov
push
icebp
mov
movsl
push
stc
push
in
mov
xchg
jns
scas
pusha
rolb
repnz
sub
or
addl
add
fnclex
stos
lods
pusha
mov
add
jb
in
push
jg
add
inc
loopne
adc
ja
and
xchg
dec
mov
inc
cmpsl
out
gs
lahf
pusha
out
shrb
cmpsl
jae
jg
mov
xor
mov
cld
ret
mov
movsl
or
pop
mov
jp
cmpsl
or
loopne
and
mov
orl
icebp
sub
fldl
test
bound
or
and
push
push
and
loopne
add
lds
and
inc
lret
mov
push
fistpll
or
or
push
bound
shlb
imul
and
fisttps
pusha
xor
add
add
pusha
mov
xchg
inc
adc
add
out
jno
outsl
into
into
test
loopne
cmc
adc
imul
cmp
sti
ss
jno
pusha
loopne
shlb
loope
mov
mov
shlb
inc
pop
or
xor
mov
sbb
imul
inc
in
js
loopne
mov
out
mov
and
inc
jno
insb
scas
js
loopne
mov
loopne
popf
xor
loope
fistl
mov
shlb
das
jnp
ja
jl
mov
stos
pop
xchg
rcrl
push
fstpt
jae
adc
loopne
mov
insb
and
add
pusha
dec
lahf
jo
cmp
dec
xchg
inc
dec
inc
hlt
jg
mov
cmc
mov
je
add
mov
jp
fwait
aas
cmpsl
rcrb
ljmp
rclb
cmp
jo
test
stos
inc
loopne
dec
icebp
and
shlb
and
mov
aas
dec
int
loopne
addb
mov
arpl
imul
and
sbb
pop
bound
lret
scas
addb
dec
mov
hlt
scas
loopne
push
jb
pusha
pusha
sti
cwtl
jecxz
cmpsl
xchg
shll
rorb
mov
xor
pop
mov
add
and
sbb
push
lret
outsl
test
add
push
cmp
clc
out
loopne
xchg
mov
pop
jae
push
pop
xchg
xchg
jle
aas
jno
jo
mov
pop
jmp
dec
es
loopne
scas
test
pusha
fdivrs
jl
jge
les
cmp
daa
rorl
cwtl
lds
or
and
shl
and
push
push
fldt
mov
sarb
test
pusha
stos
mov
arpl
fsubs
imul
sub
loopne
inc
imul
add
mov
rolb
inc
jge
mov
lds
fld
fs
pusha
xor
mov
je
cmp
adc
xchg
sub
pusha
pusha
addl
in
sub
inc
inc
bound
and
mov
loopne
add
repz
lods
and
and
fisubrl
rol
xchg
pushf
test
pop
push
ret
cltd
mov
stc
fimull
lret
and
mov
sub
rcr
aam
sub
out
mov
stos
mov
pushf
adc
sbb
shlb
xor
arpl
enter
les
mov
sar
inc
mov
fldl
rorl
sub
and
push
and
mov
loopne
pop
lret
mov
add
rorb
add
adcl
xchg
iret
fwait
and
ja
push
mov
mov
ss
push
xor
int3
pop
fildll
fscale
dec
in
test
or
out
or
lods
les
loopne
jecxz
ret
lret
mov
shl
fiaddl
inc
jmp
and
mov
das
pop
ficomps
sub
pusha
jnp
shlb
stos
loopne
das
aam
shr
pmuludq
adc
xlat
out
inc
jno
iret
imul
sbb
add
int
nop
mov
push
shlb
fadds
and
and
dec
dec
and
loopne
mov
mov
inc
in
fldl
loopne
sub
or
push
xlat
dec
aaa
sbbl
iret
bound
inc
add
sbb
nop
fldl
inc
add
loopne
into
jl
insl
mov
sub
pusha
sub
inc
and
insl
outsb
xchg
ret
cmp
in
pusha
orb
pusha
mov
nop
out
fldt
insb
mov
push
mov
addb
xchg
sbb
dec
dec
adc
add
cltd
pop
int3
xchg
daa
add
lret
cmp
call
mov
repnz
loopne
mov
xchg
subl
mov
mov
int3
aaa
pop
imul
push
pop
adc
mov
stc
test
inc
dec
inc
mov
dec
idivl
inc
adc
mov
mov
pop
mov
movsl
fneni(8087
cmp
jp
cltd
and
inc
loop
mov
loopne
pop
and
push
push
outsb
lret
andb
dec
fsubrs
and
cwtl
loope
rolb
andb
pusha
test
mov
into
jl
or
movsb
shlb
inc
push
mov
loopne
mov
or
out
xchg
inc
pop
and
inc
mov
loop
and
and
es
dec
sbb
loopne,pn
test
loopne
inc
xorb
add
add
jb
imul
pusha
pusha
ret
mov
lea
mov
mov
nop
inc
ret
mov
pusha
cld
inc
shlb
add
loop
aas
scas
nop
inc
cmpsb
andb
leave
or
xor
rcrl
mov
outsb
scas
loopne
dec
das
sarb
jp
xor
mov
sub
rclb
js
mov
add
ljmp
fucomi
lods
mov
pusha
and
outsl
xchg
xchg
xchg
dec
mov
iret
adcl
in
js
fsave
stos
xlat
into
outsl
sbb
loop
or
pusha
into
push
lret
popf
in
sbb
adc
sahf
add
mov
jg
inc
cmpsb
rolb
inc
adcb
sbb
shlb
dec
lret
ficoml
inc
addb
loopne,pn
in
lea
loopne
xor
sbb
aad
mov
cmpsb
rolb
sahf
adc
mov
push
jge
int
inc
sub
sub
pop
sbb
pop
clc
push
daa
arpl
sarb
inc
and
ss
adcl
loopne
fs
and
xchg
adc
rol
pusha
mov
cmpsb
andb
shlb
hlt
sbb
rcr
mov
loopne
fistps
add
js
addr16
cli
leave
test
shl
and
aad
push
dec
fisubl
clc
add
jno
xor
mov
xlat
xchg
sti
popf
loop
scas
rolb
and
aas
mov
jbe
outsb
add
sbbb
pop
iret
mov
lahf
pop
xchg
cmpl
scas
add
jp
lret
xchg
inc
push
mov
loopne
sbb
mov
inc
ds
cs
inc
sbb
iret
aam
xchg
sar
imul
aas
in
nop
and
mov
push
loopne
push
pop
pop
dec
or
add
sub
and
and
cmp
and
js
jnp
jge
shlb
stos
shl
ficompl
mov
sbb
xchg
xlat
shrb
jnp
mov
das
lcall
xor
jns
in
mov
add
mov
and
sbbb
cmp
ret
push
rolb
mov
addb
out
cmp
jae
adc
arpl
fistps
mov
addb
pop
mov
arpl
mov
adc
loopne
pop
xor
push
divb
xchg
lcall
xchg
mov
mov
dec
sub
inc
cmp
es
cmpb
loope
and
or
push
xchg
adc
aam
lahf
popf
nopl
sub
rclb
inc
out
jp
fs
cmp
fcom
aaa
dec
xchg
loopne
adc
mov
xchg
pop
enter
xchg
mov
mov
sub
andb
pop
inc
jb
inc
sub
ja
je
mov
in
fisttpl
stc
jl
mov
xor
and
inc
mov
jecxz
in
jl
add
and
mov
psubusb
mov
pushf
scas
mov
inc
jmp
out
gs
sub
inc
dec
xor
dec
pushf
in
int
aaa
pop
shlb
jno
adc
fmull
sbb
hlt
out
js
ja
ret
stos
cwtl
enter
pop
movswl
mov
popa
push
jmp
pop
cmc
in
fidivs
std
out
mov
jecxz
push
dec
lret
inc
add
pusha
and
xor
lahf
mov
icebp
fwait
mov
sub
and
xchg
sub
loopne
jb
xchg
sub
dec
cltd
les
xchg
lock
jnp
pop
lds
test
jns
inc
rorb
inc
push
nop
dec
lods
loopne
js
test
dec
sbb
sarb
jmp
inc
jecxz
js
nop
imul
lods
andb
out
mov
ret
mov
addb
adc
xchg
push
jb
jge
mov
nop
dec
xor
test
mov
insb
dec
rol
rorb
into
cmp
mov
xchg
repnz
insb
ja
loopne
pop
out
cli
fnsave
ficomps
loop
stos
addb
loopne
push
clc
xchg
sahf
adc
mov
inc
adc
inc
jmp
andb
xchg
mov
pusha
ljmp
and
or
scas
and
js
loopne
mov
scas
mov
orb
test
loopne
xchg
inc
lods
out
shlb
add
testb
dec
imul
jnp
int3
adc
loopne
clc
push
pop
adc
fsubr
mov
cwtl
mov
nop
xchg
mov
sbb
out
mov
xchg
adc
sbb
dec
adc
and
mov
add
mov
and
addr16
insb
sub
addb
ficomps
jle
ficoml
std
add
sbb
pusha
dec
lds
xchg
fxam
pop
mov
les
sbbb
cmp
dec
frstor
ficoml
rorl
and
mov
mov
pop
mov
cmp
sub
or
fucomi
adcl
imul
lcall
jbe
push
sub
lcall
fisubl
and
push
jmp
xchg
and
into
mov
push
jno
loop
push
jne
xor
cmp
xchg
mov
and
add
fucom
sbb
push
dec
xchg
loopne
xor
push
mov
sarb
jo
sub
inc
lods
push
ret
or
pop
sti
clc
js
adc
icebp
into
imul
outsb
pop
mov
sbb
mov
sbb
loopne
mov
fcomip
in
rclb
add
pop
out
jae
sbb
mov
pop
mov
dec
call
lahf
mov
mov
sub
loopne
rcll
mov
cmp
andb
inc
popf
mov
in
jnp
push
movsl
in
mov
inc
inc
stos
rolb
pusha
add
xor
add
add
inc
push
int3
sar
dec
pop
out
mov
les
add
in
daa
fldt
mov
fcmovnbe
int3
test
and
jbe
inc
mov
sbb
shrl
shr
rclb
xchg
add
sub
addb
sahf
dec
imul
dec
pushf
test
jmp
fs
mov
or
jo
add
aam
xchg
and
and
push
loopne
fmuls
mov
sbbl
test
and
cltd
pop
dec
dec
push
xor
pop
and
repz
add
fwait
cltd
dec
or
subb
fwait
sti
xchg
adc
or
pop
std
inc
scas
in
cmpsb
rolb
mov
or
push
mov
pop
shlb
fcom
in
inc
jg
jecxz
stos
jmp
inc
shl
sub
inc
adc
inc
enter
pop
push
cmp
cmpsl
hlt
mov
lahf
test
push
xchg
out
add
or
xchg
dec
andl
aaa
sub
xchg
pop
jbe
xor
and
dec
pop
gs
inc
xor
into
shll
xor
jle
lods
rorl
ss
int
or
andb
fwait
in
loopne
pusha
fwait
stos
and
mov
std
mov
inc
adc
int
lods
loopne
push
popf
dec
fs
sbb
ljmp
and
push
psubw
stos
dec
or
shlb
enter
mov
xorb
jo
pusha
inc
shlb
push
mov
loopne
xor
andb
inc
sti
arpl
addb
movsl
ds
lea
add
subb
pop
lds
push
xchg
xor
lcall
loopne
add
fidivl
inc
imul
outsb
data16
inc
lods
psubsw
inc
scas
mov
cmpl
loopne
xor
rolb
inc
fcomp
jno
add
inc
sbb
andb
pop
fidivrs
mov
fcoml
xchg
inc
fdiv
lods
shll
pop
leave
sti
sar
pop
int
cmp
lods
inc
in
fs
lcall
push
pop
insl
lret
pusha
rolb
or
addr16
mov
inc
and
add
loopne
mov
cmp
add
cmp
jg
shlb
fscale
xor
jb
ret
aaa
hlt
out
test
and
pop
xchg
ror
lods
add
or
cltd
ljmp
dec
aam
xor
pop
dec
sbb
inc
add
and
pop
mov
cli
cmpsl
adc
sbbb
push
mov
pop
inc
shrl
mov
push
jge
fmull
inc
ja
loopne
fcoml
mov
pop
cmp
sub
and
and
ja
sbb
inc
loop
aas
push
lcall
lock
pop
adc
inc
push
loopne
sbb
pop
cmp
shl
in
mov
push
pusha
loopne
popl
roll
shlb
mov
pop
xchg
dec
mov
cmp
outsb
pop
out
mov
mov
sahf
cwtl
into
xor
sbb
mov
dec
push
jp
imul
in
inc
cmp
add
rcrb
mov
imul
xchg
and
rcrb
mov
dec
and
sub
inc
mov
imul
rclb
stos
cltd
inc
mov
roll
out
push
mov
mov
sbb
ret
and
loopne
mov
pusha
cmpb
popa
sbb
movsl
mov
loopne
ss
addr16
pop
std
adc
ffree
add
cmp
std
test
inc
cmp
outsl
andb
inc
jle
stos
shlb
cmp
loopne
jnp
or
pusha
jp
rolb
jae
sub
rcrb
mov
jbe
mov
stc
sbb
lret
js
fdivs
andb
jp
dec
push
dec
push
and
cmpsl
cmpsb
and
lds
add
repnz
xor
insb
fistpll
leave
jg
add
mov
inc
mov
mov
add
add
xor
and
add
xor
add
sbb
sbb
sbb
clc
dec
mov
add
push
sbb
adc
shlb
inc
inc
adc
add
jmp
cltd
sub
add
pusha
inc
cmp
cmp
arpl
jp
add
fcompl
mov
mov
loop
inc
jmp
test
add
outsb
xlat
imul
inc
ljmp
fcoms
and
xor
pop
loope
pusha
mov
mov
pushf
mov
and
pop
out
or
daa
pop
pop
clc
mov
mov
inc
mov
mov
lcall
stos
mov
cmp
je
and
jp
and
rorl
in
mov
xchg
jp
inc
mov
shlb
andb
addb
push
mov
add
pop
shrl
addb
and
outsb
xor
mov
mov
and
ja
cmp
movl
inc
dec
popf
inc
in
leave
xor
mov
lret
lock
and
inc
scas
mov
mov
dec
lods
andb
push
cltd
frstor
in
ja
inc
in
xchg
sbb
jl
pop
mov
lret
inc
pop
outsl
push
xor
pop
repnz
mov
iret
addr16
sbb
popf
leave
dec
mov
ljmp
inc
push
mov
jecxz
or
add
aas
lds
dec
sub
loopne
scas
push
out
xchg
add
leave
cmpsb
inc
mov
xor
test
add
lock
test
push
add
jne
inc
std
sub
rcrb
leave
xchg
dec
fnstcw
cli
dec
lds
repz
pusha
rcl
push
jge
mov
cmp
adc
lods
mov
sti
aaa
ret
out
jmp
imul
popf
divl
loopne
mov
mov
and
andb
inc
rcrl
sub
ret
mov
lods
mov
and
imull
or
lret
lcall
pop
pop
dec
mov
mov
add
xchg
sub
loopne
icebp
rep
test
hlt
into
or
loopne
push
mov
loopne
shll
or
sbb
add
pusha
loopne
stos
aas
mov
mov
and
ljmp
scas
jno
outsl
insb
shll
lahf
xchg
fs
cld
clc
sar
fmull
inc
inc
adc
movsl
mov
lret
xrelease
cmpsl
stos
inc
rorb
sti
test
mov
addb
shlb
movsb
rolb
scas
loopne
pop
fistps
cmpsb
mov
in
sarl
add
add
ret
ss
pop
xchg
cmp
addl
dec
inc
shrb
add
mov
sbb
fbld
mov
sbb
loopne
loopne
adc
cld
loopne
xchg
mov
dec
mov
and
push
add
loope
sub
shl
call
dec
in
pusha
std
mov
mov
mov
jne
and
adc
sbb
and
and
cmp
pop
std
cmp
xchg
adc
lods
inc
mov
inc
and
add
inc
dec
mov
mov
int3
test
inc
mov
cld
sti
movsl
mov
fldenv
andb
cmpsb
addb
adc
fsubr
in
fwait
sbb
mov
rolb
pop
pushf
xchg
dec
int
xchg
inc
dec
xchg
popa
dec
addr16
or
loopne
inc
cmp
inc
loopne
mov
imul
cmc
inc
loop
andb
mov
addb
add
jge
mov
cmpb
pusha
or
mov
sub
inc
popf
fisttps
pusha
lahf
dec
pop
inc
fs
mov
inc
loopne
mov
repnz
dec
imul
aad
push
rolb
and
andl
adc
andb
add
mov
testb
jp
pop
ss
outsl
mov
decl
int
mov
or
outsb
mov
pusha
and
pop
cmpsl
pop
cwtl
mov
jp
pusha
pusha
insl
adc
sbb
mov
dec
mov
std
sti
je
sbb
loopne
adc
xchg
nop
outsl
mov
out
adc
inc
sar
add
pusha
pushf
and
shlb
push
lods
pusha
and
sbbb
xchg
push
and
add
mov
inc
cltd
shlb
mov
mov
loopne
dec
lods
mov
push
mov
test
hlt
loop
push
movsb
add
loopne
jle
addb
stos
mov
rolb
pusha
in
les
jno
fbstp
test
and
ja
loopne
into
add
lods
mov
mov
inc
and
add
xchg
inc
adc
mov
mov
mov
sbb
loopne
and
sbb
jns
fildll
sbb
test
pusha
es
cmp
mov
mov
and
mov
inc
mov
and
adc
andb
ljmp
stc
cmp
pusha
mov
jae
stos
testb
test
ret
push
and
scas
mov
ljmp
sbb
add
xchg
stos
mov
mov
mov
test
andb
shr
add
and
dec
cmp
push
push
fstpl
hlt
adc
push
shr
js
popf
mov
lods
jecxz
int
add
and
xor
jbe
addb
push
arpl
pop
mov
mov
push
push
and
and
sub
cmpsb
pusha
adcb
inc
sub
loopne
adc
test
jl
ds
das
push
jbe
mov
add
xor
adc
mov
mov
clc
jbe
cmp
xchg
add
mov
xchg
adc
add
add
rcrb
mov
pusha
pusha
lret
loopne
push
hlt
adc
mov
loopne
in
mov
add
pop
cmp
sbb
test
push
les
push
stc
inc
rcrb
cli
iret
dec
mov
add
rolb
push
push
push
insb
lods
add
xchg
jb
loope
or
mov
or
outsb
pop
mov
and
in
mov
outsl
and
xchg
pop
jne
cmp
or
mov
xchg
add
inc
in
xchg
in
test
mov
insb
jne
repnz
lods
mov
and
rclb
or
inc
lahf
mov
addr16
inc
add
add
loope
and
loopne
sbb
adc
das
mov
ds
xor
lret
sahf
adc
pop
leave
or
rorb
dec
sbb
add
sarb
sbb
icebp
fwait
mov
mov
cld
sti
xchg
sbb
push
mov
mov
cmc
mov
loopne
std
dec
popf
arpl
cmc
mov
and
pusha
mov
push
sbb
adc
jg
adc
xor
loopne
add
addb
cmp
icebp
mov
loopne
mov
leave
mov
jno
mov
mov
add
lods
and
jl
push
loope
outsb
addr16
pop
call
add
add
xchg
test
mov
cmp
add
xor
dec
inc
lcall
add
and
mov
outsl
or
loopne
call
cmp
lcall
jne
stc
lock
xor
xor
cld
mov
mov
add
push
aas
jno
xchg
dec
clc
pop
xchg
fdivs
pop
sub
add
push
pusha
lock
mov
mov
push
andb
add
cmp
rcll
xchg
mov
add
addb
add
jo
inc
in
or
repz
adc
xchg
jne
lock
mov
mov
and
and
xchg
aam
ss
pusha
mov
pusha
cmc
inc
inc
outsl
sti
dec
lcall
cwtl
out
dec
mov
lcall
mov
shlb
andb
mov
add
cwtl
inc
pop
in
mov
sbb
adc
sub
inc
xlat
les
inc
rclb
cmpsl
mov
mov
rolb
js
out
sub
inc
out
push
or
inc
fistpl
add
cli
movl
test
loopne
movsl
pop
mov
insb
sub
addb
mov
pusha
loop
out
pop
aad
add
pop
aam
xchg
sub
and
xchg
shrb
pusha
out
sbb
jp
lods
add
xchg
xchg
inc
mov
xorb
fwait
push
jle
mov
mov
push
fistpl
jle
push
loop
popf
leave
adc
sub
lahf
nop
dec
or
ficomps
inc
sar
neg
fsubrl
add
xor
jne
popf
into
mov
jns
sub
sbbb
jge
mov
scas
loopne
stc
fsubs
xor
insl
testl
leave
clc
jne
push
jmp
push
add
daa
scas
inc
add
clc
sub
or
jnp
push
rolb
inc
dec
insl
jg
imul
imul
dec
mov
dec
call
inc
lcall
testl
imul
dec
iret
pop
or
xorb
insb
jmp
jle
push
mov
sbb
and
rcll
notb
decl
add
mov
addb
dec
pop
sbb
shlb
clc
std
clc
mov
sbbb
and
sti
jbe
dec
inc
cld
bswap
imul
xchg
daa
inc
rcrl
inc
test
andb
stos
andb
dec
imul
sub
pusha
cmpsl
adc
and
mov
jle
gs
jns
dec
shlb
loopne
mov
and
mov
cmp
mov
cmp
push
mov
sti
rcrl
lret
lods
cmp
add
sub
aas
mov
inc
fildl
dec
dec
movb
aaa
sar
ret
or
loopne
ds
cmc
mov
daa
insl
aas
mov
das
loopne
dec
lock
out
mov
inc
and
or
inc
xor
mov
pusha
cli
fneni(8087
xchg
xchg
mov
mov
repnz
xor
ds
stos
add
stc
lods
lock
push
add
rolb
cwtl
in
outsb
icebp
mov
loopne
dec
aas
cmp
imul
jmp
mov
ret
div
fcmovnu
stos
pusha
pusha
xor
test
pusha
or
mov
adc
aaa
ret
jmp
shlb
imul
fsubs
and
cmp
pop
stc
enter
clc
jecxz
insl
nop
aaa
icebp
push
inc
add
xor
test
mov
and
mov
mov
inc
mov
pcmpeqd
add
pusha
clc
inc
xor
pop
test
cmp
add
jae
inc
or
pusha
xchg
inc
xchg
insb
test
and
negb
pop
cmp
xlat
test
cld
cli
or
inc
mov
add
mov
jecxz
rolb
cmp
jecxz
loopne
jp
pop
shl
repz
inc
jge
mov
lcall
dec
cli
mov
repz
int3
ss
mov
pusha
rclb
xor
rolb
imul
fdivr
adc
and
icebp
repnz
xchg
inc
adc
pushf
sub
inc
call
cmpsb
inc
mov
pusha
loopne
lahf
lcall
js
test
inc
jno
xor
xchg
ds
sub
scas
push
outsb
repnz
xchg
test
push
fdivrl
jge
sub
jns
enter
xor
lds
and
and
addb
mov
ret
dec
je
sub
jb
out
rol
loopne
jecxz
cmp
lcall
and
dec
mov
test
mov
pusha
fs
xor
jmp
imul
jecxz
inc
loope
addb
mov
enter
loopne
lds
inc
in
cltd
pop
fidivrs
gs
shlb
inc
push
inc
cltd
aaa
jae
mov
cld
pushf
popl
pusha
shrl
dec
nop
jns
sti
pushf
decl
fstpt
sub
stc
xor
or
pusha
out
cmp
ds
add
inc
out
enter
rol
jle
push
dec
inc
jae
inc
ljmp
mov
movsb
and
xor
aad
xlat
sbb
in
cld
out
rclb
adc
stos
aaa
in
add
inc
jo
push
lret
xor
mov
int
pop
fs
xorl
cltd
dec
or
inc
inc
loope
add
and
ret
popl
popa
inc
shll
jg
rcl
adc
dec
mov
stos
shl
and
or
pusha
outsb
push
dec
mov
rorb
adc
sub
loop
hlt
mov
mov
sub
push
xlat
cwtl
lock
and
imul
aas
add
inc
daa
xor
insb
mov
adc
add
shlb
dec
outsb
mov
xchg
hlt
sbb
nop
jno
insb
das
cltd
add
loopne
sbb
sbb
cmp
test
jne
inc
lret
fiadds
add
movsb
pusha
sar
shrl
mov
lock
pop
add
xlat
popa
jne
jb
les
mov
loopne
xchg
push
call
stos
add
addb
testb
pop
add
aaa
cli
aam
in
lahf
xor
das
mov
sbb
mov
inc
push
cltd
call
mov
pusha
ja
out
dec
xor
inc
imul
xchg
lds
sbb
es
sahf
scas
push
add
test
push
andb
and
pusha
xchg
out
repnz
push
adc
xchg
and
adc
aam
hlt
or
inc
mov
popa
test
loopne
xchg
and
orb
mov
insl
xor
pusha
loopne
sub
shl
loopne
shll
loop
lock
and
inc
addb
inc
mov
ret
jb
add
mov
popa
and
xchg
jns
pusha
and
dec
aaa
xchg
xor
js
add
shll
and
xchg
leave
test
inc
nop
jge
lahf
pop
lods
mov
in
inc
mov
cltd
in
mov
cmpsb
loopne
mov
pop
pop
and
cltd
jb
pop
mov
lds
pop
add
fcmovb
jne
or
enter
mov
jl
lahf
clc
lahf
pushf
mov
loopne
and
dec
mov
in
lods
inc
loopne
push
call
in
xchg
mov
call
enter
inc
loopne
push
loopne
fisubs
mov
inc
or
or
jp
xor
insb
xlat
movsb
inc
inc
jg
sbb
in
icebp
int3
push
inc
add
idivb
nop
repnz
leave
jp
test
lea
lods
pusha
inc
mov
jb
xor
cs
pusha
aaa
add
pusha
mov
dec
mov
inc
push
sub
add
je
aaa
jmp
push
andb
xchg
and
jecxz
movsb
inc
loopne
movsb
andb
xchg
fldt
sbb
dec
int3
inc
daa
fsubp
mov
push
andb
push
mov
shlb
andb
add
mov
test
inc
mov
aam
cmc
jbe
mov
call
xorl
xchg
loopne
daa
push
out
mov
fidivrl
push
push
int3
daa
or
xorb
dec
imul
stos
loop
loopne
add
pusha
test
pusha
mov
andb
bnd
mov
push
xchg
push
and
fs
jl
xchg
loopne
pop
xchg
js
add
push
nop
jmp
rolb
and
pop
jns
mov
cmp
cwtl
push
jg
inc
mov
decl
inc
mov
inc
sub
xchg
pop
adc
add
dec
lea
dec
stc
gs
lahf
jno
into
arpl
mov
loop
aas
mov
prefetcht0
lds
xor
lcall
pop
mov
loop
cmp
cmp
xor
mov
inc
and
pushl
andb
addb
xchg
jmp
add
add
or
mov
pusha
pusha
inc
cmp
andb
adc
or
xor
and
xchg
cmp
faddl
and
decb
inc
push
inc
addb
out
daa
jno
jb
loopne
pushf
add
inc
andb
loopne
pop
das
xor
add
pop
repz
cmp
sbb
sub
lret
push
rolb
or
pusha
mov
pusha
pusha
push
fs
mov
ret
sub
add
pop
hlt
jcxz
pusha
mov
push
or
inc
xor
and
adc
andb
in
jae
mov
andb
pusha
inc
sbb
adc
andb
lret
adcl
dec
aaa
mov
stos
ret
fiaddl
or
cmp
mov
add
cmp
inc
adcb
ljmp
push
jo
mov
adc
push
mov
shrl
xchg
mov
test
mov
and
push
sub
xchg
addb
push
outsl
jne
add
mov
test
and
out
xor
shlb
cmp
pusha
add
movsb
add
stos
and
and
mov
adc
mov
shl
and
cld
into
jnp
pushf
add
loopne
push
cmp
jl
mov
mov
jb
sub
loope
xchg
push
inc
add
mov
push
rorb
mov
and
lahf
test
mov
clc
cli
test
and
loopne
in
lahf
daa
cmp
adc
xor
stc
test
loopne
mov
shl
and
push
mov
stos
loopne
xchg
ja
lods
sbb
mov
inc
dec
push
mov
sub
loopne
inc
rolb
push
lret
sbb
scas
add
pop
xor
cli
inc
les
mov
add
bound
jecxz
pop
sub
jg
xchg
test
add
dec
mov
xchg
dec
cltd
or
rcrb
mov
popf
out
dec
inc
jle
mov
and
inc
or
loopne
mov
int3
mov
test
cmp
jae
adc
loopne
and
subl
push
mov
test
mov
shrb
or
rolb
mov
ret
loopne
shlb
dec
sub
test
addb
pusha
ffreep
stos
test
pop
mov
xor
std
outsl
mov
or
hlt
xor
loopne
ja
clc
rolb
pop
cmp
loop
adc
gs
or
inc
push
orl
icebp
outsl
pop
movb
shlb
rolb
fwait
inc
and
mov
and
and
sub
je
and
and
mov
xchg
push
shl
in
mov
andl
sub
jp
mov
add
sbb
xchg
pop
push
jecxz
addl
pusha
mov
sbb
int3
mov
add
push
je
pusha
inc
mov
or
rcll
xor
jg
and
ret
dec
inc
popa
jns
mov
push
sbb
mov
lret
loopne
mov
loopne
dec
xchg
sub
xchg
xchg
pusha
push
adc
les
cli
pop
cwtl
testl
or
add
pusha
adc
stos
and
cltd
fcoms
repz
inc
pop
arpl
gs
add
sub
lret
fstl
inc
test
loopne
xor
xchg
mov
stos
xchg
sahf
adc
fwait
pop
dec
or
pop
repz
inc
inc
es
and
jns
loopne
jg
jge
shl
push
inc
add
jno
push
sbb
je
and
cmc
push
dec
jns
mov
stc
cld
push
divl
hlt
and
ss
insb
mov
and
or
int
lods
insl
sti
repnz
adc
push
jbe
push
push
fnstenv
cltd
push
push
je
gs
add
rol
or
jle
mov
mov
jl
mov
sub
mov
lods
add
xor
dec
sbb
sahf
cmc
dec
lock
add
inc
lret
mov
loopne
cmpsb
shlb
cmp
rcrb
adc
add
cmpsl
cmp
inc
addb
fwait
jnp
popl
loop
in
fwait
cli
and
add
or
inc
lret
loope
pusha
and
xchg
ljmp
repnz
add
add
jne
bound
and
xchg
insl
lcall
aas
lea
pusha
pusha
mov
sub
dec
dec
fwait
ss
inc
addr16
mov
jno
jmp
or
les
and
and
loopne
mov
push
in
mov
jg
and
loop
push
dec
or
rcrb
inc
outsl
pop
push
add
fsubrl
xor
cmpsl
jo
or
and
pop
dec
cmp
mov
lds
ret
dec
out
mov
sub
or
test
sub
mov
inc
lret
or
shl
lods
rolb
outsb
movsl
popa
xor
pusha
and
mov
fcoml
lods
in
loope
test
and
cli
mov
adc
pop
add
add
fldl
repz
mov
mov
cmp
mov
dec
sbb
mov
out
das
xor
add
pusha
sti
cmp
imul
cli
std
mov
addb
in
add
lahf
lret
int3
frstor
sub
and
mov
rclb
and
mov
stos
xor
imulb
pop
xor
sti
test
cwtl
out
cmpsl
add
add
xor
mov
jnp
inc
pusha
mov
nop
arpl
das
pop
sub
mov
and
loopne
jge
jg
add
add
andb
mov
mov
jle
movsl
fisttpl
ret
mov
mov
or
loopne
push
lods
popf
mov
cmp
pusha
loopne
aam
pop
pop
movsl
ret
add
shrb
jle
enter
push
ljmp
mov
mov
inc
xchg
inc
daa
jmp
mov
xor
push
add
jecxz
lds
insl
sub
adc
clc
and
adc
inc
pusha
or
xchg
je
inc
inc
test
xor
pop
xlat
gs
popa
mov
testl
aaa
xchg
lcall
inc
jne
mov
test
cmp
shl
nop
movb
lock
jnp
andb
mov
jge
add
inc
addb
adc
addb
inc
rcrb
add
rolb
sub
fisubl
ret
sbb
jae
nop
lock
xor
fwait
lret
mov
push
jecxz
pop
lea
push
and
inc
sbb
repnz
pusha
in
and
add
andb
andb
arpl
andb
shll
push
add
stc
mov
andb
inc
pop
icebp
pusha
movsb
addb
mov
enter
aam
ljmp
pushf
pop
add
negb
pop
mov
js
mov
cmp
push
dec
mov
sbb
mov
pop
pop
ljmp
andb
divb
pmaddwd
das
sub
divb
mov
pop
je
cmp
fmull
jns
mov
pop
mov
rolb
jae
mov
cmp
push
cli
add
cmp
sbb
add
xchg
sub
add
xchg
ret
sbb
loop
mov
sbb
cmp
cmpsb
andb
dec
dec
sahf
daa
lds
inc
pop
mov
hlt
cmp
add
and
add
add
mov
cmp
lahf
pop
call
scas
lods
jo
add
cli
add
mov
add
sbb
inc
adc
sbb
adc
and
testb
inc
mov
adc
add
pop
lcall
in
movsb
loopne
arpl
das
jo
xchg
inc
xor
rol
dec
add
xchg
dec
mov
xchg
add
add
bound
fstps
push
add
xorl
dec
cmpsb
add
mov
push
mov
push
push
pop
lock
lods
push
fbld
ja
scas
shl
or
jae
andb
fisttpl
cmp
and
test
add
sub
outsl
mov
add
hlt
sub
pusha
dec
ret
rclb
adc
cmpsl
sub
mov
loopne
dec
add
dec
add
lods
int
or
sub
shlb
loopne
sbb
fmuls
and
rolb
test
loopne
jg
and
xor
or
xchg
mov
add
call
inc
out
jmp
mov
adc
xchg
negb
loopne
and
loopne
pusha
inc
repz
xchg
bsr
jns
aas
jb
jle
mov
arpl
jne
xchg
and
sub
sar
mov
mov
shl
arpl
xor
add
gs
cmp
icebp
outsl
mov
fildll
or
scas
dec
and
loopne
orl
xlat
inc
and
mov
jle
sbb
movsb
and
imul
mov
int
loop
and
and
shlb
les
sar
push
mov
push
inc
std
push
scas
dec
xor
add
push
add
mov
ror
sbb
cmp
or
pusha
xchg
push
shlb
jb
and
pop
lret
adc
and
andb
pusha
loopne
js
dec
mulb
jmp
call
and
mov
insl
jbe
enter
and
hlt
sub
and
mov
inc
mov
jmp
inc
mov
push
and
jp
mov
test
xchg
fs
inc
rclb
sarb
xchg
or
or
loop
cld
pop
cli
popf
outsb
pop
shlb
mov
sub
aad
loope
cwtl
int
test
loopne
sub
pusha
stos
pusha
clc
jl
stc
cwtl
icebp
add
rclb
ljmp
and
and
or
pusha
ficoms
xor
iret
sub
lret
daa
cmp
cmp
mov
pusha
shl
andb
xchg
rcll
out
adc
cmp
add
fisttpl
shl
ljmp
pop
sub
and
xchg
sbb
jnp
jno
rolb
mov
or
and
inc
call
mov
inc
mov
lret
lret
sub
jnp
add
loopne
icebp
ss
decb
lahf
pusha
imull
insb
dec
shr
rorl
pusha
and
mov
sti
je
loopne
sub
mov
push
adc
clc
sub
sbb
in
sub
shlb
and
fcompl
and
rolb
and
and
fdivl
inc
es
rclb
das
mov
or
orb
rcl
orl
ja
add
aas
push
inc
xor
dec
add
mov
inc
jge
ffreep
adc
fldcw
ret
repz
ljmp
aas
out
imul
int3
arpl
lahf
inc
mov
and
sub
out
xlat
push
pop
in
add
mov
pop
sbb
clc
out
pop
rcrl
out
jge
cld
ja
jle
pop
push
shlb
adcb
inc
push
and
or
jb
and
loopne
addb
lahf
fldenv
loopne
or
xchg
cmp
sbb
mov
xchg
sbb
dec
imull
inc
mov
stos
add
popa
out
pop
xor
push
mov
mov
sbb
pop
call
mov
inc
andb
shlb
pusha
mov
push
jl
dec
mov
add
loop
xchg
or
loopne
loopne
mov
pusha
jl
testb
mov
pop
lock
xchg
ja
add
fnsave
mov
push
movsl
sahf
frstor
ss
push
add
test
mov
xchg
inc
push
out
fmulp
adc
mov
xor
movsb
loopne
ret
mov
aas
xchg
mov
addb
and
dec
aad
pushf
notb
pop
pop
jg
adc
loopne
dec
xchg
xchg
xor
xchg
adc
pavgw
xchg
in
push
scas
cmp
xchg
mov
leave
cmpsl
dec
leave
pop
jb
add
out
pop
cmp
loopne
pushf
sub
and
pop
shll
subl
push
jmp
inc
repnz
jle
cmp
mov
cmp
dec
sbb
pop
pusha
push
add
mov
jbe
sub
xchg
dec
and
arpl
xor
pusha
xchg
pop
test
inc
pushl
mov
aad
and
fisubrl
cmp
dec
dec
leave
jns
popf
jnp
mov
cmp
mov
add
inc
pusha
cltd
xchg
movsl
std
out
cltd
cmp
xor
movsl
jb
loopne
hlt
outsb
pop
paddd
sti
add
call
xor
mov
and
in
pop
hlt
dec
sbb
sub
insb
sbb
dec
mov
sbb
aad
in
mov
add
arpl
jg
js
add
loopne
or
sub
cmpb
mov
shlb
and
inc
scas
fldt
loopne
lods
mov
and
lcall
movsl
hlt
cmp
and
add
das
inc
push
jne
mov
and
sti
cmc
and
outsb
mov
push
shll
add
pop
jns
imul
add
pop
mov
cltd
fcomps
push
or
jnp
loopne
cmpsb
and
sub
or
mov
jp
stc
mulb
jo
aaa
dec
and
sbb
fisubrl
add
jge
jle
or
add
imul
stos
and
rcll
pop
andb
inc
mov
mov
out
fsubrp
pop
adc
dec
imull
adc
mov
rclb
enter
insb
inc
mov
jbe
or
or
inc
jecxz
in
jae
decl
sub
and
adc
mov
pop
lods
loopne
and
mov
jbe
arpl
les
dec
inc
data16
popa
xchg
push
stos
and
fsubl
pop
test
add
and
cmpb
fcmovnb
cmp
lahf
dec
fsubl
cmp
adc
fcoml
inc
imul
mov
xchg
cmpsl
pop
and
and
dec
test
xorb
scas
loopne
cmp
push
popa
mov
popf
popf
mov
mov
ja
cwtl
push
rol
and
push
mov
cmpl
sbb
sbb
loopne
lods
cmpsb
and
addr16
lcall
out
rcr
and
movsl
dec
xor
mov
pop
add
aad
fiaddl
pusha
inc
sbb
icebp
loope
int3
sahf
cmpl
shl
cld
mov
scas
enter
and
sub
mov
push
push
xchg
jb
js
mov
loopne
pop
xor
or
rcl
or
pusha
loopne
fildll
adc
andb
mov
test
jl
lods
loopne
outsl
mov
daa
push
and
and
cs
pusha
leave
mov
push
adc
cmp
sbb
jmp
mov
insb
mov
mov
cltd
xchg
mov
xor
out
jecxz
rorb
arpl
jb
sub
out
andb
mov
loope
push
shlb
scas
shl
adc
clc
mov
mov
lret
add
lds
pop
ss
jnp
shlb
add
jnp
addb
mov
call
jl
sbb
and
cwtl
dec
sbb
cmpsl
stos
inc
popa
and
mov
repnz
and
and
xor
and
jne
mov
ret
cld
pusha
mov
inc
mov
je
iret
and
jnp
and
out
imul
sub
loopne
mov
xchg
fwait
xor
and
inc
add
sbb
pushf
pusha
insb
inc
xchg
jmp
test
and
inc
jbe
imul
rorb
rcrl
sub
mov
sahf
clc
idivb
mov
push
test
inc
xor
pushl
lods
push
inc
add
test
rorb
mov
or
sub
cmpsl
jecxz
sbb
cmp
shr
fildl
xor
push
mov
inc
in
xor
cli
pushf
mov
shl
ret
mov
jp
in
jns
fwait
in
cmp
out
aam
push
clc
loope
dec
xlat
sub
push
shlb
addb
add
and
push
push
and
sub
mov
mov
out
pop
icebp
adc
jb
mov
jno
in
pop
movsl
out
cmp
xchg
cld
lcall
frstor
cmp
jecxz
and
and
inc
mov
jmp
mov
adc
cli
xor
mov
pop
ja
lcall
fwait
dec
rcl
sbb
loopne
mov
add
push
xchg
bound
xchg
pusha
cmp
mul
sahf
sahf
sub
enter
rclb
clc
push
pusha
pusha
add
loopne
adc
mov
rol
cmpsb
inc
add
mov
mov
pop
sbb
adc
sbb
aam
mov
loopne
pop
xor
ljmp
lahf
jecxz
add
pusha
orb
jp
or
scas
shrl
mov
imul
cmp
sub
shlb
je
mov
popa
push
loope
cld
cmp
mov
and
pop
adc
movsb
mov
inc
pusha
push
sub
and
and
loop
mov
xlat
lret
packuswb
stos
rol
shl
inc
add
pop
jge
cmpsl
test
andb
icebp
sti
dec
ror
push
ja
jl
mov
out
mov
sub
and
lcall
test
add
or
das
ficoms
loopne
cmp
add
xor
or
rolb
add
sub
inc
and
pop
iret
adc
xchg
cmpsb
and
fsts
roll
pop
std
adc
call
mov
movsb
and
js
jb
fstps
fwait
test
push
jle
mov
jmp
arpl
sbb
and
pop
push
push
or
cmpb
inc
shr
iret
shl
and
inc
sbb
or
mov
pop
xchg
call
add
add
out
loopne
and
and
int3
outsb
pop
cli
iret
and
add
sbb
aam
mov
out
lcall
adcl
jb
push
pop
ja
jmp
and
jge
pop
fs
cmpsl
and
cs
pop
imul
rolb
in
or
rcl
rolb
addb
data16
addb
bound
mov
test
in
je
loopne
fs
adc
out
stos
shlb
and
pusha
or
add
std
mov
inc
add
ret
cld
mov
shlb
call
notb
lods
mov
jle
punpcklbw
inc
xchg
jnp
aaa
fnstenv
fcmovne
xor
pop
pop
jp
xchg
pop
aas
cmp
jmp
push
ljmp
cltd
and
mov
add
and
call
test
shl
adc
and
sarb
sbb
je
or
loopne
jae
addr16
dec
enter
loopne
cmpsl
push
push
pop
in
mov
and
les
jns
addb
addb
mov
mov
andb
pusha
cmp
aaa
movsb
mov
xchg
mov
subb
mov
and
adcl
subb
hlt
add
movsl
push
inc
lds
sbb
scas
add
ret
jecxz
pop
shlb
cmpsl
push
rolb
mov
pusha
add
divl
and
sub
int3
pop
shlb
add
shlb
out
data16
pop
sub
add
nop
push
cmpsl
push
call
add
mov
inc
mov
push
rcrb
xor
add
aaa
sbb
sbb
mov
ss
mov
mov
inc
mov
add
out
stc
mov
mov
scas
fisttpl
fs
mov
mov
int3
add
add
fadds
dec
out
jl
adc
dec
repnz
push
repnz
scas
negb
ror
outsb
push
cmpsb
pusha
pusha
xchg
inc
out
push
loopne
xchg
mov
mov
movl
or
jl
cwtl
and
xchg
pop
adc
imul
jecxz
pop
or
sub
shlb
cltd
movsb
mov
jno
jbe
or
out
jle
pop
xor
sub
rolb
ss
xor
push
rorl
xchg
fsubrl
lods
jmp
pusha
shl
inc
xchg
addr16
mov
fwait
pop
push
push
adc
sub
pusha
orl
cmp
cli
or
in
mov
out
xor
inc
jmp
push
lods
mov
pop
cmp
mov
out
jmp
add
pop
xor
mov
mov
insb
jae
add
addb
aaa
loopne
fs
lret
push
xchg
addb
inc
inc
pop
imul
xchg
es
pusha
xlat
fstpt
inc
inc
xor
push
pusha
loopne
push
mov
pusha
scas
add
loopne
dec
mov
pushf
out
or
xor
and
jmp
sub
cltd
jbe
or
and
out
movsl
push
jnp
cltd
mov
loopne
push
or
and
add
cmp
loopne
mov
andb
add
popa
int
pop
cmp
jmp
cs
mov
adc
sbb
data16
loopne
leave
sub
in
adc
mov
jnp
adc
and
sub
rcrb
push
cltd
shlb
shrb
in
cmp
addb
andb
mov
ror
jge
fs
push
icebp
in
add
mov
sbb
pusha
push
mov
add
sbb
psubw
and
adc
xor
and
inc
cwtl
into
in
into
inc
jne
mov
mov
sti
movsbl
loope
int
adc
pusha
mov
mov
in
cld
pop
push
sub
pusha
int
xor
jge
clc
fisubrs
mov
jmp
inc
shrb
and
call
push
and
outsb
cmp
push
movb
sbb
andb
pop
jns
sub
and
scas
test
pusha
clc
mov
loopne
stos
loopne
mov
jecxz
shlb
adcb
inc
cmp
or
test
inc
sbb
into
pop
mov
adc
shrb
pop
push
sub
shlb
loope
mov
sbbb
mov
jmp
shlb
retw
mov
mov
pusha
add
iret
movsl
mov
or
inc
hlt
sar
sti
sub
fdivrs
movsl
cmp
push
loopne
dec
dec
scas
out
loope
addb
or
pusha
mov
lret
out
test
lods
and
addr16
pop
xor
stos
les
add
out
aas
sbbl
pusha
dec
adc
shlb
inc
and
inc
ficompl
mov
jne
aad
stos
fs
or
adc
push
dec
mov
pop
shrl
and
ja
pop
mov
sub
pop
idivb
int
dec
mov
add
push
sub
movq
pop
arpl
loopne
in
pop
dec
inc
loopne
adc
rorb
int3
push
push
add
loopne
jbe
fwait
mov
in
and
xchg
and
rcr
aas
mov
sub
loopne
mov
sub
pusha
ror
mov
or
inc
lcall
mov
loop
dec
inc
imul
cmc
mov
add
mov
and
pop
icebp
pop
int
mov
inc
popf
xchg
dec
push
arpl
pusha
loopne
repz
add
and
and
ret
pop
lods
add
addb
je
loopne
inc
xchg
lcall
nop
push
bound
shll
andb
aas
dec
stos
mov
pusha
test
xorb
add
insb
jno
inc
iret
xchg
add
pusha
add
das
sbb
imul
mov
inc
inc
fadds
xchg
sbb
cmp
xlat
xchg
push
aam
pop
into
negl
fmuls
jbe
mov
cmpsb
mov
or
sbb
clc
push
lcall
push
inc
inc
mov
push
inc
loop
and
and
add
dec
push
cvtpi2ps
push
jle
js
movsl
push
mov
addr16
add
repnz
test
loope
push
push
inc
pop
ret
inc
sbb
scas
jl
mov
sbbb
dec
lods
and
mov
dec
jns
inc
test
mov
fdivr
mov
mov
inc
rclb
inc
push
repz
ret
and
sbb
xor
aam
fbld
mov
pusha
mov
rol
mov
inc
mov
sti
test
mov
jecxz
mov
sarl
jmp
and
inc
sbb
xlat
pushl
imul
ljmp
addb
mov
dec
rcl
loopne
int3
xor
pushf
push
icebp
xorl
inc
cmp
push
dec
stos
and
hlt
mov
loopne
mov
xor
or
shl
push
adc
fmuls
jo
push
rolb
test
inc
loopne
pop
jmp
mov
dec
dec
xor
lock
and
jecxz
sbb
ficomps
addb
mov
pop
mov
mov
add
add
rclb
mov
mov
xor
jne
pop
loope
int3
sbb
into
and
ljmp
add
in
jne
in
into
sbb
push
push
and
pusha
jmp
dec
rolb
add
mov
jge
call
mov
test
and
fisttpl
and
popa
ret
mov
inc
mov
jle
arpl
cmp
jo
and
insl
push
dec
jecxz
nop
incb
pusha
loopne
mov
imul
out
jl
jle
mov
inc
loopne
cmpsb
mov
push
pop
ljmp
xchg
jecxz
inc
and
rolb
add
inc
mov
aam
stos
and
xchg
loopne
nop
imul
aaa
andb
in
dec
lods
addb
xor
int
shlb
dec
dec
sub
loopne
test
add
add
jno
and
and
inc
mov
push
imul
cwtl
or
addb
inc
pusha
fnsave
andb
mov
ja
js
inc
and
adc
out
or
push
ss
aad
jne
in
or
mov
arpl
pushl
xlat
push
inc
cmpb
lcall
fisttpll
fadds
rcll
add
pusha
test
and
movsb
pusha
pusha
fwait
mov
sbb
bnd
jle
mov
push
cmc
mov
push
or
subb
push
loopne
mov
fcoms
push
icebp
jle
fstp
stos
and
cmp
aam
or
push
loopne
add
mov
rorb
push
inc
pusha
lret
in
jle
jne
sti
fistpl
int
pop
loop
incl
rcrb
pusha
xor
lahf
ss
sub
sahf
add
adc
xor
xchg
sbb
add
pop
xchg
lods
pusha
loopne
mov
fwait
mov
and
xor
mov
xchg
xchg
jg
es
mov
fdivr
and
and
pusha
and
shl
mov
sub
add
mov
loop
in
daa
mov
lock
and
sbb
push
mov
fistl
fmull
pusha
push
fists
add
in
cld
mov
shlb
cwtl
aad
pop
fisttpl
aas
or
inc
mov
inc
pusha
mov
pusha
adc
fbstp
jb
sub
sub
icebp
ja
movsb
rol
pusha
rcr
int
mov
shll
cmp
or
and
ficomps
inc
jbe
add
inc
add
mov
shlb
lret
mov
pusha
hlt
pop
add
pusha
pop
adc
lret
mov
inc
mov
cmp
shl
sub
pop
or
add
mov
outsb
andb
xor
or
not
inc
loopne,pn
jle
and
aas
lods
inc
loopne
add
jnp
jmp
dec
add
pusha
sub
andb
outsl
mov
imul
movsb
loopne
dec
pop
adc
loope
jle
ret
inc
lods
xlat
data16
and
pusha
sbb
pushf
repz
sub
xchg
loopne,pn
or
add
int
rol
movl
lret
fidivl
inc
sub
cs
mov
jmp
in
ret
mov
and
and
mov
inc
pop
loopne
loope
jnp
bound
inc
and
out
cltd
sub
rorb
xchg
out
fldcw
add
test
xchg
pusha
dec
stos
mov
rorb
shl
add
loopne
clc
enter
shl
imul
subb
aad
mov
and
add
xor
inc
fimull
cmc
ds
mov
and
outsl
mov
add
hlt
test
inc
add
cli
and
jne
cmpsl
push
sbb
fisubl
dec
lret
xor
sbbl
pop
pop
adc
subb
dec
ret
pop
mov
pop
mov
aam
fwait
inc
xchg
pop
jmp
dec
jns
mov
movsl
gs
pop
in
jae
cmp
sub
sbbb
inc
push
imul
mov
inc
ds
and
hlt
lret
aaa
sahf
xchg
cmc
mov
push
cmp
das
add
add
addb
pusha
push
clc
jae
mov
adc
fwait
inc
jae
sub
add
dec
or
mov
mov
test
xchg
inc
das
cli
push
adc
aaa
pop
mov
add
aam
jo
pop
push
mov
jle
jp
and
pusha
pushf
mov
rolb
jns
adc
lea
mov
pusha
in
pop
sbb
out
cmp
push
xchg
mov
mov
add
fsubrl
add
icebp
cmp
dec
les
inc
add
mov
inc
stos
inc
xorb
add
rolb
adc
cli
lds
adc
cmp
sbb
shlb
xchg
lods
rolb
lea
lea
mov
pop
nop
dec
push
test
xor
jae
shlb
mov
lea
push
pop
jnp
dec
dec
pop
mov
test
add
pusha
push
jmp
incb
ss
inc
pusha
jb
insl
ljmp
and
xor
sti
mov
loope
mov
pop
jae
sti
cltd
testl
push
add
mov
add
nop
insb
add
rcrb
adc
scas
mov
loopne
mov
mov
xor
pop
stos
and
pusha
pusha
addb
push
jno
or
pop
jg
ret
sbbl
push
cltd
add
lret
int
add
ret
xor
jmp
pop
cltd
cwtl
mov
jo
out
inc
shrl
stos
loopne
jle
int
inc
pusha
sbb
dec
sub
loopne
push
push
int3
aas
jecxz
push
and
pusha
and
repnz
repz
addb
pusha
loopne
or
jecxz
xor
push
cmp
inc
movaps
loopne
sbb
and
add
sbb
push
xchg
cmc
or
fldenv
jns
fstpl
out
inc
cmp
dec
xor
xchg
add
and
sarb
pop
pusha
xlat
xlat
add
and
add
cmp
jo
push
mov
sub
shll
jae
loopne,pn
les
xchg
pop
leave
hlt
out
shlb
insl
adc
push
add
inc
nop
idivb
push
mov
sbb
cmp
rolb
jg
jae
mov
push
jb
pusha
mov
dec
test
negb
or
je
add
repnz
arpl
mulb
pusha
pusha
repz
sbb
xor
inc
mov
jge
lret
or
jmp
lret
stos
pusha
mov
or
fdivl
test
cmc
adc
lret
mov
and
pop
pop
jnp
mov
inc
push
mov
nop
jp
lds
cmp
xchg
push
sti
add
loope
movsb
pusha
pusha
xchg
loopne
ret
jo
test
roll
rcr
pop
push
sub
mov
lret
mov
andb
inc
aaa
push
cmp
and
add
pusha
nop
ss
outsb
imul
mov
xchg
cmp
cmp
push
mov
mov
incb
call
popa
mov
cmp
add
jne
in
sahf
test
fstpl
cmpsb
inc
inc
lds
push
fdivs
mov
sub
pusha
jle
or
rcrb
and
cwtl
daa
add
pusha
lock
into
push
mov
and
add
loopne
mov
push
shll
and
and
fwait
jbe
and
mov
sub
call
xchg
insb
loope
stos
cmp
test
and
or
add
ja
cmpsb
pusha
sarb
sub
test
rolb
bound
pusha
shlb
andb
dec
into
and
push
add
mov
and
adc
rclb
pop
scas
lahf
int3
sub
adc
jle
jo
in
mov
adc
push
add
push
push
pop
pop
leave
outsb
add
or
loopne
inc
cmpb
inc
scas
addb
repz
mov
dec
and
fisubrl
xor
xor
add
and
out
and
or
popf
outsb
jo
sub
push
loopne
notb
pushf
dec
add
sarb
jl
xchg
sahf
jl
out
scas
sbb
sbb
imul
mov
outsl
andb
je
cmpsl
and
sbb
sub
mov
adc
inc
jl
push
inc
adc
sarb
imul
adc
push
jne
mov
call
push
push
inc
inc
scas
stos
or
pusha
inc
mov
mov
nop
xor
inc
sbb
das
jo
push
push
and
pop
mov
in
int3
jae
enter
test
add
arpl
inc
test
jecxz
inc
push
iret
scas
sub
mov
xchg
pop
pop
xchg
insb
arpl
add
shlb
mov
pusha
sbb
mov
dec
mov
lock
int
ja
sbb
push
mov
popa
mov
xchg
shr
mov
and
repz
mov
test
dec
pop
mov
out
cmpsb
add
enter
jmp
pop
sbb
orb
fwait
daa
sub
and
ja
rolb
mov
repz
movsb
pusha
and
mov
add
add
pop
insb
add
shr
pop
cmpsb
shlb
mov
mov
shr
test
pusha
jle
cli
ret
xor
call
add
std
rclb
test
out
sub
in
dec
ja
inc
add
and
lods
mov
push
push
add
push
jmp
push
sub
lret
aaa
imul
hlt
dec
loope
icebp
mov
sbb
add
pusha
mov
or
and
shrb
andb
dec
and
in
sub
inc
xchg
lahf
inc
cmp
inc
pushf
cmc
adc
push
fs
rol
cld
pop
xchg
mov
mov
fistpll
mov
and
sub
and
das
push
jecxz
scas
dec
jb
cmp
and
fimull
or
and
pop
movsb
pusha
mov
sbb
and
cmpsl
push
movsl
inc
popa
jecxz
pusha
lock
outsl
loop
jno
mov
push
inc
pop
hlt
int
andb
adc
push
cmp
inc
fwait
add
mov
rolb
addb
xlat
cmpsl
mov
decb
dec
pop
cmp
aas
xor
xor
inc
sub
shlb
ficompl
inc
cmp
jg
fidivrl
stos
add
loope
push
andb
mov
repnz
data16
sarl
ja
repz
push
add
inc
test
inc
aas
mov
jmp
push
add
push
push
loopne
data16
adc
push
fsubl
shlb
insb
xorl
mov
jne
lock
dec
mov
and
and
and
orb
rcl
aad
mov
mov
insl
lods
lcall
push
scas
and
add
pop
mov
orb
outsb
lcall
cltd
cmp
add
mov
jb
ret
pusha
imul
mov
and
dec
or
lcall
popf
push
and
inc
shrl
inc
and
pop
stos
shlb
fs
push
lret
and
pop
and
mov
rclb
ret
and
and
testb
subb
out
mov
jne
inc
out
push
stos
clc
inc
lcall
loopne
or
rcrb
fwait
lahf
enter
ret
inc
pop
loop
addr16
pusha
inc
mov
shrb
add
rcll
mov
mov
push
dec
les
fadds
gs
rolb
cltd
adc
add
lock
les
loopne
inc
shlb
mov
inc
push
loopne
xor
cmp
loopne
and
sbb
add
xchg
inc
sub
andb
fwait
mov
push
xchg
cmp
inc
loopne
punpcklbw
jb
les
mov
decl
pushf
adc
out
inc
loopne
lods
loopne
movsb
shlb
push
int
cwtl
sbb
xor
into
shl
push
mov
add
ret
loopne
sbb
mov
sub
in
fstp
xchg
ret
out
rsqrtps
mov
je
inc
pop
cld
jb
sti
xor
mov
mov
loopne
fidivl
mov
mov
negl
mov
movsl
cmpsb
and
inc
pop
mov
scas
and
push
das
or
mov
fiaddl
push
pop
fimuls
pusha
loopne
adc
fbld
rcrb
xchg
loope
scas
add
outsb
mov
lret
jb
sahf
in
push
repnz
adc
sub
arpl
pusha
mov
and
addb
mov
push
jb
mov
pop
and
stc
call
fdivr
dec
js
mov
cltd
cmpsl
popf
jl
dec
dec
fsubs
xchg
fdivp
filds
and
test
inc
icebp
mov
pusha
push
lret
push
das
inc
mov
add
or
mov
shll
dec
es
pusha
xchg
or
leave
adc
inc
repnz
adc
incl
subb
lea
flds
les
pusha
pusha
cmp
dec
mov
rclb
inc
mov
aam
push
lods
rcr
cmpsb
add
lret
lret
sbb
xor
push
test
scas
xor
daa
inc
out
mov
cmp
andb
pop
dec
adc
mov
jb
xor
add
mov
add
mov
mov
mov
mov
fcmovu
adc
xor
jecxz
mov
jge
dec
in
fnstsw
lea
inc
mov
fstpt
xchg
adc
inc
jg
rolb
enter
lahf
jg
mov
lods
shl
add
and
sub
add
out
imul
es
pusha
rcr
inc
inc
test
pop
jbe
lods
rclb
pop
in
cmovp
push
push
pop
test
or
sti
int3
data16
push
leave
lds
lahf
cwtl
cmp
dec
cmp
shlb
mov
rorb
jae
in
aad
inc
fidivrl
fwait
repz
push
pusha
andl
add
add
and
xor
dec
and
shl
ja
movsb
loopne
dec
loopne
xchg
and
and
inc
and
pop
cmp
lods
and
or
mov
pop
imul
mov
cwtl
push
inc
js
dec
cli
scas
mov
jo
data16
add
and
inc
dec
adc
pusha
sarb
mov
push
scas
popa
or
add
shrl
adc
gs
xor
outsb
push
pop
sbb
shl
cmp
add
sbb
enter
pusha
leave
out
pop
jle
push
shl
ljmp
and
ja
test
jnp
rolb
push
adcl
add
push
mov
and
je
cltd
push
or
stos
add
dec
xor
xor
xchg
scas
rolb
inc
rolb
mov
and
push
inc
pop
in
cmp
inc
shlb
or
sbb
mov
mov
ret
aaa
push
add
addb
adcl
push
ret
out
sub
pusha
lret
stos
mov
lahf
mov
ret
xchg
pop
and
add
clc
sbb
es
subb
inc
xor
inc
add
test
pop
mov
lret
mov
cmpsb
pusha
add
xlat
push
pusha
inc
cld
pop
jmp
hlt
mov
dec
sbb
rolb
loopne
jae
cmpsb
andb
jo
push
inc
xor
daa
sahf
rcl
xchg
jl
add
enter
in
jmp
pusha
orb
pusha
shrb
pop
xor
xchg
jl
lds
and
loope
aam
outsl
mov
clc
dec
inc
inc
movsb
andb
rolb
pusha
inc
adc
inc
out
shlb
movsl
lea
andb
ret
aad
jbe
je
xchg
adc
pop
cmp
icebp
or
and
and
sub
sbb
push
jmp
jns
hlt
adcl
cs
add
or
pop
jmp
jne
daa
cmpsl
divb
or
add
mov
sarl
scas
mov
outsl
pop
jmp
inc
outsb
cs
mov
fimuls
mov
pop
lcall
movsl
mov
jne
repz
cmp
mov
loopne
cmp
inc
dec
mov
and
test
mov
loopne
add
loopne
out
xor
inc
pusha
xchg
ss
es
xor
mov
dec
in
mov
cmp
fs
insb
add
mov
ljmp
or
lret
inc
fistpl
cmpl
cmpsl
pop
jmp
mov
shll
enter
push
sub
xchg
jb
pop
ds
pushf
data16
jp
pop
and
orb
ljmp
jmp
xchg
cmpsb
addb
fndisi(8087
and
inc
jae
mov
icebp
rorl
inc
mov
mov
and
ss
xchg
enter
inc
out
lret
inc
mov
pop
pusha
add
movsb
loopne
dec
inc
pop
aaa
and
mov
add
inc
cmpl
imul
in
jl
loop
mov
ljmp
xlat
sbb
pusha
popa
add
shlb
ja
dec
xor
xor
xchg
dec
insb
sub
shlb
lods
mov
dec
push
mov
and
sub
add
stc
ret
add
pushl
mov
and
add
mov
mov
or
inc
and
stos
call
add
mov
xchg
cld
jmp
push
pusha
inc
xlat
push
sub
mov
push
xor
inc
aad
cli
nop
push
loopne
lds
pusha
add
iret
jne
pop
stos
and
xchg
lret
add
imull
inc
add
pusha
mov
cmp
loopne
sub
mov
xor
cmp
mov
sub
add
loopne
and
add
pop
mov
stc
pop
repz
sbb
sub
rol
inc
mov
xorl
inc
inc
xor
repz
stos
repz
mov
jae
aad
add
and
inc
imul
scas
aas
dec
dec
mov
cmp
lahf
xchg
pop
rcl
js
xchg
push
add
mov
imul
jbe
scas
call
mov
out
fmull
mov
and
outsb
cpuid
add
arpl
dec
ljmp
or
aad
shlb
mov
jmp
testb
lahf
xor
inc
andb
or
pop
popa
loopne
jne
xor
shll
negl
add
and
aam
xchg
xchg
in
aaa
mov
xor
add
jb
xchg
and
jg
and
shlb
nop
subl
pop
repz
mov
push
cli
popf
xor
jo
data16
test
inc
lahf
fcomps
ror
mov
jns
int3
xchg
pusha
xorl
and
int3
shlb
je
fnstenv
fistpll
add
pop
sbb
inc
addb
lods
or
and
out
xchg
cld
mov
jo
loopne
mov
mov
xchg
test
lods
imul
xor
aas
addr16
push
scas
push
cmp
dec
dec
push
sbb
jl
rolb
and
sub
jns
inc
mov
data16
loopne
fs
mov
mov
xor
mov
push
fwait
push
into
push
mov
fsubrs
mov
xchg
pop
cli
sub
push
fcmovnb
insb
aaa
adc
mov
jne
mov
inc
pushf
mov
xor
inc
and
push
xchg
push
mov
andb
pushf
loope
xor
and
cmp
mov
loopne
add
inc
add
pop
scas
adc
add
add
adc
shlb
addb
cmc
cmp
in
shlb
pusha
and
push
inc
lcall
cmp
mov
mov
pop
xorl
xchg
shrb
clc
cmc
mov
jnp
outsl
xor
movsl
mov
add
rol
push
mov
inc
mov
push
jno
add
push
xor
cs
sub
inc
insl
fcmovu
lret
ret
mov
or
sbb
dec
sub
loopne
lret
cli
fnstcw
popa
push
roll
data16
pop
aad
jo
mov
fnstenv
and
cld
loopne
and
push
inc
mov
mov
imul
inc
xchg
nop
dec
cltd
lods
mov
fucomp
xchg
movsb
rolb
add
test
pusha
leave
inc
cmp
jp
sti
mov
jnp
sbb
pusha
loopne
mov
icebp
aas
pop
xchg
ljmp
in
dec
mov
adc
lret
or
inc
scas
push
xor
inc
cmp
xchg
cmp
mov
and
test
add
andb
cmpsb
add
sbb
fbld
mov
xor
add
movl
pop
mov
shrb
and
loop
xchg
add
inc
adcb
rcrb
xor
push
loopne
aas
push
loopne
stos
stos
inc
mov
xchg
sbb
lods
rolb
jmp
cld
xlat
jl
inc
sbb
idivb
inc
add
add
add
jne
pusha
push
loopne
pop
jnp
imull
call
mov
cmp
lret
cltd
cmp
pusha
test
push
loope
in
mov
lahf
xlat
repnz
fisttps
sahf
jb
andb
add
mov
xor
addb
add
jp
mov
and
pusha
xor
push
movhps
leave
mov
add
xchg
adc
rolb
sub
sbbb
cltd
fcomip
lea
mov
add
scas
loopne
mov
pusha
int3
xchg
in
add
addb
add
inc
outsb
pop
add
rorl
jmp
cwtl
push
test
fistl
shr
cmp
jo
aaa
xchg
aas
xor
push
sti
ficoml
lods
rolb
ljmp
imull
js
pusha
mov
xchg
lods
repz
xor
sbb
adc
pushf
sbb
add
mov
mov
dec
mov
loopne
and
ljmp
dec
jbe
and
sub
icebp
push
cmpsb
mov
loopne
jp
aaa
ja
pusha
mov
notl
xchg
call
bound
jge
insl
mov
push
sub
inc
ds
cmp
and
xor
adc
pusha
loopne
push
int
xor
idiv
insl
sti
sub
sub
sub
aas
icebp
outsb
push
ret
cmp
push
jno
inc
pop
lds
scas
fiadds
arpl
xor
in
inc
dec
push
mov
in
and
inc
ret
lcall
mov
std
cmp
arpl
std
js
add
loopne
call
addb
addb
bound
inc
lret
icebp
push
xchg
and
push
xchg
sub
aaa
ljmp
ret
rol
rolb
xchg
mov
push
add
mov
imul
jnp
inc
xor
rol
movsl
aaa
test
mov
push
pusha
orb
and
and
push
jae
cmp
xchg
mov
xchg
sub
call
test
jl
loopne
add
rolb
add
jmp
fcmovnb
int
pop
pop
stc
scas
icebp
push
shrl
loopne
fs
inc
out
movb
rcr
pop
pop
inc
jecxz
dec
cltd
stos
roll
and
inc
mov
pusha
mov
rolb
sub
pop
test
sub
add
jo
aad
push
andb
push
loopne
daa
or
add
sbb
push
xchg
mov
andb
inc
je
mov
jecxz
jmp
addr16
add
and
stos
repnz
push
mov
scas
sub
rol
push
andb
cmp
lods
add
test
inc
pusha
mov
inc
rclb
loopne
ret
nop
hlt
je
add
pusha
sbb
jbe
mov
and
dec
jp
push
pop
ret
cli
imul
add
std
mov
andb
andb
adc
loopne
sub
cmp
pop
and
inc
cmp
add
addb
imul
imul
je
xchg
test
loopne
stos
addb
std
fidivrs
mov
and
pop
fisubrl
sbb
in
xchg
mov
jmp
inc
jae
jno
and
loopne
sub
mov
loopne
sbb
les
add
pusha
lods
loopne
dec
stos
adc
push
loope
cmp
cmp
mov
inc
sarb
xchg
loope
and
inc
pusha
jmp
add
and
mov
add
loopne
enter
mov
rolb
insb
xor
adc
std
dec
mov
rolb
adc
inc
push
and
out
and
add
stc
mov
test
push
and
loopne
inc
je
sub
or
cld
push
jae
leave
sbb
shlb
mov
rolb
andb
or
int3
cmc
dec
mov
and
inc
cmp
loopne
dec
mov
mov
cmp
push
paddb
cltd
mov
inc
mov
lods
loopne
movsl
mov
or
mov
repnz
in
mov
inc
aaa
aaa
call
mov
add
pusha
test
shlb
mov
ljmp
and
cld
iret
in
mov
fcomip
test
movsb
rolb
rolb
aaa
mov
shlb
call
inc
adcb
xor
mov
add
mov
mov
fidivl
or
mov
or
loope
sub
inc
xor
sub
bound
lahf
cltd
add
dec
sbb
mov
pusha
js
inc
and
adc
std
std
inc
mov
adc
fbstp
push
adc
mov
addb
push
les
and
adc
pop
shl
fdivrl
lods
addb
sbb
add
lods
shlb
inc
push
fsubrl
adc
add
xchg
shl
cmpsb
add
push
push
cmp
push
andb
and
movsl
push
add
cmpsl
outsl
sub
insl
or
adc
test
inc
inc
test
outsb
repz
add
test
loopne
mov
in
mov
sbbb
arpl
loopne
mov
shl
popf
inc
lods
loopne
and
mov
and
arpl
outsb
dec
jl
in
lds
andb
mov
test
jns
adc
shlb
test
inc
mov
pop
mov
dec
mov
pop
push
les
shlb
pusha
pusha
dec
int3
in
and
sarb
or
loopne
into
popf
rcrl
mov
jecxz
iret
inc
scas
xchg
sbb
je
mov
ljmp
aaa
dec
int
fdivp
and
jecxz
adc
add
ror
jae
pop
insl
sbb
jmp
shlb
xchg
inc
fldt
xor
cs
cld
inc
dec
push
lods
mov
loop
addb
mov
xchg
int
mov
and
addl
test
mov
loop
xchg
jp
and
lea
int3
cmp
hlt
xlat
andb
lods
shl
outsb
cmp
ds
pusha
out
mov
and
mov
jg
jns
mov
stc
jnp
jbe
std
shl
dec
mov
in
xor
mov
jecxz
pop
jo
adc
jecxz
out
xchg
jecxz
fs
push
repnz
lahf
fdivs
ljmp
cmp
imul
shrb
ja
sti
sbb
cltd
sbb
rorl
cmp
mov
cmpsl
enter
and
and
inc
jns
rclb
enter
int3
std
xchg
jno
popa
popf
add
jge
aad
and
jp
pop
fmul
lret
loop
and
fs
mov
mov
js
inc
pusha
dec
sti
cltd
cmpsl
out
test
and
xchg
jp
ds
mov
test
pusha
and
shlb
inc
cmc
mov
and
rorb
push
inc
fdivl
add
inc
sbb
out
pop
or
loop
aam
mov
aas
ret
push
xor
and
mov
dec
inc
loope
xor
aaa
leave
inc
pusha
xchg
sbb
jno
cmpsl
fucom
shrl
sbb
loop
lret
rolb
shr
imul
jp
iret
arpl
addb
loope
fisttpll
inc
push
jnp
negb
add
push
dec
rcr
aad
push
cltd
clc
push
rolb
and
pusha
loopne
jg
sub
pusha
sbb
mov
push
add
pop
xor
cs
inc
mov
movsb
andb
add
mov
sbbb
je
jae
lret
add
cmp
mov
cmp
and
push
xor
inc
bound
mov
add
add
mov
popa
call
stos
and
mov
faddl
inc
sbb
mov
loopne
and
repz
out
mov
pusha
xorl
in
rorb
gs
js
leave
cmpsl
mov
sbb
addb
hlt
jns
or
sarb
aam
cwtl
push
mov
addb
pushf
loopne
jo
roll
jle
adc
lea
add
pusha
xchg
lock
xchg
loopne
xor
add
shlb
in
adc
mov
iret
cwtl
es
loopne
mov
je
mov
mov
in
ss
and
and
addb
insl
jns
pop
jnp
adc
adc
dec
es
dec
repz
hlt
sub
pop
imull
dec
pusha
lock
xchg
xchg
sarb
sbb
fstps
cmp
pop
xor
pop
scas
pusha
loopne
and
ljmp
pusha
mov
add
mov
lods
andb
shlb
and
add
lret
sbb
mov
imul
pop
pusha
out
jmp
gs
shlb
add
std
cltd
dec
mov
inc
mov
push
xor
push
add
mov
loopne
mov
mov
outsb
jp
dec
cmpsb
loopne
outsb
std
fiadds
das
aas
or
insl
xorl
sub
mov
fidivl
test
and
or
mov
movntps
adc
and
rcrl
inc
add
jo
add
andb
add
jbe
jbe
add
ljmp
add
pop
jp
mov
push
mov
mov
inc
add
dec
or
adcl
imul
dec
shl
ret
rolb
addb
in
popa
push
loopne,pn
shrl
pop
add
push
loope
and
fsubl
popf
sahf
and
or
pop
or
inc
imul
andb
pop
add
sub
add
pop
jge
test
inc
fwait
dec
push
dec
outsb
les
es
loopne
jno
and
rol
loopne
data16
shrb
fs
sti
mov
jg
movl
cmp
ja
enter
aad
lock
and
ljmp
or
outsl
xchg
add
jp
and
xchg
dec
jae
pusha
shrl
pop
test
rol
mov
pusha
mov
data16
inc
pop
cmp
and
ret
arpl
jbe
xchg
inc
add
sbbb
cmpsl
ds
cmp
cli
mov
pusha
sbbb
inc
push
mov
hlt
or
popl
inc
es
clc
cld
ret
lahf
push
jmp
sarl
mov
sbb
xor
mov
ljmp
and
and
mov
inc
sbb
shll
xchg
in
movsb
shlb
lods
loopne
adc
stc
loope
adc
ret
jp
mov
inc
hlt
aas
dec
dec
mov
push
jb
jno
rolb
and
cmp
mov
push
jge
adc
sti
mull
mov
sahf
jne
push
pmuludq
and
les
mov
andl
mov
sbb
mov
int
pop
mov
inc
inc
ss
inc
aaa
pusha
mov
mov
xchg
push
loopne
and
pop
ror
dec
icebp
mov
pusha
dec
add
mov
adc
les
js
add
push
cmp
xchg
mov
jnp
loopne
mov
inc
sti
adc
and
jle
xor
fdivs
out
or
shl
fadds
mov
inc
inc
jmp
pop
cmpsb
rolb
mov
test
inc
jns
aas
mov
and
jg
mov
std
jp
jl
fdivrl
pusha
pusha
sti
in
loopne
out
mov
outsb
dec
sub
insl
dec
fs
jg
xchg
arpl
stos
outsl
into
add
rclb
addb
inc
inc
jge
or
fldt
ficoms
sub
pusha
scas
sub
mov
pop
sub
pop
addl
loopne
sbb
rolb
mov
pop
divb
and
mov
push
cmp
mov
jns
add
cld
movsb
add
jne
or
loopne
push
inc
pusha
fidivrs
mov
push
mov
arpl
mov
outsb
mov
addr16
or
cmpb
lds
negl
cmp
and
inc
push
lds
shlb
loop
fisttpl
mov
cltd
jle
leave
jge
bound
xchg
addr16
mov
lds
ljmp
pusha
sarb
dec
mov
mov
mov
lea
mov
adc
dec
sti
adc
or
lahf
fdivp
jecxz
lods
mov
and
loopne
fs
andb
add
loopne
mov
test
xorb
imul
jnp
adc
xchg
cwtl
mov
mov
je
rcl
ljmp
inc
mov
sbb
lret
pop
mov
dec
mov
leave
xchg
mov
and
loopne
or
pusha
loopne
pop
inc
fnsave
push
mov
jb
and
pop
addb
std
fwait
lds
jb
pop
mov
mov
mov
lods
nop
imul
xchg
lods
pop
lods
and
dec
popf
ja
mov
js
movsl
fidivs
inc
inc
lret
inc
scas
push
cmc
scas
inc
cmc
fwait
rcrb
inc
lock
add
cmpb
dec
mov
repz
xor
dec
lcall
xchg
loopne
sbb
add
test
cmpsl
das
nop
mov
aam
outsl
adcl
inc
lods
mov
xchg
icebp
mov
loopne
out
pushf
inc
ss
add
push
lahf
pop
dec
mov
andb
pop
shll
xchg
aam
mov
leave
jecxz
sbb
loopne
pop
test
ror
mov
inc
xchg
push
jno
rorb
mov
andb
rolb
sub
fcompl
fists
xchg
lea
cs
pusha
inc
inc
dec
ds
cmp
rolb
call
mov
lahf
add
mov
pop
lods
push
loopne
out
arpl
sbb
xchg
enter
out
pop
shrl
das
addb
js
pop
dec
xorl
pusha
push
adc
shl
andl
jbe
sbb
popf
daa
movsl
pop
add
jo,pt
xchg
sub
inc
and
mov
sub
mov
inc
ficomps
test
loopne
pusha
sub
and
dec
iret
push
daa
mov
mov
cwtl
mov
movsl
jmp
test
mov
dec
pop
sbb
xlat
mov
ljmp
movsl
or
fiaddl
sbb
fldl
xor
lea
and
fsubs
bound
mov
add
incb
lret
mov
inc
and
insl
std
sahf
lret
addr16
sbb
mov
sbb
pop
lret
dec
lock
add
int
jne
xchg
mov
dec
push
and
shll
dec
sbb
cltd
shlb
sub
mov
rcrb
test
dec
dec
cmpl
cmp
out
mov
fwait
add
pop
mov
pusha
vmulpd
jnp
sub
cmpb
push
xchg
add
and
inc
adc
inc
and
push
mov
pop
mov
push
ret
shl
mov
cs
pusha
mov
loopne
sub
fldl
or
and
inc
and
mov
inc
insl
inc
clc
push
jnp
jecxz
and
dec
pushf
adc
pop
cmp
mov
and
jne
es
addb
add
cmp
and
dec
out
mov
pop
in
sbb
sbb
sub
lcall
mov
in
dec
mov
scas
mov
out
mov
inc
inc
xorl
and
adc
mov
xchg
sahf
scas
xchg
pop
jge
mov
xor
mov
sub
shrb
or
andb
add
pusha
inc
enter
loopne
dec
ret
dec
pop
das
sub
add
dec
and
loopne
rolb
and
loopne
lock
push
push
outsl
clc
incl
andb
rcrb
jns
movsb
add
lcall
sbb
leave
fadds
cmp
shll
mov
je
fldenv
sbb
sbb
add
pusha
mov
jge
pop
lret
sub
pusha
fistpll
adc
jge
nop
in
xchg
shr
and
loopne
add
setge
mov
sti
mov
out
in
or
and
pusha
jbe
addb
pop
aas
add
inc
and
jnp
out
lahf
xchg
shr
or
add
mov
add
cmp
push
lea
cli
pop
inc
roll
sar
shlb
and
and
andb
and
inc
dec
adc
out
pop
test
int
xor
cmc
mov
movsl
jno
inc
adc
inc
andb
xor
mov
lret
ret
lcall
inc
loopne
std
jbe
xchg
sti
pushf
add
mov
rorl
add
js
les
lret
mov
lea
inc
insl
aad
jmp
xchg
adc
xchg
cli
scas
push
or
mov
std
pop
xlat
cmpsl
lods
and
pop
add
and
pop
insl
leave
flds
inc
mov
fcoms
cmp
pusha
and
inc
loopne
pop
pushf
cmp
add
orb
inc
adc
cmp
out
test
shrb
shrb
mov
test
enter
pop
fwait
or
xor
mov
jno
cltd
idivl
push
jnp
jge
nop
pop
mov
push
into
push
shr
bound
imul
push
add
mov
cmp
add
pushf
negl
xor
in
dec
leave
mov
mov
or
pusha
sub
dec
pop
js
insb
add
and
es
sub
inc
loope
xchg
shlb
adc
xchg
shll
push
add
addr16
mov
cld
xor
push
jecxz
and
mov
mov
push
add
cmp
fildl
jno
mov
or
outsl
mov
cmp
pop
cmpsl
adc
or
inc
and
lds
cmpsb
add
adc
or
orb
shrb
ficomps
jg
loopne
push
mov
mov
add
xor
rolb
mov
add
cmp
mov
sub
mov
add
cs
pusha
data16
sar
icebp
inc
movsb
loopne
repnz
sbb
cmp
adc
pop
adc
adc
fstpt
in
in
jnp
lock
test
xor
pusha
inc
dec
in
dec
fldt
addb
and
push
pusha
add
movsl
fsts
pop
out
cmc
lock
and
inc
insl
mov
mov
xor
push
push
dec
cmp
jl
call
inc
rorb
stc
sub
orb
mov
adc
sub
nop
sbb
sub
inc
insb
fcomip
adc
lret
js
repnz
mov
and
inc
and
cmpb
mov
push
mov
jge
mov
scas
sub
mov
loopne
lcall
loopne
jb
aam
cmp
xchg
out
loopne
iret
jb
imul
and
ret
or
or
pushf
or
sub
and
pusha
xor
push
cmp
stos
cmc
jle
push
mov
addb
inc
fistpl
cld
mov
mov
mov
sbb
sub
push
ja
and
sbb
and
subl
imul
loopne
addb
push
fwait
add
add
xchg
movsl
pop
inc
mov
out
pop
xchg
in
outsl
jg
cmpsl
jno
lcall
dec
loop
mov
pusha
in
xchg
loopne
arpl
faddl
andb
fisttps
xlat
adc
aad
addb
and
loope
test
insl
cmp
sbb
mov
adc
pusha
fildl
addb
dec
sbb
cmp
js
outsb
adc
sqrtps
arpl
inc
movsb
add
pop
add
in
leave
addr16
loope
adc
pusha
add
scas
popa
bound
iret
cmpsl
in
push
or
rolb
mov
cmp
xor
rcrb
mov
pusha
out
cmp
lcall
adcb
jge
loopne
sti
ficompl
sub
inc
add
loopne
addb
inc
mov
mov
cmp
sub
shlb
xchg
push
sbb
out
dec
mov
and
lds
loopne
shl
push
inc
cwtl
leave
lods
mov
loopne
fbstp
add
lahf
shll
and
add
jnp
mov
adc
and
sarl
xorl
xchg
dec
cmp
arpl
cwtl
pop
cltd
mov
jns
pop
mov
lea
inc
lcall
and
dec
lock
sbb
adc
sbb
fimull
shlb
xor
add
mov
pmaddwd
daa
stos
add
mov
lea
ljmp
and
imul
test
xchg
pop
jns
popf
clc
dec
imul
mov
mov
jns
js
pop
xchg
jle
pop
or
add
inc
aad
adc
dec
jno
mov
cmpsb
inc
pusha
push
xchg
data16
and
loopne
or
cld
mov
int
in
mov
sahf
andb
inc
add
repz
pusha
sub
push
mov
sub
mov
xchg
mov
enter
add
ret
inc
pop
push
jnp
dec
aaa
cmp
aam
pop
pop
xlat
cld
enter
in
andb
jnp,pt
ja
adc
inc
inc
cmp
pushf
adc
sub
pop
mov
aaa
and
loop
loopne
sub
mov
inc
pop
push
xor
cmp
ret
jecxz
xor
loop
inc
xor
es
imul
dec
clc
sti
dec
dec
rep
and
fwait
mov
lock
cmp
rol
xor
xchg
add
mov
int
xor
mov
add
mov
jge
imull
dec
xchg
mov
fistpll
or
and
mov
pop
arpl
stc
xor
jnp
int
add
cld
lcall
mov
test
es
mov
jp
mov
into
mov
ja
inc
and
pop
xor
loopne,pn
div
cld
xchg
int3
cmp
cmpsb
add
mov
dec
cmp
loopne
dec
jg
cmpl
hlt
pop
insl
in
call
stos
add
mov
or
adcb
mov
sbbb
push
in
sbb
and
xor
jl
cmp
popa
adc
addb
loopne
scas
push
add
mov
roll
movsb
shlb
jl
outsb
push
in
fld
ficomps
popf
jp
ret
jne
xchg
mov
or
nop
cmp
and
fldl2e
inc
jmp
out
loop
loopne
mov
mov
or
inc
or
add
and
pop
loopne
sub
imul
hlt
leave
xor
adc
bound
cmp
addr16
inc
imul
and
adc
mov
cmp
sbb
xchg
add
lret
add
mov
add
dec
pop
and
xor
jno
jo
in
std
add
shlb
xorb
sarl
jns
sub
and
push
ljmp
xorb
shlb
inc
cltd
mov
xchg
sbb
gs
add
pusha
inc
sti
hlt
push
inc
ror
xchg
int
mov
lcall
pop
out
test
xchg
imul
popa
inc
fisubrs
pusha
loopne
rcrb
mov
jno
mov
jne
push
or
loopne
fmuls
mov
cmpsl
add
dec
mov
andb
lret
adc
pusha
add
lods
fnstsw
popf
push
and
outsl
loop
or
mov
add
rol
cmp
sti
or
stc
fucomip
outsl
fldenv
subb
mov
sti
test
pusha
clc
jecxz
pusha
and
int3
adc
push
scas
inc
and
push
sbb
out
into
push
mov
xor
sti
push
rolb
daa
cld
mov
add
cs
jo
mov
daa
add
add
push
mov
lea
insl
insl
or
add
push
push
loopne
push
or
pusha
clc
mov
clc
pop
and
mov
rcrb
lret
addr16
lock
and
shlb
addb
push
push
add
jno
inc
inc
mov
push
test
inc
enter
insb
sub
rolb
jne
mov
aam
adc
jno
mov
inc
xchg
push
fnstenv
rcr
xchg
dec
push
dec
jo
gs
lret
loopne
cltd
cltd
repnz
xchg
xor
ds
in
gs
dec
fisubs
sbb
mov
push
cmpsl
mov
stc
out
push
ljmp
and
mov
mov
stc
push
sbb
add
xor
add
inc
and
add
jne
or
loop
xchg
mov
xchg
loopne
sahf
repz
popa
or
loopne
test
sti
ljmp
push
rolb
jmp
fidivrl
int3
xchg
stos
addb
cmp
std
jl
jecxz
xchg
mov
lea
aam
and
mov
ss
cli
pushf
mov
mov
out
test
fadds
lcall
outsb
cli
xchg
sbb
jo
iret
btc
leave
mov
outsl
and
inc
in
jae
pusha
inc
inc
movsl
lds
jg
pusha
and
dec
pop
ss
push
push
dec
inc
sarl
and
insl
mov
jg
xor
iret
xor
pop
ds
add
inc
sti
push
sbb
shl
repnz
in
lock
movsb
shlb
andb
xchg
add
jmp
and
push
mov
add
inc
and
and
add
shlb
pusha
cltd
stos
add
sbb
or
loopne
andb
jnp
test
lahf
hlt
cmp
lock
enter
out
loopne
mov
leave
cmpsl
add
and
mov
addr16
jb
add
stc
mov
call
sub
lea
aad
and
fxch
sub
cli
push
repnz
push
mov
inc
adc
les
mov
or
sub
xorb
pusha
repnz
loopne
out
ret
push
idiv
mov
sarb
jl
loopne
sub
test
and
jmp
cwtl
or
call
mov
std
xchg
xlat
sahf
mov
add
inc
inc
lods
mov
and
push
adc
cmp
xor
jb
jns
sub
shl
mov
xchg
je
shlb
in
pusha
pop
cmp
lods
pusha
pusha
pop
xchg
sub
add
cmp
inc
inc
cmpsb
addb
fdivl
sub
xorb
fdivr
or
ja
and
loopne
rcr
sub
leave
rcll
dec
pop
hlt
mov
pop
xor
notl
je
iret
pop
js
sub
in
imul
fbld
pusha
and
sti
pop
fdivrp
pop
ja
cmc
aad
outsl
repz
stos
andb
data16
and
add
add
xor
cmp
addb
push
arpl
hlt
aas
data16
sbb
sbb
sbb
loopne
imull
and
adc
mov
inc
and
or
add
and
mov
loopne
xchg
jae
sub
pushf
mov
push
inc
sbb
cmp
and
inc
xchg
pop
popf
pop
push
cs
add
inc
int
pop
pop
pop
inc
push
inc
shlb
repnz
lods
adc
andb
loopne
jae
xchg
or
adcb
in
aas
fdivrs
and
jbe
add
bound
hlt
cmc
cwtl
cmp
add
shlb
sub
lods
add
pop
movsl
add
inc
aaa
outsl
xchg
out
out
jb
in
adc
shlb
fsubrl
and
cmp
addr16
add
iret
js
xor
daa
int3
sti
mov
pusha
ficompl
pop
dec
out
faddl
add
leave
insb
dec
negl
xchg
sub
ja
insb
jmp
pusha
mov
inc
mov
les
push
outsl
aad
cld
push
push
mov
adc
inc
loopne
mov
scas
mov
lea
insl
jl
adc
nop
ds
sarl
int
mov
icebp
lds
add
adc
test
inc
out
mov
pusha
ret
xchg
nop
das
aam
sbb
pushf
cltd
idivb
jl
lds
pusha
mov
scas
mov
dec
imul
leave
outsl
adc
rcrl
scas
shl
pusha
and
pusha
es
addb
and
movsb
add
add
dec
add
rclb
pop
adc
or
int
leave
adc
mov
adc
and
mov
lods
xchg
mov
idiv
sub
cli
sar
test
inc
mov
aas
pop
push
sbb
scas
add
mov
inc
outsl
sub
add
lea
popf
inc
mov
fsubrs
mov
loopne
mov
dec
mov
cltd
pop
xor
push
movsl
stos
loopne
pop
add
cmp
lds
ds
sub
outsb
testb
stc
in
pop
and
and
aam
outsb
stos
add
into
imul
mov
addb
cmpsb
andb
jle
stos
addb
cld
or
loopne
pop
xchg
pop
flds
stos
inc
pop
pop
jnp
andb
rorl
mov
sbb
dec
push
inc
inc
sub
loopne
inc
jg
shlb
push
xlat
pop
les
sub
cmp
scas
andb
mov
movsb
loopne
inc
mov
jae
ja
out
aad
iret
lds
cmp
je
add
in
sbb
fnstsw
roll
loopne
pop
push
add
and
popa
jbe
jbe
outsl
add
fimull
pusha
subb
dec
ret
xchg
add
je
mov
add
jno
inc
test
mov
subl
xchg
dec
lret
or
and
mov
push
jns
push
mov
loopne
sbb
pusha
in
push
inc
cltd
in
cmc
sub
jbe
jnp
in
fstps
mov
push
push
iret
or
icebp
add
loopne
loopne
and
add
and
push
aad
dec
xchg
lcall
ss
cmp
jg
sub
pop
jp
adc
inc
add
mov
rol
loope
outsl
and
fcmovne
fwait
cltd
sarl
repnz
pop
cmpsl
push
jge
mov
mov
iret
sbb
aas
sbb
out
outsb
sbb
or
mov
iret
fptan
sahf
movsl
rcl
add
rcr
loopne
rolb
andb
pusha
ret
add
dec
iret
mov
mul
rolb
out
mov
rclb
enter
and
shlb
pop
test
adcb
mov
inc
sub
addb
into
cmpsl
movsl
xor
rorb
pop
insl
std
pop
sbb
jb
jmp
cmp
pop
pusha
lret
cld
dec
xchg
les
inc
mov
movsl
dec
dec
inc
fstpt
stos
mov
add
lret
dec
jo
lods
and
sbb
shlb
shl
or
sar
inc
lods
push
repnz
sub
and
adc
insb
dec
adcl
inc
add
pusha
orb
shlb
xchg
leave
out
dec
pop
iret
push
cmp
inc
sbb
cmpb
loopne
add
inc
xchg
xchg
lret
mov
das
sbb
mov
add
mov
addb
lret
inc
and
pusha
jae
add
ss
sub
inc
lcall
aad
mov
pop
mov
and
and
imul
in
insl
popa
jbe
sbb
ja
scas
repz
aad
sub
and
pusha
or
sub
ljmp
test
pusha
sub
loopne
inc
shlb
mov
shl
cwtl
stos
shlb
stos
shlb
int3
in
js
inc
and
xchg
add
push
push
fisttps
rol
neg
out
imull
jp
loopne
jb
loope
out
rolb
addb
add
inc
insl
roll
loope,pt
sub
dec
xor
mov
pusha
cmp
mov
inc
add
xchg
add
jge
cli
sbb
sub
and
mov
mov
pusha
mov
xlat
ljmp
insl
fldt
icebp
xlat
jmp
and
loopne
jnp
and
push
mov
jmp
sbb
or
lret
add
shl
xlat
cld
jno
mov
bnd
rol
loopne
add
xchg
or
mov
ljmp
pop
mov
mov
mov
add
xlat
daa
sbb
cmp
jge
cltd
aad
mov
sub
andb
sub
pop
flds
or
cwtl
mov
cwtl
inc
mov
loopne
and
aad
lea
cmovnp
dec
call
in
add
xor
add
cmp
sbb
mov
into
xchg
fistl
xor
push
xlat
and
movsb
add
mov
stc
push
xchg
call
sub
add
pop
sub
sub
cmpb
inc
and
push
sub
pusha
xor
enter
lcall
and
push
lahf
les
mov
andb
inc
inc
sti
movsl
outsb
jecxz
sub
ror
lods
addb
jg
stc
sbbl
iret
dec
movsb
add
sub
and
hlt
add
adc
shlb
sub
add
test
mov
add
xchg
dec
or
and
cli
outsl
ss
inc
sbb
popa
out
loopne
js
loopne
push
adc
and
fnstenv
mov
add
xchg
in
fdivrp
es
add
inc
sbb
lods
loopne
addb
js
mov
push
mov
mov
add
loopne
sbb
jle
and
mov
mov
jnp
js
fiaddl
xlat
cmp
mov
clc
mov
fldenv
je
xchg
movsl
mov
cmpl
push
mov
shll
cmp
mov
mov
jle
mov
pop
andb
sahf
test
loopne
add
rolb
adc
add
shl
jle
mov
sbb
mov
and
je
stc
pop
inc
dec
mov
mov
cmp
pushf
xchg
repz
aam
std
or
and
jnp
cs
mov
rolb
mov
or
fwait
and
jnp
shl
sbb
lret
daa
jmp
xchg
addl
in
sbb
enter
bound
sbb
or
cmpb
into
dec
inc
out
push
loopne
int
clc
pop
roll
loopne
mov
das
cmpsb
and
mov
shr
jbe
outsl
aas
ss
push
out
cmp
jbe
loopne
or
pusha
add
loopne
xor
stc
or
ss
mov
push
mov
mov
loopne
mov
inc
xor
scas
in
adc
popa
inc
inc
inc
mov
pusha
int3
pop
shl
pushf
pop
scas
pusha
and
mov
in
dec
lock
jecxz
push
loopne
cmp
cmpsl
roll
loopne
js
pushf
shrb
jp
sub
cmp
sub
add
das
mov
loopne
mov
dec
mov
cmp
pop
movsb
add
call
pop
pop
and
inc
and
xor
int
xor
mov
mov
inc
xchg
dec
xor
lds
test
pusha
cmp
lret
jnp
pusha
pusha
mov
cmp
fldenv
jge
std
inc
aam
loopne
fs
dec
inc
sub
sbbb
idivb
cmc
ljmp
jo
add
addb
add
push
push
fisubrs
mov
add
xchg
das
mov
add
dec
dec
adc
inc
pop
je
sbb
loope
shl
push
push
sub
inc
inc
arpl
xchg
mov
xor
push
sar
xchg
movsb
add
adc
mov
mov
xlat
mov
push
xchg
movsb
add
testl
loopne
mov
loopne
or
inc
movsb
addb
imul
cmpb
or
inc
push
jmp
loope
mov
rorb
mov
add
iret
gs
mov
js
roll
push
out
mov
mov
lret
mov
daa
data16
jne
pop
xchg
xor
shr
dec
mov
pop
sbb
sbb
cltd
adc
cs
xchg
inc
push
out
lds
pop
push
pop
mov
mov
shl
mov
and
rcl
push
inc
stos
xchg
movsl
insb
int
adc
les
stc
adc
lock
cmp
cmp
and
dec
xchg
xor
fisttps
cmp
into
cmpsb
pusha
cmp
popf
decl
andb
pop
sub
and
sub
add
push
fst
jns
mov
loopne
arpl
shrl
inc
movsl
stos
and
cli
jns
fildll
adc
mov
mov
mov
xor
mov
mov
and
sub
pushf
sar
or
mov
add
aas
sbb
mov
lcall
pusha
adcb
inc
addr16
push
mov
mov
mov
pusha
sub
mov
sub
and
es
mov
and
jmp
fistl
repz
movzwl
sbb
testb
xorb
notb
das
or
and
addr16
cmpsl
dec
push
dec
xchg
in
inc
test
cmp
pusha
and
repnz
adcl
shlb
and
push
jb
in
jnp
addr16
xor
pop
test
cwtl
aas
push
xor
cwtl
pop
lahf
out
mov
cmp
and
in
in
repz
and
inc
push
mov
xchg
jmp
rorl
sub
jmp
mov
dec
dec
enter
push
pusha
and
shlb
pop
mov
adc
and
cmpsb
and
jecxz
sub
inc
fcoml
hlt
push
push
loopne
popf
ljmp
ds
jb
cmp
in
sub
xchg
notl
shlb
adc
out
pusha
inc
sbb
shlb
aad
fimull
xlat
aam
loopne
lods
andb
mov
addb
pusha
sti
xchg
sub
stc
xor
stos
pusha
loopne
cmp
enter
inc
push
and
addb
or
imul
pop
inc
fildll
xchg
addr16
sbb
mov
mov
pop
int3
pop
pop
js
pusha
loopne
or
rclb
mov
or
sar
andb
mov
inc
jmp
add
sub
fcoml
cld
int
sub
add
and
push
or
rorb
das
push
or
aaa
cmp
mov
add
movzbl
rolb
fdivl
movsb
mov
push
ljmp
mov
pushl
and
add
push
push
loopne
jl
cmc
sbb
outsb
lods
addb
andb
arpl
repnz
push
add
mov
and
sbb
pushf
jbe
add
pusha
ror
out
and
into
ret
jmp
cmp
and
pusha
insb
or
pusha
inc
sarb
ret
cld
out
pop
sub
push
add
and
pop
lea
in
fiaddl
sahf
adc
mov
loopne
push
out
scas
call
outsl
ss
jo
xchg
sti
add
and
cmp
andb
enter
sbb
mov
jp
pusha
loopne
mov
stos
aad
pop
mov
xor
sbb
cmc
jg
movsl
sbb
adc
ret
mov
pop
int
test
xchg
xor
cli
xor
add
sbb
ljmp
jno
idiv
fstp
cmp
rclb
mov
dec
inc
xchg
icebp
adc
jbe
and
mov
fnstcw
testb
ljmp
daa
incb
into
repz
mov
adc
shlb
dec
clc
dec
dec
xchg
popa
outsl
jl
repnz
mov
mov
sub
loopne
in
shl
inc
cmpb
cmp
inc
rol
jns
pop
cmp
mov
add
addb
sub
adc
fmuls
xor
jl
or
and
add
hlt
fimuls
xor
rcrb
xchg
and
sbb
inc
loopne
out
cli
mov
bound
inc
cmpb
and
adc
leave
js
and
imul
jne
inc
pusha
outsb
into
cmp
loop
add
and
ljmp
mov
push
inc
subb
push
pusha
rorb
push
in
sub
imull
and
sbb
fs
data16
out
ss
loopne
jno
ljmp
out
insl
push
scas
xchg
adc
mov
jo
jge
cli
jb
xchg
mov
cmp
pushf
lods
jns
pop
dec
loop
andl
repnz
inc
sub
daa
fsubrs
lea
mulb
lods
and
xor
cltd
scas
and
dec
dec
rclb
insl
mov
pusha
insl
mov
loop
inc
sbb
es
add
sbb
flds
add
shrb
loopne
adc
shr
inc
jle
add
adc
mov
pusha
shlb
pusha
add
cmp
outsl
cmp
out
fcoml
ret
add
mov
and
je
pusha
test
jo
dec
cmp
lahf
notl
and
lahf
cli
pop
jle
mov
mov
pusha
loopne
call
dec
fxch
jo
lahf
xchg
outsl
cmpsl
nop
js
daa
and
mov
ljmp
loopne
das
and
inc
inc
sbb
shl
imul
pop
inc
stc
mov
rolb
dec
fwait
and
jno
je
jle
andb
lods
add
into
sbb
aad
cld
mov
push
push
push
pop
add
pop
stc
add
dec
add
rcr
aad
out
mov
xorb
int
testb
ljmp
dec
mov
sub
mov
and
sub
add
add
dec
setl
and
fiadds
jge
inc
movsb
loopne
pop
loop
in
and
fxtract
and
jecxz
and
stos
inc
sbb
cmpsb
and
popf
sub
andb
add
shl
mov
rolb
push
mov
adc
xchg
or
loopne
test
adc
xor
dec
sti
inc
aas
sbb
add
pop
mov
hlt
and
mov
push
pop
addb
inc
lahf
xor
loopne
mov
insb
lahf
or
inc
subl
and
fwait
jle
fsub
jo
jnp
add
loopne
pop
adc
shlb
mov
pop
pop
adc
mov
mov
dec
decl
sub
and
add
insb
pop
jb
lret
iret
ljmp
into
pop
lods
and
lods
test
add
rolb
mov
mov
orb
xchg
lods
mov
jle
sbb
xchg
sti
lods
loopne
pop
xchg
inc
lret
xlat
dec
lcall
or
ss
inc
sbb
ret
imul
mov
add
ljmp
je
jg
and
dec
mov
aaa
popf
inc
aad
popf
or
loopne
int3
sub
aam
aas
lret
cmp
loopne
iret
icebp
cld
aam
and
mov
push
add
insb
push
jbe
dec
enter
rcrb
mov
and
mov
ret
sbb
dec
addb
add
pusha
mov
fdivl
jg
pushf
mov
and
sbb
pop
sbb
inc
shl
adc
and
inc
pop
mov
add
and
in
inc
filds
lock
insl
out
ficompl
sbb
adc
mov
push
fistpll
faddp
sub
loopne
call
pusha
andl
inc
insb
loopne
mov
loopne
sti
repnz
sbb
mov
fmulp
mov
add
js
fisubl
loope
loopne
mov
testw
daa
shlb
xor
test
xchg
jbe
pop
outsl
mov
xor
xor
cmp
mov
mov
js
adc
xor
pusha
pusha
loopne
add
inc
in
ret
scas
add
mov
xchg
lods
loopne
sbb
add
inc
adc
inc
pop
bound
inc
sarb
xor
or
mov
jbe
out
hlt
imul
add
cmpsb
pusha
addb
xlat
adc
mov
in
ja
lea
xchg
add
rcl
stc
notb
fmuls
jno
inc
sbb
loopne
lahf
jmp
addb
loopne
dec
jmp
ja
mov
adc
mov
sar
cmp
mov
rcll
mov
sub
addb
lock
aam
mov
roll
shlb
sub
in
jae
xor
fs
pop
pop
and
inc
leave
fwait
inc
imul
rolb
pusha
adc
inc
mov
idivl
aas
inc
shll
add
xchg
inc
bound
pusha
mov
adc
pop
stos
loopne
dec
mov
adc
rclb
adc
add
std
lds
aam
dec
mov
es
mov
xlat
pop
cmp
adc
mov
loopne
lds
movsb
add
add
out
in
mov
outsb
mov
mov
cli
jg
cmp
ljmp
repnz
cwtl
xchg
jl
cmpsl
test
add
adc
or
fsts
mov
fimull
lahf
jmp
rcr
push
ja
add
xor
inc
loopne
andb
lsl
jge
out
das
mov
je
inc
pop
sbb
pop
rorb
loopne
dec
idivb
add
and
pop
insl
adc
lds
rolb
fdivl
xchg
mov
dec
add
mov
outsb
repnz
orl
cs
pusha
sbb
nop
xchg
sarb
add
gs
add
xor
clc
adc
inc
cmpsl
jns
lcall
inc
xchg
sbb
sbb
cmp
and
shrb
pop
lods
repnz
mov
xor
jl
cmpsl
inc
inc
sbbl
and
jnp
in
xlat
xor
out
ret
jae
cmpl
iret
adc
jge
fistps
pop
mov
xchg
mov
lds
add
push
pusha
cmp
mov
jno
scas
jbe
jmp
mov
pop
iret
cmp
push
adcl
adc
sub
push
jbe
aas
outsb
cmpsl
fistpll
mov
and
movsb
andb
in
rolb
popa
aad
lahf
call
cmp
jl
add
add
loopne
mov
jbe
movsl
and
rcrb
cmp
rcl
in
lea
inc
cmp
pop
inc
cmpsl
push
not
outsl
sbb
jns
inc
test
and
popf
xor
push
jle
cmp
push
and
add
xlat
adc
and
add
outsl
sarb
andb
out
cld
adc
das
add
