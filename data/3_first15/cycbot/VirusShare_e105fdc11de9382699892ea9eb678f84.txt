in
xor
int
jp
dec
ret
sbb
inc
add
cmpsl
add
popf
jae
shlb
add
mov
adc
xchg
cmp
ret
scas
das
xchg
mov
iret
sti
or
add
mov
fistl
mov
jl
add
fs
sti
push
icebp
dec
lea
inc
cltd
cmp
int
lret
popa
and
das
arpl
ds
imull
or
sbb
hlt
js
outsl
add
sbb
js
bound
repnz
pop
arpl
fsts
xchg
add
js
xor
in
add
mov
cmp
movhps
sbb
sbb
jbe
cmp
mov
stos
dec
lods
lods
push
arpl
cmp
sahf
cmp
jns
xcrypt-ctr
cmpsl
fwait
in
sbb
les
aaa
mov
clc
or
push
ret
add
ja
add
rolb
popf
test
repz
inc
add
sbb
fbld
sub
into
or
mov
sub
or
mov
lcall
inc
add
mov
or
psllq
dec
or
clc
movsl
add
push
fcomp
mov
out
lret
and
stos
mov
pop
aaa
les
jne
add
out
test
lret
sub
fcmovu
pop
filds
and
mov
mov
movb
les
jmp
push
jns
add
add
dec
pop
push
mov
pop
cli
fwait
mov
dec
mov
xchg
aam
pop
adc
std
addb
data16
int
add
cmp
add
jmp
jo
subl
xchg
ds
cld
sti
call
flds
icebp
and
or
call
add
movsl
mov
xor
or
ss
add
jo
mull
arpl
push
add
sbb
sbb
popa
insb
test
xchg
stc
xlat
and
lock
das
scas
mov
nop
fisttpl
inc
add
adc
inc
add
cmp
lcall
push
add
sbb
test
dec
mov
lcall
jl
mov
pop
sar
inc
add
jg
sub
lret
add
jb
pop
jge
or
push
add
adc
test
sbb
add
mov
mov
and
jns
inc
add
dec
sbb
jae
xor
je
int3
sub
jo
add
int
add
xlat
arpl
mov
sti
lods
push
cmp
xor
add
sub
add
adc
cmp
and
cmpsb
dec
sub
cmp
add
dec
nop
xchg
inc
add
mov
addb
xchg
push
push
frstpm(287
jb
aas
and
xchg
data16
push
sbb
and
pop
test
inc
add
addr16
dec
lret
mov
jp
jnp
mov
testb
rcr
jbe
imul
mov
jg
in
add
movsb
inc
mov
mov
div
jne
push
insl
cli
jmp
imul
push
popa
sub
xchg
popf
or
mov
xchg
push
add
xor
aaa
cmp
movsl
mov
nop
sbb
jno
or
xlat
imul
or
add
add
pop
fisttpl
in
dec
add
lods
xor
sub
sub
std
lret
xor
addb
and
cwtl
pop
jle
imul
add
stc
out
scas
pushf
cltd
lock
cmp
movsl
les
scas
stos
xchg
enter
mov
and
push
xchg
addl
mov
xchg
mov
popf
test
inc
add
lock
mov
mov
stos
jmp
inc
add
mov
sub
ss
ss
jl
rcrb
sub
add
out
mov
xor
inc
add
jp
test
mov
cmc
and
sbb
push
dec
jns
add
cmp
movsb
stos
je
sub
sub
dec
jg
ret
test
inc
add
cmp
and
mov
pop
fcoms
jg
icebp
repnz
je
add
shrb
mov
dec
ds
mov
mov
loop
xor
lcall
outsb
xchg
daa
js
icebp
insl
cwtl
and
insl
icebp
dec
pop
ds
addr16
test
xchg
ljmp
imul
inc
fidivrl
in
sti
jp
in
cltd
ret
xchg
push
jno
nop
addb
stos
adc
add
insl
ret
out
imul
mul
sub
loope
test
sub
pop
add
pop
punpcklbw
push
mov
xchg
iret
arpl
mov
movsb
iret
sbb
fisubrs
js
xor
out
mov
mov
imul
inc
xor
jge
fisubl
loope
push
fistpl
test
cld
push
add
push
loope
and
jno
add
popa
scas
jno
push
jge,pn
sbb
xor
inc
inc
cmp
xor
add
ret
cs
dec
pop
test
addb
dec
inc
fstpt
xchg
xor
and
ror
adc
test
jno
shll
or
mov
lock
xchg
movsb
add
mov
xorl
sub
and
imul
adc
sti
popf
jnp
test
faddl
cli
dec
dec
pusha
add
les
push
add
add
test
add
insb
inc
inc
push
outsl
mov
cltd
and
adc
cmp
sub
push
jle
pop
adc
add
sub
cwtl
shlb
sub
adc
test
mov
call
addr16
add
mulb
imul
cmp
je
push
in
call
mov
movsb
mov
sub
call
jae
mov
mov
ljmp
ficomps
add
sbb
ss
cmpl
push
dec
out
pushf
dec
lahf
addb
mov
xor
mov
adc
ret
cmc
push
add
outsl
push
add
xchg
add
mov
mov
nop
sbb
add
inc
add
fbstp
or
cmc
dec
xchg
push
add
repz
nop
nop
lcall
mov
add
or
mov
dec
sbb
dec
aas
adc
clc
pop
mov
dec
xchg
sub
pop
inc
nop
subl
clc
push
cwtl
jmp
jl
shl
cmp
cmp
cmp
leave
and
addb
hlt
xchg
mov
adc
xchg
mov
add
jle
daa
add
fistl
mov
movsl
adc
cmc
pop
or
pop
jecxz
or
add
aaa
imul
int
push
movb
add
mov
lcall
or
cltd
sti
arpl
jmp
insb
push
insb
dec
test
leave
mov
neg
icebp
fiadds
dec
mov
inc
ja
lods
popf
sbb
bound
repz
mov
push
add
pop
ret
and
pop
xor
test
ja
outsb
andl
jmp
lahf
sbb
les
jne
jge
jecxz
add
ret
scas
fidivl
cmpsb
popa
stos
dec
pop
mov
addb
scas
call
push
test
out
out
mov
add
mov
mov
add
mov
xlat
mov
jne
add
add
sbb
add
add
xchg
jb
and
xchg
push
and
outsl
nop
mov
lret
fsubs
add
push
xchg
jne
mov
and
mov
adc
fcomps
sub
mov
push
push
lock
xor
mov
mov
jmp
dec
inc
jns
arpl
sub
hlt
sti
or
mov
mov
inc
mov
sbb
xchg
aad
fistl
stos
out
aad
jnp
push
bound
cmc
ffree
add
aas
aad
lret
testl
push
jmp
std
cmp
inc
rcr
add
xchg
inc
aam
xchg
jae
adc
adc
cli
out
adcl
push
mov
add
ret
add
dec
cmpsl
popa
idivl
jg
fistpl
pop
aaa
into
or
add
adc
mov
sub
dec
fdivp
cli
jb
les
ficoms
push
cmpsb
add
push
add
add
hlt
les
test
mov
arpl
add
fcoml
mov
les
inc
add
lret
lods
pop
movsl
daa
mov
cmp
mov
inc
test
rcll
fsubrl
pop
stos
mov
insl
inc
out
push
add
push
jbe
add
cltd
inc
add
lahf
and
adc
es
xchg
mov
push
push
push
shrl
push
ljmp
jo
test
testb
pop
mov
or
test
or
test
pop
or
iret
xchg
test
sub
mov
popf
jg
inc
add
sbb
add
add
loopne
adc
sti
pop
push
add
loope
add
jmp
add
or
add
mov
repz
adc
lea
cmp
sbb
xor
sarl
bound
lcall
push
pop
dec
mov
push
iret
jb
scas
push
popa
pop
in
out
add
sbb
inc
dec
mov
push
add
dec
loop
lahf
int
mov
add
adc
les
pop
mov
push
inc
add
add
adc
or
out
add
fcompl
outsl
scas
out
fidivl
or
inc
add
jge
cmpsl
mov
sbb
adc
mov
jg
push
sbb
aaa
jno
mov
jecxz
and
push
add
mov
imul
add
ljmp
or
shl
push
push
add
add
out
inc
or
mov
mov
hlt
aaa
inc
add
icebp
movl
or
sub
aam
cld
aam
addb
daa
ja
jp
lahf
push
test
ret
cltd
cmp
push
mov
cmpsb
or
fdivr
rol
add
or
data16
in
sbb
test
add
lahf
movsl
leave
push
int
aad
mov
rcpps
add
mov
add
push
or
in
add
loop
inc
add
cmp
pop
cmp
shrl
or
mov
das
lret
into
cmc
sbb
cli
bound
jp
jno
mov
pop
data16
fcom
in
sub
push
ja
xlat
mov
dec
insl
out
xor
inc
sub
loop
push
mov
int
add
jbe
or
mov
xchg
dec
adc
rcrl
xor
shll
mov
int3
lods
xor
in
fisttpl
cmp
pop
adcl
in
xor
mov
sub
add
add
aam
loope
gs
mov
pop
inc
hlt
jl
push
push
dec
loopne
jnp,pt
add
adc
cmpsl
pop
arpl
ljmp
incl
xor
inc
add
aas
cltd
addl
sub
jb
inc
add
out
pop
and
repnz
jle
arpl
insl
sub
mov
loop
addb
ja
mov
lods
lds
pusha
add
and
adc
outsb
rcl
xchg
int
inc
add
pop
aad
add
push
fldenv
daa
mov
dec
pop
cltd
popf
mov
pusha
add
sti
nop
mov
test
test
fcomp
sub
out
int
xor
adc
dec
int3
sub
ljmp
out
jg
dec
scas
or
lret
lods
leave
scas
push
add
jle
mov
mul
jge
test
out
fs
out
dec
dec
hlt
push
and
sbb
push
xchg
aam
mov
lret
scas
das
leave
imul
jbe
sahf
icebp
out
push
mov
xor
cmp
lret
and
insl
cmpsl
mov
mov
fidivrl
mov
add
rolb
mov
xchg
adc
daa
push
bound
ja
out
dec
adc
gs
cld
dec
xchg
jo
adc
mov
cmc
adc
mov
jecxz
fxch
mov
fcoms
and
sbb
jecxz
outsb
bound
or
sub
jp
jmp
push
xchg
out
outsb
stos
addr16
add
shll
imul
dec
or
mov
or
add
ds
ret
inc
mov
and
loop
pop
or
xor
test
fistpll
enter
or
inc
add
pop
stos
scas
xlat
rcl
add
movsb
fstpt
sub
adc
shll
add
or
add
add
add
add
in
je
add
xor
mov
sbb
addl
addb
leave
shrb
in
dec
gs
add
es
pop
xor
adc
lret
repnz
dec
cmp
jp
push
jecxz
add
out
jb
add
mov
rcl
repz
add
aaa
inc
arpl
mov
leave
mov
xchg
stos
xchg
cmpsl
add
out
movb
jnp
sbb
xor
fstpt
sahf
mov
repnz
aaa
dec
ja
and
pop
imul
inc
or
scas
rolb
push
testb
addb
cld
ret
add
pop
in
int3
adcl
sub
gs
popf
mov
inc
aad
add
std
lret
lea
cmp
add
jmp
sbb
stos
xor
jge
jb
add
imul
mov
add
xchg
addb
push
inc
add
xchg
mov
push
add
cli
in
js
mov
outsb
push
push
mov
and
push
and
mov
les
pop
fnsave
rcll
add
jmp
lahf
cltd
mov
add
test
cmp
arpl
push
lods
mov
ror
mov
scas
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
cld
repz
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
es
push
jmp
icebp
mov
nop
cs
lea
mov
or
and
or
lock
lea
sub
xacquire
pop
add
ss
cs
push
push
lret
jmp
add
add
jl
rep
dec
lret
inc
das
and
push
add
in
push
les
cltd
jmp
mov
add
fsubrs
call
rolb
out
dec
jg
fiadds
out
lcall
in
mov
sti
xor
js
in
lahf
xor
mov
dec
mov
sbb
jge
or
stc
cltd
push
push
js
xchg
outsb
dec
std
push
andl
jne
mov
pop
pushf
cmp
inc
add
pushf
pop
ss
scas
dec
and
xor
cmp
xchg
add
mov
push
iret
leave
cmp
dec
inc
add
mov
in
ss
inc
add
xlat
adc
outsb
mov
loop
xor
cmp
cmp
fists
pop
push
dec
xchg
mov
aaa
inc
push
leave
sub
les
sbb
and
lret
or
iret
add
loop
movsb
scas
cs
sbb
mov
fs
pop
cld
loope
mov
sub
push
lcall
inc
add
adcl
mov
movups
fwait
shl
fsubs
imul
mov
fidivrl
scas
les
fsts
pusha
add
std
push
push
or
push
xchg
push
sbb
adc
test
int
cmc
cmpsl
imul
int3
stos
dec
mov
xchg
add
dec
jecxz
faddl
negb
std
push
push
negl
mov
mov
fcompl
push
sub
subl
inc
mov
mov
inc
add
pop
sbb
cmpsb
pop
pop
lods
fcom
or
jo
cmpsl
add
add
push
sub
push
pop
repz
nop
jl
hlt
add
repnz
sub
jo
fidivs
ret
jno
insl
stos
cmp
xor
jns
xchg
mov
or
lea
addr16
sub
ja
add
add
movsl
inc
add
mov
test
inc
add
push
cmp
pop
or
or
inc
add
mov
xchg
lds
mov
xchg
and
pop
jnp
dec
mov
out
add
cmp
movsl
push
mov
stos
sub
les
lret
jg
lods
je
pop
jns
xor
sub
xor
in
mov
sahf
cmp
mov
cmp
or
push
fidivs
add
push
push
and
lahf
and
call
xor
mov
pop
addb
dec
fisubs
ljmp
lds
clc
das
jns
and
mov
jecxz
stos
xor
or
or
lods
inc
add
xchg
imul
mov
cld
imul
add
insl
xor
inc
mov
cmp
sbb
inc
rorl
inc
mov
call
movb
cwtl
sub
add
xchg
jno
add
xor
fsubrs
addb
xlat
out
fmul
jp
bound
jmp
inc
adc
push
or
cmp
in
imul
ds
adc
in
addb
outsb
lcall
sub
stc
das
add
add
cmp
add
flds
fs
cli
int
shrb
jmp
cmp
test
sbb
push
or
or
sub
dec
adc
loop
xor
adc
jbe
sahf
daa
fistpll
je
rcrl
stos
scas
adc
xchg
jb
outsb
cwtl
ret
test
lcall
sub
inc
dec
shll
push
test
stc
sub
and
sub
xchg
test
xor
out
add
mov
call
fadds
jo
arpl
sahf
cmp
jl
add
adc
call
das
add
sarb
and
mov
inc
add
dec
dec
jecxz
dec
test
dec
stos
jae
cmp
dec
popf
sbb
fcomip
jp
outsl
inc
lods
cmpsb
push
xor
ret
push
sarl
jl
xlat
fildll
adc
loope
jmp
lea
add
mov
sub
lods
pop
in
xchg
fs
lret
lods
push
and
xchg
nop
mov
jmp
add
arpl
cwtl
sub
push
xlat
in
push
ss
pop
mov
jb
scas
and
out
mov
mov
jg
daa
rolb
movsl
mov
sbb
add
mov
sbbl
test
mov
std
sub
add
movsb
in
data16
addr16
cwtl
push
jo
les
xor
xchg
dec
xchg
ret
jp
add
push
and
jle
cwtl
sub
aam
daa
clc
stos
insb
lret
add
cli
push
xchg
pop
popa
call
ret
fiaddl
mov
in
andl
mov
add
jnp
mov
int3
data16
lcall
fimull
cld
fsubs
loop
or
mov
or
add
mov
repz
int
in
sbb
fcoml
insb
mov
adc
leave
sahf
xchg
cltd
stos
rorb
mov
shrl
sti
int
dec
dec
push
scas
xor
std
lds
cltd
inc
add
and
xor
xchg
xor
out
jp
cmp
xor
rcrl
stc
rorl
test
mov
mov
jo
lods
or
add
insb
and
cmp
mov
movsb
scas
sub
add
int3
and
test
jne
add
sbb
and
bound
inc
sahf
loop
jge
and
data16
xchg
std
pop
out
jmp
jmp
cmp
testl
sbb
cmpsl
cmp
cmp
addb
jp
jne
cmp
cmp
cltd
addr16
addb
inc
push
es
fistpl
aaa
inc
imul
out
aad
outsl
lods
bound
sub
stos
jnp
push
jg
rorl
mov
in
add
shlb
cmp
mov
adc
in
jl
xlat
outsb
push
jle
and
add
imul
mov
cmp
mov
dec
call
hlt
xlat
mov
pusha
add
in
pop
jbe
mov
inc
add
mov
add
jae
lock
inc
add
cmovs
movsl
mov
mov
gs
test
sbb
add
add
pop
ja
imul
add
fistpl
fcom
inc
xchg
pop
pop
or
jle
mov
aam
fadds
ret
call
scas
les
and
xchg
out
or
jmp
ljmp
mov
fcompl
or
pop
lock
add
cmp
pop
dec
mov
xchg
cltd
rcll
cld
out
fidivrl
rcrl
lahf
and
out
pop
and
icebp
test
jmp
add
arpl
pop
btc
lods
mov
in
std
xchg
stc
ja
sbb
xor
inc
sbb
cld
addb
adc
pop
cmp
mov
dec
adc
jle
mov
les
mov
xchg
xchg
pop
inc
add
push
pop
je
test
icebp
adc
add
incl
mov
stos
aas
aaa
movsl
and
inc
add
adc
jg
jo
cwtl
aaa
add
sub
lahf
inc
add
push
xchg
fnstcw
add
mov
mov
mov
pop
lret
data16
orl
add
lret
pop
xchg
popa
mov
adc
stos
mov
dec
or
add
sub
movb
xchg
inc
adc
add
stos
xor
dec
jo
adc
push
dec
push
mov
lret
jmp
add
cli
pop
mov
add
push
in
adc
cmc
xchg
or
jl
not
and
loopne
inc
add
into
adc
and
mov
loopne
push
ss
adc
rcrl
mov
cmp
lods
add
push
mov
dec
insl
ror
and
jl
ret
idivb
add
scas
mov
add
mov
add
addb
push
lret
je
das
pusha
add
fidivl
jl
xor
mov
sahf
xchg
cmp
mov
jae
rcrb
mov
cmpsl
addr16
ss
idivl
add
or
xor
dec
dec
inc
add
ret
out
addr16
movsl
jnp
ja
arpl
sbb
jg
and
adc
lods
inc
push
add
cli
arpl
lods
mov
mov
add
adcl
je
and
testl
aaa
and
cli
lods
or
push
mov
pushf
push
xor
add
add
mov
add
lahf
add
adc
fcoms
in
jle
stos
push
lcall
or
loopne
xchg
dec
or
into
sbb
out
mov
and
insb
in
dec
loope
xchg
cld
movb
xchg
jo
jl
in
add
sar
std
cmp
lods
jmp
pop
nop
test
push
int
jg
push
mov
popf
push
mov
lahf
or
mov
les
mov
push
sub
stos
sbb
jne
cli
std
pop
rorb
mov
and
sti
jno
lds
xchg
jns
stos
scas
cmpsl
stos
push
pop
mov
mov
pop
xchg
push
sub
std
fwait
inc
add
push
adc
and
mov
xlat
sti
test
sbb
jne
test
stos
or
int
clc
pop
dec
add
push
sbb
xchg
popf
xchg
pop
mov
addr16
pop
jnp
dec
and
cmpsl
mov
add
cmp
ret
cld
ds
sub
cs
pop
cmpl
adc
test
gs
xor
jge
sahf
mov
rorb
pop
inc
add
cmp
cltd
dec
decl
sahf
scas
scas
adc
add
adc
mov
stc
mov
sbb
add
add
and
fcmovne
aad
sti
mov
adc
loop
sbb
cmp
rclb
repnz
fs
add
inc
add
mov
inc
add
mov
adc
fisubrs
jmp
pop
adcl
in
in
insb
cmpsl
inc
and
sbb
imul
shrb
insb
mov
shll
pop
imul
cmp
ljmp
push
dec
aam
pop
inc
shlb
rolb
adc
sub
cltd
dec
mov
add
lock
je
data16
mov
pop
jnp
or
jge
adc
mov
push
incb
mov
xor
test
fdivrs
imull
imul
insb
add
lods
bound
pop
cmp
xor
mov
push
jae
repnz
into
loope
cmp
test
add
add
pop
mov
pop
add
in
mov
jg
xlat
and
push
mov
pushf
cmpsl
mov
jmp
dec
scas
sarb
ret
sbb
mov
or
outsl
xchg
jbe
push
xchg
mov
clc
aaa
dec
jnp
test
outsb
sbb
pushf
push
add
sub
pop
test
out
cmp
in
mov
add
jge
add
jb
les
mov
and
mov
add
pop
mov
push
add
stos
test
jo
daa
xchg
xor
test
jl
inc
xlat
jo
pop
push
stos
test
mov
adc
bnd
add
or
sbb
cltd
or
cld
adc
in
inc
fdivrs
fiaddl
or
mov
cmp
add
test
enter
add
stos
std
test
or
add
rolb
xor
dec
push
add
mov
push
stos
sbb
or
mov
stos
test
mov
leave
scas
cli
and
jl
hlt
in
movsl
adc
inc
add
addb
mov
mov
je
lret
fbstp
mov
loope
fcompl
lds
xchg
cmp
push
cmpl
pop
mov
mov
xchg
inc
mov
stos
lret
mov
cmc
pushf
push
cltd
lock
xchg
xchg
in
stos
xchg
dec
push
xor
pusha
add
into
test
rolb
test
pop
xchg
ljmp
add
scas
or
movsb
push
cmp
xchg
push
jecxz
sub
xchg
cmp
ja
out
push
into
mov
test
test
insl
lock
mov
xchg
dec
adc
mov
lahf
xchg
jmp
mov
inc
cmpsl
mov
dec
push
push
aad
std
sub
push
repz
repnz
jp
dec
push
sti
sub
or
dec
movsb
outsl
into
notb
add
popa
sahf
or
imul
pop
in
cld
cmp
ret
les
xchg
jo
sahf
out
out
fs
or
mov
or
inc
add
push
push
int3
aad
push
xchg
dec
into
loope
pop
loop
and
mov
mov
mov
imul
jmp
cmp
lods
hlt
push
or
icebp
imul
pop
inc
add
rolb
add
cmc
filds
or
add
xchg
lret
bound
mov
loope
sti
adc
nop
pop
and
repnz
mov
fcomi
scas
cmp
ret
or
sub
jo
add
popf
push
cmp
vrcpss
std
fisubs
mov
bnd
fmull
cmp
xor
mov
xchg
sub
add
cld
jg
jns
cld
into
mov
or
loope
mov
add
cli
popa
js
add
cmp
xor
popf
ret
nop
aaa
das
inc
add
sub
jnp
in
cltd
xor
or
mov
fmull
inc
add
adc
sbb
stos
fsubs
add
pop
sbb
dec
or
std
sti
paddq
gs
push
jno
addb
in
ret
mov
cld
cli
insb
or
mov
xchg
push
mov
enter
inc
dec
add
std
mov
insb
xchg
xchg
mov
cmp
jno
in
shl
mov
xchg
dec
xor
dec
xchg
mov
dec
int
add
gs
push
push
and
push
push
adc
xor
js
xchg
push
and
outsb
xor
lahf
notl
dec
addb
pop
jo
jg
add
pop
shl
movsl
add
cmp
add
ficoml
fsubrl
add
addb
adc
adc
inc
sbb
pop
sbb
enter
test
sbb
or
ret
or
add
nop
movsl
push
push
xchg
jecxz
lret
std
push
xor
inc
add
add
jae
xor
mov
xor
xor
pop
ss
or
fdivs
pop
addb
addb
inc
cmp
mov
cmpsb
repz
xchg
iret
mov
sbb
movb
dec
in
add
xchg
fsubrl
add
xlat
mov
lahf
in
sub
test
jnp
add
pop
or
rol
add
adc
and
xchg
mov
mov
test
add
inc
xchg
fs
shlb
jecxz
xor
lds
mov
int
pusha
add
add
adc
sti
hlt
mov
add
dec
jmp
bound
sbb
testb
adc
shlb
clc
cli
into
cmp
push
mov
iret
sahf
mov
call
add
mov
cli
jo
fiaddl
js
sub
pop
vpsubb
mov
or
mov
xor
sub
out
xor
imul
and
pop
sub
and
dec
mov
add
jle
push
or
repz
inc
xor
movsl
xchg
xor
gs
adc
movsb
push
cli
push
cmpsb
sbb
addr16
pop
and
pop
jnp
decl
test
fisttpll
jne
rolb
rorb
and
stos
sub
fildl
ja
fsub
xchg
sbb
pop
mov
shll
aas
inc
add
adc
jmp
les
inc
add
mov
nop
in
rolb
xor
push
loopne
lods
push
dec
aaa
icebp
das
call
adc
das
jp
lods
test
inc
push
xchg
jnp
push
mov
adc
inc
add
pop
xchg
jne
xchg
mov
loop
int3
fildll
inc
daa
mov
add
mov
aam
pop
mov
out
iret
push
out
incb
pop
mov
mov
add
or
insb
out
push
inc
add
pop
dec
ss
nop
ljmp
in
jbe
add
inc
sbb
js
adc
daa
popf
and
push
inc
add
insl
mov
sub
in
outsl
inc
add
inc
add
inc
add
cwtl
sbb
xor
movsl
out
xchg
sbb
repnz
dec
lcall
push
add
pop
pushf
mov
add
arpl
push
enter
loopne
add
add
cltd
shll
add
jl
cltd
sub
jmp
int3
inc
add
jb
add
add
sbb
sbb
mov
ds
in
mov
jae
mov
inc
sbb
add
add
out
movb
jns
ss
pop
std
les
sub
std
mov
fs
sub
add
cmp
cmp
mov
push
sti
jg
pusha
add
sbbl
sbb
lock
adc
add
mov
cmp
jmp
xor
gs
dec
cmp
out
mov
add
rcl
mov
and
cmp
cld
xchg
sbb
testb
push
aam
mov
cld
jecxz
or
sub
repz
lods
inc
add
aad
lds
inc
add
adc
add
xchg
sarb
mov
cmpsl
dec
xchg
test
jmp
popa
movsl
icebp
pop
cvtps2pi
xor
or
ficompl
aaa
mov
pushf
sbb
add
xchg
fists
jl
push
daa
insl
jg
je
mov
jno
movsb
and
and
dec
jae
mov
pop
fwait
sub
and
xchg
adc
and
add
mov
mov
push
jg
add
jecxz
push
ss
mov
cmp
nop
enter
addb
hlt
pop
mov
incl
cmp
in
data16
cmpsl
data16
leave
idivb
movsl
mov
mov
jno
or
inc
add
push
dec
adc
push
clc
and
xor
es
int
scas
dec
lds
faddl
add
add
imulb
loop
add
psrlw
pop
or
and
mov
pop
hlt
ficoml
bound
cmp
mov
inc
add
cmp
or
addr16
add
dec
jns
jecxz
pop
mov
mov
dec
lcall
and
mov
test
push
andl
out
add
inc
mov
rcl
xchg
cmp
sub
jmp
push
adc
push
int
push
enter
add
mov
push
imul
es
mov
jo
sub
jb
inc
add
test
add
addb
cmp
push
add
cmpl
dec
into
dec
std
mov
sbb
into
xchg
sbb
mov
iret
lds
mov
ljmp
adc
enter
pop
xchg
inc
dec
stos
pop
inc
add
pop
mov
sub
and
push
add
enter
add
movb
aas
push
inc
add
push
dec
dec
frstor
adc
cli
xchg
pop
js
andl
repnz
add
addl
notb
out
rcrl
xlat
movsb
enter
ret
and
jmp
icebp
push
push
inc
add
jae
mov
sub
sub
or
and
jnp
mov
add
xor
clc
outsl
mov
ja
cmp
test
mov
push
aaa
jo
sar
push
add
mov
push
icebp
aaa
jg
aad
pop
xor
fistps
jo
mov
popa
sbb
fs
lcall
dec
jle
sub
fcompl
mov
mov
pop
dec
mov
adc
xchg
or
mov
lret
into
jmp
insb
fmuls
push
push
xor
add
and
dec
cmp
sub
mov
inc
add
sbb
and
cmp
dec
in
in
adc
add
and
mov
inc
add
jecxz
or
cmp
jb
sti
addr16
cmpsb
leave
lods
lock
inc
add
out
mov
xor
add
mov
cli
inc
add
andl
das
sbb
jmp
scas
popa
mov
hlt
frstor
add
into
push
cmp
mov
in
or
add
adc
mov
jno
mov
pop
add
push
inc
add
dec
aam
loopne
push
xlat
in
popf
cs
rolb
bound
je
xchg
inc
add
fsub
mov
mov
addb
mov
or
sub
cli
ljmp
dec
inc
popa
bound
dec
push
sub
lret
movb
jnp
mov
xor
js
mov
jmp
add
lea
add
cli
push
pop
lcall
fdiv
xlat
bound
or
out
subl
cmp
mov
pop
or
lret
fldenv
stos
enter
enter
or
imul
pusha
add
fsubrl
push
sbb
mov
std
and
mov
pop
clc
adc
pop
sub
je
divb
jne
sub
shl
decb
add
int
add
xchg
inc
in
repnz
jne
ret
sbb
int3
jp
jo
loope
add
jge
addr16
aam
gs
shl
in
lods
xchg
push
mov
jge
scas
adc
ljmp
test
outsl
mov
clc
sub
lcall
pop
jp
mov
pop
idivl
cmp
popa
cld
xor
xor
negl
popf
push
inc
popf
sbb
pop
fildll
mov
test
out
jg
push
gs
sbb
add
stos
test
cmp
mov
cmpsl
cld
and
adc
inc
rcrl
xor
loop,pt
inc
ljmp
cld
mov
push
imul
jle
test
jmp
addb
test
jmp
lds
pop
das
lcall
out
or
xchg
sub
sahf
stc
lods
dec
cmp
inc
xor
sets
push
push
xchg
pop
mov
xchg
jne
mov
ror
adc
xchg
inc
add
jns
mov
cmpsl
notb
push
dec
addb
xlat
stc
or
addb
movb
jnp
xlat
mov
dec
push
cmp
push
add
jne
push
add
mov
sbb
xlat
xor
in
jne
fucomp
in
call
inc
add
lock
push
gs
adc
sbbl
and
stc
icebp
jb
mov
mov
cwtl
and
test
dec
jb
hlt
pop
mov
in
imul
movb
mov
nop
and
and
dec
lods
das
ret
stos
mov
ret
in
cmc
jp
scas
cmpsl
test
mov
lock
scas
das
ljmp
and
imull
leave
dec
mov
dec
jecxz
std
push
ljmp
dec
pop
dec
sbb
rep
lcall
add
cltd
push
notl
cmpsb
fsubr
fbld
repz
ficoml
and
mov
jae
call
add
inc
xchg
sbb
leave
sbb
or
or
fwait
and
mov
mov
inc
jo
adc
mov
cmpsb
push
fmulp
push
ljmp
mov
bound
nop
jp
and
es
sete
add
adc
outsb
test
mov
arpl
sub
imul
ss
jo
xor
cmpsl
bound
inc
add
add
daa
pop
or
mov
fst
xchg
push
xchg
xor
sub
mov
je
imul
cmc
xor
rclb
add
jle
mov
cmp
shlb
in
movsl
shlb
shll
clc
andl
sub
add
mov
add
add
shr
cwtl
lea
xchg
mov
sbb
dec
push
roll
pop
jp
jo
mov
pop
popf
mov
jecxz
mov
push
add
add
cld
repz
rcrb
and
or
push
jbe
cmp
fs
adc
out
push
sbb
fisttps
jno
xor
into
or
or
pop
inc
adc
fsubs
mov
xchg
cmp
hlt
shl
jp
lds
add
xchg
inc
add
mov
jns
pop
rorb
push
std
pop
jl
adc
leave
add
xchg
fs
fwait
mov
push
sti
arpl
leave
ja
addr16
dec
mov
add
fisubl
or
jp
add
add
push
pushl
and
pop
lahf
sub
push
xchg
dec
sub
adc
sbb
cmp
jne
adc
cld
cmc
adc
jl
lods
sub
xlat
sbb
das
addb
push
add
jno
lcall
dec
int
add
ds
add
and
add
test
rcl
jno
mov
leave
jae
fnstcw
xlat
in
mov
add
ret
nop
aaa
pop
jno
mov
lret
ret
xchg
sbb
sti
jecxz
pusha
add
inc
add
jp
daa
and
mov
push
dec
lds
sbb
lock
jmp
jp
or
and
push
repnz
add
inc
add
add
add
call
jae
into
ja
popf
cmp
jns
mov
sbb
jmp
add
adc
push
lret
gs
lret
jbe
add
in
aaa
push
add
subl
movb
lods
cmp
lret
leave
jle
pop
or
mov
pop
addb
mov
movsl
sbb
jae
out
sbb
lret
cmc
ljmp
add
and
xchg
mov
adc
pop
leave
xchg
or
inc
rcrl
xor
add
xlat
mov
xor
mov
add
and
rcrb
out
loopne
lds
int3
negb
add
pusha
add
sub
in
out
pusha
add
dec
push
push
or
cli
fsub
lods
pop
inc
dec
je
add
pop
jbe
mov
mov
add
add
jle
addr16
sarl
push
and
out
movsl
push
mov
in
push
mov
popa
popa
mov
mov
enter
add
sbb
dec
int
xchg
push
push
xor
loope
and
jmp
mov
inc
rcll
aad
adc
add
xchg
mov
pop
rorl
push
pop
addr16
cs
xchg
inc
add
fnstcw
loopne
lret
jb
add
in
sbb
dec
test
cs
arpl
mov
call
out
xor
ss
jmp
jp
addr16
jl
fidivrl
repnz
mov
stc
jno
loopne
add
fadd
add
pop
or
mov
fistps
idivb
mov
push
push
ljmp
fistpl
in
mov
mov
or
insl
push
outsb
icebp
je
lods
dec
adcl
movb
add
jle
aad
mov
nop
jno
mov
push
push
divl
jno
push
mov
and
and
push
movb
int3
mov
mov
pop
and
adc
jl
sub
aam
xchg
cmpsb
fistl
sbb
jle
inc
add
in
dec
in
pop
addb
mov
adc
add
das
cmp
push
and
mov
xor
add
add
push
orl
mov
scas
pop
test
dec
xchg
les
popa
and
cmp
add
das
jnp
add
lods
cmp
scas
adc
or
add
pushf
and
stc
lret
aad
xlat
sub
int
dec
jnp
pop
adc
add
imul
stos
fbstp
xchg
xchg
or
lahf
jle
stos
inc
call
push
scas
xchg
cmp
xor
cmp
aad
cmpsb
es
andl
ret
mov
mov
cld
iret
fimull
inc
mov
gs
aad
mov
add
cs
sub
lds
nop
aam
outsb
xlat
inc
rorb
jp
push
call
or
inc
add
push
jnp
mov
movsb
sti
clc
test
jb
fwait
pop
lret
mov
push
je
test
inc
fdivl
add
lahf
loopne
add
sti
pop
imul
test
add
mov
push
test
add
data16
sub
es
and
adc
add
jmp
outsb
mov
dec
fistpl
push
movsb
es
add
mov
pop
movb
scas
adc
ja
aaa
sar
add
cmp
mov
rcrl
mov
mov
bound
and
add
adc
incl
add
mov
call
mov
adc
xor
xor
shrb
cmpsb
add
add
movsl
cli
adc
stc
insl
aad
std
out
rorb
fistpl
test
add
jecxz
aas
mov
dec
and
pop
loopne
inc
inc
add
mov
in
pop
insl
pop
dec
das
imul
fmull
add
add
pop
and
lret
mov
cmc
mov
xchg
pop
xor
xchg
mov
sub
sbb
lock
add
cmpsb
push
add
dec
jb
mov
stos
cmc
aam
xor
add
jg
jne
and
or
sahf
leave
dec
lret
out
add
jecxz
nop
mov
ja
dec
popf
and
xor
pushf
push
dec
sub
add
dec
cwtl
mov
add
sahf
in
mov
movb
mov
cli
iret
fdivrl
add
jae
addr16
add
cld
gs
rcrb
call
mov
jl
mov
movsb
dec
mov
xchg
fwait
out
sbb
add
movsb
push
and
ret
aas
lahf
mov
int3
push
xor
xor
ret
jmp
jne
add
addb
clc
mov
push
jno
xor
andl
xchg
in
fldenv
add
shrb
cwtl
dec
movb
dec
and
cld
cmp
add
es
decb
sub
dec
pop
ds
enter
jns
addb
data16
aaa
lods
mov
pop
cmp
push
mov
xchg
sub
loop
out
adc
pop
and
add
or
xchg
jae
sub
xchg
shlb
add
jge
add
jp
fistpl
inc
mov
lcall
mov
rorl
lock
jns
test
mov
das
and
push
or
imull
ds
lods
loop
popf
sbbl
or
and
push
mov
push
dec
sub
in
pop
cmp
mov
jg
inc
add
push
insl
in
or
ret
lcall
add
ds
sbb
mov
cmc
mov
lahf
add
adc
sahf
cmp
and
sbb
pushf
fisttpll
add
dec
mov
adc
jae
sahf
gs
fistpl
adc
and
testl
sbbl
int3
sub
icebp
addb
lods
sub
adc
xor
int3
push
pop
xchg
incl
push
rcrl
push
in
pop
xchg
pop
cmc
fcompl
pushf
sub
push
jns
inc
add
push
fsubp
push
bound
out
add
jl
dec
les
adc
and
sahf
push
es
mov
xchg
repz
push
sbb
pop
mov
out
shlb
lret
adc
mov
push
lea
add
add
xchg
cli
loope
add
xor
ljmp
std
test
inc
inc
add
cmp
cmp
jmp
cmp
add
pop
or
adc
loop
inc
or
mov
ret
sbb
and
daa
stos
xchg
sbb
mov
ljmp
lret
sub
fcmovbe
pushf
dec
sbb
xor
add
movb
mov
mov
mov
lcall
movsb
lock
in
dec
nop
movb
inc
dec
test
push
adc
cli
loope
addb
mov
or
out
xchg
fs
insb
xchg
push
stc
addb
outsl
bound
push
in
scas
dec
data16
jge
sub
xor
stc
loope
push
out
inc
inc
and
dec
es
or
push
andl
cmc
mov
cmp
xchg
or
cwtl
mov
dec
jne
add
lcall
cli
mov
nop
add
xchg
mov
popf
pushf
or
lods
addb
xor
xor
ds
inc
jmp
xlat
dec
or
cwtl
pop
mov
add
jp
arpl
xlat
pop
out
cmpsb
mov
jb
push
xchg
jl
jb
xchg
loop
add
outsb
jo
fisubs
popa
outsb
repz
xchg
out
fstpt
push
jp
ds
jnp
or
test
mov
add
pop
in
cmp
inc
daa
and
adc
sub
mov
inc
add
addb
nop
into
sbb
add
mov
jg
mov
in
ret
into
clc
les
cmp
add
pop
jmp
popa
in
or
push
sahf
mov
pushf
clc
jge
mov
out
and
sbb
push
addb
sarl
sbb
sbb
ss
clc
data16
push
xchg
adc
and
cltd
push
adc
dec
cmpsl
pop
mov
out
cmpsb
xor
add
bound
dec
mov
out
mov
push
mov
push
push
mov
dec
test
cmp
in
mov
int
scas
shll
cmp
sbb
mov
insb
int
call
in
ret
mov
pushf
push
mov
jo
in
mov
lret
jno
loopne
pop
in
cld
mov
jo
or
add
jne
pop
sub
mov
rolb
mov
mov
add
add
insl
iret
hlt
imul
bound
out
sub
push
sub
sub
xchg
mov
je
fstps
add
fdivl
ficompl
push
inc
sbb
imul
dec
add
mov
sub
fcomps
inc
in
movb
add
add
fidivl
call
cs
mov
sbb
push
jp
int3
push
add
jne
dec
int
lahf
pop
jae
mov
mov
pop
in
movb
pop
push
add
push
jo
hlt
mov
pop
jbe
movsb
pop
stc
xchg
daa
out
adc
pop
mov
cmc
je
jl
aaa
nop
rcll
fstp
outsb
leave
out
fisubs
dec
push
sub
repnz
mov
jg
add
negl
fldenv
out
adcl
jecxz
fcompl
sub
in
add
jae
stos
arpl
enter
stos
or
jle
add
cmc
mov
add
imul
xor
rcll
clc
movsl
jp
mov
scas
bound
push
fistpl
fs
icebp
cld
sub
add
repnz
call
mov
ds
addb
jecxz
cwtl
test
and
shlb
adc
and
js
shl
cmp
popl
lret
push
lods
cltd
add
sbb
add
xchg
push
add
incb
stos
ja
les
sub
or
mov
iret
add
sub
mov
mov
mov
dec
jb
cmp
int
xchg
aaa
addb
jb
inc
add
xchg
dec
push
aad
pop
das
gs
dec
ffree
add
push
repz
in
jb
bound
stos
sub
jmp
add
adcl
dec
lret
outsb
enter
and
add
add
dec
inc
add
xchg
outsl
popa
mov
pop
cli
and
inc
pop
sub
add
in
dec
jae
das
adc
divl
in
aaa
pushf
mov
dec
add
fstpl
mov
sub
sub
lds
mov
arpl
data16
lret
imul
outsl
add
lods
cmp
inc
sbb
loope
inc
cmpsb
aas
adc
add
aas
push
or
push
call
and
inc
add
and
in
addb
pushf
mov
add
bound
popf
rolb
lds
test
sub
inc
add
jecxz
sahf
sahf
mov
pop
push
shrl
scas
or
out
rolb
adc
outsb
dec
cmp
adc
adc
test
rcrb
movb
jmp
dec
inc
mov
push
add
inc
aaa
xchg
or
adc
std
sub
and
xor
lahf
popa
or
mov
push
mov
add
xor
jge
add
pop
loop
es
xor
adc
xchg
pop
enter
xchg
push
mov
out
cs
loope
cmpsb
sub
and
cmc
xchg
test
movhps
insl
mov
adc
mov
outsl
mov
pop
xor
add
cli
lret
push
gs
add
adc
xchg
sti
shlb
adc
fptan
inc
xor
dec
in
mov
add
arpl
lret
sbb
insb
out
mov
pop
in
and
loopne
add
and
pop
fiadds
add
in
pop
sarb
mov
jecxz
adc
outsl
adc
dec
xchg
movb
add
in
add
shll
and
addr16
xchg
add
dec
lods
test
enter
je
push
outsb
and
aas
adc
add
xor
xchg
pop
sub
push
or
adc
aas
lcall
cmp
lds
aas
and
out
inc
xchg
adc
mov
fcmovu
cmc
mov
mov
fs
jne
jo
loope
mov
and
and
sub
lahf
into
and
daa
fs
xchg
xor
pop
pushf
out
cltd
dec
and
push
outsb
popa
insb
cld
inc
fs
pop
addr16
add
mov
or
jnp
leave
jae
or
or
lahf
popa
ret
or
ret
or
addb
xchg
mov
sahf
in
shll
and
mov
popf
popa
push
roll
sub
dec
mov
adc
mov
cmpsl
rorb
movb
repnz
mov
cmp
inc
fs
cmp
das
jmp
daa
pop
add
push
and
add
stos
iret
pop
lret
ja
cld
lds
bnd
sbb
sbb
sub
mov
outsb
js
jns
jl
xor
dec
jne
xchg
dec
icebp
mov
insb
xor
shll
mov
xchg
mov
dec
pop
jns
lret
rorl
xor
cmp
cmp
pop
mov
push
add
dec
out
cltd
mov
cmp
mov
loopne
push
jo
xor
dec
ja
cs
addr16
push
test
insl
mov
add
inc
add
out
jg
push
sbb
shlb
ja
push
add
mov
dec
inc
fcompp
and
adc
dec
shlb
sbb
clc
int
call
addb
loopne
mov
lret
xchg
add
addr16
test
and
sub
lahf
out
fld
add
ret
add
fwait
addr16
enter
mov
rorb
ljmp
mov
addl
xlat
hlt
pop
in
inc
add
push
sbb
pop
or
inc
add
add
jne
mov
iret
iret
mov
mov
aaa
and
out
out
dec
test
aam
push
fidivrl
xchg
daa
jno
clc
inc
lret
in
sub
enter
mov
jo
push
dec
aam
or
stc
movsb
incb
dec
sbb
add
mov
xchg
mov
cmp
pop
push
lret
repz
sbb
mov
ja
bound
movsb
icebp
mov
adc
mov
mov
xchg
mov
and
cmp
push
dec
loop
icebp
out
cmpsl
xor
cmp
mov
add
f2xm1
xor
mov
inc
addb
cmc
dec
jbe
cmp
stos
push
sub
add
cltd
lret
pop
xchg
xchg
sub
arpl
adc
sbb
movb
mov
and
enter
rcrb
dec
iret
aad
aas
sbb
or
int3
bound
push
loope
add
cwtl
movsl
fcompl
add
xor
xchg
add
lret
arpl
addb
sub
ljmp
cmpsb
lret
xor
jmp
fiaddl
pusha
add
xor
sbb
push
push
mov
xor
dec
jbe
test
mov
in
nop
mov
popa
test
or
dec
into
push
sbb
cmp
pop
xchg
fucomi
mov
stc
test
outsl
outsl
xor
mov
pop
ss
dec
pop
mov
sarl
sti
ror
mov
stos
out
push
add
icebp
sbb
xchg
ss
or
addl
loope
cmp
jge
mov
push
or
rolb
add
lret
bound
adc
pop
int3
stos
lcall
mov
rolb
add
adc
pop
dec
jnp
outsl
jecxz
jge
adc
repz
aas
jmp
ljmp
js
mov
dec
xchg
add
pop
outsl
mov
lods
ds
es
call
or
mov
add
std
sub
je
or
pop
mov
dec
outsl
out
outsl
inc
cvttps2pi
adc
test
outsl
inc
bound
es
aad
or
push
jl
jne
dec
sub
lcall
cmp
pop
incl
insl
inc
add
push
jmp
stos
adc
mov
lds
ret
addb
dec
jae
mov
aad
sbb
adc
add
pop
pop
jno
xlat
mov
loop
add
pop
pop
dec
jmp
ds
mov
and
or
mov
daa
sub
sbb
nop
mov
test
add
inc
or
les
pusha
add
mov
xorl
test
push
add
push
inc
rolb
fcmovb
add
mov
or
sub
and
push
aam
mov
add
or
mov
test
xor
sub
push
or
pop
or
dec
ss
sub
ljmp
jne
test
mov
adc
xor
frstor
add
xchg
es
out
iret
fadd
out
jge
mov
add
inc
arpl
cmpsb
leave
jns
xchg
int
sar
jmp
cmp
add
nop
pop
bound
add
mov
stc
ss
adc
sbb
or
sbb
inc
add
sti
inc
add
nop
cmpsb
add
sbb
xrstor
daa
std
xchg
mov
pop
adc
add
aad
pop
push
movsw
push
outsl
lret
dec
mov
lock
nop
lcall
fdivrs
roll
add
add
add
mov
pusha
add
sarl
or
in
movb
fldenv
mov
orl
rorb
jb
jmp
sbb
or
add
sbb
cmpsl
enter
sub
add
push
aam
or
push
push
inc
int3
stc
fmuls
test
xchg
pop
push
jae
mov
incl
lcall
or
dec
in
add
mov
rolb
sbb
repnz
dec
std
ljmp
add
pcmpgtb
das
ret
dec
outsb
add
dec
xor
xchg
shl
faddl
cmp
in
cmpsb
aam
bsr
mov
inc
mov
repnz
cmp
lea
jbe
addb
fildl
mov
xchg
pop
test
add
xor
es
push
xor
mov
lock
sbb
add
outsb
adc
mov
sub
leave
fwait
ja
cmp
sbb
jge
jge
imul
sub
xor
add
cltd
outsl
test
test
adc
mov
movsl
dec
sub
inc
daa
add
jl
xchg
popa
rclb
sub
jae
dec
stos
sbb
add
add
adc
pop
inc
add
add
rcrb
push
dec
js
add
push
sahf
aaa
push
add
jae
add
movsl
addb
push
out
icebp
movsb
xchg
stos
jge
xorl
add
cli
add
imul
ja
insb
or
movsb
lds
js
lahf
mov
and
or
mov
aas
fsubp
push
imul
push
pop
out
aaa
cwtl
sahf
imul
or
neg
xchg
scas
cmp
mov
aad
mov
int
inc
add
outsl
pop
fnstsw
add
mov
outsb
aas
cmp
jl
adc
addb
fnstenv
stos
sbbl
movb
push
jb
jecxz
setne
pop
pop
xchg
push
aam
loope
fs
gs
rorl
lret
cli
push
pop
inc
aas
jl
cmp
lret
cld
ret
movb
xchg
fisubl
add
xchg
or
add
movl
repz
rorl
and
add
int
cld
test
mov
shrl
enter
or
inc
add
mov
adc
adc
pushf
sti
add
and
dec
in
sub
xchg
sbb
lea
add
js
lahf
dec
lahf
data16
dec
jns
pop
hlt
in
cwtl
inc
add
add
fs
int
sub
add
and
push
lahf
jne
add
add
pop
mov
dec
mov
xor
xorl
scas
shrb
enter
sub
pusha
add
xor
dec
mov
mov
pusha
add
pop
xor
sbb
jle
fwait
je
add
movsl
dec
mov
scas
push
sbb
popf
sub
bnd
xchg
movsl
mov
lgs
imul
mov
or
sti
push
sub
test
push
leave
dec
adc
fists
outsl
jno
movsl
out
xor
pop
out
enter
xchg
mov
fidivrs
or
pop
shlb
dec
mov
loop
or
jns
push
pop
js
jl
test
pop
mov
add
test
int3
jno
stc
or
shll
mov
lock
jae
pop
rorl
xchg
add
mov
and
cs
ret
cmp
lds
xchg
or
inc
ljmp
add
mov
sbb
std
sbb
lods
add
mov
xor
dec
cld
cmp
add
or
jl
inc
xchg
jle
fdivs
fnstcw
add
cmpsb
in
mov
push
outsl
dec
push
roll
sub
mov
movb
push
dec
fs
dec
mov
testb
add
mov
call
push
sub
decl
sbb
xlat
or
clc
sahf
or
jmp
movups
repz
popf
decb
cmp
and
push
ffreep
add
and
jne
mov
xchg
iret
jmp
mov
int3
addb
mov
sbb
pop
mov
cli
addb
imul
jb
sub
adc
xor
insl
cmovbe
and
adc
add
lds
xor
je
add
jae
scas
ret
roll
aad
xor
xchg
push
dec
ret
mov
or
mov
jge
adc
testl
jg
loopne
or
jl
inc
add
xlat
pop
dec
xchg
out
cld
mov
fidivrs
out
push
dec
or
adc
pop
enter
data16
xor
jbe
or
add
jbe
cmc
xor
add
lock
pop
push
add
xor
and
cmpsb
mov
stos
mov
iret
push
push
dec
shrl
cmp
xor
jle
jg
push
xchg
xchg
add
and
or
mov
jl
scas
pop
std
stos
pop
or
add
pop
pop
adc
imul
scas
jl,pn
xlat
pop
pop
lret
sbb
xchg
cmp
cmc
xchg
loopne
or
cmc
dec
cmp
mov
loopne
fpatan
mov
fldt
mov
add
mov
outsl
sbb
jno
add
mov
xor
rcl
sub
add
push
mov
mov
and
loop
push
add
mov
mov
daa
iret
in
add
push
cmpsl
add
scas
mov
call
pop
cmpps
pop
mov
add
add
imul
cmp
ret
sar
fdivrl
fmulp
testl
dec
mov
ret
ss
rcll
pop
enter
hlt
mov
mov
ljmp
add
repz
ss
and
arpl
add
jp
imul
enter
int
mov
lret
hlt
mov
mov
or
bound
jp
or
ss
rclb
ret
fsubrl
pop
imul
push
mov
inc
outsl
push
dec
cmp
sahf
sbb
push
inc
pop
mov
insl
cmp
push
das
or
dec
js
nop
push
ret
ja
push
add
out
add
int3
imul
pandn
jge
adc
mov
sarl
popf
and
xchg
sbb
pop
scas
fsubrl
mov
add
scas
mov
xorl
movsb
xchg
mov
xor
jecxz
idivb
popa
jmp
add
jecxz
mov
enter
je
mov
mov
dec
loope
and
mov
lahf
sub
sub
add
pop
sti
sub
push
outsl
out
lahf
lret
mov
jmp
add
sub
pop
mov
popf
cmpsb
and
dec
stos
dec
jmp
sbb
mov
jo
lods
rcll
push
pop
lcall
lods
les
lret
into
cld
in
cmp
es
rorl
das
xor
movsl
mov
movb
loope
xchg
loop
sub
mov
jecxz
add
imul
lds
cmpsl
fisttps
add
mov
cmpsb
mov
lea
cmp
push
dec
ja
sub
add
jae
add
fsubl
sub
jmp
outsb
jge
push
mov
mov
ret
mov
cmpsl
pop
dec
pop
inc
orl
out
pop
adc
cmpl
add
in
mov
add
mov
pop
mov
pop
sbb
movsb
out
push
mov
pop
repnz
jle
mov
cmc
sbb
out
mov
adc
push
dec
aad
fs
cs
add
iret
scas
or
add
cmp
jp
xchg
add
pop
mov
add
cmp
add
pushf
add
jle
mov
bound
js
insl
jne
jmp
aas
sub
jae
in
arpl
and
add
out
mov
jns
dec
mov
mov
js
xor
call
ljmp
xor
dec
jbe
xlat
addb
test
cmp
and
cmpsw
sbb
inc
add
push
lock
ret
pusha
add
out
jmp
push
in
inc
add
mov
pop
scas
int
add
mov
in
pop
movsb
fwait
jno
xchg
sbb
dec
inc
push
hlt
adc
out
adc
movsl
in
cmp
add
je
ss
or
ret
jne
mov
pop
iret
jmp
pop
sbb
xor
std
xchg
mov
out
or
mov
add
fdivrs
rcll
mov
lret
lret
mov
pop
add
loopne
ljmp
pop
test
pushf
dec
loop
pusha
add
addb
xchg
jg
dec
inc
out
arpl
bound
lods
js
push
push
cmp
xlat
aam
sti
scas
xchg
mov
add
jne
hlt
andl
out
and
es
aad
and
int
addb
add
aas
dec
lret
jg
mov
notb
movsl
push
fst
mov
add
adc
sub
add
pushf
inc
mov
movb
test
lret
in
jno
movsb
and
addb
addb
inc
and
out
pop
jmp
add
push
lret
out
imul
mov
add
xor
fst
enter
sbb
loope
dec
or
in
jbe
push
ljmp
cltd
cmp
sub
call
lcall
mov
dec
mov
mov
movb
mov
test
nop
jnp
jg
push
push
add
rolb
push
aam
imulb
add
movsl
cmp
push
jp
add
xor
negl
test
push
pop
xor
jbe
xchg
lea
fs
cmp
add
xlat
cltd
jmp
push
cmp
dec
aam
sub
sub
idivb
or
xchg
cmp
add
dec
or
loope
and
fwait
mov
xor
test
js
xchg
mov
jbe
scas
inc
add
adc
jecxz
out
sub
movsb
adc
pop
fld
add
pop
popf
out
mov
add
cmp
andl
movb
cmc
push
xchg
and
out
rcl
insb
ja
mov
enter
nop
fwait
ja
push
xchg
or
add
add
shufps
inc
add
dec
mov
nop
mov
repnz
cs
pop
xchg
sub
les
stos
out
xor
dec
out
pop
data16
int
xchg
push
add
out
out
das
pusha
add
rcrl
into
out
add
sahf
idivb
aad
fldl2e
dec
lahf
jle
gs
jno
dec
jns
std
jnp
pop
mov
aam
inc
cmp
mov
add
test
punpckldq
ret
xor
dec
push
push
lret
add
sti
mov
xchg
and
aas
sub
pusha
add
popa
mov
std
sub
mov
jecxz
pop
das
scas
sti
int
and
xor
mov
fldln2
js
mov
add
ds
std
or
add
aas
push
pop
bnd
arpl
add
fists
enter
clc
add
ret
or
cltd
sbb
jl
mov
mov
push
cmp
ds
divl
xor
push
dec
out
imul
sub
in
jbe
mov
cmp
cld
shrb
imul
inc
xchg
pushl
xor
fisttpll
test
ret
bound
out
addb
mov
cwtl
xchg
and
jb
out
test
add
xor
out
push
mov
das
xor
je
addb
popa
mulb
add
add
add
jmp
xchg
push
test
inc
add
push
aad
mov
inc
push
jle
sub
addr16
vmovss
adc
int
jbe
mov
adc
addb
add
packsswb
adc
mov
jae
les
push
sub
jo
inc
xchg
out
jne
lock
sub
xchg
lock
push
and
movb
std
pop
xor
sbb
imul
fiadds
add
cmpsb
or
call
testb
pop
pop
lcall
dec
dec
in
addb
sbb
sub
inc
push
sub
add
mov
fbstp
incb
mov
add
xor
js
in
push
add
adc
imul
repz
jnp
xor
cmp
movsb
stos
lds
das
or
lods
insb
inc
add
xor
imul
imul
pusha
add
lds
hlt
stc
std
jle
add
push
xor
cs
or
jne
mov
add
mov
adc
xor
xchg
mov
mov
push
jecxz
xchg
cmp
dec
sbb
imul
push
dec
dec
sub
jmp
inc
add
mov
sbb
fmul
lods
leave
or
mov
repnz
xor
int
sbb
repz
add
mov
or
dec
imul
push
adc
add
cmp
mov
fistps
mov
in
daa
cs
push
cmp
push
xchg
jb
hlt
lea
jnp
pusha
add
jae
mov
sub
sbb
scas
fbld
xchg
xchg
jg
sub
xor
xchg
lock
jo
cli
cmp
add
stos
jge
cs
pop
addb
add
addb
out
out
insb
xchg
sub
mov
movb
sbb
lahf
cmc
repnz
cmp
fildl
into
pop
push
jg
aam
test
adc
insl
jo
imul
xor
adc
std
jmp
or
pop
insb
xor
add
dec
loope
sahf
pusha
add
add
xor
and
sub
mov
popf
je
mov
stc
icebp
pop
nop
inc
add
add
cmpsb
mov
imul
addb
xchg
xchg
lahf
inc
add
int3
mov
inc
add
repz
ljmp
pop
divb
xor
into
orl
or
and
mov
add
lds
jns
add
push
adc
je
scas
sub
cmpsl
mov
add
mov
xchg
add
stos
and
fstps
out
mov
mov
xchg
push
in
xor
insl
call
lds
loop
mov
xor
add
adc
sti
addb
and
cmpsb
sub
ja
push
mov
sub
adc
jns
pop
adcl
fisttpll
sub
ss
aam
jae
data16
xchg
pop
sub
in
es
sahf
lahf
push
jb
fimull
inc
add
jae
test
jg
popa
push
adc
cmc
addb
data16
mov
add
frstor
imul
cltd
and
lds
in
cmp
push
mov
mov
sbb
leave
movl
add
andl
add
sub
xor
cmp
in
cld
frstor
pop
mov
jmp
cli
cmp
stos
icebp
and
outsb
push
bound
mov
xchg
push
lahf
mov
loop
mov
sub
jmp
add
or
imul
arpl
ud0
gs
mov
xchg
add
adc
mov
jno
sti
mov
rcrl
jne
sub
xor
loop
aam
jp
xchg
mov
ret
jl
add
stos
or
and
adc
jns
out
stos
sub
sarb
daa
inc
add
mov
pop
jg
out
mov
addb
xor
fldl
in
mov
jo
xlat
test
sbb
mov
add
in
xor
sbb
add
push
xor
aaa
push
dec
cmp
cld
imul
cmp
add
push
add
addr16
movb
stos
les
stos
nop
scas
imul
fildl
ret
sbb
inc
add
push
test
xor
pop
jl
cmpsl
cmp
pop
movsb
ret
sbb
jbe
les
pushf
popf
lcall
add
clc
add
in
jb
jae
xchg
cmp
mov
mov
sub
jnp
cmp
mov
pop
imul
sbb
mov
iret
or
pop
mov
add
shrl
push
dec
shll
sti
into
jno
add
sbb
loopne
mov
addb
mov
add
repz
push
mov
fdivl
dec
into
fldl
add
add
movb
jb
addb
and
pushf
test
or
add
mov
scas
in
fdiv
addb
push
xchg
fdivrs
rolb
lret
push
lods
repnz
push
leave
addr16
and
bound
jno
movb
outsl
cmc
cli
jo
inc
pop
push
add
inc
jecxz
adc
cltd
mov
add
push
popa
inc
stc
cmp
dec
jo
repnz
pop
movsl
mov
icebp
jns
insl
arpl
insb
or
hlt
sub
cmpsb
scas
push
leave
xor
fildl
or
xchg
mov
add
mov
dec
ljmp
mov
xor
jno,pt
lahf
lock
clc
addb
xchg
jnp
add
mov
xor
scas
movsb
es
mov
sahf
adc
xchg
xor
dec
and
sbb
ret
jp
add
sub
addb
sbb
movsb
lret
mov
sub
push
aam
out
fs
adc
push
dec
bnd
add
add
adc
outsl
loopne
rolb
jns
add
fwait
inc
out
or
pop
lcall
push
push
pop
and
in
xchg
loope
out
xchg
rolb
pusha
add
test
cmp
add
mov
pop
movb
and
xor
or
stos
xchg
lahf
jmp
sbb
cs
mov
stos
jecxz
sub
addb
fisttpll
pop
loop
pminub
lcall
rcll
out
scas
mov
xchg
fidivs
mov
in
scas
sbb
fimuls
in
push
jae
bound
push
jecxz
shlb
rolb
faddp
add
addr16
jnp
fcompl
xor
inc
adc
add
xchg
cmp
xchg
mov
sarb
xchg
mov
inc
jp
jle
jo
add
mov
sub
mov
push
leave
loope
lds
std
xchg
xorl
dec
ss
push
mov
sub
shlb
dec
ljmp
dec
adc
jno
cs
dec
incl
enter
mov
add
sbb
int
sub
cmovs
mov
push
mov
imul
mov
add
pop
sub
push
sub
add
inc
add
dec
in
jno
mov
push
in
rcll
fimuls
lret
pusha
add
shlb
jle
icebp
pop
inc
pop
bndstx
fsub
mov
fcmovnbe
ret
movb
arpl
add
cld
aad
les
in
dec
cmp
popa
or
jp
loopne
stc
mov
adc
xor
mov
bound
add
add
cs
cmp
mov
mov
xor
xchg
jnp
cwtl
sbb
mov
jnp
aaa
enter
fldt
jge
jmp
imul
icebp
cmc
push
xor
adc
cmp
add
test
ror
adc
ljmp
or
add
out
imul
in
les
or
lods
xchg
dec
sbb
pop
rorl
sbb
inc
xchg
jl
ret
pop
adc
add
xchg
mov
jmp
add
xchg
mov
add
pop
xor
ljmp
and
inc
add
cltd
inc
add
repz
scas
dec
xchg
fnstsw
imul
xchg
sbb
pop
xor
cs
add
mov
mov
fcoml
push
lcall
lods
out
add
mov
mov
es
jns
push
fiadds
mov
js
jmp
add
rorl
movsl
jo
jb
ja
sbb
push
fwait
rolb
pop
cld
or
lret
mov
add
aad
mov
sbb
test
add
jnp
add
dec
inc
add
dec
test
inc
xchg
pop
jmp
leave
out
or
jg
mov
hlt
dec
addb
and
or
or
dec
or
pop
cmc
xor
shlb
xchg
push
push
pop
js
mov
insb
imul
notl
push
mov
sub
add
push
mov
or
ljmp
mov
inc
insl
std
mov
xor
into
xlat
test
adc
je
sub
mov
add
push
loop
add
aaa
leave
mov
xchg
pop
jno
addb
jge
daa
pusha
add
add
aaa
xchg
xchg
rolb
stos
repnz
inc
add
add
cmp
sub
pop
stos
lcall
add
dec
jp
xchg
pop
nop
hlt
xor
xor
fwait
addb
icebp
add
sub
rolb
leave
nop
add
inc
xor
pushf
call
mov
movsb
pop
inc
add
into
leave
fisttps
or
lea
mov
test
add
ret
imul
jl
jp
add
cmc
adc
inc
fwait
pop
int
lods
rolb
add
cli
push
cs
fldenv
ret
sub
outsb
clc
mov
add
xor
lcall
jno
insl
loop
ficoms
mov
add
pop
cld
mulb
add
sar
add
or
sub
imull
out
jecxz
inc
lock
sbb
rcrb
mov
dec
js
xor
dec
jb
call
out
sbb
popf
add
push
dec
lcall
mov
repnz
xlat
mov
mov
cmp
push
and
pop
call
jo
adc
stc
jp
sahf
push
dec
call
sub
inc
cld
mov
dec
mov
sbb
nop
jg
xor
and
push
jae
pop
lcall
addb
add
add
rcrl
divl
sbb
jnp
add
insb
outsl
dec
lcall
outsl
add
sbb
fwait
jl
mov
add
pop
mov
in
mov
fucom
jmp
mov
add
adc
popa
idivb
or
std
jmp
mov
test
push
iret
cmp
in
add
cli
rorb
adc
xchg
add
xor
addr16
sub
fucomp
in
stos
xchg
jecxz
lock
ret
or
push
and
movsl
movsl
and
cmp
cmp
shlb
add
aam
xor
xchg
imul
rcr
rorl
push
jge
aaa
jle
mov
sub
inc
in
aam
xchg
hlt
sbb
add
cmp
xor
dec
rolb
aad
or
movb
sbb
add
pusha
add
sbb
and
mov
popf
mov
xchg
inc
out
push
vpmacssdql
add
sub
stc
jp
ror
add
mov
sub
sbb
stc
mov
jge
and
add
mov
leave
inc
push
jb
clc
fiaddl
aad
arpl
lcall
push
add
and
pop
inc
mov
adc
add
shl
ja
or
mov
fistl
in
dec
arpl
inc
add
inc
arpl
cmpsb
in
inc
add
sub
sub
pop
cli
test
add
xchg
cmpsb
dec
mov
sub
addb
adc
mov
mull
sbb
hlt
out
subl
and
sub
cli
popa
pop
arpl
dec
loope
jnp
push
insl
sbb
addr16
ljmp
xor
xchg
push
sahf
jae
mov
add
adc
xor
popa
cmp
jns
ret
daa
cwtl
pop
mov
cmp
jp
sarb
loopne
in
orl
das
push
in
fcmovb
addb
cltd
lret
out
sbb
mov
pop
pop
int3
jl
ret
outsl
dec
push
mov
jmp
xchg
jne
pop
dec
lods
sbb
sub
cmp
xor
ret
imul
add
mov
sub
std
xorl
push
mov
sub
cmp
pop
lret
push
add
jb
std
mov
cmpsl
cmp
pop
insl
ret
out
lcall
ja
push
add
xchg
sti
jo
aad
out
lea
add
add
push
add
insb
mov
roll
std
fs
sbb
xchg
sbb
mov
test
sbb
xchg
pop
pop
daa
test
dec
cmp
loopne
add
push
dec
xchg
aas
rclb
lcall
in
nop
mull
pop
pop
test
pop
dec
in
sub
test
push
int
pusha
add
add
or
xchg
lea
shlb
push
dec
movb
jo
pop
aas
add
jae
sbb
hlt
add
cmp
addb
sbb
out
sub
inc
add
mov
negl
outsl
xchg
add
sub
add
pushf
leave
sbb
addb
cmp
sub
mov
rolb
sub
add
cmp
add
add
dec
xchg
inc
cmp
enter
sbb
mov
stc
xchg
push
add
push
xor
rorb
iret
jle
mov
pop
pop
push
mov
mov
mov
jecxz
add
or
movaps
lods
sbb
cmp
mov
jle
add
aas
imull
ljmp
mov
popa
mov
into
dec
icebp
daa
dec
sbb
addb
addr16
sub
mull
popa
movsb
mov
xchg
lret
sbb
negl
push
push
ret
mov
add
and
jecxz
add
sbb
inc
add
scas
mov
inc
out
subl
mov
add
xchg
pop
cmp
pusha
add
out
test
fsubl
enter
pushf
dec
cs
cwtl
dec
inc
add
pop
dec
pop
pcmpeqw
sub
aas
push
jb
pusha
add
ljmp
dec
sub
pop
out
xchg
xor
loopne
popa
mov
movb
dec
mov
fcoml
cmp
ret
adc
jne
add
fsubr
sub
stos
aas
pop
in
rolb
add
decl
or
int
mov
pop
inc
imul
add
mov
sub
push
mov
jecxz
pmuludq
mov
add
dec
out
xchg
dec
lret
addl
test
push
and
jg
ljmp
and
push
fcmove
data16
lds
aad
mov
loop
adc
dec
sub
xchg
push
nop
int3
sub
inc
add
add
insb
dec
dec
jp
mov
push
adc
lret
lret
test
jmp
add
sbb
mov
cltd
test
out
pop
and
add
jb
push
sub
sahf
daa
xchg
into
mov
jl
add
fdivrl
mov
fstps
jo
test
cmp
cmp
ds
push
or
jne
sbbl
cld
adc
sub
flds
jbe
add
pop
sbb
repz
movb
loop
cmp
fsubs
add
cmp
repnz
dec
adc
loop
ret
jmp
or
cmc
shl
cli
dec
and
mov
testb
add
and
fisubrs
adcl
add
movb
jns
stos
sub
mov
xchg
into
or
mov
cmp
fdivrs
fwait
sbb
fdivr
lret
jecxz
dec
dec
bound
out
cwtl
dec
and
adc
jb
cmp
and
cmp
movsb
enter
inc
jp
push
ljmp
cmp
push
add
add
inc
in
push
cmp
insl
add
dec
repnz
ss
adc
hlt
imul
sarl
stos
jl
mov
mov
dec
cli
ja
xchg
jle
decb
or
outsb
pop
adc
fmull
nop
mov
add
add
mov
cmp
mov
fisubl
add
lds
je
xchg
jmp
sbb
dec
das
stos
cmpsl
xor
dec
add
push
push
out
fcom
rolb
push
cmp
mov
int
in
add
add
pop
movsl
xchg
daa
pop
aas
fcmovnbe
push
or
sub
jmp
pusha
add
mov
icebp
stos
and
aas
xor
add
dec
or
insb
out
fidivrs
pusha
add
and
jns
in
adc
add
sub
adc
in
sbb
pop
xchg
jge
add
lock
mov
test
jbe
push
lcall
cmp
call
or
int3
cmp
dec
mov
into
mov
sub
rclb
insl
lret
movb
or
hlt
inc
add
cmp
mov
xchg
mov
test
sbb
pop
iret
and
loop
enter
aaa
xchg
jp
sbb
or
mov
jp
ja
add
lret
cmp
fdivs
fcoml
popf
mov
out
dec
xor
inc
add
lcall
sahf
cltd
lods
rclb
test
jmp
stos
jge
icebp
adc
push
jb
add
adc
push
jg
gs
cmp
pusha
add
mov
push
xchg
add
mov
enter
pop
mov
xchg
addb
xchg
push
push
sub
add
les
ds
js
add
cwtl
mov
xor
push
mov
mov
push
push
orl
mov
in
add
scas
aad
xchg
stos
aaa
cli
aaa
sbb
jle
mov
add
test
js
movsl
mov
push
decb
fucomip
bound
add
daa
mov
push
xor
cs
int
mov
xchg
test
fwait
aam
push
std
cld
insb
mov
cmp
fisttpll
pusha
add
xor
add
mov
xlat
xor
movsb
inc
add
bound
int
xchg
push
leave
mov
pusha
add
lahf
pop
prefetcht2
sub
lods
das
ja
mov
test
int3
xchg
aaa
roll
mov
lock
inc
add
cmp
mov
add
push
xor
add
xchg
jmp
mov
out
arpl
test
xor
fwait
pop
in
add
pop
call
ret
ret
mov
fidivrl
lods
lcall
add
cwtl
dec
push
and
cmp
and
xlat
pop
adc
in
dec
aaa
xor
sbb
les
aad
mov
outsb
cmp
rolb
test
aad
dec
xchg
repnz
faddl
out
ljmp
inc
cs
nop
fsts
out
xchg
lock
insb
cmp
test
or
mov
push
jecxz
mov
cmc
insb
fs
inc
cmpsl
cmp
inc
add
adc
xchg
fxch
adc
add
clc
in
inc
add
add
js
cld
inc
add
int
xchg
mov
dec
test
cmp
mov
out
jb
fidivrs
mov
gs
aad
dec
arpl
adc
add
int3
sub
adc
add
outsb
lods
je
setbe
repz
lret
movb
cmpsl
pop
test
sub
pop
in
xor
add
or
sahf
sub
pop
cmp
stos
fsqrt
xor
sarl
pusha
add
in
sbb
push
adc
pop
sub
xor
je
mov
push
push
mov
inc
add
aam
push
mov
mov
push
adc
mov
out
adc
jae
mov
addb
int
test
cld
pop
xchg
out
repnz
cmpsl
sbb
mov
pop
outsl
xor
int3
xor
mov
call
movb
into
iret
sub
cmp
aad
cmp
sbb
push
sub
pop
loope
in
aas
pop
xor
mov
push
ljmp
enter
push
rol
mov
out
insb
or
adc
sbb
add
xchg
push
push
cmp
stos
mov
jmp
insb
cmp
mov
sbb
loopne
insl
pop
add
cmpsl
arpl
loope
out
cmp
inc
test
mov
pop
rcll
push
cs
or
xchg
jbe
xor
pop
push
xor
mov
adc
hlt
cmp
js
mov
and
and
imul
add
sarb
add
and
sarb
shlb
sbb
movl
pop
cli
or
jmp
ds
loope
add
in
mov
movsb
in
fdiv
pop
iret
shl
inc
xchg
int3
loopne
sub
int3
testl
push
add
push
sub
repz
mov
add
xchg
test
jg
xchg
daa
out
aam
push
xor
clc
insb
dec
lock
outsl
jb
fstpl
cmpsb
pop
repnz
sub
cld
sub
mov
jp
dec
sub
out
ds
aas
xlat
fdivs
test
adc
stos
adc
mov
out
loopne
lods
jmp
inc
add
and
sti
and
or
add
jbe
dec
cmpsb
cs
imul
and
adc
call
inc
jo
jb
xchg
and
add
mov
daa
or
adc
rep
dec
mov
jbe
add
hlt
or
add
enter
add
imul
cwtl
pop
sub
movsl
js
mov
jl
inc
dec
sub
jge
jae
add
mov
call
add
insb
or
inc
add
insb
imul
pop
mov
xor
sbb
loop
ja
xchg
mov
testl
add
mov
pop
je
js
cwtl
push
and
add
sbb
mov
ds
xchg
mov
lea
les
mov
dec
clc
js
fadd
mov
mov
push
cwtl
add
sbb
into
xor
fwait
leave
dec
mov
cmp
inc
ret
cmc
sti
in
push
or
test
clc
sub
jb
push
rcrl
sbb
outsb
sub
nop
push
adc
add
pop
mov
mov
pop
mov
dec
fiaddl
mov
pop
mov
imull
xor
jb
add
pop
jle
stos
fildll
flds
add
jnp
cmp
test
rorl
cltd
lods
jo
inc
mov
aas
add
add
rcll
clc
jle
pop
test
in
cmp
and
dec
inc
add
rolb
movsb
jmp
mov
add
ficoml
or
xchg
mov
faddp
add
daa
push
stos
push
xchg
mov
in
repz
testb
push
je
es
out
inc
sub
testb
mov
enter
sbb
and
fldcw
add
loop
mov
mov
dec
into
sub
add
add
mov
and
addb
push
testb
sub
jno
mov
fidivrl
rcrl
inc
add
out
out
push
stc
jmp
mov
out
lds
aaa
mov
ficoml
jle
mov
cmp
or
add
scas
ret
mov
jae
and
outsb
pop
rolb
mov
sub
mov
inc
fcoms
out
rcrb
add
mov
jmp
es
add
addr16
add
jne
pop
inc
lret
sbb
icebp
lahf
out
cmp
xor
add
dec
lret
dec
add
aaa
in
dec
push
add
sbb
push
jne
loope
addb
jp
cs
pop
push
mov
pushf
repz
jg
and
add
add
jmp
addl
adc
mov
xor
out
lods
sahf
fwait
jns
cmpsl
jo
jmp
or
dec
add
cmpsl
fmuls
jmp
add
xchg
pop
std
dec
stos
push
popf
push
rep
push
das
cmc
movb
add
gs
sahf
jle
out
and
cli
jle
or
and
mov
rorl
scas
jmp
addr16
daa
int3
mov
push
lods
adc
pop
and
xchg
es
or
cld
cmp
ds
pop
add
push
loope
mov
movq
pop
cmp
jecxz
xor
out
adc
jns
push
pushf
xor
data16
cmp
push
mov
insl
pop
dec
xchg
in
cltd
outsl
movsb
or
push
int3
out
imul
push
stos
int
loop
push
jecxz
daa
cmp
mov
add
inc
gs
mov
jns
fucomp
xchg
xchg
xorl
jle
mov
xchg
rcr
and
lahf
js
cmpsl
sbb
add
cmp
out
inc
add
xchg
jmp
movb
mov
loopne
or
movsl
insl
cmp
daa
pop
repz
push
and
dec
fnstcw
pop
xor
addb
std
fdivrs
ret
pop
xchg
xor
xchg
scas
xchg
pop
mov
sub
mov
or
inc
fists
fcompl
fdivr
jbe
addb
mov
xchg
loopne
in
popa
rclb
popf
aam
and
cmpsl
mov
daa
test
out
pop
icebp
pop
adc
insl
and
out
incb
fldt
push
add
mov
add
cmpsl
imul
sub
inc
ret
lods
ja
ljmp
out
mov
ret
cli
hlt
add
addb
mov
dec
adc
mov
loop
add
test
xchg
cmp
lods
mov
add
mov
rcrb
out
jb
gs
add
pop
inc
mov
std
mov
dec
mov
jmp
into
pop
mov
jmp
dec
repnz
pop
ficomps
add
mov
loop
add
mov
push
push
jecxz
mov
add
adc
lret
push
push
sub
or
addr16
and
dec
dec
popf
fstps
and
add
add
mov
sbb
ja
xchg
cmpsb
lret
aas
out
jle
add
xor
xor
fildl
add
int3
ucomiss
xchg
fcomi
hlt
sub
addb
jnp
cs
xor
in
fisubl
rolb
test
test
aaa
inc
sti
jo
or
dec
movsb
and
stc
jnp
xor
arpl
fistl
inc
add
add
mov
sub
xchg
jmp
push
mov
mov
or
fisttpll
mov
add
insl
and
add
mov
or
ljmp
cmp
out
dec
cli
fsubrp
xchg
lock
ja
mov
ret
sbb
mov
adc
add
test
mov
int3
push
inc
sahf
insl
lods
cs
push
dec
or
push
movsb
mov
push
sti
pop
scas
ja
movsl
mov
cmp
sarl
outsb
addb
xor
adc
testl
lds
adc
mov
movsl
mov
xchg
add
test
dec
pop
dec
andl
aas
loop
add
outsb
mov
pop
js
jno
adc
loopne
leave
rolb
idiv
pop
xchg
ret
jecxz
fcoms
jg
add
mov
xchg
or
add
push
jbe
std
push
ljmp
add
cmp
test
jmp
add
push
aas
sub
jnp
insl
mov
scas
pop
fdivrl
cmpl
sub
imul
cmp
addb
inc
inc
add
add
nop
inc
add
aas
mov
sbb
adc
and
test
and
adc
pop
leave
or
cmc
dec
or
jbe
fmull
sbb
test
loope
jbe
aaa
scas
outsb
test
cmp
cli
fimuls
sbb
mov
mov
push
mov
add
shlb
add
pop
in
mov
jo
adc
into
adc
sti
pop
aam
xchg
mov
test
rolb
bound
fs
rcr
inc
add
add
jecxz
jecxz
jle
pop
jp
mov
lret
lea
leave
lods
roll
cmp
mov
fstp
mov
pushf
std
adc
and
outsl
sar
mov
add
jno
add
enter
add
mov
add
mov
addb
fstpt
in
mov
inc
add
int3
ret
mov
mov
mov
mov
xor
sbb
lock
int3
jge
push
ret
and
pop
mov
dec
or
lcall
aad
add
dec
jno
stos
movsb
mov
sbbl
add
test
add
add
sub
inc
add
mov
fists
test
fidivrs
inc
add
and
lods
mov
dec
lret
clc
adc
movsl
dec
and
outsb
loop
mov
add
mov
xchg
inc
add
mov
pushf
imul
mov
jne
outsb
sbb
addr16
sbb
mov
mov
call
je
test
cmp
rclb
mov
jbe
mov
inc
add
sub
add
imul
dec
adc
add
inc
add
sbb
add
out
jbe
movb
daa
pop
jns
inc
cmc
lret
test
dec
or
out
fbstp
jmp
cmpsl
mov
or
inc
add
xor
int3
push
in
test
add
inc
add
jb
add
add
push
mov
xchg
ret
add
icebp
mov
push
out
xor
nop
jmp
add
enter
fimuls
dec
nop
jmp
add
add
es
jp
loop
jmp
add
mov
loopne
add
jmp
xor
and
xchg
xchg
in
add
stc
jb
add
loopne
push
div
push
mov
xchg
ret
add
add
adcl
stc
jb
add
add
pop
xor
fwait
adc
add
icebp
and
add
add
stc
jb
add
ja
jl
neg
sub
stc
jb
enter
call
notl
push
stc
jb
and
add
es
add
adc
add
add
xchg
jecxz
add
push
mov
xchg
ret
add
push
jl
pop
push
mov
xchg
ret
enter
add
add
xchg
std
call
stc
jb
cmpsb
add
add
xor
outsl
arpl
add
jb
icebp
repz
add
nop
jmp
push
add
in
add
add
stc
jb
icebp
add
xchg
add
sbb
jne
push
mov
xchg
ret
dec
add
adc
mov
nop
jmp
add
jbe
add
add
push
stc
jb
add
repz
add
stc
jb
add
add
add
je
pop
push
mov
xchg
ret
add
dec
add
mov
mov
jmp
jno
add
add
andb
add
das
push
and
add
add
xchg
cmc
jae
mov
stc
jb
add
call
xor
jb
das
lds
outsb
stos
sbb
repz
mov
xchg
ret
adc
lea
stc
jb
add
add
add
add
jb
loope
add
add
or
scas
enter
adc
add
add
xor
mov
stc
jb
jno
jbe
adc
jp
das
pop
add
stc
jb
add
cmp
jns
gs
jmp
adc
movsl
imul
inc
add
and
add
popa
fs
jb
pop
pop
add
lock
or
dec
adc
jb
pop
push
ja
pop
enter
add
mov
nop
jmp
add
push
add
add
adcl
xchg
ret
and
mov
add
jb
add
xchg
aad
stos
push
mov
xchg
ret
das
dec
xor
je
nop
jmp
dec
add
or
nop
jmp
add
add
add
add
inc
add
test
cld
rep
stc
jb
outsb
dec
jl
add
add
nop
jmp
ss
dec
add
std
mov
stc
jb
jne
das
add
dec
leave
jne
stc
jb
add
jecxz
mov
stc
jb
enter
es
jg
stc
jb
lods
add
dec
dec
inc
in
xchg
stc
jb
add
add
dec
fiadds
add
pop
add
stc
jb
mov
add
in
add
sbb
jbe
stc
jb
loope
and
xchg
mov
subb
dec
add
xor
cmp
nop
jmp
add
outsb
icebp
add
call
stc
jb
xchg
jl
inc
jl
test
jb
add
add
jb
add
add
ja
add
add
jne
stc
jb
dec
jl
ja
pop
adc
sti
mov
stc
jb
stos
add
add
mov
add
nop
jmp
add
popa
add
push
jbe
faddl
jns
add
add
xchg
cmpsb
inc
add
push
shr
nop
jmp
add
int
adc
add
nop
jmp
das
dec
push
add
add
add
mov
sub
ret
add
add
add
xorb
add
aam
add
add
js
jo
nop
jmp
stos
fisubl
add
icebp
cmpsb
mov
stc
jb
aad
mov
jbe
add
addr16
add
nop
jmp
lds
add
add
insl
dec
nop
jmp
add
add
loope
add
add
mov
xchg
ret
add
add
add
jmp
add
fiadds
dec
jecxz
mov
xorb
add
add
push
jno
add
in
push
mov
xchg
ret
adc
loopne
shll
addb
inc
in
mov
stc
jb
add
xor
add
cmpsb
push
push
stos
imul
stc
jb
lods
add
xor
adcb
loope
in
add
lret
lea
nop
jmp
icebp
add
add
cmp
jmp
aad
dec
add
inc
sbb
jb
das
lods
jbe
das
dec
insl
shl
stc
jb
outsb
add
add
and
mov
stc
jb
add
sbb
add
stc
jb
add
add
stc
jb
dec
mov
sbb
xchg
std
incl
add
add
aas
and
mov
nop
jmp
add
add
add
stc
jb
xchg
add
add
pop
adc
mov
stc
jb
add
mov
mov
lds
jns
inc
add
data16
add
mov
stc
jb
lds
in
push
push
mov
xchg
ret
in
add
popf
xor
push
mov
xchg
ret
dec
lods
add
lret
jnp
call
add
stos
int
das
call
stc
jb
lds
push
jns
mov
pop
push
stc
jb
add
add
xchg
add
pop
mov
mov
jb
jne
icebp
add
dec
nop
jmp
add
dec
call
add
nop
jmp
add
dec
add
popa
add
cwtl
push
stc
jb
dec
add
add
add
add
dec
push
mov
add
add
sbb
dec
xchg
xchg
aad
rcrl
jb
jbe
stc
jb
aad
fcoms
jb
dec
in
add
daa
adc
mov
stc
jb
and
outsb
add
and
addb
add
icebp
aad
add
mov
int
add
hlt
clc
and
push
mov
xchg
ret
add
popa
stc
jb
add
add
add
inc
stc
jb
fiaddl
in
add
add
rclb
loope
add
dec
daa
add
add
jb
fisubrs
jmp
and
add
add
rcr
pushl
stc
jb
jne
add
add
call
stc
jb
add
call
dec
push
stc
jb
add
add
add
stc
jb
loopne
cmp
add
jecxz
jp
mov
adc
jb
dec
add
in
dec
pop
stc
jb
and
add
dec
insb
mov
stc
jb
add
jle
jne
nop
jmp
jbe
add
outsb
add
mov
stc
jb
add
cmpsb
aad
dec
popl
jmp
mov
add
add
push
lock
add
jecxz
in
mov
incb
xchg
ret
push
push
xchg
outsb
cld
jmp
stc
jb
dec
icebp
xchg
jne
inc
add
mov
stc
jb
add
popf
push
stc
jb
add
or
push
lods
dec
mov
cmpb
add
add
aam
add
push
nop
jmp
add
pop
adc
add
mov
sbb
orb
add
dec
loope
loopne
nop
les
add
ret
xchg
out
mov
stc
jb
add
dec
add
add
mov
stc
jb
push
in
lods
add
repz
pop
pop
stc
jb
icebp
add
add
add
add
add
add
filds
push
inc
cmp
call
add
add
addb
add
jb
jne
xchg
mov
add
jb
add
loope
jno
push
les
stc
jb
add
push
mov
add
jb
add
xchg
jne
mov
stc
jb
add
add
int
stos
add
push
mov
xchg
ret
jno
in
shrl
mov
xchg
ret
add
ja
inc
add
jmp
add
call
fimuls
in
add
addl
test
push
add
stc
jb
mov
daa
or
stc
jb
in
add
es
add
xchg
nop
jmp
xchg
jecxz
outsb
add
call
jns
add
inc
in
add
add
call
add
and
xchg
stc
jb
add
lds
mov
add
stc
jb
and
xor
stc
jb
xchg
stos
or
fsubrs
nop
jmp
int
lds
mov
jmp
call
add
stos
mov
push
mov
xchg
ret
add
add
inc
add
fiaddl
cmp
sar
subb
add
dec
push
inc
add
decl
or
add
dec
xchg
add
test
add
stc
jb
add
add
push
nop
jmp
add
add
add
add
loopne
insl
and
push
mov
xchg
ret
call
ret
sub
add
add
or
add
pop
ret
stc
jb
add
repz
push
cmp
lock
add
add
add
pop
push
stc
jb
daa
dec
es
mov
cmp
inc
add
int
aam
pop
jne
stc
jb
add
add
pop
stc
jb
jne
jns
add
add
cmp
jmp
add
dec
add
dec
sbb
jmp
in
inc
add
add
aas
mov
stc
jb
add
add
call
push
mov
xchg
ret
and
ficoms
stc
jb
add
push
fistpll
stc
jb
dec
add
icebp
hlt
sub
stc
jb
add
mov
movsl
xor
add
add
stc
jb
add
lods
adc
ror
nop
jmp
add
mov
aad
addr16
xor
mov
xchg
ret
ss
or
push
add
add
in
jns
ss
mov
add
jb
and
ret
jg
clc
push
mov
xchg
ret
add
xchg
push
idiv
incl
xchg
dec
add
add
add
xchg
incl
xchg
ret
add
dec
jl
or
add
call
aas
add
movb
mov
push
mov
xchg
ret
filds
add
stc
jb
add
loope
call
xchg
in
inc
add
add
inc
das
ret
rep
push
mov
xchg
ret
pop
call
sti
stc
jb
testl
add
nop
jmp
filds
add
dec
adc
mov
stc
jb
cmpsb
addl
sbb
add
jl
add
add
add
add
add
idivl
add
sar
ret
stc
jb
jno
lds
fcmovu
xchg
xchg
nop
jmp
add
divl
dec
add
jb
mov
icebp
add
add
jmp
and
mov
mov
add
add
outsb
pop
add
inc
sub
mov
xchg
ret
cmp
xlat
js
sar
cmpb
add
add
push
icebp
xor
add
inc
testb
sub
ret
in
in
aad
or
popa
add
jb
dec
add
add
fistps
mov
stc
jb
cmp
mov
nop
jmp
add
test
push
mov
xchg
ret
add
jno
dec
cmp
or
add
aas
add
adc
add
add
movsb
out
mov
nop
jmp
add
add
aad
test
mov
push
mov
xchg
ret
pop
lds
add
or
jb
in
add
add
add
pushf
add
stc
jb
testl
push
add
add
push
mov
xchg
ret
jl
add
mov
stc
jb
dec
add
push
xchg
add
adcb
jl
loope
dec
push
pop
push
stc
jb
ja
enter
add
addb
add
stc
jb
int
adc
and
mov
xchg
ret
add
add
add
js
incl
aas
add
add
xchg
ja
add
stc
jb
int
xchg
add
push
stc
jb
jbe
dec
loope
mov
and
adc
add
add
add
mov
sub
nop
jmp
add
add
add
outsb
dec
loopne
decl
addr16
add
adc
push
mov
xchg
ret
add
call
jb
ja
es
jl
dec
sbb
fdivrp
jb
adc
fisubrs
jb
nop
jmp
add
add
add
jb
aad
inc
add
pop
adc
jbe
stc
jb
call
das
mov
nop
jmp
stos
pop
add
add
sbb
add
enter
xorl
ljmp
add
add
movsb
sbb
call
dec
loopne
add
lods
add
popf
nop
jmp
add
add
mov
stc
jb
add
icebp
aas
push
aas
ja
xor
clc
call
stc
jb
and
pop
jb
stc
jb
add
filds
repz
mov
xchg
ret
jl
inc
aas
lds
jp
pushl
add
add
into
mov
stc
jb
repz
dec
lahf
mov
stc
jb
add
ja
cmpsb
fiaddl
mov
mov
xchg
ret
fisubl
push
in
call
stc
jb
add
jno
arpl
stc
jb
mov
pop
aad
xchg
lret
mov
push
mov
xchg
ret
inc
popa
cmp
push
mov
xchg
ret
jl
add
add
stc
jb
pop
jno
add
push
dec
push
nop
jmp
add
add
add
ss
sub
mov
xchg
ret
mov
fimull
test
jb
adc
shl
mov
stc
jb
dec
add
add
dec
adc
mov
inc
add
pop
mov
call
stc
jb
mov
adc
jmp
add
mov
add
add
stc
jb
xchg
add
add
sub
in
add
add
jno
dec
mov
add
cmpb
test
push
push
cmpsl
pop
test
nop
jmp
xchg
dec
add
add
add
xchg
ret
pop
pop
stc
jb
add
loope
call
div
nop
jmp
add
inc
push
add
and
lret
mov
push
mov
xchg
ret
add
lds
call
add
and
jb
add
popa
ja
add
dec
in
test
push
mov
xchg
ret
add
pushf
sldt
stc
jb
icebp
add
inc
add
add
scas
push
nop
jmp
notl
jno
add
ret
xor
inc
add
mov
xchg
ret
pop
add
add
addb
cli
mov
stc
jb
pop
add
enter
mov
nop
jmp
outsb
jno
add
add
add
jb
dec
jl
das
jge
nop
jmp
stos
add
add
aam
add
and
or
jb
add
outsb
jl
add
add
stc
jb
add
lods
add
or
decl
add
add
add
add
jb
add
mov
mov
stc
jb
fiadds
jl
nop
jmp
das
add
jne
add
add
nop
jmp
loope
add
jmp
nop
jmp
aas
dec
add
mov
stc
jb
int
stos
add
je
nop
jmp
add
dec
in
fsubs
mov
xchg
ret
dec
outsb
add
sub
stc
jb
add
add
mov
stc
jb
add
add
and
cmp
repnz
decl
add
ficoml
and
nop
jmp
add
in
add
xor
and
bound
mov
mov
stc
jb
add
add
fs
arpl
xor
nop
jmp
add
add
xchg
add
jb
stc
jb
add
pop
stc
jb
ss
lds
push
dec
daa
add
adc
adc
stc
jb
add
dec
inc
push
mov
stc
jb
addl
dec
cmp
jb
add
popa
add
add
inc
loopne
jb
jl
add
add
dec
decl
push
mov
xchg
ret
inc
add
cwtl
mov
stc
jb
add
lods
add
and
push
stc
jb
add
cmpsb
in
or
adc
xor
stc
jb
lds
xchg
jno
dec
and
push
mov
xchg
ret
add
push
push
subb
dec
add
stc
jb
outsb
add
add
add
sbb
cmpb
add
add
add
insl
add
stc
jb
add
add
add
in
jne
stc
jb
add
add
lcall
add
add
repz
dec
sub
stc
jb
add
aad
add
enter
add
nop
jmp
jecxz
jns
add
popa
add
jb
add
add
add
and
stc
jb
and
add
dec
add
push
mov
xchg
ret
jne
add
add
stc
jb
ja
jl
add
add
jne
stc
jb
daa
add
sub
addb
mov
add
add
mov
stc
jb
add
call
nop
jmp
lds
add
add
add
cmp
in
add
add
stc
jb
dec
loope
outsl
add
push
mov
xchg
ret
stos
add
cmpsb
sahf
lea
push
mov
xchg
ret
aas
ja
adc
gs
loop
add
movzwl
push
mov
xchg
ret
jno
leave
jne
stc
jb
jecxz
add
stc
jb
icebp
stos
add
aad
in
mov
stc
jb
add
lahf
push
stc
jb
add
add
ja
add
testl
ss
call
push
adc
add
stc
jb
loopne
add
add
stc
jb
add
loopne
add
push
mov
xchg
ret
xchg
add
das
scas
jb
nop
jmp
add
in
add
mov
in
jmp
stc
jb
add
add
push
adc
cmpsb
jmp
cmpb
incl
fcmovbe
stos
nop
jmp
outsb
jecxz
add
repz
mov
add
ds
cli
sti
add
add
hlt
sahf
pop
push
push
mov
xchg
ret
in
cmpsb
aam
mov
outsl
nop
jmp
add
add
imulb
stc
jb
pop
cmpsb
jno
or
add
add
add
call
dec
ficoms
das
add
nop
jmp
call
jbe
cmp
jb
dec
xchg
push
in
jl
mov
push
mov
xchg
ret
add
in
push
stc
jb
push
outsb
add
add
jecxz
cmp
jb
add
add
sbb
mov
xchg
ret
add
dec
add
stc
jb
mov
add
fdivp
or
orb
incl
add
aad
dec
negb
jmp
add
add
and
jecxz
clc
movzwl
stc
jb
loopne
add
push
jbe
and
xor
add
nop
jmp
dec
in
in
add
mov
stc
jb
aas
add
popf
lea
stc
jb
add
icebp
xchg
push
mov
xchg
ret
add
add
jmp
or
in
mov
stc
jb
adc
enter
call
stc
jb
loope
xchg
in
add
jecxz
push
push
mov
xchg
ret
loopne
add
add
sti
add
stc
jb
and
pop
lock
inc
push
mov
xchg
ret
outsb
dec
and
push
mov
xchg
ret
add
adc
jmp
stc
jb
add
xchg
add
adc
je
nop
jmp
add
loope
pop
mov
stc
jb
inc
ja
aad
dec
nop
mov
sub
jb
loopne
xchg
add
loopne
and
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
add
add
nop
jmp
xchg
dec
add
jo
and
stc
jb
add
add
xchg
and
push
mov
xchg
ret
add
in
jno
aaa
pop
cmpsb
jmp
rclb
pushl
add
filds
and
add
add
add
aas
and
or
stc
jb
add
enter
stc
jb
pop
adc
jno
add
nop
jmp
lds
mov
add
and
mov
xchg
ret
add
mov
pop
xor
adc
adc
pop
mov
stc
jb
add
add
add
add
cmp
add
nop
jmp
jno
addl
jb
add
loopne
mov
add
loope
dec
je
stc
jb
xchg
add
jl
stc
jb
aad
fidivl
inc
add
andb
call
add
add
ja
cld
test
nop
jmp
dec
and
add
pusha
nop
jmp
push
add
enter
add
mov
xchg
ret
add
loope
loop
jbe
mov
stc
jb
add
and
mov
stc
jb
add
popf
div
nop
jmp
add
add
push
add
outsb
imul
mov
push
mov
xchg
ret
add
add
lds
and
stc
jb
and
int
add
jmp
stc
jb
ss
in
cwtl
imul
nop
jmp
add
add
cwtl
mov
stc
jb
add
add
xor
pop
mov
push
mov
xchg
ret
add
loopne
sub
xorb
add
add
push
add
popa
stc
jb
add
add
mov
es
or
popf
stc
jb
repz
add
repz
jb
add
jecxz
int
and
add
add
incl
dec
add
fbstp
sub
jne
push
mov
xchg
ret
push
add
icebp
scas
test
nop
jmp
push
add
in
add
add
pusha
add
add
stc
jb
add
cmc
popf
sub
push
mov
xchg
ret
add
les
add
add
jb
pop
filds
jle
stc
jb
add
add
dec
push
stc
jb
aas
and
popa
notl
icebp
dec
pop
push
mov
xchg
ret
mov
add
xchg
inc
add
jb
and
add
je
stc
jb
loope
fdivrp
push
stc
jb
stos
add
add
pop
nop
jmp
xorl
pop
push
mov
xchg
ret
add
push
cmp
out
lea
push
mov
xchg
ret
add
dec
nop
jmp
daa
call
dec
mov
mov
mov
xchg
ret
push
fsubp
push
add
out
stc
jb
call
test
and
jne
stc
jb
xor
add
xchg
lahf
mov
stc
jb
dec
outsb
add
das
push
mov
stc
jb
xor
icebp
xchg
das
add
jb
loope
add
aas
add
les
stc
jb
add
add
add
rolb
inc
fists
mov
xchg
ret
add
add
sbb
stc
jb
add
add
stc
jb
and
icebp
pop
dec
stc
jb
add
add
fcomip
add
stc
jb
mov
add
repz
test
jb
dec
fiaddl
cmpl
jb
in
push
push
dec
add
test
loop
stc
jb
loopne
int
in
add
stc
jb
add
xchg
inc
add
cmp
jb
xchg
dec
xor
add
loope
aam
in
cmpl
nop
jmp
das
add
lds
enter
jb
add
cmpsb
add
and
cwtd
lea
nop
jmp
add
adc
or
stc
jb
add
call
jne
nop
jmp
mov
jbe
fistpll
push
mov
xchg
ret
xchg
and
nop
jmp
ja
adc
jno
jae
bound
or
je
sub
shl
add
add
fidivl
rclb
add
add
icebp
xchg
in
and
addb
pop
stc
jb
add
xchg
dec
add
outsb
loope
add
subl
push
mov
xchg
ret
dec
mov
fmuls
jb
addl
push
mov
add
add
add
cmp
adc
jmp
add
in
add
daa
mov
gs
jb
jb
add
pop
cmpsb
shlb
hlt
xchg
sub
adc
jns
add
xchg
outsb
mov
stc
jb
outsb
or
fists
mov
adc
jb
push
push
add
call
mov
xchg
ret
dec
add
xor
pop
jae
jb
das
add
fidivl
fdivr
jb
push
jl
add
push
lcall
incl
push
add
add
add
scas
loop
add
stos
add
mov
push
stc
jb
dec
cmp
enter
add
adc
incl
add
dec
xor
jb
or
add
add
nop
jmp
add
cmpsb
lods
and
filds
add
push
mov
stc
jb
jbe
filds
push
add
push
stc
jb
add
add
lods
mov
push
mov
xchg
ret
add
jbe
cmc
add
mov
stc
jb
and
xor
pop
stc
jb
fcmove
or
gs
push
add
add
enter
ret
incl
or
outsb
in
add
jb
add
adc
inc
and
push
add
loope
add
rolb
add
stc
jb
aam
call
jg
stc
jb
push
filds
aam
adc
cmpw
nop
jmp
add
jbe
add
pusha
stc
jb
dec
add
add
aad
cmp
aam
jmp
pop
add
das
add
jb
adc
out
ds
stc
jb
xchg
adc
inc
push
mov
xchg
ret
push
add
pop
push
mov
xchg
ret
add
push
stc
jb
add
cmpsb
add
xor
rcl
in
inc
stc
jb
add
icebp
add
add
int
pop
nop
jmp
add
loope
jecxz
add
add
stc
jb
add
add
add
loope
es
jmp
stc
jb
int
add
jbe
negl
stc
jb
add
lret
or
stc
jb
add
mov
testb
sub
ret
add
jno
es
jne
nop
jmp
add
xchg
fmull
xorb
pushl
add
add
pushl
stc
jb
popa
add
dec
and
lcall
lcall
add
xchg
outsb
daa
mov
or
stc
jb
and
jl
push
mov
xchg
ret
in
adc
inc
in
mov
xchg
ret
xchg
add
add
fisubl
ja
push
stc
jb
add
es
dec
add
push
mov
xchg
ret
mov
add
mov
sub
and
das
add
fiaddl
pop
hlt
incl
add
addl
push
mov
xchg
ret
adc
push
push
mov
xchg
ret
add
subl
cmc
jmp
fcmovb
loope
fimuls
stc
jb
lods
pop
add
test
fstps
mov
xchg
ret
das
add
add
ss
mov
push
mov
xchg
ret
repz
push
mov
cmp
jp
pop
fucomip
cmp
push
adc
mov
xchg
ret
add
add
or
sar
orb
call
pop
jns
add
mov
xchg
ret
jecxz
add
jecxz
push
stc
jb
add
ss
add
decl
push
mov
xchg
ret
fidivs
arpl
jg
jg
stc
jb
add
loope
addl
xchg
add
add
stos
xor
es
push
push
mov
xchg
ret
popa
icebp
adc
cmp
jmp
inc
add
add
dec
inc
add
push
push
mov
xchg
ret
xchg
icebp
or
icebp
into
pop
stc
jb
xor
add
aaa
test
adcb
add
and
or
or
or
incl
add
sahf
push
stc
jb
add
dec
adc
cmpl
stc
jb
add
adc
add
mov
stc
jb
in
fidivl
add
jne
stc
jb
add
dec
js
inc
cmp
mov
xchg
ret
and
pop
stc
jb
aad
add
outsb
lods
dec
push
hlt
push
jmp
stc
jb
lods
enter
add
xor
pop
nop
jmp
push
lds
add
dec
loope
out
mov
add
push
mov
xchg
ret
add
jecxz
pop
nop
jmp
xchg
dec
in
add
in
aas
loope
push
stc
jb
dec
outsb
add
inc
add
mulb
push
stc
jb
lods
add
aas
dec
in
push
jb
dec
icebp
das
and
dec
dec
pop
push
mov
xchg
ret
jns
add
decl
stc
jb
and
in
jno
push
les
les
jge
cmpl
jmp
inc
in
push
add
push
stc
jb
add
icebp
loope
pop
pop
push
stc
jb
add
inc
add
add
push
jle
push
mov
xchg
ret
add
xor
add
xor
stc
jb
add
add
adc
add
insb
mov
nop
jmp
add
add
add
mov
jecxz
add
add
dec
add
dec
and
das
xor
stc
jb
ficoms
dec
icebp
inc
or
orb
decl
lds
add
stos
mov
stc
jb
and
add
or
ret
push
mov
xchg
ret
add
inc
add
out
mov
stc
jb
mov
inc
add
cmpsb
add
jb
add
add
test
sub
pushl
mov
das
add
mov
stc
jb
and
cmp
cld
or
add
add
add
pusha
push
mov
xchg
ret
add
stos
lds
movsb
nop
jmp
add
jns
add
add
xchg
push
stc
jb
jecxz
add
cmpsb
push
cli
subl
stc
jb
aas
loopne
call
inc
xchg
pop
mov
nop
jmp
add
dec
jecxz
add
stc
jb
add
mov
popa
stc
jb
add
mov
adc
add
std
es
push
mov
xchg
ret
popa
add
stc
xor
nop
jmp
int
add
add
dec
add
mov
stc
jb
add
movb
mov
stc
jb
fidivrs
xor
insl
jne
stc
jb
add
adcl
adc
jb
and
dec
mov
push
mov
xchg
ret
jbe
jbe
cmpsl
popa
sbb
add
stc
jb
dec
add
repz
icebp
in
sub
mov
xchg
ret
daa
cmp
not
push
mov
xchg
ret
add
xor
jb
notl
aam
adc
mov
stc
jb
push
add
pop
test
nop
jmp
dec
pop
call
in
inc
mov
andb
call
mov
jb
and
das
icebp
in
sub
stc
jb
dec
add
add
push
add
int
stc
jb
dec
add
jecxz
add
xor
mov
stc
jb
in
add
dec
aam
mov
nop
jmp
repz
int
add
add
mov
stc
jb
jne
inc
loope
add
add
mov
xchg
ret
add
add
xchg
jg
gs
outsb
nop
jmp
jne
dec
add
into
mov
push
mov
xchg
ret
adc
mov
stc
jb
jns
mov
push
mov
xchg
ret
dec
jecxz
pop
mov
stc
jb
add
jg
push
sub
sub
inc
add
add
cmp
nop
jmp
ficomps
add
stc
jb
add
add
call
popa
add
mov
xchg
ret
add
mov
stc
jb
jne
add
clc
inc
push
mov
xchg
ret
ja
dec
add
adc
mov
jb
add
inc
add
popa
add
mov
xchg
ret
int
adc
add
jmp
add
repz
jecxz
add
sti
fdivr
incl
negl
mov
in
add
adc
and
call
xchg
cmpsb
ja
add
pop
stc
jb
add
push
outsb
and
call
clc
stc
jb
jne
add
lret
mov
push
mov
xchg
ret
dec
ss
outsb
add
push
mov
xchg
ret
add
add
inc
add
add
loopne
cs
stc
jb
or
es
stc
jb
or
mov
xchg
ret
add
add
add
stos
stc
jb
add
add
dec
add
das
jne
nop
jmp
add
loope
lret
add
nop
jmp
icebp
fimuls
mul
add
inc
mov
orb
incl
add
ficoms
test
je
decl
add
add
xor
dec
push
stc
jb
add
add
mov
jns
sbb
jb
add
add
dec
add
stc
push
mov
add
inc
sbb
add
or
outsb
add
pop
dec
popa
int3
jle
pop
sbb
pop
stos
xchg
pop
ljmp
ret
mov
mov
sub
imul
jbe
xor
shll
add
dec
xchg
icebp
maxps
and
sub
lret
fidivl
and
arpl
in
cmpl
mov
bound
push
push
pop
addb
aas
push
push
repz
sub
out
sbb
push
out
mov
outsb
mov
lret
jp
jp
movsl
jge
cmp
inc
addb
std
xchg
mov
mov
imul
and
dec
jecxz
pop
arpl
pushf
push
adc
rolb
iret
inc
add
mov
add
mov
fcomps
das
ja
mov
test
add
movsl
loopne
mov
leave
fisubrl
push
fs
pop
daa
outsl
sbb
jns
fsubrl
jecxz
inc
aam
inc
add
add
inc
mov
call
xor
mov
xchg
push
ds
fsubl
jg
add
sbb
mov
and
stos
pop
in
lea
jp
add
mov
sub
jae
mov
mov
lds
push
lods
jle
xchg
add
test
out
ljmp
push
add
cmp
xor
and
das
and
push
mull
je
xor
add
loopne
inc
and
fsub
insb
jmp
addb
or
or
lods
mov
pop
add
sub
sbb
mov
push
in
xor
add
adc
add
rolb
sub
std
outsl
pmullw
push
sbb
mov
outsl
pop
lahf
int3
mov
in
add
adc
mov
in
pop
xchg
fs
adc
adc
jae
dec
fwait
js
add
add
test
pop
dec
das
cmpsb
dec
and
in
pop
js
xlat
xchg
pop
nop
mov
add
movb
xor
adc
data16
jo
lcall
add
loopew
js
daa
addw
pop
lods
insl
out
sbb
xadd
arpl
adc
rcr
fildll
mov
jmp
jp
decl
jl
sbb
mov
in
jl
lods
test
fs
orl
jb
mov
out
dec
fstpl
out
add
mov
and
test
scas
adc
cmp
dec
sbb
mov
sub
xor
xchg
jg
inc
iret
addb
bound
adc
ljmp
inc
add
jl
negl
clc
jbe
mov
cli
add
push
and
aaa
push
dec
out
and
dec
push
adc
cmp
or
dec
mov
dec
cmp
pop
xor
sub
loopne
push
mov
mov
add
add
add
mov
cli
addr16
dec
add
xchg
ss
xchg
addr16
jle
aaa
push
lods
test
push
push
dec
stc
inc
add
jno
neg
mov
or
rolb
ficoml
pop
push
frstor
lret
inc
add
xor
pop
nop
incb
add
decb
add
in
fdivrs
aad
inc
add
ss
loop
mov
mov
mov
sti
dec
repnz
mov
scas
jne
xchg
mov
pusha
add
xchg
cmp
test
pop
mov
xchg
rol
add
add
pop
sub
cmp
das
in
lret
dec
rcrl
lods
dec
mov
add
lahf
xchg
sub
es
or
scas
jno
outsb
mov
fmuls
lods
dec
xchg
inc
jl
push
hlt
fiadds
mov
mov
out
sbb
and
out
pop
xor
insb
push
movb
cmpsl
scas
movb
in
add
or
sub
or
fnstcw
mov
in
sbb
sub
lret
rorl
push
add
xor
lock
imul
xor
and
adc
mov
stc
idivb
in
decl
call
or
out
ss
fadds
sbb
in
lret
out
add
pop
daa
adc
sub
push
jmp
add
out
js
rolb
push
sub
xchg
adc
xor
lods
or
or
icebp
stc
adc
mov
out
popa
add
pop
insl
add
in
stc
nop
incl
jp
ja
hlt
sbb
dec
outsb
addr16
push
iret
or
mov
stos
jo
pop
push
adc
cmpsl
sub
in
add
insl
std
lods
sub
jo
or
nop
sbbl
movb
xchg
arpl
aam
sbb
push
pop
mov
ds
adc
or
push
loope
adc
mov
lea
sbb
jl
push
addr16
sbb
scas
outsl
mov
push
int3
mov
jo
mov
add
sahf
xchg
dec
addb
adcl
dec
testl
xchg
dec
stc
addr16
aaa
jo
pop
or
and
add
add
addl
rcrb
bound
sub
jmp
xchg
je
and
mov
mov
mov
jo
or
adc
push
loop
lret
stos
cld
insl
push
add
ss
xchg
jb
jo
mov
dec
ret
jb
int3
adc
test
out
jecxz
scas
xchg
lods
jg
push
sub
lcall
out
outsb
and
mov
add
scas
mov
rolb
xor
mov
add
adc
push
add
cltd
xor
testl
xchg
push
loope
aam
push
cmc
pop
rcrb
mov
roll
pop
cld
mov
scas
mov
xlat
jo
adc
xchg
cmpl
std
dec
je
cltd
fcomp
push
add
addr16
addr16
mov
pop
stos
xchg
mov
jle
in
xchg
push
dec
int
jns
push
dec
in
or
xor
mov
add
mov
sbbl
clc
mov
mov
add
fs
xchg
or
test
repz
push
sbb
xchg
lds
mov
cmc
xchg
cwtl
js
mov
push
jg
fstps
xchg
jne
fisttpl
lcall
mov
xchg
int
addb
sbb
js
add
add
push
xor
jbe
int
int3
pop
les
inc
daa
gs
fcmovb
add
stos
mov
mov
shr
cli
dec
add
into
mov
add
iret
xchg
outsl
and
lahf
pop
xchg
scas
and
push
adc
sbb
jmp
cmp
jmp
cmp
bndldx
jb
and
cwtl
addb
cmp
xchg
push
pop
bound
inc
add
mov
push
mov
xor
sub
addb
in
fildll
mov
sbb
testb
cmpsl
insb
mov
popf
ret
cmc
clc
jmp
rolb
inc
xchg
or
sbb
inc
add
add
shr
or
add
addb
dec
loopne
jmp
int3
jo
mov
adc
and
jns
js
ja
je
cmc
inc
insb
and
cmp
sbb
mov
scas
sub
imull
cmp
pop
cli
or
loopne
mov
jne
push
dec
push
cmpsb
popf
and
es
jbe
sar
in
cmp
add
iret
enter
pop
push
jbe
fdivrl
arpl
imul
lret
or
jae
cmp
pop
xchg
xor
add
int
test
mov
rcrb
stos
xlat
roll
cmp
movsb
pushf
mulb
xchg
mov
add
push
aas
pop
ja
sub
shlb
dec
inc
xchg
add
add
jne
jmp
xor
push
inc
add
mov
leave
or
imul
stc
cmpsb
adc
or
test
out
jns
xchg
sub
push
lods
and
or
push
pop
std
pop
adc
and
out
mov
xor
xchg
inc
dec
add
pushf
adc
add
aas
mov
xchg
leave
jecxz
add
xor
push
stc
pusha
add
add
fwait
jle
and
pusha
add
add
adc
sub
aad
xchg
xor
stos
test
dec
addb
outsl
loopne
pop
sahf
mov
gs
sahf
xor
ljmp
fnstsw
sbb
sti
pop
cmp
icebp
push
subl
push
mov
xchg
add
mov
movb
movsl
incl
push
cld
nop
decl
js
push
insb
jb
jo
push
add
push
add
cmp
test
neg
das
rorl
sub
jmp
jp
add
pop
in
cmpsb
xchg
iret
pop
divb
xor
in
xchg
pushf
flds
adc
pusha
add
jae
mov
add
or
iret
jl,pt
pop
lods
xor
sbb
test
fcmove
add
cmp
add
adc
xchg
addb
ret
rcll
loope
insb
rolb
cmp
push
scas
adc
ljmp
xor
repnz
icebp
subl
test
or
add
out
add
rcll
js
mov
test
sub
add
sahf
push
lcall
dec
adc
ret
lock
das
test
adc
cmp
and
jne
fimuls
push
pop
imul
call
test
sub
xor
xchg
add
nop
popf
stc
or
fisttps
movb
and
cmp
pop
jne
rorl
mov
add
dec
lret
jle
call
xchg
lcall
je
mov
pop
out
push
notb
shlb
inc
cmpsb
out
lods
mov
push
test
stc
pop
push
in
jne
or
inc
ljmp
ret
sub
icebp
mov
add
rolb
xchg
loop
fs
add
jmp
inc
add
clc
loope
xor
movsl
jg
inc
jbe
or
xchg
in
cmp
mov
sub
rcll
jle
lcall
add
push
sub
dec
enter
xchg
or
mov
jecxz
repnz
add
cmp
push
pop
aas
mov
test
jle,pn
jnp
add
mov
cmp
subl
cmp
push
insb
mov
push
push
insl
inc
add
mov
add
bound
in
push
push
into
xor
inc
add
sub
push
xchg
adc
out
lea
arpl
jecxz
push
addb
fadd
add
loop
andl
push
xchg
popa
inc
add
adc
mov
add
add
jmp
shrl
mov
push
push
test
xor
std
es
mov
iret
jnp
aaa
scas
adc
cmp
push
mov
add
outsb
aaa
xor
xchg
out
jle
dec
cmc
js
out
xchg
int3
xor
mov
and
add
xchg
negl
insl
mov
lock
stc
sbb
clc
cmp
add
ss
rolb
pop
lds
cld
test
push
or
jecxz
in
out
ss
inc
push
add
ljmp
into
jmp
sub
flds
mov
jnp
shrb
out
or
add
add
mov
jl
adc
iret
sbb
mov
mov
sbb
jg
popf
leave
lcall
xor
scas
adc
add
jno
sbb
push
inc
loop
dec
dec
ret
or
and
add
adc
add
imul
mov
aaa
nop
stos
xor
shll
and
cmp
stc
xchg
movsb
scas
mov
cmp
xchg
pop
mov
sub
cmpsb
adc
or
outsb
lock
inc
add
outsl
push
lds
inc
xor
int
cmp
icebp
lock
data16
and
scas
dec
out
movsl
mov
mov
cld
dec
faddl
add
scas
or
pushf
push
faddp
clc
aas
icebp
lods
push
ror
mov
imul
mov
mov
push
sbb
sbb
sub
inc
add
add
jp
jns
mov
mov
dec
mov
mov
mov
push
fnsave
pop
pop
xchg
inc
add
mov
lahf
mov
add
out
add
fwait
push
ret
push
jmp
mov
mov
xlat
pushf
dec
xlat
rorb
cmp
push
mov
and
outsb
repnz
jnp
dec
mov
call
sbb
xchg
cmp
push
xlat
push
xlat
bnd
dec
in
push
sbb
mov
out
inc
add
aam
and
bound
xor
stos
cmpsb
mov
and
aam
mov
jb
dec
xor
pushf
mov
test
mov
les
and
mov
daa
xor
add
out
sbb
dec
mov
add
aad
out
cli
rorl
notb
or
mov
in
in
fcomp
sarb
jmp
pop
outsl
cmpsl
sbb
xchg
imul
xchg
in
mov
aam
push
cmp
pop
and
int
inc
add
mov
stc
loopne
hlt
in
or
ss
cs
scas
jb
adc
lods
sbb
dec
bound
push
sar
repz
adc
cltd
sub
bound
test
cmp
jns
jmp
push
lock
test
sub
fiadds
inc
out
jmp
dec
or
pop
gs
dec
lret
pop
lahf
mov
pop
je
pop
xchg
or
cmp
mov
popa
addl
sbb
lea
jb
pusha
add
and
imul
or
rolb
pop
dec
jg
dec
scas
push
mov
out
outsl
call
fimuls
enter
addr16
clc
mov
das
stos
out
mov
mov
fiaddl
inc
push
jg
lcall
in
push
ret
mov
add
cmc
jp
lods
xchg
jl
icebp
stos
ss
add
pop
jmp
test
pusha
add
add
clc
sbb
xor
test
mov
fwait
sub
add
or
enter
sahf
shll
mov
stc
xor
fsubrl
mov
cmpsb
pop
or
add
xorl
add
jno
add
cmpsl
lods
aad
fldcw
inc
int
inc
sub
add
aaa
stos
lock
loopne
outsl
jno
pushf
inc
sbb
jecxz
cli
xchg
insb
pop
mov
fcompl
push
add
test
pop
addb
mov
or
add
jle
iret
push
cmpsb
repz
inc
lahf
jnp
adc
or
std
das
sub
or
ror
cs
add
add
sub
insb
movsl
push
dec
sub
pop
fsts
inc
rcrl
add
mov
dec
ljmp
xchg
add
xchg
pusha
add
xor
add
nop
sti
pop
addb
popf
fwait
push
add
mov
lods
ss
mov
dec
xchg
sub
mov
and
xorl
cmp
jo
stos
push
inc
add
or
mov
fwait
clc
in
ret
adc
push
aam
cmp
fwait
nop
cmpsl
sub
xor
cmp
mov
shrb
adc
out
pop
pop
call
dec
cmp
or
jnp
sub
adc
jl
mov
nop
les
or
mov
mov
std
lahf
fisubs
sbb
stos
fidivl
xchg
lcall
stc
jl
jle
cwtl
inc
add
mov
addb
xchg
lret
cld
adc
push
push
cmp
dec
push
and
cmp
loop
mov
std
cmp
mov
cs
fsubrl
ljmp
or
sahf
jbe
je
repz
cmp
add
ljmp
jp
stc
inc
add
popa
addb
inc
add
sbb
push
sub
xor
insl
jbe
xlat
adc
jnp
mov
loop
repnz
loopne
in
pop
sub
and
cmpsb
adc
sub
scas
popa
cmp
push
mov
inc
add
cli
icebp
cs
add
push
adc
outsb
xor
xchg
xor
add
les
adc
mov
outsb
aad
mov
jg
repnz
and
iret
lcall
cmp
xchg
sbb
add
in
add
add
cs
xor
add
cld
ficompl
add
test
sub
jle
nop
arpl
add
mov
in
adc
add
fadds
add
or
test
xor
cli
sbb
sub
xchg
push
add
xchg
pop
test
mov
fists
ds
ds
das
adc
push
mov
or
pop
mov
pushf
cli
lret
add
addr16
push
mov
xchg
pusha
add
fiadds
lods
leave
imul
pop
lret
sahf
clc
mov
or
scas
mov
aad
rol
add
pop
es
das
xchg
and
xor
cmp
pop
xchg
lds
sbb
aaa
mov
test
and
cmpsl
out
add
sbb
pop
not
pop
ds
insl
mov
mov
xchg
cmp
cmpsb
and
stos
int
std
outsb
jb
jne
adc
add
cmp
jo
inc
add
pop
data16
jecxz
insl
stc
sub
mov
in
add
add
sbb
or
andl
stc
fldpi
cltd
test
fs
ds
mov
add
inc
mov
adc
pop
jl
and
mov
xor
rolb
mov
mov
add
push
stos
or
dec
add
pop
lods
lahf
test
jle
pop
gs
pop
adc
add
dec
adc
sub
out
lret
and
stos
add
add
fldl
hlt
test
sti
aam
nop
sub
push
outsl
lds
mov
xor
pop
adc
cltd
mov
sbb
repnz
jb
xchg
scas
jns
imul
fcomi
dec
cltd
ficomps
cs
xchg
mov
jmp
jno
repz
xchg
pop
inc
add
dec
testb
loopne
icebp
mov
adc
pop
push
cmp
hlt
addb
mov
mov
lret
dec
cmpsl
bound
vpshab
jbe
push
faddp
in
aad
std
sub
or
add
pop
pop
adc
fwait
mov
jg
add
add
mov
add
push
cmp
stos
jnp
cmpl
insb
mov
xchg
sahf
gs
gs
ret
insb
ds
push
and
add
sub
add
jp
sbb
cmp
mov
aam
int
push
inc
mov
iret
add
mov
repnz
or
les
push
xor
add
nop
pusha
add
push
mov
cwtl
xor
cmc
aad
lock
sub
ret
cmp
add
jno
lock
sbb
fidivrs
push
and
clc
pop
movsl
push
mov
add
test
inc
sub
bound
push
sub
inc
adc
in
loope
jge
aam
push
sbbl
push
adcl
adc
pop
loop
out
pop
iret
jmp
jecxz
movb
ljmp
adc
and
shrb
sub
add
pushl
in
lods
push
aas
sub
adc
out
dec
adc
nop
aad
pop
aas
push
xchg
or
rolb
mov
add
inc
cmp
add
adc
jle
outsb
mov
and
stos
sub
ds
add
inc
add
ret
adc
add
mov
cltd
movsb
mov
test
mov
andl
add
xchg
dec
ss
test
repnz
dec
push
and
outsl
repz
xchg
cmp
add
adc
fbld
add
mov
ds
aam
and
lret
add
and
arpl
mov
jne
push
add
mov
ja
ljmp
add
inc
add
test
fistps
movsb
stc
pop
arpl
mov
mov
lea
rcrb
out
add
insb
pop
dec
dec
xor
add
sbb
cmpsl
imul
push
and
ja
int3
lods
dec
test
sub
addb
and
mov
inc
dec
loop
jns
push
inc
pop
jp
and
add
es
pop
dec
sbb
ucomiss
add
call
sub
xchg
push
push
mov
lcall
int
cmpsl
cmp
roll
jne
pushf
mov
fdivs
mov
adc
out
xor
mov
sub
fldt
add
cmp
dec
push
pop
mov
jle
lods
mov
lret
in
dec
pop
call
add
stos
lcall
cmpsl
test
push
add
add
bound
cld
xchg
mov
les
mov
mov
sbb
xor
pop
push
add
ja
mov
or
rolb
rolb
fcoml
mov
test
push
stos
cmp
add
repnz
sbb
loopne
add
fisubs
cmp
sahf
movsl
data16
shlb
push
xor
dec
xchg
mov
push
push
mov
std
fs
cmp
into
pop
movsb
mov
sahf
or
xor
iret
xchg
mov
or
insl
pop
push
scas
adc
int
mov
adc
add
cltd
pop
cmpsl
inc
add
add
and
push
add
xchg
mov
test
lds
clc
call
sbb
jle
inc
add
outsb
fbld
push
dec
jmp
push
es
hlt
and
sub
mov
aaa
mov
jno
test
sub
call
sarb
fs
and
jne
add
addl
in
push
mov
xchg
sbb
add
stos
scas
clc
jl
out
into
sbb
cs
adc
outsl
shrl
sbb
inc
add
sbb
repnz
push
mov
aaa
jg
arpl
push
xchg
xor
ja
flds
add
repnz
and
push
sub
push
xchg
out
fs
push
pop
clc
out
mov
lret
fwait
sti
and
jno
or
das
popf
hlt
negl
mov
scas
lea
int
rolb
add
cli
loope
cmp
icebp
and
lret
lret
mov
xchg
sti
dec
xor
cltd
scas
xchg
cltd
das
or
add
push
inc
js
gs
xchg
push
sub
or
add
dec
xchg
push
bound
or
call
icebp
mov
push
dec
push
xchg
xlat
test
xchg
sbb
outsl
mov
in
mov
add
lret
test
and
push
mov
inc
add
or
mov
js
mov
jmp
sbb
addb
cmp
fwait
xor
inc
outsl
inc
add
and
lahf
mov
xchg
jae
and
lea
in
add
jo
out
inc
daa
dec
cmpsl
icebp
dec
cmp
xor
test
out
xlat
or
shll
push
dec
addb
movsb
mov
std
fmul
cltd
mov
jg
pop
push
lods
stos
out
movsl
imul
dec
dec
iret
mov
lahf
inc
add
inc
add
and
cmp
adc
push
addb
adc
cs
mov
cmp
ss
aaa
into
jno
add
push
xchg
xchg
mov
ret
fists
fmul
mov
or
xchg
mov
jge
rolb
fst
ret
aam
add
push
fwait
in
incb
aam
dec
inc
xlat
leavew
psubd
mov
cmc
out
loopne
push
icebp
std
or
daa
mov
aam
add
leave
dec
sub
sbb
mov
jo
icebp
xor
mov
xchg
or
fcoml
stc
mov
xor
pop
dec
dec
pop
enter
sbb
add
ret
mov
inc
imul
or
movsl
adcl
lret
xor
mov
xor
inc
sub
jp
ret
pop
sub
pop
insl
cs
sub
cli
pop
scas
mov
sbb
hlt
mov
mull
dec
cs
mov
out
mov
out
add
jp
pop
mov
popa
vmovdqa
pop
mov
call
sub
and
push
add
es
jle
dec
mov
bound
sbb
dec
mov
je
daa
mov
add
cmp
jp
adc
jns
add
repnz
leave
lcall
ret
jae
cmpsb
or
aam
inc
in
out
jns
xchg
push
cwtl
movsl
movsb
stos
adc
mov
iret
add
xor
xchg
xlat
adc
add
cld
mov
sub
dec
lahf
dec
fwait
pop
adc
aam
stc
pop
or
fidivs
ret
and
fisubs
pop
mov
shll
and
divl
push
lahf
pop
mov
jne
push
push
dec
scas
loop
incl
mov
mov
lods
jne
mov
out
mov
ljmp
loopne
ficompl
mov
mov
lret
adc
lret
lret
dec
cmp
clc
xor
sti
test
xor
int
xchg
push
cmc
xor
fs
xor
sub
aad
and
adc
out
and
repnz
or
test
test
xchg
icebp
mov
arpl
adc
mov
add
mov
ret
sbb
aas
fisttpl
pusha
add
outsb
xchg
pop
in
lods
dec
mov
js
xchg
dec
pop
dec
jae
repz
addr16
xchg
fcoms
dec
aam
or
sub
push
xor
pop
fsubr
mov
pop
decl
sar
out
mov
lret
pop
clc
sub
mov
sub
add
mov
ja
jl
push
testb
jl
push
movb
and
mov
xchg
push
push
sub
mov
xlat
std
ds
or
jns
mov
divb
sub
pop
aaa
jge
lock
aad
maskmovq
testl
mov
add
push
icebp
xchg
mov
int
and
dec
inc
sti
dec
sub
movsl
xchg
pop
jno
sahf
and
pop
mov
cld
in
imul
rcl
in
mov
add
fnstsw
icebp
cmpsb
lock
push
jae
pop
sub
dec
je
add
cs
mov
xchg
xor
imul
xchg
and
out
add
cwtl
xor
call
ljmp
jno
lcall
lea
jle
fnsave
adc
lock
mov
ja
fisttps
add
sbb
lahf
xchg
in
mov
inc
clc
xchg
addb
imul
test
mov
fistpll
clc
outsb
icebp
test
stos
inc
add
mov
test
popf
push
pop
sbb
cmp
loop
les
lcall
xchg
pop
pop
xor
les
outsl
cld
add
sbb
inc
add
add
popf
mov
mov
add
arpl
xchg
adc
add
jne
xchg
mov
jns
ret
sub
xchg
and
mov
push
jo
test
jbe
or
xor
notl
add
stos
stc
sbb
pushf
ss
shlb
add
iret
lahf
or
add
repz
out
sub
xchg
enter
outsl
imul
aas
adc
addb
xor
mov
and
insl
repnz
out
test
ljmp
sub
in
or
shll
or
dec
rolb
hlt
xchg
shll
xor
jo
je
push
add
mov
sub
push
dec
lcall
push
add
sub
int3
js
icebp
sbb
mov
in
and
stc
xor
in
adc
aam
add
add
lods
xor
ret
test
shlb
or
jo
mov
call
cmp
jb
cmp
xor
jmp
add
lds
fidivl
hlt
push
pop
pop
out
jge
jge
add
or
or
dec
push
cltd
out
jae
add
xchg
movb
push
inc
add
addr16
adc
rcl
fwait
mov
scas
jecxz
jns
xor
aaa
popf
scas
xchg
stos
pusha
add
jbe
sub
ret
dec
mov
mov
add
sub
add
pop
pop
lods
push
fdivs
addb
cmpsb
addb
sbb
xchg
fbstp
popa
rolb
jne
int
sub
xchg
add
std
jns
push
test
fcomp
in
sub
or
outsb
sahf
addb
lcall
enter
inc
add
imul
cmp
jp
pop
stos
mov
xor
mov
out
mov
or
xor
add
pop
mov
xor
pop
mov
mov
xchg
imulb
add
add
sbbl
jbe
mov
sbb
mull
cmp
stos
dec
pop
mov
scas
adc
jle
sub
add
inc
add
gs
mov
add
ret
mov
or
add
aaa
sbb
xchg
popa
jge
jnp
jg
fmull
jle
mov
add
mov
outsb
jle
imul
rorl
sbb
pop
pop
or
mov
test
cmp
stc
popf
shrl
add
mov
mov
dec
pop
aas
inc
add
test
inc
xchg
pop
pop
aad
pop
out
dec
xchg
pop
hlt
adc
adc
pop
xchg
dec
mov
clc
aam
mov
push
gs
cs
mov
cmp
mov
pop
mov
addb
xchg
std
std
push
fcoms
adc
lcall
pop
popl
add
cs
and
mov
push
ret
inc
inc
adc
adc
rolb
das
pushf
mov
push
add
hlt
mov
jne
and
jnp
jbe
out
cmp
testb
xchg
test
gs
arpl
movb
arpl
jecxz
cmp
add
stc
stos
negb
sbb
fsubp
sub
cmpsl
aaa
cmp
jae
out
add
or
ffree
sub
and
add
call
mov
imul
in
sbb
lcall
inc
add
gs
jbe
add
or
test
add
add
xchg
shll
add
mov
or
xlat
dec
movsb
pop
mov
add
inc
add
test
inc
inc
add
push
sahf
idiv
in
xlat
out
and
jp
movb
adc
add
adc
pop
pop
lea
add
mov
and
pop
xchg
aaa
ret
insb
add
scas
pop
jb
add
in
adc
imul
out
add
insl
inc
add
lahf
test
add
push
jbe
mov
dec
inc
js
jle
push
mov
cmpsl
add
rclb
or
xchg
jge
dec
mov
dec
mov
rol
add
inc
call
add
fs
addb
js
xchg
dec
cwtl
in
gs
inc
add
fucomi
filds
mov
add
xor
stos
or
fcomip
pop
rcrb
arpl
imul
lods
int
mov
fists
push
inc
movb
push
sub
xchg
dec
xchg
bnd
mov
add
xlat
shlb
sbb
loope
out
xchg
sbb
cmp
stos
inc
jae
jne
xchg
popf
sbb
jmp
jge
add
cmp
adc
sub
lea
pushf
lods
jle
push
add
shrb
loop
xor
stos
mov
mov
pop
adc
cmc
mov
or
cmp
movb
fst
out
mov
mov
sub
add
mulb
sub
inc
add
dec
rolb
shlb
and
inc
add
insb
pop
sub
mov
or
cltd
dec
jns
sar
dec
stos
xor
push
jp
adc
inc
jmp
in
pop
jmp
sub
sub
pop
xor
pop
cmp
mov
cld
in
push
add
cli
repz
push
pop
ret
cmp
xchg
daa
aaa
dec
je
loope
lods
mov
add
nop
movb
popa
incl
add
ja
mov
xchg
add
ja
xchg
cmp
fs
pop
and
mov
les
sbb
mov
aad
xchg
cli
inc
xor
jns
mov
testb
sbb
xor
addb
dec
dec
inc
add
mov
insl
les
clc
adc
or
lea
movsl
repnz
shrl
xchg
fsubl
xor
mov
add
fimull
in
and
xchg
les
xchg
xchg
or
sub
add
inc
out
mov
imul
jno
mov
add
lahf
cwtl
imul
xchg
mov
lret
cli
outsb
setno
loopne
xchg
xor
mov
js
roll
push
ss
sub
xchg
clc
loopne
cmp
pop
add
add
jmp
arpl
add
pop
test
out
mov
aaa
jb
xor
rorb
sub
dec
out
jbe
mov
add
pop
jno
outsb
jbe
int
repnz
scas
mov
inc
add
sub
scas
dec
push
fmul
addb
sub
and
mov
nop
flds
xor
add
jo
rorl
add
add
sbb
mov
scas
dec
or
mov
xor
add
rol
xchg
mov
adc
mov
lock
fwait
jmp
and
mov
fsubr
sub
cmp
leave
nop
das
add
js
inc
add
enter
scas
lods
and
call
icebp
lods
mov
in
sub
movsb
sti
insb
pop
push
xor
mov
in
test
mov
int3
push
les
cmpsb
mov
ds
pusha
add
std
leave
jne
mov
mov
shlb
pop
inc
inc
add
sti
out
outsb
mov
lahf
inc
clc
aas
jl
pop
sbb
and
xchg
pop
jmp
lods
and
mov
sub
xchg
and
cli
xor
imul
insl
ds
enter
dec
jno
push
cmpsl
arpl
fwait
sbb
pop
pusha
add
lret
in
flds
push
aad
ja
loop
dec
sbb
rolb
mov
xor
int3
leave
push
sub
add
inc
add
dec
push
imul
cmp
iret
xchg
xchg
cmp
jne
movsl
sub
clts
add
adc
mov
jge
fcomps
insb
pop
in
and
mov
lret
idivl
pop
cmp
mov
out
outsb
fsubs
push
and
mov
xor
cwtl
xchg
mov
add
mov
clc
lock
dec
pop
jp
cmp
adc
es
inc
add
add
out
dec
add
sbb
mov
rcll
sub
sar
push
out
sub
ds
js
int3
add
shll
sub
cltd
mov
inc
add
or
dec
xchg
cwtl
push
and
push
cmpsb
xchg
mov
nop
js
aad
add
movsb
idivb
or
call
xchg
adc
mov
subl
lret
idivb
push
add
add
int
jmp
jno
test
ret
outsl
rorl
mov
mov
fdivrl
or
jno
add
lcall
mov
cmpsl
push
sbb
fisttps
rcrl
shl
mov
jns
adc
add
sbb
cmpsb
push
sbb
mov
sub
push
in
stos
outsl
inc
xor
rolb
fistps
lret
xchg
ret
icebp
xor
add
mov
loop
sti
ret
jmp
ja
and
xchg
jns
mov
add
push
jmp
inc
add
mov
icebp
push
aam
cltd
mov
mov
add
aad
mov
movsb
sub
in
int
loop
inc
add
cmpsb
or
cmp
out
ret
cmp
adc
pop
mov
push
sub
pop
out
sub
lods
jns
mov
cmp
adc
lcall
scas
fs
cmpsb
adc
lret
and
add
dec
xchg
cmpsl
movb
cmpsb
and
mov
sarb
add
add
cmp
inc
add
loop
jp
xchg
cmp
push
gs
add
pop
lahf
mov
lret
jecxz
add
inc
jecxz
xlat
lret
cli
addr16
imul
add
add
call
or
jne
add
add
or
mov
std
push
jecxz
push
jae
in
or
fstpt
jl
sub
mov
stos
sub
pop
rorl
cmp
rol
add
pop
pop
add
scas
inc
ss
fwait
aad
add
adc
xor
insl
push
inc
out
out
mov
mov
xchg
out
loopne
dec
sbb
insb
cmp
push
outsl
dec
mov
add
mov
jo
insb
popf
xchg
lcall
mov
mov
mull
and
cmp
add
jo
jo
xchg
out
inc
add
lret
and
jns
test
arpl
out
es
ret
fsubr
inc
add
aaa
jge
jo
iret
xor
push
out
pop
sbb
and
cs
dec
push
jae
add
icebp
insb
xchg
out
inc
pop
mov
or
lods
and
test
mov
sbb
mov
addb
arpl
je
push
xor
in
push
push
gs
cmpsl
add
test
ds
dec
movsb
lea
cmovs
xor
xor
mov
dec
jno
lret
arpl
xor
das
fldenv
lcall
adc
cmp
loope
les
addb
paddusw
sbb
adc
mov
add
cmp
adc
push
push
pop
dec
daa
dec
repnz
or
not
pop
adc
mov
push
aaa
test
clc
mov
lods
lahf
loope
in
idivb
loope
mov
ja
xor
jp
xchg
cmpsb
imulb
and
insb
cmp
rcll
int3
push
repz
and
push
xchg
aaa
mov
inc
dec
jecxz
sbb
mov
mov
or
aam
in
cmpsl
push
mov
cmpsl
push
fnsave
inc
xor
arpl
lcall
mov
sbb
aaa
mov
xlat
or
in
out
jle
mov
aas
pop
xlat
out
jg
add
imul
in
data16
cli
scas
jecxz
push
push
outsb
mov
cmp
add
adc
or
cld
mov
out
inc
add
and
pop
or
pop
mov
pop
add
inc
insl
call
iret
mov
jno
lea
mov
enter
lock
lret
icebp
pop
outsb
std
adc
fsts
fwait
enter
and
xchg
adc
lods
jp
push
xor
in
jno
call
cmp
dec
negl
popf
xor
scas
aad
pop
push
fnstenv
push
addb
movsb
cwtl
pop
mov
jmp
ja
enter
xchg
mov
push
add
hlt
sub
test
mov
jmp
add
or
std
push
mov
dec
addr16
dec
rclb
add
sbb
fwait
in
cli
jnp
mov
xor
add
add
add
mov
add
addb
dec
int3
scas
inc
add
pop
fisubrs
pop
xor
out
gs
sbb
add
cmp
add
mov
repnz
call
ret
lcall
mov
mov
stos
jbe
inc
mov
mov
inc
and
mov
push
popa
shl
pop
push
add
sbb
mov
ja
fnstsw
vpsubsb
add
pop
jg
outsl
or
jne
icebp
add
subl
add
mov
sub
lahf
add
jle
pop
hlt
push
mov
and
addr16
out
pop
inc
dec
daa
push
pop
enter
loop
inc
add
jne
int
push
shll
add
out
addb
xchg
pop
bound
cmp
cmpsb
ja
sub
add
pop
pop
jl
cmpsb
movsl
push
and
cmp
push
xchg
pop
pop
push
mov
jb
xor
xchg
lret
mov
sar
inc
add
in
xadd
push
rcr
loopew
push
addb
lret
ljmp
add
jmp
add
mov
popf
or
adc
mov
int
inc
add
jbe
add
xor
jno
adc
je
icebp
cmp
add
mov
dec
cs
xor
lds
mov
and
fs
push
xor
cwtl
push
in
push
repnz
iret
or
pop
adc
je
mov
cs
testl
rcll
inc
add
add
xorl
sub
les
jge
or
cmc
xchg
mov
sahf
out
hlt
js
add
lock
sub
xchg
ljmp
jge
in
cltd
xchg
dec
jmp
pop
mov
mov
jne
jmp
or
mov
cmp
cmpsb
lds
adc
bnd
pushf
sbb
mov
fisttpl
mov
add
int3
adc
addr16
ljmp
mov
cld
sbb
inc
cwtl
sbb
add
pop
sub
es
roll
sahf
lcall
iret
not
loop
out
or
mov
dec
fsubl
dec
xor
push
lcall
fdivl
and
loope
push
adc
mov
lods
or
push
loope
insl
push
int
inc
add
add
stos
loope
ljmp
imul
dec
shll
xor
loopne
or
addr16
push
fwait
shrb
mov
call
movsl
push
fs
fnstsw
out
and
rolb
dec
fildll
sbb
cmp
xor
sbb
push
aam
enter
movsb
xchg
push
adc
ljmp
fidivs
sub
mov
lahf
adc
sub
icebp
add
sub
insb
push
adc
push
insl
dec
lds
sti
pop
out
push
pushf
enter
stc
xchg
ljmp
add
daa
lds
add
add
pop
aaa
aam
iret
popl
add
std
mov
ja
and
and
ret
fnstcw
add
add
js
daa
in
into
nop
cmpsl
call
in
mov
in
sub
pop
loopne
idivl
lock
mov
mov
lcall
dec
add
mov
out
bound
in
rolb
arpl
test
jno
nop
pop
es
add
rcr
loopne
scas
add
pop
cli
lock
loope
add
fistpl
mov
push
mov
jno
sbb
nop
sbb
xchg
push
push
push
sub
out
mov
mov
loope
fsubs
dec
rcrl
add
arpl
leave
rorb
fdivrs
subl
testl
hlt
movsl
mov
xchg
add
sbb
sahf
xchg
je
fisttpl
mov
push
leave
frstor
cmpsl
sbb
cli
sub
push
test
imul
insl
cmp
add
mov
cmp
jae
fmuls
pushf
or
mov
loopne
sub
add
popf
mov
mov
fsubp
and
dec
aas
pop
outsb
pop
xchg
xchg
cmp
jmp
scas
addr16
inc
xor
gs
outsb
inc
and
insl
jp
add
imul
sub
aad
mov
cmp
mov
add
ret
stos
cmpsb
jns
mov
aam
mov
add
xchg
mov
push
ljmp
outsl
lock
iret
enter
insb
negb
jl
cwtl
inc
add
add
add
lds
js
add
add
idivl
cltd
lahf
fisttpll
dec
cmc
rolb
insl
addb
adc
mov
mov
cmpsb
pushf
popa
push
sbb
xor
add
or
push
call
out
mov
sarl
sahf
mov
add
ror
pop
ds
cli
inc
push
shll
imul
hlt
loopne
scas
mov
or
add
add
or
mov
subl
sub
not
shl
stos
mov
and
inc
add
inc
add
lds
orps
imul
add
and
cli
outsl
mov
popa
adc
mov
add
cmp
jmp
popf
mov
inc
add
movsb
pop
out
push
jne
jb
or
cmp
mov
xchg
mov
sti
mov
aam
repz
stc
mov
ret
jnp
clc
mov
add
aam
mov
sbb
mov
les
mov
xor
mov
jl
push
es
add
push
jge
mov
mov
fs
lret
fwait
das
mov
xlat
and
out
je
aaa
push
repz
fdivrl
add
mov
cmp
lahf
add
adc
filds
dec
test
lcall
or
xor
adc
xorl
loope
push
mov
cmp
xor
fistpl
movsl
jg
inc
add
add
fstl
and
mov
or
mov
cs
add
out
sub
xor
lcall
aaa
sbb
xchg
xor
add
xlat
out
addl
cmp
add
outsb
in
lods
cmp
leave
test
aas
cmp
pop
cli
jnp
add
fistps
sbbl
inc
add
push
imul
arpl
movsl
dec
ffree
add
add
add
lods
fwait
cmp
push
in
xor
adc
dec
hlt
sbb
cwtl
sub
jl
add
movsb
sbb
push
fcoml
insb
enter
aaa
jge
sub
jg
push
je
sbb
mov
cmpsb
add
add
mov
not
dec
cmp
in
pop
insb
inc
add
fildl
pop
sub
push
ss
stos
fidivl
fsubr
adc
sub
xor
aaa
imul
rclb
add
insb
aaa
out
pop
inc
add
jg
nop
dec
push
inc
mov
fisubrs
push
jno
out
xor
push
pop
adc
test
jns
add
movsb
fcoml
iret
xchg
mov
pop
mov
ljmp
cmp
mov
dec
dec
cmp
cmp
and
pop
sbb
xchg
xor
sbb
gs
das
mov
inc
add
mov
icebp
xchg
add
fists
mov
in
cmp
dec
lods
daa
js
cmp
movsl
leave
ljmp
call
dec
mov
or
mov
sub
mov
fimull
jge,pn
add
clc
xor
repz
mov
cmc
popa
xchg
sub
add
cld
insb
test
cmpl
or
shll
add
mov
mov
and
sbb
add
cld
push
add
push
call
sub
and
add
inc
pop
mov
insl
repnz
sahf
or
sbb
sub
mov
hlt
sbb
cs
dec
xchg
jle
lcall
iret
mov
inc
fstp
js
test
mov
mov
xor
adc
dec
dec
ja
push
inc
pop
fcomip
in
adc
sarl
jle
icebp
stc
jle
lret
pop
out
in
mov
pop
into
bound
dec
cmpsb
jecxz
mov
fcomip
mov
pop
lock
push
cwtl
aam
sub
dec
cltd
sbb
pop
call
mov
test
jmp
push
add
in
push
lcall
inc
add
mov
inc
add
fidivrs
xor
in
mov
add
fdivl
stc
jnp
cmp
test
rcll
pop
jb
xchg
movsl
cwtl
cs
add
ret
xchg
out
decl
test
sub
je
jbe
out
test
mov
arpl
add
inc
add
push
fcomps
outsb
loope
lods
scas
inc
call
xor
pop
inc
movb
push
push
sbb
add
fdivp
add
stc
leave
cmp
jl
sub
add
js
dec
add
mov
pop
rorl
popf
out
adc
xchg
aam
jae
push
add
or
xor
sub
loop
add
mov
and
add
nop
iret
fs
lock
add
sub
and
jecxz
or
push
loope
add
sahf
in
adc
fcompl
or
add
jge
xchg
out
stos
push
orl
push
mov
xchg
cli
stos
mov
int3
mov
bound
mov
ds
cmp
push
ljmp
movsb
inc
sbb
rolb
mov
inc
inc
add
std
lret
add
inc
add
pop
mov
test
jae
sarl
repz
and
pop
mov
pop
inc
add
and
push
mov
pop
cmp
jg
push
loopne
jmp
out
adc
add
adc
dec
inc
addb
mov
adc
add
bound
stos
push
inc
ja
mov
mov
cmp
cmp
fldcw
and
lcall
ret
add
in
enter
mov
nop
repz
add
adc
ret
add
mov
push
fistpl
addr16
add
jae
mov
xchg
nop
mull
xor
movsb
cmpsl
cmc
inc
add
push
push
sub
add
push
lods
sbb
scas
push
dec
pop
lret
add
push
xchg
dec
xor
push
push
mov
movsl
loopne
dec
hlt
std
shlb
inc
add
mov
pop
in
sub
lds
and
repnz
mov
xchg
pop
adc
jo
adc
loopne
sahf
mov
add
rolb
push
xchg
movb
sbb
imul
lods
pminub
mov
outsl
addb
mov
pop
in
scas
mov
or
jg
pop
push
mov
mov
cmc
xor
cmp
jecxz
ficomps
inc
add
leave
pop
popa
pop
and
ficompl
push
fnsave
adc
jp
add
ret
movsb
fisubs
jns
add
jb
add
scas
xor
cmpsl
enter
add
imul
cwtl
in
push
js
mov
movsb
inc
add
dec
sbb
repnz
sub
flds
and
int
js
jns
repnz
test
add
cmpl
addr16
lods
rolb
ja
mov
ret
iret
rclb
xchg
mov
iret
sti
pop
loopw
add
mov
push
pop
inc
pop
mov
sbb
add
lcall
xor
sub
mov
push
pop
roll
jns
lret
mov
aam
ja
lock
cmp
movb
cmp
mulb
adc
pop
inc
push
inc
shll
xor
roll
test
ja
stos
test
stos
cli
clc
and
xchg
adc
mov
add
inc
shlb
cmc
jb
insl
insl
push
pop
sbb
inc
add
sahf
or
push
enter
ds
fistps
sub
cmp
outsb
clc
cmpl
mov
pop
lds
add
jmp
call
lcall
add
ljmp
add
xchg
push
xor
lock
repz
scas
mov
adc
popf
xor
push
out
dec
push
inc
add
mov
dec
jmp
adc
add
cmp
pop
mov
sidtl
cli
xchg
dec
mov
xchg
cmpsl
in
imulb
sub
sti
inc
das
push
addr16
les
sub
dec
fsubs
test
mov
mov
ffree
pop
fcoms
orl
sub
pop
cltd
xchg
mov
adc
bound
addb
lods
push
in
inc
add
enter
sub
outsb
into
adc
add
adc
pop
xlat
jecxz
popa
add
xchg
testl
negl
lahf
out
add
out
mov
xor
push
repz
imul
xor
ds
loope
add
xchg
inc
adc
lods
sbb
pop
jo
out
lret
and
inc
je
xchg
cwtl
add
outsl
push
int3
or
or
hlt
mov
jnp
out
std
xorl
leave
cmp
mov
or
mov
outsb
xor
add
jns
stos
scas
into
push
cwtl
jo
add
lret
pop
bound
sub
loop
inc
in
ljmp
idivb
inc
add
inc
fidivs
rcrb
add
std
js
add
pop
int3
xchg
int3
add
insl
xchg
mov
or
mov
push
add
add
ss
mov
push
hlt
push
jae
add
insl
in
xchg
std
sub
mov
mov
push
xchg
pop
jbe
pop
push
int
ja
lea
add
push
jnp
add
jb
jne
add
mov
add
rolb
aam
pop
shrb
push
add
cld
movsb
sti
ja
fidivs
in
and
mov
and
mov
add
sarl
xchg
cmp
mov
stos
sahf
mov
mov
lret
insb
pushf
lret
add
mov
push
adc
fistpll
inc
aas
jnp
gs
cmp
roll
jno
xor
jp
test
int
fcomi
jo
insb
pusha
add
dec
xor
rdpmc
scas
lods
fnstenv
push
sub
add
cs
fiaddl
pop
add
mov
add
push
addb
pop
pop
pop
inc
hlt
stc
xchg
movsb
mov
ret
inc
add
xchg
sub
inc
add
push
add
shl
ficompl
cmpl
add
enter
roll
and
mov
lea
shlb
add
insb
dec
out
nop
add
sbb
je
inc
add
pop
dec
pusha
add
nop
or
push
add
mov
ds
divb
insl
inc
ret
mov
add
sub
adc
loop
add
adc
cwtl
or
in
mov
mov
jecxz
imul
rolb
mov
xchg
arpl
call
jl
imul
mov
mov
and
movb
mov
cmp
add
add
inc
xor
pusha
add
add
xchg
mov
popa
or
lods
sbb
xor
jge
pop
adc
stc
mov
test
jbe
push
sbb
and
add
pop
sbb
mov
inc
jmp
sub
popf
movsb
mov
and
add
in
addl
push
add
mov
dec
pop
nop
pop
pop
addb
notb
fsts
in
push
mov
mov
xor
add
add
iret
aad
fnstsw
xchg
popa
mov
add
cwtl
cs
dec
dec
rorl
mov
pop
in
adc
cs
lahf
stos
mov
psrad
ret
scas
insl
mov
add
xor
add
sub
dec
add
xor
gs
xchg
testl
clc
stos
nopl
icebp
stos
enter
dec
push
rolb
aam
pop
cmpl
stos
stc
icebp
stc
fidivrl
inc
pop
mov
jbe
mov
pop
cmc
or
inc
cmp
rep
scas
testl
mov
sbb
mov
mov
push
xchg
repz
imul
jge
mov
dec
sbb
nop
push
add
jge
int3
xor
sbb
loopne
jp
lret
shlb
addb
in
call
add
xchg
xchg
ret
or
xor
add
imul
jg
pop
jbe
sti
popf
lds
sub
shll
cli
jnp
inc
or
or
daa
xchg
add
jo
push
movsb
out
lods
outsl
lret
xchg
pop
addb
sahf
ret
push
jae
push
int
jbe
sbb
sbb
ss
lret
and
pushf
push
ffreep
add
xchg
add
test
roll
pop
mov
mov
mov
sub
gs
add
add
and
mov
out
loopne
call
fs
out
inc
add
mov
xor
jo
mov
add
push
cld
jbe
dec
lcall
ss
dec
repnz
pop
rolb
jo
scas
ficoms
sbb
int
jae
add
imulb
dec
aas
nop
inc
add
jb
mov
cmc
dec
ret
mov
sbb
jmp
in
sti
mov
ss
push
cld
push
jl
sbb
xchg
ja
outsl
push
stc
mov
dec
ja
push
add
js
add
cltd
mov
xor
popf
js
stc
xor
sbb
sbb
test
add
jmp
sti
es
add
adc
sarl
mov
push
xchg
dec
pop
fcomps
imul
clc
iret
add
mov
daa
xchg
aaa
mov
pop
sub
test
add
cmp
xchg
add
or
adc
ja
adc
stc
jle
popa
mov
jae
mov
adc
mov
add
movb
xchg
roll
fstps
mov
decb
xor
add
inc
add
call
je
push
inc
pop
sbb
lock
push
lock
fsts
adc
push
add
inc
add
sbb
addb
div
mov
ret
iret
mov
subl
mov
cli
adc
ror
sbb
loop
aaa
xchg
push
add
and
cmc
push
scas
ljmp
add
dec
aaa
fwait
sbb
jmp
push
shll
dec
xor
xor
inc
add
and
add
lods
lds
gs
icebp
iret
jns
out
adc
xchg
outsl
adc
lret
push
or
add
add
iret
movsl
push
aam
jge
push
data16
fldenv
hlt
or
aas
ret
js
add
pop
inc
in
shlb
add
inc
test
cmpsb
in
subl
fistpl
inc
sub
lds
add
jg
test
pop
mov
jo
cmp
push
mov
pushf
add
int
push
call
arpl
mov
aas
clc
aaa
inc
out
mov
xchg
aad
xor
fcomps
arpl
jp
xor
not
adc
cmc
jo
outsl
push
dec
pushf
mov
idiv
outsb
hlt
into
lock
xor
inc
add
int3
xchg
popa
sub
pop
mov
pop
sub
fisubrs
add
popl
shlb
or
lahf
movb
into
out
push
xor
hlt
dec
dec
lods
mov
jp
add
stc
xchg
fisttpl
jb
sbbl
ret
fisttpll
jle
aas
dec
mov
pop
insl
std
jo
hlt
js
mov
push
xchg
sub
hlt
out
mov
mov
adc
inc
cltd
xor
jmp
repnz
cmp
cmpsl
mov
mov
cmpl
rolb
jmp
push
outsl
cmp
lcall
push
jno
das
iret
dec
mov
jb
scas
insl
cmp
inc
add
pusha
add
sarb
ljmp
cld
femms
test
jnp
hlt
sub
cmp
add
sbb
pop
sub
dec
cmp
jnp
add
sub
and
cmp
jl
xor
add
inc
add
push
pushf
je
movsb
mov
imulb
push
add
push
addb
add
jg
imul
cwtl
pop
xor
aas
xor
vcvtss2sd
xchg
dec
orl
or
clc
std
xor
arpl
ds
outsl
call
pop
lret
fsts
push
mov
xor
loope
out
adc
add
stc
xor
das
mov
push
jmp
clc
scas
xor
js
rcll
maxps
xlat
mov
xor
push
notb
cmp
inc
add
add
int3
sbb
or
or
add
mov
stc
mov
xor
fdivrl
insb
cld
inc
add
xor
nop
insb
xchg
imul
push
in
mov
insl
push
out
pop
xchg
fimull
outsl
cmpsl
fsubs
inc
or
mov
leave
aad
or
dec
mov
add
cli
mov
mov
jle
push
in
xchg
sti
or
adc
jne
mov
pop
sbb
jbe
or
jae
in
inc
add
inc
add
addb
mov
clc
sbb
loopne
cmp
cld
aaa
int3
scas
sarb
add
ret
test
les
cmp
xchg
bound
mov
in
fwait
or
jp
jecxz
mov
mov
mov
sub
add
mov
jmp
xor
fsubrp
js
jns
jg
and
xchg
pushf
sbb
cmpsb
sbb
add
fwait
div
jnp
and
icebp
hlt
ss
das
loope
ret
push
dec
jns
das
push
adc
test
popa
cmpsb
xchg
or
out
out
out
pop
mov
pop
cs
jle
push
sbb
inc
adc
jge
inc
cltd
add
xor
xor
mov
out
dec
leave
push
xor
jge
push
pop
addb
outsl
mov
insb
test
push
or
push
push
daa
pushl
ja
loop
mov
les
mov
jge
xchg
bnd
jmp
xchg
out
aad
cmpl
xor
pusha
add
pop
xchg
dec
and
jmp
pop
sbb
stc
sahf
je
sub
notb
fisttps
mov
mov
icebp
mov
add
sub
movsl
pop
sbb
leave
push
icebp
push
mov
cmc
std
jmp
xchg
xor
scas
std
sahf
pop
int3
ljmp
jbe
mov
or
pop
sub
add
sub
popa
pop
in
mov
loope
pop
bound
push
add
ret
xchg
call
xor
dec
mov
filds
fcomps
roll
cld
bound
lret
frstor
std
test
fdivr
outsb
ljmp
sub
pop
divb
push
les
inc
icebp
outsb
mov
dec
fcmovb
add
insl
dec
adc
add
add
rcll
push
lret
lahf
push
cld
push
sbb
push
addb
add
lds
xor
cmpsb
lret
fcompl
test
mov
jge
je
test
jg
loopne
leave
loop
nop
loope
loop
in
push
in
dec
out
jl
inc
add
movsb
cmpl
nop
fwait
lret
or
addb
sub
dec
addb
jae
mov
movl
pop
loop
pop
mov
jbe
xchg
pop
push
lret
mov
pop
ficoml
cld
xor
mov
xor
xor
xor
sbb
lods
addl
xchg
incb
ret
mov
cmc
and
jle
mov
js
filds
aad
movsb
inc
add
insb
ja
fisttpll
fsubrs
fs
dec
rolb
sbb
cmp
int
mov
jne
clc
mov
dec
push
push
push
cmp
inc
add
jo
jne
pop
cld
mov
push
out
add
sub
dec
test
lock
mov
cli
push
test
add
out
sub
cmp
fildll
adc
add
xlat
es
iret
add
das
jo
add
movb
push
add
fisubrs
lret
sub
sub
repz
sarl
add
das
pop
sti
dec
data16
lods
addb
xor
cli
fwait
into
mov
clc
or
sti
movsl
testl
push
lea
add
dec
adc
add
aad
or
or
mov
add
insb
es
in
gs
aam
add
das
roll
xor
pop
outsb
add
shrb
icebp
jae
mov
mov
lock
jmp
and
jnp
push
add
repnz
jge
cmpsb
mov
add
rorl
sahf
mov
pop
in
cmpsl
aad
rorb
scas
jle
dec
sub
das
inc
mov
mov
mov
stc
rorl
jge
mov
dec
xor
je
shll
out
lods
in
xchg
cmpsl
xchg
push
lods
adc
cmp
inc
add
push
dec
fiaddl
cs
add
pcmpgtd
or
push
sub
imul
lods
mov
out
push
nop
adc
test
mov
or
test
jns
mov
add
add
pop
sub
dec
mul
imul
fisubs
sub
add
lret
das
in
dec
jae
inc
add
jmp
pop
add
or
jmp
cmp
xor
js
aad
dec
jp
call
add
add
xor
cli
sub
add
and
mov
add
lret
sbb
inc
mov
repnz
imul
and
outsb
orl
adc
outsb
aad
add
sti
mov
cmpsb
push
out
mov
test
push
in
scas
inc
add
mov
pushf
push
xchg
stos
mov
arpl
add
les
lret
or
sub
bound
mov
popf
inc
add
xor
fwait
mov
outsb
mov
jmp
add
xchg
pusha
add
cmp
mov
scas
push
pop
shr
cmpsb
imul
in
outsl
sbb
lods
push
mov
sub
add
pop
xor
cmp
add
jo
hlt
mov
je
loope
outsl
sbb
xchg
mov
push
xor
add
add
cmp
imul
add
clc
movsb
pop
lods
mulb
xchg
jno
inc
add
fildl
stc
mov
cs
mov
xor
icebp
xchg
add
sbb
aam
fimull
loope
xchg
popa
push
inc
xchg
push
add
gs
jle
add
cltd
jno
test
sub
sub
fstl
add
push
xchg
cli
aaa
mov
call
push
mov
fildll
or
test
pop
xor
lods
push
enter
jns
push
std
cmp
add
sub
jo
fstpt
test
popf
cmpsl
hlt
xor
das
push
mov
clc
mov
movb
add
mov
mov
add
in
mov
fdiv
xchg
push
inc
mov
add
lods
push
add
add
inc
dec
dec
adc
pop
dec
scas
addb
testl
mov
xlat
loop
negl
movb
das
fdivl
bound
out
dec
lea
cmp
fmul
lds
stos
inc
add
add
or
inc
fdivr
scas
add
fnstcw
xor
jecxz
add
add
and
sub
out
in
jnp
cmp
daa
push
aas
test
addr16
ds
jg
movb
push
fbld
lahf
adc
lods
enter
shl
adc
jno
fstpl
mov
push
adc
or
mov
ljmp
prefetch
add
rolb
lods
fldlg2
sbb
cmc
and
fisubs
jne
mov
mov
fildll
repnz
je
rolb
dec
sbb
add
addr16
repnz
mov
inc
and
xor
dec
and
add
test
push
repnz
iret
cwtl
std
adc
cld
jns
inc
add
xor
scas
xchg
mov
sub
mulb
lea
add
cli
pop
cld
aas
faddl
mov
add
outsl
scas
sbb
or
in
mov
add
pop
sahf
je
xchg
sbb
aam
stos
jns
push
js
daa
lcall
mov
pop
notl
bound
loope
stc
adc
sbb
imul
popa
sar
push
sub
cmp
adc
cmp
pushf
imul
scas
lret
sbb
jne
mov
jb
and
test
popa
or
aam
ficompl
jp
test
filds
jg
add
ret
addb
dec
aad
add
lods
mov
test
dec
xorl
mov
cltd
mov
call
arpl
iret
sbb
inc
shr
test
pop
add
cmpsl
pop
or
push
test
ljmp
push
add
push
scas
xchg
and
outsb
dec
in
pop
ss
jg
jns
repnz
sbb
xor
outsl
lds
xor
lret
sub
loop
pop
mov
addb
int
or
sti
inc
adc
dec
mov
add
jae
stc
lret
dec
sarl
push
dec
lea
shl
jmp
stc
add
mov
sbb
add
dec
or
dec
jb
nop
push
repz
mov
in
lret
pop
test
cmp
out
add
xchg
jae
ss
scas
loopne
mov
add
popf
loopne
out
lods
pop
mov
test
lret
dec
clc
mov
pop
loope
cmp
add
jecxz
addb
nop
push
mov
add
lss
cmpl
mov
movb
dec
popf
in
stos
inc
add
outsl
xlat
movb
jns
in
ja
movsb
push
mov
mov
repnz
out
cmp
movsl
or
add
movsl
push
lret
rep
fidivs
add
test
fs
enter
or
xor
fsub
xchg
fmulp
movsb
dec
int
mov
in
xchg
cmp
in
insl
pop
jb
cmp
addb
add
xor
push
adc
pop
cmp
pop
or
mov
mov
dec
mov
inc
pop
inc
add
test
mov
popf
in
inc
add
jnp
jl
fdivrs
pop
push
xchg
or
cmpsb
mov
mov
sub
mov
push
sub
add
adc
cs
aad
daa
jp
add
mov
gs
mov
xchg
sub
xor
out
cmp
xchg
js
jp
movsl
jecxz
and
sub
mov
out
fcomp
imul
clc
addb
ljmp
dec
mov
push
sbb
scas
push
or
fwait
les
push
add
mov
insl
adc
popf
sahf
inc
add
gs
cltd
xor
xor
leave
out
popf
xchg
stos
fstps
lret
fwait
fwait
mov
in
fnstcw
test
loopne
adc
in
arpl
arpl
js
mov
mov
insb
std
ljmp
add
lds
xchg
mov
mov
in
mov
sbb
add
es
jmp
jmp
pop
or
inc
add
add
fs
xor
cmp
jnp
dec
jge
jb
mov
jmp
fimuls
xor
push
insl
jl
add
mov
add
dec
jbe
inc
addb
pop
fwait
jnp
lahf
icebp
mull
lcall
mov
int
cwtl
push
mov
std
cmp
sahf
mov
jge
pusha
add
sub
fcoms
pop
cmp
loop
call
push
jnp
and
and
pop
add
xchg
pop
mov
mov
xchg
add
insl
ja
add
leave
popa
fmul
mov
add
push
fcoms
inc
xor
mov
inc
add
dec
sub
adc
loope
mov
or
add
clc
outsl
test
lds
loop
xor
in
jbe
and
rorb
cltd
in
or
mov
inc
dec
push
add
inc
add
sub
addb
dec
sbb
shlb
push
push
outsb
ljmp
sbb
xor
xor
xchg
ljmp
fnsave
lahf
enter
stos
mov
pusha
add
or
add
addb
xchg
or
adc
push
xchg
mov
add
addb
mov
jb
loopne
out
mov
shl
addr16
push
cmp
lods
cmp
adc
add
adc
mov
pop
movb
out
test
outsb
xchg
call
jge
push
jecxz
out
xor
imul
and
pop
xchg
jp
mov
addb
mov
lret
sbb
lret
xchg
jecxz
lret
mov
or
push
and
rolb
add
or
mov
mov
mov
std
lods
pop
pop
jge
mov
pop
rcrl
pop
clc
xor
add
cmp
int
mov
repz
add
inc
add
add
cmpsb
lods
xor
pop
test
inc
add
mov
cli
cmp
push
sub
mov
add
mov
inc
int3
es
xchg
pop
popa
stos
sub
mov
mov
add
pop
inc
push
inc
add
add
add
sbb
push
push
pop
mov
enter
jnp
gs
jle
push
inc
add
add
push
add
push
out
add
xor
mov
jb
or
inc
add
movsl
cmp
push
negl
mov
xchg
mov
les
psubusw
lret
inc
add
addb
test
add
add
xor
add
fists
sub
or
add
add
outsl
leave
push
pop
mov
adc
mov
in
add
mov
xchg
lcall
push
inc
decl
jne
fnstenv
mov
or
in
mov
cmp
xor
sbb
inc
add
subl
lock
lret
aaa
fs
stos
sti
out
rclb
ss
and
daa
in
or
cmp
add
push
mov
push
push
mov
add
fwait
call
sbb
notl
add
addb
mov
and
es
inc
add
dec
sti
cmp
jne
mov
ficoms
push
cmpsb
popf
lret
nop
dec
sub
mov
add
aad
jl
add
add
imul
roll
add
lods
dec
lret
cmp
jl
add
and
out
int3
fstps
nop
jbe
stos
addb
call
mov
inc
add
cmp
js
inc
add
test
nopl
jae
pop
loopne
add
aam
adc
dec
inc
andl
gs
push
add
mov
cmp
inc
push
fisubrs
ljmp
sar
adc
xchg
jns
addb
add
inc
add
and
push
cmpsb
inc
addb
scas
mov
addb
test
roll
movsl
test
inc
add
addr16
mov
fwait
repz
movb
out
jmp
lods
or
jmp
cmpsb
cmp
add
imul
pushf
push
lea
add
decb
stc
lock
ljmp
popa
scas
sti
sub
pop
ret
jmp
jb
stc
filds
add
pop
mov
cs
mov
mov
jecxz
aas
stos
into
mov
xor
add
or
pop
lods
sbb
aaa
xor
dec
cmp
inc
adc
dec
xlat
jno
stos
jnp
xchg
fnstenv
leave
hlt
mov
add
leave
inc
add
fstpt
orl
cs
mov
aaa
rolb
sbb
clc
repnz
imul
mov
xchg
xchg
gs
inc
jbe
jne
addb
lcall
iret
test
push
loope
test
inc
sbb
jne
add
dec
sti
and
gs
adc
add
jae
or
and
sahf
pop
ljmp
mov
add
fs
sub
and
and
xchg
sbb
jo
gs
arpl
mov
and
push
adc
addb
js
mov
pop
push
xchg
inc
add
pop
shr
cs
xor
dec
mov
divl
or
or
xchg
add
push
outsl
and
sbb
movsl
mov
dec
inc
add
add
mov
lahf
out
cmp
mov
or
ret
leave
sbb
movb
cltd
add
loopne
pop
scas
jno
das
cmp
dec
out
stos
out
mov
stc
jge
xor
inc
or
dec
dec
xor
sub
add
dec
sub
mov
mov
ljmp
push
sub
in
mov
cmpsl
lret
ss
push
mov
add
pop
in
cmp
lahf
outsb
mov
add
xor
shrl
push
jle
adc
stos
repnz
lahf
lock
into
xchg
sti
sub
adc
cs
rolb
in
in
mov
shll
pop
fimull
imul
adc
xlat
cli
dec
and
dec
iret
jmp
and
adc
xchg
mov
sub
jecxz
mov
add
or
adc
test
jne
and
cmp
sbb
inc
les
and
stos
insb
xchg
addb
shll
int
jo
in
dec
fwait
pop
sub
in
xor
and
stos
sbb
call
pop
out
cld
pop
jns
stc
rolb
add
in
add
fildl
aam
mov
clc
movsb
jnp
pop
dec
sbb
jecxz
addb
outsl
mov
leave
sbb
arpl
inc
add
or
sub
xchg
cltd
xchg
sub
addr16
xor
jg
cmpsb
jecxz
insl
es
out
mov
mov
add
add
dec
push
jb
sahf
inc
push
fsubrs
popf
xchg
ficoms
jecxz,pn
inc
js,pt
repnz
add
and
movsl
jg
add
xchg
sbb
fcomps
xchg
cmp
stos
sbb
popw
cmpsl
push
sti
popa
aad
pop
or
outsb
js
das
xchg
js
add
inc
ss
push
cmp
mov
push
add
movb
mov
add
stc
sub
add
adc
addb
in
imul
out
in
add
jno
push
mov
cmp
call
ret
incl
add
out
jg
add
jecxz
rorb
sbb
in
in
pusha
add
sbb
and
sub
sub
js
adc
adc
scas
xchg
pslld
or
cmpsb
in
jae
lret
scas
push
bound
outsb
js
cld
mov
fsubl
add
add
cmp
add
sub
add
xchg
int3
lahf
ficoms
cmp
add
xchg
add
pop
lcall
or
xor
add
dec
sub
add
dec
enter
push
dec
or
lret
stc
cwtl
mov
mov
movsb
mov
daa
jb
pop
pusha
add
and
dec
fadd
add
mov
add
adc
outsb
sbb
pop
inc
add
mov
ret
ret
movsb
push
cmp
pop
sub
add
inc
add
in
int
imul
iret
or
dec
div
int
add
iret
sarb
inc
add
and
loopne
notb
jnp
cs
adc
loopne
loope
cmc
lods
repz
push
cmp
add
sub
das
loop,pt
jno
mov
push
add
addb
popf
jae
cli
dec
mov
outsb
push
xor
addb
xchg
pop
jle
sub
add
xchg
xlat
ja
stos
or
test
cmpsb
xchg
or
jp
les
insb
add
shlb
xor
xchg
jns
imul
add
repz
sti
outsl
hlt
push
add
xor
cmpsl
or
leave
push
insb
lcall
movb
les
loope
fsubs
rcrl
jne
mov
cmpsl
jbe
jge
inc
leave
pushf
or
and
add
add
jle
std
sub
outsb
sub
mov
leave
les
ja
mov
dec
lods
into
lock
mov
push
in
aas
out
lods
lret
lret
dec
mov
or
aam
int3
rorl
mov
sbbl
je
adc
add
movsl
and
cmpsb
xchg
bound
mov
dec
mov
call
cmp
loop
iret
add
jno
add
dec
xor
rclb
mov
add
inc
add
fdivrs
and
xchg
sub
sub
dec
rolb
ljmp
add
pop
jo
stc
out
dec
lcall
in
ret
xchg
dec
addb
jbe
sub
pop
popf
mov
add
in
insb
sarl
rcrl
cmp
mov
cmpsl
hlt
mov
ja
andl
mov
call
lock
mov
sahf
int3
and
cli
mov
imul
cs
add
mov
xchg
xorl
mov
push
mov
pop
rcll
rorb
imul
lds
addr16
and
or
in
pop
repz
rorl
cmpsb
sub
add
jmp
add
dec
sti
mov
push
mov
mov
pop
xchg
fcomps
dec
mov
push
add
or
mov
jo
addb
jmp
bound
aaa
pop
repz
cltd
xchg
pop
xchg
pop
jle
mov
add
jmp
pop
cmp
xor
repz
insl
mov
shl
mov
sub
fistpl
pop
loope
int3
cmp
cmp
add
push
sbb
mov
cmpsl
stc
movsl
add
cmp
add
cmp
scas
cli
test
out
inc
loop
fldt
jne
mov
popf
stos
jnp
add
jp
xchg
inc
add
or
jno
adc
in
int3
div
add
sub
mov
mov
outsb
jnp
imul
in
xor
and
inc
add
cld
dec
dec
cmpsb
inc
push
daa
in
lret
xchg
xchg
int3
mov
adc
sbb
sbb
mov
push
cmp
cltd
bound
mov
push
dec
mov
push
add
ret
inc
sub
dec
xchg
xor
test
sub
popa
add
sub
add
jg
shl
mov
lock
add
push
xor
add
and
xchg
add
pop
ss
fsubrs
xchg
add
mov
dec
dec
movsl
push
rcrl
outsl
int3
dec
sbb
mov
rolb
js
cli
std
inc
push
into
adc
imul
adc
ss
pop
outsb
dec
inc
add
lock
add
cmpsl
dec
mov
jg
roll
add
sub
push
movsb
inc
add
sub
test
push
cs
out
cltd
fwait
stos
mov
push
jecxz
sbb
es
dec
outsl
mov
mov
dec
arpl
sbb
js
and
mov
enter
cmpsb
scas
and
add
jns
add
nop
cmc
jmp
dec
mov
hlt
mulb
sbb
push
add
in
cwtl
stc
mov
sub
inc
add
sarl
je
and
mov
std
add
out
inc
sbb
loop
test
and
cwtl
xor
sub
mov
xor
insl
inc
add
mov
addb
mov
or
cmpsb
inc
add
cmp
mov
stos
adc
rorb
xchg
nop
fimuls
adc
cmpsb
mov
shll
scas
ret
pop
in
add
js
xor
lret
cli
sbb
cltd
inc
add
fcomi
push
sub
mov
arpl
add
jns
pop
or
data16
jnp
mov
sub
in
sbb
push
cli
dec
ja
push
jecxz
add
daa
cmp
test
loopne
pop
add
add
insl
mov
mul
pop
shll
xchg
add
cmp
stc
out
loope
data16
adc
and
or
movsl
add
mov
xor
cmpsl
and
cmp
scas
addb
arpl
add
sarl
adc
add
xor
mov
sub
jo
add
loop
jne
pop
fisttpl
xor
ds
or
or
add
sub
ret
inc
add
xor
mov
add
xchg
adc
inc
add
ret
cmpsb
lock
loopne
mov
std
test
inc
scas
clc
ja
pop
jbe
add
sub
in
mov
adc
mov
xchg
imul
fdivl
or
jmp
gs
mov
es
mov
xor
mov
js
leave
push
arpl
add
mov
cs
jp
jmp
mov
dec
mov
cld
hlt
shr
pop
pop
cwtl
nop
jge
add
mov
cmp
add
xor
push
add
rcrb
xor
jbe
and
push
mov
sbb
add
outsb
bound
into
mov
pop
push
add
jle
mov
push
js
add
lea
jp
iret
xor
sbb
lcall
mov
lods
or
test
add
in
add
and
add
xor
rcrl
lock
add
fnstenv
sbbl
xor
adcl
mov
mov
or
jno
popa
xchg
push
out
outsl
inc
add
add
hlt
shrl
roll
insl
stos
mov
xor
pushf
loop
xlat
mov
fstps
xor
add
ror
in
xchg
ds
mov
jecxz
mov
mov
jae
and
dec
hlt
xor
outsl
cmp
jnp
add
mov
daa
out
sub
jg
iret
stc
fsubrs
lds
daa
sbb
test
pop
inc
add
sub
mov
push
inc
push
xor
fistl
jo
lret
lret
xor
es
sub
add
rorb
out
inc
jle
fwait
ds
and
lahf
loop
fstps
aad
push
jp
sbb
dec
add
pop
in
stos
mov
sbb
inc
add
inc
push
pop
roll
movb
adc
sub
ret
xor
in
dec
nop
add
out
stos
in
cld
iret
icebp
mov
add
sarl
dec
xor
faddl
fwait
mov
fwait
jmp
pop
mov
and
call
shlb
jl
pusha
add
sbb
stc
movsb
mov
mov
rorb
and
idivl
push
push
divl
sbb
jp
adc
and
pushf
and
sub
add
mov
aaa
into
push
in
fcompl
cmc
jbe
dec
in
add
shll
outsb
or
lods
addb
mulb
stc
out
fsubr
push
jnp
sbb
das
enter
loop
cmpsb
sub
xchg
or
push
fs
rorl
cmpsb
dec
out
xchg
jecxz
in
push
sub
cmp
ja
xchg
fnstsw
pop
nop
add
jbe
movb
add
and
inc
add
cltd
sub
or
pushf
lea
icebp
inc
imul
add
test
sbbl
xlat
mov
sub
push
push
inc
cwtl
jae
and
or
dec
jle
adc
clc
lahf
add
pop
jbe
addb
popf
adc
xor
icebp
xchg
movb
mov
add
imul
pop
insl
dec
fidivs
push
daa
ss
int
lahf
mov
ds
call
jp
idivl
sub
jo
or
in
push
inc
add
inc
clc
aam
mov
pusha
add
nop
ficoml
mov
imul
js
pop
fs
adc
out
add
lods
xor
add
mov
add
xor
int3
xchg
jns
xchg
fbld
add
pop
pop
mov
daa
lcall
xchg
pop
xor
rolb
pop
mov
subl
fistpl
mov
inc
add
repz
lock
push
lock
addb
and
jnp
jb
stos
jecxz
shlb
add
aas
dec
scas
adc
jmp
mov
fst
loopne
inc
add
in
adc
popa
pop
das
and
pop
aad
scas
mov
lret
sahf
adc
sahf
sti
sahf
icebp
dec
pop
sub
and
call
jns
add
cmpsl
dec
pop
or
push
rolb
movsl
cmp
sub
add
add
or
jne
out
packssdw
sbb
xchg
les
push
pop
xchg
loope
adc
loopne
sub
pop
sarb
add
into
sbb
sbb
cmp
adc
add
add
iret
push
out
xor
mov
sbb
lret
xchg
jecxz
add
lea
mov
jecxz
addb
sub
xchg
adc
dec
add
pop
push
cmpsl
pop
mov
inc
daa
sahf
je
dec
mov
sub
je
jns
pop
jns
push
adcl
rolb
jo
and
push
cmp
dec
out
adc
arpl
inc
inc
fstpt
add
and
hlt
xlat
mov
inc
add
xor
into
or
cmp
push
xchg
ss
mov
fsubr
inc
add
cwtl
xchg
data16
xchg
sbb
mov
cmovo
inc
fnstcw
and
sbb
mov
sbb
loop
into
gs
mov
mov
repz
xchg
fwait
mov
xchg
insl
inc
add
and
adc
int
ljmp
jnp
push
xchg
mov
add
inc
mov
test
sbb
add
dec
rolb
call
fldl
ret
xor
stc
adc
lret
jl
outsb
test
pushf
insb
outsb
pop
clc
mov
push
pminsw
adc
aas
es
xchg
xchg
or
or
mov
adc
mov
pop
sbb
pusha
add
test
add
jecxz
add
clc
mov
mov
out
sti
mov
lea
dec
sbb
dec
cmp
jp
sbb
rorb
fs
jb
outsl
push
mov
fiadds
hlt
das
int3
mov
shll
add
dec
icebp
pop
inc
add
push
inc
je
scas
jo
leave
xchg
mov
jmp
fsubrs
ret
jns
call
xchg
jne
inc
add
adc
cmpsb
test
sbb
jle
jecxz
mov
pushf
popa
shll
iret
dec
rolb
or
insl
sbb
add
bound
shll
push
out
repz
mov
add
lods
jno
out
inc
add
aas
clc
and
call
jno
xlat
sub
rolb
push
inc
sbb
gs
sbb
add
sub
stos
cmpsb
test
scas
mov
pop
int3
insb
popf
inc
and
sbb
lods
cmp
push
add
fbstp
inc
mov
cmp
fimull
xor
stos
push
cmc
xchg
sarl
add
mov
sbb
fs
notb
aas
ret
mov
ds
popa
fsts
inc
rcr
add
in
das
scas
lds
in
push
push
mov
xchg
jmp
mov
add
add
leave
jo
out
repz
leave
mov
ss
pop
stos
stc
mov
mov
mov
ret
cmp
ret
rolb
add
leave
out
adc
ret
in
mov
jae
jno
add
xchg
jne
add
daa
xor
insb
int
lret
pop
sub
jns
add
in
cs
stc
jnp
lret
jb
or
add
add
loopne
addr16
xlat
shlb
add
or
pop
lcall
add
inc
add
mov
fdivr
lods
mov
in
xor
test
roll
lods
xchg
add
push
stos
and
jl
addb
dec
and
and
test
sub
sete
loopne
lret
mov
enter
pop
or
add
bound
gs
cld
add
fisttpll
pop
mov
and
daa
sub
mov
inc
loope
mov
push
jne
sub
pop
xchg
sub
bound
imul
mov
and
imul
xor
mov
pop
rcll
add
sarb
ss
jnp
add
add
stc
and
lock
cltd
sbbl
js
mov
jno
movsb
leave
cwtl
mov
xchg
mov
adc
mov
out
icebp
insl
xlat
test
sub
inc
out
ss
scas
xchg
jecxz
add
pop
int3
dec
lods
jmp
push
sub
int
ret
arpl
mov
addb
mov
lods
data16
sub
mov
pop
inc
pop
pop
mov
aam
pop
jmp
jb
or
push
pop
push
add
out
xlat
cmc
icebp
adc
cld
xor
popf
jle
cmp
adc
daa
push
sub
in
int3
xchg
sbb
cld
mov
aas
pop
nop
sahf
lea
dec
repnz
mov
stos
pop
bound
sahf
test
pop
cmpsl
and
xor
xor
fidivrl
jo
sub
mov
add
sub
add
or
das
stos
addb
add
dec
lods
mov
inc
mov
add
lods
imulb
push
mov
jmp
add
add
sti
pop
dec
cltd
cmp
add
outsb
pop
jns
add
movsl
jb
push
push
hlt
in
push
push
or
push
cmpl
push
stos
pop
roll
sbb
popf
aam
push
test
in
sub
rcr
lods
mov
pop
lret
aad
push
xchg
cmpsb
mov
test
fimull
cmp
ret
into
outsb
rcrl
sbb
mov
mov
or
sti
int3
cmp
popa
rep
push
in
cmpsl
je
xchg
xor
add
xor
add
mov
scas
sbb
in
xchg
es
inc
add
xchg
mov
xchg
pop
push
add
les
inc
add
push
iret
rolb
inc
add
jnp
movsb
subl
enter
popa
cwtl
add
rolb
add
xor
mov
cmp
jae
inc
xor
push
add
or
call
add
cld
pop
xor
icebp
dec
pop
dec
out
pop
xchg
lret
xor
out
add
insb
imul
push
mov
popa
fistpll
in
mov
mov
add
xor
dec
mov
cli
dec
stos
add
push
mov
jmp
ret
es
les
enter
xlat
sub
sub
inc
add
dec
xorl
stc
iret
shl
fsubr
adc
fdivrp
dec
fcmovnu
mov
or
add
sub
mov
jmp
ds
add
push
mov
fsubrs
insl
dec
jb
push
inc
add
pop
unpcklps
out
xor
mov
and
inc
int3
imul
jmp
add
cltd
mov
mov
std
push
loope
sub
stos
stos
adc
ja
and
clc
aam
and
outsl
aas
stos
js
mov
xchg
mov
rorl
jle
sub
xor
inc
mov
idivl
cmpsb
mov
xor
add
mov
mov
sarl
sbb
push
add
mov
inc
jecxz
sbb
ret
jb
je
sbb
divl
in
mov
sub
or
add
stos
addr16
addb
and
add
and
inc
add
out
jno
inc
add
movsl
stc
jo
popa
dec
sub
jg
addb
in
shrb
cwtl
test
xor
movb
jg
std
adcl
outsl
xchg
or
add
push
ret
push
or
cltd
xor
fimuls
sarb
fidivs
ss
add
das
outsl
xor
push
rolb
push
test
and
call
mov
xor
stos
jle
andnps
xchg
arpl
add
and
jae
jbe
mov
sub
cmp
jmp
in
adc
sti
call
xchg
push
mov
ljmp
add
cltd
imul
xchg
insb
aas
push
xor
mov
imul
roll
stos
sbb
inc
xor
add
outsb
in
ja
inc
add
jno
sbb
push
jle
mov
push
adc
mov
mov
in
sbb
outsl
mov
xlat
stc
aad
jmp
mov
cmpsl
fisttpll
test
add
jg
add
dec
ficoms
add
sub
repz
decl
mov
dec
lret
mov
out
mov
sub
mov
or
ret
outsl
outsb
lret
int3
leave
mov
aad
push
fcmovne
pop
pop
dec
jno
dec
sub
ss
mov
addb
shrb
pop
scas
fdivrs
dec
pop
fistl
mov
mov
add
imul
adc
mov
mov
aad
jnp
adc
loop
insb
sub
lds
rcrl
sub
test
xchg
xor
lcall
xchg
ja
fwait
push
add
jge
stos
mov
lods
jnp
sub
add
pop
xor
pop
fmul
fs
xchg
leave
ret
cmp
mov
ss
imul
movsl
dec
ss
push
push
or
sahf
ja
add
js
inc
in
cmc
std
mov
aas
push
xor
rorl
lcall
and
or
sbb
add
loopne
add
fildl
test
add
push
movsb
lahf
scas
mov
mov
ror
out
push
lahf
pop
lret
sub
sub
xor
lret
adc
mov
loopne
pop
and
mov
ds
jg
leave
and
xor
orl
cmpsl
pop
in
cli
adc
mov
cmp
jae
jg
mov
addb
inc
add
daa
xor
xlat
mov
jecxz
out
add
sahf
lcall
leave
push
xchg
out
xor
and
jp
mov
sbb
pop
mov
xor
xlat
fsin
adc
jecxz
push
push
add
pop
out
cli
adc
lods
inc
mov
jge
addb
mov
xchg
push
outsb
pusha
add
inc
and
les
lret
push
call
test
mov
cmc
scas
fs
mov
imul
cmp
mov
dec
mov
and
fdiv
inc
add
mov
or
das
das
test
pop
aam
dec
mov
loop
mov
fwait
mov
adc
inc
add
aad
mov
pushf
es
and
add
rolb
mov
pop
mov
out
addl
mov
inc
and
push
sub
xor
add
lock
add
jle
and
add
mov
pop
xor
sub
icebp
into
je
add
popf
or
jge
jno
add
mov
sub
add
add
movsb
push
insb
jnp
or
add
fs
add
into
lret
fsubrs
sbb
mov
int
add
adc
sub
stos
cltd
arpl
or
fisubl
add
mov
pushf
dec
enter
pop
outsl
xchg
outsl
pop
fcmove
or
xchg
insl
dec
sub
and
lods
and
jp
jle
lea
mov
fisubs
xor
inc
outsb
sub
sub
out
add
pop
inc
add
scas
inc
add
pop
pop
addb
pusha
add
hlt
ds
mov
pop
cwtl
mov
pop
mov
push
mov
pop
push
or
les
mov
push
out
mov
mov
ljmp
push
stos
and
or
ss
pop
sbb
xchg
mov
xchg
in
lcall
popf
loope
jnp
xor
adc
push
lahf
inc
add
lret
mov
lahf
jle
or
push
hlt
movsl
jae
test
push
aam
add
sbb
cwtl
pop
xor
std
pop
lods
cmp
mul
nop
loope
push
add
insb
mov
mov
jmp
mov
cmp
jmp
add
sub
xchg
std
cmpl
ret
add
lahf
rolb
lock
hlt
ret
nop
enter
ftst
and
and
cmp
push
stos
stos
inc
fmuls
ror
outsl
xor
add
loope
mov
sbb
scas
rcrl
out
cs
mov
xor
add
sub
sbb
shll
icebp
dec
lods
imul
mov
pop
jns
or
dec
repnz
sub
mov
add
mov
popa
ret
stos
call
add
and
adc
pop
inc
sub
test
pushf
rorl
je
movsl
pop
push
cmp
push
push
mov
fiaddl
add
add
ret
fldcw
fwait
js
cmp
inc
int3
mov
mov
jmp
xchg
aaa
push
and
and
lods
or
les
dec
leave
jno
cld
loope
call
ljmp
dec
aaa
pop
push
loope
add
repnz
jae
adc
add
out
add
push
push
mov
pop
rolb
add
rolb
and
rcrl
cmp
xor
lods
cwtl
scas
mov
push
mov
fldl
test
fstps
jecxz
test
push
xchg
stc
adc
xchg
mov
push
stos
pushf
imul
or
add
jle
jp
mov
adc
mov
push
add
imul
idivb
sbb
add
clc
scas
lcall
push
or
movsb
mov
ljmp
aam
fisttps
je
xchg
into
call
call
cmpsb
xor
push
mov
icebp
add
loope
sub
cli
jno
fs
insl
mov
mov
or
movsl
push
addr16
add
repnz
gs
mov
out
push
lods
cmpl
mov
repnz
lret
call
pop
push
jne
xchg
pop
or
shr
pusha
add
add
cld
xchg
aas
sbb
imull
or
cmpsb
insb
sbb
in
les
mov
test
xor
inc
add
add
loop
add
hlt
mov
cmp
dec
jg
cmp
push
rolb
out
pop
mov
add
add
dec
jae
jns
mov
push
xchg
test
ret
test
or
ljmp
xlat
lds
fs
push
sbb
add
scas
mov
notb
push
add
xchg
cmp
xchg
pop
in
mov
jae
cmp
movb
dec
push
repz
sbb
and
ss
mov
xchg
rolb
enter
repz
mov
inc
add
jg
mov
jmp
shrb
inc
add
jp
bound
jae
popa
jecxz
psubusb
mov
test
enter
mov
sub
movb
xor
push
xor
push
lods
fwait
roll
cmp
add
push
add
push
aad
in
xchg
and
add
sti
dec
and
jmp
add
xchg
fs
lods
xor
imul
pop
int3
push
ret
clc
dec
enter
test
push
add
push
sub
out
push
cli
mov
and
cmp
pop
dec
fdivrl
or
in
mov
pushf
or
test
add
and
ds
xlat
mov
mov
mov
mov
mov
into
fwait
mov
mov
cmp
cld
fcompl
sti
test
xchg
fisttpl
xor
mov
xchg
push
jge
out
movb
mov
pop
dec
mov
xchg
clc
ja
mov
popf
ss
and
sbb
loope
and
das
fbld
je
movsb
mov
test
inc
add
add
in
pop
mov
addr16
lahf
dec
or
test
or
pop
xchg
test
add
jns
inc
add
dec
test
or
add
stc
rolb
lret
inc
mov
dec
add
jns
inc
add
ficompl
xor
jl
out
cmpsb
add
shrl
insl
loope
fs
ja
fisttpll
cmc
or
lods
mov
shl
sbb
lahf
push
add
nop
jbe
in
xchg
xchg
push
pushf
nop
or
inc
roll
sbb
or
roll
adc
fsubrl
pop
test
jle
adc
or
outsl
push
data16
add
jle
out
jg
imul
push
addb
int
inc
add
cli
das
xchg
rol
add
jae
aaa
loopne
add
push
or
ret
daa
cmp
jnp
sti
fisubl
repz
mov
js
jbe
ljmp
cmp
in
div
cmp
mov
mov
lret
inc
cmp
add
jl
repnz
sub
jp
mov
outsb
inc
push
clc
push
and
in
push
call
test
xor
lds
outsl
fwait
jno
add
insl
add
mov
je
xor
faddl
cmp
mov
dec
icebp
cli
pop
add
push
add
fildll
xchg
cmp
inc
add
bound
jl
dec
xchg
popa
sbbl
inc
add
rolb
sub
arpl
cmp
aad
outsl
push
or
add
test
lcall
test
jecxz
add
adc
add
and
mov
add
hlt
imul
add
ds
ret
lahf
in
cmpsl
mov
add
fstps
jno
test
pop
add
popf
sbb
in
aas
dec
js
dec
xchg
xchg
mov
pop
pop
mov
dec
dec
not
outsb
cld
xlat
cmp
cwtl
adc
adc
push
outsl
push
fildll
xor
fstpl
mov
cld
loop
das
xor
mov
jo
lds
add
jae,pt
pop
pop
xchg
jg
jns
or
mov
xor
dec
sbb
div
jg
sub
lock
xor
inc
push
nop
in
rcl
jecxz
xchg
push
cltd
lods
inc
add
outsl
sub
fdivl
rolb
adc
jb
add
loope
push
pusha
add
xchg
popf
sbb
mov
movsl
mov
cmp
rolb
add
cmpsl
mov
cs
push
xchg
add
enter
cwtl
add
adc
shll
in
adc
add
fstpl
add
xor
adc
add
sbb
mov
jle
loopne
idiv
aam
cli
xchg
scas
cmpsl
loop
aam
add
aad
cmpsl
push
sbb
inc
add
lods
inc
add
loope
dec
rorl
cmpsl
push
pop
inc
add
adc
mull
add
in
sub
sarb
popa
and
popf
xchg
in
loope
pushf
sub
mov
push
jecxz
loopne
lock
lods
push
xchg
mov
repnz
push
sbb
cmp
fadds
jae
in
jb
cmp
adc
addr16
jo
loope
mov
mov
push
das
icebp
stos
adc
insb
in
cmp
add
cmp
cli
mov
push
add
jmp
add
add
pop
or
jmp
lret
ja
jle
insb
addb
add
cmp
jecxz
xor
cmp
add
cmp
mov
sbb
mov
call
mov
cwtl
scas
jle
arpl
jo
nop
aad
jecxz
lahf
stos
add
pop
pop
stos
adc
dec
inc
add
mov
dec
pushf
outsl
insb
pop
push
pop
loopne
jmp
fcom
pop
fsub
push
je
jl
pop
inc
add
dec
mov
dec
test
xchg
jge
dec
or
sub
fstps
sub
in
shrl
mov
push
sub
add
gs
xor
pop
push
fidivs
jb
jp
lahf
scas
pushf
pushf
icebp
cmp
push
cmp
nop
jmp
sub
ret
xchg
inc
add
inc
add
cmp
mov
push
lcall
add
mov
into
sbb
mov
push
inc
add
and
shr
daa
or
mov
mov
push
xor
mov
pop
mov
jnp
fildll
idivl
iret
call
add
push
add
ja
fnstsw
xor
jns
mov
leave
or
inc
scas
xchg
rcl
or
mov
add
out
lahf
xchg
shrl
cli
cld
pop
pushf
fsubrs
bound
insb
adc
fmuls
pop
push
bound
loopne
add
scas
sub
jno
test
inc
add
push
test
or
mov
ljmp
push
loope
es
cmp
mov
sub
and
cwtl
ret
adc
xchg
add
jo
sbb
xchg
fsubs
add
xchg
lahf
nop
aaa
pop
jle
inc
jmp
sbb
fnsave
test
cs
enter
sub
xchg
rcrl
js
ljmp
pushf
dec
xor
insb
sbb
dec
lods
sbb
fbld
lahf
inc
add
or
inc
add
mov
jmp
xchg
xor
enter
add
in
repz
movb
nop
arpl
in
xchg
lds
lret
mov
xchg
jb
sbb
inc
push
mov
clc
stos
test
lahf
fnstsw
xchg
sub
mov
inc
cmp
inc
insl
test
add
mov
jo
mov
or
fistps
xchg
fimull
addb
sbb
sbb
jp
mov
jecxz
js
mov
mov
push
push
testb
nop
mov
jge
add
fnstcw
jl
std
mov
cmp
xor
out
add
jne
ds
mov
mov
stos
lahf
dec
dec
cmpsb
leave
das
push
and
mov
add
dec
adc
std
push
iret
enter
les
leave
mov
jecxz
add
mov
cmpsl
cmp
add
enter
jg
adc
lcall
adc
dec
inc
rorb
and
enter
push
and
dec
dec
ljmp
iret
push
sti
scas
xchg
addr16
and
dec
addb
dec
addb
cmp
sbb
jl
mov
stos
js
xchg
aas
pop
push
inc
add
jo
fcomip
and
pop
mov
mov
insb
ret
out
es
push
lods
and
mov
xchg
out
jne
add
in
int3
mov
xchg
pop
test
xor
add
jp
outsb
lods
jmp
add
push
adc
pop
mov
add
add
mov
insb
sahf
lahf
and
bound
add
push
cmp
cli
iret
enter
outsl
xlat
rcrl
add
and
add
or
popa
mov
mov
xchg
cli
adc
add
jl
stos
jl
fstl
dec
enter
push
xor
jg
lret
call
test
pop
adc
sbb
scas
and
lds
xchg
add
insl
into
lock
sbb
dec
clc
fdivs
and
pop
mov
test
inc
lea
mov
adc
add
lret
fcoms
cmp
aas
fsubrl
and
xor
mov
add
xchg
or
add
mov
jne
mov
idivl
jno
loop
jmp
add
and
mov
sbb
cltd
cltd
aas
xchg
jg
inc
inc
jnp
xor
mov
jl
mov
jae
add
imul
test
jle
push
xor
mov
dec
lods
sahf
jb
add
add
xchg
aam
dec
jge
jmp
sahf
mov
xor
adc
movb
or
arpl
jl
cmp
inc
add
in
inc
add
gs
int3
mov
mov
push
push
imul
jae
scas
adc
insb
test
inc
add
xor
nop
xor
rolb
jmp
add
pop
popl
popa
fisubrl
stc
dec
insb
adc
add
mov
pop
outsl
jp
adc
scas
jbe
stos
sub
sbb
mov
mov
jb
add
andl
xchg
inc
fmull
cmp
jp
hlt
pop
cmp
movb
add
add
stos
fnstcw
cld
je
jns
push
out
mov
cli
stc
fcmovnu
loop
push
push
aas
roll
push
mov
cmp
add
cmp
jmp
add
and
add
mov
add
xchg
test
addb
into
imul
push
popf
or
fisttpll
jecxz
inc
add
ja
xchg
mov
pop
sbb
and
adc
mov
pop
lahf
lret
sar
sbb
clc
and
inc
add
inc
add
in
inc
aaa
ljmp
xchg
sub
movb
push
push
leave
test
sub
imul
rorl
xor
add
add
add
pop
and
in
insl
ja
loope
adc
jg
mov
cwtl
and
stos
lret
pop
mov
gs
jge
popa
iret
lret
push
imul
rolb
or
sahf
jo
pop
call
icebp
inc
and
mov
test
sbb
addr16
movb
out
shrl
pushf
mov
mov
dec
or
xor
mov
movsl
xor
xor
xor
in
add
push
fistl
test
pop
push
lret
imul
addb
inc
xchg
iret
ljmp
add
mov
xchg
fcoms
or
scas
dec
jge
add
push
mov
or
xchg
jl
add
inc
add
gs
gs
orl
pop
jecxz
js
mov
shl
mov
aaa
push
mov
pop
push
cltd
out
xor
dec
aam
fisubl
xor
cmc
or
mov
xchg
ljmp
aam
inc
add
add
insl
pop
cs
lea
cli
int3
pop
adc
inc
add
mov
jb
and
push
into
shl
imul
icebp
jge
pop
sub
dec
addb
pop
cwtl
jno
enter
xchg
out
rol
inc
add
mulb
and
lcall
and
add
mov
or
jle
call
dec
adc
movb
add
push
ds
call
shlb
es
sub
cmc
fidivrl
jo
rolb
cltd
dec
pop
ficompl
dec
int
and
gs
mov
movsl
loope,pn
pushf
and
lds
repnz
add
ret
testl
fildl
cmp
or
xchg
fwait
ss
stos
scas
loop
add
cmp
mov
xchg
dec
addb
xchg
or
add
sti
out
test
jno
jmp
xor
push
addb
scas
mov
inc
stos
loop
imul
in
xchg
addb
lods
inc
dec
clc
addl
jmp
xchg
sar
push
out
dec
call
out
orl
sub
xchg
dec
js
sar
leave
mov
outsl
mov
loop
sub
les
inc
add
pop
jge
popf
mulb
add
add
lods
mov
inc
daa
rcrb
data16
jnp
movsl
out
mov
and
adc
add
push
testb
clc
cmp
jns
jp
fstps
sbb
lods
es
out
push
ds
aam
add
cmp
mov
adc
mov
repnz
xchg
cli
mov
mov
in
xchg
sahf
jbe
in
gs
out
hlt
test
add
jle
dec
pop
push
popa
inc
add
jp
out
fsubrp
setbe
xchg
popa
cmp
repnz
rorb
and
out
cmpsb
insl
addb
call
push
push
clc
mov
lods
sbb
jecxz
sbb
ret
mov
in
pop
add
test
ret
jg
add
add
add
xchg
test
into
xorl
add
gs
xchg
test
push
sti
sar
xchg
jae
push
xor
leave
mov
ret
pop
fnstcw
add
mov
dec
or
lock
lea
mov
outsl
mov
jne
add
lds
push
neg
lods
xchg
lret
add
fwait
or
jae
add
ja
adc
fisttps
sahf
jne
dec
sbb
fsubr
test
mov
inc
add
stos
test
movsb
or
cmpsl
cmp
daa
ret
mov
sbb
jns
bound
push
xor
add
cltd
hlt
cmp
mov
dec
mov
pushf
data16
xchg
xchg
pop
xor
xlat
mov
adc
in
mov
in
pop
dec
jno
jge
ficomps
shll
push
ret
lock
xor
ds
lcall
adc
add
sti
xlat
sahf
in
push
add
out
lcall
mov
or
je
fwait
stc
addb
jns
in
ret
out
add
lcall
jle
lea
xchg
or
jp
fs
sbb
out
adc
testb
xor
fbld
mov
imul
scas
and
mov
mov
or
clc
mov
rcll
add
lea
cmp
mov
mov
mov
leave
push
push
add
push
sub
sbb
inc
sub
outsl
xor
inc
mov
arpl
or
addb
mov
push
fildll
mov
bound
filds
ret
xor
dec
mov
xor
sub
inc
mov
dec
push
mov
lcall
push
add
popa
cltd
sub
cli
pop
dec
call
mov
fldt
mov
add
in
scas
adc
add
sarb
adc
mov
or
add
add
mov
test
stos
loope
sbb
mov
add
ret
pop
cmc
enter
outsl
xchg
sub
clc
sub
cmp
push
enter
icebp
cmpsb
pushf
rolb
lahf
mov
stc
pop
in
mov
jne
clc
add
test
inc
sub
jp
sahf
imull
xchg
sub
jbe
popf
inc
add
test
add
sbb
cmpsb
inc
sub
and
mov
imul
jns
lcall
mov
movsb
imul
daa
cltd
pop
cltd
cmpsb
mov
mov
xchg
addr16
aas
call
pushf
dec
cld
movb
pcmpgtw
in
xor
pusha
add
pop
add
sub
pop
push
sbb
xor
jo
adc
add
mov
cld
jge
sub
mov
ja
ljmp
jnp
and
or
xchg
push
adc
cmp
sahf
lods
adc
xchg
mov
loopne
pop
jmp
inc
mov
or
addr16
jb
enter
xor
jno
or
daa
mov
mov
in
push
add
add
jl
mulb
lds
repnz
lds
jle
fistpl
xchg
lretw
dec
outsb
addl
fnstenv
and
and
adc
pop
mov
leave
repz
mov
pop
and
xor
out
out
sti
dec
xlat
xchg
mov
xchg
jp
dec
adc
fbstp
in
ret
jp
add
shlb
or
out
push
scas
sbb
lret
aas
mov
sbb
inc
scas
jle
mov
fidivrs
cmp
nop
addr16
jge
inc
add
jnp
jno
icebp
inc
pusha
add
cld
mov
add
sub
sbb
add
fwait
pusha
add
mov
in
mov
add
xorl
jle
dec
or
mov
xchg
setae
and
inc
mov
cmp
add
testb
pop
jb
jbe
mov
stos
test
loop
mov
jp
mov
sub
test
mov
add
add
add
xchg
clc
popf
std
movb
iret
repz
aaa
addl
lods
fldt
push
test
pusha
add
cmp
cmp
andl
inc
loope
sbb
fsubl
pop
pop
imul
sarb
pop
jae
add
icebp
mov
and
dec
leave
ret
cld
pop
lcall
lock
inc
add
nop
rcll
pop
lea
ds
mov
xchg
mov
out
int3
cmc
mov
rcr
sub
pushf
lret
mov
pop
ret
xchg
sbb
lret
arpl
inc
add
movsl
loope
imul
lock
inc
push
mov
add
push
and
fcmovb
add
fadd
loop
sbb
mov
ljmp
mov
mov
cmpsl
sti
outsb
repz
out
ret
fisubrl
sub
cmp
cmc
je
add
jbe
push
inc
and
or
fwait
jmp
loopne
add
ss
adc
call
add
mov
fadd
add
stos
ja
imul
lods
dec
push
xchg
popl
add
iret
or
sub
mov
aad
and
popf
mov
pushf
mov
xor
js
sub
cmp
mov
add
push
push
dec
xchg
cmp
out
out
inc
add
jmp
adc
cmp
sub
mov
into
jnp
scas
movb
lret
pop
shlb
aad
addb
and
inc
xchg
jnp
fidivrs
test
addr16
iret
jge
adc
adc
es
push
cmpsl
pop
inc
add
cmp
stos
dec
xchg
xchg
jg
xor
add
in
pop
fisubrl
jmp
aad
jae
ret
mov
adc
mov
out
cmp
out
jp
pop
add
movb
add
inc
xchg
addb
add
imul
mov
inc
adc
adc
or
sub
add
je
pop
lea
packuswb
add
mov
add
pop
sti
fs
ljmp
adc
addb
and
mov
out
push
add
pop
fcmovbe
and
inc
add
scas
push
pop
addb
sbb
mov
add
dec
mov
push
jo
cmpsb
xchg
inc
stos
stc
stos
mov
enter
out
rcr
add
xor
out
jo
xchg
and
orl
push
lock
outsb
ror
jnp
pop
mov
fcoml
icebp
cmp
mov
mov
lcall
add
inc
sub
adc
inc
add
dec
sarb
mov
jge
mov
popa
mov
jl
and
add
iret
jmp
inc
dec
daa
outsb
sbb
add
aad
test
or
fstpt
jg
fxtract
or
sub
or
es
push
cmp
bound
mov
rcr
mov
call
mov
add
xor
add
inc
push
push
add
outsl
int3
jmp
inc
lods
inc
add
inc
add
sub
jg
enter
mov
cmc
loopne
icebp
in
lcall
addb
cmp
mov
arpl
cmp
repz
mov
mov
or
sti
out
mov
in
mov
add
inc
add
data16
cli
jnp
jle
ljmp
dec
arpl
in
add
out
lds
or
jae
jno
jne
and
add
out
inc
add
lcall
push
arpl
popa
dec
ja
mov
movl
movsl
scas
add
insl
out
test
push
pushf
dec
into
xlat
movsl
mov
jp
ss
pushf
pop
mov
add
sti
mov
loopne
scas
movb
jb
adc
arpl
stos
icebp
mov
movb
int
and
sbb
ret
and
xor
sbb
test
sbbl
sbb
sar
xor
ret
add
outsb
rcrl
fwait
xor
out
ss
cmpsl
mov
ljmp
iret
push
sbb
jae
aaa
dec
and
adc
nop
add
xor
lock
arpl
test
ret
mov
add
addr16
inc
add
in
inc
add
sub
aad
cmp
popf
push
cmp
push
addb
out
js
jb
xchg
xchg
aaa
adc
movsb
hlt
pop
daa
out
add
pop
lock
movsb
pop
int3
daa
xchg
pop
pop
data16
cmp
pmuludq
cwtl
jle
fidivrl
lcall
mov
insb
mov
int
popf
cld
cmpsb
push
repnz
pop
popa
inc
lret
pop
inc
xor
roll
imul
pop
or
add
addb
mov
aad
push
pop
sbb
aas
jle
jl
test
and
adc
jmp
pop
das
loope
ret
inc
mov
mov
inc
data16
decl
jge
fisubrs
xchg
lea
pop
in
mov
mov
outsl
adc
add
add
jg
dec
jle
add
call
mov
sahf
dec
je
adc
jge
cs
les
and
jns
jns
pop
addr16
jp
add
or
out
out
pop
rcr
addr16
rcl
sbb
dec
pop
mov
imul
js
xor
repnz
mov
arpl
int3
mov
xor
lods
arpl
les
ljmp
sbb
jns
scas
outsb
sub
cmp
cmp
lds
add
mov
out
popf
mov
add
push
enter
mov
repz
inc
jmp
rcrb
mov
test
into
fnstcw
faddl
sarl
jmp
loop
outsb
mov
add
pop
dec
pop
loope
sbb
jmp
sub
add
loopne
add
inc
and
in
incl
add
add
jecxz
pop
mov
xchg
add
ljmp
pop
xchg
icebp
dec
cwtl
mov
cmpsb
out
out
rolb
xchg
dec
jmp
faddl
sbb
push
loop
dec
mov
sub
mov
xor
sahf
mov
call
mov
dec
adc
sarb
inc
add
test
pop
xchg
addb
add
sbb
push
in
lret
icebp
in
pop
push
ret
negb
cmp
pop
sub
push
sti
push
jae
add
enter
add
mov
out
pop
mov
jg
fxch
sub
sub
aas
jbe
jl
mov
pop
sub
mov
add
add
sub
add
out
cltd
push
adc
mov
ja
in
popa
adc
fs
or
mov
movsb
loopne
ss
dec
push
fiaddl
add
or
movsl
sbb
dec
das
cmp
outsl
imul
js
ljmp
repnz
xchg
mov
mov
xchg
jmp
jle
popf
aaa
mov
std
mov
jnp
js
xor
sbb
aas
in
mov
test
mov
outsb
in
test
roll
int
and
pop
mov
cmp
add
add
int3
repnz
inc
xor
mov
movsl
lahf
add
iret
out
pop
mov
in
mov
mov
mov
into
cmpsb
popf
jno
push
movsl
xchg
dec
leave
cltd
outsb
cmc
iret
leave
xchg
mov
mov
sbb
ffree
cmp
ja
cmpsb
pop
xchg
push
out
mov
pop
shl
pusha
add
cld
cltd
fcoml
shlb
add
mov
out
cmpsb
pop
and
lahf
mov
dec
mov
jno
push
insl
inc
add
outsl
movsl
mov
mov
jbe
cmc
xor
xor
hlt
jle
and
ljmp
stos
out
jnp
push
scas
fs
inc
add
bound
push
mov
pop
je
inc
add
adc
add
test
or
xchg
or
cmc
dec
push
cmp
imul
xorl
addr16
mov
xchg
pop
lods
ds
add
dec
cmp
addr16
mov
inc
mov
adc
enter
xor
rolb
aas
imul
push
xchg
lret
mov
add
xchg
ds
mov
xchg
inc
add
data16
fsub
ja
xchg
iret
mov
int3
mov
int
dec
pop
jbe
les
imulb
adc
jp
pop
lahf
in
mov
lret
dec
xor
ss
pop
aas
sbb
dec
mov
xchg
adc
pop
adc
adc
mov
jnp
inc
push
bound
add
outsl
pop
dec
adc
ds
xchg
xchg
jp
xor
rcrb
add
add
cmp
sahf
movb
nop
loop
outsb
inc
std
sahf
inc
add
sbb
cmp
movb
adc
push
or
pop
sbb
mov
mov
xchg
ss
cwtl
ficomps
jno
jmp
testb
test
movb
mov
sbb
sub
inc
add
movsb
test
mov
dec
test
js
or
out
lock
mov
cld
adc
and
add
pop
imull
and
mov
mov
xchg
xor
fisttps
int3
pop
popf
xchg
aaa
mov
dec
adc
fisttps
rorl
jnp
in
pop
stos
icebp
mov
push
mov
ficoms
push
xchg
fiaddl
xchg
pop
imul
cmp
outsb
iret
cmpsl
in
cmp
or
sbb
mov
sbb
adc
test
lods
sub
cld
jno
dec
sub
push
add
mov
sbb
mov
push
pop
mov
add
int3
addb
mov
insb
addb
cmpsb
xorl
negb
jb
lret
popf
les
push
add
and
cmpsb
xchg
adc
jle
jno
adc
enter
pop
aad
push
inc
add
add
sub
xchg
movsl
lea
js
jnp
add
inc
jo
mov
pop
mov
scas
scas
mov
sahf
pop
testl
add
add
push
or
or
fsubs
notb
sbb
add
lret
jecxz
and
or
sbb
mov
jo
ret
lds
adc
dec
xchg
sbb
mov
insb
push
dec
aaa
mov
add
add
push
stc
flds
mov
or
mov
mov
pop
cmpsb
adc
sbb
add
pop
out
or
add
jbe
lds
loope
cltd
xlat
cmp
add
pop
xchg
xchg
ljmp
add
adc
jbe
inc
push
xchg
jae
scas
dec
jbe
repz
cwtl
push
pop
sahf
lret
aam
mov
adc
imul
sub
push
mov
cmpsl
in
repz
push
mov
fidivl
sbb
fsub
jno
pop
lret
add
and
testl
mov
and
pand
jb
jb
cmp
inc
cmp
mov
pushf
lods
mov
pop
mov
out
popf
mov
or
xor
arpl
xor
dec
jns
ret
push
pop
mov
add
and
aam
inc
inc
add
mov
add
dec
mov
dec
int3
lods
lods
stos
push
add
or
jmp
pop
iret
in
mov
mov
xor
push
dec
mov
sahf
mov
into
mov
mov
mov
push
add
sub
mov
xchg
push
push
jl
stc
xchg
int
push
movb
mov
shll
push
add
ds
mov
pushw
std
addr16
gs
repz
add
imul
and
sahf
cmpsl
mov
mov
lret
mov
adc
scas
dec
out
inc
add
add
test
pop
int3
xchg
push
or
push
hlt
fcoms
jb
add
push
scas
adc
movsl
dec
xchg
lods
or
push
add
sbb
xor
movsb
mov
out
sub
lret
popa
dec
mov
add
add
aad
rcll
mov
adc
add
mov
aaa
push
fbstp
inc
add
into
pop
xchg
repz
add
aas
das
mull
sub
mov
pop
pop
cli
stc
mov
test
fsubl
and
in
fs
cmc
fdivrl
mov
test
jnp
push
rcll
sbb
jp
or
divb
mov
mov
push
popf
jnp
jns
add
push
add
lcall
cmp
in
mov
sahf
jmp
or
and
das
nop
jecxz
add
repz
imul
jl
push
sub
popa
xchg
es
imul
cld
push
push
xor
pop
jmp
fdivs
insl
sub
lods
push
cld
push
int
add
pop
out
add
fbstp
es
loopne
add
xchg
in
into
dec
sbb
dec
rolb
add
daa
addb
pop
cmp
jne
adc
jmp
sti
addb
call
pop
push
data16
mov
je
jns
cld
in
mov
dec
fdivrl
nop
mov
je
add
jp
lcall
dec
mov
pop
sbb
nop
sub
es
add
sub
idivb
jb
push
cmp
pop
or
cmp
xchg
xlat
rolb
jmp
aam
mov
adc
hlt
xchg
mov
inc
popa
andl
xor
sbb
movl
cmp
das
inc
add
cwtl
shrl
sub
mov
push
sbb
mov
out
sbb
popf
mov
rolb
inc
or
mov
jns
jo
lods
jg
mov
into
jnp
sbb
jmp
jl
cmc
gs
loopne
and
nop
stos
dec
addb
enter
int3
arpl
xor
cmp
adc
xor
mov
pop
push
mov
xor
pop
iret
int3
in
pop
dec
pop
dec
ss
in
cmp
inc
add
loope
mov
call
add
out
inc
mov
and
js
ljmp
addr16
popa
mov
inc
jle
inc
add
inc
sub
stos
mulb
std
aad
js
sbb
pop
push
and
cmp
cmp
jae
ljmp
add
adc
push
mov
aas
mov
jns,pt
push
cli
fbstp
int3
sub
jbe
fiadds
lret
fistpll
rolb
sbb
xchg
call
jae
rorb
pushf
hlt
shlb
add
push
add
popa
and
out
add
aaa
push
or
sarb
sbb
mov
fsubl
push
cmp
movsb
in
nop
aaa
jmp
cmpsb
mov
add
cld
jmp
add
out
int3
cmp
fidivrs
push
sbb
in
sbb
add
test
in
mov
clc
je
add
leave
in
sti
cmp
mov
add
mov
mov
rorb
jb
mov
lods
loop
in
mov
mov
push
ret
add
insl
push
inc
add
jbe
mov
insb
cmp
cs
mov
mov
daa
std
cld
push
lcall
jl
sbb
ret
mov
xchg
pcmpeqb
into
pop
ja
outsl
xchg
les
mov
push
jp
test
pop
add
enter
add
and
sti
cli
adc
jbe
idiv
bound
clc
popf
out
lret
pop
cli
repnz
int3
daa
lods
push
jg
xor
sbb
daa
hlt
dec
pop
sub
sub
mov
mov
inc
cld
loope
lock
repnz
popa
mov
in
outsl
in
dec
push
fsubl
add
incb
add
jp
cmp
jnp
add
dec
add
fdivrl
movl
stos
popf
pop
pop
dec
or
push
jns
pop
jo
add
loop
add
cmpsl
jbe
out
pop
shl
das
arpl
cmp
add
movsb
das
out
loop
fnstsw
addb
addb
sbb
push
jne
adc
mov
add
pop
out
push
push
sbb
push
loope
mov
push
fildll
mov
add
clc
jo
mov
mov
add
nop
mov
dec
adc
jne
imul
jge
add
push
pop
jbe
xchg
shl
mov
aam
dec
rcrl
pop
xor
sbb
mov
add
in
jno
into
movb
repz
nop
pop
loopne
sbbl
lods
dec
sub
inc
add
add
out
xchg
sub
and
mov
movsb
in
jp
push
lcall
or
lret
push
loopne
jne
stos
lods
push
xor
pop
xlat
cmpsb
jge
es
cmp
mov
jnp
mov
jno
push
push
dec
dec
mov
js
mov
out
mov
mov
clc
adc
pop
pop
push
js
inc
mov
jecxz
movnti
and
shlb
dec
fcompl
ja
ret
push
sub
fistpll
add
lahf
ret
aas
ret
repnz
sti
dec
es
cltd
mov
aaa
mov
mov
mov
aam
add
outsb
push
test
mov
dec
xchg
das
iret
lcall
add
call
jns
xchg
jge
cmp
push
jp
sbbl
adc
insb
faddp
add
jmp
sbb
add
adc
ficompl
pop
adc
fwait
imul
pop
lods
aaa
prefetch
rolb
add
adcl
push
arpl
fs
rcl
test
vmread
xlat
dec
aad
inc
sbb
jae
mov
xlat
mov
adc
ret
cmp
pop
and
imul
negl
rorb
xchg
psrlw
loop
dec
sub
jbe
xchg
rcrb
hlt
stos
testb
sub
cltd
enter
jmp
scas
fistpl
add
mov
inc
fsts
pop
push
addb
bound
imulb
stos
aaa
jne
sub
imul
and
mov
aad
into
in
cmp
enter
cmp
jb
inc
imul
or
addb
cmp
add
and
add
cs
test
inc
add
out
sbb
xor
icebp
cmpsb
xchg
arpl
sub
outsb
and
repnz
loop
out
mov
add
add
test
aas
pop
outsl
mov
jns
out
test
in
add
or
roll
enter
imul
push
into
jecxz
test
aam
fsubr
addl
mov
out
mov
pop
jbe
and
xchg
and
outsb
lcall
sbb
push
fwait
cltd
and
add
mov
sbb
add
scas
dec
pop
idiv
ss
cmp
in
mov
adc
add
insl
test
add
stos
jge
aad
pushw
add
cmp
mov
xchg
movsb
int3
push
aaa
pop
popa
mov
movsb
cmp
pop
les
fdivr
cmp
and
lock
cld
outsb
jmp
enter
outsb
push
push
mov
mov
xchg
sbb
sbb
lret
in
lds
jns
int
mov
adc
xchg
cmp
add
xor
nop
push
mov
aas
cltd
aad
addb
dec
loopne
nop
inc
add
int3
jno
sub
inc
jae
fwait
sub
gs
scas
sbb
pop
jmp
dec
xchg
mov
mov
iret
jne
imul
loop
xchg
mov
pushf
shll
mov
pop
jno
push
pop
pop
jmp
mov
loopne
sarb
iret
or
jge
into
push
mov
ja
out
nop
jle
nop
daa
sub
mov
test
mov
xor
xchg
movsb
mov
std
mov
int
add
stos
fs
xchg
fs
push
and
pop
mov
xor
cmp
add
and
dec
les
mov
xchg
flds
rolb
jle
rolb
dec
cli
fs
aad
add
adc
add
add
je
jl
push
sub
and
xor
add
push
push
or
rolb
bound
out
fnsave
push
or
mov
jmp
adc
inc
add
pusha
add
adc
les
xchg
mov
add
decb
and
xor
aam
out
movsb
cmp
test
movb
loop
leave
inc
push
and
fdivs
fistl
adc
out
sarl
mov
or
sub
pop
movsl
fs
sub
push
loopne
lock
imul
bound
nop
pop
movsb
mov
ljmp
jp
jmp
imull
pop
in
add
xor
movsb
and
arpl
lret
sarl
pop
sbb
xor
repz
xchg
fcoms
cltd
in
lea
push
test
aaa
adc
pop
lods
mov
mov
xchg
dec
inc
add
or
testb
dec
sbb
ja
in
add
ret
sbb
mov
jb
ds
mov
lea
mov
or
in
mov
shrb
add
out
add
add
push
add
sbb
add
dec
lods
mov
ret
clc
push
leave
dec
fcoml
movsl
or
lret
push
sbb
stos
mov
cmp
movsb
dec
inc
xor
je
sbb
in
push
push
add
sub
fldl2t
cld
in
fidivrl
int3
mov
lahf
fdivrl
test
jg
add
xor
cmpsl
mov
lds
js
pop
fs
push
cwtl
addb
out
add
iret
xchg
jae
lds
sub
call
add
push
xlat
cmc
and
inc
push
daa
pushf
mov
pop
push
jnp
xor
add
cmp
add
and
dec
int3
xchg
lea
pop
addb
mov
push
push
mul
jns
sbb
aaa
stc
inc
add
xchg
mov
js
xchg
addb
push
dec
leave
jne
add
add
