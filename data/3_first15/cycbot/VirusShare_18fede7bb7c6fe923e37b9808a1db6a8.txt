inc
add
iret
aad
ret
pop
xchg
mov
sbb
jle
lds
addb
xchg
inc
add
add
mov
out
es
jns
xor
pusha
add
jl
pop
mov
jecxz
cli
mov
cmp
int3
pop
repz
mov
out
test
pop
sbb
data16
xchg
lahf
iret
mov
mov
bound
mov
jg
inc
push
dec
push
mov
pusha
add
repnz
jnp
fildl
in
sbb
xorl
std
scas
inc
clc
pop
dec
lret
dec
call
dec
inc
cltd
andl
lcall
push
add
sahf
xchg
lret
stos
out
dec
fidivl
push
mov
jno
sbb
and
add
xor
hlt
xchg
inc
test
adc
xchg
cltd
xor
mov
or
enter
hlt
sub
je
jecxz
lret
lock
mov
sub
lods
cmp
xchg
aad
hlt
iret
xchg
add
add
or
cld
or
sbb
daa
xchg
add
popa
adc
mov
ljmp
addl
add
mov
addb
add
movb
or
inc
dec
xchg
and
add
pop
add
addb
xchg
inc
add
add
stos
fcmovnu
mov
and
and
fs
jb
leave
lret
cmp
add
pusha
add
mov
push
leave
xor
jl
add
add
loop
insb
lds
add
fsubrl
jne
rorl
movsb
lret
es
pop
fnstenv
jbe
int3
add
mov
in
lds
inc
loopne
mov
mov
add
jae
push
lock
mov
mov
daa
out
xor
jb
pop
mov
add
adc
mov
sub
dec
in
xor
cmp
inc
pop
pop
push
push
arpl
popa
repz
test
xchg
jmp
ret
pop
mov
test
sahf
lds
jns
sahf
imul
popa
mov
cli
fildl
ret
shll
fcoml
mov
cmp
popf
jmp
test
enter
daa
hlt
xor
jge
cmpsl
outsb
or
add
cmp
add
int
inc
jecxz
jne
and
add
and
roll
sub
mov
mov
xor
sbb
dec
movsb
mov
xchg
mov
push
leave
fdivs
push
xchg
icebp
inc
mov
test
jg
sbb
jbe
sub
jp
jle
mov
outsl
jl
rorl
aaa
repnz
rcrb
ds
daa
jnp
lock
call
or
iret
aaa
jge
push
inc
xchg
mov
sbb
mov
outsb
xor
mov
test
cmp
inc
xchg
lds
jb
sbb
push
jp
lods
xchg
imul
in
lret
push
lret
imul
outsl
pop
lahf
xor
mov
mov
and
cwtl
ljmp
test
lods
cwtl
pop
mov
pop
test
add
testl
call
jns
or
sbb
fisttpll
sbb
test
add
add
inc
pusha
add
cmp
and
jne
sub
loop
add
test
pop
popf
mov
stos
rcl
stos
sbb
push
or
shlb
outsb
rcl
sbb
fwait
cmp
pcmpeqb
rclb
push
imul
add
test
jo
outsl
test
cmpsl
add
dec
inc
add
nop
out
outsb
dec
jle
fsubs
add
xchg
inc
addb
sub
lds
mov
sahf
xlat
mov
in
fistps
stos
popf
clc
fiadds
dec
and
repz
add
add
xor
pop
mov
jbe
ss
movb
mov
ljmp
and
jno
insl
lcall
lahf
xor
aaa
aad
mov
andl
outsl
dec
ljmp
fsubp
ret
sti
cwtl
in
cmp
push
scas
push
loop
mov
mov
test
icebp
sbb
ja
ret
jg
adc
xchg
jle
sbb
das
push
lods
inc
add
cmp
addr16
insb
aaa
dec
add
pop
xchg
mov
push
inc
sbb
mov
jl
pop
xchg
adc
add
aaa
push
inc
mov
add
and
add
pop
out
sar
test
out
push
scas
lds
mov
cmp
inc
add
test
inc
mov
aaa
jns
lods
int
dec
xchg
lds
xchg
mov
add
sbb
pop
std
xor
xchg
pop
sbb
mov
and
mov
stos
out
mov
call
adc
and
pop
cmp
fidivs
jne
loop
shl
jl
sub
pop
lock
nop
cmp
push
in
dec
add
xor
dec
loope
mov
test
lds
cmp
pop
jl
push
mov
popf
pop
cmc
popa
jge
dec
fisttpl
fidivrl
into
xor
mov
js
sar
add
push
add
mov
mov
outsb
loopne
push
inc
pop
call
push
out
loopne
dec
test
mov
mov
mov
roll
testb
bound
jp
add
add
jp
xchg
test
jbe
movsl
add
jecxz
push
adc
xchg
das
inc
stos
movb
pop
ficompl
pop
popf
mov
outsb
push
stos
cmp
cmpsl
fwait
idivl
add
mov
lret
iret
xor
add
das
xchg
add
out
add
xchg
fbstp
mov
dec
sub
pop
sbb
add
jecxz
xor
cmp
push
cs
vpmaddwd
cld
sbb
mov
or
add
lahf
xchg
cmp
mov
dec
test
cs
out
push
rolb
xchg
push
push
out
addr16
jp
sub
inc
pop
ja
cld
pusha
add
mull
iret
test
lret
inc
pop
dec
cmp
cmp
xchg
add
pop
fisubrl
test
mov
aad
xlat
mov
in
and
loope
daa
lods
xlat
mov
test
loopne
dec
xlat
popaw
sbb
adc
idivb
add
sbb
ja
cmp
lods
cmp
lcall
mov
add
add
mov
nop
icebp
jb
pop
jnp
or
leave
adc
sub
in
and
xor
push
mov
mov
dec
stos
jae
inc
jecxz
pop
aas
xlat
sbb
ja
mov
int
lcall
adc
mov
mov
popf
bound
sbb
sbb
jae
add
sahf
lret
jno
out
nop
dec
or
jnp
inc
push
add
jbe
scas
xchg
fdiv
adc
pop
cwtl
push
lahf
xchg
jae
sub
mov
leave
adc
int
xchg
jno
push
psraw
stos
and
arpl
sub
bound
fidivl
pop
xor
lods
add
or
fucomp
sbb
add
scas
push
xchg
stc
or
sbb
add
or
call
mov
mov
flds
add
pop
pop
jmp
cs
add
mov
add
sub
add
dec
dec
push
pop
clc
test
or
aaa
cltd
mov
push
cmpsb
je
mov
int
data16
addl
add
lods
dec
push
adc
pop
lahf
pop
pushf
and
ljmp
push
push
mov
in
or
jecxz
jp
mov
jg
fcomps
mov
faddl
mov
sub
rcl
xor
mov
inc
add
push
add
or
pop
movsb
and
fwait
push
out
inc
mov
add
mov
adc
xchg
ret
jle
rcl
xchg
mov
jno
out
push
dec
clc
clc
mov
mov
or
jge
add
popf
dec
mov
mov
mov
dec
jl
imul
jns
test
xor
cwtl
call
movsl
movsl
mov
jl
push
xchg
pop
bnd
outsb
push
rolb
mov
mov
std
and
mov
dec
add
xchg
aam
je
pop
sbb
pop
xor
pusha
add
add
fistpll
and
sub
aad
push
add
cmp
xor
insl
inc
add
pop
sbb
cld
jg
push
add
inc
add
pop
sarl
jl
movsl
push
jp
stos
inc
add
js
rolb
mov
jae
out
mov
ja
add
xchg
dec
cmp
sbb
dec
insl
push
test
dec
sbb
pusha
add
sbb
pop
inc
testl
add
pop
and
ds
mov
pop
les
sub
add
dec
mov
js
sarl
pop
mov
imul
mov
add
sahf
ljmp
mov
cmp
push
pop
sahf
shrb
cltd
jl
xchg
sbb
loope
dec
jae
repnz
cmp
pop
mov
adc
pop
ljmp
add
mov
pop
pop
mov
jne
add
mov
add
enter
sbb
lock
sbb
and
test
lret
jo
js
pop
push
adc
in
loopne
sbb
pop
push
ds
fldenv
mul
mov
fsubs
sti
lock
jbe
jp
add
xchg
test
add
add
imul
aad
mov
scas
lret
jmp
daa
ret
mov
cld
adc
lea
in
mov
dec
add
and
stc
je
jno
add
bound
cmp
int3
pop
and
cmp
add
mov
out
scas
mov
imul
aaa
jnp
mov
push
or
scas
movsb
or
add
mov
mov
add
inc
add
mov
mov
add
leave
inc
xchg
push
add
movsb
js
rcll
adc
loop
pop
pop
xor
cmp
push
addb
pusha
add
outsb
out
add
mov
insl
mov
mov
addb
or
adc
pop
xor
sbb
sub
mov
daa
dec
sub
inc
lods
xchg
ret
pop
pop
mov
dec
stc
jb
push
sbb
mov
cmp
sub
sub
and
leave
lea
pop
push
repnz
lds
enter
lods
leave
sbb
cld
push
pop
call
inc
add
or
mov
inc
add
mov
aam
mov
xchg
push
mov
lods
mov
sbb
aad
subl
adc
push
or
aas
out
mov
hlt
test
addb
pop
popa
sbb
jle
add
outsl
imul
jge
add
divl
jmp
add
ret
shr
imul
xchg
outsb
xchg
ja
dec
and
adc
out
cltd
mov
xchg
push
inc
bnd
enter
cld
lahf
dec
scas
fwait
imul
push
lret
add
adc
arpl
jno
mov
shrw
iret
outsb
les
cmp
leave
xor
loope
inc
add
jp
mov
sbb
je
lea
pop
mov
push
pop
movsl
mov
divb
outsl
add
lret
inc
out
je
add
sti
sarb
mov
repz
sahf
and
js
out
mov
in
xchg
push
add
sbb
inc
add
sahf
test
push
sub
arpl
lds
jbe
stos
jno
shrb
add
loopne
jp
cltd
divb
dec
inc
mov
mov
in
movsb
add
add
cld
push
push
push
push
push
push
push
push
cld
call
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
es
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
or
lock
lea
sub
xacquire
pop
add
ss
cs
push
push
lret
jmp
add
add
adc
add
push
jne
and
mov
lds
dec
inc
add
push
push
cwtl
jle
push
outsl
push
inc
add
test
lret
mov
outsl
and
js
ljmp
add
das
je
or
sbb
and
adc
pop
je
push
scas
push
dec
cli
cld
fists
cmp
add
sbb
movsl
jne
insl
push
add
ja
lret
add
lret
mov
xor
scas
lods
sub
push
add
push
jo
cltd
repz
dec
fildl
pop
int3
cmpsb
dec
xchg
mov
lea
scas
xor
jg
js
mov
xchg
lock
or
mov
pop
lods
add
mov
ja
rorl
xor
or
adc
pop
testb
movsb
lock
inc
adc
and
daa
lods
cmp
mov
lock
pop
cli
std
and
out
in
inc
xchg
rcl
add
cmpsl
leave
pop
cli
lods
jns
dec
jmp
add
scas
cltd
mov
ja
mov
add
adc
jge
movsl
mov
add
cwtl
aaa
fstpt
ret
add
inc
add
addb
pop
push
add
pop
inc
add
and
pop
movsl
pushf
js
fdivrl
cli
jbe
inc
add
outsl
mov
js
add
leave
add
es
cmp
xor
addb
cli
sub
add
shrb
rdpmc
mov
popa
aad
mov
sbb
bound
mov
mov
add
xchg
add
imul
add
jle
pop
lcall
std
stos
shrl
addr16
rolb
adcl
mov
aad
popa
loopne
out
loope
daa
sub
arpl
dec
mov
add
stos
pusha
add
mov
mov
xchg
lods
int3
push
mov
popf
sbb
cwtl
push
dec
or
jge
jmp
dec
loopne
mov
leave
cmp
cli
iret
xchg
xchg
lods
push
scas
inc
movb
and
add
cli
or
test
inc
add
dec
mov
jb
and
cmp
out
out
bound
dec
ljmp
push
mov
movsl
pop
sbb
dec
negb
add
mov
repnz
sbb
cmp
xor
sbb
mov
insl
push
aas
adc
pop
push
fistps
add
notb
pop
jp
mov
mov
stos
adc
push
add
test
ds
inc
dec
arpl
push
pop
mov
add
lds
add
ja
add
mov
or
mov
imul
stos
mov
add
mov
mov
push
pop
mov
in
movsl
and
lods
je
sbb
jl
add
aaa
or
test
je
mov
rolb
imul
or
aaa
dec
dec
lods
adc
mov
push
js
movsl
lods
les
xchg
push
xchg
notl
cmp
imul
pop
cmpsl
pop
enter
or
int
xchg
pop
push
sub
sbb
repz
mov
adc
add
hlt
sbb
insb
test
lcall
out
and
scas
jle
mov
outsb
and
cli
dec
dec
cmpsl
xchg
or
jp
mov
cmp
sub
pop
outsb
and
nop
add
neg
jne
cld
cld
sub
add
add
jno
mov
pop
stos
lahf
mov
rep
addl
call
ds
push
cmp
jmp
push
sub
div
jae
stc
cmp
mov
les
sahf
std
sbb
add
add
fucomi
pushf
cmp
ret
jns
push
jb
out
add
cmpsb
push
and
xor
xchg
and
mov
cld
frstor
sti
test
movl
out
repnz
pushf
sub
mov
out
dec
cli
jmp
jg
fcoms
jle
mov
arpl
mov
das
enter
in
cmpl
mov
mov
jbe
xchg
jb
aad
sbb
arpl
xor
cmp
inc
add
outsb
xor
push
push
add
and
cwtl
add
cld
and
mov
inc
add
add
add
in
inc
add
adc
rol
add
lods
out
movsb
movb
js
int3
mov
lods
inc
sub
and
stos
and
in
inc
add
std
pop
imul
cmp
xchg
dec
xor
mov
sub
mov
cs
cmp
rclb
mov
jg
xlat
lcall
shll
or
idiv
cmp
mov
lods
adc
add
push
add
add
jnp
and
push
call
mov
and
cltd
mov
xchg
or
and
cmp
lods
call
pop
sub
addb
pusha
add
inc
jl
imul
dec
and
adc
fistpll
jge
and
pop
pop
rorl
add
lods
push
pushf
adc
data16
cld
sub
mov
adc
adc
lds
mov
sub
mov
xchg
insb
or
mulb
adcl
mov
mov
test
jo
test
fwait
jge
xor
in
imul
or
add
pop
lret
and
jb
and
mov
dec
xchg
rolb
lret
sub
jmp
or
sbb
jne
sub
push
mov
cwtl
xchg
add
mov
mov
clc
mov
out
push
adc
mov
cli
iret
and
shrb
add
fsubl
mov
mov
in
call
add
xor
sbb
xor
add
xor
les
enter
rclb
inc
add
test
sub
cmp
sbb
adc
cld
pushf
add
inc
add
ret
jecxz
dec
mov
xor
lret
lea
mov
fmulp
je
outsl
into
and
lods
push
imulb
mov
push
dec
mov
les
stos
in
pusha
add
inc
icebp
inc
in
movsl
jnp
push
aas
call
incb
fistps
xor
ret
mov
jbe
je
and
mov
push
fnstenv
pop
fcmovnu
mov
mov
sub
daa
pop
pop
add
fwait
mov
push
adc
push
stos
call
cmp
jge
jb
testl
add
orl
lds
movb
stc
cltd
sbb
outsb
addb
jp
out
loope
add
xchg
dec
in
mov
push
movsl
jl
add
sti
xor
dec
xchg
sarb
jns
xor
sub
add
or
xchg
test
mov
je
push
pop
icebp
movb
sbb
and
sub
flds
cmp
imul
hlt
inc
mov
dec
lods
stos
jno
lahf
push
imul
scas
scas
xchg
in
or
push
pushf
out
mov
or
xchg
mov
lret
or
in
inc
lods
mov
jmp
inc
vpsrad
orl
adc
das
mov
jl
dec
aam
cmp
addb
repnz
repz
push
xchg
and
dec
out
sub
cmc
sbb
jg
call
aaa
fldenv
or
jg
stos
xor
jnp
testb
add
insb
and
hlt
xor
pop
dec
sub
sub
lods
sar
sub
cmpsb
cmp
mov
insb
lcall
aad
or
add
mov
xchg
pop
push
adcl
sbb
fs
cmp
lock
push
add
sbb
add
inc
add
cmp
and
orl
ret
pusha
add
add
dec
cmp
pusha
add
push
push
cli
loop
add
jle
cmp
add
pop
cmc
and
xchg
ficomps
test
daa
ffreep
add
xchg
adc
or
and
sbb
movb
mov
insb
decb
clc
mov
addb
lods
and
movb
xor
inc
add
dec
jge,pt
ds
xchg
xchg
dec
lcall
icebp
pop
pop
test
dec
xchg
daa
and
gs
sti
mov
xor
add
rcl
imul
add
adc
jne
jb
xchg
mov
mov
add
push
outsb
or
mov
hlt
xchg
or
add
mov
stc
push
add
call
lret
mov
dec
imul
fs
popf
and
sub
add
mov
xor
xor
dec
int
jge
mov
aad
cld
test
sbb
sbb
push
and
divb
gs
xor
jp
mov
leave
fwait
cmc
cmp
lea
xchg
mov
push
mov
mov
ja
ljmp
clc
xor
loopne
cld
popf
inc
pusha
add
js
push
out
inc
add
dec
mov
xchg
ret
adc
jecxz
sldt
repnz
stos
sub
mov
xor
pop
in
mov
rolb
fsubrs
push
rolb
cmp
cs
outsl
push
inc
add
ds
jne
sti
xchg
repz
add
jle
outsb
scas
in
neg
xchg
fistpl
cld
out
add
add
push
add
add
scas
and
fcmovnbe
sahf
sub
adc
add
mov
or
mov
mov
ret
lcall
stc
ret
cmp
push
imul
add
add
xor
das
push
push
sub
mov
xor
aaa
addb
add
add
daa
dec
idivb
je
pusha
add
mov
add
shll
fists
roll
add
mov
fsubrs
cmp
add
std
jg
sbb
pop
addb
sbb
popf
cmp
add
add
movsl
shrl
les
dec
sbb
sahf
add
pop
jecxz
and
out
test
in
inc
add
sub
and
lahf
sbb
out
cmp
inc
pop
fwait
dec
add
fstpt
stc
jecxz
daa
addb
pop
add
enter
ja
ret
sbb
adc
inc
add
add
lahf
mov
adc
lret
jnp
int
pushf
mov
add
add
adc
out
jmp
xor
test
test
addr16
xchg
sub
add
std
out
popa
negl
fistpll
decl
out
pop
cmc
clc
movsl
outsb
add
cmpl
clc
pop
loopne
add
fnstsw
and
add
rcll
iret
add
rcrl
popf
jne
and
loope
add
loop
lock
or
and
test
or
add
lock
loope
adc
mov
xor
rorb
cmp
lahf
nop
imul
xor
test
add
adc
sbb
test
inc
lods
cwtl
jb
pop
fisubrs
add
adc
nop
out
and
adc
or
xchg
stos
mov
jle
clc
loopne
inc
add
add
mov
mov
add
add
inc
add
xchg
push
mov
leave
adc
imul
clc
movb
dec
cmpsl
sub
jmp
stc
dec
fmull
add
in
test
inc
jb
movb
hlt
lahf
sahf
mov
push
pop
xchg
dec
mov
xchg
sbb
cs
push
popa
lea
pop
or
outsb
xchg
and
adc
jl
ret
inc
add
adc
inc
add
out
es
jp
add
add
add
and
mov
pop
data16
out
sahf
dec
mov
test
inc
dec
and
sti
inc
add
mov
lods
cvttps2pi
adc
sbb
repz
add
sbb
and
mov
mov
dec
add
addb
jg
push
rolb
xor
push
cmp
sub
inc
add
dec
mov
outsl
movsb
sbbl
movsb
or
addr16
mov
inc
add
add
pop
cmp
jecxz
push
push
push
adc
add
jbe
mov
fwait
mov
cmp
xor
lret
enter
inc
pop
sbb
xor
outsl
add
sub
adc
nop
lds
out
dec
clc
jge
add
jae
ja
aad
adc
add
xlat
pop
fwait
dec
mov
inc
add
mov
loop
data16
xor
sahf
sbb
fldenv
imul
sub
enter
cmp
popf
mov
add
inc
outsb
dec
fld1
test
shrl
add
xchg
push
lods
xor
aaa
push
xor
jle
sub
xor
pop
imull
decb
loop
add
xor
enter
mov
inc
add
imul
mov
cli
in
vcvtdq2pd
in
loop
push
out
dec
xchg
je
pop
out
push
add
les
push
sbb
cmc
cs
icebp
xchg
pop
hlt
int
movsb
or
aam
sub
pop
loopne
or
dec
or
add
cmp
jne
add
jle
dec
es
out
add
inc
iret
xor
pop
fstps
test
inc
add
mov
cmp
mov
cld
jb
data16
fcom
push
jl
sahf
jbe
cltd
dec
inc
add
mov
jae
sti
mov
dec
iret
or
ss
pop
or
aam
inc
out
hlt
scas
dec
add
ss
out
popa
push
cmp
adc
or
lods
adc
sbb
inc
add
and
add
shr
xchg
sbb
js
movb
inc
add
shl
mov
xchg
out
mov
mov
lds
adc
test
cmp
mov
int
and
test
cmp
iret
fiaddl
ja
add
fildl
sbb
cwtl
stc
xchg
sub
sti
lds
sbb
les
mov
scas
pop
loop
data16
pop
ss
sbb
mov
and
lds
jp
stos
lods
push
faddl
inc
add
loopne
pop
sbb
inc
add
in
aas
test
pop
ret
push
mov
sub
inc
add
push
sub
pop
xchg
shlb
ja
add
add
idivb
xlat
dec
xlat
cmp
seto
push
xchg
insb
rolb
loopne
sbb
outsb
mov
jle
or
test
in
cmp
fildll
jp
mov
outsb
clc
xchg
push
add
ret
jg
mov
push
add
pushf
cmpsl
aam
sbb
mov
and
mov
cmp
mov
int3
and
sub
popf
rcll
jb
xchg
mov
jle
xor
cmp
add
shll
jmp
data16
repz
arpl
insb
mov
test
nop
cmpsl
iret
aas
fistpll
adc
add
xor
orl
mov
lret
push
cmp
jo
mov
add
dec
mov
imul
cld
inc
add
fsubs
je
icebp
push
cmp
das
xor
jb
addr16
inc
imul
mov
add
jns
fdivp
nop
add
inc
cltd
sti
ja
nop
fbstp
int
rorb
rol
ja
stc
xor
lcall
add
subl
ret
add
scas
mov
cmp
int
add
push
add
mov
sbb
ror
std
stos
movb
jbe
add
jnp
or
scas
add
fwait
push
daa
fwait
push
mov
inc
add
or
fsubs
xchg
jle
xchg
xor
add
fucomip
mov
xor
cs
add
xor
add
and
shlb
movsb
sub
cmc
jnp
sbb
enter
addb
and
jge
add
jl
push
adc
pop
xchg
aad
xor
pop
outsl
sub
ror
mov
aas
stos
sub
mov
outsb
bound
adc
inc
add
repz
push
int
imul
dec
lret
fisttps
jae
cli
jae
mov
sbb
cmc
mov
lods
in
inc
add
divl
dec
cmpsl
add
gs
fscale
dec
addb
ret
cmpl
les
popf
movb
scas
xchg
mov
stc
xchg
mov
inc
add
add
cltd
xchg
insl
imul
sub
shl
ja
xchg
shll
lods
hlt
sub
lods
mov
add
xchg
sti
jl
movb
or
ja
arpl
insl
stos
jl
out
jno
push
dec
call
clc
sub
add
xchg
ret
icebp
rolb
add
add
fadds
pop
cmp
mov
adc
das
cmp
int
test
bound
xor
add
js
add
xor
mov
rclb
inc
pop
fwait
out
jmp
xchg
mov
add
dec
push
jns
lods
and
cs
bound
sub
pop
fbstp
out
in
inc
sbb
xlat
stos
add
hlt
xchg
or
inc
add
mov
aad
lds
add
add
sbb
dec
scas
or
popf
ret
movsb
jmp
repz
call
ljmp
jecxz
out
mov
mov
xchg
lret
lret
inc
add
iret
and
das
nop
lcall
mov
ljmp
and
jnp
out
xor
int3
jecxz
jg
and
pop
pop
int
add
stos
arpl
add
scas
dec
jo
pop
fstps
sub
add
add
jmp
adc
jl
test
add
sahf
xchg
stos
pop
out
addl
mov
xor
add
xor
mov
inc
je
jb
push
jo
sub
mov
je
mov
loope
inc
shlb
mov
xchg
push
lret
push
lcall
xor
xchg
adc
dec
xor
out
fdivs
aaa
fst
ljmp
add
push
stc
gs
arpl
das
dec
jno
jl
add
movb
addb
in
lahf
ja
push
add
push
cltd
mov
clc
inc
add
call
test
stos
pop
shll
arpl
push
in
es
ja
imul
and
sahf
xor
mov
std
pop
subl
pop
es
outsl
mov
sbbl
cltd
aas
std
ljmp
adc
cld
dec
mov
xlat
movl
sub
push
xor
xor
mov
insl
dec
add
add
sbb
in
cmp
push
add
cmpsl
cltd
sub
loopne
movl
nop
push
or
push
scas
sbb
cwtl
xlat
and
add
sub
jp
add
inc
add
add
push
cli
mov
sarb
pop
scas
xlat
sbb
add
mov
sbb
push
jle
out
nop
loopne
insl
adc
loop
mulb
xchg
cmp
test
inc
insb
stc
mov
sbb
sub
ss
std
ds
jge
mov
add
fcom
dec
jmp
pop
pop
mov
frstor
popf
cmp
insb
std
je
movsb
mul
cmpsl
dec
fwait
int3
test
or
jmp
add
sbb
add
arpl
lock
jl
enter
xchg
imul
mov
iret
add
and
pop
loope
jne
pop
push
add
pop
popf
jne
inc
add
and
mov
xchg
push
into
dec
mov
pop
mov
or
xchg
clc
lds
mov
jmp
stos
inc
add
or
xor
nop
pop
mov
add
inc
push
pop
jo
jmp
pop
ss
add
lods
sahf
push
cmpl
adc
pop
fldl
xchg
scas
cmp
imul
sbb
push
inc
add
cmpsl
mov
cmp
insb
inc
add
inc
xchg
pop
dec
xchg
movsl
adc
fwait
int
fcomi
aad
fcomi
jno
add
out
cmp
scas
shll
fs
popf
fstl
add
jno
add
cld
enter
add
frstor
arpl
dec
dec
mov
inc
add
push
add
add
insl
sbb
jmp
cli
push
xchg
cmp
inc
add
add
mov
add
jp
push
pop
les
outsl
adc
dec
inc
pushf
adc
sub
push
mov
mov
xchg
add
push
sbb
filds
jae
cmc
lret
jg
push
inc
add
mov
add
sbb
scas
xchg
packsswb
repz
loope
mov
mov
sub
jae
gs
push
ljmp
pop
out
das
sbb
add
cmp
or
js
jmp
mov
mov
fxch
dec
sub
icebp
add
les
out
enter
rolb
add
fdivl
xchg
lret
push
jecxz
jmp
aam
xor
xchg
jae
push
jp
xor
lcall
pop
jae
jp
add
ds
repz
add
lahf
cli
cmc
movb
and
pop
jns
push
mov
cltd
jle
add
inc
add
lret
ss
cmp
xchg
or
ret
repnz
jo
gs
sub
stos
test
pop
or
mov
addb
push
addb
cld
es
inc
add
xchg
out
repz
xorps
pop
jl
fs
sbb
addb
jae
aaa
clc
xor
pop
ljmp
add
jmp
add
jne
rclb
cmp
add
xchg
lret
mov
sbb
inc
add
out
test
dec
mov
xchg
jno
dec
lock
add
xor
inc
add
mov
dec
enter
sbb
add
fwait
pop
push
mov
addb
fldt
outsl
jo
pop
fldl
in
jno
lods
sub
mov
aad
fdivl
add
lcall
fsubrp
inc
add
sub
outsl
test
loopne
lea
sbb
hlt
imul
sub
into
inc
add
cs
mov
add
cli
pop
xchg
mov
dec
cmc
mov
insb
mov
mov
jbe
adc
repz
cld
loopne
and
aad
pop
cwtl
mov
push
fwait
lret
push
mov
pusha
add
popf
jg
dec
cs
notb
sub
adc
or
push
in
xchg
addb
add
daa
test
rcrl
xchg
xchg
jo
add
mov
xchg
xlat
scas
scas
push
lods
cltd
inc
fnstcw
aas
cs
rolb
movb
les
mov
inc
sbb
add
push
mov
or
inc
add
es
jle
pop
scas
arpl
sub
adc
popl
or
imul
add
push
jecxz
lods
sbb
incb
xor
addb
push
mov
add
imul
fildl
outsb
out
addr16
cmp
inc
add
call
or
mov
je
jge
imulb
add
jne
mov
daa
icebp
int
pop
mov
sbb
mov
jp
sub
mov
movb
add
pop
jno
cmc
bound
lcall
inc
add
mov
fisttpl
mov
movb
rolb
xchg
dec
scas
orl
aaa
jae
dec
repnz
xchg
rolb
jle
movsl
dec
jns
stc
dec
out
jae
sti
jmp
out
mov
roll
mov
add
roll
mov
jecxz
sbb
inc
sub
in
scas
xchg
cmp
in
movsb
xchg
daa
adc
xor
adc
or
push
xor
add
cmovs
cld
in
mov
out
dec
adc
popa
loop
mov
add
icebp
xchg
addb
cs
pop
jecxz
mov
ret
mov
or
rorl
adc
add
data16
fucomp
fstpl
cmc
std
add
out
ror
ja
or
xchg
jbe
enter
sarl
xchg
js
push
and
fbld
leave
xor
dec
adc
ret
test
jmp
pop
jne
ja
es
cltd
enter
inc
add
dec
xor
scas
pusha
add
pushf
jno
dec
test
sub
pop
test
test
xchg
adc
bound
gs
aad
test
movsbl
cmp
mov
mov
xchg
or
push
xchg
pop
xchg
loope
fcmovu
or
js
test
xor
loop
enter
push
je
pusha
add
jmp
jae
sbb
in
addb
add
inc
adc
fsts
pop
inc
lret
jle
call
jne
jae
pusha
add
sbb
push
fsubs
scas
cmp
ret
push
mov
shrl
xchg
insb
xor
adc
pop
mov
adc
jno
add
push
xchg
jl
jg
push
pop
aam
mov
mov
mov
dec
addr16
mov
xor
add
xchg
xor
xchg
cli
iret
mov
sub
dec
ss
add
frstor
in
fwait
push
aam
adc
pop
jle
fwait
jecxz
jp
mov
out
and
pop
cmc
pop
cmp
rolb
fsubrl
sub
cmp
insl
icebp
inc
mov
add
aaa
sub
daa
movsl
inc
mov
jbe
or
and
fmul
xlat
in
cmp
adc
js
mov
lds
notl
aam
pushf
addr16
sbb
cli
cmp
sahf
dec
popl
sub
adc
popa
movsb
add
fistl
mov
inc
xor
sub
fimuls
daa
and
mov
inc
pop
icebp
cmp
xchg
jb
int3
in
aam
ljmp
or
pop
mov
stc
testl
je
cs
add
imul
add
pop
sub
arpl
dec
pop
mov
insb
and
jl
idiv
test
push
add
inc
imul
leave
mov
sahf
sbb
sbb
and
sub
sub
das
and
ss
addr16
push
jecxz
insb
mov
add
cmp
call
std
addb
gs
mov
dec
ret
pop
shll
mov
fistpl
out
mov
lret
xchg
xchg
xchg
into
cmpl
jb
in
adc
iret
jp
mov
ret
add
push
add
add
dec
lret
addb
mov
mov
lock
xlat
mov
in
jnp
or
scas
lock
sub
jg
cld
jbe
adc
mov
add
ljmp
divl
int
hlt
nop
cld
push
add
push
sbb
fidivrl
push
les
fbstp
sub
in
jns
ljmp
jbe
and
push
xor
pop
imul
sbb
aam
paddsb
and
mov
xchg
outsl
insl
mov
popf
xchg
les
xor
icebp
aaa
cmpsl
or
inc
mov
lds
je
movsb
dec
pop
pushf
mov
das
mov
ljmp
add
push
xchg
sub
fsubrl
jbe
in
arpl
push
add
and
stc
adc
pop
pop
xchg
push
into
add
aad
or
out
and
push
pop
xor
add
lods
dec
add
pop
jp
rcrl
repnz
adc
popa
mov
add
mov
lds
add
add
sub
mov
push
std
jmp
push
inc
add
aad
cmp
and
xchg
pop
das
or
rcrl
popa
lock
xchg
movsl
or
and
pop
popa
movsb
pop
push
or
mov
add
pop
mov
pop
mov
xchg
ja
pop
fists
in
fiadds
inc
and
cld
icebp
or
mov
and
ss
add
sbb
outsl
addb
add
add
jb
in
sub
fistpll
fwait
in
stos
xor
stc
repnz
fistl
push
mov
insb
out
stos
mov
xchg
xor
xchg
lcall
add
lock
dec
push
mov
clc
add
cwtl
test
hlt
loop
sahf
lock
pop
ficoml
fldenv
cmp
add
cltd
sbb
out
repz
jo
fcmovne
in
inc
add
jge
mov
add
pop
imul
mov
std
scas
test
lods
pop
imul
das
addb
xchg
movsb
ficoml
inc
add
stos
mov
mov
lret
inc
add
imul
inc
add
rcll
dec
movb
mov
sbb
fidivrs
dec
xor
dec
lea
add
out
outsl
mov
push
out
popf
aas
sbb
pop
stos
fsubl
fidivrs
sub
adcl
cmp
cwtl
lods
and
dec
hlt
scas
sub
or
mov
into
imull
inc
add
add
add
xchg
xchg
in
jbe
add
outsl
insl
lahf
mov
sbb
push
loop
repnz
add
ret
xor
js
out
xor
cmpsb
std
sbb
sub
mov
pushf
lcall
add
aad
addb
das
daa
xchg
xor
xor
add
imul
lret
adc
movsb
std
std
push
lods
nop
scas
or
mov
ds
xchg
sbb
or
rcrl
adc
cltd
loop
add
in
maxps
mov
mov
imul
pop
xor
cmp
ss
sbb
sbb
jmp
in
int
sub
mov
inc
add
fsts
mov
pop
imul
je
dec
sbb
dec
sbb
dec
pop
ficomps
xchg
daa
cwtl
stos
daa
out
jae
mov
mov
push
aas
dec
mov
ficompl
ljmp
or
mov
loope
xchg
pop
inc
add
pushf
loope
mov
dec
sbb
das
out
mov
addb
mov
addr16
xchg
mov
leave
xlat
out
pop
jle
adc
push
rolb
add
mov
aaa
xchg
testb
adc
loopne
push
pop
movb
add
inc
add
incl
add
mov
addl
add
pusha
add
adcl
in
dec
sub
aaa
loop
cmp
push
or
jo
lcall
das
jecxz
mov
std
arpl
push
pop
repnz
xor
cmpsb
jbe
jecxz
ss
lods
sbb
add
mov
mov
fwait
or
pop
xchg
pop
cld
das
fdivrs
add
daa
or
sub
add
xchg
and
xor
divb
mov
add
pusha
add
mov
pusha
add
add
mov
adc
jb
outsb
loopne
add
and
add
jg
jno
es
dec
pop
xor
mov
push
dec
psrlw
addl
mov
mov
mov
ja
mov
push
ss
sbb
ficompl
addr16
fldcw
out
fistl
mov
and
add
stos
push
push
mov
and
lahf
or
repnz
dec
ja
push
cmp
add
and
add
nop
dec
sub
add
xor
stos
mov
lock
sbb
in
imul
fistps
jle
repz
mov
xchg
mov
push
addb
inc
add
punpckhdq
add
push
add
lock
stos
das
mov
add
pop
add
pop
jbe
or
and
add
mov
push
cmp
ret
lret
test
inc
add
pop
out
cmc
aam
mov
cli
lock
inc
mov
mov
mov
jle
add
mov
dec
movb
mov
sub
mov
aas
and
cmpsl
cmpsb
sub
add
inc
adc
mov
es
outsl
fnstcw
es
add
and
mov
jmp
sti
xchg
sbb
test
mov
or
cmp
xchg
jns
addb
and
cmpl
cmc
es
add
sub
cmc
std
imul
xchg
movsl
or
push
scas
outsl
lcall
out
in
outsl
lcall
jge
nop
dec
mov
ljmp
or
add
aas
push
cmp
jmp
mov
push
popf
and
jp
in
cmpsb
std
loop
pop
push
jbe
push
cmp
push
ficomps
adc
addb
shrl
incl
notl
add
cli
loope
add
cmp
enter
pop
icebp
cld
adc
xchg
mov
sti
int3
xchg
incl
xchg
jne
sti
adc
xor
setge
add
pop
adc
dec
stos
or
stc
sbb
sbb
inc
addr16
lcall
iret
push
xchg
loopne
lds
cmp
lock
xchg
das
pop
jo
shrl
ds
add
pusha
add
pop
fs
or
cmp
in
add
cwtl
add
lcall
jbe
ds
pop
jge
add
adc
mov
adc
adc
push
jecxz
or
add
jl
inc
add
leave
xor
add
add
sub
pop
sbb
mov
je
jg
cmp
mov
loope
push
jo
xchg
pop
cld
cltd
and
xchg
push
js
xor
add
scas
inc
add
jb
mov
arpl
pop
loope
mov
in
data16
pop
push
in
je
scas
add
pop
out
lcall
inc
lret
add
das
stc
adcl
pop
mov
mov
popfw
insb
mov
push
sahf
jg
stc
pop
push
xchg
and
clc
mov
rcl
in
out
lret
test
pop
cmp
mov
mov
pop
cmp
repz
in
dec
inc
add
mov
cmp
add
aad
mov
add
int
nop
pop
sub
or
add
sbb
add
and
pop
addr16
pop
dec
in
jbe
inc
add
add
inc
add
add
outsb
out
mov
les
push
fwait
movsl
jmp
fs
fwait
inc
push
pushf
cmpsl
sub
iret
cmp
cmpl
mov
mov
add
cmp
inc
in
jecxz
das
pop
jecxz
pop
push
add
cmc
rorb
sub
xchg
add
mov
adc
fmull
lret
test
sbb
repnz
lahf
mov
mov
adc
ret
and
std
pop
mov
lcall
inc
int
ret
ficomps
dec
dec
ficoms
ljmp
pop
adc
jbe
repnz
cs
lock
push
add
outsl
cmp
aas
add
add
sbb
imul
push
dec
cli
mov
add
rol
add
or
mov
sbb
dec
ds
movb
xchg
push
fst
mov
aam
and
pushf
or
sbb
jmp
cmpsb
lods
cmp
aaa
cmpsl
or
ljmp
mov
mov
inc
test
dec
pop
outsb
sbb
add
outsb
test
xchg
aad
push
sub
mov
or
cmpl
and
mov
mov
sbb
cmp
sbb
add
add
in
adc
pause
icebp
imul
out
add
aad
rcrb
popl
outsb
addr16
in
jecxz
mov
add
lcall
fs
jl
or
mov
mov
dec
inc
add
iret
sub
jmp
mov
pushf
mov
rcrl
test
pop
jp
jbe
ds
push
loopne
jge
mov
ja
inc
stc
cmp
popf
enter
jp
std
decl
push
sub
int3
data16
sahf
sbb
add
aaa
xchg
mov
test
cltd
dec
add
add
jo
sbb
cmp
push
ljmp
mov
aas
ret
adc
and
aaa
and
mov
push
mov
cmp
idivl
js
or
das
aam
jge
pop
xchg
push
inc
add
or
push
out
sti
std
movb
mov
out
lods
ror
xchg
xchg
add
jae
jbe
push
scas
push
add
inc
cmp
mov
add
pop
pop
inc
add
ds
mov
ret
pop
insl
jo
push
cmp
mov
add
xchg
mov
cmp
mulb
lods
adc
lret
xchg
push
add
in
test
sub
or
pop
xchg
push
push
and
jbe
pop
adc
add
xchg
pushfw
addr16
pop
lret
mov
sahf
stc
ret
xchg
jbe
or
mov
dec
mov
dec
shll
mov
xor
loope
mov
mov
dec
stos
and
pop
pop
jmp
cmc
iret
xor
fs
add
add
inc
out
dec
addr16
shll
arpl
shrb
push
loope,pn
lret
xchg
ret
inc
sub
lea
add
mov
mov
adc
xchg
scas
push
or
cmp
push
mov
cmp
sti
and
push
hlt
ret
mov
jo
mov
ficoml
test
inc
add
xchg
inc
add
ror
pusha
add
lea
xchg
hlt
jne
xchg
sti
pushf
cmp
cmp
xchg
ljmp
js
ret
pushl
std
ret
lods
ret
pushf
pop
sub
adc
in
out
clc
or
xchg
addb
add
jp
scas
push
in
jnp
add
adc
ss
add
cmp
lds
sbb
lret
clc
jp,pn
adc
sbb
sbb
pop
adc
jecxz
shll
sub
aaa
outsb
cmp
lret
cmp
xchg
pop
out
mov
jmp
cld
sub
add
xchg
add
outsb
or
xor
xchg
cwtl
mov
mov
out
bound
adc
lods
inc
push
dec
adc
ss
sbb
or
out
decl
jo
addb
loopne
add
stos
xor
out
in
mov
xchg
fwait
jecxz
notl
adc
mov
sub
fisubrl
scas
push
jb
into
in
and
dec
mov
or
fs
xchg
add
repz
jb
dec
sarl
add
inc
lcall
out
or
push
fistpll
add
adc
pop
mov
roll
lock
mov
stos
adc
scas
fnstsw
adc
mov
sub
das
pusha
add
js
es
cmp
jb
je
cmp
add
mov
xlat
pshufw
fstl
pop
mov
xor
ss
in
push
dec
lock
dec
dec
cmp
adc
nop
push
stos
imul
add
mov
add
xor
dec
fcmovu
sub
pop
dec
inc
fs
divps
in
hlt
mov
idivl
fstl
jg
push
xor
icebp
mov
addb
inc
add
add
add
addb
bound
jle
jno
fmuls
push
mov
add
sbb
add
dec
scas
mov
xchg
ljmp
mov
cli
xchg
xor
pop
test
cltd
sti
push
and
mov
mov
add
cmp
popa
pop
and
push
mov
inc
ret
lret
loope
add
loop
syscall
fwait
add
pop
push
cli
adc
js
push
push
mov
pop
shl
pop
sbb
xchg
rolb
cmp
or
sbb
pop
hlt
dec
mov
mov
mov
aad
add
movsl
push
stos
push
fsin
adc
test
xchg
lock
sub
or
loop
sahf
out
ret
cli
into
icebp
out
pop
cltd
dec
fsts
fnsave
sbb
adc
pop
inc
push
add
xchg
bnd
stos
sub
cmpsb
rcrl
add
ds
repz
out
jnp
enter
mov
add
imul
stos
fiaddl
std
daa
add
rolb
lcall
pop
inc
add
mov
ret
mov
mov
sbb
sbb
adc
jge
xor
movsl
jae
pop
xor
stc
and
sub
add
mov
out
dec
mov
test
add
aaa
lock
dec
cli
mov
ljmp
ret
jl
add
pop
es
bound
xchg
fwait
pop
js
insb
add
add
push
lret
fistpll
in
movsb
nop
and
mov
testb
fisubs
and
and
push
stos
sbb
or
movb
xchg
sub
int3
aam
test
punpckhdq
sbb
arpl
cmpsb
push
test
aas
gs
push
jo,pt
daa
dec
lds
mov
js
cmp
pop
popa
mov
pop
mov
movsb
js
stc
push
cmp
int3
cmpsb
lahf
and
jle
aas
inc
xlat
cmc
leave
repz
cwtl
mov
add
push
xchg
push
mov
jne
mov
in
mov
add
xor
add
xor
test
out
stc
test
cld
add
test
addb
sub
mov
push
add
mov
rolb
add
sub
xor
mov
and
jns
add
or
cli
xor
cmpsl
cmpsl
cmp
lock
push
mov
push
sub
inc
jnp
push
repz
outsb
insb
int3
out
add
mov
cli
inc
ficoms
lods
or
imul
cmp
arpl
mov
pop
jo
mov
add
adc
dec
or
or
xor
adc
outsb
or
adc
adc
fadd
add
lret
lea
fcomps
push
add
and
sbb
sbb
stos
lret
xlat
outsb
xor
adc
aas
jb
iret
les
mul
add
bound
or
das
sbb
xchg
into
ret
jl
int
mov
jmp
adc
les
and
sbb
inc
xchg
adc
insb
nop
mov
stos
rcl
imul
mov
add
test
lods
mov
xchg
cli
push
hlt
jo
bound
sbb
ret
cmpsb
repz
out
in
fnsave
adc
ja
xchg
into
lahf
xchg
dec
stos
cs
cmp
movsb
out
int3
insl
aaa
push
or
shr
xchg
ljmp
filds
add
jge
add
sbb
sahf
sbb
data16
xor
sbb
pop
mov
stos
in
and
push
repnz
push
mov
gs
and
xlat
sbb
sbb
add
shl
sbb
and
shll
dec
outsl
dec
or
test
cmp
cmp
xchg
sub
bound
and
iret
push
push
out
pop
xchg
push
sbb
xorl
cs
jo
out
movsb
dec
cltd
lret
hlt
pop
subl
lret
push
sahf
scas
popa
movsl
into
out
add
add
sub
cmp
inc
fidivrl
test
dec
adc
aam
out
add
ret
or
shrl
cs
adc
add
clc
add
icebp
dec
mull
and
xchg
cmpsl
imul
lock
add
in
cmp
mov
loopne
cwtl
sti
insl
and
int3
jnp
repnz
push
stos
push
jb
pop
insl
pop
stos
std
push
loopne
pop
sub
shl
mov
sbb
cmp
mov
push
add
cli
leave
bound
imul
mov
and
cmp
xchg
adc
rcrl
mov
fidivl
stos
repnz
sub
xchg
pop
mov
aad
xchg
add
mov
push
add
or
scas
jge
sub
add
ret
jmp
shl
adc
sub
insb
dec
movaps
dec
inc
mov
addb
aaa
stos
add
movsb
push
ss
xor
subl
pop
lods
addl
and
rolb
movsb
mov
pop
cmp
add
lcall
lcall
test
stc
push
sub
call
hlt
insb
sahf
jecxz
cmc
xchg
push
sbb
ds
lds
imul
pop
mov
add
addr16
cmp
cmp
mov
scas
pop
das
dec
ljmp
ja
or
sub
xchg
inc
add
or
dec
dec
cmp
push
je
inc
add
divl
add
mov
add
mov
mov
rcrl
dec
cmpsl
int
shll
add
or
push
ret
ss
setne
roll
sub
imul
pop
jmp
mov
add
leave
int3
sub
sti
bound
outsb
jle
add
movsb
inc
add
cs
or
add
rcrl
or
or
pop
or
scas
sbb
outsl
out
js
out
fistpll
add
add
loope
jmp
int3
inc
dec
jp
leave
pop
rcrl
jnp
ds
pop
jmp
add
fs
sub
lods
ljmp
xor
sbb
dec
inc
add
je
xor
mov
incl
or
adc
cmp
notb
sub
add
sbb
pop
jge
popf
sbb
add
data16
push
xchg
add
es
cs
mov
inc
inc
add
in
cmp
sub
in
push
add
inc
xchg
xchg
mov
std
add
or
xor
jbe
lret
dec
cltd
adc
cmpsb
lock
xchg
jmp
scas
sub
mov
add
leave
mov
into
ds
lret
add
scas
xor
mov
add
lea
jb
pop
jmp
pusha
add
add
mov
sarl
pop
adc
nop
outsl
cmc
push
xchg
pop
mov
scas
fsubrl
dec
jae
pop
cmp
std
dec
inc
add
movsl
outsl
xchg
rcrl
add
adc
mov
cmp
fbld
lcall
sahf
sub
roll
cs
add
cmp
mov
xor
cmp
movsb
ret
inc
add
xchg
sbb
into
adc
shr
adc
stc
popf
cmp
jmp
add
sub
mov
orl
xchg
ja
dec
clc
jno
fldenv
mov
dec
in
fs
add
dec
stos
in
xor
faddl
add
push
lahf
outsl
stos
cmp
outsb
mov
popf
mov
sbb
fwait
sahf
add
push
push
int
cmpsb
lds
nop
fcoml
fistpll
adc
dec
sbb
push
setg
pop
out
lods
mov
dec
add
sub
lods
outsl
mov
pop
mull
pop
insl
dec
and
aad
cmp
addl
jmp
ret
mov
and
sub
jb
xchg
sub
stc
movsb
out
inc
add
cmp
enter
lcall
xor
es
push
clc
data16
mov
lea
jbe
les
cmp
push
adc
pcmpgtw
imul
xor
pop
ja
icebp
mov
sarb
jmp
add
xchg
inc
lods
insb
jmp
test
mov
xchg
mov
vmwrite
inc
add
sub
data16
test
jo
aad
mov
inc
add
mov
mov
xor
int3
add
pop
jae
jbe
loope
test
sahf
mov
add
add
cmp
dec
cwtl
push
push
pop
pop
loop
out
mov
je
shrl
out
inc
add
pop
mov
mov
push
jecxz
test
cmp
std
imul
and
pop
in
cmp
pop
dec
loopne
sub
outsb
aam
add
aam
sbb
push
add
test
test
sbb
jno
add
ja
pushf
in
shlb
and
push
add
add
fsubl
andl
and
adc
add
fcmovu
das
outsl
sub
xchg
hlt
in
jae
popl
fists
or
push
jnp
add
outsb
out
push
pop
add
call
addb
or
daa
cwtl
inc
or
add
ja
xchg
adc
adc
sbb
je
out
xchg
js
outsl
ds
lret
sahf
xlat
push
push
test
sahf
fiaddl
and
pop
lcall
add
enter
movsl
popa
pop
fwait
xchg
rorb
push
mov
lahf
xchg
fisttpll
pusha
add
js
jmp
jge
je
adc
fimull
cltd
test
dec
pop
pop
movb
dec
jne
idivl
jle
aad
pop
lret
add
lcall
xchg
push
fldt
out
dec
pop
in
pmulhuw
pop
inc
add
add
push
sub
add
dec
cmpsb
inc
pop
pop
js
xor
fdivr
das
or
imul
dec
sbb
cwtl
xlat
jge
add
jmp
push
jne
adc
cwtl
es
add
je
inc
add
popa
out
xor
xor
sbb
pusha
add
xchg
mov
scas
pop
mov
xchg
data16
mov
lock
mov
pop
js
jns
mov
mov
loopne
clc
mov
add
add
sbb
fsubrs
int3
testl
mov
or
xor
dec
cwtl
mov
adc
into
insb
dec
nop
iret
insb
stos
fsubrs
xchg
pop
cli
mov
push
imul
xlat
repz
mov
push
ret
imul
loope
iret
test
mov
inc
adc
xchg
jmp
ss
cmp
nop
jmp
das
lods
adc
jmp
es
jmp
rcrl
cmpsb
stos
das
lods
popf
and
adc
leave
push
enter
mov
dec
cmpsl
test
jmp
pcmpgtb
mov
pop
ret
sub
pop
fchs
push
xchg
cltd
and
push
imulb
iret
push
mov
mov
sbb
loope
lcall
add
or
add
push
mov
adc
sahf
in
ljmp
cmp
imul
das
pop
mov
push
inc
ror
popf
ret
inc
ds
aas
push
add
cmp
pop
fistl
sti
cmp
add
shll
shr
sbb
test
add
insl
adc
psllq
pop
hlt
mov
stos
inc
add
mov
out
mov
or
cmp
cmp
lret
and
and
and
sub
lock
or
addb
dec
mov
or
loop
jne
outsb
ret
jmp
jecxz
add
fsqrt
rorb
pop
lret
lcall
in
cltd
fstpl
mov
add
push
push
mov
jge
int
in
lock
insl
mov
or
insb
loop
outsb
or
insb
je,pn
jp
stos
dec
mov
fistl
cli
sbb
xlat
inc
add
in
xchg
ljmp
dec
clc
gs
fistl
in
fs
divl
adc
loop
xchg
addb
pop
mov
and
dec
jmp
sbb
and
and
pop
cmpsl
cmp
inc
add
ss
xor
test
imul
mov
push
add
mov
pop
inc
dec
hlt
dec
cmp
dec
ret
insl
lret
mov
cltd
ds
push
das
push
enter
test
loop
pop
lds
mov
sbb
sub
and
pop
mov
inc
addb
xor
rcll
xor
xor
push
pushl
test
or
fstpt
sahf
jg
dec
lods
enter
inc
add
push
cs
add
add
out
inc
add
ss
pusha
add
negb
lods
sbb
ret
ljmp
hlt
mov
mov
in
push
jnp
pushf
inc
add
adc
add
add
cmpsb
aad
and
fwait
or
sti
mov
lcall
jb
mov
jmp
mov
sub
inc
into
nop
pop
xchg
lret
stos
sbb
add
movsb
les
mov
cmp
cli
jg
add
mov
popf
rorb
lahf
inc
add
lcall
je
sub
dec
cmpl
xchg
movsb
mov
cmp
xchg
and
jae
push
mov
inc
cmp
add
inc
push
or
ljmp
in
sub
sub
mov
stc
dec
repnz
cmp
cmp
enter
and
pop
dec
pop
loopne
popf
jbe
jge
add
or
or
sub
xchg
loop
xor
fcom
repz
add
or
adc
inc
jbe
inc
lock
sbb
push
rolb
fucomp
mov
sbb
sub
cwtl
ret
pop
mov
push
xchg
xor
repz
cld
xchg
push
bound
mov
dec
jno
mov
cmp
mov
pop
pop
lret
sbbl
mov
daa
cmp
sub
rolb
xchg
ljmp
rolb
xlat
cs
pop
add
lcall
pop
mov
inc
in
adc
jp
sbb
sbb
repnz
add
jnp
xchg
loopne
add
jmp
cld
repnz
cmc
scas
cs
mov
dec
xchg
mov
push
hlt
scas
and
mov
int
add
add
mov
add
push
add
or
xchg
sbb
syscall
mov
sbb
movsb
push
sub
add
aas
rolb
leave
inc
add
out
jne
push
lock
lods
fdivl
mov
or
ficoms
fstp
cmp
mov
insl
fsubl
mov
js
das
ret
fsts
pop
call
inc
add
jo
dec
mov
shll
add
clc
mov
sbb
insl
pinsrw
mov
add
mov
add
add
arpl
xor
dec
xchg
in
push
loop
add
push
popa
mov
xchg
fcomps
out
mov
sub
push
mov
addb
add
pushf
les
lods
mov
push
inc
cmp
nop
mov
push
add
mull
add
jno
mov
mov
push
out
lds
add
pop
movsb
rolb
icebp
ds
add
sbb
push
sahf
jns
xor
les
mov
xor
inc
xchg
pop
mov
dec
push
cmc
scas
das
stos
out
subl
and
aas
dec
dec
int
rcl
jnp
sbb
xor
xchg
add
fiadds
clc
jle
jecxz
mov
les
cmp
rolb
shll
sbb
cli
pop
xor
jg
push
fst
into
mov
in
sbb
push
or
inc
mov
rolb
icebp
push
add
push
jns
sbb
clc
aad
lea
cmp
or
nop
add
icebp
and
nop
mov
add
add
add
mov
xchg
mov
jne
jne
xor
inc
jle
std
dec
insb
inc
ret
ret
cs
mov
push
pop
xor
pop
repnz
sbb
xchg
xchg
ds
shrl
es
scas
add
fs
inc
add
xchg
or
and
movsl
fsubrs
mov
or
sub
add
add
insl
std
stc
addb
fdivrl
jne
xchg
jmp
add
fistps
int
jns
jl
xor
aam
mov
add
cmpsb
mov
lea
add
icebp
push
xchg
xlat
out
inc
add
lods
dec
out
test
sahf
movsb
or
adc
add
fists
bound
adc
mov
call
sbb
xchg
ja
pop
push
aam
out
and
push
add
nop
xor
dec
popf
push
and
cmp
les
insl
lcall
mov
andl
je
sub
xor
adc
xchg
and
or
push
inc
add
lods
or
pop
cmp
jbe
or
pop
xchg
aaa
loopne
fsubl
add
cmp
mov
jg
lods
xchg
das
sar
out
arpl
cmp
lcall
fsubl
push
adc
jnp
jne
pop
addb
popf
sub
cmpsl
jg
sahf
xchg
addb
out
in
xlat
sbb
inc
dec
mov
pop
in
bound
jmp
ljmp
cmp
add
push
fiaddl
xchg
sahf
adc
push
loop
push
inc
add
add
adc
clc
sbb
call
xchg
add
sbb
xor
pop
aaa
add
divb
int3
add
xor
rorb
outsb
push
mov
arpl
pushf
sarl
add
jns
and
lcall
inc
mov
in
adc
lods
in
dec
push
add
jecxz
dec
stos
repz
pop
add
pop
mov
loop
rcl
mov
xor
add
inc
jg
pop
xchg
out
sbb
rorl
or
add
jp
jno
and
bound
ja
pop
ljmp
dec
jae
loopne
in
add
sbb
int
jns
aaa
dec
test
xor
xchg
popf
sbb
push
adc
bound
std
inc
mov
mov
sbb
mov
sbb
std
jnp
test
ret
adc
addb
mov
fsts
test
mov
xchg
imul
mov
out
sub
out
mov
test
xor
xchg
add
add
sahf
rcrb
lods
divb
push
lock
jmp
test
add
mov
or
repnz
fs
mov
xchg
lcall
or
ret
add
jno
icebp
insl
jbe
mov
sarb
xchg
sub
out
js
sbb
lret
xchg
les
loop
mov
pop
jo
pusha
add
adc
mov
dec
jno
mov
addr16
test
sub
jo
fimuls
adc
test
add
inc
add
add
leave
or
add
sbb
movsb
jbe
mov
aam
xchg
pop
pop
insb
movsb
lods
repnz
test
hlt
dec
mov
mov
mov
adc
or
stc
pop
xchg
inc
fmuls
inc
add
pushl
test
es
xor
jl
cld
sub
mov
dec
mov
mov
cli
mov
xchg
inc
gs
xor
ret
add
lods
in
sub
mov
push
sahf
and
dec
cmp
mov
dec
or
add
call
mov
lcall
pop
adc
xchg
pop
inc
add
add
push
dec
jne
push
testb
movsl
movb
lcall
sub
xor
add
xchg
or
lcall
nop
imul
mov
mov
push
cmp
pop
or
dec
dec
xor
hlt
ret
out
sbb
cmp
sbb
xor
add
fcoml
popl
popf
sbb
loope
add
aad
or
shll
inc
adc
pop
les
dec
add
cli
xchg
jns
jns
xchg
jg
mov
push
sbbl
jecxz
sub
push
loopne
leave
adc
dec
and
and
scas
jne
out
and
cwtl
sbb
jg
fisttpl
adc
cmp
jmp
shl
xchg
jle
push
mov
jl
adc
pop
rolb
xchg
in
mov
test
jecxz
sub
sub
add
ss
pop
fisubs
daa
mov
xchg
push
adc
pop
adc
loop
push
pop
mov
mov
inc
add
out
jae
nop
inc
add
add
sub
mov
mov
notb
pop
lcall
push
add
add
pop
mov
mov
addb
faddp
add
add
or
mov
push
and
mov
jno
cs
out
mov
outsl
sahf
jo
js
popf
push
mov
hlt
aaa
leave
pop
xorl
cltd
js
inc
movhps
sahf
and
int
clc
stos
pop
cli
fimuls
adc
cli
push
add
mov
xor
push
inc
add
aas
pop
jb
pop
cmpsb
scas
scas
out
push
add
sti
pop
ds
lcall
std
push
movb
fstpt
mov
aam
xchg
fldenv
sbb
sub
test
or
or
faddl
mov
sub
mov
mov
movsl
xchg
mov
add
test
push
add
pop
cmpsl
push
inc
add
jb
jo
imul
addl
insl
clc
in
dec
pusha
add
lock
cmp
cmp
adc
push
add
jns
jg
mov
outsl
clc
repz
cmpsl
add
subl
mov
mov
push
imul
aas
imul
mov
clc
or
outsl
fists
xor
addb
rcrl
js
addb
popa
std
mov
orl
jmp
mov
int3
add
pop
cmpsb
add
mov
rolb
push
mov
mov
mov
jno
sub
stos
ja
or
mov
into
mov
add
roll
fwait
cwtl
mov
imul
add
cmp
fwait
sub
ficompl
jbe
or
pop
mov
jo
push
movsl
mov
add
stos
dec
stos
jae
pushf
cli
xchg
adc
aam
add
mov
or
fsubrs
stos
sub
push
cmp
popf
imul
movsb
pop
jge
pop
ljmp
pop
mov
add
adc
aam
mov
lea
push
insb
in
sub
fwait
imul
xor
pop
dec
adc
add
enter
xor
xlat
fstpl
fimull
out
popf
addr16
dec
mov
add
lahf
sub
cmp
add
jl
or
inc
add
loopne
roll
lea
inc
adc
add
push
aam
inc
add
adc
call
mov
pop
lcall
addb
inc
add
cmp
lock
sti
or
outsl
inc
cld
or
xor
dec
mov
fisubrs
add
sbb
mov
fcomip
add
cltd
or
bound
rcl
push
dec
test
add
mov
xor
int3
cmp
xor
bswap
fimuls
inc
add
fbstp
aaa
rorl
sub
push
nop
in
aaa
inc
add
pop
stos
movb
or
addb
add
lods
sub
add
cltd
xchg
inc
add
push
movb
or
ret
fsubrl
loop
test
xchg
inc
addb
mov
mov
out
out
cli
dec
imul
mov
cmp
mov
cld
xor
jmp
sub
scas
xor
dec
aas
pop
inc
fildl
xor
sub
mov
lahf
int
in
outsb
pop
bound
jae
aad
add
mov
sub
push
pop
shlb
and
cmp
mov
add
and
xor
leave
test
ljmp
mov
mov
mov
idivl
or
push
or
les
addr16
shrl
filds
rcl
mov
jbe
out
mov
sbb
repnz
lods
xchg
test
lea
or
jecxz
push
addb
add
push
inc
add
ljmp
testl
mov
arpl
arpl
dec
insb
mov
add
jnp
sbb
les
dec
add
push
pushf
sahf
int3
inc
xchg
mov
out
sbb
ficoml
pop
int
mov
les
mov
add
dec
outsb
xor
jecxz
mov
mov
jnp
add
cmp
stos
sbb
jnp
jno
add
mov
dec
xchg
cmc
hlt
or
and
mov
loopne
jb
cli
fildll
rcrb
loop
mov
lods
add
jl
add
insl
sub
jmp
dec
imulb
or
push
lcall
stos
fwait
sub
ja
stos
mov
popf
insb
and
testl
add
pop
pop
repnz
movsb
add
daa
push
xor
repz
xchg
inc
push
xlat
rcrl
ljmp
cmpsl
jns
jl
add
dec
test
andl
daa
ficoml
dec
xchg
lods
or
mov
adc
pop
mov
add
punpckhwd
dec
scas
dec
pop
insl
cmp
jmp
add
mov
rorl
pop
pushf
mov
outsb
inc
adc
add
hlt
out
shll
sahf
or
mov
inc
add
stos
and
and
test
movsl
cmp
std
fs
repnz
cmp
fists
or
mov
inc
add
add
adc
test
mov
in
fiadds
mov
aam
movb
add
sub
mov
ret
divl
inc
add
xor
add
je
pop
jae
or
ss
xchg
xchg
inc
add
cmpsl
icebp
fsincos
arpl
xchg
dec
je
filds
movsl
mov
int
pop
rolb
divb
add
fdivrs
jmp
cmpsb
xor
addr16
xor
xchg
fistpl
xor
movsl
sbb
mov
cmpsl
pop
mov
enter
out
stc
stc
dec
jge
pop
into
mov
adc
out
rcll
inc
add
addb
test
mov
sub
sub
pop
nop
adc
pop
outsb
dec
adc
movsb
push
and
mov
cmpsb
xor
cmpsl
js
ss
pop
aaa
fcoml
xor
cli
cmp
or
sbb
divl
add
inc
iret
cmc
imul
shrb
rcrl
push
xor
push
add
pop
jae
inc
pop
push
mov
cmc
adc
sub
stos
mov
repnz
mov
mov
sub
cmp
sub
adc
cli
xchg
repnz
dec
mov
mov
mov
pop
push
cli
mov
sub
add
push
sbb
jg
cmp
in
repz
add
add
ljmp
jnp
mov
jb
stc
loopne
inc
add
pop
pushf
jae
or
mov
ret
push
add
jmp
lock
push
loop
test
add
add
xchg
jg
push
neg
popa
and
shl
repz
mov
mov
addb
push
add
arpl
push
add
xchg
inc
add
pop
push
int3
or
addb
sub
cmpsb
xor
pop
mov
test
sbb
xor
int
dec
fwait
mov
cmp
je
add
mov
xchg
sub
shlb
insl
aaa
incl
lahf
call
jne
xchg
jp
imul
lock
out
mov
bound
sub
mov
mov
ja
jne
mov
subl
jecxz
add
pop
cmp
pusha
add
aas
mov
imul
add
mov
ljmp
sbb
xchg
shll
mov
movsl
cmpsb
push
mov
enter
xor
enter
mov
fistpll
jne
insb
out
cmc
inc
sarb
ljmp
ljmp
and
icebp
mov
mov
xor
test
jnp
push
add
adc
lds
mov
push
mov
out
jb
jecxz
add
stc
jge
pop
addb
xchg
dec
cs
ret
addb
addr16
mov
test
add
ret
out
jle
cmp
les
pop
cmp
xor
pushf
pop
fildll
aam
push
jle
add
xor
pop
pop
int3
mov
sub
lock
add
inc
clc
add
pop
mov
mov
into
pop
add
xchg
add
push
xor
addb
cmp
insb
dec
mov
loopne
js
std
hlt
mov
cmp
add
add
add
or
dec
xor
add
pop
inc
cmpsb
and
rorl
mov
dec
pop
cmp
add
pop
callw
xor
cltd
cmp
imul
imul
icebp
push
sub
popf
pop
addl
mov
out
cmp
cld
add
push
je
cmpsb
call
inc
mov
dec
and
lods
daa
push
shlb
dec
push
cmp
xchg
mov
bound
jae
sbb
sti
ds
pop
xlat
mov
cmpsl
jo
shlb
or
add
xor
mov
fisttpl
or
jns
ret
pop
xchg
imul
add
sbbl
movsb
adc
add
mov
lods
ja
aas
xchg
inc
add
inc
mov
aaa
sbb
add
add
in
and
rcr
or
add
adc
mov
push
movsb
mov
scas
das
int
into
shrb
inc
mov
add
or
stc
pop
je
aas
inc
add
dec
add
sub
stos
popa
ret
xchg
sub
fcom
insb
dec
aad
dec
cmpsb
lret
push
fstpl
fidivrs
and
mov
pop
mov
lcall
ds
adc
call
push
jge
fwait
inc
add
stos
movb
sbb
dec
ret
ficompl
push
add
test
jns
repnz
mov
aad
pop
dec
js
aaa
daa
loopne
mov
cli
sbb
bound
inc
setae
mov
in
stc
mov
nop
sbb
mov
pop
mov
add
sub
push
out
xchg
xchg
leave
and
pop
mov
add
inc
inc
add
addb
ret
sti
push
xchg
add
lcall
mov
cmp
fwait
cmp
sub
iret
jg
iret
xchg
pop
xor
out
hlt
xor
add
sub
fmuls
add
mov
push
mov
inc
add
shl
add
in
cmpsb
pop
ds
add
addl
movb
jo
mov
mov
inc
xor
mov
cmc
scas
lahf
lcall
scas
mov
das
or
and
jle
jl
ljmp
or
hlt
cmp
scas
mov
int
lods
in
sbb
and
sub
cli
pop
ja
sub
dec
mov
aad
cwtl
dec
add
insb
in
mov
xor
enter
cmpsl
in
lds
xchg
xor
push
adc
shll
add
or
outsl
xchg
outsb
fldcw
jp
add
iret
std
cld
mov
sahf
fwait
inc
add
push
lods
wbinvd
mov
xchg
xchg
push
add
adc
pushf
and
and
movb
ret
mov
sub
into
cli
mov
sub
add
hlt
mov
loope
pop
xchg
jo
add
mov
or
xchg
mov
dec
mov
add
fsubl
fstpt
or
add
mov
jns
adc
aaa
push
mov
mov
sub
ficoms
mov
add
add
mov
xor
sub
cmp
pop
xor
mov
mov
popf
mov
push
push
mov
sbb
inc
add
adc
and
cmp
aad
xchg
mov
or
int
mov
mov
dec
fisttpl
ficompl
xchg
xchg
cmc
or
push
ja
add
int3
push
add
and
cld
jge
inc
add
cmp
das
lods
in
push
jne
scas
fiaddl
lods
cmp
pop
xor
add
repnz
add
mov
add
add
movsb
pop
jns
cld
mov
mov
xchg
jo
lods
jg
out
js
movsb
push
cmp
or
adc
push
push
mov
xchg
xlat
pop
add
sub
aas
negl
push
mov
or
dec
or
jg
test
icebp
dec
addl
jp
rcr
cmp
cmc
sub
cmp
xlat
dec
xchg
dec
add
sbb
jp
pop
inc
add
dec
dec
inc
jmp
and
push
cmpsl
push
nop
sbb
mov
mull
mov
xchg
cmp
push
jge
popf
movups
add
or
stc
mov
xchg
bound
jecxz
pop
jg
cmpsl
push
je
cwtl
jp
lahf
out
out
add
and
jae
inc
add
pusha
add
sbb
xlat
xor
daa
sub
mov
xchg
std
int3
and
pop
fimull
fcom
dec
mov
enter
mov
sbb
das
cmp
fdivrs
std
mov
cmp
mov
push
fs
popa
jg
fsubrs
inc
add
loopne
cmpsb
imul
add
adc
add
push
cmp
xor
push
sbb
xchg
popf
out
sbb
xchg
rclb
addb
inc
add
add
shrl
push
lret
xchg
push
gs
add
dec
das
cli
sbb
pop
jnp
add
mov
jge
test
dec
and
test
jno
fdivl
stc
das
xchg
insb
mul
inc
xor
jns
add
adc
in
dec
add
lock
or
mov
xor
pop
jge
cmpsb
hlt
movb
mov
cmc
test
hlt
orl
lea
adc
mov
pop
cs
lods
cwtl
or
icebp
das
lret
loope
leave
push
cmp
arpl
add
insl
adc
bound
inc
add
clc
jl
loop
add
test
out
call
pop
mov
add
add
and
aam
movsb
jecxz
mov
jecxz
add
fs
sbb
mov
sbb
add
sbb
stc
test
push
cltd
fldenv
pop
or
leave
test
movsb
dec
pop
popa
clc
xor
mov
mov
xchg
punpckldq
jns
cmc
sub
or
bound
pop
and
adc
lahf
fisubrs
xchg
jg
jne
mov
data16
jae
mov
add
sbb
ficomps
add
les
loope
jae
insb
orl
mov
loopne
into
stc
sahf
pop
outsl
mov
arpl
add
mov
out
fwait
sub
aam
mov
push
aas
fisubl
loop
jo
mov
sbb
enter
dec
fmuls
shlb
add
stos
aas
mov
fistps
push
xor
lret
dec
or
mov
addb
or
pop
les
jmp
inc
add
in
mov
fisubrl
inc
adc
loope
and
sub
jae
jle
pop
dec
sbbl
mov
adc
cli
xchg
mov
mov
pop
into
pop
enter
adc
pop
inc
dec
lock
xor
aas
xchg
add
inc
fldcw
cld
pop
mov
loopne
mov
into
pop
and
jne
xlat
inc
add
mov
sti
or
pop
sarl
add
shl
jbe
add
and
inc
add
ja
push
or
inc
pop
or
jecxz
adc
repnz
push
test
inc
add
nop/reserved
rcrl
jno
test
jne
mov
shll
dec
shll
mov
cmp
fs
xchg
les
pop
adc
mov
mov
mulb
ficomps
outsb
or
jmp
jb
ja
add
aaa
loopne
test
jg
mov
adc
and
notl
mov
pop
lock
outsb
sub
push
aad
or
xlat
or
mov
jae
bndstx
out
mov
adc
mov
test
ret
dec
push
jle
jg
sbb
push
pop
add
ret
fadds
mov
loopne
lcall
pop
repz
mov
loope
mov
add
sub
mov
mov
and
and
add
out
jbe
add
and
arpl
sub
or
xor
or
aaa
movb
movb
dec
jl
jge
cltd
fisttps
outsl
push
mov
lods
in
pop
pop
and
add
pop
in
and
movl
fstp
mov
mov
loope
scas
cmp
imul
addb
addb
cltd
sbb
push
add
add
mov
out
jp
add
push
xchg
mov
push
push
adc
hlt
scas
mov
aam
std
out
sahf
out
imul
jl
jno
fwait
or
popa
fidivs
dec
xor
mov
testl
mov
add
fiaddl
fxch
inc
mov
sahf
imul
or
jae
xchg
imul
mov
push
jp
mov
lret
scas
adc
cmpsb
mov
testb
jl
icebp
inc
add
adc
dec
push
daa
pop
sbb
popf
lock
cmp
inc
fistpl
sarl
pop
inc
add
popf
jne
in
xor
inc
add
leave
scas
scas
stc
jmp
mov
add
push
std
out
cmp
and
xchg
outsb
aad
push
test
push
popf
mov
xorl
mov
pop
pop
inc
push
sbb
fdivrp
addb
loopne
xlat
sbb
scas
in
sub
or
nop
xor
push
jmp
cmp
add
inc
in
addb
fcompl
fistpl
lods
xchg
fmuls
mov
xchg
mov
hlt
and
mov
and
adc
inc
sbb
push
add
flds
hlt
into
cmp
test
cld
xchg
lods
loopne
insb
mov
pop
sub
ss
cmp
in
test
fsubr
mov
and
enter
imul
jne
sub
jns
popa
dec
clc
pop
or
pop
test
xchg
pusha
add
ds
add
or
push
add
popa
inc
add
rolb
push
cmpsl
test
addr16
mov
nop
in
push
push
lcall
jmp
push
lcall
sahf
sahf
icebp
adc
movsb
subl
insb
xor
movsb
jmp
cmpsl
push
mov
stos
xchg
push
xlat
ds
insl
jp
aad
mov
sti
inc
pop
incb
sti
stc
rcrb
xchg
insb
leave
leave
ret
fdivs
gs
add
mov
ss
aaa
push
sbb
inc
add
addb
cmp
jmp
insl
add
add
and
imull
cmpsb
cmp
insl
mov
xor
jns
add
mov
push
add
rcrb
mov
sub
notb
iret
rcll
cmp
mov
arpl
add
push
cmp
imul
enter
push
ss
or
nop
lcall
or
pop
fnstsw
stos
and
push
xlat
mov
add
test
cmp
loope
inc
aad
clc
lods
ret
test
shll
out
xor
add
mov
add
xor
lcall
dec
cmp
add
cmp
shr
or
adc
insb
cmp
dec
sub
mov
push
mov
and
call
imul
mov
insb
push
mov
loop
add
inc
pop
and
push
mov
std
mov
iret
std
inc
add
cmp
push
ljmp
popa
idivb
pop
insb
mov
pusha
add
in
push
lds
fs
add
mov
ds
sahf
pop
out
mov
inc
xchg
add
pop
pop
fcoml
pop
fwait
jp
out
or
pop
push
leave
cs
cli
adc
fldenv
jb
adcl
ja
sbb
push
mov
sbb
add
scas
and
dec
outsb
push
push
mov
daa
test
cs
cmp
stc
nop
test
mov
jo
jae
shll
xchg
movsb
pop
pop
sub
pop
xchg
in
mov
dec
stos
inc
adc
dec
jb
or
dec
cmpsl
aad
testb
cmpsl
or
inc
das
rolb
ds
cld
fidivrs
std
pusha
add
arpl
xchg
sub
xchg
test
and
push
cmp
mov
lea
jbe
lret
mov
jl
hlt
xchg
cmc
dec
movb
loopne
xchg
sbb
jl
adc
lret
test
int3
iret
popf
jge
lret
sarb
dec
insb
cmp
dec
in
xor
push
hlt
mov
xor
sub
inc
add
add
jo
add
cs
push
add
bnd
adc
and
mov
add
rolb
and
out
data16
add
call
xchg
sub
jge
cmp
fldcw
scas
mov
or
jmp
loop
or
add
add
lds
imul
pusha
add
or
sub
dec
sub
mov
movntq
add
es
sbb
hlt
stos
lds
test
add
lret
cwtl
jl
xlat
and
mov
xlat
arpl
mov
idivb
loop
jb
push
addb
lods
or
das
add
xor
xor
inc
add
mov
cmp
add
scas
call
sbb
loope
std
pop
test
push
sub
adc
sbb
pop
rcll
push
fwait
bound
shll
add
cmc
or
test
add
xchg
lret
fmuls
xchg
pusha
add
or
cmp
xchg
mov
inc
add
idivl
cwtl
push
add
inc
jnp
out
xor
add
sub
movsb
dec
fwait
lods
sub
xchg
loope
mov
imul
loope
imul
sbb
lcall
jl
add
mov
ss
test
sbb
add
push
idivl
nop
in
ds
fdivl
hlt
dec
mov
add
ds
sarl
popa
sbb
test
add
cmp
add
fsqrt
mov
jo
fildll
aaa
sbb
dec
inc
add
dec
je
sbb
inc
add
mov
addr16
pop
sbb
mov
repz
push
jge
pop
mov
ljmp
ret
sub
aas
push
test
mov
push
test
das
mov
repnz
xchg
aam
fs
or
mov
cmp
outsb
test
sub
xor
ljmp
out
mov
add
push
sarb
adc
not
sub
add
xlat
add
cmp
sti
addl
pop
loope
movsl
leave
or
ds
sub
mov
xor
lahf
adc
jne
clc
inc
add
cmp
xor
xchg
js
add
repz
add
aaa
inc
add
pop
dec
sub
mov
push
push
mov
xchg
xchg
out
cmp
add
add
stos
mov
imul
add
lods
pop
push
in
arpl
adc
rcr
roll
movb
sub
push
push
je
in
sub
push
aaa
cmp
lret
nop
enter
mov
add
loope
rcl
mov
mov
stos
sub
loopne
jno
add
cmp
pop
cld
loope
add
fstpt
testl
inc
add
leave
pop
xchg
js
enter
and
inc
adc
aad
dec
mov
jge
mov
push
nop
mov
rorl
xchg
jb
mov
xchg
xchg
inc
dec
movb
aaa
sub
add
insb
jno
jne
dec
lahf
stos
sarl
pushf
cwtl
ret
push
add
out
bound
sub
or
into
dec
das
ja
add
pop
cmpsb
dec
push
fidivrl
sbb
cltd
jmp
jnp
or
aad
lock
stos
add
dec
mov
fiadds
pop
cmp
and
add
add
xchg
sub
rorl
loop
hlt
cwtl
push
jl
repnz
xor
mov
push
add
jecxz
lea
sub
leave
and
inc
lret
jnp
and
mov
jne
dec
cwtl
fisubrs
rolb
test
push
and
clc
into
aaa
mov
aad
cmp
xor
hlt
jb
scas
into
addb
into
cltd
hlt
js
jl
xchg
lock
cmp
js
xchg
xchg
addb
push
add
mov
iret
das
test
sbb
jns
call
test
test
inc
cli
add
jge
shll
jp
sub
jbe
jb
add
sbb
xchg
test
lcall
lea
mov
das
sahf
pop
cmp
rcrb
mov
fidivrl
cli
hlt
adc
xor
jnp
flds
fists
pop
add
fldt
ficoms
data16
pop
xchg
js
pushf
popf
sbb
in
add
fiaddl
add
les
push
and
rcrl
fbld
dec
cmp
aas
test
xchg
lock
add
cmpsl
lods
or
pushf
push
xchg
xor
scas
aam
adc
outsl
push
stos
mov
stc
jb
mov
rolb
decl
test
or
add
jb
lds
jb
add
roll
add
lods
cmc
pop
ret
stc
jb
jp
shlw
pop
mov
mov
push
mov
xchg
ret
add
dec
shrb
push
mov
xchg
ret
xchg
lds
add
jmp
rolb
roll
cmp
jae
mov
add
jne
stc
jb
dec
lds
mov
add
insb
add
add
add
and
and
adc
cltd
filds
xchg
ret
int
jp
imul
call
add
call
test
add
stc
jb
xchg
out
mov
stc
jb
jmp
inc
add
roll
and
jb
add
add
add
stc
jb
add
add
add
jb
data16
lret
add
cmp
add
add
add
add
dec
out
lods
xchg
out
add
stc
jb
add
add
mov
stc
jb
add
out
dec
pop
stc
jb
add
movb
sub
clc
mov
stc
jb
add
add
ret
es
stc
jb
xchg
subl
add
add
push
push
mov
xchg
ret
inc
add
add
push
stc
jb
and
rolb
add
vmovmskps
jb
xchg
jge
add
pop
jmp
fadds
add
nop
jmp
pop
std
fistpl
sub
push
mov
xchg
ret
vpextrw
lds
sbb
jb
add
adc
movzwl
stc
jb
and
cwtl
mov
stc
jb
test
test
sti
fldl
mov
mov
add
push
mov
xchg
ret
aam
add
je
stc
jb
push
dec
add
jmp
mov
add
jle
stos
nop
jmp
rol
add
xchg
add
mov
push
mov
xchg
ret
xchg
add
nop
jmp
call
jae
add
mov
xchg
ret
and
add
push
pushf
jmp
stc
jb
hlt
mov
mov
orb
add
add
add
add
push
mov
xchg
ret
add
add
adc
stc
jb
dec
add
dec
add
out
sbb
mov
xchg
ret
roll
and
mov
xchg
ret
jmp
jge
jo
nop
jmp
add
add
rolb
add
add
push
mov
xchg
ret
add
mov
stc
jb
aam
add
add
add
xchg
stc
jb
dec
call
or
sahf
mov
stc
jb
movb
out
add
mov
xchg
ret
add
jae
add
add
xchg
ret
add
add
ret
mov
stc
jb
push
std
add
add
addr16
imul
sbb
inc
add
std
add
ja
push
stc
jb
jmp
adc
stc
jb
lods
sub
sbb
popa
add
jb
add
add
add
inc
add
cmp
lret
xchg
ss
pop
mov
mov
sub
ret
or
add
shl
stc
jb
add
mov
lret
into
shl
nop
jmp
call
add
push
cmc
push
mov
nop
jmp
rcrb
add
add
pop
jnp
dec
cmp
jb
add
roll
add
push
mov
stc
jb
out
mov
leave
jmp
stc
jb
fldl
add
out
add
add
mov
add
jb
add
stc
jb
add
pop
add
xchg
fucomi
push
stc
jb
mov
add
add
mov
mov
xchg
ret
add
add
sbb
add
jb
out
mov
sbb
inc
or
jb
pop
add
mov
add
jmp
stc
jb
lretw
imul
add
jb
xchg
vminsd
popa
stc
jb
aam
pop
add
mov
add
scas
push
add
pop
jnp
add
sti
mov
jb
hlt
jae
cmp
add
out
add
add
add
push
nop
jmp
out
jge
add
data16
add
add
push
mov
xchg
ret
add
mov
pop
stc
jb
add
add
movsb
inc
add
push
stc
jb
lods
mov
xchg
add
add
incl
mov
add
mov
xchg
ret
pop
mov
mov
stc
jb
pop
push
stc
jb
add
jmp
rcll
pop
push
stc
jb
add
cmp
add
add
add
add
jb
test
jno
cli
mov
stc
jb
add
add
add
mov
stc
jb
add
add
add
out
and
push
lcall
add
add
push
push
mov
xchg
ret
or
push
roll
xor
push
mov
xchg
ret
add
add
or
popa
add
mov
xchg
ret
add
add
sbb
cmp
jb
add
pop
add
pop
add
push
mov
xchg
ret
mov
add
scas
pop
nop
jmp
add
lds
add
add
movb
add
nop
jmp
add
push
test
test
nop
jmp
push
rolb
add
in
rcrl
mov
xchg
ret
pop
add
add
fistpl
mov
xchg
ret
add
test
add
je
stc
jb
add
add
iret
jmp
stc
jb
insb
add
cmp
stc
jb
add
roll
int
jl
xor
ja
inc
add
add
lea
mov
mov
movb
shl
xchg
outsb
push
stc
jb
lods
movb
xchg
inc
add
std
push
stc
jb
fldl
add
rcl
add
popf
mov
nop
jmp
add
or
adc
add
add
mov
orb
add
rolb
mov
add
testl
jg
nop
jmp
int
pop
mov
sub
jb
lret
mov
jae
decl
push
mov
xchg
ret
dec
add
popa
fs
jb
add
dec
mov
nop
jmp
add
add
pop
dec
mov
stc
jb
and
std
sti
int
imulb
adc
jge
add
fisttpl
stos
add
add
jb
xchg
rcl
bound
stos
add
stc
jb
add
add
int
mov
mov
xchg
ret
pop
adc
add
push
outsb
mov
push
mov
xchg
ret
add
stc
jb
mov
dec
add
les
stc
jb
fcomi
add
mov
push
stc
jb
add
add
aam
mov
insb
lea
nop
jmp
push
test
test
xchg
or
lock
add
aam
add
pop
aad
mov
nop
jmp
add
mov
insl
push
push
mov
xchg
ret
jge
adc
outsl
dec
stc
jb
add
lods
rolb
jge
add
add
or
jb
mov
add
orb
add
data16
jge
inc
cmp
push
push
mov
xchg
ret
or
jnp
insb
inc
insb
insb
nop
jmp
add
jp
add
cmpl
nop
jmp
roll
call
lds
imul
out
push
iret
add
mov
stc
jb
mov
dec
call
stc
jb
mov
add
pop
push
mov
xchg
ret
aam
add
jl
add
nop
jmp
inc
mov
inc
add
stc
jb
int
push
add
add
stc
jb
or
add
add
cmpsl
sub
jb
decl
aam
aam
add
xchg
repz
sbb
add
cmp
add
movb
dec
ds
nop
jmp
add
add
lea
push
mov
xchg
ret
icebp
add
jp
stc
jb
add
rolb
and
or
movsb
stc
jb
add
and
or
cmpb
add
lods
add
adc
add
mov
add
add
fldt
cmp
lods
adc
add
pop
add
push
fucomp
lret
mov
jb
push
pop
mov
inc
add
add
popa
xlat
stc
pusha
push
mov
xchg
ret
add
and
stc
jb
add
rcrl
insb
pop
mov
stc
jb
add
inc
add
and
stc
jb
fildl
lods
jmp
clc
push
mov
xchg
ret
add
add
movzwl
stc
jb
mov
cmp
stc
jb
add
jge
rolb
add
cmp
jge
nop
jmp
add
add
add
int
cmp
idiv
jb
add
sub
mov
jne
stc
jb
hlt
insb
add
fwait
pop
push
mov
xchg
ret
mov
dec
add
stc
jb
icebp
out
add
pop
push
stc
jb
insb
rolb
add
add
add
push
addb
insb
shr
push
mov
xchg
ret
dec
add
mov
jmp
add
or
mov
mov
jb
mov
add
int
dec
cmp
jb
add
rcr
add
cmp
cmpb
incl
fcmovnb
add
mov
stc
jb
add
add
xchg
ret
sbb
out
stc
jb
lods
push
add
add
popa
add
mov
xchg
ret
add
rcr
pop
adc
sub
inc
add
add
mov
add
stc
jb
add
add
add
stc
jb
lods
add
xor
stc
jb
add
add
push
pop
xchg
test
enter
lods
add
xchg
ret
add
shrl
rclb
loopne
add
dec
pop
add
stc
jb
jge
sub
enter
stc
jb
add
lret
mov
movb
jb
pop
add
jge
mov
add
pop
push
mov
xchg
ret
add
add
rcr
stc
jb
add
add
pop
insb
add
dec
imul
stc
jb
add
add
popl
mov
stc
jb
add
add
add
mov
xchg
ret
add
add
stc
jb
out
add
rcrb
inc
add
hlt
inc
add
xor
add
add
aam
sub
pop
mov
stc
jb
add
int
fldl
add
jmp
xchg
mov
fcomi
add
add
pop
clc
inc
add
mov
insb
scas
shr
stc
jb
add
aam
test
subb
fldl
jae
je
sub
shl
incl
popl
cli
jne
stc
jb
add
pop
push
add
ss
jb
add
add
pop
data16
add
nop
jmp
add
xchg
add
add
add
popa
stc
jb
add
icebp
and
jo
and
add
stc
jb
push
int
add
test
add
add
jb
add
add
inc
nop
jmp
add
mov
add
sti
fucomip
rcll
add
stc
jb
lods
pop
add
jnp
mov
stc
jb
add
test
out
call
stc
jb
add
add
push
stc
jb
dec
fldl
call
ljmp
inc
mov
hlt
add
dec
pop
stc
jb
jge
lods
mov
adc
adc
jb
add
mov
das
and
nop
jmp
add
add
mov
add
pushl
stc
jb
sub
sub
stc
jb
test
cmp
xchg
add
jmp
jmp
insb
mov
adc
or
stc
jb
aam
mov
mov
lret
push
mov
xchg
ret
mov
lods
mov
jb
xchg
mov
add
add
sbb
jb
test
add
pop
add
add
adc
push
nop
jmp
mov
add
ret
lcall
js
add
hlt
mov
mov
filds
and
add
add
adc
jb
add
flds
sar
jb
pop
add
mov
nop
jmp
add
add
aam
arpl
mov
stc
jb
pop
int
fst
stos
push
nop
jmp
add
add
add
add
add
jb
cmp
mov
push
add
or
add
ffree
add
sub
jne
stc
jb
pop
add
add
add
sahf
add
push
mov
xchg
ret
mov
dec
lods
add
stc
jb
insb
insb
dec
and
dec
or
jb
data16
fildl
mov
xchg
push
stc
jb
jmp
add
popa
dec
cmp
nop
jmp
add
stc
jb
rcrl
inc
add
iret
inc
stc
jb
add
shlb
shlb
popa
adc
inc
out
incl
add
add
mov
dec
in
mov
stc
jb
int
add
add
fimuls
adcb
add
insb
add
add
push
mov
stc
jb
add
and
push
push
popl
stc
jb
rcl
fildl
jae
lahf
sub
stc
jb
sti
add
rorl
add
push
mov
xchg
ret
data16
mov
xchg
ret
add
add
popa
add
mov
xchg
ret
add
add
test
pop
add
stc
jb
add
push
andb
and
add
rcll
icebp
inc
add
shr
out
int3
lea
stc
jb
dec
or
add
adc
mov
push
mov
xchg
ret
mov
push
jmp
and
add
push
nop
jmp
and
add
push
jae
mov
stc
jb
mov
jne
stc
jb
add
inc
add
fdivrl
stc
jb
add
daa
and
inc
mov
add
add
jb
add
jecxz
push
nop
jmp
inc
add
dec
jb
sub
stc
jb
add
add
cli
inc
add
xchg
rolb
addl
push
mov
xchg
ret
mov
jae
mov
push
mov
xchg
ret
dec
add
jb
mov
hlt
insb
roll
mov
or
add
jb
add
vfrczpd
arpl
jmp
shlb
pop
mov
stc
jb
add
dec
add
mov
mov
stc
jb
add
mov
popa
add
mov
xchg
ret
add
add
jmp
add
mov
push
outsl
movswl
stc
jb
fldl
add
pop
ds
stc
jb
mov
sub
jb
sub
test
add
jb
pop
adc
pop
icebp
add
mov
mov
incl
cmp
add
jge
mov
stc
jb
adc
add
rolb
mov
leave
mov
stc
jb
test
mov
sti
add
test
stc
stc
jb
xchg
or
test
jb
out
add
dec
push
push
mov
xchg
ret
fildl
ror
xchg
nop
jmp
insb
lret
add
add
dec
aam
xor
stc
jb
dec
add
push
cmpl
inc
add
or
sar
subb
add
out
push
stc
jb
out
rclb
add
add
or
in
incl
add
add
add
scas
ret
nop
jmp
add
lret
dec
mov
push
mov
xchg
ret
out
add
imul
add
pop
add
add
cmp
lods
and
imul
fldl
rorl
add
stc
jb
insb
add
add
dec
adc
xor
add
jp
xor
mov
push
mov
xchg
ret
add
lret
jne
stc
jb
push
test
movb
gs
loopne
incl
out
std
push
fucomi
mov
stc
jb
push
mov
push
mov
xchg
ret
test
dec
push
mov
xchg
ret
rcr
add
jmp
add
add
add
mov
testl
out
jge
add
stc
jb
add
add
and
or
inc
add
jmp
jne
stc
jb
add
test
add
test
add
stc
jb
add
add
sbb
stc
jb
rolb
data16
push
stc
jb
mov
add
add
xchg
pop
mov
stc
jb
add
mov
push
stc
jb
add
pop
icebp
fildl
add
cmpw
nop
jmp
popl
add
mov
and
test
add
push
mov
call
stc
jb
add
add
fwait
mov
nop
jmp
pop
add
add
aam
pop
add
pop
stc
jb
adc
add
dec
shr
mov
stc
jb
pop
shll
shr
and
mov
push
mov
xchg
ret
add
shlb
stos
pop
stc
jb
lods
dec
mov
add
addb
ja
decb
xorb
mov
cltd
and
push
mov
xchg
ret
and
add
jne
stc
jb
lret
or
mov
xchg
ret
add
pop
push
stc
jb
and
add
add
fstpl
iret
add
add
add
or
pop
lds
push
nop
jmp
pop
add
mov
or
jb
add
push
add
add
aam
daa
cmpsl
subl
incl
movb
roll
mov
mov
xchg
ret
add
add
popa
add
mov
xchg
ret
add
mov
xchg
ret
or
add
add
rclb
incl
xchg
ret
cmp
jle
stc
jb
out
icebp
test
lret
pop
sub
stc
jb
or
lret
sub
push
mov
xchg
ret
dec
icebp
out
iret
add
nop
jmp
add
lret
add
add
and
not
push
mov
xchg
ret
dec
adc
jmp
add
jp
add
mov
push
test
add
pushf
jne
nop
jmp
jmp
movsb
push
add
push
stc
jb
test
push
movb
add
aas
xor
stc
jb
jp
out
icebp
add
add
add
jb
adc
add
rcrl
cmp
stc
jb
add
add
movsl
adc
add
push
mov
xchg
ret
add
add
stc
pusha
stc
jb
lret
lds
adc
sbb
pause
jmp
sti
add
add
roll
jl
stc
jb
rolb
xchg
push
add
add
stc
jb
add
sahf
mov
stc
jb
add
add
call
sar
incl
pop
call
add
adcb
add
test
dec
je
xor
stc
jb
add
add
or
jb
data16
add
inc
add
add
stc
jb
dec
sti
add
add
inc
mov
pop
inc
add
inc
add
add
mov
xchg
ret
add
enter
jb
add
lods
jge
mov
pop
rep
stc
jb
add
add
and
add
loop
lcall
inc
test
add
pop
add
es
nop
jmp
add
add
add
add
mov
stc
jb
add
or
mov
add
mov
stc
jb
add
mov
call
add
nop
jmp
add
add
jb
dec
add
push
popl
jbe
jne
stc
jb
pop
add
mov
cmp
xor
add
stc
jb
add
cmp
jb
add
decl
repnz
incl
add
out
dec
add
mov
jbe
push
stc
jb
xchg
add
repnz
push
js
jb
mov
inc
mov
jbe
stc
jb
mov
add
cmp
pause
jmp
mov
lret
inc
add
xchg
in
call
stc
jb
lret
dec
rcrl
iret
or
inc
add
add
or
mov
xchg
ret
add
call
dec
push
stc
jb
add
or
sti
inc
inc
div
or
stc
jb
add
lods
add
push
add
push
call
stc
jb
add
add
mov
nop
jmp
add
add
add
dec
call
nop
jmp
sti
add
xchg
call
dec
nop
jmp
lods
std
mov
add
mov
add
add
add
dec
and
lods
mov
lock
jb
rorl
add
out
or
dec
sub
add
add
mov
lret
add
add
add
incl
mov
icebp
sub
mov
xchg
ret
add
mov
rclb
add
lods
add
add
push
test
aam
add
add
add
mov
mov
xchg
ret
out
dec
pop
add
jmp
mov
sti
and
push
inc
mov
call
stc
jb
add
add
add
push
mov
xchg
ret
add
add
rolb
pushf
shr
nop
jmp
add
mov
add
add
add
jb
add
mov
test
push
mov
xchg
ret
mov
jge
mov
mov
xchg
ret
add
movsl
hlt
movsb
xchg
stc
mov
stc
jb
add
nop
jmp
add
add
add
add
mov
push
mov
xchg
ret
and
fisttps
lahf
add
xchg
ret
or
adc
subb
incl
insb
lret
add
stc
jb
add
and
mov
loope
add
add
mov
xchg
ret
dec
fcomi
mov
cmp
jb
rol
mov
stc
jb
add
add
add
out
sub
add
mov
nop
jmp
out
fildl
mov
dec
mov
or
jb
lds
add
add
incl
add
mov
pop
jmp
nop
jmp
xchg
add
add
xor
add
add
jb
cmp
out
and
jne
stc
jb
add
add
and
nop
jmp
add
or
addb
dec
test
mov
mov
and
nop
jmp
and
lods
add
enter
arpl
add
and
fildl
leave
mov
stc
jb
add
xchg
push
test
stc
jb
mov
pop
stc
jb
mov
add
rcll
sub
add
jb
add
or
add
sub
jb
mov
add
add
push
add
jb
add
lods
add
adc
nop
jmp
lods
fildl
add
out
out
add
mov
stc
jb
pop
test
test
add
add
jb
pop
add
push
scas
inc
push
mov
xchg
ret
add
push
nop
jmp
add
out
out
fwait
pop
stc
jb
add
pop
add
mov
sub
ret
roll
inc
in
jmp
stc
jb
out
add
mov
push
mov
xchg
ret
test
add
into
pop
inc
add
add
push
mov
xchg
ret
add
jp
push
push
mov
xchg
ret
add
rolb
xchg
pusha
add
out
inc
add
add
int
shrl
jb
lods
push
add
lods
add
nop
jmp
sti
add
test
add
lods
add
out
inc
add
mov
insb
or
add
add
add
sti
fldt
or
jb
add
add
inc
adc
jb
add
aam
add
out
lods
mov
stc
jb
movb
xchg
into
mov
push
mov
xchg
ret
add
fisttpl
cmpsl
push
push
and
add
jmp
nop
jmp
add
add
and
loope
jb
call
mov
sahf
add
stc
jb
add
insb
sbb
pop
add
add
mov
add
add
incl
xchg
ret
add
add
in
add
stc
jb
add
lods
add
inc
mov
movzwl
stc
jb
add
add
add
mov
nop
jmp
pop
mov
out
call
stc
jb
add
add
mov
cmpb
add
add
jp
mov
nop
jmp
inc
add
pop
add
add
xor
mov
stc
jb
add
add
mov
xchg
ret
icebp
sub
inc
dec
mov
stc
jb
add
rcl
add
lods
jge
jne
stc
jb
add
add
add
dec
div
nop
jmp
add
add
fcmovnb
add
sbb
jb
inc
add
lret
mov
xor
add
mov
test
push
mov
xchg
ret
or
jnp
pop
stc
ljmp
add
push
cmpl
nop
jmp
mov
push
add
stc
jb
add
out
add
add
dec
xor
stc
jb
or
push
mov
xchg
ret
add
add
cmp
jmp
add
add
add
xchg
or
nop
jmp
and
add
add
mov
nop
jmp
add
jae
add
test
jb
data16
cmp
mov
xchg
ret
dec
add
pop
pop
mov
stc
jb
add
mov
xchg
ret
sarl
mov
jb
imul
add
add
mov
les
int3
add
stc
jb
add
add
mov
stc
jb
icebp
add
add
add
mov
stc
jb
mov
push
mov
xchg
ret
data16
or
sbb
add
fistpl
fildl
add
add
nop
jmp
fldl
add
roll
rolb
insb
fld
stc
jb
add
add
add
loope
add
xchg
stc
jb
rolb
insb
and
add
push
push
mov
xchg
ret
add
add
pop
call
add
add
add
mov
add
add
push
lea
nop
jmp
add
out
lret
add
or
add
rorl
add
in
call
add
add
pop
push
push
mov
xchg
ret
pop
push
add
mov
jb
add
add
rcrl
xchg
pop
cmp
nop
jmp
jmp
add
jb
add
std
aam
add
stc
jb
jmp
add
cmp
jb
pop
add
add
and
sub
push
mov
xchg
ret
push
insb
add
inc
gs
stc
jb
dec
mov
enter
jmp
and
pop
and
and
push
mov
xchg
ret
data16
mov
stc
jb
mov
pop
mov
add
pop
push
mov
xchg
ret
add
add
outsb
add
nop
jmp
fistpl
lds
popl
mov
stc
jb
add
add
and
stc
jb
add
add
add
test
in
stc
jb
add
mov
jmp
add
add
lods
mov
stc
jb
adc
pushl
lret
call
stc
jb
add
pop
dec
aas
movzwl
stc
jb
adc
add
add
movzwl
stc
jb
lds
add
rorb
adc
mov
xchg
ret
add
test
or
incl
icebp
add
pop
add
jg
push
mov
xchg
ret
hlt
add
add
dec
add
jb
add
mov
sub
jae
jb
add
add
dec
pop
nop
jmp
add
sub
add
mov
orb
add
fildl
push
call
dec
add
pop
add
inc
in
mov
xchg
ret
test
and
push
mov
xchg
ret
add
int3
mov
stc
jb
pop
add
sti
mov
stos
mov
stc
jb
add
add
jne
pusha
stc
jb
pop
add
add
sub
mov
stc
jb
add
outsl
mov
stc
jb
add
mov
stc
jb
add
add
out
rolb
stc
jb
add
mov
call
stc
jb
shlb
dec
lret
push
push
mov
xchg
ret
add
add
decl
call
add
jmp
stc
jb
shrb
pop
push
nop
jmp
add
test
cmp
add
data16
jb
or
add
lods
mov
pop
nop
jmp
add
out
test
stc
jb
data16
pop
add
xchg
mov
stc
jb
std
add
das
mov
stc
jb
rcl
add
inc
mov
das
xor
stc
jb
lods
add
fisttpl
xor
stc
jb
add
test
aam
add
daa
loopne
mov
stc
jb
add
push
push
aam
mov
nop
jmp
add
inc
add
stc
jb
roll
add
add
fmull
test
jb
add
sub
jb
add
add
jge
sbb
jb
add
insb
add
data16
push
stc
jb
or
fildl
jp
add
rcrb
sahf
add
add
int
roll
lods
add
jb
rcl
add
jge
inc
sub
jb
lds
mov
pop
add
and
add
roll
mov
mov
xchg
ret
aam
add
std
sub
adc
jb
jge
add
loopne
stc
jb
add
add
or
subb
sub
sarb
cmc
fdivrp
call
call
data16
mov
rolb
mov
nop
jmp
add
lahf
and
push
mov
xchg
ret
add
add
mov
jmp
inc
add
push
out
lea
nop
jmp
add
add
rcll
js
nop
jmp
sti
pop
dec
add
add
mov
push
mov
xchg
ret
add
xor
leave
add
stc
jb
add
add
dec
add
ret
pushl
add
hlt
hlt
dec
add
cmp
nop
jmp
add
mov
push
push
mov
xchg
ret
add
jge
pop
imul
inc
add
mov
dec
stc
jb
rcr
lret
add
and
nop
jmp
roll
add
dec
add
jb
std
inc
add
add
int
or
jb
add
add
rclb
pushl
nop
jmp
add
adc
add
mov
mov
push
mov
xchg
ret
add
enter
xchg
lock
pushl
add
add
stc
jb
add
jge
addl
mov
xchg
ret
call
sti
push
mov
xchg
ret
test
push
mov
outsl
stc
jb
add
add
jb
pop
test
mov
mov
jmp
add
jae
jns
mov
stc
jb
add
test
add
stc
jb
lods
add
aam
movzwl
stc
jb
sub
jl
stc
jb
lds
jne
stc
jb
sub
jne
stc
jb
roll
call
stc
jb
add
fldl
pop
add
add
jmp
jp
nop
jmp
add
lret
jae
pop
stc
jb
add
add
add
add
stc
jb
add
add
add
push
push
mov
xchg
ret
pop
add
mov
push
mov
xchg
ret
add
jae
inc
sbb
icebp
stc
jb
jae
add
pop
jmp
mov
xchg
ret
add
add
sbb
stos
out
lcall
aam
add
test
mov
add
jb
add
cmp
clc
xor
push
mov
xchg
ret
add
lods
mov
xchg
jge
nop
jmp
mov
mov
add
sub
loop
push
mov
xchg
ret
add
push
cwtl
jne
stc
jb
add
icebp
rolb
mov
stc
jb
mov
mov
jmp
stc
jb
add
pop
add
mov
stc
jb
add
out
mov
stc
jb
add
stc
jb
shlb
add
mov
add
jb
or
lods
adc
xchg
push
nop
jmp
jae
test
add
rolb
test
push
mov
mov
test
fwait
pop
cmp
cld
in
insl
stc
aad
ljmp
gs
out
loopne
xor
std
pop
test
nop
imull
jne
mov
inc
add
push
push
mov
pusha
add
or
xchg
inc
add
loope
xor
iret
dec
jbe
sbb
cmp
jecxz
jae
and
ret
jb
sub
sbb
cmp
push
jb
push
ss
enter
xchg
sbb
dec
popa
xchg
dec
js
aam
gs
push
pop
xchg
popf
fdivs
pop
enter
push
pushf
sub
dec
aas
cli
cmp
mov
into
jae
or
push
stos
jbe
lcall
test
fcompl
push
sub
cwtl
popf
sbb
sub
jecxz
repnz
add
add
pop
mov
jmp
add
dec
xor
insb
xchg
lahf
ret
xchg
cmp
add
adc
mov
sub
inc
scas
add
lods
gs
ret
loope
add
fiadds
mov
mov
dec
fstps
xchg
icebp
push
or
mov
aas
inc
add
cmp
jge
cld
ljmp
adc
jae
jge
out
or
enter
lea
negb
sub
jmp
jb
or
push
rolb
fs
iret
jbe
add
mov
int3
jbe
push
sbb
add
rolb
xlat
bound
fists
add
cmp
js
popa
mov
xor
jo
xlat
mov
mov
xchg
inc
add
xor
and
add
jbe
addr16
ret
and
in
add
fistpll
stc
adc
pop
out
stos
adc
adc
daa
das
xor
int
lcall
pop
popa
dec
shrl
jo
jmp
and
xor
add
mov
movsl
mov
jnp
out
mov
xchg
inc
jle
pop
push
stos
pusha
add
call
add
adc
addb
jmp
mov
daa
fsubrp
shl
xchg
scas
jno
insb
fstps
sub
xchg
enter
stos
fiadds
stc
orl
jp
add
or
aad
outsl
xor
jecxz
push
enter
inc
fisubs
movsb
xor
xor
mov
xor
dec
cmpsl
mov
jl
sub
push
mov
outsb
jo
xor
fs
ja
lret
and
jns
pusha
add
add
jle
add
cmp
cmc
lock
call
imul
js
xchg
stc
mov
and
jp
bound
sbb
jne
jp
repnz
push
push
fwait
mov
sbb
loope
push
pusha
add
push
pop
cmp
out
arpl
mov
and
add
xchg
mov
sub
popa
int3
addb
pop
jbe
ja
movsl
into
pop
jle
add
push
or
push
pusha
add
lret
dec
insl
neg
shrl
adc
sbb
sahf
sub
fdivl
mov
mov
dec
sti
push
je
fiaddl
add
push
push
cmpsl
cltd
test
jnp
test
mov
add
add
pop
jg
hlt
and
push
add
and
lock
pop
int
push
mov
sub
sahf
cmp
add
scas
jns
testb
mov
cmpsb
xor
dec
out
pop
jmp
add
ljmp
mov
add
sub
leave
xlat
mov
rolb
add
inc
add
push
fistpll
mov
add
shrb
mov
inc
push
cmpsb
pop
jp
test
xorl
sub
mov
add
insl
std
mov
loopne
mov
and
es
clc
jmp
dec
add
push
out
fstps
or
inc
lcall
aad
add
push
clc
push
dec
xchg
jge
mov
call
add
test
mov
push
sub
lcall
ret
cli
stc
pushf
popf
sbb
scas
sub
das
push
push
dec
jbe
lods
dec
aas
and
fcompl
out
ret
jne
or
push
enter
ret
pop
sbb
sbb
mov
sti
push
cmp
dec
adc
dec
dec
in
jmp
inc
add
jmpw
jne
out
mov
sub
ficoms
mov
sbb
sbb
mov
iret
call
jbe
std
mov
pop
lea
into
repz
movsl
xchg
sub
mov
testl
sarb
mov
dec
inc
add
jno
scas
xlat
xor
pop
mov
jno
or
mov
fsubs
add
aas
xor
and
push
arpl
repz
add
push
sahf
testb
test
pop
sbb
add
cmp
adc
mov
xchg
mov
imul
inc
stc
pop
outsb
push
dec
adc
ja
mov
leave
fisubrl
faddl
add
daa
push
sbb
jae
out
mov
aad
mov
pop
inc
sub
mov
sub
je
sub
cld
es
mov
arpl
pxor
cmp
rorl
sub
pop
mov
sbb
int3
sahf
inc
insb
push
inc
sub
cmove
fwait
push
movsl
push
add
jg
pop
movsbl
adc
stos
or
inc
sub
add
xchg
pop
popa
pop
subl
sbb
sub
sub
imul
in
aaa
mov
std
inc
lret
fists
bound
pop
mov
fiadds
lea
adc
sbbl
sub
bound
lret
mull
push
mov
add
test
sbb
and
int
je
mov
add
ds
cld
and
adc
inc
jnp
pop
dec
ds
pop
xchg
inc
jl
inc
jbe
mov
in
jle
das
fs
cli
add
pushf
mov
push
or
mov
add
stc
sti
mov
add
mov
aad
lret
push
mov
jp
push
mov
loop
repz
loop
add
lock
int3
pop
cmp
cmc
mov
add
push
addb
dec
push
movsl
add
jp
mov
lahf
repnz
dec
jns
jle
adc
stc
pop
sub
pop
mov
ljmp
jle
js
ja
jp
mov
pop
repz
pop
push
mov
fdivl
add
push
mov
cli
addb
lret
stos
fwait
test
stc
sub
push
jl
dec
inc
add
movsl
xor
scas
test
cmp
lods
iret
xchg
and
fisubl
shll
fucom
rcll
jb
fs
imul
mov
je
xchg
cmp
adc
xchg
add
fnstsw
adc
inc
add
mov
mov
add
xor
add
addb
add
jecxz
sub
in
dec
movl
shll
inc
pop
jnp
xchg
mulb
xor
out
xor
in
sbb
xchg
pushf
mov
ror
push
flds
add
lcall
stos
push
and
dec
xor
add
add
sbbl
add
xlat
inc
add
xlat
dec
repz
aam
adc
insl
clc
jg
pop
sub
lret
das
jnp
add
inc
add
adc
pusha
add
shrl
int3
cmp
leave
sbb
mov
call
dec
jp,pt
xchg
cmp
dec
es
or
nop
call
int3
add
push
add
out
adc
mov
out
and
xchg
mov
rolb
jmp
aas
pusha
add
imul
add
pop
jns
imul
in
mov
xor
jo
sbb
in
ja
jp
int
std
pop
sub
adcl
lea
push
fmull
sub
sub
sub
pusha
add
add
into
xchg
les
and
xchg
cmp
addb
jne
adc
push
pop
and
lahf
loope
add
clc
in
pop
adc
stos
sahf
adc
stos
nop
pop
in
lcall
ficoml
ljmp
arpl
sarl
pop
mov
add
jmp
sub
ja
push
mov
add
gs
clc
imul
addl
adc
mov
ret
scas
push
pop
iret
in
pop
pusha
add
js
fucompp
daa
pop
mov
xor
fwait
lds
enter
mov
iret
add
dec
adc
adc
hlt
outsb
push
mov
arpl
dec
xor
mov
xchg
rclb
pushf
stos
lods
lea
or
jo
cmp
daa
adc
cmp
sub
iret
das
addb
ss
inc
add
idiv
ss
ret
inc
add
push
faddl
out
push
sysenter
idivl
inc
add
data16
add
hlt
sub
inc
add
add
or
mov
mov
call
popa
inc
add
gs
sub
inc
pop
pop
mov
sub
dec
rolb
xor
sarb
movsl
enter
adc
dec
mov
mov
fidivrl
loope
rcrb
loopne
addb
les
in
fisubrl
push
mov
lahf
int3
loop
cwtl
and
inc
add
add
mov
shl
xchg
aam
rclb
aad
cmpsl
clc
leave
in
jnp
out
or
inc
xlat
pop
dec
push
xchg
pop
inc
add
adc
mov
in
cmp
fistl
arpl
and
repnz
add
sbb
test
aam
adc
movsb
cmpsb
xchg
lods
lret
or
and
xlat
jae
add
rcll
fcmovnb
mov
inc
les
negb
les
fwait
and
push
add
jmp
cmpsl
jl
push
dec
jle
in
xchg
pop
inc
sbb
add
ret
add
cs
add
cld
fs
in
cmp
add
addb
addr16
cmp
movsb
push
mov
mov
cmc
lcall
int3
les
ja
lods
addb
dec
aas
mov
addb
add
sbb
mov
insb
cwtl
pop
adc
add
jge
add
sahf
mov
in
fdivrp
outsl
mov
stos
test
ret
fnstenv
fstpl
jnp
sbb
stos
push
sahf
mov
sahf
push
mov
dec
xlat
mov
loop
cmp
cmpsb
ficomps
cmpsl
sub
and
mov
lods
adc
into
ret
sub
pop
cld
pop
sbb
sub
mov
arpl
dec
dec
les
cmpsl
out
add
mov
popa
mov
add
addr16
enter
rol
add
leave
add
cmp
cmpsl
add
inc
add
lret
jns
in
ja
int
pop
cli
sub
cmp
outsl
in
xchg
lds
stos
test
lea
test
cwtl
adc
sbb
add
push
dec
mov
push
jbe
dec
or
test
sbb
je
cmp
je
sahf
fiaddl
les
mov
pop
xchg
push
inc
mov
add
test
insl
in
xor
test
sbb
mov
stos
bound
jmp
shl
das
mov
dec
jmp
sahf
push
push
add
lods
mov
jmp
out
fcomp
xor
les
add
std
and
push
sbb
cmp
jecxz
lcall
outsb
not
das
mov
in
add
nop
cmc
clc
mov
pop
addl
out
or
mov
loope
add
add
cmp
or
lret
push
pop
hlt
jle
mov
cmpsb
les
and
mov
jne
outsl
xor
nop
sbb
add
add
inc
repz
sahf
cmp
push
fisubs
add
xchg
std
fldpi
sub
mov
shll
dec
mov
fsubr
addb
jne
dec
xchg
iret
ret
push
mov
sti
sbb
jo
mov
xchg
xchg
int3
int
push
sub
rcrl
xchg
push
or
jbe
sbb
or
jg
in
add
lret
mov
fldcw
mov
and
cmp
jp
enter
aam
popf
das
push
sub
pushf
bswap
iret
testb
pushf
xor
pop
rorl
add
test
adc
mov
add
push
push
movsb
sub
pusha
add
inc
add
sub
xor
mov
adc
dec
cltd
mov
dec
ljmp
mov
cld
aas
mov
stos
cli
mov
movb
add
pop
xlat
push
jle
sub
xchg
dec
call
jge
cmpsb
adc
fsubs
xchg
ljmp
ret
inc
stc
sbb
inc
and
scas
pop
mov
xchg
imull
mov
divb
jge
stos
xor
repz
cmp
and
addb
add
iret
fld
dec
dec
push
xchg
cmp
inc
add
adc
ds
sbb
popf
into
rorl
dec
mov
scas
sbb
movsl
sbb
or
sub
cmpsb
ss
je
repz
pop
and
add
add
imul
push
xchg
cli
bound
ljmp
cmc
inc
xchg
jg
add
or
jnp
xor
xchg
jns
pop
mov
mov
jecxz
add
sbb
mov
add
pop
int3
xchg
ret
or
cmc
ja
inc
mov
les
xor
pop
inc
add
pop
in
adc
push
mov
jae
add
mov
test
mov
loope,pt
jb
add
addb
add
mov
arpl
cmpsl
push
pop
daa
addb
adc
mov
rcrl
or
cmc
stos
xor
dec
xchg
xor
mov
ret
jl
jns
xor
mov
sti
rcrl
incl
arpl
jb
mov
add
add
js
add
repnz
add
std
xor
push
insb
popa
and
mov
push
mov
movsl
movb
add
push
push
pop
inc
sub
pop
icebp
insl
shll
sub
inc
sti
adc
adc
inc
add
aas
cmpsl
frstor
add
cltd
push
xor
fisttps
daa
stos
xchg
jns
adc
addr16
pop
rolb
mov
push
fstl
cmovbe
push
add
add
add
mov
cmpsb
icebp
xchg
adc
or
xchg
cmc
push
or
aaa
xor
pop
mov
stos
addb
dec
aad
test
leave
mov
or
nop
rcr
in
mov
add
ficoml
sahf
cs
push
movsb
xchg
pop
lods
jb
fsubl
mov
adc
pop
testl
mov
xor
sub
push
add
rcll
xchg
scas
mov
add
xor
jmp
xor
pop
out
les
ret
jnp
push
add
xchg
inc
add
add
leave
sub
in
ds
sbb
es
xor
cmp
jge
add
xor
and
add
mov
add
cld
scas
or
xchg
add
rorl
add
mov
ret
mov
cmp
jbe
jle
jmp
push
sub
imul
cmpsl
fiaddl
jmp
and
fisubrs
push
pop
gs
mov
push
movl
mov
dec
push
dec
mov
and
daa
adc
enter
mov
sub
pop
dec
mov
fdivl
add
ret
mov
in
nop
shl
dec
test
xor
nop
inc
inc
add
jle
fcoml
mov
pop
stc
mov
add
mov
dec
pop
loopne
adc
add
mov
pop
push
gs
mov
outsl
cmpsl
xchg
insl
in
stos
pop
imulb
xchg
cmpsb
rcll
es
jnp
inc
add
inc
add
ds
and
sbb
addb
xchg
jmp
pop
dec
push
xlat
jg
mov
sbb
inc
or
ret
scas
sub
cmp
call
test
in
push
jno
add
bound
fsubl
xor
outsl
mov
xchg
xchg
push
daa
xchg
cld
jmp
rcrl
cwtl
insl
cs
dec
jno
jns
add
push
add
xor
add
xchg
inc
add
mov
push
cmp
sbb
aas
and
ljmp
dec
loope
jp
add
cmpsl
xor
sub
dec
fstl
in
jp
addb
sub
push
addb
gs
sbbl
xor
push
dec
mov
dec
test
movsb
push
mov
sub
dec
cltd
mov
add
inc
add
and
add
mov
fwait
aas
dec
jnp
lahf
iret
adc
dec
mov
lea
int
repz
pop
js
ficompl
add
scas
das
icebp
push
scas
mov
es
and
sbb
jne
arpl
imul
add
addb
mov
jge
enter
cmp
inc
xlat
xor
scas
loop
push
and
into
clc
lcall
jbe
inc
add
mov
loopne
cmp
addr16
js
pop
or
sbb
push
movups
imul
sub
add
xor
rolb
jmp
movsl
stc
xchg
movb
add
jb
aam
pop
mov
cmp
xchg
iret
mov
cmpsb
lret
sti
push
add
mov
sub
insl
ljmp
inc
add
iret
mov
divl
mov
addb
mov
ucomiss
mov
add
dec
cmp
cmp
out
xchg
push
stos
push
loopne
jg
stc
iret
mov
adc
mov
add
and
testl
mov
mov
enter
push
lahf
scas
and
pop
mov
cs
push
add
orl
addl
in
and
mov
inc
daa
mov
pop
xchg
adc
push
aad
jns
lea
xchg
mov
lods
inc
add
and
push
sbb
insb
jo
push
pusha
add
sti
inc
add
pushf
xchg
fcompl
mov
mov
loope
rorl
add
push
iret
dec
adc
in
cld
outsl
jo
test
fstl
dec
push
testl
daa
roll
add
inc
add
push
add
aas
ss
push
add
or
sbb
aam
daa
scas
and
sbb
mov
jecxz
cmpsl
or
mov
fisubrl
into
sub
repnz
pop
pop
sbb
xchg
xchg
jle
aaa
test
movb
out
addb
push
es
adc
dec
adc
adc
out
cmp
out
std
shl
sbb
mov
adc
loop
mov
lret
mov
fs
js
les
mov
ret
out
inc
dec
cmpsl
jg
in
dec
lahf
sub
rolb
add
pushf
mov
ljmp
jge
add
pop
and
roll
cmp
lds
fistl
fadds
xchg
sahf
cld
daa
inc
add
xor
pop
sbb
dec
add
sub
lock
imull
adcl
aam
cmp
xor
imul
das
popf
insb
les
ds
mov
je
sub
add
mov
sbb
push
mov
mov
adc
lret
iret
mov
add
repnz
test
pusha
add
repnz
xor
mov
jo
xchg
out
fdivrl
push
adc
dec
rcl
jb
mov
imul
or
add
out
sti
add
xlat
xchg
sub
add
fcompp
ret
lret
dec
cmp
jnp
mov
xor
nop
in
and
xlat
push
mov
jo
jmp
aad
rcl
call
push
add
cld
insb
push
imul
add
jmp
aam
add
scas
inc
aad
clc
ret
xchg
addr16
add
add
hlt
lods
mull
ljmp
test
adc
add
mov
inc
add
inc
push
imul
ja
jge
xchg
scas
cli
adc
pop
in
jecxz
or
sub
add
test
cli
popa
push
xchg
cwtl
roll
out
pop
and
movb
scas
add
mov
pushf
xchg
push
outsb
mov
push
fmuls
push
jl
xor
imul
jmp
notl
daa
aam
dec
addb
xor
inc
aaa
rolb
movsl
loopne
lock
imul
inc
cld
sbb
cmpsl
xor
inc
into
mov
dec
in
mov
lods
dec
out
rcrl
or
add
jae
cmpsl
outsb
xchg
test
ret
jl
addl
and
lret
je
popa
sub
cmpsb
nopl
sub
inc
js
mov
mov
add
cmpsb
push
push
add
cmc
push
add
inc
add
fdivrl
mov
xor
push
push
inc
pop
test
scas
pop
daa
sub
mov
dec
adc
jbe
cmp
cs
add
mov
inc
imul
out
add
adc
aaa
pop
mov
or
xor
hlt
pop
xchg
xchg
mov
lcall
fst
js
dec
je
pusha
add
sub
sbb
jecxz
push
sar
fwait
mov
and
sub
lock
jnp
aaa
idivl
pop
push
notb
enter
add
out
and
ss
push
cmp
in
lods
int3
out
dec
add
dec
xor
enter
insb
fmuls
and
inc
add
outsl
xor
fdivrl
lods
or
lcall
movb
add
push
xorl
dec
loopne
rcl
jno
add
insb
mov
cs
and
pop
pop
test
and
int3
dec
andl
xor
and
sub
addb
pop
pop
scas
ret
xchg
sub
pushf
xchg
adc
popa
mov
cs
call
lods
ljmp
mov
add
adc
push
add
daa
sti
jo
adc
jl
scas
push
add
fisubrs
in
lock
lahf
enter
ficoms
inc
xchg
xchg
sbb
jbe
push
lock
jno
addr16
xchg
xor
add
shl
add
inc
pop
add
push
push
lods
enter
mov
cld
sbb
adc
jp
jbe
xchg
aad
xchg
or
sbb
mov
stc
xor
jmp
mov
jbe
sahf
dec
xor
dec
es
imul
test
push
in
std
lock
jbe
or
pop
insb
cmp
cltd
test
push
ds
jnp
mov
add
ljmp
adc
jno
xchg
xor
mov
add
repnz
mov
inc
add
push
ljmp
push
cmpsl
dec
mov
es
stc
xor
cs
adc
xlat
inc
scas
sbb
lods
or
jp
int
pop
andl
cmp
imul
jle
push
push
adc
add
xlat
inc
add
mov
jmp
mov
arpl
lods
inc
ljmp
mov
and
inc
add
push
jp
jle
mov
and
ret
shll
repnz
test
mov
add
sbb
jo
sub
fucomip
push
add
aam
push
iret
js
xchg
xlat
xor
jne
ficomps
sub
xor
imul
jae
aam
mov
js
gs
cwtl
imul
and
push
fcomp
jo
or
xchg
icebp
xchg
sbb
fwait
dec
test
jnp
mov
ss
add
sub
or
jne
xor
popf
mov
jecxz,pn
loope
inc
addb
in
add
or
add
push
jae
movb
fistps
lea
push
sti
int3
push
add
and
addr16
mov
out
iret
in
inc
popf
cmp
pop
pop
jo
addr16
cld
addb
push
jnp
jmp
adc
insb
ljmp
mov
ret
add
add
cmp
fmuls
jg
les
dec
add
cs
icebp
lods
lret
addb
clc
fld
add
arpl
xlat
and
sbb
lea
mov
jg
addb
out
xchg
ret
push
and
push
leave
jp
aas
in
mov
notl
fcmovu
cmp
push
repnz
cli
fs
mov
dec
inc
or
push
pop
cs
ljmp
test
mov
leave
jmp
jl
add
or
add
add
lahf
fsubrl
push
dec
xlat
addr16
jg
insl
mov
repnz
inc
mov
pop
sbb
mov
lods
test
repz
pop
cmc
add
push
shlb
popf
dec
data16
into
arpl
xchg
cmc
inc
add
in
repz
scas
aad
mov
add
sar
or
roll
rolb
sbb
out
mov
mov
ljmp
jb
push
dec
or
sub
popa
cmp
movb
frstor
add
lods
mov
mov
iret
idivb
pusha
add
loop
push
ret
or
imul
fidivrs
out
in
insl
dec
ss
mov
rcrl
add
aad
add
add
mov
clc
mov
in
or
sub
imul
pop
add
adc
and
clc
push
cld
popa
pop
or
xchg
bound
jecxz
int3
shll
dec
or
fs
mov
ds
dec
push
add
push
inc
jg
sub
add
lea
adc
xchg
mov
jmp
and
stos
jne
xor
inc
mov
std
in
mov
in
or
rolb
add
lods
mov
inc
add
add
add
clc
cltd
sarl
xchg
ss
xor
or
add
push
test
jb
jb
in
popf
sub
mov
add
repnz
mov
mov
out
rorl
sbbl
mov
cmp
adc
outsl
push
fcompl
sti
rolb
jmp
insb
jns
hlt
add
add
cmp
call
je
push
and
or
fwait
shl
dec
xchg
sbb
insl
scas
enter
inc
add
add
enter
mov
xor
dec
add
dec
sub
stc
sub
mov
or
add
call
and
pop
incl
mov
add
pop
adc
pusha
add
push
inc
add
cmp
inc
fs
push
xchg
bound
test
fnstcw
jge
jp
cwtl
jns
pusha
add
add
mov
push
dec
sbb
mov
lcall
lret
or
mov
jp
mov
aad
cs
push
jne
add
cmp
cmp
sbb
das
add
jb
imul
insb
xchg
sbb
adc
in
mov
pushf
xchg
loop
icebp
adc
cmpxchg
cltd
jne
mov
ljmp
xchg
das
test
pop
std
adc
inc
add
into
sarl
dec
roll
jmp
data16
inc
mov
mov
fwait
hlt
fadd
fdivs
repz
xchg
ja
xchg
stc
push
and
add
sbb
jb
jge
add
fs
loope
add
insb
dec
test
popa
lods
repnz
cmpsb
in
gs
dec
in
mov
enter
lret
cmp
xchg
jb
pusha
add
addb
push
xchg
push
test
stos
call
cmp
xor
inc
lret
popa
push
add
popf
test
inc
push
dec
jno
xchg
test
clc
adc
arpl
inc
pop
adc
push
lock
iret
mov
pop
mov
cltd
mov
cs
rolb
or
inc
add
dec
add
mov
sbb
cmp
add
out
adc
insl
imul
jl
aam
push
sbb
jp
add
fcomip
jnp
movsl
aaa
lea
pop
out
test
lahf
fisubl
jbe
std
cmp
mov
rcrl
jle
movsl
repz
mov
pop
bound
pop
mov
lock
add
aam
sbb
ss
call
xchg
cmp
add
push
dec
jmp
sbb
jmp
test
mov
lahf
sbb
fisubrs
leave
fstl
sbb
inc
sti
inc
add
add
outsl
dec
mov
int3
mov
les
jbe
dec
pusha
add
lods
inc
adc
cli
shl
frstpm(287
mov
scas
movsb
cs
sbb
mov
xchg
and
xor
add
mov
fstps
pop
sbb
cmp
stos
push
xor
pop
dec
sub
mov
add
shll
cmp
xchg
jle
dec
dec
addb
and
and
mov
addb
xchg
pop
ds
add
scas
jl
movsl
insb
cs
inc
imul
imul
push
pop
in
fists
imul
cmp
xchg
and
mov
mov
and
cs
loope
mov
add
loop
xchg
sbb
or
incb
pop
xchg
and
add
sub
cmpsb
or
in
adc
in
inc
add
scas
fidivs
mov
lahf
jb
aaa
icebp
je
daa
leave
leave
inc
add
dec
or
loope
std
xchg
sbb
xchg
outsl
xchg
sub
and
mov
jmp
lock
or
xchg
jg
ja
sbb
mov
daa
rolb
leave
rorb
insl
imul
gs
push
add
js
fdivl
loop
add
adc
sbb
add
call
sbb
dec
scas
cli
mov
les
pusha
add
cmp
out
adc
notb
add
test
lds
push
xchg
lea
imulb
popa
jbe
sub
test
mov
sbb
add
popa
xor
fdivrl
add
adc
add
push
jnp
fldenv
sbb
pop
add
in
js
out
push
mov
pop
int3
mulb
shll
mov
test
mov
mov
or
mov
push
adc
out
inc
add
mov
sbb
lret
ficompl
shr
mov
and
jecxz
fwait
lret
push
rolb
data16
cli
xchg
divl
jg
add
cmp
add
outsl
cwtl
fcmovbe
mov
sbb
notb
stos
test
adc
js
add
imul
notl
call
inc
add
jnp
in
or
fwait
push
mov
in
movsl
xor
push
lock
lcall
dec
pop
inc
fwait
lods
lock
aas
mov
rcll
or
scas
xor
adc
icebp
xor
add
jb
xlat
jne
scas
clc
mov
mov
mov
popa
rorl
add
jmp
rolb
aam
mov
les
icebp
ljmp
popa
and
inc
add
into
cmpsl
mov
xor
mov
lods
push
mov
xchg
jnp
mov
rcl
nopl
mov
int3
adc
push
add
xor
int3
test
add
push
mov
loop
pop
push
push
out
xchg
add
les
sub
dec
ret
jecxz
jmp
ss
or
insl
or
and
inc
add
mov
mov
push
and
or
rolb
sbb
bound
addb
mov
add
mov
sbb
mov
pop
ljmp
popa
repz
xlat
mov
out
addb
adc
in
add
adcl
imul
add
add
out
mov
enter
in
mov
cmp
mov
add
mov
mov
lods
jb
movsl
xchg
nop
leave
cli
sub
xchg
dec
sti
inc
inc
add
add
test
fcmovbe
sbb
adc
int3
mov
int
popl
movsl
test
mov
in
or
fsubrs
xchg
notrack
or
ja
add
fcmovnu
js
push
das
xchg
or
iret
xchg
push
add
pop
push
gs
add
cmp
lret
les
hlt
push
les
xchg
loope
fcompl
out
repz
push
call
fwait
stos
jo
jg
aad
and
fldcw
mov
pop
outsb
js
add
sub
xchg
or
divb
dec
lods
pop
loopne
dec
push
push
movb
add
xchg
addr16
inc
add
pop
cmp
add
fstps
jne
push
and
dec
addb
clc
or
mov
test
repz
push
jge
sbb
pop
sahf
dec
sbb
sbb
xor
orl
mov
xor
scas
push
jmp
in
cmc
cmpl
add
leave
mov
je
dec
push
xchg
in
mov
add
fisubrs
out
andl
or
or
xorl
cld
jae
stc
pusha
add
mov
inc
add
lcall
xchg
jp
lds
sarl
mov
push
loop
mov
aaa
gs
xor
add
dec
jbe
mov
cmp
cmpsl
aaa
push
addb
pop
into
mov
ljmp
dec
je
pop
je
mov
cld
push
mov
dec
out
outsb
cmp
cmpsb
lret
fisubrs
lea
in
ret
push
add
mov
push
pusha
add
bound
mov
and
insl
sbb
dec
mov
enter
add
sti
ss
mov
cmp
add
adc
mov
add
subps
mov
mov
jle
dec
push
fwait
jle
mov
inc
jge
enter
cmp
or
xchg
inc
add
add
fimuls
mov
addb
xor
ss
daa
ljmp
mov
pushl
or
sub
adc
jp
add
add
push
xor
clc
std
push
push
jno
sub
jne
xor
shrl
movl
mov
aam
xchg
cmp
cmp
cmp
in
popf
adc
scas
fwait
jns
jl
out
scas
ficompl
mov
inc
pop
cltd
movsl
dec
stos
sbb
insb
imul
inc
add
inc
adc
movsb
sahf
ja
xor
enter
mov
dec
cmc
inc
adc
xchg
lret
call
xchg
popa
xchg
repnz
sarl
push
ljmp
pop
and
inc
add
cwtl
in
mov
loop
add
xorl
ret
mov
mov
int
mov
jp
add
call
xchg
cltd
mov
inc
sti
xor
jno
das
lea
add
mov
push
aam
insl
fadd
outsl
or
stos
dec
mov
add
cmpl
mov
mov
cltd
sub
dec
pop
cwtl
test
mov
jge
jno
rcl
ds
int
leave
in
fucomip
push
jae
lods
lret
or
add
aaa
push
sbb
push
cmp
push
push
push
pop
pop
pop
fs
sahf
lods
mov
xor
push
xchg
fsubr
mov
pop
inc
mov
xchg
jle
inc
jnp
or
xchg
or
jge
fbld
stos
xor
adc
add
mov
fsubrl
mov
add
ss
pop
popa
jle
jl
xchg
mov
inc
push
divl
jmp
and
test
add
adc
mov
pop
cwtl
xchg
in
xor
sub
dec
nop
cmp
mov
mov
push
loop
repnz
cmpsb
aaa
mov
stc
mov
cmp
fisubrs
jge
or
out
ljmp
push
add
add
mov
dec
cwtl
in
popa
push
sub
in
ljmp
xchg
lock
or
push
add
add
loope
adc
push
negl
imul
int3
sarl
jb
and
sbb
je
add
jecxz
add
mov
sub
int3
ljmp
loop
or
dec
fs
mov
test
mov
sbb
insl
adc
push
dec
lods
iret
and
out
pop
addb
and
add
scas
scas
ds
sbb
sub
adc
add
and
imul
shrb
and
scas
lret
ffree
add
dec
addb
add
xor
add
mov
cli
rolb
aas
repnz
loope
cmpsb
sbb
or
jge
inc
add
mov
addr16
in
jecxz
adc
pushf
mov
repnz
jmp
stos
sbb
hlt
or
pop
paddb
mov
jb
fsub
movb
inc
jmp
xchg
addr16
push
cmp
pusha
add
add
lahf
scas
in
mov
fs
fsubs
sarl
scas
pop
out
sbb
leave
hlt
mov
mov
jo
inc
out
outsl
cmp
icebp
inc
add
mov
xchg
cmp
add
fs
into
data16
cmpsb
popf
and
cltd
nop
dec
push
shlb
in
das
add
and
mov
les
mov
aad
lret
sbb
pop
in
stc
or
aam
push
pop
adcl
sbb
aam
jg
cmp
push
mov
xchg
xchg
fs
js
add
jns
js
outsb
aas
imul
pushf
jnp
mov
adc
loopne
jmp
rorl
xorl
in
loop
add
imul
add
lods
scas
mov
xor
jae
xchg
mov
jecxz
or
dec
xchg
shlb
add
sub
xchg
lret
dec
test
sti
nop
pusha
add
xor
pop
adcl
inc
loope
popa
mov
add
enter
push
cltd
nop
test
or
ds
aam
pop
adc
pop
lea
add
add
add
mov
dec
inc
and
add
adc
dec
mov
dec
iret
xchg
js
pop
movsl
aas
pop
imul
pop
and
into
movsl
mov
inc
mov
mov
leave
out
adc
inc
test
jp
sti
cmp
pop
jmp
add
push
sub
int3
icebp
loope
add
int3
into
mov
cli
in
js
insl
cltd
xchg
daa
mov
addb
ss
push
mov
dec
jmp
loop
loop
or
jecxz
add
mov
push
mov
sbb
xor
repz
fld
add
push
popa
mov
xor
test
addb
in
push
mov
jecxz
sbb
fs
call
mov
mov
push
mov
dec
shl
sti
cmp
add
scas
cmp
sub
mov
and
add
lret
add
loop
sub
push
hlt
inc
dec
dec
data16
add
ss
bound
scas
xchg
cmpsb
mov
or
mov
nop
fnstenv
popa
mov
jne
test
mov
bound
jl
push
in
cmp
sub
out
mov
pop
scas
inc
pop
push
mov
sbb
push
add
add
add
and
enter
sub
js
xchg
je
mov
lock
dec
add
enter
adc
pop
xchg
gs
imul
sub
jge
and
lods
push
ljmp
push
jle
in
iret
divl
inc
mov
out
loopne
push
sbb
sti
push
xchg
pop
es
sbb
sbb
inc
cmpl
xchg
out
pop
pop
addb
lods
lss
clc
adc
xchg
jnp
push
mov
cmpsl
or
out
lods
fsubrs
add
repz
xchg
movb
xor
mov
xor
in
push
insb
and
push
dec
cli
not
push
clc
xchg
push
mov
jnp
lea
xlat
divl
repnz
insb
jecxz
mov
out
add
ds
bound
in
push
xor
negb
inc
pop
mov
and
stc
aad
rorb
inc
add
icebp
in
cmp
jo
sarb
pop
icebp
mov
push
add
outsl
adc
cmp
frstor
jne
xor
and
gs
jl
push
call
jg
and
or
repz
je
xchg
hlt
addl
gs
test
adc
push
cwtl
mov
les
sbb
xlat
mov
lret
xchg
cmc
and
mov
cli
out
dec
mov
and
xor
mov
mov
xlat
ret
dec
int
les
stc
inc
add
ss
jo
cmc
and
negl
jp
daa
fnsave
xor
sti
inc
add
xchg
dec
jbe
inc
add
test
je
mov
mov
pop
aaa
fldl
ficomps
jmp
inc
xor
stc
addr16
je
pushf
jl
fdivs
jl
mov
pop
sti
fimull
pop
cmp
mov
rcrl
pushf
mov
hlt
xchg
pop
dec
outsl
das
pop
int3
out
adc
add
testl
adc
add
sahf
pushf
outsl
adc
add
inc
cmp
jne
and
sub
push
lahf
xchg
aam
sbb
add
dec
loope
sub
inc
icebp
outsl
bound
sbb
addr16
jne
or
test
cmpsl
in
xchg
popf
test
mov
xor
cmc
in
dec
push
dec
sahf
sub
stos
shll
je
inc
ds
ds
push
push
sub
add
jno
mov
fidivrs
cmc
sbb
adc
insb
pushw
stos
inc
iret
add
rorl
add
adc
inc
xor
mov
sbb
iret
fbld
pop
out
lahf
push
mov
enter
add
pop
push
cwtl
mov
add
leave
push
in
sub
in
xchg
adc
pop
xor
mov
add
rsqrtps
jb
orl
add
cmpsb
sbb
imul
push
or
out
add
xchg
idivb
dec
push
or
lret
cmp
jae
mov
cmp
adc
fsubrs
push
popa
pop
mull
mov
sbb
ret
fidivrl
add
lcall
adc
xchg
addb
int3
sub
push
push
add
lahf
mov
lahf
ret
repz
xor
rolb
pop
adc
movsb
push
lods
and
or
addb
rolb
aas
bound
shrb
shll
movsb
roll
pop
jns
cmp
add
popf
xor
clc
ja
add
push
movsl
dec
mov
dec
lea
sub
bound
repz
jnp
loop
or
add
ret
std
scas
addr16
lret
add
int
das
xor
add
lea
test
orl
lret
lcall
dec
addb
dec
adc
sub
mov
scas
pop
jp
scas
ret
addb
pop
shll
mov
je
sti
adc
sub
push
out
push
daa
pop
add
mov
cmp
jbe
add
cmc
lods
xchg
xor
jp
xor
xchg
aaa
inc
sbb
add
adc
dec
fidivrl
movsl
push
pop
adc
stos
push
pop
loope
out
shll
inc
add
mov
addb
mov
loopne
add
enter
push
push
and
test
add
mov
jnp
inc
add
mov
outsb
inc
inc
cmpsb
fdivrs
xor
jo
daa
add
pusha
add
nop
arpl
add
jno
cmpsb
xchg
and
push
or
jge
int
addb
cmp
sbb
adc
in
xlat
inc
jge
fwait
mov
dec
sbb
add
push
and
push
adc
icebp
sbb
int3
outsl
iret
xlat
pop
mov
xor
add
js
test
mov
outsb
addb
cmp
or
insb
mov
mov
aas
jns
mov
jg
jnp
cld
std
lds
xchg
push
leave
fucomi
les
ljmp
mov
icebp
jns
mov
adc
dec
push
sbb
xchg
gs
cmc
xchg
push
pop
add
add
and
into
hlt
lret
xor
add
negl
mov
std
sbb
add
push
out
sub
pop
mov
in
stos
loopne
icebp
dec
jp
int
mov
mov
outsl
mov
fdivs
jae
pusha
add
fldenv
xor
cs
push
jno
enter
call
pop
push
ret
in
fcomps
in
xchg
sbb
sbb
add
add
cld
mov
aam
movsl
inc
xlat
popf
out
add
xchg
mov
add
scas
fs
add
neg
adc
inc
add
repnz
mov
test
daa
push
and
clc
push
add
push
fisubrl
xor
sbb
add
xchg
sbb
jmp
aad
addb
and
adc
clc
xlat
cmp
mov
cmp
mov
test
ret
rcll
inc
add
xchg
into
in
jns
mov
imul
xor
sub
in
cltd
es
lret
int3
pop
imul
out
lea
add
mov
push
adc
aas
mov
cmpsl
stc
or
mov
push
cmp
push
ret
adc
bnd
dec
xchg
pop
in
mov
rolb
adc
mov
dec
in
fimuls
jmp
push
fisttps
icebp
pusha
add
dec
daa
and
xor
and
lcall
dec
repnz
push
fbld
add
inc
pop
xor
add
cmpsb
nop
mov
pop
add
ss
xor
mov
inc
pop
push
fcmovnu
add
inc
mov
push
adc
jle
iret
ljmp
jmp
xor
pop
mov
lods
loopne
dec
and
add
add
fsubrl
adc
cmpsl
mov
ret
jo
dec
movsb
adc
xchg
add
push
addb
dec
mov
or
cmp
into
and
bound
pop
nop
mov
fwait
adc
push
sti
mulb
pop
mov
loopne
fsubs
pusha
add
push
add
pop
pusha
add
loopne
int
dec
jge
and
movsl
mov
pusha
add
mov
insb
jmp
sbb
mov
adc
cli
lods
enter
rorb
dec
mov
popa
fs
test
add
sbb
aad
pop
push
mov
xor
push
ret
push
adc
add
inc
ds
nop
out
lds
sbb
bound
rcrl
js
add
movsb
ficomps
inc
outsb
push
jmp
add
scas
lods
xchg
and
cmpsb
out
dec
aaa
sbb
addr16
js
imul
push
lcall
lock
or
movsb
and
lock
subl
pop
cs
loop
push
cmp
nop
and
cmpl
es
dec
sarb
mov
aad
push
add
mov
mov
add
faddp
add
cmp
xor
sub
neg
cld
aam
sti
mov
divb
inc
aam
push
sahf
aam
push
rolb
bound
jl
xlat
test
pop
sbb
movsl
inc
hlt
push
jne
inc
add
das
gs
dec
push
roll
sbb
push
in
fs
lcall
jno
inc
add
mov
mov
sub
add
lea
dec
inc
popf
adc
add
add
sub
jl
jle
push
les
mov
jp
xor
popf
jbe
add
jae
cld
ljmp
jo
dec
push
inc
add
add
add
jg
dec
in
rolb
and
movb
insb
ret
gs
jge
dec
arpl
ret
movsb
inc
add
movsl
loope
mov
sti
mov
add
push
jmp
andl
cmp
data16
dec
cmp
in
enter
inc
add
rolb
xchg
jmp
jecxz
inc
xor
aaa
jo
lock
and
sub
mov
sahf
inc
inc
add
lods
push
jbe
push
dec
les
push
in
push
out
cli
movsl
rolb
push
pop
sti
out
xor
ret
ret
adc
cmp
xor
mov
add
pushf
mov
push
mov
add
xor
dec
dec
std
scas
or
stos
pop
ret
rcrb
sbb
mov
sbb
aad
add
push
pop
nop
aaa
add
fdivr
lea
jae
add
pop
pop
fsubrp
rorb
pop
cmpsb
movb
mov
insl
jle
xor
ficomps
sar
push
ret
add
push
and
imul
test
cmp
sbb
add
das
dec
and
xchg
sub
loopne
mov
adc
aas
mov
aad
mov
xchg
stc
pop
lahf
push
dec
pop
movb
fimuls
jo
call
aas
mov
movb
decb
test
mov
add
dec
lock
lock
imul
pop
sbb
cmp
aad
and
test
adc
jge
aad
cmp
cmpsb
mov
add
shll
sbb
xchg
fs
fcmovnbe
fs
shlb
pop
mull
add
pop
stc
cld
mov
add
fildll
mov
mov
aad
test
pusha
add
add
filds
insb
jbe
jns
dec
adc
add
push
sbb
into
xchg
xchg
test
pop
or
and
add
adc
add
xchg
fildl
jb
fisubl
push
repz
leave
mov
out
aaa
push
shlb
pop
lods
movb
mov
fucomip
sbb
clc
jle
pop
mov
inc
jecxz
adc
push
int
ds
fs
push
sbb
mov
dec
bound
int
mov
addb
negl
popa
jo
test
loope
out
dec
test
mov
lahf
imul
add
mov
or
lret
jae
mov
test
mov
stos
mov
sub
dec
push
jns
xchg
mov
frstor
inc
neg
fnstcw
cmp
xchg
outsb
sti
mov
filds
xlat
jle
or
pop
movsb
mov
mov
mov
jo
std
xchg
cmpsl
adc
jno
addb
and
push
and
int
adc
cmp
stos
jge
push
jmp
pop
xor
xlat
and
lock
mov
push
clc
out
jmp
pop
ficompl
cmp
rcll
add
pop
popa
push
jo
lods
nop
mov
xlat
or
mov
mov
add
mov
inc
xor
ret
push
popa
jnp
imul
jns
ja
fcomps
cs
cmp
cvtdq2ps
or
int3
dec
out
push
lock
push
or
add
loopne
js
popa
xchg
xchg
mov
cld
int
cmp
add
jl
out
add
jb
sbb
incl
inc
add
jle
pushl
fadd
xor
int3
jmp
mov
xor
dec
mov
sbb
jns
add
das
fisttpll
jbe
mov
popl
cmp
add
hlt
push
add
push
cltd
mov
pushf
sbb
add
test
aam
mov
repnz
cmp
push
and
xchg
or
mov
mov
sti
and
ret
mov
fistpll
jne
sub
insl
sbb
fldl
mov
or
lods
mov
jns
add
add
iret
int3
cld
pop
push
nop
add
add
mov
jmp
mov
add
mov
cmp
outsb
cmpsb
lods
jp
popf
repz
push
mov
repnz
and
leave
push
clc
sbb
lahf
jp
xchg
test
jmp
popa
inc
mov
or
int
adc
jo
xor
xchg
rorl
pop
sbb
adc
cmp
out
cmp
xor
mov
add
xorl
scas
cmpsl
repz
mov
add
mov
lea
xchg
gs
fbld
das
or
jecxz
into
push
and
test
xor
outsl
dec
jns
mov
leave
enter
add
ret
ja
fnstenv
xchg
push
ds
rep
mov
mov
add
aad
inc
add
loope
test
cmp
jne
sub
pop
adc
test
movsw
das
ljmp
add
push
push
scas
xchg
in
cs
iret
jecxz
mov
mov
pop
les
adc
enter
add
jg
js
push
or
lcall
fsubs
pushf
test
sbb
pop
pop
mov
xchg
nop
repz
std
fs
xor
mov
mov
int3
popa
gs
add
add
cmpsb
jns
shl
cltd
sbb
ljmp
push
xor
pop
sbb
inc
add
ja
lret
dec
mov
test
sahf
scas
xlat
pop
fdivr
xor
add
and
repz
loop,pn
imul
jno
add
adc
in
fdivs
js
lret
call
and
and
imul
push
add
cmpsb
into
or
add
sarl
imul
es
lods
int
mov
adc
xchg
ss
jmp
sub
jg
jge
push
mov
sbb
loop
cli
call
push
lahf
fdivl
scas
xchg
fs
xor
sub
sbb
add
je
pop
mov
add
mov
xor
repnz
adc
lock
loopne
jecxz
add
sbb
addb
jecxz
fimull
xor
icebp
iret
jge
mov
fdivrs
sahf
mov
pop
cmp
sub
xlat
dec
test
pop
inc
ja
push
push
push
aad
pushf
call
mov
sub
aam
adc
mov
out
push
bound
and
push
clc
aad
dec
test
fdivrl
pop
je
mov
pop
mov
push
loop
aam
add
popa
loope
pusha
add
add
sub
cmp
add
and
xor
add
pop
push
sub
sub
outsb
cmp
loopne
fs
popa
jb
add
popa
pop
jae
cmpl
dec
repnz
cmpsl
loop
add
xchg
test
nop
mov
aaa
in
stc
xor
dec
sbb
xchg
add
cmp
loope
add
jbe
or
push
sub
dec
mov
aad
mov
ljmp
enter
jae
lock
add
inc
add
btr
into
jge
pop
xchg
lahf
cs
fisttpl
aaa
iret
repz
stc
and
lock
jp
add
pop
adc
in
iret
mov
fwait
iret
and
mov
jle
mov
mov
xchg
pop
repz
mov
loope
dec
dec
imul
data16
ss
sahf
movb
add
mov
test
les
mov
add
pop
imul
push
xchg
push
add
inc
ds
sahf
inc
add
cltd
les
jbe
iret
cs
shll
and
mov
jmp
xchg
int
cmp
negl
dec
jmp
ss
xchg
cmp
push
inc
add
lds
dec
lahf
push
mov
sub
sub
cltd
cs
lret
dec
or
add
add
test
test
lods
lret
xor
sbb
cmpsb
push
mov
jo
loope
daa
cmp
sub
xchg
test
leave
dec
pop
cs
add
js
test
scas
or
dec
imull
add
ljmp
xrelease
js
push
lea
add
sub
add
aaa
in
jne
xlat
sbb
test
std
das
or
mov
add
add
icebp
stos
and
and
shl
cmc
mov
add
sub
xchg
xor
adc
hlt
test
cmp
and
add
dec
mov
int
or
pop
pop
ficoms
push
xchg
mov
mov
loopne
cmp
mov
jecxz
add
jb
mov
add
adc
mov
xchg
movsl
lods
pop
outsb
dec
jmp
mov
pop
cmpsb
nop
dec
jl
add
gs
mov
cs
add
das
xor
lahf
call
mov
xor
inc
fstpl
inc
add
test
mov
jmp
je
push
out
imull
xor
int
out
mov
sub
aam
push
jmp
jno
xor
adc
ja
push
add
inc
add
or
out
lret
push
cmpsb
mov
stc
add
push
add
fcomip
shlb
mov
mov
ja
repz
and
cmc
pop
scas
xchg
data16
mov
mov
in
pop
fcmovnu
cmc
rolb
rorl
jge
adc
mov
push
fimull
or
add
rolb
or
pop
sbb
jbe
imul
ds
xchg
add
mov
sub
insb
dec
je
lock
or
dec
arpl
and
lea
rcrb
jp
pop
aam
sbb
mov
sahf
add
mov
mov
mov
sub
cmp
or
add
fsubrp
fnstenv
mov
int
and
add
mov
std
lret
sub
and
xchg
cmp
ss
pop
xchg
and
sbb
jns
xchg
xchg
out
mov
mov
add
mov
and
or
mov
mov
mov
add
adc
dec
pop
sbb
mov
jle
call
cld
scas
pusha
add
mov
jb
addb
or
movb
movsl
dec
mov
push
inc
fdivl
enter
inc
add
daa
stc
insl
adc
push
push
cwtl
imull
push
lds
add
out
inc
mov
out
mov
dec
scas
addb
lret
sbb
add
xchg
stos
mov
ss
mov
push
test
mov
lds
push
pushf
adc
mov
or
mov
jo
xchg
cmpsl
fadds
xchg
inc
scas
jg
in
mov
jns
mov
mov
push
xor
jl
add
lods
shr
sub
das
adc
fadds
or
xchg
cmpsl
cmp
mov
add
and
fsubrp
jns
push
sti
mov
xor
loope
shll
add
adc
xchg
pop
test
test
or
jmp
cmp
xchg
stc
sbb
inc
add
sub
xchg
cltd
repz
sub
lret
dec
data16
or
add
pop
add
stc
nop
fcomp
push
lcall
add
lcall
daa
or
mov
popa
addr16
jo
sbb
cmp
stc
in
lods
or
fcompl
movsb
sub
mov
cmp
push
or
cmpsl
push
add
xchg
fistl
mov
dec
xor
es
add
mov
inc
jns
jle
imul
cmp
pop
jo
rolb
movsl
cmp
mov
ret
data16
insb
push
leave
rolb
leave
xchg
out
dec
or
sub
fsubrs
icebp
mov
push
fnstcw
test
repnz
outsl
push
ds
add
rclb
mov
repnz
jg
jl
mov
loop
sub
popf
sub
fstp
scas
lock
mov
add
fwait
inc
add
jp
add
cmp
xchg
in
xor
je
test
add
mov
jb
pop
dec
mov
stos
xor
sarb
add
sub
cmpsl
xchg
ds
mulb
or
and
repnz
pushf
out
addb
lea
stos
sub
out
outsl
xlat
repz
rolb
mov
in
xchg
cmc
fiaddl
stos
mov
push
cmp
movsl
lcall
and
push
sub
rolb
fadd
cmp
add
test
jecxz
add
inc
stc
and
lcall
mov
jecxz
add
leave
loop
add
insb
out
enter
arpl
push
add
roll
and
and
movb
jno
sub
loope
inc
add
adc
jno
stc
xchg
mov
dec
xor
andl
mov
jmp
cld
aad
es
fldl
xor
and
cmp
or
add
jmp
sbb
cs
ss
jns
add
sbb
add
popf
int3
push
cli
jmp
dec
addb
add
int
das
lahf
xchg
mov
xchg
and
and
popf
out
loopne
mov
push
pusha
add
jno
jle
out
das
dec
xchg
xchg
insl
xchg
pop
mov
push
adc
mov
adc
sub
repz
nop
xchg
push
or
and
or
clc
je
jl
push
and
sub
add
inc
mov
cmp
add
sti
inc
add
adc
dec
cmpsl
and
mov
mov
lret
dec
inc
sbb
cmc
xor
xor
shlb
and
add
enter
scas
mov
jg
arpl
and
insl
loope
pop
xlat
adc
xlat
cmpsb
mov
jge
jbe
dec
jg
jle
icebp
inc
add
divb
add
cmc
int
xor
pop
jnp
mov
pop
mov
jmp
popf
aaa
outsb
jns
sahf
sti
punpcklbw
dec
jb
inc
js
add
popa
cmp
add
xchg
jns
loop
cmp
enter
push
pop
cld
test
mov
mov
lds
repz
push
xor
pop
out
lcall
pop
mov
xchg
push
rolb
mov
shrb
imul
decb
xor
jns
add
mov
push
mov
mov
popa
gs
pop
add
inc
add
cmpsl
icebp
test
dec
mov
int3
jno
cld
ja
cmpsb
test
add
ficompl
es
mov
add
inc
add
mov
add
mov
push
sbb
add
test
jecxz
icebp
add
mov
inc
add
jno
cmp
popa
pop
jle
push
cmp
mov
add
cmp
addb
sub
cmp
sbb
adc
cmpsb
sub
jne
mov
rolb
jae
add
and
addb
jle
inc
cltd
jnp
fistpll
cmp
cltd
incb
push
adc
or
adc
pop
cli
xor
xchg
imul
rcl
add
roll
cltd
add
out
xor
sub
sub
or
inc
add
add
sahf
adc
rcll
sbb
adc
pop
rorl
push
addr16
iret
cli
cmp
pushf
adc
xor
mov
xchg
pusha
add
fwait
insl
add
push
sbb
fs
scas
push
jb
add
lret
jecxz
xchg
mov
in
decb
sub
jp
jae
jae
adc
mov
pushf
push
xchg
or
loopne
push
add
mov
add
add
test
add
cmc
or
add
jae
clc
mov
pop
test
mov
inc
add
lods
cmpsl
sub
push
addb
in
bound
push
nop
enter
add
repnz
adcl
add
inc
add
aaa
lret
dec
push
scas
icebp
jns
pop
lods
add
pop
repz
jl
jecxz,pt
aad
sub
or
add
loop
lds
fwait
push
sahf
loope
out
push
sbb
add
jno
pop
ret
movb
xchg
movsb
sub
sysenter
xchg
push
pop
inc
add
les
popa
sub
jbe
cmpsl
pop
push
xchg
aad
std
into
in
pop
xchg
xlat
fs
sbb
bound
inc
stos
sbb
pop
cmc
mov
sub
popa
adc
and
outsb
xchg
test
insl
adc
mov
add
int
in
int
lds
push
scas
pop
out
dec
cmp
push
insb
dec
cli
addr16
add
or
mov
add
in
addl
mov
movsl
loop
pop
fldl
xor
add
add
inc
add
xor
xchg
sbb
lahf
mov
dec
call
xchg
in
mov
adc
add
or
shll
bound
nop
push
repnz
cmpsb
call
cmpsl
jae
adc
add
sahf
cmp
push
add
add
pop
xchg
adc
push
push
clc
popa
popf
fimull
mov
sbb
dec
popa
mov
pop
js
add
cmp
icebp
and
out
nop
out
push
xchg
dec
lock
cmp
popf
cs
addb
mov
imul
movsb
dec
loope
cmp
xchg
pop
out
push
loope
aaa
jbe
nop
ja
stos
or
jns
movsl
sub
movsl
mov
add
xor
jne
insb
gs
and
inc
sbb
addl
add
push
outsl
adc
jecxz
jb
into
repz
add
cli
addr16
xor
testl
adc
push
rcll
jno
mov
bound
or
lea
repnz
sub
or
inc
dec
xlat
lods
jmp
or
or
lahf
in
arpl
add
outsb
cs
cmc
inc
mov
pop
push
mov
movsb
lds
pop
fcoml
insb
mov
sbb
movb
mov
dec
loope
push
add
xor
jecxz
push
out
stos
jle
dec
jno
jge
add
add
sub
js
add
sbb
pop
sub
in
cmpsb
pop
mov
js
jmp
xor
fldcw
jns
jg
addr16
xchg
mov
push
sub
jge
mov
pop
fcmovbe
adc
add
xchg
incb
add
hlt
lahf
hlt
jl
push
repz
adc
notl
push
add
add
or
pushf
insl
outsb
shrb
add
add
out
sti
push
sbb
cld
mov
xor
fbstp
fldenv
dec
arpl
and
jbe
mov
push
or
dec
sub
push
divl
add
std
testl
jle
add
inc
add
jecxz
dec
xchg
add
push
sbb
mov
nop
stos
pop
jp
sub
add
xlat
out
inc
add
add
add
or
push
mov
ficomps
stc
lret
movsl
cltd
je
inc
add
idivb
mov
lret
mov
mov
xchg
mov
mov
push
pop
jle
aaa
xchg
sub
hlt
push
mov
sub
add
cmp
add
rcl
cld
mov
add
fnstcw
std
js
ficoml
jmp
dec
std
mov
jge
pop
ljmp
test
push
mov
lods
movsb
in
add
adc
cmpsb
and
stos
xor
add
adc
enter
dec
cltd
lret
jl
mov
mov
or
insl
filds
and
nop
pop
ljmp
rorl
push
je
fnstenv
into
pop
xor
add
push
lods
hlt
add
jp
push
jo
add
mov
ror
push
jnp
xchg
xor
adc
xor
cmc
les
jmp
loop
mov
clc
test
movsl
add
pop
in
inc
add
add
jmp
sarl
or
push
jb
add
push
aam
xchg
jo
mov
in
iret
and
test
repz
adc
add
scas
imul
adc
in
and
mov
jmp
push
jle
xchg
lret
and
insl
cmpsl
xchg
xchg
pop
aad
mov
sub
cmc
fistps
scas
leave
aad
lret
add
into
loop
je
and
xor
xchg
xchg
sub
fs
ret
pushf
push
je
xor
fwait
cltd
xchg
inc
add
add
popf
add
cwtl
movsb
enter
test
mov
rolb
call
xchg
cmp
add
ffreep
out
mov
add
pop
icebp
pop
jecxz
aad
aas
xor
cs
cs
insl
into
stos
cmpl
xor
addb
or
add
clc
movb
into
or
divb
and
repz
jp
sub
loop
jl
mov
add
fsubrl
stos
xchg
mov
push
jmp
add
fldenv
out
addb
jne
addb
insl
movb
add
stos
push
into
pop
aaa
fisubl
jb
in
out
add
in
bound
fstp
xor
out
dec
inc
push
or
mov
dec
aas
imul
add
push
ret
sub
add
sbb
leave
mov
test
sbb
add
xchg
loop
js
nop
push
gs
test
xchg
ds
mov
push
inc
in
out
into
js
add
push
cld
pop
jg
int3
push
pop
mov
outsl
ja
out
mov
insl
pop
fsubl
jo
cltd
sub
jno
fisttpll
inc
add
xor
ds
mov
push
mov
lret
and
outsb
xor
insl
pop
sub
xor
in
push
mov
je
add
add
add
xchg
movsl
mov
jmp
inc
add
mov
xor
lret
mov
cltd
nop
das
xchg
mov
mov
add
jl
movsb
and
pop
dec
clc
daa
mov
incl
jae
cmpsb
add
jg
xlat
test
push
mov
mov
insl
xor
cmp
adc
test
mov
add
mov
pushf
mov
in
leave
test
pop
call
pushf
stos
stos
popa
imul
iret
aas
push
add
jg
mov
xchg
fisttpl
xlat
cld
addl
arpl
pop
out
ja
add
xchg
in
out
shl
cmpsl
les
or
scas
loopne
popa
inc
add
repnz
xlat
cld
push
popf
mov
jp
movsb
negl
add
pop
adc
jp
inc
lods
fisttpll
pop
sbbl
lock
sysret
mov
lcall
push
xchg
mov
mov
jbe
call
add
or
cmp
loop
scas
inc
add
fst
pop
aaa
hlt
imul
movb
mov
dec
scas
add
inc
add
jle
pop
lahf
adc
outsl
fwait
out
sub
arpl
pop
lret
js
adc
ret
lahf
out
mov
pop
pushf
jb
xchg
mov
pop
add
and
add
xor
push
sub
mov
fmul
jecxz
add
mov
sbb
lods
fadd
jbe
movb
outsl
ljmp
adc
and
pop
push
mov
dec
sub
push
xor
inc
add
pushf
cli
sbb
dec
aas
mov
xchg
testl
add
pop
cmpsb
shll
sbb
jecxz
push
add
mov
push
lds
inc
addb
sbb
popa
dec
pop
or
dec
or
xchg
sub
pushf
and
dec
imul
add
pushf
mov
lea
mov
test
sub
xchg
add
push
cmpsl
in
addb
add
cs
jns
js
add
push
cmp
cli
sahf
add
sbb
std
int
jo
adc
dec
int3
sbb
mov
xchg
sbb
add
add
xchg
push
ret
in
xor
frstor
xor
mov
fwait
pop
push
ffree
add
dec
ds
es
push
jne
add
xchg
fisttps
lods
or
int3
mov
lahf
and
xor
out
inc
add
stc
cmp
and
dec
pop
or
mov
dec
cwtl
stos
xlat
ljmp
and
dec
fs
fucomi
movb
sbb
loop
add
clc
dec
stc
adc
add
add
mov
into
pop
mov
or
stos
cmpsl
add
test
inc
ja
in
es
jns
adc
sub
lret
mov
int3
mov
mov
insb
xchg
in
hlt
mov
in
pop
cli
imul
sbb
rolb
pop
mov
mov
add
inc
xchg
jae
or
ret
movb
pop
push
scas
inc
add
cmp
inc
mov
xlat
xor
or
xlat
mov
add
ljmp
lret
jp
fnstsw
mov
jl
pop
xor
arpl
pop
sub
mov
movsl
pop
pop
dec
je
fldenv
addr16
lcall
cmpsl
mov
popf
addb
and
out
test
adc
lcallw
pop
sbb
adc
adc
mov
out
pop
call
les
add
orl
f2xm1
pop
push
xor
mov
and
enter
or
add
dec
add
rep
inc
add
pop
push
sbb
cmp
mov
adc
xchg
cmpsb
lret
pop
or
cs
clc
mov
inc
add
mov
adc
rcrl
fildll
int
push
xor
mov
and
bound
cli
cmp
add
add
mov
push
mov
addb
ja
xor
ja
out
out
cmp
jb
mov
test
xchg
and
mov
rcl
lds
mov
rcrl
mov
push
jp
mov
sbb
inc
movl
movsb
test
inc
add
test
add
negl
dec
mov
push
and
ds
dec
sbb
and
neg
leave
cltd
dec
decl
lahf
lret
lods
pop
cwtl
testl
xchg
cld
rolb
and
ret
repz
call
dec
or
mov
or
lahf
data16
and
sub
fneni(8087
cmpsl
int
add
push
stos
fldt
lock
mov
add
add
add
imul
stos
idivb
xor
loopne
add
hlt
int3
int
jecxz
add
sbb
xchg
lea
adc
mov
and
pop
pusha
add
hlt
clc
push
lret
push
mov
mov
push
xor
push
push
stos
add
dec
jp
add
and
xor
repz
popa
mov
jmp
fcom
pop
stos
push
push
add
call
push
movsl
aad
add
test
mov
push
pusha
add
sub
filds
jns
add
arpl
out
popf
int3
and
insl
out
push
jbe
add
adc
add
gs
icebp
dec
cld
in
jne
iret
adc
xchg
dec
das
sbb
cmp
nop
imul
and
test
add
es
mov
aaa
xchg
xor
popf
lret
into
dec
pop
iret
mov
jo
sarl
add
sbb
cmp
in
test
inc
pop
sub
call
mov
jmp
iret
mov
enter
mov
aaa
mov
lcall
pop
movsl
pop
negb
mov
pop
enter
sbb
int3
iret
inc
add
je
xchg
cwtl
fcomi
add
jo
jmp
push
inc
lcall
add
hlt
popf
mov
call
mov
loope
loopne
fists
stos
jno
jb
out
gs
movsb
push
insl
bound
jb
push
add
add
sbb
push
int3
in
out
mov
xor
leave
cmp
aaa
bound
mov
jg
out
rorb
mov
aaa
inc
add
jmp
mov
adc
into
adc
add
imul
sub
adc
mov
inc
add
jle
mov
jp
push
dec
sub
and
jne
add
jne
movsl
and
add
add
push
jb
mov
mov
add
out
sarl
repz
scas
call
js
std
lahf
das
not
fimull
aas
push
mov
add
cmpsb
fimull
push
ret
loope
and
mov
and
or
or
cmp
fmull
sbb
cli
jns
movsb
xchg
xor
inc
pusha
add
sbb
mov
pop
aad
xchg
jmp
loope
mov
pop
addb
pop
jmp
repnz
mov
es
jle
in
in
imul
std
icebp
mov
jae
pop
addb
cmp
mov
or
repnz
and
add
inc
in
mov
pop
fbld
jb
call
out
mov
shrb
pop
jle
add
addb
cwtl
or
imul
mov
inc
add
xchg
add
addb
add
test
push
cmp
dec
aas
in
out
enter
enter
stos
scas
movsl
lret
lahf
lret
lret
clc
xchg
pop
and
es
dec
dec
push
xchg
jmp
add
fildl
mov
addb
jno
addb
cmp
mov
pop
fidivl
sub
jge
hlt
xchg
pop
leave
pop
pop
cmc
addb
mov
cltd
add
xor
jmp
add
outsl
mov
push
mov
insl
js
cvtps2pd
sbb
inc
add
cmp
movsb
adc
out
jnp
push
pop
stos
and
data16
push
pusha
add
jbe
sbb
add
cmp
mov
jle
jg
cli
or
xlat
push
push
bound
cs
fiaddl
pushf
movsb
add
ret
add
pop
addb
xchg
fistpl
mov
mov
aaa
call
fisubs
xchg
jne
jl
shll
cmp
add
decb
xchg
es
add
ss
add
es
gs
addb
and
inc
add
aad
jns
pusha
add
jo
push
fwait
xchg
fcmovnu
xorl
test
cltd
push
into
fadd
cli
iret
imul
lahf
mov
xor
mov
sti
scas
jno
lods
xchg
repz
push
mov
rorb
dec
push
lods
fiadds
or
xor
pop
fmul
fwait
repz
aad
mov
xor
aaa
mov
mov
add
xchg
mov
faddp
add
lret
leave
push
mov
fmuls
jmp
orl
sub
lock
add
insl
adc
lds
mov
lret
das
out
mov
push
and
mov
pusha
add
dec
in
popa
push
push
xchg
push
mov
add
repnz
in
adc
xor
aas
mov
or
cmp
cmp
add
movsb
add
cld
inc
fcompl
out
lahf
or
sti
aad
pop
dec
cmp
fcomps
fisubl
std
out
out
lods
push
sbb
nop
cmp
add
insl
pusha
add
mov
jge
call
adc
sub
ds
mov
jo
aad
cmp
jge
push
inc
add
add
pop
sbb
add
push
or
ss
or
add
jle
addb
sbb
inc
add
fwait
xlat
sbb
cmp
sahf
lea
pop
adc
mov
movb
inc
or
ljmp
add
lock
sub
xor
add
xlat
dec
insb
divl
sub
or
inc
add
sub
sub
mov
mov
clc
xor
xchg
sahf
sbb
cltd
mov
adc
in
inc
add
and
dec
jno
mov
xlat
jbe
add
jo
es
dec
fwait
jecxz
adc
mov
sbb
xor
pusha
add
cmpsl
outsl
shrd
enter
mov
ss
add
das
sbbl
add
add
shl
addb
int
out
dec
sub
mov
sti
lods
adc
xchg
inc
add
mov
pop
rolb
ljmp
js
sbb
jb
loope
lret
dec
scas
sub
pushf
sub
sarb
inc
pop
pop
jb
aam
into
add
test
dec
js
mov
add
mov
pop
mov
pushf
jo
ret
mov
add
push
imul
mov
adc
xchg
rorb
hlt
add
add
shll
xchg
sub
ja
push
out
jne
rcrl
faddl
popf
stos
lods
sbb
addb
pushf
leave
ret
stos
int3
inc
xchg
sub
or
addr16
mov
mov
add
iret
in
cmp
ret
icebp
push
dec
or
rcrl
insb
push
imulb
xchg
jmp
jecxz
lock
xor
out
sub
adc
add
jb
inc
add
xor
loop
jbe
repz
les
mov
sahf
ds
imul
loope
dec
outsb
sar
pushf
or
xor
pushf
jg
aad
aam
xor
lret
movsb
jns
cmpsl
mov
rorb
pop
sti
cli
arpl
mov
movsl
mov
xchg
push
xlat
sahf
sub
adc
mov
add
popa
xor
cwtl
xlat
xor
data16
fsubs
lcall
inc
add
outsl
sub
push
std
mov
pop
mov
add
cs
sub
insb
lods
out
aam
mov
inc
in
pop
mov
and
xchg
add
pop
fs
add
mov
popa
xor
and
das
cmc
mov
cmp
mov
in
jmp
sar
aas
rolb
add
test
adc
pop
mov
add
add
lcall
cld
js
or
cmp
sahf
xchg
push
insb
pop
lahf
pop
or
and
leave
or
ret
push
sub
jge
jb
dec
mov
push
outsl
xchg
adc
mov
and
lock
es
std
jbe
movsb
call
mov
xchg
dec
loop
into
jns
adc
dec
pusha
add
add
out
cmp
cmpsb
outsl
xchg
sbb
sbb
pop
imul
sub
cmc
and
and
and
add
sbb
aad
push
dec
push
add
jno
cmp
fsubs
add
xlat
insl
stc
scas
cltd
into
iret
xchg
sub
fnstenv
sub
dec
addb
addb
push
xor
push
pop
jmp
cmpsb
adc
xchg
out
lahf
rolb
xchg
arpl
repz
cmp
hlt
fildll
add
fucom
and
loope
add
imul
mov
jg
mov
add
in
or
sub
dec
and
add
into
jle
ja
push
dec
jmp
outsl
and
push
pop
sub
pop
cmp
mov
test
adc
xor
jmp
sbb
or
xor
cld
fdivr
ret
adc
out
pusha
add
cltd
pop
xor
stos
cwtl
xchg
pop
cld
mov
mov
mov
int
mov
pop
mov
cld
inc
pop
outsb
data16
inc
xchg
movsl
testb
add
mov
add
nop
xor
add
pop
addb
push
mov
cmp
or
add
xor
fstps
pop
nop
gs
or
sahf
jg
mov
testb
push
insl
mov
mov
or
mov
fildl
add
cmpl
xchg
push
mov
xlat
mov
xchg
jb
push
push
sub
cmp
add
add
jbe
jae
add
dec
or
xor
inc
in
mov
mov
dec
mov
stos
lcall
add
or
je
add
iret
aaa
jb
xor
adc
mov
imul
adc
mov
int
jle
or
sbb
xor
lock
test
sub
int3
loopne
push
test
add
push
loope
enter
xchg
push
dec
pop
xor
stos
fidivs
sarb
fwait
add
lcall
lea
or
add
lea
incl
in
clc
cbtw
repnz
in
or
repz
in
jnp
add
cmc
jns
sbb
inc
add
outsl
adc
out
push
mov
loop
fs
in
jmp
sub
mov
addb
aas
sub
in
xchg
push
pop
bound
adc
or
add
mov
aaa
and
out
jle
jle
push
jl
add
movb
add
hlt
xchg
jp
jmp
adc
sbb
inc
add
int3
jbe
dec
out
aam
push
pop
outsl
jo
je
mov
test
je
dec
mov
rcl
imul
or
test
insb
xor
pusha
add
in
push
nop
bound
ret
cmp
adc
jbe
xchg
out
cmp
stc
fstpt
push
add
jmp
inc
add
add
lret
testb
inc
and
xchg
insb
jp
lods
stos
xchg
mov
mov
hlt
dec
dec
sti
dec
xchg
xchg
sbb
and
dec
cmp
adc
sub
arpl
push
dec
dec
or
arpl
jge
lret
mov
stos
pushf
ds
lcall
add
call
sarb
mov
cmp
push
movsb
lret
inc
add
dec
or
cmp
or
stc
addr16
ljmp
sbb
push
fwait
cmp
mov
arpl
out
xor
shll
and
leave
lahf
scas
es
in
stos
in
mov
dec
frstor
add
push
stos
sbb
sbb
rolb
xchg
stos
test
add
rolb
add
jno
cwtl
cs
mull
push
cwtl
cs
sub
stc
mov
das
andl
push
mov
pop
test
push
and
xor
xchg
jge
sti
shlb
in
sub
scas
adc
insl
push
xor
mov
xor
es
pop
mov
xlat
push
lcall
sbb
test
dec
roll
cmpl
iret
xchg
loopne
mov
sbb
fimull
inc
ret
and
popa
les
fs
mov
jmp
add
cltd
movb
idiv
jl
lea
sub
pop
repz
into
test
addb
mov
mov
data16
mov
cmp
sbb
or
add
pop
clc
cltd
outsl
cmp
mov
sbb
std
add
cmp
add
mov
jno
movb
cmp
xor
sbb
sbb
add
dec
add
cmpsb
xchg
fldln2
xchg
push
repnz
jno
movsl
lock
xor
addb
jmp
lods
jbe
xor
testb
or
adc
shll
cmp
and
dec
insl
mov
xor
sahf
ss
js
mov
xchg
stos
mov
sub
sub
mov
add
mov
rclb
add
xchg
addr16
add
js
in
xor
addr16
push
add
mov
xchg
push
or
cltd
fmuls
std
sbb
adc
inc
lock
xchg
xchg
push
decb
pop
call
dec
out
dec
cld
mov
add
add
scas
fs
addb
or
add
add
fwait
pop
pop
sbb
add
mov
sub
xor
jbe
mov
pop
sbb
insb
mov
pop
repz
jmp
pop
imul
iret
psrlq
in
call
sub
andl
mov
push
daa
mov
jecxz
bndstx
dec
sahf
xchg
shl
ja
stos
rcl
loop
shrl
mov
add
adc
jns
jge
movsl
jae
mov
jo
out
loope
sbb
add
jge
push
mov
sahf
call
pop
xor
rolb
clc
jp
cmp
repz
rolb
inc
or
mov
popf
ret
dec
pop
sbb
or
jg
lods
mov
fldl
add
fldcw
cld
mov
inc
add
das
push
add
sbb
je
add
imul
ljmp
mov
add
fst
out
rcrl
test
add
cld
pop
pop
inc
add
dec
push
or
mov
xlat
inc
shll
add
add
add
add
add
mov
cmp
stos
and
ja
rorb
sbb
sbb
testl
jb
nop
cmp
inc
add
stos
in
ljmp
add
in
xchg
push
lds
mov
add
mov
dec
int3
mov
popa
push
lock
out
push
shrb
push
js
ljmp
popa
cmpsb
mov
inc
push
or
xor
xor
dec
arpl
or
out
sahf
addb
jge
mov
mov
push
lds
repz
ret
rorl
jae
test
imul
push
add
add
iret
addb
fdivl
jnp
inc
mov
lds
add
fnstcw
add
jmp
sbb
scas
mov
sub
jmp
add
clc
icebp
scas
fwait
mov
xor
jle
xchg
bound
dec
jbe
push
add
loope
add
shr
pushf
pop
test
addb
pop
mov
push
pop
shll
ret
sub
into
jae
sbb
add
mov
add
cmp
add
repnz
les
stc
xchg
and
push
enter
out
out
add
aaa
rcll
mov
cmp
push
mov
xchg
sbb
sub
sub
rcl
and
fyl2xp1
cmp
movb
add
push
mov
mov
mov
push
addb
lret
ja
add
jecxz
add
xchg
clc
mov
and
xor
ja
inc
dec
inc
add
insl
adc
lods
adc
loop
xor
int
mov
push
aaa
xor
mov
out
loop
inc
add
or
test
jo
std
jecxz
test
dec
xlat
les
loopne
pop
aam
js
push
push
cmpsb
pushf
mov
scas
push
push
lret
out
and
mov
xchg
push
jns
outsl
or
out
inc
imul
ficomps
inc
xchg
aam
xchg
js
enter
lahf
jae
into
adc
in
cmpsb
sbb
popa
stos
dec
mov
shl
xchg
or
les
stos
mov
out
jae
sti
mov
pop
dec
sub
push
jecxz
mov
cmp
outsl
loope
add
ficoml
inc
add
call
fbld
add
push
lret
mov
leave
incb
incb
mov
test
mov
movsl
or
add
add
es
mov
or
adc
add
sbb
cmp
test
sbb
lret
les
aas
cli
and
adc
stc
sub
aaa
or
add
or
or
jne
outsl
xlat
jecxz
mov
fcoml
aad
mov
cmp
push
add
xor
or
add
or
cmp
or
adc
cli
leave
into
sub
jp
push
addr16
out
addb
mov
pop
jnp
sahf
arpl
add
push
hlt
lcall
xor
out
add
pop
sbb
test
iret
pop
inc
mov
add
push
loope
dec
insb
roll
mov
dec
cwtl
addl
add
add
push
pop
pop
lret
movsl
movb
bound
jle
push
pop
or
dec
and
push
push
packssdw
xchg
pop
sti
scas
popf
inc
adc
pop
aad
test
add
out
mov
sbb
cmp
imul
shlb
les
push
shrl
pop
or
adc
add
xchg
or
out
push
sti
mov
jne
mov
imul
bound
jecxz
mov
mov
fdivrl
jmp
adcl
cmp
hlt
mov
cmp
mov
leave
inc
add
addb
movb
dec
cwtl
lret
fwait
or
mov
fistpl
vpunpckhqdq
dec
push
gs
outsb
xor
call
add
sahf
jb
loop
cli
icebp
rolb
jge
sub
add
mov
rolb
rolb
cmc
mov
xor
jl
pop
push
push
pop
xchg
test
jno
cs
xchg
mov
into
sub
ret
sub
add
or
cmp
add
jmp
gs
ficompl
arpl
add
ja
stos
ret
and
fs
dec
pop
lock
add
mov
pop
push
add
rcrb
inc
add
xchg
push
push
dec
add
dec
sub
loope
add
cltd
push
cmpsb
cmp
xor
popa
addr16
add
in
adc
push
xchg
enter
test
filds
jl
add
push
pop
repz
inc
add
cs
pop
mov
cmp
stos
xchg
jmp
pop
mov
or
jno
lock
fcmovnu
out
mov
mov
jnp
inc
stc
mov
outsw
stos
test
jae
addb
mov
inc
sbb
mov
add
or
in
push
add
push
dec
jns
cmp
sub
pushf
mov
jnp
arpl
mov
int
clc
insl
dec
xor
pop
in
rcll
add
les
shl
pusha
add
mov
rclb
stos
cltd
outsb
gs
add
pop
mov
pop
mov
sub
dec
out
mov
sbb
shll
jmp
add
mov
aaa
jno
push
cltd
xchg
stos
les
add
lds
test
out
add
mov
inc
add
dec
out
clc
jg
lods
cmp
cmc
push
bound
cmp
mov
cmp
bound
mov
mov
mov
mov
add
popf
loopne
stc
inc
add
ljmp
ret
outsl
or
add
sahf
push
mov
in
lcall
stos
mov
inc
add
push
cmpsl
inc
add
mov
lods
sahf
je
pop
scas
rcrb
fdivl
movsb
jle
neg
sbb
xchg
pop
repnz
fdivrl
daa
addb
fists
push
jbe
insl
mov
cmp
add
std
dec
mov
pop
movsb
adc
ja
shrl
hlt
std
imul
cmp
add
xor
and
or
cmpsb
ds
repnz
rolb
scas
lret
mov
mov
fdivrl
ljmp
jae
cmp
sub
imul
testb
shrb
xor
pop
and
fildl
data16
test
mov
xchg
nop
xor
movb
mov
add
cmpsl
or
xchg
xor
cltd
adc
adc
int
in
sub
movsb
fcomi
movsl
cmp
lret
in
add
push
lock
add
add
jmp
inc
add
mov
repnz
ret
add
inc
add
roll
inc
add
mov
or
or
jns
aam
adc
jg
mov
sbb
mov
xchg
cmp
xchg
dec
aad
ret
mov
add
hlt
push
adc
cld
in
add
push
push
imul
aas
stos
push
push
add
gs
sahf
mov
repnz
sub
mov
bound
and
stos
adc
sbb
mov
iret
imul
add
xchg
shr
jecxz
add
inc
add
lds
adc
stos
rolb
adc
stc
jne
push
cmp
stc
mov
add
nop
inc
ret
sahf
addr16
rsm
test
bound
lea
cmp
add
adc
jmp
cmp
inc
xor
jl
sbb
es
or
sub
cmp
push
addb
push
lea
movb
jmp
inc
add
add
dec
sbb
inc
add
movsl
loopne
dec
leave
xor
pop
cs
and
outsl
js
mov
and
incl
in
or
sub
adc
inc
mov
or
lods
jno
nop
sahf
pop
rorl
xchg
mov
mov
aas
movsl
xor
dec
and
mov
stc
adc
push
lcall
mov
mov
lahf
jne
test
xchg
xor
push
mov
call
dec
fcmovnbe
fnsave
xchg
cmp
jge
ret
dec
das
in
pop
lahf
lea
sti
jno
push
mov
xor
add
pop
xchg
sbb
test
mov
push
xchg
add
or
dec
shr
xor
cltd
out
sbb
pop
mov
mov
jno
inc
add
sbb
add
pop
jle
add
call
sbb
add
jb
mov
movsb
fwait
lds
dec
popa
testl
fistpl
pop
fdivrl
out
add
add
insl
xchg
or
fnstsw
pop
ja
aaa
xchg
cli
inc
add
pop
mov
les
push
or
add
dec
sbb
int3
inc
add
ljmp
jmp
cmp
sbb
add
fistpl
sbb
jp
popf
jae
popa
add
ljmp
fcom
xchg
sbb
pop
test
les
jge
mov
hlt
bound
int3
fisttpl
pushf
pop
mov
dec
xor
test
iret
cli
pop
jmp
xor
lcall
add
xchg
inc
mov
gs
xor
lock
not
inc
add
sarb
cmp
aad
repnz
or
fistpll
bound
mov
mov
push
xchg
xor
add
sub
sbb
sbb
insb
int3
ret
add
popf
and
xchg
subl
dec
jp
clc
call
add
es
ss
pop
push
add
dec
addb
mov
mov
add
xchg
dec
addb
jecxz
xchg
sub
and
mov
mov
imul
ljmp
test
cs
fldz
pop
and
lret
pop
sti
inc
add
add
dec
sbb
add
fisubrl
pusha
add
loope
arpl
mov
xchg
pop
and
dec
adc
add
jns
add
div
pop
test
mov
ss
xchg
sbb
iret
add
popfw
sbb
mov
out
cmpsl
fadds
push
movsl
xchg
ljmp
jge
push
jbe
dec
xchg
movsl
mov
cmp
dec
rcrb
mov
push
push
fdivrs
and
gs
ret
push
add
iret
cmpsb
call
adc
repnz
test
lods
add
add
fldcw
add
and
cmp
push
fidivrs
mov
icebp
out
and
sbb
stos
mov
gs
mov
pop
addb
mov
shlb
popa
jno
std
adc
jl
fdivrs
mov
mov
sbb
lods
sub
movb
pop
cmp
in
ret
pop
add
sub
hlt
mov
addb
add
fidivrs
inc
pop
inc
pop
fcomps
xchg
adc
add
and
xchg
xchg
cmp
xchg
popf
shr
mov
add
loopne
in
in
into
xor
test
out
mov
in
sbb
cs
ja
mov
fidivl
mov
add
add
push
mov
mov
xchg
insl
fiadds
jmp
adc
adc
pushl
loope
mov
and
or
add
push
cli
mov
pop
popa
inc
lea
mov
fwait
mov
int
add
idivl
test
fucomip
and
aaa
jnp
push
jg
and
loop
xchg
lods
dec
cmc
out
pushf
or
sub
cmc
movsb
xor
or
imul
add
mov
add
cmp
int3
dec
inc
stc
mov
adc
int
add
insl
adc
jb
sub
fwait
mov
or
roll
jecxz
add
mov
mov
cli
sar
add
aam
inc
push
cmp
jle
mov
add
cli
push
add
stc
cmp
int3
or
push
cli
mov
loopne
out
add
pop
mov
mov
fstpl
add
sahf
sub
dec
push
add
rcrb
add
add
jae
mov
push
fidivl
add
push
add
mov
mov
add
xchg
dec
shrl
cli
test
mov
push
mov
shlb
push
and
daa
sub
cli
iret
leave
mov
test
jbe
adc
aam
push
push
mov
add
cs
jno
out
insb
dec
push
add
fadd
add
add
xchg
pop
jmp
inc
add
mov
add
aas
pusha
add
popa
test
mov
adc
mov
subl
jmp
mov
add
or
std
xor
add
mov
lock
mov
add
fidivs
mov
aaa
es
cmpsl
mov
add
movb
cmp
jl
xchg
outsl
subl
mulb
imul
add
mov
in
pop
mov
push
xchg
xchg
pop
add
sbb
push
sarb
iret
add
inc
cmp
sbb
inc
add
mov
add
and
ds
movsl
sub
test
push
push
pop
add
je
lds
add
push
clc
dec
addb
push
push
dec
xor
xor
es
add
dec
ds
xor
push
jae
sbb
std
xor
jecxz
shlb
rolb
les
addb
in
mov
rolb
shlb
mov
add
jo
aaa
or
outsl
cli
outsl
cmp
sbb
push
ret
dec
xchg
push
add
jb
ds
add
mov
mov
ss
fstpl
inc
xchg
mov
lret
and
add
sbb
sub
xor
jl
or
outsb
and
add
lods
clc
dec
add
dec
or
or
add
adc
lahf
mov
daa
add
insb
notl
mov
jmp
adc
jmp
popa
out
lcall
jl
std
mov
fwait
sbb
jbe
mov
gs
in
outsb
test
rcrb
out
nop
add
sti
aam
xor
dec
loopne
loop
fs
inc
movb
jbe
addb
outsl
push
pusha
add
fcompl
insl
xchg
outsl
and
les
outsb
push
lods
cmp
push
add
add
xor
or
jg
arpl
popa
mov
fidivrl
add
sub
sarl
adc
jg
ljmp
call
push
mov
or
jno
dec
jae
stos
inc
add
and
bound
inc
add
jno
sbb
popf
xchg
cli
cwtl
adc
ljmp
outsb
ret
arpl
adc
lret
mov
adc
push
ficomps
in
xchg
sub
xchg
inc
add
jle
add
cmpsb
fmull
fs
or
cmp
rcl
sbb
add
outsl
adc
std
xlat
movsb
daa
push
add
add
add
mov
movb
repz
ljmp
mov
add
jmp
bsf
xor
or
imul
sbb
jecxz
or
stc
lods
jns
sbb
pop
cwtl
jae
fcmovu
mov
sub
test
add
inc
add
cmp
outsl
or
push
or
mov
cmp
cmp
in
out
loopne
inc
mov
lods
sarl
es
test
cmpl
add
cmp
jb
and
mov
pushf
rolb
cmp
add
adc
add
clc
xor
cmp
ds
add
testl
ficompl
loope
bnd
dec
push
repz
les
xor
je
add
enter
sar
pop
pop
lea
pop
out
loopne
inc
add
test
add
add
push
mov
add
dec
push
jl
fisttpl
sahf
ljmp
cmpsb
inc
add
mov
xchg
pop
mov
sub
and
add
jp,pn
push
inc
push
lock
xchg
mov
stos
adc
pop
ss
add
mov
cmp
mov
xchg
sbb
negl
repnz
push
xchg
fdiv
sahf
repz
add
cmp
add
dec
addb
mov
xchg
cmpsl
js
mov
lods
adc
insb
add
jl
pop
ficoms
pop
mov
mov
mov
ds
call
lahf
hlt
bnd
int
lcall
cmp
jo
mov
add
mov
cmp
mov
add
aas
sarl
jnp
insl
add
movb
push
popa
push
push
adc
pusha
add
scas
mov
mov
jno
scas
jbe
in
call
pushf
xor
add
add
outsl
add
fisttpl
test
addb
dec
xor
add
jg
out
adc
lahf
push
sub
sbb
stos
mov
push
fwait
lret
iret
and
mov
shrb
add
add
jno
sub
add
mov
pop
push
rcll
add
or
lock
outsl
int
es
loope
add
mov
inc
add
and
popa
inc
ret
sub
jl
add
inc
add
ffree
int3
sub
jl
pop
mov
mov
mov
xor
mov
adc
cwtl
leave
push
jno
pop
into
jb
or
in
xchg
pop
imul
xchg
push
add
imul
cmp
les
fsubr
test
test
dec
scas
xchg
mov
sti
ljmp
stos
inc
add
imul
mull
push
add
jg
add
loop
sbb
mov
push
cmp
out
movsl
loope
xchg
pusha
add
adc
adcl
sub
fstpt
add
pop
arpl
or
lea
in
and
cmpsb
lret
sti
cmp
add
and
out
std
mov
das
mov
xor
movb
fs
cmp
cli
or
insl
mov
aaa
jns
outsb
adc
or
cmp
outsb
test
insl
addr16
daa
not
pop
push
lret
cwtl
jmp
aam
push
pop
cmp
pop
xchg
outsb
inc
sti
rolb
pop
lods
or
push
pop
gs
clc
mov
outsl
cli
lds
movsl
mov
add
inc
pop
mov
pop
int3
mov
fidivl
add
push
repnz
test
jg
cmp
push
and
pusha
add
call
mov
jo
test
push
mov
daa
xlat
test
inc
add
shrl
add
das
rolb
add
push
sti
es
popf
inc
add
jne
insl
in
outsb
push
pop
and
loop
mov
dec
push
insl
push
sbb
popa
in
push
addb
fnsave
addb
dec
dec
cwtl
jae
pop
mov
frstor
cli
jmp
dec
decb
add
mov
mov
test
jb
mov
mov
adc
dec
ja
and
stos
jno
push
push
bound
xor
dec
jp
enter
mov
iret
add
add
call
lret
push
mulb
daa
loope
add
add
jle
mov
add
scas
mov
xlat
lahf
sub
or
out
in
repnz
pop
hlt
xor
add
in
dec
jmp
out
dec
xchg
fwait
inc
aaa
fwait
enter
movsb
hlt
sahf
fmuls
push
sti
sbb
into
insb
cmc
shlb
push
inc
pusha
add
cli
lea
dec
clc
cwtl
fmuls
stos
fdiv
xchg
lds
arpl
pop
cmp
jae
dec
clc
lods
repnz
inc
negb
into
fldcw
mov
mov
mov
xor
cs
or
mov
add
jo
mov
les
and
dec
lock
ds
sarl
addb
mov
inc
lock
cmp
dec
test
ds
hlt
xor
add
add
jb
push
adc
gs
icebp
push
mov
xor
addb
xchg
outsb
popa
scas
iret
mov
repz
jbe
int3
in
pop
mov
loopne
adc
js
lahf
aad
add
xor
inc
add
dec
cmp
adc
punpckhdq
fsub
cli
repz
aam
aaa
push
in
xlat
push
addb
shl
lods
cmpsb
and
inc
add
das
push
or
add
outsb
add
jo
push
add
push
out
add
movups
add
pop
dec
push
dec
test
sbb
jecxz
dec
test
xchg
mov
or
ror
xchg
xchg
jecxz
push
insb
and
pop
mov
aad
xor
bound
sub
cmp
aam
push
mov
sbb
lods
pop
xchg
mov
push
lcall
xlat
pop
repz
add
jmp
fisubrs
lcall
add
stos
xchg
lcall
inc
out
mov
shll
push
sub
inc
add
aam
nop
cmc
out
push
pop
xchg
cmp
pusha
add
add
pusha
add
sub
push
je
or
nop
mov
in
movb
jns
mov
sti
mov
xchg
sbb
add
sahf
arpl
pop
xor
xor
add
rcll
adc
scas
push
mov
div
sbb
inc
add
rorl
dec
inc
add
dec
mov
and
incl
add
add
mov
sbb
sar
es
dec
mov
test
mov
mov
fmul
arpl
movb
mov
fcom
mov
sbb
fcoml
lret
cmpsl
leave
dec
lods
mov
xchg
cmpsb
aad
dec
into
sbb
xchg
push
ljmp
add
jns
jg
arpl
addb
add
pusha
add
roll
inc
add
jmp
aad
mov
int3
xchg
sub
iret
adc
pop
ret
gs
pushf
pop
inc
add
int3
sti
inc
addb
jl
stc
out
push
inc
add
push
mov
lds
fbld
inc
pop
fnstcw
in
push
test
rcll
out
in
or
pop
outsl
and
nop
adc
or
push
test
pop
mov
mov
out
ret
sbb
adc
fisttpll
addb
xchg
sub
push
or
fsts
pop
mov
add
push
add
data16
xor
push
movsl
jno
addb
jmp
nop
jmp
mov
jb
adc
add
mov
mov
and
std
sub
push
aaa
mov
mov
inc
add
repnz
fwait
pop
pop
movb
leave
sahf
stos
or
lret
jns
stos
adc
mov
sub
or
sub
jle
add
sub
sbb
pop
xor
push
fwait
push
jl
xchg
xchg
movsb
inc
add
outsl
sub
leave
test
flds
xor
jb
mov
add
dec
enter
push
movsb
mov
adc
insl
jl
insl
push
stos
jp
mov
xchg
push
mov
aas
mov
movsl
mov
clc
adc
test
mov
dec
mov
mov
sbb
jo
ljmp
and
imulb
or
mov
ja
add
stc
loope
push
and
dec
and
mov
xchg
lods
cmp
in
add
add
pusha
add
add
adc
add
mov
movb
xchg
jns,pt
sub
int
push
scas
mov
loope
outsb
mov
xor
jbe
sub
ss
sbb
mov
pop
imul
push
jo
repnz
push
fdivrs
mov
int
jmp
sbb
fwait
mov
aam
cmpl
ret
imul
hlt
out
pop
sbb
test
sub
xchg
xor
cli
cmpsl
in
pushf
lods
fdivl
out
icebp
pusha
add
insl
outsl
mov
mov
cmp
loopne
add
mov
inc
add
inc
add
insb
imul
xchg
xchg
jmp
jne
cld
lret
mov
jno
or
xchg
out
clc
incl
add
add
pop
mov
jns
pop
push
lcall
test
out
int
mov
and
hlt
movb
add
cmp
mov
jns
dec
mov
cmp
outsl
pushf
push
aas
test
out
stos
mov
fdivl
inc
or
hlt
int
shlb
jne
repnz
push
dec
ja
push
lcall
add
mov
leave
cli
arpl
imul
aaa
mov
push
cmpsl
adc
sbb
fsubrl
add
mov
dec
lea
bound
inc
add
loop
in
and
or
out
inc
add
inc
sti
lea
gs
pusha
add
push
cmp
dec
pop
mov
inc
add
faddl
inc
add
les
add
cmpsb
int
lret
cmpsb
add
dec
add
mov
xchg
ljmp
sbb
or
dec
icebp
pop
pop
ret
mov
lds
outsl
scas
ds
ljmp
dec
lcall
add
add
or
mov
push
es
jmp
jnp
add
mov
js
mov
add
mov
iret
inc
fnstenv
movsb
loope
add
andl
pop
mov
lds
cmp
mov
mov
popa
cvtpi2ps
or
dec
ds
and
jno
sahf
push
push
fistl
out
icebp
sti
cltd
fdivl
loopne
xchg
inc
inc
mov
xor
insl
jnp
dec
adc
dec
cmpsl
ret
movsb
pop
pushf
or
sub
mov
movb
movb
aad
fwait
mov
fildll
sbb
addb
je
int
gs
cli
loopne
dec
jno
rorl
and
xchg
into
imul
push
movsb
in
nop
mov
push
and
cmp
es
push
add
mov
add
andl
or
std
mov
ja
lods
imul
outsl
xor
pop
xchg
les
xchg
push
mov
xor
mov
das
icebp
gs
in
cmpsb
mov
in
lcall
ljmp
add
ds
cld
mov
pop
adc
fldcw
xchg
push
sub
pushf
dec
bound
cmpsl
push
sub
js
add
addb
add
and
adc
mov
dec
fsubr
stos
xchg
sub
add
sbb
push
adc
inc
add
push
add
mov
imul
movsb
mov
xchg
push
xchg
cwtl
test
pusha
add
add
and
rolb
mov
ja
leave
mov
cmp
aaa
jl
dec
loopne
mov
int3
add
add
mov
les
add
addb
cwtl
cld
sbb
push
mov
pop
dec
push
xchg
sbb
sub
add
aaa
pop
sub
in
jae
shrl
shrl
mov
stos
ds
sbb
xchg
xor
adc
in
xchg
addb
in
dec
mov
ss
and
aam
movb
add
ret
add
mov
dec
or
loop
mov
bound
jns
addl
xor
xchg
add
in
pop
shrl
insl
and
and
add
add
add
fistps
imul
push
push
xor
movb
xchg
push
pop
arpl
add
addb
pop
mov
cmp
cmp
lret
sbb
xor
push
add
add
jmp
jmp
jl
mov
mov
push
movsl
movsl
loopne
dec
fs
movb
push
hlt
jmp
mov
mov
addr16
loope
fsubrs
jbe
pand
in
adc
lods
inc
movsl
lock
jmp
int
push
cmp
xchg
mov
push
clc
sbb
in
inc
aaa
mov
cld
push
out
add
cmp
popa
ret
pop
push
mov
idivb
sbb
and
jb
jl
and
xchg
test
mov
push
adc
out
ljmp
or
mov
sbb
pop
call
or
fs
mulb
xchg
enter
addb
cmpsb
out
dec
out
lods
inc
iret
push
inc
add
xchg
push
and
subl
mov
sbbl
jecxz
loopne
pop
xor
xchg
xchg
push
add
add
add
inc
add
mov
orl
outsl
mov
insb
in
and
mov
fwait
mull
lret
mov
add
addb
fs
xchg
mov
fmull
dec
or
cmp
sahf
aaa
je
xor
jbe
subl
jo
add
mov
xchg
shlb
dec
or
jle
mov
add
pop
nop
cmp
jb
sbb
mov
movsl
cwtl
inc
stc
push
add
pop
dec
aam
test
scas
mov
insb
add
push
pop
movb
add
inc
add
aad
sbb
fs
sub
mov
aam
sub
lock
and
add
inc
add
fiadds
jno
cmp
movsl
inc
add
push
sbb
andl
or
out
aam
xchg
sub
add
out
fisttps
or
mov
inc
mov
popf
orl
daa
shll
add
fsts
dec
or
pop
fnstsw
sub
cmc
jns
add
xchg
mov
and
dec
movsl
lret
in
or
out
pop
mov
bound
add
andl
mov
mov
lods
fistpll
shll
sub
push
jge
ja
mov
mov
adc
push
and
scas
insb
pop
fmuls
loopne
jl
push
lods
sbb
sbb
fs
rolb
scas
push
inc
sti
testb
or
jmp
jmp
add
mov
jne
pusha
add
pushf
es
xor
int3
or
mov
xor
scas
cli
push
add
subl
mov
std
push
sbb
mov
nop
stc
jg
inc
add
pop
sub
adc
cld
sub
hlt
cli
sbb
xor
lds
sub
push
pop
push
out
sub
mov
mov
cmpsl
dec
in
mov
mov
das
sub
inc
gs
iret
arpl
pop
lret
xor
xlat
or
push
cmpsb
repnz
add
gs
popa
cmp
addb
add
lock
jbe
mov
ljmp
shll
test
inc
iret
test
fwait
adc
add
loop
scas
xchg
inc
add
test
sub
push
bound
lret
stc
sub
add
cmpsb
fildl
add
sbb
jbe
insl
push
or
enter
sti
or
dec
inc
add
push
jo
jg
bnd
xchg
popa
in
pushf
jne
movb
cld
or
lcall
sbb
cmp
fdivrs
sub
pop
xchg
mov
movsl
jmp
dec
arpl
xlat
mov
stos
mov
xchg
jnp
nop
iret
pop
in
add
mov
leave
xor
sub
pop
xor
shll
inc
add
adc
cmp
cltd
jnp
add
add
adc
pop
imulb
out
cmp
sbb
frstor
push
ficoml
add
das
mov
sarl
scas
stos
xlat
xor
xchg
lret
scas
hlt
das
adc
cli
roll
add
sbb
iret
fisttpl
idivb
push
imull
adc
sub
pop
les
mov
popa
xchg
xor
inc
add
lret
xchg
loope
pop
outsl
or
add
movb
jmp
xor
and
add
jmp
push
and
lods
mov
hlt
loop
das
jnp
xor
inc
add
mov
dec
nop
push
cltd
dec
repz
add
mov
mov
mov
add
loope
jl
sti
adc
mov
idivl
cli
mov
ljmp
mov
cmp
into
lret
or
call
lcall
add
ja
sub
dec
shll
test
cli
fidivrl
cmc
rclb
jmp
dec
adc
push
test
add
mov
xchg
std
sbb
movsl
pop
xor
cmp
add
scas
nop
cli
mov
popa
pop
cmc
icebp
jb
xor
add
popf
nop
sbb
mov
dec
and
aaa
fldenv
cltd
sub
push
popf
popa
cmp
sarb
inc
mov
dec
cmp
mov
popf
jne
adcl
mov
arpl
daa
filds
int
add
mov
inc
add
lcall
lcall
out
jne
mov
inc
push
xchg
or
sti
fldt
dec
outsl
sti
je
aad
sbbl
push
and
cmp
rolb
es
mov
xchg
inc
add
repz
push
mov
push
jno
in
js
or
outsl
es
jp
out
or
in
mov
mov
mov
pop
jae
xchg
jnp
mov
sub
mov
inc
add
mov
sub
mov
repnz
pusha
add
dec
pop
imul
cli
pop
movsb
shll
mov
adc
data16
test
add
xchg
gs
stc
out
mov
inc
add
jns
fidivrl
fnsave
adc
push
lods
lock
cmp
add
mov
pop
pop
dec
jb
enter
cmpsb
shll
and
pop
movsb
fistps
loop
or
jae
add
das
sub
out
or
es
add
les
lea
push
imul
loop
loope
add
and
cmp
lods
cld
outsl
shll
das
ja
dec
sbb
das
loope
rol
out
jo
jmp
je
jnp
mov
push
add
and
xchg
add
or
addr16
mov
add
fwait
adc
outsl
js
bswap
popa
sub
adc
clc
add
notb
jg
pop
cmp
inc
push
fwait
outsl
xor
jge
cltd
sub
and
sub
test
test
arpl
xchg
ret
in
sub
dec
dec
or
sub
bound
mov
add
adc
fcoml
sbb
sbb
fcoml
sub
mov
jge
mov
loope
lret
xchg
es
icebp
aas
pop
jns
push
pushf
outsl
lcall
pop
jb
xchg
sbb
outsl
rorb
out
int3
int
nop
dec
xor
jne
lret
sub
mov
and
adc
dec
fs
mov
stos
cmp
add
pushf
imul
es
add
pop
xor
repz
daa
lods
sub
sub
mov
aas
mov
push
sbb
js
ret
pushf
xor
mov
dec
mov
rorl
ss
inc
add
xchg
sbb
mov
insl
lods
jg
cmp
push
jae
mov
scas
xchg
inc
mov
add
add
loop
aas
int
cmpsb
test
mov
cmp
jl
jns
add
and
fcmovnbe
js
out
roll
bound
js
jecxz
mull
add
std
mov
popf
pop
jbe
sub
arpl
idiv
imul
xlat
sar
cmp
push
add
or
add
jg
sub
xor
add
notl
sbb
lahf
daa
jno
jae
js
mov
cmp
xchg
mov
mov
dec
aas
je
fisttpll
pop
pop
imul
fs
ficomps
mov
clc
movsb
cmp
int3
adc
mov
mov
pop
sub
mov
cmp
add
jbe
xor
lea
pop
pop
shlb
push
imul
incl
out
mov
xchg
xchg
stos
loopne
leave
jg
loopne
aam
and
lock
shlb
add
add
push
add
stos
icebp
cmp
imul
repnz
add
cld
push
test
sbb
notl
addb
or
add
mov
push
lret
movb
rcll
stc
mov
pop
mov
inc
add
mov
clc
jae
adc
sti
in
mov
test
mov
movb
pusha
add
jmp
movb
pushf
pop
jmp
mov
test
xchg
sbb
sbb
mov
aam
mov
mov
dec
mov
mul
lret
ret
and
pusha
add
out
addr16
or
inc
add
xlat
sbb
mov
add
jnp
cmc
cmp
jecxz
add
mov
inc
dec
and
mov
pusha
add
xor
cltd
pop
leave
cmp
shl
add
out
mov
out
cli
notb
mov
pop
roll
adc
dec
lcall
jge
movsb
lret
dec
sbb
loope
and
dec
mov
mov
xchg
cltd
push
adc
xor
and
fcomps
es
jp
lods
jno
pop
andl
scas
lahf
jecxz
or
pop
pop
leave
mov
out
mov
and
rorl
push
add
adc
jge
pop
in
dec
mov
js
jno
jge
jne
mov
addr16
push
or
lahf
and
or
sbb
ss
mov
test
outsl
repz
push
shl
push
add
fwait
inc
add
rol
push
pop
sbb
out
outsb
pop
rolb
add
mov
mov
ds
aam
in
add
dec
push
imul
cmpsb
sbb
add
sbb
test
xchg
int3
je
mov
aad
repnz
dec
lods
adc
jle
add
jo
add
jno
out
out
xlat
dec
shrl
insb
push
in
mov
jl
xor
mov
shlb
lahf
imul
or
or
subl
lret
dec
inc
add
lds
imul
cmc
es
scas
test
xrelease
cmpsb
ja
pop
es
ficomps
inc
add
je
push
or
add
movsb
mov
mov
rcrl
lret
jge
push
add
xchg
mov
inc
add
lds
add
lret
push
outsl
inc
aaa
dec
and
cmp
pop
mov
push
lahf
insb
in
inc
add
clc
sub
out
push
imul
scas
outsl
pop
cmp
push
add
in
rolb
scas
stos
mov
repz
lods
out
and
test
dec
add
mov
test
xchg
push
arpl
pop
icebp
push
or
add
mov
mov
addr16
int
cwtl
xlat
pop
repnz
pop
sub
movsb
test
jle
je
jae
stos
insb
mov
bound
cmp
pop
clc
inc
repnz
lds
imul
add
js
pop
mov
movb
cli
xchg
jecxz
add
cmp
cmp
sub
push
out
mov
data16
push
xor
fcomps
sub
add
stos
xchg
outsb
xchg
and
dec
shl
cs
inc
inc
add
pop
push
add
adc
dec
jl
cmpsb
xchg
pop
in
add
repnz
lret
pop
add
add
add
call
xchg
mov
sbb
mov
sbb
pop
mov
cltd
lea
or
icebp
xchg
mov
mov
aad
cmp
mov
sti
inc
add
pop
xchg
pop
icebp
leave
das
xchg
jns
add
add
adc
test
cwtl
sub
mov
and
xor
mov
pop
movsl
mov
add
sbb
hlt
dec
bound
adc
and
xor
movb
sahf
mov
mov
sbb
aaa
mov
dec
cwtl
mov
mov
add
inc
add
pop
div
lds
add
mov
rorl
out
fs
out
xchg
ss
jge
sbb
bound
dec
js
mov
dec
ss
faddl
mov
inc
add
jge
nop
and
movsb
push
mov
sub
fbstp
push
xor
push
rolb
or
lock
pop
popfw
sub
frstor
add
add
loop
pop
jg
cmpsl
push
add
data16
dec
jecxz
nop
xchg
ss
imul
shr
test
or
add
pop
lods
jmp
jecxz
sub
aas
dec
iret
in
or
sbb
not
nop
pop
ret
or
add
inc
add
in
cmc
jo
pmovmskb
clc
mov
xchg
jne
mov
cmp
pop
jge
rcrl
inc
fistpll
pop
in
in
addb
loopne
arpl
push
pushf
cmpsb
xlat
dec
fists
sub
dec
sbb
jo
add
add
and
xor
dec
mov
rolb
rorl
and
rcll
and
addb
add
lods
stc
xor
cwtl
and
fadds
popf
repz
lret
dec
xor
stos
test
fld1
cltd
add
mov
mov
add
cmp
jno
mov
mov
cmpsl
rcr
xor
addr16
jne
xor
cmp
scas
sbb
imul
pop
add
pop
jne
add
sbb
unpcklps
jg,pt
and
dec
push
movsb
hlt
mov
add
lock
out
adc
mov
je
pop
xchg
inc
add
xor
test
push
dec
in
xor
imul
lret
xchg
rcl
sub
fisubs
xchg
inc
add
add
mov
mov
add
mov
mov
sbb
push
add
test
xor
xor
add
sub
in
cld
cld
dec
jns
add
push
fistpll
ss
fistl
add
sub
add
mov
add
add
fiadds
in
jns
xor
mov
cmp
sub
mov
add
pop
fbld
sahf
icebp
mov
add
jne
jae
mov
add
test
pop
inc
add
shll
sbb
add
fidivs
into
cwtl
adc
cli
insl
pop
dec
mov
add
xor
xor
add
add
in
dec
cmp
and
mov
cmp
loope
je
fsubs
enter
add
push
pop
imul
add
in
int
loope
add
add
in
repz
stos
fdivrl
mov
add
imul
adc
lahf
fwait
lret
add
xor
pop
rolb
lea
push
cmp
nop
inc
push
adc
mov
call
loope
nop
and
mov
rorl
negb
jp
sbb
xchg
jle
cmpl
mov
mov
fsubrl
cmp
add
pop
test
out
add
loopne
inc
add
mov
push
add
lret
inc
xchg
cli
push
mov
or
jg
add
enter
test
mov
jne
bound
test
inc
add
mov
adc
out
push
pushf
daa
out
add
add
je
pop
bnd
xor
test
jno
imul
mov
cs
loopne
scas
movsl
jne
xor
adc
clc
in
add
mov
and
dec
ja
dec
push
mov
add
stc
or
or
addb
add
movlps
inc
stos
xchg
adc
mov
mov
sub
sbb
pop
or
aad
cmpl
mov
lds
decl
adc
leave
in
mov
lods
xchg
mov
andl
sub
into
pusha
add
adc
in
push
fists
aas
aaa
jg
xchg
mov
aam
pop
xor
test
xor
jmp
ljmp
adc
xor
inc
add
sub
stos
push
nop
fisubrl
or
add
pop
addb
fldenv
mov
adc
dec
and
add
test
jl
jnp
push
add
mov
aas
sub
loop
ljmp
inc
mov
cmpsb
popa
xor
cmp
mov
cld
cmp
aas
cmpsl
cmpsb
and
jecxz
jns
push
xchg
ret
jb
mov
insl
daa
cmp
dec
in
push
mov
add
jae
xor
xor
setno
sub
xlat
xlat
dec
push
repnz
ss
mov
in
daa
les
outsb
jbe
xchg
inc
jns
adc
pop
hlt
loope
addb
stos
mov
mov
lods
in
cmp
dec
ja
xor
sbb
cmp
add
jae
add
test
sub
jns
or
loopne
add
out
int
sub
popa
popa
or
add
movsb
fistpll
divb
xor
jae
pop
or
mov
add
push
jl
cli
and
xor
inc
movsl
addb
dec
pop
and
pop
scas
xchg
test
es
hlt
mov
mov
test
add
push
insb
jns
cli
pop
sub
imul
sahf
xchg
and
ret
mov
fstp
lods
mov
imul
jo
fbld
rcrl
push
mov
aad
mov
cmp
sbb
mov
sahf
add
scas
js
xor
pop
inc
add
push
push
movb
xchg
xor
push
add
fsubrs
movsl
pop
adc
jl
mov
repz
pop
pushf
loop
jno
mov
inc
sub
and
loopne
out
jp
aas
cli
daa
cs
inc
outsl
dec
xchg
dec
mov
jmp
gs
pop
addb
in
ret
adc
push
mov
or
andl
scas
lea
lds
js
xchg
add
and
rolb
add
and
fnsave
jmp
cmp
icebp
push
loop
or
add
mov
leave
clc
das
shlb
pop
push
and
ret
pop
cmp
xlat
test
dec
cmpsb
push
add
test
fcompl
xlat
push
sbbl
lods
pushf
out
adc
enter
out
add
add
enter
jb
adcl
lods
lea
cs
lret
dec
sub
cltd
mov
sub
mov
dec
out
dec
addl
add
push
jo
fstl
fld
add
add
loop
jnp
cmp
jnp
enter
xchg
sub
add
inc
add
in
inc
js
ret
push
je
negb
lods
inc
jae
push
mov
mov
push
shl
adc
pop
leave
sub
cwtl
ret
push
add
sub
cmp
sub
jl
mov
repz
sbb
sub
ljmp
and
adc
inc
repz
aam
mov
push
pop
add
sbb
loop
dec
sub
negl
xor
mov
adc
je
or
or
jno
push
aas
mov
dec
ret
jno
imul
or
or
loopne
push
add
sbb
add
cmp
or
jl
pop
mov
push
mov
xor
cmp
aas
popl
adc
inc
add
cmp
xor
add
cmp
movsb
fcomps
mov
lret
inc
test
es
xor
ret
push
xchg
sbb
jle
in
hlt
mov
push
push
out
je
shrl
lock
iret
fiadds
add
inc
add
push
test
in
sahf
push
divb
icebp
or
in
fcomps
dec
or
adc
arpl
add
inc
add
loop
dec
mov
xor
mov
outsb
int
jl
cmpsl
shrb
cmp
rcl
mov
adc
push
cwtl
mov
or
inc
add
gs
cmpsl
incb
js
jns
in
stos
fadds
mov
mov
add
mov
scas
aaa
xor
add
outsb
les
mov
lahf
push
lahf
mov
dec
sahf
popa
sub
mov
negb
insl
mov
mov
pop
fcomi
push
xchg
out
int3
jle
xchg
cmp
cmpsl
or
jns
inc
lods
and
addl
icebp
and
leave
push
data16
stc
ja
adc
test
adc
dec
inc
add
or
rorl
adc
cs
fidivrs
outsl
aas
sub
das
arpl
dec
mov
adc
add
sub
aam
test
cmp
add
in
or
xchg
mov
and
fwait
pop
jle
mov
pushf
dec
add
stos
shll
fnstcw
add
outsb
enter
mov
mov
add
add
add
mov
cmpsl
addb
inc
add
mov
bound
xor
repnz
loop
mov
aas
pop
loope
cmp
mov
int
xor
push
add
test
push
imul
scas
mov
mov
pop
sbb
push
enter
sbb
push
xor
ret
sub
add
iret
mov
scas
test
add
sbbl
mov
dec
jge
cmpsl
pushf
outsb
cli
fucomp
xor
sub
push
add
or
jne
lods
or
ljmp
inc
dec
pushf
pop
push
cmp
inc
add
push
add
mov
xchg
rcll
mov
fsubs
sub
cmpsb
jl
pushf
sub
inc
add
loope
mov
push
mov
std
sarb
fcoms
add
cld
fnstcw
add
dec
sbb
or
add
add
pop
fldt
xor
add
xor
dec
add
dec
fistl
test
xor
pop
cmpl
leave
outsb
xor
and
in
mov
ret
inc
add
movsl
es
inc
add
dec
fisubs
aas
lods
icebp
out
mov
cmp
mov
insb
jno
mov
enter
push
push
inc
inc
add
and
scas
iret
jo
fwait
jle
mov
jp
dec
push
lcall
mov
rolb
imul
aas
sub
mov
cmpsb
movsb
aaa
dec
or
lahf
xchg
lcall
xchg
test
jne
bnd
add
iret
lods
pop
pushf
sub
fcomip
pop
repz
sub
cmp
add
popf
into
inc
add
inc
repnz
xchg
and
pop
pop
test
mov
add
loop
into
push
cmp
mov
test
sub
jb
dec
dec
insl
incl
ret
add
or
lock
fwait
fs
fisttps
add
add
add
je
call
xchg
mov
mov
fisttps
sub
popa
and
jge
std
out
sbb
inc
add
leave
dec
sti
mov
xchg
and
mov
pushf
out
icebp
jns
fs
insb
cltd
mov
xchg
lcall
add
push
je
jge
cmp
mov
add
add
add
mov
inc
out
hlt
or
cmp
mov
xchg
in
sbb
shll
push
stos
pop
insb
insb
pushl
mov
daa
xor
bound
es
leave
cmpsl
mov
sbb
pop
lahf
clc
movb
imul
cmp
imul
js
clc
in
test
mov
and
and
and
repz
ret
outsb
int
ljmp
ljmp
subl
les
cs
add
jg
ret
stos
mull
in
pop
out
mov
stos
mov
sbb
add
call
setae
shll
pop
jle
xchg
sub
jle
add
pop
and
or
xor
out
cltd
lret
sahf
xor
pop
adc
into
movsl
inc
add
test
lods
pop
push
es
pop
aas
and
enter
or
shrb
dec
lea
adc
and
in
loop
push
enter
pop
pop
push
push
rolb
bound
jmp
shrl
out
addb
shrb
fadds
push
fidivrl
addb
enter
or
adc
stos
pop
shl
cmp
xor
or
lret
shl
cmp
mov
cltd
aad
popa
xor
sub
push
mov
les
icebp
cmp
mov
or
out
addb
scas
lea
jle
mov
add
add
mov
fwait
call
lahf
inc
cmp
xor
aas
mov
js
xchg
cmp
in
inc
mov
jecxz
iret
aaa
test
sub
leave
es
pop
xchg
and
add
pop
loop
adc
pop
pop
and
pushf
xor
push
sbb
mov
mov
jecxz
iret
push
and
cmp
add
insb
les
jp
scas
or
mov
jo
adc
test
jno
sub
fs
mov
in
add
sbb
xor
pop
testl
fnstcw
std
pop
aam
push
xor
sub
pop
mov
enter
xor
add
xchg
pusha
add
add
enter
pushf
xchg
xchg
push
mov
daa
sbb
aas
cmp
xchg
jo
mov
and
fsubl
pop
and
das
mov
stos
jno
test
and
xor
xlat
hlt
js
xchg
fcomps
rcrb
stos
bound
xlat
int3
sbb
in
xchg
push
xchg
icebp
xchg
pop
stos
insl
add
push
push
mov
jge
js
jns
add
pushf
and
xor
into
cmp
lock
das
sub
ljmp
int3
sub
cmp
or
imul
in
jge
push
add
and
add
sbb
scas
xchg
lcall
inc
dec
mov
pop
movb
mov
das
pusha
add
push
and
push
fdivr
jb
cli
in
addb
pop
jae
xchg
scas
mov
lret
cltd
pop
std
sub
daa
and
or
add
dec
mov
pop
lea
dec
fcompl
lahf
xchg
je
xor
cmp
test
aam
cmp
jno
add
or
addb
sti
mov
dec
push
add
mov
gs
pusha
add
jp
out
add
sub
jns
rorl
addr16
inc
mov
outsb
push
repnz
das
in
add
xchg
dec
inc
pop
xor
pop
lods
jecxz
mov
out
stos
in
cwtl
leave
ja
outsl
addb
repnz
into
mov
adc
lret
fcompl
mov
mov
cmp
push
mov
sub
imul
mov
and
add
inc
add
add
mov
mov
push
xor
hlt
sub
xchg
les
bound
fwait
cltd
or
dec
xchg
mov
mov
aaa
mov
xchg
out
add
cmp
sbb
aaa
data16
mov
cwtl
arpl
dec
rep
clc
jecxz
add
add
push
adc
sbb
ret
xor
sub
pop
aad
xchg
mov
leave
sub
scas
lods
lcall
add
xchg
scas
fistpll
mov
or
xor
xchg
and
or
xchg
mov
fldt
cmp
inc
add
push
fwait
js
adc
jne
cmp
inc
add
pop
movb
mov
xchg
cmp
negb
fcoms
fsubs
fisubs
add
rcpps
in
cmc
pushf
test
push
push
add
fldenv
jns
addb
addb
xchg
pop
or
fcomps
add
add
ss
test
add
add
call
test
push
int
out
out
sub
pop
cs
adc
jbe
add
mov
sub
orl
sub
imul
and
icebp
loope
stos
popa
or
mov
faddl
mov
mov
and
and
in
mov
xchg
lods
mov
mov
js
add
bound
aaa
inc
add
pop
adc
lods
aad
outsb
addl
xchg
mov
cmp
in
mov
sub
push
sbb
out
pop
xchg
xchg
adc
test
mov
cmpsl
inc
sbb
mov
or
loop
push
popa
hlt
sbb
add
add
mov
sub
pop
in
fdivl
repz
add
fidivs
add
icebp
mov
xchg
xchg
movsl
add
outsb
cs
mov
or
ficoms
fwait
inc
add
in
add
add
push
inc
imul
ret
sbb
xor
ds
leave
dec
sarb
add
lret
call
push
add
xor
insl
loopne
xchg
mov
shrl
cwtl
mov
jp
pop
cmp
into
shll
xor
lock
cld
dec
fstpt
mov
scas
mov
enter
inc
add
stc
jae
mov
pop
arpl
imul
adc
lods
loop
dec
dec
xor
in
inc
inc
add
fldl
lahf
stc
mov
bswap
data16
cmp
push
jne
xlat
gs
push
stos
roll
lea
push
xchg
inc
add
movb
xor
and
xor
test
jo
stos
sub
int
adc
enter
lret
addr16
sub
movsb
out
lock
xor
or
add
add
arpl
fcoms
xchg
fmul
popf
add
and
insb
ret
lret
testb
nop
int3
and
sub
add
or
or
sub
repnz
pop
rclb
inc
shll
in
mov
es
add
xor
and
lahf
adc
mov
mov
pop
add
add
cs
inc
loopne
sbb
leave
push
adc
addb
pop
cmp
mov
push
mov
xchg
out
push
movb
sbb
fiadds
xchg
movsl
push
jne
lods
mov
or
sub
pop
xchg
pop
mov
dec
pop
sbb
dec
out
fmull
sbb
and
push
movb
xchg
mov
push
mov
ja
rclb
stc
and
jb
ds
add
out
aas
data16
push
cmp
rorl
mov
add
mov
fcmovu
insl
jno
or
cmp
mov
les
pop
xor
jae
roll
add
movb
mov
loope
add
xor
mov
movsl
lods
adc
cmp
dec
loope
shlb
dec
es
fisttpl
test
insb
jne
xor
inc
mov
cwtl
cld
mov
push
repz
push
cmpsl
jmp
loop
add
add
add
sub
inc
movb
leave
mov
sub
sub
xor
leave
stos
xchg
addr16
add
pop
out
divl
dec
ja
loopne
xor
repnz
cmc
aaa
xlat
fsubl
xchg
push
adc
push
mov
fmulp
lret
add
lea
jmp
rolb
add
sbb
fists
aaa
xor
add
push
cltd
shl
sbb
xor
aas
icebp
lock
jb
les
sbb
mov
jmp
add
add
ds
mov
add
jb
jmp
xor
push
fucom
leave
ds
aaa
mov
inc
mov
add
lret
mov
loopne
add
add
jle
jo
int
sub
filds
insl
popf
fucomi
mov
fldl
add
mov
out
pushf
sbb
lea
adc
add
and
out
mov
addb
in
xor
popf
sub
repnz
lods
jp
mov
cmp
pop
movb
cmp
jmp
cwtl
lock
sub
call
enter
testb
jmp
test
mov
imul
and
add
jp
inc
and
int3
mov
or
jbe
xchg
in
int
ja
jl
add
clc
dec
xor
add
and
stos
idivb
pop
xchg
mov
xchg
push
or
mov
push
xor
xlat
mov
or
and
mov
iret
sub
aad
adc
orl
lret
das
lds
loop
mov
mov
in
fsubrl
push
pop
popa
xchg
addb
stos
arpl
rcrl
adc
leave
push
adc
pop
clc
mov
cmc
shl
iret
loop
inc
add
add
add
push
pusha
add
pop
bound
pop
sbb
js
mov
adc
add
cli
addb
push
pop
fsubrp
out
jl
mov
xchg
jne
out
int
mov
mov
jns
push
test
cmp
cmp
lahf
mov
add
std
popf
sbb
and
mov
add
and
in
call
add
das
jns
push
sub
jmp
ret
cs
push
add
data16
stos
sarb
inc
mov
mov
dec
xchg
daa
or
xor
in
jns
adc
dec
dec
cs
in
add
in
jb
add
adc
test
push
out
ret
push
jp
adc
add
adc
cmpsb
cld
xor
or
add
dec
insb
dec
push
cmp
add
roll
fs
xchg
or
push
xchg
pop
ret
pop
mov
push
je
cltd
or
cmp
inc
push
dec
scas
mov
pop
ficoms
fiadds
push
out
scas
mov
sbb
and
aaa
jmp
add
add
fstps
testb
push
jb
pop
or
and
xor
mov
je
adc
add
push
shlw
cwtl
fsubrl
pop
xchg
lcall
jae
sub
imul
sbb
sbb
sysexit
out
mov
rolb
sahf
repnz
fs
aas
jl
mov
add
push
dec
adc
add
out
mov
hlt
aas
lret
aad
rorb
or
test
jl
inc
jnp
js
sub
add
push
gs
pushf
out
mov
test
inc
shll
rcl
out
sahf
insb
xlat
mov
lret
shrl
mov
xor
inc
int3
mull
push
aas
sub
dec
rcrb
clc
mov
imul
cmpsb
imul
pop
test
outsl
inc
add
and
mov
jno
add
add
gs
rorb
mov
jle
dec
cmp
sbb
mov
or
aaa
in
scas
pop
aam
pop
inc
add
ret
xor
dec
in
fsubrs
cmp
loopne
add
and
sbb
push
outsl
jnp
scas
insl
orl
add
push
and
add
ss
icebp
jnp
lret
pushf
test
jae
add
inc
aad
sbb
jmp
aam
repz
ficoml
xor
data16
fstpt
in
pushf
test
movb
shld
stos
mov
mov
inc
add
jnp
std
xchg
inc
cmp
sub
or
jns
lods
xchg
nop
xchg
outsb
fwait
in
sbb
or
push
xchg
fsubrs
xchg
mov
add
add
jle
adc
pop
cmpsb
sti
or
pop
push
insb
xchg
inc
add
cli
xor
cmpsb
inc
add
pop
xlat
movsb
push
lret
negl
arpl
dec
fdivr
int3
mov
outsb
sbb
fxch
xchg
push
add
inc
add
cmp
add
adc
fcoml
fsubs
pop
jne
gs
jmp
scas
adc
je
and
xor
je
jg
adc
fxam
loope
inc
add
push
adc
aam
addb
fcomps
inc
add
dec
jecxz
add
cmp
add
movsl
movsb
mov
cmc
stc
notb
sbb
clc
inc
add
and
sbb
pop
popf
not
out
xchg
xchg
adc
jo
imul
stos
cmp
ret
adc
lods
mov
rolb
xlat
mov
aaa
sbb
push
hlt
stc
xchg
aam
sub
xchg
and
and
lock
cltd
sub
and
sbb
push
xchg
adc
aaa
mov
push
movb
bound
dec
jl
dec
mov
mov
pop
jno
add
ds
sbb
push
mov
loopne
cmp
sub
cmp
xor
nop
cmc
xor
push
and
pop
imul
test
pusha
add
lods
das
push
and
leave
inc
jns
push
cmpsb
movb
stc
cld
xchg
rolb
out
repz
inc
in
ja
int3
mov
inc
add
add
mov
mov
push
lahf
scas
inc
lds
sub
push
sbb
dec
outsb
mov
push
xchg
les
int
cli
sbb
add
je
rol
add
int3
inc
or
mov
lods
cmp
dec
dec
add
pop
jo
neg
mov
ljmp
mov
ficoms
les
xor
lock
and
xchg
push
adc
mov
testl
sub
or
gs
or
add
jne
mov
cwtl
fucomip
daa
inc
bound
fstps
loopne
add
sbb
jnp
and
das
mov
lds
in
cmc
xchg
cmp
mov
ss
cmp
jle
mov
cmp
xchg
aaa
cmpsl
cmp
add
mov
jge
mov
mov
mov
inc
add
es
cmp
rolb
faddp
add
add
pop
push
ret
in
fs
xor
stc
enter
jnp
mov
adc
mov
xor
aas
mov
sbb
add
fnstcw
leave
cmp
push
or
negb
or
add
add
add
ret
jns
xchg
adc
pop
pop
repnz
sub
sbb
cld
push
out
mov
jne
loop
add
add
mov
add
adc
iret
stos
into
xchg
in
and
roll
and
std
test
mov
insl
jg
jnp
xchg
gs
xor
mov
gs
hlt
inc
add
xchg
xor
mov
loop
push
xor
add
leave
mov
stos
loop
les
xchg
or
add
inc
add
int
pop
icebp
xor
clc
in
push
mov
mov
pushf
int
fnstcw
and
jmp
pop
push
popa
je
out
sti
sub
mov
jle
mov
pop
mov
int
addr16
insl
xor
negb
pop
sbb
pusha
add
out
das
stos
outsb
jmp
cmp
inc
add
add
pop
sbb
and
stc
pop
in
bnd
lret
jbe
idivb
sub
frstor
mov
ror
pop
pop
repz
adc
icebp
leave
and
pop
in
mov
sub
sbb
push
add
mov
mov
or
fstps
mov
call
cmp
pop
mov
test
icebp
rolb
sub
popa
popa
stos
imul
mov
mov
les
sahf
mov
adc
add
mov
in
das
sub
sub
cmpsb
cli
das
movsl
push
mov
sub
pushw
add
add
ss
inc
add
testb
stc
insb
cmp
inc
add
arpl
jno
add
mov
sub
cwtl
inc
loop
add
pusha
add
int
add
push
mov
jmp
or
jnp
push
or
sti
adc
xchg
imul
adc
add
imul
mov
jge
add
or
ds
mov
add
add
loope
lods
je
add
loop
das
cmc
xchg
jo
add
add
mov
jecxz
ljmp
jp
les
inc
fsubr
mov
je
jecxz
fcmovbe
in
add
and
and
jo
add
add
xchg
xor
dec
loope
cmpsl
test
fbstp
ficoml
and
daa
inc
add
add
fs
lahf
test
leave
adc
sar
aad
scas
pushf
sbbl
mov
mov
jp
addb
sbb
cmpsb
xor
mov
mov
jmp
add
cltd
std
push
fucomi
stos
fdivl
dec
lret
mov
lea
stos
mov
mov
inc
add
inc
add
ljmp
mov
out
mov
inc
sub
dec
decl
mov
cli
pop
push
mov
test
add
cmp
lods
roll
dec
dec
inc
dec
data16
cmp
add
loope
inc
paddb
adc
rorb
stc
mov
fstp
add
inc
add
stos
iret
push
loop
fadds
lock
or
mov
jo
test
fidivs
jnp
ljmp
or
les
ret
ja
mov
push
inc
les
mov
lock
imul
incb
movb
sub
xor
inc
add
cmc
lret
mov
add
loop
call
jae
push
pop
bnd
icebp
hlt
jo
data16
jns
pop
inc
add
les
push
inc
push
add
pusha
add
or
loopne
pushf
adc
dec
cli
stc
aad
mov
cs
jle
stos
pop
jne
test
leave
xrelease
xor
movsl
cmpsb
cmpsb
imulb
leave
rcrb
and
cltd
stos
xchg
inc
test
daa
and
pop
or
add
ljmp
mov
or
pushf
mov
fs
test
rolb
pusha
add
loop
cwtl
jo,pt
loop
jg
sahf
cltd
mov
xchg
fldz
dec
dec
jmp
push
xchg
adc
repz
cmp
jns
inc
add
in
mov
cmp
xor
add
xor
das
cmp
ja
dec
xor
cmp
add
in
mov
or
mov
add
icebp
or
push
mov
cmp
add
mov
mov
dec
jmp
insb
add
push
add
add
sbb
add
pop
xor
mov
sbb
mov
mov
jl
mov
cmp
add
push
cmpsb
jae
dec
mov
movsl
xor
mov
push
je
outsl
xchg
cmc
add
and
jle
add
jl
neg
mov
mov
sbb
arpl
add
push
mov
adc
imul
jo
dec
ljmp
aas
daa
jo
mov
test
inc
enter
cli
ljmp
adc
cmp
inc
add
push
repnz
inc
test
mov
mov
jbe
repnz
push
adc
xor
lea
push
and
mov
mov
push
push
jl
push
out
fldenv
outsb
jne
or
lods
or
add
add
mov
and
or
fcomip
mov
mov
add
cli
dec
cmpsl
cs
mull
std
imul
pop
popf
test
or
adc
push
pop
loopne
jmp
xor
inc
mov
cwtl
mov
adc
nop
pop
push
daa
cwtl
scas
enter
stos
push
adc
adc
clc
aam
jnp
add
adc
pop
xchg
jns
clc
gs
int3
jmp
sbb
jmp
inc
push
shr
push
mov
jns
adc
lds
lahf
xor
cmp
xor
sbb
std
mov
scas
push
pushf
sarb
xor
adc
in
inc
aaa
sbb
aad
xor
idivl
rcrl
out
fildl
push
sub
add
pop
jmp
mov
cwtl
sbb
pop
mov
je
adc
cmp
sahf
shl
sbb
add
add
push
mov
dec
and
push
pop
push
addb
xchg
jne
mov
add
setge
push
and
dec
leave
inc
mov
mov
imul
xchg
xchg
xchg
sub
cmpsl
imul
add
out
push
push
and
into
loope
