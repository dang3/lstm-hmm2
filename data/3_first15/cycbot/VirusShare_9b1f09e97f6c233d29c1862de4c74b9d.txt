stc
or
dec
pop
aad
out
pusha
add
lds
add
mov
popf
xor
negl
popa
jns
push
movb
add
adc
xchg
out
cmpsl
addl
dec
xchg
add
xchg
add
mov
mov
jg
mov
mov
stos
rolb
adc
int
ljmp
push
add
mov
fwait
imul
jne
sahf
loope
jge
add
inc
add
jecxz
adc
push
lods
clc
jno
movsb
add
lahf
add
cmpsb
add
add
add
lahf
add
mov
adc
xlat
add
dec
addl
mov
or
mov
jg
inc
add
add
test
stos
jl
inc
add
out
xlat
add
push
cmp
add
add
sub
lret
addb
mov
jge
add
bound
mov
mov
lods
leave
mov
fsubrl
add
mov
or
inc
lcall
lahf
push
fucomi
arpl
arpl
mov
xchg
add
add
jecxz
cmp
testb
add
sbb
jae
add
pushf
cltd
xchg
add
and
outsl
inc
cmc
ret
js
dec
gs
data16
test
pop
dec
fs
xchg
add
pop
inc
pushf
mov
mov
ljmp
push
cltd
jb
add
add
mov
or
cmpsl
shr
nop
add
jmp
dec
sub
cli
das
mov
xchg
mov
pop
mov
loope
std
lods
addr16
or
sub
ret
add
add
rolb
add
mov
mov
repnz
pushf
and
add
add
mov
and
shll
out
push
inc
add
xor
fwait
jo
cld
fiadds
mov
in
pushf
mov
mov
loope
add
loopne
sbb
add
lock
pop
push
xor
jae
cmc
xor
lea
pop
bound
mov
fists
cli
push
add
xchg
out
dec
aaa
loopne
out
jae
xor
xor
cmp
adc
add
mov
add
push
and
jnp
add
add
add
pop
dec
add
add
mov
sbb
mov
pop
hlt
add
jmp
add
or
sbb
unpcklps
std
or
mov
cli
jle
bound
mov
cmp
adcl
sbb
sbb
jbe
xor
in
mov
lahf
sbb
cmova
js
add
ljmp
jle
pushf
aaa
jb
int
in
jbe
jecxz
add
add
jmp
add
jp
pop
mov
dec
int3
cltd
sahf
mov
add
mov
popa
aam
xor
add
lods
pop
dec
adc
lods
push
add
mov
bswap
xor
pop
rolb
jg
mov
add
add
dec
ficoms
test
das
movsb
add
into
out
iret
pop
adc
jge
mov
mov
jmp
add
cld
pop
fsubp
sti
push
stos
xchg
dec
in
add
dec
sahf
sbb
add
xchg
xor
add
mov
testb
add
add
mov
int3
out
jge
cmp
sub
testb
popf
fwait
mov
add
out
push
pop
xchg
add
ret
pusha
add
xchg
rolb
cmc
das
pop
sub
add
inc
bound
pop
leave
mov
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbw
cmp
ss
lea
push
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
xchg
mov
jns
add
repz
add
aad
xchg
int
loopne
and
loopne
outsl
xlat
fcmovu
out
dec
push
add
mov
add
jge
sub
loop
out
push
jo
mov
pusha
add
repnz
add
andl
cwtl
xchg
sbb
scas
hlt
add
xor
pop
mov
mov
pusha
add
ret
sub
inc
cltd
xchg
in
push
movsl
lods
cs
pop
pop
out
mov
gs
dec
jae
ds
sbb
cltd
movsb
add
jle
add
xor
call
mov
push
add
push
xchg
ljmp
loop
mov
lock
mov
rol
jo
rolb
in
mov
xor
les
push
add
out
scas
fisubs
test
sub
push
add
outsb
cmpsl
jne
faddp
xchg
adc
cmp
add
mov
emms
mov
inc
pop
gs
push
into
out
sub
stos
dec
jg
sub
addb
add
adc
mov
outsl
push
add
push
add
fisubl
add
stc
or
lcall
cmp
pop
and
mov
pop
xchg
add
add
add
lret
addb
add
mov
insl
leave
mov
sar
sahf
add
adc
lret
add
add
push
enter
clc
mov
add
inc
test
jle
inc
add
lock
mov
insb
mov
add
sbb
jge
add
lods
mul
inc
add
lods
in
mov
add
mov
jge
push
dec
scas
icebp
inc
add
add
mov
add
add
stos
add
mov
jns
test
adc
icebp
das
push
sti
fnsave
and
mov
xchg
sub
mov
xchg
add
cmpsl
mov
mov
aad
add
jns
inc
add
jge
add
aaa
or
sahf
add
add
push
ds
add
pop
mov
mov
add
lcall
add
add
adc
add
int
leave
adc
add
add
popf
into
ja
pop
cwtl
push
filds
push
jbe
add
add
rolb
mov
add
js
add
or
stos
movb
jne
add
mov
test
add
and
mov
add
dec
outsl
add
mov
dec
pop
lods
int3
test
push
add
shll
add
add
fcompl
add
add
inc
dec
rolb
aas
mov
xor
mov
sbb
sbb
gs
dec
push
add
add
clc
iret
fstpl
add
push
add
add
push
cmpsb
add
data16
lret
mov
fidivs
ljmp
rorl
add
xor
pop
mov
lds
xchg
mov
add
dec
mov
add
add
cmp
sbb
dec
or
and
add
popf
popf
cli
mov
lods
inc
add
test
mov
negl
add
xor
ss
add
mov
roll
add
xchg
add
jne
inc
add
jbe
test
in
out
aas
push
push
add
add
test
lahf
daa
lret
jnp
int
inc
add
jle
add
ret
push
add
js
lea
sub
add
mov
add
jge
std
and
mov
cmpsb
add
add
hlt
add
add
sahf
mov
add
jge
jnp
xchg
loope
sbb
inc
nop
add
add
add
ret
repnz
icebp
xchg
nop
add
std
ljmp
xchg
add
sbb
sbb
add
movsl
stc
mov
push
add
dec
filds
je
xor
out
mov
add
jbe
jg
add
aas
cmp
mov
xlat
mov
fnstsw
and
push
ja
add
repz
js
loope
hlt
add
aam
sbb
daa
cmpsb
add
xlat
add
dec
clc
or
in
push
sbb
mov
loopne
loop
cmp
ljmp
add
fcmovnbe
out
add
xchg
add
add
push
stos
dec
mov
cmpl
cltd
mov
lea
arpl
add
das
imul
add
mov
in
gs
subl
in
xor
add
push
mov
lock
add
add
pop
pop
fdiv
jb
aaa
fcompl
add
mov
hlt
add
add
lods
inc
fdivl
add
cltd
xlat
movb
dec
stos
jg
add
xor
add
add
mov
cmpsb
add
add
add
mov
sbb
lret
lret
movb
jo
push
jb
shll
xlat
mov
pop
jb
dec
xor
add
add
push
mov
add
push
add
adcl
loop
je
sub
mov
jecxz
rorl
aaa
cmp
mov
jle
inc
add
add
add
mov
sti
adc
mov
fcmovu
mov
add
mov
jle
pop
fildll
xchg
add
mov
xor
add
mov
jge
rolb
jb
adcl
hlt
add
mov
mov
mov
ret
pop
lds
mov
in
lods
mov
add
xlat
pop
push
push
and
mov
add
pushf
adc
outsb
cmpsb
add
imul
movsl
cmp
add
mov
mov
add
loopne
shll
stos
mov
jae
jo
out
in
dec
je
fcmovnbe
add
cs
movsl
lret
add
inc
add
add
mov
add
dec
rep
rolb
data16
jne
mov
in
roll
incl
test
inc
add
and
cmp
add
mov
int3
push
fdivl
jo
cmp
pushf
xchg
add
das
or
inc
fsubr
mov
add
mov
add
add
test
hlt
add
pushf
xchg
das
add
add
add
add
cmp
sub
test
enter
cmp
or
push
add
add
popf
mov
lods
add
daa
cli
ret
out
pop
arpl
add
rorl
xchg
add
rolb
lods
out
push
add
jp
and
mov
add
movb
add
insb
loop
mov
in
fcoml
add
ja
add
cs
add
lret
daa
rolb
daa
ds
add
add
pop
adc
mov
ja
add
add
add
lock
add
add
les
or
aad
add
jns
into
xlat
in
les
lea
mov
imul
add
add
add
add
sahf
lock
add
push
add
add
cmp
add
into
dec
xchg
add
sti
sysenter
add
jae
add
in
add
sub
jnp
pusha
add
push
sbb
sbb
aad
push
add
sbb
cmp
add
xchg
int
jbe
fdivl
loope
adc
das
out
mov
xor
cmpsb
add
mov
add
stc
pop
stos
dec
daa
rolb
ds
or
add
inc
lea
bound
mov
fwait
cmp
add
add
add
add
cmp
icebp
dec
push
out
pop
popa
cwtl
loopne
push
leave
and
mov
sub
fmull
adc
cmc
sub
rcll
add
mov
clc
push
push
mov
add
mov
test
jb
xchg
add
push
test
pop
jbe
xchg
mov
add
add
outsl
insl
stos
push
arpl
das
mov
push
jae
xchg
add
pop
ja
jecxz
xor
push
stos
aam
jmp
mov
mov
iret
test
in
xchg
add
jno
xchg
add
popf
xor
sbb
lcall
mov
add
imul
mov
call
stos
dec
xor
scas
fistpl
mov
inc
add
aas
cmp
mov
nop
add
inc
lcall
jno
ud0
add
add
inc
add
jge
add
sub
adc
mov
add
add
mov
lret
cli
aaa
in
outsb
mov
adc
mov
or
stc
xchg
rolb
mov
add
sbbl
add
mov
mov
dec
sbb
add
hlt
add
aad
clc
nop
add
inc
or
loopne
sbb
cld
fsubp
dec
repz
xchg
add
jle
add
add
add
sti
xchg
add
mov
lds
notl
add
or
loop
mov
push
and
out
xor
pop
jg
sbb
xor
les
in
ret
mov
push
add
mov
add
aam
mov
add
add
cmp
ljmp
mov
adc
mov
addl
cmpsl
out
dec
mov
xchg
int3
repnz
mov
add
pushf
mov
xchg
nop
add
pop
xchg
addr16
add
test
jge
xlat
mov
add
je
push
repz
sbb
js
ficoml
dec
dec
xchg
add
add
add
rolb
fwait
jmp
dec
jo
jg
or
popa
or
popf
fsubrs
cmpsb
add
add
and
mov
cli
dec
pop
mov
mov
add
add
lret
loopne
popa
xor
add
xor
add
sbb
add
xchg
add
cmpsl
addps
cmpsl
and
pop
jmp
enter
add
add
ret
xchg
add
fcmovnb
jb
xor
pushf
inc
inc
add
and
inc
or
fmuls
add
loop
pop
in
popf
jecxz
add
stc
lock
test
jne
iret
out
sub
adc
and
adc
ljmp
xchg
sub
arpl
add
add
add
add
add
mov
xlat
jge
add
add
push
xchg
imul
push
add
out
fidivl
fs
add
add
ficoms
jne
xor
xor
or
add
add
and
mov
cmpsl
lods
ret
pop
ret
add
add
gs
pop
cmp
loope
add
add
mull
inc
mov
mov
jle
add
aad
add
adc
mov
add
cltd
or
mov
adc
add
fstpt
sub
dec
loope
test
mov
sahf
sub
add
int
add
push
add
add
mov
add
mov
sub
add
mov
cli
stos
sbb
out
and
sbb
addb
add
lret
add
movsb
add
je
dec
push
xor
jae
sbb
add
lret
push
add
add
clc
sbb
jnp
cs
pop
mov
add
xchg
add
fwait
xor
mov
int3
addb
jne
mov
xor
push
call
ficoml
shll
xchg
pop
enter
or
mov
mov
cmp
jmp
enter
add
out
add
mov
jae
andl
ficompl
mov
lds
push
add
mov
int3
testl
add
add
push
je
fnstenv
add
push
or
or
add
mov
movb
ljmp
aas
xchg
movsl
addr16
xchg
add
lahf
or
xor
add
add
add
add
lret
cmpsb
add
and
add
cmp
mov
add
mov
jae
lods
bound
mov
insl
inc
add
test
rolb
push
add
sub
icebp
leave
add
add
dec
and
lret
bound
mov
sbb
repnz
xchg
testb
add
cwtl
outsl
out
loopne
call
testb
pop
push
lock
jnp
add
gs
addl
add
aaa
pop
push
add
imul
sbb
pop
imul
dec
lods
cmp
add
dec
loopew
xor
sar
pop
popf
in
sbb
mov
testb
xor
or
cmp
sbb
add
inc
rolb
add
cmp
add
add
mov
mov
push
add
cmp
add
addl
addr16
inc
dec
pop
in
pop
and
adc
or
or
and
mov
mov
add
cmp
outsb
add
pop
hlt
add
aas
cmp
add
cwtl
add
mov
and
cs
data16
cltd
cli
dec
adc
jnp
add
add
int3
lret
xor
dec
inc
ds
iret
or
mov
add
jl
add
inc
add
add
jg
shll
insl
ja
cmp
add
rolb
sub
fsubl
mov
mov
jecxz
add
sti
fcomi
vpsadbw
enter
add
addr16
ret
dec
jns
add
add
push
in
push
and
add
ds
cmpsb
add
add
add
mov
or
sub
add
add
xor
sbb
or
add
addl
add
mov
mov
sub
int3
and
mov
mov
test
cli
lcall
dec
nop
add
sub
dec
or
add
rolb
push
push
pop
cmp
mov
outsl
out
testb
xchg
push
add
test
sub
aad
in
xchg
mov
inc
add
add
clc
test
sbbl
mov
clc
jbe
cmc
mov
in
xor
mov
mov
lods
sub
add
mov
add
and
add
mov
sbb
in
dec
lods
bound
mov
add
mov
popa
jg
xor
add
or
outsb
in
add
aaa
add
mov
add
add
add
mov
aad
std
lods
fbstp
mov
add
cwtl
fwait
mov
jmp
jno
mov
std
movsb
add
mov
popf
sbb
mov
js
jo
jle
in
lret
jmp
or
pusha
add
lahf
ljmp
add
dec
imul
call
andl
sub
push
loopne
xorl
mov
sahf
push
add
xchg
add
mov
test
lcall
shll
lahf
push
test
add
adc
les
fsubl
mov
test
dec
xor
incb
std
vmovaps
cmp
mov
ds
add
movsl
pop
inc
mov
jo
add
das
imul
add
add
push
sub
lea
add
add
loope
jge
xlat
and
arpl
fidivl
cmpsl
psubusb
xlat
mov
mov
cmc
mov
add
xor
inc
adc
call
lahf
movsl
popf
stos
mov
stos
mov
mov
and
nop
add
addb
das
push
add
mov
out
or
add
add
pop
popl
add
imul
jmp
add
add
add
add
inc
jp
adc
mov
cltd
aam
add
add
mov
add
push
pop
movsb
add
test
leave
repnz
cmc
jo
xor
in
mov
rcr
cmpsb
add
pop
xor
shrl
inc
push
add
testb
pop
clc
xor
out
fcomi
add
outsl
xor
sub
fsubrl
xor
cmp
mov
inc
cwtl
xor
stc
jecxz
add
mov
add
hlt
add
enter
mov
stos
js
add
add
add
push
inc
add
sub
sbb
jmp
add
out
adc
movsb
add
addb
popa
pop
and
xor
pusha
add
sbb
popa
fists
add
push
add
add
filds
add
mov
add
mull
mov
jle
add
sub
inc
mov
js
int3
nop
add
mov
add
mov
out
adc
jae,pn
add
data16
add
lret
test
add
stos
sti
out
ds
add
sbb
dec
adc
dec
loopne
sbb
xor
inc
in
mov
add
stos
cwtl
mov
imul
sbb
cmp
ret
xor
mov
loope
jae
popf
mov
cltd
dec
dec
mov
stos
inc
addb
bound
mov
add
clc
cmpsl
mov
or
bound
mov
add
flds
and
gs
clc
rolb
movsb
add
xchg
add
data16
mov
adc
pop
test
add
add
xchg
add
idivl
jmp
dec
push
add
xor
popf
rolb
mov
xchg
add
xlat
jno
mov
popf
fxam
jg
mov
jmp
imul
add
pop
pop
movsb
add
mov
inc
mov
add
pop
jne
add
fnsave
cli
xchg
add
xor
sub
sub
push
xor
add
mov
or
xchg
add
movb
mov
mov
ja
add
mov
movsb
add
sahf
out
pop
and
outsb
int3
bound
mov
aad
cld
cmc
xchg
add
add
test
lcall
je
jecxz
dec
xchg
mov
cli
ror
xchg
add
add
xor
lock
add
add
push
add
add
jmp
ja
add
rolb
push
lea
add
mov
sbb
dec
xlat
addr16
add
mov
rolb
ds
add
add
xchg
xor
jnp
xchg
xor
cmp
hlt
add
sarl
add
add
add
add
iret
test
add
sub
adc
or
add
dec
movsl
aad
outsl
xchg
cmp
cli
xor
add
icebp
mov
cmp
add
sbb
add
or
add
fimull
outsb
adc
add
popf
je
xlat
xchg
push
add
out
sub
mov
add
adc
stos
movb
add
movsb
add
cs
add
mov
scas
aas
leave
pop
cmc
roll
stos
inc
mov
enter
les
mov
mov
pop
hlt
add
xchg
sub
push
fwait
insl
adc
inc
add
xor
add
mov
or
xchg
add
clc
fnstcw
lahf
xor
mov
add
lds
push
pop
rolb
test
pushl
mov
add
hlt
add
add
mov
add
pushf
or
cmp
add
hlt
add
add
jge
adc
add
add
add
lods
scas
hlt
add
add
and
movsb
add
arpl
adc
add
add
or
rolb
dec
outsb
pop
inc
add
pusha
add
testl
sbb
add
dec
pop
jbe
cmp
add
sbb
push
add
lds
mov
push
add
sbb
push
add
add
ds
mov
jne
popf
movsl
pusha
add
sub
add
add
add
cmp
in
ljmp
jl
add
sub
add
add
in
dec
clc
cli
js
test
inc
add
push
add
add
and
mov
add
mov
sub
addb
punpckhwd
fsubs
mov
add
fldl
pop
push
add
mov
add
inc
add
loop
sbb
push
add
fistpll
add
dec
outsb
sti
xchg
add
clc
xchg
lahf
push
repnz
aad
imul
and
out
imul
fists
pusha
add
add
lret
mov
dec
insb
jno
inc
les
xchg
sbb
fdiv
add
repnz
rolb
rolb
and
leave
in
mov
ljmp
add
decl
add
mov
adc
fsubl
add
lcall
add
in
fwait
mov
ret
push
xchg
adc
sbb
xor
rolb
pop
repz
xchg
mov
mov
lahf
push
addb
ffreep
jo
pop
cltd
sti
or
cmp
cld
std
loopne
xlat
addb
add
sub
pop
inc
daa
js
add
push
add
cwtl
stos
inc
push
add
sbb
cmc
cmp
jmp
cmp
or
jne
add
mov
jns
insl
xchg
popl
pop
pop
push
add
add
outsb
sub
add
hlt
add
jle
add
out
lea
lds
outsb
ret
test
push
mov
add
add
jmp
stos
dec
jns
loopne
xchg
dec
out
cmpsl
test
lret
and
add
mov
add
and
mov
jl
add
xor
push
add
lods
mov
fistpl
add
rcll
dec
cwtl
rorl
add
loope
mov
inc
daa
add
add
add
add
push
add
add
dec
pop
arpl
inc
sbb
ret
or
stos
enter
stc
inc
add
movsb
add
out
out
and
adc
mov
out
lea
iret
mov
stos
mov
rcll
add
mov
icebp
mov
xor
stc
lret
or
aas
inc
pop
test
aas
int3
rol
mov
js
cmpl
mov
loop
add
mov
mov
add
add
cltd
repnz
lds
push
add
subl
leave
lret
mov
das
push
add
ret
add
fwait
jbe
in
test
add
cmp
add
inc
pop
inc
add
inc
mov
test
xor
lcall
add
or
add
loope
cmc
loope
iret
clc
aaa
mov
jne
add
xchg
enter
stos
sub
jbe
scas
repnz
popa
jno
cmp
add
mov
test
mov
add
lock
mov
add
push
test
sbb
stos
fs
add
add
sbb
stos
out
cli
mov
data16
mov
dec
popa
ja
push
add
jne
mov
add
add
add
insb
jns
add
add
imul
push
xor
sbb
xchg
add
test
addb
repz
add
stc
fidivl
mov
pop
loope
shll
add
dec
push
mov
add
mov
mov
push
fisubl
mov
inc
push
mov
add
ja
insb
push
add
add
add
sub
cmp
xchg
scas
push
or
or
add
aaa
add
add
outsb
lods
jg
xchg
add
andl
addb
add
aas
fnstenv
cmp
add
mov
movsb
add
stos
das
test
dec
aam
push
add
xchg
das
pop
adc
int
jge
add
add
lds
aad
pop
pop
jbe
xchg
add
cmp
add
scas
xchg
add
sub
movb
add
in
sub
ret
and
lods
out
mov
fistpll
fstp
fidivrs
fwait
add
mov
or
add
adcl
xchg
lds
push
int3
or
lods
cmpsl
jl
pop
push
jecxz
add
add
bound
mov
rol
add
push
test
rcrl
jg
aad
mov
add
adc
call
ret
rolb
mov
add
add
dec
in
cmp
xchg
add
add
cmp
add
mov
std
imul
sbb
add
add
clc
cli
mov
das
test
add
mov
incb
add
add
adc
add
mov
add
sub
add
add
dec
mov
add
add
mov
or
div
xor
jle
test
inc
ljmp
aas
mov
clc
dec
and
mov
add
addb
add
add
add
add
pop
rolb
push
jnp
pop
lahf
xchg
mov
add
xor
out
push
add
movsl
add
mov
in
daa
popa
jno
pop
movsl
ljmp
loop
mov
mov
add
add
mov
sbb
mov
add
add
mov
jge
add
mov
add
imul
xchg
cmp
repz
add
adc
cmp
dec
rolb
cmpsb
add
cmp
gs
sub
mov
add
mov
in
out
dec
push
imul
pop
xor
test
jbe
xor
add
xchg
add
push
add
add
mov
fadds
hlt
add
rolb
testb
xchg
add
jle
out
sbb
cmc
jbe
in
and
add
data16
sbb
pop
push
add
add
sbb
movsb
add
imul
ds
shld
xor
outsl
adcl
clc
xorl
imul
jbe
dec
dec
sub
add
mov
lahf
add
mov
mov
enter
add
fistps
add
int
sahf
inc
inc
xchg
leave
adc
lods
movb
add
add
add
add
repnz
jae
push
add
mov
sbb
leave
int3
dec
aad
cmpsb
add
sub
add
je
int
push
add
jg
sub
add
mov
add
add
xor
jecxz
and
mov
mov
add
test
jne
pop
jo
sub
roll
add
test
mov
shll
add
jl
inc
add
ja
add
les
lods
xchg
idivl
add
stc
inc
in
jb
sbbl
add
mov
add
mov
lret
jno
lea
sbb
adc
notl
xor
out
jl
cmpsb
add
jp
add
add
out
jge
add
add
data16
ljmp
cmp
add
xchg
sbb
test
mov
outsl
dec
jbe
roll
xchg
mov
xor
movsb
add
inc
add
pusha
add
cmp
sbb
add
popf
dec
repz
dec
sbb
stc
bound
mov
mov
fists
movb
jge
jno
add
mov
add
add
add
mov
popa
test
add
add
cmp
inc
add
or
add
add
mov
outsb
nop/reserved
fcom
add
mov
jo
cli
sbb
mov
int3
xchg
test
add
xchg
mov
dec
std
bound
mov
add
arpl
mov
cs
add
sti
nop
add
or
sbb
xor
and
mov
cltd
movsb
add
xchg
add
cmp
add
add
xchg
push
add
add
add
pop
lock
add
sbb
xor
add
add
add
jge
pop
add
aaa
roll
add
shll
mov
xor
or
adc
std
enter
inc
add
shrl
clc
xchg
adc
enter
mov
jge
add
lret
xchg
add
add
or
out
jecxz
mov
stos
jp
cwtl
inc
add
pop
repnz
mov
test
rol
jle
in
jae
cmpsl
call
cmp
xchg
xchg
add
cld
aaa
fmul
sub
lcall
mov
stos
add
dec
dec
fst
add
pop
leave
pop
ja
or
jno
xadd
mov
sbb
add
jmp
sub
dec
mov
add
add
mov
popf
inc
add
out
in
hlt
add
add
inc
add
cmpsl
call
pop
pop
push
add
pusha
add
add
mov
mov
pop
aas
hlt
add
add
add
add
cmp
add
add
push
add
add
inc
movsl
popa
rolb
add
inc
add
movb
mov
jmp
adc
das
jbe
daa
sbb
cmpsl
or
add
jae
les
inc
add
mov
push
add
add
add
mov
movsb
add
ret
sub
pop
add
mov
pop
and
mov
mov
sbb
adc
out
inc
fidivs
adc
xchg
adc
inc
aaa
shll
add
and
mov
add
inc
jae
popf
jae
fdivl
add
add
add
lcall
cmp
add
call
ljmp
and
inc
clc
pop
inc
mov
aaa
adc
add
xchg
add
add
pushf
xchg
rolb
pusha
add
mov
addb
push
xchg
push
pop
mov
mov
add
mov
add
cmc
bound
mov
pop
adc
add
inc
mov
sub
add
rolb
stos
bound
mov
movsb
add
fcmovnu
adc
pop
fstpt
pop
inc
inc
insb
mov
add
addl
mov
xor
ljmp
jnp
push
mov
add
mov
add
xor
add
pop
sbb
and
arpl
add
mov
mov
mov
add
add
add
push
add
add
add
xchg
mov
add
cmp
add
lahf
aaa
sub
push
add
jg
dec
mov
add
inc
add
inc
add
mov
add
add
xor
or
cmp
or
pushf
popa
dec
dec
in
push
xchg
mov
rolb
jne
imul
and
mov
data16
mov
mov
das
test
add
rcrl
dec
out
test
cmp
add
insb
lods
mov
add
add
add
aas
jl
add
inc
add
pop
xchg
add
mov
fldl
mov
add
add
mov
xor
add
mov
fbstp
movb
addb
add
sbb
mov
jb
mov
add
add
xor
cmp
es
rolb
xor
pop
shll
add
popf
dec
ret
lret
cmp
jne
fisttpl
lock
add
jae
add
mov
pop
ret
test
popa
filds
add
add
xchg
sub
add
add
mov
add
mov
mov
fs
add
add
add
mov
sahf
mov
testb
out
mov
orl
aam
repnz
add
add
jl
ds
add
loop
data16
leave
add
test
call
mov
adc
add
js
adcl
in
jb
pop
pop
testb
add
add
mov
out
or
add
or
add
fcomps
repnz
sub
dec
ja
rolb
movb
fstpt
out
jp
sti
mov
popa
or
outsl
mov
sub
xchg
add
pop
bound
mov
jcxz
arpl
fldcw
cli
sbb
pop
pop
ret
addb
ret
ret
sbb
loope
iret
adc
and
in
js
enter
mov
mov
in
cmpsl
pop
fstpt
imull
add
or
xor
cltd
ds
or
pusha
add
xchg
adc
inc
add
nop
add
loope
add
cmp
add
lods
add
mov
push
add
das
push
add
add
add
loope
jne
add
lock
sbb
add
add
add
negl
push
dec
xchg
add
xchg
xor
ret
loopne
rorl
push
add
fcomip
add
xchg
add
fsubrs
cmpsl
dec
popa
insb
pop
mov
add
aas
aam
pushf
lods
xor
mov
add
xchg
add
adc
icebp
jmp
into
aas
pop
jle,pn
add
add
add
scas
fs
mov
pminsw
js
xchg
add
mov
fidivrs
add
repnz
add
clc
lock
mov
imul
lea
insb
test
dec
stos
pushl
inc
loope
rolb
mov
pop
inc
orl
mov
and
jge
mov
fnstenv
inc
rolb
adc
jge
add
rcr
rolb
jbe
add
push
add
add
mov
fiaddl
jnp
test
mov
add
orl
dec
popf
cwtl
xor
jp
mov
cli
lcall
or
xchg
add
add
push
add
push
add
lahf
les
icebp
add
adc
push
testl
inc
add
add
or
jmp
push
gs
add
cmp
dec
testb
add
add
push
add
outsb
faddl
testl
insl
movb
ret
add
mov
in
cmp
adc
int3
add
mov
repnz
out
gs
add
inc
add
sbb
mov
push
add
add
xor
pop
setg
add
ljmp
adc
or
inc
add
mov
jmp
addr16
add
mov
add
adc
add
mov
sub
or
pop
push
cs
repnz
add
pusha
add
add
mov
scas
xor
fcmovnbe
adc
jg
push
add
add
add
add
add
das
add
mov
out
stos
push
add
mov
inc
shrl
jp
and
rcrl
daa
xchg
push
add
sbb
add
aad
js
mov
add
add
xchg
sahf
pop
ljmp
cs
ret
sub
mov
mov
xchg
into
test
add
pop
outsb
mov
add
add
stos
clc
cwtl
dec
mov
imul
add
mov
add
mov
or
push
mov
popa
push
add
mov
add
add
addb
sti
in
lcall
pushf
pop
mov
mov
js
fsubr
gs
mov
lcall
xchg
add
add
inc
add
add
cmp
insl
cwtl
imul
add
add
mov
mov
mov
pop
sbb
jle
pushf
or
add
movsl
pop
aam
fimuls
out
adc
mov
inc
cmp
add
sub
push
add
xchg
testl
push
stc
adc
push
sub
popf
cmp
data16
add
add
pop
movsb
add
jg
mov
jae
dec
push
add
mov
cmp
movsb
add
add
add
add
jle
xchg
adc
add
icebp
aad
lock
push
xlat
fwait
enter
movsb
add
addb
add
xor
movb
jb
xchg
add
loope
add
add
loope
pop
clc
inc
push
adc
adc
bound
mov
add
add
pop
or
cltd
jnp
add
into
pushf
scas
out
mov
mov
lcall
popf
cld
pop
and
mov
dec
fidivl
clc
pop
in
movsb
add
jne
add
mov
sbb
call
aam
mov
aaa
int
mov
sub
add
mov
cmpsl
lret
outsl
adc
in
add
add
xlat
mov
divl
hlt
add
mov
pop
in
mov
push
inc
jnp
add
add
add
mov
movsb
add
mov
add
mov
add
mov
jmp
dec
jae
dec
jb
jo
jl
test
in
icebp
iret
mov
push
add
jns
add
mov
xor
shll
data16
add
add
add
mov
sbb
add
pop
idivl
bound
mov
pusha
add
add
sahf
and
dec
in
inc
add
jge
mov
xor
inc
push
jns
ret
cmpsl
pop
pop
mov
mov
mov
add
push
xor
adc
pop
jge
add
xor
add
sbb
add
mov
cli
incl
jo
stc
je
inc
pop
out
stos
push
add
or
xchg
and
cmpsl
sbb
add
rcll
loope
add
adc
mov
jge
and
mov
inc
insl
dec
clc
ds
mov
sbb
mov
mov
xor
cmpsb
add
mov
inc
lea
mov
add
enter
dec
fdivr
test
add
arpl
repnz
add
push
sbb
add
mov
bound
mov
push
daa
xchg
add
add
dec
repnz
add
je
mov
push
add
add
add
mov
mov
cmp
add
lahf
mov
xor
cmp
addb
jbe
push
add
add
add
jo
and
add
add
jae
jl
push
add
add
das
jns,pt
cwtl
inc
fisubrl
aaa
jbe
aaa
cli
pop
or
leave
push
stc
shll
fistpl
dec
mov
xor
push
pop
rolb
pop
mov
add
add
jo
loopne
ljmp
add
add
add
movb
int3
fistps
xchg
add
scas
pop
add
mov
sub
mov
popa
popf
xchg
add
add
add
mov
add
add
clc
xor
add
or
sbb
pop
inc
add
addb
add
sbb
add
add
xchg
mov
add
jns
add
adc
cli
sub
lea
add
pop
sbb
add
add
add
add
or
add
add
add
mov
add
push
bound
mov
xchg
add
mov
mov
je
mov
add
std
in
push
add
xchg
in
addb
jle
add
arpl
sub
mov
mov
scas
sub
sarl
xchg
push
add
add
testb
add
mov
cmpsb
add
and
mov
lods
bound
mov
mov
add
xlat
sar
xor
sbb
cmp
add
and
aad
test
jmp
mov
add
push
add
mov
cmc
jmp
pop
cltd
inc
mov
cmp
cwtl
mov
add
push
add
and
je
add
aas
jnp
mov
push
add
add
jmp
cwtl
leave
push
add
dec
stos
mov
addb
jle
dec
dec
adc
add
add
leave
jb
daa
cmp
imul
ror
add
adc
leave
je
mov
rolb
ret
push
jb
pop
add
mov
inc
add
cmpsl
aas
mov
data16
dec
sbb
add
push
loop
ljmp
and
stos
jp
add
outsb
cs
or
outsb
xchg
add
imul
add
mov
pop
push
add
mov
xor
test
add
cmpsl
mov
int
adc
ret
add
add
jp
add
mov
pop
cmp
add
add
dec
xor
add
pusha
add
adc
testb
imul
jecxz
cmp
xchg
lds
pusha
add
jnp
jl
subl
dec
rolb
lock
out
xchg
inc
jl
dec
mov
add
mov
mov
loope,pt
rolb
sti
mov
add
push
sbb
and
mov
add
addb
add
mov
add
js
add
pop
or
sbb
mov
push
add
jbe
out
imul
add
add
inc
cmpsl
pushf
xlat
loop
in
push
mov
das
add
add
lahf
xor
dec
icebp
inc
add
sbb
jb
jecxz
pop
sbb
aad
xchg
add
add
outsl
push
add
add
sbb
out
add
je
inc
add
jnp
add
adc
adc
and
mov
add
jle
stos
push
int
adc
insl
pop
arpl
sub
gs
scas
gs
cmp
add
add
mov
xchg
add
adc
adc
jae
and
mov
adc
insb
iret
ja
add
pop
insb
mov
xor
in
enter
mov
add
pushf
xchg
push
add
add
push
add
and
add
inc
add
mov
ljmp
clc
ficoms
add
jmp
add
repz
add
adc
insb
rolb
xchg
add
pop
bound
mov
add
add
adc
jl
push
add
xchg
or
clc
jns
add
add
mov
call
js
pop
dec
inc
add
add
mov
sbb
inc
add
push
mov
add
add
mov
add
mov
cs
add
test
xchg
add
add
rolb
sahf
adc
loop
jg
xlat
xchg
aad
call
leave
frndint
and
add
jne
ljmp
pop
gs
inc
cmpsl
iret
lret
jae
add
mov
add
aaa
ja
add
and
pop
cmpsb
add
inc
add
xlat
das
ret
mov
in
pop
stos
add
add
mov
add
mov
dec
nop
add
add
sub
or
cltd
out
add
test
add
mov
push
add
add
cs
cmpsl
fucompp
jbe
aad
pop
sbbl
sub
push
add
sbb
add
clc
popa
pop
xor
out
and
push
scas
mov
mov
xor
cmp
hlt
add
adc
cmp
add
jnp
stos
outsl
sub
mov
inc
negl
mov
add
mov
rcrl
or
pop
push
ret
movsl
mov
add
movsb
add
ficoml
iret
mov
add
add
add
mov
nop
add
fadd
xor
cltd
shll
add
into
test
hlt
add
paddq
pop
or
add
mov
aas
sub
add
xor
jle
add
mov
xchg
add
adc
jnp
cmp
add
add
mov
add
add
xor
jle
cmp
out
mov
jbe
in
sbb
mov
adc
sti
push
xchg
add
add
pop
aaa
rolb
add
add
popf
or
enter
or
push
xchg
incb
mov
mov
in
pusha
add
sub
ret
fimull
scas
movb
loop
cli
int3
adc
jle
fldl2t
ficoms
repz
xchg
add
add
cmp
lret
test
repz
add
add
inc
add
push
add
push
add
mov
add
lret
push
add
cltd
xchg
mov
pop
push
test
rolb
sbb
jbe
rolb
push
mov
xchg
mov
push
jp
out
test
mov
pop
mov
add
cmp
testl
stos
add
movb
add
fimull
dec
aam
sub
outsb
in
push
ljmp
test
adc
jns
add
jne
mov
xor
sub
mov
jp
dec
add
out
push
add
pop
popa
adc
lret
pop
mov
add
outsb
push
add
fldcw
xor
ret
or
add
jae
jecxz
ret
insb
rolb
add
or
mov
pop
or
pusha
add
xchg
add
dec
fdivrl
sti
loopne
jecxz
shl
iret
sbb
pop
addb
mov
and
in
movsb
add
pop
dec
or
fcompl
dec
mov
add
add
or
stos
or
inc
add
sub
data16
mov
jle
das
jae
push
add
fnstsw
fstl
cltd
dec
xchg
fbld
fldl
mov
add
mov
xchg
mov
add
add
add
outsb
mov
add
add
iret
bound
mov
jb
pop
fimuls
iret
rolb
lods
jecxz
add
add
mov
mov
mov
daa
jge
add
or
add
mov
jle
add
add
cmp
add
out
cmp
into
jecxz
fcmovnu
sbb
aas
sbb
add
or
mov
cmp
imul
add
add
out
or
leave
lret
cmc
xchg
add
add
pop
mov
xchg
add
push
add
fwait
push
push
stos
mov
cmpsb
add
pop
daa
cltd
aad
add
add
dec
aaa
or
add
add
mov
add
and
fcomps
add
jecxz
mov
adc
mov
add
gs
cmp
add
add
add
jp
cmp
call
and
mov
push
movsb
add
pop
sahf
jno
add
mov
arpl
or
xor
jo
aad
jo
mov
add
mov
jmp
add
add
cs
add
inc
in
inc
jmp
xchg
add
push
inc
add
add
pop
pusha
add
mov
mov
dec
out
mov
jp
mov
jo
mov
mov
add
add
aas
cld
fadds
add
addb
pushf
bound
mov
inc
add
pop
push
add
xchg
cwtl
clc
push
add
xor
inc
add
xor
mov
push
add
icebp
nop
add
add
pusha
add
add
adc
push
add
add
mov
add
xlat
jmp
adc
lods
cmp
add
lea
enter
test
push
jle
add
testb
add
add
mov
and
xchg
loop
ss
or
add
add
or
add
or
ja
add
xchg
xlat
leave
pop
ja
lahf
cld
lret
lock
scas
push
add
mov
fbstp
sbb
out
sub
pop
sub
add
jns
cli
into
add
add
pop
lret
je
mov
xchg
add
jg
ss
add
xchg
add
push
and
lahf
mov
xchg
xchg
add
add
add
js
xchg
cmp
dec
testb
rolb
out
sldt
mov
fnstenv
push
add
fnsave
insb
cmp
aam
bound
mov
jnp
sbb
lret
jo
bound
mov
xor
pop
sbb
add
add
icebp
mov
add
add
mov
imul
fadds
ret
mov
add
add
xor
jl
mov
pop
mov
adc
xor
cmp
add
xchg
add
mov
add
add
xchg
add
jne
cmp
add
add
add
dec
adc
inc
cmpsl
lahf
fdivp
add
add
xor
call
add
add
test
mov
addb
add
sub
xchg
add
mov
xor
add
cmp
add
add
ds
add
jbe
adc
push
add
cs
add
adc
mov
pushf
stc
fcmovnb
add
das
lds
mov
dec
and
mov
sub
fdiv
add
ret
add
pop
jo
pop
ffree
add
mov
pop
cli
add
push
jno
mov
daa
or
mov
mov
jne
xor
test
loopne
mov
add
mov
in
pop
mov
int
jecxz
sub
dec
adc
leave
rcrl
pop
popf
arpl
add
pop
jns
sti
cmp
cmc
sbb
cmp
lahf
imul
jecxz
mov
mov
and
xor
lock
add
add
add
push
add
push
push
add
or
push
dec
jle
add
adc
xor
add
insl
inc
add
xchg
or
mov
enter
jbe
xlat
ljmp
cmpsb
add
stos
inc
xchg
add
add
add
rolb
enter
mov
filds
add
add
xchg
int3
int3
and
cmc
mov
xchg
add
add
rolb
and
mov
popa
pop
sbb
std
aad
pusha
add
inc
add
add
add
inc
add
cmp
enter
lods
mov
xlat
jo
mov
add
add
inc
add
ljmp
test
add
add
add
add
push
sbb
or
lds
xor
add
das
outsb
mov
rolb
add
add
xchg
xor
mov
xlat
ljmp
mov
and
xchg
add
mov
add
adc
or
xor
add
in
sub
add
mov
data16
mov
jbe
or
add
sbb
add
lahf
cmp
or
jns
mov
sub
add
cmp
mov
rolb
jge
dec
pop
push
add
insl
adc
inc
add
test
sbb
mov
lret
sbb
mov
cmp
mov
xchg
aas
cmp
out
test
mov
jmp
sbb
bound
mov
add
mov
movsl
jo
push
add
add
inc
lods
mov
add
jo
int3
imul
add
iret
push
add
fistpl
pop
movb
aam
repz
push
add
lcall
mov
mov
add
and
cmp
mov
add
mov
cmpsl
adcl
sbb
add
cmp
cmp
add
cli
xchg
insb
imul
sub
mov
pop
and
aas
rolb
dec
in
daa
mov
out
xor
into
fsubl
leave
data16
aas
ds
pop
movb
xchg
stc
push
or
rolb
jecxz
add
add
jae
daa
dec
fstl
in
push
add
mov
add
add
movsl
hlt
add
xchg
jne
mov
fcmovbe
pushf
and
mov
pop
cmp
inc
sub
mov
add
add
add
mov
pusha
add
test
add
push
add
pusha
add
mov
add
mov
aaa
push
jg
dec
push
loopne
jb
fwait
inc
add
aad
rolb
jge
dec
add
mov
dec
xchg
hlt
add
add
lods
pop
outsl
addr16
jo
add
or
adc
adc
pop
imul
push
sbb
lock
xchg
adc
pop
mov
cmp
jnp
fsubp
add
scas
lock
dec
inc
add
test
aaa
cmp
mov
fimuls
lock
add
sub
xor
mov
add
fsubrl
ja
inc
add
outsl
jmp
mov
add
sbb
sub
add
sti
in
adc
or
mov
pop
mov
add
sub
pop
sbb
mov
add
jne
testb
lcall
sub
pusha
add
add
add
es
pusha
add
add
or
in
pusha
add
add
mov
cmp
fndisi(8087
out
js,pn
add
scas
dec
xlat
xlat
imul
ljmp
jbe
xor
add
jae
add
cmpsl
sbb
ja
into
pop
into
rcll
xor
and
dec
mov
test
add
pop
testb
fisubl
and
movb
popa
ss
popa
inc
add
add
add
cmpsb
add
add
test
shrl
push
add
daa
pop
int3
mov
imul
movsb
add
pop
and
mov
inc
dec
add
mov
aam
popf
push
lret
fcomip
add
xor
add
jae
out
fldcw
adc
add
add
cmp
loop
addr16
inc
les
dec
popa
mov
xchg
or
mov
daa
or
dec
xor
add
enter
add
add
xlat
cmpsb
add
ss
add
xchg
push
add
add
push
fbld
add
pop
xlat
xor
mov
ret
xor
add
add
aam
jne
jg
addr16
add
cli
lret
fs
add
sbb
sbb
add
arpl
add
add
add
xchg
inc
sub
pop
enter
add
push
add
add
dec
pinsrw
add
sbbl
pop
xor
pop
fwait
rolb
inc
add
movsb
add
add
dec
fcomip
add
add
add
add
imul
jnp
cmp
add
inc
add
orl
mov
xchg
inc
add
sbb
add
add
pop
lahf
xchg
add
add
inc
jbe
dec
push
add
or
adc
ss
add
cmpsb
add
add
iret
add
rolb
mov
push
data16
push
add
add
cli
repz
sub
sub
int
out
lcall
fstp
ja
and
mov
dec
stc
gs
sbb
test
or
add
mov
enter
jecxz
add
lret
xor
ja
sub
in
add
add
xor
incb
lods
aad
js
xor
push
je
fs
cmpsl
push
add
out
and
inc
lods
nop
add
add
popa
inc
xchg
add
insl
movsb
add
mov
mov
sub
add
xchg
divl
div
out
adc
mov
in
add
rol
jmp
push
cwtl
addb
add
add
pop
pop
pop
or
lods
mov
mov
shrl
inc
add
pop
cmc
stos
dec
xor
jbe
iret
xor
dec
rolb
outsl
add
push
and
rorl
sahf
xlat
popf
xchg
xor
enter
mov
mov
add
mov
sbb
mov
add
add
push
add
add
rolb
add
mov
icebp
arpl
add
jl
std
fmuls
test
xor
push
inc
xchg
sti
movb
xor
add
push
mov
rolb
xchg
add
xchg
adc
adc
out
stos
in
out
cwtl
nop
add
mov
test
cwtl
lea
sbb
stos
insb
jecxz
mov
mov
repnz
andl
in
add
dec
mov
mov
addl
push
pop
xlat
fld
inc
push
repnz
push
add
xchg
mov
and
aam
cmc
jmp
movsb
add
adc
testb
mov
sub
jmp
mov
dec
xor
add
add
lds
ds
js
in
jnp
addr16
add
add
shll
add
adc
push
data16
les
push
cmp
or
clc
popa
data16
dec
dec
push
add
add
add
fcompl
in
jge
push
sbb
add
in
dec
mov
aaa
rolb
fucomp
mov
rcll
add
outsb
dec
dec
mov
cmp
xor
cli
mov
add
mov
mov
add
test
addb
push
nop
add
xor
push
inc
add
loop
add
add
ficomps
filds
insl
mov
push
add
lock
xchg
add
and
cmp
add
xchg
data16
pop
pop
jb
out
cld
int
test
or
addb
add
cs
mov
mov
inc
add
aas
loopne
mov
add
pop
push
add
add
add
lods
cwtl
push
add
xchg
rolb
and
xor
or
in
cmpsl
mov
fprem
movsb
add
add
mov
and
pop
xor
xchg
add
add
add
lock
add
pop
mov
add
lods
sbb
stos
enter
imul
popa
mov
adc
jne
add
add
mov
xlat
sbb
add
adc
push
add
mov
add
add
add
cwtl
jns
sarl
push
int
dec
gs
xor
dec
adc
cltd
mov
mov
lahf
dec
adc
sbb
mov
inc
add
dec
pusha
add
push
enter
insb
and
mov
jae
add
repnz
fwait
lds
add
shrl
fs
clc
sbb
add
mov
jl
sub
cmp
adc
push
fdivs
and
xlat
out
inc
add
xchg
add
jbe
int
add
mov
rolb
mov
inc
dec
out
inc
add
add
add
add
add
pop
rolb
mov
jl
cs
lock
sbb
mov
pop
fldenv
bound
mov
add
arpl
add
mov
mov
ror
test
cs
pop
push
add
add
and
mov
xchg
add
xlat
out
mov
pop
cli
inc
add
cs
add
add
and
mov
mov
addb
add
sbb
adc
mov
push
popf
mov
add
dec
jb
repnz
jns
adc
dec
out
adc
and
mov
add
add
add
or
mov
cmp
add
add
sub
push
aam
stos
movsb
add
xor
and
out
mov
popf
jns
push
or
scas
adc
add
jae
cmp
add
mov
mov
ret
in
movsb
add
add
jns
add
in
cwtl
sub
xchg
add
cwtl
out
adc
add
sub
jbe
out
adc
shr
dec
insb
and
mov
adc
add
adc
icebp
add
push
add
aaa
js
xor
lret
dec
jae
xor
cmp
fnstcw
rolb
add
call
dec
testl
data16
adc
cmp
dec
pop
and
int
mull
mov
cmp
pop
out
add
mov
rolb
add
nop
add
mov
add
test
add
add
mov
xchg
push
push
lods
leave
lret
push
add
add
sbb
add
add
add
add
cld
inc
add
repnz
mov
rcrl
or
in
mov
into
inc
arpl
mov
fwait
ljmp
add
xor
ret
js
add
add
xchg
sti
and
inc
and
mov
xchg
out
fwait
jb
jb
or
jo
pop
sbb
in
pop
xor
lods
jae
add
mov
add
add
adc
dec
fcoml
add
mov
stos
jne
ljmp
test
xchg
rolb
add
aaa
mov
mov
inc
add
xor
repnz
add
scas
and
mov
cwtl
lock
add
daa
xlat
inc
add
in
inc
jno
add
xor
fisttpll
push
add
add
ds
push
add
sbb
jge
add
popa
hlt
add
jno
add
pop
xchg
jmp
repz
mov
scas
iret
addb
add
add
jne
xchg
add
add
adc
mov
add
mov
repnz
sbb
sub
lahf
push
add
add
pushf
mov
mov
add
cld
loopne
mov
or
add
add
pusha
add
xor
jg
jge
fisttpll
outsb
mov
xchg
out
dec
or
xor
cmp
popf
and
pop
rcrl
fsub
cli
sbb
test
loopne
iret
int
add
add
adcl
outsb
outsl
push
dec
pop
inc
mov
sbb
iret
movsb
add
aad
add
or
add
outsb
push
add
sbb
or
jne
popf
mov
adc
out
pop
ljmp
movsl
mov
or
mov
cmp
add
pop
pop
ja
add
mov
xor
ljmp
jecxz,pt
add
fnstenv
mov
pop
outsl
xor
lret
pop
sti
ds
add
scas
ret
test
addr16
mov
inc
mov
fistpll
out
inc
in
lods
xor
jo
or
loop
lea
lahf
inc
cmp
data16
add
mov
mov
cltd
cld
inc
add
jle
mov
inc
xchg
cmpsb
add
popf
xor
add
insl
gs
push
cltd
into
scas
push
fldenv
add
jg
add
add
jne
mov
mov
mov
or
mov
add
push
xor
fmull
add
sbb
pop
sub
pop
jae
loopne
addb
add
fldl
fisubrs
mov
data16
mov
add
add
shll
in
ret
aaa
dec
ljmp
cmp
movsl
mov
mov
jl
dec
pop
xchg
add
add
scas
test
or
xchg
add
jo
push
ror
icebp
add
mov
push
add
mov
add
jge
pop
lea
addb
jg
cltd
stc
fwait
ret
aaa
cmp
out
xchg
add
inc
dec
pop
icebp
stos
gs
add
add
add
add
adc
jnp
add
mov
jbe
jg
lret
mov
ss
xor
insl
bound
mov
add
add
mov
xchg
test
push
aas
cwtl
xchg
or
xor
dec
xor
add
and
mov
mov
mov
and
add
add
jo
dec
lea
add
add
mov
incb
add
sbb
mov
push
xchg
mov
aaa
mov
out
loope
add
int3
mov
dec
cmp
dec
outsl
and
mov
xchg
add
add
push
jg
sub
jge
iret
xchg
add
mov
cmp
add
pop
mov
add
push
rolb
movb
aas
rolb
clc
jle
add
add
mov
mov
mov
add
repz
cmp
add
add
add
adc
cmpsl
movsb
add
dec
push
add
add
repnz
sub
and
movb
out
aad
add
xor
imul
add
push
mov
gs
popa
outsb
or
mov
and
mov
add
fsubr
adc
add
add
clc
fisubs
add
lods
pusha
add
pop
cltd
dec
lock
mov
data16
inc
add
mov
mov
add
out
aad
add
add
aam
add
add
mov
sbb
jge
imul
rolb
push
add
cltd
dec
clc
add
mov
loop
das
inc
lds
add
ljmp
adc
add
xor
insb
les
and
fidivrs
jbe
addr16
add
outsb
ds
xchg
sub
add
pop
mov
jne
add
daa
pop
repz
or
cwtl
inc
add
add
inc
jle
pop
jle
add
outsl
test
dec
sbb
mov
pop
es
andl
push
add
ss
pop
push
pushl
mov
add
add
add
mov
arpl
cmp
in
cltd
aam
fdiv
mov
les
mov
add
dec
mov
add
popf
imul
sbb
out
mov
addb
adc
fstps
loope
lahf
cmc
push
push
xor
or
fsub
add
lock
mov
push
add
adc
mov
add
mov
loopne
lret
jle
add
les
data16
lods
rcr
mov
adcl
call
mov
sbb
pop
pop
jl
mov
sbb
mov
mov
stos
dec
adc
mov
pop
or
add
add
add
push
add
data16
rolb
int3
hlt
add
jb
test
dec
dec
add
mov
xchg
fwait
or
aam
fsubp
mov
push
leave
loop
aaa
les
mov
jecxz
xlat
ds
add
clc
or
ss
les
nop
add
mov
add
test
jo
mov
mov
or
insb
jl
mov
scas
arpl
sbbl
add
inc
add
rcll
pop
aam
fistl
pop
xchg
xor
xchg
add
add
iret
push
add
ret
data16
data16
mov
adc
aaa
fsubl
rcrl
jge,pn
je
or
jnp
sub
or
pusha
add
push
add
stos
adc
mull
mov
add
mov
push
xorl
add
in
mov
add
add
push
add
add
fcoms
fmull
add
mov
and
pop
arpl
ljmp
jo
or
test
sub
dec
push
add
xchg
jae
lret
sub
add
sbb
shll
add
cld
pop
add
add
mov
insb
js
sbb
add
push
add
jbe
push
aaa
je
pop
or
fsubl
add
popf
cli
arpl
gs
mov
add
or
add
mov
js
test
mov
jns
add
das
fists
add
add
andl
xchg
add
pop
cmp
mov
jns
add
les
mov
add
rcll
shll
or
xor
mov
add
jb
dec
imull
mov
inc
add
punpckhbw
add
add
pushf
iret
mov
lods
pushf
xchg
xor
int3
fcoml
insb
ja
adc
xchg
sub
ljmp
jns
inc
xchg
nop
add
btrl
insb
dec
xchg
push
xlat
mov
add
mov
xlat
out
xor
mov
xor
add
in
test
outsl
sub
add
add
sbb
aam
mov
add
stc
decl
xchg
push
fdivl
add
add
loop
add
addb
add
cld
lods
jl
out
iret
sbb
dec
sbb
in
cli
addb
in
xor
add
jg
out
in
inc
aam
aad
add
sbbl
add
push
mov
add
mov
sub
adc
push
inc
lock
push
add
add
dec
lods
jae
jo
outsl
inc
add
aad
add
or
cmp
sahf
stos
scas
and
add
add
inc
add
add
pushf
cwtl
arpl
add
add
pusha
add
js
pusha
add
jp
jge
fldcw
push
dec
and
outsb
xchg
mov
adc
mov
adc
ret
add
xlat
mov
addb
adc
in
cs
push
add
inc
add
dec
mov
adc
fcmovb
add
add
mov
add
scas
pop
hlt
add
add
icebp
xchg
ret
loopne
bound
mov
adc
add
mov
add
aam
mov
mov
add
add
push
adc
pop
inc
out
pop
movsl
idivl
fnstenv
add
add
xchg
push
int3
testb
add
inc
loopne
je
in
std
int3
scas
cmp
mov
lods
cwtl
mov
out
or
ret
cmp
mov
add
cwtl
and
scas
repnz
mov
cld
xchg
jge
jecxz
sbb
bound
mov
and
mov
call
icebp
add
rolb
mov
sub
jle
add
mov
hlt
add
jbe
mov
leave
out
in
jns
add
dec
adc
or
mov
mov
cmp
ja
add
shrl
shll
sbb
push
add
xor
add
xchg
adc
mov
scas
mov
jnp
sbb
push
add
loope
add
cli
jecxz
mov
js
add
add
or
inc
xchg
add
jnp
add
push
mov
add
jl
ljmp
cs
jmp
cli
dec
pushf
es
js
repz
add
mov
stc
push
and
mov
add
jb
ja
jo
add
push
add
repnz
sub
mov
out
rolb
ficompl
movsb
add
aaa
scas
mov
dec
rolb
cmp
imul
arpl
lea
add
jo
mov
add
jmp
sub
mov
or
add
add
add
sbb
add
mov
add
push
lods
mov
in
popa
stc
aas
addr16
add
mov
xchg
aam
ret
sub
cmp
add
sbb
cmpsl
mov
add
add
cmp
add
add
sub
sahf
aas
sub
inc
pop
in
add
jns
aam
lahf
rolb
loop
sub
mov
loope
add
inc
xchg
adc
cmp
push
mov
out
mov
test
sbb
cmp
add
dec
out
dec
imul
inc
add
push
scas
and
add
xor
lds
clc
bound
mov
mov
lret
cmp
js
add
cmp
or
add
in
add
aad
inc
jecxz
add
mov
repnz
add
add
add
jl
lds
add
imul
add
add
xlat
jmp
add
sbb
cmc
lock
sub
addb
push
add
jnp
mov
jo
mov
add
sub
scas
add
sub
add
pop
aaa
nop
add
add
gs
sub
add
add
jmp
add
pop
add
mov
add
add
mov
add
mov
cli
jno
jmp
mov
mov
imul
insl
hlt
add
mov
add
jae
mov
add
add
mov
out
sbb
mov
push
add
pop
jbe
mov
add
add
add
mov
loopne
push
add
dec
and
mov
add
jecxz
add
stc
dec
add
inc
popa
push
add
mov
test
jns
add
and
mov
cwtl
sbb
xlat
addb
add
add
loope
in
cmp
and
mov
add
add
add
dec
sub
mov
test
fidivl
add
js
push
add
mov
mov
cwtl
fnstenv
add
orl
adc
add
push
xchg
hlt
add
fbstp
and
mov
cltd
loop
and
subl
lods
or
adc
add
add
stc
cmpsl
add
add
mov
lar
mov
pop
aad
and
inc
jb
push
add
xchg
add
add
cmc
testb
inc
add
and
std
jnp
nop
add
mov
push
and
cmp
sbb
add
call
arpl
add
add
xchg
add
addl
xchg
fdiv
or
add
mov
and
mov
sub
push
add
jnp
js
in
hlt
add
ds
movb
jbe
in
jne
rolb
jle
cmpsl
xchg
mov
mov
movb
add
add
scas
aad
add
movsl
das
loop
stos
jnp
add
cmp
sti
push
scas
mov
out
imul
add
imul
jmp
add
mov
add
int3
lea
jmp
adc
into
jnp
stc
clc
aad
inc
in
notl
add
add
repz
dec
jge
add
pop
gs
in
dec
pop
js
push
adc
add
add
mov
outsl
ficompl
fisttpll
stos
sbb
add
add
je
sbb
data16
in
rolb
test
add
sub
add
fistpll
movb
clc
cmp
push
add
incl
out
cmp
data16
and
mov
stc
and
add
jns
add
or
mov
add
inc
gs
mov
jae
add
add
dec
fsub
add
inc
add
add
inc
add
add
mov
decl
add
mov
sub
addb
inc
call
std
mov
bound
mov
mov
mov
in
rolb
add
sbb
add
mov
add
push
inc
add
push
add
cmp
mov
pop
dec
push
add
add
std
or
pop
rcll
or
xor
testl
jle
pop
xchg
pop
rolb
ret
lock
out
dec
sbb
mov
push
add
fwait
add
sahf
cld
in
rcrl
and
mov
inc
add
and
mov
jmp
xlat
push
das
lcall
movsb
add
add
fsubl
add
add
cmp
hlt
add
sti
cmp
cs
inc
call
mov
add
add
add
mov
add
aas
add
jbe
sub
fildl
add
add
xchg
add
rcrl
pop
pop
lds
mov
sub
push
pop
or
add
in
loope
mov
add
ljmp
cmc
jg
jns
out
or
add
xchg
divl
inc
add
or
push
add
pop
dec
sub
jno
inc
xchg
aam
xchg
add
add
mov
mov
arpl
add
sub
add
push
xchg
fldenv
and
and
mov
repz
inc
add
sbb
lods
addb
add
add
dec
notl
jecxz
jp
or
or
add
or
call
jns
xor
inc
add
add
inc
sub
mov
add
push
add
jnp
in
sbb
add
mov
and
mov
add
movb
add
add
rolb
inc
add
mov
mov
shll
jno
add
lret
dec
and
mov
shll
dec
imul
add
sbb
add
mov
test
cs
jb
add
stc
cmpsb
add
add
jg
add
mov
add
jge
push
iret
outsl
xlat
add
mov
inc
add
add
aam
xor
dec
daa
fstp
stos
mov
lds
imul
mov
es
mov
add
and
and
mov
add
xchg
xchg
add
push
into
mov
test
js
add
cmpsb
add
mov
fstpl
add
or
cmpsb
add
add
jl
xor
jbe
mov
push
pop
sub
push
add
add
inc
add
add
mov
xlat
fstp
push
add
jle
mov
ljmp
add
aas
loope
add
add
add
lods
scas
or
rolb
jo
pop
push
add
add
mov
test
mov
mov
lock
loope
push
add
add
mov
sub
add
lcall
leave
jno
add
mov
add
pop
fdivrp
pop
jle
add
xor
dec
dec
cmp
cmpsl
xor
shll
xchg
cmpsl
std
push
add
mov
dec
xchg
add
pushf
add
push
add
pop
rcrl
shrl
and
inc
mov
or
jge
mov
mov
iret
xchg
dec
fsubr
stos
stos
repnz
push
xchg
inc
add
add
lcall
pushf
xchg
dec
push
add
scas
test
stc
lods
cmp
or
enter
add
xchg
sub
add
push
add
pop
cmp
sbb
add
add
out
xchg
add
into
les
call
add
testb
cmp
jb
add
add
add
loop
or
testl
out
movsb
add
jnp
add
daa
stos
inc
push
push
cmpsb
add
mov
testb
xchg
add
in
add
addb
int3
or
les
cmc
xor
pop
push
add
push
add
out
paddsb
jb
leave
xchg
sti
mov
mov
in
fdivp
gs
sti
testb
cmp
subl
pushf
adc
and
mov
pop
cmp
sub
add
add
sahf
mov
pop
test
add
rolb
dec
daa
jno
add
add
xchg
add
add
add
add
ficomps
fsubs
in
fisubs
push
popf
mov
adc
nop
add
xor
cs
mov
add
and
sub
inc
inc
add
stos
fsubs
add
pop
push
mov
je
jno
cmp
jno
add
add
sbb
add
jne
lods
arpl
add
and
mov
add
add
addb
add
pop
cmp
shll
xorl
enter
jne
arpl
mov
add
sbb
cmp
add
add
lds
jno
ljmp
add
add
and
mov
jecxz
sbb
fiaddl
add
adc
aam
xchg
stos
add
mov
in
sub
inc
add
xor
int3
jnp
add
add
jp
jb
cwtl
std
daa
cli
icebp
jno
add
push
add
mov
add
cmc
dec
fimull
cmc
jmp
dec
sub
jne
add
popl
insl
jle
xchg
push
jbe
jae
dec
dec
lcall
pop
xor
ret
add
mov
rolb
sub
lcall
push
jbe
mov
fildll
mov
mov
or
add
daa
out
js
push
cmp
add
pop
fmuls
in
inc
add
mov
shll
add
add
mov
sub
or
out
pop
add
dec
mov
mov
pop
or
incl
add
or
inc
mov
repnz
add
add
add
addb
pop
aas
mov
icebp
loopne
mov
cmpsb
add
push
push
lret
add
mov
or
mov
cmp
add
mov
jg
mov
mov
popa
pop
stos
jbe
inc
lea
add
add
mov
inc
add
add
jae
mov
add
mov
mov
inc
add
scas
inc
add
movsl
and
pop
test
add
add
adc
pop
sbb
add
dec
test
or
into
and
mov
mov
add
mov
popf
test
push
lahf
das
jno
jmp
and
sub
xlat
and
mov
mov
add
repz
add
dec
add
arpl
add
ja
add
add
mov
add
ja
and
mov
add
out
leave
mov
add
xor
add
add
add
xor
fwait
aaa
inc
sahf
xchg
jmp
aaa
mov
pop
out
add
fistl
inc
add
add
add
add
das
dec
add
mov
add
add
fsubs
hlt
add
mov
add
mov
lahf
push
add
jnp
sub
out
xor
icebp
les
pop
fsubs
scas
fmull
add
add
push
add
mov
cmpsl
pop
adc
push
add
add
push
ret
cltd
mov
xlat
pusha
add
add
inc
add
push
add
cmc
and
stc
cld
stos
cli
repnz
or
add
imul
add
mov
addb
add
outsl
mov
xchg
cmp
adc
adc
jge
and
insl
jl
add
data16
cmpsl
pop
mov
add
scas
in
cmp
pop
mov
mov
ja
fidivrs
clc
repnz
jae
adc
xor
xchg
pop
add
clc
repnz
jae
cmp
outsl
outsl
add
sub
add
mov
nop
add
or
nop
jae
add
cmp
mov
jmp
dec
inc
arpl
add
mov
ret
aas
mov
clc
repnz
jae
add
xchg
add
clc
repnz
jae
add
add
add
add
push
mov
xchg
ret
sbb
jbe
xchg
ds
fwait
cld
nop
jmp
jecxz
hlt
mov
add
mov
mov
fwait
cld
nop
jmp
add
arpl
das
jo
arpl
inc
xor
clc
repnz
jae
mov
rep
cmp
jae
add
add
fwait
cld
nop
jmp
push
add
pop
add
push
add
add
fwait
cld
nop
jmp
add
add
add
add
push
mov
xchg
ret
jle
mov
pop
push
clc
repnz
jae
ss
push
in
arpl
push
add
add
add
repnz
jae
fcomi
inc
add
sub
ret
add
repnz
jae
cmp
add
add
sub
nop
jae
add
and
xor
clc
repnz
jae
push
add
add
add
jge
adc
repnz
jae
pop
iret
add
test
clc
repnz
jae
jle
sbb
loopne
test
jg
clc
repnz
jae
fidivrs
push
add
repnz
jae
jmp
add
add
dec
add
push
mov
xchg
ret
icebp
add
add
add
call
clc
repnz
jae
inc
push
add
clc
repnz
jae
cli
add
add
imul
jae
test
add
jne
fwait
cld
nop
jmp
add
movsl
lahf
pushl
push
mov
xchg
ret
add
add
mov
mov
clc
repnz
jae
add
add
add
add
testl
fwait
cld
nop
jmp
add
add
add
es
clc
repnz
jae
cli
push
imul
add
test
add
mov
push
clc
repnz
jae
fiadds
flds
pop
mov
clc
repnz
jae
arpl
mov
add
flds
xchg
ret
sbb
in
mov
pop
add
clc
repnz
jae
add
add
jae
out
add
add
sbb
xchg
repnz
jae
add
add
add
add
add
repnz
jae
add
dec
pushf
mov
nop
jae
cmp
add
add
rolb
xlat
movsl
into
test
fwait
cld
nop
jmp
shl
add
add
add
push
mov
xchg
ret
add
add
inc
and
push
clc
repnz
jae
add
in
out
sub
test
repnz
jae
in
fldlg2
int
sbb
add
mov
jecxz
add
add
inc
jl
pop
sub
add
add
icebp
add
cmp
shl
das
and
cmp
jae
repnz
jae
hlt
pushf
test
adc
xor
clc
repnz
jae
ss
cmp
arpl
outsl
subl
push
mov
xchg
ret
add
test
adc
sbb
add
add
fildl
pop
cmp
push
mov
xchg
ret
push
iret
xor
add
mov
xchg
ret
add
xor
clc
repnz
jae
hlt
das
mov
jecxz
add
push
xor
clc
repnz
jae
add
add
in
add
dec
cmp
repnz
jae
push
push
add
or
clc
repnz
jae
add
jle
push
mov
xchg
ret
sub
in
mov
add
shrb
mov
xchg
ret
loopne
add
test
mull
cld
nop
jmp
add
add
xchg
add
clc
repnz
jae
add
mov
add
repnz
jae
add
fldt
fwait
cld
nop
jmp
in
sbb
dec
mov
clc
repnz
jae
sbb
push
mov
add
lds
and
add
add
insl
xor
push
mov
xchg
ret
pushf
add
sbb
clc
repnz
jae
add
add
mov
add
add
add
jnp
inc
add
call
mov
clc
repnz
jae
mov
and
aas
adc
sbb
add
push
pushf
add
add
sbb
nop
jae
popl
jmp
mov
add
fwait
cld
nop
jmp
mov
add
clc
repnz
jae
adc
add
inc
movsl
mov
lcall
add
add
pop
adc
mov
clc
repnz
jae
loopne
push
add
dec
cmpl
fwait
cld
nop
jmp
jle
add
jmp
and
add
add
mov
add
clc
repnz
jae
add
mov
xchg
add
repnz
jae
add
add
out
mov
clc
repnz
jae
add
add
push
push
mov
xchg
ret
add
in
add
sub
add
push
pop
mov
add
xor
clc
repnz
jae
add
aam
fmuls
nop
jmp
mov
add
xor
mov
push
add
jne
clc
repnz
jae
inc
mov
mov
jmp
add
cmp
jae
add
cmp
fwait
cld
nop
jmp
push
add
lds
push
cwtl
xorl
clc
repnz
jae
test
test
add
repnz
jae
add
mov
clc
repnz
jae
aas
arpl
sbb
cmp
je
js
mov
xchg
ret
inc
add
sbb
push
add
fwait
cld
nop
jmp
in
iret
test
or
int
pop
jae
repnz
jae
add
mov
mov
clc
repnz
jae
add
mull
sub
nop
jae
mov
add
cli
enter
push
mov
xchg
ret
add
jecxz
add
dec
add
repnz
jae
jle
cli
sbb
clc
repnz
jae
aas
add
xor
add
jnp
dec
imul
jg
add
inc
add
add
fs
add
flds
xchg
ret
add
rolb
mov
add
cmp
popa
add
repnz
jae
add
xchg
push
add
mov
clc
repnz
jae
mov
test
add
xor
push
mov
xchg
ret
add
add
test
add
clc
repnz
jae
add
adc
dec
and
clc
repnz
jae
add
push
add
les
repnz
jae
add
add
adc
sbb
nop
jmp
add
add
add
and
jl
mov
sub
add
and
add
call
das
and
fwait
cld
nop
jmp
rolb
add
add
mov
clc
repnz
jae
add
inc
sbb
add
inc
and
repnz
jae
add
push
add
xor
adc
je
clc
repnz
jae
add
xor
std
push
push
mov
xchg
ret
in
out
cmp
loopne
testb
add
mov
xchg
ret
add
add
add
cmp
je
clc
repnz
jae
add
add
add
inc
add
das
add
add
add
cld
nop
jmp
add
loopne
add
add
add
call
clc
repnz
jae
fsubp
mov
push
mov
fwait
cld
nop
jmp
inc
sub
add
add
add
fwait
cld
nop
jmp
mov
xchg
jne
add
mov
clc
repnz
jae
push
add
out
fisttpl
add
fwait
cld
nop
jmp
push
add
add
out
add
pop
cmp
mov
xchg
ret
add
out
test
push
dec
and
clc
repnz
jae
add
mov
cli
ret
mov
add
fwait
cld
nop
jmp
arpl
in
sbb
movsb
add
mov
clc
repnz
jae
incl
jo
push
add
mov
jmp
add
repnz
jae
jo
cmp
adc
sub
push
mov
xchg
ret
test
sbb
mov
xchg
ret
popl
add
rolb
cld
nop
jmp
dec
pushf
cmp
inc
add
add
mov
clc
repnz
jae
ss
rclb
add
mov
clc
repnz
jae
add
cmp
enter
jae
add
sbb
jle
cmp
fcomps
add
add
cs
call
add
repnz
jae
push
push
add
adc
mov
clc
repnz
jae
add
jmp
add
fwait
cld
nop
jmp
add
mov
add
pop
add
clc
repnz
jae
add
push
add
push
imul
nop
jae
add
push
test
add
repnz
jae
sbb
cltd
not
push
mov
xchg
ret
pushf
loopne
add
add
mov
add
mov
clc
repnz
jae
fiadds
add
add
add
cld
nop
jmp
loopne
cmp
add
lea
fwait
cld
nop
jmp
adc
xchg
add
add
jne
clc
repnz
jae
push
jmp
cmp
mov
xchg
ret
add
add
add
jmp
jp
fwait
cld
nop
jmp
add
mov
lds
clc
push
mov
xchg
ret
add
inc
pushf
add
add
imul
and
add
mov
mov
xor
stos
add
fwait
cld
nop
jmp
add
add
icebp
cmp
aad
and
fwait
cld
nop
jmp
add
add
push
clc
repnz
jae
add
cmp
inc
add
nop
jae
add
mov
add
or
repnz
jae
add
add
add
xor
call
add
fwait
cld
nop
jmp
inc
jo
add
xorb
add
clc
repnz
jae
fdivp
inc
adc
bound
mov
repz
repnz
jae
cmp
iret
add
arpl
movzwl
fwait
cld
nop
jmp
and
add
push
clc
repnz
jae
mov
sub
repnz
jae
inc
mov
add
cs
fwait
cld
nop
jmp
add
push
add
in
dec
mov
add
add
nop
jmp
mov
sbb
add
add
fwait
cld
nop
jmp
xchg
add
add
add
add
repnz
jae
add
push
mov
xchg
ret
mov
add
loop
fwait
cld
nop
jmp
mov
add
cmp
cmp
cmp
ret
add
mov
pop
ror
clc
repnz
jae
fnstcw
ljmp
add
or
insl
add
mov
jae
in
add
clc
repnz
jae
add
dec
incl
andl
nop
jae
add
add
test
mov
clc
repnz
jae
add
test
inc
add
mov
fwait
cld
nop
jmp
sbb
add
aas
push
cmpl
fwait
cld
nop
jmp
add
cmp
sahf
adc
adc
sbb
add
add
add
pop
cld
fwait
cld
nop
jmp
mov
add
add
lock
nop
jae
add
add
dec
add
fwait
cld
nop
jmp
add
mov
add
push
stos
mov
clc
repnz
jae
add
mov
jbe
out
popa
fwait
cld
nop
jmp
add
shr
sbb
addr16
popa
clc
repnz
jae
flds
mov
mov
jne
clc
repnz
jae
add
add
repz
repnz
jae
add
add
pop
add
sub
repnz
jae
mov
mov
dec
pushl
fwait
cld
nop
jmp
rolb
add
inc
jmp
jg
clc
repnz
jae
data16
pop
add
add
nop
jae
test
mov
and
clc
repnz
jae
cmp
loop
addb
add
clc
repnz
jae
loopne
add
popl
clc
repnz
jae
dec
add
fildl
sbb
mov
cmp
ret
test
add
push
add
mull
nop
jae
adc
mov
iret
aas
jmp
or
mov
xchg
ret
iret
add
push
fiadds
lds
push
clc
repnz
jae
sbb
add
call
clc
repnz
jae
add
inc
aam
popa
pop
mov
clc
repnz
jae
mov
add
lea
clc
repnz
jae
outsl
add
mov
fwait
cld
nop
jmp
add
cmp
in
add
xor
nop
jae
push
mov
outsl
lcall
mov
call
add
vcvtsd2ss
repnz
jae
in
add
push
add
add
repnz
jae
mov
jo
xor
jb
loopne
adc
xor
sub
mov
xchg
ret
add
sbb
push
add
shrl
add
clc
repnz
jae
arpl
das
rcll
mov
xchg
ret
add
add
mov
mov
mov
clc
repnz
jae
add
add
jne
clc
repnz
jae
jmp
ds
clc
repnz
jae
add
add
cmp
out
out
inc
clc
repnz
jae
push
add
add
add
cmp
add
adc
sbb
and
dec
push
clc
repnz
jae
iret
add
lret
or
fwait
cld
nop
jmp
add
add
and
clc
repnz
jae
mov
mov
call
and
mov
jo
add
or
inc
add
pushf
add
add
clc
repnz
jae
and
test
sub
mov
xchg
ret
add
dec
sbb
mov
dec
cmp
repnz
jae
arpl
add
add
fpatan
movsb
clc
repnz
jae
add
sub
pushl
clc
repnz
jae
add
add
dec
outsl
popa
fs
cld
nop
jmp
add
add
add
add
push
clc
repnz
jae
add
ror
in
hlt
shl
xchg
inc
sub
mov
push
clc
repnz
jae
test
into
stos
clc
repnz
jae
loopne
add
stos
push
mov
add
xchg
add
add
incl
add
add
clc
repnz
jae
lds
add
mov
jl
xor
outsb
rolb
xchg
ret
add
loopne
ljmp
inc
and
repnz
jae
add
das
add
add
push
mov
xchg
ret
add
add
xchg
test
push
push
mov
xchg
ret
xchg
add
lds
add
add
mov
push
mov
xchg
ret
jae
add
rclb
loope
inc
add
add
pop
clc
repnz
jae
add
add
cmp
push
add
xchg
add
jne
fwait
cld
nop
jmp
add
cmp
inc
in
clc
repnz
jae
inc
add
jecxz
add
and
repnz
jae
xchg
add
add
add
push
mov
xchg
ret
add
aas
mov
and
push
fs
repnz
jae
add
add
mov
push
clc
repnz
jae
add
fdivr
repnz
jae
jle
add
cmp
je
fwait
cld
nop
jmp
add
add
dec
and
push
mov
xchg
ret
hlt
icebp
add
or
clc
repnz
jae
add
add
sbb
add
clc
push
mov
xchg
ret
add
sbb
add
add
test
push
add
clc
repnz
jae
add
add
arpl
repnz
jae
das
fisubs
decl
nop
jmp
add
xor
add
inc
add
repnz
jae
popl
jae
call
add
add
stos
cmc
fildl
add
cmp
mov
rolb
dec
and
clc
repnz
jae
lds
mov
jae
rolb
add
xchg
push
add
add
lock
mov
xchg
ret
jo
add
add
push
add
push
mov
add
jbe
or
push
cltd
push
clc
repnz
jae
mov
add
fildl
jg
movb
nop
jae
arpl
add
rolb
xor
dec
call
push
mov
xchg
ret
mov
add
add
xor
push
jns
scas
enter
jae
add
add
in
add
cld
add
fwait
cld
nop
jmp
add
add
cmpsl
mov
mov
xchg
ret
ljmp
add
nop
jae
add
add
jmp
cld
nop
jmp
add
sbb
arpl
jae
shlb
add
jo
add
dec
mov
clc
repnz
jae
test
mov
cmp
mov
xchg
ret
mov
jecxz
sub
sar
repnz
jae
dec
test
test
clc
repnz
jae
mov
sbb
add
add
push
mov
xchg
ret
add
mov
add
fwait
cld
nop
jmp
add
loopne
inc
ds
clc
repnz
jae
xchg
pushf
mov
rcrb
jl
sbb
repnz
jae
test
std
add
clc
repnz
jae
mov
inc
mov
push
clc
repnz
jae
add
add
add
sub
add
clc
repnz
jae
fidivrs
sahf
mov
fwait
cld
nop
jmp
add
loopne
adc
add
add
or
in
dec
add
dec
movsb
push
add
clc
repnz
jae
mov
jecxz
das
mov
pop
push
mov
xchg
ret
add
add
add
ljmp
jae
add
add
dec
mov
add
clc
repnz
jae
mov
push
clc
repnz
jae
push
add
test
dec
mov
clc
repnz
jae
add
and
mov
clc
repnz
jae
add
arpl
add
shr
clc
repnz
jae
test
pushf
fildl
add
add
and
cmp
nop
jmp
test
add
sbb
xlat
idiv
clc
repnz
jae
add
add
jb
push
push
mov
xchg
ret
add
add
add
and
mov
stc
clc
repnz
jae
loopne
add
icebp
add
xchg
iret
push
clc
repnz
jae
mov
shlb
imul
nop
jmp
jmp
add
cs
fwait
cld
nop
jmp
mov
add
clc
repnz
jae
add
add
jecxz
adc
aam
add
mov
popa
add
mov
xchg
ret
add
es
dec
fwait
cld
nop
jmp
inc
add
pop
cli
add
nop
add
ss
repnz
jae
add
pop
sbb
push
clc
repnz
jae
sbb
sbb
mov
test
adc
nop
jae
test
add
incl
fwait
cld
nop
jmp
cmp
jo
mov
dec
mov
push
mov
xchg
ret
pushf
add
push
push
mov
xchg
ret
add
add
out
pushf
mov
nop
jmp
add
add
mov
clc
repnz
jae
ds
clc
repnz
jae
add
loopne
add
jle
push
mov
xchg
ret
sbb
ss
cld
nop
jmp
add
add
mov
push
add
add
repnz
jae
jecxz
add
lea
clc
repnz
jae
pushf
cs
add
mov
repnz
jae
outsl
sub
add
add
add
mov
xchg
ret
add
outsl
popl
fiaddl
jne
push
mov
xchg
ret
adc
add
sti
rep
clc
repnz
jae
add
mov
cmp
pop
sub
clc
repnz
jae
add
adc
add
mov
push
mov
xchg
ret
hlt
outsl
jae
icebp
cmpl
nop
jae
add
sbb
xor
add
cmp
nop
jae
arpl
mov
incl
jmp
mov
outsl
mov
jae
jle
mov
jo
push
clc
repnz
jae
cli
add
rolb
add
outsl
mov
clc
repnz
jae
add
test
add
push
mov
xchg
ret
pushf
arpl
cmp
push
push
mov
xchg
ret
add
add
mov
test
lret
dec
fwait
cld
nop
jmp
adc
adc
add
adc
repnz
jae
push
and
inc
in
call
clc
repnz
jae
push
test
add
add
clc
repnz
jae
out
jo
add
inc
cld
push
push
mov
xchg
ret
ss
mov
mov
xor
in
and
add
sbb
icebp
lock
cmp
clc
repnz
jae
sbb
shr
clc
repnz
jae
test
add
test
clc
repnz
jae
sbb
mov
sub
fwait
cld
nop
jmp
mov
icebp
add
mov
push
mov
xchg
ret
mov
loopne
add
clc
repnz
jae
add
in
add
add
push
pop
dec
jmp
jo
pushf
aas
rolb
add
add
sar
nop
jae
add
add
jle
mov
xor
add
clc
repnz
jae
add
rolb
ret
xchg
sub
nop
xlat
inc
add
flds
add
add
add
xlat
repz
add
push
mov
xchg
ret
add
add
and
push
clc
repnz
jae
loopne
mov
mov
inc
clc
repnz
jae
in
sbb
and
or
clc
repnz
jae
add
incb
dec
cmp
repnz
jae
add
data16
sbb
repnz
jae
add
pop
decl
push
mov
xchg
ret
in
add
add
mov
clc
repnz
jae
decl
rolb
mov
clc
repnz
jae
add
jns
mov
adc
repnz
jae
add
add
add
add
nop
jmp
add
lds
add
inc
push
mov
xchg
ret
add
add
outsl
add
add
clc
repnz
jae
add
and
clc
repnz
jae
shlb
mov
add
cld
nop
jmp
add
icebp
add
sbb
clc
repnz
jae
test
outsb
mov
clc
repnz
jae
das
and
iret
jg
fwait
cld
nop
jmp
test
loopne,pt
imul
nop
jmp
dec
push
add
dec
sbb
inc
jge
fwait
cld
nop
jmp
jmp
add
adc
inc
ja
mov
clc
repnz
jae
add
arpl
sbb
add
sub
inc
add
add
test
je
xchg
mov
jg
fwait
cld
nop
jmp
add
add
add
nop
jmp
add
sbb
push
mov
add
mov
imul
nop
jae
data16
add
test
lcall
jae
add
jo
add
jmp
lea
add
pushf
add
add
in
rclb
add
add
push
clc
repnz
jae
lds
cs
pop
push
mov
xchg
ret
mov
mov
mov
jno
add
push
lret
inc
add
rorb
pop
shl
fcomps
repnz
jae
push
test
arpl
addb
mov
clc
repnz
jae
add
test
ret
sbb
add
add
cli
jo
pushf
mov
add
add
add
push
push
mov
xchg
ret
add
mov
mov
pop
dec
fwait
cld
nop
jmp
mov
lds
scas
mov
fwait
cld
nop
jmp
inc
cmp
hlt
out
ficoms
push
add
test
fwait
cld
nop
jmp
mov
mov
add
add
pop
clc
repnz
jae
rcrb
fucomi
cmp
clc
repnz
jae
pop
add
add
loope
inc
add
popl
add
jmp
fwait
cld
nop
jmp
add
test
jl
clc
repnz
jae
lds
add
dec
out
lcall
cld
jmp
fildll
rcll
filds
xchg
ret
add
add
cs
cld
nop
jmp
and
xor
sbb
nop
jae
and
fldt
jae
dec
sbb
add
in
pop
clc
repnz
jae
hlt
xor
popl
ds
repnz
jae
push
add
and
clc
repnz
jae
cmp
add
xor
add
nop
jae
adc
sbb
add
repnz
jae
cmp
arpl
mov
jmp
mov
xchg
add
add
cmp
add
dec
sub
repnz
jae
sbb
add
inc
fcmovb
loop
fwait
cld
nop
jmp
data16
xchg
rolb
add
mov
sbb
repnz
jae
fistpl
and
mov
lods
flds
xchg
ret
mov
mov
push
add
jl
add
add
add
push
in
add
shll
add
push
mov
xchg
ret
add
add
add
xor
clc
repnz
jae
test
in
dec
mov
push
mov
xchg
ret
add
hlt
flds
mov
add
fwait
cld
nop
jmp
inc
jecxz
mov
push
mov
xchg
ret
adc
add
js
xabort
nop
jae
aas
shr
mov
std
push
clc
repnz
jae
mov
arpl
add
clc
repnz
jae
arpl
test
jg
clc
repnz
jae
mov
inc
mov
nop
jae
push
add
test
add
adc
push
pop
push
mov
xchg
ret
add
inc
popf
mov
push
mov
xchg
ret
pop
add
iret
xor
popa
add
mov
xchg
ret
add
add
cli
mov
clc
repnz
jae
adc
push
or
sub
inc
add
fildl
pop
xchg
push
mov
xchg
ret
add
mov
das
adc
pop
jne
clc
repnz
jae
add
fimuls
jne
clc
repnz
jae
add
cmp
push
mov
stc
sub
xor
mov
add
nop
jae
add
incl
fchs
enter
xor
add
clc
repnz
jae
aas
add
imul
fwait
cld
nop
jmp
add
add
add
rolb
mov
jae
das
add
sbb
lret
push
push
mov
xchg
ret
das
xchg
jle
aas
add
adc
clc
repnz
jae
mov
ds
cmp
inc
and
add
popa
fwait
cld
nop
jmp
mov
add
add
xchg
dec
add
push
mov
xchg
ret
add
rolb
xchg
fwait
cld
nop
jmp
pop
add
add
repnz
jae
xor
hlt
inc
lds
add
test
repnz
jae
loopne
add
push
fwait
cld
nop
jmp
add
arpl
add
pop
fwait
cld
nop
jmp
add
icebp
sbb
and
push
add
clc
repnz
jae
inc
mov
and
cs
clc
repnz
jae
add
loope
add
je
clc
repnz
jae
add
add
add
add
icebp
add
add
add
mov
cld
nop
jmp
add
in
decl
mov
xor
inc
add
add
add
mov
clc
repnz
jae
vmovq
add
mov
add
add
clc
repnz
jae
test
add
fwait
cld
nop
jmp
lds
inc
jle
cmp
dec
mov
add
repnz
jae
add
flds
inc
cmp
loop
inc
add
jae
add
push
add
mov
xchg
ret
add
mov
add
add
add
add
fwait
cld
nop
jmp
add
xor
jle
clc
repnz
jae
add
jns
xabort
nop
jae
add
sbb
add
push
mov
xchg
ret
jle
add
dec
mov
push
mov
xchg
ret
test
adc
clc
repnz
jae
inc
das
mov
aas
inc
add
nop
jmp
add
inc
add
inc
mov
clc
repnz
jae
add
loopne
add
inc
sbb
push
loop
add
inc
loopne
xor
test
les
xchg
add
pushl
push
mov
xchg
ret
add
push
add
push
add
push
clc
repnz
jae
push
mov
mov
jne
clc
repnz
jae
add
test
repnz
jae
add
push
add
jo
pop
pop
mov
clc
repnz
jae
lds
loopne
mov
int
fwait
cld
nop
jmp
add
sbb
sbb
mov
rcrl
push
mov
xchg
ret
lds
fsts
inc
fwait
cld
nop
jmp
incl
cli
add
hlt
fsts
mov
xchg
ret
push
add
add
cmp
clc
repnz
jae
add
add
push
fcmovnb
add
test
mov
xchg
ret
jecxz
mov
inc
add
dec
cmp
repnz
jae
adc
add
das
loopne
dec
fwait
cld
nop
jmp
add
jae
mov
mov
clc
repnz
jae
jle
iret
popl
dec
add
push
mov
xchg
ret
add
xchg
lds
popa
icebp
imul
cld
nop
jmp
add
cmp
xor
add
clc
repnz
jae
jle
call
mov
xchg
ret
mov
add
nop
jae
add
add
inc
add
add
fwait
cld
nop
jmp
inc
dec
add
add
jecxz
mov
clc
repnz
jae
faddp
add
mov
push
add
add
or
add
add
add
adc
in
mov
clc
repnz
jae
add
add
jne
add
clc
repnz
jae
test
sub
dec
add
repnz
jae
mov
add
jl
and
into
faddl
xchg
ret
inc
add
mov
jns
movsb
clc
repnz
jae
in
add
pop
add
roll
xchg
ljmp
addl
incl
add
add
clc
repnz
jae
add
add
in
add
add
push
clc
repnz
jae
add
add
add
sarb
add
add
add
add
add
add
add
mov
mov
xchg
ret
out
and
rep
clc
repnz
jae
jle
icebp
add
pushf
pop
mov
clc
repnz
jae
pop
sbb
push
mov
xchg
ret
push
add
add
xchg
add
add
jo
rcrl
lods
clc
repnz
jae
fiadds
and
cs
clc
repnz
jae
add
icebp
fwait
cld
nop
jmp
arpl
add
inc
repnz
mov
add
clc
repnz
jae
add
push
or
xor
add
clc
repnz
jae
add
mov
xchg
ret
add
add
aas
add
jmp
jmp
add
inc
in
add
add
mov
cld
nop
jmp
mov
push
icebp
adc
nop
jmp
rolb
hlt
in
add
incl
mov
repnz
jae
cli
add
add
test
test
repnz
clc
repnz
jae
fildl
add
test
fdivr
clc
repnz
jae
flds
test
add
clc
repnz
jae
sbb
mov
clc
repnz
jae
mov
add
adc
adc
add
mov
repnz
jae
jecxz
mov
add
mov
repnz
jae
add
sub
push
clc
repnz
jae
add
add
and
nop
jmp
fildl
mov
add
add
fimull
repnz
jae
add
add
and
add
nop
jae
add
push
mov
fnstcw
add
clc
repnz
jae
add
loopne
dec
add
jmp
add
and
mov
push
mov
xchg
ret
add
add
push
aas
mov
clc
repnz
jae
add
js
inc
in
cld
nop
jmp
add
push
incl
sub
xor
clc
repnz
jae
sbb
push
inc
mov
push
mov
xchg
ret
outsl
add
add
clc
repnz
jae
jmp
add
add
movb
jp
mov
add
repnz
jae
inc
data16
add
mov
repnz
jae
pop
add
and
sar
repnz
jae
dec
add
in
jo
icebp
enter
mov
xchg
ret
add
mov
mov
cld
nop
jmp
add
loopne
add
sbb
mov
popa
clc
repnz
jae
add
add
fwait
cld
nop
jmp
add
add
cmp
rolb
pop
call
clc
repnz
jae
test
sub
sbb
inc
add
and
add
clc
repnz
jae
add
add
dec
xor
fwait
cld
nop
jmp
add
add
repnz
jae
xchg
jmp
testb
add
add
clc
repnz
jae
add
pop
cli
xchg
add
nop
jae
mov
add
add
movb
movswl
fwait
cld
nop
jmp
mov
add
in
add
repnz
jae
add
add
fildl
dec
add
push
mov
xchg
ret
jecxz
add
sub
sub
add
add
mov
inc
and
clc
repnz
jae
outsl
add
add
and
cmp
fwait
cld
nop
jmp
add
mov
add
clc
repnz
jae
cmp
add
add
bound
mov
repnz
jae
das
sbb
add
clc
repnz
jae
add
add
add
add
add
mov
mov
clc
repnz
jae
push
xchg
add
clc
repnz
jae
mov
lahf
cmp
fwait
cld
nop
jmp
add
loopne
xchg
nop
add
hlt
inc
add
mov
shrl
sbb
ljmp
icebp
push
push
out
mov
clc
repnz
jae
push
add
test
add
and
js
repnz
jae
inc
cmp
out
add
call
clc
repnz
jae
add
mov
add
mov
mov
push
mov
xchg
ret
add
rolb
mov
outsb
and
repnz
jae
jmp
mov
mov
inc
add
sbb
add
add
cmp
jae
fsubp
mov
sub
jae
pop
mov
add
fsubs
popa
add
cld
nop
jmp
add
add
hlt
add
dec
mov
clc
repnz
jae
sbb
add
add
jmp
arpl
jle
test
sbb
movsl
clc
repnz
jae
sbb
add
sub
push
mov
xchg
ret
mov
pop
clc
repnz
jae
cli
add
pushf
add
repnz
jae
cmp
sbb
push
fisttpl
nop
jae
data16
arpl
jns
add
fwait
cld
nop
jmp
lds
mov
mov
clc
repnz
jae
cli
add
xor
clc
repnz
jae
add
add
cld
nop
jmp
jecxz
add
jecxz
pop
adcl
clc
repnz
jae
sbb
add
clc
test
fwait
cld
nop
jmp
add
mov
cli
les
rolb
je
call
clc
repnz
jae
cmp
cld
nop
jmp
add
add
inc
sbb
add
dec
mov
clc
repnz
jae
in
mov
test
jae
repnz
jae
inc
mov
add
add
xor
fwait
cld
nop
jmp
jecxz
jmp
and
mov
jge
add
mov
add
outsl
stos
jnp
insb
inc
jb
clc
repnz
jae
out
das
filds
out
add
add
add
or
nop
jmp
sbb
add
push
nop
jae
add
add
mov
add
fwait
cld
nop
jmp
mov
or
sti
fwait
cld
nop
jmp
mov
add
repnz
jae
inc
inc
cli
rolb
and
mov
cld
nop
jmp
pop
add
jle
add
mov
mov
xchg
ret
hlt
mov
arpl
add
lods
jne
clc
repnz
jae
add
sahf
pop
clc
repnz
jae
push
ds
add
push
push
mov
xchg
ret
cmp
das
ds
push
mov
xchg
ret
add
add
add
insl
mov
clc
repnz
jae
rorb
sbb
nop
jae
ds
fldt
add
out
jb
roll
clc
repnz
jae
sbb
cmp
add
mov
push
mov
xchg
ret
and
out
leave
clc
repnz
jae
flds
add
add
jmp
jmp
cmp
ret
test
add
pop
mov
clc
repnz
jae
add
inc
fildl
pushf
js
add
repnz
jae
add
xor
fidivrs
add
push
push
mov
xchg
ret
add
add
ret
fwait
cld
nop
jmp
push
test
jle
mov
mov
clc
repnz
jae
add
add
add
add
sbb
jno
clc
repnz
jae
add
hlt
add
clc
repnz
jae
pushf
add
das
add
das
icebp
loop
subl
mov
clc
repnz
jae
mov
or
outsl
fwait
cld
nop
jmp
pushf
pop
jmp
add
cld
push
clc
repnz
jae
hlt
jae
in
add
out
test
jae
inc
add
cmp
clc
repnz
jae
jecxz
add
push
add
ljmp
add
mov
clc
repnz
jae
add
mov
add
push
mov
push
cli
adc
xor
lahf
add
cwtl
fwait
add
repnz
adc
pusha
add
jecxz
add
pop
jo
movsl
jbe
int3
xchg
add
testl
cmp
and
mov
add
add
mov
pop
insb
push
add
add
mov
cld
jnp
add
ret
push
add
mov
add
aad
mov
pop
outsb
inc
sub
mov
loopne
and
mov
adc
and
add
int3
jae
inc
movsb
add
push
add
jg
xchg
stos
add
dec
sub
mov
outsb
in
push
add
mov
aas
sti
xor
push
push
jns
data16
in
xchg
add
and
mov
mov
mov
mov
xor
mov
add
js
add
fcmovnb
fsubl
add
aas
mov
or
push
dec
pop
and
mov
mov
adc
pop
inc
sti
popa
mov
mov
jae
cwtl
mov
add
outsb
and
mov
add
addb
sub
cmpsl
loopne
jnp
ljmp
xchg
add
imul
sbb
mov
xchg
add
add
in
push
mov
jge
add
add
and
and
sahf
mov
add
push
push
adc
repz
add
call
jmp
push
data16
lds
add
xor
into
addb
adc
add
add
add
fs
sub
mov
cmp
push
add
stos
mov
mov
adc
or
pop
push
add
add
adc
add
jnp
mov
movb
test
add
add
push
add
mov
add
add
mov
inc
mov
arpl
cmp
mov
xchg
cli
daa
mov
test
pop
fcmovnbe
add
test
cmpsb
add
jg
lods
subl
popf
push
scas
xchg
add
and
mov
push
add
add
cmovns
jo
rolb
arpl
inc
add
mov
xor
add
mov
imul
add
ret
les
lock
sbb
ret
std
arpl
inc
add
dec
inc
out
sarl
add
roll
lods
lret
xchg
movsl
ret
inc
add
std
popf
mov
int3
lods
mov
adc
dec
xchg
add
scas
mov
adc
add
xchg
add
inc
add
lcall
lret
test
insb
adc
gs
add
add
xchg
add
outsb
lahf
push
jl
add
add
les
mov
add
add
mov
mov
ret
add
push
add
push
add
or
add
cmpsl
xor
out
mov
mov
pop
push
add
ja
add
in
outsl
pop
sarl
push
add
das
aad
push
sahf
repnz
add
add
out
or
dec
add
mov
pusha
add
cld
in
js
in
inc
add
lods
cmp
add
inc
add
add
add
xchg
sub
sbb
add
in
fcomp
inc
add
jnp
sub
add
push
sbb
mov
adc
sbbl
sub
fsub
add
jecxz
add
lods
in
gs
add
inc
pop
sti
clc
cltd
fidivs
bound
mov
ja
add
mov
xor
cli
mov
pusha
add
scas
popf
lods
add
inc
add
push
add
push
test
out
sub
data16
add
dec
jno
int3
dec
hlt
add
sbb
xor
add
addb
cltd
xchg
push
pop
icebp
sbb
add
arpl
xchg
add
add
stos
popf
iret
jne
aam
inc
add
jle
inc
add
add
inc
pop
aas
adc
push
add
mov
cli
xchg
add
imul
or
xchg
pop
mov
stc
rolb
mov
add
out
shll
sbbl
out
mov
in
mov
add
loopne
jnp
movsb
add
mov
insb
and
mov
add
sub
add
call
nop
add
xor
std
inc
add
dec
imul
mov
mov
stos
ja
add
add
out
loop
shll
insb
repz
clc
xchg
hlt
add
mov
cmp
xchg
add
lods
dec
dec
cmc
pop
xor
sub
jbe
jp
cmpsl
das
lods
push
add
sarl
pop
out
fwait
mov
negl
add
shll
mov
add
scas
cwtl
cmp
test
add
mov
jo
xchg
add
in
inc
add
add
xchg
xor
add
out
inc
add
mov
add
push
add
out
xor
pop
push
add
jg
repnz
enter
add
lods
cltd
addr16
mov
test
and
mov
or
jb
mov
dec
pop
lahf
fwait
push
pop
pop
adc
add
movsb
add
mov
loop
push
add
jbe
sti
outsl
les
sbb
mov
dec
mov
int3
int
add
loop
jmp
add
lods
push
add
movsb
add
add
pop
jno
dec
jnp
subl
adc
add
add
push
add
and
test
or
add
pop
fisubl
add
push
xchg
ljmp
lock
jb
push
add
ja
inc
add
xlat
fldl
add
xchg
add
add
xlat
fbstp
add
or
inc
movsb
add
add
jno
add
mov
dec
cmc
xchg
add
mov
add
mov
add
xchg
dec
in
push
add
insl
ds
loope
jecxz
add
data16
add
pop
fdivrl
xchg
pop
jp
cmpsl
mov
add
add
add
mov
leave
adc
xchg
dec
dec
adc
or
in
xlat
rolb
loopne
push
cs
add
rolb
jecxz
repnz
call
adc
sub
out
jnp
movsl
dec
pop
dec
out
jg
sti
mov
add
mov
add
scas
mov
outsl
lds
mov
mov
pop
sbb
push
cmpsl
mov
add
add
and
dec
cmpsb
add
add
push
add
inc
inc
add
xchg
mov
push
add
mov
mov
popl
xor
stc
cltd
xor
cmp
mov
add
rolb
movaps
cwtl
gs
lods
mov
add
inc
stos
icebp
movb
scas
movb
fwait
mov
popa
pop
iret
mov
or
xor
add
add
js
scas
add
mov
insl
sub
xchg
add
ds
add
mov
and
mov
insb
push
add
sbb
dec
pop
sub
push
add
ret
int
add
setp
add
or
rolb
loope
leave
xchg
add
mov
shrl
add
icebp
and
add
sub
clc
stos
sub
fadds
icebp
pusha
add
add
add
push
int3
out
adc
dec
inc
add
pop
xchg
add
mov
add
add
sbb
xor
cmp
iret
add
mov
rorl
addb
add
xor
push
adc
cwtl
add
sub
add
mov
pop
rolb
or
ja
and
push
loopne
cmpsl
loope
mov
add
add
out
jecxz
or
test
into
xchg
loop
sub
jp
dec
mov
jae
add
mov
cmpsl
or
add
dec
call
mov
mov
add
daa
stos
mov
hlt
add
addb
add
xlat
or
add
add
cmp
inc
add
push
xor
fld1
jl
cmp
add
aad
das
insb
cmp
mov
xor
add
mov
repz
fs
add
add
data16
and
mov
test
gs
jnp
add
cs
add
add
add
and
cld
sbb
mov
stc
xor
icebp
sub
aaa
adc
adc
cmp
lcall
add
test
mov
adc
adc
jge
add
jecxz
fcoms
sbb
add
fldl
and
sbb
pushf
lods
sub
ja
lcall
mov
add
dec
xchg
add
pop
jl
add
add
add
ja
movb
xchg
lcall
les
sub
outsb
pop
push
add
mov
adc
push
int
loope
add
adc
add
bound
mov
arpl
loope
fimuls
in
fld
sub
add
add
add
sbb
lret
clc
jmp
movb
add
push
add
adc
enter
jne
add
outsb
push
add
js
das
ret
cli
movsb
add
jle
mov
add
xor
jnp
xor
dec
test
sub
pop
inc
add
dec
cmp
cmp
add
adc
fsubp
add
std
mov
add
in
testl
add
std
push
stc
or
aaa
les
xchg
add
cltd
sub
add
add
push
adcl
mov
mov
movb
nop
add
sbb
stos
repz
movsl
out
cmpsl
adc
push
add
cltd
icebp
or
pop
test
pop
xchg
add
add
mov
push
std
adc
add
lahf
std
add
fildll
daa
inc
add
add
imul
add
or
xor
add
mov
push
sti
in
jmp
pop
nop
add
xor
out
add
into
mov
pop
js
add
insl
pop
xor
rolb
repnz
add
lock
adc
lds
rolb
arpl
les
mov
add
add
mov
or
and
mov
xor
movsb
add
pop
xchg
rolb
or
add
xchg
mov
add
mov
jge
cld
ret
imul
push
xchg
add
mov
mov
add
mov
jne
cld
adc
or
mov
mov
sbb
icebp
fstpt
dec
addr16
add
pop
cmpsb
add
sahf
and
cmpsl
call
jmp
jmp
add
sub
movsb
add
dec
lods
fwait
jmp
stos
dec
comiss
add
mov
pop
xchg
push
arpl
sbb
add
add
jmp
add
mov
pop
add
add
ficompl
add
xor
add
mov
jno
je
jp
push
add
pop
out
sbb
add
rolb
add
fiaddl
add
dec
mov
add
jmp
sbb
push
add
mov
in
add
jp
in
dec
push
add
add
add
rcll
aam
aaa
je
jbe
push
fsubrs
add
daa
pop
mov
int
mov
fidivrs
mov
xor
inc
add
add
jae
mov
mov
mov
rolb
inc
add
push
add
imul
add
iret
xchg
cmpsb
add
add
arpl
add
add
mov
cli
ret
cld
add
mov
push
add
jmp
xor
cmpsb
add
clc
push
add
add
ds
xchg
add
adc
loop
jne
nop
add
jp
jl
mov
xchg
add
ret
add
mov
jno
jge
sub
ficoms
fsubl
clc
vdivps
add
add
fidivrl
cli
fstl
add
mov
bound
mov
mov
dec
movsb
add
lret
cs
add
jle
add
xchg
lcall
dec
notl
add
add
outsl
jbe
or
mov
add
dec
and
xor
and
mov
push
sbb
add
push
sbb
cmp
jo
testb
aad
pop
iret
out
call
push
inc
call
add
add
push
test
enter
fcoml
lds
das
push
xchg
add
add
popf
pusha
add
int
mov
les
adc
jno
enter
scas
xor
add
jbe
jp
cmpsl
jnp
mov
push
mov
clc
jmp
xchg
sub
add
sahf
mov
cmp
xchg
add
cmp
bswap
or
mov
mov
test
imul
add
stos
icebp
lods
fistl
add
lret
mov
inc
add
mov
insb
cmp
sub
or
add
add
mov
dec
dec
lret
dec
mov
lret
and
inc
scas
test
add
xchg
add
xor
mov
add
mov
mov
xchg
xchg
push
xor
icebp
sti
test
rolb
hlt
add
add
add
add
add
xor
adc
add
xor
mov
or
and
outsl
ret
pop
add
and
mov
jae
dec
fstpt
add
arpl
lea
add
mov
imull
outsb
inc
clc
test
add
or
add
add
xor
mov
add
add
je
inc
aam
add
mov
adc
pop
test
movsb
add
add
ja
ficoml
or
cmp
sub
insb
cs
add
add
pop
sub
mov
pop
out
fucomi
sub
mov
mov
or
add
fildl
loope
add
dec
mov
add
add
jmp
daa
push
pop
lret
int
popf
fs
jns
jb
sar
mov
cmp
add
aam
test
mov
add
add
add
cmp
and
push
add
icebp
mov
mov
sbb
inc
add
add
insb
mov
pop
xchg
lret
mov
jbe
lds
add
jle
add
cmp
aas
mov
sbb
data16
add
inc
loopne
pop
dec
cmp
add
fnstenv
cmp
mov
sub
iret
or
xlat
add
mov
inc
pop
adc
and
addr16
mov
add
stc
jl
add
cmp
inc
das
in
fisttps
add
ret
add
mov
add
pop
sahf
fadd
sti
push
add
jae
add
pop
jl
fcmovnu
xchg
iret
dec
shll
mov
out
aas
ss
cmpsb
add
arpl
xlat
cmp
add
add
add
add
pop
sub
sbb
fs
cmp
xor
inc
adc
in
mov
pop
xchg
add
or
push
dec
cmp
inc
jbe
arpl
sub
jb
repnz
jle
jecxz
add
rolb
add
out
pop
or
loope
cmp
add
or
add
das
adc
into
add
mov
fdivrl
testb
add
add
jb
inc
jo
push
or
pop
mov
ffreep
cmovo
mov
imul
add
push
push
xchg
add
add
mov
mov
sbb
or
add
mov
push
dec
xor
popa
lock
add
jg
add
sti
jno
sbb
add
pusha
add
add
stos
stos
lds
adc
fwait
addr16
cmp
add
mov
add
int
in
ret
pop
aam
inc
stc
fwait
lahf
pop
sti
inc
xchg
mov
add
pop
lret
ljmp
dec
jge
cwtl
or
add
add
call
lea
loope
mov
push
sub
mov
push
add
fisubrs
pop
mov
sti
leave
push
add
add
add
add
ljmp
push
adc
ljmp
inc
add
fsts
or
mov
add
aaa
ja
add
add
mov
movl
les
jne
pop
adc
inc
add
add
jno
das
fbld
orl
fidivs
add
lods
lods
leave
imul
mov
mov
cmpsb
add
add
mov
add
add
push
mov
add
jecxz
add
adc
sub
add
add
pop
pop
push
add
mov
cmpl
jb
testl
loop
rolb
mov
jno
add
sub
add
xchg
sahf
daa
jae
add
iret
cs
popl
pusha
add
sub
sbb
int
dec
addb
movsb
add
lret
rolb
outsb
lods
enter
add
jbe
int3
test
filds
add
into
xor
pop
adc
mov
stc
cs
cltd
push
cwtl
pop
into
lret
ja
movb
stc
mov
add
xor
add
sub
push
out
push
lods
in
loop
xchg
mov
lock
mov
fcoml
sub
test
jg
icebp
mull
cmpsl
sbb
dec
sahf
xchg
add
add
jnp
out
adc
or
mov
inc
lret
rolb
int
cmp
pop
cmp
mov
addb
mov
cli
inc
add
mov
mov
int
addb
add
add
or
inc
add
add
xor
mov
cmp
enter
sub
push
add
pop
add
add
aaa
aaa
mov
sbb
loope
add
add
push
aaa
xchg
xor
xor
fidivl
out
add
add
add
xchg
bound
mov
fwait
test
lret
mov
pop
divl
add
add
cmpsl
dec
dec
and
add
mov
push
mov
jl
cmc
jg
push
or
repnz
xor
cmc
ja
add
lcall
jne
das
mov
jbe
or
cli
mov
xor
add
push
scas
cli
add
loope
test
dec
dec
daa
in
stos
add
movsl
stos
xchg
add
add
sub
add
add
dec
or
lret
jno
mov
inc
cmc
mov
add
aam
les
stos
mov
leave
ss
into
cmp
add
in
and
mov
lret
rolb
inc
imul
insl
je
mov
ret
push
lock
mov
dec
sbb
mov
pop
pusha
add
std
xchg
or
adc
add
add
mov
cmc
jmp
mov
pop
xchg
pop
testb
mov
frstor
push
add
mov
ss
test
jae
xlat
cltd
hlt
add
int3
sub
out
jbe
add
mov
aaa
mov
movb
jmp
and
mov
jg
add
imul
add
add
add
int
add
mov
add
mov
inc
jle
bound
mov
std
pop
fcom
add
jb
out
or
mov
sub
out
sub
ljmp
mov
mov
into
mov
in
sub
cmp
nop
add
jbe
scas
fwait
mov
push
xor
push
or
mov
iret
adc
mov
hlt
add
ljmp
add
add
mov
xchg
add
mull
lret
cltd
pop
mov
js
push
add
xor
pop
lahf
push
jg
xor
sbb
mov
add
aam
pop
add
mov
daa
sub
into
xchg
add
mov
add
enter
repz
loopne
insl
pop
mov
add
mov
adc
popf
iret
add
test
stc
dec
jl
scas
sub
adc
fidivrl
rolb
rolb
scas
imul
add
and
mov
mov
call
mov
lret
xchg
cmpsl
loope
mov
xchg
fsts
gs
sbb
add
xor
lock
add
jl
add
lahf
lcall
bound
mov
add
fdivrp
push
ljmp
mov
push
pop
cmpsb
add
shll
add
fistpll
stc
psubb
out
cltd
cmp
stc
test
pop
icebp
lret
dec
in
add
rolb
and
inc
add
xchg
sub
lahf
cmc
mov
adc
test
add
enter
push
add
add
iret
testb
add
add
data16
xchg
add
sbb
dec
push
mov
add
das
xchg
movl
test
lds
popf
fstl
add
aaa
mov
xor
fwait
jmp
roll
sub
add
scas
mov
add
mov
out
add
bound
mov
insl
add
nop
add
int
jb
fstp
xor
mov
stos
lods
iret
fcom
pop
jg
dec
rolb
fstpl
jp
fdivl
add
cmp
add
sti
mov
inc
inc
add
pop
in
add
mov
dec
ret
testb
jne
jl
add
jle
add
add
add
cmp
push
add
add
fidivrs
aas
add
mov
data16
add
add
loope
add
fmul
push
add
adc
in
popf
imul
push
add
add
add
pushf
movb
push
inc
add
bound
mov
jb
push
sub
mov
hlt
add
insl
sub
lret
pop
xchg
add
add
lea
jo
notl
movsb
add
mov
leave
or
sub
jecxz
rcrl
inc
js
in
cmpsl
pop
sti
mov
jl
mov
add
push
lcall
jmp
xchg
add
add
std
jo
lahf
cmp
leave
and
mov
add
mov
mov
rolb
add
add
add
aaa
sub
into
jmp
push
clc
mov
arpl
xchg
mov
add
mov
rolb
and
mov
adc
mov
arpl
add
sbb
and
out
mov
mov
sti
test
das
insb
xchg
xor
leave
sbb
fbstp
add
es
cmp
dec
icebp
and
mov
popf
mov
add
test
cmp
add
dec
fimuls
xchg
cmc
mov
add
stc
iret
jbe
lret
movsl
idivl
fisubs
mov
dec
cvttps2pi
imul
cmp
add
add
movsl
daa
mov
pop
sti
push
imul
gs
movb
mov
mov
add
xor
push
add
add
fbstp
xor
add
add
add
mov
push
movsb
add
imul
add
and
mov
add
inc
xchg
add
pop
imull
add
scas
loopne
sbb
add
pop
push
xchg
inc
add
add
cmp
test
jbe
movsl
out
push
add
add
jo
push
fsubl
lods
daa
cmp
or
clc
xchg
add
in
test
dec
imul
mov
ret
stc
adc
sbb
cltd
cli
jns
sub
mov
add
push
stos
pushl
lods
fsubl
out
dec
jmp
test
add
mov
rolb
out
mov
xchg
add
daa
push
add
sysenter
add
and
mov
lds
add
mov
inc
add
add
mov
add
std
ljmp
add
jmp
add
cmp
shll
add
add
pop
lret
pusha
add
jp
add
rorl
sub
mov
rolb
outsb
icebp
push
add
push
add
and
std
mov
fwait
xor
test
mov
mov
add
push
add
das
adc
cld
out
pop
xchg
adc
pop
in
jo
add
stos
jmp
add
int
pop
push
dec
scas
dec
rolb
sub
add
in
inc
mov
fstl
fnsave
adc
xchg
wrmsr
add
fcoms
outsl
pop
lcall
leave
aam
movb
cmp
movb
aaa
aam
pop
dec
mov
and
jmp
pop
addb
add
and
sub
add
in
test
xchg
push
fadds
cmp
les
mov
data16
add
cmc
pop
scas
xor
add
movsb
add
icebp
in
dec
xchg
repz
fistpll
adc
cwtl
inc
add
repnz
ret
addr16
or
rolb
aam
rolb
dec
pop
inc
stc
icebp
pushf
and
gs
dec
mov
mov
fildll
mov
gs
sub
add
imull
pop
mov
mov
and
mov
sbb
inc
add
sahf
push
outsb
fwait
push
add
bound
mov
add
cmp
rorl
repz
cmp
push
pusha
add
add
mov
push
add
fimull
sub
adc
add
ret
sbb
stos
ljmp
add
add
add
add
jmp
cmp
or
movb
add
mov
test
cld
sbb
jae
aaa
mov
ss
daa
xchg
lret
stc
cmc
jle
xchg
add
add
rdmsr
add
clc
mov
add
add
add
add
das
cld
xor
add
mov
mov
push
dec
outsb
enter
adc
adc
push
add
fldenv
add
cli
mov
fdivrs
sub
loope
dec
jno
mov
inc
add
add
xchg
scas
cmp
dec
adc
in
push
movsb
add
popf
jb
push
add
push
pop
mov
dec
das
sub
add
push
add
jno
jns
clc
pop
inc
ljmp
add
inc
add
mov
mov
fistpll
adc
add
or
add
mov
test
or
add
mov
add
mov
or
push
add
in
outsl
inc
add
push
add
add
test
mov
adc
cmp
mov
add
add
movsl
jge
jb
jns
add
xor
out
adc
bound
mov
push
mov
and
add
cmp
add
dec
sbb
movsb
add
adc
add
cli
fnstenv
add
xchg
add
mov
lds
mov
out
das
cltd
sub
and
mov
add
movb
rolb
add
add
jge
add
push
add
sahf
xor
add
popa
xchg
add
hlt
add
in
adc
add
mov
sub
add
mov
add
enter
mov
push
add
test
add
in
add
xchg
add
sbb
inc
add
dec
lea
rcr
inc
adc
lret
sub
fdivrp
inc
add
sbb
test
add
mov
decb
xor
repnz
lods
enter
test
add
add
pop
lea
cltd
pop
or
fcoms
movb
add
xorl
jnp
mov
adc
ret
add
adc
xchg
out
jge
add
stos
je
dec
aas
aaa
mov
add
pop
jg
adc
add
addb
into
ljmp
add
add
or
into
xlat
mov
mov
loope
or
sbb
jg
add
jl
jle
loop
lods
mov
add
pop
push
push
add
push
cld
int
pusha
add
mov
cmc
ja
add
add
or
add
aaa
leave
ljmp
das
or
add
int
dec
push
add
jecxz
add
or
push
add
cmpsb
add
pop
iret
dec
jnp
test
xchg
add
mov
and
add
mov
add
add
pop
test
mov
add
add
xor
add
adc
mov
xor
push
jns
ds
cmp
add
add
mov
mov
addb
es
cmc
icebp
cmp
int3
sub
imul
push
sahf
popf
les
add
mov
out
push
add
inc
add
add
jge
add
addb
add
and
mov
dec
pop
cmc
roll
xlat
or
stos
daa
insl
cmpsb
add
push
add
push
lahf
cmpsb
add
in
and
mov
addr16
dec
mov
dec
in
sub
mov
mov
add
call
ffreep
add
add
xchg
mov
daa
and
add
add
add
push
add
xchg
adc
add
repnz
add
cltd
imul
xchg
mov
out
sti
stc
ja
je
lcall
shll
pushf
insb
jnp
add
add
and
mov
movb
mov
or
mov
mov
inc
add
jno
jo
aas
hlt
add
and
mov
or
add
dec
jb
ret
pusha
add
add
sbb
rolb
add
add
cmp
add
outsb
xchg
add
mov
insb
jnp
xchg
add
in
xor
add
add
sub
in
mov
add
add
mov
add
add
add
dec
adc
mov
enter
pop
add
add
sbb
lcall
dec
push
add
testb
pop
mov
mov
push
shrl
add
mov
add
jb
dec
inc
add
cli
daa
xor
in
ficoms
or
in
call
or
push
popa
fcoms
fwait
push
test
stos
icebp
jle
cli
dec
jge
mov
inc
lahf
loopne
or
cmp
add
aad
or
xor
mov
sti
push
add
int3
es
jb
xchg
shrl
sbb
jne
stos
ja
or
test
mov
jbe
icebp
test
or
daa
ret
mov
cld
inc
inc
add
es
add
add
call
inc
roll
pop
mov
cltd
pop
iret
insb
adc
out
jecxz
xchg
mov
cmp
add
or
xor
rcrl
mov
add
pushf
addb
add
enter
insb
inc
sub
add
out
jnp
add
bound
mov
iret
pop
jge
add
add
mov
jmp
add
sub
fwait
addb
outsl
adc
add
repnz
in
call
add
add
inc
add
inc
int3
push
xchg
push
add
add
push
adc
addl
add
rolb
hlt
add
add
add
stos
in
push
mov
add
add
int
add
add
push
pop
stos
xor
sti
mov
testb
fwait
rolb
outsl
mov
jg
lock
pop
adc
rcrl
add
lcall
mov
stos
cmp
add
ss
add
add
push
add
xchg
inc
cmp
fnsave
iret
sub
jne
add
nop
add
test
outsl
sahf
or
lock
ret
pop
pop
jl
jmp
fwait
pop
testl
ds
and
mov
add
lds
add
jp
gs
test
fdivl
mov
cmpsb
add
add
add
jo
push
add
scas
inc
popa
shrl
cmp
push
add
enter
xor
xchg
clc
sub
fimuls
dec
pop
ja
fdivp
outsb
pop
dec
xchg
add
add
repz
hlt
add
mov
or
into
repz
mov
add
xchg
add
sub
add
push
sahf
sbb
add
roll
add
add
dec
push
add
mov
push
rolb
sbb
dec
std
sub
fisubrl
cmp
sub
sub
cmp
mov
pop
sub
push
add
add
scas
das
xchg
jge
push
out
cmp
in
lcall
insb
pusha
add
mov
nop
add
and
add
icebp
cmp
das
pop
pop
jle
and
es
repz
add
mov
enter
sbb
add
pop
les
imul
mov
addb
dec
or
fildll
nop
add
add
add
add
add
das
add
mov
das
rep
lods
adc
add
xchg
push
cmp
mov
add
mov
dec
sub
add
cmpsl
loope
mov
and
pop
mov
jae
aam
jbe
sub
add
mov
int
pop
adc
xchg
nop
add
cmpsl
or
mov
fstpt
add
mov
mov
inc
adc
aad
sbb
mov
and
pop
les
out
and
jmp
int
cltd
dec
dec
insl
push
mov
cmp
pop
scas
les
mov
pop
sub
vmovapd
popa
xor
data16
mov
xchg
jmp
add
push
add
sbb
in
into
inc
fistps
rolb
rolb
mov
lods
xchg
fisubrl
hlt
add
pushf
scas
mov
add
fisttpll
jae
aad
push
add
pop
std
out
pop
inc
out
rolb
or
rcrl
xchg
inc
jl
add
and
mov
dec
repnz
inc
add
adc
fsub
cmp
pop
xchg
movl
mov
add
addr16
and
mov
addr16
pop
cwtl
cmp
add
sbb
sbb
mov
add
pusha
add
ret
pop
pop
jb
add
cmp
gs
loop
push
add
pop
insl
rorl
sbb
add
mov
add
xchg
int3
xchg
jle
push
shl
add
popf
mov
mov
mov
mov
stos
adc
mov
fs
js
add
jo
xchg
sbb
xchg
dec
fxch
enter
sub
add
or
add
in
adc
addb
add
jne
scas
mov
push
add
pop
sbb
add
inc
shl
rcll
add
add
in
loop
sti
cmpsl
jnp
inc
inc
add
inc
add
outsl
subl
add
push
add
rolb
fcoml
cmc
lock
rolb
sbb
xor
cmp
add
fdivr
or
cmp
test
imul
cwtl
xchg
out
xor
push
add
in
add
xchg
add
add
movsl
das
xchg
add
mov
ljmp
cltd
and
mov
sbb
xchg
cmc
mov
js
add
add
es
adc
add
add
add
ja
aaa
test
lret
notl
add
mov
movb
xor
shr
adc
inc
add
add
add
or
add
or
add
testl
sbb
add
leave
pop
pop
xchg
add
les
nop
add
add
mov
enter
xchg
add
aaa
and
enter
xor
sub
add
aas
mov
add
add
pop
pop
ja
inc
pop
dec
scas
insb
rolb
adc
pusha
add
add
cmp
pop
pushf
cmp
add
push
fadds
scas
ficomps
dec
loope
in
hlt
add
pushf
leave
sub
sub
and
mov
fwait
cmp
add
mov
cmpsb
add
movb
lcall
xchg
add
add
jae
popa
jecxz
jns
add
inc
scas
aam
adc
inc
add
add
dec
jecxz
add
add
add
in
add
mov
add
mov
clc
jae
fwait
xor
arpl
dec
rolb
pop
mov
jmp
add
add
push
add
mov
sar
inc
test
add
add
scas
out
movb
add
add
cmp
hlt
add
ret
add
ja
cmp
fisttpl
sbb
mov
sti
imul
add
add
add
add
add
pop
push
add
pop
mov
add
mov
inc
add
add
in
add
push
add
clc
insb
dec
add
xchg
out
je,pt
dec
sar
and
pop
mov
mov
out
repz
jne
inc
jno
imul
cwtl
aas
sbb
add
add
mov
pop
xchg
mov
addb
add
and
jg
repz
cmpsl
xor
push
sub
add
add
add
movb
add
add
add
mov
pop
mov
add
xchg
xchg
xchg
add
push
push
add
movsb
add
inc
das
push
add
into
lret
push
sub
add
add
jno
adc
addb
mov
xchg
inc
xchg
adc
push
mov
lahf
das
mov
cmp
clc
and
mov
add
add
cmpsb
add
pop
mov
dec
scas
sbb
pop
adc
mov
repnz
pushf
xor
les
bound
mov
sbb
cmp
add
dec
rolb
add
mov
lods
outsb
xor
add
mov
outsl
and
cmovne
mov
pop
and
mov
add
or
inc
add
add
not
add
repnz
add
add
ret
push
jmp
sbb
mov
in
sub
cld
insb
insl
mov
add
add
add
xor
push
add
ds
iret
ret
lods
jmp
add
add
jbe
jp
inc
pop
add
add
ds
add
cmp
lea
ja
mov
insb
das
or
lock
test
add
out
cmp
add
add
pusha
add
add
sbb
add
cmp
lods
mov
inc
cmp
add
xlat
outsl
jge
add
cmpsl
mov
das
in
movsl
or
addb
mov
inc
rolb
inc
add
arpl
add
cmp
aas
repnz
lret
mov
cwtl
mov
sbb
jecxz
jo
mov
jb
scas
xchg
jo
cmc
add
xchg
add
and
out
sub
and
lea
dec
cmc
pop
push
add
cwtl
data16
neg
sub
data16
push
lock
cmc
movb
fwait
das
jg
jmp
repz
int3
lea
adc
ja
fisttpl
js
add
pop
movsb
add
add
and
aam
mov
add
add
add
mov
adc
add
jl
addr16
movsb
add
push
jp
mov
sub
out
adc
xchg
push
and
xlat
and
mov
mov
dec
push
push
add
hlt
add
adc
jbe
cltd
adc
add
add
jg
pop
adc
adc
loope
add
push
add
add
sbb
shl
inc
push
add
mov
aad
xchg
pavgb
cmc
dec
add
add
pop
out
mov
dec
ret
cmp
jge
pop
stos
dec
mov
jb
gs
jg
test
addr16
jmp
add
mov
cmpsl
or
inc
add
inc
das
mov
dec
jle
and
in
les
inc
add
shll
fnclex
add
mov
add
ds
mov
das
hlt
add
dec
movb
add
mov
pop
mov
push
imul
dec
xor
pop
xor
fisubrs
cmpsb
add
add
and
mov
add
push
ret
call
pop
imul
inc
pop
scas
mov
xchg
and
mov
xchg
les
sbb
bound
mov
add
add
mov
push
faddp
add
sbb
mov
sbb
rolb
mov
cmc
jnp
add
fsubs
add
mov
push
pop
orl
add
add
add
and
mov
add
add
xor
movsl
loopne
or
fiaddl
xlat
loope
add
jmp
jmp
dec
ljmp
lret
mov
aad
push
add
push
add
mov
add
cwtl
or
add
les
outsb
movsb
add
add
mov
xchg
add
add
cmp
rolb
add
or
cld
sbb
cltd
mov
pop
ror
xchg
adc
jge
add
ss
loope
add
mov
ret
push
add
jne
iret
enter
add
imull
cmp
add
add
sub
adc
loop
jecxz
jo
and
jmp
enter
adc
add
fwait
jnp
cmpsl
mov
dec
fadd
add
mov
add
dec
adc
add
mov
in
xor
xor
cmc
adc
shrl
mov
call
sbb
mov
dec
addl
aam
ret
sub
ret
mov
mov
insb
aam
inc
jo
repnz
dec
out
inc
je
dec
imul
out
inc
rorl
repz
mov
sbb
aad
add
add
add
jns
adc
icebp
inc
inc
add
mov
cmp
dec
enter
roll
mov
in
lret
fwait
aas
jne
fwait
lret
jo
jecxz
sub
add
sbb
xchg
addb
add
mov
ret
inc
sbb
add
adc
xadd
rcll
push
popf
cmp
outsl
in
pop
in
dec
ja
test
mov
adc
xor
add
push
mov
or
add
add
js
add
dec
mov
inc
add
add
cwtl
jp
add
dec
lahf
lahf
mov
add
add
pop
nop
add
push
add
mov
sbbl
fdivrs
das
mov
loopne
xchg
add
loope
cmc
pcmpgtd
xor
jnp
add
scas
addb
scas
xchg
add
add
add
add
add
push
add
add
mov
pop
popa
or
add
lret
add
fwait
cmp
xchg
inc
add
add
add
loop
addr16
dec
hlt
add
add
add
pop
pop
xor
xchg
add
dec
push
addr16
add
inc
mov
cltd
dec
sti
jo
xchg
aad
adc
shl
adc
pop
pop
int
add
mov
icebp
int
adc
shrl
add
mov
add
xchg
cltd
aaa
ja
jge
push
add
cmp
jge
rolb
mov
sub
add
push
add
lods
fwait
lods
jno
into
ljmp
add
iret
rorl
lcall
xchg
add
movb
adc
push
add
sbb
dec
cmp
stos
add
into
aaa
enter
mov
add
iret
push
out
imul
mov
add
add
sbb
out
add
jmp
add
outsl
pushf
mov
jbe
test
sbb
mov
add
pextrw
js
adc
xchg
test
push
fstpl
push
scas
nop
add
je
pop
xchg
add
int
xchg
push
das
shrl
mov
push
xchg
cmpsl
cld
mov
mov
loopne
test
add
mov
lcall
push
cs
add
xchg
mov
and
mov
push
add
adc
popa
test
inc
add
push
add
jg
xchg
mov
add
jmp
mov
sbb
ljmp
jo
mov
pop
rcr
stc
test
pop
in
inc
add
addb
add
lahf
add
add
xchg
add
push
femms
sub
cmp
dec
lods
jno
inc
inc
add
xchg
add
scas
jge
in
dec
sahf
dec
testb
add
jl
jns
push
icebp
js
clc
test
add
ja,pn
sarl
add
and
push
cld
stos
lret
add
call
lods
push
jnp
add
scas
shr
mov
mov
test
push
jl
cmpsl
pop
ret
js
add
popf
inc
daa
or
add
adc
cmpsb
add
jmp
push
dec
movb
mov
xchg
stc
pop
pop
add
pop
lock
add
pop
scas
ret
add
inc
add
jae
add
je
or
imul
ret
shl
xor
add
xor
movsb
add
add
pmaxub
mov
dec
and
std
in
popa
add
add
add
pop
push
out
js
add
addr16
push
add
aas
shrl
mov
cmp
push
add
aas
int3
push
ret
xchg
add
xchg
add
jns
or
push
add
mov
add
mov
lods
pop
movsl
mov
mov
rolb
int
mov
add
and
mov
add
cmp
mov
and
cmpsb
add
mov
adc
pop
cli
jb
das
in
movsl
mov
add
fmulp
loop
jbe
add
movb
sahf
pop
xor
mov
js
add
add
nop
add
dec
adc
adc
add
push
add
movb
add
cmp
jge
stc
cwtl
cmp
mov
push
add
add
imull
add
add
push
add
add
stc
xlat
jl
add
push
add
mov
mov
add
add
dec
movb
in
mov
test
mov
addb
jge
jge
add
and
inc
mov
rolb
mov
enter
add
pop
add
mov
cltd
xchg
mov
mov
push
sub
pop
pusha
add
pop
rolb
add
mov
testl
shll
jno
lock
add
sub
xchg
mov
in
mov
leave
jle
movl
lret
sub
pop
xor
popl
add
add
pop
xor
push
clc
add
mov
lcall
add
add
ljmp
add
add
mov
jbe
mov
mov
sti
xchg
sbb
add
mov
mov
add
add
adc
std
sbb
rcrl
cmp
cs
add
and
add
add
jecxz
and
add
and
mov
aad
mov
jmp
add
popf
sub
adc
frstor
mov
add
sbb
mov
call
xchg
sub
add
mov
rolb
iret
ljmp
popf
rolb
fucomi
lret
add
add
add
jo
bound
mov
add
movsb
add
add
add
dec
out
add
add
add
mov
fsub
add
dec
dec
lahf
js
sub
push
jp
das
push
add
fistps
add
add
jae
cld
add
add
cmp
adc
add
dec
and
mov
push
add
mov
or
sahf
out
pop
out
pop
sub
add
mov
add
add
add
mov
or
aaa
iret
or
rolb
je
addr16
cmc
cmpsl
imul
add
inc
add
push
inc
mov
fwait
lret
and
arpl
ret
inc
pop
mov
lods
stc
aam
xchg
push
jne
data16
xchg
popa
sbb
inc
add
push
and
inc
add
add
inc
add
addb
sbb
add
xor
ret
mov
sub
movsl
mov
dec
pop
jmp
add
inc
add
inc
inc
add
add
xchg
add
inc
push
add
data16
fwait
mov
pop
mov
xchg
or
add
gs
push
repz
loopne
and
mov
mov
iret
jnp
pop
int3
jle
scas
push
add
add
rolb
mov
cmpsb
add
scas
push
xchg
add
aaa
ret
loope
add
insb
push
add
add
push
push
add
jge
add
pop
or
add
add
add
pop
mov
add
push
dec
jae
jmp
mov
add
inc
add
push
add
add
iret
sub
jne
cld
push
add
add
int3
mov
mov
mov
add
into
jecxz
sub
xchg
add
add
mov
cmp
scas
test
add
add
add
mov
mov
mov
stc
popf
stos
out
or
mov
add
inc
stos
jmp
dec
push
add
testb
jle
add
add
add
fcmovnb
add
cmp
dec
int3
jbe
addb
nop
add
mov
sub
push
sbb
mov
add
add
add
sbb
orl
push
fistl
test
add
mov
sub
test
data16
add
xchg
adc
or
dec
push
add
frstor
add
add
dec
adc
jmp
ret
xor
add
out
xor
daa
fnstsw
add
add
jge
pop
push
outsb
push
add
add
jb
scas
out
bound
mov
jg
add
add
mov
in
clc
in
je
je
mov
sub
test
testb
add
add
je
jge
les
and
mov
add
add
adc
pusha
add
add
sbb
inc
pop
mov
xchg
add
mov
add
stos
fsubrl
add
add
add
jae
jb
popf
ret
test
dec
daa
lds
add
in
sbb
push
mov
add
add
push
add
add
mov
das
out
and
mov
add
and
mov
imul
pop
dec
pop
fistpll
mov
mov
pusha
add
add
add
add
jg
jbe
lock
jae
xchg
cwtl
pop
inc
inc
add
jne
mov
push
stc
push
add
ret
ljmp
lahf
ficomps
add
xlat
scas
xchg
dec
sub
lret
push
enter
push
add
xchg
pop
adc
pop
repz
lret
sbb
add
lret
repz
jecxz
pop
jns
in
fadd
pushf
lea
add
add
add
mov
sbb
mov
xor
push
fdivr
mov
std
mov
enter
add
mov
sahf
addb
outsl
stos
or
push
idivl
movb
adc
add
adc
jle
inc
add
sti
daa
addb
add
roll
xchg
add
add
cmpsb
add
pop
pop
dec
pop
daa
jae
add
add
mov
testb
inc
adc
add
das
xchg
inc
add
mov
fcmovu
popf
mov
aas
xor
ljmp
std
faddl
add
jno
add
mov
or
ds
cld
aaa
insb
cmpsb
add
sbb
cltd
or
mov
mov
pop
movsb
add
add
cmpsb
add
arpl
pop
sub
scas
in
test
push
add
add
out
fiadds
lea
js
add
leave
dec
xchg
push
lock
pop
xchg
add
add
stos
cltd
pusha
add
insl
mov
xor
jp
addr16
cs
mov
add
enter
imul
stc
sub
or
or
cmp
ja
add
jp
cmc
adc
fdivrs
aaa
lods
enter
imul
add
add
add
add
sub
stc
rolb
pop
inc
add
xchg
add
fstps
add
add
add
aad
sub
scas
and
mov
add
and
add
inc
mov
sub
add
adc
add
add
imul
test
stos
dec
jl
add
add
sbb
add
dec
xchg
ljmp
dec
iret
xchg
or
sbb
sub
cmp
outsb
and
mov
ds
out
jmp
loopne
loop
pop
addr16
add
call
add
add
jmp
ljmp
imul
icebp
ja
jge
add
add
add
xchg
lods
stos
mov
and
inc
add
add
rolb
push
xlat
inc
add
mov
sarl
add
lods
jne
lds
add
mov
mov
mov
jbe
orl
test
add
pusha
add
add
addb
outsl
cmp
xlat
aaa
in
xlat
add
add
add
add
mov
nop
add
sbb
add
add
loope
add
add
movsb
add
cltd
call
add
in
sub
fidivrl
sbb
add
pop
sub
sub
inc
add
pushf
mov
inc
add
inc
add
fsubr
jns
sub
pop
fildl
stos
inc
js
imul
mov
jge
add
clc
mov
jmp
lds
fiaddl
cmc
lret
aam
mov
mov
pusha
add
add
pop
call
leave
jne
rcr
pop
cmp
sub
ret
dec
lea
aam
test
pushf
jp
add
aaa
std
arpl
jb
sub
push
add
xor
add
dec
rolb
imul
cs
ds
adc
push
pop
loopne
pop
bound
mov
add
out
mov
mov
mov
in
and
ja
add
test
shr
ret
imul
imul
add
cltd
sti
add
add
sbb
xlat
fildll
andl
inc
add
jp
xor
incb
add
outsl
sar
add
je
fstpl
insl
adc
add
aad
add
insb
insl
add
cmp
add
fildll
cld
adc
push
add
imul
jno
in
dec
jmp
dec
cld
cli
insl
pusha
add
dec
mov
cmp
outsb
hlt
add
adc
add
mov
cmovns
pop
jbe
lock
add
push
sti
arpl
into
in
and
test
add
in
xlat
mov
scas
sbb
xor
sbb
in
into
and
add
jno
add
rolb
or
mov
mov
mov
add
and
pop
testb
scas
aam
and
test
adc
dec
jnp
sti
addr16
jmp
xchg
xlat
int3
inc
fdivrl
or
mov
into
subl
pop
ret
mov
imul
xchg
add
add
add
scas
pop
popl
arpl
add
add
mov
xor
aaa
pop
js
out
mov
or
sub
or
add
ja
add
rolb
mov
add
mov
add
add
cmp
jne
add
hlt
add
push
aas
or
and
arpl
je
movsb
add
inc
add
add
hlt
add
add
inc
add
add
popa
dec
adc
adc
mov
add
leave
cmpsl
adc
mov
jle
lret
in
cwtl
push
add
add
xchg
rorl
cmpsl
imul
jb
dec
pop
lcall
lahf
pop
jge
add
arpl
lods
mov
add
dec
test
icebp
dec
rolb
scas
and
add
xor
mov
add
lock
xchg
add
out
sbb
dec
movsl
stos
outsl
das
dec
out
adc
aad
add
xor
add
add
push
inc
flds
or
push
add
ljmp
stc
xchg
adc
mov
movsb
add
test
add
in
mov
mov
cltd
rolb
popa
sbb
jecxz
add
pop
add
in
add
add
dec
es
mov
add
pop
mov
mov
xchg
cmp
add
add
add
dec
add
sbb
aam
lcall
pop
sub
lret
test
int
add
lahf
mov
cli
adc
addb
adc
movsl
jge
add
lcall
fcmovbe
add
lea
incb
out
or
popf
push
add
aam
dec
ds
add
jb
mov
inc
add
mov
mov
jb
addl
mov
mov
mov
cs
jle
add
mov
mov
add
add
add
loop
sbb
mov
ds
scas
push
adc
mov
repnz
fnstsw
imul
mov
mov
add
xchg
add
add
mov
dec
loop
mov
frstor
add
add
add
lahf
pop
and
sub
negl
jl
mov
sub
movsb
add
rolb
addb
jne
decl
and
jbe
adc
mov
enter
leave
imul
add
add
stos
xor
test
mov
sahf
add
mov
pop
add
inc
mov
add
inc
add
add
adc
rolb
mov
add
and
mov
dec
les
push
cmpsl
int
int3
mov
popa
testb
push
in
lea
cmpsl
adc
ljmp
mov
in
lcall
repz
add
mov
add
sbb
add
mov
jbe
dec
add
inc
add
add
or
inc
nop
add
mov
xchg
cmpl
shrl
addb
mov
mov
pop
add
loope
add
add
mov
add
mov
or
xchg
sbb
and
fisubrl
stos
mov
jecxz
xchg
mov
popf
pop
ret
and
add
add
sub
add
inc
das
xchg
in
outsb
addb
add
jmp
add
mov
lods
jle
enter
fists
mov
add
sub
and
ja
sub
jno
in
add
loop
lret
ds
add
add
jbe
adc
add
add
add
add
push
mov
orl
out
and
mov
add
and
scas
rolb
cld
scas
fwait
or
add
mov
jmp
add
add
add
fldenv
mov
sbb
add
add
add
and
add
test
add
mov
cmp
daa
push
lret
adc
rcll
outsl
sbb
out
sub
insb
pop
cli
mov
cmp
add
add
push
mov
call
mov
addb
bound
mov
mov
cmpsb
add
rolb
in
fcmovb
mov
int3
pushf
rolb
xor
repnz
add
add
bound
mov
add
fwait
negl
movaps
add
mov
mov
jo
lods
adc
and
cmp
lcall
dec
hlt
add
ret
sub
add
add
insl
add
mov
mov
aad
add
cmc
add
mov
jbe
lods
jnp
mov
push
add
add
cmp
inc
push
add
jle
add
dec
psllw
dec
fstps
add
dec
lds
jl
push
shrl
and
or
out
dec
inc
add
add
push
incl
add
add
mov
add
mov
in
scas
mov
arpl
add
int
add
add
adc
pop
xor
in
scas
mov
add
add
add
outsb
mov
iret
or
fstps
mov
std
stos
fcompl
jb
or
fwait
lret
invd
jbe
adc
xchg
dec
adc
xchg
jns
rolb
add
mov
xchg
jo
jae
cwtl
in
out
ja
add
mov
icebp
clc
test
add
add
fstps
cld
scas
cmp
mov
faddl
into
add
add
push
and
dec
push
add
fisubl
mov
mov
sahf
jmp
roll
ret
xchg
repnz
popf
dec
decb
mov
add
mov
nop
add
cmp
pop
inc
add
add
push
add
orl
add
dec
jmp
xor
mov
cld
add
mov
add
insb
fldenv
xchg
add
add
scas
loope
cli
ficoms
add
iret
xchg
push
pop
cmpsb
add
adcl
movsb
add
stc
mov
out
leave
inc
add
addr16
add
lcall
pop
xchg
add
add
adc
mov
lret
cmp
ja
int
addb
ret
sti
jg
add
repnz
into
repnz
sub
lock
push
out
dec
mov
lea
inc
mov
add
rolb
inc
add
aad
add
add
add
add
mov
fcos
mov
pop
xor
rolb
add
mov
int3
inc
xor
out
xorl
jmp
push
adc
mov
add
xor
inc
add
push
add
add
insb
or
or
outsl
fnstenv
add
jg
add
lods
mov
pop
in
and
mov
rcr
test
in
add
or
add
cs
add
data16
jnp
in
rolb
add
mov
add
cld
js
add
sub
lcall
addr16
std
inc
mov
lcall
pusha
add
mov
inc
dec
scas
mov
add
hlt
add
in
test
add
mov
sbb
cltd
rolb
leave
rolb
jb
sbb
nop
add
out
add
xor
aaa
cmpsl
fistps
or
mov
inc
add
inc
add
popf
mov
rolb
sbb
sub
icebp
jge
or
imul
roll
into
bound
mov
dec
loope
fcomi
mov
icebp
pop
ds
arpl
and
push
lea
cmp
push
add
mov
xchg
jnp
add
mov
add
int3
inc
add
add
nop
add
outsb
sbb
adc
add
dec
jb
hlt
add
add
std
insb
pop
push
jge
fwait
or
add
sub
and
pusha
add
add
and
add
add
add
int
bound
mov
movsl
movb
lcall
mov
jg
cltd
mov
add
cld
test
sahf
dec
out
fbstp
add
inc
add
add
add
xor
add
popf
loope
sub
push
dec
mov
out
push
rolb
inc
add
add
dec
bound
mov
insb
loope
or
int3
push
push
add
xchg
cld
inc
mov
scas
pop
jle
and
out
xor
xchg
xchg
push
mov
add
add
add
add
and
movb
or
add
xor
push
add
popf
rorl
mov
add
lock
jge
and
dec
jmp
sub
pop
movsl
push
add
std
adc
add
mov
mov
add
add
mov
jecxz
out
push
mov
add
xchg
add
cmpsl
lock
int3
dec
dec
mov
aas
sub
imul
insl
dec
fisubrl
and
mov
mov
bound
mov
add
add
push
add
xor
test
ficoml
add
pop
mov
mov
fsubs
add
addr16
adc
add
or
add
mov
std
bound
mov
out
add
dec
adc
jmp
add
pop
ret
cmp
fcomi
mov
xchg
push
xchg
add
mov
mov
rolb
and
jne
add
jmp
add
add
add
insb
push
inc
add
decl
sub
inc
add
dec
sub
add
das
addr16
cmp
xor
js
add
pop
jnp
push
cmp
outsb
pusha
add
mov
adc
xorl
add
into
jl
pop
mov
xor
pop
add
fnstcw
add
jle
inc
sbb
mov
out
add
testb
add
add
add
mov
jp
or
and
loopne
call
push
dec
or
mov
add
add
inc
add
push
add
push
pushf
xchg
mov
nop
add
stos
cmp
std
repnz
push
in
add
adc
add
aaa
mov
add
ret
imul
push
scas
mov
popf
in
dec
ret
testb
add
add
sbb
mov
add
mov
add
cmpsb
add
xor
add
mov
addb
add
mov
add
mov
or
add
xor
add
add
arpl
add
mov
push
add
add
testb
cmp
int
add
add
jge
mov
fucomp
rolb
jge
mov
add
cmpsb
add
xor
les
jns
jne
add
sub
add
inc
out
add
or
fcmovnbe
add
in
jns
jmp
loop
jecxz
fistl
rolb
gs
add
loopne
test
hlt
add
mov
add
fwait
cmp
add
and
add
push
adc
repnz
cwtl
pop
xchg
imul
repz
shr
add
add
addb
add
dec
lods
sbb
test
insl
jne
and
mov
and
mov
xchg
lds
or
add
add
imul
int
or
cmpl
mov
mov
xchg
add
pop
popa
movsb
add
mov
cmpl
add
dec
rcrl
add
push
bound
mov
js
xor
or
es
sbb
enter
add
movsb
add
add
adc
mov
mov
add
add
loopne
push
jbe
jge
xchg
mov
push
add
add
push
into
adc
mov
add
xor
rolb
lcall
cmp
jmp
push
and
add
add
pop
test
fnstcw
cmp
inc
fmuls
mov
cmp
stos
push
add
xor
jle
fsts
mov
add
jnp
xor
add
add
xchg
leave
addb
addr16
xchg
add
rolb
icebp
popf
addr16
xor
mov
lods
ret
mov
lret
lcall
lock
add
hlt
add
xor
arpl
add
or
jo
jle
add
xchg
popf
sub
dec
lds
mov
xchg
arpl
add
adc
mov
mov
sbb
pusha
add
add
mov
dec
inc
add
or
mov
mov
mov
jns
cmp
add
movb
add
cmp
frstor
jle
add
or
add
ret
add
sbb
add
mov
mov
add
out
xor
out
bound
mov
test
pop
jo
push
add
add
repz
cs
lea
out
arpl
add
insl
jmp
lahf
ds
int3
inc
add
outsb
lods
push
add
repz
sbb
fidivs
add
aas
repnz
add
in
loope
fnstenv
add
movb
lcall
xchg
mov
cmpsl
fmull
fldt
popa
aam
push
test
lock
add
repnz
sbb
pop
dec
cs
add
add
add
add
or
mov
add
add
adc
add
rcll
add
add
addb
add
fmull
mov
add
ffree
test
loopne
ficoml
mov
mov
in
add
rolb
or
add
insl
push
add
add
pop
xchg
add
add
add
iret
out
ljmp
lds
popa
adc
mull
std
sbb
sub
mov
testb
xchg
and
mov
leave
and
testb
add
imul
sbb
rolb
and
sbb
add
gs
pop
loopne
cld
add
mov
add
add
insl
cmp
add
sub
add
push
mov
add
sqrtps
add
add
rolb
mov
mov
add
out
and
xor
outsb
inc
mov
sub
adc
add
add
pop
xchg
add
and
mov
add
aad
add
cltd
fldcw
add
out
mov
lret
loop
imul
inc
add
cmp
jns
add
dec
ret
jge
add
add
loop
pop
in
add
ret
scas
mov
add
jae
das
mov
aas
dec
subl
add
mov
adc
add
test
mov
addb
rolb
mov
mov
lahf
lds
mov
add
xchg
mov
out
fiadds
shl
add
je
and
mov
cwtl
addr16
andps
lds
mov
inc
add
add
add
cmp
fistpll
ror
xchg
add
add
mov
cmp
addb
sub
inc
add
or
add
add
xchg
mov
ret
pop
cmpsl
scas
stc
xor
cli
pop
mov
xchg
insl
das
jns
test
dec
add
cltd
jmp
add
das
jg
aaa
popa
adc
sbb
add
push
loope
into
inc
pop
jp
je
cmc
cli
rolb
cwtl
push
add
aaa
push
fidivrl
data16
add
inc
add
push
add
mov
call
popf
jno
dec
stos
movsl
sub
and
jmp
mov
or
add
add
adc
out
das
sub
add
xchg
popf
addb
popa
adc
les
orl
push
add
divl
push
add
fsts
add
imul
mov
stc
fisttpll
lret
push
out
arpl
mov
jne
jg
add
cmp
inc
add
rolb
movsb
add
xchg
add
pop
loopne
dec
xor
add
add
pop
int3
into
std
pusha
add
xlat
rorl
add
add
cmpsl
jg
add
fdivrl
dec
out
fcoml
add
adc
mov
add
mov
test
outsl
fxch
jmp
lds
add
pushf
pop
and
scas
mov
addb
mov
push
aas
jns
inc
add
sub
hlt
add
dec
xchg
iret
add
cmp
sahf
rcrl
pop
sub
xor
mov
mov
jns
push
add
pop
lea
rolb
js
add
add
pop
pop
rolb
fmul
inc
ds
push
jnp
add
xchg
mov
sbb
ljmp
leave
movb
test
in
xchg
and
mov
imul
push
pop
xchg
scas
jg
add
shll
mov
testb
data16
clc
icebp
xor
adc
or
mov
push
sahf
popf
outsb
jbe
cli
addb
and
icebp
push
add
aas
int3
ljmp
mov
pop
adc
pop
cld
out
repnz
jge
test
ljmp
in
push
push
add
add
add
add
or
test
xchg
xor
add
mov
dec
cmp
out
mov
repnz
jl
dec
push
add
or
add
and
mov
add
add
orl
mov
xor
add
outsl
faddl
mov
imul
jae
js
das
enter
push
push
add
push
cmpsb
add
jle
fwait
inc
sub
mov
sbb
add
add
out
insb
push
add
addl
sti
popa
jl
sbb
xchg
faddl
in
add
in
mov
das
insb
or
add
in
mov
add
add
daa
bound
mov
addb
lods
in
and
mov
mov
clc
movsb
add
js
add
aam
in
push
add
xchg
ljmp
data16
pop
data16
call
test
pop
push
push
or
mov
lret
rolb
in
nop
add
rolb
add
add
rolb
add
jg
or
xchg
add
sub
add
fmull
cmpsb
add
push
add
lret
inc
add
xchg
lods
pop
jb
mov
jno
mov
add
pop
out
adc
das
incb
sub
sub
cmp
ja
or
add
add
adc
movsl
add
xchg
stos
in
dec
jmp
add
sahf
cmp
or
inc
aaa
dec
mov
hlt
add
cmpsl
xchg
pop
aaa
nop
add
repz
insb
xor
push
add
out
pop
add
test
jecxz
addr16
lock
fsts
add
lcall
adc
sbb
leave
cmp
gs
aam
shl
mov
adc
add
clc
mov
aam
in
rolb
ds
ja
fmull
sbb
mov
add
mov
mov
push
sub
add
add
in
cmp
out
lret
cltd
leave
rcr
mov
inc
xor
sbb
add
les
adc
daa
jnp
pop
inc
add
cmc
lds
and
mov
add
ret
jno
add
sbb
sub
jne
test
bound
mov
add
inc
add
stos
sub
add
testb
mov
rolb
test
dec
push
add
aam
movsb
add
add
inc
into
imul
add
adc
xchg
jecxz
scas
lods
loope
mov
xchg
and
fildl
add
add
data16
in
lods
sub
movsb
add
add
rolb
mov
roll
add
mov
daa
cmpl
shll
sbb
aad
cmpsb
add
cmp
or
ret
push
jb
int3
dec
pop
mov
out
mov
rolb
scas
scas
jp
sub
dec
movsl
inc
int
add
mov
pusha
add
add
clc
pop
push
add
sbb
mov
xchg
outsb
pop
shll
sub
add
add
add
mov
mov
out
sahf
xor
add
add
cltd
cmp
mov
add
push
pop
jns
add
in
sub
add
popa
pop
add
add
int3
fistl
add
lds
mov
push
jns
repz
add
inc
add
loope
rolb
mov
jmp
cmp
clc
or
fimull
and
mov
lcall
ds
jb
clc
mov
xchg
addb
add
out
push
dec
mov
leave
dec
sub
push
or
divl
addb
jo
xor
add
imul
int
jecxz
push
ja
into
rolb
and
fildl
mov
xor
pusha
add
add
mov
or
add
ret
add
add
int3
mov
cmp
add
lock
add
add
add
add
out
mov
add
xor
in
push
add
add
push
add
xchg
add
push
add
mov
add
add
mov
add
sbb
push
add
and
push
add
push
adc
jno
clc
sbb
out
cld
test
loopne
std
push
dec
add
xor
arpl
cmp
add
test
out
mov
xor
sbb
add
add
cltd
jb
mov
xchg
add
jbe
test
sahf
mov
test
add
and
fdivr
pop
ss
jg
fistpll
cld
add
add
add
add
dec
jle
pop
add
fisubrl
jmp
add
jo
sub
addb
pushf
stc
std
pop
cld
jg
add
push
xchg
pop
add
add
jg
les
setb
movsl
bound
mov
jae
fildl
add
fxch
fdivrs
mov
or
out
out
dec
js
add
push
adc
mov
incb
add
iret
daa
or
out
sti
rolb
addb
add
outsb
aas
pusha
add
add
paddq
cmp
test
add
loop
jl
pop
adc
repnz
sahf
sarl
push
add
lret
movsbl
mov
add
push
add
mov
mov
data16
test
hlt
add
mov
rolb
dec
dec
add
mov
outsb
ljmp
jmp
add
jbe
movsb
add
add
aas
loop
xchg
add
jp
add
sbb
mull
add
xor
push
add
and
mov
or
bound
mov
add
add
mov
sub
add
push
adc
inc
lret
xor
xchg
cmp
shll
mov
fwait
movsl
addr16
fldenv
fwait
dec
xchg
aas
addb
push
add
int
ljmp
mov
mov
cmp
dec
lea
xchg
add
mov
jle
and
xchg
popf
mov
push
mov
fs
adc
dec
lods
mov
pop
sti
xchg
cmp
ret
adc
add
das
imul
jne
rcr
add
sub
sti
push
add
jmp
fistps
push
data16
and
les
sbb
add
cmp
add
out
cmp
add
mov
outsb
adc
jmp
dec
fs
and
out
add
roll
clc
or
add
jp
add
iret
ret
test
xor
cmp
add
and
repnz
test
mov
inc
je
sub
add
add
pop
xor
push
add
cmp
inc
lock
in
add
lret
repz
outsb
stc
jge
neg
mov
cmpsb
add
add
add
cmpsb
add
inc
add
outsb
dec
xor
jne
push
andl
sbb
add
rol
add
push
adc
push
mov
mov
pop
icebp
jp
insb
lods
in
push
add
jno
add
add
mov
sbb
testb
std
fcoms
or
js
xchg
add
push
add
pop
sbb
jne
decl
push
add
cmp
xor
add
add
out
lcall
push
add
add
add
orl
add
loope,pt
cmp
andl
ljmp
call
fsubrl
push
xor
and
xchg
sub
cmp
pop
add
mov
add
add
mov
repnz
btc
add
dec
mov
add
sarl
movsl
iret
arpl
mov
inc
mov
xchg
cmp
mov
lods
add
and
cs
add
xlat
hlt
add
inc
inc
cmpl
mov
and
mov
xchg
lods
push
add
xorl
call
jg
cmp
add
lahf
mov
inc
add
xchg
rep
add
mov
jns
add
lods
in
test
push
dec
mov
test
push
mov
test
add
add
scas
aam
nop
add
mov
mov
jle
mov
dec
pop
mov
lcall
jge
addr16
add
mov
and
mov
push
sti
inc
cld
xor
jo
jg
add
imul
add
dec
leave
pop
stc
sysexit
scas
xor
cld
pushl
clts
add
ret
lret
stos
or
add
cs
push
add
jmp
sbb
mov
das
mov
loopne
pop
jge
add
and
and
mov
test
add
add
add
xchg
cwtl
dec
xor
push
mov
in
pop
ljmp
add
jecxz
add
out
dec
lods
add
call
pop
jbe
and
iret
fsubrl
mov
enter
sub
add
add
xchg
xchg
sbb
cmc
test
add
addb
inc
add
rcll
jle,pn
cltd
data16
jnp
ret
rorl
stc
call
or
jbe
or
add
mov
add
ljmp
in
sub
push
add
lea
sub
lcall
lods
mov
jns
into
push
add
mov
stos
push
not
add
add
add
adc
in
data16
mov
add
pop
loope
add
loope
mov
pop
or
sub
in
pop
adc
xor
push
add
inc
pop
xchg
dec
cmc
popa
gs
add
rolb
or
nop
add
jp
inc
add
ret
sbb
and
and
add
mov
stos
adc
or
rcrl
into
gs
add
mov
fidivrs
adc
sbb
lds
add
mov
add
mov
mov
out
inc
add
mov
xchg
xor
mov
cmp
lods
scas
or
addb
addr16
pop
pop
loope
rolb
outsl
mov
pop
mov
cmp
sbb
into
mov
xor
inc
xlat
test
test
add
mov
push
sbb
fdiv
call
into
jne
add
stos
push
fucomip
mov
dec
test
movsl
pop
ljmp
jo
push
add
add
lcall
mov
add
push
add
pusha
add
mov
add
add
mov
add
outsl
add
add
testb
add
insb
lods
jnp
add
xlat
pavgw
jl
add
add
fstpt
push
xor
add
inc
add
jns
add
add
inc
in
stc
cmp
nop
add
fsubl
add
mov
add
add
add
fwait
jne
push
cmp
rolb
inc
add
sub
cmp
pop
cmpsl
inc
add
mov
fcomps
add
add
mov
add
mov
lret
les
adc
adc
jmp
ja
in
repnz
inc
add
add
outsl
popa
imul
rep
pop
push
add
inc
mov
cmp
adc
push
lods
mov
xchg
add
sbb
lret
call
add
iret
sub
push
add
dec
mov
insl
pop
adc
jmp
add
into
das
mov
push
inc
add
nop
add
int
add
add
lahf
int
add
add
or
aaa
mov
mov
jl
testb
add
add
mov
add
add
add
lods
and
out
jecxz
cmp
add
add
inc
inc
add
pop
fmuls
outsb
cltd
sub
sub
int
repnz
add
lea
add
push
add
add
push
xor
add
jae
xchg
int3
push
add
jle
lret
lret
pop
rolb
sbb
jae
lods
imul
mov
lds
mov
cmp
push
add
add
movsb
add
or
sub
cli
sbb
or
add
or
add
pusha
add
das
inc
add
add
xchg
add
shl
add
add
xchg
repnz
add
inc
add
add
mov
stos
int3
call
insl
gs
loope
int3
pop
xor
jae
sbb
add
mov
sub
pop
cmp
mov
xchg
add
mov
cli
aam
push
mov
aas
stos
popa
mov
out
lcall
add
mov
push
lcall
rolb
loopne
mov
ret
repnz
sar
mov
jae
outsl
dec
ficoml
or
movb
cld
call
rolb
jne
cwtl
pop
pop
addr16
mov
fnstenv
xchg
nop
add
add
fsubl
std
lods
mov
mov
add
sub
push
add
fdivr
das
lahf
add
rolb
push
mov
or
add
add
movsl
cmp
scas
xchg
add
add
dec
pop
shld
flds
add
add
and
dec
xchg
mov
sti
mov
cltd
dec
or
mov
mov
jns
mov
out
mov
xchg
stos
and
or
mov
add
xchg
shl
add
mov
mov
add
es
jno
add
add
mov
add
add
add
and
mov
stos
and
mov
loop
cmp
leave
add
pop
inc
pop
lret
sbb
ja
pop
cld
sub
xchg
fstpt
movsl
mov
add
dec
hlt
add
test
push
add
jae
push
imul
stos
sahf
das
pop
inc
pop
xor
add
ficomps
clc
fs
add
add
jb
cmpsl
pop
add
fcmovne
inc
mov
push
insb
mov
rolb
add
jge
stos
mov
addb
ficomps
mov
inc
add
loop
std
sbb
fnstsw
add
lahf
dec
scas
outsb
jle
xor
xchg
add
int
bound
mov
fbld
add
mov
add
iret
dec
jle
dec
pop
in
add
jle
and
lahf
cmp
aas
lcall
cli
mov
add
xor
aam
jno
cmc
push
add
xor
xor
scas
adc
cmp
mov
add
in
mov
mov
stc
test
add
add
add
std
sub
xchg
lret
xor
mov
dec
adc
add
inc
add
add
shr
add
add
in
sub
cmp
jns
movsl
or
push
mov
adc
mov
xor
mov
push
add
outsb
inc
add
roll
mov
add
mov
add
or
insb
sti
sahf
ds
lods
movsl
out
out
add
lea
add
push
xchg
sub
test
jb
pop
test
or
jae
inc
add
ss
fistpll
push
add
test
push
add
out
and
and
mov
add
pop
jmp
sbb
repnz
mov
loopne
mov
dec
mov
clc
inc
add
mov
jle
sub
pop
xchg
jecxz
imul
add
add
pop
pop
stc
push
addb
jle
inc
add
xchg
add
pop
xchg
add
repz
stc
out
lahf
pushf
add
add
add
add
addb
add
and
repnz
add
enter
out
mov
out
lods
pop
jae
add
cmp
lods
fdivrl
inc
add
and
mov
push
jne
sbb
pop
loope
xchg
fwait
testb
pusha
add
fstl
dec
adc
pop
push
out
pop
in
cmp
insl
sarl
mov
sbb
add
sarl
inc
into
fdivrp
testb
in
in
inc
stos
add
mov
add
jnp
lcall
or
cwtl
aaa
ror
jb
fists
push
add
add
inc
add
popa
add
mov
push
add
add
lods
mov
add
lcall
add
push
add
xor
push
icebp
cmp
add
mov
and
int3
std
sub
or
push
add
push
add
gs
add
test
xchg
add
add
js
jle
loopne
stc
std
xor
sti
lret
pusha
add
mov
push
lods
loopne
lds
add
add
stos
xchg
fsubrl
sbb
mov
add
fisttps
push
aaa
out
rcll
lret
add
jae
dec
and
mov
arpl
cmp
adc
mov
js
push
aam
rolb
lcall
mov
ret
insl
les
cmp
add
add
add
cmp
add
mov
lock
fcomps
leave
and
mov
aad
mov
jmp
push
sub
push
add
add
icebp
or
cmpsb
add
mov
mov
add
mov
fcmovu
fstpl
add
mov
add
ljmp
addb
dec
movsl
scas
psubq
push
sbb
negl
pop
add
add
xor
dec
push
add
dec
jp
add
mov
jp
scas
mov
pop
xchg
add
push
inc
add
outsl
mov
add
mov
add
add
sar
int
cmp
aam
das
mov
pop
fisubrs
push
cmp
pushf
pushl
add
mov
add
pop
xchg
add
testl
in
pop
iret
xor
pop
add
lcall
hlt
add
std
in
dec
jbe
out
cwtl
pop
push
xor
add
xor
daa
test
out
or
xchg
xlat
movsb
add
mov
mov
in
sahf
pop
popf
test
pop
push
dec
pop
fwait
es
nop
add
add
ret
add
das
in
cwtl
sub
aaa
cmpsb
add
inc
add
cmp
add
xlat
rolb
pusha
add
or
repnz
mov
add
add
add
jno
add
add
xchg
add
bound
mov
pop
xor
push
and
cmpsl
xor
data16
add
dec
lcall
push
or
mov
pusha
add
add
mov
jg
les
rolb
sahf
xor
cmp
sbb
adc
sbb
ficomps
dec
or
add
mov
fcmovb
add
xor
mov
pop
or
adc
or
out
lock
add
add
mov
add
into
aad
add
mov
push
sbb
out
mov
addb
add
add
fcmovnu
and
gs
add
push
loope
xchg
add
or
mov
add
test
insl
add
movl
and
ret
imul
cs
pop
mov
out
mov
add
add
pop
sbb
sbb
add
add
add
cmp
add
push
mov
xor
stc
pop
loopne
cmpsb
add
jne
aad
add
add
xor
mov
testb
mov
cmp
insb
bound
mov
xchg
jb
add
ljmp
pop
cmp
nop
add
cmpsl
lret
jno
add
push
add
sub
jl
pushf
jnp
mov
xchg
add
test
out
mov
add
ja
add
and
add
aas
sbb
mov
add
add
add
sbb
mov
add
add
xor
mov
jle
and
test
pop
movsb
add
mov
mov
fwait
sbb
xor
lods
adc
mov
nop
add
stos
out
mov
push
mov
mov
mov
add
add
inc
add
pop
out
fnstenv
loope
push
push
add
add
or
add
aam
mov
out
sub
sub
js
adc
repnz
jns
mov
std
dec
sub
test
dec
pop
push
add
cmpsl
add
movsb
add
cwtl
arpl
clc
mov
je
xchg
inc
add
ficoms
les
pop
dec
mov
add
scas
movsl
or
testb
out
push
add
add
pop
inc
addl
ret
scas
into
xor
scas
push
add
or
xchg
add
add
pop
dec
cmp
addb
mov
add
mov
dec
pusha
add
jb
in
jo
sub
out
fdivrp
cli
loope
add
cmc
imul
fcmovu
sbbl
mov
mov
lret
shrl
adc
mov
add
add
add
jmp
stos
push
add
stos
sbb
add
sub
aaa
add
mov
add
mov
add
data16
add
ffreep
pusha
add
call
adc
cmp
out
leave
addb
add
mov
adc
cmc
pusha
add
push
mov
jb
fucom
add
lds
and
mov
push
and
insl
js
add
adc
addb
add
add
out
cltd
cmp
xchg
xchg
test
fadds
add
add
add
lahf
push
mov
lret
fdivrp
aam
loop
lods
lods
sub
mov
hlt
add
sub
add
std
mov
add
inc
add
add
push
add
ss
cwtl
mov
push
add
fwait
jmp
add
addb
test
and
add
add
jbe
andl
ljmp
add
jge
mov
out
repz
add
adc
xor
cwtl
and
mov
add
add
xor
lcall
out
cltd
push
add
dec
out
xor
add
add
add
inc
add
jl
movb
lods
jge
jmp
add
shll
add
cmp
nop
add
icebp
sbb
jl
add
add
mov
xchg
add
cmpsl
xchg
add
push
add
lret
std
pop
ret
stc
loopne
movsl
pop
ret
jge
xor
add
repz
mov
add
int3
sub
add
nop
add
mov
push
mov
rolb
iret
xchg
jecxz
jnp
add
imul
mov
mov
xchg
fsubl
add
pop
ret
add
mov
int3
cltd
xorl
push
aam
mov
or
add
sub
or
sub
add
sbb
add
rcll
sti
fistpl
imul
add
mov
push
pop
xor
push
add
lds
add
test
add
add
inc
add
mov
dec
insb
mov
inc
add
shrl
add
add
inc
xor
add
popf
mov
add
mov
testb
xchg
push
mov
add
add
movsb
add
int3
lcall
mov
mov
pusha
add
and
stos
mov
add
xchg
fimuls
pop
xchg
sub
jmp
imul
sbbl
push
add
popa
in
and
mov
adc
add
and
pop
push
sub
lahf
xchg
xor
aam
cmp
mov
push
hlt
add
je
lcall
imull
mov
or
mov
cmp
add
fwait
addb
mov
mov
jle
add
sbb
xchg
mov
cmp
sbb
into
dec
sub
mov
inc
add
jmp
rolb
andl
xchg
mov
and
push
jp
mov
aad
ficomps
add
add
add
jp
push
jp
cmp
add
push
pop
sub
je
cmp
jmp
add
xor
add
das
loopne
in
repnz
push
lods
icebp
add
add
add
aaa
std
and
sub
daa
loope
aaa
fidivrs
shr
lea
aam
mov
int3
cmp
rolb
lock
pop
int3
fsubs
out
add
add
add
popf
jns
scas
je
lods
dec
int
add
xchg
add
addb
ds
add
fldt
add
roll
mov
push
cltd
mov
mov
out
or
mov
mov
sbb
pop
out
push
push
out
enter
add
in
jae
push
scas
dec
int
xor
inc
add
mov
add
cwtl
ss
add
mov
pop
jmp
add
addb
cmpsb
add
mov
jmp
mov
add
decb
add
add
mov
roll
hlt
add
pop
mov
ljmp
dec
movsb
add
aaa
sbb
lahf
xor
aaa
jecxz
cmp
cmp
sbb
add
mov
cmp
mov
fsubs
arpl
add
dec
mov
in
in
pop
cmp
add
loopne
dec
rcll
xor
ret
add
xor
sbb
add
jns
cmc
lods
jno
mov
mov
add
sbb
inc
mov
fimull
ret
lock
addr16
add
add
inc
add
dec
add
cld
push
add
cmp
pop
mov
add
cmp
rolb
cmp
add
cmp
int3
and
mov
out
iret
pop
inc
mov
pop
sub
xchg
and
mov
mov
aaa
push
add
int3
sahf
pop
enter
imul
add
out
jne
ds
pusha
add
add
add
dec
sub
add
loope
popa
mov
inc
inc
add
inc
add
cmpsb
add
sahf
inc
mov
repz
jmp
sub
stc
lret
lahf
push
add
mov
xor
or
and
mov
add
xchg
rolb
push
add
xchg
int
add
xor
xchg
add
push
add
mov
mov
pop
icebp
mov
inc
ret
lock
dec
mov
rolb
jno
add
mov
add
dec
push
cli
and
mov
addb
aas
mov
scas
adc
sbb
xchg
add
pop
mov
mov
rolb
addb
add
fidivrs
pop
pop
pusha
add
push
add
jb
jbe
sub
add
rolb
addr16
and
mov
jnp
cmc
cli
pop
scas
leave
and
mov
mov
add
add
or
nop
add
cmc
insb
jp
pop
enter
add
daa
fldl
js
add
add
jle
jle
mov
add
xor
jo
mov
icebp
push
add
add
js
add
add
adc
xlat
mov
lcall
jae
add
das
out
jge
iret
shll
add
add
loop
cmpsb
add
xor
add
mov
add
fildll
cmpsb
add
testb
add
add
daa
mov
aam
cli
std
mov
or
mov
sbb
fs
sbb
sub
add
dec
imul
add
add
mov
add
add
in
add
mov
rolb
out
xchg
add
test
add
lret
or
lret
add
aas
movb
push
mov
cmp
and
loope
add
loopne
jne
sahf
repz
mov
pop
movsl
test
add
cs
add
dec
in
or
mov
sbb
and
add
mov
adc
jg
add
xor
imul
add
pop
test
push
fisubrl
cmp
cld
outsl
cmc
stos
ret
cmp
cmp
or
and
pusha
add
imul
xchg
repz
sub
mov
add
add
adc
add
dec
and
mov
jmp
inc
add
add
add
add
mov
out
sahf
jmp
cmp
movsl
and
mov
and
xchg
add
mov
xchg
ds
cmpsb
add
add
add
mov
in
lds
cmpsb
add
je
fistl
add
add
add
mov
mov
addr16
xchg
addb
adc
pop
mov
fnstenv
rolb
fisubrs
mov
sub
mov
add
mov
mov
mov
sbb
scas
imul
add
add
dec
lcall
data16
xchg
cwtl
push
add
xchg
in
dec
mov
xchg
fmuls
jbe
ss
add
les
xchg
add
lret
movb
lock
mov
pop
jno
add
add
dec
movsb
add
mov
mov
jecxz
les
mov
cmpl
sti
push
cwtl
sbb
add
add
add
add
aad
add
pop
out
adc
and
mov
cmp
mov
mov
inc
add
mov
fstpl
xor
pop
sub
cmc
sbb
add
and
add
push
add
nop
add
popf
and
out
sbb
test
add
mov
mov
xor
pop
movsl
mov
jmp
add
push
dec
inc
sub
mov
mov
push
add
pop
je
popf
lcall
add
add
cmp
add
jno
add
ret
mov
jns
jae
mov
add
sub
and
fdivp
roll
stc
mov
add
add
add
push
mov
cmp
add
xchg
add
mov
jno
lcall
fcmove
dec
mov
add
xchg
mov
mov
add
aas
insb
or
cmp
setnp
jle
add
add
iret
sahf
cmp
add
addr16
test
add
pop
sbb
sbb
add
push
add
sbb
or
loope
add
dec
xchg
add
out
data16
or
jp
imul
ficoml
xor
mov
adc
add
sbb
and
mov
add
cs
mov
leave
xchg
pop
cltd
jb
les
addb
add
xor
xor
and
mov
pushf
xchg
in
in
and
add
add
push
mov
data16
add
addb
add
scas
sbb
add
arpl
lret
loopne
cmpsl
xchg
jecxz
add
lods
mov
call
jb
push
add
lods
stos
add
imul
add
mov
jne
add
hlt
add
sbb
popf
std
jne
cmpsb
add
add
add
add
outsl
out
mov
push
add
fimuls
push
add
add
cmp
dec
cmp
inc
test
cs
and
mov
cmp
mov
mov
jbe
push
pop
repz
add
subl
mov
add
int
sbb
mov
mov
clc
rolb
les
add
mov
test
add
add
inc
add
scas
arpl
and
mov
lock
add
out
lock
add
sub
or
fs
repnz
add
push
pop
and
dec
and
sti
mov
fldt
xor
add
sbb
add
jmp
add
mov
leave
bound
mov
sbb
jp
and
inc
add
dec
iret
rolb
fisubl
mov
pushf
inc
add
add
in
call
bound
mov
sub
dec
shrl
ljmp
add
fidivrs
pop
add
data16
fstl
jbe
ljmp
push
add
imul
negl
pop
add
add
into
and
mov
mov
dec
scas
repz
add
sub
jle
enter
jmp
add
les
and
mov
mov
push
add
rolb
lods
testb
add
inc
add
jbe
mov
add
mov
mov
xor
out
pop
out
pop
or
jle
pop
rolb
ss
add
insl
or
add
mov
fndisi(8087
mov
jbe
loope
cmpsb
add
jmp
addb
insl
mov
movsl
out
mov
in
and
daa
dec
ret
inc
jp
add
fwait
lea
add
aad
jnp
mov
add
lret
mov
pop
sbb
rcrl
inc
add
xor
imul
xor
mov
fisubrl
leave
lahf
test
sub
mov
in
sbb
dec
or
or
mov
add
call
add
add
ret
and
add
inc
add
add
add
aad
add
add
jnp
add
nop
add
add
mov
ss
push
jp
add
lods
ret
sti
outsb
fsts
clc
add
add
add
add
add
pop
fstps
movsl
mov
rolb
or
add
add
adc
pusha
add
sbb
out
test
movsb
add
add
pushf
dec
sti
outsl
shll
push
add
jbe
xor
loop
ds
add
add
mov
in
nop
add
addr16
lret
lock
xchg
jp
inc
jo
or
mov
push
xchg
add
inc
add
sbb
adc
add
mov
imul
jl
add
aas
data16
call
test
inc
add
mov
pop
push
add
add
rolb
rolb
rcl
jmp
das
push
add
stc
outsb
in
pop
jnp
lods
ljmp
add
mov
xchg
add
add
mov
push
add
add
jle
add
add
add
sbb
lcall
xchg
rolb
stos
add
stc
mov
fnsave
add
push
pusha
add
dec
adc
push
cltd
mov
jns
clc
movb
add
and
mov
xor
testb
add
mov
push
pop
cs
ret
popa
push
add
sbb
jo
push
test
add
add
js
add
mov
popa
xor
jnp
lcall
add
add
xor
mov
mov
ret
xchg
testb
adc
lret
insl
fsts
xchg
scas
inc
hlt
add
adc
sub
sbb
add
cli
inc
add
jne
fildl
mov
mov
rol
icebp
xchg
add
jecxz
jbe
mov
out
adc
mov
add
ja
sahf
pop
inc
dec
sti
out
ja
push
add
add
add
cld
fidivl
insl
and
mov
add
aam
xchg
add
pop
ret
shl
cmpsb
add
push
pop
in
cltd
insb
in
cmp
jle
loopne
cwtl
inc
mov
enter
mov
imul
fsub
out
divl
fidivs
jb
and
mov
add
add
add
sti
pop
sub
jno
push
mov
pop
fsubrs
add
sub
inc
fistl
std
xchg
jne
xchg
add
dec
ja
les
adc
add
and
xchg
imul
ljmp
push
and
add
xchg
add
mov
and
mov
popa
mov
sub
add
mov
push
jmp
add
daa
mov
fstps
sbb
movsl
sub
add
lcall
sub
add
in
sub
popf
mov
xchg
add
das
gs
sub
fwait
mov
and
mov
rolb
movsl
outsb
mov
in
rolb
lods
hlt
add
jle
jo
in
pushf
xor
sub
add
aad
push
inc
pop
or
mov
rolb
addr16
idivl
je
or
add
int
add
icebp
shl
adc
test
add
movsl
pop
or
cmpsb
add
add
iret
adc
lahf
rolb
jmp
or
outsl
outsb
push
mov
add
add
pop
arpl
lods
mov
fldl
add
xchg
cmp
pusha
add
outsb
mov
add
loop
push
xor
add
add
fsubl
and
add
or
fcoml
aaa
push
add
and
add
stc
mov
add
fistpll
aas
add
add
jg
sbb
add
add
add
in
push
add
das
lret
pop
xor
outsl
test
dec
sub
dec
bound
mov
mov
imul
dec
pop
lds
add
jne
xchg
inc
add
fmulp
cmp
push
aam
and
mov
add
mov
add
jmp
loopne
sarl
add
add
add
or
sbb
jnp
sahf
mov
mov
pop
pusha
add
loop
add
mov
movsl
test
add
add
inc
ds
add
mov
add
add
jle
add
sub
adc
jg
jb
xor
inc
mov
add
addb
lock
nop
add
sub
pop
frstor
mov
mov
outsb
add
iret
mov
stos
sti
adc
mov
sub
loop
stc
xor
lods
mov
rolb
inc
mov
insl
jg
cld
outsb
xlat
addb
int3
sub
or
iret
or
cli
fwait
sbb
out
add
scas
cmpsb
add
add
addl
mov
add
add
in
fidivrl
cld
sub
jns
fmull
std
enter
pusha
add
add
xor
sbb
add
lock
mov
mov
test
cmp
push
jbe
out
in
js
imul
add
enter
ficompl
xchg
jge
add
mov
fadd
add
push
add
jno
fcompl
ret
mov
push
add
sub
push
loopne
cmovp
pop
add
insb
pop
repz
push
nop
add
add
mov
add
add
rolb
push
add
out
cmp
inc
add
rolb
outsl
cmp
ljmp
add
outsb
lock
pop
icebp
test
mov
clc
leave
ret
mov
xor
add
repz
mov
out
xor
mov
cmpsl
les
cmp
je
rolb
add
add
jnp
add
sbb
xlat
fcom
adc
ljmp
fcompl
mov
sti
sub
add
xchg
stos
mov
ds
add
xor
mov
in
ja
xor
dec
cmp
push
lods
inc
lods
pop
js
xor
lods
testb
add
mov
inc
shl
mov
sbb
pop
in
incl
add
lcall
dec
adc
cmp
fdivs
ret
pop
xchg
fdivr
xlat
mov
add
xor
add
add
arpl
push
add
jmp
add
and
mov
xor
push
add
push
cli
cli
test
fwait
decb
dec
sahf
hlt
add
add
add
adc
dec
mov
add
in
mov
add
iret
sbb
repz
das
cmpsb
add
addb
int
dec
hlt
add
call
std
and
xchg
add
xorl
add
push
add
rolb
rolb
sbb
mov
mov
outsl
out
stos
mov
inc
add
add
xchg
add
push
add
add
fnsave
add
add
rolb
mov
add
inc
add
icebp
sbb
sub
xor
add
test
add
mov
dec
pop
or
mov
add
jp
addr16
cmp
sbb
inc
add
lea
test
mov
jae
add
add
xor
pushf
popa
sub
push
inc
add
add
add
insl
aad
fcompl
mov
sahf
pop
aam
adc
je
mov
movb
sti
mov
dec
out
inc
imul
jle
lahf
in
in
jo
xchg
add
loop
mov
aas
scas
push
add
add
out
sub
add
mov
repnz
add
add
or
roll
adc
and
mov
lods
jmp
fidivrl
sbb
sub
shll
jae
add
inc
add
jl
mov
add
cmp
add
sahf
push
add
cmpl
add
add
hlt
add
jp
ja
hlt
add
std
imul
jle
repz
sti
cmp
outsl
pop
mov
xchg
pop
loope
mov
add
mov
xor
xchg
xchg
sbb
stos
mov
mov
add
inc
cli
pop
addb
daa
test
xor
mov
mov
mov
push
add
aaa
stc
lds
ret
add
jne
fildll
add
mov
in
out
pop
les
addb
icebp
mov
aaa
cld
dec
sub
add
daa
or
xor
jle
fsubs
add
cld
jg
dec
and
mov
sub
mov
test
add
int3
inc
bound
mov
add
mov
fcompl
mov
push
lcall
rcrl
aaa
test
add
mov
add
cmpsl
out
jns
adc
mov
push
clc
into
hlt
add
xchg
add
out
add
mov
add
hlt
add
loopne
lcall
adc
outsb
adc
add
daa
sbb
add
rolb
xchg
in
rolb
mov
add
fnsave
pop
repnz
out
cmpl
add
push
pop
xor
movsl
insb
inc
call
mov
add
push
pop
test
data16
add
inc
add
out
push
add
sub
pop
loope
inc
sub
dec
js
sub
rolb
lea
add
add
add
mov
js
inc
add
add
int3
adc
and
cld
or
add
fwait
jp
cmpsb
add
or
lret
inc
cmp
into
addr16
lds
add
sbb
xor
addb
test
je
lea
add
push
jg
fsts
arpl
jo
cmp
add
add
rcrl
pop
aas
mov
add
and
mov
les
inc
add
sub
es
add
iret
repnz
add
sub
insl
fnstsw
mov
cvtps2pi
addl
mov
cmp
add
mov
fmull
adc
adc
jg
into
fdivrl
or
push
sub
dec
rorl
xchg
les
addb
sbb
mov
addb
add
add
add
lret
push
loopne
testb
mov
add
cld
xor
sbb
sbb
add
and
mov
add
add
mov
sub
xchg
add
add
imul
lods
xchg
adc
add
mov
pop
call
ret
jg
add
fwait
inc
pop
ror
sbb
or
movsb
add
xor
pop
addb
lcall
pop
jae
repnz
gs
mov
dec
lret
add
add
add
mov
int3
inc
adc
jge
xlat
add
mov
add
and
in
xchg
nop
add
decl
jne
dec
inc
dec
scas
push
loope
cli
cmp
add
jb
pop
dec
inc
add
pop
stos
jp
aam
jnp
and
mov
mov
cmp
pop
aaa
addl
fwait
add
loopne
pop
pushf
lds
test
adc
pushf
mov
dec
and
mov
mov
fs
sbb
add
add
fdivl
push
add
add
fcmovnbe
gs
jg
add
jp
add
sub
pop
pop
add
int3
repnz
fisttpll
push
add
cmp
add
fnsave
add
testb
or
cli
sub
add
rolb
or
fstps
dec
push
add
mov
movb
sub
je
ficoms
pop
cmp
jnp
rolb
jae
add
cld
in
dec
out
or
add
lahf
pop
add
jbe
or
inc
fwait
add
add
add
aas
dec
scas
mov
add
push
sub
add
loopne
lods
mov
add
and
ret
or
shll
sub
dec
mov
inc
add
fisttpl
add
adc
fsubrl
nop
add
add
hlt
add
das
std
mov
scas
arpl
inc
add
mov
pop
and
mov
xor
add
add
or
mov
fdiv
xchg
add
ret
int
popa
cmp
movsl
sbb
int
add
cmp
add
into
mov
adc
push
and
add
mov
add
pop
xlat
popa
add
mov
mov
mov
arpl
int3
mov
fimuls
push
push
rcrl
inc
jb
cmp
sahf
in
out
ret
add
mov
add
add
jle
mov
jge
mov
das
inc
add
lods
js
nop
add
pop
xchg
in
sbb
jl
pushf
sub
sbb
add
and
add
xchg
mov
xor
pop
or
or
add
sbb
lret
add
stc
shll
lahf
dec
pop
add
add
dec
mov
add
add
add
pop
mov
adc
lcall
scas
das
adc
xor
data16
jnp
sbb
cmpsb
add
sbb
sub
cmp
mov
lods
jb
aaa
jle
push
rolb
xor
push
add
lods
movb
rcll
ljmp
dec
xchg
jno
sti
aaa
push
jnp
add
roll
sub
sahf
mov
push
add
ja
and
std
or
push
add
loopne
mov
mov
or
add
xor
ljmp
cli
sbb
add
mov
and
mov
aas
sub
add
repz
stos
jbe
sub
dec
mov
or
jp
add
sub
int
into
jp
add
add
nop
add
add
add
mov
xchg
fwait
sbb
add
and
xchg
pop
rcl
adc
push
add
jne
add
dec
xchg
push
mov
in
pop
add
mov
mov
mov
decl
dec
jl
je
fcompl
xchg
fwait
unpcklps
scas
lods
xchg
mov
jae,pt
mov
addb
add
mov
arpl
aas
test
sbb
fldenv
mov
add
in
outsl
test
add
add
add
dec
mov
push
inc
add
inc
add
pop
mov
lret
movsl
out
dec
push
add
pusha
add
cmp
add
inc
add
add
pop
cld
xchg
add
pushf
mov
lea
popa
add
mov
jo
iret
sub
add
jge
add
cmp
and
insb
mov
in
add
dec
inc
add
or
push
mov
jl
sub
adc
sbb
jg
or
popf
ja
icebp
ret
shl
in
jge
jecxz
add
pop
mov
cmp
pop
fsubp
add
jle
sub
stos
dec
outsl
fistpl
or
add
stc
mov
pusha
add
test
xchg
add
jo
in
or
adc
in
push
dec
mov
sti
cltd
aaa
and
and
mov
add
iret
out
jae
add
lahf
xor
roll
lods
mov
test
push
mov
push
add
xor
nop
add
ds
add
cmpsb
add
add
mov
icebp
data16
addb
sub
add
mov
jp
add
add
xchg
add
xchg
add
ja
jo
enter
ljmp
je
inc
adc
mov
jge
in
ret
xchg
add
mov
adc
push
add
fxrstor
inc
scas
out
pop
jb
adc
sbb
mov
std
fistps
cli
incl
mov
add
das
add
mov
loopnew
ret
push
add
daa
or
imul
add
iret
mov
lret
jnp
add
adc
adc
add
add
push
and
fstps
add
rcr
arpl
mov
or
clc
sbb
jae
push
test
and
pop
call
mov
testb
add
pop
dec
add
cltd
mov
add
adc
dec
sbb
inc
pop
or
cli
jmp
add
lret
adc
mov
aam
pop
push
add
jnp
in
mov
data16
mov
nop
add
fcoms
mov
in
call
ljmp
inc
add
mov
add
mov
mov
scas
pop
pusha
add
push
add
add
inc
or
add
add
dec
cmpsl
scas
pop
rcrl
aas
pop
inc
add
int3
in
test
add
add
addr16
jne
mov
dec
mov
jbe
addr16
add
add
add
add
pusha
add
push
add
inc
xchg
add
add
jnp
jl
inc
add
mov
inc
add
fistpll
pusha
add
cmpsb
add
add
push
add
mov
mov
sbb
sbb
xor
in
add
push
add
mov
fsubl
add
sub
inc
add
add
loope
add
cs
pop
std
lea
rolb
imull
xchg
leave
lea
add
das
cmp
pop
imul
fwait
sub
std
fistpll
mov
mov
jp
xor
out
sbb
test
inc
add
inc
jne
dec
dec
andl
xchg
mov
add
icebp
dec
xor
pop
addb
dec
adc
mov
data16
push
add
or
add
fidivl
iret
and
inc
add
out
call
movsb
add
add
add
out
jmp
stos
cmp
pop
outsb
push
dec
push
add
fistpll
add
hlt
add
sub
add
add
cwtl
sbb
add
jmp
adc
mov
out
add
mov
add
add
cmp
movsl
cld
add
test
mov
aaa
in
xchg
add
data16
scas
mov
out
push
ret
aas
sbb
mov
cmc
xlat
xchg
jns
pop
scas
xorl
add
add
push
test
in
idiv
mov
enter
test
ret
cwtl
xchg
add
js
add
cltd
jbe
adc
add
cmp
xchg
dec
and
add
mov
stos
pop
pop
jmp
push
mov
mov
cld
fldenv
jmp
add
pop
add
add
add
mov
add
mov
add
jmp
add
add
jne
add
mov
mov
jb
das
pop
inc
add
pusha
add
adc
add
js
add
add
pushf
in
sbb
mov
add
fadd
add
jle
cmpsb
add
mov
dec
jmp
add
jbe
loopne
clc
adc
jl
sbb
add
add
pop
das
mov
mov
mov
add
push
add
add
mov
add
push
addb
add
add
inc
enter
cmp
pop
popf
mov
add
add
or
add
dec
inc
xchg
add
add
add
add
add
mov
add
push
add
push
add
mov
add
jb
mov
mov
aam
jle
out
sub
mov
arpl
jmp
sub
push
xchg
add
push
add
adc
or
add
sbb
adc
pushl
inc
xchg
adc
repnz
dec
jo
mov
add
add
mov
add
icebp
imul
add
mov
mov
add
add
sahf
fstl
push
shl
add
and
mov
pop
sub
dec
jo
stc
test
mov
add
es
scas
fwait
mov
add
xor
mov
add
mov
mov
add
adc
push
add
push
dec
fiaddl
cmp
mov
call
add
cmpsb
add
add
sbb
push
add
test
lret
sbb
add
ret
add
push
add
inc
incb
aam
adc
dec
or
sbb
or
add
sbb
add
add
pop
das
addb
into
add
fcomps
in
test
push
jno
add
mov
outsl
jmp
add
mov
mov
lret
sahf
cltd
stos
lahf
push
dec
emms
pop
jo
adc
cmp
out
xchg
add
add
stos
outsl
adc
js
jle
add
jg
clc
lods
and
push
mov
pusha
add
add
mov
add
adc
sub
loopne
mov
or
jbe
movb
push
add
add
mov
add
jo
frstor
add
lods
int
out
scas
dec
and
mov
add
mov
add
or
push
mov
add
xchg
jg
fildll
add
xchg
add
scas
lret
mov
adc
ret
xor
in
add
mov
pop
test
add
jne
pop
je
loopne
mov
add
pop
in
nop
add
jne
add
lret
testb
add
sbb
mov
mov
mov
outsl
stc
ja
dec
loopne
cmc
fisubl
testb
loope
xchg
add
das
testb
xor
mov
test
out
dec
js
and
pop
cmp
hlt
add
add
and
int3
xchg
cwtl
add
adc
popf
lcall
mov
inc
push
add
mov
divl
mov
in
push
arpl
pop
in
fdecstp
add
add
scas
loop
js
mov
add
pop
mov
pop
pop
mov
cli
aam
sbbl
add
inc
add
or
xchg
add
dec
mov
ds
ret
sbb
cmc
push
add
test
lret
int
sub
out
lahf
push
add
add
inc
xor
dec
push
add
leave
inc
jns
addb
adc
and
mov
xor
pop
out
add
xchg
mov
mov
testb
roll
mov
push
add
inc
add
add
lds
das
aaa
add
mov
jnp
fstpt
int3
sbb
add
mov
cmp
adc
addb
push
add
mov
fstl
add
mov
add
add
add
mov
or
sbb
jo
loope
out
add
jbe
mov
sub
add
add
mov
movsl
cli
testb
mov
in
push
mov
xchg
roll
add
fistpll
and
cli
icebp
pop
push
lahf
jl
out
lods
and
mov
test
xor
sbb
rolb
sti
clc
gs
rolb
sub
jle
test
lods
aaa
mov
mov
push
add
movsb
add
jl
sbb
add
lds
add
jecxz
xchg
add
hlt
add
insl
xchg
xchg
xchg
mov
leave
call
dec
push
clc
in
cs
mov
pop
mov
inc
add
data16
popa
mov
mov
sub
jle
mov
add
pop
addb
inc
jp
jno
push
add
mov
lods
push
add
jmp
add
sti
dec
mov
add
sbb
add
lret
mov
dec
scas
rolb
je
popa
jmp
jmp
xchg
out
test
add
lret
sbb
cmc
dec
cmpsl
mov
je
mov
les
or
add
add
sbb
imul
add
addb
notl
add
mov
adc
cltd
ret
push
add
add
mov
cmp
add
add
jb
jno
dec
jns
fldcw
lds
add
add
rolb
add
xchg
add
add
addb
push
add
add
mov
fsubs
and
mov
lea
mov
int3
jae
sbb
add
dec
movsl
sahf
loopne
cwtl
pushf
testl
or
lds
jl
addb
add
andl
add
lds
adc
push
add
cmp
test
push
or
add
add
addr16
sub
pop
add
cmpsl
mov
fldl
push
movsb
add
movb
add
orl
pop
push
push
add
add
jns
dec
out
test
sbb
jge
add
add
jne
outsb
mov
testb
pop
dec
inc
add
mov
mov
aad
add
add
das
jl
dec
into
enter
and
mov
out
iret
int3
mov
push
add
mov
mov
add
inc
mov
into
js
add
cmp
cmpsl
jmp
mov
add
ret
add
jb
jge
test
add
repnz
and
mov
lds
into
mov
sub
xchg
push
add
sub
and
aaa
ss
das
sbb
imul
add
xor
mov
mov
out
aas
adc
fdivl
dec
cli
mov
nop
add
test
loop
pop
cmp
add
pop
sub
fcmovu
std
mov
test
in
xor
push
add
iret
inc
add
mov
mov
arpl
dec
cmpsb
add
pop
add
aad
mov
mov
add
dec
ret
rolb
testb
jne
dec
lock
test
add
add
xlat
lds
dec
xchg
jl
mov
dec
fadd
jns
jle
and
mov
mov
dec
gs
mov
mov
add
push
add
insl
mov
add
dec
ja
mov
jmp
xchg
add
out
std
outsl
sub
add
add
arpl
rcr
cwtl
jmp
add
add
decl
mov
lret
loopne
xchg
add
popa
clc
lods
push
adc
in
pop
pop
dec
test
bound
mov
adc
stc
adc
ficompl
xchg
repnz
add
mov
dec
jno
add
add
push
add
push
dec
loopne
cld
dec
push
add
cs
cmpsb
add
jbe
in
ja
xor
sar
cld
fisubl
rcl
aas
pusha
add
mov
inc
add
fimuls
lods
adc
sbb
pop
lcall
mov
add
mov
fucomip
test
testb
das
sub
add
push
add
out
fbstp
lret
movsl
inc
add
push
lret
mov
xor
dec
clc
mov
fnstsw
mov
xchg
add
nop
add
xchg
add
dec
or
in
leave
gs
mov
in
mov
adc
movb
add
xor
cltd
jle
adc
lret
cli
lret
or
popa
int
repz
rolb
xor
clc
rcll
int3
pop
add
daa
in
addl
or
repz
sbb
out
das
jb
pop
xchg
add
dec
clc
jg
dec
mov
add
mov
add
add
mov
pushf
loopne
insb
lret
dec
mov
add
mov
hlt
add
add
push
add
test
or
mov
xchg
mov
inc
push
dec
lret
cmp
mov
add
cld
das
sti
xchg
xor
mov
hlt
add
cmp
std
push
add
pop
shll
testb
aaa
xchg
xchg
out
in
jle
inc
add
ljmp
mov
pushf
fdivl
in
xchg
ljmp
jno
add
mov
xchg
add
add
push
add
fsubrs
dec
pop
or
and
sbb
insl
cmp
add
add
or
rcll
adc
pop
sub
and
mov
push
add
add
repnz
xchg
cmp
add
add
sub
add
add
mov
add
and
leave
add
mov
xor
mov
mov
add
aaa
or
add
shl
add
add
fbld
cmp
outsl
adc
or
add
add
xor
cmp
rolb
movsl
mov
and
sbbl
pop
or
and
lcall
push
add
data16
mov
in
mov
add
loope
xchg
pusha
add
hlt
add
je
pop
int3
mov
dec
push
xchg
repz
int3
inc
inc
add
or
sahf
ret
inc
mov
dec
mov
leave
sbb
lock
add
fidivs
xchg
push
add
sti
pop
sbb
int3
cmpsl
insb
lahf
cwtl
and
jns
add
lods
cltd
ja
cli
mov
xor
add
push
js
sub
push
add
add
pop
sbb
jne
call
and
mov
movsb
add
fwait
xor
pop
leave
movsb
add
add
add
pop
pop
iret
insb
je
mov
pop
mov
pop
adc
jnp
mov
xchg
add
dec
pop
scas
dec
iret
sahf
outsb
xor
xlat
pop
mov
xor
int
mov
dec
push
xchg
fistl
or
add
add
ficoml
sub
leave
fistpll
and
add
stos
jmp
add
or
and
mov
adcl
mov
push
ret
and
mov
inc
repz
sub
cmp
or
sbb
mov
cmp
loopne
scas
loop
lds
add
add
xchg
je
in
add
add
int3
les
cwtl
outsb
push
add
inc
add
cmpsl
push
sbb
xchg
add
mov
pushf
lcall
mov
adc
xchg
add
fistpll
mov
les
test
sti
shll
add
add
cld
test
mov
nop
add
or
add
push
into
sub
cltd
push
add
add
add
mov
mov
add
in
in
imull
mov
lret
inc
add
cmc
dec
pop
jo
sbb
cwtl
or
add
add
stos
jb
sub
in
jg
add
ljmp
std
sub
xchg
add
mov
ret
cmp
push
add
add
jg
mov
push
push
addb
js
pop
fildl
jmp
pushf
adc
pop
cltd
and
mov
cwtl
sub
loop
movsl
inc
mov
insl
xchg
add
loopne
xchg
push
add
fidivs
push
add
outsl
adc
add
sub
push
insb
lods
xchg
add
add
add
pop
lcall
add
mov
add
mov
fmull
sbb
dec
push
mov
data16
jae
add
enter
add
add
add
mov
add
add
add
add
cmc
sbb
mov
pop
add
jg
add
add
add
dec
push
add
add
out
pop
sbb
movsl
xor
add
ret
add
stos
fwait
test
inc
add
xchg
add
shr
mov
popa
cmp
add
and
mov
inc
add
int3
lahf
adc
xchg
jmp
add
add
add
rolb
jge
popf
call
xchg
popa
dec
pushf
sbb
and
mov
add
add
pushf
fsubl
addb
cltd
arpl
add
aaa
inc
add
jmp
lods
lret
scas
cmp
mov
mov
mov
add
and
xchg
add
adc
rcrl
pop
pop
test
add
add
mov
xor
mov
add
lods
hlt
add
lahf
xchg
jae,pn
out
add
mov
jns
iret
cwtl
mov
add
mov
xchg
add
xor
jp
sbb
add
stos
or
imul
out
ja
add
add
xchg
cmp
jno
add
ret
out
mov
mov
scas
push
add
add
push
jge
test
loope
sbb
push
add
jmp
add
add
lods
cmp
xchg
jge
add
movb
mov
jg
nop
add
add
sahf
cmp
stos
or
add
xchg
mov
movsl
popf
sub
xchg
mov
add
or
fwait
pop
xor
jg
add
add
add
add
movb
enter
fwait
repz
or
mov
dec
in
rcl
movb
rorl
cmp
sti
lods
mov
add
mov
daa
lcall
push
xor
jbe
sub
mov
mov
add
add
test
out
cli
pop
add
stc
cmp
and
xchg
add
dec
and
mov
out
lret
stos
popa
or
add
mov
add
mov
or
xchg
das
jge
in
inc
add
jecxz
add
insb
inc
sub
lea
add
push
scas
test
sbb
adc
mov
or
add
std
pop
mov
pop
loopne
testb
and
push
add
imul
call
rcll
adc
jae
add
add
movl
mov
add
mov
xor
xor
fldenv
fcmovnbe
xchg
loop
addb
jae
adc
xchg
hlt
add
testl
dec
cs
cmp
fadd
add
jg
and
mov
add
popf
dec
in
in
xchg
add
mov
je
icebp
fcomp
hlt
add
test
add
loop
or
add
add
and
testb
mov
cmpsb
add
add
daa
sub
push
mov
ljmp
add
mov
add
dec
hlt
add
mov
sub
add
lock
add
jge
jb
fcom
add
sti
push
lret
inc
add
add
mov
add
jmp
sbb
mov
or
ret
xor
push
addr16
sbb
add
fisubrl
push
mov
flds
mov
add
testb
add
adc
jbe
mov
lock
fistpll
hlt
add
lcall
mov
mov
scas
cwtl
imul
mov
add
mov
add
bound
mov
ss
int
pop
mov
mov
add
add
daa
outsl
test
fdivl
pop
js
add
pop
dec
ret
fdiv
add
pop
and
pop
or
sub
cld
ret
sub
aad
add
leave
popa
xor
add
or
in
push
lret
cltd
jno
and
mov
rolb
aam
sbb
jne
add
mov
add
add
add
mov
jo
jae
add
xor
jp
mov
imul
or
testb
iret
aad
or
je
mov
mov
testb
movb
fnstsw
out
pop
inc
add
andl
bound
mov
add
jnp
add
addb
add
cmp
rcrl
in
dec
xor
mov
lea
add
add
sbb
cltd
ja
inc
add
xchg
add
mov
outsl
les
test
xchg
mov
add
add
fwait
ret
jmp
outsb
cmp
cmp
dec
in
xor
mov
test
and
add
inc
aas
cmc
push
push
out
testb
add
add
add
mov
movb
jmp
add
out
iret
mov
pop
in
cli
loope
adc
add
add
mov
or
out
clc
bound
mov
and
mov
mov
mov
adc
mov
aam
jb
or
outsb
jae
cmp
jne
xchg
add
add
testb
nop
add
add
add
cmp
iret
and
jo
nop
add
add
cwtl
xlat
cmpsb
add
mov
and
mov
add
cltd
push
add
xor
insb
pop
movsb
add
jne
repnz
int3
and
mov
add
add
add
mov
and
add
add
mov
pop
ficoms
mov
adc
mov
js
push
add
arpl
jge
fidivl
add
push
add
das
movb
inc
pop
fcoms
add
inc
idivl
add
add
xor
dec
push
add
ljmp
addr16
mov
int3
test
xor
dec
mov
add
ds
std
adc
js
add
sbb
push
mov
jae
lods
mov
xor
add
call
xor
rcr
push
cwtl
pusha
add
add
mov
xor
fcoms
add
out
loopne
cltd
mov
mov
pop
pop
jae
shll
cmpsb
add
fnstsw
enter
icebp
imul
pop
dec
ja
mov
popf
pusha
add
add
add
add
lcall
jge
jae
add
sub
add
sbb
daa
in
lret
mov
xor
add
enter
xor
addb
js
mov
xchg
jecxz
add
mov
add
jno
clc
leave
lret
addb
jne
pop
out
loop
push
add
xchg
or
add
add
rolb
jge
adc
and
mov
add
mov
add
mov
xor
lds
sub
add
add
and
mov
add
add
sub
leave
add
mov
stos
pop
cmp
dec
js
mov
outsl
or
sbb
outsb
jle
mov
adc
ja
aad
stc
iret
cmp
aam
sub
call
jp
pop
movsb
add
add
fnstsw
test
add
add
add
mov
addl
iret
fcomps
push
mov
mov
add
add
add
mov
aas
fsubl
xor
mov
popf
push
xchg
loop
fstp
bound
mov
repnz
add
cmc
scas
das
popa
inc
add
in
inc
testb
stc
cltd
add
mov
loopne
jecxz
mov
mov
pop
mov
dec
ja
xchg
cld
mov
jbe
int
push
call
jp
mov
add
inc
add
jmp
add
fisubrs
mov
test
data16
mov
add
mov
xor
mov
cmp
jge
imul
sub
xchg
repz
xchg
add
andl
aam
dec
loopne
je
loopne
push
add
sbb
testl
pop
dec
mov
add
pop
or
pop
mov
sub
add
adc
mov
pop
jecxz
dec
or
sub
fld
imul
imul
add
mov
movsb
add
add
add
pop
rcr
pusha
add
fdivs
cmp
fstpl
add
pop
push
add
add
push
add
add
sub
aam
loopne
cmp
les
outsb
test
add
rcr
pop
xor
ja
inc
add
xchg
add
cmp
xchg
add
add
es
mov
inc
into
data16
push
add
add
dec
sub
dec
jge
stos
imul
or
testl
pop
push
add
pop
mov
int
mov
pop
mov
repz
test
sub
add
push
sub
dec
jne
nop
add
js
add
cmpsl
add
or
nop
add
sub
enter
mov
pop
leave
stc
lods
jle
loop
push
add
push
mov
shll
add
push
js
lock
into
stos
xchg
repnz
add
faddl
add
add
mov
add
lods
pusha
add
mov
mov
push
cld
mov
jae
fdivrp
arpl
jo
dec
jo
fldt
or
sub
mov
mov
lods
pusha
add
add
mov
int3
push
out
leave
data16
push
fdivs
pop
xlat
enter
in
in
dec
adc
and
dec
les
xchg
or
add
push
add
push
push
add
adc
out
out
xchg
mov
add
sbb
mov
test
sub
push
add
jle
xchg
xchg
mov
pop
sbb
add
cmp
add
push
xor
xchg
add
or
aam
dec
lea
imul
repz
add
cmpsb
add
add
lea
jle
inc
pop
repnz
add
add
dec
lock
add
outsb
and
fucom
cmp
pop
pop
arpl
cmpsl
mov
imul
inc
mov
pop
jno
add
jge
add
into
dec
mov
mov
add
flds
adc
xchg
add
add
add
leave
imul
fadd
add
fldt
mov
outsb
jecxz
popf
fiadds
dec
mov
pop
lock
adc
arpl
lods
push
mov
mov
add
test
jl
add
dec
mov
add
hlt
add
stos
das
jge
jo
adc
add
or
mov
add
pop
xchg
cmpsb
add
xchg
mov
inc
add
or
xchg
add
add
add
fsubp
xchg
xlat
push
mov
test
xor
cmp
add
outsl
andl
mov
sahf
repz
lea
pop
sbb
add
popa
mov
pop
test
add
add
aad
add
push
add
add
ja
push
mov
addb
testl
jecxz
inc
add
push
imul
add
jle
into
aad
add
add
or
sub
aaa
out
adc
mov
lret
push
add
add
add
add
add
jmp
add
enter
enter
dec
loop
negl
inc
jg
sub
mov
aaa
sub
xlat
mov
daa
push
cld
ds
add
xchg
stos
add
mov
dec
and
mov
mov
mov
cmp
push
inc
add
jp
add
mov
dec
sti
mov
push
xchg
push
dec
adc
nop
add
fstpt
cmp
add
add
aaa
jns
in
fdivr
xchg
or
add
add
add
add
into
mov
std
mov
mov
jecxz
mov
lahf
dec
push
add
lret
xor
add
xchg
add
sbb
xchg
add
add
or
add
add
dec
mov
add
fmul
sbb
add
pop
cmpsl
or
add
add
or
test
aad
add
out
lcall
add
xchg
call
clc
pop
mov
add
mov
mull
add
add
push
add
outsl
mov
aaa
popa
cmp
mov
testb
lret
fdivr
add
ret
pop
add
jae
add
push
add
add
inc
add
fistpll
inc
add
add
aas
xor
mov
icebp
xlat
push
add
add
lock
mov
add
stc
fldenv
fsubr
jecxz
add
andl
and
xor
cmp
add
inc
add
cmpsl
or
data16
in
sarl
mov
pushf
lock
mov
mov
push
lret
leave
popf
int
in
stc
pop
jb
inc
addb
add
inc
add
add
pop
imul
jns
add
in
cmc
cmpsb
add
add
sbb
and
add
add
add
nop
add
das
shll
add
scas
add
mov
out
add
push
in
push
mov
and
inc
add
add
add
push
jmp
xchg
push
mov
ret
stc
ret
add
in
clc
test
sbb
mov
add
jmp
dec
inc
add
add
add
sub
mov
enter
xcrypt-ofb
cmpsl
insb
jg
test
into
cwtl
ret
mov
out
nop
add
mov
fmull
dec
jne
negl
adc
cmp
scas
int3
or
add
movb
mov
mov
inc
cmpsl
jo
movsb
add
add
add
push
add
add
jmp
mov
inc
fcoml
add
push
xchg
add
bound
mov
add
pop
and
mov
add
add
add
out
nop
add
out
xor
aad
add
lret
add
or
adc
aad
add
inc
add
or
imul
sub
mov
add
mov
addb
dec
test
add
mov
mov
add
dec
sarl
add
push
bound
mov
push
add
sub
add
jmp
add
mov
sti
mov
xchg
cli
jp
pop
mov
add
cmpsb
add
sbb
jns
cltd
adc
add
pop
mov
add
mov
inc
add
xor
add
pop
lods
rolb
in
and
add
add
fcmove
mov
add
add
lock
adc
inc
push
loope
imul
dec
jno
ret
add
outsb
call
mov
adc
test
mov
sti
cltd
lods
mov
sub
in
fcomps
inc
mov
hlt
add
mov
fstp
sub
dec
dec
aaa
sub
test
mov
mov
in
pushl
add
data16
loop
iret
sub
add
int
xchg
add
mov
arpl
ss
enter
add
mov
xor
or
addb
add
sub
add
add
mov
ja
clc
js
and
popl
jge
push
add
fmul
sub
xchg
in
daa
xor
pop
fisubs
add
fcompl
movb
add
js
sbb
or
dec
lahf
push
lcall
sbb
mov
add
add
add
add
mov
add
out
mov
adc
adc
je
mov
xchg
add
lea
add
jb
jbe
lods
pop
insb
mov
stos
filds
sbb
int
add
xlat
mov
shll
insb
adc
sub
xchg
xor
sbb
add
dec
inc
add
icebp
or
add
push
push
add
dec
js
mov
cld
pop
jmp
iret
in
lcall
inc
add
aam
nop
add
adc
mov
ds
xor
jle
add
add
pushf
sti
dec
hlt
add
push
xchg
add
jne
push
add
jne
add
cwtl
data16
jb
insl
std
rcll
add
movb
add
lcall
adc
push
ds
rolb
add
add
mov
rolb
mov
mov
fldl
add
add
add
push
in
dec
test
aam
adc
negl
add
adc
mov
and
add
add
out
dec
cmpsl
test
in
aad
rolb
push
add
pop
ja
mov
pop
xchg
daa
xor
inc
add
leave
or
dec
cs
pushf
adc
int3
and
mov
wbinvd
add
mov
jle
je
mov
or
adc
fstpt
push
add
add
or
mov
pop
xchg
clc
ficoms
insl
pop
cld
push
add
mov
dec
pop
ret
outsl
add
add
add
mov
add
jle
mov
jecxz
and
mov
add
add
pusha
add
pop
mov
push
add
dec
cwtl
js
add
add
add
add
bound
mov
lahf
or
add
xchg
int
loopne
jnp
rolb
clc
jmp
addb
dec
or
add
add
lcall
fdivrs
xchg
add
rolb
sub
call
bound
mov
cli
jbe
jbe
dec
loop
imul
imul
add
fidivrs
xchg
bound
mov
call
and
mov
pop
mov
lea
lcall
jp
dec
mov
add
mov
jne
ljmp
mov
and
add
cltd
pop
call
rolb
decl
shll
rolb
dec
dec
mov
mov
pop
push
add
jp
in
enter
mov
or
add
xlat
sub
cmp
add
and
sbb
jge
sbb
das
or
jb
test
sarl
inc
add
xchg
mov
fistpl
push
test
jae
mov
pop
stos
jmp
movsl
aas
xchg
adc
dec
mov
icebp
sub
xchg
add
sti
fnstenv
xchg
add
add
add
sbbl
stos
adc
inc
add
in
pop
sub
xchg
adc
loope
add
dec
or
testl
push
les
xor
fcomp
aas
dec
jle
pop
and
test
cmp
call
pushf
xor
jp
stos
or
xor
mov
pusha
add
add
add
icebp
lock
inc
pop
mov
lds
sbb
adc
rolb
mov
mov
add
pop
mov
and
or
add
icebp
dec
pop
inc
stc
fadds
cs
dec
and
mov
fisttpll
jnp
js
add
xor
xor
cltd
or
mov
add
mov
ficoml
add
mov
xchg
les
les
sar
or
jns
lds
lods
xchg
add
cmp
decb
add
repnz
fldenv
add
add
std
or
add
cli
sti
imul
sbb
add
add
pop
and
add
mov
inc
add
add
popa
jge
lea
add
add
cmp
and
mov
add
push
add
out
std
rolb
stc
cltd
stos
lret
xchg
add
add
pop
jnp
push
sub
add
mov
add
push
add
inc
sub
xlat
inc
add
sbb
roll
add
add
