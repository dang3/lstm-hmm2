jge
loop
dec
in
in
out
in
out
in
out
in
out
in
in
in
in
in
in
in
in
in
out
in
jecxz
in
jecxz
in
out
in
call
loop
stos
call
loop
or
loop
or
loop
sbb
loop
je
loop
stos
in
in
out
in
in
in
in
in
out
in
out
in
jecxz
in
in
in
loope
in
jecxz
in
loop
in
loope
in
out
in
jecxz
in
out
in
loop
in
call
loop
in
out
in
in
in
loope
in
loope
in
loop
in
out
in
in
in
out
in
out
in
loope
in
in
in
loop
in
in
in
jecxz
in
out
in
out
in
loop
in
in
in
in
in
loope
in
loop
in
out
in
out
in
jecxz
in
out
in
jecxz
in
in
in
in
in
jecxz
in
jecxz
in
out
in
loope
in
loop
in
call
loop
mul
loop
in
loop
mov
loop
cmpsl
out
in
out
in
jmp
loop
push
call
loop
jae
loop
add
loop
dec
call
loop
jecxz,pt
in
in
in
call
loop
mov
out
in
call
loop
xchg
out
in
jecxz
in
jecxz
in
in
in
call
loop
cmp
loop
xchg
in
in
in
in
out
in
loop
in
out
in
out
in
out
in
call
loop
sub
loop
mov
loop
push
jmp
loop
xchg
loope
in
out
in
call
loop
shr
in
jecxz
in
call
loop
insb
loop
in
call
loop
lret
call
loop
mov
loope
in
out
in
call
loop
sub
loop
loop
sti
out
in
out
in
out
in
out
in
loop
in
out
in
jmp
loop
sub
loop
add
loop
jmp
loop
das
in
in
in
in
in
in
loop
in
loop
in
out
in
loop
in
out
in
in
in
in
in
out
in
out
in
in
in
in
in
out
in
call
loop
lock
in
loop
in
out
in
out
in
jmp
loop
and
loop
repnz
in
out
in
call
loop
cld
call
loop
push
out
in
in
in
out
in
in
in
in
in
jmp
loop
mov
loop
in
out
in
loope
in
loop
in
in
in
out
in
out
in
in
in
loop
in
loop
in
jecxz
in
jmp
loop
test
loop
lahf
out
in
loop
in
in
in
out
in
loop
in
jmp
loop
add
loop
inc
out
in
call
loop
out
loop
push
call
loop
scas
out
in
jecxz
in
call
loop
mov
loop
jle
loop
enter
lret
in
jecxz
in
in
in
loop
in
out
in
in
in
jecxz
in
out
in
loope
in
out
in
loop
in
jecxz
in
in
in
in
in
in
in
out
in
out
in
loope
in
out
in
loop
in
jecxz
in
out
in
loope
in
jecxz
in
in
in
loop
in
loope
in
jecxz
in
call
loop
and
loop
sti
jecxz
in
loop
in
out
in
loop
in
jecxz
in
out
in
jecxz
in
loop
in
loope
in
loop
in
loop
in
out
in
loope
in
in
in
jmp
loop
mov
loop
shl
loop
aas
jmp
loop
push
loop
test
loop
in
out
in
jecxz
in
call
loop
call
jecxz
in
loope
in
jecxz
in
in
in
out
in
out
in
out
in
jecxz
in
in
in
out
in
in
in
loope
in
out
in
out
in
in
in
call
loop
jg
loop
cmpsl
loope
in
in
in
in
in
in
in
in
in
loop
in
out
in
out
in
in
in
call
loop
clc
jecxz
in
in
in
jmp
loop
pop
out
in
call
loop
loope
loop
scas
out
in
in
in
call
loop
in
loop
xchg
loop
loopew
in
jecxz
in
loope
in
loope
in
in
in
out
in
out
in
out
in
call
loop
mov
loop
mov
out
in
out
in
call
loop
test
loop
dec
call
loop
in
out
in
in
in
jecxz
in
out
in
in
in
jecxz
in
out
in
out
in
loop
in
call
loop
out
out
in
jecxz
in
call
loop
shl
in
loop
in
out
in
out
in
in
in
loop
in
jecxz
in
jecxz
in
in
in
in
in
in
in
jmp
loop
cmpsb
call
loop
ss
loop
out
loop
in
loop
in
call
loop
out
loop
and
in
loop
in
call
loop
in
loop
in
in
in
in
in
jecxz
in
out
in
out
in
loop
in
out
in
loop
in
jmp
loop
dec
jmp
loop
and
loop
out
loop
mov
call
loop
cmc
loop
in
loope
in
in
in
loop
in
loop
in
out
in
jmp
loop
add
jecxz
in
call
loop
push
in
in
loop
in
in
in
loop
in
loope
in
in
in
call
loop
ljmp
in
out
in
call
loop
push
loop
in
jecxz
in
out
in
in
in
out
in
out
in
call
loop
pop
call
loop
es
in
loop
in
in
in
out
in
jecxz
in
in
in
in
in
in
in
out
in
loope
in
in
in
loop
in
out
in
out
in
loop
in
out
in
loope
in
jecxz
in
in
in
loop
in
jecxz
in
in
in
out
in
call
loop
loop
loop
mov
call
loop
jnp
loop
cmp
loop
mov
call
loop
repz
in
in
in
loop
in
jmp
loop
mov
loop
push
loop
in
loop
in
call
loop
and
loop
dec
loop
in
in
in
in
in
in
in
out
in
out
in
in
in
in
in
out
in
out
in
loop
in
call
loop
jge
loop
dec
out
in
out
in
loop
in
out
in
out
in
out
in
jmp
loop
fld1
loop
cwtl
loope
in
loop
in
in
in
jecxz
in
loope
in
in
in
loope
in
loope
in
jecxz
in
in
in
out
in
loop
in
in
in
call
loop
lahf
loop
in
in
in
in
in
out
in
in
in
jecxz
in
loop
in
out
in
in
in
out
in
in
in
in
in
jmp
loop
and
in
jecxz
in
out
in
out
in
in
in
call
loop
data16
in
loop
in
in
in
in
in
out
in
out
in
in
in
call
loop
dec
jmp
loop
shl
loop
mov
jecxz
in
jecxz
in
loop
in
call
loop
sub
loop
xor
loop
push
in
in
loop
in
call
loop
add
loop
mov
loop
jp
loop
aaa
call
loop
jo
loop
mov
loop
mov
loop
and
loop
push
out
in
loope
in
in
in
out
in
jmp
loop
out
loop
lock
loop
mov
loop
fs
in
loop
in
loop
in
in
in
in
in
in
in
loop
in
out
in
call
loop
repnz
in
out
in
in
in
out
in
in
in
jecxz
in
in
in
jecxz
in
out
in
loop
in
out
in
call
loop
dec
in
in
jecxz
in
out
in
call
loop
push
jmp
loop
jne
loop
mov
loop
sbb
loop
mov
loop
sbb
loop
out
in
in
in
in
jmp
loop
popf
call
loop
xchg
loop
inc
in
in
loop
in
jecxz
in
loop
in
call
loop
pop
jmp
loop
jecxz
loop
loop
loop
jbe
loop
aaa
call
loop
lahf
loop
in
call
loop
mov
jmp
loop
xlat
loop
in
jmp
loop
add
loop
cltd
in
in
in
in
loope
in
in
in
in
in
loop
in
out
in
in
in
out
in
loope
in
jecxz
in
call
loop
int
loop
in
in
in
jecxz
in
loop
in
call
loop
loop
jmp
loop
cld
jecxz
in
call
loop
xchg
in
in
jecxz
in
loope
in
in
in
out
in
jmp
loop
insl
loope
in
loop
in
loop
in
jmp
loop
sti
in
in
in
in
loope
in
out
in
call
loop
sbb
loope
in
out
in
out
in
loop
in
out
in
loope
in
jmp
loop
popf
jecxz
in
loop
in
out
in
loop
in
in
in
jecxz
in
out
in
jecxz
in
jecxz
in
jecxz
in
out
in
out
in
loop
in
in
in
in
in
call
loop
icebp
loope
in
out
in
call
loop
cmp
loop
mov
loop
push
out
in
in
in
out
in
jecxz
in
call
loop
in
loop
out
call
loop
jns
loop
shl
in
call
loop
pushf
out
in
loope
in
loop
in
out
in
out
in
in
in
in
in
in
in
in
in
out
in
in
in
out
in
in
in
in
in
out
in
loop
in
out
in
jmp
loop
in
call
loop
jno
loop
hlt
loop
in
out
in
out
in
in
in
jecxz
in
loop
in
in
in
jmp
loop
loop
loop
movsl
call
loop
lret
in
in
call
loop
jae
loop
shl
loop
jge
loop
dec
out
in
jecxz
in
loop
in
out
in
out
in
jecxz
in
in
in
out
in
in
in
loop
in
in
in
jmp
loop
out
out
in
out
in
jecxz
in
in
in
in
in
in
in
loop
in
in
in
jecxz
in
call
loop
in
loop
ret
loope
in
out
in
out
in
call
loop
cmpsb
out
in
out
in
out
in
loop
in
loop
in
jecxz
in
jecxz
in
jecxz
in
call
loop
cmp
loop
outsb
loop
in
out
in
in
in
jecxz
in
call
loop
pop
loop
in
out
in
in
in
loope
in
jecxz
in
in
in
out
in
out
in
in
in
out
in
jecxz
in
out
in
loope
in
in
in
in
in
out
in
loop
in
loop
in
out
in
in
in
jecxz
in
loop
in
out
in
loop
in
call
loop
jae
loop
inc
jecxz
in
loop
in
loope
in
call
loop
iret
loope
in
loop
in
out
in
out
in
loope
in
loop
in
in
in
jecxz
in
loope
in
in
in
in
in
out
in
loope
in
call
loop
mov
loop
sub
loop
mov
out
in
call
loop
ja
loop
loopne
loop
popf
in
in
out
in
jecxz
in
in
in
loop
in
out
in
in
in
loop
in
jmp
loop
in
call
loop
out
in
in
in
in
in
in
in
loope
in
out
in
out
in
call
loop
stc
in
in
call
loop
outsl
jecxz
in
out
in
call
loop
xchg
loope
in
jmp
loop
xor
loop
jp
loop
pop
out
in
out
in
loope
in
loop
in
out
in
out
in
in
in
in
in
out
in
out
in
out
in
loope
in
in
in
out
in
in
in
out
in
out
in
out
in
loop
in
call
loop
shr
loop
in
loop
shl
loop
jle
loop
push
in
in
in
in
loope
in
out
in
in
in
jecxz
in
in
in
loop
in
out
in
call
loop
mov
jecxz
in
call
loop
cmp
loop
dec
out
in
call
loop
cmp
out
in
call
loop
popf
loop
in
loope
in
in
in
out
in
call
loop
dec
jecxz
in
loope
in
out
in
loope
in
in
in
in
in
in
in
loope
in
out
in
loop
in
in
in
out
in
jecxz
in
out
in
out
in
jecxz
in
in
in
in
in
out
in
jecxz
in
in
in
loope
in
loop
in
jecxz
in
jecxz
in
in
in
in
in
in
in
in
in
call
loop
mov
in
in
in
in
jecxz
in
in
in
loop
in
loop
in
loope
in
loop
in
out
in
loop
in
loope
in
jmp
loop
dec
jmp
loop
cmpsb
jecxz
in
in
in
call
loop
movsb
call
loop
cmp
loop
and
jecxz
in
in
in
jecxz
in
in
in
loope
in
jecxz
in
loope
in
jecxz
in
out
in
call
loop
imul
loop
popf
call
loop
int
loop
or
loop
cmc
in
in
loop
in
in
in
out
in
call
loop
out
in
in
in
loop
in
jecxz
in
loope
in
loop
in
call
loop
sbb
loop
add
loope
in
out
in
in
in
out
in
out
in
loope
in
loop
in
loop
in
out
in
out
in
loope
in
in
in
jecxz
in
out
in
jecxz
in
jecxz
in
out
in
loop
in
call
loop
mov
jecxz
in
in
in
loop
in
jecxz
in
loope
in
in
in
jmp
loop
scas
loope
in
call
loop
and
loop
adc
loop
pop
in
in
out
in
loope
in
jecxz
in
loop
in
in
in
jecxz
in
call
loop
push
out
in
call
loop
dec
jecxz
in
out
in
in
in
call
loop
dec
out
in
out
in
loop
in
in
in
out
in
in
in
call
loop
es
in
in
in
in
in
in
in
jmp
loop
or
loop
loope
in
call
loop
xor
loop
cltd
out
in
in
in
out
in
call
loop
ljmp
in
loope
in
in
in
out
in
loop
in
in
in
call
loop
mov
out
in
out
in
in
in
call
loop
ret
in
in
jmp
loop
es
loop
mov
loop
pusha
loop
in
loop
in
call
loop
shl
loop
and
in
in
in
out
in
out
in
call
loop
lcall
in
loop
in
jmp
loop
sub
in
in
jecxz
in
call
loop
ljmp
in
out
in
in
in
jecxz
in
in
in
call
loop
enter
out
in
out
in
jecxz
in
loop
in
in
in
jmp
loop
and
loop
pop
out
in
out
in
out
in
loope
in
loope
in
loop
in
call
loop
pop
loope
in
loope
in
jmp
loop
fsub
loop
mov
out
in
out
in
out
in
call
loop
out
in
call
loop
in
loope
in
out
in
loop
in
in
in
loop
in
in
in
out
in
loope
in
in
in
call
loop
repz
loop
pop
out
in
in
in
loope
in
loop
in
out
in
out
in
call
loop
inc
out
in
out
in
in
in
in
in
loope
in
in
in
loop
in
loope
in
loop
in
call
loop
sahf
out
in
jecxz
in
jecxz
in
out
in
call
loop
out
loop
in
jecxz
in
jecxz
in
jecxz
in
out
in
loop
in
out
in
loope
in
out
in
call
loop
call
loope
in
call
loop
adc
loop
cmpsl
out
in
loope
in
in
in
out
in
out
in
loop
in
loop
in
call
loop
outsb
in
in
out
in
jmp
loop
adc
loop
and
in
out
in
in
in
call
loop
int3
loope
in
out
in
call
loop
inc
in
in
in
in
loop
in
in
in
call
loop
cmp
loop
fxam
loop
cli
in
in
in
in
in
in
out
in
out
in
in
in
call
loop
loop
aam
loop
fsub
loop
jge
loop
sbb
loop
shl
in
out
in
out
in
loope
in
jecxz
in
out
in
out
in
loope
in
out
in
out
in
out
in
out
in
in
in
in
in
in
in
out
in
loop
in
call
loop
loop
lcall
in
in
in
loope
in
call
loop
cmp
in
in
loop
in
loop
in
in
in
loop
in
in
in
in
in
out
in
loop
in
in
in
loop
in
loop
in
out
in
call
loop
and
in
out
in
in
in
out
in
in
in
in
in
loop
in
in
in
in
in
call
loop
movsl
loope
in
loope
in
in
in
jecxz
in
in
in
in
in
in
in
call
loop
out
loop
mov
loop
pop
jmp
loop
lret
in
out
in
loop
in
out
in
out
in
call
loop
push
jmp
loop
inc
loop
in
in
in
jecxz
in
out
in
loop
in
jecxz
in
call
loop
sub
loop
hlt
in
in
call
loop
lahf
loop
in
call
loop
mov
in
in
out
in
in
in
in
in
in
in
call
loop
loop
mov
in
in
out
in
out
in
loop
in
out
in
out
in
in
in
in
in
call
loop
fsubrp
loop
mov
in
in
in
in
loop
in
out
in
in
in
in
in
loop
in
out
in
out
in
jecxz
in
jecxz
in
in
in
loope
in
out
in
in
in
jecxz
in
out
in
in
in
loop
in
call
loop
and
loop
leave
jecxz
in
in
in
loop
in
out
in
out
in
loope
in
call
loop
fs
in
in
in
jmp
loop
mov
out
in
in
in
jmp
loop
movsl
in
in
in
in
in
in
in
in
out
in
in
in
in
in
out
in
in
in
in
in
in
in
in
in
in
in
in
in
loop
in
loop
in
call
loop
sbb
out
in
jmp
loop
and
loop
xor
loop
pop
in
in
call
loop
mov
out
in
loope
in
call
loop
das
call
loop
sbb
loop
dec
call
loop
jno
loop
mul
loop
push
in
in
call
loop
lahf
in
in
jmp
loop
loop
in
in
in
out
in
out
in
in
in
jecxz
in
out
in
in
in
loope
in
jecxz
in
in
in
call
loop
dec
call
loop
pop
call
loop
cmpsl
loop
in
in
in
jecxz
in
in
in
in
in
in
in
jecxz
in
call
loop
or
loop
dec
out
in
out
in
in
in
fimuls
pop
dec
inc
add
into
mov
cli
cwtl
shrl
xchg
sub
sbb
loope
xchg
jmp
in
int3
addb
pusha
add
jno
pushl
iret
push
or
sbb
aas
adc
ffreep
add
fdiv
outsl
mov
and
lcall
jbe
push
pop
add
add
notl
lahf
adc
lcall
rcrl
popa
add
mov
jle
xchg
outsl
pop
lods
addb
test
sti
add
and
call
cmp
jecxz
lcall
mov
sbb
xchg
mov
add
fmulp
mov
xor
add
pop
sbb
add
rolb
mov
aaa
inc
add
decb
add
loope
cmp
add
sbb
inc
add
stc
aaa
inc
add
inc
add
adc
ljmp
add
jge
add
add
push
call
add
jle
add
aaa
movl
cltd
mov
add
sbb
mov
in
aad
pop
mov
add
push
cmp
movb
add
mov
lea
and
mov
xchg
or
add
rcl
cmpsl
add
addb
iret
lods
push
aas
dec
data16
ljmp
add
pop
add
ljmp
jns
add
add
sti
stc
xor
adc
call
call
add
jno
lcall
iret
jp
mov
insb
call
add
leave
pop
clc
movsb
add
sub
add
fcmovnb
add
into
xchg
mov
pop
adc
call
push
ja
dec
push
add
pushl
enter
imul
push
add
sub
test
sbb
pushl
decl
into
movsl
add
push
add
inc
add
cli
fldl
add
mov
lods
sub
add
stc
lahf
mov
add
in
push
testb
scas
pop
lds
mov
sub
jmp
add
add
dec
adc
push
test
in
cs
fcoml
sub
out
stos
sbb
mov
add
mov
add
js
leave
test
imull
pop
fiadds
add
shrb
sub
add
sub
mov
push
test
call
add
add
decl
mov
push
add
nop
lahf
sub
dec
dec
arpl
lcall
push
add
mov
add
inc
add
add
cltd
shl
add
jns
pusha
add
cmp
push
add
mov
call
js
add
movsb
add
mov
xor
pushl
jb
mov
pop
stc
in
xchg
repz
add
adc
lcall
dec
dec
add
add
xchg
xchg
enter
pushl
mov
add
cmc
movsl
add
push
add
push
add
clc
inc
add
mov
ja
add
push
inc
add
lods
addb
pop
push
add
mov
add
add
mov
call
lcall
add
adc
add
mov
mov
add
add
add
incl
inc
add
cs
jae
dec
push
add
sbb
mov
test
test
add
insb
mov
add
sahf
daa
add
lods
call
add
sbb
add
scas
testb
push
sub
hlt
into
mov
mov
push
add
xchg
mov
inc
add
gs
sub
xchg
je
add
movl
mov
rol
add
cmp
arpl
call
xchg
rolb
fcompl
cmc
push
add
add
in
int3
add
adc
call
inc
add
add
rolb
add
inc
add
push
popa
add
add
inc
add
jnp
cmc
mov
add
add
add
xchg
loope
mov
test
sahf
sub
add
repz
fcmovu
movl
push
add
cmp
movsl
add
decl
xor
dec
adc
lcall
stc
sarb
adc
pushl
add
add
add
add
add
in
fstpt
add
insl
or
dec
dec
pop
out
cld
add
fisttpl
imul
xchg
cli
xlat
in
inc
add
ret
add
add
sarl
cmp
pusha
add
stc
mov
outsb
fsubl
add
adc
rcrl
icebp
fdivrs
add
jg
add
xor
inc
add
decl
add
xlat
insl
sar
xchg
lods
pop
cmp
mov
jp
cli
addl
add
es
xor
incl
outsb
fstpt
push
add
mov
add
rcl
out
jge
mov
scas
lcall
fwait
xlat
pop
test
pop
les
pop
movb
add
mov
mov
add
mov
fldcw
lcall
into
mov
lcall
pushl
add
add
add
dec
xor
ljmp
add
cwtl
mov
mov
add
cmpsl
add
notb
mov
jne
adc
imul
add
mov
add
fildl
cmp
add
xor
jo
jmp
add
add
pop
ja
daa
add
cmp
xchg
lcall
incl
jle
idivb
je
add
inc
add
enter
add
and
incl
jmp
fnsave
add
inc
add
xor
inc
add
out
dec
mov
adc
fbstp
add
lret
sbb
incl
add
jmp
js
mov
add
add
hlt
or
cmp
stos
push
add
jle
ljmp
add
scas
cli
jbe
cwtl
cld
xor
dec
push
dec
fsubrs
daa
add
je
sub
add
je
mov
add
cmp
pop
sahf
out
pop
in
mov
add
nop
push
into
pop
add
add
push
shlb
add
xchg
sbb
add
mov
xchg
js
mov
sbb
dec
or
std
pop
in
outsl
ja
js
add
decl
add
add
mov
ficomps
jl
fmulp
scas
inc
add
jmp
call
shlb
not
out
mov
mov
inc
add
in
xchg
ret
data16
add
rolb
add
dec
xlat
and
in
dec
add
jmp
test
hlt
movl
sahf
xor
ljmp
incl
add
push
jp
push
xchg
push
push
ljmp
add
push
testb
rcrb
iret
in
pushf
mov
add
push
add
jmp
inc
add
fstl
cli
mov
add
xchg
rolb
idivb
jge
mov
aad
arpl
call
cmp
mov
roll
dec
ret
fdivr
lahf
jo
inc
add
add
xchg
mov
dec
rolb
pop
movb
xchg
je
add
jmp
dec
test
lret
mov
int
add
arpl
pushl
cmp
mov
fcmove
cmp
mov
stc
icebp
addb
add
rcll
add
shlb
sbb
sahf
ljmp
push
add
mov
das
aaa
mov
xchg
loopne
std
pcmpgtb
jp
mov
add
dec
rcrl
mov
fnstsw
add
stc
sub
add
out
push
add
add
dec
pop
ficompl
push
mov
mov
pop
std
imul
add
std
mov
jbe
jb
repz
adc
call
fbstp
push
add
xchg
insl
test
stos
xchg
stos
pop
cmpsl
add
ljmp
ljmp
repz
incl
add
fadd
add
pop
add
add
inc
add
add
dec
cltd
shl
sbb
jo
jmp
add
in
lods
popa
add
xor
call
add
mov
add
dec
add
add
addl
imul
call
mov
or
add
add
arpl
mov
dec
sbb
add
add
lds
or
imul
xor
jmp
add
addb
add
jmp
add
add
cs
add
jecxz
push
add
in
enter
stos
push
jp
imul
addl
mov
add
add
add
ss
xchg
shll
inc
add
cmpsl
add
sahf
xchg
pushf
insb
outsl
mov
and
decl
ljmp
add
add
pop
and
xchg
les
outsb
roll
add
sub
add
mov
sahf
inc
add
pop
push
mov
inc
add
sub
call
shrl
mov
add
add
mov
call
mov
lods
xor
decl
cmpsb
add
movl
sbb
add
shll
add
add
add
aam
mov
add
outsl
scas
xchg
rolb
cltd
cmp
push
add
push
add
add
jns
jb
jmp
add
rolb
add
das
test
int3
scas
filds
lret
push
add
dec
sub
sub
sbb
jmp
mov
pop
pop
inc
add
jo
ljmp
add
pushl
jnp
pop
test
cmpsl
add
ja,pn
add
sub
clc
sbb
add
call
call
add
iret
stc
imul
jo
jnp
ja
add
add
addb
add
add
pushl
repz
add
push
dec
iret
out
shll
add
mov
and
fnstcw
lea
out
mov
add
dec
lahf
adc
rcl
or
add
add
add
jns
add
pop
pop
add
fstps
push
add
mov
cmc
sbb
xor
lcall
push
add
sbb
xchg
push
add
add
incl
add
add
icebp
sbb
mov
adc
out
xchg
mov
inc
add
adc
call
dec
and
dec
mov
les
pop
xlat
pushl
loopne
lea
lcall
nop
mov
movb
add
or
imul
dec
jle
int
dec
popa
add
cmp
add
mov
pop
sub
add
call
push
and
fidivrl
pop
fucomip
lds
add
add
into
cmpsl
add
pop
mov
int3
add
inc
add
incl
in
and
and
lcall
add
aas
and
jmp
add
mov
add
aas
sbb
add
jmp
add
loope
stc
popf
aad
cmp
das
rolb
add
insl
cmpsb
add
mov
pop
add
inc
add
xor
push
add
ja
testl
pushf
push
popf
mov
add
movb
adc
jmp
add
or
add
test
mov
add
cmpsb
add
addb
jns
sbb
ret
add
cmp
add
sub
add
or
and
decl
les
repz
mov
or
jno
call
xchg
ljmp
push
roll
add
or
adc
pushl
add
dec
jle
jnp
add
cwtl
xor
call
shll
lret
cld
flds
ljmp
incl
add
or
add
xchg
stos
leave
in
mov
push
sub
aad
add
xchg
dec
bound
call
mov
add
add
sbb
jo
decl
cmpsb
add
xchg
loop
addl
push
out
imul
sbb
das
add
add
pop
test
sub
sbb
xchg
inc
add
add
addb
xchg
loopne
inc
add
aam
lret
addb
dec
xor
mov
xor
push
fs
add
mov
add
push
int
cmp
movb
add
add
pushl
xor
or
jmp
add
add
xor
incl
sbb
call
jmp
add
add
test
stc
sbb
mov
popf
pusha
add
push
jnp
add
rolb
push
push
jecxz
pop
push
add
mov
add
outsl
rcl
cmp
lea
add
mov
xchg
insb
aad
pop
inc
add
adc
cmp
add
xor
mov
mov
cld
cmp
xor
incl
xor
jmp
pop
mov
cmp
movl
sahf
pop
xchg
dec
fistl
mov
fadd
add
cmp
xchg
adc
decl
lahf
jmp
and
ljmp
push
dec
cwtl
xor
inc
add
loope
jb
jmp
push
add
push
sub
repz
mov
sub
push
push
push
call
test
jne
push
push
call
test
jne
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
ret
lcall
pop
loope
int
je
add
fdivl
add
mov
xchg
test
or
add
inc
add
movb
sub
mov
push
add
int
add
jmp
test
add
sub
scas
sbb
aaa
cmp
add
aad
mov
fidivrl
aas
pop
popf
pop
jno
call
rolb
and
shll
fnsave
inc
add
sbb
sbb
add
add
pushf
popa
add
aaa
or
add
pop
sbb
add
add
push
pop
adc
call
mov
add
cld
mov
scas
mov
add
jp
or
mov
call
adc
jmp
decl
imul
xchg
dec
shlb
out
jno
jmp
add
add
add
dec
push
add
insl
add
jmp
xor
incl
rcrb
roll
ljmp
jmp
jg
xor
jmp
imul
push
ss
mov
pusha
add
jl
mov
add
add
pop
inc
add
add
sbb
adc
call
xor
call
add
aas
adc
add
dec
stos
adc
fldlg2
push
fwait
test
jae
lcall
jmp
stos
jbe
mov
xchg
std
imul
cld
cltd
inc
add
imul
add
add
xchg
jne
add
sub
dec
mov
add
movb
add
test
in
xor
decl
lahf
or
sub
ja
sahf
sub
pop
repnz
add
addl
add
xchg
cli
mov
jmp
imul
add
cmpsb
add
push
adc
dec
cs
repz
fwait
or
mov
stos
sbb
pop
mov
out
ret
sbb
add
lcall
jb
cmp
decl
add
push
add
add
repz
lock
add
cmc
xchg
xor
ljmp
add
xor
add
mov
push
add
add
add
and
jmp
mov
mov
add
jns
ficoml
dec
inc
add
mov
mov
add
out
mov
sbb
mov
add
jmp
dec
inc
add
repnz
add
mov
lret
pusha
add
outsl
in
xor
call
incl
or
aas
lahf
pop
into
jns
pop
xchg
add
jmp
cmc
cli
iret
icebp
addb
add
mov
add
pop
push
fadds
incl
push
xor
test
jbe
pop
xor
call
out
fbstp
mov
add
aam
xor
outsl
roll
mov
dec
movl
decl
cmp
pushf
sub
xlat
cmp
dec
xor
add
and
lcall
sub
add
les
inc
add
add
add
daa
add
out
cmpsl
add
add
adc
decl
dec
add
add
sub
or
push
movsl
add
das
jl
fdivr
jp
aas
in
jmp
add
inc
add
mov
decl
movb
add
or
mov
mov
jnp
jl
add
ljmp
cmp
inc
add
add
in
mov
add
inc
add
add
jmp
add
add
fidivs
add
in
mov
loope
adc
push
addr16
sbb
fsts
jo
mov
aaa
mov
popf
sti
lea
jmp
add
add
decl
add
sub
inc
add
cmp
add
jmp
jg
pop
pop
jo
aas
cli
nop
jne
add
jmp
rolb
add
jb
ljmp
lods
sbb
fdivl
mov
mov
add
fisttpll
add
mov
jp
jo
call
decl
in
mov
xor
mov
or
xchg
filds
add
stos
jne
add
lret
push
pop
dec
mov
add
arpl
lcall
xor
jmp
add
pop
out
add
fbld
call
test
add
movl
cltd
cmp
scas
cmp
lea
add
jne
fnstenv
pushl
mov
icebp
iret
xor
ljmp
add
jg
add
cmp
je
add
jecxz
pop
xchg
rolb
push
add
popf
or
add
inc
add
add
xchg
xor
lcall
icebp
pop
data16
xchg
sub
push
add
sahf
icebp
fprem1
dec
loope
dec
js
idiv
mov
mov
add
push
jo
pushl
lcall
push
lods
fldt
decl
aam
pushf
fisttps
bound
jmp
in
lods
push
add
jbe
add
arpl
incl
add
mov
movsb
add
negl
add
test
sarl
add
mov
add
addl
add
insl
cmp
cmp
lcall
add
ljmp
imul
mov
add
push
add
xchg
or
sbb
add
sbb
add
pop
pop
test
pop
push
add
lcall
mov
mov
ret
adc
lcall
pop
jne
xchg
cmp
loop
icebp
xchg
jg
add
lret
les
cmpsb
add
add
ret
add
add
add
add
inc
add
cwtl
push
insl
test
in
je
push
cltd
out
fcoml
xchg
icebp
ja
add
xchg
popa
add
or
shl
add
add
and
incl
add
enter
push
repnz
out
mov
jmp
sbb
mov
add
jb
jmp
add
fwait
hlt
xlat
jl
or
frstor
pushl
add
fsubrs
xor
pushl
bound
pushl
enter
add
xchg
sub
jmp
mov
push
dec
mov
pop
addl
add
jmp
add
lret
add
xor
call
dec
clc
xchg
mov
add
ret
add
add
inc
add
dec
in
or
les
test
ja
pop
outsl
out
test
mov
add
jmp
push
dec
and
incl
adc
fstps
inc
add
jge
repz
add
push
lock
jmp
add
jbe
mov
add
ds
mov
add
fisttpll
xchg
jle
add
pop
out
jecxz
and
mov
mov
mov
outsl
add
add
loopne
je
push
stc
shl
push
inc
add
cmc
loopne
addl
dec
out
iret
fildll
leave
cmp
fwait
mov
mov
mov
shll
xor
incl
inc
add
repz
stc
pop
lret
or
pop
mov
in
xchg
clc
mov
lcall
add
pop
xchg
ds
sbb
add
lock
fdiv
pushf
mov
add
and
jecxz
dec
icebp
pusha
add
add
pushl
and
call
ret
add
adc
sub
loopne
jnp
or
add
dec
and
fistpl
or
add
daa
add
add
rolb
cmpsb
add
cli
pop
add
add
inc
add
jg
add
popa
add
pop
mov
pushl
add
mov
and
clc
jne
add
scas
in
js
icebp
repnz
out
cmpsl
add
dec
out
jns
in
cld
pop
test
addl
xchg
popf
add
mov
ljmp
add
and
ss
add
jmp
cld
in
stos
mov
add
inc
add
scas
mov
ljmp
xor
mov
mov
aam
xor
decl
out
pop
jle
mov
stc
inc
add
xor
inc
add
mov
add
lods
cli
out
sbb
les
call
pushf
add
std
das
pop
sub
add
mov
dec
test
aam
je
or
add
int
daa
add
loopne
push
js
xchg
xor
cmp
dec
adc
fstpl
add
dec
jecxz
pop
add
pop
imul
pop
add
incl
adc
dec
pop
xchg
rclb
add
adc
in
push
cmp
mov
add
das
test
mov
addb
add
add
push
add
add
xor
ljmp
sub
add
data16
jge
add
les
rcrl
add
cld
test
roll
add
add
fcoml
std
clc
pand
add
fbld
pushl
decl
out
sbb
pop
add
add
cmp
dec
cmc
aam
add
pop
jns
add
add
pop
lret
pop
cmp
mov
add
or
add
fcompl
add
test
scas
jle
nop
push
add
add
push
adc
aas
mov
jo
incl
add
fistpl
mov
jmp
add
add
add
add
add
add
add
ss
inc
add
sub
sub
pop
div
mov
mov
add
dec
rolb
add
lods
mov
popa
add
xchg
cmp
add
mov
cld
sub
sbb
and
inc
add
stc
cmp
lods
shlb
add
fsts
jmp
add
hlt
sbb
add
sahf
add
sbb
stc
mov
jnp
add
inc
add
add
incl
add
testb
ret
add
add
cltd
movb
add
mov
xor
ljmp
add
add
insl
sub
add
adc
decl
xor
cmp
mov
addl
dec
iret
fcomps
or
add
and
ficoms
adc
lcall
popa
add
mov
mov
jnp
mov
add
xor
dec
dec
xchg
bound
lcall
mov
jnp
in
xor
inc
add
daa
add
pop
or
mov
movl
mov
ljmp
xchg
outsb
cmpsl
add
add
pushf
sti
push
add
push
repnz
jl
add
dec
xchg
data16
insb
adc
add
fcomp
xor
jmp
add
dec
adc
pop
xchg
and
frstpm(287
add
fs
or
adc
mov
call
lcall
cmp
and
incl
add
shrb
push
add
jg
jb
incl
push
xor
mov
sub
add
arpl
push
pop
adc
ljmp
or
add
and
add
decl
add
sbb
mov
add
ljmp
xchg
movl
add
out
insl
in
mov
add
iret
sbb
add
dec
in
sbb
add
rolb
add
cmp
add
cwtl
int
add
stos
xchg
inc
add
mov
add
add
pushl
lcall
ljmp
add
in
mov
add
jge
sahf
int3
dec
adc
cmp
add
jmp
jl
add
or
add
movl
cmp
add
add
repnz
stc
sub
jbe
add
add
cli
and
mov
icebp
data16
add
test
adc
fwait
mov
pop
xor
pushl
add
cmc
add
add
cs
std
jb
jmp
add
jmp
mov
or
pop
push
lret
mov
dec
sbb
add
add
popa
add
out
cmc
fidivrs
sub
add
add
xchg
ja
add
push
arpl
call
incl
add
stos
scas
test
xlat
and
add
jle
jl
add
xlat
jge
shll
add
mov
mov
pop
cmp
pop
push
add
add
test
test
add
ret
mov
call
mov
mov
add
movb
add
int3
leave
pop
std
ljmp
pop
mov
fsubl
add
push
bound
call
add
and
movsb
add
inc
add
test
ret
add
adc
add
jb
lcall
outsl
push
add
push
or
mov
add
call
add
mov
adc
push
lock
sub
jmp
add
add
clc
mov
aas
insb
cmpsb
add
data16
jmp
add
add
sahf
std
jle
ljmp
rolb
add
mov
add
js
mov
add
add
nop
pushf
lret
mov
mov
mov
add
cmc
test
and
mov
mov
add
adc
jmp
mov
push
add
jbe
push
mov
add
push
add
jecxz
call
test
sbb
sub
xor
decl
cltd
pop
pop
add
call
add
addl
jecxz
and
decl
out
repz
add
or
scas
jns
addb
ss
add
ds
add
imul
out
pop
sbb
push
push
cmp
insl
loopne
xchg
repnz
or
jg
int3
mov
inc
add
jno
call
or
lock
add
call
add
aam
add
jb
jl
add
add
adc
jmp
call
rcll
imul
inc
add
and
call
add
pushl
push
roll
add
pop
xor
jmp
add
mov
add
pop
jo
pushl
jl
into
or
add
add
mov
add
mov
inc
add
add
data16
xchg
sti
sbb
add
cmpsb
add
add
dec
inc
add
add
or
push
aam
jb
decl
mov
xor
fucom
add
popf
jle
in
mov
add
add
push
pop
xor
incl
add
add
lahf
dec
lods
jmp
pop
clc
fstl
incl
pushl
popa
add
pusha
add
inc
add
xchg
pop
add
or
lcall
lds
and
fidivl
ret
add
dec
ret
add
add
sbb
or
cmp
or
jl
iret
test
fstps
push
xchg
std
mov
mov
fldenv
add
ret
add
aaa
in
ret
add
xor
ljmp
cld
push
add
imul
sti
mov
add
scas
out
ficoml
add
add
sbb
movsl
add
data16
push
insl
stc
rcrb
push
sbb
add
mov
call
add
mov
adc
push
ja
push
addb
add
xchg
mov
call
add
jbe
ret
scas
mov
inc
add
push
add
int3
popf
call
mov
icebp
inc
add
sub
or
lcall
rol
add
xchg
imul
add
inc
add
adc
incl
add
adc
add
add
and
pushl
push
pop
jnp
add
jns
pop
add
add
mov
add
sti
movb
add
mov
add
inc
add
adc
pushl
xor
jg
test
xchg
push
push
cmpsl
add
add
sub
ja
push
jnp
inc
add
movsb
add
add
cmp
insb
jecxz
test
mov
lods
sti
lret
int
shrb
pop
in
repz
std
mov
pushl
add
ds
xor
ljmp
mov
lods
stc
cld
jno
mov
mov
decl
icebp
mov
add
imulb
cmpsl
add
in
xchg
scas
std
inc
add
add
fcomip
nop
es
add
imul
adc
add
add
add
sahf
in
ja
or
add
pop
add
pushl
add
addl
fists
fnstenv
jg
fnsave
das
inc
add
add
dec
xor
ljmp
ret
lock
jae
lcall
pusha
add
test
add
xchg
xchg
lock
cmpsb
add
cmp
add
fcompl
loope
in
inc
add
mov
or
add
test
cmp
add
jb
jl
dec
and
jmp
jmp
add
add
dec
pop
inc
add
fsubl
add
inc
add
lret
and
sub
mov
add
stos
pop
add
add
jmp
push
and
ljmp
fdivrl
jmp
add
cmp
add
js
fsubl
add
aad
jno
incl
cli
fistpll
rolb
decl
xchg
pop
add
jmp
add
out
inc
add
mov
pop
sub
pop
outsl
loop
pop
stos
idivb
push
pop
repnz
or
nop
jmp
inc
add
aad
incb
dec
lcall
outsb
cmp
add
fidivrs
add
es
insl
ret
jno
incl
scas
add
jo
pushl
or
leave
push
add
movb
add
add
mov
incl
add
inc
add
mov
add
add
cmp
out
and
js
sub
pusha
add
push
xchg
mov
dec
xor
jmp
add
incl
add
enter
incb
outsl
repnz
add
ret
jne
leave
call
adc
lcall
jmp
add
cltd
pop
xor
movl
cld
scas
xor
jecxz
jmp
inc
add
add
dec
mov
add
add
or
mov
fsubrs
mov
add
add
add
push
and
pushl
push
dec
adc
call
dec
cmp
mov
jne
pop
clc
xlat
pop
jb
incl
add
jp
add
add
jmp
js
add
add
addb
add
clc
and
inc
add
mov
cltd
adc
incl
add
or
jmp
les
or
add
xor
ljmp
inc
add
arpl
jmp
sbb
add
push
mov
sbb
popf
mov
test
push
lods
cmp
add
sbb
into
insb
cwtl
fistpll
nop
mov
jbe
mov
ss
cmp
push
xor
fists
add
add
into
jne
scas
jl
add
cmpsl
add
mov
adc
jmp
decl
add
int3
mov
add
adc
pushl
add
sub
sub
add
add
loopne
jle
add
push
add
fnstenv
stos
pop
add
add
cmpsb
add
add
lods
adc
pushl
add
or
push
mov
add
mov
add
push
add
gs
jmp
ret
add
dec
add
lcall
mov
add
cmp
movl
pop
les
push
add
xlat
cs
movb
mov
add
clc
inc
add
add
pop
fmul
aam
add
imul
mull
lcall
add
dec
jl
add
add
out
in
lret
adc
decl
add
add
add
add
cmp
pushl
jmp
addb
add
mov
shr
mov
out
inc
add
sbb
adc
decl
add
ljmp
or
test
jmp
add
xchg
or
dec
mov
mov
out
mov
add
dec
sub
movb
jbe
sahf
add
nop
and
decl
cli
mov
add
push
movl
and
ljmp
lods
leave
scas
push
add
rcl
add
add
pop
xchg
in
sbb
fwait
xchg
xchg
xchg
pop
add
add
add
cmp
ja
add
push
add
sub
rolb
add
daa
add
ja
xchg
lods
xchg
movl
cmpsb
add
add
pop
sub
stos
nop
popa
add
mov
cmpsl
add
test
stc
mov
incl
call
call
ljmp
into
cmpps
inc
add
test
push
outsb
adc
ljmp
cmp
add
test
or
add
add
aam
add
dec
pushf
xor
int3
sub
dec
lret
outsl
hlt
inc
add
in
les
push
mov
dec
cmp
int3
pop
sti
mov
add
fcmove
rcll
xchg
pop
ret
add
add
add
xor
call
xor
incl
incl
fdivrs
add
xchg
addb
or
outsl
into
ja
add
add
mov
decl
sti
es
add
imul
add
add
cs
mov
add
mov
das
cwtl
or
mov
add
add
iret
add
cmp
mov
inc
add
add
lock
inc
add
addb
add
add
or
jns
imul
jle
decl
addb
add
ret
add
add
add
scas
sub
incl
adc
mov
dec
test
adc
jmp
add
cmp
xor
incl
nop
mov
inc
add
add
cmp
fdivrs
mov
dec
dec
cs
loope
xchg
nop
testb
not
int
add
pop
movsl
add
fldenv
add
scas
sbb
add
je
xor
pop
xlat
xor
incl
add
or
add
xor
jmp
pop
ja
push
leave
dec
addl
push
ficomps
pop
xchg
aad
sbb
add
push
mov
add
add
add
add
loop
stos
in
push
out
imul
add
mov
dec
in
inc
add
adc
cld
xchg
mov
sub
jnp
mov
cld
aam
icebp
sbb
push
add
add
mov
pushl
mov
mov
jecxz
pop
les
cmp
add
cli
daa
add
or
add
stos
scas
push
add
xchg
or
sarl
inc
add
cli
shl
add
xchg
mov
add
scas
pop
pushf
loop
pop
dec
or
shl
ss
add
mov
jp,pt
add
test
hlt
mov
push
add
jmp
add
add
adc
decb
cmp
pop
test
cld
dec
ret
jg
add
and
xor
js
add
shlb
add
xchg
loope
fcoms
add
ljmp
add
adc
jp
add
out
shll
jo
jmp
add
cld
movsl
add
add
xchg
movb
test
out
add
add
jmp
add
push
add
ja
mov
push
add
pop
es
adc
out
and
sahf
pushf
roll
scas
dec
hlt
rolb
or
add
push
sbb
add
aad
lret
xchg
or
sub
cmp
movl
sbb
fisubs
add
pop
add
int3
outsb
sahf
dec
lret
sub
sti
add
aad
add
jp
push
mov
std
xor
pushl
dec
iret
popf
outsb
lea
pushf
in
add
ljmp
mov
pop
push
scas
jne
addr16
fldl
incl
add
xchg
call
add
add
or
in
push
movb
and
inc
add
add
in
out
outsl
cwtl
xor
ret
add
inc
add
inc
add
mov
add
decl
div
fld
add
add
cmc
add
lcall
lods
je
add
add
add
sub
add
mov
fsubr
out
add
call
arpl
push
lods
daa
add
or
sbb
or
incl
add
xchg
jno
pushl
add
adc
incl
push
push
xor
lcall
scas
dec
lcall
jnp,pt
lret
lea
xchg
adc
decl
add
mov
and
incl
pop
sub
add
jg
push
add
adc
jmp
add
add
adc
jmp
add
jle
add
js
insb
xchg
lcall
jmp
pop
sbb
movsl
add
add
add
jo
call
add
jle
or
repz
imul
rolb
outsb
bound
dec
and
mov
cmpsb
add
ljmp
add
ds
push
in
add
sub
fidivrs
incl
xor
call
test
sub
iret
in
mov
inc
add
nop
mov
add
mov
push
mov
pushl
add
stc
lcall
add
repnz
je
xor
ljmp
add
and
pop
jmp
adc
decl
add
push
leave
addl
dec
xchg
or
add
addl
add
sub
add
cmp
push
sbb
lods
add
std
aas
leave
dec
pushf
mov
add
mov
scas
pop
test
addl
repnz
popa
add
addb
dec
shr
cwtl
push
adc
decl
jno
ljmp
in
mov
mov
push
mov
ffree
add
add
add
stos
cs
ss
addl
addr16
test
add
jne
addb
jmp
sahf
addl
pop
arpl
jmp
add
pop
mov
mov
cmp
fwait
mov
add
lret
and
roll
rcr
test
pop
jle
ret
add
add
cmp
add
aaa
jg
sbb
add
ss
lcall
imul
lcall
lcall
add
add
hlt
xchg
push
add
adc
add
pop
add
push
add
xchg
sbb
xor
and
push
clc
push
addb
sub
add
fsubl
dec
aam
xor
call
add
mov
shrl
testb
leave
bound
jg
or
add
pop
adc
movl
adc
pop
std
stos
lds
test
lds
dec
add
cld
out
lock
cwtl
xchg
sub
mov
pushl
sub
mov
jp
add
pop
add
push
lcall
add
rcrb
lret
loop
int
add
jg
add
mov
inc
add
jmp
call
jmp
lcall
add
push
jo
lcall
jns
enter
aas
xchg
ljmp
rdpmc
add
dec
and
push
mov
xchg
popf
out
sub
cmp
inc
add
das
or
add
adc
call
cwtl
movl
add
test
add
xchg
in
in
xor
cmp
jecxz
aam
pop
sbb
adc
adc
das
sbb
add
jne
iret
iret
fsts
ljmp
icebp
aas
test
push
add
pop
stos
movb
xchg
ret
add
add
mov
dec
and
call
nop
mov
add
add
incl
add
ds
lahf
cltd
cs
and
incl
jmp
add
fisubrs
xor
lcall
mov
test
mov
add
je
add
or
incl
add
cltd
mov
add
add
push
add
or
mov
xchg
or
sti
push
and
jmp
add
cmp
lea
xchg
roll
jmp
mov
add
push
sbb
cmc
push
add
jmp
add
inc
add
push
xchg
pop
test
dec
xchg
jae
incl
inc
add
mov
std
addb
xor
dec
pop
mov
add
shlb
js
in
lret
ljmp
add
or
mov
xchg
mov
push
add
lock
bound
ljmp
add
add
push
adc
mov
pop
add
add
add
inc
add
fsubrl
add
jmp
mov
movb
xor
jmp
push
and
call
roll
and
dec
mov
mov
add
jmp
add
loope
push
and
jmp
dec
scas
jl
add
cmp
add
dec
sub
dec
xchg
pop
xor
loope
jno
inc
add
add
test
sbb
push
add
sbb
aaa
mov
add
pop
pcmpgtd
mov
and
decl
add
add
pop
add
add
mov
dec
or
stc
outsb
sub
inc
add
jl
cmpsl
add
inc
add
nop
pushf
fs
mov
add
add
add
sub
add
pop
inc
add
xor
dec
test
jmp
lcall
insb
les
xlat
addb
pop
xor
inc
add
lret
enter
add
das
mov
xchg
sbb
jle
add
add
lret
add
rolb
add
mov
push
add
push
xchg
filds
pop
pop
push
call
lcall
add
out
adc
lcall
dec
mov
mov
lret
insb
into
adc
call
mov
call
fdivp
int
in
fistpl
add
cmp
add
jmp
dec
insb
mov
call
jb
lcall
adc
pushl
add
add
lcall
sahf
pop
sbb
dec
movl
push
add
jns
jge
icebp
or
test
add
xchg
mov
add
cmp
add
ljmp
xchg
data16
add
add
imul
popa
add
imul
add
out
mov
pop
repz
add
roll
add
inc
add
std
sahf
pop
mov
add
xchg
movl
add
pop
js
push
xchg
xchg
stc
ror
mov
outsl
adc
call
movb
mov
add
or
fimull
pop
fcompl
mov
fisttpll
mov
xor
mov
add
and
incb
scas
cmp
pop
cs
add
push
mov
decl
add
mov
push
push
not
arpl
mov
dec
pop
imul
test
roll
fwait
add
push
mov
add
push
mov
add
pop
sub
add
xchg
call
pushl
jl
mov
ret
add
add
pop
nop
dec
pop
mov
push
add
jns
jne
add
sbb
sbb
addb
add
cmp
add
sbb
sub
push
push
add
add
xor
decl
add
lods
push
push
add
sarl
outsl
dec
mov
and
jmp
decl
int3
in
inc
add
out
jne
cmp
jne
fwait
push
add
in
dec
out
xlat
out
xchg
dec
mov
add
sbb
add
add
adc
cmp
inc
add
add
scas
xchg
lds
std
movsl
add
lahf
cmp
push
add
incl
call
pop
inc
add
dec
lea
add
push
add
daa
add
sub
add
cmp
push
call
add
aaa
popf
or
jle
add
or
std
pop
stos
outsb
popl
add
insb
inc
add
xlat
in
inc
add
lret
imulb
add
sub
mov
add
inc
add
rcl
lods
lret
add
sbb
add
out
dec
cli
lcall
mov
dec
ss
add
mov
sub
pushf
sahf
ja
xor
cmp
call
out
sub
add
add
addb
sbb
mov
imul
fcmovbe
pusha
add
lret
xchg
xor
out
push
sub
push
cmp
ret
add
add
add
enter
mov
out
std
or
add
movl
add
cltd
jns,pn
add
pop
ds
add
dec
cmovs
lea
add
add
inc
add
jmp
pop
add
mov
or
add
les
popf
out
std
loop
cmp
lock
stc
xchg
pop
ret
add
test
test
add
scas
cli
data16
add
mov
mov
leave
cmp
roll
notl
sub
daa
add
dec
xchg
inc
add
mov
arpl
jmp
add
add
xchg
mov
jg
add
inc
add
stos
pop
cld
mov
movl
jno
sti
push
push
outsb
jb
call
in
adc
fldenv
dec
in
push
lds
sbb
sbb
stos
push
pop
add
incl
nopl
add
xchg
sbb
add
test
add
jne
leave
cmp
add
add
mov
add
add
xchg
je
pop
or
add
jne
add
push
add
das
loope
or
scas
jns
add
and
push
stos
mov
xchg
inc
add
add
pushl
add
add
add
iret
pop
add
add
rcrl
add
test
xchg
sub
sahf
lret
xor
cmc
clc
sub
jmp
pushl
add
sub
fists
add
push
add
dec
add
add
and
add
jmp
outsl
pop
add
fistpl
fistps
xchg
mov
ljmp
inc
add
ljmp
fisttpl
mov
stc
push
add
mov
add
call
mov
add
add
inc
add
or
add
dec
dec
push
jbe
nop
pop
int3
test
add
shr
mov
add
and
inc
add
in
xlat
icebp
decl
add
movb
add
push
add
jae
call
cmp
and
jmp
add
les
push
add
xor
dec
cmp
or
in
sbb
les
and
jmp
add
add
lret
cmc
sbb
add
dec
pop
mov
add
and
call
jmp
rcrb
add
in
push
xor
ljmp
add
lahf
sub
nop
fstl
add
adc
incl
add
and
mov
add
or
add
pop
xchg
push
ret
addb
add
fcomp
cmpsb
add
jae
incl
lcall
ret
add
add
push
add
pop
adc
call
cld
enter
add
incl
add
jge
add
pop
movl
js
add
add
add
inc
add
nop
and
ljmp
fwait
cmp
add
std
dec
jbe
add
mov
and
lret
filds
add
movsl
add
dec
bnd
sub
jmp
add
pop
inc
add
in
lea
hlt
addl
rolb
add
cld
movl
sarb
add
or
out
xchg
testb
and
pushl
add
add
or
add
pushl
fs
cmpsl
add
dec
call
cmp
dec
jb
jmp
jge
hlt
pop
mov
jne
push
fists
incl
js
rclb
sbb
dec
mov
add
cld
movb
add
add
cld
inc
add
pop
stos
pop
ss
add
mull
jno
decl
dec
sub
ds
dec
adc
clc
sbb
add
ficompl
add
cmp
cmp
jle
add
push
out
icebp
lahf
stos
sub
data16
ss
jnp
add
add
xchg
and
repnz
add
nop
cmp
xor
jmp
add
sbb
aas
inc
add
sbb
dec
xchg
add
decl
jnp
add
icebp
ret
add
jp
std
cltd
and
call
addb
add
roll
add
add
rolb
mov
imul
stos
inc
add
mov
cld
mov
add
xchg
adc
jmp
call
jmp
add
add
xor
pushl
rolb
icebp
imul
cltd
cli
dec
mov
cltd
fdivr
xor
lcall
pop
add
jle
repnz
jp
add
pop
lcall
inc
add
add
stos
in
mov
add
and
jmp
pop
xchg
lcall
xchg
jnp
add
jl
add
add
enter
add
push
add
mov
push
fimull
mov
add
movsl
add
nop
jo
jmp
call
fisubl
jge
bound
in
push
aaa
cmp
test
pop
movsl
add
fwait
pmulhuw
fwait
adc
call
aas
mov
add
inc
add
out
pop
add
les
movb
je
add
nop
jns
add
add
add
jmp
inc
add
mov
xchg
movb
jo
ljmp
sbb
stos
leave
mov
outsl
rcr
add
jmp
xor
in
imul
mov
add
insl
frstor
decl
cmp
cmpsl
add
scas
imul
push
test
add
rcl
outsl
or
into
jo
decl
cmpsb
add
xchg
mov
imull
add
call
add
iret
push
add
cmp
add
and
call
add
adc
insl
mov
decl
leave
pop
push
fwait
cltd
push
add
xchg
roll
lahf
push
add
lret
cmp
jnp
jns
loope
out
hlt
dec
aas
mov
pop
mov
add
mov
cli
mov
ror
in
cmpsb
add
into
lret
mov
test
push
add
ret
add
mov
jbe
add
decl
stos
out
mov
addb
sbb
decl
call
or
xchg
or
mov
pop
mov
mov
repz
lock
push
add
add
movb
add
jmp
add
or
int3
lret
cld
push
sub
add
call
add
add
cwtl
xor
dec
push
add
push
jne
add
stos
pop
repz
stc
push
cmc
push
add
push
sbb
add
add
push
enter
add
add
jmp
imul
add
add
and
jmp
add
jbe
aam
add
addb
add
jne
add
ljmp
aaa
cmp
add
and
incl
add
add
ja
icebp
insl
out
ss
xchg
inc
add
lcall
loope
jne
mov
add
push
jg
aam
test
mov
scas
fdivrs
xor
decl
jne
add
pushl
xchg
add
sti
ss
repnz
add
adc
popf
scas
cmc
inc
add
add
insb
shrl
sub
add
xchg
dec
xchg
les
xor
call
add
outsb
js
add
aad
shlb
mov
and
mov
add
movb
pusha
add
std
fsubl
mov
pusha
add
dec
pop
mov
incl
add
rcrb
mov
push
je
xchg
xchg
cli
pop
movl
add
call
imul
adc
jmp
cld
lcall
jmp
pushl
add
add
jb
decl
add
out
lods
sbb
add
push
lods
ret
add
add
mov
mov
mov
add
add
fmull
add
add
dec
jo
ljmp
ret
add
or
addl
dec
loop
in
add
sub
add
scas
or
lcall
add
sub
lods
out
add
decl
add
jo
pushl
push
movb
add
add
add
cmpsb
add
add
mov
adc
call
add
push
fsubrp
lock
jmp
add
push
cmc
pop
testb
jmp
add
sbb
add
mov
xchg
sbb
cmp
or
add
cmp
add
cltd
call
in
repnz
sub
add
cmp
add
add
and
decl
pop
cmp
xchg
out
rolb
lcall
add
test
fildll
sub
mov
into
pop
sbb
iret
mov
add
lea
add
dec
pop
pop
mov
mov
decl
add
xchg
push
sbb
cmc
fstpt
add
add
jae
decl
sbb
pushl
add
inc
add
decl
add
cmpsl
add
test
add
pushf
into
movb
dec
lods
imul
out
adc
add
add
and
lcall
imul
rorl
popf
sti
cmc
xchg
mov
outsl
in
sbb
xchg
fisubl
add
mov
test
notb
add
fldz
rorl
mov
lds
or
or
dec
mov
pushf
mov
pop
sbb
cmp
cmp
pop
std
outsb
std
pop
push
add
fistpl
pusha
add
mov
mov
inc
add
cmp
cmp
ljmp
add
push
ficoml
add
lds
sub
adc
decl
sti
das
push
fisttpll
xchg
pop
mov
add
add
mov
jns
add
rol
add
cmpsb
add
push
add
inc
add
add
sub
add
push
add
lods
xchg
xchg
mov
adc
ljmp
cs
add
add
imul
movsb
add
fimuls
xchg
inc
add
addl
xchg
cwtl
les
insl
or
mov
test
inc
add
stos
dec
aam
in
mov
shll
add
mov
push
add
jne
xchg
fs
jae
jmp
movsl
add
icebp
xchg
mov
mov
add
das
js
add
and
cmp
add
icebp
popf
adc
lcall
xchg
int3
ljmp
add
incl
lcall
add
jp
add
pop
jnp
add
inc
add
cld
xor
push
add
addb
push
add
aaa
add
pushl
inc
add
add
add
or
fwait
xor
lock
cs
ljmp
push
addl
mov
shrl
add
dec
stc
sahf
mov
pop
out
iret
pop
outsb
mov
add
fidivs
add
bound
decl
add
jae
jmp
add
movb
and
ljmp
gs
pop
ds
and
incl
add
jge
cmp
add
add
add
jg
decl
or
add
sub
popf
in
ljmp
mov
add
out
and
int
jno
incl
add
notl
jmp
cmp
add
leave
mov
mov
add
loopne
in
push
add
inc
add
mov
call
or
lret
call
or
pop
jo
call
add
jmp
dec
lock
sub
jmp
mov
pop
add
add
in
js
popa
add
pop
testb
lods
fisubrs
add
sti
je
add
jl
sbb
sbb
jb
lcall
movsl
add
lret
push
add
insl
stos
outsl
fstps
ja
add
add
pop
jmp
add
jge
add
scas
scas
push
mov
xchg
lahf
test
cmp
push
adc
aas
ficompl
add
je
xchg
xlat
push
sub
add
cld
pop
push
add
fcomp
imul
cltd
dec
fld
add
add
in
movsb
add
add
jmp
add
les
inc
add
sahf
mov
test
and
lcall
rclb
cmp
dec
add
add
data16
adc
cmp
mov
icebp
dec
sub
add
rorb
cltd
mov
jmp
add
outsb
cmpsb
add
add
add
cmp
in
jg
jg
mov
pusha
add
dec
mov
xor
call
add
mov
outsb
fnstenv
jmp
inc
add
addl
enter
add
nop
and
loope
jecxz
outsb
repnz
loopne
cmp
add
add
jg
mov
dec
test
pop
test
out
fnsave
sub
movsl
add
addl
dec
pop
add
pop
add
sti
inc
add
fs
add
ljmp
xchg
push
das
cmp
popf
ret
add
jg
add
roll
aam
add
push
mov
add
fwait
dec
mov
push
fldcw
decl
add
push
mov
movsl
add
icebp
testb
jecxz
or
or
mov
jae
pushl
xchg
mov
lcall
add
loope
mov
mov
adc
incl
pop
out
sub
add
push
mov
or
add
pop
test
pop
cmp
add
lcall
cwtl
add
call
cmpsl
add
lds
cmp
outsb
cmp
add
lcall
or
jb
jmp
add
add
lcall
test
push
shlb
jno
dec
mov
add
clc
cmpsl
add
dec
addb
add
repnz
jmp
or
js
xor
addb
mov
cmp
call
roll
add
pusha
add
cmp
test
hlt
das
dec
stos
inc
add
mov
call
add
mull
cmpsl
add
add
adc
call
add
daa
add
add
out
sub
add
incl
int
add
or
dec
out
scas
sbb
xor
jl
int3
cmp
add
xor
add
or
cmp
mov
int3
fsubrp
cli
int
dec
loope
dec
ret
add
dec
adc
jmp
add
add
add
cmp
add
sbb
fdivl
add
dec
add
jmp
dec
aaa
icebp
and
incl
add
stc
push
test
mov
lcall
dec
ret
movb
cltd
mov
add
add
jb
incl
incl
pushl
insb
dec
in
lret
lret
add
cmp
addl
mov
ljmp
and
ljmp
push
repz
add
mov
fistps
sub
std
jmp
mov
int3
sub
cmp
lcall
mov
enter
pop
adc
cs
jl
add
mov
add
mov
sbb
dec
sub
add
xor
jmp
add
xor
jmp
add
cmpsl
add
add
xchg
aad
add
sub
add
decl
cmp
add
pushl
add
mov
test
push
enter
jbe
mov
add
or
xor
jmp
add
add
xchg
jne
and
lcall
fldcw
add
pop
xor
lcall
xchg
iret
js
fimuls
jmp
mov
mov
push
add
xlat
jns
mov
jo
ljmp
ret
add
inc
add
or
ljmp
add
add
dec
js
xchg
pop
stos
popa
add
cld
in
pop
xchg
add
jmp
add
pop
lahf
xor
add
mov
mov
dec
fdivrs
add
adc
ljmp
fdivrs
sahf
sub
cwtl
mov
cmp
decl
dec
jmp
xlat
dec
mov
in
ljmp
leave
pop
xor
negb
push
add
movsb
add
add
sbb
push
addl
add
inc
add
movsl
add
xor
jmp
incl
xor
add
imul
mov
add
cmp
fnstenv
adc
pushl
les
xchg
movsb
add
jne
arpl
out
pop
stos
mov
scas
enter
lock
add
pop
cmp
test
loop
sub
dec
clc
dec
mov
add
add
add
cwtl
add
fbstp
movb
cmc
xchg
je
push
add
ja
add
mov
jns
add
mov
cmp
add
add
mov
mov
out
push
enter
add
dec
lret
cmp
push
add
sub
iret
pop
jmp
mov
sub
pop
add
mov
add
push
add
fucomip
in
pop
shrb
add
repz
mov
add
call
add
dec
xor
pushl
add
lock
cmpsl
add
add
mov
mov
push
insb
pop
movsb
add
sub
add
je
mov
ljmp
add
sbb
sub
add
aam
add
mov
add
add
mull
dec
test
inc
add
dec
lcall
add
cmp
sub
add
dec
adc
ljmp
out
addl
dec
popa
add
aam
mov
shl
add
ror
push
add
fsubrs
faddl
add
lret
add
push
sbb
add
add
repnz
and
insb
add
incl
call
inc
add
out
std
insl
lods
add
add
pop
push
test
xchg
add
pushl
add
add
loopne
arpl
jg
add
mov
push
or
add
js
add
sub
pop
xor
ljmp
cmp
movsl
add
add
push
jg
jl
shlb
aaa
cmp
lcall
add
jbe
fimull
push
add
mov
or
mov
dec
pop
add
xlat
mov
add
jl
ret
fucomp
add
mov
add
jns
mov
inc
add
das
das
aaa
sarl
imulb
inc
add
ds
pop
sub
add
movl
in
mov
add
add
pusha
add
insb
popf
fildll
stos
push
push
add
movb
bound
decl
data16
mov
add
dec
dec
add
call
lods
inc
add
lahf
and
inc
add
jnp
nop
add
jle
sbb
jmp
add
and
pushl
dec
cs
add
adc
decl
jmp
add
aas
mov
push
add
add
call
shr
adc
mov
std
fdivr
fnstenv
add
test
mov
cmp
das
movsb
add
add
pop
mov
jns
out
sub
aam
in
mov
clc
ss
bound
fldenv
add
sbb
cmc
xor
add
push
rol
add
pushl
das
popf
cld
mov
jmp
mov
add
sbb
mov
mov
mov
add
dec
xchg
push
pop
add
arpl
ljmp
sub
add
add
int
jl
insb
shlb
ljmp
pop
ljmp
movb
add
cmp
mov
dec
pop
add
pop
nop
xor
lcall
cmpsl
add
add
mov
add
mov
add
dec
and
ljmp
sbb
jg
test
mov
and
cmp
inc
add
pop
adc
add
lahf
repnz
add
add
mov
rdpmc
add
outsl
adc
mov
adc
call
jo
jmp
add
decl
add
cltd
addl
loop
lret
push
out
mov
add
cmp
imul
adc
stc
sbb
movl
adc
call
cmp
test
add
decl
add
mov
add
push
in
je
sbb
pusha
add
lods
cmp
mov
add
pop
inc
add
fwait
xlat
cltd
lcall
or
popf
dec
call
pushl
add
mov
mov
insb
sbb
add
push
add
fwait
insb
jne
push
jg
pop
add
add
jne
add
sbb
pushl
dec
sahf
sti
cmp
mov
pop
add
add
sbb
out
cmp
add
add
jns
int3
icebp
aam
mov
and
xor
ljmp
add
xchg
daa
add
mov
add
lahf
addb
jo
inc
add
jecxz
lds
add
call
pushl
dec
dec
imull
add
and
sbb
xchg
sbb
idiv
push
add
scas
mov
loop
xor
mov
adc
xchg
add
add
lcall
add
in
mov
sbb
mov
add
movl
inc
add
adc
or
mov
fstl
add
sbb
or
test
inc
add
das
sub
pop
push
pop
add
pushf
imul
pop
imul
pop
bound
call
enter
push
jne
pop
mov
add
xchg
ds
out
xchg
enter
sahf
inc
add
mov
add
incl
add
insl
mov
icebp
push
bound
push
adc
in
aas
dec
cwtl
jno
jmp
bound
call
add
sub
jg
std
js
add
into
popa
add
imul
and
push
add
or
popf
cld
cltd
pop
add
fwait
and
outsb
pop
pop
and
jmp
ljmp
add
movl
add
outsb
movsl
add
ds
xor
ljmp
test
or
add
inc
add
add
push
and
decl
ret
add
push
add
add
add
pushf
mov
inc
add
jns
adc
rcrl
lds
popa
add
mov
add
xlat
push
add
add
add
add
add
push
cmp
add
add
inc
add
inc
add
add
add
call
inc
add
push
add
inc
add
imul
cmc
addb
je
imul
call
addb
add
ja
ret
test
or
rorb
movsb
add
cwtl
adc
call
add
push
add
lret
cwtl
push
add
fsubrs
push
push
mov
fnstenv
jmp
mov
and
pop
lods
cmp
add
add
out
mov
int3
mov
add
cmp
inc
add
inc
add
mov
insl
push
add
add
add
call
xchg
cmp
call
add
add
inc
add
add
loope
jp
add
fwait
leave
xor
decl
addr16
mov
add
inc
add
sbb
add
cmpsl
add
stos
out
arpl
incl
out
lret
push
mov
xchg
stos
add
dec
fists
fisttpll
jmp
sub
insl
nop
rorl
shl
xor
decl
add
decl
cmp
sbb
jmp
add
add
add
std
push
insl
jge
sub
and
push
sbb
adc
add
add
loop
push
fmull
add
ret
add
out
arpl
pushl
add
pop
cmp
ret
das
cvtps2pi
add
jg
add
add
divl
lahf
inc
add
enter
pop
loopne
clc
mov
add
addb
add
add
add
int
xor
call
xor
ffreep
add
mov
sub
add
dec
ljmp
add
call
push
movsl
add
call
mov
lcall
inc
add
ss
sbb
add
cmpsb
add
add
sub
add
push
add
stos
add
jge
xchg
cld
jge
pop
addl
add
or
test
imul
push
xchg
sti
int
inc
add
pop
push
add
ss
add
add
add
push
cli
xrelease
pop
addl
imul
xchg
in
scas
idiv
pop
add
incl
adc
call
incl
ret
add
in
xor
lcall
xor
imul
add
add
jne
aam
jmp
add
dec
and
dec
add
call
dec
and
incl
xor
lcall
pop
sub
leave
inc
add
dec
mov
jmp
add
loopne
mov
pop
or
ljmp
lods
sahf
jns
out
lret
adc
pushl
mov
inc
add
shr
dec
adc
movsl
add
add
lock
push
add
flds
add
cwtl
pause
dec
pop
loope
cmp
lret
cs
mov
add
scas
jp
movsb
add
arpl
ljmp
xor
lcall
add
stos
add
call
ffreep
add
lea
add
xchg
push
inc
add
mov
sbb
push
jb
push
push
add
cli
inc
add
or
fiaddl
lcall
push
cwtl
cwtl
add
inc
add
add
xchg
rolb
add
dec
arpl
mov
jl
fcomps
popl
into
pop
mov
in
lds
hlt
jmp
add
jo
lcall
add
add
mov
ret
inc
add
or
jo
decl
push
add
lcall
jbe
ljmp
and
in
xchg
mov
dec
and
mov
add
ljmp
add
data16
lahf
fistpl
jbe
outsl
imul
pop
mov
add
lea
ja
add
sbb
out
notb
sub
add
loopne
insl
test
call
inc
add
jbe
jle
fiadds
jns
popa
add
push
rorl
add
test
out
cmp
shrl
xchg
adc
decl
pop
mov
mov
repz
add
pushl
daa
add
jmp
add
xchg
or
data16
add
imul
lods
loopne
push
add
jmp
add
sbb
incl
xchg
mov
add
add
add
sub
dec
sbb
add
popa
add
pop
mov
and
out
lods
pop
xor
inc
add
mov
add
jmp
add
add
dec
js
mov
add
loope
fidivrl
add
jmp
add
add
shrl
ret
dec
daa
add
xchg
pop
jmp
pop
clc
and
xlat
jmp
fsubl
add
or
xchg
sub
xchg
or
mov
add
incl
cmp
jmp
add
sub
mov
dec
inc
add
in
std
push
notb
jb
incl
add
add
lcall
inc
add
jae
mov
addl
imul
lcall
cs
add
cmc
jg
lea
les
jo
lcall
les
cmp
or
loope
icebp
mov
insl
sahf
xor
inc
add
push
add
add
xor
decl
xor
pushl
or
outsl
mov
call
add
ja
mov
add
inc
add
pop
rolb
add
fdivrs
add
repz
mov
cmc
iret
fiadds
add
add
add
add
fdivrl
cmp
push
iret
mov
add
add
loop
repnz
enter
cmp
add
lea
add
add
or
and
data16
jmp
add
add
lcall
rolb
mov
add
lret
das
mov
cmp
or
movl
cmpsl
add
inc
add
xchg
and
and
lcall
add
rcl
dec
push
add
roll
add
xor
pop
xchg
inc
add
jbe
sbb
cmp
xchg
les
add
mov
incl
loop
notb
call
mov
add
mov
sbb
out
xor
add
test
in
scas
fistpl
add
aaa
pop
aas
push
mov
fs
sub
push
daa
add
call
xor
jmp
add
pusha
add
dec
jecxz
mov
test
add
icebp
div
xchg
xchg
imul
sub
add
incl
add
daa
add
add
add
inc
add
add
add
jmp
add
add
xchg
jge
jno
jl
add
add
add
pop
inc
add
push
add
js
roll
and
fadds
mov
ja
add
incl
add
decb
sub
add
inc
add
jne
adc
jmp
pop
jmp
add
dec
lahf
dec
add
pushl
xchg
jge
sbb
mov
add
push
and
out
ljmp
jge
test
add
mov
sub
add
mov
hlt
ret
add
cmp
add
lcall
add
call
addr16
cmp
ljmp
push
loopne
xchg
and
fwait
mov
add
dec
mov
imul
inc
add
int
add
imul
into
cmp
int
lret
fadd
add
pop
cmp
mov
inc
add
aad
int
js
mov
mov
lods
stos
lret
sti
push
jle
mov
add
stc
sarl
add
push
cmp
mov
mov
decl
cmpsl
add
add
sub
fistpll
test
sahf
or
jno
ljmp
daa
add
in
jne
add
add
movsb
add
jl
adc
mov
xchg
adc
cwtl
jmp
jmp
add
rolb
outsl
mov
mov
jb
jl
add
ret
add
pop
movl
adc
jmp
add
icebp
loopne
add
lcall
jmp
add
test
add
add
xor
out
xchg
cmp
xlat
cwtl
push
sbb
test
mov
lcall
add
and
lret
ja
add
or
incl
aaa
loope
int
inc
add
pusha
add
imul
add
lods
mov
xchg
dec
push
mov
add
push
mov
or
scas
jo
decl
and
clc
pop
add
add
mov
mov
pop
jo
pushl
mov
add
push
rcrb
or
mov
shl
add
inc
add
jecxz
fidivrs
push
pop
mov
adc
ds
dec
push
cmpsb
add
jo
lcall
pop
aas
int3
in
cmp
lock
out
lods
cmp
data16
sbb
scas
cmp
add
call
pushl
sbb
mov
add
sub
adc
jecxz
imul
xchg
jo
pushl
pushl
add
in
xor
cwtl
mov
sbb
shll
add
add
adc
ljmp
jnp
pop
mov
add
in
out
movsb
add
add
add
push
add
push
add
cmp
ja
xor
mov
pop
jo
jmp
xor
incl
js
mov
push
push
cli
mov
add
movb
pop
ds
pop
sbb
add
adc
inc
add
jb,pt
decl
push
add
lret
dec
inc
add
pusha
add
sub
aam
dec
xlat
and
call
je
popa
add
and
cmpsb
add
add
add
add
jbe
sbb
add
lcall
jns
mov
add
adc
add
add
ljmp
add
or
sbb
arpl
lcall
loop
rorl
jmp
dec
out
or
mov
dec
push
add
xor
pop
addl
aam
add
inc
add
pop
dec
pushf
outsb
testb
ljmp
add
add
add
jg
add
lcall
rcrb
add
out
sub
sahf
lahf
lods
cmc
mov
pusha
add
xchg
pusha
add
dec
cltd
cmp
repz
bndldx
add
lcall
mov
and
ljmp
pop
stos
mov
shrb
jmp
add
scas
clc
pop
lock
add
jne
sbb
mov
dec
addb
lea
xchg
pushf
repnz
add
dec
push
add
xlat
js
add
pushl
add
cmp
popf
loope
cli
ret
xchg
cwtl
cltd
inc
add
into
xchg
das
addl
aas
gs
out
push
add
lret
loope
cwtl
movl
add
addb
xor
incl
push
dec
scas
xchg
adc
add
incl
add
jp
push
add
add
push
add
pop
adc
call
dec
jle
je
add
rcrl
add
incl
add
insl
out
fs
addb
add
add
mov
push
inc
add
in
fnstsw
mov
sbb
scas
jmp
add
fstl
add
call
xchg
pop
add
hlt
pop
add
pushl
add
pop
pop
add
rolb
jns
sub
int3
mov
pop
fisubrl
mov
mov
xchg
movsl
add
jnp
stos
add
add
cld
into
xor
add
ret
add
add
in
mov
add
push
lcall
into
roll
push
add
pop
add
stos
sub
add
add
adc
dec
mov
test
pop
out
xor
mov
daa
add
es
pop
and
lcall
call
sar
mov
and
pushl
fldenv
call
popf
mov
add
jg
add
cmp
jmp
cli
jns
add
nop
dec
mov
add
jp
outsl
out
pop
xchg
jo
pushl
ljmp
add
add
imul
out
push
cmp
add
jecxz
in
imul
add
push
add
jge
push
add
int3
test
aaa
lea
ljmp
pop
mov
add
into
sub
ds
add
cli
call
hlt
pop
fildl
add
add
and
call
add
decl
push
add
fldl
incl
push
addl
aam
pop
fists
add
and
add
ljmp
inc
add
enter
pop
pop
mov
dec
stc
push
das
dec
push
addl
sahf
cmp
ljmp
mov
add
lcall
push
add
xchg
adc
jmp
add
test
mov
icebp
mov
add
icebp
cmpsl
add
jnp
jns
add
out
xor
adc
push
jno
ljmp
add
cwtl
or
lret
add
pop
int3
cmpsb
add
add
xchg
je
add
cmp
push
cmp
add
xchg
mov
add
scas
inc
add
mov
imul
push
mov
hlt
jp
mov
and
das
adc
loopne,pt
mov
pusha
add
mov
xchg
lret
add
jmp
add
mov
add
add
add
xor
fldl2t
sub
mov
add
add
add
call
pushl
iret
inc
add
filds
add
rolb
mov
int3
adc
push
lock
add
add
cmc
add
ret
cld
out
jp
add
or
add
adc
incl
pushl
add
cmp
mov
add
xchg
lret
jo
call
xlat
call
pop
add
ljmp
leave
adc
decl
add
pop
push
add
cltd
add
lods
xchg
js
add
xchg
lods
fs
pop
mov
mov
decl
enter
and
fisubs
ljmp
add
ret
add
sub
jbe
pslld
cmc
out
mov
jge
add
nop
bound
lcall
and
mov
pop
insb
cwtl
rclb
scas
mov
add
dec
sti
in
pop
test
insb
cltd
cwtl
das
mov
dec
inc
add
filds
add
jbe
mov
add
addr16
add
cmp
add
addl
lcall
add
aam
mov
movsb
add
mov
cmp
push
mov
data16
fmuls
jbe
add
mov
aaa
xchg
insl
jno
call
jle
inc
add
iret
stos
push
push
js
add
aad
add
cltd
or
mov
add
sub
add
in
movsl
add
add
push
and
or
or
add
addl
out
test
bound
dec
shll
icebp
sub
dec
mov
add
add
inc
add
pop
add
js
add
imul
add
aam
add
in
push
cmp
shr
addl
cli
shrb
lcall
dec
jnp
mov
xchg
or
mov
add
decl
add
sub
or
dec
push
in
pop
cmpsl
add
mov
add
add
dec
pop
jmp
filds
add
dec
int3
sarl
out
das
inc
add
arpl
pushl
jmp
add
inc
add
sub
add
push
pushf
and
pushl
add
shrb
hlt
sbb
jp
add
imull
adc
pushl
mov
fadds
cmp
mov
add
lcall
xchg
inc
add
add
dec
sub
fcmovnbe
adc
pushl
cmp
incb
add
jp
add
sub
mov
add
lcall
xchg
sbb
sub
jne
pop
sub
ljmp
sti
mov
sub
fptan
fnstcw
out
aam
jle
popf
test
cmpsl
add
add
movb
in
cltd
add
add
addb
xor
pushl
add
add
in
cmc
and
incl
jge
add
out
rolb
mov
imul
add
cmp
add
pusha
add
mov
mov
sarb
fmull
dec
rorl
jne
or
cwtl
mul
add
in
cld
xchg
xor
jns
pushf
ljmp
cmpsl
add
add
call
dec
mov
loop
sub
sbb
std
shr
jns
pop
mov
add
imul
inc
add
stos
sbb
xor
jmp
lock
lcall
pop
mov
add
mov
mov
pushl
shl
add
dec
pop
into
and
jnp
pop
add
fsubl
add
fnstenv
add
jmp
mov
add
xor
pushl
add
fsubp
add
pop
psllw
loopne
jecxz
mov
outsb
and
jmp
fidivrl
mov
jmp
ds
lods
xor
cld
mov
pop
add
jns
adc
jmp
add
add
scas
inc
add
lret
ficompl
add
xor
cmp
leave
test
pop
jle
gs
jno
std
outsl
test
or
decl
add
inc
add
popa
add
push
jp
add
add
lcall
movsl
add
add
push
sti
iret
aad
and
push
jp
xlat
inc
add
xor
jmp
add
add
push
add
lds
test
mov
add
add
add
ret
add
xor
cmp
add
mov
add
mov
mov
popa
add
dec
mov
jp
in
outsl
rol
add
test
add
addr16
add
mov
jmp
add
or
xchg
jmp
jge
add
pushl
inc
add
leave
jmp
mov
add
mov
add
add
pop
and
jmp
push
add
out
out
repnz
les
push
fstps
add
dec
sti
mov
pop
insb
dec
cmc
popf
jge
out
imul
into
out
inc
add
add
out
inc
add
sub
xchg
pop
data16
adc
push
push
adc
jmp
jmp
clc
popa
add
sub
add
lcall
sbb
add
jno
ljmp
add
test
and
jg
sub
mov
dec
nop
mov
inc
add
add
pop
mov
repnz
jmp
add
jb
ljmp
ljmp
and
pushl
test
add
mov
mov
dec
jae
jmp
add
jo
pushl
add
sub
bound
incl
jle
add
ss
test
add
add
incl
add
push
add
or
stc
mov
mov
inc
add
dec
xchg
dec
repnz
mov
add
mov
outsb
mov
xchg
sbb
aam
push
add
ds
add
mov
outsb
sub
add
scas
movl
add
decl
push
cmpsb
add
mov
nop
movq
add
push
add
mov
add
mov
add
add
mov
pushl
mov
jnp
add
insb
push
push
add
ja
add
enter
pop
movb
int
dec
dec
ja
cmpsl
add
jecxz
ljmp
add
cmpsb
add
call
add
mov
add
ds
add
sbb
shll
addb
lcall
in
fldcw
pop
loope
movsl
add
and
add
lods
inc
add
xor
call
sti
repnz
mov
lds
imul
xor
jmp
ljmp
push
ljmp
jecxz
dec
pop
add
in
jle
add
push
sbb
xor
incl
add
dec
lea
add
cmpsl
add
mov
cmp
and
pusha
add
test
add
pusha
add
and
lcall
add
pushf
lods
das
sbb
and
jne
add
ljmp
pop
jns
ljmp
add
ljmp
jg
xor
xlat
jne
xchg
inc
add
lcall
test
aad
icebp
mov
pop
mov
add
bound
pushl
repnz
test
add
xchg
pop
jecxz
sub
add
jno
ljmp
ljmp
in
xchg
insl
lcall
incl
out
xchg
mov
or
dec
add
incl
add
sti
fists
fwait
push
add
out
push
out
add
add
xchg
repnz
xchg
mov
lcall
add
jnp
sub
loop
cli
mov
sti
inc
add
js
fldt
arpl
jmp
add
add
inc
add
lcall
adc
incl
pop
xchg
jl
out
loopne
clc
and
push
push
add
add
in
fs
add
mov
add
add
decl
mov
add
xor
incl
incl
push
add
outsl
jge
add
sbb
add
add
inc
add
popa
add
push
pushf
imull
stos
mov
add
dec
popf
loopne
inc
add
inc
add
add
repnz
and
call
dec
or
call
add
sub
cmc
inc
add
repz
rolb
jl
add
dec
roll
add
clc
fstpl
push
movb
jae
ljmp
mov
cmp
cs
into
test
push
hlt
adc
addb
cmc
hlt
sbb
add
bound
pushl
fsts
mov
jns
add
inc
add
add
scas
cmc
inc
add
movsl
add
out
jno
call
add
movl
add
add
xchg
movsl
add
mov
or
push
push
dec
push
add
sub
dec
add
ljmp
das
movsl
add
add
pushf
mov
mov
jl
add
add
inc
add
test
iret
xor
jl
jae
lcall
add
add
push
push
in
push
xchg
or
rcpps
lcall
loop
adc
add
lock
nop
test
pop
add
add
mov
mov
pushl
and
fxch
inc
add
mov
push
icebp
shlb
add
push
add
cmp
add
outsb
loope
sub
decl
add
mov
add
xchg
rolb
or
add
pop
pop
jne
fwait
mov
xchg
addb
add
add
add
pop
call
nop
mov
adc
jmp
sbb
mov
push
jae
call
pusha
add
filds
out
add
lcall
inc
add
stos
loope
fdiv
cmp
jl
add
das
and
stos
dec
js
add
stc
add
inc
add
imul
xor
push
addb
xchg
jmp
movsb
add
std
push
add
clc
addl
add
xchg
sti
stc
enter
rclb
iret
mov
add
push
add
das
fcoml
add
call
jle
roll
rolb
mov
xchg
sbb
loopne
push
inc
add
mov
add
cmc
jg
mov
or
adc
jg
add
call
push
sbb
add
imul
mov
int
xor
jnp
add
mov
add
addb
sbb
add
icebp
mov
outsl
mov
pushl
add
movsl
add
dec
sub
push
inc
add
sbb
add
push
add
push
dec
lea
inc
add
aaa
xor
sbb
addb
jo
incl
add
or
jnp
lock
rcr
or
add
add
pop
mov
add
xchg
xor
inc
add
jmp
add
sbb
add
inc
add
mov
pop
dec
dec
rcl
cli
lret
dec
and
jmp
add
movsl
add
leave
fiaddl
decl
mov
aad
iret
dec
inc
add
add
cmpsb
add
add
xchg
in
or
jbe
in
pop
lock
std
and
call
or
xor
movsb
add
repnz
faddl
jno
dec
sub
call
adc
jmp
or
adc
call
decl
inc
add
xor
xchg
addl
cmp
push
ja
add
push
add
jecxz
xor
jmp
add
decl
push
add
call
call
fwait
and
lcall
add
add
add
cwtl
push
add
cmc
pusha
add
cmp
fildll
add
or
xor
cmp
add
or
push
add
addb
add
jle
add
jnp
scas
mov
mov
fwait
pop
jecxz
mov
imul
lds
push
add
sub
add
pop
fstps
add
jbe
int3
pop
mov
add
jge
jecxz
das
cmp
pushl
add
sub
add
mov
add
insl
data16
pushl
jmp
add
add
jl
outsb
adc
add
add
xchg
aaa
divb
xchg
adc
incl
xor
sub
add
movsb
add
and
lcall
and
dec
add
pushl
incl
add
and
call
add
aam
add
add
add
xchg
xchg
sbb
loop
and
jmp
add
roll
and
imul
or
xchg
decl
leave
push
add
outsb
adc
mov
jmp
add
loop
pushl
add
jnp
add
pop
jno
lcall
jl
add
cmp
mov
jge
add
into
ljmp
add
inc
add
add
xor
incl
add
add
adc
ljmp
cmpsl
add
add
add
cmpsb
add
add
or
push
add
dec
sahf
insl
xchg
and
pop
in
xor
outsb
xchg
or
add
add
add
mov
ljmp
stc
daa
add
xchg
fisubrs
add
sub
ja
sahf
dec
pop
jbe
pop
jecxz
jo
ljmp
add
cmp
mov
out
out
or
jnp
sbb
scas
stos
and
ljmp
ss
test
and
ljmp
add
movl
pushl
stos
idivb
and
pushl
add
jno
push
stos
inc
add
add
aad
add
jmp
and
add
test
lock
pop
aas
inc
add
incl
add
xchg
fldcw
xchg
test
inc
add
push
add
sbb
add
out
shrl
mov
push
or
add
out
insl
insl
pop
pop
mov
inc
add
push
fbstp
daa
add
jb
call
fwait
imul
dec
sbb
rcll
decl
add
mov
jnp
mov
add
add
call
xchg
mov
das
or
mov
add
jb
fcmovb
add
das
dec
addb
cmp
addl
inc
add
dec
cwtl
clts
add
stos
adc
pushl
ud0
and
lcall
add
stos
push
add
and
jmp
repnz
mov
cmc
cmp
add
sti
pop
mov
add
lea
lret
xchg
push
add
pop
rolb
lcall
lret
fdivs
ljmp
or
add
mov
out
jbe
in
cmp
add
int3
rolb
xchg
nop
hlt
ds
les
movl
add
mov
xchg
mov
pop
iret
mov
loopne
in
adc
incl
fidivrs
xor
lods
outsl
inc
add
xlat
cmp
add
mov
cld
scas
negb
cs
add
aad
inc
add
add
jmp
and
mov
jge
add
cltd
nop
push
jecxz
ljmp
bound
dec
or
add
push
lret
outsl
and
lcall
add
or
loopne
cmp
roll
add
pusha
add
adc
decl
and
call
push
add
fcoms
push
add
jp
add
add
dec
inc
add
js
jbe
stos
jnp
sbb
add
push
add
test
addl
xor
sub
jno
pushl
add
or
lret
dec
jl
and
decl
add
into
inc
add
icebp
mov
cmp
add
add
roll
pusha
add
add
lea
inc
add
push
jnp
add
add
jg
in
jmp
out
lea
add
push
pop
add
addl
pop
test
aam
add
pop
add
aad
repnz
add
adc
jmp
lret
add
decl
out
and
call
bound
ljmp
push
inc
add
add
xchg
addl
iret
add
push
sbb
sbb
ljmp
fwait
mov
inc
add
fsubrp
int
push
jae
mov
cwtl
ret
jnp
dec
push
add
mov
mov
adc
decl
and
mov
jae
call
add
in
popf
fcomps
pushf
jle
add
push
push
ljmp
sbb
pop
add
mov
add
add
fisubl
popf
adc
add
incl
inc
add
lcall
into
cmp
stc
ret
add
mov
add
std
sub
xchg
lods
dec
jecxz
icebp
stos
xchg
in
int3
cwtl
push
add
jmp
in
mov
add
clc
cmp
adc
xor
adc
jmp
add
gs
test
testb
pop
mov
inc
add
push
add
pop
leave
or
lret
mov
sbb
cmp
in
rorb
add
lea
addb
add
ret
add
addb
pushf
jb
ljmp
mov
add
bound
decl
fwait
je
sub
sbb
add
mov
add
cmp
mov
fcoml
cld
loopne
sbb
test
jns
add
cmpsb
add
sbb
add
add
mov
add
movl
cmp
push
ret
add
mov
add
loop
or
push
fucomip
bound
call
call
add
std
jno
std
adc
ljmp
add
mov
add
xlat
fld
add
push
cmp
add
sub
incl
add
mov
xor
decl
add
xchg
test
add
add
cmp
push
cmp
sbb
xchg
mov
add
enter
add
sbb
test
rcll
add
jl
sub
push
pop
add
int3
clc
movsbl
pushl
lcall
add
movq
pop
and
ljmp
call
mov
add
data16
mov
cmpsb
add
decl
cmp
lcall
insl
pop
in
das
pop
ds
fldz
adc
add
dec
lret
out
pop
test
int3
inc
add
and
ljmp
ja
add
aad
insl
pop
mov
add
lods
sbb
add
add
arpl
push
jb
jmp
add
into
jno
jmp
in
add
incl
add
fisubrl
add
xchg
mov
fisubrl
incl
dec
inc
add
div
filds
add
add
addl
imul
add
sbb
add
and
out
leave
imul
mov
repnz
push
sbb
push
add
or
lods
lcall
jae
decl
xchg
dec
jb
jmp
or
mov
dec
cmp
add
imul
adc
decl
add
add
pushl
in
cs
add
int
add
pop
dec
sub
jae
call
call
ljmp
data16
pop
loopne
jle
inc
add
inc
add
cmpsb
add
add
xor
add
jmp
outsl
data16
push
add
xchg
push
lahf
inc
add
add
add
adc
movsb
add
add
mov
mov
add
add
pusha
add
insl
adc
cmp
movsl
add
add
push
add
enter
scas
sub
xor
add
jno
call
call
push
xor
call
xor
shlb
adc
add
addb
out
inc
add
testb
mov
add
cmp
dec
push
dec
mov
nop
jmp
push
add
add
mov
nop
jmp
add
into
dec
add
add
dec
mov
nop
jmp
into
add
je
add
push
nop
jmp
push
fiaddl
add
push
nop
jmp
add
add
add
lahf
add
mov
lcall
flds
inc
inc
add
jne
nop
jmp
add
mov
add
jl
test
add
add
add
lea
test
andl
add
cmpl
mov
adc
jmp
fdivs
add
push
nop
jmp
scas
add
add
nop
jmp
add
add
add
nop
jmp
jae
add
jmp
add
flds
dec
ret
jl
push
add
lods
inc
add
add
mov
nop
jmp
sbb
add
mov
sub
add
add
andl
je
nop
jmp
add
add
das
mov
nop
jmp
lds
add
add
or
nop
jmp
add
xchg
jecxz
inc
add
scas
push
nop
jmp
add
xor
add
push
nop
jmp
add
add
neg
add
mov
add
bound
decl
movsb
inc
add
jae
sub
add
nop
jmp
filds
fcomps
push
nop
jmp
fwait
add
add
add
lea
nop
jmp
add
add
jae
add
ret
add
nop
jmp
mov
add
out
xor
incl
add
nop
jmp
lahf
mov
addb
ret
nop
jmp
add
add
fistps
add
sub
sti
nop
jmp
mov
jae
add
add
jmp
nop
jmp
xchg
rcrb
int3
jmp
nop
jmp
sbb
in
add
in
pop
inc
aam
and
add
lods
addl
aad
inc
add
mov
call
nop
jmp
add
add
addl
nop
jmp
mov
add
pop
nop
jmp
frstor
push
movb
add
call
jmp
pop
rcr
fwait
mov
xchg
jl
arpl
nop
jmp
add
scas
push
mov
or
add
xor
add
lods
add
nop
jmp
xor
idivl
add
add
nop
jmp
add
iret
adc
add
nop
jmp
add
mov
stos
push
mov
add
mov
add
add
mov
mov
nop
jmp
add
add
pusha
add
cmpl
add
pop
add
xchg
push
mov
xchg
ret
mov
jecxz
or
nop
jmp
sub
add
jmp
add
add
add
jge
nop
jmp
sub
ret
jl
nop
jmp
add
add
ret
add
mov
nop
jmp
mov
roll
add
push
nop
jmp
mov
into
add
add
sub
in
push
mov
test
cmp
sub
jge
jg
add
or
mov
pop
push
mov
xchg
ret
jl
add
sbb
mov
xchg
ret
add
push
push
add
test
jae
ljmp
movzwl
nop
jmp
fstps
lahf
lahf
lds
mov
nop
jmp
add
orl
jmp
movsb
into
xlat
add
mov
add
cli
mov
nop
jmp
add
push
fs
add
lcall
incl
add
cmp
jne
nop
jmp
jecxz
add
add
sbb
mov
add
add
add
add
movsb
add
add
shr
nop
jmp
add
add
daa
add
mov
xchg
ret
xor
add
add
add
add
add
lods
dec
xchg
dec
push
nop
jmp
add
add
inc
add
push
add
mov
or
add
push
mov
xchg
ret
add
popa
add
sbb
add
fldl
add
push
shll
xadd
add
jl
inc
add
add
test
jmp
cmp
add
add
rolb
cmp
mov
xchg
ret
dec
in
mov
jnp
push
mov
xchg
ret
sbb
add
popf
call
nop
jmp
jl
add
push
mov
xchg
ret
add
dec
ret
nop
jmp
cmp
add
add
jmp
add
nop
jmp
fstps
mov
fisubrl
movzwl
nop
jmp
add
rorb
add
nop
jmp
mov
add
loop
pop
push
mov
jne
add
add
push
add
push
add
dec
popa
nop
jmp
add
add
inc
add
mov
adc
sub
ja
lods
push
mov
xchg
ret
add
add
les
add
andl
sbb
jmp
testl
fs
add
inc
add
fsubrp
rcrb
add
nop
jmp
add
and
jle
add
nop
jmp
push
in
xchg
lret
push
mov
fs
movsl
add
das
mov
dec
add
nop
jmp
scas
add
mov
nop
jmp
add
dec
add
mov
nop
jmp
lods
cmp
add
ficompl
mov
xchg
ret
add
add
xchg
cmpl
add
add
add
addl
xor
add
nop
jmp
and
jne
nop
jmp
mov
adc
add
nop
jmp
fadds
je
nop
jmp
fnstenv
fsts
jmp
add
add
add
cltd
push
nop
jmp
pop
sub
fldl
ja
mov
nop
jmp
rorb
add
jmp
add
add
lock
add
push
mov
xchg
ret
and
les
jmp
cwtl
cmp
add
ljmp
add
add
add
mov
fiaddl
cwtl
fmuls
or
add
add
dec
inc
nop
jmp
add
add
add
mov
push
nop
jmp
hlt
fwait
push
in
add
push
mov
xchg
ret
add
in
sbb
add
add
add
mov
nop
jmp
add
add
call
nop
jmp
mov
lahf
add
mov
nop
jmp
neg
jecxz
cld
add
push
mov
rorb
xor
inc
jg
adc
bound
incl
add
movsl
add
orb
add
into
fiaddl
add
jecxz
add
nop
jmp
jl
add
rcrb
jmp
mov
add
push
add
add
nop
jmp
mov
mull
mov
xchg
ret
add
push
repz
mov
nop
jmp
add
add
divl
add
sbb
add
incl
int
push
mov
xchg
ret
lds
push
and
mov
xchg
ret
fadds
push
jb
dec
ret
sbb
hlt
sbb
test
ljmp
add
nop
jmp
fadds
add
enter
adc
add
lahf
sbb
add
popl
jg
inc
add
add
jmp
loop
xlat
add
in
stos
or
mov
add
cmp
jmp
scas
mov
add
decl
add
add
add
jp
leave
nop
jmp
lahf
mov
pop
sbb
push
add
nop
jmp
scas
xchg
leave
push
jnp
jmp
sbb
add
pusha
add
sub
push
sub
hlt
stos
inc
add
mov
sbb
pushl
cmp
xchg
add
jne
nop
jmp
add
add
jmp
add
add
loop
pop
dec
nop
jmp
lea
mov
shrb
jmp
dec
cmp
push
add
add
lcall
rclb
jmp
inc
add
add
mov
jmp
sub
push
call
nop
jmp
cmp
add
mov
mov
pop
add
dec
add
cltd
pop
sub
nop
jmp
mov
cwtl
dec
into
add
sbb
add
adc
dec
mov
nop
jmp
pusha
xor
mov
xchg
sbb
xchg
add
add
mov
push
nop
jmp
dec
add
add
add
stos
nop
jmp
mov
cld
sub
add
flds
sbb
and
add
jmp
fldl
into
add
sbbl
push
mov
xchg
ret
rolb
mov
adc
call
xor
nop
jmp
in
add
stos
push
nop
jmp
dec
add
add
jae
das
push
nop
jmp
jae
jae
mov
js
rclb
add
add
add
inc
add
jb
faddl
nop
jmp
dec
ret
sub
mul
add
add
add
push
add
roll
pusha
nop
jmp
add
xchg
add
shlb
decl
xchg
add
add
add
add
cwtl
pop
mov
push
mov
xchg
ret
pop
ror
call
nop
jmp
test
pop
nop
jmp
scas
rolb
iret
dec
push
cmp
nop
jmp
in
add
cld
or
idiv
incl
jmp
add
lahf
add
add
nop
jmp
pop
lea
add
mov
nop
jmp
add
jo
jmp
add
arpl
decl
call
add
lahf
jecxz
roll
jne
nop
jmp
push
add
jecxz
inc
add
mov
xchg
ret
add
mov
mov
ljmp
sbb
add
add
add
mov
nop
jmp
add
fisttpll
add
nop
jmp
add
add
pushl
pop
or
add
add
mov
add
rclb
call
mov
add
add
add
add
nop
jmp
lahf
add
fwait
ja
pushl
push
mov
xchg
ret
xchg
sub
adc
add
cld
xchg
add
push
adc
add
add
pop
pop
add
nop
jmp
jecxz
add
ljmp
dec
cmp
jmp
xchg
add
sti
nop
jmp
into
push
dec
jns
ss
jmp
add
je
subl
add
movsb
nop
jmp
add
xor
in
add
mov
jmp
add
pop
pusha
add
xor
add
lods
mov
add
add
jmp
add
push
pop
mov
add
jmp
add
jne
nop
jmp
add
lods
add
lcall
mov
nop
jmp
add
cld
push
pusha
sub
sub
add
add
hlt
cmp
nop
jmp
add
cmp
push
mov
xchg
ret
add
push
add
add
add
fwait
push
nop
jmp
lods
loop
add
jp
into
and
call
add
mov
mov
xchg
ret
xor
jl
sar
add
nop
jmp
mov
scas
pop
out
je
nop
jmp
push
sub
add
pushf
je
nop
jmp
add
add
popa
push
mov
xchg
ret
sarb
dec
clc
dec
inc
nop
jmp
into
dec
sub
addb
add
jae
jmp
lds
in
add
nop
jmp
add
or
pop
hlt
incl
hlt
into
add
dec
push
push
mov
xchg
ret
push
fnsave
add
add
nop
jmp
je
into
add
cmp
add
nop
jmp
fs
add
pushl
push
mov
xchg
ret
add
add
mov
add
scas
add
nop
jmp
add
add
add
nop
jmp
add
mov
hlt
add
mov
push
nop
jmp
hlt
pop
cld
push
add
fdivs
add
ret
add
nop
jmp
mov
add
push
add
push
nop
jmp
movsb
mov
add
scas
cs
nop
jmp
mov
mov
nop
jmp
add
add
orl
jne
push
mov
xchg
ret
je
mov
mov
xchg
ret
add
call
popa
nop
jmp
fldenv
rolb
jp
nop
jmp
add
add
mov
add
jge
dec
imul
jp
mov
icebp
xor
lcall
mov
jmp
add
and
imul
or
add
add
mov
cmpl
nop
jmp
add
imul
add
cld
push
push
mov
xchg
ret
jl
hlt
mov
push
mov
xchg
ret
sub
add
jo
dec
mov
nop
jmp
fwait
sbb
movsl
inc
add
mov
rolb
pop
push
mov
xchg
ret
addl
lahf
dec
add
nop
jmp
subl
adc
add
cld
add
add
add
and
cli
call
nop
jmp
add
add
jne
push
push
mov
xchg
ret
pop
push
lahf
mov
add
add
lahf
add
add
jl
nop
jmp
testl
and
nop
jmp
mov
jl
add
enter
add
mov
lods
add
lods
sub
nop
jmp
add
mov
ret
add
add
in
mov
add
mov
nop
jmp
add
mov
cwtl
lods
nop
jmp
fidivl
filds
add
mov
add
nop
jmp
add
add
imul
nop
jmp
pusha
push
add
add
sbb
xor
and
add
mov
nop
jmp
add
fwait
add
jmp
add
add
add
adc
add
hlt
add
dec
movswl
nop
jmp
add
add
scas
insb
xor
nop
jmp
add
dec
add
add
mov
jmp
mov
nop
jmp
rolb
mov
mov
pop
shlb
nop
jmp
mov
movsb
add
xor
nop
jmp
jp
push
add
add
div
lea
jmp
cld
xchg
xor
add
sub
inc
in
push
mov
xchg
ret
add
jbe
inc
nop
jmp
add
add
movsb
add
nop
jmp
fs
into
mov
mull
jmp
and
rep
nop
jmp
xchg
pusha
mov
mov
nop
jmp
add
test
clc
test
nop
jmp
xlat
add
jae
add
aad
add
nop
jmp
pusha
and
add
or
add
mov
jl
repnz
outsl
mov
push
mov
xchg
ret
add
add
pop
js
nop
jmp
add
add
iret
lahf
andl
lea
nop
jmp
movsb
sub
mov
add
xchg
and
dec
add
nop
jmp
add
add
add
add
add
jne
nop
jmp
jl
jecxz
mov
nop
jmp
jecxz
add
les
data16
lret
nop
jmp
pusha
movsb
sub
dec
add
nop
jmp
add
movsb
add
fadds
inc
repnz
incl
add
add
sub
jmp
jp
iret
cmp
mov
dec
inc
push
mov
xchg
ret
xchg
add
int
push
mov
xchg
ret
lahf
add
nop
jmp
cwtl
jp
mov
add
nop
jmp
mov
add
add
sbb
loop
add
add
sub
cmpsl
inc
add
xchg
mov
nop
jmp
xchg
sub
sub
nop
jmp
mov
ffreep
arpl
lcall
and
and
filds
add
nop
jmp
add
or
mov
xchg
ret
add
nop
jmp
loop
scas
add
add
lahf
mov
nop
jmp
add
iret
add
nop
jmp
push
dec
sub
push
lcall
add
out
js
add
add
cwtl
add
pusha
add
add
pop
add
nop
jmp
fiaddl
add
add
add
int
nop
jmp
add
scas
add
add
aad
push
nop
jmp
add
cwtl
add
sub
cmp
nop
jmp
add
add
add
test
nop
jmp
add
cld
add
nop
jmp
add
pusha
nop
jmp
sub
pop
add
jns
scas
enter
adc
add
fwait
into
fidivrl
push
add
add
lahf
mov
xchg
cmp
add
add
jmp
iret
rolb
xchg
mov
divb
push
mov
xchg
ret
mov
xor
incl
je
nop
jmp
add
add
mov
mov
ret
cmp
mov
sub
ret
add
in
rep
nop
jmp
dec
add
add
adc
add
add
rclb
sarb
add
or
test
add
rcrb
inc
nop
jmp
and
mov
xor
nop
jmp
jecxz
rolb
add
mov
lcall
add
cmp
in
add
shl
pop
loopne
add
insl
pop
nop
jmp
add
add
add
add
adc
aaa
jl
addl
in
adc
jmp
add
test
jmp
add
andl
mov
call
add
hlt
and
add
int
nop
jmp
loop
add
movsb
jp
lods
jmp
cmp
mov
add
jle
or
add
nop
jmp
jae
add
and
std
mov
nop
jmp
add
neg
insl
je
nop
jmp
dec
rorb
test
xor
mov
push
nop
jmp
hlt
jl
add
lds
lock
add
or
jmp
add
add
add
fiaddl
test
jmp
add
rolb
ret
xlat
pop
add
nop
jmp
mov
fadds
pop
add
mov
add
add
test
fisttpll
pop
add
addl
add
nop
jmp
rolb
int3
add
nop
jmp
add
pop
push
mov
xchg
ret
mov
add
nop
jmp
fistps
lods
add
in
js
jmp
jp
nop
jmp
mov
cmp
nop
jmp
scas
add
pop
push
nop
jmp
mov
cld
cmp
in
mov
nop
jmp
push
xchg
add
testl
andl
icebp
jmp
add
sbb
xor
ljmp
add
mov
nop
jmp
add
add
mov
pop
idiv
ljmp
loop
lahf
add
nop
jmp
and
or
mull
cld
push
nop
jmp
or
add
add
ret
add
xor
call
nop
jmp
addl
fiaddl
je
pop
iret
ror
push
mov
xchg
ret
fdiv
js
jge
nop
jmp
sub
fs
jmp
nop
jmp
add
add
pusha
add
sub
dec
cld
incl
jl
add
mov
nop
jmp
jae
add
movzwl
nop
jmp
sarb
int3
pusha
push
mov
xchg
ret
fiaddl
mov
mov
nop
jmp
movsb
movsb
lahf
cwtl
add
cld
out
cmpw
nop
jmp
add
lea
nop
jmp
xor
mov
nop
jmp
push
hlt
adc
ljmp
add
pushl
add
jb
pushl
add
mov
nop
jmp
add
add
mov
jne
push
mov
xchg
ret
fwait
add
nop
jmp
add
hlt
add
pop
xor
push
mov
xchg
ret
add
add
cld
jmp
add
add
push
add
add
mov
fldl
cmp
jmp
call
incl
out
mov
nop
jmp
sbb
sub
add
or
jmp
dec
xlat
add
add
add
pop
test
nop
jmp
add
add
add
nop
jmp
jecxz
lds
xlat
or
call
add
add
imul
mov
nop
jmp
add
fwait
test
mov
out
xor
nop
jmp
xor
xchg
movzwl
push
mov
xchg
ret
fists
nop
jmp
add
add
add
loope
insl
lea
nop
jmp
add
mov
nop
jmp
pop
xchg
add
sub
sub
scas
add
pop
add
push
add
inc
add
add
mov
jo
dec
mov
nop
jmp
jecxz
add
mov
add
filds
mov
jmp
dec
add
xlat
mov
clc
xchg
nop
jmp
ret
fcmove
ret
loop
in
add
mov
jnp
inc
add
mov
nop
jmp
je
add
add
nop
jmp
add
cmpl
cmp
mov
incl
in
add
add
add
add
add
fidivrl
jmp
filds
add
adc
push
ud1
or
nop
jmp
add
mov
push
add
mov
js
test
add
nop
jmp
push
aas
add
add
add
fadds
nop
jmp
and
ret
sahf
mov
nop
jmp
into
add
les
popa
add
mov
push
push
mov
xchg
ret
hlt
add
add
jmp
jecxz
and
jb
pushl
les
nop
jmp
add
sbb
movb
mov
nop
jmp
dec
mov
mov
xchg
ret
add
add
and
decl
sti
nop
jmp
lods
mov
add
lcall
nop
jmp
mov
add
pop
push
push
mov
xchg
ret
cmp
rolb
push
rep
nop
jmp
into
add
add
add
push
popf
pushl
nop
jmp
negl
add
loop
mov
add
nop
jmp
pop
add
sub
mov
add
jmp
shl
filds
add
test
nop
jmp
dec
add
test
add
nop
jmp
add
add
rcll
mov
and
cld
add
pop
xor
push
mov
xchg
ret
jecxz
or
popl
nop
jmp
add
add
mov
shl
push
mov
nop
jmp
fwait
mov
cmp
add
and
call
adc
add
sbb
add
std
div
nop
jmp
push
ret
add
add
mov
nop
jmp
loop
mov
jmp
hlt
sub
add
dec
scas
add
je
add
nop
jmp
add
roll
add
pop
mov
jmp
add
add
decl
jmp
mov
sub
jns
nop
jmp
add
jecxz
addl
mov
push
mov
xchg
ret
add
jmp
mov
xchg
fisttpll
adc
add
mov
add
add
nop
jmp
cmp
dec
mov
nop
jmp
add
add
jb
nop
jmp
pop
iret
add
push
mov
pop
add
add
add
add
add
jae
inc
add
add
dec
call
nop
jmp
lahf
sub
fstl
lcall
and
add
add
add
push
mov
xchg
ret
scas
pusha
ret
lahf
in
push
lret
dec
out
incl
sub
and
sub
push
mov
xchg
ret
push
push
mov
jp
jbe
nop
jmp
add
lea
jmp
sub
mov
push
push
mov
xchg
ret
mov
cwtl
add
call
nop
jmp
add
mov
add
mov
jl
pushf
out
add
push
out
dec
or
add
mov
nop
jmp
add
mov
push
andnps
xchg
ret
sbb
sbb
jge
incl
add
add
mov
nop
jmp
sbb
add
call
ret
add
addb
clc
jne
nop
jmp
add
jp
nop
jmp
add
xchg
nop
jmp
add
jae
sub
add
in
mov
push
mov
xchg
ret
add
lcall
and
jmp
add
rolb
lea
stc
push
push
mov
xchg
ret
add
lcall
jmp
add
add
lock
mov
xchg
ret
mov
loop
add
nop
jmp
lea
addl
add
sub
push
mov
xchg
ret
add
add
decl
jmp
add
jp
add
pop
nop
jmp
cwtl
mov
test
movl
in
call
add
hlt
fwait
xlat
sti
sub
nop
jmp
xor
add
jmp
add
add
add
fists
fildll
and
cmp
add
nop
jmp
jae
add
fsubrs
call
inc
add
add
mov
xchg
ret
jl
xchg
mov
nop
jmp
xlat
push
loop
cld
lds
jmp
add
add
jl
pop
cmpsl
add
dec
push
mov
xchg
ret
xlat
add
pusha
push
add
cmp
dec
sub
or
inc
add
add
push
push
mov
xchg
ret
add
add
jne
nop
jmp
mov
add
mov
add
add
sub
add
call
addb
add
sub
rclb
decl
jl
lds
add
dec
cmp
jmp
add
add
add
add
ljmp
je
nop
jmp
pusha
fldl
jl
dec
cmp
jmp
add
add
add
iret
add
nop
jmp
add
add
add
cs
nop
jmp
xor
pop
sbb
lods
idiv
incl
mov
lds
dec
mov
nop
jmp
add
mov
nop
jmp
dec
jp
add
outsb
call
nop
jmp
add
jmp
xlat
idiv
call
jmp
rolb
and
dec
ret
push
mov
xchg
ret
pusha
add
pop
jmp
nop
jmp
lahf
and
lcall
cmp
jmp
lea
add
dec
pop
scas
shl
nop
jmp
fs
add
mov
nop
jmp
jl
pop
fiaddl
in
mov
jmp
mov
pop
add
add
ret
cld
incl
add
or
scas
mov
add
test
add
nop
jmp
and
test
jmp
add
mov
nop
jmp
mov
xchg
call
add
nop
jmp
add
mov
stos
nop
jmp
add
add
rolb
je
add
pushl
push
mov
xchg
ret
cmp
je
add
jno
pushl
push
mov
xchg
ret
push
add
out
insl
push
nop
jmp
addl
pusha
dec
add
sub
jmp
add
add
mov
add
js
add
add
mov
inc
add
cmc
hlt
cmp
jmp
mov
add
js
jmp
hlt
add
add
movl
add
add
push
mov
xchg
ret
add
push
lea
add
mov
add
divl
out
testl
nop
jmp
add
add
cmp
jb,pt
nop
jmp
mov
mov
push
nop
jmp
pusha
test
fcomps
jl
pushl
add
xchg
nop
jmp
mov
add
enter
call
incl
add
add
outsl
push
nop
jmp
cmp
add
aas
cs
nop
jmp
add
add
jp
lods
mov
jmp
ret
fwait
in
add
xchg
inc
cmp
jmp
add
lahf
lahf
add
popf
idiv
jmp
rolb
add
adc
call
incl
xor
subl
push
mov
xchg
ret
xor
shr
nop
jmp
lods
xor
je
nop
jmp
add
cmp
lret
push
mov
shll
add
pop
push
mov
xchg
ret
add
mov
sub
cld
fistps
add
add
nop
jmp
add
rolb
mov
cmp
incl
fs
rolb
mov
add
mov
add
in
aam
xor
mov
mov
add
lods
fsts
addb
add
push
push
imul
nop
jmp
add
mov
icebp
inc
add
mov
sub
add
lods
push
rorb
push
nop
jmp
add
sub
jmp
hlt
add
add
nop
jmp
add
add
addl
jg
nop
jmp
rcrb
add
jmp
mov
add
or
add
push
mov
add
mov
add
sti
out
pop
test
xchg
push
add
sub
rclb
mov
add
fdivr
inc
add
jns
adc
add
nop
jmp
addl
mov
nop
jmp
hlt
pop
add
push
nop
jmp
add
add
lds
add
in
mov
or
xor
push
push
mov
xchg
ret
mov
add
nop
jmp
xchg
push
add
add
add
add
ljmp
jmp
add
adc
add
fs
out
call
nop
jmp
div
fwait
lods
pop
and
nop
jmp
dec
add
lcall
call
pushl
inc
add
mov
pushl
mov
add
cld
push
push
mov
xchg
ret
xchg
xor
inc
add
pop
push
nop
jmp
mov
add
add
xchg
dec
decl
push
mov
xchg
ret
rcr
inc
add
fimull
inc
lock
push
add
add
test
mov
add
add
add
mull
push
mov
xchg
ret
add
add
dec
push
nop
jmp
add
sub
or
nop
jmp
add
mov
cmp
nop
jmp
mov
scas
add
push
add
jecxz
pop
dec
push
mov
xchg
ret
push
jp
movsb
lret
lea
nop
jmp
sub
hlt
fiaddl
je
nop
jmp
add
add
mov
add
cmpsl
cmp
mov
call
fadds
and
jmp
jmp
lahf
add
add
add
nop
jmp
add
iret
add
cli
call
decl
add
cmp
add
add
add
xchg
add
nop
jmp
sub
jl
pop
mov
adc
inc
add
fldcw
nop
jmp
pusha
add
add
call
nop
jmp
hlt
add
cmpsl
add
add
call
nop
jmp
add
ret
orl
jmp
je
movsb
add
mov
add
add
nop
jmp
add
pop
add
lea
pushl
add
mov
jmp
lcall
pop
add
add
add
cmpl
nop
jmp
pop
rcl
xlat
add
push
add
add
push
clc
add
push
mov
xchg
ret
sbb
mov
push
mov
xchg
ret
add
icebp
movsb
add
jae
ljmp
mov
push
nop
jmp
mov
add
loop
add
adc
jmp
std
mov
nop
jmp
add
add
call
incl
add
add
add
rorb
rclb
add
mov
idiv
fdivr
jae
add
nop
jmp
add
add
lods
add
xchg
add
mov
incl
add
pop
push
mov
xchg
ret
add
xchg
leave
mov
push
mov
xchg
ret
xchg
push
mov
add
jecxz
call
add
mov
add
add
dec
and
jmp
mov
add
mov
mov
mov
add
adc
jmp
add
jmp
pushl
or
add
divb
push
add
jg
add
mov
add
jne
negb
jp
and
mov
sti
add
cmp
inc
add
add
mov
xchg
pop
mov
sbb
test
iret
data16
add
clc
push
add
mov
add
add
and
jmp
add
add
add
mov
stc
bswap
mov
sub
imull
add
xchg
imulb
add
xchg
sub
bound
push
fdivl
mov
test
add
out
data16
add
ss
ljmp
arpl
pushl
call
pushf
xchg
in
sub
sub
shl
add
inc
add
or
lods
mov
pop
xor
pushl
incl
add
daa
add
ret
pop
fidivrs
add
and
call
add
sbb
add
jge
clc
stos
aas
in
jp
loope
jp
add
incl
add
pop
pop
jmp
sub
jns
pop
cmpsb
add
or
or
imul
sbb
sbb
scas
mov
add
and
pushl
pushl
incl
inc
add
sub
add
in
xor
pushl
je
add
fbld
jmp
and
lcall
fiadds
shrb
incl
mov
mov
dec
in
addb
add
shr
dec
sbb
cmp
loop
jp
add
add
add
add
jmp
add
add
roll
add
test
cli
cmp
repz
pop
lret
in
insl
xor
call
xchg
test
div
addl
add
incl
add
fildl
dec
pop
or
enter
mov
pop
mov
xlat
pop
mov
add
call
sbb
jmp
add
aad
add
sbb
jnp
pop
dec
sbb
out
hlt
cmp
add
add
paddd
push
jecxz
aad
dec
jb
decl
add
lcall
add
jmp
jle
add
shl
add
decl
add
decl
sbb
add
dec
sahf
add
outsl
and
ljmp
adc
ljmp
iret
push
ficomps
add
es
icebp
mov
test
adc
dec
rorl
aaa
inc
add
and
addb
cmp
pop
xor
jge
add
jecxz
in
out
adc
lcall
loop
jp
icebp
into
mov
in
or
fnstsw
imull
je
lods
xor
sti
test
loop
bound
fst
lret
add
and
decl
add
mov
add
bound
decl
dec
call
pop
testb
sbb
xor
cmp
mov
add
mov
and
decl
jae
incl
lret
loopne
movsl
add
push
add
js
add
ss
jno
inc
add
add
stos
sbb
adc
incl
add
xchg
xor
mov
mov
xor
call
add
xchg
nop
fildl
xor
dec
or
push
lods
mov
sti
push
scas
mov
add
add
mov
xchg
pop
add
add
add
gs
mov
mov
enter
pop
sbb
jmp
adc
lcall
mov
add
arpl
jmp
add
mov
add
sub
decl
pushl
add
push
das
pop
addl
je
shll
insb
addl
add
pushl
ljmp
sub
xchg
popa
add
mov
loope
sub
pop
mov
add
pop
shrb
add
add
inc
add
add
pop
mov
call
movb
add
lods
mov
data16
xlat
add
jle
jecxz
add
sbb
data16
add
ljmp
xor
push
addb
add
cmp
push
add
pushf
hlt
es
icebp
adc
incl
add
or
popa
add
pop
mov
out
addb
xchg
arpl
dec
adc
dec
test
add
lods
xor
call
mov
inc
add
mov
add
out
pop
add
sbb
add
pop
dec
ret
add
call
xchg
cmpsl
add
cmp
add
add
fnstenv
xor
and
decl
add
add
call
add
xchg
mov
sti
pop
in
rolb
shr
jge
cwtl
das
push
add
repnz
test
call
mov
ljmp
test
cs
xchg
or
add
xchg
mull
add
cmp
jmp
add
ret
push
add
mov
add
loop
inc
add
pushf
cmp
pop
add
rolb
add
call
sarb
and
jmp
imul
sub
cmp
jb
decl
push
xor
jecxz
push
shll
data16
int3
sbb
gs
icebp
sbb
add
pop
add
push
add
sub
mov
invd
and
cld
push
test
add
add
pushl
lcall
add
movl
add
dec
cmp
call
sub
push
test
loopne
push
loopne
into
scas
ret
add
addl
cmc
pop
movb
cs
pop
loop
mov
add
std
test
inc
add
movb
add
ds
addl
lcall
mov
dec
jae
fcmove
insb
jae
call
add
pop
pop
pop
and
ljmp
out
push
fucomi
pop
add
decl
jmp
sbb
aam
fdivs
sub
divb
stos
popa
add
hlt
jbe
push
push
movb
jecxz
nop
cmp
mov
push
add
lret
add
jbe
and
ljmp
add
out
push
add
adc
add
dec
inc
add
add
pusha
add
xchg
xchg
bound
decl
imul
lcall
leave
mov
jmp
add
out
out
sub
stc
push
aas
or
lcall
decl
lods
add
decl
enter
dec
xchg
sub
jl
loop
aad
dec
into
loope
ss
add
sub
ja
stc
stos
cmp
xor
jmp
into
jae
decl
xor
lcall
or
add
int3
scas
nop
out
cld
sub
add
jne
mulb
add
adc
incl
add
addl
push
add
int3
imul
movsl
add
add
add
sub
add
insb
jmp
add
call
add
jbe
bound
jmp
add
add
adc
mov
outsb
out
in
ret
add
add
test
pop
add
pop
mov
add
sti
and
decl
add
push
aaa
dec
movb
add
mov
and
data16
add
xchg
fdivr
pop
movb
stos
mov
mov
mov
ja
add
add
mov
add
inc
add
mul
add
aas
sahf
sub
aam
add
push
add
add
add
jmp
add
add
leave
aas
in
addl
add
add
jg
add
lods
arpl
decl
dec
fldl
decl
int3
jecxz
fnstenv
jg
add
xor
add
xchg
pop
outsb
mov
add
jmp
and
pushl
je
addb
add
popa
add
mov
stc
pop
rolb
jle
les
pop
mov
inc
add
insl
mov
cli
xor
push
cmp
fbstp
dec
pop
mov
xchg
cmc
fs
lock
add
roll
xor
jg
add
mov
incl
add
or
push
int3
jmp
cs
repz
add
xor
decl
pushl
ds
mov
fsubr
lret
or
add
daa
add
add
dec
cmp
lods
int
pop
inc
add
cmp
lock
arpl
jmp
add
jp
add
add
mov
add
mov
decl
inc
add
ret
add
cmp
fistpl
sbb
jb
call
ljmp
add
push
js
add
clc
std
daa
add
add
fdivp
adc
call
loopne
sti
push
add
mov
pop
or
pop
pop
leave
xchg
dec
in
rolb
mov
xchg
pop
or
lods
in
xor
ljmp
jmp
add
jmp
mov
add
nop
cmc
dec
jo
push
mov
push
jecxz
mov
pushf
imul
hlt
add
call
imull
in
mov
adc
add
adc
jl
dec
sbb
add
mov
adc
inc
add
add
jle
add
or
mov
test
sbb
add
inc
add
addr16
mov
test
push
inc
add
addb
add
test
push
add
js
outsb
icebp
or
add
pop
add
push
cmpsl
add
jmp
push
js
adc
inc
add
aad
jnp
data16
add
roll
push
add
pop
pop
dec
xchg
test
addl
cmpsl
add
xchg
daa
add
add
add
add
mov
jno
call
addb
mov
add
dec
bound
or
jbe
jecxz
es
inc
add
xchg
inc
add
xchg
inc
add
add
mov
enter
imul
mov
insb
enter
add
test
add
pop
icebp
xchg
loope
jecxz
lahf
adc
incl
add
jbe
add
fdivrl
add
imul
add
sub
ret
add
ds
push
addb
pop
imulb
call
data16
push
dec
divb
add
call
lcall
add
out
mov
push
add
ja
cmp
int
add
add
pushl
add
cmp
lcall
data16
xchg
add
call
repnz
rolb
add
pop
mov
add
add
add
jne
add
add
pushl
into
sub
ret
add
jnp
mov
add
add
and
push
ret
add
add
sti
mov
add
adc
call
add
pop
add
pushl
pushl
add
in
fisubl
mul
add
add
mov
lret
mov
push
add
push
jecxz
stos
int3
adc
push
jne
add
xchg
out
mov
dec
pop
addl
add
popa
add
dec
lret
test
jo
sti
into
push
ljmp
add
icebp
stos
or
inc
add
or
mov
jg
add
sub
cltd
sti
lods
and
mov
stos
cwtl
jne
add
pushl
incl
cmp
scas
jecxz
popa
add
clc
lods
pushf
sbb
jmp
sahf
jle
dec
xchg
push
lret
dec
and
pushl
add
sti
movl
push
add
outsl
push
out
cmp
add
fwait
das
cmpsl
add
xchg
or
xchg
lock
add
sub
xchg
lret
mov
out
in
into
sti
data16
int3
fiaddl
add
mov
sbb
mov
jmp
mov
mov
or
add
push
push
add
push
std
dec
mov
add
lcall
pop
and
lcall
mov
add
call
fldt
fldl
dec
xlat
inc
add
add
cmp
pop
aaa
xor
dec
inc
add
sti
mov
add
add
jo
jns
je
lds
jmp
ljmp
add
add
push
mov
inc
add
in
insl
inc
add
das
ds
mov
incl
ss
lds
mov
mulb
add
and
call
jmp
call
popa
add
test
push
jno
dec
and
seta
add
inc
add
or
into
pusha
add
push
sti
mov
test
xchg
out
xchg
jo
ljmp
add
outsl
dec
cmp
test
test
jmp
and
mov
ds
std
fbstp
add
ret
add
add
movl
dec
or
add
lea
loopne
add
cld
loopne
xchg
sub
in
mov
sbb
addb
or
arpl
call
and
jge
sub
xlat
cmpsl
add
jbe
add
xor
add
push
test
push
call
add
jmp
add
inc
add
sbb
loopne
incb
add
rorb
add
ljmp
xor
mov
xor
ljmp
fmuls
cmp
jecxz
mov
add
fidivl
or
push
add
movsl
add
flds
pop
jl
dec
aaa
cli
add
cmpsl
add
iret
xchg
insl
mov
inc
add
add
add
lods
mov
push
push
hlt
les
popf
pusha
add
xor
pushl
in
mov
add
in
sti
dec
mov
add
ja
add
cmpsl
add
pop
call
jmp
gs
ljmp
leave
push
shlb
jb
incl
mov
incl
jbe
xor
decl
popa
add
jb
fsubp
add
add
sub
inc
add
pop
adc
add
sarb
cmp
add
add
add
jl
lea
and
jmp
inc
add
inc
add
fildl
lcall
rcrb
jmp
add
int
add
pop
add
aam
add
xchg
push
movl
out
mov
add
xchg
stc
and
lcall
inc
add
adc
call
imul
into
push
bound
decl
int
add
add
add
pmaddwd
add
add
add
nop
les
adc
lcall
sub
add
lcall
cmc
pop
sub
or
pop
sbb
push
fwait
jae
call
lcall
mov
pushl
add
jmp
push
add
add
and
jmp
dec
xor
mov
in
or
mov
ss
jecxz
push
ret
jl
js
mov
add
test
nop
dec
mov
mov
test
lods
and
jmp
and
fsubr
jecxz
push
adc
call
xlat
xchg
add
call
add
sbb
cmpsb
add
out
cmp
lcall
in
movsl
add
clc
add
fstpt
imul
add
push
inc
add
add
mov
add
pusha
add
jnp
add
add
cmpsl
add
add
sti
into
cmp
jnp
rolb
and
call
rcr
inc
add
repnz
std
xchg
mov
add
xor
dec
movsb
add
outsb
jge
mov
add
inc
add
ret
add
rorb
jnp
mov
add
lcall
xor
in
addb
movb
dec
add
leave
pop
mov
loopne
add
pushl
add
jb
lcall
daa
add
popa
add
pusha
add
or
fnstsw
add
jne
dec
cmovle
data16
add
inc
add
mov
je
push
shl
addl
in
test
inc
add
mov
add
popa
add
push
mov
add
je
add
add
sub
add
test
cltd
lock
das
lret
inc
add
jle
add
push
mov
add
adc
ljmp
jg
add
xor
add
push
addl
push
pop
xchg
test
addb
xchg
ljmp
add
add
into
int
add
mov
and
call
imul
insl
xchg
cmpsl
add
test
int3
or
add
add
add
incl
addl
add
les
xor
call
jmp
sub
popf
hlt
sbb
lods
movsb
add
lods
fiadds
addb
add
add
shlb
xchg
pop
xor
mov
xchg
sbb
out
adc
jmp
div
imul
je
cmpsb
add
sub
add
and
incl
rcll
adc
ljmp
fnstcw
push
cmp
add
cld
dec
enter
add
push
mov
add
mov
add
int
leave
adc
incl
decl
cmp
xor
jmp
daa
add
lcall
ljmp
jnp
pop
push
popf
sbb
add
dec
or
add
push
add
ficompl
push
add
sbb
add
pushl
call
add
mov
jmp
movsb
add
add
out
cmp
sbb
call
mov
lcall
or
sub
fistl
add
out
sub
add
mov
add
push
seta
add
add
and
lcall
je
mov
iret
mov
mov
shlb
loopne
sbb
popa
add
sbb
adc
std
jmp
add
xor
add
movsl
add
incl
and
jmp
insb
ss
je
add
mov
add
add
jle
add
repz
mov
add
decl
outsl
add
add
movb
imull
mov
aaa
push
dec
mov
add
cli
and
lcall
jbe
add
jmp
mov
add
add
fldcw
jae
pushl
push
clc
ret
add
add
jge
inc
add
ljmp
jl
add
xor
ljmp
or
ljmp
add
jne
call
inc
add
add
mov
add
add
add
add
leave
mov
fsts
mov
jns
leave
inc
add
shrb
mov
sub
ss
fsubrs
repz
int
and
sbb
push
int
mov
add
inc
add
rolb
push
addl
adc
lcall
pushl
jmp
add
pop
or
add
add
in
lock
addb
out
sbb
mov
adc
jmp
add
lcall
jecxz
stos
in
pop
mov
add
jle
roll
xchg
loopne
xor
cmp
hlt
dec
push
add
cmpsl
add
add
ds
pop
mov
pop
jno
pushl
sar
add
jmp
add
mov
add
sub
inc
add
mov
cmp
add
bound
call
add
pop
and
ljmp
into
shr
ljmp
add
jbe
movsb
add
mov
add
mov
lods
adc
call
adc
inc
add
inc
add
stos
nop
lahf
arpl
call
add
insb
jg
outsl
push
mov
add
adc
cli
fsubrl
jb
call
decl
arpl
pushl
jecxz
int
lods
inc
add
xchg
daa
add
add
mov
cmp
mov
push
add
daa
add
mov
add
xchg
nop
addb
or
or
adc
ljmp
add
push
lcall
dec
sub
sbb
adc
decl
add
add
or
leave
cmp
pop
push
add
add
lcall
jmp
je
add
pushl
add
out
test
add
sti
pusha
add
jbe
add
outsb
roll
imul
or
add
fsubs
jp
add
fbld
add
aad
pmaxsw
add
std
fldt
add
or
mov
aaa
movl
sub
shl
cmp
call
jbe
add
lahf
cmp
add
addb
cli
mov
xchg
pop
mov
add
push
add
sbb
and
call
add
sub
mov
mov
add
mov
lahf
add
jge
in
xor
ja
mov
add
cmp
outsl
mov
xchg
sub
jle
roll
push
hlt
mov
and
decl
add
mov
out
add
dec
sbb
leave
rol
add
add
outsl
push
sbb
dec
xchg
mov
add
decl
int
mov
mov
xchg
jle
pop
je
ret
add
add
std
inc
add
movl
add
pushl
cmp
lock
add
or
pushl
add
scas
jnp
adc
call
inc
add
add
add
mov
les
decl
jl
jl
test
leave
int
lea
sbb
fidivrl
push
add
mull
add
push
add
xchg
xchg
mov
cmp
add
mov
jle
xor
lcall
daa
add
pushl
xchg
mov
add
mov
push
add
xchg
and
add
dec
sub
icebp
into
repnz
inc
add
mov
rolb
jbe
addb
sub
or
push
add
fsubrp
mov
add
cmp
jne
sbb
mov
insb
adc
call
xlat
enter
jp
cmp
repnz
mov
add
sbb
add
sbb
je
loope
gs
leave
ss
add
add
nop
arpl
lcall
add
fisttps
dec
daa
add
or
pop
in
lds
sbb
jne
lods
dec
or
sub
pop
add
xor
call
sub
lea
stos
cmp
mov
push
outsl
sub
ljmp
ret
add
lods
mov
insb
add
push
add
hlt
jp
pop
jp
test
xchg
pop
out
add
call
add
adc
jmp
decl
jecxz
imul
jmp
add
or
add
cmpsl
add
add
movl
add
jmp
add
add
out
jl
jecxz
frstor
add
pop
cmp
add
add
xchg
pop
add
insb
push
adc
lcall
add
lea
ret
add
inc
add
add
mov
addb
jge
mov
add
or
add
aad
dec
stos
bound
call
add
dec
push
mov
imul
xchg
into
loopne
mov
rolb
mov
lds
xchg
das
and
add
xchg
sub
or
loope
lret
add
daa
add
les
bound
jmp
add
add
push
add
out
fwait
insb
lea
rol
add
add
addl
movb
add
in
sub
jae
jmp
add
and
call
decl
sbb
lcall
mov
add
aaa
enter
lds
aad
add
add
add
jg
pop
loopne
adc
lcall
out
cmp
call
add
ret
dec
jns
add
scas
push
data16
pop
sbb
aad
adc
add
insb
ret
add
mov
notb
cli
mov
jb
jmp
and
movsb
add
enter
add
add
add
adc
decl
add
add
pop
jae
push
mov
push
jnp
add
lahf
cmc
cmp
gs
add
ljmp
ret
add
decl
xchg
rolb
mov
fcom
mov
add
dec
sub
es
mov
in
mov
add
adc
lret
pop
movsb
add
add
fsubs
add
std
xor
decl
lcall
adc
jno
call
test
movl
test
xor
ljmp
add
jmp
jg
add
and
call
jmp
jle
mov
arpl
incl
daa
add
or
add
and
pushl
in
sub
in
lods
or
add
pop
loop
movb
push
jl
add
jne
add
lcall
xor
lcall
inc
add
pusha
add
aad
mov
stos
inc
add
scas
mov
add
add
inc
add
jmp
sub
add
out
mov
add
jmp
and
incl
add
pushl
jo
decl
ja
fucom
add
sub
arpl
jmp
push
add
movl
add
mov
pop
sti
mov
decl
cmp
data16
mov
js
ja
in
pop
jmp
test
outsl
negb
leave
addb
add
fwait
rolb
and
call
les
imul
mov
test
fsubrs
add
mov
daa
add
mov
adc
call
in
mov
stos
cmpsb
add
xor
stc
add
cld
pop
xchg
or
adc
decl
cmc
cmpsb
add
add
ljmp
call
xor
test
fimuls
cmp
icebp
mov
xchg
cli
add
add
add
mov
sub
add
clc
sub
cmp
popa
add
sbb
add
add
std
cltd
in
dec
sahf
mov
call
add
mov
sub
sub
inc
add
ds
add
sbb
sbb
outsl
and
adc
ljmp
dec
ljmp
hlt
fsub
add
dec
cmp
adc
lcall
mov
ljmp
xchg
enter
add
mov
mov
scas
push
push
add
out
cmc
ret
hlt
in
inc
add
rolb
fcoml
adc
lcall
mov
add
dec
mov
xchg
jb
lcall
addl
add
jae
decl
add
pop
loopne
stc
sub
cmp
imul
add
stos
cli
dec
ret
scas
inc
add
test
mov
mov
movb
inc
add
lods
notb
add
int
mov
add
mov
clc
fwait
and
fistpll
or
add
add
add
add
mov
addb
add
push
mov
xor
decl
clc
mov
repnz
call
std
push
add
pushl
or
les
sar
call
outsb
dec
ds
push
pop
aam
add
pushl
jnp
add
loop
int3
outsl
clc
cmpsl
add
jle
insb
pop
or
add
push
daa
add
call
push
cmpsb
add
paddsw
push
add
roll
js
lret
jecxz
pusha
add
push
add
and
jmp
popa
add
pop
popa
add
nop
push
lds
imul
add
ja
add
addl
test
mov
scas
push
divl
mov
mov
pop
test
xchg
cmc
push
stos
xlat
lods
sbb
jbe
sti
roll
cld
add
aaa
in
push
dec
ret
push
add
sub
jbe
add
movl
add
jns
pusha
add
push
mov
jecxz
in
cmp
imul
repnz
jae
pushl
push
and
pushl
call
jnp
mov
sub
in
push
in
insb
test
clc
das
add
jns
stos
ret
xchg
sbb
add
lcall
add
out
lcall
add
add
je
add
add
roll
add
mov
in
lcall
add
adc
jns
sub
addl
or
iret
repz
mov
decl
adc
push
jecxz
mov
or
add
mov
xchg
sub
adc
in
cmp
add
sub
add
in
pop
push
adc
push
push
add
inc
add
lock
and
jmp
dec
js
popa
add
or
pushl
add
jge
cld
sahf
xchg
and
push
cs
mov
add
loopne
and
incl
add
cmp
popa
add
mov
add
dec
addb
add
mov
ja
sbb
pushl
mov
xchg
int3
sarl
int
add
in
pop
daa
add
add
faddl
add
pop
negl
fisubl
cmc
jb
fadds
add
mov
add
dec
mov
jecxz
cmp
add
arpl
incl
add
inc
add
jecxz
bound
call
fwait
mov
jmp
jae
lcall
testb
jle
add
lods
inc
add
es
add
aaa
dec
cmp
aaa
lahf
les
sarl
cwtl
cmpsl
add
xchg
push
jp
add
movl
data16
add
testb
scas
sbb
and
lcall
pop
lds
jecxz
mov
ljmp
pushl
xchg
sub
xor
dec
mov
shlb
mov
add
cmp
pop
into
inc
add
movsl
add
and
pushl
daa
add
or
add
jo
fbstp
icebp
hlt
std
pop
jno
decl
inc
add
cs
add
loopne
sbb
mov
add
and
pushl
pop
stos
fsubrs
mov
and
fisttpll
add
sbb
mov
add
leave
push
add
add
add
xlat
push
add
cmp
bnd
add
fldcw
cli
xchg
xor
cltd
out
or
add
or
fsubrs
add
add
add
stos
stos
insl
cwtl
mov
outsl
sarb
cmp
pushl
add
push
xchg
cwtl
jnp
sti
lds
inc
add
aam
add
add
jb
mov
popa
add
mov
push
add
inc
add
adc
ljmp
daa
add
add
out
lds
jmp
or
add
sahf
icebp
cmp
mov
add
add
fcoml
jmp
cmp
cmp
mov
add
xchg
xchg
add
ss
add
sbb
inc
add
cwtl
cli
sti
call
add
shl
jecxz
add
push
add
int3
aaa
imul
add
mov
addb
adc
cmp
not
test
add
ljmp
xor
mov
mov
movb
mov
add
jb
ffree
add
add
xor
inc
add
call
movsl
add
repnz
add
inc
add
in
push
out
adc
and
mov
add
add
aad
ss
lds
scas
in
push
add
call
or
add
decl
add
add
decl
add
add
add
or
add
ljmp
ljmp
gs
add
add
add
stc
sub
aas
xor
jmp
adc
incl
jp
sbb
sub
push
add
iret
outsb
jl
pushl
mov
add
out
sub
add
pop
mov
and
call
or
add
add
xchg
mov
addb
add
std
xor
cltd
idivb
movb
sahf
mov
pop
and
pushl
add
call
mov
inc
add
iret
lcall
mov
add
mov
add
add
mov
add
add
repnz
fadds
call
mov
add
je
pop
loope
jp
add
outsl
pop
add
incl
add
call
sbb
or
add
out
cmp
loop
dec
mov
push
sahf
lcall
shlb
decl
add
incl
test
xchg
test
pop
pop
cmp
or
sti
in
pop
mov
lret
add
ljmp
add
jp
add
pushl
add
dec
sub
mov
add
cmc
dec
outsb
mov
cli
arpl
call
pushl
sub
or
xchg
or
add
cmp
daa
add
inc
add
add
cmp
fsts
sbb
call
add
test
push
add
cltd
ficomps
push
loop
mov
jp
add
jmp
xlat
inc
add
adc
pushl
jmp
add
lea
jmp
cmc
sbb
push
scas
jmp
out
add
les
jns
inc
add
xchg
cwtl
adc
fldenv
adc
add
call
adc
jmp
add
je
mov
jo
decl
xor
call
add
add
ljmp
leave
aaa
stos
mov
cmpsb
add
xchg
mov
xor
scas
sahf
rcrb
push
movsb
add
add
scas
mov
dec
test
bswap
inc
add
add
add
rcrl
out
fdivr
test
es
add
add
stos
add
add
add
imul
cli
cmp
add
add
lds
inc
add
ljmp
push
add
test
cmc
in
les
std
ret
add
inc
add
cmp
add
dec
mov
and
inc
add
add
push
add
mov
add
test
xor
aas
daa
add
idivl
pop
jmp
mov
add
fistps
mov
add
add
xor
inc
add
add
add
imul
mov
inc
add
adc
jmp
mov
adc
jmp
add
add
stc
inc
add
sub
movl
inc
add
or
sar
mov
add
add
aaa
xor
js
xchg
add
mov
aad
add
movsl
add
inc
add
or
push
add
lret
lret
insb
and
jmp
addb
add
mov
add
and
add
clc
aam
sbb
add
mov
add
xchg
mov
imul
stos
movb
data16
add
and
lcall
add
pop
add
mov
add
push
mov
add
jle
cmc
scas
addb
add
out
out
out
xchg
test
loop
push
mov
mov
add
xchg
int
xor
call
add
push
add
stos
rcrl
out
xchg
lahf
ficoml
add
sub
cli
mov
pushl
mov
xchg
jns
cs
mov
jae
incl
add
stos
std
adc
jmp
add
add
sbb
jbe
add
or
sbb
xchg
test
icebp
test
das
mov
jbe
inc
add
mov
ficoml
fst
mov
jnp
sbb
cmp
add
decl
xchg
cmp
xor
call
lcall
add
add
sbb
imul
add
ja
scas
lcall
add
add
cli
adc
sub
xor
fcomp
pop
pop
mov
add
call
int3
and
jmp
add
ret
sbb
add
incl
add
xchg
roll
mov
sbb
jae
jmp
push
sar
cwtl
test
add
aam
popa
add
cmp
add
lea
jns
xchg
jno
incl
pop
movsb
add
add
bound
call
call
cmpsb
add
lock
add
sbb
lret
addl
rolb
add
xchg
cmp
bound
incl
hlt
sub
jns
add
mov
add
add
add
movsb
add
xor
jmp
add
stc
push
add
dec
inc
add
add
jg
add
std
dec
bound
decl
xchg
add
or
notl
jbe
sbb
adc
fsubl
jmp
lcall
add
inc
add
xchg
rclb
in
xor
decl
roll
add
push
ds
add
fcmovb
add
aas
and
lcall
movl
push
popa
add
pop
add
fsub
add
add
repnz
add
jge
add
hlt
loopne
jns
gs
jle
add
lds
or
in
mov
jbe
add
rorb
aam
add
repnz
and
push
out
enter
das
lcall
add
add
les
push
lods
pop
add
ja
jl
add
jne
add
lods
insl
jecxz
jnp
add
fnstcw
add
jmp
push
add
addr16
addl
cli
sub
add
into
setae
add
lcall
and
test
out
adc
dec
or
add
mov
incl
dec
dec
pop
add
arpl
incl
add
add
lcall
lods
pop
stc
stc
xchg
enter
in
sbb
xor
ljmp
jecxz
pusha
add
xor
call
scas
adc
decl
inc
add
sub
add
xor
inc
add
mov
fcompl
xchg
mov
add
int
add
or
add
cmp
mov
add
mov
add
or
mov
mov
aas
pop
or
movb
bound
flds
sub
pushl
sbb
nop
adc
add
add
lret
jmp
add
pop
pop
xor
imulb
int
inc
add
xchg
mov
add
pop
jge
rolb
fwait
sub
jns
movsl
add
ss
rolb
test
pop
rolb
sub
add
push
jle
out
jle
scas
push
add
mov
incl
fiadds
add
sub
aam
stos
lcall
add
push
add
test
mov
rolb
adc
lcall
add
ljmp
add
jmp
add
sub
movsb
add
test
icebp
mov
nop
sbb
sbb
add
call
dec
inc
add
insb
mov
lret
inc
add
pusha
add
add
jmp
add
addl
add
lret
push
cmc
and
lcall
add
dec
cmp
ds
and
jns
add
add
mov
adc
incl
call
fcompl
mov
cmp
or
add
out
xchg
lods
push
xchg
jae
pushl
cli
xchg
cs
data16
xchg
dec
and
ljmp
add
inc
add
fmuls
leave
cmpsb
add
ja
dec
popf
mov
lcall
pop
cmp
add
add
push
add
add
push
push
addl
imul
dec
bound
decl
add
pusha
add
adc
decl
mov
test
sub
push
add
in
mov
incl
out
mov
inc
add
clc
testb
pop
add
xchg
mov
lods
movb
sbb
jg
movsb
add
add
add
add
enter
data16
add
lea
add
xchg
xchg
insb
xchg
pop
out
adc
sub
pop
push
ljmp
inc
add
xchg
call
sub
add
stos
addr16
add
add
add
sbb
faddl
add
aaa
addb
add
add
sar
std
stos
push
add
out
and
inc
add
movb
jmp
dec
outsb
nop
or
sbb
push
cmpsl
add
int
enter
cltd
inc
add
fsubrs
movsbl
cmp
mov
jmp
add
add
adc
call
ljmp
pop
aad
sbb
bound
cmp
sbb
out
bound
pushl
call
add
xchg
test
rcr
xchg
mov
adc
call
add
xor
ljmp
addb
imul
pushl
decl
outsb
mov
pushl
out
rolb
add
dec
in
adc
call
pop
jno
fistps
cwtl
or
dec
xor
lcall
fidivrs
inc
add
ret
add
test
add
mov
filds
add
adc
jmp
add
decl
pop
xor
lcall
add
iret
aam
add
xlat
xchg
outsb
fwait
mov
add
out
adc
jmp
jmp
mov
scas
pop
add
pushl
add
jmp
add
pushl
add
test
adc
pushl
add
and
incl
xchg
mov
scas
lods
fbstp
or
add
incl
stos
std
jo
jmp
add
add
stos
loopne
pop
rolb
fadd
add
add
out
mov
sub
add
jge
cmp
lcall
rorb
jp
mov
jge
inc
add
inc
add
incl
add
fstpl
or
add
push
mov
in
mov
arpl
lcall
jecxz
call
test
add
cmpsb
add
xor
jmp
add
rclb
lcall
add
mov
add
ds
jge
jbe
mov
mov
add
add
xchg
decl
cltd
xchg
dec
pop
je
and
push
and
call
add
jne
ss
add
call
and
lcall
add
insb
mov
mov
test
add
call
add
decl
mulb
add
add
or
add
add
dec
cmp
popf
mov
add
pop
inc
add
lret
mov
add
mov
push
and
lahf
popf
insl
and
ljmp
jmp
add
ljmp
adc
jmp
cmc
addl
jns
neg
mov
xchg
pop
add
decl
dec
mov
movl
fldt
lods
in
das
pop
lret
arpl
jmp
mov
add
sbb
add
lds
jns
jne
or
add
inc
add
ljmp
mov
add
or
add
mov
jnp
mov
pop
push
and
inc
add
call
add
pop
dec
in
test
fisttps
movb
add
shlb
jge
add
add
inc
add
mov
nop
jns
add
jp
jecxz
loopne
addb
mov
xchg
jecxz
sbb
sub
mov
jb
push
pop
ret
add
les
scas
cmpsl
add
add
mov
popf
mov
add
push
add
xchg
jae
ds
das
pushf
sub
add
incl
add
addb
ds
ja
add
imul
pop
mov
add
jg
or
sub
adc
pushl
dec
test
test
inc
add
lret
xor
jmp
mov
add
out
les
arpl
decl
add
adc
mov
call
or
aaa
js
sbb
add
and
lcall
jecxz
pop
xor
add
add
pop
jge
add
xchg
mov
mov
lcall
mov
ror
cltd
xor
jmp
aam
and
cmp
mov
xor
decl
insb
add
add
lds
pop
int3
lods
xchg
pop
add
ljmp
stos
add
inc
add
add
test
add
data16
dec
rclb
dec
jbe
cmp
inc
add
cwtl
les
sbb
fists
add
jns
mov
pop
decb
add
imul
add
shll
lods
popf
mov
add
and
fimull
loope
lock
shlb
add
out
les
cmpsb
add
sahf
inc
add
scas
xor
jmp
lcall
pandn
add
mov
add
add
xor
add
add
call
add
lods
xor
pop
sbb
movsl
add
fwait
jns
add
popa
add
xchg
roll
add
push
add
imul
call
cld
inc
add
lea
push
add
mov
filds
or
in
jbe
add
mov
mov
add
cmp
mov
sub
add
add
xchg
ja
add
jns
pop
movb
les
or
out
adc
cli
push
aad
insb
pop
fucom
add
cmp
mov
std
add
pushl
adc
mov
cmp
mov
mov
add
je
fisttpll
xchg
roll
add
add
aad
add
add
add
xor
ljmp
or
adc
dec
addl
movsb
add
add
ds
adc
pushl
mov
inc
add
add
rolb
insl
insl
xor
xchg
pop
jbe
cltd
pop
mov
pushf
jg
lods
repz
push
sub
add
test
adc
incl
cmp
jge
cmp
je
add
lcall
movsb
add
pop
xchg
mov
mov
popa
add
mov
leave
js
add
add
ljmp
inc
add
in
pop
adc
ljmp
pop
inc
add
cld
jb
call
add
stc
mov
xor
decl
sbb
jbe
adc
sahf
sbb
jecxz
ds
roll
push
insb
sbb
xor
rclb
add
sbb
jb
call
or
clc
lods
outsl
xchg
out
shrb
pushl
sub
xchg
stos
repz
add
inc
add
xchg
jae
push
xchg
in
in
jnp
push
sub
jg
add
shrl
mov
add
mov
pop
insl
sbb
stos
mov
mov
cwtl
push
jge
dec
hlt
pop
xor
ljmp
std
and
jnp
ds
push
movsl
add
decl
out
fwait
insl
sub
pop
imulb
mov
pop
sub
add
stos
mov
dec
push
lock
jmp
add
lock
fstpl
xor
out
add
pushl
add
dec
jnp
push
add
mov
xor
decl
push
pop
fcmovnbe
xor
decl
pop
xor
call
ja
pop
pushf
lods
roll
add
add
cmc
mov
movl
add
loop
movl
inc
add
jo
call
mov
ret
adc
incl
pop
cmp
repz
nop
insb
repz
incl
lcall
add
add
pop
add
add
and
ljmp
int3
dec
xlat
stos
jb
lcall
fsubl
in
cmp
int3
lock
decb
arpl
call
sbb
bound
decl
or
add
lahf
leave
mov
and
pushl
in
mov
jmp
add
add
mov
push
arpl
jg
push
cld
mov
stc
adc
ljmp
push
in
insl
not
aas
lret
add
fcomps
pop
rolb
dec
mov
add
add
add
nop
repnz
jb
call
push
sbb
loope
mov
xor
incl
add
xor
pushl
add
das
xor
pushl
add
mov
xor
ljmp
rolb
add
pop
cmp
jne
and
jmp
pop
test
mov
ret
add
cmp
add
jnp
testb
sbb
add
int
pop
test
mov
pop
sub
add
std
adc
pushl
lcall
add
repz
add
and
incl
jmp
mov
and
ljmp
add
outsb
insb
outsl
lahf
mov
mov
xlat
adc
ljmp
rcl
pop
out
pop
mov
add
or
les
rolb
add
add
mov
movb
sbb
mov
fidivrs
sti
cltd
xchg
roll
add
adc
pushl
cwtl
and
jmp
call
pusha
add
test
sub
lcall
add
icebp
out
scas
out
dec
aaa
cli
mov
add
dec
sub
call
add
dec
inc
add
push
add
repnz
xor
add
mov
rolb
pushl
add
lcall
push
add
inc
add
push
call
mov
push
inc
add
scas
inc
add
pop
pop
int
xor
jmp
jnp
add
jnp
xchg
pop
insl
mov
add
inc
add
push
add
shl
add
add
lcall
add
iret
les
add
lcall
xor
jmp
add
jecxz
dec
fs
add
inc
add
jl
sub
sahf
add
lcall
std
jb
aas
xchg
mov
add
stos
movb
add
cld
push
push
addb
js
leave
pop
mov
fadds
add
add
repnz
mov
adc
add
sub
cmp
test
ljmp
dec
xchg
inc
add
fstl
pop
nop
push
fsub
add
jae
incl
ljmp
add
pop
lret
dec
fbstp
std
cmp
scas
or
jbe
add
push
add
aad
out
or
add
test
fldt
jne
add
add
add
jge
jg
adc
in
mov
jecxz
out
cmp
loope
mov
add
enter
dec
cmp
sbb
add
adc
pushl
out
ja
pop
rclb
inc
add
sahf
enter
roll
repnz
pop
add
adc
mov
cltd
mov
dec
sbb
add
xchg
jbe
add
repz
add
inc
add
decl
or
mov
add
add
mov
add
faddp
add
stc
xor
adc
call
mov
adc
aas
pop
pop
jg
outsb
loop
jbe
add
rolb
cmp
call
push
add
addb
fistl
add
jmp
add
lret
add
ljmp
outsb
iret
js
loope
lcall
add
mov
cmc
adc
incl
pop
mov
insl
jno
mov
mov
add
call
lock
add
mov
cmp
add
push
xchg
jge
leave
inc
add
loopne
hlt
das
inc
add
add
add
mov
rcrb
sete
add
xor
js
cli
dec
pop
xchg
leave
pushf
rcrl
jge
cmp
mov
addb
xor
lcall
add
sub
inc
add
add
sub
sub
js
cmp
add
das
inc
add
cmc
sbb
repnz
sbb
add
lock
add
lods
aas
adc
jmp
add
js
cmp
add
fwait
pop
das
out
push
imul
icebp
dec
adc
lret
inc
add
fcmovnu
lock
repnz
cli
jns
mov
mov
testl
add
jno
ljmp
rolb
jmp
jecxz
fld
add
push
pop
pop
jo
pushl
pushl
pop
pop
movl
jo
jmp
add
jge
stc
inc
add
add
and
decl
add
movntq
push
add
daa
add
cltd
insb
adc
pushl
adc
decl
add
jp
pop
xchg
outsl
aaa
gs
add
ljmp
add
add
add
out
jge
jg
add
jnp
xchg
fmuls
add
popa
add
mov
jge
add
push
add
ja
add
sbb
iret
loope
xchg
mov
ret
xchg
add
and
ljmp
ss
mov
lahf
test
jbe
std
dec
push
add
xlat
and
out
and
jmp
add
scas
add
call
lcall
stos
cmp
sub
fdivrl
lahf
cmp
add
sahf
int3
jg
sbb
mov
js
push
roll
jns
add
fnop
lea
faddl
mov
repz
add
fdivl
inc
add
das
push
movsb
add
popa
add
pop
addps
cmpsb
add
add
call
stc
mov
fldt
push
add
and
jmp
add
jle
dec
lret
cmp
cli
mov
jge
add
mov
add
jl
add
pop
add
pop
std
xlat
imul
add
cmp
decl
add
adc
jmp
inc
add
sbb
cmpsl
add
push
mov
add
sbb
xor
xor
add
insb
add
add
dec
aam
add
imul
in
fs
add
loop
jp
jecxz
mov
idivl
dec
lock
add
push
add
add
decl
aad
mov
bound
ljmp
xor
cld
cmovnp
roll
dec
clc
jle
popa
add
sbb
or
aas
fcomps
jo
call
dec
and
inc
add
add
mov
pop
mov
pop
cltd
dec
push
add
or
or
ja
add
popa
add
outsb
sub
add
ret
movsl
add
out
addb
loope
mov
sbb
add
mov
add
add
inc
add
aaa
inc
add
aas
jle
addl
pop
test
and
call
call
out
lods
xor
incl
add
in
sbb
jae
mov
add
push
add
mov
pushl
cmp
inc
add
mov
fstps
lock
add
inc
add
mov
lods
in
cwtl
test
mov
adc
fsub
add
fistl
sub
add
adc
ljmp
ret
add
divl
ljmp
jmp
faddl
fucomip
jb
inc
add
loop,pt
ds
adc
push
push
add
sub
mov
xlat
inc
add
addb
inc
add
add
scas
in
sbb
add
addb
add
ret
inc
add
add
les
push
jl
in
add
add
pop
jge
pop
lret
inc
add
ret
add
lea
std
jo
jmp
add
pop
dec
mov
pop
mov
and
push
out
mov
sahf
push
add
add
leave
fwait
out
mov
add
nop
cmp
jp
cld
addb
add
fnsave
jg
or
jns
inc
add
add
outsb
nop
mov
movsl
add
mov
stos
lcall
push
add
xchg
xor
push
xchg
and
inc
add
jbe
sub
xchg
jo
call
add
mov
jo
cmp
stos
test
add
mov
fmuls
or
push
push
add
fs
stos
movsb
add
mov
add
push
add
pop
loopne
and
ljmp
ljmp
mov
pushl
lcall
add
insb
sbb
fsub
add
add
add
call
add
fadds
inc
add
add
add
mov
jae
jmp
dec
fdivl
out
pop
cltd
ret
add
adc
jmp
add
imul
outsb
pop
add
add
sbb
ljmp
ljmp
dec
push
add
mov
ljmp
add
addl
add
xor
pushl
add
add
push
sub
in
imulb
jae
call
push
cmp
add
dec
std
push
add
js
add
das
xchg
or
insb
or
mov
add
xchg
aaa
ds
inc
add
cld
dec
outsb
inc
add
call
cmpsb
add
and
lods
imul
insl
scas
fadd
add
push
dec
loope
adc
mov
add
xlat
or
cmc
push
data16
pop
adc
pushl
ljmp
lahf
int
mov
add
add
scas
add
mov
pop
fcmovb
add
mov
call
jmp
fsubp
add
add
ret
cmp
rolb
idivb
add
adc
call
xchg
notl
rolb
add
add
bound
ljmp
jp
aas
das
pop
jl
add
add
jns
inc
add
mov
sub
mov
mov
xchg
iret
in
aad
mov
xlat
in
lds
gs
inc
add
adc
pushl
in
enter
pop
mov
add
pop
fistl
in
mov
add
loope
pusha
add
add
ret
add
cmpsb
add
xchg
outsb
data16
jp
jb
ds
loopne
aam
xchg
pop
loope
mov
movb
or
incl
add
jle
xchg
js
add
mov
lret
mov
in
xchg
ret
xchg
scas
push
test
sub
add
add
cmc
mov
dec
fsubrl
pop
add
div
imul
jecxz
cmp
add
mov
pop
adc
lcall
add
movsl
add
lcall
adc
scas
ja
push
jo
call
lcall
rolb
add
jle
add
adc
decl
pop
shrb
js
add
mov
leave
scas
data16
add
push
out
xor
lcall
cwtl
stos
pop
mov
add
pushl
add
cmpsl
add
xor
dec
pop
adc
decl
shlb
add
call
add
in
xchg
mov
adc
call
jmp
dec
stos
dec
stos
pop
into
insb
mov
add
add
divl
fstpt
add
je
in
mov
jecxz
push
jne
sbb
insb
dec
nop
xchg
and
lcall
bound
aas
cld
cli
sub
addb
mov
addb
add
fstpt
mov
add
stos
sub
fbstp
add
incl
add
cmpsb
add
pop
cmp
dec
addb
add
push
add
add
pushf
add
add
push
add
hlt
loop
and
call
sahf
jb
jns
pop
mov
rolb
and
decl
fld
add
repnz
add
sahf
mov
call
jns
add
sub
lods
repnz
add
adc
push
jl
add
ljmp
or
xor
jmp
mov
or
filds
jmp
in
cltd
jnp
ret
add
add
cmc
mov
add
add
ljmp
pop
and
lcall
add
ljmp
movl
add
negb
ds
xchg
ja
in
xchg
push
push
sub
adc
add
sub
jle
or
hlt
cli
pushf
movsl
add
xchg
mov
lcall
xor
add
or
add
add
add
decl
mov
pusha
add
adc
in
fsubs
sbb
mov
jo
incl
add
lcall
inc
add
xor
lcall
sub
and
push
insb
dec
push
add
ljmp
or
dec
lahf
jae
call
hlt
bound
jmp
add
mov
add
push
mov
add
mov
add
jp
adc
inc
add
dec
fisubs
cltd
fwait
insb
fiadds
add
out
pop
cmp
or
add
sbb
add
ret
sti
repz
add
push
add
xchg
lds
push
or
xchg
add
lcall
dec
mov
pop
push
enter
xor
sbb
jg
add
add
jmp
mov
imull
add
inc
add
add
push
daa
add
repz
fstpl
mov
movl
jg
nop
addb
add
add
cmp
add
cmp
add
xchg
mov
aam
js
dec
movl
jp
add
pop
pop
loope
testl
dec
inc
add
incl
add
xor
dec
roll
jp
loope
jp
dec
stos
cli
jle
jo
lcall
add
call
jae
jmp
add
ljmp
push
add
int
xor
ret
add
add
decl
add
pusha
add
sbb
jo
jmp
add
mov
add
add
faddl
int3
movsb
add
jo
call
pushl
ds
xor
pop
or
and
ljmp
inc
add
rorl
fadds
lcall
add
mov
add
add
lret
xor
call
fucompp
or
cltd
and
call
and
mov
add
cmp
add
add
insb
lock
ljmp
mov
test
or
sbb
add
ficoms
call
jo
jmp
add
mov
add
jo
decl
ret
add
add
push
xor
lcall
or
mov
outsl
repz
ljmp
add
out
add
jmp
incl
pushl
add
xor
jmp
add
cltd
mul
add
add
jb
inc
add
fisubl
pushl
pushl
add
or
add
aas
pushf
sub
pop
or
adc
pushl
inc
add
or
repz
mov
jmp
jecxz
mov
add
sahf
mov
jl
add
add
call
jmp
mov
cmp
add
decl
test
add
xor
pushl
add
push
add
inc
add
pusha
add
lods
ret
add
arpl
lcall
lcall
add
out
xchg
enter
aaa
push
push
add
ljmp
das
cmp
add
dec
push
add
je
xor
mov
lods
pop
out
lds
popf
or
inc
add
push
cmp
mov
add
lds
stos
imul
call
sbb
jo
std
adc
mov
out
cld
aam
mov
mov
push
add
jne
dec
pusha
add
dec
cld
fimuls
daa
add
xchg
jg
and
call
mov
scas
movsl
add
push
sub
rolb
pop
rorl
add
add
add
fbld
xchg
shlb
push
add
pop
pop
rolb
cmp
lock
pop
adc
js
add
fwait
jnp
cld
lret
add
stc
lahf
cli
cmpsl
add
add
pop
out
fadds
jmp
add
add
aam
pop
imul
fs
add
xor
incl
test
incb
arpl
cmp
pop
movsb
add
cmp
push
add
cmp
add
jae
lcall
add
dec
sbb
in
into
lods
adc
movsl
add
cli
cs
jl
pushf
pop
mov
ret
add
add
mov
adc
push
sbb
add
add
out
xor
add
add
pop
xor
call
cmpsb
add
mov
insl
arpl
call
movsb
add
add
lcall
dec
imul
call
jle
add
add
pop
add
jmp
add
add
add
mov
clc
add
add
dec
or
ds
add
cmp
push
repnz
ljmp
sbb
imul
adc
lcall
inc
add
ret
add
sbb
add
jle
add
inc
add
ss
incl
add
cltd
cli
add
jmp
decl
inc
add
cmc
jbe
mov
inc
add
dec
inc
add
adc
fldcw
pop
data16
aas
lcall
lahf
and
pushl
dec
lods
idivb
sbb
add
mov
sub
xor
add
inc
add
out
scas
cmp
add
cwtl
cmp
add
enter
pop
add
inc
add
addb
add
mov
add
call
call
mov
push
add
cmpsl
add
in
inc
add
leave
mov
mov
add
dec
or
movsl
add
mov
jl
movsl
add
push
movb
pusha
add
addl
inc
add
jne
ljmp
add
push
add
xor
add
xchg
add
pushl
add
and
fcoml
add
ret
add
add
push
or
cmc
cmpsb
add
mov
pushl
add
cwtl
lock
add
lock
addl
adc
nop
push
add
add
mov
ja
add
lcall
mov
mov
mov
out
jo
sti
test
out
inc
add
addb
leave
adc
ljmp
repnz
add
cmp
pushf
cmp
mov
add
add
movl
jl
mov
add
iret
dec
addb
xchg
push
mov
push
dec
roll
add
add
add
rolb
jmp
add
lds
mov
ljmp
or
adc
ljmp
lcall
not
popa
add
or
scas
bound
ljmp
mov
jl
imul
dec
mov
stc
lcall
dec
jo
pushl
decl
cwtl
movb
addb
roll
stos
nop
xor
add
sub
add
call
add
add
scas
mov
ret
sti
dec
int
add
mov
adc
mov
ficomps
cmp
jns
add
lods
fwait
in
fdivr
je
pop
fsubl
mov
popa
add
movl
xor
call
stc
mov
add
add
out
shrb
cltd
and
fistpll
ljmp
ljmp
mov
je
add
loope
aam
arpl
push
ss
std
adc
pushl
hlt
fsubp
add
add
in
ljmp
lds
addb
push
xchg
sub
mov
bound
pushl
add
insb
pusha
add
adc
decl
add
call
cmp
mov
dec
dec
mov
lcall
and
cmp
inc
add
add
xor
js
fldl
cmp
add
aad
ja
and
pushl
add
jmp
jmp
add
scas
dec
into
int3
fnstcw
add
mov
add
add
incl
add
in
outsb
scas
cs
decl
and
pushl
add
add
mov
xchg
std
cld
sbb
addl
sub
dec
sbb
inc
add
shl
add
add
pushl
add
add
mov
add
xlat
or
sahf
daa
add
mulb
add
sbb
lahf
jmp
sbb
pop
jnp
cli
aad
in
push
add
inc
add
lcall
aam
add
dec
pop
adc
ljmp
imul
add
and
pushl
lcall
cmp
push
repnz
add
call
adc
lcall
jnp
insl
pop
stos
push
add
xchg
stc
loope
mov
add
repnz
add
xchg
insb
iret
dec
push
jp
add
clc
cmp
mov
shlb
inc
add
add
incl
add
add
lock
rcr
xor
pushl
add
clc
rolb
data16
addb
add
xchg
push
outsb
addb
adc
mov
xlat
lock
pop
ja
xchg
jne
jmp
add
add
sti
mov
pop
loope
cltd
hlt
neg
push
add
rorl
incl
addl
push
add
idivl
pop
add
leave
rcrb
incl
add
leave
push
add
dec
dec
jb
call
clc
lods
jp
jno
jle
pop
mov
push
inc
add
or
add
add
out
sub
insl
dec
pop
adc
ljmp
loop
push
add
lcall
add
dec
push
xchg
enter
xor
incl
xor
add
inc
add
add
jmp
add
push
sbb
fucom
add
aas
sub
jae
incl
add
and
lcall
xor
push
cli
aam
aaa
loope
outsl
in
push
add
neg
cmp
incl
decl
sbb
pop
push
add
mov
add
pop
jae
push
mov
call
or
and
stc
mov
cwtl
int
add
ret
add
add
stos
pop
xor
pushl
lea
sbb
rolb
add
add
push
shrl
xchg
outsl
movl
add
sbb
add
movl
xchg
int
xchg
xor
incl
cld
mov
add
add
and
jmp
add
add
add
fisubs
add
pop
cmp
xchg
pusha
add
push
add
test
ja
push
add
pushf
adc
decl
mov
or
ljmp
into
pop
add
add
sub
loopne
pop
xor
inc
add
popf
sbb
add
add
ret
jae
incl
jmp
add
scas
out
mov
jp
jecxz
jl,pt
lds
movsb
add
cmp
add
cs
add
adc
add
repz
xor
lcall
add
out
mov
add
insl
pushf
fst
movb
or
mov
stc
dec
jg
jge
add
inc
add
or
add
add
add
xor
add
icebp
cwtl
pop
call
add
out
das
and
call
sbb
add
and
cmp
ficompl
sbb
pop
inc
add
jg
arpl
incl
data16
jg
or
call
jns
push
fsts
mov
ljmp
add
add
popf
xor
cmp
mov
jb
pushl
jl
mov
and
xor
pushl
adc
js
das
insl
pop
mov
roll
add
push
cli
dec
sti
les
sti
inc
add
add
inc
add
les
push
push
mov
fbld
cs
enter
xchg
out
movsl
add
mov
add
call
call
out
daa
add
or
add
pop
repz
pusha
add
cld
jl
add
push
xchg
sbb
movb
mov
pop
xchg
js
add
rol
add
push
jge
lahf
addb
movl
ja
push
add
and
aas
leave
pop
dec
scas
mov
stc
imul
xor
add
cmp
add
ret
add
in
cwtl
mov
xchg
dec
sub
fwait
mov
mov
clc
addb
test
xchg
push
mov
hlt
jecxz
loop
fcmove
lea
cli
in
add
xor
jmp
add
test
sub
push
add
fcmovu
cmp
add
call
les
mov
div
iret
pop
cmpsb
add
add
mov
mov
sbb
pop
scas
cs
mov
push
add
add
or
add
or
xlat
cmp
jge
add
test
ja,pt
mov
stos
mov
and
ljmp
sarl
out
jl
sbb
sub
add
addl
mov
sub
xchg
mov
jnp
add
lcall
add
mov
add
pushf
shlb
call
fnstcw
stc
mov
push
add
jp
add
add
popa
add
sub
push
movsl
add
add
ja
lea
decl
fstl
add
or
jge
test
stos
and
call
push
push
xchg
pop
test
mov
incl
add
lods
add
loop
stos
xchg
icebp
pushf
mov
add
call
mov
sti
and
and
lcall
add
or
aas
lods
icebp
mov
push
sub
add
ds
inc
add
scas
pop
out
aas
movb
add
decl
insb
repnz
jg
add
imul
lods
push
add
fistpll
add
add
sub
add
or
cmc
xchg
stos
push
jo
jl
mov
test
mov
sti
stc
dec
lret
sub
insb
mov
add
adc
inc
add
ljmp
fs
add
clc
xchg
insl
sbb
mov
add
call
call
sar
lods
pop
pop
mov
call
or
fnsave
add
addb
cmpsl
add
lcall
iret
and
call
hlt
jno
lcall
hlt
mov
xor
int
roll
xchg
fldcw
popf
lds
dec
pop
test
mov
lods
cltd
xchg
mov
fsubl
add
test
push
add
push
add
xlat
inc
add
jmp
lods
outsl
add
call
icebp
or
add
sahf
std
push
add
xlat
xchg
add
clc
outsb
aam
add
test
in
cmpsl
add
jecxz
shll
add
xchg
out
xor
decl
rolb
ljmp
add
in
jp
add
fadd
add
ljmp
addb
adc
decl
js
hlt
mov
cmp
add
add
movl
add
pop
add
call
ljmp
icebp
popa
add
int
jns
stc
push
xor
jnp
xor
lcall
or
add
fxch
aaa
icebp
les
aad
cmpsb
add
add
inc
add
xchg
rep
das
push
lds
test
call
test
cmc
or
push
ror
push
add
sbb
rcl
push
mov
data16
call
dec
mov
add
xlat
icebp
push
add
push
add
and
add
enter
mov
js
add
add
add
imul
add
fsubs
push
or
or
add
loope
and
fmuls
pushf
adc
lcall
add
rolb
scas
fstl
seta
fsts
fcomip
xchg
js
out
jbe
pop
dec
push
xchg
push
add
add
outsb
fcmovnu
sub
add
call
sub
add
or
xor
add
dec
jl
push
and
cmp
add
ficomps
add
push
mov
add
movsl
add
add
shlb
add
or
pop
out
mov
lahf
fcmovnbe
stos
add
ljmp
add
mov
add
jmp
pushl
add
pushf
sub
add
add
popl
xchg
in
sahf
stos
icebp
xor
ljmp
jmp
add
sti
jo
lcall
movl
add
inc
add
push
add
fmul
or
jmp
add
rol
add
add
sub
push
add
lock
cli
call
ss
mov
or
lock
inc
add
repnz
add
aas
jmp
jo
decl
push
ret
add
aad
sbb
push
add
add
add
add
add
fimull
enter
jle
insl
cli
gs
add
mov
mov
jmp
test
ss
mov
inc
add
sub
inc
add
or
add
pop
add
add
ret
adc
xor
jmp
add
push
add
mov
shl
mov
mov
js
jecxz
add
xchg
in
jmp
add
js
add
mov
mov
xchg
mov
add
jp
scas
cwtl
scas
out
push
lcall
incl
mov
xchg
and
jg
popa
add
js
add
xor
jmp
incl
add
mov
mov
add
daa
add
pop
and
push
cmp
add
mov
aaa
xor
pushl
pop
in
mov
popf
xor
inc
add
and
ljmp
mov
aaa
jl
cwtl
hlt
push
sub
jmp
mov
add
pop
xchg
pusha
add
cmp
jmp
add
ret
inc
add
or
add
lea
arpl
jmp
pop
pop
jge
add
inc
add
leave
inc
add
adc
jl
imul
imul
sahf
je
mov
addl
loope
leave
ret
add
fisttpl
add
add
decl
outsl
adc
lcall
xor
push
add
fiaddl
je
add
lods
decb
add
add
push
mov
add
int
in
and
jmp
push
fadd
add
cld
scas
popa
add
jae
decl
push
popa
add
cmp
test
mov
add
pop
xlat
mov
add
sub
dec
fcomps
aad
test
add
incl
decl
xor
xchg
sahf
lret
into
mov
pushl
jo
jmp
add
xchg
scas
arpl
decl
call
add
push
add
cmpsl
add
fld
add
add
adc
add
push
ret
push
push
xchg
cwtl
int3
lods
sub
add
xchg
out
addl
add
add
add
add
inc
add
or
add
add
jns
sub
add
jp
lods
jle
dec
and
decl
popa
add
inc
add
aam
mov
pop
or
add
scas
push
jns
cmp
aam
mov
stc
in
xchg
xchg
xchg
enter
ret
pop
push
and
insb
cmpsl
add
out
cmp
jmp
add
sbb
rcrl
or
sub
add
inc
add
mov
add
rcr
arpl
call
jmp
add
add
pusha
add
cli
mov
ja
addr16
addr16
add
add
outsb
addl
lcall
bound
jmp
lret
lret
add
popf
ja
add
or
push
add
syscall
add
add
or
xchg
into
sbb
jo
decl
dec
add
add
add
sub
pop
nop
popf
pop
insb
jns
outsb
test
pop
imul
add
daa
add
add
jb
call
movsb
add
add
sub
add
pushf
xor
pushl
add
ret
les
add
push
inc
add
add
xchg
data16
pop
shlb
mov
std
imul
cmc
cmc
ljmp
pmulhuw
sub
jmp
add
add
popf
fcmovne
es
ja
or
enter
lret
int3
jl
xchg
int
in
fisubl
ljmp
lea
push
add
insb
and
jmp
decl
leave
test
lods
pop
xor
rorl
aad
test
xchg
push
add
xchg
jecxz
out
jp
add
sub
adc
dec
and
lcall
cmp
dec
mov
leave
inc
add
aad
add
lahf
push
mov
and
pushl
xor
call
fsubrs
insl
jl
dec
adc
in
pop
sbb
pop
ret
scas
xchg
sbb
add
mov
inc
add
sub
out
jno
call
jmp
add
sbb
sahf
bound
lcall
addl
call
add
arpl
ljmp
mov
mov
icebp
hlt
sub
add
add
mov
mov
lcall
add
push
add
mov
mov
add
add
fmuls
add
push
mov
add
add
xor
incl
add
jmp
sti
xor
sti
jg
add
loop
push
sbb
movb
add
push
add
push
loop
add
inc
add
adc
lcall
sub
add
cmpsl
add
xor
add
add
cltd
lock
xchg
rolb
add
add
lcall
add
incl
repz
frstor
movb
lods
popa
add
mov
dec
jp
add
fildl
add
hlt
icebp
popf
sar
dec
jne
jo
pushl
mov
nop
fsubp
add
or
pushf
jns
add
lock
movb
add
add
pop
adc
incl
add
dec
add
pushl
push
add
xchg
cli
repnz
mov
lods
push
scas
xlat
dec
daa
add
mov
and
push
in
push
add
mov
add
add
add
out
mov
lret
adc
incl
jmp
add
or
inc
add
jle
push
ds
mov
add
sar
adc
decl
inc
add
push
rcll
jle
add
add
pop
add
pushl
add
add
sti
xor
or
lods
sub
add
mov
addb
movsb
add
push
scas
jae
jmp
cmpsl
add
ret
add
shll
jmp
data16
call
cmc
ja
xor
sub
add
or
test
cmpsb
add
push
push
add
pop
out
pop
addb
sub
cmp
add
repnz
mov
mov
cmp
mov
mov
jmp
sub
sub
add
adc
call
ljmp
pop
and
inc
add
xchg
arpl
ljmp
in
data16
cmp
inc
add
sbb
mov
push
add
pop
xchg
stos
testb
in
test
add
out
loope
pop
pushf
test
and
cmp
fwait
test
clc
fidivl
add
call
push
and
std
xchg
in
add
jmp
ss
cmp
inc
add
add
mov
xchg
mov
add
jbe
adc
out
jecxz
cli
or
call
in
add
jmp
add
xchg
fmuls
imul
add
dec
sbb
in
aam
sub
jnp
add
rorl
add
add
roll
sub
jb
jmp
add
cld
xchg
test
push
add
pushl
lcall
adc
call
fwait
mov
addl
je
data16
ljmp
add
add
dec
jecxz
jno
push
fcompp
xor
ljmp
cmp
decl
mov
cmp
inc
add
mov
mov
aam
jns
add
imul
mov
add
jo
jmp
add
fld
add
addl
add
mov
add
in
adc
call
add
sarb
jne
mov
adc
cmp
ljmp
call
scas
aad
loopne
add
add
lahf
popf
fwait
push
add
push
jp
insl
inc
add
xor
push
call
sbb
pushl
add
jl
mov
pusha
add
or
push
mov
in
cmp
sbb
lock
popa
add
cwtl
lds
jo
pushl
add
mov
int3
iret
outsl
icebp
jmp
pop
inc
add
cmp
add
shll
add
xchg
lret
jbe
sahf
data16
cli
mov
jmp
icebp
mov
add
scas
inc
add
add
popl
xor
test
pop
nop
push
add
mov
and
outsl
pop
xor
adc
inc
add
in
fbld
aas
leave
nop
loope
fcoml
add
scas
pushf
test
mov
aam
add
add
in
sbb
addb
dec
cmp
add
cmp
imul
mov
cmp
inc
add
in
push
addl
add
cltd
in
pop
shll
add
or
ja
add
add
push
pop
or
lcall
ret
popf
test
fsubrp
push
add
or
lcall
lcall
mov
adc
call
add
mov
call
bound
incl
add
neg
out
xchg
xor
dec
cmp
add
ljmp
stos
dec
mov
ret
add
movb
lds
clc
hlt
pop
daa
add
ss
inc
add
sar
sub
rorb
nop
sbb
jae
fistpll
std
adc
ljmp
rcll
push
addl
push
add
inc
add
add
jo
decl
or
add
cli
pop
dec
rorl
into
add
inc
add
push
mov
repz
add
mov
add
add
add
add
call
sub
or
rolb
lea
add
xchg
int
lods
sbb
shr
xchg
in
mov
je
add
xor
jmp
add
out
pop
add
filds
pop
sbb
iret
mov
add
cwtl
adc
ljmp
mov
in
jle
or
dec
pop
stos
mov
mov
add
push
add
jg
mov
add
jecxz
adc
add
add
add
sti
add
jg
xchg
sahf
jecxz
jecxz
and
lcall
sub
decl
fxtract
movb
test
push
push
add
into
popa
add
or
ret
add
add
in
fwait
rcrb
call
movl
addb
add
imul
movsb
add
sub
add
pusha
add
sub
out
data16
inc
add
mov
arpl
pushl
ljmp
mov
mov
add
cmp
sbb
lods
or
jbe
xchg
cmp
pushl
into
xchg
movsb
add
ret
jl
mov
add
lock
add
mov
and
cmp
add
sub
stos
push
add
lcall
sub
adc
psrlw
mov
add
out
xor
decl
incl
add
shrb
add
add
lcall
add
add
movsl
add
ljmp
add
jnp
add
jae
inc
add
mov
addb
add
mov
add
add
out
adc
decl
sub
add
rolb
add
lret
xchg
test
ljmp
adc
ljmp
loop
and
lcall
add
pop
and
call
push
add
xor
cmpsl
add
jl
mov
dec
fildll
lcall
ficompl
ljmp
std
sbb
or
add
addl
cmc
out
xchg
sub
inc
add
push
jbe
aam
add
aas
stc
daa
add
xlat
pop
pop
adc
fiaddl
dec
mov
lock
add
js
test
insl
sub
add
cltd
aas
gs
push
add
mov
ja
sub
jae,pn
decl
push
scas
stos
ficoms
ffree
add
pushl
mov
call
add
mov
movsl
add
add
jle
mov
lcall
nop
call
call
add
stos
add
fmuls
repnz
incl
call
mov
or
pushl
lods
sbb
mov
add
test
inc
add
jae
pushl
add
add
add
fisubrl
inc
add
mov
add
loope
sub
xchg
outsb
in
daa
add
xchg
lcall
add
addl
fiadds
add
xchg
add
ljmp
in
sbb
iret
mov
jmp
cmp
add
test
jp
add
mov
ljmp
movsb
add
and
inc
add
fdivr
jns
mov
in
add
jg
add
insb
adc
add
add
add
mov
add
add
jns
or
add
add
addl
xlat
jne
add
mov
inc
add
mov
add
dec
jbe
test
jbe
add
fld
add
add
ljmp
add
call
add
adc
incl
ljmp
mov
repnz
jmp
add
lcall
addb
add
repnz
fldt
xor
inc
add
incl
incl
sarl
movsb
add
add
or
add
cs
add
and
xchg
lea
add
roll
add
pop
lock
inc
add
add
pop
jne
add
add
aas
xchg
test
addb
int
xchg
movl
add
and
dec
inc
add
jecxz
lock
test
outsl
cmp
data16
call
add
jno
pushl
add
inc
add
test
out
sarb
mov
push
out
ds
add
test
roll
push
add
or
repnz
add
in
pop
mov
out
roll
add
ljmp
add
add
call
ja
js
push
pop
inc
add
sti
js
test
imul
ljmp
add
pop
mov
lcall
dec
push
add
decl
mov
adc
lcall
add
sahf
push
rcll
add
lahf
jp
xor
pop
add
mov
std
and
call
iret
mov
ds
xchg
flds
xor
ljmp
shlb
or
cmp
and
sti
fildl
add
add
inc
add
xor
stc
shr
shlb
push
mov
pop
leave
lea
add
pop
in
add
ljmp
add
and
mov
ljmp
cltd
inc
add
push
add
lds
rcl
add
cli
inc
add
dec
mov
cld
mov
bound
jmp
out
or
sbb
add
push
add
or
ret
add
xor
mov
out
icebp
jne
add
insl
popf
push
call
add
dec
pusha
add
shr
sti
inc
add
add
loope
add
jmp
push
add
push
fstl
mov
dec
adc
call
iret
cmc
into
movl
in
scas
daa
add
add
cmp
add
mov
neg
xchg
dec
dec
mov
xchg
mov
lods
or
add
cmp
xor
cmp
pop
pop
int
cld
ficoms
outsb
enter
xchg
fdivrl
out
jge
and
call
into
es
xchg
cmpsl
add
add
fists
sahf
std
cmp
cmp
mov
adc
lcall
rcrl
fdivrs
mov
add
cltd
daa
add
outsl
xor
call
and
adc
loope
insl
mov
add
insl
pusha
add
mov
les
mov
jge
add
mov
cld
out
sbb
add
pop
jne
inc
add
add
add
jmp
add
jae
decl
dec
insb
xchg
loopne
xchg
xchg
pop
in
lret
or
add
add
addb
add
pop
inc
add
add
dec
inc
add
rcrl
add
add
decl
add
pop
rorl
add
lcall
jl
add
sbb
loopne
jae
out
mov
add
add
and
mov
add
inc
add
xor
pushl
addb
data16
out
cmp
data16
cwtl
in
push
add
sub
out
rol
add
cmp
and
fwait
ja
std
xlat
mov
mov
add
into
stc
adc
decl
mov
lahf
jbe
inc
add
ja
jb
incl
add
idivb
mov
dec
mov
mov
stos
inc
add
iret
jno
decl
movl
mov
add
jbe
stos
push
jl
clc
xchg
dec
mov
add
add
mov
jne
jp
and
mov
inc
add
icebp
mov
pushf
or
add
adc
jmp
add
add
loopne
mov
je
jns
mov
mov
aad
add
stos
or
add
sbb
jb
incl
decl
mov
add
push
call
add
jns
adc
test
push
jns
dec
jmp
add
int3
cmc
fdivr
xchg
xor
lds
pop
sti
cmc
inc
add
ret
adc
pushl
jne
pushf
lock
sub
lds
fdivrl
or
xor
incl
dec
pusha
add
inc
add
and
call
pushl
add
pop
and
ljmp
scas
mov
nop
xor
decl
add
push
mov
adc
dec
mov
fcomip
sub
add
pop
add
inc
add
js
mov
fcomps
xchg
jecxz
in
pop
jp
inc
add
xchg
and
call
mov
push
add
es
cli
and
pushl
add
mov
xor
lcall
lahf
psadbw
jb
mov
lahf
or
dec
sbb
add
add
sti
mov
dec
mov
movb
aam
push
sahf
out
ret
add
add
sub
add
pop
pop
jecxz
js
arpl
jmp
add
mov
add
lcall
mov
add
add
add
mov
add
lret
sub
push
add
pop
cmp
or
roll
or
add
push
out
data16
mov
fmull
add
push
lea
decl
movl
add
fstp
call
pop
add
pop
fimull
pop
out
in
jl
sbb
add
add
test
mov
push
xor
insl
jecxz
mov
dec
mov
adc
push
sbb
cli
mov
enter
mov
add
or
add
add
hlt
jmp
jnp
push
add
xchg
adc
jl
adc
call
lods
ret
add
ds
out
add
sub
inc
add
imul
out
out
pop
jmp
int
test
cwtl
js
jb
ljmp
add
call
add
jp
xchg
data16
cmp
stos
das
xchg
lds
psrlw
jbe
add
xchg
add
ljmp
mov
add
mov
cmc
into
inc
add
push
clc
leave
daa
add
add
inc
add
jo
ljmp
add
add
cmp
and
incl
call
add
movb
jmp
bnd
aaa
in
pop
jb
call
inc
add
add
ljmp
in
mov
sub
push
decl
add
ljmp
sub
lret
xchg
dec
movsb
add
pop
movsl
add
add
and
call
add
insb
scas
loopne
mov
in
cmp
in
cmpsl
add
or
or
mov
cmp
mov
add
add
ljmp
decl
ss
add
add
scas
inc
add
popf
pop
fstps
dec
insl
hlt
in
bound
pushl
stc
add
out
adc
jmp
add
jl
and
outsl
xchg
pop
daa
add
add
arpl
incl
add
ret
add
mov
pop
lret
fwait
jno
decl
pop
fisubl
aas
addl
out
in
add
lcall
mov
shll
mov
jle
add
std
dec
fisubs
pushl
pushl
add
and
int3
sub
add
or
addl
lcall
movsl
add
lods
adc
fidivs
add
add
stc
jl
pop
lods
xchg
jae
jmp
pop
push
add
leave
and
push
add
std
adc
out
xor
int3
xor
push
in
add
mov
add
dec
addb
add
adc
incl
test
insl
ds
add
mov
sbb
xor
dec
lahf
pop
lret
and
call
aaa
stos
addb
mov
mov
add
in
cmp
add
mov
sbb
add
push
inc
add
decl
add
dec
add
decl
cwtl
cwtl
xlat
insl
push
add
stos
sub
add
repnz
addl
addl
std
xchg
cs
add
push
add
ds
add
mov
pop
pop
movb
call
add
fiaddl
pop
mov
add
ret
roll
add
add
test
pop
shl
and
dec
sub
addl
and
ret
add
add
dec
mov
push
add
push
nop
enter
jo
decl
fs
add
add
roll
mov
add
cwtl
movsb
add
loopne
lock
push
cmpsl
add
add
dec
imul
call
loope
fsubrp
push
add
inc
add
add
cmp
jle
add
push
fwait
stos
sub
add
mov
add
loope
roll
cwtl
cmp
inc
add
inc
add
add
mov
gs
les
ret
add
sub
rclb
jp
jae
cmp
in
pop
fwait
mov
add
cld
adc
cmp
add
lret
mov
inc
add
add
push
add
clc
add
inc
add
cwtl
movsl
add
rolb
jp
add
sub
mov
movsl
add
call
popa
add
jle
add
insb
and
call
pop
and
lcall
mov
movsb
add
addl
inc
add
rcrl
aaa
mov
in
leave
addl
jp
xor
decl
add
addr16
insl
fstps
mov
dec
leave
mov
add
add
cmp
add
inc
add
lods
dec
pop
mov
and
push
push
out
sahf
xchg
cmp
call
add
stos
lods
adc
repz
pop
cmc
rclb
or
aaa
cmp
add
ret
scas
xlat
mov
das
lcall
jno
jmp
cmpsb
add
add
mulb
decl
push
int
pop
pop
inc
add
add
lock
daa
add
outsl
test
pop
repz
cs
sub
aad
add
cmp
jmp
add
iret
push
add
test
xlat
cmp
mov
and
ljmp
push
mov
add
ljmp
add
addl
cmpsb
add
jmp
lret
icebp
push
mov
and
pushl
and
xor
add
incl
out
outsb
push
cli
mov
add
movl
hlt
dec
addb
add
jecxz
sahf
stos
std
mov
xor
incl
sub
test
inc
add
mov
dec
nop
dec
int
jo
decl
nop
mov
add
lds
stc
pop
outsb
mov
add
and
lcall
mov
add
add
imul
pop
add
cmp
add
cmp
incl
push
cmc
inc
add
xchg
dec
pop
call
push
pop
int
std
sub
add
dec
mov
add
addr16
jle
add
mov
aam
push
rclb
xor
dec
inc
add
lret
jnp
leave
loop
pop
mov
inc
add
add
add
pop
add
lcall
adc
pushl
mov
add
mov
add
add
adc
mov
icebp
cmp
add
notl
add
addl
lcall
nop
movsb
add
cmc
push
adc
ljmp
inc
add
add
xlat
in
fisubl
add
mov
add
mov
mov
add
dec
push
int
mov
dec
adc
add
hlt
add
ret
add
roll
add
addb
das
lret
test
jb
call
adc
pushl
add
ljmp
movsb
add
les
xchg
daa
add
add
test
mov
sahf
inc
add
xor
call
pop
sub
add
rcrb
or
push
repnz
add
add
add
incl
jge
adc
call
add
mov
imul
sahf
pop
movb
xor
pushl
add
add
lret
mov
push
add
and
mov
lods
dec
lods
dec
dec
dec
sbb
or
add
in
arpl
inc
add
dec
pushl
rcl
cmc
xchg
aad
jl
movaps
dec
daa
add
dec
je
add
add
add
jg
sub
add
add
lods
call
add
data16
lcall
testl
shrb
js
cli
sub
xor
add
loop
pop
out
out
jno
incl
jmp
add
sti
dec
call
lods
loope
and
jmp
add
push
scas
inc
add
mov
add
adc
dec
ret
clc
sbb
sbb
outsl
mov
add
lods
jg
das
stos
sub
add
pop
aam
jo
jl
arpl
jmp
sbb
add
xchg
insb
push
xor
call
mov
mov
sbb
jb
jmp
cmp
pusha
add
inc
add
test
add
add
in
pushl
add
leave
pop
out
dec
sti
or
pop
add
add
idivl
add
jl
add
add
add
dec
add
call
call
jnp
ljmp
xor
incl
jmp
add
call
add
rcll
sbb
fstps
sahf
loope,pt
repnz
lret
movsb
add
add
add
cmp
push
cmp
add
or
add
add
mov
add
loope
sub
hlt
push
dec
je
test
add
cwtl
dec
mov
mov
cmpsl
add
std
jae
incl
decl
jl
push
add
add
adc
mov
repnz
inc
add
jg
add
test
addl
add
add
mov
sti
and
xchg
jno
decl
or
in
adc
jp
xchg
dec
data16
push
xor
jg
repnz
inc
add
addb
cltd
mov
sbb
sbb
decl
out
pusha
add
repz
jge
add
int3
mov
jmp
jmp
add
lret
jo
cmp
add
cwtl
inc
add
cmpsb
add
stos
out
mov
add
mov
xchg
outsl
add
sub
add
arpl
js
jns
iret
repnz
jp
add
rolb
add
adc
jp
outsb
jmp
sahf
fucom
add
mov
xchg
jns
add
or
mov
add
mov
lock
mov
mov
add
add
jecxz
mov
cld
push
add
mov
add
mov
add
mov
add
and
std
roll
test
inc
add
dec
xchg
jbe
xchg
xchg
xchg
add
adc
mov
add
add
add
mov
mov
add
add
add
add
add
jmp
xchg
scas
push
add
leave
insl
push
jg
add
dec
adc
add
add
cwtl
fcoml
ljmp
add
add
cli
movsl
add
addl
je
sub
push
and
inc
add
jecxz
mov
add
cli
in
mov
add
and
lcall
cmp
add
mov
jmp
add
movl
pop
outsb
imul
add
fstp
loope
sbb
or
fisubl
popf
arpl
fmull
out
cmp
call
fs
add
add
ret
add
je
insl
jbe
pop
sbb
popf
arpl
inc
add
mov
imul
add
add
add
jmp
add
incl
sbb
incl
add
ret
add
add
in
push
add
push
dec
xchg
out
jnp
mov
add
cmp
jge
ja
or
add
daa
add
mov
sub
sub
ret
fldenv
add
add
inc
add
leave
add
dec
jb
inc
add
das
jge
sbb
jmp
scas
cmpsl
add
fildl
leave
popa
add
test
out
dec
xor
jmp
xchg
mov
add
add
add
aaa
inc
add
fadds
leave
xchg
inc
add
mov
add
ret
jb
jmp
push
xchg
add
pushl
xchg
rol
add
jo
dec
lods
mov
bound
jge
add
push
add
xchg
dec
loop
or
nop
loopne
xchg
inc
add
jg
add
pop
add
xor
lcall
cwtl
jnp
fldenv
dec
push
sub
leave
push
mov
cwtl
dec
xchg
pop
dec
outsb
pop
filds
add
lock
loopne
xchg
sub
and
or
jnp
adc
jns
xchg
cmp
jne
mov
incl
scas
cs
mov
add
add
inc
add
into
dec
out
loopne
in
pop
mov
ret
sbb
push
test
test
mov
add
ss
and
mov
stos
or
add
cltd
cmp
xchg
stos
data16
add
add
push
movl
mov
ds
xchg
and
incl
dec
jne
add
movb
pusha
add
cmp
loop
or
mov
movb
pop
sbb
cmp
incl
fildll
sub
or
add
cmp
add
mov
ljmp
lea
add
push
adc
inc
add
imul
jle
out
stos
daa
add
mov
js
pop
inc
add
add
sub
xchg
xchg
cmp
add
mov
mov
sbb
ss
mov
ljmp
add
mov
add
add
ds
movsl
add
pushf
jg
add
sbb
into
or
jg
or
add
loop
sbb
mov
call
cwtl
adc
lret
insl
fildll
inc
add
push
lahf
daa
add
jecxz
rclb
add
cld
rolb
and
decl
mov
push
add
addl
push
stc
out
in
lret
pop
xchg
push
fmuls
outsl
addb
add
add
add
sbb
int3
pop
push
jno
jmp
or
dec
pop
xchg
jae
jmp
incl
add
add
adc
jmp
add
mov
call
dec
and
ljmp
popa
add
pop
add
call
add
jge
add
jbe
hlt
into
loopne
movsb
add
add
cli
ja
mov
mov
add
sbb
icebp
add
dec
sbb
adc
incl
add
fnstcw
add
add
dec
dec
sub
add
pushl
lods
call
xchg
pusha
add
mov
dec
fwait
leave
cmc
xchg
jge
add
and
call
in
lock
cmp
fdivl
and
jl
movl
in
xor
call
imul
popa
add
in
das
adc
decl
add
add
fdiv
out
rorl
push
add
cmpsl
add
add
add
movsb
add
add
add
add
movsl
add
sbb
lea
js
call
or
cmp
add
rcl
addb
scas
add
movsl
add
add
push
or
mov
jmp
add
sahf
shlb
rorl
add
aad
or
add
sbb
add
xor
jmp
pushl
movsl
add
add
clc
mov
add
in
xchg
xlat
fidivl
in
xchg
push
mov
jae
incl
add
cmpsl
add
add
jae
jmp
roll
insl
mov
cmp
ja
or
sahf
insb
addl
add
js
push
dec
pop
insl
mov
add
inc
add
xchg
int
sub
test
jp
add
add
add
cmp
add
lahf
mov
add
out
jecxz
xchg
push
pop
or
push
add
out
add
das
jns
js
mov
add
loopne
or
and
cld
inc
add
data16
push
add
sbb
sbb
incl
clc
loopne
adc
incl
call
loope
sahf
leave
xchg
add
addl
add
cltd
shrb
add
test
insb
pusha
add
loop
xor
mov
push
add
pop
aaa
or
pushl
add
call
jmp
pop
inc
add
and
call
inc
add
inc
add
ljmp
push
add
jg
add
mov
movsl
add
mov
add
mov
add
into
fidivrl
lcall
xor
dec
ss
push
ficoml
ljmp
or
add
add
fsubrs
insl
in
mov
add
out
ljmp
add
cmpsb
add
daa
add
add
push
add
pop
xor
mov
jb
call
roll
addb
bound
jmp
testl
dec
and
sbb
add
stos
fwait
mov
add
loope
sbb
out
cld
addl
add
adc
lcall
ficompl
add
push
dec
pop
add
jno
inc
add
and
sub
pop
in
addb
xchg
out
cmp
adc
dec
mov
add
mov
inc
add
dec
out
hlt
rolb
sub
add
jnp
das
cmp
hlt
out
movb
add
add
jnp
jg
add
push
lcall
mov
cmp
add
mov
fst
adc
call
insl
into
test
add
jle
sub
icebp
dec
outsb
pop
mov
ljmp
add
mov
mov
add
sbb
add
sub
scas
aaa
sarb
sub
jg
repz
add
lcall
cmp
addl
add
cmp
add
lret
in
push
add
adc
pushl
loop
ljmp
aaa
inc
add
fs
add
add
add
out
cli
test
inc
add
lock
add
jnp
sahf
xchg
adc
dec
pop
jne
jl
add
mov
add
add
dec
stos
jbe
mov
roll
add
push
sbb
lea
out
popa
add
shlb
iret
mov
add
push
lret
pop
add
inc
add
jle
push
add
adc
decl
repz
sub
push
add
add
sub
add
in
mov
call
movsb
add
mov
mov
dec
xchg
popa
add
outsb
pop
gs
cs
jnp
add
push
mov
lea
enter
lods
idiv
iret
push
add
lcall
push
add
pop
mov
sahf
lods
jns
add
in
cmp
pop
fadds
ss
jno
incl
add
dec
fcomi
add
mov
aas
enter
dec
sbb
jp
pop
pop
mov
repz
clc
in
in
push
add
xchg
push
add
stos
or
out
filds
push
add
jp
jmp
jmp
jmp
add
push
jecxz
xchg
ds
adc
pushl
add
add
sbb
cmc
mov
leave
pop
add
add
dec
sub
mov
add
aaa
inc
add
push
in
ja
mov
out
mov
lret
xlat
fistps
aad
jl
add
jne
mov
movzbl
add
mov
dec
addr16
mov
add
ljmp
add
pop
addl
jmp
add
push
in
cmc
icebp
adc
call
jmp
add
add
inc
add
xchg
and
pushl
add
ja
scas
sbb
addb
push
add
push
repnz
pop
fnstsw
cwtl
xor
call
add
mov
stos
out
adc
in
call
ja
add
push
add
pop
int
pop
sbb
outsb
addl
add
add
loop
adc
incl
clc
add
loope
and
bnd
sub
mov
and
ljmp
cmp
ret
xchg
ret
add
call
out
adc
or
add
push
add
icebp
divl
mov
call
pop
xor
pushl
insb
aad
iret
rolb
pop
push
add
jns
hlt
dec
inc
add
add
jnp
xor
mov
add
sti
dec
iret
push
repz
add
add
jnp
dec
std
sub
xor
or
decl
xor
sub
add
add
jmp
add
add
pushl
incl
xchg
outsl
out
fiaddl
aam
cmpsl
add
mov
incl
insb
mov
add
sti
je
push
dec
push
lahf
or
xchg
int3
adc
add
inc
add
mov
add
out
add
filds
jns
addl
dec
or
decl
lods
mov
aaa
sbb
lret
repnz
add
add
add
mov
outsb
sub
add
and
call
lods
out
mov
add
addb
dec
stos
mov
test
push
add
hlt
data16
xor
incl
add
lret
addb
add
lods
dec
fsubr
das
sbb
push
add
inc
add
mov
mov
add
incl
call
outsb
xor
dec
repnz
mov
add
and
jmp
pop
add
add
addb
add
and
push
add
jae
out
cmp
pop
pop
add
aas
and
inc
add
mov
pop
mov
jg
rcrb
lock
adc
ljmp
push
or
add
in
stc
pavgw
and
pushl
ljmp
add
lds
cld
dec
and
decl
pop
and
dec
jnp
dec
or
mov
cmpsb
add
fwait
mov
in
push
test
mov
and
inc
add
pop
xchg
push
xchg
cmovl
out
frstor
jl
movsl
add
add
dec
adc
aad
les
dec
je
add
or
xchg
movsb
add
lock
add
iret
ficompl
xor
pushl
add
sbb
cmp
jb
lcall
jnp
add
imul
jmp
dec
or
popa
add
das
or
jmp
movsl
add
rolb
movb
dec
ds
add
fwait
stos
push
sbb
into
mov
xchg
sub
addb
das
ficoml
fstpt
cmp
adc
ljmp
add
add
pop
adc
in
jb
decl
lods
mov
pop
add
cmp
pop
call
add
test
add
je
js
add
add
test
add
add
add
xor
jmp
jmp
xlat
dec
jg
add
dec
mov
jmp
shlb
add
inc
add
mov
popf
lock
lcall
fisubs
jmp
imul
pop
out
and
dec
lcall
arpl
lcall
lea
xchg
ret
sbb
add
aaa
fbld
add
add
out
fstpt
push
in
mov
add
stc
sbb
inc
add
push
lahf
and
call
add
jae
pushl
jmp
mov
daa
add
movsb
add
mov
mov
add
push
push
sbb
and
ljmp
dec
shrl
icebp
sahf
stos
addl
add
add
pushl
add
push
add
out
dec
movb
loope
cwtl
cld
xchg
or
add
or
dec
clc
pop
roll
stos
sub
add
mov
xchg
mov
ja
mov
or
mov
cmp
jno
lcall
pop
mov
sti
jns
and
cmp
add
add
jl
add
repnz
repnz
dec
sub
mov
mov
movsl
add
icebp
imul
add
int3
xchg
lods
dec
test
and
cmpsb
add
decl
mov
aam
add
pushl
jmp
add
add
xor
cmp
cmp
ja
cmp
or
add
out
loop
out
test
push
add
aas
fwait
out
lds
in
movl
ret
in
cmp
add
inc
add
add
xor
call
add
sbb
add
jbe
into
mov
decl
data16
dec
jmp
mov
data16
add
mov
sbb
add
stos
mov
sbb
ss
and
jmp
incl
mul
add
adc
inc
add
or
test
shrb
dec
adc
jmp
add
jge
cmp
fwait
lock
add
xchg
xor
jmp
add
je
loop
mov
add
ljmp
leave
jp
add
add
push
sub
add
sbb
outsb
jnp
mov
inc
add
inc
add
mov
mov
mov
add
frstor
jmp
add
clc
movl
add
call
outsb
push
add
xchg
cltd
sti
daa
add
fists
jl
xor
lcall
ja
movb
out
jl
add
add
add
add
cmp
movsl
add
pop
add
inc
add
push
les
add
add
add
js
mov
jne
add
add
add
decl
cmp
movb
add
cmpsb
add
hlt
mov
add
add
add
cwtl
repnz
popa
add
xor
addl
dec
jbe
push
fwait
inc
add
add
jmp
jmp
gs
inc
add
add
ljmp
incl
dec
add
add
add
add
cmp
imul
jb
lcall
call
imul
popf
aas
push
daa
add
xchg
mov
int
loop
mov
in
or
add
jmp
xor
mov
add
stos
data16
add
dec
fcompl
mov
sub
add
add
inc
add
push
pop
mov
addb
add
and
dec
mov
add
add
add
add
mov
add
imul
add
mov
decl
add
add
decl
and
jnp
fdivp
lods
shrl
lea
pushl
push
adc
incl
add
outsb
aaa
inc
add
or
adc
call
add
sbb
int
and
call
and
add
add
add
pushl
or
sub
and
jmp
add
xor
cld
out
sbb
add
bound
pushl
clc
addb
push
add
loope
push
pop
cwtl
mov
dec
addl
add
in
sbb
or
add
add
popa
add
xor
lcall
add
mov
mov
sbb
add
ljmp
xchg
pop
rcrb
loope
lret
lret
jl
add
jmp
add
jge
cmp
test
add
adc
call
add
push
or
sbb
xchg
rcr
sub
add
fwait
aaa
sbb
sbb
push
add
bound
pushl
pop
ficoms
add
dec
or
add
push
pop
cmp
inc
add
popa
add
and
incl
add
push
stos
test
inc
add
pop
mov
sub
sbb
add
xor
ljmp
ds
cmpsl
add
jecxz
shll
dec
mov
mov
add
xor
mov
add
dec
call
or
ja
mov
jmp
fs
adc
faddl
add
push
imul
ljmp
ljmp
shl
sbb
cmp
add
add
adc
jmp
in
cli
icebp
add
jne
add
pop
push
add
push
add
lcall
adc
ljmp
fidivrs
ds
jnp
dec
push
stc
cltd
jmp
and
xchg
push
rorl
mov
add
decl
add
pop
add
dec
dec
jecxz
inc
add
xor
jmp
add
in
pop
add
pop
push
add
rolb
ucomiss
jbe
cmp
in
and
fstps
daa
add
stc
aam
add
pop
in
cmpsb
add
ds
outsb
fwait
rcrb
mov
shlb
add
add
add
add
stos
sub
add
clc
jg
lret
and
test
es
add
lret
mov
cld
mov
jne
mov
lcall
add
and
jmp
lcall
addl
dec
scas
lea
dec
pop
nop
rcl
in
stc
stc
out
ljmp
dec
xlat
out
call
add
imul
push
mov
add
add
jns
aaa
xchg
aad
mov
movb
hlt
and
decl
pushl
push
add
inc
add
add
add
pop
add
sub
mov
or
add
add
hlt
inc
add
push
add
movb
add
add
adc
jmp
pushl
in
push
add
inc
add
xchg
jl
add
out
cmp
ja
lds
pop
jp
add
inc
add
xchg
psrld
lea
std
movups
ds
add
add
or
add
call
add
mov
out
fildll
add
decl
mov
add
jecxz
loope
das
jle
mov
mov
add
dec
loop
xlat
fdivs
push
push
cltd
pop
negl
insb
outsl
inc
add
push
inc
add
dec
mov
fisttpll
icebp
dec
pop
adc
pushl
add
mov
add
mov
jmp
dec
cmp
fs
push
call
or
rolb
pop
les
sti
pop
dec
and
movd
add
lcall
add
cmp
jecxz
pop
daa
add
inc
add
add
inc
add
lods
fmul
dec
dec
repnz
and
dec
int3
sub
add
xor
incl
dec
or
inc
add
add
add
clc
out
test
insl
jnp
or
add
out
and
std
jne
insl
jno
jmp
sub
pop
dec
adc
lods
dec
inc
add
pop
add
add
mov
add
add
add
pushf
push
add
jmp
ss
add
incl
add
mov
rolb
add
add
pop
outsl
mov
cmp
fcomp
add
fbstp
cmpsb
add
pop
xchg
in
dec
mov
xchg
icebp
xchg
es
sbb
pop
daa
add
dec
adc
incl
dec
in
movsl
add
add
pop
aam
xchg
in
push
push
add
sub
add
mov
push
cmpsl
add
mov
int
movsb
add
fidivrl
add
sbb
inc
add
stos
icebp
test
add
ret
add
add
push
scas
fdivs
roll
test
pop
push
aam
addb
ljmp
add
div
loopne
cltd
and
pop
in
inc
add
add
incl
add
outsb
lret
loope
addl
add
add
dec
cmp
jge
add
jge
add
mov
pushl
sub
dec
cltd
push
fdivrl
xor
jmp
xor
xor
incl
mov
jno
in
popa
add
jo
incl
ljmp
sbb
pop
jge
loop
xchg
adc
incl
call
xchg
pop
add
js
mov
mov
pop
sub
mov
mov
add
add
decl
aam
or
ret
add
lea
fucomip
pop
out
mov
sbb
add
add
movl
cmp
add
fidivrs
xlat
in
mov
enter
test
call
add
add
add
mov
add
dec
leave
mov
pop
cli
lahf
out
out
jae
call
aam
add
sbb
sub
loop
ss
add
rorb
push
or
and
call
aam
ljmp
cmp
aas
and
jmp
pop
add
ljmp
add
jmp
add
add
adc
fbstp
call
add
sub
jecxz
lahf
outsb
fdivrs
sbb
pop
or
cmp
dec
fstl
add
test
add
add
jnp
jg
pushf
jbe
mov
sbb
inc
add
sub
sbb
arpl
call
mov
mov
adc
lcall
outsb
jne
add
push
add
jmp
in
cmp
add
push
and
test
lock
or
out
sbb
xor
add
roll
add
das
jge
or
rolb
add
xlat
rcrb
push
add
insl
out
inc
add
roll
add
xor
jmp
incl
call
call
add
mov
paddusw
add
add
cmp
decl
inc
add
pushl
pop
fcoml
add
loop
cmc
xor
decl
and
cld
and
push
jg
add
fwait
inc
add
mov
add
jmp
add
add
inc
add
add
adc
lcall
add
jge
jle
adc
jmp
add
jo
incl
or
mov
sahf
loopne
addl
mov
roll
add
ret
add
add
mov
pop
jae
mov
mov
or
add
add
add
sub
mov
ja
add
test
add
das
push
mov
add
add
inc
add
push
add
mov
add
sub
cmc
stc
js
test
inc
add
mov
roll
outsl
inc
add
scas
dec
roll
mov
add
add
xchg
imul
pushl
add
loop
sbb
lahf
ljmp
mov
add
dec
cmp
add
stos
pop
add
jmp
add
flds
add
fsubs
add
pop
adc
incl
decl
add
iret
lods
lods
lahf
leave
push
add
out
push
add
add
inc
add
lods
pop
push
add
mov
and
jmp
add
out
add
jmp
test
add
xchg
stos
icebp
inc
add
cmpsl
add
xor
lcall
pushl
add
and
jg
add
jb
cmp
ljmp
lret
pop
mov
add
add
add
lcall
add
add
iret
pop
scas
jmp
add
add
inc
add
add
test
data16
lods
cmp
test
jecxz
fsubp
add
jbe
inc
add
add
fs
jb
ljmp
add
add
add
js
pop
xchg
push
jb
inc
add
mov
dec
sub
cmp
jno
lcall
add
push
add
add
add
aaa
mov
nop
lds
popf
add
cmp
and
cmp
in
daa
add
add
inc
add
sub
dec
pop
push
add
jl
inc
add
add
sahf
inc
add
clc
hlt
cmpsl
add
adc
add
mov
addb
add
icebp
pop
mov
mov
add
incl
push
scas
loop
jno
call
add
cmp
add
xchg
int
add
lds
mov
add
xor
ja
xor
pushl
add
add
xor
xchg
mov
icebp
inc
add
push
fstps
add
add
push
imul
movq
inc
add
ret
add
or
test
movsl
add
dec
jo
incl
add
testb
add
jg
sub
lcall
in
push
leave
inc
add
fwait
adc
inc
add
add
bound
decl
call
leave
xor
ljmp
test
icebp
cltd
pop
sub
add
sbb
or
add
add
and
jmp
cmp
mov
xchg
lds
aam
leave
mov
inc
add
mov
push
icebp
cltd
enter
jmp
add
mov
pop
out
shr
iret
sbb
add
inc
add
pop
add
add
cmc
jg
sub
cwtl
sbb
lahf
push
test
pop
in
inc
add
push
icebp
ret
add
fidivl
cmp
cmp
fidivrl
fimull
push
bound
lcall
lds
xchg
fisubs
mov
pop
add
incl
add
cmp
push
fcoml
push
add
loopne
call
add
insb
mov
cs
add
mov
or
inc
add
fisttpl
pushl
xor
push
jp
sbb
or
add
or
sahf
lods
outsb
out
lds
push
shll
or
add
jmp
pop
xchg
push
add
fmulp
mov
cmp
dec
or
xor
xchg
jecxz
or
or
pushf
mov
rolb
add
add
jmp
add
cmpsl
add
add
add
sub
push
add
jecxz
loop
add
icebp
shl
mov
add
add
js
add
jge
inc
add
adc
arpl
incl
add
add
ja
add
insb
ljmp
mov
add
arpl
jmp
push
xchg
mov
call
mov
sbb
add
xchg
cmp
add
add
and
fisttpl
add
add
and
jmp
add
lret
dec
enter
ja
sarl
xchg
test
mov
lcall
push
inc
add
mov
call
hlt
or
add
lcall
add
mov
add
div
pop
ss
add
stos
inc
add
pop
std
arpl
dec
jecxz
ss
mov
add
or
add
data16
mov
test
les
jp
cli
mov
add
mov
dec
loope
repz
cltd
fsubl
ljmp
cli
mov
add
fcomp
rolb
sub
add
lea
inc
add
jo
pushl
jle
add
sbb
xchg
jp
add
incl
add
ljmp
call
add
fldcw
and
call
dec
ret
add
adc
cld
mov
loope
lret
testl
sub
or
sub
pop
mov
pusha
add
or
incl
add
jge
fisubs
add
outsl
and
jmp
int
xchg
xchg
dec
loopne
lock
add
add
pop
gs
add
in
sub
cmp
add
iret
test
loope
and
ljmp
incl
add
add
out
int
clts
add
add
call
sahf
xor
ljmp
mov
add
int
inc
add
in
or
or
adc
jmp
add
roll
sub
jno
decl
add
and
incl
add
xor
std
add
add
mov
call
xor
jg
push
push
cmp
jne
add
xchg
roll
jnp
add
mov
sbb
loop
lds
sbb
add
add
push
inc
add
push
add
popf
jg
push
dec
mov
xchg
cmpsb
add
decl
sbb
add
xchg
pop
add
dec
jno
inc
add
dec
rclb
call
inc
add
pushf
int3
add
decl
xor
loop
xlat
jl
add
add
rcl
jae
incl
add
clc
mov
lock
in
mov
pusha
add
mov
sbb
out
mov
add
or
cmpsl
add
jge
cltd
nop
inc
add
add
cmp
inc
add
cld
arpl
jmp
sbb
add
mov
ffree
add
lods
aaa
pop
pop
pop
inc
add
add
xor
add
in
scas
loope
pop
push
mov
mov
jmp
add
fucomi
jno
call
jmp
lahf
mov
add
add
jecxz
addb
xchg
lods
sub
lea
pushl
jae
ljmp
push
ja
mov
sub
sbb
nop
shrb
add
add
mov
add
aaa
jge
out
rorl
sub
adc
lcall
add
adc
cmp
pop
mov
data16
adc
call
unpcklps
add
addl
pop
movsb
add
movl
add
test
xchg
mov
add
test
cs
and
lcall
call
ljmp
pop
mov
decl
add
or
push
add
jns
add
cmp
inc
add
xor
lcall
or
add
adc
int
add
scas
sbb
add
scas
xchg
cmc
xchg
dec
fistl
add
jg
add
or
shr
sub
fdivs
call
rolb
or
setle
lret
inc
add
sti
pop
add
lcall
mov
add
add
jb
fdivr
sbb
fimull
xor
decl
in
pop
xor
mov
js
aaa
jns
out
pushf
mov
add
insl
out
and
jmp
mov
push
lret
inc
add
in
mov
bound
jmp
add
pop
data16
add
inc
add
push
add
sub
jmp
pop
inc
add
push
jp
addb
add
add
lds
cmp
push
add
jbe
add
jge
add
loopne
mov
or
rcll
decl
add
bound
decl
push
ret
add
dec
dec
int3
popf
lret
and
in
lea
imul
add
fnsave
call
fcmovnu
mov
decl
test
test
aam
inc
add
add
lods
loop
lcall
dec
movsb
add
lcall
inc
add
pop
or
dec
mov
add
push
add
mov
jmp
fcomip
xlat
repnz
add
add
nop
leave
lret
lcall
out
mov
mov
cmp
mov
hlt
out
psubq
inc
add
pop
lods
push
add
add
filds
add
and
sbb
add
out
rcr
in
imul
repz
or
add
cmc
shlb
jae
inc
add
popa
add
and
push
cmp
ljmp
ljmp
add
pop
mov
and
pop
cmpsl
add
decl
cld
sbb
in
jl
movb
pop
cmp
fwait
mov
add
ljmp
add
add
pop
sti
test
fiadds
pushl
decl
sub
xchg
push
add
fcompl
jbe
add
dec
lahf
sub
add
add
push
adc
push
negl
add
addl
daa
add
add
inc
add
std
shl
loopne
adc
ljmp
add
mov
jo
lcall
ljmp
mov
jns
test
fisubrs
mov
jmp
xor
call
lock
adc
cmp
add
jae
call
decl
lahf
push
mov
xchg
jmp
aas
js
add
ljmp
add
out
frstor
add
xchg
out
and
or
movsb
add
push
cmp
mov
add
incl
sahf
imulb
add
mov
sbb
nop
mov
cmp
add
add
mov
add
dec
aam
add
bnd
xor
decl
push
push
add
push
and
lcall
add
fiaddl
add
test
fidivrs
add
mov
ds
test
mov
insb
scas
mov
adc
pushl
or
or
add
cli
mov
xor
add
lods
repnz
je
and
push
cmp
cltd
aad
aam
add
lcall
add
add
push
dec
push
add
int
fistl
mov
pop
data16
sbb
mov
push
add
dec
dec
ja
add
fsub
add
test
sub
into
jae
call
scas
push
add
push
add
out
scas
push
loop
popa
add
cmp
js
mov
pcmpgtb
inc
add
cltd
addb
add
push
add
repnz
mov
add
add
add
jmp
add
add
decl
add
add
xlat
mov
inc
add
sbb
push
add
xchg
push
mov
add
decl
add
test
dec
test
bound
std
not
push
mov
test
js
add
push
imul
rolb
lret
adc
lcall
or
lret
jmp
fnstcw
fwait
sub
adc
lret
add
scas
sub
add
fwait
in
xchg
jmp
ja
addl
fisubrl
and
call
ljmp
push
add
roll
into
and
ds
cmp
in
lahf
out
jnp
add
test
mov
sbb
add
jbe
add
cmpsl
add
add
cmc
mov
xor
ljmp
fwait
movb
inc
add
xchg
or
int3
or
ja
add
push
sub
lret
push
sub
pushf
mov
nop
enter
cltd
lret
outsl
in
pop
add
push
lds
dec
xor
dec
push
movb
add
mov
or
mov
add
ljmp
fwait
ja
dec
loopne
popa
add
notl
js
imul
mov
add
pushl
add
pop
inc
add
jecxz
movl
mov
pushf
adc
incl
sub
add
or
arpl
out
ficoml
mov
add
in
cmp
mov
add
add
jo
ljmp
fimuls
add
push
adc
jmp
add
je
add
mov
inc
add
add
jmp
call
dec
sbb
pushl
jg
add
add
lret
int3
in
das
xchg
pop
cld
scas
add
call
into
mov
pop
sub
add
pop
xchg
arpl
jmp
add
add
clc
xchg
into
push
mulb
add
add
lods
in
or
ret
add
add
fistps
add
jl
add
add
lock
or
mov
add
aaa
cld
mov
popa
add
addb
ds
pop
jo
in
dec
popa
add
sar
outsb
dec
int3
sahf
adc
jmp
add
sbb
add
sub
ret
add
add
add
mov
pop
movb
add
and
decl
arpl
decl
mov
addl
add
push
add
lock
js
jo
pushl
pushl
xchg
fistpl
dec
loop
aas
das
fbld
xchg
bound
pushl
out
js
lret
fldt
mov
add
jg
add
xchg
hlt
cltd
add
incl
stc
push
add
in
mov
mov
fnstcw
insb
add
pushl
cltd
pop
out
ds
mov
add
fiaddl
out
add
clc
or
add
fidivrl
or
in
hlt
xor
ljmp
dec
sahf
jp
add
add
lcall
add
add
or
dec
mov
adc
decl
add
dec
cmp
adc
decl
add
dec
and
pushl
add
xor
add
add
add
scas
add
jmp
add
mov
cmc
in
sbb
dec
mov
push
mov
cmp
sbb
insl
and
mov
add
pop
cwtl
pop
xor
xlat
out
sbb
add
stc
cmp
dec
jo
push
push
jae
jmp
sbb
call
imul
jge
push
add
sub
add
or
add
insb
arpl
pushl
popf
bound
decl
push
pop
and
add
jecxz
mov
addb
adc
push
repnz
push
add
mov
add
in
pushf
outsl
in
sub
add
xchg
loop
and
decl
movsl
add
add
add
pushl
jno
lcall
sbb
add
and
punpckhdq
inc
add
sbb
divb
adc
add
icebp
outsb
jge
cmp
mov
xchg
imul
cld
or
jmp
test
inc
add
mov
mov
add
pushl
add
and
call
xor
fdiv
mov
add
leave
in
dec
push
les
lret
push
cli
sbb
sub
inc
add
movb
les
cmp
add
lcall
aaa
xor
ljmp
cs
nop
lea
inc
add
jg
inc
add
add
xchg
mov
jl
add
add
add
pushl
movl
ljmp
add
add
call
ret
add
add
xchg
xchg
sarb
add
jo
decl
pop
fs
xrelease
rcll
add
fisttpll
xor
lcall
out
push
add
cmc
das
and
incl
add
add
fstl
sbb
add
dec
inc
add
dec
cmpsl
add
pop
bound
pushl
ljmp
cmp
mov
mov
xchg
sbb
add
add
add
jbe
shll
add
pusha
add
pop
add
add
add
aad
add
add
incl
ljmp
incl
add
ljmp
pop
push
add
dec
lods
rolb
jns
add
cmp
call
jecxz
sbb
lret
push
add
out
mov
mov
add
push
rolb
add
ljmp
adc
call
add
shll
push
push
repnz
add
push
add
add
iret
or
add
out
add
add
sbb
add
fwait
pop
outsb
sbb
add
xor
jmp
adc
jmp
xor
std
cmpsb
add
xchg
fcmovnb
add
lods
mov
add
dec
xchg
push
out
and
incl
fwait
jns
stos
jmp
add
sbb
add
call
xchg
xor
dec
pop
js
out
std
cmc
cmp
pushl
add
or
add
add
add
addl
mov
jmp
add
or
add
mov
pushl
call
movl
add
pushl
out
push
add
adc
call
jb
fcmovbe
test
lock
dec
adc
jmp
add
add
adc
add
cmp
and
incl
and
incl
and
add
add
xor
cmp
sub
add
push
add
mov
dec
jne
in
push
jmp
loopne
cltd
movb
mov
inc
add
pop
push
fnsave
loope
testb
mov
add
pushf
dec
gs
and
incb
data16
add
dec
fs
xchg
pop
ret
jecxz
insb
push
xchg
ret
add
add
dec
and
jmp
mov
movsb
add
std
inc
add
testb
jb
jmp
and
dec
fucomi
test
movsl
add
pop
int
in
push
add
or
int3
mov
loopne
cmpsl
add
jp
add
mov
test
pop
push
cmp
adc
jmp
inc
add
pop
sahf
adc
inc
add
jmp
pushl
add
cmpsl
add
hlt
mov
add
add
imul
adc
decl
cmp
push
das
or
add
inc
add
fbstp
lret
push
add
stos
lcall
dec
cmpsl
add
lods
rorb
ljmp
iret
sarl
pop
ds
push
nop
sbb
add
add
pushl
add
add
ffree
add
add
add
add
jns
add
cmp
add
lret
mov
mov
add
xor
cmp
jmp
add
xchg
sbb
cltd
jne
and
inc
add
int3
fcoml
decl
jno
ljmp
add
add
mov
shll
mov
xchg
adc
call
add
sbb
outsb
in
pop
xchg
add
incl
pushl
leave
jl
add
test
push
add
hlt
fstl
enter
jmp
add
decl
add
cwtl
cmp
lcall
adc
pop
add
pop
in
nop
inc
add
add
decl
add
jae
call
add
addb
mov
mov
fnstcw
or
add
ret
add
jmp
cmp
dec
fwait
or
or
add
add
cmp
add
in
ss
addl
add
aaa
xlat
lret
pop
mov
sahf
push
add
xchg
mov
dec
popa
add
lret
or
or
dec
out
mov
sbb
int
add
add
cmp
add
or
or
mov
lock
add
sti
stos
push
add
inc
add
jmp
decl
repz
shrl
adc
call
push
mov
jnp
add
or
mov
lds
fsubl
lods
jns
cli
ret
cmp
xchg
lods
clc
mov
mov
inc
add
cmc
xor
ljmp
and
inc
add
xchg
ret
add
add
xchg
pop
and
call
sbb
add
jnp
data16
pushl
in
fcoms
add
add
decl
pop
cld
outsl
cmp
cld
sbb
add
into
push
jle
mov
pop
in
jno
pushl
xchg
adc
call
data16
jg
out
push
jbe
add
push
adc
jnp
add
shll
add
addl
add
in
jo
jmp
add
leave
and
test
add
dec
mov
add
bound
ljmp
sbb
inc
add
add
fldz
pop
outsl
inc
add
cmc
in
mov
add
mov
jb
jmp
cmpsl
add
or
and
ljmp
add
pop
aaa
std
mov
push
add
mov
add
repnz
fstl
mov
ficompl
lcall
int
and
lds
xchg
imul
ljmp
dec
sbb
push
fstps
shrb
inc
add
nop
addb
inc
add
inc
add
pop
imulb
adc
decl
cmovl
add
mov
fwait
outsl
sbb
sbb
and
xor
call
inc
add
add
add
fdivrl
add
add
jl
add
inc
add
add
adc
pushl
fistpl
push
js
out
or
mov
jl
mov
clc
rolb
or
add
add
add
mov
sub
decl
movl
lods
js
mov
sahf
daa
add
add
enter
add
out
jge
leave
mov
data16
loopne
or
dec
add
jmp
add
aaa
or
add
fwait
addl
lods
sbb
add
fwait
lds
and
movsb
add
cmpsb
add
add
mov
add
add
jae
ljmp
add
es
cmp
mov
std
or
mov
icebp
mov
add
add
sub
call
aas
addb
add
call
add
mov
pop
mov
add
out
stos
cmpsb
add
addl
add
add
ret
add
jae
incl
sbb
and
adc
ljmp
add
loopne
jns
fbld
mov
jle
popf
push
add
add
cltd
ret
add
jne
add
add
or
roll
xor
lcall
mov
xor
pushl
jne
add
add
fwait
add
incl
add
mov
negl
adc
incl
add
sbb
inc
add
das
mov
sbb
add
jmp
jb
incl
aaa
mov
add
cltd
or
repz
movsl
add
jge
mov
call
ljmp
add
add
std
xchg
in
cmp
jmp
mov
fdivrl
ljmp
cmp
add
push
and
incl
sbb
ljmp
add
clc
mov
imul
decl
inc
add
add
incl
call
fistpll
adc
pushl
add
call
add
das
adc
lcall
cli
mov
add
or
fists
add
inc
add
add
scas
cmp
add
sbb
rolb
adc
cmp
push
add
jo
push
dec
outsl
js
add
pop
call
ds
add
ss
jb
js
add
add
pop
shr
cmp
add
fisttpl
mov
stos
aaa
add
incl
add
add
fwait
pop
add
jge
add
out
mov
pop
test
ret
add
add
add
cmp
daa
add
add
imul
add
add
test
pusha
add
pop
adc
jmp
pop
add
add
pop
adc
jmp
je
add
inc
add
ljmp
shlb
cmp
mov
push
add
adc
decl
inc
add
jo
call
add
sbb
and
pushl
decl
add
mov
and
out
addl
rolb
pop
sub
cli
push
adc
lcall
add
add
inc
add
sub
and
lcall
add
mov
int
xchg
repz
add
addb
cli
ret
add
push
add
test
stos
sbb
ds
out
xor
jmp
cmp
add
xor
lcall
dec
scas
inc
add
imul
cmp
inc
add
mov
add
sub
incb
lcall
insb
mov
lds
sub
or
jl
add
push
add
add
sbb
inc
add
rolb
jne
add
add
aas
cs
adc
ds
out
pop
mull
loopne
iret
jbe
add
cs
xor
push
add
mov
add
jns
add
leave
sti
mov
add
fstpl
or
and
push
pop
add
sbb
sbb
mov
and
ljmp
std
xlat
lret
iret
testb
cli
loope
dec
sbb
add
ret
add
push
add
inc
add
mov
popa
add
mov
add
add
or
add
adc
lcall
mov
add
mov
pop
xlat
cmc
xor
incl
add
loope
bound
push
cmpsl
add
mov
xchg
lret
fwait
pop
adc
std
xchg
mov
pop
jecxz
pop
stc
mov
add
sbb
leave
das
xchg
pop
outsl
rcl
movb
bound
jmp
pop
push
add
dec
jbe
cmp
adc
add
in
mov
cmp
lcall
add
stos
xor
inc
add
movsl
add
sub
ret
add
push
add
imul
imulb
add
jnp
addb
push
sbb
stc
jmp
sbb
ret
add
jp
add
add
add
add
push
add
add
xchg
leave
int3
cltd
pop
xchg
dec
dec
xor
into
and
pushl
call
add
add
add
and
pushf
mov
add
sbb
inc
add
fldenv
add
jne
xchg
mov
jmp
dec
fdivrl
enter
ja
xchg
in
xlat
icebp
sub
hlt
add
ljmp
adc
jmp
and
out
mov
cmp
push
add
ret
push
push
add
fistps
or
roll
pop
jmp
add
add
inc
add
ljmp
mov
sub
lock
add
ja
add
jecxz
push
repz
add
ljmp
hlt
fildl
fcom
push
add
cld
push
fucomp
xor
inc
add
cltd
daa
add
add
jae
lcall
xor
cmpsl
add
test
into
movl
push
add
loope
fcmovb
add
shlb
xchg
xchg
in
lret
nop
das
in
push
add
ficoms
add
bnd
outsl
or
add
ret
sbb
ret
add
push
inc
add
add
out
jno
pushl
sub
mov
in
or
add
add
jle
add
cmc
mov
imul
lcall
add
fdivl
cmc
repz
push
add
aam
es
inc
add
mov
fwait
shr
jp
pop
loope
jg
lods
call
add
cld
hlt
ficompl
stos
jle
add
daa
add
push
add
adc
incl
add
add
repz
int
flds
lds
and
call
lcall
sub
jmp
add
shr
mov
daa
add
cmp
add
add
addb
add
ret
and
lcall
rorb
add
sbb
pop
or
add
test
mov
dec
cmp
sub
call
jmp
add
sub
das
adc
cmp
test
inc
add
add
add
decl
push
pop
add
cmpsl
add
add
xchg
jmp
inc
add
and
repnz
ljmp
add
sub
div
jge
std
incl
ljmp
add
sub
jge
add
lcall
leave
push
pop
add
ja
push
add
mov
addb
and
jmp
add
add
add
sub
imul
lcall
adc
ds
fnstcw
addl
dec
aam
add
push
shll
mov
jecxz
jmp
add
mov
add
xchg
call
sub
je
add
xor
add
jmp
nop
aad
mov
sbb
mov
lea
mov
jmp
add
inc
add
add
test
add
call
fnstcw
call
add
cld
sti
dec
aam
and
lcall
arpl
lcall
shl
add
add
add
xchg
pop
mov
mov
add
pushl
jmp
loope
sarb
lcall
add
mov
push
pop
add
add
add
xchg
pop
mov
decl
lea
call
add
ret
add
sbb
je
add
xor
call
add
and
incl
lcall
insl
pop
mov
mov
mov
add
cmp
cmp
mov
or
add
add
movsb
add
rcrl
add
add
lcall
sbb
fimuls
hlt
clc
cld
in
arpl
incl
push
fwait
inc
add
arpl
pushl
add
test
mov
rcr
popf
push
add
mov
cmp
add
ss
add
mov
cmp
add
imul
add
insb
xchg
inc
add
add
decl
pop
cmp
out
sbb
push
lcall
add
fdivs
mov
add
rsm
bound
jmp
add
jp
lods
xchg
xchg
jmp
aas
lock
imul
mov
mov
add
addl
pop
mov
add
mov
xor
lcall
pop
jns
sbb
xor
jmp
add
mov
add
mov
add
fdiv
sub
outsb
mov
and
and
pushl
add
test
dec
call
add
add
xchg
inc
add
add
decb
sub
mov
movb
and
jnp
insl
daa
add
lcall
jmp
in
shl
add
popf
and
data16
sub
movb
mov
cmp
add
add
js
xor
dec
pop
add
inc
add
sarl
dec
add
incl
sub
mov
xor
inc
add
icebp
xchg
cmp
mov
push
add
clc
mov
add
in
jg
aam
add
sub
add
aas
or
addl
call
shufps
add
mov
push
add
push
clc
mov
fimuls
add
ds
test
in
nop
pushf
out
hlt
mov
mov
add
cmp
lret
add
ljmp
inc
add
cmc
sti
and
stc
cmp
out
sub
jmp
adc
add
xchg
sbb
add
decl
add
add
inc
add
inc
add
pop
cwtl
adc
or
jmp
decl
repnz
inc
add
enter
mov
lcall
push
add
xchg
pop
mov
cmp
jae
call
cmpsl
add
cmpsl
add
inc
add
add
inc
add
pushl
mov
incl
pushl
add
inc
add
lcall
or
or
add
and
ljmp
mov
data16
or
pop
imul
add
xor
cmp
in
nop
gs
loop
xchg
mov
add
leave
imul
mov
add
notb
add
adc
test
sbb
add
lret
xor
addb
int
fdivrl
les
icebp
cwtl
imul
inc
add
cltd
xor
jge
add
add
sbb
cmp
jl
xchg
ds
add
jl
add
push
addb
sub
add
rolb
test
nop
push
add
repnz
lcall
inc
add
add
cmp
add
or
add
xor
pushl
call
adc
ljmp
inc
add
test
notb
pop
adc
add
int3
inc
add
add
pshufw
rorl
add
decl
add
add
add
jl
cli
iret
jle
add
push
loope
sbb
add
scas
lcall
js
das
xor
lcall
pushf
xchg
sub
add
mov
push
add
decl
xor
and
decl
jmp
add
add
add
xchg
clc
sbb
mov
mov
mov
jmp
inc
add
stc
jmp
add
sbb
int3
jmp
mov
nop
mov
cld
je
add
add
add
sub
add
arpl
ljmp
outsl
push
add
loopne
lret
pop
add
sbb
add
mov
popa
add
xchg
push
jnp
imul
mov
iret
daa
add
add
in
movsb
add
add
insb
pop
roll
add
add
jmp
fsub
add
add
jae
jmp
jmp
add
fsubs
add
movb
pop
repz
aam
add
sub
cmp
push
add
sub
add
cmpsl
add
fmul
push
add
inc
add
leave
std
xchg
push
mov
adc
decl
icebp
sub
add
jo
incl
call
mov
mov
add
add
inc
add
repz
jge
add
fsubrl
push
push
add
xchg
divb
add
dec
mov
repnz
jle
fldl2e
sbb
add
push
add
addb
add
faddl
add
lret
jne
add
push
addb
scas
or
add
lahf
dec
je
add
aad
adc
ljmp
aam
add
add
out
push
pop
in
sub
cld
fwait
bound
ljmp
xchg
enter
add
call
cmc
pushf
or
call
dec
aam
add
cmp
lock
addl
addl
add
add
shlb
add
stc
xchg
pusha
add
mov
add
ljmp
inc
add
pop
hlt
stos
cltd
dec
lods
pop
sbb
test
jae
call
add
ljmp
and
call
or
add
lods
push
jmp
test
mov
je
add
cmp
fldt
ja
mov
movl
imul
mov
or
xchg
cmp
decl
add
inc
add
cmc
pop
add
pop
add
and
jmp
add
add
incl
insb
mov
mov
mov
add
pop
mov
shr
testb
mov
add
xor
lcall
add
add
call
dec
sub
jmp
enter
lcall
test
xchg
pop
outsb
sbb
add
push
add
and
cmpsb
add
dec
sub
add
stc
add
pushl
add
mov
daa
add
cltd
imul
cmp
jmp
add
pusha
add
sbb
add
inc
add
movb
add
fldt
add
in
inc
add
pop
push
add
sub
adc
lcall
add
jle
sbb
aad
mov
call
xchg
cld
jno
decl
je
jo
push
mov
pop
push
jmp
call
test
cs
dec
add
mov
or
jbe
add
out
outsb
scas
jb
pushl
add
add
sbb
je
sbb
adc
dec
cmp
and
lcall
les
xchg
pusha
add
sarb
call
cmp
xor
incl
cmp
pop
mov
incl
mov
jb
pushl
nop
mov
pushl
add
push
inc
add
out
aam
movb
not
stc
adc
ljmp
ljmp
add
jmp
test
pop
push
inc
add
inc
add
mov
scas
mov
add
jo
jmp
add
add
add
js
add
mov
fdivrs
add
in
fstpt
inc
add
add
inc
add
adc
fdiv
popa
add
jno
jmp
dec
cmp
xor
incl
jnp
add
add
loope
xchg
inc
add
lret
xor
jmp
mov
jmp
add
jp
mov
mov
cmp
ljmp
call
add
movsl
add
add
aad
loopne
mov
data16
outsl
aaa
xor
decl
mov
mov
add
call
add
rolb
popf
push
add
lods
push
add
stos
add
add
push
sbb
xchg
dec
or
add
enter
push
lock
out
in
adc
test
in
fisubrs
jmp
add
movl
add
pop
dec
jecxz
stos
in
lods
mov
addl
push
or
cwtl
and
call
xor
incl
add
lods
dec
movsl
add
stc
pop
pop
icebp
les
sar
mov
xchg
push
add
in
or
mov
add
add
inc
add
mov
jns
mov
pop
rcrl
test
mov
cltd
mov
add
ljmp
cmp
pushf
add
mov
xor
jmp
add
adc
pushl
in
jecxz
out
push
add
dec
mov
mov
add
js
sar
adc
decl
dec
dec
je
mov
addl
add
adc
jno
call
add
add
cwtl
lcall
test
add
inc
add
sub
cwtl
loopne
std
sbb
add
sub
add
mov
cmp
lahf
dec
mov
add
jne
add
jecxz
xchg
out
into
out
out
push
add
outsl
mov
add
mov
fwait
scas
das
mov
add
adc
in
fistl
movb
mov
add
dec
movb
add
jne
add
add
lret
mov
add
add
loop
addl
cmp
jmp
add
decl
add
mov
pop
inc
add
mov
mov
mov
gs
jge
push
add
insb
shrb
jns
push
add
mov
leave
xor
add
in
daa
add
in
lds
out
adc
push
cmp
push
add
ljmp
sbb
incl
add
dec
xor
add
jnp
xor
cmp
cs
data16
pop
jbe
or
pop
je
add
add
add
lcall
add
lcall
push
add
add
lds
mov
cli
iret
inc
add
dec
cmp
ret
add
xor
add
xor
or
pop
stc
mov
insl
xor
call
mov
and
pushl
add
add
out
roll
inc
add
in
push
add
mov
fldt
push
add
ds
data16
inc
add
pop
aam
add
ret
add
jmp
in
int
add
in
jp
push
adc
mov
add
add
add
and
jmp
pop
dec
inc
add
dec
push
add
push
xchg
sahf
cmp
int
cmp
sub
push
add
and
ljmp
add
aad
add
pop
add
add
movb
xchg
dec
mov
add
rcl
pmulhuw
xor
jmp
cmp
imul
out
loopne
mov
jg
add
add
add
arpl
pushl
add
add
or
lods
movsb
add
add
add
add
daa
add
mov
ljmp
pop
repnz
add
xchg
xchg
iret
dec
ret
add
cmp
inc
add
dec
dec
pop
aaa
aam
jmp
add
call
add
pushl
add
out
arpl
jmp
add
je
icebp
fsubr
out
lahf
mov
add
dec
xchg
mov
xchg
repz
mov
add
add
add
push
add
add
jge
add
cmp
add
decl
std
pop
jle
add
dec
sub
add
movsb
add
add
inc
add
and
decl
add
push
or
jbe
stos
inc
add
mov
sti
lods
xchg
addb
add
or
add
pusha
add
pop
scas
out
movb
mov
add
lcall
add
add
add
fwait
push
mov
add
ja
add
pop
movb
add
push
in
mov
push
add
jns
das
lods
movsl
add
das
mov
add
and
ljmp
add
jns
test
lods
mov
rolb
add
add
scas
stc
cwtl
sbb
je
sub
push
add
fwait
jno
inc
add
fcomps
lds
lahf
lret
xchg
insb
stos
mov
or
cmc
push
shlb
mov
out
xchg
test
add
jl
out
and
mov
mov
call
daa
add
add
xlat
xor
jmp
add
fst
pushf
roll
jle
add
decl
lea
movl
jae
ljmp
insb
add
pop
in
std
into
call
add
fidivl
jp
cmp
addl
mov
mov
mov
rorl
xor
incl
add
sti
jecxz
pushf
pop
jp
push
cld
fscale
add
lcall
fisttpl
xor
pushl
dec
cmpsl
add
pop
movl
jb
incl
add
xor
mov
mov
cltd
das
jle
add
lods
insb
jl
fwait
dec
loope
fldcw
data16
dec
ret
add
add
inc
add
xchg
xchg
loopne
sub
add
add
xor
lcall
mov
mov
mov
add
inc
add
les
xor
sub
mov
outsb
faddl
add
call
jecxz
jno
fdivl
jnp
sahf
into
cwtl
and
jmp
sarb
mov
int3
push
pop
or
lds
out
inc
add
jmp
adc
inc
add
add
decl
aas
add
pop
cmc
fs
add
push
sub
sbb
fcompl
dec
jno
lcall
mov
add
in
scas
inc
add
add
pushl
mov
cmpsb
add
lret
ucomiss
roll
daa
add
jbe
add
pusha
add
cwtl
fcmove
mov
call
add
jge
add
cmp
add
and
imul
add
ljmp
xchg
int3
jno
ljmp
add
add
and
addb
jne
add
adc
pushl
add
or
js
mov
aas
mov
cld
testb
insl
fiadds
add
imul
or
call
add
imul
xchg
in
xchg
int
cltd
sahf
lods
aad
enter
aaa
insb
push
std
out
push
les
lret
testl
loop
lods
xor
decl
mov
mov
mov
clc
xchg
dec
and
add
push
gs
out
push
add
bound
decl
cmp
add
adc
call
shl
rcr
push
xchg
scas
mov
in
popf
lcall
push
addl
lcall
imul
ljmp
pop
data16
xor
add
clc
add
push
push
nop
pop
cli
mov
inc
add
lods
jns
mov
add
sbb
add
stos
add
lcall
out
push
add
scas
xor
pushl
jno
dec
iret
sbb
cmc
sbb
add
sbb
roll
add
fcmovnu
push
add
mov
mov
pop
cld
mov
pop
ss
sub
fisttpll
filds
add
add
adc
add
mov
push
repz
scas
jne
add
cmp
mov
out
hlt
ja
add
sahf
imul
adc
add
sub
fnstcw
xchg
roll
enter
or
add
dec
aaa
dec
addl
pop
adc
jmp
xchg
dec
mov
xchg
in
repz
lea
add
add
xor
jmp
add
push
fcomps
add
lods
movsl
add
add
out
hlt
and
pushl
incl
pop
pusha
add
cmp
mov
mov
decl
or
imul
add
add
mov
addl
xchg
jmp
or
or
loop
pop
add
add
cmp
or
and
imul
pop
or
jnp
add
test
add
lds
pop
add
incl
mov
or
aas
int
les
inc
add
call
jle
add
add
rolb
or
add
insl
push
add
xor
add
add
add
dec
and
mov
imul
aas
add
incl
add
add
fiadds
add
add
xchg
jmp
leave
jg
imul
add
xlat
adc
lcall
pop
add
decl
cmp
and
ds
incb
fldpi
into
mov
jg
xor
call
ljmp
fsubp
add
pushl
add
dec
adc
flds
sub
imul
js
xchg
out
idivb
icebp
fsub
add
rclb
mov
ds
add
mov
xor
pushl
add
or
mov
mov
addl
add
mov
add
test
inc
add
xlat
mov
xchg
aad
jbe
mov
and
pop
movsb
add
dec
cmpsb
add
lret
rorb
push
cltd
pop
push
daa
add
loope
or
sti
movsb
add
sbb
aas
pusha
add
movsl
add
and
mov
inc
add
daa
add
add
mov
sbb
push
jae
lcall
add
imul
ljmp
add
xchg
in
pop
push
mov
pop
bnd
xchg
sub
push
add
sub
mov
inc
add
add
xchg
push
add
addl
aas
jmp
mov
jns
jmp
lret
ret
add
add
jno
lcall
add
repz
or
and
ds
cs
je
push
das
inc
add
cld
ja
push
jo
jmp
add
ljmp
add
daa
add
add
out
mov
inc
add
cmp
jmp
jmp
lock
popf
jle
inc
add
xor
jmp
aas
and
call
add
insl
fisubl
add
mov
add
shrb
mov
mov
pop
cli
js
add
mov
jl
mov
add
pop
dec
or
add
cmp
add
mov
adc
pushl
les
pop
and
cmp
idivl
add
dec
cmp
jne
jmp
add
push
add
decl
adc
add
mov
sub
add
mov
call
in
adc
cmc
push
jg
movsb
add
add
add
lods
dec
push
mov
call
mov
add
jmp
add
inc
add
add
ja
add
cmp
mov
add
add
adc
lahf
mov
add
out
pop
mov
sub
fwait
inc
add
add
mov
adc
xchg
ficoml
and
jmp
add
movb
add
jne
pop
ret
dec
les
jo
lcall
push
add
in
mov
add
add
decl
dec
cmpsb
add
fisubrl
stos
inc
add
xchg
outsb
addl
mov
imulb
sbb
add
jmp
decl
add
add
mov
add
add
add
daa
add
adc
decl
bound
lcall
loop
mov
dec
iret
inc
add
push
add
push
add
shll
add
add
adc
jmp
add
ret
add
fwait
aas
push
add
mull
dec
xor
cmc
popa
add
enter
jmp
add
cltd
pop
mov
call
mov
ss
flds
add
inc
add
enter
push
add
aas
xor
jg
rorl
push
sbb
test
xlat
fmull
ja
pushf
dec
cwtl
mov
mov
or
mov
not
mov
push
arpl
jns
popa
add
jl
cmp
sub
lcall
ljmp
add
test
incl
add
lret
jl
and
jmp
add
mov
xor
pushl
lea
dec
xor
decl
cmp
push
add
cmp
out
dec
cmp
add
incl
call
add
or
loope
aad
clc
dec
jge
mov
call
pushf
nop
and
pusha
add
jl
add
add
push
add
mov
inc
add
icebp
sub
dec
xchg
add
insb
je
add
bound
cld
mov
popl
add
mov
sub
pop
mov
push
add
and
call
and
pushl
add
add
xchg
mov
iret
out
test
add
cwtl
sbb
enter
sub
sti
popa
add
pop
and
incl
mov
add
rcrb
add
pop
jne
xlat
das
lds
data16
mov
or
add
loop
pop
push
pop
out
rolb
addl
test
cmp
mov
movb
add
add
add
popa
add
test
mov
push
add
lcall
sub
pop
pop
mov
mov
add
jns
jo
mov
pop
rolb
mov
add
and
lods
lret
inc
add
mov
add
jecxz
lret
mov
add
outsl
mov
or
aas
cmc
jl
rolb
add
std
das
dec
pop
add
ljmp
inc
add
add
add
pusha
add
cmp
add
inc
add
dec
mov
movl
bnd
jle
mov
inc
add
add
and
adc
decl
aad
mov
int
xchg
xchg
out
les
scas
lret
fisubrl
sub
cld
aad
inc
add
mov
jp
add
cltd
add
lcall
fcmovnbe
adc
ljmp
add
call
lcall
leave
je
movl
add
arpl
decl
rclb
lcall
lods
addl
sbb
add
sub
cli
sbb
ljmp
xchg
jae
mov
fdivrl
add
call
pushl
repz
xchg
pushf
out
mov
adc
jmp
mov
repnz
add
add
add
aaa
lea
mov
add
enter
jmp
add
and
pushl
add
adc
decl
add
ljmp
scas
sbb
add
fsubrs
mov
jnp
scas
inc
add
jns
xadd
push
clc
and
cld
movl
mov
lods
pop
jae
ljmp
jne
xor
push
popf
mov
fnclex
add
mov
xchg
popa
add
and
bound
ljmp
and
mov
xchg
addl
add
add
mov
sbb
cmp
stos
mov
cmp
mov
xchg
jecxz
enter
add
aas
ret
add
lods
add
mov
inc
add
or
js
add
pushl
add
lock
add
mov
add
ljmp
insl
inc
add
out
xchg
push
sbb
addl
add
push
and
cmp
dec
xor
pushl
mov
add
add
add
lcall
add
inc
add
mov
and
pushl
add
xchg
fimull
mov
popa
add
loop
fst
fldcw
pop
incb
add
bound
ljmp
add
jge
add
cs
lret
sbb
and
call
xchg
sbb
cmp
outsl
nop
mov
pop
push
adc
add
push
add
ret
add
lds
scas
loop
inc
add
pop
xor
fimuls
xor
incl
std
fcmovnbe
mov
pop
addb
bound
pushl
adc
add
fdivr
outsb
and
jmp
cmpsl
add
cmp
mov
data16
pop
shll
lcall
nop
lcall
add
sub
and
mov
mov
outsb
xchg
int
jb
incl
add
jbe
add
mov
ss
out
xor
call
lcall
or
sbb
add
pop
in
add
lcall
test
popa
add
lret
mov
paddsw
mov
test
sbb
pop
inc
add
dec
movsb
add
movsb
add
mov
stos
sub
xor
decl
fsubl
add
and
lcall
xchg
inc
add
in
movl
add
sbb
stc
imul
mov
or
jbe
add
out
inc
add
adc
ljmp
add
add
jno
incl
add
push
add
lds
pop
jb
ds
add
add
into
xor
inc
add
mov
add
jl
testb
lods
pop
mov
lret
lds
movl
add
xchg
mov
jno
inc
add
xor
lcall
add
add
sbb
pop
into
sbb
add
arpl
decl
loop
adc
pushl
mov
sub
addb
cmp
xlat
mov
lret
out
iret
mov
add
addl
jns
xor
and
jl
adc
add
sbb
dec
lea
add
out
jbe
add
stos
sbb
mov
add
lret
add
add
and
jmp
stos
mov
ja
add
cmpsl
add
in
insl
aad
add
shll
push
lret
ss
mov
add
sahf
ja
add
xlat
stos
jnp
add
mov
and
aas
or
fdivrs
loopne
fbstp
add
aad
dec
faddp
add
inc
add
addb
mov
mov
iret
add
xor
jmp
add
mov
pop
in
stos
insl
test
dec
add
ljmp
ljmp
test
ljmp
ljmp
clc
adc
decl
mov
add
add
ljmp
mov
pushl
inc
add
addl
outsl
into
movzwl
pushl
aas
and
ljmp
mov
lcall
daa
add
add
mov
jmp
add
rcrb
pop
dec
mov
xchg
insl
push
add
mov
xor
call
xchg
clc
jl
movsb
add
ljmp
add
dec
ja
add
mov
add
bound
ljmp
out
in
arpl
clc
xor
add
cmp
cmp
add
add
pushl
add
xlat
mov
cmp
add
jns
add
adc
ljmp
imull
xchg
aaa
dec
movsb
add
call
add
enter
xchg
mov
add
or
in
leave
pop
pop
sub
mov
add
add
lahf
sbb
fmulp
inc
add
jecxz
add
xor
pushl
add
cmp
add
add
mov
add
lcall
add
lcall
cmpsl
add
or
add
jle
cmp
add
add
jb
decl
fildll
jns
ss
or
pop
xacquire
roll
push
add
aaa
xchg
aaa
or
add
inc
add
add
pushl
add
sbb
add
fcomps
pop
stc
push
add
insb
push
mov
inc
add
enter
std
testb
cmc
add
stos
xor
in
add
ljmp
adc
pushl
push
inc
add
pop
add
pushl
add
lods
cmp
ds
cmc
pop
dec
mov
dec
pop
add
cwtl
inc
add
std
iret
movsl
add
jmp
adc
jmp
addl
add
add
add
stos
fdivl
or
sbb
adc
decl
data16
aas
cltd
xchg
inc
add
movsl
add
sub
pop
cmp
das
dec
cmc
popa
add
dec
or
call
cmp
add
roll
cmp
sbb
add
xlat
sbb
pop
outsl
addl
add
add
sbb
loope
in
std
push
add
mov
jmp
aas
push
add
popa
add
mov
add
inc
add
mov
mov
add
pushf
jl
cmpsl
add
xchg
fcomps
jg
add
repnz
add
sbb
add
add
daa
add
arpl
lcall
incl
mov
adc
ljmp
iret
sar
cld
pop
xor
jmp
push
rol
add
jg
loopne
insl
mov
add
lods
add
in
cmp
sub
add
insb
add
add
mov
mov
push
fcoms
lahf
and
movl
pushl
add
mov
fmull
add
bound
call
inc
add
xchg
cld
and
push
test
inc
add
shr
jae
call
add
mov
add
out
push
add
push
add
idivl
shrl
hlt
dec
mov
mov
add
add
mov
push
add
add
fbstp
add
mov
bound
incl
dec
pop
fiadds
add
test
jbe
loop
addr16
data16
push
add
call
ljmp
jl
add
xchg
mov
test
int3
iret
aas
pop
sti
adc
decl
add
pushl
jl
add
add
add
mov
add
pushl
add
imul
sahf
sbb
add
add
mov
jno
pushl
add
mov
loope
out
repz
mov
imul
add
add
xchg
xor
add
inc
add
lret
inc
add
in
mov
mov
add
add
cld
push
out
adc
mov
insl
in
leave
pop
add
ljmp
outsl
cwtl
cld
or
fisubs
lcall
cmp
lock
sub
data16
mov
int
push
mov
push
pop
in
lret
pop
pop
add
add
add
imul
lret
and
decl
js
enter
adc
ljmp
cmpsb
add
add
pop
mov
add
sub
adc
jmp
add
mov
lock
push
lcall
add
add
inc
add
movsl
add
addb
add
mov
cld
rorb
roll
lods
ss
fldt
add
cmp
lock
add
add
sbb
bound
call
add
out
cmp
movb
repz
loope
jg
add
sub
cltd
mov
adc
call
sub
pushf
je
add
lret
add
leave
mov
push
ljmp
pushl
jmp
add
pop
and
incl
add
outsb
sub
add
incl
pushl
test
mov
fwait
test
add
xor
ffree
add
add
cmp
xor
call
addb
mov
incl
lret
test
add
popa
add
dec
adc
call
pusha
add
rclb
jle
pop
insl
sub
repz
idivl
imul
scas
movl
pushl
pushl
dec
sub
mov
scas
inc
add
sahf
lcall
add
xchg
mov
notb
add
xchg
shl
add
and
out
in
hlt
push
add
sub
pop
dec
pop
add
lcall
jb
std
popa
add
add
call
std
xchg
or
xchg
sarl
add
test
enter
add
jmp
loopne
push
mov
and
call
add
add
decl
add
addl
add
add
add
xor
decl
jmp
add
xor
dec
ss
ds
add
cmp
add
imul
sub
inc
add
outsl
in
roll
popl
add
mov
call
movsl
add
repz
imul
rclb
movb
sbb
add
imul
lods
into
popa
add
lods
cwtl
sbb
imul
add
pop
xlat
in
jns
cltd
adc
pushl
hlt
loopne
movsb
add
push
add
dec
jle
cmc
sub
sbb
add
cmp
add
sub
add
add
aad
push
add
push
add
dec
aam
add
jns
ss
cwtl
pop
add
cltd
hlt
and
jmp
sbb
add
pop
jp
add
mov
addb
xor
call
add
incl
js
add
add
jmp
dec
sbb
out
pop
add
call
mov
jg
dec
mov
jle
add
sub
mov
das
pop
cmp
inc
add
test
push
sbb
add
xchg
push
add
call
add
cmp
daa
add
inc
add
or
mov
in
leave
cmp
add
movl
lods
add
push
and
fs
add
lcall
push
add
inc
add
add
jbe
add
addb
shr
pop
insl
scas
xchg
es
add
add
decl
add
add
inc
add
call
add
jo
lcall
inc
add
add
add
or
add
rdtsc
add
repz
arpl
jle
ficoml
decl
decl
pop
dec
fnstsw
add
das
push
pusha
add
sub
cmp
xor
dec
in
shll
add
stos
cmp
add
add
cmp
add
inc
add
sarl
inc
add
cmc
sbb
xchg
sub
aam
je
ja
test
clc
adc
ljmp
cwtl
add
jp
pop
stos
xlat
shl
lds
adc
mov
or
adc
inc
add
adc
dec
jbe
sbb
jmp
add
rolb
in
daa
add
add
dec
sbb
add
jb
decl
mov
xchg
in
nop
addl
dec
inc
add
add
decl
movl
sbb
jg
fcmovbe
cltd
push
pop
cmp
add
repz
inc
add
sbb
bound
add
push
add
lcall
push
inc
add
add
fmuls
xor
decl
int3
loope
insl
scas
addl
jns
sahf
cmpsl
add
add
or
arpl
jmp
add
pop
inc
add
add
add
out
jmp
cltd
arpl
call
roll
loop
xchg
nop
sbb
in
lea
sbb
add
xlat
lret
adc
in
divb
inc
add
insb
movl
jb
pushl
add
cld
cmp
lock
lea
ret
add
mov
inc
add
adc
mov
mov
adc
dec
repz
add
pushl
decl
fidivs
incl
add
add
fidivs
sarl
jne
add
sub
add
mov
imul
add
mov
mov
mov
and
fnclex
add
inc
add
popa
add
mov
and
pushl
ret
add
stos
pop
or
push
addb
popa
add
mov
lahf
pop
cmc
cmp
jno
pushl
data16
add
add
adc
movups
clc
push
add
add
add
dec
xchg
and
pushl
ljmp
push
add
cmp
fimull
inc
add
jbe
add
add
aad
sub
or
and
decl
xor
call
js
add
rcrl
pop
lcall
insb
loope
mov
add
add
mov
lods
xor
pushl
adc
insl
js
dec
repnz
mov
in
test
bound
stc
cmc
sub
repz
lock
ljmp
call
mov
daa
add
rcll
add
jecxz
pop
sahf
xchg
leave
push
js
ret
add
movb
and
pushl
add
flds
add
mov
scas
jl
cmp
add
int3
pop
stos
in
lds
sarl
aas
roll
out
add
decl
add
stos
mov
add
and
decl
ljmp
add
pusha
add
or
decl
aas
test
mov
add
movsl
add
mov
out
mov
mov
lcall
sbb
rolb
sbb
mov
and
add
sub
sbb
insb
cmp
ret
pop
dec
jb
jmp
pop
mov
aad
add
lods
mov
add
adc
decl
add
fcompl
mov
push
add
inc
add
incb
jbe
add
call
add
cs
add
cltd
push
stos
je
add
xchg
std
push
xchg
push
inc
add
mov
add
loopne
in
aaa
cli
and
jmp
add
jg
add
mov
loop
cmp
mov
stos
in
imulb
nop
mov
ret
add
push
sbb
lea
push
add
or
inc
add
mov
add
dec
stc
ss
push
scas
adc
incl
jmp
iret
imul
add
add
pop
push
push
add
xor
cmp
add
or
fwait
lds
movb
add
lahf
mov
add
lret
addb
jge
adc
lcall
ljmp
mov
add
test
cld
pop
icebp
addb
add
xor
out
mov
add
jge
addl
decl
xor
pushl
cltd
sub
insl
pop
mov
fldt
push
int3
jecxz
sahf
sbb
ljmp
aad
add
add
lahf
or
add
add
cmp
pop
mov
fwait
out
mov
or
int3
mov
call
call
repz
ljmp
xchg
xlat
pop
in
jns
add
xor
jns
inc
add
or
add
insl
int
add
xor
push
add
add
xor
ljmp
pop
mov
add
jp
mov
test
fisttpll
in
fistpll
add
add
outsb
call
and
add
xor
dec
jp
add
cmpsb
add
decl
add
cmc
mov
sbb
add
addl
loope
push
enter
add
jbe
lcall
in
mov
xor
call
add
mov
add
enter
das
movsb
add
icebp
xlat
cmp
pop
inc
add
stc
ret
add
add
xchg
cmp
xchg
xor
inc
add
addl
clc
ret
add
add
jbe
pop
cmpsb
add
and
mov
add
add
mov
add
add
aam
add
inc
add
dec
aad
sub
clc
es
loope
inc
add
push
pop
dec
movsb
add
xchg
pop
hlt
aam
mov
inc
add
add
push
xchg
mov
xchg
xchg
add
test
daa
add
add
push
lods
in
ljmp
add
mov
add
add
jg
dec
int
loop
int3
xor
call
adc
dec
movl
fdecstp
jae
sti
insb
sub
addb
sub
add
loopne
mov
add
call
repnz
jns
clc
imul
add
add
jl
dec
jns
mov
fsubs
lea
dec
mov
out
jne
mov
add
dec
and
call
ljmp
xchg
and
pushl
add
js
mov
add
mov
push
es
loopne
xor
incl
jmp
incl
fadds
out
push
add
loop
into
stc
add
incl
add
insb
je
push
add
fstpl
push
fstpt
inc
add
add
fwait
aam
pop
jecxz
std
inc
add
lcall
imul
xor
decl
loopne
jbe
xlat
sub
mov
call
call
addb
aas
mov
stc
dec
addb
cmpsb
add
sti
dec
xor
add
aad
add
fs
push
add
pushf
mov
add
insb
movb
sub
jno
call
push
add
add
xor
nop
cs
insl
icebp
stos
pop
add
shlb
fcomip
call
inc
add
stos
xchg
pop
or
jmp
add
push
dec
pop
dec
xchg
lods
sbb
lcall
add
fucomi
push
dec
jbe
add
imul
stos
pop
add
add
cmc
push
mov
int
rclb
add
add
pop
mov
mov
and
ds
dec
leave
inc
add
add
add
pop
xor
jmp
add
mov
add
push
addb
ja
add
push
add
jp
add
sub
icebp
cmp
mov
aas
sahf
aaa
jmp
aad
add
sahf
lret
add
lds
jmp
and
incl
std
mov
push
add
lahf
jle
add
loop
sbb
add
add
inc
add
fnstenv
add
dec
jl
xor
scas
mov
push
sbb
loope
scas
hlt
lcall
mov
call
add
dec
xor
jmp
add
jmp
add
push
cli
out
push
nop
pop
shrb
add
popl
mov
push
mov
push
cmp
icebp
lret
outsb
jge
mov
rorb
stc
or
add
xor
add
sti
inc
add
incl
lcall
imul
movb
push
add
fdivs
add
bound
jmp
add
pop
xchg
cs
pop
movsb
add
cwtl
clc
lds
add
jecxz
into
xor
call
imull
roll
mov
lcall
add
push
insb
movsb
add
sti
adc
ljmp
add
in
push
lcall
sbb
les
mov
ss
roll
mov
out
jge
add
or
sbb
add
xor
push
add
cmp
test
sub
fadd
add
pop
xchg
stos
cmp
addb
lret
decl
mov
fisttps
movb
pushf
push
nop
int
outsb
jbe
in
fs
les
mov
lock
add
popa
add
sti
or
mov
fwait
adc
mov
adc
lcall
add
loop
or
add
add
add
add
add
push
out
outsb
push
xchg
insb
jno
decl
jmp
mov
xor
mov
mov
mov
incl
or
and
jns
stc
sbb
lcall
cmp
jmp
add
xchg
into
mov
add
call
xchg
lahf
inc
add
jb
decl
add
decl
add
cwtl
cltd
lea
mov
adc
incl
call
adc
jmp
add
popl
add
jle
fnsetpm(287
add
mov
pop
roll
rep
lret
xchg
xor
stos
lods
leave
inc
add
mov
fsqrt
rorl
cmp
add
movb
aaa
popf
cltd
pop
sti
adc
dec
dec
fidivrs
inc
add
movl
fldcw
je
addl
dec
jns
add
add
add
aas
das
sbb
xor
ljmp
push
inc
add
mov
aas
loop
add
inc
add
lods
mov
add
lock
add
movsb
add
add
inc
add
adc
add
mov
dec
in
sbb
fildl
jmp
add
push
add
xor
pushl
incl
add
ljmp
push
add
mov
cli
nop
dec
out
adc
xchg
mov
xor
decl
addl
jnp
out
pop
mov
push
test
mov
add
xor
lcall
mov
mul
add
decl
and
jmp
add
xor
decl
scas
inc
add
mov
add
add
call
addr16
lock
lea
popl
mov
add
xchg
mov
adc
add
or
add
stos
mov
bound
lcall
add
pop
in
sti
add
into
fildll
ljmp
xor
call
push
add
jne
sbb
xor
call
add
mov
fs
add
add
dec
fbstp
jmp
add
bound
cmp
pusha
add
cmp
add
pop
xor
fdivrl
pop
mov
add
fidivrl
xor
add
push
push
add
add
addb
out
rorl
jl,pn
or
add
lcall
jne
lods
and
decl
add
ds
mov
lds
shr
mov
and
xchg
or
add
mov
pop
add
call
adc
add
jmp
add
repz
mov
add
jb
call
incb
movl
mov
xchg
adc
incl
add
push
add
and
inc
add
jp
push
add
cs
add
mov
add
inc
add
incl
sbb
push
dec
loope
push
add
push
adc
leave
std
out
inc
add
mov
sbb
add
aam
enter
add
inc
add
cmp
add
add
jno
call
js
sbb
and
iret
movl
icebp
mov
outsl
or
outsl
testb
iret
xchg
inc
add
push
jnp
add
add
movsb
add
aad
imul
add
addr16
add
xchg
xor
call
add
or
or
add
inc
add
movb
xlat
je
out
cwtl
mov
rolb
add
add
mov
pop
add
aas
hlt
xchg
inc
add
add
sub
xor
call
jo
call
test
dec
jae
jmp
decl
bound
decl
sbb
sub
add
dec
push
jno
jmp
dec
dec
test
stos
scas
out
adc
mov
add
out
jecxz
popa
add
sub
mov
add
add
add
sbb
mov
sbb
mov
push
xor
dec
jg
add
jno
cmp
mov
lods
sbb
add
xchg
jp
jle
jle
jns
add
jl
jl
add
mov
or
inc
add
loope
popa
add
dec
jp
cli
or
xor
dec
test
add
pop
pusha
add
sbb
mov
mov
push
ret
add
in
cmc
cld
jns
or
icebp
fidivl
add
mov
push
test
outsl
cli
mov
call
call
sub
outsb
out
mov
add
add
pop
add
or
push
insb
add
pushl
sub
jno
decl
aaa
sub
cmp
pusha
add
imul
add
incl
pushl
lods
jne
or
lods
loopne
jecxz
in
outsb
imul
add
stc
dec
xor
ljmp
movsl
add
xor
jmp
pop
pop
pop
in
out
outsb
adc
decl
cld
and
mov
decl
aas
roll
add
lcall
lret
and
dec
test
cltd
add
add
add
out
arpl
mov
jno
ljmp
scas
inc
add
xor
ljmp
mov
pop
cmp
cmp
push
add
sub
add
sbb
and
push
add
pusha
add
lcall
add
add
add
decl
push
movb
add
add
fdivrl
fdiv
jle
jge
add
xchg
adc
jmp
add
dec
in
or
add
nop
popa
add
sub
jno
out
sub
add
push
lock
lret
mov
lods
lea
movb
add
mov
aaa
loopne
or
sub
add
jge
cmp
sahf
push
cwtl
movb
mov
adc
lcall
testl
lcall
daa
add
mov
pop
das
pop
loop
push
and
cmp
addl
shl
pushf
pusha
add
mulb
jle
push
add
dec
addb
int3
xchg
jne
addb
add
mov
push
push
adc
push
mull
jmp
add
add
scas
and
out
inc
add
push
cwtl
jg
add
icebp
popa
add
inc
add
add
scas
sub
add
addb
movl
adc
pushl
add
dec
or
add
push
bound
call
stc
jge
mov
and
jmp
add
lret
add
dec
addl
imul
jb
dec
inc
add
inc
add
add
loopne
fisubrs
add
and
inc
add
out
add
aam
dec
repnz
dec
push
daa
add
add
xchg
inc
add
loop
sahf
hlt
test
iret
out
dec
pop
add
out
cltd
and
lcall
pop
enter
aas
addr16
lret
push
add
xor
sub
insl
mov
jg
add
xor
out
mov
cltd
pop
lahf
test
add
clc
mov
roll
bound
jmp
add
jmp
and
lcall
mov
jb
lcall
mov
add
add
xor
jmp
push
in
mov
lods
mov
mov
aad
xchg
lods
pop
roll
ret
push
mov
scas
rcl
test
mov
mov
add
call
or
adc
mov
cmpsb
add
out
rolb
out
adc
mov
incl
add
nop
lret
insb
mov
xchg
push
add
mov
stos
add
push
adc
pushl
add
pop
jmp
add
add
mov
mov
sub
hlt
sahf
int
jno
clc
push
add
into
lea
add
lret
rolb
add
and
decl
add
push
add
push
add
jg
add
mov
call
jl
pop
pop
push
clts
add
add
mov
roll
add
data16
fs
lret
ss
ljmp
sub
pushl
jp
xchg
xchg
pop
ss
or
fwait
push
add
dec
dec
mov
std
and
fwait
xor
ljmp
mov
repnz
add
add
mov
add
cmc
and
incl
inc
add
or
les
iret
adc
add
add
lahf
ja
imul
sub
add
inc
add
jge
xchg
adc
inc
add
add
pop
clc
data16
movsl
add
jecxz
mov
fistl
mov
add
cmp
mov
bound
decl
cmp
add
in
xchg
mov
cli
xchg
movl
or
mov
cmp
jecxz
jnp
add
addl
add
rolb
add
add
jp
jmp
mov
add
ljmp
mov
add
fimuls
incl
jmp
add
or
inc
add
jecxz
push
xchg
rolb
add
lds
xchg
mov
daa
add
outsl
cld
decb
lcall
das
xor
aad
es
mov
je
add
add
push
jae
decl
test
jecxz
nop
into
ljmp
add
fcmovu
aam
mov
adc
loop
mov
and
jg
filds
data16
inc
add
add
arpl
pushl
add
ljmp
mov
add
loopne
push
sbb
pusha
add
insb
out
xchg
lods
ja
mov
jmp
mov
nop
clc
xchg
and
pushl
cmp
add
lods
or
sub
lcall
add
or
int3
dec
pusha
add
mov
fbld
add
xor
ljmp
repnz
and
fisttpll
cmp
jo
call
lcall
sub
add
sub
add
mov
add
outsl
sbb
add
dec
sbb
bound
cmp
jb
call
jge
mov
insl
imul
ficomps
out
rolb
add
sarb
je
jge
notl
pop
add
add
add
call
add
xchg
jge
push
add
pushf
cli
cmc
xor
ljmp
ljmp
clc
add
pushl
inc
add
mov
jmp
add
xor
adc
xor
decl
add
fnstcw
mov
jmp
data16
movb
jp
inc
add
mov
mov
dec
cmp
fld
add
push
inc
add
movsb
add
add
ljmp
adc
ljmp
pop
jecxz
scas
cld
add
jle
mov
jbe
pop
add
lcall
add
add
add
dec
jmp
mov
jb
jl
add
ja
fimuls
shrl
sub
add
lea
add
pop
cld
pusha
add
movsb
add
push
inc
add
inc
add
sbb
add
inc
add
add
outsl
sbb
decl
data16
add
out
leave
bound
decl
add
xor
jmp
jb
dec
aaa
mov
pushf
mov
push
add
push
add
sbb
xor
ljmp
xchg
or
add
jne
add
sub
push
add
std
and
decl
cld
xchg
or
mov
sbb
add
lcall
jmp
mov
add
adc
lea
cli
xchg
ljmp
mov
dec
inc
add
scas
stos
loopne
stos
pop
push
sbb
xchg
fstl
hlt
stos
cmp
xchg
fs
test
cmp
mov
add
inc
add
add
pop
shlb
add
ja
fdivr
add
inc
add
pop
add
add
scas
push
and
mov
pushf
ret
clc
outsb
cmpsb
add
and
decl
xchg
movsl
add
add
jle
add
add
lcall
xchg
int
pusha
add
out
out
adc
ljmp
sbb
je
mov
test
test
mov
add
int
sbb
sbb
pushl
add
addl
test
sub
xor
call
add
dec
idivb
shl
sub
add
aam
fldl2t
cmp
rcpps
pushl
cmp
add
lds
movsb
add
pop
fwait
cmp
add
ljmp
add
arpl
out
aad
mov
mov
push
bound
dec
popa
add
inc
add
icebp
xchg
inc
add
in
push
lahf
cmp
les
xor
lcall
enter
xchg
ds
lods
mov
bound
incl
and
mov
add
add
jno
dec
or
add
mov
cs
pop
jmp
stc
add
or
add
push
loop
xlat
jp
push
add
ja
add
fwait
pop
cmp
mov
cmp
add
or
sbb
add
jle
mov
ret
add
add
mov
iret
repz
cmp
mov
xchg
insl
and
dec
int3
xchg
loop
sub
repz
push
add
xchg
daa
add
dec
jns
fistl
call
sbb
add
in
dec
add
inc
add
add
add
add
lcall
out
iret
push
add
add
pusha
add
pop
mov
sbb
aad
add
aam
test
add
jmp
add
rep
movb
add
inc
add
mov
test
mov
xor
movb
outsb
les
imul
add
dec
out
jne
xor
incl
jmp
add
lcall
xor
or
add
fnstenv
sar
roll
mov
xchg
rolb
add
int
add
and
add
or
add
sbb
jmp
add
jg
cmp
push
push
ja
sti
xor
add
js
cmpsb
add
add
adc
call
add
cmp
xor
ljmp
push
test
pop
add
push
les
xchg
push
xchg
adc
jmp
add
or
jne
add
cmp
xlat
add
decl
add
sahf
movl
sub
rcl
sbb
cmpsb
add
add
iret
inc
add
jecxz
into
or
adc
jle
add
jnp
cmp
outsl
icebp
movb
mov
mov
dec
pop
add
arpl
std
in
pop
addb
add
cmp
add
decl
add
mov
ljmp
cltd
movsl
add
mov
nop
cmp
add
add
test
cmp
xor
push
je
mov
add
pop
mov
ficoms
add
xchg
pop
cmp
ljmp
xor
dec
inc
add
jo
decl
je
add
loopne
lahf
add
fldl
add
jecxz
stos
add
testl
and
lcall
inc
add
scas
sbb
loop
je
rep
mov
mov
inc
add
sbb
cwtl
push
add
addl
add
cmpsb
add
pushl
add
rorb
add
inc
add
in
adc
dec
mov
mov
popa
add
rol
add
ljmp
mov
bound
pushl
jle
mov
add
pop
aaa
sbb
add
out
and
jmp
iret
cmp
add
movl
dec
inc
add
stos
push
add
std
out
pop
call
ljmp
add
je
xchg
outsb
dec
imul
and
decl
adc
call
inc
add
add
or
roll
add
arpl
decl
dec
cli
cmp
inc
add
jle
add
outsb
repnz
lahf
mov
fistpll
add
pop
jp
outsl
xchg
add
inc
add
mov
stos
inc
add
pop
movsb
add
ljmp
add
bound
lcall
add
mov
call
inc
add
sbb
jbe
add
inc
add
add
sub
add
pop
aaa
aaa
les
in
loopne
cwtl
cmp
jne
fbstp
add
xor
add
add
sbb
mov
sbb
fcomps
sbb
mov
add
sub
lret
jle
add
add
cld
hlt
pop
or
dec
imul
add
shll
imul
sbb
add
inc
add
adc
fdivrs
imul
sub
sahf
cmc
dec
mov
movb
jb
sti
sti
lea
jle
daa
add
stos
mov
add
and
adc
jmp
call
pushl
fldcw
inc
add
movl
repz
jnp
add
add
mov
cmp
add
ds
pop
imul
ljmp
popf
xchg
enter
pushl
add
pop
xchg
data16
or
pop
in
cld
out
adc
ljmp
movl
repz
jmp
pop
xchg
adc
xchg
or
add
pop
xor
cmpsb
add
addl
add
add
movl
dec
adc
lcall
test
es
add
push
add
decl
ret
cltd
out
addr16
test
mov
add
jp
add
and
jmp
add
shr
mov
inc
add
rcll
add
add
mov
xchg
lret
xchg
push
push
add
incl
dec
aas
mov
add
jp
fistps
dec
sbb
les
loop
mov
mov
mov
add
out
lock
sub
dec
lret
add
xchg
inc
add
add
test
ss
push
loopne
fucom
add
or
add
jge
add
pushl
ljmp
xor
call
pop
fldl
cmp
nop
sbb
and
std
mov
add
xchg
mov
dec
adc
ficoml
add
jmp
add
out
mov
stos
test
sbb
ret
nop
je
mov
out
adc
lcall
mov
popa
add
pop
cmp
add
pushl
pushf
jb
incl
add
sbb
xlat
add
in
add
jmp
add
in
in
and
incl
pushl
add
out
xor
jg
fsubl
add
xchg
xor
popf
cmp
pop
stos
mov
add
inc
add
sub
out
pop
jge
mov
repnz
lcall
add
adc
dec
mov
ret
add
mov
add
pushl
rcll
add
mov
push
xchg
test
jnp
sbb
dec
nop
iret
scas
ja
add
cwtl
mov
sub
int
add
mov
and
mov
fldenv
add
and
incl
add
data16
add
xor
incl
sub
ljmp
cwtl
xor
or
add
push
mov
inc
add
add
pop
int
mull
fsts
repz
xor
rorb
add
add
jecxz
mov
lock
mul
add
lcall
xor
sbb
nop
call
sub
push
mov
inc
add
add
pop
fidivl
sub
out
add
jmp
je
jb
lcall
loope
jo
incl
add
sbb
mov
call
jmp
xchg
es
add
dec
jo
pushl
add
push
push
add
pop
cmp
xchg
repz
call
add
or
fmul
lahf
jne
insl
imul
mov
aad
add
xchg
scas
dec
fcoms
incl
addl
test
add
add
call
xchg
imul
loop
push
add
mov
push
add
mov
add
push
fpatan
push
add
scas
add
and
pushl
lcall
mov
add
add
add
push
aas
addl
add
mov
fldcw
test
clc
fbld
add
test
jns
shlb
jmp
add
incl
outsl
jg
add
sbb
dec
lea
ljmp
push
mov
add
add
js
mov
sbb
add
push
enter
add
pop
testl
add
xor
mov
fmulp
pop
xor
pushl
call
rorl
lods
sub
testl
imul
add
jge
and
ljmp
in
pop
xchg
mov
cmp
xchg
mov
in
xor
pop
cs
shll
add
fcomps
mull
dec
imul
sub
pop
sbb
addl
add
add
incl
movsl
add
add
rcl
pop
lcall
sbb
in
and
ljmp
loope
xchg
data16
imul
add
xchg
in
jnp
adc
in
enter
mov
and
mov
cmp
add
je
enter
add
decl
and
lcall
rcr
cmpsl
add
sbb
mov
out
lods
addb
cmp
xchg
add
lea
lcall
loop
ljmp
jl
jge
ds
out
mov
add
add
add
lcall
into
and
pushl
jnp
add
decl
xor
inc
add
notb
mov
adc
jmp
add
outsb
push
add
add
pushl
cmp
fstl
add
or
outsl
sub
addl
add
incl
push
pop
xchg
ss
add
test
xor
call
sub
pushl
push
jle
add
add
mov
sbb
xchg
stos
in
bound
lcall
in
mov
add
xor
jmp
add
add
nop
addl
int
lds
fcompl
shrd
pusha
add
sub
add
pushl
xor
inc
add
pushf
clc
push
add
jne
push
add
and
ljmp
shlb
adc
imul
scas
divb
add
xor
fwait
jmp
out
std
and
lcall
outsb
pop
rolb
add
ja
lds
sub
fmuls
add
jmp
pushl
add
dec
mov
cmp
sub
cmp
inc
add
aas
push
add
shlb
mov
and
decl
add
add
sti
movl
sub
lret
hlt
mov
out
movsl
add
inc
add
call
sbb
add
addl
pop
int3
push
dec
xchg
and
test
dec
inc
add
pop
xor
cld
mov
mov
nop
and
ljmp
ret
cs
mov
addl
adc
lcall
imul
or
sub
add
nop
loope
jecxz
icebp
mov
add
shll
push
cmpsl
add
inc
add
mov
pop
movsb
add
sbb
xchg
ret
xchg
jae
dec
push
add
popa
add
cs
push
add
mov
jle
imul
xchg
cmc
sub
fisttps
jge
movsl
add
xchg
aaa
pop
cmpsb
add
incl
movl
popf
inc
add
movsl
add
add
filds
aas
mov
bnd
test
iret
sti
adc
mov
add
jge
mov
xchg
lock
leave
xor
mov
add
add
stos
in
in
and
jmp
fwait
and
call
pop
jns
cmp
fcoml
addl
ret
add
aas
xchg
sbb
add
incl
repz
add
add
decl
add
flds
test
incl
add
loope
mov
add
das
mov
add
xchg
sub
inc
add
or
clc
ret
add
push
mov
loope
and
pop
data16
add
movsb
add
ljmp
mov
sub
data16
push
addb
mov
pop
mov
icebp
fwait
inc
add
rorb
add
mov
decl
mov
xchg
mov
add
rolb
jmp
add
pop
add
sub
sti
xchg
dec
imul
mov
add
popa
add
mov
cs
movb
loopne
cmpsl
add
arpl
ljmp
add
imul
jo
jmp
add
inc
add
insl
pop
je
add
inc
add
xchg
xchg
jbe
or
inc
add
in
scas
push
mov
out
ja
add
add
add
sti
rolb
scas
cmp
cmc
mov
jmp
rol
add
add
in
aad
push
sub
cmp
add
test
jae
decl
add
nop
cld
pop
sbb
js
xor
js
pop
mov
mov
in
push
out
mov
mov
add
adc
call
cmp
add
mov
add
push
add
bsr
roll
dec
mov
xchg
in
or
add
std
xor
xor
call
mov
aad
add
xchg
fwait
cmp
scas
sbb
mov
push
cmp
int3
adc
lcall
add
add
add
add
add
ret
adc
mov
incl
jmp
add
jne
inc
add
mov
jns
in
xchg
jns
addb
movsb
add
decb
add
pusha
add
ret
add
add
inc
add
out
mull
add
or
add
push
inc
add
test
mov
mov
add
mov
lahf
movb
mov
ret
fcoms
add
test
fists
add
push
jmp
jp
mov
sbb
xchg
xor
ljmp
lahf
mov
cld
sub
add
adc
jmp
add
add
fsubl
add
jmp
arpl
ljmp
nop
lea
xchg
mov
add
paddusw
pop
pusha
add
xchg
imul
sub
cltd
insb
xor
add
mov
adc
mov
add
adc
decl
sbb
xchg
cmp
call
dec
mov
jmp
add
lcall
in
pop
xchg
rclb
cmp
add
or
pop
pusha
add
pushf
stos
lds
lds
pushf
jecxz
sbb
outsl
inc
add
cld
push
fsubl
or
xchg
mov
sub
xchg
pushl
ljmp
inc
add
add
jecxz
xchg
xchg
loop
dec
push
adc
cmp
int
dec
scas
sbb
add
test
call
dec
aam
mov
sbb
push
sbb
xchg
lods
mov
stos
cld
push
cltd
cwtl
nop
cltd
cmp
mov
fnsave
push
add
fsts
sub
loopne
inc
add
xor
add
pop
add
incl
jge
insl
outsl
lret
add
add
xchg
repz
fstps
dec
xchg
pop
adc
call
jne
xchg
sub
cmp
lcall
out
sbb
add
add
jmp
add
add
decl
push
add
lock
call
popa
add
fistpl
add
jecxz
xchg
test
stc
scas
popa
add
xchg
inc
add
xchg
mov
add
add
sub
jmp
test
xchg
int3
jo
ljmp
push
cmp
jg
mov
add
xor
pushl
inc
add
lahf
lea
mov
daa
add
add
call
ljmp
add
add
insb
fsubr
in
mov
add
les
fsubr
push
jmp
add
and
ljmp
push
sub
fildll
push
add
lcall
mov
fldt
add
push
add
sub
lds
sbb
add
add
and
mov
inc
add
jmp
jl
add
add
add
fdivl
add
loope
nop
into
scas
fisttpl
add
add
dec
je
add
testb
add
add
add
pop
push
fs
adc
jl
cmp
fstpl
add
in
lcall
xchg
aad
xchg
dec
sub
add
add
lcall
sbb
shll
roll
add
lea
dec
inc
add
mov
dec
lds
dec
jp
out
stos
scas
negl
jo
inc
add
ljmp
add
into
or
repnz
push
add
or
fidivs
xor
incl
pop
leave
add
pop
pop
inc
add
int3
stos
stos
fstl
add
rorb
insb
xor
call
inc
add
xor
lcall
incl
lcall
inc
add
loope
push
add
inc
add
add
pop
fidivrl
nop
mov
dec
and
lcall
add
mov
xchg
xchg
lds
pop
xchg
cltd
xor
push
in
jle
in
call
daa
add
add
arpl
jmp
jmp
add
add
decl
cld
aam
cmpsb
add
add
adc
add
add
jmp
add
lea
pop
loopne
jmp
add
add
inc
add
call
lock
xchg
pop
adc
enter
xor
call
push
add
mov
mov
xor
lcall
lock
add
addb
xchg
dec
mov
in
sahf
inc
add
jno
jmp
jl
xchg
jg
sub
jno
pushl
mov
add
add
add
mov
mov
lcall
fstpl
je
adc
aas
pop
dec
and
jns
in
inc
add
ss
sbb
std
push
add
aas
and
ljmp
data16
decl
jbe
add
sarb
in
push
adc
pushl
and
incl
add
sbb
mov
sahf
bound
clc
pop
call
add
out
jge
movb
push
test
addb
add
add
add
add
cld
or
shlb
cmp
call
mov
add
cltd
test
pop
or
mov
mov
add
add
jbe
inc
add
loope
push
and
call
pop
bound
jmp
cmp
add
or
lcall
xlat
mov
lea
xor
inc
add
or
add
add
rcl
sti
adc
ljmp
and
ljmp
or
scas
dec
leave
fs
aas
js
jo
fcmovb
add
add
add
incl
add
xor
add
add
jecxz
push
add
mov
add
and
out
out
or
icebp
movl
lcall
fistl
add
mov
add
lods
mov
outsb
mov
add
cmpsb
add
add
add
add
lcall
jo
decl
mov
imul
inc
add
push
add
mov
add
test
into
and
add
cmp
jmp
mov
add
shr
pusha
add
jmp
repnz
add
jae
ljmp
xlat
push
add
popf
mov
scas
cmp
movsb
add
call
pushl
pusha
add
cmpsl
add
js
add
jmp
add
cli
test
bound
inc
add
jne
movl
fisubl
add
mov
add
xor
cli
and
jp
add
mov
cld
lea
shrb
adc
jmp
incl
fcmovbe
shrb
mov
or
cmp
add
sub
add
cwtl
mov
add
ss
add
add
mov
dec
inc
add
icebp
push
or
cwtl
jge
pop
add
mov
xor
incl
cmp
xchg
adc
add
add
inc
add
ret
add
mov
add
add
call
sub
add
xchg
mov
add
push
test
add
outsl
dec
jl
push
cwtl
pop
roll
mov
jecxz
jl
popf
outsl
daa
add
add
sub
add
fucom
add
cli
popf
nop
mov
xchg
in
mov
add
stc
jle
pop
divl
aam
pop
stc
movsb
add
add
incl
movsb
add
nop
outsb
loop
xchg
mov
inc
add
or
add
scas
ficomps
sbb
roll
add
add
das
mov
mov
fsubrs
add
add
dec
xchg
mov
out
repz
mov
xlat
mov
inc
add
add
popa
add
test
add
xchg
out
and
add
adc
add
jne
mov
cwtl
cmpsb
add
dec
cmc
bound
cmp
xlat
fldt
xor
cmp
call
mov
mov
js
push
add
pop
mov
mov
add
insl
ss
ja
mov
dec
ror
or
les
xor
lcall
leave
mov
add
jnp
add
stos
jmp
dec
mov
or
add
aam
pop
cltd
xchg
adc
ljmp
and
fcomi
pop
lcall
dec
imull
add
lcall
adc
cli
sbb
cs
outsl
ret
or
xchg
in
sub
adc
dec
pop
insb
cmp
test
leave
add
call
add
add
mov
outsl
mov
cmp
adc
add
jge
add
dec
xchg
cmc
add
decl
add
cltd
jmp
xchg
add
ljmp
pop
and
incl
add
ljmp
pop
mov
test
mov
out
cld
mov
add
out
daa
add
ljmp
cmp
push
jae
inc
add
add
add
inc
add
push
ficoml
loope
cmp
mov
repz
pushf
in
cpuid
add
push
add
jae
dec
shlb
mov
add
xor
rol
add
lds
and
jmp
add
add
lcall
jae
pushl
fwait
pop
push
push
dec
sub
mov
add
xor
add
jno
ljmp
xor
jb
mov
lcall
or
cmp
push
add
aas
inc
add
pop
push
bound
jmp
jmp
cmp
add
dec
adc
decl
incl
sub
add
or
into
cmpsl
add
inc
add
aaa
call
add
outsl
push
add
repz
add
and
out
loope
js
add
add
inc
add
pushl
pop
xchg
jg
add
incl
aaa
mov
add
rcl
out
fsub
add
cmp
push
insb
mov
add
sub
mov
add
out
jne
inc
add
xor
add
add
add
out
test
pop
bound
incl
jnp
cltd
in
mov
add
sub
and
call
dec
mov
jl
inc
add
dec
inc
add
into
mov
enter
lods
out
mov
jae
incl
mov
testl
push
in
test
add
mov
add
dec
xchg
je
mov
cmp
add
add
shr
ret
add
push
add
sub
add
add
testb
sbb
addb
xor
dec
jge
xlat
push
pop
das
jmp
add
jge
add
lret
cmc
cli
les
stos
js
adc
lcall
out
add
call
add
jmp
insl
out
adc
add
lds
push
add
sbb
add
sbb
xor
decl
sbb
add
loope
sbb
test
xchg
movsl
add
pandn
push
cltd
xrelease
idivl
lahf
mov
popf
int
lea
add
fstl
js
add
push
inc
add
mov
cld
jl
negl
and
jge
add
cmp
add
ficoml
pop
xor
jmp
add
pushl
fisttpl
pop
movb
add
add
cli
and
cmp
cli
inc
add
jno
lcall
push
or
incl
or
add
lods
dec
or
lret
dec
repnz
jno
sti
imul
sbb
mov
add
int3
pop
lahf
add
add
xchg
enter
add
aad
mov
leave
jne
out
sub
dec
jp
lcall
mov
mov
and
push
cltd
mov
pushl
add
call
dec
mov
add
imul
add
add
cmp
jbe
and
ljmp
outsl
loopne
add
sahf
aaa
pop
mov
add
add
jae
jl
pop
fdivs
add
add
dec
xchg
loope
mov
add
daa
add
add
and
add
sub
dec
cmc
dec
cmpsl
add
mov
incl
inc
add
add
add
out
repz
pop
pop
aaa
add
add
pop
mov
xlat
push
add
insl
inc
add
sbb
push
cwtl
loope
mov
ret
push
jmp
mov
add
nop
jg
add
mov
add
lods
jns
jae
jle
add
je
lods
lret
cmp
or
scas
lods
jge
add
imul
cli
movb
add
pushl
add
and
jmp
pushl
add
in
outsb
jb
call
push
lea
mov
stos
test
sbb
push
add
incl
decl
lret
in
in
test
cmp
loopne
inc
add
imul
cmp
rcrl
inc
add
lcall
push
add
pop
jbe
cmp
stc
aad
data16
in
and
incl
mov
adc
cltd
inc
add
iret
cmpsl
add
addl
lds
sbb
add
pop
pop
lods
xchg
insb
xor
call
push
add
push
xlat
movb
add
stos
mov
roll
pushl
add
mov
add
add
mov
add
pop
js
enter
add
add
add
pop
loopne
mov
cmp
jg
add
roll
aas
call
decl
fcoms
cmpsb
add
stc
idivl
add
add
call
dec
insb
push
addl
fbstp
add
push
add
push
add
data16
xor
ljmp
add
mov
cmc
inc
add
jl
sbb
ret
add
or
add
aas
sub
ret
add
sub
decl
mov
ljmp
add
jg
and
pushl
add
adc
fldenv
mov
imulb
add
pop
enter
add
cmc
xor
ja
inc
add
addb
loopne
sub
add
add
or
movsl
add
sbb
add
xchg
xchg
push
add
repnz
sbb
call
addb
mov
add
add
movb
add
add
popf
aad
inc
add
jns
cmp
add
mov
faddp
add
jmp
inc
add
jle
add
addl
call
add
lcall
lcall
pop
mov
mov
jle
dec
cltd
and
jmp
add
lcall
call
add
incl
cli
add
pop
or
in
push
add
ljmp
or
call
scas
stc
stc
push
dec
mov
dec
rcrb
jecxz
mov
scas
add
imulb
adc
call
std
sub
add
shl
add
jl
dec
rolb
pop
ja
add
inc
add
in
dec
jbe
jnp
add
jo
lcall
out
nop
leave
pop
add
jns
jmp
out
add
lcall
test
rolb
mov
popa
add
fiaddl
ret
add
std
push
add
decl
jmp
add
mov
xor
push
push
xor
cmpsb
add
sub
add
sbb
add
sbb
pop
fdivrl
add
icebp
and
incl
decl
ljmp
sbb
dec
addr16
add
les
inc
add
cmp
push
push
loope
sbb
in
xor
mov
add
fdivp
cltd
addl
and
ljmp
sahf
in
popl
inc
add
mov
ljmp
dec
in
adc
fistpl
cli
out
rolb
leave
popa
add
fbld
fadd
add
icebp
or
test
test
add
daa
add
imul
add
add
mov
bound
decl
decl
lret
enter
mov
add
mov
add
call
incl
add
mov
add
mov
inc
add
adc
ljmp
test
insl
push
sub
aas
pusha
add
mov
jne
je
lahf
pop
pop
mov
repnz
add
add
decl
test
sbb
addb
pop
inc
add
dec
push
add
xor
and
jmp
add
mov
add
ret
add
loope
in
mov
mov
add
or
add
pushl
cmc
sub
cmp
imul
daa
add
or
jg
add
cmp
mov
cmp
push
add
lcall
jno
call
add
imul
call
leave
aam
adc
jg
adc
cs
add
incl
arpl
fstl
cs
mov
js
lcall
add
shr
pop
or
add
roll
push
ljmp
push
outsl
jg
add
add
push
clc
mov
jb
lcall
jo
mov
add
add
pop
and
std
mov
jle
jl
add
mov
add
add
jbe
add
inc
add
lret
push
pushf
aaa
dec
add
cli
lcall
add
loope
test
add
add
xlat
cmp
cmpsb
add
stos
or
mov
jmp
add
xor
incl
pop
xor
pushl
dec
push
fcoml
add
sub
divl
jns
cli
outsb
pop
sbb
inc
add
sbb
add
inc
add
adc
add
pop
fidivrl
push
mov
jl
mov
test
mov
loopne
mov
int3
and
cmp
push
or
cmp
pop
or
fwait
sbb
sbb
in
fwait
lret
fwait
cmpsb
add
cld
add
jmp
add
popa
add
fmulp
popa
add
and
add
lcall
pushl
lods
lods
icebp
fmuls
out
and
add
add
dec
mov
inc
add
add
pop
sbb
movsl
add
add
or
add
add
adc
pushl
add
ljmp
fldl
out
out
insl
jb
jl
add
sub
inc
add
dec
sub
adc
cwtl
movb
add
pop
mov
add
out
stos
adc
dec
xor
add
shr
daa
add
aas
push
add
mov
mov
or
fidivrs
aad
add
js
cld
das
addl
fimuls
mov
aam
jb
cmp
mov
add
out
jo
decl
adc
ljmp
cmp
jecxz
jmp
add
test
mov
add
sub
sbb
pop
push
xchg
push
lcall
add
outsl
in
mov
adc
ljmp
test
adc
jmp
mov
jmp
add
imul
add
lret
rolb
cltd
addr16
xor
add
mov
xchg
sti
xor
ljmp
sbb
stos
push
add
popf
pop
shlb
lock
add
and
nop
inc
add
cltd
test
jge
iret
mov
dec
sti
push
mov
sub
idivb
add
lahf
mov
test
enter
mov
add
leave
js
mov
pop
add
add
add
test
mov
fisttps
mov
int3
mov
pusha
add
add
std
pop
bound
lcall
add
cmpsb
add
fdivrs
cmpsl
add
xor
add
jg
add
push
jne
add
push
add
mov
dec
out
adc
mov
lcall
stos
sbb
add
mov
cwtl
add
jmp
movsl
add
adc
mov
arpl
call
ljmp
add
aad
adc
ljmp
test
add
jmp
add
mov
lods
or
add
ret
out
xchg
mov
call
sti
bnd
xor
jmp
call
scas
xor
incl
decl
sub
popf
test
pushf
xchg
daa
add
jno
incl
pushl
rcr
jno
call
out
roll
adc
ss
dec
adc
fdivrl
cmp
jg
add
jae
rcrl
movb
add
js
rorl
inc
add
add
jb
jmp
add
or
xchg
sub
jo
call
add
addl
add
and
decl
jecxz
jns
add
out
jmp
loopne
cltd
jecxz
mov
add
addb
sub
jle
add
sarb
inc
add
cmp
add
arpl
rcll
add
das
adc
lcall
add
mov
jmp
add
movsb
add
lds
jb
jmp
inc
add
push
idivl
in
jg
or
mov
movsl
add
icebp
into
pop
cmp
add
or
dec
xchg
fiadds
cmp
add
add
sbb
ss
shll
addl
mov
aam
inc
add
lock
add
add
clc
xchg
repz
jmp
ljmp
add
and
js
mov
cmpsb
add
xchg
adc
ljmp
add
into
xchg
sbb
testl
or
int
mov
add
jecxz
sbb
add
dec
lock
add
lcall
push
add
repz
decl
lcall
mov
in
mov
lods
fmull
cmp
or
xchg
xor
cli
lds
cli
aaa
roll
xor
jmp
add
add
repnz
cld
jp
add
mov
mov
roll
pop
rol
add
pand
add
dec
addb
movl
and
call
test
add
add
sbb
push
add
stc
pop
int3
or
sahf
mov
add
add
inc
add
add
add
mov
jb
decl
push
in
cli
js
fistpl
push
jle
xor
cmp
add
add
pop
and
jmp
add
mov
jge
add
add
xor
adc
call
add
pop
push
xchg
daa
add
add
imul
add
jmp
add
cmp
dec
add
push
ljmp
decl
scas
dec
bound
ljmp
sub
lahf
inc
add
add
iret
ret
mov
lahf
ret
sub
inc
add
cltd
in
fcoms
fsubs
pop
add
add
mov
movb
add
lods
dec
and
push
arpl
decl
add
jmp
add
lcall
addb
add
popf
mov
add
mov
inc
add
add
add
scas
ljmp
in
inc
add
repnz
add
dec
mov
lods
xor
dec
outsb
scas
int
lock
mov
lods
dec
jmp
push
mov
das
push
add
leave
sarb
fists
incl
and
incl
fcmovnbe
movb
test
add
lea
in
or
add
movl
jno
ljmp
jg
inc
add
push
add
add
decl
cmp
fldcw
push
add
stos
cmp
jno
ljmp
sahf
fadd
add
rol
add
shlb
add
ja
lock
aaa
add
mov
add
addb
add
xchg
scas
cmpsb
add
loope
cmpsb
add
rorb
sub
add
add
or
test
mov
pop
sahf
jle
cmpsb
add
sub
jmp
loope
outsl
cmpsb
add
jle
adc
clc
in
imul
lahf
int
loopne
pop
outsb
pop
repz
sbb
call
scas
and
pushl
lcall
xor
ds
ret
add
das
imul
jns
mov
add
sub
pop
or
add
aam
mov
out
je
std
pop
addb
ret
add
sbb
fmuls
cmp
dec
pop
fst
dec
addl
add
decl
sbb
pop
add
add
and
lcall
add
and
jmp
pop
into
mov
add
xchg
mov
dec
lods
pop
inc
add
int
fdivrs
jle
loop
mov
jg
div
mov
jmp
add
mov
add
pop
in
ror
dec
cli
mov
out
jb
push
xchg
pushf
jle
and
decl
lcall
jae
lcall
movsl
add
lds
iret
bound
pushl
cmp
sbb
add
xor
ljmp
addl
dec
xlat
mov
lret
jbe
add
in
imul
add
and
pushl
jmp
add
add
add
mov
xchg
iret
sub
hlt
flds
add
in
adc
decl
xchg
push
add
xchg
pop
mov
add
gs
push
test
fcompl
aaa
mov
lcall
push
out
sub
movsl
add
jmp
cwtl
in
js
add
mov
push
pop
lcall
addl
movl
add
data16
add
push
add
loopne
jnp
or
sbb
ljmp
stos
mov
addl
sbb
pop
adc
out
inc
add
lcall
add
lcall
data16
add
xchg
imul
xor
pushl
fwait
jmp
sbb
and
stc
jg
add
pop
sbb
incl
jmp
ljmp
jbe
inc
add
adc
add
ljmp
mov
and
cmp
adc
ljmp
std
push
xor
lcall
add
adc
inc
add
into
sahf
pop
add
jbe
scas
add
scas
fidivs
add
stos
jl
add
add
add
add
push
jno
inc
add
mov
xchg
cmpsb
add
cmp
or
ljmp
dec
fmul
daa
add
imul
jno
call
and
jae
pushl
lods
ja
inc
add
daa
add
add
jmp
repz
jg
add
mov
add
add
add
dec
enter
cmp
sbb
add
cld
mov
inc
add
add
and
rolb
add
dec
inc
add
pushl
call
dec
js
mov
jecxz
mov
push
dec
jno
decl
decl
lods
pusha
add
mov
pop
xchg
mov
mov
stos
mov
mov
add
aaa
stos
scas
sbb
pop
movsb
add
aad
pop
push
mov
call
cwtl
add
jecxz
mov
shrl
add
loope
adc
jo
lcall
sbb
add
inc
add
mov
cs
fisubs
mov
xchg
add
jp
add
ss
mov
add
movsl
add
add
jmp
call
add
mov
cwtl
pushf
fistpl
lret
inc
add
call
rorb
sub
sbb
fstpt
fistpll
mov
fsubrl
int3
adc
incl
lahf
jge
ja
and
jmp
add
push
in
leave
add
mov
xchg
xchg
cltd
addb
xchg
out
sbb
inc
add
shrb
add
and
ljmp
sbb
insl
dec
cmpsl
add
add
add
xchg
shll
add
sbb
add
decl
dec
pop
fdivs
add
shlb
push
pop
pop
xlat
mov
std
add
add
lds
mov
outsb
mov
cli
xchg
or
and
pop
out
add
cmp
add
mov
push
add
out
dec
insl
negb
xchg
int3
xor
testb
movl
mov
les
into
jnp
and
inc
add
add
inc
add
mov
dec
loop
ja
mov
add
fsubs
and
cmp
push
add
out
cmp
inc
add
int3
stos
popf
xchg
jmp
je
cmpsl
add
add
add
cmp
push
add
cmpsl
add
inc
add
add
push
add
jge
add
mov
add
mov
rolb
clc
loop
lea
lods
jmp
mov
add
add
mov
addl
add
imul
incl
adc
decl
pop
push
mov
inc
add
jbe
add
lret
add
lcall
xchg
insb
pop
cmc
sti
xchg
pushf
xchg
or
add
fldl
add
pop
mov
movsb
add
repz
add
add
add
xchg
mov
add
jo
jmp
add
add
cwtl
testl
iret
xor
decl
xchg
rcrb
out
xor
lcall
inc
add
push
add
xchg
out
xor
jl
loop
das
lcall
add
sbb
dec
je
dec
add
add
sub
in
mov
mov
push
bound
incl
add
js
add
jmp
add
ljmp
add
mov
dec
leave
push
add
in
pop
in
rolb
add
fisubrl
es
add
add
push
add
sahf
inc
add
pop
cmp
add
sbb
daa
add
add
outsb
mov
jmp
add
addl
iret
push
add
mov
call
or
add
jle
add
icebp
xchg
or
xchg
gs
test
add
add
dec
jbe
data16
loope
mov
and
call
push
lea
cwtl
test
xor
call
cmp
decl
xor
call
out
pop
sti
sti
add
inc
add
or
add
lcall
aam
pushf
lds
hlt
aam
movl
add
add
jecxz
sub
cli
imull
add
xlat
pushf
add
inc
add
dec
xchg
ret
add
test
add
inc
add
sub
inc
add
and
dec
pop
pop
ja
pop
mov
inc
add
popl
shrb
iret
lods
push
add
test
push
add
add
jo,pn
aas
arpl
pushl
fidivrs
add
mov
add
add
adc
incl
mov
add
add
mov
add
dec
dec
in
clc
dec
scas
call
ret
add
loop
jg
out
pushf
mov
incl
add
cmpsl
add
fwait
mov
mov
add
outsl
sub
add
xchg
lahf
loope
push
push
fstps
mov
add
ljmp
addl
add
lea
add
lcall
decb
movsl
add
ss
mov
out
or
add
add
add
or
add
jge
push
add
push
add
jl
xlat
push
add
int
add
inc
add
add
call
push
dec
sbb
ljmp
xor
pushl
loope
movsb
add
mov
std
mov
addl
add
out
jp
shlb
mov
imul
roll
xchg
xchg
push
add
je
lds
call
call
out
imul
aaa
push
xchg
add
call
pop
dec
mov
lds
mov
dec
ret
add
add
repz
into
into
add
pushl
mov
xor
mov
add
dec
cwtl
adc
ljmp
add
inc
add
scas
stos
push
add
mov
and
clc
cmp
cld
push
add
xor
call
insl
addb
add
push
add
dec
out
cmp
jns
rolb
ljmp
pop
data16
dec
pop
cmp
sbb
rorb
cwtl
sub
mov
inc
add
push
add
add
add
jnp
xchg
rcr
dec
ljmp
ljmp
not
scas
adc
incl
add
push
sub
mov
out
int3
fmuls
out
in
sbb
push
add
sahf
mov
push
add
mov
movsl
add
mov
and
pop
xchg
cwtl
loope
loope
mov
push
add
nop
insb
daa
add
es
shll
and
jnp
pop
leave
mov
incl
incl
pushl
adc
jmp
call
add
mov
jbe
add
add
ss
mov
and
addr16
and
pushl
sub
pop
add
mov
add
shl
stos
xor
xor
pushl
add
decb
pandn
decl
jge
add
mov
int3
add
add
add
jmp
push
cli
pusha
add
shl
icebp
hlt
inc
add
rorb
das
push
daa
add
add
cli
mov
imul
pop
pop
push
add
mov
inc
add
filds
dec
test
add
outsb
stc
cmp
out
imul
pushl
add
in
sbb
cmp
addl
lea
add
add
add
addb
add
decl
add
add
add
mov
outsl
lcall
add
add
bound
incl
add
ds
xchg
jecxz
pop
leave
fcompl
loopne
dec
pop
mov
scas
mov
inc
add
add
dec
mov
cwtl
push
add
icebp
add
add
ljmp
add
mov
adc
jmp
add
lret
pusha
add
adc
add
js
addb
add
inc
add
and
push
sub
push
das
stc
lock
ficompl
addl
mov
in
add
pushl
cmp
sbb
jle
sub
addb
lcall
jne
pop
in
mov
les
aad
add
mov
mov
lcall
addl
add
add
dec
lods
cmp
add
imul
add
push
inc
add
add
adc
add
or
ret
add
mov
add
jbe
add
pop
lcall
pop
aas
xchg
inc
add
add
outsb
jle
add
add
mov
sbb
add
sub
add
lret
les
pop
jb
jmp
sbb
inc
add
roll
add
xchg
jp
or
cltd
cld
addl
mov
aam
add
add
ror
addb
jmp
add
dec
aas
std
call
scas
pop
int
add
add
dec
mov
add
push
add
mov
add
or
add
call
push
arpl
pushl
add
aaa
ret
add
jmp
shll
addl
add
mov
xor
jmp
add
cwtl
clc
aas
fistps
roll
ret
mov
insl
jge
hlt
testl
add
stc
xor
call
jle
sub
xor
call
jo
decl
lods
push
add
lock
call
inc
add
mov
add
roll
les
jg
add
idiv
dec
adc
add
jmp
add
dec
fmuls
outsb
rorl
pusha
add
lods
mov
jmp
dec
push
sub
sbb
fnsave
fld
add
jmp
add
sub
add
sbb
add
imul
movsl
add
add
outsl
popa
add
or
sbb
xor
lcall
mov
add
add
mov
pop
xor
ljmp
mov
add
js
add
negb
stc
jae
call
test
add
push
je
pop
push
push
add
add
add
push
daa
add
loop
shrl
add
add
mov
add
mov
xor
lcall
add
jae
dec
mov
out
lds
aaa
adc
pushl
incl
dec
out
pop
adc
call
xor
dec
imul
or
incl
and
call
roll
lods
mov
jmp
add
add
dec
jmp
arpl
pushl
add
cmp
mov
xor
bound
decl
cmpsb
add
mov
rolb
cli
add
call
pop
insb
imul
push
add
das
jo
pushl
add
pop
add
push
rcr
pushf
aam
add
sbb
add
cmpsb
add
test
js
outsb
inc
add
fucompp
dec
out
mov
and
lret
stc
mov
cmp
arpl
ljmp
add
add
mov
fimull
daa
add
fsub
add
pushl
jp
dec
loopne
sub
rorl
cmp
add
and
decl
or
mov
pop
pop
leave
bound
call
push
lods
addl
ljmp
movsb
add
lcall
lahf
sbb
cli
inc
add
jge
xchg
pop
xchg
popa
add
addl
inc
add
into
dec
dec
adc
incl
pop
push
add
adc
add
push
add
pop
repz
cs
sbb
ret
add
inc
add
int
inc
add
iret
add
jae
ds
xchg
sub
lcall
add
and
incl
add
add
lcall
addl
or
jmp
add
push
mov
arpl
jmp
cltd
repz
mov
add
xchg
in
mov
add
push
add
imul
nop
sub
inc
add
add
jne
int
add
mov
add
call
push
loop
dec
lods
lock
add
negb
fbld
add
mov
add
add
add
dec
popf
cs
jp
add
and
out
mov
add
jmp
jnp
add
add
mov
clc
xchg
aas
mov
sarl
push
repz
add
mov
js
add
mov
lret
push
add
pushl
jbe
add
xchg
sub
add
cli
ljmp
add
call
mov
frstor
push
or
addl
add
ret
xlat
mov
call
xchg
stc
ret
jmp
jp
jno
incl
add
data16
mov
jne
in
mov
add
jns
add
sub
add
pop
mov
aam
mov
cwtl
cwtl
scas
mov
pusha
add
push
add
flds
add
stos
add
fidivl
add
add
mov
add
sbb
cmp
test
std
xchg
gs
add
add
add
add
cs
mov
repz
test
add
lods
inc
add
add
sbb
cltd
ret
addl
add
add
out
das
cmpsb
add
mov
stos
adc
cmp
add
lret
pop
mov
add
or
pop
mov
add
add
cmp
decl
roll
add
add
aam
add
push
int3
ret
add
add
and
cmp
cli
adc
ljmp
bound
pushl
pop
jle
add
add
ret
add
inc
add
and
pop
out
sbb
add
cmpsl
add
add
dec
pop
pop
add
lret
add
add
pusha
add
and
decl
push
pop
push
dec
cmp
stos
aaa
cmp
imul
iret
sbb
push
mov
jmp
inc
add
add
jle
aad
add
cmp
push
add
lret
scas
btrl
out
loop
jo
lcall
add
pop
aas
movb
add
enter
lret
jmp
arpl
incl
add
mov
mov
flds
and
in
fisubrl
or
push
add
pop
cli
data16
add
popa
add
jmp
fdivr
mov
movsl
add
into
inc
add
mov
dec
push
lods
jns
stos
dec
ja
add
fildl
add
addr16
mulb
add
add
pushf
inc
add
in
add
repnz
xchg
dec
pop
add
aas
cmp
add
cmp
xchg
mov
sub
mov
test
add
test
add
add
add
pushl
add
popf
push
add
xor
ljmp
mov
in
jb
lcall
add
test
mov
pusha
add
dec
inc
add
sbb
jne
movl
mov
and
adc
shrl
mov
pop
cmp
iret
movl
jne
or
arpl
incl
push
add
lcall
sbb
xor
incl
call
add
cmp
mov
jg
add
cmp
lcall
add
add
add
jle
add
add
insb
leave
lcall
mov
les
sbb
pop
fcomps
xchg
fwait
les
les
inc
add
repz
sbb
add
xchg
rolb
inc
add
xchg
outsb
or
mov
aas
sahf
sbb
add
clc
jg
add
add
lret
nop
push
mov
add
cli
shll
ljmp
lods
cmpsb
add
add
add
and
lcall
fbld
incl
scas
roll
add
in
iret
bound
mov
lcall
push
out
bound
ljmp
in
lods
inc
add
leave
mov
rclb
ja
and
ljmp
cmp
jb,pt
pushl
xchg
notb
negl
decl
addl
pop
test
add
pop
or
add
sub
ljmp
add
mov
add
in
sub
insl
arpl
incl
add
dec
mov
mov
test
pop
sbb
add
add
cmpsl
add
or
fisttpl
inc
add
or
jns
mov
fadds
lcall
imul
out
mov
incl
add
xchg
lret
adc
mov
inc
add
roll
jecxz
mov
add
dec
pop
imul
add
cwtl
lds
dec
xor
addb
sub
add
pop
sti
fs
sbb
jg
movb
pop
ds
add
xchg
adc
incl
add
mov
lea
in
jne
add
add
or
jg
add
pop
xor
mov
push
mov
add
adc
sbb
dec
je
add
push
push
add
lea
inc
add
pop
nop
add
jbe
add
cld
dec
xor
jne
rcrl
rorl
add
mov
mov
add
das
pop
sub
add
mov
add
add
in
mov
add
decl
add
lea
fnstenv
add
or
mov
add
push
add
jae
push
jbe
icebp
pop
pop
sub
add
mov
push
add
jge
add
and
add
add
jmp
add
les
pop
call
mov
adc
push
add
pushf
jecxz
scas
imul
or
rorb
lret
push
add
pop
mov
loope
fnstenv
add
mov
sbb
adc
decl
and
ljmp
push
add
ss
add
out
jnp
dec
lea
add
pushl
add
adc
xchg
rcrl
adc
ljmp
call
ja
in
jo
jmp
add
sub
pop
xchg
jecxz
mov
mov
fsubs
add
add
pushl
lcall
add
add
addl
add
jl
ud2
push
xor
dec
inc
add
push
testb
pusha
add
inc
add
incl
add
adc
call
mov
mov
lahf
sub
add
fimuls
add
icebp
cmp
sbb
xchg
aaa
cmp
add
enter
mov
inc
add
in
xchg
xchg
mov
and
lcall
or
cmp
cmc
loop
js
push
add
add
dec
xchg
dec
dec
mov
add
adc
lcall
add
nop
cltd
imul
ja
mov
add
ss
add
add
int3
dec
lcall
add
test
stc
inc
add
aaa
bound
cmp
add
pushf
imul
dec
mov
xchg
shrb
je
ljmp
and
sbb
push
lea
pop
std
movb
mov
fcomps
mov
push
leave
outsl
lss
ljmp
add
xchg
out
divb
out
and
repz
push
leave
pop
imul
xlat
negl
stos
fwait
popa
add
imul
add
jbe
mov
movl
mov
add
addb
jno
jl
fstpl
add
incl
add
push
loopne
adc
pushl
add
test
mov
add
cli
inc
add
add
jle
add
addb
dec
pop
push
dec
and
jge
addl
movb
jp
bound
incl
inc
add
pushf
push
add
jmp
add
decl
add
xlat
mov
add
cmp
lcall
setbe
pushf
mov
sbb
xchg
xchg
xor
in
cmp
pop
scas
mov
clc
cmpsb
add
pusha
add
sub
add
adc
inc
add
add
mov
data16
daa
add
ljmp
dec
movsl
add
inc
add
addl
int
out
fdivr
das
add
fmul
mov
call
add
incl
add
hlt
mov
dec
cmpsl
add
add
test
xchg
add
call
sbb
pusha
add
popf
xor
add
roll
sub
call
jno
decl
add
shlb
cmp
leave
xor
add
mov
push
cmp
jmp
push
add
roll
add
or
add
xlat
scas
xor
jmp
dec
adc
inc
add
decl
incl
ret
add
shl
add
mov
mov
and
decl
out
outsb
out
enter
push
add
out
sbb
add
dec
push
xrelease
add
mov
add
xor
cld
rcrl
fwait
punpcklbw
call
jne
push
add
lea
lds
mov
add
call
incl
add
lcall
bnd
je
mov
add
out
outsl
mov
add
and
jle
mov
cmovnp
pop
mov
xlat
loope
stc
mov
in
push
add
mov
and
xor
ljmp
les
jns
add
addb
add
add
add
add
sahf
push
add
addl
jp
add
ret
add
ficompl
sub
jmp
ds
inc
add
add
and
decl
push
imul
packsswb
call
cmpsb
add
cmovp
xor
add
fcom
lds
adc
call
add
push
cmp
loop
mov
mov
call
mov
add
cmp
decl
add
call
mov
call
inc
add
dec
inc
add
pop
xchg
les
xor
cmp
loopne
sub
push
add
cmp
jmp
add
daa
add
icebp
jp
add
add
add
and
pop
and
call
add
cmp
dec
mov
aaa
popf
fpatan
shlb
add
mov
push
add
mov
add
add
push
mov
add
mov
push
pop
inc
add
add
add
push
inc
add
xchg
inc
add
lea
mull
pop
mov
jmp
add
out
ljmp
lcall
add
mov
xchg
insl
xchg
fstpt
add
mov
add
fbld
pushl
and
add
sbb
add
add
div
mov
pop
daa
add
push
ja
add
add
sbb
jecxz
mov
jp
inc
add
dec
rolb
jge
addl
push
iret
cmpsb
add
incl
add
and
movlps
inc
add
call
adc
movsb
add
mov
add
add
fwait
sbb
add
pop
add
cli
insl
ret
add
out
add
bound
stc
loopne
fs
or
rolb
add
add
pop
testl
rorl
call
pushl
add
mov
pop
mov
je
sbb
adc
aaa
dec
aas
insl
inc
add
les
add
or
ljmp
pusha
add
inc
add
push
cmp
mov
xchg
xchg
pop
or
iret
mov
stos
ljmp
lock
cmp
idivb
pushf
sbb
xchg
push
add
xor
dec
popa
add
xchg
iret
sub
jbe
dec
mov
inc
add
cltd
bound
lcall
mov
lds
xor
pushl
call
add
lcall
add
add
add
je
sbb
lcall
jge
add
mov
mov
cmc
push
add
xchg
cmpsb
add
outsl
add
add
and
fnstsw
cmp
adc
fimull
add
arpl
call
add
fnsave
add
loop
mov
pop
sbb
pusha
add
pop
mov
add
incl
add
call
add
in
sub
add
popl
xchg
lret
in
test
cmp
and
popa
add
jno
incl
add
lret
arpl
pushl
cmp
jmp
mov
pop
out
shrb
mov
dec
int3
mov
inc
add
add
add
add
or
add
and
stc
pop
adc
call
add
add
mov
add
decl
add
mov
xlat
popf
shrb
mov
sbb
inc
add
jae
pushl
mov
add
add
or
lcall
addb
sub
cmp
inc
add
xchg
mov
xchg
jg
dec
add
jecxz
cmp
iret
imulb
push
pop
jecxz
clc
sub
push
std
jp
aam
or
push
repnz
add
or
mov
cmp
jl
lock
fiaddl
add
mov
add
out
xor
add
sbb
in
add
cmp
add
ret
push
sbb
dec
adc
dec
jl
movsl
add
dec
sbb
add
jmp
add
xlat
cmp
mov
push
add
in
jo
pushl
outsl
aas
outsb
fsubrl
jg
add
xor
dec
in
and
call
dec
mov
add
fcompl
mov
add
cld
test
leave
cmp
and
call
aam
rolb
btr
inc
add
mov
decl
decl
clc
inc
add
add
sub
ljmp
add
int
add
xchg
loope
inc
add
cli
in
cwtl
push
add
add
dec
daa
add
mov
movb
xor
jmp
cmpsb
add
pop
pop
cmp
xlat
mov
das
bound
lcall
mov
jge
cld
movsl
add
add
inc
add
sbb
inc
add
cld
shr
or
in
mov
imul
push
add
push
add
pusha
add
mov
sub
add
shl
add
xor
adc
ljmp
or
mov
fidivs
sub
inc
add
out
iret
mov
incl
add
cmp
add
inc
add
clc
mov
add
cmpsb
add
add
xchg
clc
xor
jmp
cmpsb
add
add
jmp
add
hlt
imul
incl
add
mov
jecxz
rolb
into
popa
add
xchg
cmp
add
jo
decl
out
leave
pop
pop
bnd
mov
add
jp
jns
rolb
mov
adc
incl
hlt
aad
pop
add
xor
jmp
add
mov
push
add
add
pusha
add
mov
inc
add
add
call
jge
cmp
sbb
add
push
rcll
add
stos
inc
add
out
cmpsb
add
sbb
clc
jmp
leave
sarb
pusha
add
enter
loope
hlt
pop
cmp
add
fstps
add
add
mov
fsubs
sti
test
add
add
scas
and
pushl
add
mov
inc
add
adc
call
add
pop
mov
sub
pop
das
call
push
add
hlt
pop
push
xlat
and
add
lcall
add
ficoms
sbb
jbe
pop
les
and
decl
mov
pop
movaps
insl
pusha
add
std
shr
ficoml
decl
pushf
cmp
add
test
dec
dec
adc
incl
lcall
add
add
stos
dec
add
flds
add
jmp
ljmp
add
call
jmp
mulb
add
mov
jmp
pop
dec
out
add
mov
ss
cltd
mov
pop
fisubrs
add
fsubl
xchg
outsb
inc
add
outsl
adc
ficomps
add
pop
insl
ret
add
pushf
push
insb
je
add
push
xor
cli
lret
insl
daa
add
push
add
and
pushl
add
out
cmp
dec
popf
bound
fistps
dec
pop
fildll
add
cmp
cmp
addl
stc
stos
sti
icebp
or
xor
dec
push
add
lahf
or
leave
stc
or
int3
movsl
add
in
ret
add
inc
add
jae
incl
add
xchg
and
adc
incl
add
add
or
push
out
outsb
leave
xchg
inc
add
imul
cld
out
loop
cmpsb
add
inc
add
into
mov
rcrb
push
popa
add
jmp
popa
add
pop
dec
xchg
mov
mov
mov
adc
jmp
xor
lahf
mov
sub
add
mov
add
dec
js
jg
cmpsl
add
stos
pusha
add
adc
or
add
rcr
jo
call
incl
add
add
decl
jb
ljmp
pushf
jmp
cmp
add
sbb
or
pop
lds
ret
add
push
cmp
incl
add
out
iret
jg
add
push
jl
loopne
getsec
cmp
add
popf
sub
rolb
jle
xchg
pop
push
xchg
pop
inc
add
sub
sbb
inc
add
jns
out
jno
ljmp
bound
lcall
mov
aad
add
fcos
mov
add
in
fimuls
mov
roll
push
add
scas
dec
mov
cmp
dec
dec
daa
add
add
add
or
mov
data16
fistpl
add
jle
jp
cli
imul
mov
pop
aam
or
sub
lcall
lcall
mov
sahf
inc
add
paddd
arpl
incl
jmp
add
incl
add
xor
decl
jl
test
out
fisubrl
add
push
popf
or
mov
jns
push
popf
sbb
push
roll
sbb
jmp
add
add
pop
pop
add
mov
imull
pop
add
add
leave
or
inc
add
lock
jecxz
jnp
sbb
jmp
add
je
add
movsb
add
cmp
add
sub
add
xchg
les
dec
add
ljmp
adc
decl
sbb
inc
add
pop
push
add
ss
push
rolb
add
and
xchg
sbb
nop
jbe
lds
addl
jecxz
aad
jae
jmp
add
fbld
dec
jo
inc
add
mov
shrl
push
add
scas
outsl
nop
xchg
iret
inc
add
lcall
jae
decl
jo
jmp
imul
arpl
jmp
incl
sbb
popf
sbb
cmp
jae
fcoml
add
mov
decl
fmull
jno
decl
pop
add
jmp
imul
push
mov
xor
cld
inc
add
int3
sahf
mov
mov
add
movl
jno
lcall
sbb
add
addl
stc
jge
sbb
std
jns
addl
sbb
pushl
add
ljmp
mov
pop
in
pop
pop
cmc
fisttps
add
lods
add
cmp
mov
incl
add
test
inc
add
jns
adc
add
lock
add
inc
add
mov
in
and
pushl
add
add
sub
jmp
add
clc
mov
adc
call
mov
pop
clc
ret
push
outsl
test
cltd
pop
add
shlb
cltd
stos
pop
sbb
add
jae
ljmp
inc
add
inc
add
mov
out
loopne,pt
data16
in
sbb
repz
jo
call
add
push
add
mov
pop
hlt
inc
add
fsubp
add
jbe
add
or
add
sub
xchg
dec
roll
lock
add
add
loopne
push
mov
in
xchg
cmp
add
ljmp
in
sbb
add
outsl
push
mov
sub
sbb
add
inc
add
or
or
add
aas
xchg
bound
ljmp
add
add
jae
decl
jo
lcall
cmc
xchg
insb
jecxz
lea
lcall
push
add
ljmp
and
add
test
movl
cmp
rolb
jne
out
cld
jp
roll
fmull
jno
lcall
and
in
les
lret
cmpsb
add
addl
add
into
data16
add
add
mov
xor
xor
cmp
add
lcall
add
addb
in
ds
fstl
add
daa
add
add
adc
ljmp
jno
fadd
add
addl
add
fmulp
xchg
cli
jb
jmp
add
pusha
add
jo
lcall
add
add
add
fxch
mov
add
add
add
pop
mov
stos
xlat
dec
imul
test
incl
add
push
add
js
add
add
add
scas
jle
pop
ror
addb
add
jg
je
add
rcll
mov
jg
mov
pop
cmp
add
leave
push
add
push
add
addl
inc
add
jmp
mov
call
add
add
add
xlat
enter
cltd
inc
add
add
int
xor
lcall
adc
cmp
jne
add
adc
lcall
sub
ljmp
adc
ja
jge
jae
incl
scas
lret
or
xchg
add
out
lea
add
or
or
push
call
movl
dec
out
jo
ljmp
add
call
pushl
mov
sub
mov
adc
jmp
add
add
call
add
out
in
fisttpl
aaa
cwtl
hlt
ret
pop
push
add
addl
push
dec
fnstsw
data16
add
cwtl
pop
outsl
addl
add
mov
pop
xchg
leave
ja
add
push
add
inc
add
sbb
sahf
loop
js
add
push
adc
call
push
lods
inc
add
cli
loopne
adc
jmp
add
add
add
in
inc
add
jg
add
fdivs
add
sbb
das
mov
add
neg
pop
fsubr
jl
addb
popa
add
push
add
insl
and
mov
pop
decl
mov
add
add
add
add
stos
cmp
add
int
add
addb
pusha
add
cmpsb
add
add
cmp
add
jae
inc
add
add
pop
push
pop
xchg
or
add
test
imul
and
push
add
incl
cmp
mov
lods
jg
add
sbb
xor
add
xor
pushl
mov
aad
xor
dec
popa
add
inc
add
cmpsl
add
stos
mov
add
add
push
add
fucom
add
ljmp
add
add
cmp
add
jmp
add
rcll
add
jl
add
in
jns
pusha
add
jecxz
cs
add
jg
inc
add
push
add
jne
add
call
add
add
push
push
fdivs
das
mov
jb
call
jl,pt
scas
cs
jmp
addb
xchg
lcall
inc
add
or
or
fldl
shlb
adc
xlat
cltd
icebp
loop
out
inc
add
add
jmp
push
int3
ss
fbstp
ljmp
fcomps
outsl
sar
sub
data16
add
scas
push
int3
call
pushl
add
sub
fidivs
scas
rclb
out
rolb
add
add
in
and
cmp
sarl
xchg
movb
or
imul
add
xchg
mov
cmpsl
add
mov
sub
add
jae
call
lcall
imul
cmp
addl
ja
pop
mov
movsl
add
into
sbb
jecxz
hlt
dec
call
push
add
dec
je
add
dec
ss
xor
fcmovnu
mov
repz
cmpsl
add
add
inc
add
jp
mov
roll
jmp
add
insb
lds
repz
outsl
test
add
and
jl
popa
add
pop
jns
stos
push
add
cmpsb
add
movsl
add
jmp
add
fwait
and
push
addl
add
fcoml
fwait
xor
add
nop
bound
incl
push
add
xor
push
add
notl
loope
dec
inc
add
push
xchg
inc
add
and
push
outsb
cmp
add
add
push
in
test
fldenv
jmp
and
jmp
add
repz
add
std
adc
cmp
stos
in
mov
inc
add
pushf
push
mov
fdivl
movsb
add
mov
popa
add
cltd
ja
hlt
inc
add
cmp
pop
int
mov
add
push
or
incb
add
fadd
add
mov
repnz
add
add
cwtl
sub
sbb
sub
movsb
add
les
or
ljmp
add
add
call
lods
loope
test
imul
push
arpl
jnp
dec
neg
mov
dec
imul
or
add
sbb
stos
jecxz
sbb
xor
decl
mov
add
mov
add
scas
out
cld
ficoml
sbb
cmp
lds
popa
add
sahf
cs
sub
dec
mov
mov
add
loopne
insl
mov
ljmp
insb
std
xchg
fldl
jne
add
add
dec
sti
aad
mov
stos
pop
inc
add
and
decl
or
out
out
xor
mov
sub
add
add
lods
lea
data16
pop
sbb
and
call
call
jmp
aad
fcoml
or
ljmp
xchg
daa
add
shl
add
jns
add
mov
popa
add
xchg
jecxz
add
pushl
add
add
adc
jmp
push
mov
push
add
or
pop
add
lods
lahf
mov
ss
jge
sbb
cmc
addb
inc
add
rolb
add
pushl
ljmp
inc
add
xor
jle
add
jb
call
stos
ljmp
add
mov
add
add
jne
sub
pop
roll
add
xchg
cmp
add
add
ljmp
or
add
jmp
pushl
mov
enter
add
jo
ljmp
push
cmpsb
add
test
jl
dec
lcall
inc
add
add
repnz
add
jne
xchg
push
add
push
pop
iret
dec
addb
add
add
jl
add
jmp
add
sbb
lcall
scas
inc
add
add
add
add
xlat
lock
add
nop
inc
add
sub
mov
call
add
xor
dec
dec
adc
dec
mov
adc
call
xor
in
into
ret
inc
add
xor
repz
icebp
inc
add
push
add
mov
adc
cld
repnz
cmp
test
popf
jne
lahf
dec
pop
icebp
in
ja
pop
cmp
mov
add
add
add
js
and
dec
addb
add
clc
stos
sbb
xor
call
jns
clc
inc
add
call
decl
cmpsb
add
test
outsb
pop
scas
leave
pop
mov
dec
rorb
add
add
ljmp
mov
pop
jns
stos
or
movl
dec
inc
add
incl
dec
loope
aaa
fs
not
popa
add
shrb
and
incl
decl
xchg
in
addl
ret
add
notl
mov
add
loopne
mov
insb
cmp
sbb
lcall
pop
jg
mov
fildll
ss
cmp
push
and
dec
adc
call
nop
ljmp
add
jmp
adc
add
loop
sbb
sar
mov
sbb
inc
add
rclb
add
mov
push
mov
dec
add
pushl
add
add
jmp
jno
jmp
xor
decl
mov
xchg
xchg
roll
mov
lock
out
outsb
fcoml
mov
xor
add
dec
lods
pop
call
or
lock
sub
mov
jmp
add
add
add
add
ja
mov
fdivs
add
xchg
cwtl
mov
adc
call
add
out
mov
add
stc
push
add
xor
pushl
xchg
adc
jmp
push
add
faddl
incl
add
inc
add
add
mov
add
add
push
push
cmpsb
add
lcall
add
and
xor
frstor
or
call
or
add
pop
sub
dec
pop
mov
enter
add
int
xchg
loop
ja
pusha
add
lret
decl
dec
bound
pushl
lcall
pop
ret
add
mov
cmp
mov
add
mov
mov
add
dec
cwtl
test
add
fmulp
mov
mov
sub
jae
decl
cs
dec
mov
lcall
push
les
fdivrl
xor
aaa
push
pop
push
add
adc
rolb
loop
cmpsb
add
dec
cmp
add
lcall
inc
add
jno
jmp
add
lcall
adc
mov
decl
add
lret
mov
pop
jnp
add
call
insl
xchg
xchg
jge
add
add
cmp
add
xchg
ss
dec
fdivrp
shll
add
iret
pop
jne
add
fisttps
loope
lock
jmp
and
add
jmp
add
and
pushl
push
add
dec
jns
dec
addl
add
aas
mov
test
add
repz
fldcw
out
push
add
cmpsb
add
mov
add
lcall
add
inc
add
or
int
jmp
add
jmp
mov
jg
push
inc
add
pop
repz
and
add
and
lcall
sbb
inc
add
popf
jmp
mov
movsl
add
xchg
test
xchg
push
add
les
scas
ffreep
add
add
adc
call
insl
bound
aas
loop
or
out
cli
pop
mulb
inc
add
and
jmp
jmp
add
or
fiaddl
add
pop
dec
movb
pop
mov
mov
divl
jg
xchg
jae
jmp
push
add
mov
jnp
add
add
add
xor
mov
fbstp
lcall
or
add
inc
add
bnd
movsl
add
ljmp
add
lcall
fsubp
add
cmp
add
xor
ljmp
cltd
xor
add
std
popf
aad
add
and
decl
jp
xchg
gs
das
mov
add
addl
or
cmp
add
mov
xchg
xor
jmp
cmc
mov
add
into
das
dec
push
add
decl
in
ds
add
add
jo
pushl
daa
add
incl
scas
sbb
mov
add
adc
decl
add
rorb
add
fldt
sub
cmp
sahf
mov
jg
inc
add
add
add
call
add
icebp
outsb
jo
jmp
add
add
ljmp
add
jmp
add
int
data16
add
add
movsb
add
add
and
test
ret
popa
add
xor
incl
pop
pop
or
jge
jbe
insl
adc
add
movsl
add
xor
inc
add
mov
shl
ret
add
inc
add
pop
mov
mov
addb
popa
add
lret
lcall
sbb
popf
mov
ret
mov
xchg
aam
ss
cmp
add
std
mov
nop
rolb
mov
add
inc
add
cmp
fdivrp
scas
push
and
sbb
add
adc
incl
push
or
gs
lret
push
add
jno
dec
inc
add
xor
add
mov
add
loopne
data16
xor
test
ja
add
push
movb
add
mov
pushl
add
jne
cmp
add
sti
int
jbe
add
pushl
add
dec
addl
add
mov
mov
add
negb
sahf
insb
fsubrs
movb
cmp
pushl
add
rolb
sahf
push
inc
add
push
add
adc
jmp
add
sbb
add
decl
add
push
leave
mov
ret
mov
mov
int3
xchg
data16
add
mov
pop
jp
pop
int
add
mulb
add
add
sti
mov
pusha
add
push
push
div
xor
sahf
mov
xchg
sbb
in
sbb
mov
add
mov
and
incl
add
jbe
sbb
mov
add
negb
inc
add
les
insb
dec
lock
adc
call
add
cmp
fldcw
add
add
mov
push
aaa
dec
imul
scas
idiv
movsl
add
aam
xor
cmp
add
mov
in
pop
fistps
bound
incl
sub
add
jp
stos
fildll
es
add
movsl
add
out
and
adc
decl
jae
pushl
push
add
inc
add
adc
add
aam
imulb
cli
dec
out
push
add
nop
xchg
dec
fldt
outsl
push
add
jo
cmp
outsl
cli
shrl
arpl
push
nop
sbb
xchg
loope
cmp
call
xchg
ret
add
add
xor
jno
ljmp
add
hlt
stc
push
adc
add
in
dec
pop
xchg
jge
add
adc
call
into
movsb
add
icebp
aas
mov
add
insl
fwait
inc
add
fwait
addr16
scas
dec
movb
movnti
inc
add
adc
add
sub
lods
push
popa
add
xchg
push
ficomps
outsb
or
add
cli
int3
aaa
movb
add
jne
add
scas
data16
add
or
call
sbb
sbb
adc
incl
pop
adc
jmp
fstpt
in
dec
jg
call
dec
push
mov
add
cs
adc
incl
inc
add
lcall
sub
rcrb
fnstenv
bound
fisttpl
push
add
cmpsb
add
stc
lock
cmp
sti
xor
call
add
xchg
addl
jg
in
lods
cs
ja
outsb
xchg
mov
roll
push
push
xchg
sbb
lcall
add
das
adc
add
pushf
lea
inc
add
xchg
imul
cmp
inc
add
pushl
dec
sub
add
in
pushf
mov
incl
incl
decl
pop
dec
inc
add
shrl
mov
dec
rolb
pushf
xor
jmp
add
ja
add
ds
fnstsw
push
add
add
jge
add
add
add
mov
imul
pushl
insl
out
jo
lcall
add
stos
scas
xchg
roll
add
add
cmc
mov
sbb
lea
add
mov
add
decl
adc
call
xchg
outsb
in
sti
mov
cs
mov
xchg
pand
nop
int3
sbb
or
add
dec
lret
repz
cli
cmc
leave
sub
insl
adc
add
jmp
xor
ljmp
add
nop
inc
add
add
scas
and
or
dec
inc
add
addb
lahf
movsl
add
add
push
ret
add
add
push
mov
mov
add
pop
mov
dec
mov
add
push
daa
add
decl
add
jb
fstl
add
in
fsubrs
mov
ja
aam
lahf
fcoms
xchg
test
scas
sbb
add
xchg
xchg
sti
mov
adc
jnp
rsqrtps
ljmp
add
add
in
insb
add
into
cs
mov
int3
scas
mov
mov
cs
jne
add
call
call
sbb
movl
out
push
add
rolb
lahf
int
call
lea
push
jb
call
fimuls
add
incl
lcall
movb
mov
add
mov
add
add
add
add
add
xlat
mov
add
sub
push
add
add
aad
dec
xchg
scas
mov
aam
add
daa
add
ljmp
sub
cmp
mov
mov
fwait
sbb
add
icebp
arpl
lcall
lods
js
pop
pushf
mov
add
scas
cmp
aaa
lods
les
and
int
push
pop
or
add
mov
mov
out
insl
lret
add
lods
nop
jbe
test
stos
sbb
cmp
dec
push
add
mov
jle
add
pop
cmp
or
add
jbe
add
add
std
enter
add
js
ficoml
mov
add
add
loopne
inc
add
aaa
je
mov
adc
jmp
sbb
add
mov
push
enter
jbe
add
cmp
pop
add
xor
lcall
dec
mov
decl
xor
jmp
add
add
mov
add
push
add
and
inc
add
pop
imul
push
fmul
mov
xor
lcall
and
call
call
add
mov
add
xchg
lahf
in
mov
pusha
add
mov
test
xchg
leave
jns
mov
ja
add
ds
and
jmp
js
sarl
jmp
or
mov
icebp
mov
addl
xchg
ss
add
lds
daa
add
movsl
add
imul
out
das
push
mov
add
jecxz
imul
add
adc
call
imul
push
mov
mov
push
add
fisttps
lds
cli
and
push
xor
push
jmp
stos
aam
lds
and
lcall
daa
add
add
mov
jmp
fldl
incl
add
jns
add
lds
and
incl
int
bound
mov
mov
cltd
cmp
jmp
push
mov
ja
popf
daa
add
dec
lret
lds
pop
add
add
ljmp
shll
lcall
shr
mov
addl
fistpll
aaa
and
lcall
mov
dec
push
xchg
in
and
jmp
add
add
ret
inc
add
mov
pop
pop
push
arpl
decl
mov
movsl
add
add
js
add
jecxz
pop
mov
iret
sar
pop
cmpsl
add
add
cmc
jle
dec
mov
add
add
add
decl
add
fwait
cmp
mov
fstl
add
mov
pop
pop
mov
jbe
mov
in
pop
and
jmp
cltd
nop
iret
js
add
add
mov
xchg
scas
out
sbb
decl
add
pop
mov
or
frstor
imul
add
add
cmc
test
jmp
int
add
xor
cmp
push
aam
mov
fadds
out
popa
add
jbe
add
lds
inc
add
xchg
xlat
mov
lcall
mov
add
imul
xlat
jmp
stos
or
mov
jg
xchg
fdiv
mov
add
add
add
and
js
ffree
add
pushl
roll
ds
test
xchg
scas
fidivrl
jmp
add
movsb
add
lcall
add
insl
and
call
add
rcr
jnp
add
js
add
test
addb
add
dec
sbb
sti
addb
sbb
hlt
shrl
test
mov
test
stos
xchg
add
pushl
js
add
stos
stos
push
add
adc
ljmp
dec
call
mov
in
roll
stc
add
clc
xchg
or
lds
fwait
lea
push
lcall
aas
int3
fwait
jl
jo
fmuls
ljmp
jmp
addl
add
mov
push
add
sti
and
call
adc
add
add
sti
call
in
jo
decl
dec
stc
mov
xchg
pop
idiv
test
out
or
test
les
sub
fistl
mov
call
or
add
in
imul
add
call
pop
out
push
mov
aas
fldcw
add
add
jnp
lret
popa
add
mov
xchg
sub
repz
mov
add
jmp
add
sub
iret
cmc
cmp
add
sahf
test
sti
inc
add
call
lret
clc
int
add
ret
add
sbb
xchg
jmp
add
push
add
into
out
clc
and
data16
add
cmp
dec
insl
push
arpl
incl
add
add
dec
pop
mov
call
and
pushl
add
mov
sub
stos
fbld
jmp
add
sbb
xchg
filds
jae
call
ret
add
pop
cmp
xor
pop
addl
lcall
lds
xlat
les
int
enter
inc
add
pop
pop
or
aam
out
mov
jmp
add
and
ljmp
push
cld
lret
leave
mov
xor
pushl
add
jns
add
outsl
cmpsl
add
mov
pop
inc
add
lret
test
sbb
test
mov
add
into
fwait
push
mov
addl
add
in
mov
jp
fs
add
les
fldpi
div
jbe
rolb
add
sub
fstp
fstl
jnp
cmpsl
add
add
add
addb
addb
roll
add
inc
add
scas
mov
push
or
add
scas
repz
aam
add
mov
add
push
sub
add
push
inc
add
add
mov
or
jge
push
mov
mov
add
mov
mov
pop
cmp
stc
mov
pop
int3
outsb
push
sahf
dec
xchg
pop
add
decl
xchg
shl
add
mov
add
add
dec
mov
cs
mov
addb
scas
dec
ret
loopne
test
sub
add
and
ljmp
cmovnp
dec
xchg
add
pushl
sbb
repnz
xchg
aaa
outsl
imul
in
jecxz
arpl
jmp
add
ljmp
clc
scas
loopne
and
lcall
pop
test
add
jge
mov
add
and
ljmp
cmp
ret
rsqrtps
call
dec
enter
xchg
ret
cmp
add
jnp
test
cmp
xor
aas
mov
or
call
shll
add
rclb
add
in
test
mov
decl
ret
sbb
adc
scas
movl
insl
or
push
add
add
cltd
pop
jnp
cs
add
add
into
clc
and
ljmp
add
push
cld
movl
jo
jns
xor
jmp
dec
lods
sbb
mov
pop
sub
add
add
lcall
dec
inc
add
ret
cmp
adc
call
and
push
or
decl
cmp
add
add
mov
add
add
xor
call
call
leave
mov
add
out
mov
jmp
add
pop
pop
outsl
sub
movsl
add
mov
add
fxam
add
jno
dec
popa
add
leave
aam
add
cmc
aas
cmp
les
sub
scas
jb
lcall
xlat
jmp
lock
add
adc
decl
mull
add
adc
jmp
add
sbb
add
xchg
dec
pop
push
add
push
add
jbe
add
push
jo
lcall
add
jg
dec
movb
loope
xchg
xor
repz
add
jns
ljmp
add
idiv
xchg
lcall
fmull
jne
add
jbe
inc
add
add
xlat
sbb
add
xchg
fildll
sarb
outsb
dec
rorb
add
xor
jmp
add
adc
mov
lods
mov
mov
mov
dec
xor
test
ljmp
and
incl
add
or
add
ja
mov
mov
cmp
daa
add
call
jno
ljmp
lock
and
add
roll
movb
movaps
add
fstps
into
push
jmp
or
fldcw
adc
mov
insb
in
mov
dec
xchg
dec
rcrb
sbb
ljmp
or
sti
out
mov
inc
add
lock
add
add
add
add
lcall
fisubrl
add
add
test
add
incl
scas
scas
cmp
add
add
mov
cmp
loopne
addb
cs
cmp
add
and
lcall
mov
loope
test
out
enter
push
add
adc
incl
add
nop
jl
add
movsb
add
push
pop
or
add
dec
jno
in
mov
shr
std
cld
sahf
or
rcrb
sahf
xor
incl
repnz
add
out
and
pushl
add
jecxz
popf
push
add
xchg
in
rolb
imulb
sub
pop
cwtl
je
sbb
lret
sub
add
mov
ss
pop
sbb
lcall
sbb
push
add
jae
jmp
add
sbb
sbb
in
push
fs
testl
in
mov
in
xchg
js
add
jno
ds
inc
add
cmp
icebp
add
jmp
add
push
add
int
or
xor
cli
rclb
sbb
test
mov
faddl
add
call
mov
sbb
sbb
add
loopne
repnz
dec
addl
stc
inc
add
lds
addl
pop
addb
ss
add
inc
add
sbb
incl
adc
decl
jae
jmp
cmp
in
and
roll
adc
lcall
dec
mov
add
adc
add
roll
cmp
add
mov
mov
les
mov
push
jb
inc
add
add
add
bound
jmp
cmp
pushl
decl
inc
add
sub
add
pop
cmpsl
add
adc
lcall
add
shrl
in
fdivp
xchg
stos
arpl
out
sub
popa
add
pop
push
std
ret
add
inc
add
jecxz
nop
cmp
add
sub
add
add
sub
sub
add
sbb
add
decl
add
add
add
fdivrs
xchg
scas
sarb
adc
ljmp
daa
add
daa
add
cld
mov
add
mov
ffree
add
add
jg
fimull
add
mov
cltd
add
loope
add
cmp
movsb
add
pop
inc
add
dec
dec
test
icebp
sub
decl
add
add
xchg
push
add
addr16
add
dec
pop
test
test
jbe
add
fisubrl
pushl
out
mov
loopne
fimull
add
mov
mov
add
popl
in
and
call
add
cmp
inc
add
jmp
movb
inc
add
add
fisubl
jbe
mov
push
xchg
cmc
clc
xlat
mov
add
cli
cs
sahf
push
add
fdivs
mov
mov
lods
push
test
jle
sub
pop
addl
pushf
mov
add
fnsave
inc
add
add
and
decl
lcall
push
inc
add
add
add
pushl
mov
testl
mov
add
ljmp
add
test
inc
add
mov
fwait
aam
add
cs
sub
xor
incl
aam
cmp
sub
call
add
add
add
cmpsb
add
add
add
scas
arpl
call
imul
addb
pop
imul
imul
mov
add
fsubs
add
jl
jb
fadd
add
add
mov
movsb
add
add
jmp
add
xor
call
add
xchg
cmc
sub
add
add
inc
add
add
add
das
mov
add
or
add
mov
lock
pop
cmp
jp
push
add
jne
or
add
popf
mov
in
mov
or
add
popf
mov
xor
js
add
push
add
in
jb
out
dec
dec
jb
push
ficoms
jp
push
add
ljmp
mov
pop
inc
add
outsl
add
add
mov
insb
and
incl
inc
add
add
int3
or
pop
xchg
hlt
sbb
add
mov
cli
rolb
add
pop
jecxz
in
aaa
adc
jmp
add
mov
add
sbb
add
add
loope
ret
add
add
fdivrs
add
test
sub
sub
xchg
ret
add
push
adc
pushl
push
std
add
ljmp
mov
xchg
into
addb
lods
mov
jmp
add
lds
roll
add
out
imul
daa
add
add
out
je
das
int3
movl
add
sub
out
aam
jmp
add
add
lahf
sbb
push
movsl
add
pushl
xchg
push
or
add
hlt
xor
push
inc
add
hlt
aaa
and
stc
add
lcall
sbb
rcll
jle
pop
add
and
call
add
cltd
mov
daa
add
lock
or
fdivrs
add
add
cmp
lods
inc
add
jmp
add
mov
add
das
pop
adc
jle
add
dec
xor
ljmp
dec
je
aad
sbb
add
and
adc
push
imul
xor
stc
push
add
cmp
xor
stc
cmp
mov
add
jae
ljmp
add
fistps
das
roll
je
pop
push
outsb
add
fwait
mov
ret
add
loope
stos
lahf
push
cmp
mov
push
pop
push
add
into
sub
nop
sub
or
fistl
push
mov
add
call
add
test
push
pop
dec
int
inc
add
cmp
dec
adc
add
jp
push
add
pop
and
add
sub
rorb
mov
pop
add
push
add
jbe
ret
aad
sti
xchg
adc
decl
mov
insl
addb
mov
je
pop
jbe
jns
mov
lret
mov
cmpsb
add
add
stos
pop
addb
rorl
or
add
add
add
add
data16
add
adc
add
loopne
scas
cltd
insb
xchg
mov
mov
add
add
les
push
mov
add
cmpsl
add
out
seta
mov
mov
jge
add
incl
add
add
sbb
push
insb
sub
add
cmp
lods
lahf
sub
add
jle
add
cmp
insb
mov
add
add
call
xor
dec
and
add
jl
fidivrs
cmp
add
addr16
xor
jmp
lahf
stc
lea
add
add
insb
pop
inc
add
pushf
pop
or
jnp
add
enter
add
mov
incl
add
ret
add
fsubs
add
mov
add
imull
or
add
pop
fists
arpl
call
clc
inc
add
add
shl
lea
shrl
into
frstor
lcall
mov
call
loopne
hlt
loop
fstps
add
enter
jnp
xchg
push
pop
cmp
jbe
add
loopne
xchg
mov
add
pop
lahf
lret
add
xchg
icebp
and
ljmp
add
pushl
mov
xchg
pushl
pushl
jmp
add
std
xor
jmp
add
push
push
in
scas
pop
sbb
stos
scas
pop
add
or
sub
enter
lret
sti
mov
add
cmp
mov
cli
mov
fstpl
fmulp
clc
push
pop
jbe
mov
mov
rolb
dec
shll
add
ss
add
add
ljmp
cmc
cmp
js
adc
pushl
ljmp
sbb
add
add
arpl
call
clc
data16
data16
cmp
nop
push
add
movl
cmp
jbe
add
addl
addl
outsl
and
lcall
add
lcall
add
pushl
xor
ljmp
or
add
aam
mov
add
lret
jmp
pop
inc
add
sbb
xchg
mov
popa
add
popf
jno
call
add
mov
popa
add
sub
add
add
lods
inc
add
clc
pushf
inc
add
xchg
dec
jno
inc
add
add
lret
dec
ja
in
ss
inc
add
mov
inc
add
add
stc
adc
fsubl
add
mov
inc
add
mov
add
add
sub
test
clc
xchg
cmp
lock
pop
inc
add
scas
jg
in
movl
jne
mov
mov
add
outsb
leave
cmc
or
cmp
add
jnp
push
sub
ljmp
push
rolb
rolb
add
or
add
incl
fimull
int3
fcom
popf
add
insb
xor
fcmovbe
daa
add
add
dec
cmc
or
add
add
cmp
adc
data16
add
pop
cli
jbe
cltd
jno
call
call
add
and
add
mov
add
and
ljmp
inc
add
je
mov
jo
aas
inc
add
lahf
aas
cmp
jl
add
cmc
test
cli
pop
or
add
lahf
imul
imul
sarl
sub
add
je
dec
xor
ljmp
jmp
ljmp
add
adc
incl
mov
sbb
add
sbb
mov
add
scas
inc
add
dec
push
sarb
into
jmp
add
cmp
pushl
addl
add
ss
add
jno
ljmp
mov
pop
enter
mov
add
icebp
popa
add
cmp
rorb
leave
test
add
lock
stc
ret
negl
cmp
add
arpl
lcall
jmp
imul
sbb
add
add
push
add
push
add
hlt
mov
add
in
cmp
add
pushf
push
add
mov
sbb
add
in
fwait
pop
pop
inc
add
jb
dec
sbb
js
add
decl
aam
add
pop
mov
lock
out
test
nop
pop
xor
add
cmpsl
add
add
add
call
in
sub
add
incl
lcall
add
fnstenv
add
popa
add
int
mov
push
pushf
xor
decl
add
loopne
rclb
adc
aaa
enter
fwait
add
mov
mov
jl
add
into
push
mov
scas
and
inc
add
add
adc
jle
add
inc
add
scas
addr16
add
pop
lock
mov
add
dec
or
jg
sbb
cmp
add
pop
fistpll
mov
add
aas
sub
insb
fisttpll
jns
notb
add
or
inc
add
call
scas
roll
add
xchg
mov
sbb
add
xchg
jno
dec
jle
nop
sub
decl
adc
jmp
sub
in
pop
add
daa
add
inc
add
adc
call
ljmp
inc
add
out
pop
ljmp
ja
data16
adc
lcall
fisubl
add
mov
pop
jno
ljmp
stos
pop
clc
jg
mov
cmp
add
aas
inc
add
add
add
add
ljmp
xchg
into
xchg
inc
add
push
in
cwtl
fcomps
inc
add
cld
xchg
movsl
add
sbb
mov
add
addl
add
inc
add
add
xchg
cmp
jp
xor
add
jo
ljmp
mov
int
add
mov
pop
mov
mov
adc
mov
ljmp
mov
movl
add
les
mov
std
or
lods
adc
ljmp
add
cmp
add
cld
xchg
pop
int3
jns
add
pusha
add
out
test
push
fs
dec
add
stos
insb
aam
xor
add
incl
add
lock
push
mov
adc
jg
add
jle
add
xor
jmp
dec
bound
inc
add
add
fwait
sbb
pushl
push
add
push
mov
in
movl
jae
pushl
negl
ja
push
lock
sbb
outsb
xor
call
mov
cmp
rol
add
add
addb
add
cmp
pxor
add
in
pushf
ficompl
stos
add
add
dec
insl
scas
jmp
mov
add
add
out
stos
je
mov
insl
add
jmp
add
add
adc
call
add
movb
xor
ljmp
mov
ss
add
add
mov
jg
lahf
repnz
data16
add
mov
inc
add
cmpsb
add
xor
decl
add
and
out
mov
pop
lds
sub
iret
leave
mov
add
pushf
jno
jo
push
sbb
hlt
mov
ljmp
mov
add
incl
pop
add
decl
pushl
xchg
shll
clc
pop
aad
outsb
std
or
dec
xchg
inc
add
add
jecxz
loope
xchg
bound
ljmp
test
add
add
test
pushl
fbstp
ljmp
imul
dec
xor
call
fcoms
add
adc
add
sbb
pop
out
mov
xlat
loope
push
add
popa
add
pop
in
lahf
lret
xchg
or
addb
push
cmp
mov
out
aad
clc
call
and
lcall
pop
nop
test
pop
testb
xchg
enter
inc
add
push
add
ja
add
add
and
pushl
cld
in
and
decl
add
je
pop
pop
addb
mov
dec
sub
add
push
add
out
mov
add
mov
ret
add
stc
push
fidivrl
add
lret
movl
add
movb
adc
call
call
inc
add
adc
incl
loop
ret
jl
add
jno
decl
add
addb
add
xchg
insl
ljmp
add
mov
adc
mov
add
mov
xor
mov
xchg
push
add
js
inc
add
pop
aad
addr16
xchg
adc
call
add
inc
add
cli
test
jecxz
push
add
xchg
pop
jnp
xor
decl
xlat
adc
decl
out
add
call
jp
fstps
add
add
push
add
jo
call
test
add
add
adc
fldcw
push
out
aam
addb
add
roll
add
add
and
dec
out
mov
pop
addl
adc
dec
fcomi
or
add
out
adc
add
pop
in
popa
add
fistl
daa
add
dec
daa
add
add
add
loopne
adc
call
faddl
push
add
shlb
pop
hlt
cmpsl
add
mov
add
xchg
xchg
fistpll
add
imul
movb
add
mov
and
sahf
mov
sub
xor
jmp
add
gs
push
add
sbb
add
jbe
add
push
push
or
add
sub
sub
and
stc
ss
fwait
cli
mov
add
addl
lock
scas
sbb
adc
adc
jmp
lods
cwtl
ret
std
add
dec
sub
jg
add
or
icebp
jle
mov
and
fisttpll
add
mov
mov
jnp
jl
push
jecxz
loopne
in
dec
jae
jmp
add
add
or
dec
mov
in
xlat
jmp
add
in
lods
pop
fistl
add
cmp
add
inc
add
mov
add
ljmp
add
add
pusha
add
add
add
push
js
mov
xor
mov
add
add
fs
out
pop
int3
mov
pusha
add
popf
inc
add
in
push
xor
lcall
xchg
xlat
stc
out
sbb
push
lret
decl
cmp
add
add
sti
call
mov
lcall
das
psubusb
lods
mov
test
fidivrs
add
insl
pop
dec
mov
add
xor
jmp
add
add
push
sbb
add
add
add
jne
add
out
push
aas
mov
mov
add
add
push
or
dec
xchg
pop
xlat
push
leave
cmpsb
add
mov
add
add
js
mov
add
push
fstpl
mov
jmp
add
ljmp
data16
add
inc
add
rolb
jo
incl
add
int3
xchg
push
add
cli
sbb
sahf
movl
lds
cmp
and
decl
fisttpl
add
incl
add
add
pushl
insl
addl
xchg
jb
call
decl
lcall
jo
ljmp
lods
mov
add
lret
jnp
addb
add
lcall
bound
pushl
add
mov
add
xor
add
in
in
xchg
xchg
xchg
mov
ljmp
mov
xchg
sti
nop
mov
movsl
add
stos
push
or
xchg
daa
add
sub
xor
inc
add
add
sysret
add
stos
sbb
mov
add
mov
loop
rclb
add
xchg
sti
scas
jp
add
sbb
sahf
rcrl
dec
and
lcall
mov
pushl
js
add
mov
mov
push
sub
jb
jmp
fst
or
std
xchg
dec
stos
mov
jmp
int
add
jnp
add
xor
cli
sbb
call
xor
push
data16
add
xlat
fstpl
call
jmp
jg
mov
and
jmp
in
pop
imul
into
fsub
add
push
and
call
inc
add
cmp
add
add
movsb
add
jae
jmp
add
jae
js
outsb
mov
ret
jno
lcall
incb
push
fdivr
aad
je
repz
aad
add
lods
call
push
add
jbe
add
stos
mov
mov
add
mov
fnstenv
or
add
fsubp
add
add
mov
jg
outsb
movl
testb
cmp
sub
xchg
xchg
outsb
push
xchg
roll
pop
jb
decl
add
xor
lcall
imul
cmp
add
push
add
mov
movl
push
inc
add
cli
sti
mov
int
add
lret
pop
in
push
add
mov
inc
add
add
incl
mov
add
add
imul
add
test
cmpsl
add
add
add
add
or
fistpll
add
pop
out
movb
add
sahf
pop
in
push
cmp
lret
mov
dec
pop
cli
lea
add
and
jmp
add
cli
daa
add
cmp
mov
nop
cmp
mov
add
add
add
cwtl
std
dec
cmp
add
inc
add
outsb
cmp
outsb
dec
sti
xor
lcall
xchg
ss
fsub
add
movsl
add
add
xor
lcall
int3
mov
decl
add
loop
leave
inc
add
add
cltd
mov
xor
ljmp
popa
add
jbe
aas
out
inc
add
add
cwtl
lcall
lock
add
and
adc
incl
add
lcall
add
fwait
or
jnp
pop
mov
adc
lcall
pop
int
add
add
inc
add
add
fbstp
in
popa
add
add
faddl
add
dec
aam
add
add
jge
data16
sbb
push
cmpsb
add
add
call
data16
inc
add
je
add
inc
add
test
pop
mov
test
sarb
movsl
add
fimull
pushf
fs
add
outsl
inc
add
push
add
mov
add
add
add
data16
pushl
add
hlt
jmp
add
add
out
sub
add
or
push
add
mov
addl
add
cli
cmp
add
xor
ljmp
add
dec
lahf
xchg
ret
add
fcomip
scas
shlb
call
decl
movl
jae
call
add
lret
add
insb
xchg
daa
add
xchg
mov
pushl
mov
das
xor
push
ret
add
cs
addr16
add
add
incl
fwait
mov
in
xchg
and
fdivrl
push
inc
add
and
out
jae
incl
add
add
aad
and
fnstenv
push
push
inc
add
bound
incl
ljmp
add
add
addl
add
addl
loopne
mov
xchg
cli
xchg
inc
add
aam
outsb
mov
mov
lods
leave
sub
faddl
lret
aam
mov
popa
add
mov
pop
fistl
lcall
mov
pop
cmp
jno
call
add
addb
inc
add
ds
add
incl
add
push
add
call
xchg
js
inc
add
or
addl
mov
call
push
add
or
add
out
test
sti
testl
movb
push
mov
add
aad
mov
int
add
mov
add
xchg
or
fisubrl
lea
movl
sub
popa
add
ljmp
inc
add
enter
dec
push
pop
fidivrl
mov
jmp
cmp
sbb
add
cs
add
inc
add
add
add
add
dec
imul
pop
addl
daa
add
dec
leave
js
adc
lcall
lods
stc
sbb
sub
fldenv
clc
int3
ret
add
das
jns
pop
cmp
test
fdivr
lret
cwtl
lock
inc
add
or
gs
add
in
rorl
jmp
xor
mov
inc
add
decl
add
jo
call
add
test
flds
cld
rorb
call
add
outsl
xchg
dec
cs
stos
adc
jmp
add
mov
mov
add
fadd
add
stos
idivl
in
test
push
add
adc
pushl
bound
ljmp
in
sub
stc
movsb
add
clc
addb
add
scas
aas
loopne
xlat
sub
movb
add
mov
pusha
add
popa
add
push
sub
cmp
mov
mov
and
pop
and
jns
add
cmpsb
add
add
or
add
or
pushl
aaa
call
mov
inc
add
decl
out
sub
imul
mov
mov
test
add
xchg
scas
sti
addl
rcrb
add
fcoml
add
stc
pop
enter
dec
cmp
adc
incl
incl
pop
or
out
insb
in
xchg
add
add
test
repnz
mov
enter
push
add
xor
incl
add
int3
and
decl
and
inc
add
fcomp
fistl
adc
inc
add
fcoms
mov
add
dec
inc
add
js
add
add
decl
add
imul
add
addl
addb
dec
dec
outsb
jecxz
dec
sahf
into
sbb
add
imul
mov
push
pusha
add
cmp
adc
ljmp
add
or
pop
sub
add
add
dec
sub
lcall
and
jmp
mov
lock
fwait
pop
imul
add
pop
mull
rcrb
add
jns
pop
cld
jae
jmp
add
insl
fstps
add
add
or
add
add
dec
js
push
loope
outsb
xchg
out
xor
std
movswl
pop
fiadds
add
and
lcall
add
add
add
adc
jmp
add
inc
add
les
imul
or
xchg
stos
dec
addb
xor
lcall
mov
sbb
add
add
add
mov
add
ret
bts
mov
sub
add
xor
lcall
fisubl
add
push
lods
lret
mov
add
and
jmp
mov
add
rclb
stos
fisubl
add
icebp
loop
add
lcall
mov
add
or
sub
daa
add
add
daa
add
add
testb
xchg
mov
aas
push
add
call
pushl
imul
sub
jmp
dec
pop
or
movsb
add
sub
add
mov
push
mov
add
dec
mov
call
xchg
movsb
add
insb
ret
les
mov
add
xor
cmp
imul
mov
add
jno
decl
add
repnz
inc
add
test
sarl
xor
pusha
add
jg
add
add
inc
add
ljmp
dec
jle
mov
add
push
add
mov
call
decl
ja
add
mov
cli
in
incl
sub
add
add
pushl
cwtl
lcall
mov
adc
testb
repnz
lcall
cld
ds
add
sub
xchg
adc
sti
sti
pop
add
iret
mov
add
repnz
test
xor
pushl
faddl
push
jae
decl
out
outsl
in
sub
add
addb
std
mov
call
add
adc
add
decl
arpl
jp
xchg
add
inc
add
dec
pop
and
jmp
add
js
scas
rorb
add
sbb
add
scas
pushf
push
dec
sub
add
cli
push
adc
call
popa
add
test
or
jmp
and
lret
add
addl
dec
add
shll
add
movb
or
pop
leave
mov
roll
scas
push
add
lret
js
push
call
add
jns
add
decl
aas
sarl
sbb
dec
pop
and
cwtl
cmp
lea
add
stc
and
and
push
dec
xor
decl
add
imul
roll
ljmp
lcall
mov
and
incl
add
jne
jle
fnsave
bound
jg
add
mov
push
ficoms
movsl
add
jge
cmp
into
jle
add
cmp
nop
mov
add
jmp
add
add
addl
add
movsl
add
cmc
xchg
mov
add
and
ljmp
pop
jp
fiadds
out
popa
add
lea
add
faddl
mov
jbe
push
jnp
mov
add
inc
add
and
xor
call
pop
push
add
and
incl
add
and
add
stc
mov
pushl
add
sahf
enter
jae
ficoms
add
negl
mov
popf
or
jg
dec
adc
int
xchg
aad
add
bound
lcall
sbb
test
js
add
adc
decl
decl
mov
loopne
mov
outsl
addl
dec
les
shrl
push
in
pushf
dec
ja
xor
fildl
inc
add
add
cli
cld
mov
lret
add
mov
jmp
add
add
scas
push
ss
add
add
add
xchg
mov
lret
xor
add
roll
mov
add
cmp
add
push
add
sbb
xchg
out
loop
jl
aaa
add
incl
xchg
imul
addb
mov
push
out
aam
add
add
lcall
mov
mov
fwait
in
insl
xchg
xchg
mov
movb
add
decl
gs
jns
shlb
pop
xchg
mov
les
mov
add
mov
movb
add
call
mov
dec
jnp
jmp
add
or
cli
xor
call
xchg
or
bound
cld
cmp
jnp
add
shl
add
iret
xchg
jo
lcall
aam
add
cmp
mov
lret
add
add
lods
mov
test
or
jle
add
cmp
add
fs
cmp
add
xlat
pop
in
cli
pusha
add
mov
inc
add
or
add
xchg
inc
add
pop
dec
mov
add
les
add
mov
add
in
mov
add
xchg
jbe
xlat
mov
sub
add
test
add
out
sub
inc
add
js
fnstcw
enter
jecxz
xchg
ss
push
in
roll
add
mov
stos
arpl
call
call
call
std
jg
sbb
add
push
out
sub
or
add
sub
stos
sub
add
enter
and
incl
fwait
push
repnz
add
add
jo
dec
cmc
cmp
xor
jmp
add
test
add
shrl
dec
jmp
add
lcall
lods
adc
cmp
xor
sub
xchg
pop
add
add
dec
loope
sbb
adc
add
add
add
out
pop
cmp
mov
push
add
pop
sbb
sbb
add
add
test
pop
aas
mov
add
or
add
pop
sbb
pushl
int
loopne
lock
or
mov
or
loopne
imul
pop
aad
mov
sti
xchg
insb
push
add
add
add
inc
add
rolb
mov
iret
push
xor
add
lahf
cmpsb
add
das
into
lret
add
mov
daa
add
pop
mov
push
add
aas
mov
add
or
sub
in
mov
ljmp
add
cmpsl
add
fsubrp
arpl
dec
xchg
or
add
mov
add
outsb
popf
sub
sbb
mov
pushf
bound
ljmp
cmpsb
add
bound
pushl
add
fisttps
cmp
push
push
add
mov
dec
mov
xchg
push
add
jne
cwtl
shlb
add
repnz
fbstp
inc
add
jno
jmp
add
push
pop
push
cmp
jmp
add
inc
add
and
loop
jp
add
stos
mov
jns
add
ficoms
add
add
movsl
add
xor
jmp
add
and
jmp
jmp
add
and
decl
add
sti
add
pushl
aas
jnp
mov
add
jl
push
rcrb
lret
xor
stc
fwait
and
add
decl
add
push
lret
jle
sti
popa
add
fsubrp
cmpsb
add
cmpsl
add
call
lock
mov
sahf
push
xchg
out
pop
jp
add
mov
inc
add
add
fdivl
add
je
aad
xchg
and
push
add
mov
push
add
or
mov
call
add
jmp
cltd
cmp
xchg
inc
add
loopne
jle
add
dec
add
add
mov
inc
add
cli
add
jmp
add
add
add
add
cld
dec
ret
mov
add
push
loope
push
add
mov
cmc
push
jne
add
stc
add
jmp
adc
movl
push
ds
add
add
cmc
sbb
aaa
icebp
test
mov
add
idivl
xor
ljmp
testl
add
add
pusha
add
pop
or
lcall
testl
out
in
jns
xchg
push
pop
pusha
add
mov
pushf
filds
clc
fstps
add
das
adc
pushl
cmc
cmp
les
addr16
add
push
add
call
push
add
out
cmpsb
add
pop
movl
jg
sub
aad
xchg
icebp
xchg
xchg
add
call
mov
ds
adc
fistpl
pop
test
add
jp
or
popa
add
pop
adc
call
push
mov
add
wbinvd
mov
ficoms
add
scas
adc
mov
mov
cmp
add
add
neg
out
adc
call
dec
push
add
add
mov
xchg
jle
xchg
out
adc
dec
in
jge
mov
mov
sahf
pop
add
mov
pushl
xlat
add
pushl
idiv
movl
pop
imul
jl
repz
scas
sbb
add
inc
add
pop
add
pop
adc
incl
add
mov
addb
add
mov
sbb
lods
inc
add
call
loope
xor
call
mov
xchg
sub
mov
dec
sub
add
incb
cld
xchg
push
fcomps
mov
je
jns
mov
add
or
add
push
f2xm1
jp
jae
pushl
mov
xchg
icebp
mov
push
mov
sub
add
clc
jp
add
pop
jb
incl
addb
add
aas
imul
add
cmp
out
std
sbb
inc
add
roll
loope
dec
out
push
bound
ljmp
js
add
data16
call
data16
addb
rolb
add
push
add
sarl
bound
ljmp
add
add
push
test
pop
test
add
add
out
add
jmp
pop
sahf
aaa
inc
add
and
jmp
add
outsb
or
cmp
add
insl
out
push
add
imul
popa
add
and
jmp
add
sahf
mov
and
xlat
pop
add
incl
add
aam
add
add
mov
add
lcall
jmp
jns
inc
add
lret
in
dec
aam
push
add
data16
aas
bound
jmp
add
add
jae
pushl
call
add
mov
add
jg
mov
add
jno
ljmp
and
pushl
add
loop
jbe
add
add
or
shrl
scas
push
sti
jns
rolb
enter
jg
addl
mov
add
push
jg
mov
sbb
ret
add
popf
dec
dec
inc
add
jmp
les
inc
add
jmp
jg
add
cmpsb
add
add
cmpsb
add
add
cmp
push
decl
cli
insl
ja
repz
jmp
addr16
xchg
or
cmpsl
add
add
inc
add
xchg
out
jge
pop
or
das
mov
inc
add
mov
ffreep
add
add
sub
mov
cmpsb
add
sarb
int3
jmp
sub
lahf
fisttpll
add
mov
lcall
add
jle
pop
pop
das
nop
sbb
testb
clc
push
sub
push
iret
rcl
xchg
jge
xchg
adc
jmp
ljmp
jae
decl
mov
pop
mov
xchg
sub
mov
add
dec
lcall
add
add
sbb
fs
xchg
mov
jl
sub
xor
call
add
inc
add
mov
jmp
add
loopne
push
mov
sbb
lods
dec
in
xchg
adc
push
and
ljmp
lock
pushf
mov
repnz
jb
jp
add
push
xor
incl
out
jp
add
jg
dec
jl
das
scas
sbb
add
add
add
add
mov
and
call
mov
lret
push
cli
pusha
add
jns
stos
fidivrl
and
stc
adc
sti
roll
cltd
in
xchg
in
ds
add
popa
add
cvtpi2ps
cmpsb
add
pop
ret
add
push
add
adc
decl
jno
lcall
jmp
mov
add
aad
pusha
add
dec
lret
add
lcall
dec
into
repnz
aad
mov
in
aaa
mov
out
fildll
mov
pop
inc
add
fildl
aam
shlb
in
push
push
add
add
stc
or
xor
xchg
xchg
bsr
or
sub
inc
add
lock
test
cld
dec
jp
add
push
stos
pop
dec
and
call
mov
push
pushl
lcall
decl
adc
mov
add
adc
lcall
add
sub
push
add
pusha
add
mov
fnstsw
inc
add
xchg
js
add
aam
push
push
add
sbb
xor
incl
add
bnd
add
add
addb
add
or
fucomp
mov
in
lods
data16
xchg
popa
add
push
rdpmc
add
lds
dec
add
add
xor
decl
lds
in
lcall
cmp
movsb
add
add
mov
imul
jbe
add
add
loop
dec
lock
jmp
jno
call
mov
lahf
mov
add
mov
inc
add
add
rcr
jo
call
ljmp
inc
add
idiv
dec
push
add
cmp
cmpsb
add
mov
add
movsb
add
add
add
fistl
call
add
xor
add
sub
scas
movsb
add
add
inc
add
dec
dec
inc
add
jb
incl
ss
add
scas
add
aad
dec
sub
add
cwtl
pop
les
inc
add
pushf
adc
decl
mov
add
mov
jnp
and
fildll
loope
jb
call
mov
bound
decl
adc
cmp
dec
or
out
lret
and
incl
add
adc
add
bound
pushl
add
ljmp
add
les
inc
add
and
decl
fcomip
push
add
pop
adc
call
aas
sub
insb
pop
sti
push
add
insb
jb
decl
adc
addl
popa
add
pop
sbb
in
pop
fldenv
jb
lcall
jns
pop
out
add
pushl
add
negl
xchg
xchg
mov
add
cmp
jno
call
mov
inc
add
cmp
lcall
loop
dec
insl
cmp
add
mov
jl
add
add
cwtl
shrb
inc
add
data16
pop
adc
call
lock
xchg
and
call
call
daa
add
pop
add
mov
add
dec
cmp
outsl
fidivs
add
add
add
je
add
mov
sbb
repnz
pushf
call
add
lret
cmp
add
xor
decl
pushl
add
jb
cwtl
cmpsb
add
test
in
fisubrl
inc
add
cmpsb
add
sti
mov
adc
mov
faddp
add
add
add
add
sbb
add
jg
add
add
imul
mov
fwait
rol
add
jnp
mov
xlat
dec
lahf
mov
ljmp
out
jl
mov
jmp
adc
lcall
xor
call
mov
xlat
mov
jg
mov
add
add
addb
mov
add
cmpsb
add
sbb
add
les
enter
add
add
xor
sub
add
xchg
cld
push
in
xchg
addl
jmp
aas
add
lcall
fdivs
add
pop
ljmp
and
dec
pop
cli
dec
rorl
roll
mov
clc
imul
mov
pushf
mov
add
xchg
jmp
pop
add
add
add
xor
pushl
add
jno
fistl
pushl
call
dec
repnz
add
ficomps
add
sbb
add
inc
add
test
add
mov
xor
dec
xchg
sub
jne
clc
lock
data16
add
add
mov
add
xchg
push
add
loopne
pop
add
jmp
pushl
add
add
add
add
inc
add
add
call
add
mov
add
addl
inc
add
push
add
sub
inc
add
add
inc
add
add
jp
add
inc
add
add
pop
adc
pushl
add
stos
movsb
add
push
les
pop
leave
or
sub
add
jne
sub
je
out
xor
cmp
add
push
add
int3
call
xchg
xchg
add
pushl
add
rcll
dec
mov
mov
dec
ret
add
add
out
adc
incl
ja
sub
dec
sub
jle
pushf
or
xor
dec
shl
cli
sbb
add
or
pop
dec
rolb
add
add
jp
stc
mov
xchg
pop
pop
sub
add
pushl
add
push
add
sti
hlt
sbb
lcall
aaa
imul
mov
dec
nop
arpl
jmp
add
addr16
add
aad
lock
add
mov
add
jle
or
add
fiaddl
add
inc
add
mov
movl
cld
test
jo
call
cmp
add
movsb
add
loop
jbe
bound
jge
add
int
add
add
add
xchg
cltd
movsb
add
sub
sti
add
decl
in
sahf
int
sarb
les
xchg
sbb
call
add
add
pushl
fisubrs
decl
cmp
add
inc
add
cld
out
lods
inc
add
decl
cmp
add
addb
mov
add
mov
pop
loope
call
fidivl
push
cli
xchg
clc
mov
add
mov
and
test
loopne
sti
les
mov
mov
or
ljmp
dec
ja
ret
add
add
nop
push
sbb
add
incl
call
pop
add
add
fisubs
roll
add
test
fs
jl
imul
or
aad
add
adc
pushl
decl
cmc
xadd
inc
add
fldenv
add
enter
arpl
ljmp
add
shl
cmp
mov
jbe
add
incl
incl
xchg
or
ret
add
incl
mov
mov
pushf
push
fimuls
loopne
out
adc
xlat
sbb
xchg
shlb
ljmp
jp
ds
pop
sbb
mov
int3
or
sbb
add
add
call
sub
loop
pop
icebp
mov
ret
cmp
pop
and
inc
add
ss
incl
add
add
addb
add
mov
sub
add
or
add
pop
in
jmp
sbb
xchg
roll
fisttpll
add
shrl
out
push
add
xchg
hlt
jmp
nop
push
xlat
and
pop
sbb
mov
add
dec
lods
out
mov
addb
jo
pushl
cmp
pop
jl
add
add
jecxz
leave
ss
lcall
mov
cwtl
imulb
aad
xchg
scas
push
add
inc
add
test
pop
faddl
ljmp
in
rolb
add
add
pushf
or
add
stos
js
mov
pop
add
or
add
fistl
mov
shl
add
out
mov
aam
add
add
pop
fildl
pop
add
ret
add
adc
add
lcall
pop
add
iret
pop
push
fildll
cmp
add
mov
mov
add
test
add
add
pop
repz
rol
add
popf
das
xchg
dec
pop
pop
add
push
add
adc
jns
bound
jmp
sbb
dec
pop
outsl
in
repnz
lcall
add
inc
add
jbe
add
call
add
fnstsw
call
push
add
lcall
mov
lret
cli
jbe
or
enter
popf
add
inc
add
pop
jns
add
push
test
xchg
cmpsl
add
mov
adc
pushl
or
in
push
movsl
add
dec
loop
arpl
call
add
inc
add
add
loopne
cmpsl
add
jmp
ljmp
mov
push
mov
cs
shll
incl
add
or
aam
xchg
xchg
aad
imul
add
ret
add
add
push
sar
lahf
push
mov
add
test
test
add
add
fs
frstor
add
cli
push
or
hlt
daa
add
incl
add
mov
stos
nop
inc
add
mov
cltd
dec
shrl
add
add
jae
in
jp
or
sub
mov
add
in
mov
add
mov
add
dec
mov
fisubrs
les
cwtl
mov
add
add
fisubl
jmp
aam
lret
jne
loopne
dec
cld
insl
pop
add
out
lods
jnp
icebp
ljmp
jnp
add
lahf
inc
add
sahf
pop
sbb
or
adc
fistpll
mov
and
call
mov
cmp
cmc
fcompl
popa
add
add
lcall
push
adc
call
jo
push
aad
loopne
mov
inc
add
mov
nop
xor
ljmp
cmp
and
add
push
add
out
push
sahf
inc
add
push
add
sub
add
test
pushf
adc
jb
jmp
pushl
mov
clc
and
lcall
je
add
mov
add
jle
sub
test
pop
mov
inc
add
shrb
cs
negl
fcmovnu
mov
jmp
xchg
bound
inc
add
mov
mov
lahf
or
popf
mov
or
add
sub
addl
sti
jnp
xlat
pop
add
jno
jmp
add
add
les
ss
and
jmp
add
sub
add
insb
lods
inc
add
sbb
add
fnstenv
daa
add
imul
add
add
add
mov
jmp
add
call
mulb
ljmp
mov
cmp
jbe
inc
add
add
dec
cmp
and
decl
ljmp
loop
lock
lahf
xor
call
push
xor
sub
decl
add
add
push
add
xchg
or
cmp
add
lea
pushl
add
movl
addl
add
add
pop
rcrl
pop
pop
add
nop
aaa
pop
mov
testl
pop
jno
ljmp
add
jp
mov
jmp
add
addr16
mov
mov
add
fnstsw
add
or
mov
add
roll
popa
add
push
add
jnp
or
std
jne
push
pop
inc
add
pushl
push
nop
push
add
jmp
add
aaa
incl
add
and
call
add
push
add
aas
xor
add
pop
hlt
dec
and
decl
dec
jge
add
test
jne
push
mov
add
sbb
and
call
test
jbe
add
xchg
xor
sbb
add
dec
icebp
mov
movb
add
shlb
pushl
xor
jmp
add
push
add
rolb
add
stc
lret
mov
ljmp
push
add
roll
notl
add
test
dec
imul
call
mov
fwait
addl
or
ljmp
mov
push
add
mov
cmp
pop
test
movl
jmp
and
decl
cs
add
mov
adc
jp
scas
xlat
js
add
jmp
add
jmp
addl
jge
dec
daa
add
add
cmc
or
mov
cld
jns
add
pop
mov
lcall
xlat
or
dec
jmp
add
call
jle
push
int
add
pop
addb
add
clc
or
mov
jb
call
clc
pop
mov
les
or
ss
add
xor
lcall
add
popa
add
mov
add
add
dec
call
pop
add
lcall
add
mov
decl
mov
pop
decl
jmp
add
add
add
cld
iret
pop
aas
nop
lds
mov
add
xchg
outsl
mov
jae
cli
push
shll
add
pusha
add
mov
in
push
add
add
cli
mov
xor
incl
add
add
shlb
call
insl
mov
ljmp
add
enter
insb
movb
sub
lds
jge
cltd
and
pushl
add
add
loopne
popf
ret
add
mov
or
call
add
add
insl
popa
add
adc
fists
add
add
jb
incl
out
enter
inc
add
add
xor
push
add
jb
jmp
jbe
adc
ljmp
xchg
adc
push
sbb
add
sub
mov
pushl
add
mov
mov
imul
adc
dec
aaa
and
inc
add
inc
add
mov
add
cmp
add
sub
xchg
cmp
add
add
stos
popl
lcall
or
fadd
add
cmp
jmp
add
or
and
call
dec
adc
cmp
xor
decl
arpl
call
lock
inc
add
xor
jmp
add
movl
jg
rcrl
adc
push
lcall
pop
or
jmp
add
sbb
jnp
add
addb
add
inc
add
lret
mov
decl
in
mov
add
sbb
outsl
sbb
inc
add
mov
jo
call
ljmp
jmp
push
jae
ljmp
insb
inc
add
or
mov
cld
jns
add
inc
add
bound
lcall
cmp
add
xor
push
lods
cmp
imul
add
add
out
adc
decl
xchg
add
ljmp
add
out
push
xor
decl
call
jb,pn
incl
add
push
add
repnz
sbb
add
pop
pop
outsb
mov
mov
or
add
dec
jmp
add
addr16
add
jnp
add
sbb
movsl
add
dec
data16
push
nop
sub
incl
add
std
sahf
fistl
push
fcompl
dec
add
decl
pop
jns
or
mov
cld
sbb
mov
imul
call
add
cmpsl
add
xor
push
stos
sub
xchg
outsb
jle
ds
add
jns
add
shrb
movl
inc
add
out
pop
btr
fs
add
jns
clc
pop
out
aaa
sbb
add
ja
add
scas
mov
push
dec
pushf
scas
movsl
add
aaa
push
add
xor
loope
xchg
jecxz
pop
push
add
popa
add
add
add
les
shr
test
aad
leave
jno
incl
pushl
add
decl
add
repz
das
cmp
lods
jae
lcall
mov
cmp
pop
dec
pushf
adc
sbb
add
add
add
lcall
push
add
shl
add
movb
add
fwait
mov
jnp
imul
insb
inc
add
add
nop
mov
out
sbb
loopne
loop
mov
jmp
push
sub
and
call
mov
mov
stc
inc
add
les
adc
call
add
sbb
rolb
incl
pushl
sbb
cmpsl
add
add
enter
add
into
push
xor
aad
add
mov
inc
add
call
add
add
jo
ljmp
add
test
inc
add
fldl
add
lds
push
add
repz
add
push
sahf
std
cmp
lea
add
out
pusha
add
adc
jp
in
loopne
scas
xchg
pop
cmp
sahf
and
aam
add
dec
jecxz
rolb
adc
decl
jge
cld
add
lcall
mov
add
push
dec
jle
jge
add
pop
stos
in
les
movsb
add
roll
lea
add
jo
decl
push
jnp
sbb
lds
adc
add
fisubs
add
lds
shr
and
or
push
scas
mov
jne
add
add
mov
dec
or
mov
pop
add
xor
ljmp
adc
roll
add
out
add
mov
push
add
lock
stc
and
lcall
pop
clc
sbb
add
adc
sti
push
add
add
add
mov
dec
in
out
popf
imul
add
call
and
decl
ficoms
loope
pusha
add
adc
incl
cmp
push
mov
push
add
or
push
add
or
lcall
scas
or
add
mov
stos
or
test
addb
jecxz
cmp
test
aaa
jo
pushl
add
repz
cmp
jge
lock
xor
cmp
test
incl
aam
bound
lcall
int
add
aad
add
popf
lods
sbb
pushl
nop
pop
je
rep
stos
pop
adc
cmpsl
add
push
popf
jge
or
xor
or
cmpsb
add
add
imul
cmp
add
lock
mov
push
test
addl
fstpl
leave
out
popa
add
je
add
adc
jmp
mov
add
lods
add
xchg
mov
into
int3
int
cltd
lret
imul
rcrb
dec
rolb
sbb
pop
pop
int3
cltd
jno
push
out
xchg
mov
imul
add
add
jge
lea
inc
add
pushf
test
inc
add
sub
rolb
add
mov
decl
pushf
movsl
add
or
add
stos
clc
sub
add
pusha
add
hlt
aaa
pop
cmp
inc
add
mov
sbb
ds
les
jno
lcall
pop
xor
mov
sahf
movsl
add
add
idivl
jp
sbb
add
add
or
add
out
jbe
add
icebp
and
cmp
pop
sub
add
call
loope
movb
out
ret
pop
test
sahf
xchg
ret
add
fidivrs
mov
add
div
add
add
add
int
add
and
call
cwtl
into
ret
add
add
add
insl
pop
outsb
jmp
add
mov
add
add
imul
or
add
mov
add
scas
arpl
decl
inc
add
xor
lcall
in
iret
fcmovbe
mov
add
insl
lds
pop
enter
dec
out
shrl
lds
xchg
jmp
mov
imul
jg
jl
add
add
or
add
or
mov
outsl
or
add
out
or
and
pushl
mov
pop
mov
incl
add
out
add
fiaddl
add
repnz
mov
test
add
in
xor
incl
add
sti
popa
add
rcrb
xchg
xchg
cmp
add
pushl
lds
lahf
addl
add
lcall
or
ret
pop
arpl
jmp
decl
addl
xchg
jnp
xor
jnp
or
imul
sub
pop
add
fwait
addl
push
add
dec
int3
in
inc
add
lock
sti
fsubrs
cli
cs
pushf
inc
add
sub
mov
sub
adc
fsubs
rcrl
movsb
add
ja
cmp
in
in
adc
call
inc
add
push
pop
pop
push
xchg
lahf
add
decl
xor
dec
adc
jmp
decl
jle
add
and
lcall
shll
lcall
add
fwait
out
or
out
data16
add
inc
add
std
popf
fidivs
add
add
add
push
flds
decl
add
aaa
lahf
sbb
and
pushl
add
das
mov
add
jecxz
push
push
add
push
push
call
decl
add
rorl
sub
add
mov
cwtl
inc
add
cld
mov
cmp
add
roll
add
xor
decl
mov
mov
add
ljmp
cmc
std
pushf
das
addl
rclb
decl
add
cmpsb
add
insl
or
add
fcom
xor
add
or
mov
sbb
sarl
fcomps
add
add
insb
ljmp
mov
ret
add
cmpsl
add
add
cwtl
mov
add
jmp
add
les
repz
mov
data16
add
adc
incl
add
je
out
hlt
test
insb
repz
lret
test
sahf
int3
popa
add
adc
lcall
add
add
add
push
add
jmp
add
push
addl
addl
inc
add
push
cmc
in
add
pushl
lcall
pop
scas
loopne
mov
xchg
xchg
adc
jmp
add
dec
mov
add
jmp
scas
push
xchg
dec
xor
mov
cmpsb
add
add
lcall
push
add
xor
add
dec
jne
mov
int3
add
push
add
mov
add
arpl
lcall
fcom
xchg
out
mov
scas
insb
ss
add
sbb
lock
lods
push
add
lods
out
sbb
add
clc
sub
add
mov
add
fwait
imul
mov
mov
and
lcall
fcompl
add
movsb
add
push
add
inc
add
xor
ljmp
or
loop
sbb
add
cmp
add
adc
add
mov
into
in
and
lea
fsubrl
ret
jl
add
addb
add
sbb
jmp
addl
add
lahf
jg
cmp
pop
push
push
add
daa
add
sub
movl
idivl
jnp
add
xchg
fnstenv
cld
adc
lcall
pop
out
jecxz
inc
add
add
incl
mov
add
das
push
cmp
incl
ljmp
popa
add
adc
incl
cmc
dec
outsb
outsl
int3
mov
call
loop
cltd
dec
jns
jmp
dec
fsubrl
mov
cmp
add
push
add
add
xchg
mov
add
cs
neg
leave
test
mov
add
add
add
mov
add
jle
ds
mov
push
xor
call
dec
std
pop
pop
jmp
mov
add
and
xchg
dec
stos
lds
std
leave
fisttps
hlt
add
add
ljmp
mov
pushl
add
fisttps
in
scas
shrb
daa
add
pop
xchg
pop
dec
int3
adc
dec
mov
add
push
mov
test
ljmp
ljmp
add
aas
int
xchg
je
add
pop
insl
pop
add
call
pop
adc
pushl
add
leave
ja
add
add
pop
push
push
shll
iret
adc
mov
xor
cli
in
inc
add
mov
add
in
xchg
lods
mov
mov
leave
inc
add
pushf
xor
sub
add
imulb
repnz
or
imul
lcall
dec
cmp
add
xchg
cmp
in
and
fnstcw
add
cltd
add
cmp
roll
add
jmp
dec
mov
mov
xor
jmp
jmp
add
repnz
sbb
push
add
mov
add
into
jmp
sub
cmpsb
add
sub
add
add
ja
mov
and
jnp
add
mov
rolb
add
stos
mov
add
jp
test
add
xlat
add
inc
add
incl
and
cmp
jbe
add
call
aaa
xor
call
dec
jnp
jl
xchg
in
cltd
test
push
add
fildll
icebp
getsec
push
nop
lds
dec
jg
or
jmp
sub
xchg
push
add
add
repnz
sbb
and
jle
movb
nop
sbb
stc
out
test
pushf
sub
sub
adc
pushl
add
call
nop
rol
add
add
sbb
icebp
ds
data16
lea
movb
add
and
jnp
fdivl
call
call
addl
add
add
or
sub
sub
add
fsub
add
jmp
push
sub
lret
iret
inc
add
push
call
push
repnz
xchg
sbb
pop
rclb
add
jnp
add
mov
in
rcll
lcall
roll
jno
call
movsb
add
sbb
add
sbb
out
mov
popa
add
or
adc
call
dec
mov
mov
add
add
nop
int3
rolb
add
rolb
add
lods
mov
movl
lock
cli
or
push
test
add
int3
aad
push
add
scas
sbb
pushl
mov
xchg
addl
addl
nop
addl
lcall
insb
mov
fmul
cmp
fsubs
add
dec
fstl
push
lods
repz
pushl
inc
add
sti
push
add
push
in
mov
scas
push
cli
outsl
rclb
out
and
jmp
add
fwait
pop
lahf
rolb
xlat
xchg
cmpsl
add
add
out
sub
ret
add
add
sti
jmp
mov
add
dec
pop
add
xchg
dec
sub
pusha
add
cmpsb
add
add
push
add
inc
add
or
nop
test
jnp
jle
jo
add
add
add
add
add
lods
push
test
negl
add
pop
dec
mov
fwait
addl
add
add
call
addb
fnstenv
add
mov
add
int3
mov
add
pop
inc
add
jae
jg
add
ljmp
add
popf
test
add
add
add
ret
sub
outsb
xor
incl
addb
push
push
push
add
and
decl
mov
cmp
call
push
cmc
popf
les
mov
add
icebp
lret
pop
adc
fmuls
mov
dec
mov
add
loopne
sub
jmp
add
incl
add
fisttpl
out
fisubl
dec
add
jmp
add
movb
or
lea
sarl
xor
ljmp
nop
popf
jg
add
jmp
incl
add
pop
popf
jbe
call
mov
add
aam
pop
add
stos
mov
sti
cmp
scas
cmp
sbb
and
cwtl
lods
or
je
add
jl
add
fmull
stc
data16
pop
xchg
or
in
sbb
inc
add
mov
add
and
std
pop
add
stos
xchg
mov
iret
mov
add
pop
aaa
push
pmulhuw
loope
repnz
add
push
push
add
jmp
or
add
clc
negl
add
add
les
ljmp
add
pushl
sti
loopne
push
dec
jno
jmp
add
pop
outsl
dec
adc
lcall
push
add
decl
add
addb
push
bound
jle
and
aas
fisttpl
add
add
shrl
pop
leave
movsl
add
fadds
mov
mov
pushl
add
dec
scas
jge
pop
lods
ret
add
daa
add
in
and
ljmp
add
enter
in
into
xor
jns
mov
pushf
or
xchg
lods
inc
add
or
cwtl
mov
je
int
add
inc
add
jmp
add
sbb
add
rolb
icebp
dec
jmp
aad
pop
add
add
lock
mov
add
mov
sub
push
inc
add
and
sti
jne
popa
add
ret
int
add
inc
add
adc
decl
fsubrp
outsl
adc
lcall
aad
cmpsb
add
stc
addb
mov
inc
add
and
push
das
add
jmp
or
cmp
add
pop
add
sub
incl
add
icebp
les
xor
jmp
add
add
arpl
lcall
pop
data16
cmpsb
add
test
push
pop
xchg
fistpll
add
add
add
dec
push
lret
sbb
mov
xor
dec
xor
decl
pop
push
add
inc
add
inc
add
mov
decl
add
dec
mov
scas
mov
add
out
cwtl
adc
decl
cld
icebp
xchg
add
jge
inc
add
sub
test
sbb
jl
add
push
mov
mov
add
ljmp
add
ljmp
and
fnstsw
inc
add
and
push
xor
lcall
pop
in
movl
push
icebp
popl
aad
pop
dec
lcall
and
xchg
int3
clc
pop
int
add
jp
nop
adc
call
call
pushl
jl
cmp
rolb
add
add
add
fldcw
dec
add
call
daa
add
mov
ljmp
sbb
add
mov
rol
add
mov
add
sbb
jmp
lret
add
jmp
decl
cmp
push
add
pop
push
add
mov
add
jmp
push
add
call
add
test
addl
in
es
and
call
add
add
inc
add
jg
pop
sbb
sahf
jbe
add
mov
add
push
dec
loope
lret
inc
add
cmp
lcall
inc
add
jp
jl
ret
mov
arpl
decl
pop
in
xchg
icebp
xor
fbld
call
iret
ror
xor
roll
add
mov
decl
mov
add
lret
sbb
insb
sbb
add
pop
ror
sbb
rcrl
loopne
pop
fdivrl
sub
imul
mov
add
add
add
add
jmp
stos
mov
push
lret
jg
dec
in
jmp
loopne
sti
inc
add
jno
incl
out
addl
add
cmc
mov
repnz
fstps
jo,pn
lcall
push
add
pop
cs
scas
jl
mov
add
stos
mov
xor
jge
mov
loop
pusha
add
in
pushf
jecxz
push
movsb
add
add
addb
add
lds
sub
sbb
pop
cmp
sub
jmp
add
leave
dec
repz
inc
add
cwtl
fmul
cmc
out
cmp
nop
sub
xchg
sbb
xchg
je
enter
lcall
add
lcall
add
negb
iret
xchg
ja
add
push
add
dec
in
jne
test
xchg
mov
lret
inc
add
out
addl
or
add
call
incl
mov
fimuls
add
push
jecxz
mov
add
pop
ljmp
add
jecxz
push
add
call
add
jg
xchg
xchg
add
add
push
movsb
add
lds
outsb
pop
dec
ljmp
addl
push
rolb
xchg
insb
cli
push
adc
decl
add
ret
add
icebp
je
jecxz
mov
xchg
dec
sbb
adc
jle
push
dec
enter
repz
incl
jns
add
adc
push
lret
and
add
imul
or
mov
add
pushl
cmp
mov
adc
test
ss
and
jp
mov
lock
in
pop
and
call
test
add
jp
fwait
insl
push
mov
mov
add
inc
add
les
adc
out
fidivrs
sbb
test
push
add
ljmp
add
movb
jmp
push
popf
lcall
and
pushl
shlb
js
mov
cmp
add
rcll
adc
decl
add
addb
add
pop
lcall
daa
add
cld
ds
jp
rolb
mov
loop
add
mov
inc
add
leave
pusha
add
pop
dec
or
add
pushf
out
xor
jp
add
incl
push
cmp
jmp
add
incl
mov
enter
add
ret
add
pushl
outsl
jo
mov
mov
jo
stc
push
addb
add
add
mov
push
out
fidivrs
sub
jae
mov
push
add
adc
incl
jbe
and
inc
add
jo
pushl
jg
add
nop
inc
add
roll
sar
mov
add
arpl
jle
test
lret
add
stc
movl
add
mov
jne
xchg
mov
add
movsl
add
pop
sbb
testl
add
loopne
pop
push
add
xchg
push
add
pusha
add
or
add
ljmp
add
add
add
and
insb
jl
add
stos
xor
decl
mov
dec
lea
movb
sahf
add
decl
sbb
and
sub
xchg
fsubrl
add
inc
add
mov
test
dec
xor
push
mov
adc
pushl
add
xchg
xor
sti
fsubrs
fnsave
sbb
add
icebp
xchg
lahf
inc
add
dec
aad
cmp
add
aad
lret
sbb
xchg
mov
jmp
add
es
or
push
repz
push
cmpsl
add
or
decl
test
or
jge
lods
std
mov
inc
add
and
pushl
adc
dec
lods
lock
pushl
jnp
bound
jmp
add
stos
xchg
adc
decl
pop
loope
cmp
push
add
jbe
add
inc
add
jno
jmp
add
lcall
test
dec
push
adc
aas
and
lcall
add
mull
add
in
sub
cwtl
imul
inc
add
jg
lods
sub
mov
xchg
jl
in
sbb
xchg
inc
add
inc
add
sbb
aad
cmpsb
add
decl
add
addl
pushl
sbb
test
jl
lahf
xor
ljmp
add
addb
addl
data16
cmpsl
add
xchg
pop
fs
jno
push
imul
into
add
jg
mov
inc
add
dec
add
fldenv
add
ljmp
add
lret
and
lcall
add
xor
sub
loope
mov
daa
add
pop
add
ljmp
mov
add
inc
add
addl
stos
in
sub
jle
add
ljmp
adc
pushl
dec
jp
add
cli
dec
xchg
mov
ror
cltd
sbb
mov
ret
dec
loopne
push
xor
jmp
cmp
ds
add
mov
add
add
add
add
movl
lock
dec
xchg
xor
dec
ljmp
add
cmp
lods
in
sub
call
add
pop
dec
lods
iret
mov
add
add
incl
cld
mov
dec
ljmp
add
or
add
scas
mov
add
add
outsl
icebp
movb
add
in
aad
pop
lds
mov
enter
pop
add
insb
add
decl
add
pop
sub
mov
add
xor
push
add
add
sti
test
jl
decb
rorl
jnp
push
add
cmp
push
add
add
js
jl
lods
stc
movl
inc
add
test
mov
jmp
ljmp
add
add
lcall
popf
mov
add
pop
fidivrl
clc
jg
add
add
mov
in
sti
outsb
js
add
incl
mov
hlt
xchg
daa
add
dec
addb
or
fisttpl
add
roll
add
aad
add
mov
dec
ss
js
add
or
add
push
mov
add
cltd
popa
add
sti
aas
dec
jle
xchg
jle
add
and
movsb
add
jl
shlb
pushf
notl
add
in
into
lea
add
jbe
add
lcall
aas
dec
mov
push
push
add
push
aam
add
in
lret
fwait
pop
cmp
call
add
cmc
push
jp
ret
add
sbb
out
lods
in
mov
dec
jg
and
sbb
add
fdivrs
xchg
jle
cli
adc
lds
push
sbb
je
enter
jb
pushl
add
sub
jl
cltd
mov
int3
pop
add
mov
stos
enter
mov
add
popf
enter
mov
ljmp
push
push
pop
clc
enter
push
clc
inc
add
into
rcrb
add
mov
stc
pop
add
call
scas
and
push
lret
inc
add
int3
jbe
xor
sbb
pop
push
xchg
movsb
add
add
call
adc
lcall
xchg
dec
sahf
cmp
push
add
push
add
fldt
and
jmp
aas
rolb
cmp
pop
cmpsl
add
aas
loope
or
jg
cmp
jne
add
pushl
call
rolb
stc
std
and
ljmp
repz
mov
mov
mov
addb
cwtl
loop
les
lods
insb
out
push
stos
lds
repnz
popf
push
jle
add
cwtl
cmpsl
add
add
movl
add
xchg
mov
popf
push
jecxz
pop
jnp
add
add
add
clc
push
notl
ret
add
mov
cmp
xor
push
shr
ret
add
or
xlat
fistpll
lret
mov
add
cmp
add
pop
cli
leave
or
add
jp
add
scas
mov
adc
ljmp
cmp
add
dec
xchg
fildll
int3
mov
add
adc
lcall
add
sbb
pushl
add
pop
pop
mov
call
pop
mov
cwtl
fdivr
mov
add
mov
and
mov
sbb
inc
add
add
dec
adc
std
xor
aas
push
test
mov
sbb
add
add
add
addl
add
imulb
cmp
incl
in
sbb
add
jbe
cmpsl
add
and
jmp
mov
mov
add
mov
add
aas
sahf
cmpsb
add
xchg
mov
add
add
and
push
push
test
addl
addl
add
add
or
repz
mov
int
and
inc
add
jge
sbb
add
mov
pop
mov
jl
addb
add
stos
mov
add
fs
loopne
jmp
add
add
incl
add
add
sub
and
and
cmp
add
or
mov
dec
in
jbe
add
les
add
scas
imul
sub
add
mov
add
add
sbb
leave
jns
dec
test
fdivp
aas
addb
jp
dec
adc
ljmp
sub
add
js
mov
and
call
cmpsl
add
fistl
shr
and
jmp
add
sbb
jae
pushl
dec
daa
add
add
insl
mov
and
jmp
pop
out
cmpsb
add
pushf
mov
in
fisubrs
and
mov
add
inc
add
add
or
movb
add
sub
xlat
or
add
push
in
clc
add
lcall
push
add
out
pop
add
mov
rolb
jge
repnz
jmp
add
flds
inc
add
mov
push
add
adc
cmp
add
inc
add
add
insl
rcrl
mov
xor
add
ret
push
mov
fdivs
add
cwtl
out
ret
add
addb
jge
jbe
mov
out
shrl
xchg
dec
sub
testl
add
mov
push
push
add
sbb
pushf
iret
repz
imul
mov
insl
clc
mov
pop
shlb
add
popa
add
loop
mov
lods
inc
add
mul
add
stc
sbb
jns
add
add
mov
add
inc
add
mov
add
add
add
call
xchg
cmp
add
jle
in
lods
mov
add
cmp
inc
add
lcall
fdivr
mov
cmpsl
add
add
movl
incl
add
mov
mov
add
jno
call
decl
pop
shlb
ljmp
call
addl
add
adc
inc
add
mov
out
lock
or
insl
addl
jns
add
lcall
push
pop
sarb
add
stos
add
jmp
add
mov
cmp
add
pop
fidivs
pushl
icebp
lret
add
imul
add
add
ljmp
lds
and
ret
add
add
cmp
cmp
inc
add
add
shlb
add
adc
call
push
add
out
rclb
mov
mov
addl
add
pop
fisttpll
mov
add
test
xchg
stc
add
dec
push
lds
xchg
push
call
jmp
mov
mov
enter
and
in
mov
loop
push
movl
add
jbe
and
dec
nop
aam
add
add
or
leave
int3
pop
in
lock
ret
jns
inc
add
add
jl
cltd
stos
lods
std
cmp
mov
jbe
add
lret
jle
jno
lcall
add
outsl
jno
push
stos
cmpsb
add
pushl
push
enter
lahf
add
incl
sbb
xor
jmp
lds
cmp
ret
add
add
xchg
rolb
add
es
add
xor
inc
add
lcall
xor
add
xor
ljmp
jbe
inc
add
addr16
in
push
add
push
pop
mov
add
adc
jmp
add
or
incl
add
int
addl
call
add
clc
sub
divb
test
add
jnp
or
mov
pop
xor
add
loop
inc
add
leave
addb
add
pusha
add
dec
inc
add
sub
xchg
push
fistpll
add
imul
jmp
add
dec
stos
ljmp
add
notl
xlat
roll
xchg
xchg
xchg
hlt
jmp
mov
add
inc
add
iret
iret
add
add
cmp
add
push
stos
and
jmp
add
jnp
adc
decl
add
add
imul
or
add
add
pushl
add
incl
add
repnz
push
stos
cmp
sahf
mov
imul
push
in
sbb
movsl
add
lcall
jbe
add
lret
xor
decl
addl
lret
xchg
insb
out
ret
mov
inc
add
pop
xchg
sbb
add
lcall
call
pop
jns
add
xchg
lds
faddl
lret
int
mov
mov
data16
stos
pop
inc
add
adc
ljmp
push
add
mov
rcl
xchg
mov
add
mov
add
dec
outsl
jno
std
aad
scas
test
dec
test
lret
test
shll
sub
add
dec
test
imul
or
add
ret
add
aaa
cld
mov
inc
add
fnsave
ljmp
mov
adc
lcall
push
add
jno
out
fstps
addb
mov
add
dec
jmp
add
and
or
push
cmp
popf
jp
out
adc
add
sub
imul
or
add
dec
int
add
dec
add
call
jo
incl
mov
movl
inc
add
add
jle
adc
lcall
pop
rcrl
int
ret
add
ja
stos
in
int
add
adc
ljmp
push
dec
mov
insb
cmova
jmp
mov
add
in
arpl
jmp
add
repz
xchg
or
add
add
pop
pop
xor
call
call
ljmp
call
ret
add
repz
in
loopne
leave
addb
and
dec
lods
cwtl
lea
or
jp
add
stos
in
movsb
add
mov
add
sub
add
incl
add
add
call
add
add
popa
add
loopne
add
incl
add
std
adc
pushl
add
push
mov
mov
cs
add
lcall
add
add
add
add
xchg
mov
dec
mov
outsl
mov
add
cmp
cmp
add
pop
bound
push
imul
mov
add
add
add
rcr
xchg
icebp
aad
add
add
in
inc
add
mov
insb
add
pushl
add
lret
outsl
pop
addl
mov
push
adc
addb
loopne
aam
add
mov
and
lcall
add
fldenv
cmp
add
incl
cmp
addl
add
repz
add
nop
in
in
sti
cmpsb
add
leave
addb
adc
incl
add
and
pushl
lcall
cwtl
adc
pushl
add
add
push
push
dec
std
xchg
cld
sbb
sub
add
jmp
rolb
repz
sahf
in
scas
lret
add
pop
nop
mov
or
pusha
add
daa
add
xchg
das
bound
incl
je
lret
cmpsb
add
dec
mov
pop
mov
in
xchg
push
fldt
fldenv
jmp
sub
dec
fstps
jmp
add
lcall
pushl
int3
out
mov
or
pop
mov
mov
iret
jge
add
dec
dec
test
add
add
sub
cmp
shl
add
in
add
into
cmc
jmp
add
fwait
mov
adc
or
dec
inc
add
ja
xor
ljmp
add
cmpsb
add
jmp
ljmp
out
leave
daa
add
sub
add
shr
and
incl
pop
fwait
xchg
mov
dec
and
lcall
lahf
out
mov
jle
loope
and
cmp
mov
add
pop
and
dec
jno
lcall
mov
add
lcall
in
lret
pop
cld
aas
mov
movsl
add
lahf
daa
add
bound
call
ds
mov
and
das
cmp
aad
dec
int3
pop
push
bound
decl
sub
out
in
sti
mov
add
jb
fdivp
clc
out
or
add
daa
add
cmpsl
add
decl
add
add
dec
insb
outsl
cmp
jmp
xchg
lret
add
out
mov
add
jp
add
mov
pop
xchg
aad
add
push
add
mov
add
add
outsl
jecxz
cmp
lods
adc
push
push
add
in
clc
push
add
add
jmp
add
fstps
add
in
lret
jmp
mov
js
or
imul
sub
aad
scas
lret
push
add
ljmp
mov
pop
rclb
roll
sbb
sahf
pop
data16
scas
cmp
lcall
add
jmp
add
jb
dec
add
jns
movsb
add
add
mov
add
data16
add
xchg
push
add
repz
and
ljmp
in
jb
incl
add
pusha
add
add
movsl
add
in
mov
lcall
push
add
xor
jb
ljmp
add
clc
addr16
add
add
arpl
pushl
add
addl
loope
xchg
sub
negb
inc
add
popl
incl
loope,pt
pop
mov
data16
rolb
sbb
add
cmpsl
add
cmp
add
add
popf
int3
sbb
add
icebp
xchg
int
add
adc
add
in
mov
add
mov
mov
add
shll
jle
add
dec
fidivl
cmp
add
lcall
add
cmp
add
dec
aam
push
mov
loope
jno
incl
add
xchg
mov
push
testl
xor
mov
add
cmp
loopne
pusha
add
mov
sbb
pop
push
add
faddl
incl
cmc
pop
xchg
or
pop
sub
add
add
sti
mov
inc
add
adc
dec
movsl
add
sub
add
roll
add
dec
mov
add
lret
push
dec
push
ret
and
decl
add
xchg
sbb
add
add
dec
xchg
dec
mov
clc
enter
iret
ret
test
add
addl
mov
les
mov
cwtl
and
incl
or
call
mov
loope
mov
ss
add
or
mov
pushl
add
mov
xor
dec
rolb
jmp
push
add
add
ret
add
add
arpl
lcall
xchg
fdivr
scas
insl
lret
cli
add
into
lds
jns
add
sbb
add
test
adc
dec
stc
xor
decl
fisttpl
xchg
and
ljmp
and
pushl
int
add
pusha
add
add
js
psadbw
add
stos
rorl
testl
pushl
add
add
fs
movb
adc
inc
add
add
loope
mov
add
testb
adc
pushl
push
xchg
pop
addb
je
add
nop
add
call
xor
call
jns
add
add
xchg
cmp
add
pushl
out
fdivp
add
jmp
add
pop
aad
add
dec
gs
mov
add
sbb
add
and
jmp
out
inc
add
add
add
addl
jle
jne
dec
ja
add
clc
insb
add
cmp
add
add
pop
xlat
pop
mov
adc
inc
add
add
cmpsl
add
add
les
pop
cmpsb
add
push
add
decl
add
add
jmp
call
ds
mov
add
add
add
dec
in
cmp
sti
inc
add
imul
bound
dec
lds
pop
dec
inc
add
stos
sub
lret
arpl
ljmp
and
mov
insb
addl
lcall
incl
filds
xor
pushl
xchg
pop
jo
call
dec
pop
adc
lcall
mov
decl
addl
cwtl
lret
add
add
add
ss
negb
cli
imul
inc
add
add
push
movsb
add
cmc
call
mov
cmp
loopne
adc
call
jmp
add
les
push
add
sub
add
repnz
int
pusha
add
jo
lcall
fadd
add
mov
sub
xchg
push
add
ds
pop
out
or
xor
lcall
int
sbb
add
cmc
nop
fdivrs
xor
repz
jmp
add
add
scas
test
xchg
addb
cmp
add
sar
mov
jle
add
jmp
add
inc
add
rorl
add
aas
add
add
cwtl
cltd
or
test
into
or
fwait
scas
push
je
xchg
movb
add
add
lds
test
pop
add
ret
add
lock
incl
add
mov
stos
mov
cmp
add
hlt
push
or
incl
add
adc
decl
add
jp
pop
jle
xor
jmp
add
add
jecxz
movsb
add
mov
add
shrb
movsl
add
pop
addl
mov
fwait
dec
pop
data16
add
lret
and
lcall
add
add
insl
arpl
push
cli
lds
or
mov
inc
add
add
push
roll
sbb
daa
add
xor
add
test
test
mov
add
pop
mov
lret
and
call
add
ss
insb
lock
lcall
pop
rcl
or
and
and
fisubrs
mov
fiaddl
add
fdivp
loop
outsl
mov
inc
add
mov
add
xchg
mov
test
add
dec
into
cld
test
sub
add
movsb
add
add
mov
call
add
decl
fnstenv
sub
add
popa
add
das
pop
push
add
test
aam
fstpt
add
into
jmp
sub
add
test
adc
pop
mov
movl
incl
add
jae
ljmp
pop
mov
add
pop
cld
fwait
pop
mov
add
mov
int3
mov
inc
add
push
cwtl
dec
sbb
and
stc
addb
jmp
sub
aad
sbb
gs
pop
sub
icebp
mov
inc
add
mov
dec
sbb
mov
add
add
sub
jp
or
aaa
cmp
add
imul
mov
jmp
add
xor
decl
lcall
aas
sub
fildll
add
in
cld
arpl
lcall
sahf
xchg
inc
add
testb
inc
add
mov
popf
pop
push
add
ljmp
pop
push
add
lcall
addb
inc
add
clc
repz
cli
addr16
and
inc
add
loopne
roll
add
or
aad
mov
lret
sub
add
add
adc
cli
add
js
cmp
add
mov
rolb
add
popa
add
xor
ljmp
loope
or
pop
inc
add
push
add
and
call
ret
out
xorps
add
pushf
outsl
pop
pusha
add
in
xchg
jb
pushl
add
lret
pop
lcall
jns
mov
cmp
push
addb
add
push
add
push
add
inc
add
sub
popa
add
lret
in
push
sahf
mov
sbb
add
inc
add
push
sub
add
popf
lock
incl
mov
add
add
test
pushl
add
mov
imul
add
rolb
pop
and
lcall
clc
movl
push
leave
mov
push
xchg
push
dec
lods
or
movsl
add
lahf
dec
int
or
add
push
add
call
ljmp
add
sub
add
xchg
mov
cmp
cmp
movsb
add
cmp
add
incl
incl
add
lods
ret
popf
dec
push
xchg
sbb
adc
lcall
jne
test
add
and
movb
add
add
mov
mov
cmp
jge
xchg
nop
flds
add
mov
pusha
add
outsl
jbe
add
stc
fimuls
loopne
or
js
pop
or
pop
jae
dec
pop
mov
xchg
pop
adc
cmp
add
mov
call
dec
incl
roll
jnp
jbe
repnz
or
addl
int
add
sbb
inc
add
out
in
idivb
pop
lds
sbb
jp
ret
add
setne
push
in
aas
dec
push
pop
xchg
mov
cmp
mov
in
pop
sbb
push
push
add
ljmp
cmp
fdivr
dec
lds
sbb
add
bound
call
sbb
pushl
incl
add
mov
add
xchg
inc
add
out
popf
movb
sbb
imul
pusha
add
or
xlat
in
dec
mov
incl
fisttps
gs
add
in
movb
pop
lret
xor
decl
fwait
add
dec
mov
add
in
mov
inc
add
add
add
push
stos
mov
iret
ljmp
inc
add
das
xor
cld
cltd
push
and
outsl
jae
lcall
add
stos
push
add
lea
push
movb
add
fidivrl
ljmp
mov
add
sub
scas
addl
dec
cmp
mov
dec
arpl
call
add
incl
dec
cmp
sahf
dec
add
push
pusha
add
test
mov
lods
movsl
add
mov
add
jo
inc
add
fwait
js
add
inc
add
inc
add
add
test
adc
mov
das
cs
incl
add
addl
clc
das
mov
add
jecxz
and
call
ljmp
lods
push
add
pavgb
push
add
int
es
aaa
fisttps
notb
data16
call
stc
mov
enter
add
out
dec
in
pop
stos
xor
add
repnz
mov
jge
aas
movsl
add
sbb
xor
jmp
bnd
pop
add
jb
ljmp
add
lock
add
xchg
adc
ljmp
rcl
jns
push
and
ljmp
cmp
add
inc
add
mov
std
fildll
adc
aas
fcom
xchg
cmp
add
mov
add
sti
dec
fs
mov
pop
pop
mov
add
add
jg
add
aam
add
das
or
add
lods
and
call
ljmp
inc
add
or
movsb
add
sub
repnz
dec
cs
pop
addl
dec
jmp
add
fisttps
ret
add
mov
or
sahf
bound
incl
add
int
and
ljmp
mov
insl
movsl
add
stos
rolb
cs
add
mov
add
xchg
and
pushl
pushl
jmp
xlat
adc
ljmp
sbb
add
adc
pushl
add
in
mov
mov
jmp
add
add
rolb
add
pushl
add
mov
arpl
decl
adc
mov
add
add
push
add
mov
pop
test
add
add
dec
add
ljmp
mov
fildll
lock
xor
mov
xchg
cmp
add
addr16
jne
add
add
test
int
or
add
sbb
popa
add
inc
add
push
add
add
rolb
hlt
pop
jno
incl
add
add
add
inc
add
sbb
add
stos
and
lcall
mov
add
nop
inc
add
push
add
out
push
and
decl
js
add
jmp
xor
ljmp
push
add
add
pop
sbb
movsb
add
sar
daa
add
pushl
sbb
add
xor
call
fsubl
pop
out
mov
cmp
iret
add
pushl
cmp
jmp
add
incl
or
cli
jns
add
dec
and
call
call
scas
shll
movsl
add
add
push
mov
popa
add
add
mov
xchg
data16
add
mov
xchg
cs
ret
add
lods
ljmp
add
xor
incl
cmp
movsl
add
cwtl
push
jno
ljmp
popf
jne
add
mov
adc
decl
mov
add
imul
add
pushl
add
push
add
lret
and
jmp
add
push
add
add
inc
add
add
icebp
into
movsb
add
incl
bound
incl
xor
pushl
mov
je
mov
xchg
mov
add
cmc
rorb
cmp
add
add
rorl
add
add
rolb
popf
xchg
call
aas
jecxz
xchg
cli
cmc
les
inc
add
out
or
add
and
pushl
roll
add
cmp
incl
addb
pop
leave
movsb
add
add
sub
add
mov
pushf
mov
out
pop
inc
add
adc
ja
add
push
mov
cwtl
rolb
roll
inc
add
jno
push
in
cmc
addb
adc
incl
addb
int3
mov
add
iret
in
lret
jns
add
add
or
pop
adc
jmp
inc
add
std
mov
xchg
inc
add
add
cwtl
insb
xchg
and
out
and
call
xor
jmp
add
cmp
aaa
xchg
movb
add
pop
push
mov
ret
test
mov
jecxz
outsb
stc
rorb
mov
call
lea
enter
mov
insb
push
les
insb
dec
into
pop
pop
mov
data16
add
js
add
das
mov
add
adc
ljmp
add
incl
add
imul
mov
mov
fdivl
add
call
or
add
cli
xchg
test
sub
loope
aad
js
add
pop
xchg
jmp
add
adc
mov
inc
add
add
mov
test
ja
loop
push
add
lea
jmp
test
add
bound
in
test
addl
dec
dec
out
addl
cmc
fwait
cmp
add
add
inc
add
lret
sbb
add
outsl
adc
lcall
add
int
in
push
add
xor
pushl
add
enter
lahf
sbb
jmp
insb
hlt
xchg
or
add
in
xchg
push
out
push
adc
sub
leave
cmp
push
stos
aad
add
sbb
xchg
fnsave
add
push
add
rcrl
add
jmp
mov
mov
xchg
xchg
add
js
lods
imul
cmp
add
cwtl
loope
insl
xchg
data16
fnstenv
add
in
shll
add
push
add
dec
push
in
pop
mov
mov
cli
pusha
add
mov
add
sbb
jmp
call
sbb
add
add
xor
cld
and
lcall
addb
add
add
je
add
hlt
mov
xchg
mov
add
cmpsb
add
xchg
cmp
push
add
add
adc
ljmp
sbb
push
add
pop
add
roll
add
push
add
mov
lcall
add
call
js
jae
incl
mov
add
loope
fcmovnbe
or
sarb
add
jns
mov
divb
call
shlb
adc
incl
push
pop
xchg
aas
jle
add
add
xlat
pushf
and
lcall
add
pop
push
add
pop
pop
add
add
mov
and
call
popf
imul
add
int
or
aad
inc
add
xor
ljmp
add
fwait
mov
add
add
cmp
add
out
add
les
jg
add
add
pop
pminsw
lock
add
or
add
push
add
pop
mov
add
add
xchg
inc
add
std
sarb
add
jo
dec
push
in
inc
add
lcall
add
mov
ljmp
dec
xor
add
cmp
loopne
clc
add
ljmp
insb
dec
mov
sub
push
ja
fcoms
add
pop
xor
jmp
xor
insb
push
mov
mov
add
in
cli
dec
push
add
lea
pusha
add
mov
add
mov
mov
scas
and
call
sbb
xchg
popf
fwait
lods
or
add
int
xchg
mov
jmp
add
adc
call
fisubs
jg
add
mov
sbb
in
lcall
mov
add
push
aaa
jb
jmp
decl
lods
iret
out
inc
add
test
mov
add
shlb
popa
add
pop
lea
cld
push
cmpsb
add
idivl
cmp
mov
add
mov
and
decl
stos
cli
std
arpl
pushl
sbb
add
jnp
push
mov
stos
and
mov
mov
xor
add
adc
pushl
mov
add
add
add
call
incl
cmp
jge
xchg
out
popf
and
jnp
add
mov
add
add
jmp
enter
add
pop
push
sub
add
sub
mov
add
xor
push
add
roll
roll
inc
add
ss
popa
add
stc
push
ret
add
add
xchg
or
pushl
sbb
add
jbe
add
jmp
jmp
add
or
add
jmp
add
push
scas
stos
mov
cmp
fsub
add
sub
mov
add
movsb
add
add
add
dec
xor
push
sbb
pop
adc
lcall
xor
call
add
movsl
add
add
jmp
add
mov
add
xor
mov
cmovg
cmp
mov
mov
popf
repz
scas
rcrb
add
add
adc
incl
lcall
insb
xchg
mov
jl
add
cmp
rolb
cli
jle
mov
add
sub
add
rolb
add
inc
add
mov
in
mov
jl
add
add
add
lock
fcompl
cmc
lock
jmp
pushf
sub
idivl
addl
jp
mov
inc
add
add
incb
fildll
add
pop
ja
add
ljmp
add
dec
add
incl
insl
popf
aad
pop
xchg
sti
jb
call
add
icebp
add
test
or
cmp
or
aaa
fadds
fcomps
gs
mov
adc
add
in
ret
xchg
std
shl
call
cmc
xchg
mov
add
mov
mov
add
add
add
outsb
push
add
loope
mov
notl
call
push
add
push
jecxz
pushf
sbb
addb
hlt
enter
cmp
add
mov
add
add
add
ss
cli
ret
add
xchg
mov
rorl
mov
js
add
add
push
add
mov
arpl
call
push
xchg
adc
jmp
pushl
lahf
mov
xlat
das
outsl
add
add
insb
mov
or
cmp
insb
rolb
add
adc
lods
lcall
add
jno
inc
add
add
push
inc
add
incl
incl
out
pop
cmp
add
inc
add
std
movb
add
push
sbb
jmp
add
jge
add
ret
add
imul
or
jbe
add
dec
xchg
xor
pushl
and
mov
test
dec
sarl
loopne
adc
ljmp
xchg
jmp
inc
add
add
incl
add
lcall
ret
pop
fwait
repz
dec
les
jne
les
ds
into
cmpsb
add
bound
call
ljmp
aam
lock
push
add
push
add
dec
cltd
pop
lahf
sbb
add
push
stos
outsl
test
mov
add
cmp
xor
jmp
incl
addb
insb
popa
add
xchg
aam
pop
mov
pop
movsb
add
test
dec
addl
shll
imul
in
daa
add
pushl
add
leave
mov
jnp
call
sub
sub
jmp
jmp
jmp
add
add
add
pushl
pop
fcmovnbe
cmp
mov
mov
movsb
add
lcall
mov
repz
pop
iret
into
pop
sbb
ljmp
lea
xchg
sahf
sub
mov
loop
push
dec
inc
add
ja
in
insb
sub
cli
imul
stc
xlat
jo
lcall
incb
mov
push
sub
add
popf
lds
xchg
imul
leave
sete
ss
test
xchg
xlat
add
call
xchg
sti
adc
decl
add
clc
mov
add
push
jle
lods
mov
add
jne
and
jmp
int
stos
fbstp
add
add
sub
xchg
add
add
add
sbb
add
jmp
add
pop
in
lahf
and
and
ljmp
dec
xchg
inc
add
sub
inc
add
out
add
jg
lock
xchg
pop
add
mov
sbb
int
jne
shr
pop
das
lock
add
stc
mov
mov
arpl
lcall
add
mov
fwait
repnz
add
pop
lret
lahf
push
add
mov
add
jecxz
add
jb
stc
les
xor
pop
sub
repnz
mov
call
in
sbb
cmovle
add
aaa
repnz
mov
mov
push
add
js
inc
add
aas
jne
add
js
add
add
or
mov
xor
add
sbb
xchg
icebp
lret
int
in
faddl
add
out
je
int3
sub
inc
add
popf
incb
jno
call
decl
jmp
add
xchg
cld
aas
add
jmp
add
addl
add
pop
inc
add
push
aad
dec
out
mov
add
imul
mov
ljmp
sub
enter
mov
add
pop
inc
add
mov
pushf
mov
push
add
movsl
add
daa
add
and
decl
add
jmp
add
and
jnp
test
aas
in
sub
inc
add
addl
add
add
decb
arpl
cmp
and
incl
int
rolb
js
add
pushl
add
add
addb
and
in
dec
mov
add
mov
add
inc
add
push
icebp
mov
pushf
cmp
call
add
ljmp
add
ds
add
or
out
pop
sbb
jp
add
xor
mov
cmpsl
add
xchg
rcrl
add
pop
sti
and
jle
add
add
mov
stos
or
in
push
add
adc
lcall
daa
add
add
pop
loop
sbb
js
add
rolb
add
add
pop
add
call
push
add
lahf
data16
ja
add
add
pusha
add
lds
add
jo
incl
fcomp
jnp
add
out
shlb
add
push
add
dec
in
ja
add
dec
jp
movl
mov
mov
add
movsb
add
pop
cld
mov
pushf
add
dec
cs
add
sub
push
loope
mov
sub
scas
idivl
add
add
cmp
hlt
inc
add
add
and
push
cmpsb
add
add
fbld
add
scas
adc
lret
and
call
xchg
push
aas
add
dec
jns
add
sub
jg
incb
cld
pop
add
xor
pushl
add
or
add
out
insl
cmpsb
add
in
addb
push
add
call
jo
jmp
divb
adc
add
mov
add
mov
add
or
fucomi
push
xchg
cli
fistl
add
add
mov
add
scas
dec
cmp
add
push
addb
out
adc
ljmp
add
out
mov
add
into
push
and
icebp
adc
cmp
into
mov
in
add
mov
insb
mov
jmp
add
lods
dec
jbe
inc
add
rorb
add
aas
jl
add
adc
add
add
inc
add
lods
add
lcall
ret
add
lcall
incl
sub
add
push
add
ja
cmp
call
icebp
or
add
lea
int
push
dec
imul
int
loop
mov
cld
in
inc
add
adc
ljmp
add
sub
in
data16
and
lcall
int3
loopne
adc
decl
shlb
push
add
roll
add
call
add
imul
add
mov
add
movsl
add
pop
loope
mov
add
decl
sahf
insb
mov
ljmp
add
decl
inc
add
adc
add
sbb
cmp
loop
addl
mov
cmp
adc
fst
and
cld
xchg
add
jmp
mov
add
mov
and
jmp
mov
out
push
cmp
pop
movsl
add
call
add
incl
add
add
mov
adc
cmp
mov
and
xchg
das
notl
sbb
mov
add
sti
fimuls
ljmp
loopne
inc
add
pop
fdivs
add
xor
add
int
or
add
add
jmp
add
xlat
in
test
add
repnz
adc
pushl
add
sub
push
add
mov
add
adc
jmp
add
das
rcrb
mov
addl
mov
push
add
lret
sbb
outsl
push
add
int
add
cmp
add
xor
call
jmp
int
outsb
jbe
dec
xor
lcall
add
shll
pushl
inc
add
pushl
cmpsb
add
roll
les
shll
faddl
pushl
decl
jae
stc
or
stos
fdivrp
fstpl
add
mov
add
adc
lcall
in
or
add
add
add
cmp
add
int
push
dec
ret
xor
ljmp
lcall
out
lods
and
lcall
add
add
addb
arpl
jmp
rorb
add
clc
les
scas
adc
add
outsb
addb
add
in
lods
fcompl
imul
incl
pop
addb
and
pushl
add
sbb
cmpsb
add
jo
jmp
hlt
xor
cmp
syscall
add
flds
sub
and
decl
xor
add
push
xchg
test
add
decl
int
add
test
push
add
xor
sbb
jnp
pop
lahf
mov
cltd
jns
jb
jmp
add
pop
inc
add
mov
add
xchg
repnz
call
add
mov
add
adc
lcall
hlt
cmp
push
roll
add
call
add
add
xor
jmp
add
outsb
int
pop
cmp
add
jp
xor
decl
ljmp
fistpll
int
add
push
add
pop
add
pop
jno
jmp
add
sbb
push
add
jns
add
xchg
mov
leave
cmp
sub
and
cmp
add
add
out
loope
jae
call
add
sbb
pop
inc
add
add
pusha
add
cmp
jbe
into
inc
add
insb
mov
add
push
add
add
xlat
jbe
test
pop
add
add
lcall
xchg
mov
xor
lcall
addl
mov
add
add
jmp
insl
fcoml
in
int
mov
ret
add
pop
outsb
lea
incl
add
mov
add
add
cmpsb
add
call
ret
jb
lcall
add
stc
jmp
rcl
repnz
mov
popa
add
fcompl
add
rolb
add
addb
add
jle
dec
add
call
jmp
jns
clc
sub
sbb
add
jae
incl
mov
push
dec
or
test
call
sub
adc
aas
mov
add
xor
decl
mov
xor
call
in
std
mov
data16
movsl
add
int
xor
add
ret
add
add
xor
call
pushl
jb
ljmp
add
and
addr16
sbb
add
scas
or
in
roll
add
push
incl
add
xchg
leave
add
addb
stos
xchg
ljmp
je
out
add
incl
add
add
movsl
add
popa
add
inc
add
incl
add
jmp
add
and
and
fsubrl
sub
lock
leave
xchg
imul
pop
out
stc
les
lcall
stos
xchg
add
sub
pushl
add
call
call
clc
aas
mov
cmc
xor
arpl
dec
push
cld
aam
lea
sti
or
add
xor
aas
std
in
adc
pushl
outsb
addb
adc
call
rolb
cmp
lods
lds
out
imul
addl
sbb
fwait
and
mov
fcomps
frstor
add
loopne
pop
js
addb
sbb
xchg
aad
add
push
in
inc
add
add
pusha
add
push
and
fucomp
inc
add
add
adc
jmp
das
cmpsl
add
inc
add
add
sarl
sbb
loopne
test
add
cltd
roll
add
ficoms
mov
add
into
add
call
lcall
jp
add
add
pop
sub
add
add
pop
push
jp
pop
add
xor
lcall
lcall
pop
add
add
test
and
jmp
add
xchg
adc
jle
out
xchg
adc
add
xchg
dec
int3
insb
mov
or
aam
adc
lcall
dec
mov
icebp
insb
sbb
ja
add
push
and
add
imul
jmp
sarl
jns
add
add
mov
movl
mov
movb
add
movb
xlat
jecxz
lock
test
jg
fs
add
mov
addl
imul
addb
xchg
mov
adc
cmp
in
repz
leave
inc
add
push
add
jno
jmp
add
add
add
ljmp
mov
ds
cli
in
inc
add
shlb
decl
cld
ret
add
add
jmp
mov
and
mov
push
push
mov
pop
add
add
movsl
add
jnp
sbb
add
xchg
enter
add
dec
xor
jle
cmp
lds
jge
sbb
dec
mov
add
jae
cmp
add
or
jecxz
sbb
push
mov
movb
mov
add
add
add
movsl
add
add
outsl
xor
call
add
push
hlt
test
push
inc
add
push
add
adc
call
add
adc
jg
popf
filds
add
or
add
add
add
pop
push
repz
add
add
js
nop
outsl
repz
mov
add
inc
add
bswap
push
inc
add
pminsw
add
push
aam
fldenv
add
addl
add
inc
add
sub
ljmp
inc
add
jmp
mov
pop
int
scas
rcrl
cmp
add
into
fwait
push
jne
pop
xlat
in
sub
add
pop
mov
add
push
add
inc
add
push
les
push
jo
incl
add
add
mov
loope
jno
lcall
lret
push
test
int3
pop
xchg
fwait
lahf
xchg
popf
add
insl
inc
add
jns
add
add
stc
leave
sbb
loopne
ret
push
add
sub
sub
lods
xchg
aaa
std
add
stc
jno
pushl
out
movsb
add
push
mov
add
leave
mov
add
inc
add
inc
add
dec
xor
in
arpl
incl
add
mov
xlat
jne
jb
ljmp
pop
inc
add
pushf
xor
lea
ljmp
enter
lods
cmp
xor
call
add
mov
or
roll
lds
lret
scas
add
stc
xlat
dec
lret
mov
xor
call
push
scas
and
call
mov
inc
add
add
xor
data16
add
add
add
cmpsb
add
incl
add
loopne
cmpsb
add
add
dec
popf
scas
mov
stc
push
push
xchg
sub
xchg
pop
rclb
stc
stc
dec
cmp
add
fidivs
add
adc
call
mov
je
add
in
mov
je
aas
dec
aas
loop
dec
and
call
add
jecxz
lcall
add
add
add
sub
add
pushl
add
push
add
xchg
sti
and
imul
addb
dec
xchg
inc
add
or
jmp
movsl
add
je
add
add
inc
add
mov
add
push
add
mov
add
inc
add
test
test
push
add
leave
jecxz
push
xchg
nop
jecxz
adc
jmp
add
mov
pusha
add
mov
sbb
ret
add
mov
fcomps
add
jmp
pop
mov
adc
pushl
add
add
out
test
inc
add
or
out
mov
shll
add
punpckhwd
and
ljmp
leave
out
push
in
int
inc
add
js
test
rcrb
push
stc
imul
push
add
int3
fists
addl
xchg
push
data16
add
xlat
xor
incb
in
scas
jge
add
int3
jbe
add
add
xor
jp
add
shrb
sub
and
call
out
addl
dec
leave
fisubrs
push
ret
add
add
mov
clc
mov
pushl
cld
and
pushl
sbb
add
fstps
stos
push
mov
add
add
fmull
cmp
add
ret
add
jmp
add
xor
add
call
or
add
insl
pushf
dec
cmp
push
add
ja
lcall
adc
cmc
outsl
dec
mov
pop
adc
pushl
mov
add
pushf
sbb
add
out
or
xlat
nop
add
jmp
fadds
lcall
scas
jmp
add
add
mov
add
add
add
add
test
data16
ljmp
mov
stos
outsl
xchg
xchg
adc
js
add
mov
mov
add
arpl
sti
sub
fwait
aad
shrl
outsl
les
or
push
jmp
adc
mov
add
cli
inc
add
stos
or
add
test
xor
add
push
add
sbb
add
mov
data16
fcmovnu
add
push
push
cmp
int3
addb
add
sub
cmp
cltd
mov
add
dec
jae
call
fiadds
lcall
push
xor
pushl
pop
pushf
je
cltd
fnstsw
lds
lock
shlb
sarb
adc
stc
addl
mov
add
inc
add
decl
jnp
test
mov
add
add
pushl
jge
add
out
mov
add
out
clc
dec
cmp
pusha
add
pop
mov
sarl
dec
push
nop
lea
fcmovb
add
jmp
mov
ljmp
mov
add
inc
add
sbb
add
add
xchg
pop
daa
add
incb
xchg
jno
incl
mov
hlt
clc
sti
jle
add
js
nop
mov
add
das
ret
add
cwtl
lret
add
add
jmp
add
ljmp
loopne
sub
add
cmp
mov
mov
loope
mov
mov
mov
add
jo
push
jb
fstpt
fists
cmp
xchg
adc
call
push
popa
add
aam
add
add
ret
add
add
mov
add
jae
jmp
add
xchg
inc
add
mov
xor
mov
jmp
add
add
loopne
imul
call
add
mov
popf
add
ljmp
push
add
fmull
outsl
dec
repz
and
call
cld
aam
mov
popa
add
jb
mov
jl
inc
add
lods
xchg
and
decl
jb
push
mov
in
or
push
not
pop
dec
pusha
add
in
mov
enter
add
add
stos
or
inc
add
sub
push
mov
add
cltd
arpl
mov
les
fisttpl
add
mov
add
pushl
add
sub
add
addb
adc
call
sbb
dec
jle
add
mov
arpl
incl
call
add
add
icebp
jecxz
mov
test
popf
cmp
dec
cmpsl
add
repz
inc
add
jno
push
cmpsb
add
add
pop
cld
jl
xchg
addl
mov
mov
rcrb
add
add
outsb
es
add
add
sub
add
inc
add
pop
add
adc
jge
pusha
add
pop
les
xlat
stos
movsb
add
test
ret
and
pushl
and
push
repz
add
je
inc
add
add
mov
add
inc
add
mov
clc
push
or
add
addb
adc
incl
ljmp
cmp
and
mov
loopne
dec
xchg
xor
mov
outsl
and
lcall
sub
or
add
call
mov
xchg
stc
sbb
mov
add
add
jmp
cld
test
roll
popa
add
xlat
mov
imul
pop
loop
in
add
ljmp
testb
in
mov
cmp
ljmp
ja
cmp
add
jne
mov
push
sbb
add
cli
push
loopne
repnz
xchg
push
ret
add
add
jl
dec
adc
jp
add
mov
fwait
jb
in
out
pop
xchg
mulb
add
add
mov
mov
sti
pmaxsw
adc
push
cmpsl
add
xchg
loopne
xchg
cmp
clc
lret
xor
jmp
cmp
scas
cmp
mov
jecxz
fmuls
add
mov
add
stos
ficoms
add
inc
add
add
add
leave
add
decl
push
addl
inc
add
and
add
decl
dec
dec
rcll
add
scas
lret
lcall
mov
xor
jmp
dec
aas
lahf
jge,pt
add
lahf
decl
inc
add
jo
inc
add
add
sbb
pusha
add
je
dec
adc
dec
xchg
push
insb
dec
pop
addb
int3
fnstsw
decl
ret
add
add
incl
add
jecxz
popa
add
test
cld
cmp
add
iret
xchg
sahf
pop
in
shll
add
stos
mov
fbstp
mov
add
hlt
pop
push
add
cli
das
addb
cmp
lock
ljmp
add
jg
addl
cmp
clc
dec
xor
mov
and
xchg
cmp
popf
xchg
ret
lock
rolb
add
incl
lcall
or
dec
dec
and
inc
add
pop
ror
lcall
jmp
add
loopne
xchg
mov
movsb
add
jge
mov
sti
pop
push
add
jge
jmp
add
add
sbb
je
mov
add
stc
push
push
add
scas
push
add
and
incl
dec
mov
and
lcall
out
jp
add
scas
inc
add
cltd
jnp
add
negl
push
add
pushf
js
lahf
push
mov
dec
push
rol
add
pop
repnz
mov
inc
add
dec
xor
ljmp
add
cmp
and
jmp
add
xchg
shrl
arpl
in
dec
mov
jg
sub
add
add
add
inc
add
insb
icebp
push
jae
jmp
add
in
mov
add
loope
mov
test
jg
add
add
dec
mov
lock
loopne
fdivrs
sub
and
jmp
jae
pushl
jl
adc
bound
jmp
inc
add
mov
jge
add
sub
mov
inc
add
popa
add
insl
pop
popa
add
or
adc
jmp
add
push
or
mov
mov
insl
je
add
add
ds
mov
addb
fldl
roll
adc
xchg
or
add
pop
dec
loop
scas
test
add
xchg
jae
jmp
add
add
add
aaa
das
cmp
call
roll
or
mov
fsubrs
dec
xor
jmp
add
add
ljmp
lea
pusha
add
add
mov
add
out
push
pop
jmp
add
ret
add
jne
das
dec
cmp
lret
jge
jl
add
add
nop
cmc
int3
xor
je
add
add
add
xchg
popf
mov
out
outsb
into
dec
lds
lahf
push
cmpsl
add
bound
jmp
cld
pop
inc
add
pushf
out
data16
ret
add
cmpsb
add
addl
add
jo
lcall
sbb
add
jp
adc
cltd
dec
jbe
sahf
psubb
sub
add
add
add
push
push
nop
in
daa
add
call
push
pop
mov
sub
inc
add
movb
movl
xchg
mov
call
add
fwait
xchg
or
add
std
and
push
jb
lcall
cmp
adc
jmp
fldenv
add
fnstcw
add
adc
jmp
lcall
add
jle
pmaddwd
add
add
sbb
jg
add
dec
shl
add
pop
std
call
mov
inc
add
jl
xor
pop
xchg
fnsave
incl
popa
add
arpl
clc
rclb
cmp
ja
in
lea
add
xchg
jge
add
add
dec
inc
add
inc
add
xchg
add
mov
mov
iret
mov
and
test
lret
add
das
dec
cmp
add
incl
hlt
mov
mov
lcall
movsb
add
repnz
inc
add
enter
add
add
inc
add
ss
or
and
ljmp
add
and
decl
mov
jmp
add
mov
dec
xor
add
add
mov
ret
inc
add
cld
mov
lcall
popf
mov
add
mov
dec
test
dec
pop
sub
das
addl
and
incl
or
cmp
lahf
popa
add
mov
add
repz
add
sbb
add
jnp
addl
out
out
cmp
add
add
add
adc
std
push
add
inc
add
add
dec
test
pop
mov
add
mov
add
add
xchg
addl
cmp
fwait
in
add
addb
add
jmp
add
mov
adc
ljmp
add
sub
add
pop
sub
icebp
addl
fcmove
mov
add
mov
sub
roll
and
mov
dec
mov
push
inc
add
jb
incl
add
lea
add
enter
xor
ljmp
stc
mov
ljmp
add
add
call
call
add
mov
sub
add
ds
add
add
popa
add
push
adc
mov
rcll
incl
add
mov
cmc
sub
call
add
je
add
jb
decl
mov
cmp
ficoms
push
incb
jmp
add
mov
add
add
ljmp
adc
outsb
test
int
clc
lahf
out
add
add
ljmp
data16
xor
jmp
add
add
add
or
add
push
cwtl
add
jle
add
inc
add
add
sbb
add
sbb
or
mov
or
add
jnp
push
addl
stc
xchg
jns
lret
add
add
jmp
cmp
pop
fisubrl
sbb
outsl
addl
add
push
lret
add
ja
add
add
adc
xor
pop
mov
lds
mov
xchg
fisubs
movsb
add
daa
add
and
incl
jmp
fdivrp
inc
add
scas
xor
call
hlt
and
push
inc
add
add
divl
add
add
pushl
lcall
add
add
rcrb
mov
cmc
hlt
jae
inc
add
fnstsw
add
pop
xchg
aaa
pushf
pop
movsb
add
js
cld
jmp
add
add
ror
dec
popa
add
cld
jle
add
jl
lock
add
mov
das
test
js
push
add
movb
pop
sub
imul
push
je
add
in
pop
insb
ljmp
add
lods
lret
mov
rolb
ljmp
mov
adc
jl
inc
add
dec
xchg
sub
leave
enter
pop
out
fwait
dec
jmp
add
mov
inc
add
nop
add
decl
add
add
push
add
inc
add
cmc
push
add
adc
in
inc
add
mov
in
es
add
add
add
lcall
dec
pop
je
add
lret
jns
pushf
lds
inc
add
mov
add
add
je
add
decl
adc
push
xchg
or
mov
push
shll
pop
sahf
insl
add
pushl
jg
add
push
lods
movsl
add
add
add
pop
and
mov
add
lcall
add
inc
add
lcall
bound
lcall
movsb
add
add
ret
into
mov
lds
or
mov
sbb
push
mov
add
call
pusha
add
addl
pop
pop
ss
addl
add
add
or
mov
xor
adc
add
dec
in
mov
stc
rorb
incb
jbe
jne
jae
ljmp
outsb
xlat
pop
mov
add
cltd
insl
mov
sub
add
add
fs
sub
mov
addl
loopne
loopne
movsl
add
fcomps
add
fidivrs
add
push
and
fistpl
jp
add
dec
push
xchg
add
push
lock
pop
fcomps
or
insb
and
lcall
add
cli
addl
jge
mov
mov
int
stos
mov
add
cmpsb
add
and
cmp
stos
push
push
test
adc
jmp
xchg
nop
mov
and
popf
test
add
cmp
lcall
pop
mov
add
dec
aam
dec
rcll
addb
repz
mov
pop
pop
testl
mov
lods
push
add
xchg
addb
adc
inc
add
repz
movl
lods
bound
call
add
ljmp
mov
call
add
cltd
jnp
mov
add
adc
incl
mov
les
addb
add
pop
sub
cmp
adc
call
shrl
pop
push
add
mov
inc
add
pop
add
bound
pushl
in
and
push
add
movsb
add
jnp
jle
add
mov
iret
add
lcall
ret
add
mov
stos
stos
rolb
mov
add
cmp
push
inc
add
add
scas
les
ljmp
inc
add
sti
mov
push
movl
pop
jg
lcall
add
pop
pusha
add
popf
ljmp
add
mov
fcomip
push
add
push
lcall
and
mov
add
test
ljmp
inc
add
xchg
ret
add
cmp
jns
lret
movb
jae
pushl
filds
add
jmp
add
pop
pop
roll
add
pop
cwtl
add
mov
ja
cwtl
fsubl
outsb
mov
fcoms
cmp
add
add
jmp
test
es
insl
mov
add
mov
add
rcl
cmp
add
and
push
lds
cmp
add
incl
add
jp
add
cmp
je
add
cmp
int
add
test
inc
add
pusha
add
fnstenv
movsl
add
fwait
jmp
call
pop
pop
push
mov
add
into
lea
mov
cmp
add
fadd
add
incl
add
add
mov
add
push
add
in
sbb
sbb
pop
addl
pushf
aad
pop
icebp
or
add
lcall
outsb
xor
inc
add
cmpsl
add
lds
add
pushl
jp
stos
rol
add
xor
ds
stc
inc
add
add
mov
cmp
addb
mov
add
adc
cmp
mov
int
add
add
call
add
jmp
add
mov
call
fmull
lods
sbb
movsl
add
add
lcall
add
fcoms
flds
cmp
add
add
add
addl
aaa
add
lcall
fwait
movsl
add
inc
add
push
add
jnp
ja
out
push
add
addl
ret
add
cltd
imul
cmp
lahf
lods
jne
add
add
adc
lcall
roll
add
and
push
in
xchg
push
add
xchg
movsb
add
dec
push
or
pop
add
pop
or
cmp
scas
pop
addb
add
mov
mov
push
faddp
add
bound
pushl
out
test
aad
dec
movsl
add
add
enter
push
add
ja
add
js
mov
and
call
lea
add
pusha
add
cmp
dec
leave
fneni(8087
add
lcall
aad
add
xchg
call
push
add
aad
icebp
mov
add
mov
add
pop
add
call
add
cmp
add
mov
mov
mov
add
push
mov
scas
bound
lcall
adc
jbe
sbb
mov
icebp
jb
lcall
push
mov
aaa
sbb
sbb
mov
add
xchg
push
add
add
adc
cmp
incl
loop
lds
popa
add
add
pushl
jmp
addb
stos
add
ljmp
les
pop
lret
jmp
add
call
decl
repz
cmpsl
add
add
cmp
add
dec
lds
inc
add
imul
push
mov
pop
adc
sti
cmp
add
add
mov
pop
roll
add
nop
ljmp
inc
add
scas
or
ficoml
add
pop
add
xchg
stc
push
in
adc
pushl
sar
jl
add
pushl
mov
mov
inc
add
rorb
cmp
pop
add
call
in
ss
fcoms
mov
adc
loop
js
add
aad
push
add
dec
inc
add
lods
xor
jmp
aaa
dec
adc
cli
push
add
lea
call
sti
addl
imul
add
lahf
sub
xchg
cmp
dec
daa
add
std
adc
decl
add
jmp
fisubl
add
inc
add
mov
aad
mov
jns
iret
xchg
aas
cmpsb
add
add
add
add
cld
lret
incl
mov
cmc
mov
ja
sub
add
mov
xor
stc
fndisi(8087
add
or
fs
pop
push
les
jmp
add
and
ljmp
call
ljmp
add
das
push
in
cs
mov
stos
fidivs
mov
mov
sarb
add
jo
call
addl
outsb
mov
fnstenv
incl
out
aad
add
dec
lock
sbb
sub
jmp
jno
call
add
xlat
push
add
mov
add
mov
out
lret
mov
add
mov
add
add
mov
addl
inc
add
loope
shr
cld
xor
fisttpl
aas
cwtl
lock
mov
iret
imul
cmp
ret
add
ljmp
test
data16
add
inc
add
or
stc
in
mov
add
cwtl
adc
dec
xchg
and
ret
pop
insb
mov
add
pusha
add
inc
add
add
add
add
pusha
add
pop
push
addb
add
bound
lcall
int3
push
add
addl
jp
inc
add
jg
add
xlat
add
add
jo
push
inc
add
lahf
movl
ds
add
pop
mov
add
pop
add
mov
add
and
lea
dec
xor
lcall
jle
jae
jmp
add
and
decl
movl
xor
add
movsb
add
mov
add
add
dec
and
call
sbb
cmp
out
xchg
xor
ljmp
add
icebp
cld
xchg
in
nop
cmp
mov
lods
outsb
xchg
fmul
leave
icebp
inc
add
sahf
xchg
dec
roll
or
jb
incl
add
aas
cmp
add
into
or
js
add
cmc
push
jmp
jmp
add
jmp
add
idivl
sub
std
call
sub
add
call
lret
stc
pop
in
push
add
enter
add
testl
test
pop
clc
add
les
mov
jmp
stc
lahf
pop
add
cmp
and
fs
add
xor
pop
add
add
leave
lds
adc
call
call
movsl
add
add
add
out
xor
jnp
add
xchg
out
stc
rorb
scas
push
sbb
and
inc
add
dec
je
out
add
mov
mov
mov
push
add
ss
dec
cmpsl
add
das
adc
pushl
add
mov
cmpsb
add
enter
cmp
adc
jmp
add
lret
mov
add
movsb
add
mov
add
xchg
and
incl
inc
add
add
into
out
or
dec
aad
imul
mov
xchg
mov
mov
add
mov
add
xchg
dec
in
push
add
pushl
add
add
lret
xchg
incl
outsb
cmp
add
inc
add
or
inc
add
jb
push
xor
sub
xor
add
jle
push
inc
add
inc
add
sbb
mov
add
add
jns
dec
jp
call
push
stos
pop
lods
adc
into
in
pop
cmp
addb
add
decl
addl
add
dec
repnz
add
clc
stc
pop
data16
cmp
movsl
add
pushl
xor
ljmp
stc
in
sub
dec
push
sahf
jbe
add
add
push
add
and
incl
jp
add
lcall
add
call
nop
mov
lcall
cmc
movsb
add
add
sbb
popa
add
in
mov
sub
aad
into
ds
add
jmp
xlat
dec
mov
add
lock
add
mov
add
lcall
dec
leave
mov
xor
ljmp
or
add
add
xor
push
loopne
dec
lock
cltd
sub
add
inc
add
push
jae
jmp
xchg
popl
cld
jno
decl
add
ljmp
xchg
cmpsb
add
push
stos
outsl
mov
scas
fstps
jae
jmp
mov
mov
add
add
add
loope
xchg
in
rolb
out
and
call
jmp
add
mov
add
add
lock
in
xor
add
inc
add
addl
adc
jmp
mov
lahf
dec
jns
add
dec
add
add
add
add
sub
adc
call
add
pop
or
add
cmpsb
add
jmp
add
add
add
inc
add
addb
add
inc
add
xchg
mov
inc
add
addl
out
or
mov
out
cld
stos
push
push
add
bound
incl
addr16
fdivp
std
and
pushl
add
xor
lcall
in
add
lcall
lods
les
add
add
call
es
mov
add
inc
add
daa
add
loop
xchg
and
mov
pusha
add
add
xchg
sub
ficompl
int
add
mov
jae
decl
inc
add
xchg
movl
ss
pop
push
incl
add
mov
push
add
rcrb
cli
das
jo
jmp
loopne
fwait
jle
mov
xchg
push
mov
ret
add
add
xchg
or
leave
addb
xchg
mov
add
add
add
imul
add
add
in
add
mov
lods
xchg
mov
and
inc
add
dec
sarb
loop
xchg
dec
out
test
leave
push
add
push
or
jle
mov
xor
incl
dec
call
ljmp
mov
jmp
cmp
aad
je
int
into
iret
aad
cs
test
xor
add
pushl
call
dec
jnp
add
add
xlat
dec
out
in
or
xchg
dec
dec
xchg
xchg
jg
in
mov
push
jne
add
jns
add
incl
adc
add
sub
dec
add
call
jmp
cmpsb
add
add
cmp
add
fstl
sbb
fwait
adc
decl
and
rol
add
nop
hlt
int
add
ja
mov
add
bound
incl
add
xchg
imul
add
test
push
lock
rolb
mov
mov
dec
in
jne
imul
add
xchg
mov
ja
mov
call
cmp
jmp
ret
add
add
jae
mov
dec
xor
lcall
sub
rclb
add
int
push
fwait
or
push
inc
add
xchg
pop
mov
add
rolb
add
add
stos
dec
inc
add
inc
add
pushf
testl
add
jmp
je
or
ljmp
xchg
test
xlat
xor
call
add
nop
inc
add
loopne
or
add
add
add
add
call
add
out
sti
rolb
mov
addl
lret
in
roll
js
add
cmp
add
pop
je
add
leave
out
shll
add
xor
add
call
xchg
mov
add
jecxz
addl
add
inc
add
scas
ja
pushf
cmpsl
add
lcall
add
pushf
scas
testl
das
add
add
add
fcmovnbe
mov
add
inc
add
add
or
outsb
add
add
scas
les
test
add
pop
add
mov
xor
decl
adc
jae
decl
scas
hlt
push
add
xlat
test
sbb
int3
xchg
je
add
add
add
sbb
mov
ret
add
les
sbb
in
out
push
xchg
lods
sbb
add
sbb
roll
xchg
test
adc
incl
add
inc
add
lds
cmp
adc
jmp
add
stc
icebp
lds
mov
add
inc
add
xlat
and
xchg
das
dec
push
sbb
cmc
lret
sar
jne
ds
sbb
add
test
xchg
fldcw
add
push
roll
or
add
pop
mov
addb
add
and
ljmp
add
test
in
aam
mov
jae
pushl
ljmp
add
add
mov
clc
and
lcall
xor
decl
inc
add
add
add
mov
enter
push
add
decl
jg
jb
call
jl
dec
movb
add
std
cwtl
xor
incl
movsb
add
add
into
dec
mov
xlat
cmpsl
add
add
insl
aaa
lea
jo
jmp
add
lods
xor
xchg
and
ljmp
add
add
out
das
push
add
jnp
inc
add
mov
mov
in
add
dec
adc
add
sbb
adc
add
mov
add
ja
add
ljmp
dec
icebp
bound
jmp
mov
dec
dec
jle
pop
in
sub
add
add
jmp
mov
add
jno
pushl
jmp
add
mov
insl
adc
jmp
add
add
pop
repz
pop
loopne
dec
int3
incl
add
dec
out
bound
lcall
add
add
push
aam
and
jmp
add
repnz
push
jmp
call
add
in
lret
cmc
push
movb
add
inc
add
lods
lds
sysexit
negl
mov
add
int
add
lcall
incl
add
movb
loop
mov
or
push
repz
out
ret
jecxz
nop
imul
add
xchg
mov
aam
mov
add
add
pushl
mull
lcall
adc
lcall
add
addb
xor
dec
out
mov
clc
ljmp
cmc
xor
popa
add
pop
and
push
pop
push
sub
add
mov
enter
ljmp
add
out
add
jmp
scas
mov
data16
cwtl
dec
bound
call
jae
pushl
add
int3
mov
jmp
lcall
add
xchg
mov
xchg
mov
push
scas
test
sub
mov
add
dec
push
scas
jno
jmp
add
loopne
xor
xchg
or
add
js
stos
adc
call
add
inc
add
xstore-rng
cmpsl
add
add
stc
and
repnz
jns
adc
ljmp
insl
cmp
clc
addl
cmp
cmp
push
dec
cs
xor
decl
pop
dec
les
insb
dec
iret
add
inc
add
inc
add
jns
add
scas
outsl
mov
iret
fstl
jne
push
add
lcall
roll
add
in
sbb
add
hlt
mov
add
add
jle
xor
lcall
std
pop
mov
aaa
aaa
cmp
ret
add
call
add
jmp
out
mov
addb
inc
add
add
pushl
jp
cld
pop
lock
xchg
test
addl
add
add
add
add
add
add
sbb
add
add
nop
jle
in
cli
fyl2xp1
loop
imul
sbb
mov
add
cmp
add
xlat
dec
and
lcall
lods
enter
mov
add
incl
pushl
lcall
jbe
fwait
mov
std
pop
sub
test
add
fwait
and
pushl
add
xchg
das
pop
mov
add
mov
mov
xchg
cmpsb
add
add
add
dec
ljmp
aad
dec
cmpsl
add
les
xchg
or
add
adc
pushl
les
inc
add
inc
add
insb
push
lock
inc
add
sarl
add
pop
push
add
xchg
push
clc
jl
dec
cmp
pop
arpl
call
or
mov
lds
addl
cmpsb
add
add
or
sbb
add
add
add
dec
dec
xor
pushl
cwtl
out
es
push
clc
dec
jo
call
dec
jg
cwtl
aas
les
and
decl
loopne
push
cmpsb
add
enter
add
add
jmp
jmp
mov
popf
jecxz
mov
add
add
cmp
add
add
into
test
lds
movl
in
xor
add
in
or
fisubrs
cli
push
add
sub
arpl
mov
mov
lcall
mov
dec
xor
ljmp
add
or
jecxz
inc
add
lods
mov
or
data16
add
imul
lcall
fs
nop
dec
stos
xchg
sbb
jns
add
jne
inc
add
inc
add
pop
mov
or
mov
add
xlat
mov
add
lds
lret
xchg
or
pop
add
add
mov
sub
lea
add
add
cli
repnz
fcompl
add
jecxz
add
dec
or
adc
incl
data16
ljmp
mov
add
fwait
hlt
in
popa
add
aaa
dec
inc
add
jp
adc
inc
add
push
add
cmp
add
pushl
call
decl
add
movsl
add
add
leave
test
push
push
add
adc
call
jmp
add
lods
xor
jmp
push
mov
adc
outsb
js
add
xchg
loope
sub
add
add
push
add
mov
add
pop
xchg
mov
add
add
bound
lcall
add
add
cld
and
jl
ja
stos
sbb
repnz
out
movb
add
mov
xor
pushl
pop
out
dec
jno
call
call
adc
call
add
adc
add
call
mov
add
xor
ficomps
add
pop
test
loop
ja
jg
inc
add
insl
cmp
mov
iret
mov
movsb
add
and
jmp
incl
add
cmp
mov
out
mov
mov
add
call
add
push
mov
or
insb
inc
add
push
inc
add
xor
loop
roll
add
add
add
movsb
add
mov
roll
movb
stos
mov
loope
cmpsl
add
loopne
inc
add
sub
mov
dec
push
call
add
push
cltd
mov
add
mov
add
test
out
add
addl
lds
loop
rolb
add
pop
imul
add
mull
cmp
into
enter
call
jmp
test
stos
cmp
add
outsb
pop
add
loopne
push
add
push
sub
add
sbb
fisttpl
pop
or
add
dec
add
add
or
lods
fistpl
fnstsw
les
mov
add
loope
sub
add
cmp
lcall
loope
jns
inc
add
mov
pop
sbb
mov
add
mov
add
add
movl
inc
add
add
add
fisubs
decl
arpl
jmp
add
stos
test
and
test
add
out
sbb
jl
add
int3
push
add
sbb
addb
add
call
lcall
add
pop
xor
mov
dec
push
add
js
iret
ret
add
pushl
add
addl
sbb
rcr
aaa
inc
add
movl
sbb
add
xchg
inc
add
leave
inc
add
jo
js
add
in
dec
js
jg
cli
pop
jbe
or
inc
add
imul
xor
decl
dec
leave
and
call
add
jns
add
jnp
add
sbb
adc
lcall
mov
add
mov
add
mov
add
inc
add
aaa
dec
in
aad
dec
cmp
mov
mov
jl
or
ficoms
dec
inc
add
fisttpll
push
lea
je
hlt
inc
add
adc
call
decl
add
jbe
leave
cwtl
or
add
addl
and
call
rol
add
fdivs
rolb
add
inc
add
mov
call
add
add
add
hlt
movsl
add
mov
loopne
xchg
and
add
or
sbb
add
push
add
push
ret
pop
sbb
add
jo
decl
imul
jmp
jle
add
bound
call
scas
arpl
pushl
popf
movb
es
jp
add
xlat
jns
add
xor
ljmp
enter
mov
jle
lcall
mov
add
stos
mov
js
xor
pushl
or
add
xor
aas
clc
pop
push
add
mov
jno
incl
outsl
adc
lcall
add
add
outsl
dec
sahf
add
decl
add
xor
add
bound
lcall
mov
add
ds
sub
sub
pop
jecxz
call
cmp
add
mov
addl
jecxz
push
add
jmp
mov
xor
ljmp
cmp
add
clc
mov
jmp
add
add
push
loop
cli
mov
data16
mov
lcall
sub
cli
adc
decl
adc
ljmp
enter
push
add
les
out
push
aas
cmc
rcll
mov
or
add
add
xor
jmp
add
add
sub
sub
mov
add
aam
test
mov
cli
inc
add
cmpsl
add
add
sbb
nop
pop
mov
addl
add
pop
or
cmp
add
mov
das
mov
jno
incl
cmp
or
add
xchg
dec
pop
mov
aad
js
cmc
push
add
mov
frstor
js
add
dec
pop
testl
ss
push
xchg
fbld
pop
mov
fsts
add
mov
add
ljmp
add
add
pusha
add
mov
add
lods
je
int3
pop
dec
jns
pop
inc
add
dec
cmpsl
add
inc
add
push
mov
insb
imul
inc
add
outsb
add
pop
arpl
call
aad
xlat
xchg
push
push
pop
inc
add
pop
psubsw
test
mov
daa
add
sbb
neg
shlb
mov
add
push
add
iret
ja
aam
add
add
and
int3
dec
push
add
inc
add
add
mov
mul
add
cld
inc
add
pop
stos
ja
mov
jmp
loopne
add
decl
add
add
clc
add
out
mov
movl
inc
add
pop
daa
add
add
out
cli
mov
js
mov
loope
test
jno
lcall
add
add
mov
fst
and
mov
xor
decl
pusha
add
sub
and
fildl
add
inc
add
push
add
add
adc
add
mov
add
mov
or
add
push
add
sbb
jo
jmp
add
aaa
push
sub
ljmp
and
mov
add
add
pushl
in
call
dec
inc
add
jb
push
fidivl
sub
add
adc
call
scas
pop
mov
ljmp
fbld
push
ret
add
incl
xchg
xchg
or
cli
mov
int3
fldt
add
add
add
pop
xor
ljmp
scas
fistl
add
outsl
popa
add
inc
add
sbb
add
or
mov
std
into
mov
push
add
insb
xor
inc
add
data16
xor
jne
movl
scas
in
pop
addl
add
add
lea
add
push
mov
pop
mov
jae
call
dec
addb
add
add
xchg
das
in
adc
pushl
add
xor
push
mov
outsl
pop
add
ret
add
data16
decl
add
dec
xchg
addb
pop
xor
js
add
call
push
add
mov
scas
mov
inc
add
jmp
add
xor
incl
add
bound
pushl
add
outsb
mov
jmp
xchg
jb
ljmp
push
add
clc
adc
push
add
loopne
dec
adc
ljmp
repnz
sbb
loopne
cmp
add
les
das
in
stc
cmp
add
call
add
add
pop
out
mov
inc
add
add
push
add
add
pop
jno
push
fwait
add
add
test
addl
mov
add
xchg
lea
ljmp
add
add
jns
rolb
mov
add
and
stc
push
xor
xchg
neg
insl
fadds
sbb
add
call
pushl
hlt
ljmp
sub
mov
flds
pop
loope
popa
add
pop
mov
add
dec
sahf
test
enter
jmp
jmp
test
sbb
repnz
out
test
std
in
inc
add
sbb
pop
mov
or
add
fimull
add
psubsb
add
outsb
sbb
je
cltd
xor
adc
dec
cmp
lret
add
mov
lea
add
out
sbb
add
mov
cli
dec
leave
pop
add
jmp
out
dec
fiadds
add
add
push
sbb
sub
fistl
ljmp
add
lods
das
push
jae
call
stos
or
aad
addb
or
movsl
add
cmp
xor
add
add
add
add
push
mov
dec
cmpsl
add
add
cmpsl
add
fsts
add
xchg
test
add
adc
xor
incl
call
dec
push
add
sbb
imul
add
add
sub
test
add
iret
pop
movsl
add
add
add
xor
lcall
add
push
mov
add
sub
pop
aaa
cmp
add
aam
pop
stos
pop
add
sarl
add
add
add
je
add
sub
ret
add
repz
cli
add
pushl
jg
ret
jle
add
add
pushl
add
cli
cmp
add
lret
add
push
add
jl
imul
mov
add
add
cmp
pushl
pushl
add
dec
pushf
shlb
add
xchg
dec
cmp
das
mov
push
arpl
call
mov
cmp
push
es
mov
inc
add
stos
push
addb
dec
sub
add
cli
and
and
push
cmpsb
add
add
je
idivb
push
or
mov
add
inc
add
jl
mov
add
and
decl
push
aaa
std
add
cmpsb
add
pop
xchg
hlt
in
jbe
adc
sub
adc
lcall
fisubs
add
xchg
mov
add
fnsave
add
in
xlat
mov
cmp
add
add
mov
and
call
xlat
addr16
push
test
add
add
popa
add
aam
pop
stos
jno
pushl
add
add
call
sti
repz
add
ljmp
add
mov
inc
add
jnp
outsl
push
pop
pop
ret
add
repnz
and
ror
mov
mov
inc
add
loop
sub
add
shll
cld
ljmp
call
add
jg
add
or
fidivrl
jns
les
and
ljmp
add
adc
scas
pop
sub
fcoml
xchg
call
repz
dec
dec
movl
mov
inc
add
add
or
sbb
pop
add
int
and
inc
add
cmp
dec
pop
nop
stos
mov
add
loope
xor
decl
push
add
lods
aaa
or
add
xchg
insl
jbe
cs
pop
lahf
cmc
sbb
ja
add
mov
insl
daa
add
add
lods
daa
add
add
lret
xor
decl
mov
call
add
add
call
push
add
push
or
add
or
jae
decl
mov
mov
add
cmp
add
push
fimuls
aad
add
mov
add
inc
add
pop
mov
ret
add
inc
add
in
xchg
mov
out
pop
inc
add
lret
sub
loopne
jae
inc
add
loope
movsl
add
add
add
ror
sarb
lods
mov
mov
add
add
outsb
repz
add
fwait
add
add
test
inc
add
xchg
add
add
mov
addb
mov
pop
add
mov
xor
add
cld
negb
add
in
ret
mov
pop
cwtl
ror
mov
data16
add
push
movb
out
push
push
add
push
jge
add
add
sbb
add
testl
add
pop
out
lret
jle
dec
ret
or
decl
and
pushl
add
jmp
add
lcall
ss
add
add
cmp
fwait
add
incl
dec
mov
inc
add
xchg
sbb
add
and
decl
jb
jl
ficomps
add
push
clc
sub
ss
add
data16
data16
jmp
shll
mov
dec
aad
add
pop
mov
int
add
ja
dec
mov
add
and
pushl
mov
mov
fisubrs
test
jo
decl
test
add
add
testl
ret
sub
fwait
js
add
outsl
int3
aas
pop
mov
add
jmp
add
mov
add
sub
and
incl
frstor
or
add
mov
cwtl
mov
js
add
adc
ljmp
adc
incl
jmp
and
add
add
mov
add
movsl
add
jmp
or
jo
incl
add
jmp
add
mov
add
jno
in
pop
cmp
add
dec
adc
lcall
add
add
push
lea
dec
sbb
pop
jg
add
add
sub
data16
incl
add
ljmp
add
add
push
add
decl
xlat
int3
pop
cmp
add
cmpsb
add
sub
add
adc
call
jmp
lcall
push
lcall
scas
mull
push
push
and
call
setle
add
add
add
fcompl
ret
outsl
and
xor
decl
xchg
out
icebp
mov
add
add
add
pusha
add
data16
push
add
add
ljmp
mov
xor
jmp
add
lret
loope
cmc
and
pushl
incl
cli
sbb
pop
jmp
sahf
movb
adc
stc
test
add
jecxz
add
add
add
cmc
or
sbb
leave
aas
mov
aaa
in
dec
popf
in
addl
mov
lods
aaa
ljmp
decl
sub
rolb
and
ljmp
pcmpgtb
jno
ljmp
inc
add
pop
cmp
ljmp
add
add
call
add
add
popf
adc
lods
push
sbb
add
and
lcall
nop
ret
add
das
add
jmp
stc
std
push
push
jmp
incl
in
jmp
and
inc
add
add
sahf
cmp
call
xchg
movsl
add
stos
out
popf
pop
xor
pop
incb
add
mov
mov
add
bound
incl
xchg
sbb
pop
sub
add
add
mov
sti
hlt
daa
add
shlb
lcall
add
rolb
add
dec
push
stc
ret
add
cmp
add
add
xor
inc
add
test
mov
add
cmp
mov
dec
push
in
sarb
add
dec
loop
adc
decl
add
sbb
add
and
ljmp
add
jno
incl
inc
add
lds
cltd
outsb
fnstsw
mov
fs
jmp
add
jo
call
add
push
add
push
add
les
das
pop
and
add
push
add
inc
add
addl
lods
cmp
jbe
jnp
add
push
mov
sub
mov
add
nop
pop
dec
mov
roll
add
add
dec
shl
mov
add
stos
icebp
mov
or
cmp
jmp
add
ret
add
add
or
add
jnp
jle
add
push
sbb
popf
lock
push
add
add
pushl
fisttpll
add
push
or
add
lcall
movsl
add
pushl
decl
dec
mov
add
add
out
lret
xlat
mov
add
mov
adc
decl
add
add
add
add
push
jae
decl
add
pop
dec
sub
mov
add
add
add
lret
movl
sub
mov
xor
lcall
jb
incl
jg
cli
mov
js
pop
mov
jno
lcall
in
imul
add
and
call
ljmp
mov
sub
cmc
xchg
push
add
ljmp
or
mov
mov
add
loop
out
cmp
add
cmp
add
bound
incl
inc
add
nop
jns
jmp
inc
add
or
add
jecxz
addb
loopne
adc
add
fldenv
add
mov
pushf
fsubrl
add
jmp
add
inc
add
push
jo
fidivrl
add
pop
lahf
dec
cli
lock
decl
addl
add
ja
movb
mov
pusha
add
mov
xor
xchg
sarl
lods
jbe
add
jmp
movsb
add
mov
add
test
imul
add
add
and
loope
jbe
call
stc
fcmovnbe
rorl
ret
xchg
pop
out
adc
inc
add
push
jecxz
loopne
dec
xchg
jl
aaa
pop
sbb
push
inc
add
jmp
popa
add
and
mov
mov
mov
pop
call
push
jo
decl
movsb
add
pop
std
enter
decl
or
loop
add
cld
jns
add
leave
cmp
aad
and
call
or
and
incl
js
daa
add
add
push
cmp
inc
add
cmp
add
inc
add
push
testl
add
add
addb
jg
add
add
aam
add
and
mov
sti
mov
add
pop
add
mov
pop
jno
pushl
fadds
jno
fchs
add
mov
add
jnp
add
or
filds
dec
popf
jmp
je
add
out
add
dec
sub
mov
incl
add
xchg
in
push
dec
pushf
fildll
add
mov
jbe
sub
add
sti
les
mov
add
cmpsl
add
xchg
leave
clc
out
pop
das
cmp
pop
cltd
xlat
iret
adc
incl
cmp
popf
outsl
mov
add
cli
mov
add
test
adc
pushl
call
mov
or
add
mov
icebp
mov
scas
cmp
out
add
decl
adc
sti
jo
ljmp
test
mov
dec
iret
and
imul
push
cmp
movl
cmpsb
add
jae
lcall
xor
pushl
jmp
cmp
xchg
mov
cmp
sets
push
mov
sarl
repz
add
pop
std
jbe
enter
mov
lcall
add
jecxz
loopne
daa
add
add
add
aam
adc
jmp
mov
push
imul
push
test
int3
mulb
cmpsl
add
ss
add
add
cmp
add
add
dec
and
incl
add
mov
add
fwait
jno
call
lcall
mov
test
scas
push
scas
xor
ljmp
cmp
add
movl
add
or
cmpsb
add
adc
add
add
jge
mov
add
mov
rep
mov
add
call
stc
mov
fucomi
insb
dec
jge
mov
not
js
int
call
push
mov
add
addb
add
add
sub
cmpsl
add
add
les
push
add
stos
sbb
or
jmp
add
add
mov
sub
addl
add
jg
add
add
loopne
xlat
and
push
enter
scas
inc
add
nop
push
rorb
cmc
fsubrl
sbb
add
xor
call
js
lea
lds
mov
addl
dec
mov
add
pop
add
ss
repnz
add
add
xor
xchg
push
add
roll
add
push
icebp
mov
in
pushf
inc
add
mov
add
or
out
inc
add
roll
add
add
fimull
dec
mov
add
dec
push
dec
mov
test
idivl
push
iret
sbb
xchg
add
add
ficomps
jle
add
mov
lret
jle
cli
stc
adc
jmp
dec
jg
pop
popa
add
test
xor
add
add
ds
pop
jno
inc
add
add
insb
xor
add
add
pop
inc
add
movl
dec
inc
add
daa
add
fildl
mov
add
dec
pop
jae
jmp
add
pushl
jns
cmp
scas
outsl
sbb
pushl
add
add
fisubrl
mov
rolb
mov
push
imul
jmp
add
push
cltd
cwtl
int
add
ficoms
movsb
add
add
incl
pushl
mov
add
push
scas
es
add
pusha
add
ss
add
aaa
fsubrs
xor
add
mov
add
incl
add
push
pop
push
add
incl
movb
ss
push
pop
jmp
jnp
add
pusha
add
movsl
add
je
add
jno
ljmp
iret
sub
add
cltd
add
inc
add
add
and
push
pop
repnz
mov
stc
je
mov
mov
inc
add
push
cli
mov
loope
fstps
pop
movb
add
repz
xchg
call
ja
dec
insb
mov
sub
add
add
xlat
and
sahf
test
imul
dec
add
mov
push
add
negl
pop
int3
cmc
addb
push
les
pop
or
dec
or
jno
jmp
mov
mov
or
faddl
mov
and
jmp
add
mov
add
pushl
lcall
or
into
add
decl
dec
movsl
add
movb
add
or
scas
aaa
xor
pop
insb
ret
add
cwtl
add
jmp
add
lods
loope
sbb
ret
add
add
lcall
cmp
call
inc
add
enter
iret
dec
out
incl
pushl
or
pushf
push
push
add
and
decl
add
add
xor
mov
xor
decl
mov
add
push
test
add
mov
add
cmpsl
add
xchg
rolb
add
add
cltd
iret
mov
inc
add
mov
add
add
adc
lcall
push
push
add
dec
test
iret
and
incl
nop
fiadds
add
add
add
lret
ljmp
xor
cmp
adc
fisubl
and
add
add
adc
lcall
stos
addl
or
mov
add
or
add
mov
add
data16
push
cmp
add
mov
fwait
cmp
mov
jnp
add
dec
cltd
xchg
loopne
cli
add
lcall
cmp
xor
out
pop
mov
out
or
sbb
mov
jl
add
add
pop
mov
xchg
xchg
jo,pt
add
add
add
cmp
inc
add
mov
add
add
xor
add
imul
add
push
add
incl
push
pop
or
ja
aam
add
add
lock
popl
jbe
jae
pushl
add
push
add
cmpsl
add
sti
add
add
add
inc
add
std
rorl
pop
js
add
inc
add
add
lcall
fldcw
pushl
add
jmp
sbb
test
pop
xor
cmp
add
add
add
js
add
loopne
lock
xchg
nop
inc
add
push
cli
add
jmp
push
test
stc
data16
decl
hlt
addl
cmp
imul
loop
sbb
adc
ljmp
outsl
daa
add
cld
and
jns
add
add
mov
movsl
add
add
cmovge
jmp
scas
push
pop
add
push
mov
roll
add
ret
add
push
sub
jge
add
add
adc
call
pop
mov
add
test
inc
add
adc
inc
add
lret
fisttpll
cmp
mov
and
jg
out
push
fs
rclb
mov
stc
into
lret
sbb
add
jg
xchg
call
push
add
lock
dec
push
scas
shrl
push
add
addl
aad
fcomps
mov
imul
xchg
lret
add
incl
add
imul
or
sti
call
add
mov
push
mov
shll
incl
add
daa
add
adc
incl
add
cmc
aaa
pop
jecxz
inc
add
aaa
aas
js
add
ds
outsl
add
jmp
add
or
add
cwtl
sub
ja
add
addr16
add
add
rolb
add
pmaxsw
dec
cmp
add
adc
ljmp
xor
pop
loop
sub
push
add
mov
add
decl
add
sahf
fiadds
add
imul
cmpsl
add
lock
movsb
add
es
ficoms
add
sbb
sub
push
loope
cmpsb
add
add
ljmp
mov
shrl
add
add
dec
push
out
hlt
jg
xor
add
and
lcall
mov
add
inc
add
xchg
movb
xchg
faddl
movsb
add
fsubrs
add
inc
add
sub
js
cmpsl
add
loop
xor
call
out
xchg
incl
fimuls
add
call
jmp
xchg
loopne
jp
add
repnz
sarl
enter
ss
stos
push
sub
add
call
rolb
add
popf
addl
inc
add
lcall
cs
pop
movb
ljmp
pop
add
add
frstor
or
mov
decl
add
popa
add
hlt
mov
add
paddb
aas
roll
xor
add
xchg
xchg
in
in
push
and
decl
add
lret
add
add
aad
add
add
test
outsb
addl
add
sbb
add
addl
add
cmp
call
cmp
rol
add
xor
pop
shlb
mov
add
adc
pushl
add
xlat
or
ljmp
add
cwtl
sbb
cltd
sti
sub
add
lds
fisubrs
mov
cmpsl
add
inc
add
mov
add
add
jmp
add
ljmp
mov
add
sarl
push
pop
notl
call
test
pop
add
and
dec
lods
lret
data16
xor
fdivrp
shll
cmc
cmp
lcall
add
jmp
decl
int
dec
roll
addb
add
fcoms
inc
add
add
por
mov
add
scas
lods
fsubrs
loope
mov
loope
pop
fisubl
dec
fnstenv
dec
aaa
outsb
rolb
ret
add
notb
lcall
pushl
incl
add
daa
add
aaa
pusha
add
pop
xchg
aas
test
inc
add
mov
jle
push
jmp
decl
jmp
add
add
add
xor
dec
mov
xchg
inc
add
mov
add
add
xchg
data16
ljmp
pop
cmp
add
into
addb
pop
and
lcall
insb
jae
incl
add
mov
mov
sub
add
add
into
add
jmp
bound
pushl
add
jno
decl
push
popf
sub
push
xchg
xchg
sub
ret
xchg
lcall
add
sbb
add
mov
add
shrb
fisubrs
add
inc
add
sbb
decl
or
cmpsl
add
add
mov
pop
fwait
in
xchg
xor
jmp
add
add
das
push
add
mov
int
add
add
xchg
sahf
addl
add
call
add
push
cmp
mov
add
mov
adc
dec
loopne
lahf
xchg
insl
mov
imul
jg
sub
adc
cmp
and
ret
in
fwait
sub
xchg
dec
out
and
lcall
cmc
sti
pop
mov
js
add
add
add
cmp
xor
pushl
pop
pop
out
aas
pop
inc
add
fdivrl
out
rcll
mov
sbb
stos
sarb
adc
jmp
add
add
pushf
add
dec
mov
ss
add
add
decl
add
add
movb
add
jp
add
sub
addl
add
add
cwtl
int3
push
std
cmp
push
add
add
push
add
idiv
or
bound
pushl
mov
call
out
in
dec
cli
or
pop
inc
add
xor
add
leave
ljmp
add
pop
je
adc
aas
inc
add
lcall
add
repnz
add
sbb
clc
sub
dec
arpl
lcall
add
add
mov
roll
add
or
mov
fnsave
addb
or
jb
jmp
add
sub
add
popf
pop
lock
and
jmp
add
mov
repz
aas
and
ljmp
add
xlat
fnstsw
xor
shr
mov
or
inc
add
dec
jnp
test
mov
mov
add
std
dec
lret
pushl
incl
inc
add
add
loope
mov
dec
cmp
sub
add
lret
xor
lcall
add
inc
add
js
dec
iret
inc
add
xchg
dec
cmp
mov
jb
cmp
xor
incl
or
add
xor
decl
mov
add
sbb
js
and
jmp
add
pop
test
in
int
add
push
add
roll
and
cmp
push
add
cld
add
mov
add
add
jo
dec
ljmp
add
test
and
lcall
cmp
add
push
add
lcall
add
sahf
bound
jmp
push
add
addb
jle
add
dec
mov
push
add
add
jmp
sub
add
add
add
pop
mov
sbb
sahf
mov
loop
xor
sbb
mov
lahf
dec
push
mov
movl
xlat
jne
sub
add
shlb
divb
sub
out
jno
pushl
cmpsl
add
ficompl
shll
hlt
jns
sahf
or
add
mov
add
ret
add
add
sub
int
add
sbb
push
add
push
add
leave
and
lcall
add
fnsave
loope
push
add
lds
jmp
sti
in
push
add
lea
adc
call
pushf
xchg
mov
add
push
pop
imul
in
ds
mov
iret
fnstcw
add
aad
and
add
stos
adc
pushl
ja
inc
add
push
add
mov
inc
add
sbb
pop
push
sahf
int3
ljmp
in
int
xchg
pop
mov
add
jno
pushl
or
add
add
cli
adc
std
addb
add
rorb
in
push
add
push
add
add
push
add
decl
or
add
pushf
xlat
push
ds
jp
or
adc
lcall
rcl
fmull
in
ja
and
call
inc
add
add
test
scas
mov
add
add
out
adc
incl
cmp
addl
add
add
pusha
add
mov
push
add
sub
outsl
stos
sbb
ljmp
mov
loope
int
add
mov
jmp
add
mov
stos
cmc
push
addb
mov
add
lock
in
lret
mov
jp
and
decl
addb
lret
cmp
shlb
xor
ljmp
pushl
add
jg
adc
sti
fsubrl
inc
add
sub
aad
add
loope
jb
lcall
imul
inc
add
push
add
adc
decl
and
jmp
loop
xor
incl
add
add
lea
sbb
rorb
nop
fstps
jge
xchg
xchg
inc
add
pushf
les
xchg
icebp
fistps
lahf
cmpsb
add
add
jmp
pop
out
mov
add
aad
ja
cmpsb
add
std
and
mov
or
std
jne
add
dec
inc
add
mov
add
add
aad
cmpsl
add
mov
loopne
cmpsb
add
movl
addr16
data16
mov
xchg
add
xor
jmp
add
pushf
icebp
inc
add
icebp
dec
dec
idivb
jae
jmp
add
and
lcall
je
add
incl
pushl
mov
add
incl
insl
sbb
add
mov
push
xor
add
xor
jl
cwtl
xor
ds
jmp
add
mov
lock
lret
push
add
fldl
ljmp
outsb
mov
add
mov
movb
inc
add
mov
xor
mov
cmc
adc
call
incl
add
jg
jne
lods
and
out
push
sbb
in
or
add
ss
add
add
pop
adc
incl
push
mov
dec
push
stc
out
lods
adc
incl
add
idivl
jecxz
and
jmp
push
pop
dec
sub
fnsave
add
pusha
add
int
lahf
jle
pop
rolb
in
xchg
loopne
in
psrlw
add
int
add
add
lcall
cld
push
ret
addb
ja
add
add
xchg
aas
xor
jmp
mov
mov
push
add
fwait
or
xchg
push
add
jge
cmp
add
inc
add
add
pop
dec
and
jge
sbb
loop
push
push
cs
addl
bound
pushl
aad
add
mov
add
ljmp
jge
add
dec
divb
cmp
sbb
xchg
dec
jne
add
stos
add
jmp
ljmp
push
inc
add
cmpsl
add
outsb
popa
add
fnstsw
call
push
arpl
incl
lcall
int3
lahf
and
jno
ljmp
test
adc
incl
push
xor
incl
push
jo
lcall
divl
add
lods
out
and
jmp
add
aad
mov
xchg
lods
cmp
jmp
add
add
cli
cltd
and
call
inc
add
scas
cld
lret
xchg
mov
insb
xchg
repnz
jno
jmp
add
pop
add
pushl
inc
add
inc
add
add
mov
add
inc
add
decl
pop
stos
xor
and
incl
add
add
