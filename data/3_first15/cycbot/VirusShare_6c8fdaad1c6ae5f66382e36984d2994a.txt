xlat
jl
dec
push
rcrb
and
movsl
out
jae
add
lods
xchg
bound
mov
xchg
xchg
or
lret
push
pusha
add
outsl
cwtl
mov
jno
rep
sarl
cltd
inc
movb
add
add
jg
sub
jne
add
pop
rolb
mov
fcoml
int3
or
xor
movsl
jle
out
xor
lods
loope
push
jp
push
ss
ret
mov
add
and
jg
lea
addl
inc
add
cwtl
jne
jp
dec
jb
fs
mov
inc
add
icebp
xor
adc
add
imul
shll
add
pusha
add
out
sbb
pop
inc
push
or
rcr
jae
rcl
sub
aad
and
pop
popa
mov
mov
or
adc
xchg
push
lods
pop
sub
ljmp
jl
add
push
push
push
aaa
lock
dec
xor
addb
add
ss
add
jle
test
popf
out
or
mov
xlat
out
stos
and
add
add
bound
mov
and
inc
mov
add
aam
pop
mov
pop
ret
ret
test
or
mov
jne
push
push
mov
or
dec
inc
movsb
loopne
inc
pop
jno
add
add
addr16
jno
iret
pop
jle
jmp
je
or
add
xchg
aam
sub
movsl
inc
pop
jb
lods
dec
sahf
dec
rolb
mov
sbb
xchg
std
repz
movsl
aam
dec
add
fdivr
aad
jmp
fidivs
jo
gs
popa
jmp
jle
sub
lret
push
ja
mov
mov
xor
sar
movsl
jge
xchg
dec
ret
cmp
cwtl
or
dec
sarl
pop
mov
pop
and
sbb
pop
mov
add
gs
dec
sub
push
popf
imul
mov
jnp
popf
repz
add
lds
xchg
cmp
pop
into
push
in
xchg
jge
sahf
dec
fs
push
mov
stos
push
dec
xchg
idivb
and
out
lret
mov
movl
lcall
add
xchg
push
push
xor
data16
xchg
int
loopne
in
bound
xchg
fcompl
mov
js
mov
pop
cli
aas
and
xchg
or
fcmovnu
stos
dec
inc
outsl
rorl
iret
push
loopne
add
imul
insb
shrb
xchg
mov
and
sbb
aad
pop
push
inc
jnp
add
mov
mov
adc
add
xchg
insl
repnz
stos
test
mov
ret
jg
popf
lahf
mov
movsl
add
jecxz
push
lock
cmp
xor
add
fs
ret
dec
loope
sti
and
nop
lret
mov
notb
pop
adc
mov
ror
xlat
stos
or
rcll
repz
pop
push
es
mov
repz
cld
lahf
hlt
xor
data16
sub
aas
xor
mov
mov
add
jg
sub
dec
inc
push
sub
xlat
stos
imul
push
sbb
and
daa
jge
hlt
xchg
or
add
mov
icebp
cmp
addb
mov
add
popa
scas
pop
push
into
mov
flds
fstl
inc
add
loopne
ds
mov
or
icebp
arpl
or
jg
jbe
aas
lcall
inc
addb
test
addr16
xlat
dec
addr16
aam
add
fbld
cmpsl
dec
xor
mov
inc
add
cmp
add
out
mov
xchg
adc
inc
add
xor
add
inc
add
mov
xchg
pop
popa
stc
mov
out
imul
mov
loopne
call
jne
mov
rorl
inc
in
cmc
cmp
das
or
add
cmp
push
comiss
sub
and
inc
add
inc
add
jae
fwait
cld
movb
jns
arpl
xchg
int3
push
ret
outsb
rolb
push
sub
les
mov
int3
mov
mov
pop
inc
add
xchg
cli
mov
ret
pop
cmc
adc
pusha
add
imull
cld
dec
inc
add
pop
imull
adc
jecxz
lea
rolb
mov
dec
je
xor
jae
jge
add
xchg
popa
loope
pop
push
jmp
add
or
xchg
jbe
test
or
sbb
sbb
lret
out
das
pushf
jne
jl
mov
int3
xor
push
xchg
add
pushl
sahf
cld
inc
add
jp
iret
xchg
hlt
sub
and
in
sbb
ljmp
cmp
roll
lahf
jmp
pushf
insb
imul
push
jg
pop
mov
lods
ljmp
add
xchg
sarl
mov
lds
push
dec
loop
outsb
stos
int
mov
adc
lock
jns
cmp
jge
add
pop
aas
cli
jnp
or
and
dec
sub
sub
sbbl
xchg
das
roll
pop
dec
repz
and
test
sub
sub
jns
pop
jb
mov
pusha
add
mov
arpl
or
push
push
add
mov
and
sbb
sbbl
add
sbb
cmp
call
mov
sbb
in
cld
gs
push
mov
mov
ret
lret
js
or
cld
data16
inc
imul
adc
push
ret
fnstcw
sbb
in
and
lds
sbbl
daa
ficompl
rolb
push
mov
call
mov
push
mov
and
iret
or
jbe
add
add
iret
mov
add
cli
cli
cltd
outsb
mov
add
xor
js
nop
lea
cmc
xchg
jle
scas
sbb
cmp
fists
push
add
sbb
scas
sub
dec
test
jp
ret
xchg
add
aas
jne
lcall
lret
fwait
mov
dec
cltd
mov
stos
and
lock
lock
out
push
add
fs
pop
addr16
add
test
outsb
sub
push
out
repnz
xor
aas
dec
mov
mov
xchg
scas
pop
jne
nop
or
mov
push
fdivs
sbb
sbb
stc
or
dec
cmp
cmp
push
inc
in
jne
and
popf
dec
popa
ljmp
jnp
xor
mov
insb
aam
ret
xchg
cld
ds
cltd
jl
add
jns
add
jmp
cmpsl
mov
add
and
pop
lods
jg
jmp
jnp
scas
mov
inc
add
nop
cli
add
mov
add
enter
mov
leave
jmp
mov
into
or
push
mov
xor
ret
arpl
add
add
pop
cmp
pushf
jnp
sub
ss
ljmp
inc
jecxz
popf
push
daa
adc
pushf
mov
hlt
inc
add
ficoms
js
push
push
mov
add
scas
inc
add
arpl
push
scas
popa
pop
pop
mov
push
gs
mov
addb
pushf
les
data16
fdivrl
add
pop
adc
in
mov
push
and
out
add
or
mov
push
sbb
and
or
gs
mov
mov
je
ja
push
add
or
incb
jne
nop
int3
outsl
mov
cld
out
popf
pop
insb
cwtl
hlt
cmp
jb
add
or
sub
test
push
cmp
insl
xor
add
mov
testl
mov
xor
fldenv
add
addb
mov
out
add
push
outsl
sbb
enter
pop
mov
xor
je
mov
and
std
in
sti
pusha
add
sub
adc
dec
pusha
add
popf
adc
leave
scas
dec
aad
fists
inc
add
out
dec
pop
push
mov
cltd
xchg
push
inc
add
add
lcall
jne
add
mov
adc
int3
popf
sub
dec
sbb
mov
add
rol
add
cmpl
add
push
sbb
and
add
ret
xchg
jmp
stc
js
outsl
sub
xchg
inc
add
loopne
or
test
cltd
dec
lock
cld
in
jns
daa
pop
sbb
xchg
cmp
dec
bound
sub
js
ss
xchg
je
mov
push
inc
aam
ret
fwait
dec
test
inc
pop
dec
xchg
sbb
sub
sub
add
jmp
xchg
rcl
xchg
mov
jns
stc
jo
into
adc
loopne
fidivs
shrl
add
cs
xchg
push
lods
cmp
lds
sbb
inc
add
arpl
ljmp
dec
stos
lcall
jg
cld
loopne
jle
or
mov
sti
or
mov
add
ret
mov
add
outsl
mov
adc
bound
xchg
xchg
sub
dec
ljmp
dec
vmovaps
add
sub
aas
mov
pop
mov
adc
testl
addr16
loopne
cmpsb
mov
pop
lcall
in
mov
jne
xor
clc
aad
fidivl
xchg
movsl
pop
mov
jns
add
pop
scas
xchg
in
das
cmpsl
jge
xor
rcl
add
mov
mov
popa
aad
clc
xchg
sbb
sub
jo
dec
or
add
add
popa
push
les
popa
cmp
je
in
add
sbb
add
out
pop
fldenv
mov
mov
punpcklwd
in
fistps
pop
jge
mov
fsubl
addb
sti
arpl
cmp
fisttpll
ror
pop
mov
pop
in
orl
add
das
sub
mov
add
call
ja
jg
add
cltd
imul
fsubrs
add
test
add
cmp
mov
dec
fidivs
dec
repz
int3
mov
mov
dec
xchg
add
xor
test
je
adc
mov
and
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
cmpsb
sarl
outsb
cmp
xor
or
adc
das
dec
mov
push
xor
ja
stos
mov
push
push
pop
inc
sbb
test
push
xor
popf
cli
push
enter
sub
xor
or
faddl
add
mov
fs
and
adcl
in
into
adc
cltd
sbb
jbe
push
sub
adc
add
push
xlat
in
and
mov
fisubrl
inc
in
and
rclb
scas
push
scas
sbb
push
adc
mov
add
pop
xor
push
dec
pop
or
pop
fiadds
mov
movsb
sti
dec
fcomip
jl
int
movsl
mov
std
popa
ficompl
sahf
xchg
arpl
add
xchg
mov
sbb
mov
fnstenv
hlt
addb
mov
xchg
out
cld
mov
adc
je
dec
xor
mov
call
hlt
pop
mov
mov
inc
xchg
scas
jp
sahf
mov
xchg
mov
mov
mul
and
add
shlb
xor
mov
add
mov
dec
mov
mov
lret
mov
and
out
ret
out
push
arpl
call
sarl
and
fucomi
dec
push
cmc
aas
push
bound
or
cli
jge
push
arpl
mov
add
mov
add
sahf
clc
cmp
xchg
add
add
xchg
icebp
sbb
add
in
adc
add
xchg
mov
jecxz
insl
pop
sbb
adc
pop
mov
ds
insb
mov
jo
sub
inc
add
xchg
rcrl
mov
add
in
adc
incb
adc
add
sbb
fwait
leave
in
popf
cmp
cmp
aad
or
xor
int
scas
repz
xor
dec
mov
xchg
lock
lea
mov
sbb
mov
call
rolb
mov
ret
push
add
lods
mov
sub
js
jecxz
out
cmp
lods
xor
cmpsb
test
add
inc
test
xchg
jbe
cs
add
mov
addr16
mov
jns
inc
in
inc
out
mov
push
add
stc
pop
stos
dec
outsl
adc
cmpsb
mov
out
push
lret
imull
sti
pop
dec
cmp
ja
add
mov
in
add
sub
inc
add
nop
sub
xchg
push
fucomip
movsb
dec
cmp
jmp
das
sub
xchg
scas
movsb
or
int3
sti
xchg
add
jne
dec
mov
rcrl
cmpsb
xchg
mov
bound
or
jmp
insl
add
fidivs
sub
in
jge
sub
popf
or
sub
test
cmp
sbb
std
jnp
loop
pop
pushf
jmp
push
or
mov
push
mov
add
mov
fcomps
and
mov
mov
add
and
loopne
or
add
aam
es
mov
movb
iret
and
push
dec
pusha
add
cltd
push
sub
dec
xchg
xor
mov
in
jo
push
push
pop
ja
imul
add
cltd
pop
insl
or
inc
add
mov
jnp
subl
xchg
rolb
mov
aam
out
push
dec
aaa
es
outsb
test
sub
mov
popa
stc
mov
sub
lock
movb
fisubl
add
out
lock
lods
or
loopne
inc
and
arpl
dec
inc
and
aad
xlat
ds
jle
out
in
lahf
sub
adc
sbb
mov
push
negb
int3
rolb
imul
movb
mov
inc
vmread
add
xlat
adc
mov
outsl
adc
add
push
jl
dec
ljmp
or
sbb
aas
mov
xchg
fwait
xor
add
aas
push
popa
ljmp
setge
pop
mov
das
mov
add
dec
ja
ljmp
sbb
bound
movsl
jnp
cld
nop
shrl
cmc
icebp
pop
lcall
pop
pop
negl
pusha
add
adc
int
sbb
pusha
add
imul
addr16
out
and
stc
fcoms
jb
aam
mov
je
popf
loopne
dec
loope
inc
add
dec
or
dec
sarl
ret
ja
nop
cli
pusha
add
or
int3
addb
and
push
jle
popa
push
add
add
les
inc
sub
arpl
cmpsl
jle
push
add
jne
add
jae
imul
pop
and
lods
mov
call
pop
add
xchg
ret
push
push
lods
ret
scas
push
inc
cmp
fwait
icebp
fisubrs
sub
outsb
bound
sbb
in
movsl
push
sti
adc
addb
add
mov
insl
mov
into
push
out
cs
add
addb
fimull
lcall
sbb
adc
aad
fwait
popa
in
and
ss
pushf
mov
int
push
ret
sbb
pop
and
mov
fs
jge
add
ja
cs
pop
inc
xorl
lds
add
cmp
je
aas
or
and
jb
add
and
jle
sub
mov
cld
je
add
test
inc
jle
sahf
or
stos
push
aad
lods
mov
push
xor
jae
sbb
jbe
into
jge
mov
add
inc
add
push
cmc
std
add
sub
mov
dec
decb
ds
jmp
loop
std
mov
push
dec
mov
add
fldt
fwait
add
cwtl
push
add
outsl
bound
shll
pop
adc
mov
lods
mov
push
adc
fcomps
int
ljmp
add
lds
std
mov
push
out
hlt
pushf
lock
or
add
or
add
ss
push
lds
sarl
cltd
pop
push
mov
inc
add
add
mov
add
outsl
jg
xchg
add
mov
ror
outsb
stos
dec
jmp
jg
pop
cmpsb
inc
xor
mov
sbb
das
pushf
imul
sub
ds
out
addl
inc
add
cli
scas
ret
lds
push
and
sub
inc
out
cmp
ret
cltd
mov
add
mov
sbb
cltd
lret
add
jmp
jmp
add
and
xor
adc
loopne
adc
clc
xor
rcl
xchg
inc
mov
out
nop
test
cld
cwtl
inc
add
fs
xchg
int
lods
sbb
movb
add
add
dec
mov
push
mov
cmpsb
mov
sub
outsb
add
add
mov
and
or
cmp
fisttpll
cmp
jno
sbb
aas
popf
lahf
cwtl
test
or
lret
pop
mov
clc
push
and
out
sbb
not
jg
sub
push
gs
ficomps
ds
repz
xlat
adc
add
popf
fs
loopne
push
dec
cmp
push
sti
inc
add
popl
and
pop
imul
add
jae,pn
cmpsl
movsl
sahf
repnz
ficoms
sub
jne
pop
stos
and
shll
dec
adc
cmp
rcl
ja
lods
pop
sub
negl
cmpsb
rcr
pop
cmpl
push
lds
pop
add
add
int
cs
ret
lret
add
clc
lds
pop
pop
loop
add
in
es
mov
add
sbb
mov
movsb
es
scas
shll
add
jge
adc
inc
mov
mov
adc
and
sbb
loopne
cwtl
mov
jae
into
rolb
std
push
andl
enter
sbbl
pop
ret
mov
add
and
mov
out
cmp
add
or
aaa
xor
rol
lret
adc
int
dec
lret
mov
dec
cmp
mov
mov
and
inc
adc
cli
mov
xchg
jle
js
and
push
hlt
mov
lea
mov
and
sub
add
pusha
add
fwait
ret
push
jle
xchg
xchg
inc
jnp
inc
jg
sub
fwait
in
sarl
add
mov
sub
lods
das
mov
xor
nop
dec
dec
jbe
js
sub
sbb
sbb
jb
push
pop
sub
arpl
cli
cld
push
push
xor
mov
dec
ja
pushf
stc
mov
cmp
mov
xchg
dec
and
mov
call
inc
add
cmc
sahf
and
movzbl
sbb
add
sub
arpl
lcall
add
mov
daa
mov
mov
add
int3
sub
add
add
mov
pop
ljmp
cmp
cmp
fldt
xchg
mov
dec
mov
push
xchg
adc
pop
ja
mov
add
push
pushf
test
addb
inc
test
push
cmpsb
addb
std
pop
mov
mov
call
int3
inc
stos
or
or
pushf
lock
cld
mov
ret
adc
and
jo
mov
movsb
aam
xchg
pop
adc
add
push
add
cmpsl
fmul
mov
jno
add
mov
add
jg
add
test
andl
add
push
and
in
push
xchg
mov
outsl
add
insl
jmp
ror
add
loope
add
sbb
lret
test
repnz
iret
scas
mov
lds
inc
loopne
loop
enter
add
bound
int
fs
inc
add
xlat
idivl
push
mov
movsl
addb
xchg
jno
frstor
decb
lods
dec
call
mov
lret
movsl
mov
mov
add
vmread
and
dec
addr16
mov
fiadds
jnp
es
mov
or
outsl
inc
add
scas
outsl
rcl
enter
test
fs
mov
pop
addr16
add
dec
inc
push
stc
arpl
xor
dec
pop
mov
mov
push
push
xlat
out
or
and
push
sub
and
test
js
out
cmp
stos
push
lret
pop
pop
popa
fbstp
in
rolb
lds
dec
fdivrs
mov
test
stc
addb
cmp
pop
xor
or
jno
add
mov
sarl
jecxz
push
lds
outsl
test
pop
cmpsl
aad
jns
adc
xor
jno
add
add
sub
addb
dec
mov
jp
mov
add
hlt
out
xchg
call
aad
xchg
leave
sbb
add
mov
mov
fs
sub
add
cmc
inc
and
push
fsubs
jecxz
mov
add
push
cmpsb
test
jno
jecxz
xlat
jnp
jns
xor
add
pop
mov
or
inc
add
push
add
push
cmc
jo
test
xor
insl
inc
add
sbb
push
add
stos
stos
mov
call
inc
add
ficomps
xchg
sbb
mov
mov
subl
inc
jge
pop
mov
imull
iret
pop
subl
add
clc
mov
std
dec
addr16
int
inc
add
add
add
sub
add
test
cmp
arpl
lods
mov
push
cmp
dec
les
sub
or
sbb
xchg
rorb
cs
stos
mov
rcr
xor
rclb
je
daa
push
nopl
scas
stc
pop
adc
sar
adc
fistpll
jmp
cld
sbb
inc
ret
ret
mov
adc
push
add
jg
add
push
rorb
repz
cwtl
jns
rcr
es
pop
mov
add
lcall
or
insl
std
dec
fdivrs
mov
loope
out
ret
jecxz
pop
cli
push
jmp
sbb
pop
jb
push
jne
cmp
xor
add
push
aad
mov
pusha
add
sbb
or
repnz
add
push
cli
test
add
clc
jnp
sahf
stos
sub
repz
clc
pushf
in
adc
push
ret
cld
adc
outsb
jmp
adc
cli
xchg
mull
push
std
pop
push
fcomp
pop
xor
dec
fmuls
and
inc
cltd
fwait
jecxz
into
mov
scas
jno
out
sub
lods
rcl
das
sbb
imul
cmpsl
in
or
fucomip
inc
add
sbb
out
inc
sti
inc
cmp
rcl
bound
pop
add
cltd
in
xchg
out
cs
or
sti
jnp
cmp
adc
scas
xchg
pushf
mov
mov
cwtl
btc
test
int
mov
pop
mov
xor
pop
fnstsw
add
testb
clc
mov
or
add
std
mov
add
lcall
loopne
pop
fwait
mov
movsl
sbb
cld
shlb
fiadds
and
icebp
loopne
xor
popf
int
push
xor
cltd
inc
das
inc
mov
stos
jb
sbb
repnz
push
mov
data16
or
ds
jmp
stos
cli
shll
add
add
pop
idivl
dec
out
aas
adc
jge
lahf
sbb
mov
pop
mov
fdivrp
or
pop
adc
jb
jmp
pop
or
and
mov
push
insb
mov
iret
outsl
loopne,pn
ss
mov
das
push
and
cmp
add
add
push
add
xor
cmp
add
imul
and
lret
and
or
pop
jg
aad
inc
add
scas
dec
imul
sahf
pusha
add
add
adc
mov
leave
adc
movb
or
add
add
jo
into
mov
cmpsb
loopne
ffree
add
ja
mov
mov
sti
and
jbe
sub
add
mov
lahf
das
out
adcl
push
dec
sub
pop
dec
int3
fisubs
push
ss
jp
add
cmp
xchg
xchg
adc
addr16
xlat
pop
mov
xor
inc
add
shlb
mov
mov
mov
inc
add
cld
mov
or
mov
push
add
cmp
mov
sub
bound
inc
add
gs
call
data16
cmp
jnp
mov
outsl
loopne
int3
stc
cmc
je
jmp
bound
xor
add
jmp
addb
lock
dec
aas
and
dec
push
adc
rolb
je
add
loope
pusha
add
mov
mov
shll
inc
loope
test
xchg
bound
cmpsb
xlat
push
push
jne
or
les
leave
and
shll
mov
sub
in
mov
fdivs
push
and
loopne
cwtl
ljmp
jne
nop
xchg
or
inc
daa
mov
test
lahf
lcall
mov
push
pop
mov
loope
ret
push
sbb
push
mov
repnz
mov
lret
fwait
push
add
mov
mov
add
pushf
ret
add
pmulhuw
test
add
jb
push
dec
xor
cmp
add
cld
cs
hlt
test
mov
lea
mov
pop
mov
mov
addb
cmp
add
mov
add
pop
lcall
sarl
das
adc
push
ljmp
notb
adc
inc
add
insb
ret
and
mov
lahf
push
add
cmp
pop
pop
je
jo
sbb
inc
loope
jg
jecxz
testl
test
leave
out
dec
movb
add
jbe
dec
fimuls
xor
into
mov
xchg
cmc
mov
add
in
mov
pushf
cwtl
int
sub
mov
loope
sub
int
or
into
push
adc
add
sahf
push
mov
shll
mov
int
and
rorl
adc
sub
or
mov
jmp
adc
mov
push
jge
mov
cmpsl
es
sbb
sub
jno
xor
pusha
add
mov
fmul
dec
pop
sbb
jle
addr16
cmpsl
push
push
dec
rcll
jmp
mov
scas
mov
sbb
add
shrl
aad
rorl
mov
cmp
pop
cld
xor
dec
test
or
ljmp
add
test
dec
outsb
xor
cmpsl
mov
pop
lods
ljmp
loope
adc
fs
or
xchg
loop
jecxz
aad
aam
mov
in
daa
mov
call
inc
add
iret
xchg
mov
mov
lds
cwtl
in
ds
jp
aas
fwait
rcll
gs
repz
inc
add
or
lock
insl
pushf
dec
or
fdivl
add
push
mov
in
sbb
xor
add
cs
cmp
add
fs
mov
inc
add
pop
imul
add
nop
pop
data16
imul
push
push
mov
out
jp
aaa
jg
jg
jmp
cmp
mov
das
pop
out
pop
dec
clc
jo
iret
imul
jg
mov
fidivs
add
int
pop
dec
inc
add
mov
mov
or
mov
jnp
push
or
testl
roll
mov
xor
fmul
mov
addb
lcall
es
or
push
outsb
add
mov
mov
jbe,pt
add
popa
pop
addb
mov
les
bound
sbb
push
xor
and
es
ljmp
imul
popa
les
push
mov
mov
dec
dec
adc
mov
das
repz
into
ds
mov
inc
xchg
repnz
mov
filds
add
inc
mov
and
jns
or
cmp
mov
add
push
xlat
data16
out
mov
sub
sub
dec
cmc
dec
addb
dec
in
jne
loope
int3
stc
stos
sub
xor
add
out
cltd
movsb
pop
imul
sarl
lret
dec
imul
clc
pop
jmp
repnz
idiv
bound
jne
dec
add
jg
xchg
jecxz
rolb
rolb
cs
bound
ja
push
inc
mov
neg
lcall
dec
stc
jp
shl
loope
aam
pop
xchg
data16
hlt
dec
sub
sub
mov
movb
mov
push
pushf
adc
sbb
add
add
add
cmp
arpl
mov
popf
mov
das
mov
or
sub
add
aas
inc
add
repnz
loop
or
mov
dec
push
and
jmp
xchg
gs
add
test
or
mov
xlat
out
push
mov
mov
push
add
jo
nop
clc
ds
lds
or
out
int
js
rorb
sub
inc
les
or
stos
dec
or
add
daa
stc
cmp
dec
subl
push
add
fldl
cmp
mov
leave
fnsave
add
test
sub
addb
mov
add
rcrl
rclb
xchg
mov
mov
ret
fldl
add
cmp
cmpsb
fiadds
inc
add
lret
test
cmp
lods
jne
add
jnp
js
js
insl
das
mov
adc
call
dec
mov
add
dec
xor
add
addb
jl
lods
jno
add
push
xor
repz
dec
pop
pop
cld
leave
jne
jmp
add
cmp
mov
jg
lret
jmp
jmp
inc
add
sub
repz
fbstp
pushf
fwait
push
mov
add
int
xor
push
and
xlat
leave
mov
push
inc
add
mov
xchg
jge
call
mov
lretw
fldl
mov
cmp
add
cmp
push
or
adc
sbb
hlt
add
popa
in
cmp
and
mov
mov
in
mov
dec
or
add
mov
add
pop
adc
in
xor
pop
in
les
rdtsc
bound
push
in
inc
fstpt
add
mov
jmp
in
mov
lcall
mov
dec
push
test
xlat
cmpsb
xchg
push
je
repnz
pop
xchg
insb
dec
cmp
in
test
adc
jp
ret
add
cmpl
loopne
add
das
cld
pop
push
push
aas
push
sbb
jno
mov
jae
inc
add
addb
jbe
movsl
xor
xor
iret
inc
clc
dec
testb
push
add
push
aaa
repnz
add
and
add
mov
scas
mov
hlt
decb
mov
add
mov
and
inc
xor
push
jp
mov
addr16
push
mov
mov
add
mov
add
mov
outsb
lea
mov
and
add
inc
add
or
ds
mov
inc
add
xchg
inc
add
mov
add
stos
jge
test
xchg
add
xor
sub
push
add
fdiv
lods
shrb
inc
add
loop
jae
addb
jmp
mov
mov
xlat
sub
xchg
sub
sbb
jb
sbb
mov
out
pop
nop
inc
add
xchg
aas
inc
add
aas
cmp
pop
popf
mov
enter
movsb
dec
rclb
adc
insb
xchg
xor
sbb
or
add
out
leave
xor
mov
fsts
movsb
mov
fistpl
add
push
xchg
mov
add
popa
movsb
sub
bound
xchg
cld
inc
mov
add
sahf
dec
loope
push
test
shlb
cmp
sbb
add
add
es
xlat
mov
push
add
and
xor
loop
cld
jg
cld
mov
xor
pop
mov
movb
xchg
adc
add
mov
repz
mov
cmpsb
push
mov
lahf
xor
pop
pop
scas
outsl
mov
add
push
popf
dec
fwait
roll
mov
loopne
xor
inc
faddl
iret
outsl
cmp
shrl
gs
xchg
dec
push
jp
incl
add
add
iret
hlt
add
mov
in
in
movsb
and
in
faddl
ljmp
lods
test
mov
stc
jl
xchg
sahf
scas
int
int3
cmp
add
int
push
loopne
loopne
mov
or
push
nop
add
xor
pop
mov
dec
push
jno
negb
pop
popf
and
adc
sub
lcall
jbe
adc
movb
loop
ja
cmp
xor
jg
add
loope
out
sub
push
add
leave
dec
add
test
scas
addb
add
jo
xlat
test
sbb
sub
add
or
int3
ret
rcr
add
and
add
outsb
xor
add
movsl
in
lret
push
add
pop
int
xor
mov
aas
dec
add
call
fld1
enter
popa
xor
scas
xor
pop
jns
lret
mov
aam
lds
push
or
repnz
pop
int
jae
ja
push
xor
jae
cmp
cltd
mov
xchg
push
fsubrs
pop
das
lret
fs
int
fwait
or
add
xchg
cld
cs
ljmp
std
mov
adc
add
add
std
add
insl
out
hlt
adc
xchg
movb
hlt
fwait
test
pop
idivb
and
popf
in
fistps
cmp
int
pop
pop
dec
or
add
push
cwtl
cmp
scas
mov
fwait
and
mov
add
es
add
mov
test
into
push
or
test
xor
mov
mov
sarb
in
mov
dec
jge
jo
pop
jle
add
xor
rolb
pop
mov
cwtl
mov
add
movsb
dec
mov
in
or
in
leave
repnz
fsubrs
inc
add
stos
arpl
and
insl
sub
fisttps
xchg
aam
fs
lcall
jl
lret
mov
xchg
push
ds
push
mov
outsb
loope
mov
xchg
adc
es
lock
jmp
in
add
fwait
icebp
sub
xchg
outsl
loope
mov
mov
into
xor
push
rcr
leave
movsb
dec
imul
sub
push
add
aam
cmp
mov
xchg
cmp
mov
mov
sub
adcl
and
or
xchg
cmp
notl
rolb
mov
lahf
rcll
test
sbb
fldl
add
mov
test
mov
jne
mov
shll
fcmovu
adc
js
add
sub
inc
pop
test
sbb
mov
lock
ja
cmp
fldcw
cmp
sbb
mov
lcall
cs
scas
fnsave
pop
fwait
mov
mov
fs
add
rclb
dec
lahf
shl
in
xlat
mov
mov
adc
addl
call
aaa
mov
loopne
add
cmp
pushl
mov
shll
sub
data16
iret
mov
fwait
scas
sbb
dec
push
and
insl
movb
popf
mov
add
cmpsb
sbb
or
ljmp
test
cmp
jns
sub
mov
mov
cltd
lret
xchg
mov
pop
dec
sub
aam
mov
cmpsb
pop
push
cwtl
xor
test
shll
xchg
sbb
and
add
mov
mov
inc
imul
mov
xor
js
arpl
pop
mov
test
test
cmp
add
jns
mov
nop
mov
outsl
add
lret
lods
mov
or
mov
add
xor
add
inc
add
dec
repz
dec
es
mov
mov
add
mov
inc
pop
sarl
notb
inc
add
xor
fwait
fs
add
sti
bswap
dec
cmp
fs
dec
pop
add
sub
add
mov
mov
jae
mov
xchg
inc
sub
enter
pop
xor
ret
into
inc
add
iret
int3
nop
imul
lds
dec
test
ja
cmc
dec
lret
sbb
dec
adc
jecxz
push
loope
lods
add
lods
lea
movq
into
gs
cmp
push
enter
mov
pop
movsb
into
daa
into
nop
inc
xlat
rorb
add
in
add
xlat
mov
loopne
add
pop
jno
rolb
loopne
fildll
fisttpll
add
xchg
sti
ljmp
out
and
sub
jbe
push
incb
sahf
fcomi
xor
adc
ficompl
sarl
push
leave
jge
es
and
movsl
mov
icebp
push
rolb
lahf
xor
imul
imul
fs
cmpsl
mov
data16
rolb
jnp
loopne
and
mov
cmp
cmc
cwtl
mov
das
pop
xchg
inc
repz
insl
int3
add
dec
test
xchg
cmpsb
movsb
xchg
add
mov
xrelease
pop
sub
mov
test
dec
outsb
lcall
xchg
mov
es
pinsrw
test
mov
mov
cltd
call
ret
shll
mov
push
push
jmp
stos
cmp
add
sbb
dec
testb
bound
ds
rolb
rorb
lea
or
aad
shlb
pop
es
add
add
loope
loope
ljmp
add
or
lock
xor
add
sti
cld
imul
xchg
fildll
ret
xor
iret
pop
mul
insb
sub
xor
or
mov
xchg
jbe
loop
mov
jl
sti
mov
test
test
popf
leave
inc
jb
cltd
sahf
or
pop
in
popa
add
lock
sbb
leave
add
pop
sub
mov
dec
scas
lods
xchg
dec
outsl
lret
or
pushf
addb
mov
add
push
cmp
xchg
imulb
sbb
in
xchg
or
jg
fildll
mov
sbb
mov
movsb
jp
loopne
mov
jp
repnz
in
pusha
add
iret
in
mov
dec
sub
push
mov
sbb
ja
adc
in
fnstenv
repnz
sahf
imulb
movb
stc
pop
mov
cmpsl
and
imul
mov
pop
stc
test
int3
adc
or
xchg
imul
mov
lods
mov
int
nop
mov
jae
hlt
clc
add
cmp
add
mov
mov
sbb
ja
sahf
pop
and
pop
pusha
add
xchg
adc
loope
stos
cld
and
cmp
cmpsl
jl
mov
addb
aad
nop
mov
fstps
add
add
ret
pop
pop
jae
push
add
sub
mov
imul
push
jmp
adc
add
mov
push
les
inc
add
mov
arpl
xor
imul
mov
test
fs
add
lock
sbb
or
ljmp
cltd
ficompl
into
pusha
add
sbb
add
or
add
pusha
add
add
inc
add
add
fbstp
es
pusha
add
cmp
imul
and
mov
sbb
movsb
push
loope
sbb
outsl
pop
push
mov
popf
mov
in
push
inc
add
push
add
mov
std
or
xchg
inc
loopne
jb
jne
xor
xor
mov
cmp
movsl
jnp
mov
sub
out
ret
xorl
adc
mov
lock
out
addr16
das
pop
adc
fbstp
cmp
in
inc
out
and
add
xchg
lahf
adc
testb
loopne
outsb
pushf
xor
pop
imul
pop
sbb
or
call
add
mov
loope
jae
cmp
xlat
push
sub
fwait
in
jge
pushf
jle
rolb
insl
andl
inc
add
jmp
icebp
xor
add
in
cli
jne
or
imul
xchg
movsl
or
push
out
testl
aam
stc
or
stos
ds
dec
dec
and
cmp
jl
add
add
nop
cmpsb
mov
xchg
lods
jnp
add
cwtl
or
xor
mov
push
mov
jmp
mov
push
repz
movsl
les
xchg
mov
mov
mov
add
adc
sbb
add
dec
and
inc
and
cmp
sbb
ja
repz
mov
mov
cmp
test
pushf
xchg
outsl
pop
cmp
inc
add
dec
fbstp
lods
lret
jge
add
mov
loope
dec
insl
or
std
xchg
adc
xor
popa
flds
or
xchg
adc
clc
adc
mov
mov
std
adc
fisubrs
mov
aad
add
xchg
lret
jb
cltd
enter
fistl
aam
add
inc
add
cmp
dec
ret
ja
popf
outsl
lock
xchg
mul
pushf
push
insl
sbb
insb
data16
mulb
inc
cmp
test
mov
cwtl
mov
ljmp
mov
dec
aas
sbb
sub
xchg
or
dec
imul
xchg
xor
es
adc
inc
jnp
jle
add
jne
int3
dec
push
xchg
mov
negl
loop
sbb
add
jo
add
sti
jno
fs
xor
nop
imul
in
mov
add
psubb
push
push
rolb
jnp
add
das
imulb
nop
out
enter
add
pop
cmp
mov
mov
add
add
xchg
mov
cmpsl
shrl
fwait
jecxz
xor
lret
or
inc
add
out
or
stos
int
mov
dec
in
shll
dec
call
pop
mov
cs
gs
in
movb
sahf
gs
test
push
dec
stos
loop
jp
lock
movsb
pop
repnz
mov
and
into
cmp
in
add
add
add
and
xchg
mov
dec
imul
jg
xchg
adc
mov
mov
imul
sub
stos
out
and
fidivrs
bound
pop
clc
push
pop
sbb
xchg
or
add
add
adc
cmp
push
pop
xchg
mov
test
ret
mov
xchg
xor
repnz
sbb
pop
lock
jl
add
and
roll
rolb
add
pop
cld
lret
mov
mov
fs
sub
iret
add
mov
fdivrl
mov
xlat
mov
rolb
dec
mov
mov
pop
dec
jno
mov
xor
mov
sbb
add
jne
fnsave
mov
mov
pop
std
cmc
stos
int
in
mov
add
dec
and
add
pop
push
add
cmp
xor
add
add
xchg
fwait
in
testl
lock
xchg
sub
or
add
sub
xchg
dec
jae
lods
mov
fldenv
sti
shl
pop
and
adc
jmp
pop
mov
mov
pop
jno
jmp
cmp
xchg
inc
add
imul
and
push
es
sbb
fs
and
cmp
int3
mov
fsub
sub
mov
sarl
add
cs
cs
inc
add
incl
add
fists
add
imul
inc
add
jl
mov
popa
mov
inc
add
jg
add
shrb
movsl
add
jl
outsb
movsl
pop
out
adc
leave
xor
mov
pop
dec
pop
cwtl
inc
add
shll
je
mov
aam
addr16
push
push
rorl
pop
lods
lret
sbb
mov
add
imulb
inc
add
xchg
jmp
addb
cwtl
out
jge
lods
sbb
in
stc
sti
imul
lret
cs
aaa
push
call
or
rolb
add
icebp
lea
out
mov
popa
pop
mov
adc
in
mov
jns
lds
loop
jo
push
add
cmc
dec
in
das
popa
mov
aam
andl
les
ret
jp
pop
popf
fnstsw
out
cmp
push
and
sbb
mov
mov
fmul
mov
mov
jmp
jo
movb
test
les
inc
add
push
jns
cmp
jno
and
or
mov
sub
das
fisttps
and
sub
pop
cmp
push
addb
insb
imul
loopne
inc
ja
add
xchg
adc
call
cld
repnz
mov
add
gs
and
out
mov
push
inc
jecxz
push
ss
and
addb
stos
pop
push
pop
loopne
or
sti
sub
and
fistpll
pop
mov
jbe
or
mov
xlat
repnz
push
mov
mov
lods
cmp
loope
xor
mov
cli
sti
cmpsl
cmp
cwtl
mov
arpl
sub
ja
inc
add
dec
and
scas
cltd
pop
mov
inc
es
mov
mov
mov
pop
mov
cmp
push
idiv
ja
std
mov
cmp
mov
add
mov
mov
sar
lret
shrl
add
call
imul
pushf
in
add
movsl
sub
pop
push
scas
fimull
sbb
pop
dec
mov
scas
mov
aas
mov
or
fisubs
inc
add
and
lahf
out
loopne
add
pop
inc
add
jle
enter
sub
pop
push
cwtl
adc
jno
xchg
push
sti
aaa
stc
xchg
xor
mov
mov
jmp
mov
and
mov
ds
shl
sbb
xor
dec
lods
dec
arpl
dec
aam
out
add
add
lahf
inc
add
and
sbb
add
cmp
pop
movsb
int3
sbb
test
mov
inc
add
xchg
nop
bound
add
outsb
jnp
fs
out
andl
sub
inc
add
leave
ja
test
call
jo
icebp
mov
mov
add
add
mov
std
mov
and
dec
mov
mov
pop
stos
adc
or
fcoms
pop
inc
inc
or
jb
mov
add
inc
add
ds
stos
mov
fcmovnb
add
mov
push
insb
cwtl
and
add
and
inc
add
aad
jb
jp
push
lea
lock
add
push
addb
iret
adc
add
in
inc
push
stc
outsb
leave
leave
xchg
push
xor
adc
rclb
sbb
inc
add
cmp
add
mov
sbb
xor
and
push
in
or
fstl
mov
cmp
mov
add
hlt
movsb
cwtl
lahf
cmpsl
cs
iret
xor
imul
jge
or
or
sbb
xor
sti
repz
mov
add
pop
daa
sbb
sahf
movsl
and
pop
imul
add
out
mov
fistpl
add
jle
dec
xchg
push
jle
or
mov
push
scas
dec
pop
pop
sub
add
inc
add
and
in
sbb
cmp
ds
aam
xchg
fistpll
xchg
int3
xor
insb
arpl
lret
dec
pushf
jbe
inc
add
sbb
mov
and
jno
jle
add
add
lods
mov
nop
xchg
addb
js
cmpsl
xchg
lock
mov
xchg
scas
or
xchg
cmpsl
pushf
xchg
push
jp
les
mov
mov
push
xor
sub
cmp
ja
icebp
in
scas
or
sbb
xlat
pop
mov
and
shll
movb
pop
scas
jns
in
push
mov
mov
gs
jo
addb
clts
add
lea
js
shrl
cmpsl
lea
ds
push
dec
orl
add
and
fmuls
and
mov
xchg
call
sbb
daa
adc
imul
push
lock
inc
push
dec
lods
stc
lret
or
sbb
adc
jp
mov
test
call
sbb
add
jmp
add
mov
jb
cmpsl
lcall
dec
mov
add
xchg
in
mov
imul
clc
push
mulb
xor
fildll
mov
and
jb
lret
mov
mov
mov
xor
in
dec
test
std
or
xor
stc
push
addb
add
mov
insb
dec
adc
xor
cmpsb
xchg
jmp
pushf
nop
imul
cli
in
jl
xchg
dec
test
movb
sarl
xlat
imul
pop
or
mov
insl
rorl
fmuls
out
adc
add
hlt
lock
shll
sbb
cmp
mov
add
rorb
xchg
js
add
add
add
adc
aas
adc
jns
or
insl
mov
inc
add
jle
add
jb
ret
dec
popf
test
cmp
dec
push
xchg
int
jge
add
in
repnz
push
in
sti
pop
cmp
loopne
mov
inc
add
fnstcw
adc
mov
dec
xor
pop
xchg
mov
addb
fisubrl
add
int
call
jae
dec
addb
dec
es
inc
jmp
add
jmp
xchg
mov
adc
movsbl
sub
ret
cwtl
and
cmpsb
xchg
fcomps
les
incb
pop
repnz
mov
push
pop
xchg
ja
fidivrs
std
inc
add
rorl
lock
push
jae
add
cmp
jg
add
push
fs
in
sbb
xor
add
mov
pusha
add
inc
inc
orl
lods
cmpsl
mov
add
inc
adc
bound
inc
add
mov
jno
stos
xorl
push
push
push
adc
lretw
jbe
fdivrs
sub
cmp
fs
lahf
push
ljmp
fistpll
out
mov
xlat
movb
mov
mov
add
bound
fcoml
nop
loopne
inc
add
ljmp
into
bound
jle
lcall
mov
leave
dec
xchg
loope
lahf
scas
cmp
shll
xor
xlat
out
add
or
jge
inc
add
adc
push
add
mov
std
jmp
sahf
cmp
cmp
add
mov
add
jb
xchg
outsb
mov
imul
lret
clc
cli
mov
ss
mov
test
popf
jns
inc
sbb
mov
add
adcl
pop
movsb
in
push
and
push
lcall
jnp
punpckldq
fs
push
adc
or
pop
xchg
lds
lds
cltd
enter
jo
or
leave
xchg
jle
add
add
in
add
add
sbb
sbb
stos
rolb
sub
push
xchg
pop
pop
aad
and
mov
test
outsb
scas
mov
sarl
mov
fdivr
addb
xchg
and
cmp
rcll
or
lahf
dec
and
call
es
insb
imul
mov
jge
adc
xchg
pop
lret
xor
xchg
dec
or
int3
xor
test
dec
lods
sbb
adc
add
inc
add
aaa
pop
popf
mov
jne
hlt
jo
fs
adc
mov
das
xchg
sub
add
bnd
add
or
lock
xchg
xor
fstps
xchg
cli
ljmp
sbb
in
lret
push
push
xchg
mov
mov
jg
shl
and
push
sub
add
ret
push
outsl
mov
add
jp
ljmp
dec
cmc
cmp
add
or
movl
xchg
out
out
test
rol
mov
aam
cmpsb
pop
lds
jb
orl
sub
pop
call
adc
dec
dec
fdivp
xchg
adc
pop
icebp
imul
mov
hlt
mov
inc
add
decl
lds
xor
push
es
xor
dec
xchg
lret
daa
sub
mov
lahf
add
iret
rorl
push
gs
adc
xchg
mov
aad
bound
push
add
pop
test
inc
add
movsb
push
xor
lea
call
loop
push
add
jl
xchg
fs
cmc
xchg
pop
jp
loopne
test
das
jecxz
add
imul
out
addb
add
jne
popl
cmc
sub
add
insb
xchg
ljmp
div
int
add
pop
dec
mov
in
sub
fcomp
stos
aaa
adc
lds
xor
adc
add
sbb
xchg
stc
adc
sti
movb
outsb
mov
das
adc
mov
sbb
imul
inc
fmull
sub
add
mov
fildl
mov
add
out
cwtl
movsb
pop
es
fcmovnb
add
fsts
mov
lods
loope
or
or
sub
xchg
jns
xchg
rcll
add
pop
aaa
mov
ljmp
cmc
dec
jnp
mov
test
pop
imul
add
mov
cmp
jns
out
out
push
add
test
and
ljmp
add
daa
xchg
aas
fnsave
bound
addb
cmp
add
movl
inc
add
and
fnstcw
jne
sbb
sti
lods
orl
icebp
test
enter
jns
les
cmp
test
fnsave
mov
fsubrs
loope
movsl
sub
nop
push
enter
adc
lods
jecxz
in
addr16
out
mov
add
jne
cwtl
mov
xchg
push
add
add
jmp
ss
mov
popf
lret
and
push
mov
mov
out
das
xchg
dec
cli
stc
lods
xor
test
jl
aam
add
adc
jge
sti
mov
add
mov
les
stc
shll
mov
mov
add
inc
add
cs
pop
dec
inc
pop
jbe
ja
outsb
ret
lea
imul
fsubl
sub
dec
inc
add
sub
dec
lea
je
inc
add
jne
cmc
leave
test
testl
sub
dec
sarl
add
arpl
add
jg
loopne
fwait
and
sub
ds
mov
shrb
aas
jl
aad
pop
mov
mov
add
fnop
clts
add
jg
add
test
sti
enter
add
jno
mov
out
mov
rcrl
cmp
pusha
add
mov
xor
xchg
bound
gs
lret
imul
add
into
mov
hlt
enter
add
add
scas
ds
clc
pop
outsl
loop
sub
icebp
ss
mov
jecxz,pn
lds
sahf
lahf
pandn
inc
pop
lock
xchg
jle
sbb
rolb
add
sbb
dec
xchg
mov
lret
int3
inc
outsl
jecxz
add
or
xor
sub
aad
dec
ficoml
shlb
sbb
sub
add
adc
mov
fs
sbb
xor
push
sbb
sbb
mov
daa
idivl
fstpt
sub
out
jmp
pop
les
xor
test
pop
cmp
dec
mov
dec
mov
les
xor
cmp
pop
mov
movb
movsb
ds
cmp
xchg
sub
cmp
flds
add
push
sub
cmp
jg
fisttpl
gs
test
sub
add
ljmp
xor
jecxz
push
jnp
dec
shrb
es
lahf
sahf
fwait
cmp
jbe
push
cmp
add
adc
xchg
lahf
dec
cmpsl
push
dec
popf
ret
aaa
movsb
mov
mov
insb
jp
cmp
add
scas
icebp
sub
add
pop
lods
ret
mov
testl
mov
or
cmpsb
aas
jmp
cmp
sahf
std
inc
add
xor
cmp
adc
lahf
mov
mov
test
je
add
and
pop
push
daa
or
push
xor
clc
rcrl
fdivs
add
scas
aad
add
xchg
mov
sahf
fmul
out
pop
jnp
or
and
sub
mov
jae
test
mov
or
clc
pop
or
jo
add
add
adc
push
add
jmp
mov
inc
add
xor
adc
jmp
ja
pop
or
add
lea
inc
add
push
add
rolb
inc
add
jno
push
arpl
dec
out
lcall
jg
jl
icebp
pop
mov
xchg
in
cmp
ret
test
scas
enter
xor
push
bound
adc
lods
leave
cltd
bound
adc
adc
adc
jne
mov
fidivs
clc
test
add
and
movsb
adc
incl
xchg
gs
pop
imul
aad
add
or
rol
add
fidivrs
mov
xor
lods
es
movb
add
test
xchg
enter
jns
aad
call
cwtl
inc
icebp
mov
hlt
and
jae
add
ss
jmp
aad
test
add
das
xchg
mov
nop
hlt
cwtl
cmp
scas
push
es
xor
adc
aad
pop
mov
rorl
push
and
in
mov
cmp
outsb
fwait
sbb
dec
loope
call
dec
sub
rcll
lea
sub
lret
dec
jae
sub
mov
mov
add
add
adc
stc
or
movb
mov
jle
out
imul
inc
add
add
std
mov
add
scas
mov
outsl
negb
mov
cmp
jbe
dec
push
bound
xlat
pop
adc
popa
lahf
mov
or
pushf
push
pusha
add
xchg
add
add
test
pop
xor
jno
call
ret
add
add
inc
add
cmp
ljmp
or
cs
inc
add
shll
or
dec
fstl
insl
jecxz
sub
cmc
into
mov
bound
stos
rolb
lods
push
inc
lods
cmc
xchg
nop
xor
cltd
sub
das
xchg
mov
sbb
mov
lds
push
mov
push
ficoms
sbb
or
andl
es
pop
mov
sbb
xchg
mov
nop
adc
push
sbb
push
pop
movsl
rcrb
jl
mov
or
jmp
aam
dec
clc
mov
sub
dec
push
push
push
cmp
aam
cmpl
add
mov
psubsw
mov
lahf
js
mov
or
inc
add
lea
sub
add
add
bound
mov
cmp
leave
sub
ja
and
push
add
les
mov
mov
xor
xor
addb
sbb
fadds
cmpl
int3
ret
or
imul
sahf
fisubrl
xchg
sbb
jb
xchg
inc
add
aas
xor
movb
cs
or
xchg
dec
je
xchg
imulb
call
enter
push
in
fadds
push
fadds
mov
dec
add
and
out
movsb
rcrb
adc
out
xor
dec
addb
dec
push
and
dec
dec
dec
push
pop
push
addr16
shrl
inc
insl
mov
popf
dec
adc
scas
xor
or
jnp
pop
lret
das
dec
sarl
loope
or
test
ss
movsl
push
and
add
cmp
mov
addb
cmpsl
test
insl
inc
mov
jno
test
cmpsb
inc
add
out
addb
clc
jge
sbb
lret
test
sti
scas
sub
mov
push
push
xchg
xchg
imul
pop
data16
sbb
cld
or
mov
jl
fwait
xchg
add
movb
sar
add
mov
stos
mov
fidivrs
cmp
pop
fidivrl
ja
repz
mov
pop
addb
out
push
sbb
adc
outsb
and
mov
and
pop
hlt
std
dec
jecxz,pn
bound
data16
xchg
cmp
pop
pop
leave
inc
add
lods
in
or
mov
lea
test
dec
lret
js
add
add
add
push
pop
mov
testb
push
addb
or
int3
dec
fwait
pop
mov
test
repnz
sub
movsl
xorl
add
inc
arpl
mov
adc
mov
add
clc
lock
mov
push
pop
xlat
cltd
bound
ud1
movsb
rolb
and
lret
adc
sub
cld
fwait
xchg
xchg
test
jg
mov
dec
jp
lock
lods
pop
fdivrp
fnstenv
pushf
stc
mov
aad
sub
push
cs
call
xor
dec
ficoms
add
mov
sub
cli
mov
pop
sti
sbb
cltd
and
xor
add
sub
mov
cmpsl
push
pushf
ljmp
mov
or
add
mov
cmp
dec
int3
sub
movsb
loope
aam
add
dec
push
or
add
pop
ret
loopne
xlat
jno
add
data16
push
jns
xor
dec
aaa
push
dec
ret
out
xor
and
and
mov
dec
push
es
add
sub
in
cmp
sbb
and
push
xor
data16
add
daa
lods
pop
inc
add
inc
add
in
sbb
pop
mov
dec
insl
stos
xlat
cmp
cmp
sbb
jnp
jl
cmpsb
jno
fnstcw
pop
or
add
fdiv
and
pop
out
fbstp
mov
cmp
dec
sar
loope
insl
adc
call
fwait
mov
cmpsl
mov
pop
int3
mov
add
add
jecxz
mov
scas
lret
cltd
push
lds
das
jg
mov
in
mov
out
dec
mov
jo
mov
inc
out
bound
mov
pop
in
mov
mov
push
or
and
repz
das
cltd
cmp
cmp
test
sub
pop
pop
and
hlt
les
inc
mov
test
loopne
add
pusha
add
add
jns
add
sub
pop
jmp
cmpsl
push
cld
mov
xor
jo
push
add
push
inc
jmp
jns
pop
ret
pusha
add
fldcw
ljmp
filds
shr
add
pop
lcall
xor
test
test
sbb
xchg
cwtl
push
jge
or
pushf
mov
xor
jns
loop
jbe
addb
xchg
and
dec
push
or
sbb
call
or
add
addb
push
cltd
and
jecxz
adc
xchg
cli
mov
pop
adc
xor
push
fnstcw
jle
das
nop
mov
add
add
aaa
out
stc
pushf
mov
sub
push
push
rolb
xchg
pushf
test
pop
rolb
mov
mov
and
and
pop
hlt
pop
dec
adc
add
pop
xchg
and
pop
push
dec
outsl
xchg
out
addb
xchg
push
bound
ja
push
nop
xchg
mov
xlat
push
mov
jp
adc
int
xor
repnz
and
add
cmp
icebp
rolb
xlat
std
lock
mov
add
aas
scas
loope
sub
mov
push
sbb
sbb
inc
sub
pop
mov
out
push
sbb
push
push
mov
ret
fisttpll
loope
clc
int3
push
pop
or
ficomps
mov
imul
cmp
fists
xchg
xor
mul
loop
ja
das
out
test
cwtl
scas
pop
dec
adc
inc
and
adc
xor
xchg
mov
mov
add
addb
add
or
push
cmp
loop
out
addb
push
lods
xchg
jge
jp
sti
jbe
fisttpl
daa
jg
add
imul
cmc
lcall
xchg
testl
movb
cld
sbb
jne
in
jmp
push
mov
enter
pop
cld
pop
int
mov
add
std
inc
out
push
in
adc
add
push
ret
cs
ja,pt
test
add
fisttps
cld
fld
add
add
insl
movsl
test
enter
cld
adc
pop
sti
sti
iret
std
fldenv
cmp
ficompl
push
pop
lock
in
fucomi
gs
shrl
ss
inc
add
dec
mov
and
lret
movb
mov
or
or
push
add
xlat
pop
call
push
bound
and
xchg
or
mov
je
xor
inc
xchg
rorl
add
aam
sub
add
jne
push
and
mov
repz
nop
testb
int3
push
xor
and
outsl
lret
dec
popa
mov
in
jbe
cmpsl
fs
add
out
nop
jmp
icebp
js
xor
loop
push
mov
push
clc
aaa
push
fwait
lock
aad
imul
and
shr
xchg
mov
add
cmpsl
mov
cmp
fldl
jnp
xor
jnp
and
inc
dec
mov
mov
pushf
lds
es
mov
loope
in
mov
daa
cmpsl
arpl
sti
jg
stos
xchg
and
mov
loope
jmp
xchg
dec
out
push
jo
xor
xor
aas
rcrl
cmp
movsl
gs
add
clc
leave
dec
aas
jl
popa
loopne
idivl
inc
mov
popa
loopne
add
repz
push
xor
addr16
je
adc
xchg
or
sub
cmp
jmp
add
add
push
add
imul
pop
and
int
jmp
push
xor
add
cmp
fdivrl
inc
nop
lret
outsl
in
rcrb
je
cli
addb
cli
mov
mov
dec
addb
lret
or
jge
enter
aaa
push
fimull
add
loopne
or
xchg
lods
cmp
sub
je
xchg
or
pop
je
mov
das
test
mov
mov
pop
mov
rorb
jge
add
add
push
lahf
fistpl
and
push
mov
bound
movsl
sarl
jnp
add
pop
out
fdivp
push
adc
ret
scas
rolb
sub
dec
js
lock
cmc
xlat
fwait
movsl
rolb
add
dec
popa
add
sbb
orl
add
into
inc
sub
inc
js
popf
into
lods
push
mov
enter
das
stos
inc
add
mov
bound
jno
orl
fimull
push
push
cmp
cmc
jp
push
add
in
pop
es
add
add
or
add
lret
inc
icebp
cli
push
add
sbb
or
xchg
mov
mov
imul
icebp
repz
daa
sbb
adc
and
cmp
add
pop
xchg
lret
xor
jp
ljmp
sub
and
jno
jl
outsl
mov
lods
jp
in
mov
cmpsb
loopne
push
add
imul
xor
sub
mov
mov
add
fadds
jle
clc
mov
add
ret
add
aas
jne
mov
pushf
add
or
ffree
add
shll
mov
sbb
xor
jl
je
jmp
cltd
addb
paddw
enter
xchg
xor
and
call
dec
add
cmp
add
lahf
lcall
lock
mov
push
sbb
pop
inc
or
repz
hlt
mov
lds
dec
adc
pop
mov
add
cmp
movb
cmp
addb
mov
aas
outsl
push
in
mov
lods
call
or
add
push
les
rolb
enter
in
lds
mov
cmp
mov
mov
ja
xor
add
mov
push
lock
mov
shl
loop
jbe
and
lea
jge
add
outsb
jae
stos
jbe
xlat
dec
push
outsl
int3
sbb
push
mov
mov
pop
pop
adc
insb
mov
add
hlt
pusha
add
add
push
fiaddl
or
sbb
sarb
dec
jecxz
pop
cmp
mov
pushf
rcrb
adc
add
loop
push
data16
jl
push
dec
jl
mov
push
addb
mov
nop
xchg
lcall
adc
mov
mov
add
loopne
scas
xchg
ja
adc
mov
test
aam
dec
sbbl
add
add
mov
add
mov
mov
popf
daa
rolb
and
inc
add
sti
scas
push
cmp
jge
fadd
and
popa
sbb
mull
shl
scas
add
pop
mov
add
scas
cmpsl
sub
enter
insl
jg
scas
cmp
mov
sub
mov
jp
jmp
pop
jne
inc
int3
or
push
dec
pop
in
adc
lret
cmpsb
adc
mov
mov
cld
mov
mov
jmp
mov
rolb
das
sub
lods
scas
cmpl
test
and
int
into
and
mov
test
loope
out
mov
jne
adc
call
jecxz
shlb
pushf
imull
and
scas
das
or
adcl
popa
testl
lahf
lcall
mov
arpl
lock
jns,pn
testb
cmp
or
addl
inc
std
int
cmovne
fs
inc
add
stc
pop
or
out
or
push
test
jecxz
mov
add
add
mov
mov
pop
lahf
jo
mov
out
mov
fidivl
inc
xchg
mov
sub
fsts
les
nop
mov
cmp
imul
sbb
adc
lods
mov
mov
mov
mov
add
insb
mov
fs
push
add
pop
or
pusha
add
shll
add
in
jns
pop
in
or
fistps
mov
pop
mov
test
and
push
add
dec
cmp
lret
jle
xor
cmpsl
add
adc
sbb
add
cmc
ret
fdivl
arpl
xor
mov
push
mov
cmpsl
and
cmc
stc
pop
cmp
mov
hlt
jle
cld
mov
cwtl
mov
movsb
push
add
and
loopne
stc
sbb
adc
fsubrl
add
xor
fidivs
add
icebp
enter
add
xchg
sbbl
jl
out
add
mov
icebp
movsl
ret
push
pop
icebp
and
pop
popa
lret
inc
add
jle
stos
adc
inc
add
popa
rolb
cs
mov
add
adc
lret
xor
pop
push
loop
gs
xchg
int3
ret
pop
jo,pn
scas
and
dec
arpl
incl
pop
lock
mov
jnp
and
jns
add
push
aad
lods
pop
inc
xchg
dec
ljmp
add
add
adc
push
inc
and
jbe
jo
mov
add
add
add
call
mov
out
and
adc
push
add
gs
xchg
cmp
dec
addb
dec
mov
jge
push
ret
cmp
mov
xchg
push
add
and
inc
cmpsb
lods
cmp
mov
or
dec
outsl
ja
mov
inc
sub
into
out
push
cmpsl
cmpsb
ss
ret
pop
sub
movsb
pop
mov
sub
imul
xchg
cwtl
stos
sbb
or
push
movsl
sti
adc
mov
add
mov
div
sbb
dec
or
pop
outsb
pop
and
out
daa
jecxz
adc
sub
lock
mov
pop
jmp
mov
jecxz
xchg
push
in
add
arpl
sub
loope
lret
fstpl
xchg
divb
sub
push
and
mov
add
pop
mov
sbb
enter
inc
pop
mov
ds
out
mov
jp
shl
mov
testl
cltd
pop
jp
pop
jle
push
bound
jp
inc
adc
inc
aaa
out
fsub
cld
adc
add
popf
sub
mov
cld
or
mov
add
daa
pop
aas
dec
fbstp
xchg
lcall
mov
mov
add
fwait
cmp
sub
xchg
outsl
imul
aad
mov
or
pushf
pop
push
test
or
add
add
add
movb
sti
addr16
add
add
sahf
jb
inc
add
in
gs
push
shll
mov
std
push
and
outsb
addb
in
mov
push
cs
dec
into
push
dec
outsb
mov
scas
mov
mov
sub
mov
push
andl
or
insb
xchg
add
inc
jnp
jnp
pusha
add
das
adc
add
cmp
mov
imul
and
lods
add
test
pop
cmc
dec
jae
scas
jne
pop
jnp
loope
cmp
adc
jmp
adc
pop
fs
mov
sub
or
mov
mov
jmp
or
movsl
nop
clc
xchg
lret
sub
ret
je
mov
movsb
ss
add
dec
imul
sbb
or
ret
cmc
mov
jno
mov
xchg
jg
inc
loop
jg
push
aas
cmp
repz
or
repnz
ljmp
and
inc
jo
in
lods
or
cmpl
std
inc
add
repnz
add
xchg
and
and
and
jns
xor
mov
xchg
or
das
mov
xchg
lcall
imul
mov
iret
pop
imul
nop
mov
push
inc
and
mov
test
movsl
adc
sub
add
mov
addr16
addb
mov
inc
add
mov
mov
nop
xchg
jae
jl
add
xchg
push
add
pop
xchg
scas
cmp
dec
test
pusha
add
bound
mov
or
in
add
or
or
xor
or
icebp
sub
cmpl
das
les
pushf
pop
popf
cltd
xor
inc
mov
loopne
add
out
lahf
scas
mov
xchg
scas
cmp
ja
hlt
lret
mov
add
pop
fs
cltd
scas
cmp
mov
dec
mov
or
add
xor
sbb
add
mov
dec
dec
xchg
jmp
ljmp
addb
add
push
daa
add
inc
inc
adc
xchg
js
out
das
rcrl
and
outsl
repz
sub
test
out
jg
and
inc
aad
add
push
icebp
jl
jo
stc
addb
xchg
adc
cli
jg
sub
aaa
je
fisttps
pushf
jl
inc
add
mov
add
insb
sti
dec
scas
dec
adc
sbb
lret
and
mov
loopne
add
mov
sub
xchg
add
inc
fisubl
aam
fmuls
mov
lea
sub
xchg
add
jae
jns
xor
mov
in
xor
add
mov
xor
sbb
jp
cmp
dec
out
lret
cld
and
nop
sub
aaa
cmp
int
pop
inc
or
jo
add
jne
in
sub
push
cltd
repnz
add
xor
and
mov
xchg
jge
test
rcr
add
pusha
add
fstpl
or
sahf
sbb
add
and
sub
mov
xor
add
ja
pop
or
imul
xchg
lea
sahf
in
dec
mov
in
xor
push
jb
cmpsl
into
lahf
sub
popf
in
pop
mov
and
jmp
xor
xchg
sub
jg
jb
mov
loope
and
mov
je
ret
push
aam
jo
iret
or
inc
in
pop
leave
bound
push
mov
fsubp
sti
addb
es
jmp
inc
add
mov
addr16
mov
addb
out
lcall
test
or
sub
popf
push
add
roll
stos
and
xchg
sub
adc
std
and
ss
out
sub
ja
les
call
pushf
rcl
lea
pop
mov
mov
mov
dec
inc
add
jl
sub
cmpsl
mov
push
or
arpl
add
xor
xchg
dec
fiadds
xor
ret
pop
rcrb
int
inc
mov
jle
loopne
jns
mov
insl
jbe
jle
add
sbb
or
add
cld
lret
stc
push
mov
add
je,pt
and
xor
add
daa
pop
insl
daa
xlat
loope
add
nop
dec
into
bound
push
sbb
add
pop
xchg
clc
push
cmp
add
dec
addl
add
andl
add
outsb
dec
jns
adc
sub
add
outsb
shll
add
mov
jle
push
mov
inc
cbtw
xor
aaa
ljmp
pop
adc
popf
add
stos
xor
cwtl
in
lret
nop
sbb
and
test
sbb
add
jno
push
rol
sbb
pop
xchg
or
insb
out
cwtl
sbb
and
adc
in
or
add
ja
jecxz
cld
out
fcmovbe
adc
les
cmp
cltd
push
mov
sub
mov
sub
add
add
mov
dec
lret
daa
clc
in
sahf
or
dec
mov
pop
cmp
ret
jbe
bound
jbe
test
aad
xchg
fdivrl
cmp
pop
addb
cmp
nop
imul
or
mov
lea
add
add
dec
sub
mov
ja
add
shll
or
imul
fistl
stos
dec
fwait
jl
xchg
dec
pxor
fsts
push
dec
xchg
mov
pop
inc
out
je
push
mov
and
loop
arpl
rcrb
add
rol
add
jp
sbb
jle
cmpsl
push
add
mov
add
ss
ja
xchg
jmp
mov
jne
xor
pop
mov
add
aaa
in
ret
mov
add
pop
add
push
movsl
jmp
scas
jns
mov
inc
add
cld
pop
in
aaa
loopne
add
and
xchg
mov
and
lret
and
mov
jbe
xor
std
test
cltd
daa
sahf
int
cvtdq2ps
addr16
test
lret
std
es
insb
xor
mov
sub
sarb
cmp
addb
lret
cmp
jge
jmp
lret
push
repnz
movsl
mov
stos
jle
push
fcompl
mov
inc
bound
icebp
movsb
cli
hlt
inc
add
pop
mov
in
mov
cmp
add
aad
ja
lock
lods
cmpsl
add
cltd
push
add
mov
push
xchg
pop
and
add
dec
jno
add
dec
cld
xchg
repz
test
sbb
stc
clc
sub
mov
ret
pop
push
inc
leave
sbb
or
mov
or
test
add
lahf
xchg
sub
mov
push
mov
fcomps
add
push
shrb
cmp
aam
sti
xchg
addr16
rcll
stos
sti
shll
mov
cmp
mov
sbb
cmc
dec
xchg
dec
icebp
push
add
and
mov
mov
fs
in
js
mov
es
push
add
dec
mov
mov
push
hlt
jae
ret
daa
jbe
jle
dec
pop
sub
xchg
dec
pop
les
mov
and
adc
int3
addr16
add
add
testl
lods
sub
lds
or
ds
add
push
adc
outsb
inc
add
in
lock
pop
dec
pop
xor
mov
mov
lahf
push
mov
lds
pushf
ret
and
addl
adc
cmp
ja
add
sub
add
add
jo
xchg
movsb
test
mov
mov
jae
xadd
dec
mov
repz
inc
pop
js
sbb
mov
mov
pop
inc
jl
add
mov
fistpl
inc
add
fimull
addb
pushl
cltd
dec
and
pop
pushf
and
mov
xchg
aaa
test
inc
add
ret
mov
add
lds
xchg
enter
imul
cmp
xchg
push
inc
add
sbb
repnz
sbb
adc
mov
shl
leave
mov
dec
into
push
loope
fcmovbe
imul
fbld
add
ret
add
pop
mov
into
cmp
shll
add
xchg
mov
and
fstpl
fwait
cmpsb
cmp
mov
pusha
add
scas
enter
mov
jae
push
add
pop
pop
push
pop
je
loopne
mov
push
repz
push
add
add
push
push
add
aam
add
idivb
shll
add
add
aam
addb
ret
or
cltd
mov
into
lods
inc
add
sbb
icebp
insb
push
inc
add
xor
add
sbb
inc
add
addb
aad
std
sub
call
push
xor
xchg
stos
push
add
cli
rorb
add
add
add
dec
arpl
jbe
jne
jo
addb
mov
fimuls
mov
jecxz
std
cwtl
push
daa
adc
int3
cli
mov
hlt
mov
ret
jecxz
cmp
aas
in
jecxz
cmpsb
movsb
xchg
fwait
test
shr
or
xchg
push
dec
enter
or
mov
xchg
sbb
scas
jne
ret
and
je
mov
jbe,pt
xor
cmpsb
nop
add
cmp
mov
in
push
mov
xchg
repnz
push
ss
cmp
add
stos
pop
mov
fxch
and
lcall
jb
int
insb
cwtl
aas
dec
cmp
arpl
ret
xchg
lods
loope
mov
es
sub
cmc
cmp
add
jne
pop
bound
sub
push
into
adc
jl
and
jnp
pop
jmp
xchg
mov
das
add
hlt
mov
test
adc
test
sub
inc
add
popa
inc
jle
ud1
ds
add
cli
adc
jecxz
add
sahf
jo
imul
sbb
sti
hlt
mov
add
add
rorl
xor
add
pushf
push
mov
mov
dec
movsb
daa
or
sub
shl
adc
testl
add
dec
mov
cmpsl
imul
sbb
mov
iret
stos
in
pop
insb
rcrl
jns
pop
mov
add
xchg
fldl
decl
xor
testb
add
jns
mov
xor
out
sub
fldt
jno
bound
inc
add
mov
ffreep
add
pop
mov
xor
mov
cmp
lods
popf
jno
in
jmp
xor
xchg
push
fidivs
push
xchg
scas
cmp
and
out
push
sbb
jp
pop
pop
jnp
dec
pop
xor
loope
das
test
sub
sbb
mov
add
mov
mov
mov
ljmp
std
xchg
ds
jp
sarl
leave
jb
sub
int
hlt
add
mov
icebp
js
test
jae
or
or
jmp
fisubl
mov
ss
mov
jno
rolb
test
mov
mov
and
mov
fldt
mov
inc
add
insb
popa
aas
jg
lds
pop
cmp
xor
adc
das
mov
in
xchg
mov
mov
bound
xor
cli
addb
inc
out
xor
ss
push
fwait
cwtl
loop
lods
cwtl
aad
add
test
jne
dec
jae
pushf
scas
pop
adc
dec
in
lock
cmpsb
cmp
sbb
mov
jecxz
jmp
sub
adc
stos
push
push
cli
push
addb
sti
dec
inc
out
pop
jg
je
mov
or
xor
imul
or
ret
scas
xor
cmc
sub
ss
jge
add
pop
cmp
add
or
jge
enter
sub
fs
cmp
push
sbb
lds
jmp
test
add
xlat
test
cmp
lret
inc
add
mov
jbe
adc
inc
add
dec
adc
add
icebp
ret
lods
add
adc
bound
adc
sbb
xlat
pop
call
das
dec
pop
dec
addb
shrl
add
loop
scas
int
mov
pop
mov
cli
pop
movsl
mov
mov
nop
test
mov
inc
add
mov
dec
mov
sbb
add
add
jnp
xor
sub
ret
mov
mov
cmpl
pop
ja
sbb
sbb
and
add
aam
fucomp
imul
jns
roll
or
cs
or
or
imul
lret
daa
jns
out
mov
push
xor
ret
repnz
sub
and
pop
pop
and
neg
nop
movsl
hlt
mov
and
jecxz
xchg
jg
xor
xlat
inc
add
sbb
push
push
std
add
mov
cmp
nop
dec
test
jnp
dec
push
sahf
pusha
add
idivb
and
sbb
fbstp
sub
decl
das
rcrb
ds
sub
mov
clc
push
mov
lock
mov
out
xor
mov
adc
jle
xchg
jbe
ljmp
cmc
int3
or
bound
adc
push
mov
int
add
decb
bound
data16
push
jns,pt
addb
sbb
lock
cmpsl
lret
xchg
call
xchg
bswap
add
and
clc
in
xchg
fldenv
mov
add
jle
pushl
sti
sbb
pop
mov
ret
insl
ds
aad
ret
add
inc
test
or
push
add
inc
add
rorb
psubsb
shlb
lret
test
daa
fnstcw
into
push
or
dec
push
xor
inc
add
scas
popf
cmp
cmpl
clc
aam
inc
add
shrb
push
jecxz
xlat
decl
pusha
add
xchg
inc
jp
adc
mov
xor
dec
pop
or
jns
lock
jne
inc
test
xchg
and
xor
sub
pop
adc
or
not
push
jecxz
mov
rorb
je
jecxz
add
xchg
mov
clc
cmp
jmp
pop
push
cmpsl
push
aam
movsl
add
sbb
adc
lds
push
pop
push
adc
mov
adc
push
nop
mov
dec
popa
push
dec
fsubp
cmp
outsl
mov
jle
lahf
and
xor
pop
adc
ss
insb
neg
test
sub
clc
loopne
add
fsubl
adc
lock
cli
mov
in
insl
negl
pop
dec
icebp
int3
enter
out
es
lcall
pop
push
add
mov
sub
jecxz
dec
mov
stc
inc
fucom
and
in
fbld
imul
sbb
dec
adc
mov
cmp
fbld
jbe
movsl
cmp
mov
add
test
lcall
ds
and
mov
add
add
ror
cmp
pop
aaa
out
es
cmp
sub
addb
or
insb
into
mov
insb
das
hlt
fildl
out
in
adc
je
pop
orl
std
mov
fisubrl
and
mov
add
cs
jl
testb
add
mov
pop
push
xor
add
pop
bound
fidivs
insb
lds
jge
bound
sbb
test
adc
pop
mov
leave
sbb
ffreep
add
jg
out
not
nop
imul
pop
lea
mov
cmp
push
xchg
mov
into
or
mov
aam
mov
stos
xchg
push
add
iret
dec
add
add
call
sub
add
out
mov
ret
add
ds
fwait
mov
inc
test
sub
loopne
fildll
sbb
sbb
pop
sbb
mov
jmp
cmc
mov
add
arpl
push
add
add
stos
mov
std
cvttps2pi
mov
add
scas
mov
pop
or
and
mov
hlt
pusha
add
mov
jno
dec
cmp
xchg
jns
lahf
pop
or
dec
mov
xor
imul
xor
adc
xchg
cmp
or
mov
sar
sub
addb
lcall
mov
loop
pand
into
adc
xor
stos
test
and
push
pop
dec
out
incl
adc
jecxz
inc
mov
sub
pop
and
sbb
xchg
mov
add
sub
add
lds
rolb
dec
es
and
lods
pushf
or
fcoml
js
push
sub
adc
sbb
jle
inc
add
xchg
push
outsl
push
add
loopne
std
sbb
mov
mov
pop
push
pop
jne
push
xor
fcompl
fisttps
add
sub
xor
xchg
fs
xor
addb
jmp
add
or
xor
sbb
call
pop
test
jae
and
iret
and
mov
xchg
inc
add
sbb
add
inc
fldl
add
pop
repz
xchg
mov
flds
add
and
cwtl
xchg
rcrb
cmp
aad
cmp
cwtl
into
sti
lea
xchg
jbe
inc
add
mov
add
pop
xlat
out
movsl
xchg
fcoms
ljmp
push
scas
stos
cmp
add
or
jae
and
cmp
jmp
mov
outsb
jg
movb
xor
lods
pop
clc
aad
add
push
popf
lods
fistpl
jno
daa
lahf
or
add
cmpsb
dec
sub
in
ret
push
insl
out
or
jne
inc
add
add
inc
andl
push
dec
jmp
push
mov
xor
movhps
push
xorl
adc
scas
xor
ja
ja
imul
lahf
push
sbb
sub
fsubrs
xchg
adc
jne
outsb
adc
cmp
jmp
add
add
and
cltd
jbe
ficoml
mov
cmpsb
mov
out
add
mov
pop
mov
jl
test
addr16
popa
gs
loopne
dec
add
jb
push
ljmp
imul
pushl
push
rcr
sub
mov
inc
mov
mov
sti
leave
lret
imul
scas
fnstcw
gs
lods
adc
jne
lahf
pushf
cmc
or
lods
or
insb
fiaddl
sarl
adc
push
pop
into
fcmovne
sub
iret
call
mov
xor
jecxz
es
in
lret
mov
rcrl
mov
bswap
lods
push
or
cmpsb
push
mov
push
jne
cmpsl
popa
jne
add
das
jns
lahf
push
sub
mov
icebp
hlt
in
push
fldl
cmp
cmp
xchg
rolb
cmp
add
pop
cmpsl
and
mov
push
mov
loopne
fidivrs
pop
and
pop
int
test
jl
adc
jo
cmp
cmp
xchg
lahf
lea
cmp
xchg
mov
push
inc
push
stos
out
ja
notl
sub
adc
daa
fistl
inc
iret
addb
divl
lcall
pop
mov
push
pop
mov
dec
dec
jbe
fisubs
fnstenv
jnp
movsb
fs
add
adc
fiadds
mov
leave
push
add
pop
int3
xchg
pushf
xchg
test
shll
mull
ret
mulb
or
add
sbb
iret
cmpsl
add
mov
jp
jmp
rorb
divl
mov
ljmp
jnp
insb
clc
mov
stos
hlt
clc
test
movsl
lods
notb
shl
sbb
in
int
bound
jne
adc
lods
mov
enter
add
es
mov
xor
stos
sub
push
sbb
jb
shl
or
jmp
or
sbb
ja
xchg
inc
add
add
out
add
aam
xchg
sub
push
add
lret
aas
push
dec
int3
cmp
nop
cmp
int3
addb
ds
insb
mov
push
add
mov
xor
xor
in
enter
das
aam
popa
xor
mov
insb
lods
pop
arpl
push
subl
inc
outsb
or
dec
sub
pop
mov
test
mov
mov
sbb
add
sahf
loope
add
stc
push
mov
movsb
lea
popa
ljmp
fstpl
sbb
mov
dec
dec
aam
fcompl
test
fwait
call
or
inc
ljmp
loop
inc
adc
xchg
stos
lock
mov
adc
mov
sbb
inc
add
xlat
out
jl
push
add
ret
adc
add
inc
add
nop
jb
add
fwait
movsb
pop
push
push
mov
xchg
ret
inc
enter
cltd
mov
stc
nop
jb
add
push
and
lea
nop
cld
nop
jmp
xchg
push
addl
loope
add
stc
nop
jb
add
fisttpl
test
nop
jb
inc
ret
popa
loope
add
pop
inc
add
inc
stc
nop
jb
repz
daa
add
stc
nop
jb
add
xchg
jmp
add
xchg
mov
add
nop
cld
nop
jmp
xor
stos
pop
nop
cld
nop
jmp
xor
add
test
cli
loop
mov
stc
nop
jb
add
adc
xchg
add
jb
add
mov
add
nop
cld
nop
jmp
faddl
add
add
movzwl
stc
nop
jb
faddl
push
pop
loope
pop
stc
nop
jb
stos
push
add
faddl
iret
mov
stc
nop
jb
fadds
test
add
add
not
stc
nop
jb
aam
add
add
jns
push
mov
xchg
ret
add
add
lret
cld
nop
jmp
pusha
mov
add
imul
insb
call
and
out
enter
lods
nop
cld
nop
jmp
daa
in
and
add
add
nop
cld
nop
jmp
add
stc
nop
jb
xchg
add
add
lea
mov
xchg
ret
fsubrs
xchg
outsl
mov
stc
nop
jb
xor
push
mov
nop
jb
add
add
add
call
stc
nop
jb
xchg
push
lret
xchg
jp
dec
add
nop
jb
add
fwait
cmc
jge
stc
nop
jb
enter
cmc
inc
mov
rolb
add
push
mov
xchg
ret
add
stos
xchg
sbb
stc
nop
jb
add
add
ret
daa
xchg
and
nop
cld
nop
jmp
add
add
sbb
data16
cld
nop
jmp
mov
xor
push
stc
nop
jb
xchg
add
add
xchg
mov
push
inc
add
add
add
push
push
mov
xchg
ret
push
add
push
stc
nop
jb
xchg
jo
add
lcall
cmpsl
and
add
add
add
push
mov
xchg
ret
pusha
add
pop
test
sbbb
add
nop
jb
imul
shrl
nop
jb
add
add
nop
cld
nop
jmp
ret
jae
add
test
add
nop
jb
in
xor
add
ljmp
add
cli
add
je
stc
nop
jb
sub
sbb
jb
add
add
push
je
pop
nop
cld
nop
jmp
add
add
push
stc
nop
jb
add
cmc
add
cmpsl
ds
push
mov
xchg
ret
neg
add
add
push
mov
xchg
ret
lret
pop
xchg
inc
jb
stc
nop
jb
dec
push
add
rclb
add
and
add
add
js
jne
stc
nop
jb
insl
stos
push
add
testl
nop
cld
nop
jmp
lret
xor
imul
nop
cld
nop
jmp
add
stos
xor
add
popf
cmp
push
mov
xchg
ret
add
inc
or
add
stc
nop
jb
add
pop
popa
stc
nop
jb
add
add
push
lret
ja
ficoms
nop
jb
in
add
xchg
idiv
add
stc
nop
jb
push
mov
push
stc
nop
jb
xor
add
push
push
mov
xchg
ret
add
add
les
add
add
nop
jb
cmc
push
cs
stc
nop
jb
cmc
add
and
add
nop
jb
push
push
callw
and
stc
nop
jb
aam
sahf
jae
fimull
subb
xchg
add
pop
nop
cld
nop
jmp
add
xor
add
jecxz
push
stc
nop
jb
pop
add
faddl
xchg
in
jmp
add
add
nop
jb
add
push
nop
cld
nop
jmp
add
mov
dec
sahf
xor
lea
stc
nop
jb
faddl
test
mov
add
or
add
add
add
add
les
mov
xchg
ret
add
loop
push
push
mov
xchg
ret
add
add
enter
jbe
stc
nop
jb
sbb
and
stc
nop
jb
test
loop
sti
nop
cld
nop
jmp
xchg
stos
dec
add
or
mov
xchg
ret
mov
add
mov
stc
nop
jb
add
lea
stc
nop
jb
out
imul
mov
xchg
ret
pusha
testb
test
push
mov
xchg
ret
inc
cli
add
arpl
jne
stc
nop
jb
adc
mov
xchg
ret
push
add
xlat
popa
decl
jb
jns
add
div
into
cmpl
nop
cld
nop
jmp
lret
add
push
in
push
xor
stc
nop
jb
repz
add
pushf
pop
stc
nop
jb
add
add
add
mov
add
add
nop
jb
sub
insl
pop
stc
nop
jb
xor
add
add
mov
adc
nop
jb
xchg
xchg
add
rolb
add
stc
nop
jb
xchg
add
add
movsl
leave
sub
stc
nop
jb
xchg
add
sub
scas
call
stc
nop
jb
push
in
jmp
jb
fwait
in
ret
add
sti
leave
stc
nop
jb
lret
sahf
jp
add
add
push
mov
xchg
ret
pusha
sahf
jae
add
push
stc
nop
jb
add
add
daa
fwait
mov
add
sbb
jge
stc
nop
jb
push
cmc
andl
mov
push
mov
xchg
ret
push
stos
jo
cmp
add
jmp
inc
add
add
add
nop
cld
nop
jmp
jae
sahf
add
inc
in
nop
cld
nop
jmp
add
add
ret
stc
movzwl
stc
nop
jb
add
inc
add
push
push
mov
xchg
ret
xorl
ret
mov
stc
nop
jb
add
push
dec
add
mov
sbb
mov
iret
stc
pop
add
std
xor
stc
nop
jb
inc
xchg
or
addb
stc
nop
jb
add
daa
dec
mov
push
mov
xchg
ret
aam
pop
mov
stc
nop
jb
add
or
stc
nop
jb
aam
add
stc
nop
jb
lret
add
add
insl
shl
nop
cld
nop
jmp
push
and
add
mov
popa
add
nop
jb
lret
push
add
pop
push
mov
xchg
ret
add
xor
push
call
stc
nop
jb
add
test
push
stc
nop
jb
add
add
pusha
add
pop
push
mov
xchg
ret
cmc
add
jae
xchg
ror
push
stc
nop
jb
add
sbb
add
stc
nop
jb
push
inc
push
push
add
test
nop
cld
nop
jmp
mov
add
add
nop
cld
nop
jmp
add
repz
add
add
add
sbb
add
and
mov
stc
nop
jb
fadds
push
add
add
lock
stos
mov
stc
nop
jb
fmuls
jne
stc
nop
jb
xchg
push
jp
stc
nop
jb
add
push
add
sub
pop
stc
nop
jb
outsb
imul
ror
jne
stc
nop
jb
daa
outsb
aas
add
stc
nop
jb
insl
je
faddl
jecxz
inc
add
insb
inc
insb
insb
stc
nop
jb
add
add
stc
nop
jb
adc
pop
add
sahf
addb
stos
xor
stc
nop
jb
mov
push
lret
iret
push
mov
stos
fldln2
ss
push
add
xchg
test
nop
cld
nop
jmp
aam
aam
add
stc
nop
jb
add
add
sub
mov
xchg
ret
cmc
repz
movb
je
stc
nop
jb
add
jbe
mov
stc
nop
jb
sbb
add
add
stc
incl
cmc
pusha
add
sub
stc
nop
jb
je
add
imul
stc
nop
jb
add
xchg
hlt
xchg
fs
and
add
stc
nop
jb
xchg
insl
cmp
jb
push
add
dec
lret
add
test
nop
cld
nop
jmp
xchg
je
add
push
add
nop
cld
nop
jmp
add
push
mov
xchg
ret
push
xor
add
out
insb
pop
push
mov
xchg
ret
add
dec
fadds
add
inc
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
add
xor
nop
jb
add
test
adc
mov
stc
nop
jb
add
add
dec
adc
add
add
pusha
lret
ljmp
inc
add
add
daa
aam
pushl
nop
cld
nop
jmp
out
add
add
add
nop
jb
add
add
stc
nop
jb
notb
add
add
sbb
out
adc
add
sbb
add
and
pop
out
jmp
orb
add
add
add
inc
aam
jne
add
and
jmp
stc
ja
pop
inc
fstl
enter
out
mov
stc
nop
jb
xor
lret
add
mov
stc
nop
jb
add
insl
xchg
pop
push
add
add
add
movswl
stc
nop
jb
jp
inc
push
jp
stc
nop
jb
fdivs
add
add
loop
add
nop
jb
add
inc
add
sub
push
mov
xchg
ret
inc
test
pop
nop
cld
nop
jmp
and
add
fmull
mov
stc
nop
jb
push
cmc
add
add
mov
xchg
ret
cmc
div
xor
bound
jb
decl
push
mov
xchg
ret
add
mov
or
nop
jb
out
lret
add
add
add
nop
cld
nop
jmp
add
add
add
mov
nop
cld
nop
jmp
add
add
pop
mov
nop
cld
nop
jmp
add
add
pop
push
stc
nop
jb
add
jo
mov
nop
cld
nop
jmp
add
stc
nop
jb
enter
fadds
push
pop
mov
stc
nop
jb
ljmp
sti
testl
je
je
cmpw
nop
cld
nop
jmp
ds
add
lods
stc
nop
jb
mov
add
dec
add
mov
sbb
add
nop
jb
add
inc
add
adc
nop
jb
stos
add
in
lock
mov
push
mov
xchg
ret
jae
inc
dec
mov
jb
dec
add
je
addb
add
push
mov
xchg
ret
xchg
push
mov
pop
jmp
stc
nop
jb
insl
add
add
cwtl
jne
stc
nop
jb
add
xor
nop
cld
nop
jmp
out
jp
sbb
push
mov
xchg
ret
add
sbb
push
mov
xchg
ret
add
out
and
inc
push
jae
mov
nop
cld
nop
jmp
sub
je
mov
stc
nop
jb
jo
add
mov
cmp
ret
fsubrl
stc
nop
jb
xchg
inc
add
sahf
lret
mov
stc
nop
jb
xchg
xor
cmc
push
nop
mov
add
nop
jb
add
movsb
xchg
xor
add
stc
nop
jb
dec
add
add
adc
mov
stc
nop
jb
dec
inc
add
add
add
stc
nop
jb
add
cmp
mov
xchg
ret
mov
push
push
fsubrl
nop
jb
add
test
cld
push
mov
xchg
ret
add
sahf
test
nop
jb
and
add
push
enter
test
stc
nop
jb
adc
push
jg
stc
nop
jb
xchg
add
addl
mov
stc
nop
jb
insl
add
movb
jle
stc
nop
jb
add
add
add
add
daa
movsl
push
nop
jb
add
adc
stos
cmp
nop
cld
nop
jmp
push
cli
sahf
test
repnz
mov
stc
nop
jb
out
add
mov
push
mov
xchg
ret
add
aam
pop
nop
cld
nop
jmp
ljmp
leave
add
push
mov
xchg
ret
xchg
add
cmpsb
xchg
enter
push
mov
xchg
ret
add
push
push
mov
xchg
ret
xor
imul
push
mov
xchg
ret
fwait
add
add
popa
stc
nop
jb
lret
jae
cmc
add
nop
cld
nop
jmp
out
push
out
xchg
inc
mov
add
nop
jb
imul
inc
add
mov
jne
add
stc
nop
jb
and
inc
and
stc
nop
jb
add
jae
push
push
mov
xchg
ret
pop
add
add
push
stc
nop
jb
stos
add
add
xchg
add
nop
cld
nop
jmp
push
insl
ds
jo
push
stc
nop
jb
sbb
test
push
mov
xchg
ret
add
xor
add
popa
add
cld
nop
jmp
lret
add
hlt
lret
adc
add
nop
jb
imul
stc
nop
jb
cmc
jns
jo
inc
adc
pop
push
mov
xchg
ret
add
push
sub
inc
scas
add
push
mov
xchg
ret
add
mov
jb
inc
push
cli
or
mov
nop
cld
nop
jmp
add
dec
stos
sbbl
jb
add
sub
insl
push
push
mov
xchg
ret
dec
push
sahf
test
pop
add
stc
nop
jb
inc
xor
outsl
loopne
nop
jb
sub
stos
xchg
test
add
stc
nop
jb
add
add
cmp
nop
jb
xor
add
enter
stc
nop
jb
add
xor
add
and
push
mov
xchg
ret
ds
in
jmp
nop
cld
nop
jmp
sahf
jae,pt
movzwl
stc
nop
jb
stos
add
add
push
push
stc
nop
jb
xchg
add
inc
stc
nop
jb
repz
add
add
stc
nop
jb
fwait
push
add
ljmp
jb
add
enter
nop
jb
add
pop
add
mov
jb
push
add
add
add
call
stc
nop
jb
inc
imul
pop
stc
nop
jb
add
stos
insl
add
fdiv
sar
jne
stc
nop
jb
push
stc
push
push
mov
xchg
ret
ret
add
add
stc
nop
jb
add
xchg
add
mov
stc
nop
jb
add
add
inc
in
je
nop
cld
nop
jmp
add
stos
pusha
stc
nop
jb
push
sbb
mov
stc
nop
jb
ret
sahf
add
add
inc
inc
add
sbb
add
sbb
add
sub
jmp
xor
add
add
nop
cld
nop
jmp
xor
xorl
mov
jb
testb
pop
and
movsb
iret
and
push
mov
xchg
ret
imul
jb
add
cmc
push
add
pushl
push
mov
xchg
ret
lret
xor
nop
cld
nop
jmp
add
and
adc
add
mov
stc
nop
jb
add
ljmp
jb
fsubrs
add
out
push
stc
nop
jb
add
imul
add
push
mov
xchg
ret
insl
stos
pusha
cmp
add
add
nop
jb
sbb
add
icebp
incl
push
stc
nop
jb
jae
add
add
jmp
nop
cld
nop
jmp
add
add
adc
incl
aam
jae
cmc
jns
jmp
jb
add
add
push
mov
add
cmp
adc
lcall
xor
add
stc
nop
jb
push
out
sub
stc
nop
jb
sub
inc
add
sbb
cld
nop
jmp
adc
add
jb
and
add
xchg
nop
jb
insl
add
ret
push
add
cmp
jb
xchg
je
add
or
andl
orb
mov
push
mov
xchg
ret
xchg
add
faddl
mov
xchg
ret
xor
iret
push
mov
add
add
xchg
in
add
push
add
sbb
and
das
cli
inc
add
push
xor
add
stc
nop
jb
sub
inc
add
sar
mov
push
mov
xchg
ret
add
add
test
or
add
incl
imul
cmp
adc
add
add
mov
clc
inc
add
add
push
cmc
mull
sar
jb
mov
jno
add
test
repnz
stc
nop
jb
test
mov
xchg
ret
enter
mov
add
nop
jb
insl
cmc
fdivrl
addl
stc
nop
jb
add
add
mov
pop
pusha
stc
nop
jb
add
xor
das
mov
stc
nop
jb
fsubl
adc
jb
jnp
incb
xchg
ret
add
insl
adc
adc
add
nop
jb
add
in
push
stc
nop
jb
inc
addl
popa
stc
nop
jb
add
jo
cmc
add
push
push
mov
xchg
ret
imul
jb
add
add
dec
enter
jnp
jmp
cmp
add
xchg
xor
sahf
xchg
sbb
stc
nop
jb
add
mov
xchg
ret
xchg
cli
add
ljmp
jmp
inc
cmc
cmc
add
and
and
sub
popa
add
mov
xchg
ret
fwait
repz
xor
stc
nop
jb
add
add
xor
imul
repz
add
add
cmp
nop
jb
lret
add
add
xchg
jne
stc
nop
jb
xchg
daa
add
icebp
mov
jne
stc
nop
jb
push
add
je
mov
push
mov
xchg
ret
add
add
sbb
out
add
and
cmpl
repz
faddl
sub
icebp
stc
nop
jb
add
sub
add
xchg
jbe
nop
nop
cld
nop
jmp
adc
add
test
cmp
nop
cld
nop
jmp
faddl
add
leave
nop
cld
nop
jmp
xor
add
add
dec
xor
push
mov
xchg
ret
enter
push
mov
nop
cld
nop
jmp
add
add
add
pop
stc
nop
jb
push
fadds
pusha
divb
add
stc
nop
jb
add
mov
adc
nop
jb
add
add
daa
lahf
rep
stc
nop
jb
add
pop
add
nop
jb
pop
lret
add
xchg
loope
cld
mov
stc
nop
jb
add
test
add
xor
xor
stc
nop
jb
jns
ljmp
jmp
faddl
push
add
nop
sub
nop
cld
nop
jmp
inc
lret
cmp
outsb
or
add
nop
jb
jns
daa
dec
pusha
stc
nop
jb
lret
cli
stos
dec
adc
xor
into
call
stc
nop
jb
add
add
lea
stc
nop
jb
add
sbb
arpl
nop
jb
push
inc
pop
jmp
dec
adc
mov
xchg
ret
add
stos
mov
add
push
mov
xchg
ret
xor
add
mov
mov
ljmp
jae
xchg
xor
dec
call
stc
nop
jb
aam
out
rcr
popa
add
nop
jb
mov
add
xchg
add
add
mov
incl
add
sub
dec
cmp
nop
jb
notb
add
xor
scas
or
stc
nop
jb
add
add
adc
inc
call
clc
call
daa
jns
cli
push
push
mov
xchg
ret
outsb
insl
add
push
or
mov
xchg
ret
push
add
add
mov
stc
nop
jb
inc
ds
mov
fdivrs
filds
xchg
ret
xchg
push
test
call
stc
nop
jb
add
add
cmp
nop
cld
nop
jmp
add
mov
push
mov
xchg
ret
test
ret
fiadds
mov
xchg
ret
add
add
imul
push
stc
nop
jb
inc
pop
outsb
testb
add
add
nop
jb
mov
fsts
in
data16
add
in
fldcw
test
insb
pop
stc
nop
jb
add
add
push
add
jmp
stc
nop
jb
add
add
sub
nop
cld
nop
jmp
add
movzwl
stc
nop
jb
add
add
and
stc
nop
jb
ljmp
lret
nop
cld
nop
jmp
inc
add
add
lret
push
aam
rep
stc
nop
jb
insl
add
repz
add
push
mov
xchg
ret
add
into
mov
stc
nop
jb
add
lahf
je
stc
nop
jb
jp
ja
add
add
push
mov
xchg
ret
ljmp
nop
jb
cmc
test
or
test
add
add
nop
jb
sahf
add
jg
mov
add
add
nop
jb
add
sub
or
inc
add
xchg
pusha
add
or
add
cld
ljmp
mov
xchg
ret
stos
fwait
jns
dec
aad
add
jb
inc
cmc
push
fdivl
pop
arpl
jne
stc
nop
jb
jp
lret
movsb
out
mov
stc
nop
jb
add
push
push
mov
xchg
ret
pusha
add
add
je
stc
nop
jb
mov
push
mov
xchg
ret
out
dec
add
xor
stc
nop
jb
inc
add
add
imul
jb
outsb
add
fsts
cld
nop
jmp
add
push
faddl
ds
fildl
add
nop
jb
jo
xchg
adc
mov
stc
nop
jb
add
add
add
sti
push
stc
nop
jb
in
add
pop
stc
nop
jb
add
mov
fmuls
mov
add
cld
nop
jmp
inc
outsb
dec
test
or
mov
xchg
ret
add
movb
mov
into
push
mov
add
fiaddl
add
jne
loop
shll
nop
jb
xchg
add
lret
and
add
nop
cld
nop
jmp
mov
mov
nop
cld
nop
jmp
mov
push
and
stc
nop
jb
add
cmpl
nop
cld
nop
jmp
daa
add
nop
cld
nop
jmp
sbb
test
nop
cld
nop
jmp
jp
aam
add
cmp
nop
jb
fadds
push
add
add
mov
sbbb
jae
add
add
stc
nop
jb
add
add
add
nop
cld
nop
jmp
cli
je
lea
nop
cld
nop
jmp
add
sahf
mov
addb
mov
stc
nop
jb
daa
add
add
sbb
or
push
mov
xchg
ret
imulb
imull
nop
jb
jae
add
push
test
push
fisttps
subb
add
mov
ss
mov
push
nop
cld
nop
jmp
xor
fwait
add
add
nop
cld
nop
jmp
dec
fadd
and
adc
cld
nop
jmp
xor
add
and
mov
xchg
ret
add
nop
cld
nop
jmp
imul
mov
dec
imul
stc
nop
jb
faddl
fwait
add
ds
push
mov
xchg
ret
adc
imul
push
push
mov
xchg
ret
lret
add
nop
jb
fwait
add
inc
add
add
nop
jb
add
add
push
and
mov
stc
nop
jb
add
mov
stc
nop
jb
xor
jp
add
popa
data16
stc
nop
jb
add
mov
hlt
jnp
nop
cld
nop
jmp
ljmp
xchg
pop
inc
es
fs
nop
jmp
push
jo
add
cli
rep
stc
nop
jb
inc
add
add
push
nop
jb
push
mov
mov
stc
nop
jb
add
lods
push
mov
xchg
ret
mov
xchg
add
sbb
nop
cld
nop
jmp
add
cmc
stos
jp
mov
lock
add
jae
add
gs
inc
nop
cld
nop
jmp
add
add
repz
jno
jecxz
pop
add
stc
nop
jb
ds
cmc
stos
jmp
nop
cld
nop
jmp
aam
add
push
mov
xchg
ret
add
add
jbe
mov
stc
nop
jb
xchg
add
pusha
add
andl
xorb
jle
add
add
stc
nop
jb
fwait
add
lret
cld
nop
jmp
cmc
and
add
je
lds
stc
nop
jb
mov
cmpl
nop
cld
nop
jmp
add
add
add
lock
ljmp
push
push
mov
xchg
ret
and
outsb
add
stc
nop
jb
add
add
ljmp
sbb
add
nop
cld
nop
jmp
add
nop
cld
nop
jmp
add
jno
popf
pusha
stc
nop
jb
add
add
push
je
and
mov
xorb
add
movsl
nop
cld
nop
jmp
div
out
and
add
lret
mov
stc
nop
jb
test
lods
push
stc
nop
jb
add
xor
add
imul
push
test
push
add
std
cli
inc
add
push
add
imul
adc
dec
xor
imul
sub
lock
mov
xchg
ret
cli
add
sub
nop
jb
pusha
sahf
add
add
call
icebp
decl
add
stc
nop
jb
add
testb
jo
cltd
add
nop
cld
nop
jmp
add
add
add
cmpsb
add
cs
stc
nop
jb
inc
lret
push
mov
stc
nop
jb
add
add
and
stc
nop
jb
in
add
add
outsb
and
mov
xchg
ret
inc
test
xlat
mov
cld
nop
jmp
adcl
add
sub
dec
cmp
nop
jb
jo
mov
addl
pusha
stc
nop
jb
add
add
cmc
ret
lahf
add
stc
nop
jb
xorl
mov
stc
nop
jb
add
enter
nop
jb
xchg
add
add
add
sub
cld
nop
jmp
cmc
inc
je
dec
add
loope
nop
jb
xor
lret
repz
mov
stc
nop
jb
mov
lret
test
push
nop
cld
nop
jmp
add
add
add
jns
mov
nop
cld
nop
jmp
daa
push
add
add
push
mov
xchg
ret
xchg
add
out
cli
stc
nop
jb
jp
fistpll
stc
nop
jb
add
sahf
adc
mov
mov
xchg
ret
add
cmp
outsb
stc
nop
jb
stos
jns
sbb
jb
add
enter
outsb
add
stc
nop
jb
rep
ds
lea
push
mov
xchg
ret
faddl
xchg
jecxz
cs
stc
nop
jb
add
repz
push
mulb
stc
nop
jb
mov
je
add
test
nop
jb
lret
xchg
jb
fdivl
add
stc
nop
jb
add
inc
decb
test
add
add
nop
jb
add
into
and
stc
nop
jb
push
add
repz
enter
je
inc
add
xchg
jae
mov
cld
nop
jmp
add
add
test
inc
add
nop
jb
add
mov
jmp
jae
xchg
add
mov
nop
jb
mov
mov
jno
add
loopne
add
jae
cli
add
dec
nop
cld
nop
jmp
add
xor
es
into
cmpl
push
mov
xchg
ret
add
add
out
pop
add
daa
add
pop
nop
cld
nop
jmp
push
fwait
mov
add
nop
jb
mov
add
push
add
cmp
pause
cld
nop
jmp
outsb
fsubl
pushl
push
mov
xchg
ret
add
test
movzwl
stc
nop
jb
jae
xchg
add
mov
push
mov
xchg
ret
add
add
mov
jb
add
lret
movsl
sbb
arpl
stc
nop
jb
faddl
divb
mov
xchg
ret
faddl
add
mov
stc
nop
jb
add
add
out
add
push
add
nop
cld
nop
jmp
add
add
add
add
inc
jo
push
bound
and
nop
cld
nop
jmp
add
mov
stc
nop
jb
stos
jns
and
adc
nop
jb
xor
inc
daa
dec
push
pop
stc
nop
jb
inc
daa
add
test
cmc
std
add
stc
nop
jb
dec
cmc
add
ret
add
out
call
xchg
jmp
stc
nop
jb
mov
add
call
stc
nop
jb
add
add
shr
nop
cld
nop
jmp
add
add
stc
nop
jb
pusha
enter
jb
cmp
nop
cld
nop
jmp
dec
add
add
and
addb
fwait
pop
push
mov
xchg
ret
xchg
add
dec
dec
stos
stc
nop
jb
je
add
push
ljmp
stc
nop
jb
add
push
xor
push
add
mov
stc
nop
jb
repz
xchg
add
add
cld
decl
sbb
push
mov
xchg
ret
add
xchg
stc
nop
jb
sbb
add
loop
nop
cld
nop
jmp
fwait
xor
pop
stc
nop
jb
dec
add
push
inc
xchg
lcall
add
incl
add
add
movsl
jge
test
call
jb
add
and
stc
nop
jb
add
add
xor
pop
nop
cld
nop
jmp
push
fadds
aam
jge
leave
nop
cld
nop
jmp
add
xchg
stc
nop
jb
outsb
daa
addl
xor
mov
nop
cld
nop
jmp
jns
add
add
push
xor
lea
nop
cld
nop
jmp
xchg
add
enter
xor
cli
incl
push
add
adc
mov
stc
nop
jb
sbb
add
insb
add
nop
jb
inc
add
lahf
mov
stc
nop
jb
add
out
jne
stc
nop
jb
repz
jbe
push
stc
nop
jb
add
test
nop
jb
cli
xchg
pop
inc
nop
cld
nop
jmp
add
add
add
nop
jb
add
push
mov
add
stc
nop
jb
jo
inc
mov
push
add
je
stc
dec
nop
cld
nop
jmp
sbb
add
fbstp
add
stc
nop
jb
ljmp
and
push
mov
xchg
ret
dec
add
fisttps
jb
add
pop
add
adc
gs
inc
add
add
dec
add
stc
nop
jb
jo
add
add
ror
stc
nop
jb
lret
add
inc
add
mov
stc
nop
jb
add
add
push
add
call
nop
cld
nop
jmp
pop
test
fs
lea
stc
nop
jb
add
mov
stc
nop
jb
add
add
and
stc
nop
jb
test
mov
mov
push
mov
xchg
ret
add
subl
jb
pusha
push
lret
les
imul
and
mov
imul
nop
jmp
and
fcoml
sahf
test
test
nop
jb
xchg
enter
stc
nop
jb
pusha
enter
add
sahf
xor
nop
cld
nop
jmp
add
addb
pop
dec
nop
cld
nop
jmp
enter
pop
mov
xchg
push
cli
mov
stc
nop
jb
mov
lret
push
stc
nop
jb
add
subl
stc
mov
nop
cld
nop
jmp
lret
pop
ret
adc
mov
jno
xchg
add
ret
rolb
add
jmp
nop
jb
add
add
jp
mov
push
mov
xchg
ret
add
xchg
test
loope
stc
nop
jb
jp
sbb
test
std
stc
nop
jb
push
add
push
mov
xchg
ret
xor
and
cli
or
add
adc
enter
xchg
mov
mov
jl
jge
stc
nop
jb
add
adc
lock
mov
nop
cld
nop
jmp
push
inc
mov
int3
add
and
lret
and
roll
jb
xchg
add
jae
xor
mov
stc
nop
jb
push
bound
dec
push
push
mov
xchg
ret
xchg
in
mov
add
add
nop
jb
ret
lret
ret
stc
nop
jb
push
fwait
add
add
cmp
subb
pop
adc
nop
cld
nop
jmp
enter
daa
in
push
push
mov
xchg
ret
sub
add
add
or
stc
nop
jb
add
inc
and
push
stc
nop
jb
sub
add
in
repz
push
mov
mov
cmp
push
inc
mov
mov
stc
nop
jb
inc
dec
pop
out
ja
stc
nop
jb
lret
add
stc
nop
jb
mov
and
mov
cmp
cli
stc
nop
jb
add
add
int
movsb
stc
nop
jb
add
out
inc
xchg
mov
add
add
and
xchg
and
add
sub
fmuls
adc
hlt
inc
bound
mov
xor
add
push
rolb
xor
movsb
fsubl
add
mov
movb
out
lods
loop
adc
jns,pn
test
jo
loop
nop
sbb
mov
insl
pop
sahf
lds
loopne
sbb
add
jbe
jecxz
xchg
xor
mov
fcoml
insl
stc
jbe
jle
sbb
mov
movsb
mov
inc
add
pop
cmpl
dec
or
cld
outsl
cmp
xlat
jl
add
int3
rolb
and
cmp
inc
add
add
dec
rorl
sbb
out
cltd
fstpl
and
or
into
pop
addb
cli
cli
clc
out
mov
aam
clc
fnsave
mov
inc
jnp
test
sub
push
push
xor
mov
movb
mov
sbb
mov
mov
clc
into
or
stc
addb
mov
inc
add
add
ss
adc
test
test
xor
mov
push
clc
call
addb
jo
xor
addb
sub
pop
scas
push
pop
xchg
or
fwait
aad
lahf
jae
bound
push
mov
push
mov
add
dec
push
xor
les
dec
ret
sbb
lds
cmp
lcall
jg
cmp
push
or
loope
push
popa
cld
or
pop
mov
sub
lock
mov
gs
mov
cmp
shl
xor
jge
push
and
ret
lcall
stos
inc
add
fwait
inc
scas
hlt
sbb
cmp
push
pop
jmp
jae
sbb
add
mov
shlb
les
pop
cmp
outsl
pop
cmp
stc
add
aad
rolb
into
jmp
inc
add
lods
ss
jmp
mov
and
mov
insb
iret
loope
aas
iret
xchg
fsub
xchg
xchg
sub
cmp
add
xor
jle
add
pop
rcll
push
mov
dec
into
fidivrs
push
loop
fisttps
cmpsb
adc
xchg
rolb
iret
in
fdivs
mov
es
addr16
cmp
hlt
xor
repz
jnp
test
cwtl
imul
xchg
bound
lods
jg
or
clc
mov
sbb
popa
out
cwtl
dec
hlt
cmpsb
jp
stc
sub
push
sbb
cwtl
push
jg
mov
jge
shll
bnd
mov
and
orl
push
movsb
es
push
arpl
add
add
push
pusha
add
sarl
add
add
leave
loope
push
sahf
je
in
xchg
insl
dec
sub
adc
lret
cwtl
sbb
add
and
shll
cltd
jns
addb
call
mov
loopne
mov
sbb
arpl
fdivl
add
mov
sub
outsl
lret
fs
repnz
roll
and
inc
add
loop
mov
and
add
test
movsl
or
nop
hlt
xor
push
fiadds
pop
inc
add
push
add
adc
movsl
mov
enter
sti
cmp
xchg
js
mov
lds
pop
add
addr16
lret
test
test
jmp
jl
cwtl
sub
cmpsb
adc
inc
add
leave
pushf
repz
jne
mov
out
fimuls
dec
push
into
out
decl
mov
dec
sub
insb
test
mov
movb
jle
test
addr16
out
bound
gs
cwtl
or
leave
hlt
sti
js
xchg
outsb
testl
sub
clc
je
add
sub
xchg
repz
je
ret
push
jnp
push
inc
add
cmp
or
mov
or
adc
xor
gs
pop
jne
in
push
test
das
out
jp
mov
int
inc
loop
sti
xor
pop
xchg
push
mov
movsl
add
pop
add
mov
rolb
jns
sub
je
pop
xchg
and
xor
rorb
and
arpl
outsb
inc
add
outsl
cmpsb
test
xor
or
popa
aaa
pop
fmull
addb
jg
add
xor
push
mov
fistl
jo
jle
inc
add
mov
popf
xor
enter
aaa
rcrb
adc
fisubrs
jmp
and
xchg
lods
test
mov
adc
ljmp
push
push
outsb
stc
ret
push
xor
bound
xchg
mov
add
push
push
jp
in
xchg
jmp
sbb
hlt
nop
jne
cli
outsb
mov
add
ror
pushf
add
cli
loopne
or
dec
enter
stc
bound
cmp
add
rorl
js
pop
mov
mov
in
movsl
ret
mov
sti
test
inc
cmp
mov
xchg
push
adc
cmp
inc
push
cmp
sbb
hlt
std
jne
loop
sub
mov
cmp
mov
fwait
and
loope
mov
fs
in
mov
jnp
pop
stos
pusha
add
pop
mov
arpl
mov
mov
pop
sbb
add
nop
mov
ja
push
je
mov
movb
add
rolb
in
push
add
gs
call
shll
popa
mov
enter
mov
outsl
mov
insl
mov
mov
jge
movsb
arpl
cmpsb
or
data16
repz
or
cmp
dec
out
jbe
add
add
or
mov
mov
lods
mov
adc
add
add
xchg
rolb
call
mov
loope
sbb
hlt
movsl
rcrl
jnp
xchg
xor
adc
adc
push
pushf
or
xor
jecxz
mov
fcoms
out
pop
aaa
nop
movsb
repnz
mov
lock
mov
sbb
call
stos
mov
popf
mov
sbb
repnz
outsl
add
mov
aad
sbb
outsb
jns
add
mov
jns
test
cmp
sub
jg
xchg
loope
mulb
scas
insb
insb
pop
mov
out
sarb
and
popa
stc
cmp
xchg
fstl
punpckhbw
loope
mov
cmc
repz
nop
mov
mov
jp
and
sub
xchg
imulb
inc
add
and
mov
push
add
mov
insb
push
pop
in
cwtl
jge
fsts
in
es
leave
rorb
mov
sub
int
std
xor
xor
in
cmp
lret
ss
lock
test
icebp
or
leave
adc
inc
pop
repnz
xchg
and
sub
mov
xor
xor
pop
fs
addb
mul
pop
sahf
call
inc
add
cli
xchg
lods
jmp
xchg
pop
add
fstpl
fists
outsb
mov
das
test
lret
push
fidivrs
in
pop
inc
ljmp
add
add
mov
inc
mov
add
and
cmp
push
lods
repnz
fwait
shll
adc
loopne
stos
fcoms
lahf
pop
inc
fbstp
jecxz
aaa
inc
stos
or
sub
stc
dec
cmp
fcmovnb
dec
fidivs
inc
add
fcoms
fcompl
repnz
es
popf
imul
ljmp
push
mov
inc
das
mov
inc
add
inc
add
cld
aaa
sbb
ds
sub
sbb
call
pop
andl
sub
sahf
mov
jbe
push
outsb
or
xor
mov
leave
push
fnstenv
or
xor
addb
stc
gs
stos
leave
mov
mov
add
jp
outsb
lfs
js
or
daa
and
ror
mov
or
and
imul
aas
or
add
and
lret
test
adc
xlat
mov
inc
je
xchg
push
idiv
popf
xchg
push
mov
inc
add
sbb
dec
addr16
leave
xor
popf
jp
mov
es
sbb
les
pop
jbe
jnp
stc
jg
mov
das
arpl
sub
decb
jle
stos
and
fld
add
mov
xchg
xchg
mov
loope
xchg
mov
arpl
dec
rcl
pop
mov
push
push
test
int
in
inc
cmp
popa
or
add
inc
or
aad
cmpsl
jb
filds
mov
and
fwait
sbb
adc
sub
xchg
mov
add
push
mov
mov
sti
outsl
lock
repz
movb
lret
jo
mov
test
dec
lea
xlat
sbb
pop
xchg
sbb
xchg
mov
and
ret
xchg
movb
pusha
add
addb
sti
inc
lea
cmpsl
rclb
mov
add
loopne
filds
out
clc
mov
pop
push
fidivrs
sub
and
mov
scas
aad
and
jbe
and
movsb
divb
test
jno
jb
xchg
add
std
es
rol
add
cmp
sbb
lahf
stos
fistpl
scas
test
cmc
call
sbbl
add
cs
movb
xchg
inc
add
mov
jle
sub
sub
and
mov
or
push
std
xchg
pop
jmp
add
jbe
push
add
and
dec
xor
and
dec
mov
xchg
mov
add
add
add
mov
or
int3
addl
sbb
adc
xor
add
lods
jo
adc
inc
xor
ljmp
mull
add
mov
dec
ss
mov
add
adc
test
inc
arpl
and
pop
mov
jge
add
pop
adc
ja
popf
sbb
lock
ret
pop
jns
fsubrp
scas
loope
and
lods
xor
push
sbb
mov
std
cmp
jl
cmpl
add
sbb
stc
mov
sub
xor
int3
or
out
sbb
popa
addb
imul
cmp
dec
popa
pop
push
cmp
or
add
or
inc
add
adc
aas
add
test
push
mov
mov
push
outsl
cwtl
cmc
hlt
add
jle
insl
addb
fdivs
js
sub
add
add
and
adcl
dec
inc
dec
lods
inc
add
pop
pop
js
push
cld
cmp
add
aam
ret
add
adc
push
dec
scas
adc
loope
mov
and
loopne
cld
mov
outsb
cmp
lret
add
xlat
inc
add
clc
xor
dec
lahf
cld
mov
icebp
add
test
and
imul
dec
cmp
ss
clc
outsl
jecxz
rol
add
mov
shlb
xchg
adc
into
sub
je
pop
push
jnp
out
cmpsb
inc
add
xchg
mov
push
pop
add
cli
filds
fstp
or
or
mov
stos
xchg
mov
add
jbe
frstor
dec
mov
and
sub
adcl
mov
lods
faddl
imul
cmp
ljmp
xor
push
or
sbb
sub
add
clc
repnz
add
pop
push
cli
xlat
add
les
add
mov
jge
push
add
data16
cmp
xlat
fdivl
inc
dec
daa
mov
add
push
addb
repz
push
lock
sub
add
adc
pop
or
sbb
add
scas
push
int3
mov
add
test
repnz
or
sbb
std
xchg
pop
stos
inc
bound
idivb
cld
loop
xor
ds
iret
stc
lods
jo
out
adc
gs
add
lret
jbe
loopne
mov
jp
add
out
inc
cmp
dec
adc
addb
add
push
inc
xchg
sbb
xor
cmpsl
jne
pop
imul
add
inc
insb
adc
xchg
adc
and
xchg
jecxz
jne
std
pop
cld
call
pop
cmpsb
pop
negb
mov
ss
add
and
lcall
add
dec
cmp
cmc
aas
adc
pushf
in
dec
mov
pop
in
addb
dec
jg
loop
out
add
xchg
xor
add
add
lret
aad
mulb
insb
xchg
fdivp
jns
rolb
aam
insb
jb
jns
or
fcompl
xchg
pop
gs
jl
divl
shl
mov
je
popa
sbb
inc
add
stc
mov
fs
ja
add
addr16
add
xchg
addb
sahf
dec
inc
scas
bnd
sub
mov
cmpsl
cmp
iret
fmull
popa
pop
mov
arpl
push
add
rolb
pushf
add
add
inc
add
fbld
in
xchg
mov
jmp
lods
or
pop
ror
ljmp
ret
push
shlb
cli
into
ja
addr16
pop
movsb
roll
mov
cmp
dec
jle
or
mov
out
add
add
leave
pop
fnstenv
add
sbb
roll
add
subl
adc
sbb
ss
add
dec
movd
fildll
les
mov
sub
xchg
mov
dec
adc
add
jb
mov
adc
icebp
enter
mov
rolb
out
mov
jge
lahf
cwtl
mov
jnp
add
shlb
add
xor
add
mov
xchg
push
sbb
popf
pop
pop
clc
rolb
dec
test
je
shrl
mov
fdivr
pop
mov
or
dec
faddl
add
mov
add
jmp
jecxz
pop
clc
jnp
or
shll
inc
arpl
inc
add
cmp
test
call
ds
xchg
rcrb
inc
add
iret
dec
aad
jge
test
and
add
cmc
lahf
dec
xor
shrb
lret
test
sbb
mov
add
mov
jg
es
fisttpll
insl
icebp
in
test
xor
add
mov
xchg
test
js
scas
aaa
add
mov
xchg
pushf
lret
xor
aam
mov
ret
stos
fmuls
and
das
mov
sahf
fildll
xchg
addb
insb
int
add
pop
leave
repnz
add
jo
xchg
cli
test
mov
pop
fistl
push
movsl
les
call
movb
hlt
lahf
fs
add
hlt
pusha
add
enter
add
fstpt
inc
add
add
xchg
nop
das
imul
stos
mov
sbb
enter
ds
mov
mov
test
out
mov
inc
add
hlt
lods
mov
dec
inc
add
or
sub
dec
test
push
add
movsl
lret
test
xchg
int
cltd
lods
and
lea
push
inc
add
xor
add
adc
push
add
cmpsb
jmp
xchg
and
js
push
sbb
sbb
das
aam
faddp
out
push
sbbl
mov
mov
std
pop
aam
sbb
lock
add
mov
add
dec
arpl
cwtl
cmpsb
pop
cs
sahf
xor
xchg
xor
pop
or
cmp
mov
movaps
cli
in
jmp
and
loopne
enter
stos
ret
imul
rcl
xor
ds
push
aam
lret
mov
mov
add
and
add
xor
mov
repz
fstl
xor
lret
xor
xchg
les
mov
cli
mov
xchg
push
sbb
lock
mov
mov
pop
mov
jl
mov
sbb
mov
sub
adc
pop
cmp
xchg
sub
pusha
add
scas
je
mov
cmp
ret
add
xchg
es
jp
jecxz
bound
lret
jbe
add
inc
add
dec
pop
ret
scas
std
hlt
or
ljmp
mov
push
push
out
mov
js
cmp
or
jne
js
aaa
jne
mov
out
ret
inc
shll
outsl
push
out
shl
add
scas
das
mov
or
cmp
das
add
cmpl
jge
je
inc
call
xor
mov
rolb
rolb
out
mov
jnp
test
and
mov
push
add
adc
jg
sti
cmp
fwait
cmp
jl
jae
fsubp
arpl
mov
ret
add
cmp
add
xchg
leave
mov
test
mov
dec
jmp
jp
cmpsb
inc
int
iret
aaa
out
and
faddl
pop
pop
dec
jp
std
xchg
sub
imul
add
aas
aaa
enter
loop
mov
mov
xchg
mov
das
push
jmp
add
adc
cmp
ss
pop
mov
imulb
mov
push
dec
sbb
cmc
ss
jmp
lret
int
mov
gs
jo
jbe
in
and
push
es
or
xchg
rcll
stc
mov
xchg
pop
adc
rorl
or
decb
and
scas
xor
repz
pop
ret
adc
cli
ret
mov
add
mov
hlt
pop
aas
ds
push
xchg
cmpsl
addb
adc
xchg
cld
outsl
fimull
testb
add
ja
addr16
lock
cmpsl
mov
xchg
add
adc
bound
enter
iret
xchg
cmpl
outsl
addb
lahf
popa
xor
lds
sbb
dec
cmp
out
cmpsb
add
cld
adc
inc
shll
ss
ljmp
repz
loope
sti
movb
push
cmp
dec
pop
inc
xchg
or
or
mov
iret
xor
and
out
xchg
fwait
xchg
lock
neg
xchg
aaa
es
jnp
jg
xchg
sbb
cmp
add
add
mov
and
cltd
sti
daa
mov
pop
inc
add
mov
call
xchg
jb
shlb
add
push
data16
xchg
sbb
cmp
push
sub
inc
add
sub
pop
sbb
mov
sbb
pop
xchg
adc
add
addl
ret
pop
pop
mul
xchg
pop
adc
cs
in
imul
xchg
loop
scas
cmp
push
scas
test
cwtl
into
cmpsb
mov
cmp
insl
xchg
mov
call
movsb
movsb
add
and
sub
fadds
mov
xchg
or
mov
inc
add
outsl
push
fwait
mov
addb
call
push
push
popa
mov
add
cwtl
adc
add
mov
add
xchg
lea
mov
loop
cld
fcmove
mov
and
push
add
inc
add
xchg
test
cmpsb
es
xor
pop
jnp
mov
fs
repnz
fwait
bound
call
inc
add
ljmp
fs
out
or
in
lock
add
add
daa
pop
inc
add
add
das
mov
in
jno
add
dec
push
add
add
add
mov
dec
fwait
insb
bnd
sbb
add
sub
dec
shll
dec
test
mov
cld
mov
jbe
clc
pop
movb
cmp
ja
mov
aas
divb
adc
pusha
add
and
xor
enter
xchg
int3
cltd
lods
out
xor
dec
adc
faddp
add
or
lods
rdmsr
xchg
lret
push
out
dec
push
xchg
add
push
xlat
push
das
in
xchg
std
scas
lods
sub
arpl
jle
lock
and
repnz
xchg
adc
sub
int3
xchg
lock
out
lds
popf
pop
push
in
mov
cmp
add
adc
js
mov
pop
gs
add
in
add
lcall
mov
pop
push
jl
inc
add
lea
aam
add
mov
or
dec
and
push
pop
movsb
lods
call
jns
add
push
inc
add
xchg
pop
xor
add
mov
add
xchg
pop
aaa
adc
sub
adc
lds
push
fdivl
repnz
jo
jo
mov
xchg
negb
add
fisubrl
cmp
fs
xchg
movsl
jbe
stos
outsl
imul
mov
cmp
jb
subl
xchg
sarl
fwait
xor
adc
addr16
int3
cs
scas
jno
add
add
adc
movsb
dec
std
mov
cmp
mov
push
add
jg
add
ljmp
sbb
popf
test
xor
enter
lds
add
inc
ds
scas
xchg
clc
mov
pop
inc
xor
adc
add
inc
add
jle
movsl
or
popf
sbb
add
sub
mov
add
cmp
add
rol
add
jecxz
xor
shll
add
lods
loope
jmp
sti
pop
xchg
sbb
adc
and
adc
inc
mov
dec
aaa
jns
in
push
add
ja
into
adc
dec
fwait
xor
and
mov
std
ds
lods
jno
sub
pop
or
insl
insl
jp
int3
cld
sbb
stc
sub
add
sbb
in
addb
cltd
or
in
ljmp
repnz
gs
mov
gs
jns
lret
ss
add
pusha
add
adcl
test
ljmp
xchg
outsb
cmpsl
cltd
sub
jnp
lods
fisttpl
dec
movlps
inc
add
ds
sti
lret
add
push
cwtl
inc
add
sbb
xor
pop
out
out
ds
xor
or
les
imul
add
mov
add
adc
test
xor
test
mov
and
and
movb
add
pop
sub
das
aaa
lea
mull
adc
cmc
pop
push
and
scas
call
out
mov
nop
call
ja
mov
mov
outsb
stos
ret
inc
sahf
inc
add
xchg
sbb
add
sahf
jo
imul
add
add
outsl
mov
add
in
scas
adc
push
mov
rcrb
andl
ljmp
pushf
in
pushf
push
pop
cmp
add
outsb
mov
xlat
test
mov
bnd
fisttpll
mov
jge
dec
or
mov
cmpsl
and
lods
clc
std
movsb
dec
outsl
or
out
lcall
in
out
iret
xor
jae
shrl
jbe
lods
sti
adc
push
mov
loop
sarb
sti
pop
outsb
imul
pop
push
outsl
inc
sbb
pop
dec
xchg
cmc
sub
add
pushl
sbb
fcoms
testb
pop
test
lods
aam
push
rolb
add
mov
repz
leave
mov
xchg
mov
mov
das
lods
jb
fimuls
lahf
arpl
mov
add
lcall
mov
add
push
dec
xchg
pop
in
add
test
and
ja
out
jns
jl
inc
push
xlat
pop
pop
lret
stc
pop
loopne
jle
std
inc
fdivrs
or
out
adcl
and
or
pop
hlt
das
cs
or
stos
push
sahf
push
dec
js
in
movsb
add
jmp
or
push
add
hlt
add
addb
xor
test
inc
add
xor
fsubs
add
mov
pop
pop
jg
and
ja
fcmovu
or
jnp
push
lahf
jbe
mov
xchg
in
mov
and
dec
dec
testb
xchg
add
sub
mov
aam
add
icebp
je
or
stos
aam
aas
lret
scas
xchg
cmp
int
ret
mov
into
jb
shr
out
shrb
xchg
dec
call
scas
clc
jmp
jge
stos
stos
push
fs
mov
adc
stos
fadds
movsb
cwtl
xor
cmpps
arpl
mov
popa
or
sbb
sub
fs
sub
hlt
leave
mov
out
xchg
shrl
push
imul
iret
push
aas
or
xor
add
ljmp
mov
pop
out
lds
jbe
fsubs
mov
es
add
aam
mov
stos
xchg
imul
mov
inc
in
insl
inc
out
inc
leave
inc
addr16
mov
xor
cld
jnp
fstpl
add
jo
push
leave
mov
add
jge
mov
add
imul
cmc
dec
out
out
fimull
movb
jbe
add
clc
pop
out
mov
imul
pop
cmpsb
insb
and
mov
jle
sbb
jbe
iret
push
lods
sarb
jge
mov
stc
les
cmpsb
sbb
push
outsb
jo
and
pushf
shl
pop
inc
add
aaa
fs
mov
shrb
add
arpl
xchg
rol
add
jne
bound
mov
dec
lret
adc
xchg
cmp
jne
and
dec
sub
loopne
out
jmp
hlt
mov
xor
test
mov
out
je
xor
mov
jecxz
lret
mov
dec
push
add
add
mov
xchg
stos
test
inc
add
sbb
jp
lret
add
lret
into
addb
shrl
outsl
popa
cmc
adc
ffree
outsl
ret
call
or
jae
add
repnz
xlat
imul
push
aaa
loopne
loop
and
fucom
call
ret
das
repz
xchg
fisubs
jmp
scas
xor
dec
mov
aam
cmp
sbb
sub
mov
pop
sub
sbb
jmp
arpl
cmpsl
inc
add
ret
shlb
notl
sbb
push
mov
push
mov
xor
mov
data16
cmp
jnp
or
add
test
stc
lcall
add
add
push
frstor
push
stc
sti
imul
bound
pushf
rclb
popa
sub
lcall
sbb
or
test
pop
test
jle
push
aas
push
inc
mov
dec
cli
or
jge
repz
add
jecxz
mov
mov
mov
add
pushf
popa
dec
movsb
in
je
ficomps
add
pop
pop
rcrb
outsb
pop
addb
pop
and
pop
popf
mov
fmull
addb
mov
inc
add
pop
mov
ret
mov
repz
or
sub
sub
xchg
push
ja
arpl
outsl
inc
add
ss
ja
dec
das
pop
pop
repz
rolb
add
dec
in
cmc
mov
push
push
nop
insl
mov
push
iret
mov
inc
mov
add
scas
sarl
cli
outsl
js
mov
lcall
jb
test
test
adc
inc
add
fcoms
pop
xor
mov
gs
sbb
inc
add
iret
dec
add
aad
jmp
add
scas
jno
sbb
sbb
pop
std
mov
divb
repz
out
sarb
add
lods
adc
enter
aaa
mov
push
dec
mov
sub
cmpsl
iret
movb
dec
fldt
cmpsl
xor
or
push
lret
push
fbstp
out
pop
ds
inc
add
insb
int
adc
dec
cmp
repnz
std
lods
scas
and
fbld
add
jmp
add
cmp
dec
gs
push
les
test
sub
lcall
sub
rolb
movsl
sub
jmp
xor
fisttps
mov
mov
jno
mov
mov
addr16
push
pop
inc
jle
mov
and
jle
or
lock
mov
push
gs
cwtl
inc
sti
cltd
xchg
adc
cld
movb
mov
sub
addb
enter
sarl
les
sub
sti
adc
outsb
test
sbb
and
dec
and
popf
imul
loope
add
in
pusha
add
sbb
inc
fstps
into
mov
adc
scas
enter
in
stos
push
std
xchg
loope
mov
add
pop
cwtl
mov
stc
sbb
pop
pop
push
test
js
dec
add
repz
jge
cmp
or
mov
adc
mov
loopne
movsb
leave
mov
add
cmp
out
xchg
jnp
mov
adc
push
pop
fdivp
je
sub
fcoms
add
mov
daa
clc
push
mov
add
test
imul
inc
ljmp
bnd
adc
dec
dec
mov
pop
jnp
pop
jle
sbb
sub
adc
mov
or
ds
ljmp
mov
pop
push
mov
jno
rcrb
sub
xchg
in
jns
repnz
std
xor
insl
xor
add
outsl
add
rolb
imul
in
lahf
les
loopne
fisubs
add
inc
add
mov
jmp
add
add
add
sbb
fwait
outsl
scas
pop
mov
jnp
add
adc
xchg
xlat
insb
push
push
rcrl
pop
ja
stc
lea
mov
in
in
mov
test
cmp
ja
mov
jecxz
jne
mov
aaa
pop
jo
jmp
cmp
sbb
repz
shrl
sbb
lcall
jnp
xor
incl
jo
add
jne
cmpsb
push
mov
mov
adc
daa
inc
add
insb
mov
cwtl
imul
and
test
push
je
push
push
and
or
out
cs
xchg
idivl
mov
mov
sar
inc
pop
pop
jle
xor
push
lods
data16
push
jo
xchg
test
xchg
push
sbb
in
fstpt
pop
shlb
insl
test
pop
jecxz
lahf
pop
and
test
add
fwait
leave
adc
scas
push
adc
mov
lds
fwait
int
or
cmc
ret
int
jnp
aas
lret
arpl
fstpl
std
pop
cmp
jb
add
stos
pop
sbb
and
dec
mov
cld
aas
aam
dec
inc
add
and
scas
lcall
pop
xor
fstpt
push
icebp
sub
ret
aam
inc
mov
enter
mov
frstor
add
test
sarb
std
adc
cmc
fadd
add
add
add
sti
sub
mov
add
dec
mov
push
add
jnp
jg
inc
add
add
adc
jns
push
enter
mov
mov
adc
jnp
add
les
dec
and
jecxz
add
add
or
loopne
mov
test
loop
pop
cmp
xchg
ljmp
xchg
push
popa
mov
es
inc
outsb
cli
enter
ja
xor
mov
add
push
movb
cld
mov
fstpl
push
or
mov
mov
mov
xor
and
xchg
push
addr16
insb
sbb
mov
add
or
jb
adc
pop
fildll
std
adc
push
mov
addb
pop
jl
xchg
cli
xor
addb
inc
divps
lds
in
xchg
adc
fildll
add
sub
jmp
adc
aam
mov
adc
dec
addr16
add
outsl
push
cmp
pop
dec
stos
xchg
xchg
popa
lahf
out
add
pop
out
les
sbb
pop
add
mov
cmpsb
push
xchg
cmpsb
mov
fistpl
jp
insb
push
fstps
movb
fsubr
fiadds
daa
xchg
sbb
imul
inc
add
jl
in
add
insl
fisttpll
mov
in
push
fcmovnbe
ret
sti
sub
pusha
add
adc
cmp
pop
in
aas
pop
or
mov
fnstsw
into
dec
in
fstps
mov
test
pop
aas
movsl
fdivrl
insb
cwtl
sub
jae
jne
gs
and
cltd
aas
xor
popa
pop
inc
add
add
or
std
mov
add
pop
mov
icebp
push
stc
in
imul
pushf
pop
in
icebp
sub
jo
aad
adc
cmpsb
mov
xor
add
hlt
lcall
sbb
push
add
loop
jns
adcl
in
inc
add
adc
hlt
push
hlt
cwtl
sbb
js
mov
mov
add
pusha
add
inc
mov
mov
mov
jle
sbb
call
dec
jp
addb
pop
sbb
lahf
adc
jmp
rcrl
and
mov
jmp
mov
xor
aas
sbb
pusha
add
mov
or
add
lret
add
pop
and
leave
std
or
and
inc
add
test
aas
roll
dec
push
leave
mov
xor
add
or
add
adc
sub
int
ss
cmpsl
std
leave
shll
inc
add
cmpsb
xchg
xor
addr16
add
js
jg
mov
xorl
test
mov
out
or
movsb
pop
cmp
fcmovu
and
les
aam
daa
fcoms
insb
loop
pushf
addb
sub
in
sbb
fnstsw
xor
add
sub
lods
sbb
xor
push
cld
adc
jo
sti
push
push
sub
jne
jno
add
addb
sahf
les
out
dec
add
cmp
push
cmc
xchg
repnz
jae
jbe
lea
pushf
das
out
push
into
ret
jg
lret
pop
push
inc
rolb
mov
adc
pusha
add
movsl
and
add
mov
push
mov
add
dec
int
mov
repnz
add
pop
lds
and
mov
or
rcrb
fucomip
call
stos
mov
sbb
das
cli
fiaddl
pop
cmpsb
sbb
rorl
inc
out
addr16
add
push
inc
mov
add
in
jle
jp
add
add
add
fs
nop
dec
test
xor
cs
add
adc
and
mov
add
sub
push
pop
and
sbb
xor
pop
scas
scas
aam
les
lds
jmp
nop
xchg
push
das
popf
jg
enter
setge
mov
ror
sbb
mov
fimull
call
inc
add
stc
and
cmp
sbb
sbb
add
shr
nop
lahf
mov
cmp
ljmp
addb
notb
mov
inc
or
js
cli
sub
mov
xchg
ficomps
lret
insb
jp
lea
cmp
xor
and
jne
rcrl
int3
xor
or
daa
mov
sub
fsubs
enter
test
mov
push
add
insl
jecxz
popf
sti
adc
xor
add
add
lcall
fcompl
cltd
push
test
or
add
mov
push
out
mov
aam
aaa
ret
shlb
mov
push
aaa
xor
mov
push
push
xor
push
imul
jbe
dec
jl
nop
cwtl
inc
sbb
ret
add
je
hlt
xchg
xchg
shl
jnp
pop
cmp
jns
and
fisubrl
lods
mov
push
jp
xor
fimull
xchg
gs
push
add
cmp
lods
out
add
js
lock
clc
cmp
dec
out
and
inc
add
pop
jbe
orl
and
out
mov
rcll
les
call
sbb
repnz
push
das
sub
xchg
into
xor
push
push
test
insb
add
dec
cli
flds
adc
inc
add
sahf
mov
jl
repnz
les
xor
cmpsl
cmp
outsb
cmp
jmp
fisttpll
xchg
add
sub
movsb
cmp
add
repz
std
push
add
dec
ss
mov
punpckhwd
pop
repz
es
mov
or
setnp
cmovb
sub
popa
mov
mov
in
ds
lds
jmp
push
aam
in
jo
aas
cmpsl
mov
enter
mov
fwait
test
xor
mov
cmp
in
add
loop
mov
ss
xchg
loop
mov
out
xchg
inc
les
dec
fimull
arpl
pop
inc
add
and
fldcw
popf
int3
xor
mov
xor
and
jmp
dec
mov
add
js
into
inc
add
lret
push
mov
out
mov
es
mov
ss
les
scas
adc
jmp
add
mov
pop
fcompl
push
scas
mov
push
pop
add
je
out
xor
mov
pop
arpl
repz
inc
push
sbb
xor
bound
xchg
mov
outsb
add
cltd
jnp
mov
push
fidivrl
push
inc
add
stos
mov
testl
adc
mov
add
pushw
dec
std
in
sub
add
lret
jns
loopne
imul
es
fs
adc
ja
dec
dec
lret
mov
push
dec
repnz
rolb
cltd
ss
sub
aas
enter
sub
add
sti
adc
add
dec
or
jae
notl
fcom
add
and
clc
lock
addr16
push
daa
addb
jnp
stos
jl
std
enter
ret
add
sub
ret
push
inc
ret
in
sub
and
and
dec
xor
icebp
mov
jg
testl
adc
lods
ss
pop
xchg
out
pop
pop
lods
sbb
in
cmp
sub
clc
test
lcall
pop
mov
faddl
in
dec
ss
cmp
pushf
push
sbbl
nop
into
movsl
addb
addr16
add
mov
outsb
setae
jg
xchg
in
orw
lret
and
pop
cli
iret
xchg
xor
jns
dec
popf
jecxz
rolb
neg
pop
pop
dec
scas
jle
mov
testb
test
push
mov
add
add
xchg
clc
into
mov
xor
add
in
imul
daa
xor
sahf
lretw
das
mov
jno
sbb
sub
push
mov
stc
xchg
in
and
notb
mov
cmp
xor
mov
mov
sub
repz
negb
add
imul
leave
pop
inc
ret
addb
push
add
mov
push
popa
sub
jb
xor
mov
and
clc
lds
push
in
cmp
adc
cmp
jne
fnstsw
add
movb
outsb
sbb
mov
es
cmp
testb
mov
call
lret
add
mov
sbb
movb
or
fsubrs
ret
jne
dec
push
dec
pop
repnz
pop
sub
and
push
sub
fs
and
or
je
sti
push
mov
jo
scas
jbe,pt
sahf
adc
push
xchg
jbe
ficompl
in
adcl
sahf
mov
fisttps
push
cmp
pop
out
jmp
rcrl
pop
out
add
fdivrl
cmp
xchg
aam
mov
lret
mov
mov
ficompl
add
xchg
adc
pop
movsb
sub
or
mov
movb
sbb
les
push
lea
adc
xor
fwait
add
test
mov
mov
add
mov
mov
add
pop
sub
mov
mov
icebp
or
mov
gs
pop
mov
mov
sbb
add
cs
pop
or
leave
mov
outsb
push
out
add
sahf
mov
push
add
les
in
and
rcr
mov
les
xchg
xor
push
or
movsb
ret
dec
lods
and
sbb
das
or
leave
nop
mov
and
xor
xchg
xchg
add
or
shrb
or
outsw
daa
inc
add
xchg
loope
add
js
addb
fldcw
stos
rorb
lods
addb
cmpsl
xchg
iret
orl
adc
cmp
push
push
lahf
inc
pop
add
addb
mov
js
adc
add
jne
jecxz
push
lock
or
fdivl
ret
xlat
push
pop
jo
push
outsl
xchg
cwtl
dec
jp
stos
test
int
fwait
les
popa
addr16
jmp
add
jno
push
xor
inc
add
add
cltd
fcmove
fdivrs
clc
aaa
aaa
dec
sbb
cld
cmp
push
pop
test
stc
add
sbb
or
lods
push
add
pop
in
daa
ret
jo
rolb
mov
push
ror
movb
mov
cltd
or
pop
mov
insb
pop
pop
lds
popa
cs
mov
mov
fidivrl
inc
push
add
pop
push
or
xchg
nop
jg
xor
in
jp
mov
or
sub
fwait
pop
jo
push
cmp
add
add
movsb
dec
stc
pop
push
fimuls
push
add
jo
push
adc
nop
push
rcll
cmpsl
arpl
aas
dec
and
sub
xorl
addb
sub
rorl
add
mov
rolb
sbb
mov
add
mov
dec
lock
ficoms
lods
ss
dec
inc
add
or
adc
mov
pop
jnp
aad
inc
fisttpl
das
sub
add
dec
push
sbb
in
and
adc
mov
pop
out
mov
sub
je
repz
cwtl
mov
test
clc
je
shlb
loope
pop
int
xchg
out
mov
inc
add
mov
push
push
insb
ret
add
loop
cmp
loopne
xchg
xor
add
in
ret
push
jmp
mov
mov
mov
mov
imul
or
iret
jb
clc
ds
ret
push
in
ret
mov
jmp
icebp
jg
mov
adc
es
xor
add
ja
int
mov
inc
add
scas
and
movsl
loopne
adc
and
add
jg
lcall
mov
fidivl
adc
lcall
fistl
out
mov
dec
imul
and
fsubr
inc
or
mov
mov
jmp
and
mov
jbe
xor
lcall
add
pusha
add
add
das
hlt
aam
leave
aaa
popa
iret
mov
sbb
das
in
shl
pop
les
cmp
cmpsb
jl
or
jae
pop
jp
roll
pop
sub
lea
sti
sub
fiadds
repnz
add
data16
fwait
call
add
add
repnz
loope
xor
jno
adc
loope
mov
xor
sub
jno
rcl
xchg
push
push
or
arpl
xlat
bound
cmp
xchg
dec
fidivs
adc
pop
push
add
rcrb
fcmovne
mov
cmp
cld
pop
out
lock
add
ljmp
cmp
mov
icebp
mov
mov
xor
mov
std
movsl
mov
mov
pop
mov
sti
pop
stos
inc
jae
mov
mov
aam
stos
mov
out
mov
daa
int
int3
add
or
adc
lcall
adc
imul
xor
lret
repnz
fdivs
mov
mov
mov
mov
dec
insl
cmpsl
cld
rolb
out
add
or
bound
and
testb
cmp
enter
gs
sahf
dec
add
imul
mov
mov
stos
xchg
iret
out
das
mov
jbe
sub
jle
test
imul
adc
loopne
push
out
scas
cltd
inc
mov
and
and
lock
insl
dec
addb
xchg
lods
fxch
out
xor
mov
mov
fadds
push
daa
negl
adc
out
cld
mov
mov
jo
ds
inc
dec
push
ljmp
aas
pushf
movsb
or
pop
mov
xchg
mov
stos
push
jno
add
add
mov
inc
add
xlat
xor
and
aas
add
push
popf
insl
in
push
mov
call
loope
lcall
adc
add
add
daa
in
lods
fdivl
dec
dec
xchg
mov
cmp
in
add
test
or
jecxz
roll
jb
add
rcr
loopne
cmp
outsl
sub
pop
fwait
push
and
bound
push
ja
jmp
jo
repz
mov
pop
pop
insl
add
inc
add
add
jmp
cmp
push
cmp
and
xchg
imul
mov
sbb
dec
lret
pop
outsb
movsb
stos
fisttpll
push
std
push
jb
add
in
mov
arpl
inc
add
add
dec
and
shrl
test
pop
mov
mov
repnz
shll
jmp
or
shrl
push
dec
rcrb
lock
cld
out
lcall
scas
sarl
cmp
in
or
push
jmp
jne
arpl
lret
and
adc
fiaddl
mov
je
je
add
inc
into
push
rolb
cmp
or
add
add
mov
repz
icebp
cmpsb
test
or
mov
push
jnp
ret
addl
xchg
clc
cwtl
cli
std
jl
pop
dec
pop
arpl
push
pushf
lret
pop
iret
pop
aaa
or
push
leave
or
inc
and
roll
add
test
sahf
scas
in
sub
push
sub
int
mov
inc
add
fs
es
pop
xor
sti
test
pop
cmp
es
test
cmp
dec
pop
test
lcall
in
pop
pop
idivl
add
clc
negb
ja
pop
jmp
pop
inc
and
sub
xchg
cli
clc
addb
add
mov
sub
add
mov
imul
jmp
mov
dec
ljmp
rolb
add
outsl
scas
dec
fistl
js
fwait
clc
es
mov
test
fisttpl
lret
cltd
int
add
lret
or
xor
jp
adc
int
sub
cs
push
jb
icebp
dec
in
push
push
aam
pop
outsl
push
movsl
push
dec
push
popf
adc
out
adc
pop
sbb
sub
lock
dec
xor
ss
jnp
addb
ret
cmp
jae
into
mov
aad
add
mov
mov
add
push
mov
pop
jg
xor
negl
add
pop
mov
xchg
icebp
and
add
ja
inc
add
movb
mov
jbe
addb
and
out
jne
add
hlt
rolb
sbb
jge
lock
add
mov
cmp
movsl
rorb
repz
dec
add
fucomi
push
add
aam
push
add
add
fs
lahf
cmp
dec
adc
xchg
push
gs
out
add
clc
data16
out
cmp
dec
add
add
sub
push
add
insl
scas
ret
xchg
loope
in
mov
push
jmp
pop
jo
or
add
ss
jne
subl
cwtl
sub
add
push
sbb
jb
mov
adc
fs
lods
rcr
dec
lods
add
pop
lcall
xchg
cmpl
xchg
aaa
addr16
cs
arpl
enter
imul
pop
imul
out
cmpsb
xchg
pop
rorl
inc
sahf
push
jnp
fs
cmp
pushf
js
and
mov
adc
cmp
gs
ret
out
addb
subl
add
fistl
lods
pop
dec
jge
leave
inc
sub
enter
push
and
xor
adc
test
lea
jl
add
mov
sbb
add
dec
fstpt
ret
or
xor
jle
das
dec
les
pushf
add
add
insb
mov
fcomip
aad
add
and
in
add
cmp
add
adc
xor
add
test
insl
push
mov
lock
mov
xchg
xchg
cmpl
or
mov
cmp
inc
add
jmp
push
scas
clc
sbb
xchg
dec
push
add
sub
ja
adc
cmp
imul
cmp
shl
xchg
push
push
imul
jmp
cmc
addb
sub
outsb
push
mov
add
fdivl
dec
pop
cmp
xor
mov
fs
cs
add
out
pop
mov
add
xor
jbe
int3
add
add
clc
cmp
dec
xor
sahf
in
flds
add
inc
add
xor
push
add
sar
xchg
xor
pusha
add
push
orl
mov
lods
cld
pop
inc
add
jnp
hlt
pop
sub
add
mov
jle
push
lds
cmp
cmp
dec
mov
jl
xor
jo
shll
jecxz
push
dec
out
sbb
imul
test
jg
sbb
add
cmpsb
fmuls
cmp
push
xor
jne
aam
add
adc
rolb
xor
or
push
enter
fisubrl
jne
std
repnz
xchg
jle
dec
pusha
add
add
jbe
rcll
stos
out
sbb
cmp
add
add
cmp
adc
ss
jmp
adc
add
cmp
inc
add
jecxz
sbb
rolb
lock
jmp
sbb
lods
jb
fldl
subl
mov
adc
scas
xchg
stc
lea
add
call
inc
add
imul
lock
adc
cmp
cmp
jnp
movb
or
insl
popa
mov
mov
xchg
pop
add
dec
out
xor
mov
jno
fisubrl
push
adc
fistpll
add
adc
add
lods
fsubrs
xor
inc
add
jge
inc
add
in
je
movsl
sbb
ret
adc
add
add
cmpsl
adc
mov
xchg
cmp
mov
enter
mov
stc
das
leave
mov
mov
movsl
in
testl
add
mov
daa
movlps
adc
popa
or
and
ffree
add
call
jge
xchg
movsb
push
mov
sub
addl
clc
repnz
fs
jbe
addl
rol
shrb
mov
in
movq
shrb
ds
mov
push
addl
xchg
push
or
mov
xchg
iret
sub
cmp
and
addb
or
sahf
sbb
fwait
stos
int
pushf
jge
and
add
add
add
out
sbb
int
data16
rclb
add
bound
or
roll
loopne
pop
dec
mov
add
jg
dec
ret
mov
xchg
sahf
cmpsb
in
into
adc
outsb
mov
xchg
dec
lods
xchg
inc
add
jl
xchg
push
xlat
cmp
inc
add
jle
lret
ret
adc
je
inc
movsl
cmc
enter
jbe
outsb
cmp
mov
ds
and
mov
xchg
lock
xchg
ljmp
mov
xchg
mov
add
lods
movsb
fldt
test
and
out
jg
outsb
jns,pn
add
push
addl
push
inc
add
ss
xchg
push
gs
mov
daa
and
daa
xor
lret
jecxz
add
inc
add
out
jno
ljmp
jns
es
cmp
mov
leave
cwtl
jae
add
cmp
jnp
push
aam
addb
mov
je
bound
sbb
ljmp
dec
cli
scas
cltd
fisttpl
dec
mov
pop
add
cld
movb
in
inc
add
add
inc
pusha
add
pusha
add
add
add
add
out
addb
fisttpl
jmp
pop
push
sub
data16
xlat
add
xor
add
add
xor
pop
jl
jb
in
bound
xchg
or
add
add
xor
xlat
push
aas
adc
cmc
pusha
add
add
xchg
mov
sub
pop
jno
jnp
jg
iret
call
mov
dec
fiaddl
xlat
mov
or
movb
cmc
and
add
cmp
pop
and
aaa
pusha
add
test
imul
push
lahf
hlt
inc
add
push
mov
in
rolb
adc
les
lods
pop
rolb
inc
add
addr16
add
mov
imul
movsb
push
inc
add
outsl
loop
dec
shll
xchg
pushw
add
idivl
cltd
hlt
enter
je
cmp
or
xor
sbb
test
mov
sti
mov
xor
push
sbb
arpl
cmp
enter
push
mov
and
mov
pop
xor
and
dec
rcr
in
data16
add
test
mov
cmp
fnsave
test
ret
xor
add
dec
pushf
cmpsl
pop
int3
icebp
ljmp
fldt
and
ret
hlt
sar
cltd
add
daa
push
mov
add
addb
mov
ljmp
jle
jnp
sub
outsl
inc
add
pshufw
xchg
insb
pop
jb
lods
out
jge
sahf
movb
lcall
in
xchg
mov
pop
adc
mov
je
adc
and
jae
jnp
shrb
add
rcrb
mulb
xor
cmc
rorb
dec
call
inc
add
jecxz
jnp
cmp
aaa
test
testb
push
fs
cmp
insl
push
and
movsl
sbb
das
inc
imul
int3
xacquire
adc
inc
lds
sbb
xor
mov
add
xor
negl
xor
movb
pop
les
stos
mov
out
cli
bound
arpl
jg
movsb
mov
or
add
adc
xor
dec
enter
dec
push
mov
push
imul
mov
lahf
or
fcomps
loop
loopne
pop
xchg
mov
mov
xchg
dec
dec
loope
add
inc
add
xchg
lret
inc
mov
ret
sahf
pop
arpl
insl
jmp
mov
and
add
scas
cli
pop
or
add
mov
int
aas
js
or
out
loopne
std
ljmp
xchg
pusha
add
loop
add
sbb
dec
xor
add
aaa
sub
jmp
pusha
add
push
add
es
shrb
lahf
in
ja
mov
xor
ja
inc
xchg
xor
pop
inc
add
mov
lahf
xorl
sahf
pop
mov
fdivs
mov
mov
pop
clc
loop
sti
ljmp
cmp
xchg
or
lea
loop
cmc
pushf
popa
mov
adc
lods
fnsave
add
add
lds
movsb
mov
ja
in
repnz
call
add
pop
outsb
xor
ret
pop
call
mov
jbe
cmp
xchg
pop
cmpl
pop
and
imul
aaa
sub
add
add
addb
shrb
addb
cmp
inc
add
fwait
call
fucomp
popf
xor
shlb
and
pop
fsubl
push
inc
sub
add
push
mov
int3
adc
rcll
mov
add
in
ficompl
hlt
add
add
nop
into
loop
orl
dec
sub
pop
pop
rolb
mov
inc
or
or
pop
jns
inc
movsb
fs
fs
xor
adc
add
enter
lea
cmp
jo
mov
mov
mov
add
add
mov
jg
mov
sbb
cmp
loop
lret
addr16
mov
arpl
xor
push
inc
add
add
dec
bound
insl
push
pop
cld
call
xor
fisubrs
jge
leave
repz
call
movb
mov
and
cmp
mov
dec
mov
fcoml
out
fdiv
sbb
inc
dec
add
sbb
aaa
xlat
pop
js
sahf
cld
ss
data16
cmp
test
mov
sub
ret
ret
rcll
sub
lds
lahf
popf
sbb
lcall
imul
xor
add
xchg
dec
ja
xchg
stos
adc
in
cmp
add
pop
add
or
cmp
xchg
cmp
std
out
or
vmulps
movsl
in
and
jg
add
adcl
and
andl
rorl
cli
cmp
fmuls
push
jmp
ljmp
mov
pop
movb
lock
aaa
mov
and
insb
mov
add
or
jge
and
outsl
add
and
add
cmp
pop
mov
pop
jmp
imul
mov
jnp
ds
dec
or
addl
pop
fildl
cmpsl
inc
add
lret
push
xor
push
add
mov
adc
loop
jno
xchg
ja
xchg
scas
das
sub
jnp
ret
adc
iret
inc
sub
mov
js
jb
test
jne
lea
insl
loope
add
or
pop
mov
jg
into
jbe
clc
dec
cmc
repnz
sub
sbb
out
push
ss
add
add
je
add
mov
mov
in
pop
add
cmp
push
cs
shll
inc
add
add
out
dec
jmp
xchg
and
add
inc
mov
jle
js
scas
and
inc
les
inc
cmpsl
imul
cwtl
cmp
mov
jg
outsl
test
inc
filds
add
add
xchg
add
movb
fs
sbb
in
addb
sti
mov
add
push
mov
add
sahf
outsl
cltd
std
call
jnp
ret
xor
mov
ficoms
fldcw
pushf
mov
pop
xchg
out
xchg
rcrl
hlt
test
mov
lret
xor
xchg
mov
sub
popf
sbb
add
ret
inc
add
jecxz
sbb
adc
xlat
pop
and
xchg
inc
add
add
rcl
int3
lea
mov
fdivl
iret
movsl
mov
mov
add
add
lock
adc
xor
popf
notb
insb
shrl
or
mov
les
outsb
mov
add
fsts
fisubl
push
scas
fidivl
aad
cmp
add
lcall
jecxz
xchg
lock
aas
xlat
clc
std
xchg
enter
add
dec
aas
int
lcall
shlb
pop
cmc
stos
bound
pop
repnz
pop
dec
popl
push
mov
int
int3
hlt
aaa
repz
xor
or
aas
xor
ds
mov
or
mov
mov
pushf
js
adc
add
stos
clc
push
pop
pop
ds
add
add
sbb
sub
iret
mov
movsb
cmpsb
or
movsl
pop
mov
out
pop
xchg
arpl
ficomps
pop
jne
in
jbe
xor
pop
iret
clc
sub
lds
movsl
sub
xchg
jb
loopne
or
decb
movb
cmpsl
fwait
and
repnz
push
in
mov
adc
xor
lds
xchg
addr16
jge
dec
sub
loop
aam
out
imul
and
scas
dec
testl
jb
call
out
fidivl
bound
pop
pop
lcall
mov
outsl
adc
lret
divl
and
nop
xchg
bound
mov
xchg
movsl
fsubr
adc
shll
lahf
dec
out
repnz
movsl
pushf
pop
sti
ret
cmpsl
and
xlat
mov
mov
mov
repz
add
mov
scas
push
cmp
sti
hlt
repz
jecxz
out
out
push
pop
jge
clc
push
add
popf
addb
sbb
loopne
jne
and
add
int3
outsl
sbb
add
pop
addb
push
sub
lods
negb
in
dec
fistl
dec
int3
or
pop
adc
adc
push
insb
xchg
pop
cmp
push
scas
xchg
hlt
je
inc
add
push
xor
push
pop
push
add
loope
sahf
jecxz
or
mov
mov
arpl
mov
or
add
loopne
or
test
push
mov
std
sub
sahf
add
sbb
dec
jmp
and
cld
mov
mov
orl
adc
aam
jne
and
lret
dec
sbb
xorl
aad
add
inc
add
push
lods
inc
add
gs
add
pop
out
push
add
sub
pusha
add
cmp
and
mov
adc
repz
dec
loop
rolb
add
scas
or
or
rolb
inc
add
rcll
lds
xchg
and
fs
aas
hlt
cltd
test
add
lahf
dec
inc
add
sbb
dec
les
jl
jne
adc
inc
dec
cli
lds
add
add
add
outsl
push
stos
mov
test
fmuls
icebp
sbb
mov
push
add
sbb
add
sahf
sbb
ret
push
mov
and
cmc
in
mov
jo
jbe
cmp
jne
push
or
adc
push
xchg
jnp
mov
fists
mov
mov
xchg
pop
cmp
pop
ret
loope
cmp
test
daa
mov
add
add
in
enter
add
sti
dec
add
dec
push
ja
test
loop
add
data16
add
xchg
adc
add
xchg
ret
ret
test
daa
adc
leave
mov
add
or
popa
jge
jecxz
xor
test
out
mov
mov
les
rcl
mov
add
test
jp
add
mov
movb
and
rolb
xchg
push
add
xchg
jb
inc
add
loopne
mov
push
pop
jns
cmp
fcomps
test
push
mov
ja
adc
mov
add
fsubl
pop
sbb
test
and
das
add
push
mov
gs
in
add
dec
sub
pop
out
in
bound
mov
or
cltd
lahf
in
out
cmovo
mov
add
xchg
pmulhw
movsb
sbb
stos
and
xchg
lods
repnz
enter
or
ljmp
roll
cli
cmp
pop
jb
aaa
push
movb
add
xchg
std
and
js
adc
cli
jnp
dec
sbb
sbb
adc
fwait
xor
lds
and
cmpsb
lea
mov
push
mov
mov
jno
movsl
cmp
enter
in
sub
lock
pop
daa
dec
xor
fwait
dec
push
movsb
jbe
pusha
add
clc
scas
dec
pop
mov
and
inc
add
aam
ja
stos
xchg
or
mov
pop
faddl
and
jl
mov
or
xor
add
aam
adc
jno
jb
mov
popa
xchg
and
scas
add
jmp
add
jo
xlat
cwtl
pop
adc
sbb
lcall
fwait
imul
pop
cli
fsubrs
inc
xchg
mov
add
jne
mov
mov
xchg
in
adc
add
les
sbb
out
ret
cmp
jp
in
push
loop
fstpl
and
jne
pop
mov
inc
lods
or
adc
mov
inc
popf
pusha
add
xchg
jnp
outsl
or
stos
ficoml
movb
xchg
mov
lahf
in
dec
call
rolb
pop
gs
lods
filds
ret
ljmp
pop
or
mov
mov
fnsave
popl
adc
in
sbb
mov
arpl
lods
out
fs
inc
enter
add
int3
xor
jmp
dec
movb
addb
ret
outsb
test
ret
jmp
test
nop
icebp
sub
xor
add
mov
sbb
add
push
pop
or
add
ja
out
add
mov
adc
shlb
lock
rcrl
add
jg
inc
add
push
in
push
mov
mov
and
lret
jb
arpl
add
rolb
js
add
add
jne
add
push
mov
add
clc
dec
int3
aad
iret
cmp
imul
xchg
sti
sub
sbb
fwait
xor
adc
mov
leave
hlt
out
xchg
jle
cmp
dec
aam
repz
pop
xchg
out
mov
std
xor
dec
cwtl
cmp
mov
push
adc
jg
lcall
xchg
ret
cmpsb
adc
out
jmp
fnstsw
leave
pop
int
push
add
ret
sub
aam
out
mov
push
bound
mov
insl
jbe
mov
rolb
push
push
xchg
pusha
add
add
stos
mov
in
dec
sbb
shlb
mov
push
addb
lds
mov
mov
aam
sub
cmp
push
sub
lods
imul
push
push
mov
add
scas
and
xchg
mov
outsl
lods
dec
std
arpl
in
xchg
adc
mov
mov
mov
jg
adc
add
or
sub
xchg
test
gs
outsb
loope
add
jecxz
inc
and
out
or
outsb
push
das
test
les
in
push
push
decl
mov
cmpsb
lods
ss
loopne
xchg
sbb
loopne
popf
mov
sbb
leave
jp
fistpl
pop
stos
jae
movl
call
es
sub
add
rolb
inc
add
mov
and
pop
cmpsb
leave
clc
sar
test
add
aad
cmc
xchg
mov
fbld
mov
lds
push
mov
jns
or
js
add
mov
or
sub
or
mov
inc
dec
sub
inc
add
mov
iret
gs
dec
jle
pushf
pushf
add
jae
or
lods
jmp
bound
movsb
sbb
push
cmp
iret
xchg
cmp
cmp
mov
pop
out
cli
test
ljmp
int
mov
mov
scas
sub
mov
and
cld
jno
jmp
push
cmp
mov
add
dec
add
mov
add
or
movl
add
in
out
sub
ja
test
add
cs
mov
cs
rdmsr
xlat
push
enter
or
inc
add
movb
loop
aam
sbb
or
push
sub
inc
rolb
sbbl
add
mov
sub
shlb
mov
xor
in
jo
inc
add
movb
ds
mov
dec
inc
xchg
pop
sbb
lret
fcoms
mov
cmp
rcrl
push
jle
xor
pop
mov
xchg
rcll
add
or
push
std
mov
lret
movsl
mov
jns
push
sbb
jp
or
xor
arpl
in
int
test
inc
loop
mov
push
push
loop
pop
setp
push
mov
push
pusha
add
inc
lds
pop
sub
mov
ss
xlat
push
sarb
or
add
in
xchg
push
movsl
mov
icebp
data16
inc
add
mov
les
jecxz
pushf
push
pop
icebp
dec
js
inc
add
xchg
add
out
cmp
bound
clc
or
xor
xor
jb
lds
add
or
xor
dec
adc
dec
lods
sbb
add
mov
add
vpunpcklbw
mov
mov
mov
and
iret
imul
jge
add
pop
and
hlt
rolb
cltd
movsb
jmp
insl
cmpsb
cmpsb
xchg
sub
mov
movsb
inc
mov
inc
adc
add
jb
fadds
add
xlat
mov
loop
add
and
inc
add
es
sub
mov
sub
aaa
lret
imul
inc
add
aad
pop
mov
add
dec
mov
notb
pop
sbbl
js
xor
jmp
jae
mov
add
add
nop
stc
mov
xchg
dec
imul
cmpsl
cmpsl
out
jp
xlat
jne
jae
pop
aas
xor
ja
scas
jo
adc
jns
fbstp
shlb
xor
push
mov
int
movsl
and
add
out
sbb
dec
stc
push
out
push
fisttpl
xchg
or
adc
mov
add
sbb
xor
addb
in
clc
outsb
mov
inc
add
roll
adc
mov
mov
ffree
add
cwtl
mov
cwtl
test
jno
mov
add
mov
test
cmp
out
test
xchg
ljmp
or
mov
jmp
cmp
fs
iret
inc
add
in
lds
and
cmp
ds
imul
jns
inc
addl
mov
xlat
inc
add
pop
jno
jmp
xor
loop
add
mov
inc
rolb
add
fldenv
xchg
sub
repnz
mov
xchg
adc
jl
push
loop
cmpsl
pusha
add
jae
xchg
push
push
int
inc
shrl
jmp
popf
lret
aad
mov
xchg
xchg
ss
add
mulb
xchg
mov
gs
in
shlb
imul
fnsave
xor
jae
cmp
or
dec
repnz
mov
mov
xor
ret
jnp
popa
mov
ret
mov
lds
lods
push
std
cmp
cmc
addb
mov
mov
mov
sbb
pusha
add
add
call
cmp
in
inc
sub
sub
xchg
mov
jae
call
fiaddl
and
fmuls
pop
and
sbb
out
mov
dec
xchg
popa
inc
add
out
stos
push
pushf
push
push
add
inc
add
js
arpl
loope
testl
enter
xor
mov
add
std
add
inc
mov
js
cmp
mov
cwtl
jl
jo
add
push
mov
mov
movsb
xchg
loop
mov
xor
gs
imul
adc
in
leave
ret
loopne
sbb
gs
mov
and
inc
add
int
mov
jl
scas
mov
mov
stos
add
xchg
xchg
or
imul
or
testb
add
imul
insl
and
and
nop
jo
mov
mov
add
movsb
mov
into
aam
add
or
inc
add
jl
xchg
add
push
push
mov
push
adc
in
mov
movsb
test
mov
ret
mov
add
inc
add
and
ret
or
mov
les
add
adc
push
stos
mov
das
clc
or
les
sar
lret
lret
sbb
sbb
lds
int3
pusha
add
outsb
sbb
out
inc
cmp
repnz
cmc
jns
insb
mov
mov
hlt
sub
add
enter
cld
les
sahf
sbb
add
add
push
loopne
lcallw
adc
pushf
mov
sbb
pop
push
inc
add
push
sub
add
add
lods
nop
cltd
dec
jnp
add
push
pop
clc
or
hlt
adc
movb
cmp
insb
pop
mov
cs
or
ljmp
sub
out
add
sbb
jg
add
fs
test
pop
pop
jb
jno
cmp
inc
push
mov
out
scas
mov
out
jge
dec
mov
push
pop
stc
mov
add
movsb
cltd
rcrl
sub
cwtl
mov
pop
aas
fwait
rolb
xchg
pushf
pop
addb
add
fidivrs
les
cmp
jb
imul
or
shl
push
daa
leave
push
xchg
pusha
add
mov
outsl
in
adc
mov
add
mov
push
xchg
jne
sub
fistps
clc
mov
cmp
inc
add
mov
mov
sbb
insl
dec
lret
mov
popl
jecxz
movsl
mov
or
in
dec
push
jle
jno
push
add
fiaddl
lret
xor
test
movsb
mov
or
clc
push
inc
mov
pusha
add
aad
outsl
ja
cmp
cmp
push
sahf
addb
fmull
mov
add
or
addb
jg
repz
ds
jnp
add
dec
movsl
ds
push
add
jbe
add
mov
xchg
inc
cwtl
mov
ror
shlb
xor
addr16
ss
pop
adc
insb
jge
sub
test
sub
pop
pop
xchg
outsb
mov
test
jbe
mov
add
outsb
jno
push
movsb
das
mov
fildl
xor
cmp
pop
gs
add
stos
and
add
data16
fiadds
ret
push
jbe
cmp
je
fwait
sbb
inc
cmp
lock
jl
and
outsb
mov
ret
mull
std
mov
fcmovnb
add
addb
fidivs
aad
add
xor
aad
adc
jmp
fcomp
xchg
punpcklwd
mul
fcmovne
mov
and
jecxz
xchg
shll
cmpsl
aaa
add
push
test
lock
cltd
sbb
clc
lds
les
fsincos
roll
popa
out
dec
je
pop
push
nop
jb
add
sbb
jmp
cmp
add
jbe
bt
in
xor
pop
sbb
idivb
jmp
sbb
sbb
fwait
out
adc
ja
add
pop
cmp
arpl
ljmp
sti
daa
jge
dec
jae
std
lock
addb
inc
add
mov
mov
or
mov
int3
fs
add
mov
cmp
mov
push
sbbl
out
movb
dec
push
add
ja
rolb
mov
xorl
ljmp
lds
pop
mov
stos
jae
iret
sti
loopne
xchg
scas
mov
add
mov
cltd
jl
mov
in
bound
mov
add
add
add
fbld
jge
rorb
mov
add
in
push
cmp
sub
inc
add
add
in
movb
or
push
inc
mov
stos
pop
cmp
pop
pop
add
and
arpl
cmovo
aaa
movl
xchg
push
push
cli
pusha
add
call
adc
xor
adc
sub
fildll
adc
mov
cmp
xor
mov
pop
push
mov
jae
and
ret
mov
add
push
data16
pop
outsb
cli
pushf
cmp
mov
data16
popa
pop
xchg
cmp
pushf
inc
add
dec
rcl
sbb
or
xor
pop
out
in
pmaddwd
lcall
adc
stos
dec
jle
mov
fsubrs
dec
jge
es
inc
sub
push
cwtl
jne
cwtl
cli
out
les
out
and
cmpsb
inc
dec
push
in
pushf
lahf
mov
and
test
mov
adc
jp
add
jno
mov
jge
push
icebp
pop
mov
gs
adc
add
mov
inc
add
ss
jp,pn
adcl
xlat
mov
push
cmp
test
sbbl
or
lds
and
outsl
or
add
cld
mov
stos
cmpsb
xor
cmp
sub
fistps
push
lcall
filds
cmp
jne
into
idivb
and
add
bound
sub
and
sub
xor
call
in
mov
mov
cwtl
sbb
pop
dec
cmpsl
jo
and
ljmp
aam
fucom
xor
aaa
fidivl
cwtl
xchg
aaa
xchg
jb
loopne
jne
mov
loopne
popa
push
add
pop
in
push
add
adc
sbb
je
out
cld
jb
ret
push
je
and
sbb
jp
sub
inc
add
movsb
test
adc
mov
int3
lods
mov
addb
into
ljmp
add
sub
cmp
jno
mov
adc
rolb
imul
shrl
push
add
iret
lahf
push
push
add
push
jae
adc
add
jmp
add
sbb
hlt
leave
mov
in
adc
add
inc
add
into
testb
add
loopne
pop
arpl
xchg
cld
and
je
mov
scas
bswap
xor
jle
divb
push
decl
xor
sub
jp
mov
push
das
mov
test
inc
add
ret
fsub
into
and
roll
cmpsb
mov
cmp
mov
movsb
mov
sahf
sbb
test
add
jecxz
dec
movsb
pop
test
push
stos
mov
adc
aaa
cmp
mov
je
sbb
jl
sahf
bound
imull
mov
xchg
idiv
add
cmc
mov
cld
xchg
aad
add
addb
aaa
mov
es
je
jp
inc
xlat
daa
sbbl
push
imull
push
test
inc
aas
aas
push
out
push
pop
loope
xor
pop
test
lret
rolb
add
mov
pop
dec
or
mov
daa
out
stos
jg
fwait
push
pop
mov
inc
add
fadds
lahf
xor
shlb
push
jle
push
add
add
jb
shll
rcr
popa
movsb
aad
pop
inc
add
repz
add
cs
xchg
dec
repz
add
add
mov
nop
dec
jg
inc
xchg
in
add
jns
push
or
and
push
cmp
fdivr
mov
inc
add
push
int
outsl
sub
push
and
mov
lahf
dec
and
mov
jmp
lcall
es
jmp
fcomps
mov
or
inc
loop
cmp
inc
aam
cmpsb
decl
or
mov
push
mov
fbld
sub
xchg
movsl
iret
mov
add
ds
fmul
pop
mov
xchg
sbb
mov
jle
pop
push
fs
jmp
ja
test
mov
add
add
fisttpll
mov
inc
add
std
jle
rclb
add
lock
movsl
push
call
in
cmpsl
fistl
popf
jecxz
lret
sqrtps
cmp
fidivs
loopne
adc
sbb
movsb
cmp
ret
fidivrl
stos
dec
ficompl
ljmp
mov
sbb
cmpsl
xchg
gs
mov
sbb
push
mov
out
imul
inc
cwtl
aam
add
lret
cmpsb
out
shll
aam
fsts
cwtl
mov
jb
mov
or
fmull
or
cli
iret
xchg
lods
punpckhdq
cltd
mov
mov
dec
or
test
dec
jns
pop
mov
and
jp
repnz
jecxz
add
and
roll
add
mov
push
xchg
inc
sbbl
jne
xor
mov
cmp
mov
sub
test
pop
push
add
cmpsb
jg
data16
mov
test
sbb
push
nop
mov
adc
add
cmp
sub
xchg
lcall
addb
pop
push
adc
jle
jnp
pop
add
outsl
sbb
add
addb
add
cli
pop
call
ljmp
shl
cmp
sub
into
pop
sub
add
add
scas
test
dec
lods
stos
add
popa
push
dec
les
xchg
out
bound
loope
push
mov
lret
jecxz
jne
aad
inc
dec
pop
sbb
ret
mov
jge
imull
pop
cmpsl
imul
mov
cwtl
ds
push
inc
xchg
jns
ss
jg
and
dec
enter
out
xlat
inc
jmp
iret
or
fsts
dec
sahf
cmp
hlt
xchg
cwtl
mov
and
lods
loopne
jnp
test
jle
ret
xor
cmp
stos
inc
ret
notl
sub
stos
dec
rolb
sbb
fcomps
inc
add
and
mov
orl
cmp
xor
aad
sub
inc
add
xchg
xor
imull
jnp
push
push
imul
mov
xor
mov
and
jmp
nop
mov
add
dec
outsl
inc
add
fwait
pop
mov
lret
mov
es
jb
aad
pop
and
cwtl
jo
fldcw
mov
add
dec
fstps
fildll
and
test
shrb
pop
out
in
roll
lock
ja
jne
xor
and
lahf
xor
out
pusha
add
xchg
les
inc
add
call
pop
push
xchg
test
or
dec
mov
inc
add
insb
mov
dec
clc
out
push
mov
test
xchg
scas
mov
sbb
and
arpl
push
lret
out
movsl
int
jno
cmp
dec
cltd
xlat
push
sbb
inc
rolb
das
pop
shr
mov
sbb
xchg
out
sbb
mov
bound
rolb
fsubrp
cltd
daa
fsubs
loopne
int
aad
je
lods
pop
push
imul
das
adc
xchg
and
add
test
dec
cmc
jecxz
loop
pop
or
lret
loopne
lea
sbb
rcll
jno
test
or
or
mov
insl
jnp
sbb
ss
cmp
add
stos
inc
add
mov
jo
lods
sahf
xlat
mov
outsb
inc
mov
loop
inc
mov
roll
xor
mov
xlat
movsb
adc
daa
inc
imul
and
rolb
inc
add
cmp
add
lea
cmpsl
addr16
std
push
mov
movsl
xchg
mov
lods
pop
addb
add
and
sub
mov
cwtl
arpl
add
in
sub
add
imul
cli
es
mov
movsl
inc
add
mov
aad
and
stc
cmp
icebp
aad
cmp
and
popa
adc
mov
push
add
push
loopne
popa
pop
or
adc
in
and
lods
repnz
cmp
mov
jmp
fsubl
aad
xchg
mov
les
not
xor
add
add
ret
int
scas
repnz
stc
add
add
add
daa
outsl
hlt
int3
in
mov
push
sbb
add
aad
push
sarb
or
push
stc
push
sti
add
push
mov
add
adc
les
bound
lahf
leave
add
hlt
movb
mov
cli
loope
mov
std
add
sbb
cmp
in
cltd
lret
popa
xchg
sbb
pop
mov
std
addb
mov
push
ss
xor
xor
and
je
loopne
pusha
add
cli
clc
xor
movsb
lahf
mov
in
repnz
dec
les
inc
add
pop
cs
mov
jl
add
mov
xlat
btr
xchg
fadds
jb
fs
mov
push
add
sbbl
push
addb
inc
sbb
repz
insl
and
xchg
sbb
mov
ds
and
cmpsb
lods
lret
aam
movb
repnz
adc
daa
and
fmull
jmp
adc
jl
filds
or
xlat
fcoml
add
adc
sub
test
lea
scas
mov
in
mov
adc
into
jmp
push
push
shll
ficoms
add
or
push
jle
pop
sti
lea
xchg
sbb
sub
pusha
add
dec
sub
mov
addr16
or
cmp
ret
and
jo
xor
pop
inc
sarl
sbb
mov
pop
jle
add
stos
push
add
psllq
push
cltd
dec
mov
in
cmpsb
neg
repnz
and
add
xor
xlat
dec
jae
cmpsb
test
lret
movsl
in
adc
pusha
add
fldl
sub
and
aas
leave
int
ja
je
add
inc
add
xchg
push
repnz
xor
repnz
lret
imul
add
stos
pop
jg
inc
fcoml
adc
movb
out
int3
mov
add
int
cmp
fstl
and
ret
jnp
add
int
xlat
or
inc
mov
add
aad
pop
shr
pop
and
add
dec
mov
lahf
inc
ss
sbb
into
out
cmp
fimull
push
shrl
sub
insb
popf
outsl
sub
mov
pop
fmulp
cmp
cmp
filds
ljmp
and
scas
ret
daa
xor
data16
add
js
mov
shrb
stos
and
sbb
lret
lret
jecxz
insb
adc
add
adcl
add
add
imul
popf
cli
lods
inc
stc
mov
mov
mov
sbb
adc
movsl
cltd
ds
fcom
movsl
repnz
add
ja
mov
push
gs
xchg
jb
inc
add
aad
sbb
ret
movsl
dec
clc
dec
jg
xchg
sti
out
pop
imul
xor
add
jns
addr16
cmp
fsubl
fcomps
scas
mov
test
dec
xchg
and
shrl
cli
in
add
cmp
jmp
popf
sub
jns
roll
es
inc
add
push
sub
stc
out
inc
add
repnz
sbb
mov
js
push
dec
pop
inc
add
jns
and
jne
push
sbb
xchg
or
mov
mov
in
add
adc
mov
inc
add
xor
shll
aam
inc
add
loopne
mov
rcll
out
fisubl
aam
fisttpll
dec
sub
inc
add
filds
lret
insl
movsl
mov
cltd
mov
aas
stos
fmull
sbb
add
add
popf
pop
lods
and
cld
sbb
scas
scas
mov
aaa
inc
add
add
push
fs
xor
xorl
icebp
lret
ja
jb
cmp
stos
inc
mov
dec
rorl
out
xchg
stos
int
add
jbe
and
popf
rolb
les
pop
clc
adc
cmp
or
int3
test
cmovae
push
sub
add
or
xchg
mov
add
ljmp
add
jg
adc
pop
lret
aaa
es
fdivr
mov
xor
or
scas
leave
fdivr
adc
add
and
push
addr16
xorl
into
xor
dec
das
sub
push
leave
cmp
out
lock
ljmp
add
lcall
out
leave
mov
fs
das
mov
es
or
xchg
addr16
xor
mov
xchg
sub
test
pop
add
daa
into
and
enter
or
jge
xlat
enter
xor
mov
mov
sub
add
je
sub
cmp
jne
add
mov
xor
call
xchg
pop
lea
rolb
add
fistps
scas
add
push
jns
out
in
push
stos
cmp
push
add
and
sbb
sub
xchg
jns
jmp
dec
lret
clc
je
testb
fucomp
cld
lods
roll
push
movsb
lret
adc
lds
adc
xchg
sbb
pop
inc
pop
pushf
mov
add
mov
jle
or
push
fiadds
addr16
iret
dec
ja
addb
test
jnp
add
inc
sub
xor
lds
pop
or
add
movsb
jl
cmpl
imul
jg
dec
lcall
xchg
xchg
test
mov
pop
pop
jmp
jns
in
inc
jbe
movsl
lret
add
jbe
daa
jmp
jl
in
or
ds
or
push
xchg
xor
and
inc
popf
xchg
add
insb
cmp
pop
cld
mov
lds
mov
call
test
ret
aad
push
addb
push
add
adc
mov
sarl
sahf
sub
cmp
adc
imul
mov
in
xor
out
sbb
ja
mov
inc
and
dec
push
add
fdiv
stc
fimuls
mov
adc
imul
mov
mov
add
out
pushf
xchg
push
dec
movsl
addr16
sahf
xchg
lock
sbb
test
cmpsb
pusha
add
lock
mov
repz
add
inc
add
cmp
xlat
in
add
adcl
pop
inc
pop
adc
mov
insb
push
add
lret
add
push
dec
sbb
sbb
add
das
in
cmpsl
add
add
adc
jnp
add
adc
and
and
rcrb
mov
sub
gs
dec
and
inc
shlb
mov
das
imul
xchg
push
jo
add
cmp
add
cs
add
and
push
mov
rorb
stos
mov
adc
stos
addl
aad
mov
push
mov
jecxz
add
notb
stos
in
adc
out
add
out
pop
js
mov
xor
in
call
fcmovne
push
mov
addr16
cmp
mov
jbe
add
mov
add
add
mov
and
dec
pop
or
clc
xor
add
dec
xor
cmp
mov
inc
add
inc
add
mov
add
pop
mov
add
inc
je
sub
xchg
fistps
into
cmp
mov
mov
call
xorl
data16
sbb
pop
xchg
inc
in
mov
dec
out
sarl
cwtl
cld
cmp
adc
add
xchg
addb
out
addb
pop
pop
in
add
add
hlt
stos
dec
mov
pop
push
jnp
inc
add
arpl
jg
ja
js
add
jns
sbb
add
add
fistps
arpl
lods
mov
xorl
mov
scas
cmpsb
and
fwait
dec
mov
or
loop
fwait
and
mov
in
add
cmp
dec
cmp
arpl
mov
mov
mov
pop
push
pusha
add
mov
fsubl
add
mov
push
add
pushaw
add
das
bound
add
dec
fsts
adc
ja
mov
int3
inc
pusha
add
and
mov
mov
shr
push
imul
mov
scas
mov
ret
out
lret
jo
xor
jmp
inc
jp
add
pop
pop
movb
mov
xchg
sub
clc
jmp
adc
lahf
sti
andl
sbb
insb
repz
in
mov
aad
or
add
rcr
aam
fstp
dec
push
dec
inc
add
aad
and
or
sbb
and
pop
mov
inc
add
add
fwait
sbb
and
loopne
cli
ret
add
add
pop
dec
xchg
or
add
inc
arpl
jg
gs
add
mov
je
push
incl
mov
push
call
push
xor
lods
cmp
add
add
int3
lods
sbb
pop
mov
jno
jl
jne
add
xor
or
xor
and
pop
arpl
imul
mov
adc
jb
mov
outsb
movsl
insb
jl
ret
sub
hlt
scas
call
fsubs
mov
iret
fisubs
adc
aad
imul
push
ds
dec
scas
jae
in
cmp
aam
mov
bound
mov
mov
loope
push
push
fiaddl
daa
std
and
mov
mov
push
not
popf
fucom
push
xor
mov
push
xor
loop
insl
xor
jge
inc
pop
dec
adc
mov
sti
dec
sub
ss
sbb
std
xchg
pusha
add
cwtl
pusha
add
dec
adc
and
rolb
aaa
mov
cmp
cltd
mov
std
arpl
mov
fsubl
test
cmp
out
mov
insb
sti
hlt
arpl
test
cmc
fs
mov
clc
mov
cmp
les
add
rolb
cmp
jg
movsl
sbb
je
add
cmp
cmp
push
mov
mov
push
sbb
lahf
cwtl
add
popl
xor
fisttps
mov
push
imul
aam
add
gs
cmpsb
jo
repz
cmc
push
push
daa
mov
jmp
insl
ss
imul
jge
sbb
add
jne
add
dec
jle
lods
mov
out
lahf
mov
dec
push
and
mov
imul
nop
cmp
add
lcall
andl
ret
mov
jmp
sub
dec
xor
mov
faddl
or
loopne
mov
std
add
push
inc
mov
imul
out
movb
jae
aaa
sub
clc
mov
movsl
mov
out
push
add
sti
add
cmc
dec
add
mov
push
mov
push
pop
push
stos
cmp
sub
stos
outsl
aam
lcall
fldl
ja
inc
add
xchg
push
mull
add
xor
data16
std
das
inc
add
xchg
jecxz
inc
add
inc
shl
adc
add
hlt
std
or
pop
stos
int
out
cltd
fcompl
out
push
jae
movsb
jae
add
and
sbb
mov
add
xchg
xchg
jne
mov
cltd
popa
xor
add
pop
int
add
jno
lds
mov
je
test
fisttpl
sbb
ret
pop
neg
cltd
jecxz
fisubrl
sbb
insl
in
xchg
push
lods
int
xchg
and
shlb
fsub
lret
pop
dec
jnp
mov
add
call
jae
add
adc
shll
cltd
lahf
jl
lret
fidivrl
pop
mov
frstor
jg
add
or
push
test
inc
jmp
aam
outsb
xor
iret
aam
or
push
fwait
mov
addb
dec
scas
sbb
lods
movsb
outsl
cmpsl
mov
cltd
push
add
pop
push
out
fists
mov
sub
mov
xor
add
addb
test
cmp
lcall
fnstcw
repz
cmp
aad
cmpsb
testl
incl
mov
or
pop
and
addb
pop
sarb
addr16
imul
arpl
insl
es
cld
mov
push
mov
leave
pusha
add
test
fwait
sbb
cmp
jl
cmp
pushf
rclb
cld
fs
stos
or
test
sarl
je
bound
notb
in
or
inc
add
arpl
and
or
nop
dec
xor
xchg
adc
in
int
cld
jecxz
adc
xchg
mov
lahf
add
fstpl
adc
cmpsb
mov
adc
out
fldl
or
pop
bound
movsb
loop
addb
adc
mov
jo
push
inc
add
pop
push
add
adc
cs
and
loop
or
sbb
adc
cmpsb
mov
mov
and
sub
mov
popf
flds
mov
dec
sbb
je
lahf
cmpsb
test
push
pop
js
jns
mov
jb
push
loopne
pushl
pop
scas
xor
jecxz
sahf
xchg
outsl
mov
mov
pushf
in
testb
mov
cmp
sti
xor
insl
or
add
mov
inc
lcall
xchg
call
and
or
adc
loope
add
xlat
ja
add
js
push
js
cmp
mov
sub
pop
es
sti
rolb
lret
xor
push
mov
aaa
testl
movsb
divb
cmp
fsubl
mov
mov
mov
insb
add
xchg
dec
mov
mov
cld
out
loopne
mov
pop
or
or
and
pop
icebp
cltd
clc
test
or
in
mov
inc
add
jecxz
scas
out
add
mov
test
dec
cld
xor
popl
frstor
in
mov
add
mov
mov
adc
stc
xorl
add
and
sahf
adc
les
dec
in
outsb
adc
dec
sub
sbb
neg
sbb
and
jno
nop
in
int
dec
imul
in
mov
add
int3
xor
pop
cmp
ja
imul
add
add
and
add
ja
mov
movsl
lcall
fnsave
jae
cmpsl
sbb
loop
inc
add
rorl
jl
push
push
test
inc
add
hlt
ret
adc
pushf
addb
adc
mov
add
loope
add
xchg
dec
jecxz
imul
xor
mov
movsb
call
pop
mov
cmpsl
xchg
rclb
in
into
imul
push
dec
maxps
cmp
into
dec
and
ja
out
add
add
jbe
add
aad
out
int
ja
scas
xor
jb
filds
cs
inc
add
icebp
mov
das
mov
jno
int
pop
mov
lods
sbb
iret
test
jmp
adc
push
stos
and
popa
les
pushf
daa
inc
add
ds
sub
loopne
or
add
sbb
insl
sbb
add
push
jo
jmp
test
incb
add
mov
stc
imul
mov
pop
jecxz
cltd
mov
inc
and
inc
add
pop
mov
in
movsl
out
leave
dec
push
ret
adc
sbb
dec
adcl
adc
sub
ljmp
rorl
jo
inc
and
jg
rolb
in
ret
add
insb
repz
andl
xor
mov
adc
dec
out
add
inc
add
dec
and
cli
mov
or
rolb
and
insb
xor
inc
add
out
adc
test
test
repz
testb
mov
sub
add
add
nop
mov
outsl
rolb
push
rolb
push
mov
repz
xor
add
dec
adc
or
out
je
lock
jl
jo
push
and
adc
mov
pop
xor
adc
push
in
pushf
jle
aaa
xor
loope
lock
push
add
pop
cmc
sbb
hlt
out
stos
fcoml
push
cmp
in
inc
pusha
add
sub
in
add
in
xchg
pop
jne
je
imul
and
cwtl
pop
aad
add
outsl
sbb
push
mov
add
outsl
mov
add
mov
jbe
aam
push
xor
out
xor
hlt
in
imul
or
jns
inc
add
push
push
outsl
xchg
jns
insb
add
and
je
aas
out
mov
adc
mov
pushf
fidivs
movsb
xchg
stos
jg
gs
jge
popa
jno
cld
aam
add
out
cmp
mov
out
addb
adc
cld
mov
cmp
dec
sub
cwtl
inc
mov
xchg
mov
scas
int
dec
movsb
ss
movsl
push
push
test
or
dec
ja
out
inc
dec
sbb
cwtl
inc
add
jp
or
add
jecxz
jbe
cmp
mov
jbe
sbb
and
in
cmp
pushf
dec
adc
push
add
adc
jg
add
add
xchg
lods
xchg
fs
add
movsl
js
pop
sub
push
pop
dec
and
cli
loope
mov
push
out
stos
in
pop
cltd
fs
fisttpl
arpl
repnz
xchg
xchg
push
les
scas
flds
dec
out
pop
int
test
negb
adc
mov
scas
sub
push
addl
add
in
inc
add
adc
enter
pusha
add
inc
add
scas
pop
imul
sub
ja
mov
xchg
addb
neg
sbb
enter
icebp
push
pop
mov
xor
scas
mov
add
sbb
sub
pop
xor
bound
fidivl
cmp
mov
iret
mov
push
xchg
iret
inc
or
add
push
lret
jge
mov
imul
cmp
xlat
xchg
punpckldq
leave
xor
jmp
push
mov
inc
lock
sub
add
in
dec
jge
addb
icebp
xchg
jno
jl
das
jb
add
inc
cmp
mov
pop
sti
xor
sub
fs
leave
test
add
sbb
pop
cmp
rolb
push
dec
mov
test
cmp
or
decb
clc
aas
fcomp
mov
cmp
mov
lcall
adc
int
insb
pop
xlat
rolb
in
rorb
pop
shrl
mov
enter
add
sbb
pop
flds
adcl
addb
add
add
sbb
aam
push
add
hlt
push
fidivrl
stc
jbe
and
lcall
add
add
and
xchg
sarb
push
mov
mov
mov
mov
repz
cmp
add
sub
add
mov
dec
std
mov
mov
mov
daa
sahf
add
addb
pop
int
in
loop
cld
fwait
icebp
push
or
mov
popa
pop
stos
add
test
in
dec
and
sbb
fstpt
je
ss
mov
cmpsb
mov
fs
mov
sub
aas
add
mov
test
cmp
daa
xchg
lret
pusha
add
and
lds
cmp
imul
push
test
jmp
cli
push
lods
dec
lods
cmp
cmp
jecxz
add
xor
test
in
int3
pushf
mov
data16
inc
pop
outsb
pop
mov
int3
outsb
cltd
in
into
adc
add
jl
mov
cmpsl
repz
in
xor
push
adc
inc
add
add
add
rolb
bound
icebp
adcl
xchg
and
pusha
add
add
xor
movsb
or
mov
pop
jecxz
sbb
push
jno
xchg
push
pop
insb
incl
mov
movsl
push
stos
addb
fstl
mov
pop
mov
and
test
clc
mov
jp
or
add
sahf
int
outsl
icebp
xchg
insb
inc
dec
push
dec
insl
fsubrl
xchg
rclb
stos
out
rorb
in
add
dec
or
sub
adc
rorl
loope
mov
ss
dec
fisttps
arpl
std
xor
repz
aad
cmp
sub
or
xchg
push
add
jmp
add
stc
pop
mov
repnz
add
pop
and
or
out
test
add
add
add
addb
sbb
mov
xor
and
sub
arpl
repz
add
out
add
rolb
lods
leave
mov
add
jbe
out
push
arpl
scas
and
mov
hlt
pusha
add
cld
jne
pop
adc
cltd
dec
jge
cmp
jg
add
popf
pop
xchg
add
pop
sub
rolb
out
int
xchg
out
jno
pop
in
fisttps
adc
push
imul
nop
mov
cmpsl
xchg
das
call
sub
cli
mov
popa
les
mov
movsb
dec
outsb
push
sarl
ret
jno
or
loope
js
mov
pop
inc
cmp
adc
adc
xlat
pop
sarl
iret
and
adc
mov
mov
mov
aaa
cmp
fistl
mov
daa
pop
out
mov
scas
notb
sti
xor
ret
add
dec
inc
add
add
cmp
nop
jae
pop
orl
mov
push
imul
push
aad
sbbl
cmp
adc
sub
stos
or
jo
ljmp
rcr
insb
jne
add
addb
jb
stc
sub
fwait
sbb
add
popf
ret
icebp
imul
pop
sbb
call
daa
mov
sbb
jns
mov
inc
add
dec
rcrl
mov
add
xchg
adc
std
xchg
adc
push
test
sub
mov
rolb
in
push
add
stos
imulb
push
jmp
and
and
or
data16
iret
push
mov
lds
popa
inc
sub
add
outsb
pop
xlat
push
iret
pop
pop
clc
cmp
cld
lea
mov
push
int
flds
add
jns
cwtl
add
and
out
mov
mov
mov
fadds
xor
add
andl
stos
adc
inc
add
adc
jno
movb
jno
stc
callw
xor
ljmp
add
xchg
adc
mov
pushf
into
gs
jne
pop
xor
mov
push
mov
out
xchg
nop
push
xchg
xor
cmp
add
outsl
and
imul
ds
js
xor
mov
push
cld
xchg
push
pop
imul
mov
sbb
mov
pop
mov
rolb
push
mov
arpl
adc
nop
xchg
dec
mov
shrl
xor
cmp
popa
dec
call
sub
lods
dec
mov
das
rolb
mov
aas
enter
push
and
in
mov
mov
int3
testb
call
mov
xchg
xchg
aaa
mov
add
sti
adc
in
insl
push
add
or
rclb
dec
pop
push
fmuls
shl
lcall
pop
pop
inc
add
mov
es
mov
addl
outsl
and
mov
les
std
fidivs
mov
imul
mov
mov
into
shll
pop
and
aad
adc
fmul
mov
call
sub
js
jno
mov
push
cs
add
mov
push
and
xor
mov
jge
movsl
jmp
ljmp
dec
js
and
pop
cli
mov
cmp
xor
enter
cwtl
mov
and
arpl
add
push
xor
xchg
fwait
inc
add
mov
adc
lret
push
sbb
in
rcll
pop
jae
inc
add
pop
lret
pop
dec
mov
add
cmp
ja
aad
cld
cmp
jl
rolb
and
ror
pop
dec
out
mov
push
xor
iret
adc
in
inc
rolb
xchg
cmp
das
push
xchg
jmp
sbb
add
ret
xchg
loope
dec
dec
jmp
movsb
dec
lret
jns
mov
add
icebp
xlat
xchg
sub
es
push
shlb
and
xchg
adc
push
add
aad
in
cmc
inc
pop
adc
mov
data16
pop
insb
cmpsl
dec
xchg
fcoms
or
mov
or
pop
jl
ret
dec
je
sbb
jns
in
sub
cmp
add
pop
sub
cmp
push
aad
fimuls
cmpsl
imul
adc
mov
and
dec
loopne
dec
bound
jnp
jl
fildll
aam
mov
out
sbb
jbe
jle
lds
or
outsl
xor
das
pop
icebp
mov
pop
sub
sbb
mov
gs
push
insl
dec
mov
push
aaa
ds
lods
and
ficoml
decb
enter
push
jp
sbb
xchg
mov
addb
addb
arpl
add
mov
pushf
adc
add
add
push
push
add
into
das
imul
add
std
inc
add
cmp
aas
sbb
mov
add
out
sub
scas
pop
out
fildll
cmpsb
sbb
sub
scas
pop
dec
pop
add
data16
ret
add
push
sub
or
or
pusha
add
inc
add
in
das
and
and
aaa
xor
add
mov
or
add
in
inc
add
jbe
sub
mov
push
mov
mov
pop
push
hlt
outsb
mov
push
xlat
mov
fcmovnb
add
adc
mov
jns
pushf
inc
add
scas
out
jnp
cwtl
mov
mov
jecxz
int3
pop
inc
add
mov
add
cli
scas
arpl
mov
jno
out
adc
cs
sahf
cwtl
fmull
pushf
sub
addb
leave
sbb
adc
push
iret
add
push
loop
das
inc
sub
cmp
push
into
mov
jb,pn
xor
xchg
icebp
in
movsb
and
dec
push
aaa
cwtl
or
mov
cmp
call
lcall
in
insb
push
add
rolb
jae
das
test
xchg
mov
cmp
inc
add
jo
jmp
xor
add
jl
bound
std
jp
out
fildll
and
inc
add
addb
into
jp
out
les
fcmovnb
add
add
test
mov
js
mov
lret
push
pop
sarb
inc
pop
adc
add
mov
mov
sbb
add
mov
aaa
sub
add
adc
pop
push
adc
jle
incb
add
cmp
push
or
cmp
push
inc
add
addl
sbb
lret
xor
psllw
into
sub
mov
add
and
pop
clc
push
sar
xlat
sbb
cmpsb
inc
add
movsb
lods
idiv
jo
jbe
mov
loope
dec
aad
das
icebp
cmp
stc
icebp
ljmp
cmp
add
insb
ret
mov
cmp
dec
rolb
in
lds
add
lds
sub
js
dec
rolb
ja
test
lock
add
sahf
ret
push
addb
or
pop
lds
dec
lea
dec
push
add
pusha
add
bound
insb
inc
add
mov
cmp
ljmp
push
mov
mov
jp
fdivrs
and
push
imul
push
mov
ss
add
add
jmp
mov
mov
pop
mov
push
dec
mov
icebp
or
cmp
sbb
mov
cmp
inc
push
jae
sub
add
add
sub
movb
add
out
mov
bound
push
out
adc
hlt
push
xchg
je
adc
mov
add
pop
mov
xor
js
xor
and
arpl
xlat
adc
dec
mov
ret
decb
and
inc
add
jb
ret
insl
push
cs
out
jmp
rolb
pushf
les
hlt
cmp
in
clc
fistl
cmpsl
pop
xchg
aaa
sub
add
push
add
pop
fistl
iret
cmp
add
pushf
cs
sti
push
add
pop
inc
movsl
mov
loopne
hlt
repz
repz
lods
push
call
fdivs
jne
xchg
or
jecxz
outsl
sbb
imul
movsl
jno
xor
rolb
mov
sub
stos
insb
rcrb
sub
lods
cmp
mov
iret
cmp
inc
push
mov
xchg
jbe
aam
dec
test
je
imul
cmp
inc
add
pop
inc
add
mov
stos
add
rorl
rolb
mov
rcrb
dec
mov
in
imul
fisttpll
outsl
iret
add
push
mov
add
dec
test
push
sti
jge
xchg
xchg
adc
jno
sbb
sbb
rolb
stos
insl
mov
xorl
jl
jecxz
pop
adc
fbstp
adc
lods
xor
add
sub
add
pop
push
stos
iret
pop
dec
in
in
jle
pop
jecxz
jo
aam
test
mov
out
add
push
movsb
push
mov
inc
mov
push
mov
testl
sub
or
test
pop
adc
fsubrs
dec
and
fstl
test
loopne
add
mov
sub
shl
inc
std
add
mov
cmpsb
inc
add
stos
and
fldt
sub
sbb
ja
mov
mov
sub
repnz
fsts
decb
std
jns
ss
jo
les
out
lds
in
xchg
mov
xchg
sbb
cmovg
xchg
clc
push
lock
mov
ss
and
or
jg
jo
jne
jge
mov
mov
jno
mov
ficoms
jl
pop
push
or
cmp
push
mov
lcall
addr16
add
add
jle
fsubrs
mov
fwait
mov
add
or
arpl
nop
ss
stc
pushf
leave
aam
inc
add
jl
bound
decl
or
or
mov
pop
fidivrs
shrl
out
aaa
popf
pushf
and
insl
gs
