loop
add
pusha
add
xor
pop
dec
mov
cltd
popf
xchg
pop
adc
xlat
sub
mov
jb
stos
iret
addr16
xor
adc
fsubl
pop
loop
inc
add
jo
mov
xchg
add
dec
imul
mov
repnz
mov
gs
pop
mov
gs
sahf
sbb
lods
and
lcall
les
lret
adc
add
rolb
adc
pop
jns
je
or
dec
pop
xor
or
stc
add
mov
mov
lea
jb
icebp
pop
int3
dec
fnsave
lock
lds
loope
push
xor
sub
lds
cld
sbb
ds
dec
arpl
out
fcomi
jbe
pop
fists
mov
scas
icebp
mov
pusha
add
cld
add
addb
and
popa
cmp
cmpsl
fistpll
outsb
mov
in
aam
inc
xor
or
mov
sub
stos
sub
ss
test
cmp
ror
fbstp
mov
loopne
pop
mov
or
xchg
je
ret
adc
repz
mov
dec
testl
adc
lret
xlat
lcall
mov
fs
jbe
add
pop
sub
mov
aaa
mov
loop
or
loop
add
in
aam
movsl
dec
lods
inc
in
dec
lcall
jns
fists
out
call
pop
ret
insl
xor
sub
addb
inc
add
xor
mov
lcall
mov
inc
add
add
addb
insb
cmp
dec
cli
pusha
add
into
addb
and
cmp
movb
sbb
jg,pt
jecxz
or
test
cmpsl
bound
cli
test
lock
inc
add
xlat
sub
cmp
mull
xor
in
icebp
daa
movb
clc
pop
xchg
inc
jl
dec
mov
movb
arpl
xor
dec
cmp
insb
addr16
pop
inc
sub
xchg
push
push
in
mov
xor
dec
lea
setl
pusha
add
sub
inc
add
mov
xchg
jno
mov
and
iret
push
add
mov
inc
jg
arpl
rorb
xchg
leave
add
push
push
jle
jmp
push
ss
dec
pop
test
iret
xchg
incb
add
lret
mov
dec
in
sub
push
aas
pop
rolb
push
push
aaa
pop
cmpsb
stos
lea
ljmp
fsubrp
inc
add
lahf
pop
and
sbb
scas
stos
xchg
pop
sub
sub
stos
scas
lock
pop
pop
inc
in
fstl
in
xlat
movsb
fdivr
jge
mov
test
fcomps
fisttpl
jnp
add
fsubl
add
push
jnp
mov
nop
cmp
test
jns
mov
pop
fwait
sbb
mov
aaa
adc
faddl
cmpsl
dec
xor
jmp
and
xlat
addb
mov
jnp
dec
das
pop
aam
ljmp
cmpsl
lds
jnp
inc
push
scas
jb
xchg
add
mov
nop
lods
xor
daa
pop
mov
lcall
leave
xor
addb
inc
add
add
icebp
xchg
addb
ja
xchg
pop
pop
popa
xor
add
mov
push
movsw
jae
test
push
bnd
sbb
shll
cmpsl
mov
jne
mov
xlat
pop
insl
cli
ret
ret
pop
jmp
fwait
loop
cmp
add
subl
mov
or
cmpl
insl
lods
incl
add
adc
mov
jg
jl
xchg
faddl
pushf
outsl
ret
and
add
daa
pop
fistl
jmp
pop
pop
fwait
push
push
push
lcall
xor
arpl
stos
rcrl
nop
or
repz
push
rcrl
cmp
fldt
push
inc
push
jge
ret
pop
xor
cld
mov
clc
adc
push
and
mov
ret
sbb
jg
pop
and
jnp
mov
inc
add
es
faddp
cmpsl
or
pop
sbb
adc
jge
lods
int
mov
mov
inc
add
xorl
or
mov
cmc
jbe
shrl
dec
hlt
in
les
mov
sbb
cltd
test
sbb
shr
mov
push
jo
add
cli
push
add
in
xchg
add
add
fwait
jl
xchg
out
sub
add
pop
mov
add
bound
cmp
add
fcomps
loopne
ja
add
dec
push
or
and
sub
jae
movd
add
xor
mov
shll
xor
in
andl
sbb
pusha
add
dec
movsl
pop
jbe
lahf
insl
fcoms
mov
xlat
mov
cmp
lret
add
push
sahf
xchg
mov
xchg
mov
sysexit
nop
adc
addb
inc
pusha
add
or
incl
mov
add
cmpsb
adc
or
adc
lock
lds
icebp
add
popf
addr16
popf
adc
add
fimull
sub
sub
inc
add
cmc
xchg
mov
mov
jge
div
mov
mov
dec
es
pop
lods
cmpsb
in
repnz
movhps
outsl
icebp
test
fisubrl
stos
out
inc
add
jb
add
jmp
add
lahf
xchg
and
jecxz
xchg
jno
outsb
xor
cli
cs
mov
outsb
loope
push
push
mov
imul
adc
add
xor
mov
xchg
repz
pop
jns
inc
lret
int3
dec
adc
sbb
ja
mov
rcl
sbb
push
mov
arpl
push
dec
pop
loope
jne
pop
or
pushf
addb
or
pop
xchg
xor
cmp
add
push
xchg
out
xchg
inc
add
adc
push
aaa
repz
pop
pop
aad
andl
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
lret
add
add
sub
loop
xchg
aad
and
mov
mov
push
fidivs
xchg
jnp
cmc
push
daa
mov
in
sbb
cs
mov
loope
and
mov
cwtl
jae
sbb
icebp
mov
pop
push
xor
sti
data16
sub
test
lock
xchg
cmpsb
pop
fmuls
adc
add
leave
pushl
xor
in
push
arpl
fwait
or
fdivl
dec
je
fsubs
insl
push
adc
push
or
mov
fisubl
cmp
into
mov
add
xchg
add
rcrl
repz
dec
mov
int3
dec
mov
out
cltd
and
push
jb
sbb
cld
ret
gs
add
in
push
bound
sbb
mov
in
sbb
bound
cli
mov
out
movsb
add
dec
cmp
cwtl
movb
pop
sbb
inc
or
add
inc
sbb
cmp
lfs
js
popf
push
push
add
mov
ret
arpl
inc
add
dec
lods
mov
les
fildl
ljmp
inc
add
adc
add
mov
mov
into
fwait
lock
xchg
add
mov
mov
or
jne
mul
mov
pop
inc
add
and
add
mov
repz
add
je
mov
pop
popf
jmp
add
fwait
pop
mov
mov
xchg
and
push
sbb
add
add
arpl
std
cltd
ss
adc
xlat
adc
cmc
lds
dec
mov
lods
or
add
aam
js
mov
fucomi
imul
jbe
or
xchg
outsl
dec
bound
es
pushf
jge
rolb
cli
cmc
mov
or
jmp
add
inc
add
add
mov
test
mov
aam
inc
aam
push
add
jl
xor
mov
std
adc
lds
push
xchg
dec
ret
sahf
sub
sbb
sbb
add
pop
add
pop
and
add
and
inc
add
je
cmpsl
mov
add
repz
sub
xor
xchg
pop
addb
scas
push
pop
int3
aam
inc
mov
scas
outsl
xchg
add
fiadds
pop
mov
mov
repnz
ret
ret
repnz
mov
sti
imul
jp
push
fistpll
xchg
push
mov
loopne
cmp
stos
xchg
xchg
mov
pop
pushf
xor
fwait
and
std
and
add
inc
scas
xchg
es
das
pop
cli
dec
fstl
subl
loopne
stc
pop
insw
push
add
mov
mov
fildll
testb
ret
addb
imul
or
pop
add
or
xchg
mov
lcall
mov
jne
call
int3
pop
dec
add
xchg
xlat
add
xorl
jbe
xchg
push
lret
mov
inc
jb
ss
mov
cs
cld
inc
add
mov
mov
cli
dec
leave
ds
dec
incb
sbb
mov
ljmp
addb
adc
testb
inc
add
push
add
cmc
orl
js
roll
sbb
push
add
movb
adc
inc
inc
and
movb
cmp
repnz
jmp
add
add
inc
add
cmp
fisubs
add
inc
add
outsl
aad
in
ja
and
jp
mov
dec
gs
mov
sbb
and
repnz
inc
loope
sbb
lahf
orl
leave
pop
movsb
pusha
add
dec
xchg
rcrb
cmpsl
loope
add
push
lcall
cmpsb
jae
in
and
popa
adc
bswap
xchg
sub
arpl
push
enter
xchg
sub
addb
sbb
pop
sub
fwait
gs
jl
pop
adc
addb
jb
cwtl
int3
stos
les
push
loop
inc
adc
or
inc
fsts
mov
jbe
sbb
jne
daa
cmpsl
shl
lcall
add
or
push
inc
add
cltd
mov
imul
lea
mov
pop
mov
sub
stos
jne
adc
enter
pop
xor
fs
jae
fisttpll
in
movsl
addb
in
mov
xchg
jg
fs
mov
xor
data16
cmpsl
mov
add
iret
push
dec
adc
into
js
sub
cmp
jle
and
jg
lret
pop
cmp
ret
pop
inc
add
add
adc
mov
push
push
fwait
adc
push
scas
push
add
loop
cmpsb
jo
add
push
test
dec
push
xor
or
sbb
push
mov
lods
sahf
lret
lcall
xorl
add
sahf
jmp
stos
iret
mov
mov
mov
push
dec
jle
stos
das
pop
jge
mov
out
adc
jge
fisubrs
inc
or
pop
fs
and
fdivrs
add
int
xor
push
ret
in
daa
mov
jecxz
add
divb
mov
js
push
pop
xor
test
jecxz
and
inc
fcomi
dec
sub
mov
fwait
cmp
pop
cmpsb
pop
sub
cmp
addr16
mov
jecxz
out
addb
or
dec
pop
pop
xor
add
aaa
xchg
mov
pop
imul
rolb
addb
lret
or
xor
cld
mov
scas
idivb
imul
loope
mov
mov
push
inc
fildl
enter
add
addb
cmpsb
jmp
add
push
dec
adc
fists
scas
xlat
out
and
imul
dec
jnp
insb
dec
fildll
ret
pop
push
mov
add
stos
jns
dec
dec
fidivrl
fsub
mov
and
mov
es
sbb
daa
loop
addb
mov
mov
addb
fmull
inc
add
fwait
jb
gs
inc
add
stos
in
xor
lret
mov
fldl
or
xor
push
rolb
cmp
es
xchg
nop
je
aam
fisttpl
jge
mov
push
stos
and
xchg
inc
add
pop
test
add
je
rcll
into
aam
sarl
inc
add
add
repz
mov
mov
mov
sub
fidivs
mov
fwait
lret
xorl
add
cmp
popf
pop
aam
jne
add
fisubs
inc
mov
dec
pop
jg
lahf
jecxz
add
cmc
mov
add
add
movsl
in
mov
and
adc
jae
pop
call
mov
sub
push
mov
lcall
enter
jae
andl
pop
xor
cli
dec
scas
vpextrw
add
mov
add
inc
add
jp
bound
xchg
lods
punpcklbw
and
and
dec
mov
xchg
xchg
inc
add
pop
dec
inc
add
sub
rcrb
fwait
add
push
lods
push
fxam
shlb
xchg
idivl
xchg
fwait
enter
pop
sbb
loop
inc
add
sub
jl
mov
ljmp
decb
div
xlat
add
mov
mov
push
mov
movb
pop
ret
in
inc
or
clc
lods
loop
add
gs
call
xchg
jge
mov
mov
add
inc
add
add
call
mov
push
sbb
xor
sub
add
adc
jns
jg
or
cmpsl
mov
push
push
lea
sbb
sbb
cltd
in
fcmove
fs
fidivrs
push
jp
rorb
pop
push
fnstenv
aam
dec
adc
sbb
in
test
testb
aaa
add
sbb
jb
addb
and
mov
add
inc
add
push
scas
mov
test
rolb
sub
out
sbb
and
jle
jns
adc
incb
or
adc
xor
xor
inc
add
jge
in
test
imul
shlb
fmulp
jo
shl
sbb
inc
add
add
sbb
push
push
sbb
pop
dec
cmp
add
xor
mov
sub
cmp
fs
vmulpd
push
add
xchg
push
jle
mov
lds
sbb
outsl
jno
test
in
js
lods
adc
add
lods
int3
imul
jmp
inc
push
sbb
inc
xchg
rorl
sbb
adc
add
jo
cmp
mov
inc
add
add
sbb
sbb
ds
xlat
mov
jne
test
fs
inc
add
or
pop
orl
jno
lds
add
xchg
mov
ljmp
push
add
xorl
sub
jge
pop
jmp
stos
mov
mov
cli
add
nop
movsl
lods
inc
add
popf
sbb
inc
adc
shrb
outsb
pop
pop
adc
mov
packuswb
aas
pop
icebp
out
sbb
add
add
sub
mov
mov
add
sub
push
enter
fisubs
pop
push
mov
adc
test
cmp
gs
lahf
push
pop
pusha
add
hlt
arpl
add
inc
or
leave
xchg
xor
clc
sub
add
and
adc
jnp
popa
or
cwtl
xchg
pop
fildll
jl
xor
in
adc
outsl
jle
dec
fildll
mov
cmp
or
and
adc
rolb
sbb
add
pop
loope
dec
leave
fidivrs
repz
mov
sub
xor
or
mov
dec
cld
adc
idivl
dec
into
lods
mov
je
add
lret
mov
mov
lret
lahf
push
cwtl
pop
stos
test
cmp
and
or
fsubp
addb
mov
add
xor
cmp
ss
dec
push
cltd
dec
outsl
xor
add
sub
sbb
push
adc
adc
add
repz
add
lret
xor
pushf
loope
pop
in
xchg
pop
push
xchg
fisubrs
mov
scas
clc
jnp,pt
jmp
push
mov
jno
inc
addb
pusha
add
mov
aaa
xlat
lcall
imul
xchg
xchg
add
fidivrl
sub
ss
jae
inc
inc
add
ss
and
cli
jp
int
dec
xchg
movb
add
push
add
add
in
int
add
bound
mov
hlt
mov
repnz
mov
in
mov
dec
popf
inc
out
ret
pushf
push
cmpsb
push
cwtl
mov
mov
sbb
jae
pop
aad
leave
outsb
test
mov
mov
lret
cltd
pop
popa
das
hlt
jle
add
push
inc
jecxz
jae
mov
or
mov
xchg
sub
out
xlat
jp
add
faddl
mov
daa
sahf
js
enter
icebp
in
adc
aad
jo
out
daa
js
pop
addr16
pop
mov
push
cli
mov
rclb
fidivrs
jo
push
out
cmp
add
add
add
xor
pop
ja
xor
clc
and
pop
ds
add
add
shrb
add
inc
imul
inc
popa
mov
push
jg
ret
push
dec
addr16
sbb
pushf
das
or
hlt
int
jl
lods
pop
insb
xchg
jnp
cwtl
add
jno
add
jle
pop
sub
dec
inc
pop
mov
cmp
inc
add
inc
add
cmp
mov
cmp
loop
decb
pop
aad
movsl
lcall
jno
push
inc
add
dec
or
and
sub
jecxz
pop
loope
std
mov
sahf
xor
add
cmp
mov
test
ja
dec
lods
repnz
mov
xchg
xchg
int3
scas
roll
lods
push
xchg
cmp
mov
out
sbb
mov
lcall
and
push
gs
inc
add
imul
lds
xor
sub
in
cmpsl
sub
sbb
pushf
and
lods
mov
out
mov
jb
test
jb
stc
cmp
and
xchg
in
mov
lcall
lcall
fs
xchg
test
dec
out
mov
xor
inc
jg
lcall
mov
jno
and
xchg
xor
dec
xor
xchg
arpl
inc
add
js
push
sahf
ret
fs
dec
int3
jno
pushf
inc
out
jecxz
xor
scas
das
call
add
cmp
mov
inc
add
cmpsl
repnz
arpl
push
cmp
dec
sub
sub
and
cltd
adc
mov
add
add
addl
scas
fnstsw
out
ret
addl
and
mov
sbb
adc
cli
inc
add
jae
repz
jnp
jb
add
out
fistl
add
scas
loop
add
and
nop
lret
stos
sbb
add
push
cmp
add
into
mov
std
mov
xor
add
jb
inc
and
scas
scas
push
adc
add
push
xor
out
loope
xchg
dec
leave
jp
mov
add
add
sub
push
add
es
pop
add
add
js
je
arpl
and
rolb
mov
loopne
mov
mov
adc
mov
ljmp
xchg
cltd
mov
adc
scas
add
or
xchg
push
adc
cmp
ja
cmc
outsb
leave
mov
out
adc
mov
dec
inc
imul
jg
pop
mov
add
sbb
scas
test
mov
outsb
jecxz
lahf
cmpsb
mov
xchg
jge
loopne
adcl
lods
addb
xchg
mov
fs
out
icebp
std
xchg
loope
or
pushf
xchg
mov
andl
xchg
pusha
add
arpl
pop
or
push
add
out
push
movsl
sbb
sub
mov
jge
or
adc
adc
cmp
mov
test
add
sub
iret
push
jb
cmp
mov
mov
push
xchg
gs
add
out
bound
xlat
sbb
push
add
pop
cmp
rclb
adc
cmp
daa
lcall
or
pop
out
jge
push
jecxz
push
add
insb
repnz
hlt
adc
jnp
inc
or
xchg
jge
mov
sbb
outsl
sbb
xorl
inc
repnz
adc
sub
aaa
adc
cli
mov
into
incl
addr16
push
and
loopne
fwait
mov
push
int
cltd
add
add
xor
add
inc
mov
in
pop
mov
sti
mov
mull
stos
stos
sbb
jg
daa
sub
sahf
jmp
sahf
and
sub
js
imul
fs
pop
mov
inc
insl
lods
xchg
leave
pushl
sbb
imul
add
xchg
cmp
bound
inc
add
xor
or
jns
dec
lock
lock
ret
addb
lea
dec
decb
movb
fsubrs
stos
enter
sbb
xor
sub
popf
xor
mov
jle
insl
cmp
jo
and
insl
testb
rcrl
out
imul
shl
xor
adc
adc
dec
scas
xchg
out
mov
add
inc
pop
jge
mov
lods
imul
clc
push
pushf
test
mov
cld
mov
cs
mulb
repnz
fnstsw
lret
pop
bound
pop
inc
add
mov
jp
jl
lret
adc
int3
aas
repnz
xchg
insb
test
pop
sbb
lahf
and
xor
loope
mov
pop
rolb
pusha
add
imul
stc
lods
or
inc
dec
fstps
arpl
xor
imul
or
jbe
ja
setne
ret
dec
call
dec
or
xor
ja
cmpsl
cltd
mov
sbb
sbb
aad
loopne
fldcw
sti
xchg
and
fbstp
xchg
xchg
cmp
imul
imul
stos
push
out
add
movsl
and
cli
pop
cmp
mov
iret
js
out
pop
add
push
dec
ja
sbb
out
dec
lock
jmp
lret
bound
dec
cmp
and
std
adc
jle
add
sub
frstor
repnz
leave
pop
nop
test
jae
pop
movb
nop
sti
xchg
popa
sbb
andl
outsb
popf
add
ficoms
ja
xlat
ljmp
ja
add
test
push
enter
mov
add
shrb
arpl
mov
push
je
mov
adc
out
ret
mov
adc
mov
mov
outsb
mov
add
or
add
lahf
pop
insl
cld
loop
loope
repnz
and
cmp
loopne
outsl
adc
sbb
stc
mov
add
dec
xor
clc
push
push
addb
int
sarb
cmp
push
mov
pop
mov
sub
inc
adc
jne
and
addb
ret
mov
stc
jno
ret
dec
cmc
xor
inc
pusha
add
sbb
nop
push
inc
ret
out
ja
js
imul
js
fisttpl
sbb
add
addb
fs
pop
xor
in
ds
cmc
sub
mov
pop
popa
pop
fwait
shlb
addr16
stos
and
or
xchg
stos
pop
sub
daa
sub
stos
ds
mov
nop
xchg
pop
push
loopne
adc
cmp
repz
sub
xchg
add
add
in
and
lods
sahf
xor
pusha
add
add
mov
movsb
pushf
lods
add
add
add
sbb
and
mov
jp
fildl
popf
inc
add
xchg
stc
mov
xor
add
cmc
add
pop
in
add
push
cmp
sarb
mov
mov
add
mov
add
scas
push
push
adc
lds
cltd
push
add
adc
jae
loopne
inc
add
add
push
sarl
addb
add
cmp
call
clc
add
mov
lret
add
insb
clc
loope
cld
jno
push
dec
cmpl
and
adcl
jbe
fstps
notb
ss
fldcw
cwtl
shrb
add
and
push
mov
aas
cwtl
pushf
out
add
push
scas
mov
ljmp
mov
pop
push
addb
xor
inc
add
jno
jne
inc
std
jae
and
xchg
mov
and
lret
inc
roll
shll
adc
mov
pop
adc
aad
lcall
xchg
sbb
xchg
pop
add
call
ret
into
call
mov
adc
sbb
pop
pop
mov
mov
xchg
pop
mov
cmp
xor
popf
movsl
addb
in
mov
shlb
xor
jle
push
rolb
cmc
xchg
or
and
inc
add
push
add
cmpsb
movb
push
imul
scas
sub
mov
imul
mov
push
bound
jle
mov
pop
push
test
and
je
leave
dec
sbb
inc
dec
xchg
ja
and
add
xchg
pop
or
addb
fld
add
and
xchg
pop
mov
dec
inc
nop
jns
int3
pop
loop
js
xchg
fs
push
fwait
mov
addb
aas
adc
lds
and
mov
repz
lds
inc
add
mov
cltd
aaa
sbb
sbb
jl
aad
inc
mov
add
addl
push
cmpsl
dec
aas
fisubl
mov
sub
cs
js
mov
xchg
adc
sti
cmp
outsl
fistl
mov
aam
das
lret
and
cmpsb
out
sbb
inc
lahf
sbb
push
imul
jl
adc
lds
xor
mov
jle
out
adc
add
lea
adc
adc
lcall
pop
xor
mov
fiaddl
push
mov
stos
or
pop
xchg
test
fsubl
add
lahf
xchg
fmuls
or
insl
adc
and
push
add
aad
sub
cmpsb
mov
mov
mov
mov
pop
jle
arpl
movsl
bound
dec
imul
add
fdivr
push
mov
or
mov
in
jg
jmp
fldl
jns
sbb
add
in
rcr
stos
cmp
pop
sub
or
jb
cmp
xor
cli
in
cmpsb
cmp
out
xchg
jns
and
lahf
jno
add
imul
pop
insl
cmc
ss
fs
vcvtpd2dqy
sbb
std
inc
add
rolb
xor
adc
das
xor
xchg
in
out
ds
push
or
das
fidivl
mov
add
pop
repnz
add
inc
add
lods
mov
mov
std
clc
jl
dec
jne
adc
ret
sub
push
in
push
jb
jg
add
movb
push
js
out
or
pop
test
cmpsb
out
xor
adc
test
or
xor
lods
insl
xor
inc
and
cli
pop
cmc
repz
add
push
fistpl
lea
inc
add
push
push
jp
mov
sub
or
jg
sub
popa
adc
in
loope
adc
pop
fistps
inc
sahf
in
ja
pop
jae
adc
lods
adc
cmpsb
cs
out
xor
push
pop
sbb
das
mov
adc
call
in
loope
int
lret
or
sahf
mov
inc
add
adc
test
push
jno
or
dec
adc
sub
movsl
jmp
cmp
incl
adc
add
cmp
adc
aas
xchg
jmp
push
and
movl
or
mov
mov
addr16
fwait
sbb
popf
iret
dec
push
stos
add
cmp
rolb
mov
test
sub
mov
mov
popa
mov
mov
jbe
and
mov
mov
fucomp
jno
cmc
shll
fldenv
ljmp
sbb
xor
out
add
mov
add
pop
pop
mov
into
je
das
rol
insb
jmp
add
jg
dec
ffreep
or
add
movsl
or
cmp
dec
arpl
dec
imul
and
lcall
addb
mov
sub
fdivrp
cld
mov
adc
addb
pop
popf
cmp
cmp
pushf
and
add
inc
mov
xchg
sbb
cmpsb
pop
rcrl
into
xor
add
ja
add
sub
jmp
cmpsb
jg
adc
roll
inc
add
xchg
mov
add
xor
sbb
ret
sarb
rolb
mov
mov
rolb
out
test
sbb
int
add
insl
lds
fsts
add
iret
fs
mov
push
dec
loop
mov
xchg
fsubs
ret
mov
arpl
leave
jbe
inc
add
jmp
jnp
int3
divb
adc
fnstsw
and
or
and
add
out
xor
ss
scas
in
rolb
add
xor
ret
inc
add
sub
sbb
ficoml
leave
add
inc
add
das
data16
popa
lods
movsb
xchg
gs
or
fld
add
jo
sti
enter
push
popa
dec
popf
arpl
icebp
in
and
dec
cmpl
and
jle
jmp
add
fbld
add
stos
cmp
iret
inc
add
insb
mov
jae
sti
or
iret
dec
and
dec
outsb
in
pusha
add
inc
add
movb
push
add
out
shl
cmp
mov
addb
add
dec
fsqrt
les
fldl
test
xor
test
stos
test
add
scas
nop
mov
std
stos
cmpsb
push
enter
les
inc
add
pop
sarl
ret
xorl
loopne
mov
mov
jne
cwtl
scas
sbb
pop
fists
push
or
sbb
add
outsb
and
cmp
add
in
bound
cmc
leave
xchg
push
pop
pop
adc
or
or
enter
test
movb
push
push
mov
dec
shlb
add
icebp
jmp
push
or
lret
mov
push
add
popf
jno
add
ror
sbb
cs
mov
popf
insb
dec
push
add
daa
mov
adc
push
sub
test
jo
es
pop
or
getsec
dec
lret
ficompl
xchg
xor
mov
insb
mov
jae
mov
bound
out
and
test
jbe
lock
push
out
dec
jbe,pt
push
ficoml
xor
xchg
or
mov
add
icebp
pop
xchg
lods
hlt
push
and
and
xchg
inc
add
and
xor
add
movb
fisubrs
test
adc
add
bswap
push
int
stos
sub
insl
inc
xlat
xchg
dec
cmpsl
push
nop
es
int
lcall
xchg
mov
dec
pop
ss
arpl
add
add
scas
rolb
pop
loopne
lret
out
std
rolb
add
loopne
shlb
lcall
lds
lock
insb
rorb
dec
arpl
ror
daa
fists
sub
adc
sti
in
pop
pop
div
cmp
mov
lods
add
addb
bound
stos
nop
nop
lock
sahf
insl
mov
add
push
lret
jecxz
mov
xchg
push
sbb
sub
sub
movsb
arpl
add
add
add
xchg
jmp
dec
into
fstpl
add
aad
sub
sbb
das
and
test
lret
add
push
imul
dec
sti
clc
nop
xchg
push
clc
mov
xor
mov
clc
inc
pop
pop
loop
cmp
jno
cwtl
sarb
jmp
add
push
add
mov
and
sti
push
sub
xor
insl
loopne
jg
xchg
push
dec
dec
inc
fsubr
dec
paddsw
mov
int3
add
mov
movsl
and
stc
imul
mov
ds
mov
mov
pop
push
addr16
mov
cmp
add
jae
cmpsl
out
outsb
dec
xor
icebp
addr16
xorl
test
xor
movsl
sbb
inc
and
xchg
inc
fsts
adc
lret
out
push
enter
dec
and
cmp
fistpll
sbb
lret
xchg
jne
ret
mov
int
mov
adc
in
ja
fxch
jg
in
lods
pop
pushf
add
sub
inc
add
or
jg
or
rolb
inc
in
mov
jns
mov
sbb
fwait
dec
jbe
sbb
les
sub
adc
lods
push
add
fyl2x
dec
push
sub
aad
shll
out
or
mov
shl
and
mov
out
int3
test
aaa
add
or
cmc
xchg
adc
testb
mov
jge
je
mov
xchg
mov
mov
mov
push
popa
stos
sub
scas
int3
jnp
add
push
jmp
loopne
jmp
push
mov
xlat
iret
push
addl
jmp
mov
add
adc
fmuls
pop
pop
jns
sbb
add
clc
lret
loope
inc
add
addl
push
and
fstpl
jnp
sarl
inc
sbb
clc
ljmp
shll
pop
es
mov
cmpsl
mov
insl
mov
insb
subl
cltd
dec
pop
leave
add
dec
cmp
aaa
sbb
shlb
dec
lret
inc
lcall
rolb
cmp
and
addb
add
sub
xor
xor
into
lds
jne
adc
xlat
inc
jbe
push
cmp
xor
sub
add
aas
sti
push
test
sbb
js
les
movsl
jbe
loop
mov
pop
cmc
gs
add
fsubrl
addb
sub
jns
test
add
add
inc
add
mov
push
push
and
add
imulb
or
mov
mov
stos
rol
push
pop
jno
jge
add
mov
push
adcl
add
pop
rol
sbb
cmp
mov
mov
dec
test
nop
jle
add
add
inc
add
arpl
and
xor
sub
mov
add
je
aam
xor
inc
adc
sub
mov
sbb
jp
sbb
lahf
xchg
cmp
pop
xor
jae
and
loope
dec
or
xchg
xor
dec
arpl
xchg
sub
xchg
cmp
popa
mov
xchg
cmp
pop
mov
aad
rcrb
mov
jbe
xchg
xor
and
xchg
mov
enter
adc
roll
xchg
sub
sbb
inc
sbb
lds
call
es
repz
dec
mov
add
pushf
or
lcall
repz
inc
add
xor
aas
int
ret
push
or
and
mov
mov
sub
add
int3
js
movsl
sbb
xchg
ret
fdivl
inc
xchg
pop
movsb
pop
mov
push
xlat
call
repnz
adc
roll
testb
sti
addr16
inc
xor
add
gs
fidivrl
cmp
loope
jp
sub
push
add
fimull
pop
popf
das
movsb
mov
inc
add
fiaddl
sbb
cmp
and
dec
pop
and
popf
xchg
mov
or
xchg
cltd
sbb
jmp
jmp
popf
add
imul
bound
adc
int3
pop
leave
inc
loopne
jae
fstpt
inc
jle
ljmp
enter
inc
add
add
fdivrp
ja
les
imul
hlt
ret
test
fldenv
sbb
adc
cld
add
inc
add
add
mov
fldt
ss
add
nop
ja
mov
leave
lahf
int
and
scas
mov
les
je
mov
mov
inc
add
into
clc
popf
decl
sub
add
bound
movsl
jecxz
test
or
adc
xchg
loope
jnp
add
fsub
xchg
cwtl
out
ljmp
pusha
add
cmc
sbb
mov
add
pop
inc
add
jp
repnz
xor
stc
hlt
push
popf
mov
and
xor
loop
add
mov
mov
imul
jb
movsb
sbb
lahf
jo
fiadds
push
out
call
lods
cli
jl
add
add
add
js
xchg
rcrb
mov
les
insb
push
pop
shrb
mov
fdivrl
mov
jle
dec
mov
outsb
xor
dec
hlt
lcall
pop
outsb
sbb
or
xchg
inc
add
sbb
lcall
inc
add
shl
and
or
mov
test
jae
cld
mov
jg
pusha
add
cltd
mov
xor
imull
sti
xchg
xor
push
out
sbb
mov
add
inc
pop
sar
add
inc
add
jmp
dec
movb
cmp
pop
sub
in
in
pop
movsl
and
push
cltd
cmp
mov
sbb
push
mov
cli
mov
or
jg
fiaddl
pusha
add
in
scas
fstps
push
dec
bound
push
je
push
popa
loopne
adc
in
imul
cmp
jns
leave
shll
test
leave
cmp
add
insl
xor
loop
add
movb
sub
or
repz
cwtl
mov
cs
insb
jno
xchg
and
jns
sbbl
add
lock
bound
int3
test
loope
cwtl
aad
rolb
inc
or
mov
and
or
fs
xchg
push
sbb
por
daa
adc
push
mov
std
leave
fistl
push
xchg
popf
cmc
mov
sub
or
test
aam
push
pushf
mov
add
movsb
addb
sub
test
aaa
int
xlat
lods
adcl
dec
mov
test
icebp
pop
insl
sbb
out
inc
add
loopne
adc
pushf
out
push
add
dec
cmp
insb
jecxz
xchg
dec
popf
mov
dec
orl
add
loope
and
fidivrl
in
mov
cmp
dec
pop
push
shrb
xchg
add
xlat
test
cmpsl
jne
bound
cwtl
rorb
test
dec
adc
pop
push
jbe
mov
mov
pop
adc
std
jb
jns
cwtl
jnp
mov
mov
mov
add
push
adc
inc
mov
xchg
pop
shlb
inc
mov
or
add
dec
out
adc
adc
shrl
xchg
adc
add
jbe
and
adc
and
xchg
dec
mov
add
add
pop
mov
push
sub
mov
aaa
cmp
movsb
jmp
ljmp
std
test
inc
rcrb
pop
xchg
lret
xor
outsb
lods
xor
cltd
ret
test
cmp
xor
dec
cmp
jne
mov
mov
sub
sub
mov
mov
pop
mov
cmp
xchg
push
movb
es
addb
mov
lahf
cmc
outsb
xor
in
cld
pop
inc
pushf
cmp
dec
dec
inc
in
nop
lea
fldcw
cmc
or
add
jp
mov
mov
mov
outsl
outsb
into
dec
scas
jns
enter
jbe
jnp
mov
add
outsl
jns
cmp
push
or
add
mov
into
sbb
testl
sbb
int3
dec
testl
and
xchg
cltd
mov
sub
jae
add
mov
arpl
inc
add
fmul
subl
push
outsb
popf
and
xor
xor
push
and
icebp
mov
test
addr16
sub
or
iret
push
in
pop
pop
out
push
daa
daa
aad
add
add
push
jne
lods
in
rcll
sub
not
nop
lret
scas
xchg
lea
and
pushf
jb
fcompl
xor
mov
iret
inc
int
lds
xchg
push
js
pusha
add
dec
cmpsb
push
add
es
imul
dec
aad
add
out
jp
mov
sub
pop
lahf
ror
and
std
adc
xor
cmp
sub
fistpll
fcomp
pop
cmp
or
aad
pusha
add
insb
out
mov
add
rcll
mov
add
xchg
mov
push
ret
hlt
or
lret
xor
std
add
inc
add
jl
dec
push
xchg
and
inc
add
int3
rolb
push
cld
rcrl
xchg
xchg
push
mov
mov
adc
add
xor
pushf
mov
cmp
icebp
dec
jg
out
clc
cs
lods
add
jmp
sub
add
test
push
lea
adc
data16
bound
iret
sbb
pushf
lock
in
loop
mov
test
inc
add
xlat
cld
xchg
dec
lock
ja
xchg
jp
add
push
repz
dec
xchg
movb
cmc
ret
mov
push
je
cmp
in
cmp
adc
in
imul
popa
mov
xchg
mov
add
ficompl
or
movb
push
adc
xchg
cli
pop
or
in
mov
xor
xor
inc
mov
sub
mov
loope
pop
bound
cmp
cmp
push
dec
jae
pusha
add
pop
adc
ljmp
push
out
push
mov
adc
xor
in
rolb
test
nop
std
cmp
idivl
into
mov
arpl
and
rcrb
imul
sbb
mov
mov
add
divl
add
push
sbb
mov
xchg
sbb
ja
push
mov
sbb
pop
jno
int3
int
cld
inc
add
cmc
out
add
add
or
or
add
and
jl
adc
daa
jne
test
icebp
pop
jno
jge
aam
dec
sub
pop
dec
inc
add
cmp
mov
ficompl
ljmp
xor
cmp
je
add
push
aam
add
mov
or
jmp
cwtl
dec
cmp
and
arpl
mov
and
lret
cmp
cmpsb
adc
xor
fdivrs
push
add
div
sti
adc
std
push
add
xor
and
xchg
pop
aad
push
popl
scas
lods
daa
mov
lret
bound
call
adc
mov
xor
sti
out
add
push
jb
push
mov
dec
xchg
cmpsb
aaa
and
push
push
js
mov
test
loopne
jp
std
call
movb
or
or
lret
push
add
mov
mov
jmp
div
mov
jmp
jb
movb
fcmove
fstpt
scas
pop
jnp
mov
fcmove
lret
fwait
je
cld
or
sbb
jl
lods
pop
xchg
pop
gs
inc
sub
bound
mov
aam
ljmp
stos
lds
push
and
and
in
test
or
pop
mov
dec
outsl
loop
ret
insb
xchg
not
mov
enter
dec
lock
or
fwait
enter
jae
std
mov
movsb
sub
repnz
add
mov
xchg
cmp
fldt
or
aaa
enter
aad
sbb
mov
mov
add
xchg
cmc
and
lea
push
push
add
daa
ret
jno
aad
lret
add
lahf
cmpsl
mov
jecxz
pop
movsl
adc
inc
add
fwait
jge
in
sbb
and
push
jno
icebp
jnp
ljmp
add
push
mov
in
out
push
adc
out
or
cmp
int
daa
into
divb
pop
jge
test
outsl
and
push
add
fiaddl
mov
cmpsl
bound
push
rolb
xchg
xchg
stc
pop
mov
sub
enter
inc
add
push
cvtps2pi
ja
add
gs
bound
bound
lcall
sub
mov
mov
xchg
cmp
in
sbb
mov
call
lods
ret
pushf
sbb
inc
add
lret
mov
pop
outsl
ficomps
addr16
push
add
mov
sbb
cmp
sub
pop
adc
out
fadds
xchg
mov
xor
ja
add
or
enter
shl
outsl
xchg
outsl
test
data16
lahf
push
cmp
bound
mov
push
shrb
shr
iret
and
lret
pop
add
lock
add
add
cs
pop
idivb
jmp
jno
add
push
push
cmp
fildll
add
xchg
loopne
rcr
pusha
add
fiadds
add
mov
inc
pop
pop
jge
out
or
jae
push
lret
or
call
jno
les
pop
jg
lods
clc
std
push
movsl
dec
sbb
fisttpl
cmpsb
mov
insl
jno
mov
aas
cs
jae
imul
fmull
rcrb
mov
adc
test
enter
pop
fcmovnb
xchg
out
mov
ret
fldl
cmp
sahf
scas
or
cld
xor
mov
jle
cmc
rolb
int
push
pop
or
or
push
mov
xor
lahf
cmp
pop
nop
and
mov
in
lret
push
jns
add
jne
add
push
jg
out
loopne
mov
add
xor
les
sbb
lock
stc
ds
or
mov
stos
fisubrs
jl
push
mov
lcall
ret
jne
add
dec
sub
push
enter
movb
inc
add
mov
addb
jg
sarb
inc
stos
sbb
jmp
mov
xchg
ffree
add
outsb
test
movl
ljmpw
mov
cltd
test
lret
add
sbb
inc
jae
insb
les
insb
in
jo
dec
xchg
push
push
add
leave
mov
popf
adc
fadds
xor
xchg
inc
xorl
mov
xchg
gs
mov
mov
mov
jns
jbe
sarl
mov
add
adc
sbb
cltd
mov
sbb
ds
mov
mov
in
mov
dec
sti
out
int3
out
bound
jno
lods
mov
ret
mov
xlat
out
mov
int3
push
outsb
or
add
fwait
loop
xchg
add
outsb
mov
lods
jnp
rolb
lahf
sub
dec
sub
aam
add
xlat
cltd
mov
out
xchg
iret
test
or
xor
icebp
movsb
rolb
sub
inc
imul
in
cmpsl
rcrl
jbe
fsubl
or
or
fisubrs
ds
leave
and
repz
add
enter
sar
imul
insb
adc
iret
mov
das
int
dec
adc
divb
adc
addb
movsl
add
mov
sbb
daa
out
loopne
mov
mov
add
sub
ret
leave
sub
or
movsb
jge
cs
addb
dec
dec
lods
test
xchg
lods
mov
xchg
mov
test
loopne
mov
int
xchg
sbb
fs
dec
std
lahf
jecxz
fldenv
and
fisttpll
and
pusha
add
sub
push
xor
int
xchg
rolb
push
add
push
inc
sub
mov
inc
add
add
add
or
clc
movsl
movsl
sbb
movsl
push
sub
adc
scas
inc
add
pop
jno
dec
notl
rolb
sbb
add
mov
ja
push
iret
pop
popa
int
cmpsl
ljmp
jno
or
scas
mov
lret
imul
add
fdivl
sbb
pop
pushf
ja
dec
cli
ret
rolb
add
addb
cmp
pop
pop
mov
pop
stos
in
in
ljmp
mov
popa
or
inc
xchg
mov
add
fistl
ret
mov
sub
stos
jmp
ja
fsub
pop
cmp
cmp
pop
or
sub
fstps
aaa
leave
lahf
nop
movb
test
insb
vmulss
jb
xchg
inc
add
jmp
cmp
repnz
and
stos
ja
iret
mov
or
pop
jmp
out
inc
addb
into
jns
mov
sarl
in
pop
push
push
mov
ja
jne
inc
add
adc
add
std
push
jle
jne
xor
xor
ret
mov
fldt
arpl
in
stos
dec
dec
push
jge
and
out
dec
xor
dec
inc
add
add
adc
cmp
pop
mov
add
sub
aaa
repnz
mov
pop
xchg
mov
pop
adc
jb
loopne
dec
jp
dec
sub
lahf
dec
inc
rorb
jl
fadds
roll
or
xor
sti
in
xchg
and
jp
rolb
outsb
loope
popa
in
aas
popf
xchg
fcoms
fbld
cvtps2pd
or
shlb
push
mov
fimuls
xor
and
sub
jns
and
pushf
rolb
xchg
in
out
push
add
add
mov
cmpsl
jp
cld
dec
sbb
movsl
pop
stos
mov
cmpsw
enter
jmp
pusha
add
int
xor
sbb
scas
mov
pushf
push
ja
adc
jg
xchg
jns
pop
lahf
cwtl
or
xchg
push
add
imul
lods
jl
in
lret
rolb
adc
gs
movsb
cmpl
push
cmp
jo
fcomip
cmp
cli
xor
sbb
add
add
pop
dec
rorb
adc
and
and
mov
lock
pop
movsl
adc
sbb
inc
add
addb
stc
or
movsb
fdivr
cwtl
add
lds
das
movsb
ljmp
or
inc
add
in
mov
cmp
lahf
push
push
stos
and
dec
or
cld
test
movb
or
insb
mov
fs
decb
inc
add
int3
push
ljmp
add
mov
roll
add
aas
or
outsb
pop
bound
pop
lcall
jmp
add
loop
add
mov
aaa
or
fildll
add
pop
in
adc
shrb
jg
mov
push
scas
dec
pop
push
out
addb
dec
push
stos
cmpsb
movsb
mov
jno
es
idivb
rol
add
insb
stos
enter
inc
add
fistpl
cmp
add
lock
shll
and
add
mov
icebp
faddp
std
jno
dec
out
sbb
repnz
jne
shlb
jp
cmp
dec
pop
out
fwait
jne
out
pop
cwtl
out
test
jae
xchg
jae
enter
loop
and
jae
mov
lret
shlb
imul
add
mov
cwtl
repnz
cmp
pop
aam
dec
imul
add
rolb
ret
in
js
cmp
add
negb
push
pop
or
addb
mov
push
fdivp
jb
mov
pusha
add
in
movb
push
push
data16
add
jmp
xchg
add
jbe
mov
add
les
add
daa
pop
sub
add
mov
ret
sbb
and
mov
add
fcom
insb
push
pusha
add
mov
xchg
xor
mov
es
sbb
or
mov
jbe
push
gs
pushl
out
and
ss
inc
add
push
scas
popa
fsubs
loope
idivb
mov
sbb
add
dec
cs
add
call
aas
sar
push
and
rol
add
in
les
movsb
sub
xchg
adc
xchg
add
stos
xchg
addr16
jmp
mov
xchg
mov
jo
ljmp
push
outsl
mov
fstps
cmpsl
fiaddl
mov
fistps
pop
imul
mov
cmp
add
imul
push
add
jno
loopne
negb
pop
repz
call
add
jmp
dec
loopne
dec
cmp
sbb
add
and
addr16
outsb
pop
cld
pop
lcall
loop
xchg
lock
mov
mov
call
movsb
lahf
out
inc
add
enter
dec
jb
dec
pusha
add
lds
dec
and
push
and
adc
shlb
jmp
cwtl
inc
add
dec
push
mov
mov
iret
mov
repnz
insl
fimuls
pop
mov
dec
fs
addb
jns
xchg
out
rolb
add
movsb
add
add
pop
rcl
lcall
mov
or
hlt
popf
dec
or
repnz
out
bound
add
fwait
daa
pop
xchg
into
fnstenv
cld
rolb
add
add
dec
inc
add
stos
loop,pt
addb
inc
nop
aaa
cmpsb
xor
add
and
cld
add
sti
orl
outsl
add
mov
rolb
mov
push
jle
movb
or
inc
and
inc
rolb
out
cmp
and
xor
stos
jb
inc
fs
push
lret
fbstp
scas
test
ja
aad
test
rol
scas
arpl
xor
mov
pop
push
sbb
repz
sbb
add
aaa
push
add
jbe
adc
inc
cwtl
ret
sbb
add
adc
call
in
lahf
addb
add
aam
sbbl
popf
inc
add
add
insb
and
add
popa
add
loopne
xchg
xor
fisttpl
jns
adc
ljmp
cmp
addb
mov
lcall
imull
cltd
push
mov
mov
jecxz
outsb
int
mov
stos
pop
iret
fcompl
mov
popf
push
mov
add
fistpl
popa
add
xchg
and
xchg
push
ret
test
pop
ljmp
fs
fs
hlt
sub
adc
out
testb
out
pop
iret
sahf
fsubl
add
or
adc
mov
jbe
clc
jo
xchg
fisttpll
xor
cltd
pop
aam
add
add
add
aas
mov
or
or
or
lds
and
adc
sarb
es
mov
ret
jbe
xchg
pop
sub
mov
adc
in
sub
jecxz
sti
test
sti
fdivrl
adc
jbe
add
call
mov
negb
je
das
les
mov
fyl2x
sub
ja
and
pop
outsl
cmp
add
sti
fwait
and
test
fisttpl
xor
insb
inc
dec
lods
imul
mov
cmp
add
hlt
jg
cli
sub
xor
pop
mov
mov
adc
hlt
pop
imul
daa
ret
jno
insb
ficompl
xlat
or
cmp
ljmpw
testl
shrl
cmp
lods
xchg
pop
xor
mov
dec
mov
stos
loope
stos
sub
fiaddl
jb
stos
mov
daa
jnp
pop
mov
test
inc
add
ds
mov
xchg
das
repz
add
pusha
add
add
nop
lret
fdivs
add
and
mov
sbb
test
notb
jae
cmpl
push
push
lcall
cmpsl
xor
pusha
add
scas
sub
ljmp
mov
and
mov
xlat
cmp
and
test
mov
icebp
adc
and
stc
add
popf
dec
addr16
push
dec
nop
push
jno
movsl
mov
mov
push
push
inc
call
ret
fwait
push
pmuludq
lea
scas
adc
add
dec
and
xor
mov
add
and
fs
sub
xchg
cmp
addr16
mov
mov
add
dec
pushl
dec
mov
loop
push
mov
jmp
add
int
ljmp
xchg
sub
lret
and
arpl
les
mov
pop
cs
popa
imul
push
xor
adc
jmp
sub
cmp
add
sahf
inc
add
mov
add
adc
add
shlb
cmpsb
in
add
jb
add
jno
pusha
add
imul
mov
ds
imul
test
cs
roll
sti
mov
mov
adc
adc
dec
lret
mov
push
js
icebp
jg
rolb
push
les
push
jo
pusha
add
sub
sub
arpl
pop
repnz
divb
sbb
add
add
adc
sub
xor
jae
je
enter
ss
dec
mov
repnz
jns
pusha
add
dec
jne
jge
pop
fimuls
push
fneni(8087
iret
push
daa
cwtl
gs
pop
jecxz
in
insb
lahf
adc
outsb
repnz
add
repz
clc
cmp
add
test
test
add
add
add
into
movsb
addb
sbbl
xor
aas
xchg
push
xchg
iret
sub
ror
andl
jb,pt
popa
loope
jnp
mov
sbb
enter
add
adc
xor
push
jmp
std
mov
or
add
lret
clc
das
and
lret
add
add
cmp
outsl
lods
shl
hlt
inc
add
lods
mov
mov
sbb
neg
pop
into
sbb
loopne
stc
cmp
in
insb
pop
fildll
push
xchg
pop
stc
push
add
or
ss
data16
xchg
movsb
cmp
or
pop
mov
mov
push
jmp
xor
mov
fisubs
mov
movb
imul
outsl
jl
es
out
stc
adc
adc
enter
adc
dec
scas
xorl
jns
mov
mov
hlt
roll
sbb
lds
add
mov
add
aad
out
pop
movsb
iret
cmp
add
iret
and
jecxz
sahf
dec
xchg
add
pop
movsl
pop
adc
cmp
sahf
fstps
add
sub
xlat
ss
aam
shrl
mov
add
hlt
lods
pop
scas
mov
addb
scas
fnstsw
dec
and
imul
push
aad
icebp
std
mov
mov
xchg
jnp
clc
jmp
cwtl
pushf
xchg
add
leave
rcr
xchg
lods
push
insb
and
add
add
adc
add
adc
add
pop
mov
push
jecxz
push
lea
insl
fistpl
hlt
sub
xlat
mov
sbb
pushf
push
xor
push
push
pop
mov
fwait
and
pop
lods
pop
in
shrl
js
or
dec
sbb
call
push
add
sub
push
cmp
gs
loope
pushl
sbb
movsl
jle
les
notl
add
sarl
cmpsl
or
fldln2
fldz
push
mov
pop
xor
lret
sarl
or
loop
cmp
mov
add
add
idiv
jae
mov
add
testb
inc
add
xor
jbe
gs
roll
xchg
sahf
mov
add
lea
inc
add
sbb
and
test
bnd
add
outsb
inc
sbb
cld
mov
sub
fs
cmp
add
movsl
aam
mov
xor
in
aad
push
add
add
dec
jmp
jo
add
mov
push
pop
enter
jno
add
or
add
fsubrl
cmpsb
arpl
adc
shlb
dec
mov
sbb
push
lret
es
mov
xchg
hlt
sbb
mov
xchg
push
stc
pushl
add
xlat
js
pusha
add
add
ds
xorl
push
push
scas
inc
insb
xchg
clc
aaa
sub
ret
lahf
and
and
cld
and
cld
mov
arpl
add
xchg
daa
add
in
outsb
push
std
add
sbb
mov
loopne
cvtpi2ps
lea
js
divl
rclb
mov
ds
push
mov
lds
imul
test
adc
bound
mov
mov
fnstcw
pop
xor
fs
fdiv
xor
ss
xchg
int3
xor
xor
je
mov
sbb
cmpsl
xlat
inc
add
add
cmp
fisubrs
mov
fsubr
popa
mov
lds
divl
xchg
mov
push
sti
mov
inc
add
pop
loopne
cli
fnsave
push
jne
mov
cltd
push
add
subl
inc
add
imul
jo
mov
xchg
mov
add
lock
test
or
shl
adcl
mov
imulb
add
push
gs
ss
pop
dec
mov
lods
inc
sbb
add
clc
xchg
cmp
andl
inc
add
add
jp
fldl
mov
and
xchg
add
rcll
test
cmp
pop
rol
add
in
mov
inc
aad
pop
outsb
pop
nop
sub
loope
or
stos
cmpl
mov
ja
mov
inc
add
mov
pop
jbe
sahf
loope
xchg
int
cld
jb
aad
cli
inc
add
lds
and
jmp
pop
dec
xchg
xchg
jo
lcall
or
je
addb
pop
pop
xchg
or
add
push
mov
leave
add
rolb
repnz
pop
cltd
fwait
addb
les
jp
add
add
into
xchg
aam
jp
popf
stc
sahf
or
cli
pop
dec
or
aam
notb
jno
les
push
xchg
mov
stos
mov
and
jl
xchg
pop
repz
jne
cmpsb
cwtl
pop
pop
push
fwait
loopne
adc
add
xor
daa
gs
and
or
out
cmp
fs
xchg
outsb
inc
jmp
ret
mov
xchg
mov
cmp
mov
je
or
fmull
popa
xor
fsub
mov
jbe
inc
aad
add
into
out
sbb
or
ret
or
addb
xlat
loop
push
mov
jae
dec
fs
mov
aaa
inc
add
add
mov
add
outsl
sarl
jp
lods
mov
outsl
cmpsl
out
les
ljmp
mov
data16
pop
push
movsb
rcrb
push
les
pusha
add
bound
enter
movsb
daa
pop
inc
add
lahf
in
inc
add
lock
jb
nop
or
adc
and
ljmp
xor
mov
mov
add
inc
add
add
sub
dec
aam
cmp
inc
add
add
dec
cld
or
into
js
and
ss
xchg
pop
fwait
dec
jl
hlt
jno
jbe
dec
push
adc
cmp
mov
mov
call
push
arpl
add
and
int3
pop
lods
fstps
add
xchg
sub
push
pop
cmpsb
sub
cwtl
lods
lock
cmpsl
test
out
mov
stos
js
mov
and
xor
xchg
daa
sub
mov
fidivrl
pop
fbld
add
add
jbe
dec
ljmp
mov
cli
mov
out
mov
jp
fwait
clc
fisubrs
fsubrs
mov
add
addb
dec
jl
add
pop
push
stos
lret
lods
mov
in
mov
rolb
mov
popf
cmp
inc
add
sbb
repnz
add
push
dec
addb
loopne
add
fnstenv
xchg
mov
dec
pop
sub
xchg
jge
xor
fiaddl
arpl
mov
cld
imul
push
cmp
jo
sarl
lret
mov
ds
sbb
mov
loop
or
fbstp
iret
dec
test
mov
xchg
leave
adc
and
pop
mov
lcall
mov
xchg
enter
add
out
lahf
rcrl
mov
out
icebp
aad
pop
bound
test
dec
pusha
add
aad
jmp
bound
loopne
sbb
fwait
lds
jns
xor
jl
addb
add
xchg
xchg
push
addl
repz
mov
add
test
xor
pop
es
adc
out
xor
shr
sub
adc
movsl
mov
xchg
xor
cmp
add
and
or
add
mov
cmp
adc
jns
sub
fists
mov
add
icebp
xlat
push
cltd
enter
das
add
aaa
xor
inc
and
outsl
jge
cmp
inc
loopne
dec
hlt
daa
fadds
mov
inc
add
adc
add
xchg
stc
les
dec
lods
xor
outsl
jbe
addb
in
in
scas
fadd
add
add
std
mov
push
movb
addb
inc
data16
lcall
and
cmpsb
jae
add
fcmovne
fcmovnb
add
stc
pop
enter
inc
add
cli
and
arpl
jb
push
mov
mov
cmc
pop
es
test
push
arpl
xchg
jb
jecxz
call
add
add
in
outsl
mov
shll
jb
pushf
xor
fists
and
mov
mov
xorl
xchg
xchg
xor
add
inc
dec
sbb
into
or
arpl
push
idivl
add
cmp
inc
or
inc
add
xacquire
shrb
out
pop
add
mov
cmp
or
push
mov
call
mov
push
push
in
jne
testl
imul
lahf
jmp
decb
imul
add
and
add
adcl
orl
add
scas
dec
jb
arpl
or
rcll
ret
bound
les
pop
push
push
test
ja
mov
rcrl
dec
div
dec
enter
add
out
dec
imul
jb
and
mov
fcoml
out
cmpsb
cld
push
ds
adc
mov
push
inc
xchg
into
add
in
out
and
outsl
xchg
fisttpl
adcl
imul
cwtl
mov
push
outsb
jb
push
pop
dec
or
outsb
nop
dec
pushf
push
enter
loop
sbb
jnp
aas
bound
jp
add
add
sbb
xchg
out
xor
pop
push
jle
sahf
in
mov
sbb
mov
xor
in
fsubr
icebp
scas
cmp
inc
lods
xor
int3
jae
dec
stc
inc
add
mov
dec
arpl
mov
mov
mov
sbb
sub
add
sub
xor
sahf
cmp
lds
or
add
test
add
jcxz
add
or
jnp
fisubrs
mov
add
pop
cmp
push
add
popa
jp
sub
lea
aaa
add
inc
add
icebp
cmp
daa
adc
clc
in
sub
fdivrs
jecxz
repnz
jno
pop
and
jae
sub
imul
jl
mov
mov
sbb
mov
inc
add
add
xor
sub
sub
paddusw
mov
xor
ja
les
pop
rcrl
inc
xchg
test
push
in
arpl
in
mov
pop
ss
aam
jl
push
jae
int
outsl
and
mov
add
xchg
ljmp
inc
rolb
or
insl
dec
int3
add
inc
xlat
icebp
mov
add
mov
ret
mov
push
mov
and
and
ja
das
out
scas
je
int
jg
or
outsb
pop
ljmp
rorb
lea
icebp
out
xchg
hlt
lahf
pop
pop
add
xlat
mov
rolb
and
and
sub
loopne
addb
lcallw
inc
addb
nop
adc
adc
in
sbb
xor
lods
in
mov
jge
push
lods
sub
add
aad
xor
xchg
push
xor
addr16
int3
and
sbb
add
push
addb
data16
mov
pop
shrb
mov
fldz
xor
mov
cld
stos
fstpt
js
xor
jg
pop
jo
fsubrs
aas
enter
xchg
movsb
bound
into
insl
add
jmp
ret
add
add
or
test
pushf
cmp
xlat
jo
jne
xor
cmc
sub
cmc
mov
lock
sti
sub
loopne
repz
add
mov
mov
cltd
mov
pop
mov
inc
add
in
add
nop
inc
add
cmp
and
mov
stos
ret
dec
mov
imull
add
pop
sub
shll
inc
add
add
call
inc
add
cmp
pushl
aam
cmp
mov
andl
push
ss
or
jle
xchg
lea
dec
sub
js
sbb
enter
pop
mov
stc
ss
inc
dec
scas
dec
in
lock
lcall
jmp
push
add
test
xor
mov
out
adc
jg
bnd
mov
scas
sbb
inc
adcl
aad
cs
scas
fbstp
pop
out
sti
lods
out
out
movsb
arpl
add
jae
in
cmp
and
iret
xchg
xchg
jl
cmp
mov
addr16
jns
mov
in
addl
mov
fnstsw
ficoml
sbb
fisttpl
imul
test
xor
ds
add
pop
out
test
add
das
inc
add
lahf
push
mov
xchg
aas
sub
add
xor
stos
push
mov
outsl
leave
mov
mov
call
fldt
lret
mov
or
lea
js
jge,pn
sbb
jae
sub
imul
in
mov
lods
cmp
sub
add
and
jp
sbb
hlt
and
xor
push
jbe
add
pop
adc
fsubl
mov
addb
pusha
add
or
fsts
mov
adc
or
mov
enter
pusha
add
add
jbe
sub
jge
subl
mov
sbb
cmc
or
add
add
mov
inc
jp
imul
movsl
rolb
add
cwtl
daa
push
mov
lret
lret
and
bound
in
push
sldt
je
sbb
dec
or
aad
arpl
xchg
mov
in
mov
adc
sti
sbb
popf
push
jns
outsb
pop
cld
add
pusha
add
xchg
scas
pop
mov
add
leave
hlt
lret
or
sahf
or
addb
pop
jecxz
add
jp
sub
jbe
lods
imul
add
movb
into
pusha
add
sbb
sub
lret
test
jb
push
sub
jno
inc
aaa
dec
dec
mov
rolb
add
icebp
mov
gs
lds
sahf
pop
mov
test
out
int
mov
push
fwait
imul
lret
add
in
xchg
flds
add
add
mov
mov
mov
pop
xchg
xchg
dec
addb
pop
jge
test
add
add
les
mov
test
or
push
xchg
inc
add
shr
push
sub
bound
mov
inc
add
iret
push
js
mov
leave
popa
mov
add
jbe
sub
mov
fsubs
push
xlat
ljmp
add
out
xor
in
xor
stos
adc
rcrb
mov
and
adc
in
addb
pop
xor
es
ja
sbb
inc
add
es
sub
jne
fldt
lock
add
mov
inc
add
push
sbb
mov
add
mov
fwait
enter
rolb
enter
adc
fildll
add
jecxz
xor
or
mov
frstor
aad
adc
dec
push
add
mov
add
sub
or
sub
loopne
fstpt
bnd
add
dec
push
insb
daa
mov
jb
sbb
inc
lret
xchg
je
inc
add
adc
fmull
std
dec
dec
jo
repnz
mov
mov
dec
nop
shll
xor
push
sub
xor
int
pop
xor
out
ds
cli
pop
icebp
rolb
pop
xchg
mov
add
xor
add
add
adc
add
xchg
out
sub
mov
add
mov
stc
push
stc
mov
sub
add
or
dec
xchg
popa
dec
xor
push
outsb
dec
cli
sub
shll
stos
rcrl
pusha
add
inc
add
adc
loope
scas
lods
sbb
xor
add
ss
add
imul
xchg
jge
pop
xor
sbb
mov
push
std
movsl
in
lret
add
xlat
inc
loop
lcall
cmp
pop
adc
jge
jbe
outsl
mov
dec
mov
add
mov
pop
add
add
cmpsb
pop
mov
add
xchg
int
rcll
fwait
and
inc
add
or
cld
inc
pusha
add
inc
and
push
sub
lcall
and
popa
cmp
xchg
mov
outsb
int
inc
add
das
addb
xor
dec
test
ja
sbb
push
je
fldenv
cmp
jg
cmc
idivl
pusha
add
dec
fldcw
mov
ja
pop
cmpl
repnz
inc
pop
dec
popa
pop
std
mov
xchg
sbb
ljmp
cmp
rorb
cmpsl
in
push
adc
pop
call
sbb
pop
sub
sub
pop
cmp
test
into
int
add
jmp
shrl
push
js
sbb
dec
cmp
aas
dec
cmp
sbb
jmp
inc
pop
dec
mov
jae
js
mov
je
inc
in
inc
mov
addb
add
icebp
or
mov
xchg
arpl
pop
paddusw
sub
add
setg
out
inc
push
fdivrl
dec
cs
jbe
addb
or
inc
add
xchg
xchg
jae
mov
loop
add
je
or
pop
clc
mov
add
cmp
push
in
add
push
adc
inc
add
add
mov
aaa
push
daa
testb
jno
clc
jle
mov
iret
aaa
inc
adc
in
add
and
stos
das
jmp
popa
rcr
mov
push
cwtl
sti
mov
mov
sub
xor
fs
mov
sub
scas
test
xchg
pop
sub
sbb
add
push
add
adc
mov
mov
cmc
popa
insb
mov
mov
push
xor
add
dec
mov
out
rorb
add
pusha
add
xchg
int3
push
jo
gs
insl
mov
mul
pop
aas
mov
push
jp
push
dec
and
add
out
test
push
addr16
jb
rcrl
into
test
inc
imul
mov
add
stos
cltd
sub
fisttps
pop
mov
push
or
push
repnz
insl
in
aam
dec
jno
lret
in
dec
aad
add
icebp
push
lahf
out
ja
cmp
gs
add
add
aad
add
fists
sub
inc
pop
incb
and
fstl
sbb
cld
xor
push
push
add
jae
in
cwtl
cmpsl
loope
mov
jp
add
adc
mov
mov
mov
xchg
add
push
fidivrl
xor
sti
enter
insb
jne
fs
adc
dec
aas
ss
add
xor
cmp
data16
cmpsl
dec
sub
pop
jne
test
push
mov
ret
inc
add
mov
sti
jge
inc
mov
addb
aad
pop
jb
and
inc
add
ds
es
add
popa
xchg
add
mov
xor
add
adc
aaa
xchg
xchg
outsl
sar
sbb
add
dec
jo
loop
xor
and
adc
jns
sbb
add
shlb
and
dec
fwait
dec
xchg
push
popf
cmp
addb
add
jg
pop
jle
outsl
lmsw
movsb
adc
mov
add
cmp
add
aaa
movsl
sub
xorl
add
mov
add
add
add
inc
adc
pop
addb
ror
ss
repz
add
and
outsl
movsb
mov
mov
mov
sub
dec
inc
push
enter
push
cmp
adc
je
fcmovnb
add
cmc
dec
mov
jp
stos
cmp
sbb
or
shrb
jmp
icebp
cmpsl
jg
add
andl
clc
lret
mov
dec
xchg
sbb
idivb
scas
mov
lret
mov
push
bound
loope
cmp
add
or
loop
sub
add
int3
mov
sub
push
add
flds
insl
bound
neg
loop
addb
and
xor
aas
or
cmc
xchg
lods
imul
or
nop
dec
mov
ja
flds
pop
hlt
inc
lods
jecxz
pop
and
jl
lret
xchg
inc
add
xor
pop
pop
mov
xchg
movsb
xchg
mov
ljmp
mov
mov
mov
add
and
mov
sbb
outsl
inc
add
jb
sub
je
scas
outsb
pushl
sbb
in
mov
fmuls
addb
add
mov
adc
fnstsw
sub
mov
add
fs
lahf
cwtl
fstl
jns
repnz
push
sub
test
mov
nop
push
add
test
fldl
les
sub
pop
xchg
sahf
add
fstl
mov
push
or
cld
push
std
push
scas
sub
mov
and
ret
mov
and
pop
add
aam
sbb
lret
repnz
push
xchg
dec
jnp
test
mov
cmp
fiaddl
mov
mov
fidivrl
leave
mov
outsb
ss
fsubl
mov
add
pop
fldl
xchg
mov
movb
add
sub
leave
adc
adc
pop
dec
or
and
cltd
dec
mov
add
cmp
xor
add
es
mov
cwtl
dec
fwait
sti
add
call
bound
mov
pop
insb
ljmp
addb
repnz
push
in
pop
nop
xchg
stos
inc
add
lods
push
popf
xlat
jno
pop
jne
es
dec
in
inc
imul
fdivs
mov
cmpsl
sub
bound
add
xchg
fcmovbe
add
sub
add
add
adc
jae
jecxz
mov
add
jne
sub
outsb
inc
jne
out
outsl
mov
add
lahf
xchg
add
in
out
loop
outsl
stos
repnz
mov
and
dec
loop
jbe
cmp
lret
dec
stos
icebp
ljmp
dec
mov
dec
adc
xchg
iret
pop
jle
je
cmpsl
scas
or
xlat
fwait
mov
sbb
jb
data16
xchg
push
or
xchg
jns
or
pop
mov
pop
mov
or
xchg
jo
imul
jmp
arpl
shrl
cli
sub
gs
test
lcall
dec
add
subl
mov
mov
pop
mov
add
dec
popa
lret
add
add
rep
hlt
mov
pop
fistpl
addb
pop
jbe
xchg
int
mov
push
pop
movb
add
arpl
mov
jne
add
scas
adc
ret
add
add
inc
add
cmp
les
mov
insl
out
push
add
add
and
adc
mov
arpl
xchg
xchg
je
push
gs
roll
in
add
xchg
and
arpl
cli
fsubl
add
sti
and
adc
cmp
mov
push
mov
xchg
mov
add
insl
adc
data16
push
ret
xchg
adc
stos
dec
daa
dec
jb
aas
js
pop
add
mov
sub
mov
dec
aas
pop
les
add
rclb
test
inc
xchg
or
sbb
push
cmc
mov
in
sbb
adc
push
insl
test
cmp
xchg
insl
xchg
movsl
enter
jmp
cmpsb
xchg
testl
aam
in
push
xchg
dec
gs
pusha
add
push
mov
shll
test
add
mov
cmp
and
lret
mov
or
mov
test
dec
aam
sarb
or
movsl
test
mov
imul
add
popa
and
addb
adc
mov
aam
filds
mov
dec
mov
jg
inc
add
xchg
adcl
outsl
sbb
lods
pop
mov
xor
push
fldl
pop
fists
push
add
xchg
rcrl
es
fldt
rolb
jno
mov
mov
mov
adc
add
push
js
mov
loopne
jb
scas
jb
bound
or
jno
aas
add
xor
mov
int3
insb
fidivs
or
loop
aas
mov
cmc
aam
add
pop
adc
mov
jb
xchg
jne
sbb
rcrl
loop
insl
and
inc
jge
jge
cli
sbb
jb
or
ret
rcrl
lock
jbe
pushf
push
je
pop
es
loop
add
sub
imul
add
add
sub
lahf
daa
std
push
add
call
mov
in
rolb
sub
jnp
hlt
ds
add
add
cwtl
fdiv
cmp
fidivrl
jnp
lds
cmp
mov
into
xchg
inc
inc
mov
movb
add
jnp
push
sbb
and
frndint
popa
testb
push
in
sbb
mov
inc
mov
pop
add
mov
sbb
sub
add
pop
rolb
movsb
pop
jae
mov
loopne
lds
stos
aam
cs
lea
dec
mov
hlt
data16
insb
call
dec
or
jno
dec
rcr
adc
lods
lock
dec
xor
mov
inc
add
mov
push
add
add
xchg
and
pop
scas
pop
inc
into
push
or
sbb
xchg
int3
xor
mov
gs
aaa
lock
in
popa
push
mov
rcr
cmpsb
xor
cmp
xor
cltd
sub
add
xchg
scas
sub
mov
leave
xor
cmp
jmp
or
scas
jnp
pop
push
mov
mov
xchg
mov
sub
idivl
fnstsw
rcrb
or
jle
addr16
fmul
shrl
iret
xor
mov
mov
ficoms
adc
lods
cmp
add
data16
xchg
ret
test
inc
add
and
jb
in
stos
mov
jo
fiaddl
add
popa
lods
push
rolb
inc
pushf
cmpsl
testb
xchg
ds
or
sbb
sahf
in
jmp
push
jle
adc
ljmp
add
push
inc
add
pop
sbbl
xchg
jae
test
and
int
pushw
pop
mov
insl
sbb
arpl
adc
andl
js
mov
add
andl
and
push
push
pop
movsb
ret
jge
fiaddl
es
pop
mov
ret
or
sbb
add
mov
mov
cmpsb
fs
jno
sbb
js
les
push
in
dec
push
mov
cmc
mov
sti
ficomps
adc
push
aad
mov
insl
mov
and
cmp
sub
dec
inc
add
add
adc
and
xchg
jns
sub
insl
mov
out
add
cmp
sbb
xor
lret
lahf
push
or
add
icebp
or
sarb
jb
std
mov
bound
sti
arpl
in
sar
imull
sbb
add
push
repz
imul
int
jp
inc
stc
popf
pop
scas
xchg
mov
divb
mov
and
sub
sub
lods
icebp
inc
pop
add
into
sub
sub
mov
jl
fsubl
cmpsl
fsubrl
out
cmovno
add
jbe
mov
mov
dec
add
xor
adc
dec
int3
xlat
das
mov
adc
add
call
dec
in
movb
mov
add
add
cmp
or
enter
jb
cmp
sub
stos
mov
fcompl
les
dec
pop
fcomps
push
das
test
add
out
fwait
into
arpl
test
test
rcll
flds
add
and
sbbl
ss
jne,pt
hlt
jo
fstpt
fdivrp
cld
in
es
mov
xor
mov
sub
jp
les
stc
ja
fucom
xchg
daa
jne
clc
dec
out
jmp
push
jp
sbb
call
enter
int3
aad
xchg
fcompl
fs
xchg
mov
in
cld
cmp
cli
xlat
mov
inc
addb
sti
mov
cmp
ss
outsb
out
ja
pop
adc
pop
mov
sbb
movq
add
cmp
or
faddp
add
sbb
rolb
pop
rorl
inc
add
fstpt
cld
outsl
pop
mov
popf
push
insl
jle
push
jbe
sbb
movsl
inc
add
mov
xchg
mov
cmp
mov
repz
adc
inc
dec
dec
es
add
jge
mov
hlt
xor
push
sub
jp
add
mov
add
orl
test
imul
add
add
iret
or
xor
sahf
pop
push
and
lret
addb
jge
pop
mov
mov
inc
push
jecxz
xor
aad
inc
add
test
sub
cltd
lret
pop
fnstenv
or
add
dec
in
enter
push
fs
inc
xor
dec
fs
add
push
cmpsb
loopne
pop
mov
divb
push
add
mov
mov
lret
pop
inc
add
jmp
add
cli
in
test
sub
shl
fimuls
add
add
ja
test
scas
loop
jae
shlb
dec
into
leave
std
mov
ds
lds
fcomi
divl
add
rolb
enter
push
sbb
lods
loopne
inc
add
sbb
jle
in
js
inc
or
dec
sub
mov
sahf
imul
outsl
push
daa
pop
loopne
add
xchg
dec
xor
aas
adc
mov
jb
pop
push
push
jno
mov
add
add
lods
or
dec
and
aaa
xor
cmc
sub
fs
ds
push
push
xchg
sahf
test
aaa
notb
pop
mov
jecxz
pop
stos
les
dec
imul
sti
sahf
cmp
add
idivb
sub
or
pop
sahf
fistpl
icebp
lcall
jge
lock
cvtdq2ps
inc
add
out
aad
int3
enter
jno
arpl
and
or
lahf
int3
jg
out
imul
xchg
and
mov
stos
inc
add
and
cmp
popa
mov
test
mov
xlat
rolb
rcll
mov
xor
test
jb
mov
cltd
lods
testl
mov
add
lret
ljmp
adc
inc
add
add
aam
pushl
xchg
mov
addb
add
mov
cmp
inc
add
pop
mov
pop
add
xchg
fcomip
add
add
sbb
dec
ljmp
sbb
shrb
cltd
cltd
in
sbb
rolb
xor
fdivp
imul
jge
cmp
nop
pop
pop
and
and
mov
jb
loope
add
and
push
adc
pop
and
jg
cli
and
xor
sti
stc
add
enter
xchg
imulb
shrb
ja
imul
lods
cmc
cmp
inc
add
pop
outsl
mov
dec
in
ficoml
add
cltd
cmp
leave
inc
add
daa
lds
sti
xor
sub
add
popa
fldenv
adc
aas
add
add
push
and
jmp
movb
cmpsl
add
mull
xlat
inc
add
mov
out
fldl
fsubrs
pop
cli
mov
data16
push
idiv
pusha
add
aad
mov
inc
add
pop
jg
push
ret
movsb
adc
sub
aaa
push
stos
pop
pop
cmc
les
pop
movsl
push
inc
add
pusha
add
add
adc
fcmovnb
add
f2xm1
adc
pop
push
add
js
adc
or
pop
cmp
pop
idivl
pusha
add
inc
insl
bnd
or
leave
int
imulb
je
sbb
test
add
stc
outsb
sbb
pop
xchg
int3
hlt
pop
out
mov
pop
jecxz
lea
add
sahf
add
adc
js
out
xchg
rcl
or
fs
mull
lds
adc
add
stc
jb
jge
add
add
stc
jb
add
pop
in
or
inc
push
mov
xchg
ret
bound
jge
mov
mov
xchg
ret
add
insb
mov
stc
jb
add
push
repz
xor
popa
add
jmp
add
add
add
xor
leave
push
stc
jb
adc
add
ds
stc
jb
inc
xor
add
mov
xlat
sbb
add
jb
add
add
mov
xchg
ret
in
add
add
jmp
jg
add
add
xchg
add
add
bound
ficompl
mov
xchg
ret
add
out
das
dec
mov
nop
jmp
add
jge
push
push
mov
xchg
ret
add
add
in
repnz
call
stc
jb
add
lock
call
adc
add
cmp
cmp
add
pop
jl
popa
add
mov
xchg
ret
add
mov
xchg
ret
das
add
add
sub
stc
jb
add
jge
dec
push
push
mov
xchg
ret
and
push
or
test
adc
adcb
add
das
cmp
sbb
add
das
add
jge
pop
xor
push
mov
xchg
ret
add
imul
add
jge
jg
and
std
xor
push
mov
xchg
ret
add
js
and
inc
add
xchg
dec
and
nop
jmp
insb
das
add
add
jge
add
xor
jb
jb
add
add
add
add
stc
jb
add
xor
jb
lcall
inc
cld
pop
stc
jb
add
xor
sbb
jbe
nop
jmp
add
or
test
dec
pop
stc
jb
add
stos
out
add
add
out
enter
adcb
stos
add
add
out
mov
add
pop
nop
jmp
add
add
jg
in
add
dec
pop
stc
jb
sub
sbb
aam
add
add
or
fadds
xchg
ret
cmp
add
in
add
push
mov
xchg
ret
adc
lret
push
mov
xchg
ret
jge
add
push
sub
loop
inc
add
add
ja
shl
enter
jb
cmp
pop
mov
stc
jb
aam
mov
sbb
add
add
add
add
and
add
jb
or
jne
nop
jmp
add
imul
push
stc
jb
xchg
in
add
ljmp
add
add
add
les
jb
push
loopne
out
in
cmp
nop
jmp
sub
or
push
mov
xchg
ret
imul
mov
stc
jb
add
add
jae
es
sbbb
add
jmp
add
add
sti
nop
jmp
adc
and
jmp
data16
xor
mov
push
mov
xchg
ret
add
cmp
repz
add
add
add
jns
stc
jb
add
jge
mov
add
stc
jb
out
add
sahf
je
stc
jb
loop
add
nop
jmp
add
add
xchg
lret
mov
stc
jb
add
add
add
pop
icebp
inc
add
push
or
add
stc
jb
jge
add
pop
add
push
mov
xchg
ret
add
add
stos
stc
jb
add
add
add
popl
stc
jb
xor
out
add
stc
jb
sub
add
loop
dec
ret
push
mov
xchg
ret
add
add
add
sub
inc
add
push
mov
stc
jb
add
jmp
lret
push
mov
xchg
ret
pop
add
addl
stc
jb
pop
add
add
mov
stc
jb
add
call
jb
aam
stc
add
add
movzwl
stc
jb
add
adc
out
add
stc
jb
pop
add
add
jmp
pop
adc
pop
stc
inc
add
add
ja
aas
push
stc
jb
sbb
out
test
out
add
add
add
add
fldl
clc
nop
jmp
mov
aam
add
jge
loopne
add
mov
stc
jb
loop
fstl
jmp
add
add
add
jmp
mov
xchg
ret
cmp
je
stc
jb
add
inc
stos
pop
stc
jb
xor
add
out
add
stc
jb
add
or
mov
xchg
ret
loopne
cmp
rep
stc
jb
mov
je
das
mov
stc
jb
add
xor
cld
je
stc
jb
xor
and
stc
jb
xchg
sub
and
js
mov
xchg
ret
out
push
xchg
add
dec
jne
stc
jb
loop
stos
pop
mov
stc
jb
add
add
enter
xchg
inc
add
add
jge
pop
pop
nop
jmp
add
add
adc
sbb
mov
add
adc
jb
add
add
icebp
nop
jmp
add
add
jmp
inc
add
sub
add
roll
add
mov
inc
jb
stc
jb
pop
add
mov
arpl
jb
add
imul
jb
je
jg
rcrb
pusha
stc
jb
add
aam
add
add
push
mov
xchg
ret
js
jl
subl
ljmp
shrl
or
add
adc
imul
cmp
nop
jmp
jmp
aam
push
jecxz
add
add
stc
jb
add
and
stc
jb
add
add
push
mov
xchg
ret
push
add
adcb
cmp
cmp
mov
xchg
ret
add
popa
stc
jb
add
fnstcw
jge
cmp
xor
stc
jb
add
add
mov
jg
incl
add
add
insb
mov
stc
jb
out
adc
xor
cmp
jmp
add
mov
add
addl
sbb
add
aad
add
fsubr
adc
add
jb
adc
add
fsts
test
inc
add
add
add
cwtl
lea
push
mov
xchg
ret
add
pcmpgtb
inc
call
add
add
add
push
add
stc
jb
ljmp
jb
fnstcw
test
mov
sar
andb
incl
add
loop
add
sub
pop
cmp
mov
xchg
ret
add
jg
sti
mov
nop
jmp
add
imul
mov
xchg
ret
add
stos
add
leave
and
push
mov
xchg
ret
add
cmp
sbb
add
jb
add
jae
inc
add
jmp
mov
stc
jb
add
loop
add
add
push
mov
xchg
ret
stos
jmp
ss
fwait
ret
stc
jb
or
out
add
iret
jne
stc
jb
jge
add
cmp
pop
adc
inc
cmp
ret
jmp
pop
inc
das
xor
add
jb
add
add
je
jmp
nop
jmp
add
add
push
mov
xchg
ret
stc
xor
add
movmskps
jb
add
sbb
imul
stc
jb
xchg
pop
add
add
decb
sbbb
mov
add
fwait
cmpw
nop
jmp
add
inc
ljmp
add
fidivrl
stc
jb
add
add
movsb
aam
testl
nop
jmp
add
add
push
add
call
stc
jb
add
pop
cmpsl
cmpsl
loope
mov
stc
jb
mov
push
add
push
mov
xchg
ret
add
push
in
push
stc
jb
add
add
add
popa
add
jmp
add
pop
ret
xor
int
je
add
stc
jb
pop
add
push
add
nop
jmp
mov
add
mov
xor
push
mov
xchg
ret
mov
push
mov
xchg
ret
jge
add
stos
std
pop
push
mov
xchg
ret
loopne
ret
add
add
add
add
add
push
stc
jb
loop
ret
lcall
or
pop
adc
add
add
loopne
bound
enter
jmp
add
add
jne
add
mov
pop
stc
jb
jge
add
je
push
push
mov
xchg
ret
roll
add
and
jmp
add
out
add
add
add
push
mov
xchg
ret
add
add
push
add
loopne
add
mov
adc
jb
jg
cmp
stc
shr
stc
jb
xor
add
mov
orb
imul
lret
loopne
mov
xchg
ret
add
pop
pop
push
mov
xchg
ret
lcall
andb
add
cmp
add
nop
jmp
push
xor
mov
jbe
stc
jb
sbb
sbb
lock
mov
stc
jb
add
das
add
dec
outsb
dec
nop
jmp
jge
stos
cmp
sub
stc
jb
add
add
imul
dec
sldt
stc
inc
xchg
stos
add
mov
xchg
ret
mov
pop
mov
stc
jb
add
add
add
jb
jge
jge
mov
add
lcall
nop
jmp
pop
add
or
xchg
incb
xchg
ret
stos
stc
xchg
adc
add
add
xchg
inc
add
xor
xchg
ss
add
stc
jb
add
stos
add
jge
mov
stc
jb
inc
add
stc
jb
add
add
in
mov
orb
add
add
add
mov
add
rcrl
addb
add
add
or
jne
nop
jmp
add
add
jo
mov
stc
jb
add
add
jmp
stc
jb
lcall
das
pop
cmpl
nop
jmp
add
fldpi
call
stc
jb
add
pop
in
mov
stc
jb
cmp
flds
xor
sldt
stc
jb
flds
add
mov
nop
jmp
add
jge
lcall
dec
push
stc
jb
adc
xor
iret
jmp
nop
jmp
add
xor
add
add
stc
jb
aam
inc
jge
add
pusha
stc
jb
add
add
das
add
pop
push
nop
jmp
add
roll
add
test
not
stc
jb
add
add
inc
xor
inc
mov
sub
inc
add
lcall
clc
nop
jmp
test
add
add
xchg
cmpsl
lahf
es
push
mov
xchg
ret
stc
xor
cmp
addb
cmp
add
add
stc
jb
insb
bound
sahf
mov
stc
jb
add
add
popa
push
mov
xchg
ret
test
jmp
jb
sbb
add
jge
out
push
push
mov
xchg
ret
mov
pusha
add
sub
push
mov
xchg
ret
add
imul
stc
jb
mov
stc
aam
add
mov
stc
jb
jge
add
mov
jb
add
add
add
mov
mov
nop
jmp
add
decl
stc
jb
add
add
cmp
jmp
add
add
pop
mov
mov
xchg
ret
inc
add
outsl
div
stc
jb
imul
push
stc
jb
cmp
xor
add
imul
adc
add
jge
add
stos
sbb
call
stc
jb
test
add
add
movswl
nop
jmp
and
int3
xchg
stc
jb
add
mov
mov
push
mov
xchg
ret
add
add
jb
add
fnstcw
stc
jb
add
xor
out
std
inc
add
jmp
movb
add
stc
jb
mov
sub
nop
jmp
add
adc
imul
adc
mov
xchg
ret
ljmp
add
jb
out
add
aam
cmp
mov
xchg
ret
add
add
adc
jb
mov
loopne
add
push
stc
jb
and
add
add
loop
repz
mov
stc
jb
add
test
add
pop
jmp
stc
jb
add
add
inc
add
add
push
nop
jmp
push
add
add
repnz
push
mov
add
test
nop
jae
jae
arpl
sub
adc
jb
add
rcr
aam
pop
stc
jb
add
add
add
fisttpl
test
sbb
add
jb
add
js
mov
lret
std
cmp
and
mov
jmp
stc
jb
add
add
cmpsl
dec
dec
push
mov
xchg
ret
stos
add
add
incl
nop
jmp
sbb
xor
call
nop
jmp
add
add
add
push
mov
xchg
ret
add
mov
stc
jb
add
add
add
xchg
jno
into
jl
stc
jb
cmp
and
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
xor
add
mov
jb
pop
loopne
jge
stc
add
ljmp
std
cmp
add
mov
mov
jb
add
add
sub
stc
jb
add
loop
push
lret
adc
mov
sub
ret
add
or
add
jb
add
add
add
add
push
add
jno
sub
stc
jb
mov
add
testb
push
mov
xchg
ret
add
add
and
stc
jb
add
add
jmp
pop
add
ljmp
add
nop
jmp
add
stos
in
add
xor
jle
push
mov
xchg
ret
and
lahf
mov
stc
jb
add
mov
mov
xchg
ret
add
ret
add
adc
mov
nop
jmp
jge
add
add
add
add
add
add
cmp
add
stc
jb
pop
inc
stc
add
lret
stc
jb
jge
add
add
bound
inc
inc
fimull
mov
xchg
ret
and
lcall
add
add
jb
test
test
stc
jb
add
add
xor
mov
xchg
ret
fnstenv
add
stc
jb
mov
pop
insb
add
stc
jb
aam
mov
add
mov
stc
jb
add
add
add
test
nop
jmp
jmp
add
add
add
jge
stc
jb
add
stos
test
inc
pop
mov
stc
jb
add
stc
jb
add
test
popa
add
mov
xchg
ret
mov
cmpsb
or
add
jb
bound
imul
add
mov
add
add
sub
mov
add
jb
add
add
add
sbb
mov
xchg
ret
add
fucompp
cmpsb
or
add
jb
jge
fldl
dec
xor
nop
jmp
or
lcall
inc
add
cmp
andl
add
fldl
add
imul
jb
roll
add
add
add
push
mov
xchg
ret
stos
js
or
ljmp
add
bound
xor
push
mov
xchg
ret
add
add
daa
lea
fildl
xchg
ret
add
stc
jb
mov
and
mov
nop
jmp
add
add
xor
stc
jb
jg
jge
xor
int
jp
jbe
nop
jmp
add
sub
ret
popa
push
and
pop
jb
nop
jmp
and
push
mov
xchg
ret
cmp
jns
jo
nop
jmp
lcall
in
add
call
stc
jb
and
add
stc
jb
add
pop
mov
jb
in
imul
adc
add
jb
roll
lret
push
nop
jmp
add
add
jno
adc
pusha
stc
jb
add
add
adc
add
jb
roll
call
cmp
add
add
push
push
mov
xchg
ret
bound
je
adc
pusha
stc
jb
mov
add
add
cmp
stc
jb
jge
add
imul
xchg
ret
inc
add
stc
jb
out
stos
test
add
ret
add
fldl
add
jg
add
mov
jne
stc
jb
add
push
jb
mov
mov
xchg
push
mov
xchg
ret
shl
add
insb
insb
stc
jb
add
add
mov
stc
jb
add
add
popa
dec
mov
stc
jb
test
je
lods
mov
nop
jmp
mov
add
add
iret
push
stc
jb
loopne
add
aaa
or
jmp
pop
add
add
push
stc
jb
add
loopne
xor
jne
stc
jb
add
and
fmuls
scas
enter
iret
jmp
jge
inc
add
dec
mov
stc
jb
add
add
mov
stc
jb
xor
mov
add
push
mov
nop
jmp
imul
lcall
loopne
add
add
add
and
nop
jmp
stos
add
in
add
popa
push
jmp
jmp
imul
add
mov
add
roll
mov
rep
stc
jb
add
add
bound
mov
xchg
ret
add
shl
and
mov
xchg
ret
sub
add
jb
mov
nop
jmp
jge
jge
into
decl
push
mov
xchg
ret
mov
push
mov
xchg
ret
jmp
stos
add
stc
jb
add
add
add
jne
stc
jb
add
push
test
jb
cmp
stc
jb
add
add
add
pop
add
mov
stc
jb
inc
add
add
add
dec
add
jb
jg
add
loopne
mov
test
repz
stc
jb
jmp
dec
stc
jb
jg
add
add
aaa
lds
add
push
mov
xchg
ret
add
stos
inc
add
inc
out
add
pop
xor
adc
jb
das
add
mov
add
add
jb
add
add
stc
jb
inc
jge
jne
stc
jb
add
cld
mov
push
mov
xchg
ret
add
add
mov
xchg
ret
jge
cmp
xlat
jecxz
push
stc
jb
loopne
in
add
add
add
stc
jb
xchg
add
add
nop
jmp
adc
insb
je
add
jne
xor
stc
jb
add
add
add
je
add
add
adc
jb
adc
out
add
push
stc
jb
aam
bound
test
test
stc
jb
xor
add
jb
add
mov
and
ret
sbb
cmc
ljmp
add
cmp
jb
stc
jb
add
add
add
add
mov
and
rol
add
pop
stc
jb
jg
jge
add
mov
pop
movsl
inc
add
mov
sbb
jmp
add
sub
out
out
pop
push
mov
xchg
ret
jge
add
in
push
mov
xchg
ret
adc
imul
incl
cmp
add
lcall
pop
out
incl
je
add
cmp
mov
in
mov
add
aam
sub
mov
push
stc
jb
insb
add
lcall
jb
stos
add
add
lahf
mov
push
mov
xchg
ret
in
add
call
stc
jb
jge
add
xchg
xchg
in
mov
stc
jb
add
add
inc
add
add
cmpl
add
or
add
add
mov
jge
add
add
jb
mov
inc
add
mov
stc
jb
cmp
add
stc
jb
add
add
add
or
stc
jb
jmp
ljmp
stc
jb
aam
xor
add
sub
mov
inc
add
stos
sahf
push
push
mov
xchg
ret
mov
cmp
mov
stc
jb
add
add
jb
jmp
stc
jb
add
add
cmpb
add
add
ljmp
call
inc
add
add
mov
nop
jmp
ret
and
mov
nop
jmp
stos
add
add
add
fs
rclb
sbb
inc
add
jge
pop
push
mov
stc
jb
ret
mov
sbb
mov
add
stc
jb
add
add
mov
imul
call
add
add
push
nop
jmp
js
pop
stos
mov
xor
and
stc
jb
jge
pop
xchg
add
add
push
mov
xchg
ret
stc
roll
mov
stc
jb
jge
mov
inc
push
leave
stc
jb
mov
add
add
xor
push
mov
xchg
ret
add
xor
or
jmp
add
loopne
test
nop
jmp
bound
and
add
lock
mov
xchg
ret
add
add
lock
imul
stc
jb
jge
inc
aam
add
mov
stc
jb
test
and
fwait
mov
stc
jb
jg
adc
loopne
sbb
jb
add
add
add
stc
jb
add
add
inc
add
jb
flds
add
imul
jmp
insb
aam
jmp
roll
add
add
nop
jmp
add
add
imul
mov
stc
jb
add
xor
stc
jb
add
add
inc
iret
pop
push
mov
xchg
ret
add
mov
pop
sub
add
add
out
add
mov
std
inc
add
imul
mov
stc
jb
add
xor
add
mov
add
addl
jmp
sub
jmp
inc
cmp
in
cmc
incl
add
out
add
dec
mov
nop
jmp
add
pop
jmp
adc
push
add
stc
jb
mov
mov
stc
jb
add
or
popf
stc
jb
add
enter
in
ljmp
add
mov
stc
jb
add
add
sub
adcb
incl
out
out
aam
add
xchg
movsb
insb
pushl
nop
jmp
lcall
push
sub
stc
jb
add
shll
add
bound
pop
push
stc
jb
add
insb
add
add
add
je
stc
jb
add
push
add
push
stc
jb
add
sbb
hlt
idivl
test
or
add
incl
out
add
call
add
add
stos
imul
icebp
incl
add
add
add
pop
mov
push
mov
xchg
ret
loopne
and
stc
jb
mov
and
mov
stc
jb
add
aam
imul
jge
add
mov
andb
fldl
adc
add
outsl
and
nop
jmp
add
addb
repnz
loope
add
add
and
or
pop
fiadds
xchg
ret
cmp
jmp
jb
add
ljmp
adcb
xor
adc
add
jae
jb
add
add
movzwl
stc
jb
bound
add
pop
mov
push
mov
xchg
ret
add
jmp
stc
jb
mov
stos
lcall
nop
jmp
add
add
js
gs
mov
stc
jb
add
pop
dec
imul
stc
jb
jge
mov
in
test
das
mov
push
mov
xchg
ret
imul
mov
push
stc
jb
je
add
jmp
cli
loop
incl
add
push
add
nop
jmp
add
jge
flds
stos
jge
mov
inc
mov
jmp
nop
jmp
ljmp
sub
stc
jb
inc
add
sub
inc
out
call
incl
add
inc
add
stc
jb
add
loopne
add
add
add
or
pop
stc
jb
add
pop
add
xor
stc
jb
roll
mov
xchg
ret
ljmp
mov
stc
jb
inc
ljmp
jb
add
add
add
push
sahf
mov
stc
jb
add
or
das
mov
stc
jb
add
cmp
cmp
pop
push
stc
jb
sbb
test
add
add
sub
add
add
leave
add
add
stc
jb
jge
je
add
add
add
stc
jb
fnstcw
cmp
bound
add
jb
add
push
mov
nop
jmp
flds
cmp
jb
add
push
cmp
add
mov
stc
jb
add
add
add
popa
stc
jb
xor
add
and
movb
sub
push
mov
xchg
ret
mov
push
stc
jb
xor
add
nop
jmp
mov
add
ljmp
jb
add
jge
cmpsl
push
aam
xor
jmp
jg
adc
jg
mov
mov
push
mov
xchg
ret
push
xor
js
add
je
stc
jb
fldl
test
stc
jb
add
add
add
inc
push
adcb
add
in
mov
xor
mov
jb
or
add
mov
or
stc
jb
stc
sbb
stc
jb
add
imul
add
stc
jb
adc
add
bound
mov
mov
stc
jb
test
push
push
mov
xchg
ret
push
add
add
mov
stc
stos
push
mov
xchg
ret
add
add
pushf
pushl
stc
jb
add
and
jge
daa
ret
mov
std
incl
fucomp
add
pop
add
insb
add
push
mov
xchg
ret
add
add
stc
jb
in
add
sahf
xor
stc
jb
add
xor
js
dec
cmp
jmp
mov
test
lock
loopne
incl
stc
rcr
jmp
dec
adc
mov
xchg
ret
add
add
add
add
jb
js
pop
add
pop
push
mov
xchg
ret
je
add
addb
out
add
stc
jb
adc
flds
jge
daa
or
inc
cld
incl
stos
add
das
xor
or
jb
add
push
nop
jmp
xchg
out
inc
add
stc
jb
add
bound
mov
stc
jb
shl
jge
test
sub
inc
add
jmp
stc
jb
cmp
cmp
adc
push
mov
xchg
ret
add
mov
xchg
ret
add
dec
stc
jb
loop
add
jge
test
dec
push
push
mov
xchg
ret
add
add
and
and
add
add
add
repz
xchg
ret
add
xor
add
add
stc
jb
stc
jmp
test
out
call
ljmp
cmp
dec
cmp
jb
add
stos
push
fldenv
dec
cmp
mov
xchg
ret
add
inc
xchg
aas
xchg
stc
jb
add
add
ss
repz
mov
xchg
ret
cmp
cmp
jb
add
add
xor
stc
jb
add
inc
add
add
push
mov
ja
ficoms
jmp
push
ret
add
xchg
jnp
jno
stc
jb
add
out
fnstenv
stc
jb
add
add
mov
jge
mov
stc
jb
add
pop
and
stc
jb
cmp
out
inc
stc
jb
xor
add
je
mov
cmp
nop
jmp
add
add
mov
popf
add
stc
jb
add
inc
fnstsw
nop
jmp
add
xor
jl
ret
stc
jb
add
add
nop
jmp
jge
and
add
mov
mov
stc
jb
add
add
push
stc
jb
add
add
cmp
aaa
jecxz
incl
xor
cmp
stc
jb
pop
loopne
add
jmp
xor
add
jmp
stc
jb
inc
and
imul
jne
stc
jb
mov
bound
pushl
nop
jmp
insb
add
add
add
mov
jmp
add
xchg
add
sub
jb
add
inc
mov
add
and
push
mov
xchg
ret
add
mov
popa
push
mov
xchg
ret
add
jge
add
je
sub
jb
test
dec
stc
jb
xor
sub
add
jmp
stc
jb
roll
add
add
add
repnz
add
jb
add
add
jmp
jb
add
imul
inc
and
nop
jmp
add
push
roll
mov
stc
jb
add
shrl
jge
nop
jmp
add
mov
ja
push
push
mov
xchg
ret
add
out
cli
pusha
stc
jb
jge
jge
add
and
repnz
add
ret
jmp
fiaddl
xchg
ret
add
test
add
loope
or
mov
xchg
ret
mov
lret
push
stc
jb
adc
add
imul
add
jb
add
inc
in
stos
imul
sub
inc
add
adc
rep
stc
jb
add
ret
push
repnz
jne
stc
jb
add
jb
stos
and
add
cmp
xor
add
stc
jb
ret
xor
add
je
repz
repnz
incl
mov
jg
flds
xor
jmp
stos
add
add
jg
out
subl
stc
jb
push
add
push
add
jb
in
stos
add
aam
mov
hlt
jmp
add
pop
fnsave
push
mov
xchg
ret
jge
stc
mov
ret
push
mov
xchg
ret
loopne
xchg
cmp
nop
jmp
out
mov
add
sub
pushl
ljmp
or
popa
add
mov
xchg
ret
jge
imul
push
mov
xchg
ret
add
jmp
mov
incl
add
jmp
mov
push
mov
xchg
ret
add
mov
leave
sub
jb
out
mov
ret
stc
jb
adc
sbb
das
add
sbb
pop
add
stc
jb
add
add
add
add
std
lods
stc
jb
add
stos
in
mov
add
lea
nop
jmp
test
inc
add
shrl
in
icebp
stc
jb
fstps
stos
xchg
push
stc
jb
add
roll
add
add
and
jg
add
pop
add
pop
sbb
jmp
sbb
xchg
add
xchg
add
jmp
add
shr
add
push
les
push
mov
xchg
ret
add
outsb
sub
stc
jb
push
pop
cmp
add
jb
sub
mov
add
jge
mov
arpl
stc
jb
add
addr16
sub
in
mov
dec
add
push
ljmp
fsubl
sub
cmp
js
sub
adc
mov
lods
cmc
popf
xor
adc
gs
jne
sub
test
mov
adc
and
scas
pop
ss
mov
sub
xchg
test
add
jae
stos
leave
pop
pop
pop
dec
repnz
mov
je
dec
jb
pop
mov
movsb
pop
sub
jne
aaa
adc
pusha
add
rolb
fdivl
das
pop
adc
xchg
pusha
add
mov
roll
enter
cmp
jmp
cmp
jg
das
cs
jl
push
pop
adc
mov
sarl
inc
ret
cmp
adc
lret
lret
jle
mov
add
add
mov
nop
inc
add
mov
dec
cmpsb
sbb
insb
xor
inc
add
iret
mov
mov
or
std
filds
mov
nop
int3
dec
adc
sti
push
dec
sub
neg
xor
incl
add
fbstp
cmp
enter
sti
mov
lods
or
inc
add
xor
sahf
js
fcmove
cmc
test
lcall
push
cld
push
inc
clc
xchg
pop
mov
jl
add
outsl
mov
and
loope
xchg
filds
add
loopne
ljmp
mov
outsb
stos
jae
out
mov
lods
cmpsb
jmp
lods
or
data16
inc
add
pop
sti
inc
xchg
ds
movb
fisttpl
out
adc
das
mov
movsb
push
je
sbb
sbb
repnz
in
pop
std
cmp
mov
js
inc
add
adc
pop
scas
push
movb
cmp
out
shlb
shll
stos
pop
lcall
dec
mov
add
add
add
or
test
cld
pop
rcrb
inc
add
jno
jb
fbstp
mov
leave
mov
test
and
test
dec
jae
pop
movsb
mov
clc
daa
sub
jge
add
sbb
add
add
add
jl
rcrb
jecxz
xchg
xchg
int
push
sti
loope
push
jge
pop
loop
inc
add
add
add
adc
jge
ja
add
adc
cs
dec
movb
or
cld
pusha
add
rolb
rcrb
push
mov
mov
dec
ds
add
sub
filds
sub
repnz
push
xor
push
dec
push
pop
xor
ljmp
cmc
mov
sub
popf
adc
sub
cld
add
xchg
adc
fsubl
int3
pop
orl
push
push
lods
cmp
add
dec
dec
cmc
mov
test
cmp
push
adc
pop
push
or
insb
inc
add
push
cmc
sub
out
das
add
push
jae
mov
shll
fldcw
stc
fldenv
fiaddl
arpl
xchg
test
xor
addr16
cltd
hlt
js
push
rolb
popf
inc
add
add
pop
aam
mov
xchg
dec
call
cwtl
les
xchg
lret
outsb
mov
aas
cmp
mov
xchg
pop
mov
mov
sub
add
es
je
mov
inc
add
push
push
jb
pusha
add
pop
leave
dec
mov
int3
inc
add
dec
aad
mov
cmp
and
xchg
fdivl
mov
add
add
add
ret
fwait
xchg
es
add
call
aas
inc
add
dec
or
mov
sub
mov
xchg
mov
dec
cltd
stc
mov
lcall
cmp
xor
mov
dec
js
mov
push
cltd
lret
jae
lods
in
inc
add
mov
das
lret
add
cmp
add
out
pop
mov
arpl
push
jbe
cmp
sub
jae
cmpsb
ljmp
repz
movsl
jne
push
sub
test
dec
sbb
roll
test
movsl
mov
imul
adc
rcrl
jb
push
mov
push
jle
jo
xchg
mov
adc
stos
mov
cmp
add
add
add
xchg
icebp
leave
mov
pop
cld
jnp
push
add
mov
out
pushf
std
lods
int
cmp
dec
out
xchg
jp
roll
adc
pop
xor
out
sub
add
movb
add
add
hlt
jbe
outsb
in
fadd
add
fists
fdivrl
cmp
push
push
fistps
adc
stc
lahf
ljmp
mov
pop
movsl
insb
popf
inc
sbb
add
jmp
pop
sbb
pop
cmp
sarl
addl
rcll
jp
xor
out
outsb
mov
into
dec
xor
in
sub
xchg
shl
stos
push
cmp
jecxz
jns
repz
pushl
ss
out
pop
mov
montmul
cmpsb
inc
add
sarb
xchg
inc
add
cli
in
shll
sbb
test
jecxz
fsub
mov
add
pushf
inc
mov
jmp
cmpsb
fstl
add
mov
jns
pop
pop
push
cmp
cmp
sub
adc
fcomi
mov
mov
sub
xchg
fdivl
inc
ss
stos
sbb
in
jo
pop
jecxz
jge
jg
ret
outsl
shlb
dec
int3
popa
mov
xchg
pop
dec
push
mov
out
adc
add
or
add
push
inc
add
mov
mov
push
sbb
dec
and
sbb
sbb
pop
out
bound
cwtl
ljmp
mov
sbb
xchg
add
adc
movsl
fsubrs
xor
add
nop
or
mov
or
outsb
xor
jmp
add
push
cmp
or
cld
andl
dec
jb
lret
mov
dec
cmpsb
rolb
mov
nop
cwtl
fwait
std
nop
gs
cs
push
jo
cmp
ja
dec
ficoml
jl
dec
mov
cmpsl
movsb
push
fisttps
sahf
std
lock
mov
jnp
lcall
sub
inc
inc
add
add
cmpsb
jmp
mov
les
jno
aad
lcall
movb
add
inc
pop
xchg
js
mov
and
mov
dec
inc
sub
add
push
aas
fildll
pop
dec
aad
rorl
push
inc
add
pop
loopne
lret
mov
dec
notb
add
movb
push
dec
mov
loop
jp
adc
je
push
not
or
fs
push
test
icebp
jns
iret
mov
inc
mov
adc
testl
xchg
add
jb
sub
adc
xchg
mov
xor
js
mov
bound
pop
add
incl
adc
pusha
add
jl
pop
ss
mov
scas
jecxz
sub
sub
pop
jno
je
stos
int
jne
and
lods
mov
cmc
and
inc
jg
push
xchg
xchg
popf
inc
dec
xor
setl
add
add
pop
push
mov
add
sub
scas
es
insb
jl
fwait
std
popf
dec
mov
xchg
dec
and
arpl
mov
add
and
outsl
mov
jnp
add
add
sbb
mov
add
pop
cmpsl
mov
lcall
lahf
hlt
pop
cwtl
lret
aaa
gs
popa
jecxz
add
frstor
adc
push
mov
jle
loop
or
add
and
ret
ja
add
push
jmp
push
adc
xchg
push
add
stc
addb
inc
enter
fnsave
push
adc
push
add
xchg
adcl
pop
and
addb
add
out
add
roll
add
cmp
je
loop
fisubl
push
add
cmp
in
addb
es
hlt
pop
xor
mov
add
or
mov
jo
sub
sti
and
test
rolb
inc
ficoms
addb
jp
insb
pop
mov
xor
movsl
outsb
fbstp
stos
xchg
fldt
sbb
jmp
add
movsb
cmp
lcall
sbb
mov
mov
in
pop
imul
add
dec
sub
add
pushf
out
add
rep
ljmp
xor
and
mov
mov
aas
inc
add
jg
xchg
shl
faddl
sub
add
sbb
add
mov
popf
into
jge
mov
adc
nop
or
or
push
out
or
aaa
mov
sar
lret
sbbl
jb
out
xor
roll
fs
scas
mov
dec
lret
in
popa
mov
inc
add
movsl
xchg
pushf
dec
arpl
in
mov
pop
mov
lret
mov
mov
roll
dec
out
jp
sub
outsb
js
imul
test
push
mov
addb
dec
jecxz
xchg
mov
and
out
cmp
pop
mov
out
adc
mov
add
cmp
cli
pop
mov
enter
ss
icebp
scas
jnp
and
fldcw
push
jo
repnz
js
xlat
js
mov
fidivrl
fcoms
mov
jp
pusha
add
mov
add
inc
add
xor
nop
les
jbe
mov
lahf
clc
adc
out
pop
jg
pop
jno
stos
xchg
imul
inc
and
sahf
leave
test
mov
movsb
inc
add
and
cs
in
add
inc
lea
and
fs
outsl
cmpsl
addb
imul
push
sub
mov
adc
cmp
inc
add
mov
or
lret
ret
in
leave
xchg
jmp
dec
sub
inc
cmpsb
sub
lret
les
ret
mov
test
mov
add
cltd
scas
adc
jne
addr16
ds
vphaddudq
int3
mov
jp
ljmp
stos
gs
stc
rorb
pushf
jle
lods
shld
arpl
xchg
dec
std
jbe
jle
add
arpl
or
shrl
jo
jne
stos
insl
jmp
mov
add
adc
add
mov
push
filds
loopne
iret
add
lods
xor
sub
cwtl
fistpl
push
adc
int3
jecxz
ds
inc
sub
adcl
or
addr16
jnp
mov
adc
cmpsl
jno
adc
inc
mov
movb
mov
cwtl
or
sarb
leave
jb
pop
inc
adc
mov
sub
dec
cmp
push
cmp
lods
pop
dec
dec
int3
mov
outsb
jns
aad
loop
push
mov
add
les
fsub
sti
bound
jae
xor
adc
in
jle
add
lret
repz
lcall
jnp
mov
sub
mov
cmp
push
std
mov
jnp
pop
sbb
add
aas
mov
loopne
test
daa
in
sub
or
sub
fbstp
sahf
mov
aad
cmpl
mov
and
dec
xchg
pop
xchg
int
mov
imul
es
stos
add
mov
add
jmp
add
dec
dec
push
xor
mov
add
addb
add
cmpsl
outsl
jb
xchg
push
imul
js
pusha
add
or
in
ja
mov
adc
or
add
movb
je
push
popf
sub
addb
adcl
inc
add
enter
inc
add
in
jecxz
xchg
test
addb
push
out
gs
add
mov
fstl
xor
sbb
or
aam
int
pop
bound
mov
rol
adc
pop
inc
or
xor
rcll
push
mov
mov
adc
imul
cmp
add
mov
in
das
jb
or
scas
xor
repnz
jmp
sbb
outsb
addb
test
mov
je,pn
cmp
inc
add
and
neg
mov
movb
addb
add
jnp
add
ds
dec
decl
sahf
xchg
jmp
xchg
jae
dec
fwait
sahf
mov
sbb
xchg
xchg
mov
push
xor
std
pop
fstps
adc
fsub
and
add
jno
mulb
push
fcompl
sub
hlt
shll
std
loope
add
bound
jno
addb
dec
mov
add
add
lds
mov
test
sti
inc
add
mov
mov
xchg
or
jge
xchg
push
push
jl
xor
lret
mov
addb
mov
mov
lahf
in
dec
in
data16
pop
xchg
mov
add
dec
gs
adc
out
sub
jle
test
push
cmp
cltd
mov
adc
cltd
lods
jle
add
lea
mov
add
outsb
imul
dec
dec
shl
imul
and
lock
xchg
inc
add
iret
push
mov
lcall
inc
push
nop
xchg
or
ret
dec
push
ss
add
ss
add
push
add
mov
push
addb
popa
fabs
sbb
push
pop
mov
jnp,pn
fdivs
xor
mov
mov
add
and
lds
or
add
xchg
fcos
cli
push
mov
xlat
mov
add
adc
dec
jge
add
pop
pop
sub
movb
jo
fstl
mov
mov
mov
add
lahf
mov
mov
out
mov
push
insl
addb
fidivs
imul
cmp
pusha
add
adc
sbb
call
sub
jb
and
push
mov
fwait
sub
out
jns
outsb
push
xor
or
inc
add
jbe
rolb
out
push
adc
dec
pop
cmp
notb
mov
cli
add
sbb
xor
iret
ret
popa
stos
and
out
insl
dec
jmp
mov
stos
sub
push
cwtl
mov
add
jns
ret
cmp
dec
xchg
mov
mov
fldt
out
sub
test
roll
dec
pop
lret
mov
das
push
cmp
adc
jne
xor
pop
inc
aam
xchg
jae
mov
xrelease
addr16
test
dec
jge
adc
cld
cwtl
mov
iret
pop
outsl
popf
adc
or
jg
mov
aaa
and
in
add
and
xchg
imul
dec
dec
push
fcomps
push
push
xor
aad
insl
sbb
movsb
stos
mov
jge
add
cmc
and
mov
mov
mov
mov
xlat
pop
and
xor
fs
sub
stos
mov
bound
in
cmp
into
pushf
insb
stos
jl
das
mov
mov
icebp
xchg
and
mov
inc
mov
icebp
push
fmul
and
cmpsl
movb
add
hlt
mov
cmp
jmp
dec
jbe
xchg
lods
out
cwtl
insb
fsubrs
lea
in
jns
fsub
and
subl
fiadds
repz
inc
pushf
jmp
int
pop
dec
and
push
loope
lahf
lods
addb
addb
xchg
push
and
add
and
and
out
inc
add
inc
lods
mov
mov
pxor
stc
xor
add
and
jmp
in
and
fdivrl
popf
jmp
lahf
dec
je
int3
js
clc
je
add
dec
push
aas
cmpsl
iret
dec
fnsave
dec
into
xchg
jmp
dec
aam
mov
inc
in
push
shl
sbb
loope
movsl
push
test
inc
repz
mov
int3
lea
add
sbb
jge
mov
cmp
mov
mov
into
pusha
add
add
lcall
xor
xchg
jg
add
repnz
jl,pn
pop
and
fwait
and
mov
les
jmp
bound
popa
int
dec
sub
add
xlat
mov
jle
add
add
mov
sbb
fisttpll
push
rolb
dec
jb
movb
in
xor
sbb
adc
scas
cld
es
movb
dec
jno
adc
loope
popf
sub
mov
cltd
test
call
loop
movb
cli
add
add
lock
add
cwtl
mov
add
stos
lret
add
call
mov
arpl
lret
mov
adc
add
xor
add
adc
lcall
repnz
xor
int3
lods
cmp
into
pushf
lea
add
pop
and
dec
out
jns
cmp
inc
add
add
mov
outsb
stc
jp
or
dec
into
mov
test
add
ret
scas
lds
mul
cmp
sbb
and
repnz
ret
pop
inc
mov
pop
insb
lret
scas
jns
dec
cmpsl
fstps
hlt
adc
lods
dec
xchg
scas
icebp
pop
cmp
push
push
movsl
inc
add
adc
add
add
cmp
dec
scas
roll
mov
pop
ds
push
sti
jg
int3
cmpsb
std
in
pusha
add
adc
ja
int
rcll
jmp
xchg
insb
jp
movsb
js
xchg
pop
mov
inc
add
fdivs
out
in
outsl
xchg
add
or
mov
mov
scas
jns
add
inc
add
xchg
movsb
cmpsb
inc
dec
jno
aam
add
aaa
test
adc
cld
or
flds
mov
lret
in
mov
in
cmp
or
stc
popf
ds
outsb
movsb
inc
add
into
je
adc
pop
mov
mov
outsb
popa
jns
shll
mov
fwait
psubw
scas
outsb
cmpl
lods
into
stc
sbb
mov
jmp
add
push
adc
cld
loop
out
dec
cli
out
mov
xchg
pop
mov
push
or
push
lods
sahf
mov
movsl
jb
loope
add
jl
jp
add
mov
arpl
jb
jb
pushf
inc
add
mov
add
jne
fcoml
add
ds
stc
inc
add
add
imul
decb
dec
sahf
flds
sub
mov
dec
xchg
int3
mov
std
stos
sub
int3
cwtl
addb
cmpsb
mov
sub
inc
add
xor
add
cmpsb
ret
ss
sub
inc
add
xor
mov
or
pop
in
in
ljmp
push
divb
sbb
mov
inc
add
rorl
cmp
shrb
mov
mov
add
mov
jns
push
cmpsl
fs
jae
add
pop
jmp
jmp
adc
mov
push
mov
pop
jp
lods
les
hlt
mov
dec
sub
add
mov
movsb
fs
jmp
add
add
in
sbb
add
sbb
pop
sbb
lods
cld
daa
arpl
pop
repnz
popa
rolb
mov
xor
data16
stc
add
es
sbb
jb
clc
addl
mov
decb
pop
mov
and
lahf
daa
dec
ja
addr16
or
add
sbbl
mov
mov
popf
lds
xchg
pop
adc
sbb
xchg
xlat
movb
data16
popf
repnz
jb
pop
dec
adc
push
pop
addr16
enter
push
int3
pop
ret
push
jmp
ljmp
push
loopne
ds
or
mov
int3
ret
jecxz
je
pop
test
xchg
bound
pop
movsl
andl
jns
sarb
in
in
add
dec
sub
add
push
push
jb
mov
xor
jbe
mov
fdivrl
leave
pop
mov
add
xchg
xchg
pop
pushf
add
add
subl
subl
mov
repz
rcrl
add
mov
lds
cmp
std
out
aaa
xchg
pop
fstl
jnp
mov
inc
lcall
fs
sub
xchg
mov
in
ret
stos
addb
les
cltd
sub
lock
mov
imul
xor
inc
xchg
ja
fcmovnbe
out
into
mov
insb
xchg
sbb
xor
fnsave
mov
adc
rol
add
cmpsl
mov
cli
sbb
and
xchg
loop
push
sbb
add
in
and
bound
mov
jns
mov
xlat
and
dec
mov
jg
sbb
sbb
les
cmp
push
or
jae
bound
and
dec
xor
bound
and
lods
divl
and
jne
aam
push
cmpsb
dec
pop
mov
pop
mov
js
pushf
int
add
and
or
test
push
loop
test
rcrl
add
sbb
sbb
push
add
lock
imul
sub
add
mov
loope
addl
add
fmull
stos
test
sub
fistl
loop
add
repnz
sbb
cmp
add
add
pop
bound
cs
add
or
rolb
add
xor
jp,pn
lcall
pop
rcrb
sti
add
cmp
dec
std
fmuls
and
mulb
jecxz
add
addb
add
cmpsb
push
adc
jle
xchg
cmp
xor
push
loop
jae
fimuls
repnz
sbb
add
iret
cmp
add
jge
add
and
adc
shrl
ficomps
gs
rcl
addb
pop
xchg
out
into
adcl
sahf
aad
adc
bound
out
int3
aad
scas
testl
xchg
jo
jg
lods
cmpsl
cmp
addl
jns
sbb
dec
fwait
jle
scas
ss
pop
inc
add
or
loope
addl
mov
pop
adc
mov
xchg
xlat
nop
shll
push
scas
loope
cmp
addb
push
push
push
call
pop
movsl
ficoml
dec
mov
outsb
int3
outsb
cmp
and
pusha
add
add
lea
fsubs
outsl
and
sbb
fucomp
fcmovu
sbb
fcmovne
fldt
sbb
js
ss
xchg
sbb
mov
into
lret
stos
mov
mov
imul
push
push
add
jp
xchg
rcl
cld
dec
daa
jae
in
pop
add
sbb
mov
mov
fldl
and
out
inc
add
out
scas
scas
sbb
adc
lcall
push
cmpsl
es
mov
add
jge
inc
ljmp
inc
add
cmp
push
xlat
add
aas
fcmove
xchg
out
lds
push
mov
jb
push
jmp
add
mov
ret
inc
mov
lea
sbb
out
cmp
adc
adc
push
add
jp,pn
add
in
jne
pop
dec
inc
add
push
or
add
repz
mov
in
repnz
icebp
push
mov
rolb
add
add
pop
outsl
addr16
divb
dec
testb
icebp
mov
xchg
enter
pop
lods
push
pop
mov
inc
add
ficoms
or
add
cmp
nop
xor
mov
sbb
sahf
pop
inc
add
stc
jno
addr16
push
pop
cmp
rcrb
push
testb
into
mov
jo
aas
xchg
lds
cmp
loop
movsb
and
rcl
push
adc
cli
inc
mov
push
cmp
in
add
mov
pop
mov
in
cmp
bound
and
xor
mov
je
gs
decl
loope
insb
adc
incb
adc
mov
jg
mov
or
int
xor
in
cmp
clc
push
push
movb
mov
cmp
mov
add
sbb
sbb
sbb
into
dec
orps
xorl
and
sahf
jl
jno
xchg
push
mov
aas
cmp
test
push
test
ret
popf
push
cmp
ljmp
jbe
jle
sub
fstpt
scas
lds
movsb
adc
xchg
cmc
sub
jl
addr16
adc
pop
popa
push
dec
xchg
or
pop
inc
cmpsb
cmp
shl
ljmp
and
pop
jp
iret
cmpl
pop
xchg
xor
jp
jae
nop
mov
repz
xchg
fstps
cmc
jp
mov
mov
cmp
aad
cli
mov
cs
rolb
add
xchg
loop
xchg
fisttpll
repz
rcrl
add
repz
lods
cmpxchg
icebp
inc
add
push
push
xchg
clc
mov
add
dec
notl
xor
dec
dec
icebp
adc
xor
fs
fucomp
inc
push
movsb
clc
daa
jp
jns
pop
fiaddl
push
and
fyl2x
fisttps
cmc
out
stos
push
mov
push
cmpsb
aas
dec
popf
xchg
dec
imul
nop
cmp
and
push
mov
sbb
inc
hlt
ds
addb
add
fcmovb
cmp
bound
sbb
mov
lcall
int3
movsl
push
xchg
lods
pop
aad
adc
addb
dec
and
repnz
and
fcomp
pop
jae
pop
cltd
stos
xchg
mov
nop
out
xchg
lods
mov
add
imul
ja
das
mov
leave
enter
xchg
pop
mov
sahf
sub
data16
mov
stos
mov
xchg
add
sahf
lock
sub
aam
js
and
cltd
xor
or
push
clc
addb
mov
xchg
inc
ljmp
pop
cmp
xor
fiaddl
iret
sub
repz
sub
fwait
and
dec
cmp
push
or
push
insl
test
dec
xor
add
push
mov
xchg
mov
cmpsb
sbb
es
fbld
mov
cmpsb
mov
sub
in
test
dec
dec
and
stc
fwait
mov
mov
mov
add
pop
into
inc
push
inc
fdivp
or
lahf
jns
imul
rcll
in
outsb
cmp
add
xor
jae
inc
add
cmp
cmp
fimuls
aaa
jmp
pop
adc
rcrl
add
out
mov
xchg
pop
repnz
inc
add
ret
aaa
adc
lock
repz
lret
mov
call
jns
push
call
data16
rcll
xchg
mov
push
xchg
xchg
pop
xor
add
add
add
fisttpl
fldenv
mov
add
mov
push
lcall
or
fmuls
mov
sbb
lret
leave
pop
cmp
or
mov
arpl
add
aas
dec
sbb
gs
dec
or
out
lods
dec
adc
mov
xor
mov
add
fidivs
mov
mov
jns
xchg
mov
pop
fnsave
dec
push
loopne
or
jb
xor
xor
sbb
aad
imul
sbb
add
dec
setge
inc
cmp
or
xor
lret
xchg
in
or
cmp
xor
add
inc
add
xchg
push
adc
and
aad
or
insl
mov
jp
lods
and
shll
stos
xchg
lods
shrl
idivb
ss
test
in
sbb
and
jg
mov
add
push
jo
stos
push
mov
jg
jge
pop
cmpsl
sub
loop
gs
mov
add
stc
sbb
sbb
mov
pop
js
es
and
mov
loope
sbb
or
jecxz
std
inc
add
cmp
cmp
dec
ret
lock
imul
mov
sbb
lea
dec
xchg
or
stc
adc
int3
xchg
test
add
aad
mov
movb
dec
cmp
cmpl
mov
into
adc
icebp
js
dec
rolb
cwtl
sbb
imul
push
sbb
add
push
jl
aas
mov
push
mov
gs
adc
jbe
lds
addb
and
jno
push
rolb
dec
dec
and
mov
adc
jp
inc
add
or
mov
mov
pop
mov
xor
clc
mov
stos
les
or
jmp
add
xor
test
imul
dec
mov
out
push
lea
cmpl
add
outsb
enter
lods
rcl
pop
je
pop
jmp
test
push
nop
jne
dec
xor
mov
lock
mov
loop
fcomi
ret
shll
arpl
inc
push
mov
add
mov
cmp
popf
adc
jnp
aaa
loope
jmp
loopne
rcll
xor
adcl
inc
add
push
test
mov
add
sahf
dec
aad
leave
movb
add
popa
addb
cmp
adc
clc
xchg
negl
and
sbb
test
push
mov
mov
lea
push
add
xchg
mov
add
lahf
push
jecxz
xchg
cmp
sub
push
jmp
loope
and
xchg
or
xchg
adc
or
add
add
mov
sbb
test
test
xor
jbe
mov
adc
mov
outsb
xchg
add
mov
and
sarb
jp
pop
add
aam
int3
call
movsb
scas
ja
aam
shrl
jecxz
jmp
sahf
sub
bound
cmp
xchg
jnp
in
mov
xchg
lds
rolb
popf
push
inc
add
repnz
mov
lods
hlt
dec
add
xor
xchg
addl
cmp
lods
hlt
clc
fisttpll
stc
xchg
in
add
nop
cmp
arpl
in
xchg
call
adc
jae
cmp
hlt
push
add
test
and
add
les
addr16
iret
orl
pop
push
sbb
movsb
repz
movl
jmp
movsb
cs
dec
shll
outsb
mov
jb
movsb
xchg
dec
outsb
je
fbstp
dec
push
add
sarl
cmp
xchg
nop
dec
pop
or
sub
popa
xor
leave
aaa
lds
push
bnd
xor
mov
jl
ljmp
mul
fstpl
sahf
gs
jg
pop
dec
in
push
enter
add
mov
mov
pusha
add
fdivs
mov
test
add
gs
stos
push
mov
xcrypt-cbc
mov
movsl
sbb
loopne
nop
adc
add
add
push
add
test
push
add
test
mov
enter
inc
add
add
cs
sti
loope
ds
mov
or
cmp
out
insl
cltd
cli
ja
push
add
mov
mov
mov
inc
add
mov
pcmpgtd
sar
sbb
dec
clc
inc
add
shlb
fbld
xchg
sbb
xor
daa
dec
mov
out
push
xchg
fwait
negb
daa
xchg
fistps
fmuls
mov
pop
cmpsb
ret
push
xchg
in
mov
sub
add
inc
add
pop
xchg
fcomps
pop
xchg
mov
int3
mull
push
fsub
leave
mov
jne
mov
addr16
add
jbe
jge
fisubl
stc
adc
jp
jp
xor
adc
mov
add
insb
fsubl
in
je
movsl
cs
xor
add
xchg
push
add
es
mov
jl
pop
arpl
lock
iret
mov
xlat
inc
mov
mov
pop
jg
mov
add
and
fsubl
ja
sahf
aas
testl
pop
call
xor
xchg
mov
sbb
add
add
jp
sbb
sbb
sbb
and
out
addl
cld
sbb
lock
ret
jnp
jp
lds
mov
stos
jg
add
popl
lds
inc
xor
mov
pop
mov
mov
daa
addb
in
cmp
mov
add
sub
in
sub
int3
es
xchg
push
repz
mov
sbb
pop
int
in
push
lods
cltd
scas
decl
mov
nop
pop
fwait
ss
xor
sub
fstpt
cli
lret
lds
add
pop
int3
jb
sbb
cwtl
push
sub
dec
xorl
popa
jmp
out
cmp
out
out
push
add
shll
add
int
xor
pop
jmp
stos
ja
mov
pop
es
cld
loop
adc
pop
adc
lods
rorb
xor
sbb
addl
add
pop
jo
lea
add
add
push
adcl
inc
and
aas
data16
loop
xor
iret
test
clc
out
popf
call
icebp
loop
cwtl
ret
addb
into
jecxz
mov
jne
out
jae
mov
enter
cs
mov
sbb
xchg
xlat
out
push
and
jg
in
cmp
add
movl
cmp
cmp
or
add
shlb
sub
adc
js
add
adc
add
xlat
pop
sti
inc
inc
movb
pop
mov
add
mov
dec
mov
leave
jecxz
add
add
xlat
push
ret
pop
call
and
insl
lods
sbb
or
inc
pop
cmp
pop
fs
jl
cld
leave
lods
mov
mov
lcall
aaa
mov
test
mov
jo
sub
mov
mov
add
imul
cmpsl
das
aaa
and
mov
mov
test
sbb
ds
or
icebp
mov
pop
mov
mov
jl
ljmp
ss
jmp
sbb
loop
add
leave
inc
pop
in
orl
jp
or
inc
negl
mov
stos
lret
lcall
push
sub
sub
and
hlt
mov
out
adc
loopne
scas
addb
add
cli
push
iret
popf
test
outsl
jmp
add
mov
arpl
mov
mov
and
xor
outsb
jge
add
push
not
movsb
push
pop
aas
enter
jl
popl
add
iret
mov
int3
and
dec
inc
fwait
cmp
insl
cmc
push
pop
stc
fadd
add
pop
xchg
sub
mov
dec
das
popa
xchg
mov
mov
xor
mov
add
mov
xlat
and
dec
in
fidivs
cwtl
cmpsb
popf
fidivrs
jbe
add
xor
ja
push
jnp
filds
popf
pop
mov
fistpll
imul
sbb
xchg
mov
push
or
mov
xlat
arpl
out
into
mov
add
inc
psrld
xor
add
cmc
out
jg
jl
and
add
cwtl
rcll
jnp
dec
js
mov
and
pop
fwait
mov
shl
lds
xchg
xchg
loopne
sbb
imul
sahf
bound
test
add
mov
clc
lock
sbb
lods
xchg
popf
fs
mov
jl
sahf
lods
add
movsl
test
add
inc
xchg
xor
shrb
push
outsb
or
jnp
testb
jo
add
sbb
pop
push
mov
in
add
imul
and
rep
fbld
fnstenv
sbb
mov
push
cmp
mov
mov
decb
add
das
add
pop
das
dec
testb
sbb
add
inc
add
xor
lods
push
push
fcmovb
add
and
out
mov
cmp
inc
add
dec
scas
scas
pop
or
int3
push
bound
add
hlt
popa
movsb
push
and
dec
cmc
aam
rolb
push
div
xchg
xor
add
aas
ja
push
out
ds
jb
xchg
dec
cmp
or
pop
divb
loop
push
add
pop
mov
xchg
shll
xlat
dec
push
in
ja
mov
int
mov
jae
jnp
jge
enter
loopne
dec
idivb
movl
push
rcll
jmp
int
ficomps
xchg
adc
jbe
fadds
test
pusha
add
push
cwtl
int
add
je
add
add
enter
fwait
xchg
fucom
scas
jb
add
pop
xchg
dec
jae
push
inc
daa
adc
pushf
hlt
jmp
xchg
lcall
gs
adc
and
jae
add
lret
mov
fwait
jns
push
or
clc
shl
or
mov
xchg
loope
mov
xor
out
psrlq
dec
jb
fisttps
int3
cli
pop
in
outsl
dec
out
xorl
pop
lea
iret
aam
jle
pop
bound
rorl
lcall
xchg
ja
sbb
push
sbb
out
xchg
cwtl
ret
shrl
mov
sub
xor
shlb
adcl
add
cmpsb
add
stc
enter
add
pushf
das
inc
push
scas
add
int
mov
pop
add
push
movsb
enter
out
fcmovnbe
stos
push
arpl
or
sti
push
popa
inc
add
jle
pop
imul
jecxz
mov
add
ret
inc
add
cmc
inc
add
dec
out
es
dec
adc
popa
xor
hlt
push
add
cmpsb
rcrl
int
push
add
push
std
sbb
cmpsb
mov
cli
mov
mov
add
inc
add
sbb
sbb
mov
iret
lret
jne
add
jmp
ss
dec
pop
mov
sub
mov
jbe
lcall
into
push
inc
add
add
or
jne
sub
xchg
add
fdivl
lock
add
push
push
pop
push
cmp
pushf
movsl
mov
repz
addb
add
pop
xchg
dec
add
jns
add
mov
adc
call
orl
add
jnp
add
pop
pop
loope
fsubrs
xor
add
les
sar
add
sub
arpl
sbb
out
push
es
sti
add
in
mull
repnz
dec
dec
test
iret
aaa
dec
das
faddl
add
aam
sub
mov
daa
cmp
inc
add
mov
jo
je
insl
pop
jecxz
cmpsb
jne
clc
mov
jnp
outsb
push
jp
je
sbb
in
sti
and
push
sub
cmpsl
mov
icebp
dec
pop
pop
xchg
or
icebp
xchg
in
jne
ljmp
add
adc
add
mov
cmpsb
arpl
popf
mov
pop
subl
sub
ds
pop
imul
jne
pop
ja
dec
jb
mov
add
cmp
add
and
out
dec
jbe
jbe
inc
add
or
inc
sar
xchg
cmp
stc
xchg
adc
add
add
or
dec
xchg
rclb
addr16
pop
aad
test
pop
push
push
ret
lahf
push
in
jnp
loop
xchg
mov
add
jno
sub
in
fsubr
ja
add
insb
add
sti
mov
xor
sub
mov
out
xchg
hlt
mov
call
int
bound
out
cwtl
sub
add
cld
push
xor
add
test
test
scas
jnp
xchg
sub
notl
ret
mov
sar
or
mov
stos
popf
or
je
aam
cmp
addb
je
ficompl
jp
pop
pop
popa
scas
add
test
add
imulb
shld
insb
rcll
jge
sbb
cmp
into
mov
jb
add
add
and
or
xor
adc
mov
mov
inc
add
ret
mov
cmp
nop
movsl
inc
inc
add
insl
adc
inc
add
pop
test
mov
add
gs
pop
int3
sub
sbb
fidivrs
jb
xchg
arpl
pop
bound
hlt
loopne
clc
jg
mov
pop
fwait
scas
xchg
pop
aas
cmp
mov
sub
inc
add
aas
sbb
sti
loop
not
sti
cltd
enter
dec
jo
push
dec
aad
out
add
notl
or
dec
dec
jbe
push
mov
inc
add
add
jnp
add
mov
push
inc
mov
pop
jecxz
add
jl
xchg
pop
xor
cltd
jmp
and
mov
mov
jbe
movsb
les
cmpsl
inc
repz
cmp
scas
es
ja
insb
popa
sbb
sub
add
or
mov
xchg
sub
loop
stos
stos
dec
lods
inc
mov
lea
cmp
outsb
cwtl
jl
in
adc
lods
mov
cs
mov
aas
xchg
mov
loopne
jns
nop
cs
mov
addb
dec
out
add
outsl
dec
pusha
add
add
imul
pop
inc
addb
mov
outsl
test
pop
xchg
aaa
adc
add
out
sub
mov
add
pop
add
add
js
fwait
cwtl
cmp
xor
xchg
out
lcall
pop
test
xchg
push
xor
mov
daa
xchg
sub
mov
jg
fdiv
cmpsl
and
cmc
imul
idivl
ret
incb
add
adc
dec
dec
in
ljmp
xor
and
enter
cmp
add
sub
jae
jno
ds
sbb
jne
mov
xchg
pop
cmpsl
and
outsb
fldl
ljmp
or
sub
sbb
xor
fs
aam
xchg
push
and
test
pop
sbb
add
fistpll
pop
xor
xrelease
pop
stc
mov
ret
addr16
jo
shlb
add
test
or
lahf
mull
inc
mov
adc
add
push
test
in
or
sbb
lret
adc
inc
add
repnz
cs
into
add
rcl
and
xlat
fucomi
dec
das
stc
aas
xchg
cmp
dec
repnz
add
pop
sbb
loope
jae
out
outsb
das
or
jbe
jae
adc
pop
ss
and
ja
movsl
adc
sbb
add
hlt
add
arpl
sub
cmc
enter
arpl
mov
jo
jno
sar
dec
mov
inc
inc
stos
fs
ret
xchg
fs
ja
inc
les
push
fsubrs
jne
add
fisttpll
ret
cld
lret
mov
stos
mov
js
in
push
or
mov
jg
std
es
dec
loope
inc
or
ja
add
cld
pushf
xchg
js
addl
cmp
push
pop
sub
add
test
push
neg
repz
mov
icebp
jne
popf
scas
xchg
mov
push
movntps
pop
lock
push
scas
pushf
icebp
and
add
and
inc
jo
out
cmp
add
pop
cmp
push
add
mov
lock
mov
in
push
dec
out
out
imul
mov
mov
add
insl
in
jle
lods
aas
cmc
rorb
sbb
add
mov
xchg
jmp
enter
mov
outsl
mov
movsl
ljmp
sarl
lds
add
inc
cmpsl
or
dec
pusha
add
add
sbb
xlat
in
cmp
xlat
pop
ret
filds
lahf
popf
push
es
cltd
dec
inc
xlat
pop
repnz
jns
sbb
mov
mov
jbe
dec
xlat
mov
cltd
jecxz
push
fwait
inc
add
cmp
js
push
add
enter
scas
int
movsl
add
pushaw
add
and
add
orl
addb
mov
xchg
addr16
sahf
or
idivb
jne
mov
nop
add
mov
outsl
incb
sahf
mov
xchg
lea
push
xorl
fbstp
mov
stos
test
arpl
and
shll
fldenv
push
add
popa
sbb
cltd
jns
or
in
dec
aad
cwtl
sub
mov
nop
add
repz
sub
inc
add
add
pop
sbb
adc
push
fxch
out
movaps
jae
mov
fisubrs
fsub
mov
in
scas
ds
or
mov
rclb
aam
insb
push
mov
rolb
jo
cmp
int
fdivrs
add
push
add
and
xchg
rorl
mov
pop
mov
jno
add
jle
mov
push
je
jae
add
xchg
int3
mov
insb
sub
pop
and
adc
dec
pop
sbb
out
pusha
add
xor
ficoml
popl
insl
cwtl
sub
cltd
mov
outsl
cmp
jne
cmp
sub
xchg
mov
xor
push
jne
adc
xchg
push
pop
aad
mov
inc
add
add
inc
rolb
lds
and
cmovg
add
int3
jmp
inc
add
mov
and
lods
xlat
fmull
stos
or
mov
sarl
push
mov
inc
add
ja
adc
xor
add
in
adc
add
cmp
lret
push
jl
mov
cwtl
mov
movsl
lds
jo
pop
push
add
enter
add
push
jns
sub
xchg
popf
or
lahf
jl,pt
in
sub
jns
add
sarb
mov
xor
ljmp
fistpl
add
orl
or
xor
adc
ljmp
rolb
icebp
addr16
nop
add
pop
jo
out
fisubs
or
pop
test
mov
fisubl
add
jle
cmp
mov
pop
lea
sub
xlat
ja
xor
repz
fcmove
pop
xor
mov
jecxz
cld
or
lods
jecxz
dec
pop
dec
add
mov
pop
and
mov
mov
cld
dec
push
cmc
push
outsb
ss
fwait
lds
addb
fiaddl
sbb
stos
pop
add
mov
pop
jmp
xchg
outsb
pop
add
sbb
xor
loope
dec
mov
add
sbbl
adc
inc
andl
roll
nop
data16
pop
imul
add
inc
add
jo
xchg
sbb
sti
ds
lea
jle
mov
inc
add
or
cmp
in
sub
add
rcr
fsubs
int3
and
aad
shll
sbb
push
ret
adc
inc
add
outsb
js
in
data16
lea
pusha
add
lods
fs
popf
addb
dec
mov
jno
outsl
dec
pop
aaa
jns
data16
inc
push
add
std
inc
add
sub
sub
sbb
stos
bound
sub
bound
cmp
and
add
mov
mov
jb
dec
sbb
cwtl
popf
movsl
es
je
add
mov
push
mov
adc
add
add
bound
push
add
daa
jns
mov
jle
pusha
add
js
std
fdivrs
iret
popa
sub
int3
mov
push
movsb
out
je
mov
imul
jmp
jmp
rcr
cs
cmp
pop
iret
pushf
or
dec
movsb
inc
add
mov
lret
js
pop
dec
cmp
ret
movsl
mov
cmpsl
ss
push
xor
dec
out
dec
adc
add
add
add
lds
pushf
ds
cltd
test
fwait
add
pop
sub
pop
daa
xchg
popa
imul
aas
push
scas
adc
push
sub
add
in
jecxz
fs
mov
add
std
popa
jbe
out
mov
add
jbe
scas
xchg
cmpsl
sub
fstpl
idivl
fsts
add
lock
lods
fwait
pushf
outsb
lret
jne
and
sbb
add
pop
or
mov
jae
push
in
add
dec
pop
daa
rcrb
es
mov
adc
enter
xor
hlt
rorl
fisttpl
cmp
mov
sbb
loopne,pt
shll
add
pop
mov
lahf
xor
sbb
leave
inc
add
imul
mov
and
sub
inc
jge
jbe
shl
and
mov
loop
or
push
mov
test
ss
inc
add
pushf
sub
xchg
lods
jns
sub
in
jp
mov
movb
jbe
ficoms
imul
jbe
icebp
xchg
dec
pop
or
in
cmp
sbb
les
add
jb
jp
ds
add
iret
sub
add
xor
add
in
cld
push
xlat
test
mov
nop
dec
sub
push
rcll
sub
dec
loope
cmpsl
jge
xor
pop
adc
adc
dec
arpl
xchg
inc
int3
mov
dec
cs
sbb
mov
xchg
ja
dec
ljmp
ds
add
ret
cmp
lahf
mov
rolw
inc
add
test
add
inc
add
stc
dec
xorl
popa
ja
shll
addr16
push
add
mov
inc
add
movb
mov
xchg
into
push
leave
into
sub
in
jns
sbb
jae
mov
add
add
subl
mov
rolb
mov
aas
or
sti
jge
cmp
dec
addb
pop
pusha
add
mov
outsl
and
xor
xchg
dec
pusha
add
jnp
popa
xchg
inc
add
or
dec
sbb
mov
mov
add
add
jmp
push
push
and
pop
mov
gs
jnp
mov
je
xchg
jge
adc
mov
in
mov
shrl
and
adc
insb
inc
cltd
mov
outsb
ss
cmpl
lret
pop
jne
divl
int3
inc
ret
jns
daa
fidivs
and
mov
cmpxchg
xchg
movsl
popf
xchg
push
push
add
jp
loopne
xor
cmp
sub
not
outsl
xchg
add
push
add
divb
sbb
add
std
addr16
call
cmp
sub
add
add
jg
fdivrp
mov
loop
scas
outsb
jbe
mov
inc
inc
add
xchg
pop
jns
test
cmpsb
push
lcall
and
lods
dec
ret
push
outsl
dec
sub
out
jbe
or
lods
clc
test
or
cmp
cmc
call
add
sahf
and
xchg
pop
popf
daa
int
ficoml
push
sbb
cli
lock
push
stc
mov
cmc
pusha
add
pop
test
stos
dec
dec
inc
jb
iret
inc
sbb
lcall
and
cmc
stos
test
sub
out
or
inc
add
lods
int
xchg
mov
fiaddl
js
pop
pop
xchg
cmp
pushf
dec
std
es
xor
add
sub
cmp
je
jbe
push
or
insb
dec
mov
lret
lods
sub
mov
addb
js,pt
adc
daa
cli
push
jg
data16
mov
enter
pop
xchg
or
daa
mov
jb
lahf
and
inc
stc
idivl
mov
sbb
jle
mov
jmp
or
mov
movsb
addr16
inc
add
add
roll
sbb
mov
test
push
shl
fwait
pop
cltd
js
adc
and
test
mov
les
or
pop
in
xor
push
addb
mov
je
push
add
mov
mov
xor
push
add
push
stc
gs
popf
testb
rcll
arpl
mov
andl
shrb
jg
and
stos
and
xrelease
ret
loop
scas
cld
js
pop
sbb
gs
test
call
movsbl
daa
into
xchg
add
mov
lods
swapgs
nop
decb
cltd
sahf
add
add
pusha
add
xchg
jmp
xchg
bound
mov
adc
push
mov
aad
push
fs
xchg
jg
add
adc
add
insl
push
cmp
int
les
in
imul
pop
inc
add
add
jge
scas
out
icebp
insb
and
shlb
xlat
std
push
mov
test
pop
sub
jae
aas
imul
add
pop
jle
cmp
dec
pop
sarl
cmpsb
add
sbb
test
cmpsb
mov
add
jl
mov
mov
loop
test
ljmp
js
inc
sbb
iret
pushf
outsb
sbb
dec
lods
js
leave
bound
out
pusha
add
jge
lea
fwait
xor
add
or
push
push
out
mov
aas
gs
and
add
jno
inc
sti
push
pop
xchg
js
mov
jge
std
fs
push
and
cmp
pop
js
mov
push
inc
add
outsl
mov
aad
push
push
fisttps
dec
mov
adc
vcvtsd2ss
xchg
mul
ss
pop
sbb
outsl
mov
mov
xlat
add
ret
or
cmpsb
mov
test
xlat
stc
sbb
loopne
fst
pop
push
add
shlb
ret
pop
test
stos
inc
add
out
inc
add
sbb
or
test
add
dec
sbb
add
addb
jno
sub
mov
add
mov
jg
repz
fldenv
push
loopne
dec
out
push
cmpsl
pushaw
add
scas
sub
add
addr16
mov
adc
add
add
sub
push
in
inc
add
cmp
xchg
push
inc
aad
inc
mov
xor
push
push
das
sbb
xchg
loopne
shr
loopne
mov
out
mov
add
ret
cmpsl
mov
and
icebp
das
stos
dec
hlt
stos
inc
sbb
cmpsb
and
xchg
test
dec
jmp
pop
or
mov
fs
lret
gs
rolb
inc
add
push
addb
push
outsb
mov
loop
jmp
mov
out
xchg
jbe
icebp
pop
inc
out
xlat
sbb
push
push
jo
lock
push
inc
dec
xchg
call
movsb
repz
mov
loope
mov
mov
inc
add
pop
into
pop
lret
sti
addr16
inc
les
loope
jbe
fistl
cltd
ljmp
leave
mov
aaa
lods
aas
insl
outsb
inc
je
pop
scas
push
fisubrs
out
in
testl
ret
in
jmp
pop
pop
cwtl
mov
xchg
jp
std
out
rolb
int3
dec
mov
fstpl
adc
aam
nop
jp
loope
add
inc
sbb
dec
fnstcw
mov
inc
add
xor
roll
dec
lock
hlt
es
je
push
cli
loop
idivb
jb
imul
loop
dec
push
addb
pop
sbb
mov
jbe
jo
stos
adc
push
stos
sub
mov
push
jp
adc
cmp
inc
adc
dec
add
enter
push
mov
in
mov
sbb
adc
adc
data16
test
rolb
pop
ja
insb
dec
movsl
outsl
test
add
icebp
mov
add
xchg
repnz
xor
pop
pushl
cmpsb
push
jne
shr
xor
sub
add
adcl
imul
movl
rolb
add
sub
jg
sbb
sarb
or
sbb
and
arpl
push
dec
mov
jbe
insl
ds
dec
push
les
arpl
cld
push
mov
jbe
push
and
inc
and
add
mov
inc
add
aas
adc
ret
xlat
mov
sbb
rolb
mov
js
int
or
fisubrl
jb
push
jle
jecxz
arpl
mov
ljmp
mov
sbb
or
mov
int3
lcall
add
divb
sbb
add
pop
xchg
adc
sbb
add
adc
nop
repnz
add
add
pop
and
inc
add
jmp
loopne
aas
cwtl
adc
adc
xor
or
push
repnz
fmuls
stos
add
sbb
imul
rolb
int3
loope
pop
sub
out
movb
iret
pop
mov
xchg
xchg
in
cmpl
fisttps
hlt
imul
bound
call
das
es
pop
dec
jo
jne
inc
jge
ret
addb
adc
lahf
loop
ja
adc
push
add
mov
pop
mov
std
sub
fdivrs
or
push
aam
jne
out
jno
movb
add
adc
imul
or
cld
lods
leave
dec
inc
add
and
iret
mov
xor
movb
add
out
popa
fidivs
inc
add
and
call
sbb
sub
stos
inc
add
sbb
jo
adc
pop
pop
inc
call
xor
jns
iret
jge
mov
repnz
paddusb
aas
pop
sbb
repnz
test
lea
mov
lret
into
push
add
mov
stc
out
mov
es
sti
lock
and
mov
dec
out
into
mov
and
jp
in
or
add
add
pop
insb
push
sar
aad
jecxz
rcrb
outsb
pop
aas
int3
jne
and
stos
mov
adc
inc
jle
push
enter
push
lods
aaa
decl
add
push
repnz
pusha
add
push
inc
add
popa
fisubs
adc
inc
add
cltd
paddusw
xchg
int3
inc
movsl
lds
cld
jbe
imul
aaa
out
dec
addb
xchg
sub
lods
mov
je
test
jne
cltd
shlb
cmp
sub
adc
xlat
mov
cmp
and
or
adc
pop
cmp
jle
push
scas
or
and
inc
add
add
mov
adc
add
lods
xchg
xor
add
sub
rorl
insl
pop
pop
add
sub
or
aad
fucomp
js
cmp
mov
and
cli
xchg
aam
xor
jb
fmull
xor
sub
test
pop
push
ja
movb
test
ja
mov
mov
pop
rcr
sbb
add
cmpsl
or
xchg
movsb
sbb
mov
jnp
jno
aaa
leave
rolb
enter
sbb
jnp
arpl
insb
xor
xchg
jne
dec
pop
cmp
inc
add
dec
mov
sbb
add
add
fdivp
add
push
add
jecxz
mov
inc
jg
push
not
adc
nop
lcall
stos
xor
iret
cs
jmp
in
lret
inc
add
call
push
jmp
xor
decl
loopne
call
cltd
insb
movsl
mov
or
mov
shl
dec
xchg
mov
xor
fidivl
pop
out
mov
or
inc
jo
add
addb
add
cmpsb
in
push
addr16
xchg
add
mov
cltd
rorb
inc
add
xchg
in
add
notl
mov
hlt
sbb
cs
outsl
in
rcrl
mov
repz
push
in
cmp
scas
loop
xor
outsl
sahf
push
rcl
pushf
hlt
push
xor
mov
lret
jmp
hlt
xor
cli
inc
shrl
push
push
dec
or
out
jo
push
int3
sarl
dec
movb
add
in
das
insb
fidivrs
sbb
add
test
insb
mov
jmp
add
scas
cli
push
or
repnz
cmp
gs
mov
ret
std
adc
into
outsl
add
jp
lock
inc
add
adc
pop
mov
vmovapd
cmpsl
inc
add
add
add
lods
hlt
ja
add
js
nop
mov
test
push
sbb
add
loop
ljmp
dec
cwtl
in
int
mov
sahf
stc
mov
push
fcoml
push
add
or
adc
in
push
mov
lret
cmp
jge
and
rolb
dec
adc
aaa
rolb
sbb
mov
sti
fnstenv
pop
and
mov
scas
ret
pushf
and
or
mov
add
dec
jmp
cmpsb
pusha
add
cltd
push
add
sahf
dec
inc
add
mov
jbe
aam
dec
push
out
sti
and
add
insl
push
movsb
imul
dec
aaa
sub
outsb
or
add
sub
jne
and
loope
insl
lcall
sbb
and
inc
add
xor
sarl
mov
sbb
jbe
jo
int3
add
sub
push
mov
imul
cs
jg
es
scas
add
int3
outsb
pushf
push
jb
movb
xor
sti
push
add
repz
test
ljmp
cld
cmp
clc
sahf
rolb
push
aad
les
cltd
or
lret
addb
cwtl
insb
or
push
add
jl
stos
dec
pushf
std
and
xchg
pop
call
aam
repnz
rolb
repnz
mov
add
cmc
dec
mov
jbe
je
pop
test
push
xchg
pop
sub
lret
leave
je
mov
jmp
push
xchg
mov
pop
sub
insl
jno
pop
xchg
mov
hlt
ljmp
iret
xchg
sub
jbe
pop
stos
ja
cmc
mov
push
js
add
dec
sti
xchg
sub
xor
pop
xor
add
mov
xchg
imul
stos
addb
mov
add
push
pushf
pop
out
cmp
rolb
jae
ja
movl
inc
add
movsb
jnp
and
dec
or
or
mov
add
jns
jge
out
cmpsl
leave
icebp
xor
mov
add
pop
push
jmp
or
pop
cmpsb
aad
mov
aaa
jnp
push
sar
dec
out
lcall
add
push
adc
jb
pop
sti
mov
test
pop
mov
xor
add
jno
add
fadd
add
add
shrb
out
stos
sub
add
inc
fstpl
dec
jmp
shll
sbb
jl
jnp
jbe
sbb
add
sti
in
xchg
addr16
mov
out
push
icebp
cmpsl
cmpsl
clc
fdivrl
inc
ret
mov
dec
mov
and
ss
xor
add
jnp
xor
xchg
test
in
pop
and
sub
cli
mov
push
and
test
mov
out
call
jnp
push
hlt
inc
jbe
lock
pushf
dec
jbe
push
das
sarb
testb
movsb
stos
push
hlt
jl
lahf
jmp
pop
es
out
cmp
sub
xchg
pop
jbe
xor
mov
ror
add
sub
and
rol
lods
into
xor
scas
jo
mov
stc
orl
add
pushf
sbb
cmp
add
pop
incl
div
test
pop
inc
add
test
xchg
jle
add
pop
mov
ljmp
mov
and
mov
sub
jmp
je
cli
int
stos
mov
popa
repnz
sub
pop
push
sub
adc
pushf
repz
scas
repnz
dec
enter
and
jns
movb
add
testb
cmp
mov
add
mov
sti
pop
inc
stc
cmpsb
rclb
jecxz
jmp
adc
addr16
mov
cli
shrl
in
jb
or
cmp
dec
adc
fsts
dec
inc
add
jnp
imul
icebp
cmc
rolb
inc
add
sarb
fldl
add
addb
add
jle
fidivl
repz
insl
loop
xlat
daa
xchg
or
lds
xchg
sbb
inc
add
sub
add
jg
sar
into
clc
pushf
push
add
into
fildl
add
fcomps
xchg
cmp
mul
adc
xor
or
add
push
xchg
test
push
dec
add
push
jecxz
jl
cli
cltd
adc
pushf
mov
and
pop
push
scas
xchg
push
lcall
loopne
repnz
adc
or
clc
adc
insb
push
bound
pop
xchg
sbb
adc
call
paddb
movsb
pushf
add
pop
mov
rolb
scas
into
cmpsl
rorb
enter
add
add
fs
iret
dec
jp
lret
cli
push
movsb
push
and
dec
pop
mov
ds
cmp
push
mov
push
inc
cltd
filds
add
cmp
add
sti
cwtl
and
test
jne
xchg
sbb
mov
xchg
sbb
add
mov
or
add
stos
into
push
es
fs
mov
push
sbb
xlat
and
insb
push
dec
insl
inc
pop
adc
xor
push
jae
xor
shrl
push
cli
test
cwtl
jecxz
mov
es
lods
xor
nop
mov
imul
or
cmp
test
sub
jb
add
ficompl
fnstenv
cmp
lret
xchg
or
dec
and
mov
arpl
lock
add
insb
aad
stos
cmp
lods
pop
imul
leave
mov
addb
sahf
sahf
daa
cmpsl
out
xor
lods
add
cmc
cmp
lahf
or
xor
and
std
cmp
js
cs
mov
addb
addb
inc
fldt
xchg
add
cmp
push
adc
xchg
xchg
cmp
rolb
jle
pop
pop
out
fbstp
repz
idivl
adc
shrb
cmpsw
sub
pop
add
push
mov
rorb
not
sub
insl
cmp
jo
add
mov
add
clc
add
fiadds
add
mov
outsl
push
or
insl
in
mov
dec
lret
out
ja
push
adc
jle
and
mov
ds
pop
in
xchg
push
mov
lods
fldz
xorl
out
cmpsb
jb
int
inc
add
or
data16
ret
xchg
mov
insl
cmp
imul
stc
pop
iret
push
cmp
mov
test
push
xchg
addb
inc
add
and
xor
inc
add
sbbl
and
adcl
fsub
or
adc
pop
pop
cli
or
ret
bound
mov
inc
mov
jnp
pop
jb
cld
ss
nop
inc
add
icebp
and
push
xor
insl
or
mov
data16
cltd
dec
mov
add
pusha
add
outsl
imul
jne
lea
cmp
out
loopne
das
push
movsb
cli
out
addb
movsb
dec
sti
push
frstor
fstl
push
insl
rolb
jbe
mov
pop
sub
mov
mov
cmp
dec
filds
or
inc
mov
pushf
lock
leave
push
test
mov
movsb
push
repz
cmp
jb
popa
or
ret
addb
sub
add
sete
cld
test
addb
pop
mov
addr16
or
aaa
jns
push
mov
mov
aas
mov
add
cmp
dec
mov
ret
mov
jo
add
and
mov
inc
fadds
or
push
add
aaa
dec
aam
jecxz
mov
popf
mov
fcomp
adc
pslld
xor
scas
pop
in
fdiv
rclb
pop
sub
push
inc
add
dec
jge
xor
lret
push
stos
mov
fimuls
push
add
xchg
mov
add
pop
push
add
add
mov
ds
rolb
fmul
mov
jns
out
scas
adc
add
lcall
call
or
pop
sbb
aaa
xchg
inc
int3
push
pop
ss
movb
add
sahf
sbb
lods
loop
outsl
jnp
mov
sub
mov
adc
fsubr
mov
loopne
repz
inc
add
xchg
addr16
push
mov
int
clc
aam
insb
or
push
mov
jp
sbb
xor
mov
enter
jnp
hlt
subl
xchg
loop
fisttps
clc
int3
pop
xchg
mov
add
js
test
das
push
xchg
xchg
push
movsb
mov
add
sub
sbb
shll
add
fcompl
lea
or
xchg
popa
sub
mov
add
and
mov
pop
cmp
lock
ret
call
aaa
aaa
testb
out
pop
rcrl
in
rcll
hlt
popa
rcll
push
into
mov
daa
dec
movsl
adc
cmpsb
mov
mull
bound
push
mov
add
sbb
sbb
stos
pop
jmp
or
sub
aad
add
lcall
lods
stos
jp
mov
lock
std
les
or
dec
movl
out
cmp
sbb
ret
jmp
and
icebp
jns
ret
cmpsb
and
pushf
xor
popa
adc
ds
lret
cmpsl
jns
bound
add
xlat
mov
and
in
add
stos
pusha
add
in
jecxz
in
mov
popa
adc
clc
iret
aas
jo
bswap
ficomps
inc
cmp
jnp
cli
pushf
loopne
fisttps
push
xchg
push
out
jge
loopne
pop
mov
dec
sahf
pushf
jno
in
mov
cs
or
insl
lods
mov
fidivs
lods
aas
xor
dec
mov
jl
imul
lret
shr
dec
out
mov
xor
es
xchg
in
aam
mov
es
movsb
jbe
fdivrl
add
xchg
or
std
lahf
mov
cld
ljmp
fldcw
rcrb
and
fcmovbe
loope
add
into
push
pop
lods
out
ja
lcall
cmp
mov
mov
mov
add
arpl
jge
mov
into
pusha
add
xchg
sahf
add
rorl
call
repnz
aaa
fdivs
mov
mov
cli
mov
push
add
add
xor
sub
loopne
cmp
jmp
mov
mov
add
sbb
fadds
jnp
sahf
test
xchg
mov
and
xchg
pop
or
aad
js
sub
pop
test
cltd
test
mov
orl
xchg
loopne
mov
mov
cmpsb
pop
jae
xor
add
leave
test
cmc
sub
mov
cld
mov
xlat
sub
and
int
shlb
jge
je
dec
adc
add
jge
xchg
outsb
sub
out
cmpsl
movb
std
outsb
scas
jne
shrb
aam
fimull
xchg
xchg
push
stos
xchg
xchg
add
in
inc
add
sub
or
and
xor
rolb
rcr
cs
mov
aaa
aaa
ret
iret
pop
in
xor
out
adc
mov
std
ss
or
add
and
fs
lds
repnz
jae
arpl
inc
adc
repz
jno
push
or
mov
dec
mov
cmp
js
stos
or
or
adc
mov
in
ljmp
jno
sbb
add
in
push
mov
cmpsb
into
fcomps
jae
addr16
lret
jle
cmp
movb
or
inc
xchg
test
daa
inc
add
pop
iret
add
sub
inc
add
fucomi
cmc
cld
std
adc
aad
xlat
mov
lods
sbb
mov
out
gs
ds
insl
in
imul
add
nop
push
subl
sbb
jae
push
sarl
int
aam
sub
aad
movsl
lret
aas
add
xchg
and
add
dec
out
sub
bound
mov
inc
xchg
inc
iret
xor
pop
xor
inc
add
lret
hlt
loop
pop
mov
lcall
cltd
mov
pop
fs
cmp
int
xchg
stos
sbbl
aas
ljmp
rorl
inc
add
inc
push
cmp
add
rolb
mov
add
test
push
jns
mov
mov
mov
rolb
loopne
dec
adc
xor
lds
jns
jno
ret
sub
xchg
mov
stos
in
xor
pop
stos
in
pop
scas
mov
arpl
pop
xor
lock
add
add
adc
xchg
rclb
sbb
push
push
lcall
or
add
push
and
ja
lds
add
orl
mov
dec
out
jo
cs
fcomip
push
push
mov
xchg
push
mov
out
inc
adc
mov
jecxz
rorb
sbb
push
pop
add
stos
xlat
mov
adc
lock
pushl
addb
jl
int3
insl
pop
push
ds
add
xchg
enter
or
mov
or
repz
sub
mov
pop
or
jb,pn
xchg
addb
jecxz
outsl
xor
movsb
mov
push
or
js
stc
js
add
cmp
pop
imul
repnz
insl
popa
or
test
jns
and
out
stc
addl
add
xor
jg
mov
sub
test
movsb
xlat
mov
leave
and
or
sahf
adc
pusha
add
add
arpl
add
fs
jbe
aas
pop
pop
add
stos
adc
jp
bound
fcompl
jp
mov
leave
sbb
xchg
sub
mov
scas
icebp
xchg
shrb
loopne
test
adc
add
and
aas
xchg
scas
data16
adc
outsb
mov
cmpsb
pop
adc
fidivs
shlb
pop
lret
in
add
pop
sbb
add
xchg
push
add
sub
mov
jecxz
jp
mov
pop
dec
loopne
dec
mov
bound
push
mov
enter
dec
jl
add
sub
stos
ja
pop
xor
jmp
insb
adc
sbb
fisubrl
mov
inc
shlb
lahf
adc
jo
push
xor
out
mov
xchg
das
pop
movsl
lods
xlat
adc
add
fistl
cmc
sbb
mov
adc
into
fcomi
push
loope
xchg
sub
xchg
xchg
dec
ljmp
cmc
mov
jo
imul
pop
stc
cmp
sbb
test
push
stos
mov
sub
pushf
xor
add
mov
lock
in
imul
mov
pop
loop
add
outsl
popf
or
mov
inc
push
leave
repz
add
insl
mov
call
arpl
out
cmp
arpl
jmp
add
add
xchg
icebp
imul
add
rcr
mov
int3
and
sub
lea
mov
add
ret
add
add
fmull
ret
add
add
or
loope
xchg
aam
cmc
xor
xor
in
fucomi
push
and
mov
add
nop
aad
add
jle
aad
add
ficomps
addb
mov
movb
add
add
pusha
add
cld
adc
push
andl
test
jp
addb
dec
xor
jno
nop
int
mov
outsb
pushf
or
inc
add
out
xor
out
add
add
mov
stc
cmpl
xor
insb
inc
lea
dec
sbb
les
iret
cltd
cmp
outsl
out
push
mov
sub
xchg
imulb
mov
or
loop
fisubrs
popf
push
inc
add
icebp
pop
add
mov
jo
inc
add
add
dec
ja
xor
ret
mov
mov
incl
fsubrs
push
inc
sarl
jg
iret
push
pop
jl
inc
add
hlt
mov
loopne
fcompl
push
rcrl
inc
xchg
cltd
push
and
out
dec
sbb
repz
loop
lcall
push
add
scas
cmp
mov
mov
mov
in
scas
mov
mov
push
jno
hlt
in
jnp
movb
and
into
lret
xchg
add
mov
idiv
dec
fdivr
adc
sarl
ret
popf
bound
pop
mov
dec
sub
mov
into
or
and
add
dec
lods
in
flds
lcall
adc
std
fs
adc
push
sbb
sti
aad
cs
xchg
mov
in
bound
ds
push
cli
and
xor
ds
jmp
ficoms
pop
rolb
mov
add
out
movb
in
dec
fisubrs
ret
jl
add
cmp
data16
in
jns
xlat
mov
mov
add
dec
aam
push
mov
gs
xchg
vmovshdup
dec
in
jle
sub
mov
sbb
ffree
add
das
sub
jno
add
sub
insl
adc
lahf
and
std
sub
xchg
int
xchg
pushf
ret
cwtl
jae
push
aam
add
or
xor
add
sub
jb
ret
add
mov
or
pushf
pop
add
aam
flds
push
jae
lahf
jg
jmp
add
loopne
xchg
xor
mov
push
int3
or
inc
rcll
pop
push
jg
or
cmp
aad
and
xchg
jp
xchg
xchg
pop
mov
add
push
lea
jp
xor
dec
add
jmp
xchg
pop
je
adc
mov
push
movsl
cwtl
pop
push
cmp
jle
jge
scas
jl
cmp
icebp
std
inc
int
outsb
repnz
cmc
bound
xchg
data16
rolb
add
mov
pusha
add
mov
mov
movsl
popa
or
test
loopne
mov
jbe
stos
loop
inc
sahf
lods
xchg
ret
mov
adc
pop
jg
js
inc
add
mov
add
test
mov
jnp
add
xor
sub
std
inc
mov
mov
sahf
pusha
add
and
sub
add
das
inc
add
and
mov
mov
dec
and
es
or
pop
inc
add
jp
outsl
jns
sti
mov
add
addl
mov
fadds
imul
dec
cli
mov
in
lret
push
mov
loope
or
ljmp
inc
add
lods
add
into
std
dec
stc
ds
cltd
pop
jp
pop
xchg
push
sbb
pop
mov
sub
mov
xor
jae
outsb
xor
inc
add
add
sub
sbb
add
add
into
pop
jns
dec
xchg
insl
add
negb
pop
fsubrl
dec
mul
lahf
int
add
in
inc
mov
jne
mov
lahf
sbb
shlb
xor
and
test
xchg
inc
add
add
sarl
inc
add
insl
ja
pop
test
sbb
nop
dec
push
mov
add
aas
cmpsl
in
lods
loopne
add
test
sub
test
rcrl
mov
pop
shll
stc
sub
add
roll
jmp
jl
sbb
sub
mov
cmp
idivb
rolb
jl
cmp
sbb
add
xor
jns
pop
adc
dec
fwait
mov
scas
lret
jecxz
stos
outsb
icebp
addr16
int
addb
insb
pusha
add
add
add
add
pop
vpmacsswd
push
ret
cmp
push
dec
jg
mov
fnstcw
cmp
dec
cmpsl
dec
lcall
push
mov
mov
outsl
call
mov
in
lods
in
add
enter
mov
dec
adc
inc
add
add
add
or
inc
enter
stc
sbb
lods
je
inc
mov
out
push
sahf
adc
and
icebp
mov
sbb
notl
int3
addb
std
fsubr
xlat
dec
sti
leave
xor
push
in
addb
rcrl
stc
pop
iret
cld
imul
add
imul
jl
lcall
cmpl
add
mov
les
xchg
mov
or
xlat
int
mov
std
or
mov
mov
push
xlat
addb
stos
aas
dec
out
call
mov
add
jg
mov
movsb
fisttpl
pop
or
push
xchg
pop
dec
adc
adc
xchg
lods
sub
inc
jbe
cmc
inc
add
pop
jle
push
add
pop
or
sub
popa
iret
lds
les
loop
stos
ljmp
dec
push
push
xor
jmp
sub
or
leave
sub
pop
pop
sbb
cmp
aas
push
add
sub
scas
lret
fwait
push
test
and
sub
pop
addb
sub
das
mov
inc
add
or
xchg
inc
add
add
and
pop
pop
add
push
mov
pop
out
fisubs
add
jno
fucomi
mov
outsb
imul
rolb
jbe
add
jl
lahf
mov
fsubp
repnz
jecxz
pusha
add
in
mov
push
mov
cmc
cmp
test
jbe
popa
mov
add
addb
push
add
rolb
cmp
push
sub
dec
loope
aad
iret
mov
sbb
add
xchg
insb
push
mov
pop
xchg
mov
cmp
movsl
adc
add
out
add
pop
mov
test
pop
dec
out
xor
sbb
hlt
fwait
gs
xchg
push
mov
adc
jb
rcll
jno
insb
in
mov
pop
add
mov
sub
add
mov
and
aam
nop
jmp
enter
sub
mov
loop
in
push
add
and
loopne
jo
popf
arpl
pop
cmp
or
cli
pop
mov
and
cmp
add
movsl
mov
xor
push
push
dec
das
mov
loope
cmp
and
and
push
or
add
insl
mov
test
stc
rorl
or
add
add
cs
cmp
je
jne
add
mov
aam
or
pusha
add
mov
pushf
mov
push
iret
movb
push
cmp
jo
sbb
cmpsb
stc
repz
xchg
ljmp
pop
es
scas
push
shrl
push
jne
add
sbb
cli
mov
stos
mov
dec
dec
lahf
lcall
fisubrs
cmp
and
out
pop
out
xor
and
pop
cmp
cmp
mov
dec
data16
push
add
adc
lcall
idivl
adc
jecxz
roll
pusha
add
lret
mov
inc
add
xor
add
xchg
in
add
ret
xchg
cltd
scas
push
aaa
mov
sub
pop
bndldx
or
call
jg
jnp
cmp
push
mov
xor
or
jbe
xchg
int3
adc
jmp
adc
adc
or
mov
outsl
push
add
jo
fidivl
push
mov
mov
mov
xchg
mov
imul
mov
adc
and
mov
adc
inc
icebp
xor
icebp
adc
movb
test
je
addl
lds
mov
jo
jbe
scas
loope
inc
add
and
cmc
enterw
addr16
mov
mov
or
fadds
dec
pop
arpl
fbld
ret
daa
outsb
jno
mov
mov
add
add
mov
sub
xchg
test
add
add
inc
add
hlt
repz
mov
push
lds
push
pop
cmpsb
dec
mov
add
add
lret
pop
lcall
insb
or
movsb
mov
movb
push
push
add
in
mov
arpl
sub
xor
cld
mov
mov
push
adc
cmp
jnp
repz
movb
add
xchg
pop
jmp
out
xchg
xchg
mov
push
shr
movb
xchg
je
push
insb
test
loopne
dec
push
push
adc
xor
or
mulb
insl
xor
or
add
mov
add
mov
xlat
scas
cld
cli
sahf
int3
leave
fwait
pop
xor
add
add
add
fwait
ljmp
pop
mov
push
sarb
sbb
jle
xchg
sbb
add
pusha
add
addb
add
jl
pop
mov
sub
je
or
das
adcl
ret
popf
pop
jbe
aam
stos
mov
loop
movb
adc
push
inc
add
add
xchg
mov
enter
and
sbb
xchg
cmp
inc
pop
dec
pop
call
xor
add
imul
addl
test
pop
out
xchg
mov
aad
mov
or
add
test
adc
add
sbb
xchg
hlt
cltd
xchg
jne
sbb
imul
push
fs
add
das
mov
add
fistpll
jp
pop
loope
pushf
sarl
dec
mov
seta
popl
mov
add
mov
aam
fisubs
pop
cld
int3
sbb
mov
inc
vpackssdw
or
mov
mov
imul
sub
xchg
pop
xor
add
ret
int3
mov
mov
inc
add
add
cmp
add
ljmp
ljmp
add
mov
shrb
ss
xor
cmp
pop
lret
jmp
addb
cmp
hlt
je
xchg
fnsave
jne
scas
in
in
add
outsb
sbb
pop
xchg
mov
fstl
push
pop
aad
lret
fimull
std
bound
movb
test
or
dec
je
repz
jns
into
jo
cmc
add
std
imulb
sbb
xor
inc
inc
add
xchg
pop
stos
das
ja
push
imul
add
or
std
fistl
dec
fwait
or
cmp
mov
cld
ja
pop
leave
sbb
add
outsb
mov
xorl
inc
add
shll
int3
mov
loopne
adc
or
dec
movsl
pop
dec
dec
in
xchg
inc
add
mov
out
fadd
add
push
ds
test
mov
and
sbb
dec
fistl
scas
adc
xor
daa
out
sbb
pop
imul
mov
cmp
fs
add
scas
mov
movsb
lret
pop
shl
push
jl
aas
mov
xor
clc
shrl
cmp
ja
mov
arpl
mov
add
push
sub
push
pop
arpl
mov
push
dec
cmpsl
clc
ficompl
add
add
jl
inc
dec
faddl
movb
lea
jo
push
add
ret
daa
pop
lret
fimull
jne
xchg
xchg
add
inc
inc
add
xchg
push
mov
mov
mov
lret
or
dec
cmpsl
ds
cmpsb
in
mov
movsl
imul
adc
inc
xchg
loopne
add
rcrl
sarb
jae
dec
jmp
add
out
cmpsl
adc
and
dec
or
or
test
or
in
xchg
pushl
cmp
es
ficoms
cmpsb
adc
or
rorb
adc
inc
add
add
insb
cmp
adc
leave
cmp
call
sbb
mov
xor
mov
jnp
lds
xor
lds
or
scas
mov
arpl
stos
pop
push
sub
addb
mov
insl
fists
test
jp
loope
add
js
sub
mov
push
adc
fbld
add
adc
das
rolb
pop
mov
mov
movsb
pop
add
lea
adc
xchg
pop
shlb
lock
dec
popf
adc
add
xchg
outsb
pop
inc
add
into
cwtl
lahf
jmp
out
inc
add
aas
cmpsb
test
cmp
push
add
iret
idivl
sbb
push
adc
in
cmpsl
pop
test
pop
pop
insl
xor
rclb
ret
sbb
call
mov
or
call
lods
mov
push
cmp
lcall
dec
mov
adc
adc
jno
adc
inc
add
enter
ss
jg
and
cmp
jg
inc
add
push
jne
fisttpll
ret
push
push
les
and
fdivrp
lods
lods
mov
enter
jnp
add
mov
and
mov
aaa
nop
fisubs
ljmp
rcrl
push
daa
mov
out
and
lds
out
ret
add
push
fdiv
in
arpl
mov
icebp
push
popf
rorl
add
jbe
fmulp
js
in
bound
add
adc
aaa
inc
sti
lret
outsb
jp
aaa
icebp
pop
mov
mov
adc
les
jnp
in
pop
fisubl
inc
add
add
add
gs
adc
movsl
daa
adc
add
shl
jmp
sub
ds
mov
cmpsl
out
xor
shlb
movsl
mov
pushf
psllw
and
jmp
pop
es
enter
insb
lea
aaa
cmp
sbb
rcll
int
xlat
sbb
push
cmc
aad
lcall
pxor
inc
add
cltd
and
daa
outsb
fstps
mov
and
jo
imul
sete
mov
mov
stos
inc
add
pop
out
addb
mov
adcl
push
add
add
dec
mov
or
fdivrs
orl
fistpl
mov
xor
xchg
rolb
out
popa
pop
jnp
pop
test
sbb
cmp
dec
add
jmp
push
mov
dec
xor
add
repz
js
adcl
gs
pop
fscale
stc
iret
cltd
or
aam
mov
mov
jb
icebp
fsubs
aam
mov
pop
mov
push
push
mov
out
adc
sbb
mov
bound
mov
xor
add
push
in
push
push
mov
push
loope
mov
adc
and
inc
sub
inc
inc
or
push
dec
rclb
add
add
insl
dec
jb
xchg
or
bound
into
movb
out
inc
jb
inc
insb
cmp
arpl
repz
add
in
push
fildl
add
push
push
test
mov
jo
test
pushf
jmp
les
mov
dec
inc
add
loope
add
fsubp
loopne
sub
sub
xor
inc
push
pop
in
xchg
aad
rol
dec
pop
cmp
push
push
inc
add
push
lods
imul
mov
add
lret
sbb
stc
pop
pop
push
pop
fisttpll
mov
jnp
jl
cmc
popl
lock
test
push
nop
stos
out
lcall
xor
cli
or
lds
lret
cmc
pop
or
shr
sub
popa
and
xor
push
jge
mov
inc
push
jg,pt
pusha
add
inc
mov
ds
leave
lahf
pop
mov
mov
aas
js
mov
add
ds
cmp
test
lock
add
pop
flds
shlb
mov
jo
lods
daa
push
jmp
lcall
cmp
mov
add
or
mov
pop
mov
cmp
stos
adc
sbb
sarl
add
fwait
imul
loop
add
adc
sahf
call
movsl
js
jl
aaa
movsl
push
mov
lds
int3
out
mov
cs
push
dec
cmpsl
jg
cmp
shlb
sbb
pop
xchg
lds
add
xchg
push
movb
dec
add
out
loope
push
adcl
test
or
dec
inc
mov
inc
cli
ss
cmc
test
test
sarl
test
mov
repnz
push
ret
scas
ret
dec
pop
sbb
ret
repz
jnp
sub
xor
outsb
pop
push
in
sbb
push
sbb
sti
les
dec
addb
adc
fnstsw
dec
and
flds
ja
add
rcl
std
inc
jnp
in
rorb
clc
and
add
divb
or
outsl
pop
aad
push
inc
add
cmp
mov
ret
cltd
arpl
insl
jbe
and
sub
add
icebp
inc
pop
stos
dec
jbe
ret
das
cmp
jmp
hlt
hlt
dec
dec
out
adc
addb
outsl
cmp
movsl
or
cmp
adc
fadds
jnp
pop
adc
add
jecxz
cld
push
inc
add
cmp
cmp
pop
and
fdiv
movsl
lea
sahf
ja
int
jecxz
jae
add
dec
jb
or
pop
xchg
or
cwtl
out
inc
out
adc
push
mov
sbb
movb
jecxz
xor
popa
scas
sbb
stos
sbb
pop
movsl
push
addb
sti
loop
ret
sub
push
add
fcmovnbe
sub
xchg
movb
aam
xorl
int3
push
imul
add
inc
mov
pop
cwtl
stos
mov
mov
cmpsl
pop
mov
test
bound
jecxz
add
shrd
sub
fisttpll
fcomps
pusha
add
add
jns
rcr
push
cmp
jbe
push
xor
insb
pop
movsb
sub
mov
inc
add
jae
leave
xchg
push
jg
mov
add
mov
loopne
push
mov
add
sub
imul
out
insl
nop
dec
fdivrs
push
mov
jnp
cmpsl
lock
outsb
cmp
jo
outsl
mov
in
mov
sbb
push
sbb
negb
sahf
out
mov
add
xlat
fstl
outsl
mov
jmp
je
xor
add
pop
jne
pop
lcall
adc
xchg
rcll
cmp
movsl
or
movsl
fadd
jmp
push
outsl
cmpsb
mov
fisubrl
pop
mov
insl
fbstp
in
jne
mov
imul
lcall
daa
pop
addr16
imul
cmp
es
scas
add
push
mov
sbb
mov
call
fldl
bound
ret
pop
and
aad
or
movb
es
xor
les
test
fwait
sahf
movb
mov
out
leave
lret
and
lods
mov
fiadds
hlt
jmp
add
arpl
or
inc
jb
jmp
sub
shlb
cmpsl
les
stos
fsubl
into
xor
or
sub
or
xchg
mov
mov
add
or
push
int
cmpsb
pop
push
sbb
enter
sbb
inc
sbb
arpl
pop
out
cld
addr16
fsubl
fidivrs
cmp
lcall
pushf
push
jg
add
jl
xor
into
xor
ds
push
sub
test
lods
mov
inc
add
cmpsb
dec
mov
xor
and
jg
jno
mov
cmp
mov
cltd
scas
je
mov
add
dec
addb
jae
push
mov
sub
leave
inc
add
fs
rcll
fs
popl
adc
fsubrl
sbb
fwait
notb
into
pop
dec
stos
mov
add
fadd
add
and
push
mov
lods
jge
add
ds
or
jno
lahf
imul
icebp
fstps
xor
pop
cli
incb
mov
daa
mov
sbb
insb
mov
enter
jge
cmpsl
and
add
cltd
fstpt
or
test
jno
pop
jne
xchg
rep
jle
insb
xchg
int
sbb
lret
sub
mov
jb
mov
lcall
push
add
js
pop
shl
into
stos
pop
addr16
adc
pusha
add
mov
xchg
mov
sub
add
xchg
das
pusha
add
sbb
movsb
andl
int3
stc
bound
add
jbe
push
rol
or
dec
cmc
jg
add
inc
add
pop
add
mov
sbb
mov
cmp
xlat
lds
mov
mov
data16
les
mov
lcall
sub
jg
jne
dec
dec
push
cmovp
xor
push
movl
fisttpll
pop
sub
sub
add
gs
mov
dec
mov
shlb
imul
lret
mov
or
push
rcll
stos
mov
add
rorl
sub
data16
insl
xor
cld
jbe
push
enter
int
and
cmp
xlat
cmc
and
or
mul
cmp
sti
lret
cmpsl
mov
in
adc
add
lahf
or
push
push
ja
sbb
add
dec
jp
dec
test
out
add
push
sbb
pop
and
repnz
idivl
mov
es
add
xor
loopne
xchg
sub
sbb
sub
addb
dec
sbb
add
les
enter
icebp
inc
add
das
lcall
sahf
xchg
cs
xor
jle
xor
push
fistl
imul
mov
dec
fcoms
jmp
out
pop
mov
mov
jnp
aaa
insb
xor
adc
xchg
mov
movb
shr
pop
adc
cmpsl
mov
into
add
xor
in
fistps
mov
xchg
sbb
cmp
sub
add
fcmovnb
mov
and
adc
negb
mov
mov
pop
mov
or
push
cwtl
stos
jae
jecxz
mov
not
mov
cld
jns
stos
in
push
bound
xchg
add
aam
or
stos
icebp
imul
repz
lods
leave
pop
adc
push
mov
test
into
outsb
jb
stc
je
pmaddwd
add
mov
addb
loope
movb
ds
mov
xchg
imul
xor
adc
sub
scas
xlat
xor
ret
push
jecxz
xor
loop
lods
ret
jp
dec
xor
fstpt
xchg
js
out
int3
push
insl
mov
cwtl
pop
mov
lcall
add
pop
push
mov
clc
out
xor
jecxz
add
and
pop
popa
dec
dec
add
enter
lods
scas
outsl
aad
push
test
test
insl
add
in
add
pop
mov
ljmp
pop
ret
insl
dec
ss
pop
lock
sub
sub
or
rcrb
jo
clc
loope
pop
lods
push
loop
cmp
adc
loope
out
ds
call
dec
inc
add
push
push
add
fst
fnstsw
add
cli
lods
icebp
mov
inc
add
sbb
ret
jp
cmpsb
out
sub
stos
push
rol
add
adc
push
repnz
iret
inc
in
out
je
xor
rol
mov
add
sbb
pop
xor
or
pop
push
arpl
or
add
jl
lahf
lcall
movl
add
sbb
mov
inc
add
dec
pop
icebp
stos
sbb
lock
push
mov
add
aaa
push
data16
stos
shrl
test
xlat
imul
push
add
mov
adc
pop
pop
sbb
jmp
jne
sar
push
clc
jg
and
cmp
das
dec
jge
push
fimuls
pop
repnz
lock
pop
adc
inc
add
movsl
xchg
dec
mov
imul
inc
add
inc
add
mov
inc
add
jge
scas
mov
test
pop
xchg
cmp
push
cmc
aad
lods
daa
xchg
push
adc
mov
jno
xchg
cmpsl
lods
xor
or
shll
xor
mov
fimull
mov
enter
iret
sub
ret
adc
pop
and
push
add
sbb
push
mov
xchg
test
aam
and
out
stos
ret
icebp
cltd
mov
cmc
push
add
fistps
ss
pop
jg
fsubrl
cmp
cwtl
push
and
sub
and
das
pop
jle
hlt
sub
adc
mov
push
jnp
pop
leave
nop
cmpl
inc
add
cmpsl
mov
dec
mov
pop
sbb
sbb
movb
cmp
std
orl
lods
push
and
or
out
inc
int
and
mov
adc
xor
nop
xor
adc
stos
out
repnz
fstps
fwait
cmpl
sub
ljmp
mov
sbb
jmp
test
fwait
cmpl
add
andl
xchg
push
sbbl
push
mov
jo
mov
mov
nop
and
and
mov
hlt
fwait
fwait
aad
pushf
mov
addb
sub
mov
pop
mov
add
dec
ljmp
mov
jp
pusha
add
aad
add
lahf
pop
sub
push
add
stos
xor
cmp
inc
add
dec
int3
ljmp
mov
clc
addb
in
bound
shlb
in
movsb
xchg
out
mov
add
add
push
mov
mov
ret
mov
es
jp
pusha
add
into
scas
mov
cmc
idivl
dec
dec
loopne
xor
pusha
add
xor
loope
dec
pop
cmp
cld
into
add
das
mov
push
add
push
adc
lock
and
jo
push
jns
dec
outsb
and
movsb
sub
cs
jmp
jae
sub
das
cmp
add
cld
cmp
int
add
dec
mov
sbb
shlb
sbb
cmc
sub
enter
sti
sub
pop
ljmp
and
sub
ljmp
dec
loop
add
sbb
cmp
out
lods
stos
stos
sahf
lds
bnd
mov
stos
xchg
cmp
lretw
xor
shrl
push
add
lcall
or
jae
pop
mov
xchg
mov
mov
dec
add
xor
add
sub
jecxz,pn
add
std
add
push
cmp
add
push
mov
push
or
sub
add
mov
int3
jae
cwtl
xor
popa
jl
xchg
add
xlat
lds
xor
js
outsl
ret
jp
mov
add
add
cmp
enter
inc
add
jnp
xchg
addb
cmpsl
cmp
jbe
lea
pop
mov
popa
or
stos
subl
cmp
gs
add
add
insl
out
je,pt
or
ja
push
mov
fs
dec
fsubl
ja
add
notl
orl
dec
stos
popf
gs
outsb
loopne
fcomi
jge
in
inc
add
add
into
jmp
dec
dec
xor
adc
test
mov
jnp
add
sub
pushf
lea
jae
les
xor
mov
push
and
aaa
adc
pop
cmc
dec
fsubs
push
out
pusha
add
sub
adc
lock
call
mov
sub
sub
aas
cmpsl
xchg
sti
jmp
jg
rolb
dec
xor
in
mov
mov
xor
bound
xchg
pop
rolb
jp
jo
mov
mov
repz
adc
mov
pop
loopne
call
imul
movsl
jmp
pop
fst
movsl
arpl
pop
das
in
je
adc
sbb
sarl
cmp
dec
fnstcw
movl
lret
test
stos
mov
cwtl
cmp
stc
mov
rolb
xor
aad
xchg
pop
js
out
pop
movb
jb
jg
sub
jb
add
dec
scas
ret
out
add
dec
mov
push
push
loope
lock
mov
stos
xchg
aam
mov
add
cvtpi2ps
cmp
jo
lds
sbb
stos
adc
sub
jle
and
shrb
movsl
cmp
jnp
dec
jecxz
mov
ss
cmp
addb
dec
aas
xchg
les
push
add
cs
mov
adc
pop
loop
push
xor
sbb
add
mov
mov
les
test
push
sbb
cmp
popa
popa
xor
mov
pop
sbb
test
dec
xor
icebp
or
test
fsubrp
popl
inc
pop
test
aas
inc
add
jp
mov
add
ret
scas
or
xchg
rolb
xor
add
sbb
cmp
mov
inc
add
add
pop
cmp
inc
gs
aad
inc
fwait
lods
and
sub
out
jae
popf
mov
nop
pop
inc
mov
pop
pop
sub
shr
push
fcomps
dec
fsubl
cmp
gs
dec
pop
mov
ljmp
add
adc
dec
test
mov
je
lea
dec
sub
das
cmp
out
xchg
mov
daa
nop
test
pop
push
stc
call
mov
popa
mov
ss
add
add
adc
mov
sbb
sbb
xchg
je
or
testb
mov
out
aas
pushf
jo
add
dec
xchg
or
aas
cmc
in
sbb
pop
loop
inc
push
lds
mov
cwtl
dec
js
xor
ljmp
call
mov
sub
push
hlt
pop
mov
mov
fimuls
adc
ret
iret
cmp
xor
add
aaa
or
es
loop
and
push
jmp
je
sub
xor
jmp
andl
rolb
mov
rcrl
aaa
sahf
dec
mov
add
fwait
inc
rorl
in
gs
inc
jns
xchg
cmpl
inc
popa
xor
push
add
mov
and
add
push
add
adc
mov
mov
jmp
ret
xchg
mov
loope
jo
sbb
add
mov
test
push
inc
add
cmp
aad
test
cld
rcr
fxtract
roll
nop
mov
jp
xchg
pop
stos
repz
adc
js
sarl
cmp
adc
test
add
dec
pop
clc
cmp
movsb
add
shr
and
jge
jmp
xchg
divl
or
sbb
inc
enter
cmp
xor
xchg
xorl
sub
jno
and
xchg
stos
imul
addb
push
jmp
fsubrs
dec
shrl
cmp
sub
mov
pop
add
mov
in
xchg
sub
test
js
jnp
mov
loope
add
add
pop
pop
sub
add
jmp
add
pop
adc
stc
and
ret
and
or
xor
and
fisubrl
cmp
loope
pop
and
movsl
idivl
movsl
pop
add
fmull
inc
sarl
pop
shll
iret
sub
pushf
ljmp
fisttpll
or
je
push
and
jp
adcl
insl
xor
sbb
icebp
lea
cld
pop
sub
jge
add
jmp
subl
mov
pop
stos
pop
jmp
xor
pusha
add
pop
aam
cltd
mov
in
inc
add
ret
into
dec
jecxz
test
mov
xor
bound
inc
out
inc
add
inc
push
loop
add
xchg
or
in
jbe
add
dec
xchg
cmp
cltd
scas
push
sub
mov
add
mov
add
xchg
adc
mov
mov
mov
fsubrl
ljmp
je
jbe
add
and
gs
push
lea
dec
lret
push
add
pop
cmp
add
iret
and
jo
loopne
pop
xor
xchg
cwtl
sti
cmpsb
and
xor
mov
add
out
xor
pop
ret
test
or
ret
imul
ficompl
pop
cmp
xlat
pop
jno
mov
add
aad
mov
dec
popf
outsl
and
mov
lret
cltd
jne
bound
imul
xlat
mov
cmp
in
les
shrb
push
imulb
xchg
mov
xor
dec
idivb
and
adc
xor
negl
mov
sub
add
sub
add
or
jbe
push
add
jbe
addr16
imul
sub
shrl
adc
mov
sbb
lcall
add
cwtl
xchg
in
mov
adc
add
fsubs
and
mov
sub
sbb
lahf
icebp
mov
fsubl
xor
aaa
loope
sbb
mov
add
mov
lds
das
add
into
cmc
hlt
out
inc
add
mov
fistpl
or
ja
mov
mov
mov
jo
xchg
movsb
dec
loop
xchg
push
cmpsb
jmp
mov
pop
mov
stos
stos
push
aaa
je
addb
add
pop
mov
pop
andl
int
mov
imull
mov
into
xchg
pop
or
into
and
pop
les
pop
fwait
xchg
lcall
scas
and
sbb
xlat
xchg
push
pop
shl
mov
lods
push
add
inc
int3
icebp
dec
cld
cmp
xchg
pusha
add
push
lahf
or
std
xor
popa
test
rcll
loop
scas
fst
sub
push
lods
adc
jle
xchg
insb
jno
insb
adc
xchg
notl
and
xchg
cmp
jne
sbb
add
push
push
movq
sbb
push
inc
add
out
jl
add
loop
cmp
xchg
in
add
out
out
add
pop
clc
xchg
push
pushf
lods
cmpsb
inc
clc
mov
sub
xor
jecxz
cltd
stos
inc
jl
lods
enter
add
rolb
push
lock
mov
or
xchg
push
leave
fsubs
enter
and
loope,pt
xchg
popa
mov
mov
aaa
jns
sbb
aaa
add
scas
cmp
out
movsb
inc
add
pop
sub
or
adc
stos
std
je
and
repnz
push
cmp
fnstenv
popa
insl
jnp
mov
rolb
add
dec
jle
addb
stos
mov
or
add
scas
jg
xchg
jle
push
loop
insb
shlb
lret
arpl
iret
lret
pop
test
cmp
mov
jb
movb
add
push
lods
addr16
fistpl
pop
imul
jnp
in
fs
xlat
int
add
xchg
push
add
mulb
pushl
test
push
pop
pop
arpl
pop
iret
and
jbe
push
adc
stos
or
add
add
test
jno
add
pop
or
sbb
inc
pusha
add
xchg
xor
add
and
ficompl
sub
dec
inc
add
mov
roll
rcll
mov
jne
imul
into
in
stos
adc
cmpsb
inc
pop
stc
cld
lea
orl
rolb
or
cs
fwait
addb
lods
xchg
add
clc
add
jp
add
mov
jg
mov
and
mov
loop
testb
fmuls
xor
loop
fdivr
push
add
cmp
mov
jb
repz
ret
das
gs
fldcw
jp
sbb
mov
mov
cmp
iret
arpl
inc
test
push
scas
xchg
aad
add
inc
arpl
data16
jmp
cmp
pop
sahf
imul
mov
pop
pop
mov
les
ss
jae
sbb
cmpsl
push
subl
dec
add
xchg
jb
pop
iret
cmpsl
test
cmc
jge
lock
sti
push
lods
lahf
icebp
lcall
out
mov
test
leave
repnz
add
mov
mov
cmpsl
xchg
xchg
push
mov
fs
imull
stos
xchg
sahf
in
xchg
leave
lods
and
add
sbb
insb
stos
pop
push
fsub
aaa
add
inc
add
xchg
sbb
imul
dec
les
es
add
outsl
fnsave
outsb
or
inc
mov
mov
inc
add
sub
int
push
push
add
push
movsl
jb
add
loope
add
outsb
mov
dec
fwait
cli
imul
add
insb
mov
inc
add
add
call
mov
pushf
fucomp
out
loopne
inc
pop
jmp
in
jno
mov
push
in
add
ja
mov
pop
mov
sbb
clc
mov
sti
push
adc
add
mov
add
hlt
jne
add
push
add
push
hlt
iret
out
pop
jg
dec
jg
and
sub
and
cmpsl
add
lds
outsl
pop
xor
imul
outsl
cmp
fsubp
testl
adc
mov
pop
sarl
dec
dec
aaa
pop
pop
xchg
cmp
inc
mov
sahf
xchg
inc
scas
cmpsl
lods
dec
xor
pop
cmpsb
jge
add
xchg
addb
mov
jnp
add
movsl
daa
negb
fistpll
call
add
daa
add
sub
add
call
jp
xor
mov
movb
addb
repnz
insb
out
xchg
mov
pusha
add
mov
add
ljmp
rolb
mov
fistps
scas
xchg
jmp
popf
pusha
add
nop
lret
cli
stc
dec
or
hlt
push
cmp
pop
pop
loope
add
in
adc
pop
push
roll
or
add
cmpsl
out
jb
pop
xor
insb
inc
sbb
xchg
enter
and
push
push
add
out
cmp
mov
cmp
addb
add
adc
dec
out
and
jo
je
dec
sub
je
jge
xor
xchg
push
mov
push
mov
insl
push
push
adc
cmp
call
inc
add
push
sub
sub
ffreep
cmpsl
lahf
popl
add
dec
das
add
jge
add
mov
push
lea
lret
push
aaa
out
leave
ljmp
ds
dec
xchg
jp
add
in
push
inc
add
push
push
call
dec
ret
popa
in
subl
push
cwtl
ficoms
bound
popf
sub
adc
pop
mov
lahf
movb
mov
mov
fistpl
inc
add
xchg
aad
sbb
outsb
shlw
insl
decl
dec
je
dec
cltd
sbb
mov
pop
lret
adc
xor
sub
getsec
sbb
leave
in
les
loop
es
enter
add
jmp
mov
push
movb
aaa
std
mov
imul
stos
jge
in
add
shlb
sbb
negl
call
dec
test
nop
sub
jne
dec
pop
xor
sub
aam
ja
sbb
lock
pop
or
add
sbb
lds
lcall
ds
cmp
push
or
loopne
addr16
pushf
frstor
ds
cmc
add
inc
mov
push
cmpsl
pop
in
push
jl
jle
out
inc
add
addb
fiadds
mov
cmp
dec
pop
cmc
test
ljmp
jmp
test
loopne
push
mov
insb
sub
add
pop
test
cltd
decb
jg
addr16
div
out
cmp
stc
clc
loope
shll
or
jb
movsb
jg
mov
pop
dec
aaa
inc
add
jle
out
data16
inc
insl
stos
adc
adc
sbb
jb
xor
mov
pop
lock
je
xorl
mov
pop
sbb
dec
aam
in
xor
or
push
pop
std
cld
dec
mov
movsl
xchg
mov
in
clc
scas
loop
aad
add
loope
loope
xchg
sbb
push
fwait
sbb
inc
add
push
push
or
add
xlat
xor
jge
inc
arpl
aad
add
addb
shll
jp
pop
movb
jbe
dec
ds
ja
and
pushf
mov
mov
sbb
dec
jbe
out
mulb
xchg
cmp
add
mov
adc
mov
dec
push
inc
addb
mov
jge
push
pop
inc
add
add
daa
pushf
push
idivl
pop
or
mov
or
cmp
xchg
jbe
jg
jbe
add
movsl
ss
sub
mov
add
push
mov
sbb
insl
push
or
pushl
out
or
adc
jne
mov
mov
gs
aas
push
jae
fdivrs
fnsave
std
fimuls
shll
bound
push
inc
inc
pusha
add
nop
push
test
mov
xor
insb
xchg
fs
iret
sahf
test
sti
jbe
sar
ss
cwtl
dec
jge
mov
add
mov
inc
mov
sub
mov
roll
mov
xchg
mov
shll
in
dec
dec
push
push
out
or
add
pop
test
or
js
bnd
cli
jnp
add
jl
or
pop
scas
add
mov
jecxz
das
out
shll
psllq
add
cmp
clc
adc
mulb
addb
and
lock
aad
ss
fldt
pop
push
cmp
cli
andl
fwait
adc
sbbl
xchg
ret
add
adc
jle
clc
add
jle
std
add
fwait
sub
into
mov
inc
pop
jg
mov
in
push
jmp
mov
pushf
insl
mov
ror
leave
mov
cmpsb
sub
shll
repz
add
std
or
ss
add
mov
xchg
in
jmp
movb
out
and
bound
addr16
jmp
outsb
lahf
or
mov
and
fildl
aad
ja
mov
sbb
xor
fldcw
sub
in
and
push
fwait
mov
stc
into
ljmp
test
clc
es
fimuls
daa
cmpsb
mov
sub
dec
xor
inc
ja
nop
add
inc
add
in
insl
inc
outsb
sbb
xor
add
push
cmpsl
out
icebp
xchg
mov
lea
pop
loope
add
out
dec
ret
push
inc
fwait
or
add
push
test
xchg
inc
push
mov
mov
scas
test
push
test
insl
xlat
out
pop
cmp
add
pop
add
ljmp
lcall
cs
mov
pop
xchg
ret
aaa
jg
arpl
mov
jns
orl
add
mov
adc
inc
add
gs
ficompl
lret
mov
clc
insl
pusha
add
imul
sbb
in
mov
imul
mov
addb
xchg
dec
cmp
mov
loop
xor
imul
lcall
stc
sahf
in
xchg
lret
hlt
or
add
adc
add
jecxz
jge
add
pushf
dec
cli
and
stos
arpl
add
stc
scas
scas
xor
or
bound
mov
rorb
lods
popa
pop
test
and
movb
inc
add
push
jecxz
push
push
jnp
push
fstpt
add
loopne
in
lret
or
pop
sahf
loop
test
cmp
sub
push
dec
xchg
aas
int
pop
das
test
and
mov
out
imul
dec
mov
pop
mov
mov
inc
sarb
push
in
inc
add
cmp
pop
daa
push
pop
sahf
data16
inc
add
push
inc
or
add
push
xor
rolb
add
add
cmp
xor
pop
push
or
mov
adc
mov
clc
jl
add
sbb
push
xor
incl
nop
xor
inc
jbe
mov
push
arpl
iret
loop
shrl
lcall
sbb
rolb
andl
mov
mov
dec
mov
jb
idivl
sbb
or
out
or
addr16
mov
jg
sbb
add
add
add
xchg
push
out
xchg
je
jg
in
lret
jnp
andl
js
sar
cmpsl
leave
data16
sbb
mov
cmp
in
dec
inc
add
sub
idivl
jg
add
jmp
inc
or
outsl
into
xchg
mov
mov
mov
xchg
push
xor
push
or
add
pop
push
jmp
mov
add
js,pn
pop
or
sbb
push
bound
push
cmp
add
loop
pop
xchg
jae
add
rol
testl
pop
adc
jp
xor
mov
add
lods
xor
add
mov
insl
movsb
xchg
mov
in
pop
arpl
sbbl
addr16
into
mov
sub
mov
imul
add
lods
ret
mov
adc
pusha
add
pop
xchg
pop
adc
mov
jge
pop
mov
fstpl
jge
testl
cmp
mov
adc
inc
add
add
fnstenv
adc
imul
add
test
in
pop
jg
pushf
sub
xchg
addb
cld
ds
add
test
mov
mov
ja
inc
mov
cmp
and
or
push
dec
stc
push
fcmovnb
sbb
push
repz
or
movsb
sub
xor
idivl
push
aam
mov
int3
sub
sub
lock
sub
inc
fiaddl
cmpsl
xchg
call
mov
cld
std
fildll
int
test
popf
xchg
cmc
jae
add
xchg
lea
inc
add
cmp
insb
xor
xchg
mov
out
cwtl
push
imul
mov
push
mov
add
push
mov
lods
cltd
addb
xchg
sbb
and
mov
cmp
pop
push
repnz
rol
test
adc
sub
cmp
inc
add
jno
and
or
dec
fdivs
xchg
jb
divb
sbb
dec
adc
sbb
popa
pop
push
bound
or
addr16
xchg
scas
pusha
add
pop
hlt
push
loope
add
rorb
xor
leave
mov
mov
xor
int
mov
adc
dec
cld
scas
popa
int
daa
xor
mov
movsb
mov
add
sub
fistpl
cmpsb
lea
sti
xchg
adc
dec
idivl
ret
or
add
int
jnp
and
mov
movb
nop
xlat
push
adc
lcall
fsub
cmpsb
lret
cwtl
jo
mov
repz
push
mov
test
cmp
xor
xchg
ljmp
push
scas
int3
inc
add
rclb
cmpsl
inc
mov
or
repnz
jnp
andl
lret
pop
ret
cmpsl
push
pop
mov
cs
scas
int
fmull
ret
addb
jecxz
das
in
mov
pop
inc
add
add
mov
sbb
adc
js
pop
pop
add
loope
mov
movsb
sbb
xchg
rorb
mov
sub
vorps
aad
lods
ss
addb
loopne
and
jg
dec
lcall
fs
jns
pushf
lods
test
mov
repz
jle
or
push
push
xchg
clc
sub
addr16
xlat
jle
shrl
es
fwait
movb
cltd
shll
sub
inc
add
cmp
mov
push
hlt
int3
mov
jns
imul
jp
enter
out
lods
addb
shll
add
sbb
dec
inc
push
repz
int
icebp
in
sub
sbb
ret
int
sbb
add
mov
addb
nop
add
jns
data16
sbb
fsubs
outsl
xor
mov
cmp
rorl
pop
mov
dec
fstpl
repnz
jne
cli
cmpsb
movsb
loop
and
out
out
pop
jg
push
mov
dec
add
xchg
cmp
mov
jmp
call
test
jge
out
sub
mov
mov
mov
add
add
xor
lock
mov
jns
add
sahf
push
popa
add
call
push
mov
fnstenv
push
fldl
push
les
push
and
inc
add
push
mov
lret
xchg
call
lock
lret
cmp
push
addb
addr16
ficompl
stc
sub
xchg
ss
add
repnz
or
aam
movsb
jb
mov
push
or
in
sarl
cli
sti
mov
dec
cmpsb
cmp
add
dec
test
pop
cltd
xlat
int3
mov
jge
inc
add
scas
cmp
addb
xor
or
add
repnz
clc
ret
cmp
sbb
mov
sbb
xchg
or
mov
les
cmp
jo
int3
mov
incb
addb
rcl
cmp
mov
cmc
sbb
xor
out
outsl
inc
add
dec
inc
mov
fxch
dec
insl
scas
ficoml
cmp
in
movb
add
ja
enter
pop
xchg
popf
or
pushf
cmp
fld
out
shrl
stc
test
lahf
dec
xor
loopne
add
cmp
ja
sbb
test
cmp
push
pop
or
rcrb
sbb
lea
add
pop
lret
daa
ljmp
cmpl
inc
add
roll
addr16
in
nop
call
cld
ret
jge
cmc
xor
fdivrs
fwait
pop
fwait
popa
sbb
shll
xchg
adc
xorl
xchg
push
in
cltd
out
pop
push
mov
xchg
cs
or
rol
icebp
inc
insb
add
inc
or
pop
sub
cmp
sbb
scas
hlt
mov
imul
insb
out
shlb
add
addr16
repnz
xchg
mov
sbb
add
push
add
mov
sbb
inc
fucomp
mov
sub
xor
scas
cwtl
fstl
test
pop
cmc
aas
fistl
popl
add
imul
or
dec
leave
mov
add
xor
cmpsb
lret
arpl
into
or
adc
push
push
divl
jg
pusha
add
cmp
jg
ss
cmp
fadds
and
ret
loopne
movsb
xor
push
cmp
sbb
fiaddl
mov
pop
mov
pop
jmp
js
clc
movsb
hlt
mov
lods
jbe
imul
mov
iret
addb
push
gs
sub
enter
push
push
add
add
int
in
and
ja
fdivl
je
pop
mov
inc
loopne
stos
xor
in
mov
add
addr16
scas
push
xor
lret
lock
loop
dec
sub
loopne
inc
pop
in
insb
jg
mov
mov
jnp
hlt
scas
aad
test
jb
out
imul
ljmp
xor
test
add
push
or
dec
cmpsl
repz
xor
lahf
inc
mov
daa
inc
add
les
cmpl
add
ret
mov
lcall
pop
cs
push
aaa
loop
mov
jecxz
cltd
sti
shl
cmpsl
sbb
mov
add
cmc
mov
addb
scas
and
fcomip
shlb
add
imul
jo
into
mov
out
ret
lcall
leave
adc
mov
mov
stos
mov
test
mov
stos
fsubl
sub
shl
inc
add
mov
xchg
inc
and
test
xchg
cmp
dec
cmp
push
xor
rolb
jne
jmp
