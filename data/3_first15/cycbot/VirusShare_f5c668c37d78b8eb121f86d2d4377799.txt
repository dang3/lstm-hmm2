int3
imul
outsb
mov
add
call
mov
add
bound
mov
add
cmp
sbb
xchg
add
push
add
add
xor
movb
adc
push
mov
add
in
add
add
or
fstpl
add
add
dec
scas
mov
push
xor
and
mov
jnp
add
imul
mov
jmp
scas
into
or
pop
sbb
add
aas
mov
add
arpl
inc
jnp
adc
pop
jg
mov
mov
jp
roll
in
arpl
inc
add
mov
add
sub
add
lea
add
jge
mov
mov
pop
jo
add
add
arpl
add
add
arpl
add
mov
in
fstpl
add
mov
lds
je
dec
mov
xchg
add
outsl
in
mov
jecxz
jmp
xor
jb
xchg
pop
adc
out
pop
dec
arpl
outsl
ljmp
pushf
cmp
add
repz
add
add
sbb
add
mov
ret
int
add
mov
hlt
add
xchg
and
push
add
mov
iret
jecxz
stos
adc
add
clc
test
iret
cmpsb
add
mov
or
jp
add
add
add
lret
pushf
add
mov
add
out
lret
add
add
loope
popf
sbb
jne
rolb
inc
ja
mov
or
add
mov
cmpl
jl
stc
push
xlat
or
and
mov
loopne
mov
cmp
icebp
test
add
add
add
xor
out
push
sbb
popa
lock
sbb
add
add
scas
mull
sbbl
lahf
sub
add
and
lret
mov
add
rolb
jo
addb
test
push
lock
add
addl
pop
sti
lahf
sbb
add
add
fisttps
orl
mov
mov
xchg
mov
push
testb
add
testb
mov
insb
add
pop
das
insb
lds
add
sbb
and
mov
cmpl
scas
je
pop
in
fisubrs
mov
adc
pop
fadd
add
mov
fldl
xchg
add
fwait
aam
mov
add
xor
repz
les
xchg
add
add
add
add
add
add
push
sti
mov
das
xchg
add
add
pop
addb
add
mov
add
rolb
das
mov
add
add
xor
lods
mov
in
test
sbb
add
into
fidivl
xor
daa
mov
outsl
repnz
aam
sub
fidivrl
popa
imul
mov
sahf
fbstp
dec
xchg
and
mov
cmp
mov
cmp
fiaddl
lcall
popf
leave
call
jo
aad
and
popf
pop
rorl
int
inc
out
pusha
add
add
cmp
inc
add
cwtl
add
fsubrs
mov
add
cmpsl
mov
add
cmp
add
pop
fisubs
add
add
popa
xchg
pop
jne
add
inc
add
test
add
push
add
addr16
add
test
lea
shl
pop
filds
add
lds
aas
mov
outsl
fcomps
push
popa
dec
mov
bound
mov
movsb
add
dec
cwtl
stos
push
adc
jne
add
enter
aas
cwtl
jb
out
cltd
add
jo
cmp
fdivl
add
popf
out
adc
xor
scas
add
and
cmp
add
mov
add
test
pop
outsl
xchg
push
add
jnp
aas
cwtl
data16
aaa
sbb
add
repnz
enter
and
mov
dec
std
and
add
jo
mov
loopne
js
jmp
ficomps
cmpsl
lea
adc
mov
jge
push
rolb
add
mov
mov
sbb
clc
enter
add
cmp
adc
add
daa
or
cwtl
sub
pop
rolb
pushf
push
test
pushf
addr16
mov
inc
add
fcom
add
mov
pop
pop
cltd
pop
cs
add
add
mov
dec
jg
bsf
add
mov
push
add
int3
cmp
lods
out
cmp
bound
mov
adc
mov
aaa
std
cmpsl
stos
bound
mov
add
adc
mov
or
aam
add
nop
add
lds
pop
sub
add
inc
mov
add
rolb
pop
leave
push
add
scas
dec
out
add
in
pop
scas
loop
or
add
xchg
fcmovb
out
rolb
push
add
outsb
jno
outsl
dec
mov
mov
rorl
mov
addr16
add
add
bound
mov
test
cmpl
adcl
rorl
movswl
ds
vpcmpgtb
outsb
jmp
imul
dec
scas
aad
iret
rolb
mov
push
rolb
mov
movb
add
fistpl
add
xor
push
add
or
add
inc
xor
int3
repz
add
mov
ficoms
add
pop
xchg
sub
ljmp
mov
cmpsl
aad
aad
add
mov
add
add
add
cld
xor
mov
mov
add
outsb
mov
mov
iret
leave
dec
insb
jbe
ss
js
aam
mov
adc
sbb
enter
fwait
adc
push
add
add
and
loopne
movsl
imul
jmp
iret
sub
aam
inc
xchg
sub
add
mov
les
mov
add
add
add
pushf
jg
xchg
jmp
push
movsb
add
add
add
add
dec
pusha
add
add
cmp
mov
adc
fcmovbe
rolb
movb
ffree
add
rolb
aad
mov
ja
jbe
cmp
add
mov
add
add
sbb
add
add
leave
pop
scas
sub
mov
fidivl
xor
xadd
or
stos
xchg
idivl
outsb
sahf
and
mov
add
jns
inc
add
call
xchg
int
add
mov
pop
mov
add
xchg
gs
in
add
add
add
mov
fwait
js
lret
jle
xlat
adc
cmp
lods
or
shr
add
mov
add
inc
add
mov
or
enter
sub
rcll
mov
sbb
and
mov
add
add
add
test
cli
mov
sar
dec
ds
xor
repz
add
add
flds
pop
mov
add
sti
je
sahf
jbe
mov
dec
rolb
aam
pop
pop
insl
xor
xchg
scas
mov
pop
test
imul
outsb
mov
call
add
mov
mov
shll
addb
add
lods
fcoml
add
add
repnz
mov
inc
pop
and
mov
xchg
sub
pop
inc
add
cmp
cld
add
mov
xor
repz
dec
std
mov
fwait
or
add
cltd
data16
lods
xor
push
ret
add
nop
add
push
xlat
dec
inc
pop
mov
xchg
sbb
lds
fidivl
test
mov
insl
or
addb
dec
insb
mov
int
stos
xor
divl
add
xor
aad
pushf
and
mov
mov
mov
stos
or
add
iret
dec
xchg
lods
lret
adc
pop
dec
lret
dec
cmp
in
insl
and
add
add
enter
aam
test
sbb
pop
out
ds
mov
add
pop
rolb
rolb
add
add
fcoms
add
mov
add
push
add
stos
add
les
insl
lret
jmp
pop
hlt
add
pop
dec
nop
add
mov
loope
add
cmp
xchg
add
add
out
xor
in
mov
bound
mov
add
outsl
cmpsb
add
dec
movb
mov
push
movb
and
add
fdivl
idivl
mov
inc
add
add
xor
int3
iret
mov
mov
bound
mov
lcall
jle
popf
call
add
jnp
pop
xchg
pop
cmpsl
jae
xor
insl
add
push
rolb
loop
sub
xchg
sub
stos
pop
push
add
add
rcrl
fimuls
loope
push
add
sub
add
xchg
add
or
sub
add
cmp
mov
mov
add
movb
adc
inc
add
xchg
das
add
repz
jb
lcall
add
add
jle
insb
je
jbe
icebp
movsb
add
fcomip
add
jb
jecxz
add
pop
jge
add
sbb
data16
or
out
add
add
fldpi
pop
add
mov
pop
sahf
pop
test
add
addb
add
jle
dec
mov
call
add
add
pusha
add
add
test
add
fdivs
push
outsb
out
add
add
rolb
add
push
js
mov
mov
ja
xor
add
in
lods
dec
iret
sub
add
out
xchg
add
in
fistpll
sbb
ja
xchg
jg
add
out
dec
rolb
add
lods
out
add
mov
rcl
add
or
adc
xchg
add
mov
or
add
mov
add
add
sti
xor
popa
inc
stc
and
into
inc
add
mov
add
push
add
daa
pop
fstps
sti
sub
mov
pop
mov
xchg
jnp
in
add
pop
out
nop
add
mov
pushf
mov
mov
mov
mov
add
push
add
lret
inc
adc
mov
rolb
add
mov
xor
enter
mov
mov
mov
and
aas
in
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
lods
rorl
mov
mov
aas
and
mov
add
bound
mov
imul
add
pop
xor
adc
popa
inc
stos
dec
xor
stos
aad
adc
xlat
push
add
add
iret
bound
mov
adcl
add
stos
add
add
jne
xor
add
movsl
jo
ljmp
add
add
mov
testb
add
or
mov
in
add
dec
dec
push
add
inc
add
mov
add
insl
jge
cwtl
into
sub
inc
inc
add
sahf
rolb
push
jae
add
add
data16
dec
adc
test
jo
adc
faddl
mov
add
add
movb
dec
das
sbbl
ds
xchg
jmp
mov
push
add
jle
and
mov
int3
inc
add
xchg
jne
aaa
pop
mov
add
add
add
mov
cmpsb
add
add
add
xbegin
scas
inc
mov
jmp
mov
dec
in
lock
add
out
and
mov
add
rolb
lcall
scas
add
add
bound
mov
push
add
mov
ljmp
jle
jge
adc
test
jnp
push
movl
and
sbb
out
mov
cmpsl
enter
ja
add
gs
inc
add
add
jge
aas
inc
add
or
scas
into
call
mov
je
pop
sbb
add
and
jns
insl
addb
add
xchg
add
add
mov
add
add
fnsave
popl
sub
cld
cmp
push
add
add
iret
pop
xor
mov
cwtl
fnstcw
pusha
add
out
mov
or
mov
arpl
and
add
jmp
and
mov
adc
dec
fcomps
add
jge
add
xchg
imul
pop
cmp
sub
cmp
sbb
pop
nop
add
jno
fisubrl
add
movb
pop
stos
push
mov
sub
xor
pop
cli
adc
loopne
add
mov
out
jae
pop
add
add
adc
imul
dec
imul
rolb
sbb
add
jle
fucomp
adc
fildll
test
xlat
call
add
int
inc
add
sub
pushf
rolb
das
adc
inc
adc
xorl
arpl
inc
add
add
add
add
mov
pop
sbb
jle
insl
outsb
lea
cmp
ret
add
push
add
imul
movsl
or
mov
push
add
loop
push
jbe
xchg
push
sbb
insl
sub
lock
push
mov
in
sbb
lds
add
mov
jnp
add
jmp
les
push
stc
push
add
add
add
ljmp
in
sbb
std
inc
add
jns
mov
jl
mov
imul
add
mov
inc
js
jge
inc
bound
mov
add
insb
stos
dec
lods
adc
mov
adc
lods
mov
ret
xor
arpl
add
outsl
sahf
mov
test
jo
adc
lahf
cmc
push
add
cmp
pop
xor
mov
add
and
inc
add
add
mov
and
mov
add
jmp
add
sbb
xor
popf
enter
add
fidivrs
mov
cmp
add
add
add
sbb
xchg
and
mov
pop
push
mov
add
insl
push
adc
jo
cmp
or
sahf
lahf
xchg
in
add
fsubs
mov
add
mov
xor
add
add
cmp
add
mov
add
xor
mov
lahf
test
add
sub
ficoms
imul
fisubl
adc
jg
xchg
add
add
dec
lods
dec
bound
mov
add
orl
mov
popa
sbb
dec
adc
add
fistpl
dec
add
js
and
mov
insb
jle
out
das
popf
mov
add
addb
push
add
psubq
test
aam
andps
mov
pop
insl
addb
push
add
adc
addb
cmpsl
adc
or
push
add
rolb
test
scas
xchg
add
push
add
fidivrl
add
or
and
jno
jne
push
xchg
popf
aaa
jne
xor
pushf
sub
add
mov
addb
cmp
addb
xor
mov
in
and
mov
and
mov
mov
in
into
rolb
add
rolb
pop
rorl
sahf
aaa
clc
data16
dec
stc
hlt
add
in
rolb
adc
cmc
and
add
and
inc
add
rolb
clc
insl
push
and
gs
add
mov
dec
jle
jmp
mov
xor
cmp
add
mov
adc
xlat
xorl
loope
jne
cmc
sbb
pop
mov
xor
add
add
and
lcall
aas
stos
mov
aad
add
data16
or
mov
ss
xchg
add
sbb
enter
mov
repnz
and
mov
push
add
sub
jle
cmp
jnp
mov
pop
push
add
push
add
xor
mov
imul
dec
mov
cmp
test
sbb
dec
xchg
add
add
add
xchg
loop
insb
mov
cmp
add
dec
pop
xlat
aas
test
jmp
fdivs
xor
outsb
mov
gs
push
add
add
sub
add
sub
inc
add
add
int
add
cs
dec
outsl
lea
push
inc
add
add
leave
jbe
test
pop
test
dec
lea
repnz
add
adc
xchg
add
sbb
add
mov
mov
add
je
in
repz
mov
or
testl
add
mov
xor
add
push
add
movb
negl
jmp
add
add
inc
add
add
fnclex
add
lahf
fnstcw
jbe
ds
ds
pop
shll
ret
fiadds
rolb
lods
nop
add
add
xor
push
add
pop
jmp
fld
add
add
test
mov
lea
mov
add
add
cli
add
mov
vpunpcklqdq
inc
add
ljmp
inc
dec
les
sahf
enter
addb
dec
shrl
and
add
fwait
mov
xor
imul
add
dec
das
ficomps
mov
lahf
ficoms
fisubs
mov
inc
add
adc
mov
outsl
cmpsb
add
jmp
fsubrl
sti
fwait
cmp
pop
or
add
ret
popf
add
in
xor
sub
mov
ljmp
rolb
dec
xor
jb
das
jo
fldenv
adc
aad
jle
jp
mov
add
adc
mov
mov
add
testb
mov
add
data16
das
testl
dec
push
add
mov
stos
cmpsb
add
jecxz
xor
adc
mov
inc
xchg
add
loope
mov
add
sub
pop
inc
into
ss
sbb
test
mov
add
cmc
sub
dec
jbe,pn
int
push
add
loop
xchg
sub
push
jmp
add
sbb
mov
adc
ja
xor
repnz
add
stc
out
sub
add
clc
insb
pop
xor
fstpt
js
mov
clc
addb
popa
inc
jp
adc
xlat
leave
xor
fldt
pop
xchg
adc
inc
add
push
jmp
add
and
mov
or
sbb
addr16
out
lods
ret
repz
add
jle
addr16
add
lea
pop
or
pop
rcl
add
add
adc
add
add
mov
and
and
pop
movb
add
outsl
jg
cltd
push
inc
add
stos
xor
fcmovnu
xorl
add
add
xchg
add
inc
loopne
aaa
aam
loope
movsb
add
and
lahf
ds
add
mov
std
pop
das
ret
push
add
jnp
add
iret
in
mov
inc
add
insb
int3
jnp
dec
jle
add
cmp
add
inc
movsl
inc
add
jo
stos
pusha
add
add
test
add
push
or
test
stc
aam
sahf
cmp
rolb
jnp
add
lock
push
add
cmp
decl
mov
add
add
mov
add
add
push
sarl
pop
jno
xlat
lds
add
or
sbb
fidivrl
inc
rolb
sub
add
mov
insl
fisttpll
and
dec
xor
pop
bound
mov
jmp
add
add
mov
inc
add
insl
rolb
cs
add
add
mov
xor
push
add
test
xor
daa
mov
add
pop
aaa
and
pusha
add
cmp
sub
insb
shll
push
cmp
fucomp
std
jl
cmovnp
add
test
add
adc
test
imul
push
pop
sub
add
inc
mov
lock
mov
add
add
add
jo
pusha
add
mov
add
add
pop
shrl
xchg
adc
cmp
mov
fistpl
add
sub
stos
dec
sub
test
mov
and
mov
add
pushf
push
add
or
add
add
mov
add
mov
aam
arpl
add
mov
add
lock
test
xchg
add
out
adc
enter
sub
testb
add
add
fisttpl
lcall
inc
add
add
pop
lods
les
insl
add
gs
sub
add
or
add
jg
enter
in
and
hlt
add
mov
cmp
xchg
sbb
add
jmp
add
adc
mov
mov
add
pusha
add
sub
mov
loopne
xchg
mov
xchg
js
lds
jo
scas
daa
mov
scas
add
xchg
add
out
add
xor
add
and
mov
data16
sbb
mov
add
sub
add
xchg
jge
outsl
mov
cmpsl
call
add
inc
add
mov
outsl
sar
cmp
add
mov
fstpt
sub
aad
mov
add
popa
dec
inc
add
cwtl
jo
jp
inc
add
ja
mov
add
mov
xchg
mov
int
add
sti
pop
inc
add
sahf
hlt
add
add
aam
cmpsl
xor
inc
add
nop
add
and
add
inc
xchg
inc
add
xlat
mov
inc
mov
jb
test
mov
adc
jl
add
mov
xor
and
mov
jae
add
add
push
add
mov
rolb
data16
add
mov
push
add
or
inc
add
add
int
shrl
movsb
add
add
addb
xor
add
add
out
pop
rolb
inc
add
adc
out
add
add
lock
add
add
mov
ljmp
add
call
daa
sub
or
add
add
ds
fwait
addr16
inc
add
cmp
rorl
in
push
cmpsb
add
testb
xchg
mov
test
mov
fdivs
sahf
daa
inc
and
mov
add
enter
inc
add
push
add
add
add
xor
sub
add
sbb
adc
pop
cwtl
ror
dec
push
lcall
add
stos
js
fsubrl
add
add
loop
inc
add
fmull
and
add
lock
add
sbb
add
sub
mov
int
cmp
das
das
lock
add
sti
test
push
add
jmp
add
jno,pt
out
sbb
push
add
mov
adc
hlt
add
shll
mov
dec
fwait
imul
add
add
outsl
fwait
into
jp
cmpsb
add
inc
add
mov
dec
add
mov
inc
add
add
in
lock
cld
lret
in
arpl
lret
mov
rorl
add
orl
jmp
cmp
pushf
jne
mov
loopne
sbb
jecxz
mov
add
mov
add
mov
cmpsl
lea
and
xchg
mov
cmp
jbe
xor
int3
insl
xor
lret
fs
add
add
xchg
add
jp
add
mov
add
add
fisubs
cmc
inc
push
jbe
add
popl
cmp
push
jns
push
add
adc
xor
movb
movsb
add
add
push
add
nop
add
or
mov
hlt
add
sbbl
repz
jae
mov
ljmp
xor
push
add
mov
std
xchg
xchg
stos
movsl
mov
lods
jo
fcom
add
push
repz
add
mov
add
add
inc
add
pop
adc
sub
xchg
inc
leave
push
xorl
push
add
add
jg
push
add
das
fcmove
mov
insb
push
mov
fwait
or
add
gs
inc
dec
outsl
pop
mov
test
std
inc
mov
cmpsl
or
add
mov
mov
add
filds
inc
add
stos
loopne
dec
and
mov
inc
add
and
imul
mov
mov
cmc
incl
add
data16
sub
push
mov
adc
pop
xchg
std
adc
add
fisubrl
rcl
pop
lods
ds
add
mov
dec
sbb
and
mov
add
add
add
xchg
or
sbb
mov
cmp
xchg
add
push
add
sbb
sbb
add
add
imul
add
jecxz
xchg
data16
jp
add
mov
jnp
mov
add
cmp
xor
rorl
add
mov
pushf
stos
adc
and
mov
inc
clc
pushf
in
test
icebp
out
dec
dec
hlt
add
add
and
sbb
aam
out
in
jge
push
adc
sbb
aaa
fsubrs
dec
dec
xor
mov
mov
add
mov
add
xchg
add
xor
test
jle
add
jne
inc
add
add
add
push
sti
popa
jnp
add
xor
jb
jnp
add
mov
cmp
add
add
andl
dec
cmovb
mov
mov
mov
out
sbb
rolb
cmp
fprem
xchg
push
add
loope
pop
sub
mov
dec
xchg
add
add
fisttpll
and
mov
rolb
jl
add
xlat
fwait
std
mov
add
add
add
add
add
add
add
add
sub
aas
movsb
add
mov
add
or
xchg
ds
fcomps
jmp
sbb
leave
sbb
jge
or
mov
imul
pop
push
add
lods
and
mov
xor
mov
and
dec
movsb
add
add
mov
add
pop
jl
add
cmp
add
loop
pop
ret
enter
fistpll
add
add
inc
fstps
testb
add
add
mov
fsts
mov
add
add
mov
xlat
sbbl
in
sub
pop
xchg
xor
add
mov
add
mov
test
cs
fwait
popa
or
fmull
add
lock
int3
mov
outsl
cwtl
les
icebp
lea
mov
loope
cmp
ret
in
fdivs
mov
add
jnp
and
mov
out
sti
adc
sahf
sbb
add
into
rolb
add
mov
popf
pop
xor
bound
mov
mov
fldenv
add
cmpsl
cli
int
push
add
clc
push
or
jae
add
pushf
jns
mov
adc
sbb
mov
add
push
add
add
sbb
add
adc
faddl
xchg
pop
stc
js
orl
rcll
add
js
js
push
and
inc
xor
pop
nop
add
adc
xchg
add
sub
add
shll
add
mov
add
pop
out
das
fldt
fistpll
mov
add
sub
add
sbb
fdivrs
les
xor
stos
adc
cmpsb
add
jmp
mov
adc
aam
cmpsb
add
add
fimuls
lahf
addr16
mov
js
loope
shll
pop
scas
push
add
sti
cmpsb
add
rcll
dec
leave
loope
sub
adc
decb
add
dec
js
add
xor
xchg
adc
xchg
cmpsb
add
je
int
add
mov
add
xor
aad
add
sbb
or
add
xor
mov
add
jns
add
sub
das
imul
sbb
fmull
add
pop
mov
sbb
and
mov
push
test
dec
lods
dec
loopne
clc
arpl
push
clc
mov
add
jb
mov
mov
adc
pop
ret
mov
add
outsb
xor
movsb
add
xlat
mov
in
cmp
mov
scas
mov
add
insl
pop
repnz
add
add
stc
fiadds
xor
fld
add
add
add
add
scas
push
dec
iret
sub
insb
test
inc
add
inc
lea
jno
add
mov
and
cmp
add
add
insl
mov
jmp
add
sbb
fistps
sahf
jne
push
add
mov
add
and
mov
jno
xor
sub
inc
add
push
add
mov
add
cmc
outsb
inc
enter
rcll
jbe
dec
add
data16
inc
add
sahf
pop
xchg
and
mov
add
jle
cmc
jne
add
add
add
fdiv
mov
xchg
sbb
or
sbb
lods
jno
arpl
fbstp
lret
add
jb
in
dec
iret
sahf
mov
pop
ljmp
dec
lret
and
popf
push
repnz
mov
clc
aaa
lock
pop
inc
in
mov
test
mov
push
push
add
sub
add
mov
add
mov
add
add
cmp
lea
add
mov
popa
ret
add
mov
lret
sub
dec
fstpl
xchg
add
add
add
dec
cli
sub
je
ja
mov
pop
pop
mov
add
jb
mov
cld
push
add
add
data16
loopne
scas
jno
into
cmp
add
add
and
mov
push
add
add
add
and
mov
daa
adc
push
or
shll
adc
jne
add
add
mov
lea
push
ret
iret
movsl
pop
jle
filds
add
add
pusha
add
call
cltd
ds
add
jmp
xchg
pop
pushl
mov
xchg
rolb
push
add
add
gs
in
jl
scas
out
stc
movb
add
push
add
jmp
pop
pop
insl
sbb
out
sub
add
add
add
sahf
lahf
popa
sub
sub
add
repz
mov
movsb
add
mov
push
add
add
push
ret
mov
add
pop
xchg
xchg
add
addb
sbb
bound
mov
add
add
add
jl
add
adc
int3
inc
add
shr
pusha
add
fisubrs
sub
add
lods
movsl
cmc
sub
rorl
xchg
xchg
add
bound
mov
xor
in
and
push
dec
push
add
add
mov
add
mov
scas
pop
or
rolb
addb
loopne
cltd
xchg
jno
loope
int
sbb
int
push
add
add
inc
mov
iret
push
pop
out
or
mov
stos
xchg
rolb
outsl
cmp
insb
aas
iret
addb
add
fmul
dec
call
add
or
and
add
mov
add
add
add
mov
add
mov
sub
add
loopne
jo
xchg
jo
cwtl
test
ss
add
add
jbe
adc
mov
jle
cli
push
pop
inc
lock
jns
mov
add
sbb
and
mov
add
adc
mov
dec
bound
mov
add
dec
jno
scas
jge
out
insb
jne
mov
pop
add
mov
add
add
rolb
bound
mov
shrl
aad
call
f2xm1
add
add
cmc
add
xchg
mov
xchg
mov
das
or
shr
mov
add
out
adc
inc
shr
addr16
pushf
jge
or
rol
dec
out
sbb
adc
outsb
cli
int
rcll
outsl
sub
pop
jbe
xor
into
fwait
les
fnstsw
add
sub
add
loopne
jns
xor
enter
add
in
outsl
fs
repz
add
push
add
cmp
insl
repnz
add
add
gs
sub
xorl
inc
adc
movsl
sbb
mov
xchg
outsb
pop
ret
pop
outsl
xor
lds
pop
jge
add
nop
add
jno
int
cmp
cltd
mov
jmp
enter
add
cmpsb
add
mov
cmp
rolb
push
add
add
add
cwtl
lods
fstl
adc
sar
dec
cmp
add
jmp
add
pop
cwtl
sub
sub
sub
fistps
sbb
int3
or
pushl
mov
mov
lds
add
sub
clc
repnz
lcall
adc
movsl
push
dec
ret
jb
shll
adc
fld
add
adc
add
add
mov
mov
clc
mov
loope
enter
pop
sbb
dec
pop
mov
test
xor
and
inc
mov
cmpsl
sub
xor
jo
test
mov
push
add
mov
lahf
mov
stos
jp
mov
leave
mov
in
icebp
ret
mov
mov
in
inc
jg
sub
add
fnstsw
into
xor
add
add
dec
inc
add
or
stos
out
add
je
add
and
sbb
mov
jbe
test
adc
sub
push
add
add
mov
add
js
insb
mov
lret
jb
mov
cs
sti
xlat
jge
dec
stos
xchg
mov
add
inc
adc
cmp
mov
add
adc
add
lahf
movsb
add
add
mov
test
iret
mov
jae
daa
cmpsb
add
cli
add
jl
cltd
rcll
cli
mov
dec
movb
out
mov
add
add
pop
popf
add
xor
mov
inc
aam
enter
lds
add
add
sub
fstps
leave
jo
addr16
and
add
stos
fnstcw
add
mov
inc
add
add
add
push
loop
mov
pop
pop
addb
xchg
mov
push
call
lea
leave
xor
add
add
xchg
jae
and
xchg
fldl
xchg
mov
add
mov
lret
addr16
pusha
add
mov
jne
into
mov
jecxz
mov
add
xchg
popa
sub
aas
ret
pop
in
loope
xchg
dec
jnp
add
inc
add
out
and
sbbl
daa
loope
stos
je
inc
cmpsb
add
inc
jo
imul
mov
stc
fldt
insb
or
xchg
jo
add
add
add
into
fildll
mov
xor
mov
add
in
rorl
cmc
fidivs
jg
inc
add
add
scas
mov
pop
xchg
cmp
popa
push
xchg
push
cmpsb
add
lock
add
sbb
addr16
test
xor
sbb
and
add
sti
push
add
add
add
mov
push
add
push
add
mov
mov
mov
xchg
xchg
dec
xchg
add
fwait
gs
popf
xchg
add
add
and
inc
sub
fidivrs
add
jb
mov
in
rolb
movb
sbb
hlt
add
jbe
mov
cwtl
add
add
sti
and
mov
jnp
and
mov
testb
jb
stos
and
stc
mov
loopne
aaa
enter
xlat
cwtl
or
adc
sbb
mov
add
popa
addb
outsl
jecxz
cmpsl
jge
add
pop
addb
rolb
int3
mov
ljmp
xchg
adc
dec
or
adc
ret
push
add
add
test
push
mov
adc
arpl
lret
mov
and
mov
insb
mov
pusha
add
fnstsw
fisubs
test
jge
iret
insb
jo
xchg
add
fcmovb
mov
lds
add
mov
fidivrs
aad
fdivrl
add
gs
add
push
add
scas
stc
dec
jo
dec
add
add
lock
add
push
push
add
add
add
fldt
add
mov
pop
lret
rolb
adc
add
cmc
add
add
rolb
mov
jg
jns
add
adc
xor
add
sahf
aas
jmp
stos
mov
ja
in
data16
insb
push
cmp
cwtl
mov
lods
int
in
enter
movsb
add
icebp
test
add
push
pop
aas
lret
test
bound
mov
push
add
inc
xchg
cmp
ret
push
and
loope
sub
add
add
add
add
add
push
add
test
jae
add
push
ficoms
or
gs
add
dec
out
arpl
add
add
push
add
stos
pop
pusha
add
xor
lock
mov
cmpsl
pushf
setb
icebp
xor
lods
mov
and
int
rorl
push
add
push
mov
dec
or
add
ror
add
mov
imul
jmp
sub
mov
adc
mov
pop
adc
je
jle
mov
jp
adc
add
mov
sahf
sbb
sbb
addb
cs
add
add
arpl
add
fadds
xor
add
cmp
dec
cs
fucomi
sub
repnz
jg
les
les
mov
mov
fnsave
imul
sbb
lods
jmp
mov
mov
out
inc
push
add
add
pop
loope
and
mov
xchg
sub
add
movsb
add
pop
mov
fisubrl
das
aas
add
add
pop
les
mov
imul
cwtl
mov
add
in
mov
pop
push
cltd
test
and
mov
add
fldcw
push
add
add
in
push
add
ljmp
inc
or
sub
push
add
xor
ret
ljmp
sub
add
sbb
ret
outsl
popf
cmp
xor
lret
inc
int
push
mov
add
rcl
mov
mov
jmp
test
cwtl
js
and
in
mov
sbb
add
add
add
pop
in
xlat
dec
rolb
or
pop
rolb
ljmp
jge
dec
push
add
add
iret
test
mov
sub
push
add
add
add
mov
add
gs
mov
adc
aam
pop
cwtl
mov
add
add
mov
stc
dec
in
gs
xor
mov
out
mov
ljmp
pop
stos
cmp
loope
out
mov
ja
leave
cmp
cmp
movsl
fistps
mov
add
mov
jae
pop
data16
mov
jl
mov
add
push
add
sahf
lds
add
jl
add
add
add
loopne
inc
add
sub
jl
or
data16
out
outsl
or
add
dec
push
xor
in
icebp
dec
sbb
add
add
mov
mov
loope
add
mov
dec
and
adc
icebp
adc
add
mov
into
mov
ds
add
cmpsb
add
add
add
mov
rolb
add
sbb
mov
add
add
add
or
add
add
add
and
mov
xchg
mov
mov
inc
add
scas
push
out
call
add
add
add
loope
iret
push
xchg
add
aas
xor
lea
add
aad
jns
jne
add
sub
loop
and
mov
add
in
add
ds
lcall
add
mov
add
mov
scas
add
mov
jnp
push
dec
lret
dec
pop
das
push
add
inc
das
xor
sbb
add
add
ret
sub
sgdtl
cmpsl
dec
cmp
insb
push
add
inc
add
mov
hlt
add
jg
scas
mov
popa
add
nop
add
je
xchg
add
addb
xor
xor
int
aad
push
je
add
add
aam
jg
add
add
add
add
or
push
imul
mov
sub
mov
std
sub
in
push
add
add
add
int3
inc
add
cmp
mov
data16
xchg
add
cmc
cmovns
stc
mov
scas
popa
or
je
das
jns
add
leave
cmp
xor
jecxz
add
add
add
xchg
lcall
add
xchg
sub
rolb
add
add
mov
add
cmp
dec
sti
mov
add
xchg
push
add
mov
push
add
add
mov
add
or
jnp
daa
or
add
repz
inc
popa
mov
push
fistpll
push
fisubl
inc
add
iret
push
mov
loope
pop
add
inc
add
mov
xchg
cmp
sub
adc
sbb
mov
movb
das
mov
add
cmp
cmpsl
rolb
xchg
add
cmp
cmc
stos
mov
jo
icebp
mov
loop
repnz
imull
daa
jne
add
jo
out
pop
ljmp
mov
sbb
popf
push
dec
mov
ret
pop
sti
cmp
fisubrs
mov
add
add
lock
in
scas
jb
lock
add
sub
data16
and
rolb
and
fdivrp
into
mov
out
add
fisubs
mov
pop
in
ret
jp
rolb
cwtl
mov
cmp
pop
adc
sar
and
int3
ret
ljmp
test
cmpsl
or
leave
xor
mov
add
jno
add
mov
push
mov
cmp
jno
add
mov
enter
add
call
mov
add
neg
add
mov
pop
inc
add
cli
adcl
rcr
xor
push
add
lcall
push
add
and
sbb
add
dec
inc
add
rcrl
or
cmp
mov
jo
int
dec
add
rcrl
lret
inc
add
fimuls
ret
add
add
out
cwtl
rolb
test
notl
add
mov
arpl
add
add
sub
jnp
sbb
xchg
shll
sti
push
mov
lret
add
pop
adc
jb
or
add
and
mov
imul
filds
mov
in
jae
or
inc
dec
push
popa
mov
call
or
add
jb
repnz
pop
mov
mov
add
pop
and
add
inc
add
push
rolb
mov
or
add
dec
and
xchg
add
add
sub
add
out
stos
cmpsl
mov
inc
add
adc
out
jl
fucomp
add
imul
add
xor
stc
mov
or
pop
fnstsw
pushf
dec
cmp
movsl
sub
xchg
mov
jne
adc
dec
dec
adc
sub
add
jmp
add
stos
xchg
arpl
ja
adc
push
add
inc
sbb
sub
add
or
mov
inc
add
add
xor
in
ret
pushf
addb
ret
push
adc
cmpsb
add
mov
xchg
add
cmp
xchg
icebp
mov
cmpsb
add
mov
mov
add
mov
testb
add
shll
add
mov
loop
mov
add
add
mov
add
movsl
mov
leave
cmpsl
fisttps
icebp
lret
int3
inc
mov
data16
xor
jnp
addb
add
pusha
add
add
stos
add
mov
mov
inc
add
add
add
add
jno
add
jmp
and
add
adc
and
mov
cmp
je
inc
popa
sbb
rcrl
fs
add
push
add
test
xlat
in
sub
lret
scas
push
add
add
xlat
jle
addb
add
adc
jmp
ret
je
or
cmpsb
add
lods
dec
add
sub
jl,pn
add
test
add
add
add
outsl
sbb
adc
add
aas
jae
mov
sub
dec
lret
pop
lea
or
inc
ret
xchg
sub
add
andl
fdivrp
or
mov
add
testb
in
add
rolb
mov
xchg
add
sbb
lock
cmp
movsb
add
add
cli
adc
rolb
add
out
hlt
add
sbb
out
cmp
push
add
add
add
sti
jg
outsb
cmp
scas
push
inc
add
mov
add
js
mov
add
add
xor
fistpll
or
fmull
stos
or
add
push
xchg
add
mov
pop
dec
jne
inc
add
sub
add
cwtl
cld
adcl
add
cwtl
aad
adc
add
aaa
jmp
and
mov
pop
int3
out
les
into
loopne
mov
in
shll
xchg
adc
leave
inc
jge
pop
xchg
enter
sbb
jno
mov
fisubs
xchg
mov
out
ja
scas
subl
add
jle
add
dec
ficoms
adc
xor
mov
xchg
add
add
in
xor
fimuls
add
add
push
add
mov
push
lret
lods
jle
add
add
cmpsb
add
and
jno
cs
dec
ss
in
mov
mov
mov
push
fdivrp
repz
jne
add
add
add
test
cmp
arpl
mov
test
pop
jecxz
jno
jne
add
rolb
imul
and
add
add
jb
inc
add
xor
inc
aas
push
add
dec
popa
push
add
jb
xor
lret
add
dec
mov
lods
dec
movsb
add
xchg
sub
mov
pop
adc
mov
outsb
xchg
add
test
pop
or
movsl
fwait
sbbl
pop
movb
add
xchg
add
add
rolb
pop
or
nop
add
lods
adc
out
or
add
add
jns
testb
add
xlat
push
aad
add
jle
push
xor
into
mov
mov
test
lahf
hlt
add
cwtl
mov
out
jp
test
addb
out
add
inc
cmp
push
add
test
mov
pop
push
inc
pop
scas
addr16
add
sbb
adc
pop
xor
xchg
inc
cmp
add
add
cs
sbb
scas
movsl
push
add
jae
rolb
cli
aas
aad
out
mov
add
pusha
add
popa
sub
jnp
pop
addb
and
inc
sahf
push
loopne
sti
push
jbe
mov
lret
mov
and
xor
bound
mov
add
add
adc
mov
xchg
push
in
mov
push
add
xor
cmpsb
add
add
pop
add
mov
pop
pop
stos
addb
add
add
sahf
mov
mov
mov
stc
add
lahf
es
xchg
adc
sti
sbb
or
fstps
add
add
int3
xor
cmp
mov
add
pop
pand
movsb
add
add
std
iret
loop
sub
out
dec
test
add
repz
add
leave
ds
ds
add
xchg
add
ret
cltd
push
hlt
add
into
cld
aas
ljmp
add
loopne
cld
into
sbb
inc
add
movsb
add
test
or
lock
xor
shll
add
mov
jecxz
xchg
jp
add
imul
add
testb
movsb
add
xor
cmp
test
push
int3
dec
rcll
rolb
fdivrl
adc
mov
add
mov
and
mov
fdivrs
ljmp
addr16
pop
js
add
or
pushf
jns
std
jo
out
ret
cli
stc
pop
xchg
out
adc
cmpl
into
rolb
cmp
pusha
add
sbb
add
into
fisubl
add
fcmovne
or
pop
push
daa
sub
add
and
mov
pop
test
add
add
xchg
test
push
mov
incl
insb
cmp
add
or
add
in
add
push
add
clc
jb
inc
movsb
add
hlt
add
dec
iret
pop
lea
pop
inc
outsb
push
add
and
mov
push
mov
sub
stc
push
add
add
outsl
push
dec
daa
sbbl
add
out
push
add
add
push
add
pop
jno
xor
call
pop
enter
test
cmpsb
add
loop
movb
leave
sub
mov
arpl
add
pop
mov
xchg
mov
inc
and
add
xchg
cmp
scas
sub
cmp
add
ljmp
xchg
cmp
add
fwait
test
add
xlat
inc
and
xor
test
ljmp
jbe
add
mov
insl
xchg
and
ljmp
pop
mov
xchg
testb
add
add
add
fdiv
add
mov
inc
pop
and
inc
shll
cs
push
add
mov
popa
mov
add
add
add
jp
jne
cmpsb
add
and
mov
out
push
sti
mull
adc
add
fadds
jbe
adc
aam
cmp
das
sub
jmp
dec
mov
add
mov
push
das
cld
stc
dec
jne
xchg
orl
sahf
mov
stos
pop
dec
adc
cltd
jmp
add
add
or
rolb
fldenv
fmul
jecxz
jmp
pop
mov
cmp
hlt
add
jbe
cmpsl
std
jae
add
mov
add
dec
xchg
xchg
movsb
add
add
sub
sbb
lods
std
subl
lods
and
and
mov
push
xor
nop
add
cltd
add
add
lds
mov
aam
bound
mov
add
add
add
scas
add
add
lret
test
lret
lods
ljmp
push
xchg
mov
or
cli
movsl
add
mov
add
xchg
add
ret
ljmp
add
add
sbb
add
cmp
addb
add
popf
ret
or
add
mov
mov
xor
cmp
add
pop
movsb
add
lret
mov
add
xchg
add
add
sahf
and
dec
arpl
add
add
in
add
data16
add
add
aad
insb
mov
xor
out
add
add
ljmp
sbb
sbb
mov
sub
cwtl
sub
add
add
mov
andl
add
dec
dec
push
xchg
add
stos
mov
fs
push
inc
add
mov
add
cld
xor
push
add
xchg
xor
dec
mov
out
lock
mov
cmpl
das
push
pop
adc
loopne,pt
xor
pop
jne
or
xorl
mov
add
add
aaa
addb
into
push
add
and
imul
add
mov
lods
jns
add
add
xchg
add
movsb
add
add
add
jne
sarl
push
outsb
div
add
rolb
jmp
imul
xchg
add
dec
push
repnz
sub
aam
cmp
add
add
addr16
mov
cmp
pushl
push
dec
int
adc
add
add
xchg
loope
add
sbb
jno
in
addr16
in
inc
cmp
leave
imul
jbe
push
and
mov
cwtl
mov
add
inc
add
xchg
add
add
add
add
add
jo
or
inc
push
push
mov
sbb
add
add
add
outsl
cld
jns
xlat
sbb
add
add
das
inc
add
fistl
sub
xchg
and
mov
cmp
and
mov
add
ja
mov
pop
lods
mov
dec
test
imul
cmp
xchg
add
and
cmpsb
add
add
xchg
cmp
roll
mov
dec
pop
gs
mov
jg
add
pop
repnz
add
add
dec
cmpsl
ficoml
or
add
adc
add
jle
adc
nop
add
repz
mov
xlat
fistpl
push
add
mov
rcrl
dec
or
mov
mov
lret
adcl
add
xchg
add
enter
inc
dec
add
add
dec
mov
add
fucomip
rolb
pushl
jmp
sub
xor
xor
cmpsb
add
incb
ret
add
xor
mov
add
add
push
add
mov
mov
lods
imul
add
add
xor
add
test
dec
sbb
add
inc
out
adc
add
mov
add
dec
or
ret
pop
mov
insb
add
icebp
cmpsb
add
scas
push
add
lret
in
rolb
mov
mov
nop
add
bound
mov
push
add
push
mov
lods
lahf
mov
add
add
lcall
add
pop
enter
sbb
add
lret
or
add
mov
pop
mov
inc
and
mov
add
repz
push
add
cmp
aam
testb
add
icebp
fstps
mov
mov
add
or
add
lods
or
insl
outsb
lahf
adc
dec
out
imul
ljmp
add
pop
sbb
add
mov
add
add
jb
and
add
lahf
rolb
push
pop
mov
add
lods
arpl
dec
mov
add
mov
sahf
or
into
cmp
sbb
xor
mov
imul
sbb
lea
aam
mov
add
inc
add
add
movsl
enter
add
scas
movb
add
and
mov
mov
rorl
pop
mov
push
add
leave
and
push
pop
lock
es
add
popf
pop
cmp
dec
out
gs
cmp
testb
sbb
sahf
push
lcall
mov
inc
bound
mov
cmpsl
stc
pop
je
push
add
push
lahf
in
push
stc
cmp
jl
ret
addb
add
sub
iret
aas
into
dec
inc
pop
pop
adc
mov
sahf
iret
mov
fistpl
add
dec
add
xor
add
stos
or
mov
and
xchg
add
xchg
cs
cmpsb
add
repz
add
cmp
std
mov
adc
shll
addr16
jo
mov
push
and
addb
adc
les
sbb
add
pop
pop
jne
and
lcall
add
xor
lods
inc
daa
dec
test
movsb
add
add
mov
sub
in
addb
add
xchg
add
mov
testb
add
xchg
add
into
inc
or
add
add
pop
movsl
adc
pop
cmp
mov
add
add
pop
movsl
pop
xchg
push
add
xchg
add
push
fdiv
add
cmp
iret
mov
cmp
add
or
add
or
add
or
testb
add
add
mov
std
pop
pop
cmp
outsb
mov
add
mov
dec
mov
inc
add
add
ret
movsb
add
aas
xor
push
pop
sub
add
dec
and
mov
mov
movsb
add
push
or
mov
and
pop
imul
mov
sbb
add
add
sub
fcomp
dec
stos
int
test
xchg
andl
push
jle
dec
adc
arpl
bound
mov
pop
cmp
jb
jp
loop
xor
data16
xor
add
test
add
lods
das
xor
stc
dec
mov
add
in
mov
pop
sub
xor
cli
adc
mov
mov
les
or
jne
sbb
icebp
xor
test
add
cmc
stos
lods
les
cs
add
add
xchg
out
mov
mov
loopne
dec
scas
add
adc
rolb
rolb
call
movsl
stc
jmp
jge
imul
add
ljmp
nop
add
inc
hlt
add
add
push
repz
inc
add
add
icebp
xchg
add
push
add
add
cmpsb
add
sahf
movb
add
cmp
ret
add
inc
fildll
xlat
pop
and
pop
fldcw
add
js
add
cmpsb
add
add
cmpsl
sub
ret
or
push
scas
adc
shrl
add
add
push
hlt
add
arpl
add
fldl
adc
pop
mov
jbe
adc
movb
adc
mov
push
mov
add
adc
out
add
fbstp
xchg
adc
sub
leave
inc
arpl
sub
std
in
cmp
xchg
jmp
movsl
mov
mov
insb
fimull
hlt
add
push
add
add
add
mov
add
gs
lds
xchg
clc
xlat
pop
pop
xor
mov
mov
pusha
add
dec
xchg
daa
ficompl
inc
pop
lret
loopne
xor
call
inc
jb
testb
jmp
jmp
add
add
add
or
push
mov
fsubs
xor
cmp
mov
stos
sti
sub
add
mov
push
add
hlt
add
mov
sub
fadd
add
mov
add
mov
es
add
adc
out
cmp
inc
test
add
add
mov
pop
inc
adc
cld
push
hlt
add
cmp
addr16
lret
sbb
aad
pushf
adc
dec
fcmovnu
inc
aas
addb
call
pop
inc
add
dec
out
add
jg
add
adc
das
in
sub
add
add
daa
sahf
add
adc
xor
stos
daa
xchg
add
xchg
aas
maskmovq
divl
ret
mov
pushf
in
or
and
add
add
jmp
stos
push
add
cmp
add
xchg
push
pop
stc
fwait
add
dec
push
sahf
inc
aam
flds
std
lcall
in
add
scas
xor
je
push
add
leave
sub
push
insb
aaa
sbb
xchg
jns
stos
adc
or
and
pop
add
outsl
mov
test
out
mov
add
stos
std
xchg
xchg
add
jl
push
sbb
add
fwait
jae
mov
cs
add
out
jno
xchg
mov
add
pop
pop
dec
add
add
add
add
add
nop
add
jae
mov
add
or
rolb
leave
les
push
jns
test
push
int
add
and
aad
cmp
mov
in
addb
xchg
loop
mov
add
rolb
aad
xor
add
add
sub
add
push
xchg
bound
mov
mov
iret
in
cmp
xor
mov
mov
outsb
sbb
pop
clc
lea
xor
addb
mov
adc
adc
pop
dec
imul
loop
jmp
add
add
cmc
lcall
lret
fstpt
and
add
jecxz
add
jno
mov
lcall
pop
sahf
daa
popf
xchg
jp
lahf
imul
add
cmp
add
fsubl
fwait
inc
add
test
int
add
add
add
fbstp
add
imull
scas
repnz
imul
lahf
sbb
pop
xor
ljmp
add
push
push
add
jno
dec
push
add
sub
add
add
add
popa
ja
mov
pop
addb
ret
add
pusha
add
insl
dec
movsl
jl
repnz
add
std
aad
add
push
cmpsl
dec
outsl
sub
pop
test
mov
adc
push
add
cmpl
popa
sbb
hlt
add
cmp
add
add
out
ss
stos
jl
cltd
cmp
jno
fwait
imull
sbb
repz
and
mov
xor
mov
dec
jmp
adc
cmp
sbb
add
add
leave
xchg
fadds
add
jmp
xchg
add
mov
addb
cld
sbb
rolb
aam
lds
mov
push
and
xchg
cs
push
dec
jo
scas
adc
add
add
fwait
movb
add
aaa
inc
add
outsl
inc
add
sub
cld
aad
add
mov
mov
mov
leave
loope
xchg
add
add
std
insl
nop
add
in
aad
xchg
add
mov
pusha
add
fldl
pop
mov
lock
mov
push
add
int
jne
add
add
nop
add
add
pop
nop
add
push
add
mov
add
imul
in
mov
sbb
xchg
fwait
xchg
leave
mov
add
out
pop
sbb
push
adc
cli
inc
push
add
lds
dec
loope
add
xchg
mov
inc
add
add
pop
loop
add
or
jecxz
add
stos
hlt
add
sub
dec
ficoml
cmp
pushf
or
inc
sub
movb
pop
ret
adc
inc
add
adc
arpl
add
add
loop
enter
add
out
sbb
arpl
add
mov
mov
push
add
add
xchg
pop
movsb
add
movsb
add
data16
or
add
les
pop
push
lds
pop
fisubs
push
mov
rcll
pop
or
add
testb
add
add
mov
fldln2
pusha
add
mov
add
mov
xchg
adc
mov
cmp
xor
add
add
or
enter
push
ss
ja
add
testb
into
in
les
call
xchg
addb
mov
inc
xor
inc
add
out
movsl
lods
mov
push
add
sbb
bound
mov
lods
cmp
pop
sub
std
push
add
test
sub
aad
add
jmp
mov
stos
rolb
lock
push
rolb
mov
mov
lret
stc
cltd
cli
mov
add
aam
push
fistps
sbb
xchg
insl
imul
add
out
addb
int3
out
adc
add
and
mov
add
mov
mov
into
sbb
add
sbb
add
add
pop
xchg
add
mov
add
mov
inc
add
out
sub
and
mov
adc
aas
jnp
sub
lds
and
mov
add
loope
add
mov
ficomps
cmp
jecxz
outsl
ds
add
pusha
add
pop
push
addr16
sahf
insb
addb
ret
jmp
mov
add
add
add
mov
push
fistl
jo
and
mov
add
cmp
push
pop
xchg
jne
add
mov
add
mov
dec
xchg
js
rolb
data16
cld
or
ds
and
mov
add
add
add
sbb
xlat
dec
lcall
testb
mov
cmc
pop
sub
xchg
pop
dec
sahf
inc
add
add
add
add
add
mov
add
dec
js
test
add
xchg
add
push
aam
mov
inc
popa
idivl
push
icebp
ljmp
and
lods
fwait
in
stc
popf
jno
arpl
lcall
xor
push
add
add
ljmp
fnstsw
xchg
or
push
inc
add
dec
nop
add
clc
in
add
mov
lahf
mov
cli
popa
cld
adc
lcall
push
add
add
mov
les
add
scas
push
add
sub
add
loop
pop
fndisi(8087
rcll
mov
fsubrs
lods
adc
jecxz
addr16
popa
add
mov
add
mov
add
ljmp
add
add
inc
add
add
add
push
test
inc
inc
add
add
pop
sub
jbe
lds
movsb
add
push
addr16
jecxz
loope
mov
movsl
test
int
sbb
sbb
jecxz
in
jge
xlat
inc
xlat
cmova
pop
mov
out
mov
clc
add
iret
mov
ljmp
fmull
mov
jb
mov
add
addb
testb
add
mov
add
inc
sub
xor
adc
add
jge
stc
add
lcall
add
rolb
and
mov
or
adc
xor
adc
addb
jne
fwait
ljmp
lock
outsl
roll
add
add
mov
push
add
pop
adc
sub
lret
add
outsb
sub
push
cs
ja
inc
ret
pop
sbb
lret
insl
pop
pop
testb
add
push
fisubrs
and
mov
data16
popf
mov
mov
bound
mov
arpl
dec
in
jns
out
adc
jne
add
push
add
add
out
sbb
dec
xor
aas
mov
repnz
add
mov
add
xlat
sub
addb
lret
rolb
mov
pop
mov
dec
sbb
lods
out
mov
decb
cmpsl
add
data16
nop
add
add
insb
jo
fsub
add
add
add
add
pop
inc
add
add
add
mov
or
add
fbstp
add
test
dec
repnz
and
add
xchg
add
xchg
inc
and
cwtl
repnz
loop
hlt
add
sbb
add
rolb
xor
jb
popa
adc
push
add
jae
push
add
aad
hlt
add
add
mov
add
xchg
add
pusha
add
sahf
mov
add
add
add
sub
jecxz
leave
inc
dec
push
mov
push
add
inc
add
mov
nop
add
mov
add
xchg
fnstenv
pop
dec
adc
add
mov
add
ret
sbb
dec
cmp
inc
add
shl
add
add
outsl
scas
inc
add
cs
bound
mov
lret
ret
loope
je
rcll
cmc
stos
sub
add
addb
add
add
jne
add
imul
in
sub
outsb
das
std
cmp
add
int
xchg
mov
into
xchg
add
iret
movsl
out
std
xor
add
xchg
push
jmp
add
adc
movsb
add
hlt
add
or
scas
cmpsb
add
dec
add
mov
add
mov
add
loopne
out
push
add
mov
push
add
sahf
pop
inc
popf
and
add
add
push
push
add
inc
add
add
sbb
xor
or
roll
xchg
add
mov
push
or
aas
mov
leave
xchg
mov
fidivrs
and
filds
add
sahf
cmp
add
add
add
clc
mov
cmp
xchg
add
ficoms
add
imul
rorl
push
adc
mov
adc
insl
inc
add
push
add
and
mov
xchg
and
test
mov
and
cmp
inc
leave
sbb
xchg
add
adc
push
add
add
aam
and
mov
mov
iret
mov
fsubs
add
add
or
or
xchg
adc
mov
pusha
add
gs
in
movb
jae
lret
aaa
sub
sti
rolb
xchg
mov
push
rolb
cmp
add
add
int3
mov
aas
add
add
add
dec
aas
cmp
mov
mov
add
into
orl
mov
popa
dec
jbe
inc
xchg
add
fmull
testb
or
add
jnp
mov
daa
mov
rcrl
inc
sub
jecxz
mov
testb
add
addb
push
add
add
add
add
mov
gs
testb
xchg
sbb
mov
add
int3
xor
loopne
les
xor
testb
add
mov
in
stos
lret
adc
out
xor
enter
mov
std
jnp
cmp
xchg
add
add
jnp
add
mov
add
in
daa
or
add
pop
icebp
out
or
mov
mov
inc
pop
mov
int3
inc
jl
xchg
lods
lret
ficompl
pop
mov
dec
pop
cwtl
lods
sbb
add
and
pop
rolb
nop
add
repnz
jnp
adc
cmp
sbb
pop
cwtl
xchg
aam
enter
rorl
pop
xor
sti
loopne
mov
movsl
fdivl
pop
call
out
test
in
jbe
data16
jmp
lret
mov
add
adc
xchg
cmp
jmp
imul
pop
fsts
mov
addr16
add
xchg
pop
inc
lcall
iret
adc
add
inc
add
in
hlt
add
aas
les
mov
add
ja
test
mov
cld
cmpl
in
push
mov
push
add
push
add
add
add
data16
scas
push
add
lret
mov
add
clc
xchg
xor
arpl
jmp
fisubl
pop
loop
xchg
mov
add
add
xor
fnstsw
add
dec
out
lcall
mov
dec
insb
sbb
mov
testb
add
iret
ds
and
jp
pop
outsl
cmp
lock
cld
notl
mov
add
out
push
add
ret
add
das
xchg
add
cli
daa
pop
dec
lea
add
and
fildll
xchg
add
cmp
add
movsl
jns
add
add
add
mov
sub
mov
pop
shl
jae
lret
push
add
sbb
mov
addb
sbb
add
bound
mov
clc
mov
repnz
jl
bound
mov
adc
pushf
push
adc
or
xchg
sbb
xchg
rolb
inc
add
ret
jns
add
xor
or
pop
add
add
mov
sbb
mov
jno
push
orl
mov
cmp
addb
les
enter
push
add
mov
add
add
add
call
adc
add
cwtl
scas
movb
add
push
add
xor
push
mov
xchg
add
mov
loope
movsb
add
xchg
js
add
sbbl
mov
loopne
inc
add
and
xor
into
mov
jg
add
rolb
lods
push
add
enter
sbbl
dec
in
push
fmulp
int3
in
jle
insb
push
add
xor
jl
rolb
sti
mov
add
add
pop
pop
xor
test
cmc
mov
fmuls
add
hlt
add
jo
aad
jp
add
cmpsb
add
aas
in
sbb
jb
dec
push
add
xchg
add
std
pop
mov
jmp
int
push
jecxz
popa
aas
pop
insb
stos
fdivs
xchg
add
lcall
out
addb
outsb
sti
cli
mov
add
fnstenv
xchg
push
add
mov
mov
add
idivl
aaa
das
and
mov
mov
add
xchg
add
add
mov
add
and
into
repz
and
mov
add
add
pop
add
mov
xor
xchg
pop
xlat
clc
xor
rolb
addr16
ds
mov
add
mov
push
xchg
add
add
add
lods
push
add
push
add
sub
add
add
xchg
jne
xor
add
iret
xor
cmpsb
add
push
leave
xor
lock
mov
incl
in
gs
cmp
outsl
mov
xchg
inc
add
mov
sar
lcall
mov
mov
mov
adc
clc
xchg
imul
icebp
aas
xor
add
add
add
mov
push
add
add
int
add
test
ret
movb
pusha
add
add
or
xchg
push
iret
xor
cwtl
mov
push
mov
inc
add
repnz
mov
lock
add
dec
mov
cmp
and
mov
das
stc
loopne
mov
fs
sbb
scas
in
sahf
cltd
aas
or
mov
ficompl
data16
test
je
push
sbb
jns
add
add
faddp
add
pop
inc
add
loope
add
xchg
add
sti
mov
add
xor
lea
call
imul
pushf
out
loopne
dec
xchg
mov
and
in
stos
mov
test
lahf
rolb
add
add
add
loop
add
bswap
xor
adc
nop
add
cmc
stc
pop
aad
add
jg
and
mov
inc
add
add
bound
mov
addb
add
out
cmp
ljmp
das
add
int3
mov
add
jbe
test
pop
std
aad
push
add
mov
or
js
out
add
mov
fwait
push
mov
push
add
lret
add
jmp
jno
xorl
push
push
add
mov
mov
data16
add
push
add
push
add
add
cmpsb
add
add
jns
add
mov
data16
add
lcall
cli
push
lahf
mov
push
add
xor
clc
stos
stc
push
add
add
popf
in
add
add
mov
adc
in
rolb
nop
add
lret
or
add
and
add
add
fldt
add
cmp
jae
js
add
jbe
lds
pop
fcomps
add
adc
add
mov
push
call
add
leave
cmc
jb
in
mov
mov
mov
movntps
mov
loop
and
add
in
jb
cmp
add
sbb
add
add
add
cmpsb
add
add
add
mov
sbb
or
mov
jmp
pop
aas
xlat
sti
push
jg
lahf
dec
ret
mov
add
cmp
add
add
popa
xor
fdivrp
rolb
inc
add
add
push
or
and
add
sub
add
pop
inc
add
test
add
data16
add
sbb
aam
dec
push
lret
xlat
insb
cld
and
xchg
cwtl
sarl
mov
add
add
fistpl
pop
add
add
fucomp
adc
push
inc
ficomps
sub
addr16
add
sub
fdivrs
call
add
sbb
adc
pop
cmp
jno
push
lock
xchg
div
lret
push
je
lcall
in
into
xchg
cs
sub
jno
mov
inc
es
add
push
add
add
mov
ds
or
add
mov
xchg
jnp
mov
jne
jle
loop
xchg
add
and
mov
mov
xor
cmp
jmp
add
jmp
adc
mov
or
jp
subl
sbb
add
lds
mov
fnstenv
add
push
add
add
add
incl
in
addb
add
data16
filds
inc
push
add
lock
loope
add
add
add
aad
mov
lret
pusha
add
add
xchg
sti
and
add
jae
sbb
sub
add
add
inc
add
mov
dec
sbbl
roll
add
xor
rolb
add
adc
add
les
xor
sbb
add
add
adc
mov
inc
dec
mov
testl
mov
das
clc
mov
cmc
sub
add
add
mov
repz
fs
inc
add
bound
mov
addb
outsl
xor
lret
mov
jbe
mov
clc
stos
push
dec
adc
rolb
sub
add
mov
add
clc
lods
sub
repnz
add
push
add
add
xchg
jne
add
add
addr16
cwtl
movb
hlt
add
add
add
fadd
add
jle
mov
hlt
add
enter
mov
sub
js
movb
xor
adc
fidivl
out
xchg
add
ljmp
fcoms
sahf
std
dec
mov
push
add
sub
lods
out
xchg
std
mov
jo
inc
add
add
add
call
jecxz
out
sub
imul
fldl
add
add
mov
inc
add
adc
add
add
mov
add
or
cmp
cmp
add
mov
xchg
mov
std
jb
daa
rcr
add
add
cwtl
adc
mov
cli
add
mov
sbb
mov
test
lahf
pop
mov
out
out
popa
sub
lret
pop
int
jne
or
cs
in
lahf
bound
mov
das
ds
lods
dec
adc
aam
adc
lock
dec
outsb
and
mov
pushf
pusha
add
mov
mov
and
mov
fwait
clc
test
data16
dec
jecxz
add
in
cmpsb
add
pop
jl
fwait
out
mov
add
aaa
xor
out
jo
xchg
push
jp
mov
add
add
add
jo
pop
lcall
add
outsb
fisubrs
and
mov
pushf
ret
add
add
xor
push
mov
mov
or
xor
lcall
inc
add
or
cmp
rolb
xchg
fisttpl
lahf
add
mov
sbb
sbb
out
data16
add
add
xor
xchg
adc
add
add
repz
add
add
test
adc
push
movsb
add
bound
mov
jbe
out
insb
inc
add
sbb
mov
add
add
aaa
add
inc
add
pminsw
add
in
cmp
inc
add
mov
add
mov
add
add
add
add
add
add
movsb
add
add
pop
mov
popf
mov
push
add
add
cmp
jnp
push
add
lcall
out
into
lcall
lods
rolb
dec
inc
inc
add
inc
add
xor
jp
add
add
ds
pop
cmp
mov
popf
or
add
add
pop
cmp
inc
mov
test
sbb
add
add
and
xor
and
icebp
xchg
dec
push
add
aaa
jmp
mov
jbe
sub
add
div
iret
push
add
je
iret
mov
push
add
testb
add
add
xchg
add
sahf
xchg
add
lahf
mov
movb
mov
paddsw
into
or
lcall
ss
jecxz
aaa
sbbl
jg
mov
loope
add
addr16
stos
cltd
or
pop
dec
mov
add
add
mov
popf
xor
fld
add
mov
pop
pop
adc
dec
repz
add
add
dec
mov
fsubr
in
out
mov
outsl
mov
lret
add
and
mov
bound
mov
xor
add
lcall
in
shll
les
add
or
sti
mov
push
inc
add
mov
cmpl
rorl
nop
add
scas
iret
cmp
pop
outsb
mov
addr16
add
rolb
xor
out
stos
mov
mov
mov
int
sbb
rolb
cmp
xchg
add
loopne
xchg
fisttpll
aad
aas
lods
push
call
or
add
add
aam
push
xor
add
add
clc
mov
stos
jno
push
add
add
add
adc
je
inc
and
cmc
xlat
or
jns
or
sbb
jne
loope
int3
fnstsw
clc
mov
xor
sub
add
loope
lahf
and
sbb
add
add
add
inc
add
add
push
add
outsb
jns
add
sbb
imul
movsb
add
push
aam
rorl
mov
add
mov
mov
mov
add
add
and
adc
repnz
scas
stos
gs
scas
stos
cmp
and
add
add
rolb
lret
mov
iret
stc
sti
insl
loopne
fists
add
add
push
add
fdivrs
add
add
std
inc
add
add
add
add
rolb
addb
in
xor
or
xchg
dec
push
add
lret
inc
push
or
xchg
add
add
loop
addb
add
mov
mov
das
mov
add
add
mov
add
pop
int3
mov
or
mov
xchg
add
add
fwait
adc
push
add
mov
push
stos
sub
mov
add
xchg
add
add
pop
add
and
push
jge
daa
in
jecxz
ss
add
cmp
inc
and
mov
add
das
jb
inc
add
add
fdivs
xor
push
add
aad
add
mov
in
ret
cmpsl
pop
dec
rolb
sub
rolb
cmp
std
addr16
cli
jle
mov
push
dec
mov
xchg
and
mov
test
rcll
dec
jbe
dec
addr16
add
ds
enter
mov
int3
aam
test
pop
mov
push
add
add
jp
movsb
add
jae
add
adc
je
jg
add
icebp
fdivs
shll
add
add
add
fistpll
dec
xchg
and
out
rolb
xor
mov
jnp
jecxz
sbb
mov
aam
inc
add
movb
pushf
mov
mov
pusha
add
js
add
add
xchg
add
add
cmc
int3
outsb
xchg
add
enter
and
mov
add
inc
out
add
outsl
sbb
ds
jb
addb
add
add
sbb
mov
add
rcll
add
or
cmpsl
scas
add
pop
add
add
mov
mov
mov
add
mov
mov
add
push
add
in
in
xchg
mov
add
add
les
stos
test
cmp
mov
insl
xchg
push
add
push
out
rolb
cmpsb
add
sbb
jl
add
rol
rolb
push
pushf
icebp
xor
sahf
or
movsl
pop
pusha
add
push
mov
mov
add
mov
shrl
stos
sbb
pushf
sub
jnp
fiaddl
adcl
cli
mov
int3
inc
add
mov
mov
mov
sbb
je
adc
data16
imul
lahf
add
fldlg2
mov
js
add
xor
insl
and
popf
sbb
add
jo
sbb
mov
add
xor
xchg
push
add
inc
add
das
mov
lret
pop
out
imul
add
dec
and
add
push
test
or
add
inc
daa
bound
mov
push
add
pop
dec
or
mov
push
and
in
add
add
imul
mov
xchg
add
mov
testb
rep
dec
mov
pop
add
dec
lea
jg
add
jnp
cltd
jmp
add
scas
or
lods
xchg
xchg
ljmp
add
add
add
mov
add
cmp
mov
mov
add
movb
push
add
xlat
push
fnstsw
mov
add
rolb
pusha
add
xchg
adc
add
sbb
and
mov
out
inc
add
ficompl
mov
movb
mov
add
faddl
adc
mov
add
lock
add
int3
push
mov
adc
rep
lds
add
testb
test
pop
and
mov
scas
adc
pop
out
dec
or
add
out
addb
jle
add
add
mov
lret
icebp
add
add
jecxz
js
das
sbb
add
xor
scas
adc
addr16
inc
add
push
add
pop
fistpll
add
xchg
xor
add
sbb
pop
and
jnp
add
push
add
add
sub
negl
add
mov
outsb
call
inc
mul
dec
scas
jl
repnz
add
popf
std
push
les
enter
add
add
pop
add
mov
pop
inc
dec
push
add
push
cmp
loope
mov
jl
or
add
add
aas
jo
and
mov
ret
mov
daa
outsb
sub
pop
lods
adc
add
sbb
sti
sbb
cmp
inc
add
ljmp
fiadds
lock
add
dec
das
lahf
lods
dec
or
loopne
xchg
jns
sbb
add
xchg
add
add
mov
cmp
popa
push
in
add
mov
add
mov
add
xlat
mov
sub
push
add
aam
sbb
add
add
inc
lock
add
jp
data16
add
add
add
mov
push
cmp
fwait
ret
push
xor
lret
sbb
shll
add
add
or
add
nop
add
cmp
ret
fwait
sbb
or
adc
push
or
inc
adc
adc
insb
xorl
imul
sbb
push
fstl
sub
jmp
cs
sub
push
addr16
addr16
lds
sub
inc
add
add
add
in
das
push
cld
dec
adc
push
add
add
hlt
add
mov
add
add
sbb
mov
les
or
mov
jmp
mov
jge
dec
mov
push
add
add
jb
pop
jmp
add
add
movsl
add
add
jno
add
mov
adcl
xchg
jno
sub
and
mov
adc
push
addb
xor
lock
add
mov
inc
jl
add
dec
mov
add
add
in
lcall
push
insb
test
gs
std
test
repz
dec
adc
test
sti
pop
insl
cmp
cld
xchg
add
add
cmp
int3
mov
adc
and
cmp
mov
add
add
mov
incl
add
add
push
add
add
insb
push
add
push
divl
fsubrs
mov
add
lmsw
push
add
add
test
or
mov
add
add
xor
dec
xor
test
testb
add
imul
loop
push
add
mov
dec
cmp
cli
rolb
ret
and
addl
adc
stc
test
out
xchg
xchg
add
or
xchg
dec
lahf
push
add
or
pop
outsl
or
add
push
add
mov
pop
movsb
add
add
rcl
aam
mov
cld
mov
addb
jp
add
testb
cmpsl
and
push
add
rolb
popf
js
stos
test
adc
add
test
or
mov
add
dec
xor
lahf
lcall
and
popf
mov
in
lcall
rcll
push
adc
cld
push
add
add
ja
push
outsb
movsb
add
add
in
iret
inc
add
test
and
add
lahf
movsb
add
sbb
and
bound
mov
add
mov
jne
sub
add
fisubrl
dec
int3
movsb
add
add
outsl
mov
jge
movb
add
jecxz
add
stos
jb
fistpl
orl
mov
lock
jmp
mov
mov
or
push
sbb
add
cmp
aas
imul
inc
cmp
cmp
arpl
fwait
mov
xor
insb
pop
scas
xchg
adc
or
clc
into
cmp
xor
add
cmp
icebp
mov
test
insb
out
jecxz
sub
aaa
mov
add
addr16
add
mov
rolb
dec
imul
mov
add
dec
cmc
sub
clc
sahf
inc
push
add
or
adc
ljmp
add
add
push
in
rcr
jbe
push
sub
cmp
inc
add
add
fdivs
add
add
or
sub
dec
fstpl
out
cmc
or
add
jecxz
dec
jecxz
orl
add
decb
mov
add
or
test
add
mov
jp
add
cwtl
add
sbb
addb
std
out
ret
lds
arpl
adc
sub
cmp
inc
add
imul
clc
in
xchg
cmpsl
das
aaa
sub
add
push
add
cmp
loope
outsl
adc
lret
shr
mov
add
add
adc
bound
mov
inc
add
pop
sub
add
pop
and
addb
mov
or
scas
xor
cltd
movsb
add
add
add
add
xchg
xor
add
push
add
add
scas
sbb
push
add
add
xchg
push
add
ficompl
push
xchg
pop
add
mov
adc
xchg
add
add
mov
clc
repnz
jae
flds
pop
push
mov
lock
add
add
mov
int
add
pop
cmpsb
add
es
pop
fwait
cld
nop
jmp
fisttps
int
add
or
rcrl
add
fwait
cld
nop
jmp
adc
add
add
repnz
jae
mov
lods
push
mov
xchg
ret
add
add
mov
add
scas
enter
jae
add
outsl
movzwl
clc
repnz
jae
add
push
pop
inc
sbb
nop
jae
add
add
out
jo
add
clc
repnz
jae
add
int
sub
fwait
and
clc
repnz
jae
add
fcoms
dec
shl
clc
repnz
jae
fbstp
lds
loopne
lock
jmp
xlat
out
repz
add
out
insb
jl
fwait
cld
nop
jmp
add
add
cmc
incb
pop
cmp
repnz
jae
add
add
sbb
repnz
jae
rolb
xchg
pop
jne
clc
repnz
jae
add
xchg
add
clc
repnz
jae
in
mov
clc
repnz
jae
lock
nop
fistpll
fwait
cld
nop
jmp
add
sub
loop
xchg
clc
repnz
jae
rolb
xlat
cltd
mov
call
clc
repnz
jae
add
movzwl
clc
repnz
jae
add
cmp
add
cli
flds
xchg
ret
sub
add
push
push
mov
xchg
ret
int
mov
cltd
sbb
mov
xchg
ret
add
mov
mov
jae
add
inc
add
jb
jne
clc
repnz
jae
out
add
add
mov
clc
repnz
jae
jo
add
add
clc
repnz
jae
lea
rorl
call
clc
repnz
jae
or
add
nop
jae
mov
in
add
add
ficoml
in
add
inc
add
sbb
add
add
add
dec
test
fwait
cld
nop
jmp
jp
add
or
fmuls
clc
repnz
jae
lock
mov
add
push
add
push
mov
push
sbb
movsb
fwait
cld
nop
jmp
push
add
add
inc
add
add
call
clc
repnz
jae
loop
add
cld
nop
jmp
out
add
add
fldl
jnp
ror
clc
repnz
jae
add
mov
fwait
cld
nop
jmp
sbb
cltd
add
add
add
push
clc
repnz
jae
mov
in
add
jne
clc
repnz
jae
xchg
pop
es
jmp
mov
add
mov
mov
xchg
push
popa
fwait
cld
nop
jmp
add
mov
daa
add
add
adc
pop
subl
clc
repnz
jae
iret
xor
fadds
lahf
movzwl
fwait
cld
nop
jmp
jp
add
in
push
sub
add
add
repnz
jae
inc
add
fldcw
push
mov
xchg
ret
insb
add
inc
push
add
push
mov
xchg
ret
add
or
add
and
addl
add
add
fldl
lock
test
adc
nop
jae
fadds
mov
add
clc
repnz
jae
repz
push
pop
add
clc
repnz
jae
cltd
add
add
add
sub
jnp
inc
add
xchg
add
int3
and
clc
repnz
jae
push
add
add
adc
mov
cmpsl
or
jne
clc
repnz
jae
incb
mov
and
clc
repnz
jae
add
add
and
dec
hlt
inc
add
fstp
add
add
add
mov
inc
add
lea
add
adc
sbb
cmp
repnz
jae
add
add
scas
add
clc
repnz
jae
cwtl
add
add
add
mov
clc
repnz
jae
mov
pop
push
fwait
cld
nop
jmp
inc
nop
cmpsb
loop
loop
add
aam
xchg
sti
push
clc
repnz
jae
add
add
fwait
jmp
add
add
add
push
loop
mov
add
ja
test
push
mov
xchg
ret
adc
add
inc
adc
repnz
jae
mov
testl
clc
repnz
jae
add
jp
add
test
add
clc
repnz
jae
add
sub
mov
int
sbb
repnz
jae
add
add
add
add
mov
xchg
ret
mov
in
and
fwait
cld
nop
jmp
in
into
repz
cmpsb
je
test
mov
rcll
fldl
xchg
ret
into
fistpll
add
fdivr
mov
clc
repnz
jae
in
in
add
nop
jae
sbb
out
adc
add
cmc
mov
test
fnstsw
clc
repnz
jae
or
dec
jmp
clc
repnz
jae
mov
add
fsubrl
rolb
clc
repnz
jae
add
fldl
cmc
cwtl
lea
push
mov
xchg
ret
add
add
add
clc
repnz
jae
sub
fmuls
add
mov
xchg
ret
cwtl
mov
add
stos
add
clc
repnz
jae
mov
rolb
sarb
add
repnz
jae
mov
add
cmp
fwait
cld
nop
jmp
sbb
testl
orb
nop
jae
out
fscale
dec
fwait
cld
nop
jmp
loop
add
lea
add
add
subl
push
mov
xchg
ret
sub
add
push
aam
fldl
nop
jae
add
add
add
or
nop
jmp
fadds
push
jo
xor
xchg
add
add
push
add
add
iret
add
add
xchg
insb
incb
push
jae
add
add
push
mov
xchg
ret
add
mov
add
mov
ljmp
xor
add
incb
or
add
into
jmp
add
repz
push
mov
xchg
ret
add
f2xm1
add
push
out
mov
push
mov
xchg
ret
sub
mov
clc
repnz
jae
add
daa
cmpl
jae
testl
jo
sbb
add
repnz
jae
es
subl
mov
xchg
ret
fldl
add
dec
mov
fwait
cld
nop
jmp
mov
add
add
mov
xchg
ret
loop
inc
add
push
add
clc
repnz
jae
add
nop
mov
into
adc
mov
nop
jmp
xchg
add
rolb
fabs
daa
rcrl
add
add
push
pop
add
scas
pusha
clc
repnz
jae
add
add
add
push
mov
xchg
ret
push
loop
jnp
xchg
xchg
add
add
clc
repnz
jae
int
mov
insb
mov
mov
clc
repnz
jae
or
inc
or
pop
std
clc
repnz
jae
fadds
mov
and
push
push
mov
xchg
ret
fcom
in
iret
add
insb
pop
push
mov
xchg
ret
add
testl
add
add
add
outsb
add
clc
repnz
jae
add
in
push
flds
data16
out
add
add
pop
clc
repnz
jae
add
add
lock
mov
jae
repnz
jae
add
dec
add
mov
xchg
ret
in
add
add
imul
fwait
cld
nop
jmp
into
rolb
jmp
out
add
add
clc
repnz
jae
sbb
add
lea
nop
jae
add
nop
add
add
es
add
add
clc
repnz
jae
add
clc
repnz
jae
fcoms
xor
rolb
add
mov
clc
repnz
jae
sub
insb
jmp
add
add
and
add
adc
repnz
jae
xchg
add
add
insb
lret
clc
repnz
jae
sbb
add
clc
repnz
jae
fldenv
pushf
push
push
mov
xchg
ret
jnp
loop
inc
xchg
and
mov
mov
xchg
ret
xor
add
in
icebp
adc
xor
inc
add
cmp
loop
add
push
fwait
cld
nop
jmp
lock
add
sbb
fdivrs
push
clc
repnz
jae
add
into
es
add
adc
mov
nop
jae
cmp
mov
jo
add
sbb
repnz
jae
add
add
xor
add
adc
lock
clc
pop
push
mov
xchg
ret
add
add
lods
jmp
add
push
add
add
jnp
add
add
pop
push
mov
xchg
ret
push
out
or
xlat
sbb
aam
movsl
jle
clc
repnz
jae
add
add
mov
repnz
jae
rolb
mov
or
clc
repnz
jae
push
cmp
add
fdivs
jne
clc
repnz
jae
add
daa
movsl
incl
jmp
mov
xchg
ret
add
or
pop
pop
pop
add
push
mov
xchg
ret
pop
add
add
add
mov
mov
xchg
ret
fadds
testl
and
mov
add
push
mov
xchg
ret
add
in
add
dec
fwait
cld
nop
jmp
add
add
xchg
add
add
test
mov
fwait
cld
nop
jmp
push
add
lea
add
add
clc
repnz
jae
add
daa
or
test
repnz
jae
out
flds
and
fisttpll
jae
repz
push
testl
jne
clc
repnz
jae
pop
add
add
add
mov
imul
clc
repnz
jae
add
fadds
dec
lea
fwait
cld
nop
jmp
add
add
jmp
daa
add
add
pop
pop
clc
repnz
jae
testl
add
fdiv
stos
clc
repnz
jae
add
out
loop
pop
loop
cmpl
fwait
cld
nop
jmp
fadds
out
add
add
sub
negl
sbb
add
nop
add
mov
add
mov
push
mov
xchg
ret
pop
add
add
add
repnz
jae
add
add
add
adc
flds
nop
jae
repz
add
add
sbb
nop
jae
add
iret
or
out
cwtl
je
clc
repnz
jae
add
mov
push
mov
xchg
ret
add
xlat
into
mov
pusha
add
fwait
cld
nop
jmp
add
pop
mov
push
push
mov
xchg
ret
or
add
mov
clc
repnz
jae
sbb
add
add
rcll
lret
out
add
add
adc
add
cmpsb
add
nop
jae
iret
add
add
add
add
fwait
cld
nop
jmp
fbstp
lea
add
jp
add
fwait
cld
nop
jmp
add
add
add
jmp
inc
add
pop
add
add
repnz
jae
mov
mov
cld
nop
jmp
sub
fcoms
fadds
add
sar
repnz
jae
add
mov
popa
clc
repnz
jae
or
nop
jb
add
add
andl
jae
incb
rclb
add
clc
repnz
jae
loop
in
add
or
repnz
jae
add
add
mov
jp
lods
push
clc
repnz
jae
add
add
push
clc
repnz
jae
or
add
mov
repnz
jae
push
mov
push
add
stos
clc
repnz
jae
add
nop
daa
xchg
add
push
push
mov
xchg
ret
add
add
mov
fwait
cld
nop
jmp
adc
add
out
add
push
mov
xchg
ret
add
call
fwait
cld
nop
jmp
add
jb
add
cld
nop
jmp
inc
mov
add
loopne
sub
dec
push
clc
repnz
jae
mov
add
add
add
pop
adc
add
add
pop
sub
mov
push
mov
xchg
ret
add
jb
fst
add
mov
push
mov
xchg
ret
jnp
add
pop
adc
cmpw
fwait
cld
nop
jmp
insb
mov
xchg
clc
repnz
jae
add
add
loopne
jae
add
clc
repnz
jae
mov
add
outsl
pop
fwait
cld
nop
jmp
add
add
add
add
push
clc
repnz
jae
add
add
mov
add
push
adc
cld
nop
jmp
sub
add
movzwl
clc
repnz
jae
sbb
jo
add
pushl
clc
repnz
jae
add
pop
add
push
push
jae
add
sub
clc
add
fwait
cld
nop
jmp
fldenv
iret
ror
mov
clc
repnz
jae
int
add
incb
cwtl
dec
push
mov
xchg
ret
mov
add
add
add
mov
clc
repnz
jae
out
sub
pop
xchg
add
push
mov
xchg
ret
add
add
xor
clc
repnz
jae
push
inc
mov
add
add
cmp
jmp
jmp
add
pop
ds
push
mov
xchg
ret
or
pop
fwait
cld
nop
jmp
add
add
es
inc
add
scas
push
clc
repnz
jae
add
push
add
nop
rcrb
dec
adc
out
fadds
xchg
ret
pop
add
xchg
out
cmc
jbe
mov
rep
clc
repnz
jae
add
push
cwtl
mov
clc
repnz
jae
nop
loop
flds
xor
push
dec
clc
repnz
jae
fadds
adc
add
fldenv
add
add
clc
repnz
jae
add
in
je,pt
clc
repnz
jae
cwtl
jnp
sub
mov
clc
repnz
jae
add
lahf
mov
clc
repnz
jae
add
js
jmp
jp
fwait
cld
nop
jmp
loop
repz
mov
add
add
repnz
jae
or
mov
test
cld
nop
jmp
add
cwtl
sub
test
xor
clc
repnz
jae
es
xor
popa
push
mov
xchg
ret
insb
testl
cmp
dec
or
repnz
jae
mov
mov
clc
repnz
jae
mov
rolb
add
mov
clc
repnz
jae
cmp
xor
daa
shr
stos
push
mov
xchg
ret
incb
add
add
clc
repnz
jae
mov
mov
or
fwait
cld
nop
jmp
rep
or
add
inc
test
and
mov
xchg
ret
mov
xchg
add
ret
push
mov
xchg
ret
add
add
repz
add
je
add
repnz
jae
add
jo
inc
add
nop
jae
push
iret
add
flds
iret
sbb
mov
xchg
ret
push
filds
loop
add
sahf
dec
fwait
cld
nop
jmp
mov
add
out
add
cwtl
inc
push
mov
clc
repnz
jae
loop
add
add
rep
push
mov
xchg
ret
add
testl
dec
adc
repnz
jae
xchg
add
add
fadds
mov
addb
cld
mov
add
jae
add
or
pop
add
add
push
fwait
cld
nop
jmp
in
fldl
rolb
add
nop
stc
test
push
mov
xchg
ret
fdivrs
or
add
fwait
cld
nop
jmp
add
add
add
adc
add
add
repnz
jae
add
dec
jne
clc
repnz
jae
xor
repnz
jae
add
mov
push
daa
mov
push
mov
xchg
ret
xchg
loop
shrb
jae
inc
loop
add
mov
add
add
cld
push
mov
jne
add
fwait
cld
nop
jmp
add
mov
push
mov
xchg
ret
in
add
add
jae
add
mov
add
add
out
incl
add
add
push
mov
xchg
ret
fsubr
mov
add
test
add
repz
incl
or
inc
jnp
add
mov
xchg
ret
fadds
out
add
add
cli
clc
repnz
jae
add
out
sbb
loop
fwait
cld
nop
jmp
mov
add
add
xchg
jb
jns
mov
push
fwait
cld
nop
jmp
mov
add
add
test
add
push
mov
xchg
ret
add
iret
push
inc
adc
push
add
add
add
cmp
fwait
cld
nop
jmp
add
add
add
decl
roll
xchg
ret
out
jo
add
add
ret
clc
repnz
jae
add
add
es
dec
dec
fwait
cld
nop
jmp
mov
add
xchg
pop
pop
decl
clc
repnz
jae
add
or
daa
add
add
add
nop
jmp
mov
loop
insb
add
in
out
add
clc
repnz
jae
add
in
mov
add
add
mov
push
mov
xchg
ret
add
adc
add
push
add
and
cmp
ret
lock
add
pop
and
xchg
lret
clc
repnz
jae
xchg
add
jo
in
rcrl
mov
clc
repnz
jae
jo
add
add
clc
repnz
jae
or
add
or
popa
cli
mov
push
mov
xchg
ret
iret
loop
iret
push
jns
pop
lcall
in
fcomps
idivl
shr
push
mov
xchg
ret
add
add
add
add
repnz
jae
add
pop
add
inc
jbe
aad
push
clc
repnz
jae
mov
add
add
shl
je
or
or
repnz
jae
or
fisttpll
add
clc
repnz
jae
jo
repz
int
add
insb
push
clc
repnz
jae
add
es
enter
add
add
add
jnp
add
out
insb
mov
adc
ret
je
clc
repnz
jae
jb
mov
pop
clc
repnz
jae
inc
inc
cmpsb
fnstenv
xor
clc
repnz
jae
dec
add
push
clc
repnz
jae
in
out
shrb
xor
incl
add
fadds
xlat
add
jmp
sti
add
add
out
pushl
repz
sbb
aam
add
mov
push
add
add
add
push
mov
xchg
ret
loop
repz
clc
repnz
jae
loop
add
out
sbb
nop
jae
jmp
test
add
mov
in
icebp
lcall
or
add
decl
call
and
daa
add
insb
loop
test
add
add
repnz
jae
or
out
add
xchg
std
cmp
or
mov
jo
push
jae
add
jne
clc
repnz
jae
lock
clc
repnz
jae
adc
filds
lea
sar
nop
jae
out
lea
add
add
into
div
fwait
cld
nop
jmp
jnp
daa
add
sbb
and
cld
nop
jmp
cmp
add
pop
add
and
push
mov
xchg
ret
add
out
flds
call
jb
repnz
jae
add
add
pushf
push
clc
repnz
jae
add
or
int
mov
repnz
jae
into
iret
add
cmp
nop
jae
sub
mov
fldl
cld
nop
jmp
add
repnz
add
pop
clc
repnz
jae
out
lock
mov
add
mov
nop
jmp
into
add
add
add
xchg
add
shll
add
clc
repnz
jae
add
jp
insb
cmp
mov
clc
repnz
jae
or
add
add
mov
xchg
ret
iret
insb
es
add
ljmp
jae
jo
add
add
or
clc
repnz
jae
add
sub
je
clc
repnz
jae
in
add
push
push
mov
xchg
ret
xchg
pop
push
add
push
mov
mov
ret
add
add
clc
add
push
mov
xchg
ret
add
xor
push
cmpsb
push
loope
or
add
repnz
jae
out
add
add
popa
add
cld
nop
jmp
add
fldl
loop
xchg
pop
push
add
add
add
mov
clc
repnz
jae
add
jnp
add
rol
push
mov
xchg
ret
add
xchg
add
dec
add
repnz
jae
add
inc
add
mov
xchg
ret
jp
add
jb
push
add
push
mov
xchg
ret
add
pop
sub
sub
imul
clc
repnz
jae
add
add
cmp
in
add
or
add
push
push
mov
xchg
ret
nop
add
js
clc
repnz
jae
add
fstps
add
in
pop
add
pusha
add
jb
push
add
xchg
add
arpl
clc
repnz
jae
add
add
push
mov
xchg
ret
push
out
add
fadds
in
inc
or
cmp
nop
jae
mov
mov
fwait
cld
nop
jmp
add
cmp
testl
loopne
repnz
jae
in
jmp
jnp
inc
int
cwtl
std
jmp
add
cmpsb
out
add
push
push
clc
repnz
jae
add
or
call
clc
repnz
jae
repz
add
out
add
fwait
cld
nop
jmp
or
add
loop
mov
andl
mov
out
inc
add
add
push
out
push
popa
das
push
clc
repnz
jae
mov
add
add
lea
fwait
cld
nop
jmp
into
iret
add
add
decb
enter
jae
add
add
cmp
add
and
mov
cmp
repnz
jae
add
ds
clc
repnz
jae
jmp
mov
xchg
xor
xchg
aas
pushl
push
mov
xchg
ret
add
sbb
add
add
repnz
jae
add
addb
add
sbb
add
clc
repnz
jae
jp
bound
mov
add
mov
clc
repnz
jae
loop
push
add
add
add
clc
repnz
jae
add
push
sbb
mov
add
repnz
jae
cmpsb
incb
incb
xchg
stc
mov
fwait
cld
nop
jmp
add
decb
iret
add
mov
mov
xchg
ret
lock
incb
testb
mov
leave
mov
clc
repnz
jae
add
lock
mov
sub
nop
jae
cltd
xor
out
add
ljmp
nop
jae
add
jp
dec
pop
fwait
cld
nop
jmp
push
add
add
add
push
add
in
add
add
add
jo
add
inc
push
add
add
add
add
mov
fwait
cld
nop
jmp
mov
into
lea
add
mov
fwait
cld
nop
jmp
in
fisttpll
clc
repnz
jae
add
add
fadds
jo
xor
fwait
cld
nop
jmp
jnp
cmp
mov
mov
lret
xor
clc
repnz
jae
add
add
ret
or
mov
jp
mov
mov
clc
repnz
jae
add
add
add
das
pop
fwait
cld
nop
jmp
add
add
cwtl
pop
or
in
pusha
push
mov
xchg
ret
sub
repz
add
cld
nop
jmp
add
cltd
filds
add
jno
add
and
push
mov
xchg
ret
jnp
add
add
add
clc
repnz
jae
fdivs
into
insb
jmp
xchg
arpl
add
sub
clc
repnz
jae
inc
pop
mov
push
sar
nop
jae
add
shl
or
add
mov
clc
repnz
jae
jnp
pop
xchg
xchg
es
mov
clc
repnz
jae
int
pop
daa
daa
iret
jnp
je
fwait
cld
nop
jmp
out
push
iret
mov
sub
lret
fwait
cld
nop
jmp
add
mov
repnz
jae
add
add
dec
add
clc
repnz
jae
mov
out
add
ljmp
or
add
add
mov
incl
fincstp
into
add
push
add
mov
outsb
filds
xchg
ret
sub
add
mov
mov
sbb
out
add
cwtl
lea
fcomp
add
ja
cmp
fwait
cld
nop
jmp
add
adc
into
inc
add
jge
loop
fwait
cld
nop
jmp
add
add
or
inc
add
add
ljmp
out
add
add
inc
add
hlt
add
add
test
add
push
push
mov
xchg
ret
mov
add
shlb
jne
xor
add
fwait
cld
nop
jmp
repz
mov
psubsb
clc
repnz
jae
inc
jnp
es
add
call
clc
repnz
jae
xor
add
push
push
mov
xchg
ret
fadds
fisttpll
mov
xchg
ret
add
fstl
lock
popa
add
cld
nop
jmp
incb
mov
mov
xor
cmp
ret
or
add
mov
push
add
test
or
add
repnz
jae
add
es
rolb
pop
clc
repnz
jae
mov
inc
cltd
nop
sbb
clc
repnz
jae
add
mov
xlat
add
inc
sbb
clc
repnz
jae
in
add
push
add
and
push
mov
xchg
ret
add
shlb
add
xor
fwait
cld
nop
jmp
add
flds
add
add
int
clc
repnz
jae
add
xlat
or
or
add
add
loope
jmp
add
sahf
push
push
mov
xchg
ret
add
add
and
repnz
jae
mov
sbb
outsl
loopne
mov
xchg
ret
jmp
mov
fldl
push
mov
xchg
ret
add
or
add
mov
clc
repnz
jae
add
mov
out
add
jbe
push
mov
xchg
ret
out
or
testl
sub
inc
add
rolb
cmp
add
or
repnz
jae
mov
mov
push
mov
test
fwait
cld
nop
jmp
testl
sarl
add
pop
add
or
mov
xchg
ret
loop
jb
es
pop
mov
fwait
cld
nop
jmp
add
add
add
icebp
push
jae
add
pop
jnp
cwtl
add
bound
mov
jl
sbb
cld
nop
jmp
or
inc
add
sti
sub
clc
repnz
jae
add
add
testl
addl
add
add
lcall
repnz
jae
add
add
push
cltd
add
push
mov
xchg
ret
mov
add
stos
jne
clc
repnz
jae
add
inc
add
repnz
jae
or
add
fwait
cld
nop
jmp
xor
push
loop
pop
add
hlt
add
adc
fwait
cld
nop
jmp
sub
inc
add
add
inc
push
adc
clc
repnz
jae
add
add
jo
dec
push
push
mov
xchg
ret
push
pop
loop
add
add
repnz
jae
add
pop
sub
add
add
rep
fwait
cld
nop
jmp
int
add
add
add
add
fucomi
or
add
add
xor
pop
in
add
out
push
add
add
stos
fwait
cld
nop
jmp
add
loop
adc
insb
add
adc
or
repnz
jae
xchg
xchg
jp
add
mov
nop
jae
mov
push
gs
xchg
dec
cld
clc
repnz
jae
nop
add
nop
add
or
or
repnz
jae
pop
iret
jo
cmp
rolb
repz
jge
clc
repnz
jae
shrb
lea
add
xor
repnz
jae
mov
sub
add
mov
xchg
ret
sbb
int
add
cwtl
cs
clc
repnz
jae
add
add
imul
clc
repnz
jae
mov
add
add
lock
push
push
mov
xchg
ret
add
loop
add
mov
push
push
mov
xchg
ret
or
add
mov
nop
jae
add
lock
fnsave
fdivrs
push
mov
xchg
ret
out
cmp
xor
mov
nop
jmp
add
add
add
sub
push
mov
xchg
ret
add
add
or
mov
xchg
ret
fadds
add
add
mov
clc
repnz
jae
add
add
add
inc
dec
add
clc
repnz
jae
in
mov
add
clc
repnz
jae
add
jo
mov
add
incb
jb
clc
repnz
jae
jb
jb
inc
sbb
dec
cmp
cld
nop
jmp
add
add
add
jns
push
mov
xchg
ret
add
sub
lock
lea
jne
je
repnz
jae
add
add
mov
add
clc
repnz
jae
add
add
or
cld
nop
jmp
add
sub
add
add
mov
add
mov
and
add
clc
repnz
jae
or
add
out
cmp
imul
cmp
push
add
add
mov
push
mov
xchg
ret
inc
add
insb
or
test
loop
clc
repnz
jae
int
add
add
nop
jae
add
fdivrs
cld
pop
fwait
cld
nop
jmp
sub
jmp
jmp
add
inc
clc
repnz
jae
add
xchg
loop
lock
jae
add
xchg
cltd
add
cmp
jmp
or
add
daa
add
fadds
jns
sbb
clc
incl
add
xlat
add
add
add
repnz
jae
jb
out
idivl
stos
stos
clc
repnz
jae
rolb
add
dec
mov
clc
repnz
jae
add
add
add
imul
cltd
call
iret
jecxz
popf
xor
push
add
mov
xchg
ret
add
add
adcl
shr
clc
repnz
jae
out
neg
mov
push
mov
xchg
ret
add
add
xlat
cltd
lea
clc
repnz
jae
mov
gs
mov
repnz
jae
jp
jmp
loop
clc
mov
clc
repnz
jae
add
add
inc
sub
repnz
jae
mov
pop
dec
push
clc
repnz
jae
add
jnp
sbb
add
mul
or
popa
add
repnz
jae
sub
rolb
xor
ja
pop
clc
repnz
jae
add
add
cwtl
sub
sub
aad
add
add
mov
clc
repnz
jae
add
nop
add
add
lods
clc
repnz
jae
adc
add
filds
dec
dec
fwait
cld
nop
jmp
or
add
mov
mov
nop
jmp
add
add
jb
mov
mov
jae
pop
add
rolb
push
nop
add
lret
mov
push
mov
xchg
ret
add
fnstsw
test
sti
clc
repnz
jae
in
add
add
pusha
clc
repnz
jae
add
add
xlat
add
pop
xor
clc
repnz
jae
add
fsubr
add
cmp
repnz
jae
add
or
add
testl
push
adc
dec
popl
fwait
cld
nop
jmp
add
add
cmp
xchg
cld
call
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
out
push
push
mov
xchg
ret
jp
mov
int
pop
add
add
add
repnz
jae
jnp
add
xor
jae
repnz
jae
or
loop
mov
clc
repnz
jae
mov
fadds
mov
stos
add
clc
repnz
jae
pop
mov
pushf
pop
clc
repnz
jae
add
lea
cltd
add
sbb
push
mov
xchg
ret
iret
add
out
add
fdivrp
clc
repnz
jae
add
mov
repnz
jae
add
push
mov
add
out
adc
jne
push
mov
xchg
ret
add
sub
scas
add
add
repnz
jae
add
fsubrs
fwait
cld
nop
jmp
adc
cltd
push
daa
cmpsb
jp
leave
clc
repnz
jae
testl
jmp
add
loop
sub
cli
inc
add
add
fistpll
fwait
cld
nop
jmp
out
add
add
mov
or
mov
xchg
ret
xlat
mov
cwtl
lock
mov
jae
fucomp
mov
fdivp
movsb
fwait
cld
nop
jmp
mov
push
add
testb
mov
clc
repnz
jae
add
mov
mov
push
mov
xchg
ret
add
into
add
add
mov
clc
repnz
jae
add
add
xor
add
push
mov
xchg
ret
add
mov
jge
clc
repnz
jae
add
pop
out
add
mov
add
add
testb
push
roll
xchg
add
and
push
mov
xchg
ret
mov
xchg
outsb
and
repnz
jae
lock
add
movb
add
add
add
clc
repnz
jae
es
add
jmp
daa
icebp
ja
or
nop
jmp
mul
mov
add
pop
jae
add
push
mov
xchg
ret
lock
add
movzwl
clc
repnz
jae
rcrb
fsin
cmp
nop
jae
sub
mov
add
clc
repnz
jae
mov
add
or
push
add
lea
clc
repnz
jae
jmp
cwtl
nop
add
and
adc
adc
repnz
jae
int
pop
add
subl
faddl
add
add
jp
add
clc
repnz
jae
cwtl
add
add
nop
jae
mov
mov
mov
fwait
cld
nop
jmp
add
add
mov
fwait
cld
nop
jmp
add
cltd
mov
nop
add
mov
clc
repnz
jae
add
sub
xor
fwait
cld
nop
jmp
fadds
out
push
lods
mov
clc
repnz
jae
rolb
cmp
clc
clc
repnz
jae
push
add
inc
loop
in
pop
jne
clc
repnz
jae
add
add
loop
mov
xchg
ret
or
add
dec
inc
fwait
cld
nop
jmp
add
jnp
mov
add
movb
clc
ret
clc
repnz
jae
out
mov
sub
in
bound
aaa
xchg
add
pop
cmpsb
add
nop
jae
lock
add
clc
repnz
jae
jmp
add
add
and
clc
repnz
jae
repz
add
cmpsb
add
clc
repnz
jae
lock
add
jo
add
mov
clc
repnz
jae
or
adc
loopne
push
addb
add
mov
stc
xor
clc
repnz
jae
add
add
jnp
iret
mov
fwait
cld
nop
jmp
sub
iret
mov
clc
repnz
jae
add
add
nop
jmp
fadds
cwtl
add
sti
je
clc
repnz
jae
out
push
jecxz
mov
push
mov
xchg
ret
add
cltd
add
fsubrs
mov
clc
repnz
jae
daa
add
in
add
xchg
cmpl
hlt
std
lcall
add
add
clc
repnz
jae
add
add
rolb
add
test
clc
repnz
jae
add
out
or
fwait
cld
nop
jmp
out
add
push
clc
repnz
jae
xlat
cltd
pop
nop
pushf
and
clc
repnz
jae
add
mov
mov
testl
incl
add
jmp
shlb
out
push
clc
repnz
jae
fldl
or
flds
add
shll
aam
popa
std
add
clc
repnz
jae
add
add
xlat
mov
mov
clc
repnz
jae
mov
mov
test
clc
repnz
jae
sub
rep
addr16
xchg
clc
repnz
jae
mov
mov
in
push
push
mov
xchg
ret
add
fistpll
inc
add
or
repnz
jae
lea
add
adc
and
outsb
mov
clc
repnz
jae
add
cmp
and
mov
je
clc
repnz
jae
add
add
or
repnz
jae
sub
jo
push
add
pusha
add
push
mov
xchg
ret
mov
rolb
or
add
push
mov
xchg
ret
add
mov
mov
add
add
fdivr
mov
push
push
mov
xchg
ret
in
add
add
add
repnz
jae
xchg
add
add
xor
nop
jae
add
add
rolb
xor
fwait
cld
nop
jmp
insb
mov
add
clc
repnz
jae
add
add
mov
mov
dec
mov
fwait
cld
nop
jmp
pop
mov
testl
cmp
fwait
cld
nop
jmp
nop
iret
add
flds
insb
xlat
bound
mov
add
test
push
mov
xchg
ret
pop
add
ftst
add
fwait
cld
nop
jmp
add
pop
sub
mov
inc
add
in
add
clc
repnz
jae
iret
lock
cmpl
nop
jmp
repz
add
or
test
cld
clc
repnz
jae
add
and
decl
push
mov
xchg
ret
add
add
add
ret
clc
repnz
jae
add
mov
cmpsb
jo
adc
test
jb
or
mov
in
add
repz
add
add
repnz
jae
add
add
add
insb
rcr
push
mov
add
add
cmc
loop,pt
loope
repnz
mov
push
mov
xchg
ret
es
add
cmpsb
add
clc
repnz
jae
out
mov
fsubs
les
fisttpll
nop
jae
add
mov
add
je
inc
add
xor
add
clc
repnz
jae
adc
add
enter
nop
jae
add
flds
or
test
add
mov
add
add
out
call
fldl
pop
iret
out
dec
push
mov
add
add
movsb
add
adc
enter
add
sbb
ror
add
add
add
movb
sbb
mov
pop
icebp
inc
add
aam
sbb
mov
jge
dec
out
pop
push
sub
pushf
addb
add
rolb
push
add
xor
mov
lahf
je
sti
or
add
xor
xchg
xchg
add
fidivrl
jecxz
stc
and
mov
add
fwait
or
cmp
jecxz
and
mov
lea
mov
pusha
add
add
inc
lea
add
add
stos
bound
mov
adc
add
scas
sti
xchg
mov
pop
push
add
mov
add
mov
and
add
insb
rolb
ret
addr16
add
mov
push
and
stos
popa
mov
push
aad
ss
add
add
push
ja
rorl
or
add
stos
testb
add
and
dec
jmp
addl
repz
mov
clc
je
fwait
mov
mov
and
mov
add
add
xlat
js
pop
int3
mov
add
mov
loope
into
icebp
sbb
bound
mov
movsl
stos
sbb
in
jl
add
mov
inc
mov
lahf
loop
lods
mov
or
das
lret
add
jb
xor
lock
inc
add
lret
pop
pop
cmc
jne
mov
sbb
mov
add
xchg
add
add
dec
xlat
and
mov
dec
add
jo
mov
push
mov
xor
aad
push
jns
shrl
lahf
out
or
sbb
add
xchg
mov
cmpsl
and
popa
call
mov
xchg
add
push
lods
pop
scas
jg,pt
add
scas
test
xchg
xchg
jp
add
add
cmp
cmp
sub
dec
fmulp
mov
add
mov
test
aam
je
fisubs
inc
add
into
ljmp
orl
add
out
add
or
ffreep
adc
jbe
add
and
add
testb
jnp
dec
or
add
add
ds
cmp
pushf
and
mov
add
inc
inc
pop
clc
jl
dec
cmp
add
sbb
add
pushf
fucom
sahf
add
inc
pop
pop
aam
loope
jno
movsl
inc
add
lret
cmc
sbb
cli
xchg
mov
addb
xchg
ds
add
add
imul
inc
test
add
push
add
mov
inc
inc
mov
push
add
mov
and
mov
popa
xchg
add
add
add
mov
cmp
sti
xchg
add
xor
xchg
das
and
push
mov
loope
cmp
jge
sub
inc
jo
mov
add
add
loop
clc
mov
stos
dec
mov
jl
or
add
xor
lcall
icebp
xchg
sti
scas
or
addb
push
add
mov
add
mov
add
sbb
add
add
or
inc
lods
pushf
xchg
add
add
into
mov
jg
rolb
add
leave
or
add
xor
add
mov
repz
jle
add
add
dec
push
jmp
xchg
add
lods
sub
sti
pop
cmc
pop
std
and
mov
sbb
lret
or
or
jnp
dec
sub
add
jecxz
cli
jmp
fimull
sbb
add
loop
test
sub
add
add
add
ljmp
mov
add
sbb
cli
lahf
add
data16
jp
add
fsubs
add
data16
add
push
arpl
mov
add
pop
xchg
add
xchg
add
cli
add
movsb
add
add
add
jl
outsl
mov
adc
pop
bound
mov
push
loop
cmp
mov
add
xchg
add
arpl
add
mov
cmc
cltd
mov
pop
cmp
scas
xchg
add
xchg
mov
add
mov
add
ja
test
hlt
add
inc
loope
ret
add
sub
rcrl
mov
cmpsl
int
jns
cmp
cmpsl
loop
jp
add
lret
jp
insl
mov
push
cltd
test
mov
mov
cmp
add
mov
cld
mov
cwtl
test
xchg
cmp
add
bound
mov
imul
xchg
scas
mov
imul
popa
call
rdpmc
xlat
inc
add
repnz
and
inc
add
add
jmp
add
mov
add
sub
into
imul
loope
js
add
add
add
sbb
add
dec
xchg
add
mov
stos
in
pop
cmpsl
into
inc
add
test
mov
add
add
push
and
testl
shrl
add
fisubrs
sahf
sbb
ficomps
mov
jbe
xor
jne
mov
bound
mov
dec
cmp
xchg
add
mov
and
stos
or
and
cmp
or
icebp
loop
inc
aam
fcoms
pop
stc
or
inc
add
ret
scas
int3
add
sbbl
mov
mov
xor
xor
inc
add
mov
add
sbb
add
imul
mov
add
ds
dec
movsb
add
add
add
fmuls
add
das
pushf
dec
rolb
adc
lock
mov
stos
les
dec
pop
or
add
push
dec
imul
add
das
sbb
push
add
add
lret
mov
in
leave
adc
add
mov
add
add
xchg
mov
daa
js
into
jl
loope
jge
add
sahf
out
mov
out
dec
xlat
enter
add
add
dec
arpl
scas
jo
cld
mov
sbb
sub
xchg
cmp
add
adc
hlt
add
pop
add
mov
add
xchg
dec
mov
std
sahf
movsl
das
das
pop
or
mov
orl
clc
fdivrl
pop
and
pop
sti
jne
add
xor
jge
cs
call
mov
add
sti
xchg
aaa
cwtl
loop
fadds
xor
std
repnz
mov
mov
add
add
pop
repz
rcll
fisttps
test
mov
sub
call
jl
push
add
dec
rolb
test
mov
testb
add
add
arpl
addb
es
add
in
push
std
mov
repz
push
out
pushf
icebp
add
test
add
lods
mov
fnstcw
testb
add
imul
xchg
xlat
adc
in
movsb
add
rolb
jp
add
pusha
add
add
pop
xchg
mov
jg
fisttps
lret
mov
pop
rcrl
mov
fdiv
inc
add
mov
jecxz
mov
je
into
repnz
rolb
out
mov
add
popa
mov
stc
std
add
jp
outsl
xchg
add
sub
add
pop
icebp
mov
mov
gs
add
fwait
jge
js
fwait
lods
ljmp
cmc
jp
push
add
xor
jmp
xor
pop
out
loop
dec
clc
dec
add
jns
iret
jmp
mov
add
aad
push
fsub
add
mov
sbb
add
add
mov
xchg
xchg
movsb
add
add
jne
push
sbb
jmp
fld
add
add
mov
loopne
add
mov
cli
movb
xor
leave
out
and
sahf
in
imul
add
cld
fdiv
mov
in
sub
dec
insl
fisubrs
out
aad
add
add
adc
sbb
or
add
dec
cmp
adc
dec
jg
pop
pushf
jnp
add
mov
add
jl
xchg
add
icebp
insl
cmp
popf
push
or
pop
mov
push
in
pcmpeqd
add
mov
push
pop
ret
movsb
add
aam
stos
jge
dec
mov
mov
jae
xor
mov
stc
inc
popf
xchg
add
mov
and
cld
cmp
lahf
sbb
cltd
cmp
imul
roll
jbe
popf
mov
add
sbb
loop
xchg
add
mov
test
add
mov
pop
sahf
fidivs
adc
lods
in
icebp
mov
fildll
mov
mov
mov
adc
add
aaa
mov
add
dec
imul
add
mov
test
adc
rolb
cmpsl
mov
gs
add
clc
shll
jl
pop
sub
shll
test
dec
imul
add
xor
dec
out
dec
test
movl
loope
movsb
add
xor
push
add
std
in
clc
into
push
lods
or
fldt
addr16
popl
add
sbb
mov
sub
mov
add
mov
fsubr
cmpsb
add
dec
ret
jmp
js
add
mov
mov
test
jne
data16
push
addb
pop
sti
inc
inc
testb
add
cmpsl
pop
popa
add
add
cmp
mov
add
add
sbb
push
inc
add
cltd
mov
movb
sbb
push
add
inc
adc
add
mov
rolb
add
loop
inc
pop
cmc
lock
add
add
add
or
out
jns
mov
add
dec
jl
stc
cmp
add
add
in
mov
add
ss
add
lods
iret
push
add
sbb
lods
and
sub
xchg
add
test
adc
hlt
add
mov
add
add
test
std
pop
push
aam
dec
repnz
sbb
mov
sub
std
loope
adc
mov
pop
jo
je
adc
adc
add
or
add
fldenv
imul
in
divl
sbb
cmp
sbb
cwtl
mov
push
add
pop
ffreep
add
xor
rolb
mov
cmp
add
je
rcll
mov
or
aam
int
dec
test
sti
adc
sbb
add
fstl
pusha
add
add
jle
movsb
add
jmp
push
add
mov
insl
sahf
outsb
addb
mov
dec
repz
sub
testb
mov
mov
repz
enter
push
lock
cmp
cmp
sbb
leave
lock
add
iret
lret
mov
das
mov
add
jmp
xchg
scas
sub
add
jno
loopne
mov
insb
cld
jae
push
mull
add
add
jg
add
enter
imul
sti
out
xchg
add
les
out
mov
out
hlt
add
call
adc
xchg
sbb
and
mov
mov
add
mov
add
jmp
js
into
out
sub
ja
lods
gs
popa
popa
add
add
mov
and
mov
push
adc
xchg
dec
cltd
dec
adc
dec
psubsw
or
xchg
add
add
mov
push
add
loope,pn
pusha
add
and
mov
fstl
pop
adc
ret
add
hlt
add
mov
add
add
push
aaa
mov
inc
xchg
add
jb
or
xor
mov
jg
sti
repnz
push
pop
mov
addr16
sti
add
add
xchg
add
call
dec
mov
inc
and
shll
dec
pop
sti
rolb
sbb
ret
mov
add
sub
cs
in
add
loope
sbb
add
orl
daa
andl
mov
mov
lea
nop
add
adc
xchg
add
mov
mov
add
hlt
add
push
push
popa
and
mov
hlt
add
ja
add
insl
sbb
pop
cmp
mov
inc
lret
idiv
data16
sub
addb
or
add
cmpsl
addb
imul
jns
add
cmp
test
sub
add
add
add
add
mov
mov
ja
js
add
rolb
xor
sbb
popl
add
mov
mov
add
or
arpl
add
repnz
les
shll
add
repnz
fisubl
aas
out
sub
cli
and
fldt
add
add
mov
jmp
pop
add
and
mov
jl
dec
mov
push
xor
add
mov
add
mov
add
push
jle
pop
std
mov
mov
jl
mov
int3
sti
jae
lret
adc
add
ret
movsb
add
add
jns
jl
sti
sbb
pop
lcall
mov
mov
into
jno
cmp
xchg
add
xchg
sbb
dec
insl
xor
add
leave
xor
add
cli
inc
add
add
sub
sbb
add
int3
mov
pop
pop
inc
add
add
and
stos
push
add
add
or
add
mov
add
icebp
ret
filds
cmp
subl
push
xchg
jg
add
fsub
aas
movb
ja
repz
or
inc
add
lcall
add
and
mov
cltd
and
mov
add
add
dec
mov
mov
add
int
add
sub
add
dec
push
dec
cmp
call
add
lods
adc
dec
testb
add
add
xchg
or
mul
add
add
jno
sahf
xlat
adc
mov
mov
mov
mov
add
mov
dec
dec
icebp
mov
addb
or
xchg
mov
add
scas
ja
add
pop
addb
addb
inc
add
sub
add
sbb
add
add
xor
outsl
mov
add
adc
les
mov
sub
add
mov
adc
mov
das
fsubrp
cmp
or
add
jmp
add
jg
and
sbb
push
add
fsts
add
mov
mov
shrl
add
loop
adc
push
jmp
pop
jno
mov
add
add
in
or
fimuls
ljmp
fcoms
insl
inc
add
add
pop
mov
add
add
loopne
fdivr
xchg
push
lahf
call
push
add
push
xchg
push
add
mov
in
and
mov
add
mov
mov
add
add
mov
in
dec
cli
add
sub
inc
pop
loop
lcall
ds
mov
lock
addb
add
repnz
add
cmc
je
cmp
push
mov
add
push
mov
movsl
dec
hlt
add
mov
xor
loope
dec
in
xchg
add
les
cs
aad
mov
cmp
fidivs
xchg
jp
add
xchg
dec
mov
add
mov
in
cwtl
sahf
or
mov
add
add
add
test
cmp
and
jmp
add
pop
xchg
add
push
jp
xchg
add
aad
inc
add
add
call
add
add
pop
fcoms
add
and
mov
mov
scas
mov
xor
push
icebp
cwtl
inc
pop
lds
mov
or
add
dec
loopne
pop
gs
add
push
repz
movsb
add
add
mov
test
xchg
add
into
psadbw
xchg
add
add
mov
jo
mov
dec
test
add
xor
imull
lret
adc
sbb
mov
mov
xor
pushf
popf
jp
and
lcall
push
add
sbb
jecxz
inc
add
fiaddl
out
sub
call
push
fnstcw
test
mov
add
add
xor
add
sbbl
add
add
add
adc
enter
out
dec
adc
sbb
jae
cli
or
add
mov
mov
add
adc
je
push
add
add
and
inc
add
add
add
mov
sbb
mov
or
inc
xchg
add
fisttpl
add
adc
mov
add
xchg
add
nop
add
inc
add
cmp
js
sbb
iret
jbe
mov
fwait
and
xchg
add
add
enter
stos
and
fwait
xor
xor
sbb
add
pop
jmp
add
add
sysexit
test
or
xchg
int3
out
add
push
cmp
das
inc
add
mov
testb
dec
sub
sbb
jecxz
add
pusha
add
pop
cmovl
add
mov
in
jle
test
repz
fcmovb
in
push
add
pop
add
popa
fstpl
fsub
cmp
pop
inc
addr16
mov
add
mov
out
mov
push
iret
test
out
or
or
mov
icebp
cld
push
cs
jle
add
mov
jne
add
dec
mov
xor
cmp
iret
cs
pushf
int3
xchg
add
test
jp
add
aas
shrl
pavgw
mov
add
aam
cmp
lcall
add
mov
jns
jnp
mov
jge
les
popa
add
mov
xor
add
lds
push
int
adc
mov
call
add
xchg
addb
add
sub
add
inc
sbb
add
add
add
sti
shl
dec
mov
adc
inc
add
jns
add
cmp
add
jno
adc
mov
leave
out
jns
lds
ret
add
jp
pop
add
add
cld
call
call
mov
jg
add
call
ret
or
add
int3
and
add
xchg
add
inc
add
push
fiadds
add
lock
jecxz
push
add
add
add
iret
xchg
add
in
pop
scas
repnz
lea
or
ror
repz
mov
cli
jp
add
push
add
fnstcw
ljmp
lods
addr16
sbb
jne
add
add
stos
pushf
xor
or
mov
imul
popl
addb
jbe
faddl
lods
inc
adcl
pop
push
scas
adc
inc
add
or
movb
movsl
add
int3
icebp
sbb
rcrl
mov
data16
add
add
mov
mov
ljmp
add
or
scas
dec
push
add
daa
fcmovnbe
add
fwait
jle
and
pop
sti
push
test
push
xchg
add
mov
add
add
aas
push
mov
imull
cmp
push
add
mov
jo
adc
pop
xchg
jbe
and
mov
sbb
mov
addb
sbb
addr16
movb
aaa
dec
hlt
add
add
mov
lods
cmp
pusha
add
cli
js
insl
rolb
mov
sbb
xor
add
xchg
add
test
push
add
hlt
add
adc
add
add
lret
addb
add
and
mov
data16
add
adc
movsb
add
push
add
cmpsb
add
cmp
aad
push
push
add
mov
xchg
jl
inc
add
add
mov
jne
xor
mov
iret
testb
vcvtsi2sdl
add
mov
inc
popf
mov
inc
mov
cmp
add
jne
pop
sub
xchg
outsl
insb
add
jmp
cld
and
add
test
jle
add
pushf
mov
test
add
jecxz
mov
lods
rolb
test
scas
ljmp
aaa
pop
dec
sub
push
fldl
ret
aas
movsl
sbb
icebp
cwtl
outsl
jg
add
rcr
in
sbb
data16
shll
mov
or
mov
iret
add
mov
lods
sti
mov
into
mov
and
mov
mov
cli
or
js
dec
xor
sbb
sub
sbb
imul
scas
add
popf
imul
rcr
loope
rcr
add
mov
add
add
add
xchg
insb
insl
loop
in
aaa
add
xor
repnz
xchg
incb
add
xor
dec
add
in
lock
in
xchg
mov
add
sub
lods
sub
leave
rolb
loopne
or
cltd
and
mov
lcall
add
inc
push
repz
mov
repz
les
add
mov
add
pop
and
shll
sub
add
pop
push
add
lock
imul
lods
cmp
xor
push
data16
mov
ret
repnz
call
xlat
into
out
mov
cli
jbe
dec
mov
push
add
cmp
sub
sbb
add
scas
adc
repnz
jle
cmp
sbb
or
or
test
or
cld
jo
bound
mov
outsb
movsl
jle
pusha
add
js
add
add
xor
or
xchg
add
add
xchg
mov
add
add
add
mov
outsl
inc
add
mov
cmp
add
add
add
inc
add
aam
fsubrl
dec
dec
cmp
add
pop
rolb
movb
add
xor
add
mov
inc
outsl
loopne
loope
add
std
sub
pop
or
dec
or
ret
test
add
xor
das
xor
jmp
into
test
mov
mov
jmp
lea
pop
test
xchg
add
lds
popf
idiv
pop
mov
add
mov
sbb
loope
frstor
mov
pop
mov
xor
mov
add
add
mov
add
popf
dec
cld
out
add
addb
mov
mov
cld
lea
fsubrs
cmp
test
rolb
push
add
inc
add
adc
in
sub
mov
jbe
pop
ljmp
mov
in
addb
xchg
add
bound
mov
inc
xchg
sti
and
jecxz
loop
mov
dec
push
add
mov
pop
imul
or
add
jns
insl
xchg
push
add
nop
add
int
mov
add
in
cmpsl
enter
and
add
mov
fdivrs
lods
je
inc
add
xor
inc
add
scas
outsl
lret
pop
je
popa
push
add
outsl
mov
mov
xchg
incl
add
pop
jmp
cld
jp
stos
repnz
add
add
add
scas
mov
add
jle
add
add
add
mov
or
ret
movsb
add
dec
mov
add
clc
sbb
add
pop
int3
dec
lock
add
push
add
sub
loop
adc
jbe
add
fcom
ljmp
add
rcl
add
jmp
add
add
jno
sbb
cmp
xor
push
add
add
add
add
rolb
les
gs
dec
push
add
inc
and
mov
mov
jno
sub
add
lcall
and
rorl
flds
mov
sbb
cmp
mov
lcall
pop
clc
mov
cmpsl
scas
push
add
pusha
add
aaa
decb
and
add
push
add
loopne
repnz
add
and
mov
pop
mov
ljmp
add
add
xchg
cli
or
add
mov
add
mov
enter
sub
out
jle
add
dec
movsb
add
jae
add
lea
fbstp
xchg
push
cmovno
add
lcall
add
jnp
pushf
push
add
aam
cld
mov
jno
add
gs
mov
mov
jb
push
push
add
xor
mov
inc
add
lea
add
mov
add
mov
aas
jecxz
mov
add
and
pushf
ljmp
popa
in
addb
add
pop
sahf
test
add
pop
cmc
adc
data16
jp
je
xor
pop
aam
aad
sahf
add
mov
cmpsb
add
int
add
pushf
add
add
lcall
int
add
popa
stc
sub
orl
xchg
add
jae
dec
jecxz
loop
sbb
push
add
mov
add
es
push
add
add
lods
sbb
clc
mov
add
add
adc
out
push
add
int
cmp
pop
into
out
cmovl
iret
hlt
add
add
pusha
add
fmull
add
add
xor
jne
repnz
ja
mov
xor
jl
bound
mov
cmp
aaa
imul
mov
nop
add
out
pop
mov
cwtl
lods
leave
jns
lods
xchg
add
or
add
add
and
xchg
inc
add
add
add
pushf
mov
xor
jp
pop
mov
lcall
mov
adc
js
add
mov
test
inc
add
add
push
add
mov
push
sub
movsl
xor
mov
sub
repnz
xor
dec
jp
add
testb
or
clc
ret
stos
xor
inc
add
icebp
daa
lahf
or
scas
test
sub
cmc
outsb
scas
dec
push
les
mov
sub
jb
push
add
pop
jae
leave
loopne
aaa
bound
mov
hlt
add
dec
jg
cmp
pushf
adc
inc
in
call
add
dec
jmp
addb
sub
add
jns
jne
rolb
mov
lods
mov
inc
xlat
cmpsb
add
nop
add
xlat
pop
xor
scas
out
jmp
jno
pop
sub
in
push
add
lods
mov
adc
add
add
xlat
dec
jge
scas
shl
add
jge
fidivl
mov
and
or
lcall
iret
ds
adc
xor
inc
mov
icebp
testl
test
sti
xchg
aam
xor
out
stos
jle
cmp
je
outsb
jp
xchg
add
xchg
add
dec
jne
sub
fbld
add
add
xor
pop
sti
idivl
add
rolb
ss
pop
data16
fwait
xor
jnp
shll
mov
dec
ficomps
fimull
mov
add
add
inc
add
add
dec
add
stos
movb
pop
in
mov
sub
stc
add
add
lods
aaa
add
cmp
add
push
loopne
xor
or
cld
mov
jle
and
mov
add
scas
sbb
add
add
add
add
rcrl
pop
sbb
cmp
and
mov
scas
lret
inc
pop
push
in
dec
xchg
push
out
jg
ds
add
mov
add
add
mov
repnz
popa
cmp
mov
sub
enter
test
add
push
clc
in
movsl
les
mov
fsubrp
pop
push
or
add
loopne
dec
mov
add
xchg
push
add
xor
cmpsl
rolb
aad
sbb
mull
add
mov
add
movsl
inc
testb
add
push
sub
out
sbb
add
push
add
add
add
mov
add
add
add
pushf
dec
cli
cmp
add
add
xchg
add
jns
xchg
sbb
dec
add
mov
add
cmpsb
add
lock
leave
ret
add
add
lahf
sub
add
cmp
add
add
xor
aas
push
fbstp
add
aam
xchg
sub
sbb
jnp
xchg
rolb
rolb
add
fiadds
dec
lock
inc
adc
jbe
add
mov
or
pop
jmp
add
sbb
add
xor
mov
add
xor
add
sbb
add
sub
add
mov
add
add
add
push
jmp
pop
or
lcall
cwtl
movsl
pop
adc
mov
add
fsubl
or
clc
add
outsb
lds
clc
jmp
gs
ja
add
mov
add
ja
icebp
fidivrl
add
mov
aas
push
add
add
dec
aad
add
cmpsb
add
std
mov
mov
mov
add
mov
add
repnz
das
xlat
sub
stos
add
rolb
lcall
cmc
outsl
mov
out
cmp
dec
lret
sub
mov
add
mov
xlat
add
mov
jb
insb
jno
add
cli
fdivl
mov
fimull
dec
ja
popa
pop
in
mov
add
inc
add
or
cltd
sbb
add
mov
cs
xor
loope
push
add
add
push
mov
mov
mov
pop
dec
push
inc
pop
ds
cmp
jmp
aad
nop
add
add
pop
adc
testb
mov
mov
add
xor
add
popf
cmpsb
add
xor
outsb
mov
add
lahf
add
mov
daa
clc
mov
inc
add
add
pop
pop
imul
jo
mov
je
xchg
add
mov
testb
pop
lds
add
pop
les
adc
mov
aas
jo
cmp
add
add
add
in
inc
jne
call
jne
mov
out
mov
cld
mov
iret
push
add
add
or
push
add
add
aam
test
mov
nop
add
push
ret
pop
ret
add
pop
movsb
add
push
add
insl
mov
aaa
addb
xor
jg
add
dec
movb
add
add
jecxz
insl
movb
in
add
add
roll
add
imul
lods
out
jl
cmpsb
add
jecxz
add
outsb
int3
mov
pusha
add
add
inc
xchg
add
xor
xor
mov
cwtl
aas
mov
add
and
mov
and
mov
sti
imul
xor
jle
mov
mov
sahf
iret
repnz
mov
loope
add
push
add
cmp
mov
xor
push
add
stc
rcrl
xor
cmc
sti
enter
mov
pop
lret
repz
clc
push
jo
or
xor
dec
je
popf
clts
add
push
sbb
add
mov
xor
mov
push
dec
rolb
addr16
loopne
mov
aam
movb
cwtl
sarl
mov
add
outsb
jo
and
mov
xchg
adc
add
mov
sub
dec
nop
add
mov
push
add
mov
and
push
add
add
fwait
push
add
add
add
mov
clc
cs
or
fdivrl
pop
cli
pushf
scas
rolb
fidivrl
add
cmp
or
add
popf
jne
sub
aad
cmpl
and
mov
pop
push
add
aam
dec
pusha
add
add
add
push
add
sbb
addr16
lea
cmpsb
add
in
add
aad
add
rolb
in
add
xchg
sub
lret
lock
cmp
std
out
cmc
sub
add
jg
out
mov
adc
adc
fs
add
inc
scas
cmp
mov
mov
adc
cmp
aad
push
add
icebp
out
mov
mov
ficomps
lea
les
call
mov
adc
iret
addb
add
xchg
add
sbb
ror
add
push
sbb
or
sub
lock
sbb
add
cmpsb
add
mov
push
test
adc
adc
add
jg
sub
add
mov
rolb
data16
mov
nop
add
out
addb
adc
push
je
jbe
sbb
fnstenv
adc
cmp
add
inc
pop
out
mov
lret
push
xor
out
add
add
mov
push
loopne
iret
sti
fwait
mov
inc
add
mov
out
mov
jo
pop
sahf
fcos
and
mov
sub
lcall
test
add
add
mov
add
fcomps
push
add
mov
pop
jmp
lcall
inc
addb
add
xchg
add
add
imul
or
int3
bswap
dec
push
add
xor
sbb
push
add
add
xor
stos
add
mov
cmp
add
mov
aam
jecxz
inc
sbbl
jnp
lods
or
mov
sub
pushf
push
or
and
imul
mov
mov
add
stos
add
stos
push
inc
mov
push
mov
imul
dec
scas
or
rorl
add
mov
add
and
int
mov
pop
ficomps
mov
adc
mov
add
mov
xchg
lds
ds
dec
js
jne
add
cltd
out
mov
sub
int
or
pop
adc
add
mov
add
xchg
pop
mov
movsl
jae
mov
cmp
je
push
and
add
adc
jl
aam
aam
dec
and
or
outsl
dec
ljmp
xor
jp
cmc
adc
fdivrl
mov
jno
xchg
cmp
cmp
scas
inc
imul
jnp
inc
push
add
sub
xor
movb
sahf
mov
iret
lret
push
add
loop
mov
jge
push
add
xor
jns
add
test
enter
and
into
imul
add
add
addr16
cwtl
cmpsb
add
add
mov
pop
scas
sub
insb
subl
mov
fcomps
sbb
adc
sbb
les
xchg
xchg
lret
add
add
fdivrl
push
add
and
mov
pop
sbb
xchg
add
mov
add
add
data16
add
js
add
mov
mov
add
cli
movsl
movsl
sub
add
out
sub
add
sub
push
add
and
mov
jg
add
rcll
add
mov
sahf
hlt
add
add
or
push
aaa
cwtl
pop
sub
iret
xor
mov
mov
inc
add
cmp
pusha
add
add
inc
add
sbb
ljmp
pop
mov
add
mov
and
mov
bound
mov
ja
add
mov
and
dec
mov
xor
push
add
xor
push
movsl
jae
fisubl
or
or
out
dec
and
add
or
addr16
orl
mov
mov
add
xor
push
addl
mov
sub
fidivs
add
xlat
sub
lret
outsb
stc
jle
push
icebp
push
ljmp
add
add
in
add
mov
add
dec
push
push
mov
add
add
sbb
sbb
add
add
lret
mov
xor
mov
jno
test
and
mov
fcmovu
sarl
aas
ja
jo
in
je
cld
sbb
add
dec
add
add
add
mov
pop
xlat
mov
add
add
jns
aaa
pop
loope
jle
cmp
add
lods
mov
push
add
cmp
xchg
add
fadds
aad
add
int
mov
insb
push
add
mov
dec
insl
clc
push
rolb
sbb
clc
movsb
add
mov
add
arpl
xchg
add
adc
mov
sar
mov
test
mov
cs
out
in
mov
add
add
mov
jmp
xchg
xor
iret
arpl
add
add
adc
gs
mov
add
add
call
add
imul
lcall
int3
mov
add
xor
insl
fcoms
add
xor
out
lret
mov
movsl
sbb
add
cs
add
push
add
dec
out
mov
add
rolb
idivl
mov
add
lods
repnz
decb
push
and
out
addb
add
icebp
mov
and
lahf
stc
dec
sbb
dec
sub
aad
inc
test
rcrl
movsl
test
mov
push
std
add
add
cmp
in
jnp
fldt
add
add
pusha
add
add
jne
add
mov
push
data16
push
add
adc
adc
inc
add
add
add
popf
push
push
xchg
mov
test
pushf
cmpsb
add
mov
fnstsw
xor
movsb
add
addr16
pop
mov
fnstenv
push
add
add
add
add
lea
add
pop
mov
add
add
mov
xlat
aaa
cmp
imull
imul
dec
aas
test
push
add
add
mov
add
cmp
rolb
in
mov
jae
add
add
or
stos
sbb
lods
sbb
cld
inc
add
addb
hlt
add
rolb
sub
push
sbb
mov
add
push
add
mov
out
xor
inc
add
add
out
in
jne
add
mov
jp
add
push
inc
add
rorl
rolb
mov
testb
dec
xchg
dec
mov
xchg
adc
mov
mov
call
ret
iret
clc
addb
add
ljmp
mov
push
rolb
lcall
mov
leave
pop
pop
arpl
mov
sbb
add
push
sub
daa
outsb
pop
add
iret
adc
addb
pop
adc
test
or
add
add
dec
icebp
dec
xchg
lods
data16
scas
test
in
in
push
add
add
add
add
clc
pop
lahf
sub
daa
inc
add
mov
daa
fmulp
inc
add
or
mov
sar
popa
repz
add
add
mov
cltd
pop
xor
sub
add
mov
addr16
push
add
xchg
mov
cmp
cmp
add
fwait
rolb
mov
fcoms
mov
add
add
pusha
add
int3
sbb
cmp
add
inc
add
fistl
and
nop
add
stos
addb
add
add
cmp
icebp
xor
jmp
and
mov
xchg
jg
add
pop
pop
adcl
cltd
sbb
test
es
adcl
fdivr
mov
xor
pop
out
jb
mov
lea
sbb
mov
mov
push
or
mov
cmc
testb
mov
cmpsl
push
push
add
aas
je
sahf
xchg
pop
fdivp
jge
movsl
testb
add
add
outsb
lds
dec
sbb
dec
push
icebp
mov
xchg
add
js
sbb
push
lahf
bound
mov
add
mov
or
or
adc
xrelease
cmp
add
xchg
sarl
pop
sbb
pop
rolb
or
add
xchg
add
jno
test
pop
popa
dec
xor
jge
and
add
pop
mov
push
add
movb
mov
mov
cltd
xchg
add
jbe
fdivl
dec
sub
incb
sbb
mov
add
arpl
xor
rolb
mov
mov
inc
add
sub
ficompl
enter
jne
dec
nop
add
cmp
add
mov
xchg
xchg
add
add
mov
mov
add
add
lcall
add
js
xor
inc
or
mov
jecxz
add
xchg
sub
cmp
mov
sub
add
aad
pop
jns
cwtl
stc
xchg
cmp
jae
rolb
mov
add
leave
sub
add
movb
loope
ret
enter
in
ret
jle
mov
push
scas
sbb
jnp
sti
ljmp
pop
aaa
out
icebp
cld
xchg
xchg
mov
repz
add
add
adc
add
or
xor
add
addb
add
aam
or
icebp
dec
gs
add
add
add
push
mov
xchg
sbb
loopne
scas
mov
fwait
jbe
sub
aaa
cmp
sbb
mov
inc
add
andl
mov
lds
jle
xchg
lret
mov
add
je
cmc
inc
xchg
outsl
push
add
add
lahf
jle
add
and
mov
push
bound
mov
sub
add
sbb
jle
sbbl
add
fnsave
mov
add
xor
mov
add
mov
lret
mov
add
outsb
inc
loopne
add
add
mov
add
sbb
add
sub
add
mov
cmpsl
cwtl
lahf
mov
push
in
pop
pop
decl
add
xchg
divps
add
lock
in
sub
add
add
cmp
stc
cwtl
popf
push
add
sub
pop
pop
sub
xchg
add
sbb
add
je
scas
hlt
add
and
and
jp
push
add
daa
repnz
lahf
push
push
add
mov
lods
adc
cmp
pop
hlt
add
add
ret
sub
popf
xchg
add
add
rcr
lods
jns
xor
mov
jp
out
inc
call
dec
mov
pop
mov
test
add
outsl
lret
mov
mov
call
adc
stc
pop
fisubs
adc
arpl
test
decl
imul
add
and
mov
jo
mov
xor
dec
outsb
sbb
fwait
stos
pop
push
outsl
rolb
cmpsl
fidivs
add
jae
inc
add
cmp
mov
inc
add
xchg
mov
and
jbe
push
or
out
add
cmp
test
push
add
jo
lock
aad
inc
pop
xchg
add
data16
add
mov
mov
add
add
hlt
add
inc
inc
add
cwtl
ljmp
add
iret
push
push
jbe
push
add
jae
add
add
mov
lods
adc
inc
js
pop
addb
dec
movsb
add
dec
and
push
movd
xchg
jg
outsb
orl
scas
fsubrs
add
inc
add
iret
pop
ret
and
or
cmovnp
nop
add
dec
or
sub
sbb
loope
leave
loope
and
mov
add
pop
jg
add
popf
je
jp
sbb
add
jno
add
add
es
inc
add
je
lret
idivl
popf
xor
mov
je
mov
es
jl
pop
add
xor
loop
ljmp
subl
add
xor
sahf
pop
pusha
add
add
add
mov
add
pop
or
add
add
stc
ficompl
add
movsl
mov
add
lock
out
xor
in
loopne
sub
dec
dec
cltd
call
icebp
sbb
push
lock
and
mov
push
dec
mov
loopne
pop
inc
add
add
add
add
dec
std
lret
cs
lock
jp
outsl
mov
pop
pop
xchg
add
add
add
add
mov
push
mov
mov
sti
in
xor
imul
add
aam
push
add
add
add
stc
incl
fists
sarl
add
xchg
add
addb
out
js
lea
inc
and
mov
es
ljmp
jno
add
add
in
pop
add
lahf
ljmp
mov
rolb
rolb
bound
mov
sbbl
cwtl
cld
push
test
pop
rcll
jo
cmpsl
add
jns
mov
add
sub
sub
add
sub
push
push
add
out
pop
test
sub
in
daa
dec
out
test
add
das
dec
icebp
push
add
test
add
jo
aad
inc
out
arpl
inc
inc
gs
push
add
dec
push
add
cmpsb
add
dec
jg
imull
stos
out
outsl
sub
add
add
dec
sbb
push
mov
add
outsl
adc
xchg
les
scas
pop
data16
or
dec
push
in
lods
andnps
fisttpl
mov
daa
push
add
data16
sahf
out
adc
test
cmp
repnz
or
pop
outsb
inc
xchg
add
mov
or
aad
in
sub
add
adc
sbbl
or
add
mov
loopne
cld
mov
es
mov
add
pop
int3
cmp
and
mov
out
sub
add
mov
add
icebp
xor
movsb
add
sub
add
add
add
push
add
add
push
add
add
add
add
add
mov
xchg
test
sar
add
or
pop
sbb
sub
add
inc
inc
add
cmp
les
aam
lret
pop
clc
mov
testb
add
popf
pusha
add
add
mov
xchg
add
inc
arpl
pop
imul
pop
addb
add
addl
and
icebp
ret
insb
jmp
mov
mov
mov
sti
popa
repz
add
testl
clc
rolb
cld
jle
insb
pop
imul
add
and
mov
inc
mov
sub
pop
cltd
frstor
pushf
adc
dec
adc
or
scas
sub
js
cld
dec
int3
pop
rolb
inc
add
mov
cmp
in
add
xor
dec
repnz
stos
rolb
in
in
xor
aam
je
sub
pusha
add
inc
jno
add
dec
mov
lcall
stos
in
xchg
jnp
inc
add
mov
add
and
inc
js
pop
test
add
mov
mov
mov
cmp
add
add
add
mov
testb
add
mov
cmp
xor
mov
mov
add
add
pop
fisubl
sub
rolb
pop
or
cs
pop
cwtl
fidivrl
cld
std
cmp
and
jns
add
mov
insb
mov
cwtl
lahf
xchg
loopne
pop
dec
cmpsb
add
mov
lahf
out
ss
add
ljmp
dec
jmp
rolb
xchg
jge
add
add
pop
outsl
pop
adc
mov
es
fwait
test
or
add
mov
jo
inc
sbbl
mov
cld
clc
cwtl
cmc
rolb
cltd
out
jg
add
adc
mov
mov
mov
add
cli
push
pop
dec
loopne
popf
pop
push
add
scas
sbb
js
add
cli
xlat
pop
or
inc
add
jp
sti
movsl
and
xor
or
sbb
arpl
repnz
mov
push
add
mov
push
movsb
add
jae
add
push
add
ljmp
clc
fimuls
imul
mov
push
add
mov
add
popa
ret
imul
mov
rolb
mov
or
sbb
add
in
dec
xchg
mov
cs
aas
sbb
insb
push
add
hlt
add
cltd
sahf
popf
xor
arpl
mov
pop
jns
add
add
dec
test
mov
lea
jbe
and
mov
add
and
adc
pop
sbb
sarl
sbb
out
mov
popa
jg
add
hlt
add
addb
or
add
rolb
insb
in
out
dec
or
jae
rolb
pop
ljmp
add
mov
aas
testb
add
jge
out
xchg
add
adc
add
add
cmp
lods
mov
stc
rcll
sub
add
in
or
test
add
add
leave
mov
insl
dec
in
jp
ds
adc
sarl
xor
or
bound
mov
mov
add
or
jns
and
add
xor
push
arpl
push
rolb
add
test
inc
add
jbe
clc
mov
call
movsl
iret
incl
iret
xor
add
popa
daa
mov
or
add
nop
add
stos
jle
lret
fwait
jbe
jecxz
add
sub
sbbl
pop
pmaxub
outsl
inc
push
add
add
mov
pop
lcall
and
jb
iret
and
add
pushf
or
add
les
adc
mov
adc
jno
add
das
cmp
cmp
mov
xchg
add
add
or
add
dec
and
mov
add
rolb
push
mov
sbb
add
jecxz
inc
fisubl
and
mov
add
jnp
xor
in
mov
add
push
jmp
add
aaa
enter
testb
add
iret
out
js
movsb
add
push
add
add
outsl
outsb
inc
iret
shll
imul
push
add
std
cmc
les
adc
test
add
add
add
add
repnz
pop
addb
hlt
add
cmc
adc
and
mov
inc
add
gs
les
sbb
jg
movb
add
mov
mov
add
rolb
testb
lret
rorl
push
add
ret
xor
pop
das
jne
add
mov
add
mov
mov
roll
mov
add
jae
add
dec
xor
add
mov
insl
mov
mov
adc
test
push
sbb
push
add
xor
mov
push
scas
cmp
jns
sub
movsl
pop
and
dec
les
icebp
stos
mov
mov
add
push
add
and
mov
add
call
je
jmp
in
rcll
cmpsl
inc
add
mov
mov
mov
add
mov
test
dec
pusha
add
sbb
add
mov
pop
add
add
orl
lods
adc
add
jg
or
add
cmp
jne
cmpl
fimuls
add
and
mov
imul
add
adc
add
and
mov
ret
cmp
rol
add
add
mov
rorl
add
mov
xchg
gs
js
and
mov
enter
add
add
fdivs
add
out
mov
pop
and
ja
push
mov
loop
rolb
test
outsb
movsb
add
cmp
out
xor
test
dec
mov
add
jp
fildl
mov
adc
int
push
fldl
mov
jmp
cmp
mov
mov
sub
add
adc
arpl
add
clc
add
iret
sbb
ret
add
add
mov
and
call
addb
mov
sbb
addb
rorl
add
js
sub
mov
jmp
jmp
add
pop
mov
inc
add
popa
xchg
add
jge
addb
stc
pop
std
cld
dec
fs
add
adc
fdivl
pop
stc
aas
test
push
jae
sub
orl
pop
adc
cwtl
insb
fcomp
leave
jns
xchg
cmpsl
xchg
sub
add
dec
push
les
cmp
add
sub
add
add
mov
jno
add
and
sub
movsb
add
popf
jnp
outsl
jp
add
test
gs
iret
jge
leave
add
testb
add
add
push
movb
add
and
pusha
add
mov
gs
push
cli
ds
sbb
addb
xchg
add
add
lds
push
add
or
add
cltd
mov
xchg
add
roll
add
insl
incl
lret
sub
add
dec
jae
adc
and
sbb
js
rcll
movb
mov
xor
daa
cld
lods
jp
std
int3
ljmp
inc
add
add
mov
add
in
add
xor
cmp
adc
nop
add
fwait
imul
add
adc
cmp
lahf
cli
out
add
or
add
movsb
add
push
add
push
add
mov
fimull
hlt
add
into
testb
xchg
ds
sbb
sub
mov
or
mov
add
push
xor
mov
pop
stc
sub
loope
testb
ljmp
add
xor
imul
fnstcw
flds
add
mov
cltd
push
mov
mov
sahf
cs
xchg
in
bound
mov
xchg
add
add
add
xchg
add
mov
pusha
add
mov
add
ds
and
inc
fwait
pop
xlat
xchg
add
push
add
and
data16
add
adc
add
and
mov
jno
lahf
es
stc
ljmp
add
leave
lds
add
ds
data16
adc
cmpsb
add
add
push
rcrl
pusha
add
dec
sbb
cmpsb
add
add
add
sbb
mov
and
and
mov
add
push
add
in
pop
push
add
lods
movsl
xor
add
sahf
jle
push
add
mov
add
add
add
add
stc
mov
fmull
or
faddp
add
jecxz
rolb
inc
and
add
dec
enter
dec
add
sub
add
ss
dec
fcmove
and
mov
add
mov
dec
jecxz,pt
dec
lods
adc
cmp
adc
std
jb
clc
xor
add
dec
das
ja
add
insb
xchg
cmp
lret
lods
inc
add
shll
xor
fnstsw
add
rcll
inc
dec
test
subl
popf
pushf
or
test
add
xlat
mov
add
mov
add
addb
add
fmul
ret
movb
ljmp
jne
rolb
sbb
jp
xor
addl
mov
add
out
aas
inc
add
add
xor
lock
add
loop
cmp
leave
pop
into
cmc
outsb
adc
lret
adc
add
mov
mov
cwtl
fwait
dec
mov
addb
lds
mov
loopne
add
mov
test
jb
cmp
dec
lcall
les
or
outsb
jbe
mov
add
mov
aas
movsb
add
inc
add
mov
pop
les
mov
add
mov
loopne
ljmp
adc
pop
addb
add
sub
add
adc
sbb
sbb
jnp
pusha
add
fisubs
xor
movsl
in
ja
cmp
add
divl
add
fcomps
add
add
push
add
push
add
lahf
xor
addb
add
add
xlat
adc
dec
cltd
jle
dec
loope
add
ret
add
sub
dec
push
add
nop
add
add
xchg
scas
pop
test
stos
sbb
jnp
sub
jecxz
add
mov
lods
dec
hlt
add
std
pop
inc
add
jno
testb
add
pop
cmp
out
fimull
scas
nop
add
pop
mov
cli
adc
xor
inc
rolb
sub
add
add
inc
pop
out
lcall
mov
inc
add
add
pop
push
add
fwait
addb
add
ljmp
cmp
fmul
inc
pop
xchg
add
add
iret
xchg
add
cmpsb
add
das
sti
es
in
sbb
stc
adc
xchg
xor
outsl
enter
sbb
add
dec
mov
xorl
sub
mov
test
add
xor
incb
mov
adc
lods
push
jbe
inc
sahf
adc
das
mov
stos
scas
out
adc
stos
ja
add
int
repz
fcmovne
movsb
add
inc
lret
cwtl
sub
jecxz
add
loop
mov
push
add
cmc
xchg
scas
or
add
fmuls
data16
add
add
and
repnz
add
pop
int3
movb
push
movsl
test
rolb
aaa
lcall
mov
jecxz
scas
pop
add
and
mov
cltd
xor
add
pop
addb
mov
pop
loopne
lods
addb
push
add
xor
rolb
les
push
add
add
mov
add
out
push
cmp
notl
add
js
push
or
jne
aas
add
enter
xor
push
int
add
jp
or
add
rcll
rolb
lret
fwait
arpl
add
jno
jne
push
les
das
mov
add
add
add
pop
dec
ljmp
add
stos
mov
xor
push
xchg
pop
pop
mov
jle
adc
mov
into
out
xchg
dec
outsb
ljmp
int3
mov
or
add
add
movb
xchg
add
mov
fwait
adc
push
fimuls
mov
push
nop
add
sbb
mov
bound
mov
push
cmc
movsl
xchg
orl
mov
xlat
push
rcrl
or
cs
xlat
mov
dec
loopne
mov
in
and
mov
push
jb
dec
stos
cmp
add
loopne
xor
add
add
add
lods
mov
out
mov
mov
sbb
jl
mov
sahf
enter
add
fnstsw
loope
pop
ja
inc
add
mov
pop
xor
xor
mov
scas
mov
movb
add
ja
push
add
inc
add
sahf
mov
cmpsl
bound
mov
add
xchg
add
add
add
movb
add
sub
add
add
dec
jae
add
sbb
fwait
cmp
daa
out
hlt
add
mov
dec
or
add
cmpsl
enter
xchg
movsl
pusha
add
fwait
insb
or
int
lret
fsubr
push
mov
xor
filds
cmc
fidivrs
cmp
sub
add
popa
mov
out
and
packuswb
decb
mov
mov
sub
mov
insl
ss
add
jmp
loopne
mov
jecxz
add
push
add
js
add
add
aad
pop
arpl
add
sarl
mov
iret
fldenv
into
jbe
xchg
add
xchg
add
add
loope
cs
pop
fisubl
mov
rolb
mov
push
das
test
or
add
mov
mov
or
out
lods
inc
loope
mov
jmp
and
sub
jnp
mov
pop
cmp
pop
pop
push
test
jae
add
jne
and
jo
or
xor
stos
inc
mov
add
add
inc
cmp
lds
add
scas
mov
add
dec
dec
push
add
out
mov
add
add
sbb
pop
shl
push
add
jns
mov
sub
lock
in
inc
das
push
movb
jbe
sbb
pop
mov
and
out
cld
add
add
in
mov
mov
mov
mov
xor
xlat
cmp
xchg
add
scas
out
inc
inc
sbb
inc
mov
gs
and
inc
aas
ret
or
jns
stos
or
cs
pop
lcall
cs
sub
mov
faddl
add
add
add
or
scas
repnz
stc
int
add
push
mov
and
or
dec
aad
pop
daa
and
push
sub
add
add
add
add
mov
push
add
outsb
cmp
add
add
add
aad
fadd
addb
and
add
add
push
cmp
push
add
add
out
outsl
rolb
stc
rolb
sbb
sbb
add
jns
out
jnp
mov
jmp
mov
add
xor
into
push
add
and
mov
mov
and
mov
add
xchg
add
shll
inc
add
int3
xor
pop
rolb
movb
enter
mov
add
add
push
xchg
pusha
add
add
mov
add
fsubrs
add
insb
fcoml
add
pop
stos
mov
pop
inc
add
push
add
add
cmp
inc
add
add
add
mov
mov
push
dec
mov
add
out
xchg
add
pushf
scas
lds
add
add
mov
add
mov
add
sub
mov
cmp
add
add
xor
sub
add
pop
cmp
add
int
push
add
movsb
add
add
leave
aam
mov
dec
cli
add
lock
mov
cwtl
rolb
jae
insl
repnz
push
add
add
add
or
add
or
pop
data16
ljmp
xchg
push
add
pop
dec
dec
jle
push
sub
inc
add
mov
lds
xchg
data16
jmp
mov
icebp
int3
cs
cltd
lea
add
sub
mov
mov
data16
sub
pushf
imul
cmpsb
add
sub
add
jl
inc
add
les
push
add
add
add
in
adc
aad
icebp
mov
adc
data16
jmp
lea
fmul
scas
scas
sbbl
mov
int
pop
push
add
popa
subl
ret
nop
add
push
pop
or
rcrl
xchg
add
cmovno
cmp
add
leave
aam
ds
mov
loope
rolb
nop
add
add
repnz
or
addb
add
add
cld
jae
add
cmp
shl
data16
imul
add
aam
nop
add
lret
mov
push
add
mov
add
cwtl
faddp
xchg
add
push
out
mov
pushf
jo
imul
cmp
jne
add
add
ret
movsl
out
pop
adc
mov
imul
imul
xchg
add
aad
xor
loope
or
sub
mov
jne
push
push
add
sbb
aas
jmp
pop
pushf
std
test
mov
add
sub
inc
add
xchg
dec
pop
sti
int
out
xorl
roll
mov
jb
out
test
add
add
add
cmp
les
data16
add
mov
mov
pop
les
cltd
imul
inc
xor
ss
add
xor
jnp
add
add
xchg
add
lock
add
and
add
inc
add
stos
add
pop
stos
sbb
add
rorl
mov
xchg
sbb
xchg
add
xlat
mov
mov
out
xchg
add
xor
lock
imul
das
pushf
xchg
mov
and
mov
add
add
test
lods
out
je
mov
imul
in
and
mov
sti
mov
rolb
add
add
pop
mov
stos
mov
insb
jo
pushf
out
test
cmc
push
orl
add
pop
push
add
pusha
add
arpl
std
xor
popf
outsl
out
mov
ja
add
add
add
roll
stc
push
add
loope
cli
ficompl
mov
dec
popf
es
sub
cmp
add
mov
jbe
fdivp
add
xor
lret
mov
pop
add
ds
add
out
gs
sti
daa
xchg
add
sub
cmp
add
fs
fwait
mov
mov
jge
loop
pop
push
int
ret
stos
adc
dec
insl
jo
xchg
jno
pop
outsl
push
jge
shl
add
jl
and
inc
pop
add
add
je
cmc
jmp
add
jp
pop
push
add
add
add
lds
cs
pop
pmuludq
cmp
xchg
sub
adc
cld
scas
popf
xor
fists
in
push
cld
enter
lcall
rolb
lret
mov
add
dec
adc
mov
xchg
cmpsb
add
sub
jge
push
mov
and
mov
dec
jo
ja
roll
ror
pop
sahf
cld
pop
jl
addb
adc
rolb
pop
add
lahf
add
mov
mov
inc
cmp
lret
xor
push
cmp
inc
add
add
cltd
addr16
in
mov
test
push
cmpsl
dec
dec
pop
scas
pop
test
iret
and
pop
aam
mov
std
or
sbb
add
mov
mov
jecxz
add
add
mov
sbb
add
add
mov
jne
dec
push
mov
add
add
pop
out
jne
add
pusha
add
add
pusha
add
push
add
add
int
mov
inc
push
icebp
sub
cld
nop
add
in
add
out
jl
add
mov
add
mov
pop
addr16
cmp
sub
repz
cmpsl
mov
and
add
mov
testb
mov
add
push
add
adc
jmp
mov
pop
fstpl
add
cmc
xchg
sarl
add
stc
ficoml
add
mov
das
push
add
xchg
rolb
or
rorl
sbb
and
pusha
add
xor
out
xchg
lock
mov
mov
sub
pop
mov
scas
adcl
aaa
nop
add
push
add
mov
add
mov
jnp
add
add
test
jne
dec
pushf
and
mov
outsl
sub
add
push
insl
pop
stos
push
insb
rolb
or
fsts
and
add
ss
adc
inc
add
mov
addr16
fmuls
fisttpl
daa
mov
insl
lods
mov
icebp
fldl
mov
add
add
add
nop
add
mov
addb
push
inc
inc
inc
add
mov
add
cwtl
jae
data16
inc
rcll
out
mov
sub
add
add
jo
scas
xor
add
add
rolb
push
add
add
xchg
repz
push
mov
out
call
or
sbb
aam
jge
mov
mov
popa
pop
in
fucomip
sbb
add
jnp
xchg
add
sub
sbb
sbb
cld
cmp
pop
or
mov
xchg
out
les
jno
out
fstl
stc
aaa
sbb
jle
mov
inc
shl
mov
insb
out
imul
das
inc
cmp
lods
adc
pop
mov
ficompl
add
addr16
inc
add
add
sbb
add
mov
jge
sub
add
sub
test
mov
add
add
add
js
adc
add
adc
cmpsb
add
xor
testb
int
test
add
xor
cmpsl
scas
stos
lret
ja
add
mov
stos
and
aaa
xchg
test
or
fdivl
add
rolb
lea
pop
imul
cmp
jmp
add
mov
mov
fnstcw
xor
dec
pusha
add
int3
mov
mov
data16
dec
pop
or
lret
iret
mov
or
fcmovb
add
add
inc
add
jae
iret
scas
loop
lcall
mov
fildl
pop
cmp
fsubp
add
xor
and
pop
inc
add
out
add
inc
stos
pop
mov
and
jno
add
add
adc
fs
in
aaa
xchg
add
xchg
data16
repz
mov
add
data16
fwait
or
cmpsl
mov
add
pop
sub
shll
fiadds
dec
jae
mov
add
add
push
jle
aad
add
add
mov
mov
push
add
mov
addb
lods
mov
lret
push
inc
add
mov
xchg
sbb
add
adc
loop
insl
mov
out
pop
mov
add
mov
inc
xchg
add
dec
mov
inc
add
popa
xchg
add
mov
pushf
jae
dec
sub
mov
cwtl
jp
push
add
add
mov
cmp
das
cli
lret
add
lock
add
adc
mov
add
je
mov
insl
out
jmp
gs
jno
push
mov
scas
scas
jae
add
add
std
pop
shrl
arpl
or
add
add
add
stc
hlt
add
cmpsb
add
add
pop
ljmp
add
and
cmp
ja
add
gs
mov
xlat
fisubrs
push
add
test
data16
add
sbb
rolb
loop
xchg
xor
hlt
add
sub
pushf
rolb
mov
add
add
flds
popf
inc
add
popf
test
add
mov
add
cmp
lahf
lahf
mov
aad
jo
int3
xchg
add
add
ror
xor
popf
mov
add
loopne
insb
ret
cmp
sti
jge
stos
adc
and
mov
xchg
add
mov
and
cmp
test
outsb
and
push
add
add
loopne
fadds
sti
hlt
add
inc
add
add
pushl
test
jmp
push
add
xor
in
imul
scas
jne
lret
jo
xchg
out
arpl
sbb
add
sub
add
inc
out
addr16
out
shrl
movl
mov
push
add
pusha
add
mov
xor
add
sub
js
imul
mov
imul
pop
hlt
add
fcompl
clc
in
ja
add
push
testb
jl
dec
mov
sub
in
jae
stos
ljmp
loope
adc
repz
add
pop
jbe
mov
push
sahf
xlat
stos
pop
fcmovnb
add
inc
call
adc
aaa
mov
add
add
add
add
or
filds
add
fdivrl
scas
addb
into
dec
adc
imul
mov
jb
adc
mov
mov
shll
push
aam
sti
aad
or
add
mov
int3
bound
mov
add
add
mov
out
je
cltd
icebp
inc
add
pop
clc
sbb
add
add
adc
dec
push
mov
add
inc
subl
add
fcmovne
sbb
jo
pop
int
sbb
add
ret
lcall
add
cs
jg
popf
or
mov
inc
add
leave
adc
inc
or
add
leave
pusha
add
adc
outsb
int
mov
in
mov
cltd
and
mov
outsb
inc
lcall
pop
icebp
push
add
add
addb
cwtl
out
pushf
push
aam
add
add
add
outsl
and
mov
mov
add
add
daa
call
xlat
sqrtps
mov
mov
adc
cmp
int3
fnstsw
add
arpl
mov
mov
add
add
iret
inc
add
xchg
aas
test
add
push
xlat
sbb
or
daa
sbb
arpl
adc
mov
dec
ret
adc
add
mov
add
aas
inc
add
dec
xchg
mov
add
add
out
rolb
scas
cmp
cmpsb
add
add
outsl
inc
add
jl
mov
jg
add
sub
mov
and
loope
insb
cmp
dec
test
leave
cmp
inc
sub
push
pop
ret
movb
mov
add
scas
into
add
sbb
add
dec
fnstsw
fs
ret
dec
push
sbb
xlat
insb
pop
jle
dec
aam
jp
push
lahf
jl
cmc
jnp
dec
pop
sub
test
add
ret
push
inc
add
addb
out
fsts
cmp
add
add
or
cli
add
sbb
mov
add
mov
or
stc
xchg
pop
mov
cmp
add
sub
mov
mov
aad
loop
mov
and
scas
mov
data16
jmp
add
or
ljmp
or
jge
pop
test
push
lret
jae
add
nop
add
addr16
or
xchg
jns
lret
mov
add
add
push
add
and
fwait
push
pop
xor
mov
scas
jne
fimull
add
sbb
push
icebp
adc
push
add
add
sbb
fdivl
stc
or
rcrl
jg
xor
cmpsb
add
pop
mov
cs
add
ret
fisttps
and
mov
xchg
add
jmp
add
test
addr16
sub
add
gs
rolb
jecxz
add
pop
das
mov
mov
fnsave
xor
push
mov
insb
adc
pop
iret
popl
mov
cwtl
fwait
mov
imul
pop
lock
cmp
or
lret
imul
and
add
testb
add
insl
imul
xchg
cs
add
adc
fisttps
movsl
jmp
lret
loope
mov
xlat
gs
push
add
movsb
add
add
sub
add
add
add
add
mov
in
add
mov
add
les
and
mov
add
inc
fucomp
int
add
fcompl
push
add
xchg
add
add
add
and
mov
inc
mov
iret
dec
xchg
push
add
add
adc
xchg
add
imul
pushf
clc
lods
int3
test
add
add
add
jbe
cltd
xchg
test
jle
add
mov
and
gs
ds
mov
scas
push
pop
inc
push
sbb
add
xchg
mov
pusha
add
repz
sbb
add
insl
repnz
jge
adc
dec
and
push
jle
dec
inc
js
sbb
pusha
add
add
ficoms
movsl
lea
jle
sub
add
add
jno
rolb
push
repnz
add
cwtl
pop
fwait
addb
add
repnz
fdivl
mov
movsl
movsl
rolb
add
add
push
pop
out
cmc
fcmovnb
mov
in
xlat
loopne
and
cwtl
pop
xchg
add
jae
add
dec
lods
rolb
jo
mov
mov
mov
and
mov
cmp
adc
sub
out
jmp
xchg
push
cmp
xor
or
add
popl
add
add
push
add
mov
test
div
adc
fs
jl
push
out
int
jo
push
add
dec
rolb
add
cmp
imul
mov
movb
cld
mov
fsubs
scas
xlat
jmp
mov
sbb
incb
add
cltd
push
adc
mov
add
in
cmp
cmp
test
sahf
in
mov
iret
push
add
mov
mov
aam
xor
push
mov
jne
add
mov
iret
cmp
add
rolb
push
ja
dec
cmp
or
mov
repnz
rolb
dec
dec
les
add
and
test
cmp
add
add
add
bound
mov
adc
lods
popa
pop
outsb
sti
loop
cmp
sbb
push
add
add
mov
add
pushf
cld
cmp
scas
adc
jmp
push
add
cmpsb
add
and
stos
iret
gs
insb
gs
add
sbb
mov
fucomip
imull
mov
add
loop
inc
and
add
push
add
stos
pop
lahf
xchg
jge
pop
adc
mov
popa
and
mov
arpl
push
add
inc
rcll
add
out
test
test
pop
mov
fsubl
jnp
lds
push
add
addr16
add
add
lods
xor
out
and
mov
stos
mov
pop
out
jge
add
add
out
add
adc
dec
lret
add
movsb
add
add
add
ret
push
pusha
add
inc
add
mov
cwtl
dec
in
sbb
cmpsb
add
lods
adc
inc
add
js
movsb
add
add
sbb
loope
lds
pushl
or
add
je
xchg
movswl
jnp
scas
mov
out
testb
add
pusha
add
mov
add
mov
fsubl
add
jg
jl
add
mov
jp
add
push
add
mov
pop
mov
addl
pusha
add
add
add
test
add
das
js
hlt
add
push
add
add
mov
cmpsl
rolb
pop
test
shll
int3
pop
sti
cwtl
cmp
add
dec
push
cmp
adc
and
jnp
sbb
add
add
addb
daa
sub
loope
xchg
add
cmc
in
cmp
mov
testb
rcll
xchg
in
dec
push
add
sbb
test
inc
aad
cmp
mov
add
add
add
add
nop
add
adc
push
add
add
testb
test
movsb
add
cltd
and
and
mov
jbe
push
out
popf
std
mov
ja
and
out
jge
test
add
fadds
popa
rolb
aas
sub
push
dec
test
les
sub
pop
push
add
jmp
adc
pop
sbb
loope
xchg
cmpsl
cli
popf
inc
add
addb
add
and
sbb
inc
cmovs
addb
sub
push
add
ljmp
mov
pop
dec
xchg
in
push
add
mov
notl
mov
imul
addb
inc
add
push
dec
mov
rolb
sub
in
inc
add
incb
mov
ljmp
add
fwait
xchg
arpl
inc
add
add
adc
sarl
arpl
popf
dec
push
mov
lret
test
sti
cld
dec
std
sub
add
mov
mov
ret
add
or
add
push
std
leave
jo
inc
add
add
add
mov
inc
add
adc
sti
mov
and
out
inc
xchg
add
add
mov
in
addb
ja
faddl
mov
bound
mov
add
cmp
add
jg
fiaddl
cmp
movb
test
je
outsl
addr16
and
push
add
cwtl
dec
rolb
add
ja
lods
outsl
fidivrs
xor
lods
jae
mov
ja
mov
pop
imul
movsb
add
xor
add
insb
lret
pop
rolb
and
mov
test
cmp
pop
jae
pop
and
mov
cmc
in
adc
mov
add
rcll
data16
cmp
add
lret
sbb
into
and
mov
scas
sbb
add
ret
call
push
les
test
rolb
std
jmp
add
add
cmp
movsb
add
or
ss
xchg
add
outsb
add
bound
mov
dec
pushf
jge
jae
jle
add
add
mov
out
mov
add
add
add
add
add
add
lods
add
scas
aaa
mov
test
add
rolb
add
mov
add
jecxz
add
add
aaa
pop
mov
add
or
push
mov
add
les
lret
xchg
scas
push
add
jnp
add
test
ljmp
dec
or
sub
mov
rolb
in
and
sti
sub
adc
jne
dec
cmp
enter
add
add
add
dec
add
rolb
mov
mov
add
dec
jmp
add
test
testb
arpl
xlat
arpl
mov
xlat
lock
add
enter
nop
add
mov
mov
push
add
out
add
xchg
add
cwtl
inc
add
repnz
out
lods
cli
push
daa
mov
cmpsb
add
mov
mov
fucomip
pop
sahf
jge
pop
cmp
insl
mov
add
imul
fisubrs
add
xchg
add
add
sub
jb
stos
xchg
outsl
test
dec
pusha
add
inc
out
clc
imul
jp
xchg
mov
cmpsl
mov
and
mov
adc
mov
scas
aam
std
hlt
add
inc
add
es
leave
mov
js
add
jmp
add
and
aaa
adc
les
mov
pop
stos
cltd
dec
add
jmp
jecxz
add
push
add
xchg
jns
aaa
dec
aam
or
add
call
out
push
pop
call
lods
mov
dec
pop
repz
fstp
and
or
cmp
add
cmpsl
push
and
mov
xor
lcall
pusha
add
ds
add
icebp
cmc
xor
add
lea
add
add
xchg
dec
outsl
push
add
add
inc
add
add
scas
rolb
inc
in
arpl
add
pushf
fcomps
inc
cmp
cmp
push
jmp
xor
cmc
adc
xlat
cmp
mov
add
xor
int
dec
add
imul
pop
add
mov
mov
push
repnz
adc
mov
notl
pop
dec
push
add
mov
rorl
add
call
sahf
push
test
pop
faddl
rolb
rolb
sbb
push
add
jbe
addb
inc
add
sub
mov
jmp
incb
cmp
icebp
orl
add
xchg
add
test
arpl
dec
xor
push
add
stos
fbstp
jl
rolb
ds
inc
add
jno
mov
jnp
pop
mov
xor
das
or
sahf
xchg
aad
ret
into
int3
sub
pop
imull
leave
pop
cs
movb
repnz
inc
adc
cmp
add
pop
cmp
mov
add
sub
mov
addb
insl
push
add
push
add
or
add
cmp
pop
lods
pop
jnp
add
add
push
loopne
stos
stos
aam
mov
or
add
push
xchg
inc
dec
imull
js
mov
add
dec
push
add
leave
sub
add
jp
push
push
loop
sub
sub
add
lret
aad
bound
mov
daa
ret
add
scas
insb
push
rolb
mov
inc
add
std
mov
fdivp
cmp
pop
cmp
and
lds
cmp
and
cmp
add
dec
jbe
adc
push
mov
push
cld
and
lods
jo
loop
cmp
pop
lahf
aam
jg
jge
sbb
xor
in
inc
add
add
pop
push
add
jg
outsb
cmp
push
xchg
add
add
add
lea
insb
mov
push
adc
insb
pop
and
jge
dec
xchg
dec
fsubs
mov
adc
add
push
add
add
add
or
add
and
add
cmp
imul
add
xchg
pop
rcrl
insl
nop
add
adc
jno
sub
add
jl
test
push
jp
or
add
lcall
cmpsb
add
gs
add
add
loopne
adc
ja
add
mov
inc
fistps
lock
add
add
add
add
add
add
cmp
stc
movsb
add
add
in
std
pop
scas
sarl
scas
dec
jmp
popa
inc
add
add
add
mov
and
mov
add
and
add
add
add
pop
push
add
jle
xor
mov
movb
aaa
stos
shll
pop
mov
add
nop
add
mov
lea
out
lods
adc
dec
loope
push
add
or
pop
cs
adc
sub
add
out
scas
add
pop
pusha
add
jnp
or
ljmp
cmp
add
or
add
rolb
sub
pop
addb
out
xchg
ds
add
bound
mov
xor
and
xlat
pop
popa
pop
lock
mov
ljmp
pop
in
or
lcall
dec
iret
stos
imul
add
add
mov
in
xchg
add
jno
add
xor
test
add
mov
jg
inc
add
leave
inc
add
lods
jmp
lods
cmp
add
xlat
jno
add
xor
jns
add
mov
stc
fmul
in
add
cmpsb
add
ficoms
notl
sub
addb
pop
pop
pop
lcall
add
cmp
inc
add
outsl
or
cmp
add
add
jne
add
push
push
enter
dec
mov
add
add
jns
rolb
pop
mov
mov
push
ljmp
mov
add
xor
popf
inc
add
inc
add
insb
pusha
add
add
mov
in
push
mov
mov
enter
dec
cmp
into
mov
mov
pusha
add
icebp
outsb
jb
fs
jg
pop
jo
and
cmp
add
xor
add
push
fcomps
mov
add
add
lret
cmpl
fldcw
and
iret
add
add
pop
pop
mov
mov
std
and
mov
add
sti
fbstp
lret
mov
outsb
pop
mov
xor
pop
test
shll
cmc
mov
add
add
cmp
dec
cmp
jge
add
shll
mov
lret
pop
push
push
mov
add
xor
into
pop
add
add
hlt
add
loope
inc
jmp
addr16
mov
xor
add
and
inc
mov
testb
pusha
add
add
add
add
sbb
lcall
or
inc
add
add
sbb
add
sbb
mov
jb
cmp
dec
or
xlat
adc
lds
in
dec
je
sub
mov
adc
pop
and
add
add
stc
jg
add
sub
mov
adc
mov
add
mov
xorl
add
insl
nop
add
add
movsl
or
sub
jnp
sbb
jnp
add
into
ret
xor
ds
mov
mov
fstl
add
add
testl
mov
mov
lcall
add
add
add
xchg
jp
lret
fidivrl
sbb
add
add
cmp
add
xor
dec
mov
xchg
jp
jo
mov
mov
roll
mov
xlat
leave
cmp
add
mov
mov
cmp
inc
add
add
add
and
in
xor
sbb
fcoms
add
loop
add
add
popa
or
add
add
iret
lods
sbb
repz
cmp
add
bound
mov
adc
adc
scas
mov
jecxz
jecxz
sub
cs
and
das
dec
aaa
push
cld
and
mov
or
jp
adc
jmp
cltd
dec
xor
dec
xchg
add
dec
imul
add
add
sahf
ret
cmpsb
add
add
adc
test
add
imul
sbb
pcmpeqw
and
xchg
push
stc
cmp
push
add
mov
lds
mov
xor
test
int3
or
ret
fcmovu
or
mov
adc
or
mov
ret
xor
jb
xchg
add
addb
addl
add
add
xchg
or
and
and
mov
outsb
add
mov
lcall
add
adc
xchg
adc
adc
sub
cmpsl
xchg
add
add
mov
sub
add
add
mov
jecxz
dec
inc
add
mov
pop
test
rcrl
mov
jmp
testb
add
add
add
dec
imull
dec
lahf
fldenv
repnz
cwtl
daa
clc
pop
mov
call
pop
xor
push
jb
lds
pushf
dec
or
add
add
jb
lcall
push
add
dec
lret
jg
add
stos
in
insl
mov
loope
cmp
test
imul
shl
cmp
add
cmp
add
fsubr
inc
xchg
add
adcl
mov
scas
bound
mov
add
or
sbb
mov
ficomps
add
les
sub
add
std
icebp
fcomps
jp
sbb
lods
into
xchg
cmpsl
pop
gs
int
add
add
in
fists
jmp
mov
jbe
adc
sub
add
in
sbb
pusha
add
pop
rolb
rolb
add
out
xor
add
sti
push
mov
mov
cltd
incl
push
add
inc
add
mov
pop
mov
pop
pushf
and
pop
pop
je
mov
add
mov
lds
mov
add
mov
or
add
add
add
sbb
add
mov
mov
pop
test
pop
repnz
and
mov
out
sub
cwtl
dec
sub
lods
mov
sub
and
mov
mov
inc
inc
add
add
lret
sbb
pusha
add
jb
outsl
imul
into
dec
mov
mov
pop
dec
dec
cmpsl
lea
pop
inc
xor
out
dec
adc
pop
insb
add
mov
add
repnz
cld
push
xchg
sub
add
jp
add
pusha
add
mov
add
sbb
ret
xchg
add
add
rolb
mov
inc
rolb
movb
cmp
add
fcmovu
in
xor
jne
mov
add
xor
fstp
lret
lds
pop
pop
pop
lret
lock
add
gs
dec
inc
rolb
adc
call
add
popf
ret
data16
inc
add
xor
movsb
add
jl
lea
push
push
cmp
add
adc
hlt
add
fcmovnu
push
add
xlat
stos
mov
out
xchg
add
cmp
test
imul
mov
nop
add
add
icebp
inc
aaa
add
addr16
xchg
lea
xor
mov
cs
add
add
adc
inc
add
mov
xchg
sbb
aam
rorl
scas
insb
jg
pop
pop
cmc
leave
sub
mov
add
repnz
add
out
movb
aas
into
in
iret
sbb
lea
xor
add
add
test
jle
mov
add
mov
add
add
mov
add
fwait
outsb
lea
cmc
jb
repz
rolb
out
add
pop
lods
test
pop
and
mov
jmp
add
xchg
add
mov
fwait
outsl
popl
add
mov
gs
lret
mov
dec
mov
popa
das
lcall
dec
mov
add
add
fstps
in
pushf
std
cli
dec
push
add
add
jbe
in
mov
lcall
jle
xor
and
add
add
xchg
dec
daa
testb
stos
dec
test
hlt
add
add
add
cmp
add
pop
jbe
adc
push
cmpsb
add
or
out
cmp
add
sbb
xor
xor
dec
push
add
mov
mov
ds
sahf
pop
movb
test
dec
out
leave
adc
xchg
lea
movb
add
clc
xor
push
les
pop
and
icebp
adc
or
add
cli
xor
push
add
add
mov
add
add
dec
xor
mov
add
add
dec
adc
pop
sub
sub
xor
jne
jl
xchg
xor
inc
add
pop
jp
add
push
movb
testb
add
mov
sbb
pop
sbb
dec
sub
xor
pop
xor
aas
jl
add
pop
arpl
mov
push
popf
xchg
xor
push
add
cltd
cmp
xchg
add
push
add
mov
ja
mov
add
mov
stos
movb
add
add
rolb
mov
mov
stc
dec
or
add
movsb
add
icebp
rolb
cmp
jge
testb
icebp
cmp
add
lret
mov
add
push
add
inc
daa
push
add
bound
mov
mov
mov
hlt
add
fidivrs
jb
xchg
push
sub
repz
clc
mov
add
xchg
rolb
push
and
mov
jno
pop
pop
jge
repz
cmp
std
mov
add
leave
sub
xchg
rolb
mov
add
lahf
jae
mov
dec
sbb
insl
insb
push
add
enter
mov
in
sbb
add
xor
mov
pop
lahf
stos
add
add
xor
jecxz
add
pushf
cmp
sub
cld
mov
dec
arpl
jns
push
add
mov
add
out
xchg
add
out
push
mov
fbstp
xor
jp
data16
inc
in
rolb
lds
add
jg
inc
pop
rolb
fdivrl
mov
cltd
dec
push
add
jle
push
cmpsl
maxps
nop
add
adc
jns
outsb
push
add
and
movsb
add
add
mov
fstl
add
int
sbb
push
enter
push
add
jecxz
pop
mov
rolb
cld
xchg
stc
daa
adc
xor
out
jl
adc
push
test
clc
dec
popa
lret
sub
add
and
lcall
add
add
add
add
add
dec
ljmp
and
mov
pop
fucomip
inc
add
lea
mov
add
and
mov
push
addb
aam
xchg
pop
add
sub
mov
add
insb
mov
sbb
add
pop
fimull
mov
testl
add
cmc
mov
xchg
add
add
pusha
add
test
add
add
sub
pop
scas
test
push
add
std
rolb
iret
push
add
add
add
add
out
jbe
or
stc
xor
ds
mov
add
setle
jns
add
push
push
sub
xor
or
add
mov
out
add
mov
pop
cmp
xchg
pop
pop
and
sarl
push
jns
cmp
and
pop
popa
movb
jns
shr
mov
insb
or
mov
xor
in
jg
mov
add
loop
push
xor
jnp
out
dec
sub
add
add
jae
add
or
add
sub
add
movb
xchg
movsb
add
xchg
mov
outsl
fistl
in
xchg
insl
cli
push
add
mov
add
add
insb
addb
pop
inc
mov
add
in
add
stc
adc
xchg
add
test
dec
inc
add
mov
inc
add
nop
add
add
mov
push
sub
jle
cltd
cmp
mov
jmp
jle
fidivs
mov
data16
outsl
mov
add
dec
jecxz
or
sub
mov
add
cmp
cmpsb
add
out
add
mov
push
inc
xor
and
repnz
add
add
mov
cmp
imul
add
xor
mov
fcompl
add
or
pusha
add
mov
dec
push
sub
add
out
mov
cli
adc
add
inc
mov
or
and
mov
incb
add
add
jle
mov
add
sub
ja
sub
xchg
popf
bound
mov
arpl
add
add
lea
add
les
mov
add
add
test
cltd
push
sub
add
das
out
push
sub
sbb
gs
mov
dec
pop
into
pop
cmp
xchg
add
fldenv
add
add
add
add
hlt
add
mov
sbb
mov
movsb
add
stc
sub
xchg
leave
clc
pop
mov
lock
ret
add
push
pop
jl
jge
outsl
push
add
push
test
add
mov
fwait
addb
pop
xchg
test
cli
imul
adc
test
fdivrp
xor
xchg
xchg
add
push
push
and
mov
jbe
lret
rolb
movsb
add
xor
mov
xlat
mov
jmp
adc
add
rcll
sar
dec
push
mov
mov
add
add
add
loopne
sahf
out
mov
mov
out
add
and
mov
and
mov
dec
clc
aas
inc
add
add
or
xchg
add
pop
les
or
add
fdivrp
jne
add
pop
sbb
mov
add
add
jecxz
iret
fnsave
testb
rolb
add
inc
test
test
add
cmp
add
or
popf
lds
add
xor
xchg
add
add
add
jle
add
dec
xlat
repnz
mov
add
adc
int3
pop
mov
sti
call
inc
xchg
movb
mov
push
rolb
ret
add
test
lds
add
dec
out
mov
push
add
jne
jo,pn
add
andl
add
fdivs
jecxz
dec
outsb
xorl
inc
add
cmp
dec
loop
rcll
push
mov
imul
sub
outsl
int3
cmp
sbb
icebp
xchg
add
add
addb
add
dec
mov
mov
stos
pop
xor
test
sbb
pop
les
sbb
add
mov
test
iret
sti
sbb
dec
test
rolb
mov
push
movb
and
dec
dec
filds
cmp
jo
call
xor
test
add
andl
pop
or
test
inc
add
or
cmp
add
fcoml
lret
in
mov
inc
add
pop
pop
inc
addb
cmp
mov
xchg
add
xchg
mov
mov
rolb
lds
add
add
mov
jne
icebp
mov
dec
add
arpl
repz
test
adc
das
push
or
mov
push
je
push
add
add
add
pop
sti
sub
addr16
lea
add
add
mov
xchg
cmpsl
push
add
xor
addb
sbb
jne
jle
add
add
call
call
add
xor
sub
cltd
ds
jmp
cmp
int3
mov
mov
add
test
add
add
scas
popf
mov
lcall
jg
or
je
inc
cwtl
fwait
outsl
add
add
test
adc
add
sbb
sub
lahf
aam
xchg
push
add
popa
push
xor
test
mov
fimull
sub
and
add
add
add
into
add
or
sahf
movsb
add
fidivs
xchg
adc
xor
push
jp
jbe
jg
pop
iret
mov
push
mov
add
popf
loop
sub
pop
hlt
add
jg
aad
iret
mov
pushl
data16
ja
add
add
inc
add
and
mov
add
push
add
add
mov
fcmovnb
add
add
mov
mov
pop
bound
mov
add
sbb
add
addr16
pop
subl
add
xchg
or
xchg
xor
and
mov
add
add
pop
push
add
aad
dec
shll
rolb
mov
jl
inc
add
mov
add
cli
enter
mov
sbb
xchg
dec
lahf
int
nop
add
xor
orl
inc
add
ds
push
cltd
pushf
push
add
add
aam
pop
pop
js
add
pop
jno
fsubl
xchg
insl
jmp
mov
add
movb
add
xor
or
add
add
pop
cld
fmul
inc
add
sbb
shrd
in
add
aad
add
jmp
mov
fimull
or
jns
and
sub
add
mov
xor
mov
add
clc
mov
lds
add
mov
adc
mov
and
adc
pushf
rolb
stos
icebp
movb
add
rolb
mov
out
clc
rcll
lret
insb
push
or
jo
test
mov
jmp
add
aas
sbb
mov
mov
cli
hlt
add
add
sbb
xchg
add
aad
add
jo,pt
loopne
jge
add
xor
mov
add
inc
add
add
mov
add
add
and
stos
push
add
push
popa
adc
xor
cmp
jl
inc
add
xor
xchg
add
popa
and
add
outsl
xor
int
daa
sub
loop
xchg
add
mov
fsubl
add
push
add
mov
in
mov
add
add
adc
nop
add
pop
call
std
addr16
out
mov
add
testb
cmp
popf
aad
aam
insb
jne
movb
ljmp
jmp
dec
add
add
sbb
rcll
testb
shr
cmp
test
jbe
imul
das
pop
aad
cmp
rolb
add
add
xchg
or
jb
jae
xor
sbb
or
lds
mov
add
add
mov
inc
add
inc
add
rolb
xchg
jle
lods
ss
movsl
mov
jne
pop
inc
add
add
add
add
push
sub
add
add
loopne
pop
xchg
cmp
or
add
add
mov
out
push
inc
add
add
mov
xor
scas
xor
ret
add
adc
movsl
shll
cmp
push
add
int3
mov
mov
js
add
or
addr16
popf
cli
adc
adc
pushf
cmp
mov
mov
mov
add
into
and
mov
add
bound
mov
cmp
xor
cmpsl
scas
cmp
add
cmp
and
mov
add
add
add
push
add
into
pop
and
add
mov
xchg
add
xchg
add
add
cmp
pushf
ja
push
add
cmp
shrl
cli
leave
adc
mov
rorl
flds
ljmp
add
mov
add
sbb
add
pushf
sub
stos
sahf
rolb
push
pop
pushl
add
or
push
shll
stos
push
add
sbb
add
dec
arpl
push
add
and
mov
add
repz
push
add
dec
sbb
add
dec
pop
inc
add
jno
or
add
add
in
adc
outsl
mov
adc
add
lods
aas
mov
jbe
and
mov
jmp
push
add
int
xchg
add
inc
cmp
xor
mov
add
imul
jmp
xlat
cmpsl
ret
xor
and
mov
add
mov
cli
dec
mov
jmp
add
mov
in
pop
ja
adcl
inc
add
add
push
test
mov
add
add
mov
cmp
add
lds
sub
leave
loop
movsl
and
add
mov
test
xlat
inc
add
add
int3
dec
repz
frstor
mov
add
or
xor
add
cmpsb
add
lock
dec
xchg
push
add
inc
cmpsb
add
add
out
sbb
stc
fisttpl
pop
test
or
mov
jns
xor
inc
inc
add
pop
out
jp
adc
loop
push
pop
cld
repz
add
xchg
sub
add
mov
add
inc
add
add
mov
or
dec
add
inc
xor
int3
push
mov
shll
rolb
sub
sub
cld
add
mov
cmp
repnz
inc
mov
jae
add
mov
ret
jge
add
add
fildl
icebp
xchg
inc
xor
xchg
add
and
add
fstpt
xor
cmc
rep
loop
sahf
int3
pop
push
add
inc
add
adc
jae
xchg
add
call
inc
add
add
add
cltd
add
mov
xchg
stos
mov
out
jecxz
jmp
push
test
loopne
rolb
fwait
or
mov
cmp
rolb
sti
mov
aaa
mov
add
sbb
jne
mov
add
add
cwtl
pop
out
psubb
add
loopne
pop
cltd
xor
mov
test
iret
dec
pop
das
dec
sub
add
add
add
jge
push
inc
cltd
and
mov
and
or
hlt
add
add
or
xor
add
mov
mov
stc
lods
xchg
inc
add
push
into
flds
sbb
out
movsl
push
add
pop
out
rolb
sub
add
add
xchg
cmp
add
and
and
shl
add
xlat
push
add
adc
mov
rcll
jecxz
cli
cs
imul
mov
dec
adc
push
iret
mov
mov
in
outsb
push
add
xchg
add
push
cmp
mov
add
mov
sbb
xchg
sub
push
add
add
push
xchg
repnz
stc
mov
ret
aad
add
mov
xchg
jecxz
jo
jecxz
mov
mov
adc
mov
rolb
fidivl
and
pop
aaa
cli
repz
add
leave
xlat
ret
add
pop
mov
fucom
cmp
add
add
jp
xchg
add
in
imul
pop
push
cmp
cmp
test
xchg
adc
mov
xchg
add
cmpsb
add
xor
int
xchg
add
add
lds
mov
add
aad
add
mov
adc
add
lea
mov
adc
pop
sti
mov
sbb
int
jae
cmc
adc
dec
mov
push
addr16
add
sub
cmp
add
add
add
pop
cmp
add
xor
into
pop
and
mov
push
mov
jge
push
ja
ja
push
add
adc
mov
pop
lahf
xchg
adc
jmp
or
cmp
add
stos
jbe
cmp
or
in
cmp
add
dec
cmp
fstps
testb
js
and
in
mov
outsb
stos
ja
add
bound
mov
insl
rolb
subl
in
cwtl
test
aas
bound
mov
pop
dec
fistl
jae
add
sub
add
rolb
add
add
lret
or
fcmovu
jno
add
add
push
test
or
rolb
push
add
sbb
loopne
int
adc
imul
ljmp
add
adc
add
imul
add
xor
add
mov
lea
in
cmp
add
add
and
dec
enter
add
cld
sarl
ja
xor
pop
mov
sbb
pop
adc
mov
mov
mov
leave
setns
add
add
pop
sub
movsl
and
mov
xchg
add
inc
das
add
mov
test
mov
add
mov
xchg
add
sbb
cld
cmp
mov
add
add
aad
xchg
dec
jmp
stc
ja
adcl
add
xchg
push
mov
jl
mov
inc
add
into
cld
push
add
dec
leave
jnp
rolb
mov
add
mov
loope
add
add
and
mov
add
add
add
movsb
add
add
add
stos
gs
sbb
xor
sbb
add
out
rolb
aam
addb
ljmp
add
add
adc
add
mov
or
add
mov
add
and
mov
jecxz
add
sub
jl
inc
mov
add
add
sahf
cwtl
in
and
mov
les
jg
ret
dec
pop
xchg
xchg
add
aam
ljmp
push
add
push
add
add
rolb
aam
mov
mov
jmp
add
add
mov
cli
cld
mov
loop
dec
mov
cmp
ja
add
and
add
ret
add
into
mov
xlat
out
inc
add
jnp
add
add
adc
add
mov
cld
mov
add
xlat
mov
cmpsl
mov
repnz
inc
add
add
push
add
add
add
movsl
sub
lahf
in
fcomps
add
add
addb
cmpsb
add
push
mov
add
add
push
addr16
loop
mov
test
cs
addb
add
cmp
fxch
std
dec
int
mov
adc
push
ret
rolb
jbe
mov
add
sbb
hlt
add
xchg
add
mov
adc
add
add
cmp
mov
data16
add
add
jl
add
jge
add
inc
add
push
add
mov
xor
addb
add
add
add
addb
pop
pop
add
mov
lods
int
ss
sub
add
push
or
and
dec
lock
mov
mov
add
lds
jae
mov
dec
addb
mov
sbb
jb
push
add
stos
xor
fnstsw
aaa
ret
inc
add
rolb
clc
nop
add
pop
add
pop
out
insb
dec
sbb
add
add
and
mov
mov
fists
xchg
add
jp
mov
adc
sbb
mov
sbb
call
jge
add
sub
je
adc
jle
add
icebp
mov
addb
sti
into
fadds
mov
imul
loop
jae
xor
pop
arpl
add
add
add
xchg
pop
and
xlat
mov
add
mov
add
add
xchg
push
add
sub
pop
addb
add
add
mov
in
fdivl
add
add
in
lcall
mov
add
push
push
add
dec
or
add
cmpsl
pusha
add
test
add
add
add
stos
jno
jnp
adc
repnz
mov
and
sub
xchg
or
xchg
cltd
and
xchg
fsubrs
mov
add
add
addb
add
adc
add
mov
jge
pusha
add
jg
sub
add
and
pusha
add
rorl
add
add
push
xlat
jnp
pop
sbb
test
loop
xor
mov
stos
scas
loop
jnp
xchg
push
add
addb
ljmp
aam
inc
add
dec
push
add
jl
add
add
sub
add
jns
pop
stos
xor
lods
push
add
push
add
ficomps
add
or
fstl
mov
dec
imul
cli
mov
push
add
mov
push
add
roll
mov
movsl
faddl
aad
add
add
cli
dec
mov
add
cmp
test
add
mov
add
jns
add
pusha
add
movb
dec
les
jle
and
call
add
imul
add
and
lcall
aas
lds
sub
mov
add
xor
add
add
sbb
jno
shll
add
jae
sbb
mov
mov
cmpsl
add
nopl
mov
pop
mov
xchg
add
add
mov
add
push
add
repz
sti
icebp
dec
jne
addb
fsubs
add
add
add
int
lret
outsb
or
mov
cmp
cmc
out
add
hlt
add
add
xchg
add
mov
xlat
loopne
mov
fnstenv
movsb
add
jg
add
test
adc
sbb
nop
add
add
mov
add
add
test
test
mov
sub
daa
or
ss
dec
add
add
inc
cmpsb
add
test
rolb
sub
sub
jo
out
icebp
push
add
add
daa
jnp
mov
xor
lahf
out
loopne
xchg
lret
jle
movb
add
add
push
sub
sbb
aaa
sbb
push
add
add
ja
lret
rorl
cmp
add
add
loop
mov
add
sbb
pop
cwtl
fwait
mov
push
add
out
dec
dec
pop
sahf
jno
cli
mov
add
rolb
xlat
jnp
fwait
lret
stos
mov
mov
push
add
add
cld
add
mov
mov
add
inc
dec
mov
pop
movsb
add
add
out
add
cmp
inc
add
pop
int
daa
push
lods
outsl
mov
jp
aas
ret
cs
pushf
push
add
fsts
fcmovnu
aaa
xor
stos
test
and
mov
mov
sub
sbb
iret
repnz
add
cmp
lods
pop
add
mov
add
add
in
mov
pop
push
jbe
and
dec
cmpsl
pop
imul
inc
and
mov
dec
sub
add
sub
call
aaa
in
arpl
ret
inc
into
aad
jge
mov
dec
jno
sbb
scas
add
add
add
and
sahf
cmc
nop
add
sub
add
dec
push
les
cli
aam
lcall
insl
cli
ret
add
or
inc
add
aam
test
jle
inc
add
add
nop
add
mov
add
mov
and
add
mov
push
add
add
add
gs
add
add
mov
jnp
ja
add
dec
mov
imul
lods
test
add
pop
mov
xor
add
insb
pop
and
mov
pop
cmp
imul
sahf
inc
add
add
fisubl
mov
adc
add
roll
jae
ret
in
das
and
ficoml
enter
add
addb
add
add
movl
jns
add
add
add
add
loope
cmp
add
mov
add
xchg
jnp
adc
xchg
clc
imul
add
pop
aaa
xor
add
call
test
push
aaa
sbb
mov
sub
mov
in
stc
ds
pop
pop
or
add
add
mov
mov
lods
push
aam
cmc
ja
inc
add
pop
sbb
mov
test
scas
cli
es
mov
add
add
push
add
add
lock
xor
imul
or
in
sbb
jecxz
fists
sub
fstl
test
addb
iret
pop
push
add
add
add
jae
add
add
add
add
daa
orl
lds
jno
add
mov
test
out
push
movsb
add
dec
add
mov
add
mov
loop
movb
movsb
add
add
std
fwait
stc
loop
das
icebp
decl
out
add
lods
addr16
sbb
test
pop
inc
add
push
add
add
cmp
xchg
mov
dec
cmpsb
add
jp
in
push
add
xor
push
iret
push
cmp
add
inc
add
sbb
pop
flds
mov
or
inc
add
mov
mov
mov
movsb
add
loopne
sti
cs
dec
sub
sti
sub
nop
add
add
add
adcl
sub
les
and
sub
add
lahf
mov
jge
je
scas
es
add
add
mov
mov
in
mov
adc
into
loope
add
mov
je
sti
mov
repz
inc
add
mov
add
xor
imul
add
add
das
dec
inc
aaa
fists
mov
xlat
adc
mov
push
add
mov
add
adc
xor
stos
popl
test
dec
pop
sub
add
add
cmpsl
add
clc
inc
jne
mov
xchg
add
mov
xchg
add
ret
popa
xchg
mov
add
add
sub
fistpl
sbb
pop
adc
pop
mov
add
add
jnp
sbb
loopne
fsubs
add
mov
jl
and
mov
add
add
add
add
push
loop
les
out
addr16
out
cltd
push
adc
pop
imul
jno
jo
lret
clc
jbe
or
xor
scas
push
sub
add
add
shrl
jmp
in
call
pop
jmp
add
sub
add
or
add
add
mov
add
ret
and
add
add
stos
or
add
jecxz
xchg
sub
insb
adc
clc
rolb
sbb
or
add
add
mov
add
dec
jno
add
add
jbe
or
inc
add
icebp
add
mov
add
add
fstps
ret
je
call
mov
xchg
add
add
or
add
or
addb
mov
stc
sahf
test
int3
sub
adc
ret
add
mov
xor
push
sub
clc
cmp
add
aam
xchg
add
add
testb
cmp
jmp
and
push
addr16
insl
cmp
mov
xchg
mov
sub
imul
insb
addr16
add
xchg
notl
push
clc
mov
ret
push
or
jo
loope
add
add
add
xlat
sbb
jmp
imul
add
push
enter
jmp
and
add
dec
loopne
pop
push
cwtl
insl
lahf
mov
lea
mov
int
mov
add
mov
add
mov
adc
les
push
add
stc
pop
sbb
addl
lea
xchg
out
mov
ds
add
mov
inc
add
push
add
nop
add
inc
fcoml
inc
add
xlat
push
add
add
enter
bound
mov
jns
add
add
sbb
inc
xchg
incb
and
je
addb
xor
jecxz
dec
pop
les
insb
outsl
lret
adc
mov
sbb
add
add
jg
mov
add
mov
mov
add
aas
mov
xchg
pop
inc
sbb
mov
sub
mov
push
in
ret
mov
add
cmp
add
mov
rcrl
add
or
unpcklps
insl
jnp
mov
into
mov
roll
loopne
xor
mov
sti
xchg
add
lock
pop
sbb
push
add
je
aaa
stc
ja
cmp
lods
lods
jp
loope
xchg
add
add
add
inc
mov
add
add
enter
and
loopne
lret
xor
push
add
pop
adc
jns
mov
add
dec
and
movb
into
or
mov
imul
dec
jno
popa
insb
xchg
add
jmp
cmpsl
jns
in
xchg
xor
mov
add
add
jl
or
add
and
mov
add
fucomip
std
xor
mov
jp
xchg
testl
add
repnz
pop
pop
decb
add
ret
mov
add
add
add
mov
mov
cmp
stos
stos
dec
xor
push
add
loop
lahf
mov
imul
call
push
add
or
xor
sbb
add
mov
scas
movb
sahf
sbb
ror
aaa
lds
hlt
add
or
cmp
add
mov
jns
inc
jecxz
add
ja
add
xor
test
add
mov
les
mov
popf
pop
or
add
push
cmp
clc
movsl
test
loopne
rolb
mov
pop
into
and
add
lods
subl
fisttps
nop
add
add
movb
add
pushf
cld
repz
dec
lods
mov
mov
lahf
inc
lds
xchg
add
mov
shrl
imul
push
jo
je
jl
add
add
insb
mov
sub
mov
stos
ret
push
stos
aas
and
push
add
jns
lds
mov
xor
mov
aad
inc
xor
mov
add
aaa
loop
test
sub
sahf
nop
add
pop
mov
punpcklbw
mov
add
dec
shll
mov
mov
add
stc
fsubrs
repz
filds
mov
jns
outsl
mov
mov
lahf
mov
mov
xor
pushf
arpl
lods
push
je
xchg
insl
jmp
ds
inc
mov
out
or
stos
insb
loop
sub
add
pop
pop
cld
subl
dec
adc
ror
add
mov
mov
je
mov
add
sub
pop
int3
lahf
sbb
add
mov
cld
sahf
xor
add
add
aam
gs
sub
add
add
loope
add
add
mov
add
mov
jne
push
add
xchg
add
mov
add
xor
inc
stc
mov
xor
dec
lods
jbe
mov
add
cmp
imul
pop
xor
lret
xchg
add
ja
in
inc
add
les
xor
dec
jo
push
xor
out
ds
add
stos
jb
fcoml
testl
dec
dec
lods
pop
jl
add
hlt
add
add
mov
xchg
cs
es
mov
fidivs
mov
dec
pop
mov
and
pop
xchg
add
mov
add
std
xchg
addb
xor
mov
add
in
pop
fcomp
jns
inc
add
out
test
mov
daa
and
xor
hlt
add
stos
cmp
jb
aas
xchg
pushf
mov
xchg
pop
xor
inc
add
xor
add
mov
add
mov
add
add
cld
add
filds
jo
sub
jecxz
call
adc
inc
out
mov
in
scas
lods
aas
xchg
add
lret
addb
add
mov
add
and
mov
push
add
arpl
dec
jmp
dec
into
push
jge
add
clc
mov
into
stos
fisttpll
das
dec
and
add
jb
loop
testb
inc
lcall
and
mov
lock
add
inc
pop
test
add
add
lock
mov
cmp
add
add
lahf
and
fldl
push
add
loop
repz
add
add
mov
test
jns
add
scas
clc
testb
jno
js
push
add
dec
insl
push
add
mov
push
aam
cmp
push
and
mov
add
mov
xchg
popf
mov
add
xor
mov
cmpsb
add
repnz
dec
data16
testb
add
sub
and
mov
cmpsl
in
add
push
jl
out
in
ret
add
arpl
add
push
add
add
push
icebp
gs
inc
cmpsb
add
sbb
xlat
loop
dec
mov
inc
add
in
pop
adc
test
clc
mov
les
dec
ljmp
add
in
pop
sbb
scas
dec
sbb
add
add
xchg
mov
mov
jbe
sub
inc
add
mov
test
cli
xor
pop
in
sub
int3
jle
mov
mov
in
nop
add
mov
add
add
push
add
add
adc
insb
push
lret
or
pop
fdivrs
lods
adc
mov
lcall
or
cwtl
add
bound
mov
jne
cmp
cmpsb
add
add
dec
pop
mov
insb
dec
mov
sub
inc
shr
mov
add
add
mov
cmpsb
add
add
orl
mov
mov
int3
pop
test
add
insb
mov
add
out
jecxz
mov
jp
sarl
xchg
lret
lock
add
add
and
add
add
popa
fisttps
jne
add
test
jne
clc
cltd
xor
aaa
cmp
arpl
add
push
inc
add
and
dec
imul
xor
loopne
imul
add
mov
mov
and
mov
lods
data16
add
add
add
xorl
push
pop
ljmp
pop
inc
add
push
ja
sub
adc
filds
add
jb
jmp
add
push
add
add
mov
xchg
xlat
into
mov
adc
jle
add
adc
pop
fadds
sbb
rolb
insl
enter
dec
fisttpl
add
bound
mov
adc
add
add
push
sbb
and
insb
sub
mov
add
add
sub
sub
jg
jl
add
add
into
xor
add
std
mov
push
xchg
push
add
jl
add
add
cs
daa
mov
pop
jle
scas
or
call
adcl
cmp
or
add
add
add
mov
pop
cmp
sti
mov
sub
pusha
add
add
jge
adcl
add
nop
add
pop
mov
ja
fstp
aad
push
add
push
add
daa
negl
add
sbb
add
xor
add
in
jmp
jbe
add
fnstenv
mov
adc
sub
adc
cmp
push
add
pop
mov
sahf
pop
jnp
add
rolb
jb
jmp
push
add
fstpl
pop
scas
cs
inc
add
frstor
and
add
jb
test
add
add
scas
dec
or
cmpsl
push
add
push
add
add
xchg
pusha
add
add
dec
pop
push
test
aad
jae
sbb
lods
ds
push
dec
insl
mov
add
lock
cmpsb
add
xchg
add
into
fidivrl
adc
adc
addb
add
add
movsl
dec
roll
pop
test
insb
outsb
bound
mov
add
or
daa
mov
movb
stos
dec
pusha
add
add
mov
add
add
mov
jnp
add
shrl
in
ret
jb
rolb
mov
add
add
loop
out
popa
cmp
ja
inc
add
dec
push
in
lcall
mov
mov
jae
mov
rolb
or
mov
mov
add
jge
adc
pop
pop
lahf
xor
or
adc
mov
pop
push
add
add
mov
add
sub
mov
xlat
outsl
and
mov
rolb
add
xor
add
mov
mov
or
jmp
add
mov
mov
add
repz
inc
and
mov
lods
jg
push
add
or
sub
mov
lret
add
aas
jmp
add
add
gs
sub
add
add
add
call
push
cltd
cmc
roll
sub
add
dec
fidivl
push
add
add
cmp
leave
and
pop
outsl
and
and
add
add
add
je
pusha
add
add
add
subl
add
add
push
add
or
insl
cmpl
adc
lahf
arpl
mov
add
xchg
lea
mov
rol
add
add
shr
out
int3
addb
mov
jae
mov
inc
add
rcrl
addr16
add
xchg
push
add
scas
pop
clc
in
loop
cwtl
movsb
add
add
adc
in
fsubs
outsb
and
mov
or
leave
pusha
add
add
andl
pop
loop
test
mov
jno
sub
mov
test
cmc
push
add
sub
add
test
bound
mov
add
push
add
xor
add
fsubrl
add
aam
mov
pop
xchg
add
gs
jne
enter
nop
add
out
lahf
ret
in
repz
add
pushf
mov
xorl
adc
adc
sahf
jge
fsubl
cmc
mov
popf
addl
add
push
add
add
inc
add
addb
mov
in
and
mov
adc
sbb
mov
lods
test
xor
lret
push
add
ret
iret
shll
add
outsb
in
mov
add
shrl
rolb
add
shll
in
adc
mov
pop
lahf
mov
inc
add
dec
clc
cli
mov
add
push
sub
repz
jg
gs
test
aam
inc
add
lahf
add
rolb
xchg
jecxz
popa
add
inc
add
add
mov
sub
add
cmpsl
push
test
fwait
cli
into
jmp
aaa
adc
pushf
push
add
inc
lds
pop
pop
aas
js
add
add
sti
es
mov
sbb
out
ret
movlps
sub
call
and
mov
jo
out
repz
gs
xor
adc
add
jl
movb
or
ret
test
ds
movb
add
xor
add
dec
cwtl
mov
lcall
inc
xor
inc
inc
and
test
mov
add
notl
add
jp
add
dec
icebp
push
add
add
pop
jne
add
xchg
add
or
add
cmpsb
add
xchg
sub
movb
add
cmp
add
ds
adc
push
add
mov
add
and
add
mov
and
addr16
mov
add
sub
adc
pop
flds
push
add
dec
sub
push
repnz
add
out
rolb
add
add
add
rorl
add
add
sub
inc
add
fstl
add
xchg
add
jo
test
fs
ds
jae
xlat
lahf
jne
inc
repz
sub
xchg
xchg
add
mov
mov
mov
add
mov
inc
inc
lds
sbb
add
dec
jb
in
push
add
mov
popf
or
inc
add
push
add
rcll
mov
add
mov
mov
mov
add
add
mov
add
addr16
add
repz
add
mov
pop
mov
add
aam
fbstp
add
stos
xchg
or
push
mov
add
int3
adcl
addb
or
xor
add
mov
push
add
add
add
xchg
rolb
cmc
les
push
addb
xlat
and
sbb
mov
jns
cmpsl
mov
xchg
into
jae
imul
or
push
movntps
lock
or
jae
sbb
mov
leave
cmpsb
add
je
mov
mov
out
add
cwtl
test
arpl
add
add
sbb
add
pop
push
add
jmp
inc
insb
or
popf
testl
cmpsl
nop
add
fnstsw
xchg
mov
add
add
add
xchg
inc
add
lea
add
inc
fstps
sbb
sub
cmpl
lea
fisttps
mov
push
add
add
cmp
add
add
pop
inc
add
sbb
scas
add
add
pop
and
imul
dec
adc
add
add
mov
mov
add
comiss
in
dec
arpl
scas
dec
jno
fucom
sbb
add
stos
in
cmpsb
add
lret
sub
data16
and
mov
clc
iret
bound
mov
add
ja
sti
push
xchg
js
fdivl
loopne
inc
add
icebp
push
add
add
xchg
add
lods
and
add
add
jmp
popa
add
mov
test
mov
adc
mov
add
add
xor
js
add
sbb
addb
add
aad
add
add
push
dec
sbb
add
xchg
add
mov
xchg
ret
pushf
dec
in
in
inc
add
jle
stc
out
imul
add
adc
enter
mov
cmp
imul
add
mov
add
rolb
int3
cmc
and
sub
int
lret
in
jbe
push
push
pop
inc
jns
add
inc
push
fcomi
add
xchg
add
data16
fmulp
loopne
aas
push
and
mov
cli
lret
testb
cmpsb
add
sub
popf
pusha
add
adc
add
out
push
mov
pop
loop
add
jnp
adc
mov
jne
dec
sub
sbb
cmp
add
xor
and
inc
push
add
add
add
icebp
nop
add
add
cwtl
inc
sbb
lods
cld
cmp
lock
shll
add
add
cld
inc
add
imul
loop
inc
icebp
adc
cmp
push
add
loope
xchg
inc
add
jmp
xor
pop
push
movsl
or
mov
clts
add
inc
add
mov
xchg
add
add
hlt
add
add
add
mov
test
mov
xchg
add
les
mov
jne
ljmp
add
add
stc
xchg
dec
out
jmp
adc
bound
mov
add
add
xchg
cwtl
movsl
jns
add
aad
xor
nop
add
mov
cmpsl
adc
xor
mov
add
adc
xchg
dec
add
add
dec
call
add
or
imul
dec
push
add
add
repz
in
popf
cmp
add
add
sbb
add
js
mov
add
jmp
fiadds
mov
int3
inc
add
add
aas
push
add
lret
es
sub
mov
movb
add
pop
data16
xor
add
jmp
add
mov
or
pop
aam
inc
add
ds
xchg
add
add
in
and
mov
push
add
push
add
std
mov
mov
add
xor
loop
cmc
or
add
filds
add
add
push
cmp
arpl
decl
cmp
mov
add
mov
lret
add
rolb
push
cli
loope
add
inc
add
mov
mov
jb
test
sbb
xor
mov
add
push
add
test
add
add
jmp
xchg
add
and
add
pop
lret
repz
gs
pop
test
mov
out
frstor
aam
in
ffreep
xchg
add
add
add
push
add
push
aad
test
pop
xrelease
mov
add
andl
sti
out
push
jge
mov
xchg
leave
jl
cmp
cmp
xchg
bound
mov
sub
stc
adc
je
adc
add
sub
addb
add
mov
movsl
lods
mov
outsb
xor
xchg
xor
insl
shrl
xor
lods
jle
and
xchg
add
loope,pn
add
cltd
sub
repnz
add
repz
mov
mov
sub
mov
cmpsl
and
mov
adc
mov
mov
in
add
add
mov
or
add
test
dec
jno
mov
sbb
add
inc
scas
cmc
jl
add
mov
pop
nop
add
das
lea
and
xchg
add
adc
pop
push
mov
jg
add
outsl
push
add
aas
fmuls
pop
data16
mov
mov
add
pop
or
mov
cmp
cmp
mov
add
mov
and
loope
mov
int
shrl
push
add
addr16
sbb
pop
mov
addb
jecxz
add
mov
add
add
xchg
popa
mov
add
mov
push
add
sub
dec
mov
test
adc
cmpsl
xor
mov
jbe
and
hlt
add
hlt
add
push
add
mov
add
mov
cmp
popa
addb
mov
dec
xor
or
outsb
scas
adc
inc
sub
add
mov
test
stos
xchg
push
loope
jmp
stc
sub
push
data16
or
adc
and
mov
std
xchg
add
insl
loop
xchg
fincstp
pop
add
stos
and
xor
adc
out
pop
or
inc
add
mov
inc
repz
mov
cmc
and
mov
stos
cmp
add
repnz
add
add
add
push
add
pop
inc
pop
outsl
stos
sti
bound
mov
pop
popl
sbb
insb
out
jb
ret
or
add
add
bound
mov
test
add
and
mov
sti
pushf
in
jl
mov
rcll
add
mov
scas
aaa
enter
dec
cmp
pop
into
dec
imul
lods
sti
inc
add
adc
dec
push
add
add
add
and
lods
pop
seto
cmpsb
add
pop
and
mov
pop
sbb
test
cmp
dec
pop
push
xor
add
aam
imul
mov
adc
pop
adc
jecxz
rolb
or
mov
outsb
mov
enter
add
inc
fstp
inc
add
rolb
mov
cwtl
in
js
mov
dec
xchg
add
repnz
mov
jne
add
adc
int3
ljmp
add
add
das
ret
mov
stos
jns
add
jae
push
add
add
addb
sub
mov
dec
sub
lods
aam
in
mov
stc
pop
notl
mov
cmp
imul
mov
enter
mov
inc
pop
daa
push
add
addb
xlat
aad
testb
push
lock
push
add
add
pop
mov
test
cmp
testb
repnz
test
add
add
cmp
out
dec
mov
lret
sbb
mov
ds
add
jb
in
mov
add
add
imul
add
cmpsl
ljmp
add
dec
jmp
fwait
dec
cmc
pop
xchg
add
cmp
sbb
aam
das
mov
push
and
inc
inc
add
add
xlat
jne
xchg
add
add
lock
test
add
cmp
pop
std
icebp
mov
jecxz
js
rolb
movsl
into
cmc
push
in
test
mov
mov
out
adc
mov
rolb
add
mov
popf
jge
add
cltd
dec
add
add
inc
clc
add
cmp
xor
pop
int
add
add
aad
add
jbe
dec
add
adc
cld
add
pop
mov
add
and
mov
xchg
jp
add
dec
fwait
jnp
mov
pop
and
mov
fadd
add
pop
ret
movsl
pop
mov
inc
add
movb
test
aad
push
add
mov
add
les
test
fdivs
mov
add
add
imul
imul
je
lods
cld
sbb
ds
sbb
je
push
add
adc
daa
pop
or
shll
stos
leave
mov
push
insl
push
add
and
mov
stos
xor
movsl
dec
and
add
push
js
popa
inc
add
add
mov
add
mov
incb
add
out
adc
cmc
mov
popf
or
add
add
xor
movb
loopne
dec
push
add
mov
add
pop
test
and
dec
icebp
sub
adc
fstpt
lock
add
aas
scas
xchg
dec
mov
add
or
add
jo
xor
add
add
ret
icebp
fcomp
dec
mov
inc
mov
fnstsw
add
sbb
into
mov
add
mov
imul
cld
inc
add
test
add
dec
jns
pop
jmp
cld
pop
mov
mov
movsl
xchg
sbb
rcll
add
dec
add
push
add
sub
sub
jno
xchg
sub
aam
pop
test
add
mov
mov
add
add
push
movb
add
xor
mov
mov
mov
lods
mov
lahf
dec
pop
xor
pop
mov
adc
sub
sti
pop
jmp
sti
mov
ss
cmc
inc
add
cmc
or
daa
add
mov
add
mov
dec
add
test
add
daa
adc
add
xchg
add
add
push
add
mov
add
pop
pop
movsl
pop
out
std
pop
lcall
push
add
lret
iret
mov
add
aad
xor
pop
ljmp
and
repz
lret
inc
pop
mov
add
or
outsb
cmp
dec
js
push
add
mov
cmp
mov
adc
pop
jmp
push
out
jnp
pop
jle
cmc
adc
fcoml
push
ds
add
add
add
aaa
testb
js
mov
jo
scas
sbb
inc
add
loope
adc
ret
pop
xor
pusha
add
add
add
rolb
into
mov
inc
sub
ja
pushf
jmp
add
or
add
mov
mov
mov
inc
add
dec
cmp
mov
mov
stos
out
test
gs
jg
add
mov
push
add
add
lret
add
add
xor
stos
leave
xor
cmc
test
add
out
insb
push
gs
jle
dec
mov
push
add
jnp
add
add
in
pop
fmuls
inc
add
mov
sahf
adc
sub
loop
sub
and
add
ds
jae
pushf
and
inc
add
int3
sbb
adc
pushf
adc
mov
in
shl
and
add
mov
fcomps
inc
add
push
pop
inc
add
data16
add
push
aaa
mov
sbb
add
jecxz
int3
or
push
add
add
ret
and
mov
cltd
dec
jg
inc
inc
jb
jno
add
inc
xlat
inc
push
add
add
rcll
stc
bound
mov
fidivs
add
jnp
dec
lds
add
dec
mov
lret
mov
lock
in
aaa
lock
xchg
hlt
add
rol
add
add
pop
push
cmc
jmp
jmp
push
cmp
push
add
ljmp
adc
and
aas
adc
movsb
add
notl
pop
push
add
mov
call
push
add
adc
add
add
add
jbe
cmp
data16
mov
sub
jecxz
add
imul
cltd
xchg
data16
daa
dec
pop
jp
and
mov
mov
hlt
add
dec
mov
add
mov
add
jmp
add
add
add
pop
xor
add
add
add
cli
adc
lret
fmull
dec
into
push
add
cmpsl
les
sub
lret
rolb
inc
test
rcrl
add
loope
add
sub
xlat
lock
mov
test
mov
test
dec
and
add
sbb
add
xor
mov
loop
icebp
mov
fmul
out
faddp
add
cmp
add
clc
pop
addb
or
add
lea
insl
rcrl
sub
daa
cmp
add
fldcw
lods
loope
mov
dec
arpl
mov
add
mov
les
cmp
addr16
add
add
sub
movb
outsb
aas
sub
testb
fstl
sbb
inc
xlat
jo
push
xor
dec
mov
jns
outsl
enter
add
xor
add
mov
cmpsb
add
add
addb
add
add
mov
rolb
mov
jae
adc
and
add
or
mov
xchg
inc
add
iret
inc
add
mov
scas
adc
imul
add
sub
insl
cmpsb
add
ret
pop
popa
ret
lret
push
xchg
imul
xor
inc
inc
add
insb
inc
add
cltd
push
rolb
fildll
adc
movb
dec
jmp
add
popa
leave
addb
lahf
daa
sbb
aad
push
je
fucomi
movsl
xor
add
testb
sbb
aas
push
fiadds
cmp
aad
addr16
rcrl
xchg
add
add
pop
xchg
push
pusha
add
mov
inc
add
in
inc
add
xchg
sbb
rolb
mov
mov
add
rep
cmpsb
add
add
ficompl
pop
ret
into
pop
cmp
dec
xchg
rolb
ficompl
add
add
dec
xchg
add
add
xchg
add
daa
imul
data16
jns
mov
test
add
shl
add
sbb
movb
jno
arpl
add
mov
mov
add
aad
jbe
and
mov
shrl
enter
sti
dec
cmp
pop
iret
mov
xor
xchg
add
push
int
pop
and
add
fmul
mov
jg
add
sub
je
mov
add
mov
add
aaa
xchg
aam
add
cmpsl
scas
nop
add
cmp
out
mov
popa
lods
test
mov
rolb
imul
daa
lds
fcmovnu
lock
jl
add
data16
add
fldt
push
ret
addb
add
add
pop
xchg
push
add
lcall
pop
jne
add
add
mov
jne
add
add
adc
jmp
stc
fs
add
outsb
lret
mov
or
add
add
jno
add
pop
jp
addb
pushf
inc
mov
push
mov
stc
adc
fdivr
mov
rolb
sbb
pop
clc
xchg
and
mov
and
mov
daa
int
add
shll
out
les
pushf
fstps
push
add
mov
lods
inc
add
nop
add
pop
mov
add
les
cwtl
mov
push
add
add
dec
fstl
cmpsb
add
adc
lods
dec
leave
iret
inc
add
imul
cmp
lds
dec
or
imul
loope
add
add
xlat
inc
mov
lods
fisubs
add
add
mov
shll
pop
push
add
mov
xchg
add
jge
xchg
test
push
cmpsl
in
sbb
add
dec
popa
xchg
sub
and
mov
add
testb
dec
jmp
data16
xchg
add
pop
xchg
mov
addb
subl
dec
or
fwait
push
ljmp
mov
jns
jle
outsl
or
xchg
add
xchg
add
add
jl
jl
divl
stc
fwait
pop
sbb
aaa
fcomi
sbb
dec
sub
add
gs
mov
ds
adc
pop
jle
ret
aas
out
dec
mov
out
sub
adc
add
and
xchg
pop
or
xor
and
mov
add
pavgw
xchg
add
cmpsl
out
mov
adc
call
stos
inc
mov
call
add
outsl
sub
add
add
fmull
mov
fsubrs
ret
fstpt
repnz
pusha
add
xor
inc
add
add
lcall
aam
jnp
cmp
add
ret
cld
andl
push
movsb
add
shll
add
sub
lea
arpl
dec
sar
mov
mov
add
and
mov
jns
sbb
in
repnz
sub
fistps
mov
cmp
pop
iret
mov
add
sub
adc
add
lock
sbb
add
add
xchg
dec
scas
xchg
gs
hlt
add
pop
add
xchg
add
add
cwtl
inc
data16
insb
fstpl
add
add
dec
pop
scas
mov
inc
add
add
or
adc
xor
xor
jnp
sub
add
add
add
sub
insb
cmp
add
dec
cmc
jns
xor
sahf
push
add
or
repnz
mov
add
mov
sub
add
test
shrl
sbb
add
push
add
xchg
add
into
sbb
mull
add
daa
insl
push
xchg
sahf
push
add
sahf
add
add
insl
loop
or
jne
movsl
in
add
mov
sti
xor
clc
and
add
adc
insl
clc
scas
sub
outsb
fcmovnbe
add
push
add
push
add
add
cltd
dec
mov
outsb
inc
in
sub
rcl
mov
add
add
cmp
xchg
push
add
xchg
push
outsb
sub
lods
mov
add
iret
test
inc
add
or
push
add
loop
dec
cmp
add
add
cmp
or
out
pushf
mov
add
test
and
dec
lods
pop
stc
pop
xchg
repnz
movsb
add
nop
add
xor
jp
dec
inc
mov
lcall
or
mov
jb
push
add
add
push
mov
pop
or
cltd
in
popf
xchg
add
aad
movsb
add
outsl
clc
push
jmp
push
jmp
add
ds
add
lcall
hlt
add
add
add
jl
add
sbb
add
fcmove
rolb
inc
add
add
das
mov
cld
ret
decb
add
int3
push
testl
add
add
outsb
in
pop
in
and
imul
movsb
add
int3
mov
push
dec
xchg
sub
mov
dec
stc
xor
sti
ljmp
jg
test
sbb
aam
add
inc
sub
jg
add
scas
sub
mov
add
xor
std
rcl
add
mov
add
add
jp
add
add
push
jb
jb
popf
shll
xchg
stos
jno
add
mov
add
add
int
mov
hlt
add
das
gs
fmuls
xchg
push
int3
jns
jb
jbe
rcll
scas
cli
dec
enter
mov
pop
aad
repnz
test
jne
imul
add
lods
in
adc
add
sbb
add
mov
add
mov
add
and
pushf
fnstenv
dec
mov
jae
add
add
push
insb
xor
std
dec
pop
imul
mov
mov
jae
pop
in
inc
add
add
or
test
lea
int
add
je
arpl
or
add
testl
fldcw
dec
rolb
pop
dec
std
call
add
inc
jae
insl
addb
mov
add
xor
add
pop
movb
test
pop
mov
or
rolb
dec
fs
mov
sbb
in
add
cs
add
cmpsb
add
ljmp
pop
in
imul
inc
add
loopne
xchg
mov
add
shrl
mov
je
jecxz
add
add
add
in
pop
xor
aad
add
les
jecxz
mov
xchg
adc
popf
sbb
add
xchg
add
xor
xchg
mov
xchg
mov
dec
test
stc
jmp
add
in
adc
mov
add
out
movb
add
cs
cmp
push
add
add
int3
xchg
pop
push
add
add
sahf
aad
test
inc
add
hlt
add
push
icebp
out
xchg
mov
in
les
sarl
movsl
out
xchg
fsubrs
add
pop
mov
mov
add
or
jnp
out
jg
add
add
jmp
or
stc
xchg
loope
insl
jae
add
mov
sub
add
lock
xchg
add
out
cmp
addb
test
adc
add
add
pop
push
add
das
jge
inc
add
jmp
data16
push
xchg
in
sub
fcoml
rolb
sarl
sub
push
mov
scas
fstl
in
xchg
mov
xchg
cmc
rolb
add
mov
out
loopne
sti
pop
ficoms
and
add
cli
mov
add
sbb
lahf
add
push
add
sarl
pop
test
and
xor
das
jb
enter
movsb
add
inc
add
push
jbe
loope
cmc
daa
outsb
pop
xchg
add
cmp
add
add
add
lock
cmpsb
add
add
push
test
add
fstpt
mov
add
jmp
xchg
pop
sbb
add
add
filds
inc
test
into
adc
mov
outsb
pop
jne
movsl
addr16
lret
mov
xchg
shrl
lret
mov
push
add
mov
bound
mov
jl
mov
sbb
lock
or
pusha
add
dec
int
imul
add
add
pop
jnp
add
sbb
mov
repnz
lcall
data16
lret
and
lods
lahf
aam
addb
sbb
pop
mov
jg
arpl
out
add
add
mov
arpl
jno
pushf
sbb
out
mov
jnp
add
mov
pop
pop
pop
inc
and
sub
scas
test
inc
add
and
ljmp
into
sub
pop
sub
xor
or
add
mov
pusha
add
xchg
add
hlt
add
shrl
inc
pop
inc
add
mov
add
loopne
mov
mov
push
mov
stc
mov
push
mov
add
icebp
lahf
int
add
adc
outsb
ljmp
add
add
testb
add
add
adc
add
jmp
add
js
sub
lret
push
add
jg
pusha
add
dec
lahf
sbb
add
or
adc
jp
loop
jnp
fidivs
and
sub
call
adc
mov
add
mov
xchg
cmp
cltd
add
mov
mov
xchg
in
fildll
fists
dec
xor
in
cmp
inc
fsubs
add
pop
adc
jg
add
dec
push
add
add
push
mov
add
push
add
fcoms
addb
mov
add
fidivrl
and
mov
addb
sbb
xorl
out
sbb
jne
mov
dec
and
mov
aaa
add
add
add
mov
nop
add
mov
add
add
xor
sub
scas
push
subl
fxch
or
xchg
arpl
insb
mov
push
outsl
fisttpll
jl
add
add
cli
or
add
add
sub
fnstsw
in
dec
imul
roll
adc
push
add
add
and
push
outsb
iret
push
push
lds
add
add
out
add
mov
cli
add
add
sbb
add
pop
popf
leave
adc
inc
das
sub
add
xchg
mov
shrl
add
add
cmp
add
dec
rolb
das
hlt
add
adc
xchg
add
repz
inc
add
dec
mov
jl
stos
call
sub
movsb
add
pop
jl
imul
dec
push
xlat
loope
xor
pop
test
out
push
add
mov
int
movsl
or
add
scas
leave
cwtl
jge
add
lret
fidivrs
aam
bound
mov
push
add
add
js
add
add
add
mov
ss
out
mov
mov
xor
iret
or
and
add
dec
lea
add
add
int3
popf
stos
xor
adc
je
push
add
lret
nop
add
add
sub
mov
jnp
loopne
dec
mov
cwtl
pop
out
inc
add
add
loopne
clc
jne
pop
or
cmpsl
sub
rolb
inc
inc
mov
push
gs
cmpsl
inc
add
scas
mov
jg
add
jp
hlt
add
mov
sbb
arpl
add
nop
add
fsubr
mov
add
mov
xchg
cmp
add
add
pop
push
nop
add
pmulhuw
in
jne
fisubrs
mov
cmpl
add
cmp
inc
push
add
cmpsb
add
inc
push
add
xchg
add
add
lods
test
rolb
xor
add
addb
pop
mov
add
add
add
push
sub
add
adc
in
push
add
add
sbb
in
mov
stos
data16
mov
add
lods
pop
test
add
sbb
or
fisttpl
lock
sti
hlt
add
lods
inc
pop
test
fnstenv
mov
dec
pop
notl
nop
add
jno
in
jmp
adc
sti
dec
out
add
ds
dec
sub
lock
add
add
out
add
jns
lcall
mov
fdivr
addb
add
mov
fisttps
push
add
and
movsl
and
imul
xor
rorl
insl
mov
sbb
xchg
aam
mov
out
in
or
jb
xchg
add
enter
jg
push
add
ds
add
xchg
loopne
inc
add
add
add
add
js
or
inc
or
add
pop
jno
mov
int3
addr16
in
push
add
inc
aas
scas
cld
insl
nop
add
lods
lods
sbb
test
inc
add
and
add
mov
jmp
cmp
inc
add
int3
mov
mov
fimull
mov
sub
scas
mov
fstl
std
pop
cmp
add
add
add
lcall
add
insl
scas
testb
add
icebp
into
adc
jmp
test
mov
add
cmp
or
xchg
std
aaa
repz
pminub
jle
mov
add
add
rolb
adc
mov
popa
data16
aaa
or
add
mov
dec
add
add
mov
cmp
jno
add
xorl
fiadds
mov
das
xor
aas
scas
mov
data16
add
sbb
outsl
cmpsb
add
and
repz
sti
pusha
add
and
mov
mov
jp
fidivs
out
out
push
add
notl
cmc
fiadds
add
push
in
arpl
add
push
add
add
mov
add
and
dec
test
addr16
add
add
mov
pop
stc
dec
pop
sbb
xchg
jno
sahf
sub
rolb
rcll
sti
pop
fwait
mov
addb
mov
ss
add
add
jnp
add
add
add
mov
lea
add
add
or
arpl
iret
mov
into
dec
cwtl
xor
dec
movsl
mov
cltd
daa
testb
adc
lea
pushf
mov
add
imul
jne
mov
mov
imul
add
add
hlt
add
push
testb
add
fadds
out
int3
testb
add
imul
test
add
movb
sar
in
rolb
rolb
loope
clc
and
aaa
aad
fisttps
or
daa
and
mov
mov
add
add
mov
and
test
mov
sahf
inc
add
movsb
add
xor
dec
push
add
lret
mov
dec
or
mov
add
test
data16
pop
data16
jno
jb
into
sar
mov
push
repz
lods
test
pop
push
add
xchg
mov
add
std
add
mov
or
and
mov
arpl
add
mov
and
mov
mov
stos
add
dec
jecxz
jnp
add
mov
mov
add
add
mov
add
ret
mov
fsqrt
call
sub
mov
jae
add
cmp
push
scas
out
add
xchg
ret
stos
out
jg
add
in
mov
or
xchg
nop
add
xor
movsb
add
push
add
pop
test
ss
std
inc
pusha
add
mov
aas
jae
das
add
push
add
add
jmp
clc
adc
pop
fisubl
push
add
ret
int3
jae
add
inc
add
xchg
mov
or
jl
repz
xchg
or
pop
lret
xchg
add
pop
loop
jo
cmp
hlt
add
add
inc
add
mov
ret
add
mov
xchg
add
add
push
dec
or
mov
loope
push
add
adc
add
rol
cli
jo
dec
jmp
ret
ret
pop
pop
ljmp
cwtl
mov
push
add
sbb
add
sub
mov
add
sub
sub
insb
adc
lcall
pop
lret
aaa
adc
mov
cmp
sbb
fwait
sbb
and
mov
repnz
add
mov
dec
inc
add
mov
mov
arpl
add
repnz
adc
dec
inc
fldt
xchg
add
add
dec
pop
in
xchg
add
add
mov
cmp
pushf
mov
mov
loope
ja
add
sub
scas
stc
bound
mov
add
mov
insb
mov
add
mov
jg
add
add
add
or
jnp
sbb
xchg
add
pushf
and
rcrl
or
je
out
inc
bound
mov
fldl
cmpl
sub
push
add
add
add
add
add
bound
mov
add
pushf
mov
add
data16
add
add
adc
insl
and
pusha
add
aam
mov
pop
loop
addb
aaa
pusha
add
mov
sbb
add
mov
inc
add
inc
add
mov
lret
call
mov
jl
dec
sub
cmp
fwait
imul
add
mov
add
sub
push
add
ret
add
sahf
std
pop
cmovnp
lea
add
out
ud0
push
add
inc
sahf
pusha
add
inc
add
mov
add
inc
add
add
pop
mov
into
mov
ljmp
popf
sbb
movsb
add
push
in
testb
add
add
xchg
lods
out
add
ds
lods
xchg
pop
or
pop
jo
jl
cmp
jge
pop
lcall
loope
ret
test
push
and
add
add
ja
sbb
cmp
mov
js
sbb
add
loop
jl
data16
or
mov
mov
mov
das
sbb
add
in
jmp
outsl
cltd
mov
add
js
add
add
