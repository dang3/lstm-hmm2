pushf
ror
dec
arpl
das
in
scas
xor
rolb
loope
addr16
lods
mov
cld
pop
jmp
stos
icebp
sti
sahf
and
pop
xchg
sbb
or
dec
daa
lret
imul
jnp
adc
sub
mov
mov
sub
jne
insb
into
sub
inc
ss
repz
sub
jae
jg
add
inc
add
cmp
outsl
in
lods
dec
xchg
and
arpl
add
push
xchg
es
sub
sbb
add
js
mov
and
jne
mov
icebp
xchg
pop
outsl
rol
add
dec
sbb
inc
add
cmc
inc
sbb
cmp
or
sub
fistpll
cmpsb
sub
pop
xor
sub
or
mov
inc
add
add
pop
xor
jno
fisttpll
mov
fs
aas
popa
inc
add
lods
and
pop
pop
push
in
orl
aaa
add
push
push
fstpt
icebp
jge
addb
cmp
mov
outsb
jmp
push
cmpsl
andl
dec
out
mov
movsb
push
push
adc
lret
lahf
mov
push
test
popf
out
pop
cmp
andl
mov
push
fstpl
push
repz
stc
pop
jnp
movsb
negl
mov
adc
sbb
cmpsl
js
mov
cmp
sbb
les
xor
pop
gs
push
push
icebp
testb
repz
mov
mov
jge
sub
jnp
mov
mov
imul
and
xchg
aad
movb
or
pop
jmp
movsl
arpl
mov
add
inc
movsb
sub
xlat
adc
and
movsb
xor
dec
xor
jns
dec
and
jb
test
js
add
mov
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
cmp
mov
dec
xchg
fildll
xchg
movsb
xor
push
clc
or
adc
push
insl
mov
in
xchg
cmp
push
xchg
xor
inc
lods
scas
loopne
in
out
inc
add
inc
add
out
jb
add
xlat
cmpsb
pop
addr16
ss
test
jnp
dec
xor
dec
dec
and
fisttpl
roll
int
movb
jo
adc
mov
mov
push
fwait
int3
iret
mov
dec
jge
jge
cmpsb
das
dec
dec
std
ret
int
neg
dec
shrl
mov
ret
sub
ja
or
jp
out
ffreep
inc
add
add
addb
mov
popf
mov
xchg
or
cwtl
sldt
pushf
mov
jo
inc
psllw
dec
das
hlt
add
in
jp
repnz
add
jl
and
push
xorl
adc
cmp
and
int
inc
add
adc
std
push
mov
or
sbb
inc
add
jb
xchg
js
iret
dec
push
mov
add
dec
scas
fcmovu
and
arpl
mov
lods
das
sahf
pop
adc
xchg
cmp
ficoml
addb
test
inc
rcrb
jns
adc
cmp
pop
outsl
mov
out
jp
adc
mov
jb
shrb
sbb
xchg
repz
add
push
dec
add
cmp
sub
xchg
scas
lods
add
pop
fs
leave
je
ret
in
fwait
ds
cli
pop
sarb
mov
stos
push
addb
lcall
out
adc
add
scas
enter
add
std
aaa
movsb
xlat
push
repz
cmpsl
les
mov
add
xor
lods
in
pop
lahf
adc
mov
jne
scas
inc
inc
add
add
addb
pop
call
addb
sarl
hlt
jbe
out
outsb
cmpl
or
std
std
fldl
test
lock
jg
mov
mov
mov
xor
add
in
push
pop
ja
or
add
add
loop
out
jmp
cmp
sub
jae
sub
push
jg
xchg
sbb
roll
add
add
xor
lock
ja
inc
scas
pop
mov
ret
xor
add
dec
outsl
sub
xchg
in
add
cmp
hlt
insl
loopne
inc
add
pop
push
stos
sub
pop
jne
shlb
sub
cmpsl
push
imul
movaps
daa
add
test
insl
cmp
test
incb
cwtl
xchg
xchg
or
pop
ja
loop
pop
sub
repnz
sbb
dec
push
call
mov
test
inc
add
mov
add
add
jo
add
arpl
xorl
lods
dec
jo
repz
add
cmpsb
pop
jecxz
cmp
add
call
gs
jmp
or
cmp
jo
sbb
lahf
sbb
xchg
bound
cmp
pop
daa
fstp
cmp
add
add
cs
pop
adc
push
sbb
loope
or
mov
add
rcrl
jmp
or
or
push
add
inc
inc
add
or
sbb
lods
ss
jae
jo
add
mov
addb
addr16
adc
or
xor
mov
jae
int
icebp
mov
stos
xchg
adcl
cmp
cmpsb
test
inc
add
sub
iret
lcall
and
mov
rcll
jmp
dec
xor
jge
dec
xlat
cmp
jp
add
jp
mov
xor
xor
add
sbb
mov
hlt
mov
add
imul
xchg
out
pusha
add
outsb
aas
data16
popa
fidivrl
mov
add
rolb
cmc
pop
idiv
or
in
inc
add
add
add
push
scas
push
pop
ror
or
cmp
cmp
shrl
xchg
jecxz
mov
mov
rcr
cmp
or
sub
mov
adc
add
inc
add
or
iret
sbb
add
scas
repnz
lds
adc
js
jg
cmp
shrb
aas
cmp
cmp
pop
aad
jne
mov
xchg
std
mov
jle
out
mov
mov
ds
xor
add
jbe
addb
stos
mov
in
cmp
push
push
dec
cwtl
sbb
fs
mov
jb
cwtl
cmc
xchg
xchg
mov
add
js
adc
xchg
pusha
add
cli
out
fs
mov
add
adc
add
jbe
jne
scas
dec
xchg
xchg
jmp
and
fs
cli
jae
lret
jl,pt
pop
dec
cld
lods
push
push
lods
insl
in
push
es
xor
outsl
mov
addb
add
insl
or
daa
mov
movsb
fstpl
cwtl
je
pop
dec
stos
dec
call
inc
dec
or
popa
cli
jmp
mov
cmp
lods
xchg
negl
xor
pop
mov
mov
mov
jp
jbe
je
pushf
jb
dec
loopne
fwait
mov
mov
dec
mov
test
inc
movsb
pop
test
ds
movsb
pop
add
nop
sub
add
cld
bound
cs
lock
pop
mov
or
add
sbb
sub
enter
out
mov
or
inc
out
div
ds
lahf
loop
adc
xchg
shlb
aaa
lret
or
sub
push
sahf
and
cmp
ret
mov
jnp
pop
imul
aam
sarl
xor
loop
imul
sub
sub
jg
enter
sub
sbb
or
cmpsb
loopne
bound
adc
daa
in
ret
fucomp
iret
test
push
enter
fisttpll
in
imul
stc
xchg
add
movsb
outsb
mov
pop
and
jg
mov
lock
add
mov
inc
pop
adc
out
mov
leave
jp
stos
sub
enter
mov
call
aas
fiaddl
add
outsl
mov
les
fs
inc
add
insl
pop
lods
or
loop
outsl
pop
push
jmp
idivb
xchg
lahf
divl
add
popa
pop
push
cmp
or
mov
or
fs
rcl
mov
shll
cs
push
adc
inc
add
repz
iret
dec
pusha
add
les
jl
add
repnz
pop
call
data16
adc
les
inc
int
idiv
sbb
arpl
or
das
jns
bound
or
jnp
in
lcall
cmpsl
add
mov
add
loope
adc
add
fimuls
add
jns
sub
lea
jbe
sub
xor
add
inc
add
jl
mov
add
mov
fildl
push
mov
fldt
push
pop
cwtl
fimull
inc
in
jl
mov
xchg
test
scas
push
movsb
inc
add
cs
pop
div
rcrl
idiv
imul
add
or
pop
movsb
jo
pop
dec
cmp
in
lret
sub
ret
cwtl
daa
rcll
sbb
lcall
jbe
push
cmpsl
mov
movsl
lods
pop
popf
jle
sub
mov
mov
mov
inc
add
nop
mov
add
movb
mov
add
xchg
sti
add
xchg
popa
out
push
stc
cld
adc
int
loop
push
sbb
add
loopne
fdivrs
push
gs
lods
stos
sub
push
add
xchg
jp
pmaxsw
pop
mov
in
add
aad
pop
out
cs
xor
adc
xchg
pop
inc
add
jmp
pop
outsb
push
mov
fsubp
sti
jge
int
jp
sahf
or
inc
add
cmc
outsb
fnop
in
mulb
add
cmc
push
rorb
add
test
jmp
bound
ds
add
dec
jne
inc
popf
xor
insb
mov
add
mov
add
fstl
adc
or
inc
add
dec
aaa
icebp
push
addb
lods
das
xlat
mov
jecxz
mov
add
mov
test
js
add
lods
inc
add
shrl
adc
insl
loopne
push
es
popf
cli
mov
mov
xchg
push
sbb
cmp
hlt
out
out
xchg
stc
cli
pop
bound
add
mov
or
sub
add
iret
or
cmc
je
jnp
xlat
mov
and
sub
mov
mov
mov
xor
aam
sbb
fdivs
sbb
dec
ffreep
into
imul
mov
mov
movsb
sbb
call
adc
xor
pop
ss
sbb
mov
mov
repnz
or
cli
mov
cmp
out
inc
or
jmp
addb
inc
add
add
xchg
addr16
cltd
pop
cs
leave
dec
xchg
pop
mov
sub
pop
loop
loope
pop
push
stos
cmc
fiaddl
push
dec
insl
hlt
aad
lock
jb
jnp
cmp
jo
and
test
movb
pop
jp
sbb
lock
inc
add
das
les
ret
cld
dec
sub
daa
test
jns
das
add
push
sbb
mov
cmp
mov
push
pop
xchg
and
mov
xchg
add
sub
push
cs
add
movsb
clc
push
mov
ret
inc
add
jb
push
pop
jmp
inc
add
aaa
outsb
push
pop
loope
pusha
add
test
mov
daa
mov
add
insl
mov
jl
ss
aaa
lods
mov
outsb
es
aas
inc
mov
add
add
in
sub
push
xchg
jno
or
jb
add
addl
addb
imul
mov
stc
lret
scas
bound
push
adc
push
insl
cli
frstor
fs
ror
adc
iret
aam
mov
out
sub
adc
push
pop
and
mov
jns
push
mov
into
gs
cmp
in
xchg
mov
loope
push
repnz
cwtl
stc
je
add
loopne
dec
add
cmc
dec
into
xor
add
xchg
mov
arpl
jo
sub
or
fdivp
test
add
out
xchg
shll
inc
add
movsl
clc
add
mov
ljmp
movsb
xchg
or
jg
jno
call
or
inc
add
sbb
lahf
and
pop
xchg
arpl
dec
xlat
push
push
add
fnstsw
loop
gs
add
pop
mov
mov
or
pushf
push
in
sti
push
inc
add
ss
pop
xchg
xchg
test
out
cmp
mov
popf
popf
push
ss
sahf
lret
xchg
cmp
pop
jle
ror
dec
xchg
inc
nop
mov
dec
into
sbb
jnp
sub
sub
scas
lods
fadd
add
add
sbb
ret
addb
push
jge
sahf
and
jmp
fldl
sbb
in
lods
xchg
in
xchg
lds
sbb
pop
aas
mov
bnd
jbe
loopne
add
out
stos
adc
test
xchg
repz
inc
aad
dec
or
inc
add
jecxz
mov
sub
pop
or
mov
imul
imul
lret
into
add
stos
xchg
sub
arpl
jne
cmpsb
dec
push
das
inc
add
jle
xor
mov
or
jmp
xor
mov
in
push
pop
dec
xchg
into
adc
mov
dec
sarb
pushf
aad
xchg
lock
sub
dec
xchg
aam
xchg
mov
je
dec
in
push
add
add
rcrl
mov
les
xchg
ds
sbb
add
add
movsl
add
xor
xchg
cmp
xor
and
cltd
insb
rolb
add
lret
cld
sbb
fildll
rolb
repnz
jno
xchg
ja
sbb
hlt
sub
pusha
add
cmp
in
cli
pop
or
push
enter
pop
dec
mov
lret
push
push
fldl
push
xor
add
and
pop
sahf
xor
sbb
pop
rcll
push
mov
pop
sbbl
mov
test
sbb
in
and
js
sbb
cmp
cmpsb
mov
xor
xchg
sbb
adc
data16
xchg
sbb
jmp
xchg
lcall
aaa
movsl
fstps
xlat
stos
cmp
lock
addb
cmp
int
pop
sbb
pop
daa
add
cs
jge
scas
adc
lds
int
mov
xor
add
mov
pop
adc
sbb
add
bound
adc
add
push
add
add
push
add
mov
pushf
pop
xor
scas
pop
add
addb
xchg
cmp
jns
add
cwtl
aam
lock
xchg
jl
add
add
sahf
scas
rorl
jnp
and
xor
scas
addb
adc
fstps
mov
add
sbb
xchg
loopne
ret
push
add
lahf
pop
std
cmp
jno
xchg
adc
jp
add
mov
fimull
dec
loop
push
test
sub
jecxz
lret
xchg
ja
icebp
jno
sub
lcall
lea
cmpsl
jmp
push
mulps
das
jp
out
xchg
and
mov
mov
jp
jl
push
pop
test
add
daa
cmp
add
icebp
mov
data16
sub
les
jns
fwait
mov
lock
mov
fldcw
das
jno
repnz
mov
nop
cltd
daa
jle
mov
push
ja
inc
add
xchg
int3
mov
fwait
bound
mov
add
ss
xor
cld
add
xor
in
lea
out
adc
mov
pop
cmpsl
mov
xchg
or
loope
inc
xchg
std
xlat
jecxz
dec
inc
add
pushf
mov
and
add
addb
push
cmp
adc
jne
inc
jne
and
shll
shlb
push
aad
mov
sahf
lahf
movsl
call
insb
mov
and
mov
inc
inc
mov
je
mov
adc
or
rolb
and
pop
repnz
sub
std
mov
add
or
std
nop
enter
into
cld
sahf
adc
shll
mov
gs
mov
lea
xor
mov
imul
in
ud0
arpl
std
cs
hlt
jecxz
cmpsb
cmp
dec
xor
add
test
and
add
outsl
arpl
add
xchg
test
mov
gs
xchg
in
gs
jp
fsts
mov
pusha
add
add
jl
add
mov
add
sub
fildll
pop
aad
ret
jo,pn
test
inc
add
lea
push
inc
jg
gs
fsubl
add
mov
jecxz
pop
mov
andl
inc
add
sbb
pop
lock
jb
adcl
mov
jg
mov
mov
mov
cmpsb
mov
fs
mov
fcmovb
hlt
rcrb
push
in
ret
inc
add
clc
ljmp
ret
test
or
mov
in
add
jmp
addb
lret
push
adc
mov
loopne
or
das
dec
leave
incb
sahf
sbb
es
gs
data16
addb
add
inc
loope
mov
cltd
leave
ret
xchg
push
xor
or
je
xchg
push
in
inc
add
add
cmc
rcl
into
call
imul
jmp
mov
lock
pop
or
sub
rcll
xchg
mov
fmul
popf
int3
mov
repnz
push
mov
inc
add
jo
jmp
ret
adc
pop
pop
or
or
mov
pop
dec
jl
mov
ja
shl
pop
rclb
pop
adc
jp
icebp
cmc
aaa
repnz
cmp
jl
add
lea
mov
leave
mov
mov
insl
pop
cs
fwait
and
push
xchg
add
sub
rcrb
int3
orl
or
sub
mov
into
pop
add
or
aam
mov
sbb
stos
lods
imul
in
mov
ja
mov
mov
mov
push
cmp
outsb
mov
dec
cmpsl
adc
xchg
mov
sbb
out
jle
and
add
sub
jecxz
or
aaa
xchg
dec
or
iret
cld
lods
dec
out
and
pop
cmc
mov
cmp
data16
mov
in
push
add
rclb
dec
mov
es
mov
add
leave
add
mov
lods
lahf
addb
mov
mov
mov
xlat
push
shll
enter
or
push
sbb
in
out
add
test
cmpsb
xchg
jl
lret
sub
inc
or
adc
dec
or
ja
jecxz
adc
add
aaa
das
lock
insb
aad
xor
add
and
fisttpl
mov
lret
pushf
int3
jp
or
add
push
push
add
mov
cmc
xor
lods
fsub
cmp
fnstenv
push
xchg
mov
loopne
push
andl
add
jp
add
add
add
sbb
outsl
jg
sub
xchg
bound
adc
xchg
mull
ret
mov
mov
mov
cld
movsl
cmpsb
cmpsb
xor
xlat
in
inc
push
lahf
mov
sar
bound
addb
mov
or
lahf
jb
sahf
dec
and
call
nop
jnp
xchg
pop
push
add
add
fiaddl
add
pop
mov
arpl
js
adc
sbb
bound
push
idivb
lret
das
imul
xchg
sbb
sub
cli
pop
lock
or
mov
adc
aaa
and
sbb
test
push
xorl
pop
stos
cmp
js
add
mov
add
call
mov
imul
or
adc
lret
add
push
push
dec
adc
pop
and
xrelease
add
and
dec
add
outsb
mov
jne
jl
loope
dec
inc
aaa
dec
mov
or
int
enter
jge
push
sub
sbb
dec
scas
repz
cmp
cwtl
mov
jmp
int3
comiss
data16
lods
in
loop
negl
cmp
rcr
jge
cmp
add
je
cmp
pop
jl
add
xor
ja
add
inc
add
add
inc
je
clc
xchg
xlat
cmpsb
xor
or
lret
dec
dec
cmp
xchg
xor
push
mov
in
notl
adc
stos
out
mov
and
inc
add
pop
push
adc
jno
or
mov
testl
std
cmp
insb
mov
fs
jae
xchg
or
fists
jmp
dec
xchg
es
add
adc
sbb
decb
std
pop
inc
dec
iret
mov
aaa
insb
sub
mov
daa
mov
das
pop
mov
out
cmp
dec
lret
push
bound
and
cltd
inc
add
bound
xor
fstl
lahf
mulb
add
add
xor
ja
bndstx
jae
int3
loope
addr16
lods
cmpsl
jnp
pop
adc
stos
clc
outsl
xlat
inc
add
cmp
mov
push
sub
fidivrl
popa
mov
into
lahf
mov
mov
add
sub
add
in
push
ret
lods
pop
ret
rcrl
loope
movsl
rolb
pop
xor
add
call
and
push
in
add
aas
pushf
add
std
adc
aam
aad
lock
jo
inc
mov
in
lret
mov
xor
sub
jno
cmp
push
int3
test
xor
enter
insb
out
inc
scas
cltd
mov
pop
dec
mov
adc
loopne
push
xor
pusha
add
add
leave
dec
pushf
push
aad
xchg
clc
sub
leave
sbb
into
or
cmp
add
stos
adc
mov
xchg
inc
add
popl
loope
aad
popf
push
imul
or
int3
cs
inc
cmpsb
leave
in
add
loop
int3
mov
jae
add
and
mov
in
or
ja
es
mov
push
nop
and
movb
lock
add
adc
add
test
les
push
loope
inc
add
into
les
cmp
dec
outsl
mov
pop
pop
mov
mov
fistps
sub
gs
es
vmovapd
mov
jnp
add
add
clc
xor
jg
jae
inc
add
or
mov
mov
fs
inc
add
or
sbb
ljmp
aam
mov
push
loope
leave
xlat
loopne
sar
and
out
cmp
inc
add
insb
int3
add
pop
sbb
in
pop
dec
out
outsb
popf
jne
movb
dec
pop
mov
into
dec
jecxz
sub
adc
inc
lahf
mov
inc
sub
lods
cli
stc
subl
dec
push
mov
sub
pop
dec
fldcw
bnd
inc
add
add
push
or
decl
add
and
popf
ljmp
shrl
aas
dec
pop
dec
loopne
addb
test
jns
outsl
shrl
cmpsl
movb
dec
lcall
loopne
loope
and
sub
adc
jecxz
mov
js
aad
sub
add
popf
inc
add
xor
xor
movsb
cld
cltd
jle
add
xor
xlat
or
mov
sbb
aam
push
bound
sub
sub
ja
or
ljmp
sahf
dec
mov
mov
add
paddusb
ret
pop
xchg
clc
sub
addb
mov
add
nop
outsl
fs
sbb
jne
rolb
push
adc
outsl
gs
sub
roll
jmp
xor
mov
jne
lds
clc
pop
bound
dec
loope
jne
mov
or
add
pusha
add
mov
out
mov
ds
ds
mov
cmp
fidivrl
push
test
jge
mov
fiaddl
andl
clc
adc
loopne
jns
jg
jp
jae
fimuls
add
mov
adc
and
xchg
xchg
addb
push
out
pop
loope
add
cmpsl
or
xor
jb
dec
es
add
sbb
xchg
fndisi(8087
xor
test
mov
fnstcw
fdivl
add
out
leave
addb
mov
dec
cwtl
cmp
mov
hlt
cmp
pop
jl
pop
mov
cltd
push
mov
ja
dec
test
cmp
leave
cmp
push
xchg
xchg
push
pop
out
mov
popf
cwtl
jnp
bound
xchg
or
cltd
loop
and
mov
test
lcall
pop
and
pop
test
test
adc
iret
jno
mov
fsubl
ret
mov
out
jbe
mov
jl
dec
add
cmp
inc
add
pop
ja
sbb
dec
aad
add
cltd
inc
ljmp
test
cmp
les
mov
jns
push
negb
rorl
jle
repz
xor
inc
out
adc
cmc
xchg
idiv
cli
rolb
add
insb
rolb
lcall
and
enter
xor
jns
or
xchg
idivb
fidivs
dec
pop
fiadds
cmp
stos
cmp
fisttpll
dec
aad
xchg
xchg
inc
add
sbb
pop
sub
fwait
xor
daa
sbb
mov
and
adc
push
cmp
fldcw
fcom
push
cmp
pop
stos
lahf
jle
adc
and
add
add
pop
ja
sbb
mov
and
mov
add
sbb
mov
dec
pop
addb
lahf
push
mov
cmp
shl
pop
mov
das
sub
lock
fs
push
fldcw
lea
sub
cmpsb
xchg
out
pop
push
insl
mov
push
sbb
push
les
int3
cltd
xlat
mov
mov
add
scas
mov
loopne
lock
jmp
and
add
mov
pop
aaa
cmc
loopne
insl
cmp
sub
je
mov
mov
and
and
nop
insl
dec
push
daa
sub
movsl
pop
and
mov
mov
add
jmp
push
stos
addb
shlb
pop
push
cmc
push
xchg
mov
mov
jno
mov
pop
push
push
adc
fwait
loop
mov
pop
andl
ljmp
or
sub
pop
push
roll
adc
inc
jle
add
and
movb
lret
push
push
out
out
sbb
adc
arpl
sub
mov
adc
mov
mov
inc
xor
loopne
popa
das
cmp
call
hlt
jmp
mov
jns
lahf
add
xor
cmp
add
out
dec
cmpsb
mov
xor
add
or
add
lds
add
out
or
jns
xor
aas
push
sarb
sub
add
stos
iret
xchg
pop
out
xchg
xchg
pop
test
jl
out
ja
jae
and
sbb
bound
pop
scas
outsb
sbb
add
dec
out
lods
xchg
sbb
loop
arpl
add
jae
xor
ja
call
cmp
stos
and
xchg
sahf
es
cli
sub
pop
push
es
pop
js
adc
ret
les
cli
dec
and
adc
add
add
add
or
movb
push
cwtl
adc
pop
cltd
fcmovnu
je
in
idivl
out
sti
inc
add
or
shr
or
add
mov
lret
dec
leave
std
cmp
add
xlat
je
lcall
jmp
add
jbe
mov
fildll
repz
arpl
xchg
aas
jne
add
int3
out
mov
mov
cmp
mov
out
iret
add
or
push
lret
jne
jbe
sbb
sbb
push
add
mov
inc
jl
enter
pop
nop
dec
and
stc
and
adc
dec
inc
add
add
push
adc
nop
shll
mov
mov
add
sbb
xchg
scas
cmpsb
in
loop
pop
inc
add
je
xchg
xlat
rcrl
mov
in
ret
mov
std
loop
pusha
add
fiaddl
jmp
outsl
lock
fbld
add
aas
dec
jge
test
xchg
and
outsl
jg
cs
mov
or
mov
add
xchg
sbb
cltd
inc
add
sub
repnz
das
jp
add
mov
insb
or
dec
cltd
adc
or
daa
movsb
js
lcall
aas
addl
inc
dec
mov
and
sbb
push
add
and
jl
ljmp
or
fcom
dec
inc
add
add
or
add
xchg
xchg
out
jge
mov
in
sbb
repnz
add
data16
add
xor
pop
inc
cmp
add
pop
mov
sti
fsubrl
cmp
mov
mov
cmp
or
ret
xor
fisubrl
roll
add
mov
pushf
jmp
adc
imull
in
sbb
mov
push
test
pop
jne
lods
rcrb
mov
adc
addb
xchg
notl
add
aad
jo
xchg
scas
rcll
loope
inc
add
and
cld
iret
ss
xchg
xchg
in
pop
cld
jae
arpl
sbb
inc
add
addr16
clc
les
add
xor
jne
sahf
add
ret
mov
sbb
sub
std
out
push
call
sub
jle
clc
xchg
jl
in
add
dec
inc
pop
lcall
push
xchg
loop
add
movb
jne
shl
test
cmp
sbb
and
addl
ds
add
sbb
push
fwait
cmp
mov
add
or
rclb
mov
pop
pop
roll
or
pop
arpl
fbld
xchg
dec
push
push
int
mov
pop
insb
cwtl
in
jecxz
lret
and
or
add
xor
cmp
add
btc
add
pop
nop
push
fldl
add
add
sbb
ficomps
cmpsl
mov
inc
sbb
arpl
lret
mov
pop
insb
xor
push
push
inc
add
lea
push
clc
mov
xlat
or
jbe
arpl
add
sbb
ja
cld
mov
faddp
add
jo
cwtl
or
in
push
inc
add
jecxz
add
adc
add
test
movb
cmp
adc
pop
push
sub
lods
xchg
aam
ss
pop
and
movb
mov
pusha
add
jmp
popf
inc
and
adc
shll
ds
and
test
sbb
iret
cmp
daa
mov
mov
call
mov
adc
test
movsl
cmp
cmp
pop
out
and
fdiv
imul
sbb
loope
lea
inc
sub
ss
push
add
inc
dec
fbld
sti
cwtl
sub
rcl
xor
inc
xor
dec
jecxz
mov
jle
add
mov
scas
mov
mov
ds
inc
in
mov
jmp
faddl
add
fnstsw
push
fcoml
add
pop
and
and
aaa
fimull
add
rorb
lea
sub
test
jp
addb
lods
pop
push
or
lea
mov
push
out
movb
in
xchg
mov
icebp
cmpsl
out
mov
js
and
add
push
push
or
add
mov
mov
add
pop
push
cmpsb
xchg
ss
test
xchg
in
les
rolb
imul
xchg
jmp
mov
int3
rorl
test
push
add
ja
aaa
out
jmp
test
mov
ljmp
sti
push
add
into
cld
ja
sbb
mov
dec
push
sub
stos
iret
mov
adc
out
dec
stos
lcall
bnd
xchg
fcomps
inc
add
or
lahf
gs
sbb
divb
int
cmc
and
scas
shrb
xlat
inc
add
jge
addb
add
xchg
fcoml
mov
adc
lret
jmp
pop
xchg
push
lret
xor
xor
sarb
xchg
pushf
mov
pop
jne
xchg
fs
int3
pop
jb
mov
lds
xchg
jbe
mov
add
pusha
add
sub
adcl
jmp
fs
insb
leave
mov
scas
test
ja
sbb
jg
mov
fisubrs
push
add
insb
lods
inc
push
ds
pop
cs
mov
jnp
push
xor
pop
cmpsl
inc
add
fs
pushf
pushf
addr16
jno
das
jg
inc
sbb
jecxz
pop
pop
rolb
xor
negb
jno
add
lcall
sbb
mov
fstpl
or
add
or
add
faddl
cmc
or
fwait
push
mov
or
lahf
dec
je
idivb
js
test
mov
mov
push
movsl
push
iret
pop
jp
enter
sbb
cs
pop
jg
xchg
add
mov
push
lea
insb
jmp
jl
out
pop
cs
and
mov
and
pop
add
xor
add
mov
dec
lods
mov
test
cld
sar
dec
js
push
jl
aad
jbe
movsb
sbb
add
sub
sbb
add
sbb
inc
add
add
shr
push
xchg
test
or
push
jle
rolb
adc
cmp
out
xor
sbb
cmc
out
imul
mov
or
and
rorl
xchg
sbb
add
jb
fwait
dec
inc
repz
jle
mov
jp
jmp
xchg
loopne
nop
gs
mov
imul
jae
dec
ret
add
in
inc
add
inc
add
test
stc
bound
sub
into
mov
imul
push
adc
add
add
int
repnz
pop
lret
lock
enter
mov
push
add
fld
add
inc
xchg
outsl
sbb
mov
pop
cli
repz
pop
imul
xchg
out
mov
lea
add
lret
sahf
xchg
mov
ret
push
lods
aam
pop
rcr
gs
fnsave
addr16
mov
lret
fs
sahf
dec
sub
add
fdivrl
adc
ja
inc
add
dec
and
add
push
add
add
jne
cmc
orl
sub
mov
mov
mov
or
out
fisttps
pop
pop
pop
jns
inc
add
inc
dec
mov
nop
fistl
fsubrp
cvtpi2ps
addb
add
push
cmpsl
and
dec
xor
xor
push
jb
jo
add
out
leave
icebp
xor
out
dec
sub
sub
sub
nop
imul
rcl
enter
xchg
dec
and
xor
sbbl
and
dec
jae
lods
and
adc
mov
mov
in
mov
in
xchg
test
aam
jb
cld
test
out
pop
test
add
inc
test
add
add
inc
add
add
sub
add
jno
pop
adc
mov
aas
rcl
pop
add
xor
jg
adc
mov
sbb
es
jle
inc
xor
mov
clc
pop
push
jecxz
mov
sbb
push
fidivrl
fwait
imul
imul
pop
mov
jns
iret
and
sti
pop
ret
add
mov
pop
stos
scas
xchg
dec
dec
pop
into
dec
fadds
pop
xchg
push
and
jno
add
cmp
test
push
int
sbb
in
cmp
rcrb
mov
dec
sub
and
jmp
jecxz
notb
lods
aaa
fimuls
inc
xor
adc
bound
cli
dec
test
push
ds
fcoml
inc
push
iret
dec
jno
fidivl
dec
jge
add
xchg
xchg
dec
dec
mov
add
mov
mov
bound
out
dec
out
jne
mov
sarl
addb
push
repz
fcompl
insb
adc
daa
movsl
cmp
inc
add
lahf
cmp
or
je
lahf
cmp
cmpsb
in
sbb
add
ret
imul
push
incb
dec
js
inc
add
xchg
jp
jge
push
cmc
cmp
adc
jg
add
cmp
jnp
je
pop
push
add
dec
pop
jle
cmp
int3
cmp
add
sbb
mov
les
inc
add
cli
sbb
stos
mov
jl
mov
pop
movb
enter
cmc
lret
aas
stos
cmp
push
rol
add
shlb
mov
repnz
add
out
xchg
sub
fstpt
add
add
repz
aas
jg
bound
adc
mov
push
cmp
rorb
iret
into
xorl
add
add
adc
jnp
inc
or
jo
outsl
rolb
imul
add
in
cltd
jp
cmp
jle
inc
add
cmp
imul
add
dec
jecxz
jp
lock
sub
ja
xor
dec
mov
loop
adc
rolb
out
scas
cmp
add
xchg
jle
dec
bound
adc
pusha
add
add
in
jns
mov
and
int
lods
or
fwait
jle
mov
xor
lahf
mov
inc
push
and
jbe
addr16
jns
lock
cmc
sub
xchg
add
rorl
int3
sbb
dec
movsb
push
xor
idivw
xchg
dec
jnp
mov
fsubs
mov
insl
inc
add
push
inc
sahf
test
mov
jno
addb
xchg
mov
add
mov
outsl
push
or
sbb
popf
fimuls
jmp
cld
sub
pop
pop
adc
add
mov
fstpl
jmp
add
lcall
adc
insl
daa
int3
aad
stc
loop
mov
jle
cmp
xchg
jecxz
jno
add
sbb
movsb
inc
add
int3
sub
jle
pop
std
stos
add
jbe
icebp
push
insb
mov
add
pushf
inc
add
out
mov
ljmp
aaa
daa
jge
add
mov
pop
sub
stc
shlb
add
sub
mov
push
arpl
xor
out
and
rclb
shll
lods
fldcw
jno
cmp
add
mov
movsb
icebp
jb
stc
out
or
xchg
lds
lret
mov
push
mov
mov
addb
xchg
pusha
add
xor
add
scas
mov
sbb
jg
lds
stos
popa
sbb
add
jl
dec
mov
pushf
xor
xchg
pop
mov
stos
popa
lods
push
test
push
jg
out
je
rolb
push
mov
fcoms
pushf
cli
insl
inc
add
sahf
dec
ljmp
inc
or
mov
cli
mov
outsb
faddl
add
add
lret
test
cwtl
ret
dec
dec
mov
xchg
sbb
pop
and
int3
test
mov
sub
pop
inc
add
stos
test
mov
mov
mov
or
int3
xlat
mov
xchg
xchg
sub
rolb
add
mov
add
mov
xor
xchg
dec
int
push
notb
fstp
push
cmp
add
ret
mov
jmp
push
mov
rorb
rol
ja
js
sub
rolb
push
inc
add
add
mov
inc
adc
jl
gs
add
cmpsl
fmulp
adc
inc
add
dec
mov
push
add
call
cs
inc
add
addb
inc
adc
or
loop
leave
lcall
inc
add
inc
add
sbb
icebp
ljmp
icebp
clc
jo
subl
movsl
mov
push
and
in
xor
add
cmp
into
sarb
shlb
movb
inc
mov
aaa
stos
mov
or
das
xchg
xchg
pop
or
dec
popf
in
push
mov
add
pop
add
test
roll
add
add
dec
sahf
mov
stos
enter
daa
leave
jl
outsb
push
xor
pop
inc
lahf
jp
shl
jg
add
xchg
mov
movb
jge
mov
aas
in
cs
dec
or
cmp
inc
daa
adc
aaa
in
pop
ret
lods
into
in
adc
jb
addr16
or
lret
add
cmp
push
mov
or
xor
push
loopne
ss
cwtl
mov
out
lock
in
ds
loop
fdivrp
cwtl
rolb
adcl
bound
jg
add
push
add
adc
mov
addr16
lock
add
mov
call
pop
addb
cwtl
mov
dec
cmpsb
sarb
jbe
das
xor
ret
shll
cs
xchg
mov
add
add
mov
pop
outsl
and
cld
mov
sub
xcrypt-ctr
cmpsl
pop
pop
cmp
pop
addr16
pop
add
add
jno
add
ds
push
jg
out
ret
push
jp
out
mov
pop
sbb
xor
push
outsb
push
stos
cmp
jge
out
xchg
sub
add
add
xchg
sub
ret
aaa
xchg
jg
sbb
add
and
cmp
push
cmc
or
jnp
inc
call
ret
or
mov
les
sub
jno
add
xchg
ja
popa
cmpsb
add
cmp
xchg
fldenv
hlt
jmp
mov
cmpsl
addb
jg
pop
and
mov
add
sahf
fstpl
push
jbe
xor
mov
adc
aad
gs
stos
ds
xchg
add
inc
mov
stos
and
enter
add
lret
jne,pn
in
push
jns
mov
into
scas
aaa
xchg
dec
fcoms
adc
add
add
lret
incl
mov
push
push
icebp
scas
in
repnz
clc
leave
xchg
out
sbb
insl
in
pop
push
inc
arpl
add
out
xlat
sbb
les
jns
xor
jo
push
js
and
mov
xlat
cmc
xor
divl
xchg
mov
mov
or
sub
jbe
push
gs
dec
mov
lahf
fnstcw
and
cwtl
jae
mov
xor
cmp
call
lock
std
inc
add
cmp
call
add
mov
dec
mov
mov
das
inc
mov
cli
fldt
add
cmp
add
les
insb
pushl
ret
adc
add
scas
sbbl
jle
add
sbb
inc
add
stos
inc
jne
sbb
push
sbb
pusha
add
mov
cmp
iret
ljmp
push
hlt
das
xor
arpl
out
inc
shl
mov
arpl
je
mov
mov
lods
mov
xchg
lret
mov
cmp
inc
add
dec
addb
or
mov
mov
inc
add
lods
sbb
jmp
out
mov
jne
ror
aad
mov
sarl
in
loop
icebp
inc
add
inc
add
mov
push
lea
jle
add
pop
xchg
fs
adc
add
mov
lea
jae
add
cld
mov
adc
les
push
mov
jl
adc
sti
mov
pop
dec
xchg
jle
jge
adc
sbb
incb
add
xor
syscall
pop
pop
mov
jnp,pn
add
inc
add
xor
ret
lcall
xor
cmc
inc
add
aas
cmp
icebp
push
sbb
jge
add
pop
xorl
aad
imul
inc
add
div
mov
add
xor
stc
inc
add
loop
daa
test
test
mov
push
inc
push
insb
iret
sub
movb
push
daa
mov
scas
out
les
sti
insl
pop
xor
adc
jne
and
jno
addb
push
add
outsb
insl
stc
inc
jp
mov
aam
add
xchg
add
addb
dec
sub
dec
and
pop
outsb
cmp
outsl
icebp
sbb
mov
push
sahf
mov
add
lods
aaa
loop
and
xchg
add
call
pop
out
push
xchg
in
loope
and
repz
xor
repz
test
pop
mov
outsl
adc
loopne
add
mov
add
xchg
ds
cltd
pop
push
cmc
push
cmp
xchg
mov
add
mov
ret
js
xchg
nop
int3
fldenv
sbb
lods
mov
xchg
fnsave
sub
addl
pop
je
add
cmp
popa
roll
inc
add
add
push
sbb
xor
inc
sbb
cmp
mov
xchg
mov
dec
pop
pop
adc
pop
int
inc
lahf
jo
jmp
in
repnz
push
sub
or
add
pop
push
sahf
loope
jecxz
jne
jns
or
adc
fs
jne
std
gs
xchg
dec
and
add
xchg
ss
and
jl
mov
and
mov
jno
jno
mov
or
das
cltd
push
add
sbbl
hlt
xorl
nop
test
lods
xor
rcll
fldenv
jl
mov
addr16
testl
or
dec
mov
fsubrl
jno
xchg
jle
bound
sub
test
push
out
adc
mov
dec
push
leave
bound
dec
mov
cmp
push
cld
sti
mov
out
adc
mov
cmpsl
test
pop
or
pop
mov
movsb
sub
test
sbb
push
lock
or
add
push
lock
xor
cmp
pop
xor
cli
addb
ror
ret
mov
hlt
sahf
inc
faddl
add
push
add
jbe
rclb
addr16
sbb
rcll
inc
rcrl
add
lret
cltd
sub
test
xchg
addb
xchg
out
and
lods
iret
xchg
jmp
ret
mov
dec
add
int
xchg
out
andl
ljmp
dec
push
push
xchg
inc
divb
mov
je
cmpsb
daa
stc
outsb
mov
jmp
mov
add
xchg
test
mull
rorl
and
mov
enter
add
add
movsl
call
sbb
imul
fmull
or
add
xor
xchg
out
js
cmpsb
stos
jo
aas
fsubl
in
sub
mov
cmp
pop
mov
cmp
addb
or
jg
mov
push
mov
add
dec
xchg
ret
call
add
cwtl
dec
or
or
and
adc
add
add
sbb
lea
push
add
pop
fstl
pop
xchg
mov
mov
aad
xchg
pusha
add
or
icebp
xor
add
xchg
jl
add
push
xlat
iret
mov
mov
mov
sbb
sub
jge
jl
out
mov
pushf
jge
fwait
mov
adc
mov
stos
lods
jecxz
add
ss
jb
xchg
testb
sub
int3
sbb
cs
mov
int3
lahf
push
mov
add
dec
jne
popa
cmc
adc
or
lret
sar
dec
loope
mov
addb
out
add
add
push
jmp
imul
add
aad
mov
mov
les
dec
movsb
leave
fsubl
add
pop
adc
sub
mov
push
clc
add
pushf
std
dec
bound
loop
fsubr
stos
in
leave
or
push
loop
addb
cmpsb
cmp
stc
or
es
fs
add
inc
add
std
jo
out
cltd
cwtl
or
pop
cmp
xchg
cmpsb
hlt
fisttpl
popa
fs
push
push
mov
mov
dec
sub
mov
mov
call
add
fs
inc
add
pop
stc
lea
sub
sub
push
lea
orl
fsubrs
pop
xchg
mov
push
add
dec
shrl
nop
outsb
sub
add
add
sub
cmp
jecxz
add
mov
ds
popf
popf
inc
or
dec
into
int3
addr16
sarl
shr
push
mov
sbb
mov
scas
mov
in
fcoms
imul
incl
add
jae
lods
dec
add
mov
fs
mov
push
dec
cli
fstps
into
and
pop
jbe
push
pop
mov
xor
and
push
push
xlat
lods
push
jae
xchg
push
fs
out
push
cmp
ret
mov
mov
xacquire
inc
fadd
scas
mov
add
shll
jns
test
loop
add
sarl
mov
cmp
aaa
pop
imul
std
ret
jae
xchg
mov
add
jae
das
xchg
pop
adcl
cmp
test
pop
push
orl
pop
idivl
outsl
push
add
and
xchg
adc
mov
fsubs
jo
enter
push
test
scas
insb
mov
dec
xor
cwtl
cmp
addr16
pop
aad
lods
pop
call
icebp
cmp
cli
jmp
fs
cs
pop
lret
stos
movsb
mov
mov
rcl
popa
jb
in
out
shlb
gs
stos
out
into
fwait
imul
enter
movsl
lret
outsl
jl
in
and
mov
adc
jbe
fnstsw
scas
mov
mov
dec
mov
mov
add
iret
mov
mov
xchg
mov
stos
xrelease
sbb
dec
int3
adc
sub
sub
add
push
inc
add
lods
jb
cmpsl
mov
test
or
xchg
out
mov
push
mov
add
lods
mov
mov
mov
lds
cli
repz
outsb
neg
mov
es
mov
push
out
pop
dec
inc
enter
add
sub
ljmp
dec
int3
dec
loope
out
gs
gs
xchg
add
add
pop
mov
add
jae
inc
add
sbb
fmuls
inc
or
lods
mov
ljmp
pop
add
je
in
cmpsb
inc
add
cli
mov
out
mov
xlat
inc
sahf
add
xor
inc
add
add
jmp
cmp
rolb
outsl
pop
xchg
jmp
addr16
adc
outsl
mov
and
test
negl
sub
outsl
push
xor
add
and
jo
sahf
cmp
xor
inc
mov
lock
mov
lods
dec
and
fiaddl
rcr
popf
icebp
out
movsl
jno
pop
or
jl
and
xor
xchg
add
and
add
sbb
das
jne
aaa
test
mov
add
out
sub
adc
dec
aaa
mov
jne
lahf
ss
daa
and
mov
icebp
xchg
les
lds
add
mov
sub
add
cmp
pop
lods
insb
pop
std
out
mov
test
jmp
add
sbb
dec
addb
adc
out
xor
scas
sbb
lret
mov
insb
daa
pushf
mov
ljmp
add
add
rcrl
mov
mov
sub
jecxz
mov
add
rolb
mov
jge
leave
sbb
jns
out
mov
mov
pushf
add
ss
lea
mov
gs
adc
out
add
loopne
or
test
cmp
sarl
sar
push
xchg
sahf
push
sarl
push
dec
or
inc
and
movsb
add
mov
rolb
or
add
push
lods
loopne
sub
add
dec
jg
xchg
mov
cwtl
std
ss
pop
repnz
repz
mov
int3
aas
arpl
pop
mov
push
test
mov
and
les
xor
aas
in
icebp
push
mov
dec
pop
mov
push
add
cmpsb
jle
ds
notl
pop
adc
hlt
repz
jge
cltd
out
mov
add
xor
sub
add
mov
sub
and
movsl
xchg
adc
call
sbb
sbb
mov
out
push
nop
inc
popf
dec
mov
add
add
rolb
pushf
imul
sbb
inc
scas
dec
xor
pop
add
ds
icebp
inc
add
out
call
movsl
push
dec
data16
add
leave
ret
xor
add
fstpt
pop
sub
xor
hlt
mov
insl
subl
add
aad
movsbl
mov
aas
js
loop
cmp
cmc
loop
bound
cwtl
sub
add
adc
push
xlat
push
push
das
xchg
mov
dec
cltd
jmp
jnp
aaa
hlt
leave
add
std
xchg
lahf
les
cmpsb
sahf
cmp
mov
cli
and
push
add
popa
jmp
in
xchg
dec
mov
decb
ja
jle
leave
cli
or
mov
pop
fists
adc
and
lret
insb
dec
in
es
cmp
mov
lea
cltd
sbb
mov
sarb
sbb
in
xchg
shrl
insb
mov
addb
push
aad
inc
call
inc
and
in
movsl
mov
addr16
jecxz
or
fidivrs
leave
in
add
or
addr16
and
add
js
xor
push
add
dec
les
xchg
jg
mov
jp
and
lret
cmp
sbb
jo
bound
mov
add
push
and
jmp
imul
cltd
outsb
aaa
adc
cmp
and
pop
loopne
fsubs
add
rorl
adcl
cmp
idiv
ss
dec
aas
mov
xor
dec
adc
notb
imul
cmc
cwtl
dec
pop
jecxz
inc
ret
sbb
or
call
in
xchg
add
fs
lahf
jo
add
jle
sub
dec
fwait
cmp
dec
sub
add
shlb
jmp
and
xchg
add
popa
rolb
add
dec
push
scas
xor
rcrb
into
iret
out
sbb
fcmovnbe
test
test
mov
stc
outsl
loope
mov
iret
jle
shl
mov
xchg
pop
cld
or
and
sub
pop
ds
add
cwtl
leave
ss
add
jmp
push
fidivs
mov
push
add
jbe
xor
add
cmc
in
and
aad
add
sti
or
imul
xor
addb
sbb
fcomp
push
test
cld
enter
addr16
cmpl
fimull
cmp
hlt
inc
add
in
bound
jbe
pop
xor
or
or
lret
dec
cmc
sbb
add
cmp
cltd
jmp
mov
ret
inc
add
insl
push
dec
subl
gs
mov
cld
lds
subl
add
jnp
out
rcll
adc
jg
adc
inc
xor
daa
shrb
mov
ljmp
and
jnp
jl
scas
xchg
es
pop
push
push
movsl
push
ljmp
adc
inc
add
pop
in
in
dec
push
or
xor
pop
sbb
jmp
sub
iret
movsb
sbb
loope
fcoml
dec
data16
pcmpgtd
pusha
add
xlat
ss
cmpsb
jo
xchg
add
in
cmc
jle
xchg
test
sub
dec
or
adc
stos
dec
mov
repz
mov
pop
sbb
sub
add
xchg
or
popa
dec
push
bound
mov
pop
add
test
xchg
scas
sbb
jo
pushf
stos
mov
sub
ds
lahf
repz
es
push
pop
and
es
mov
sbb
lods
outsl
add
mov
add
pop
xor
pusha
add
push
lea
inc
add
jg
xchg
fisubs
mov
xchg
jne
outsl
mov
mov
inc
add
adc
dec
pop
inc
add
in
pushf
xchg
inc
add
aam
add
mov
sbb
int3
xor
push
mov
loope
pop
enter
push
addb
add
out
add
insb
jp
loop
xorl
pop
pop
push
add
je
cli
jns
scas
jp
fistpl
fnstcw
adc
and
and
xchg
fstpl
cmp
mov
mov
inc
add
iret
mov
bound
pop
and
aad
int3
cmp
pop
and
stos
xchg
xor
pop
fdivl
sbb
imul
mov
add
popa
cld
hlt
les
pop
mov
sahf
into
and
sub
ret
addb
lret
andl
inc
or
xchg
or
add
xchg
inc
or
sbb
jae
dec
push
push
mov
dec
xor
sbb
or
push
insl
mov
cs
add
addl
jl
jb
stos
pop
lea
popf
jmp
fwait
xchg
stc
push
sub
iret
shl
and
cld
into
sub
dec
or
in
inc
add
push
sub
ficomps
pushf
cmp
adc
xor
sub
int3
xchg
or
cs
aas
inc
repnz
add
mov
sub
lods
fists
daa
cmc
int
fstpl
add
std
out
test
rorl
or
mov
push
lret
ja
xor
mov
add
xchg
sarb
mov
fistps
push
repnz
iret
push
dec
daa
dec
in
movb
cmp
mov
lahf
xor
repz
push
mov
in
rcll
popf
popf
test
enter
std
cmp
mov
bound
lahf
add
rolb
in
mov
aaa
jle
js
jnp
cs
cpuid
imul
rolb
and
add
mov
cmp
adc
iret
sub
fwait
jnp
lret
lret
ja
push
popf
dec
movl
add
sub
fdivs
sbb
stos
pop
lahf
or
cmp
hlt
sbb
cmpsl
xor
inc
xor
orl
dec
pop
in
pop
inc
pop
inc
mov
sbb
out
jle
sarb
std
test
mov
jp
hlt
push
fnstsw
mov
fcoml
add
dec
fdivl
add
mov
js
xchg
adc
fistps
xchg
test
dec
pop
mov
and
jp
dec
shr
sub
cmp
xchg
sub
add
out
push
xchg
mov
jle
and
mov
aam
int
lahf
hlt
aad
fbld
add
shl
mov
imul
jl
cmpsb
das
push
pop
dec
sbb
pop
xor
iret
cmp
dec
sbb
pop
dec
ss
adc
sbb
addb
shl
xchg
das
or
lock
sti
jnp
sahf
sbb
dec
xor
shrl
mov
add
cmpsl
mov
dec
xchg
stc
pop
lahf
jmp
faddl
add
jg
cs
movl
repz
add
push
add
add
dec
ljmp
lret
mov
and
add
mov
or
into
mov
stos
mov
cli
dec
xor
sbb
push
add
stos
push
mov
or
sub
add
cs
sbb
jns
xchg
xor
jle
fidivrl
xor
dec
or
rolb
shll
sub
add
or
out
pop
hlt
sbb
shll
mov
lods
imul
fstl
jmp
xchg
mov
test
jecxz
fidivl
xor
ljmp
pop
push
cs
dec
inc
add
das
inc
dec
and
pop
dec
pop
fcom
push
pop
imul
stos
insl
lods
cmp
push
mov
sub
insb
popl
int
push
roll
add
mov
adc
enter
repnz
loopne
push
out
xor
add
add
movsb
push
int3
scas
jmp
dec
jnp
inc
add
xor
bound
xchg
pop
stc
lods
mov
pushf
push
in
rolb
add
pop
or
add
jns
scas
jmp
sbb
fnstcw
aas
adc
pushf
movsb
jae
xchg
xor
push
cmpsl
mov
inc
addb
fsubs
dec
testl
mov
add
and
xchg
jno
mov
icebp
cmp
mov
hlt
shl
je
scas
popf
xchg
push
add
cmp
mov
addb
and
pop
rolb
stc
iret
push
repnz
jb
mov
xlat
movsb
lods
leave
add
push
or
inc
add
test
inc
adc
push
std
xchg
out
sub
and
mov
out
xor
add
mov
bound
push
mov
add
jnp
nop
xchg
loope
jp
mov
sbb
pop
xlat
cmp
shl
loopne
add
add
stos
mov
rcrb
push
mov
shrl
pop
mov
dec
enter
push
jmp
and
mov
leave
push
jl
scas
and
scas
add
stos
rclb
xchg
jbe
add
add
outsl
scas
add
jbe
push
sub
std
dec
mov
repz
fdivl
test
mov
dec
lods
inc
in
xchg
mov
xor
fistpl
pop
mov
xchg
mov
mov
dec
and
addb
pop
and
cmpsb
cmovs
les
leave
inc
add
xchg
pop
jbe
add
js
jb
mov
movb
cmp
jle
pop
ret
fistpll
push
mov
stos
ret
and
xchg
in
dec
xchg
sbb
dec
xor
in
adc
dec
insb
add
out
arpl
lahf
push
jl
lods
pop
jne
pop
popf
addb
mov
push
mov
push
dec
insb
arpl
inc
add
stc
es
xchg
jnp
mov
sbb
popf
icebp
inc
add
and
push
mov
xchg
dec
sti
mov
addb
pop
push
cmp
daa
fstpt
mov
adc
lahf
xor
cs
lods
inc
add
xor
lods
cmc
dec
adc
fsts
pushf
cwtl
out
xor
jb
pop
xchg
or
test
push
cmp
cmp
stos
enter
pop
loop
sarl
add
adc
dec
cmp
add
je
aam
fbld
mov
shrl
in
inc
add
jl
shll
mov
aaa
test
adc
inc
add
bound
bound
push
in
lret
add
or
dec
pushf
repnz
in
icebp
and
into
cmp
cmpl
pop
and
fldt
cltd
lock
jo
mov
push
push
sbb
inc
js
iret
test
daa
pop
xor
lds
pop
jp
or
rcrb
sbb
adc
cli
inc
add
popf
sub
repz
push
addb
or
mov
ss
shlb
mov
cwtl
cmc
daa
or
add
add
xchg
push
add
mov
inc
push
lret
cltd
jmp
sub
sbb
add
dec
xor
test
icebp
push
pop
jne
lods
int
mov
mov
cmc
add
cmp
add
icebp
pop
rcrl
push
lret
les
xor
stos
push
push
sti
movsb
aam
mov
xlat
test
loop
mov
sub
and
imul
mov
jns
add
movb
fldl
add
inc
add
push
shrb
xchg
push
das
sbb
or
add
mov
subl
mov
lcall
mov
or
sub
pop
sbb
pop
inc
call
mov
jo
andl
xchg
xchg
jmp
mov
push
dec
pop
mov
or
mov
sbb
push
add
adc
div
adc
pop
repz
je
repz
sub
test
data16
cmp
cmp
and
mov
mov
out
push
ljmp
cmp
aam
movsb
mov
icebp
fcmove
mov
out
xor
enter
hlt
mov
outsb
add
das
cmp
mov
mov
fcompl
gs
cmovae
in
adc
aam
movsb
mov
dec
xchg
add
mov
push
pop
mov
add
mov
lds
inc
cmp
gs
ljmp
pop
dec
arpl
xlat
ficoms
adc
clc
fdivrl
add
xchg
push
sahf
push
js
jno
and
js
shrb
mov
cwtl
lcall
dec
aas
fcomp
ss
sub
jecxz
add
test
or
test
push
insb
sub
add
dec
loop
fsubrl
movsb
bound
popa
clc
jno
cmp
mov
cld
leave
test
mov
std
inc
filds
roll
add
addb
cs
fsubrl
imul
daa
lea
daa
dec
rolb
xchg
test
sub
cmpsl
pop
push
inc
pop
mov
xor
inc
add
pop
dec
mov
dec
push
arpl
inc
add
mov
shll
inc
add
mov
xchg
fstl
movsl
lods
dec
jbe
gs
inc
add
add
adc
lods
mov
add
pushf
jo
fistl
bound
scas
jecxz
cmp
add
stos
adc
fdivl
add
mov
inc
pop
lret
clc
ja
movsl
jmp
lret
mov
sarl
push
cmp
cmp
sub
adcl
bound
stc
push
sub
lret
arpl
xor
pop
push
add
cs
jge
insl
int3
push
pop
aaa
adc
aam
add
and
add
sub
push
imul
cmp
out
outsl
and
add
sub
jns
clc
sub
mov
cwtl
movb
fstl
fidivl
jbe
es
in
inc
add
jo
ror
xor
xor
xor
or
push
dec
push
fs
cld
rcll
sti
mov
mov
imul
cmp
outsb
movb
vpshufd
cld
pushl
push
jb
adc
jnp
or
mov
pop
aaa
mov
cmc
jle
jp
call
ja
xchg
dec
inc
add
popf
push
pop
fucomp
sub
jg
cmp
xchg
pop
xor
imul
out
sbb
cmp
iret
inc
add
jno
pop
adc
in
cmp
repz
das
mov
add
push
in
add
mov
jg
jbe
sbb
mov
pop
rolb
adc
out
enter
repz
inc
fdivr
bound
pop
lds
push
jecxz
xchg
push
push
adc
push
xor
stc
xchg
inc
jecxz
add
out
fdivl
dec
jnp
inc
add
inc
add
xchg
lods
mov
pop
jo
jmp
add
cli
punpckldq
xchg
hlt
dec
lahf
mov
pusha
add
test
dec
or
add
mov
lods
jp
sub
std
sub
add
sbb
pop
rorl
dec
in
into
jmp
les
jae
or
mov
inc
jb
push
sbb
ds
jae
mov
call
dec
int
push
push
add
adc
push
adc
xchg
fwait
dec
sbb
pusha
add
rolb
push
mov
jno
add
xchg
xor
xor
add
out
stc
xlat
mov
lods
mov
mov
movsb
or
mov
xor
pop
xchg
inc
add
and
js
mov
lds
xor
add
mov
sub
scas
jge
and
int
mov
add
add
or
pop
sub
cltd
mov
add
pusha
add
xchg
inc
add
ss
add
inc
loop
pop
pop
lock
push
push
push
lcall
jp
cmp
sarl
ds
fcoms
in
mov
add
push
fwait
rolb
adc
fidivl
xchg
cli
mov
std
push
adcl
in
sub
lcall
inc
mov
movsb
hlt
in
ret
mov
add
dec
mov
outsb
pushf
mov
mov
pop
mov
icebp
aad
dec
xor
inc
mov
subl
out
mov
movb
frstor
add
and
sub
and
lock
add
cmp
out
test
dec
sub
pop
arpl
add
add
rcll
pop
add
add
mov
cmp
mov
sub
andl
mov
jmp
add
in
xchg
push
add
das
xor
gs
stos
int
push
push
test
xor
int
rcl
loop
addb
enter
int3
pop
lret
mov
fucom
mulb
pop
lret
sbb
push
test
sub
jo
stos
sub
stc
dec
mov
inc
add
pop
lods
lods
pop
pop
dec
or
aad
in
pop
fistpll
lds
popa
dec
mov
push
pop
mov
mov
mov
or
xor
pop
dec
jns
icebp
mov
fildl
fcmove
out
jp
test
fwait
lock
add
cmp
mov
popf
lock
fimull
mov
test
jnp
int3
je
push
and
add
sbb
fcomps
iret
cli
pop
pop
popf
add
jnp
add
pop
xor
daa
lcall
iret
imul
das
les
inc
push
mov
fwait
push
std
dec
cmp
dec
imulb
push
push
sub
mov
add
mov
and
dec
popf
push
add
outsl
fwait
adc
jnp
cs
outsb
xchg
fsubrl
fisttpl
and
je
insb
or
and
repz
push
movsl
testb
inc
into
in
xor
ret
loope
add
out
ds
pop
mov
mov
insl
mov
push
inc
hlt
js
add
stc
notb
decb
mov
mov
inc
add
dec
pop
movl
push
repnz
ljmp
mov
or
pop
xor
cmp
xchg
and
nop
push
rcrl
enter
shr
jnp
push
movsb
sub
mulb
mov
sub
out
aad
popa
std
cli
nop
dec
sub
jae
push
mov
add
dec
mov
mov
loope
and
mov
xchg
pop
aaa
adc
imulb
dec
pop
xor
cmp
data16
cmp
ja
mov
sub
mov
out
lock
lods
call
fidivrl
mov
xchg
mov
dec
pop
aaa
or
jb
cmp
push
arpl
insb
xor
jnp
pop
dec
cmp
cmp
sbb
mov
mov
nop
xchg
jno
mov
movsb
scas
pushf
xchg
ljmp
mov
push
popf
push
add
add
ljmp
add
mov
jecxz
add
mov
call
jae
aas
adc
push
cld
inc
lods
mov
into
lahf
jge
jl
ja
mov
mov
pop
pusha
add
subl
jo
mov
pop
test
arpl
mov
in
pop
pop
and
int3
inc
ljmp
jp
imul
leave
mov
roll
aas
push
add
add
push
and
adc
mov
inc
add
jno
xor
xor
and
cmpsb
xor
inc
add
and
mov
lods
xor
lock
push
mov
aaa
pop
cmp
addb
add
jbe
movsb
dec
loop
add
idiv
movb
fcmovnbe
rcrb
pop
sarl
popa
mov
out
sub
add
mov
xor
dec
jecxz
xchg
sbb
sub
inc
add
jg
rorb
xchg
mov
jno
add
dec
add
dec
and
inc
add
shll
sahf
data16
and
test
bound
cltd
pop
lods
pop
stc
ret
outsl
cwtl
ret
imul
jno
or
jae
lods
lret
ret
mov
mov
sbb
out
scas
mov
loopne
jo
int
aas
fidivrl
aaa
lods
inc
add
pop
xchg
into
cmpsl
add
lods
adc
mov
sub
inc
sbb
cs
mov
ss
cmp
lock
jo
ss
mov
mov
jb
inc
add
xchg
push
push
sub
aas
push
mov
insl
test
popf
scas
repz
or
jmp
fcompl
outsb
pop
rorl
mov
xchg
shrl
cmp
mov
call
sub
jb
add
cmp
lods
lcall
mov
sti
xchg
test
and
jl
cld
add
pop
int
popa
imul
cmp
lds
loop
cmp
mov
out
xchg
push
cs
sbb
dec
mov
or
push
pop
mov
or
add
or
xchg
adc
or
pop
push
add
mov
movb
cld
mull
stos
cmp
push
les
mov
or
les
jle
or
adc
xor
cmp
test
js
lahf
or
add
ficompl
outsb
cmp
push
mov
mov
lds
cmp
adc
cmc
das
push
xchg
push
sub
add
push
pop
pusha
add
sbb
xchg
adc
jge
pop
sub
lea
sbb
push
add
ss
adc
jmp
jmp
movb
mov
scas
es
add
cmp
add
clc
jp
addb
adc
jnp
adc
outsb
les
in
push
sbb
and
add
vmread
fnstsw
shr
inc
add
push
ret
add
je
mov
lret
in
xchg
push
movsl
inc
outsb
inc
ja
lret
cmpsb
mov
push
leave
pushf
jge
cmpsb
mov
xor
or
cmc
test
mov
cltd
decl
aaa
cmp
es
scas
pop
jns
xchg
cmp
test
add
add
insb
in
ficoml
leave
push
mov
mov
fldt
add
popa
ret
or
or
pop
hlt
sbb
shlb
daa
sub
and
inc
add
mov
jno
enter
xchg
push
add
insl
cmpsb
xchg
leave
add
adc
jbe
and
push
push
lcall
cmp
sti
inc
add
pop
xchg
leave
fnsave
adc
repz
and
cmc
imul
sub
test
jo
mov
add
push
test
mov
fidivrl
hlt
addl
lods
mov
leave
cmp
sbb
add
loope
stos
xchg
movb
loope
mov
pop
xchg
scas
and
jmp
mov
mov
jo
outsl
xor
jmp
mov
pop
cli
or
jl
push
dec
jbe
mov
add
imul
dec
clc
mov
sbb
fistl
rclb
movsb
xor
outsb
pop
sub
test
icebp
add
xor
loope
push
movb
movb
adc
mov
xor
addb
cmp
sbb
outsb
ret
les
addl
mov
iret
repz
jmp
add
fcmovne
dec
inc
add
in
xor
mov
arpl
repnz
jp
mov
ficoms
sub
lock
add
inc
add
js
aas
mov
mov
arpl
lds
pop
mov
movsb
xorl
add
shll
add
jo
cmp
cli
jecxz
lds
add
pop
std
mov
lcall
lret
sub
lods
pushf
or
lods
jnp
add
imul
lea
sbb
popf
or
adc
mov
add
mov
sub
test
adc
hlt
mov
cmp
and
mov
in
scas
cs
sti
lods
fimull
das
mov
notl
mov
mov
sbb
dec
test
push
lcall
cmpsl
mov
mov
js
xchg
cmp
movsb
mov
mov
lahf
sti
scas
push
jmp
jae
stc
and
mov
push
push
sbb
jne
sbbl
jae
add
xor
adc
scas
mov
or
fdivl
mov
enter
mov
enter
add
mov
xor
xor
movsl
xchg
out
pop
pop
shll
faddp
enter
popf
push
sbb
mov
test
push
int3
jg
mov
xor
adc
cmp
push
jo
daa
enter
mov
outsl
inc
xchg
lcall
jb
dec
dec
jle
dec
cmp
and
mov
dec
popa
testb
sbb
sub
sbb
and
sbb
xchg
pop
or
mov
xor
jp
das
jne
cmp
sbb
inc
add
add
dec
add
adc
adc
ror
push
add
pusha
add
sti
push
push
xor
lret
mov
add
or
mov
dec
inc
add
add
decb
lods
or
xor
in
mov
dec
xor
insl
xor
mov
sahf
dec
fmuls
pop
insb
les
repnz
pop
fsubrp
sbb
mov
out
pop
std
sbb
addb
fcomi
popl
into
pusha
add
push
jl
sbb
les
mov
rcl
mov
lds
icebp
dec
inc
cs
es
ficoms
dec
lea
add
rolb
jp
in
and
sub
add
sbb
lods
and
inc
add
pop
in
bound
stos
idivl
jle
jp
push
mov
popf
sub
loopne
scas
inc
add
gs
and
imul
mov
out
dec
loope
fcomps
add
mov
sbb
loope
fnstsw
dec
bound
in
push
aas
movsb
push
jle
add
adc
push
add
lret
dec
mov
add
jl
add
lret
sahf
out
dec
or
inc
add
push
stos
mov
or
and
js
mul
push
dec
xchg
pop
mov
jge
xchg
push
cmp
mov
roll
iret
mull
pushl
pop
addb
decb
js
cmp
icebp
push
add
ljmp
stos
mov
add
insb
inc
add
lahf
sbb
cmc
mov
lods
mov
xor
mov
sbb
jne
dec
addr16
pop
cwtl
bound
jl
xor
test
push
out
insl
insb
xor
add
or
insl
std
xor
cmp
es
push
cmp
mov
mov
mov
jecxz
add
addr16
out
into
xor
push
testb
add
out
clc
push
sub
inc
add
xchg
jnp
push
loop
add
movl
add
test
mov
xchg
pop
fcomi
test
cwtl
pop
add
cs
imul
mov
sbb
xor
js
dec
aad
aas
outsb
call
sahf
test
popa
dec
rcrb
into
pop
pusha
add
cmp
out
loopne
mov
mov
cmp
sub
sub
add
add
mov
pop
mov
mov
push
mov
mov
movb
and
adc
loopne
out
or
xorl
fcomip
xor
fldl
std
lods
jecxz
loop
jb
movsb
adc
adc
pop
arpl
jnp
xchg
xchg
xlat
or
and
sbbl
and
xchg
push
sbb
in
jmp
push
xor
iret
mov
push
rcl
ljmp
notb
and
add
push
push
add
mov
add
add
aas
and
mov
and
daa
ret
lret
add
pushw
sub
icebp
sub
aam
aam
movb
inc
add
mov
out
aas
outsb
outsl
mov
jmp
dec
test
sub
fsubrs
cmp
xor
sub
dec
push
test
pusha
add
cmp
push
fucomi
testb
lcall
xchg
dec
ja
push
mov
push
arpl
add
lretw
lods
xchg
repnz
dec
adc
fmull
subl
test
sahf
js
lahf
addr16
pop
xchg
pop
cmp
fistl
loop
inc
add
or
push
jle
lret
shlb
ds
lcall
in
and
or
test
inc
push
add
cmp
sarl
into
sbb
cmc
mov
mov
mov
mov
or
inc
mov
loope
les
sbb
fs
sbb
leave
adc
add
sub
std
mov
push
add
and
and
pusha
add
cmpsb
out
sub
cmp
jns,pt
xchg
pop
push
cmp
add
xlat
iret
jne
xchg
pop
add
loop
inc
add
and
sub
xchg
add
push
sbb
fwait
jns
movsl
call
add
das
rolb
icebp
sub
daa
dec
pop
imul
insl
les
pop
jb
pusha
add
mov
jecxz
out
out
xchg
cmpsb
dec
and
in
push
mov
mov
push
cld
sub
stos
or
cmp
popf
push
adc
lret
test
dec
adc
or
fs
mov
add
bound
adc
rolb
jnp
mov
outsb
jns
fimull
clc
mov
push
mov
fdivl
xchg
shr
je
ljmp
lods
add
std
out
or
jecxz
dec
push
add
add
adc
add
adc
pusha
add
mov
mov
add
xchg
cld
or
inc
add
inc
aad
stos
push
stc
repnz
lods
cmp
ja
sahf
scas
jno
inc
add
cmp
movsl
lds
hlt
jmp
mov
xchg
or
xchg
pop
clc
stos
xor
stc
out
out
and
pop
scas
mov
jb
push
cwtl
adc
dec
lods
jge
loop
jecxz
add
jnp
add
mov
popf
imul
mov
imulb
xor
lock
adc
out
sub
arpl
add
cmp
je
push
adc
lods
jo
inc
hlt
or
movsl
mov
or
lahf
push
dec
add
mov
fldl
add
lahf
ror
leave
sub
out
add
test
jbe
lods
jno
sbb
xchg
push
pop
call
adc
sub
add
sub
add
lret
xchg
inc
push
push
lods
je
push
xlat
inc
scas
sub
test
cmpsl
test
cwtl
sbb
in
dec
or
inc
add
or
or
das
test
rcll
shrl
push
xchg
and
es
popa
test
pop
fcoml
loop
lds
cmpsl
outsb
test
sub
pusha
add
dec
dec
sbb
hlt
fldcw
stos
mov
xorl
mov
add
cmp
fistps
add
cs
icebp
test
mov
jo
dec
pop
gs
and
sbb
ficoms
and
loope
ret
cmp
push
xchg
lcall
add
in
pop
lahf
leave
sbb
aaa
sbb
clc
and
inc
clc
das
scas
push
fsubrl
out
adc
mov
lcall
sbb
inc
add
sbb
sub
or
sub
fsubl
add
inc
add
jge
mov
sbb
push
push
js
push
cmp
std
rolb
je,pt
int
xor
leave
loopne
pop
sbb
les
movb
push
out
jo
addr16
aas
mov
dec
xor
lcall
test
pop
frstor
add
arpl
adc
imul
gs
sub
pop
add
jg
xchg
addr16
dec
add
dec
stos
addr16
bound
rcrl
sbb
insb
movsb
clc
outsb
jae
scas
test
out
rorl
jbe
dec
ret
pusha
add
push
lods
xor
sub
stc
loope
aas
dec
aam
jns
mov
aas
nopl
dec
stos
test
mov
add
and
rcr
insl
mov
push
rolb
outsb
das
addb
stc
cmp
loope
add
lahf
and
pushf
cld
dec
aam
mov
mov
adc
out
pop
movb
and
clc
jecxz
xor
pusha
add
inc
pop
cld
adc
popf
xchg
mov
inc
add
int
xor
insl
into
es
rolb
sbb
lds
pop
scas
jb
jg
pop
fsubr
jmp
adc
and
jo
sbb
cmp
xor
dec
jns
test
add
cmp
mov
movzbl
or
jge
gs
sbb
into
les
cmp
add
das
outsl
adc
std
aad
sub
add
xchg
mov
sbb
addb
les
xchg
fwait
mov
add
imul
cmpsl
movsl
sti
hlt
movb
push
stc
sbb
lahf
imul
loope
popf
fwait
xchg
mov
xchg
add
xor
xchg
mov
insl
dec
sub
jne
fwait
in
sarb
xchg
cmp
add
fldl2e
mov
add
mov
testb
xchg
mov
mov
or
mov
cs
mov
add
nop
inc
add
lret
addb
sub
in
pop
inc
add
rolb
repz
fisubrl
sbb
sbb
sbb
lret
sub
cli
aaa
addb
out
int
xchg
cld
jb
mov
in
dec
fistpll
cmpsl
xchg
in
sbb
bound
test
in
lret
scas
outsb
lods
loope
dec
adc
gs
daa
xor
jg
out
imul
mov
cmp
mov
sbb
ss
movsb
mov
add
mov
aam
inc
add
repnz
rorl
jmp
and
inc
addb
pop
xlat
cli
xor
cmp
mov
sub
inc
add
call
out
xchg
xchg
stc
push
jb
fcmovb
add
mov
dec
xchg
jecxz
rcl
addb
mov
stc
nop
jb
add
add
add
stc
nop
jb
lahf
mov
add
stc
stc
nop
jb
add
jmp
push
loopne
mov
xchg
ret
add
aam
add
push
mov
xchg
ret
cmpl
add
nop
jb
add
add
mov
test
nop
cld
jmp
add
add
fstl
mov
xchg
ret
add
add
dec
mov
mov
xchg
ret
add
add
rcpps
cmp
inc
add
sbb
nop
adcl
add
mov
inc
add
sarl
push
nop
cld
jmp
add
hlt
cmp
add
add
push
push
mov
xchg
ret
add
add
cmp
nop
cld
jmp
loop
add
cld
jmp
xor
add
aad
sub
stc
nop
jb
leave
repz
jb
mov
sbb
add
add
nop
cld
jmp
add
add
nop
jb
add
flds
cmp
cld
jmp
add
add
add
faddl
pop
and
push
mov
xchg
ret
add
add
cld
jmp
add
xchg
fnstenv
and
push
mov
xchg
ret
cmp
add
add
stc
nop
jb
add
dec
pusha
stc
nop
jb
add
ret
aas
fsts
cld
jmp
mov
add
lds
sbb
add
add
loop
leave
repnz
js
repz
nop
jb
nop
add
lods
daa
js
push
stc
nop
jb
add
ret
stc
nop
jb
add
pop
fs
jno
add
mov
xchg
ret
dec
xchg
pop
pop
dec
push
push
mov
xchg
ret
add
add
js
add
stc
nop
jb
faddl
flds
add
cmpb
add
sub
add
xchg
dec
dec
push
mov
xchg
ret
repnz
aad
add
mov
xchg
ret
pop
mov
add
nop
jb
push
pop
subl
repz
push
mov
pushf
pop
add
ljmp
add
mov
stc
nop
jb
js
add
add
push
mov
nop
cld
jmp
add
add
dec
lods
stc
nop
jb
in
add
push
xor
add
nop
cld
jmp
hlt
add
xchg
pop
lea
nop
cld
jmp
add
test
dec
xor
stc
nop
jb
add
lahf
push
push
mov
xchg
ret
add
add
icebp
stc
nop
jb
add
add
add
pop
mov
stc
nop
jb
orl
jb
pop
outsl
leave
xor
fs
loopne
push
nop
cld
jmp
loop
add
lods
add
fldcw
jne
stc
nop
jb
add
hlt
inc
test
icebp
iret
push
push
mov
xchg
ret
xchg
add
movsb
jb
ljmp
add
add
pop
adcl
jb
add
add
add
add
inc
adc
push
mov
xchg
ret
add
sbb
nop
jb
leave
add
sbb
in
xor
add
add
add
add
int
push
lods
stos
stc
nop
jb
sbb
add
dec
and
add
cmp
ret
add
add
push
ds
push
mov
xchg
ret
add
loope
nop
lahf
mov
stc
nop
jb
fsts
add
stc
nop
jb
push
lock
ss
mov
push
push
mov
xchg
ret
sbb
aas
mov
cld
jmp
pop
add
add
add
mov
pop
cmpl
nop
cld
jmp
push
add
nop
adc
xchg
xor
push
mov
xchg
ret
daa
add
or
adc
nop
jb
add
pop
shll
jmp
sub
add
xor
inc
push
mov
xchg
ret
add
pop
add
jl
stc
nop
jb
add
push
add
nop
jb
add
add
jb
lock
fsts
pop
push
mov
xchg
ret
add
add
sbb
test
add
stc
nop
jb
cmp
add
sahf
je
stc
nop
jb
loop
push
mov
pop
mov
stc
nop
jb
lahf
add
sti
je
stc
nop
jb
add
xchg
testb
cmp
ret
pop
hlt
lods
add
xlat
jle
stc
nop
jb
addl
add
out
add
add
lods
add
mov
stc
nop
jb
add
stos
push
add
mov
stc
nop
jb
add
jns
jmp
add
stc
nop
jb
add
fcoml
mov
stc
nop
jb
add
sub
stc
nop
jb
leave
add
es
adc
sahf
movzwl
stc
nop
jb
xor
add
or
stc
nop
jb
add
sub
add
adc
decb
nop
jb
add
add
pop
xor
stc
nop
jb
pop
add
cmpsl
rorb
aad
add
hlt
add
nop
jb
lods
cmp
js
mov
push
mov
xchg
ret
add
add
lock
push
stc
nop
jb
add
or
pop
imul
stc
nop
jb
xchg
xchg
add
ja
sub
stc
nop
jb
nop
xor
outsb
xor
stc
nop
jb
sub
push
mov
xchg
ret
stos
inc
in
ja
xor
push
add
xor
stc
nop
jb
sub
dec
inc
fimuls
test
pop
add
stc
nop
jb
lahf
in
pusha
add
pop
insb
add
push
mov
xchg
ret
add
mov
nop
jb
in
pop
leave
add
xchg
push
sub
nop
cld
jmp
push
fs
cmp
rcll
in
add
add
pop
sub
rclb
add
inc
add
add
jecxz
mov
push
mov
xchg
ret
loop
add
stc
nop
jb
add
xchg
add
mov
cld
jmp
add
jp
fidivrl
push
add
stc
nop
jb
fld
rolb
ud0
push
mov
xchg
ret
sub
push
mov
insl
add
xor
nop
lahf
mov
add
mov
in
add
xchg
add
adc
nop
jb
add
repz
or
cld
jmp
nop
mov
loop
divb
and
dec
flds
xchg
ret
lahf
add
dec
add
mov
xchg
ret
add
add
add
stc
nop
jb
add
stos
lods
add
inc
in
nop
cld
jmp
leave
lock
add
push
mov
cs
cld
jmp
ret
daa
inc
mov
xorb
lahf
aad
add
push
pop
pusha
stc
nop
jb
jp
adc
pop
loop
mov
nop
cld
jmp
leave
outsl
xchg
mov
push
pusha
stc
nop
jb
add
add
add
inc
sub
nop
jb
loope
pop
push
add
les
push
mov
xchg
ret
imul
mov
stc
nop
jb
imul
or
add
leave
jno
ret
xchg
inc
outsl
add
add
add
mov
cld
add
stc
nop
jb
add
push
push
shll
lods
pop
nop
cld
jmp
ss
add
faddl
add
add
add
stc
nop
jb
add
add
xor
stc
nop
jb
add
add
add
add
and
stc
nop
jb
hlt
ja
loop
stos
pop
stc
nop
jb
sbb
xchg
add
fsts
add
jb
push
stos
es
push
add
jmp
cmp
add
lods
add
push
push
mov
xchg
ret
dec
add
add
add
jne
stc
nop
jb
flds
faddl
xor
stc
nop
jb
add
add
add
xchg
mov
push
stc
nop
jb
add
js
stos
add
ds
stc
nop
jb
sub
add
rcr
xchg
stc
nop
jb
pop
add
add
sbb
movsl
scas
mov
stc
nop
jb
add
pop
nop
cld
jmp
js
add
add
add
inc
faddl
sub
inc
add
push
mov
adc
nop
jb
sub
sahf
mov
stc
nop
jb
add
add
nop
cld
jmp
xchg
add
add
lahf
xor
inc
loopne
nop
jb
jno
mov
add
inc
sub
nop
jb
add
push
push
mov
xchg
ret
lods
lock
add
jbe
and
ret
inc
dec
ret
push
mov
xchg
ret
add
mov
repz
nop
jb
leave
mov
cmc
pop
mov
nop
cld
jmp
inc
add
xor
mov
adc
add
ss
adc
add
dec
lods
push
mov
xchg
ret
add
mov
stc
nop
jb
add
out
add
lea
nop
cld
jmp
push
jno
add
add
xor
fwait
push
mov
xchg
add
add
add
icebp
add
sbb
in
add
mov
push
mov
xchg
ret
add
add
mov
nop
jb
xchg
push
adc
jmp
inc
add
adc
pop
add
jne
stc
nop
jb
pop
add
sbb
jb
nop
add
xor
test
nop
jb
add
add
ret
stc
nop
jb
js
pop
fsubrl
mov
stc
nop
jb
add
fisttpll
xorb
incl
ss
xor
repnz
nop
jb
mov
add
push
pusha
add
imul
add
nop
jb
add
ja
xor
stc
nop
jb
add
mov
jb
xchg
add
add
push
push
mov
xchg
ret
add
fcompl
ret
push
mov
xchg
ret
pop
push
flds
cmpsl
in
out
popl
stc
nop
jb
repz
mov
xchg
ret
lock
dec
pop
jmp
cld
jmp
cmp
fstps
nop
jb
sub
lds
movsb
test
inc
and
push
mov
xchg
ret
add
mov
mov
xchg
ret
add
push
stc
nop
jb
loope
xchg
push
add
loop
add
stc
nop
jb
add
inc
pop
add
push
push
mov
xchg
ret
mov
cmp
mov
xchg
ret
add
adc
mov
nop
cld
jmp
js
add
add
test
sbb
add
nop
jb
add
fisttpll
cld
jmp
add
lahf
add
or
stc
nop
jb
in
add
call
sar
inc
add
add
daa
imul
add
add
cmp
mov
push
mov
xchg
ret
add
lock
jne
stc
nop
jb
add
adc
sub
push
mov
xchg
ret
pop
add
add
add
push
push
mov
xchg
ret
add
add
loop
xor
movzwl
stc
nop
jb
add
add
cmpsb
das
cmpl
nop
cld
jmp
pop
mov
faddl
ret
stc
nop
jb
aas
xchg
cmp
inc
add
mov
adc
nop
jb
add
add
rclb
add
aad
xor
nop
add
rep
stc
nop
jb
cmp
add
mov
stc
nop
jb
add
pop
push
mov
xchg
ret
flds
hlt
sub
add
adc
pop
ss
push
stc
nop
jb
or
loop
add
add
scas
add
add
pop
add
decl
push
mov
xchg
ret
inc
xchg
push
xor
mov
mov
jb
nop
cld
jmp
add
add
jb
faddl
flds
sub
add
nop
jb
inc
add
cmp
jg
stc
nop
jb
add
inc
add
inc
add
nop
jb
sbb
pop
push
mov
xchg
ret
add
add
inc
stc
nop
jb
add
imul
xorb
rep
leave
add
nop
jb
pop
adc
daa
add
enter
andb
incl
push
repnz
xchg
mov
por
xchg
ret
lahf
xchg
add
push
add
jl
jne
stc
nop
jb
adc
add
mov
push
mov
xchg
ret
pop
add
outsb
inc
push
mov
xchg
ret
add
add
add
mov
stc
nop
jb
daa
pop
ds
nop
cld
jmp
add
add
fnstcw
jle
stc
nop
jb
add
xor
add
add
stc
nop
jb
mov
sub
jmp
add
stos
in
call
nop
cld
jmp
add
add
mov
stc
nop
jb
add
push
mov
cld
jmp
nop
js
xchg
add
or
nop
jb
fiaddl
add
hlt
je
add
mov
jbe
add
nop
cld
jmp
add
xchg
mov
sbb
inc
add
add
add
stc
nop
jb
pop
add
mov
add
add
nop
jb
add
jne
nop
cld
jmp
flds
push
and
add
add
add
daa
add
test
inc
add
pop
add
fldenv
jmp
stc
nop
jb
ja
or
dec
or
mov
xchg
ret
addl
loope
je
nop
cld
jmp
add
push
sub
popa
stc
nop
jb
pop
outsl
add
repz
mov
mov
xchg
ret
daa
mov
push
stc
nop
jb
xchg
mov
sbb
jb
add
add
add
mov
push
mov
xchg
ret
add
sub
inc
add
add
sbb
add
stc
nop
jb
add
add
xor
fsubr
call
add
stc
nop
jb
lods
add
repz
inc
jp
nop
cld
jmp
flds
flds
push
rep
nop
cld
jmp
mov
add
loopne
nop
cld
jmp
add
jle
push
mov
xchg
ret
aad
add
pop
int3
pusha
stc
nop
jb
faddl
add
cmp
jo
nop
cld
jmp
add
add
add
aas
inc
stc
nop
jb
add
xchg
add
flds
ljmp
inc
add
add
xchg
rolb
jge
stc
nop
jb
cmp
add
daa
add
and
jmp
xchg
add
mov
push
stc
nop
jb
adc
add
jne
nop
cld
jmp
fnstcw
inc
shrl
dec
testb
cmp
ret
aad
add
movsb
inc
add
je
stc
nop
jb
cmp
popf
and
stc
nop
jb
add
add
sub
mov
xchg
ret
ss
popf
jmp
stc
nop
jb
aas
add
add
or
inc
add
adc
mov
nop
jb
add
loop
loope
movb
add
nop
cld
jmp
sbb
jge
nop
jb
fstps
pop
add
enterw
stc
nop
jb
cmp
lahf
adc
xor
mov
fcoms
add
add
adc
incl
xchg
add
outsl
add
add
stc
nop
jb
sub
mov
xor
add
stc
nop
jb
add
sub
js
nop
cld
jmp
leave
outsl
adc
push
adc
call
stc
nop
jb
add
adc
sbb
jb
add
add
pop
int3
push
push
mov
xchg
ret
fsubrl
mov
nop
cld
jmp
add
mov
mov
add
mov
add
nop
jb
add
xlat
xor
mov
cmpsl
in
mov
stc
nop
jb
js
cmp
push
sub
xchg
cmc
inc
add
mov
mov
push
mov
xchg
ret
add
clc
dec
inc
stc
nop
jb
add
or
jmp
add
add
loop
sub
cmp
jmp
lcall
add
add
push
mov
stos
jecxz
xchg
dec
out
push
fdivr
add
inc
std
add
stc
nop
jb
fisubl
stos
jne
add
add
stc
nop
jb
add
js
push
push
mov
xchg
ret
lods
add
add
sub
cld
jmp
xchg
or
mov
cmc
aad
mov
push
mov
xchg
ret
imul
popa
push
mov
xchg
ret
sub
add
mov
mov
nop
cld
jmp
add
adc
add
cwtl
je
stc
nop
jb
addl
push
mov
xchg
ret
outsl
add
add
stc
nop
jb
mov
push
pop
adc
gs
nop
jb
add
adc
add
fwait
add
stc
nop
jb
leave
add
add
mov
add
nop
jb
add
add
add
push
dec
mov
nop
cld
jmp
add
push
faddl
sub
push
mov
xchg
ret
lahf
sub
imul
push
mov
xchg
ret
add
ror
push
mov
xchg
ret
add
jp
rclb
lock
add
add
add
adc
add
add
push
push
mov
xchg
ret
mov
pop
movzwl
stc
nop
jb
add
add
xchg
fimull
out
inc
add
adc
xor
pop
push
mov
xchg
ret
aas
add
fnstcw
aam
push
stc
nop
jb
fiaddl
flds
add
popa
add
mov
xchg
ret
sbb
jp
push
stc
nop
jb
add
fld
add
mov
mov
nop
cld
jmp
jp
add
fnstcw
in
add
arpl
add
add
adc
leave
sub
nop
jb
stos
add
adc
addb
mov
pop
cli
call
add
sub
xchg
into
mov
stc
nop
jb
adc
push
mov
dec
cmp
nop
jb
add
push
add
aaa
int3
push
stc
nop
jb
add
add
add
push
push
mov
xchg
ret
sub
test
add
stc
nop
jb
cmp
and
adc
and
call
add
add
fidivrl
add
add
fcomi
jmp
stc
cmp
add
fiaddl
push
fisttps
jb
jno
sbb
mov
mov
jb
add
add
pop
pop
push
mov
xchg
ret
add
adc
aad
xor
push
mov
xchg
ret
jp
inc
fdiv
xor
jb
nop
cld
jmp
sub
and
xchg
hlt
enter
stc
nop
jb
mov
sbb
nop
jb
add
add
ss
lods
add
stc
nop
jb
add
sub
subl
jmp
add
push
test
add
insl
and
stc
nop
jb
add
pop
push
mov
xchg
ret
add
add
add
push
lret
nop
jb
add
add
add
inc
add
xchg
inc
lea
jb
add
add
push
stc
nop
jb
cmp
ret
adc
stc
nop
jb
dec
add
cmp
stc
nop
jb
add
inc
add
daa
fldenv
cld
jmp
add
add
add
leave
add
xlat
inc
add
pop
push
mov
xchg
ret
mov
test
dec
add
nop
jb
push
push
add
add
cld
jmp
lahf
add
add
inc
clc
stc
nop
jb
add
add
lea
push
mov
xchg
ret
aas
ja
add
rep
stc
nop
jb
add
lods
mov
add
stc
nop
jb
add
pop
add
ret
nop
cld
jmp
add
fcompl
push
lock
sar
mov
stc
nop
jb
push
mov
add
add
sub
dec
stc
inc
add
add
lret
stc
nop
jb
add
add
cmpl
cld
jmp
add
pop
add
aad
nop
mov
nop
cld
jmp
add
hlt
loope
mov
jb
add
outsl
pop
add
cwtl
sub
nop
cld
jmp
add
flds
and
add
nop
cld
jmp
pop
push
pop
sbb
lods
add
nop
jb
add
leave
add
pop
in
dec
add
stc
nop
jb
sbb
pop
fs
push
inc
add
mov
stc
nop
jb
add
cmp
test
add
add
nop
jb
add
inc
add
jo
add
add
nop
jb
ja
xchg
add
push
push
mov
xchg
ret
add
pop
add
dec
cmp
nop
jb
fisubl
add
sbb
sti
push
mov
xchg
ret
fs
outsl
ds
nop
cld
jmp
sbb
fcompl
test
movb
jb
fstps
add
pop
cmc
mov
in
dec
sub
in
add
icebp
pop
sub
inc
push
mov
xchg
ret
es
push
stc
nop
jb
add
fiaddl
add
jne
stc
nop
jb
loop
add
sub
stc
nop
jb
mov
add
call
mov
xchg
ret
flds
sbb
xor
mov
stc
nop
jb
add
add
add
popl
jmp
add
add
add
in
mov
push
mov
xchg
ret
pop
sub
jb
add
or
nop
jb
add
sub
mov
cld
jmp
add
add
stc
nop
jb
add
add
aad
mov
push
mov
xchg
ret
push
fstps
push
stc
nop
jb
add
hlt
add
add
jb
add
add
xchg
add
movsb
push
mov
stc
nop
jb
fnstcw
cmc
stc
nop
jb
out
sub
nop
cld
jmp
push
add
add
add
add
cmpsb
push
dec
mov
nop
cld
jmp
xor
loop
add
push
mov
xchg
ret
add
rorl
mov
stc
nop
jb
add
mov
stc
nop
jb
add
jmp
out
add
add
cmp
mov
xchg
ret
nop
cmp
js
iret
add
stc
nop
jb
add
add
add
adc
mulb
cmp
nop
jb
daa
mov
rolb
mov
cld
jmp
stos
push
add
add
nop
jb
add
add
fiaddl
pop
jg
inc
and
nop
jb
in
add
add
das
pop
stc
nop
jb
add
add
mov
stc
nop
jb
sub
inc
xlat
mov
and
and
rep
nop
cld
jmp
add
lahf
mov
adcb
add
repz
or
stc
nop
jb
aas
cmp
jne
stc
nop
jb
pop
sbb
aas
add
add
stc
nop
jb
add
mov
nop
jb
add
addl
pop
add
nop
cld
jmp
add
es
add
inc
mov
add
stc
nop
jb
add
pusha
add
cs
stc
nop
jb
sbb
add
jbe
stc
nop
jb
xchg
add
cmpsl
repz
call
incl
push
add
in
mov
push
mov
xchg
ret
mov
ret
stc
nop
jb
add
add
mov
push
add
sbb
adcb
fsubrl
orl
lock
incl
sub
dec
inc
add
lret
adc
mov
inc
add
inc
fisubrl
jb
add
sbb
add
and
pop
mov
nop
cld
jmp
mov
and
push
stc
nop
jb
fmul
daa
xor
add
nop
cld
jmp
add
add
test
add
nop
jb
add
add
inc
adc
nop
jb
xchg
add
add
nop
cld
jmp
repnz
outsl
add
flds
cmp
cld
jmp
loop
add
fs
decb
test
jmp
stc
nop
jb
lock
jmp
loop
cmp
add
pop
nop
cld
jmp
add
add
add
fs
lea
push
mov
xchg
ret
adc
repnz
mov
cld
jmp
add
ss
sub
add
add
push
mov
xchg
ret
add
hlt
je
shl
stc
nop
jb
out
leave
adc
cmp
stc
nop
jb
add
add
add
ljmp
add
loop
cmp
test
stc
nop
jb
loope
add
loope
add
jb
or
js
pop
mov
stc
nop
jb
imul
or
or
stc
nop
jb
add
add
adc
mov
stc
nop
jb
repz
call
stc
nop
jb
out
js
or
mov
xchg
ret
sbb
hlt
testl
mov
xchg
ret
add
ss
js
push
mov
xchg
ret
add
sub
movsl
cmp
mov
xchg
ret
es
dec
icebp
stc
nop
jb
add
adc
add
stc
nop
jb
flds
push
add
lds
push
mov
add
imul
sbb
cmp
seta
nop
jb
sub
subl
mov
xchg
ret
add
inc
sbb
cmpb
ljmp
add
sub
mov
xchg
ret
add
add
call
lcall
fs
add
xchg
sbb
test
stc
nop
jb
pop
add
rclb
flds
add
xor
pop
lds
movzwl
nop
cld
jmp
xchg
add
pop
imul
stc
nop
jb
aad
add
rclb
insl
std
inc
add
cmp
lahf
push
ret
nop
jb
add
adc
pop
mov
cld
jmp
add
pop
repz
pop
xchg
add
mov
stc
nop
jb
add
stos
pop
push
mov
xchg
ret
xchg
pop
add
add
rolb
pop
mov
stc
nop
jb
add
mov
stc
nop
jb
ret
pop
add
jnp
pushl
stc
nop
jb
leave
add
add
push
dec
push
stc
nop
jb
add
add
rolb
add
push
mov
xchg
ret
ss
cmp
fisttpll
mov
push
stc
nop
jb
add
pop
popf
pop
push
mov
xchg
ret
imul
add
adc
or
nop
jb
push
lods
sbb
pop
divl
inc
jno
lea
push
mov
xchg
ret
add
xchg
fs
push
stc
nop
jb
repz
add
add
nop
jb
add
aas
lods
add
inc
add
pop
add
add
inc
push
mov
xchg
ret
lahf
aad
sbb
ret
sbb
clc
cld
lcall
add
jb
leave
add
add
add
scas
mov
stc
nop
jb
add
mov
stc
nop
jb
fcmovbe
es
test
stc
nop
jb
add
fmuls
mov
jmp
add
add
fiaddl
jb
jmp
nop
cld
jmp
sub
mov
stc
nop
jb
add
add
aad
mov
stc
nop
jb
push
mov
add
nop
cld
jmp
add
outsl
mov
repnz
cld
jmp
push
add
lock
pop
jno
sub
stc
nop
jb
add
pop
push
mov
xchg
ret
add
add
sbb
mov
xchg
ret
out
add
daa
adc
nop
jb
pop
add
inc
and
nop
jb
add
xor
stc
nop
jb
push
ss
jecxz
add
jmp
add
fidivl
daa
xor
add
nop
cld
jmp
add
add
cmp
mov
sub
nop
jb
fcompl
fstps
je
nop
cld
jmp
add
cwtl
je
stc
nop
jb
inc
add
test
nop
jb
leave
lods
add
dec
mov
push
mov
xchg
ret
add
add
and
push
mov
xchg
ret
add
nop
jb
add
fisubl
mov
stc
nop
jb
mov
jb
inc
add
cmp
movsb
addb
add
push
mov
xchg
ret
fstps
imul
jb
stc
nop
jb
add
ss
lret
in
add
sbb
sbb
in
push
push
mov
xchg
ret
cmp
movzwl
stc
nop
jb
pop
lock
dec
dec
stc
nop
jb
lods
out
add
add
stc
nop
jb
add
inc
add
sbb
dec
mov
push
mov
xchg
ret
add
lock
mov
push
mov
xchg
ret
add
neg
pop
push
mov
xchg
ret
add
add
stc
nop
jb
loope
add
add
add
add
nop
jb
cmp
fsubl
nop
jb
nop
repnz
add
jmp
push
addl
outsl
and
mov
mov
stc
nop
jb
add
stc
nop
jb
add
repz
mov
nop
cld
jmp
push
add
push
push
mov
xchg
ret
in
add
xor
nop
cld
jmp
add
cmp
je
sub
nop
jb
inc
daa
faddl
mov
add
test
add
add
nop
jb
add
mov
std
add
nop
cld
jmp
add
push
cmp
nop
jb
repnz
cmp
das
movzwl
stc
nop
jb
push
add
loop
cmp
sar
jb
add
fs
ja
mov
nop
cld
jmp
add
pop
fisubrl
add
add
stc
nop
jb
add
or
popa
add
mov
xchg
ret
add
stc
nop
jb
push
cmp
lahf
pop
je
stc
nop
jb
add
jb
mov
jb
add
aad
daa
add
push
mov
xchg
ret
add
add
sbb
xor
push
mov
xchg
ret
js
xchg
subl
repnz
add
xchg
adc
test
inc
sbb
nop
jb
add
mov
stc
nop
jb
fsubrl
add
push
mov
pop
pop
stc
nop
jb
add
add
pop
mov
stc
nop
jb
aas
add
mov
stc
nop
jb
loop
push
push
mov
xchg
ret
nop
add
nop
add
add
stc
nop
jb
add
add
outsl
sbb
cld
jmp
repnz
sub
call
stc
nop
jb
add
add
je
stc
nop
jb
jp
fimuls
jb
add
adc
aad
mov
stc
nop
jb
outsl
daa
add
add
stc
nop
jb
add
add
pop
call
add
fpatan
add
mov
cmp
ret
add
add
movsl
movb
add
inc
mov
adc
cmpl
in
incl
outsl
loopne
mov
nop
cld
jmp
add
loop
mov
nop
jb
pop
nop
mov
mov
add
add
lret
and
mov
loope
rorb
sbb
cmp
nop
jb
add
dec
subl
nop
cld
jmp
addl
imul
add
aas
pop
add
add
add
push
mov
jl
loop
add
shll
shlb
cmp
push
fdivrp
cmp
pop
add
jb
pop
pop
add
mov
rclb
sti
roll
xchg
ret
or
dec
add
xor
nop
cld
jmp
jno
pop
add
pop
push
nop
cld
jmp
cmp
adc
cmp
push
add
pop
mov
stc
nop
jb
leave
es
add
mov
push
mov
xchg
ret
add
add
jne
stc
nop
jb
add
xchg
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
adc
inc
sbb
mov
stc
nop
jb
add
add
add
add
add
addb
shl
stc
nop
jb
aas
lahf
pop
add
mov
xor
nop
cld
jmp
in
add
xchg
inc
dec
mov
stc
nop
jb
ja
add
add
sub
stc
nop
jb
sub
cmp
add
push
mov
xchg
ret
add
sbb
jmp
nop
cld
jmp
add
add
stc
nop
jb
add
in
faddl
and
jecxz
rcrl
jb
stc
nop
jb
loope
add
nop
cld
jmp
add
add
leave
inc
add
push
mov
xchg
ret
xor
call
inc
add
jp
dec
mov
stc
nop
jb
add
repnz
mov
stc
nop
jb
add
add
cld
jmp
inc
add
outsl
add
inc
shrb
mov
xchg
ret
add
pop
addb
lea
nop
cld
jmp
aas
repnz
add
nop
cld
jmp
xchg
push
ja
fdivrl
cld
jmp
add
add
add
push
xchg
roll
clc
push
stc
nop
jb
add
add
mov
jb
in
adc
and
stc
nop
jb
lahf
sub
dec
clc
inc
add
add
fs
xchg
pop
adc
push
mov
xchg
ret
add
xchg
mov
stc
nop
jb
add
push
aad
sarb
jmp
cmp
sub
dec
cmp
nop
cld
jmp
fidivl
push
xchg
inc
push
in
dec
push
mov
add
adc
add
cld
add
xorl
insl
jae
nop
jb
add
cltd
pushl
push
mov
xchg
ret
mov
and
pusha
stc
nop
jb
add
cmp
sub
stc
nop
jb
add
add
or
adc
inc
add
add
hlt
test
pop
jmp
stc
nop
jb
add
pop
add
rol
repnz
add
nop
jb
jp
sbb
nop
add
movsb
dec
call
stc
nop
jb
lods
add
xchg
in
and
nop
cld
jmp
out
fstps
repz
and
test
nop
cld
jmp
repz
add
add
add
mov
jne
add
add
testl
in
add
push
test
cmp
mov
outsl
test
ret
sahf
jle
lret
mov
lods
js
add
xchg
lcall
sbb
shll
shll
add
das
lea
jae
mov
jmp
repnz
int
aam
xchg
sbb
add
jg
imul
add
mov
lahf
jns
mov
lahf
mov
addb
sbb
pusha
add
xor
vmovlps
popa
xor
insl
mov
testb
xor
xchg
or
inc
add
cmc
ret
cs
cmp
inc
add
pop
dec
ss
imul
push
sub
add
fs
mov
lahf
push
movsl
mov
repz
mov
fisubrl
shlb
cld
loop
mov
xchg
push
inc
add
add
xlat
mov
out
or
fdiv
push
insb
xor
add
and
add
loop
test
icebp
mov
leave
loope
jb
faddl
ja
ret
cld
xchg
imul
pop
push
clc
push
cld
int
icebp
dec
dec
lret
sub
jne
sub
dec
jecxz
cmp
mov
sbb
pop
addr16
sahf
jns,pt
xchg
ss
jge
xor
add
jns
or
jl
and
push
xor
push
sbb
in
mov
dec
mov
add
fildll
sbb
in
dec
dec
cld
xlat
pop
repnz
mov
fnstcw
xchg
cmp
lock
jge
adc
test
dec
movsl
push
jmp
aad
mov
cs
dec
mov
mov
mov
stc
iret
sbb
lock
mov
xchg
dec
jns
xor
pop
std
or
mov
and
xchg
lret
out
cmp
pushf
sbb
rolb
data16
xchg
xor
pop
je
movb
movl
popl
mov
mov
fbld
inc
add
addb
inc
add
mov
push
out
xchg
push
out
or
sub
adc
lret
dec
push
and
adc
xor
shlb
or
add
and
dec
jnp
mov
es
add
pop
stos
addb
jmp
mov
fcmovb
add
xor
mov
scas
cmp
outsb
out
mov
pop
popa
inc
add
dec
in
jbe
jbe
xlat
loop
fidivrs
mov
pop
xor
aas
push
mov
sub
mov
mov
inc
add
shlb
sahf
add
mov
sahf
mov
lahf
or
push
sub
xor
push
dec
and
push
stos
ds
add
loopne
cmp
sbb
adc
xor
aas
cmp
push
sti
das
stos
scas
fstps
test
cmp
push
cmp
cmp
fidivl
push
test
add
mov
js
sub
ficoml
sub
sub
fisttps
dec
mov
add
cmpsl
jnp
cmc
pushf
pop
mov
jge
add
daa
cmpsl
test
repnz
test
pop
fldt
idiv
mov
sahf
out
mov
sub
popa
stos
lret
adc
cmp
jns
outsl
mov
push
fadds
add
pushf
outsl
aas
pop
pop
cmp
xchg
mov
addb
fnstenv
pop
enter
mov
adc
add
push
incl
and
add
movb
cmp
movsb
insb
pop
jae
shlb
into
mov
insl
mov
add
push
cld
mov
mov
mov
or
pop
push
mov
push
pop
jae
push
ds
or
cmp
mov
mov
adc
xchg
decb
jp
xor
jnp
ds
test
jnp
movsb
mov
out
xor
add
lret
js
addb
dec
push
test
sub
mov
inc
mov
sub
sub
or
les
sbb
or
neg
dec
insb
xchg
cmp
jmp
xor
test
aam
mov
mov
popa
pop
je
jecxz,pn
movb
lods
jae
jle
sarb
pop
movsb
lock
push
lret
adc
in
leave
fs
add
lea
xchg
popl
scas
cld
mov
add
test
jb
sub
dec
sldt
pop
loopne
fldenv
shl
adc
or
mov
stos
mov
cmp
out
mov
pusha
add
cmp
dec
mov
jns
adc
sub
sahf
mov
idiv
shlb
mov
xlat
cmp
cwtl
call
rcll
and
fprem1
popf
add
sahf
mov
mov
fnstcw
add
mov
mov
adcl
pop
pop
dec
pop
pusha
add
xchg
push
xor
add
cltd
and
sahf
push
ror
or
mov
add
lcall
jnp
cmp
sbb
push
fistpl
jge
fcomi
not
jmp
repnz
sub
fdivl
lds
cmp
mov
ret
dec
in
sti
push
push
and
sub
sbb
imull
and
add
add
sub
sub
movb
cs
xchg
addb
push
inc
pop
xchg
cmp
add
cmc
arpl
lods
test
bound
push
mov
imul
sbb
movsl
cmp
adc
xor
xor
dec
lret
mov
pop
adc
js
cmp
clc
adc
push
fcmovb
bound
mov
fisubrs
cli
xchg
xor
cltd
mov
clc
dec
cltd
add
and
pop
or
stos
movsb
mov
push
stc
popa
in
lret
push
add
sbb
outsb
mov
add
aas
adcl
pop
in
fimull
daa
rcll
sti
lret
cmpsb
sbbl
fistpll
fucomp
jae
push
adc
xor
or
lds
in
les
mov
sub
add
mov
xor
nop
movsl
idiv
insl
xchg
lods
mov
adc
in
movsb
xlat
inc
add
fiadds
mov
add
hlt
stc
jnp
and
out
call
jg
mov
cwtl
cld
sti
scas
jge
and
nop
jecxz
pop
mov
in
cwtl
push
jp
xor
movsb
bswap
push
fcmovu
mov
sub
mov
add
mov
jmp
mov
outsb
into
pop
jb
push
and
dec
stos
iret
sbb
mov
lcall
dec
aam
sub
vshufpd
mov
pusha
add
dec
mov
les
test
hlt
or
push
retw
sahf
push
add
jmp
repnz
pop
sahf
push
movsb
xor
add
mov
scas
inc
jb
lahf
nop
inc
add
add
es
push
dec
adc
pushf
pop
sbb
jp
pop
idiv
push
xchg
in
jno
shl
sbb
sbb
push
shr
daa
add
imull
aaa
movsl
es
push
loope
push
popf
lcall
stos
xchg
addb
inc
add
dec
adc
cwtl
hlt
and
mov
rolb
mov
in
dec
rcll
or
xchg
mov
pop
test
push
imul
add
pop
sbb
mov
jl
icebp
js
jge
xchg
rolb
movsl
sbb
das
mov
push
int
mov
les
imull
and
jge
push
add
loop
add
out
mov
addb
mov
inc
scas
cmc
fldcw
jbe
push
in
inc
add
jg
jecxz
sub
jns
out
push
lret
push
leave
inc
out
addb
cs
cli
inc
add
stc
or
in
in
mov
jmp
jb
xor
jne
repnz
rorb
push
lahf
add
in
xchg
sub
aaa
das
xor
imul
scas
subl
add
fidivrs
sub
jge
or
ss
pop
lods
into
push
push
add
push
push
push
add
test
dec
jno
jge
or
mov
push
cmc
std
jle
cwtl
nop
inc
mov
adc
movsl
stos
pop
inc
repnz
and
fwait
mov
add
pop
mov
xchg
lds
inc
add
in
test
mov
inc
xchg
jnp
mov
adc
add
imul
les
cmc
pop
mov
loop
xor
sub
out
rcll
fs
sub
inc
add
and
xchg
mov
jno
jp
lock
pop
add
ja
jg
pop
add
jns
fisubrs
pop
outsl
add
sbb
mulb
inc
sahf
loop
out
iret
jg
dec
push
aaa
push
enter
nop
and
sub
pop
mov
adc
call
hlt
or
jbe
loopne
push
adc
mov
addb
add
pop
cmc
imul
mov
addb
fnstcw
loopne
addb
inc
add
mov
or
dec
cmc
outsl
lret
imul
mov
xchg
dec
rcll
push
push
jae
xchg
xor
and
push
das
lea
sub
rcll
inc
add
mov
dec
and
and
or
pop
out
add
mov
add
in
xchg
cmp
pop
call
push
sbb
test
std
or
xor
or
xchg
cmp
out
cmc
add
add
sbb
ret
xchg
sub
jo
ret
add
sub
out
mov
movhps
mov
pop
xor
popw
xchg
or
lcall
add
cmp
push
sub
mov
mov
dec
inc
dec
xor
daa
jl
push
cmc
jns
test
out
in
mov
cmpsb
bound
mov
aam
sahf
add
jge
mov
mov
xor
repnz
jge
mov
mov
outsl
dec
dec
out
sub
xor
push
js
mov
dec
js
mov
cmc
cmpsl
into
pop
scas
push
mov
push
movsb
adc
stos
add
or
xor
add
cli
mov
pusha
add
test
mov
in
ror
adc
inc
add
insb
xor
and
sbb
fnsave
ffreep
les
stc
or
jne
fstpt
aam
sub
mov
inc
add
pusha
add
cwtl
jnp
mov
add
push
arpl
add
jns
clc
rorl
mov
pop
pop
xchg
xchg
add
jns
dec
dec
add
xor
pop
bound
pop
mov
mov
popw
dec
add
aas
or
add
loopne
push
add
add
lock
icebp
push
cmpsl
insl
jge
add
mov
pop
mov
jns
daa
and
jl
mov
add
shl
inc
add
fiadds
int3
in
sub
sahf
fwait
cmpsb
pop
adc
cmpsl
add
in
mov
lock
das
loopne
xor
ret
ja
mov
dec
push
xor
sarb
add
test
movb
pop
add
and
jno
rcll
push
sbb
sub
push
in
cmp
in
dec
push
sbb
sub
add
lea
test
outsl
inc
fmul
xor
add
add
add
bound
and
mov
bound
inc
or
add
or
dec
in
xor
in
sub
cmpsb
lds
and
jnp
fdiv
push
add
insb
cmp
or
ret
push
adc
fwait
xchg
lcall
pop
call
inc
add
push
movsl
in
lahf
push
mov
add
or
int3
test
int
fwait
mov
jl
mov
loop
mov
loop
jge
push
jmp
dec
insl
pop
add
dec
cmp
rolb
test
jg
enter
add
cmp
pusha
add
ret
movsb
cmp
mov
add
lret
call
sub
add
ja
lret
push
iret
rcrl
je
das
xor
inc
add
sbb
test
leave
das
inc
ret
add
ljmp
pop
inc
add
adc
xchg
xchg
xchg
sub
fildl
inc
stos
adc
outsb
repz
sub
adc
mov
dec
stc
and
add
xor
pop
loope
es
dec
inc
and
es
add
sub
outsl
mov
addb
repnz
push
fstpt
cmp
mov
ja
int
mov
loop
mov
fstps
mov
lea
and
dec
mov
or
mov
jbe
cmp
adc
push
les
in
mov
xchg
lods
cmpsb
jae
inc
aam
and
xchg
mov
dec
mov
cmp
mov
push
int
push
call
mov
addb
xor
jae
stos
jbe
add
cltd
inc
mov
add
mov
gs
xchg
and
ds
imul
mov
ret
push
dec
loop
in
out
scas
jno,pn
xchg
iret
cmpsl
inc
add
add
ficomps
aas
xchg
fcoms
or
xchg
mov
and
out
or
mov
aaa
cmpsl
fisubl
ret
shll
imul
or
lret
mov
imul
ds
sub
or
push
add
pop
insl
stos
out
pushf
popf
out
mov
lahf
inc
mov
in
push
sub
add
aam
ljmp
push
arpl
dec
dec
fs
mov
out
in
mov
pop
aad
lock
std
pop
jge
std
add
lret
enter
fildl
adc
jp
add
out
addb
lods
mov
jg
pop
arpl
pop
and
rcrb
and
ljmp
inc
add
add
sub
ljmp
dec
insl
addb
fs
adc
rolb
add
iret
inc
inc
mov
jmp
xchg
mov
dec
aam
add
xchg
in
sahf
repz
les
add
leave
xor
inc
ficomps
call
add
adc
faddl
sar
mov
int3
sbb
arpl
cmpsb
jnp
hlt
add
fstpt
scas
fistpl
add
add
insl
sub
xlat
fiaddl
mov
repnz
idivl
inc
and
or
bound
lea
loop
xchg
std
and
sub
inc
xchg
mov
jmp
addb
shl
les
je
inc
add
sbb
push
cmpl
xlat
xor
fcomps
stc
mov
sbb
dec
add
mov
imul
cli
rorb
xchg
mov
add
cmp
add
stos
push
and
movsl
or
jmp
inc
add
sbb
dec
bound
int3
cmp
pop
dec
jb
rolb
mov
movsl
xorl
hlt
leave
cmpsb
out
add
add
loop
fimull
pop
jp
add
adc
popf
xchg
push
div
mov
pushf
jle
add
mov
in
sbb
sti
xor
mov
out
and
cmp
cs
or
and
cmp
xor
mov
bound
or
add
add
mov
mov
push
ljmp
sahf
mov
add
addb
les
jmp
cmpsl
outsl
mov
xchg
xchg
push
hlt
push
lahf
das
shrb
outsl
dec
mov
or
fsubp
adc
imul
stos
or
ljmp
imul
vcvtps2pd
hlt
ljmp
add
mov
arpl
je
or
dec
dec
xlat
push
mov
addr16
pop
add
stc
push
imul
add
aam
mov
and
mov
mov
into
sti
lea
sub
mov
test
loopne
xchg
or
rcll
loopne
add
insl
dec
dec
pop
ret
and
push
loope
test
shlb
cli
int3
je
add
lret
cmc
aas
sub
icebp
repnz
lds
cmp
mov
pop
cwtl
fdivl
leave
cmp
add
es
fwait
adc
lret
cmp
and
and
add
push
dec
gs
pop
dec
push
cmpsb
push
push
xor
xchg
lret
sub
lcall
xchg
mov
out
jo
and
jno
rolb
repnz
sti
imull
sarl
xlat
mov
push
add
mov
repz
cmp
add
cmp
xor
mov
fbstp
push
sub
and
jecxz
xor
jbe
mov
pop
mov
repz
push
loope
mov
aad
lahf
insl
nop
or
add
gs
inc
pop
add
sub
cs
sub
push
jne
mov
inc
add
ja
leave
pop
sarl
add
xchg
cmp
adc
pop
repnz
sahf
jno
inc
add
inc
add
mov
das
jo
add
movb
add
xchg
mov
or
imul
movsb
inc
add
pop
inc
shrl
je
or
pop
into
adc
inc
addb
aaa
stos
outsb
sbb
clc
ret
push
add
ret
adc
cld
ror
aam
inc
imull
jmp
in
push
xchg
mov
add
add
mov
in
test
aaa
pop
je
adc
adc
inc
push
jbe
outsl
inc
add
frstor
fldl
and
add
int
xor
mov
cmpl
add
es
or
dec
sti
xchg
fwait
cmp
xchg
mov
xchg
mov
aam
cld
aas
cmp
arpl
pop
mov
dec
mov
je
add
lea
and
sub
add
mov
pushf
push
loope
sub
mov
sbb
fwait
mov
roll
sbb
xchg
pop
fnstsw
ds
add
add
adc
sub
ja
pop
dec
jns
sub
inc
fld
add
pop
xchg
jne
in
add
jge
mov
add
inc
add
xor
negb
rol
leave
loop
push
scas
aaa
stos
push
sbb
shlb
add
jle
xor
lahf
jae
sti
mov
test
sub
ret
xchg
adc
cli
rcrb
cmp
mov
loopne
mov
decl
and
sti
jp
cli
dec
rolb
cmp
test
bound
mov
lock
inc
std
xor
scas
icebp
rclb
rolb
vorps
or
incb
icebp
fists
cmp
sbb
les
lock
movsb
xchg
jo
mov
inc
dec
and
test
movb
xchg
push
push
adc
mov
imul
xorl
add
pop
jo
jle
add
sub
movsl
movb
mov
xchg
push
test
xchg
sub
xchg
arpl
add
ret
adc
imul
pushf
scas
dec
test
data16
aas
dec
outsb
add
and
movb
push
adc
add
aam
shll
dec
popl
gs
fimull
mov
out
test
mov
add
xchg
xor
arpl
jl
mov
or
bound
xchg
and
cmc
adc
push
or
leave
mov
add
push
testb
sbb
push
push
mov
pop
or
add
into
lock
outsb
iret
mov
jmp
mov
sbb
mov
sahf
ret
jno
add
loopne
rolb
mov
fidivs
iret
cld
fcmovne
pushf
cs
mov
jecxz,pt
test
mov
mov
adc
es
xor
lock
int3
insb
xchg
rcrb
xchg
fldcw
outsb
xor
clc
pop
sbb
mov
loope
push
ja
xchg
adc
xchg
sbb
ljmp
add
inc
add
dec
cmc
mov
add
lret
push
xchg
and
push
ret
mov
dec
cmp
bound
xchg
push
lea
outsl
movsl
ja
push
jb
sarb
or
add
fimuls
and
stos
cs
loop
mov
push
add
stos
in
push
and
popf
clc
lock
rorl
add
dec
in
in
xchg
clc
mov
add
push
push
add
or
jp
inc
add
jnp
les
or
sbbl
xor
pop
mov
inc
add
add
addb
enter
les
insl
xor
rolb
add
ret
mov
cs
adc
push
push
lods
das
adc
jne
int3
mov
mov
out
or
ja
jp
rorb
add
sub
push
cmp
repnz
in
inc
add
add
mov
fwait
sbb
imul
movsl
imul
imul
or
notb
add
stos
cwtl
fwait
cmp
add
mov
pop
aam
stos
push
push
pop
add
addr16
xchg
xchg
jae
xchg
insl
push
jmp
mov
enter
or
push
xor
daa
fisubl
mov
aaa
enter
inc
mov
mov
mov
jmp
cmc
or
mov
sub
in
in
dec
jmp
lret
ret
adc
pop
je
cmp
jno
sub
add
push
loopne
or
repnz
js
dec
jbe
push
movb
inc
bound
scas
jbe
mov
cmc
dec
test
push
mov
iret
aam
inc
repnz
in
mov
xlat
int3
mov
add
out
cs
add
test
mov
es
mov
cmp
je
pop
or
fimull
test
hlt
sbb
adc
xchg
int
dec
addb
roll
call
loopne
lods
sbb
mov
push
push
into
cmc
mov
or
sub
xchg
add
test
daa
arpl
test
addb
bound
xchg
leave
call
sahf
xor
adc
lods
jmp
dec
jnp
mov
mov
aad
mov
add
add
jp
adc
mov
fmull
add
sbb
loop
mov
adc
icebp
xchg
es
lret
mov
add
add
jmp
jns
xor
sbb
mov
aaa
cmp
xchg
xchg
inc
add
cmpsb
push
lahf
sbb
aad
mov
add
idivl
adc
add
xchg
lcall
mov
mov
add
out
jno
sbb
jecxz
xor
mov
mov
ficoml
or
neg
push
push
jb
add
movsb
pop
fmul
lods
loope
adc
jg
push
jno
add
jmp
mov
lea
subl
imul
out
and
imul
add
or
imul
add
fcomps
push
jnp
add
sti
mov
cmp
mov
scas
popf
pusha
add
cmp
int
daa
je
mov
cmp
mov
add
add
call
mov
cmp
mov
or
add
cmp
add
pop
mov
cmp
xchg
icebp
push
mov
inc
add
mov
jb
xchg
lods
repnz
add
add
rcll
and
add
adc
add
arpl
dec
pop
mov
test
pop
add
ss
rolb
std
xchg
pop
mov
xor
scas
jge
in
xor
add
inc
add
cmp
mov
cmp
and
adc
lods
test
dec
lcall
mov
xchg
test
je
jb
xchg
mov
sub
sbb
std
sti
in
in
xor
xchg
sub
mov
xchg
sahf
das
xchg
push
in
fmuls
clc
jmp
fstl
sub
mov
sub
jle
bound
in
mov
int
cld
adc
jmp
rolb
ds
out
sub
lret
gs
aad
sbb
test
xor
cmp
pop
addb
fwait
lods
aaa
ficoms
add
rcrl
sbb
push
les
rolb
add
subl
add
inc
add
jne
data16
daa
int3
sbb
cmp
sub
adc
repz
pushf
into
jo
lock
clc
shlb
imul
aad
rolb
icebp
bndldx
rol
xchg
xchg
adc
push
mov
jmp
ss
iret
loop
xchg
add
mov
add
in
push
rorl
pop
and
rolb
adc
cmp
aad
cli
jb
cmp
movsb
mov
insl
notb
stos
cmp
mov
xchg
out
les
xchg
pop
js
scas
jns
push
xchg
dec
enter
popa
dec
mov
imul
in
popa
ds
push
push
and
inc
add
add
dec
cmpsl
ficoml
push
fimull
jb
add
mov
out
jo
cltd
addl
sub
adc
dec
je
aaa
dec
stos
fdivrl
test
or
push
pop
add
mov
test
cmp
lret
ja
add
pop
cmp
jmp
lcall
adc
pushf
push
ret
popa
pop
inc
mov
jge
inc
add
jno
pop
ja
push
add
adc
fldenv
popf
mov
sti
sub
add
dec
and
shr
loop
scas
or
mov
cmp
aas
ficompl
xor
test
xchg
mov
gs
int
cmp
test
sbb
out
movsb
mov
stos
jmp
ja
cmp
shll
loopne
insl
adc
aad
pop
mov
das
into
test
inc
add
add
ljmp
inc
jge
jle
addl
pop
daa
sub
loop
cmpsl
cmp
mov
nop
push
daa
rorb
or
adc
mov
clc
jmp
add
push
mov
cld
rolb
xchg
adc
add
je
pop
arpl
mov
add
inc
mov
xchg
xchg
adc
add
mov
xor
sub
inc
add
sub
aad
xchg
mov
aad
mov
xor
add
pop
outsl
xor
push
adc
mov
jp
jno
add
add
mov
jne
in
jp
lret
sub
add
push
xchg
mov
cld
stos
mov
inc
add
add
imul
sub
or
fmuls
pop
xchg
inc
xchg
hlt
xor
sbb
xor
add
add
jle
xor
loope
push
pop
push
sbb
push
add
leave
dec
pop
mov
or
pop
loop
mov
add
inc
add
mov
mov
add
lahf
fstps
popf
push
xlat
movsl
push
imul
jo
shll
imul
inc
add
pop
jl
not
push
jae
lea
dec
lds
lcall
cmp
mov
add
and
outsl
dec
into
addb
add
sub
add
cmp
add
inc
add
shrb
jmp
adc
add
and
push
inc
mov
cs
iret
loopne
cmp
insb
cld
in
stos
jl
fists
loop
hlt
pusha
add
rcrl
out
xchg
sbb
jp
aas
dec
ja
scas
cli
adc
mov
add
stc
loopne
pop
mov
xor
push
lods
or
repnz
or
and
data16
xlat
aas
iret
pop
imul
ret
xchg
add
in
cmp
sahf
hlt
es
or
outsl
lds
mov
jae
add
rcr
sahf
testb
sbb
sub
and
mov
popa
adc
mov
and
pop
int3
mov
sbbl
and
enter
push
jmp
jns
or
push
mov
and
mov
inc
inc
shrb
cmp
xor
fidivrs
add
inc
call
fsubs
mov
ds
bswap
and
test
shr
sub
popa
push
cmpsb
jp
push
dec
inc
mov
jnp
add
inc
or
mov
rolb
jle
mov
imul
pop
or
pop
addr16
inc
add
add
pop
mov
inc
add
jnp
orl
cltd
ja
pop
jae
mov
fsub
jae
jmp
xor
xor
scas
mov
mov
mov
xchg
addb
stos
xor
sti
sbb
push
ja
push
test
sarb
push
sub
push
cmpsb
mov
pop
jbe
add
movsl
loop
or
adc
xchg
popf
sub
enter
rolb
add
std
adc
push
push
cvtps2pd
dec
mov
jae
add
lods
sahf
pop
addb
inc
add
cmpsb
jecxz
loope
popa
pop
dec
cmpsb
mov
lahf
insb
mov
pop
test
iret
aaa
nop
sub
ja
add
push
inc
add
cwtl
dec
jg
clc
mov
out
inc
das
mov
neg
jae
push
push
add
push
enter
add
push
sub
arpl
mov
mov
scas
rcl
icebp
fs
dec
je
test
add
negl
sahf
push
imul
jmp
bound
cmpsl
ss
ret
cmp
jns
jmp
out
jle
jb
mov
into
push
repz
xchg
dec
in
mov
xchg
pop
cwtl
movsb
aaa
cs
mov
test
call
push
data16
jecxz
add
js
jp
lret
test
xchg
sahf
repnz
mov
rorl
add
dec
sub
adc
scas
add
jmp
add
mov
push
push
rep
pop
pop
add
push
xchg
push
pop
add
pusha
add
les
or
add
shll
out
add
xchg
fisttpll
shl
mov
lods
mov
daa
sahf
pusha
add
add
and
and
cmpsb
leave
mov
or
add
xchg
stos
in
sub
mov
add
sbb
scas
data16
xorl
add
dec
adc
or
out
and
in
add
popa
jle
fmuls
fistpll
ret
rcrl
push
jbe
add
stc
sbb
andl
or
call
push
jbe
inc
add
or
lret
iret
mov
ficomps
and
lahf
sub
mov
add
mov
sar
call
jno
stc
sbb
xchg
aam
sahf
sub
in
add
xchg
push
mov
add
sbb
sub
mov
adc
jmp
jo
in
push
test
sub
push
cs
sti
xchg
test
int
mov
xchg
xor
lea
add
cmp
xchg
add
roll
xchg
inc
add
sbb
pusha
add
pusha
add
add
or
stos
cld
adc
ljmp
in
std
stc
clc
jp
hlt
inc
add
in
sbb
popa
fs
aad
add
sbb
add
mov
mulb
rolb
xor
movsb
ret
movsl
jb
add
pop
mov
out
sahf
lret
inc
add
add
int3
insb
sub
xlat
mov
add
popa
ss
add
rcrl
mov
mov
ljmp
fstps
push
push
pop
scas
sahf
pop
adc
imul
pushf
repnz
xor
in
popf
test
lcall
adc
mov
or
test
cmpl
enter
pop
pop
in
mov
and
add
shlb
xchg
jae
push
add
push
loop
les
les
jmp
or
cltd
in
ficoml
fs
add
and
push
je
add
mov
lret
cmp
mov
dec
add
jge
nop
fnstenv
inc
les
loop
ja
add
add
jp
scas
cmp
or
insl
xchg
test
shl
fcoml
bound
test
cmc
lret
lret
xor
nop
sti
mov
mov
nop
cmp
add
jge
pop
pushf
outsl
ljmp
movb
icebp
lock
add
xchg
fs
push
lahf
sub
decl
add
mov
and
movsl
adc
mov
cmp
jp
fs
sar
pop
lea
insb
fistpll
cmp
test
adc
js
stos
mov
frstor
add
inc
xchg
fistps
pop
pop
xchg
or
aas
test
adc
pushf
sub
pop
sub
add
pop
out
mov
push
les
jge
jp
pop
mov
pop
lock
stos
jecxz
push
add
mov
dec
inc
add
ljmp
push
add
dec
lods
movsb
cmp
pop
faddp
add
jp
jnp
js
xor
daa
push
inc
sbb
add
lds
push
or
in
cli
aas
lret
les
lods
stos
xchg
inc
mov
mov
insl
mov
fnstcw
jns
lods
icebp
or
stc
fisttpll
mov
add
jae
fdivrs
dec
sub
pop
out
dec
and
test
sbb
movsl
cmp
out
fcoml
xlat
pop
je
mov
jecxz
dec
push
inc
add
aad
jae
outsb
mov
push
xchg
adc
xchg
push
insb
stos
xor
push
out
lret
loop
nop
insl
lahf
jl
pop
xchg
and
in
pop
out
mov
mov
es
xor
or
dec
pop
adc
add
mov
pop
jno
cmp
xchg
leave
lock
add
push
fs
xchg
and
cmpsl
bswap
sbb
test
cmc
jl
lret
fnstenv
mov
enter
mov
push
mov
dec
aaa
mov
cmp
stc
insb
out
pop
push
jnp
rcl
lcall
xor
sbb
xor
mov
add
add
lret
std
xchg
mov
insb
xchg
xlat
arpl
stc
dec
or
jp
inc
std
jmp
mov
in
out
hlt
nop
mov
xchg
out
out
aad
mov
xor
add
aam
sbb
add
add
outsb
rolb
xlat
shlb
pop
rcll
dec
sahf
and
mov
adc
sub
into
rep
cmpsb
ret
int
aaa
rorl
ret
andl
test
pushf
mov
fstpl
add
xchg
lahf
inc
add
jecxz
cmp
or
jnp
mov
xchg
xlat
and
add
fimuls
inc
inc
pop
out
rorb
fnstenv
and
xorl
call
adc
xchg
inc
add
jp
mov
rolb
add
rcll
xchg
repnz
pop
movb
out
dec
into
outsb
inc
add
push
outsb
mov
add
jnp
bound
mov
jno
xchg
adc
pop
dec
mov
in
push
jle
cmp
push
pop
cs
and
push
stos
jp
push
mov
notl
in
inc
add
movb
pminsw
mov
or
push
jmp
dec
mov
sbb
jecxz
fsubs
stos
mov
in
inc
and
mov
lcall
das
mov
xchg
push
andl
fcmove
xchg
push
lods
mov
test
hlt
push
push
mov
xor
push
js
loop
xchg
std
ss
mov
add
rolb
icebp
xor
ss
inc
add
or
xchg
sti
cmpsl
mov
stos
pop
jae
inc
cld
and
pop
test
dec
add
mov
dec
jle
sar
inc
lahf
inc
ficoml
repz
and
sbb
sbb
ds
dec
mov
push
addb
add
pop
xor
scas
cmp
ret
mov
add
inc
add
mov
loop
pop
inc
inc
add
push
loopne
xor
jle
push
mov
insb
out
pop
pop
dec
xbegin
add
dec
xchg
mov
push
outsl
jg
add
xchg
lret
clc
insb
xchg
inc
add
push
add
dec
or
test
jne
inc
add
jg
jle
mov
xor
fstp
jo
mov
mulb
bound
test
pop
loope
mov
cltd
lods
fbld
fwait
sub
jg
or
jmp
sahf
sub
xchg
or
pushf
and
ror
xchg
pop
cmp
add
sub
aam
insl
jne
pop
jns
xor
ret
mov
push
ljmp
stos
pop
or
sub
cmc
adc
adc
adc
scas
lahf
lret
add
dec
pop
mov
pop
es
clc
mov
add
ret
xorl
out
adc
out
call
add
cmp
sarb
mov
sub
pushf
mov
inc
add
add
mov
mov
mov
push
loope
shll
mov
add
shlb
fsub
pop
pop
test
add
test
cmp
add
inc
add
int3
roll
out
nop
jnp
add
pushf
movl
gs
dec
inc
jbe
mov
fdivr
mov
rolb
mov
dec
sub
jge
pop
cmpl
mov
scas
nop
aam
iret
xor
push
pushf
pop
jp
hlt
xor
xor
pusha
add
push
rcrl
and
add
daa
add
adc
loopne
xor
nop
pusha
add
pop
add
rorl
pop
mov
push
repz
lods
push
add
mov
xchg
stc
dec
test
inc
add
dec
das
add
nop
xor
test
fidivl
add
data16
ja
mov
outsb
sbb
shr
push
mov
ret
jb
fsubrl
test
outsl
push
imul
jo
add
daa
inc
or
inc
add
stos
and
insl
ror
enter
add
ja
lock
pusha
add
cld
jno
sarl
jecxz
jle
xchg
inc
fs
inc
pushf
test
add
or
pop
fsubl
and
mov
add
addr16
push
or
add
cmp
jle
inc
add
sahf
addb
ds
cwtl
adc
add
jnp
jno
rolb
adc
dec
std
mov
mov
mov
cmp
fwait
mov
clc
add
jge
pop
ss
jb
movb
lods
push
mov
lods
sbb
std
call
mov
xchg
ss
mov
orps
jne
mov
jae
mov
ljmp
les
add
sbb
je
add
xor
in
fdivs
cwtl
sub
or
popa
addr16
or
test
mov
bound
and
and
repnz
cmc
dec
jbe
and
idivl
outsl
scas
jnp
arpl
outsb
daa
roll
std
push
xchg
mov
mov
lods
cmpsb
int3
add
or
loope
out
mov
mov
out
mov
imul
sub
jns
hlt
jge
jb
fnsave
sub
inc
lods
rorl
jnp
loop
vaddsubps
sub
and
or
add
test
fcoml
rolb
scas
les
pop
sub
jo
sub
sbb
push
mov
add
add
and
pushf
jp
das
bound
and
mov
sbb
movb
gs
aas
mov
jle
cltd
loope
dec
add
movsb
insb
rolb
jo
add
pop
mov
stc
push
sub
jb
ret
daa
sub
imull
outsb
push
out
mov
xchg
add
nop
das
test
mov
push
add
in
jnp
int3
push
add
and
call
adc
sbb
xchg
scas
cwtl
daa
hlt
cwtl
mov
outsb
dec
out
add
or
loopne
pop
addr16
jne
mov
ja
fsubrl
in
mul
js
sarb
add
pop
xor
data16
in
aaa
cmc
adc
in
mov
lock
sub
cmp
and
repnz
movsb
movsb
and
xchg
sahf
mov
ret
out
pusha
add
dec
pop
leave
jbe
fwait
les
outsl
xchg
das
inc
les
add
mov
mov
sub
sbb
lds
dec
addb
imul
add
dec
repnz
iret
loope
jne
addb
fsubrl
xor
test
lods
test
add
ss
xchg
xor
sub
les
mov
mov
test
adc
xor
add
call
pop
test
sbb
and
xlat
pop
mov
lret
and
into
loope
imul
cmpsb
repnz
xor
jbe
out
scas
addb
loopne
add
outsl
dec
pop
insb
loop
add
cmp
cmp
sbb
sub
add
nop
inc
add
in
jnp
outsl
mov
add
nop
movsl
lock
jl
pop
and
arpl
xchg
push
dec
pusha
add
push
push
pop
cltd
insb
dec
mov
bound
and
and
push
xor
aaa
scas
jp
lods
neg
mov
push
push
aam
rcrb
leave
push
cli
xor
stos
outsb
pop
test
ja
ds
and
icebp
adc
dec
les
mov
lds
ret
push
sbb
or
lahf
icebp
or
pop
mov
or
cmp
add
xchg
jae
test
daa
cs
aas
mov
sub
adc
xchg
inc
js
mov
dec
mov
sbb
mov
adc
xchg
jl
dec
sbb
mov
xchg
es
lret
jmp
mov
iret
stc
sbb
add
cmp
jge
cltd
dec
or
xchg
clc
mov
mov
push
sbb
push
and
pop
xor
push
push
jge
sbb
or
sarl
mov
and
add
fdivl
mov
lret
push
int
arpl
adc
sub
adc
add
xor
push
add
testl
int
imul
es
push
pop
xor
out
in
or
sbb
mov
and
mov
iret
xchg
cmp
out
bound
push
and
imul
aas
jge
daa
cmc
pop
inc
add
cmpsl
and
sbb
push
adc
push
lds
stos
inc
popa
or
test
stos
jge
jbe
pop
popw
add
push
add
push
insl
cmp
mov
push
sbb
leave
jns
xor
add
push
push
mov
sub
pop
add
inc
add
mov
inc
add
and
ss
movsb
push
into
ret
dec
xor
inc
add
std
pop
pop
mov
sub
lret
test
adc
cmp
push
andl
loope
add
imul
test
push
mov
iret
mov
ja
add
xorl
jns
lahf
out
pop
pop
std
jmp
xor
pop
jg
xchg
aad
cltd
aaa
scas
lcall
add
add
test
mov
loop
jg
add
adc
popf
inc
js
mov
jp
add
add
loop
add
filds
add
or
inc
add
xchg
mov
in
xchg
pop
addl
jne
mov
mov
xchg
jge
repnz
add
push
adc
and
outsb
sub
in
mov
popa
shll
outsl
movsl
and
mov
sub
stc
in
imul
je
dec
gs
repz
dec
sbb
mov
jmp
sahf
adc
adc
scas
arpl
xlat
push
mov
and
inc
mov
aam
out
add
pop
fmul
push
add
add
in
incl
dec
int
testl
add
shrl
mov
inc
fwait
mov
dec
leave
sbb
gs
add
mov
cltd
fnsave
add
sub
mov
sbb
dec
or
loopne
cmp
pop
rolb
or
lahf
mov
stc
pop
inc
sbb
jg
in
push
sbb
dec
mov
ret
orl
fwait
mov
movsl
jle
inc
add
and
int3
les
mov
popa
sbbl
insl
push
adc
xchg
and
pop
cwtl
cmovge
inc
and
addb
addb
cltd
call
jb
sub
imul
sub
bound
inc
fs
add
lcall
mov
jmp
add
mov
add
add
push
xor
stos
push
pop
sub
pop
inc
pop
aaa
out
clc
pop
xchg
pop
mov
mov
das
shlb
lods
jbe
sub
daa
ss
xor
dec
and
xor
movsb
push
rorl
out
loope
dec
push
add
cmp
sbb
shrl
repnz
cmpl
and
and
jns
adc
add
ds
add
add
ja
aam
repnz
xchg
mov
add
and
and
push
aam
int
in
pop
jns
sbb
in
add
dec
jae
add
push
psubusw
sub
out
fwait
cmp
mov
aaa
gs
divl
lcall
push
adc
pop
insb
cmp
add
jbe
mov
add
jmp
add
sbb
mov
gs
fs
mov
add
and
sbb
mov
pop
mov
fwait
sbb
popa
pop
ret
cld
and
mov
mov
sti
add
mov
jle
mov
cltd
movb
add
mov
cmc
daa
mov
pop
push
pop
int
mov
je
imul
mov
add
and
add
and
inc
add
out
sbb
push
pusha
add
mov
cli
pop
xlat
push
in
mov
cwtl
xlat
sub
into
adc
jb
sub
in
add
dec
rolb
xchg
cwtl
lods
mov
cmp
jne
xchg
mov
das
jo
add
cmp
mov
imul
add
or
movb
pop
mov
movsb
rorb
flds
inc
pop
jmp
sarl
sbb
mov
push
push
lret
sub
mov
sub
sub
or
add
stos
xor
and
out
loope
pushf
pop
js
jns
shr
ficoms
ret
es
adcl
in
adc
pop
repnz
cmp
fmuls
push
xlat
and
add
sbb
mov
pop
jns
ret
clc
hlt
hlt
inc
add
push
xchg
mov
inc
xor
stos
cmp
add
mov
fwait
add
std
xchg
lods
fists
add
movsl
fs
dec
add
mov
jg
popf
stos
bound
icebp
add
mov
cmp
out
out
out
adc
add
mov
and
popf
addb
pop
pop
mov
sub
adc
test
mov
push
add
jle
xchg
ds
mov
iret
and
cmpsl
enter
cmp
stos
outsb
ret
fcompl
les
aad
loope
pop
cmp
mov
enter
pushf
cwtl
push
add
cwtl
pop
repnz
call
xlat
mov
int3
scas
mov
mov
cmpl
bswap
xchg
movb
xchg
mov
rcr
test
sti
mov
or
push
mov
rcrb
outsl
inc
jp
je
dec
mov
movsb
stc
pop
inc
std
pop
enter
in
imul
lods
imul
insb
dec
fldt
dec
sub
jb
adc
mov
xchg
jl
mov
es
dec
jmp
add
loope
cmp
adc
add
jo
aas
ljmp
cmp
xlat
lods
leave
jmp
popa
pushl
jns
rcll
addb
rcrb
sub
sahf
cmp
xor
cs
sti
pop
xchg
fcoms
jg
add
fstpt
mov
ret
add
pop
xlat
dec
scas
in
jle
das
mov
imul
add
sbb
adcl
fists
es
adc
pop
mov
xor
dec
jl
hlt
dec
xor
setp
cmp
xchg
ds
dec
push
push
add
xor
jae
lahf
and
or
xor
js
cld
fadd
dec
xchg
adc
lods
mov
add
out
shrb
xchg
pop
out
lds
xchg
xchg
mov
xor
loope
pop
movd
lret
jae
dec
loop
pop
push
add
dec
cmp
int3
pop
out
and
insb
out
push
aas
int3
mov
and
test
sub
xor
push
mov
xorl
push
fistpl
es
add
add
adc
adc
inc
inc
add
lret
xor
icebp
pop
push
or
lcall
or
push
add
mov
xor
addb
inc
add
hlt
sub
sbb
adc
and
dec
sub
aam
pushf
insb
lcall
jp
jne
aam
mov
aad
sar
mov
fstl
cmp
popf
xchg
push
movsb
mov
xchg
add
add
inc
data16
jmp
push
movsb
and
add
and
xchg
inc
inc
cs
adcl
jne
dec
bound
pop
mov
lret
dec
jge
rolb
dec
pop
nop
inc
add
loope
outsl
mov
jae
dec
hlt
faddl
aas
mov
loop
push
jae
inc
cmpsb
arpl
insb
xchg
push
add
stos
sub
add
jp
ficomps
or
and
fsub
pop
sbb
xor
test
and
inc
push
xchg
mov
mov
mov
aas
or
adc
cmc
mov
adc
push
rolb
mov
fmuls
xchg
sbb
mov
pop
jp
lds
or
ljmp
add
or
adc
add
jge
sti
xor
mov
inc
add
add
leave
out
sub
mov
notl
movb
push
cli
std
mov
loop
push
fwait
in
rolb
mov
stc
dec
mov
add
inc
pusha
add
dec
adc
outsl
pushf
ds
cmp
movsl
xchg
mov
call
push
and
cmp
add
arpl
loop
ffreep
mov
movsb
popf
hlt
inc
add
fidivl
cmpsl
scas
in
fildl
jmp
fs
popf
or
xor
test
leave
and
xor
movb
test
fdiv
inc
add
cmp
xchg
jne
jae
push
les
dec
inc
out
sub
add
mov
xchg
addb
push
jae
pop
jmp
cld
repz
or
push
sbb
lea
add
pop
pop
jp
add
lods
mov
fadds
lahf
addb
sub
lret
iret
cmp
jnp
xchg
ja
mov
add
repnz
cmp
je
shr
ret
in
jnp
add
shrl
push
imul
add
add
cs
push
jg
and
and
nop
nop
out
mov
jbe
jp
mov
aas
xchg
xchg
jb
add
sub
add
leave
add
jl
jno
adc
sbbl
pusha
add
stc
xchg
sahf
dec
sahf
movb
lret
icebp
push
add
lret
add
xor
mulb
mov
cmp
lea
pop
addr16
mov
mov
inc
add
push
je
and
xchg
cmpsb
mov
jmp
push
sbb
lcall
add
dec
mov
xchg
or
outsb
dec
dec
ret
mov
js
mov
mov
mov
les
sbb
int3
push
cmp
divl
sbb
outsl
sub
jb
pop
icebp
add
lret
inc
and
add
jmp
rclb
xor
in
pushf
aaa
dec
js
in
fists
sbb
les
scas
test
mov
lret
popf
je
mov
push
scas
idivb
and
addb
mov
cs
jo
sbb
xchg
std
inc
add
fisubl
and
mov
popf
shll
sbb
adc
jo
jnp
pop
push
xchg
stos
xchg
movb
xlat
sbb
mov
mov
enter
test
sti
test
adc
dec
xchg
sub
pop
ja
out
xor
push
fisttpl
mov
addb
cld
je
fstpt
mov
cld
inc
add
mov
in
cld
dec
sbb
imul
add
cmp
sub
in
sti
mov
inc
mov
add
nop
in
push
cmp
mov
sysret
dec
sub
bound
imul
mov
subl
mov
test
pop
out
into
movsl
xor
xlat
mov
pop
ss
add
fiaddl
push
mov
mov
adc
loopne
ret
iret
push
fsubrl
mov
out
shlb
mov
add
xchg
call
xor
or
sbb
mov
add
in
sbb
xor
fnstcw
roll
in
inc
add
std
mov
push
mov
mov
out
mov
mov
pop
or
je
mov
popa
dec
mov
push
jns
cli
bsr
adc
adc
lods
imull
cwtl
or
sub
sbb
loopne
addb
add
daa
scas
pop
fbld
lods
or
mov
inc
push
aam
stos
sahf
inc
and
movb
jns
inc
mov
dec
jmp
add
imul
mov
pop
inc
das
movsb
stos
test
jl
or
repnz
adc
pop
stos
adc
dec
push
adc
cwtl
sahf
inc
outsb
jnp
jg
push
xchg
cmp
adc
add
adc
push
cmpsb
cmpsl
sbb
add
ljmp
mov
scas
jae
addb
fcmovb
add
dec
pop
mov
das
jmp
in
inc
add
or
add
pop
add
xor
movsb
in
push
adc
addb
dec
jo
dec
outsl
pusha
add
pop
fsubrl
cmp
jbe
pop
rolb
sub
int
jle
dec
popf
pop
stos
sti
lods
push
or
shl
push
test
hlt
push
sub
cmovae
int
mov
movsb
mov
pushf
icebp
inc
cs
mov
mov
add
inc
add
rclb
movsl
sbb
mov
add
sbb
enter
pop
lret
es
xchg
cmp
jle
or
int3
mov
ret
movsl
dec
jmp
cmpsl
rolb
rolb
xor
or
add
popa
add
jp
dec
mov
rolb
push
xchg
push
add
push
cs
jge
pop
xlat
data16
cwtl
mov
jl
push
adc
inc
add
push
xchg
lods
mov
cld
cmpsb
sarl
call
aaa
dec
mov
ja
adc
mov
cmpsb
xchg
fs
rcrl
bswap
add
icebp
lea
jns
sub
push
push
hlt
filds
lea
mov
js
dec
adc
push
cmpsb
call
mov
add
add
in
cld
std
fsub
dec
mov
sbb
dec
gs
sbb
call
dec
xchg
enter
mov
imul
mov
ljmp
lods
sub
sub
in
inc
add
add
sub
ljmp
adc
pop
rcll
push
fistps
icebp
lret
pop
mov
and
jno
pop
cmc
sti
xlat
sub
adc
adc
jb
xorl
push
out
sar
adc
mov
adc
jns
add
fmulp
cmp
mov
mov
out
push
loop
notl
mov
xchg
insl
in
in
xor
mov
mov
add
xchg
jmp
mov
xchg
cwtl
pop
rcrb
pusha
add
aaa
insb
cmp
add
mov
nop
jno
mov
add
adc
pop
repnz
std
adc
outsb
stos
jmp
or
jno
outsl
adc
mov
dec
sahf
fs
and
shr
inc
add
mov
aad
scas
pop
imul
dec
mov
lods
mov
and
pop
out
xor
fistpl
jmp
adc
and
sbb
stos
popf
sub
aaa
mov
pop
xor
add
hlt
out
inc
stc
stos
pushf
scas
xor
inc
add
add
ret
cld
jne
int3
leave
into
cs
jns
xchg
js
xchg
xchg
lods
push
jp
push
add
or
jmp
inc
add
andl
fisubrl
mov
sbb
cwtl
mov
movb
out
daa
das
xor
shrb
cli
fcomps
xchg
push
add
les
xor
pop
or
sbb
add
dec
fisubl
movb
in
imul
movsl
ds
into
nop
lods
out
loope
cmp
call
sub
fdivrs
xchg
push
mov
pop
aas
rorb
lcall
adc
cmp
call
leave
test
movb
and
and
jge
add
push
call
mov
orl
fcomp
inc
add
jge
add
popa
push
gs
add
out
test
shl
cmc
dec
xor
push
jo
shl
dec
inc
add
push
add
fidivl
into
add
sbb
jg
jg
or
dec
inc
mov
loopne
and
xchg
xor
sahf
jl
fbld
iret
out
dec
lock
rolb
dec
rolb
add
mov
fnstenv
sbb
adc
dec
fs
mov
xlat
lock
jecxz
mov
dec
and
ret
and
push
cmp
add
add
mov
pusha
add
test
clc
dec
and
pushf
adc
fisttpl
pop
bound
test
ds
pop
dec
mov
mov
inc
add
cmp
dec
xchg
inc
test
fmuls
xchg
push
jb
or
xor
mov
sbb
cmp
js
arpl
mov
mov
fcos
popf
and
mov
mov
jnp
pop
fidivl
sub
add
pop
addb
sbb
add
add
pusha
add
cmp
mov
adc
addb
jo
lods
xchg
test
pop
lcall
xchg
jecxz
cli
dec
cmp
in
add
cmp
or
push
pandn
enter
leave
notb
xlat
mov
in
lods
adc
outsl
je
jp
mov
dec
mov
adc
add
add
xor
sbbl
jns
addl
mov
push
push
xchg
int
push
add
mov
cmpsb
pusha
add
sub
push
sahf
push
fnsave
mov
repz
pop
mov
lods
lea
repnz
sbb
push
addb
cltd
dec
dec
sbb
add
add
sub
add
inc
add
mov
cmpl
jns
cmp
mov
jns
add
add
int3
dec
test
pusha
add
mov
rorl
push
xchg
dec
jb
subl
sub
lods
lods
sbb
loope
into
push
jns
rcll
add
sub
add
pop
pop
pop
ss
mov
int3
push
mov
icebp
dec
adc
add
add
mov
push
loop
inc
add
and
mov
mov
pop
push
mov
call
push
dec
xchg
movb
adcl
inc
add
pop
in
pop
loope
dec
movsl
and
xchg
mov
xchg
xchg
lods
fwait
pop
dec
push
les
mov
xchg
or
addr16
jb
and
and
cli
icebp
ret
push
sub
dec
inc
add
xor
push
jns
mull
add
ret
or
aaa
xchg
insb
mov
cmpsb
sti
dec
ret
jno
dec
jne
sbb
jnp
xor
sub
lods
add
imul
cmp
xor
mov
jle
inc
adc
andl
pop
filds
adc
add
pop
pop
shl
push
dec
mov
xchg
mov
xchg
xlat
sub
das
addb
cld
or
inc
test
imul
pusha
add
and
je
int
mov
rolb
pop
call
mov
mov
ficoms
or
or
adc
arpl
lret
dec
jl
das
and
xor
fcmovb
lds
mov
mov
sbb
sub
movsl
pop
jb
daa
les
stos
mov
jbe
jno
xchg
jne
sub
xor
mov
xor
inc
cmp
dec
stos
jb
dec
mov
std
push
rorl
push
popa
xor
stos
xchg
fisttpll
push
xor
push
xlat
mov
ret
testb
addr16
jo
xchg
enter
stos
push
add
cltd
fstpt
bound
inc
jge
iret
xor
and
or
inc
int3
sbb
add
lret
sbb
addb
adc
fnstsw
lock
cmpl
push
in
lcall
mov
xlat
dec
and
ja
sbb
cmpsb
aaa
adc
add
fnstenv
stos
sar
pushf
jnp
loop
sub
pop
xchg
add
loope
push
pushf
mov
pop
and
testb
pusha
add
enter
out
rcll
in
cmp
outsb
in
outsb
add
jne
xor
nop
sub
arpl
push
xchg
and
xor
add
mov
xlat
ja
shlb
test
cltd
sahf
push
and
data16
shlb
sub
jp
and
jae
iret
dec
mov
lcall
inc
add
mov
sbb
repnz
imul
fsubrl
jns
dec
adc
adc
punpckhbw
imull
andl
mov
adc
add
or
rolb
in
add
cmp
dec
adc
imul
loope
dec
jae
add
outsl
cmpsb
xchg
std
or
fidivrs
and
or
dec
pop
jae
pop
add
mov
add
jne
mov
pop
fdivrs
cld
pop
in
rcrl
add
xchg
shrl
sbb
add
or
inc
dec
and
pusha
add
cltd
xchg
cmp
icebp
loope
enter
dec
or
xchg
stc
push
cmc
cmp
jbe
mov
push
cld
dec
out
rolb
lods
in
lds
call
cmc
rclb
int
jns
push
and
ficoml
out
in
negl
dec
js
ljmp
ja
popf
jno
add
arpl
cmc
ret
daa
dec
imul
dec
fcoms
mov
fisubs
ds
jmp
pop
inc
cmp
add
aaa
jmp
fildll
mov
mov
mov
test
add
aaa
stc
push
dec
adc
dec
xchg
fs
popf
pop
jmp
push
fbld
inc
pop
mov
dec
lods
add
push
mov
int
loopne
add
push
and
xlat
inc
add
xchg
and
cwtl
int3
push
xor
movl
je
add
shlb
pop
xor
cmovbe
je
pop
loopne
mov
icebp
dec
iret
push
aaa
mov
pop
sbb
cwtl
arpl
mov
or
push
aad
or
shl
mov
adc
mov
xor
or
mov
add
repz
mov
ljmp
add
sbb
out
jb
pusha
add
xchg
sbb
lods
lods
inc
add
add
sub
add
out
xchg
pop
mov
add
push
mov
mov
jg
add
mov
inc
push
ficoml
movb
mov
cmp
pop
push
jno
ret
movsl
push
roll
add
and
sahf
mov
cli
pop
ss
cmp
xor
dec
push
push
lahf
scas
dec
xchg
or
adc
xchg
mov
aas
lea
ret
mov
ja
xchg
lods
rorb
popf
int3
lret
jne
rcll
sbb
int3
and
jp
addr16
xorl
adc
fstl
sbb
fcom
sub
je
movsl
dec
sub
out
test
pop
fbld
es
add
cs
and
in
xchg
xor
sub
ds
add
test
xchg
mov
jecxz
push
push
xchg
imul
xchg
jns
inc
add
add
add
ret
test
dec
movb
mov
dec
dec
sbb
aad
push
sbb
cmp
cmc
mov
or
lcall
aam
add
daa
cmp
stos
push
in
sti
mov
das
push
dec
cmc
push
stc
loop
inc
add
cmpsb
sbb
in
cltd
push
push
jge
rolb
sbb
add
das
ret
mov
cmp
lock
add
mov
sub
pop
lea
out
ror
stos
popf
lock
insb
dec
arpl
lods
es
ret
dec
and
mov
add
mov
add
in
and
pop
jno
xchg
xor
xor
icebp
push
out
cli
daa
dec
jbe
aaa
jb
shl
std
dec
sbb
add
jbe
xchg
popa
mov
gs
xor
leave
cmp
test
outsl
or
add
nop
imul
sahf
mov
pop
faddl
jg
clc
fwait
sub
lret
lcall
jnp
addl
daa
jp
sub
enter
negl
push
push
or
stc
or
add
imull
mov
sub
in
test
mov
ret
pushf
and
out
lods
les
mov
mov
dec
out
inc
int3
xchg
dec
mov
mov
push
pop
stos
ficompl
leave
enter
and
mov
cmp
jb
fs
pop
pushf
outsb
adc
pop
xchg
filds
cmc
xchg
fidivl
or
mov
add
pusha
add
push
sub
aas
gs
mov
fcmovnu
outsl
and
jmp
jbe
add
call
pop
sbb
scas
xor
push
dec
scas
aaa
sbb
add
idiv
inc
out
cmc
jo
push
jne
sub
xor
add
xor
xchg
sbb
mov
or
ljmp
ret
push
push
adc
or
addb
mov
dec
sub
loop
mov
dec
test
mov
lret
test
jmp
lret
sub
fists
mov
xchg
mov
sub
mov
mov
inc
mov
leave
or
xor
mov
dec
loop
push
add
xchg
enter
xor
mov
fsubrl
bound
cmp
ds
mov
hlt
sbb
sub
sub
imul
shrl
fbld
cmp
push
clc
push
mov
ljmp
pop
push
mov
and
sub
mov
lods
xor
jp
sti
shlb
pop
xchg
adc
push
outsl
mov
inc
sar
pop
xor
ja
push
jnp
inc
inc
add
jmp
shll
push
or
xor
lret
les
add
mov
addb
xor
xchg
test
lea
and
dec
int
jle
mov
cmp
jle
and
xchg
push
shll
add
add
in
add
in
fstl
mov
fcomps
movsb
jp
pop
adc
add
call
add
or
mov
sbb
loope
enter
out
paddq
pop
imul
idivl
adc
add
add
mov
mov
sarb
popa
mov
lahf
testb
lods
ds
mov
out
shll
or
outsl
xor
or
roll
jg
jge
rorb
ja
rcrb
in
jae
movb
aas
cwtl
out
cmp
lahf
dec
add
jbe
push
das
test
ljmp
and
ljmp
mulb
mov
mov
push
fistpl
pop
add
movsb
or
xchg
pop
sarl
pop
enter
sbb
inc
add
repnz
mov
lea
add
jbe
xor
lds
jle
cmp
cmp
jb
ret
push
add
and
repnz
or
aad
jns
xchg
lcall
inc
jmp
jl
fs
and
out
push
xchg
jmp
push
xor
outsl
fwait
jnp
aad
add
out
addb
je
push
imul
mov
adc
pop
jecxz
cld
gs
xor
mov
add
gs
fnsave
sbb
add
adc
mov
int3
adc
xlat
jmp
fdiv
mov
mov
dec
pop
outsl
bnd
or
cmp
ja
push
scas
fbld
les
cwtl
lahf
push
mov
test
sub
jecxz
push
sub
fidivrs
xchg
and
scas
push
testb
sti
mov
repz
out
dec
jl
cmc
addb
pop
xor
enter
enter
cmp
scas
mov
mov
mulb
lret
add
dec
pop
ds
cwtl
inc
add
adc
out
int3
leave
call
into
and
dec
call
jl
int3
pop
fmuls
popf
push
fildl
jge
mov
xchg
ret
fistl
mov
pop
push
add
pop
int3
push
loope
cmp
jnp
add
mov
movsb
es
and
scas
pop
cmc
adc
inc
lahf
les
cwtl
pop
sub
pop
sub
push
imul
imul
in
popa
mov
add
sub
dec
dec
movsl
leave
pop
inc
adc
push
jmp
paddsw
mov
or
pop
or
pop
cmp
dec
push
mov
push
jae
imul
add
outsb
jnp
and
inc
or
out
xchg
adc
lods
leave
cli
rcr
inc
fwait
loope
mulb
add
cmp
fs
rcrb
addb
cmp
ret
cmp
cmpsb
adc
add
add
add
mov
add
jne
imul
addb
lods
addr16
jo
dec
test
addr16
pusha
add
popa
in
mov
jae
add
cmp
ds
std
xor
inc
add
add
adc
fcmovne
sub
mov
pushf
repnz
add
add
stos
outsl
sbb
in
rcrb
outsl
mov
xlat
mov
cmp
or
add
mov
add
sbb
inc
add
loopne
bound
fmull
inc
add
sti
mov
movb
addr16
jmp
sysexit
cli
cli
cmp
imulb
add
cmp
sahf
cmp
jle
add
mov
test
int3
ljmp
ficoms
mov
std
loop
adc
mov
cld
pop
fidivs
inc
ror
in
repz
add
dec
add
mov
enter
mov
lret
insb
mov
sbb
adc
pop
lret
shlb
mov
ret
dec
add
fstps
and
jle
mov
ja
outsb
fcomp
dec
dec
xor
jbe
mov
xchg
fiaddl
cwtl
cmp
and
int
cmp
inc
inc
add
add
sbb
pop
jp
mov
imul
xchg
stos
fimuls
add
and
pop
inc
add
jge
sbb
push
call
imul
into
adc
imul
mov
movsl
xor
in
test
aas
call
adc
sets
lds
jg
addb
orl
lods
fldl
inc
add
insb
or
fsubrl
inc
mov
sbb
add
jno
imul
add
roll
cli
pusha
add
add
add
pop
xchg
push
nop
dec
jp
sub
sbb
lods
jae
insb
sub
shrl
shrl
lcall
into
jge
ss
mov
and
arpl
xchg
rorl
cmp
cli
or
add
stc
mov
cmpsl
fwait
mov
fildl
add
cmp
mov
and
inc
add
jno
jnp
outsb
dec
bound
leave
nop
cld
xor
inc
dec
lret
and
jle
enter
adc
dec
les
or
add
xor
or
shrl
mov
nop
or
sar
out
jne
ss
lds
test
cmp
xor
movb
jnp
inc
mov
adc
stos
dec
lret
cmp
mov
pop
and
xchg
out
out
iret
push
add
mov
data16
leave
mov
addb
aad
mov
lods
outsl
cmc
jge
bound
fcom
inc
add
test
std
sub
cmp
enter
fidivrs
ret
add
fistpl
pop
sub
addl
sub
js
jb
lcall
pop
ficoms
les
outsl
stos
movl
pop
sub
lock
ljmp
out
mov
jl
loope
cmpsb
and
adc
cltd
lret
imul
cmp
imul
and
lahf
or
mov
aas
push
loope
aaa
mov
cmp
xor
push
push
add
imul
sub
sbb
clc
jo
out
mov
push
iret
sub
mov
fistl
mov
mov
sub
pusha
add
clc
mov
out
scas
xor
popl
push
adc
mov
dec
pusha
add
mov
adc
vhsubps
add
nop
sub
cmp
mov
fs
add
add
add
dec
mov
add
in
sub
mov
inc
push
iret
xchg
pop
lock
jno
mov
mov
ror
arpl
mov
faddp
mov
dec
addb
push
add
lock
mov
add
icebp
push
jne
add
pusha
add
rolb
inc
add
add
mov
enter
loope
inc
push
pop
movb
mov
ja
mov
movsl
pop
imul
popl
loop
insl
sbb
into
daa
pop
addb
pop
addl
aad
sub
dec
or
out
fmuls
js
xchg
mov
mov
add
pop
dec
mov
jb
dec
mov
test
dec
negl
add
or
test
mov
inc
add
mov
xor
pusha
add
push
ljmp
pop
dec
movsl
arpl
fs
add
test
xchg
aas
in
cmp
jecxz
add
fisubl
addb
jg
das
xchg
pop
jge
push
repnz
jns
in
jmp
xor
out
leave
repz
add
aas
xchg
inc
add
clc
orl
lret
mov
test
mov
and
dec
ret
cmp
jp
inc
add
fisttpll
jb
push
inc
add
call
cmp
pop
lahf
lds
push
add
jb
imul
out
xchg
adc
add
xchg
push
jne
adc
lea
inc
les
and
jg
dec
mov
jns
mov
add
cs
add
jmp
gs
fdivs
bound
dec
add
push
lcall
add
xor
psubb
cli
adc
add
pushf
addb
test
mov
xchg
aas
push
and
rorb
add
mov
inc
pop
lods
repnz
popa
cmc
idiv
rolb
sub
xor
unpcklps
and
das
add
adc
xchg
sub
push
adcl
rcrb
ficompl
mov
repz
out
and
xor
jb
aas
cwtl
test
pop
fldt
sahf
scas
addb
stos
int3
mov
les
push
sbb
sub
fistpl
out
xor
cmpsb
ror
add
loop
ret
xchg
pop
popa
mov
mov
arpl
sbb
movsb
jmp
daa
jno
sbb
pop
and
mov
jnp
xor
ret
sub
lret
xchg
dec
push
aaa
cs
dec
arpl
xor
mov
add
scas
lret
pop
std
pop
stos
jae
sti
dec
mov
mov
pop
jp
push
ljmp
rcrb
movsl
sti
ret
orl
bnd
cmpsl
adc
ret
push
aam
test
cmp
mov
lds
mov
test
xchg
hlt
push
add
push
push
leave
jle
add
insl
lods
stos
xor
cmp
and
xor
sbb
popf
jb
sahf
bound
inc
fwait
and
enter
push
sub
xor
int3
ljmp
aas
addb
mov
adc
dec
jae
cmpsl
push
push
xor
add
add
and
repz
test
inc
add
daa
and
dec
sbb
fiaddl
add
loop
jae
and
mov
gs
movl
xchg
jae
sahf
mov
loope
aaa
test
mov
pop
loop
dec
shl
jo
fwait
pop
jg
xor
arpl
nop
imul
fsubs
jg
add
addl
in
add
adc
loope
addr16
fldt
fsubrl
jae
sbb
lods
xchg
aad
nop
jnp
cwtl
daa
fdivs
add
movsb
fisubrs
mov
xchg
les
mov
cltd
out
nop
and
add
adc
setns
xchg
inc
add
gs
stc
sahf
fwait
jo
push
mov
add
xchg
adc
loop
add
scas
jmp
mov
pusha
add
movsb
fstps
fcmovnb
add
add
mov
push
mov
xor
lret
push
dec
dec
sub
push
outsl
into
pop
jnp
mov
inc
std
fxch
aas
lea
and
and
loopne
add
and
cmp
inc
add
cmp
out
addb
xchg
test
mov
ljmp
in
in
add
cmp
jne
push
addb
lock
hlt
stos
cmpsb
inc
add
inc
dec
mov
inc
inc
xor
stos
ds
inc
add
add
andl
std
lea
add
and
xor
and
mov
mov
ss
xlat
dec
push
push
pop
rorl
icebp
mov
mov
mov
imul
dec
mov
add
jne
cmpsl
cmc
addl
push
mov
dec
loop
or
xchg
daa
xlat
xchg
pop
xchg
aad
addr16
sar
sub
cltd
out
pop
iret
out
mov
cmp
add
mov
dec
pop
add
test
adc
pushf
lods
inc
aaa
imul
repz
inc
add
add
mov
cmpsb
xchg
jmp
addb
fldenv
rolb
ret
push
data16
add
fsub
popf
sbb
xor
push
imul
pop
adc
ljmp
in
mov
aad
repnz
and
jne
iret
mov
stos
pop
jb
adc
pop
pop
das
xor
add
movsb
cmp
xchg
dec
or
sbb
inc
add
push
fldenv
jl
cmpsb
cld
fcmovnu
inc
cmp
sub
shll
xchg
cltd
imul
mov
add
faddl
data16
add
add
push
xor
push
decl
cmp
pop
sub
or
xor
sbb
add
fld
add
push
ja
pop
addb
addr16
mov
mov
addb
mov
pushf
adc
dec
popf
and
add
jl
jge
mov
call
push
mov
fwait
fwait
gs
or
add
test
add
and
mov
fwait
or
cmpsl
je
add
add
sar
mov
call
jnp
mov
adc
out
scas
pushf
cmp
shr
iret
push
movb
sbb
imul
icebp
sub
cwtl
jno
dec
out
rcrl
inc
or
cmp
rcrb
jbe
or
xchg
hlt
mov
adc
or
add
xor
imul
jae
into
nop
call
in
rolb
mov
jle
bound
mov
push
movsl
pop
mov
cwtl
sti
mov
lcall
mov
lcall
stos
cmp
sbb
pop
xlat
jns
fcomi
add
lds
xchg
cmpsb
jle
enter
mov
xor
push
dec
sarl
or
sub
inc
add
mov
xor
jmp
cmc
adc
xchg
jp
push
loopne
stos
xchg
mov
dec
xlat
adc
and
adc
cmpsb
lcall
dec
xchg
jnp
loop,pt
cwtl
subl
nop
in
and
sub
repz
adc
push
mov
pop
pop
fcomps
ss
sub
fldcw
mov
inc
add
pop
xor
cmp
jbe
popa
dec
pop
pop
lret
lcall
icebp
cmp
ljmp
inc
add
push
add
inc
jmp
andl
inc
add
adc
loope
add
mov
jmp
cmp
ret
call
rorb
arpl
rcrb
mov
cmp
push
add
add
dec
jbe
fistps
sbb
cmp
not
sub
in
mov
cmp
stc
and
jb
add
popf
xchg
mov
cmp
add
jno
add
inc
add
cmp
lret
push
pop
ja
imull
sbb
add
push
add
push
outsb
pop
hlt
jmp
dec
xchg
cmp
add
cmpsb
hlt
xchg
mov
mov
outsl
aam
fstl
jbe
aam
inc
cli
gs
mov
aam
dec
inc
add
xchg
fsub
jne
add
adc
repnz
adc
insl
scas
addl
sbb
scas
addr16
dec
mov
jns
jne
aam
add
and
push
mov
add
mov
scas
nop
and
frstor
mov
xor
lock
mov
inc
add
std
jg
mov
addr16
lret
dec
out
es
in
lea
ja
cli
or
sbb
dec
hlt
push
jl
in
adc
and
pop
xchg
inc
push
push
dec
and
addb
jnp
push
sub
mov
cmp
xor
mov
je
inc
add
in
icebp
and
adc
xor
inc
lock
jl
jge
insl
mov
add
shr
call
dec
xor
movsb
rclb
mov
addb
mov
pop
xchg
fisttps
insb
loop
sbb
scas
push
out
lds
dec
dec
dec
into
mov
and
out
add
pop
inc
cmp
out
fdivrs
mov
fwait
add
sbb
popf
sub
adc
jp
push
aas
and
shlb
sub
pop
xlat
sub
push
pushw
xchg
loop
sub
movsl
daa
mov
cli
or
cmovae
jle
lods
pop
cli
mov
mov
xchg
pop
lret
cmp
loope
cmp
push
cld
cmp
flds
inc
add
add
inc
push
or
jae
or
sub
imull
enter
and
repz
lock
add
ret
in
subl
add
ljmp
or
test
ljmp
mov
pop
aaa
icebp
gs
mov
cli
adc
mov
fcmovne
xchg
insb
outsl
add
mov
inc
mov
mov
mov
das
or
das
and
icebp
xchg
xchg
push
rolb
int
add
scas
inc
sub
mov
addr16
jecxz
popa
pop
jae
push
push
add
fsubr
push
es
cmpsl
movb
std
pusha
add
subl
dec
sub
jg
sqrtps
sahf
push
push
sbb
or
mov
jne
lea
rcrl
test
arpl
jno
add
cmpsb
pop
inc
add
adc
sub
call
inc
add
jle
ja
adc
pop
xchg
jae
add
dec
sub
or
mov
arpl
jge
lods
jge
add
imul
fs
push
mov
jl
add
xor
mov
iret
mov
add
cmp
dec
pop
inc
add
ss
jo
xor
hlt
inc
and
pop
pop
or
add
push
add
add
mov
xor
ds
pop
inc
lahf
ljmp
hlt
test
orl
pop
cmp
std
insl
stc
pop
jl
test
out
xor
xchg
mov
push
pop
clc
xor
xlat
mov
pop
mov
pop
xor
scas
mov
insl
jl
fs
rcpps
leave
adc
and
mov
mov
cwtl
dec
je
add
nopl
hlt
lahf
daa
pop
lods
enter
lock
out
roll
and
mov
add
aas
or
adc
add
jb
and
pop
cmp
mov
loop
aaa
push
add
inc
stos
lods
jno
or
pop
inc
mov
cmpsl
sub
fidivl
sbb
add
retw
cmp
or
mov
inc
add
adc
clc
sahf
ficoms
test
je
jmp
inc
add
adcl
pop
pushf
add
or
xorl
testb
mov
xor
arpl
push
cmp
test
jae
sbb
or
jp
mov
mov
sbb
clc
xchg
sub
ljmp
filds
cltd
aam
and
cmp
add
sub
adc
xor
xchg
mov
adc
add
xchg
in
mov
pop
inc
push
movsl
mov
movsb
mov
push
cmp
aad
push
add
cmpsb
sbb
add
lret
or
or
movsl
or
add
add
mov
mov
add
stos
addb
sub
test
cmpsb
loopew
inc
jge
pop
addb
add
dec
inc
add
lret
xor
or
jecxz
cmp
fcoml
test
xor
pop
mov
fiaddl
outsl
push
and
mov
add
sbb
add
in
xchg
shll
add
xor
ljmp
pop
adc
add
mov
add
add
push
fisttpl
out
sub
les
das
imul
es
cli
push
cmp
inc
mov
les
jl
clc
jns
int
jg
sbb
mov
cmp
mov
adc
add
add
jecxz
je
call
stc
cmp
js
mov
cltd
and
jnp
or
inc
dec
movsl
mov
je
push
jno
mov
dec
pop
cmp
jne
in
add
push
push
movsl
mov
rolb
xchg
sub
mov
jmp
aaa
mov
ficompl
add
addb
add
cmpl
lcall
pop
xor
pop
fadds
mov
add
es
pop
cwtl
cmp
aaa
mov
negb
or
mov
addb
outsb
in
mov
fldenv
lods
lcall
mov
test
movsl
in
int3
ja
addb
mov
loop
mov
xlat
mov
inc
jmp
adc
bound
cmp
call
inc
add
mov
xor
jo
mov
cld
dec
or
or
jae
pop
fmulp
mov
addb
cwtl
les
popa
lcall
and
pop
push
add
inc
les
add
adc
cmpsb
pushf
sub
and
jno
test
sub
test
insb
sub
cltd
jnp
sub
ret
das
sbb
xor
enter
jecxz
mov
call
add
sti
cmp
imul
and
aas
shll
dec
ret
scas
lcall
pop
fwait
cli
and
hlt
push
dec
dec
mov
addb
cld
popf
jecxz
add
mov
imulb
arpl
mov
fists
out
imul
lcall
mov
push
stos
dec
cmp
cmpsl
xchg
or
stos
ret
sbb
orl
sub
add
mov
cmp
xor
adc
ret
sbb
jbe
shlb
nop
movb
sbb
adc
jne
out
push
add
inc
mov
adc
dec
cli
call
es
lds
gs
cmp
ret
loope
outsl
hlt
or
loop
add
cmp
insl
outsl
enter
icebp
icebp
icebp
repnz
lret
adc
lods
pop
and
jl
push
push
add
cmp
je
push
jle
nop
in
adc
mulb
cs
push
dec
ss
leave
imul
jno
mov
sbb
xor
mov
jnp
cmp
push
inc
cmc
mov
mov
add
bound
sbb
mov
dec
les
sub
sub
push
cmp
ja
sbb
rolb
das
sub
xchg
test
lcall
cli
les
lds
or
add
xor
mov
loop
dec
sbb
adc
add
lods
outsl
gs
jnp
sub
sbb
pop
jle
mov
repnz
sub
pop
cwtl
mov
pop
mov
jl
call
out
jp
push
mov
push
shlb
mov
xchg
mov
rcrl
mov
xchg
stc
pop
xor
xor
call
adc
ffreep
add
shlb
aad
adc
add
jle
sti
repnz
cwtl
fmul
cmp
inc
cmc
test
lret
mov
push
mov
outsb
sub
fwait
push
cmp
cmp
popf
sbb
sti
xor
test
add
xchg
mov
add
ret
enter
mov
std
filds
fwait
mov
lock
enter
ljmp
xor
loope
xor
data16
iret
nop
push
push
lods
or
mov
adc
add
dec
inc
add
jecxz
ret
fcompl
push
and
out
mov
out
xchg
adc
jno
dec
or
aaa
xor
push
test
xchg
inc
rol
add
jne
scas
jne
imul
out
loope
movsb
inc
mov
or
mov
adc
mov
loop
and
stos
ret
xlat
cmp
repnz
push
xor
inc
fistpl
xlat
addb
dec
das
ja
stos
daa
jp
testl
mov
movb
dec
inc
add
xchg
in
sbb
add
enter
add
and
aas
pop
call
inc
add
inc
in
mov
dec
dec
movsb
cltd
mov
repz
add
inc
jecxz
adc
sbb
jge
add
cld
popf
inc
add
add
mov
xchg
mov
jo
popw
sub
and
fs
jbe
xlat
mov
in
clc
stos
lods
mov
je
jmp
mov
add
add
inc
add
fadds
arpl
jl
aad
mov
aaa
push
lar
int
mov
mov
add
jnp
mov
rorb
mov
ror
addr16
fdivs
sarb
in
mov
rol
jo
adc
xchg
xor
xor
and
xchg
in
add
or
mov
push
or
test
fcmovne
push
sbb
fisubs
fimuls
lods
js
add
negl
adc
lcall
int3
xor
stc
push
jle
or
and
addl
mov
es
lods
pop
sbb
add
xchg
xchg
je
add
lahf
mov
in
and
mul
clc
mov
push
mov
lcall
divb
mov
mov
scas
loop
jb
mov
pop
mov
arpl
xchg
ljmp
or
add
jae
test
ret
sub
jbe
mov
or
jecxz
dec
sbb
repz
aaa
cmp
in
push
push
add
movsl
xchg
nop
js
ds
or
jnp
fdivl
dec
mov
lret
aam
imul
add
push
pop
testl
add
fcmovnb
add
iret
lods
xorl
jae
and
push
add
out
sub
add
mov
xchg
add
cmp
sahf
or
add
insl
outsb
repnz
xor
je
lcall
mov
add
in
aam
mov
dec
push
dec
xchg
and
out
cld
data16
mov
inc
add
lret
add
and
mov
cmc
or
int
mov
sbb
xchg
pop
xor
push
rcl
test
ja
arpl
push
push
or
add
aas
push
and
aas
sti
inc
mov
mov
mov
and
aas
push
inc
add
add
inc
sub
fisttps
mov
add
mov
icebp
movsl
mov
jp
push
iret
xchg
cmp
push
icebp
pop
xor
push
into
sub
and
into
bound
std
fisubrs
lea
addb
test
sbb
pop
dec
jg
cmp
cs
div
sub
in
jmp
add
xor
xor
push
xor
movb
pop
imul
out
scas
push
sub
or
cmp
repnz
push
movsb
sbb
dec
adc
out
enter
xor
sbb
or
and
add
jp
mov
push
inc
add
lret
adc
xor
push
cmp
add
push
lds
leave
int3
ret
push
xlat
ds
push
and
push
rcl
mov
push
lcall
ja
push
call
rolb
ss
pop
movsl
jle
push
loopne
push
mov
stc
ljmp
ljmp
fldt
sti
mov
call
scas
adc
mov
fsts
xchg
repnz
sub
daa
push
cmp
fsin
rcll
lock
popf
push
outsb
cmp
add
test
sbb
rolb
fldt
jge
out
push
scas
fsubs
lcall
lock
cld
xchg
or
pop
sbb
and
adc
int3
xchg
push
adc
sbb
xor
mov
int3
into
xor
inc
fsubrl
add
add
inc
mov
add
add
pop
movb
push
sti
dec
outsb
sbb
jmp
add
cmp
cmp
int3
addr16
fbld
mov
pop
add
cli
rolb
add
stos
xor
add
divb
pop
insl
mov
mov
push
aam
shl
popa
out
ds
pop
push
test
rclb
cmp
add
sbb
jnp
dec
xor
mov
cltd
pop
pusha
add
lds
int
test
in
push
lods
pop
leave
sub
mov
rolb
add
mov
dec
push
test
sub
adc
test
movsl
push
adc
jle
aad
repz
out
movsl
fcoml
sbb
sti
cmpsb
loop
fsubr
push
stos
push
add
adc
push
icebp
push
jl
jmp
pop
push
fisttps
fs
pop
sbb
dec
roll
xor
int3
cwtl
mov
inc
add
sbb
add
dec
out
outsl
outsl
es
gs
fcoms
pop
mov
call
mov
fnstsw
fdivrs
pusha
add
or
fsubrl
addb
fwait
stc
jp
add
mov
xchg
xorl
mov
add
das
ficoms
dec
jbe
dec
sti
mov
imul
and
lahf
xchg
cmp
push
add
cmp
jmp
jmp
js
lcall
ret
jp
lret
dec
nop
iret
inc
add
repz
mov
adc
adc
cvtps2pd
inc
add
cmp
nop
pushl
lret
mov
inc
add
and
mov
or
or
je
cli
movsb
sub
fs
add
add
and
inc
add
fidivrl
enter
jb
mov
dec
mov
into
and
mov
dec
add
aad
clc
inc
add
pop
mov
push
in
mov
inc
ja
mov
out
pop
cmp
add
xchg
mov
out
and
xchg
mov
jae
imul
add
jb
push
mov
sub
pop
xlat
mull
inc
add
xchg
mov
mov
cmpl
repz
inc
add
mov
out
jge
pop
arpl
add
add
sub
rorl
outsl
scas
fisttpll
fs
xor
aaa
cwtl
push
add
inc
add
pop
cltd
mov
mov
cmpsb
pop
pop
dec
add
inc
inc
add
cwtl
add
test
lods
push
jmp
inc
add
jbe
and
pop
pusha
add
fnstsw
movb
mov
bound
adcl
leave
mov
mov
test
mov
data16
jmp
out
adc
jae
mov
nop
ljmp
and
cmpl
lcall
fisubrs
pop
outsb
shll
ja
inc
xor
ljmp
repz
sahf
dec
scas
shll
xor
pop
xor
add
in
out
sbb
scas
jg
cltd
jno
pop
sarl
movb
adc
arpl
inc
add
add
mov
push
xlat
inc
ret
mov
mov
adc
cwtl
add
inc
add
xchg
mov
mov
in
sub
xchg
dec
add
daa
daa
dec
pop
sbb
sub
test
push
cli
adc
mov
cmp
pop
mov
mov
icebp
insl
pop
dec
mov
fsubp
call
xor
add
sub
idivl
add
add
mov
lea
add
or
dec
push
or
add
outsb
adc
cmpsl
das
enter
je
push
add
sbb
push
lret
mov
ret
out
xor
mov
sbb
pop
push
add
mov
jg
and
adc
and
dec
sub
aas
pop
add
mov
leave
addb
icebp
and
lret
ss
xor
jbe
and
sbb
mov
add
addb
xor
addl
mov
push
sbb
add
or
std
sarb
ret
pop
mov
ffreep
add
add
int
jmp
leave
loope
pop
mov
pop
jp
sub
xchg
dec
inc
add
lret
mov
push
xor
repnz
add
lcall
lock
sbb
ja
loop
into
pushf
jno
and
or
repz
lret
loop
and
jge
jl
cmpsb
inc
mov
inc
add
out
rolb
into
leave
cs
add
sbb
push
dec
push
out
das
push
add
cmovp
pop
mov
mov
icebp
cmp
in
arpl
mov
sub
cmc
outsl
xchg
cs
in
add
nop
or
dec
and
push
add
add
in
outsb
lahf
push
or
inc
sub
les
push
push
imul
pushl
std
sahf
xor
insb
push
rolb
pusha
add
sti
ret
push
and
mov
inc
add
adc
add
cmpsb
out
dec
leave
adc
es
ror
adc
movsb
cmp
jns
xor
cmpsb
bound
inc
add
hlt
pop
xchg
xchg
adc
aam
or
dec
sub
adc
sub
sahf
jno
xchg
dec
dec
addb
jp
aad
fdivrs
ret
or
cmp
test
das
repz
pop
xchg
pop
dec
push
push
xchg
or
add
addb
movsl
stos
push
jnp
mov
inc
in
jb
inc
add
js
fs
fisubrs
daa
push
dec
mov
fnstcw
outsb
movb
xor
and
sti
pop
and
shll
fs
addb
mov
or
pop
add
sti
jo
mov
xchg
test
add
lods
icebp
jle
call
out
push
mov
out
mov
lret
std
mov
and
push
jp
clc
call
inc
add
cmpsl
testl
mov
push
sbb
add
mov
stos
push
mov
push
out
inc
add
sub
sub
cltd
mov
sahf
es
into
insl
int3
lock
ret
sbb
adc
add
jno
add
xchg
cmp
add
movsl
aad
stos
dec
mov
repnz
aam
lret
mov
mov
sub
xor
pop
mov
sti
cmpsl
roll
mov
xchg
or
push
sub
mov
mov
add
mov
je
iret
loopne
sub
add
test
pop
nop
inc
sub
fildl
sbb
scas
sbb
stc
mov
sbb
ret
pop
push
fildll
add
addr16
inc
add
pop
sbb
inc
add
add
add
mov
pop
push
dec
fwait
pop
mov
add
push
les
adc
xchg
and
mov
pop
ss
add
push
mov
dec
jecxz
push
add
loopne
push
inc
push
pop
push
add
add
aam
xlat
push
sbb
add
imul
lea
leave
mov
inc
js
add
addb
loop
scas
aaa
lds
add
test
movl
push
enter
push
adc
sbb
jg
add
stc
xor
push
add
fldl
xchg
nop
push
pop
adc
dec
fdivs
inc
push
pop
add
es
enter
xchg
cmp
add
xchg
repnz
test
rcll
cmpsb
dec
loopne
jle
aad
jge
jecxz
mov
sbb
sub
dec
jecxz
stos
mov
push
jns
push
add
xchg
push
mov
out
data16
mov
cmp
add
pop
movb
pop
add
sbb
icebp
mov
je
add
cmp
ret
sbb
push
jo
mov
adc
mov
mov
add
cmp
dec
icebp
iret
in
pop
pop
cwtl
mov
imul
xchg
inc
jnp
add
icebp
or
mov
add
arpl
fistpll
sbb
popf
es
into
dec
cltd
dec
adc
add
add
sub
fucomi
xchg
mov
mov
ret
fs
fwait
enter
add
rolb
jmp
addb
js,pn
pop
push
xchg
jnp
pop
lock
add
les
mov
xor
clc
pop
je
jno
add
add
sbb
jne
push
cmp
rcrb
outsl
sarl
mov
out
mov
shll
adc
cltd
ja
adc
xchg
nop
fistps
mov
scas
fsts
xchg
imulb
bnd
inc
shr
or
and
ds
sub
xchg
sub
inc
clc
daa
mov
std
mov
add
mov
std
push
add
inc
xchg
lock
enter
xor
ja
aas
cmpsb
push
mov
movb
add
mov
or
bnd
out
sub
rolb
sub
dec
or
push
scas
push
mov
add
sub
sub
stos
jp
fildll
push
push
aaa
stos
pusha
add
mov
scas
ror
lcall
loopne
mov
stos
in
jne
and
cmp
inc
add
dec
dec
fstl
lret
add
js
pop
std
scas
push
addb
jl
cmpsl
mov
jp
in
mov
adc
dec
xor
push
inc
pop
movsb
jne
mov
or
xchg
divl
sub
pop
xchg
xor
push
xor
out
sbb
xchg
dec
sbb
popf
lods
adc
mov
xor
mov
enter
daa
mov
lret
int
cmpl
add
lcall
dec
arpl
insb
or
pop
mov
test
repnz
pusha
add
xchg
aam
mov
add
sbb
sub
loopne
dec
rclb
into
cs
addb
push
xchg
ss
mov
rolb
mov
popf
push
and
push
addr16
lret
mov
imulb
jmp
push
cmp
out
or
jae
mov
pop
mov
ret
mov
inc
dec
insl
shll
adc
test
pop
icebp
push
cmc
jg
ret
jp
sub
pop
dec
mov
rolb
inc
cld
pop
push
call
mov
ret
sub
push
jno
cmp
mov
lds
and
or
cwtl
cmp
lret
fwait
into
push
cmpl
push
push
sbb
movsb
cmp
mov
cmp
inc
add
add
lret
sub
adc
xor
stc
adc
dec
rolb
test
inc
add
sbb
call
outsb
clc
aas
mov
jmp
mov
jns
pop
xchg
int
fnstcw
mov
fsubrl
mov
arpl
mov
out
test
test
add
mov
add
add
dec
in
add
out
ror
cmp
xchg
adcl
test
sti
fldt
dec
ret
or
add
addb
push
push
loopne
add
imul
inc
shrb
sbb
add
pushf
fstpt
xor
adc
jne
movsb
stc
in
pop
jle
cltd
test
sbb
and
adc
in
adc
aam
dec
ret
iret
es
add
mov
je
addb
add
pop
gs
pushf
test
jecxz
pop
lret
add
push
gs
push
in
push
mov
out
mov
addb
js
fsubl
cmpsl
xchg
pop
sub
test
rolb
xchg
es
add
sub
fimuls
ret
das
aad
cmpsb
sarl
movsl
testl
jecxz
cmpsl
xor
dec
mov
fbld
insl
mov
add
pop
cld
inc
inc
add
push
xchg
sbb
popf
pop
inc
add
pop
jns
add
aaa
push
popf
cmp
and
dec
xor
cwtl
rclb
ds
pushw
add
push
mov
mov
dec
lods
in
pusha
add
dec
push
and
adc
push
pop
push
xor
sub
mov
add
popa
sub
add
into
or
mov
adc
fidivs
push
das
push
mov
bound
mov
mov
jmp
rorl
pop
jge
sbb
adc
repz
mov
outsl
sub
out
in
fcmovb
mov
imul
test
addr16
in
xlat
loop
in
hlt
test
jecxz
insl
cs
mov
mov
pop
rcrl
add
add
iret
jb
gs
test
jns
cmpsb
imulb
mov
inc
add
in
shll
add
mov
inc
add
add
arpl
std
mov
xchg
loope
mov
xchg
xor
jnp
enter
sbb
mov
sub
dec
xchg
or
out
mov
add
shlb
xchg
scas
mov
sarl
adc
outsb
xchg
inc
add
add
sub
test
in
mov
inc
add
je
add
sub
add
pop
mov
and
pop
int3
call
and
inc
add
mov
ss
and
sub
sub
lods
loope
aam
pop
dec
adc
outsb
call
jp
add
data16
mov
lahf
pop
fidivl
add
cmp
lahf
addb
inc
add
ja
add
dec
push
stc
add
inc
add
popf
push
lret
dec
inc
cmp
jbe
into
mov
ficoml
inc
mov
mov
arpl
mov
test
stos
sub
jmp
enter
outsl
in
mov
sbb
jl
mov
aaa
in
pop
rolb
je
jg
cmc
push
pop
xorl
lock
popl
push
mov
jle
movsb
xlat
jo
sbb
addb
sahf
lods
jne
divb
dec
jmp
sbb
push
lods
pop
int
push
popa
cmp
aam
add
jo
dec
lea
push
push
jo
xor
stos
mov
popa
fadds
push
jbe
test
pusha
add
adc
xor
fwait
int
add
xor
add
ficoml
and
out
sub
outsl
insl
call
push
adc
or
add
bound
scas
adc
mov
mov
mov
xor
push
enter
adc
data16
pusha
add
dec
mulb
inc
fsubs
and
loop
repnz
dec
add
rorb
or
rcrl
out
jmp
in
push
xchg
xor
test
lds
inc
or
mov
enter
dec
dec
xchg
mov
scas
iret
adc
mov
jbe
pop
loop
mov
inc
add
cmp
mov
push
dec
dec
xchg
mov
cmp
xchg
add
add
popa
inc
add
aaa
add
jl
out
xchg
rolb
adc
inc
mov
aad
in
pop
xchg
fistpll
mov
lret
jne
push
add
and
sbb
push
inc
add
jo
sub
push
aaa
fsts
mov
notl
into
mov
movb
hlt
addb
mov
add
cltd
subl
fidivrl
pop
fstpl
mov
das
cmp
add
sbb
mov
ret
loopne
lret
mov
mov
cmp
jle
pop
lock
mov
mov
or
arpl
add
addb
fs
adc
addb
lea
add
clc
ljmp
push
pushf
inc
gs
xor
push
add
scas
loop
sbb
cmpsb
mov
mov
sbb
popf
stc
icebp
je
cmp
cltd
stos
mov
sub
sub
inc
hlt
xchg
push
jmp
cmp
sub
dec
mov
fidivs
jne
out
imul
dec
mov
add
pusha
add
adc
jge
pusha
add
clc
and
adc
xor
xorl
dec
lods
xchg
std
sub
fcompl
in
lock
pop
pusha
add
ljmp
add
mov
xor
xchg
repz
daa
inc
std
adc
inc
add
push
add
cwtl
push
dec
jno
mov
pop
cmp
dec
adc
sti
nop
ret
lea
fmul
xor
ret
push
push
pop
mov
popa
rcll
in
cli
test
add
invd
cmp
or
int
add
jnp
mov
mov
jnp
pop
inc
ljmp
xor
stos
lret
popf
insb
insb
sub
inc
add
test
adc
pusha
add
add
xor
hlt
cltd
inc
daa
mov
add
data16
adc
fsts
push
stos
xchg
add
push
mov
gs
mov
sub
push
mov
inc
add
data16
ret
or
xor
iret
jae
sbb
lcall
xchg
adc
mov
mov
sub
add
sti
ret
sub
cs
jo
test
push
loop
out
cmp
add
xchg
insb
imul
xor
sbb
adc
add
in
scas
mov
cmc
xchg
xor
movsb
out
mov
xchg
sub
fwait
or
push
dec
ret
mov
add
ss
les
fdivr
sub
pop
fistpll
stos
js
sarb
out
or
xor
adcl
fisubl
sub
or
pop
adc
mov
sbb
jle
adc
xchg
shlb
mov
scas
dec
lods
jle
rcrb
out
lods
inc
add
mov
lods
ljmp
das
or
mov
push
push
xor
pusha
add
add
push
in
mov
mov
mov
data16
popf
xchg
mov
mov
jnp
add
lret
nop
jno
pop
pusha
add
jne
push
mov
scas
jmp
sub
xlat
cmp
xchg
xor
call
inc
sbb
push
add
or
sti
mov
mov
mov
adc
add
mov
add
int3
ljmp
xchg
rolb
fimuls
out
cmp
adcl
adc
mov
pop
call
or
inc
negb
pop
xchg
pop
test
pop
sub
fiaddl
leave
push
jae
in
xchg
xchg
in
mov
addb
push
pop
and
cmp
push
dec
mov
xor
in
sub
or
add
cmpsl
jl
imul
fcompl
icebp
jno
dec
movsl
push
cwtl
scas
xchg
cli
add
push
jg
dec
push
pop
fmuls
shlb
negl
imul
and
mov
xor
xchg
fs
nop
mov
pop
dec
data16
jo
clc
shr
or
mov
add
popf
jmp
cmpsb
inc
add
dec
fwait
xlat
movsb
mov
nop
add
jae
adc
sar
idivl
adc
movb
pop
sbb
mov
and
out
add
jbe
mov
or
add
push
jecxz
pop
inc
iret
jae
push
lahf
outsb
popa
movsb
in
insl
sbb
repz
jbe
jmp
mov
or
out
enter
aad
xchg
scas
mov
cmp
add
mov
lods
jg
gs
outsb
rclb
xor
pop
pop
in
push
pop
jmp
mov
pop
pusha
add
fisttps
adc
cmp
ror
jmp
jmp
xchg
sbb
call
xor
xor
adc
std
lcall
add
sarl
lahf
push
shlb
addb
cmp
cmp
sub
sub
out
js
add
push
mov
or
aad
test
nopl
and
sub
dec
jmp
lahf
add
or
inc
dec
mov
xor
add
pop
add
xor
mov
insl
and
push
daa
xor
xchg
cltd
inc
add
jg
test
mov
in
pop
lea
push
add
jns
dec
dec
cmp
and
jb
out
out
pop
or
xor
aad
pop
push
push
clc
sub
fmull
je
push
lahf
addb
ss
mov
dec
lcall
insb
sahf
push
int
inc
add
lock
xor
dec
pop
lock
ja
lcall
loop
out
adc
sub
ja
adc
jne
cmc
xor
add
push
es
mov
daa
outsl
popa
pusha
add
sbb
inc
mov
sbb
inc
add
mov
scas
out
dec
outsl
adc
inc
add
adc
repz
xor
jo
xchg
dec
mov
fcmovnb
add
inc
je
jg
sub
xlat
and
call
shr
sub
mov
aas
adc
inc
outsb
add
add
dec
ss
add
pop
jno
and
cmc
call
inc
add
sub
clc
cmp
scas
es
add
addl
xchg
xchg
fdivs
lods
and
push
add
aad
pop
xchg
shl
push
push
enter
cwtl
test
cmp
mov
add
inc
add
addb
aam
inc
add
inc
pushf
out
test
cmp
es
add
sbbl
incb
jnp
cmp
push
inc
popa
test
add
hlt
mov
fisubl
add
pop
pop
cmpsl
in
add
in
inc
add
push
pop
scas
inc
add
pop
jle
xor
stc
inc
add
fbstp
popf
pusha
add
pushf
cmpsb
mov
lods
mov
mov
dec
push
cmp
leave
out
or
jle
fcoml
stc
inc
gs
std
dec
dec
sarb
push
rcrl
xor
mov
test
aad
add
add
addr16
jmp
add
test
fstpt
cmp
je
lock
mov
in
int3
or
leave
mov
xor
in
mov
xor
shl
add
mov
xchg
push
pop
pop
xchg
lock
js
and
movsl
cmpsl
roll
mov
sbb
lret
xor
icebp
add
out
xor
inc
xchg
mov
fsts
into
mov
pop
inc
xchg
fwait
ret
les
pushl
sub
pop
mov
rcl
test
mov
inc
cltd
sahf
xchg
fisubl
je
xchg
jmp
fs
inc
add
jg
outsb
ret
stos
and
jbe
stos
scas
dec
lretw
jo
pusha
add
fimuls
pop
int
add
cs
cmp
pop
lea
je
push
add
aaa
in
add
icebp
addb
mov
int3
lret
int
dec
enter
mov
lcall
jns
in
movsb
or
popf
sbb
lods
sub
adc
cmc
hlt
inc
add
xchg
dec
outsb
mov
add
mov
add
call
adc
or
negb
mov
add
fiadds
std
popa
test
dec
arpl
xor
jmp
or
mov
or
shl
iret
dec
push
cltd
dec
xchg
popa
cs
jno
inc
inc
add
loopne
xor
stos
cmpsl
outsb
cmp
and
mov
mov
mov
push
lea
out
and
add
cmp
cwtl
ret
bound
sub
push
push
mov
push
cmpsb
push
fisttpll
mov
jecxz
add
mov
insb
jecxz
add
dec
ret
insb
sub
rolb
or
std
pop
ja
sti
mov
or
std
inc
add
mov
add
jno
mov
add
lahf
mov
xlat
bound
imul
sbb
hlt
dec
mov
in
ffreep
add
jb
pop
pop
push
sbb
pop
add
fs
mov
dec
inc
sbb
push
fistl
dec
pop
sub
jne
add
or
xor
cmp
or
add
add
test
mov
int3
jl
in
dec
inc
add
add
movsl
jge
scas
cmc
dec
xchg
mov
or
ret
int3
or
fcoms
daa
inc
push
shrb
test
les
daa
push
mov
add
mov
inc
add
sbb
sbb
fadds
xor
add
je
sbb
mov
sbb
dec
mov
add
dec
xchg
ret
lea
imul
mov
mov
push
xor
insl
and
or
cmpsb
jle
push
adc
bound
sti
jecxz
jle
nop
pop
mov
sbb
cmp
mov
call
in
jp
test
movb
jnp
stos
test
sbb
mov
lahf
lahf
adc
cmpsb
les
cmp
pop
cmp
pop
dec
sub
cmp
lods
ss
xlat
das
mov
ss
lret
gs
jne
adc
add
arpl
out
ljmp
in
push
xchg
pop
roll
fldenv
les
mov
lcall
mov
dec
or
xchg
sub
mov
ret
int
js
add
and
js
jo
add
inc
add
gs
repz
les
push
pop
xor
test
int
hlt
sbb
out
cli
dec
mov
test
les
push
leave
sbb
or
orps
mov
push
addb
es
cs
add
add
adc
mov
rcrl
rolb
add
jecxz
dec
mov
movb
mov
add
lods
mov
jae
mov
test
add
add
push
push
rcl
and
inc
stc
outsb
cli
sub
add
aaa
addb
push
dec
cmp
xchg
stc
xor
rolb
add
or
call
push
in
ljmp
mov
fcomi
dec
pop
stc
test
in
jae
mov
jmp
mov
mov
pusha
add
jecxz
add
jmp
add
pop
push
loop
test
push
fwait
cwtl
and
ljmp
xchg
sub
pop
mov
insl
add
ljmp
nop
mov
ret
or
mov
in
mov
lret
addb
add
push
testl
mov
jnp
enter
insb
dec
sub
popf
fdivs
dec
in
jecxz
jg
inc
add
mov
add
push
lcall
arpl
iret
daa
enter
out
inc
movb
sbb
fidivrl
lds
mov
sub
pop
or
in
adc
push
int3
xor
and
in
ret
in
aad
fistps
scas
sahf
xor
or
mov
aad
dec
push
pushf
shll
mov
cltd
fwait
shld
add
and
pop
mov
nop
scas
pop
std
mulb
rcr
js
ret
mov
mov
sbb
add
pop
pop
arpl
stos
fisubrs
inc
add
lock
lock
sbb
push
xchg
es
int3
movsl
fidivs
popf
mov
mov
lea
icebp
dec
push
aaa
fs
xlat
mov
outsl
push
decb
push
add
cmc
ret
sbb
push
push
aam
cwtl
and
mov
adc
and
mov
ret
div
dec
pop
inc
mov
ja
and
xchg
dec
xor
addr16
add
mov
inc
add
pop
sub
pop
pop
sub
rolb
cmpsl
cmp
push
add
pop
and
int3
insb
cmp
inc
pop
data16
xchg
out
stc
cld
jp,pn
xor
out
call
or
in
mov
cld
push
inc
xor
adc
add
jno
adc
lds
or
add
loop
mov
push
mov
jno
mov
add
sahf
dec
push
aad
movsl
mov
outsl
xchg
std
test
mov
ss
xchg
shlb
sbb
mov
sahf
jbe
add
mov
and
xor
add
mov
mov
add
out
insl
cli
lods
bound
and
dec
inc
add
outsb
outsl
hlt
lds
std
icebp
jbe
pop
mov
add
popf
push
addb
add
test
addb
adcl
mov
movnti
add
cmpsb
push
dec
cmpsb
mov
mov
mov
sti
xorl
rolb
lods
sbb
add
mov
xchg
dec
test
cmc
rcll
mov
int
mov
sub
dec
cmp
add
fsubl
jl
cli
dec
and
and
in
push
jge
aam
or
ss
push
sub
add
cmp
and
and
push
adc
add
add
lock
xchg
lods
pop
lcall
in
cmp
imul
daa
add
insl
mov
push
jg
add
ret
test
add
xchg
push
pusha
add
mov
push
ljmp
jo
and
mov
test
in
add
subps
andl
xor
mov
jge
sahf
into
movsb
fwait
xlat
leave
outsb
pop
cmp
mov
add
pop
mov
lds
bound
add
lods
ret
frndint
popa
xor
sub
les
jmp
inc
sbb
in
int
add
repnz
mov
add
ret
pop
insb
push
ror
sub
push
imul
addb
add
or
fstpl
popf
aad
test
jl
add
add
addb
cmp
mov
push
jae
sbb
dec
shrb
jge
add
pop
xlat
dec
jp
fcompl
adc
and
jnp
or
mov
test
inc
add
xchg
ret
mulb
add
mov
in
popf
bound
push
add
push
into
lahf
xchg
xor
rolb
mov
mov
ds
aam
inc
xchg
call
fdivs
and
pop
push
sbb
cmp
mov
xlat
sbb
push
pop
xchg
xlat
sub
out
mov
fstpl
scas
push
sbb
fbld
push
mov
pop
mov
out
inc
pop
add
push
jp
jmp
jae
push
xchg
daa
lods
sub
jle
ficomps
cmpsb
mov
dec
dec
xor
sbb
in
sub
cmp
add
gs
lods
clc
adc
pop
insb
in
movsl
inc
add
add
lds
ja
mov
xchg
adc
add
aam
adc
ja
add
loopne
ss
xchg
mov
cwtl
and
imul
or
jo
inc
inc
xor
pop
lcall
addb
add
add
jecxz
sub
das
push
add
aaa
mov
or
fisubl
sbb
iret
inc
add
pushf
movsb
cmp
test
xchg
ficomps
xor
loope
push
arpl
add
xor
ret
aaa
gs
push
add
jle
add
and
dec
xchg
frstor
xchg
nop
adc
adc
out
sahf
jne
and
xchg
push
xchg
pop
fiaddl
or
add
pop
icebp
mov
lea
cmpsl
iret
mov
bound
cwtl
cwtl
and
and
icebp
cli
outsl
pop
cmp
aad
inc
nop
jecxz
cld
fs
sbb
jge
test
pop
lds
bound
mov
test
push
push
sbb
fnsave
add
repnz
jle
jle
sub
sub
gs
mov
mov
add
or
imul
mov
pop
and
sub
inc
add
shll
add
add
movsb
jnp
xor
inc
add
xchg
std
dec
jae
mov
mov
jg
xor
test
ss
add
add
ret
adc
data16
inc
sbb
add
and
mov
mul
mov
mov
std
mov
mov
xor
jl
adc
out
fisubl
xchg
cmp
cs
add
mov
jmp
and
movb
sub
pop
sub
push
arpl
daa
fistpll
add
ret
loopne
mov
mov
ret
mov
jge
mov
lret
fwait
into
xlat
inc
and
jbe
xor
jecxz
out
mull
nop
bound
das
pusha
add
loopne
cld
ret
push
xchg
jge
jmp
test
dec
test
pop
insb
dec
xchg
jne
cmpsb
hlt
cmpsb
sahf
sub
mov
lods
lret
pop
mov
lret
loope
pop
cmc
mov
add
out
mov
cmp
inc
testl
mov
add
hlt
repz
mov
movsb
or
or
repz
xchg
shl
enter
fnstsw
adc
and
int
aam
andl
loopew
sbb
out
add
ds
xor
xor
and
add
out
in
add
dec
cmp
and
scas
lock
jge
shll
add
inc
add
adc
push
lock
mov
mov
arpl
scas
or
lds
sbb
cmp
sahf
test
adc
outsl
dec
repnz
add
repnz
fidivrl
inc
xchg
sbb
push
push
push
filds
jns
mov
sbb
add
add
xchg
push
clc
and
push
popa
test
mov
ret
dec
sub
mov
xchg
mov
mov
sarl
add
dec
mov
inc
add
add
mov
enter
jg,pt
mov
jno
push
or
call
inc
add
sbb
mov
pop
loope
add
imul
bound
out
iret
call
ds
movb
arpl
or
push
popf
and
jle
bound
js
add
rolb
rcr
cli
sub
inc
add
add
xor
dec
ret
xchg
xchg
cmp
jecxz
repz
xchg
das
enter
or
add
lock
adc
repnz
imul
clc
sub
jb
in
data16
scas
inc
add
sbb
dec
xchg
sub
cmp
dec
pop
pusha
add
negl
mov
jle
jge
inc
movaps
mov
push
scas
fistpll
xchg
scas
jge
jae
add
lock
or
call
repnz
rolb
iret
inc
add
movb
mov
pop
aas
fwait
cmpl
add
mov
popf
daa
rolb
in
lods
std
test
adc
xor
sbbl
imul
add
pop
stos
mov
arpl
xchg
mov
inc
add
jo
insb
cmp
sbb
lods
mov
jmp
daa
cmp
pop
ds
fldenv
and
mov
into
mov
add
add
sbb
sbbl
mull
lock
movsb
repz
les
jo
xchg
jmp
ds
and
pop
sub
sub
add
test
stos
sub
add
insb
dec
fldl
or
jo
ja
push
mov
data16
add
addb
add
add
arpl
outsb
testb
cwtl
jle
addb
out
mov
mov
dec
pop
mov
ret
fcmovbe
andl
sub
enter
pop
data16
mov
int
push
xchg
jmp
rorb
movsb
dec
mov
and
pop
int3
sub
cwtl
imul
je
shrl
lcall
js
stos
stc
dec
push
xchg
xchg
mov
out
push
subl
js
inc
pop
sbb
add
sarb
xchg
fstps
adc
add
andl
jecxz
decb
adc
iret
xchg
mov
pop
sub
sbbl
sub
mov
icebp
or
mov
repz
pop
fiaddl
add
sbb
clc
sbb
add
adc
rolb
es
imul
add
sbb
mov
test
roll
fs
or
cli
push
xor
add
call
outsb
xchg
movsl
into
repz
call
shl
or
loope
movsl
and
pop
in
sbb
mov
mov
pop
mov
add
mov
mov
shr
sbb
jg
movsl
dec
adc
mov
add
in
push
fistpll
data16
pushf
iret
aaa
pop
aam
int
int3
popf
mov
add
mov
pop
pop
push
into
cmp
loope
lods
push
mov
xor
push
movsb
mov
call
xchg
clc
xor
pop
xchg
lods
out
add
insb
inc
xchg
out
addb
stc
fs
loopne
or
mov
lds
adc
out
mov
fmulp
repz
xor
push
into
jle
pop
aaa
xchg
mov
add
add
xchg
or
call
cmp
and
adc
ficomps
mov
into
cmp
test
scas
fcoml
outsb
mov
les
insl
add
push
and
sbb
lds
mov
sub
mov
loope
fmulp
arpl
add
ret
lcall
insl
test
in
dec
cmp
rcr
add
xchg
movsl
jns
sub
test
push
mov
push
or
add
lods
dec
loopne
lods
pop
int3
sbb
outsl
mov
dec
andl
filds
cld
sahf
cmp
popf
xor
leave
push
push
addb
movsl
std
dec
test
aaa
ds
clc
in
orl
icebp
sub
js
nop
xchg
sub
adc
ss
nop
adc
mov
inc
add
lods
jne
pusha
add
adc
scas
fists
test
xchg
outsl
stos
lds
push
and
mov
and
push
es
mov
mov
pop
jb
movb
inc
add
je
test
jae
pop
bound
fistl
add
jp
sub
and
mov
add
jbe
mov
and
inc
xor
in
aam
mov
pop
mov
add
arpl
add
pop
adc
mov
rcrl
lods
pushf
neg
add
jnp
les
sub
jge
ljmp
lea
sahf
jne
incb
add
in
jb
add
stc
and
aam
lret
sub
add
ja
addb
mov
jo
mov
mov
pushf
xchg
cmp
dec
push
testb
lret
cmp
pop
xchg
arpl
repnz
xor
jg
jge
test
inc
fisttpl
pop
and
jecxz
shrl
add
dec
movsl
add
addb
jge
addb
lods
loope
lea
jmp
adc
jo
movb
int3
and
movsl
out
sarl
add
lret
pop
lods
xchg
pop
inc
mov
push
push
bound
xor
mov
pop
int
jo
push
out
mov
jae
mov
mov
sbb
fcoms
xchg
lea
mov
inc
add
xchg
rolb
jb
das
loopne
pop
incl
mov
pusha
add
dec
mov
mov
add
pop
xchg
sbb
adc
aaa
cmc
insl
les
mov
mov
ret
xor
mov
jne
test
pop
and
adc
incl
call
rolb
cmp
test
add
lds
lcall
add
pop
rcrl
sbb
sbb
in
inc
add
lds
int
mov
out
ja
sub
outsl
or
and
loopne
aas
mov
xor
insb
and
adc
addb
jbe
mov
std
gs
and
add
push
jb
insl
out
ja
lahf
jb
dec
shlb
adc
adc
loopne
add
pop
js
dec
sbb
add
inc
add
call
push
hlt
push
push
fmul
xor
hlt
call
mov
mov
xchg
dec
addb
mull
mov
cmc
lds
jmp
icebp
mov
sub
sub
call
ljmp
movsb
lds
xor
cmpsb
xchg
push
jl
addb
popf
insb
inc
sbb
jno
clc
cmp
out
sub
and
je
cltd
or
add
cmp
add
dec
in
lret
and
pushf
pop
aas
aam
xchg
push
daa
inc
mov
data16
addr16
push
addb
aas
lret
lahf
push
fcompl
sbb
adc
int3
pop
js
bound
xor
add
cmp
fstp
std
pop
push
add
imul
and
add
sbb
pop
nop
repz
mov
and
rclb
ret
les
pop
dec
addb
test
dec
sbb
ret
adc
addb
dec
leave
je
dec
shrb
xor
jmp
shl
in
insb
add
inc
add
jg
sub
xchg
imull
js
add
ret
sar
stc
add
lea
add
addl
dec
loopne
push
in
loop
dec
daa
push
xchg
mov
add
sar
pushf
ljmp
mov
jnp
sbb
test
cmpsb
pop
adcl
idivl
adc
cli
outsb
and
les
repz
xor
stos
cmp
ret
mov
cmp
add
ret
add
mov
adc
outsl
cmovb
xchg
cmc
out
push
addb
add
ret
jl
out
or
push
shlb
add
mov
inc
lret
push
iret
subl
je
outsl
cltd
or
test
cmp
add
sub
dec
idiv
addb
sbb
hlt
mov
ja
imul
ljmp
add
push
dec
xor
inc
loope
insb
xor
mov
repnz
mov
clc
sti
aaa
add
push
loopne
mov
mov
test
loop
test
and
fisttps
jo
jecxz,pt
add
xor
or
inc
add
push
fmull
xchg
jp
mov
xchg
ss
xchg
ja
ror
out
lods
push
xchg
iret
rolb
aam
popa
lret
dec
lcall
sub
insb
or
cltd
ja
out
repnz
jle
outsb
push
dec
jnp
add
mov
mov
jecxz
xlat
imul
add
fucom
push
cmpsb
pop
movsl
xchg
imul
scas
xchg
sub
scas
push
ret
aas
lahf
dec
mov
lahf
aad
mov
imul
mov
inc
lock
push
add
stos
icebp
jle
repz
stos
sbb
rcl
aam
fnstcw
pop
inc
sbb
push
sbb
cmp
xchg
pop
jbe
fwait
das
add
into
xchg
mov
addb
pop
sub
mov
xor
or
mov
xor
xchg
js
movsl
pop
mov
mov
add
jmp
xor
aad
xlat
mov
out
gs
add
push
stos
ret
mov
mov
jmp
jno
add
les
ds
push
pop
jnp
or
jmp
sbb
push
roll
add
sub
sti
push
add
movb
add
add
adc
popf
push
mov
stc
lcall
cli
mull
sub
mov
lcall
ret
cwtl
pop
shr
dec
test
cmpsl
push
pop
dec
mov
pop
sbb
cmp
out
add
int
pusha
add
aad
adc
xchg
sti
test
cmp
push
cltd
ja
jmp
mov
add
int3
or
call
xchg
dec
mov
cs
ljmp
in
push
das
ljmp
mov
inc
add
nop
push
add
outsb
mov
sub
popa
inc
add
add
mov
jg
add
fists
aad
ja
xor
addr16
lea
jno
add
pop
orl
movsb
push
push
mov
sub
add
add
stos
mov
or
sub
repnz
mov
pop
mov
movsl
pop
out
xor
add
add
jno
mov
lea
adc
add
jecxz
xchg
addb
icebp
test
and
jns
xchg
xchg
arpl
push
mov
mov
inc
add
mov
push
pop
mov
mov
daa
movsb
push
imul
push
add
mov
cmp
sub
scas
loope
add
dec
push
mov
mov
dec
xor
xchg
ds
push
out
pushf
dec
xchg
add
jae
pop
into
sti
hlt
popf
nop
xlat
or
xchg
dec
dec
sub
pop
adc
or
sub
jl
mov
sub
add
mov
add
leave
xchg
dec
dec
sbb
rcll
add
adcl
or
rolb
jnp
mov
fs
push
and
sbb
push
fcomps
mov
adc
mul
cltd
xor
loope
ffreep
add
fimull
insb
sti
xchg
cli
nop
rorl
das
sub
adc
in
mov
movsl
sbb
movsl
lock
cmp
cmp
movb
jmp
adc
add
cld
lds
pop
pop
fldl
cmc
cmpsl
mov
jl
lods
adc
xchg
jmp
gs
xchg
loopne
jl
enter
inc
xchg
aas
fs
inc
add
sub
adc
push
add
push
mov
xlat
test
pop
pusha
add
sub
out
cmp
add
add
adc
loopne
sbb
sbb
add
pop
in
pop
mov
mov
cmc
ljmp
jmp
out
adc
or
repnz
js
pop
sub
lcall
shrb
cmp
insb
lds
xchg
or
out
jno
pushf
add
cmp
and
call
ret
rolb
leave
mov
bound
sarl
fimuls
rcrb
dec
cmc
rol
add
dec
repz
movsl
test
jno
add
sbb
cltd
jnp
mov
adc
cmp
aam
fs
cltd
aad
push
mov
mov
inc
add
sahf
cmp
dec
lcall
xchg
lds
insb
jle
pop
pop
jmp
jecxz
xchg
mov
addb
test
rolb
lock
add
and
rcll
out
mov
in
stc
shll
pop
clc
inc
out
xchg
lahf
pop
pop
arpl
lods
outsb
add
fdivrl
add
jle
aas
xor
xchg
int3
inc
jnp
sbb
or
scas
les
pop
xor
pop
dec
mov
mov
scas
imul
call
fimull
movb
test
and
add
cmpsl
leave
and
pop
xor
add
adc
dec
jmp
inc
negb
xor
pop
dec
inc
add
xchg
movsl
cwtl
xchg
repz
xor
fcmovu
dec
icebp
and
mov
imul
mov
sbb
add
ds
pop
in
roll
in
nop
repz
add
sub
enter
mov
test
mov
push
je
mov
mov
cmp
enter
mov
idivl
pop
int
stos
mov
jo
adc
addb
pop
add
stos
jge
lds
sti
mov
cmp
add
clc
mov
dec
push
sub
test
sub
push
insl
mov
add
jecxz
es
loop
loopne
add
lods
sbb
stos
jp
mov
jp
movb
lea
mov
shl
mov
jle
les
addl
loop
add
xlat
xchg
xchg
test
loop
xchg
pop
jg
mov
inc
nop
push
xchg
jmp
inc
inc
idivl
add
les
push
mov
add
dec
sub
fsubs
add
mov
jp
inc
add
mov
scas
test
cmp
addb
lea
or
jae
scas
or
add
inc
add
ret
out
dec
pop
sahf
les
fidivrs
call
add
xor
cmp
imul
jge
les
push
add
mov
xor
jmp
cmp
in
xchg
pop
sarl
add
int
or
jae
add
repz
push
int
pop
xor
mov
and
mov
pop
movl
jns
push
mov
add
xchg
fisubrs
xor
or
mov
cmp
xor
mov
int3
sarb
jae
add
lods
insl
jnp
push
ficoms
adc
add
and
mov
lahf
adc
call
pop
mov
sti
jnp
call
push
sahf
cmpsl
popf
push
int3
inc
add
mov
rclb
sub
add
ljmp
xchg
adc
or
dec
dec
gs
js
add
and
test
add
popa
cmpsl
ljmp
add
fstps
cltd
or
push
imul
mov
pop
adc
mov
cmp
push
loope
pop
push
addb
dec
cltd
push
sahf
arpl
adc
in
shll
pop
je
jbe
mov
push
dec
testb
fs
mov
lahf
push
leave
mov
ret
mov
mov
imul
imul
lcall
add
sbb
adc
jp
fsubr
cmpsl
jle
stc
and
icebp
inc
aaa
out
jl
stc
jg
ja
inc
add
sbb
xchg
adc
add
mov
cltd
movsl
xchg
ja
test
out
loope
ljmp
pop
push
cli
into
xor
add
jne
fsts
icebp
mov
rcrl
loope
xchg
jl
lea
xlat
popa
imul
jns
fsubl
mov
add
cli
jmp
addb
loop
add
inc
add
ret
outsb
lret
pop
call
add
mov
setp
dec
pop
xor
mov
add
in
loop
cmc
cmpsb
call
test
cmp
gs
jmp
mov
or
jge
push
inc
call
mov
dec
mov
sbb
jb
xor
imul
into
dec
mov
std
push
test
push
cltd
or
mov
dec
cld
into
xor
or
inc
cmp
cli
xchg
jg
ffreep
lods
ja
inc
adc
jecxz
jo
add
stos
xlat
cltd
sbb
sahf
add
shrl
into
rcll
push
in
add
jle
pop
js
cltd
loop
sub
jmp
clc
adc
lret
test
push
movb
loop
jne
sub
jno
hlt
icebp
test
or
cmovno
fwait
pop
mov
push
out
xor
cld
xchg
std
and
cmp
mov
mov
out
xlat
aad
sbb
aas
mov
and
cmc
ret
xchg
or
dec
sub
cmpsb
idiv
fdiv
push
int
pop
in
mov
and
sbb
test
rolb
pop
add
fs
jno
xor
neg
inc
js
popa
dec
aaa
push
and
aas
addl
pop
cmp
sbb
dec
scas
pop
adc
in
cmpsl
sub
daa
leave
cmp
mov
fs
and
mov
cwtl
pusha
add
jp
in
xor
movb
stc
adc
test
jg
xlat
out
aad
add
mov
movb
sbb
int
push
xchg
addl
in
mov
sub
cld
sub
iret
inc
shll
jge
enter
mov
std
in
mov
mov
dec
push
push
arpl
shll
sub
sub
inc
mov
popa
adc
xor
add
in
add
jp
sub
mov
aam
rorl
nop
pop
fscale
xchg
int3
data16
outsb
sub
xchg
das
xor
push
fists
xor
enter
popa
xchg
mov
fwait
mov
imul
jl
out
sldt
sbb
push
sub
xchg
lock
add
in
mov
add
fmul
out
lds
pop
scas
iret
mov
mov
inc
pop
dec
inc
mov
inc
add
in
roll
sub
sbb
lock
addb
mov
cmp
dec
push
cmp
data16
movd
sbb
jo
sbb
sbb
push
rolb
out
mov
fisubrl
mov
sbb
push
xor
add
fidivrs
std
mov
out
dec
in
mov
into
lods
jge
xor
movsl
hlt
pusha
add
push
and
cmp
jno
dec
mov
add
xor
add
and
ja
push
into
enter
push
and
test
aam
add
and
add
cmp
aas
test
out
pop
lret
dec
cmp
add
es
add
inc
add
mov
xor
adc
add
aaa
mov
pop
pop
push
sbb
sub
mov
rep
addr16
xchg
xchg
xor
popa
jo
movsb
loope
sub
dec
out
fld
add
or
scas
bound
ljmp
pop
sbb
cmp
mov
shrl
int
mov
push
rolb
push
in
mov
sub
mov
jbe
cmp
ud1
cltd
jns
scas
adc
sarl
mov
addb
push
addr16
add
dec
les
lods
inc
add
mov
add
sub
repz
out
add
dec
add
pop
rcrb
mov
cld
sub
pop
pop
jae
adc
addb
jle
in
movsl
arpl
fistpll
rcrl
xor
sbb
xchg
pop
lea
les
icebp
enter
daa
xor
enter
mov
notl
xor
mov
call
mov
mov
jns
sbb
xor
and
mov
add
xchg
ss
sbb
or
add
popa
int3
std
test
jmp
push
int3
movsl
push
addb
popf
fs
loope
fidivrs
mov
mov
in
into
hlt
lods
push
enter
test
add
rolb
popa
inc
add
dec
ljmp
test
ret
push
adcl
popf
and
pop
lods
lock
jg
add
adc
pop
addb
sub
outsb
mull
sub
add
add
dec
jno
insb
add
push
sarb
movsl
lcall
push
mov
mov
add
call
jae
add
pop
out
adc
jl
fs
sub
mov
paddsb
jb
mov
ret
nop
jge
addr16
or
repnz
in
lock
push
out
repz
lods
add
cmp
cwtl
jo
lea
stc
pop
jmp
xchg
or
dec
jg
gs
iret
das
adc
out
push
rolb
xchg
sbb
mov
movb
inc
add
sub
divb
xchg
divb
adc
sub
mov
jle
push
scas
outsb
cmp
inc
add
in
pop
jg
add
xor
faddp
add
pop
fistps
ljmp
in
dec
fnstsw
dec
loop
pop
pop
inc
add
cmp
cmpsb
addr16
out
loopne
cld
jo
ds
jnp
in
dec
mov
xchg
aaa
test
in
push
les
jnp
icebp
loopne
rcl
xchg
inc
frstor
jb
sti
jnp
scas
xor
or
loope
add
lret
inc
add
xor
stos
jns
js
mov
push
daa
in
push
test
aad
repz
mov
jmp
push
and
lds
out
add
inc
add
mov
sbb
jge
cld
and
xchg
jbe
xlat
inc
lahf
ja
mov
xchg
aas
inc
dec
mov
fwait
sub
into
pop
arpl
cltd
pop
pushf
inc
in
sub
sbb
xor
adc
sub
cld
pop
jns
aas
inc
add
mov
xchg
cmpsl
jnp
sbb
or
xor
mov
or
test
add
push
mov
add
sub
aaa
rcll
xor
jae
cltd
stos
mov
pop
sbb
and
mov
mov
add
lods
inc
add
add
jbe
fldcw
fnstenv
jle
dec
dec
lock
popf
repz
out
cmp
not
pop
addb
jl
cmp
loopne
mov
js
pop
lret
cmp
into
fsubl
add
das
xchg
inc
hlt
aas
or
in
test
and
dec
out
out
popl
xor
push
add
cmp
imul
jmp
xor
push
push
js
cli
dec
sub
xchg
jp
out
repz
inc
add
pusha
add
into
std
pop
mov
sbb
xor
dec
sub
dec
int3
pop
daa
dec
ljmp
jae
lds
ret
sub
std
mov
jbe
enter
jne
xor
or
add
cmp
gs
cli
bound
movsb
outsb
pop
or
imul
lret
sbb
jbe
and
and
std
inc
add
das
in
lds
rolb
mov
pushf
ja
pop
popf
mov
outsb
mov
pop
sti
cmp
fcomps
cli
hlt
into
scas
lds
cs
add
cmc
movb
pop
fwait
nop
stc
pop
or
jbe
leave
movsb
mov
jno
ret
add
inc
add
push
xlat
addb
push
add
jnp
popl
mov
ljmp
or
pushf
testl
lea
shll
popa
sbb
mov
pop
lret
ficoms
add
or
dec
xchg
jae
pop
sub
push
icebp
ret
nop
das
mov
idiv
pusha
add
xchg
jp
je
mov
sbb
out
jle
xchg
gs
aas
and
nop
aaa
jne
dec
outsl
test
cmc
push
scas
addr16
xor
jo
aam
lret
sub
mov
aaa
inc
fildll
add
cmpsl
scas
fistpl
jne
add
jl
fcmovnu
mov
daa
cmp
push
jge
loopne
pop
cmp
pop
repz
sbb
fistpl
add
sub
sbbl
mov
dec
lock
imul
out
fstpt
lods
add
mov
sahf
andl
jne
cmc
pop
xchg
pop
sbb
inc
add
mov
clc
scas
sub
or
push
repz
inc
add
std
push
xchg
sbb
add
or
add
dec
outsb
sub
movb
jl
in
add
jmp
lock
stos
xor
imul
lret
aas
sbb
and
popf
sub
jle
iret
gs
pop
addb
sub
inc
std
addr16
adc
push
add
bound
inc
add
add
xor
dec
addb
out
pop
pop
sbb
add
mov
inc
add
mov
xchg
jbe
mov
mov
fldln2
mov
fistps
push
jno
roll
mov
add
das
pop
out
imul
sub
aad
outsl
push
lods
add
push
push
pop
out
jmp
dec
inc
add
dec
stos
jb
adcl
pshufw
mov
cmc
js
xchg
dec
in
mov
dec
mov
xchg
outsb
out
add
insl
cwtl
pop
xchg
push
add
jmp
push
hlt
scas
fiaddl
xlat
addb
add
cmp
adc
insb
das
out
jle
adc
sub
ret
inc
add
sahf
cltd
imul
add
inc
add
and
or
jbe
test
xlat
decb
xchg
std
fsubl
fcmovbe
mov
bsf
xchg
inc
add
or
je
pop
lods
push
mov
inc
dec
in
push
out
stos
test
out
data16
ja
cmp
data16
and
jge
in
fwait
sbb
add
inc
sbb
sarb
xor
add
fwait
call
shll
mov
icebp
fwait
mov
xor
xchg
fwait
mov
testb
jge
push
cmpsl
xor
push
fistl
mov
add
dec
ret
push
movb
add
jmp
mov
jle
cmp
and
xor
fisubrs
das
pop
pop
mov
fdivrp
jae
addb
rcll
mov
lock
cwtl
adc
mov
gs
icebp
ljmp
jl
out
xchg
xchg
jo
jnp
adc
add
xor
ss
xchg
jmp
add
test
ret
mov
push
xor
sahf
es
loop
push
sbb
pop
fcoml
mov
out
mov
js
sbb
mov
mov
negb
pop
cld
in
push
jae
mov
mov
mov
roll
lods
pop
push
mov
mov
cld
jb
in
add
bound
lret
fidivl
outsl
andl
jne
fcomip
arpl
xchg
xor
imul
add
mov
mov
pop
mov
in
cmp
add
dec
pop
repz
and
out
xorl
in
jg
mov
lea
mov
into
xchg
cmpsb
out
insl
faddl
mov
stc
cmp
cwtl
or
add
adc
int3
fwait
dec
je
popf
int
add
sbb
cmp
lahf
in
loopne
addb
movsl
or
mov
gs
cmp
cmc
shr
cld
cli
nop
mov
arpl
loope
test
popf
push
or
fdivr
rcll
fst
jb
addb
cltd
mov
push
jo
sbb
add
out
jge
sbb
mov
aad
and
add
lea
lds
xchg
outsb
xchg
leave
lcall
xchg
loope
pop
cs
sbb
daa
fistpll
jnp
sbb
adc
fcom
mov
pop
dec
mov
in
and
movb
fcmove
fistps
repnz
mov
jns
pusha
add
mov
and
mov
imul
add
lods
xchg
pop
fcom
dec
mov
push
add
jge
dec
or
lea
addb
notl
and
scas
push
insb
mov
xchg
bound
adc
or
pop
fbstp
call
out
add
adc
or
jo
pusha
add
inc
adc
add
test
sbb
sbb
xchg
mov
into
arpl
xlat
scas
cltd
outsb
inc
add
dec
jmp
inc
inc
add
aam
jge
sbb
dec
xlat
mov
jbe
dec
out
icebp
dec
das
mov
add
add
add
sbb
mov
mov
out
sub
mov
xchg
mov
sub
sub
xlat
in
xchg
nop
or
fisubl
xchg
lret
filds
ret
in
imul
mov
in
cmpsb
fdivs
sub
mov
iret
xor
aaa
push
fstpt
lods
popa
dec
test
fimuls
adc
adc
insl
jmp
fwait
and
lahf
mov
sti
addr16
xchg
adc
daa
add
ss
shl
jg
mov
arpl
pop
pop
in
call
pop
hlt
pop
adc
cmc
out
mov
push
mov
push
mov
mov
out
inc
add
mov
mov
mov
fistpll
vmovaps
lods
insl
inc
add
or
out
pushf
or
push
add
in
aad
add
jle
jp
add
fcomps
add
in
aam
dec
xchg
shlb
cmp
push
inc
push
or
mov
repz
lea
mov
repz
xchg
adc
out
test
out
cmp
jno
pop
outsb
ret
push
xlat
shll
vmwrite
scas
cmp
pop
daa
jno
inc
nop
in
lods
insb
movsl
pop
or
add
stc
outsb
sti
mov
sti
sub
xchg
inc
add
push
add
lds
cmp
xor
adc
int
repnz
cmp
jns
arpl
cli
xchg
out
push
dec
into
mov
mov
lcall
add
fincstp
or
sub
nop
les
mov
jns
or
sbb
mov
out
mov
add
fdivrs
push
mov
icebp
fst
push
push
lds
pop
cs
cmp
mov
fwait
loopne
lds
push
out
jp
in
ret
and
ja
xlat
pop
xchg
lock
nop
and
xchg
addb
pop
cmc
lahf
and
icebp
jb
imul
or
stc
shlb
xchg
or
js
inc
bound
dec
or
mov
xchg
xchg
pushf
and
jnp
dec
addb
sbb
add
cmc
push
imul
jne
add
push
mov
mov
adc
mov
lret
jae
mov
in
ja
shll
mov
int3
pop
xchg
pavgw
idiv
lods
mov
lahf
jne
push
mov
push
in
cwtl
xor
xchg
sub
mov
and
test
and
mov
fs
int
xchg
sub
insl
jb
inc
xor
rolb
adc
neg
je
loop
arpl
adc
out
ja
pusha
add
and
imul
or
test
movsb
fildll
es
rolb
xor
pop
clc
lret
push
add
pop
unpcklps
xchg
cmp
mov
call
inc
in
in
sbb
lea
dec
or
pop
xchg
xor
rolb
fildl
mov
arpl
fistl
lcall
clc
mov
xchg
adc
cmp
sbb
or
add
rorb
adc
pushf
push
jecxz
sahf
addb
jnp
popa
push
cmp
movsb
cltd
jg
add
stc
jge
test
movsl
js
stos
int
cmp
add
loop
pshufw
add
test
cmp
cwtl
jno
std
orl
add
cmp
out
push
inc
ss
xchg
iret
jmp
sarl
popa
xor
cltd
xor
dec
pop
push
insb
mov
mov
or
addb
fcomp
iret
adc
sar
sbb
jp
dec
daa
sub
pushl
icebp
xchg
repnz
pushf
inc
xchg
ficoml
cli
daa
scas
lahf
push
sub
pop
adc
ss
jle
jl
sti
sti
adc
mov
push
fsub
imul
cli
push
bound
stc
push
negl
pop
mov
push
lret
adc
add
imull
xor
mov
mov
cmp
cmp
fistps
cwtl
clc
xchg
iret
aas
cwtl
push
add
scas
ret
scas
clc
push
jbe
add
sub
xor
add
data16
sbb
add
cmpl
pusha
add
dec
sbb
out
push
addr16
adc
into
rclb
adc
xchg
mov
mov
jmp
popf
adc
cmc
ret
sbb
pop
mov
jmp
mov
adc
mov
push
xor
cmp
sbb
subl
out
cs
push
jne
add
call
addb
insl
popa
sub
mov
cmpsl
mov
add
and
cmp
add
and
jle
mov
stos
out
cmpsl
dec
pop
addb
out
jne
xchg
scas
cmp
mov
mov
add
pop
inc
movsb
inc
out
push
js
addr16
xchg
icebp
les
mov
xchg
cmc
sub
xchg
push
xchg
fcmovnb
add
inc
testl
adc
sbb
sbb
cmp
rcll
mov
iret
stc
or
and
movb
jns
into
inc
add
cwtl
ja
icebp
and
cmp
test
rclb
sbb
stc
add
cs
sub
jmp
dec
pushf
ret
inc
add
push
push
outsb
mov
pop
xchg
movsb
dec
js
cwtl
jmp
push
add
fdivs
or
cmp
lret
int3
les
es
pop
adc
sbb
push
mov
adc
jbe
in
jmp
push
fwait
pop
out
iret
pop
sti
mov
icebp
hlt
mov
pusha
add
outsb
xchg
imul
xchg
fnstcw
sub
add
pop
sub
jp
mov
movsb
jge
fildll
or
jno
or
in
dec
and
jno
add
xchg
inc
add
cs
xor
lods
in
adc
mov
or
dec
cltd
in
vpshufd
xor
jg
add
mov
mov
leave
std
pop
popa
cwtl
jo
sub
in
imul
push
inc
add
add
addr16
add
jmp
xchg
fistps
xor
outsw
aaa
std
mov
stos
sarl
loope
cwtl
mov
imul
jne
adc
mov
add
mov
ret
xchg
mov
imul
mov
cmp
cmp
cli
dec
divb
cmp
outsl
pop
adc
fwait
pushf
lods
lods
insb
sbb
xor
add
addr16
and
inc
inc
add
mov
mov
mov
xchg
add
lock
imul
sbb
mov
sbb
data16
stos
adc
mov
into
cmp
pop
pusha
add
sub
mov
sbb
inc
xlat
cmp
fisttps
mov
in
pushf
fimuls
push
cmp
mov
push
ret
sbb
pop
test
add
inc
add
out
jno
addb
mov
icebp
xchg
iret
int
lods
inc
popf
lret
ficoml
dec
cmp
les
pop
and
cmp
cmp
adc
add
add
jge
das
in
push
ficoms
fdivrl
pop
loop
nop
xchg
jp
dec
movsl
add
and
jne
mov
mov
mov
cmp
add
lods
ret
mov
orl
cmpsb
cs
inc
xchg
jp
insb
ror
xchg
or
add
add
add
add
pop
jo
add
mov
mov
test
or
or
inc
add
mov
jbe
add
add
popa
push
jae
add
test
cli
in
jp,pt
out
or
addb
iret
xchg
addb
cmp
inc
sarb
out
pop
scas
leave
testb
and
fisubl
arpl
fcompl
aaa
lret
les
sub
jg,pn
insl
push
pop
mov
test
xor
cmp
xor
xor
rolb
or
cmp
mov
add
sbb
add
add
add
