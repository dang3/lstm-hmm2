loopne
leave
test
in
in
and
enter
in
add
inc
mov
gs
dec
mov
pusha
int
orb
sub
inc
and
add
rorb
vpunpckhqdq
or
add
push
mov
imul
call
and
jmp
and
or
sub
subb
rorl
mov
or
inc
lds
shlb
movsl
loope
sub
mov
inc
add
inc
lea
loopne
add
add
leave
sub
add
dec
and
mov
in
add
test
sub
add
and
add
or
fs
int
inc
add
int
and
loopne
test
dec
pusha
dec
leave
addl
and
sub
and
mov
test
call
or
add
lea
dec
loopne
test
insl
inc
or
mov
loopne
enter
call
test
in
and
int3
and
dec
enter
test
or
in
inc
pusha
in
shl
insl
int
test
mov
int
movsl
add
and
fs
enter
mov
dec
lods
leave
add
mov
in
leave
movsb
leave
or
mov
fs
lea
dec
and
popa
add
in
mov
movsl
test
add
add
sub
add
add
shr
test
or
popa
test
lods
add
mov
test
loopne
dec
add
in
and
add
and
add
dec
mov
shlb
mov
int3
add
insl
leave
dec
loopne
sub
inc
insl
in
movsb
les
and
add
lds
int
test
and
dec
and
sub
pusha
add
add
insb
inc
add
lea
mov
sub
in
enter
add
or
in
loopne
and
insl
add
mov
and
add
call
shrb
add
subl
lea
add
inc
int3
or
in
lods
add
mov
lods
lods
insb
sub
popa
int3
dec
rol
or
dec
add
enter
les
popa
and
mov
pusha
dec
push
test
add
and
leave
push
inc
or
mov
inc
popa
mov
mov
popa
add
test
add
dec
inc
call
mov
leave
sub
shrb
enter
push
or
dec
dec
gs
movsb
dec
mov
lea
add
dec
add
push
inc
inc
imul
add
and
add
dec
sub
inc
and
loopne
add
and
add
sub
add
and
in
enter
inc
pusha
test
fs
insb
in
loopne
or
mov
and
and
sub
add
int3
add
insl
add
dec
popa
sub
push
dec
and
add
or
add
or
popa
sub
test
add
push
call
in
shrl
and
int3
add
int3
sub
add
or
test
in
or
add
sub
and
add
lods
add
popa
add
push
enter
loopne
add
sub
or
lea
popa
leave
addb
lods
les
mov
mov
and
test
in
shrl
mov
mov
add
test
add
sub
lods
and
and
inc
movsb
mov
add
inc
jmp
jmp
in
pusha
add
mov
add
or
lods
or
dec
mov
movsb
add
andl
andb
add
and
enter
in
or
dec
mov
int3
loope
mov
sub
and
mov
dec
or
insb
dec
insl
insb
inc
and
add
loopne
lea
movsl
in
add
add
mov
mov
add
test
dec
addb
in
add
ror
add
int3
or
sub
lea
mov
add
in
or
movsl
sub
shll
test
insb
or
sub
shrl
or
mov
lods
lods
and
enter
or
add
imul
addl
enter
dec
int
sub
dec
loopne
leave
movsl
int
test
inc
in
rorb
inc
in
mov
movsl
add
add
loope
add
and
add
add
movsb
inc
add
or
add
in
and
and
int
movsb
add
insb
jmp
lods
test
or
and
sub
or
insb
in
jmp
add
sub
and
or
add
gs
movsl
or
and
add
in
loope
pusha
or
in
lods
sub
add
les
inc
in
test
add
in
subl
andl
imul
sub
dec
jmp
loopne
call
movsl
and
mov
or
movsl
test
loope
in
mov
add
add
in
add
add
test
gs
enter
inc
popa
les
lods
add
and
movsb
lods
mov
dec
sub
or
and
test
subl
in
test
orb
add
insl
shrb
int
add
add
movsb
jmp
and
sub
mov
add
inc
sub
loope
lea
add
and
add
call
inc
mov
add
int3
inc
loopne
test
test
insl
int
dec
addb
int3
jmp
leave
shr
inc
shl
or
test
subl
leave
rol
inc
leave
add
test
in
or
lds
in
int3
inc
movsb
dec
test
lds
add
or
inc
sub
add
int
add
and
add
add
in
imul
sub
les
or
mov
int
sub
add
mov
and
sub
les
int
sub
leave
lea
rorl
pusha
inc
dec
mov
or
dec
or
mov
lea
call
and
mov
test
loopne
jmp
lods
in
enter
popa
or
mov
add
add
in
test
in
shr
dec
add
loopne
andl
dec
loopne
add
lds
movsb
test
in
sub
in
in
movsb
add
jmp
add
roll
lea
add
dec
lods
dec
or
dec
or
add
in
in
sub
add
and
test
les
mov
add
lods
add
add
dec
movsl
in
mov
sub
or
mov
pusha
add
jmp
int3
test
or
sub
and
or
in
enter
popa
sub
sub
or
in
insl
insl
mov
movsl
int3
and
popa
add
mov
or
or
call
mov
movsb
in
add
test
test
test
popa
pusha
rorl
lods
sub
leave
in
sub
pusha
add
rol
sub
and
sub
leave
test
mov
add
and
inc
add
rolb
lods
mov
in
dec
add
movsl
dec
add
inc
mov
les
insb
int
dec
and
movsl
and
test
or
lods
lea
fs
int
dec
test
loope
sub
add
les
add
loope
enter
shrl
loope
int3
loopne
inc
add
push
lods
enter
mov
insb
mov
push
add
add
inc
add
in
loope
leave
pusha
shll
loope
and
loope
lea
test
int
inc
lea
and
test
loopne
int
add
shrl
and
add
add
in
add
or
mov
add
gs
movsb
lods
pusha
enter
dec
and
mov
in
dec
in
mov
mov
loope
test
popa
lods
mov
sub
sub
inc
or
pusha
jmp
add
in
add
inc
add
in
orl
call
add
or
dec
add
and
add
inc
call
les
sub
test
add
lods
in
movsb
or
dec
add
add
test
mov
in
dec
lods
and
lods
or
add
add
add
in
add
in
leave
in
orl
add
insb
movsb
call
in
lods
int
add
add
and
test
int
dec
fs
sub
orb
sub
add
mov
imul
mov
dec
add
pusha
mov
add
sub
sub
and
dec
and
loope
call
lods
lea
lods
and
test
add
mov
or
add
dec
or
test
test
add
dec
insl
dec
and
rorb
int3
mov
add
add
inc
in
pusha
loope
and
in
mov
or
add
add
jmp
test
pusha
movsb
inc
add
lods
sub
popa
test
sub
movsb
add
and
inc
pusha
and
and
movsl
mov
lods
inc
inc
add
mov
mov
dec
sub
sub
in
sub
add
sub
int
dec
in
pusha
or
in
andb
sub
addb
dec
inc
add
enter
dec
leave
or
add
imul
and
inc
inc
pusha
and
sub
or
dec
push
loopne
add
push
mov
movsl
test
les
in
imul
or
add
popa
call
dec
inc
lods
roll
test
sub
lods
lods
int3
loopne
inc
inc
sub
int3
in
push
add
movsb
imul
test
add
imul
or
in
andl
and
dec
add
loopne
lods
enter
in
subb
push
lods
call
mov
int
or
loope
in
pusha
or
rorb
dec
lds
rolb
inc
dec
int
test
lea
mov
push
inc
and
int
test
leave
int3
test
movsl
and
dec
mov
inc
loope
gs
jmp
add
lds
inc
mov
add
or
andb
lods
in
fs
test
in
add
sub
pusha
loope
leave
enter
inc
enter
and
popa
add
mov
dec
les
imul
inc
lds
call
add
orb
mov
rolb
movsb
add
add
insb
in
in
sub
imul
int3
int3
lods
or
add
lds
rol
and
shrb
and
and
sub
pusha
insl
push
and
add
dec
mov
or
inc
gs
test
movsb
in
add
mov
mov
or
pusha
add
sub
rorb
mov
in
test
and
loopne
popa
inc
enter
and
lods
add
orl
add
or
inc
lods
lds
dec
test
test
mov
lods
or
dec
mov
and
jmp
call
jmp
and
sub
in
dec
add
add
or
inc
inc
imul
leave
dec
insl
rol
or
lods
int3
add
add
jmp
lods
int3
add
and
inc
add
dec
and
popa
sub
inc
call
int3
loopne
push
jmp
test
inc
add
mov
dec
mov
lods
dec
shl
add
in
sub
dec
popa
imul
dec
loope
add
dec
lea
add
mov
add
andb
les
call
addl
lods
mov
add
add
or
test
movsb
or
sub
push
lea
mov
add
enter
test
test
pusha
in
add
sub
mov
in
movsb
add
rorl
lds
test
test
insb
mov
lea
add
push
loopne
sub
dec
loope
in
mov
or
dec
rol
dec
loopne
lea
test
or
shrl
sub
add
dec
mov
sub
addb
and
gs
or
addb
mov
or
lods
in
loope
add
push
or
in
or
pusha
movsl
inc
add
les
shlb
orl
jmp
sub
dec
or
inc
mov
shlb
dec
and
inc
add
add
call
dec
in
mov
imul
or
add
add
leave
dec
test
test
test
inc
and
roll
dec
or
andb
pusha
rolb
add
test
lds
loopne
sub
add
loope
push
mov
or
leave
mov
enter
lea
add
dec
orl
and
lea
test
movsb
inc
sub
add
leave
or
mov
sub
inc
test
popa
in
inc
addb
or
inc
mov
add
dec
insl
mov
leave
sub
fs
test
insl
dec
in
pusha
add
inc
or
popa
mov
loope
inc
andb
sub
inc
dec
test
sub
int
and
rolb
lods
test
call
sub
int3
inc
lods
movsb
andl
or
and
lods
add
inc
shl
leave
add
add
add
add
add
inc
add
in
movsb
add
rolb
addl
add
pusha
dec
or
add
inc
loopne
and
in
add
gs
test
test
mov
or
test
call
and
add
and
sub
lods
loopne
or
roll
dec
and
insl
jmp
lds
test
dec
and
mov
in
roll
mov
loope
or
or
add
add
inc
add
mov
add
leave
insl
loope
add
dec
or
add
insb
in
add
and
add
insl
or
movsl
mov
insl
inc
dec
add
imul
add
mov
test
or
and
add
sub
sub
in
call
or
add
test
add
loope
int3
gs
and
in
inc
sub
add
or
lods
leave
movsb
test
or
add
add
pusha
imul
addl
mov
lods
dec
test
loopne
inc
add
lods
add
movsl
lea
fs
add
les
or
lea
mov
imul
inc
add
inc
add
orl
and
add
pusha
call
inc
sub
lods
add
sub
add
in
inc
int3
movsb
add
add
or
inc
inc
add
add
movsb
dec
int3
add
pusha
movsl
insl
shl
lods
sub
add
mov
add
mov
test
sub
dec
orb
inc
lods
add
mov
or
mov
addb
test
int
in
int
insl
add
dec
and
inc
add
popa
inc
in
or
lds
inc
call
add
add
test
inc
add
enter
insl
loope
call
in
imul
in
dec
add
mov
test
fs
mov
add
inc
push
and
add
call
add
andb
leave
and
dec
push
test
pusha
dec
and
dec
add
mov
addl
in
movsb
call
dec
movsb
and
pusha
mov
insl
add
inc
call
inc
jmp
leave
mov
add
rol
les
dec
ror
and
leave
insl
or
mov
int3
gs
mov
and
pusha
roll
or
sub
sub
insb
add
mov
add
mov
popa
test
lea
and
mov
movsl
or
mov
insb
dec
loope
add
or
mov
add
popa
call
and
in
test
movsb
lds
add
or
add
movsl
mov
in
add
insl
mov
movsl
roll
leave
dec
add
inc
movsl
lods
test
or
add
ror
call
or
subl
inc
loope
add
or
lods
add
push
add
push
and
int
in
mov
add
dec
orb
sub
or
mov
leave
or
mov
and
or
call
add
add
add
dec
lds
loope
mov
and
in
in
lods
add
int
mov
sub
dec
add
in
loope
lea
inc
inc
test
addb
and
inc
enter
insb
or
rorb
in
or
lds
in
or
les
inc
enter
add
add
add
mov
dec
test
lods
or
imul
fs
sub
popa
in
insb
insl
insl
pusha
test
dec
add
add
shll
adc
pop
mov
arpl
push
jae
xor
add
jmp
push
daa
adc
imul
add
push
and
iret
push
jns
and
aas
and
dec
dec
inc
cmp
mov
mov
stos
dec
jg
notb
aas
je
pop
loopne
imul
idivl
dec
xchg
xchg
mov
fcomi
lahf
bound
incb
push
movsb
aad
stos
jae
add
push
jg
lods
out
jne
aaa
gs
pop
stos
sbb
fs
inc
arpl
incb
pop
mov
xchg
inc
add
add
cmpl
incb
xor
dec
addr16
add
push
sbbl
jns
mull
ret
fwait
adc
and
aaa
sub
mov
scas
aad
enter
subl
jbe
int3
cmp
jg
adc
xchg
dec
sub
enter
and
push
fs
mov
out
sub
jle
popf
nop
pop
mov
sti
int3
outsb
fistl
stos
inc
fimull
inc
mov
inc
xor
in
push
es
adc
rcl
sbb
pop
bnd
dec
add
mov
outsl
sub
push
scas
jecxz
xchg
enter
mov
pop
loopne
outsb
cs
fadds
movsb
ret
pop
out
cmpsb
into
shll
mov
or
out
aaa
cmp
inc
bound
insl
das
fwait
add
std
mov
js
pop
dec
decb
adc
test
mov
mov
loopne
in
out
outsl
notl
ret
in
mov
and
iret
shrl
mov
add
data16
sti
mov
jae
jp
int
jmp
pop
test
daa
sbbb
call
fistps
sub
add
iret
insl
jae
sub
xchg
dec
jae
lcall
xor
incb
xchg
push
lcall
loop
divl
push
xchg
mov
test
ljmp
xor
rorl
xor
add
or
imul
test
mov
xchg
jbe
pusha
add
imul
lea
outsb
add
xchg
pushf
mov
and
xor
and
pop
in
cs
in
mov
add
push
ds
sbb
push
insb
add
test
push
mov
jae
int
add
stc
adc
add
jle
inc
add
mov
mov
out
mov
incb
adc
jo
dec
jg
in
dec
add
lods
gs
add
sub
fsubl
out
mov
add
andb
jge
push
xchg
out
test
mov
loopne
pop
scas
and
fwait
shrl
add
lods
rclb
jle
cmp
and
dec
fimull
add
in
pop
loopne
aam
sahf
hlt
out
aaa
adc
push
movsb
daa
outsl
addr16
inc
fwait
icebp
mov
incb
add
sbb
test
sub
xor
or
pop
test
sub
and
movsb
out
fistps
sub
arpl
or
lea
shl
sub
sub
div
inc
add
test
adc
in
rcr
scas
ror
mov
add
mov
sbb
aaa
sti
add
jno
test
out
inc
decb
push
adc
lock
mov
inc
pop
lahf
ljmp
pop
xor
decb
jle
and
adc
mov
jne
imul
lea
mov
sub
push
stos
enter
decb
je
testl
and
decb
jmp
adc
addb
mov
xchg
or
loop
xor
inc
cs
es
dec
lret
std
aaa
out
hlt
inc
in
into
lods
or
repz
jmp
enter
jmp
scas
shl
decb
in
out
imul
xor
out
pmuludq
enter
cwtl
mov
xor
outsl
jnp
int
addr16
or
rol
imul
insb
add
mov
xor
sbb
pop
popa
or
pop
mov
jl
pop
inc
lods
pop
inc
decb
loop
xor
data16
lods
or
add
decb
add
pop
xor
mov
out
mov
push
mov
int
scas
xchg
incb
add
popf
sbb
add
fiaddl
mov
add
mov
loop
xchg
lds
fisttpll
fs
incb
bnd
mov
leave
pop
js
ret
jns
pop
sarl
sub
sti
dec
shll
inc
add
aad
pusha
cmp
lods
mov
mov
incb
mov
loop
mov
clc
sbb
add
adc
gs
push
pop
or
decb
push
ret
sbb
push
push
idivl
xchg
xor
fs
push
pusha
add
fmul
outsl
es
fnstsw
adc
pop
pushf
or
ficomps
jmp
add
or
fstps
out
add
in
push
fisttpl
dec
js
adc
push
mov
add
test
inc
aas
mov
mov
loopne
xchg
outsb
fdivrl
xchg
icebp
dec
add
dec
add
xor
dec
test
mov
sbb
addr16
fmuls
jecxz
test
lock
cld
cwtl
sub
loope
lret
movsb
or
mov
incb
mov
lcall
data16
lock
or
sbb
rclb
in
popf
iret
xchg
push
sub
stc
aas
aad
fs
incb
jl
xor
lock
cld
inc
adc
add
fsubrs
sub
inc
fwait
or
in
xor
dec
add
fistpl
push
fs
testl
xor
out
jle
lods
dec
add
arpl
and
and
test
lret
rorb
cs
dec
mov
xchg
je
je
aas
mov
in
cmp
data16
sub
jg
cmp
inc
sbb
cmp
lock
test
nop
adc
mull
icebp
notl
mov
aad
ss
jle
mov
push
push
call
and
das
popa
and
mov
daa
xchg
lock
push
xchg
in
cmp
and
or
movsl
test
push
scas
sbb
fs
sbb
insb
mov
sti
pusha
add
add
mov
aam
rorl
cwtl
stos
push
cld
cmpsb
por
cmp
popa
or
pop
jl
mov
dec
sti
mov
outsl
mov
popf
xchg
mov
push
jmp
shrl
dec
jo
add
fldenv
mov
add
shrl
movsl
jl
aaa
icebp
push
jl
inc
es
and
cmc
mov
pop
adc
cmpsl
xchg
fdivs
dec
and
in
add
andl
and
inc
inc
add
mov
xor
js
fildll
les
cmc
mov
adc
lods
adc
dec
add
mov
pop
shrb
cmp
add
xchg
mov
gs
jbe
push
popa
push
mov
rcl
mov
decb
jl
push
bound
decb
mov
dec
shlb
pop
in
incl
jmp
adc
mov
std
jbe
sbb
add
sbb
mov
insb
decb
outsb
daa
cmp
pushf
sbb
leave
or
incb
add
cmp
sub
adc
xor
cld
cmc
insb
add
pusha
mov
out
adc
jmp
mov
out
pusha
stc
sarl
mov
add
popf
bound
std
adc
mov
lret
sbb
mov
test
dec
add
test
mov
aas
das
jo
push
jns
lret
lret
dec
mov
mov
in
stos
xchg
popa
adc
adc
jo
mov
lock
push
jbe
push
mov
adc
mov
adc
adcl
decb
jecxz
inc
jmp
incb
pusha
jae
sbbb
and
ljmp
inc
arpl
sub
cmp
add
out
add
incb
pushf
jns
cs
lcall
test
js
inc
and
adc
jg
sbb
adc
jb
add
cmp
clc
mov
add
in
in
out
inc
fucomp
movsb
test
sub
mov
xchg
stos
cmp
adc
mov
shr
cmpb
pusha
add
sbb
sahf
mov
f2xm1
sub
gs
mov
cmp
dec
sub
jg
jbe
inc
add
cli
shll
lret
cwtl
lea
jbe
cmp
sbb
sbb
std
inc
jbe
cmpsb
shlb
rclb
clc
cmc
push
out
addr16
aas
rorl
adc
mov
scas
in
xchg
aam
fldcw
or
in
mov
rcr
data16
xor
in
jp
int3
icebp
pushf
push
decb
incb
add
xor
ret
icebp
arpl
add
mov
stos
mov
adc
sti
fcmovnu
dec
cmp
fcomp
in
dec
shrl
outsb
cli
mov
ds
add
aad
cs
outsb
add
sub
sbb
and
out
cmpsb
xchg
dec
jnp
jecxz
lea
mov
ds
aaa
sbb
xor
cmpsl
or
jno
sbb
jp
mov
daa
sbb
decb
dec
and
incb
xlat
cmpsl
inc
int
add
mov
adc
repnz
dec
pop
jg
cmp
in
or
pop
add
sar
push
decb
xchg
jl
xchg
adc
mov
sti
mov
scas
fstl
add
jbe
mov
pop
sti
xchg
ljmp
mov
push
nop
xlat
mov
das
jp
add
leave
push
add
loope
jno
mov
out
arpl
mov
xchg
add
test
inc
and
decb
es
adc
in
or
adc
jl
and
data16
imul
xchg
jb
dec
add
mov
xchg
sti
addl
into
add
in
shll
add
sbb
pop
out
or
sub
aas
lods
inc
pop
adc
add
sbbl
add
bound
incb
mov
je
dec
mov
mov
sbb
cmp
add
jnp
nop
in
pop
fwait
mov
add
imul
xor
mov
ss
cltd
or
add
test
decb
es
push
mov
or
fisubs
push
sbb
pop
les
ss
jle
mov
sbb
mov
pop
pop
jb
mov
stc
xchg
pushf
aad
add
incb
push
push
sub
sub
movsb
sbb
inc
add
jle
outsl
mov
cmp
pusha
add
cmp
push
dec
add
nop
std
and
stos
mov
loopne
pop
popl
fs
decb
addr16
mov
mov
cmp
add
sub
pop
or
rclb
jle
cmp
rcr
lds
jo
in
test
mov
add
sub
aam
mov
sub
jg
inc
inc
decb
pop
xchg
popf
and
incb
dec
mov
enter
mov
mov
enter
pop
roll
incl
add
arpl
aad
fisubs
in
add
fisttpl
jbe
push
pop
mov
sti
les
push
pushf
rcll
push
xor
insb
add
adc
ret
icebp
loopne
mov
bound
pop
dec
pop
je
pop
aaa
fwait
or
adcb
popf
mov
pusha
stos
jo
ss
int3
ret
mov
xor
negl
xchg
pop
mov
adc
and
stos
xchg
stos
inc
add
and
cmp
push
cli
call
xlat
clc
pop
adc
cmp
notb
outsl
lret
jmp
dec
add
dec
xor
mov
in
add
les
mov
lea
xor
sub
inc
fnstcw
add
inc
leave
dec
xchg
cs
xchg
xchg
xor
dec
ss
pop
jg
loopne
lods
jnp,pt
scas
mov
pop
cltd
pop
dec
add
imul
lock
decb
ljmp
add
mov
adc
inc
jg
test
aaa
xor
add
mov
push
loop
push
add
mov
stos
sti
int3
pop
in
push
incb
incb
call
xor
out
mov
inc
int3
cwtl
jle
and
mov
push
cmp
or
gs
and
xchg
or
dec
call
lock
incb
sbb
jo
sub
mov
jmp
or
mov
scas
push
jl
jle
fwait
loopne
inc
jbe
xor
add
stos
cltd
push
cmp
push
jl
push
int3
mov
xorl
les
inc
inc
incb
add
push
repnz
add
je
ficoml
mov
test
lahf
pop
iret
pop
lahf
enter
dec
daa
movsl
sub
mov
add
cltd
xchg
and
pushf
mov
data16
lock
shll
mov
mov
movsl
push
cmp
and
jno
cld
sub
sbb
pop
lahf
stos
pop
es
test
out
sub
decb
add
sub
stos
cmpsb
pop
into
cmp
mov
call
pop
mov
stos
pushf
arpl
decb
outsb
jmp
mov
clc
dec
sub
adc
in
pop
mov
lret
xlat
mov
test
or
std
inc
add
hlt
inc
adc
pop
sbb
scas
and
xor
xor
out
jle
negl
fmull
gs
push
dec
add
mov
decb
mov
aaa
push
xchg
add
jnp
repz
pop
pop
inc
ret
xor
mov
decb
scas
fistpll
sbbb
add
lahf
into
xchg
inc
incb
jnp
push
pop
dec
testl
jnp
pop
cmp
ja
repz
add
add
mov
add
add
sahf
hlt
jp
popa
push
arpl
add
pusha
add
mov
sub
sub
xchg
mul
cltd
insl
cmpsl
imul
add
daa
dec
sbb
testb
mov
cmp
std
shll
imull
cld
daa
dec
inc
pop
aam
or
push
std
shl
mov
int3
inc
stc
jle
imul
mov
cmp
mov
cmpl
aas
jbe
jae
adc
out
in
cmc
sahf
call
outsl
ret
add
loope
out
dec
data16
inc
add
ret
fcmovnu
xor
clc
sub
xchg
enter
jmp
dec
sub
incb
add
mov
inc
mov
pop
cmpsl
lods
in
ret
jle
popf
push
add
out
dec
add
fwait
cs
fucomip
popa
add
mov
lock
push
add
jne
cmp
arpl
push
enter
decb
mov
mov
dec
sbb
xchg
in
call
test
loope
test
dec
cltd
fisttpl
mov
inc
or
cwtl
mov
out
xchg
test
jns
ljmp
mov
and
adc
pop
mov
push
xchg
negl
int3
test
sbb
jg
sbb
stc
dec
mov
adc
aad
xor
mov
add
rcr
xor
or
pop
lcall
addl
sub
pop
sbb
gs
xchg
cs
push
pop
std
mov
add
data16
xor
subb
push
arpl
out
jno
out
mov
in
pop
fcmovnbe
inc
clc
or
add
ljmp
jnp
push
test
incb
pop
mov
pusha
decb
enter
sub
in
jno
mov
jbe
cs
mov
jnp
push
dec
add
inc
inc
pop
es
jo
je
mov
in
loop
cli
push
out
rorb
xchg
repz
lret
out
sbb
sub
lods
and
decb
xor
sub
add
cmpsb
xchg
popa
fistpl
xchg
mov
decb
loope
xchg
pop
xchg
imul
jb
ja
dec
inc
and
and
add
or
les
or
jns
add
mov
jb
sahf
das
andl
pushl
in
or
aaa
mov
and
fisttpl
add
lods
mov
add
lea
and
decb
mov
test
pop
scas
out
lock
aaa
cld
mov
or
cltd
mov
jo
addr16
xor
cmp
push
cmpsl
inc
add
xchg
mov
shrb
decl
fwait
adc
or
in
cmp
mov
push
add
sbb
and
cmp
decb
xchg
sbb
dec
add
incb
xchg
push
xor
jns
push
out
int3
inc
push
xor
jno
scas
lods
cmp
add
gs
mov
cmp
cmc
insb
data16
decb
movsb
mov
add
mov
das
adc
insl
lock
aaa
jecxz
add
mov
dec
mov
jg
decb
adc
xchg
dec
adc
xchg
xor
cmpsl
lcall
sub
mov
add
aaa
aam
decb
push
dec
xor
add
sub
adc
out
pop
popf
and
mov
add
mov
int
sbb
decb
push
dec
incb
or
xor
xor
xchg
and
mov
add
lcall
insb
add
stos
shll
daa
repnz
incb
incb
outsb
jle
push
xor
xchg
movsb
repz
loopne
nop
xchg
sub
mov
decb
clc
xchg
jmp
sub
out
cltd
lods
jbe
push
adcb
js
fwait
cmp
and
call
push
inc
sti
es
mull
loope
into
inc
mov
add
into
inc
faddp
mov
jo
sub
xchg
push
cmp
xor
push
popa
lock
sub
mov
aas
popf
sub
std
ljmp
mov
xor
dec
movsl
rcll
push
xchg
mov
dec
adc
mov
jne
out
push
std
movsb
jecxz
dec
mov
and
rep
sbb
jae
pop
mov
mov
cmp
mov
mov
jne
les
inc
imul
aam
in
fisttpll
jmp
add
es
aam
mov
pop
fucomi
pop
add
xor
mov
movsb
ds
ds
xlat
adc
es
push
incb
mov
lret
push
gs
decb
dec
adc
pop
mov
int
aas
nop
idivb
cs
cmp
jbe
jo
dec
shrb
loopne
dec
add
sub
stos
int
incb
incb
mov
add
in
sbb
xchg
inc
out
test
pop
cmp
shr
dec
or
xchg
mov
inc
mov
adcl
out
popf
test
mov
shlb
add
fimull
jns
mov
test
incb
test
pop
out
popa
ret
ds
loope
pop
push
push
cmp
scas
pop
push
add
out
lock
xlat
mov
shll
cmp
or
bnd
mov
loop
lods
cmp
jae
ss
out
pushf
into
sub
inc
int3
scas
data16
fidivrl
jnp
cvtps2pd
incb
es
negb
fmulp
sbb
add
aad
adc
inc
add
sub
mov
and
inc
pusha
sub
inc
add
mov
xchg
testl
loop
add
add
incb
sub
decb
aas
cmp
lea
add
inc
add
or
jmp
out
push
mov
scas
ret
shrb
sub
lret
cli
pop
cmp
mov
mov
push
mov
jg
add
ret
psllw
mov
mov
ficompl
movsb
sahf
xchg
dec
jge
les
decb
cmc
jecxz
aaa
cmpsb
add
in
push
stc
int
cmp
mov
les
lods
push
dec
push
fcmovnb
add
lods
fldl
cld
fstps
loop
add
adc
or
pop
or
inc
test
add
cmpsb
cmp
fwait
sub
adc
xor
dec
mov
and
fistl
cmc
stos
loope
xor
sbb
and
fcomi
int
add
mov
iret
pop
lret
cwtl
fcompl
call
fucomi
decb
jne
in
adc
inc
cmpsb
mov
lods
sbb
cltd
mov
repz
ret
jo
scas
aas
stos
add
incb
sti
addr16
pop
mov
enter
xchg
imul
and
jnp
add
fdivrl
je
jmp
pop
inc
decb
add
mov
aam
add
sbb
add
in
cmpsb
push
arpl
sbb
add
push
push
add
incb
outsl
mov
xor
repz
mull
fisttps
std
jmp
mov
bound
cmp
mov
movsl
popf
lcall
or
jg
arpl
pop
loope
decb
xchg
sub
insb
add
lods
pop
rcrl
inc
add
mov
mov
imul
jb
bound
neg
pop
cwtl
loopne
popf
cmc
mov
cmp
jbe
jp
xor
clc
ds
add
incb
ja
enter
xor
call
sub
jmp
decb
adc
pop
ficompl
shll
mov
pop
sub
leave
lds
jle
push
cmp
cmp
add
movsb
mov
inc
adc
inc
pop
or
add
push
in
add
lcall
filds
nop
and
incb
mov
hlt
call
incb
outsb
adc
or
loopne
sbb
pop
add
ds
outsl
jg
dec
add
xlat
adc
xor
out
out
adc
vmovaps
inc
and
add
mov
inc
cmpsl
cli
stos
jb
out
mov
add
in
fwait
mov
aad
xor
cmp
push
cmp
pop
mov
in
mov
add
push
xor
adc
mov
test
loop
add
push
fs
or
aam
lcall
fisubs
push
lods
xor
fisttpll
pop
test
inc
add
shll
arpl
out
adc
inc
xlat
adc
stos
divb
mov
test
push
in
popa
jnp
mov
popf
xchg
ret
enter
aas
push
out
and
dec
insb
add
sub
sub
dec
jl
sahf
lret
cmp
nop
jbe
push
leave
push
call
cmpsl
xchg
mov
std
sub
add
fidivrl
bound
lock
sbb
ljmp
push
movsb
xchg
mov
aad
or
lock
ret
fcmovne
insl
in
subb
ds
in
xchg
pop
repz
hlt
enter
xor
add
jp
mov
xor
out
shrl
out
mov
rcrb
mov
jnp
add
out
sub
out
cmp
sub
decb
std
sub
mov
sub
jo
xchg
xor
add
mov
inc
cld
cmovnp
add
clc
mov
stos
xchg
mov
and
mov
rorb
je
add
loope
popf
add
add
in
add
lea
push
push
push
push
push
xchg
push
clc
test
je
jmp
pusha
xor
clc
lea
or
mov
shr
shr
add
push
push
push
call
leave
ret
ret
xchg
mov
or
xchg
shl
add
lea
sub
shr
dec
not
sub
mov
clc
jne
push
pop
add
lea
clc
jmp
jmp
push
mov
sub
lea
orl
andl
cld
push
call
inc
test
je
in
dec
and
push
push
push
call
mov
lea
test
jne,pn
dec
adc
push
adc
mov
jecxz
in
out
xor
mov
scas
cld
xchg
notb
nop
movb
adc
decb
test
loopew
imul
dec
push
inc
add
push
clc
lret
mov
incb
jbe
xlat
ja
sub
sahf
pop
push
xor
mov
pop
push
stos
xchg
add
cmp
mov
mov
scas
or
push
mov
hlt
fs
incb
jnp
lods
xor
mov
mov
and
sub
cs
ret
xchg
data16
js
imul
scas
std
push
add
out
sbb
decb
decb
xor
ljmp
icebp
xchg
mov
movsb
imul
outsl
and
and
add
aaa
pop
sub
outsb
add
and
decb
sbb
mov
xchg
sbb
int3
clc
int3
in
incb
movsb
sti
pop
int
aaa
in
mov
pop
push
das
or
xor
fwait
rol
sbb
call
cltd
fsubrl
cmp
mov
add
loopne
sbb
add
cs
incb
push
pop
adc
shlb
fptan
xchg
pop
push
jo
sub
sub
stos
push
lods
inc
data16
cmpsl
loop
std
push
lds
mov
jno
inc
add
testl
subl
dec
fstps
adc
les
push
int3
lea
push
mov
jne
pop
mov
lahf
cmp
es
adc
addr16
sti
jns
cmp
outsb
gs
out
dec
add
push
hlt
aaa
and
decb
adc
pushf
mov
imull
test
daa
jp
xor
sub
imul
fisttpll
mov
rolb
icebp
adc
xchg
test
adc
and
out
pop
sub
stos
mov
repnz
out
cltd
in
insl
xchg
jmp
xor
sbb
mov
and
push
jbe
jl
and
decb
notl
dec
enter
push
xchg
mov
jnp
leave
in
gs
dec
add
stos
je
fidivs
adc
xchg
mov
out
call
in
or
in
mov
int3
jp
mov
sub
mov
shl
mov
add
ljmp
je
add
jno
inc
add
pop
add
shrl
decb
jle
add
adc
add
incb
jecxz
sbb
or
mov
mov
mov
shrl
push
sub
sub
pusha
add
insb
add
adc
in
pop
mov
mov
fstps
insb
add
cltd
adc
cmp
ljmp
incb
repnz
jmp
cltd
int
cltd
cs
push
or
cmp
mov
mov
add
inc
add
cld
cmpsb
addb
add
sbb
lret
pop
clc
add
xchg
mov
pop
cmp
leave
xchg
lock
lea
jg
add
mov
loope
incb
adc
push
add
xchg
nop
mov
inc
pop
mov
cmp
cmp
mov
mov
mov
cld
ljmp
mov
xor
pop
dec
and
stos
jmp
cmp
or
incb
pop
inc
ljmp
test
insb
add
mov
mov
mov
outsl
std
xchg
dec
aaa
inc
adc
ja
stos
movsl
push
jg
decb
decb
aad
and
test
jno
lea
dec
push
icebp
outsb
add
nop
xor
or
out
lods
pop
ds
and
mov
enter
xchg
sti
frstor
pop
sbb
dec
add
cmp
decb
ds
fistl
add
xchg
mov
mov
stos
decb
sbb
adc
data16
sbb
dec
push
jb
sbb
cmpsb
aas
mov
mov
sub
movsb
push
cmp
sbb
or
fistps
sahf
out
int
xor
xor
xor
es
jmp
lcall
outsl
push
pop
out
or
sub
popa
enter
nop
rcrl
andl
pop
pop
lods
jbe
stc
adc
mov
cmp
lods
imul
mov
adc
jno
lods
sub
decb
jbe
cmpsl
push
mov
sbb
sbb
sbb
scas
add
cmc
lret
mov
add
mov
decb
decb
pop
insb
stos
dec
add
lret
mov
sub
cmp
pop
movsl
lea
mov
arpl
sbb
decb
mov
jb
int
adc
and
int
filds
cwtl
mov
dec
inc
add
adc
test
imul
stc
pop
lret
enter
add
mov
sbb
into
pop
std
lea
jo
add
sub
pop
scas
add
sbb
jg
cmp
decb
mov
and
fcmovnb
out
mov
idivb
scas
js
rcll
xchg
das
pop
fs
push
mov
repnz
jle
loopne
mov
icebp
xchg
jmp
and
push
fwait
xchg
out
hlt
mov
pop
insl
jns
add
out
sbb
push
mov
jnp
ja
popf
xchg
fidivl
insl
mov
xor
sub
incb
xor
jno
imull
pop
pop
mov
or
jo
inc
leave
sbb
daa
push
lock
addr16
mov
orl
jne
inc
jo
hlt
rcrl
add
fisubrl
add
xchg
xor
mov
push
pop
outsl
in
je
js
iret
jno
mov
inc
sub
out
add
fldln2
notl
pop
inc
idivb
push
mov
insl
adc
mov
stc
cli
aad
jmp
pushf
jae
icebp
mov
scas
push
insl
nop
sub
xchg
nop
cmp
lcall
rcll
mov
pushf
adc
imulb
pop
sbb
clc
movsl
or
mov
sbb
adc
dec
pop
xchg
je
pop
xchg
cmp
add
sbb
or
sub
fsubl
shlb
jnp
jnp
sbb
add
andl
mov
subl
adc
mov
and
inc
cmpsb
aaa
mov
out
repz
and
cs
nop
sub
ds
gs
clc
cmc
push
cli
insl
out
mov
dec
clc
inc
adc
push
es
insb
stc
cmp
outsb
add
test
jbe
std
jnp
pop
lcall
jle
adcb
and
decb
add
dec
push
push
pop
test
dec
add
lret
das
inc
add
or
movb
leave
xor
pop
bound
fdiv
repnz
cmp
lret
je
leave
adc
faddl
loop
aas
cmpsb
adc
adc
jle
in
fdivrs
lret
xor
fiaddl
jbe
clc
xorl
hlt
loope
pop
fistpll
push
mov
movsl
inc
adc
fwait
mov
aas
push
int3
into
push
decb
stos
mov
or
push
mov
in
jl
jg
stos
lods
daa
cmp
dec
stos
inc
add
pop
cwtl
push
mov
lcall
aaa
lds
adc
push
pusha
add
or
out
cmp
push
shll
lahf
sub
daa
mov
xor
adc
mov
cmp
rorb
sub
movsl
flds
add
sub
aaa
jo
xchg
jae
rcr
push
jae
or
pop
ret
insl
dec
cltd
insb
cmpsl
push
cmp
jbe
jnp
cs
ficoms
pusha
add
es
dec
push
and
pop
or
jmp
cmpl
sub
mov
sub
incb
add
push
add
fldcw
xchg
dec
xchg
xchg
xchg
inc
mov
sub
sar
stc
testl
decb
decb
pop
jge
lods
mov
add
aaa
mov
mov
inc
xor
in
add
pop
mov
int
mov
int
mov
cmp
ss
adc
xlat
bound
loopne
mov
inc
out
out
add
decb
pop
ffreep
pop
fildll
incb
dec
loopne
or
incb
icebp
lds
fs
ljmp
add
cmp
pop
mov
push
add
jno
arpl
pop
cmp
ja
imul
push
loop
push
cmp
sub
incb
add
pop
ljmp
sub
dec
sub
xor
sti
inc
cmp
lock
fadd
sub
loope
shrb
xchg
mov
push
cwtl
or
scas
xchg
daa
add
scas
pop
jl
lods
aas
push
lds
add
adc
test
rcrb
in
lock
mov
pop
cmpsb
jb
cmp
push
mov
cmp
movsl
cmp
xchg
xchg
lcall
jmp
cs
jb
mov
int3
lock
pop
imul
xchg
pop
gs
xor
jg
ret
push
mov
out
fwait
aas
mov
repz
adc
addr16
cmp
add
jecxz
in
sub
decl
sti
sbb
dec
lahf
mov
mov
mov
jle
ja
cmp
inc
add
sbb
dec
sahf
test
add
jl
lcall
and
cli
aam
iret
xchg
rcrl
xchg
pop
fistpll
loopne
jne
sub
decb
add
rcr
pop
mov
ja
push
inc
fisubrl
cwtl
mov
mov
mov
fwait
jp
sbb
in
jnp
pop
xchg
aaa
lea
adc
clc
adc
ret
adc
shrl
and
gs
cmpsb
out
cli
lods
in
adc
lea
add
sub
stos
dec
mov
rcrb
add
xchg
ret
sbb
or
sbb
jae
cmpb
enter
test
or
sub
into
cmp
add
ret
out
sarl
add
in
mov
or
inc
add
mov
dec
add
jbe
and
aaa
dec
jo
add
cmp
adcl
lcall
xchg
mov
add
out
xchg
fsubrl
dec
mov
icebp
add
cltd
sbbl
loope
push
pusha
lcall
pop
into
dec
incb
add
pop
or
aaa
dec
dec
add
push
ljmp
repz
sub
jo
xor
jecxz
lods
in
mov
int3
ljmp
mov
jp
lock
or
push
decb
sbb
cmp
decb
movsl
dec
add
mov
fidivrs
call
rcll
incb
sub
sub
sub
cmp
dec
aaa
push
dec
mov
jl
aam
sub
mov
sub
push
adc
ret
das
ret
cli
rorl
jnp
sahf
mov
add
aad
shlb
add
das
pop
mov
aaa
pop
mov
into
fstpt
jmp
es
pop
in
xor
pop
std
loop
pop
xlat
inc
add
loope
lods
add
jno
shll
add
sub
mov
xor
dec
push
add
sahf
mov
xor
loopne
cmp
test
mov
inc
dec
add
mov
sub
decb
ja
xor
inc
add
ljmp
xchg
hlt
or
hlt
push
in
clc
imul
jnp
lret
xor
xor
movsl
xchg
mov
mov
pop
mov
int
add
add
movsb
fbld
jns
xor
ja
cli
sbb
cmp
mov
add
out
cltd
int
add
inc
sub
decb
scas
arpl
nop
mov
aad
addb
frstor
push
cmpsb
aam
mov
jecxz
add
aaa
enter
call
inc
test
cld
inc
dec
xchg
lcall
xchg
ret
and
xchg
or
incb
cld
lods
adc
add
fdivl
hlt
push
aaa
subb
lret
jge,pt
or
incb
pop
mov
ja
pop
jns
shlb
dec
jo
addr16
add
or
outsb
add
cmc
daa
xchg
cld
jno
fcmovne
cmpsb
cmpsb
add
sysenter
mov
iret
test
cmp
jns
mov
jp
and
hlt
and
sub
in
and
adc
lcall
jno
call
or
mov
in
xchg
push
arpl
jecxz
test
add
lcall
pop
sub
js
test
imul
les
and
incb
inc
movsb
mov
add
cmp
jg
pop
and
xchg
pushf
cmp
add
mov
mov
fsubrl
dec
jno
xor
jge
sub
push
in
pop
movsl
or
sub
rorb
jns
sti
sub
faddl
lret
je
and
pop
test
or
push
jecxz
mov
popa
mov
lods
lds
cmpsb
sti
pop
cwtl
cmp
out
stos
cld
sbb
out
mov
fadds
movsl
pop
ljmp
test
add
shrl
je
xor
out
dec
incb
addr16
pop
js
or
movsl
inc
movsb
xor
push
add
decb
rorb
push
fistps
add
ss
inc
xor
add
test
lcall
pop
mov
and
decb
insb
rcll
out
mov
jne
shld
push
clc
nop
nop
nop
nop
jae
lods
add
add
daa
add
int
rclb
xchg
push
inc
add
add
cli
add
sti
lock
ficoml
in
leave
nop
jmp
add
add
cli
add
lahf
ss
clc
nop
nop
nop
nop
jae
mov
add
inc
inc
dec
test
lret
fistpl
push
mov
xchg
ret
mov
add
add
or
xor
jle
mov
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
mov
inc
add
add
add
add
add
dec
mov
clc
nop
nop
nop
nop
jae
add
add
push
and
data16
vpsubsb
nop
jmp
add
loop
in
add
add
push
sub
push
mov
xchg
ret
lret
sbbb
add
push
in
add
test
xchg
je
clc
nop
nop
nop
nop
jae
inc
inc
in
add
jnp
les
mov
xchg
ret
add
lret
add
add
in
add
cmp
adc
nop
nop
nop
jae
add
xchg
and
loop
push
add
pusha
stc
cli
xor
add
nop
push
mov
leave
nop
jmp
add
add
add
mov
jbe
add
mov
add
fs
inc
add
add
clc
nop
nop
nop
nop
jae
dec
add
add
inc
clc
nop
nop
nop
nop
jae
sbb
loop
add
xchg
inc
test
mov
xchg
ret
add
add
inc
cltd
add
xor
loopne
add
jmp
add
xor
add
add
add
and
lahf
add
movsl
jmp
add
xchg
mov
add
add
in
in
cli
ja
clc
nop
nop
nop
nop
jae
lret
add
dec
add
push
add
lret
clc
nop
nop
nop
nop
jae
pusha
in
push
add
loop
add
nop
nop
nop
nop
jae
push
push
cmp
inc
mov
add
add
add
cmpsb
pop
inc
add
add
mov
gs
clc
nop
nop
nop
nop
jae
push
jl
push
add
testl
sahf
adc
add
add
add
pop
je
clc
nop
nop
nop
nop
jae
push
add
ret
iret
xor
clc
nop
nop
nop
nop
jae
cli
add
add
mov
cmp
nop
nop
nop
jae
add
add
mov
in
scas
fcoml
nop
nop
nop
jae
add
sbb
add
in
add
cld
dec
je
clc
nop
nop
nop
nop
jae
stc
popa
add
add
leave
mov
clc
nop
nop
nop
nop
jae
add
add
jae
dec
add
jae
outsb
mov
xchg
ret
mov
cwtl
int
add
add
mov
push
mov
xchg
ret
xor
add
add
pusha
add
pop
aam
push
mov
or
push
add
ret
mov
add
scas
cmpl
jnp
stos
add
jno
nop
lret
xchg
jl
add
push
rcrl
inc
add
add
cmp
inc
jl
add
stc
add
nop
xchg
push
mov
cmc
dec
pop
add
addb
pushf
add
add
add
insl
push
clc
nop
nop
nop
nop
jae
pusha
add
add
in
add
cltd
add
data16
stos
sub
jmp
pushl
int
popa
add
add
add
mov
add
add
nop
nop
nop
nop
jae
push
add
mov
fs
jmp
sbbl
add
clc
nop
nop
nop
nop
jae
add
add
int
clc
nop
nop
nop
nop
jae
mov
add
test
push
pop
xor
call
clc
nop
nop
nop
nop
jae
mov
addb
push
inc
and
lods
push
pop
push
mov
xchg
ret
in
add
add
pop
mov
stc
add
adc
loopne
push
mov
xchg
ret
add
daa
addb
pusha
add
add
call
mov
xchg
ret
cltd
test
push
add
cwtl
add
add
aam
decl
mov
xchg
ret
ds
int
loop
dec
add
add
add
sbb
sbb
push
mov
xchg
ret
loop
mov
and
push
in
inc
add
push
mov
xchg
ret
add
mov
or
ds
popa
add
nop
nop
nop
nop
jae
xor
add
ss
push
pop
add
push
mov
xchg
ret
or
add
cwtl
loop
add
sbb
mov
leave
nop
jmp
cmp
stc
mov
push
add
fstl
push
mov
leave
nop
jmp
mov
stc
add
loop
add
in
leave
clc
nop
nop
nop
nop
jae
add
add
add
add
add
push
push
push
mov
xchg
ret
add
sbb
add
cmp
add
jl
fld1
clc
nop
nop
nop
nop
jae
jl
add
pusha
in
add
mov
incb
add
fcompl
or
nop
nop
nop
nop
jae
add
inc
push
test
mov
mov
clc
nop
nop
nop
nop
jae
push
mov
loopne
add
pop
push
mov
xchg
ret
loop
add
add
mov
mov
and
je
imul
clc
nop
nop
nop
nop
jae
cmp
add
mov
ds
and
add
clc
nop
nop
nop
nop
jae
add
mov
fistpl
nop
nop
nop
nop
jae
add
add
add
in
add
daa
xorl
outsl
inc
add
add
add
inc
add
cwtl
cmp
mov
clc
nop
nop
nop
nop
jae
add
dec
in
add
pop
subb
push
mov
xchg
ret
inc
add
loopne
add
add
nop
nop
nop
nop
jae
add
pop
push
add
add
add
mov
push
mov
xchg
ret
daa
mov
add
pusha
inc
adc
fs
notl
push
mov
xchg
ret
loopne
pusha
popa
add
filds
add
mov
adc
nop
jmp
add
mov
jae
add
push
in
pop
enter
sbb
nop
nop
nop
nop
jae
in
add
jae
adc
shll
add
add
dec
lods
add
loop
and
lahf
popa
add
stc
push
add
inc
push
mov
xchg
ret
mov
add
add
adc
maskmovq
push
mov
xchg
ret
add
pop
cmp
in
cltd
mov
dec
push
mov
xchg
ret
inc
add
lods
inc
loop
fs
loop
add
push
clc
nop
nop
nop
nop
jae
add
add
add
add
jmp
clc
nop
nop
nop
nop
jae
add
add
add
push
int
roll
push
mov
leave
nop
jmp
in
add
add
dec
inc
fld1
clc
nop
nop
nop
nop
jae
loop
inc
loopne
add
sbb
cwtl
and
mov
adc
nop
nop
nop
nop
jae
add
in
cmp
dec
add
clc
nop
nop
nop
nop
jae
loop
add
add
add
shr
clc
nop
nop
nop
nop
jae
daa
loopne
add
add
cwtl
loop
push
mov
xchg
cmpsl
add
mov
add
add
enter
add
aaa
add
clc
nop
nop
nop
nop
jae
dec
cmp
sbb
loop
add
cmp
clc
nop
nop
nop
nop
jae
cltd
add
in
inc
add
add
pusha
clc
nop
nop
nop
nop
jae
loopne
add
daa
sbb
add
pop
daa
add
addl
add
add
add
add
dec
add
and
outsl
mov
push
mov
xchg
ret
add
add
add
es
push
mov
push
mov
xchg
ret
add
add
cwtl
add
fidivs
pop
lods
clc
nop
nop
nop
nop
jae
in
in
push
cwtl
add
add
add
nop
nop
nop
nop
jae
add
add
xorb
push
popa
dec
nop
push
mov
leave
nop
jmp
push
cwtl
add
filds
add
cwtl
add
xor
pop
nop
push
mov
leave
nop
jmp
lret
daa
add
push
sbb
add
dec
in
decl
nop
nop
nop
jae
cmp
add
mov
incb
add
call
mov
xchg
ret
add
mov
in
add
add
inc
cltd
ss
test
pop
add
clc
nop
nop
nop
nop
jae
add
and
add
inc
add
nop
push
mov
leave
nop
jmp
loop
pusha
adc
mov
clc
nop
nop
nop
nop
jae
add
add
inc
mov
mov
mov
fld1
clc
nop
nop
nop
nop
jae
add
jae
sti
inc
cmp
add
clc
nop
nop
nop
nop
jae
dec
add
push
add
mov
nop
push
mov
leave
nop
jmp
fistps
add
repz
push
mov
xchg
ret
add
add
addb
pop
in
lret
ud0
push
mov
xchg
ret
adc
add
or
add
add
pop
inc
add
and
mov
xchg
ret
add
mov
add
and
js
mov
xchg
ret
mov
push
stc
add
inc
add
loope
jne
push
mov
xchg
ret
add
pusha
add
pop
push
add
add
pop
push
push
mov
xchg
ret
mov
add
ss
inc
cli
xchg
insb
dec
outsb
add
mov
decb
incb
clc
nop
nop
nop
nop
jae
lahf
loop
add
mov
pop
clc
nop
nop
nop
nop
jae
add
dec
add
add
cmp
add
pop
adc
nop
nop
nop
nop
jae
pop
add
jae
add
add
dec
add
test
push
nop
nop
jae
or
mov
add
push
mov
xchg
ret
mov
in
inc
push
inc
add
lods
mov
sarb
mov
or
ret
add
mov
add
jg
sar
nop
nop
nop
nop
jae
add
add
lret
add
add
add
int3
bound
dec
pop
pop
push
mov
xchg
ret
mov
add
add
int
loop
test
jo
add
push
mov
xchg
ret
loop
fists
add
add
sub
roll
mov
or
ret
add
ds
add
dec
push
add
inc
push
js
jg
clc
nop
nop
nop
nop
jae
cmp
add
filds
xor
ret
stos
clc
nop
nop
nop
nop
jae
add
in
add
push
pop
add
add
into
lcall
nop
nop
jae
in
add
add
sbb
clc
nop
nop
nop
nop
jae
add
add
jae
popa
or
es
js
shrb
ja
aaa
nop
push
mov
leave
nop
jmp
add
loopne
in
add
push
loopne
jg
clc
nop
nop
nop
nop
jae
add
add
add
add
and
push
inc
clc
notl
mov
xchg
ret
in
add
add
cmp
or
xchg
pop
sub
clc
nop
nop
nop
nop
jae
add
pop
in
xchg
mov
clc
nop
nop
nop
nop
jae
add
add
add
xchg
push
add
loopne
mov
cmpl
nop
push
mov
leave
nop
jmp
loop
add
add
fadds
nop
nop
jae
add
loopne
lret
inc
add
add
psubsb
sub
add
nop
nop
nop
nop
jae
add
add
add
add
add
pop
pop
nop
push
mov
leave
nop
jmp
push
in
add
add
popa
bound
jbe
xchg
ja
add
loopne
in
add
add
add
add
and
mov
add
clc
nop
nop
nop
nop
jae
loopne
in
adc
add
add
xchg
mov
push
mov
xchg
ret
in
sbb
add
add
add
je
xor
clc
nop
nop
nop
nop
jae
add
lret
dec
sti
pusha
sub
inc
xor
add
add
add
stos
test
mov
add
push
xchg
pop
jnp
push
mov
xchg
ret
mov
add
push
add
push
in
stc
mov
lods
push
mov
xchg
ret
add
add
add
pop
add
inc
push
clc
nop
nop
nop
nop
jae
mov
sbb
lret
ja
clc
nop
nop
nop
nop
jae
xchg
add
add
push
pusha
and
nop
nop
nop
jae
cmp
fbld
loopne
test
clc
nop
nop
nop
nop
jae
add
push
jl
push
daa
add
cmp
nop
nop
nop
nop
jae
cmp
push
loop
lahf
add
add
mov
mov
aad
jnp
sub
cmp
xor
mov
add
fwait
clc
nop
nop
nop
nop
jae
add
add
sti
add
and
pop
jge
testl
nop
nop
nop
nop
jae
xchg
or
add
add
xchg
jno
add
pop
cmp
add
lret
and
push
add
add
jb
pushl
clc
nop
nop
nop
nop
jae
add
in
in
add
cmp
call
nop
jae
add
jae
add
or
dec
loop
push
test
pop
clc
nop
nop
nop
nop
jae
add
push
push
add
add
add
adc
add
inc
pusha
in
add
cmp
xor
add
cmp
cwtl
add
mov
nop
nop
nop
nop
jae
add
add
add
add
loop
sbb
fstl
nop
nop
nop
nop
jae
inc
mov
push
add
add
in
add
add
nop
nop
nop
nop
jae
add
sbb
in
in
add
pop
addb
sub
clc
nop
nop
nop
nop
jae
add
add
loop
pop
jne
clc
nop
nop
nop
nop
jae
push
add
add
add
xor
sub
scas
sbb
add
nop
nop
nop
nop
jae
in
add
dec
add
mov
jle
jb
nop
push
mov
leave
nop
jmp
jae
add
inc
push
test
nop
nop
nop
jae
ss
add
int
add
fbld
add
icebp
push
mov
push
cmp
in
add
or
js
add
add
mov
imul
je
clc
nop
nop
nop
nop
jae
add
in
add
jmp
mov
leave
nop
jmp
push
add
xor
test
add
pop
clc
nop
nop
nop
nop
jae
sbb
push
add
inc
add
jl
mov
or
push
mov
leave
nop
jmp
ss
in
lret
add
sti
mov
clc
nop
nop
nop
nop
jae
add
add
add
push
mov
xchg
ret
loop
sbbb
and
add
add
add
jmp
lcall
add
add
pop
lods
in
add
add
nop
mov
xor
clc
nop
nop
nop
nop
jae
add
add
add
xchg
add
cli
adc
incb
add
sub
add
clc
nop
nop
nop
nop
jae
push
mov
add
add
das
mov
push
mov
xchg
ret
add
pusha
in
add
push
pop
push
dec
mov
clc
nop
nop
nop
nop
jae
add
add
xor
add
mov
fists
in
add
ret
add
decl
add
aas
push
add
add
add
adcb
and
push
mov
leave
nop
jmp
add
add
cmp
in
inc
dec
and
nop
nop
nop
jae
add
push
add
repz
clc
nop
nop
nop
nop
jae
mov
and
add
mov
sub
pop
fistpl
clc
nop
nop
nop
nop
jae
loop
add
add
add
jl
mov
nop
nop
nop
nop
jae
xchg
lahf
mov
add
add
out
clc
nop
nop
nop
nop
jae
add
in
pop
inc
fs
sti
add
ds
xchg
mov
clc
nop
nop
nop
nop
jae
push
add
add
sti
pusha
xchg
add
jle
lahf
pop
inc
add
loopne
add
add
mov
push
mov
xchg
ret
mov
inc
in
adc
or
add
clc
nop
nop
nop
nop
jae
add
add
pop
lods
in
int
cwtl
sbb
push
push
clc
nop
nop
nop
nop
jae
add
in
inc
push
add
add
add
outsb
decb
mov
addl
add
add
fists
cli
inc
add
mov
add
add
add
cmp
nop
nop
nop
jae
ds
sti
lods
add
push
add
sbb
sar
nop
nop
nop
nop
jae
add
add
int
repnz
mov
push
mov
xchg
ret
loopne
add
push
loopne
add
test
nop
nop
nop
nop
jae
push
add
add
add
add
test
and
add
nop
nop
nop
nop
jae
add
sbb
add
mov
mov
pop
and
fyl2xp1
xchg
xchg
roll
add
adc
in
call
clc
nop
nop
nop
nop
jae
add
mov
sti
idivb
jb
nop
push
mov
leave
nop
jmp
daa
xor
daa
add
inc
pusha
decb
test
clc
nop
nop
nop
nop
jae
jl
mov
add
add
push
push
mov
xchg
ret
add
add
inc
filds
mov
cs
and
nop
nop
nop
jae
push
cmp
add
add
popa
adc
mov
clc
nop
nop
nop
nop
jae
add
int
add
add
lods
add
push
call
clc
nop
nop
nop
nop
jae
add
add
add
cmp
addb
or
ret
add
lahf
add
add
add
xor
aaa
jne
clc
nop
nop
nop
nop
jae
loop
mov
add
nop
nop
nop
jae
adc
inc
push
test
add
in
sahf
lods
push
push
mov
xchg
ret
mov
add
mov
cli
add
in
push
mov
mov
jge
adc
add
add
pushf
lods
rcrb
mov
decb
gs
add
adc
filds
mov
mov
jl
filds
xor
or
test
or
add
nop
nop
nop
nop
jae
daa
lret
test
push
mov
jns
inc
mov
cmp
push
add
add
mov
add
pop
jb
fistpl
push
mov
xchg
ret
sbb
add
jl
add
add
add
imul
jmp
loopne
lods
cmp
add
mov
push
nop
push
mov
leave
nop
jmp
add
add
test
add
in
cmp
inc
add
imul
nop
or
add
lods
add
sbb
and
pop
lods
cmp
nop
push
mov
leave
nop
jmp
sbb
fistpll
add
add
rdtsc
add
clc
nop
nop
nop
nop
jae
push
pop
add
add
jmp
fld1
clc
nop
nop
nop
nop
jae
add
popa
add
add
mov
clc
nop
nop
nop
nop
jae
jae
add
test
sti
in
add
lret
lods
jmp
add
add
adc
push
lahf
add
add
add
push
push
xchg
nop
push
mov
leave
nop
jmp
add
inc
add
inc
push
loopne
add
stos
sbb
jle
add
add
in
add
add
add
inc
add
push
mov
xchg
ret
in
add
and
jl
in
mov
jp
add
repnz
inc
sub
nop
nop
nop
nop
jae
inc
add
add
jl
mov
nop
nop
nop
nop
jae
popa
adc
add
cwtl
add
pop
pop
clc
nop
nop
nop
nop
jae
push
push
in
loopne
add
loop
cli
or
jo
mov
clc
nop
nop
nop
nop
jae
add
add
add
add
add
add
push
mov
xchg
ret
adc
add
cmp
push
add
in
add
decb
push
mov
leave
nop
jmp
add
mov
add
out
push
push
mov
xchg
ret
push
add
add
add
add
movzwl
clc
nop
nop
nop
nop
jae
add
xor
mov
out
pop
push
mov
xchg
ret
add
add
and
xchg
add
mov
nop
nop
jae
add
int
filds
add
add
add
push
jmp
nop
nop
nop
nop
jae
add
add
in
add
xor
nop
nop
jae
add
xchg
loopne
add
aad
rclb
pop
nop
inc
add
add
inc
and
mov
push
es
jecxz
nop
nop
nop
nop
jae
in
push
add
shrb
nop
nop
jae
loopne
cli
add
loop
push
add
loop
push
push
mov
xchg
ret
add
sbb
push
ss
add
add
sbb
popa
inc
add
in
add
inc
loopne
add
push
mov
xchg
ret
inc
int
adc
sti
add
sbb
add
clc
nop
nop
nop
nop
jae
add
add
add
add
sahf
imul
gs
add
add
loop
add
sti
add
add
inc
mov
push
mov
xchg
ret
int
add
add
add
push
add
mov
xchg
ret
cli
add
add
add
add
push
add
add
nop
push
mov
leave
nop
jmp
pusha
add
mov
add
clc
nop
nop
nop
nop
jae
add
filds
add
adc
cltd
pop
push
mov
xchg
ret
loopne
add
inc
push
in
add
add
push
sub
mov
leave
nop
jmp
sbb
ds
inc
add
cmp
xor
push
mov
xchg
ret
cmp
add
mov
and
adc
rclb
jns
add
add
cwtl
add
add
in
pop
clc
nop
nop
nop
nop
jae
or
add
inc
stc
dec
add
and
mov
push
nop
push
mov
leave
nop
jmp
add
add
lret
pop
push
mov
xchg
ret
add
add
inc
sti
add
push
add
sahf
dec
cmp
nop
push
mov
leave
nop
jmp
add
mov
int
push
ret
clc
nop
nop
nop
nop
jae
and
add
add
inc
add
cmp
add
clc
nop
nop
nop
nop
jae
or
add
add
add
loopne
mov
clc
nop
nop
nop
nop
jae
add
add
loopne
test
push
dec
add
mov
clc
nop
nop
nop
nop
jae
stc
cmp
xchg
add
add
add
pop
outsl
add
clc
nop
nop
nop
nop
jae
pop
pusha
add
add
sbb
cltd
xchg
inc
add
loopne
add
add
add
add
clc
nop
nop
nop
nop
jae
mov
push
daa
int
dec
mov
clc
nop
nop
nop
nop
jae
add
inc
add
push
add
popa
cmp
jne
nop
push
mov
leave
nop
jmp
add
mov
loop
add
nop
nop
nop
nop
jae
test
add
in
add
dec
mov
push
mov
xchg
ret
add
add
cmp
mov
popa
pop
cmp
adc
xor
nop
nop
nop
nop
jae
or
jl
mov
mov
sti
fwait
clc
nop
nop
nop
nop
jae
add
adc
add
cmp
add
add
repnz
jae
jl
and
divl
add
add
sbb
mov
inc
pop
sbb
push
mov
or
add
add
pop
push
adc
add
add
into
add
clc
nop
nop
nop
nop
jae
add
ss
add
in
mov
push
mov
inc
mov
scas
dec
add
dec
jmp
add
mov
mov
clc
nop
nop
nop
nop
jae
lods
inc
add
push
add
inc
sbb
in
xor
rolb
clc
add
add
push
mov
sarb
inc
jb
add
loope
sub
add
nop
nop
nop
nop
jae
add
cltd
add
pop
add
mov
lahf
xor
clc
nop
nop
nop
nop
jae
mov
add
add
movsb
clc
nop
nop
nop
nop
jae
cmp
pop
add
in
in
add
push
decb
sti
nop
push
mov
leave
nop
jmp
add
sbb
add
inc
dec
sub
nop
nop
jae
add
cwtl
add
add
add
inc
fucomip
or
nop
nop
nop
nop
jae
in
push
fistpll
add
add
mov
leave
nop
jmp
mov
add
loopne
add
add
add
push
mov
xchg
ret
filds
add
add
add
lods
pop
test
nop
push
mov
leave
nop
jmp
lods
add
add
int
add
add
test
nop
nop
nop
nop
jae
xor
int
inc
dec
add
mov
add
push
mov
xchg
ret
pusha
add
push
add
dec
ss
add
cmpsl
fistpl
clc
nop
nop
nop
nop
jae
add
in
add
mov
add
sbb
mov
sub
nop
nop
nop
nop
jae
and
in
add
cs
inc
mov
nop
push
mov
leave
nop
jmp
in
add
stc
add
add
xor
mov
clc
nop
nop
nop
nop
jae
xchg
add
pusha
add
inc
sbb
add
nop
push
mov
leave
nop
jmp
add
add
add
sbb
cmp
nop
nop
nop
nop
jae
add
ds
cltd
fs
add
mov
add
clc
nop
nop
nop
nop
jae
pop
popa
add
add
add
shr
nop
push
mov
leave
nop
jmp
add
inc
add
loop
cli
add
cmpsb
dec
pop
nop
push
mov
leave
nop
jmp
push
add
push
add
add
add
add
pop
clc
nop
nop
nop
nop
jae
jl
mov
addb
cmp
out
add
decb
pop
xchg
nop
nop
jae
add
lahf
add
dec
pop
add
decb
push
inc
add
add
add
push
cli
jae
push
add
add
sbb
sbb
clc
nop
nop
nop
nop
jae
add
add
daa
mov
jae
inc
add
add
jl
add
and
in
add
push
xchg
fwait
push
mov
xchg
ret
jae
add
add
mov
xor
nop
nop
nop
nop
jae
ds
add
add
add
gs
push
mov
xchg
ret
add
add
fs
loop
adc
dec
push
push
mov
xchg
ret
and
add
in
adc
xchg
test
and
clc
nop
nop
nop
nop
jae
cli
cli
add
popa
add
add
jo
sbb
ja
clc
nop
nop
nop
nop
jae
stc
add
add
push
push
push
mov
xchg
ret
popa
loopne
add
cmp
add
lods
loop
call
clc
nop
nop
nop
nop
jae
add
add
jl
sbb
test
sbb
add
nop
nop
nop
nop
jae
daa
add
add
loopne
inc
add
clc
nop
nop
nop
nop
jae
add
mov
and
push
mov
leave
nop
jmp
add
add
add
and
cmp
cmp
pop
or
nop
push
mov
leave
nop
jmp
in
fs
add
add
pop
push
mov
sbb
sbb
add
add
fldt
out
mov
pushf
sbb
nop
nop
nop
jae
cltd
pusha
popa
add
add
add
add
or
shlb
stc
fwait
clc
nop
nop
nop
nop
jae
add
cmp
test
add
in
and
cs
clc
nop
nop
nop
nop
jae
add
sbb
pop
mov
shlb
nop
push
mov
leave
nop
jmp
push
lret
push
add
filds
add
add
jge
mov
add
test
add
add
add
or
add
hlt
int3
sub
add
mov
nop
nop
jae
pop
jae
add
add
add
popa
pusha
loop
jmp
add
adc
add
subb
in
push
mov
add
adc
nop
jmp
add
mov
add
in
add
add
push
std
cld
rorl
or
or
and
add
nop
jmp
add
cli
in
mov
add
inc
mov
clc
nop
nop
nop
nop
jae
add
pop
lahf
jl
add
mov
mov
leave
nop
jmp
cltd
add
jl
pusha
loop
add
clc
nop
nop
nop
nop
jae
add
loopne
add
add
dec
inc
add
mov
push
mov
xchg
ret
loopne
add
sti
add
in
add
nop
push
mov
leave
nop
jmp
add
mov
pusha
add
cmp
fwait
push
mov
xchg
ret
mov
add
loopne
add
jae
loop
lods
rcll
nop
nop
nop
nop
jae
popa
add
add
add
nop
nop
nop
nop
jae
push
add
add
nop
cmp
xor
nop
nop
nop
nop
jae
cltd
push
add
addb
cmp
rolb
pusha
xchg
inc
add
add
pop
in
popa
loop
add
addb
add
stos
add
add
jo
mov
add
inc
mov
pop
push
clc
nop
nop
nop
nop
jae
add
add
and
mov
add
nop
nop
nop
nop
jae
add
add
cltd
addb
add
cmp
push
or
ret
xchg
push
add
add
lahf
add
xchg
cmp
add
imul
filds
add
in
stc
add
cmp
cltd
add
je
clc
nop
nop
nop
nop
jae
cli
fbld
add
in
add
add
nop
push
mov
leave
nop
jmp
jae
mov
mov
call
nop
jae
add
add
add
add
add
xchg
stos
pusha
push
mov
xchg
ret
fs
loop
sbb
daa
add
push
add
mov
push
mov
leave
nop
jmp
mov
add
popa
add
in
add
and
push
push
mov
xchg
ret
loopne
cltd
add
cli
in
and
add
stos
push
mov
xchg
ret
add
pusha
add
add
sbb
sti
in
inc
add
clc
nop
nop
nop
nop
jae
cmp
mov
add
add
ret
call
nop
push
mov
leave
nop
jmp
add
push
add
add
xchg
shlb
incb
push
mov
xchg
ret
loopne
lahf
add
push
add
add
add
add
decb
xlat
mov
nop
push
mov
leave
nop
jmp
add
add
inc
add
daa
add
data16
nop
nop
nop
nop
jae
add
test
cltd
pusha
cmp
adc
xor
clc
nop
nop
nop
nop
jae
push
add
add
add
lahf
dec
push
mov
xchg
ret
jae
adc
add
pusha
add
cmp
add
lds
in
js
add
pusha
mov
inc
and
mov
add
push
inc
add
clc
nop
nop
nop
nop
jae
inc
adc
add
mov
add
imul
cmp
cmp
sbb
add
jae
fs
adc
decb
mov
mov
xchg
ret
cmp
pusha
loopne
push
popa
mov
pusha
add
add
push
mov
xchg
ret
add
jae
cli
jae
fucomip
add
insb
clc
nop
nop
nop
nop
jae
lahf
push
daa
dec
loopne
or
jg
add
insb
nop
push
mov
leave
nop
jmp
add
sti
test
mov
data16
dec
incb
add
jp
cmp
test
nop
push
mov
leave
nop
jmp
add
stc
add
pusha
in
add
inc
jo
sbb
push
mov
leave
nop
jmp
lret
mov
add
push
add
add
out
add
clc
nop
nop
nop
nop
jae
add
push
add
ss
add
in
jne
clc
push
mov
xchg
ret
push
in
mov
dec
and
pop
dec
xor
clc
nop
nop
nop
nop
jae
add
mov
add
jmp
add
add
loopne
add
lret
in
andb
push
mov
leave
nop
jmp
add
add
add
mov
out
or
nop
nop
nop
nop
jae
push
add
loopne
add
call
nop
jae
lods
add
loopne
add
add
test
adc
nop
nop
nop
jae
inc
mov
and
sbb
ja
nop
push
mov
leave
nop
jmp
add
in
push
push
add
inc
add
add
in
leave
nop
jmp
add
jl
pop
lret
add
add
add
add
push
mov
xchg
ret
daa
add
mov
add
add
lea
in
inc
add
add
add
xchg
insl
or
test
inc
sti
pop
add
mov
add
clc
nop
nop
nop
nop
jae
jae
ss
cmp
inc
add
pop
push
clc
nop
nop
nop
nop
jae
add
push
add
add
adc
add
mov
nop
nop
nop
jae
loopne
add
add
cmp
add
loope
clc
nop
nop
nop
nop
jae
and
add
push
loopne
andb
or
inc
jne
clc
nop
nop
nop
nop
jae
cmp
mov
add
aaa
call
clc
nop
nop
nop
nop
jae
mov
add
mov
call
nop
jmp
add
cltd
mov
nop
nop
jae
add
lret
add
lret
add
mov
add
sub
clc
nop
nop
nop
nop
jae
andb
popa
push
in
loop
fisttpl
nop
nop
jae
cmp
add
jae
push
popa
add
mov
leave
nop
jmp
add
in
push
inc
mov
add
mov
loope
sbb
push
mov
xchg
ret
add
add
add
add
add
xchg
movb
repnz
xchg
ret
add
cli
add
pop
adc
in
fucomip
xor
test
add
clc
nop
nop
nop
nop
jae
add
add
mov
clc
nop
nop
nop
nop
jae
pop
pop
mov
daa
pop
push
mov
push
cmp
in
dec
add
xlat
sub
mov
and
push
inc
pslld
leave
nop
jmp
fists
add
lahf
add
movsb
cld
mov
nop
nop
nop
nop
jae
pop
cli
add
mov
daa
jae
adc
nop
nop
nop
nop
jae
xchg
mov
add
in
inc
add
cmc
push
push
mov
xchg
ret
in
and
int
inc
pusha
add
push
add
or
mov
xchg
ret
add
cmp
add
add
cmp
xchg
inc
clc
nop
nop
nop
nop
jae
pop
int
sti
mov
mov
in
mov
nop
nop
nop
nop
jae
mov
test
jl
int
sbb
add
add
add
xchg
sub
inc
cmp
nop
nop
nop
nop
jae
add
push
in
mov
jae
add
pusha
push
mov
xchg
ret
add
add
add
loop
add
inc
sbb
outsl
popa
push
mov
xchg
ret
add
add
popa
cltd
add
add
or
sub
nop
nop
nop
nop
jae
add
add
add
push
lret
lret
and
clc
nop
nop
nop
nop
jae
cwtl
mov
daa
xor
add
xor
in
add
mov
add
pop
scas
gs
adc
add
bnd
fcoms
pop
addl
and
lret
cwtl
lret
loop
add
mov
mov
push
add
inc
add
orl
add
mov
jns
add
jmp
and
push
mov
leave
nop
jmp
mov
add
ds
push
mov
xchg
ret
and
add
pusha
sbb
mov
fistpl
push
mov
xchg
ret
cmp
add
add
ss
mov
add
mov
nop
push
mov
leave
nop
jmp
jae
lahf
add
inc
add
add
cmpsl
add
clc
nop
nop
nop
nop
jae
jl
mov
add
ss
push
mov
xchg
ret
mov
add
add
push
enter
and
js
nop
nop
nop
nop
jae
adc
add
add
push
mov
xchg
ret
add
add
add
add
in
add
fistpl
push
mov
xchg
ret
mov
pop
cmp
add
adc
mov
clc
nop
nop
nop
nop
jae
cltd
inc
add
add
mov
mov
imul
fisttpll
cmp
movsb
outsb
dec
pop
inc
pop
clc
nop
nop
nop
nop
jae
push
add
push
add
sbb
popa
test
nop
push
mov
leave
nop
jmp
inc
pusha
pusha
jae
add
push
movsb
mov
nop
nop
jae
push
pop
xor
adc
pop
push
mov
xchg
ret
add
xchg
add
sbb
cltd
mov
xchg
or
add
pusha
add
add
add
stc
daa
add
sti
add
add
incb
mov
push
mov
xchg
ret
add
inc
lret
add
add
mov
nop
push
mov
leave
nop
jmp
mov
add
sub
push
mov
xchg
ret
add
cli
add
add
mov
loop
mov
clc
nop
nop
nop
nop
jae
add
mov
inc
inc
inc
add
or
inc
add
add
add
add
add
add
add
clc
nop
nop
nop
nop
jae
add
add
add
push
mov
leave
nop
jmp
loopne
add
add
sbb
add
sub
mov
push
mov
xchg
ret
in
mov
jae
lret
mov
cmc
xchg
xchg
ret
push
push
add
add
add
push
cwtl
cmp
add
push
mov
xchg
ret
pop
in
add
add
add
or
mov
clc
nop
nop
nop
nop
jae
add
cli
add
add
pusha
jo
pop
hlt
cmp
mov
xchg
ret
in
add
loop
cmp
stc
add
add
nop
nop
nop
jae
lahf
xor
push
loop
sbb
add
pusha
lahf
push
clc
nop
nop
nop
nop
jae
add
mov
add
pop
clc
nop
nop
nop
nop
jae
add
pop
add
add
mov
roll
nop
nop
jae
or
add
add
mov
nop
push
mov
leave
nop
jmp
add
push
add
push
mov
add
dec
and
and
xor
add
sbb
xchg
add
insl
xchg
clc
nop
nop
nop
nop
jae
inc
push
adc
jae
or
xchg
mov
pushl
add
ss
popa
ss
add
cmp
add
gs
clc
nop
nop
nop
nop
jae
push
add
andb
add
xchg
push
mov
xchg
ret
add
cltd
xor
mov
xorl
clc
nop
nop
nop
nop
jae
jae
add
mov
add
clc
nop
nop
nop
nop
jae
lret
loopne
push
add
push
sbb
les
push
mov
xchg
ret
add
loopne
and
in
inc
add
arpl
in
or
add
inc
add
add
mov
sbb
or
incb
and
mov
xchg
ret
popa
add
add
dec
pop
call
clc
nop
nop
nop
nop
jae
add
int
add
add
lea
nop
push
mov
leave
nop
jmp
add
sbb
dec
add
in
aaa
je
clc
nop
nop
nop
nop
jae
sti
add
dec
mov
loop
cwtl
lea
xchg
lcall
jae
pusha
add
in
add
cmp
nop
nop
jae
sbb
add
add
add
push
add
adc
mov
clc
nop
nop
nop
nop
jae
add
add
push
add
loopne
mov
leave
nop
jmp
add
pop
add
lahf
and
and
nop
nop
nop
nop
jae
push
add
push
lods
lods
loop
add
mov
sub
push
lea
push
mov
xchg
ret
pusha
add
add
add
push
mov
xchg
ret
mov
add
add
loopne
add
mov
test
push
mov
leave
nop
jmp
lods
add
add
in
mov
add
js
inc
fld1
push
mov
xchg
ret
and
daa
add
popa
add
stc
add
add
nop
nop
nop
nop
jae
add
xor
adc
mov
add
add
clc
nop
nop
nop
nop
jae
in
add
add
pop
add
add
mov
clc
nop
nop
nop
nop
jae
add
cmp
jg
clc
nop
nop
nop
nop
jae
sbb
add
test
add
add
mov
mov
xchg
ret
add
push
daa
add
add
add
je
clc
nop
nop
nop
nop
jae
add
push
xchg
je
nop
push
mov
leave
nop
jmp
add
mov
ss
clc
nop
nop
nop
nop
jae
mov
pop
add
or
add
jne
clc
nop
nop
nop
nop
jae
add
sti
add
mov
sbb
nop
nop
nop
nop
jae
add
pusha
add
inc
decb
mov
rolb
sbb
add
bound
add
xchg
cltd
add
add
cmp
nop
push
mov
leave
nop
jmp
popa
add
add
pop
add
mov
leave
nop
jmp
push
in
in
int
mov
dec
push
clc
nop
nop
nop
nop
jae
pop
int
add
lods
jl
add
adc
in
je
add
add
cmp
fs
nop
pop
iret
mov
nop
push
mov
leave
nop
jmp
add
add
in
pusha
push
add
cmp
push
mov
leave
nop
jmp
add
add
popa
add
add
cwtl
or
stos
nop
push
mov
leave
nop
jmp
lods
add
xchg
add
add
mov
das
call
clc
nop
nop
nop
nop
jae
dec
add
add
mov
push
mov
xchg
ret
and
test
loop
add
adc
jg
jle
nop
push
mov
leave
nop
jmp
add
cltd
in
add
adc
nop
push
mov
leave
nop
jmp
daa
push
in
pop
add
loop
push
clc
nop
nop
nop
nop
jae
push
test
loop
xchg
add
call
nop
jae
in
cmp
cmp
in
jl
add
add
inc
adc
nop
nop
nop
nop
jae
add
cwtl
cltd
add
add
cwtl
add
push
clc
nop
nop
nop
nop
jae
cmp
add
push
addb
shr
push
mov
xchg
ret
loopne
add
add
mov
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
cmp
sub
nop
nop
nop
jae
add
add
or
pusha
add
sqrtps
nop
nop
nop
nop
jae
pop
mov
add
push
add
cmp
mov
xchg
ret
sbb
add
add
in
add
pop
lahf
pop
jnp
clc
nop
nop
nop
nop
jae
sbb
add
jl
add
add
clc
nop
nop
nop
nop
jae
add
int
add
call
leave
nop
jmp
sbb
add
cwtl
mov
pusha
add
add
nop
nop
jae
cmp
add
add
add
mov
push
mov
xchg
ret
add
cwtl
adc
add
cmp
cltd
in
lret
clc
nop
nop
nop
nop
jae
cmp
add
push
filds
sbb
in
fstps
nop
jae
cli
add
pusha
cli
push
cmp
add
pop
sti
ds
rorl
nop
nop
nop
nop
jae
jl
add
lods
add
add
jp
add
and
add
add
add
add
add
sti
mov
clc
nop
nop
nop
nop
jae
sbb
loop
jl
loop
add
add
nop
nop
nop
jae
add
in
pop
loopne
add
add
nop
nop
nop
nop
jae
add
popa
inc
push
cmp
add
mov
xchg
add
nop
push
mov
leave
nop
jmp
fbstp
add
daa
add
add
mov
xchg
ret
add
add
in
add
add
cmpsl
push
push
mov
xchg
ret
cwtl
mov
pop
add
lret
add
add
push
mov
leave
nop
jmp
loopne
cltd
inc
pusha
add
in
sbb
jno
sti
clc
nop
nop
nop
nop
jae
jae
add
add
add
sti
add
mov
push
mov
leave
nop
jmp
add
add
cmp
push
clc
nop
nop
nop
nop
jae
add
push
add
add
add
in
inc
add
in
rep
push
mov
xchg
ret
add
jae
add
add
lds
mov
xchg
ret
cmp
add
sbb
sti
int
cwtl
fbld
in
clc
nop
nop
nop
nop
jae
add
pusha
cmp
add
add
imul
and
add
lahf
add
add
fs
sub
nop
nop
nop
nop
jae
jae
pop
lahf
add
mov
nop
push
mov
leave
nop
jmp
and
lods
add
add
mov
js
add
clc
nop
nop
nop
nop
jae
loopne
add
add
add
add
cmp
nop
push
mov
leave
nop
jmp
inc
add
add
inc
in
mov
clc
nop
nop
nop
nop
jae
add
pop
add
add
pop
mov
clc
nop
nop
nop
nop
jae
xchg
inc
pop
add
add
add
loopne
jmp
nop
nop
nop
nop
jae
add
add
mov
mov
leave
nop
jmp
dec
mov
in
add
add
pop
add
clc
nop
nop
nop
nop
jae
add
add
add
pusha
add
xchg
cmp
nop
push
mov
leave
nop
jmp
add
and
loopne
add
push
dec
aad
test
nop
nop
nop
nop
jae
add
loop
sub
nop
push
mov
leave
nop
jmp
add
pop
push
add
add
push
mov
xchg
ret
subb
add
add
stc
cli
add
push
mov
xchg
ret
push
add
add
inc
popa
add
lret
cmp
add
add
nop
push
mov
leave
nop
jmp
add
add
cwtl
add
psubb
cmpl
pusha
push
popa
add
push
add
xbegin
jae
add
adc
mov
in
popa
push
push
mov
xchg
ret
pusha
add
int
push
add
in
and
lock
inc
add
or
add
in
dec
push
inc
pop
push
mov
xchg
ret
loopne
cli
cmp
popa
add
add
clc
nop
nop
nop
nop
jae
add
add
add
call
clc
nop
nop
nop
nop
jae
pop
loopne
add
push
adc
clc
nop
nop
nop
nop
jae
add
add
add
mov
call
clc
nop
nop
nop
nop
jae
add
add
mov
add
mov
clc
nop
nop
nop
nop
jae
add
ss
add
in
add
mov
rol
clc
nop
nop
nop
nop
jae
add
add
lret
add
jl
mov
push
inc
lock
nop
nop
nop
nop
jae
add
cmp
mov
mov
nop
push
mov
leave
nop
jmp
in
lahf
sbb
cltd
addb
ss
push
mov
xchg
ret
add
adc
mov
and
loopne
add
and
nop
nop
jae
add
dec
add
adc
inc
fld1
clc
nop
nop
nop
nop
jae
mov
sbb
mov
arpl
nop
push
mov
leave
nop
jmp
mov
add
gs
nop
push
mov
leave
nop
jmp
and
loop
push
add
inc
and
shlb
mov
xchg
ret
int
add
push
push
jae
popa
add
push
clc
nop
nop
nop
nop
jae
sti
add
add
add
int
add
add
cmc
push
push
mov
xchg
ret
cli
test
add
add
in
dec
add
clc
nop
nop
nop
nop
jae
cwtl
add
sti
jl
pusha
lret
and
popf
lea
clc
nop
nop
nop
nop
jae
add
mov
add
cltd
add
mov
nop
push
mov
leave
nop
jmp
lahf
push
add
add
mov
xchg
push
clc
nop
nop
nop
nop
jae
add
add
add
add
daa
cmp
nop
nop
nop
jae
add
lret
add
add
add
rcrb
clc
nop
nop
nop
nop
jae
add
inc
add
mov
add
add
sbb
test
push
mov
xchg
ret
push
mov
add
add
mov
add
nop
push
mov
leave
nop
jmp
push
push
add
add
mov
nop
nop
nop
jae
loopne
xor
loop
sbb
add
inc
cld
sbb
imul
clc
nop
nop
nop
nop
jae
mov
add
mov
mov
mov
insb
mov
add
add
add
add
test
or
call
nop
jae
add
add
and
push
or
add
add
roll
in
leave
nop
jmp
stc
add
mov
mov
add
push
mov
xchg
ret
and
add
add
add
cwtl
jl
cwtl
push
sti
jmp
nop
push
mov
leave
nop
jmp
push
add
add
push
mov
pushl
push
mov
xchg
ret
inc
int
add
sbb
cli
cmp
push
and
aad
pause
push
mov
leave
nop
jmp
daa
add
add
cmp
popa
add
push
clc
nop
nop
nop
nop
jae
cmp
add
loopne
add
popa
add
push
mov
nop
push
mov
leave
nop
jmp
cwtl
add
pop
or
mov
push
mov
xchg
ret
mov
sti
cli
inc
add
stc
pop
inc
push
mov
xchg
es
add
add
mov
cwtl
cmp
je
dec
add
nop
push
mov
leave
nop
jmp
adc
add
add
loop
test
dec
lea
clc
nop
nop
nop
nop
jae
add
cltd
cltd
fs
sbb
add
nop
push
mov
leave
nop
jmp
lahf
sbb
add
xchg
shl
push
mov
xchg
ret
add
lods
mov
add
lahf
dec
clc
nop
nop
nop
nop
jae
add
inc
add
lret
add
push
add
pusha
popa
fwait
push
mov
xchg
ret
sbb
add
add
add
sti
add
xchg
aad
dec
imul
nop
jae
mov
in
fmulp
push
mov
nop
push
mov
leave
nop
jmp
sbb
add
daa
add
mov
adc
push
mov
leave
nop
jmp
lret
add
add
sbb
nop
nop
nop
nop
jae
jae
add
and
in
in
mov
dec
cwtl
insl
pop
clc
nop
nop
nop
nop
jae
dec
in
add
mov
daa
subb
nop
nop
nop
nop
jae
jae
add
add
mov
push
scas
fld1
clc
nop
nop
nop
nop
jae
add
mov
add
dec
add
rcrl
push
mov
leave
nop
jmp
add
add
add
push
add
loopne
add
xor
clc
nop
nop
nop
nop
jae
and
lods
inc
loopne
inc
xor
jne
clc
nop
nop
nop
nop
jae
loop
add
add
add
xbegin
jae
xchg
push
pop
mov
sbb
add
jne
clc
nop
nop
nop
nop
jae
add
add
dec
nop
push
mov
leave
nop
jmp
pusha
add
sti
add
adc
add
test
push
ret
xchg
clc
nop
nop
nop
nop
jae
add
pusha
in
add
addr16
clc
nop
nop
nop
nop
jae
add
add
mov
add
clc
nop
nop
nop
nop
jae
loopne
add
push
inc
add
pop
add
xor
nop
push
mov
leave
nop
jmp
dec
dec
add
add
and
mov
add
add
pop
add
xor
adc
add
add
xor
clc
nop
nop
nop
nop
jae
add
add
add
cmpsb
bound
incb
incl
mov
leave
nop
jmp
add
inc
loopne
pusha
in
add
into
pop
je
push
mov
mov
add
pop
add
dec
add
add
add
nop
nop
nop
jae
cltd
dec
add
jl
push
add
add
fistpl
push
mov
xchg
ret
push
loop
add
add
push
repz
clc
nop
nop
nop
nop
jae
add
add
add
add
jl
nop
push
mov
leave
nop
jmp
add
mov
in
xor
nop
nop
jae
add
add
cwtl
pusha
add
cmp
nop
nop
nop
nop
jae
sbb
add
loop
add
add
push
add
clc
nop
nop
nop
nop
jae
add
lahf
add
add
push
mov
xchg
ret
lahf
popa
cmp
add
add
in
pusha
add
and
nop
nop
nop
nop
jae
add
cltd
jl
add
add
nop
push
mov
leave
nop
jmp
add
in
pusha
mov
add
subb
mov
xchg
ret
add
add
inc
dec
add
pop
xchg
push
and
mov
push
mov
xchg
ret
cli
add
add
daa
pop
pusha
sbb
nop
nop
nop
jae
pusha
add
loop
and
loopne
add
clc
nop
nop
nop
nop
jae
dec
jae
add
cmp
mov
sbb
nop
push
mov
leave
nop
jmp
add
add
jl
add
sub
xor
add
jae
daa
loop
inc
in
add
ss
add
mov
sbb
add
add
add
jl
add
xchg
clc
nop
nop
nop
nop
jae
add
pop
add
sti
dec
mov
add
inc
pop
push
mov
xchg
ret
in
in
add
jae
mov
add
nop
nop
jae
inc
mov
add
add
in
pop
jmp
incl
add
add
add
push
jae
add
jl
lock
nop
push
mov
leave
nop
jmp
in
add
add
popa
add
inc
add
jne
nop
push
mov
leave
nop
jmp
add
lret
add
push
add
sub
dec
mov
clc
nop
nop
nop
nop
jae
add
add
add
in
adc
leave
push
push
mov
xchg
ret
add
add
cli
cwtl
daa
add
inc
add
mov
test
nop
nop
nop
nop
jae
mov
mov
in
in
std
push
clc
nop
nop
nop
nop
jae
cmpb
lahf
ds
loopne
push
pop
sarl
mov
xchg
ret
sbb
xor
add
lahf
push
int
loop
xchg
mov
push
mov
xchg
ret
adc
jl
add
fs
add
lret
cli
add
sbb
push
mov
xchg
ret
add
add
filds
add
loop
outsb
add
jne
push
mov
xchg
ret
add
pop
in
add
xchg
and
and
clc
nop
nop
nop
nop
jae
inc
in
in
popa
mov
inc
and
nop
nop
nop
nop
jae
add
add
pop
lahf
cmp
add
repz
clc
nop
nop
nop
nop
jae
add
lret
cltd
add
pop
push
push
mov
xchg
ret
sbb
stc
mov
add
add
add
iret
push
nop
push
mov
leave
nop
jmp
in
add
xor
pusha
test
dec
loopne
shll
arpl
nop
nop
nop
nop
jae
sbb
add
loop
loop
jle
repnz
mov
nop
nop
nop
nop
jae
pop
inc
add
mov
in
leave
nop
jmp
add
add
add
adc
clc
nop
nop
nop
nop
jae
add
xor
jae
cli
loopne
das
shl
clc
nop
nop
nop
nop
jae
pusha
in
cwtl
mov
fs
jae
push
mov
xchg
ret
add
add
push
and
in
dec
add
push
mov
xchg
ret
add
add
sti
add
mov
jae
fwait
nop
push
mov
leave
nop
jmp
add
pusha
test
mov
pop
add
push
mov
xchg
ret
in
cwtl
pop
mov
add
add
pusha
stos
mov
nop
push
mov
leave
nop
jmp
add
add
popa
loopne
and
push
cli
jne
clc
nop
nop
nop
nop
jae
add
dec
add
sbb
add
dec
clc
dec
inc
clc
nop
nop
nop
nop
jae
push
daa
in
ss
jae
add
insl
xor
clc
nop
nop
nop
nop
jae
cwtl
add
add
and
cmpsb
pushl
clc
nop
nop
nop
nop
jae
add
cwtl
addb
loop
add
mov
lahf
mov
clc
nop
nop
nop
nop
jae
test
inc
lods
jl
jl
add
add
test
mov
nop
nop
nop
nop
jae
loopne
in
fs
add
add
add
clc
nop
nop
nop
nop
jae
add
add
in
cli
test
inc
and
push
mov
xchg
ret
and
add
pop
dec
push
or
clc
nop
nop
nop
nop
jae
cmp
cwtl
add
add
push
add
bound
cmp
adc
add
nop
nop
nop
nop
jae
add
add
add
add
add
push
mov
xchg
ret
add
push
dec
loop
mov
add
add
shl
clc
nop
nop
nop
nop
jae
inc
add
add
nop
push
mov
leave
nop
jmp
or
inc
lret
mov
sbb
fistpl
push
mov
xchg
ret
in
inc
add
jl
add
add
pushf
inc
je
clc
nop
nop
nop
nop
jae
add
popa
pop
inc
push
scas
ret
nop
push
mov
leave
nop
jmp
add
cltd
push
mov
loopne
add
iret
mov
clc
nop
nop
nop
nop
jae
add
add
add
push
push
clc
nop
nop
nop
nop
jae
inc
add
lahf
add
add
mov
cmc
push
push
mov
xchg
ret
jae
add
add
inc
loopne
add
add
xchg
jmp
pop
cmp
add
add
or
int
add
add
in
add
mov
leave
nop
jmp
add
add
and
add
in
add
cli
loopne
jne
nop
push
mov
leave
nop
jmp
add
add
add
in
cmp
push
mov
add
add
add
cld
jecxz
imul
push
clc
nop
nop
nop
nop
jae
add
loopne
jl
daa
add
add
loopne
inc
push
mov
xchg
ret
xor
or
loop
add
loope
loop
clc
nop
nop
nop
nop
jae
add
in
add
pop
add
add
nop
nop
nop
nop
jae
int
and
cmp
add
dec
pusha
inc
add
inc
add
xor
add
clc
nop
nop
nop
nop
jae
loopne
add
add
add
mov
mov
nop
push
mov
leave
nop
jmp
add
loopne
lret
dec
add
inc
aam
pushl
add
add
add
dec
add
cmp
int
sub
fldenv
nop
nop
nop
nop
jae
add
or
lods
cltd
pop
into
xchg
cmpl
push
mov
leave
nop
jmp
in
ss
cmp
in
sub
in
sub
ds
sahf
ss
push
add
and
cmpsb
dec
add
add
add
and
incb
add
jae
les
adc
push
adcb
rolb
mov
test
mov
call
mov
in
adc
fmull
incb
cmp
fs
add
cmp
sub
fsts
add
out
dec
push
scas
pushl
enter
dec
and
pop
jne
decl
pop
push
insl
pop
push
sub
incb
incb
es
loopne
aaa
add
xchg
jp
into
test
jno
out
mov
js
arpl
sub
repnz
es
inc
hlt
movsl
jnp
jle
out
shrl
scas
fisttps
out
xor
and
shl
inc
add
jne
jns
jmp
mov
fdiv
xchg
xchg
mov
inc
or
cmp
scas
xchg
jg
xchg
in
xchg
leave
fistpll
adc
out
inc
add
imul
and
movl
adc
add
jns
cld
jecxz
xor
add
inc
out
in
rorb
rorl
scas
and
xchg
inc
jmp
mov
jp
lahf
pop
call
push
incb
lods
pop
xor
sahf
mov
stc
enter
lock
roll
add
mov
mov
fldl
pop
es
add
aad
decb
movl
mov
add
pop
pop
je
lods
pop
lcall
jns
xchg
push
cltd
mov
test
xchg
push
jnp
add
popa
push
js
test
repz
outsl
sub
popf
push
aam
and
dec
xorb
outsl
mov
call
jmp
sti
dec
fs
inc
in
ret
or
pop
or
jl
mov
xor
bound
mov
imul
adc
outsb
add
pop
in
push
ja
mov
outsb
add
xor
imul
cltd
and
incb
inc
mov
adc
jg
daa
loopne
add
xchg
inc
mov
addr16
add
fstp
cld
in
adc
addl
adc
loopne
inc
loopne
xchg
adc
and
repz
loope
add
lds
int3
shlb
cs
push
xor
int
incb
inc
add
xchg
jmp
xor
decb
out
xchg
xchg
xchg
aas
test
mov
xchg
sub
and
loop
inc
add
sub
data16
insl
push
cld
xchg
adc
arpl
lret
cwtl
in
add
sub
xchg
mov
jp
xchg
adc
sub
in
xchg
push
mov
add
pop
mov
or
insb
add
lods
pop
ret
dec
mov
xor
pop
ret
movl
pop
cwtl
fs
sbb
mov
pop
subb
testb
popa
push
add
pop
and
jns
andb
lret
cmp
inc
fisubrs
push
pop
cmpsl
jl
adc
cmp
mov
mov
out
lods
jnp
idivl
xchg
xor
stos
icebp
xlat
cmpl
out
push
jbe
add
arpl
and
decb
add
cmp
add
mov
in
jge
arpl
incb
xor
xchg
clc
and
repnz
adc
and
incb
rcrl
aad
add
jmp
dec
sbb
pop
sub
scas
xor
incb
cld
cmp
push
popf
and
mov
pop
in
dec
sbb
aas
hlt
lret
push
incb
and
incb
mov
and
cmp
mov
repnz
mov
les
push
push
jle
mov
cmp
add
fstpt
mov
mov
push
cmp
mov
xchg
das
out
in
pop
or
scas
ljmp
cmpsb
popf
xchg
out
loop
add
inc
sbb
test
jno
add
incb
decb
cmpl
sbb
pop
push
cmpsb
dec
add
mov
btr
adc
push
xchg
xchg
or
decb
adc
repnz
ficompl
das
xor
inc
add
lods
out
enter
aas
nop
cmp
sub
repnz
cmp
pushf
pop
lahf
pop
or
mov
add
push
xor
add
mov
scas
test
jmp
hlt
cmpl
out
js
pusha
add
loop
inc
push
scas
insb
inc
lds
mov
test
pushf
pop
push
popa
adc
cwtl
test
ret
mov
sub
push
jecxz
and
dec
mov
adc
popa
icebp
mov
test
sbb
pop
iret
fsubl
pinsrw
decb
sub
es
aad
pop
scas
les
add
lods
ret
lds
dec
add
fists
cmp
call
mov
repz
adc
add
xchg
sub
popa
sub
mov
fidivl
insb
mov
cmp
testb
mov
xor
xchg
mov
ss
inc
add
xorb
adc
push
fmuls
cmpsb
ljmp
sbb
lahf
sub
jge
loop
xorb
inc
stc
das
sbb
or
mov
add
mul
sub
cmp
and
insb
add
aas
cmpsl
test
sti
mov
add
int3
cmc
fs
fbld
cltd
pop
pushl
mov
lret
jmp
loopne
push
xchg
daa
pop
test
jmp
lea
mov
pop
push
jo
sti
mov
inc
xor
icebp
cmp
loopne
stc
dec
add
jnp
dec
add
jmp
sti
lds
sub
jnp
push
cmp
sbb
jge
loop
fistps
push
insl
outsb
mov
pop
ss
ljmp
addr16
push
adc
inc
add
dec
ss
jecxz
mov
decb
imul
mov
jg
in
pushf
cli
mov
add
decb
lret
in
mov
xchg
inc
rcrb
adc
mov
add
mov
and
xchg
fwait
or
xchg
mov
sbb
xchg
lods
xor
mov
dec
xchg
ret
add
adc
enter
jmp
cli
mov
pop
mov
js
sbb
testb
decb
mov
push
data16
fs
insl
add
jns
push
mov
icebp
xor
dec
stc
push
je
pop
rcrl
mov
or
lret
in
inc
sub
cmpsb
jmp
repnz
inc
decb
popf
test
daa
add
jl
sbbl
mov
pop
cwtl
adc
rolb
cld
ss
daa
xor
jne
add
xchg
jge
jge
sbb
lret
test
jmp
decb
imul
into
subl
test
arpl
add
xchg
dec
add
mov
sbbl
inc
std
jp
cmpsb
jne
add
movsb
inc
inc
lret
insb
add
add
mov
mov
lahf
xchg
ss
decb
std
iret
popa
and
cli
sub
inc
add
rolb
add
dec
lds
xchg
int
in
sbb
cmc
sbb
aad
mov
ljmp
imul
push
clc
ficomps
add
adc
add
call
xor
jmp
cld
jno
push
cli
mov
in
mov
mov
in
sbb
test
inc
and
incb
jl
negl
int3
dec
push
dec
pop
loope
push
aas
inc
scas
loop
pop
mov
pop
add
pop
dec
arpl
lahf
sbb
mov
adc
popa
ja
add
jbe
add
in
pop
or
xchg
xor
mov
test
and
hlt
shr
es
inc
cld
inc
popf
xor
dec
std
movsb
ljmp
add
mov
shll
jo
fdivrp
jbe
rep
aad
cltd
cwtl
rcrl
ja
insl
ds
dec
gs
pop
push
pop
test
stos
subb
add
jns
sbb
lret
les
adc
xchg
mov
std
push
xlat
push
sbb
lcall
mul
pop
mov
shlb
mov
add
sub
push
xor
push
add
jg
xchg
sub
popa
fwait
cmp
push
jp
jle
add
sahf
punpcklbw
and
nop
dec
add
test
gs
out
mov
or
dec
jae
dec
dec
hlt
lock
inc
je
out
aas
scas
fidivrl
sbb
out
je
fmul
mov
hlt
jge
adc
add
adc
xchg
push
and
aam
into
dec
add
mov
xor
fimuls
ja
and
jno
arpl
decb
scas
shll
rorb
lods
orb
mov
in
xlat
mov
fcmove
dec
add
add
add
mov
jne
scas
cmc
popf
insb
out
movsb
add
decb
aam
test
movsb
ret
inc
popf
cmpsl
jae
pop
cmp
cmp
sub
jbe
add
xchg
xor
mov
mov
push
pop
add
mov
adc
xor
leave
out
insb
out
push
push
sub
incb
loope
repnz
mov
ret
push
cmp
sub
inc
inc
add
and
mov
imul
test
add
stos
outsb
cmp
jp
sub
cld
data16
ja
mov
sub
and
incb
jbe
pop
mov
dec
aad
add
pop
ja
repz
pop
pushf
out
jnp
and
aaa
mov
fimuls
sbb
shlb
cmp
notl
add
push
add
jmp
mov
cmp
nop
or
popf
cltd
push
decl
mov
fcmovnbe
mov
out
fstpt
addr16
mov
movsb
add
nop
les
adc
add
xchg
jg
enter
push
add
inc
push
sarl
test
les
cmp
mov
scas
mov
push
mov
popf
leave
xchg
in
sub
ja
imul
xor
xor
add
sbb
push
mov
jl
mov
sub
xor
mov
xor
dec
daa
pop
and
xchg
into
scas
aam
roll
xor
cmp
mov
clc
nop
mov
mov
lods
and
fwait
in
add
or
lods
xchg
mov
mov
outsl
xlat
das
das
aas
ss
push
add
dec
adc
jle
inc
mov
sbbl
sbb
dec
add
or
mov
icebp
fisubs
cmp
imul
cmp
incb
and
sbbl
xchg
data16
sbb
nop/reserved
fsubs
add
ja
mov
mov
inc
pop
roll
add
push
loopne
loope
insl
nop
xor
jle
fmulp
shrb
mov
and
loop
decb
jecxz
bound
outsb
add
out
ret
inc
dec
ja
mov
lahf
dec
and
mov
enter
inc
add
mov
lock
add
xchg
cmp
jnp
incb
movb
sub
sub
sbb
xor
dec
aaa
sbb
sbb
mov
dec
sti
lock
cmpsl
inc
add
fs
xor
decb
repz
pop
and
mov
arpl
push
inc
pop
mov
mov
ds
idivl
hlt
imul
sub
sbb
imul
ret
mov
inc
mov
push
out
in
loopne
cs
push
std
loopne
mov
mov
imul
jns
sbb
lods
sbbb
out
push
nop
movsl
mov
cwtl
and
jmp
add
imulb
push
mov
incb
sbb
enter
mov
arpl
in
push
decb
mov
ljmp
sbb
rcll
cmp
fisttpll
sbb
add
mov
add
inc
add
push
mov
mov
xchg
dec
insl
int
adc
pop
fidivrl
daa
and
mov
decb
add
ret
sbb
push
cs
out
aad
lods
repnz
mov
xchg
sbb
pop
inc
dec
add
mov
out
mov
pop
add
shrl
xlat
fnstcw
fsts
insl
xchg
hlt
daa
inc
xchg
nop
pop
scas
pushf
adc
mov
lds
pop
xchg
pop
mov
jg
vpsubd
into
test
incb
xchg
add
movsb
sahf
mov
test
icebp
sbb
aam
sub
in
or
cli
adc
add
add
and
jle
sub
jns
mov
lock
add
sbb
xor
jb
decb
incb
add
fwait
sti
adc
test
data16
mov
or
mov
mov
inc
add
sub
imul
cltd
and
icebp
test
es
cmp
test
dec
jecxz
std
add
mov
inc
cmp
rcll
leave
ss
sub
in
ds
add
mov
pop
repnz
xchg
movsb
fildl
mov
add
int3
out
sbb
sbb
xchg
cli
scas
aaa
nop
lcall
xorb
mov
jne
sbb
insl
dec
push
scas
fildll
jae
sub
decb
out
es
incb
mov
xchg
dec
add
incb
cwtl
mov
mov
mul
js
movsb
dec
and
push
cmpb
mov
cmp
mov
pop
aad
push
add
add
mov
xor
and
adc
xor
or
adc
aam
pushf
pop
addl
ja
ljmp
lock
imul
push
orl
imul
push
add
jp
add
cwtl
sbb
es
jae
push
ja
add
imul
out
sahf
inc
cmp
movsb
insl
sbb
lock
inc
nop
push
jmp
inc
inc
enter
aaa
punpckhwd
add
aam
mov
ficompl
xor
jg
or
push
loop
daa
pop
aam
incb
repnz
sbb
jno
aas
outsl
cld
jb
sbb
aad
cmp
jno
and
mov
ds
push
mov
daa
sub
mov
jecxz
sub
incb
and
adc
mov
test
jl
inc
push
cs
fnstsw
shll
repnz
fidivl
fs
sub
incb
loop
mov
int3
repnz
fstl
sub
imul
stos
pusha
add
add
jo
loopne
pop
xchg
fbld
xchg
mov
shlb
cmp
adc
add
rorl
or
mov
js
fistl
decb
decb
xchg
incb
es
js
mov
adc
and
xlat
loope
js
jmp
bndstx
add
insl
int
mov
fmull
es
dec
outsl
mov
gs
jnp
xchg
arpl
into
scas
cwtl
inc
xor
lds
pop
ds
cld
fwait
inc
cmp
decb
sbb
jb
scas
pop
jl
cmpsb
jl
divb
decb
divb
xchg
jp
and
repz
sahf
inc
cmp
dec
pop
stos
mov
popf
in
lods
xor
es
xchg
pop
adc
lds
fxch
imul
xchg
jno
leave
dec
push
cltd
cmp
das
lret
scas
mov
gs
decb
incb
in
sbb
fsubp
mov
int3
pop
aaa
orb
xor
repnz
icebp
bound
push
hlt
pop
mov
in
fstp
dec
decb
pop
es
cmp
dec
jp
inc
xchg
std
pop
jg
cwtl
lods
jle
decb
out
jno
adc
mov
icebp
leave
pushl
pushf
pusha
add
jne
ret
sbb
add
sub
add
and
incb
out
xlat
mov
add
or
incb
jnp
mov
add
xchg
pop
jg
movaps
movl
sbb
enter
mov
adc
add
inc
xchg
xor
arpl
xor
je
push
idiv
cmovo
mov
pop
mov
loope
mov
addb
adc
lds
push
pop
fsubrs
add
rolb
xchg
shlb
cld
xor
jecxz
jge
inc
dec
negl
cmc
lahf
insb
add
mov
xor
mov
stos
arpl
push
pop
gs
mov
nop
daa
les
es
pop
sbb
je
popf
cwtl
mov
sub
testb
out
pop
jecxz
push
mov
xchg
andb
jge
xchg
xor
adc
aad
xor
sti
je
fcomps
push
cmpsl
xor
mov
loopne
repz
mov
pushf
pop
dec
sbb
mov
mov
into
dec
imul
dec
cmp
adc
out
push
add
aas
xchg
mov
clc
ds
dec
sarb
mov
es
shl
sahf
pop
fcomps
add
or
add
push
mov
mov
aam
iret
outsl
scas
cmpsb
push
out
mov
mov
add
xchg
mov
and
decb
add
jl
sbb
daa
notb
mov
popa
adc
mov
inc
and
adc
incb
jbe
ja
aad
shll
outsl
sti
clc
and
inc
sbb
xor
mov
popf
js
jb
add
cmpsb
in
pop
pop
stos
and
push
add
mov
pop
sub
xor
pop
xor
sbb
push
adc
and
in
add
loope
icebp
xor
lods
es
cmp
mov
jmp
dec
mov
clc
sbb
rorl
add
fucomi
mov
push
add
sub
fistpl
inc
es
test
decb
nopl
rcrl
loope
and
or
jg
les
sbb
dec
dec
ret
repz
jl
xor
push
idivb
xor
sbb
movsb
sub
scas
shl
int3
movsb
in
push
rcrl
rclb
out
xchg
cmp
xchg
push
rcrl
and
inc
push
fdivrs
cmp
int
mov
test
xor
xchg
cmpsb
stos
mov
shrl
decb
cmp
xor
inc
cmpsb
incb
ljmp
decb
dec
add
insl
and
pop
inc
mov
daa
inc
shlb
xor
mov
idivl
bound
mov
leave
push
jg
nop
mov
mov
icebp
xor
and
mov
test
idivb
add
in
cmpsb
add
push
lds
xchg
mov
cli
lret
add
fs
les
loopne
inc
divb
hlt
cmp
xchg
push
lahf
mov
stos
rcrb
pop
negl
add
dec
pop
es
bound
pushf
mov
int3
jecxz
dec
sub
mov
aaa
mov
popl
mov
repnz
incb
xchg
mov
push
imul
arpl
movb
sti
adc
inc
lcall
outsb
add
adc
inc
sar
out
rcl
loop
enter
int3
pop
mov
cld
or
insl
push
test
add
rorb
add
jmp
gs
dec
loop
dec
adc
xchg
call
xor
sarl
and
out
mov
enter
aaa
adc
adc
int
mov
mov
add
orl
je
mov
out
dec
add
std
add
inc
inc
test
pop
cwtl
pop
push
mov
mov
add
pushf
bound
decb
add
movsl
add
pop
push
pop
imull
jbe
ds
decb
inc
addl
mov
add
adc
dec
es
outsb
incb
and
daa
and
xchg
int
sub
incb
push
fcoml
nop
nop
daa
lret
push
decb
ljmp
shrl
push
outsl
mov
dec
decb
xlat
cmp
bnd
outsl
outsl
leave
jo
rclb
adc
xchg
stc
inc
ss
ljmp
mov
decb
enter
jns
jp
push
add
mov
mov
decb
add
xchg
cld
and
mov
popa
cmpsl
jmp
es
incb
mov
push
pop
pop
xchg
outsl
fidivrs
fcomip
mov
fs
mov
js
mov
inc
add
and
xchg
fmuls
cld
cmovns
pop
dec
lcall
fstpl
xchg
es
mov
imul
mov
lods
and
mov
incb
iret
into
mov
aas
mov
push
lods
pop
rol
data16
loop
lods
es
cmp
jg
andb
jl
aad
or
pop
inc
add
shlb
clc
vpunpcklbw
sub
cmp
decb
xchg
push
pop
xchg
fwait
popa
pop
pop
insb
add
pop
or
inc
pop
popf
add
cmc
adc
add
jecxz
cli
js
mov
sbb
pop
pop
test
and
in
mov
stos
mov
fistpll
lds
stos
cs
sub
push
addr16
flds
xlat
add
inc
aaa
insl
jb
sub
dec
cld
test
xchg
mov
xchg
in
add
jecxz
add
dec
rorb
je
jae
popf
fildll
bound
cmp
testb
xor
insb
lock
cmp
test
push
adc
push
add
dec
push
sbb
fdivs
adc
ja
das
mov
cmpsl
lds
jne
cli
pop
data16
stos
call
sbb
jp
fnsave
rolb
push
xchg
cwtl
lret
or
or
and
test
add
jmp
cltd
insl
inc
jo
mov
inc
loop
cld
dec
sbb
inc
jmp
jne
cltd
and
ja
cmp
xchg
mov
loope
add
decb
aam
dec
outsl
orb
and
inc
sbb
lcall
insb
add
push
jns
imul
push
jns
inc
add
dec
inc
add
cltd
lea
pushf
push
jmp
add
xchg
adc
push
out
jns
adc
test
add
in
cmp
xchg
sbb
and
mov
fmull
imul
mov
pop
popa
push
sbb
aaa
lock
lret
rcr
outsl
and
and
inc
lahf
addb
and
cld
and
cmc
push
fisubrl
jnp
out
subb
mov
push
add
sahf
mov
mull
mov
int3
and
js
or
jnp
insl
mov
aaa
iret
push
out
or
and
pop
push
adc
roll
incb
arpl
incb
push
sbb
lahf
adc
xor
stos
pop
mov
repnz
insb
aad
test
xchg
push
jl
nop
cwtl
add
leave
jp
adc
mov
test
les
add
addr16
jge
xorl
insl
pop
or
push
sbb
mov
xchg
push
sub
lahf
cld
xor
ficoms
xchg
xor
mov
add
int
dec
add
mov
fcoms
out
insl
fidivrs
xchg
inc
mov
add
out
cmp
jns
fidivs
sub
imul
pop
jl
divl
jp
repnz
pop
mov
add
les
js
adcb
push
inc
add
lds
pop
push
xchg
into
in
ficoms
test
sbb
inc
jecxz
add
xchg
mov
push
push
mov
stc
mov
inc
sub
cmc
aaa
dec
add
xor
test
ficoml
mov
inc
xchg
lea
jg
or
fwait
insb
incb
cli
cmp
mov
cmp
add
es
xchg
cmpsb
mov
pushf
movl
outsl
fs
pop
imul
insl
orl
pop
pop
push
cmp
add
sub
decb
ret
pusha
add
les
adc
fwait
cmpsl
test
fsubs
ljmp
movsl
imulb
add
mov
das
imul
popa
aam
test
enter
repz
decb
fcompl
add
pop
fcoms
or
inc
scas
mov
not
xchg
or
pop
cs
incb
es
test
mov
jle
incb
imul
push
pop
mov
adc
ret
pop
jns
and
mov
dec
ljmp
gs
push
sbb
out
adc
aad
and
decb
push
adc
xchg
cmp
adc
mov
or
inc
add
sbb
or
push
les
insl
cmp
add
adc
sub
incb
adc
adc
cmpsb
imul
sarl
add
decb
cmp
imul
std
jge
cmp
mov
loop
jecxz
testl
sbb
jp
jnp
jne
fcomps
mov
add
add
and
xor
push
fldcw
arpl
mov
lcall
sbb
lahf
scas
shll
inc
loop
ss
das
pusha
cmp
ljmp
sbb
incb
jo
sti
jnp
mov
push
arpl
pop
xor
or
sub
fisttpll
dec
imul
xor
sbb
pop
out
or
pop
dec
add
add
lods
pop
mov
ss
jp
push
add
lahf
pop
imul
sbb
mov
add
stos
pop
xchg
mov
jo
add
push
xor
sub
fcomps
ljmp
pop
nop
inc
add
mov
popa
repnz
rclb
and
incb
add
repnz
ds
movsb
xor
add
std
or
icebp
repnz
ljmp
dec
mov
insl
mov
std
cmp
stos
pop
fs
add
decb
ljmp
add
mov
mov
test
movsb
xchg
jo
jnp
aas
pop
jo
cs
mov
cmc
movsl
inc
add
dec
add
sbb
shl
pop
rcrb
add
adc
stc
mov
push
decb
add
push
push
dec
add
clc
or
aam
pushf
stos
stos
loopne
mov
mov
xchg
sub
push
xchg
dec
jge
dec
ret
adc
and
inc
jb
jnp
incb
add
test
fistpll
xorl
push
and
cmp
data16
roll
inc
and
repnz
mov
dec
insl
adc
dec
push
xchg
cmp
mov
and
jne
ljmp
add
popf
push
lods
add
scas
lea
xchg
sub
cltd
and
incb
and
sarb
out
sub
out
dec
add
adc
jbe
movsl
and
push
leave
sbb
stos
push
and
sub
mov
loop
push
pop
and
mov
inc
add
inc
adcb
movsl
out
xor
cmp
push
jle
dec
jo
add
sub
imul
test
cltd
and
call
sbb
jecxz
cli
jmp
loope
fcompl
push
jne
dec
lahf
not
pop
int3
jg
sbb
dec
movsb
xor
call
imul
inc
sti
jns
mov
xchg
dec
ret
scas
push
mov
jae
loop
and
out
push
mov
push
jne
mov
add
sub
pop
jecxz
xor
outsb
incb
cwtl
xchg
mov
aaa
sub
cmp
cmp
add
mulb
sbb
mov
jle
repz
sbbl
sub
das
mov
cwtl
pop
fnsave
decb
mov
xor
add
sub
test
je
data16
lahf
addb
add
inc
scas
mov
push
pop
dec
nop
testb
scas
data16
movsb
imul
jecxz
xchg
and
ja
ret
popa
daa
xor
inc
add
sub
and
mov
lcall
jae
jae
daa
int
add
imul
jae
incb
decb
push
mov
lods
cs
inc
sbb
shll
cmp
data16
pushf
and
add
addl
in
and
and
jno
mov
mov
push
jns
dec
add
push
mov
fwait
rcrb
es
clc
or
insl
fildl
mov
jae
loop
pcmpgtb
in
jne
shl
cmp
sbb
xchg
xchg
sbb
popa
jp
jb
jno
push
mov
shll
jnp
sbb
stos
and
xlat
add
and
fldcw
les
out
push
inc
add
or
cmp
pushl
xchg
xlat
in
addl
pop
movsb
push
inc
add
pop
stos
stc
decb
xor
xchg
lea
lcall
cmpsl
das
scas
out
frstor
repz
and
mov
add
bnd
xchg
jb
mov
decb
leave
inc
test
xor
mov
mov
push
jbe
es
adc
jne
fnstsw
sub
push
pop
mov
mov
bound
xchg
add
insl
aaa
imul
mov
sbb
dec
loop
or
pop
jl
add
sbb
mov
mov
shl
hlt
stc
mov
xor
rcrb
push
movsb
mull
fwait
pushf
jnp
push
movsl
push
mov
icebp
ret
xor
icebp
dec
cmp
pop
push
jecxz
sbb
inc
mov
xchg
aad
sub
and
das
fsubrp
dec
movsbl
mov
lock
sub
std
lods
hlt
in
add
push
inc
add
xchg
jns
push
js
inc
add
xor
mov
mov
pushf
stos
mov
inc
add
push
add
mull
xor
js
and
add
add
cmp
ret
incb
insl
lea
add
fs
fstpl
and
mov
push
add
mov
xor
add
fisubs
mov
lods
es
mov
mov
mov
mov
inc
mov
inc
xor
jne
ds
cmp
sbb
inc
lods
or
decb
in
fs
sbb
inc
xchg
ljmp
aas
data16
repnz
test
decb
insl
jmp
pop
fwait
in
pushf
push
fsts
aad
movsl
cmp
add
dec
lods
sbb
sti
in
and
loopne
or
nop
or
mov
gs
jo
mov
hlt
dec
imul
les
add
loopne
loop
and
fwait
pop
sub
filds
or
pusha
add
sbb
in
nop
push
adc
rcr
enter
fs
incb
nop
xchg
aad
scas
cs
adc
mov
stos
repnz
popa
adc
sub
jge
xchg
stos
cmp
fidivs
sti
fsubrs
push
and
aaa
and
daa
or
mov
into
and
incb
iret
test
bound
adc
fwait
pop
rol
xor
mov
xchg
cs
popa
and
mov
mov
dec
add
fisubl
decb
push
lahf
fstpl
push
js
pop
in
pop
insb
nop
and
and
push
mov
iret
xchg
test
jp
imul
mov
add
mov
test
lds
stc
cltd
jecxz
jno
xor
movsl
adc
pop
sub
dec
test
mov
add
incb
adc
in
adc
add
dec
incb
decb
inc
sub
jnp
cmp
mov
cmpsl
pusha
incb
imul
mov
adc
enter
outsb
jns
outsb
add
fstp
test
xor
mov
movsl
push
test
pop
stos
jmp
cmpsb
inc
add
ficomps
mov
orl
out
inc
mov
jg
jae
and
decb
test
lock
mov
addps
aas
sub
lods
xor
sub
aad
add
lock
add
mov
ret
enter
or
xor
test
sbb
les
incb
mov
fcompp
andl
ret
push
je
add
and
decb
dec
out
dec
add
shr
test
test
sbb
pop
test
insb
add
or
jb
lods
addr16
sqrtps
filds
lock
decb
pop
popf
add
jo
or
pop
mov
movsl
test
sub
imul
push
cmpsl
js
mov
dec
es
repz
xchg
dec
inc
jne
clc
adc
sbb
fcmovnu
or
std
out
repnz
lock
add
xor
cmp
xchg
fldl
pop
dec
add
inc
inc
xchg
sbb
lods
inc
decb
incb
data16
mov
pusha
decb
mov
add
xor
pop
adc
insl
loop
jp
adc
jmp
frstpm(287
out
sbb
xchg
hlt
push
adc
mov
mov
inc
sbb
or
incb
mov
mov
repz
test
push
or
call
mov
add
lock
incb
decb
inc
dec
mov
dec
cwtl
mov
or
jo
jg
inc
addl
leave
std
out
inc
add
pop
inc
and
fs
lods
fsubl
add
addl
ret
or
decb
pop
js
push
mov
push
jb
xlat
hlt
aas
or
incb
aam
jae
dec
js
push
dec
int
incl
pop
insl
sub
fistpl
mov
mov
scas
cmp
mov
xor
sub
adc
mov
sbb
sub
push
add
enter
mov
add
jg
decb
pop
fpatan
and
dec
adc
fistpl
stc
out
ror
hlt
cmp
in
cmpsl
push
gs
lret
in
push
and
fdivrp
into
xor
mov
add
pop
add
xor
rcrb
xchg
push
pop
cmp
scas
sbb
out
test
insb
add
hlt
adc
dec
fs
push
cmpsl
push
add
shll
hlt
push
dec
and
push
lock
decb
push
dec
ret
add
mov
push
add
and
sti
push
out
ret
push
add
push
in
push
fcompl
fwait
xchg
pop
dec
es
ljmp
pop
inc
add
jecxz
out
addl
add
mov
enter
mov
rorb
les
ljmp
mov
out
and
sahf
mov
xorl
inc
int
cs
or
incb
mov
out
add
stos
les
or
incb
sarb
jb
jecxz
mov
mov
jbe
icebp
fcomps
pop
mov
daa
ret
xchg
and
mov
lds
jnp
aad
cs
jae
mov
mull
adc
icebp
jnp
sti
popf
fidivrs
and
push
test
pop
rdpmc
mov
pop
dec
jg
data16
decb
jo
icebp
push
sub
mov
jge
xor
lcall
outsl
mov
and
enter
stos
jno
mov
lods
leave
add
test
mov
nop
mov
inc
adc
push
or
aas
hlt
push
fwait
lret
cmpsb
out
into
cmp
test
sub
add
ds
dec
add
test
sub
incb
xor
imul
xchg
fdivrl
jle
stos
inc
pusha
add
ljmp
add
inc
mov
dec
add
call
add
mov
cli
and
dec
int3
sahf
jbe
inc
out
mov
xchg
out
jo
pushf
fcmovb
movsl
aas
sbb
cmp
mulb
popa
mov
xchg
negl
add
hlt
sub
in
push
or
decb
add
sahf
mov
loopne
inc
ret
repz
xchg
cwtl
inc
incb
push
dec
arpl
test
loopne
xor
add
fucomi
mov
divl
jns
loopne
push
jle
sbb
cmp
xchg
cli
dec
bound
out
mov
and
pop
aam
xlat
imul
xchg
dec
mov
mov
testb
in
lcall
ret
cmp
imul
mov
or
ja
mov
sti
push
cmpsl
orb
incb
movsb
mov
cld
pop
mov
adc
add
ret
scas
push
out
enter
dec
cli
mov
loop
add
push
dec
add
sbb
fnsave
insb
sub
cmp
in
cmpl
add
into
pop
or
aam
inc
cmp
inc
xchg
outsb
dec
data16
les
cmp
enter
mov
lods
insb
add
mull
jne
pop
dec
push
add
add
sti
mov
mov
jp
pause
fucomp
cmp
sub
incb
sub
pop
loop
dec
add
test
pop
and
outsl
mov
push
sub
decb
incb
outsl
clc
dec
decb
xor
mov
mov
and
xor
dec
mov
add
hlt
mov
add
adc
iret
sbb
sti
push
outsb
incb
aas
mov
fdivl
out
mov
incb
pop
addr16
daa
daa
inc
arpl
lods
and
jae
add
dec
sbb
loope
imul
xchg
push
xchg
xor
jmp
adc
mov
adcb
out
push
sub
jp
pop
mov
data16
dec
push
hlt
mov
cmc
jle
dec
lcall
inc
cmp
mov
pop
mov
je
mov
fnstcw
int3
mov
into
dec
add
pusha
add
adc
faddp
jecxz
pop
jb
decb
inc
add
mov
add
mov
roll
mov
and
jg
add
sahf
addr16
add
xchg
mov
dec
fistps
and
sub
adc
lcall
out
cwtl
push
mov
ret
clc
mov
sahf
xor
cwtl
vshufps
mov
add
test
sbb
mov
das
add
mov
sub
test
and
out
mov
inc
add
into
scas
add
arpl
ss
outsb
push
das
add
adc
int3
xchg
fisttps
inc
mov
test
mov
rcrb
enter
shll
es
adc
divb
flds
mov
inc
add
adc
ss
sbb
add
and
imul
scas
jle
incb
decb
shrb
mull
add
and
cld
arpl
mov
adc
cmc
sbb
jae
push
int3
inc
out
push
mov
in
adc
out
fwait
sub
cmpsb
xchg
sub
decb
das
dec
xor
cmp
dec
push
mov
fmull
dec
add
jmp
incb
jecxz
dec
mov
imull
push
sahf
mov
add
pop
loopne
adc
cmp
cmpsb
fimull
mov
add
jp
les
sbb
and
and
mov
and
sbb
add
dec
dec
push
or
add
es
xor
scas
imul
incb
cli
and
jno
cmp
in
push
loop
lahf
cmp
pop
ret
dec
adc
cmc
xor
outsb
add
cli
loopne
sub
sbb
xchg
cmpsb
test
fistps
push
add
iret
mov
insl
es
faddp
cmp
xor
and
popf
mov
pop
push
jp
das
cmp
aam
jae
push
xlat
fbld
add
rol
xor
fucomip
sbbb
push
xor
pop
cmpsl
inc
lock
scas
dec
add
xchg
std
and
pop
out
add
pop
push
adc
lret
or
incb
decb
decb
pop
aad
sbb
mov
jbe
add
fisttps
movsl
test
pop
add
push
push
inc
jae
jno
xchg
dec
xchg
cs
dec
leave
stc
sub
mov
pop
ljmp
incb
leave
mov
inc
sbb
gs
rcr
pop
sub
jmp
and
out
movsl
sbb
fsubrp
in
sub
popa
mov
fisttps
pop
pop
lret
xor
clc
jbe
cltd
jb
add
pushf
fcomip
mov
outsl
sbb
cmp
and
rcrl
xchg
repz
and
pop
cs
incb
ss
cmp
pusha
incb
mov
sub
incb
ficoms
jle
sub
incb
fnstcw
push
in
inc
add
andb
lcall
dec
mov
adc
negl
lea
sub
sbb
add
daa
int3
cmpsl
shll
adc
add
jnp
mov
pop
insb
incb
add
adc
fsubs
sub
mov
or
js
xchg
or
ss
fildll
adc
cmpxchg8b
add
adc
incb
decb
jl
mov
jp
xlat
inc
pop
push
add
loop
push
push
notb
mulb
jecxz
das
mov
cmpsb
loop
hlt
push
arpl
jl
scas
cmp
scas
fdivl
xchg
push
fldenv
xchg
push
sub
inc
pop
mov
in
jg
xchg
jmp
xor
sahf
inc
cmp
dec
mov
jne
dec
add
mov
ret
push
cld
xor
addr16
imul
je
add
movsl
imul
add
stos
xor
xor
cli
mov
test
mov
into
adc
mov
adc
loope
insl
jge
std
and
sbb
movsl
sub
loopne
mov
push
add
sbb
push
mov
imul
cmpsl
sbb
call
repz
pop
mov
dec
add
stos
dec
xchg
jp
jbe
sub
mov
mov
jo
loop
and
sti
ss
loop
mov
outsl
pop
lret
pop
jmp
xor
imulb
jnp
push
ret
adc
xor
push
mov
gs
sbb
adc
push
add
dec
adc
xor
adc
push
mov
js
push
mov
test
jecxz
in
push
push
sbb
lcall
movsl
mov
mov
add
jo
je
xor
inc
sbb
mov
cmp
mov
adc
inc
sub
pop
jecxz
cmp
insl
cli
sarb
sbb
setne
add
xchg
xchg
jnp
incb
sub
outsl
push
mov
mov
dec
add
sbb
add
jns
jbe
arpl
pop
jne
push
lods
test
aaa
inc
incb
adc
std
dec
add
adc
pop
adc
mov
add
or
imul
push
test
shll
cltd
or
mov
or
and
es
push
fwait
cmp
cmp
adc
fimuls
lods
pop
inc
xlat
cmp
incb
fimull
mov
in
pop
aam
mov
push
mull
cmpsb
pop
shrb
in
inc
lods
pop
dec
and
decb
or
jns
call
jecxz
mov
movsl
inc
mov
xor
cs
xchg
sub
call
push
stos
jnp
sub
decb
add
das
lcall
repnz
mov
xchg
mov
xor
add
jnp
jo
fdivrl
ret
xor
aas
add
sti
insb
push
cmp
push
and
incb
incb
ret
push
lea
sub
mov
fisubl
inc
or
jbe
xchg
das
fs
into
sbb
lds
and
mov
rcl
call
insb
add
dec
cmp
xchg
roll
add
ds
icebp
add
decb
add
out
cltd
rol
cmp
data16
sub
mov
sbb
sbb
pop
decb
repz
dec
mov
pusha
mov
xchg
push
xchg
sbb
mov
ror
lahf
inc
incb
aam
xchg
dec
mov
jbe
add
add
mov
fstpl
dec
xchg
mov
push
push
data16
repz
cmc
pop
lret
jns
lock
nop
lcall
add
and
scas
push
jecxz
call
jl
push
cmp
out
repz
incb
es
sbb
call
adc
or
sar
mov
setno
pusha
shlb
push
andb
cld
mov
lods
bound
incb
adc
push
add
and
fisttpl
and
lods
es
and
dec
std
jp
inc
pop
popl
jb
enter
stos
or
inc
xchg
adc
cli
cmp
adc
int3
and
dec
cmc
cmp
xor
sbb
popf
mov
add
pop
xor
jns
dec
scas
into
fs
pop
mov
adc
loope
mov
jle
mov
pop
mov
sub
mov
mov
test
sbb
xor
adc
lods
les
mov
dec
pushf
dec
add
sub
incb
mov
rclb
inc
roll
pop
xorb
and
decb
dec
cwtl
xor
or
adc
ds
filds
dec
cmp
ret
cmpsl
ljmp
decb
in
push
add
and
call
pop
cli
inc
mov
iret
cmp
loope
and
mov
xor
es
cmpsb
cmp
push
adc
shll
push
pop
ja
push
rcrb
pop
sbb
sub
decb
jle
xor
cmp
mov
mov
mov
jg
test
cltd
iret
enter
push
xchg
dec
add
cmc
lods
nopl
add
pop
repz
cmp
arpl
daa
mov
movsl
pop
movsl
sbb
or
sbb
xchg
jbe
int3
cmp
adc
popf
stc
ffree
daa
inc
sti
inc
xor
test
jne
mov
cmpsl
pop
lret
decb
adc
mov
cmpsb
sbb
push
loope
cmc
fidivl
xchg
movsl
cmp
imul
dec
jo
cld
scas
mov
add
xchg
mov
sub
pushf
mov
fidivl
ja
ror
cmpb
xor
stc
jmp
subb
jnp
insb
decb
jno
outsl
sbb
out
sbb
incb
add
test
or
decb
jp
mov
jnp
lret
sbb
sbb
pop
pop
mov
loop
inc
add
inc
es
icebp
incb
xchg
rcrb
fldcw
pop
dec
and
mov
scas
adc
xchg
hlt
jns
pop
jns
addr16
hlt
sub
mov
pop
push
fwait
cmp
mov
adc
add
lds
fidivrl
cmpsb
adc
sbb
sub
test
sbb
lea
add
adcl
cltd
add
sbb
pop
cltd
sbb
fcom
add
decb
in
orl
out
push
add
negl
cmp
faddl
outsb
addr16
adc
add
shll
or
je
add
icebp
rcr
jl
inc
cmp
add
sbb
rcl
nop
mov
jns
or
xchg
mov
add
and
mov
push
mov
dec
add
mov
and
ljmp
mov
jo
pop
icebp
in
xchg
or
add
fmulp
rcl
and
dec
add
sbb
inc
into
jno
aam
inc
add
mov
inc
xchg
addr16
mov
add
jecxz
cmovp
aaa
xchg
jno
push
ficoms
jbe
mov
add
hlt
add
pop
mov
pop
sar
mov
lods
and
cmp
inc
push
mov
or
push
and
jmp
add
shrl
jge
inc
sti
add
mov
sbb
jae
push
add
lods
add
add
xchg
repnz
xchg
jg
stc
sub
cld
sahf
out
jmp
add
ja
fprem
pop
sahf
fnsave
sub
sti
mov
jecxz
lret
arpl
int3
adc
jns
mov
xchg
dec
movsl
icebp
cli
push
pop
sub
rorb
xor
mov
adc
dec
push
das
shl
cmpsb
rcrl
add
jmp
add
js
push
daa
inc
add
out
jp
pusha
xor
jl
add
mov
mov
sub
pop
loop
add
cmpsb
lahf
stos
fsubrl
aam
or
mov
decb
cmp
pop
push
add
leave
adc
dec
add
in
imul
sti
and
adc
add
push
xor
into
je
arpl
and
and
icebp
mov
add
inc
inc
cwtl
insb
add
pushl
ss
jb
shr
xor
pop
cmpsl
adc
push
jge
in
out
test
rcr
aad
shlb
cmp
fildl
add
fdivrl
and
decb
fwait
ror
mov
test
sub
lock
cli
pop
loopne
lock
or
shll
xchg
xor
xchg
add
xor
cwtl
imul
imul
lds
lock
mov
cwtl
call
fwait
lds
cltd
push
lods
lret
sub
and
cmp
adc
inc
push
xor
decb
mov
int
push
lret
test
and
lcall
cmp
scas
ret
das
jmp
sbb
jle
movsl
cltd
or
mov
int
add
test
ljmp
leave
imul
aas
push
adc
dec
mov
adc
shrb
push
mov
sarl
jno
mov
and
add
in
inc
push
xor
sbb
movsl
inc
add
ret
cmpb
lahf
scas
xchg
xor
decb
add
mov
ss
fimuls
incb
mov
test
roll
test
cmpsl
adc
xor
and
pop
inc
pop
cmp
bound
outsl
jecxz
add
dec
decb
rclb
xor
popf
pop
sbbb
xor
or
mov
xchg
insb
add
int3
or
js
xchg
xchg
push
mov
xor
mov
add
xchg
push
pop
leave
mov
sahf
mov
add
mov
int3
scas
ljmp
insb
add
xor
dec
ja
sub
xor
mov
loopne
xor
imul
xchg
xor
les
insl
mov
push
add
movsl
xchg
lret
loop
fs
das
pop
fsts
jmp
mov
ss
aam
dec
push
xor
xlat
cli
es
aad
add
ss
lahf
mov
sub
add
cmp
cs
push
std
iret
xchg
pusha
cwtl
pop
test
fisttpll
mov
sub
inc
xor
std
data16
jne
cmp
ja
add
sub
rcrl
incb
xor
xchg
lret
sti
adc
inc
and
mov
sbb
mov
fstl
or
incb
jne
add
mov
and
sub
incb
ja
sti
icebp
mov
ss
cltd
sbb
push
out
dec
xchg
adc
cmp
es
mov
mov
jae
rclb
or
and
push
jp
add
loopne
mov
or
xchg
push
pop
leave
fdivl
std
sub
stos
data16
decb
dec
add
andl
lds
incb
add
dec
jo
adc
mov
add
inc
insb
lods
xor
jae
sbb
es
decb
push
dec
add
fildl
mov
js
sbb
orb
add
sub
jecxz
push
xor
add
stc
loope
call
push
cli
and
adc
movsb
mov
addr16
add
mov
aam
into
sub
es
adc
push
das
orl
xchg
sub
out
fisttpl
dec
push
shl
loop
inc
pop
test
add
xchg
out
repnz
fldl
adc
dec
add
jle
in
test
jl
pop
test
repnz
insl
pushf
lods
inc
pop
mov
shll
add
sbb
aad
jne
rolb
mov
jge
push
cmp
mov
add
decb
in
and
adc
insb
add
outsb
add
in
cmp
fs
leave
and
rorl
lds
aaa
xchg
inc
add
mov
jae
decb
sub
sbb
mov
cltd
adc
push
sbb
and
ds
stos
jmp
push
or
inc
jns
xchg
inc
jg
add
xor
aaa
shlb
pop
push
cmp
mov
add
movsb
mov
or
lods
xchg
orb
in
pop
mov
adc
nop
filds
repz
mov
das
push
imul
push
adc
movsl
or
pusha
insl
or
popa
jb
and
incb
dec
fwait
jnp
xor
out
jmp
add
lcall
out
lods
movsb
jp
lods
mov
pop
fsubrl
add
mov
mov
xor
pop
lods
xchg
inc
clc
cli
in
sub
cmpsb
clc
stc
fsubrp
jne
js
fwait
dec
je
or
jecxz
xorl
xor
cmp
jg
add
dec
inc
insl
ret
xor
lret
xor
addr16
cmp
fistpl
and
loop
sti
call
sarl
incb
add
cmp
xchg
ror
or
es
jge
add
pop
mov
add
adc
ja
jmp
cld
xchg
stos
inc
ljmp
add
movsb
sbb
or
mov
push
or
movsb
sti
and
push
add
pop
cmpb
cmp
mov
sbb
test
out
loope
aam
lea
mov
aaa
mov
outsb
add
bound
scas
in
test
inc
fwait
xchg
pop
inc
add
imul
adc
xchg
inc
jns
dec
dec
add
xor
adc
xchg
xchg
xor
popa
dec
add
decb
add
std
mov
movsb
lret
xor
loope
call
jno
add
shrl
cmp
push
call
pop
mov
popf
aaa
xor
in
js
pop
mov
shll
stos
inc
add
cli
mov
pusha
call
inc
bound
jb
fildll
call
ss
cs
fstpt
out
push
data16
addr16
sbb
rdpmc
or
cmp
or
jb
push
mov
ja
adc
adc
imul
add
add
dec
push
add
sti
and
and
pop
and
cmp
les
es
jne
push
das
add
int3
stos
popf
pop
mov
pop
inc
mov
fildl
mov
add
jnp
inc
add
aam
imul
mov
sbb
cmp
jmp
inc
xlat
sbb
stos
inc
incb
mov
xchg
sbb
sub
enter
decb
data16
pop
push
dec
add
jecxz
ret
inc
ja
mov
mov
sub
enter
push
add
icebp
xchg
sub
xchg
movsb
cmp
xor
not
leave
in
cltd
cmp
arpl
popa
jl
pop
icebp
and
incb
call
aad
insb
add
and
popa
dec
add
cmp
inc
mov
cwtl
shrb
es
js
call
sub
shlb
lret
fsts
mov
les
fldcw
test
testb
fldt
pop
mov
cltd
out
data16
daa
sbb
cmp
or
cmpsb
push
mov
or
movsl
xchg
xchg
icebp
sahf
mov
mov
fidivs
fxtract
push
je
daa
jns
out
jo
repnz
add
fmull
ljmp
sub
es
incb
shlb
add
mov
shlb
and
dec
stos
xor
sub
in
jns
sti
rcrl
fwait
test
repnz
das
jbe
sbb
icebp
js
outsl
mov
sub
push
xchg
mov
ret
fistpl
dec
add
fsubrl
add
pop
mov
add
or
cmovge
leave
jecxz
mov
cmp
cmpsl
repnz
decb
adc
inc
pop
push
add
int3
subb
dec
push
cmp
sbb
ss
add
rol
mov
std
mov
decb
and
fsubr
fucomi
jecxz
adc
pop
cmp
mov
or
outsb
add
pop
inc
mov
test
enter
mov
icebp
adc
gs
cmp
cmpsl
daa
in
fimull
adc
pop
add
push
les
fdivrl
jmp
push
fsubs
fdivrl
ficoms
incb
add
std
jg
push
jge
add
mov
fcoms
scas
cmpsb
dec
add
lods
nop
sub
add
pushf
dec
lret
sbb
pop
shlb
pop
leave
inc
in
loop
sub
icebp
jo
lcall
dec
add
enter
lret
add
outsl
fistps
mov
sbb
sbb
push
mov
icebp
out
mov
fcmovnbe
ret
jmp
stos
es
shrb
add
jo
inc
jle
mov
je
test
inc
ret
shll
enter
sub
pusha
and
jbe
loope
aam
add
xchg
mov
push
cmp
inc
mov
inc
mov
das
aad
inc
mov
push
or
imul
xchg
int3
ja
cmpsb
push
fs
jge
mov
xchg
xchg
and
add
xor
xor
mov
xchg
in
mov
popf
loop
cmp
pop
sahf
and
std
xchg
adc
cmpsl
ss
mov
les
incb
or
and
incb
cltd
xchg
mov
jp
lcall
cmc
icebp
xchg
popa
sub
sbbl
sbb
stos
rorl
inc
cmp
insb
add
push
clc
arpl
mov
sub
add
xor
fistpll
ret
add
aam
out
pusha
add
mov
cwtl
jmp
xchg
mov
jae
and
and
arpl
add
sub
xlat
mov
es
es
imul
add
pop
cmpsb
loop
pop
sbb
clc
jmp
jmp
inc
add
fldl
add
jne
loope
inc
add
xor
outsl
mov
sbb
test
ret
mov
mov
stc
out
xchg
lods
adc
fsubp
sub
sbb
popf
push
clc
mov
roll
incb
push
xchg
fs
lcall
pop
or
repnz
dec
sbb
jmp
movsl
cs
sbb
popa
xor
add
adc
sbb
mov
es
inc
add
jns
sbb
and
and
in
ds
stos
push
xor
and
xchg
aad
or
jne
pop
mov
std
es
mov
mov
call
push
packsswb
xlat
mov
lcall
jae
hlt
in
cmpsl
mov
das
and
jle
and
pop
or
push
fcmovne
cmp
loope
lods
iret
mov
jl
out
dec
jp
outsl
aaa
repnz
loope
aas
ja
daa
pusha
add
sub
adc
sarl
and
fcoml
push
inc
mov
cmp
fucomp
stos
cmpsb
inc
inc
add
mov
push
sbb
mov
inc
xlat
jne
inc
add
gs
jbe
lret
push
and
pushf
aad
jmp
inc
add
inc
add
add
mov
cmp
sub
add
sub
pop
push
push
pop
adc
push
aad
mov
push
dec
pop
pop
es
add
incb
enter
or
cmp
add
rolb
cmpsb
dec
lods
fbld
add
movsl
jae
stos
add
aaa
inc
adc
pushf
adcb
mov
push
incb
cli
insb
add
jae
cmp
lock
or
adc
scas
jl
popf
ja
in
pop
or
jle
add
xor
rcrl
xorl
cmpb
xchg
pop
insl
mov
push
incb
adc
hlt
or
aaa
fsubrl
sbb
and
aas
test
push
cmc
mov
cld
andl
jns
jmp
insb
add
or
add
fnstcw
add
jl
test
mov
mov
je
mov
addr16
scas
lret
insb
add
push
cs
clc
aaa
lret
mov
mov
incb
pop
xchg
xor
fs
push
jns
or
mov
cmp
add
xchg
mov
mov
fsubrs
fs
inc
jne
pushf
mov
cmc
stos
inc
add
arpl
decb
sahf
sbb
dec
add
in
push
ffreep
mov
fmulp
dec
add
jne
jo
xor
mov
dec
ds
out
add
daa
sub
incb
movsl
hlt
dec
mov
incb
add
or
add
incb
push
pop
mov
cmpsl
pop
lds
jmp
decb
or
js
stc
imul
ss
or
sub
repz
dec
sub
jno
lock
loopne
add
mov
add
fstpl
cmp
icebp
mov
sbb
mov
ret
adc
fcomps
insl
sbb
push
lret
pop
cmpsl
stos
out
aam
jp
loop
add
jb
sub
decb
inc
int
lcall
pop
filds
popa
test
pop
mov
push
add
aaa
ja
pop
das
push
dec
rorl
and
decb
inc
lods
lock
xchg
mov
jns
subb
ss
mov
and
cmp
loope
movsb
pop
outsb
add
dec
loopne
ss
add
jae
stos
aas
scas
imul
xchg
jae
ljmp
push
decb
mov
fsub
aaa
ficoms
xchg
out
adc
mov
jnp
inc
xor
ljmp
loope
jge
sub
incb
fmuls
add
cmp
fwait
mov
outsb
incb
incb
imul
rclb
mov
cltd
addr16
and
push
fcmovnb
push
inc
es
cmpsl
jmp
pop
pop
clc
ja
mov
andb
jp
stos
ret
repz
fwait
test
ror
incb
ror
aam
sahf
cmp
xor
adc
insb
incb
add
test
loopne
lea
push
sub
decb
shrl
mov
cltd
lods
ss
mov
andl
inc
lea
out
xor
mov
cmpsl
jnp
mov
push
js
fstps
add
decb
pop
popf
add
and
cmpsb
insl
fnstcw
add
shrb
and
filds
icebp
jmp
dec
cmpsb
cmpsb
add
incb
sub
ds
mov
sub
decb
stos
rol
xchg
xchg
inc
and
cmp
sbb
loop
icebp
scas
xor
sbb
imul
and
decb
ret
es
decb
add
push
add
push
std
ljmp
dec
add
mov
add
add
loop
sub
add
nop
sub
shrl
int3
mov
mov
imul
pop
outsl
leave
mov
stos
sub
ret
int3
in
pop
in
add
sbb
out
data16
pusha
add
arpl
jae
notb
loopne
sub
push
jmp
mov
nop
and
test
mov
lds
data16
out
test
cs
push
decb
lods
test
mov
outsl
sub
lcall
pop
aas
fnstcw
cmp
incb
fidivl
aaa
or
push
shlb
xchg
test
adc
mov
outsl
sbb
jmp
and
add
dec
outsb
add
dec
mov
shrl
xchg
and
in
aam
je
add
mov
mov
xor
pop
outsb
add
fstpl
dec
cmpsl
aas
std
sbb
mov
add
fdivrl
decb
xor
push
add
lcall
dec
and
decb
imul
movsb
incb
add
and
and
aad
mov
and
xor
decb
fs
addr16
sub
test
jmp
sub
push
scas
out
aam
ss
mov
xchg
shl
sbb
sub
incb
jecxz
outsl
push
lret
pop
decl
andb
push
ljmp
stos
andl
imul
add
xlat
lahf
push
hlt
or
mov
lea
out
int
lods
or
push
jo
imul
push
out
ja
cmp
jmp
sbb
inc
mov
shrl
shl
pop
in
divl
es
jge
movaps
or
incb
xchg
pop
test
sbb
flds
inc
adc
xor
push
xor
loope
mov
nop
and
xchg
cmp
es
xchg
jge
mov
mov
mov
out
dec
cmp
ror
mov
jecxz
inc
xlat
jmp
test
jae
nop
dec
add
pop
push
decb
add
lahf
xlat
sbb
mov
in
or
xor
test
icebp
adc
jmp
iret
inc
pop
or
mov
mov
stos
pop
pop
ja
imull
push
cmp
ljmp
push
out
mov
ljmp
imul
pop
rep
clc
out
fimull
mov
cs
pop
push
aas
push
repnz
lds
push
cmp
add
jmp
xor
mov
push
dec
insl
subl
add
cwtl
lret
iret
lds
mov
mov
cmp
and
shll
outsl
gs
xor
gs
cmpsl
jnp
mov
repnz
jbe
ljmp
xchg
dec
add
loope
pop
jp
cli
push
or
decb
fucomi
pop
pop
mov
jle
add
jl
xor
jl
aas
movsl
clc
sahf
mov
xchg
cwtl
scas
sti
movsl
inc
in
pop
or
adc
adc
stc
pop
mov
fs
pop
cli
movsb
xor
decb
stos
cmovae
cld
and
jmp
fdivs
or
and
inc
addr16
in
mov
mov
inc
mov
in
add
cltd
shlb
mov
inc
incb
jns
add
pop
push
and
incb
mov
fmul
add
call
inc
std
push
roll
test
fcmovnu
and
jo
imul
ret
outsb
add
outsb
and
pop
iret
dec
incb
add
fstpl
jbe
lods
pop
daa
repz
mov
movsl
xor
dec
in
das
adcb
lcall
cli
clc
pop
jb
movsl
outsb
jb
popa
and
decb
loop
nop
or
addr16
fisubs
decb
clc
setbe
mov
fnstenv
out
jle
and
pop
mov
stos
sub
add
out
sub
orl
decb
mov
sbb
mov
mov
cmp
in
faddl
ja
jle
xor
jb
sub
lods
adc
movsl
xchg
fimuls
xor
jp
ficomps
cld
xchg
add
shll
call
pop
lret
add
decb
stos
sub
decb
aaa
subb
mov
es
decb
add
incb
push
xor
in
lods
sub
dec
mov
in
mov
insb
adc
out
les
fsubs
push
sub
incb
mov
iret
mov
xchg
xchg
adcl
xchg
pop
or
dec
sub
cmpl
sbb
incb
icebp
sbb
enter
mov
aaa
sub
mov
jmp
mov
xchg
popf
incb
mov
lret
into
out
and
daa
dec
add
jbe
jo
imul
mov
add
les
pop
scas
pop
pop
iret
adc
in
push
xchg
cmp
call
add
and
cmpsl
dec
incb
push
mov
sti
mov
or
cwtl
lods
pushf
pop
outsb
mov
xor
xor
xor
icebp
xor
ret
in
xchg
xchg
movsl
push
cld
dec
mov
xchg
sub
xor
and
pop
mov
add
xor
mov
inc
add
fldl
stos
lock
dec
cmp
push
testl
adc
add
mov
xchg
sbb
push
out
test
sub
mov
incb
adc
clc
stos
nop
sbb
negl
ds
out
std
mov
xor
jge
add
data16
pop
push
cwtl
and
adc
loope
out
iret
push
stc
add
cli
outsb
clc
add
pop
dec
fsubrs
sbb
jns
push
lret
push
or
arpl
movsl
fcompl
mov
mov
daa
das
cli
or
stos
outsl
adc
cmp
jns
je
push
push
movb
jmp
xor
movsl
test
pop
xchg
mov
or
decb
add
inc
add
push
add
cmpsl
gs
sub
dec
in
shrl
jg
shll
rcl
push
add
dec
mov
add
hlt
xor
xchg
icebp
xor
rorb
add
xchg
orl
fidivs
cmp
cmp
in
rcll
push
leave
movsb
int3
pop
std
push
add
jmp
call
popa
cmpsb
jmp
and
jno
outsb
rcl
notl
call
mov
popa
xchg
cmp
mov
popf
mov
int3
dec
fwait
xchg
std
imul
sub
cmpsb
push
mov
ret
movsl
sti
or
add
ja
jne
push
pop
rcll
faddp
lahf
sub
decb
dec
add
xchg
sub
inc
inc
inc
jae
mov
xor
dec
daa
push
add
stos
mov
mov
stc
mov
add
xchg
mov
dec
xchg
jge
rolb
jge
add
cmpsb
adc
fsubl
imul
mov
mov
adc
stc
xchg
add
xchg
mov
add
mov
or
decb
jmp
xchg
lock
icebp
cmp
add
xor
addr16
adcl
dec
xchg
jp
jl
xchg
or
sub
xchg
adc
push
xor
sbb
add
daa
mov
insb
je
mov
icebp
ret
movsl
pop
call
loop
fcmovb
orl
push
pushf
test
repnz
cmpb
add
adc
mov
rol
add
incb
mov
sub
mov
mov
push
mov
addr16
adc
mov
movsl
sub
daa
sbb
add
adc
add
stos
push
add
sbb
xor
imul
in
in
insl
lret
lock
xchg
adc
mov
sbb
dec
incb
pop
rolb
cmpsl
push
in
pop
aas
cwtl
daa
adc
mov
int
add
and
pop
lock
lret
adc
gs
out
and
outsl
out
or
sub
jg
sub
mov
pop
and
or
imul
jp
mov
div
gs
xor
clc
fsubs
add
and
cmpsb
cmp
sub
hlt
sub
pop
cs
ljmp
pushf
je
addl
test
push
stc
fbstp
inc
or
push
ret
or
ret
lcall
cs
incb
out
rolb
out
add
xchg
cmp
shl
xchg
insb
call
jl
test
inc
add
test
in
gs
aad
xchg
ljmp
je
sub
adc
or
std
jbe
dec
add
cmpsb
movsl
push
cwtl
ret
mov
push
or
imul
push
jge
lods
das
in
outsb
add
pop
mov
jnp
adc
flds
shl
loop
inc
add
mov
cmp
leave
add
pushf
ret
add
bound
incb
dec
pusha
cltd
push
in
int3
jno
inc
sbb
in
hlt
push
je
fbstp
int3
int3
or
mov
mov
and
push
out
popa
insb
add
xor
mov
enter
sub
das
icebp
ficomps
add
fidivrs
addr16
call
xchg
adc
insl
sub
mov
xlat
or
popf
outsl
xorb
dec
orl
pop
cmp
imul
sbbl
jo
cwtl
mov
ret
enter
dec
mov
cld
cs
push
fdivl
adc
lea
sbb
xor
mull
inc
sar
pop
dec
pop
inc
call
jno
call
decb
mov
addr16
popf
push
fsubrl
mov
add
pop
mov
pusha
add
inc
add
cmp
stc
mov
cmp
sbb
xchg
or
inc
stos
out
jle
notl
call
testl
dec
cmpsl
shl
add
fmulp
fcompl
mov
push
cmpsl
pop
xlat
popa
lock
xchg
xor
popa
in
lods
xor
xchg
jne
pop
icebp
dec
add
lods
fldenv
push
sbb
dec
add
sub
scas
mov
jns
sub
and
mov
ljmp
inc
pop
pop
push
push
outsl
cmpsb
icebp
pusha
xor
and
flds
outsl
fs
das
out
mov
lret
mov
jbe
cmpsl
lret
add
sub
aad
mov
push
orl
cwtl
jbe
fnstsw
mov
fildl
sub
pop
mov
incb
xchg
pop
dec
add
lds
sub
cmpb
adc
dec
lods
jbe
lods
fisttpl
pop
stos
xor
mov
test
add
push
sub
stc
sbb
add
mov
cltd
push
scas
gs
inc
push
pop
mulb
add
mov
ja
add
orl
mov
std
xor
pushf
mov
add
jecxz
cmp
stos
or
incb
hlt
cld
pop
sbb
mov
xor
pop
push
jnp
add
test
dec
rcrl
and
push
push
xchg
es
addr16
out
stos
fidivrl
test
in
push
add
add
decb
out
jne
and
sbb
inc
dec
in
xor
enter
popf
xor
add
cld
pop
enter
add
cmp
je
jbe
dec
lea
jne
dec
ss
add
outsl
xor
mov
jle
data16
shr
addr16
push
popa
loop
sub
add
data16
lcall
jne
push
xor
adc
sub
incb
rorb
adc
inc
es
jmp
dec
test
jbe
sub
shr
ss
gs
test
or
gs
mov
push
jle
jb
incb
insl
in
icebp
pop
adc
ljmp
arpl
sbb
sarb
dec
jae
jbe
sbb
stos
movsl
subl
pop
push
das
cmc
stos
cmp
mov
xchg
adc
jne
addl
inc
push
push
mov
js
inc
mov
je
clc
call
popl
pop
movsl
sbb
pop
jo
mov
lret
adc
je
mov
repnz
and
std
sub
jge
xchg
dec
dec
decb
push
inc
mov
incb
cmp
xchg
popf
lods
hlt
mov
test
jg
fcomi
sub
xchg
pop
cmp
add
mov
mov
jmp
dec
and
cmpsb
ror
xchg
movsl
test
push
mov
and
push
inc
adc
ret
cmp
add
iret
pop
cmp
xor
out
icebp
rep
mov
decb
dec
incb
rcll
in
stos
inc
add
ret
aad
test
push
lahf
and
in
xchg
adc
or
lds
add
xorb
xchg
ds
nop
cmp
adc
dec
add
pop
jae
lods
test
outsl
cs
decb
fists
mov
cld
push
out
adc
jmp
int
cmp
xchg
lret
bound
dec
inc
inc
inc
xchg
jno
cs
insb
push
mov
in
adc
pop
push
sbb
pushf
dec
incb
sti
cmpl
mov
adc
jo
dec
add
mov
push
sbb
add
jg
out
incb
add
negl
or
add
int
lds
add
push
pop
jns
sub
xchg
cmp
jp
xor
xchg
call
mov
jmp
add
data16
decb
call
sub
sub
and
xchg
mov
cmc
cmp
xchg
xor
add
jae
cmp
out
shrb
outsb
decb
arpl
ret
das
fnstenv
pop
or
mov
decb
shrl
std
cmp
outsb
out
sbb
jg
fadds
lock
movsl
push
ret
inc
cmpb
mov
adc
cmp
fiaddl
adc
sarl
repz
and
aad
dec
stc
cmp
or
mov
or
rcll
sar
sub
inc
nop
inc
ret
mov
ds
imul
in
cwtl
in
cmc
add
out
sarl
shrb
iret
jp
mov
pushf
outsb
add
ljmp
pushf
das
adc
xchg
push
push
ljmp
mov
mov
jle
or
cmp
mov
lods
push
jmp
inc
fsts
mov
loopne
add
jne
in
or
inc
pop
int3
xor
push
ljmp
fsubl
pop
pusha
decb
outsl
pop
iret
cmp
mov
stos
jecxz
sti
xchg
cs
clc
cmp
ljmp
pop
insb
dec
sbb
add
hlt
in
mov
dec
adc
sub
pop
in
mov
cs
xor
out
mov
add
in
push
mov
pusha
add
movl
test
pushl
jne
add
test
test
in
mov
mov
mov
adc
lods
or
dec
push
add
mov
orl
add
lret
daa
adc
aaa
push
into
shlb
xor
je
add
or
pop
xchg
fildl
xchg
pop
dec
push
jl
inc
xchg
pop
xchg
cwtl
dec
pop
cwtl
mov
adc
fcomp
xor
and
fs
cltd
sti
lds
inc
add
lret
pusha
add
es
hlt
call
push
imul
pop
mov
dec
stc
dec
es
xor
dec
dec
add
and
dec
xchg
dec
call
xchg
js
int3
aaa
mov
fisubl
cwtl
inc
jne
out
in
jmp
lods
mov
in
rorl
data16
xor
mov
cmp
xor
xor
adc
imul
sbb
addr16
popf
sub
lcall
arpl
and
cmpsb
mov
loop
fwait
daa
into
sahf
pop
xor
push
xchg
aas
mov
add
and
decb
ja
cmp
in
adc
popa
sbbb
xchg
push
xchg
push
sahf
mov
idivl
mov
or
aam
bnd
pop
fs
incb
daa
push
add
xlat
ljmp
add
cmpsb
addr16
mov
lret
iret
inc
mov
inc
sub
decb
incb
fmull
fimull
inc
iret
pop
aam
add
dec
or
pop
lods
inc
fmul
sbb
mov
xor
ret
adc
sub
incb
lods
loope
outsl
fxch
divl
mov
sub
das
xor
push
adc
stos
fwait
dec
movsb
mov
inc
add
jg
adc
pop
adc
incb
and
jge
sti
inc
add
push
add
inc
and
insb
decb
push
test
add
mov
inc
xchg
jb
inc
cwtl
mov
dec
cmc
cmp
or
inc
pop
stc
jae
sub
inc
js
or
pop
rclb
mov
mov
cltd
insl
mov
pop
add
incb
imul
aam
shll
clc
cli
imul
jne
rcrl
push
repnz
or
decb
fsubrl
decb
push
cmp
sub
inc
add
mov
dec
ret
pop
pop
add
add
in
or
pusha
add
data16
jnp
and
notl
dec
adc
add
jo
mov
repz
aas
test
inc
sub
clc
mov
nop
iret
aas
inc
incb
add
lret
cmc
clc
test
decb
lods
xor
inc
jg
idivl
pop
jp
rcll
xchg
jl
movsb
xor
xchg
mov
or
dec
sub
mov
jbe
cld
aam
pop
add
and
out
shlb
mov
add
imul
mov
lahf
das
mov
incb
das
xor
addl
popa
push
mov
jp
cmp
aas
sbb
out
cmpsl
lods
les
repnz
push
shlb
imul
scas
mov
or
stos
imul
daa
in
andl
popf
cmpsl
test
hlt
mov
mov
fcoml
stos
or
decb
jp
sub
ss
std
inc
rclb
bound
sbb
adc
push
mov
push
sbb
mov
add
cmp
jbe
mov
xchg
pop
push
xor
inc
add
rorl
popa
pop
cmp
add
mov
and
add
sbb
add
pusha
push
mov
or
aaa
xchg
mov
cwtl
lahf
push
lods
sar
inc
dec
stos
xor
ret
insl
push
add
int3
lods
push
inc
dec
push
add
cli
and
cmc
ljmp
or
decb
aas
xchg
jmp
inc
add
orb
incb
insl
mov
push
outsl
out
fnstcw
add
and
jl
sub
int
mov
cmp
in
flds
jno
or
and
adc
shr
pop
mov
mov
add
ds
add
xor
dec
mov
je
xor
add
adc
dec
fnsave
out
rorb
or
xchg
roll
jo
jg
aad
pop
sbb
mov
cmovle
fs
ljmp
add
mov
add
aas
roll
scas
shll
insl
mov
ret
fs
lds
fcmove
outsb
xchg
sub
loop
pusha
add
in
imul
fcoml
xlat
daa
gs
jg
add
leave
mov
fld
mov
dec
cld
sahf
adc
push
push
add
mov
push
cmc
dec
add
xor
pushl
imul
pop
rcll
sub
sbb
or
mov
mov
ret
pushf
ljmp
loope
std
test
leave
insb
add
fs
push
es
incb
loopne
dec
add
enter
add
fstl
mov
and
pop
test
and
pop
mov
sub
outsb
jbe
adc
popf
sar
sarb
or
movsl
test
icebp
xor
mov
scas
mov
and
pop
cs
decb
test
imul
jo
sahf
sub
adc
fcomps
ja
rclb
int
bnd
cmpsl
loopne
test
sbb
jne
mov
lock
imul
cld
into
arpl
mov
add
or
cmp
stos
mov
fdivl
add
in
mov
addl
add
loop
sti
mov
gs
and
xor
imul
inc
add
ja
sti
repnz
roll
jg
mov
xchg
push
and
incb
sub
lahf
icebp
orb
das
dec
mov
jp
jecxz
popf
ljmp
xor
decb
push
out
les
cmp
pop
pop
enter
push
je
in
adc
mov
push
xchg
pop
inc
ja
incb
sub
scas
add
fmul
stos
mov
and
decb
popa
pop
cmp
pop
das
aas
mov
popf
adc
mov
sbb
jmp
xor
testl
cmp
jge
adc
xor
cmp
lock
pop
fisubl
or
in
ljmp
cmp
mov
fsubs
in
ds
mov
aam
add
pop
and
pop
hlt
sbb
fwait
lea
add
enter
data16
int3
dec
add
inc
decb
add
jbe
into
dec
sub
pop
sbb
js
dec
mov
cmp
lret
dec
cmp
stos
mov
xor
popf
out
lahf
out
fsubrs
sti
out
mov
incb
pushf
mov
in
cmp
lock
cmpsl
inc
dec
test
es
xchg
cmp
xchg
add
leave
inc
add
inc
add
jbe
xchg
xchg
das
call
adc
aaa
cmp
mov
push
lds
push
rclb
lods
mov
mov
aad
sub
lods
push
dec
sbb
addr16
adc
decb
scas
call
hlt
mov
xchg
clc
or
hlt
jmp
scas
pushf
cmpsb
clc
mov
add
in
add
mov
jne
push
add
lret
int3
orb
test
std
xlat
add
outsl
cmp
inc
xor
pop
inc
pop
fisubs
clc
cmp
repz
jge
xchg
add
pop
outsl
pop
cs
out
xor
mov
mov
decb
mov
pop
jl
leave
lods
or
xor
jnp
push
movsb
sbb
repz
pop
popf
sti
mov
cmp
jge
sbb
je
std
xchg
call
vmovaps
jmp
lret
xchg
xchg
loopne
push
cmpsl
add
mov
mov
incb
sbb
push
add
aad
cld
dec
pop
or
rcr
icebp
in
popf
sti
mov
ret
add
divb
dec
xchg
or
in
inc
xchg
jmp
out
inc
mov
inc
push
push
scas
jns
lods
ret
sub
mov
add
sti
sbb
ret
pop
loopew
test
outsl
sub
dec
pop
ret
xchg
hlt
sbb
rcrl
bswap
xchg
mov
add
pop
push
jp
add
int
mov
and
imul
fs
add
enter
and
in
fwait
add
fidivrl
outsb
add
mov
pushf
add
inc
es
jp
xor
inc
ret
adc
push
cli
add
inc
je
xor
es
decb
aam
pusha
add
mov
in
cs
aam
jne
xchg
testl
lret
sbb
mov
sbb
jg
dec
add
stos
push
cmp
or
fstps
dec
add
pushf
sti
das
push
incl
add
jb
ficoml
fsub
lret
insl
in
in
mov
les
dec
push
je
test
in
push
pop
xor
test
ret
arpl
out
cmp
xor
or
cwtl
pop
jb
cli
cmp
xor
mov
lahf
icebp
sub
aam
add
es
cmp
add
cmp
sub
mov
xchg
mov
mov
fdivs
add
sbb
out
mov
test
push
jp
adc
aad
lods
xor
js
and
inc
xchg
jge
out
push
jbe
jae
mov
jl
mov
jg
xchg
mov
or
mov
lcall
inc
ret
push
mov
decb
decb
decb
cmp
daa
scas
xchg
sub
dec
jge
jae
addr16
dec
jns
imul
mov
out
cmc
rorb
mov
movl
xchg
xchg
test
mov
adc
dec
outsb
out
and
xchg
mov
stc
incb
cmp
add
or
loop
leave
daa
aad
push
add
lods
aas
imul
je
repnz
add
xor
pop
js
push
repz
xchg
push
inc
xchg
jnp
cld
pusha
add
or
and
mov
jmp
dec
insl
or
aam
mov
fneni(8087
imul
les
jno
push
movsb
xor
into
sub
jns
jo
fidivrl
or
xchg
stc
xchg
dec
pop
xchg
repz
dec
fstpl
lret
test
push
jae
sub
mov
xlat
push
sbb
mov
or
popa
add
incb
movsl
sahf
mov
inc
xchg
and
sarl
jecxz
stos
mov
push
jno
mov
add
and
sub
push
add
iret
test
jle
jb
mov
mov
sub
inc
adc
pop
pop
mov
bound
je
xchg
add
pop
in
psraw
ljmp
aad
inc
xlat
or
pop
inc
add
ja
add
jle
stos
or
mov
add
fsubrs
and
push
add
inc
dec
pop
lods
xchg
outsl
xchg
xor
mov
xor
jno
push
pop
inc
add
test
test
xor
cmp
add
push
leave
sbb
inc
lds
mov
push
stc
mov
pusha
add
add
scas
loopne
aad
add
std
jnp
mov
mov
dec
add
andb
inc
add
insb
repz
decb
cmpl
cs
sub
mov
je
adc
andl
cmp
in
je
arpl
add
cltd
or
mov
cmp
mov
fs
fldl
dec
and
dec
add
out
cltd
xchg
imul
push
ret
or
inc
push
push
push
pop
xchg
add
mov
pop
outsl
popa
imul
or
addr16
je
mov
sbb
dec
loop
leave
cli
mov
fnstenv
mov
mov
shl
cmpsl
adcl
popa
xor
adc
xchg
insl
pop
push
scas
cmp
or
in
add
sahf
ss
and
insl
out
les
xchg
pusha
test
or
incb
xor
mov
adc
mov
and
jle
xlat
rcrl
add
test
cltd
ret
lods
dec
rcrl
and
pusha
add
push
add
sarb
cmp
jp
xor
sbb
adc
bswap
xchg
xor
stos
enter
lahf
xchg
mov
stc
aad
sub
mov
push
fimull
ljmp
cmp
fwait
xor
push
adc
xor
shl
mov
aam
mov
jp
lcall
shrb
loopne
or
push
pop
xor
jmp
mov
jae
sub
je
cmp
fcompl
outsl
mov
xchg
inc
mov
mov
pop
outsl
int3
jae
sub
jge
imul
add
inc
mov
pop
fists
xchg
adc
inc
shll
sbb
pop
mov
and
aam
adc
mov
dec
push
add
mov
add
cs
in
jne
frstor
les
cs
xor
push
testl
pop
orb
jns
cld
cmp
mov
sti
ljmp
xor
lahf
sub
incb
push
pop
loope
idivl
sahf
mov
cld
and
fwait
sti
pop
scas
sahf
je
int
add
lcall
push
bound
bound
decb
add
mov
jg
dec
add
sti
ret
dec
sahf
xor
push
cmpsb
jns
stos
jne
jmp
incb
inc
dec
cmpsl
pushf
pop
jmp
and
inc
mov
stos
fs
js
das
hlt
rorl
fstpl
test
movsb
fsts
out
cmp
pop
sbb
push
cli
inc
add
lahf
xor
cs
xor
andl
push
add
mov
jp
xorb
xor
je
add
ret
arpl
inc
scas
or
pop
adc
jb
dec
add
mov
add
aad
add
clc
cmc
xlat
mov
pop
imul
cli
pop
scas
adc
out
adc
mov
dec
fistpl
loope
fwait
pop
inc
pop
xor
adc
sbb
jp
cmpsl
mov
insl
push
lcall
nop
jno
jmp
stos
sbb
gs
pop
inc
aad
adc
add
xchg
imul
adc
cmp
inc
ret
xchg
into
mov
decb
jge
mov
dec
and
pop
ss
aaa
jecxz
scas
cmpsb
aas
add
mov
addl
push
pop
loop
test
sub
cld
add
adc
mov
mov
sbb
shll
arpl
fcomi
mov
gs
push
incl
decb
scas
sbb
pusha
add
push
pop
jp
ror
in
fistl
lcall
pop
nop
stc
or
incb
sbb
sahf
lahf
add
ret
mov
cli
mov
inc
incb
xchg
cwtl
daa
movsb
fsts
sub
fmulp
jle
xor
pop
jl
adc
adc
fnsave
add
subb
gs
add
sbb
into
and
incb
aaa
or
pop
jmp
or
decb
inc
sbb
push
push
mov
sti
daa
sbb
mov
fdivrl
jb
add
clc
xchg
mov
mov
sbb
test
jae
inc
mov
shrl
das
scas
aaa
shlb
push
inc
lret
cli
xchg
jbe
insl
mov
mov
adc
sahf
push
add
dec
mov
add
xchg
fs
adc
push
cmp
mov
xor
subb
sub
inc
in
or
in
mov
jbe
outsl
leave
and
cmp
sub
das
stc
mov
mov
popa
call
and
out
test
lret
popa
fcomps
aas
rcr
mov
aad
std
push
insl
or
imul
mov
sahf
adc
jg
pushf
pop
dec
add
cmp
dec
loopne
push
xchg
mov
mov
outsb
add
popa
bound
mov
push
fbstp
sbb
inc
add
ret
pop
add
pop
xor
out
fsubrl
ljmp
das
push
adc
mov
and
mov
add
and
incb
mov
into
sub
push
push
mov
dec
call
push
decb
mov
push
iret
std
call
in
int
cld
add
decb
jns
xor
std
pop
rep
das
push
and
addl
pop
daa
les
push
jo
mov
decb
pop
jl
es
fidivs
insb
dec
adc
xor
adc
fs
push
das
cs
jp
dec
test
ljmp
sti
push
orl
out
out
xor
sub
rclb
stos
movsl
pop
mov
push
xlat
or
jge
xor
push
out
push
out
cmpsl
mov
addr16
out
pop
movl
enter
movhlps
push
pop
mov
adc
mov
sbb
iret
pop
xor
xor
es
decb
addl
dec
add
inc
or
fiadds
add
pop
shll
mov
nop
pop
sarl
jo
decb
cmp
lods
sbb
clc
dec
add
sbb
cli
mov
sub
or
pop
adc
jns
addr16
ret
add
cmpsl
shrl
adc
sub
cmp
add
dec
add
cltd
xor
out
int
jne
mov
push
adc
std
loope
insb
add
cltd
jo
test
rcl
mov
add
gs
decb
mov
add
mov
cmp
jmp
push
cmpsl
pop
adc
out
xchg
add
mov
inc
push
decb
sbb
ss
aaa
ja
jnp
mov
add
in
and
daa
sbb
pushf
pushf
shlb
incb
faddl
data16
sbbb
cmp
dec
and
incb
pop
out
jg
stos
xor
out
mov
gs
test
dec
add
ss
lea
cwtl
int
int3
cmc
inc
lahf
pop
jns
stos
mov
xchg
jg
push
jl
mov
das
lret
daa
lock
repnz
push
inc
add
ljmp
add
dec
mov
add
pop
rolb
ret
out
mov
fistps
inc
dec
or
lret
cmc
roll
cmp
addl
add
push
in
movsl
fwait
lret
and
inc
das
add
ret
dec
add
ja
mov
mov
cmp
aad
cli
dec
or
jmp
subl
dec
scas
cmp
fsub
test
outsb
add
push
sbb
or
arpl
imul
sub
cmc
fs
stos
shlb
loope
mull
aas
inc
mull
fnsave
cmp
dec
arpl
pushf
out
stos
repz
loopne
sub
cli
sbb
sub
aas
mov
ss
xchg
loope
and
mov
lcall
xchg
ret
popf
mov
mov
add
xor
out
dec
add
lods
push
scas
add
mov
add
lods
clc
inc
incb
pop
insl
and
negb
lret
cmp
incb
cli
outsl
jmp
cmpsb
sahf
inc
add
jmp
adcb
mov
sub
dec
lds
add
xchg
clc
div
movd
mov
add
es
mov
xchg
addr16
add
sbb
xor
add
faddl
push
mov
or
jecxz
sbb
fidivs
sbbl
add
into
push
add
dec
rorl
jg
je
sub
addr16
call
cmp
enter
add
pop
orb
jnp
add
xor
xlat
mov
inc
mov
aas
mov
cmpsl
hlt
push
jle
test
das
shll
sub
pop
jo
shld
out
add
push
dec
pop
je
cmc
adc
call
cwtl
sub
jecxz
jle
cmc
push
data16
push
push
sub
mov
rcl
shr
cmpsl
cs
decb
out
out
jmp
jnp
int3
stos
loope
push
dec
lds
outsb
add
and
sub
jo
aad
jmp
xchg
pop
sti
pop
outsb
dec
hlt
or
mov
xchg
push
adc
jns
out
fdiv
cld
sbb
mov
mov
add
out
arpl
push
aas
mov
push
pop
addr16
and
and
das
adc
ja
mov
pop
je
dec
push
aam
xchg
js
sbb
pop
pop
pop
sbb
xor
js
insl
xlat
sub
mov
push
inc
add
sub
dec
inc
xchg
xor
sbb
lods
mov
test
xchg
test
push
les
dec
decb
xchg
stos
add
out
decb
movsb
jg
rcrl
mov
cmp
sahf
xor
sub
jg
out
je
push
dec
jae
ja
adc
jp
add
outsb
aad
pushf
outsl
sti
lcall
sub
ja
rcrb
test
add
add
insl
insl
and
incb
add
jmp
pushf
pushl
cmpsb
outsl
and
push
inc
fcompl
add
fs
mov
in
inc
add
mov
xchg
mov
popa
adc
ficoml
dec
jecxz
xchg
mov
imul
push
dec
cld
mov
mov
movsl
rorb
decb
dec
mov
add
xchg
mov
adc
cmp
adc
adc
mov
test
sub
addr16
test
clc
addr16
add
mov
or
push
pop
nop
fmull
add
jle
dec
add
add
imul
stos
cmpl
mov
js
mov
adc
ret
sub
lock
sbb
jle
push
add
outsl
cmpsb
clc
add
mov
insb
inc
int3
sbb
push
add
clc
dec
jecxz
sbb
nop
stc
and
call
mov
inc
add
lea
add
cwtl
int3
cwtl
push
inc
in
cltd
aam
out
outsb
jo
je
mov
movsb
adc
mov
hlt
add
pop
stos
cmpsl
ret
jmp
inc
add
jbe
call
imul
add
mull
lods
lahf
and
adc
frstor
push
sub
loop
mov
fs
jge
inc
es
pop
dec
out
mov
in
add
hlt
jecxz
jns
aad
jle
mov
es
fdivs
or
mov
push
aas
mov
outsb
add
push
arpl
ret
xor
cs
dec
jne
add
mov
ret
push
aam
inc
in
fisttpl
fimull
in
add
outsb
cs
ret
pop
cmp
dec
add
test
in
sub
loopne
dec
mov
jb
add
jb
push
or
test
int
mov
jmp
dec
add
add
shrb
rorl
aaa
and
je
dec
add
pop
adc
mov
mov
and
scas
iret
sub
call
xor
add
lahf
jle
loopne
test
sbb
add
rcr
jb
xchg
pop
in
pop
insb
add
insb
es
stos
or
icebp
xor
adc
incb
cltd
les
cli
dec
and
decb
jnp
add
incb
mov
aas
and
inc
imul
sbb
push
pop
ret
dec
fstl
in
cmp
push
jmp
and
sti
mov
fyl2xp1
push
repz
or
arpl
dec
incb
jp
xchg
lods
adc
mov
pop
movsl
pop
jmp
xchg
scas
mov
into
stc
cmc
fidivrs
jmp
shrl
add
adc
cmc
mov
and
xchg
sbb
imul
push
lea
jb
jnp
add
xchg
and
add
xor
scas
or
mov
add
mov
gs
clc
jg
daa
int3
push
dec
xor
rorl
mov
std
adcl
lods
cmp
notl
loop
jae
lcall
cwtl
or
decb
cltd
leave
mov
mov
adc
sub
fadds
mov
incb
mov
add
add
dec
add
call
dec
push
pushf
add
xor
xor
loopne
xor
bound
cmp
adc
decb
lock
incb
insl
into
pop
ljmp
cli
push
add
fidivrl
dec
lret
jecxz
add
aam
push
dec
add
sub
aad
cltd
pop
mov
decb
cmc
subl
gs
sbb
daa
stos
testb
lock
clc
mov
call
xlat
mov
sti
or
xchg
push
sbb
sub
sbb
adc
test
and
jmp
mov
stos
scas
test
cld
dec
mov
fmul
dec
push
jge
in
push
add
add
decb
es
and
cs
std
jle
addr16
adc
pusha
std
mov
mov
inc
add
fwait
lcall
movsb
push
inc
decb
decb
xchg
in
arpl
out
ret
popf
pop
hlt
mov
loop
hlt
sarl
scas
pusha
jmp
pop
adc
push
or
jmp
dec
cmpsb
mov
pop
clc
cmpsb
inc
xchg
mov
cli
dec
jl
adc
mov
push
movsl
mov
xchg
incb
sahf
out
mov
aad
push
clc
push
in
fs
and
incb
inc
sub
incb
repz
sub
jecxz
add
rol
or
int3
movsl
dec
incb
aas
pusha
test
decb
sbb
mov
sub
scas
ja
jmp
sbb
sqrtps
test
mov
fs
outsl
xchg
push
nop
xor
test
jl
les
imul
decb
mov
imulb
stos
stc
mov
jle
xor
or
ja
cmpsb
popa
mov
mov
mov
ret
xchg
mov
dec
mov
push
pop
add
pushf
jbe
xor
scas
mov
mov
xchg
jno
ss
add
mov
adc
cmp
loopne
push
inc
aam
inc
js
cmpsb
test
mov
jge
dec
mov
jbe
xchg
push
ret
adc
in
pop
frstor
jno
cltd
lods
stc
mov
fs
sub
enter
add
lahf
cmp
xchg
xor
incb
dec
xor
std
dec
mov
shrl
inc
shll
cld
insl
inc
add
pop
dec
test
add
xchg
pop
jp
fdivs
incb
sbb
jb
adc
es
jmp
scas
pop
inc
xlat
orl
fbstp
xor
vpmuludq
loop
add
sub
arpl
enter
inc
lods
push
xor
add
repz
sbbb
and
sbb
push
pushf
lods
sub
fisttpll
inc
or
stos
jle
sbb
popf
mov
imul
sub
test
icebp
mov
dec
fs
and
mov
int3
es
pop
jl
cltd
fnstenv
xor
icebp
scas
mov
pop
in
into
jns
push
aad
xchg
fcom
xor
mov
decb
ja
xchg
icebp
push
adc
xor
out
lahf
jo
xor
data16
cmp
bound
lahf
inc
add
jmp
addr16
xchg
decb
jle
inc
add
sbb
mov
js
loopne
repz
cmpsb
mov
cmp
decb
sbbl
fsubrl
sahf
and
dec
add
dec
add
sbbb
xchg
mov
lcall
or
decb
in
rclb
jle
gs
aaa
sarb
add
scas
jo
add
popa
xchg
and
incb
dec
jnp
ss
mov
aam
lods
push
mov
dec
push
push
call
jmp
insb
add
push
lea
jb
leave
loop
dec
add
imul
data16
cld
pop
sub
vcvtpd2psy
mov
pop
fsub
aad
xor
add
cmp
lcall
rcrb
add
xchg
das
jle
jbe
mov
sahf
mov
inc
add
pop
fcmovne
lock
mov
push
ja
mov
ljmp
push
mov
decb
in
jb
lods
push
add
sbb
add
outsl
ja
lcall
push
add
add
loope
add
and
xor
call
or
cmp
scas
clc
sbb
jns
jg
mov
mov
mov
into
mov
dec
fwait
insb
add
cld
jo
jle
aad
adc
mov
sbb
or
ljmp
mov
jg
inc
and
sbb
int3
mov
repz
daa
mov
sub
loope
add
sbb
daa
data16
mov
data16
decb
ror
lahf
loope
fbld
mov
iret
inc
add
aam
mov
xor
push
aam
push
je
decb
xlat
sub
adc
mov
repz
push
dec
sti
mov
lods
push
arpl
mov
popa
or
mov
aas
mov
mov
add
lods
sbb
fimull
fstpl
dec
add
sub
jle
test
push
add
mov
in
mov
hlt
push
sarb
aaa
add
jmp
pushf
mov
out
jp
movsl
sbb
lds
xchg
pop
mov
inc
add
mov
add
fstps
nop
rorb
ftst
xor
xor
jo
push
cltd
or
cli
xor
add
jg
in
call
data16
ss
inc
icebp
cs
mov
std
call
pop
lret
int
jle
mov
push
add
mov
adc
decb
orl
sti
pusha
pop
addr16
add
push
test
neg
imul
mov
adc
push
push
or
incb
add
cli
adc
ds
jmp
push
cwtl
sbb
add
fldl
ss
mov
xchg
xchg
repnz
cmp
int3
mov
sbb
inc
add
lret
sbb
cs
test
pop
cmp
mov
xor
jne
sub
cmp
push
mov
add
dec
and
cmp
push
call
push
jbe
test
shl
test
aam
and
jl
dec
jecxz
xor
insb
add
into
fcompl
push
fs
mov
int
out
outsb
add
sub
push
gs
fcomps
add
cmp
mov
decb
add
sarb
add
add
data16
cli
sahf
add
add
jg
das
and
dec
xchg
adc
push
ss
test
add
cmpsl
aaa
leave
push
pop
mov
aad
repnz
mov
push
ja
fs
push
jo
push
data16
arpl
add
or
decb
inc
lahf
mov
jbe
dec
inc
add
cmp
pop
stos
mov
jne
pop
sub
mov
fimuls
jns
mov
or
pop
or
mov
jecxz
lahf
cmpl
in
ljmp
sbb
fmulp
cld
dec
test
and
jle
stc
dec
add
mov
xor
loop
dec
test
or
cmpsb
and
add
cmp
jl
add
in
mov
sub
cmpsl
mov
jnp
and
mov
daa
insl
push
mov
movl
sbb
test
clc
cmp
out
push
adc
adc
insl
dec
mov
jg
jbe
ret
and
mov
xor
add
mov
lods
jns
dec
rcrb
and
xor
mov
fwait
cld
jge
pop
call
mov
aas
xchg
aas
dec
int
cmp
mov
cmpsb
push
jge
push
or
arpl
inc
int
lret
bound
jmp
incb
data16
js
jl
cs
movsl
push
adc
jnp
lods
outsb
and
xor
incb
scas
outsl
add
pop
adc
ljmp
pop
movsl
sub
lret
dec
cs
leave
insl
mov
rclb
into
lcall
pop
xor
and
xor
fcompl
stos
pop
sbb
cli
pop
add
icebp
xor
int
into
cli
jecxz
stos
push
and
incb
ss
cld
push
adc
pop
inc
movsl
ss
mov
mov
outsb
decb
dec
arpl
data16
cmp
cmp
int
inc
inc
pushf
popa
mov
incb
je
push
dec
and
xchg
adc
add
das
cmp
adc
add
push
int3
out
inc
iret
stc
or
push
out
jecxz
add
and
sub
sti
mov
mov
sub
decb
add
inc
add
pusha
in
sti
push
fwait
aad
xchg
xorl
inc
push
inc
popa
in
and
test
loopne
scas
inc
stos
adc
mov
stc
xchg
mov
mov
push
add
pop
movsbl
adc
lods
test
pop
int3
push
loopne
cmc
sar
pop
sarl
adc
adc
fidivl
ret
aas
pop
js
or
incb
push
les
add
xchg
ret
testb
adc
sub
push
pop
adc
or
incb
and
decb
stc
add
mov
jmp
mov
lods
pop
inc
and
jo
lds
call
add
and
add
jns
inc
rcrl
xor
lahf
fildl
mov
dec
test
add
call
loope
add
cmpsl
scas
mov
adc
add
fisttpll
mov
mov
mov
fwait
cmpsb
rolb
push
sbb
sbb
insb
decb
outsb
xchg
mov
add
add
int
or
cwtl
jmp
movsb
mov
mov
pop
shlb
in
add
fs
fisttpl
fcompl
add
cmc
mov
call
sbb
push
rdtsc
pusha
add
shrb
stc
dec
pop
fldenv
push
xchg
pop
iret
das
jecxz
sbb
jmp
decb
fcomi
add
sub
xchg
aam
add
sti
pop
rolb
sub
xor
mov
and
sub
jo
sbb
ja
leave
mov
pusha
add
mov
outsl
xchg
out
cltd
and
mov
mov
add
sub
incb
mov
jne
sub
stos
xchg
lcall
push
rcrb
shlb
loop
add
incb
ja
pop
movsl
iret
aam
call
fidivl
sub
ss
jns
ja
push
pop
xor
pop
lret
shlb
mov
std
mov
lea
xchg
jne
sbb
imul
jae
add
pop
in
xorb
lret
scas
aaa
mov
jmp
ret
push
mov
push
jnp
add
mov
jae
pusha
bound
mov
aad
jg
ljmp
incb
shl
xchg
push
incb
fmuls
lahf
aas
sub
loop
inc
addr16
fimuls
adc
sbb
decb
sbb
jnp
sar
cmp
imul
add
outsl
mov
cmpsl
loop
sahf
shll
test
mov
xor
bnd
mov
adc
pop
xlat
imul
repnz
mov
lret
xor
mov
add
inc
adc
mov
in
dec
inc
push
add
std
and
cmpsl
inc
add
ljmp
stc
sub
pop
icebp
add
and
cltd
and
add
fbld
jo
mov
lds
inc
fidivrl
or
push
cltd
xchg
stos
jge
sahf
loopne
mov
mov
js
std
lods
adc
jmp
xchg
sbb
add
adc
push
add
pop
enter
sbb
incb
arpl
iret
pop
xor
decb
dec
add
pop
stos
add
incb
add
loop
dec
or
sbb
std
divb
jne
mov
in
xchg
mov
and
incb
push
mov
jnp
fs
arpl
inc
pusha
incb
add
mov
xchg
addl
pop
xor
cmp
repz
jp
inc
jno
pop
mov
jecxz
cltd
pop
or
int3
push
daa
inc
add
jae
fnstcw
pusha
add
adc
rcrl
and
mov
pop
loopne
das
xchg
int
sub
je
mov
and
push
shlb
add
push
mov
mov
jns
push
cmp
push
cmc
notl
scas
pop
cld
cmc
dec
incb
mov
enter
incb
imul
jp
or
decb
fstpt
into
jbe
pop
icebp
lret
mov
fmuls
clc
mov
decb
mov
aas
in
in
and
movsb
addr16
icebp
inc
add
mov
mov
iret
sahf
popa
dec
sarl
mov
fs
decb
sbb
cmc
add
lea
mov
shlb
pop
mov
mov
jge
add
jmp
push
lcall
mov
add
pop
jmp
bnd
push
add
mov
dec
decb
jmp
adc
notb
add
pop
adc
repz
sbb
push
outsb
aad
loope
or
lahf
rcl
js
aaa
mov
xlat
subb
insl
loopne
in
iret
std
mov
add
xchg
dec
push
mov
decb
add
mov
pop
dec
repnz
rcrl
cwtl
mov
repz
pusha
add
and
mov
out
cmp
andb
sbb
jae
inc
add
or
cli
shll
or
stos
add
sub
incb
clc
or
out
xchg
or
gs
loope
and
fisttpll
incb
jl
add
cs
dec
inc
sti
pop
pop
das
pop
pop
and
add
sbb
add
or
decb
add
stos
dec
add
adc
aas
mov
outsb
call
inc
add
cmp
push
hlt
dec
add
mov
incb
xchg
lods
sbbb
add
fs
loop
ficoml
addr16
mov
insb
add
xchg
loope
movsb
into
movsl
push
cmp
jg
xor
xlat
repnz
jg
mov
pushf
andb
jne
cmp
add
test
dec
jecxz
xchg
cld
sar
dec
inc
and
test
sub
inc
dec
hlt
xor
stc
push
sbb
sub
cltd
mov
add
dec
and
es
dec
pop
push
shlb
icebp
aas
std
mov
sahf
cwtl
popf
test
insl
into
scas
inc
add
push
repz
dec
lods
add
stc
sbb
neg
sub
clc
gs
jp
dec
and
incb
or
fwait
push
or
incb
mov
incb
lahf
jl
jae
dec
add
or
pop
dec
jns
andl
cld
inc
add
xor
mov
add
sahf
aad
incb
xchg
nop
mov
cmp
jbe
mov
bsf
jno
cltd
xchg
fists
mov
mov
test
or
incb
add
add
push
push
jmp
push
test
out
jne
xchg
or
dec
jp
aam
add
fs
in
adc
call
mov
fwait
mov
int3
hlt
cwtl
aas
add
frstor
cltd
xor
sbb
pop
das
mov
pop
jge
pop
popf
jecxz
fsubr
dec
incb
add
test
add
mov
incb
push
inc
inc
loopne
and
cs
push
imul
fistpll
jmp
pop
out
pop
push
incb
popa
popa
mov
fcmove
enter
inc
popa
pop
movsl
mov
mov
in
lods
cmp
xchg
xor
leave
stos
std
mov
jmp
cmpl
out
add
dec
in
aas
xlat
std
lock
mov
adc
es
ficompl
xor
dec
push
mov
imul
int
iret
ljmp
add
adc
cwtl
iret
cmp
or
incb
out
push
push
push
test
add
repnz
push
jae
mov
xchg
ljmp
add
fwait
and
inc
or
sbb
add
rcrl
stos
or
xlat
push
cvtdq2ps
dec
xchg
rorl
dec
add
add
add
add
in
add
lea
incb
dec
jmp
scas
lcall
mov
sti
cli
out
xchg
mov
sub
mov
mov
add
test
test
ljmp
rol
pushf
jmp
jle
push
jg
clc
jmp
insl
adc
adc
data16
std
xor
ss
stc
pop
jmp
and
scas
sahf
adc
jnp
xor
test
dec
out
cmc
aas
cmp
mov
cmpsb
pop
pushf
dec
xor
incb
rorl
aad
call
jmp
sbb
jns
sbb
rol
out
cld
jle
std
or
decb
enter
add
add
movsb
and
incb
aad
jmp
fs
sbb
inc
out
popf
inc
or
decb
insb
add
stos
jle
xor
jge
add
testl
shlb
sti
int3
mov
repnz
pop
jno
add
push
add
xchg
cmpsb
ss
pop
dec
mov
sbbl
test
into
pushf
adc
dec
add
hlt
mov
arpl
pop
daa
idivl
cmp
sbb
pusha
add
and
sub
cli
cmc
cmc
sub
xchg
lahf
or
mov
add
jne
mov
data16
inc
jnp
adc
arpl
pop
push
mov
xor
cmp
xchg
add
pop
mov
cs
lcall
or
nop
cltd
aas
pop
scas
pop
mov
xchg
in
xchg
fs
in
loope
add
push
adc
xchg
in
ret
sti
add
fcmovbe
xchg
xor
in
push
or
divl
push
addr16
addr16
cmp
cwtl
repz
imul
push
dec
out
pop
imul
cld
cmp
test
mull
mulb
inc
or
cs
call
decl
xor
mov
pop
int3
in
popa
jg
in
int
jecxz
movsl
inc
add
test
xchg
ja
lcall
insb
add
out
icebp
mov
xor
arpl
add
fistl
je
and
push
cld
adc
sbb
loop
push
and
ss
dec
add
lea
push
mulb
add
push
lods
or
decb
icebp
mov
hlt
xor
pop
sub
push
stc
mov
lcall
fs
pop
pop
mov
sar
sbb
mov
loopne
fwait
pop
mov
sub
je
push
cmp
xor
fucom
mov
jge
sbb
aam
sti
push
adc
add
push
filds
add
mov
adc
jno
inc
mov
call
push
hlt
or
add
loopne
out
popa
xchg
jo
in
aam
push
dec
add
push
das
sarl
in
mov
jp
loopne
popa
cmp
ja
add
decb
dec
cmp
pop
aas
movsl
sub
mov
jb
les
mov
ficomps
enter
imul
jae
mov
dec
jmp
lods
mov
add
inc
mov
or
add
and
fwait
push
icebp
mov
or
mov
jp
mov
subb
mov
std
les
cld
ss
loope
incb
rep
aad
dec
xchg
mov
fisttpll
xchg
xchg
hlt
jb
add
dec
gs
ljmp
cli
inc
or
sbb
sub
push
mov
jae
outsb
add
loop
add
scas
addb
mov
iret
lods
jle
cmc
leave
pop
inc
cli
jno
ss
imul
add
jl
mov
add
push
xchg
subl
insl
dec
testb
imul
shl
and
ds
lahf
sar
sub
sbb
cs
jge
inc
sbb
popa
sbb
mov
leave
xchg
mov
ret
icebp
push
rcll
outsl
jl
cli
ds
mov
add
imul
lret
mov
add
decb
xchg
cmpl
and
mov
cmpsb
or
mov
mov
pop
mov
jmp
pop
xchg
mov
stos
pop
scas
inc
add
dec
incb
and
mov
iret
out
mov
test
cmp
loopne
sahf
push
fidivrl
sub
rcll
sahf
ret
cmp
pop
mov
call
ja
sarb
and
mov
sbb
jnp
adc
inc
inc
repnz
cmp
cmp
mov
mov
lds
add
ds
add
xorl
loopne
das
xlat
pop
lret
sbb
xchg
or
data16
sti
sub
pop
out
jnp
pop
inc
repz
pusha
add
movsb
jge
push
adc
add
data16
imul
jno
dec
aaa
pop
shlb
js
pop
jp
clc
jmp
sbb
test
pop
xchg
jne
jle
adcb
sbb
mov
cltd
cmpsl
mov
add
mov
decb
sbb
push
jb
jle
insb
fists
xchg
cltd
mov
testb
insl
icebp
outsb
mov
inc
in
pop
out
jbe
sbb
push
in
push
sub
incb
sub
loop
dec
dec
xor
addr16
roll
push
and
inc
into
pusha
add
ss
jecxz
loope
incb
popa
push
dec
mov
decb
stc
int
movsb
inc
lods
or
enter
mov
sbbb
adc
loop
out
ss
fdivs
ret
jne
fnstsw
stc
insl
dec
sub
movsl
pop
lods
icebp
arpl
enter
jge
jecxz
stc
and
leave
les
xor
mov
dec
jge
xor
or
adc
loope
scas
cltd
push
or
pop
loop
dec
pop
mov
pop
mov
lahf
push
push
mov
jbe
das
out
cmp
ljmp
jns
out
js
andl
ficoml
mov
hlt
dec
xchg
dec
incb
sbb
lahf
inc
inc
add
je
xchg
inc
shr
cwtl
add
mov
lret
cs
lahf
rclb
iret
les
insb
add
inc
xlat
cmp
movsl
xor
jecxz
cmp
mov
jne
pop
dec
sbb
xchg
mov
popf
imul
pop
cmp
gs
inc
add
cmp
test
sub
mov
cmc
in
in
inc
addr16
repnz
icebp
insl
in
repnz
push
pop
into
sbb
bound
dec
jl
cmp
dec
add
xchg
cmp
notb
jbe
imul
incb
dec
mov
xlat
mov
test
test
inc
jg
jl
push
push
mov
dec
mov
and
or
cmpsb
mov
inc
mov
into
test
add
adc
xchg
inc
add
sti
jp
add
and
cmpsl
jbe
jecxz
add
jo
and
mov
jae
pusha
std
cmp
xor
add
mov
cli
adc
jecxz
mov
sbb
repnz
out
pop
and
push
sub
dec
push
inc
add
push
add
gs
popa
out
push
cmp
lahf
in
add
add
rclb
data16
bnd
data16
mov
mov
sbb
and
mov
mov
ss
lahf
fdivs
loope
mov
sub
ficoml
test
mov
aam
outsb
mov
out
and
jmp
repnz
xchg
and
test
dec
xchg
sub
xchg
sti
or
jnp
add
xchg
sbb
jno
test
push
dec
push
idivl
jl
bound
popa
mov
mov
jo
pop
repnz
mov
ret
sbb
add
adc
jae
jmp
fcmovnbe
icebp
xor
or
fs
sub
incb
add
inc
add
jno
mov
je
clc
and
incb
shrb
incb
cld
jle
add
inc
add
and
inc
xchg
jp
mov
test
in
xor
cld
and
pusha
add
cmc
sub
push
movsb
jnp
ret
xchg
movsl
addr16
dec
lods
sahf
sahf
gs
xchg
and
adc
add
dec
decb
add
daa
fisttpll
mov
cmp
fs
shll
inc
add
mov
je
xchg
pop
mov
mov
mov
sub
repz
outsl
stc
jnp
popf
pop
dec
add
xchg
clc
rcll
mov
push
adc
and
rcll
mov
outsl
pop
mov
push
es
cmpsl
in
cwtl
xchg
test
mov
add
cli
std
sub
sub
cld
jmp
in
mov
dec
in
mov
jbe
sbb
mov
pop
sahf
cwtl
je
mov
xor
les
adc
jmp
mov
jp
ss
jl
add
cmp
mov
fnstenv
push
add
lea
decb
mov
dec
testb
add
mov
jg
mov
cmp
rolb
mov
mov
loope
jbe
lock
cli
mov
sbb
leave
push
add
jg
lret
cmp
imul
mov
xchg
add
stos
outsl
in
mov
or
out
add
sub
xchg
jnp
add
push
sbb
mov
je
testb
adc
mov
out
out
inc
lcall
inc
add
fdivrs
and
push
or
jge
add
mov
call
incb
test
icebp
shll
sbb
lea
sbb
and
jae
fbstp
out
and
rcr
test
pop
mov
xor
push
inc
cmc
scas
jb
mov
mov
das
sbb
push
pop
fwait
inc
mov
pushf
jmp
and
cmc
push
dec
push
negl
imul
pop
in
popa
dec
fisttpll
xchg
mov
mov
les
dec
mov
js
cmp
call
decb
pop
sub
incb
jg
setno
pop
test
push
mov
mov
es
mov
mov
movsb
mov
repnz
jae
bound
clc
and
add
lds
sbb
push
ret
je
xchg
sti
frstor
nop
mov
addr16
std
inc
and
jecxz
in
inc
fistpl
cmpsb
inc
adc
mov
stos
pusha
add
sar
shrl
pop
or
jecxz
add
lret
xor
enter
add
inc
add
pop
inc
outsb
adc
lods
mov
push
dec
leave
stos
cmpsb
and
jnp
arpl
jl
jb
fists
lods
cmp
jns
loop
adc
insl
and
incb
mov
mov
insb
jne
jl
pop
lock
jno
pop
out
dec
stc
inc
out
push
or
add
int3
adc
adc
and
xor
repz
jae
fcompl
decb
in
int3
mov
cmp
add
jae
pop
fsts
lock
incb
sub
aam
xchg
mov
push
xchg
dec
jmp
in
inc
add
daa
outsl
push
popa
stc
xor
js
push
stos
mov
data16
sbbl
inc
mov
or
jb
cmp
fisubs
push
incl
add
mov
lret
mov
mov
mov
mov
sbb
xor
mov
incb
adc
mov
lret
leave
xchg
xchg
aam
repnz
pop
adc
in
pop
push
test
xchg
push
dec
xor
in
xchg
mov
mov
enter
jge
pop
mov
loope
mov
clc
data16
jle
dec
divb
cmp
mov
sub
jecxz
cs
push
sti
ja
jb
mov
loope
dec
test
cli
outsl
inc
sub
outsl
clc
push
shr
xchg
add
xchg
inc
fsubl
es
adc
aad
ljmp
mov
mov
js
or
dec
add
and
xor
mov
fisttpl
call
pop
mov
outsb
incb
shll
sub
adc
es
lock
and
cmp
push
cld
pop
outsl
cmp
adc
pushf
je
ret
imul
popa
mov
out
cwtl
add
xchg
cmp
scas
or
push
inc
add
call
shll
out
add
fcom
add
cli
and
cld
out
pushf
jne
adc
add
push
fcomp
push
das
xor
cmp
leave
in
jo
out
and
decb
jnp
std
shrb
jecxz
mov
sbb
cmp
lock
test
mov
adc
mov
push
scas
aam
inc
cmpsl
mov
cs
jecxz
mov
stos
mov
incb
sysenter
adc
jl,pt
dec
add
decb
test
pop
sarb
iret
lret
add
jno
adc
punpckldq
out
mov
cmp
mov
fisubrl
rorl
sub
lea
push
repnz
adc
xor
js
stos
call
add
jge
and
popa
in
imul
std
lods
jecxz
push
aas
int
insl
xchg
daa
and
xchg
mov
push
cmpsb
les
mov
sub
stos
test
test
xchg
push
adc
je
push
loop
jp
pop
cmp
xchg
out
add
jmp
mov
mov
inc
imul
dec
add
dec
rol
aad
or
pop
mov
notb
add
push
fwait
jl
xchg
mov
cmc
fbld
incb
adc
in
or
sbb
rorl
int
add
adc
inc
lret
add
fwait
aaa
adcb
sbb
add
lret
mov
out
mov
fs
xchg
xchg
cmp
mov
data16
pushf
imul
movsl
lds
pop
or
or
xchg
or
jecxz
add
jmp
addb
fiaddl
add
jne
lds
sbb
decb
add
or
enter
mov
and
out
fiadds
cmp
push
inc
mov
scas
incl
int3
or
nop
das
lcall
inc
add
dec
dec
mov
add
inc
dec
dec
sub
das
lds
repnz
dec
lea
push
mov
repnz
rcrb
add
out
sar
jmp
ja
jnp
and
in
in
cld
out
pop
pop
fildll
add
negb
fcomp
aaa
push
sub
sub
add
mov
lods
sbb
stos
inc
add
xchg
sbb
add
call
add
int
add
jl
push
ret
mov
jb
add
pushf
sub
pop
and
sub
cltd
mov
imul
add
cmpsb
mov
addb
mov
test
inc
mov
adc
xchg
jge
mov
lcall
xor
dec
mov
mov
cld
adc
inc
out
push
push
cld
jbe
out
iret
and
dec
adc
fs
cmp
cmc
dec
dec
add
test
popf
xchg
loopne
test
mov
notl
outsl
test
fwait
jno
or
cmp
je
sub
incb
mov
data16
sbb
mov
repz
pop
loop
or
imul
dec
add
in
mov
or
inc
dec
add
nop
mov
push
adc
cltd
inc
mov
les
dec
xchg
lcall
incb
test
xlat
xchg
and
ds
add
mov
movsl
les
xchg
sub
das
or
insl
icebp
xchg
incb
shll
add
adc
enter
mov
daa
mov
mov
lret
mov
fcom
mov
je
pop
xchg
fs
repnz
movsb
pusha
add
pop
arpl
es
sub
incb
movsl
cli
lahf
pop
negl
or
cmpsl
add
add
mov
sbb
inc
stos
into
rcll
cmpsl
sub
inc
push
xor
jo
mov
inc
rcrb
mov
lds
pop
pusha
add
push
jp
sbb
incb
shl
insb
mov
es
jg
adc
mov
jno
add
cmpsl
fstpt
insl
xchg
jns
popa
pop
test
pop
cmpsb
xlat
mov
stos
ss
outsl
out
mov
repnz
loopne
xchg
loopne
incl
sub
scas
ja
jae
jge
add
xchg
clc
push
dec
add
or
mov
mov
xchg
xchg
and
mov
rcrl
lret
nop
add
scas
push
pop
mov
cmp
adcb
mov
incl
add
xchg
cmc
lock
incb
add
and
rcrb
jp
ljmp
std
inc
dec
add
repnz
incb
incb
ss
ja
cmpsb
adc
and
data16
push
stc
sub
mov
loope
out
ljmp
ret
data16
mov
add
adc
int
push
add
orb
mov
loope
loopne
jo
pop
jge
les
into
loop
pop
mov
pop
je
lods
mov
mov
incb
outsl
jle
push
subl
sbb
push
add
add
incb
mov
addr16
fsubl
incb
fcoml
scas
pop
sbb
test
mov
sbb
rorb
dec
add
stos
movsb
push
xor
jp
and
sbb
mov
xchg
in
stos
pop
mov
cmpsb
jb
xchg
sldt
sahf
or
push
cwtl
nop
test
loop
int
adc
xchg
rcr
add
mov
packuswb
mov
inc
and
and
decb
xchg
lods
or
inc
aam
cmp
fstpl
fld
scas
stos
icebp
dec
aad
cmpsl
mov
xor
cmpsb
test
add
cs
jecxz
add
addr16
and
mov
xorps
lds
lahf
aad
inc
or
decb
mov
xchg
pop
inc
int
mov
das
mov
rolb
add
cmpsb
sti
cwtl
adcl
int
and
pop
outsb
add
pop
xchg
push
push
pop
inc
add
add
lea
dec
popa
jns
and
and
decb
scas
adc
sub
xchg
orb
add
jno
hlt
sub
in
test
push
in
data16
pusha
fs
loop
dec
insl
xor
jle
fildll
cmp
xor
xlat
jbe
xchg
lods
ret
xor
dec
sub
adc
cmc
xor
add
incb
mov
push
add
cmp
inc
push
push
adc
cmp
and
jp
adc
lds
push
daa
and
and
xchg
dec
mov
cmp
or
incb
js
orl
and
mov
cmp
pop
and
shrl
mov
push
sti
xor
sub
fs
mov
inc
add
xchg
sarl
xchg
jg
fiaddl
fisttps
in
repz
sub
xor
dec
js
and
scas
test
lcall
sarl
jns
push
push
test
fisubs
push
sti
cli
mov
jle
xchg
scas
imul
add
cltd
mov
add
cmpsb
shrb
mov
add
or
test
mov
sub
inc
jae
imul
sti
gs
xchg
and
pop
sbb
insb
in
adc
es
or
jp
add
mov
push
xchg
sahf
or
jmp
push
adc
push
sahf
out
aam
insb
decb
loop
adc
aad
test
sub
cs
xchg
hlt
jno
cli
sti
out
push
nop
jno
fildll
sub
mov
dec
adc
sbb
lret
rorb
fnsave
aam
pop
das
jmp
push
lock
repnz
push
and
xlat
ss
ret
stos
push
leave
pop
ss
sbb
xor
ret
icebp
xchg
push
adc
cmp
jp
fwait
xor
push
pop
ret
subl
test
mov
lahf
pop
push
add
mov
add
jbe
incb
xor
fucomip
sbb
dec
loop
add
mov
je
push
adc
pop
shlb
pop
test
pop
pop
push
add
inc
pop
imul
aam
call
adc
dec
shrb
rcll
scas
adc
mov
cmp
pmuludq
push
lret
adc
mov
hlt
adc
jge
fiaddl
mov
cmpsb
shlb
pop
mov
fdivs
add
outsl
cmp
sub
jp
ss
inc
test
decb
out
fwait
sbb
cld
jbe
inc
jl
mov
cltd
stc
mov
push
into
xchg
stos
lcall
add
fidivrl
jle
daa
jbe
aas
mov
mov
xor
and
jmp
aas
cwtl
pop
pop
sbb
and
cmp
ret
push
xchg
inc
incb
dec
xlat
call
sbb
test
and
xchg
cmp
je
xchg
lahf
mov
and
push
xchg
sub
inc
popf
push
adc
daa
jl
ja
adc
in
dec
setp
xor
or
incb
push
pop
pop
cwtl
mov
pushf
xchg
inc
xor
lods
insb
decb
jmp
js
insb
mov
loopne
loop
push
mov
xor
std
adc
pop
adc
cmova
mov
cltd
cmp
decb
lret
or
add
mov
aaa
mov
xchg
jl
inc
add
mov
arpl
inc
jle
add
sbb
pop
mov
std
data16
jae
adc
addb
movb
pop
fwait
and
mov
fwait
pop
mov
fistl
sub
dec
and
jbe
aas
jne
adc
push
push
aam
adc
fnstcw
ret
add
mov
pushf
int
out
xor
adc
inc
xchg
cmp
pop
leave
ja
inc
sub
out
adc
int3
add
push
adc
cmp
pop
xor
iret
xchg
adc
daa
fstpl
push
leave
fdivs
jb
jns
and
sub
push
in
push
push
cltd
or
xor
fscale
mov
xor
add
lods
dec
sbb
cmp
pop
loope
sti
fwait
mov
mov
lahf
mov
dec
gs
cld
xchg
jae
add
int3
mov
add
mov
iret
sub
mov
lret
les
mov
push
popf
xchg
movsb
setg
adc
mov
aam
add
jns
sub
incb
cmpsl
xor
es
cmp
pop
popf
sbb
aaa
test
call
jb
and
xchg
xchg
mov
xchg
jns
cmp
inc
sbb
jg
pop
adc
and
push
add
or
dec
mov
add
repz
lret
mov
sub
stos
cmp
jge
fisttpll
and
mov
xor
add
shll
call
cmp
call
sar
xchg
xor
inc
scas
loopne
add
mov
or
das
cmp
movsb
test
rcll
out
in
cmp
repz
negl
dec
jmp
aas
xlat
dec
or
in
sbb
push
xor
rolb
sbb
add
and
das
cmc
in
push
subb
ss
jae
add
js
add
pop
negb
inc
data16
cmp
jo
loop
bound
rolb
dec
fstl
scas
js
pop
ficompl
and
fs
lcall
add
sub
or
cmp
xchg
loope
in
push
daa
repnz
jo
inc
add
addr16
subb
or
push
jp
cli
xorl
incb
pusha
inc
aam
push
jecxz
mov
jp
xor
sub
sarl
hlt
repz
sahf
adc
enter
ds
ja
mov
into
fists
push
pop
sahf
xchg
daa
shl
orl
push
outsl
stos
jbe
loopne
ja
fnsave
pop
mov
sbb
mov
les
decb
mov
adc
xor
sbb
adc
jo
fs
repnz
xorb
push
mulb
in
pop
pop
ljmp
or
fdiv
cmc
in
mov
mov
int
add
nop
aam
fs
call
stos
dec
loopne
and
decb
add
mov
fstl
out
sub
mov
lock
rcrb
std
adc
popa
mov
incb
cmp
or
cli
push
shl
mov
add
push
fs
gs
mov
cli
add
mov
repnz
jno
ret
imul
xchg
sahf
out
mov
mov
inc
arpl
int
mov
dec
in
in
mov
jns
int
inc
dec
cld
xchg
shrb
ret
dec
into
jg
cltd
sub
loopew
cld
ret
dec
add
add
daa
ret
cmp
and
dec
out
ret
pop
xor
and
rcr
mov
jne
adc
sub
pop
add
iret
inc
adc
les
and
push
stos
popa
les
ret
rcrb
scas
xor
sub
decb
incb
inc
sarl
push
shr
xor
std
push
pop
mov
mov
pop
push
add
sbb
es
sti
or
incb
insl
outsl
data16
loop
ds
jns
lret
das
push
decb
out
dec
hlt
adc
int3
jp
ja
push
xlat
insl
insl
mov
rol
insb
pop
sbb
push
aam
sbb
js
add
jb
add
cmp
sbb
inc
push
mov
lea
in
sub
out
repz
test
movsl
sbb
imul
pop
pop
jl
movsb
add
in
xchg
add
pop
stos
fwait
imul
fs
jmp
and
in
outsl
fisubrl
or
es
fwait
je
pop
mov
push
inc
adc
aam
cmp
fnstenv
mov
out
jecxz
xchg
stc
js
mov
stos
scas
push
incb
decb
js
pop
loop
add
movsl
sub
ds
pop
push
inc
jno
popa
scas
rcll
fs
cmpsl
sbb
add
inc
xchg
sub
sbb
incb
rclb
or
mov
pop
daa
and
shrb
outsl
mov
loope
std
sbb
add
mov
mov
push
into
js
xor
out
jg
sbb
mov
add
and
adc
ljmp
pop
adc
test
mov
add
ss
dec
xor
incb
insl
sub
lock
or
push
movsb
int3
flds
push
or
sbb
mov
mov
or
ret
inc
add
xor
mov
cltd
xchg
dec
push
arpl
sub
xchg
add
xor
pop
cld
cmpsl
pop
dec
decb
scas
movsb
and
mov
data16
jne
cmp
push
sbb
incb
push
pushf
nop
xor
inc
out
in
add
adc
xor
mov
shrb
adc
dec
hlt
aam
pop
mov
jnp
incb
loop
cmp
fsubs
data16
dec
insl
push
enter
sub
and
movsb
bound
nop
jecxz
std
test
pop
pop
inc
add
lret
hlt
fwait
emms
dec
mov
cmc
test
out
adc
stos
imul
mov
add
push
ftst
rcrb
add
sub
mov
mov
decb
add
dec
pop
push
sub
shlb
orl
fucomi
stos
fisubrl
nop
cld
pushf
shl
dec
incb
cmp
or
pop
xchg
int3
std
sub
out
jne
fstpl
mov
test
push
incb
fs
mov
andl
int3
push
xchg
jl
imulb
add
lds
add
das
lret
and
roll
mov
sbb
adc
loopne
addr16
xor
mov
aad
ja
ret
mov
cmp
pop
dec
mov
lcall
mov
push
push
int
jo
mov
add
sbb
aaa
mov
mov
jo
push
dec
std
jne
xor
mov
mov
cmpsb
ja
sbb
jbe
or
dec
aaa
aad
and
cmp
mov
incb
sbb
push
je
adc
loope
scas
movsl
es
stc
into
into
popf
pop
mov
xor
scas
jbe
dec
add
adc
inc
pop
mov
xchg
jge
adc
addl
cwtl
xlat
mov
jmp
cli
lods
hlt
stos
test
sub
cmp
mov
es
repnz
lret
sub
mov
pop
cs
mov
hlt
mov
xor
xchg
pop
sti
jae
jbe
add
decb
in
cmp
aad
mov
add
mov
test
stc
jge
add
sar
pop
movsb
add
lods
lcall
decb
in
mov
cmpsb
pop
adc
pop
xor
jp
insl
aad
dec
stos
orb
mov
scas
das
push
add
mov
add
stos
cld
fwait
jnp
outsb
add
sub
jecxz
call
or
mov
jecxz
xor
decb
push
push
jno
push
idivl
xor
pop
std
and
fyl2x
lea
push
roll
les
pop
sub
adc
sub
add
adc
sub
movsb
xchg
jne
inc
push
adc
adc
fwait
jae
sbb
out
jo
mov
shl
push
add
fimull
cmp
iret
imul
jle
out
mov
mov
es
lods
fld
test
jmp
push
icebp
jnp
jno
add
cmpsl
cmp
and
out
dec
decb
add
aas
mov
insl
sub
cld
fsubrp
jbe
stc
into
jns
andl
and
incb
adc
aaa
std
jae
add
sbb
cwtl
dec
jbe
sahf
test
mov
mov
mov
jno
push
sbb
movsb
mov
pop
jg
xchg
insb
fs
pop
std
cmpsb
jg
mov
pop
jecxz
js
xchg
mov
mov
mov
sub
add
xor
cs
add
xchg
mov
addr16
lret
jnp
or
sbb
stos
adc
arpl
dec
or
pop
cmp
mov
or
lock
out
hlt
inc
inc
add
and
decb
inc
sarb
out
cs
xchg
nop
jbe
jae
shl
mov
adc
fwait
adc
stos
cmp
outsb
add
cs
pop
int3
push
sub
and
mov
push
dec
inc
decb
add
sub
incb
aad
push
cmp
sub
cmpsb
add
repnz
adc
jmp
pop
into
mov
icebp
push
pop
pusha
add
cs
mov
cmp
incb
xor
inc
mov
sub
mov
aam
ds
hlt
enter
nop
xor
adc
out
inc
add
and
xlat
adc
jmp
adc
add
or
pop
push
stc
push
xchg
mov
sbb
sub
pop
jge
sbb
sbb
in
sbb
test
test
pop
fiaddl
add
cld
and
push
ljmp
dec
mov
imul
cmpsl
mov
or
jmp
outsb
add
or
and
adc
xchg
pop
jnp
push
into
adc
jmp
jl
call
insb
dec
dec
add
or
mov
mov
mov
fs
das
and
decb
sub
pop
push
mov
jle
pusha
xor
jns
sbb
orb
test
decb
push
decb
rolb
xlat
add
jge
arpl
add
xchg
in
or
decb
mov
pop
or
test
pop
call
pop
and
loop
fsub
pop
mov
pop
lret
mov
or
jae
adcb
rcrb
mov
outsb
add
xchg
icebp
and
fmull
pop
xor
lahf
lock
or
aas
sbb
xor
incb
mov
cmp
addb
pop
jmp
clc
mov
xchg
repnz
enter
or
push
inc
add
jns
fadds
add
in
movsb
mov
jl
mov
fcompp
lods
push
inc
inc
jle
data16
xlat
rcl
add
mov
sti
mov
in
incb
insl
xchg
pop
int3
sarb
imul
or
add
dec
add
testb
lret
cmp
add
jnp
sbb
pushf
push
push
setns
dec
add
jmp
jp
cmc
dec
add
sbb
or
sbb
jne
adc
cld
aaa
cmc
notl
imul
popa
pop
jl
cmpsl
addr16
xchg
push
xor
lods
arpl
stos
sub
sbb
add
pop
and
fmull
js
add
lret
mov
cmp
cmp
lcall
je
aas
add
incb
lods
cmpsl
sub
out
cmp
push
xor
ret
popl
jbe
ret
ss
dec
push
and
pop
and
sbb
dec
adc
inc
push
xchg
jnp
pop
roll
incb
add
and
scas
loop
adc
shlb
adc
sub
daa
stc
mov
flds
cmc
clc
dec
add
sub
imul
xchg
cs
das
sahf
pop
jae
jb
aad
call
and
inc
or
jp
int3
mov
testb
lea
mov
mov
cmp
fdiv
loop
add
decb
cltd
aas
call
inc
cwtl
js
shll
icebp
jmp
dec
mov
out
jecxz
push
mov
int
mov
adcb
inc
lret
xchg
and
les
lahf
shlb
jae
fmul
xchg
adc
sahf
cmp
jb
sbb
lret
das
mov
mov
in
or
adc
movsl
xchg
jb
jg
dec
add
jne
add
out
aas
and
inc
daa
sbb
mov
add
dec
mov
test
test
lods
adc
add
push
decb
scas
ljmp
fidivl
jne
mov
mov
adc
adc
jp
push
push
mov
rclb
adc
ud2
nop
nop
adc
inc
pop
fisttpl
popf
les
incb
jne
mov
push
xchg
stos
popf
into
jae
add
decb
decb
fnstenv
mov
inc
mov
sbb
add
add
add
pop
dec
sbb
pusha
add
pop
leave
xchg
je
add
mov
cmp
out
mov
divl
cwtl
mov
pop
in
xchg
push
xorb
mov
push
mov
push
orl
or
movsl
pop
push
push
add
and
sub
aas
loope
jle
ss
push
pop
insb
add
sub
cmp
add
inc
mov
pop
incl
add
jp
data16
mov
push
loop
arpl
ljmp
popf
and
stos
and
xchg
mov
test
fdivrl
out
loope
push
add
jno
out
sarl
mov
movsl
mull
mov
add
ljmp
arpl
pop
and
mov
add
sbb
nop
inc
add
sbb
insl
data16
sub
incb
mov
adc
inc
pop
sbb
jbe
xor
dec
jo
in
stos
daa
out
and
mov
pop
mov
call
push
hlt
mov
daa
xchg
out
adc
jge
add
mov
cmp
add
out
decl
outsb
incb
add
and
jecxz
ja
adc
cmpsl
xor
add
insb
sbb
add
rorb
fwait
bound
push
push
push
cmpsl
vpsrld
jle
add
xchg
mov
xor
cmp
pop
adc
xor
or
push
add
and
cmp
stos
sub
adc
push
decb
gs
jmp
jecxz
adc
xor
das
repz
or
rorl
and
mov
and
jg
out
or
mov
enter
daa
xchg
aaa
or
xor
or
cmp
clc
pop
jmp
jecxz
mov
adc
cmp
dec
add
and
lahf
inc
pop
jl
not
mov
jg
dec
int3
sub
cwtl
sub
lock
icebp
ret
outsl
cmp
cmp
jge
scas
xlat
es
addl
int3
les
xchg
sar
fucomp
inc
push
push
push
add
in
push
pop
mov
mov
in
in
int3
loope
add
inc
jae
jmp
fsubr
cmp
insb
clc
or
pushf
and
leave
adc
notb
cmp
inc
outsb
add
add
enter
sbb
iret
pop
dec
inc
repz
stos
sbb
cmp
mov
pop
sub
decb
mov
in
mov
cmc
das
xchg
jg
je
dec
testb
mov
popa
cmp
jmp
add
pop
scas
pop
insb
decb
ss
inc
add
mov
push
add
mov
les
sub
mov
fsts
stos
dec
jo
xlat
shlb
adc
mov
jge
negb
dec
fnstsw
inc
lret
cmp
dec
bnd
dec
inc
add
cltd
je
in
inc
add
incb
jae
ljmp
and
mov
xchg
nop
cs
jle
xorb
xchg
cltd
scas
enter
das
jp
incb
mov
jp
mov
pop
ja
sub
lahf
orl
js
ret
and
or
adc
movsb
bound
nop
insl
pushf
imul
add
add
insl
mov
pop
xchg
test
notb
into
sti
mov
sbb
lahf
lahf
popa
push
xchg
sbb
enter
mov
hlt
dec
lea
add
decb
popa
xchg
fs
mov
mov
ret
fcompl
push
inc
ljmp
mov
cli
jecxz
xchg
push
add
xchg
decb
lods
repnz
push
out
test
sarb
mov
adcb
arpl
fildl
pop
inc
aam
shl
xor
add
xor
lahf
or
xor
imul
pop
cmpl
add
xor
xchg
shl
ja
fistl
sarl
cs
or
mov
pop
add
decb
push
jbe
pop
cli
xchg
push
jo
les
add
xor
hlt
pushf
mov
xchg
aad
mov
lds
punpckhdq
pop
mov
jno
mov
loop
add
pop
jg
sbb
sti
pusha
jns
data16
es
sbb
push
adc
jmp
xchg
int
xchg
adc
cmp
adc
mov
shlb
and
decb
rcrl
mov
xor
push
mov
loope
ds
std
xchg
push
jl
add
push
rolb
pop
cmpsl
aaa
xchg
aas
popf
xor
pop
jge
dec
xchg
aam
dec
adc
cmp
aas
insb
add
incb
add
cli
cli
mov
lcall
add
mov
inc
jbe
push
cmp
pop
out
insl
out
sbb
decb
adc
dec
decb
inc
fucom
rclb
jns
pushf
mov
stos
mov
pop
cmp
add
les
dec
fcomip
sbb
ljmp
push
mov
cmp
scas
fildl
add
dec
adc
add
and
mov
mov
sti
and
mov
cld
mov
mov
add
push
cmp
data16
cs
incb
inc
add
jecxz
jg
dec
add
or
xchg
insb
xchg
jbe
arpl
scas
xor
add
out
into
add
lcall
test
sbb
incb
insl
insl
adc
in
ss
mov
add
filds
cltd
xor
xchg
jb
add
shlb
testl
cmp
jae
push
add
sub
lock
add
outsl
jno
dec
add
xchg
iret
push
mov
gs
cwtl
cmpsb
popf
cmpl
loop
lahf
fadds
add
rclb
sbb
push
incb
mov
pop
mov
adc
push
or
cltd
in
and
inc
movsb
fisubl
in
pop
and
incb
inc
data16
decb
call
xchg
adcl
sub
insl
dec
imul
xor
leave
lds
inc
out
fmuls
ja
mov
decl
push
jecxz
xchg
aas
mov
sub
sbb
icebp
rorl
movsb
outsl
jo
incb
add
movsb
loop
stos
ficoms
data16
mov
out
fnstsw
inc
dec
add
mov
inc
js
orl
ss
and
mov
dec
test
add
or
dec
add
loop
loope
shlb
loopne
nop
mov
popa
fcom
jno
lret
or
mov
dec
iret
add
int
push
push
pop
push
dec
pop
aad
jne
mov
pushl
adc
rcrl
pop
inc
cmp
out
incb
pop
mov
pop
ss
insb
add
mov
stos
rol
stc
push
adc
or
pop
shrb
outsl
roll
decb
cmp
jge
pop
ja
sub
stos
xor
int
lcall
cli
bsr
decb
sti
sub
int
mov
imul
jae
in
fimuls
enter
imul
add
rol
pop
lret
int3
push
stc
scas
inc
adc
sbb
test
mov
add
fistl
insb
add
outsb
dec
loope
aaa
cli
cmp
adc
cli
in
jne
adc
mov
mov
call
add
jne
add
mov
repz
pop
lahf
sarb
sbb
aam
lea
push
test
pop
pop
mov
jge
or
notb
mov
dec
addr16
push
loop
mov
fucom
int3
repnz
mov
and
and
jecxz
lahf
cs
mov
imul
insl
cmpb
add
cmp
stos
cltd
movsb
mov
add
ja
inc
shll
jg
push
fst
into
ret
aaa
fnsave
add
jbe
add
xlat
jmp
mov
mov
int3
push
mov
xchg
pusha
inc
test
cmp
add
sub
div
sub
ljmp
ffree
pushf
xor
lock
stc
insb
add
add
decb
adc
inc
jmp
test
outsl
sti
mov
fsubrl
mov
add
mov
xchg
mov
xchg
mull
decl
mov
inc
and
jo
add
andb
push
xchg
movsl
lds
mov
enter
pop
addl
xchg
inc
cmpsb
repz
fildl
add
inc
add
sub
sbb
call
mov
shlb
movswl
int3
lret
adc
add
gs
push
stos
es
mov
mov
imulb
into
enter
bnd
stc
cmp
pop
shll
fnstsw
mov
mov
dec
inc
push
and
jbe
add
adc
iret
push
pop
mov
jg
mov
and
aad
cmp
add
mov
sub
dec
jo
add
gs
add
inc
push
pop
repnz
call
add
es
decb
decb
arpl
pop
jmp
cmpsl
imul
pop
xlat
lcall
repz
outsl
outsl
sub
ljmp
sbb
pop
mov
pop
push
mov
stos
cltd
inc
jo
seta
pusha
add
jecxz
test
mov
out
sbb
or
push
mov
mov
insb
add
shlb
or
std
add
push
fwait
mov
pop
sbb
mov
inc
mov
xor
push
daa
push
les
add
and
enter
test
mov
std
addr16
mov
sub
xor
loope
xor
cmp
dec
add
in
xchg
xor
xor
dec
decb
lods
push
add
fsub
pop
test
lock
mov
mov
xor
push
addr16
je
xchg
in
lds
sub
cmpsl
ds
int3
es
es
incb
aam
lret
pop
mov
xchg
jle
mov
cs
push
lds
push
jp
mov
adc
cld
aaa
andb
jo
mov
decb
mov
jns
add
cltd
cmpsb
lcall
movsl
stos
sti
sbb
in
adc
mov
data16
adc
jmp
mov
add
sub
imul
adc
out
xor
aad
popf
cmpsl
clc
test
shlb
push
aam
inc
rcrb
popa
hlt
lods
push
push
mov
push
dec
shll
les
cmp
mov
sbb
lahf
ja
std
sarb
add
incb
std
fistps
in
jmp
add
or
ret
xor
cmc
ss
jb
add
lds
xchg
loop
add
enter
add
push
cli
sbb
mov
pop
js
int
dec
testb
sub
fnsave
rol
jg
jo
cmp
push
iret
xchg
movsb
es
inc
add
aaa
fisttpl
decb
inc
icebp
mov
jo
xchg
leave
test
imul
decb
decb
push
jnp
add
rorb
add
iret
int3
inc
fidivs
gs
popf
icebp
add
incb
decb
jo
std
dec
cmp
mov
mov
xchg
push
mov
jg
add
xchg
vsubpd
jecxz
inc
cmp
mov
add
mov
test
jge
fdivs
fwait
daa
inc
mov
loop
add
xchg
xchg
push
adc
xchg
je
pusha
add
daa
fistl
lds
addr16
aas
sub
dec
and
frstor
xorl
pop
inc
adc
ja
movsl
cmp
inc
xchg
push
mov
xor
mov
setg
out
push
add
rcr
jo
or
addr16
popa
push
data16
lock
cmp
out
lahf
push
pop
pop
adc
lret
pop
jmp
add
pop
adc
push
jmp
cli
les
loopne
dec
push
ss
imul
pop
pop
push
xlat
dec
jmp
sub
popa
repz
push
adc
int3
and
test
sbb
dec
add
sbb
decb
cmp
inc
add
inc
cmpsb
cmp
inc
shlb
decb
push
aaa
pop
sahf
aaa
shlb
adc
gs
xor
stos
ja
lahf
push
mov
outsb
mov
inc
insl
mov
add
shlb
pop
mov
mov
std
and
adc
mov
xor
and
xor
or
loopne
adcl
sbb
lods
mov
jmp
xlat
orb
pop
pop
aaa
fs
cld
add
and
incb
cwtl
mov
test
push
push
fldcw
cmp
push
lea
mov
add
data16
adc
push
add
loope
loopne
and
test
insl
add
dec
fisubs
pop
sub
sahf
sub
push
into
or
sub
adc
repz
scas
cmpsl
popa
inc
push
and
sti
add
pop
fldpi
add
cld
pop
push
cmpsl
cmp
rcrl
inc
data16
loop
or
or
daa
stos
and
sbb
inc
add
push
xor
and
aas
push
add
stos
xchg
nop
fstl
popa
mov
pop
push
jno
fnstsw
dec
add
ss
shll
sub
pop
jle
lcall
xchg
aaa
xor
cmp
mov
test
dec
cmp
call
mov
insl
push
sub
jp
sbb
cs
lret
push
rolb
lock
add
mov
mov
adc
xchg
add
xlat
out
or
and
mov
lret
add
popf
test
cmp
adc
ljmp
gs
mov
pop
out
push
stos
push
inc
add
ss
inc
push
push
mov
pop
jl
inc
rorl
out
xchg
gs
out
xchg
cmp
into
lock
movsb
mov
pop
aas
movsl
mov
sub
lret
arpl
jbe
imulb
mov
adc
in
ret
jno
add
mov
inc
adc
add
adc
add
push
out
adc
decb
frstor
in
aad
aam
push
add
mov
inc
mov
decb
decb
std
inc
data16
divl
sahf
mov
movsb
dec
adc
mov
inc
sahf
call
xor
decb
inc
adc
incb
data16
decb
insb
add
push
push
jecxz
add
cmp
or
add
mov
incb
add
shll
cmp
insb
add
and
and
add
clc
jg
or
xchg
add
test
or
rorb
shrb
decb
sub
lcall
decb
add
lods
lcall
mov
push
sbb
adc
cltd
mov
inc
popa
sub
stc
mov
lock
loopne
nop
push
loopne
int
pop
add
incb
aas
xchg
cli
mov
fidivl
into
jb
pop
xlat
pushf
inc
fdivs
push
loope
sahf
out
scas
sbb
aam
add
xchg
sbb
fadds
decb
and
cmc
and
bnd
mov
test
inc
imull
xchg
mov
or
sbb
pushf
dec
xchg
xor
xchg
sub
jae
add
sub
lods
xlat
sahf
cmpsl
lods
mov
ljmp
dec
add
dec
adc
popa
out
popa
out
sti
cmp
cmc
les
rorl
aaa
into
sub
aaa
hlt
sbb
repz
add
xor
or
inc
jge
insb
mov
xchg
add
and
push
and
loope
ljmp
or
or
fwait
and
mov
out
lret
addr16
and
push
mov
addr16
insl
popf
fisubs
mov
cmc
xchg
stos
es
cld
ds
gs
push
sub
test
mov
aaa
sbb
rorb
add
popa
fistpll
testl
xchg
push
repnz
add
sbb
adc
pop
push
iret
es
loope
outsl
inc
scas
jns
or
cmp
lods
sub
jl
das
and
jno
subb
mov
xchg
outsb
shlb
push
repnz
gs
push
fwait
xchg
pop
fnstcw
call
push
lret
cld
sbbl
incb
and
inc
outsl
es
jb
xor
outsl
mov
in
mov
leave
cli
fs
sti
xor
loop
jo
int
sbb
mov
aam
inc
xor
lcall
shlb
jnp
test
cmp
mov
clc
cmp
incb
mov
adc
js
pop
scas
pop
inc
add
divb
mov
jmp
sub
add
xor
add
mov
scas
and
push
xor
lea
dec
dec
pop
pushf
pop
inc
add
cmpsb
cmpsb
les
das
or
fs
aaa
int3
enter
iret
ds
imul
inc
and
repnz
loopne
cltd
popa
cmp
jp
jl
cmpsb
push
sarb
mov
decb
pop
cmpsb
adc
lods
adc
das
pop
add
lods
repz
bound
decb
in
inc
add
hlt
cmp
xor
xor
incb
call
fldcw
pop
jle
ds
add
repnz
mov
inc
adc
jb
add
add
jecxz
arpl
push
adc
xor
movsb
sbb
repnz
fisubrl
add
mov
and
xor
or
fs
js
mov
mov
xor
push
xor
add
pop
xchg
mov
add
stc
jg
clc
test
fiaddl
leave
push
xchg
xchg
push
out
pushf
inc
add
data16
dec
out
push
pop
xor
sti
mov
jl
test
decb
fisttps
pop
and
std
incl
cld
pop
xchg
lahf
xor
push
add
imul
mov
lock
cmp
xchg
push
add
es
sub
sbb
aad
add
xchg
nop
sub
adc
add
lock
stos
or
cmpsb
test
add
xchg
and
imul
xchg
loop
dec
decb
decb
js
insb
sbb
sbb
dec
pushf
add
mov
sub
xchg
push
add
loop
repz
mov
fcom
ss
sbb
add
daa
nop
data16
ss
out
jnp
sub
push
pop
xor
adc
push
cmpsb
das
xchg
lea
hlt
add
decb
fwait
mov
loopne
add
das
hlt
mov
int
je
push
sub
push
cmpsb
scas
fidivl
push
lock
push
les
xchg
daa
lcall
xor
sbb
adc
popa
sbb
cld
pop
loope
js
jl
cmp
insl
sbb
dec
mov
inc
xchg
xlat
or
sub
and
xor
lock
dec
and
pop
scas
out
pushf
shll
mov
xchg
sub
add
xchg
cvtps2pd
out
jne
push
arpl
aam
test
push
add
cmp
pusha
add
pop
insb
sbb
stos
gs
mov
hlt
stc
jnp
sub
jne
lcall
aaa
mov
cwtl
mov
in
call
pop
push
push
hlt
fidivl
mov
popf
inc
pop
inc
add
rorl
mov
lods
ljmp
rol
pop
push
cmc
push
push
mov
xchg
or
push
mov
jne
inc
add
dec
decb
filds
cmpsb
push
cmpsl
jg
mov
and
call
dec
mov
mov
popf
sbbl
adc
int
addr16
mov
mov
in
fs
incb
mov
mov
insb
add
ficomps
test
clc
inc
pop
cmp
mov
int
testb
inc
jl
mov
inc
add
xor
add
inc
xor
stc
iret
cmc
pop
mov
jecxz
jo
mov
incb
dec
add
sbb
jl
fstps
and
in
xchg
cmp
xchg
adc
xchg
ret
out
jge
xchg
minps
jle
add
or
fldenv
and
jae
cmp
inc
add
sub
ljmp
cmp
pop
cmp
lods
nop
mov
data16
jmp
and
pop
xchg
fsubrs
add
mov
dec
cmpsl
sbbb
mov
push
dec
incb
ret
cmp
pop
pop
pop
into
pop
rclb
sbb
inc
lea
push
nop
enter
nop
jb
inc
cmp
xor
jno
xor
jge
loope
pop
stc
dec
movb
mov
out
cli
xor
jb
mov
jb
pop
xor
mov
cmp
push
pop
mov
add
jae
std
out
add
dec
lret
push
jo
ds
mov
call
add
fwait
inc
push
add
pop
pop
insb
add
lods
and
inc
js
jo
add
mov
sub
sub
je
testb
hlt
hlt
pop
dec
inc
sub
cmpsb
push
add
inc
pop
jbe
orb
sbb
loope
and
or
incb
repz
push
loopne
pop
loopne
adc
mov
outsb
add
mov
popf
clc
pop
lods
fs
ficoms
or
xchg
mov
xlat
push
xchg
test
loope
add
pop
jp
or
fwait
pop
fldt
push
xchg
loopne
add
mov
movl
sarb
or
add
mov
and
add
in
xor
mov
inc
add
add
add
enter
decb
dec
ljmp
imul
sbb
cwtl
xchg
mov
add
xchg
rclb
and
rcl
mov
cvttps2pi
jo
lret
push
cli
mov
cltd
pusha
add
int3
push
add
mov
adc
or
push
scas
enter
mov
cli
sbb
add
add
pop
outsl
inc
xchg
sub
incb
push
inc
in
add
mov
jae
pop
jmp
mov
push
xor
aam
xchg
adc
out
imul
outsb
mov
mov
xchg
cs
mov
punpckldq
cmpsl
mov
into
hlt
lahf
mov
add
loope
sbb
mov
call
mov
jno
pop
jae
mov
data16
decb
xchg
repnz
cs
incb
mov
add
cltd
lods
dec
add
hlt
jne
jns
fidivl
adc
push
daa
xchg
mov
out
sbb
addl
xor
pop
mov
decb
scas
aad
jb
add
arpl
xchg
es
mov
inc
add
stos
divb
inc
decb
ja
add
out
repnz
xchg
add
xchg
ret
inc
ljmp
jbe
dec
adc
mov
xor
adc
mov
insl
sti
lea
mov
jge
push
push
add
mov
cwtl
mov
fwait
jmp
in
lret
repnz
ds
cld
adcl
lahf
and
fisubrs
jae
aaa
cwtl
add
and
and
ljmp
call
sub
sbb
repz
aam
and
incb
stos
sub
fstpl
jmp
cmp
std
test
stc
into
movsb
jg
mov
mov
mov
cs
mov
stos
js
loope
inc
add
push
mov
dec
sub
decb
idivl
arpl
mov
xor
mov
xor
nop
shrl
jo
ss
scas
loopne
imulb
sub
es
loop
lods
push
movsb
clc
pop
jnp
jb
add
inc
xchg
loope
std
mov
dec
fs
xchg
inc
bound
incb
jne
add
mov
mov
xchg
mov
repz
imul
push
pop
nop
sbb
data16
lcall
gs
or
push
inc
loop
rcll
inc
add
sub
push
xor
mov
out
outsb
add
xchg
js
movsl
sbb
cld
call
xchg
andl
in
xor
aam
fsubr
xchg
add
xchg
ja
add
adc
add
adc
jecxz
arpl
mov
push
push
mov
loope
in
dec
add
inc
cmpsl
cmp
sub
mov
insb
loope
arpl
mov
push
repnz
cli
push
cli
add
add
push
popa
jmp
inc
dec
dec
add
jns
ret
in
ror
jmp
fwait
push
stos
push
hlt
data16
adc
mov
pop
lret
loope
fcmovnu
ret
xchg
cmp
jbe
shl
xor
cmp
mov
sbbl
dec
scas
es
push
dec
adc
mov
cli
sub
bound
jae
js
lcall
pusha
xor
mov
andb
mov
incb
cmp
lods
repz
jmp
popf
adc
pop
cwtl
in
mov
fisubs
jns
sbb
fsubs
scas
movsl
jbe
scas
hlt
dec
lea
pop
std
dec
icebp
sub
sub
fwait
push
mov
mov
cmpsb
adc
push
ficompl
cmp
mov
lahf
sarl
scas
mov
mov
sub
mov
enter
pop
mov
aas
repnz
outsb
in
jmp
sbb
fld
rorl
pop
adc
aam
dec
add
jne
add
push
add
aam
sub
and
popf
dec
pop
xchg
aad
cld
shl
mov
incb
rolb
push
sbb
inc
incb
xchg
pop
ss
push
mov
arpl
add
xchg
je
mov
les
cwtl
movsb
pop
daa
push
dec
add
and
test
jecxz
jns,pt
jg
add
stc
jno
jns
and
decb
leave
cmpl
mov
addl
add
jno
inc
and
xor
pop
add
jmp
mov
add
mov
add
xchg
mov
notl
mov
out
mov
mov
pop
idiv
cmp
lods
pop
and
jo
out
loop
in
xchg
xchg
dec
sub
pop
imul
push
inc
sub
decb
jne
insb
add
lds
cmp
jbe
mov
scas
cmc
inc
xchg
sbb
lahf
inc
fildl
cli
lock
push
test
xlat
les
loop
lods
adcb
orl
stos
in
dec
incb
and
int3
jns
cmp
pop
sub
sbb
fcmovnb
cmp
repnz
cmpsb
sbb
sbb
hlt
pop
jno
and
sbb
add
or
incb
sti
sbbl
ret
sbb
mov
mov
pop
mov
xchg
fs
jle
data16
imul
je
call
sbb
popf
loopne
pop
push
clc
ret
pop
cmpb
mov
pop
cltd
movsb
cmpsb
push
mov
ljmp
shlb
lahf
cmp
es
pop
jp
push
cmp
lea
jne
add
subl
dec
xchg
xor
xchg
gs
mov
sbb
cmp
cmp
xor
jge
sbb
loopne
dec
pop
push
scas
imul
addl
or
push
decb
rorb
mov
push
dec
jno
repz
mov
push
popa
test
xchg
add
add
jecxz
pop
jl
int3
ret
clc
nop
push
sbb
xor
xor
push
in
sarb
icebp
push
mov
sarb
adc
rcrb
and
pop
sub
decb
adcl
mov
es
push
jmp
dec
pop
xchg
lea
ret
imul
jb
xchg
fcmovu
mov
cmp
adcb
bound
decb
cmp
cld
ss
mov
xlat
addr16
xor
and
popf
hlt
ficomps
fmulp
mov
inc
mov
dec
mov
decb
xor
add
out
xorl
jno
dec
in
out
nop
scas
sbb
xchg
xor
dec
push
imul
push
in
jg
adc
add
gs
loopne
sub
aad
fbstp
mov
dec
add
stos
sub
adc
cmpsb
push
insl
cltd
push
or
repz
imul
dec
out
je
fstpt
pop
xor
adc
mov
pop
xchg
sub
lea
add
jl
adc
inc
inc
cmp
sub
addr16
and
sub
xchg
ret
sbb
movsb
pop
arpl
mov
jmp
sti
pop
imul
mov
xchg
mov
mov
pop
lcall
xor
add
into
dec
jo
push
mov
lcall
inc
push
bound
sub
fsubrl
jge
sahf
fbstp
fs
mov
ret
cwtl
aaa
scas
jb
addr16
mov
enter
fwait
adc
cmp
cmp
mov
pusha
pop
jle
add
call
or
jbe
scas
xchg
cs
jno
mov
or
mov
rcr
jne
stos
push
jnp
xchg
mov
sbb
xchg
sbb
inc
add
adc
fdivrl
xor
lods
xchg
lahf
sbb
dec
xor
sbbb
lock
ja
jne
adc
test
cmp
mov
pop
or
pop
call
lock
addr16
jb
dec
push
fnstsw
out
out
xor
or
decb
stc
cmp
xchg
cmpsl
shrl
sti
jnp
mov
cmp
rcrl
inc
push
cmpsb
fistps
add
jle
add
jne
adc
push
aas
pop
shll
mov
enter
popa
int3
push
dec
adc
or
adc
je
fucomi
roll
add
lret
sbb
mov
or
jno
add
in
lods
iret
fiadds
lret
pop
push
jmp
jbe
push
test
decb
dec
or
cmp
popf
adc
pusha
adc
cs
arpl
repz
incb
incb
fstps
daa
pushf
sbb
jae
sub
push
add
push
jl
cmpsl
xchg
pop
fbld
sub
imul
push
call
pushf
and
xor
js
adc
enter
jb
add
mov
ret
call
xchg
sahf
nop
addl
movsl
test
mov
add
sub
pop
stos
rcl
daa
hlt
sbb
xchg
add
ss
pop
fwait
sub
incb
cld
cmp
and
inc
arpl
mov
sbb
or
decb
das
xchg
enter
adc
in
xlat
repz
lahf
rclb
pop
jp
xchg
push
add
aaa
mov
shl
jns
dec
jmp
jg
lret
into
sub
decb
add
xor
jl
or
adc
aaa
ljmp
cmp
dec
incb
filds
jmp
add
jo
dec
sbb
mov
add
int3
and
ret
sbb
jns
popf
shrl
incb
mov
push
push
lret
cmc
and
dec
sub
xchg
and
push
sub
in
lea
mov
mov
add
stos
ja
pop
fistps
inc
decb
rorl
cmp
int3
mov
add
cmp
sub
addl
mov
shr
and
push
imul
add
popa
xor
push
in
xchg
in
jp
lret
push
decb
decb
mov
jp
add
cmp
sbb
sbb
add
jge
scas
loopne
pop
cmpb
addr16
cmc
es
fstpt
mov
loope
and
or
cmpsl
jg
sbb
clc
imul
pop
stc
inc
add
nop
sub
decb
add
push
add
and
push
jno
add
inc
movsb
shl
mov
and
decb
cmp
loopne
or
scas
mov
inc
add
cmp
sahf
stos
jbe
add
mov
mov
decb
add
push
je
adc
mov
pop
mov
mov
lods
pusha
ljmp
add
out
popa
and
arpl
push
in
mov
or
cmpsl
mov
jecxz
add
pop
jbe
mov
cmpsl
mov
or
jl
sbb
dec
add
inc
inc
test
pop
mov
call
incb
xchg
adc
cmp
pop
xor
jns
pop
push
int3
cmpsb
push
xchg
pop
out
std
lret
iret
std
call
ss
inc
fwait
push
ds
ficoms
rcll
dec
cld
pop
cltd
pop
iret
orl
mov
mov
xor
int
jne
xchg
add
test
shll
mov
inc
add
scas
xchg
jg
sbb
jns
roll
incb
pop
ror
aaa
pop
and
jne
or
fstpl
mov
decb
dec
add
ja
jne
stos
jns
cmc
imul
dec
add
lods
jae
je
repz
stc
cmpl
pop
clc
sub
gs
decb
mov
andl
decb
or
xchg
pop
mov
clc
in
lahf
sbb
pavgb
xbegin
sbb
es
incb
adc
dec
pop
aas
outsl
jae
push
push
sbb
enter
dec
xchg
sbb
dec
push
cmc
cwtl
mov
inc
pop
loopne
or
cmp
xor
push
leave
add
les
out
sbb
xchg
push
lods
call
rcr
aaa
popa
testb
xor
cmpsb
xchg
aam
ficompl
xor
and
push
fnstcw
dec
or
repnz
add
sti
lds
pop
lods
movsb
inc
inc
inc
cld
outsb
out
frstor
popf
shl
dec
sbb
sbb
sbb
mov
xchg
shlb
or
aam
add
cmp
pop
out
in
push
xor
fnstsw
sarb
mov
xchg
jmp
sbb
dec
add
call
mov
dec
arpl
push
decb
test
pop
sbb
popf
cmp
mov
inc
loopne
aad
inc
add
mov
push
inc
mov
inc
pop
imul
add
push
in
sti
mov
xchg
test
rclb
push
sub
insb
add
jp
sbb
cmp
popa
fisubl
jle
stos
mov
test
jmp
pushf
pop
sbbl
lods
outsl
test
add
and
in
or
dec
int3
or
mov
cs
inc
inc
add
test
and
mov
nop
sbb
inc
dec
add
andb
add
call
repz
xchg
ja
cmp
mov
clc
jns
aaa
hlt
dec
add
jp
cmp
adc
rcrb
fidivrs
lock
ljmp
dec
dec
mov
ds
insl
mov
into
shll
add
mov
mov
and
incb
cmp
clc
arpl
sbb
cmp
pop
shrb
leave
into
add
jg
fsubrl
xchg
sub
xchg
jmp
aaa
je
mov
add
adc
adc
cmp
mov
jmp
shl
mov
aaa
fbstp
fidivrl
jp
inc
pop
mov
dec
add
add
out
int3
mulb
inc
fstps
inc
aas
xor
shrb
decb
hlt
jne
adc
arpl
xor
std
xchg
push
pop
adc
jb
sub
xchg
dec
add
lock
add
icebp
pushf
call
aam
add
or
movsl
loop
mov
push
inc
fstpl
out
cmp
xchg
in
ja
xchg
gs
jg
incb
cmp
jge
test
fidivs
push
mov
insb
cmpsb
mov
add
lods
sub
scas
sbb
jns
imul
dec
pop
sbb
decb
test
adc
loope
add
test
push
mov
dec
jecxz
popa
cmp
decb
loope
rclb
mov
or
and
outsl
cmc
das
fiaddl
dec
inc
fildl
add
shll
cmp
popa
pop
pop
pusha
push
sub
decb
push
xchg
gs
lret
mov
cld
notl
adc
and
xchg
pushf
mov
lcall
addr16
mov
addr16
std
pop
lcall
add
jmp
in
pop
idivl
xor
icebp
xor
sbb
mov
mov
nop
leave
adc
mov
cmpsb
enter
ja
jecxz
sbb
xchg
push
mov
mov
popf
or
and
aad
push
insb
add
pop
fdiv
lods
cld
sbb
cs
mov
pop
add
xchg
pop
imul
xchg
insl
fwait
dec
incb
add
pop
insb
cltd
sub
sub
adc
imul
outsb
add
lds
cmp
pop
aaa
xor
adc
rorl
cmpsb
andb
call
push
xchg
stos
jle
and
or
outsb
add
das
jmp
mov
mov
divb
cmp
js
sbb
xor
test
xchg
or
push
cmp
sbb
cmp
adc
xchg
dec
pop
rolb
push
push
stc
cmp
dec
add
dec
inc
lds
and
mov
mov
sbb
xchg
pushf
test
je
add
jge
stc
xchg
idiv
pop
xchg
dec
nopl
hlt
mov
jp
pusha
add
and
push
xor
pop
scas
and
adc
jns
sahf
pop
pusha
add
or
insl
pop
notb
push
xchg
subb
cli
push
ret
cmp
into
out
xchg
push
mov
stc
sub
pop
dec
add
int3
fildll
pop
xor
mov
pop
jbe
add
mov
jl
lret
jo
stos
sub
fsub
pop
loope
shll
incb
add
cwtl
movsb
std
mov
loope
and
inc
dec
jecxz
fsub
scas
jb
cmpsb
shlb
pop
push
idivl
imul
outsb
add
push
jecxz
push
sarl
inc
add
xor
inc
add
mov
jne
fisubrs
add
dec
dec
cmp
xor
dec
jb
in
aaa
pop
bound
pop
lock
and
decb
xchg
dec
ret
out
jl
push
incb
decb
in
cmp
out
mov
pusha
add
mov
mov
or
nop
std
inc
add
mov
dec
notl
pusha
add
or
jmp
jb
test
movsl
add
mov
add
lea
push
xchg
scas
test
inc
fmulp
xchg
jae
inc
xor
test
xor
arpl
ljmp
adc
test
test
lods
outsb
dec
push
arpl
and
jmp
cmp
or
movsb
pop
ss
push
movsl
push
js
dec
pop
jg
cld
xchg
in
in
sub
sub
or
movsb
clc
fldenv
dec
mov
stc
push
add
jmp
pop
loop
fmull
inc
bound
jb
xchg
jo
xor
decb
push
add
dec
add
add
sub
arpl
inc
or
jne
stos
inc
mov
aam
add
orl
scas
jns
outsl
push
sbb
dec
arpl
sbb
shl
fiaddl
jns
xor
dec
outsl
in
xor
inc
jmp
in
mov
ret
xchg
dec
out
xor
dec
fwait
dec
bound
mov
das
inc
or
jae
aaa
mov
mov
push
jmp
aaa
fdivrl
stc
or
decb
mov
lds
aad
cs
cmp
mov
jmp
stos
jg
add
iret
scas
lahf
popf
or
mov
fidivs
jbe
sub
decb
jmp
inc
jge
sahf
xor
mov
lcall
sub
incb
ret
repz
aaa
les
pop
aaa
jnp
jecxz
das
sahf
mov
sbbl
stc
and
in
inc
int3
push
pusha
incb
repnz
jp
add
sbb
dec
and
mov
cmp
outsl
mov
and
mulb
fidivrl
cli
mov
stos
addb
sbb
sti
lea
mov
cmp
fcomps
sub
pop
pop
daa
lea
stc
jb
push
incb
decb
out
or
jno
add
xchg
mov
sbb
stc
pop
xchg
popf
cwtl
dec
add
pop
dec
repnz
pushl
mov
decb
mov
sbb
inc
shrl
pop
xlat
mov
decb
xor
sbb
iret
add
incb
mov
jb
ficompl
pop
dec
lret
pop
das
daa
cmp
jae
push
outsb
add
sbb
and
icebp
insb
shl
lods
mov
incb
repnz
adc
cwtl
or
cld
fstpl
addl
push
dec
sub
decb
cs
pusha
cmp
cmpsb
mov
jb
jp
roll
je
ds
fwait
into
and
pop
lea
push
xor
adc
shll
xchg
ja
in
cmp
shll
add
out
add
es
cld
add
cs
incb
ret
inc
add
clc
mov
cs
in
jnp
cmp
cli
xor
int
xchg
jo
adc
mov
push
clc
int3
lds
xlat
int
mov
pop
add
decb
out
inc
add
sub
push
adc
or
add
ja
decb
shrb
xchg
push
aas
lods
mov
cmp
inc
fs
push
sbb
decb
or
push
and
decb
in
test
dec
add
and
mov
adc
adc
shlb
push
mov
mov
es
in
shll
pop
pop
int
outsl
adc
dec
add
shrl
push
shrl
rclb
mov
cmp
push
sbb
add
andb
push
add
inc
cwtl
cmpsl
lret
add
push
pop
cli
lret
lock
inc
dec
incb
pop
and
mov
adc
icebp
xor
decb
cmp
mov
push
ret
fnstenv
sbb
lcall
arpl
xorb
cltd
and
test
popf
xor
mov
outsl
imul
xor
xor
adc
pop
and
daa
mov
xchg
adc
ljmp
loopne
fbstp
xor
add
ja
fimull
sub
sub
and
add
mov
push
stc
lahf
mov
adc
and
jge
dec
lret
fildll
mov
andl
out
mov
lahf
int
xchg
dec
sbb
and
hlt
inc
add
mov
add
sub
rcrl
std
es
roll
shl
pop
out
fsubrl
push
cwtl
xchg
xchg
sahf
jp
fs
cmc
inc
dec
cmp
iret
pop
loop
fxch
daa
or
inc
add
pop
aad
movsb
mov
mov
xor
outsb
mov
lret
ljmp
shl
dec
incb
mov
add
faddl
out
push
inc
cs
and
jle
adc
enter
and
lds
stos
test
arpl
std
sbb
incb
sub
push
cltd
push
incb
hlt
pop
pop
rolb
pop
mov
and
shr
xchg
imul
xchg
addr16
lds
jg
pushf
jae
int
in
push
adc
int
cs
dec
xchg
lcall
stos
repnz
mov
data16
mov
outsl
dec
push
dec
jnp
cmp
jge
ja
add
sbb
add
incb
dec
das
xor
add
test
outsb
outsb
add
ret
fstpl
mov
mov
sub
xchg
push
inc
enter
stos
and
mov
dec
add
cld
pop
loope
push
pop
adc
in
and
mov
aad
clc
icebp
mov
add
mov
mov
adc
rorb
dec
lods
mov
add
cs
dec
ja
out
xor
dec
aad
fwait
es
outsl
jmp
and
cmpsl
sbb
xor
les
cwtl
ljmp
pop
into
jo
push
jae
jge
mov
mov
faddl
add
adcl
push
fdivrs
jnp
pop
ja
sbb
rclb
mov
pop
cmc
cmp
lds
notl
test
testb
inc
inc
add
repz
add
push
arpl
incb
out
insl
cmc
aad
add
dec
ret
icebp
add
pop
out
jge
pusha
add
xchg
sbb
add
jg
js
es
mov
lds
rorl
inc
add
out
out
fsts
ret
movsl
xchg
cwtl
movsl
les
out
xor
iret
fisubrs
add
mov
shll
jmp
push
sub
push
fsqrt
aad
dec
incb
jbe
subl
mov
pop
sahf
cmp
adc
cmp
decb
push
out
mov
or
fisubs
push
scas
xchg
sub
es
decb
outsl
data16
decb
sub
adc
lock
sbb
add
daa
dec
add
mov
dec
and
fsubl
insl
pop
xor
in
inc
add
and
jle,pt
mov
mov
sub
test
aas
cmp
pop
dec
lods
cmc
jge
sub
dec
add
mov
dec
add
hlt
mov
pop
mov
stos
in
xor
push
push
ficoms
cmp
mul
sbb
sub
jmp
pop
adc
es
pop
int3
xor
gs
xchg
popa
test
add
or
cld
mov
lods
scas
push
into
mov
pop
mov
iret
std
cmp
xchg
jnp
push
add
fisubrs
cltd
aas
ljmp
add
add
ret
mov
sbb
adc
push
mov
ds
lret
lea
pushf
insl
mov
push
idivb
je
sahf
push
pop
pop
and
decb
add
xchg
push
mov
push
mov
test
add
fdivs
add
daa
pushf
nop
fucomip
pop
pop
shll
hlt
mov
iret
call
xchg
mov
jl
or
mov
inc
dec
jle
scas
sbb
pop
bound
xor
push
jns
ret
lret
pop
or
out
dec
sti
ficoms
and
dec
add
inc
add
xchg
inc
popf
xchg
sub
sbb
not
arpl
icebp
lahf
push
test
xchg
aam
mov
outsl
pop
jne
rolb
incb
pop
sti
dec
add
aaa
testb
test
cli
and
movsl
sbb
fdivr
lcall
outsl
push
mov
jmp
bound
inc
cld
pop
popa
sbb
xchg
sbb
lea
lret
int
xchg
cli
inc
add
or
decb
mov
jp
add
pop
pusha
add
fsubrl
add
out
stos
add
decb
mov
add
xchg
lret
clc
xchg
loope
xchg
sub
mov
lret
idivl
ret
sub
inc
iret
push
int
push
cmp
push
mov
add
sar
push
xor
das
repnz
repz
jo
mov
mov
rol
or
repz
test
mov
rcrl
inc
cmp
add
popa
lds
and
adc
xchg
test
aaa
enter
add
lds
aas
pop
call
inc
mov
iret
and
loope
and
inc
lret
sti
mov
mov
lcall
lret
stos
shlb
push
fwait
xor
inc
inc
inc
sbbb
add
orl
movsb
and
mov
scas
fidivl
pop
mov
push
fwait
dec
lret
xor
mov
lea
mov
jae
pop
push
movsb
sub
cltd
dec
aam
push
and
stc
add
jle
add
mov
aad
mov
ds
mov
sub
decb
pop
push
mov
dec
sbb
aam
scas
jmp
loope
dec
cs
imul
imul
mov
jle
jbe
jo
or
fsubl
add
negb
ss
decb
loope
popa
adc
dec
jbe
icebp
jle
mov
or
out
dec
cld
gs
mov
rcrl
scas
ret
jp
inc
movsb
int
imul
or
pusha
xchg
das
sahf
dec
jp
data16
es
and
out
cmpsb
mov
jge
pop
cmp
fildll
movsb
in
rcr
test
stos
clc
mov
adc
add
pusha
add
push
mov
mov
sbb
sbb
inc
dec
add
outsb
incb
outsb
add
mov
sbb
sub
pop
stos
popa
pop
xchg
jle
hlt
add
sbb
and
movsb
ds
lcall
mov
cltd
xchg
xor
mov
lods
mov
pop
cmpsb
iret
cmp
int
cmp
sarl
xchg
push
sbb
orl
add
sbb
arpl
dec
mov
dec
cmp
add
push
push
push
loop
movsl
adc
xchg
add
daa
clc
ret
fcoml
mov
pop
mov
xchg
imul
sub
testb
fwait
lret
sbb
xchg
fstpl
add
jbe
mov
loopne
cmpsl
push
outsl
xor
add
repz
call
pop
push
mov
fsubr
sarl
dec
cmp
popa
dec
jo
and
add
or
mov
sub
sub
jb
jmp
in
testl
sub
dec
adc
push
dec
add
mov
jo
jl
rorb
xchg
gs
mov
inc
imul
sub
mov
fs
aam
add
mov
push
frstor
pop
mov
mov
inc
dec
int
mov
out
popa
push
mov
fs
aaa
mov
push
lcall
xchg
test
das
ljmp
lods
shll
jno
mov
incb
arpl
or
inc
pushf
dec
sbb
xchg
popa
or
decb
xchg
pop
add
mov
ja
mov
lock
cs
decb
mov
sub
pop
outsl
fidivrs
test
sahf
push
mov
xchg
mov
sbb
fs
hlt
inc
orb
out
iret
pop
mov
cmp
scas
mov
adc
pushf
lret
add
cmp
cli
mov
jo
xchg
push
add
gs
jbe
sahf
jge
cs
push
inc
mov
mov
lcall
icebp
and
xchg
cmp
pop
fcoml
jmp
ret
xor
test
mov
test
aaa
mov
jl
hlt
xchg
push
mov
xorl
push
add
in
popf
adc
fsubl
jecxz
jmp
push
decb
cmpsb
pop
cmp
mov
push
add
dec
add
xor
iret
dec
xchg
frstor
sub
mov
out
addr16
pusha
sub
lock
mov
loopne
add
lds
or
push
loope
rclb
sbbl
pop
inc
dec
jae
add
lods
push
cmpsb
fistl
hlt
add
jnp
shr
and
pop
cmp
jle
idivb
sub
mov
jg
rcrl
xor
adc
pop
and
incb
loope
repnz
rolb
rcl
lret
inc
incb
rcrl
mov
mov
std
inc
sub
mov
xchg
loop
push
lret
icebp
mov
dec
into
mov
inc
and
add
jo
in
or
shlb
rorl
or
arpl
sbb
add
movsb
lahf
cwtl
clc
mov
loopne
imul
xlat
sti
xor
leave
clc
ljmp
test
mov
pop
mov
test
push
test
loopne
cs
xchg
xchg
repnz
add
xor
push
jbe
push
das
ss
push
add
aad
repnz
std
insl
rolb
popa
xchg
cs
out
test
pop
jmp
xchg
fdivs
insb
inc
mov
insb
decb
dec
add
dec
decb
add
pop
add
lock
sti
dec
lock
hlt
sub
out
sar
push
fwait
xchg
out
arpl
lcall
imul
popa
les
mov
loopne
popa
int3
jl
jne
aam
lea
add
loope
je
add
mov
xor
push
arpl
out
add
enter
jne
xor
es
inc
mov
xor
out
jle,pt
repz
inc
rol
mov
add
jno
add
shrl
ljmp
into
out
cs
dec
jge
into
bound
aad
mov
sub
sbb
cmp
adc
in
movsb
insl
xor
cld
sub
decb
in
and
incb
and
xchg
call
sbb
fnstcw
add
rcrb
cmpsb
fisubs
inc
add
ja
movsl
enter
arpl
addr16
inc
dec
inc
daa
arpl
jnp
push
sub
ja
add
cmp
add
xor
adc
es
bnd
mov
jb,pt
stos
mov
add
mov
scas
add
ja
push
or
data16
aad
add
dec
add
inc
push
cmc
xor
repnz
decl
pusha
add
push
add
int3
in
push
sarl
subl
cmp
int
jnp
add
push
imul
push
or
dec
lods
imul
dec
add
lahf
inc
cwtl
cmp
push
movntq
push
clc
pop
cli
out
jo
mov
add
test
ficompl
jns
mov
incb
add
aam
mov
mov
xor
out
movsl
rcl
mov
das
dec
dec
lea
lcall
hlt
jl,pt
dec
sub
incb
cmp
fs
xlat
xor
mov
repz
cwtl
pop
pop
jns
jge
and
lahf
push
xchg
xor
pop
push
lcall
dec
add
pop
xlat
or
dec
mov
cli
call
adc
fmull
out
lods
mov
cmc
cmp
pop
sbb
adc
cmpsl
ds
decl
jg
add
repz
cltd
fs
nop
push
lcall
add
arpl
or
je
pop
push
mov
leave
gs
outsl
xor
add
mov
and
incb
push
inc
jle
sbb
pushf
and
pop
xlat
mov
xor
mov
xchg
jmp
sub
add
cli
mov
or
dec
mov
dec
popl
rcll
aaa
add
lahf
addl
pop
pusha
add
ficompl
and
mov
inc
inc
xchg
mov
pop
push
push
fildll
xor
xchg
stos
or
nop
add
mov
jp
stos
js
push
jae
xor
jnp
mov
cmp
mov
pop
xor
push
test
pop
inc
add
mov
push
xor
scas
je
fimull
pop
pop
or
mov
xchg
dec
std
pop
out
xchg
or
jo
inc
mov
adc
scas
and
sub
mov
cmp
aam
fnstenv
inc
mov
inc
dec
stos
shlb
sbb
push
mov
out
lcall
hlt
ret
test
shlb
jmp
push
pop
stc
outsl
xchg
sub
pusha
add
mov
cli
insl
xor
add
das
xor
jne
cmpsl
out
inc
shl
cmp
sbb
adc
andl
or
loope
adc
test
mov
popf
jp
or
jge
add
aam
repz
add
inc
inc
adc
jge
inc
add
cltd
pop
push
ss
xor
add
jne
cmp
sti
or
divl
push
iret
stos
mov
mov
ds
push
push
sbb
xchg
out
shrl
rclb
in
push
fiaddl
add
mov
das
mov
fmuls
jne
jbe
popf
cmpsl
dec
add
popa
fsts
ss
cmpsb
add
imul
fldcw
xor
mov
or
scas
sbb
roll
xchg
mov
push
enter
sbb
int
mov
pop
and
loop
les
xchg
add
add
inc
ret
sahf
lock
cli
fbstp
int3
hlt
jnp
jp
daa
add
decb
xchg
mov
add
das
ret
dec
pop
imulb
push
xor
int3
jg
leave
sbb
or
pop
movsl
pop
push
loope
out
nop
add
push
or
jle
stc
jae
jns
mov
push
xchg
dec
inc
jg
cltd
aad
int3
pop
cmc
lods
inc
inc
jb
sbb
pop
fsubs
les
sub
fs
test
push
popa
fimuls
push
jmp
test
push
negb
xchg
sub
jecxz
lahf
fstps
popa
aam
cmpsl
push
dec
jae
arpl
xchg
imul
or
gs
mov
mov
mov
inc
shll
cs
or
mov
lahf
mov
mov
cli
mov
stos
cmp
incb
xchg
jl
ljmp
or
cld
mov
jg
sub
loop
sarl
sub
mov
adc
outsl
mov
pushf
es
dec
je
mov
pop
and
ficompl
stc
mov
cmp
mov
mov
xchg
jle
in
scas
add
movsb
cmpsl
sub
adc
add
mov
sbb
push
fdivs
push
rcrb
mov
dec
or
mov
loopne
arpl
push
sub
decb
ds
sahf
js
icebp
push
lcall
enter
push
push
test
cld
add
ljmp
mov
adc
xor
pop
xor
inc
add
outsb
add
rcrb
mov
sub
xchg
lahf
enter
cmp
sti
push
inc
add
ljmp
add
cs
aaa
sti
adc
push
out
add
call
cwtl
push
add
gs
add
push
cmp
cmpsb
sbb
xor
movb
cmc
inc
repnz
cld
add
pop
xchg
jbe
mov
add
and
lea
jb
fiadds
add
in
push
xor
rcr
mov
inc
adc
rcl
fwait
dec
xor
aad
lcall
stc
stos
sub
andl
sti
ret
in
push
bound
decb
jg
es
adc
mov
incb
shl
fcmovbe
movsb
xor
loopne
sbb
adc
fwait
test
xchg
dec
add
out
add
ss
insb
mov
call
int3
lods
jnp
adc
cmpsl
xchg
das
pop
jns
jnp
out
push
mov
mov
mov
movsl
or
xchg
mov
mov
push
ja
adcb
les
stc
call
mov
jo
decb
shlb
sub
cmp
gs
jl
cmp
mov
dec
mull
cli
cmp
decb
inc
or
scas
add
incb
movsb
imul
sub
push
divl
mov
lods
in
jae
jge
andb
shrb
sbb
in
dec
pop
dec
daa
popa
and
call
xor
js
mov
sub
adc
inc
faddp
adcb
xor
out
xchg
xor
fs
inc
add
adc
movsb
lcall
decb
insb
inc
and
in
inc
sub
icebp
or
pop
cmpsl
aad
jg
gs
lret
mov
add
negb
mov
pop
jge
mov
cmp
ja
pop
xlat
fisttps
aaa
sahf
xchg
xchg
xchg
out
jmp
mov
mov
in
fnsave
add
ja
or
decb
pop
mov
ds
insb
decb
dec
xor
aad
jae
stos
arpl
mov
cwtl
clc
adc
ret
nop
fidivs
pop
pop
gs
push
sub
jns
mov
pop
push
jo
xor
and
pop
imul
shrl
mov
test
add
mov
sbb
mov
push
add
adc
or
mov
in
sub
adc
jae
stos
and
jo
lret
lahf
cmp
decb
add
or
inc
enter
xor
into
jmp
sbb
test
mov
flds
pop
fsubrs
push
clc
inc
lods
adc
pop
cmp
xchg
mov
add
dec
inc
inc
mov
sahf
sub
add
pop
dec
dec
xchg
push
inc
add
inc
add
mov
loop
mov
hlt
in
add
adc
adc
lock
push
pop
repnz
inc
addb
jae
xchg
push
add
in
mov
cmp
xchg
or
jmp
push
loopne
mov
xor
sbb
out
lds
xor
std
enter
lods
pop
push
incb
mov
sub
jno
sub
incb
mov
and
ljmp
rcl
mov
inc
add
mov
jg
jbe
shl
ss
mov
mov
fldcw
icebp
mov
mov
adc
dec
jg
shrb
or
incb
loop
mov
cli
cmp
cmp
sti
pop
push
xchg
xchg
repnz
sbb
clc
repz
loop
in
arpl
xor
stos
outsl
pop
in
arpl
push
cmp
addb
in
push
jae
sub
fs
pop
movsl
mov
je
xor
xchg
and
ss
inc
enter
mov
push
mov
int3
sbb
leave
dec
adc
jge
mov
lods
sbb
lahf
sub
xchg
pop
cs
incb
add
sub
xchg
jp
add
stos
cltd
fwait
iret
stos
mov
and
scas
stc
stc
pop
adcl
jge
dec
movsl
loope
repz
cld
jecxz
shl
lods
fdivrs
mov
inc
mov
aam
push
xlat
arpl
fwait
sarb
push
loopne
sti
imul
push
push
jecxz
addr16
add
lea
and
imul
inc
xor
sbb
add
mov
adc
mov
add
lcall
cmp
jecxz
push
add
xor
inc
push
cmp
jle
add
or
ret
or
and
loop
mov
out
pushf
cmp
jge
rolb
sbb
adc
aaa
cmp
xor
int
pop
imulb
pop
xor
jb
sub
add
adc
and
mov
in
js
popf
test
add
sub
decb
xchg
pop
negl
add
repnz
jo
sbb
xlat
or
daa
xor
insl
enter
fildl
and
incb
cmp
xor
adc
test
and
shll
sbb
jno
clc
dec
or
ss
das
xchg
pop
sub
sub
cmp
add
lods
add
cmp
push
fidivl
arpl
or
hlt
out
mov
scas
cmpsb
adc
cmp
nop
add
sub
daa
rcrb
dec
inc
jns
add
imul
mov
popa
sbb
add
sbb
rorl
pop
cltd
jno
inc
add
jbe
ljmp
or
xchg
cmc
rcrb
testl
ss
add
test
mov
sub
in
lds
mov
sti
xor
add
incb
xor
into
stos
fdivp
mov
in
mov
aam
movsb
gs
arpl
cltd
xor
jns
aad
push
push
cmp
daa
jb
outsb
add
mov
lret
flds
mov
dec
xor
out
daa
sub
addr16
insb
add
daa
jge
pop
and
inc
pushf
pop
push
push
movb
adc
cmp
or
dec
xchg
jnp
add
decb
and
jbe
adc
lret
sub
cmp
ret
dec
incb
repz
add
mov
jl
xchg
hlt
shr
xchg
or
arpl
es
xor
rcl
push
iret
insl
and
decb
pop
xor
scas
inc
adc
push
add
cmp
ds
lods
jle
add
aas
inc
sub
enter
data16
shrb
lcall
mov
stos
pop
cmp
sbbb
push
pop
or
sti
imull
shlb
sbb
jle
or
xor
fld
xor
in
mov
jb
and
inc
add
pop
iret
cwtl
clc
push
mov
es
adcl
mov
stos
mov
xchg
in
scas
xor
fmulp
sub
and
cmpl
hlt
jecxz
shrl
cmp
shlb
xor
mov
add
jne
add
rcrl
add
jecxz
xor
and
add
jle
es
fsubs
fwait
mov
mov
ja
add
xor
sbb
push
ret
out
add
mov
push
incb
add
insl
or
xchg
sub
aaa
push
xchg
push
aas
orb
jnp
pop
sub
xchg
sahf
adc
outsb
add
dec
imul
ljmp
pop
not
test
pop
mov
pop
sbb
lods
outsb
add
fisubrs
cmp
or
push
add
xor
cmp
testb
mov
lods
das
incl
incb
jp
xchg
jb
mov
dec
hlt
subl
je
mov
rol
lcall
push
push
subl
out
inc
scas
xchg
enter
loope
rorb
mov
cs
mov
pop
push
cmp
add
push
xor
inc
outsl
or
pop
push
or
jbe
add
adc
dec
lahf
nop
jnp
jl
clc
inc
incb
imul
lret
stos
cmc
addl
xchg
xchg
mov
inc
xchg
inc
into
int
pop
rcl
jb
popf
xchg
lret
scas
adc
add
dec
lods
push
mov
sbb
jo
scas
jbe
add
or
decb
jb
cmc
add
scas
call
clc
jns
cmpb
inc
and
lret
je
repz
data16
in
gs
out
adc
dec
decb
add
mov
test
push
sahf
sub
add
xchg
sahf
jl
aad
jg
nop
loopne
enter
inc
add
push
mov
sbb
out
int
push
repz
imul
xor
add
inc
je
and
pop
cwtl
adc
in
int3
imul
add
int3
dec
add
jbe
imul
dec
fwait
jns
sti
inc
shll
lock
mov
into
jnp
xor
xchg
jmp
decb
dec
add
add
add
jbe
mov
or
and
dec
add
aad
ror
mov
pavgw
and
xchg
push
or
dec
mov
add
data16
mov
dec
cmp
xchg
mov
or
mov
into
push
mov
inc
add
lcall
aam
and
xor
cli
jbe
cwtl
out
pusha
add
lock
cltd
dec
xorb
incb
fst
sti
shll
test
into
test
je
xor
data16
push
and
mov
add
outsb
push
fbld
test
inc
decb
add
in
add
sub
int3
cs
incb
arpl
mov
pushf
test
cmp
adc
mov
add
lods
jmp
pop
xor
pusha
inc
xor
add
mov
jae
xchg
fildl
imul
repnz
outsb
add
ja
fiaddl
incb
incb
mov
sahf
xor
dec
jl
cwtl
jne
aas
lahf
lods
lcall
cmp
mov
or
cwtl
cltd
ja
add
test
inc
add
lock
incb
xchg
bound
loop
std
int3
les
ljmp
enter
mov
push
repz
mov
add
sbb
sub
inc
inc
ret
fidivs
jns
idivl
sbb
imul
add
jmp
add
rorl
gs
xor
ret
loopne
xchg
jno
or
jo
adc
dec
repnz
and
pop
mov
adc
cmp
js
rclb
addl
test
lcall
xchg
jnp
ss
fsubs
or
sbbl
cmp
add
adc
nop
aad
decb
pusha
mov
dec
jbe
sar
pop
repz
addr16
mov
ds
sti
inc
and
arpl
mov
jae
push
mov
pop
imul
adc
frstor
and
xor
jmp
data16
pop
or
loopne
stos
pop
sbb
xchg
mov
mov
mov
cmp
dec
mov
incb
into
jmp
ret
add
push
mov
pop
lods
fstl
test
mov
sub
mov
inc
add
dec
add
repnz
push
xchg
ljmp
pop
call
push
call
mov
sbb
arpl
dec
jmp
xor
add
xor
test
jg
decb
ficomps
aas
and
push
sbb
int
adc
hlt
xchg
out
add
incb
jge
and
push
fsubrs
movsl
hlt
inc
add
add
sti
outsl
xchg
xchg
cmp
dec
fnstsw
inc
dec
dec
cmp
dec
decb
incb
add
mov
ffree
jno
dec
push
cmp
addl
decb
rcl
mov
cld
push
add
rorb
lret
pushf
mov
add
adc
jp
scas
sbb
popa
cmp
inc
ret
adc
lock
lret
out
scas
xchg
mov
icebp
mov
jnp
fadds
fisubrs
sub
fstpt
fldl
add
cmpsb
stc
sbb
adc
xchg
sbb
adc
mov
mov
sub
mov
mov
cmc
mov
lods
xchg
or
cmp
lea
adc
scas
inc
mov
jno
add
or
sarb
shr
dec
xchg
add
sbb
and
cmp
cmp
and
mov
stc
sbb
ja
fwait
jmp
push
xor
ret
mov
jbe
std
xor
push
leave
subb
add
dec
mov
in
fidivl
xchg
lahf
or
dec
jnp
xor
test
les
xor
into
in
test
mov
sub
inc
in
xchg
hlt
add
adc
inc
pop
aaa
mov
push
loop
hlt
cltd
mov
into
dec
push
inc
add
mov
scas
es
decb
aam
push
jnp
pushl
add
add
xor
sub
cmc
fsubrs
icebp
jnp
repz
test
add
and
cltd
adc
jge
inc
mov
inc
add
mov
lods
inc
adc
sarb
test
inc
add
call
stc
adc
cld
mov
adc
pop
and
std
ljmp
out
push
mov
mov
add
decb
cmp
add
ret
xchg
arpl
cwtl
pop
xor
mov
repz
sub
and
movsl
inc
add
frstor
dec
imul
aad
scas
je
cs
decb
mov
add
fistl
push
fs
dec
gs
push
loop
add
mov
dec
add
jb
mov
rolb
cmpsl
inc
jl
loope
daa
mov
jae
decb
iret
sbbl
push
scas
filds
decb
add
add
dec
jl
in
loope
addr16
mov
lcall
mov
incb
cltd
test
and
decb
xchg
adc
cltd
aad
inc
sarb
decb
decb
push
mov
jge
ret
or
ja
fdivl
mov
and
decb
add
je
mov
xchg
arpl
inc
fldl
decb
shlb
mov
sub
decb
and
sub
decb
decb
pushf
adc
mov
cwtl
das
nop
fldt
push
cld
cs
aaa
or
decb
stc
sub
fwait
and
sub
fildll
std
mov
fs
insb
mov
inc
decb
dec
push
jno
or
out
or
mov
aam
add
outsl
and
jb
add
aad
int
lret
cmp
out
mov
je
push
cwtl
je
and
adc
cmp
jp
popf
and
sub
loope
rcrb
sub
in
popa
or
stos
mov
jo
jnp
add
test
jbe
mov
xor
cmpsl
xchg
ret
jnp
pop
outsl
mov
add
sub
hlt
lret
add
mov
jb
int
add
sti
inc
sub
rcrb
xor
mov
dec
fldt
mov
pop
xor
mov
loop
mov
adc
or
inc
ret
in
sbb
xor
cmp
push
xor
add
insl
leave
int
ss
decb
jae
lds
sarl
inc
dec
stos
out
pop
sti
ss
insl
lock
incb
add
decb
add
cltd
xchg
cld
hlt
pop
lahf
jg
stos
xchg
nop
dec
and
xor
sbb
test
push
mov
xor
xchg
repnz
fldt
popf
orb
mov
clc
cmp
sub
adc
in
out
imul
incb
mov
idivb
or
mov
data16
loopne
lods
aad
lods
jge
or
lret
lods
xchg
in
or
xor
cmpsb
inc
ljmp
and
decb
xchg
outsb
add
xchg
dec
mov
pop
imul
xor
cmpl
imul
mov
dec
cmpsl
push
cld
sbb
adc
mov
dec
lods
push
cmp
inc
add
lea
imul
lds
push
sub
incb
or
xchg
mov
decb
movsb
push
xchg
js
data16
decb
aas
lds
xchg
enter
adc
loope
fwait
sub
mov
add
jnp
daa
sub
gs
pop
je
mov
jg
test
add
xlat
or
out
mov
data16
incb
xchg
imul
mov
mov
test
pop
aam
jne
incb
lea
testl
inc
adc
push
cld
mov
adc
rolb
insb
incb
mov
cmp
pop
jecxz
adc
sub
decb
in
pop
lods
push
addb
xchg
xchg
ja
sub
mov
into
jb
and
adc
add
sbb
sbb
imul
outsb
add
or
inc
in
addb
or
cwtl
xchg
cmp
or
lock
fisttpl
adc
dec
movsl
push
jge
dec
test
inc
loope
sbb
sub
sti
cmp
or
cmp
push
ljmp
ja
pop
pop
cmp
xchg
arpl
adc
pop
sti
sbbl
pop
lret
call
fcmovnu
ret
in
idivb
xor
pop
lret
das
pop
mov
outsl
jo
call
add
sbb
pusha
decb
testl
sub
cmp
jb
pop
dec
adc
in
repz
in
inc
add
test
add
repnz
rcrb
popa
sbb
test
fisubs
lock
sbb
stos
add
loope
add
lods
es
lods
call
mov
sub
jge
jge
mov
and
popa
fcmove
cmp
mov
mov
push
add
sti
mov
xchg
mov
or
add
incb
add
sar
add
nop
pop
roll
fadds
and
aaa
push
pop
push
jae
mov
xorb
mov
sub
inc
jl
mov
jmp
movsl
cmpl
in
inc
push
add
aam
mov
cmp
inc
incb
incb
dec
pop
nop
xchg
jmp
pop
mov
test
in
mov
pop
data16
inc
sbb
scas
sub
incb
push
adc
xchg
cmp
in
insl
xor
add
mov
decb
push
sub
jle
mov
mov
es
dec
lret
mov
cwtl
ja
sbb
ret
and
jp
inc
decb
add
xchg
cmp
fisubl
jecxz
gs
addb
sub
pop
push
add
sub
incb
sub
dec
inc
cltd
adc
das
lret
nop
adc
pop
push
cmp
lret
cltd
cmpb
push
dec
mov
jecxz
xor
cs
outsl
mov
test
decb
pop
push
xor
aam
sbb
sbb
lahf
and
push
inc
pop
dec
inc
add
insl
stos
lods
push
pop
mov
mov
add
jno
sub
cs
cmp
push
iret
jbe
add
pop
aas
xchg
pop
or
xchg
fs
imul
test
xchg
inc
scas
inc
pop
jmp
add
ret
xchg
mov
inc
push
call
pusha
stos
data16
jg
jno
mov
fadd
lods
test
mov
cmp
mov
pop
stos
push
mov
cmpsb
movsl
jl
out
clc
stc
adc
sahf
xor
xor
add
sti
mov
jne
rolb
incb
test
xor
jo
add
push
cmp
inc
jno
stc
jns
fidivrs
pop
gs
cmp
loop
test
incb
sub
pop
sahf
lds
add
rcll
lock
mov
scas
mov
daa
pop
jb
decb
cmpsb
pusha
add
jbe
push
mov
and
jge
cmp
dec
std
cli
aas
repz
push
dec
cmp
dec
fwait
or
push
cmpsb
inc
lea
add
mov
jmp
xchg
repnz
jmp
ja
mov
jbe
dec
jge
movsl
fisubrs
mov
jae
pop
dec
add
xor
jecxz
ja
sub
pop
fstl
xchg
xchg
loopne
push
fsubrs
repnz
dec
out
in
adc
jbe
push
decb
mov
sbb
das
ljmp
sbb
pop
das
ret
fidivs
pop
add
sub
lods
adc
in
ret
mov
sbb
sbb
cmp
decb
cmp
int
add
hlt
insl
push
shl
xchg
in
push
xor
inc
add
mov
pop
pusha
add
or
shrl
jp
push
push
adc
jo
mov
push
scas
repz
es
decb
mov
fs
outsl
fucomip
xchg
fwait
pop
hlt
data16
inc
shrl
xchg
jo
xchg
mov
sub
cmp
add
mov
mov
decb
pop
xor
jmp
orb
in
jecxz
fsts
movsl
sarl
add
scas
fs
sbb
jmp
pop
mov
repnz
mov
sub
decb
xchg
test
decb
add
inc
aas
outsl
in
out
out
xor
cmpsl
mov
cmp
push
add
cmp
fwait
mov
nop
xchg
ds
loop
pop
sahf
push
pop
dec
fcmovu
xchg
addr16
fists
pop
shl
dec
add
arpl
jge
adc
aad
int
or
je
add
adc
rclb
or
ja
fistpl
add
xchg
movsl
lock
xor
pop
negb
pop
stos
push
mov
fsubrl
cli
jp
push
fdivrs
ss
push
lea
into
fcmovne
adc
pop
mov
lds
mov
repz
fsubs
dec
sti
lret
loop
mov
mov
dec
incb
push
aad
jge
shl
int3
xchg
fwait
cmp
push
pop
test
roll
movsl
sub
mov
das
xchg
push
stc
imul
in
sub
lahf
lds
movb
incb
incb
add
addb
xor
inc
inc
jo
mov
or
decb
lahf
mov
test
mov
add
arpl
fucom
outsb
popa
inc
aam
xchg
cmp
ret
dec
loope
mov
loope
mov
sbbb
out
jge
inc
add
cmp
dec
hlt
pushf
inc
mov
jge
jge
add
ds
mov
call
mov
es
or
adcl
xchg
cmp
sub
sub
inc
movsb
std
js
mov
jecxz
add
mov
testl
or
decb
xor
cmpsl
pop
fs
mov
cmp
add
fildll
and
imul
fbld
add
stos
arpl
xchg
fimull
inc
jle
push
add
adc
and
inc
jo
jmp
push
pushf
push
mov
dec
push
cmp
repz
sbb
cmpl
repz
xchg
cmp
jo
add
outsl
lods
jmp
mov
add
and
add
int
add
adc
je
jge
mov
mov
ja
leave
pop
stc
in
insb
add
cs
cs
cli
push
lock
jp
add
sbb
mov
sub
jp
or
cmp
jbe
add
pop
cmpsb
add
test
add
enter
pushf
add
sub
repnz
add
sti
std
gs
dec
call
pop
cwtl
out
add
nop
mov
insb
decb
jbe
xchg
inc
incb
subl
shlb
add
shl
adc
cmc
jb
xchg
mov
adc
cmp
repz
scas
popa
and
decb
decb
adc
xchg
add
jl
push
rorl
add
getsec
inc
decb
aaa
push
rolb
into
xchg
ss
pop
iret
hlt
imul
mov
jle
jmp
popa
fildl
repnz
mov
inc
decb
add
or
mov
add
xlat
mov
xchg
cmp
push
in
loopne
fcmovne
and
xchg
push
mov
dec
add
setbe
pop
dec
imul
incb
repnz
jb
add
inc
add
enter
mov
jecxz
pop
jmp
push
imul
add
movsl
lahf
mov
icebp
adc
add
jecxz
cmpsb
cmpsb
and
repz
mov
jmp
loopne
outsl
lods
inc
dec
ss
test
sahf
sbb
loope
fiadds
add
stos
ljmp
orb
or
dec
inc
imul
imul
mov
enter
sub
decb
incb
xchg
icebp
push
push
jnp
sbb
jle
bound
xlat
out
repz
aaa
test
add
fnsave
enter
lahf
aad
add
enter
add
cli
fnstsw
stc
dec
dec
mov
push
add
cmp
and
jns
leave
sub
shll
bound
sub
scas
orl
xchg
cmpsb
ljmp
xchg
mov
bound
dec
cli
adcb
mov
bswap
xlat
xchg
pop
inc
data16
incb
out
lahf
stos
fldt
add
sahf
inc
push
mov
cmp
xchg
xor
iret
ljmp
xor
mov
mov
xchg
insb
add
int3
cmp
jle
dec
add
adc
dec
add
imulb
paddb
loope
push
add
inc
mov
pop
in
cli
stc
xchg
sub
js
adc
adcb
push
add
add
jmp
xchg
sbb
popa
cld
xchg
mov
add
incb
inc
loop
in
out
cmp
out
jl
scas
cmp
adc
scas
mov
stos
mov
inc
mov
and
decb
xchg
fsubr
mov
mov
push
pop
adcb
jnp
aaa
add
jmp
mov
lahf
cmpsl
call
xor
in
jecxz
fstpl
sub
push
enter
sbb
mov
aad
xchg
clc
jne
mov
je
hlt
lcall
mov
xchg
lcall
add
mov
sub
enter
cmpsb
lahf
add
scas
pushf
sub
scas
ret
movsl
fs
in
add
push
mov
mov
stc
jecxz
movsb
adc
add
les
ss
adc
out
movsl
pop
test
lods
pop
xchg
mov
and
cmp
arpl
incb
ret
mov
xor
cmp
rolb
incb
fs
bound
stos
push
mov
ja
and
enter
mov
fcmovnbe
add
xchg
addr16
push
jle
dec
xor
push
mov
sbb
inc
add
or
loop
or
fcmovbe
pop
sbb
jns
jl
push
repz
data16
movsl
mov
add
adc
xlat
pop
lret
into
cli
std
clc
xlat
hlt
rcl
out
int3
outsb
add
negb
aas
divb
adc
rcll
mov
enter
add
xor
dec
xchg
cmp
mov
cmc
or
and
xor
stos
dec
add
into
clc
outsl
js
mov
add
cmp
push
add
jle
pusha
add
test
mov
add
call
add
xlat
inc
je
daa
aaa
nop
dec
sub
push
add
decb
mov
in
js
mov
movsb
dec
in
jns
xchg
cmc
pop
mov
xlat
add
mov
pop
cltd
jg
jne
pop
mov
xchg
incb
lret
in
repz
sub
mov
xchg
imul
push
ja
aam
lret
enter
ja
pop
mov
push
sub
push
sbb
or
frstor
decb
lods
xor
decb
and
lock
in
loopne
fldenv
es
decb
mov
int3
lods
xlat
out
sbb
cld
add
enter
mov
push
loop
cs
inc
out
jge
push
add
ret
sbb
xor
stos
clc
fcomip
ret
push
decb
frstor
or
push
outsb
add
or
fmull
pop
push
add
jl
lds
ror
push
test
jp
add
movsl
jno
aad
pand
shlb
add
adc
incb
movsb
cli
ss
xchg
add
clc
dec
add
sub
xor
out
ja
jg
or
popf
jecxz
insl
in
mov
mov
and
sub
or
adc
pop
sbb
in
xchg
inc
mov
xlat
lret
and
xor
test
decb
sub
ss
mov
cmp
fistps
fwait
data16
xchg
mov
mov
insl
xor
in
movsl
sbb
dec
nop
push
clc
fs
decb
sbb
fs
fwait
mov
mov
xchg
jmp
icebp
pusha
add
dec
daa
mov
decb
scas
and
decb
hlt
add
cmp
cmpsb
and
add
icebp
add
and
ds
jl
fsubl
cmp
dec
incb
popa
stos
out
and
dec
idivl
or
jne
dec
add
mov
ja
imul
shll
sbb
mov
jne
sbb
push
jbe
cmp
mov
sbb
adc
or
dec
push
or
decb
xchg
flds
mov
mov
add
sbb
addr16
xchg
xor
dec
cmp
testl
jns
cmc
xor
incb
lcall
dec
mov
fistpll
dec
incb
push
sub
pusha
incb
pop
insb
add
pop
cmpb
mov
pop
popa
outsb
add
mov
aas
outsl
jnp
nop
lahf
xchg
add
mov
add
ds
sub
shr
je
add
insb
incb
xchg
push
xchg
xchg
mov
and
and
xor
outsb
pop
mov
shll
cs
out
xchg
int
push
movsl
xor
test
and
cli
dec
jecxz
or
jnp
pop
mov
sub
mov
in
pop
or
mov
testb
mov
incb
lds
int
stos
lahf
pop
pop
into
enter
test
sbb
add
cli
cmpsl
adc
in
xor
call
jg
pop
xchg
lea
mov
decb
xchg
outsb
mov
mov
loopne
adc
dec
mov
xor
cli
inc
add
js
scas
in
in
adc
sub
pop
aad
dec
iret
xlat
in
fstpt
cmpsl
and
outsl
scas
mov
arpl
jne
das
and
add
dec
outsb
add
out
mov
add
lahf
daa
outsl
js
inc
or
ficoms
pop
lcall
xchg
fimull
incb
addb
mov
ja
xor
daa
negl
js
and
insl
sub
mov
nop
inc
cs
xor
incb
fldcw
in
push
out
fldcw
pop
pop
pop
push
stos
rcrb
sub
mov
xchg
jge
xor
shll
xchg
fs
mov
sbb
fldt
decb
incb
mov
test
imulb
add
mov
add
xor
orb
pop
stos
hlt
enter
mov
ja
add
in
testl
loopne
and
cmc
cmp
sub
aaa
sbb
mov
imul
repnz
jecxz
mov
in
mov
cmpsb
or
sub
push
push
adc
decb
xor
decb
add
xor
sub
inc
dec
pop
cmpsl
sbb
in
sbb
mov
sahf
dec
aas
pop
pop
mov
push
cmpsb
mov
mov
les
leave
inc
test
add
iret
popf
in
mov
add
push
lock
incb
add
or
jmp
push
aaa
shll
ja
add
movnti
dec
mov
mov
fs
jo
mov
lods
add
inc
movsl
cmp
lret
pop
lsl
fidivrs
test
xchg
test
loopne
push
add
popa
hlt
fistl
jne
pop
pusha
incb
xchg
dec
js
lods
shll
dec
mov
das
xor
jp
jg
scas
fmul
add
incb
add
shrl
push
icebp
adc
jle
cmpsb
push
mov
insb
add
inc
push
in
pop
sub
xor
aad
mov
adc
int3
shll
dec
sub
dec
test
mov
ret
xor
dec
mov
and
dec
dec
add
cwtl
inc
add
fisttps
sub
fidivrl
and
push
add
mov
jns
cmpsb
stos
in
ret
incb
decb
popa
push
or
mov
cmp
cmp
or
cmpsb
aas
ret
or
outsb
add
shrl
aas
push
das
iret
jo
mov
orl
jge
es
dec
mov
sub
push
fnstsw
add
jae
sub
xlat
clc
dec
incb
jecxz
and
decb
mov
push
pop
sbb
cmc
jecxz
popa
sub
cmp
push
imul
add
std
lods
push
pop
jnp
stos
cltd
xor
cmpb
and
pop
mov
negl
stos
or
pop
ss
lods
jmp
mov
add
repz
mov
daa
jge
aad
add
loopne
xor
jle
inc
add
and
stos
ficomps
push
sbb
nop
fmul
push
inc
mov
cmc
mov
pop
dec
decb
add
pop
mov
shll
mov
lret
inc
push
shlb
sub
decb
incb
testl
jo
sbb
mov
mov
iret
pusha
add
or
jmp
add
inc
inc
repnz
stc
int
in
stc
or
adc
dec
call
add
incb
out
mov
jb
add
int3
lahf
stc
xor
data16
jns
mov
fildl
add
pusha
add
dec
and
decb
sahf
and
les
add
add
push
sub
mov
dec
fcomi
or
cmp
add
adc
loope
ss
xor
sahf
xchg
mov
mov
and
sahf
mov
sbb
paddsw
add
cmc
dec
incb
and
out
adc
les
out
add
pop
or
and
xor
dec
add
popf
popa
je
inc
add
out
popf
arpl
add
ret
ds
xchg
mov
stos
arpl
test
and
xor
jle
cmp
add
and
bnd
das
jle
cmp
ljmp
int
add
out
stos
mov
inc
lock
inc
cmp
or
decb
and
incb
mov
push
repnz
xchg
cmp
inc
stos
outsb
fprem1
addr16
mov
incb
sbb
push
data16
and
leave
out
scas
or
decb
dec
add
repz
xchg
scas
or
nop
shrl
fistpl
xor
push
push
inc
add
xor
inc
xchg
imul
dec
ret
shl
negb
inc
mov
ficompl
repz
lods
and
out
rorl
scas
lret
incb
faddl
add
add
ds
inc
lret
add
test
pop
ret
rclb
sub
xchg
mov
mov
rolb
push
mov
add
mov
sahf
dec
cmp
fmuls
push
jns
xchg
adc
incb
test
add
cltd
pop
and
jns
stos
scas
xchg
inc
outsl
rcl
insl
iret
stos
jl
mov
sub
inc
add
mov
jge
cs
fscale
adc
js
pop
and
incb
outsb
add
pop
sub
ficomps
jg
mov
or
ja
out
insl
push
add
icebp
in
test
jno
mov
sub
or
daa
or
or
push
cltd
ljmp
stos
jo
les
in
dec
add
addr16
mov
sti
adcb
xchg
cs
dec
outsb
add
sbb
mov
pop
or
and
decb
mov
inc
testb
jge
loope
aad
decb
cmp
cmpsl
push
rol
cs
xor
sahf
pop
push
sub
fsubs
rcll
or
cld
sar
out
jl
and
sarb
mov
pop
sub
call
jne
lret
xor
inc
push
test
inc
add
dec
incb
fadd
dec
mov
add
add
xchg
iret
jne
add
fidivrs
pop
lods
sar
and
and
fadds
cmpsb
xchg
ret
rcrl
xchg
push
arpl
ss
lret
sbb
xchg
pop
xchg
ljmp
mov
leave
inc
cs
jl
xchg
hlt
push
or
mov
lret
std
out
aaa
andb
cmp
gs
fdivrl
jmp
cmc
inc
add
pop
xor
mov
stos
lahf
cmp
mov
ret
push
sbbl
fisubrs
lods
push
inc
inc
add
ret
adc
clc
out
insl
mov
or
jno
mov
data16
adc
cmpl
inc
lret
incb
xchg
scas
aam
cmp
sbb
repz
fwait
test
fwait
dec
adc
enter
pop
fmuls
out
ja
jns
xchg
addr16
mov
sahf
dec
add
sarb
fcmovbe
inc
add
addr16
pop
cmpsl
cmp
movsb
lods
lcall
inc
dec
mov
aad
gs
jg
aad
sub
add
sub
jbe
in
mul
std
shrl
fidivrl
jge
fs
adc
xchg
rclb
lret
repz
pop
push
sub
inc
es
repz
adc
fdiv
in
push
add
sbb
mov
mov
inc
add
jp
inc
push
mov
pop
testl
xor
mov
fiadds
decb
xchg
insb
dec
bnd
ljmp
in
test
or
push
inc
mov
jp
iret
int
lock
xchg
jp
iret
scas
xor
sbb
mov
fisttpl
ret
pop
mov
or
incb
xchg
cld
sbb
or
sbb
adc
add
inc
push
mov
inc
cli
inc
inc
fwait
cmp
not
add
fsubs
std
xchg
cwtl
cmp
add
fmull
fnstcw
push
stos
inc
adc
test
xlat
insb
push
int
lods
and
or
mov
adc
dec
lcall
loop
mulb
cmp
add
pushf
mov
in
push
mov
mov
repnz
push
loope
shll
inc
mov
addr16
call
lret
rclb
cmp
pusha
ljmp
pop
ja
cmp
daa
inc
add
je
mov
iret
mov
dec
add
mov
ljmp
dec
xor
mov
push
mov
es
jo
mov
sbb
sbb
jg
or
pusha
add
mov
xlat
cmpsl
pop
adc
out
add
aad
sbb
xor
ret
xchg
inc
xchg
or
sbb
arpl
movsl
xor
aam
add
push
fcoms
faddl
cmpsb
outsb
mov
ja
fdivrs
shl
jl
jge
and
add
test
add
xchg
mov
imul
jg
pop
cs
ds
sub
lods
push
xor
mov
sarb
pop
clc
ret
push
cltd
cmc
test
mov
ja
adc
push
cmpsb
iret
add
adc
add
sahf
aam
es
adc
jl
xor
fdivrl
inc
add
rorl
ret
movsb
insl
and
ss
scas
mov
inc
sub
push
mov
mov
nop
arpl
insb
xor
insb
add
inc
cs
and
out
sbb
aad
sbb
mov
cld
cmp
mov
mov
fstps
je
push
rcr
inc
adc
push
push
dec
aam
decb
lcall
loop
pop
shll
pushf
push
and
sbb
ja
mov
sub
scas
cltd
std
into
scas
hlt
leave
lds
into
cmp
push
aad
mov
mov
int3
ret
xchg
adc
fisubrl
mov
cli
pop
pop
mov
lahf
lret
aam
add
pushf
mov
insb
add
jmp
or
cmc
fldenv
add
fcoms
and
rcrb
cmp
js
daa
pop
popa
int
pop
add
cmp
outsb
sub
popa
inc
decb
adc
iret
mov
or
incb
jl
sub
stc
pop
pop
lcall
add
aas
sahf
gs
push
pushf
and
mov
inc
xlat
test
jp
xchg
mov
ret
and
push
push
and
dec
xor
lods
lcall
fdivrs
jnp
xor
cmpsb
dec
add
jl
scas
sub
mov
add
incb
add
dec
sub
sti
or
mov
jbe
or
sti
cmpsb
leave
mov
add
idiv
pop
and
mov
outsb
xor
hlt
aas
jecxz
add
pop
lahf
pusha
add
adc
fldcw
pop
es
mov
jge
add
inc
jecxz
add
in
loopne
sbb
addr16
loopne
add
decb
shld
mov
sahf
sub
incb
decb
outsl
jnp
push
xor
sbb
dec
add
dec
mov
mov
outsl
and
mov
int
adc
lods
in
pusha
xor
jle
xor
jl
decb
stc
cmpsb
test
inc
push
mov
ds
out
jnp
decb
add
fwait
movsl
push
out
hlt
fnstcw
or
push
xchg
cmp
adc
xor
xor
mov
call
xchg
dec
daa
lret
pop
pop
cld
call
adc
jge
movsb
sbb
jecxz
pop
jg
cmpxchg
testl
cmp
add
xor
mov
ret
movsl
daa
std
lods
cs
jno
jmp
add
adc
add
inc
adc
push
les
call
test
xor
es
jne
pushf
ret
dec
sub
incb
mov
incb
popl
pop
pop
into
test
bound
cmp
jns
lods
jno
xor
mov
add
pop
rcll
push
outsb
inc
shll
inc
aad
mov
aam
aam
mov
mov
dec
add
test
mov
sub
sub
popf
mov
pop
jl
add
sbb
push
incb
mov
add
mov
les
in
push
dec
add
sbb
mov
decb
add
dec
add
mov
mov
mov
dec
std
pop
pop
adc
push
dec
lds
pop
or
mov
fsubrs
add
cmp
add
dec
pop
or
mulb
add
rcll
imul
mov
movl
inc
lods
in
stos
push
and
outsb
cmp
stc
cmp
jmp
add
xchg
lock
inc
dec
dec
push
mov
jp
add
in
xchg
mov
cltd
lret
out
push
adc
add
out
fwait
or
decb
lcall
jmp
decb
xchg
push
mov
scas
enter
sbb
aam
add
dec
add
cmovp
dec
inc
and
mov
fistps
mov
adc
jge
rolb
mov
add
imul
jbe
in
testl
test
add
sbbl
or
cmp
mov
adc
jnp
int3
xor
fsubl
repnz
hlt
pop
addr16
shrl
decb
leave
addr16
xor
popf
pop
outsl
xchg
or
dec
repz
scas
push
popf
inc
add
xlat
sti
xor
and
ds
decb
and
mov
es
jge
mov
rolb
or
mov
mov
sbb
lea
fsub
xor
push
mov
outsl
mov
stos
xchg
je
inc
mov
mov
ss
and
cltd
jmp
scas
sub
insl
sbb
sub
push
dec
add
pop
mov
add
addr16
lods
cmp
enter
mov
add
test
add
or
inc
in
lock
imul
cs
inc
add
sub
sahf
add
add
imul
mov
dec
add
bound
cld
fsubl
adc
pop
xchg
es
std
sub
data16
in
mov
push
incb
lret
mov
xchg
outsl
clc
inc
outsl
shll
adc
cmp
push
xchg
add
jg
addr16
dec
xor
add
or
shll
cmpsl
loop
mov
idiv
cmp
add
outsb
jns
das
pop
sahf
scas
inc
sbb
decb
mov
mov
jle
insl
mov
cmp
test
mov
inc
push
inc
add
jmp
add
arpl
je
fcoml
ret
arpl
push
sbb
push
and
pop
jl
pushf
hlt
add
incb
mov
mov
sahf
int
aad
cmp
pop
jl
jl
xor
xchg
xor
push
adcb
pop
leave
je
movsb
adc
xchg
cmp
mov
add
push
xchg
xor
cmc
dec
add
adc
jle
push
push
or
mov
xor
rorl
fs
cmp
mov
ret
xchg
add
xor
mov
mov
cmp
data16
xchg
or
pop
scas
insl
divb
lret
cltd
sub
decb
incb
stos
sbbb
add
aam
stos
nop
shl
fwait
js
hlt
xor
pop
mov
cli
rcll
iret
mov
scas
fwait
out
xlat
mov
cmp
or
add
stos
dec
aad
dec
jle
int
cmp
aad
sbb
add
dec
push
scas
push
es
pop
adc
decb
sub
sti
popf
or
inc
pop
jmp
fs
cmpsl
out
outsl
fmul
fsubr
dec
pop
adc
sbb
cwtl
scas
push
add
inc
inc
test
outsl
pop
imul
add
std
xlat
std
ret
dec
fildll
adc
int
pop
stos
pop
mov
pusha
add
pop
jbe
iret
mov
xchg
or
fs
fwait
fs
fistl
incb
decb
hlt
xor
push
mov
ljmp
aaa
inc
add
fwait
or
jbe
mov
iret
dec
lock
test
pop
sbb
stos
imul
jmp
mov
push
add
pop
bound
decb
movl
xor
incb
sbb
cmp
jns
mov
das
xchg
jne
mov
mov
les
test
incb
mov
mov
scas
stos
sbb
adc
insl
out
push
scas
add
in
sbb
and
mov
xchg
inc
add
lods
shl
nop
push
ljmp
push
iret
cld
test
pop
daa
jae
pop
stos
cmp
lret
xchg
cmpsl
int3
add
decb
add
jecxz
add
lock
cmpsl
and
decb
clc
sub
mov
cmp
xor
iret
je
mov
or
jno
add
fistps
outsb
add
adc
out
andl
dec
mov
andb
loop
aas
xchg
jle
ficoms
adc
and
mov
fsubl
dec
insl
pop
sbb
test
or
cld
mov
adc
icebp
mov
inc
call
pusha
mov
add
add
test
pop
mov
inc
pop
jg
lock
lods
add
cmpsl
xor
or
pop
fcomps
mov
divl
jnp
jecxz
xor
jp
add
push
add
addr16
add
stc
adcb
push
pop
cmp
daa
cwtl
inc
add
mov
xchg
dec
jb
je
loop
push
push
inc
loopne
test
cli
pop
push
xchg
fists
aaa
mov
add
pop
bound
clc
pop
mov
add
dec
add
cmp
icebp
insl
dec
add
jecxz
std
aaa
ljmp
test
dec
add
push
std
lret
arpl
mov
stos
jmp
aaa
cmp
push
scas
adc
mov
das
aam
xlat
xor
inc
mov
negb
cmpsl
divb
sbb
add
dec
mov
cmp
iret
jno
push
repnz
cwtl
pushf
pop
das
or
pusha
add
sub
and
aaa
add
outsb
add
xlat
testb
data16
mov
cs
sbb
mov
add
xorl
push
jne
jecxz
mov
adc
mov
sbb
sub
popf
out
stos
and
outsl
rorl
dec
add
xlat
sahf
adc
loopne
jmp
inc
loop
stos
fidivrl
rolb
ret
data16
decb
mov
add
imul
push
fwait
clc
imul
imul
push
add
mov
outsb
jo
test
push
loopne
cs
push
std
sbb
or
mov
orl
mov
xchg
sbb
nop
call
shlb
loopne
popa
filds
jge
dec
pushf
nop
les
fisubrs
mov
data16
in
in
cmp
popa
daa
js
sarl
and
loop
shlb
dec
add
aam
xor
es
repnz
sub
pop
lods
cmp
outsb
add
sbbb
mov
cs
push
mov
decb
add
leave
fiadds
xor
lret
fisubrl
and
sub
fdivr
lret
pop
insl
iret
outsl
gs
cmp
cmpsb
pop
inc
lea
or
pop
loopne
int
aas
inc
xchg
outsb
hlt
jno
and
jmp
aam
and
pusha
add
add
inc
icebp
mov
lret
mov
popl
dec
jecxz
cmp
les
cmp
sbb
scas
push
mov
ret
jp
add
aam
sbb
jge
popa
xchg
inc
jmp
je
jbe
lahf
mov
cmpsb
dec
add
inc
add
pop
loope
add
rorb
ds
scas
cmp
mov
in
xor
cmp
cmpsb
dec
ret
out
jge
pop
icebp
lods
adc
mov
sub
xchg
shrb
int3
add
xor
outsb
add
xchg
lea
mov
cltd
fcoms
imul
add
mov
add
cmpsl
sti
or
jb
decb
mov
pop
in
dec
cmpsb
cltd
out
add
insl
pusha
add
mov
test
in
adc
push
testl
cmc
inc
add
xchg
clc
cs
xor
aam
inc
outsb
incb
xlat
imul
icebp
sbb
add
out
sti
ds
sub
jne
outsl
push
pop
mov
add
gs
test
fwait
sub
fisubl
lock
xor
arpl
mov
add
dec
stc
mov
call
call
dec
add
test
and
xor
cs
mov
stos
lds
xorb
addr16
mov
cld
dec
jae
jecxz
add
mov
add
out
dec
insl
mov
pop
es
cwtl
and
dec
je
les
out
lcall
xchg
sub
mov
or
incb
shr
test
or
sbb
cwtl
pop
jmp
push
enter
jo
repnz
dec
add
out
cwtl
stos
jae
daa
inc
inc
jno
je
aam
dec
cmpps
cmc
out
bound
ss
xor
test
inc
ficoml
imul
adc
add
or
incb
mov
scas
gs
popf
hlt
cltd
das
and
adc
inc
add
cmpsl
mov
loope
fldenv
rcrb
pop
ss
mov
adc
add
ds
push
add
jecxz
out
andl
movsb
repz
adc
dec
sub
and
mov
sub
decb
add
ret
loopne
data16
or
dec
mov
sub
scas
push
fdivrl
cmp
loopne
adc
lock
mov
push
incb
lods
rolb
cs
inc
xchg
xchg
jbe
xchg
mov
sarl
push
incb
add
ret
dec
add
add
outsb
add
add
decb
add
outsb
fisubl
outsl
push
jo
xchg
xor
scas
sti
in
icebp
lret
sub
dec
incb
decb
incb
les
jg
dec
add
test
mov
sub
sbb
or
jb
mov
outsl
ficoml
int
ret
mov
mov
jno
cmp
je
push
inc
data16
jne
cmp
je
insl
inc
and
mov
jmp
std
lret
and
add
cli
lea
fs
jno
jno
lahf
lea
mov
pop
lret
sti
push
decb
cwtl
popa
out
add
rolb
decb
adc
fidivs
in
outsl
std
addl
andb
decb
add
decb
cltd
and
imul
cs
dec
pop
pop
shlb
sti
stos
loope
lods
cmpsb
jle
lods
lods
outsb
add
cs
in
jo
add
and
movsb
int3
cli
je
push
in
mov
jmp
pusha
add
test
adc
inc
xor
sub
sti
jle
out
and
lret
mov
loop
add
incb
outsb
lods
mov
cmp
adc
loope
jns
in
test
lock
fs
orl
and
cwtl
add
subb
jp
inc
es
adc
inc
add
orl
nop
pop
fidivl
test
pop
mov
cmpsb
add
add
loop
push
pop
mov
dec
aam
in
mov
or
stc
cmpl
sarl
cmpb
pop
in
push
mov
stos
inc
add
xor
decb
rcrb
and
movsl
cmp
adc
pop
mov
push
mov
incb
into
inc
repnz
jge
int
mov
scas
int
shlb
push
test
je
push
push
push
push
mov
flds
sarl
xchg
iret
lcall
mov
es
mov
incb
daa
pop
inc
dec
decb
decb
ret
jp
xchg
movsb
pop
add
adc
mov
mov
in
push
es
pop
sar
pusha
test
push
int
sbb
mov
push
pop
xchg
ljmp
add
cmc
jmp
xor
add
js
loopne
push
add
sbb
cwtl
mov
xchg
sahf
adc
add
pop
inc
inc
lahf
sbb
insl
jne,pt
xor
or
incb
add
cmp
mov
mov
and
dec
or
fisubrs
out
loop
add
js
jge
xor
cmp
pop
lcall
jae
fidivrs
add
dec
cmpsb
inc
mov
push
mov
and
xchg
dec
push
insl
mov
scas
mov
push
inc
decb
or
push
in
inc
mov
sarb
leave
adcb
shll
and
fs
sti
cmp
xchg
mov
iret
and
pop
xchg
push
imul
mov
dec
popa
inc
decb
adc
inc
mov
dec
fisttps
mov
add
sub
lcall
xor
add
and
js
add
pusha
add
xlat
fstp
notb
daa
push
popf
nop
jb
fstpt
sub
test
cmp
pop
add
mov
xchg
in
iret
jp
jnp
cld
pop
jmp
rcl
stos
push
xchg
shrl
inc
pop
adc
popa
lods
ret
push
pop
dec
decb
push
mov
push
mov
jno
cmp
decb
addb
push
mov
xor
mov
mov
stos
sub
xchg
xor
mov
insb
and
shl
push
imul
pop
insb
add
lods
lods
shr
xchg
jge
hlt
ret
mov
mov
and
incb
int
fwait
jecxz
loop
adc
incb
fadd
cmc
stos
insb
add
lock
lock
fnstenv
jno
pusha
add
xchg
adc
fs
cld
ret
add
fs
outsl
clc
imul
incb
adc
and
decb
pop
xchg
push
lea
xchg
movsl
pop
mov
test
jbe
addr16
xchg
pop
jnp
cs
decb
jle
scas
pop
xchg
pop
push
outsb
add
and
incb
pusha
repnz
sbb
sbb
adc
fidivs
xor
sar
xor
mov
jns
cmpsb
fnstcw
les
add
xchg
fcompl
incb
mov
pop
xchg
add
sahf
xchg
fdivp
movsl
xchg
arpl
scas
out
pop
jae
sti
add
mov
sahf
jg
out
jecxz
movq
mov
dec
add
dec
add
add
pushf
or
in
add
roll
mov
aas
cmp
fldenv
icebp
xor
decb
xlat
sbb
xchg
xor
or
imul
adc
in
mov
sub
mov
sub
int
insl
aam
sbb
movsb
push
pop
push
jno
push
rolb
pop
pushf
jb
push
push
inc
add
mov
stc
stos
sub
pop
ja
ja
sahf
loop
repz
clc
xchg
outsl
mov
test
push
add
nop
aas
mov
mov
jno
add
dec
add
out
inc
add
mov
jb
xlat
into
and
fsubrp
cltd
call
ja
cmpsb
call
lods
add
lods
sub
dec
stos
and
push
mov
inc
loop
add
lcall
push
stos
mov
out
adc
icebp
out
nop
push
cs
cmpsb
imul
push
mov
xor
dec
and
incb
pop
pop
xchg
btr
mov
add
pop
jne
push
mov
mov
push
jecxz
add
push
cmp
push
pop
cmpsb
fcoms
adc
int3
xchg
stc
loop
jge
incb
popa
adc
add
inc
add
sub
sub
incb
lods
mov
and
inc
add
adc
add
xor
mov
test
push
movsl
mov
sahf
fcom
mov
jb
jns
repnz
dec
mov
add
movsb
cmc
and
incb
jle
jmp
test
mov
arpl
adc
mov
inc
add
pop
fdivrl
aad
cs
push
mov
sti
xor
outsl
sub
movsb
hlt
push
aaa
clc
and
dec
out
sub
call
imul
add
jae
mov
add
int
sahf
adc
add
nop
repnz
cmpsb
shl
jp
xlat
jae
lods
in
mov
je
dec
sub
lods
shl
cld
jbe
add
in
dec
inc
inc
aaa
mov
decb
mov
jns
mov
pop
pushf
sbb
mov
or
push
fdivrp
fsubrl
int3
flds
add
aam
inc
incb
jne
popf
dec
add
or
pop
call
pop
mov
sub
neg
adc
xchg
aam
adc
sub
fsubl
fsubl
andl
jae
mov
inc
sbb
mov
mov
data16
decb
out
nop
mov
sbb
sbb
and
push
fcoml
rcll
hlt
dec
add
push
in
sbb
add
pop
hlt
cld
lret
jne
cmc
push
dec
decb
imul
mov
lret
incb
loope
sti
jle
mov
pop
int3
mov
xor
movsl
cwtl
pop
xchg
sbb
mov
pop
inc
test
dec
stc
jecxz
inc
decb
jmp
or
ret
jno
sti
sti
xchg
xor
addr16
adc
add
nop
add
adc
adcl
sub
lahf
aam
mov
mov
mov
fsts
lods
imul
push
pop
mov
sub
add
pop
daa
pop
in
outsb
mov
sarl
xchg
popf
cli
imul
mov
cmpsb
xor
mov
pusha
add
sub
mov
sar
and
incb
dec
add
adc
adc
inc
add
aad
mov
push
outsb
jne
insb
in
push
mov
stc
adc
lods
fnstsw
pop
std
sub
js
jns
adcb
inc
add
sub
out
imul
mul
pop
push
scas
inc
jae
dec
add
jbe
iret
xorb
subl
test
add
lahf
or
jb
pavgw
mov
ljmp
mov
pusha
add
loop
jg
add
cmp
je
mov
incb
add
sbb
arpl
sarb
sbb
sbb
jnp
xchg
jmp
mov
pop
sbb
rolb
cmp
or
loop
add
cltd
xchg
push
jle
cs
sbb
or
pop
lret
orl
mov
jne
rcrb
scas
and
scas
push
pop
jno
mov
cmp
push
cmp
add
incb
add
andl
cmpsl
es
loope
xor
cmp
in
jmp
repnz
xchg
mov
fsubl
add
pop
mov
xor
push
xor
xor
inc
add
pop
imul
pop
fs
sbb
aam
fnstcw
call
ret
adc
add
and
scas
push
jle
mov
aaa
xchg
rolb
decb
xor
mov
and
incb
or
jmp
mov
push
fcmovb
popf
aam
fidivs
rcrb
sub
sub
incb
mov
icebp
test
and
sti
xchg
call
add
jle
mov
loop
and
ss
add
loopne
add
sti
mov
pop
push
jo
pop
jmp
nop
xchg
adc
sub
lods
or
incb
add
pop
aad
imul
adc
cmp
mov
and
add
adc
dec
imul
and
cmp
mov
sbb
jp
movsl
sbb
jnp
std
test
lret
pop
movl
loopne
or
decb
lock
sbb
insb
call
iret
sbb
clc
inc
jmp
jae
add
lret
lds
stc
lds
add
inc
dec
rorl
ror
jae
sahf
ret
outsl
cli
nop
fsubr
out
jno
xchg
lcall
ljmp
stos
fisubl
mov
jo
push
push
cli
or
jg
add
push
dec
add
repz
sbb
mov
xchg
mov
sti
fwait
outsl
jne
adc
outsl
cwtl
jg
in
mov
loopne
inc
adc
outsl
inc
mov
aad
cs
aam
cwtl
repnz
add
and
ljmp
fimuls
mov
or
add
mov
cmp
inc
add
mov
sti
outsl
sbb
dec
decb
insl
ja
xor
sub
dec
ret
push
arpl
sub
mov
pushf
jns
nop
int3
cmp
jbe
pop
xchg
inc
es
lret
test
movsb
in
or
mov
ja
aas
push
push
xor
add
ds
clc
push
add
int
imul
cmpsl
mov
dec
icebp
test
js
pop
inc
push
pop
testb
mov
jne
cli
mov
and
pop
repz
and
pop
jb
fst
and
ret
in
cmc
sub
dec
fadd
cld
daa
adc
in
incb
xchg
rcrb
add
mov
outsl
adc
cli
mov
ds
mov
arpl
sub
incb
test
add
mov
sbb
leave
outsl
and
cmp
lods
ret
lods
mov
cmp
ja
imul
pop
fiaddl
loopne
cmp
xchg
and
xchg
or
cwtl
cmp
add
fiaddl
in
inc
add
dec
popa
fs
dec
cwtl
inc
cmpsb
nop
xchg
stos
adc
rcr
add
or
enter
addb
pop
mov
loopne
xlat
shl
sub
popf
call
insl
cwtl
addr16
jb
mov
adc
add
mov
or
clc
sbb
sbb
pop
jbe
lea
jl
fisubl
mov
jge
loopne
repz
push
pop
mov
jge
loop
mov
ds
mov
sub
mov
add
dec
bound
cwtl
incb
add
dec
das
divl
je
mov
shlb
and
aam
hlt
test
mov
in
cmc
jne
lret
push
adc
mov
loope
je
mov
decb
decb
sub
push
rclb
add
xchg
sbb
rdmsr
std
inc
scas
jns
add
cmp
add
lcall
pop
daa
jae
push
repz
cmovg
sub
add
sub
adc
push
incb
xchg
jae
test
inc
fisubl
pop
fwait
popa
push
add
sbbl
pushf
lods
pushf
movsb
cmp
sbb
jae
push
dec
ljmp
add
mov
scas
outsb
add
loope
cs
xchg
test
mov
dec
pop
stos
sahf
lahf
addl
mov
lcall
xor
mov
iret
lret
mov
sub
decb
add
adc
xchg
dec
dec
int3
jne
loope
ret
push
jns
add
cmpsb
cmp
ljmp
loop
dec
add
pop
lcall
dec
in
xlat
aad
cmp
push
mov
or
sub
hlt
es
cld
mov
in
insl
jp
xor
jge
push
out
jp
cld
movsb
pop
sbb
das
or
sub
clc
sub
xchg
and
decb
cmp
jno
imul
mov
loopne
inc
mov
inc
add
fidivl
fldcw
rcl
pop
sbb
addr16
push
lahf
xor
dec
jns
mov
loop
sub
pushf
inc
test
mov
push
shll
dec
dec
inc
add
dec
jg
push
call
rcrl
dec
out
add
nop
test
and
mov
gs
sbb
or
adc
sub
decb
mov
push
cmpsb
add
pop
inc
sbb
mov
int3
adc
and
es
incb
dec
outsl
pop
dec
add
js
ja
xchg
arpl
inc
incb
pop
mov
inc
xchg
cli
push
sbb
mov
addr16
daa
in
out
scas
popf
push
rolb
inc
jne
mov
std
cmc
repnz
icebp
or
add
movsb
idivl
addr16
popf
fists
cmp
sbb
xor
imul
dec
int
daa
and
scas
movsl
loopne
fsubs
and
outsl
sarl
out
out
pop
and
mov
les
sub
add
push
outsb
add
movsb
inc
pop
in
or
jnp
insl
push
jne
sarb
outsl
jle
push
es
repz
and
stos
mov
sbb
rcll
js
pop
sub
cmp
dec
cmc
jno
xchg
xchg
xor
decb
and
and
daa
sub
ret
sub
cmp
ret
lret
add
mov
js
mov
mov
mov
je
arpl
addr16
clc
lods
pop
dec
push
push
or
mov
mov
pop
std
mov
jbe
push
xchg
push
xchg
les
dec
stc
dec
add
stos
sti
push
dec
add
idivb
mov
mov
dec
pop
mov
ss
adc
push
lcall
testb
cmp
or
nop
cs
loope
mov
fwait
mov
lea
mov
xor
ret
scas
push
enter
aaa
iret
out
xor
sub
mov
test
aam
ret
test
mov
inc
add
sahf
outsl
aas
clc
xchg
cltd
dec
cmp
add
repz
gs
or
ds
sub
movsl
xchg
jnp
stc
xchg
jg
lods
mov
cwtl
cmpsl
loop
lcall
ljmp
lods
mov
push
mov
shrl
jne
decb
pop
or
fiadds
popf
lods
or
mov
jo
lock
incb
testl
ret
incb
decb
nop
subb
int3
aam
cmc
xor
pop
xor
add
icebp
lret
add
ret
sbbb
xchg
inc
add
das
popf
out
lods
scas
data16
decb
je
push
in
push
aam
movsl
jo
mov
sbb
rolb
lcall
incb
inc
cmc
pop
stos
pushf
push
ja
and
sbb
out
inc
add
std
inc
pop
and
jmp
cwtl
mov
push
jle
xchg
fistl
fstps
nop
enter
je
test
shrb
cmpsb
xchg
stos
mov
push
push
dec
pop
sbbb
inc
xlat
jl
imul
xor
loope
or
pushf
lods
sahf
cmp
or
rcrb
add
sbb
sub
and
xor
imul
or
imul
add
fnstenv
insb
mov
add
or
jnp
pusha
add
sti
shrl
lret
loopne
mov
out
dec
mov
addr16
adc
push
adc
mov
aas
scas
push
int
mov
cmp
push
xlat
cmp
hlt
pop
jbe
push
aas
push
inc
aam
push
dec
add
repz
or
mov
add
xchg
shrb
rcrl
lcall
xchg
enter
outsb
test
push
jno
repz
insl
pop
mov
subl
in
fldt
push
mov
and
cli
xlat
int
cmc
addr16
ss
roll
cmpsb
movsb
popa
andl
jnp
mov
xor
sbb
xchg
ficomps
xchg
pop
jl
dec
cmp
nop
fwait
imulb
mov
ss
test
into
xor
xor
push
cltd
jbe
lahf
lea
in
stos
aad
adc
xchg
mov
es
push
xchg
pushf
xchg
orps
mull
push
add
and
popa
repnz
mov
xchg
incb
sbb
decb
es
mov
loope
outsb
mov
push
imul
lock
lods
xchg
or
movsb
in
and
js
inc
add
push
mov
pop
lahf
popf
adc
add
push
xchg
pop
and
lods
mov
jbe
dec
and
push
mov
mov
lods
jge
or
fdivrl
cmp
fisubl
pop
inc
cmp
loop
add
das
pop
negl
add
imul
test
es
decb
daa
sub
jp
inc
clc
mov
adc
or
mov
push
mov
inc
or
mov
add
cli
jp
push
cmp
sbb
cmp
xchg
and
fdivs
mov
ret
data16
fistpll
addl
ret
add
out
sub
jge
jge
jg
pop
shl
cs
jl
push
mull
icebp
push
call
sbb
out
cmp
loop
test
push
xchg
jmp
aas
push
mov
mov
pop
xchg
test
in
leave
xlat
stos
xor
pop
dec
decb
push
inc
dec
in
sbb
adc
testb
test
jb
clc
cs
push
xchg
xchg
data16
out
add
and
and
adc
add
data16
movsb
dec
add
out
push
inc
cmp
popa
inc
add
adc
jnp
mov
lret
jl
jge
or
das
pop
mov
add
outsb
add
mov
inc
add
inc
lods
mov
fmuls
jnp
dec
sub
div
iret
or
decb
nop
adc
push
add
mov
jns
and
decb
jnp
xlat
cwtl
jl
mov
push
mov
jbe
xor
bound
inc
popl
mov
cs
jmp
das
pop
xor
out
mov
ret
jge
inc
add
mov
cs
sahf
push
push
imul
das
aaa
dec
add
pop
sub
std
or
mov
sbb
cmpsl
in
decb
insl
jnp
xor
jnp
push
bnd
insb
add
cmpsb
xchg
sahf
ds
pop
adc
jno
or
pop
mov
lret
ja
jl
dec
cli
in
add
xor
aad
fisubs
fcoms
mov
enter
decb
in
jmp
push
mov
lea
hlt
out
add
mov
es
jecxz
add
jns
pop
xchg
add
xchg
jg
sub
cs
fs
ss
jns
jp
movsl
push
add
jp
mov
sub
les
fwait
pop
mov
mov
popa
movsl
add
das
dec
incb
mov
lcall
inc
roll
pop
ljmp
js
shrl
xchg
inc
pop
pushf
outsl
es
fisubrl
mov
add
mov
add
daa
jp
in
sub
fdivs
xchg
shll
ror
sub
sub
incb
mov
pop
inc
inc
std
cmp
adc
pusha
adc
xchg
or
incb
lds
std
dec
fisubl
and
sub
sbb
out
sbb
add
or
cmpb
ss
shrl
sti
andl
incb
test
ss
add
testb
add
xchg
nop
add
pop
cmp
loope
add
out
loope
sbb
aaa
lcall
fsubrl
mov
rorb
aad
jae
pop
sbb
dec
add
les
and
mov
mov
js
xor
shl
mov
inc
fdivrl
das
mov
mov
std
add
dec
push
inc
add
and
stc
push
test
imul
decl
dec
imul
xor
xor
add
decb
add
xchg
les
insb
mov
pop
pusha
add
das
lcall
das
xor
jp
jns
idiv
sahf
mov
movsb
adc
in
pop
loopne
mov
lcall
mov
ljmp
data16
daa
movsl
fisubrl
sub
incb
loop
or
cmp
aam
les
push
and
jo
pop
sbb
mov
mov
call
incb
push
loope
push
add
pop
inc
add
xor
adc
push
decb
mov
test
rol
dec
ret
ret
add
in
inc
add
cmpsl
inc
testl
mov
and
jle
pop
and
mov
add
inc
imul
add
shrb
test
push
jg
and
decb
mov
fildl
clc
adc
pop
iret
scas
fsubs
out
dec
hlt
mov
cmp
push
mov
repz
call
js
fs
hlt
shl
cltd
sbbb
loope
cmp
jo
outsl
aas
repnz
add
clc
mov
inc
pushf
cmp
into
sub
add
dec
add
out
xchg
mov
adc
inc
add
mov
arpl
daa
flds
adc
xchg
push
sub
rcr
or
dec
popa
enter
push
out
test
mov
push
inc
incb
pop
or
push
lods
xlat
inc
fwait
jp
pop
loop
sti
mov
mov
add
stos
fcoml
jge
sbb
leave
mov
add
push
xchg
outsl
jo
and
xchg
dec
add
stc
movsl
fmuls
add
mov
pusha
cmpsl
subb
incb
mov
add
clc
or
jns
sahf
loop
gs
xor
adc
cmp
out
pop
imul
das
xchg
ja
stos
scas
lcall
js
add
xor
stos
insb
add
xor
lret
sbb
sub
jb
dec
add
pop
fs
adcl
jae
and
decb
add
dec
pushf
mov
sbb
jb
or
inc
ret
in
cmp
incb
push
cmp
push
add
cli
mov
add
outsl
jmp
or
jo
pop
lret
push
loop
sbb
fwait
stos
mov
add
jle
clc
std
mov
mov
fistpll
mov
loop
repz
das
fistpll
mov
xor
out
wbinvd
dec
orb
sub
jb
incl
mov
push
out
fstpl
aam
fisttpl
jnp
mov
insb
add
lahf
xchg
fimuls
shrl
or
add
fsubrs
insl
dec
and
pop
sub
loop
out
movsb
pop
dec
add
xor
sbb
sub
decb
pop
or
das
adc
mov
ja
sbb
jl
mov
dec
incb
pop
xchg
and
cmp
decb
xor
pusha
dec
mov
rol
out
jns
add
stos
cmp
fs
data16
fsts
insl
inc
pop
xor
pushl
fwait
dec
adc
popa
sub
pop
roll
pop
out
mov
jmp
movsb
jns
push
jo
call
outsb
push
push
test
rcll
rcl
jnp
aam
inc
or
cli
mov
movsl
xchg
aad
pop
leave
lods
incb
adc
into
and
decb
xor
xlat
aaa
in
jp
fistps
adc
icebp
sbb
jge
push
inc
insb
fistps
pushf
push
into
lods
rorb
sahf
push
repnz
cs
fmull
insb
add
stos
add
mov
fstpt
xchg
dec
sbb
icebp
mov
fistpl
xchg
fwait
test
aas
rolb
add
cmp
sbb
mov
insl
inc
in
arpl
inc
xchg
or
decb
iret
add
clc
in
push
mov
daa
push
mov
decb
decb
mov
nop
cmp
add
push
inc
sub
sbb
cltd
add
inc
mov
decb
xchg
ljmp
xor
and
aad
dec
cmc
repnz
push
lahf
mov
sub
pop
es
out
cmp
add
pop
inc
xlat
stos
pushf
push
mov
add
decb
pop
sbb
add
push
sub
mov
loop
cmp
or
push
fwait
in
ret
roll
hlt
gs
popa
outsb
add
mov
push
rcrb
shr
incb
decb
or
jne
and
test
outsl
xchg
sti
loope
push
or
mov
icebp
in
adc
xchg
push
mov
rorb
es
fidivl
pop
aam
adc
dec
xchg
icebp
push
scas
mov
adc
enter
mov
add
call
in
mov
test
push
call
add
pcmpgtb
jmp
daa
outsb
sbb
push
sub
imul
ljmp
jns
pop
sbb
popa
mov
shl
pop
dec
out
aam
add
ja
sbb
fildll
sbb
outsb
add
fwait
jne
cmp
add
es
rcrl
or
dec
imul
movsl
lret
hlt
imul
push
inc
push
push
jns
stos
xor
add
outsl
cmpsb
lock
inc
ret
arpl
aaa
mov
pop
xchg
fidivl
into
and
jns
cs
sub
xchg
inc
add
xorl
daa
and
fsubrs
add
mov
push
cmp
out
inc
jle
call
ljmp
add
pop
inc
inc
icebp
scas
jae
add
pop
cmp
cmp
lods
sbb
add
ja
icebp
loop
push
mov
aam
cmp
or
mul
hlt
pusha
dec
daa
cs
inc
adc
popa
or
decb
nop
or
dec
cmpsb
push
out
and
in
fidivrs
fidivl
add
decb
push
rcrl
cmp
xchg
sarb
sahf
mov
inc
push
in
mov
adc
or
push
imul
mov
dec
lods
and
or
xor
cmp
pop
call
sub
mov
lcall
push
jae
cltd
or
push
dec
add
mov
jge
incb
fnstenv
cld
push
adc
add
inc
add
lret
xchg
int3
pop
fs
jp
xor
mov
cld
pop
out
xorb
add
mov
adc
sbbb
clc
jno
clc
cmpsl
sbb
dec
insl
cmp
pop
lods
and
lods
cwtl
or
xor
jl
js
cli
daa
mov
sbb
ss
ja
dec
test
cltd
in
aas
mov
mov
popf
out
movsb
jge
shrb
push
mov
pop
push
fcoml
mov
arpl
jne
xchg
aaa
mov
add
cmp
sbb
push
adc
lea
adcb
add
lahf
cmp
es
add
daa
pop
lds
call
lods
cmpl
mov
test
fwait
pop
add
mov
add
sbb
mov
add
je
out
orb
jne
jo
and
xsha256
cmpsb
xchg
adc
fnstcw
test
je
ret
sub
repz
int3
xchg
cli
adc
fistpll
cmp
mov
cs
test
xor
int
and
in
popa
lahf
call
xor
inc
adc
cmc
mov
xchg
add
pop
stos
scas
mov
mov
dec
dec
sbb
and
sub
dec
add
pop
les
mov
pop
rcr
and
lods
push
or
xchg
xor
add
push
int
fnstenv
lock
pusha
mov
leave
xchg
and
add
and
ds
pop
mov
mov
fisubl
ffree
pop
outsb
add
cmc
xchg
or
insl
push
cmp
xchg
mov
sti
cmp
mov
addr16
incb
add
xchg
jns
and
addr16
pop
lea
sarb
mov
insb
add
insl
je
jns
mov
sub
add
aas
clc
out
iret
pop
push
dec
std
jp
das
lcall
stos
adc
jae
iret
lret
and
idiv
sub
dec
jle
xor
xchg
push
incb
dec
incb
add
mov
push
or
ss
repnz
int
mov
xor
push
icebp
jae
dec
add
dec
add
mov
add
ret
inc
add
cmp
fidivrl
int
sub
mov
mov
fwait
mov
add
xchg
push
push
aas
cmp
cld
aad
pushf
lds
in
sar
loopne
popf
fsubp
lcall
repnz
std
jle
enter
ljmp
add
push
lods
lock
ja
pop
in
mov
cld
cmp
out
in
clc
test
sbb
mov
in
pop
or
xchg
lahf
bnd
decb
jmp
lret
mov
and
fmul
mov
add
mov
ja
jl
rorl
mov
decb
lock
ucomiss
incb
aad
repnz
cwtl
mov
jno
addr16
out
add
incb
xlat
mov
cmpsb
enter
hlt
or
inc
aas
ja
out
jnp
pushf
mov
lret
mov
add
shl
adc
fwait
aam
aad
jb
lods
jle
cld
outsl
aad
add
cmp
inc
jge
aad
xor
mov
rolb
cmp
arpl
insb
mov
sbb
add
xchg
daa
aam
cmp
lods
mov
and
xor
stos
data16
hlt
push
adc
mov
rcl
push
add
mov
add
gs
call
repnz
mov
adc
xor
sub
push
mov
jg
jmp
shll
add
inc
jns
xchg
dec
add
scas
add
lods
pusha
mov
cli
clc
add
jmp
mov
sub
jne
add
jae
cmp
xor
movsl
mov
leave
mov
add
mov
dec
shl
xchg
call
xchg
fidivrs
hlt
mov
adc
inc
incb
pop
int3
rorl
fidivrs
data16
dec
xor
das
inc
sti
or
in
loopne
jecxz
int3
jmp
pop
add
sub
gs
add
test
lods
adc
bound
cli
lds
push
sub
inc
add
mov
cld
movsb
xchg
negb
xor
mov
sahf
outsb
add
aaa
inc
sbb
and
adc
pop
ja
jbe
les
pop
clc
popf
sbb
nop
lahf
jno
clc
xor
cli
jle
out
inc
sbb
js
pop
clc
pop
xchg
xchg
sbb
cmp
in
dec
incb
xchg
in
jbe
out
xchg
repz
nop
and
aad
cmp
xchg
int
inc
xor
std
pushl
sub
lock
add
or
aaa
js
ljmp
mov
negl
or
ret
sbb
ljmp
stc
scas
in
movsl
stc
pop
leave
mov
mov
sub
nop
cmp
data16
sbbb
adc
mov
faddl
add
pusha
pop
fmuls
lret
cmp
or
add
pop
or
cmp
or
xor
ficoml
jo
lret
daa
imul
add
mov
decb
clc
pop
sub
lock
into
dec
mov
jmp
xor
cmp
aam
add
decb
out
repnz
add
test
pop
outsl
nop
daa
jecxz
add
inc
jle
pop
filds
pop
mov
add
fisubl
sub
mov
adc
or
test
mov
pushf
sub
jmp
int3
dec
cmpsl
add
sub
xchg
dec
add
adc
sub
push
xchg
mov
and
gs
jl
add
stos
and
xor
add
or
jnp
push
add
jecxz
add
push
push
add
stc
push
add
idiv
ds
adc
xchg
mov
cmp
dec
xchg
mov
mov
movsb
aad
push
sbb
fisubs
lods
cmovs
cmp
std
ja
dec
incb
add
out
cli
test
cld
nop
lret
adc
adc
fimull
aas
dec
cmpsb
sbb
decb
add
insb
sahf
adc
and
mov
js
stos
movsb
inc
add
in
jp
adc
add
jl
test
mov
add
xor
in
adc
fistps
mov
jmp
mov
addr16
pop
xor
jo
into
fmuls
dec
lock
daa
dec
cmp
jae
dec
js
decb
clc
mov
fstp
inc
hlt
es
sbb
xchg
roll
inc
mov
add
or
fildl
push
decb
incb
sub
inc
add
jp
xlat
dec
xchg
mov
inc
add
cmp
sub
jle
incb
pushf
ror
xchg
dec
je
test
sarl
sbb
pop
or
hlt
sub
jl
mov
out
cltd
push
std
adc
in
dec
decb
jg
call
mov
imul
pop
subl
xchg
or
outsb
xchg
or
fcomp
and
jg
gs
mov
mov
repnz
mov
xor
out
fldl
sti
into
dec
aad
mov
sub
out
dec
incb
xlat
mov
cli
sub
xlat
jecxz
pusha
incb
mov
ds
shrl
push
inc
add
inc
ror
mov
mov
addl
enter
incb
int
in
adc
lods
push
jae
dec
add
mov
sub
sbb
add
inc
cwtl
and
imul
and
decb
mov
add
push
cmp
imul
insb
das
sbbl
jno
nop
mov
or
bound
arpl
push
mov
ret
cmp
in
ss
add
ljmp
clc
cld
xchg
jmp
adc
icebp
pmuludq
fnstsw
or
add
cmp
dec
add
add
inc
sub
aad
rcr
sbb
test
add
cmpsl
rcll
les
stc
ret
jnp
mov
repnz
int
fs
inc
aad
jns
mov
les
mov
ret
jle
ss
add
sub
fidivrs
fprem1
add
lock
or
decb
pop
dec
das
lea
adc
and
loop
or
decb
jbe
inc
mov
pop
mov
incb
js
test
mov
cmp
jb
data16
sbb
mov
movsl
clc
xchg
jne
test
roll
les
mov
lret
xchg
jno
or
pop
push
adc
sbb
and
adc
xchg
or
fstpl
sub
xchg
lret
loopne
addr16
xchg
push
mov
sub
pusha
add
inc
repz
xor
in
ds
push
dec
add
imul
jbe
push
mov
std
jb
addl
add
dec
movsb
mov
shlb
push
pop
addr16
push
pop
in
icebp
hlt
sahf
xchg
mov
or
sbb
and
or
int
js
into
rol
roll
incb
mov
enter
in
fwait
addb
dec
decb
inc
incb
pop
cmpsl
inc
jo
cs
sub
inc
loop
sbb
in
fists
and
sbb
mov
int
mov
cmp
add
push
push
jmp
outsb
add
rorb
mov
aaa
sarb
adc
dec
sbb
testb
loopne
dec
lods
shr
loop
call
add
loop
mov
shrb
inc
add
test
std
lret
push
adc
scas
paddusb
in
add
incb
pushl
js
or
and
and
xor
cmpsl
xlat
jnp
mov
push
xchg
es
pop
sbbl
sbb
xchg
dec
loopne
out
xor
jnp
mov
mov
mul
xor
dec
fbld
sub
lods
es
mov
in
aam
mov
inc
dec
add
sub
xchg
js
in
xchg
shl
dec
stos
sar
popf
lods
add
insb
add
ja
inc
mov
leave
sub
hlt
mov
nop
dec
add
add
cmp
xor
or
test
dec
xchg
in
loopne
mov
and
jns
mov
mov
or
sbb
mov
mov
xchg
pop
jg
inc
cltd
fmull
leave
xor
fildll
add
ret
in
decb
sbb
add
add
ss
repz
data16
pop
sti
cs
sbb
add
insl
jmp
add
int
lret
jp
nop
mov
push
cwtl
sub
ljmp
mov
out
repnz
aaa
mov
popa
fidivrl
jl
aas
mov
lods
test
sub
sub
incb
ja
out
cmp
mov
push
scas
test
ds
sbb
out
daa
push
add
xchg
xchg
or
pop
dec
inc
dec
inc
mov
sbb
mov
and
mov
add
xchg
cmp
bound
incb
pop
cltd
sub
sbb
dec
or
cmpl
stc
xchg
cmp
adc
ds
les
sbb
mov
add
cmpsb
push
adc
sbb
rclb
mov
push
std
inc
shl
push
lds
add
movsl
sub
jns
adc
sbb
fucomip
push
jno
sbb
push
xor
cmp
mov
mov
push
dec
add
fists
int3
into
pop
repz
add
add
xchg
sti
ljmp
cltd
push
aaa
loopne
dec
popa
xor
leave
push
dec
lcall
stos
mov
dec
mov
testb
mov
scas
repnz
cld
sbb
push
vpaddq
or
sub
pop
add
mov
in
popf
inc
lret
jg
cmp
cli
frstor
loop
int
fdivrs
iret
xor
sbb
xchg
iret
push
xor
bound
mov
out
push
add
negb
cmpsb
movsb
sbb
add
cmp
pop
jo
pop
push
add
jecxz
enter
xchg
ficoms
addr16
scas
jo
shlb
adc
xor
xor
or
mov
cmc
sbb
fdivrs
call
jge
inc
push
lret
decb
mov
decb
mov
pop
mov
push
and
add
mov
daa
fs
mov
les
xchg
addr16
add
cmc
push
mov
add
repz
xor
adc
mov
push
xor
mov
xor
stc
outsb
dec
mov
ss
xchg
fmulp
xchg
jno
loop
in
daa
sub
sub
dec
ja
cs
divl
jecxz
subb
test
xchg
cltd
fcmovnbe
mov
insl
xchg
push
add
add
add
cs
and
aad
mov
daa
sbb
cltd
scas
xor
adc
stos
negl
sub
rcrb
push
adc
inc
mov
std
jns
les
aaa
mov
in
clc
enter
adc
mov
int3
sarl
fimuls
dec
cld
jle
xchg
mov
fisubrs
add
lds
call
ja
fadds
inc
nop
jecxz
mov
pop
dec
adc
sub
sar
sbb
sarb
add
pop
sbb
scas
mov
pop
fmull
stos
scas
inc
fs
sub
push
cmp
inc
add
cs
mov
incb
ljmp
out
and
push
fs
jecxz
stos
mov
je
mov
mov
mov
add
push
cmp
xchg
in
je
add
add
decb
add
mov
lock
add
repnz
add
js
pop
mov
repnz
je
mov
cmp
add
jb
fisttpl
mov
push
adc
push
psadbw
insl
xor
ljmp
jb
xor
gs
push
push
or
decb
je
add
pop
xchg
add
or
es
push
mov
add
xchg
xor
or
sub
push
cmpsl
es
incb
movsb
stc
ljmp
incb
repnz
pusha
add
mov
leave
inc
add
hlt
shlb
sub
icebp
out
mov
mov
int3
outsb
add
or
xor
lods
pushf
xchg
loopne
movb
jle
jne
repz
and
sub
incb
pop
ja
incl
out
test
outsb
and
out
sbb
xchg
fisttps
xchg
mov
xor
xlat
movsl
out
sub
sub
incb
imul
dec
adc
mov
pusha
imul
or
insb
insb
loope
add
and
sbb
add
clc
push
je
add
mov
pop
dec
jns
xor
pop
xchg
std
inc
cmp
sub
loope
nop
les
es
mov
pusha
jae
jmp
mov
adc
add
jp
pusha
mov
xor
das
adc
lods
mov
adc
popa
mov
adc
cmpsb
out
aaa
xor
shrb
out
mov
add
sub
dec
imul
ss
sub
mov
das
add
xor
add
dec
mov
mov
sbb
fidivs
add
xor
xlat
dec
cmp
pop
and
fidivs
addb
cs
xor
popf
es
ljmp
imul
out
mov
jmp
add
nop
sbb
loope
stc
or
push
cmp
xchg
into
xchg
es
outsb
add
dec
outsl
or
xchg
pop
cs
nop
pop
addl
xchg
aaa
dec
test
or
popf
cmp
add
jl
insl
fwait
outsb
jmp
inc
pop
fs
jns
add
cli
adc
pop
ret
cmp
xchg
imul
jle
incb
jne
data16
xchg
repz
pop
aam
add
add
xor
and
movsl
jne
or
dec
inc
add
dec
mov
add
and
sub
and
fmul
cs
inc
dec
incb
push
or
scas
inc
jo
in
fcoms
xchg
call
xchg
in
imul
add
cld
mov
test
inc
pop
push
hlt
cmp
cmp
add
pop
sub
movsl
mov
ja
jae
jle
lods
daa
loop
push
lea
shlb
or
loope
add
pusha
add
pop
mov
pop
cld
adc
addr16
in
lcall
nop
repz
outsb
add
mov
insl
testb
into
mov
pop
ja
sbb
insl
xchg
enter
aad
mov
inc
lret
push
sbb
outsl
add
adc
xchg
pop
mov
fcoml
cmpsl
push
and
hlt
dec
sub
cmp
mov
adc
stos
cld
inc
add
mov
xchg
push
and
incb
lods
pop
sarl
nop
stos
fdivrl
insb
add
ja
cmp
leave
jb
mov
mov
data16
cld
push
out
pop
adc
mov
test
int3
lods
testl
mov
push
add
lahf
cmp
add
and
add
adc
cs
adc
test
scas
outsb
push
decl
sub
cmp
jmp
in
pushl
pusha
add
mov
aad
andl
add
xlat
insl
sub
incb
mov
scas
fabs
mov
adc
mov
imul
jge
jb
jecxz
fcomi
fadds
aad
inc
and
fistl
mov
add
and
test
xor
cmpsb
pop
pop
push
lods
xchg
dec
stos
cli
arpl
stc
clc
into
popf
mov
iret
pop
popf
pop
nop
pop
or
adcl
add
ja
stc
lahf
std
fs
xchg
mov
add
lahf
int
pop
push
pop
sub
in
addr16
popa
aad
add
adc
and
jmp
push
xchg
jne
out
push
lahf
ret
xor
add
je
mov
inc
into
xor
add
movsb
test
add
jns
cwtl
dec
pushf
jle
mov
loope
adc
inc
pop
orb
out
out
mov
faddl
les
xchg
mov
inc
xor
cmp
and
incb
ret
out
adc
mov
incb
xor
incb
xor
mov
inc
xchg
mov
test
xor
cld
adc
inc
xchg
ljmp
mov
push
xchg
sub
add
dec
jg
mov
add
ds
and
les
mov
inc
add
test
js
jge
repz
pop
push
jg
add
aas
test
lods
push
cld
lret
mov
inc
add
jl
or
repz
cmp
roll
addr16
add
rorb
cmp
aaa
sar
jl
mov
and
shll
ds
decb
cs
cmp
inc
mov
jns
decb
cmp
loope
xchg
fdivp
inc
dec
lods
int
jnp
cmp
push
mov
push
dec
add
sti
mov
fisttps
push
push
je
mov
cwtl
out
stc
mov
adc
mov
xor
out
push
sti
hlt
xlat
mov
shlb
decb
ja
sbb
sub
pop
sbb
jbe
pop
orb
nop
cs
and
arpl
stc
add
ror
pushf
jbe
nop
cmp
decb
pop
mov
sbb
push
ja
lock
mov
mov
adc
mov
jmp
int3
ljmp
stos
or
das
xor
inc
decb
add
mov
incb
decb
add
mov
lcall
xchg
sbb
sub
fwait
mov
add
pop
mov
push
cwtl
adcl
es
cmp
insl
adc
jl
fbld
push
scas
lcall
fwait
and
dec
aad
ljmp
push
roll
add
cmp
insb
movsl
cld
push
add
fcomi
mov
sbb
jne
hlt
scas
push
xor
scas
cmp
clc
dec
mov
int3
mov
rcrb
into
mov
mov
cwtl
aas
imul
les
mov
add
ljmp
jle
inc
pop
mov
mov
inc
dec
pop
dec
cwtl
push
add
xchg
nop/reserved
pusha
add
mov
insl
xor
add
inc
jne
sub
incb
sub
and
mov
xor
push
sub
lcall
add
fldcw
clc
mov
ljmp
mov
cmp
inc
sahf
daa
lock
js
outsl
andl
insb
add
inc
add
stos
cmp
cmp
fsubrs
incb
int3
icebp
pop
int
decb
add
adc
shl
and
incb
sahf
jb
mov
ret
push
push
mov
mov
decb
call
inc
cmpl
mov
mov
test
xorl
push
scas
data16
outsl
jmp
jl
or
sub
fwait
sbb
lcall
cmpsb
loope
dec
add
data16
push
shll
jge
lret
shll
inc
push
repnz
decb
inc
fdivrs
sti
mov
add
cmp
add
incb
insb
sarb
in
jb
dec
add
sahf
dec
add
out
add
incb
jne
add
add
decb
push
sbb
or
scas
dec
incb
sbb
cs
push
mov
jl
icebp
mov
bswap
icebp
das
xchg
das
mov
aaa
int3
mov
decb
sbb
nop
dec
add
rorb
add
pop
lea
push
movsl
test
shll
or
push
insb
add
out
movl
xor
decb
out
test
sbb
dec
add
sahf
sub
adc
fdivl
mov
xor
xlat
push
sub
cmp
adc
aaa
out
aam
loop
add
arpl
dec
sti
xchg
mov
inc
daa
xchg
fucomip
movsb
and
xchg
xchg
stos
cmc
fmuls
add
das
jg
stc
repz
test
or
adc
push
out
xchg
adc
adc
and
adc
dec
add
into
lods
fsub
rcll
cmp
test
lcall
or
leave
cmpb
iret
sti
or
mov
xchg
mov
mov
add
mov
incb
and
jb
aas
icebp
pop
dec
sub
fcomi
mov
pop
and
imul
push
xor
incb
ljmp
or
jne
fmuls
sub
xchg
dec
lods
adc
in
inc
sub
sub
incb
je
std
dec
add
call
push
js
fisubs
icebp
pcmpeqb
add
inc
push
imul
jp
add
les
repz
aas
mov
add
cmpsl
jmp
mov
sbb
leave
xor
cmp
sti
js
cmp
insl
pop
adc
icebp
ljmp
mov
cs
and
incb
ja
sbb
sbb
cmpsb
sbbb
sbb
dec
cmp
mov
decb
cmc
shll
dec
loop
pop
mov
mov
std
mov
xor
repnz
sbb
sarb
je
gs
jge
rclb
cmp
mov
lret
dec
inc
decb
incb
inc
popa
gs
jmp
sbb
push
enter
insl
sbb
ljmp
add
cmp
add
mov
xchg
adcb
out
xchg
mov
mov
cmp
push
jne
add
test
imul
mov
pop
out
jo
xor
push
stos
movsb
fwait
xchg
or
lcall
inc
stos
jns
sahf
cmp
mov
push
xchg
cmp
scas
push
jne
mov
push
add
xchg
mov
add
imul
ljmp
call
enter
push
push
and
incb
add
sub
mov
mov
lahf
inc
add
das
stos
sbb
aaa
std
enter
adc
adc
push
lret
scas
cmp
imul
add
ljmp
cld
add
push
mov
pop
fadd
cld
aaa
jmp
jmp
xor
xchg
adc
adc
cld
xor
mov
mov
xor
cmp
incb
icebp
xor
decb
mov
sti
loopne
lret
imul
std
jmp
popa
xor
xlat
and
loopne
sbb
mov
test
cwtl
lret
call
filds
pusha
mov
inc
pushf
repnz
or
fdivl
outsb
add
rcl
aaa
arpl
lods
dec
test
jb
sbb
pop
jecxz
add
mov
cli
cld
pop
jno
cmp
sub
movsb
mov
xchg
add
pop
pop
sbb
call
das
xchg
inc
hlt
add
mov
out
pop
inc
add
dec
cmp
pop
insl
ret
push
mov
sbbl
sbb
jo
or
stc
ror
pop
mov
ss
or
pop
push
push
xchg
cli
jl
call
xchg
xchg
pop
dec
add
stos
fsubrs
lods
aaa
into
aam
fisubl
xor
incb
pushf
mov
push
ret
mov
xchg
cwtl
mov
fiaddl
shrl
sub
mov
xchg
scas
mov
add
inc
adc
in
mov
mov
xchg
inc
dec
sub
daa
or
add
sbb
sub
stos
jbe
dec
add
mov
xchg
xor
add
and
test
adc
inc
add
push
fisubrl
xlat
ja
adc
mov
pop
stos
push
test
outsl
mov
push
sub
loope
scas
sub
fcmove
int3
or
push
je
inc
cmpsb
enter
pusha
incb
lahf
jl
sub
sub
lcall
test
scas
cwtl
fisttps
cli
loopne
add
les
dec
mov
adc
xchg
loop
frstor
sbb
fcoml
aad
fwait
test
test
test
rorl
inc
add
push
rcrl
shll
addr16
cmp
mov
icebp
sub
pop
sbb
inc
aas
sbb
fimuls
add
outsl
mov
xchg
subb
lret
inc
decb
pop
jns
add
fsubrl
mov
mov
ss
xchg
aaa
mov
or
arpl
push
addr16
mov
mov
pop
adc
js
push
cmp
lds
mov
lods
mov
adc
mov
dec
addr16
dec
add
dec
add
scas
pop
sub
mov
mov
mov
scas
jge
or
int
jne
mov
xor
stc
test
stos
inc
scas
pop
in
push
sub
repz
mov
push
mov
clc
xchg
and
aam
arpl
es
aaa
ret
jmp
repz
es
dec
bound
call
outsl
xchg
es
and
outsl
cltd
cli
push
xchg
hlt
push
mov
lcall
imul
push
xchg
xchg
scas
adc
scas
mov
es
int3
call
and
push
loop
shrl
inc
sub
cld
lea
ljmp
lods
je
jmp
sbb
mov
mul
jge
xchg
lds
pusha
add
inc
dec
inc
dec
ss
cmpsl
pop
stos
xlat
pop
cmp
sti
dec
add
xchg
cs
sub
or
xchg
int
inc
decb
js
sahf
xorb
or
loopne
lret
or
jp
jmp
stos
cmp
fadd
adc
pop
and
mov
arpl
xchg
inc
inc
add
imul
in
add
les
add
incb
add
lgs
cmpsl
les
mov
incb
jae
imul
movsl
clc
jmp
pop
ja
add
int
ja
inc
stc
jo
bound
decb
lahf
repnz
add
clc
mov
xchg
out
jnp
pop
out
lea
ret
rol
dec
out
pop
mov
and
stos
push
and
mov
add
dec
push
icebp
call
stc
sub
sbb
je
addr16
fs
xchg
inc
scas
mov
movsb
insl
fwait
push
ud1
jae
mov
jbe
push
das
hlt
pop
sbb
pushf
fbld
mov
xor
add
mulb
pop
test
xchg
pop
ret
sbbb
fwait
xchg
mov
fcmovne
cltd
bound
incb
decb
cld
adc
sub
adc
jne
shll
pop
adc
leave
push
or
mov
mov
add
int3
ficoms
and
decb
lcall
cwtl
push
cmp
stos
loop
inc
fs
or
ds
push
jbe
gs
loopne
mov
fnstenv
aam
insb
add
push
fs
xchg
dec
je
ss
mov
inc
and
or
decb
subl
mov
incb
decb
scas
out
sahf
aam
pop
inc
decb
es
das
mov
dec
adc
ret
inc
mov
xchg
cmp
xchg
pop
roll
fisubs
add
mov
or
test
xchg
jmp
adc
push
adc
mov
in
dec
add
call
es
pop
cmp
mov
xor
jecxz
insl
cmpsb
ds
sbb
incb
jns
adc
cs
incb
mov
jge
push
add
push
jno
imul
lock
pop
pop
pop
push
incb
sub
dec
cmc
sbb
stc
daa
mov
scas
pop
jl
pop
mov
dec
add
mov
mov
dec
fidivrl
dec
hlt
jecxz
iret
stc
shlb
rcl
pop
mov
fs
hlt
lods
and
decb
fdivl
aas
or
sahf
push
pop
adc
jl
push
out
gs
mul
loop
add
mov
add
add
xchg
add
mov
mov
out
mov
add
dec
add
push
data16
cmp
int
mov
mov
push
dec
pop
dec
add
pop
jge
pop
imul
sbb
outsb
add
data16
cld
xchg
xchg
cmp
pop
jno
test
add
and
cli
int3
sub
jge
xor
add
mov
std
arpl
push
scas
aaa
fnstcw
mov
xlat
insb
add
dec
lret
mov
bound
incb
jg
adcl
rcll
add
or
sub
inc
jl
sub
clc
xor
push
mov
dec
rorl
les
dec
add
loopne
cmpb
sahf
scas
idivl
dec
insl
and
push
jne
loop
popf
lahf
adc
pop
mov
jne
enter
sbb
aam
icebp
out
inc
add
xor
divl
jl
jne
out
pop
movsb
or
lcall
pop
fs
adc
test
add
lds
xchg
addr16
cmc
sbb
jg
dec
push
enter
add
sahf
mov
add
popf
lods
loope
xchg
jb
and
and
pusha
scas
sub
cwtl
dec
icebp
or
cmp
pop
test
mov
cmp
cwtl
mov
sti
ret
subl
decb
sub
xlat
ret
incb
incb
decb
shrb
popf
sub
fwait
cmp
inc
mov
lahf
shll
call
sub
dec
sbbb
xchg
pop
xchg
cltd
pusha
add
insb
add
xor
add
sub
mov
mov
dec
add
add
mov
pusha
add
pop
dec
add
cli
inc
ss
push
cmpsb
lret
outsl
enter
fs
fcmovnbe
mov
mov
add
test
jnp
cs
movsl
mov
mov
in
js
sub
gs
sbb
cmp
dec
add
sbb
jmp
pop
pop
test
pop
daa
mov
inc
lds
sar
add
jne
push
idiv
pop
mov
cmpsb
xchg
adc
pop
js
arpl
push
mov
test
add
jno
mov
decb
arpl
sbb
leave
in
lret
stos
pop
cmp
push
imul
add
add
imul
cli
les
daa
test
add
mov
aad
ret
pop
adc
int
inc
lret
scas
shl
call
add
pop
pop
loop
xor
adc
lret
xlat
inc
arpl
int3
lods
push
test
mov
subb
lahf
sbb
sahf
push
add
mov
mov
xlat
push
lods
popa
cmp
pop
pop
mov
inc
or
lret
rcll
out
jmp
call
mov
popl
dec
ljmp
add
lods
sbb
cmp
xchg
xchg
outsl
mov
adc
fucomp
inc
jle
push
aad
outsl
push
decb
stos
outsb
xor
lods
out
mov
nop
or
stos
xchg
cmovle
xor
loop
inc
xlat
adc
mov
ds
inc
es
incb
ss
xchg
xchg
enter
dec
add
add
mov
aaa
lds
xor
mov
hlt
add
fs
ret
lahf
shll
mov
xchg
in
lods
imull
and
lods
cld
dec
add
sbb
push
jl
in
out
fmul
cld
dec
ss
jno,pt
and
jae
dec
out
aas
fsubrs
inc
clc
push
xor
mov
mov
add
dec
mov
jnp
add
mov
mov
add
aas
cmp
mov
cltd
xor
mov
mov
insb
add
pop
dec
and
inc
add
jae
data16
aas
push
mov
sbb
out
cmp
pop
repz
mov
jae
bswap
or
push
outsb
shrb
pop
mov
cmpsb
fmulp
test
pop
sub
stc
push
arpl
lret
decb
aas
pushf
aas
inc
add
stos
es
stc
out
mov
xor
or
sbb
jmp
stos
push
jo
inc
cmp
incb
ficoml
in
rcrb
sbb
cmpsb
es
inc
les
push
add
and
inc
mov
into
sub
decb
jbe
incb
sub
loope
lret
xor
inc
test
add
movsb
adc
outsb
add
scas
sub
sbb
subl
add
add
jo
incb
ret
sub
fimuls
mov
call
cmpsl
inc
icebp
xor
lods
je
lcall
xor
or
cmp
jg
mov
enter
add
adc
stos
and
jl
nop
ds
into
inc
incb
push
mulb
add
mov
fcoms
outsb
mov
xchg
es
fwait
cmp
incb
sbb
push
mov
insl
adc
test
jg
sub
push
loope
add
mov
mov
sub
out
pushf
or
out
sub
daa
adc
mov
daa
push
ret
ja
push
jmp
clc
and
incb
add
mov
cmp
cwtl
lcall
jnp
incb
jp
in
pop
and
pop
ficompl
mov
adc
icebp
divb
ficompl
xchg
mov
test
into
inc
sbb
xchg
mov
inc
decb
pop
pop
pushf
lahf
xchg
xchg
cltd
inc
decb
xor
js
lock
inc
add
sub
dec
in
mov
or
insb
add
cmp
jl
js
lahf
sarb
sbb
inc
jecxz
push
repz
jecxz
cmp
test
movsl
outsl
scas
inc
add
or
and
push
ja
imul
push
inc
incb
mov
inc
cs
xchg
fnsave
cwtl
or
mov
loop
int
sarb
int3
ss
in
std
push
jecxz
jp
jb
xchg
inc
add
rorb
inc
fsubrl
mov
pop
subb
bnd
lahf
ljmp
stos
stos
movsl
icebp
sbb
cmpsb
and
cs
pop
mov
rclb
add
xor
out
mov
push
mov
adc
dec
cs
xor
rorl
adc
mov
out
or
incb
imul
mov
frstor
lods
pop
add
pop
enter
fucom
lock
and
mov
mov
shr
xchg
xchg
or
jne
cltd
jne
outsl
icebp
cltd
sbb
cmp
mov
in
cli
bound
adc
mov
xor
sub
loopne
inc
sub
incb
push
xor
pop
es
jmp
imul
push
pusha
fdivrl
mov
ret
loopne
pop
adcb
lock
es
bound
incb
add
and
mov
shl
pop
std
jmp
popf
mov
sub
popa
xlat
or
imul
xchg
xchg
test
xor
fs
rolb
sub
aad
pusha
add
ljmp
call
or
sbb
or
xor
xchg
cmp
jo
ja
xchg
mov
ret
stos
push
mov
and
cld
mov
cmc
xor
jg
inc
add
outsl
jbe
add
mov
cmp
jno
xlat
jmp
add
ljmp
mov
in
mov
cmp
or
in
sti
int3
cwtl
jl
push
dec
add
stc
fldcw
pushf
out
mov
sub
adc
in
mov
es
incb
inc
syscall
dec
push
cmp
stos
mov
loopne
int3
cmp
adc
pushf
or
pop
mov
adc
add
cwtl
sub
fidivl
mov
jecxz
mov
jp
fisubs
add
push
and
ja
rcrl
xchg
inc
cmpsb
data16
push
or
loop
das
xchg
inc
xchg
or
pop
outsl
int3
call
pop
test
sbb
jge
dec
add
loope
sahf
mov
rcrb
and
mov
xor
jmp
mov
mov
add
shl
lock
aas
ret
push
mov
into
repz
inc
and
imul
and
mov
lret
fidivl
mov
add
pop
imul
lods
movsl
push
cmpsl
jb
pop
cmp
add
in
sbb
in
scas
outsl
lret
fcoms
insb
add
inc
add
or
sub
xor
fldt
jne
pop
or
add
sub
push
inc
add
xor
and
sub
pop
adc
lds
outsl
mov
stos
mov
in
push
mov
insl
inc
mov
add
loope
mov
pusha
repnz
in
incb
and
arpl
shl
xor
call
mov
lock
and
mov
mov
sbb
push
in
add
cmp
inc
iret
sub
sbb
push
fimuls
insl
mov
ret
jno
add
outsb
add
movsl
in
xor
decb
pusha
decb
add
dec
dec
add
mov
dec
sub
das
jg
test
ja
nop
or
sbb
mov
pop
jg
jno
insl
fimull
cs
xchg
jne
fisttpl
out
xchg
mov
push
bnd
pop
and
push
mov
mov
in
jmp
xchg
dec
jge
add
and
cmp
incb
push
cltd
scas
lret
decb
add
pop
outsl
cmp
jae
stc
call
mov
pushf
adc
daa
push
nop
dec
cld
dec
add
xchg
adc
cmp
and
push
mov
add
adc
jmp
fstpt
gs
shr
add
dec
add
push
imul
cmp
push
add
sbb
dec
mov
loop
bnd
lods
mov
in
sbb
xchg
cmp
gs
add
imulb
add
out
cmp
cmp
aaa
fldenv
hlt
add
pop
les
out
add
push
jp
and
orb
dec
add
je
sub
inc
loopne
pop
jmp
lock
jo
xchg
pop
xlat
mulb
mov
sbb
add
test
push
fs
dec
add
push
jo
add
in
add
decb
cmp
fdivr
dec
xchg
bound
imul
aam
adc
add
data16
jae
mov
adc
call
ret
sar
daa
fcmovu
imul
repnz
pop
addr16
aaa
cmpsl
fnstcw
cmp
xchg
ljmp
mov
xlat
sbb
fs
inc
add
add
