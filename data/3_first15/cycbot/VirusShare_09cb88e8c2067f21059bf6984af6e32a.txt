hlt
sbb
je
sbb
je
sbb
je
jne
sbb
je
add
add
popa
imul
adc
adc
outsb
mull
mull
cmp
shrb
jbe
add
in
xor
aas
cmpsl
fs
inc
data16
stc
fs
mov
jbe
add
jbe
sub
adc
gs
jmp
gs
inc
gs
inc
gs
add
adc
data16
mov
jbe
les
jmp
pcmpgtw
xchg
data16
cmpsl
gs
mov
test
jbe
fsubl
xor
shlb
push
shr
jbe
cmp
fs
adc
xchg
cwtl
fs
mov
jbe
shll
imul
or
gs
add
jbe
loope
jbe
mov
jbe
mov
jbe
frstor
ja
jbe
stos
fs
add
jno
fs
xor
data16
sti
fs
inc
gs
adc
jbe
cmc
fs
mull
ss
push
insb
jbe
fs
fs
in
gs
fldenv
pcmpgtw
push
insb
jbe
lods
fs
push
gs
xor
test
fs
mull
inc
gs
shlb
data16
push
imul
les
add
add
push
push
jbe
leave
push
jbe
fcoms
xor
push
jbe
or
and
jbe
pop
push
jbe
push
pop
jbe
push
jbe
outsb
push
jbe
push
push
jbe
stc
push
jbe
mov
push
jbe
cltd
push
jbe
rcll
pop
push
jbe
jnp
jbe
insb
push
jbe
int
jbe
jns
jbe
inc
push
jbe
insl
push
jbe
adcl
add
push
jbe
jge
jbe
xchg
push
jbe
mov
jbe
mov
pop
nop
push
jbe
or
push
mov
jbe
movsb
push
jbe
int3
push
jbe
rcll
add
iret
mov
push
jbe
inc
push
jbe
pusha
push
jbe
mov
push
jbe
mov
jbe
jle
jbe
lods
push
jbe
and
xor
push
jbe
xchg
push
jbe
mov
push
jbe
add
add
mov
or
pop
mov
or
cld
or
in
jbe
mov
jbe
call
or
xchg
dec
ja
aam
jbe
sub
jbe
sbb
jbe
lret
push
in
jbe
mov
jbe
mov
or
cli
or
mov
dec
ja
mov
jbe
movsb
dec
ja
mov
pcmpeqd
or
mov
or
in
jbe
xor
jbe
mov
or
rorb
jbe
add
jbe
in
jbe
sub
jbe
sbb
jbe
mov
or
in
jbe
mov
or
mov
or
aad
jbe
mov
or
add
add
mov
jne
popa
mov
and
jne
inc
mov
and
mov
sub
mov
out
mov
jne
fbstp
jne
xchg
mov
inc
nop
mov
add
jne
adc
jne
mov
and
shll
fistps
jne
push
mov
jne
cmpsl
mov
sub
mov
inc
dec
mov
jne
imul
jne
mov
jne
and
jne
xchg
mov
and
mov
jne
int
jne
jp
jne
add
add
fisttpl
enter
push
in
push
jbe
addr16
jbe
adcl
call
push
jbe
push
push
jbe
dec
push
jbe
and
out
push
jbe
pop
push
jbe
leave
push
jbe
fimull
mov
push
jbe
jmp
push
jbe
xlat
dec
jbe
rclb
or
stos
dec
push
jbe
adc
jbe
add
xor
jbe
cmpsl
push
jbe
test
jbe
xor
push
jbe
adcl
rcll
loope
push
jbe
jno
jbe
out
jbe
lds
outsb
hlt
dec
jbe
and
jbe
push
jbe
scas
push
jbe
xchg
push
jbe
cmpsl
push
jbe
add
add
cmpsb
mov
or
jbe
add
xchg
lret
sbb
cmpsl
jbe
andl
insb
andl
pop
fwait
cmpsb
jbe
xchg
xchg
dec
mov
incl
jbe
inc
xorl
xorl
xorl
add
icebp
dec
pop
ja
inc
pop
ja
jl
ja
bound
ds
ja
jecxz
ja
call
pop
ja
loop
ja
ds
ja
loop
ja
inc
pop
ja
inc
pop
ja
jecxz
ja
ljmp
adc
ja
pop
pop
ja
std
pop
ja
push
pusha
ja
inc
pop
ja
or
scas
ds
ja
dec
pop
ja
ljmp
jb
sbb
pop
adc
cmc
adc
jbe
lods
sbb
mov
jbe
adc
jbe
push
pop
jbe
sub
jbe
mov
sbb
out
jno
jbe
dec
push
jbe
pop
adc
jbe
cltd
sbb
mov
jbe
inc
push
jbe
jmp
sbb
or
out
adc
cmc
out
jbe
jo
jbe
mov
jbe
inc
adc
jbe
or
jbe
leave
sbb
and
jbe
ficompl
jbe
pop
sbb
data16
in
jbe
ds
jbe
leave
adc
or
aas
push
jbe
out
adc
jbe
xor
jbe
push
sbb
pop
sbb
and
add
jecxz
jne
mov
jne
inc
lods
jne
mov
lods
jne
and
jne
push
movsl
jne
pop
test
push
arpl
mov
jne
lods
jne
insl
movsb
jne
lods
jne
shll
jne
dec
lods
jne
jnp
jne
and
jne
andb
gs
cmpsl
jne
aam
jne
cmpsb
jne
cmp
jne
adc
jne
adc
jne
andl
arpl
push
push
cmpsl
jne
sbb
jne
andl
shll
add
add
lahf
imul
xchg
addr16
loopne
jne
jns
jne
outsb
insl
jne
imul
pop
addr16
lahf
imul
adc
jne
imul
shl
jne
xor
loope
cld
sub
jne
repnz
xchg
adc
jne
and
jne
xchg
loopne
stos
sbb
jne
sub
jne
or
jne
inc
loopne
inc
int
jne
or
dec
ja
aad
jne
loope
jne
test
loopne
push
push
loope
adc
loope
es
push
adc
jne
shl
jne
sbb
jne
mov
jne
add
loopne
mov
push
loopne
lahf
sub
jne
xor
loopne
dec
sub
jne
push
loope
adc
loope
jne
loopne
push
fs
adc
loopne
adc
loope
sbb
loopne
jp
loopne
jge
loopne
add
loope
out
loopne
pop
mul
jne
gs
xlat
sub
jne
adc
loope
pushl
jne
fcmovnu
jne
sub
jne
mov
fbstp
xchg
loopne
pop
sub
jne
sub
jne
sbb
jne
pop
loopne
adc
loopne
jle
loope
xchg
mov
jne
mul
jne
loop
jne
sbb
jne
xor
jne
sbb
jne
sbb
jne
mov
jne
icebp
loopne
jne
loopne
xchg
loopne
mov
je
jne
lret
loopne
mov
mov
jne
xor
loopne
and
loopne
pop
adc
jne
icebp
loopne
cmp
jne
xchg
fbstp
fneni(8087
jne
fwait
push
loopne
insb
loopne
jne
xor
loopne
mov
loope
pop
repnz
mov
loopne
stos
in
loope
hlt
add
add
call
cmp
mov
and
push
ja
push
dec
ja
push
dec
ja
xor
dec
ja
xchg
push
ja
push
dec
ja
stos
dec
ja
jbe
ja
repnz
ja
pop
dec
ja
xor
dec
ja
loopne
ja
push
dec
ja
scas
dec
ja
push
dec
ja
xchg
dec
ja
pop
dec
ja
clc
push
ja
mov
ja
cmp
add
ja
pop
dec
ja
dec
dec
ja
icebp
dec
ja
mov
push
dec
dec
ja
sub
cmp
push
xchg
push
ja
and
dec
dec
ja
mov
add
add
inc
mov
jbe
jae
lahf
popa
jno
dec
lcall
and
and
jae
adc
jo
lahf
loope
jbe
mov
jbe
inc
jb
mov
and
cs
jno
enter
mov
jae
sarb
add
add
add
push
mov
sub
call
call
call
lea
push
call
pop
call
call
push
call
call
call
call
push
call
call
push
push
call
add
push
lea
push
call
add
lea
push
call
push
call
pop
call
lea
push
push
mov
push
call
push
call
call
call
call
push
sub
push
call
add
push
call
pop
lea
push
mov
push
call
push
xor
push
call
call
mov
push
call
lea
push
call
mov
push
mov
push
lea
push
call
sub
push
call
push
call
pop
mov
push
push
lea
push
call
call
call
call
call
call
call
push
push
lea
push
call
call
xor
push
call
pop
call
sub
push
call
call
push
lea
push
call
add
sub
push
call
pop
lea
push
xor
push
call
call
call
call
call
mov
push
lea
push
call
add
push
call
push
call
pop
lea
push
xor
push
push
call
lea
push
call
push
call
push
lea
push
call
add
leave
ret
nop
nop
nop
push
mov
sub
call
call
push
call
pop
mov
push
mov
push
lea
push
call
push
push
call
push
push
push
call
cmpl
jne
cmpl
jne
pusha
push
push
push
push
call
mov
push
push
push
call
cmpl
jne
mov
mov
movl
mov
add
add
mov
add
add
cmp
jne
call
push
sub
push
call
add
sub
push
call
pop
xor
push
call
call
lea
push
call
push
call
pop
call
push
call
pop
lea
push
push
call
call
push
call
leave
ret
nop
nop
nop
nop
nop
push
movl
ret
idivb
enter
outsl
je
jnp
lea
pop
fdivs
sub
lods
lahf
cmp
cs
and
jg
into
insb
mov
mov
dec
stos
pop
pop
out
inc
test
test
inc
jmp
jle
and
xchg
mov
rorb
stos
mov
movsb
jg
push
ret
mov
dec
pop
mov
lahf
scas
test
ret
adc
mov
mov
popa
aaa
or
mov
xchg
lea
dec
jns
push
sbb
test
xchg
scas
pushf
scas
xchg
dec
lods
ja
mov
and
fucomp
loope
loop
ljmp
stos
cmp
push
fidivrl
mov
leave
fstps
mov
push
lret
out
in
xchg
in
movsl
cmc
hlt
ret
fistl
loopne
das
pusha
arpl
xchg
mov
xchg
push
ror
insb
inc
aas
test
iret
and
in
sbb
mov
push
and
fsubr
add
pushf
int3
mov
xchg
add
stos
jg
mov
insl
icebp
mov
shr
cmpsl
cmpsb
push
pop
mov
xchg
xchg
xlat
push
mov
imul
cmp
pop
jns
fldenv
ljmp
mov
pop
jecxz
or
mov
cmpsl
xor
rorl
repz
xchg
ja
or
push
jle
cmp
push
inc
out
mov
dec
sbb
push
sub
jp
lock
icebp
enter
lret
and
dec
hlt
ds
jns
jecxz
and
mov
and
mov
pop
inc
cltd
mov
jle
cs
push
xchg
enter
rep
mov
cmpsl
aaa
stc
pop
bound
movsl
pop
mov
xchg
stos
imul
cltd
outsl
jp
inc
in
imul
jns
mov
shlb
repnz
pop
mov
mov
in
test
jnp
cwtl
mov
xchg
xor
movsl
fstp
pop
xor
shlb
dec
mov
cwtl
movsl
cmp
adc
enter
inc
and
and
insl
add
mov
loopne
push
mov
fisttpl
lret
xor
rolb
or
push
mov
popf
xchg
pop
pop
inc
xchg
inc
push
popf
mov
pop
jg
jo
inc
std
ret
pop
dec
inc
shll
push
into
mov
sub
mov
xor
leave
fbld
inc
jb
mov
adc
sub
adc
stc
mov
data16
cmp
push
sahf
sbb
mov
sub
in
add
call
cli
das
jmp
test
push
jae
mov
xchg
jp
fsubr
jne
mov
sbb
in
cmpsl
loop
clc
sbb
lahf
xchg
je
scas
mov
test
jg
mov
dec
jbe
xchg
jo
xor
mov
cmp
mov
jae
sbb
adc
movsl
loop
add
sub
sub
or
adc
fdivs
cs
jg
ss
iret
test
xchg
adc
dec
xchg
push
sub
xlat
movsl
fwait
inc
test
mov
xchg
gs
mov
imul
dec
inc
xor
mov
cli
mov
adc
lods
lock
adc
addr16
out
or
sub
inc
lock
movsb
test
mov
adc
jmp
xchg
or
gs
cmc
and
pop
fdivl
outsl
mov
pop
gs
mov
lods
arpl
and
fbstp
mov
cltd
sub
fistpll
jns
mov
daa
je
or
test
rorb
push
xchg
pop
push
dec
stos
dec
lret
xor
sahf
cltd
int
lea
mov
mov
xchg
mov
jmp
and
push
jnp
jmp
mov
push
lds
push
dec
jmp
adcb
int
test
mov
hlt
jecxz
lcall
add
xor
pop
loop
shrb
ja
iret
and
adc
fld
mov
sub
fisubrs
jns
arpl
cmc
lret
aaa
hlt
fiadds
hlt
aas
popf
pop
push
adc
lods
aam
sahf
inc
sub
lods
xor
fsub
pop
cs
out
in
inc
dec
push
arpl
mov
mov
fbstp
mov
and
out
ja
imul
icebp
adc
push
xchg
lock
inc
testb
imul
lods
out
stc
dec
push
mov
xchg
push
sbb
mov
jg
and
adc
fnsave
loop
jl
mov
fwait
in
je
je
cmpb
enter
inc
lret
sahf
aad
xchg
jle
bound
loopne
mov
lods
jp
xor
pop
push
xor
jno
and
pop
movsl
dec
mov
push
jp
pushf
test
xchg
xor
cmp
push
sahf
dec
rcr
ficoml
popf
push
pop
data16
scas
popa
loop
pop
adc
pop
xor
sub
mov
mov
sub
jns
push
mov
cmp
rcrb
pavgw
cmpsl
pop
mov
ja
adc
repz
mov
xchg
mov
test
stos
inc
xchg
call
add
mov
sbb
lret
test
inc
into
mov
in
subl
pop
or
xlat
enter
out
and
cmp
scas
sub
in
lods
dec
dec
sti
jno
push
xchg
dec
jns
les
fxch
mov
out
or
pcmpeqd
cmp
fcomp
xchg
rolb
push
loop
jg
add
in
push
add
lahf
imull
push
negl
loope
mov
aam
push
call
jns
adc
fstl
iret
cmpsl
int3
jmp
or
cmc
into
dec
sbb
push
pop
std
dec
mov
dec
mull
pop
ffreep
scas
add
jecxz
mov
js
loope
xchg
std
outsl
sbb
aas
ds
pop
add
cld
jmp
in
push
int
loopne
xchg
out
test
fisubrl
mov
jge
add
dec
jmp
pop
sbb
cli
call
daa
adc
aad
mov
mov
push
in
push
push
sbb
in
cs
in
and
xchg
push
jge
add
cmc
inc
or
sbb
addr16
imul
lea
fsincos
lret
jns
sub
repnz
pusha
notb
jl
xlat
fbld
fdivl
in
ret
adc
or
insb
int
mov
incb
test
fdivr
mov
mov
mov
mov
dec
or
sbb
push
pop
dec
add
imul
aas
push
test
rcrb
arpl
jl
repnz
push
add
dec
out
jge
lret
punpcklbw
ds
xchg
ret
and
jb
iret
outsl
mov
lret
cltd
imul
mov
push
fs
jnp
loope
stc
mov
fcomps
enter
int
popa
xor
imull
out
cli
mov
rclb
sbb
and
icebp
pop
and
loopne
loope
mov
mov
cmp
xchg
cmp
and
cli
btc
jbe
sahf
xchg
and
mov
out
xor
add
jmp
mov
add
pop
cmp
add
mov
cmp
mov
icebp
inc
movl
sti
adc
sahf
ss
test
ja
and
mov
or
adc
fldenv
mov
mov
movsl
cwtl
in
data16
pop
jo
push
sarl
pop
and
or
test
cwtl
sbb
and
lret
push
in
cltd
mov
scas
cmpsl
into
movsb
inc
mov
bound
mov
sub
mov
xchg
mov
adc
outsl
shl
jbe
xchg
pop
es
xchg
jne
sti
cli
jl
lock
fs
insb
cmp
jl
xchg
incl
mov
sbb
insb
sub
pop
pslld
in
cmpsl
orl
pop
in
je
and
dec
or
sbb
or
jmp
mov
and
les
xor
sbb
or
pop
push
adc
hlt
inc
push
xor
fsub
lahf
fsubr
jo
xchg
out
sub
cmp
lret
subl
mov
lods
ret
ror
or
adc
jecxz
dec
and
ret
gs
dec
and
sbb
leave
add
out
cmpsb
push
jge
or
jne
scas
rolb
ljmp
mov
dec
mov
jne
adc
ljmp
loop
sbb
cmp
sti
xchg
pop
test
imul
sub
pop
adc
mov
popf
and
icebp
cli
bound
inc
cmpsb
push
ss
mov
add
mov
das
fldenv
sub
callw
icebp
lcall
addr16
xchg
aaa
aam
or
jb
dec
pop
push
sbb
sub
lret
in
arpl
xchg
and
add
imul
add
dec
mov
leave
stc
pushf
pop
dec
enter
sub
and
es
fdivs
cmpsl
inc
sub
jno
jp
inc
scas
rcrb
fisttpll
dec
add
or
mov
dec
loope
shlb
xor
fwait
pop
out
ret
mov
xchg
or
loopne
sbb
stos
or
mov
cmp
xor
dec
cmp
ret
cmp
stos
pushf
cmp
fisubrs
jp
into
cmpl
mov
test
sub
cli
mov
lods
loopne
push
cmp
cs
mov
iret
adc
xchg
inc
fsubrl
mov
pushf
mov
xchg
mov
mov
pop
in
jecxz
mov
roll
cmp
aad
imul
jmp
pop
cmp
dec
in
jo
out
mov
faddl
and
sti
mov
mov
gs
xchg
test
std
and
loopne
fsubrs
xchg
out
push
daa
sti
rcrb
lds
cwtl
movsb
daa
hlt
mov
pusha
mov
das
mov
adc
clc
sti
mov
adc
or
lock
inc
pop
lock
mov
cmc
sub
repnz
loop
push
ja
xchg
lcallw
mov
xchg
into
jns
mov
clc
aas
data16
outsl
mov
cmpsl
xchg
or
mov
sahf
into
mov
xchg
data16
jmp
bound
cmp
js
and
icebp
loopne
dec
aas
test
movsl
add
jg
mov
ljmp
inc
bound
push
mov
sti
push
push
fisubl
xor
and
mov
jae
jae
das
das
push
dec
adc
dec
mov
mov
lock
push
add
mov
push
sbb
xor
add
stc
inc
int
or
push
stos
cmc
loope
mov
adc
mov
mov
and
lods
fmull
daa
fisttpll
mov
gs
push
jne
push
mov
xor
add
cmpsl
jl
repz
mov
dec
cmp
repz
adc
insb
inc
cmp
mov
jge
or
dec
jle
mov
sub
xchg
lret
or
pop
mov
dec
iret
xor
mov
push
push
lret
adc
das
test
xor
add
xchg
loope
in
dec
mov
movsb
es
cmp
cltd
sbb
inc
jb
leave
in
cmp
out
sbb
pushf
repz
ljmp
insb
jmp
mov
or
movsb
or
mov
jmp
daa
or
ret
popf
xor
in
imul
cld
sub
sbb
push
add
inc
or
mov
lea
ret
ret
lret
addl
cmp
scas
fldcw
lock
movsl
push
jecxz
movsl
sahf
sub
test
not
or
sub
mov
das
leave
cmc
mov
lea
sbbl
cmpsl
mov
fwait
outsl
xchg
lahf
subb
lcall
adc
fs
insl
pop
mov
out
inc
jmp
or
jmp
sbb
outsb
pop
jmp
push
mov
lcall
lock
xchg
jp
mov
pop
aas
push
sub
repz
popa
std
sti
fsts
test
lods
std
cltd
xorb
push
daa
sbb
mov
inc
sub
arpl
adcl
movntq
std
cmpsb
xchg
mov
in
insb
dec
inc
jns
or
ret
xchg
adc
mov
jno
popa
add
cld
jns
hlt
sbb
mov
lahf
int3
jns
push
icebp
int3
and
mov
mov
out
cmp
inc
into
mov
sbb
mov
jmp
fcompl
das
scas
mov
lods
jg
ds
mov
pop
clc
mov
in
mov
push
mov
aaa
imul
sti
push
cltd
pop
add
cmp
data16
mov
in
xor
push
mov
aad
pusha
loop
sbbl
stc
dec
dec
adc
jnp
mov
or
movsl
pop
insl
mov
jo
into
rorb
daa
lret
jae
les
or
add
loopne
inc
adc
roll
xor
je
cmpsb
roll
sub
jmp
jb
push
adc
ss
xchg
lcall
outsb
add
in
cmp
ds
nop
dec
test
mov
icebp
cmp
mov
adc
stos
and
fnstcw
sti
scas
mov
stos
inc
aaa
push
repz
cli
sahf
fcoms
int3
js
xchg
imul
mov
xlat
stc
and
mov
iret
sbb
leave
rolb
flds
xchg
sub
xchg
test
loop
cmp
mov
fs
xchg
or
push
dec
repz
ficomps
adc
jno
lds
dec
push
adc
xchg
jmp
xchg
popa
ficompl
inc
shl
cmpb
jo
fisubrs
dec
add
dec
mov
add
jo
imul
xchg
and
test
push
repnz
fimuls
inc
scas
les
add
and
push
mov
out
pop
mov
add
repz
imul
add
sub
dec
mov
xchg
sbb
dec
push
int
int
mov
adc
sbb
dec
lods
push
fs
pop
mov
and
jo
adc
adc
mov
pop
ljmp
xchg
inc
inc
inc
in
dec
in
rol
arpl
dec
cmp
push
jbe
lods
xchg
pop
fisubs
popa
dec
movsl
shlb
mov
add
mov
inc
clc
jmp
mov
lret
sbb
push
fdivl
cld
rcrl
inc
rol
cld
mov
loope
icebp
clc
addr16
push
orl
icebp
pop
pop
or
sbb
sbb
test
stc
mov
dec
out
out
sahf
rcrl
push
rcll
sbb
sbb
add
into
inc
jmp
loopne
icebp
add
push
sbb
mov
insb
xchg
xchg
dec
push
popf
aaa
mov
aad
das
add
mov
into
xor
or
sub
loopne
lahf
pop
addb
pop
add
add
aam
insb
test
dec
mov
mov
xor
enter
jns
dec
add
lea
add
insl
dec
aad
lcall
ror
icebp
dec
push
jnp
int3
fcmovnu
mov
lret
mov
data16
in
push
mov
push
loope
mov
dec
and
sbb
sub
divb
sbbl
mov
push
lcall
dec
mov
mov
outsb
decb
pop
push
add
cmp
push
jle
xchg
adc
loopne
xor
ret
les
ror
mov
sub
cli
in
dec
pop
xor
sub
fs
mov
push
aad
shlb
pop
in
mov
fwait
das
or
pop
arpl
and
loopne
xchg
loope
lods
mov
jmp
fnstcw
mov
fsubrl
loopne
pushf
cld
jno
leave
dec
mov
mov
push
cmpsl
push
fistl
sbb
in
or
mov
shl
dec
repnz
adc
fsubrl
pusha
pop
imull
movsl
leave
inc
mov
dec
sub
or
cmp
jle
lds
daa
fisttpll
push
mov
scas
es
cmp
and
dec
fisubs
aas
lcall
stos
outsl
mov
jae
repnz
sti
orb
hlt
dec
jle
movsb
mov
fisubl
or
repz
jg
sbb
sub
adc
mov
les
xchg
add
leave
mov
imul
icebp
or
pop
lret
sub
mov
shl
and
jge
idivb
mov
jo
cmc
rcr
outsl
mov
aad
out
jp
cltd
xchg
xchg
xor
stos
mov
and
jmp
and
fnstenv
cmp
repnz
imul
in
and
mov
out
shrb
push
xchg
sub
push
sbb
pop
outsl
sbb
imul
mov
lahf
mov
sarl
jl
sub
dec
stos
repnz
jg
stos
aam
je
fsubs
hlt
sbb
je
xlat
mov
daa
inc
ja
movsb
and
stc
jp
push
addl
mov
aas
mov
jg
sbb
push
jl
testb
lret
adc
insb
fcmovu
sti
sbb
xchg
xchg
xchg
fs
ja
and
xor
jns
int
lret
pop
dec
mov
and
stc
xchg
ret
outsb
add
fistpl
jg
gs
mov
xchg
test
sub
imul
mov
test
sahf
sbb
dec
in
cmp
out
pop
imul
pop
out
jb
ja
clc
and
nop
test
xchg
dec
lods
pop
lret
or
add
into
dec
pop
int
xor
and
xor
loop
add
lea
scas
stos
out
push
add
inc
pop
pushf
inc
xlat
nop
jns
lret
scas
rol
pop
stc
das
mov
fildll
add
cmpb
mov
sbb
mov
inc
inc
and
dec
jbe
push
fisubs
hlt
cli
sub
shlb
push
mov
ret
dec
shl
mov
inc
add
test
out
aas
adc
xlat
in
aad
gs
cmp
pushf
cmp
adc
adc
push
push
lcall
clc
adc
fmul
add
sbb
sahf
iret
fwait
mov
ds
orl
and
imul
cltd
push
jl
lock
adc
sub
rcrl
push
fisubrs
dec
mov
mov
lock
bound
xchg
or
cs
fwait
aam
jmp
lods
stos
lret
pushf
stos
shll
ljmp
sub
mov
ret
pop
cltd
push
adc
lahf
and
cmpsl
jle
jl
mov
cmpsl
js
pop
xor
xor
inc
jbe
ret
adc
out
in
sbb
leave
mov
jns
repz
push
shrb
out
xlat
lcall
sbb
cmpsl
xchg
lock
lods
and
adc
xorl
xchg
fstps
stc
stos
xor
xor
cmp
adc
sbb
lcall
pop
mov
iret
iret
rcll
filds
sarl
or
test
xchg
popa
leave
sub
repnz
shrb
sbb
and
leave
cltd
push
lods
dec
lods
mov
ljmp
push
and
sub
inc
movsb
cmc
js
roll
mov
or
shrb
in
sbb
push
daa
or
sub
fiadds
jae
push
sbb
mov
out
fnstcw
cmp
nop
icebp
inc
xor
fucom
movsb
push
sub
jp
mov
mov
in
mov
stos
enter
xchg
inc
andb
icebp
iret
lock
push
idivl
insl
inc
rol
sub
test
push
cmp
jne
into
shl
lahf
sbb
repz
jge
shl
dec
mov
outsb
mov
repz
xchg
call
sub
fcoms
shll
test
sub
jae
and
jle
rcrl
int3
mov
stos
cmc
shrb
dec
dec
or
xchg
cmpsl
stos
dec
jns
push
mov
mov
test
fldenv
aad
lods
dec
jnp
push
inc
test
test
rorl
int
imul
or
push
sahf
cltd
sbb
insl
addr16
in
loope
jne
mov
jb
in
ret
inc
jae
gs
lret
mov
imul
dec
inc
pusha
dec
jno
data16
mov
mov
mov
stc
in
jns
aam
inc
inc
xor
mov
dec
dec
push
aad
mov
pusha
ror
inc
insb
lds
fwait
jb
pusha
in
clc
sti
mov
xor
dec
inc
imulb
push
cmpsb
stos
or
push
fimuls
orb
outsl
xchg
or
int3
pop
sub
mov
inc
inc
jle
das
leave
sub
imul
shll
mov
ss
ja
xchg
lods
fdivs
mov
cmpsl
mov
enter
shrb
mov
stc
adcl
inc
dec
jno
pop
cmpsl
jb
pop
test
xor
xor
imul
xchg
adc
arpl
pop
lds
and
add
jge
js
xchg
mov
dec
sahf
popa
xor
pop
adc
mov
ret
and
stos
pop
adc
mov
xchg
imul
or
call
test
cs
ljmp
ficoms
inc
sbb
xchg
pop
cmp
dec
and
push
xchg
sahf
or
xor
pop
or
cmc
call
inc
cmpsb
fstps
lock
mov
inc
mov
add
out
cmp
das
lcall
jo
lahf
push
add
push
sbb
pop
arpl
ret
mov
inc
push
daa
or
arpl
mov
outsb
adc
test
mov
in
sbb
mov
push
and
xor
repnz
xchg
pop
mov
popf
pop
jnp
mov
lret
cltd
xchg
jl
jge
int3
add
cld
divl
and
push
lret
arpl
popf
call
or
inc
xor
mov
mov
mov
fstl
nop
loopne
adc
cmp
sub
xor
mov
add
imul
mov
loopne
ss
orb
cmp
data16
xor
xor
xlat
pop
inc
add
mov
jg,pt
xchg
cmp
pop
shrl
mov
out
xchg
repnz
adc
mov
jb,pn
stos
cmp
pop
push
dec
adc
sub
shll
add
cmpsl
or
cmp
add
jb
mov
sub
mov
mov
data16
jp
inc
push
cli
sbb
xor
cmp
mov
call
clc
lahf
test
inc
in
cmp
add
sahf
and
call
xchg
push
addr16
in
fldt
cmpb
stos
cmp
sbb
je
sbb
popf
aad
rol
mov
jae
push
mov
test
popa
hlt
push
out
sbb
mov
out
mov
mov
int
subb
xchg
inc
inc
dec
enter
mov
push
stc
push
aaa
mov
mov
sub
outsl
in
sub
dec
lock
jno
dec
call
push
mov
pop
rorl
mov
hlt
xchg
ja
mov
and
jmp
out
lea
cld
xor
dec
aaa
xor
ss
cs
imul
add
paddw
lret
leave
mov
add
mov
dec
pop
inc
mov
xchg
inc
and
push
lds
iret
cld
mov
movsl
pop
cwtl
add
popa
xchg
ja
jge
fcomps
lret
sub
mov
push
nop
int3
mov
and
fistpl
jl
das
add
jecxz
sub
out
test
cli
mov
pop
aad
mov
je
pop
ljmp
push
daa
cmc
fwait
jmp
mov
mov
insb
out
adc
test
pop
add
aas
push
cmp
std
inc
add
fisubs
loop
sub
insb
inc
sbb
adc
adc
mov
add
sub
or
out
and
rorb
push
ds
xchg
push
imul
jnp
mov
mov
in
loopne
inc
in
stos
mov
mov
mov
and
rcl
adc
add
inc
mov
in
mov
xor
sbb
fsubs
inc
push
dec
mov
push
xor
ret
pop
push
testb
xchg
inc
sbb
aam
pushf
dec
and
mov
add
lret
in
gs
xor
daa
mov
and
fists
movsl
jp
add
out
or
test
mov
movsl
test
inc
arpl
sbb
inc
insb
pop
cmp
cld
jmp
push
pop
fdivs
push
cmp
andl
sbb
negb
imul
int
cld
cmp
pop
pop
nop
xchg
arpl
mov
and
mov
cmp
das
and
mov
lea
and
push
add
je
cltd
icebp
frstor
cmp
cmp
into
jle
out
into
cmp
add
out
dec
mov
out
imul
mov
aad
mov
push
pop
rolb
dec
push
xor
stc
push
xchg
imul
add
into
lcall
daa
cmp
in
jns
mov
data16
je
insb
jb
push
out
rorb
inc
push
outsb
movsb
sub
xchg
jne
fs
jne
inc
mov
jbe
fidivs
inc
arpl
gs
pop
adc
das
loope
test
daa
cmp
into
insb
and
sbb
pop
test
shrl
mov
push
jo
xchg
sub
mov
dec
out
sbb
xchg
aas
adc
insb
mov
clc
loop
adc
cmp
sbb
cmpl
dec
xor
sub
sub
and
lods
test
insb
cmp
push
mov
add
enter
shl
adc
xor
xchg
push
pop
imul
lret
in
repz
xor
push
clc
sub
repz
test
hlt
mov
cmpsl
data16
sbb
jecxz
aad
in
sbb
ljmp
sub
pop
insl
std
aad
aaa
pop
jg
mov
icebp
dec
sub
ss
cmp
das
lea
or
lcall
mov
cltd
aad
jne
aaa
outsb
pop
mov
jmp
loope
mov
daa
outsl
cs
mov
push
sbb
gs
mov
popa
push
pop
adc
insl
jle
addr16
sub
stc
sahf
in
adc
xlat
insl
mov
repnz
pop
mov
adc
int3
adc
sbb
inc
jle
inc
sbb
inc
fs
pop
adc
pop
or
push
adc
ret
call
or
or
not
add
xor
mov
aaa
and
sub
mov
sbb
inc
aas
xor
adc
mov
xor
xor
push
sub
decl
inc
xor
popf
insl
in
add
jbe
ja
jb
dec
dec
loop
jns
test
nop
fwait
gs
out
cld
lret
test
cwtl
push
jmp
pop
sar
imul
imul
rcrl
sub
dec
sub
adc
out
mov
test
mov
xchg
push
ljmp
dec
adc
sbb
or
fldt
enter
popf
lcall
push
fsubrs
jge
orb
stos
je
dec
dec
out
inc
cmp
pop
sbbl
cmpb
aas
imul
sbb
jge
out
lds
push
int
cwtl
push
xchg
jns
aad
pop
clc
add
xor
adc
jle
pop
or
cltd
sub
fs
or
loop
pop
sbb
xchg
push
mov
in
jns
push
jl
dec
pop
cmpsb
or
sub
shll
dec
dec
scas
ret
ret
lock
pop
ficompl
xor
idivb
and
mov
scas
sub
enter
pop
or
mov
pop
leave
mov
inc
dec
and
rcrl
or
adc
pusha
cmc
sti
popf
adc
xchg
stos
sbb
xor
popl
dec
add
rcll
outsl
in
xor
and
mov
cmpsb
adc
add
arpl
stos
mov
lea
dec
test
push
or
dec
mov
cmp
arpl
insb
and
stc
push
jne
dec
inc
mov
sbb
repz
ficomps
sub
add
outsb
mov
fdivr
into
lock
add
sbb
pop
bound
push
mov
pushf
and
xorb
ror
push
int3
or
add
int3
imul
jecxz
mov
inc
jno
adc
push
mov
cltd
or
jg
into
sbb
mov
xor
shlb
push
inc
adc
sbbb
inc
push
sti
xor
dec
xchg
fiaddl
lds
sub
and
pusha
cmp
iret
pop
pop
mov
push
push
mov
outsl
cmp
sahf
mov
or
scas
rcll
rcll
pusha
adc
das
movsl
pop
aam
popa
out
lret
rcrb
mov
pop
sub
icebp
push
sbb
lcall
inc
mov
not
data16
push
and
std
pushf
xlat
sub
aad
xorb
pop
scas
jbe
xchg
mov
fsubrl
push
lahf
inc
scas
cmp
loop
dec
sub
lret
and
mov
cmp
cwtl
fisubl
imul
mov
and
dec
cltd
sbb
insb
mov
mov
add
jbe
je
xchg
dec
push
xlat
shlb
mov
xchg
aam
cmpsl
dec
daa
ja
inc
push
lret
mov
lret
pop
jmp
daa
fstl
scas
mov
pusha
fsubp
jno
cmc
xlat
in
pop
mov
aas
cmp
sub
je
pop
add
sub
and
scas
xor
loope
xor
xor
or
xor
pop
pusha
xchg
bound
add
xchg
mov
ret
cli
or
mov
push
fidivl
xchg
or
rclb
mov
test
das
push
stos
mov
mov
testb
push
push
mov
jno
mov
push
mov
adc
div
jl
xchg
xchg
push
inc
daa
daa
lret
les
lods
add
jle
in
das
push
les
pusha
cmp
jmp
xor
add
in
mov
xchg
sbb
adc
icebp
pop
ljmp
stos
les
mov
mov
mov
xor
scas
dec
pop
mov
adc
aas
pusha
mov
pop
xchg
test
cmp
pusha
insl
mov
scas
ljmp
mov
mov
loopne
jp
psubb
sub
gs
imul
and
aas
push
lahf
sbb
sbb
mov
in
aad
popa
arpl
cmp
lds
push
in
mov
in
out
mov
pop
sbb
je
adc
inc
and
mov
mov
lock
test
pop
pop
fdiv
andb
sbb
movsl
mov
sub
push
repnz
mov
sbb
mov
mov
jne
adc
inc
imul
add
lret
xchg
dec
mov
xlat
fnsave
mov
xor
sub
out
mov
jmp
jmp
fildl
cmpsl
mov
jp
outsl
adc
mov
mov
fcomps
mov
sti
popa
repnz
push
out
sub
movsb
fldz
mov
sbb
jb
and
aas
andb
cmp
aaa
sbbl
ret
sub
dec
push
sub
int3
hlt
xchg
fisubl
ds
fst
push
cmp
ficoms
xchg
arpl
out
mov
xor
pop
in
and
lods
and
add
sub
sti
sahf
mov
stos
fnsave
lds
or
pushl
dec
lds
std
and
les
iret
sbb
pop
fldcw
push
mov
push
jge
push
xor
or
sub
push
aas
xchg
push
and
sbb
je
repz
ficoms
aaa
pushaw
jl
fimull
sbb
push
add
ret
xchg
xchg
mov
scas
mov
sub
roll
push
xchg
push
ret
push
jno
pop
int
dec
mov
push
mov
push
mov
or
mov
pop
in
add
out
cmc
jb
add
cmp
add
pop
lret
gs
ret
fisttpl
mov
xor
and
mov
stos
sbb
std
mov
cmp
adc
cwtl
dec
inc
call
jb
sar
sbbl
dec
enter
daa
pop
adc
add
sbb
stc
fistl
dec
jecxz
aas
jno
xchg
scas
mov
mov
fsts
insb
in
repz
and
mov
jno
ss
mov
scas
xchg
outsl
andl
and
mov
loopne
out
cmp
mov
or
xor
mov
jge
cmpsb
push
xchg
jno
sub
xorb
lock
and
sbb
xor
pop
dec
mov
adcl
sbb
inc
mov
xorb
imul
lods
or
dec
add
pop
sbb
push
adc
pop
cmp
adc
push
mov
lahf
test
mov
mov
adc
ffree
cmpsb
inc
into
std
xchg
es
cmp
mov
mov
inc
cli
dec
mov
movsb
pop
jecxz
test
push
jne,pt
xor
push
or
pop
mov
repz
or
xchg
enter
dec
imul
mov
fidivl
notl
jg
adc
jmp
in
cs
lock
test
sbb
cs
or
aaa
fs
xchg
in
icebp
loopne
dec
jno
aam
inc
xor
movsb
idivl
fstpt
inc
pop
inc
aad
and
dec
int3
je
or
jecxz
adc
mov
xchg
cmp
mov
or
add
ljmp
sahf
pop
adc
mov
add
lcall
fbstp
leave
out
cmpsl
adc
inc
gs
popa
ljmp
outsb
test
push
jp
fldenv
jl
mov
test
mov
daa
fnstcw
inc
mov
neg
jle
hlt
mov
mov
hlt
mov
je
xchg
jb
call
mov
fmull
rclb
dec
dec
xor
test
lret
push
mov
add
dec
add
bound
lds
jl
loop
nop
push
ss
dec
xor
pop
push
inc
addr16
add
rcll
in
sub
cmpsb
add
cmp
out
outsb
pop
jbe
in
cmpsb
clts
cmp
and
cli
mov
push
outsl
scas
mov
std
push
sub
xor
fwait
mov
arpl
cli
push
jecxz
sub
pop
stc
push
adc
mov
fadd
push
xor
movsb
mov
pushl
xchg
jp
fdivr
dec
inc
jnp
fwait
lods
and
mov
pop
or
test
js
mov
in
gs
fsubrs
jecxz
mov
and
xchg
jecxz
sbb
mov
inc
or
push
mov
fwait
ds
or
fidivrs
mov
rcll
in
sub
lods
jp
push
ljmp
sub
inc
movsl
out
lret
stc
loopne
je
push
jbe
cli
stos
mov
dec
loop
hlt
std
lea
jb
sbb
adc
mov
or
movsb
imul
jmp
dec
cmpl
mov
insb
mov
xchg
add
xchg
shlb
popf
cmp
out
sbb
in
div
orb
imul
loopne
push
test
clc
shufps
lahf
mov
insl
sbb
mov
sub
inc
test
in
cli
inc
pop
xchg
adc
jecxz
into
and
cmp
pop
and
inc
adc
imulb
and
dec
daa
inc
adc
ljmp
leave
repnz
pop
aad
jno
pop
and
pop
loop
pop
ljmp
lds
adc
std
xor
dec
jecxz
lods
les
dec
jo
div
ret
mov
add
leave
jne
push
dec
pop
sub
cmp
negl
mov
pop
lods
call
pushf
push
sbb
out
jnp
rorl
or
dec
in
aaa
jnp
out
pop
mov
add
xor
mov
mov
arpl
adc
incl
jmp
fsub
cmovbe
mov
std
scas
jl
jl
push
out
pop
bound
shll
mov
push
xor
mov
inc
jp
or
push
add
ljmp
lea
cmp
xchg
add
insb
shl
in
cmp
inc
xor
loopne
cltd
mov
push
mov
sti
xchg
lahf
jl
pushf
movsb
adc
test
adc
sar
cmpsl
mov
ret
inc
cltd
cli
inc
cmp
ss
out
fisubrl
and
mov
jo
fdiv
in
pop
enter
out
pop
mov
sbb
test
jp
rcl
inc
mov
adc
sub
cli
pop
sarb
sub
sbb
gs
data16
sti
cmpsl
cmp
hlt
cmpsb
xor
cs
shll
mov
arpl
mov
and
fisubs
push
pusha
cmc
cwtl
fnstcw
hlt
mov
sbb
ss
ljmp
pop
sub
mov
in
sub
jne
lret
mov
jge
pop
inc
add
stc
xchg
mov
jecxz
int
or
add
jae
sub
jge
notb
cli
fwait
dec
xlat
clc
jns
mov
mov
mov
mov
jb
pop
cltd
sarl
popf
mov
roll
mov
call
cmpsl
mov
ret
or
mov
add
pop
lock
xor
andb
sbb
in
stc
mov
pop
outsl
push
mov
mov
lahf
notl
fwait
mov
das
cli
negl
aam
push
pop
icebp
cmp
arpl
sub
incb
push
adc
and
pop
xchg
jp
enterw
jl
sub
je
sub
in
sub
out
insb
cmp
mov
fildl
call
ret
xorb
cltd
scas
adc
idivl
pushf
sub
decb
sub
adc
pop
adc
push
rcrb
sbbb
cmp
jo
data16
add
jmp
dec
aad
cmpsl
aad
xchg
xor
imul
lds
sub
sahf
loopne
ja
iret
sahf
mov
pop
loopne
cld
cmp
idivb
outsb
fstps
and
mov
lret
inc
sbb
call
jne
dec
int3
or
cwtl
out
sbb
in
flds
xbegin
xchg
lods
lods
or
loopne
sbb
lahf
jle
pop
insl
imul
and
add
xchg
lcall
pop
mov
mov
outsl
lods
add
movsl
scas
push
mov
add
and
sbb
jmp
xchg
add
movsb
test
ljmp
inc
push
es
mov
jle
fldenv
cmp
xchg
shll
call
push
mov
testb
lea
fstps
or
sub
pop
scas
subl
dec
xor
pop
dec
jb
cmp
icebp
stc
sub
jne
lret
xor
xlat
aas
mov
in
xrelease
jno
test
aad
push
jle
mov
imul
sti
fdivrs
lret
jp
sbb
sahf
cmpsb
mov
inc
inc
lret
aas
movsl
sbb
jmp
lods
add
mov
lcall
aad
mov
push
push
daa
lea
cmp
insb
jl
push
xchg
jns
ljmp
popf
add
shlb
push
sbb
fs
outsb
and
les
pop
mov
lods
cld
cmp
and
out
push
mov
inc
lods
inc
add
sbb
push
pop
aad
movsb
push
push
iret
and
lahf
adc
outsl
mov
cmpsl
stos
clc
xor
out
leave
mov
fnstenv
mov
push
adc
insl
lea
xchg
or
enter
or
mov
movsb
sub
sub
out
lret
sub
cmp
andl
mov
mov
jl
pop
std
pop
push
lods
aaa
roll
or
xchg
adc
flds
iret
inc
pop
jb
leave
push
out
dec
xlat
add
pop
jp
pushf
sbb
movsl
addr16
in
or
jp
jp
xchg
jno
cltd
pop
lds
jae
jno
sub
add
pop
sahf
sub
jg
push
bound
sbb
ljmp
test
outsl
daa
sub
mulb
pop
sbb
add
pop
cmpsl
or
xchg
inc
fistpll
cmp
call
fidivrs
xchg
inc
jno
xchg
shll
mov
and
outsb
cmp
movsb
mov
lcall
adc
mov
icebp
jae
sbb
cmp
and
fs
cmc
jp
aam
in
pop
mov
sbb
das
or
jb
jae
mov
sub
cmp
stos
test
xchg
xlat
pop
dec
fcmovnb
call
mov
sbb
pop
pop
fwait
xchg
rcrb
mov
push
xor
push
popa
cltd
xchg
pushf
adc
bound
fmulp
dec
addr16
cmp
adc
mov
iret
lods
jae
pop
js
mov
or
add
pop
push
in
cmp
jns
lea
sub
inc
jmp
cmp
or
es
pop
mov
int3
jmp
imul
or
cmp
stc
adc
in
movsl
mov
and
je
clc
sbb
clc
dec
mov
cli
fsubrl
mov
inc
mov
xchg
sahf
sbbb
push
into
fbld
sub
stc
sbb
push
stos
sub
push
lock
cmpsb
ljmp
cmp
adc
mov
xor
push
insb
les
xorl
mov
cmp
dec
std
xchg
mov
cmp
lock
lods
jbe
and
rol
lcall
cmpsl
adc
pop
push
mov
aam
imul
or
popf
sbb
ficompl
hlt
ja
pop
adc
jnp
gs
fcom
in
rorl
jl
add
jge
push
fwait
mov
or
jge
pusha
fwait
jbe
pop
fldenv
jg
rorb
inc
in
xor
fwait
es
pop
add
or
cs
fcmovne
outsl
cmp
dec
mov
and
jbe
in
sub
push
icebp
test
dec
repnz
adc
jnp
and
ja
push
pop
aam
pop
mov
cmp
in
xchg
shrb
push
movsl
decl
test
jp
cwtl
insb
imul
imul
sub
jns,pt
xchg
push
pop
sbb
fistpl
add
sub
jnp
or
or
jecxz
jno
sub
gs
xchg
fwait
sarb
or
int
jge
xchg
jmp
addr16
shlb
mov
or
push
mov
sbb
mov
fxch
jle
mov
and
lret
je
iret
movsb
pushf
push
insl
fwait
aad
std
aas
dec
movb
sbb
mov
clc
std
and
mov
xchg
dec
mov
inc
push
adc
jl
mov
pop
mov
ret
call
sbb
shll
inc
fsubrp
mov
testl
cltd
movsl
add
pop
jge
mov
rolb
mov
or
scas
inc
subb
xchg
out
xchg
push
mov
ret
sub
insb
imul
enter
pop
sbb
xor
pop
shlb
mov
sub
fsubl
sub
out
shl
push
mov
mov
xor
repnz
scas
and
pop
daa
sub
cmp
cmc
and
aas
mov
imul
mov
jmp
and
push
push
push
xorb
jo
gs
pop
push
lret
mov
push
cli
lds
jmp
sbb
cmp
mov
test
or
dec
dec
add
dec
cmp
mov
scas
outsl
mov
dec
jns
pop
mov
sub
sahf
clc
fstpl
cmp
data16
push
push
fidivl
shrb
dec
push
shll
xchg
stos
xchg
xchg
sub
test
or
jbe
movsl
mov
mov
mov
loope
data16
add
stc
xchg
push
inc
scas
inc
popa
lcall
mov
and
sub
das
fdivl
jne
inc
dec
push
pop
or
dec
inc
test
jl
pusha
mov
xchg
cmp
or
pop
xchg
mov
mov
pop
sbb
mov
cmp
sub
push
add
cmpsb
jge
cmp
cmp
les
cli
out
lcall
lock
mov
jge
icebp
je
cmp
rorl
dec
arpl
adc
and
mov
xchg
out
or
mov
push
mov
pop
sbb
out
pop
add
cld
aad
xor
loop
test
daa
mov
mov
repz
ror
mov
out
xor
aaa
push
push
xchg
out
push
imul
movsb
adc
add
scas
scas
jno
call
lea
mov
sahf
test
repnz
bound
lcall
lcall
int3
cmpsl
pop
jae
sub
pop
or
mov
clc
scas
insl
into
inc
divb
mov
jb
rorl
jnp
out
cmp
ret
or
ljmp
cmpsb
ret
jl
sub
imul
lcall
push
sub
jge
dec
dec
dec
call
mov
adc
pop
ficoms
jge
rolb
pcmpgtb
mov
pop
movb
dec
outsl
shrb
movsl
fidivl
loop
rcl
je
lahf
xchg
adcl
fs
push
into
jle
out
sub
mov
popa
mov
jge
and
jle
push
sarl
inc
mov
loop
mov
setb
outsb
outsb
mov
push
insb
fcoms
call
xchg
lods
sbb
dec
adcl
xor
sub
hlt
push
aam
jne
sub
popa
sbb
sub
xchg
push
cmp
cmp
mov
sbbl
data16
push
icebp
ficompl
popa
jbe
adc
mov
cmpsb
ja
xchg
sti
sub
rcrl
imul
cmpsl
data16
add
cmpsl
sub
xor
sbb
into
pusha
pop
gs
mov
in
and
movsl
negb
xchg
adc
mov
lods
sub
mov
stos
sub
inc
adc
fmuls
sbb
push
test
mov
fwait
jecxz
test
in
movsl
push
scas
xchg
lcall
pusha
nop
imul
repz
leave
jge
jbe
outsl
jp
sub
dec
xlat
add
add
push
xor
test
xchg
cs
fnsave
mov
loope
jg
sti
leave
pop
xchg
mov
sub
adc
fnstenv
js
iret
dec
pop
ds
aam
fcoml
popf
dec
stos
push
sub
cmp
data16
mov
mov
dec
push
inc
je
rorl
mov
push
gs
add
inc
mov
push
mov
jne
mov
push
add
xchg
sti
out
in
xlat
bound
in
push
mov
pop
out
movsl
xlat
push
in
daa
lods
pslld
in
aaa
pop
push
mov
push
filds
stos
or
pop
inc
in
fidivrl
lcall
push
mov
dec
lahf
mov
and
or
mov
daa
stos
push
dec
or
xlat
cmpsb
imul
out
js
jle
jecxz
sub
ss
inc
inc
push
lods
faddl
bound
insb
imul
mov
or
repnz
inc
or
outsl
pusha
fsubrl
pusha
arpl
pop
sbb
or
sub
jb
sub
lahf
nop
cmpsl
sbb
in
lret
sahf
inc
jbe
mov
loop
faddl
adc
rorb
adc
daa
sahf
clc
push
add
pop
or
and
push
adc
scas
dec
dec
xchg
leave
mov
testl
or
loope
enter
addr16
in
xchg
pusha
push
imul
repz
jp
lret
xchg
or
jmp
test
add
inc
sbb
cmp
dec
out
and
add
push
test
lcall
out
mov
test
test
lret
fimuls
pop
adc
rcr
cltd
popa
add
ret
lods
popa
repz
test
fmull
adc
or
lret
inc
movsl
es
pop
call
mov
inc
enter
mov
shl
pop
lret
cmp
or
xchg
push
fisubs
enter
push
pop
sub
xor
push
mov
fst
dec
aaa
ret
rolb
data16
std
es
lahf
fisttpll
data16
pop
lods
ds
in
popf
cmp
cli
test
cmp
out
mov
xchg
loop
pop
fisubl
cltd
test
pop
jecxz
pop
clc
add
movd
rcr
mov
rclb
xchg
jl
fiadds
sarl
jno
push
loope
push
inc
pushf
jno
add
fnstsw
test
dec
bound
adc
fists
in
mov
dec
push
jno
or
cltd
adc
mov
std
repz
shrb
aas
fisttpl
sub
out
mulps
adc
xlat
jb
popf
pop
outsl
cmp
subl
addr16
sub
dec
dec
mov
ljmp
adc
in
loop
mov
stos
out
aas
push
dec
xchg
loop
fstpt
rep
dec
mov
imul
out
stos
pop
jp
scas
xchg
scas
dec
ret
pop
sbb
sbb
adc
push
or
jno
icebp
lcall
push
inc
shlb
movb
pop
call
pop
ds
cmp
jp
subb
mov
or
mov
inc
mov
icebp
out
sbb
cmp
inc
add
int
pop
cld
jle
rorb
xchg
xchg
jge
arpl
jnp
arpl
mov
cmp
cmp
loope
adc
push
cmp
mov
ds
adc
xlat
sub
mov
add
jp
mov
cmp
sbbb
push
repz
pusha
ljmp
jno
push
push
test
push
lock
rorb
xor
add
idivl
add
bnd
or
jno
testb
sub
or
inc
mov
jne
std
mov
inc
ds
orb
aaa
jge
dec
cltd
push
pop
sub
insb
jne
mov
cld
dec
add
clc
les
lock
mov
cmc
add
jecxz
cltd
xlat
clc
fnstenv
mov
inc
lcall
loopne
call
sti
popf
fisttps
ljmp
cmp
jno
cmpsl
cs
fstps
add
sbb
push
daa
xchg
in
test
adc
fcomip
mov
jle
out
enter
sub
lods
jl
or
dec
mov
xchg
in
fcmovnu
cwtl
pop
outsl
add
sub
mov
ss
cli
inc
fnsave
sti
jnp
pop
cs
sti
dec
bnd
xor
gs
shlb
addr16
loopne
jmp
xor
pop
daa
cmp
into
repnz
lret
push
pop
jo
sbb
sbb
xchg
adc
jp
mov
cs
cmpsl
pop
sbb
pop
lods
push
inc
add
outsb
mov
adc
out
outsl
test
scas
push
sub
orl
cs
adc
xchg
dec
sbb
in
xor
and
shr
xlat
or
nop
popf
jb
fs
sub
fiadds
loopnew
and
adc
es
jo
ret
call
sub
inc
lcall
sub
add
sbb
or
dec
xchg
ret
push
inc
imul
mov
mov
pop
push
fsubrp
adc
inc
hlt
cvtdq2ps
in
test
or
push
movsb
xchg
gs
ja
xchg
pop
pop
xchg
out
rorb
adc
xor
sub
mov
mov
nop
cmp
cld
pop
icebp
cmp
and
rol
jbe
adc
add
je
or
mov
lods
int3
add
lahf
mov
xchg
mov
dec
popa
test
pop
stos
xor
push
mov
push
jmp
ror
fwait
pop
lahf
or
mull
lret
adc
xor
rcll
outsl
add
nop
addr16
mov
add
aam
jne
cmp
jbe
cld
insb
jno
pushf
push
adc
roll
faddl
and
insb
dec
gs
mov
adc
lahf
cli
clc
pop
xchg
mov
xchg
fidivl
stc
aad
sbbb
adc
fwait
inc
mov
scas
enter
push
daa
xchg
dec
int
cmpsl
paddsw
inc
inc
inc
jl
cmp
sbb
in
fsts
out
adc
jae
mov
sahf
pop
adc
xchg
or
fadds
int
inc
jno
mov
or
stos
add
mov
inc
loopne
mov
mov
mov
popf
scas
es
push
cmp
sahf
lods
mov
inc
js
mov
sbb
ds
mov
inc
mov
sbb
push
insb
dec
nop
hlt
lret
mov
push
cmp
inc
fimull
popf
repz
stos
ja
sub
mul
xchg
lods
andl
adc
sbb
cmp
sub
inc
imul
add
sub
sub
inc
mov
cmp
or
jmp
divps
test
gs
pop
pushf
adc
mov
pop
imul
jecxz
ja
and
jl
pushf
lods
jmp
push
lcall
mov
out
dec
in
mov
cwtl
fimull
mov
dec
jo
test
mov
pop
aaa
test
mov
lods
adc
xchg
cmp
cli
xchg
add
jo
cmpsb
int3
lcall
aas
cmp
in
lahf
sub
sbb
jp
jl
mov
mov
pop
fisttpl
jecxz
pop
js
xor
in
filds
or
mov
fld
cmp
cmpsb
mov
jecxz
inc
movb
mov
les
fidivrl
fcmove
and
or
pushf
jb
je
mov
fmuls
jae
lcall
xchg
xchg
push
mov
xchg
loopne
lock
mov
xor
dec
inc
mov
popf
lods
sub
xchg
or
mov
aam
fsubrs
sub
ds
sbb
and
ret
cwtl
add
dec
sbb
or
mov
jb
scas
repz
xor
int3
leave
sub
movsb
into
and
push
in
cmpsl
cmpsl
sub
dec
popf
repnz
lahf
or
jmp
jecxz
pop
pop
add
in
inc
test
repnz
shrb
inc
mov
fwait
xchg
inc
outsb
dec
mov
jo
xor
in
nop
fidivs
mov
js
das
push
movsb
cmp
mov
in
mov
fcmove
lds
sub
adc
rorb
lock
or
mov
sahf
ljmp
or
adc
mov
xchg
cli
adcl
inc
xorb
cltd
loope
jno
mov
push
jl
pop
lcall
push
mov
pusha
ret
cltd
stos
and
push
popa
xor
out
stc
cld
mov
out
lods
nop
push
inc
pop
sarl
cmpsl
into
shll
xchg
mov
jo
mov
mov
repz
insl
jle
mov
cmpsb
sub
add
insl
mov
mov
outsb
ret
movsl
test
dec
test
adc
popa
mov
fildl
xor
sarb
test
imul
aam
sarl
shr
jecxz
insl
add
pop
mov
in
sti
testl
ss
dec
sbb
ds
mov
mull
mov
nop
jl
mov
iret
fadd
fisubs
mov
mov
cmpsl
cli
push
pop
movsl
incb
and
xchg
int3
imul
adc
xchg
outsb
pushf
mov
out
mov
pushf
pop
push
inc
stos
pop
out
int3
inc
inc
insb
jle
xchg
cmpsb
inc
test
xor
ficoml
mov
clc
nop
aaa
or
mov
xchg
call
add
out
test
lock
stos
loop
sbb
stos
inc
mov
cmp
jb
cwtl
loopne
inc
adc
sbb
jp
ret
outsb
fcompl
push
pop
movsb
ss
pusha
mov
mov
pop
mov
inc
flds
push
in
mov
popa
cmp
ds
add
mov
fidivl
pop
mov
sub
dec
adc
cmp
mov
push
inc
outsb
xchg
push
push
outsl
mov
aad
cmpsb
jo
xor
aaa
adc
ja
mov
pop
pop
add
test
rcll
or
test
shlb
es
jle
idiv
fidivs
add
mulb
mov
xor
ljmp
xor
inc
xchg
xor
sub
cmpsb
int
jbe
mov
inc
pop
cmc
mov
daa
sbb
rorb
push
adc
add
jo
mov
call
xchg
jae
dec
shl
out
or
in
je
inc
test
inc
mov
test
es
bound
inc
negl
pusha
out
sbb
push
jno
cld
inc
stc
scas
hlt
lahf
lods
imul
aaa
mov
cmp
or
jae
out
dec
in
dec
cmc
pop
and
cwtl
sbb
enter
mov
rcrb
xchg
lods
add
shl
les
orb
jo
lret
out
or
cmp
popf
inc
nop
lods
jg
cwtl
sbb
add
jecxz
out
insb
scas
push
repnz
sahf
or
cmp
pushf
aam
ja
add
cmpsl
repnz
repnz
aaa
test
rcrl
xor
aam
ret
insb
xlat
pop
pop
bound
fnstcw
push
mov
sbbb
mov
jge
imul
pop
js
out
hlt
xchg
inc
pop
popa
pop
ss
sbb
jle
call
push
push
fistl
mov
fwait
mov
adc
or
pop
popf
popa
push
xchg
jmp
int3
mov
xchg
lods
sub
inc
test
arpl
cmp
cmpb
add
xchg
enter
ret
test
ja
xor
cmpxchg
adc
and
aad
ret
pop
test
stos
sub
stos
push
faddp
lret
jmp
adc
pop
cld
scas
in
sbb
add
xchg
mov
clc
test
in
mov
clc
cmpsl
add
xor
pushf
jbe
or
pop
lcall
or
and
and
popa
pop
pop
xchg
lret
movswl
ret
test
scas
jno
enter
inc
add
add
out
sbb
push
or
aad
jno
jmp
loope
pushf
jnp
pop
xor
shl
jae
jae
je
jecxz
sahf
adc
xlat
leave
pop
rcll
cmp
lea
add
out
inc
enter
rcrb
sub
adc
sti
jmp
sub
sub
mov
and
in
and
or
arpl
loop
adc
push
mov
stos
pop
push
cmp
popf
push
add
fsubrl
mov
xchg
cltd
dec
sti
mov
pop
xor
in
xor
jo
xor
dec
mov
aas
mull
adc
mov
fldl
js
inc
decb
pop
xchg
cmpsl
cmp
movsl
dec
loopne
pusha
maxss
cmovl
fbld
rolb
jle
imul
inc
popf
mov
mov
mov
aaa
pop
xchg
sti
push
or
push
jns
dec
aam
xchg
xchg
aas
js
sbb
mov
jmp
test
iret
test
cmpsb
jo
icebp
sbb
push
js
push
nop
repnz
scas
and
push
fistpll
movsb
sbb
outsb
mov
lods
mov
mov
mov
test
xor
int3
mov
enter
lods
mov
push
jle
adc
pop
dec
scas
into
std
push
mov
pop
pop
subl
jae
icebp
loop
xchg
ret
int
cmp
ds
ret
cli
lods
cmc
add
shufps
push
cmp
lahf
int
ds
lea
js
les
sub
dec
mov
mov
and
ret
cmp
push
jns
cwtl
loope
mov
ds
sbb
dec
insl
mov
jge
mov
jb
jmp
in
cmp
das
pop
outsl
stos
mov
insl
inc
in
pop
sub
loopne
lods
mov
cli
and
fistpll
xchg
push
daa
arpl
sub
adc
mov
adc
aaa
stos
mov
xchg
sti
xchg
sbb
scas
push
sahf
jecxz
fs
pushf
movsb
shrb
or
call
ret
scas
sahf
rolb
clc
lea
cmpsl
xchg
jge
lea
xor
stc
lods
pop
shrb
lcall
jns
das
pop
adc
ds
xchg
xchg
fwait
mov
fldpi
sbb
mov
push
fucomp
mov
cmp
mov
popf
mov
ds
fwait
lret
inc
mov
sub
jae
in
mov
lea
cmp
iret
js
mov
loop
int3
pop
adc
cmpsl
test
insl
and
sub
ficoml
mulb
xchg
pop
push
movsl
jb
pushf
fcomip
fistpl
jmp
pop
xchg
or
iret
inc
fmuls
icebp
adc
push
sub
test
or
call
push
xchg
jg
decb
fwait
pop
insb
xchg
or
pusha
xlat
neg
ja
xor
fisttpl
mov
out
rcll
hlt
scas
and
test
jmp
mov
sub
dec
jmp
inc
xor
insl
mov
in
cld
jge
mov
jbe
out
and
shll
addr16
aad
xchg
xchg
xchg
cmp
xchg
je
bound
gs
stos
fwait
fs
ret
sub
add
xchg
lcall
icebp
mov
mov
hlt
jb
addr16
push
loopne
add
jae
jecxz
mov
pop
push
adcl
iret
outsb
imul
mov
fldenv
cmp
sbb
mov
in
in
out
cmp
mov
rclb
dec
xlat
jg
xor
cmp
push
sbb
push
mov
mov
mov
push
sub
adc
in
or
popa
push
add
popf
sahf
repz
ret
xchg
push
or
lret
push
test
mov
push
or
push
es
in
movsb
inc
jnp
mov
aas
cmpsb
bound
inc
test
das
sbb
lcallw
push
std
pop
adc
lret
inc
fsubrp
movsb
push
rcll
cltd
sbb
inc
jge
lret
or
or
push
sbb
mov
cmp
push
loopne
sbb
in
stc
xchg
lcall
jmp
movsl
mov
mov
lahf
inc
sbb
mov
jp
push
ret
xor
xchg
dec
ret
data16
dec
xor
inc
inc
sahf
dec
into
inc
popf
xor
sti
push
iret
lds
dec
arpl
push
in
sbb
aaa
jo
mov
loop
aam
addr16
jno
adc
daa
mov
sbb
out
push
xchg
sub
scas
mov
icebp
and
xchg
mov
int
sbbl
dec
aas
andb
data16
or
pop
mov
mov
ss
in
ror
gs
sti
fnsave
or
mov
sbb
in
aas
xchg
adc
push
cmp
cmc
push
mov
shlb
xchg
and
sti
or
mov
inc
fwait
cwtl
dec
test
sbb
mov
out
mov
sbb
fmuls
push
orb
dec
adc
ss
mov
push
push
sbbb
fwait
scas
int
fbld
test
dec
movsb
aaa
xchg
dec
lock
das
sbb
popa
cs
stc
mov
cmp
xor
lods
mov
or
and
in
mov
push
aas
fisubs
mov
mov
fs
sbb
jmp
dec
pop
jecxz
rorl
repnz
sub
cld
loope
or
stc
setl
aaa
xchg
cmp
mov
mov
mov
jmp
xchg
mov
sbb
out
inc
push
aas
push
adc
push
dec
hlt
ds
xchg
add
or
dec
adc
sub
or
lcall
mov
and
leave
movsl
outsl
out
arpl
jle
adc
adc
imul
mov
dec
xor
bound
xor
in
pop
jp
sbb
mov
cmp
or
push
movb
aaa
sbb
ficompl
jbe
cmp
fnstenv
in
mov
push
xor
in
loope
lahf
data16
clc
adc
ljmp
cmpb
cltd
jmp
cmp
sbb
iret
sub
not
xchg
loopne
lods
lods
cmpsl
adc
and
pop
adcl
daa
xchg
cmp
insb
pop
mov
test
sbb
or
leave
adc
gs
ret
fisubrl
dec
mov
jne
jb
xchg
xchg
sarl
sub
pop
xchg
into
or
shll
pop
or
aaa
testl
popa
or
pop
and
leave
aas
mov
or
mov
stos
stos
cli
or
repnz
mov
push
dec
dec
data16
dec
lea
push
int
add
xor
mov
cwtl
pop
in
repz
setae
stos
rcll
jge
ret
push
arpl
testb
leave
in
enter
mov
and
inc
adc
test
push
mov
inc
xor
popa
fistps
es
xchg
push
test
movsb
or
add
mov
ret
fimull
ficompl
xchg
sbb
leave
cld
sub
cmp
pop
push
test
in
idivl
dec
and
stos
jno
xchg
add
nop
fiaddl
nop
test
xor
add
fcoml
add
xlat
push
pop
pop
stos
mov
sub
mov
push
cmp
into
xchg
insl
aaa
in
sbb
push
mov
lcall
jle
stos
xchg
adc
mov
inc
inc
jo
frstor
int
pop
lock
daa
mov
inc
pop
add
add
dec
adc
repz
out
mov
imul
sub
or
add
aas
mov
mov
jno
andl
push
sbb
jb
inc
or
mov
mov
out
repz
pop
add
data16
js
outsl
repz
sub
pop
push
lods
mov
push
sbb
pop
sbb
cmc
daa
sbbl
negb
pop
or
ret
subl
aad
xchg
in
iret
jne
mov
cmp
push
cltd
pop
and
sbb
or
test
in
jo
xor
cmp
cmp
enter
jmp
mov
icebp
or
jne
cmp
pop
pop
mov
inc
jmp
fsubrl
inc
push
push
dec
adc
ds
hlt
scas
sbb
outsb
inc
mov
mov
mov
stc
or
xchg
mov
add
cmp
or
mov
jg
jno
cmovno
test
pusha
push
ljmp
sub
and
inc
adc
xchg
test
push
iret
lea
lds
test
out
cmp
mov
jp
ret
inc
imul
fwait
mov
ja
out
push
mov
rcr
rcrl
dec
into
xchg
fdivrl
add
lahf
cmc
pop
inc
add
mov
sub
sbb
insb
and
lea
xchg
xchg
js
pushf
cmp
inc
xorb
sub
rclb
std
xlat
mov
arpl
cwtl
mov
movl
sarb
fsubl
jb
push
repnz
xchg
dec
les
pop
inc
jmp
leave
mov
js
stos
shrl
gs
lock
mov
dec
repnz
cmpsb
pop
add
ds
test
push
sarb
dec
outsb
pop
push
ljmp
or
scas
xchg
test
pop
outsb
test
cmp
outsl
xchg
xchg
imul
sti
add
xor
push
not
iret
mov
das
sub
adc
int3
lods
mov
out
adcb
aaa
push
in
out
test
mov
jbe
addr16
cmc
bound
dec
xchg
mov
inc
aam
push
fdivrs
mov
imul
mov
sahf
mov
lods
push
out
inc
stos
sub
mov
jg
push
scas
push
bnd
fimull
aad
enter
std
xchg
pop
push
adc
cmpsb
mov
cli
pop
sub
lock
iret
xor
in
mov
movsl
mov
std
pop
addr16
stos
insb
pop
jmp
or
lret
jne
jnp
push
inc
adc
scas
jbe
test
into
dec
inc
xchg
push
adc
sbb
test
movsb
push
data16
popa
mov
mov
pop
fwait
adcb
jp
ljmp
jbe
mov
flds
and
pop
and
lea
pop
int
daa
jecxz
push
mov
stos
leave
je
repz
jecxz
jle
mov
into
in
sahf
xchg
out
fbld
mov
shll
ret
sbb
cld
jbe
push
sbb
and
insb
xor
jno
js
pop
mov
sub
pop
mov
mov
roll
adc
popa
cmp
push
xchg
clc
int3
jl
xchg
pushf
ja
mov
xor
test
xor
adc
pop
outsb
xor
cmpsb
add
pusha
jbe
and
adc
add
mov
mov
xor
mov
call
inc
xchg
nop
sahf
rcll
mov
inc
mov
nop
pop
adc
fiadds
lret
mov
and
jge
mov
push
lahf
mov
xor
push
loopne
add
stos
pop
cwtl
jp
push
inc
sub
and
sub
incb
repz
mov
xchg
jle
stos
mov
jecxz
add
ljmp
pop
in
jno
push
aas
add
aaa
stc
lcall
mov
in
enter
pop
xchg
mov
adc
subb
repnz
stos
push
cwtl
push
and
xor
jbe
push
push
aas
cmp
shr
adc
pop
jno
mov
adc
mov
mov
and
cmp
xchg
movsl
push
inc
inc
test
jle
mov
int
xor
hlt
leave
sub
xchg
add
out
or
mov
push
in
lret
cmp
xchg
cmpsl
sbb
mov
test
cmpsb
add
sbb
out
lret
pop
insl
cmp
je
push
aaa
jo
scas
mov
jp
jecxz
xor
adc
loopne
test
mov
dec
test
fsubl
cs
sub
adcl
paddw
scas
dec
lods
pop
jo
sbb
hlt
fldcw
push
inc
shll
push
jae
jp
sub
dec
adc
shlb
inc
cltd
xor
ja
call
fimuls
daa
mov
fldl
test
roll
sbb
and
push
jg
icebp
dec
ret
dec
jnp
and
sbb
or
sub
inc
push
jne
rclb
adc
je
sub
or
dec
sub
je
in
sub
pop
mov
aam
subl
ds
add
stos
jmp
daa
hlt
pop
js
xor
call
addr16
xchg
stos
cli
mov
adc
fisttpll
repz
in
mov
xchg
in
mul
add
inc
pop
mov
ror
or
sbb
cmp
ljmp
das
fstpt
test
push
cs
mov
cmovnp
filds
xchg
jge
xchg
sarl
repnz
push
outsb
shll
add
paddd
sub
pop
sub
dec
push
test
sub
rcr
push
lods
scas
mov
repz
mov
cmp
mov
out
hlt
fildl
scas
stc
fsts
scas
sbb
bound
push
nop
loopne
idiv
add
out
pop
bound
push
mov
cltd
inc
mov
add
xchg
fildll
repnz
xchg
push
shl
jle
sti
shr
mov
add
and
xor
aad
popa
out
xchg
push
lret
sbb
fiadds
pop
xor
add
nop
pop
cs
roll
mov
inc
cmp
and
ss
jp
loope
jae
xor
jg
ror
call
pushf
cltd
lods
shll
fiadds
int
sbb
mov
icebp
and
fadds
mov
jbe
cld
xor
xor
outsb
outsb
movsb
and
mov
xchg
mov
pop
loope
rcl
in
movsl
popf
outsl
call
popa
cld
dec
or
cmp
or
dec
stos
lret
insb
ror
stos
std
pushf
push
pop
pop
fwait
sub
cmp
dec
cmp
push
push
inc
push
pop
pusha
mov
mov
mov
call
adcb
fildll
pop
mov
scas
loopne
int3
mov
bound
stc
adc
adc
jmp
fs
fucomp
repz
cmp
xor
mov
sub
in
jb
cmc
mov
les
les
cmc
dec
lcall
sbbl
jl
jno
loopne
ds
lea
dec
push
lock
pop
push
inc
imul
aad
push
dec
imul
in
mov
push
push
pop
inc
outsl
xchg
add
pop
jae
out
subb
xchg
jo
imul
es
add
pop
or
pop
mov
inc
ss
es
xchg
movb
fs
xlat
dec
dec
jne
inc
sbbl
orb
repnz
nop
pop
lods
in
sub
mov
adc
mov
out
adc
lcall
pop
imull
and
sub
mov
lcall
mov
xchg
bound
call
xchg
mov
shlb
cmc
out
mov
pop
jbe
mov
jmp
pop
mov
roll
sub
shrb
aaa
sbb
pop
and
je
xchg
cwtl
and
inc
lcall
push
sub
or
adc
rclb
push
cmp
mov
fsubs
mov
cmp
mov
jns
imul
out
ret
mov
daa
adc
and
inc
cmp
or
or
pusha
inc
addr16
sub
sub
fsubs
subl
inc
rorl
mov
add
lahf
mov
sahf
clc
je
jl
cmp
jp
inc
out
mov
lret
inc
sub
and
jno
pop
shl
test
mov
jbe
shl
mov
mov
pushf
lahf
mov
sbb
mov
lcall
in
jns
popf
popf
jnp
mov
push
dec
je
das
xor
loop
and
push
xchg
xchg
mov
fnsave
popa
shlb
xchg
sbb
mov
mov
adc
ret
filds
mov
mov
cmove
cmp
adc
mov
sbb
xchg
enter
jg
inc
push
cmpsb
add
pop
popf
jae
jle
mov
div
push
mov
stos
pop
push
sbb
pop
push
fnstenv
inc
int3
lret
mov
xchg
pop
inc
fisubl
sub
mov
scas
movsl
push
cmp
xor
mov
push
aam
sbb
ret
sbb
arpl
cli
dec
loopne
fnsave
subl
repnz
dec
add
pusha
in
fwait
gs
lods
cmp
nop
es
lea
mov
push
xor
adc
adc
mov
outsb
push
mov
sub
je
cmp
mov
adc
add
jne
inc
or
push
dec
in
adc
cmpsb
dec
and
sub
inc
adc
mov
sti
lea
js
stc
out
mov
cmp
rorl
pop
mov
push
setne
ljmp
scas
add
gs
shrb
insb
rcl
sbb
ficompl
dec
jnp
repnz
stc
adcb
retw
mov
imul
inc
mov
outsl
dec
xchg
inc
xchg
push
cmp
add
lock
inc
sub
mov
dec
int3
sbb
hlt
nop
popa
push
ja
cltd
loopne
frstor
pushf
inc
push
fldt
xor
repz
pop
fadds
icebp
xor
enter
insl
and
sub
dec
mov
xlat
daa
adc
adc
cmpsl
fstpt
movsb
add
adc
insb
insb
sub
sarb
ljmp
dec
or
outsb
iret
push
rorl
icebp
dec
sub
hlt
mov
aad
std
xchg
dec
imul
lret
xchg
pop
mov
mov
dec
and
ss
and
pop
push
mov
push
fistpll
ret
sub
adc
xorb
dec
aas
lcall
cs
divb
push
stos
mov
icebp
lods
test
imul
ret
mov
sbb
adc
sub
jle
decb
mov
pop
sahf
xchg
push
mov
shlb
sbb
imull
or
add
repz
lods
imul
shll
lret
xlat
rol
cmpl
pop
fistpll
movsb
sub
adc
cmpsl
loope
iret
pop
aam
pushf
inc
shlb
cmp
lods
mov
outsb
aas
xchg
xchg
movsl
mov
lcall
lods
dec
popa
shrb
test
xor
lods
mov
lods
arpl
push
push
sbb
cmp
mov
push
outsl
jae
mov
mov
pushf
in
mov
lock
ss
sti
xchg
call
testb
xor
js
mov
or
clc
imul
repz
dec
test
and
incl
out
int3
mov
je
mov
out
add
jno
nop
pop
leave
imul
jg
gs
jmp
jnp
pop
test
pop
hlt
add
clc
push
cld
ja
std
ds
cmp
sbb
inc
jmp
mov
mov
xchg
push
iret
or
fcoms
ss
push
jmp
das
lret
insb
in
mov
mov
push
push
or
sub
repnz
ret
and
movsl
sbb
cltd
lret
inc
repz
sarl
out
and
repnz
aas
les
jns
inc
scas
xchg
scas
in
and
mov
cmp
stos
cmpsb
das
xchg
mov
xchg
adc
lds
push
je
sub
mov
pop
and
rorl
and
add
punpcklbw
jecxz
into
or
jmp
cmp
into
out
cmp
fisttpll
loopne
inc
jmp
adc
ret
add
jl
adc
lds
sbb
add
inc
lea
out
std
or
lods
jmp
jae
xchg
lds
pop
sbb
push
lea
mov
repz
enter
test
jmp
jle
sub
dec
xor
in
jecxz
sbb
bnd
mov
add
mov
daa
data16
hlt
icebp
pushf
out
adc
leave
cli
add
outsb
jne
into
jns
hlt
mov
rcrl
sbb
sbb
nop
cltd
xchg
pop
or
rolb
imul
lret
rorb
hlt
data16
ja
shlb
cmpsl
push
lods
pop
or
lea
shr
xor
cs
mov
pop
inc
and
gs
and
pop
dec
add
test
adc
shr
sbb
push
ja
js
xchg
fcomi
in
leave
aam
adc
cmp
dec
mov
sbb
push
ljmp
out
add
mov
push
xor
push
das
xor
aaa
aaa
mull
jae
sbb
loope
out
into
sbbb
cmp
mov
mov
insb
je
mov
pop
sbb
push
add
insl
fiadds
sahf
xchg
mov
cmpsb
xor
mov
out
repz
mov
push
out
loop
and
xor
fimuls
loopne
mov
mov
lods
in
jle
push
cmp
inc
fidivs
xlat
xchg
jmp
lock
inc
sub
add
popa
test
xor
jo
cld
ret
xor
hlt
sbb
pop
test
icebp
mov
pop
pop
mov
jnp
lea
es
push
mov
cld
fisttpl
lea
push
push
fmulp
xchg
jp
sub
mov
cltd
in
movb
jbe
clc
in
repnz
insl
xchg
int
sbb
int3
mov
out
fistl
mov
jle,pt
push
out
cmpsb
pop
aam
xor
mov
loope
xchg
out
into
in
ss
clc
gs
mov
mov
lahf
mov
shld
pop
adc
jns
jnp
inc
sar
es
xlat
cmp
or
sbb
xor
std
enter
lcall
inc
aas
sub
les
pusha
cli
inc
pop
das
pusha
inc
mov
cmp
mov
lock
jne
test
je
lods
dec
cwtl
in
fstl
jns
pop
add
xor
xchg
test
dec
fistpl
pushf
dec
int
and
iret
adc
pop
inc
and
add
push
clc
mov
sub
add
pop
push
aam
sbb
push
push
inc
inc
inc
lahf
in
and
mov
push
lock
mov
test
sahf
xor
lcall
xchg
lock
shlb
inc
sbb
lret
cmc
es
xor
enter
addr16
cmp
aas
sbb
hlt
leave
jno
or
ss
xor
or
mov
mov
rclb
popf
xorb
mov
jl
je
je
xor
inc
inc
push
push
les
inc
je
ljmp
pop
popf
aam
jne
and
push
mov
add
movsl
or
and
xchg
pop
mov
cmp
fwait
out
loopne
jo
jno
mov
repz
adc
xchg
dec
lret
xchg
enter
pop
enter
jl
fidivrs
mov
sbb
pop
cltd
push
popa
pop
sub
subl
xchg
js
lds
push
stos
addr16
mov
xchg
in
push
in
ljmp
in
fwait
xchg
int3
push
xor
xchg
push
ret
out
int3
push
aad
inc
xchg
inc
sub
xor
lcall
mov
dec
xchg
loopne
pop
or
sbb
mov
and
lsl
je
into
jecxz
cli
loop
test
xchg
mov
sbb
ret
repnz
loope
gs
inc
sahf
insb
add
sub
pop
sub
sub
xor
adc
jge
jp
rorb
push
test
frstor
das
arpl
jecxz
jle
add
lcall
lret
imul
rcll
std
ljmp
insb
or
imul
mov
and
jnp
sbb
mov
lds
adcl
sbb
adc
mov
pop
jle
xchg
mov
jns
adc
mov
or
mov
andl
pushf
mov
mov
or
pop
push
xor
fists
xchg
fisubl
scas
shlb
mov
stc
push
fdivrs
loope
test
xor
lods
hlt
out
xor
inc
fwait
mov
lock
lods
into
xchg
lcall
cld
int3
shrb
mov
repz
insl
pushf
jle
lds
repnz
ljmp
push
push
jbe
lahf
mov
movsb
xchg
add
xchg
pop
pop
into
sub
mov
movsb
xchg
mov
xor
xor
jle
sbbl
mov
xor
mov
push
sahf
hlt
or
inc
pop
dec
shlb
bound
out
adc
sub
cmp
xchg
dec
cwtl
das
lcall
aad
mov
cmp
fcomps
jge
lret
enter
push
mov
and
popa
mov
jae
add
int3
sub
outsb
in
push
inc
mov
int3
push
ds
pop
lds
dec
or
ds
add
adc
pop
add
jmp
divl
rcr
dec
mov
add
sbb
xchg
filds
xchg
arpl
dec
mov
mov
pop
aad
mov
xchg
rorl
std
mov
pop
das
pop
lret
xor
cmp
test
dec
mov
push
loop
stos
xor
test
lods
sub
stos
sub
jnp
addb
mov
jb
mov
xor
stos
into
js
pop
popa
popa
fsub
movsb
stos
out
inc
jae
into
sti
repnz
fidivl
xor
lahf
inc
insb
enter
enter
mov
xor
pop
add
repnz
hlt
lods
pop
ss
xchg
clc
dec
leave
mov
and
pop
jle
pop
xlat
test
xchg
stos
decb
test
jecxz
faddl
pusha
in
mov
lock
xlat
jle
push
mov
pop
sbb
int3
adc
add
cwtl
lods
sbb
mov
and
mov
divb
lea
dec
subb
mov
mov
fmulp
cld
mov
mov
std
lret
push
ret
push
test
scas
shl
fsubl
inc
add
cmp
cwtl
and
inc
lds
mov
aam
jbe
mov
jge
push
jns
test
jmp
xchg
adc
dec
sbb
sub
loope
sub
clc
iret
mov
push
mov
dec
cmp
mov
add
shl
test
iret
dec
push
pushf
rcll
adc
iret
std
xchg
lahf
in
jle
mov
dec
mov
xor
loopne
testl
popf
lcall
jp
add
bound
push
dec
pop
lcall
stc
das
les
addb
cmp
das
adcl
add
ss
and
pop
fldl2e
sti
pop
aaa
pop
xor
ss
fldenv
mov
and
cs
into
cmp
loop
faddp
in
mov
xchg
dec
jmp
push
or
pop
loopne
sub
lahf
sub
enter
mov
jg
or
rolb
or
into
mov
add
sub
test
jmp
iret
lret
mov
fmuls
mov
mov
popf
sbb
sub
shr
mov
movsb
push
add
jnp
jecxz
or
and
sahf
push
push
lods
fwait
fisttps
call
mov
das
xchg
jle
scas
pushf
inc
add
mov
popf
sub
xchg
xchg
or
push
sbb
push
fdivrs
pop
adc
aas
imul
fcomip
ret
scas
cmc
pop
or
clc
sub
mov
jo
and
mov
scas
or
and
sub
jae
push
addr16
fcomps
sbb
jge
test
data16
xchg
mov
sbb
and
sub
xchg
out
jle
adc
jle
mov
xor
cs
test
cmp
cmp
cld
xchg
ds
js
jb
daa
fidivl
cmpsl
push
mov
adc
push
lea
lods
loop
or
or
stos
jnp
sbb
stc
insl
stos
adc
test
xlat
pop
cld
aam
cmp
inc
test
xor
aad
push
xlat
push
jnp
aas
sub
xchg
sbb
lds
mov
lock
sub
mov
movsb
ljmp
shrb
fcmovnu
orb
in
xor
stos
mov
jg
arpl
cli
pop
inc
or
dec
in
sahf
cmp
rorl
sbb
dec
jecxz
or
enter
cltd
out
push
fs
pop
mov
mov
or
mov
or
fadd
jns
sti
pop
shr
loope
in
int3
xchg
mov
das
lahf
les
push
sbb
fcmovb
inc
sub
xor
sbb
xor
enter
cmc
sub
stos
in
or
push
shr
stos
sbb
dec
mov
dec
bnd
xor
mov
xchg
jne
or
cmpl
repnz
fwait
or
fsts
int
pop
test
loop
and
std
enter
or
imul
pop
jmp
sub
lock
cmp
incb
mov
lock
and
repnz
jo
fisubs
mov
xchg
rorb
mov
neg
jne
mov
xor
and
das
lret
xchg
repz
cmp
rorb
leave
daa
pop
lret
and
scas
loopne
add
inc
pop
or
xor
pushf
xor
mov
jno
fadd
imul
lcall
and
xchg
lds
jns
loopne
or
sub
adc
in
cs
rcr
movsl
je
rorb
pop
jne
fsubs
push
mov
fidivl
jo
in
push
xchg
push
inc
in
ljmp
sbb
je
push
sbb
jo
pushf
gs
lods
push
cmp
test
movups
pusha
fisubl
enter
adcl
ds
fsubl
mov
jbe
leave
js
cmp
fsubr
test
in
hlt
es
mov
adc
sbb
dec
out
xchg
lods
add
leave
dec
rcrl
adc
jns
xchg
add
xchg
in
mov
cmpl
fisttpll
add
imul
ss
inc
xchg
pop
jmp
push
lods
lret
leave
sub
xchg
in
mov
shrl
into
fadds
dec
and
scas
jecxz
and
mov
rolb
lea
xor
mov
sbb
insb
sub
aad
sbb
loopne
xlat
pop
push
lahf
pop
ljmp
push
push
jb
or
mov
push
ljmp
jmp
adc
aas
bound
fildl
in
je
iret
fistpl
loop
or
or
imul
mov
subb
mov
push
into
pusha
mov
imul
fstpt
inc
mul
mov
stos
push
ds
adc
push
popa
sahf
stos
sbb
icebp
aaa
fdivrs
cmp
ss
insb
cmc
shll
je
das
xchg
int
mov
enter
mov
mov
rcll
mov
add
lea
push
dec
mov
sub
xor
sarb
jl
arpl
iret
cs
sub
sbb
lods
pop
xor
and
or
pop
stos
push
mov
arpl
xchg
in
add
pop
popa
ror
sub
mov
sub
dec
por
dec
mov
pop
sub
jne
and
in
notb
ljmp
cli
enter
loopne
pop
dec
pop
or
je
stc
cmp
das
sbb
inc
shrb
xchg
push
jl
dec
cmp
xchg
js
fwait
fwait
cs
xor
loope
ss
mov
push
insl
mov
cmpsl
aad
ss
ret
adc
cltd
lcall
add
xchg
iret
popa
mov
daa
jmp
fcoms
mov
sub
jge
mov
movsb
cs
push
inc
fcoml
pop
add
fmuls
pop
add
add
dec
shlb
loope
sbb
xor
sbb
enter
cs
sub
push
xchg
jge
test
lret
xchg
mov
jae
inc
jo
mov
add
xchg
mov
pop
dec
dec
hlt
aad
nop
xor
outsb
mov
loopne
cmp
out
test
lret
repnz
and
mov
mov
sbb
outsb
add
add
add
xor
jno
sbb
repz
dec
in
lret
adc
scas
xlat
sbb
stos
test
inc
jne
adcl
xchg
sub
sbb
stc
ret
les
lahf
popa
aas
or
in
cwtl
mov
add
int3
lahf
cmp
rclb
jmp
lcall
js
pop
pushf
jge
les
ljmp
imull
divb
fistps
pop
stos
enter
gs
bound
in
stos
and
xorb
jg
outsb
mov
push
mov
mov
xchg
loope
cmp
pop
dec
xor
decl
push
loope
roll
test
cmp
and
stos
es
push
aam
clc
insl
imul
insb
push
loop
out
insb
in
jmp
clc
xchg
pop
jb
cli
fstpt
lods
or
mov
pop
bound
aas
inc
jo
cwtl
pop
sub
arpl
sti
or
adc
hlt
xchg
push
stc
imul
negl
mov
mov
call
dec
sub
lret
push
jge
adc
pop
daa
imul
insb
mov
cmpsl
cmpsb
push
in
lock
cmp
inc
sub
notl
test
and
cs
pop
sub
mov
cmp
outsl
pop
loope
cmpsl
xor
adc
test
xchg
pop
xchg
lods
push
dec
cltd
pusha
jl
fildl
pop
dec
mov
jp
or
add
pop
xchg
pop
mov
add
cli
mov
and
cli
lock
ret
xchg
xchg
mov
cmpsb
loope
jns
sahf
add
pushf
scas
rcr
fbld
sub
mov
int3
sbb
mov
in
out
pop
lea
sbb
mov
jge
and
pop
xchg
dec
fcoms
popa
pop
inc
or
fbstp
cld
xlat
movsl
mulb
pop
fildll
cmpsl
jae
pop
pop
fwait
xor
xor
inc
sbb
pop
jmp
adc
lcall
xchg
xchg
adc
pop
xorb
mov
mull
scas
daa
adc
mov
mov
lods
repnz
loope
push
xchg
xadd
bound
xchg
shll
pmaxub
mov
xchg
add
in
in
dec
clc
or
test
enter
mov
repz
cmp
lds
inc
lret
xchg
push
ret
cs
scas
insb
pop
sub
std
faddl
mov
cmpl
movsl
adc
mov
mov
lret
loopne
jnp
lcall
mov
pop
sub
rcll
inc
lods
shlb
rcrb
mov
mov
les
daa
test
aam
rcll
lds
jle
mov
xchg
stos
imul
aas
mov
cmc
cld
ljmp
push
add
pop
cmpsb
cmpsl
testl
add
scas
cmp
xor
les
mov
aas
repz
mov
and
xchg
fnstenv
or
or
xchg
inc
jmp
int
nop
mov
dec
popa
cmp
push
popa
pop
xchg
fstps
das
xor
cs
sarb
cmp
mov
out
push
inc
adc
cmp
inc
lds
roll
adc
test
out
jge
push
add
jmp
enter
jnp
mov
sbb
cltd
es
scas
out
cli
std
call
mov
ja
mov
mov
sbb
sti
mov
adc
repz
not
lret
movsb
lods
pop
adc
out
out
mov
dec
fwait
xchg
push
sbb
adc
or
cmp
mov
mov
mov
cs
mov
test
in
ds
xchg
mov
xor
in
pop
mov
icebp
enter
cmc
testl
fiadds
je
or
out
adc
mov
and
mov
mov
push
jle
fst
push
mov
repz
dec
mov
mov
enter
shrl
xchg
insl
push
push
fmull
mov
es
out
iret
pop
lahf
imul
test
in
sub
cmp
shll
xchg
repz
in
cmp
lcall
mov
out
ds
push
std
addb
pop
stc
loopne
and
scas
xchg
test
cli
mov
xchg
mov
mov
adc
push
sbb
inc
sbb
popa
ror
pusha
add
in
lea
pop
jbe
mov
fidivl
jb
push
adc
and
fldcw
jecxz
mov
in
lret
push
popf
daa
mov
imul
jne
pop
pusha
ret
pop
stos
fldz
adc
int3
ret
popa
cld
mov
xchg
mov
push
in
sub
fucomp
loope
xor
push
cwtl
aam
xor
sbb
fidivrs
out
aad
mov
je
jmp
or
sbb
out
fcomps
dec
or
xor
mov
mov
fbstp
pop
neg
testl
push
pop
loop
xor
mov
psubsw
sub
les
pop
fists
mov
sahf
sub
cld
jns
loop
lret
in
inc
cld
stc
insb
test
adcb
insb
mov
sahf
ja
mov
mov
in
sbb
mov
jbe
cld
xchg
add
push
sahf
push
out
cmpsb
ret
dec
fimuls
mov
ror
push
jecxz
iret
xor
sbb
mov
fimuls
sub
xlat
lret
imul
pop
popa
inc
and
jns
lds
fidivs
scas
and
adc
ja
push
and
jns
rcr
insb
adc
out
outsl
xor
xor
addb
lret
stos
roll
mov
call
mov
sbb
or
mov
fs
movsl
lock
pop
inc
xlat
pop
jno
icebp
lea
enter
dec
pop
pop
imul
dec
out
push
and
aas
cmp
jae
leave
pop
fsub
int
inc
push
cli
shll
fwait
sbb
mov
xchg
dec
repz
cmp
mov
outsb
lret
pop
cs
fucomi
ret
sub
sbb
cmp
clc
sub
mov
add
insl
sahf
or
cwtl
push
push
aam
cmp
mov
sub
mov
jae
outsl
add
popa
sub
cld
add
push
shll
loopne
in
add
xchg
sub
mov
push
pop
clc
sbbl
rcrb
stos
jl
ljmp
out
aad
xor
and
mov
insb
adc
pusha
std
sarl
hlt
cmp
inc
ret
xchg
mov
clc
popf
in
ljmp
lods
sahf
push
outsl
jecxz
fwait
sbb
test
or
sub
sbb
xchg
sti
test
xchg
mov
mov
or
test
inc
jmp
add
bound
lods
pop
js
repnz
add
jmp
jle
sub
add
pop
xchg
push
imul
sub
outsl
lret
arpl
and
mov
leave
scas
test
push
xor
sbb
ss
std
cmp
decl
mov
inc
pop
push
popa
out
fwait
xor
sbb
sbb
push
jns
sbb
fdivrs
ljmp
push
cmp
aad
mov
sbb
or
es
test
sbb
jg
popf
sub
int3
imul
lcall
bound
inc
out
sub
mul
push
lods
pop
sbb
xchg
in
sub
cmc
repz
sub
lcall
into
or
mov
fstps
mov
sub
sub
lods
scas
lret
pop
test
jecxz
out
leave
push
xchg
repnz
insb
add
inc
hlt
test
push
data16
adc
dec
fistps
or
jle
sub
jle
out
mov
hlt
outsl
and
stos
and
sbb
lahf
std
pop
sub
mov
inc
inc
push
or
std
inc
je
adc
fdivl
pop
pop
pop
lret
pop
dec
arpl
xchg
jle
cmpsl
ja
ficoms
mov
sbb
test
cmp
sbb
scas
xchg
leave
adc
lahf
int
lds
jo
out
adc
mov
adc
shll
inc
scas
rcll
xchg
sarb
imul
rorb
add
jns
lods
xor
ja
js
xor
sub
mov
es
mov
adc
inc
int
pop
out
cmpsl
push
jp
mov
xor
adc
pop
jb
xchg
repz
lods
cld
pop
ret
lahf
jl
sbb
push
adc
jne
out
or
or
jl
xchg
xor
orl
dec
testb
jo
or
aaa
mov
divl
pop
ljmp
in
cmp
movsb
and
fsubl
mov
dec
lahf
pushf
lcall
inc
push
mov
or
mov
mull
and
jecxz
es
mov
movsl
cmp
inc
adc
dec
mov
fucomi
mov
push
loope
fs
mov
pop
orb
sbb
sbb
int3
subb
sub
cmpsb
fwait
jne
ffreep
shll
and
ret
pop
fisubrs
cld
sti
inc
pop
daa
das
xchg
nop
jnp
rcr
call
cmp
adc
cmpsl
scas
lcall
in
lods
cli
outsl
fs
ret
out
xchg
bound
sbb
loopne
cmp
cmp
cmp
test
sbb
lret
and
xor
mov
js
ss
xor
mov
mov
pop
cmp
dec
add
stc
add
lea
push
jno
data16
sub
sub
and
xor
scas
sbb
jne
jle
pop
cmpsb
mov
mov
push
and
pop
loopne
sbb
cmp
js
cld
je
and
fsts
or
xor
or
sub
mov
inc
mov
jbe
add
or
mov
cmp
xchg
push
cmpsb
mov
jo
sub
and
jl
jmp
jns
loopw
cmc
pop
enter
mov
mov
gs
sar
and
nop
add
loope
dec
sub
xchg
xchg
lods
sbb
sbb
mov
or
xchg
loopne
je
mov
rclb
xor
imul
cmp
rolb
xchg
add
xchg
fisubrl
jae
mov
pop
fimull
cmp
cmpsl
fnsave
add
cmc
lret
aas
lds
sub
in
scas
lahf
stos
aad
loope
sahf
fcompl
fwait
lcall
push
lods
inc
imul
repz
jnp
jnp
fmul
push
adc
filds
out
cmp
popl
pop
mov
popa
and
push
pop
cld
adc
movsb
sbb
sub
pusha
or
dec
in
cmp
push
adc
xchg
sbb
xor
push
mov
inc
jle
pop
fadd
out
sub
lret
push
gs
ret
mov
mov
mov
scas
inc
lods
push
dec
cmp
stc
cmc
push
scas
jp
push
mov
out
xchg
pop
sahf
mov
loop
sbbl
mov
fcomps
push
lret
inc
sub
les
adc
incl
mov
sbbl
es
inc
cmpb
mov
jmp
jge
sbb
or
cmp
mov
das
xchg
sub
ljmp
sub
das
call
aaa
cmpsl
cli
xlat
sub
push
mov
cmp
adc
push
xor
cmp
and
add
push
mov
pushf
push
or
inc
fdivrl
enter
mov
mov
ret
jecxz
int
imull
gs
push
imul
sahf
cmpsl
jnp
pop
add
lret
add
and
pop
repnz
imul
pop
enter
xchg
test
ljmp
push
stc
jae
loop
imul
scas
fwait
inc
mov
ficompl
lret
arpl
pop
fidivs
cmp
adc
sbb
sbb
push
xchg
in
add
xchg
je
ret
cmc
js
mov
insb
cli
stc
adc
pop
inc
inc
add
push
repz
cmp
cmp
jns
bound
insb
cmp
adc
lret
dec
cli
xchg
sbb
lock
fdivl
fadds
outsl
nop
mov
inc
cmc
scas
cmpsb
fs
int3
jnp
sub
xchg
jge
add
mov
lock
push
inc
cltd
outsb
pop
jl
out
scas
jbe
cltd
out
data16
outsl
lods
add
push
add
push
cli
xchg
clc
cltd
fs
mov
sbb
inc
or
aam
into
jb
lret
inc
inc
fiaddl
addr16
int3
ss
js
shrb
es
push
call
mov
sarl
inc
mov
mov
jmp
pop
mov
lea
adc
arpl
push
mov
cld
cmc
test
add
add
addl
repz
xchg
xor
ret
push
or
sbb
testl
cmpl
mov
pop
xor
jl
cmpsl
fwait
rcll
and
push
lods
cmp
add
pop
popa
adc
adc
or
cwtl
ds
aas
adc
mov
jns
jl
movsb
mov
sub
xchg
jne
stos
fbstp
inc
out
cltd
insb
sub
cld
adcl
leave
xchg
push
jecxz
cmp
sub
cltd
clc
movsl
push
je
xchg
xchg
and
xchg
iret
outsl
scas
inc
lea
dec
jl
out
adc
test
movsl
ja
pop
pop
in
inc
in
pushf
imul
ja
push
outsb
jbe
mov
mov
sbb
jbe
mov
mov
fdivs
pop
xchg
andb
ds
inc
repz
xor
push
icebp
pop
xor
sbb
lcall
shlb
push
nop
mov
adc
sbb
ljmp
or
jae
dec
rcrb
scas
daa
jo
jg
sbb
cld
push
int3
cmp
in
std
adc
je
pusha
cmpl
xor
push
std
dec
pop
mul
jmp
jae
sti
mov
jb
loop
iret
inc
xchg
std
sbb
addr16
xchg
js
dec
or
add
fidivs
adc
xor
std
imul
push
jg
data16
sbb
cmp
adc
push
mov
pop
repnz
int
cmp
nop
mov
xchg
sbb
outsl
push
fisubrl
sbb
xchg
mov
or
imul
xchg
sbb
jg
pop
xor
pushf
sahf
pushf
and
addr16
push
sti
aad
sbb
mov
addr16
lds
shll
enter
repz
lea
not
hlt
ficoml
sub
sub
or
call
sbb
loope
cmp
shrl
out
add
fcmovnu
xchg
and
jg
jg
sub
inc
imul
js
jbe
mov
dec
pop
out
bound
cmp
sub
lods
sub
fnstcw
xor
inc
jmp
pop
sbb
shll
mov
sti
sbb
push
inc
push
pushf
clc
mov
mov
out
outsb
unpcklps
pop
xchg
inc
mov
pop
lds
stos
jp
insl
imul
testl
jne
xor
repnz
xor
xor
jge
das
aam
and
ja
jmp
sub
mov
pop
jno
dec
cmp
push
and
addl
popa
sbb
repnz
out
mov
push
push
inc
and
loope
inc
scas
je
je
xor
push
shl
mov
arpl
or
ds
xor
js
fwait
jns
out
mov
mov
xchg
adc
fcmove
dec
pop
jecxz
pop
and
cmc
adc
inc
out
jae
lods
xor
fisubs
pop
jnp
ds
jbe
test
push
and
dec
adc
xchg
mov
push
ds
imul
mov
addr16
jne
push
push
fdivl
jo
aam
add
xchg
jecxz
adc
adc
divb
xchg
and
push
mov
addl
shll
test
loop
push
or
lods
and
or
xchg
xchg
aaa
data16
pop
sub
sbb
fmuls
pop
adc
pop
pop
mov
inc
push
cs
cmp
push
stc
cmp
aas
outsl
jg
inc
sub
push
inc
ror
ja
inc
jno
xchg
enter
rorl
or
cwtl
inc
sub
mov
sahf
mov
jo
xor
test
or
adc
addr16
and
lret
cmc
cmp
out
push
or
mov
and
hlt
inc
adc
inc
xor
xor
cmp
popa
mov
in
push
outsb
sub
add
xor
lea
or
sbbl
push
addr16
insb
je
push
mov
add
in
cltd
ds
fs
loop
sub
sub
or
je
ja
sbb
and
inc
xor
pop
cmp
imul
cmp
out
enter
dec
inc
mov
jmp
dec
xchg
cmp
inc
adc
mulb
repnz
rcrl
mov
arpl
sub
insb
sbb
arpl
cmpsb
lock
xor
add
mov
xchg
sbb
rol
test
sub
cs
and
fisttpl
xchg
lods
clc
dec
call
mov
xchg
lea
xchg
lods
mov
dec
in
sbb
gs
lods
inc
sub
xchg
mov
xor
aas
int
mov
mov
xchg
insl
loope
fisubs
push
xchg
xor
dec
leave
xchg
mov
out
fs
sbb
xor
loop
mov
cli
xor
mov
mov
out
inc
roll
or
or
xchg
add
divl
lcall
adc
adc
push
in
nop
mov
movsb
jecxz
arpl
testb
jmp
cmpsb
daa
fnstcw
or
push
pop
out
cmp
or
sub
inc
and
fsin
faddl
movsb
sbb
xchg
jecxz
inc
fs
out
jae
add
mov
mov
fwait
or
adc
repz
push
mov
and
testl
jnp
loopne
xor
rcll
scas
push
push
mov
aas
inc
cli
cs
shll
pop
add
mov
fs
enter
shrb
sbb
popa
mov
test
ss
iret
pop
in
fildll
enter
les
sbb
pinsrw
fwait
xlat
inc
aaa
fs
xorb
push
cld
jns
xchg
mov
vpaddq
jae
add
or
shll
inc
imul
jns
movsb
fcmovnbe
and
mov
es
cmpsl
stc
das
inc
je
sub
bswap
repnz
ja
aad
iret
mov
add
mov
stos
xor
test
jmp
shrb
fbld
jmp
loope
jp
divb
jae
mov
cmp
mov
mov
pop
stos
fisubrs
add
pop
inc
into
sub
inc
sub
xor
jns
add
cld
rcr
push
out
les
das
in
test
jg
icebp
mov
or
xchg
inc
xchg
outsl
ds
js
add
lret
dec
push
fisubrl
mov
xor
ljmp
jne
call
ss
icebp
repz
das
xchg
loop
les
push
or
icebp
xlat
das
in
ret
sahf
and
test
sbb
ljmp
test
imul
daa
push
sbb
xor
popl
insl
aaa
out
loop
outsb
ror
cmc
cwtl
cmp
pop
pop
lret
dec
sbb
xchg
cmp
rcrb
dec
mov
cmpsl
mov
clc
adc
cs
test
lods
sub
inc
pop
je
in
inc
ljmp
xor
enter
add
cmp
mov
dec
mov
add
or
outsb
jbe
mov
outsl
aad
negb
jns
mov
sbb
cmpsl
and
call
test
jae
insl
sub
dec
adc
out
ficompl
mov
mov
ret
or
mov
out
test
imul
outsl
adc
pop
push
pop
jl
insb
call
sbb
lret
mov
xor
out
inc
call
push
lock
je
addl
fistpll
mov
mov
mov
mov
movsb
or
lds
and
dec
movsb
xchg
into
pop
in
jne
hlt
push
inc
push
sbbl
add
aaa
in
enter
sub
push
in
aam
or
jb
xchg
jecxz
lret
dec
pop
jb
mov
xor
jno
cli
jp
inc
fadd
push
mov
adc
jnp
iret
push
inc
xchg
es
sub
pop
lahf
or
fidivs
je
jb
pusha
adc
push
add
int3
jnp
or
std
clc
mov
test
or
das
pushf
lret
jo
enter
pop
outsl
lret
fistps
psubw
sbb
pop
or
out
dec
push
scas
jecxz
pop
movsl
inc
jo
or
add
add
mov
inc
and
adc
add
mov
cmpsb
mov
test
scas
mov
jge
inc
inc
maskmovq
idivl
out
pop
add
movsb
notb
push
pop
adc
mov
and
xchg
das
sbb
fs
pop
pop
adc
push
out
cmp
dec
iret
data16
fstl
popa
sbb
xor
jmp
mov
ja
rorl
xor
lock
mov
sbb
std
in
fldcw
inc
lea
inc
shlb
jnp
inc
std
push
or
aam
jbe
inc
jg
jno
adc
jg
ss
pusha
inc
push
jp
shlb
push
push
icebp
mov
xchg
test
jmp
push
push
cmpsb
jmp
lret
inc
xor
ljmp
and
mov
mov
xor
cmp
dec
jle
lret
div
pop
notl
dec
incl
daa
adc
or
mov
mov
xor
sbb
test
mov
sub
sbb
xchg
es
push
cli
push
shrl
aad
adc
dec
inc
je
repnz
popa
ret
cli
jmp
ljmp
inc
fildl
or
adc
and
jne
sbb
sub
sub
inc
shr
xor
test
xchg
mov
pop
int3
xor
test
int3
lret
xor
inc
js
loopne
popf
dec
les
mov
mov
dec
push
sub
and
lods
into
inc
int
pop
ljmp
fiadds
xchg
mov
sti
jns
test
cmp
mov
adc
out
mov
add
fidivl
idiv
in
push
fldt
xor
jl
inc
mov
cmp
int
inc
cld
mov
scas
stos
mov
dec
arpl
pop
mov
mov
adc
mov
lods
cmp
xchg
imul
into
adc
shlb
orl
lret
ss
mov
mov
cmp
orl
iret
fistl
stc
popa
cli
sbb
lea
aas
leave
mov
jmp
es
ja
rcrl
fldcw
mov
cmp
adc
stos
js
je
ret
or
or
cmpsl
and
xor
jmp
push
mov
in
inc
jnp
mov
jmp
andl
pop
push
sbb
adc
out
shrb
ret
xor
mov
in
mov
sbb
xchg
mov
adc
add
int3
int3
jl
and
push
xor
sbb
pop
into
hlt
arpl
jg
xchg
cmp
mov
xchg
xchg
jle
inc
pop
fucomi
pop
call
sub
jne
inc
jne
mov
push
test
roll
ja
aad
ljmp
pop
mov
sbb
push
out
sub
and
mov
sub
pop
cmp
leave
push
or
mov
sub
xchg
ret
add
fldenv
in
jno
mov
mov
in
inc
pusha
addb
and
push
lret
test
loop,pt
fisttps
mov
fcoms
aaa
sbb
nop
inc
sti
adc
xor
push
lock
cmp
xchg
cli
fnstsw
pop
int
loope
popf
cmp
mov
cs
test
push
push
nop
add
mov
shlb
inc
add
jne
mov
cmp
push
mov
in
push
jl
adc
sbb
rcrb
pop
nop
dec
or
mov
mov
cmp
jb
adc
inc
jns
jecxz
dec
and
out
push
or
dec
adc
pop
call
pop
mov
adc
clc
pop
ds
cli
mov
xor
hlt
stos
test
leave
sbbl
push
mov
repz
loopne
cmp
xor
jns
jbe
lss
and
jns
pop
popf
mov
xchg
in
add
dec
mov
xor
xchg
aam
aas
insb
mov
jp
pop
mov
clc
ljmp
cmpl
push
jne
lahf
nop
sub
in
or
xchg
sub
add
cmp
incl
mov
lcall
mov
mov
aaa
movsb
mov
and
mov
adc
je
cs
xchg
icebp
sbb
stc
popf
push
mov
mov
mov
lret
add
sahf
push
mov
fstp
loope
fnsave
inc
cs
inc
sub
outsb
jge
imul
dec
xchg
popw
jae
mov
int
ss
mov
dec
ret
xchg
mov
fsubl
in
and
mov
adc
or
stc
add
pop
sbb
into
test
mov
lock
out
push
xchg
push
fstl
sub
mov
mov
rorb
idiv
dec
sti
push
jbe
jge
sub
xor
xabort
je
pop
pop
adc
push
js
add
xor
mov
sbb
or
or
dec
fistl
idivb
jmp
js
xchg
jo
and
pop
jo
test
out
fcmovu
mov
in
test
sbb
push
sbb
dec
enter
mov
adc
push
out
adcb
shll
jle
push
dec
int3
mov
shll
mov
test
inc
push
dec
fists
cmp
dec
sub
push
sahf
push
mov
sti
loop
mov
into
sub
jp
add
movsb
xor
out
or
lods
hlt
insl
dec
cmpsb
add
imul
sub
mov
aaa
push
addb
sbb
fstpt
jmp
add
scas
stc
fwait
mov
lods
into
dec
leave
mov
clc
lods
dec
inc
add
cwtl
and
push
mov
out
rorb
lahf
sub
inc
xchg
int
fcoms
jne
loopne
mov
xor
insb
loopne
mov
mov
imul
pop
out
fwait
iret
jns
ret
and
je
outsb
ljmp
mov
and
or
scas
jp
add
outsb
or
gs
cmp
dec
add
call
loope
jmp
imul
sahf
inc
lcall
pop
cwtl
lods
mov
mov
mov
jbe
mov
test
ljmp
lock
pop
popa
lea
sbb
inc
loope
and
mov
jle
jecxz
mov
xchg
cmpsb
dec
mov
jg
lods
jne
sbb
stos
iret
and
loopne
in
ja
psrad
push
and
push
mov
repz
aad
jne
xchg
cld
sub
mov
sub
mov
jns
mov
mov
mov
cmp
jmp
jno
clc
arpl
lods
movsb
or
sub
sub
test
mov
movsb
lods
ljmp
fs
fisubrs
and
jb
mov
bswap
ret
xchg
dec
lcall
xor
int
sub
movsb
fwait
adc
mov
rolb
mov
mov
pusha
or
cs
adc
xchg
push
xor
mov
sar
sub
and
shl
inc
fisubl
sti
mov
cld
add
cmpl
mov
dec
mov
add
aaa
js
mov
out
mov
mov
adc
aas
cmc
fldt
push
sahf
sbb
xor
and
or
push
in
push
int
aaa
push
test
sahf
insl
ja
jo
in
fildl
cmp
mov
pop
test
fsubr
and
xchg
jne
int3
stos
sub
fs
push
daa
push
das
add
shlb
mov
sti
out
ret
dec
adcb
sbb
pop
push
push
nop
daa
add
mov
insl
fsubr
jne
outsb
insb
adc
mov
cmp
cltd
lret
sarb
xchg
out
andl
inc
mov
insl
bound
or
push
rorb
inc
add
push
cmp
cwtl
and
mov
scas
xchg
fstpl
outsl
pop
ja
xchg
hlt
fnstcw
aad
out
xchg
lods
rcr
roll
data16
mov
sbb
adc
fistps
mov
xor
repnz
fstpt
stc
out
fisubs
out
ds
sub
mov
cmpsb
sbb
xor
xor
push
int3
lret
pop
pushf
dec
jl
mov
xor
pop
sbb
adc
outsb
mov
xor
ret
sbb
mov
push
mov
jge
or
mov
sbb
test
jmp
cmp
movsb
stc
nop
imul
insl
test
or
xorl
cmp
pop
dec
lock
lods
fsub
rorb
inc
data16
rorb
mov
insb
inc
leave
sub
loopne
jmp
mov
je
shl
dec
out
inc
imul
push
pop
fs
pushf
jne
sub
cli
xchg
jne
add
mov
jns
imul
adc
loope
add
jnp
inc
pop
jmp
stos
push
int
shll
addr16
add
fimuls
int3
mov
jae
xlat
imulb
mov
ja
pop
enter
data16
xchg
sub
adc
lret
pushf
pop
mov
loopne
cmp
cmp
insl
or
in
lret
mov
in
pusha
out
and
nop
int3
mov
popa
lods
add
test
add
ds
and
inc
rcrb
out
je
mov
pause
and
and
mov
cltd
push
repnz
aam
jge
fstps
shl
sahf
or
pop
notl
mov
in
stos
prefetchw
mov
mov
fcomip
mov
jnp
out
gs
xor
sub
xchg
lods
fwait
rcll
pop
daa
mov
insl
mov
pop
dec
or
mov
and
loopne
add
out
sbb
mov
aad
jae
dec
sbbl
push
xor
jbe
jb
aas
cltd
mov
fidivs
int
popf
clc
add
dec
hlt
ss
lock
out
ret
mov
pop
in
imul
jle
xor
xor
jge
scas
jl
fisubrl
add
fwait
cld
insb
dec
xor
push
lret
subb
push
pop
add
cmp
mov
push
inc
aad
add
cmp
sarl
jge
adcb
jno
pop
stc
mov
out
push
sbb
adc
xlat
aam
out
addr16
enter
popf
add
test
cmc
adc
jle
sbb
test
testb
add
int3
jno
xor
loop
fdivrs
sub
cli
nop
jge
mov
js
movsb
xchg
divl
in
sbb
jle
jge
mov
leave
shll
test
push
pop
insl
jns
shll
jmp
pop
das
rcl
mov
or
pop
sti
and
scas
adc
push
adc
das
and
fists
xchg
mov
cld
and
add
mov
pop
test
lods
and
push
cs
aaa
add
dec
inc
rcr
shl
adc
mov
push
mov
cmpb
push
and
ret
das
mov
push
or
lea
inc
or
aad
mov
hlt
mov
movsb
call
mov
test
jns
fdivs
pop
fstps
dec
pop
fldt
xor
dec
pop
pop
jo
mov
mov
cltd
mov
dec
mov
pop
rcrl
add
or
data16
or
fsubrl
aad
and
std
cli
cmc
mov
cld
sub
dec
push
test
adc
pop
jecxz
movsl
xchg
loope
std
push
xor
psllw
jmp
or
ss
add
mov
xchg
xor
xchg
push
mov
das
loop
pop
xor
mov
jne
sub
inc
cmp
roll
popa
inc
movsl
aaa
cltd
repnz
lret
dec
insl
bound
mov
imul
fcmove
lock
movsl
jecxz
ret
les
in
pop
cmp
dec
inc
das
pop
int
and
stos
push
dec
cld
xchg
mov
roll
pop
xor
pop
push
jp
add
pop
rclb
sub
cld
cltd
addr16
scas
les
xchg
outsb
add
int
xor
cs
ss
cmpsb
adc
jp
in
enter
push
stos
mov
xor
pop
dec
es
cmp
push
fwait
xchg
xor
push
test
xchg
mov
xchg
sub
adc
mov
outsb
std
leave
bnd
je
cmp
fwait
xchg
gs
jae
pop
jp
pop
in
jp
xorl
fs
fimull
jbe
adc
sahf
icebp
repnz
adc
add
sbb
rorl
mov
lahf
dec
jno
xor
mov
sti
aad
cmp
pop
bound
popf
fsub
repz
xchg
ret
mov
mov
or
int
addb
fistpll
repnz
push
repz
sbb
push
inc
test
mov
sub
cmp
sbb
add
jae
cmp
xlat
pusha
mov
sbb
aam
or
das
dec
pusha
insb
iret
jo
sbb
sbb
loopne
push
pop
rcr
test
inc
fsub
scas
in
push
dec
sbb
pushf
or
out
in
push
mov
addl
jo
mov
mov
shlb
stos
and
scas
and
out
xchg
aad
jae
es
pushf
stc
mov
test
adc
gs
and
test
inc
cmp
ret
ficompl
aad
lahf
movsb
mov
mov
ljmp
aad
fidivrl
rclb
scas
frndint
cld
cmpsb
stos
sbb
inc
and
or
mov
jbe
push
shl
pop
dec
fldenv
gs
inc
aam
xchg
mov
xor
inc
out
out
jmp
popa
mov
mov
test
jnp
jl
lods
jbe
iret
mov
out
shll
rcll
hlt
cmpsl
mov
test
sub
jge
sbb
insb
pusha
or
add
dec
mov
in
push
mov
mov
shrl
into
popa
gs
dec
imul
hlt
nop
cmp
aad
xchg
cltd
jp
ljmp
scas
jge
in
loop
insb
or
push
pop
cs
cli
sub
rclb
mov
cli
push
mov
jbe
inc
jb
jmp
pop
test
ja
mov
mov
movsb
in
repnz
sbbl
es
mov
je
lds
fdivl
arpl
sub
push
mov
jne
repnz
imul
mov
mov
sar
fsubrs
and
mov
dec
mov
sbb
mov
mov
cmp
out
sahf
mov
jb
shrl
cmpb
std
dec
bound
pop
stos
jl
popf
pop
sbb
scas
sub
lock
xor
jbe
inc
fwait
pop
sbb
in
jae
push
stos
mov
or
mov
mov
inc
loope
sti
cmp
ljmp
xchg
and
test
adc
inc
ror
fiaddl
gs
movsl
mov
fucom
add
or
fdivl
icebp
in
pusha
test
cmp
adc
stos
mov
jbe
or
lods
xchg
add
rcr
sub
cwtl
pop
xlat
aad
lret
jb
aad
add
dec
lret
clc
rolb
jbe
xor
imul
out
sbb
mov
push
jecxz
fs
rclb
jo
ja
xchg
sub
jno
mov
enter
lea
pop
lods
js
js
cmp
xor
int3
mov
and
sub
lods
adc
sbb
inc
in
cli
ljmp
mov
insl
cmp
inc
cltd
arpl
iret
cs
insl
mov
cmp
pop
pushf
xchg
dec
pusha
insl
dec
adc
xchg
cltd
sbb
stos
in
int
adc
push
adc
les
jne
out
mov
inc
inc
pop
int3
ja
stos
push
adc
in
or
cmp
shrl
push
sbb
mov
loope
pop
sub
inc
jecxz
cld
sub
out
inc
xor
push
aad
addl
enter
add
adc
leave
gs
mov
jmp
mov
lret
sub
nop
push
ja
ja
xor
js
das
ljmp
pop
ret
fldenv
and
leave
stos
and
jecxz
mov
jl
outsl
dec
and
jae
lds
aas
sub
inc
and
out
jmp
outsl
fstpt
lahf
mov
pop
fldcw
add
xchg
int3
mov
les
subl
pop
jp
adc
outsl
cld
jmp
push
add
jno
shlb
cltd
fcomps
and
scas
mov
mov
movsb
mov
fcomp
jl
out
sub
push
dec
es
fbstp
shll
imul
test
add
cld
out
jae
or
push
loop
popa
and
adc
leave
fimull
inc
test
imul
lcall
sbb
roll
inc
mov
pop
jae
stc
cmp
adc
pushf
and
in
stos
xor
push
push
jge
insb
adc
sti
loope
std
mov
mov
cmp
into
cli
jnp
inc
fucomi
andb
or
add
mov
ss
mov
xor
add
lret
add
add
jno
shrb
adc
pop
repz
push
inc
je
adc
adc
test
rcrl
xlat
cld
dec
in
add
out
xchg
sbb
scas
mov
jg
add
negb
lret
sbb
adc
pop
mov
imul
out
push
mov
lods
jecxz
or
fwait
push
fimuls
xchg
xor
mov
xchg
jno
subb
add
push
mov
or
scas
xor
jb
inc
add
test
fsts
mov
pop
pop
add
add
ficoms
cmc
push
and
outsb
xchg
cmp
imul
mov
dec
jge
cmp
ljmp
mov
rclb
jno
adc
out
jp
jp
pop
pop
imul
cltd
jnp
dec
jnp,pt
push
lret
stos
in
dec
out
add
mov
inc
mov
loop
enter
cmp
xchg
cmp
push
inc
sub
sub
sub
or
loope
scas
inc
xchg
adc
pop
dec
fdivrl
jl
pusha
pop
add
xchg
push
mov
nop
outsl
inc
testb
mov
pop
sbb
xor
inc
cmp
inc
and
push
bound
mov
adc
rcr
ret
pop
gs
faddl
sub
addl
xchg
movsb
dec
pop
std
sub
popa
xor
xchg
and
outsl
jo
std
push
scas
int
mov
fidivs
sbb
xor
mov
orl
xchg
xchg
jnp
adc
adc
test
fistl
inc
pusha
imul
inc
pop
aaa
or
dec
iret
sahf
dec
addb
push
rclb
pushf
and
pop
arpl
aas
js
mov
jle
mov
stos
xor
push
lds
stc
jg
in
mov
mov
sub
shll
adc
int3
call
mov
and
aas
xchg
imul
xor
scas
stos
add
mov
and
sub
sbb
sarl
xor
push
adc
pop
cmp
sbb
xor
ja
jo
outsl
popa
pop
dec
push
inc
outsb
stc
outsb
ljmp
scas
cmc
cmp
cmp
xchg
ret
sbb
mov
jne
inc
mov
mov
add
mov
jmp
call
inc
pusha
scas
cmp
shll
mov
mov
add
pop
and
insb
add
xchg
push
jl
ds
jb
or
xchg
mov
pop
outsl
xchg
pop
outsb
sub
add
or
dec
add
add
loop
ret
test
es
xor
popa
pop
ja
test
push
xchg
jecxz
xchg
sub
insb
fistl
test
dec
mov
je
popa
sbb
daa
arpl
into
inc
leave
scas
ret
leave
mov
push
cmp
js
xchg
shrb
stos
hlt
test
jb
dec
test
std
lret
stos
and
sbb
das
inc
scas
fs
aad
aas
push
enter
test
int3
sub
cmp
out
test
fdivrp
inc
mulb
fidivrs
ret
test
inc
inc
lods
sahf
jp
cmp
fs
mov
addl
ficoms
leave
jae
loopne
or
mov
jbe
push
mov
add
pop
imul
sub
inc
pushf
hlt
mov
pop
and
repz
stos
jg
cli
inc
pop
test
jne
or
push
pop
jns
cmpsb
in
cltd
adc
lock
mov
leave
push
rcl
sbb
cmp
mov
cs
xor
push
iret
imul
lcall
jge
jl
movsl
lods
and
sbb
mov
fsubl
lds
stc
add
adcl
jo
mov
pop
sbb
inc
orl
add
test
and
xor
dec
mov
mov
addr16
jge
iret
rclb
mov
das
ret
mov
fisttps
mov
sarb
adc
cmp
and
xchg
fwait
add
shrl
cli
mov
sbb
jg
jl
and
rcrl
inc
and
lds
in
ss
lret
jl
mov
mov
or
lods
inc
clc
cltd
mov
push
inc
pushf
outsl
sti
cmc
mov
mulb
in
cmpl
out
sbb
add
stos
jo
push
mov
sub
sbb
sbb
mov
movsl
in
jns
jns
inc
pop
sbb
in
or
cltd
stc
mov
cmp
js
xchg
mov
push
mov
popa
jp
inc
mov
stos
pusha
xchg
pop
push
xor
stos
int
and
fimull
push
xchg
cmc
dec
inc
popa
rolb
lods
pop
es
and
xor
nop
and
lahf
arpl
mov
jge
cmpsb
xchg
xorl
dec
scas
lea
mov
andl
mov
pop
adc
inc
push
inc
jb
xor
inc
in
sub
fdivs
int3
test
mov
sbb
cmc
fstpl
addl
cmc
out
sti
or
cwtl
pop
push
jb
jg
push
xor
arpl
adc
mov
jle
add
ds
scas
cmp
adc
gs
fs
jo
mov
ficoml
scas
jo
lahf
gs
ja,pt
cld
xor
adc
cmp
notb
adc
pop
adc
sti
jo
xchg
adc
jl
repz
jp
fsubrs
lods
test
das
dec
inc
int
dec
repz
inc
inc
ss
inc
pop
in
push
mov
movsl
addr16
sbb
dec
in
sbb
popa
inc
cmp
push
mov
movsl
andb
add
in
es
aas
stos
sahf
push
cld
and
or
add
cmp
out
xchg
iret
xchg
int3
jns
lods
mov
mov
or
xchg
dec
or
mov
jl
cld
pusha
dec
es
push
pop
fcmovb
dec
mov
ret
inc
out
lret
mov
cmp
fdivrp
xchg
xor
popa
ljmp
push
sub
imul
cmpsl
add
xor
dec
push
push
lds
jnp
xchg
and
xchg
push
pop
enter
adc
and
push
pop
add
and
xchg
outsb
push
mov
int
add
jnp
cmpsb
divb
add
sbb
pop
leave
ret
dec
inc
in
jnp
pop
jb
testl
cmp
push
aaa
pushf
add
cmp
xorl
cmp
jp
std
cli
fimuls
stc
xor
xchg
jno
push
aam
ret
xor
push
insl
in
lret
in
loop
notl
push
inc
cld
je
mov
leave
mov
sub
out
imul
mov
cwtl
pop
xchg
cwtl
pop
dec
and
and
mov
outsl
push
mov
xchg
test
outsl
cmc
push
push
fs
mov
jg
popf
lcall
mov
cmpl
test
push
out
and
in
std
mov
xchg
pop
cmp
or
stos
sub
lahf
fbstp
loop
xchg
les
cmc
mov
imul
popa
sahf
lds
cmpsb
mov
shr
mov
mov
mov
jl
idivl
ret
xor
mov
stos
stos
mov
jne
loopne
nop
mov
scas
sbbb
adc
nop
inc
dec
shll
pop
fsts
add
dec
lcall
ss
xlat
inc
sbb
sahf
jecxz
mov
xor
or
das
mov
cld
fldt
push
popa
out
xor
rcrb
cmp
pop
movsl
popa
and
into
lret
push
jo
in
mov
hlt
shll
mov
data16
aad
xor
xor
test
or
bound
gs
inc
mov
js
jbe
aad
mov
jne
les
lahf
sbb
mov
loopne
and
addr16
cmpsb
xchg
in
stos
push
add
push
sahf
scas
int3
popl
mov
mov
aad
pop
cmp
mov
imul
sub
cmpsl
int3
insb
fldenv
shlb
add
shrb
call
mov
flds
inc
stc
les
test
jmp
shrl
jbe
mov
ss
mov
insb
jg
mov
ja
cmp
daa
push
jle
xor
jbe
mov
notb
inc
xchg
cwtl
test
imul
cmp
ret
pop
or
fsubs
aam
push
or
or
int3
sti
push
test
dec
in
lret
test
stc
dec
loopne
in
xor
add
test
cvtps2pi
std
add
decl
ja
push
pop
dec
fnstenv
or
outsb
cmpb
xorb
xlat
jnp
iret
jne
call
jo
aaa
lods
dec
jo
ret
mov
pop
lahf
fcompl
add
outsb
jecxz
mov
in
and
loopne
iret
mov
lea
add
pop
out
loopne
cli
out
int3
das
sti
ds
in
push
mov
cmp
inc
push
and
ja
sarl
inc
jmp
xchg
sub
cmpsb
inc
add
or
dec
test
lret
ret
lea
cmpl
sub
xchg
jno
and
dec
mov
dec
jne
ljmp
adc
xchg
adc
or
ss
add
int3
adc
jmp
in
jecxz
lods
arpl
xor
inc
sbb
inc
pop
push
ds
pusha
pop
push
mov
xchg
jnp
outsl
cmc
mov
scas
nop
imul
push
ss
adc
mov
pop
xor
aaa
xchg
sbb
sub
inc
jmp
xor
or
mov
insl
lods
test
pop
ljmp
jge
stc
fwait
adc
sahf
mov
orl
imul
sub
lret
int
xchg
je
sahf
inc
xorl
or
lea
cmpl
inc
rcll
or
jge
sbb
add
jbe,pn
jne
inc
sti
jnp
es
cld
push
inc
sbb
sbb
adc
enter
mov
jnp
xchg
imul
lds
insb
inc
popl
push
fwait
enter
pop
mov
jmp
jle
jno
stos
jp
mov
add
es
daa
pusha
ja
jnp
lods
in
and
dec
sbb
clc
sbb
jmp
rolb
jno
dec
in
orl
sbb
movsb
repnz
mov
mov
fimuls
outsb
mov
lods
jne
or
cmp
je
sbb
pop
cli
out
sub
xchg
loop
push
mov
jp
es
sbbl
jbe
mov
outsb
lods
leave
out
in
xchg
add
iret
mov
dec
push
in
mov
sbb
mov
call
out
jle
jle
push
je
in
dec
ficoms
ja
bound
fisubs
jae
lods
xchg
ret
adc
aam
nop
jmp
xchg
inc
stc
mov
popf
sbb
jnp
sub
sub
test
idivl
lret
mov
mov
cmp
xlat
mov
inc
inc
shlb
aad
inc
lods
and
or
sub
push
pop
jg
pop
jle
push
enter
rorl
mov
mov
mov
test
mov
pop
or
or
adc
fsubs
jo
cmp
std
and
mov
xchg
mov
jmp
lods
loope
test
out
call
outsb
dec
aam
into
sbb
mov
clc
or
scas
jno
xor
mov
pushf
iret
push
movsb
sbb
rolb
test
pop
in
xor
fnsave
or
push
movsl
fnsave
xor
dec
movl
mov
repz
xor
movsl
sete
repz
jmp
repnz
push
ljmp
xor
cmp
sub
lock
mov
mov
in
dec
jp
pop
fcmovne
mov
inc
push
mov
call
adc
xor
mov
inc
movsl
cmp
add
lret
mov
sbbl
xor
add
int3
add
sti
push
loop
movsl
pop
xor
fisttpl
push
add
ficomps
int3
addr16
cmp
ret
clc
sahf
stos
rcr
aam
add
fmull
sahf
xor
or
mov
adcb
mov
or
insb
cmp
pop
lahf
aaa
or
adc
fildll
cld
andb
in
sbbb
pusha
and
hlt
cmp
cmpsb
aaa
ds
imul
mov
dec
outsl
xor
mov
lahf
fcomp
jl
xlat
sub
lds
test
or
mov
ret
int3
mov
push
jecxz
adc
scas
xchg
cmpsl
in
sub
jecxz
add
cmp
pop
rcrl
fwait
lret
in
aaa
fxam
dec
imul
addr16
mov
shrl
or
mov
pop
add
call
out
aam
cmpsl
pop
xchg
inc
inc
stos
cli
sub
xor
fs
sbb
test
into
movsl
push
in
std
push
lea
repz
pop
sub
inc
inc
pop
repnz
mov
pop
xor
push
push
cmpsl
xchg
push
movsl
cmp
outsb
jge
repz
and
insl
cmp
decl
push
imul
pop
adc
fs
cmpsb
inc
icebp
shrb
sarl
cs
cmp
xor
inc
mov
daa
dec
cmp
adc
in
adc
xchg
pop
and
adc
mov
out
push
ss
xchg
and
dec
sti
sbb
and
aas
js
xchg
cmc
in
xor
cmp
sahf
dec
or
mov
xchg
test
mov
push
dec
xchg
inc
dec
pop
mov
repz
in
sti
jns
add
adc
pushf
test
movsb
fwait
in
outsl
mov
cs
aam
outsb
sub
inc
sbb
inc
xchg
in
sbb
mov
jge
xor
pushf
pusha
pop
movsl
sub
push
enter
add
es
fcoml
add
fists
pop
mov
lock
inc
sti
sub
and
adc
icebp
shrb
push
insb
sbb
into
movsb
and
loop
add
sbb
cwtl
pop
mov
xor
insb
decb
jg,pt
xchg
divb
rcll
mov
ljmp
pop
sbb
scas
pop
cmp
or
cmp
sub
cmpsb
xchg
push
xor
fdivl
imul
mov
decb
clc
dec
scas
cmp
pop
cli
mov
jmp
sub
cli
add
xchg
adc
je
or
xchg
adc
xor
mov
pop
xchg
cmp
mov
aaa
and
mov
xchg
sarl
lret
mov
add
nop
add
daa
je
cmpsl
fwait
daa
jb
in
pop
cwtl
sbb
jno
mov
push
fdiv
inc
mov
jecxz
ror
xchg
aaa
stos
shlb
lret
inc
sbb
push
ljmp
xor
sbb
and
mov
add
sbb
xchg
inc
jg
ljmp
sub
and
and
dec
xlat
or
mov
xchg
divl
cld
int3
mov
cmp
jo
or
rolb
inc
mov
push
xor
inc
inc
sbb
and
or
inc
cmpsl
jmp
loopne
pusha
mov
cmp
mov
push
pop
ds
and
stos
mov
mov
std
in
dec
dec
movsl
mov
lret
popf
mov
cmpsb
mov
adc
out
and
enter
nop
lds
stos
ficompl
jmp
mov
pusha
cmpb
jp
jmp
jns
notl
sbb
and
push
pop
cmp
or
or
mov
mov
js
mov
fnsave
mov
int3
mov
push
and
jp
xchg
mov
out
mov
jo
jmp
dec
lods
or
jle
cld
mov
test
test
push
out
inc
mov
je
rcrl
mov
mov
xchg
mov
mov
enter
in
test
lock
scas
loope
xor
sub
xlat
mov
jecxz
cmc
and
push
or
push
hlt
sbb
fldt
mov
fbld
pop
pop
daa
dec
and
mov
insl
adc
add
cwtl
pop
jge
out
lret
int3
and
dec
in
out
je
sub
mov
ret
inc
aas
mov
and
mov
sbb
mov
push
fidivl
fdivrp
cld
sub
popf
addb
mov
aas
pop
xor
adc
addr16
les
shr
mov
test
push
xchg
imul
lods
aam
lods
call
imul
aas
push
pop
jl
mov
imul
inc
std
or
jl
dec
xchg
mov
push
test
or
fcomi
mov
divl
enter
popa
xchg
adc
inc
xchg
sti
pop
add
jo
cmc
cmp
or
sub
push
lea
iret
shlb
fstps
dec
xchg
mov
incb
sbb
sub
bound
scas
lods
insb
pop
push
xchg
jns
jne
orl
rol
movsl
mov
and
mov
in
sti
sbb
rorb
mov
lock
inc
sub
dec
icebp
dec
popf
sahf
fistps
mov
rol
scas
lcall
dec
dec
jle
shr
mov
fidivrs
call
stos
dec
mov
xchg
dec
cmp
fnstsw
cli
push
xor
test
sahf
stos
dec
loope
add
adc
pop
push
cmpsl
push
iret
pusha
or
repnz
jmp
ja
push
xchg
mov
or
insl
push
notl
daa
es
adc
mov
cmp
ret
pop
ja
scas
sti
xor
movsb
stos
add
ss
pop
sub
fwait
jmp
mov
or
fidivrs
fbld
cmc
fistl
out
xchg
mull
ss
pop
aas
push
mov
mov
pop
gs
int
cmp
lahf
dec
rcll
pop
popf
adc
inc
push
xor
pop
loopne
and
fbstp
jecxz
fwait
lods
lahf
cmp
pop
and
xor
dec
lret
loope
jae
cs
jg
xor
rep
es
es
mov
mov
test
push
outsl
sub
push
mov
jns
cmp
sub
sbb
mov
ljmp
lock
jbe
sub
nop
loope
int3
fcoms
inc
aas
add
lret
jl
je
fisubs
mov
mov
sahf
dec
dec
cmp
call
leave
cmp
or
movsb
and
xor
insb
gs
xchg
cmp
xchg
push
sub
inc
stos
dec
dec
subl
outsb
psubd
call
out
inc
stos
sub
pop
push
inc
movsl
sbb
jne
sar
fs
lcall
push
push
mov
or
mov
add
test
insl
push
les
add
shll
or
dec
add
or
pop
cs
in
inc
push
xor
in
movsb
xor
arpl
cwtl
in
mov
xchg
cmp
or
in
push
jo
mov
rcr
jns
decl
pop
add
loopne
adc
and
dec
add
not
cmp
adcl
out
xchg
ds
and
dec
jae
and
xchg
pop
daa
push
xor
xchg
mov
xchg
pop
orb
lret
sbb
mov
cmp
cmpsl
lcall
int3
stos
fucom
das
test
je
pop
test
insb
fstps
pop
adc
shlb
inc
jle
mov
cli
xchg
dec
mov
inc
jo
jne
pop
mov
aad
sub
out
stc
or
cs
ss
push
inc
and
add
lods
pop
lods
push
lds
ds
sbb
jmp
imul
pop
dec
mov
test
cld
orb
jb
dec
jbe
dec
clc
imul
dec
xor
mov
sub
into
mov
cmp
movsl
cli
addr16
lods
adc
int3
mov
mov
mov
adc
push
shll
xchg
int3
and
inc
mov
jl
cmpsl
sbb
fldenv
adc
adc
out
aas
in
negb
jae
sti
adc
dec
xchg
ret
mov
and
jne
sbb
gs
inc
sub
mov
mov
shrb
fwait
leave
jle
in
loopne
aaa
inc
mov
sar
xor
mov
xchg
inc
inc
xor
mov
adc
mov
pop
int
jp
mov
in
jne
bound
test
pusha
aam
pop
xrelease
out
pop
ljmp
add
pop
xchg
shlb
or
jecxz
loope
xchg
xor
pop
scas
sub
imul
push
aaa
cmp
lods
gs
sbb
jle
clc
lret
mov
and
into
cwtl
mov
into
pop
hlt
faddl
inc
fistps
cmpsb
add
sbb
out
fs
vmread
cld
xchg
push
leave
mov
cmpsb
sbb
jle
sub
nop
in
fisttps
fidivs
xor
mov
shr
call
cwtl
flds
cld
sub
in
or
addr16
outsb
dec
mov
iret
jl
pushf
mov
jb
ret
mov
ret
sbb
pop
mov
std
mov
adc
sbb
or
clc
or
out
cmpsb
and
adc
mov
arpl
aas
jb
sbb
jle
mov
cli
add
mov
loop
jmp
jae
sub
lahf
in
adc
pop
sub
xchg
inc
ljmp
cs
scas
mov
fwait
mov
popf
xchg
push
cmpsb
daa
inc
push
testl
stc
aaa
mov
in
adc
cltd
mov
jne
xor
add
or
mov
fildl
leave
sbb
jnp
mov
push
jp
push
cmp
xchg
rcrl
and
xchg
jg
mov
cmc
jmp
movsb
movsb
mov
pop
imul
xchg
xor
push
pop
dec
ljmp
dec
rorb
sbb
repz
ficoms
in
ret
ret
aaa
xor
ret
imul
push
jb
cmp
rsm
int3
int
sti
loope
push
pop
pop
xor
scas
divl
dec
mov
push
adc
push
dec
leave
test
daa
add
movsl
add
lock
jecxz
push
add
xor
lea
xor
fldcw
or
push
sub
xchg
not
dec
adc
jl
cli
rcrb
and
jp
mov
pop
std
clc
lret
lahf
pop
inc
xorl
push
fs
push
inc
int3
push
sub
mov
fistl
insl
pop
std
xchg
pushf
iret
shll
cmp
out
mov
dec
and
xor
xor
sbb
jae
inc
ret
aas
cs
mov
mov
pop
test
scas
in
das
fistpl
loop
fcomp
aaa
fsubl
dec
cmp
nop
push
jno
jns
cld
imul
push
mov
fdivrl
pop
mov
es
lock
pop
mov
xor
jmp
xor
sbbb
rcrl
lret
cwtl
roll
mov
scas
adc
add
repnz
xchg
mov
pop
mov
cmc
and
and
dec
out
lcall
addr16
mov
xchg
xchg
pop
mov
jle
xor
push
outsl
fcmovnu
outsb
or
mov
inc
iret
jecxz
out
mov
in
pop
pop
call
movsb
or
rorl
xchg
xor
test
je
push
push
push
testl
mov
pop
ret
aas
or
cwtl
xlat
add
mov
rcl
push
mov
mov
lahf
lret
dec
xor
inc
xchg
rcll
xlat
and
sbb
adc
inc
xor
mov
fisubrs
xor
popa
mov
mov
and
push
mov
adc
clc
sbb
out
lods
mov
push
lods
in
xor
and
add
fcoms
mov
cmp
add
and
test
xor
jl
cltd
dec
pop
pop
ss
add
lret
mov
pusha
pop
mov
std
sbbb
add
and
sub
jns
gs
das
ss
sti
in
mov
lahf
mov
dec
lea
and
dec
dec
inc
or
fidivrs
insl
pop
jb
in
rclb
in
mov
test
sub
es
dec
inc
fimull
mov
loop
mov
and
mov
mov
dec
outsb
clc
sarb
sub
push
and
cwtl
mov
lods
mov
jmp
sbb
cmp
add
sti
and
int3
mov
int
xor
fstpl
cwtl
sbb
arpl
loop
fimuls
data16
adc
inc
lahf
fimull
push
das
scas
sbb
adc
cld
and
outsl
das
or
cmp
movsb
mov
mov
negb
jl
lahf
scas
loopne
pop
movd
cmp
addr16
fisubl
insl
add
stos
int
dec
shrl
jb
inc
mov
mov
xchg
je
jecxz
pop
pop
xchg
jo
jns
sar
cli
push
inc
jb
ss
lea
jl,pt
int3
bound
push
sahf
sub
fiadds
aas
mov
xchg
adc
mov
sbb
lahf
loop
push
push
rcrb
adc
mov
js
adc
lahf
addr16
jns
stos
cmp
enter
hlt
js
pusha
inc
inc
jg
aad
loopne
lahf
or
inc
jp
popa
mov
popf
pop
es
je
pop
lea
and
add
repnz
mov
repnz
pop
push
les
pop
ds
jmp
mov
xchg
or
clc
test
add
sub
or
xor
pusha
mov
imul
push
sbb
xchg
mul
popa
mov
and
xor
jns
das
stos
push
jne
js
jo
mov
call
or
fdivs
call
mov
push
cmp
pop
lahf
ss
add
int
shr
sbb
lret
pop
pusha
rcrb
ror
jnp
push
scas
push
and
es
mov
jl
int
clc
inc
fs
jbe
jle
xor
fs
mov
pop
push
dec
sub
or
xchg
jne
cmp
sbb
loopne
mov
andb
jae
mov
dec
sub
mov
dec
inc
out
pop
imul
mov
test
pop
sub
or
flds
jecxz
mov
stos
pusha
es
les
mov
dec
data16
mov
aad
push
sub
fsubrs
cld
repz
in
dec
ja
or
pop
jg
xor
mov
dec
adc
adc
add
ret
dec
loop
and
mov
int3
addr16
icebp
shll
cmp
xchg
loope
aaa
enter
mov
xor
mov
les
lock
pop
mov
fs
lcall
mov
fists
xchg
mov
movsl
jl
adcb
rcl
xchg
loop
cmpl
hlt
imul
pop
rclb
fistpll
out
cli
fnstcw
cld
es
icebp
push
dec
pop
push
or
jecxz
movsl
shlb
cs
mov
subb
icebp
jmp
xor
cltd
mov
mov
test
test
dec
jmp
test
push
fstps
movsb
das
xchg
out
dec
scas
cmp
cmp
or
cmp
mov
xchg
movsb
out
mov
pop
sub
insl
cmp
and
imul
sbb
pop
inc
lret
mov
xor
fwait
adc
in
lret
ret
aad
pop
add
fs
jmp
sbb
dec
or
push
jecxz
mov
clc
pop
xor
out
scas
inc
stc
in
test
mov
xchg
imul
std
mov
in
cltd
cmp
mov
pop
js
clc
dec
aas
and
bound
pop
sbb
jbe
jb
sarb
fs
lahf
xor
push
mov
lods
loopne
inc
int3
dec
in
mov
jmp
pop
and
fildl
repz
lcall
hlt
into
push
dec
cmp
ljmp
fsubrl
xor
mov
sarb
pop
jo
imul
jle
pop
mov
movsb
xchg
xchg
adc
in
add
fwait
jo
fwait
xchg
xchg
lret
sahf
or
scas
out
mov
push
sbb
fistpl
lret
jno
sub
jnp
test
mov
push
cmp
push
sbb
insb
mov
sbb
mov
pop
andl
lret
movsl
mov
sub
xor
mov
pop
xchg
cmp
and
sub
pop
out
lods
jb
cmc
lods
dec
sub
add
inc
mov
dec
rclb
das
loop
mov
add
adc
jp
testl
xor
loope
add
in
mov
aaa
mov
add
orb
xor
std
lods
fldcw
fwait
mov
inc
lret
subl
or
xor
mov
xchg
push
push
jno
pusha
imul
lods
pop
dec
push
cmpsb
lods
in
leave
cli
les
cmc
insl
dec
mov
imul
pop
push
fcmovnbe
jecxz
mov
out
jae
jnp
mov
dec
xchg
icebp
xchg
xor
sub
scas
fwait
sbbl
inc
insb
sbb
mov
ja
sbb
hlt
outsb
dec
icebp
mov
mov
push
mov
cmpl
push
jecxz
aaa
xor
push
pop
xor
or
cmpsb
jle
jecxz
dec
or
pop
add
add
es
clc
iret
push
or
outsl
add
cmpb
xchg
cli
sahf
scas
aaa
outsb
sbb
push
xchg
mov
jle
outsb
aaa
shr
push
inc
jne
cmp
arpl
aad
in
cmpsb
cli
push
add
xor
mov
pop
sbb
cmp
sub
push
adc
rol
add
inc
aam
lret
adc
mov
mov
xor
mov
dec
xchg
cltd
sahf
push
push
push
loope
ja
jge
ja
jbe
sub
push
push
cli
test
ret
and
and
push
lahf
cmc
dec
jbe
scas
add
mov
xor
outsw
adcb
inc
sbbl
fwait
adc
gs
mov
std
pop
jb
jge
mov
ret
in
and
and
mov
xor
movsl
jle
mul
and
xchg
cltd
inc
xor
ret
lcall
push
mov
mov
push
mov
push
push
int
je
pop
xor
mov
psrlw
mov
mul
or
in
mov
mov
or
xchg
push
or
fcompl
int
ja
and
ret
out
mov
push
xor
jg
lock
aam
clc
jbe
sbb
incl
cmpb
movsl
cwtl
adc
mov
xlat
sub
push
xor
out
inc
xchg
xor
mov
imul
stos
fidivs
ret
fmul
adc
pop
cltd
or
mov
xchg
mov
movnti
xchg
inc
or
dec
lods
inc
mov
ja
divb
push
pop
mov
ret
mov
lea
sbb
fdivr
dec
mov
sub
xor
arpl
nop
or
push
js
jl
mov
rclb
repnz
int3
add
mov
dec
mov
and
pop
sub
ds
stos
cld
jmp
out
pop
pop
push
sbb
sub
and
jle
adc
push
je
leave
movsl
int
loopne
and
je
cmp
int3
mov
fwait
or
outsl
push
insl
adc
ficoml
sbb
jbe
mov
popl
fistps
adc
in
leave
or
fistpl
mov
mov
fistps
xor
or
mov
mov
jnp
or
jae
or
jbe
ja
out
movsb
jno
mov
mov
fs
rep
mov
pop
sub
in
jns
popa
or
std
lcall
or
dec
mov
jne
xlat
out
dec
arpl
add
sub
push
pop
push
cld
movsl
xlat
sahf
lea
adc
inc
or
fistpll
scas
out
rcr
pop
ljmp
adc
lock
mov
ss
mov
jg
loope
sbb
push
jg
dec
aaa
dec
jg
push
mov
fs
rol
or
add
push
std
movsb
enter
push
inc
cmpsb
jg
cmp
sub
out
sbbl
rclb
mov
pop
sti
jae
scas
mov
sub
or
bound
cs
pop
hlt
sbb
hlt
pop
push
mov
ror
incb
xor
mov
out
inc
adc
scas
outsb
insl
sbb
cmp
and
jno
cld
outsb
outsl
push
sti
shll
fidivl
ret
push
clts
bswap
or
inc
ljmp
inc
aas
sub
cmovns
pop
mov
imul
sbb
push
outsl
aaa
pushf
fists
xchg
addr16
inc
add
addr16
xor
lds
in
mov
data16
sbb
std
add
sbb
orb
dec
imul
mov
int3
jns
dec
xor
std
adc
cmpsl
mov
xor
lods
bound
pop
fsub
movsl
in
pop
addr16
xor
insl
and
sbb
push
js
push
rolb
fwait
add
sbb
push
ljmp
mov
lret
mov
jne
pop
das
popa
cmpsb
fs
mov
dec
lods
inc
hlt
adc
pusha
mov
dec
push
es
out
mov
imul
lret
in
jnp
out
lcall
mov
mov
pop
mov
rorl
rcrb
cmp
out
cli
test
mov
testb
pop
sbb
imul
repz
mov
insb
ljmp
pop
jb
jno
pushf
push
sub
cmpsb
cwtl
mov
outsl
add
je
push
mov
inc
loop
mov
je
dec
mov
lea
xchg
and
mov
push
inc
data16
add
adc
sbb
sub
std
mov
mov
pushf
jae
add
jmp
ja
lods
push
mov
dec
jo
popa
in
sub
mov
push
pushf
mov
jbe
outsb
inc
adc
lds
sbb
loopne
ror
sbb
stos
ds
xor
imul
cmp
xor
and
lret
shlb
mov
mov
xchg
outsb
pusha
les
or
sub
pop
xchg
int
fisttpll
js
imul
popf
pushf
dec
mov
xchg
testb
int
daa
mulb
add
test
fisubrl
mov
popa
cmp
jae
or
push
es
mov
outsb
cmp
ljmp
xorb
in
push
dec
fidivs
fucom
insl
stos
movsl
fisubl
ljmp
mov
rorb
lcall
shlb
fyl2xp1
cwtl
sbb
sub
xchg
sbb
fwait
xchg
test
shll
inc
cmc
stos
jne
jb
fisubrl
cmpsb
fildll
jbe
lret
lea
cs
sub
ss
scas
adc
ja
sbb
mov
mov
fists
pop
insb
es
mov
sbb
jg
pop
aad
fadds
or
push
ret
jmp
aaa
xor
int3
adc
push
jmp
cmp
nop
fmuls
pusha
and
cmp
mov
rorl
mov
lss
sbb
sbb
in
mov
out
jne
pop
bound
ficoms
fildll
scas
pop
dec
ret
push
sub
ss
mov
sahf
add
in
mull
pop
js
lods
mov
filds
fdivs
outsl
cmpsb
rcr
nop
inc
into
fwait
lea
cmp
popa
adc
adc
jmp
jge
test
repz
mov
clc
cltd
clc
dec
cmp
jns
mov
into
fldl
popf
inc
dec
insb
mov
pop
insb
out
jne
and
push
xchg
pop
add
pop
aaa
pop
cmp
outsl
pop
dec
sbb
shrl
insb
inc
lds
push
icebp
inc
bswap
out
mov
pop
ljmp
add
mov
subb
dec
sahf
pop
sub
enter
in
aam
mov
movsb
cmp
jmp
mov
mov
cmpsb
hlt
scas
xchg
into
adc
lock
lcall
pop
hlt
dec
fwait
or
pop
xchg
ds
shl
mov
sub
sar
addr16
xor
inc
pop
ret
dec
repnz
xchg
repz
jl
pop
jge
mov
int3
lahf
call
aam
gs
jmp
jnp
push
dec
loop
pop
mov
xor
and
push
sbb
ja
es
call
ret
scas
push
xchg
mov
movsb
mov
loop
mov
pop
loop
or
in
ret
mov
test
mov
xor
fwait
aas
adc
mov
ja
ret
inc
mov
out
and
pop
mov
mov
push
add
gs
pushf
sub
cmpsl
std
xor
nop
add
and
inc
in
jae,pt
les
cmp
dec
stos
sbb
enter
sahf
mov
es
sbb
repz
test
nop
jecxz
push
stos
jl
sub
shrl
cmc
push
sbb
mov
repnz
pop
pop
fwait
push
fwait
mov
mov
enter
fsubrl
jmp
pushf
jl
cmp
lret
scas
scas
jp,pt
mov
scas
inc
pushf
xchg
ds
jl
ljmp
pop
dec
mov
imul
mov
push
ret
push
push
in
imul
add
cmp
fnstenv
test
cs
test
push
dec
cmc
je
xchg
mov
push
aas
stc
xchg
sbb
push
out
cmp
imul
fmuls
inc
cmp
xor
aam
cmp
loopne
xchg
cmp
xor
fsubl
or
pop
gs
fmull
call
adc
into
xor
sahf
or
ficomps
scas
sbb
rcll
pop
imul
adc
adc
sub
adc
ret
out
icebp
filds
xchg
insb
xchg
inc
leave
xchg
sub
push
pop
pop
add
daa
pop
jo
push
jle
jne
scas
xchg
cmc
cmc
andb
repnz
sbb
addr16
dec
and
outsl
mov
xchg
cs
orl
jb
jae
std
je,pn
cmp
jns
dec
inc
sbb
and
and
loop
pop
xor
mov
sbb
js
int
jle
sub
or
sahf
jne
ja
leave
fsubrl
into
or
mov
dec
ja
pusha
xchg
pop
sub
insl
pop
repz
ja
es
ja
mov
cmp
xchg
xor
mov
les
enter
mov
dec
dec
jg
loopne
flds
cmp
out
inc
iret
jb
pop
sub
stos
mov
out
testb
jo
cmpsb
mov
push
cmp
insb
in
imul
mov
mov
push
inc
jo
dec
sub
dec
push
fimuls
clc
test
out
inc
xchg
test
fwait
sub
pop
push
push
push
jecxz
adc
cmc
ljmp
cmp
push
jle
push
add
push
out
sti
rcrb
ja
and
and
or
mov
enter
ficomps
mov
or
push
xor
jmp
jae
shrl
push
insl
fldcw
pop
xchg
pop
mov
lock
xchg
imul
jb
xor
push
inc
cld
repnz
lock
jmp
sub
arpl
pop
cmpsl
cltd
in
sub
sbb
jg
movsl
mov
das
movsl
out
out
stos
or
mov
sub
mov
mov
es
push
addb
add
rcrb
cmp
fucomp
ljmp
sti
mov
sbb
and
fisubl
push
in
icebp
loope
popf
call
movsb
and
rcl
cmp
inc
fwait
adcl
fisttpll
jbe
sub
inc
adc
ficoms
push
pop
mov
fadds
adc
jge
mov
je
fbstp
lea
jne
rol
and
outsb
imul
adc
inc
push
pop
xchg
aaa
and
add
sub
daa
mov
movsl
pop
rcl
jnp
fdivl
mov
sub
fdivr
bound
inc
dec
and
in
es
out
cmpsb
cli
jbe
repnz
stos
loop
mov
add
xor
xchg
xor
jno
mov
xchg
gs
pushf
push
sarl
jmp
lea
jecxz
push
sub
sbb
xchg
adc
xchg
pop
dec
aas
pop
pop
lods
outsb
out
xchg
xchg
enter
scas
and
add
js
cmp
rclb
mov
mov
xor
clc
inc
or
cli
jmp
pop
xchg
and
xchg
daa
inc
inc
or
xchg
mov
jo
sbb
aad
idivb
xor
insl
leave
sbb
jle
xor
lret
add
sub
pop
loop
ja
jl
xchg
or
sub
pop
outsl
push
scas
testb
sbb
pop
inc
mov
and
jns
dec
scas
out
mov
jg
cmp
jns
imul
cs
or
std
adc
and
jmp
arpl
int3
xor
stc
out
sbb
cltd
stos
xchg
iret
jb
ss
jmp
pop
push
sub
jo
sahf
mov
mov
xlat
mov
filds
dec
lds
inc
xor
jmp
push
jne
inc
dec
das
dec
xor
std
jne
insb
pop
out
neg
pusha
movsl
hlt
jb
inc
cs
sub
inc
out
bound
push
adc
pop
or
je
fldcw
jns
xlat
push
rcll
push
call
test
fiaddl
mov
pop
ror
cmpsb
mov
call
in
notl
pop
pshufw
out
movsl
addb
pop
nop
mov
aad
jns
dec
sarb
mov
ffree
sub
jecxz
mov
ja
mov
das
jecxz
push
test
lcall
push
jnp
or
ret
popa
push
push
sbb
pop
mov
scas
test
cmp
push
mov
and
ljmp
sbb
ret
mov
jecxz
cli
jnp
or
lret
push
stc
xor
push
xchg
pop
lea
lahf
les
or
inc
out
lock
aam
inc
shll
jecxz
push
fcom
into
xchg
stc
gs
test
sbb
xor
je
sbb
xor
loope
mov
pop
sub
lods
inc
loopne
or
or
mov
test
mov
mov
mov
in
mov
roll
mov
out
xchg
and
push
xor
testb
push
pushf
inc
sub
xor
mov
mov
and
pop
mov
lea
xchg
push
sbb
int
inc
sbb
loop
push
cmp
lcall
sbb
dec
pop
mov
scas
stos
sti
jecxz
mov
ja
jb
xlat
and
or
mov
mov
mov
leave
dec
and
jb
push
mov
mov
inc
add
das
pop
inc
adc
out
adc
pop
stos
scas
imul
js
xchg
adc
xorb
popa
fisubl
dec
pop
iret
int
dec
insl
cli
cmc
imul
pop
dec
enter
stc
lahf
push
enter
idivl
adc
sub
scas
out
sub
mov
lret
mov
cld
pusha
push
mov
push
je
cltd
lds
mov
inc
sub
dec
addb
lcall
test
xchg
imul
int
pop
pusha
lds
aam
shl
lods
xchg
push
pop
cli
push
sbb
sub
push
mov
sub
sbb
out
inc
cmp
loopne
xchg
sub
sbbb
pop
jp
dec
xor
aam
ljmp
aaa
frstor
adc
push
cwtl
jecxz
int
notl
rclb
arpl
mov
rolb
daa
jo
sar
addr16
loop
add
sub
cmpsl
xchg
jo
adc
ret
mov
fs
mov
int3
clc
xor
inc
xchg
ss
cmc
int
loop
stos
test
daa
lea
xchg
add
inc
nop
sbb
push
out
push
into
nop
in
popa
push
jns
rol
jle
out
add
inc
jae
sub
je
xchg
mov
xchg
mov
mov
adc
ret
dec
cmp
rclb
scas
sti
add
fiadds
roll
idiv
mov
push
loopne
test
xor
out
js
shrb
stc
cmc
das
mov
sbb
insb
test
mov
addb
addr16
leave
test
ljmp
icebp
dec
lods
sahf
ja
call
in
js
mov
pandn
insb
xchg
cs
sbb
les
cmpsl
scas
and
ret
fsts
rcrb
ret
push
jg
cwtl
jo
sub
pop
dec
in
mov
mov
pusha
mov
xor
arpl
mov
fidivl
cld
mov
mov
pop
fstps
mov
cmp
lret
pushf
xchg
push
inc
in
pop
add
fwait
mov
cmp
sub
mov
jmp
mov
fsubl
arpl
cmp
xor
in
cs
cltd
lcall
rcrb
iret
test
xchg
out
sbbb
inc
jge
repz
out
lea
ror
jle
call
fadds
dec
lret
xor
cmpsb
cs
adc
loop
ret
jecxz
imul
lds
xchg
clc
xchg
push
movsb
dec
jb
mov
int3
pushfw
mov
push
xor
sbb
aad
xor
dec
mov
jg
mov
data16
lret
femms
adc
sbb
push
cmp
jnp
imul
inc
jmp
mov
das
lock
popf
inc
adc
dec
sbb
cmp
push
fwait
repz
inc
xchg
ret
xor
in
pop
xor
or
int
in
or
and
push
pop
lret
push
pop
andnps
imulb
sbb
insl
into
movsl
pop
loopne
ss
xor
add
cmc
jg
add
push
xchg
mov
shll
jmp
sbb
rcrb
sbb
jae
rolb
jne
cmp
popf
clc
and
and
ss
dec
pushf
mov
cmpb
mov
pop
xchg
mov
mov
add
adcb
scas
xchg
pop
test
cmp
push
std
int
les
fs
xchg
xor
aaa
push
stos
xchg
test
dec
loope
out
push
fidivs
lods
stc
iret
clc
test
lock
std
shrl
inc
leave
into
cmpsl
subl
in
aam
lock
pop
mov
popa
popf
cmp
jbe
dec
icebp
test
gs
in
pop
pop
and
mov
and
sub
push
cmpsb
test
sbb
mov
xchg
orl
push
pop
pop
mov
addr16
sbb
enter
lret
aam
inc
jb
jecxz
les
push
cmp
in
cmc
push
movsl
aad
push
xor
cmp
add
aas
inc
sbb
and
jp
push
fldenv
pop
ds
inc
sahf
inc
or
test
adc
mov
fwait
test
inc
push
jmp
inc
repz
js
and
jmp
and
shlb
jo
xor
mov
inc
xlat
push
test
pop
xchg
loop
into
dec
adc
aad
movsl
fdivrp
dec
addl
mov
loope
cli
xor
or
mov
jne
mov
in
ds
test
testb
movsb
xchg
inc
lcall
in
imul
push
lock
cli
cmpsl
mov
sbb
xor
mov
mov
ds
xor
ja
daa
aad
int
jnp
mov
std
inc
ret
idivb
and
out
mov
outsb
jo
mov
in
cld
push
out
push
outsb
push
or
psrlq
add
jo
xchg
xchg
or
dec
adc
xor
test
mov
or
jno
cmp
stos
lcall
sbb
andl
hlt
xor
dec
mov
pop
movsl
les
adc
daa
push
pushf
jge
shl
roll
push
je
xor
xchg
loope
xor
inc
pop
or
xorb
ret
cmpsb
mov
add
pop
xchg
adc
jle
int
adc
and
inc
jnp
adc
ss
fwait
sbb
std
xchg
inc
fiaddl
rol
loop
mov
or
sbb
inc
cmp
ja
mov
shll
cmp
das
xchg
add
je
rcrl
mov
jecxz
cmp
popf
insb
lret
jl
icebp
insb
aad
cltd
cmpsl
jp
das
out
push
fninit
jge
or
popf
adc
fistl
push
cmp
inc
test
xchg
popf
push
pop
or
mov
ror
aam
and
cli
popa
add
lret
xchg
les
dec
xor
jp
adc
adc
push
pop
push
jb
addl
in
nop
xchg
push
mov
aaa
xchg
in
cmpsl
push
push
fstps
mulb
pop
xchg
mov
arpl
add
ljmp
adc
mov
push
jo
inc
inc
push
push
jle
out
mov
and
mov
sbb
add
push
inc
mov
and
push
mov
sbb
add
or
pop
xchg
xchg
in
and
sub
xor
pop
and
jecxz
pop
iret
or
or
jno
xor
popa
jecxz
enter
or
mov
pop
ds
addr16
xchg
jns
lods
jne
mov
mov
jb
xorl
lds
test
rcll
or
adc
fldl
or
lods
xlat
rcrb
and
in
scas
fildll
test
fildl
nop
andb
mov
popa
cvtdq2ps
push
adc
or
fstpt
jbe
sti
push
inc
mov
rcl
hlt
imul
in
jns
or
cmp
inc
mov
fwait
test
lcall
js
in
shll
fs
sbb
or
aad
stos
lret
jl
jnp
or
inc
aaa
push
xlat
ja
mov
jl
fs
jbe
mov
xchg
int3
cmpsl
int3
loop
pop
dec
and
bound
or
jg
cltd
ret
sahf
les
inc
adc
lahf
and
ljmp
fdivrl
add
call
jmp
xor
pop
in
and
stos
cmp
mov
jae
movb
cwtl
and
xchg
cwtl
pop
push
dec
insb
xchg
mov
adc
repz
sti
push
xchg
cmp
jge
scas
stos
ja
nop
adc
cmp
push
es
jmp
mov
add
cmp
and
or
sbb
clc
xchg
arpl
adc
out
sarl
fs
inc
push
mov
pushf
mov
repz
movsl
fsub
or
aam
cmp
pop
mov
call
pushf
roll
ficoms
scas
push
cmp
out
bound
fsubrs
pop
cmp
insl
pop
orb
or
test
xor
lds
and
cmpsl
in
push
addb
xor
adc
outsl
mov
arpl
push
int
push
push
sbb
push
push
loopne
jne
dec
les
jge
int3
sbb
rcrb
jae
dec
push
movsl
aad
and
cmp
in
scas
sub
xchg
pop
ds
add
fcmovnbe
mov
mov
pop
cmpsb
test
sub
pop
mov
jp
lds
mov
fdivl
push
push
shrb
mov
rolb
mov
aaa
pop
adc
sub
jne
sbb
mov
jecxz
mov
xor
adc
mov
fxch
push
inc
cbtw
mov
mov
xchg
sarl
pushf
add
push
mov
xor
jne
and
clc
pop
pop
iret
scas
fdivs
ficoms
jno
fwait
lods
repz
imul
shll
xor
insl
add
adcl
ds
inc
nop
aam
clc
or
cmp
jecxz
lret
xor
cmp
ljmp
cmp
rcr
into
push
xchg
insb
sbb
test
push
loopne
inc
cmp
das
lds
jns
test
rcrb
dec
sub
adc
sub
jae
jmp
adc
mov
js
rcll
mov
in
and
push
lcall
pop
mov
jg
mov
popa
stc
in
stc
jmp
cltd
and
cmovo
sti
in
inc
repz
sbb
sbbl
movsb
test
push
out
add
insb
sbb
daa
in
pop
or
sahf
cltd
mov
pop
push
mov
mov
fs
sbb
aad
adcl
je
mov
shll
add
repnz
inc
imul
xchg
mov
mov
push
rorb
outsb
xor
push
jno
adc
inc
lret
in
push
mov
push
and
adc
mov
sbb
jmp
xor
add
fildl
adc
outsl
dec
sbb
add
jo
xor
clc
and
stc
add
fwait
and
dec
out
push
insl
pop
adc
leave
ror
inc
and
das
add
in
mov
cmp
xor
fidivrl
shrb
test
stos
cwtl
xchg
pop
stos
push
fmull
repnz
test
jp
rcll
sarb
push
movsb
pop
pmulhw
sbb
pop
cmp
jb
js
dec
xor
in
xor
pop
cmp
xchg
data16
push
jge
mov
xor
adc
divb
gs
cli
adc
lret
mov
sub
inc
dec
sbb
nop
int3
pop
lds
ret
xor
stos
push
jg
int3
dec
test
inc
push
leave
adc
xchg
inc
xor
mov
mov
mov
dec
pop
fucomp
add
outsb
out
scas
push
std
aaa
xor
mov
xorb
push
xor
and
and
add
inc
cmp
or
and
jne
push
push
mov
adc
jmp
aad
dec
push
inc
outsb
sub
mov
xchg
divb
mov
mov
scas
adc
fucom
aam
jns
xor
add
loopne
int
stos
add
enter
mov
push
lea
das
sbb
sub
inc
dec
fidivl
jne
add
xchg
and
outsb
arpl
loope,pt
pushf
test
jp
push
call
xor
in
repz
out
outsl
mov
lahf
mov
lods
adc
ljmp
clc
in
jp
sub
loop
inc
jp
inc
jnp
and
pop
cmp
mov
mov
cmpsl
lret
insl
xchg
dec
call
fnstcw
movsb
loope
jns
push
lahf
scas
int3
es
pop
sub
imul
xchg
mov
inc
lock
xor
push
fisttps
imul
pop
inc
mov
inc
sub
dec
push
and
pop
sbb
outsl
fcmovnb
ret
fistpl
fcmovbe
pop
pusha
add
jp
int
lods
bound
call
jp
cmp
jg
lcall
je
std
out
adc
adc
sbb
add
lds
lret
mov
and
inc
pusha
add
insl
push
push
or
push
imul
and
les
cmp
push
inc
dec
or
lods
inc
xchg
ja
out
dec
adc
cli
ds
inc
js
sbb
ja
or
adc
cs
roll
js
lods
stos
punpckhwd
shlb
or
shlb
pop
popf
ds
jg
test
gs
sahf
lcall
pop
add
jne
sbb
or
pop
imul
dec
les
inc
sub
xchg
pop
lcall
ja
and
mov
ja
mov
mov
xor
iret
mov
or
rolb
gs
negb
fwait
sub
mov
and
mov
dec
popa
mov
loop
cmc
lods
out
push
or
xchg
aad
mov
mov
sbb
dec
pushf
loope
push
stos
testl
fcmove
fdivrl
lret
inc
inc
cmc
or
jl
fs
mov
mov
fsubr
xor
int
test
adc
or
mov
jecxz
fs
sahf
sti
pop
ret
in
insl
push
or
jl
inc
push
xor
xchg
push
bound
pop
xor
inc
xchg
dec
outsl
mov
mov
popf
mov
xchg
cwtl
dec
push
inc
clc
popa
inc
outsl
mov
mov
ja
out
pop
adc
mov
or
pop
pop
add
lods
xchg
add
inc
shll
sahf
and
pop
pop
adc
imul
xchg
rcrl
and
dec
cmpsl
sbb
fnsave
push
dec
scas
stos
out
stos
add
outsb
cmpsb
mov
xchg
mov
lcall
xor
negb
les
inc
mov
std
fnstsw
int3
cltd
push
rcr
mov
xor
fstpl
popf
xchg
ja
imul
lods
sub
outsb
sub
rorl
add
ret
call
ss
sarl
pop
pmuludq
subb
add
or
sub
mov
cmpsl
les
cld
addr16
test
andb
add
leave
push
scas
ret
into
mov
cltd
sbb
xchg
dec
push
js
push
das
push
lock
pop
call
xchg
xor
sub
cmp
dec
test
cmpsl
cltd
jnp
jne
pop
sbb
mov
jg
sbb
mov
dec
pop
dec
push
jno
push
fcomip
lea
cmp
in
andl
arpl
das
mov
ss
xchg
fdivrs
ds
push
les
shrl
test
stc
cmp
in
xchg
push
xor
sub
ljmp
lahf
jae
dec
dec
dec
cmp
mov
dec
jl
push
sbb
pop
jo
iret
mov
jo
jne
mov
sub
xchg
repnz
fst
nop
mov
push
cwtl
dec
fistpll
lods
jge
test
jmp
test
cli
mov
mov
insl
mulb
dec
jmp
xor
pop
popf
xor
rorb
jecxz
mov
xchg
pop
ss
mov
sbb
or
addr16
icebp
and
stc
negb
cmp
pop
repz
pop
mov
testl
xchg
mov
imul
cmp
test
insl
add
addr16
pop
sub
int
or
mov
inc
pop
shll
pop
inc
sub
dec
movsb
xor
or
cmpsb
in
out
xor
hlt
out
negb
adc
jge
xchg
fistl
add
popa
mov
out
pop
mov
les
pop
jne
sub
nop
pop
jge
dec
rcr
call
out
xchg
lcall
cmpsb
mov
mov
mov
aas
mov
xor
pop
mov
stos
xchg
pop
lds
jp
inc
jb
mov
test
cmp
scas
jmp
push
mov
sti
lret
and
xor
xchg
mov
es
mov
sub
jbe
jnp
popa
xor
jb
inc
cwtl
stc
xor
lods
mov
in
orl
adc
loope
insl
imul
mov
and
and
outsb
cld
push
subl
in
ss
and
xlat
mov
dec
in
loopne
pusha
testl
cltd
push
sub
fnstenv
mov
mov
cmp
mov
test
xchg
mov
mov
inc
jmp
mov
xor
stos
sub
jae
mov
rcpps
sti
mov
mov
rcrb
jae
xor
clc
push
cltd
jne
mov
mov
cmp
movsl
mov
xchg
adc
cmc
out
mov
sahf
dec
inc
sub
dec
cmp
inc
mov
das
enter
cmp
mov
bnd
insb
mov
jl
sub
rclb
lahf
adc
xor
mov
mov
shll
xchg
xchg
sbb
cs
and
loope
xlat
inc
enter
dec
cwtl
cmc
stos
push
cmc
jne
fwait
mov
push
fdivr
movsl
jmp
add
pop
loope
or
outsl
in
and
push
and
lret
xor
inc
out
outsb
mov
inc
dec
xor
dec
ljmp
in
cwtl
sub
mov
mov
gs
push
xchg
mov
mov
call
test
icebp
clc
pop
icebp
xchg
mov
jp
in
pop
sbb
add
xor
inc
inc
push
mov
lods
outsb
xlat
arpl
jns
mov
in
aas
sbb
mov
fildll
int
ds
fsubr
sbb
mov
shl
scas
xchg
js
rcrb
pop
fists
insl
jae
push
push
jmp
mov
das
mov
enter
jno
aaa
loop
pop
loopne
ss
je
call
call
das
popa
test
pushf
pop
imulb
pusha
arpl
or
jecxz
or
inc
jecxz
xchg
push
jecxz
cmp
dec
es
mov
push
in
popf
call
loope
xchg
mov
dec
pop
outsl
sti
cli
ja
mov
div
dec
enter
aaa
test
orl
std
add
sbb
mov
repz
xchg
fwait
repnz
pop
cmpl
inc
loop
dec
testb
cwtl
imul
or
cmpsb
es
lods
sbb
and
test
pop
ss
leave
mov
outsl
jnp
lods
push
xchg
cmp
add
cmp
je
sbb
mov
dec
mov
test
icebp
add
gs
into
stos
or
cmp
mov
movsb
movsb
mov
ljmp
outsb
add
repnz
push
sbb
cs
jne
push
sbb
aad
xchg
sub
add
out
neg
jecxz
bsr
pop
or
jne
rolb
cmpsb
adc
add
xabort
xchg
test
sbb
lret
aad
leave
or
inc
jbe
sar
adc
aam
add
mov
cmc
aaa
cmp
mov
fimuls
sbb
idivb
ret
call
test
fiaddl
mov
addr16
imul
jnp
test
push
fidivl
xchg
dec
push
push
stos
push
ret
lahf
in
ret
mov
push
fldcw
js
cmp
les
and
sti
xor
jmp
cs
push
test
cmp
nop
xchg
mov
sub
mov
mov
pop
sbbb
leave
dec
mov
iret
xchg
movb
push
pushf
popa
lods
movsl
pop
lds
mov
fmul
insl
fsubl
adc
mov
sub
rorb
int
inc
add
and
je
and
jnp
xchg
lds
jge
test
xor
xlat
add
add
shlb
jae
outsb
ss
pop
xchg
sub
dec
ret
mov
loopne
push
pop
lcall
inc
inc
js
ficoml
adc
in
into
xor
cltd
ja
outsl
push
jae
xorb
mov
les
clc
adc
mov
andl
in
fisubrs
dec
dec
sub
sbb
outsb
stos
dec
jnp
dec
ljmp
mov
inc
mov
adc
and
rclb
xlat
mov
jmp
dec
adc
mov
xchg
rolb
das
andb
repz
in
pusha
pop
or
sub
mov
and
rorl
popa
in
bound
mov
mov
xor
dec
cmpsl
jne
dec
and
insb
stos
mov
out
shr
lcall
mov
mov
mov
push
cmp
movsb
leave
fdivrs
pop
cmp
mov
xchg
jne
cmp
mov
int3
sahf
and
loop
das
fistps
dec
mov
out
dec
cld
add
popa
cmp
xlat
lea
aas
test
lcall
inc
xor
fisubrl
jle
push
ret
dec
pushf
lock
xchg
ud2
test
or
mov
and
cmp
in
stc
loop
enter
mov
xor
call
out
out
insb
lret
cmp
pop
stc
sbb
mov
fsts
lods
out
dec
mov
cmp
mov
shll
mov
lret
pop
xor
or
adc
and
pushf
scas
push
add
cmp
fildl
jmp
sbb
inc
sbbb
repz
jno
dec
mov
aam
in
addr16
pop
lock
sbb
mov
and
out
in
mov
ss
mov
adc
loop
jmp
insb
fwait
fwait
cwtl
pop
orb
jmp
xor
pop
add
add
inc
fs
cmp
into
out
das
shlb
sub
sub
xchg
es
mov
pop
sar
and
dec
cs
in
adc
push
idivl
inc
aam
ljmp
jge
fwait
cltd
sbb
and
dec
dec
ds
rcr
int3
lahf
fbld
mov
cmp
xchg
pop
push
enter
loopne
pushf
gs
pop
mov
sub
loop
jnp
mov
pop
ret
sbb
dec
fisubrs
jmp
or
imul
xchg
mov
push
mov
cld
pop
push
jns
outsb
add
lock
movsl
sub
imul
jb
lock
jecxz
popa
push
or
push
jbe
dec
testl
adc
adc
es
dec
mov
push
clc
gs
pop
and
mov
pusha
add
lahf
addr16
imulb
mov
nop
lods
sub
xor
das
call
xor
out
dec
push
stos
sbb
cmpsb
cmc
cmp
movsb
push
push
cwtl
push
sbb
sbb
pop
stos
add
xchg
mov
sub
and
jnp
push
call
int3
cmp
xchg
sbb
mov
movsb
stos
test
mov
repnz
aaa
aad
sub
xchg
in
pop
lods
dec
sti
lret
xchg
aam
add
xchg
pop
sbb
sarl
pop
mov
cmp
mov
shll
add
clc
mov
lods
push
push
loope
fwait
dec
dec
rcll
and
xorb
and
push
int
out
test
adc
mov
mov
dec
repz
pop
or
nop
repnz
nop
inc
and
std
xchg
lahf
aad
sbb
fnstcw
pop
push
cmp
ljmp
orl
xlat
shl
mov
jl
addr16
pushf
xchg
cmp
inc
pop
fwait
enter
mov
inc
push
jl
loopne
dec
cmp
movl
int
dec
cli
push
fdivl
ja
and
pop
jp
sub
das
mov
cmp
ds
xor
adc
bound
pop
sub
pop
lahf
pop
dec
xchg
idivb
pushf
xor
dec
push
data16
jp
fisubrs
pop
xchg
mov
push
cs
xchg
cmp
mov
mov
pop
cmp
sub
dec
sub
and
ljmp
dec
les
xor
jp
push
cmp
stos
push
bound
sbb
cmp
push
jmp
out
adc
push
jmp
jns
dec
fwait
push
cmp
xor
inc
xorb
inc
xchg
and
pusha
add
dec
bound
push
xor
xchg
dec
inc
jb
sbbb
test
and
xchg
mov
sub
xchg
dec
ss
xchg
call
data16
fcomi
pop
jb
shr
sub
test
push
pop
lock
fisubs
jb
es
inc
aam
adc
and
push
push
mov
dec
in
push
std
push
loop
mov
pop
xor
fcomps
out
and
inc
stos
iret
mov
adc
adc
pusha
fucom
cltd
sahf
jmp
insl
scas
mov
ret
sbb
dec
xor
adc
into
jl
jbe
mov
pop
aad
shl
stos
and
inc
jg
pop
mov
push
inc
sbbl
addr16
pop
pop
lahf
mov
les
inc
sub
aas
pusha
inc
xchg
adc
insl
pop
push
int
loopne
and
and
jmp
pop
imul
dec
mov
add
repz
mov
pop
mov
dec
push
hlt
inc
cmpsb
call
lret
call
les
mov
aas
inc
ljmp
mov
jp
xchg
lods
out
cmc
mov
fwait
in
imul
sub
in
adc
mov
aam
xchg
dec
rcr
ds
sbb
xlat
lds
lds
ss
test
cmp
xor
movsb
adc
dec
ficoms
sbb
fwait
jp
divl
mov
mov
jno
rcll
stos
or
arpl
cld
adc
and
mov
pop
and
lds
cs
dec
icebp
bound
js
lret
and
stos
mov
push
dec
pop
cmpsb
pop
stos
rorl
pop
loope
sub
scas
sbb
jg
jne
ljmp
das
cmpsb
adc
daa
or
movl
mov
push
sahf
test
insl
xchg
out
out
pop
repz
dec
push
bound
push
scas
pop
shrl
sub
loop
xlat
mov
jnp
aas
shll
jns
mov
dec
pop
lret
xor
scas
dec
rol
pop
stos
rol
jp
call
arpl
jle
mov
pushf
and
and
stos
mov
fsts
add
xor
mov
sti
shlb
dec
iret
push
mov
icebp
jg
mov
add
pop
xor
lahf
imul
imul
pop
ret
sub
mov
pop
mov
fdiv
rorl
repnz
mov
and
rcrl
jp
cmp
icebp
xchg
test
push
mov
loope
mov
and
dec
ljmp
dec
or
sti
fldt
push
clc
in
cmp
jmp
repz
push
mov
adc
and
or
imul
scas
xchg
adc
in
iret
test
push
iret
lret
scas
push
cltd
in
cmp
jne
repnz
mov
dec
xlat
ficoms
sti
mov
mov
push
add
inc
test
inc
mov
out
dec
enter
push
cmpsl
xorb
jne
mov
ja
mov
fsubrp
pusha
shll
inc
mov
pusha
sub
lahf
mov
shlb
repnz
or
mov
adc
xchg
adc
pushf
mov
jecxz
adc
inc
push
add
ja
push
icebp
xchg
pop
aas
dec
clc
mov
mov
insl
std
lea
xchg
leave
out
jnp
gs
mov
cmpsl
ficomps
adc
repz
shrb
insb
inc
mov
dec
in
xchg
rclb
xor
pop
jnp
sbb
lea
lret
scas
rcrb
adc
xlat
dec
dec
pop
dec
mov
adc
jno
dec
inc
and
inc
mov
adc
or
ljmp
cmpsb
cmp
mov
inc
out
inc
cmpsl
dec
sub
bound
jne,pt
cwtl
pop
and
adc
push
push
xor
icebp
mov
lea
dec
cmp
and
mov
bnd
xor
xorb
scas
daa
or
mov
jl
jae
xchg
push
cli
scas
cmc
pop
push
and
daa
cmc
pop
ljmp
lock
out
js
out
cld
xchg
int
stc
imul
pop
and
in
imul
cmpb
push
pop
mov
loop
test
fwait
push
test
xchg
imul
test
mov
clc
cmp
xor
dec
mov
sbb
repz
jl
mov
dec
jl
sbb
js
dec
xchg
outsl
or
popa
mov
mov
mov
int3
lret
push
adc
fs
lcall
test
lods
hlt
clc
dec
scas
inc
mov
push
xchg
cmc
rorl
adcl
mov
mov
pop
aad
call
jmp
or
test
sahf
cmpsb
sub
mov
rcl
cmc
mov
in
xor
push
mov
cld
xchg
nop
shlb
in
pop
mov
loopne
fists
sbb
call
push
sub
test
adc
xchg
mov
test
test
mov
cmpsb
cmp
addr16
jne
xor
jnp
subl
dec
std
mov
push
xchg
mov
mov
imul
or
xor
dec
inc
pop
jmp
sbb
fs
mov
pop
mov
cmp
call
jl
in
outsl
orb
dec
das
test
pushf
mov
dec
dec
push
cwtl
mov
daa
ja
scas
mov
out
cld
or
lds
adc
rep
in
push
mov
add
push
mov
xor
mov
xchg
std
out
sarl
cwtl
xor
adc
cmp
jns
fidivrs
inc
sarb
mov
nop
aam
push
test
addr16
jge
adc
lds
mov
test
jg
cmp
je
xchg
mov
fcoml
ret
xchg
mov
add
movsb
ss
movsl
mov
ds
stc
cmpsb
shrl
cmp
sbb
je
cmp
sbb
adc
push
out
iret
xor
lret
cmpxchg
add
xor
movsl
push
jle
out
in
jg
mov
orl
mov
add
sbb
cmc
mov
cmp
xchg
cs
xor
repz
ss
sahf
add
pop
and
mov
cltd
ljmp
pop
gs
pushf
das
mov
lods
mov
xor
inc
mov
lods
mov
mov
lret
addb
mov
jmp
js
fstps
mov
seta
pusha
loop
lahf
and
lea
movsb
adc
dec
adc
lret
adc
movsb
aam
cmpl
adc
xchg
iret
jle
movsb
stc
xor
lret
adc
push
pusha
rcll
pushf
add
mov
xchg
add
adc
fs
sbb
xor
mov
das
int3
mov
movsb
ficoml
jnp
jmp
enter
mov
adc
mov
cli
sahf
divb
pop
clc
dec
inc
in
push
or
enter
cmc
adc
and
mov
dec
ljmp
sub
stos
call
icebp
sbb
mov
jne
push
call
push
fwait
sub
dec
adc
jg
ja
and
cwtl
rorb
push
pop
movsl
hlt
cmp
ret
scas
xchg
cmp
aam
lcall
push
in
push
jae
jno
imul
es
shl
xchg
pop
mov
push
fwait
adc
jo
call
loop
mov
or
xchg
or
push
jno
mov
stos
imul
and
shrb
mov
scas
loop
dec
mov
repz
mov
movsl
pop
xchg
out
jns
push
and
hlt
daa
outsb
addr16
xchg
pushf
sbb
jg
sti
gs
inc
inc
fwait
cltd
fldl
xor
daa
fstpt
and
push
imul
addr16
mov
pop
jo
or
cld
and
lea
or
mov
xor
or
test
inc
shll
mov
mov
xor
push
fstl
jmp
pop
ljmp
add
pop
cmovno
sarb
inc
sbb
push
xchg
ja
testl
imul
shl
mov
daa
movsl
mov
fisubrs
popa
mov
lret
pop
cmp
aas
cmp
dec
iret
mov
mov
mov
xor
adc
xchg
adc
je
cmpsl
mov
movsl
mov
xor
imul
mov
dec
or
insb
jb
stos
lret
aas
adc
cld
push
ss
leave
lods
mov
pop
rolb
cltd
mov
xchg
push
or
xor
sahf
cmp
rcll
roll
ss
sbb
decb
enter
adc
out
lock
pop
cmp
mov
mov
and
lcall
sub
rorl
xor
bound
gs
inc
jmp
in
fs
lret
outsb
fdiv
popf
dec
rorl
sub
add
pushf
out
je
repz
ss
call
lahf
xorl
mov
sbb
outsb
in
lds
push
leave
xor
mov
lcall
in
sub
push
aaa
jp
pushf
and
xor
dec
dec
mov
mov
mov
and
ja
es
test
sub
test
xchg
dec
bound
insl
add
push
or
nop
dec
sarb
cmp
dec
and
subb
leave
dec
into
daa
imul
sub
sub
jl
clc
fwait
sub
sub
cmpsl
fdiv
dec
xchg
xor
out
mov
test
dec
add
and
xchg
test
mov
jge
mov
sbb
adc
push
call
mov
mov
aam
cmp
mov
jecxz
aad
pop
xchg
lds
fimuls
imull
adc
rcl
or
jge
call
les
ja
push
pop
or
mov
or
dec
ret
pusha
and
sarl
lcall
insl
xchg
mov
cmpsl
xor
mov
cli
mov
jmp
sub
lret
mov
lds
rcrb
outsb
cmp
cmp
adc
mov
or
add
es
bound
lea
in
jg
cwtl
add
and
es
and
iret
sbb
cmpsb
iret
cmpsl
mov
pop
loope
push
push
test
loope
mov
jo
pop
in
mov
mov
cmc
inc
mov
inc
je
add
sbb
lock
call
push
sbb
pop
outsl
sbb
into
push
sub
jae
roll
and
nop
aas
out
jo
ds
push
and
dec
sub
inc
fs
ljmp
push
inc
aas
andb
add
push
in
mov
sbb
push
mov
pop
xor
push
out
in
jle
repnz
in
mov
lock
or
lds
sbb
cmpsb
pop
xlat
push
cmp
pop
push
inc
jbe
jbe
mov
sbb
or
cmp
fmul
xchg
mov
pop
test
push
in
pop
sub
scas
sub
or
andl
mov
leave
or
lret
addr16
ja
xor
nop
shlb
sub
jl
mov
cli
adc
sbb
fidivrl
inc
mov
das
and
shlb
into
mov
aaa
cwtl
mov
mov
addl
movsl
jecxz
pusha
fnstenv
pop
call
or
dec
scas
pop
in
ja
xchg
clc
imul
mov
jns
cli
xchg
xchg
outsl
add
out
sub
sub
subb
and
push
adc
mov
xchg
std
shl
loopne
jo
loop
std
sub
mov
jge,pn
cld
and
push
jae
jb
pop
push
aas
popf
movswl
jb
mov
aam
mov
sub
lods
mov
insl
pop
jbe
mov
sbb
cmpsb
fstpt
addl
mov
pop
sbb
es
push
sub
dec
sub
pop
std
stos
and
cs
ja
lods
mov
mov
int
push
mov
mov
push
add
aaa
dec
test
rol
por
jp
jnp
sub
jl
push
iret
repz
adc
push
out
rcrl
cmp
mov
xchg
inc
sti
mov
inc
ret
rorl
in
jns,pt
pop
lret
sbb
shll
loopne
je
xchg
xrelease
sub
cmpsl
xchg
leave
add
repz
sub
or
jmp
sub
pop
movsl
sahf
setg
popl
push
int
insl
cmp
mov
xlat
js
sarb
xchg
frstor
ret
inc
pusha
cmp
notl
and
addr16
mov
aam
mov
and
aaa
sbbl
mov
sub
mov
xchg
pop
test
jb
scas
adc
xlat
mov
xor
cmp
out
popa
sahf
icebp
push
lret
or
xchg
mov
and
pop
xor
imul
dec
dec
repz
andl
mov
or
jb
cmp
es
lret
adc
jmp
arpl
push
popa
fsubr
sti
adc
dec
xchg
sti
movsl
xor
lahf
dec
mov
testb
rol
push
rolb
scas
stc
int3
mov
xorb
push
adc
mov
fisubl
jp
adcb
add
jecxz
int
mov
pusha
shlb
mov
push
cs
mov
sub
inc
xchg
sarb
xorl
pop
push
sub
sub
insl
outsb
bound
ret
or
push
push
jle
add
dec
jp
xor
nop
int
fldcw
pusha
pop
test
mov
sub
xchg
or
cwtl
mov
cwtl
repnz
push
and
dec
jmp
xor
mov
sbbb
out
inc
xchg
clc
out
push
push
dec
iret
xor
aam
daa
sarl
lods
ret
mov
loopne
pop
pop
in
mov
dec
ret
out
incl
add
sbb
cmp
push
cwtl
bound
inc
inc
mov
add
in
test
or
xlat
out
mov
lret
mov
shll
ret
push
sbb
cmp
fstps
push
mov
loopne
incb
stos
push
pop
hlt
sar
rcl
scas
in
lds
dec
adc
fdivl
sbb
push
push
lock
mov
dec
cwtl
xchg
mov
stos
pop
test
add
add
aad
out
test
aaa
push
repnz
add
sti
stos
iret
test
mov
sar
outsl
insb
aam
repz
sarl
xor
insl
or
or
push
xchg
cmc
push
mov
ss
and
mov
jg
and
out
scas
fwait
and
shlb
jbe
or
mov
adc
mov
or
jle
pop
push
cmpb
in
jnp
jne
xor
mov
jmp
lahf
fsubs
out
cmp
and
fcmovnu
out
adc
adc
jno
sarl
inc
notl
imul
shlb
test
lahf
fsubs
or
jl
fmul
adc
mov
pop
xor
pop
icebp
cs
or
push
iret
std
test
repnz
pop
insb
mov
xor
test
jb
movsl
xchg
push
ss
inc
test
imul
mov
aad
mov
ljmp
inc
icebp
mov
cs
cmp
mov
push
push
shlb
mov
mov
into
push
lods
and
mov
or
das
adc
xchg
lret
inc
pop
mov
xchg
leave
push
orb
popa
add
sub
push
push
sub
repnz
jmp
pop
mov
mov
dec
lods
out
dec
mov
out
mov
adc
xor
adc
xor
xchg
int3
pop
jp
hlt
out
inc
and
pushf
sbb
or
movsl
stos
xchg
inc
add
jl
pop
aad
sahf
push
sbb
sub
cmp
push
jno
insb
and
sti
xchg
lahf
lock
mov
inc
sbb
mov
and
in
sti
rolb
lea
aad
imul
out
mov
fidivrl
orl
mov
xor
nop
adc
loopne
jmp
or
xchg
mov
jns
inc
cmpsb
mov
push
xor
sub
adc
sbb
subl
sub
adc
lret
sbb
push
dec
adc
std
mov
adc
icebp
ds
sahf
shlb
fwait
pop
push
subb
call
lods
ss
push
mov
shlb
lds
mov
push
add
gs
add
jmp
in
and
mov
out
inc
and
lcall
xchg
stos
and
and
in
data16
xor
imul
les
mov
out
imul
xchg
js
cmp
mulb
pop
pusha
lret
test
out
leave
ss
aas
jae
stos
es
inc
push
cmp
call
into
aaa
xchg
lds
pop
rolb
push
and
push
mov
bound
sub
jb
call
push
jns
or
pop
inc
mov
imul
inc
or
bound
arpl
nop
add
arpl
leave
adc
cmpsb
mov
or
xchg
rcr
repz
lock
dec
loope
mov
imul
mov
js
clc
hlt
scas
fnstsw
xor
lock
fsubl
adc
pop
sub
lods
int
je
iret
jb
movsl
mov
sahf
adc
fnstsw
sbb
bound
fisubrl
lahf
mov
es
push
iret
lds
sti
insl
xor
fisubrl
xchg
mov
je
mov
xchg
addb
mov
inc
sbb
je
add
sahf
je
mov
xchg
pop
je
mov
mov
mov
xchg
enter
std
hlt
idivl
push
test
mov
sti
loopne
stos
and
out
das
daa
mov
add
popf
inc
fisubrs
xor
jp
pop
jns
mov
test
push
cmp
int3
icebp
mov
ret
pop
movb
popf
loopne
pop
push
xchg
add
dec
lds
dec
pop
into
nop
jb
out
das
jae
pop
pop
popf
or
pop
mov
inc
fcomip
mov
std
jnp
sbb
adc
push
dec
adc
and
add
xor
and
lods
je
xchg
dec
pop
clc
push
fcmovb
mul
in
jecxz
sub
in
scas
int3
repnz
dec
mov
ds
movsb
pop
xchg
test
dec
inc
push
std
ja
xchg
jno
xor
mov
sub
test
rclb
xchg
out
out
jecxz
xor
ss
fiaddl
test
jg
sbb
inc
cmp
loop
repz
add
je
inc
leave
push
imul
fucomip
xchg
test
je
scas
pop
add
dec
in
and
xchg
jae
arpl
mov
lds
push
mov
mov
insb
cmp
adc
inc
inc
shr
jne
adc
inc
mov
sbb
iret
fcoms
outsb
xlat
shr
js
or
mov
add
orl
mov
mov
inc
call
outsb
cmpsl
int3
jl
or
clc
in
xchg
pop
add
mov
and
adc
adc
sbb
mov
outsl
pop
push
cmpsb
lahf
nop
sbb
ret
jno
pop
add
aaa
lods
pop
pop
sbb
cmpsb
adc
mov
jne
push
inc
push
cmp
imul
iret
xchg
push
shlb
lret
lcall
stc
and
xchg
dec
pop
inc
and
stos
fdivrl
lcall
and
fstp
mov
addb
jbe
sbb
shlb
or
add
pop
stc
pop
es
addb
das
stos
sti
jns
cli
or
push
in
xchg
mov
leave
adc
retw
jne
movsb
fldenv
mov
f2xm1
xor
mov
cmp
clc
insl
cwtl
pop
push
das
out
pop
arpl
or
add
mov
add
aaa
test
cmp
mov
mov
movsl
js
addb
add
test
pusha
cmpsb
push
push
sbb
mov
cmp
xchg
xchg
and
adc
inc
cld
push
fcomp
mov
push
ljmp
call
jl
pusha
cmp
fisubl
sar
addr16
jp
jl
xchg
add
gs
or
rclb
rol
and
mov
hlt
or
flds
push
repz
mov
sub
pop
add
xor
aas
jmp
shl
dec
mov
loope
hlt
ret
out
scas
loopne
ljmp
push
dec
lea
cmp
leave
and
rolb
mov
sub
mov
jno
test
inc
and
push
stos
in
add
xchg
jo
mov
sbb
inc
popa
stos
dec
aas
pusha
sbb
in
add
clc
inc
loope
and
in
repz
mov
pop
push
imul
es
jg
xor
cmp
inc
rcl
push
or
add
lea
sbb
aad
xchg
push
sbb
call
shr
test
or
lret
push
ret
xchg
outsl
mov
sub
pop
int3
addl
cmpsb
adc
add
ficomps
lds
push
orb
sti
addl
stc
out
push
jnp
xor
push
sar
idivl
xor
mov
je
sub
gs
sbb
in
iret
insl
sbb
js
cmp
xchg
jbe
sahf
add
out
jbe
iret
xchg
mov
outsb
jmp
jb
popa
adc
cmpb
outsb
fs
ss
xor
and
cmpsl
mov
ret
mov
rclb
and
lahf
repnz
aad
les
aaa
sbb
push
jno
ljmp
cmpsl
mov
dec
popa
sbb
addr16
sub
xchg
jb,pn
pop
pop
xchg
mov
jno
adc
into
sbbl
and
xor
mov
popf
movsb
ficoms
cmp
test
jns
rcr
mov
mov
fmuls
and
scas
rcrl
mov
divb
arpl
cmp
push
fistpll
hlt
jp
pop
and
jl
imulb
xchg
add
in
subl
xchg
and
dec
loope
xlat
jo
adc
pop
cli
fwait
arpl
jo
inc
push
xchg
in
mov
je,pn
add
sub
xchg
fnstsw
insb
adc
fxch
xchg
shl
adc
xor
aad
imul
and
mov
cmp
lock
push
inc
hlt
aaa
mov
push
jbe
mov
sbbb
ja
dec
mov
mov
fnstenv
nop
xor
fld
cmp
repnz
dec
sahf
fwait
pop
sbb
in
inc
pop
cmpsl
lock
inc
out
push
inc
jns
pop
cmp
rcrl
xchg
push
inc
insl
pop
inc
push
cmpsb
imul
cmp
ret
aad
outsb
cld
pop
sbb
leave
xchg
popa
fsubs
jno,pt
xor
jl
xor
aam
xchg
decb
test
bound
movsl
pop
jmp
notb
insb
xchg
imul
mov
jl
mov
and
fwait
je
pop
sbb
jno
call
mov
and
adc
in
push
cmp
pusha
fistl
xor
sub
and
in
xchg
cmp
mov
xchg
fistps
jae
cmp
mov
sub
imul
inc
xchg
push
pop
stc
mov
ret
out
cmpsl
xchg
pop
mov
repnz
faddl
cmpsb
loopne
push
push
inc
je
or
xor
and
out
pop
aas
cli
pop
arpl
sbbb
and
cs
jl
jno
lds
aam
mov
lods
push
pop
lea
cmp
push
sub
data16
test
loop
int
inc
filds
fdivl
mov
addb
orl
adc
xchg
shrl
repnz
and
pop
inc
test
pop
jle
shlb
int3
repnz
inc
mov
popa
scas
aam
xor
sbb
xchg
frstor
or
cmpsb
mov
sbb
sub
aam
xor
inc
std
stc
pop
test
mov
jmp
shr
xchg
pop
push
cmp
jle
mov
jecxz
loope
pop
mov
lods
mov
push
sbb
aas
pop
xor
or
and
in
pop
pusha
clc
or
call
gs
pusha
jle
outsb
in
inc
out
cs
cld
mov
iret
pop
adc
movsb
xchg
cmp
jmp
or
popf
lret
nop
loop
pop
fs
xor
es
pop
xor
std
cmovb
movsb
faddl
cmp
sbb
fs
lods
jl
adc
lds
push
pop
inc
sbb
mov
call
repnz
imul
popf
push
cmp
mov
or
and
mov
fldcw
and
sti
adc
scas
adc
cmp
ljmp
daa
mov
push
sub
push
mov
lret
cmp
xor
cmp
sbb
cltd
push
test
mov
mov
dec
fcoms
sub
jecxz
jmp
mov
mov
int3
xchg
and
sbb
xchg
out
xchg
adc
dec
or
xchg
movsb
add
insl
and
adc
dec
pop
inc
mov
ret
mov
and
and
scas
lds
mov
popa
leave
fisubrl
jbe
mov
test
sarb
xor
mov
push
int
pusha
sbb
imul
shr
ror
int3
lahf
nop
pop
inc
or
lret
push
shrb
inc
cmpsl
nop
adcl
push
and
add
test
cwtl
push
mov
xor
cmpl
adc
in
icebp
cmp
cmp
mov
in
push
push
fstpl
pop
test
sbb
imul
int
lcall
mov
in
das
or
call
loop
mov
sbbl
push
cmc
add
push
sbb
leave
loope
xor
cs
popa
stos
int
les
clc
xchg
es
sub
mov
xchg
and
cmp
xor
sub
js
mov
mov
out
jl
push
test
mov
cmpsb
mov
xchg
addr16
insb
and
imul
push
aam
mov
mov
xchg
xlat
arpl
mov
pusha
dec
fimuls
sar
bound
mov
lds
mov
loope
cmp
adc
dec
sbb
jb
das
sub
jge
pop
adc
inc
lahf
push
or
repnz
pusha
rolb
pmuludq
xor
shr
repz
fidivrl
jmp
insb
test
pushf
add
sar
rcrl
clc
mull
daa
mov
out
or
js
es
orl
aaa
mov
and
jle
mov
das
popa
rol
push
sbbl
or
add
arpl
pop
push
or
cmpsl
push
jns
adc
clc
xchg
enter
inc
cltd
aas
inc
mov
and
cmp
aam
mov
stos
xor
or
and
stc
jl
lds
xchg
sti
cmp
and
insl
push
sbbb
das
cmpsb
add
mov
iret
mov
jmp
push
pop
sub
out
stos
shrb
divl
adc
xor
jnp
pushf
dec
push
mov
repz
jl
into
lahf
hlt
enter
push
xchg
andl
mov
int3
repnz
icebp
into
gs
fdivrs
cs
sbbl
sub
test
fsts
aaa
inc
shlb
mov
popa
test
add
xchg
add
aas
sub
lahf
pop
mov
add
dec
adc
inc
loope
jge
fsubs
add
fs
movsb
aam
sbb
in
mov
out
xchg
jle
mov
movsb
and
and
mov
popa
test
nop
mov
shr
or
fists
add
hlt
mov
daa
out
call
jecxz
push
imul
das
dec
icebp
fcomp
or
pop
add
addr16
in
pop
sub
and
cmp
setp
fbld
jg,pt
shr
inc
sbb
loopne
addl
jle
movb
lahf
sbb
xor
jne
sbb
addl
movsb
rclb
repnz
mov
inc
gs
cmpl
or
xor
mov
cmc
dec
clc
lea
add
shrb
push
xchg
lock
mov
aad
lea
add
and
xchg
jno
fdivrs
push
sbb
cmpb
add
cmc
sbb
mov
pop
inc
xchg
mov
pop
or
in
in
pop
lret
sbb
jl
inc
imul
mov
and
mov
add
pusha
mov
iret
jecxz
mov
pop
sbb
xchg
adc
push
cs
cmp
sub
xchg
rcl
mov
movsl
push
jg
popl
sbb
pop
popa
pusha
loopne
cmp
div
inc
icebp
dec
pop
mov
mov
mov
dec
jnp
getsec
xor
mov
add
cmp
cld
jnp
mov
repnz
scas
aam
push
and
std
aam
mov
mov
jne
mov
mov
jbe
jbe
clc
xchg
pop
repnz
shl
jmp
cmp
jg
inc
pop
pop
aaa
add
jae
cmp
es
cs
cld
aam
aam
sbb
fs
cs
jb
fbld
repz
ficomps
aaa
cmpsl
cmp
loopne
das
or
mov
push
fstl
adc
in
lods
and
test
aad
nop
mov
jmp
aas
mov
add
xor
jb
iret
jmp
pop
int
jle
es
inc
cmp
add
lds
mov
sub
jmp
shl
out
repnz
inc
loop
dec
xor
mov
push
in
outsb
cmpsl
sbb
jp
inc
cmp
xchg
push
or
das
ja
jno
shll
mov
test
int
jmp
dec
pop
int3
icebp
incl
outsb
pop
jp
mov
sbb
in
fcmovu
ret
popf
mov
ret
or
jl
cmpsl
mov
push
push
clc
mov
ja
sbb
pop
loopne
insl
sub
jmp
push
dec
push
cmp
insl
in
cmp
loopne
mov
adc
stos
stos
dec
leave
loop
push
xlat
mov
leave
popa
insb
xchg
pop
push
cmp
addr16
loopne
gs
loopne
jg
mov
xor
xlat
fbld
mov
jno
jg
push
push
jecxz
or
nop
aaa
add
mov
push
imul
cli
loopne,pt
dec
mov
lods
xchg
push
stos
push
sub
clc
gs
xor
push
daa
xor
shlb
test
aam
mull
xchg
cltd
in
in
push
adc
xchg
sbb
imul
shll
mov
aad
inc
push
in
or
push
ud2
add
test
rorl
mov
mov
stos
arpl
das
stos
dec
test
xchg
xchg
sahf
insb
call
inc
push
repnz
xorl
lods
xor
fpatan
xchg
jb
push
lock
jno
and
pusha
dec
add
cli
xor
js
xor
test
mov
dec
test
pop
and
jno
pop
scas
mov
push
sbb
push
jo
pop
xor
dec
and
mov
ret
daa
lock
push
testl
aad
inc
or
pop
mov
jle
gs
cld
push
push
in
int3
out
pop
push
push
add
orb
cmp
shrl
cltd
jp
dec
pop
pop
js
xor
or
adc
les
jl
inc
bound
sub
ljmp
or
inc
cmp
fsubrl
pop
out
lods
enter
or
in
ffreep
cmpsb
int
pop
xchg
push
rcr
jge
adc
loopne
fs
add
stos
add
pop
xchg
mov
call
pop
jp
das
xchg
jge
pop
adc
movsl
push
lcall
mov
cmc
lahf
xor
insl
loopne
cmp
mov
sub
js
mov
pop
movsl
mov
mov
jmp
cmp
pop
add
stos
mov
cmp
adc
test
cmp
dec
lahf
mov
hlt
and
out
movsb
lret
popa
int
xor
jae
scas
call
mov
push
xchg
cmp
sub
into
xchg
popa
repnz
in
adc
jmp
stc
hlt
call
fs
jbe
cmp
mov
xor
out
rorl
mov
and
and
int
inc
pop
push
push
filds
jne
adc
add
jg
inc
out
pop
in
fcmovnbe
imul
inc
testl
push
and
mov
add
jmp
into
sub
dec
push
lahf
sbb
mov
pop
fwait
mov
and
repnz
sub
pop
mov
jns
icebp
push
aas
rol
jbe
dec
sbb
jl
mov
xchg
push
jnp
dec
icebp
sub
mov
adc
imul
aam
fs
pop
sahf
jb
pop
psllw
lret
popf
and
mov
mov
gs
jecxz
xchg
xor
dec
dec
cwtl
jle
push
out
sbb
sbb
mov
cmpsb
fsub
stos
mov
lcall
lods
inc
stc
fnstsw
cmpsl
mov
dec
xor
push
pop
ja
inc
stos
or
mov
xor
inc
arpl
push
movsl
jl
das
pop
mov
pop
add
je
jo
lret
sbbl
and
hlt
shlb
out
or
js
ja
imul
mov
push
xor
out
cmpsl
rorb
jno
orl
loope
cltd
jae
mov
or
mov
pop
lahf
aaa
xchg
adc
mov
and
fists
and
filds
cmp
inc
push
cmp
adc
ret
inc
js
into
mov
ret
add
add
pusha
mov
sbb
mov
xchg
out
loope
jmp
jge
pop
add
sub
xchg
lret
jno
movsb
imull
std
cmp
pop
pop
sub
js
aas
shl
nop
test
mov
outsl
addl
cmp
jns
fnop
dec
jno
mov
icebp
scas
cmp
mov
sbb
insl
jl
mov
mul
xor
xor
sub
fistpl
test
inc
rcrb
pop
pop
and
jae
stos
xchg
pop
sub
icebp
loope
ja
mov
jle
inc
sbb
cli
ja
cmp
xchg
push
jbe
push
dec
in
sub
fs
gs
jns
pushf
dec
shll
loopne
sti
mov
dec
sbb
das
adc
movsl
and
or
sahf
cmp
ret
adc
aas
pop
sbb
rclb
mov
pop
imul
push
mov
dec
pop
and
push
aam
lds
hlt
pop
jge
cld
dec
ja
pop
rol
pop
jbe
ljmp
adc
sub
or
push
out
inc
test
fsubrl
add
pop
nop
push
mov
pop
xchg
jmp
sbb
xchg
xorb
xor
ljmp
mov
dec
sbb
sti
outsl
movsl
movsb
inc
hlt
pop
dec
mov
negb
push
in
add
adc
inc
in
iret
adc
out
bound
jae
stos
sub
lds
dec
jbe
sbb
out
jno
mov
jl
xor
fs
cwtl
mov
xchg
xchg
je
push
outsb
mov
xlat
rcrb
sbb
push
dec
sub
cmp
mov
mov
scas
fld
mov
loopne
xchg
adc
fistpl
lcall
je
dec
jmp
and
pop
scas
gs
mov
push
sarb
push
cs
or
push
mov
xor
jg
add
incb
sub
pop
aam
dec
cltd
mov
push
dec
mov
clc
add
jne
cmpsb
push
inc
inc
pop
xchg
int
pop
es
sarl
xor
repnz
dec
mov
in
mov
js
sti
xchg
adc
jne
stos
lea
dec
xor
push
inc
mov
jge
push
sbb
push
xor
jl
cs
insl
insl
mov
rol
mov
cs
jns
int3
out
mov
push
dec
shlb
pop
or
out
cmp
and
push
jle
mov
test
push
shll
adc
dec
sbb
lret
push
pop
xor
mov
push
and
jp
aad
arpl
cltd
sahf
jp
push
aas
adc
pop
adc
jb
add
mov
mov
arpl
imulb
xchg
arpl
adc
jle
icebp
xor
pop
xor
repz
lds
dec
fisubl
add
stc
jno
scas
insl
cmp
mov
pusha
jp
jp
sub
and
pop
pop
and
int
xorb
fcompl
fucomp
sbb
outsl
add
jecxz
add
mov
mov
jne
hlt
pop
movzwl
es
mov
mov
je
pop
or
dec
push
repz
pop
pop
sar
sub
jne
repz
aaa
xchg
loop
repnz
adc
push
ficomps
shlb
shlb
sbb
jne
fistpll
dec
xchg
pop
add
test
cmpsb
mov
jg
sub
pop
inc
stos
and
xchg
aam
shll
push
bound
stos
inc
or
dec
pop
rcll
test
sub
or
add
sub
sti
enter
mov
sub
leave
arpl
cmp
rcrb
push
loopne
push
push
in
je
outsl
inc
iret
pop
mov
dec
push
lahf
lds
ljmp
in
ja
cmp
out
inc
sarl
test
cmp
cmp
add
push
scas
ss
loop
imul
mov
out
add
mov
pop
xchg
pop
movsl
cli
jle
pop
xor
mov
dec
call
stos
xchg
pop
int
inc
jp
sbb
xchg
sub
std
mov
loopne
jle,pt
aas
push
sub
ss
sub
fsubr
dec
jmp
loopne
dec
shrb
out
movsl
add
fcmovu
sbb
lods
mov
faddp
or
daa
xchg
iret
cmp
mov
inc
push
das
imul
es
lods
icebp
pop
push
test
hlt
mov
test
fistpl
insb
sbb
xchg
orl
jmp
jl
js
xor
push
mov
test
mov
insb
inc
out
cmp
jg
xchg
push
dec
pop
or
jg
xchg
fcompl
add
jae
push
shll
mov
jmp
loopne
mov
ret
lock
sbb
pop
mov
lret
add
sub
movsl
mov
dec
jnp
pop
lods
push
movsb
inc
loope
sub
inc
dec
mov
cmc
add
and
and
jns
xlat
call
xlat
int3
std
ret
push
mov
lods
mov
outsl
push
mov
mov
scas
xor
push
in
arpl
pop
adc
test
cmp
jmp
std
mov
or
inc
sti
sub
gs
int
sbb
outsl
subl
xorl
mov
sbb
add
insl
shrl
pop
mov
mov
fldl
jo
pop
inc
into
icebp
lret
cwtl
xchg
push
jl
cli
ret
xchg
aas
inc
sbb
sbb
mov
cld
cmp
or
shll
ljmp
or
in
nop
xor
arpl
popa
shll
inc
test
lea
sbb
xor
repz
enter
mov
jne
sub
aam
dec
cmp
leave
cmpsb
enter
daa
mov
mov
jns
stos
mov
mov
ret
popa
sbb
mov
out
or
cmpsl
jle
fmuls
testb
jecxz
nop
inc
jl
adc
leave
xor
int3
cwtl
push
xchg
dec
sbb
cli
ljmp
xor
mov
psubw
imul
in
sbb
lret
and
dec
lret
sbb
lahf
mov
mov
push
test
ja
stos
mov
aad
xor
push
push
fsubrl
sarl
inc
data16
rorl
adc
rolb
iret
mov
adc
pop
repz
xor
cmc
sbb
fstps
xor
inc
mov
fcomi
and
inc
sbb
cmp
ja
mov
mov
or
lret
imul
cs
lock
int3
dec
push
sub
aaa
mov
aad
xchg
mov
in
cmpsl
push
xor
outsb
inc
fdivs
dec
dec
int
rcrl
iret
mov
adcb
out
cli
jbe
bound
xor
in
cmp
pop
movsl
test
loopne
shlb
add
push
adc
clc
mov
test
dec
nop
insl
push
jns
in
pop
jne
leave
out
pop
pop
inc
lahf
cwtl
mov
adc
shlb
pusha
aas
inc
push
xchg
outsl
jp
scas
clc
xchg
adc
aam
inc
mov
lock
dec
and
lods
dec
push
add
lcall
je
out
mov
pop
mov
fistl
dec
shr
lods
xorb
mov
mov
aaa
cmpsb
idivb
rorb
mov
jl
mov
jno
jecxz
push
popa
adc
or
loope
lds
rclb
shr
sahf
inc
in
inc
scas
cmp
jo
adc
pop
pop
cs
or
mov
push
xlat
stc
mov
inc
hlt
cwtl
xchg
iret
mov
pop
aaa
fldt
adc
shr
shll
fsubrs
movsb
jbe
mov
das
xor
xchg
mulb
aaa
stos
inc
push
xchg
mov
add
cmp
xor
inc
jo
enter
ss
jmp
sub
xor
cmpsl
mov
add
adc
mov
aad
fwait
push
popf
stos
xchg
rorl
pop
mov
rclb
aad
jne,pn
shlb
mov
jbe
mov
dec
mov
call
aam
or
loopne
out
xchg
ss
mov
cmp
das
cwtl
rorb
cmp
jl
jno
and
pop
cltd
cltd
comiss
push
popa
mov
add
fcmovbe
inc
add
xchg
aaa
movsl
mov
xchg
test
imul
fmuls
outsb
inc
ds
lahf
sub
xchg
pop
cltd
sub
scas
shll
mov
fildl
fdivs
push
xlat
mov
out
outsl
divb
push
repz
jae
mov
out
push
scas
movsb
add
out
std
sub
scas
dec
or
mov
and
leave
sahf
and
arpl
test
push
jne
adc
dec
sub
or
push
daa
mov
mov
dec
inc
and
rorl
rcrl
sti
loopne
jmp
xlat
movsl
subl
dec
push
inc
pop
or
inc
hlt
out
add
push
or
jb
push
addr16
inc
xor
addl
sub
jp
nop
movsl
lcall
xchg
data16
dec
pop
call
jp
mov
int3
es
repnz
adc
outsl
test
clc
xor
loopne
or
jnp
loop
push
leave
push
push
lcall
add
loopne
sub
pop
icebp
daa
xor
test
jecxz
cli
rcll
xor
xchg
and
sbb
fdivs
or
rcr
ret
and
out
adc
push
and
in
out
inc
sub
movsl
imul
popa
add
les
cmpsl
cmpb
arpl
dec
aaa
dec
or
fistpll
je
movsl
pop
nop
cld
or
cmp
pop
iret
lret
lcall
mov
clc
and
add
movsb
shrl
hlt
adc
pop
rcr
arpl
mov
sub
xor
jbe
fiadds
leave
in
cmp
neg
pop
imul
jb
fiadds
pusha
add
or
addr16
push
inc
sbb
int
arpl
dec
imulb
mov
push
jo
cmp
and
ror
xchg
lds
jno
pusha
ds
xor
xchg
fidivrl
mov
scas
cs
mov
mov
iret
xchg
mov
js
pop
fnstenv
dec
lret
xor
add
mov
jns
add
stc
add
je
sti
sahf
add
pop
add
les
push
cmp
test
dec
and
xchg
lcall
and
jae
and
imul
out
cmp
lahf
jae
stos
and
sbb
inc
leave
mov
inc
xor
outsl
xor
jns
decl
jbe
aad
cli
jecxz
rorb
or
adc
xchg
aas
sarl
in
and
push
push
jnp
mov
arpl
aaa
mov
cmpsb
inc
cwtl
jmp
xor
or
dec
dec
add
jne
push
fistps
and
adc
add
jns
pop
and
sbb
push
or
int3
jmp
and
ljmp
push
add
jns
mov
xchg
xchg
out
mov
dec
dec
sbb
push
ret
xor
fildl
arpl
pop
mov
cmp
add
iret
sbb
std
scas
or
xchg
in
dec
mov
mov
push
in
lods
das
push
cmc
bound
cs
pop
cmpsb
jnp
pop
mov
pop
cmp
cmc
scas
dec
push
xor
cs
sub
cmp
movsb
das
pop
jmp
pop
xchg
pushf
sahf
push
in
fucom
cvtps2pd
mov
or
daa
pop
sub
cltd
loope
jle
sub
inc
adc
lcall
insl
aaa
cmpsl
mov
nop
sbb
imul
fisttpll
out
sarb
dec
fsub
push
sub
mov
xchg
push
imul
jle
pushf
jnp
lret
jge
mov
inc
stos
mov
jge
daa
mov
mov
jnp
adc
or
mov
out
or
lods
ljmp
adc
std
popf
inc
fcmovu
clc
jmp
fimuls
iret
in
push
cmp
das
movsb
mov
pushl
mov
ret
push
cwtl
jle
inc
mov
jecxz
andl
jne
fbld
es
in
hlt
jmp
cli
push
lret
jnp
push
cmc
pop
shlb
fcomp
mov
iret
aad
sbb
mov
adcb
mov
push
pushl
inc
sub
scas
push
mov
testb
and
sbb
clc
push
and
push
and
dec
movsb
arpl
jl
mov
test
add
pop
test
push
clc
push
loope
out
jbe
pop
mov
jmp
out
pushf
popf
mov
cmp
orl
sub
pushf
jo
sbb
lock
in
jae
xchg
inc
es
daa
shll
ficoms
ljmp
lds
in
loop
adc
push
and
pop
mov
cmc
cwtd
add
aas
dec
icebp
xchg
das
mov
cld
jge
and
movsb
cld
aam
dec
enter
add
inc
sbbb
cmpsl
ja,pn
out
mov
ret
bound
mov
icebp
pushw
fsubp
dec
imul
addb
mov
imul
loope
push
ret
add
sbb
cmpsl
insb
lret
adc
ret
lods
repz
dec
aam
xchg
add
mov
adc
icebp
dec
loopne
sahf
jle
lret
add
ljmp
pop
out
call
push
mov
push
jbe
mov
into
xor
cmp
in
lret
test
out
fisubrl
sbb
xchg
pop
in
je
sub
jo
mov
mov
xor
xchg
lock
popa
adc
enter
stos
outsl
xor
shll
pop
std
pop
rcl
mov
cmp
stos
loopne
pop
rolb
cmp
sarb
into
xchg
bound
int
arpl
inc
cs
aaa
adc
sub
rcrl
icebp
lahf
mov
fisttps
inc
jp
xchg
hlt
int
pop
mov
inc
in
cmp
xchg
movq
icebp
fwait
mov
sub
pop
icebp
adcb
sbb
xchg
xor
in
rorl
arpl
cs
push
cli
jge
push
lret
jg
stos
mov
outsb
adc
xor
inc
fldcw
dec
sbb
leave
push
adc
jle
adcb
jle
sub
xchg
daa
push
daa
adc
lock
mov
test
inc
lock
popa
add
or
adc
pop
nop
cwtl
pop
mov
movsb
filds
in
mov
sbb
shrl
addr16
and
int
sub
adc
xchg
out
mov
clc
push
ja
push
sbb
fiadds
cmp
or
sub
or
mov
mov
lret
xchg
enter
pop
popf
lret
cs
dec
rcl
and
in
insl
movsl
stos
in
jnp
cli
ret
push
loopne
aam
or
cli
loope
push
mov
ja
push
pusha
pop
repnz
push
mov
mov
test
mov
inc
aam
idivb
xchg
fstps
je
mov
jle
jge
or
xor
xlat
shlb
fst
sub
xchg
cmpsb
repnz
sti
pushf
mov
ret
push
xchg
cltd
pushf
adc
lock
or
xchg
pop
inc
sahf
push
jecxz
jl
test
fdiv
nop
jb
xchg
and
xor
pusha
sbb
xor
mov
lret
notl
jp
loopne
cmp
std
mov
cwtl
add
pop
and
fidivs
xchg
fistpl
adc
clc
dec
mov
lret
jb
jns
adc
repz
adc
scas
fisubl
out
xchg
jp
mull
xlat
fistpl
jle
popa
ret
inc
adc
pop
outsl
jge
add
stos
in
pop
add
adc
push
movsl
out
call
scas
push
mov
xchg
cltd
xchg
lret
xor
mov
add
cwtl
and
jo
jl
add
and
dec
jbe
popa
pop
clc
mov
pop
cltd
stos
cmp
xorb
cmc
jae
loope
mov
lods
fildl
xchg
fnstsw
fidivrl
mov
scas
xchg
pop
inc
and
das
pusha
mov
add
mov
jg
out
dec
mov
aam
pop
popf
les
cmp
jns
insl
push
or
sub
fadds
popl
fwait
das
push
fcmovb
call
pop
mov
mov
ja
adc
int3
pop
bound
mov
sbb
in
rcll
mov
xchg
or
sbb
sub
sbb
test
rolb
xchg
repnz
xor
movsb
push
xor
cmp
jg
call
decb
test
dec
mov
les
mov
push
add
xchg
mov
xor
mov
xacquire
xlat
repz
xor
and
loop
jbe
xchg
push
insb
inc
cwtl
pushl
rcrl
mov
aad
dec
or
xor
arpl
gs
rcrb
imul
adc
dec
in
mov
mov
mov
mov
scas
int3
loop
fcmovbe
and
nop
xchg
fisttpll
adc
cmp
stc
loopne
pop
ret
cmpsl
or
xlat
cmp
popf
or
xchg
sbb
adc
xor
jecxz
add
addb
lcall
ret
idivb
loopne
mov
inc
sub
jo
add
fcomps
jb
sub
xchg
xchg
loop
test
lock
insl
mov
mov
sahf
sub
xchg
icebp
pop
inc
xor
dec
lcall
fs
push
cmp
sbb
call
mov
lret
jp
lret
xor
inc
fistpll
xchg
push
mov
std
dec
xchg
pop
mov
adc
pop
mov
in
mov
jmp
pop
jmp
cs
xchg
sub
ret
xchg
insl
cmpsl
cmp
push
jnp
scas
es
inc
int3
das
sbb
mov
xchg
orl
ss
div
imul
mov
ret
jno
fiaddl
inc
push
int
adc
hlt
in
lods
jb
cmp
mov
mov
rorl
or
adc
xchg
cmpsl
add
shl
jp
or
lcall
dec
out
outsl
lret
mov
lahf
cmp
or
aaa
mov
adc
inc
cmp
or
lahf
xor
sar
xchg
mov
test
daa
inc
push
hlt
les
mov
dec
movsl
int3
jmp
iret
stos
mov
fistl
outsb
scas
outsl
test
dec
jmp
push
mov
inc
fdivs
outsl
cmpsl
and
dec
int
cmpsb
fsubs
mov
adc
dec
inc
push
int3
pop
das
mov
jbe
push
jbe
xchg
push
mov
out
sbb
mov
inc
in
std
adc
mov
scas
popf
sub
jns
adc
fs
clc
inc
sbb
orl
lds
add
mov
xor
pop
repz
pop
push
sbb
inc
das
jmp
aaa
std
paddd
dec
mov
sti
xchg
push
dec
adc
pop
jg
sbb
dec
cmp
pop
fmull
jge,pn
in
repnz
call
inc
in
sti
jne
les
adc
mov
stos
fisubs
mov
xor
cli
fldenv
cmpsb
cmp
ljmp
movsb
mov
sub
adc
outsb
in
xlat
inc
shlb
inc
jae
fs
and
in
imul
pushfw
mov
es
lret
addr16
lods
push
std
push
mov
pop
shl
inc
mov
out
cmpsl
pop
inc
scas
je
rolb
mov
fstl
call
add
stos
insb
outsl
inc
int
movsb
loopne
push
and
and
sbb
push
cmp
mov
inc
scas
test
sbb
dec
or
sub
into
andl
fdiv
adc
addr16
mov
insl
mov
rorb
int3
sbb
mov
mov
pop
hlt
in
test
mov
xchg
ror
mov
sbb
ror
fwait
ja
js
xchg
aaa
ffree
bound
jg
mov
lahf
in
push
push
add
sbb
inc
insl
stos
repnz
mov
scas
popf
or
hlt
push
mov
in
xchg
add
js
mov
or
cmp
add
xchg
stos
adc
out
sti
cmpsl
loope
mov
jg
pop
sbb
mov
ljmp
incl
stc
aam
rcpps
fidivrs
inc
sar
inc
jno
je
jo
jmp
ja
jl
ret
pop
out
ljmp
movsb
mov
sbb
cmp
and
jg
jle
out
add
cmpsb
rolb
iret
sbb
daa
xchg
sbb
test
stc
push
rorl
xchg
xchg
mov
addr16
leave
xchg
xor
lock
insl
adc
adc
jmp
or
mov
mov
fwait
in
int3
cmpb
push
sbb
insl
out
sbb
stos
mov
sbb
ret
mov
adcl
insl
xchg
inc
ss
jo
push
cs
ret
je
xor
mov
sub
cltd
xchg
xchg
in
shll
cmp
popa
outsb
lds
mov
shrl
xlat
stos
push
inc
mov
out
pop
call
test
sub
sbb
imul
arpl
cltd
add
and
push
jle
push
adc
repz
push
mov
js
jno
sub
ds
in
push
dec
std
dec
shl
les
imul
dec
lock
push
int
cmp
cmpsb
lods
fstpl
and
sub
psubsb
inc
fisttpll
push
pminsw
idivw
jmp
scas
dec
cmp
rorb
adc
xchg
cmp
mov
insb
push
xor
outsb
enter
cmc
lds
or
loop
add
lret
pop
mov
xchg
push
bound
jne
jae
add
pusha
pop
adc
cmpsl
fs
addr16
jne
jge
jae
shlb
mov
add
mov
jle
adc
xor
mov
enter
xchg
inc
xchg
cmp
adc
add
mov
movsb
add
push
ljmp
enter
mov
cmp
in
mov
push
insb
shrb
dec
push
lods
push
or
push
adc
lods
aas
das
xor
mov
rcl
mov
dec
add
or
xchg
sub
adc
cmp
mov
adc
shrl
sub
int
jbe
test
in
cmp
stos
lar
mov
mov
add
inc
jb
aas
push
mov
mov
hlt
and
sbb
pop
divb
mov
sbb
sbb
inc
push
ds
cli
mov
shll
jae
jle
pop
inc
inc
dec
pop
dec
sbb
mov
into
push
push
mov
addr16
fstpt
out
inc
stc
jecxz
xor
and
das
sahf
adc
jmp
clc
outsb
mov
dec
test
popf
fldl
adc
std
xchg
add
iret
adc
mul
shlb
outsl
jge
gs
mov
cmp
mov
popw
jb
fcomps
pop
add
addl
mov
lods
shll
shr
add
and
jg
shlb
pushf
push
flds
rolb
repz
mov
loopne
dec
packuswb
jb
xchg
or
gs
lahf
mov
pop
sub
mov
in
jbe
mov
popa
mov
dec
sbb
pop
xorl
stos
pop
shll
jge
movsb
outsl
pop
jb
cwtl
enter
xchg
mov
into
dec
lcall
cmpb
push
cmc
call
mov
fcmove
in
out
xchg
mov
dec
call
cmp
cwtl
ss
add
mov
cmp
jnp
cmp
loop
iret
and
add
int
push
push
inc
pushf
out
mov
test
lahf
dec
pop
xchg
addl
lods
add
dec
jb
mov
jo
test
mov
xor
or
je
dec
enter
lcall
mov
sti
push
out
jo
mov
stc
pop
in
lahf
xchg
lret
sub
or
scas
sub
outsb
dec
clc
cmp
iret
add
cs
jecxz
jmp
jne
jmp
inc
movsl
out
inc
fistpll
int3
icebp
jmp
adc
in
push
in
test
leave
fst
mov
sub
ret
hlt
scas
xchg
jge
jmp
sbb
push
lret
pop
mov
adc
bound
in
push
mov
mov
cmc
sbbl
nop
xor
fdivl
push
mov
jno
jp
sbb
test
push
lea
pop
shrl
push
arpl
cmp
sub
add
shlb
fcmovu
mov
repnz
lret
shll
push
lret
stos
hlt
mov
adc
pop
insl
adc
data16
test
pop
mov
sub
lds
mov
jb
lock
les
lods
xchg
mov
adc
dec
fisttps
mov
popf
pop
and
leave
cmp
pop
mov
xchg
in
hlt
lcall
test
idiv
cli
in
icebp
or
cmp
icebp
mov
fmul
outsl
movsl
addr16
int
enter
pop
pop
stos
jbe
xor
pop
mov
xor
lods
rorl
and
movsl
push
xchg
xchg
fistpl
fisubl
aam
clc
lods
pusha
ja
lock
jns
movsb
gs
shll
test
add
mov
jo
mov
mov
mov
mov
mov
ror
repz
and
xor
mov
arpl
pop
out
or
dec
pop
push
or
inc
push
movsl
mov
repnz
jo
push
shll
and
cmpsl
and
fisubl
ror
sti
stc
adc
lock
add
mov
aad
sbb
andb
sar
add
lods
sahf
sahf
push
cld
cmc
dec
rclb
dec
ror
or
or
js
mov
inc
movsb
movsl
bound
lcall
dec
shl
add
mov
sub
jmp
loope
jnp
pop
adcb
pop
or
lods
mov
sbb
mov
lock
cltd
out
mov
inc
or
dec
pop
xchg
inc
out
imul
stos
jb
mov
ret
cmpsl
cmp
mov
ljmp
in
test
imulb
lret
xchg
jno
sarl
mov
inc
cmp
inc
cs
insl
or
clc
leave
xchg
mov
int3
sub
out
pop
add
xor
sub
cmp
movsb
and
cmp
sub
sbb
bound
out
dec
jne
pushf
das
dec
mov
scas
lahf
fmull
or
sub
mov
inc
lcall
out
rcrl
sub
cs
ja
adc
jmp
into
add
scas
xchg
push
xlat
or
sub
mov
jo
idivb
scas
fwait
ja
push
lret
lahf
fisubrl
jge
subb
shll
in
dec
sub
fistpl
std
out
cmp
imul
std
cs
repz
xchg
cmp
out
mov
sbb
xor
int
adc
roll
xchg
fs
inc
push
dec
and
mov
pusha
or
mov
fstl
cli
shll
push
aas
xchg
jle
or
aas
lds
gs
jbe
add
divl
hlt
cltd
js
shlb
inc
sbb
push
pop
pushf
adc
popl
mov
out
jnp
movsl
scas
add
jle
mov
popa
mov
fldcw
dec
dec
mov
pop
gs
and
adc
push
pop
sub
sti
inc
fidivrs
shl
ret
mov
dec
stos
dec
stos
imul
xorps
popf
dec
arpl
cli
ds
sbb
mov
dec
push
add
mov
outsb
jb
mov
adc
imul
decb
mov
push
test
xchg
xor
mov
inc
test
xchg
adc
mov
jl
xor
lds
call
add
scas
js
outsb
popa
std
cmp
lcall
sub
movsb
jae
movsb
xchg
repnz
jecxz
dec
setns
dec
push
mov
enter
imul
in
jnp
adc
lret
mov
iret
out
jle
jo
sti
in
scas
sub
dec
ss
xchg
loop
lock
xchg
mov
lock
push
leavew
push
lods
es
xor
jae
push
leave
hlt
pop
js
in
je
repnz
sbb
push
ret
push
mov
pop
into
xor
jns
jns
into
mov
outsb
and
jp
sbb
test
jae
mov
popf
hlt
mov
add
or
cltd
sub
sbb
jo
or
xor
xor
jg
scas
addr16
arpl
jl
test
pop
fdivrl
jp
movsl
sub
cmpsl
adc
cltd
in
insb
lret
xchg
xchg
lea
in
mov
jl
push
jmp
xchg
pop
push
pop
sar
push
jle
adc
mov
ror
or
dec
mov
jno
xchg
outsl
mov
mov
rorl
aas
dec
adc
jl
push
push
adc
pop
pop
pop
xchg
int3
mov
call
sbb
jb
pop
or
xchg
in
mov
add
js
or
pop
lahf
push
or
inc
icebp
add
enter
mov
test
test
sahf
aam
push
cmp
je
jbe
lods
and
fildl
sub
mov
popa
xlat
xor
popa
jae
jge
cmc
lock
xor
ja
scas
dec
jno
xlat
inc
adc
decb
clc
insl
lods
out
sbb
dec
out
mov
mov
ds
adc
in
movsl
inc
insb
and
std
testl
mov
jecxz
pop
lahf
in
inc
add
pop
xchg
adc
loop
int3
pop
inc
decl
or
push
cmpsl
sti
fcmovu
aam
xor
xchg
cmpsl
dec
and
push
imul
sbb
shrl
pop
mov
pop
jge
inc
leave
add
add
cmpsl
adc
and
iret
cmpsl
nopl
test
inc
jg
das
pop
adc
add
out
in
int3
sarb
and
mov
pop
push
inc
cmp
jo
cld
push
sub
dec
arpl
out
xor
sbb
mov
pop
jbe
dec
in
icebp
mov
fcoml
lea
mov
mov
or
scas
in
jp
pop
into
mov
dec
xchg
stos
pop
mov
mov
cmp
fiadds
jo,pn
rol
sbb
leave
divl
and
lahf
lock
mov
in
push
mov
adc
xchg
or
sbb
fcmovnu
dec
jne
jae
mov
aaa
xor
scas
xchg
cmp
mov
add
fnstsw
jl
jmp
repnz
aas
dec
inc
in
dec
mov
add
arpl
movsl
insb
xor
mov
add
loopne
fidivrs
add
cmc
hlt
ret
scas
ret
mov
inc
shll
fcompl
sbb
in
xchg
jnp
cmp
or
jns
and
arpl
cmp
aas
push
pop
add
fwait
scas
int3
shlb
sub
pop
jp
test
or
fcomip
mov
mov
push
insl
sub
lret
jo
dec
dec
lahf
lcall
hlt
push
pop
imull
leave
test
maskmovq
negl
mov
adc
pop
sub
mov
in
pop
dec
in
inc
jae
leave
je
add
fsubrp
push
cmpsb
and
xchg
addr16
dec
sub
mov
jbe
xchg
jle
imul
mov
std
stos
mov
xor
filds
inc
or
js
cwtl
aaa
xchg
rcrb
cli
mov
add
xchg
jb
xchg
cmp
sbb
lds
stos
dec
gs
lods
cmc
push
xor
mov
hlt
sub
push
jg
adcl
outsl
jecxz
ret
cmp
inc
xchg
xchg
xchg
int
loop
or
test
popf
mov
cld
xor
call
sqrtps
in
gs
sbb
ss
ficomps
out
sbb
lret
loop
jnp
add
cmp
clc
dec
in
jno
sub
je
dec
test
push
inc
aad
sub
inc
ficompl
ffree
cmp
lea
pop
nop
xor
adc
push
imul
mov
into
dec
dec
repz
jle
arpl
aad
ret
mov
in
mov
inc
gs
mov
lret
out
or
call
outsl
xchg
lret
mov
cmp
inc
jnp
push
lahf
sahf
imul
int3
out
mov
push
stos
int3
dec
jg,pt
pushf
pop
scas
cmpsl
and
orb
aaa
fcoms
fs
lds
pusha
lret
pop
pop
popf
test
adc
jb
cmovs
mov
xor
dec
xchg
ljmp
pop
adc
pop
adc
test
std
stos
dec
jne
test
and
mov
cmp
push
call
push
jle
inc
adc
rcrb
inc
xlat
push
xor
sub
insb
mov
or
xchg
push
movsl
fdivrl
inc
rclb
sbb
gs
call
jo
aam
cmpsb
mov
lcall
in
adc
outsb
adc
mov
push
pop
imul
enter
test
pop
pop
insl
lock
or
adc
ret
push
inc
cmp
in
pop
inc
repnz
push
adc
jno
pop
pop
jns
insl
outsb
push
jmp
popa
in
repz
scas
divl
addr16
mov
push
dec
push
call
rol
leave
cmp
fmuls
xor
xchg
pop
sub
mov
ret
sti
rcrb
sub
inc
or
xor
test
jmp
out
inc
enter
lea
add
bt
sub
mov
js
in
sub
es
jo
je
notb
xor
call
mov
rol
sbb
sti
js
jae
dec
movsb
mov
pop
xor
jnp
mov
in
sti
scas
mov
into
shr
mov
xchg
lods
sub
out
daa
rcll
imul
cmp
sbb
pop
inc
jne
incl
adc
mov
jnp
icebp
dec
push
imul
inc
cmp
lahf
in
adc
movsb
cmc
dec
repz
enter
popa
mov
push
push
mov
in
ret
inc
out
jp
adc
mov
jae
out
lock
adc
xchg
push
cmp
leave
leave
jnp
inc
xchg
sahf
out
js
int
xchg
push
and
push
mov
mov
movsb
sub
mov
mov
sbb
mov
mov
add
outsl
pop
xchg
test
cld
adc
js
pusha
bound
dec
pop
cs
ret
push
inc
sbb
push
arpl
mov
inc
mov
mov
pop
cs
push
fs
jae
mov
rolb
jl
pop
jecxz
inc
xor
push
pop
loope
push
inc
adc
test
test
jl
int3
aas
or
add
push
mov
mov
lret
sub
mov
pop
mov
push
jns
fsts
nop
cmpsb
pand
out
repnz
inc
add
push
movsb
push
sbb
mov
das
or
mov
gs
scas
add
mov
arpl
adc
mov
pop
out
dec
sbb
stc
es
popf
mov
ror
lock
insb
fists
push
movsl
add
sub
push
dec
mov
sub
hlt
mov
adc
lods
inc
add
xchg
xchg
jnp
cmpsl
and
call
movsl
inc
pop
jno
inc
sub
mov
int
sub
rol
inc
dec
pop
cmp
jg
orl
xor
xchg
out
or
push
mov
xchg
xlat
add
and
mov
test
xchg
jmp
lock
mov
dec
and
std
test
sets
jp
hlt
lods
cmpsl
add
dec
jl
jb
test
test
rcl
xchg
popa
loop
ss
inc
cli
mov
jo
add
lret
in
inc
fdivrs
lods
sub
idiv
in
shrb
icebp
loope
pop
mov
mov
addr16
cmp
xchg
pop
shrl
stos
js
outsl
or
and
xchg
stos
into
xlat
push
mov
sub
sub
inc
mov
adc
add
jae
adc
lret
mov
xor
addr16
cli
cmp
cli
cmp
mov
jbe
in
or
add
pop
mov
add
cli
cld
adc
adc
mov
mov
or
jae
cmp
pop
je
sub
and
and
jecxz
add
inc
dec
stc
test
out
push
aas
and
repz
mov
loopne
jb
into
jnp
ljmp
call
in
ret
mov
adc
jo
in
cld
xor
lea
es
add
fists
inc
cmp
jne
sbb
movsbl
jo
fimuls
push
bound
imulb
dec
in
enter
pop
mov
jno
inc
mov
cld
cmp
dec
fsubl
ret
dec
and
test
daa
iret
push
and
push
jae
cmp
dec
imul
js
and
xor
sub
lret
mov
imul
ficoms
lds
jb
leave
mov
jge
xlat
mov
fstl
pop
outsb
jae
adc
inc
push
jns
mov
adc
mov
mov
daa
bswap
repnz
xchg
outsl
lods
pop
mov
negl
shl
adc
jmp
adc
push
cwtl
push
gs
ficoml
xchg
lahf
push
fmull
xchg
cmpsb
adc
xchg
int
ret
cs
mov
mov
mov
fimuls
cmpl
scas
xor
sub
push
and
sub
mov
das
cmc
testl
cmpsl
shrl
dec
adc
dec
dec
inc
add
clc
mov
popa
divb
adc
rcrl
and
andl
stos
mov
or
jmp
fsubs
mov
inc
mov
jbe
lock
jle
cld
fcoml
sub
stos
pop
clc
xor
push
leave
cltd
cwtl
and
mov
ds
sub
sub
ja
mov
and
pop
sarb
jg
xchg
sub
mov
ja
cwtl
bnd
fnstsw
mov
push
fwait
repnz
push
jae
mov
cmc
ret
in
push
sbb
lret
mov
adcb
push
mov
sbb
lods
in
outsl
push
xor
sub
cmp
fstps
push
dec
cvtps2pd
mov
in
insb
or
xchg
push
mov
fimull
or
and
jne
sbb
scas
repnz
xchg
xchg
adc
cmpl
pop
jns
in
mov
sbb
mov
lods
call
aad
jo
mov
mov
int3
xchg
mov
sarb
lcall
ljmp
into
xchg
xchg
nop
fcmovb
mov
pop
js
mov
push
leave
in
bnd
iret
inc
push
xor
aaa
push
lock
push
sbb
mov
add
mov
inc
add
adc
sbb
pop
bt
iret
adc
xchg
mov
gs
sbb
mov
lods
daa
pop
xor
mov
scas
jmp
mov
arpl
lods
adc
fld
test
aaa
mov
hlt
lea
push
xor
and
mov
push
int3
popa
clc
dec
push
leave
in
fcompl
push
xlat
lods
sar
cs
lahf
out
sbb
xor
mov
mov
mov
pop
popf
xor
xchg
rorl
xchg
push
out
add
int3
cmp
subb
ret
or
push
test
std
mov
repz
daa
inc
ret
push
out
sub
int3
fwait
xchg
push
xchg
pop
stc
lea
les
mov
out
adc
cmp
js
mov
pop
inc
cltd
das
adc
fadds
sahf
mov
les
inc
cmp
push
pop
xchg
xor
jecxz
or
lock
jl
cmc
sub
btrl
dec
out
xabort
cli
stos
in
jge
aad
add
sub
into
sbb
jmp
notl
add
nopl
cs
push
push
fisttps
sarb
xor
mov
cltd
fstps
add
mov
xor
mov
test
cmp
ja
push
int3
mov
push
dec
stc
rolb
imul
mov
and
decl
icebp
dec
sub
aad
pop
into
ficoms
cs
push
in
sub
xchg
cltd
cmc
sub
adc
push
sub
add
xor
push
out
jne
arpl
xlat
stos
mov
pop
adc
mov
xor
sbb
je
push
add
xor
das
mov
mov
or
adc
cmpsl
stos
lock
jae
xlat
push
xchg
xchg
imul
out
adc
int3
loop
imul
mov
adc
xchg
outsb
cmpsl
mov
orl
mov
dec
popa
lret
rorl
ret
insb
mov
lea
popa
hlt
add
imul
xor
dec
loop
repnz
test
adc
testb
shrb
clc
jb,pn
push
hlt
xlat
js
pslld
xor
add
sti
push
and
and
repz
addl
ss
jno
int
fdivrs
or
xlat
push
cld
fimull
inc
popa
sbb
cmp
ja,pn
rorl
dec
jae
notl
gs
pop
ss
push
dec
mov
mov
mov
or
adc
xor
inc
mov
rcrb
xchg
nop
mov
cmpb
lods
into
sbb
sbb
and
and
fstps
sub
cld
pop
orl
mov
xor
dec
add
repnz
inc
int3
loop
nop
outsb
mov
mov
jl
mov
pop
jb
inc
fcoms
outsb
jmp
push
push
jecxz
lock
insl
pushf
push
rcll
sub
or
mov
cli
ret
int
sub
push
gs
sti
cli
adc
and
pop
pop
or
nop
rcll
xor
lock
add
xchg
mov
push
push
adc
jl
jae
mov
lret
mov
rcrl
push
xor
sahf
lret
sbb
clc
imul
icebp
es
jle
push
dec
xchg
cltd
loope
es
add
push
xchg
ss
and
shlb
stos
in
bound
leave
push
jmp
add
js
and
les
or
cmovge
mov
ret
inc
das
lods
sub
stos
aas
pop
aas
add
pop
inc
inc
and
pusha
aas
in
xchg
dec
repz
jecxz
sub
imul
inc
cs
pop
dec
mov
aad
push
inc
xor
aaa
dec
mov
jno
mov
scas
cmpb
lret
sarb
icebp
dec
xor
call
js
fnstenv
push
pop
js
jns
xor
int3
sub
sbb
in
fstps
add
and
cmp
idivl
mov
cmp
dec
xchg
lods
sbb
or
pop
xlat
and
xchg
lahf
add
imull
loopne
inc
movsl
lds
dec
lret
in
sub
and
pop
imul
cmc
pop
mov
dec
testl
push
xor
pop
push
pushf
andb
ss
sub
cmc
jle
cmp
fdivrs
dec
outsl
push
inc
mov
in
imul
xor
sub
adc
sbb
jl
in
mov
fisubrl
ss
movsl
adc
sub
fldln2
daa
jnp
subb
lock
and
pop
mov
fcmovb
cmpb
ret
in
jp
sub
out
cs
dec
lods
scas
jmp
rcrb
xor
mov
adc
gs
cmpsl
fstpl
shll
pop
sbbb
dec
jno
leave
dec
cmc
jnp
imul
xor
mov
dec
rep
fnstcw
enter
lea
nop
int3
mov
js
les
dec
pop
push
loope
ljmp
rol
dec
push
js
lds
push
cld
into
pop
jns
sbb
dec
add
cwtl
aad
iret
lahf
add
adc
out
xchg
mov
pop
xchg
dec
xor
cmp
loop
jecxz
xchg
sbbb
or
rclb
fidivs
inc
stos
push
cmp
mov
in
in
data16
pop
mov
cli
fadds
loop
jp
cmp
into
jl
adc
test
mov
sbb
sbb
stos
inc
jns
lret
jae
xchg
lds
cmp
pop
mov
lcall
jnp
inc
dec
lods
mov
aad
jnp
test
out
xor
pop
test
push
xor
rcll
add
test
cmpsl
ljmp
subb
and
xchg
pop
popa
mov
rep
mov
sahf
xlat
mov
aaa
mov
xchg
lea
fisubl
mov
mull
xor
sub
jbe
jecxz
mov
dec
push
mov
test
mov
push
push
cmp
out
lock
jnp
xchg
inc
out
outsl
loop
mov
sub
push
pop
imul
cs
cltd
add
test
sub
sub
lock
shrl
xor
lahf
pop
dec
js
into
mov
bnd
cmpb
push
pop
or
inc
cmp
js
mov
mov
leave
mov
cltd
mov
daa
inc
mov
and
frstor
cmpsl
cmc
or
mov
jb
call
stc
add
aam
pop
aad
pop
xchg
cmpsb
test
jae
mov
mov
lahf
pop
pop
lods
xchg
pop
fdivrp
sub
rorb
mov
dec
inc
xchg
ljmp
mov
scas
push
jle
inc
add
fs
adc
fwait
push
push
sbb
cmpsb
and
xchg
stc
jmp
icebp
xchg
adc
shlb
punpckhwd
shlb
push
es
jg
inc
fisttps
push
fldt
nop
cmpsb
clc
popf
or
jnp
ja
movsb
cmp
jp
jecxz
out
loope
outsb
adc
mov
xchg
addr16
mov
orl
orl
mov
ja
test
ljmp
cmp
in
dec
pop
xchg
sub
push
ss
push
inc
push
lcall
push
add
in
fcom
out
shll
jb
mov
dec
loopne
in
cmpsb
and
dec
fisubrs
jecxz
es
xchg
fwait
xchg
rol
loope
repz
add
push
xchg
mov
cs
cltd
fdivp
xchg
cmc
loopne
and
sbb
jecxz
mov
leave
adc
ljmp
pushl
cltd
aaa
cmp
add
aam
mov
rcr
dec
inc
addr16
fucomi
sub
push
push
shlb
imull
push
daa
jg
cli
sarl
clc
cmc
cmp
rolb
xor
rorl
xchg
mov
sub
loopne
add
popf
mov
sub
jns
rcrb
xor
aad
xor
push
fidivl
add
mov
inc
pop
into
int3
mov
aaa
sbb
inc
xchg
lods
inc
adc
mov
or
add
imul
scas
or
std
les
stos
push
sti
hlt
mov
xchg
lods
cs
add
adc
or
cli
call
in
rorw
scas
dec
cmpsl
inc
mov
mov
sbb
test
sbb
and
push
pop
push
mov
sub
sub
inc
add
popf
mov
fimull
fwait
loopne
dec
imul
jae
mov
inc
inc
aaa
cmp
lea
subl
cmc
jg
sub
xchg
xor
add
outsb
faddl
sub
mov
cmpb
jae
inc
adc
aas
pushf
cli
pop
mov
mov
jecxz
loop
rcr
sti
xchg
jg
or
rcl
icebp
xor
dec
ljmp
sbb
rorl
pop
std
into
loope
jo
loope
orb
popf
add
movsb
rorl
icebp
daa
xchg
outsb
xor
pop
jno
test
ds
insl
sar
and
repz
out
mov
int3
cmp
aas
lret
or
sahf
xor
repnz
cmp
call
cli
sbb
or
mov
push
or
jae
aam
out
mov
out
aad
fdivrl
ret
jno
sbb
fcompl
cs
adc
daa
sub
push
pop
shll
cld
pusha
cld
dec
sub
xor
movsl
adc
mov
jg
cltd
movsl
outsl
mov
movsl
or
mov
mov
xchg
mov
stos
xchg
adc
adc
pop
in
sbb
std
dec
xchg
sbb
fsubs
mov
jo
sbb
in
into
xchg
dec
dec
adc
inc
cmp
test
outsl
mov
aaa
jno
push
xchg
mov
inc
shrb
push
ret
and
push
or
xor
aam
jmp
adc
adc
aas
xchg
lods
push
stos
out
in
xchg
gs
lahf
pop
add
lods
mov
cltd
sbb
in
ss
out
mov
inc
cmp
aam
push
sbb
mov
ja
shrl
orl
sbb
jns
cmpsl
testl
or
test
dec
mov
mov
xor
inc
xor
movsl
insl
int
movsb
aad
or
pushf
insb
add
xchg
in
inc
das
stos
aam
inc
stos
shlb
inc
repnz
filds
push
push
xchg
ds
lcall
add
cmc
cwtl
mov
lcall
dec
add
sarl
ret
jg
mov
test
sbb
xchg
mov
lods
adc
jle
je
pop
mov
lcall
mov
addr16
imul
test
jle
sbb
outsb
dec
lods
nop
dec
xlat
cs
pop
xor
dec
push
pop
and
mov
cli
cmp
xchg
xchg
cmpsl
push
rorl
mov
pop
pop
adc
pushf
insl
pop
notl
adc
push
add
xchg
fwait
mov
mov
xchg
inc
dec
dec
mov
jmp
lret
xchg
sti
sub
push
loope
pop
in
enter
sbb
hlt
xchg
sahf
push
fdivl
gs
aam
sub
xchg
push
push
inc
push
mov
mov
aaa
icebp
popa
xor
icebp
aas
out
jnp
aas
daa
pop
inc
sbbl
xchg
mov
sub
push
rcl
push
push
ret
es
push
or
and
inc
jne
push
inc
jbe
aas
mov
xor
sub
popa
jns
xchg
dec
inc
adc
ret
jmp
pop
mov
sbb
fmuls
arpl
jae
movsb
rorb
cmp
push
add
mov
and
es
pop
sti
pop
call
add
icebp
cwtl
mov
mov
jb
sub
aad
repnz
sti
pop
cmp
bound
sti
cli
rorl
or
outsl
test
aaa
mov
lock
add
sbb
subb
repz
mov
clc
mov
add
fdivrs
pop
mov
push
and
xor
lahf
rcl
in
cli
adc
stos
inc
sahf
iret
mov
adc
and
insb
fdivl
in
xor
add
pop
pop
adc
cmp
mov
sub
aas
and
xor
ret
pop
testb
cltd
sbb
mov
rorb
mov
mov
sbb
sbb
pop
imul
shll
push
sbb
jge
out
adc
loope
ss
cmovle
cli
pop
mov
test
cltd
xchg
jp
in
sub
push
pop
or
and
xor
mov
fbld
lret
imul
mov
into
inc
sbb
pop
push
in
adc
pop
bound
inc
adc
mov
sbb
or
ss
les
or
cld
cmp
leave
mov
mov
test
xchg
pop
mov
xor
xchg
das
insl
mov
jmp
push
lea
fmul
adc
idivl
int
xor
jne
push
jns
icebp
or
jle
cmp
mov
xor
sbb
dec
xor
popf
insl
int
movsl
outsl
add
out
in
cmp
add
mov
inc
loopne
fidivl
arpl
adc
mov
push
cld
push
xor
sub
out
ret
and
scas
mov
xor
frstor
push
in
mov
jecxz
rolb
mov
ds
and
out
jo
push
sub
lds
fdivl
test
outsl
bound
adcl
lods
xchg
lds
cwtl
clc
repz
jle
dec
out
push
xor
xchg
pushf
icebp
test
inc
fs
nop
mov
lds
addr16
movsl
test
add
jbe
cwtl
cmp
add
and
nop
sbb
push
lods
add
testl
inc
mov
sub
add
or
cmpl
in
dec
movups
int3
xor
bound
ds
mov
lods
dec
in
adc
xchg
out
shlb
and
pusha
movsl
inc
mov
aam
push
fcoml
scas
ja
xor
push
ljmp
fistps
xchg
push
xchg
fwait
daa
cmpl
add
fwait
push
push
int3
mov
and
xchg
in
out
cmpsb
xchg
inc
hlt
ret
fistl
mov
into
mov
add
xchg
fiadds
cli
sbb
and
add
repz
sbb
pop
mov
daa
jge
ret
jo
aad
and
fs
daa
sbb
sbb
xor
push
mov
sbb
push
pop
cmp
in
cmpsl
mov
lret
dec
bound
dec
ljmp
ret
xchg
out
int3
aaa
xchg
pop
inc
cmp
mov
jnp
nop
mov
push
arpl
aam
imul
scas
mov
jne
aas
test
mov
cmp
shll
sahf
xchg
push
or
xchg
scas
out
xchg
sub
in
test
sti
outsb
sub
idivl
and
mov
or
mov
ss
out
outsl
pop
loope
std
inc
lods
bound
es
mov
push
mov
stos
andb
add
pop
or
mov
out
sbb
ret
push
adc
cld
enter
jmp
inc
push
add
xchg
mov
dec
dec
mov
lret
pop
in
xchg
and
lcall
sub
mov
cmpsl
setbe
xor
scas
gs
adc
popf
idivl
adc
cwtl
lods
leave
xchg
cmp
cltd
pop
xor
pop
adc
in
xchg
repz
push
inc
filds
loop
stos
and
xor
and
mov
shlb
inc
jns
jnp
call
mov
idivb
push
add
loopne
insb
sbb
cmp
insb
test
outsb
add
sub
repnz
cmp
mov
outsl
das
outsb
in
fwait
aas
jns
rolb
push
daa
xor
ficoms
test
lret
in
cld
push
dec
xor
mov
jl
sub
data16
movsl
mov
fidivs
sbbl
repz
out
enter
mov
add
dec
loope
adc
div
mov
fwait
cmp
cltd
or
mov
sahf
test
mov
insb
lds
lret
out
pop
add
pop
pop
add
int3
add
gs
or
cmp
jg
xor
xchg
stc
inc
lcall
jnp
mov
popa
inc
dec
jmp
test
or
in
add
addb
push
test
adc
or
mov
mov
daa
loop
adc
sub
dec
fucomi
hlt
inc
stos
out
cli
lods
mov
add
dec
ja
mov
sahf
cmp
xor
ret
shl
adcl
ss
or
lock
jge
xlat
roll
mov
and
jb
mov
cmp
mov
cld
inc
inc
fbld
mov
push
sbbl
out
and
and
jae
push
adc
std
and
out
jns
and
loopne
or
dec
xchg
xlat
push
out
cmp
jmp
mov
mov
cld
jbe
scas
add
or
popa
push
out
in
lahf
ret
mov
fldt
dec
cmp
pop
ds
push
ljmp
xchg
sbb
arpl
cltd
or
xor
movsl
lret
jmp
cmp
and
imul
jno
shrl
or
jno
scas
xor
jne
inc
cwtl
mov
lret
mov
pop
xor
xchg
lahf
test
sbb
dec
mov
rcl
sbb
jmp
fwait
sbb
xor
outsb
pop
adc
orb
stos
psrad
loopne
mov
push
adc
pop
cmp
pop
or
add
test
or
jb
add
push
dec
adc
mov
mov
aam
int
in
push
xor
bnd
pop
push
jecxz
sarl
mov
mov
mov
adc
adc
xlat
loop
rcll
divb
and
jge
loopne
mov
pusha
dec
and
mov
popa
int3
testb
pop
sbbb
jmp
mov
in
cld
sarl
mov
jge
sarl
shrb
inc
inc
aas
jb
cmpsl
hlt
xor
lea
insb
xlat
or
inc
das
jge
insb
cmp
jg
lods
insl
test
arpl
push
inc
fsubrs
rorl
aas
popf
and
cli
pop
dec
into
mov
or
and
jbe
inc
inc
inc
loopne
das
jl
pop
mov
jle
in
push
push
popa
jo
pusha
add
adc
popa
scas
adc
adc
sub
mov
mov
dec
rorl
mov
into
das
insl
les
xor
inc
dec
add
push
fs
pop
dec
jp
pop
push
movsl
sub
movsb
in
lea
inc
push
inc
xor
push
lock
dec
stc
xchg
andb
fcompl
cmpl
ret
ret
das
divb
push
aam
out
ljmp
jb
adc
in
std
leave
aas
loope
addr16
cmpsl
push
orb
dec
in
mov
mov
mov
cld
stos
inc
sub
ljmp
add
sub
popa
int
push
movsb
sbb
pop
and
repz
and
ja
mov
add
imul
mov
cmpsl
int
push
movsb
lock
adc
or
cmp
pop
in
les
pop
mov
in
xchg
divb
pop
repnz
das
scas
rolb
sti
xorl
jmp
xchg
movsl
filds
xchg
mov
push
mov
lods
jne
lods
jge
in
mov
gs
out
lods
push
xchg
std
sub
pop
and
push
and
mov
lret
lods
ds
lahf
push
in
and
rcll
jo
addr16
pop
bound
test
in
call
mov
sub
inc
gs
ds
or
xchg
xor
pop
push
mov
movsbl
movsb
sbb
repnz
fwait
in
mov
shl
stos
ja
mov
sub
mov
pop
push
movsb
add
push
stos
out
repnz
fcmovnu
mov
loope
into
mov
push
jmp
gs
mov
pop
mov
xorb
je
push
push
lea
daa
add
mov
cltd
sti
pusha
xchg
loop
mov
xor
push
dec
lahf
mov
push
mov
fists
xlat
jmp
jp
pop
push
stos
je
jp
mov
roll
outsl
scas
hlt
aaa
jge
inc
xchg
push
iret
call
mov
sub
sub
jne
xchg
fmull
test
cmp
dec
roll
cmp
inc
insb
leave
push
out
and
clc
cmp
jecxz
or
mov
inc
mov
push
pop
repz
xchg
cmp
es
mov
daa
pop
shl
cmc
mov
jo
push
xchg
lods
lds
inc
aam
mov
popf
mov
xchg
jne
add
mov
sbb
mov
cli
jge
push
mov
xchg
clc
repnz
int
xor
jl
dec
outsb
fsub
dec
inc
cmpsl
fcmovbe
lahf
lods
stos
push
pop
inc
inc
imul
mov
xor
mov
xchg
lcall
pop
pop
jg
xor
out
orb
jmp
in
mov
in
adc
loopne
pslld
jbe
popa
cmp
sub
dec
sbb
add
adc
stos
arpl
clc
dec
cmp
jnp
test
ret
mov
add
adc
cmp
cmp
insb
lret
sub
cs
xchg
sbb
and
pop
jge
sub
cmp
inc
jge
sbb
push
aam
push
mov
ret
gs
mov
fmuls
mov
test
cmp
out
and
mov
imul
gs
mov
jb
mov
fidivs
push
jmpw
inc
mov
jns
dec
mov
aaa
ljmp
sub
adc
aaa
leave
cmp
fisubrs
and
push
enter
or
shlb
sub
roll
inc
dec
rcrl
cltd
das
pop
adc
les
push
rorb
cs
cmpsl
daa
mov
call
jg
jecxz
loop
xor
pop
xchg
mov
fdivp
lret
shl
xchg
mov
fldl
jcxz
arpl
and
jmp
shrl
or
outsl
inc
and
jo
sub
add
cmp
test
cmpsl
add
nop
pop
rcl
jo
inc
movsl
int
cwtl
int3
lahf
fwait
daa
add
ret
xchg
mov
fwait
xchg
inc
jmp
lcall
into
iret
call
stc
push
arpl
dec
mov
rorl
cltd
mov
jg
jbe
vmwrite
or
scas
std
lds
sub
stos
or
ret
mov
xor
std
pushl
loopne
test
repz
add
mov
out
lahf
adcb
add
xor
dec
repz
and
out
aaa
int
dec
push
cmpsl
es
mov
fs
mov
int3
push
les
stos
rorb
cld
fcomp
outsb
xor
es
pop
mov
push
aam
push
movsl
cmp
add
inc
jmp
loope
sub
fmuls
xor
add
jl
push
pop
test
sbb
inc
dec
test
ja
or
je
shlb
mov
mov
mov
mov
and
cld
aaa
popf
sub
push
pop
cltd
jle
cld
xchg
cmc
sti
mov
inc
adc
addr16
ss
cmp
repz
stos
mov
lds
push
jmp
mov
adc
sahf
shl
and
mov
popa
fwait
jmp
dec
mov
sub
jp
ja,pn
xor
aad
adc
pop
mov
mov
inc
into
outsb
scas
or
inc
sub
pop
inc
add
jl
cmp
cs
mov
fsub
mov
push
push
fsub
lods
lcall
mov
push
dec
popf
cld
cmpb
adc
in
push
push
sbb
daa
add
movntq
psllq
mov
pop
je
dec
andb
scas
mov
add
movsl
pop
adc
lret
push
xor
jbe
rolb
add
add
and
js
test
inc
arpl
jb
pop
inc
stos
add
outsb
fucomip
mov
mov
add
pop
sub
shlb
mov
sub
in
jnp
jnp
shr
outsl
inc
cs
jns
xor
cs
inc
push
fiaddl
mov
fistpll
outsb
xchg
test
inc
lcall
rdmsr
sbb
mov
test
mov
mov
pop
mov
dec
cmp
aaa
fbld
jb
cmc
adc
test
fstpl
inc
cmp
mov
mov
cmp
sbb
cld
dec
dec
xchg
xchg
cld
and
sub
int3
cmp
xor
xchg
sbb
push
lret
addr16
inc
cmpsb
mov
cmp
lcall
jp
sbb
inc
mov
cmp
adc
out
mov
mov
icebp
lods
jge
fistl
inc
push
xor
pop
imul
lods
dec
dec
mov
pop
hlt
rorl
add
leave
mov
and
adc
push
add
pop
dec
adc
inc
insl
mov
ret
fcomp
scas
push
or
sub
jl
shrb
cmpb
jp
imul
pop
popf
sbb
mov
test
fists
aas
and
and
repz
cwtl
dec
jnp
aaa
lea
and
xchg
push
pushf
adc
jge
inc
mov
sbb
loop
mov
add
pop
filds
stc
ficomps
inc
les
pop
adc
ljmp
ja
pop
jb
push
lds
stos
cld
ljmp
mov
push
fsubr
mov
outsl
sbb
stc
out
push
pop
sub
shr
pop
cmc
or
or
idiv
mov
xchg
popf
push
cmp
push
popf
adc
pusha
repnz
pop
jno
push
icebp
and
dec
adc
fists
dec
cmpb
cmp
dec
sbb
int
loope
jmp
lret
mov
and
sbbb
es
and
push
mov
ds
scas
clc
add
ds
popf
ja
jae
inc
push
mov
bswap
lds
sub
xor
lea
sbb
mov
negb
repnz
into
mov
daa
push
dec
cmpsb
inc
cmp
push
fidivrs
cmp
lcall
sbb
jno
mov
push
js
repz
mov
xchg
fcomp
or
xchg
in
sahf
push
add
and
pop
and
sub
arpl
push
mov
stos
cmp
loop
inc
lahf
push
lret
cmp
pusha
xchg
clc
daa
imul
out
inc
cmp
xchg
pop
sti
mov
add
orb
dec
mov
xchg
int3
cs
inc
sbb
cmp
cltd
test
or
rorl
mov
inc
ss
sub
cmp
outsl
fsubs
pop
adc
out
push
pop
mov
jge
dec
sub
shlb
out
jge
add
popa
jb
mov
lods
cmc
repz
lea
inc
mov
inc
cmp
and
sti
adc
out
mov
cmp
fstpl
jno
stc
add
mov
or
ja
add
pusha
mov
in
ret
jae
ret
and
test
cmpsb
mov
push
je
stos
push
roll
rorb
lcall
dec
leave
aas
dec
cltd
and
jnp
push
or
pusha
call
push
xchg
sbb
pop
push
icebp
pop
mov
mov
jae
test
shlb
sbb
mov
jle
sbb
ficoml
ljmp
shrb
aaa
stc
jle
sbbl
js
sub
test
hlt
lcall
test
and
inc
stos
xchg
ret
jo
push
rol
test
loopne
cli
decb
dec
test
ja
insl
mov
cmp
adc
dec
pop
push
sar
cmp
mov
jb
pop
dec
in
jecxz
or
lcall
cmp
push
outsl
cli
xlat
dec
test
pmaxub
js
xor
scas
negb
xor
popf
pop
repnz
dec
dec
xchg
mov
bound
pop
jo
push
test
ds
loop
jecxz
fs
nop
xchg
xor
jnp
loope
sub
pop
mov
xor
dec
inc
cli
mov
cmpsl
pop
mov
push
adc
jo
fwait
sbb
arpl
sub
ss
lret
in
popa
js
stc
ljmp
lods
sarb
pusha
hlt
lret
push
cmp
dec
xbegin
les
out
push
ja
dec
fnstcw
cmp
cmpl
cltd
in
lock
in
inc
sub
pop
adc
mov
mov
jns
pushf
incb
add
outsb
out
mov
push
mov
or
out
xchg
iret
add
fwait
out
pop
sub
iret
iret
mov
jle
xor
jle
fwait
cmp
pop
mov
in
dec
cwtl
and
jns
push
insb
clc
push
mov
cmp
or
jnp
ss
aaa
add
pop
add
sub
pusha
andb
or
cmp
push
cmpsl
mov
scas
ss
les
jecxz
cld
mov
xor
in
mov
mov
fsubs
cli
scas
fyl2x
mov
lock
call
jne
inc
pop
pop
xchg
sub
jae
push
or
lds
lahf
in
sub
loopne
push
jo
out
test
loope
sub
dec
in
jecxz
jecxz
cmp
push
or
ljmp
lods
mov
pop
repnz
xchg
or
add
in
rorb
mov
ret
xchg
outsb
mov
mov
cmpsb
mov
les
gs
add
cmp
jne
inc
push
leave
mov
je
and
push
mov
and
xchg
xchg
outsl
addps
mov
std
ljmp
push
lods
push
add
mov
push
push
test
mov
fdivl
sub
adc
and
mov
inc
inc
push
aas
pushf
add
enter
or
or
jecxz
mov
pop
push
out
mov
xor
inc
push
aam
cmc
mov
sbb
scas
add
mov
mov
mov
add
mov
pop
in
inc
movsb
or
inc
and
mov
in
repnz
cmp
add
jo
and
jecxz
mov
test
jnp
cmpsl
popf
rcrl
xchg
and
or
jbe
je
sarb
push
cmpsb
clc
mov
lret
insl
mov
add
dec
jp
addb
insl
cmp
rorl
mov
mov
iret
cmp
dec
loopne
cld
shll
jns
xor
sub
cmp
jns
dec
scas
cmc
jge
aad
sarl
xlat
lods
out
stc
jecxz
ror
leave
jb
loop
mov
mov
jge
stc
ds
je
stos
jl
add
arpl
cmpsl
and
fnstcw
mov
pop
adc
repz
cmp
xor
xchg
cltd
jge
inc
jg
decl
adc
imul
mov
out
xchg
loopne
shl
or
out
jmp
pop
mov
psubusb
movzwl
xchg
mov
ficomps
xchg
rcl
mov
pop
je
or
xchg
jecxz
cmp
fchs
cmp
push
icebp
outsb
iret
jb
fldcw
sub
aad
nop
loope
jb
xor
inc
pop
stc
daa
pusha
inc
inc
insl
sub
call
push
pushf
fstp
mov
pop
mull
mov
inc
push
inc
insl
and
test
sahf
cld
xor
out
test
mov
mov
sub
psubb
push
fwait
mov
adc
sti
arpl
pop
sub
inc
test
cmpsb
ss
stos
xorb
push
sub
hlt
fistpll
add
imul
imul
add
push
and
mov
cmp
bound
aam
sbbl
inc
jno
int
test
mov
inc
jp
mov
mov
stos
add
cmp
mov
jnp
hlt
shrb
dec
es
sti
cmp
inc
pushf
insb
push
xchg
mov
cmc
daa
adc
dec
sbb
pop
inc
hlt
icebp
inc
inc
jnp
cmpl
xchg
or
jns
mov
jmp
out
loope
lods
cmp
lods
inc
test
push
das
dec
hlt
lock
call
fwait
stc
jb
fimuls
sbb
sahf
pop
mov
movsl
add
out
sbb
xor
rorl
outsb
mov
xchg
addr16
sbb
or
mov
mov
xor
in
fcoms
loop
jno
addr16
mov
lcall
std
cwtl
sub
inc
ret
in
mov
loopne
inc
mov
clc
mov
xchg
scas
loope
cld
xchg
es
enter
xchg
repz
or
cmp
jns
sub
jb
gs
and
push
sub
sbb
in
bound
je
jne
mov
cmpsb
lods
mov
js
outsb
sbb
dec
jecxz
std
stos
test
mov
je
jecxz
mov
xchg
jae
and
and
pusha
cwtl
sbb
jecxz
shl
icebp
xchg
daa
loopne
rcr
or
fcmovbe
test
add
lcall
pop
out
jge
fstp
ret
dec
jb
cs
xchg
mov
or
adc
arpl
out
nop
xchg
jg
fs
inc
es
jnp
inc
outsb
jp
imul
mov
stos
int
test
sbb
out
dec
jb
ret
push
in
adc
xor
mov
xchg
mov
jmp
cld
or
pop
repz
leave
cmp
sub
ja
cmp
aam
lret
aas
push
gs
andl
sti
stc
mov
jecxz
jbe
xchg
mov
dec
inc
ljmp
add
out
orb
xchg
js
mov
cmp
jae
aas
mov
dec
dec
sbbl
loopne
push
sub
and
iret
imul
ja
sub
mov
hlt
inc
filds
movsb
dec
ja
sub
add
xor
fwait
mov
mov
inc
cs
in
pop
xor
push
test
jp
sub
mov
mov
fdiv
mov
and
out
or
sub
sbb
mov
push
stos
enter
hlt
add
and
adc
popf
push
es
jmp
mov
jno
les
dec
or
lea
mov
movsb
mov
fildl
rcr
adc
inc
adc
jp
popa
push
out
lds
loope
dec
cld
stos
or
js
inc
mov
dec
pushf
push
cmp
pusha
cmc
ja
push
push
mov
sbb
xchg
and
dec
aaa
cmp
imul
call
icebp
cld
lret
movsb
lds
adc
push
ljmp
and
lods
xchg
dec
mov
push
jo
frstor
std
mov
test
push
aad
popf
js
jmp
fs
cmp
insl
jecxz
adc
in
js
cmp
xchg
cmp
decl
pop
mov
sbb
out
add
mov
divl
mov
push
or
inc
aam
push
mov
stc
jecxz
pushf
push
js
pop
push
test
jb
add
mov
or
sub
scas
xor
in
inc
js
outsb
mov
push
bound
fstps
lock
pop
lea
and
xchg
je
push
jnp
cmc
out
sysret
xchg
or
push
mov
out
out
shll
mov
pop
xor
stc
popa
xorb
xor
cmp
out
push
cs
or
sbb
aaa
std
mov
or
mov
mov
cmp
add
pop
push
mov
sbbb
dec
rcrb
and
scas
push
nop
cmp
dec
fcmovnb
ret
mov
jnp
push
add
xor
lret
jle
cmp
mov
bound
cmp
sbb
std
xor
imul
stc
mov
push
mov
push
mov
lds
test
mov
aam
add
sti
icebp
aam
xor
clc
in
add
jg
test
lock
jo
inc
sub
jae
stc
nop
sbb
or
leave
in
sub
ss
es
pusha
cmp
lahf
dec
iret
ja
xchg
popf
inc
or
add
xchg
pop
push
pop
shll
loop
mov
stos
gs
sbb
out
sub
jae
test
ss
jbe
adc
pop
test
add
shll
sti
dec
jg
sbb
mov
lds
inc
loope
imul
jp
jmp
jg
mov
adc
stos
test
orl
stc
gs
adc
je
aaa
mov
mov
mov
push
icebp
mov
cmpb
push
sbb
cwtl
daa
dec
lahf
test
ljmp
xor
in
js
imul
outsb
mov
mov
fildll
dec
xchg
call
xor
sbb
push
rorb
js
cwtl
insl
sub
flds
aam
sbb
testl
mov
push
je
or
imul
and
clc
mov
test
or
jl
fisttpl
jg
sub
fbld
sbb
pop
add
inc
mov
jmp
ljmp
jbe
frstor
aad
mov
push
cmp
mov
aas
ficomps
cwtl
cld
jnp
and
and
pop
sub
mov
scas
xchg
enter
clc
lds
inc
push
dec
and
sub
xor
cmpsb
xor
sti
aas
js
inc
aaa
stos
push
repnz
cli
push
and
or
iret
loopne
repnz
push
lods
fadds
arpl
push
sub
cmp
push
inc
xchg
cmpl
stc
popf
popf
push
dec
push
dec
sub
test
add
decl
cs
mov
adc
xor
cltd
cmp
add
aas
sarb
xlat
sbb
inc
divb
push
jo
insl
jnp
scas
xchg
and
clc
push
xchg
sub
sbb
pop
cmp
cld
aad
sub
add
jecxz
call
inc
fs
lret
dec
in
rol
pop
aad
jle
mov
mov
xor
fnstenv
cmpsb
adc
pop
addb
clc
inc
and
cmp
movsl
add
std
inc
xor
pop
add
std
cwtl
fs
pop
inc
mov
test
push
sarl
ss
add
popa
dec
lret
fdivs
add
orl
push
mov
add
pop
cmp
js
inc
dec
loopne
and
test
mov
std
push
mov
adc
or
pop
mov
ret
cmp
data16
inc
jmp
jmp
scas
mov
push
sbb
imul
xor
inc
icebp
xchg
sbb
in
add
cmpsb
test
pop
sbb
lods
sbb
loope
aam
mov
jo
sub
daa
idiv
jge
xchg
mov
pop
mov
shrl
shll
subl
fisubl
cmp
fcmove
mov
shll
xor
fsubrs
mov
fsubl
mov
leave
sub
jle
xorl
xor
xchg
adc
sahf
xchg
mov
and
adc
in
lcall
imul
stos
mov
rorb
mov
mov
mov
or
jo
std
dec
scas
mov
lret
ja
rcrl
fdivs
xchg
ret
movsl
mov
pop
cmp
adc
and
or
mov
outsl
test
add
cmp
test
fstl
mov
cmp
js
add
jae
adc
loope
addr16
cmp
sti
dec
adc
icebp
test
mov
mov
inc
shlb
cli
test
inc
in
in
mov
jns
ss
xchg
sub
call
mov
cmp
mov
daa
daa
mov
add
daa
pop
arpl
ljmp
mov
cli
xchg
add
pushf
fcoml
xchg
pop
fcoms
lea
add
sbb
add
adc
orl
xor
push
imul
stos
movsl
ss
lret
aaa
mov
mov
mov
xor
stos
jo
mov
ljmp
mov
jbe
das
int
mov
setl
leave
outsl
mov
stos
jge
idivb
mov
sub
orb
mov
cmp
pop
cld
sbb
cmp
data16
xor
pop
inc
mov
adc
xor
xlat
stos
hlt
in
mov
loope
xchg
push
pop
insb
mov
ja
sub
or
adc
outsb
xchg
frstor
jbe
jp
in
roll
stos
push
mov
in
jp
cmpsl
xrelease
sub
jle
addl
movsb
mov
rclb
gs
in
lret
or
pushf
sbb
mov
addb
scas
xor
cmpsb
pushf
test
push
repnz
lea
adc
xor
stos
push
pop
or
cmpsb
imul
push
lret
mov
shrb
lret
sbb
sbb
mov
data16
mov
xchg
sarb
addr16
mov
cmpsl
xor
jecxz
iret
mov
mov
xchg
mov
push
das
insb
pushf
cmc
inc
push
mov
sub
enter
sahf
mov
stos
fcoml
cmp
pusha
sub
ret
test
fidivs
scas
cmp
repz
sub
lret
clc
insb
into
mov
xchg
mov
sbb
adc
loopne
shrb
pusha
orl
mov
jg
cmp
push
xchg
aaa
xor
cli
fmuls
sub
incl
fists
mov
inc
pop
or
or
or
lock
push
and
ja
push
sub
call
scas
pusha
loopne
dec
ss
cmp
inc
pop
pop
lock
stos
jne
in
inc
xlat
sbb
sub
mov
loope
insb
aas
rcrb
jp
mov
push
dec
or
testb
mov
and
pushf
mov
mov
push
ljmp
cs
jg
push
outsl
push
jp
xchg
jmp
outsl
and
push
dec
idivb
dec
jbe
adc
pop
aam
mov
cmc
incb
bnd
addr16
divb
adc
cmp
xchg
and
or
call
arpl
lret
push
jb
sub
aad
mov
loopne
pop
jne
lret
gs
stos
mov
xlat
push
roll
repz
scas
mov
xchg
or
arpl
repnz
xor
data16
xchg
pop
lcall
bound
stc
jp
and
sbb
mov
or
xor
fsts
inc
lahf
lcall
out
xchg
mov
cmp
cmc
mov
cltd
movsl
out
add
outsl
cmp
movsb
sub
inc
mov
sbb
js
cmpsb
dec
xchg
popf
fisttpll
jbe
scas
repz
test
rcrl
cltd
mov
jno
sbb
pop
pop
jl
lods
cltd
test
mul
lock
ljmp
mov
in
mov
pop
popa
sbb
adcb
test
mov
xor
pop
push
out
aam
inc
ljmp
or
movsb
test
test
in
sbb
push
movsl
call
lret
rol
pop
leave
mov
or
inc
nop
mov
xor
mov
pop
sbb
jo
fmull
sti
cld
data16
das
sti
std
outsl
iret
dec
cltd
xor
jmp
or
xor
mov
xchg
push
pop
jmp
daa
lret
rcll
iret
imul
or
test
mov
lods
das
mov
push
outsb
mov
sti
mov
sarb
sbb
stos
mov
push
insl
and
data16
push
and
subl
jbe
inc
cld
jle
jl
push
paddusw
mov
scas
mov
and
sbb
add
inc
xor
and
mov
fsubs
daa
inc
cld
push
out
dec
sub
add
xor
xor
mov
iret
scas
mov
xchg
push
dec
and
cmpsl
int
inc
loop
dec
movsb
sbb
cwtl
movl
jmp
jo
leave
pop
xor
push
push
shll
xchg
out
sub
lock
push
in
pop
jge
jg
dec
or
mov
roll
sbb
ds
mov
leave
cmp
movsl
sub
es
pop
stc
test
outsb
jo
or
test
ja
xchg
shlb
jnp
pop
lcall
outsl
xor
sbb
cmp
inc
sub
mov
mov
sbb
mov
mov
or
jmp
aad
xor
popa
repz
and
and
decl
dec
insl
stc
push
fidivrs
add
adc
sub
lret
jae
sahf
sbb
push
add
pop
cli
add
push
add
loop
mov
mov
lock
jecxz
cmpsb
out
push
rclb
or
mov
lods
sti
into
aas
push
xchg
dec
cmp
sbb
sbb
aad
rcr
fstpl
adc
mov
push
adc
mov
pop
lods
imul
test
cli
dec
ret
data16
xor
fwait
adc
mov
stc
ret
mov
sbb
mov
or
lea
and
popa
shlb
push
lret
sbb
pop
push
or
sahf
xor
sbb
ret
xor
mov
fistpl
enter
lods
or
loope
roll
xor
outsb
jle
test
xchg
mov
test
stos
cmp
jno
adc
mov
fmul
jo
inc
or
add
dec
push
inc
imul
out
aad
adc
enter
push
mov
orl
jne
xor
loope
inc
jbe
or
jo
pop
mov
dec
in
sub
call
jle
mov
pop
je
insl
jg
and
jmp
mov
cld
rol
lret
xor
mov
dec
jns
xor
sub
test
in
stc
lds
lds
pop
inc
notb
push
jbe
ret
movsb
repnz
sbb
in
fxch
in
les
cmpl
in
movsb
add
pushf
add
bound
push
cltd
clc
hlt
mov
adc
sahf
das
int
ficomps
cmpsb
rorl
mov
mov
cmp
xchg
jecxz
or
jl
loope
mov
mov
mov
push
popf
mov
int3
mov
stc
mov
std
cmc
fimull
fs
insb
test
add
into
popa
xor
cli
cmp
xchg
cwtl
mov
add
add
test
pushf
fwait
mov
push
pusha
cmp
cmc
mov
in
lock
mov
loope
out
pusha
mov
insb
sti
repz
push
jns
pop
cmp
aad
push
push
push
add
les
xor
pop
test
sarb
ljmp
xchg
inc
jle
mov
pop
je
xchg
xchg
cmp
and
andb
jge
jg
testl
arpl
push
cmp
inc
mov
sub
ss
sahf
test
sahf
push
push
out
mov
jge
in
mov
xlat
pop
pop
and
sbb
je
cld
das
mov
sti
fmulp
add
cmp
mov
push
insb
mov
pop
push
pop
and
cltd
xor
es
sbb
jne
mov
mov
jp
sub
sti
lods
adc
vmread
out
cmp
lds
cmpsb
out
subb
rcrl
js
pop
adc
aad
push
xor
and
fmul
faddl
mov
aad
sbb
andl
push
les
pop
and
dec
mov
adc
lods
cli
dec
sbb
enter
mov
cmp
push
lods
adc
mov
mov
int
mov
mov
dec
mul
xchg
mov
out
repnz
std
and
dec
sub
aad
xor
mov
mov
clc
add
mov
mov
xor
sub
lret
mov
sbb
loop
pop
add
insl
cmp
notb
arpl
rorb
outsb
sbb
mov
notb
rolb
stos
lret
xchg
pop
ss
push
mov
aas
ffree
inc
jl
ret
dec
cmpsb
out
stc
test
dec
je
mov
rcr
push
xchg
in
sarl
push
sub
cltd
in
mov
movsb
test
pop
lods
daa
or
fs
in
sahf
cmp
in
fisubrs
out
addr16
sub
or
xorb
mov
pop
fisttpl
shrb
add
inc
ja
xchg
dec
push
daa
mov
lret
and
push
xchg
sub
aam
adc
push
xchg
cli
pop
dec
out
cmp
scas
push
push
adc
jmp
testl
lea
mov
inc
pop
out
adcb
dec
sub
xchg
xchg
mov
push
xor
xor
test
in
cmpsb
mov
rclb
movsb
push
lahf
movsb
jno
jl
cmp
sbb
pop
lea
inc
mov
clc
outsb
pop
std
mov
dec
leave
mov
test
pop
xor
lock
push
pop
fiadds
sub
jno
sub
xor
jg
xchg
out
cltd
cmpsl
xor
dec
jns
jnp
insb
imulb
inc
test
jbe
inc
xchg
scas
sub
xchg
cli
and
jo
dec
test
incl
int3
pop
fnstsw
dec
or
ss
outsl
jnp
repz
insb
push
test
je
repnz
test
cmp
loopne
mov
xor
dec
fs
sub
pop
sbb
test
mov
jmp
scas
int3
push
ret
mov
gs
mov
dec
cmp
push
out
push
out
push
fwait
lret
mov
xchg
xchg
add
xor
pusha
cmp
sub
insb
or
mov
fdivl
pop
jmp
sub
pusha
xchg
jl
xor
imul
jle
sbb
sbb
dec
imul
cs
pop
cmp
sub
dec
pushf
dec
movsb
push
mov
es
mov
addr16
fimuls
adc
pushf
mov
sub
outsl
sub
test
inc
add
cmp
movsb
pop
and
push
scas
pop
clc
test
ret
clc
fmull
cmpsb
lods
xchg
fmul
daa
mov
js
pop
sbb
add
aad
inc
jp
mov
mov
push
jp
ds
sbb
mov
test
lcall
movl
int
sbb
xchg
repnz
cli
mov
daa
les
into
pushf
dec
dec
cmp
out
dec
push
ja
movsl
jle
aad
push
loop
cmpb
fxch
lcall
xchg
and
mov
cmp
int
and
shlb
adc
xor
fs
je
jmp
push
call
dec
rorb
imul
adc
sbb
jle
mov
addl
int
mov
or
into
loop
rcrl
ret
push
leave
pop
mov
cmpsb
aaa
inc
cmpsl
and
push
mov
inc
mov
inc
loop
stos
mov
mov
clc
mov
dec
int3
repz
cmp
fdivs
mov
cltd
xchg
cs
and
and
mov
inc
scas
out
aas
fs
hlt
adc
cltd
roll
loop
roll
or
or
xor
testl
insl
out
not
fstl
mov
mov
mov
out
adc
out
push
xorb
lret
inc
push
clc
ljmp
mov
push
shll
and
sub
into
mov
push
out
in
fdivrl
mov
out
sub
sbb
loope
pop
fcoml
jae
add
cwtl
pusha
xor
adc
xor
sbb
rorb
jb
mov
xlat
mov
movsl
sub
xchg
std
inc
sti
mov
add
or
pop
and
stc
movsb
testb
nop
sub
sbb
push
pop
add
popa
sub
sbb
pusha
xchg
pop
dec
lahf
mov
cmp
jp
mov
cmp
icebp
jge
sub
cs
mov
je
daa
daa
push
outsb
rcll
xchg
iret
insb
cmp
xor
sar
jl
les
adc
pop
inc
push
sbb
add
orl
push
aam
dec
insl
int
dec
dec
shl
push
lcall
jecxz
dec
jge
ljmp
int3
setno
xchg
fsubrl
fwait
mov
mov
and
gs
mov
inc
push
repnz
mov
icebp
loopne
jmp
and
movntps
stos
movsb
sub
mov
stos
ds
popa
mov
shrb
lea
xchg
jle
test
or
loop
loopne
in
mov
xor
xchg
loop
sub
sub
mov
insb
call
xchg
lahf
fildll
sbb
jecxz
jp
push
fwait
pusha
cs
ret
ljmp
mov
stc
xor
popa
in
daa
aas
addr16
imul
stos
sub
sub
push
in
cmp
ljmp
mov
sbbl
sub
jmp
popa
jl
dec
sbb
std
pop
insb
loop
fwait
cmp
cwtl
mov
outsb
add
pop
mov
pop
sahf
jge
mov
cld
iret
lds
add
outsb
int3
adc
push
pop
pop
sub
adc
or
sbb
xchg
scas
call
arpl
dec
arpl
mov
push
imul
test
mov
mov
add
addr16
lret
in
dec
adc
cmp
jmp
mov
sbb
imul
pop
sbb
inc
jl
cmp
fimull
data16
dec
lcall
or
shll
dec
cmp
sbb
pusha
test
lret
pusha
bound
int
sahf
mov
iret
adc
jecxz
loope
pop
idivb
ret
xor
rorl
es
xor
das
adc
or
aad
int
push
test
icebp
and
aaa
pop
rcrb
ss
jb
push
loope
call
test
lods
out
add
je
mov
pop
sub
mulb
stc
jo
mov
les
adcl
push
sbb
loop
add
mov
push
in
lret
sub
pop
aas
xchg
les
or
cli
pop
cmp
ss
mov
adc
lcall
cltd
call
or
fnstcw
test
push
outsb
aam
jae
xor
lcall
fucomip
mov
scas
test
rorb
jg
iret
mov
mov
shrb
and
cltd
mov
test
outsl
mov
cwtl
fs
sbb
stc
gs
mov
adc
aam
imul
test
jecxz
or
sub
xchg
add
xchg
popl
mov
add
mov
fmull
aaa
out
scas
loop
movsl
icebp
add
and
or
inc
je
lods
pop
cmp
cmpsb
push
nop
cmp
adc
cmpsb
mov
or
outsl
ds
mov
jle
add
pusha
sub
jno
push
rcl
loope
mov
fsub
sub
or
int
outsb
adc
pop
mov
mov
jp
xlat
cmp
cmp
cmp
lea
xor
sub
cmp
push
jecxz
fldl
je
xlat
outsl
insl
jp
fldl
inc
js
or
nop
sbb
or
nop
mov
push
data16
xor
loope
mov
clc
mov
js
jmp
mov
pushf
sub
push
push
sub
mov
add
jp
aad
sbb
or
xchg
cmc
adc
or
mov
xchg
leave
shll
shlb
pop
ret
test
sub
addr16
mov
sbb
mov
lret
gs
mov
in
fimull
mov
mov
dec
les
dec
repnz
aas
out
fldln2
and
insl
cmp
mov
or
inc
add
jle
ret
mov
adc
add
mov
ss
pop
imul
pop
pop
scas
lcall
or
cltd
mov
fldenv
push
or
push
stc
mov
adc
pusha
scas
dec
outsb
mov
mov
ja
int
cmp
add
inc
decb
mov
jl
push
loop
mov
lret
push
xchg
pop
hlt
pop
ret
shr
aam
je
aad
push
roll
gs
pop
jp
adc
loope
sbb
mov
xchg
stos
sub
inc
loopne
push
cmp
fs
stos
leave
clc
test
dec
adc
outsb
jns
mov
inc
adc
xchg
adc
cmc
es
push
sbb
sti
mov
sahf
ret
and
add
subb
xchg
cmp
addl
fisttpll
adc
mov
sub
cs
sub
int
pop
push
inc
xchg
pop
mov
mov
out
xor
inc
jge
std
dec
into
sub
sti
cmpsl
jno
mov
es
sbb
jle
pop
add
push
adc
jae
jns
stos
shl
sbb
xor
jbe
pop
cmp
add
mov
mov
addr16
dec
ljmp
dec
dec
and
subl
fsubl
xchg
xchg
jnp
hlt
ja,pn
pusha
sub
dec
mov
repnz
or
mov
cwtl
inc
jmp
add
lcall
push
arpl
icebp
push
pop
sahf
inc
popf
lcall
jecxz
inc
pop
cmc
push
inc
call
adc
push
adc
dec
add
push
lcall
pop
mov
xor
xlat
dec
sub
cmp
rol
idivl
mov
inc
xchg
insl
mov
cmp
call
adc
pop
push
sub
push
je
mov
scas
push
add
push
stc
cmpsb
push
push
pushf
je
xor
pop
mov
imul
cmp
xchg
add
sub
inc
iret
cmp
inc
xchg
loop
in
inc
xor
or
movsb
xchg
push
xor
movsl
lret
mov
sub
stc
je
jb
rorl
sbb
psubw
shlb
dec
xchg
push
in
jl
mov
mov
inc
xor
icebp
push
inc
mov
adc
lock
aas
or
arpl
fwait
outsl
fs
shll
gs
inc
ja
or
sub
cs
and
add
shrb
dec
push
or
mov
mov
pusha
inc
mov
into
xchg
ds
xor
cld
push
add
dec
js
clc
mulb
pop
inc
aaa
sbb
leave
mov
pushfw
pusha
sbb
mov
clc
mov
movsb
fsub
pop
dec
push
pop
imul
test
push
xor
jle
push
lock
mov
mov
je
sbb
pop
js
rcll
dec
and
fidivrl
js
test
jae
xchg
movsl
cmp
adcl
movsb
xchg
mov
adc
push
dec
lods
mov
cmp
and
push
fldt
cmp
jno
mov
add
jl
gs
mov
xchg
jl
and
rolb
mov
push
fs
cli
ja,pt
dec
int
dec
or
cmpsb
pop
mov
push
es
repz
lahf
xchg
mov
push
push
sub
add
sbb
pushf
inc
xchg
jecxz
jge
rcll
test
fsts
bound
mov
adc
les
sbb
in
clc
inc
movsb
aaa
xchg
aaa
xchg
dec
push
and
xchg
lcall
xchg
lahf
mov
insl
stos
sbb
jnp
inc
sub
ss
adc
loop
adc
ljmp
int
movsl
push
mov
aas
mov
stos
or
mov
outsl
xor
sbb
stc
jo
in
pushf
outsl
xchg
xor
cwtl
es
pop
xchg
inc
mov
xchg
inc
out
pop
pop
and
test
dec
push
cmp
ficompl
test
mov
adcb
sub
cmp
outsl
xor
mov
fsubl
pop
add
in
aad
fdivrs
cltd
xor
mov
out
inc
cltd
shll
pop
xchg
inc
fistpll
mov
fs
xchg
sbb
lret
cmp
sub
into
adc
hlt
push
aad
movsb
aas
cmpsb
inc
out
pop
xorb
xor
cli
out
or
mov
jg
xchg
js
inc
aam
dec
jnp
add
ja
fsubl
sbb
or
add
jnp
sbb
inc
scas
cmp
cmp
lahf
gs
or
stc
nop
dec
je
je
pop
and
mov
sbb
xchg
rorl
sub
jnp
rclb
adc
sahf
je
jnp
mov
fstpl
in
or
ret
daa
daa
mov
xor
lea
in
adc
loopne
sub
xor
jg
shl
mov
decl
mov
xchg
mov
mov
pop
xchg
cmp
hlt
pushf
mov
xchg
and
sbb
sbb
lods
add
sbb
xor
xchg
ds
push
jno
sub
clc
lcall
hlt
mov
dec
mov
lock
lea
dec
jbe
xorl
in
mov
ficoml
popf
aas
filds
pop
sub
les
movsl
mov
dec
into
dec
les
xchg
dec
adc
cld
jns
mov
loope
fwait
push
or
cs
outsl
in
inc
je
notl
pop
add
ja
sub
ds
xchg
jg
adc
subb
mov
mov
push
mov
mov
cmc
xchg
repz
insl
push
and
cli
cmp
inc
clc
inc
mov
dec
clc
jno
cltd
mov
clc
adc
pop
pop
cmp
sarl
loop
push
lret
ss
add
add
stc
js
gs
cltd
and
and
aam
mov
les
add
out
adc
ljmp
xchg
jp
jmp
pop
repnz
cmp
sbb
pop
mov
js
mov
mov
sub
mov
cmp
xchg
fwait
out
mov
test
xor
push
dec
in
lods
jp
jae
aaa
sahf
add
das
pop
lock
xchg
stos
loope
push
out
out
cmc
jg
fnstsw
inc
pop
xorb
push
fadds
and
imul
jg
xchg
mov
andl
xchg
icebp
pushf
push
lock
jp
sbb
ljmp
jge
dec
pop
js
adc
mov
jp
insb
inc
sbb
shl
sub
xor
add
cmp
or
repnz
fnstenv
xchg
pop
sarb
call
xor
lahf
pop
inc
lods
icebp
mov
mov
clc
cmp
neg
pop
in
cwtl
into
enter
or
xor
shll
ja
and
add
push
adc
push
sbb
stos
cltd
mov
add
adc
xchg
sub
out
and
inc
jb
mov
cmpl
ja
sub
js
push
cld
jg
or
je
jmp
js
adc
bound
hlt
mov
pop
push
arpl
or
xchg
cmp
ds
js
xchg
cmp
pushf
xor
sub
fadd
test
xor
es
cmc
filds
lea
push
xchg
in
sar
pop
out
outsl
mov
xchg
pand
ljmp
ja
push
adc
push
test
mov
and
add
fstpt
insb
sbb
cmpb
pop
sub
adc
jno
cwtl
jno
mov
test
xor
jge
xchg
mov
frstor
or
shr
fisttps
pop
xchg
pop
push
add
push
repnz
testl
int3
es
pop
stos
hlt
cmp
jge
mov
mov
mov
outsl
sbb
aad
shll
add
jbe
ret
cmc
dec
pop
jle
andl
cmp
sbb
adc
clc
ret
outsl
cmp
subl
mov
dec
push
movl
mov
lock
je
xchg
pop
sub
inc
sahf
leave
mov
adc
dec
push
mov
sbb
xchg
lahf
lcall
sahf
mov
neg
jg
in
and
push
pop
mov
das
cmc
and
repz
loopne
xor
pushf
pop
shll
int3
xchg
loopne
ja
call
rol
cld
js
adc
mov
nop
pop
sub
bound
test
inc
inc
ljmp
inc
push
jbe
cwtl
and
shrl
xor
fcomi
les
scas
mov
stc
enter
add
fdivrs
lea
repnz
sti
clc
pop
add
push
jne
adc
mov
xchg
push
popf
inc
push
js
out
mov
arpl
mov
sub
fisubs
add
jb
imul
jb
rclb
das
cmpsl
jnp
jae
xchg
cld
jmp
into
loop
scas
mov
insb
push
ja
fisubrs
aas
arpl
mov
push
dec
pop
jne
es
jne
xor
nop
mov
mov
stos
int3
sbb
push
std
insl
je
roll
ret
sahf
dec
mov
aam
sub
jg
mov
push
sar
test
scas
call
pop
imul
mov
adc
or
psrad
fwait
es
scas
stos
mov
push
sub
stc
jb
mov
inc
xor
dec
cmc
cmp
dec
stos
rol
lahf
insl
sbb
out
outsb
sub
add
pop
and
js
js
pop
xor
je
mov
xchg
xor
push
xchg
js
stos
xchg
cs
xchg
or
xchg
cmp
xor
enter
and
out
mov
lea
stos
dec
int
pop
pop
imul
lods
hlt
cmp
pop
cmp
dec
les
in
lods
hlt
int
sub
mov
adc
jg
je
cmpsb
mov
adc
or
xlat
insb
mov
push
scas
and
loopne
add
lods
fdivp
les
lds
mov
fsubs
std
sbb
pop
cmpsb
sbb
sbb
or
mov
mov
inc
outsl
mov
lock
stc
fidivrl
mov
gs
popl
push
mov
pop
incl
scas
and
cld
cmpsl
hlt
jb
add
leave
ret
shrb
mov
inc
add
cmpsb
pop
fwait
lcall
push
pop
fldenv
sub
insb
dec
ror
sbb
or
sub
cmpsl
test
out
push
add
mov
cwtl
js
ss
xor
mov
adc
sbb
push
jg
mov
jl
xchg
es
add
daa
das
or
rcl
dec
bnd
mov
mov
jnp
popa
mov
mov
or
mov
xlat
pop
aad
xor
outsb
adc
and
repnz
inc
xchg
mov
mov
arpl
ficompl
pusha
std
ljmp
sub
in
dec
pop
push
js
mov
shl
fsubl
loopne
pop
and
push
xor
adc
test
xor
stos
lock
lret
jno
mov
rcl
test
cmp
mov
testb
pusha
pop
pop
mov
jmp
cmp
adc
push
sbb
inc
cli
jl
xchg
repnz
mul
loope
lret
scas
enter
pop
imul
test
inc
cld
mov
inc
push
adc
clc
mov
mov
outsb
dec
push
into
mov
leave
mov
adc
insb
nop
pop
jo
nop
das
repz
sbb
xchg
imul
movsb
bound
inc
and
pusha
imul
shll
adc
fs
ljmp
and
leave
dec
jle
adc
add
cmp
fisubrl
addr16
mov
popf
cld
dec
mov
pop
jl
jmp
cmp
push
das
outsb
push
mov
inc
test
fcoms
mov
jo
push
push
dec
jl
leave
imul
ss
fcom
xchg
xchg
pop
fwait
hlt
dec
lcall
jne
xchg
mov
popa
cmpb
imull
shll
xchg
and
push
mov
sub
mov
das
leave
js
repz
xchg
mov
gs
pop
and
inc
mov
subl
jecxz
dec
push
test
enter
pop
insl
sahf
xlat
cmpsl
rcrb
add
repnz
mov
xorl
addr16
push
dec
dec
in
data16
call
inc
out
stc
sahf
ss
adc
dec
inc
add
sub
stc
cs
shlb
repz
pop
repnz
mov
imul
cmp
out
lahf
ja
fmul
mov
out
add
jge
scas
add
fdivr
out
pop
inc
arpl
aaa
fistps
in
inc
ret
add
stc
push
and
lods
push
push
repnz
iret
xchg
jg
lret
mov
cmpsl
cmp
jecxz
xor
lret
push
or
jnp
shr
stos
jns
nop
fadd
jle
adc
aaa
std
sti
mov
test
popf
mov
rcrl
cli
or
outsb
ret
jno
int
stos
push
stos
jae
fisubl
test
clc
stos
gs
inc
and
outsb
push
jge
pop
mov
repnz
mov
scas
push
hlt
xchg
pop
insl
les
mov
dec
cmp
xor
filds
xchg
xchg
jns,pn
lret
sbb
daa
adcl
int3
xor
outsb
insb
int
jge
xor
or
movaps
mov
rolb
sub
jnp
insl
sub
pop
div
stos
mov
push
jbe
sub
sub
or
dec
leave
xchg
outsl
lret
rclb
cli
icebp
sar
jle
aaa
out
out
scas
shr
push
cld
insb
lret
pop
or
sti
das
push
es
pushf
or
mov
imulb
leave
add
ret
xchg
movsl
arpl
lahf
cltd
int3
stc
fisttpl
pop
stos
fdivrs
in
inc
dec
xor
ficomps
stc
flds
inc
dec
xor
repnz
mov
ret
bound
ds
int3
adc
push
out
adc
cmp
inc
ret
pop
out
int3
mov
or
mov
pushw
lods
adcb
jge
or
arpl
push
sbb
aad
mov
sbb
push
xor
cli
or
popa
and
mov
push
add
aam
push
sub
lret
out
outsb
xor
cmc
jb
sbb
jecxz
nop
rolb
ljmp
rclb
int
fldcw
mov
xor
mov
xor
loopne
xor
lret
popf
mov
mov
pop
cmpl
cmp
push
sahf
cmp
and
dec
lods
push
sarb
dec
push
out
or
jo
rolb
js
out
push
pop
mov
jbe
cmp
call
shr
add
adcl
leave
cwtl
mov
cmp
aaa
iret
int3
jnp
test
subl
cmp
mov
adc
orl
sub
adc
mov
cwtl
lock
adc
out
mov
pop
out
dec
ja
pop
shl
rcl
ljmp
or
fcoml
popf
rcrb
dec
das
push
xor
lds
xchg
aaa
aaa
push
mov
rcr
ljmp
movsb
gs
stos
pop
bound
adc
push
mov
arpl
nop
aaa
push
aas
mov
jmp
lahf
outsl
lret
fs
aas
data16
ljmp
and
rcrb
cmp
and
es
je
fs
enter
in
inc
sub
fsub
mov
push
aam
xor
jmp
cld
push
outsb
xchg
and
stc
lret
test
imul
push
cmpsl
imul
in
or
ss
sti
gs
mov
dec
push
lock
or
dec
jl
mov
jg
cmp
dec
in
cwtl
subl
jb
in
ret
lock
dec
mov
int3
divb
pop
aam
mov
mov
and
in
mov
add
loop
cmpsl
cmpsl
dec
aad
jmp
push
out
jb
jns
outsb
adc
and
loope
mov
push
insb
clc
push
push
and
pop
pop
cwtl
xchg
xor
mov
insl
scas
daa
pop
movsl
jnp
dec
cmpsl
popf
sbb
pusha
inc
cmp
cmp
sbb
mov
sbb
pop
mov
cwtl
pop
out
xor
jae
and
cmp
fsubr
jle,pn
push
fsubs
fildll
pop
scas
in
repnz
cmpsl
and
or
ret
lods
popf
stos
and
data16
out
xchg
jmp
and
fxch
mul
push
loopne
cmpsb
mov
xchg
and
popa
inc
add
aas
fiaddl
int
inc
or
adc
out
fwait
aam
pushf
movsb
inc
mov
fwait
xchg
or
xchg
repnz
pop
and
andl
lea
inc
shll
in
ret
adc
imul
xchg
fmull
jns
loop
dec
sbb
lret
cld
sahf
aad
sbb
mov
out
ljmp
subl
in
aaa
add
push
push
aaa
sub
mov
lea
outsl
mov
mov
fwait
fwait
add
shrb
pop
jg
rcll
stc
cltd
xor
cs
pop
jb
add
ret
jno
xchg
jnp
sub
je
scas
rcrb
add
or
inc
push
dec
ss
jns
sub
mov
aaa
adc
stos
jb
pop
andb
pop
inc
or
pop
add
push
int3
jae
icebp
xor
pop
pop
les
pop
lock
jnp
movsl
bnd
bound
out
ljmp
mov
hlt
pop
aaa
aam
nop
cmc
or
push
rcl
sbb
or
jg
pop
xchg
inc
sbb
aaa
or
push
test
cwtl
mov
popf
test
imul
jb
test
idivb
test
xor
outsb
mov
es
repz
adc
lea
sti
mov
cmp
xchg
add
loope
dec
xor
inc
std
notb
mov
pop
sbb
inc
loopne
loopne
pop
cld
cmpb
incl
or
or
popa
ret
into
and
rclb
adc
mov
faddl
mov
pusha
cmpsl
adc
adcb
and
orl
push
scas
pop
popa
pop
push
cmp
sti
or
in
rcrb
mov
pop
cltd
enter
push
jle
mov
cmp
mov
cmp
int3
mov
insl
mov
imul
add
scas
orl
aaa
xor
mov
shlb
addr16
mov
or
or
fisttps
lret
push
ds
frstor
adc
xor
mov
xor
push
mov
fs
adc
int3
add
add
pop
mov
pop
xchg
mulb
fdivrl
push
inc
aad
mov
shl
push
or
jns
jp
jmp
insb
push
iret
cwtl
xchg
ret
add
adc
in
xor
add
sbb
adc
mov
jecxz
imul
xchg
fs
push
orb
inc
mov
into
aaa
fldcw
ss
aaa
lds
xchg
in
cmpsl
xor
clc
je
sbb
mov
jbe
bound
xchg
xor
xor
hlt
stos
sar
sbb
mov
test
in
lcall
aas
lods
arpl
inc
fs
aaa
pop
and
mov
add
wrmsr
insb
inc
adc
xlat
pop
rcrl
mov
fildll
xchg
cmp
inc
insl
jmp
je
call
xchg
pop
sub
addl
jne
jge
scas
sbb
sub
in
mov
mov
xchg
xlat
mov
mov
out
loope
mov
std
es
gs
sbb
jp
jo
mov
add
movsl
xor
jecxz
sub
stos
loope
in
sub
mov
push
cwtl
and
decl
xor
addr16
xchg
push
outsl
push
jl
pop
cld
lods
out
push
cmc
push
stos
dec
cmp
out
fnsave
fucomip
in
data16
push
pop
dec
rcll
or
iret
add
lock
lea
loope
mov
sub
push
inc
loop
jnp
mov
push
inc
pop
jae
orb
scas
mov
xchg
adc
pop
mov
pushl
push
clc
popa
sub
out
xchg
ja
sub
movsl
sbb
cmp
jg
mov
movb
mov
sub
pop
nop
out
rcrl
test
and
adc
fistpll
add
mov
repz
adc
repnz
jns
or
mov
sbb
xchg
add
mov
int
push
mov
xorb
mov
cmp
dec
and
test
mov
and
add
push
hlt
push
icebp
xchg
dec
in
inc
addr16
adc
xlat
dec
dec
sti
aad
andl
dec
rcrb
ret
lea
adc
push
inc
je
loop
sbb
jo,pt
sbb
mov
pusha
nop
fwait
jb
or
fwait
fwait
push
fs
fists
lea
add
add
mov
mov
xor
xor
push
mov
jl
roll
push
xor
mov
test
adc
inc
inc
pop
pop
push
nop
sbb
out
inc
rol
addb
inc
pusha
and
xchg
adc
loope
sbbl
outsl
cmp
sbbl
pushf
push
mov
xor
jmp
xor
sti
xor
cli
and
rol
mov
es
sar
out
cmp
stc
bound
mov
cmp
arpl
loope
imul
lcall
int
jge
mov
imul
adc
pop
push
jno
addr16
cmp
lods
dec
and
dec
cmpsb
inc
pusha
sti
cmp
fildll
jmp
mov
rolb
inc
cli
pop
popf
cltd
sahf
orb
and
fidivrl
mov
jle
inc
imul
cmp
rcrb
push
aas
or
and
mov
enter
cmp
faddl
mov
cltd
xchg
xor
ja
and
arpl
fwait
movsb
dec
cmp
sbbb
inc
push
push
and
inc
movsl
jge
xor
sahf
fstpt
jp
pop
mov
sub
xchg
dec
sub
xor
push
in
add
mov
mov
inc
aam
jae
sbb
fs
ja
or
fistl
data16
lods
ja
lahf
push
xor
mov
xchg
mov
mov
dec
ret
and
aas
dec
jg
mov
push
xchg
inc
loop
xchg
and
pushw
mov
insl
jp
xor
xchg
add
jp
aad
das
enter
add
pop
or
repz
aas
in
rcrl
cmp
xor
add
test
jmp
scas
jge
add
ficompl
mov
stc
bound
pop
jne
outsb
cs
jae
inc
mov
dec
lret
jmp
or
lods
inc
mov
repz
movsl
pop
xchg
cmpsl
mov
sbb
cltd
test
lahf
add
pop
sahf
cmp
inc
inc
xor
pop
sbb
fcomps
fsubs
scas
or
adc
mov
lahf
fnstsw
pop
xor
clc
dec
sbb
adc
sbb
and
test
repnz
repnz
push
in
cmp
in
imul
mov
testb
movsl
sbb
and
cmp
cwtl
popf
push
sbb
js
aad
repz
sub
cmc
mov
test
push
lret
or
sub
cmp
xor
jge
xchg
mov
cmp
add
imul
mov
testl
movsb
addr16
add
das
mov
adc
lret
lahf
dec
jp
mov
sub
shlb
movsl
push
out
mov
push
cmovle
adcl
das
loop
dec
mov
scas
pusha
std
negb
cmp
or
fistpl
xor
roll
fwait
bound
scas
sub
daa
inc
xchg
jnp
mov
cmp
push
inc
cwtl
jmp
mov
mov
jl
lret
outsl
or
test
rep
xchg
fimull
xor
lds
mov
ret
shlb
jae
nop
jne
jmp
das
rcll
lods
sub
sub
outsb
loope
lock
aaa
mov
pop
jnp
cmpsb
push
mov
adc
dec
jnp
ja
jbe
mov
lods
mov
sbb
out
nop
or
and
add
xchg
test
in
dec
stos
xor
sbb
cmp
inc
shrl
aas
cmp
fcomps
movsb
jnp
movl
in
orl
xor
xorl
or
xchg
imul
test
mov
add
push
inc
stc
xchg
test
push
cwtl
sahf
adc
popf
xchg
mov
shr
rcl
mov
fadds
lods
sub
lea
xchg
cmp
scas
cs
lods
cmc
call
mov
ljmp
dec
fcoms
jecxz
lcall
lcallw
mov
dec
and
aam
cmpsb
or
ds
jne
push
add
call
jb
rcr
loop
fldlg2
movb
mov
add
mov
lods
jecxz
cmpl
add
sti
push
mov
hlt
jae
shlb
out
js
sbbb
vpaddusw
ss
xor
adc
int3
fwait
cmp
mov
pop
pop
xchg
dec
aad
popa
fnstenv
inc
cmp
jge
xchg
xchg
sub
cwtl
jns
mov
xor
ljmp
push
mov
lds
mov
jno
sub
int3
jnp
fdivs
dec
outsb
js
cmp
test
mov
dec
jbe
adc
or
pop
loop
mov
mov
jb
movsl
incb
adc
jecxz
push
les
ds
lods
into
stc
rorb
push
pop
mov
cmp
aas
push
sar
gs
dec
mov
inc
lret
cmc
cld
adc
push
mov
pusha
js
xor
das
jmp
adc
in
lret
repnz
inc
fldenv
dec
iret
lcall
shrb
aas
jno
ds
push
outsb
out
lods
jmp
jo
repz
pop
mov
loopne
cmpsl
outsl
xchg
add
jmp
xchg
sbb
int
mov
pop
cmp
mov
inc
popa
cmp
sarb
bound
or
imul
sub
mov
sub
enter
pop
mov
les
dec
jp
xchg
add
mov
mov
cld
dec
adc
popa
jle
or
cwtl
xor
mov
in
cmc
ficoml
stos
ficoml
inc
push
and
dec
neg
lret
arpl
dec
sbb
scas
aaa
fidivrl
mov
sbb
cs
nop
adc
add
adc
jbe
in
cmp
inc
cmp
jge
adc
jno
sbb
cli
ss
xchg
mov
push
push
cmp
push
pop
in
repz
cmp
dec
nop
loop
test
lea
lcall
mov
jnp
int3
cpuid
cmpsl
push
arpl
fwait
inc
loope
pop
mov
test
push
cmpsb
push
insb
add
aam
xor
adc
sub
mov
fwait
std
adc
xorb
add
push
data16
je
adcl
adc
and
inc
stos
out
ret
test
jne
stos
mov
or
lret
inc
push
movl
jmp
push
shll
scas
mov
rcll
mov
xorb
ret
cmp
mov
leave
sbb
mov
jl
mov
xor
jmp
xbegin
aam
roll
scas
mov
mov
add
cs
xor
imul
mov
filds
xchg
pusha
and
xor
ljmp
mov
jne
pop
stos
dec
cmp
push
cmpsl
call
sbb
aad
cmp
xchg
stc
movsb
jmp
rcrl
in
xchg
mov
scas
addr16
and
inc
sbb
push
loope
aad
jnp
int3
xor
adc
mov
out
stos
xchg
clc
adc
ds
sbb
pop
fistl
dec
mov
pop
lock
add
push
add
jg
cltd
inc
in
push
sar
pop
ret
inc
sbbb
inc
addr16
loop
mov
fs
daa
fidivrl
int3
loopne
mov
dec
xorb
sub
loop
xchg
jecxz
sbb
pop
adc
mov
test
in
add
loop
pop
fnsave
jo
mov
sbb
sub
cwtl
sub
dec
mov
gs
mov
xor
cmp
xchg
or
fidivrs
push
in
mov
fs
fucomi
jb
cmpsl
xlat
adc
sahf
scas
or
aaa
call
popa
pop
or
sahf
jecxz
xchg
and
mov
pop
sti
dec
ja
in
in
popf
pop
cmpsb
jb
jecxz
mov
sub
jno
aas
fldt
sbb
roll
imulb
or
lret
adc
pusha
sbbl
stos
cmc
mov
je
movsb
sbb
dec
jge
mov
jo
sub
cmp
cwtl
mov
xchg
je
aam
add
cwtl
mov
sbb
pushf
into
pop
push
mov
sarl
pop
std
or
xor
push
cltd
jg
adc
jns
lcall
push
push
add
imull
repnz
push
fnstcw
mov
cmp
in
add
xor
adc
popa
inc
pop
cmpsl
shl
std
fimuls
push
adc
push
push
lcall
imul
pop
push
pop
jecxz
rorb
or
das
mov
xor
sub
fdivrs
into
nop
xor
add
add
dec
push
stos
js
repz
shrl
movsb
jle
mov
pop
movsb
inc
mov
adc
xchg
jge
ss
xchg
mov
test
jle
clc
repz
or
pop
adc
jns
cwtl
xchg
inc
lret
sub
mov
bound
shlb
es
push
dec
lcall
repnz
in
and
xchg
scas
movsb
mov
and
xchg
mov
mov
push
into
dec
out
cmp
sub
dec
incb
xchg
outsb
pop
mov
adc
stc
dec
enter
leave
into
lret
nop
sti
cld
sbb
inc
jb
jbe
add
xchg
or
mov
pop
mov
outsb
add
pop
jnp
ret
sbb
daa
cmc
addr16
nop
adc
xchg
cwtl
out
dec
jbe
ss
jne
rcr
dec
dec
loopne
push
add
call
rorl
inc
cmp
or
ret
xchg
pop
cmp
xor
mov
out
pop
fsubr
ss
inc
mov
popa
repnz
movsb
adc
xor
xchg
bound
enter
aam
insb
adcb
or
stc
cmpsl
fisubrl
fwait
xchg
add
rclb
mov
lcall
dec
shl
cmp
or
dec
mov
fwait
in
pop
shl
jg
bswap
arpl
outsl
inc
mov
imul
int
dec
cmp
incl
cltd
sub
fmulp
pop
dec
jl
shl
fsts
fisubl
es
aaa
mov
test
movsl
xor
out
jge
fwait
int3
pop
stos
cli
outsl
outsb
sbb
mov
jge
out
fisttps
or
scas
xchg
fcomp
fstp
outsb
adc
fs
and
icebp
negb
lahf
and
in
mov
and
jmp
mov
dec
lret
xor
test
rorl
aaa
pop
mov
mov
es
and
and
mov
scas
addl
mov
fldenv
lcall
cltd
push
sub
loopne
mov
lods
or
hlt
pop
jnp
xorb
aam
test
inc
sti
popa
mov
inc
lea
xor
out
or
fstps
out
sbb
mov
adc
fwait
xchg
or
jo
addr16
adc
jae
and
std
test
adc
and
pusha
repz
lret
stos
jg
scas
pop
mov
push
pop
imul
and
bnd
lods
mov
adc
mov
mov
jbe
xlat
jmp
rcrl
pusha
cwtl
cs
in
movsl
jb
mov
jb
and
fldt
push
cmp
dec
and
stos
ja
push
loop
jae
imul
aad
call
xor
add
call
repz
mov
scas
addb
repnz
loope
mov
fld
aas
fisubs
xchg
cmp
mov
add
or
dec
rcrl
mov
scas
lret
xchg
inc
push
inc
mov
pop
pop
stos
aam
shr
add
pushf
adc
subb
rcl
adcb
jl
adc
ljmp
gs
in
cmc
pop
scas
call
rcrb
test
outsb
or
outsl
mov
fcmovnbe
adc
adc
mov
aas
xchg
mov
bound
pop
mov
jl
test
lods
test
loope
into
stos
sub
pop
xchg
push
arpl
mov
sarl
sti
dec
movsl
loope
inc
xor
mov
mov
lods
dec
imul
xchg
cmp
pop
ret
and
cld
testl
adc
fidivrl
push
xchg
cli
xchg
dec
jne
fisubrs
fbstp
pop
mov
aas
inc
popa
sbb
loopne
fbld
mov
ficompl
inc
addb
push
sti
push
add
int3
jge
ljmp
and
jbe
arpl
movsb
xorl
cltd
adcl
out
push
aad
xchg
push
sbbb
inc
push
in
movb
es
cmp
xor
mov
cmp
jne
sub
daa
cmc
jmp
out
into
push
xor
sub
push
push
lea
int
loopne
rcrb
sub
fdivrs
cmp
out
sub
cmp
adc
adc
xchg
jp
sub
sub
in
ja
imul
int3
scas
xorl
jecxz
add
aam
xchg
pop
iret
xchg
call
fsubr
outsb
pop
xor
mov
aam
fildl
icebp
fstl
push
mov
mov
dec
push
movsb
shrb
cmpsl
pushf
and
cmp
into
fildll
cmp
sub
or
xor
out
shlb
adc
fscale
fbld
arpl
dec
sarl
add
cwtl
inc
push
bound
insl
stc
repz
nop
popf
dec
xchg
sub
push
movsb
rcl
enter
in
xchg
ljmp
xor
jne
sbb
jae
insb
hlt
hlt
cmp
fxch
or
pusha
test
add
into
les
stos
stos
push
dec
inc
enter
das
loopne,pt
mov
hlt
test
stos
rcll
mov
push
int
add
adc
dec
mov
sub
cs
or
addl
dec
cmp
ja,pt
fidivl
push
leave
and
ja
or
or
ljmp
or
sub
and
sub
add
arpl
int3
in
fcmovne
sub
and
jle
push
mov
mov
rorb
jnp
xor
mov
cs
jnp
aas
shll
cmpsl
test
push
add
insb
das
mov
in
pop
mov
imul
lods
testb
cltd
xchg
sub
push
icebp
pop
or
or
adc
lret
jbe
xchg
sbb
out
sbb
and
adc
add
shlb
jns
or
push
cltd
xor
lcall
cltd
mov
and
jbe
outsl
movb
mov
jle
push
mov
pusha
and
xchg
shr
xlat
mov
jge
popf
pop
test
pop
mov
mov
jae
push
and
add
add
inc
addl
pushf
pop
and
stc
outsb
xchg
jns
jge
jae
bound
bswap
dec
mov
xchg
or
mov
dec
std
dec
lock
stc
mov
mov
jge
scas
lcall
cmc
xchg
popa
dec
mov
adc
jl
ror
lahf
icebp
lods
lods
call
push
xor
xlat
sbb
ljmp
aad
in
jno
jae
aas
push
mov
sbb
push
iret
out
iret
mov
insl
test
ds
sbb
push
inc
lahf
mov
cwtl
jno
xor
leave
pop
icebp
outsl
enter
mov
popa
jns
sbb
aam
sub
int
fdiv
dec
test
push
pop
jl,pn
aam
xchg
xor
mov
sbb
mov
sysret
cmc
arpl
inc
inc
dec
cmpsb
loopne
sti
jg
mov
jg
mov
cmp
sub
ret
test
into
test
jmp
xor
dec
sbb
and
jmp
inc
xchg
out
test
lcall
mov
mov
lcall
pop
xchg
hlt
leave
scas
cmp
or
xchg
mov
pop
add
fabs
xchg
ss
xchg
mov
fdivs
sub
add
mov
mov
mov
dec
xchg
jecxz
add
ja
xor
or
pushf
jp
inc
xchg
ret
and
lcall
sbb
inc
or
mov
inc
mov
sub
lods
inc
or
or
dec
sub
sbb
je
mov
jbe
lret
and
scas
or
rol
arpl
sbb
ret
lods
lret
push
fwait
cmp
int3
jo
fsubrs
bound
pop
subb
xor
ljmp
mov
andl
mov
leave
push
push
add
dec
test
scas
sar
aam
pop
push
shrl
pop
scas
movb
mov
orb
mov
inc
xor
roll
lock
subl
fsubl
addr16
xor
leave
ja
adc
push
cmc
pop
in
pop
dec
mov
adc
shrb
fstl
mov
jl
stc
loopne
clc
cmp
adc
imul
sarb
pop
adc
xchg
push
aad
xchg
dec
jns
test
sbb
mov
rcr
jmp
push
adc
cmp
jl
lcall
arpl
jae
aam
add
xor
pop
je
loope
pop
pop
and
fadds
jmp
aaa
xchg
int
sbb
or
jb
loope
mov
rorl
jge
xchg
pusha
xchg
push
or
xchg
sbb
mov
orl
jmp
loop
lret
fcoms
int
ret
cmp
cltd
rorb
push
les
mov
lds
dec
sbb
icebp
sbb
add
xchg
cmpsb
cwtl
add
mov
sbb
rcll
xchg
jo
sub
inc
adc
fldenv
jge
hlt
lock
stos
pop
fs
test
cmp
stos
mov
jb
or
pop
divl
dec
adc
out
aas
sti
lea
fs
insb
je
loope
data16
jmp
data16
pop
xchg
pop
cmp
push
jno
out
jnp
mov
fdiv
and
cmp
int
xor
and
push
jo
jl
aam
xlat
xchg
inc
push
gs
into
fmuls
scas
or
adc
add
inc
stos
int3
repnz
push
leave
scas
pop
mov
mov
push
jmp
jne
cmp
es
scas
inc
test
push
aaa
inc
mov
ja
sbb
stos
pop
pop
jmp
aad
sub
loopne
insl
mov
inc
mov
out
and
fistps
rorb
leave
sub
cld
std
fiaddl
loop
and
xchg
cmp
aas
push
or
rclb
pushf
fistl
xor
sub
mov
add
push
lock
push
dec
pushf
cmpsl
push
mov
cmp
rcr
in
scas
add
fstpl
cmp
sbb
js
loop
fcomps
xor
ret
out
jmp
enter
xchg
lahf
push
xchg
add
dec
fimull
subb
fimuls
xchg
jae
and
lret
adc
sub
icebp
xchg
js
fs
add
dec
push
inc
jecxz
or
xchg
cld
jle
xchg
lahf
pop
flds
add
sub
push
adc
in
ljmp
pop
je
add
bound
idivl
and
inc
and
stc
scas
out
daa
or
mov
int3
int
fwait
xor
loopne
mov
aas
push
push
fidivl
lret
mov
and
adc
fwait
sbb
dec
jo
in
adc
shll
cmpsl
stos
cltd
je
adc
add
outsb
inc
jmp
dec
stc
insl
sahf
dec
mov
lds
mov
xchg
out
ret
mov
dec
push
jbe
dec
push
jbe
mov
jg
lret
mov
xchg
jbe
dec
push
jbe
mov
jg
sarl
jbe
dec
push
jbe
xchg
sub
mov
sub
rclb
jnp
sub
mov
data16
jmp
dec
push
jbe
cltd
xlat
fistps
nop
out
rol
jbe
dec
push
jbe
mov
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
lcall
mov
dec
push
jbe
dec
push
jbe
rclb
jnp
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
scas
xchg
jecxz
mov
movsb
fistpll
push
jbe
dec
push
jbe
mov
enter
lret
xchg
imul
push
jbe
dec
push
jbe
mov
mov
xchg
push
jo
iret
mov
js
fnsave
xchg
in
mov
jmp
rclb
cmc
jge
test
adcl
stos
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
mov
jg
jnp
sbb
fucomip
dec
jbe
dec
test
xchg
push
dec
test
outsb
push
xchg
and
loope
push
ret
aad
and
jbe
inc
test
outsl
ss
jbe
dec
jbe
adc
and
xchg
ljmp
push
arpl
xchg
cli
add
fstpt
sub
sbb
jg
push
pop
jns
sbb
ja
dec
test
sub
push
push
jnp
push
pop
jns
sbb
outsb
push
xchg
pop
jns
inc
test
pop
dec
push
jbe
shrl
mov
add
cmpsb
jno
dec
stos
sti
add
jbe
xchg
jns,pt
inc
test
jmp
push
jbe
shll
mov
add
xchg
dec
stos
sti
add
jbe
xchg
cmp
inc
test
out
push
jbe
sarl
jp
pop
jbe
dec
test
jle
pop
cs
push
dec
push
jbe
xchg
loop
add
sbb
fldenv
decb
out
pop
dec
push
jbe
cmp
add
xor
pop
push
rcrl
mov
add
xchg
test
xchg
add
cmp
sti
repz
push
jbe
daa
out
xlat
dec
push
jbe
dec
push
jbe
pop
test
jbe
or
sbb
fldenv
add
stos
sbb
mov
mov
inc
ja
dec
test
jbe
fisttpl
mov
push
jae
add
lcall
dec
push
jbe
adc
push
test
ja
xchg
add
shlb
sti
repz
push
jbe
je
sti
testl
xchg
push
test
jbe
mov
pop
ds
push
in
loop
push
jbe
cmp
popa
inc
pop
aam
loop
push
jbe
inc
and
jnp
mov
add
mov
jbe
pop
aad
mov
dec
push
add
xlat
imul
or
jp
pop
jmp
fsubs
add
lret
dec
mov
jbe
ret
rolb
sti
and
jbe
or
jp
and
test
arpl
add
ret
dec
mov
jbe
ret
rolb
sti
sbb
jbe
or
jp
and
test
arpl
add
mov
xor
dec
push
jbe
ret
rolb
sti
adc
jbe
or
jp
and
sub
mov
jp
stos
sti
fisttpl
jbe
or
sbb
aaa
xlat
je
dec
or
jns
push
add
adc
cmp
xchg
loop
cmp
loopne
mov
add
adc
adc
sbb
sahf
sbb
jbe
shrl
mov
push
fwait
out
movl
jecxz
jno
dec
mov
dec
jbe,pn
fsubs
push
outsb
js
dec
lahf
aaa
jnp
push
jbe
mov
jne
cli
sbb
xlat
arpl
xchg
push
add
mov
movsb
jbe
push
ja
dec
push
popa
mov
mov
cli
cmp
sti
lret
dec
push
jbe
xchg
repnz
sahf
sbb
mov
jmp
jbe
push
add
and
idivl
mov
jbe
push
shlb
jbe
dec
or
cmp
mov
jbe
push
add
and
negl
dec
push
jbe
gs
jbe
xchg
add
or
imul
cmpsb
xchg
stos
sti
lret
dec
push
jbe
fwait
repnz
mov
mov
pop
dec
push
jbe
jecxz
jno
dec
or
jp
push
add
cmp
push
jbe
shrl
jp
test
ret
dec
push
jbe
xchg
repnz
xor
and
dec
sub
jbe
xchg
push
add
cmpsb
sbb
adc
push
jbe
push
test
ja
xchg
fiaddl
shlb
ret
aaa
mov
jmp
jbe
push
jp
or
sub
fdivs
cmpsb
xlat
push
jnp
test
jbe
xchg
sbb
into
jbe
push
jp
or
sub
fdivs
scas
xlat
data16
dec
test
jbe
xchg
cmpl
add
cmp
push
jbe
push
xchg
dec
push
add
and
jbe
push
pop
mov
dec
outsl
loopne
dec
mov
jbe
push
add
cmp
lret
push
add
and
jbe
fistpl
jp
mov
dec
jbe,pn
fsubs
cli
cmp
loopne
dec
mov
jbe
push
add
xchg
sbb
adc
push
jbe
push
test
ja
xchg
fiaddl
rorb
sti
mov
gs
jbe
xchg
fiaddl
or
imul
pop
cmpsb
xchg
out
pop
dec
push
jbe
fsubs
mov
pop
jno
dec
cs
xor
jbe
shll
jp
and
incb
jmp
adc
mov
jnp
push
popa
sahf
fsubs
jp
xor
sub
sahf
test
or
dec
push
jbe
adc
mov
cmpsl
dec
push
jbe
shll
jp
and
jl
pop
mov
pop
in
stos
dec
push
jbe
dec
push
jbe
jb
sti
mov
xchg
add
push
mov
scas
jno
dec
mov
push
add
dec
jno
dec
stos
sti
mov
xchg
add
je
xchg
addb
jno
dec
pop
jbe
dec
or
jp
and
jge
test
or
dec
push
jbe
adc
mov
scas
dec
push
jbe
shll
jp
and
jle
pop
mov
pop
in
mov
push
jbe
dec
push
jbe
jb
sti
mov
xchg
add
push
mov
scas
jno
dec
mov
push
add
push
jno
dec
stos
sti
cmpsl
dec
push
jbe
and
or
jbe
nop/reserved
push
cmpsl
sti
mov
rorl
jp
loopne
jg
stos
stos
jbe
push
cmp
aaa
add
inc
jno
dec
stos
sti
scas
dec
push
jbe
sub
test
jbe
cs
cmpl
push
add
xor
pop
jge
imul
stos
or
dec
push
jbe
roll
jp
cmpsl
jp
fsubs
cmp
and
enter
push
jecxz
jno
dec
test
jbe
xchg
sub
xchg
add
arpl
ret
pop
jns
add
mov
mov
mov
xor
pop
mov
jp
push
idivb
mov
shll
jp
outsl
jne
repnz
mov
idivb
mov
xchg
push
jp
ret
dec
stos
mov
push
xchg
push
add
data16
fldenv
add
bound
jbe
fldenv
adcb
xchg
push
add
and
jbe
fldt
jo
dec
jg
xor
jbe
fstps
or
jbe
invd
jns
pop
out
ss
jb
in
pop
dec
push
jbe
cmp
add
xor
pop
cld
lret
jl
push
jmp
add
push
inc
jo
dec
or
sarl
jo
dec
pop
jbe
dec
test
jbe
xchg
add
fsubs
decb
mov
jbe
rclb
xor
pop
jbe
inc
adc
add
jbe
pop
aam
mov
xchg
jne
push
add
xor
sub
bound
jp
and
cld
cs
ja
dec
cmpsl
add
xchg
add
pop
push
inc
jo
dec
cmpsl
add
xchg
add
or
jbe
fdivs
jbe
loop
sahf
jne
push
add
outsb
sbb
fsubrs
incl
push
inc
jo
dec
or
jp
push
add
jbe
dec
push
jbe
fsubs
add
xor
sti
addl
jnp
push
jbe
pop
test
jbe
or
sbb
fldenv
mov
pop
sbb
pop
mov
add
xor
ja
dec
cmpsl
mov
mov
stos
jnp
inc
push
jbe
fidivrl
jo
dec
mov
jbe
fstpt
jo
dec
stos
mov
mov
fildl
jp
stos
mov
jne
push
add
pop
inc
jo
dec
cmpsl
or
fldenv
add
jne
jbe
stos
jnp
inc
push
jbe
xchg
add
jne
push
add
outsb
sbb
pop
aam
nop
jne
jbe
push
out
pop
dec
pop
jbe
stos
xchg
jne
push
add
data16
push
mov
xchg
push
test
jbe
add
jbe
adc
push
jbe
loop
jo
dec
cmpsl
andb
jp
arpl
add
pop
test
inc
pop
jbe
mov
fidivrs
push
jbe
xchg
repnz
cmpsb
and
into
fbstp
dec
push
in
sbb
jbe
xchg
push
add
xor
mov
jns
cmp
push
pop
push
dec
push
jbe
lcall
lcall
push
jb
add
pop
call
cmp
arpl
cmp
jnp
xchg
cltd
cs
pop
mov
xor
out
inc
xchg
mov
cmp
pop
enter
cmpsb
sbb
jnp
inc
and
ret
mov
or
cmp
mov
jnp
push
jbe
push
sahf
jb
shlb
int
js
mov
int3
push
inc
dec
data16
bnd
or
jmp
xlat
xor
lea
loop
inc
popl
gs
push
mov
jbe
dec
xchg
push
jecxz
sahf
jbe
mov
add
cmp
sbb
cmp
mov
push
fwait
adc
mov
pop
jnp
push
jbe
push
test
jp
xchg
add
shlb
mov
rolb
pop
adc
push
popa
pop
adc
push
jbe
push
test
jp
xchg
add
clc
xor
jp
dec
xchg
mov
xchg
adc
xor
pop
push
pop
cmpsl
xchg
stos
mov
jle
pop
dec
sub
sti
jg
push
jbe
dec
push
jbe
pop
test
jbe
or
sbb
fldenv
mov
jl
fisubl
jo
dec
pushf
in
shll
jo
dec
mov
mov
loop
outsb
jnp
push
call
and
imul
xor
or
arpl
fwait
adc
pop
cmpsl
add
dec
push
jbe
xchg
add
dec
push
popa
test
arpl
or
stos
mov
mov
cs
jbe
push
jp
xor
jbe
lcall
dec
aaa
xchg
jne
dec
xchg
dec
push
loopne
fsubs
lret
dec
mov
jbe
push
fistpl
push
jbe
fcomps
push
mov
add
mov
xchg
addb
cli
add
jne
jmp
xlat
mov
lock
push
jnp
push
jbe
sarl
ja
dec
test
sbb
push
add
sub
add
dec
push
jbe
lcall
jp
arpl
mov
ret
outsl
xlat
stos
jbe
dec
push
add
and
and
push
decl
cmp
jbe
fldenv
cli
cmp
sti
ja
push
jbe
rcrl
jo
dec
stos
jle
fistl
jo
dec
out
pop
dec
push
jbe
cmp
add
xor
pop
push
rcrl
jo
dec
stos
mov
dec
aaa
pop
ret
pop
sarl
sbb
pop
aad
add
push
jo
dec
stos
sti
imul
cmp
sub
jae
xchg
cmpsb
push
rorl
jo
dec
inc
jne
dec
push
jns
inc
sbb
push
arpl
rcll
jo
dec
stos
sti
jae
push
jbe
push
and
addr16
push
jbe
jecxz
jo
dec
test
push
rcrl
jo
dec
mov
jb
dec
push
bound
fldenv
add
dec
sbb
fldenv
stos
dec
pop
and
dec
adc
test
rcrl
jo
dec
mov
jbe
dec
push
add
dec
sbb
rcll
mov
inc
jne
dec
out
pop
inc
push
jbe
dec
push
jbe
pop
test
jbe
or
sbb
push
and
dec
mov
ja
dec
test
idivb
push
jbe
push
pop
mov
shrb
ret
outsl
push
cmpsb
idivb
push
add
sbb
mov
test
pop
inc
push
jbe
roll
jo
dec
mov
jnp
push
mov
add
pop
and
outsl
xlat
imul
roll
jo
dec
mov
add
xor
jbe
fldcw
jle
cmpsl
add
dec
push
jbe
pusha
test
jbe
fwait
adc
pop
cmpsl
add
dec
push
jbe
roll
jo
dec
stos
ret
outsl
push
data16
mov
dec
stos
mov
pop
dec
push
jbe
xchg
sbb
clc
dec
pop
jmp
mov
loopne
fsubs
lret
dec
mov
jbe
push
add
dec
out
pop
dec
push
jbe
cmp
add
xor
pop
xor
jbe
rcr
test
into
push
jbe
fsubs
push
fisttpl
mov
dec
xchg
js
mov
stos
out
dec
push
add
dec
push
div
gs
out
dec
push
add
fldt
jge
imul
arpl
out
dec
push
add
dec
pop
jbe
mov
outsl
add
dec
jo
adc
sbb
fnstenv
push
fisttpl
jp
fldenv
push
fisttpl
mov
dec
xchg
ja
aaa
mov
dec
or
jns
push
add
and
jbe
xlat
out
js
dec
test
sahf
jle
adc
mov
jno
dec
jno
xlat
inc
shl
jp
xchg
inc
xchg
add
inc
mov
inc
mov
push
loopne
lcall
fdivr
push
pop
js
and
js
inc
stos
pop
scas
pop
loopne
lcall
mov
jnp
push
aas
jp
stos
jne
scas
xchg
xlat
sbb
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
cmc
pop
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
or
sub
stos
jmp
mov
mov
xchg
movsl
test
jg
int3
push
jo
add
test
cmp
data16
cmp
int
xor
faddl
cmp
test
ret
cmp
mov
sub
cmpsl
sarl
mov
sub
insl
mov
jg
push
outsl
cltd
or
in
mov
mov
out
pop
int
push
jb
push
pop
xchg
bound
dec
outsb
xchg
cmc
sbb
sahf
cli
nop
xchg
arpl
mov
stc
adc
imul
paddw
mov
lea
fnstcw
lods
dec
xchg
insb
or
arpl
cmp
mov
out
jne
fsts
pusha
sahf
push
and
lret
fstl
fadd
pusha
iret
int
cli
and
divb
mov
mov
test
inc
mov
jnp
fstl
add
dec
push
jbe
dec
push
jbe
cmc
pop
jbe
cmc
pop
jbe
cmc
pop
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
mov
fnstenv
movsb
fnstenv
dec
pop
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
ss
dec
push
jbe
xchg
jo
rcrb
loop
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
mov
ljmp
nop
out
jnp
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
dec
push
jbe
jl
bound
sarb
pusha
inc
lods
scas
sbb
push
daa
cltd
test
je
push
pop
into
mov
jle
shlb
rolb
mov
roll
or
daa
mov
mov
xor
jmp
and
leave
daa
mov
mov
xchg
sub
or
add
mov
rclb
jae
into
lods
and
test
add
jmp
repz
add
add
inc
ljmp
pushl
and
add
lcall
add
add
insb
in
add
jmp
incl
add
add
sub
add
jmp
and
add
in
add
incl
add
lods
and
add
add
call
add
add
shr
add
mov
and
add
out
add
lcall
add
in
add
jmp
and
add
pushl
add
je
add
mov
call
add
pushf
add
dec
repnz
lcall
sub
add
repnz
dec
sbb
add
sub
add
repz
dec
repz
repz
jbe
add
xchg
add
mov
repz
into
repz
add
add
in
repz
add
add
or
add
push
hlt
add
sub
add
ss
add
inc
hlt
add
dec
hlt
add
pop
hlt
add
push
hlt
add
xor
add
hlt
add
mov
hlt
add
mov
add
mov
hlt
add
shl
add
fdivp
add
call
hlt
add
cli
hlt
add
or
add
push
cmc
add
and
add
sub
add
xor
add
inc
cmc
add
dec
cmc
add
push
cmc
add
pusha
cmc
add
outsb
cmc
add
js
add
xor
add
add
mov
cmc
add
mov
add
mov
cmc
add
add
repnz
add
cmc
add
push
testb
adc
add
sbb
add
sub
add
xor
add
inc
testb
dec
testb
pop
testb
data16
jb
add
jl
add
xchg
testb
sahf
testb
test
add
mov
add
mov
testb
shl
add
fdiv
add
loop
add
ljmp
add
testb
or
add
adc
add
sbb
add
testl
add
add
dec
testl
add
add
insb
testl
add
add
add
add
mov
testl
add
testl
add
add
and
add
sub
add
cmp
add
inc
clc
add
push
clc
add
fs
add
je
add
test
add
pushf
clc
add
cmpsb
clc
add
mov
clc
add
clc
add
out
add
clc
clc
add
or
add
sbb
add
sub
add
cmp
add
dec
stc
add
pop
stc
add
push
add
cmp
add
stc
add
mov
add
stc
add
fdivr
add
loop
add
hlt
stc
add
add
add
push
cli
add
sub
add
inc
cli
add
push
cli
add
pusha
cli
add
jp
add
xchg
add
cwtl
cli
add
mov
cli
add
lret
add
cli
add
lock
add
add
add
adc
add
sub
add
cmp
add
dec
sti
add
add
add
data16
add
jl
add
mov
add
pushf
sti
add
mov
add
sar
add
sti
add
repnz
add
add
add
sbb
add
sub
add
inc
cld
add
push
cld
add
outsb
cld
add
cmp
add
add
ret
add
cld
add
repnz
add
add
add
sbb
add
xor
add
inc
std
add
push
std
add
fs
add
jbe
add
mov
add
lcall
add
std
add
out
add
hlt
std
add
add
add
sbb
add
push
incb
add
add
je
add
mov
add
mov
incb
add
incb
add
incb
add
incb
add
incl
add
incl
add
add
add
incl
add
add
dec
incl
add
add
incw
add
add
mov
add
lcall
add
add
add
out
incl
add
add
adc
add
and
add
xor
add
inc
add
add
add
bound
add
jle
add
mov
add
sahf
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sub
add
cmp
add
dec
add
add
add
outsb
add
add
add
mov
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
insb
add
add
add
mov
add
cwtl
add
add
add
lret
add
add
add
add
add
add
adc
add
and
add
cmp
add
inc
add
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
insb
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
add
add
xchg
add
test
add
ret
add
add
add
add
add
incb
add
and
add
xor
add
dec
push
add
pop
push
add
push
add
addb
add
push
add
mov
add
movb
add
push
add
repnz
add
or
add
push
pop
add
xor
add
inc
pop
add
push
pop
add
outsb
pop
add
jl
add
mov
add
mov
add
add
pop
add
faddl
add
lock
add
or
add
push
or
add
or
add
add
outsb
or
add
or
add
or
add
or
add
or
add
or
add
add
and
add
cmp
add
push
or
add
add
xchg
add
lcall
add
or
add
or
add
or
add
or
add
or
add
add
or
add
add
pusha
or
add
add
mov
add
mov
or
add
or
add
or
add
or
add
or
add
or
add
add
push
or
add
add
jbe
add
mov
add
add
add
cmpsb
or
add
or
add
or
add
or
add
add
and
add
add
dec
or
add
add
add
xchg
or
add
add
lock
add
or
add
ss
add
insb
or
add
mov
add
mov
or
add
or
add
sbb
add
xor
add
inc
push
add
pop
push
add
jb
add
mov
add
cmpsb
push
add
les
add
fmull
add
or
add
sbb
add
lar
inc
lar
pop
lar
jbe
add
mov
add
add
add
mov
add
les
add
loopne
add
hlt
lar
push
adc
add
adc
add
adc
add
add
pusha
adc
add
add
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
dec
adc
add
add
add
test
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
add
jbe
add
mov
add
cwtl
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
dec
adc
add
add
push
add
jp
add
xchg
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
sbb
add
adc
add
add
dec
adc
add
add
add
adcb
lcall
add
adc
add
adc
add
adc
add
adc
add
add
and
add
xor
add
push
adc
add
jb
add
test
add
mov
adc
add
adc
add
cli
adc
add
push
push
add
sub
add
inc
push
add
push
push
add
bound
add
outsb
push
add
adcb
add
add
mov
push
add
ficoml
add
out
add
repnz
add
or
add
and
add
xor
add
inc
pop
add
add
add
pusha
pop
add
js
add
nop
pop
add
lcall
add
pop
add
fcoml
add
out
add
add
add
adc
add
xor
add
cmp
add
dec
sbb
add
add
sbbb
add
sbb
add
sbb
add
sbb
add
sbb
add
add
and
add
cmp
add
push
sbb
add
add
add
movsb
sbb
add
sbb
add
sbb
add
sbb
add
add
sbb
add
add
push
sbb
add
add
insb
sbb
add
add
test
add
mov
add
les
add
fcomps
add
call
sbb
add
add
sbb
add
xor
add
inc
sbb
add
add
sbb
add
add
jl
add
mov
add
lcall
add
add
add
add
je
imul
outsl
outsb
dec
outsb
outsw
push
add
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
jne
jb
push
popa
insb
jne
push
add
or
push
gs
imul
push
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
gs
popa
outsb
addr16
addr16
popa
insl
gs
add
push
add
je
imul
outsl
outsb
dec
outsb
outsw
push
imul
push
gs
jne
jb
push
popa
insb
jne
inc
add
push
inc
push
push
dec
dec
dec
cs
insb
add
add
je
jb
imul
pop
inc
pop
pop
pop
add
jne
jo
jb
add
add
outsb
gs
je
adc
pop
bound
imul
fs
add
add
jae
gs
bound
add
cmp
jo
jb
les
pop
pop
jo
pop
outsl
jae
gs
add
gs
popa
imul
sub
jae
jb
outsl
jne
add
add
fs
jae
pop
imul
add
arpl
add
ja
jae
outsl
insl
bound
add
jb
pop
add
arpl
add
imul
pop
imul
ja
jae
jo
add
pop
add
push
add
ja
jae
jo
add
dec
add
jae
imul
add
pop
ja
imul
imul
gs
arpl
add
cmp
arpl
pop
jne
ja
outsb
xor
add
add
jae
imul
je
insb
outsl
ja
jb
imul
mov
insb
outsb
jne
add
add
outsb
ja
jb
outsb
je
add
out
pop
popa
arpl
jae
add
insb
add
add
jo
pop
imul
pop
pop
arpl
inc
imul
ja
jae
outsb
add
incb
popa
outsb
add
std
add
jne
arpl
insb
add
pop
inc
dec
jae
jb
add
outsl
jae
add
filds
arpl
add
add
jae
imul
add
jb
add
adc
aas
aas
xor
inc
pop
push
inc
pop
inc
pop
add
lret
jae
popa
insb
jo
popa
add
adc
aas
aas
xor
gs
imul
inc
inc
inc
pop
pop
add
add
outsb
imul
add
imul
je
outsb
imul
pop
popa
arpl
insb
outsb
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
add
add
insl
jae
pop
gs
je
add
insb
add
add
jae
je
jae
jb
popa
je
gs
add
push
add
push
add
bound
outsl
ja
jae
add
ja
jae
je
add
add
js
push
push
js
gs
imul
pop
jae
jo
imul
pop
ja
jae
ja
add
jne
push
arpl
add
insb
insb
outsl
outsb
gs
je
syscall
jae
popa
outsb
add
je
add
ja
jae
popa
je
add
pop
ja
outsl
insb
add
pop
inc
dec
popa
arpl
add
add
outsb
data16
push
add
jae
outsb
add
insb
jo
popa
add
ja
jae
arpl
add
pop
imul
pop
add
outsl
arpl
add
popa
imul
leave
add
jae
jo
imul
add
add
sbb
insb
outsb
add
into
add
jae
imul
add
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
or
aas
aas
xor
arpl
je
outsl
outsb
inc
inc
push
inc
inc
inc
inc
inc
push
xor
pop
add
add
outsl
imul
xchg
popa
insb
insb
outsl
arpl
add
jbe
jb
cs
insb
add
add
gs
je
inc
imul
add
je
imul
add
inc
jb
popa
je
push
outsb
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
inc
jb
popa
je
inc
dec
inc
imul
add
je
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
gs
gs
inc
outsl
insb
outsl
jb
add
add
je
outsb
inc
outsl
js
cli
add
insb
imul
inc
jb
popa
je
push
outsl
insb
imul
add
add
je
gs
arpl
popa
jo
add
add
gs
dec
bound
arpl
sub
inc
gs
gs
inc
js
outsb
je
outsl
imul
dec
add
insb
insb
push
outsb
add
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
bound
arpl
add
add
gs
je
inc
inc
inc
add
inc
jb
jae
dec
jb
inc
js
sbb
inc
gs
je
arpl
bound
arpl
or
inc
gs
bound
arpl
jo
add
inc
js
push
gs
arpl
imul
dec
add
gs
je
inc
outsl
outsb
je
add
add
je
gs
dec
gs
imul
inc
insb
outsl
jae
dec
gs
inc
imul
insb
arpl
imul
add
je
insb
imul
pop
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
insl
bound
gs
outsb
add
xor
inc
gs
gs
dec
gs
imul
inc
gs
imul
inc
js
inc
js
add
inc
imul
outsl
jb
add
push
arpl
gs
imul
je
js
add
outsl
dec
push
add
add
arpl
gs
insb
imul
lds
push
gs
dec
jne
inc
add
jle
push
arpl
gs
imul
inc
js
inc
js
add
inc
jb
popa
je
push
popa
je
gs
inc
jb
jae
add
dec
add
gs
je
inc
outsl
outsb
je
outsb
imul
push
add
gs
je
push
popa
insb
gs
add
js
push
gs
dec
jne
inc
add
add
je
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
gs
outsl
jb
inc
inc
add
jb
popa
je
dec
gs
inc
imul
popa
je
insb
je
add
push
popa
insb
gs
gs
outsb
je
imul
gs
jne
jb
outsb
je
bound
arpl
sub
inc
gs
gs
inc
js
outsb
je
outsl
imul
std
add
je
popa
jo
outsl
fs
roll
je
gs
push
je
add
add
gs
dec
gs
inc
imul
data16
je
imul
dec
jb
inc
js
test
push
gs
arpl
insb
gs
add
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
inc
add
je
gs
dec
jne
push
add
dec
xor
cs
insb
add
imul
jbe
arpl
popa
je
bound
add
dec
outsb
imul
inc
arpl
add
gs
push
gs
imul
fs
arpl
jae
inc
insb
insb
outsl
ja
fs
arpl
push
add
addr16
insb
jne
push
mov
push
arpl
imul
imul
outsb
gs
add
add
jns
je
gs
popa
jae
push
popa
jb
insl
add
add
outsb
push
push
push
outsl
imul
xchg
add
imul
arpl
jne
je
popa
insl
gs
add
dec
add
addr16
gs
gs
push
popa
insb
jne
inc
add
jae
gs
jb
arpl
jne
fs
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
ja
inc
outsl
outsb
jbe
jb
push
je
imul
outsl
push
imul
gs
jne
jb
dec
outsb
outsw
dec
gs
add
ret
add
je
push
push
outsl
imul
add
jo
inc
jb
popa
je
dec
popa
jae
add
add
insb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
outsb
jbe
jb
push
imul
outsb
addr16
imul
popa
imul
insb
push
gs
popa
je
jbe
push
inc
add
addl
gs
popa
insb
jne
push
add
pop
add
je
jb
arpl
outsb
popa
bound
gs
insb
add
jo
inc
arpl
imul
gs
inc
add
pop
add
je
jb
arpl
outsb
popa
bound
insb
popa
addr16
push
add
addr16
outsb
jne
dec
gs
add
push
gs
gs
popa
insb
jne
inc
add
jno
push
gs
jne
jb
push
popa
insb
jne
push
add
cmp
push
gs
jb
popa
je
dec
gs
js
add
add
addr16
jb
popa
je
dec
gs
js
add
inc
gs
jae
jb
popa
insl
gs
add
data16
addr16
jo
outsb
dec
gs
add
push
gs
jo
outsb
dec
gs
js
add
push
arpl
imul
imul
outsl
jne
add
dec
add
addr16
outsb
jne
dec
gs
add
add
addr16
gs
gs
dec
gs
add
jo
inc
gs
jb
jns
popa
jae
add
jne
inc
outsl
outsb
jbe
jb
push
je
imul
jb
je
inc
gs
jb
jo
outsl
jb
outsl
push
arpl
imul
imul
add
push
gs
outsb
jne
dec
gs
js
add
imul
arpl
jne
je
imul
je
gs
imul
jne
add
push
add
arpl
outsl
imul
gs
bound
jae
imul
gs
outsb
addr16
push
imul
je
imul
push
gs
imul
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
test
push
imul
outsb
je
outsl
jne
arpl
add
dec
add
addr16
gs
gs
push
popa
insb
jne
push
add
inc
outsl
jo
push
imul
inc
outsb
jne
dec
gs
js
add
push
inc
push
dec
xor
cs
insb
add
sbb
dec
gs
popa
addr16
outsl
js
add
push
jns
inc
outsl
insb
outsl
jb
dec
add
arpl
outsb
jne
je
insl
add
ja
jo
imul
add
insb
insb
push
imul
outsl
arpl
out
dec
jae
imul
popa
bound
add
fs
gs
popa
addr16
add
loopne
inc
outsb
popa
bound
outsb
jne
je
insl
add
pop
add
fs
je
push
imul
xor
inc
push
js
inc
add
push
outsl
jae
push
jne
je
gs
popa
add
add
outsb
jae
popa
je
dec
gs
popa
add
fadds
dec
jae
insb
addr16
jne
je
outsb
inc
push
add
into
add
ja
outsl
arpl
push
arpl
add
fs
arpl
push
add
inc
insb
addr16
je
insl
push
gs
inc
add
push
imul
popa
jae
inc
add
jnp
push
arpl
outsb
push
outsl
inc
insb
imul
add
fs
popa
imul
dec
jae
push
popa
imul
je
jo
gs
bound
arpl
incl
inc
js
je
imul
js
inc
add
imul
jae
addr16
add
loop
inc
outsb
popa
bound
imul
pop
add
imul
popa
jae
inc
js
add
sahf
add
je
insb
addr16
je
insl
push
gs
push
add
add
insb
insb
push
imul
outsl
arpl
ljmp
outsl
ja
imul
add
popa
jb
jb
jbe
add
jo
je
push
popa
addr16
add
roll
push
gs
imul
outsb
addr16
add
push
add
imul
arpl
outsb
add
pop
add
fs
ja
imul
addb
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
ja
gs
push
add
inc
gs
gs
popa
addr16
outsl
jae
xor
inc
push
ja
jb
add
roll
dec
jae
push
outsb
add
je
popa
jb
outsb
je
push
push
inc
push
xor
cs
insb
add
bound
push
popa
je
inc
fs
popa
arpl
insb
popa
jae
push
add
push
je
inc
insl
jo
dec
inc
add
add
inc
gs
gs
push
popa
insb
jne
inc
add
mov
push
popa
je
dec
jae
gs
popa
je
jbe
push
add
push
jb
inc
popa
outsb
outsl
outsb
imul
push
add
push
add
jb
jne
push
add
push
je
push
outsl
dec
outsb
je
js
add
push
jb
arpl
jns
add
js
push
je
push
outsl
dec
outsb
je
add
push
je
inc
insl
jo
dec
push
add
gs
gs
outsl
outsl
insb
push
push
push
popa
insb
jne
push
add
xchg
add
insb
dec
jae
add
dec
add
jb
insl
jo
add
add
je
push
gs
outsl
jbe
inc
imul
add
push
je
push
je
dec
inc
add
arpl
push
je
push
inc
push
mov
push
jb
jbe
dec
jne
bound
push
add
push
je
push
gs
outsl
inc
jne
push
add
insb
add
je
inc
jo
outsb
fs
add
inc
imul
outsb
jae
outsl
outsb
inc
add
xchg
add
je
inc
jb
popa
je
inc
jb
insl
push
jb
push
add
inc
add
jb
push
add
inc
jae
outsl
arpl
gs
push
je
imul
push
popa
je
inc
imul
dec
popa
insl
gs
add
push
je
inc
push
add
je
dec
jae
dec
inc
push
add
xchg
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
aad
push
popa
je
push
gs
outsl
jbe
inc
insb
popa
outsb
imul
mov
push
popa
je
dec
jae
outsl
outsl
je
add
add
je
push
gs
outsl
jbe
inc
popa
arpl
insb
popa
jae
push
add
xchg
add
jae
jb
outsb
je
inc
add
outsl
add
jb
je
dec
push
add
xchg
add
insb
push
outsb
gs
popa
jo
push
add
xchg
add
je
inc
imul
dec
popa
insl
gs
add
push
je
inc
jo
push
add
add
inc
gs
gs
push
popa
insb
jne
push
add
cli
add
inc
gs
gs
dec
gs
add
inc
add
jb
popa
je
add
add
inc
gs
popa
insb
jne
push
add
add
je
push
je
imul
je
add
inc
add
jb
insl
jo
push
add
jae
insb
ja
jo
cs
insb
add
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
push
dec
inc
gs
imul
add
add
inc
gs
gs
je
jo
outsl
insb
fs
add
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
inc
add
inc
push
dec
outsl
je
data16
add
dec
inc
gs
outsl
insb
fs
popa
je
push
add
inc
add
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
sbb
inc
jb
addr16
jne
jb
inc
imul
push
dec
inc
imul
jb
outsb
je
add
add
addr16
jne
jb
inc
imul
inc
outsl
insl
insl
popa
outsb
fs
imul
addr16
add
mov
push
push
js
arpl
gs
add
push
dec
inc
imul
je
outsl
outsb
push
add
test
push
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
add
gs
insb
inc
js
arpl
gs
js
add
insb
inc
js
arpl
gs
add
je
jo
arpl
insb
inc
outsl
insb
fs
popa
je
push
add
push
dec
inc
gs
popa
insb
insb
outsl
arpl
push
dec
inc
dec
dec
xor
cs
insb
add
add
jb
popa
outsb
je
outsl
jo
add
je
imul
dec
outsb
add
mov
dec
outsl
popa
fs
imul
add
add
je
arpl
gs
bound
arpl
add
jb
popa
outsb
je
outsb
imul
gs
jb
popa
jns
outsb
popa
arpl
jae
inc
popa
je
add
add
jb
popa
outsb
je
outsl
jo
dec
outsb
add
movl
jb
outsl
jb
outsb
outsw
add
xchg
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
inc
jb
gs
je
imul
popa
gs
jb
popa
jns
jb
popa
je
add
add
jae
je
imul
add
add
jae
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
add
gs
jb
popa
jns
arpl
jae
inc
popa
je
add
add
gs
jb
popa
jns
gs
insb
gs
outsb
je
adc
push
popa
gs
jb
popa
jns
gs
inc
outsl
jne
add
add
push
jns
push
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
add
jb
popa
outsb
je
push
push
jns
gs
add
gs
je
inc
jb
outsl
jb
outsb
outsw
add
imul
jo
dec
imul
jae
insb
insb
outsl
arpl
jb
outsb
addr16
jns
gs
outsb
add
fs
jns
gs
imul
jb
popa
outsb
je
insb
gs
jb
add
imul
outsb
addr16
jns
gs
js
sbb
push
popa
gs
jb
popa
jns
jne
inc
insb
gs
outsb
je
outsl
insb
gs
jne
xor
cs
insb
add
inc
add
gs
gs
gs
imul
jne
add
add
gs
outsl
popa
fs
jb
insl
push
je
gs
insl
add
inc
outsl
push
imul
popa
jae
dec
bound
arpl
add
inc
gs
bound
arpl
outsb
je
js
add
mov
inc
jb
popa
je
dec
insb
gs
fs
jae
dec
outsl
insb
fs
imul
jb
popa
je
inc
outsl
arpl
insb
gs
outsb
dec
dec
outsl
arpl
jns
gs
add
inc
outsl
dec
outsb
imul
push
arpl
imul
outsl
push
outsb
insl
popa
jb
push
je
jb
popa
arpl
add
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
add
gs
gs
outsb
jne
push
gs
jae
add
push
gs
gs
jae
dec
popa
jb
push
je
add
xchg
push
jb
je
inc
insb
popa
jae
push
je
add
inc
outsl
dec
outsb
imul
add
adc
inc
dec
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
inc
outsl
push
gs
jb
js
inc
insb
popa
outsb
imul
xor
inc
outsl
inc
gs
insb
popa
jae
dec
bound
arpl
daa
add
inc
jb
gs
outsb
jne
gs
imul
jae
sahf
add
je
jne
outsb
imul
arpl
bound
cmp
inc
outsl
inc
gs
outsb
je
jb
popa
arpl
outsb
fs
gs
gs
jae
push
je
gs
insl
add
jae
inc
outsl
push
popa
jae
dec
gs
push
gs
insb
insb
outsl
arpl
add
push
je
dec
jae
je
jb
addr16
imul
je
inc
jb
popa
je
inc
outsl
arpl
insb
add
inc
add
dec
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
push
jb
jo
popa
jb
popa
outsb
je
outsl
jo
add
inc
outsl
push
outsb
imul
imul
inc
outsl
dec
popa
jb
push
je
jb
popa
arpl
add
push
je
dec
jo
outsb
push
je
jb
add
inc
add
gs
gs
gs
jae
jb
jns
add
inc
outsl
dec
outsb
imul
inc
js
add
dec
insb
gs
popa
jbe
push
outsl
push
je
gs
insl
add
popa
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
popa
je
inc
popa
je
inc
fs
jae
dec
outsl
insb
fs
add
push
je
imul
inc
push
dec
inc
xor
push
add
outsl
jo
popa
jb
popa
outsb
je
insb
gs
jb
add
add
inc
imul
arpl
push
arpl
pushf
add
je
inc
insb
outsl
bound
inc
jb
insl
push
je
gs
insl
add
xlat
add
push
popa
jb
gs
imul
popa
insl
add
adc
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
outsl
dec
popa
jb
push
je
jb
push
dec
outsb
je
jb
popa
arpl
outsb
push
je
gs
insl
add
dec
insb
gs
outsb
imul
add
dec
insb
gs
outsb
imul
imul
je
imul
dec
dec
inc
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
js
add
add
inc
inc
jb
insl
push
je
imul
xor
cs
insb
add
add
je
push
je
bound
data16
inc
imul
arpl
add
arpl
imul
jo
imul
fs
push
je
push
je
bound
data16
push
gs
gs
jae
add
add
jb
gs
gs
popa
insb
insb
xor
add
inc
push
je
push
je
bound
data16
pop
push
gs
gs
jae
add
lahf
add
jb
insb
imul
insb
xor
add
dec
push
outsb
imul
outsb
pop
inc
fs
gs
push
jb
js
add
add
jb
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
fs
jb
insl
push
je
imul
dec
fs
je
bound
jb
popa
jb
imul
je
outsl
outsb
add
add
je
push
je
bound
data16
inc
outsl
outsb
outsb
arpl
sbb
inc
push
je
push
je
bound
data16
dec
jae
dec
inc
push
jne
jo
jb
gs
add
je
push
je
bound
data16
inc
bound
push
gs
gs
gs
gs
jae
add
add
jb
insb
insb
push
outsb
jb
imul
outsl
js
add
push
gs
gs
outsb
jno
imul
add
rolb
dec
fs
insb
insb
push
imul
outsl
js
add
fs
je
bound
data16
push
jne
jb
dec
outsb
je
jb
popa
arpl
test
push
jo
inc
jo
gs
insb
jbe
inc
imul
xor
dec
fs
je
bound
insb
insb
xor
add
push
gs
jb
push
outsl
push
gs
data16
imul
outsb
pop
push
jne
jb
dec
outsb
je
jb
popa
arpl
push
jb
js
add
add
imul
outsb
addr16
add
push
jo
inc
imul
jb
insl
push
je
imul
imul
add
arpl
jb
outsb
addr16
imul
popa
jb
gs
add
push
add
jb
insb
gs
insb
insb
outsl
arpl
add
arpl
push
jo
inc
imul
jb
add
les
push
jo
push
gs
gs
imul
inc
js
add
push
jne
fs
jb
popa
je
add
movl
gs
gs
outsb
jb
imul
add
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
add
jb
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
push
jo
inc
imul
outsl
push
je
imul
imul
add
arpl
jb
gs
imul
je
dec
outsb
outsw
push
add
sbb
inc
push
je
push
je
bound
data16
dec
outsb
jbe
imul
add
je
push
je
bound
data16
inc
bound
push
gs
gs
jne
jb
dec
outsb
je
jb
popa
arpl
add
add
imul
outsb
addr16
add
add
jb
insb
gs
jb
add
add
outsb
imul
outsb
pop
push
gs
gs
jae
pop
push
jb
js
add
rolb
push
jo
push
gs
gs
jae
push
jb
je
gs
jo
add
repz
arpl
jb
outsb
addr16
imul
outsl
insl
jo
jae
push
add
jnp
push
jo
inc
imul
arpl
inc
jb
add
adc
fs
je
bound
data16
inc
fs
data16
inc
push
push
xor
fs
insb
add
push
add
outsl
jo
jb
jns
push
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
sub
dec
insl
popa
addr16
imul
popa
je
add
xor
dec
insl
popa
addr16
imul
ja
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
insb
popa
arpl
arpl
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
add
imul
inc
outsl
outsb
je
outsl
insb
jae
add
push
jb
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
daa
add
insb
gs
imul
jae
gs
push
imul
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
mov
bound
inc
jb
add
pop
add
jb
popa
je
gs
popa
addr16
add
push
add
outsl
jae
dec
popa
outsb
fs
add
popa
je
inc
imul
gs
jb
arpl
jae
gs
jo
add
push
gs
jb
outsl
jb
outsl
fs
stos
add
gs
je
push
jb
arpl
jae
add
push
add
outsb
fs
gs
jne
arpl
add
inc
gs
je
dec
popa
outsb
fs
add
sbb
inc
js
je
jb
arpl
jae
bound
gs
imul
bound
gs
add
movsb
add
je
gs
imul
inc
outsl
insl
jo
jb
push
je
imul
add
imul
jb
gs
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
inc
imul
jne
arpl
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
cmp
inc
gs
inc
dec
inc
push
add
in
add
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
add
popa
jo
je
imul
add
je
js
je
outsl
fs
jb
arpl
jae
add
inc
imul
je
imul
inc
imul
outsl
dec
outsl
arpl
inc
imul
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
loopne
inc
imul
push
dec
imul
popa
insb
insb
jae
add
dec
jae
bound
addr16
jb
jae
outsb
je
inc
add
popa
insb
inc
insb
insb
outsl
arpl
add
add
inc
inc
inc
push
dec
gs
fs
jns
add
cli
add
popa
imul
insb
gs
bound
arpl
add
imul
jb
je
arpl
movl
gs
inc
gs
je
imul
push
add
dec
add
insb
outsb
push
add
jne
inc
gs
jns
je
insl
dec
outsb
outsw
add
add
je
jne
jb
outsb
je
jb
arpl
jae
xchg
inc
jb
popa
je
inc
jbe
outsb
je
add
rolb
insb
outsl
bound
dec
outsl
arpl
add
push
push
dec
outsl
arpl
add
push
gs
insl
gs
push
add
inc
add
arpl
push
add
sti
add
inc
popa
fs
jb
je
push
je
add
add
popa
imul
je
jo
gs
bound
arpl
add
insb
jae
jb
jo
inc
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
imul
jne
jb
add
mov
push
insb
gs
bound
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
inc
imul
gs
outsl
fs
gs
popa
outsb
fs
gs
add
popf
add
je
jae
jb
gs
jne
je
inc
dec
inc
add
aad
inc
gs
jb
jbe
push
jns
gs
add
push
gs
imul
gs
add
add
je
jb
jbe
push
jns
gs
add
je
insl
push
imul
insb
gs
imul
dec
outsl
popa
fs
imul
js
add
sbb
je
push
outsb
ja
outsb
add
push
imul
imul
jns
add
out
inc
gs
imul
bound
gs
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
imul
repnz
je
imul
movl
jne
jb
outsb
je
push
dec
add
popf
add
gs
je
dec
jne
gs
add
xchg
inc
gs
gs
jo
popa
je
inc
add
mov
gs
je
dec
popa
outsb
fs
add
inc
add
arpl
inc
add
std
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
jge
dec
jo
outsb
dec
jne
gs
add
scas
add
je
outsl
outsb
jae
insb
gs
outsl
fs
add
gs
imul
aas
add
fs
imul
js
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
insb
jae
jb
insl
jo
push
add
add
arpl
inc
add
mov
dec
jne
jo
je
bound
push
je
imul
add
gs
push
push
jb
outsl
jb
je
add
inc
imul
inc
imul
gs
outsl
fs
gs
popa
outsb
fs
gs
add
push
push
je
imul
inc
add
or
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
dec
add
insb
outsb
inc
add
ret
add
je
jne
jb
outsb
je
jb
arpl
jae
add
je
inc
outsl
outsb
jae
insb
gs
add
add
outsb
fs
imul
gs
add
roll
dec
gs
jo
jb
add
arpl
inc
outsl
insl
jo
jb
push
je
imul
add
je
js
je
outsl
fs
push
add
dec
outsl
arpl
push
imul
inc
gs
jns
je
insl
inc
imul
jns
add
add
gs
imul
outsl
arpl
jae
add
insb
jae
jb
jo
outsb
inc
add
add
outsb
fs
insb
outsl
jae
add
push
gs
jbe
outsb
je
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
out
add
je
jb
outsl
arpl
fs
js
push
add
add
gs
inc
imul
gs
outsl
insl
insl
popa
outsb
fs
imul
push
imul
insb
insb
outsl
arpl
add
push
dec
inc
dec
xor
cs
insb
add
test
push
je
dec
outsb
imul
gs
je
imul
push
je
dec
je
je
je
jae
outsl
inc
outsl
jae
jb
outsl
jb
pop
pop
pop
ja
jae
ja
add
push
gs
popa
arpl
arpl
imul
imul
xchg
pop
jae
jb
push
add
dec
jo
outsb
inc
imul
jns
bound
arpl
pop
pop
arpl
jae
imul
add
je
push
jb
imul
arpl
gs
je
imul
inc
bound
jb
popa
imul
outsb
je
jbe
push
je
inc
outsb
jae
push
je
imul
imul
jb
outsb
add
mov
outsb
arpl
add
add
insb
inc
gs
jb
jns
gs
jo
add
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
and
inc
jno
popa
insb
push
outsb
imul
jb
outsb
add
je
inc
outsl
jo
push
outsb
imul
jb
outsb
add
add
dec
je
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
jb
arpl
jae
cmpsl
add
insb
dec
outsb
imul
add
pop
ja
jae
imul
push
je
js
outsb
imul
jb
outsb
addr16
outsl
inc
outsb
jae
push
imul
je
jne
jb
push
arpl
imul
je
cmp
je
push
jne
jb
inc
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
push
add
dec
je
popa
jo
imul
arpl
outsb
add
into
add
insb
inc
jb
popa
je
push
outsb
imul
jb
outsb
add
cld
add
push
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
imul
je
push
jb
je
push
imul
insb
jne
add
push
imul
insl
gs
imul
pop
ja
jae
jo
add
jb
dec
je
jo
outsb
push
jb
arpl
jae
outsl
imul
add
add
push
jb
je
inc
imul
insb
inc
outsl
jae
popa
je
dec
popa
insl
gs
outsl
dec
je
popa
je
dec
popa
insl
gs
push
add
mov
push
je
push
jne
inc
jne
push
jns
imul
insb
push
gs
gs
jae
push
gs
jne
arpl
add
jb
popa
je
push
arpl
outsb
add
add
je
dec
jne
je
inc
jns
gs
outsl
push
outsb
imul
add
inc
insb
gs
jb
imul
jo
imul
push
je
inc
insb
insb
outsl
arpl
gs
gs
jo
sbb
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
inc
imul
insb
push
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
inc
arpl
outsb
je
insb
insb
cs
insb
add
add
imul
js
add
outsl
jae
inc
outsl
outsb
je
add
add
je
popa
jbe
inc
imul
add
adc
push
popa
addr16
gs
jo
insb
addr16
add
inc
push
inc
outsl
insb
outsl
jb
add
sldt
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
add
je
popa
jbe
inc
imul
add
or
inc
gs
imul
inc
add
add
addr16
gs
jo
insb
addr16
add
add
je
jo
outsb
inc
imul
add
sbb
push
jb
outsb
je
insb
addr16
add
outsb
je
insb
addr16
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
push
add
outsl
outsl
jae
inc
outsl
outsb
je
add
add
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
add
outsb
fs
gs
inc
add
add
outsb
fs
gs
push
add
insl
fs
xor
cs
insb
