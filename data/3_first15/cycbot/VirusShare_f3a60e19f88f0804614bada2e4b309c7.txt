rolb
dec
addr16
pop
lret
lret
pop
or
jecxz
add
ljmp
xor
or
mov
inc
lcall
testb
lret
add
mov
inc
add
clc
fisubl
mov
rolb
clc
hlt
out
pop
dec
orl
out
rolb
mov
inc
jb
mov
jne
cmpsb
xor
mov
mov
cmp
push
jl
popa
cltd
mov
inc
aas
xchg
push
stos
sub
ret
cmpl
mov
inc
lret
xor
rolb
xor
or
stos
iret
das
mov
cmp
dec
push
jl
gs
mov
rolb
inc
dec
data16
mov
gs
xchg
or
mov
dec
mov
pop
jne
or
jmp
add
add
mov
adc
movsb
add
mov
imul
xor
stos
jb
mov
subl
and
add
jbe
push
aas
and
scas
push
inc
cwtl
gs
std
jbe
sub
sub
or
fsubs
fnstenv
jp
mov
pop
mov
in
out
lahf
ja
popa
xlat
aas
iret
sbb
add
jle
push
stc
repnz
stc
lds
outsb
cmpsl
and
je
jg,pt
add
pop
pop
rolb
fs
out
sbb
inc
dec
je
or
rolb
mov
sbb
and
cs
xor
mov
jno
out
add
mov
or
push
arpl
xchg
adc
jmp
add
mov
add
add
xlat
push
cld
mov
mov
mov
mov
mov
mov
xchg
sti
mov
cwtl
sbb
cmp
clc
or
into
popa
mov
and
add
fcompl
jne
and
int
in
pop
daa
mov
add
push
push
push
add
ficomps
ret
std
mov
imul
mov
sub
pop
mov
add
and
int
dec
adc
mov
fwait
sahf
loop
mov
xchg
enter
inc
sbb
cpuid
add
lods
dec
jp
add
fs
out
imulb
inc
cmpsb
arpl
aad
ret
push
stos
aam
dec
pop
and
pop
fistpl
iret
xchg
cmpsl
sbb
aam
jp
xchg
pop
pop
das
popa
mov
mov
xchg
jne
xchg
repz
mov
cmpsb
pop
push
insb
lods
mov
inc
add
outsl
add
add
add
in
mov
or
mov
push
mov
divl
add
add
xor
dec
pushf
xor
mov
add
call
pusha
add
mov
imul
jae
pop
dec
test
hlt
jb
mov
sbb
sbb
jmp
add
add
mull
push
adc
outsb
xchg
repz
ljmp
inc
add
lods
push
cmp
and
cmp
add
mov
add
fidivl
stos
xlat
push
push
test
mov
movsb
roll
aaa
cmp
add
adc
add
cmpl
mov
xchg
add
addb
movsl
dec
repz
cmpsl
pop
mov
add
rcll
add
add
ja
add
mov
cmp
add
mov
mov
mov
or
popa
sbb
mov
add
add
in
push
dec
cmpsl
mov
movb
incl
rolb
stc
lcall
push
fdivl
in
ljmp
adc
add
add
repnz
mov
adc
mov
adc
mov
adc
mov
pop
test
imull
cld
adc
movsb
pop
test
or
stc
mov
scas
shll
mov
fbstp
add
mov
pop
pop
or
daa
insl
mov
sbb
push
in
or
movl
js
lds
add
add
mov
mov
xor
mov
xor
mov
pop
push
outsl
inc
add
call
mov
movsl
mov
jg
or
add
xchg
negl
push
jae
sbb
movsl
loop
mov
add
mov
inc
add
insb
aaa
fs
test
mov
add
sti
jg
add
mov
jmp
pop
mov
sub
push
add
fnstsw
fistpl
push
xlat
add
mov
mov
mov
mov
add
sbb
fnstsw
jle
sbb
xor
mov
inc
sbbl
xchg
add
call
in
jge
leave
ret
data16
push
cmp
mov
icebp
jae
mov
inc
in
aad
dec
pop
scas
pop
int
in
fmul
xchg
push
inc
call
jle
inc
bswap
sub
xchg
repnz
jp
test
add
inc
ficoms
pop
mov
mov
dec
sbb
jmp
mov
mov
cmp
push
xchg
imul
leave
loopne
mov
imul
std
add
add
rolb
mov
mov
pop
outsb
or
sbb
pop
dec
sti
into
sbb
push
add
rolb
gs
cmpsb
push
lods
push
pop
pop
es
sbb
int3
out
enter
lds
mov
mov
mov
lods
adc
mov
add
xor
call
and
mov
mov
fwait
add
and
mov
add
addb
fcmovu
shr
ret
xchg
add
adc
adc
mov
das
cli
mov
fmull
fcomps
sbb
adc
mov
sub
sub
outsl
jb
mov
pop
inc
add
jg
inc
add
add
xchg
xchg
pop
add
mov
xchg
pushf
std
icebp
dec
out
and
mov
dec
jb
mov
push
inc
pop
dec
addb
or
sahf
cmpsl
iret
out
es
pop
jle
sbb
iret
pushf
xchg
popf
cmc
xor
xor
and
mov
inc
and
add
out
xchg
add
mov
mov
mov
cmp
outsb
or
mov
add
mov
loope
addb
pop
ret
mov
mov
xor
mov
push
and
add
repz
mov
mov
add
jnp
inc
and
mov
mov
mov
mov
mov
jge
sub
cwtl
in
std
or
add
mov
scas
push
pop
fs
xlat
ss
roll
mov
adc
xlat
in
lret
sti
xor
mov
mov
push
imul
mov
push
adc
mov
insb
aas
enter
push
or
cmp
inc
xor
mov
xchg
cmp
int
push
add
add
mov
push
jb
mov
xchg
push
gs
imul
fcoml
pop
mov
mov
mov
mov
mov
adc
test
stos
fdivrs
or
ds
adc
mov
or
pop
stc
pushf
cltd
cwtl
aas
inc
pop
ljmp
and
mov
dec
scas
mov
mov
sti
in
push
mov
add
dec
mov
icebp
mov
jmp
lea
mov
mov
and
cmp
incl
outsl
xchg
movsb
data16
mov
std
lock
or
sub
fmul
popf
push
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
arpl
in
enter
add
mov
lahf
into
loope
xchg
xchg
push
je
push
inc
add
mov
fsubrp
dec
push
data16
mov
out
mov
movsb
add
mov
test
xchg
icebp
frstor
daa
mov
push
xchg
aaa
push
in
push
jae
inc
ja
mov
add
shll
mov
leave
pop
or
push
jnp
xor
mov
cmp
addb
dec
inc
js
xchg
dec
or
sahf
in
jge
popa
mov
add
test
addb
jle
push
add
sahf
cmpsb
push
push
add
rcll
testb
add
mov
fcmovbe
dec
mov
pop
cmc
push
jl
jge
xor
xor
pop
outsl
adcl
cmp
or
je
rolb
sbb
add
aad
clc
mov
test
add
mov
ja
add
cmp
pop
cli
outsl
stos
xchg
int3
mov
xor
mov
add
push
push
lods
ret
aam
add
push
mov
push
sub
or
lret
int
xor
mov
xchg
cmpl
test
data16
je
inc
xchg
daa
jno
mov
pop
sub
sbb
push
flds
inc
add
add
dec
iret
popl
ss
mov
mov
out
fdivrs
and
repnz
mov
push
add
pushf
mov
mov
repnz
movsl
inc
mov
mov
sbb
mov
add
int
mov
mov
add
mov
lcall
movsb
and
xchg
add
pop
sub
dec
add
mov
add
cmp
dec
addb
sub
jmp
sub
mov
sub
add
mov
sub
sbb
dec
inc
rolb
mov
and
repz
hlt
sbb
das
and
cli
sbb
mov
xlat
xor
mov
mov
and
mov
inc
add
movsl
pop
sub
addl
push
lret
imull
and
mov
mov
inc
add
adc
addb
jl
mov
add
jp
stos
push
adc
cmp
mov
mov
dec
fdivrs
mov
or
add
xor
outsb
hlt
jnp
mov
rolb
loope
and
jne
loopne
mov
or
call
mov
out
add
lods
sbb
add
adc
xor
mov
xchg
roll
add
jo
mov
sbb
mov
add
xor
aas
xor
mov
pop
jmp
sbb
inc
push
popf
rcll
mov
jl
loopne
mov
pop
xor
rolb
mov
inc
lahf
lahf
cmpsl
pop
bound
mov
pop
pop
xchg
scas
inc
add
add
mov
xor
in
add
mov
ret
dec
test
jmp
sbb
mov
sub
xorl
sysenter
jecxz
inc
pop
or
sub
fsubrs
add
hlt
xor
mov
js
and
fnstenv
cmp
add
lcall
in
cld
dec
scas
xchg
push
pop
fdivp
fmull
scas
test
fistl
mov
or
mov
mov
repz
add
push
nop
add
int3
xor
js
rcrl
dec
dec
call
pop
pop
add
mov
add
iret
mov
js
push
mov
dec
sub
imul
sub
sub
sbb
les
pcmpgtd
add
dec
cmp
dec
push
lds
dec
test
sbb
mov
add
xchg
cltd
iret
mov
hlt
lods
lds
popa
cmc
mov
jbe
sub
icebp
sub
mov
movsl
js
cmpsb
dec
mov
flds
add
in
mov
loope
add
jno
fs
sub
gs
xchg
stos
cld
adc
jae
gs
mov
fldenv
clc
xor
out
or
xlat
inc
outsl
test
add
imul
outsb
cmp
mov
lret
nop
add
push
push
adc
push
mov
mov
pusha
add
add
test
mov
xor
push
addb
aam
add
movsl
and
add
jae
push
popf
add
test
stc
in
and
test
mov
push
faddl
add
mov
call
mov
arpl
clc
into
scas
pusha
add
ret
sub
dec
dec
rolb
imul
and
addb
test
or
adc
or
xor
rolb
test
mov
mov
ljmp
add
or
add
adc
mov
jae
lea
popf
or
pop
aad
data16
mov
sub
dec
mov
outsb
inc
and
test
adc
notl
pop
inc
aaa
movsl
je
test
mov
mov
test
jo
mov
and
pop
mov
rolb
mov
cmpl
clc
jbe
add
stos
sbb
into
scas
arpl
add
iret
fucomi
push
push
dec
dec
jp
fmuls
gs
add
pop
jb
mov
pop
sbb
mov
mov
test
dec
std
mov
repz
lea
clc
rolb
mov
loope
addb
xchg
fisubs
mov
push
add
push
fstpl
test
pusha
add
cmpsl
push
imul
pushf
push
cmpsl
push
push
dec
or
jbe
imul
add
mov
cmp
push
addl
sub
daa
cwtl
jae
movsl
nop
add
sbb
movsb
add
mov
imul
sub
test
mov
mov
mov
in
add
mov
and
mov
mov
pusha
add
mov
lcall
adc
out
push
add
pop
bound
mov
loop
mov
lock
cmp
lock
add
fcmovne
xor
sub
add
mov
push
fsubrl
jo
mov
aaa
xchg
push
xchg
inc
mov
mov
ja
int
lcall
xlat
push
rolb
mov
mov
stos
dec
jle
sub
inc
ljmp
add
fcoms
add
add
lods
pop
cmpsl
cmc
dec
mov
iret
addb
mov
add
mov
add
test
mov
insb
jb
mov
pop
push
mov
inc
shll
add
lahf
push
xchg
mov
lds
mov
cmp
rolb
mov
out
out
push
movsb
das
or
pop
iret
fdivl
sbb
insl
fsub
dec
jge
push
mov
mov
add
into
xor
hlt
sbb
std
addb
rolb
or
mov
mov
and
mov
mov
std
insb
inc
add
scas
mov
jp
pusha
add
lock
ret
test
inc
xor
jo
mov
dec
leave
mov
xchg
jl
xchg
sub
insb
add
mov
add
mov
es
jg
stos
sbb
jno
sub
mov
cmp
jbe
jb
mov
add
sub
dec
and
fstps
adc
shll
mov
add
cmpsb
mov
loope
adc
add
mov
add
mov
mov
cld
inc
cmpsb
mov
into
stos
insb
fistpl
shll
mov
add
pop
inc
jb
mov
or
outsl
sbb
add
mov
add
cmp
jge
adc
mov
mov
cmp
rorl
inc
push
mov
jnp
xchg
add
jno
add
mov
push
and
add
in
adc
mov
cs
rcrl
addr16
mov
imul
push
mov
iret
rolb
xor
cmp
xor
inc
dec
mov
lods
pop
std
push
sub
mov
mov
pop
adc
scas
sbb
push
ficomps
add
lea
jp
test
out
add
xor
idivl
gs
mov
mov
out
pusha
add
adc
adc
mov
aam
push
test
mov
or
clc
mov
xor
out
or
jbe
pushf
sahf
dec
mov
fisttpll
xor
ss
scas
leave
iret
dec
cltd
popa
add
sti
stos
sarl
cmp
pop
jl
out
jp
cmp
add
mov
jne
add
push
xor
mov
mov
shll
mov
insb
rcl
inc
lcall
mov
out
mov
pop
sub
pop
shll
mov
add
jg
decl
mov
adc
ss
xor
ret
jecxz
das
and
mov
fs
inc
cmp
mov
fcmovbe
mov
loop
mov
inc
xchg
push
testb
test
add
mov
outsl
call
dec
jp
add
ficoml
jg
popa
std
cmp
inc
mov
xor
cli
xchg
les
and
outsb
push
add
push
xchg
mov
inc
and
out
inc
add
pop
sbb
mov
bound
mov
mov
mov
xchg
lods
jae
iret
aaa
xor
mov
cwtl
add
mov
or
mov
sbb
jns
pop
inc
xor
mov
dec
sti
rolb
mov
fwait
push
xchg
bound
mov
inc
enter
xchg
add
sub
ds
mov
add
bound
mov
daa
mov
adc
mov
out
xchg
inc
je
sub
add
adc
test
xchg
pop
jb
mov
pop
mov
stos
addb
mov
add
mov
cmpsb
lret
and
mov
lret
inc
rcll
mov
test
arpl
mov
sahf
mov
sub
dec
mov
xchg
mov
lahf
mov
cmp
mov
adc
mov
enter
mov
pop
adc
mov
test
xor
xlat
push
mov
scas
or
adc
lods
xchg
repnz
mov
fcomip
add
jl
sahf
insl
dec
xchg
in
out
pop
mov
push
cli
inc
jns
pop
sbb
movsl
or
cmp
pushf
jl
and
jb
mov
jge
lahf
or
nop
add
mov
fsubl
add
sbb
adc
pop
mov
inc
jl
repz
and
push
mov
lock
xchg
pop
cltd
mov
inc
add
mov
fidivl
add
or
ss
add
sub
mov
mov
add
add
fcoms
sbb
lahf
ret
mov
stos
insl
add
mov
out
bound
mov
add
out
mov
mov
mov
add
inc
aad
push
pop
xor
mov
cmpsl
sub
push
xlat
ljmp
mov
inc
add
jecxz
es
pusha
add
add
repnz
sub
mov
ljmp
dec
enter
out
xor
mov
add
mov
mov
cmp
ror
add
les
push
test
dec
and
add
push
fmul
mov
mov
dec
mov
sbb
xchg
mov
mov
aaa
cmc
jmp
or
cmpsl
fsubs
inc
mov
ja
adc
lret
jo
mov
add
or
mov
mov
push
xor
mov
add
movsl
rcr
jle
cmpsb
mov
add
loope
js
cmc
sbb
repnz
jge
in
add
push
dec
cmp
add
xor
fstpt
xor
mov
mov
mov
out
mov
mov
mov
jl
add
dec
scas
orps
lds
cmp
dec
aaa
sbb
out
shll
orl
imul
mov
rcll
in
jl
add
add
mov
aaa
testb
ja
stc
mov
mov
add
add
and
mov
jp
add
mov
int3
popl
test
cmp
jmp
cltd
mov
xorl
loopne
mov
jecxz
add
arpl
inc
lahf
push
mov
rcl
rolb
mov
mov
add
mov
mov
xchg
push
add
cmpl
add
bound
mov
repnz
add
into
fisubs
mov
cld
fiaddl
sub
insl
stos
addb
gs
out
out
lahf
das
xchg
outsb
cmovno
add
mov
add
rcl
push
call
call
scas
scas
sbb
adc
jmp
dec
sub
cs
xor
shll
add
mov
mov
in
lock
jl
fldcw
add
xor
fistpll
insb
push
movb
add
psubw
mov
mov
notl
mov
push
add
or
mov
adc
xchg
rolb
mov
add
fwait
out
mov
mov
pop
xchg
add
add
sti
sub
subl
mov
mov
mov
mov
mov
add
lea
pushf
inc
xor
jmp
mov
mov
das
jle
mov
mov
lret
loope
xchg
pop
je
popa
add
mov
adc
mov
call
push
push
fisttpll
pop
je
das
sub
fwait
addb
pop
cld
or
sub
std
cwtl
cwtl
inc
add
push
in
mov
stos
scas
imul
sbb
jp
mov
faddl
inc
add
or
add
pop
fucomip
fs
jp
fdivl
and
lret
loop
mov
xchg
mov
mov
in
cs
outsl
repz
add
mov
mov
fisttpll
mov
mov
repz
mov
pop
ror
fs
pop
stc
mov
pop
sbb
mov
add
fs
lea
pop
hlt
inc
mov
jge
jae,pt
push
jb
mov
ss
fs
inc
cmp
mov
mov
dec
data16
add
push
add
sub
add
add
sub
add
int
fildl
shrl
pop
out
dec
repz
mov
ss
into
dec
push
out
fsubrs
jo
mov
repnz
add
cmp
out
xor
mov
add
ds
movsl
leave
stos
push
test
pop
add
add
add
dec
jne
adc
mov
add
pop
mov
or
fld
loope
adc
dec
out
sarl
and
fwait
inc
fmuls
arpl
inc
add
adc
mov
movsl
dec
mov
add
fisubs
lods
pop
xor
je
out
daa
jb
mov
or
mov
mov
aas
aas
mov
hlt
mov
mov
mov
and
out
loope
bound
mov
jl
mov
add
fadd
mov
int
aad
insl
icebp
or
fs
jbe
pop
mov
ljmp
add
add
iret
and
jl
mov
xchg
mov
xchg
leave
mov
in
lcall
and
xchg
add
mov
sbbl
inc
xchg
cli
out
jae
add
add
mov
cwtl
fdivl
mov
dec
cs
mov
mov
adc
test
iret
dec
jl
xchg
ja
mov
out
add
xlat
data16
test
dec
lahf
inc
out
mov
pop
sub
add
mov
xchg
add
xor
movsl
dec
jns
add
pop
jle
add
inc
add
xlat
lds
inc
sub
rolb
mov
inc
ss
jae
jl
inc
shld
fcompl
or
in
xor
mov
push
pop
xor
and
mov
aad
mov
push
test
outsl
loop
mov
cltd
out
std
cmp
sbb
mov
add
out
rcrl
or
add
and
add
add
shll
jno
inc
je
add
cmpsb
sbb
dec
cmp
lret
imul
adc
mov
mov
jle
add
daa
les
add
stos
mov
xchg
dec
and
mov
inc
sub
add
out
or
mov
outsb
lcall
xchg
jno
add
icebp
mov
mov
inc
add
addb
push
add
add
addb
sub
lret
or
xchg
pop
movsl
popa
cmpsb
jne
or
add
dec
shll
fsincos
xchg
and
adc
mov
je
add
jmp
pusha
add
add
sub
cmp
mov
ljmp
add
cmp
mov
or
pop
in
call
stc
stos
cmc
fwait
repnz
gs
cmp
popa
insl
and
add
add
cwtl
inc
add
pusha
add
xchg
rcll
into
sbb
push
xchg
repz
sahf
sub
jmp
jmp
push
pop
cmp
adc
mov
mov
or
dec
jle
add
jp
lea
popl
les
add
cmp
adc
mov
xor
mov
mov
jnp
lods
pop
jb
mov
addb
mov
sub
inc
rolb
mov
adc
add
mov
call
in
adc
leave
jb
mov
fwait
xor
add
push
push
or
pop
mov
push
scas
pop
ss
push
movsl
add
loopne
mov
out
dec
ret
xchg
andnps
jo
mov
mov
mov
mov
mov
data16
jg
inc
outsb
mov
push
add
or
lds
or
loope
arpl
push
loop
mov
andl
daa
movsl
push
fistl
mov
mov
cwtl
push
jbe
icebp
aas
mov
jb
mov
hlt
jle
mov
scas
mov
ss
jb
mov
xor
mov
adc
xchg
mov
add
pop
sub
xchg
mov
cmp
and
ret
adc
jb
mov
mov
div
mov
dec
xor
mov
call
into
cmp
lcall
lea
inc
loop
mov
sub
adc
mov
add
jno
mov
mov
pop
insl
dec
sbbl
dec
mov
pop
ja
shl
add
mov
add
sbb
jno
cmp
xchg
push
add
lock
add
jecxz
push
push
add
mov
imul
std
ret
mov
iret
js
jne
add
add
add
jge
add
mov
cmc
jg
cld
cmc
addb
in
cmc
pop
xchg
pop
popa
lock
xor
test
dec
push
xchg
add
leave
and
mov
push
iret
fstps
add
cmp
sub
dec
iret
addb
jg
add
xchg
xchg
pslld
mov
jns
xchg
das
cmp
jae
dec
adc
xchg
not
pop
out
clc
xor
pop
dec
add
add
mov
add
push
push
pop
rolb
mov
es
mov
cmpl
flds
cmpsl
jns
cmp
mov
negb
jl
mov
sub
inc
sub
add
movsl
test
mov
dec
sbb
inc
add
sbb
mov
mov
insb
decl
aaa
js
mov
cmp
repnz
imul
and
add
mov
jmp
mov
adc
adc
bound
mov
popa
out
dec
sub
mov
xorps
jo
mov
add
or
pop
out
jge
or
std
jb
mov
repnz
pop
les
add
sbb
add
add
mov
lea
mov
popa
popa
cmpl
inc
xor
mov
mov
and
dec
outsl
inc
ret
fmuls
add
adc
mov
mov
pop
fmulp
movsl
movsb
leave
loopne
mov
xor
lcall
add
rolb
fsub
bound
mov
aam
lret
push
add
lods
cmp
aas
sub
or
xor
mov
out
pusha
add
add
mov
mov
xchg
inc
cwtl
pop
fucomip
xor
add
dec
fistl
add
fstpl
ret
js
xor
mov
sub
sub
add
andl
mov
add
and
or
rolb
xor
ficoml
push
sahf
test
mov
push
jp
xor
mov
push
loop
mov
dec
scas
add
pop
testb
mov
pop
jo
mov
inc
loop
mov
dec
insb
push
pop
das
push
fimuls
fs
dec
jmp
in
xchg
scas
aaa
int3
adc
addr16
jnp
dec
ljmp
mov
mov
imul
ret
lcall
inc
insb
add
loope
enter
cmp
sub
js
dec
addb
add
mov
mov
mov
mov
addb
jl
addr16
jle
outsb
jecxz
inc
add
enter
mov
enter
add
repz
jmp
pop
fwait
nop
add
sub
pop
mov
inc
adc
mov
add
mov
mov
in
inc
xchg
mov
mov
addb
push
int3
sub
lock
rolb
and
out
ret
dec
push
add
lea
jns
push
ret
cmp
in
mov
and
mov
pushf
sbb
gs
xorl
adc
mov
mov
sbb
add
xchg
push
imul
pusha
add
jp
or
fsub
cmp
mov
mov
inc
cltd
inc
push
sub
add
hlt
mov
mov
dec
dec
xchg
bound
mov
imul
mov
rolb
daa
xchg
dec
mov
cwtl
aad
cltd
sub
pop
dec
add
mov
add
shrl
fisubs
add
flds
mov
addb
sbb
sbb
add
pop
cmc
fs
add
mov
in
fistl
mov
or
mov
add
jb
mov
xor
sbb
mov
mov
jl
ljmp
pop
xchg
add
push
cmp
add
jp
pop
xchg
add
mov
add
mov
mov
rolb
mov
movsl
ds
adc
ficoml
mov
inc
add
inc
cmp
sbb
add
add
add
aaa
adc
mov
lahf
pop
or
add
mov
add
mov
rol
sbb
push
sub
xchg
cmpsl
je
dec
or
mov
mov
hlt
int
outsb
jnp
jle
dec
hlt
ret
pop
aad
test
sbb
pop
hlt
push
add
add
lea
mov
sub
add
dec
xor
sti
dec
jae
adc
xchg
add
xchg
mov
add
add
pop
aaa
dec
movsb
fsubr
mov
mov
jb
mov
cmpsl
addr16
ss
lods
push
mov
mov
movsb
pop
and
fisubs
add
jmp
sbb
add
add
pop
jg
jge
lods
and
mov
and
jae
cmp
add
mov
add
add
fimull
popf
ret
jge
stc
sbb
add
cmpsl
fcmove
fwait
mov
mov
add
pop
adc
mov
aas
mov
mov
push
add
add
pushf
adc
mov
add
jb
mov
or
leave
cmp
out
sub
and
movsl
jle
rolb
dec
pusha
add
xchg
mov
inc
insl
mov
mov
inc
add
add
cmc
in
lcall
or
mov
bound
mov
mov
add
popf
cmp
or
push
xchg
stos
jbe
fldenv
add
push
scas
andl
pop
cmp
mov
cmp
mov
mov
fisttps
adc
mov
cmp
sub
popf
rolb
mov
mov
or
je
add
int
jmp
js
sbb
pop
loope
in
loop
mov
xchg
lret
ljmp
cmp
hlt
push
ror
or
les
add
xor
mov
and
and
mov
pop
mov
add
sbb
fadd
lea
sbb
add
mov
push
mov
mov
clc
inc
jmp
dec
inc
daa
xlat
xor
add
mov
aam
jmp
jno
push
adc
repnz
cmpsl
mov
addb
mul
add
xlat
jmp
xor
mov
lods
push
pop
dec
and
mov
lods
je
mov
pop
or
pop
mov
xor
clc
xchg
sub
icebp
stos
push
sub
mov
add
sahf
mov
js
jle
add
cmp
pop
inc
cmp
add
mov
jmp
pop
adc
popa
sbb
xchg
mov
mov
jno
pushaw
add
std
dec
push
add
mov
test
mov
jecxz
add
movsl
cli
mov
add
out
sub
add
mov
pop
imul
pop
mov
rolb
cs
sbb
inc
mov
xchg
dec
pop
cmc
cwtl
test
push
push
mov
xchg
cmpsl
test
push
add
jle
add
lahf
insl
ss
mov
mov
jno
push
dec
scas
sbb
ds
add
mov
and
mov
rolb
pop
mov
or
roll
add
add
adc
mov
adc
pusha
add
in
mov
mov
ds
in
arpl
lods
cmpsl
sbb
or
insb
adc
inc
jns
xor
mov
push
fcomi
out
and
add
es
mov
xor
or
add
mov
pop
cmpsb
push
pop
cmpsl
or
mov
mov
add
loope,pt
mov
push
add
mov
and
stc
cltd
mov
clc
push
add
scas
enter
arpl
mov
add
mov
add
add
cs
scas
sub
mov
cmpsl
rcrl
div
add
int
mov
add
xchg
lahf
test
shll
sahf
adc
fsubr
or
andl
cmp
out
cmp
add
mov
ss
mov
sub
add
mov
sub
add
mov
lods
xchg
xchg
push
mov
loope
addr16
mov
mov
xchg
dec
jae
movsb
aas
jb
mov
fsubrl
rolb
mov
dec
push
aas
sub
daa
fdivrs
mov
pop
lock
add
vpsrlq
in
lret
mov
inc
add
dec
and
popa
jecxz
es
push
xor
xor
mov
push
add
out
test
or
mov
out
or
xor
jo
mov
js
mov
mov
fdivrp
inc
lock
add
mov
add
mov
hlt
cld
fs
pop
mov
dec
push
and
mov
mov
push
lods
cli
jmp
mov
adc
pop
lds
cwtl
mov
add
cltd
addr16
mov
insb
pop
outsb
popf
cmp
xor
outsl
xor
mov
sub
add
sbbl
or
and
mov
add
loopne
mov
add
movsb
mov
add
add
daa
jne
test
hlt
or
add
xchg
sbb
test
jmp
mov
test
fcomps
cmpsl
insl
dec
arpl
cmp
aam
sbb
mov
push
push
pop
scas
mov
inc
mul
leave
pop
push
idivb
int
mov
mov
lock
call
or
das
mov
push
add
pop
add
addb
pop
ja
cmp
addb
movsl
push
or
lretw
ret
sub
fwait
mov
xchg
inc
mov
xor
push
lret
push
mov
jmp
or
sbb
lock
add
xchg
icebp
sbb
loop
mov
movsl
insb
xchg
jmp
into
or
js
add
rolb
fstl
mov
mov
xchg
stos
repz
pop
test
jo
mov
mov
dec
add
clc
sahf
dec
das
psubq
add
outsl
test
sbb
add
pop
sbb
and
repz
mov
push
push
xlat
cmc
push
xchg
add
or
mov
or
inc
xchg
dec
dec
fisttpll
jl
push
sbb
fcomip
les
xor
or
add
ret
mov
shll
jno
mov
arpl
xchg
cmp
mov
mov
and
jle
xchg
fcomps
push
data16
sti
cmpsl
sub
sti
jmp
mov
pop
xchg
push
psubq
out
sbb
add
xchg
pop
lea
subl
mov
and
mov
enter
dec
mov
xchg
pop
cmpsb
sbb
add
pop
add
mov
roll
daa
jecxz
jns
xor
das
mov
daa
jns
push
rolb
mov
xchg
bound
mov
fs
mov
insb
lret
cmp
add
add
mov
mov
mov
xchg
xchg
std
test
or
fistl
pop
ds
add
sub
add
pop
arpl
adc
mov
cmp
jg
sbb
pop
dec
out
jl
sbb
sbb
add
or
xor
xchg
jmp
cmp
icebp
adc
inc
mov
jg
pop
inc
ret
dec
hlt
jns
lret
mov
lret
add
jo
mov
mov
aam
iret
mov
mov
rcll
dec
leave
outsb
pop
pusha
add
mov
data16
xor
add
add
aaa
inc
mov
inc
into
mov
jns
add
add
and
pop
push
repnz
push
pop
dec
das
mov
mov
nop
add
das
mov
rolb
push
sub
in
xor
add
and
or
add
outsl
int
add
add
add
mov
ret
mov
add
dec
cmc
inc
pop
lods
fildll
repnz
aas
jg
cmpsl
pop
adc
nop
add
adc
mov
mov
mov
jns
clc
ds
mov
mov
xor
sbb
mov
mov
add
and
mov
mov
dec
cmp
jo
mov
add
dec
or
mov
add
mov
mov
add
dec
adc
dec
rolb
data16
mov
je
loop
mov
test
and
pop
or
lods
fimull
flds
aad
pop
pop
adc
mov
mov
test
push
add
mov
leave
and
or
imul
xchg
add
cmp
mov
insl
sti
leave
repz
mov
scas
pop
mov
fdivrs
outsl
daa
pop
icebp
push
test
mov
mov
dec
mov
mov
mov
test
lret
cli
into
pcmpeqd
cmp
call
inc
add
add
xor
lock
push
add
dec
and
mov
mov
pop
ljmp
mov
cli
xchg
add
repnz
fadds
mov
test
add
mov
sbb
add
add
in
jp
loope
adc
or
and
je
cmp
je
jp
adc
mov
add
mov
add
mov
cld
inc
add
pop
or
add
stos
mov
add
xor
mov
mov
mov
pusha
add
dec
jno
dec
sbb
ficoms
int3
popa
je
arpl
mov
mov
and
mov
adc
out
cmp
cli
add
test
add
cmp
jae
jno
movsb
mov
and
nop
add
mov
mov
in
ficoml
jl
ss
lock
mov
mov
mov
add
aam
sbb
lcall
mov
mov
popa
cmp
adc
std
loope
les
sub
in
rolb
mov
inc
add
movsl
aas
nop
add
push
movsb
add
mov
sti
push
aad
jp
imul
into
xor
in
scas
add
filds
in
mov
cmp
fistpll
mov
mov
xchg
pop
movsl
cmp
mov
add
sbb
fs
aad
jmp
ret
mov
adc
mov
imul
sub
js
add
nop
add
mov
sbb
sbb
sarl
js
pop
and
cmp
jge
leave
push
rolb
mov
rolb
mov
push
add
repz
pop
div
mov
mov
hlt
repnz
add
inc
mov
inc
add
addb
mov
mov
ss
fs
add
cli
mov
mov
xchg
addr16
mov
and
repz
mov
loop
mov
jecxz
lods
repz
xchg
test
and
mov
xchg
cltd
loope
push
add
lcall
xor
push
jmp
flds
add
aas
int3
mov
mov
adc
mov
gs
fstpt
pop
mov
lahf
mov
mov
out
add
cld
cwtl
push
in
repz
jge
jnp
xchg
dec
lds
out
cmpsb
pop
insb
sbb
inc
fmul
push
arpl
add
andl
xchg
mov
add
mov
add
cmc
in
filds
int
add
jl
std
leave
inc
jo
mov
add
inc
add
test
das
in
or
add
mov
addb
jae
pop
fcmovu
addl
in
push
add
mov
lods
daa
cmp
sbb
in
mov
add
add
mov
xchg
lods
sub
add
inc
add
add
add
sbb
adc
test
add
jnp
dec
xchg
popf
add
cmpsl
stos
int
sub
sbb
xchg
popa
call
add
jne
in
mov
mov
xorl
stc
jl
add
mov
cmpsb
imul
mov
mov
add
mov
movsb
stc
xchg
add
jecxz
call
add
add
cld
pop
cmpsb
jle
aam
xchg
inc
add
push
lret
out
sub
sbb
mov
xchg
mov
mov
lret
addr16
imul
adc
frndint
cmp
add
add
xor
rolb
mov
rolb
mov
mov
mov
mov
test
inc
xchg
lods
aas
add
loop
mov
outsl
sbb
scas
jmp
pushf
mov
push
out
xor
sub
add
mov
add
and
mov
iret
jne
add
push
add
filds
lret
dec
xchg
pmulhw
push
call
and
cmp
mov
hlt
mov
sub
add
jne
mov
mov
loopne
mov
sub
cltd
sub
hlt
xchg
jle
and
add
mov
repz
mov
mov
add
mov
cmpsl
pavgb
mov
addb
fcomps
fiaddl
pop
outsb
lea
mov
test
mov
ret
inc
jnp
add
add
add
pop
add
push
add
sahf
pop
sbb
ja
push
jb
mov
ljmp
and
inc
scas
mov
mov
jle
push
ljmp
ss
pop
insb
xchg
xchg
rolb
mov
cwtl
xor
mov
mov
add
sub
or
addb
mov
ret
xchg
push
add
add
ljmp
movsb
sub
bound
mov
je
repz
stc
xchg
fidivl
andl
or
pop
mull
jecxz
clc
cmpsl
dec
shrl
popa
dec
shrl
mov
mov
add
dec
lock
sub
ret
mov
mov
jno
jmp
fiaddl
aas
pusha
add
nop
add
jecxz
outsb
test
scas
mov
mov
mov
sub
mov
insl
mov
lock
add
add
roll
jp
pop
xchg
inc
mov
inc
cmp
or
nop
add
sbb
mov
pushf
xor
xchg
adc
mov
dec
call
popa
hlt
jp
das
inc
sbb
add
lret
xchg
and
mov
or
mov
add
mov
mov
add
repnz
cmp
push
sahf
lret
mov
or
loope
jp,pt
in
fimull
mov
add
add
mov
jge
mov
pop
adc
aas
or
add
and
divb
add
inc
add
cmp
cmp
imul
arpl
add
sti
mov
add
cli
xchg
roll
mov
nop
add
jl
stos
sub
add
add
dec
imul
out
and
hlt
dec
test
xchg
sbb
in
dec
scas
test
xor
add
lret
loop
mov
mov
insl
mov
sbb
add
loop
mov
fistpll
add
arpl
fcompl
out
add
push
add
dec
in
cmp
add
add
and
mov
and
mov
mov
cmpsb
in
enter
add
inc
add
daa
inc
pop
dec
mov
add
mov
mov
sahf
shrl
cwtl
push
xchg
mov
push
add
cmpsb
xor
mov
test
add
data16
outsb
jno
add
add
push
jmp
adc
mov
mov
out
arpl
inc
jo
mov
pop
pushf
add
cmc
sbb
test
sbbl
add
add
popf
sub
les
cltd
imul
xor
xor
mov
mov
xor
mov
clc
fmuls
sub
xor
sub
xchg
out
add
add
jne
add
mov
pop
inc
mov
sbb
add
jecxz
inc
add
mov
call
mov
adc
add
mov
push
add
add
mov
mov
add
aas
outsb
pop
add
rolb
mov
pop
mov
mov
jae
add
add
mov
addb
into
sbb
pop
xor
mov
outsb
inc
add
sub
add
add
mov
jbe
notl
cmpsl
adc
in
add
sahf
fnstenv
fstpt
add
outsl
pop
dec
or
lods
mov
stc
pop
hlt
test
mov
add
fwait
jae
add
or
mov
xor
pop
test
mov
test
es
adc
jmp
and
jbe
cld
cmp
mov
mov
je
xchg
movnti
fstl
add
in
fstl
add
or
mov
jmp
push
data16
in
rolb
in
xchg
or
inc
sbb
add
add
adc
mov
add
add
mov
add
mov
add
add
cs
add
in
hlt
out
add
push
jns
add
add
pop
jno
push
outsl
push
add
aad
inc
cwtl
les
add
mov
popf
leave
add
out
xor
mov
test
and
mov
pop
mov
mov
add
add
push
loop
mov
jbe
lcall
addl
mov
xchg
cmp
add
mov
sub
mull
js
shl
js
fsubl
add
mov
push
rolb
xor
add
jnp
fld
dec
adc
mov
add
out
adc
les
add
ret
fwait
and
add
add
out
or
loop
mov
mov
stc
push
add
mov
mov
mov
add
mov
sbb
xor
push
add
jne
jns
aas
popa
test
add
mov
or
inc
fsub
shl
xchg
std
cmp
in
loope
cwtl
push
add
arpl
and
lock
mov
add
leave
sbb
xchg
cli
add
mov
es
cmp
addb
jne
sub
sbb
jo
mov
iret
lea
push
or
add
jge
push
out
and
mov
sbb
lods
sub
mov
inc
pushl
push
or
adc
mov
add
mov
mov
jge
rolb
mov
sbb
add
scas
mov
adc
add
and
add
pushf
iret
clc
movsl
xchg
leave
adc
add
in
and
mov
mov
call
add
add
pop
mov
popa
xor
fwait
shl
xchg
add
fs
mov
add
add
mov
and
in
xchg
push
push
iret
aaa
mov
test
lret
outsb
out
testl
mov
cmpsl
rolb
mov
repnz
jbe
aaa
pushf
es
mov
loope
stos
aas
mov
les
add
mov
mov
fnstsw
fstpt
add
pop
mov
fsubr
mov
inc
push
push
pop
mov
sub
mov
mov
jmp
add
add
dec
popf
ss
mov
rolb
mov
add
icebp
mov
add
mov
out
adc
jne
pusha
add
lcall
mov
add
add
jl
aad
popa
adc
or
adc
mov
adc
mov
jle
add
stos
lret
loop
mov
cmc
test
mov
mov
ljmp
and
mov
inc
xchg
sbb
scas
test
add
jo
mov
add
addb
pop
mov
out
mov
push
add
addr16
test
add
inc
aad
ja
xchg
aaa
mov
add
sti
mov
dec
rcll
inc
sub
add
add
add
pop
push
icebp
cmp
pop
pop
addr16
push
push
add
xorl
cmp
push
push
lret
popf
lds
scas
scas
lcall
test
lds
inc
inc
pop
inc
jnp
or
mov
mov
icebp
push
add
mov
in
push
add
add
inc
add
imul
and
push
lahf
and
mov
jo
mov
mov
mov
iret
pop
cmp
adc
cli
mov
mov
int
or
add
cltd
pop
jno
std
sbb
mov
push
add
jb
mov
aad
xchg
pop
and
mov
cltd
imul
jno
rolb
mov
decb
out
xor
mov
xchg
jae
or
shll
mov
push
add
jnp
enter
cmp
sub
xor
mov
inc
add
aas
sbb
mov
repz
jb
mov
add
xchg
xchg
add
test
xchg
add
or
mov
mov
jp
add
lea
int3
in
sbb
mov
xor
int3
cmp
add
add
add
mov
mov
mov
and
add
and
sub
addb
movsb
pop
daa
addb
jge
sbb
pusha
add
gs
dec
sub
ficomps
leave
mov
icebp
loop
mov
sub
rolb
mov
or
jp
adc
mov
lods
subl
mov
xor
add
int
repnz
xor
and
xchg
mov
adc
out
dec
dec
incb
add
add
push
mov
mov
add
mov
push
add
or
mov
imulb
mov
imul
mov
push
and
mov
fucomip
stc
mov
mov
lret
or
mov
xchg
jnp
lods
pop
mov
mov
popf
lahf
jp
negb
push
add
push
ret
adc
imul
pushf
sub
inc
mov
add
push
sub
mov
mov
mov
in
cmp
in
loop
mov
mov
mov
sbb
outsb
dec
pop
adc
mov
add
cmp
pop
cmp
pop
inc
enter
insb
std
mov
inc
add
ja
xlat
or
cmp
mov
push
add
psrlw
xchg
adc
fisttpll
lds
or
aad
push
mov
add
cld
ss
aaa
rolb
sub
ja
int
out
lahf
insb
dec
lahf
mov
mov
xchg
pusha
add
sbb
rolb
outsl
ja
test
cmc
jp
and
scas
sub
stos
jle
testl
add
mov
mov
cwtl
mov
pop
inc
add
push
sahf
cwtl
incb
mov
fisubrs
dec
xor
repnz
add
mov
cmp
jnp
add
pop
add
mov
jecxz
imul
mov
add
xchg
aas
xchg
scas
dec
paddusb
mov
mov
fcompl
xlat
mov
in
fs
sti
mov
lahf
outsb
cmp
cmp
sbb
mov
add
fcompl
hlt
sub
push
mov
nop
add
cmpsl
aas
mov
add
push
add
dec
and
pop
jmp
add
mov
add
mov
popa
sbb
testb
arpl
lahf
mov
pop
ljmp
add
add
jno
movsb
pushf
and
mov
and
xor
mov
sbb
mov
jae
test
add
add
ficompl
add
mov
stc
aam
add
cmp
xchg
aad
sub
add
or
mul
cmp
jmp
out
xchg
add
inc
shll
or
inc
add
jp
pusha
add
jb
mov
lods
cmp
int
test
add
mov
xchg
stc
jp
mov
adc
add
mov
test
sbb
add
xlat
dec
pop
js
dec
in
bound
mov
sbb
add
outsl
cmp
aaa
out
pop
adc
cmp
popf
daa
out
aas
ret
mov
outsl
mov
add
aas
int3
rolb
ss
das
adc
xor
mov
lods
cltd
push
cmpsl
loopne
mov
rolb
mov
inc
fisubl
add
pop
loop
mov
cmpsl
xchg
out
pop
cltd
dec
cmpsl
aaa
add
mov
cwtl
push
add
cmp
enter
xor
call
jb
mov
push
add
lds
mov
add
bound
mov
dec
push
mov
lret
jp
add
mov
xchg
lret
pop
mov
mov
add
add
mov
jg
je
fdivl
add
mov
mov
push
adc
mov
in
arpl
lcall
fs
dec
repnz
add
sub
mov
mov
mov
fsubrl
and
mov
mov
mov
push
test
loopne
mov
cmp
mov
mov
xchg
mov
sbb
add
push
add
add
rolb
faddl
add
add
mov
mov
ret
pusha
add
push
xorl
xchg
add
sub
mov
add
or
aam
and
arpl
test
std
fsts
lock
into
leave
je
mov
mov
jecxz
test
cld
jnp
xor
mov
mov
inc
xchg
xchg
cmp
ss
mov
fnstcw
les
jne
addb
pusha
add
mov
add
and
cmpsb
std
or
bound
mov
movsl
cmp
inc
in
dec
scas
ret
imul
notb
push
mov
dec
xchg
xchg
ja
cmp
add
cmpsl
mov
enter
cmc
clc
lsl
add
loopne
mov
mov
in
scas
es
dec
repz
mov
rolb
mov
ja
or
jo
mov
in
add
stc
mov
mov
mov
pop
mov
push
add
data16
and
sub
sub
mov
sbb
add
dec
int3
dec
test
fs
cmc
dec
xor
pop
iret
adc
arpl
sub
scas
int
ret
pushf
out
add
sbb
fs
lahf
mov
xchg
int3
push
fnsave
mov
mov
mov
add
add
inc
pop
pop
cmpsl
ss
insl
int3
clc
and
dec
in
aad
adc
mov
cmp
in
xchg
imul
fistpl
cld
push
push
scas
xlat
insb
xchg
cmp
icebp
out
mov
pushf
sbb
adc
cmp
add
mov
jge
js
lret
les
xor
mov
mov
dec
arpl
pop
and
adc
xchg
xchg
enter
ficomps
sub
adc
mov
rolb
mov
add
add
sbb
and
xchg
in
cld
push
inc
add
ss
cmp
cmp
xor
mov
pop
sti
cmp
mov
pop
push
add
std
adc
sahf
js
pop
ljmp
rolb
mov
fcmove
pop
xor
mov
das
lret
adc
xor
mov
add
in
and
mov
or
lods
xor
cltd
movsl
loop
mov
add
hlt
pusha
add
sbb
inc
add
mov
push
add
mov
push
add
call
pop
gs
add
mov
dec
push
mov
dec
js
dec
nop
add
add
mov
loopne
mov
xlat
mov
imulb
je
sbb
cmpsl
inc
daa
imul
or
or
mov
aad
mov
rolb
mov
je
pop
or
add
add
stos
cli
add
mov
dec
out
jl
cmp
inc
add
incb
rolb
xor
lods
xchg
leave
add
mov
and
mov
add
fldenv
lods
rcrl
pusha
add
xor
sbb
xchg
mov
call
mov
add
mov
mov
insl
leave
sub
daa
xchg
mov
dec
pop
xchg
add
mov
fidivrs
mov
ss
loopne
mov
rorl
in
addb
mov
or
es
es
ret
and
testb
mov
mov
add
fmuls
adc
pop
clc
inc
add
movb
add
jge
mov
pop
mov
cmpsb
mov
int
rolb
mov
push
add
xor
pusha
add
inc
add
mov
or
add
pop
mov
mov
mov
jecxz
pop
cmpsb
mov
mov
das
push
notb
lds
or
in
sbb
mov
cmpsb
sub
dec
cmp
mov
mov
add
sub
add
mov
sbb
mov
sahf
dec
pushf
jne
xor
mov
add
adc
aam
popa
aam
add
mov
add
pop
mov
jle
inc
cwtl
inc
sub
sahf
xlat
jg
push
jmp
or
mov
mov
pop
sarl
sub
or
cmc
jl
add
jnp
xor
adc
jg
inc
push
ds
stos
mov
pop
movsb
xchg
mov
pushf
adc
mov
fiadds
add
aam
add
mov
adc
push
in
xlat
or
xchg
add
or
mov
xor
lret
lods
popf
ret
push
fisubrl
mov
inc
sub
in
popf
aad
add
add
lods
test
push
fisubl
lds
mov
xchg
hlt
and
pop
mov
mov
scas
in
cmpsb
mov
dec
out
mov
dec
popf
fimull
mov
pop
cmpsb
jbe
pusha
add
jge
sub
sbb
cmpsl
out
out
add
mov
mov
mov
add
sub
ret
inc
daa
fs
lods
mov
mov
pusha
add
xchg
mov
filds
sub
add
loope
insb
out
jecxz
mov
pop
cmpsb
data16
mov
mov
insl
repz
loopne
mov
fstpt
mov
add
mov
ljmp
jne
add
fnstcw
cwtl
push
das
pop
mov
in
ljmp
sub
pop
paddusb
mov
xchg
stos
or
insl
insl
aad
fistpll
sahf
fidivl
add
cli
lea
xchg
push
bound
mov
push
out
stos
cld
addb
jecxz
mov
mov
mov
and
add
rolb
mov
add
aam
mov
add
xlat
add
add
fdivrl
or
add
pop
repnz
daa
daa
push
ds
scas
sti
lods
data16
mov
aam
jp
sub
mov
rolb
sbb
mov
add
stc
movsb
subl
mov
addb
xchg
add
push
out
xchg
jp
inc
add
mov
pop
xchg
fs
dec
mov
mov
popa
push
sar
push
xchg
scas
loope
loop
mov
add
push
add
pop
rolb
les
rcrl
push
add
mov
outsl
jnp
add
cmp
test
stos
loop
mov
jp
cmp
test
mov
add
mov
ret
mov
mov
aad
loope
xchg
outsl
or
jl
cmp
mov
cs
inc
out
les
mov
xchg
jno
push
into
push
mov
insl
gs
inc
ret
adc
pop
aaa
or
add
jns
or
mov
ffreep
pop
add
inc
filds
jne
lods
pop
imul
mov
cmpsb
push
add
lret
push
lods
cmp
movsb
cwtl
fadd
dec
scas
clc
arpl
jnp
xor
add
and
gs
sub
arpl
xchg
add
and
mov
push
clc
xchg
inc
add
mov
test
add
loop
mov
cli
ja
add
std
push
push
add
dec
inc
inc
add
mov
xchg
test
dec
push
xor
add
adc
ret
pop
inc
cld
jno
mov
xor
fdivrp
push
add
or
hlt
cmp
add
nop
add
add
jno
xor
mov
inc
add
dec
xchg
es
les
mov
cmpsb
aaa
leave
sub
add
cwtl
pop
dec
call
jno
cmp
into
lahf
jnp
push
or
jle
push
pop
jp
ds
mov
std
sbb
sbb
mov
bound
mov
adc
mov
inc
mov
mov
mov
cmp
jbe
and
cmpsl
ret
fwait
push
fdivrs
pop
pop
mov
ljmp
mov
cwtl
add
add
add
into
push
jmp
adc
mov
or
loop
mov
sub
add
push
cmp
iret
mov
xor
pop
out
xor
mov
mov
mov
mov
add
add
ja
pop
scas
pusha
add
push
fnstsw
sbb
sub
pop
lahf
pop
cmc
pop
mov
jmp
daa
xor
mov
jno
add
mov
shl
out
insl
xchg
mov
inc
shll
mov
mov
adc
mov
jae
adc
rolb
mov
cli
cmc
test
cmp
or
add
mov
sbb
test
pop
pop
mov
xchg
pusha
add
pop
data16
xor
mov
add
add
hlt
test
lds
jmp
cs
add
push
jp
xchg
add
sahf
jno
adc
mov
imul
out
add
sahf
fs
lods
std
cmpsl
mov
clc
mov
mov
out
sub
dec
loopne
mov
scas
or
or
pop
dec
ja,pt
mov
mov
iret
push
aam
push
dec
data16
mov
cld
data16
mov
vpaddb
movsl
loop
mov
fbstp
add
mov
push
sbb
mov
add
jge
sbb
and
fwait
clc
enter
add
call
mulb
add
mov
push
repnz
data16
or
jl
adc
inc
arpl
sarl
add
mov
sub
mov
sub
cmp
add
loopne
mov
les
add
mov
jmp
add
mov
rolb
mov
add
inc
add
lahf
lret
jne
sbb
insb
cmp
jns
hlt
mov
in
mov
adc
mov
pop
arpl
add
popa
pop
xor
ror
int3
or
pop
jmp
insb
and
mov
adc
cmpl
push
cmp
mov
mov
lret
push
test
jbe
movsl
hlt
test
popa
pop
or
ds
loope
inc
add
movsl
cmp
stos
inc
add
push
repz
mov
add
notl
jb
mov
or
ljmp
outsl
cmc
push
mov
mov
add
iret
outsl
cs
lods
or
fistpll
test
pop
rolb
mov
push
ror
rolb
mov
jne
sbb
iret
sbb
add
mov
jb
mov
jmp
push
sub
push
jb
mov
add
mov
push
lods
cmp
pop
aam
add
out
xchg
add
jae
ret
jae
xchg
sbb
add
add
popf
mov
push
lds
in
add
testb
mov
push
add
mov
jge
dec
push
add
mov
add
insl
add
mov
gs
mov
and
mov
adc
mov
add
mov
mov
pop
xor
jns
pop
out
sbb
push
aaa
fisubs
xor
stos
sub
mov
mov
mov
lods
sbb
sarl
popf
outsb
inc
out
mov
int3
out
or
or
mov
lods
adc
rorl
ficoms
dec
sbb
mov
mov
jp
add
mov
es
dec
fs
push
add
mov
jge
xor
mov
add
lds
or
mov
or
mov
mov
rolb
mov
mov
mov
fdivl
addb
sub
add
push
mov
sub
jl
repz
add
gs
xchg
mov
testb
mov
mov
cld
cmp
adc
dec
test
jge
out
mov
ds
dec
fnstenv
adc
mov
shll
jns
imul
jecxz
add
add
add
addb
cwtl
or
imul
add
lret
aas
add
mov
add
cmp
test
mov
add
call
aaa
pop
mov
add
fildl
cmp
xchg
std
or
ss
stos
repz
mov
jnp
dec
imul
xor
xchg
add
dec
out
mov
xor
jns
add
add
xchg
add
mov
rolb
dec
inc
insb
and
in
add
lret
push
test
xor
add
xchg
mov
outsb
push
leave
inc
and
lods
cmp
lea
add
repz
add
add
mov
mov
adc
mov
mov
test
lods
std
repnz
push
xchg
cmp
fwait
movsl
scas
in
mov
jb
mov
dec
xchg
lahf
jge
lock
add
jb
mov
mov
jle
bound
mov
rorl
adc
xchg
push
mov
jecxz
hlt
pop
mov
mov
add
pusha
add
mov
cwtl
ja
in
in
pop
pop
xor
mov
jle
push
and
push
pushf
mov
mov
mov
mov
pusha
add
inc
push
cmp
repz
xchg
or
cmp
sahf
xchg
push
sbb
adc
mov
add
inc
mov
loop
mov
add
sahf
jb
mov
add
mov
mov
add
mov
mov
mov
rolb
mov
in
ds
mov
or
outsl
lea
push
jge
test
mov
add
pop
in
hlt
out
iret
push
add
out
lcall
xchg
pop
int3
aas
cmp
pop
and
push
mov
xchg
add
movl
jmp
mov
add
add
xchg
add
mov
add
jge
add
or
adc
add
shll
push
fdivl
mov
mov
mov
mov
fists
and
mov
adc
add
int
mov
js
stc
mov
and
add
in
mov
add
jne
mov
add
mov
addb
fwait
std
movsb
mov
mov
imul
xchg
dec
mov
iret
jg
loope
loopne
mov
mov
sub
mov
test
cli
aaa
xchg
add
addr16
rolb
mov
add
insl
jge
add
add
popf
jo
mov
ljmp
imul
cwtl
scas
and
clc
in
ds
lods
jns
aam
cmpsl
pop
and
mov
sbb
mov
in
push
add
mov
mov
iret
test
cmp
xor
push
cmpsl
mov
pusha
add
les
push
popa
aas
sbb
aaa
pop
lods
ficompl
mov
push
outsb
jl
cmc
aam
push
add
cmpsb
mov
inc
flds
add
out
sub
mov
rolb
mov
xlat
sub
xchg
out
movsb
into
pusha
add
dec
fnstcw
adc
sbb
mov
sbb
xor
mov
outsl
enter
lds
popf
aas
loopne
mov
in
fldcw
xor
cmp
pop
outsb
movsl
es
mov
xchg
add
rolb
mov
xor
mov
add
lea
cltd
pop
dec
adc
addb
xchg
jge
xor
mov
add
dec
pop
stc
mov
icebp
dec
sub
add
cltd
movsb
push
cmp
xchg
sub
daa
cmp
jns
cltd
fmull
add
cltd
push
add
mov
cld
jne
pop
inc
add
arpl
add
mov
out
jo
mov
add
stc
pop
aas
sub
rolb
cmp
mov
inc
add
mov
or
xor
mov
inc
add
mov
add
push
add
push
pop
in
data16
cmc
cmpsl
adc
mov
dec
add
js
lahf
jbe
inc
add
xor
and
mov
rolb
jns
in
nop
add
jl
int
inc
pop
cmp
mov
add
lahf
and
pop
dec
outsl
addb
jo
mov
add
shrl
push
mov
inc
cmp
addb
jae
shl
dec
scas
mov
aas
adc
pop
push
xchg
sbb
inc
cmp
cmp
cmpsb
add
add
mov
cmp
push
pop
aad
mov
inc
faddl
jo
mov
sbb
jl
fdivrp
jnp
dec
nop
add
movsb
dec
out
xor
mov
mov
add
adc
sbb
xchg
pop
dec
out
fs
test
or
test
xchg
test
andl
mov
add
mov
sbb
add
add
add
push
jmp
or
int3
sbb
push
sbb
xchg
into
lcall
xor
mov
pop
and
add
test
sub
popa
std
cmp
push
or
das
push
loopne
mov
adc
xor
add
fistps
mov
les
js
fs
push
ljmp
mov
in
add
add
or
in
cmp
or
iret
in
add
add
sti
jp
add
push
adc
mov
int
push
or
fildll
dec
and
into
inc
mov
mov
add
xchg
iret
inc
xor
rolb
mov
xchg
rolb
mov
or
xor
mov
das
sbb
shl
test
lea
mov
inc
sub
and
and
jl
add
gs
mov
add
add
test
push
sub
add
out
add
mov
jbe
mov
jecxz
repz
mov
mov
mov
mov
add
pop
xor
mov
aam
fwait
sahf
cmp
dec
movsl
mov
aas
xor
mov
sbbl
jnp
xchg
jns
outsb
mov
and
mov
add
lds
mov
insb
loope
enter
mov
insl
lahf
jge
adc
rolb
mov
addb
pop
rolb
mov
out
icebp
mov
ret
popf
dec
fscale
popf
inc
push
ja
in
rolb
in
push
or
adc
mov
pop
dec
dec
lahf
mov
inc
add
and
imulb
aad
inc
imul
iret
jecxz
repnz
push
test
fdiv
add
inc
mov
mov
dec
scas
mov
add
jmp
or
fadds
mov
mov
mov
movsb
out
mov
out
ret
jmp
hlt
in
push
or
adc
add
outsb
scas
sbb
nop
add
enter
fcmovnu
fdivrl
cmp
aas
xor
mov
insb
sti
pop
push
sbb
and
mov
add
add
pusha
add
mov
jb
mov
mov
stc
in
inc
int
add
add
call
add
mov
jne
add
inc
or
mov
jno
iret
xchg
pop
add
enter
loopne
mov
fmuls
dec
fstpl
lea
cwtl
out
adc
fxch
lods
sub
fimuls
add
cmp
mov
add
stos
push
enter
add
fs
and
add
xchg
or
jecxz
lret
mov
mov
pop
jno
pop
mov
fmuls
sbb
jns
movhps
sarl
add
and
add
jle
mov
xlat
jle
add
inc
shll
add
sbb
and
mov
mulps
mull
add
xchg
add
fidivs
xor
jl
xchg
lahf
std
dec
sti
popf
mov
movsb
or
in
loopne
mov
add
mov
add
jae
test
jg
jle
in
and
xor
mov
out
mov
add
inc
add
add
mov
jnp
cmp
inc
add
mov
add
jnp
loope
add
pop
mov
lret
jo
mov
add
add
add
loope
ret
sbb
jle
ss
mov
mov
mov
xor
mov
cs
add
mov
loopne
mov
mov
xchg
addr16
fnstcw
adc
mov
adc
mov
xchg
aas
mov
test
mov
leave
or
pop
cmpsb
ja
add
add
sahf
mov
in
daa
mov
sub
mov
jo
mov
xchg
mov
mov
xor
pop
loope
cmp
add
hlt
in
mov
test
mov
mov
fcomps
fimull
push
and
mov
mov
fwait
scas
lds
std
bound
mov
jnp
sbb
add
stc
sbb
xchg
mov
sub
xor
mov
mov
out
pop
inc
leave
imul
add
cmpsl
addr16
cmp
xchg
sub
sub
movsl
in
jb
mov
rorl
stos
es
mov
ljmp
mov
or
test
mov
dec
xor
in
adc
jns
rolb
push
add
mov
xchg
pop
xor
sbb
xchg
ljmp
mov
mov
outsl
stos
cli
aad
jle
add
or
mov
cmc
in
lahf
push
or
sub
push
push
add
cmp
mov
push
lock
stos
inc
add
jp
jbe
add
mov
mov
jmp
mov
add
addb
mov
xchg
jecxz
mov
add
add
cltd
call
icebp
call
add
pop
daa
jg
add
or
into
cmpsb
pop
adc
mov
rolb
das
cmp
ja
xchg
push
sahf
cmp
nop
add
movsl
in
stos
cmpsb
fldt
outsb
jecxz
rolb
mov
out
int3
movsb
and
aaa
push
inc
out
rolb
mov
or
xor
push
insl
je
cmp
xchg
int3
mov
pop
shrl
repnz
mov
xchg
inc
add
push
pop
int
cmpsl
xlat
les
mov
jge
add
insb
xchg
add
xor
mov
mov
and
add
loopne
mov
js
cmp
inc
add
ja
add
or
add
inc
add
or
test
or
in
addb
mov
mov
iret
and
push
scas
or
call
mov
add
add
dec
test
add
sub
add
pop
push
add
xor
or
add
add
and
mov
je
or
adc
jb
mov
jns
fcompl
push
add
leave
imul
lods
sahf
xor
into
xchg
mov
mov
adc
cmp
mov
icebp
sub
push
and
jg
pop
fs
notl
cmp
into
scas
mov
mov
add
xor
mov
mov
test
pop
out
add
mov
add
add
mov
add
mov
mov
add
lods
adc
mov
ficoms
add
ljmp
in
js
jns
sti
aas
xchg
pushl
mov
inc
xchg
dec
xchg
cmp
mov
mov
data16
add
dec
out
gs
inc
mov
in
add
jmp
cwtl
inc
cmc
xchg
xchg
and
jmp
in
mov
out
mov
push
cmovnp
jnp
xchg
into
mov
mov
mov
outsb
adc
push
int3
fnstcw
sbb
add
adc
mov
jno
insb
inc
cmp
mov
std
xor
aaa
les
mov
mov
jmp
mov
pop
add
cld
jae
cli
nop
add
xor
addr16
pop
iret
into
outsb
adc
add
mov
add
inc
mov
iret
dec
testb
addb
out
add
mov
mov
dec
ret
dec
jnp
data16
inc
cmpsl
fsub
mov
mov
mov
add
inc
jle
stos
pop
aas
outsl
repz
push
mov
add
add
add
add
pushf
and
push
adc
xchg
pop
fldcw
dec
dec
jb
mov
pop
out
bound
mov
mov
add
mov
cld
inc
cmpxchg
jnp
aad
dec
adc
rolb
mov
add
rolb
sbb
add
fidivrs
add
mov
mov
jbe
scas
xchg
add
mov
mov
cmp
jae
test
cmp
sbb
jb
mov
xlat
pop
lcall
mov
fwait
outsb
xor
mov
imul
mov
int3
mov
cltd
cwtl
iret
fldl
cmp
jne
lods
mov
cld
dec
dec
mov
xor
mov
dec
sub
mov
sbb
test
inc
subl
les
mov
stos
jb
mov
stos
jbe
xchg
shll
rolb
mov
test
mov
add
cmpsl
jecxz
pop
pop
jne
mov
stc
cmp
fsubp
add
mov
mov
cmp
sub
jo
mov
xchg
add
mov
add
mov
ret
mov
pop
dec
fsubrs
inc
int
iret
xchg
loop
mov
rolb
mov
jne
mov
adc
mov
xchg
icebp
mov
neg
pop
and
mov
pop
insb
xor
iret
dec
push
pop
push
imul
lods
icebp
inc
xor
sub
lret
mov
jo
mov
add
test
add
or
addb
jns
inc
sbbl
adc
add
sub
jg
push
mov
inc
hlt
int3
and
mov
dec
ljmp
jns
mov
mov
cs
add
add
mov
add
out
loope
inc
and
mov
sbb
dec
cmp
sahf
jo
mov
jns
fwait
call
mov
mov
dec
cmpsl
pand
fucomip
lock
adc
mov
add
sub
mov
test
lods
nop
add
push
push
mov
mov
mov
xchg
pop
nop
add
or
jmp
pusha
add
jge
and
mov
outsl
addb
out
mov
pushf
aas
inc
push
inc
lahf
adc
mov
lcall
jnp
lcall
add
int
rolb
mov
aad
ss
pop
or
notb
data16
mov
pop
std
mov
push
add
je
lret
test
or
or
icebp
hlt
in
stos
mov
test
add
push
add
pop
out
pop
lcall
mov
daa
pop
aaa
inc
push
add
sarl
cmp
mov
loopne
mov
lds
pop
jmp
xchg
xchg
stos
push
in
lcall
add
ja
jmp
out
cs
add
or
mov
mov
test
rolb
mov
fidivs
mov
dec
jp
adc
ljmp
das
fs
adc
xor
imul
mov
add
movsl
or
shll
mov
add
imul
xor
mov
loope
add
enter
sub
xor
mov
mov
dec
xor
test
idivb
add
add
push
int
sub
xchg
add
add
testb
out
iret
push
lea
pop
mov
add
mov
test
mov
fildll
jae
dec
jo
mov
cmp
mov
add
add
sbb
or
or
cmp
cltd
int
dec
push
sti
mov
push
sahf
iret
fimuls
mov
xor
mov
xchg
sbb
mov
jns
aam
add
mov
test
dec
sbb
jbe
cmp
push
push
inc
push
lret
pop
fdivrl
adc
in
mov
add
cli
sbb
jno
out
adc
addb
js
lea
std
ljmpw
add
cltd
pop
ljmp
nop
add
push
add
cmp
cli
adc
add
adc
mov
mov
mov
cli
cltd
ficompl
iret
cmpsl
int3
mov
mov
xchg
or
ficoms
aaa
jo
mov
mov
mov
jbe
jecxz
arpl
mov
pop
mov
movsb
sbb
popa
mov
mov
mov
in
dec
test
fidivl
repnz
mov
add
cmpsb
jbe
dec
ja
icebp
dec
push
add
mov
fistl
mov
add
outsl
idivb
cmp
mov
xchg
pop
add
pop
loopne
mov
dec
idivl
mov
xor
js
mov
in
sub
mov
inc
jge
and
push
sbb
aas
mov
jge
add
mov
mov
inc
adc
lret
int
ret
movsl
push
add
add
inc
add
xor
rolb
mov
add
inc
add
repnz
nop
cld
jae
pop
add
in
mov
cs
add
add
ret
ljmp
rcl
lcall
nop
leave
jmp
add
add
add
add
push
clc
repnz
nop
cld
jae
add
push
fisttpll
xor
push
rep
clc
repnz
nop
cld
jae
incl
loopne
add
adc
mov
repnz
nop
cld
jae
add
add
and
repnz
nop
cld
jae
or
add
dec
sbb
jb
clc
repnz
nop
cld
jae
add
add
inc
push
sbb
rclb
out
inc
add
jns
add
and
add
or
mov
clc
repnz
nop
cld
jae
add
in
jne
clc
repnz
nop
cld
jae
add
xchg
mov
clc
repnz
nop
cld
jae
adc
idivl
add
or
int
add
cltd
add
mov
repnz
nop
cld
jae
add
ret
add
adc
repnz
nop
cld
jae
add
in
negb
push
clc
repnz
nop
cld
jae
ret
add
lahf
mov
clc
repnz
nop
cld
jae
push
push
lcall
in
inc
add
add
mov
add
call
push
mov
nop
leave
jmp
add
or
mov
add
in
nop
leave
jmp
mov
add
ret
stos
mov
clc
repnz
nop
cld
jae
add
add
je
cmp
nop
nop
cld
jae
aad
loopne
lcall
nop
nop
cld
jae
push
add
adc
add
add
and
clc
repnz
nop
cld
jae
add
leave
mov
clc
repnz
nop
cld
jae
mull
mov
add
repnz
nop
cld
jae
add
pop
dec
jb
mov
xchg
push
pop
push
mov
dec
jecxz
fisttpl
data16
add
add
xor
mov
mov
nop
leave
jmp
add
fstl
nop
lahf
enter
clc
repnz
nop
cld
jae
add
add
add
push
push
mov
nop
leave
jmp
add
add
mov
lea
clc
repnz
nop
cld
jae
add
cmp
dec
divb
jmp
incl
add
or
ret
mov
frstor
arpl
inc
mov
xchg
jnp
inc
lock
mov
nop
leave
jmp
add
add
pop
push
mov
xchg
ret
add
adc
aad
lcall
add
add
add
clc
repnz
nop
cld
jae
add
mov
push
clc
repnz
nop
cld
jae
add
mov
adc
add
pop
je
clc
repnz
nop
cld
jae
add
in
jmp
add
pop
add
ljmp
ljmp
or
clc
repnz
nop
cld
jae
xchg
add
pop
pusha
clc
repnz
nop
cld
jae
add
dec
add
add
add
nop
nop
cld
jae
jns
add
leave
add
sbb
add
add
add
add
ficoms
add
fadds
jb
clc
repnz
nop
cld
jae
add
lcall
jae
aad
add
add
fidivs
sarl
mov
nop
leave
jmp
ficoms
xchg
add
push
mov
xchg
ret
add
add
popa
pusha
add
pop
and
add
repnz
nop
cld
jae
xor
in
xor
push
mov
nop
leave
jmp
add
sub
add
xchg
mov
fs
repnz
nop
cld
jae
pop
add
sub
inc
in
mov
clc
repnz
nop
cld
jae
in
add
add
mov
mov
xchg
ret
add
add
push
mov
xchg
ret
aad
daa
pop
mov
add
mov
in
nop
leave
jmp
add
add
add
dec
add
push
mov
nop
leave
jmp
mov
mov
popa
mov
mov
fs
mov
clc
repnz
nop
cld
jae
add
lcall
jne
push
mov
xchg
ret
add
adc
xchg
sub
cmp
repnz
nop
cld
jae
adc
adc
sub
fidivs
sar
nop
nop
cld
jae
lahf
add
in
cmpsb
inc
in
and
clc
repnz
nop
cld
jae
ljmp
mov
clc
repnz
nop
cld
jae
cltd
pop
sub
stc
push
mov
nop
leave
jmp
add
aad
add
mov
loope
das
add
clc
repnz
nop
cld
jae
dec
add
movb
dec
push
clc
repnz
nop
cld
jae
xor
pop
adc
and
push
mov
xchg
ret
ret
aad
push
pop
add
js
jne
push
mov
nop
leave
jmp
add
dec
testb
add
add
repnz
nop
cld
jae
add
add
inc
push
mov
xchg
ret
dec
add
add
push
dec
add
mov
push
mov
nop
leave
jmp
testb
adc
push
mov
nop
leave
jmp
add
add
daa
inc
mov
dec
add
clc
repnz
nop
cld
jae
add
adc
aad
pop
push
clc
repnz
nop
cld
jae
xchg
add
add
ljmp
push
mov
xchg
ret
add
movb
outsl
add
clc
repnz
nop
cld
jae
testb
add
aad
xchg
pop
add
clc
repnz
nop
cld
jae
add
add
je
push
clc
repnz
nop
cld
jae
pop
add
mov
clc
repnz
nop
cld
jae
jb
mov
dec
xor
push
mov
xchg
ret
sub
add
fidivrs
shl
push
mov
nop
leave
jmp
movb
add
add
loop
mov
nop
leave
jmp
add
ds
add
clc
repnz
nop
cld
jae
lcall
mov
clc
repnz
nop
cld
jae
add
push
push
xchg
clc
repnz
nop
cld
jae
adc
xchg
add
leave
sub
in
nop
leave
jmp
aad
add
push
add
add
add
repnz
nop
cld
jae
add
pop
inc
push
mov
nop
leave
jmp
add
ljmp
lds
stos
jmp
decl
in
add
add
xchg
mov
inc
sbb
repnz
nop
cld
jae
add
push
idiv
push
cmp
and
nop
nop
cld
jae
aad
push
pop
stos
and
clc
repnz
nop
cld
jae
push
add
aad
leave
mov
clc
repnz
nop
cld
jae
add
leave
add
scas
mov
push
mov
xchg
ret
push
add
cwtl
push
push
mov
xchg
ret
add
add
cmp
daa
jo
mov
pop
push
mov
xchg
ret
push
pop
add
lahf
cltd
add
adc
add
push
mov
nop
leave
jmp
nop
sub
cltd
jns
dec
push
mov
xchg
ret
add
daa
push
mulb
mov
repnz
nop
cld
jae
add
add
ficoms
sub
push
push
mov
xchg
ret
jns
pop
xchg
pop
cltd
incl
pop
nop
clc
repnz
nop
cld
jae
add
inc
cmp
add
scas
xor
clc
repnz
nop
cld
jae
add
mov
mov
out
or
add
repnz
nop
cld
jae
daa
push
pop
jb
subl
push
mov
xchg
ret
add
push
add
in
daa
gs
add
cmp
shl
jge
inc
and
jmp
add
add
add
push
add
add
add
sub
mov
nop
nop
cld
jae
add
add
cmp
repnz
nop
cld
jae
mov
ficoms
dec
add
leave
push
inc
cmp
sti
clc
repnz
nop
cld
jae
add
add
add
xchg
fiadds
xchg
ret
add
add
mov
inc
add
psubb
xchg
ret
jo
add
in
push
push
xchg
push
sbb
repnz
nop
cld
jae
ret
push
push
add
xchg
xor
mov
push
clc
repnz
nop
cld
jae
ret
idiv
ret
add
cld
or
nop
leave
jmp
pop
in
xchg
test
leave
jmp
and
add
sub
cmp
adc
imul
nop
nop
cld
jae
add
add
add
dec
mov
clc
repnz
nop
cld
jae
mov
daa
add
mov
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
xchg
mov
cli
push
jae
cmpw
push
mov
nop
leave
jmp
cltd
add
inc
push
adc
clc
repnz
nop
cld
jae
mov
pop
add
mov
mov
push
mov
xchg
ret
addr16
add
add
add
loopne
mov
add
ds
push
mov
xchg
ret
add
ret
add
mov
clc
repnz
nop
cld
jae
jb
add
leave
pop
add
cld
jae
movb
lahf
push
add
add
push
push
mov
xchg
ret
push
add
xchg
iret
add
push
mov
nop
leave
jmp
add
jo
add
jo
cwtl
je
clc
repnz
nop
cld
jae
xchg
cmp
enter
nop
cld
jae
add
movsb
jge
sbb
cmp
repnz
nop
cld
jae
add
add
fimuls
nop
cld
jae
jns
add
incl
add
add
mov
adc
inc
add
add
add
jno
stc
add
and
clc
repnz
nop
cld
jae
add
mov
push
add
clc
repnz
nop
cld
jae
testl
mov
and
add
repnz
nop
cld
jae
incl
add
test
and
repnz
nop
cld
jae
add
daa
cli
jo
add
add
jae
inc
add
pop
cltd
push
ret
add
add
mov
repnz
nop
cld
jae
push
add
loopne
daa
mov
xor
mov
clc
repnz
nop
cld
jae
add
add
lahf
divl
pop
lea
clc
repnz
nop
cld
jae
add
add
dec
add
push
push
mov
nop
leave
jmp
add
add
add
add
jnp
jle
add
clc
repnz
nop
cld
jae
push
add
loopne
add
repnz
nop
cld
jae
add
add
adc
add
and
mov
jmp
add
add
mov
neg
add
adc
leave
add
or
in
nop
leave
jmp
add
dec
add
clc
repnz
nop
cld
jae
add
fiadds
add
dec
add
add
nop
nop
cld
jae
add
add
je
clc
repnz
nop
cld
jae
add
and
repnz
nop
cld
jae
pop
in
jns
add
nop
cld
jae
divl
cmp
sub
add
clc
repnz
nop
cld
jae
add
testl
outsl
arpl
add
repnz
nop
cld
jae
add
add
cmc
jbe
push
push
mov
xchg
ret
notrack
jns
stos
jl
push
mov
nop
leave
jmp
mov
add
push
mov
add
add
sysret
add
push
or
add
mov
clc
repnz
nop
cld
jae
and
mov
jmp
add
movb
mov
incl
ret
test
je
sub
aaa
lock
add
nop
mov
lods
add
push
mov
xchg
ret
testl
pop
fcmovnb
add
add
cmp
jb
mov
add
add
pop
add
push
mov
movb
ljmp
add
mov
pop
add
jne
clc
repnz
nop
cld
jae
dec
adc
repnz
nop
cld
jae
add
jns
add
cltd
add
enter
nop
cld
jae
push
add
add
add
add
clc
repnz
nop
cld
jae
add
add
in
inc
inc
push
addb
cmp
nop
cld
jae
jb
adc
mov
nop
cld
jae
leave
cltd
add
dec
add
jl
mov
clc
repnz
nop
cld
jae
pop
cltd
addb
mov
call
push
mov
nop
leave
jmp
add
pop
fdivp
inc
cmp
nop
cld
jae
addr16
add
lahf
add
add
add
add
repnz
nop
cld
jae
add
push
mov
jae
call
in
nop
leave
jmp
adc
add
movb
repnz
nop
cld
jae
add
daa
sub
add
add
push
mov
nop
leave
jmp
add
and
add
and
push
mov
xchg
ret
add
ret
loopne
mov
add
clc
repnz
nop
cld
jae
cmp
push
mov
push
mov
add
add
add
xor
add
je
clc
repnz
nop
cld
jae
add
xor
add
mov
clc
repnz
nop
cld
jae
add
cmp
nop
nop
cld
jae
xchg
jnp
repz
mov
xchg
ret
add
add
mov
add
jle
push
mov
nop
leave
jmp
pop
add
add
add
add
add
repnz
nop
cld
jae
mov
push
add
repnz
nop
cld
jae
add
add
and
clc
repnz
nop
cld
jae
pop
add
or
xor
mov
mov
nop
leave
jmp
mov
add
iret
mov
clc
repnz
nop
cld
jae
mov
ret
clc
repnz
nop
cld
jae
jns
ds
add
add
mov
add
add
fisubrs
mov
sub
pop
mov
push
mov
nop
leave
jmp
dec
nop
sub
add
daa
xchg
mov
clc
repnz
nop
cld
jae
jb
add
pop
push
mov
push
clc
repnz
nop
cld
jae
ret
add
inc
pop
add
lock
in
inc
add
or
add
ret
daa
add
xor
clc
repnz
nop
cld
jae
ffree
pop
dec
mov
fimull
test
add
add
in
nop
leave
jmp
add
pushf
mov
clc
repnz
nop
cld
jae
fiadds
mov
jecxz
add
add
ret
add
push
clc
repnz
nop
cld
jae
add
add
jbe
mov
mov
xchg
ret
add
cltd
dec
add
add
pop
push
push
mov
xchg
ret
xor
add
fimuls
add
dec
push
clc
repnz
nop
cld
jae
mov
inc
aam
add
clc
repnz
nop
cld
jae
lcall
xchg
clc
repnz
nop
cld
jae
cmp
add
movb
jl
push
mov
nop
leave
jmp
in
in
add
add
add
jg
clc
repnz
nop
cld
jae
add
add
add
jmp
clc
repnz
nop
cld
jae
add
or
mov
xchg
ret
daa
nop
in
out
push
add
add
nop
leave
jmp
pop
add
pop
add
add
dec
jne,pn
clc
repnz
nop
cld
jae
pop
add
push
mov
clc
repnz
nop
cld
jae
mov
cltd
xchg
sub
rclb
in
nop
leave
jmp
in
add
add
add
jp
jmp
jp
jmp
incl
ret
sub
out
xchg
add
inc
inc
adc
mov
clc
repnz
nop
cld
jae
loopne
hlt
mov
nop
nop
cld
jae
add
push
cltd
ret
add
nop
nop
cld
jae
add
inc
add
add
jo
mov
pop
clc
repnz
nop
cld
jae
add
add
add
add
xor
push
mov
nop
leave
jmp
add
add
xchg
mov
adc
add
xor
aad
add
add
add
ret
notb
lods
push
mov
xchg
ret
add
mov
jl
jl
sbb
mov
nop
leave
jmp
xchg
add
sub
repnz
nop
cld
jae
jns
add
and
call
repnz
nop
cld
jae
add
nop
and
dec
or
sbb
jg
clc
repnz
nop
cld
jae
add
add
sub
repnz
nop
cld
jae
push
mov
add
mov
xchg
ret
add
in
push
nop
add
xlat
rolb
mov
push
mov
xchg
ret
add
add
aad
add
push
push
mov
xchg
ret
add
mov
ljmp
jecxz
pop
fwait
ja
adc
add
sub
inc
fpatan
movsb
push
mov
xchg
ret
add
add
add
jns
xchg
mov
add
push
mov
nop
leave
jmp
add
leave
xchg
rep
clc
repnz
nop
cld
jae
sub
dec
add
push
or
movb
fdiv
inc
add
add
dec
sub
dec
inc
xor
push
mov
xchg
ret
sub
pop
add
clc
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
ret
add
add
mov
clc
repnz
nop
cld
jae
add
mov
mov
jne
clc
repnz
nop
cld
jae
add
dec
cmp
push
mov
nop
leave
jmp
add
ljmp
add
push
mov
nop
leave
jmp
add
jb
add
pop
fldenv
xor
add
clc
repnz
nop
cld
jae
loopne
inc
push
add
mov
nop
leave
jmp
add
add
lahf
xor
lcall
movsb
clc
repnz
nop
cld
jae
add
add
xor
mov
nop
nop
cld
jae
pop
out
fstl
add
clc
repnz
nop
cld
jae
cltd
add
xchg
push
rorl
cltd
cld
call
in
nop
leave
jmp
cltd
in
add
movsb
adc
add
inc
clc
repnz
nop
cld
jae
pop
incl
leave
dec
nop
add
pop
mov
clc
repnz
nop
cld
jae
daa
dec
fdivp
add
mulb
mov
in
push
mov
xchg
ret
add
add
mov
daa
and
add
push
mov
loopne
add
pop
mov
cmpsl
add
add
cltd
jne
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
nop
add
add
pop
pop
addr16
jae
clc
repnz
nop
cld
jae
xchg
push
mov
nop
leave
jmp
in
add
push
add
mov
push
push
mov
xchg
ret
jo
jns
nop
add
add
shl
scas
imul
clc
repnz
nop
cld
jae
add
add
dec
add
mov
xchg
ret
add
jns
add
daa
or
nop
nop
cld
jae
pop
dec
mov
push
sbb
cmc
inc
add
add
testl
into
cs
clc
repnz
nop
cld
jae
add
dec
aad
jns
fisttpll
in
add
mov
cmp
stc
mov
push
mov
xchg
ret
sub
add
leave
sub
iret
or
cld
jae
add
add
add
add
add
push
clc
inc
add
add
add
or
add
push
mov
nop
leave
jmp
mov
pop
subl
clc
repnz
nop
cld
jae
sub
push
adc
popa
xchg
push
addb
popl
ret
push
mov
xchg
ret
dec
nop
add
mov
mov
clc
repnz
nop
cld
jae
aad
jo
add
jmp
call
add
add
ret
pop
faddp
mov
xor
add
clc
repnz
nop
cld
jae
ret
add
es
inc
add
testl
aad
push
add
jmp
nop
leave
jmp
add
add
hlt
or
clc
repnz
nop
cld
jae
ljmp
lcall
aam
add
add
inc
xchg
add
add
nop
nop
cld
jae
daa
out
add
pop
in
ljmp
push
mov
nop
leave
jmp
jb
add
add
add
popa
push
mov
nop
leave
jmp
leave
add
adc
add
in
add
add
iret
xchg
add
add
data16
xchg
jl
or
push
call
nop
nop
cld
jae
add
pop
add
es
push
mov
nop
leave
jmp
mov
or
mov
or
add
add
rcr
shll
addb
or
mov
push
clc
repnz
nop
cld
jae
add
add
add
mov
push
clc
repnz
nop
cld
jae
pop
add
inc
add
jo
sub
nop
cld
jae
add
in
dec
xchg
ds
push
mov
nop
leave
jmp
mov
adc
push
ljmp
clc
repnz
nop
cld
jae
mov
add
add
push
loopne
mov
xchg
ret
fiadds
push
loopne
add
repnz
nop
cld
jae
sub
add
testl
mov
lea
nop
cld
jae
cli
add
adc
incl
sub
nop
cld
jae
cli
add
add
add
jl
inc
sbb
in
nop
leave
jmp
aad
push
add
add
dec
add
push
mov
xchg
ret
sub
add
rolb
mov
mov
clc
repnz
nop
cld
jae
add
aad
pop
das
pop
push
mov
xchg
ret
or
jo
add
jns
add
call
clc
repnz
nop
cld
jae
daa
testb
add
add
clc
repnz
nop
cld
jae
add
add
int3
mov
push
mov
nop
leave
jmp
add
add
pop
add
div
push
mov
nop
leave
jmp
add
addr16
add
fcoms
repnz
nop
cld
jae
dec
push
jb
in
add
mov
mov
push
mov
xchg
ret
add
add
ljmp
clc
repnz
nop
cld
jae
add
and
jns
add
clc
repnz
nop
cld
jae
mov
adc
ljmp
clc
repnz
nop
cld
jae
mov
cltd
mov
xor
clc
repnz
nop
cld
jae
call
ret
sub
repnz
nop
cld
jae
add
sbb
mov
nop
leave
jmp
add
add
add
add
clc
repnz
nop
cld
jae
add
sub
add
add
popa
add
mov
xchg
ret
add
add
pop
add
push
mov
nop
leave
jmp
add
sub
movzwl
push
mov
nop
leave
jmp
push
add
and
jmp
add
add
add
cmp
jb
jns
out
cmp
push
mov
nop
leave
jmp
lahf
add
add
pop
adc
je
clc
repnz
nop
cld
jae
add
jp
fisttpl
add
clc
repnz
nop
cld
jae
add
loop
push
mov
nop
leave
jmp
add
aad
add
ficoms
mov
je
clc
repnz
nop
cld
jae
add
cli
ljmp
add
in
nop
leave
jmp
add
add
call
clc
repnz
nop
cld
jae
add
mov
and
mov
and
nop
cld
jae
add
mov
mov
xor
mov
sub
clc
repnz
nop
cld
jae
sub
add
or
mov
xchg
ret
add
add
add
jl
clc
repnz
nop
cld
jae
dec
add
dec
add
xchg
or
fldl
xchg
ret
add
add
xor
mov
push
clc
repnz
nop
cld
jae
cltd
cli
add
mov
movsb
xor
push
jmp
call
add
add
push
add
stos
push
clc
repnz
nop
cld
jae
add
add
inc
xor
clc
repnz
nop
cld
jae
loopne
xchg
loopne
je
inc
push
popa
insb
mov
push
mov
nop
leave
jmp
loopne
jo
inc
add
add
add
add
leave
jmp
nop
leave
daa
ret
add
mov
mov
push
mov
xchg
ret
add
ret
add
xchg
adc
jne
clc
repnz
nop
cld
jae
add
in
out
movzwl
clc
repnz
nop
cld
jae
xor
add
add
test
push
mov
xchg
ret
daa
add
add
add
mov
mov
nop
leave
jmp
add
nop
xchg
add
adc
add
repnz
nop
cld
jae
xor
cltd
jnp
test
push
add
push
mov
nop
leave
jmp
add
xchg
mov
add
pusha
and
add
push
cli
cmp
add
mov
add
push
mov
xchg
ret
add
out
sub
mov
repnz
nop
cld
jae
cmp
add
mov
clc
repnz
nop
cld
jae
add
add
mov
nop
cld
jae
in
add
int3
pop
push
mov
xchg
ret
add
nop
jo
add
add
adc
mov
xchg
ret
daa
mov
ret
mov
add
add
int
inc
add
add
add
dec
add
shrl
repnz
nop
cld
jae
addr16
in
pop
add
insb
push
push
mov
nop
leave
jmp
ret
pop
xchg
adc
and
aad
call
add
add
add
dec
add
push
pop
add
add
daa
movsb
lods
cmp
push
mov
nop
leave
jmp
push
xor
pop
aad
add
nop
cld
jae
jns
add
lock
adc
repz
repnz
nop
cld
jae
add
lahf
daa
add
add
clc
repnz
nop
cld
jae
add
jo
mov
insb
insb
push
mov
nop
leave
jmp
adc
aad
xchg
mov
testl
push
mov
nop
leave
jmp
test
push
mov
xchg
ret
add
negl
push
jbe
sub
in
push
mov
inc
mov
loopne
mov
mov
test
push
mov
nop
leave
jmp
add
ljmp
add
clc
repnz
nop
cld
jae
add
add
or
inc
and
push
mov
nop
leave
jmp
xchg
add
cmpsl
mov
popf
clc
repnz
nop
cld
jae
push
dec
add
clc
repnz
nop
cld
jae
add
add
add
testb
add
add
mov
mov
add
nop
cld
jae
add
add
psubsw
idiv
lcall
sub
add
ret
add
dec
sub
add
popa
add
mov
xchg
ret
add
ret
sub
nop
leave
jmp
add
fisubs
inc
das
rep
clc
repnz
nop
cld
jae
mov
pop
dec
add
push
cld
add
clc
repnz
nop
cld
jae
ret
add
add
clc
clc
repnz
nop
cld
jae
sub
dec
add
aas
push
clc
repnz
nop
cld
jae
cltd
dec
add
out
cltd
add
add
push
imul
nop
nop
cld
jae
sub
add
fwait
mov
clc
repnz
nop
cld
jae
add
add
add
jmp
fldl
add
notl
jns
add
add
cmp
hlt
fs
movsl
lods
jmp
testl
add
jns
xchg
add
push
mov
xchg
ret
dec
add
push
add
pop
mov
xor
add
push
mov
nop
leave
jmp
add
jns
sub
pop
cmp
repnz
nop
cld
jae
lahf
add
jmp
add
sub
and
add
push
push
inc
sbb
adc
clc
repnz
nop
cld
jae
add
mov
dec
sub
clc
repnz
nop
cld
jae
sub
add
out
add
pop
push
mov
xchg
ret
add
adc
add
add
hlt
pusha
add
cmc
incl
cltd
movb
dec
and
loopne
dec
push
add
xlat
push
sbb
jne
clc
repnz
nop
cld
jae
add
ret
pop
add
dec
push
mov
xchg
ret
add
mov
adc
mov
cld
add
jmp
lcall
mov
adc
add
mov
add
push
mov
xchg
ret
add
push
cmp
or
movsl
nop
add
jne
clc
repnz
nop
cld
jae
add
add
mov
popa
add
pop
add
add
add
fldl
add
dec
adc
mov
dec
adc
js
inc
add
loopne
lahf
adc
sub
push
mov
xchg
ret
add
inc
add
xchg
clc
repnz
nop
cld
jae
dec
add
add
mov
clc
repnz
nop
cld
jae
ret
add
ret
clc
repnz
nop
cld
jae
loopne
or
mov
cltd
dec
lret
mov
clc
repnz
nop
cld
jae
add
dec
jo
mov
stos
push
mov
nop
leave
jmp
add
add
and
mov
add
add
repnz
nop
cld
jae
add
icebp
das
je
push
mov
nop
leave
jmp
ret
add
jno
pop
push
mov
xchg
ret
leave
add
jo
jo
add
push
mov
inc
add
add
add
add
mov
mov
lea
push
mov
nop
leave
jmp
add
aad
xchg
dec
xchg
fisttps
lret
inc
add
add
add
add
ljmp
clc
repnz
nop
cld
jae
pop
add
add
xchg
pop
loopne
add
mulb
xor
xchg
scas
add
push
mov
nop
leave
jmp
mov
and
xor
out
inc
int3
mov
push
mov
xchg
ret
add
leave
jo
add
nop
nop
cld
jae
add
out
add
out
mov
push
add
clc
repnz
nop
cld
jae
add
add
add
inc
ret
ds
clc
repnz
nop
cld
jae
xchg
pop
add
outsb
push
push
mov
nop
leave
jmp
add
fldl
add
leave
add
sub
nop
cld
jae
add
xchg
sub
cmp
ret
ds
cmp
daa
add
add
in
nop
leave
jmp
add
xchg
dec
add
sub
mov
xchg
ret
ret
inc
add
lods
push
clc
repnz
nop
cld
jae
cltd
pop
mov
adc
mov
nop
leave
jmp
add
nop
incl
in
add
sar
repnz
nop
cld
jae
mov
mov
add
lret
mov
clc
repnz
nop
cld
jae
add
add
add
mov
nop
leave
jmp
add
push
add
icebp
fsts
repnz
nop
cld
jae
ds
loopne
adc
and
sahf
mov
push
mov
xchg
ret
add
add
add
adc
repnz
nop
cld
jae
inc
add
fisubrs
mov
clc
repnz
nop
cld
jae
add
cmp
sbb
inc
add
mov
in
add
push
mov
xchg
ret
mov
add
lcall
lret
clc
repnz
nop
cld
jae
sub
add
mov
pop
push
mov
nop
leave
jmp
cltd
mov
fiadds
pop
add
xlat
mov
in
nop
leave
jmp
add
add
cltd
dec
pop
push
cltd
jne
push
mov
nop
leave
jmp
add
push
add
mov
inc
add
add
aad
add
mov
mov
xchg
ret
add
add
loopne
ret
mov
lods
xor
push
mov
xchg
ret
daa
add
add
clc
repnz
nop
cld
jae
nop
add
add
add
push
mov
nop
leave
jmp
add
mov
in
add
add
sub
repnz
nop
cld
jae
aad
add
add
mov
nop
nop
cld
jae
add
dec
add
add
aas
xchg
push
mov
xchg
ret
add
add
push
add
repnz
nop
cld
jae
add
pop
add
mov
pop
clc
repnz
nop
cld
jae
add
pop
xchg
mov
jle
add
in
nop
leave
jmp
add
add
add
out
mov
clc
repnz
nop
cld
jae
mov
in
add
mov
mov
pushl
clc
repnz
nop
cld
jae
mov
add
lahf
add
add
clc
repnz
nop
cld
jae
mov
add
push
mov
xchg
ret
add
add
pop
and
mov
jmp
cmpl
jae
dec
add
mov
xchg
ret
or
ficomps
add
add
push
push
mov
nop
leave
jmp
add
add
repnz
nop
cld
jae
add
fiadds
ds
mov
mov
push
mov
xchg
ret
add
add
cld
call
push
mov
nop
leave
jmp
mov
sub
popa
add
repnz
nop
cld
jae
ljmp
rep
push
mov
nop
leave
jmp
add
testl
mov
fs
repnz
nop
cld
jae
fdivp
testl
clc
repnz
nop
cld
jae
notb
lahf
inc
add
lret
xor
clc
repnz
nop
cld
jae
adc
add
xchg
rolb
mov
nop
nop
cld
jae
add
adc
daa
add
cld
xor
push
mov
nop
leave
jmp
and
ljmp
add
clc
repnz
nop
cld
jae
add
ljmp
repnz
nop
cld
jae
add
fimuls
in
aaa
rcrl
in
add
add
pop
add
add
enter
js
repnz
nop
cld
jae
fiadds
add
jp
add
or
inc
add
and
testb
testl
repnz
nop
cld
jae
add
xchg
xchg
push
push
mov
xchg
ret
ljmp
mov
nop
cld
jae
pop
dec
add
loopne
mov
shrl
mov
clc
repnz
nop
cld
jae
inc
aad
push
push
mov
xchg
ret
pop
add
pop
add
jo
mov
xor
push
mov
xchg
ret
pop
imull
pop
add
mov
push
clc
repnz
nop
cld
jae
add
lcall
add
mov
pushl
push
mov
nop
leave
jmp
add
mov
pop
sahf
jmp
inc
inc
xor
add
daa
lcall
add
dec
sub
mov
inc
add
pop
leave
add
add
add
clc
repnz
nop
cld
jae
push
add
xchg
mov
jne
clc
repnz
nop
cld
jae
jb
add
jne
push
mov
nop
leave
jmp
cltd
xchg
leave
fcoml
in
lock
mov
jo
add
add
mov
sbb
outsb
movzwl
clc
repnz
nop
cld
jae
in
pop
add
add
pop
clc
repnz
nop
cld
jae
aad
fstl
lahf
jb
mov
clc
repnz
nop
cld
jae
add
xchg
cltd
lea
push
mov
xchg
ret
movb
push
add
lcall
nop
cld
jae
add
testl
mov
nop
cld
jae
add
mov
aad
or
aad
scas
mov
clc
repnz
nop
cld
jae
adc
mov
mov
mov
nop
leave
jmp
add
add
aad
fstpl
add
cmp
nop
nop
cld
jae
in
add
push
push
mov
xchg
ret
add
add
cltd
add
add
test
push
mov
nop
leave
jmp
add
add
adc
mov
clc
repnz
nop
cld
jae
add
movb
pop
add
nop
cld
jae
sub
add
std
jne
clc
repnz
nop
cld
jae
add
out
push
shrl
mov
push
clc
repnz
nop
cld
jae
xchg
mov
or
clc
repnz
nop
cld
jae
dec
xor
ljmp
nop
add
repnz
nop
cld
jae
add
add
loop
mov
add
mov
outsl
test
push
mov
nop
leave
jmp
mov
idivl
xchg
xchg
xchg
jae
pusha
clc
repnz
nop
cld
jae
add
ds
xor
add
clc
repnz
nop
cld
jae
pop
add
nop
add
jbe
clc
repnz
nop
cld
jae
add
add
push
push
mov
nop
leave
jmp
add
add
aad
xchg
adc
jne
clc
repnz
nop
cld
jae
add
dec
add
int
jge
clc
repnz
nop
cld
jae
dec
add
push
mov
add
repnz
nop
cld
jae
add
add
cmpl
in
nop
leave
jmp
add
testl
add
adc
div
addr16
add
mov
adc
in
nop
leave
jmp
ljmp
push
je
push
clc
repnz
nop
cld
jae
add
add
lea
push
mov
xchg
ret
or
xchg
add
add
push
bound
mov
inc
clc
repnz
nop
cld
jae
mov
testb
add
loopne
pop
push
mov
nop
leave
jmp
add
add
add
nop
cld
jae
jo
lcall
add
repnz
nop
cld
jae
add
mov
add
nop
add
mov
xchg
ret
adc
sub
cmp
push
out
shl
clc
repnz
nop
cld
jae
add
testl
jae
push
mov
xchg
ret
cmp
add
add
dec
push
sub
stos
fldl
xchg
ret
aad
add
add
pop
aas
cmpl
push
mov
nop
leave
jmp
add
add
adc
push
lock
lret
sub
in
nop
leave
jmp
add
and
cltd
xchg
add
inc
sti
mov
clc
repnz
nop
cld
jae
in
js
push
mov
nop
leave
jmp
push
pop
add
add
add
add
mov
xchg
ret
add
add
mov
lcall
in
add
mov
add
cld
arpl
add
cmpsb
fs
mov
push
mov
xchg
ret
fldl
jns
add
jb
pop
push
mov
xchg
ret
inc
inc
add
add
pushl
add
add
cld
jae
add
movb
cltd
mov
test
add
clc
repnz
nop
cld
jae
adc
add
repnz
nop
cld
jae
add
in
aad
push
add
dec
inc
clc
repnz
nop
cld
jae
add
add
ljmp
jae
lcall
add
fiadds
in
nop
leave
jmp
push
add
add
dec
add
push
push
mov
xchg
ret
in
lcall
add
xor
add
clc
repnz
nop
cld
jae
and
aas
push
push
mov
nop
leave
jmp
loopne
cltd
movb
add
add
pop
mov
clc
repnz
nop
cld
jae
add
xchg
mov
add
clc
repnz
nop
cld
jae
ret
pop
add
mov
mov
push
push
mov
nop
leave
jmp
push
cmp
add
js
loopne
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
lahf
add
add
add
add
add
in
nop
leave
jmp
fiadds
add
sbb
nop
cld
jae
pop
add
mov
or
clc
repnz
nop
cld
jae
add
add
pop
adc
add
pusha
add
sar
nop
nop
cld
jae
add
add
mov
mov
add
add
add
jb
add
incl
mov
scas
movzwl
push
mov
xchg
ret
mov
mov
clc
repnz
nop
cld
jae
add
add
in
and
push
mov
xchg
ret
add
add
adc
pop
roll
stc
jmp
and
add
add
add
push
clc
repnz
nop
cld
jae
add
idivl
mov
hlt
add
sub
inc
add
add
cli
in
add
das
add
clc
repnz
nop
cld
jae
in
push
xchg
rcrb
repnz
nop
cld
jae
add
add
add
cmp
push
mov
xchg
ret
cli
add
daa
add
push
fadds
add
in
nop
leave
jmp
aad
add
cmpsb
push
psllq
add
add
daa
inc
addr16
add
clc
repnz
nop
cld
jae
cltd
add
dec
ffree
mov
clc
repnz
nop
cld
jae
adc
add
add
rcll
or
repnz
nop
cld
jae
dec
jb
add
add
add
clc
repnz
nop
cld
jae
add
jbe
push
mov
xchg
ret
add
add
add
sub
repnz
nop
cld
jae
add
ret
cmp
repnz
nop
cld
jae
add
add
shr
push
mov
nop
leave
jmp
daa
ljmp
dec
test
push
mov
xchg
ret
add
fstpl
cld
push
mov
xchg
ret
and
mov
add
addb
loop
push
mov
xchg
ret
mov
add
mov
ret
push
mov
nop
leave
jmp
adc
cltd
add
jmp
nop
nop
cld
jae
add
inc
mov
loopne
repz
add
push
mov
xchg
ret
lcall
and
jmp
idiv
add
add
add
add
add
leave
add
xlat
bound
mov
mov
clc
repnz
nop
cld
jae
add
dec
add
repnz
nop
cld
jae
testb
add
cmp
nop
nop
cld
jae
add
out
add
xor
add
clc
repnz
nop
cld
jae
sub
add
mov
xchg
ret
add
add
add
add
mov
xchg
ret
ret
xor
add
add
push
testb
cmp
ret
add
out
or
pop
add
outsl
mov
push
mov
nop
leave
jmp
aad
add
add
adc
repnz
nop
cld
jae
add
add
jle
push
mov
xchg
ret
add
xchg
add
mov
call
clc
repnz
nop
cld
jae
adc
add
ret
out
pusha
push
mov
xchg
ret
lahf
add
add
add
nop
add
addb
aas
mov
clc
repnz
nop
cld
jae
add
add
pop
pop
pop
clc
repnz
nop
cld
jae
fiadds
aad
add
jns
adc
add
add
clc
repnz
nop
cld
jae
pop
push
cli
add
rclb
dec
flds
xchg
ret
add
add
fldl
repnz
nop
cld
jae
cli
pop
add
add
out
es
call
push
mov
nop
leave
jmp
push
add
or
push
mov
push
mov
nop
leave
jmp
add
in
jb
add
push
pop
push
mov
xchg
ret
add
add
leave
add
inc
cld
mov
clc
repnz
nop
cld
jae
add
add
cli
add
push
mov
xchg
ret
push
add
or
add
jb
xor
mov
sub
ss
repnz
nop
cld
jae
cli
add
add
xlat
or
nop
nop
cld
jae
ret
dec
adc
leave
add
mov
nop
leave
jmp
add
add
testb
cmp
repnz
nop
cld
jae
add
push
add
add
add
repnz
nop
cld
jae
pop
and
mov
inc
xor
je
clc
repnz
nop
cld
jae
sub
loopne
and
clc
repnz
nop
cld
jae
xchg
in
movzwl
clc
repnz
nop
cld
jae
add
add
push
imul
nop
cld
jae
push
add
incl
add
mov
push
mov
nop
leave
jmp
sub
add
add
mov
call
cmp
ret
add
dec
daa
in
in
add
mov
push
mov
nop
leave
jmp
add
mov
andl
nop
cld
jae
adc
dec
pop
cld
pop
push
mov
nop
leave
jmp
push
pop
add
in
dec
add
movsb
addr16
mov
clc
repnz
nop
cld
jae
pop
jo
add
add
lods
les
push
mov
nop
leave
jmp
xchg
ljmp
in
add
add
add
add
add
mov
mov
add
lea
or
lahf
scas
xor
ss
pop
out
dec
dec
jns
add
push
sahf
pop
lea
or
xchg
outsl
lahf
dec
addb
mov
adc
rolb
mov
pop
lea
pop
fmul
scas
dec
xchg
repz
add
cli
lods
add
add
rolb
mov
mov
jg
inc
out
add
jmp
add
inc
and
xor
sbb
popl
and
add
bound
mov
mov
add
mov
mov
push
loopne
mov
aas
mov
sbb
fwait
jb
mov
mov
lea
push
shrl
pop
addb
dec
jle
and
mov
scas
or
xchg
aas
mov
adc
jmp
aas
ds
dec
dec
test
mulps
xor
mov
mov
addb
jp
bound
mov
dec
or
sub
add
add
cs
insb
and
xchg
out
popa
test
add
mov
jnp
add
mov
jp
add
mov
ffree
add
push
rolb
insl
xor
mov
repnz
push
ss
out
cmpsl
ljmp
add
lcall
sbb
dec
loopne
mov
jnp
mov
xor
mov
add
pop
imul
add
loopne
mov
stos
add
mov
mov
add
add
jge
add
repnz
mov
xchg
jns
push
aad
add
mov
aas
fwait
das
data16
icebp
ja
xchg
repz
pop
push
js
clc
out
pop
mov
add
sub
xchg
notl
mov
inc
arpl
mov
andl
add
scas
iret
xchg
push
xchg
add
popa
fisubrl
add
stos
sub
lahf
cmp
lret
dec
aad
cmpsl
xchg
jmp
call
mov
lea
pop
int
stc
xchg
jno
add
mov
push
fadd
std
cmp
add
cltd
sub
mov
insl
loop
mov
pop
addr16
rolb
mov
hlt
adc
cmpsl
push
lods
adc
add
add
mov
sahf
mov
xor
add
mov
inc
ds
xor
fwait
ret
imul
loope
shll
add
mov
inc
add
sub
test
xor
jnp
lret
xor
mov
or
add
or
add
mov
jb
mov
add
lret
repnz
mov
fldcw
xchg
adc
mov
mov
lea
xchg
add
mov
mov
pop
dec
hlt
mov
add
in
cld
es
add
fcmovb
popf
cli
adc
inc
add
lock
or
out
add
mov
sub
popf
loopne
mov
int
ret
popf
inc
xchg
or
add
xchg
xchg
push
test
pusha
add
push
std
fadds
fwait
xor
lahf
jno
jp
xchg
jbe
add
sbb
out
xchg
mov
addb
out
fidivl
dec
xor
add
sub
sti
pop
inc
sti
mov
out
jae
xchg
push
pop
ss
add
mov
or
push
arpl
fnsave
xor
mov
pop
and
pop
fistps
sub
jmp
mul
movsl
xchg
adc
mov
inc
add
jno
add
aas
mov
call
add
mov
xor
mov
add
roll
add
xor
push
addr16
out
scas
test
js
clc
xlat
mov
mov
sub
filds
or
std
jb
mov
inc
pusha
add
mov
mov
fisubrl
cltd
stc
xchg
xor
sbb
ret
loopne
mov
push
add
mov
rorl
hlt
popa
ljmp
inc
jl
or
mov
jb
mov
xchg
dec
xchg
xor
add
jge
add
mov
push
lods
insl
repnz
lods
popa
je
outsl
addb
fsubrl
mov
cmpsb
jecxz
and
mov
mov
pop
loope
jne
iret
cwtl
test
add
mov
add
jnp
enter
sbb
enter
dec
push
push
add
lret
inc
test
add
mov
lds
scas
loopne
mov
xor
rolb
mov
pop
ret
push
add
shr
inc
add
jmp
cli
mov
sahf
sbb
scas
cwtl
inc
or
xchg
push
add
sub
imul
mov
mov
movsl
fcomp
in
fdivrp
adc
mov
add
lods
pop
gs
jg
push
scas
xor
mov
arpl
xchg
mov
pusha
add
test
cmp
test
mov
xchg
or
mov
xor
or
pop
mov
int3
hlt
sub
cmp
jns
pop
add
sub
pop
inc
mov
imul
mov
or
in
add
aad
in
out
add
add
cmp
pop
fisttpl
xlat
iret
daa
pop
inc
or
add
sahf
mov
adc
push
push
enter
mov
add
add
pushf
cmp
jge
push
pop
add
mov
jae
add
inc
or
add
sti
mov
push
addr16
pop
jbe
inc
add
push
sahf
testb
mov
mov
cmp
inc
add
mov
fdivl
popf
mov
mov
or
movsb
cwtl
sub
push
push
mov
pop
pop
sub
add
sahf
xor
hlt
push
and
movsl
les
pop
outsl
ret
test
adcl
mov
mov
movsl
addb
mov
push
push
jge
lods
inc
into
or
add
push
lret
jmp
xor
mov
jno
rolb
mov
add
add
es
call
mov
add
rorl
aaa
loop,pt
mov
mov
mov
and
sub
hlt
mov
bound
mov
icebp
leave
pop
or
xor
mov
add
add
mov
imul
ja
lret
lea
sub
ds
cmp
or
dec
outsb
push
ljmp
std
cmp
adc
mov
imul
lea
add
in
leave
add
out
or
xchg
add
push
add
je
into
lahf
push
and
xor
mov
out
inc
dec
test
mov
mov
ss
loopne
mov
add
loope
sub
xor
sub
out
inc
out
test
xbegin
jnp
test
add
xchg
add
xor
outsl
clc
push
add
add
and
and
sub
add
repnz
dec
jmp
mov
test
cmc
outsl
je
xor
ficompl
dec
lods
mov
adc
mov
adc
mov
insb
mov
inc
dec
mov
mov
add
add
in
jge
inc
or
std
mov
test
cwtl
lods
xchg
test
cld
and
mov
jg
inc
sbb
add
add
sarl
es
in
pop
std
and
mov
pop
mov
pop
mov
mov
push
add
mov
fwait
and
mov
add
mov
mov
icebp
sbb
lcall
out
aas
push
ss
xor
mov
adc
mov
mov
aad
add
push
jle
imul
int3
call
pop
xchg
sbb
int
add
add
out
mov
add
add
es
aam
or
inc
jmp
add
xchg
adc
mov
pushf
inc
call
mov
xchg
inc
scas
aas
rolb
mov
sub
nop
add
xchg
xlat
dec
in
enter
mov
fsubrl
movsl
xchg
pop
rolb
mov
dec
shll
sbb
push
outsb
inc
icebp
jne
sbb
inc
add
mov
mov
mov
scas
cmp
sub
xlat
or
add
scas
mov
or
and
push
mov
stc
icebp
insb
dec
or
xor
dec
ja
stos
loop
mov
mov
mov
mov
mov
movb
and
mov
sbb
lods
mov
bound
mov
mov
aad
lods
dec
pop
jne
icebp
jmp
movsb
nop
add
add
mov
mov
pushf
out
insb
add
cmp
pop
push
pop
aad
lds
mov
call
mov
xchg
jge
xchg
add
xor
insl
and
mov
gs
xchg
rolb
mov
test
mov
add
out
inc
gs
scas
lds
cmp
rorl
int3
push
inc
add
fst
jecxz
mov
xor
mov
mov
loope
push
fistl
mov
rcl
push
add
pop
or
ret
fnstsw
lea
dec
and
mov
and
add
std
inc
hlt
mov
pop
sub
hlt
push
add
sbb
add
ds
rolb
xor
subl
pop
and
mov
test
test
into
mov
mov
mov
scas
adc
add
cmp
jbe
stc
ljmp
decl
leave
ret
rcll
mov
imul
fimull
mov
jl
test
add
mov
ret
sbb
add
mov
pop
jecxz
daa
xor
sub
popa
cmpsb
cltd
fdivs
sub
cmp
pop
adc
addb
dec
iret
das
mov
jmp
add
add
roll
inc
cld
sahf
jnp
push
in
add
and
arpl
add
mov
jecxz
jae
sbb
stos
call
jmp
sbb
jl
mov
sti
jp
movsl
sub
imul
outsb
sbb
mov
pop
jg
nop
add
sub
pop
sub
xor
mov
bound
mov
pop
xchg
mov
add
into
mov
sub
add
je
out
xchg
dec
or
sbb
dec
jg
ret
pop
gs
mov
mov
inc
icebp
addb
scas
insl
adc
or
add
dec
gs
mov
mov
sub
repnz
mov
iret
jae
cmc
mov
inc
sahf
repnz
ret
push
mov
fwait
in
adc
mov
addb
mov
inc
add
mul
jno
cmovae
add
call
jno
in
dec
addr16
and
mov
add
mov
push
cmp
add
addr16
test
xlat
call
hlt
test
movsb
lahf
fiadds
xchg
jae
add
std
call
mov
add
test
cld
dec
fsubrl
out
nop
add
rolb
mov
jmp
stos
movsb
test
mov
add
add
out
bound
mov
roll
mov
push
movsb
pop
fxch
test
sbb
add
in
mov
repnz
add
add
jb
mov
and
dec
aas
sti
mov
mov
pop
nop
add
test
mov
sub
add
lods
adc
add
ljmp
inc
add
pop
addb
addb
enter
fdivp
addb
and
mov
loopne
mov
jbe
and
out
imul
mov
je
rolb
mov
mov
add
adc
add
mov
jp
mov
add
jae
adc
mov
mov
add
daa
bound
mov
xor
mov
aas
mov
push
and
mov
add
jnp
in
iret
xchg
add
je
pop
sub
rolb
mov
add
add
into
ret
mov
mov
dec
jne
add
mov
dec
test
or
inc
jl
jge
xchg
mov
jno
out
xchg
sub
outsb
fyl2xp1
or
add
lds
ret
sub
pop
mov
loope
sub
inc
cmp
scas
push
iret
jae
add
mov
aas
mov
sbb
mov
pop
pop
bound
mov
add
inc
pop
push
sbb
iret
push
add
cmc
sbb
lahf
add
filds
and
mov
add
sahf
call
subl
add
mov
mov
xor
mov
dec
sbb
mov
insl
add
add
pusha
add
in
cmp
pop
repz
mov
add
add
add
ss
jl
sub
jae
mov
scas
lds
repnz
mov
add
mov
ljmp
push
lret
bound
mov
std
push
out
rolb
out
outsl
stos
icebp
mov
cmp
jmp
push
scas
stc
scas
mov
mov
cmp
push
sti
sarl
add
ljmp
add
xor
ror
int3
jmp
mov
test
sbb
xchg
mov
pusha
add
add
pop
lret
jae
test
add
loop
mov
jbe
icebp
push
in
repnz
loopne
mov
add
add
shrl
pop
addb
stos
mov
pop
sbb
loopne
mov
lahf
xchg
add
mov
jecxz
aad
and
rolb
mov
xchg
filds
das
adc
iret
ret
andl
mov
xor
punpcklwd
aad
sbb
and
mov
push
lock
mov
inc
push
loope
sub
enter
or
or
aad
push
add
sbb
ja
cmp
out
inc
add
add
mov
popf
lahf
cmc
addr16
gs
inc
add
mov
jno
mov
add
hlt
jnp
pop
push
inc
push
xchg
jbe
stc
jmp
sbb
mul
add
out
out
fnstcw
mov
add
btr
xchg
aad
dec
lods
rolb
dec
mov
decl
cld
icebp
mov
bound
mov
mov
mov
mov
pop
cmpsl
popf
push
add
test
ret
add
add
out
jnp
cmp
out
add
cli
lcall
pop
addb
out
cmpsl
ja
cmp
test
xor
fwait
into
inc
in
adc
mov
dec
dec
sahf
inc
xor
mov
mov
cmp
aas
add
mov
mov
and
mov
cmp
xor
push
and
mov
cltd
aad
add
pop
cli
aas
lret
jns
fwait
inc
add
jl
inc
cmc
popa
sub
push
xchg
jl
dec
icebp
adc
push
push
sbb
jns
push
fcomp
lret
push
ljmp
stos
sbb
sub
jne
div
add
movsl
rolb
mov
mov
add
mov
std
in
ficoms
mov
add
dec
sub
mov
mov
fists
rolb
mov
mov
jle
add
sbb
std
sbb
push
push
add
push
aad
sbb
add
pop
mov
mov
mov
loopne
mov
add
push
rolb
mov
sbb
scas
cmp
push
pop
loop
mov
jl
inc
mull
dec
sub
xchg
mov
ja
jmp
lret
int
in
sub
add
out
jp
mov
add
or
jne
add
in
ret
mov
or
ljmp
mov
cmp
int3
push
add
popf
insl
out
jae
movsb
adc
inc
addb
in
sub
cli
mov
jnp
out
xor
mov
add
mov
push
scas
out
mov
addl
inc
lds
movsl
test
jns
cmp
adc
aas
inc
or
stos
xor
mov
jmp
xchg
xchg
popl
roll
add
mov
test
daa
push
decb
jbe
pop
sbb
imul
add
mov
mov
roll
mov
mov
stos
xchg
in
lahf
loop
mov
popf
push
jle
rolb
mov
out
pop
inc
adc
mov
out
dec
add
sub
pop
sbb
cld
lea
inc
inc
lods
xor
fwait
jp
pop
lahf
lret
in
mov
add
add
dec
idivl
add
das
add
mov
mov
or
lea
das
mov
stc
test
out
dec
lcall
xor
mov
jg
lret
pop
mov
add
and
mov
outsb
rcr
sub
mov
cmp
pop
cmp
cwtl
mov
mov
xor
mov
add
adc
add
add
mov
jg
sahf
xor
jg
lock
fs
std
xchg
fnstsw
pop
jnp
jno
push
sahf
aas
int
pushf
sbb
stos
push
scas
popf
jno
add
ja
imul
jle
dec
xchg
ja
out
imul
in
sbb
jae
add
addb
and
mov
rolb
mov
pop
mov
mov
and
mov
out
add
lock
pop
adc
mov
pop
push
mov
push
add
dec
cmc
xor
mov
inc
and
add
inc
subl
mov
cmp
push
mov
add
sub
mov
fbld
mov
cmp
popa
inc
add
lods
sbb
add
mov
xlat
es
jns
xchg
fsubrl
xchg
subl
int3
dec
mov
enter
pop
xor
add
aaa
cltd
xchg
add
ja
dec
jnp
sub
in
ja
fstps
dec
sar
adc
sbb
dec
icebp
sub
sbb
add
rolb
aad
fmull
pop
into
scas
ds
or
push
push
and
add
sbb
in
sbb
add
mov
leave
cli
rolb
mov
adc
mov
outsb
fbld
clc
jns
inc
enter
in
cmc
xchg
sbb
jl
imul
xlat
inc
mov
in
pop
jp
mov
cmpsl
fidivrl
cmp
add
and
sarl
ja
adc
pop
loopne
mov
pop
jmp
rolb
mov
mov
fcmove
mov
mov
jle
hlt
pop
jae
add
add
fs
inc
xchg
cmp
mov
jge
les
add
mov
mov
and
scas
cmc
scas
jecxz
xchg
dec
outsb
aas
lods
mov
pop
lret
leave
pop
ja
icebp
dec
sbb
jge
aam
hlt
dec
test
mov
push
imul
js
cmp
jecxz
je
aas
fnstcw
adc
xlat
mov
mov
add
out
xchg
mov
dec
mov
ret
inc
add
dec
test
cmpsl
cmc
scas
adc
jp
adc
fstps
rolb
jnp
mov
iret
push
rorl
sbb
mov
ret
push
add
lods
adc
mov
ror
push
addb
rolb
mov
pushf
jb
mov
push
mov
jbe
mov
mulb
pop
mov
xchg
xor
icebp
mov
bound
mov
xor
jl
pop
insb
xor
mov
stos
not
enter
or
lock
sahf
into
lcall
call
add
mov
outsl
imul
mov
mov
aad
ret
xor
lret
add
mov
daa
dec
xlat
mov
cmp
sub
int3
inc
add
imul
xchg
int
lock
push
push
or
loope
iret
or
push
lods
mov
pop
lods
lret
jo
mov
fnstsw
add
push
cmp
add
sbb
cwtl
lods
aaa
dec
mov
idivl
sub
adc
fisttpl
addb
mov
add
dec
fdivrl
dec
xor
mov
neg
in
xor
clc
out
out
xchg
pop
mov
mov
add
add
mov
movsb
fbstp
xor
test
pop
jno
mov
add
push
mov
dec
cmp
rorl
data16
mov
cs
mov
xor
mov
call
ljmp
mov
bound
mov
pushf
inc
cld
outsl
xchg
insl
xor
mov
fs
bswap
jne
sub
xor
dec
outsl
add
mov
add
int
mov
jl
fnsave
push
enter
ljmp
mov
add
sbbl
or
add
aam
add
daa
movl
jno
fldt
jb
mov
and
loopne
mov
adc
add
mov
scas
pop
jp
ret
mov
xor
ljmp
out
jp
sub
fsubrs
cld
movsl
inc
pop
mov
insl
pop
shl
mov
pop
ljmp
add
outsb
jp
push
pop
mov
adc
dec
into
add
mov
jecxz
ss
dec
enter
lds
adc
addb
inc
add
or
in
mov
inc
add
enter
xchg
mov
sbb
je
int
add
idivb
loop
mov
add
int
bound
mov
xchg
roll
add
pop
sahf
dec
dec
rolb
das
and
mov
adc
add
addr16
leave
test
add
movsl
cs
cli
push
fs
cmp
add
add
enter
adc
mov
mov
lcall
add
mov
add
mov
stc
inc
mov
cltd
cs
mov
fisttpl
adc
mov
xchg
xchg
sti
lret
out
mov
popa
out
add
cmp
inc
pop
inc
fwait
mov
cmp
mov
data16
inc
xor
mov
in
mov
jecxz
or
jg
xchg
add
cli
mov
cmpsl
cmp
bound
mov
mov
lret
add
jb
mov
popf
sbb
sub
mov
xchg
add
add
pop
add
mov
jecxz
sti
cli
sub
mov
aaa
into
test
mov
pop
popa
test
jle
push
add
push
mov
lds
cmp
or
mov
pop
mov
mov
add
movsb
push
cmp
dec
shrl
add
add
xchg
insb
lret
sti
mov
repnz
lds
addb
xor
mov
and
mov
es
pop
out
cmpsb
jbe
out
cld
aaa
and
add
push
add
mov
sub
lds
sbb
cmp
add
mov
inc
add
jne
jl
xchg
add
sub
fcmovnu
jbe
dec
push
push
andps
mov
xchg
mov
mov
jns
shll
imul
xchg
inc
jne
dec
call
adc
add
addb
lahf
unpcklps
inc
dec
xchg
mov
add
and
pop
mov
loop
mov
arpl
mov
add
fmul
fisubl
cld
sbb
dec
pusha
add
pusha
add
inc
xchg
push
loopne
mov
lcall
fstl
add
add
sub
mov
add
std
aas
jae
and
mov
mov
xchg
lret
gs
sub
insb
push
scas
insb
mov
mov
mov
mov
pop
inc
add
or
add
adc
pop
xorl
repnz
mov
add
mov
test
pop
pop
xor
add
pop
inc
adc
enter
pusha
add
mov
jne
dec
mov
add
testl
push
and
xchg
push
cmpsl
rolb
adc
mov
or
xchg
add
mov
mov
fcomps
sbb
and
loop
mov
jmp
and
mov
mov
test
or
ret
dec
mov
mov
rolb
fmull
neg
std
pop
mov
add
cs
pushf
sub
xor
jno
scas
test
out
push
add
add
ds
sti
addb
test
add
mov
add
fiaddl
and
mov
pop
mov
add
add
mov
xchg
xchg
loope
jo
mov
sub
push
pop
push
or
xor
mov
fcomps
pop
pop
repz
sbb
mov
mov
dec
fldcw
jmp
mov
hlt
shll
mov
add
mov
mov
lea
adc
add
leave
fs
mov
push
jb
mov
lret
rolb
mov
dec
and
mov
mov
and
mov
nop
add
cmp
inc
lods
ret
mov
mov
clc
lret
pop
mov
sti
inc
xlat
or
sub
pop
adc
inc
mov
mov
push
push
int3
cmpsl
mov
dec
xchg
out
xchg
mov
mov
dec
rolb
mov
inc
dec
sub
lods
jl
add
mov
xchg
add
dec
aam
push
add
lret
xor
mov
inc
out
dec
xor
mov
mov
cmc
mov
xor
arpl
sbb
roll
mov
xor
fs
lcall
mov
add
mov
push
xor
jbe
xor
movsb
xor
mov
pop
mov
fbstp
movsl
adc
mov
clc
outsl
adc
push
add
mov
inc
add
inc
ret
dec
sbb
mov
lcall
jbe
iret
out
out
shll
adc
call
enter
mov
jo
mov
scas
pop
mov
and
mov
xchg
popa
push
frstor
jmp
mov
push
adc
mov
and
in
mov
ret
dec
insl
in
test
shll
push
inc
add
addb
mov
data16
add
fists
enter
mov
mov
add
add
mov
sbb
lods
mov
out
inc
pop
jl
stos
jno
pop
lds
sti
mov
in
xchg
xchg
xlat
mov
xor
pop
xor
ljmp
or
fstpl
adc
mov
add
add
mov
add
fwait
stos
fldt
add
lods
jg
fs
in
xor
cli
cmc
lret
add
mov
adc
repnz
mov
pop
cltd
bound
mov
and
outsl
js
mov
mov
mov
xor
add
pop
or
add
add
sbb
adcl
and
sbb
rolb
mov
add
xor
outsb
mov
mov
adc
cltd
fadds
mov
repnz
ret
mov
mov
bound
mov
fldt
sub
mov
stc
out
insb
jmp
or
loope
jp
add
xor
lret
xor
mov
or
loopne
mov
push
in
repnz
imul
add
dec
je
pop
int3
and
mov
add
mov
pop
flds
dec
xor
mov
cmp
call
movsl
adc
mov
jno
adc
add
mov
push
xor
mov
add
and
mov
into
mov
jmp
movsl
fucomip
movsb
inc
fisubrs
inc
fnstcw
cmp
into
insl
int
mov
add
adcl
movsl
stos
jb
mov
outsb
cld
fidivl
add
mov
or
sbb
faddp
bound
mov
cmp
lcall
mov
adc
rcl
mov
pop
inc
call
inc
rorl
add
lret
add
mov
mov
add
pop
mulb
lret
mov
add
pusha
add
ret
incl
pop
lods
leave
pusha
add
lods
mov
and
inc
add
rolb
mov
leave
jge,pt
dec
jo
mov
outsl
icebp
fldl
cmc
mov
or
pop
cmc
jno
add
pop
int
push
inc
ss
fidivl
sub
cmc
xlat
mov
add
add
mov
xchg
es
or
mov
mov
enter
add
push
out
lret
loop
mov
arpl
scas
adc
or
xchg
add
add
cli
mov
pop
imul
inc
adc
sbb
insb
addb
fiaddl
mov
jmp
scas
cmc
dec
dec
pop
xlat
sbb
mov
add
inc
mov
dec
push
and
add
mov
or
test
add
mov
mov
mov
jle
add
jg
push
leave
adc
pop
mov
mov
pop
sub
fnstenv
add
add
scas
jae
add
add
loop
mov
mov
out
jno
sti
or
test
mov
jns
ds
add
mov
push
cmpsb
jg
xor
mov
add
inc
add
add
add
mov
in
cmp
adc
adc
mov
xor
xchg
mov
xchg
rol
cwtl
mov
pop
out
add
inc
add
mov
add
sbb
ds
stos
inc
jmp
fwait
rep
pop
sbb
mov
add
fiadds
add
mov
jne
out
mov
pushf
arpl
popf
mov
mov
jbe
ds
out
int
repnz
add
push
fldcw
dec
add
adc
mov
add
xchg
jecxz
dec
sub
add
mov
mov
sbb
insb
inc
add
add
sbb
hlt
outsb
pop
and
outsb
aaa
sub
cmp
or
lcall
je
cmp
fucomi
cmp
aaa
dec
lods
subl
mov
jle
xchg
add
or
add
add
lods
sahf
and
sbb
inc
pop
pop
or
arpl
sbb
mov
push
pop
out
movl
cmp
add
mov
mov
xchg
lds
mov
pop
inc
jnp
cmpsb
xor
in
push
sbb
xor
add
mov
dec
roll
sub
pop
stc
mov
add
test
test
aaa
sub
push
or
add
sbb
jecxz
rcll
xor
or
mov
xor
mov
add
cmp
mov
add
push
jo
mov
cmp
gs
clc
outsl
sub
loopne
mov
mov
cwtl
cmpsb
adc
pop
adc
add
xor
mov
add
dec
jle
pop
push
gs
mov
mov
jnp
addr16
repnz
add
adcl
mov
lret
data16
xchg
mov
xor
mov
jo
mov
mov
add
pushf
jbe
pop
inc
xor
cmp
imul
gs
inc
mov
pop
push
add
add
loope
leave
pop
imul
js
pop
mov
fdivl
inc
cmp
pop
jge
imul
mov
lret
dec
cmp
push
add
mov
add
js
out
rolb
mov
push
pop
and
mov
rolb
mov
nop
add
cmc
xor
mov
pop
clc
jmp
inc
mov
scas
pop
jle,pn
push
iret
test
out
and
add
mov
iret
sarl
sbb
mov
mov
add
scas
daa
leave
lock
je
pop
out
pop
push
mov
mov
add
ljmp
sub
push
int
aas
enter
mov
add
mov
push
clc
xor
add
mov
sahf
loopne
mov
cmp
adc
mov
mov
add
in
jle
or
pop
repnz
xlat
pop
pop
adc
mov
int3
rolb
jecxz
fldl
xor
add
cs
jmp
jp
xor
mov
stos
lods
icebp
mov
daa
sbb
pop
push
mov
xlat
jns
out
popf
or
lods
popa
stos
repz
mov
hlt
sbb
mov
arpl
leave
roll
addr16
add
push
bound
mov
dec
ja
lret
out
and
add
out
add
push
add
mov
mov
les
pop
ficompl
jne
ret
into
addb
rolb
mov
and
inc
arpl
pop
loope
add
lock
xlat
inc
add
or
mov
aad
dec
insl
mov
inc
cmpsw
xchg
add
dec
cwtl
or
add
xchg
add
addb
les
mov
add
out
out
xor
mov
adc
push
inc
add
mov
mov
mov
add
mov
adc
or
xchg
sbb
sub
pop
stos
jo
mov
fcomp
cwtl
mov
out
add
and
mov
dec
addb
ja
push
push
std
mov
call
jnp
insl
test
xor
mov
xchg
enter
mov
mov
ljmp
add
pop
mov
add
add
icebp
jbe
push
xor
mov
pop
pop
out
mov
add
mov
add
mov
add
dec
jno
iret
xchg
mov
in
imul
pop
imul
mov
add
jae
out
xor
mov
mov
mov
repnz
add
rolb
outsl
jbe
lahf
hlt
dec
or
movsl
jo
mov
mov
int3
or
stos
clc
std
nop
add
das
mov
adc
mov
in
push
add
cmp
cs
cmp
mov
add
sub
sub
pop
pop
stos
or
adc
movsl
cmpsl
scas
add
dec
movsb
aad
fdecstp
in
add
inc
add
and
add
mov
clc
cmp
into
and
mov
add
cmpsb
ds
mov
add
mov
push
xchg
add
imul
xor
push
mul
psubw
lds
mov
popa
lret
ljmp
outsb
ds
int
add
add
test
push
ss
add
mov
stos
or
mov
jno
add
mov
pop
mov
pop
push
popa
mov
fdivl
mov
movsb
pusha
add
add
fiadds
int
bound
mov
add
test
pop
or
cltd
cwtl
pushf
cmc
cmpsb
xchg
add
je
xchg
adc
out
push
pop
xor
inc
int3
xchg
cmpsb
mov
pop
cmp
pop
and
mov
pop
jg
add
cltd
sub
or
cmp
lea
add
aam
add
and
add
arpl
mov
mov
add
add
in
inc
cmp
test
cmp
addb
xor
mov
repnz
add
jmp
outsb
sub
jnp
jnp
jg
sbb
add
xor
mov
out
imul
adc
add
mov
imul
js
pop
iret
stc
mov
add
sub
cmc
mov
mov
add
mov
or
rolb
mov
mov
dec
sub
mov
imul
mov
aas
sub
inc
add
ja
sbb
sub
cld
test
mov
sbb
or
dec
mov
out
or
mov
mov
ds
add
push
inc
xor
or
dec
fidivl
popa
adc
mov
add
rolb
mov
jp
aad
add
out
insl
jno
enter
out
inc
push
push
mov
clc
adcl
or
mov
add
add
mov
mov
mov
shrl
adc
mov
xor
mov
imul
sub
je
inc
sbb
lahf
jne
test
pop
xchg
mov
mov
mov
inc
add
int
test
add
jno
sbb
inc
add
mov
fdivr
dec
dec
cmp
add
mov
cmp
mov
mov
inc
fdivp
lret
pusha
add
outsb
and
bound
mov
insl
into
push
dec
lret
ret
or
addb
pop
jl
jmp
lods
dec
jp
push
add
adc
in
pop
jno
add
add
aam
popf
xor
pop
and
outsb
dec
addb
push
addb
movsb
or
add
push
mov
mov
pop
push
pushf
rolb
mov
mov
xor
mov
fcmovu
insl
leave
rolb
shr
or
sbb
jmp
addb
jae
pop
jmp
add
lock
lahf
add
mov
js
add
std
int
adc
mov
mov
xor
inc
or
mov
add
mov
mov
add
call
mov
pop
dec
or
add
mov
add
out
sub
ljmp
mov
rorl
popf
fisubrl
inc
mov
sbb
lahf
dec
jb
mov
pop
div
adc
jnp
mov
ret
enter
mov
cmc
int3
jnp
in
sahf
adc
add
mov
stos
push
sub
add
dec
and
popa
fxam
adc
ret
adc
mov
add
sub
add
lea
xchg
je
add
inc
jae
repz
xchg
or
or
fistl
and
xor
mov
adc
mov
add
lods
arpl
xchg
loope
add
mov
xchg
outsl
adc
jecxz
lret
and
or
push
xchg
and
add
outsl
pusha
add
jb
mov
add
push
and
add
push
ja
mov
mov
add
mov
adc
mov
iret
bound
mov
add
cmp
xchg
sti
adc
ficoml
push
push
inc
mov
mov
add
and
enter
sub
inc
sbb
mov
xlat
clc
addb
testb
or
mov
not
addb
jno
xchg
sbb
bndldx
xchg
add
sub
xchg
fst
and
add
in
adc
mov
int3
sbb
fadds
cltd
sbb
mov
fwait
add
adc
add
faddp
jnp
and
mov
jns
sub
sub
cmp
push
aas
pop
fildll
in
xchg
add
push
inc
popf
rolb
adc
loop
mov
add
jg
sub
mov
mov
data16
in
daa
gs
push
push
sub
ja
fucomp
jb
mov
add
insl
test
or
lods
sub
xor
sbb
mov
add
dec
ss
jno
jo
mov
pop
push
add
mov
cmp
scas
adc
mov
cld
push
xchg
mov
mov
out
add
rolb
cmp
push
add
add
mov
mov
fldl
addb
fmul
lret
pop
ret
das
imul
add
lret
pop
call
fsubrs
xor
mov
sub
repz
mov
mov
dec
insb
xchg
add
add
pop
mov
sbb
push
add
into
dec
jnp
addb
mov
mov
mov
fildll
call
push
clc
testb
daa
stos
addb
mov
or
add
push
je
enter
mov
adcl
push
add
testb
imul
or
mov
and
icebp
dec
or
add
jge
leave
enter
xchg
mov
adc
pushf
adc
mov
fnstsw
out
cld
push
push
add
adc
mov
push
inc
sub
cmp
cmp
out
add
mov
add
repnz
ja
pop
mov
leave
mov
testl
jp
and
mov
and
mov
jo
mov
cltd
jnp
add
ljmp
push
cmp
dec
xor
mov
add
in
jae
xchg
imul
mov
test
cli
mov
mov
sbb
lock
int
sti
fcomp
jecxz
cld
je
ss
jecxz
ret
test
dec
lock
int
test
add
mov
mov
pop
stc
cmc
mov
add
mov
mov
lret
cli
adc
icebp
mov
mov
jecxz
add
mov
mov
lock
jno
and
test
add
cli
hlt
adc
xor
mov
inc
add
mov
cmc
cs
mov
or
adc
pop
cmc
rolb
push
popa
adc
mov
insb
pop
xor
xchg
cmpsl
add
mov
std
xchg
adc
add
int3
mov
lcall
mov
mov
rcr
push
push
add
lea
test
jnp
mov
add
push
add
add
sbb
add
mov
data16
imul
les
mov
jne
mov
add
mov
lret
iret
jge
add
movnti
mov
jp
add
sub
jmp
xor
push
lods
inc
pop
mov
jno
jle
scas
addb
adc
mov
fsubp
push
or
mov
mov
mov
xor
out
pop
addb
or
lahf
sbb
or
call
jecxz
into
hlt
mov
insb
pop
mov
je
mov
adc
sahf
adc
mov
mov
repz
mov
lret
insb
adc
jg
divl
rolb
ss
dec
pop
xor
pop
movb
mov
daa
out
outsl
xchg
cmp
add
imul
xchg
mov
test
lret
add
or
repz
std
jl
dec
daa
jg
nop
add
pop
dec
pop
lcall
and
icebp
imulb
mov
inc
add
and
add
pop
scas
addr16
es
mov
mov
mov
pop
jecxz
lea
push
stos
pop
adc
and
mov
mov
xchg
push
add
push
sbb
jp
mov
add
dec
pop
jbe
addb
mov
adc
add
dec
pop
cmp
pushf
data16
mov
lret
and
adc
mov
jge
out
mov
imul
sub
notl
mov
inc
mov
ret
test
ret
test
in
add
mov
or
mov
rolb
clc
dec
inc
xchg
addb
mov
add
or
mov
xchg
xor
pop
sbb
add
add
mov
and
mov
mov
mov
mov
xlat
cmpsl
pop
xor
dec
fists
add
sbb
inc
add
dec
cmc
inc
incl
push
add
ds
sbb
gs
add
sarl
jge
mov
je
add
aas
cs
add
mov
add
mov
xor
add
jno
add
add
mulb
stc
stos
push
mov
sub
scas
push
pop
cmp
mov
xchg
arpl
xchg
jecxz
fdivl
add
repnz
xor
or
scas
push
adc
lds
pop
rolb
mov
cmp
lock
add
sub
push
in
outsb
mov
add
repnz
add
fs
rolb
mov
int3
cmp
fstps
add
aad
dec
fs
inc
xor
push
and
lcall
xchg
mov
add
or
cwtl
aam
adc
mov
rorl
rolb
inc
add
add
add
mov
pusha
add
and
data16
mov
push
push
mov
add
bound
mov
add
mov
mov
jl
push
mov
int3
add
sub
xchg
fiaddl
out
mov
sub
stos
test
clc
xor
fadds
out
pop
cmp
aas
mov
repnz
mov
xor
mov
popa
xchg
loopne
mov
scas
cmpsl
imul
scas
xchg
sahf
fstps
xor
mov
scas
add
nop
add
rolb
mov
mov
in
jb
mov
add
add
imul
push
add
add
add
pop
mov
or
inc
mov
jae
imul
xchg
push
leave
ret
jbe
mov
repnz
mul
add
mov
mov
xchg
mull
add
sbb
add
in
jnp
movsl
jmp
inc
add
sahf
rcll
dec
cmp
xchg
sub
and
out
xchg
jno
cmpsl
and
add
add
xchg
sti
jp
add
ljmp
push
xor
les
les
xor
mov
add
inc
stos
push
lcall
les
jno
jmp
sti
cmpsb
adc
test
add
mov
push
xor
mov
mov
add
add
add
sub
add
jmp
push
cld
mov
scas
xchg
arpl
sub
inc
dec
jb
mov
pop
dec
mov
stos
pop
mov
in
fcmovu
jmp
in
aad
stos
mov
rep
fstpl
sub
jnp
cmp
mov
test
mov
stc
into
stos
icebp
pop
pop
push
add
mov
add
pop
mov
loope
add
cmpsl
inc
iret
pop
dec
scas
lret
add
mov
stos
std
sub
mov
mov
sub
add
push
mov
pop
test
xor
mov
ret
dec
mov
int3
dec
sahf
sub
subl
mov
mov
mov
add
push
lods
xor
mov
add
inc
mov
sbb
and
mov
jecxz
or
daa
cltd
enter
mov
push
add
aaa
mov
dec
nop
add
rcr
mov
pop
loope
inc
xchg
add
test
out
call
cmc
cmp
pushl
aaa
out
add
add
mov
pusha
add
add
pop
stc
gs
movsb
inc
add
rolb
mov
ss
mov
mov
loop
mov
add
mov
daa
pop
sbb
mov
xlat
daa
push
imul
cmp
add
call
js
xchg
lea
add
mov
cs
fbld
mov
dec
test
jg
popf
lcall
add
add
mov
dec
inc
jle
lea
loop
mov
mov
rolb
mov
push
add
jbe
add
mov
mov
inc
sub
xchg
add
shll
add
push
cmpsl
divb
mov
scas
and
mov
addr16
jb
mov
add
and
fisttpl
mov
jno
sbb
jne
jno
sti
dec
cwtl
mov
mov
add
add
movsb
in
pop
mov
loop
mov
pop
push
insb
mov
and
mov
popa
push
inc
jecxz
add
mov
mov
mov
inc
test
adc
mov
frndint
push
jnp
cs
mov
jae
sub
jecxz
lods
sub
aad
inc
stos
jge
xchg
add
add
out
ficoms
add
lock
inc
add
and
jecxz
add
jmp
add
jno
xchg
push
xlat
push
clc
xor
mov
stos
xor
cwtl
xchg
mov
movsb
icebp
xor
push
xchg
es
or
add
mov
mov
xchg
add
mov
in
rolb
test
std
dec
sub
iret
jmp
call
add
sub
fsubrl
pop
or
call
add
push
test
repz
mov
push
stos
and
mov
and
jne
add
or
fcoml
add
push
nop
add
pop
jecxz
xchg
fsubrs
sub
mov
add
fcoml
add
push
inc
lds
stc
out
arpl
add
cwtl
xor
add
cmp
mov
lock
add
inc
fsubs
lcall
dec
adc
mov
sub
pop
sbb
fwait
pop
ja
loop
mov
xchg
les
adc
out
dec
les
mov
enter
loopne
mov
popf
cmpsl
imul
aas
out
xor
mov
loopne
mov
mov
idivl
int3
cmp
and
aas
mov
mov
mov
sbb
jbe
ret
outsb
movsl
add
or
lea
out
pop
pop
pop
xor
stos
out
stc
incl
inc
rcrl
mov
mov
add
sbb
add
popf
xor
mov
xchg
insl
test
add
nop
add
mov
push
arpl
add
add
mov
pop
fwait
mov
es
push
add
add
aad
add
add
nop
add
push
adc
add
rolb
mov
xchg
push
lds
pop
sub
pavgw
mov
lods
test
pop
cwtl
mov
push
pusha
add
add
xor
and
mov
mov
sbb
fisubl
add
in
mov
insb
fsubrl
mov
jae
rcll
outsl
cmpsb
xor
ss
std
es
push
add
mov
sbb
ds
mov
mov
mov
mov
add
iret
ss
jp
add
es
mov
mov
bound
mov
and
push
add
push
and
or
adc
mov
push
nop
add
fwait
pop
les
xchg
add
sar
sti
fs
add
mov
gs
push
and
mov
fcoms
jns
mov
mov
clc
lock
mov
push
mov
add
in
push
add
rolb
aaa
xchg
add
enter
fidivl
js
dec
jnp
dec
repnz
shll
add
fstpl
loopne
mov
pop
out
out
andps
push
ja
arpl
add
pop
sbb
add
adc
add
lea
daa
push
pop
mov
cld
leave
mov
maskmovq
testl
push
jo
mov
les
into
and
lods
sbb
sti
xchg
sarl
daa
in
add
test
aas
lds
aad
mov
dec
ficomps
insl
das
rolb
mov
pusha
add
jo
mov
pop
out
pop
iret
cmp
xor
gs
adc
mov
out
or
push
cmp
mov
sahf
cs
mov
out
lret
xor
mov
add
jp
popl
ret
fldl
jne
inc
inc
jne
fmuls
add
mov
add
add
jg
movsb
std
push
push
repz
mov
pushl
add
pop
int
rolb
mov
lods
xor
mov
mov
fnstsw
fwait
push
add
lods
push
inc
fidivrl
add
mov
adc
dec
inc
lahf
add
mov
jbe
mov
add
mov
mov
aaa
mov
mov
insl
xor
xchg
xchg
push
cmp
jge
sbb
scas
repz
mov
add
mov
mov
inc
pop
jl
icebp
inc
add
out
aas
addr16
add
dec
jo
mov
nop
add
jo
mov
movsl
jg
pop
cs
rolb
clc
clc
or
push
test
or
cmpsb
int
mov
or
and
jns
add
nop
add
sub
mov
add
jb
mov
and
mov
pop
sub
test
add
out
and
mov
es
add
mov
lea
outsb
bound
mov
test
add
mov
mov
add
pop
daa
mov
add
dec
xor
int
or
dec
cmp
sbb
xchg
xor
add
add
mov
mov
or
mov
add
mov
mov
mov
mov
aaa
clc
sbb
fucomp
call
add
inc
or
mov
add
mov
or
ja
or
and
lea
push
pushf
int3
inc
push
rolb
mov
mov
imul
xchg
inc
add
mov
mov
add
movsb
pop
add
sbb
mov
rorl
jnp
mov
jg
imul
inc
pop
dec
cld
dec
mov
pop
pop
ret
add
push
call
popa
sbb
ss
add
leave
in
cwtl
mov
ljmp
shll
cmp
aas
sbb
mov
adc
dec
pop
pushf
jae
inc
stos
data16
mov
pop
mov
js
cmp
scas
cld
xchg
mov
fstl
pop
enter
sub
sarl
adc
psrad
mov
or
jge
jne
xor
pop
pop
mov
mov
sbb
les
mov
addl
push
test
aam
add
jnp
fimull
mov
arpl
cli
or
pop
xor
mov
mov
adc
jp
push
pop
xor
mov
add
imul
or
dec
sub
adc
add
inc
add
or
dec
test
ret
push
add
rolb
adc
push
adc
fiadds
add
add
sbb
inc
std
cmp
mov
or
add
inc
fadds
add
mov
rcl
stos
insl
lret
sbb
add
adc
mov
mov
add
sub
aam
pop
fnstcw
inc
add
add
data16
push
mov
xor
mov
push
fistl
mov
sahf
enter
adc
add
mov
scas
lods
inc
add
cmp
scas
pusha
add
jae
push
rolb
cmp
add
std
sbb
sbb
mov
add
ljmp
add
inc
add
icebp
mov
cmp
mov
xor
fsubrs
xor
iret
add
rorl
lods
int
add
outsl
jle
inc
aas
xchg
and
test
repz
repz
icebp
adc
xchg
lods
dec
jae
pop
leave
or
push
push
or
mov
adc
jge
xor
mov
add
lock
pushf
and
add
add
add
inc
add
loope
test
add
adc
add
scas
cmpsl
adc
repz
add
add
pop
or
pop
cmp
jle
sub
mov
mov
sub
mov
inc
fldl
imul
ret
dec
scas
and
sbb
addb
aad
dec
idivl
add
mov
mov
fisttpll
xchg
add
push
mov
adc
sub
mov
lods
cmp
xchg
ret
inc
jge
imul
loopne
mov
mov
mov
mov
cmp
cmp
pop
pop
xor
mov
add
mov
or
clc
clc
stc
cli
sbb
add
insl
inc
add
cmp
movsb
mov
addr16
pop
jae
jno
cmc
jbe
jle
sub
inc
dec
jno
cmp
iret
out
popf
inc
daa
cmp
mov
lret
mov
les
pop
test
mov
add
mov
mov
xor
loope
add
ljmp
sbb
and
dec
mov
cltd
jmp
sar
jb
mov
lcall
icebp
mov
add
mov
mov
aas
out
cmp
mov
sub
jmp
add
psubw
push
stc
pop
addb
mov
test
in
ljmp
inc
out
bound
mov
or
mov
sahf
iret
sub
rolb
cltd
pop
cli
test
mov
outsl
lods
fnsave
jae
ret
fidivrl
out
rcrl
cmp
pushf
imul
mov
add
insb
outsb
lret
in
push
out
lods
mov
add
mov
add
js
test
mov
jne
xor
mov
mov
insl
insb
and
mov
add
addb
fistl
push
push
and
xchg
jle
loope
pop
outsb
in
mov
fwait
lcall
addb
adc
mov
mov
mov
add
mov
push
js
add
add
dec
and
mov
loop
mov
push
add
xor
mov
jne
lds
inc
jmp
arpl
in
xchg
pop
xor
or
addr16
repnz
subl
mov
mov
add
mov
add
add
jle
push
cmpsb
mov
mov
sub
mov
push
cld
lret
into
test
or
rolb
mov
pop
imul
mov
push
ss
jl
xchg
pop
pusha
add
cli
aas
movb
cmp
add
push
push
movb
jae
xor
mov
bound
mov
xor
add
je
push
mov
mov
push
jns
mov
mov
notb
outsb
pop
cmp
fstpt
int3
leave
pop
sbb
sub
jmp
addb
idiv
fsubs
add
mov
enter
lret
add
call
jle
inc
cmp
sbb
adc
mov
adc
mov
addr16
add
sub
dec
dec
mov
into
aad
insb
push
xor
cmp
push
cmpsb
test
in
or
add
insl
sbb
add
mov
popa
cld
repz
mov
mov
jns
inc
mov
adcl
dec
aaa
pop
push
shr
lea
out
add
mov
addb
fimuls
dec
int
add
inc
sub
loopne
mov
and
push
mov
push
dec
inc
xchg
in
sub
xor
aad
and
ffree
push
les
mov
mov
mov
xchg
cwtl
repnz
mov
mov
repz
mov
mov
mov
add
rep
pop
mov
negl
pop
push
adc
mov
paddq
sti
loope
add
lods
addb
adc
fucomip
dec
add
mov
popa
push
mov
pop
pop
stos
cmp
sbb
and
in
push
dec
mov
cltd
or
sbb
cmp
js
faddl
add
adc
lea
jno
es
mov
repnz
lret
jb
mov
push
fwait
cltd
xchg
lret
mov
jo
mov
test
loopne
mov
dec
mov
mov
add
mov
add
mov
push
add
push
subl
xor
jnp
pop
arpl
ficoms
hlt
mov
add
fs
cli
mov
fldt
adc
mov
add
add
aad
jns
fidivl
jno
mov
idivb
push
arpl
mov
mov
fmuls
call
and
and
sbb
stos
leave
lea
bound
mov
xchg
mov
add
jns
pop
sbb
ljmp
add
push
repnz
ljmp
mov
mov
ret
je
aam
jns
out
in
gs
fstpl
mov
lret
xor
mov
dec
inc
fsubs
mov
xchg
fs
push
jb
mov
dec
in
lods
clc
and
inc
sub
fsts
add
mov
mov
stos
ljmp
xchg
aad
clc
jmp
xchg
lock
gs
pop
mov
addb
mov
imul
mov
push
sti
test
jg
dec
cltd
ret
iret
dec
xchg
cmp
stc
push
sbb
mov
add
cmp
mov
add
add
inc
ss
xchg
adc
add
mov
mov
jno
push
sbb
fildl
pusha
add
mov
or
and
mov
add
jnp
sbb
pop
mov
push
mov
aad
add
sub
cmp
je
pop
xchg
xchg
cwtl
mov
pop
inc
imul
ds
sahf
cmp
lcall
outsb
in
or
outsl
mov
iret
push
push
add
lock
push
push
add
add
outsl
movsb
ljmp
add
add
into
fstpt
jge
xchg
and
test
pop
push
es
mov
push
stc
pop
push
sub
sub
push
outsl
mov
pusha
add
add
mov
or
and
add
and
add
fcmovb
jns
pop
pop
jo
mov
fsubrl
xchg
dec
xchg
outsl
loop
mov
outsl
mov
xchg
add
mov
cltd
xchg
ja
xchg
mov
addb
dec
xor
jge
jge
or
rolb
mov
in
enter
mov
add
gs
push
add
push
xchg
add
mov
add
pop
jo
mov
mov
add
sub
and
je
adc
mov
ja
cld
mov
lret
xchg
repnz
add
out
jae
or
rolb
mov
loop
mov
push
mov
leave
jecxz
or
mov
mov
add
cmpsl
ljmp
fdivp
add
mov
fisttpl
cwtl
mov
add
repnz
jne
xchg
and
mov
mov
add
fs
leave
insl
lds
xchg
cmc
aad
xchg
pop
pushf
adc
mov
mov
lret
rolb
mov
dec
jnp
aaa
addb
ja
xor
mov
add
mov
repz
lods
pop
into
addb
pop
outsl
pop
addl
pop
adc
pop
xchg
mov
inc
xchg
repz
mov
jns
mov
push
jbe
pop
cld
mov
add
pop
aam
lds
and
xor
push
loope
add
add
pushf
push
movsl
or
adc
addb
mov
icebp
ja
gs
pop
into
push
mov
or
aam
xchg
jne
add
out
mov
bound
mov
je
ret
xor
inc
daa
loope
mov
mov
add
inc
xlat
pop
popa
mov
cld
lret
fistps
inc
mov
add
out
add
add
add
add
cli
mov
divb
mov
addb
gs
mov
or
xor
mov
cltd
mov
pop
rolb
mov
mov
icebp
sahf
xchg
add
mov
mov
add
sub
mov
and
add
testb
and
mov
adc
rorl
xchg
add
add
sbb
dec
fildl
je
mov
rolb
or
jecxz
ljmp
stos
push
dec
repz
loopne
mov
in
add
movsb
out
xor
aaa
mov
jp
push
sbb
sub
xchg
mov
stc
mov
add
mov
frstors
mov
loopne
mov
add
and
pop
push
push
cltd
push
repnz
test
mov
add
mov
mov
xor
inc
add
add
cmp
arpl
xchg
in
pop
fisubl
add
fildll
ret
dec
pop
mov
lahf
pop
je
cmp
pop
jne
pop
xchg
mov
fwait
sbb
mulb
adc
out
dec
insb
imul
test
fnsave
mov
lcall
lcall
add
bound
mov
pop
loopne
mov
or
cmp
xor
mov
adc
mov
addr16
adc
mov
clc
into
mov
test
dec
pop
add
pusha
add
mov
and
fwait
mov
add
adc
mov
or
insb
test
lret
stos
inc
xlat
inc
lcall
mov
add
fxch
pop
dec
insb
lcall
and
and
add
jg
add
add
push
add
jecxz
push
cmp
add
add
jns
push
scas
rolb
xor
mov
pop
adc
mov
fcoms
mov
and
lcall
bound
mov
add
pushf
leave
movl
push
adc
iret
xchg
xchg
int
bound
mov
sbb
mov
je
mov
cld
test
cmc
inc
push
add
daa
push
cmp
adc
jl
or
push
add
rolb
mov
add
add
pop
loopne
mov
mov
mov
in
vpcmpgtb
rolb
mov
sbb
fwait
or
mov
add
xorl
bound
mov
fwait
sbb
add
add
lock
bound
mov
dec
movsb
xor
or
icebp
popf
idivb
aam
inc
inc
mov
add
add
addr16
xor
xchg
neg
clc
imul
mov
push
push
xchg
mov
mov
mov
leave
into
push
jnp
add
dec
xor
add
add
test
adc
sbbl
loope
lea
pop
inc
imul
jo
mov
add
add
popf
add
not
mov
and
xchg
xor
into
hlt
sub
jae
add
add
add
ja
adc
add
test
lahf
mov
add
mov
add
add
mov
sub
dec
dec
ret
add
test
mov
add
xor
add
out
std
movsb
inc
outsl
and
add
dec
pushf
jnp
xchg
addr16
mov
add
repz
add
inc
push
push
andl
mov
lock
xchg
push
add
cmp
das
scas
xchg
repz
add
add
mov
lods
popf
fcoms
push
add
ja
stos
imul
xchg
add
add
jno
add
ss
enter
negb
mov
mov
mov
xor
imul
xchg
jl
leave
loopne
mov
movsb
and
add
insl
test
adc
pop
sbb
add
stos
out
add
mov
cli
sub
push
inc
das
ds
das
adc
mov
mov
into
pop
cli
adc
mov
mov
es
out
clc
shrl
stc
movsl
mov
jge
dec
push
xchg
std
cmp
adc
imul
ficoms
inc
mov
add
sub
adc
mov
add
cmc
movsl
inc
outsl
bound
mov
and
aad
insl
xchg
cmp
out
cli
add
mov
add
mov
or
sbb
mov
dec
vpmacsww
inc
cmp
cli
pop
les
xchg
jmp
leave
xor
repz
push
in
or
mov
mov
sbb
add
adc
add
stc
rcll
pop
movsl
adc
xchg
add
jnp
cmc
push
filds
add
lds
adc
jmp
inc
add
loope
adc
mov
mov
mov
mov
add
add
push
inc
mov
add
int
xor
push
sahf
xchg
ja
popa
inc
jg
clc
jns
pop
adc
cmpsb
jmp
gs
add
mov
pop
scas
mov
dec
ljmp
jp
and
pop
pop
repz
or
sbb
push
xor
and
pop
iret
sub
mov
add
loopne
mov
punpckldq
mov
out
add
pop
jb
mov
push
in
insl
fwait
or
sbb
cltd
cs
push
add
jnp
mov
enter
loop
mov
mov
add
outsb
mov
mov
movsb
fnstsw
and
mov
nop
add
cmc
cmpsl
cmp
push
add
mov
xor
sbb
cs
add
add
fsqrt
adc
or
test
or
lds
dec
and
add
les
add
es
xchg
add
les
adc
add
rolb
mov
mov
mov
repz
lcall
jge
add
inc
pop
jle
cmp
add
mov
add
or
add
push
rolb
mov
mov
pop
loope
mov
add
mov
add
addb
pop
and
add
mov
addb
or
std
sub
add
cmpsb
dec
ss
jle
ucomiss
xchg
sub
rolb
mov
xchg
push
filds
imul
cmp
jmp
add
in
add
mov
mov
pushf
cmp
mov
mov
loope
lahf
jecxz
mov
dec
mov
sbb
cli
rolb
mov
test
movsb
call
add
add
fwait
in
mov
add
mov
jp
sub
adc
mov
jmp
cltd
mov
mov
add
dec
rolb
mov
or
add
xchg
add
lahf
jp
xlat
call
or
or
leave
dec
ljmp
lods
inc
add
dec
push
test
sti
fwait
xlat
xchg
dec
ja
stc
sahf
rolb
mov
xchg
lock
dec
adc
jl
add
add
mov
in
mov
add
in
cmp
sbb
repnz
mov
arpl
jo
mov
push
jp
dec
fstp
sub
imul
mov
ss
loope
push
add
sub
mov
repz
mov
inc
iret
mov
jp
xor
mov
xor
add
fs
in
adc
mov
jg
sbb
sbb
add
mov
add
inc
add
pop
pop
daa
dec
or
xor
jg
fbld
in
movsb
push
dec
imul
mov
cmp
cmp
push
add
xchg
add
jae
add
add
mov
add
push
add
pop
inc
leave
jp
jbe
xchg
addb
mov
push
iret
inc
add
xor
adcl
inc
int3
xchg
imul
fwait
xchg
arpl
repz
sahf
and
mov
fxch
fdivs
add
mov
push
or
mov
mov
push
inc
aad
fisubrl
cmpsl
std
jmp
or
mov
dec
pushl
add
jg
or
shr
icebp
adc
mov
popa
cmp
mov
add
or
add
popa
inc
rcl
add
or
out
sbb
add
or
stc
pop
or
mov
inc
jno
scas
addl
ja
push
add
mov
int3
jmp
popa
sahf
fsubr
and
mov
sahf
jg
sub
inc
sub
ljmp
loope
or
add
mov
add
cwtl
mov
imulb
add
rolb
mov
es
adc
add
aaa
xlat
adc
test
cltd
loop
mov
and
cmp
sbb
loopne
mov
inc
in
push
add
adc
mov
xor
mov
jmp
add
mov
mov
bound
mov
mov
add
scas
pop
rolb
mov
add
add
mov
inc
sti
or
push
add
stos
fsubrs
xor
mov
add
mov
mov
test
pop
lods
popf
pop
mov
testb
aam
inc
loope
push
mov
out
xorl
into
jbe
test
add
jp
jns
and
mov
notb
dec
pop
imul
mov
data16
mov
xor
mov
add
sub
inc
inc
je
gs
and
mov
mov
mov
add
mov
mov
mov
and
das
clc
repz
add
add
or
in
add
add
push
cmp
stos
cs
mov
add
sbb
pop
leave
mov
mov
sub
insb
jae
sahf
dec
fsubrl
pushf
aaa
hlt
mov
sbb
rcl
sbb
xor
fistpl
fsubl
cli
inc
insl
in
rolb
mov
add
mov
push
aaa
outsb
nop
add
test
cli
addr16
jae
dec
fcmovb
jb
mov
adcl
mov
mov
add
cmp
sbb
push
add
pop
sub
outsl
loope
and
mov
shll
add
add
sbb
fsubr
or
div
mov
sbb
cmp
xlat
das
inc
xchg
clc
cmp
mov
rolb
mov
mov
fwait
mov
fistpll
popa
ret
dec
jmp
add
pushf
xchg
add
add
mov
mov
add
sub
mov
mov
pushf
pushf
xchg
pop
out
mov
add
mov
cmp
jno
add
sub
add
bound
mov
movsb
imul
cld
jbe
js
ss
addb
gs
enter
inc
sbb
mov
enter
inc
push
xchg
lret
arpl
add
ds
add
push
add
sub
stos
arpl
mov
pop
sbb
xlat
stc
or
pop
ret
pop
xlat
jmp
jmp
jns,pt
imul
adc
mov
xchg
aaa
stos
rolb
or
adc
mov
lret
mov
outsb
push
into
adc
mov
movsl
movsl
or
sbbl
add
sub
cli
bound
mov
inc
mov
sar
add
lods
or
ja
lret
pop
or
dec
xor
add
push
push
add
insl
imulb
ret
fiaddl
cmpsb
sahf
cmp
rcr
jo
mov
mov
add
push
add
ret
inc
push
repnz
and
adc
mov
add
sahf
fsubl
jmp
insb
xchg
add
push
push
add
lea
addb
xor
add
mov
loope
fildll
mov
mov
sahf
mov
sbb
out
xor
dec
xchg
mov
mov
pop
es
dec
test
jne
in
mov
add
pop
mov
cmpsl
sbb
add
ja
je
add
pmulhuw
lcall
pop
outsb
leave
cmc
cmp
cmp
pextrw
popa
sub
mov
aas
sbb
loope
dec
cmp
add
add
addb
pop
push
aaa
loope
lock
rcrl
loopne
mov
popf
sbb
mov
out
out
add
and
mov
xchg
out
cld
dec
roll
add
imul
lahf
dec
flds
and
mov
add
mov
in
lods
push
aas
inc
add
adc
add
and
rolb
adc
add
stos
ljmp
sti
cmp
push
adc
mov
add
add
arpl
push
scas
dec
in
call
fwait
int
mov
jno
inc
jge
test
mov
mov
mov
pop
sbb
addr16
jecxz
daa
mov
sbb
mov
mov
test
pop
leave
gs
add
inc
add
sbb
mov
jecxz
add
pushf
repnz
xor
lds
or
loop
mov
not
mov
lret
add
ffree
add
mov
jnp
or
or
add
xor
mov
mov
mov
stc
and
sub
add
pop
insb
lea
iret
push
jo
mov
jge
rcrl
add
aad
jg
call
inc
repz
and
addb
fcompl
mov
add
add
test
xor
into
addb
arpl
inc
sbb
dec
push
cmpsl
push
xchg
push
arpl
pop
addb
outsl
jmp
add
jle
pushf
sub
cmpsb
mov
push
or
xlat
sub
jns
aam
sahf
jle
adc
add
add
mov
mov
and
mov
add
add
lret
mov
add
lods
or
fdivrl
shrl
push
test
mov
mov
cmc
and
les
add
xlat
loop
mov
or
sti
imul
repz
add
in
loope
pop
test
rcll
outsl
mov
dec
bound
mov
inc
sbb
xlat
cli
mov
xchg
in
or
mov
mov
mov
add
in
ror
cmp
roll
cmp
mov
inc
pop
scas
shll
mov
sbb
test
rolb
mov
mov
aaa
cmp
mov
fnstsw
add
outsb
out
sbb
add
loop
mov
sar
cmpl
cmp
lods
sbb
jmp
add
stos
loop
mov
sbb
and
mov
lods
inc
add
cltd
sbb
cmp
dec
ret
outsb
cmpl
add
in
ss
or
dec
cmpl
mov
adc
mov
mov
imul
mov
dec
adc
mov
adc
mov
mov
popa
mov
mov
xorl
jp
insl
sbb
cmc
xchg
xor
mov
mov
mov
xchg
bound
mov
enter
outsb
daa
ror
xchg
mov
pop
out
cmp
add
or
mov
insl
int
add
insl
fwait
xchg
inc
add
cli
jmp
int3
into
xchg
mov
add
jo
mov
pop
xchg
movsl
push
add
add
mov
xor
stc
add
mov
in
pop
mov
ficoml
and
mov
fs
lret
or
popa
addb
in
fcomps
add
in
sti
dec
jb
mov
mov
add
pop
imul
enter
popa
xor
mov
insl
fimull
xor
add
jp
mov
add
call
sub
sbb
mov
sti
leave
dec
sarl
popf
adc
imul
mov
xchg
js
xchg
add
sub
repz
add
pop
and
jg
xchg
sub
pop
lret
or
add
test
call
fcompl
mov
loope
sbb
std
imul
mov
in
dec
aad
sub
rolb
mov
shll
mov
addb
cmpsl
dec
repnz
pop
xor
cmp
in
fwait
dec
xchg
or
xlat
xor
add
add
xchg
mov
add
call
movsb
pop
mov
mov
js
sub
rolb
cmp
mov
mov
jmp
pop
add
add
rolb
mov
add
push
add
mov
mov
mov
shll
imul
xor
mov
mov
pop
push
add
mov
lahf
or
add
jg
iret
push
cmp
lret
pop
xor
add
mov
add
fbld
add
addb
imul
mov
mov
dec
dec
popa
ret
rolb
mov
xchg
or
aas
inc
add
jge
inc
inc
and
mov
pop
inc
jb
mov
xor
mov
mov
inc
inc
mov
pop
enter
add
rcrl
inc
add
pop
adc
mov
pusha
add
lret
sub
xchg
add
xchg
rolb
mov
add
xchg
cltd
scas
inc
add
add
mov
mov
pop
xchg
xchg
sub
mov
add
add
add
push
int3
lods
mov
out
jmp
mov
fs
dec
leave
push
stc
dec
add
sub
jnp
daa
and
inc
pusha
add
jo
mov
sbb
sub
sub
loope
out
lods
inc
push
sarl
jg
cs
add
cmp
cmp
mov
add
push
jo
mov
outsl
je
movsl
sub
cs
fmul
and
stos
sbb
pop
mov
dec
pop
and
jnp
pop
mov
jns
jle
jmp
test
std
fst
ret
adc
mov
add
xchg
xchg
push
add
fnstsw
add
mov
add
lock
xlat
fs
xor
mov
lods
ljmp
iret
xchg
or
out
inc
add
fdivr
or
loope
in
mov
cmp
jp
push
add
stos
iret
test
hlt
popa
add
mov
or
lret
jg
test
and
mov
push
fs
addr16
pushl
xchg
jno
popf
lcall
outsl
add
cmp
mov
mov
movsb
mov
popa
fildl
mov
in
scas
add
add
mov
cmp
add
add
push
add
inc
jno
add
push
jne
mov
add
mov
sub
add
mov
cwtl
inc
or
mov
and
in
fidivl
mov
jb
mov
add
mov
les
add
mov
movsl
dec
mov
mov
mov
or
adc
popf
mov
mov
imul
mov
mov
imul
sub
mov
add
add
mov
dec
pop
or
pop
rolb
pop
aas
cmp
push
addb
insl
inc
addb
adc
pop
inc
ds
ret
sahf
inc
inc
in
add
test
push
jmp
add
add
jg
add
mov
aam
jnp
push
add
mov
push
adc
push
rolb
mov
mov
mov
mov
test
pop
das
scas
movsl
add
mov
in
and
mov
ljmp
bound
mov
push
addb
popa
out
lcall
mov
cltd
aas
ret
jae
stc
loop
mov
add
mov
aad
enter
add
sbb
add
fiadds
cmp
lcall
into
jnp
aaa
and
cld
pop
stos
rolb
popf
jmp
stos
mov
mov
dec
sub
addb
outsb
aam
jecxz
jmp
add
sub
mov
daa
xchg
and
push
add
push
xor
mov
lahf
in
test
lods
cmc
es
mov
gs
push
xor
scas
jecxz
jo
mov
mov
jp
pop
dec
filds
add
add
mov
pop
aad
fisubrl
divb
ja
adc
mov
pop
test
lods
adc
and
mov
in
mov
inc
xor
mov
fstpl
test
lret
in
lea
push
add
fnsave
jmp
inc
jecxz
dec
sub
add
and
mov
add
mov
and
pusha
add
sbb
jb
mov
mov
jle
fldl
aam
pop
jbe
push
in
cli
fisttps
ss
push
dec
fmuls
mov
add
je
jne
mov
sbb
mov
add
xchg
jmp
add
bound
mov
jbe
int3
xor
mov
or
mov
outsl
sub
mov
xor
add
mov
pushf
pop
repz
inc
pop
jnp
push
xchg
mov
add
adc
mov
add
aam
add
mov
inc
cmc
imul
lret
jg
add
add
inc
push
pop
daa
xor
mov
rcr
or
pushl
add
cltd
cld
adc
mov
fldenv
int3
je
nop
add
and
cmp
and
mov
mov
adc
int3
pop
aaa
sub
add
negl
pop
mov
int
imulb
mov
out
xchg
push
mov
jge
or
add
fcmovb
add
cs
push
mov
sti
mov
call
addr16
out
sub
add
pop
das
std
adc
inc
lods
or
mov
mov
add
jne
add
sub
mov
sub
add
bound
mov
cli
fcoml
in
clc
das
inc
xchg
nop
add
test
scas
jo
mov
jle
es
adc
mov
lcall
or
xor
jnp
adc
mov
mov
add
icebp
sub
lods
outsl
push
inc
add
fldt
imul
mov
cmpsb
stos
and
pop
arpl
mov
loopne
mov
pop
inc
add
mov
hlt
dec
xchg
add
repz
add
out
insb
jne
add
add
push
repz
jne
adc
push
sub
in
pop
cld
pusha
add
pusha
add
add
xchg
lods
addb
ret
xlat
cmpsb
call
cmp
push
ret
lcall
add
loope
out
jnp
xlat
stos
pop
adc
mov
and
mov
or
jp
xorl
and
aam
fs
sbb
stos
inc
add
fisubrs
in
push
mov
mov
pusha
add
add
test
fnsave
addr16
test
imul
dec
test
lcall
mov
lret
mov
ret
fwait
jge
pop
ret
jnp
jns
jp
dec
xchg
jbe
mov
imul
mov
aaa
mov
insb
sbb
dec
jle
scas
addr16
add
mov
nop
add
mov
mov
sbb
sbb
mov
hlt
and
mov
fistl
mov
stos
addb
mov
push
mov
inc
clc
cmp
pop
mov
add
ret
cmp
pusha
add
fadd
mov
pop
movb
mov
or
jp
shll
loop
mov
mov
js
aam
add
and
add
jg
in
add
mov
bound
mov
mov
xor
mov
cmp
lds
add
add
mov
push
mov
cltd
mov
and
mov
lret
lea
mov
sbb
dec
sbb
xchg
jns
insl
push
push
out
insl
pop
mov
add
jne
add
mov
je
repnz
jae
add
mov
add
or
push
mov
ret
mov
mov
movsb
xchg
mov
cwtl
xchg
andl
mov
add
add
add
xchg
jne
pusha
add
add
por
mov
mov
add
fisttpl
imul
push
cmovnp
data16
fldt
test
pushf
ds
fnsave
inc
add
idivl
add
movsl
lods
adc
mov
mov
add
leave
movl
out
les
inc
es
or
scas
xchg
add
xchg
mov
mov
ret
mov
js
ss
mov
aaa
add
xor
mov
les
mov
ljmp
inc
ja
call
fisttps
cmp
test
or
add
test
mov
sub
mov
mov
nop
add
cwtl
pusha
add
add
and
fwait
loop
mov
imul
shll
inc
add
mov
xchg
add
push
add
add
add
and
mov
add
mov
rolb
mov
je
imul
das
cmp
or
add
pop
cmp
xchg
test
sahf
sbb
cwtl
dec
cld
mov
lods
ss
sub
insl
scas
mov
mov
mov
sub
and
mov
test
xchg
or
cmpsb
loope
mov
in
popa
gs
sbb
sub
sbb
inc
push
jp
sub
add
pop
or
jns
andl
aad
cld
push
aas
int
add
sub
add
push
jmp
cwtl
fisubl
pop
sbb
fiadds
mov
imul
int3
mov
jp
mov
nop
add
subl
lds
xchg
cs
cmp
cld
pop
ss
enter
and
mov
ss
das
loope
or
mov
popf
scas
sub
lret
add
xchg
pop
loope
add
add
cwtl
rolb
sbb
and
mov
scas
add
mov
stos
stos
jp
inc
jle,pn
mov
add
out
mov
or
faddp
jmp
jge
lret
sub
push
add
add
and
shr
scas
cmp
rolb
mov
ja
lret
mov
fidivrl
cmp
sub
mov
inc
dec
daa
or
sahf
movb
cltd
adc
mov
in
xlat
lods
nop
add
je
aaa
int3
lahf
imul
xchg
int3
out
mov
stc
mov
stc
xchg
mov
mov
js
cmpsb
mov
icebp
mov
hlt
mov
push
xchg
add
add
pop
add
lea
int3
mov
add
sub
mov
jns
sub
or
add
push
lods
pop
jno
imul
loopne
mov
pusha
add
pop
test
add
aad
inc
mov
xchg
clc
sbb
jl
mov
inc
data16
push
addb
adc
add
mov
jle
push
sbb
mov
loopne
mov
mov
sahf
into
and
pop
and
aam
xchg
leave
lods
call
add
repz
add
sbb
and
pop
dec
lds
leave
sbb
rolb
mov
lahf
xor
mov
and
xor
mov
mov
fwait
aad
jmp
std
mov
sub
jb
mov
xor
mov
xchg
leave
stos
add
movsl
add
mov
mov
pop
adc
js,pn
sbb
stos
xchg
dec
gs
mov
mov
test
jecxz
cmp
add
add
cmp
lds
push
fistl
je
add
leave
int
add
xchg
sbbl
mov
enter
insl
adc
dec
out
dec
flds
out
rolb
mov
xchg
push
sbb
jg
ret
mov
ficoml
bound
mov
mov
mov
mov
xchg
gs
mov
xor
sub
fcoml
or
jmp
leave
mov
or
xor
jmp
jae
scas
push
pop
insb
rolb
mov
cmpsl
inc
outsl
mov
mov
in
or
popf
cmpsl
addb
push
vandpd
ret
scas
push
add
jo
mov
cmp
outsb
notl
sahf
xchg
jmp
mov
mov
repnz
fsubl
mov
addb
adc
sbb
inc
lock
mov
dec
pop
pop
add
mov
rolb
mov
mov
dec
rolb
mov
add
xchg
insl
or
jns
mov
inc
cmp
mov
mov
negl
les
add
in
mov
neg
adc
mov
mov
add
rolb
lods
xchg
or
in
add
divl
loopew
cmpsb
pushl
and
dec
sub
jmp
jp
mov
add
jp
dec
sub
cmc
or
xor
ljmp
mov
insb
je
mov
mov
jo
mov
xchg
add
add
mov
mov
adc
mov
mov
inc
add
or
add
mov
mov
mov
out
pop
or
inc
add
sub
bound
mov
fcmove
rolb
push
paddw
add
add
dec
fcomp
lods
movb
add
add
cmp
xor
mov
nop
add
add
aaa
cmp
orl
cltd
sub
je
adc
mov
daa
jg
icebp
fimuls
mov
add
mov
mov
add
mov
cli
popa
out
into
faddp
add
xor
mov
add
ret
mov
add
add
inc
add
mov
mov
add
ss
mov
loopne
mov
mov
and
mov
xchg
sahf
stos
pop
fidivl
add
or
cwtl
lea
cmp
mov
mov
dec
fstpl
jmp
rorl
jbe
push
mov
mov
jne
sub
sbb
and
sbb
ja
sub
jb
mov
pop
push
ja
rcrl
jmp
xlat
js
test
or
flds
mull
cltd
ret
jns
iret
popf
pop
in
sbb
add
jmp
out
push
add
add
add
push
mov
inc
add
add
popf
dec
sub
add
fucom
in
mov
mov
mov
xchg
pop
mov
sahf
and
mov
add
xchg
ja
adc
adc
mov
insl
cld
mov
mov
mov
ja
arpl
mov
int3
stos
rolb
mov
jp
out
jl
inc
popa
inc
add
mov
xchg
nop
add
add
dec
stos
flds
pop
test
das
xchg
pop
jg
shll
rolb
jmp
lret
repz
inc
aaa
jbe
sub
pop
inc
cmp
xchg
or
push
movsl
sahf
inc
add
cmp
push
nop
add
and
mov
test
mov
mov
les
sbb
mov
xchg
rcr
movsl
sub
popf
pusha
add
add
add
call
stos
stos
test
sarl
repnz
and
xchg
sub
mov
imul
mov
insl
lret
enter
fcompl
fildll
loop
mov
add
aam
add
fdivp
add
push
int3
popf
mov
sbb
rcrl
or
push
xor
or
mov
mov
or
and
mov
rolb
sub
cmp
divl
fxch
nop
add
cmc
sub
jae
adc
xchg
add
aad
add
loope
xchg
mov
cmp
mov
es
xor
mov
add
inc
add
mov
cmp
scas
push
lahf
xchg
test
add
or
and
mov
inc
js
ss
pop
push
aas
aaa
and
mov
push
scas
cmp
or
add
mov
xlat
out
repz
mov
imul
mov
insb
pop
int
mov
std
adc
mov
sahf
push
test
data16
mov
gs
lret
lods
xchg
add
add
daa
pushf
pop
add
sub
add
and
mov
notl
add
xchg
cli
cmpsl
stc
jle
add
rolb
testl
mov
pop
cli
scas
add
add
stos
and
mov
lea
mov
pop
ret
xchg
cli
mov
dec
adc
add
mov
and
xchg
jle
adc
mov
frstor
jnp
addr16
mov
les
pop
stc
leave
movsb
jmp
mov
cld
xchg
sahf
sarl
in
mov
insl
mov
add
loope
add
add
aas
repz
add
mov
ret
jb
mov
addb
in
gs
or
add
add
dec
js
jb,pn
mov
popf
stc
xor
add
or
sbb
movsl
cmp
test
push
inc
ret
cmp
and
mov
sbb
mov
mov
sub
cltd
test
pop
out
and
mov
cmp
sarl
sbb
mov
adc
jp
xor
mov
add
add
cmp
add
xor
inc
sbb
or
sbb
add
mov
add
push
adc
stc
add
and
add
mov
pop
dec
or
add
rcl
in
jne
add
inc
fisttpll
sbb
pop
das
jg
int
push
add
adc
pop
cmpsl
sbb
leave
lahf
idivl
cli
push
cmp
and
scas
add
mulb
and
cmp
add
dec
lock
jecxz
jo
mov
repnz
inc
sbb
jb
mov
mov
or
jne
add
mov
sbb
inc
into
cmp
add
scas
cs
mov
fdivrs
cmp
mov
sbb
add
sub
hlt
push
add
ljmp
out
cs
les
xchg
sti
mov
aaa
test
mov
sbb
cli
push
dec
mov
movsl
and
mov
and
mov
push
gs
mov
fwait
pop
mov
repz
dec
jg
cmp
addr16
fiaddl
mov
add
je
add
jg
leave
push
addb
sbb
add
add
xlat
pop
mov
divl
add
test
add
rolb
repz
push
mov
add
or
add
jge
add
or
add
dec
stc
popa
mov
imul
inc
into
sbb
mov
xchg
xor
scas
jg
xor
mov
add
shrl
rolb
push
mov
mov
mov
jo
mov
hlt
pop
cmpsb
jb
mov
in
xchg
aad
fcompl
add
out
add
mov
fsubrs
cli
loop
mov
add
mov
jecxz
orl
ret
dec
jp
out
xor
test
add
pop
dec
shrl
pop
xor
sub
sub
add
sar
pop
dec
inc
movsl
xchg
pop
stos
cmp
add
mov
enter
xor
daa
and
add
fnstcw
dec
fmulp
ss
adc
push
add
loopne
mov
push
loop
mov
into
push
cld
xor
fisubrs
test
dec
test
jmp
outsb
xor
mov
mov
inc
std
pop
pop
cmp
jbe
out
aaa
xlat
test
daa
rolb
mov
mov
add
es
mov
cld
and
mov
rolb
lcall
mov
popf
push
movsb
sbb
sbb
cmpsl
notl
mov
leave
mov
out
in
push
push
mov
cs
mov
outsl
cmpl
add
into
popf
int
mov
insl
jnp
cmp
add
add
dec
mov
call
mov
inc
xchg
dec
loopne
mov
enter
popa
push
in
add
les
pushf
in
repnz
cltd
scas
pop
ja
cld
lret
outsl
test
mov
mov
mov
xor
mov
outsb
subl
mov
addb
mov
cmp
mov
rolb
mov
xor
mov
clc
or
sub
ret
jbe
mov
leave
adc
mov
cmpsb
xor
in
dec
sub
dec
sbb
aam
add
sub
and
and
mov
pop
cmp
sbb
arpl
add
sbb
cli
jbe
dec
sbb
add
sbb
test
cltd
or
pushl
in
push
ficompl
idivl
add
mov
test
jno
popa
cmpl
add
add
in
sub
gs
add
push
mov
loope
or
insl
repz
mov
mov
add
mov
pop
jl
inc
add
lcall
push
mov
lret
add
out
sub
aam
movsb
rolb
mov
push
add
or
imul
mov
cmp
sbb
add
add
mov
mov
dec
and
mov
jmp
sbb
add
iret
push
lea
loopne
mov
push
addr16
mov
popf
jne
fnsetpm(287
pop
cmp
test
add
insb
inc
addb
mov
int3
push
ljmp
add
lds
jo
mov
add
fwait
xchg
add
test
sub
xchg
add
xchg
jns
fisubrl
cmp
inc
add
mov
add
push
addr16
sbb
cmp
or
mov
jp
loop
mov
push
lea
add
xchg
add
arpl
pop
fists
pop
repz
adc
mov
sbb
aas
stos
dec
aad
std
lahf
je
arpl
push
fiadds
fcmovnu
and
adc
mov
lret
xchg
cmp
and
mov
outsl
sub
jle
push
push
xchg
xchg
mov
mov
add
mov
add
pmuludq
add
ljmp
jle
push
mov
push
adc
push
cmp
mov
mov
or
lods
cmp
adc
mov
mov
add
dec
dec
sub
xchg
je
andl
mov
in
inc
mov
dec
outsb
sbb
or
pusha
add
jmp
sbb
jp
add
cli
sub
loop
mov
test
add
cmp
pop
xchg
idiv
xor
mov
mov
dec
add
mov
xlat
adc
mov
lahf
xchg
or
dec
sub
xchg
fistl
mov
add
out
mov
add
adc
mov
mov
pop
sbb
scas
jno
or
imul
adc
bound
mov
push
or
aad
rcr
mov
lahf
mov
add
jmp
or
jne
jle
jmp
aaa
or
inc
jmp
add
inc
adc
mov
mov
aaa
jo
mov
jle
dec
out
sub
fmull
repnz
into
push
add
out
and
mov
data16
int3
cmc
and
sbb
pop
xlat
add
add
lahf
iret
dec
ffree
jo
mov
and
cmp
out
mov
leave
jmp
add
mov
repz
adc
mov
loop
mov
or
mov
add
rolb
mov
mov
xchg
dec
in
daa
or
cmp
inc
add
add
aam
dec
adc
adc
mov
jg
pop
sbb
lea
sub
pop
jb
mov
pop
push
add
add
adc
out
cmp
fidivrs
shll
fnstsw
add
add
aad
sbb
sub
lods
lret
dec
adc
jge
test
pop
mov
cmpsl
pmulhuw
mov
pop
data16
push
insl
jge
nop
add
mov
mov
pop
paddsb
add
mov
jmp
leave
push
gs
cmpsb
jb
mov
enter
mov
sub
test
mov
outsb
insl
lret
inc
dec
cmp
jae
push
aad
jl
icebp
and
aaa
inc
and
add
push
call
mov
dec
pop
cltd
push
addb
inc
add
add
xchg
mov
add
addr16
clc
je
add
mov
or
xlat
pop
mov
xlat
daa
int
add
add
sqrtps
daa
fstpt
mov
stc
jo
mov
into
jnp
movsl
cmpsb
mov
gs
sbb
fcomi
bound
mov
into
sub
cmp
add
mov
cmc
mov
mov
clc
aam
stos
and
mov
mov
xchg
add
xchg
or
add
mov
pushf
mov
ds
mov
sar
xor
push
cmp
je
inc
inc
daa
fisttps
mov
push
push
pop
fabs
push
xlat
test
int
add
push
mov
fdivp
add
rorl
and
mov
dec
aad
push
popa
mov
mov
lcall
mov
aam
and
add
add
adc
stc
in
and
cmpsb
inc
add
ret
imul
lods
add
mov
add
enter
out
xchg
inc
hlt
pop
cmpsb
faddl
adc
add
repz
jne
insb
mov
push
lock
jp
push
mov
add
mov
dec
test
add
sbb
test
loop
mov
data16
xlat
lds
add
dec
mov
int
and
ret
and
lock
dec
mov
mov
mull
mov
and
test
cs
cld
cltd
bound
mov
push
rcll
data16
push
addb
adcl
add
adc
push
aas
xchg
dec
pop
test
out
push
push
repnz
add
dec
mov
inc
add
std
dec
sbb
out
sbb
mov
push
dec
or
fisubrs
scas
adc
in
loopne
mov
mov
mov
mov
xlat
dec
mov
repnz
mov
dec
in
lret
cld
mov
add
adc
adc
mov
or
fnsave
mov
add
jle
jbe
add
pusha
add
imul
mov
lcall
div
pop
or
pop
repz
mov
push
xor
push
sub
sub
ret
nop
add
lret
fwait
xchg
add
add
dec
cmc
dec
dec
stc
push
inc
and
mov
jnp
xchg
popa
add
pop
out
js
jo
mov
inc
add
dec
or
add
cmp
inc
add
and
jl
cli
out
cmpsl
push
adc
dec
push
pop
xchg
pop
jle
mov
mov
mov
or
jns
loopne
mov
js
add
daa
fs
mov
add
add
pop
and
insb
push
add
jle
dec
ja
aaa
out
mov
cmpsl
popa
sahf
imul
mov
add
sbb
cmpsb
cli
push
sbb
xor
mov
es
cmp
xor
mov
jbe
mov
addr16
sub
xlat
xor
push
mov
sub
je
pusha
add
imul
mov
mov
fsubrs
negb
mov
and
mov
repnz
jl
add
js
pop
fadd
sbb
sub
add
int
dec
xchg
je
aam
sub
push
mulps
add
add
add
sub
mov
dec
cmp
adc
mov
jecxz
into
xorl
xor
mov
mov
fldt
sti
mov
loop,pt
mov
push
pop
hlt
out
push
mov
pop
fcmovne
push
adc
out
ljmp
out
add
mov
pushf
cwtl
aam
std
xor
lahf
daa
dec
sub
inc
stos
aas
and
push
sub
mov
push
pop
outsb
or
sub
fdivrs
test
test
inc
add
test
iret
addb
cmp
adc
add
sbb
add
sbb
hlt
out
rolb
and
mov
pop
imulb
jb
mov
inc
lahf
jle
add
or
mov
adc
mov
inc
repnz
pop
lea
mov
mov
rolb
mov
adcl
ds
lahf
in
pop
daa
pop
icebp
and
outsl
clc
push
aad
mov
add
adc
mov
addr16
add
push
outsl
dec
pop
arpl
xchg
leave
jecxz
add
stc
sbb
add
out
or
jg
cld
jmp
push
loopne
mov
xchg
pop
adc
ljmp
mov
jle
fnstcw
or
out
aam
icebp
pop
fcomi
cltd
mov
add
test
push
rolb
mov
imul
aam
lods
push
add
add
add
stos
push
test
add
cmpsl
jae
fiaddl
loope
add
add
xor
mov
mov
jmp
push
add
mov
sti
pop
inc
xor
mov
xor
mov
xchg
mov
cmp
outsb
out
iret
cmpsb
mov
mov
mov
add
inc
sbb
inc
xor
enter
loope
dec
nop
add
pop
jle
mov
mov
mov
pop
test
scas
add
mov
lcall
sbb
jns
inc
add
push
test
xor
pop
fisubs
add
in
inc
test
pop
xor
mov
stos
je
lea
add
add
gs
outsl
repnz
add
decl
movl
xchg
fwait
stos
jle
lea
out
mov
mov
mov
decb
aaa
jo
mov
mov
add
jb
mov
add
lret
loop
mov
cmp
mov
popf
cmpsl
jmp
ret
leave
stos
pop
scas
jecxz
sub
dec
iret
pop
xchg
inc
add
mov
jge
xor
fnstcw
jo
mov
mov
ss
xchg
ss
sbb
nop
add
or
jmp
inc
adc
mov
test
mov
or
and
mov
mov
cmpsl
rorl
imull
int
dec
das
cmpl
sbb
and
push
push
pop
push
mov
mov
loop
mov
jbe
in
xor
cmp
mov
mov
mov
mov
sbb
aad
cld
add
mov
andl
imul
sbb
mov
addb
and
cmp
and
mov
or
aaa
inc
add
dec
inc
mov
mov
js
pushf
fwait
pushf
repz
and
mov
xor
mov
or
inc
insl
stc
shl
add
lret
inc
nop
add
lret
or
aaa
addr16
add
fisubrs
loope
or
mov
mov
dec
outsl
jl
push
jns
mov
mov
das
stos
lock
add
add
adc
rolb
mov
mov
test
data16
gs
xchg
cmp
adcl
fstps
dec
pop
pop
mov
adc
lret
je
jne
mov
mov
in
xlat
test
xchg
add
fcoml
dec
nop
add
cs
lret
dec
lods
cltd
jl
ficoml
mov
dec
xchg
fstpl
pop
fcomi
or
mov
nop
add
sti
lcall
mov
out
aad
push
jmp
push
movsb
jl
sub
add
push
mov
js
movaps
dec
js
push
lds
mov
add
mov
add
mov
add
or
out
scas
into
inc
add
add
add
push
paddusw
mov
pop
addb
sbb
and
jecxz
lret
jo
mov
movsl
enter
mov
or
decl
lock
nop
add
add
test
pop
mov
add
mov
mov
shlw
inc
pop
jmp
dec
xchg
sti
mov
sub
mov
adc
jmp
add
add
shll
mov
pop
xchg
gs
or
mov
adc
add
mov
out
iret
dec
and
sub
dec
outsl
add
mov
clc
push
add
lahf
xchg
mov
push
cmp
sbb
imul
xchg
inc
addb
xchg
dec
sub
mov
leave
mov
das
test
inc
jne
push
dec
pop
or
dec
adc
mov
push
std
cmpsb
pop
rolb
add
add
or
add
mov
js
inc
je
mov
sahf
add
xchg
add
mov
add
dec
cmpsl
dec
stos
push
in
je
insb
mov
mov
mov
add
test
test
adc
mov
stos
adc
add
add
mov
add
mov
mov
jmp
mov
test
movups
mov
jg
and
push
cmp
and
mov
adc
mov
movsb
sub
add
mov
fisttpll
repz
sub
popf
xchg
add
or
test
inc
add
xchg
add
std
loopne
mov
sbb
outsl
adc
sub
jo
mov
hlt
in
lcall
add
sub
add
sahf
inc
mov
lock
mov
dec
sub
mov
jl
and
mov
add
add
jnp
iret
cli
popa
xchg
ljmp
sbb
sbb
xor
mov
mov
das
xchg
xchg
add
add
xor
out
test
cli
xor
or
pusha
add
insl
xor
mov
call
test
andl
push
add
rsqrtps
mov
mov
mov
push
mov
dec
call
jp
add
lcall
movsb
push
add
sub
mov
push
add
add
aas
fisubl
add
aad
sahf
loopne
mov
inc
sub
fwait
movsl
jmp
outsl
mov
psubw
add
add
mov
xchg
xor
mov
or
push
rorl
in
inc
xchg
add
mov
and
add
push
xor
xor
add
ja
mov
add
push
rolb
mov
mov
add
add
ja
popa
iret
mov
mov
pop
and
or
mov
and
out
loopne
mov
mov
add
imul
out
out
cmpsl
aam
test
sbb
fsubs
jo
mov
out
mov
scas
lret
mov
int
push
sub
xchg
mov
test
lahf
repz
into
pop
xchg
jge
cmp
xchg
ret
in
sub
daa
sub
mov
mov
ljmp
add
mov
lods
inc
add
lcall
mov
cmp
dec
sbb
movl
jge
add
add
add
push
dec
test
addb
into
push
mov
mov
push
add
push
sbb
sahf
sub
adc
aas
pusha
add
lret
popa
adc
out
add
mov
add
mov
mov
add
mov
repz
rcrl
sbb
js
add
jmp
push
aaa
xor
mov
cmp
mov
aas
loop
mov
dec
pop
jbe
rcrl
push
arpl
cmpl
jb
push
sub
jo
mov
add
add
fmull
xchg
or
jae
add
mov
ficoml
call
addb
xor
popa
add
mov
stos
inc
cmpsb
jne
sub
test
push
mov
mov
sbb
nop
add
mov
or
jae
xchg
cmp
sbb
jmp
pop
mov
add
pop
ja
add
ss
arpl
pop
add
mov
jp
add
mov
add
xchg
repz
jae
and
mov
xchg
add
scas
js
enter
jmp
dec
loopne
mov
aad
cmp
inc
add
mov
jnp
mov
mov
ja
jp
push
add
add
stos
daa
cmp
inc
add
rolb
mov
pop
cmp
mov
mov
add
lods
lds
xchg
mov
sahf
dec
cwtl
or
add
andl
mov
add
xor
xchg
lods
jmp
push
adc
add
ja
xor
inc
jp
iret
add
mov
add
in
inc
sub
jb
mov
add
cwtl
out
fstl
pop
cmp
sub
add
mov
xlat
jle
push
lcall
pop
out
fstps
xor
mov
movb
shll
add
arpl
sub
push
std
mov
cltd
aam
sbb
loope
shl
test
push
pop
sti
mov
test
dec
cmp
dec
xor
rorl
push
pop
or
mov
xchg
mov
mov
lret
mov
mov
mov
aam
add
cltd
test
fs
lahf
add
mov
mov
add
js
pop
popf
icebp
fnstcw
add
push
add
mov
orl
jecxz
icebp
inc
add
xchg
test
mov
push
xor
mov
dec
xchg
std
xchg
xor
mov
add
stc
jo
mov
mov
or
add
xor
mov
add
pop
xchg
hlt
jno
or
add
fists
add
push
adc
jp
scas
add
sbb
add
mov
lds
sub
mov
xlat
ret
mov
push
jge
push
add
push
daa
movsb
loope
adc
or
mov
dec
scas
leave
pop
scas
ss
mov
jmp
inc
dec
daa
gs
cli
sub
out
dec
jge
push
add
add
cmp
insl
pop
mov
subl
add
mov
jge
add
arpl
xchg
aad
adc
mov
push
ret
outsl
xchg
add
in
sub
add
mov
test
jnp
and
outsb
cld
add
mov
gs
repnz
aad
stos
inc
push
and
out
xor
mov
jns
aas
inc
mov
rolb
mov
arpl
popl
push
add
fisubrl
addb
imul
add
add
push
push
cs
mov
add
add
inc
mov
mov
push
add
fcmovne
in
mov
rolb
mov
add
fidivrs
add
add
add
mov
add
mov
rolb
mov
mov
mov
or
lret
out
std
xor
push
add
mov
dec
push
test
add
rolb
leave
loope
xorl
mov
mov
repnz
sub
mov
lea
and
popf
das
lcall
mov
mov
cltd
jg
mov
mull
add
add
aaa
jnp
push
jle
xchg
add
add
mov
mov
xor
mov
testl
fbld
xchg
loop
mov
and
mov
mov
ljmp
push
add
jo
mov
sub
dec
push
loope
push
loopne
mov
sbb
add
inc
test
mov
mov
cs
mov
mov
push
sbb
xor
mov
mov
adc
pop
jmp
sahf
add
mov
rcl
add
mov
push
add
mov
jo
mov
or
mov
in
add
mov
dec
push
fsubrl
test
leave
orl
jb
mov
push
aam
and
mov
daa
jne
push
enter
push
lcall
fnstenv
sti
sahf
int
jb
mov
jbe
pop
push
addb
lret
push
stos
es
mov
xlat
int
mov
jnp
cmpsb
push
and
movsb
scas
xchg
dec
int3
push
ds
adc
mov
xor
pop
mov
add
mulb
mov
popw
shll
jp
aas
data16
mov
xchg
imul
jne
sub
add
shll
loop
mov
mov
mov
pop
or
je
dec
push
jne
jp
rolb
mov
in
fsubrp
in
rolb
mov
add
mov
sub
xchg
add
cmc
es
popf
push
add
pusha
add
xor
mov
clc
pop
imul
std
inc
push
dec
fimuls
rcll
stos
jns
sbb
add
insl
sahf
mov
pushf
sbb
xor
aad
lods
cld
ds
adc
add
add
mov
mov
dec
outsl
adc
mov
mov
int
xchg
leave
push
ja
sbb
mov
mov
push
add
icebp
cmp
add
jbe
pop
in
sahf
mov
add
mov
pop
and
mov
dec
scas
mov
jo
mov
sbb
mov
mov
test
arpl
mov
add
push
add
fdivr
or
lcall
cmp
mov
add
push
mov
imul
or
xchg
int3
xor
mov
mov
mov
add
and
mov
xchg
addr16
mov
dec
jp
cli
daa
iret
mov
add
hlt
mov
pop
adc
add
aas
sbb
arpl
pop
out
rolb
mov
mov
pop
je
ror
and
mov
xor
lock
add
jb
mov
fcoms
adc
mov
jge
outsb
shrl
mov
cmpsl
fwait
sbb
mov
rolb
aaa
add
das
mov
hlt
mov
hlt
ret
dec
or
xor
mov
call
aam
aaa
mov
mov
imul
mov
mov
ficoml
in
mov
lods
insl
call
aaa
repz
jecxz
daa
testl
mov
mov
jmp
adc
mov
pop
cs
scas
incl
pushf
dec
xor
mov
pop
dec
punpckhbw
cli
aas
mov
test
lock
jge
cmp
add
movsl
or
mov
stos
fstpt
sub
scas
adc
push
rolb
sub
add
xchg
cli
in
mov
cmp
pushf
scas
into
jle
xchg
jle
sti
lcall
mov
fwait
imul
flds
rolb
mov
inc
add
add
or
adc
mov
loope
popf
xchg
lcall
sbb
dec
xchg
lret
icebp
add
mov
add
mov
xchg
add
vandnps
xchg
add
into
out
loop
mov
add
mov
add
xchg
mov
imull
xchg
js
adc
jo
mov
push
add
add
mov
dec
pop
in
and
fsubrl
dec
push
add
lds
rolb
bndldx
sbb
test
jae
rolb
mov
mov
out
or
in
push
testl
add
add
pop
adc
mov
mov
cmp
aaa
sbb
add
add
push
cmc
fldenv
mov
int
add
add
mov
fcompl
daa
rcr
inc
int
fbstp
mov
fsub
add
es
add
out
pop
cmp
and
mov
dec
ds
pushf
push
jo
mov
add
cmp
inc
mov
fdivrl
pop
in
xchg
ret
cmp
add
mov
mov
push
and
mov
dec
push
add
addb
cmp
add
rolb
adc
add
mov
in
clc
or
add
call
out
paddsb
cmp
jle
add
aaa
out
jp
mov
push
sahf
jp
and
lods
dec
loope
sahf
xor
add
int
cmp
test
and
mov
je
push
sub
lds
add
mov
add
lea
or
mov
push
repz
add
or
test
and
mov
fs
lcall
pop
mov
cmp
xor
dec
lock
out
jo
mov
sbb
xor
scas
repnz
outsl
gs
mov
mov
mov
xor
fiaddl
mov
call
pop
mov
inc
addr16
adc
mov
xchg
mov
pop
mov
xchg
add
or
mov
pop
mov
or
mov
aam
jle
add
mov
add
xlat
inc
lock
stos
dec
es
cmpsb
movl
mov
jle
adc
mov
add
fcmovu
xlat
popa
mov
add
mov
sahf
jbe
mov
test
aad
add
mov
add
mov
add
mov
push
add
pop
mov
cltd
xchg
push
jo
mov
mov
aas
ljmp
mov
xchg
out
test
int
xlat
jp
dec
in
adc
add
movsb
jle
add
dec
push
jecxz
mov
and
add
sahf
sbb
add
int3
push
dec
aas
pop
dec
or
push
xchg
add
add
pop
rolb
pushw
pop
lods
loopne
mov
