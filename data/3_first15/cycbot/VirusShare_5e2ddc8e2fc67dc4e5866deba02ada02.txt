aaa
mov
cmp
mov
push
cmc
iret
cltd
bound
push
out
ret
jge
mov
add
mov
outsl
xor
js
mov
int3
xchg
or
insl
cmpsl
xchg
mov
nop
xchg
cmpsl
pushf
or
lcall
cld
imul
sahf
mov
add
pop
call
jo
leave
daa
mov
and
pop
shll
cmp
rcrb
pop
mov
decl
js
popf
hlt
jp
sbb
xor
or
inc
adc
add
push
pusha
add
fisttpll
ror
mov
rolb
jnp
ret
pop
fs
imul
mov
rol
loop
inc
add
inc
add
callw
addb
lret
pushf
lock
mov
push
add
add
add
add
mov
icebp
jg
fwait
test
enter
or
xchg
in
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
sub
push
adc
jl
xchg
fsubrs
adcl
aaa
fdivs
xor
lret
jmp
test
insb
ljmp
ret
mov
mov
push
pop
mov
and
lock
dec
fcoms
jae
rolb
ljmp
lret
fwait
bnd
mov
mov
push
dec
aas
addb
xor
xor
scas
inc
sahf
xor
pop
scas
inc
add
js
push
fisttps
dec
pop
jge
movsl
pushf
mov
inc
es
adcl
push
adc
dec
in
ret
xchg
inc
add
andl
addb
xchg
les
mov
movb
pushf
push
int
mov
movb
mov
popa
in
test
add
aad
dec
addb
push
in
ja
xor
add
lds
movsl
xchg
scas
sub
inc
rcrl
pop
fs
loopne
inc
add
inc
mov
je
sub
icebp
ficoms
xchg
adc
psubsb
xor
lcall
fs
add
addb
mov
adcl
adc
in
jecxz
sub
jb
arpl
stos
add
xor
popa
inc
pop
mov
and
add
add
inc
cmp
xchg
cmp
pop
loopne
push
aas
cmpsb
dec
rcll
pop
mov
sub
ja
fwait
test
inc
mov
mov
or
fstpl
mov
pop
addb
into
inc
xor
adc
adc
lahf
dec
xchg
addr16
jecxz
mov
cmp
xchg
push
add
pop
or
pop
inc
test
add
xlat
test
mov
repz
xor
jp
leave
mov
movb
add
or
mov
test
stos
cwtl
push
popf
mov
jp
add
add
out
lock
pop
xchg
cmp
inc
add
jnp
add
push
jo
addb
rolb
add
or
sti
or
add
cmc
js
and
mov
add
jmp
cmpsb
frstor
sub
mov
mov
inc
add
dec
je
out
add
add
clc
bound
jge
dec
fistl
cmpsl
aam
and
xlat
fwait
das
out
fidivl
or
insb
inc
das
push
add
add
leave
cmp
pop
in
mov
insb
xchg
push
mov
lea
mov
add
add
pop
inc
fdivs
pusha
add
loop
push
add
repnz
adc
add
dec
sub
add
aas
sub
mov
jno
xchg
scas
leave
inc
add
les
dec
lods
push
cmp
cwtl
orl
add
inc
add
lcall
jecxz
sub
sbb
sbb
mov
xchg
idiv
mov
add
mov
into
stc
aas
invd
push
scas
or
inc
add
cmp
out
push
dec
lds
popl
rolb
jecxz
hlt
int
test
hlt
push
inc
or
or
mov
movsl
adc
add
xchg
pusha
add
push
frstor
fldcw
loopne
test
push
add
jge
and
xchg
jle
jb
pop
jmp
cmpsl
dec
inc
push
loopne
and
mov
push
adc
add
test
hlt
jno
add
add
out
mov
addr16
movb
mov
add
add
add
in
sbb
xchg
stc
daa
shlb
cmpsb
dec
mov
lods
out
cli
arpl
or
xchg
or
add
pusha
add
mov
nop
push
fs
pop
pop
push
mov
jg
xor
mov
add
mov
mov
push
pop
mov
rcl
push
add
push
ror
and
mov
mov
sub
mov
test
mov
aaa
repz
sub
icebp
jle
add
fildll
clc
adc
sti
clc
test
outsl
xor
iret
mov
daa
sarb
mov
insb
cmp
sahf
mov
xor
mov
sbb
mov
push
cmc
sti
and
add
push
jmp
mov
cwtl
ss
adc
and
es
add
add
in
pop
ja
bound
cmp
ds
push
into
addb
test
cs
adc
push
cli
movsb
mov
add
loop
lods
dec
test
add
dec
add
ret
push
sbb
mov
xor
mov
mov
insl
and
pop
test
je
add
xchg
addr16
add
add
movsb
out
test
and
add
pavgb
pusha
add
loope
mov
lret
in
addr16
movsl
aad
insl
fldenv
mov
add
inc
add
movb
add
inc
add
xchg
sub
sahf
pop
ret
fwait
clc
dec
nop
mov
shll
lods
push
ret
add
dec
sti
xchg
stos
int
movsb
loopne
jb
dec
scas
decb
frstor
outsb
fisubs
add
adc
mov
addr16
pop
addb
push
sub
jmp
push
cwtl
pop
fisttps
popf
nop
lahf
repnz
add
hlt
lret
sub
icebp
repz
in
inc
movsl
inc
push
cmp
add
aad
add
movb
out
mov
das
jp
add
cmc
mov
inc
add
jbe
mov
jle
add
mov
hlt
adc
out
mov
add
out
mov
stos
pop
mov
add
add
andl
cmpsb
add
jnp
into
cmp
sbb
inc
jmp
fisubl
add
cmp
int3
push
cmp
add
sub
ss
inc
add
xchg
inc
dec
xor
cmp
push
xor
bound
sub
mov
xchg
push
add
popf
movb
outsb
je
shrl
adc
add
push
mov
and
add
insl
jp
cmc
repnz
fs
adc
imul
popf
xchg
lods
push
jae
jns
xor
push
add
push
outsl
test
div
dec
mov
add
add
add
movsl
rcrb
lds
mov
iret
imul
xor
jp
xchg
or
xlat
mov
dec
or
inc
add
and
sbb
fnstcw
dec
cmp
sub
add
rolb
cmpsb
pushf
jne
add
call
mov
pop
and
mov
xchg
xchg
ljmp
sub
inc
add
jo
add
add
movsl
sbb
dec
fstpt
push
mov
add
sbb
dec
iret
ja
and
movsl
insb
dec
pop
dec
xchg
dec
rolb
std
sbb
sbb
test
sbb
cmp
sbb
add
stc
loop
add
fldt
pop
dec
rolb
or
jae
pop
xor
je
mov
or
aad
cmpsb
andl
mov
add
mov
mov
jecxz
aas
adc
fcoml
inc
dec
rcrb
lret
popf
lahf
pop
push
add
insl
out
stos
into
mov
dec
push
adc
repnz
jbe
movsl
gs
aas
lahf
cmp
pop
imul
test
pusha
add
push
xchg
lods
lea
mov
rorl
insl
movb
popf
adc
lds
inc
sub
xlat
test
adc
cmp
ljmp
movsb
or
repz
mull
add
add
arpl
aaa
sub
js
test
push
ja
add
popa
add
xchg
jecxz
je
add
das
xor
add
cmpsb
sbb
mov
aad
mov
call
cmp
dec
dec
jb
cmc
movsl
xor
mov
std
xchg
push
imul
lahf
jmp
inc
xchg
adc
lods
dec
cmp
sub
push
mov
stos
ficomps
inc
or
movsb
lret
dec
addb
fcmove
add
lds
xor
test
dec
push
mov
add
add
clc
movsb
mov
aad
icebp
idivb
mov
dec
ret
push
adcl
xor
add
adc
mov
jle,pt
cli
push
std
addr16
mov
icebp
in
insl
movb
outsl
add
pop
mov
add
test
add
mov
push
add
mulb
addr16
addr16
add
xor
jecxz
in
jmp
negl
popf
pop
adc
fdivrs
add
addb
ret
jmp
pop
pusha
add
cli
ja
add
mov
lock
out
pusha
add
add
inc
adc
mov
ja
adc
lcall
inc
add
and
push
repnz
jp
out
addb
inc
mov
fildll
scas
xor
jmp
xchg
xorl
dec
hlt
cmc
test
cli
mov
lods
clc
xchg
jns
add
xchg
jp
jno
rorl
dec
popf
loopne
jbe
push
push
mov
mov
push
or
imul
stos
fmull
sar
push
xchg
mull
negl
ds
outsl
xor
roll
xchg
out
sub
clc
daa
bound
into
add
cmp
cli
or
mov
xchg
outsb
push
inc
mov
dec
sub
sti
negl
inc
add
add
enter
negb
or
call
adc
add
lahf
lds
movsb
lahf
stc
push
je
aam
test
jecxz
repz
arpl
xor
jne
inc
enter
std
cs
hlt
mov
sub
add
jmp
add
add
inc
add
mov
fstps
daa
test
fldenv
lds
sbb
out
jb
ja
cmp
lds
pop
les
pop
xor
adc
mov
pop
shll
call
jmp
jle
adc
add
mov
add
scas
mov
sub
xchg
clc
js
iret
lock
push
jbe
mov
dec
xchg
fdiv
addb
bound
es
mov
and
cld
inc
add
mov
xlat
repz
add
xchg
sbb
cmc
test
push
test
je
cmp
pushf
mov
and
test
xchg
rcll
adc
mov
stos
sbb
jge
test
jecxz
arpl
sub
imul
popf
lcall
jle
push
notl
mov
push
xchg
call
sbb
jns
mov
add
sbb
movsb
adc
sub
test
lds
sub
jne
add
inc
add
push
in
adc
add
add
mov
sahf
out
test
cmpsl
sub
nop
mov
sub
push
sbb
int3
scas
nop
pop
push
into
test
dec
je
adc
sub
arpl
mov
push
add
mov
jge
imul
xchg
cli
fildl
fadds
add
repz
jns
inc
cli
and
test
mov
pop
daa
subl
jnp
add
stos
cmc
int3
push
fnsave
cmp
inc
add
out
lea
mov
adc
add
ljmp
call
xchg
int3
stc
mov
add
shrl
dec
mov
add
addb
dec
mov
xor
jb
mov
leave
push
cmpsl
and
cs
add
jno
lret
jns,pt
sti
xlat
and
add
mov
lods
in
jnp
test
icebp
ds
popa
xor
add
sub
and
dec
mov
cs
sub
in
pop
pop
mov
mov
addb
and
fdivrl
jbe
test
clc
mov
sbb
sbb
js
xor
push
sbb
add
out
push
and
add
shlb
add
cmp
and
inc
jp
add
divl
xchg
mov
movb
daa
cmp
imul
add
je
push
sbb
inc
add
xchg
mov
rolb
mov
mov
in
sbbl
test
loop
adc
movb
test
adc
out
lods
lahf
outsb
scas
sub
adc
add
test
mov
ljmp
data16
xchg
pop
sub
leave
cmpsl
scas
and
mov
xchg
cmp
cli
mov
aad
mov
adc
and
pop
jmp
add
daa
cs
sbb
xchg
stos
cs
xchg
stos
lds
lcall
sub
and
adc
add
addb
js
lret
in
mov
sbb
popa
pop
inc
add
rolb
xchg
fmulp
fsub
push
add
frstor
push
lret
inc
add
rcl
inc
inc
add
inc
or
fidivrl
xchg
sbbl
rcr
outsl
xchg
std
push
es
sbb
popf
xor
and
das
insb
jo
nop
iret
ljmp
jl
test
les
stos
mov
faddl
adcl
dec
cmp
loop
or
dec
movb
test
xchg
repz
dec
pop
mov
jbe
sub
inc
add
push
cmp
addb
imul
clc
cld
shlb
imul
ret
xchg
and
jo
in
cmp
lock
add
inc
add
jecxz
insl
or
inc
mov
mov
mov
pop
movsb
inc
add
lcall
rorb
push
push
pop
xor
jmp
mov
adc
mov
mov
mov
add
add
les
cmp
loop
mov
test
test
xchg
pop
push
mov
push
ficomps
push
and
add
xor
adc
mov
ret
sub
je
les
js
inc
mov
js
mov
xor
lret
xor
sarl
repnz
out
push
out
sbb
fs
int
scas
movl
add
add
aam
lcall
pusha
add
std
leave
movsl
mov
and
and
test
xchg
xor
inc
and
jb
add
out
xchg
xor
jecxz
pop
push
xor
pop
lods
jmp
dec
loopne
cmpsb
mov
add
stc
out
jecxz
cmc
jne
repz
mov
lahf
testb
cmc
test
or
jp
pop
mov
jo
add
outsl
std
fsubrl
gs
inc
add
and
lds
inc
push
add
cmpsl
pop
push
sbb
add
movsl
add
and
add
adc
add
in
ret
aaa
movsl
addb
lea
add
pop
or
dec
bound
xchg
mov
scas
fistps
mov
cli
xor
inc
add
lods
loope
insl
loopne
int3
hlt
movb
jne
push
add
and
push
sbb
mov
sahf
popa
sbb
adc
mov
add
xchg
jns
shrl
sti
lret
sbb
add
push
daa
mov
inc
add
add
jno
insl
add
dec
lea
stos
jmp
inc
add
stc
rcr
test
sub
in
jp
pop
flds
inc
add
mov
pop
push
ret
mov
repnz
dec
jb
dec
sbb
mov
xlat
mov
lcall
add
data16
mov
or
sub
add
dec
test
movsl
push
mov
mov
es
dec
sbb
fwait
sti
jo
add
pop
mov
imul
or
rolb
mov
and
rcrl
hlt
aam
repz
push
or
xor
loope
lods
xchg
add
jno
fistpll
in
mov
mov
and
push
inc
testl
lret
dec
int3
or
cmp
cmp
jmp
xchg
fwait
inc
and
push
cwtl
stc
enter
adc
add
mov
mov
jo
and
rolb
ja
fwait
shrd
mov
imul
xor
mov
daa
jnp
adc
jb
push
push
ret
cmp
inc
inc
add
je
mov
add
repnz
inc
cwtl
inc
outsb
jmp
pop
cld
imul
add
adc
add
add
adc
das
bound
dec
pop
imul
jge
fcomps
ss
ds
cli
and
jg
push
std
cmp
call
mov
roll
fisttpll
int
addl
sub
fadds
lret
test
add
ljmp
ret
ret
das
pop
fstpl
inc
add
inc
xor
mov
xor
or
sub
jnp
lods
mov
adc
test
mov
inc
add
mov
pop
pop
rcrb
xchg
push
cmp
fsubp
pushf
icebp
and
into
lods
pushf
and
mov
or
ret
mov
xor
cltd
es
pusha
add
jb
outsb
clc
fmuls
jbe
xchg
cwtl
loope
push
inc
add
hlt
test
sar
pushf
lret
mov
add
pushf
mov
movb
imul
cmpsb
rolb
add
add
in
inc
push
and
gs
adc
add
ja
aam
jb
test
popa
sub
cltd
fsub
and
scas
and
xchg
repz
mov
push
bound
imul
mov
mov
arpl
add
loopne
scas
mov
xor
and
aam
cmp
mov
inc
sub
movsl
mov
dec
mov
pop
sub
frndint
jne
addb
sub
aas
dec
dec
xor
xchg
inc
add
es
lcall
popa
mov
out
sub
sub
scas
jb
mov
stc
test
fcomps
cltd
push
cld
out
dec
or
push
lds
pop
bound
addr16
push
imul
add
scas
cmc
imul
lods
inc
jmp
ljmp
adc
xorl
mov
jge
mulb
add
mov
adc
mov
dec
movsb
xor
pop
jno
inc
push
sbb
sub
scas
addb
xor
add
jge
sarb
clc
mov
pop
outsl
ror
jb
or
aas
pop
iret
jbe
fcomps
xor
es
mov
add
jnp
xchg
jno
outsb
js
xor
add
fdivr
push
or
addb
jp
push
imul
mov
inc
add
shl
add
cwtl
imul
movsb
test
add
cmp
push
pop
dec
cmpsl
mov
nop
es
sbb
ret
mov
aam
leave
rcll
xor
out
test
xor
add
lret
mov
nop
popl
movsb
loope
es
scas
fnstsw
pop
lret
les
push
mov
push
lcall
add
push
lea
push
in
dec
sub
popf
cmp
push
repz
fisttps
inc
ja
add
addb
cld
and
repnz
xor
in
or
jne
xchg
xor
add
dec
pop
jae
rolb
xchg
call
leave
repz
aas
jl
shlb
test
jne
ficomps
xor
adc
gs
lcall
xchg
ljmp
loopne
cli
rol
roll
repz
mov
pop
xchg
xchg
xchg
je
sbb
cmc
jb
mov
std
ljmp
push
aam
push
add
add
cmc
or
push
add
pop
push
pop
mov
xor
mov
arpl
push
mov
jl
cli
fwait
sub
cmp
push
xlat
sub
es
adc
xchg
std
or
xor
push
cmp
jae
stc
js
xchg
push
movsb
inc
add
add
add
mov
pop
xor
outsb
push
mov
sbb
push
popf
movb
insb
cmp
test
nop
in
sub
and
lea
add
stc
loop
fisttpll
iret
roll
mov
inc
lahf
dec
mov
add
dec
cmp
fldpi
jmp
sbb
dec
test
jns
outsb
xchg
push
add
sub
sbb
and
xchg
sbb
adc
jns
std
and
aas
mov
outsl
cmp
lock
mov
add
xchg
xlat
or
aam
inc
cmp
pop
loope
or
mov
mov
repz
int
filds
pop
into
jb
add
inc
clc
sarl
leave
dec
movb
test
mov
adc
jl
mov
leave
xchg
xchg
jae
add
bound
loopne
push
inc
add
aad
push
inc
movsl
popf
push
loop
add
xchg
rolb
sub
mov
rolb
lds
repz
lret
fisttpl
adc
test
aaa
xchg
mov
in
je
jns
vpmaxub
pop
pop
fxtract
mov
add
cli
jb
fistps
inc
add
je
loop
jne
mov
push
sbb
das
mov
movb
pop
mov
push
jae
shlb
arpl
popf
sti
add
mov
xchg
xor
push
add
gs
push
addl
mov
cld
fcomi
sbb
out
push
je
and
jnp
cwtl
mov
std
mov
stos
clc
loopne
hlt
adc
fidivs
cld
xchg
fsubrl
and
xor
popa
add
xchg
ja
xor
and
xchg
lods
push
add
mov
jne
push
js
punpcklwd
cmpsl
or
add
in
imulb
push
ljmp
pop
lret
xchg
popf
adc
xchg
pushf
jl
enter
jmp
sub
fnsave
and
loope
mov
daa
push
repz
cmp
cmp
inc
add
cmp
popf
jmp
pop
sbb
or
mov
roll
cltd
push
loope
and
jmp
fsts
jb
mov
cmc
es
test
insl
ja
xchg
and
push
popa
fidivrl
aaa
mov
movb
pop
jmp
lret
sarb
outsb
pop
push
xor
xchg
sub
clc
or
sub
ret
in
add
mov
sub
enter
jg
add
adcl
incl
clc
movsb
or
jae
insb
push
pop
push
xor
je
add
test
pop
push
cmp
std
sbb
add
test
les
outsl
cmpsb
pop
sbb
dec
pop
rcll
add
and
lret
addr16
jl
lret
call
rolb
add
sbb
push
mov
xchg
sahf
pop
mov
mov
movb
mov
cmp
inc
cmp
xchg
and
pop
test
outsl
mov
xchg
pusha
add
aas
dec
bound
xchg
and
adc
shl
jo
aaa
lcall
mov
inc
add
data16
movb
xchg
sti
repnz
add
fnsave
xchg
call
outsl
outsb
pushf
pop
jmp
pushf
mov
dec
fildl
inc
add
push
ret
mov
inc
jns
cmpsb
lock
daa
loop
addb
rcrl
testl
outsb
test
dec
les
neg
loope
movb
out
inc
repz
mov
add
mov
sbb
mov
mov
mov
add
and
dec
adc
push
imul
sub
fadds
xchg
cs
dec
mov
mov
ret
cwtl
push
rorl
mov
popf
add
test
incb
data16
daa
jge
dec
int3
out
bswap
sti
loopne
popa
pop
jmp
int3
loopne
jecxz
add
cmp
mov
adc
test
add
add
fcompl
loopne
jb
add
pop
shlb
adc
cmp
imul
mov
xor
lods
gs
pop
xchg
sub
jbe
mov
cmp
add
or
mov
inc
add
fsubl
add
je
jp
push
xchg
sbb
mov
cmpsl
cmovo
xor
outsb
stc
and
lods
cmp
test
add
push
add
scas
and
inc
add
or
adc
add
lock
push
fs
sub
dec
dec
loop
call
jg
idivb
dec
sbb
push
push
add
xchg
cld
ret
fpatan
addb
fbstp
dec
icebp
mov
scas
aaa
imul
scas
jnp
outsl
cmp
and
jnp
hlt
je
daa
sub
add
push
stc
jl
test
xor
lods
test
test
jg
dec
inc
add
mov
mov
add
xor
adc
negb
imul
mov
in
push
out
sub
jge
dec
mov
jae
pop
outsl
add
loopne
cmpsb
fiadds
pop
xchg
into
stc
scas
pusha
add
add
pop
mov
sbb
int3
in
xor
je
xchg
movsl
inc
jae
daa
or
fbld
daa
leave
add
mov
jno
and
jmp
or
shrb
push
clc
inc
add
outsl
loop
pop
addb
repz
mov
daa
popl
cmp
pop
mov
cmp
push
stos
int
or
dec
push
nop
xchg
nop
mov
repnz
xchg
pop
es
push
mov
add
shll
rcr
sbb
icebp
addb
push
inc
xchg
lds
sbbl
pusha
add
and
jmp
ljmp
push
sbb
movb
push
ljmp
add
insb
aaa
cltd
shll
xchg
imul
data16
bound
int
add
cmp
lret
push
add
mov
lods
jmp
in
ss
push
es
icebp
jo,pt
int3
and
test
add
in
pop
push
aaa
ret
sahf
out
push
xor
clc
inc
mov
push
rolb
sahf
popl
jmp
jl
lods
mov
flds
add
push
push
add
insl
or
mov
in
jge
xchg
testb
mov
cmp
pop
sbb
xchg
popa
xchg
pop
jle
add
ljmp
adc
xchg
inc
clc
sbb
adc
xchg
int3
sub
push
or
push
dec
jbe
add
inc
cmp
add
adc
jmp
leave
dec
cmp
popf
pusha
add
xor
out
sahf
je
andl
push
mov
insl
cmp
add
fs
jbe
or
fucomi
imul
push
addb
add
js
mov
add
test
cmpsl
insb
out
and
mov
dec
hlt
mov
xchg
and
or
mov
inc
add
sti
inc
test
das
fists
mov
add
add
xor
rolb
add
mov
enter
fisubs
push
movl
mov
add
dec
inc
cli
mov
in
xchg
jns
ljmp
mov
sbb
repnz
mov
xchg
cmp
dec
dec
push
or
push
out
mov
decl
roll
add
call
xchg
xchg
cmp
std
fstps
pop
lock
xchg
mov
jp
xor
jmp
push
add
dec
idivb
rorl
repnz
jo
scas
xchg
test
add
roll
mov
cs
add
push
add
cmp
ds
clc
rclb
repz
sti
add
jg
gs
push
or
pop
push
negl
loop
add
push
das
xchg
ja
push
mov
cmp
std
mov
lods
loope
push
ret
adc
sub
add
xorl
mov
mov
mov
add
xor
jbe
add
rcr
into
movb
mov
repz
xor
add
stos
add
push
addb
lock
and
adc
cs
loope,pt
into
jmp
sahf
cmp
mov
outsl
mov
and
add
mov
pop
fsin
xchg
movb
pop
fnstenv
mov
cs
mov
jno
in
push
pop
pushf
jl
addr16
cmp
cmp
fs
mov
mov
cmc
mov
xchg
test
xchg
ret
push
sbb
mov
add
lds
fstpt
rolb
sbb
cmp
test
fdivrs
mov
mov
out
fstpt
loopne
sbb
jg
aas
clc
push
lahf
jle
aas
rcll
stos
dec
ficompl
mov
adc
and
pop
aam
dec
imul
dec
imull
jne
add
add
mov
sbb
push
in
mov
icebp
in
daa
jmp
xchg
or
mov
shrl
mov
add
mov
lods
rolb
inc
add
scas
addb
out
push
add
clc
repnz
mov
ja
or
das
adc
shl
je
lea
push
jae
iret
mov
mov
aad
add
sbb
jno
lods
sub
leave
sub
es
inc
sub
cmp
add
inc
push
add
inc
add
imull
sbb
std
jecxz
add
add
add
mov
add
jp
jmp
sbb
add
aaa
or
stos
mov
lock
add
sub
lahf
subl
dec
xorl
add
sub
into
std
inc
add
gs
push
into
adc
xor
add
repnz
add
stc
adc
scas
xchg
jne
inc
rolb
pop
cld
push
inc
add
jnp
add
out
mov
jl,pn
loop
and
out
out
pop
push
jmp
popa
aaa
xor
imul
in
leave
and
insl
testl
cld
mov
shlb
mov
leave
and
dec
jmp
js
test
test
lcall
or
jecxz
cltd
hlt
lods
or
jmp
sbb
addb
sub
hlt
aas
loop
xchg
filds
xchg
and
cmp
pushf
addb
inc
js
mov
add
nop
iret
ret
jne
mov
mov
jp
jns
mov
and
lds
mov
mov
xchg
cli
bswap
jb
shlb
mov
sub
and
adc
add
cld
pusha
add
lods
addb
inc
aam
cld
dec
xor
inc
add
mov
xchg
mov
and
out
pop
or
movsb
dec
and
cmp
fsubrl
fdivl
outsl
push
jns
pop
lcall
jo
inc
add
dec
jge
ja
lds
adc
push
adc
stos
incl
stos
dec
xor
jb
ss
daa
jno
es
adc
nop
pop
mov
push
pop
mov
call
call
inc
add
jg
sub
out
rorl
sahf
cmp
push
xchg
inc
add
mov
add
jp
jnp
xchg
cmpsb
inc
add
add
xchg
fidivl
fstpt
cs
aaa
sbb
outsl
jge
lret
stos
fwait
push
mov
cmp
inc
xor
and
in
or
inc
dec
sub
pushf
xor
dec
cld
cmpsb
ds
mov
outsb
out
ret
lock
add
mov
js
pop
dec
xchg
sbb
inc
test
sahf
stc
test
jmp
xchg
loopne
add
aaa
add
jo
pop
xchg
and
fidivrs
sbb
add
xchg
push
sbb
add
pop
loopne
sub
fiaddl
push
addb
push
xchg
data16
in
repz
mov
insb
in
aad
enterw
insl
outsl
cltd
mov
sbb
aaa
cs
xlat
in
add
inc
movb
add
and
xchg
inc
dec
sbb
fcomip
pusha
add
in
and
mov
jne,pn
mov
outsl
jmp
mull
int3
iret
push
jmp
add
mov
xor
out
fildl
test
inc
xchg
imul
ret
stos
stos
leave
mov
jae
mov
xchg
and
push
popa
xchg
sbb
adc
pop
xchg
add
sbb
lret
mov
push
sub
test
hlt
out
in
adc
mov
pushf
xchg
lret
sbb
pop
mov
outsb
scas
mov
cmp
xchg
push
fs
push
scas
add
sbb
push
cmp
adc
mov
out
mov
mov
mov
test
in
mov
add
enter
push
sub
rolb
loopne
add
dec
ret
je
aaa
movsb
cmpl
add
call
lock
into
out
push
mov
sub
mov
mov
aad
imul
add
and
shll
lods
andl
lds
add
inc
ja
aam
sub
es
push
push
jp
cmp
inc
mov
das
fistps
or
fwait
adc
lcall
xor
cs
scas
cmp
out
adc
jb
xchg
xchg
mov
push
mov
pop
cmc
mov
adcl
sbb
add
dec
bound
adc
add
imulb
or
sbb
arpl
add
icebp
mov
mov
imul
inc
mov
cmp
test
add
mov
add
or
add
std
loop
adc
xor
xchg
fnstsw
shll
iret
or
nop
or
add
cmpsb
lret
out
sub
xor
mov
fs
pop
insb
adc
jns
pop
pusha
add
out
fstps
popf
insl
mov
ficoml
pop
outsl
mov
inc
add
pop
add
mov
cltd
imull
loopne
stc
cmpsb
in
add
cld
ljmp
pusha
add
insb
push
and
std
mov
iret
test
fs
je
iret
xor
jae
les
lock
fisttps
ficoms
adc
xchg
jae
add
loope
pop
popf
dec
push
cmp
xchg
mov
jae
cli
pop
cmp
ds
test
mov
xor
sub
mov
mov
jb
jp
xchg
sti
pushf
lret
je
inc
add
jnp
shl
jl
pop
mov
xchg
mov
fsts
add
inc
add
pop
loop
add
loop
dec
popa
inc
add
add
js
add
iret
mov
add
mov
notl
add
stc
stos
or
add
sti
xchg
repz
push
add
faddl
jo
jns
nop
pushf
push
add
daa
sub
and
mov
add
mov
ljmp
scas
lahf
mov
xchg
test
or
pop
insl
cmp
push
mov
xchg
pusha
add
jnp
push
popa
xchg
mov
in
nop
aas
jp
push
xchg
lahf
jmp
add
shll
je
pop
push
pop
mov
add
mov
push
xchg
bound
sti
outsb
or
lahf
mov
lds
pop
das
jmp
negl
jno
add
mov
xchg
push
push
mov
jb
inc
add
cmpsb
les
test
ret
xchg
dec
pusha
add
filds
dec
mov
sbb
cltd
push
dec
cmp
and
ja
push
push
dec
fdivl
or
pop
mov
fsubs
add
in
je
push
movsb
mov
test
mov
dec
ljmp
outsl
std
mov
mov
xor
sbb
push
jp
jo
lods
pop
xor
jnp
out
fsts
rcr
data16
sbb
jno
mov
and
sti
xor
add
xlat
xor
mov
movb
inc
mov
negb
popa
push
and
sti
sub
add
inc
cld
and
push
mov
arpl
adc
enter
imul
mov
jo
loop
dec
popa
cwtl
sbb
add
adc
mov
dec
out
ljmp
add
inc
cltd
sarb
mov
adc
and
daa
jl
aam
stos
adc
fstl
mov
mov
call
add
cwtl
pop
fs
pop
mov
loopne
lahf
and
insl
adc
addl
daa
insb
dec
dec
repz
scas
cmc
sub
sub
mov
jecxz
insl
push
cmpsb
mov
sbb
and
in
mov
mov
mov
test
xchg
faddl
and
inc
add
add
and
cmp
dec
mov
inc
and
out
repz
and
mov
mov
movsb
dec
ret
cli
lcall
lahf
test
js
xor
xchg
mov
and
pop
jne
pop
jg
arpl
scas
jbe
jnp
fadd
add
xchg
movsb
mov
xlat
jo
pusha
add
inc
add
push
add
loopne
aam
adc
xchg
cs
and
lds
icebp
test
lea
imul
add
fcomp
pop
xchg
mov
das
scas
mov
out
scas
repnz
add
add
xor
inc
add
cmp
add
mov
mov
cmp
xor
jp
mov
sbb
les
add
cltd
add
mov
or
xor
lods
xor
mov
mov
sub
push
mov
or
add
cmpsl
rcll
add
sub
cs
in
push
cmp
or
sub
jae
pxor
movsl
outsb
sub
sti
cmp
ds
leave
inc
add
sub
cld
daa
or
xchg
xor
sub
add
lods
mov
ret
add
js
into
mov
in
cmpsl
sub
or
add
in
xor
aam
add
add
mov
neg
fstl
mov
repz
mov
ljmp
mov
add
add
clc
in
mov
add
push
aas
iret
pop
rcr
gs
scas
imul
add
jle
addb
lods
lea
lock
mov
xchg
mov
push
stos
mov
lcall
and
adc
das
int
addb
sub
in
bound
test
dec
cmp
fcmovnb
dec
sub
fidivrl
pop
shl
dec
in
push
jae
add
pop
pop
clc
out
add
adc
and
scas
mov
data16
scas
ficomps
and
cmc
addb
sub
andl
pop
lods
and
lods
stc
add
add
movl
addb
inc
jg
xor
jle
sbb
add
dec
sub
in
push
or
dec
shlb
lods
cmc
aas
ljmp
jge
les
sbb
sub
mov
adc
pushf
push
xor
out
add
add
add
push
in
sarl
xchg
jge
adc
cmp
mov
add
mov
push
adc
adc
mov
and
mov
add
lret
addb
jge
call
push
xorl
mov
jns
lea
push
cmp
test
mov
or
shr
mov
ret
sub
jo
add
push
cwtl
pop
push
mov
fwait
or
sbb
loopne
inc
mov
lock
sahf
out
movsl
pop
pop
inc
add
loope
popl
cmp
add
add
pop
lods
cltd
mov
cmp
jbe
xchg
outsl
ljmp
aam
js
mov
ja
fwait
adc
call
movsb
movb
sbb
repnz
or
mov
add
test
mov
adc
scas
pop
mov
push
mov
add
out
xchg
inc
add
push
in
popa
lcall
add
loopne
fisubl
xchg
lods
into
mov
push
fbstp
cli
aas
test
xor
mov
add
and
shll
jl
add
mov
xchg
adc
ja
or
mov
fcoms
mov
cmpsb
rorl
add
push
imul
imull
in
mov
adcl
outsl
sbb
in
sarl
cld
stos
cmp
cmp
in
lret
add
ds
fs
fwait
mov
into
inc
add
jl
pop
cmpsb
add
lret
aas
movsb
mov
or
inc
jg
mov
cmp
adcl
pop
not
add
xchg
insb
sbb
add
lret
loope
cmp
xchg
les
nop
mov
jb
stos
mov
hlt
in
sbb
fisttpll
test
and
in
sbb
hlt
jbe
popa
jge
mov
imul
icebp
mov
inc
add
add
sub
dec
bound
lahf
je
jae
push
popa
pusha
add
mov
jg
test
ret
mov
jno
outsb
ja
inc
and
adc
xchg
imul
mov
push
or
jne
mov
ror
out
loope
push
push
jg
rol
push
xchg
xor
testl
aam
in
lods
cmp
lcall
pop
push
dec
add
test
sub
rolb
maskmovq
testl
push
add
mov
sub
arpl
ds
mov
jno
push
sbb
scas
dec
lret
outsb
mov
pop
cmc
mov
fst
xchg
sub
and
insl
hlt
cmp
add
push
addb
test
mov
rclb
int
mov
xchg
cmp
jbe,pt
addb
push
out
daa
sahf
loopne
sbb
jae
pushf
inc
add
xchg
in
lahf
lock
pop
adc
movb
or
dec
jecxz
and
sub
xchg
pop
mov
add
and
mov
push
xlat
pop
xlat
clc
std
imul
mov
push
adc
mov
pop
push
or
test
add
or
push
cmp
cmp
cld
enter
cmp
ret
jmp
mov
enter
dec
dec
in
addr16
arpl
lret
sub
pushf
fidivrl
push
xor
mov
xchg
add
mov
fcom
xchg
and
pop
push
arpl
orl
add
je
rolb
adc
add
add
push
add
stc
call
add
xor
lret
and
insl
test
sub
out
inc
pop
xchg
pusha
add
cmp
jl
cli
mov
add
mov
xchg
vxorpd
es
addb
sub
sti
cs
jecxz
jo
add
mov
mov
jl
test
push
dec
lahf
cmc
movb
xchg
push
push
push
cs
scas
shll
add
pop
out
movsb
rolb
adc
push
dec
jnp
daa
cmpsl
call
fisttpll
and
insl
sbb
repnz
shr
lea
lcall
mov
lret
mov
and
and
jl
out
pop
stos
cli
cmpsb
hlt
dec
inc
add
fmull
mov
pop
shll
add
cmpsl
lcall
dec
addb
dec
bound
mov
mov
je
ss
bound
int
mov
push
add
incb
rolb
cli
jo
pop
jne
mov
jecxz
pop
out
gs
jo
and
add
pop
mov
xor
iret
pusha
add
push
add
ss
fadds
add
dec
xchg
paddusb
fucomp
adc
inc
add
les
and
lahf
mov
jecxz
jle
mov
or
dec
std
data16
aam
rolb
in
loope
inc
mov
cmc
in
mov
repnz
xchg
mov
shlb
pop
mov
and
mov
xor
pop
cmp
jo
add
movsl
cmp
sarb
ljmp
mov
cmp
int3
inc
outsl
enter
sahf
lea
data16
mov
add
add
xchg
test
addb
loop
add
push
mov
lahf
adc
in
sub
pop
push
mov
add
cmp
fiaddl
add
mov
adc
or
mulb
add
ljmp
add
add
shlb
stc
fwait
ret
cli
and
mov
jg
in
out
cmp
add
movsl
lret
nop
jnp
out
mov
mov
push
add
xor
aas
cmpsb
mov
popa
ja
in
adc
cmpsb
sbb
in
mov
jle
mov
mov
addr16
rolb
inc
inc
mov
enter
mov
lock
jo
inc
add
add
les
jno
or
outsl
jecxz
add
sub
das
cmc
sub
cltd
lcall
and
jbe
mov
add
mov
jb
lea
xchg
addb
fcmovnu
mov
push
add
sbb
or
mov
je
add
cmp
int3
inc
scas
sbb
lret
and
in
mov
jp
xchg
or
add
or
add
add
cmc
or
add
jle
and
clc
xchg
cmc
dec
adc
cmp
adc
cmp
call
lock
push
xor
cmp
dec
pop
jp
jge
fsubs
add
rolb
rolb
sbb
cmp
cli
rolb
out
ret
sahf
push
aad
xor
and
pop
push
outsb
xor
add
xchg
jb
mov
hlt
mov
inc
add
or
mov
xchg
jne
or
jb
les
ret
ja
addb
je
add
and
js
aaa
cli
nop
dec
add
outsl
pop
jo
lahf
outsb
mov
add
add
add
inc
add
push
add
add
cmpsb
pusha
add
cld
das
out
xor
xor
mov
cwtl
scas
enter
aam
int
stc
imul
xchg
dec
popf
call
gs
lcall
lret
lods
push
pushf
je
dec
jecxz
insb
addb
dec
jecxz
mov
or
addr16
mov
cwtl
in
dec
cmp
loop
in
movl
sbbl
jae
mov
inc
lods
inc
mov
lcall
cmp
cs
les
lods
add
xor
aaa
mov
cs
jns
mov
add
push
push
stos
int3
xor
sbb
dec
pusha
add
data16
daa
test
sub
add
pop
mov
push
mov
dec
adc
test
sti
xchg
xchg
inc
aad
jns
pop
ret
nop
fwait
mov
mov
stos
add
push
imul
push
mov
in
mov
cmp
dec
mov
mov
cmp
mov
fs
cmp
pop
dec
xchg
lods
addb
test
pop
arpl
fdivs
sahf
lret
push
cmp
dec
daa
xchg
sarb
pop
jno
sbb
jle
movsb
popa
das
mov
out
or
adc
add
push
and
test
or
or
mov
xchg
add
mov
dec
and
add
jne
or
lds
rolb
loope
jo
xor
fsubrs
xchg
rolb
sub
add
cmp
jns
aas
pop
ss
and
jmp
lea
jg
bswap
es
adc
push
cmpsb
fildl
add
sbb
daa
aas
clc
inc
add
aas
add
idivl
aaa
daa
dec
inc
add
loop
mov
inc
add
cltd
inc
add
inc
scas
xchg
addr16
inc
add
or
test
out
mov
scas
mov
xlat
fbstp
jbe
sahf
xlat
dec
fsubl
adc
jg
movsb
leave
les
stos
gs
es
lock
mov
adc
sbb
push
mov
test
mov
add
xorl
repnz
inc
add
sub
and
inc
mov
mov
dec
lahf
fcmovnbe
dec
mov
in
jne
lock
adc
add
loop
and
xor
sub
stos
mov
xchg
xchg
cmp
cli
jmp
inc
mov
sub
adc
inc
add
pop
mov
sub
sbb
mov
imull
mov
xor
adc
enter
and
push
sub
jl
cmpsb
sub
std
sarl
add
mov
adc
pop
aaa
int3
daa
add
jno
pop
fnsave
add
jmp
xchg
xchg
xchg
outsb
stos
mov
out
pop
outsb
addr16
in
ss
imul
iret
imul
add
in
iret
and
addb
inc
add
test
sbb
add
mov
and
or
add
outsb
addr16
xchg
dec
movsl
and
pop
outsl
mov
and
clc
mov
iret
mov
and
add
add
add
aas
push
pop
pop
lahf
lods
and
repnz
push
aas
fdivrs
lods
fwait
es
int
lcall
mov
xchg
bound
rolb
jmp
inc
push
add
jl
add
pusha
add
imul
into
cmp
test
dec
sbb
out
dec
addb
adc
push
push
push
das
ja
xchg
mov
sbb
leave
mov
popa
imul
sbb
out
rclb
inc
mov
pop
mov
fcompl
icebp
jmp
movsb
ret
dec
mov
add
in
mov
xchg
jge
ljmp
jbe
add
add
rcrl
cmpsl
movb
adc
enter
jbe
cmpsb
mov
adc
push
bswap
sub
pop
inc
mov
dec
inc
add
pop
bnd
out
push
sahf
ret
hlt
xchg
xor
push
adc
pushl
addb
stc
mov
cld
jmp
add
or
int3
mov
test
scas
push
dec
in
add
cmp
add
mov
mov
arpl
xchg
rcr
mov
or
jo
jbe
ljmp
jmp
mov
iret
shrl
repz
out
out
inc
add
mov
push
add
les
mov
add
inc
in
jp
push
repnz
adc
adc
addr16
adc
ret
out
cmp
push
arpl
and
mov
out
dec
les
test
movsb
sbb
cli
xchg
arpl
pop
test
mov
cwtl
jle
dec
xchg
or
sub
lods
sub
add
pop
lcall
aas
ret
sarl
pop
insl
je
cmpsl
xchg
jne
jb
mov
add
cld
jmp
subl
into
lods
ja
mov
int
ret
sbb
jl
lea
cmp
jp
jnp
out
jecxz
pop
mov
aam
aam
inc
add
in
test
cmp
icebp
negl
xor
ja
cltd
and
add
xchg
adc
xor
sbb
cmp
xchg
xchg
fs
push
aam
test
xchg
jns
ss
arpl
mov
add
add
add
insb
mov
mov
sub
pop
neg
dec
add
jo
cmp
lods
je
out
test
je
xchg
in
lods
mov
imul
pop
push
in
cmp
add
popa
mov
inc
test
mov
and
int
movb
dec
or
sub
scas
shl
enter
mov
loope
or
clc
out
inc
nopl
mov
repz
sub
rolb
jl
fcmovnbe
push
jnp
jecxz
idivl
insl
mov
add
and
imul
clc
add
ret
cmp
pop
and
std
adc
mov
sub
and
dec
jne
daa
adc
push
fwait
inc
add
push
test
repz
push
enter
jo
add
mov
or
out
or
pop
pop
stc
cmp
sarl
add
or
mov
sub
adc
rol
mov
add
xchg
ljmp
adc
jo
into
jle
sysret
pushf
adc
push
add
shl
push
push
not
fwait
ret
add
lahf
neg
inc
cli
mov
inc
add
sub
pusha
add
xchg
addb
add
data16
or
int3
push
popa
jge
xor
inc
add
fstl
loop
in
mov
dec
cmp
out
cli
arpl
outsb
or
mov
adc
inc
mov
pop
call
je
sbb
popa
sub
pop
into
pop
sub
xor
in
sub
dec
idivl
adc
ret
cwtl
inc
add
in
iret
sbb
stos
popf
jne
idiv
sub
jle
xor
mov
stos
add
sub
xor
mov
into
addb
mov
scas
pop
mov
add
adc
movsl
push
mov
push
cmp
adc
pop
mov
push
movb
dec
or
mov
sahf
xor
push
sahf
fwait
mov
repz
mov
push
pop
inc
add
ljmp
push
and
pop
xchg
push
or
aas
out
sub
cld
inc
add
mov
add
push
bound
pop
in
lock
out
test
push
cmovl
xchg
xor
leave
mov
or
and
cmpsb
data16
std
ret
mov
push
ds
and
sub
add
pop
mov
insb
pushf
mov
adc
xchg
rcll
loopne
fildl
cmp
ficomps
rcrb
add
jne
inc
mov
jge
xchg
popf
enter
xor
push
push
mov
add
mov
ret
pop
inc
adc
sub
dec
arpl
mov
pop
mov
jmp
push
cmp
inc
leave
mov
push
sbb
mov
mov
in
dec
jno
add
xchg
lds
outsb
dec
cmpl
jns
aas
jb
les
cld
aam
cli
addb
inc
add
cmp
cmp
cmp
sub
xchg
roll
jmp
add
popa
mov
insl
test
add
jmp
add
mov
add
imul
addb
add
add
dec
mov
dec
fwait
jae
mov
xor
loopne
jns
lods
or
cmc
push
lea
out
push
adc
aaa
mov
addb
and
jne
dec
xchg
xchg
sbb
iret
lock
inc
fistps
jecxz
or
pop
call
stos
xchg
sub
mov
scas
fdiv
mov
and
ss
ljmp
xchg
insb
sbb
adc
movsb
jl
add
pushf
xor
int
into
push
add
xchg
sbb
lods
test
add
int3
and
ss
mov
jbe
add
fnsaves
add
add
fsubs
loop
int3
mov
jp
add
pop
out
jg
fisubl
inc
add
lcall
imull
add
repnz
ja
jnp
mov
add
mov
fwait
imul
push
sub
mov
lea
add
cmp
insl
jle
dec
arpl
lcall
into
movsl
jns
fwait
nop
mov
mov
push
add
pop
test
jne
sbb
add
adc
sbb
pushf
popa
fs
cmp
sub
pushf
jg
lcall
mov
lahf
jnp
jle
sti
popf
pop
jecxz
addr16
cmp
js
mov
incl
push
dec
ret
sub
mov
cmpsl
das
js
ds
fdivs
sub
push
ja
das
push
int
fidivrl
sub
fld
add
and
sub
add
rolb
cmp
or
jge
jl
xchg
xor
int
pushf
cmp
adc
in
pop
test
dec
loop
jp
xchg
sub
push
xchg
cmp
mov
bound
out
dec
mov
in
lret
out
les
rorb
jbe
pop
ljmp
xor
xchg
aam
xchg
roll
rorb
out
add
add
shll
bound
mov
insb
sub
fmul
test
shl
xchg
into
enter
dec
fwait
out
xor
movl
shlb
data16
pop
mov
rolb
pop
jo
imul
inc
mov
or
cwtl
mov
movb
mov
add
js
pop
and
push
pop
pop
daa
movb
or
xchg
daa
scas
or
dec
test
dec
xchg
adc
out
pusha
add
frstor
mov
dec
xchg
out
inc
mov
xchg
cltd
push
call
add
pop
and
sub
add
lds
stc
add
shlb
sbb
xchg
push
out
mov
jmp
roll
cmc
push
aam
pushl
imul
mov
jmp
les
daa
mov
addb
add
mov
mov
mov
outsb
mov
imul
ja
xchg
loope
sbb
loopne
push
lret
subl
jne
out
outsl
add
sub
in
fcomip
jl,pn
lock
adc
push
out
cmpl
push
movb
dec
rolb
jl
lret
and
out
mov
inc
mov
mov
pop
dec
stc
add
add
mov
jbe
sti
addb
mov
add
sub
out
shlb
and
xor
jp
add
and
sub
inc
add
inc
add
jns
mov
xor
add
sub
jae
lret
daa
mov
push
outsb
scas
cmp
mov
and
add
mov
ss
cli
lahf
xchg
mov
out
jbe
popf
aad
push
mov
sarl
cmp
leave
cmpsb
mov
std
mov
xlat
jg
jmp
lods
stos
mov
repz
sbb
shr
cli
cld
dec
loope
mov
add
out
pop
mov
sbb
jg
xor
push
jns
sub
add
popa
arpl
daa
scas
mov
cmc
push
int
push
lods
mov
jmp
and
mulb
or
fistl
sbb
sub
pop
sub
sbb
add
js
xor
xor
inc
insb
std
cmpsb
mov
sub
dec
mov
lock
add
aam
aas
fiaddl
xchg
xor
daa
jbe
mov
ljmp
in
fwait
popa
inc
add
pushf
push
dec
mov
sahf
add
hlt
loop
mov
add
inc
add
pop
addb
pushf
repnz
push
or
enter
cmpsb
add
inc
xor
add
sub
fiaddl
xchg
aam
cli
mov
movb
jecxz
test
sbb
pop
lret
stc
xchg
stos
mov
cmp
add
cmpsb
mov
mov
sbb
aad
adc
xor
lock
or
jnp
sahf
pop
jo
icebp
jns
sbb
in
into
push
stc
int3
nop
inc
add
ret
lret
mov
dec
popf
dec
dec
rcr
jns
adc
push
or
lods
or
mov
mov
sbb
xlat
mov
adc
icebp
es
push
shlb
add
add
add
mov
adc
pop
lret
pusha
add
pop
sbb
cmpsb
and
je
sarl
jle
push
stc
inc
insb
in
adc
mov
and
je
inc
add
add
ret
and
add
adc
adc
dec
or
lods
mov
je
add
pusha
add
and
loope
inc
add
push
add
in
out
jp
push
mov
repnz
mov
test
pop
mov
add
sub
pop
fbstp
rol
dec
dec
mov
pop
jne
clc
rcll
sub
or
mov
cmp
inc
add
cmp
pop
mov
sub
add
cld
jns
add
add
and
jp
mov
jg
push
cmpsb
pop
loope
mov
add
add
pop
int
jo
mov
xchg
movsl
xchg
sbb
dec
cmpl
nop
and
addb
push
sbb
sub
pop
xor
les
sub
popa
arpl
nop
xchg
mov
xchg
xlat
mov
pop
scas
add
adc
push
sbb
call
out
pusha
add
push
jne
add
rolb
aam
mov
mov
or
inc
pushf
jecxz
ret
je
push
pop
push
mov
add
ret
xchg
mov
pop
inc
add
push
hlt
scas
add
push
jns
add
xlat
add
int
adc
in
or
xchg
fiadds
dec
and
xor
pop
adcl
mov
stos
aas
xor
add
adc
div
fimuls
add
xor
sbb
inc
add
push
lret
mov
pop
mov
sub
and
jmp
pop
jbe
fmull
fildll
push
in
add
cli
mov
psubusb
and
fwait
imul
xor
add
test
sub
xor
xchg
lea
add
or
inc
add
push
pop
sti
mov
mov
outsb
sub
xchg
jle
movb
scas
imul
add
aas
aam
fwait
mov
pop
in
cmp
es
fnstsw
push
cmp
gs
cli
jg
jmp
dec
jp
into
in
xor
xor
mov
rcrl
add
mov
mov
mov
mov
dec
add
sbb
adc
into
dec
push
adc
arpl
test
ret
cmp
rorb
sar
mov
jb
lret
ss
mov
mov
sub
lret
in
adc
or
lock
scas
jb
rcrb
mov
sbb
icebp
decl
fisubs
push
js
fisttps
call
aam
cmpsb
sub
add
outsl
idivb
idivb
add
into
jns
sub
inc
cmc
lods
pop
sbb
inc
add
mov
out
sbb
fwait
xor
mov
jnp
daa
icebp
xor
int
fsts
jno
aaa
push
mov
inc
negb
pop
cmp
push
out
inc
add
or
loope
not
cwtl
dec
arpl
lds
mov
push
jle
dec
addb
ficompl
fbstp
push
dec
popf
cmp
ljmp
dec
movsb
inc
add
sbb
loop
add
push
push
jl
xchg
xchg
popa
dec
adc
fwait
out
out
shlb
leave
cmp
or
push
push
or
repz
bound
sbbl
mov
dec
pop
jmp
cs
adc
or
lds
xchg
cmc
addb
mov
dec
xor
sbb
out
jge
test
mov
inc
add
xor
sti
dec
mov
push
push
sbb
cmp
das
scas
mov
push
add
int3
and
push
push
insb
push
sbb
add
fsubrs
shlb
incl
dec
clc
stc
cmp
jns
enter
and
std
xchg
mov
mov
mov
cmc
sbb
pop
add
and
add
addb
push
les
adc
push
addl
sbb
mov
sub
and
xor
add
negl
aad
jg
add
mov
lcall
out
or
dec
in
inc
add
sub
jle
xor
das
outsb
xchg
push
push
dec
xchg
adc
add
inc
add
cwtl
ret
cmp
leave
mov
lods
fildll
jl
mov
mov
mov
test
and
sbb
inc
add
test
adc
and
ret
mov
jg
shl
xchg
lock
add
add
cmpsb
int3
mov
dec
fnstenv
call
lea
stc
fiadds
mov
imul
xchg
loop
mov
daa
add
add
enter
sahf
addb
xchg
mov
fldcw
adc
xchg
lods
xchg
outsb
pop
mov
mov
mov
mov
sbb
xchg
dec
push
add
pop
jns
push
inc
sti
popf
mov
pop
je
ret
fndisi(8087
dec
jae
or
fnstsw
mov
mov
sbb
js
push
fistps
push
das
outsb
push
add
adc
fdivr
fs
cmp
mov
cltd
repz
lea
push
adc
cmp
add
in
mov
xchg
pop
and
in
mov
es
add
add
notb
das
js,pn
mov
pop
lahf
xchg
bnd
jecxz
jl
sub
push
add
rorl
es
bnd
mov
push
xor
push
aad
xor
loope
pop
push
pop
mov
xchg
mov
addb
addb
mov
sbb
add
add
je
cld
ret
pop
fwait
adc
faddp
add
rorb
fldenv
pop
dec
push
mov
dec
or
mov
rclb
add
or
sbb
fwait
and
adc
outsb
mov
or
cmp
outsb
add
inc
fs
rolb
xor
mov
fildll
les
repz
jp
outsl
cmpl
push
push
xchg
adc
mov
xor
cmp
ss
mov
add
lcall
adc
mov
imul
ficoms
add
loope
xchg
into
sbb
xor
add
sbb
incl
jge
fldcw
mov
sti
inc
leave
push
sbb
cwtl
xchg
push
ss
hlt
scas
inc
call
int3
pushf
movsl
std
jmp
bound
sub
aaa
loopne
xor
mov
or
jg
sbb
and
sub
push
jb
call
leave
sub
cmp
add
mov
insb
ja
lcall
mov
ja
mov
or
jp
add
xchg
mov
inc
add
adc
hlt
iret
add
mov
and
add
sub
das
cmp
dec
and
and
inc
lcall
xchg
adc
out
jbe
dec
les
inc
add
lret
pop
adc
adc
popa
aam
ja
add
jle,pt
cmp
push
repnz
add
pop
pop
inc
add
cmp
sbbl
add
leave
fld
aaa
mov
fwait
lret
repnz
add
add
arpl
inc
add
push
dec
jmp
jb
jecxz
cmp
mov
popf
fadds
movsl
lods
mov
cltd
loope
pop
push
std
jmp
ret
loopne
mov
xchg
ja
js
cli
xor
addr16
rorb
add
jmp
xorl
pusha
add
clc
jl
int3
stos
add
jne
mov
enter
push
into
and
jle
frstor
hlt
xor
jno
pop
mov
xchg
xchg
aad
addl
jo
lcall
dec
std
mov
xor
lds
or
addb
mov
call
dec
push
sahf
lods
cli
push
add
sub
fwait
add
push
add
mov
rorl
xchg
xchg
sbb
test
bound
out
mov
add
aas
popf
or
sbb
adc
add
data16
xor
cld
outsl
mov
imul
mov
sti
cmp
xchg
cli
pop
enter
loopne
int
mov
add
in
ss
or
pusha
add
push
dec
jmp
adc
adc
add
sub
fwait
pop
daa
inc
xchg
repnz
popf
add
ljmp
or
test
stc
push
inc
push
mov
scas
test
sarl
or
fldl2t
mov
dec
push
adc
addb
js
xchg
jns
lds
add
int
push
push
mov
adc
xchg
inc
and
mov
push
lods
mov
push
arpl
mov
pop
mov
cmp
in
pop
jb
mov
call
int
mov
fs
cmc
bound
or
and
and
jbe
outsl
jbe
pop
jmp
movsl
push
cli
xchg
push
pop
cwtl
test
lea
mov
jae
add
add
jno
mov
push
inc
movsl
mov
or
bound
leave
nop
lods
out
mov
std
push
sbb
in
dec
rolb
jo
fdivs
push
fbstp
mov
mov
rcrl
add
lods
jp
js,pn
repz
out
lods
pop
cmp
in
mov
dec
push
inc
add
dec
lea
ret
outsb
shll
icebp
push
cmp
scas
pop
mov
jmp
ds
int3
cmp
js
add
pop
movb
add
pop
pop
pop
cmp
testb
jmp
sbb
adc
out
mov
lods
movb
addb
mov
xchg
testl
test
into
out
cmp
out
pop
ja
push
outsl
dec
xchg
lods
in
mov
jo
clc
aam
mov
icebp
mov
sti
xor
or
add
mov
insl
and
jne
fists
and
or
ret
xor
push
addb
sbb
inc
add
dec
lret
cld
mov
stc
mov
rclb
out
adc
cs
lret
adc
inc
inc
mov
int3
mov
pusha
add
mov
shrl
xor
cmp
ds
mov
repz
add
stc
js
enter
sbb
and
jns
mov
dec
sbb
scas
addb
lock
into
mov
ror
push
or
fstpt
xor
and
mov
and
xchg
cmp
adc
movl
fimuls
jl
sub
pop
and
out
jl
lret
aas
sbb
lcall
push
inc
cwtl
aas
sbbl
js
add
sub
adc
sub
jno
inc
aad
add
je
add
nop
dec
into
cmp
sti
lods
hlt
ljmp
jl
fdivrl
mov
loop
sub
push
cs
mov
fcmovbe
adc
cmc
addb
loopne
xchg
adc
push
imul
shll
leave
sahf
xchg
loopne
aad
and
push
dec
or
lahf
incb
shll
jbe,pt
movsb
push
setne
jo
mov
push
pop
pop
jl
mov
fcomps
cmp
add
cmp
mov
mov
pop
repnz
inc
loope
insb
fwait
mov
mov
add
push
fwait
in
lods
dec
cmp
jmp
sahf
add
jmp
stos
mov
sbb
pop
jnp
mov
adc
in
push
stc
dec
add
xchg
pop
lods
ret
mov
add
idivl
aas
xchg
dec
popa
pop
mov
mov
scas
adc
les
lods
push
scas
std
cli
aaa
xor
in
adc
in
loop
xchg
push
adc
icebp
fwait
outsb
fisubl
jl
mov
mov
or
lock
lods
push
pop
mov
add
add
pushf
add
loop
test
push
nop
call
jecxz
add
sbb
push
inc
mov
mov
lock
add
jne
popa
imul
nop
push
call
pop
test
add
repnz
mov
add
pop
push
and
mov
mov
and
add
cmp
popf
aam
push
in
sub
mov
sbb
add
adc
and
and
mov
flds
sahf
repz
or
add
arpl
fcmovnbe
add
leave
movsb
jl
pop
loope
and
mov
adc
push
shl
lea
push
add
loopne
sbb
popa
xchg
add
dec
cmp
mov
push
xor
xchg
pushf
test
inc
add
pop
xor
cwtl
cmp
push
sarb
add
aad
add
cmp
dec
cltd
mov
push
xor
push
inc
outsb
ret
push
add
xorl
mov
lock
and
jecxz
xchg
mov
test
add
std
jg
sub
jb
or
add
sarb
mov
movsl
fnsave
pop
jp
add
cmp
pop
and
movsl
mov
xchg
ret
sbb
add
testl
mov
inc
add
add
scas
cli
test
jle
inc
rorl
mov
jg
pop
inc
mov
dec
cmp
jecxz
xor
push
or
daa
xrelease
rolb
sub
jle
push
fdivrl
mov
jg
xchg
sub
mov
nop
cmpsb
jo
add
pop
push
aad
xor
aad
mov
sbb
add
out
cmc
clc
leave
lret
mov
inc
add
dec
add
xor
or
jne
cmpsb
xor
bound
jecxz
rcll
mov
les
dec
rolb
stos
dec
mov
jge
std
addb
cwtl
faddl
mov
add
and
mov
sarl
test
flds
add
xchg
jnp
inc
out
mov
inc
add
inc
mov
inc
dec
aad
mov
mov
es
mov
add
push
add
lock
fstp
cld
shl
fcoml
push
xor
inc
add
and
lcall
aam
lret
cmpsl
cwtl
jecxz
add
dec
inc
push
inc
hlt
jle
dec
into
mov
bound
fwait
bound
cmp
or
dec
mov
and
mov
cmpsb
out
or
jae
mov
add
adc
push
call
mov
jle
ja
inc
add
jns
xchg
or
sub
out
add
outsb
mov
jns
call
inc
add
mov
in
mov
adc
mov
movups
fldcw
or
outsl
xchg
loop
aas
push
mov
push
cmp
pop
dec
or
mov
call
adc
ret
mov
fistl
add
fadd
out
rolb
or
loope
mov
cld
gs
jecxz
mov
jbe
les
cli
lret
hlt
and
push
sub
movsl
xchg
out
mov
cltd
lock
inc
addb
add
shlb
mov
add
jae
jle
xor
ret
add
aad
jl
nop
into
movsl
mov
hlt
shll
movsl
and
add
mov
jne
rcrl
movntq
pop
mov
xchg
add
jle
leave
hlt
enter
jo
add
stc
mov
test
xor
leave
into
pop
xor
push
int
jns
mov
jge
notb
das
mov
inc
divb
add
out
in
aas
xchg
lret
xchg
sub
das
pop
out
fwait
rclb
bound
movb
add
add
out
cwtl
dec
arpl
mov
sub
pop
sbb
xchg
jb
mov
outsl
cltd
psrld
repz
xor
dec
aas
imulb
jno
xor
cli
shrl
pop
or
aaa
imul
add
fwait
jp
mov
jno
sbb
imul
lcall
push
mov
clc
mov
sub
pop
mov
xchg
arpl
out
bound
pop
cmc
rolb
mov
rolb
iret
aas
fwait
push
add
movsl
add
inc
add
push
mov
jnp
or
push
faddl
lds
add
fwait
jp
imul
lds
ret
imul
mov
jne
out
sub
aas
or
sub
rcll
xchg
add
jnp
jb
mov
out
stos
and
jmp
daa
sub
pop
push
cmc
loop
dec
pop
cmp
jnp
shlb
pop
xchg
fs
bound
push
in
cmc
inc
jo
notl
div
inc
loope
test
inc
add
sbb
xor
inc
add
push
and
sar
loop
lods
insb
pop
dec
cmp
inc
mov
clc
lock
mov
mov
lret
or
xchg
rolb
movsl
jns
add
add
push
dec
addb
jmp
push
repnz
or
int
loope
lods
pop
rolb
jl
and
dec
scas
scas
push
rolb
add
fnstenv
scas
or
sub
mov
pop
out
arpl
jl
mov
lea
aam
pop
jne
ljmp
and
push
jp
xchg
mov
movb
fmul
cli
test
out
dec
pop
pop
xchg
inc
inc
add
jnp
dec
mov
stos
imul
mov
add
xlat
cli
popa
sub
in
jmp
enter
sbb
inc
add
mov
add
scas
or
sbb
add
mov
jne
lahf
jl
lcall
repz
rcrl
cmpsb
or
adc
aad
cmpsl
notl
xchg
stos
in
shrl
push
jg
add
adc
sbb
stc
addb
inc
add
fcmove
lock
outsl
test
addb
mov
push
push
push
push
test
mov
mov
adc
push
add
insb
sub
mov
ja
sbb
cmp
lret
sbb
dec
in
sahf
je
fcomps
data16
test
push
pop
je
add
pop
adc
cmp
dec
inc
cmpsb
push
add
enter
out
mov
ret
lea
sbb
lock
mov
test
cmp
lods
push
iret
push
add
clc
add
sbb
mov
sbb
loope
add
ss
icebp
scas
loopne
test
cltd
adc
scas
fwait
out
sbb
pminub
or
pop
xchg
out
xchg
sahf
mov
pop
loop
dec
push
imul
loop
or
pusha
add
pop
sub
dec
bound
data16
pop
dec
jnp
add
xor
inc
xchg
aam
in
adc
ja
push
mov
rolb
mov
xor
bound
pop
hlt
mov
sub
incb
dec
dec
loopne
sbb
leave
inc
add
and
mov
imul
or
into
es
je
insb
jle
jle
xchg
pop
gs
out
addb
ds
pushf
push
movb
lea
xchg
jne
xchg
jle
add
fcmovu
hlt
sub
ja
fs
sarb
mov
add
jno
sbb
pop
dec
enter
sbb
daa
call
push
mov
faddl
cmp
xor
inc
add
sti
stos
lea
in
add
in
xchg
int3
loopne
or
out
adc
std
loope
push
lock
cltd
nop
xor
xchg
adc
dec
pop
pop
outsl
mov
add
inc
add
out
push
mov
mov
jbe
int
mov
push
decl
cli
add
cmpsb
and
and
sub
sbb
adc
subl
je
mov
lods
pop
rolb
sub
pop
inc
xchg
jle
pop
mov
fs
add
add
dec
inc
add
add
add
add
jb
repnz
fidivl
call
daa
scas
or
add
dec
stos
xchg
mov
lods
pushl
and
mov
call
adc
cmp
aas
mov
or
hlt
xchg
call
mov
pop
mov
xor
aam
add
mov
arpl
push
cmp
js
xchg
and
xchg
nop
adc
mov
addr16
push
addb
out
pop
hlt
pop
stos
jle
push
int
nop
cs
add
pop
jg
mov
inc
add
sbb
ja
dec
xor
ds
or
pop
scas
push
pop
cmp
inc
add
cmp
loope
icebp
cld
call
push
rolb
cmpsl
adc
push
add
es
push
cwtl
fstpl
frstor
add
add
push
jnp
add
add
xchg
mov
addb
sub
add
addb
addb
sbb
lcall
aad
add
add
ljmp
mov
push
enter
aaa
jns
fidivrs
mov
out
jae
push
sub
pop
es
fisubrl
jmp
xor
and
sub
movsl
xchg
mov
jecxz
das
test
push
fs
sub
add
cmpsb
mov
popa
or
shrb
daa
movsl
loop
jnp
and
cmp
lea
push
lret
add
adc
movsl
scas
clc
jb
jb
sbb
push
add
mov
sbb
mov
pop
je
fidivs
add
rolb
add
and
push
add
xchg
jl
sbb
loop
test
out
cmpsb
loope
mov
test
adc
sahf
das
lahf
movsb
and
add
call
pop
pop
leave
psrad
push
addb
jmp
mov
addb
sub
xor
and
test
mov
loop
in
subw
testb
add
adc
add
movb
dec
push
push
pop
fsubrs
addr16
daa
sub
lods
hlt
fiaddl
mov
pop
in
aas
test
repz
sub
ds
fs
pusha
add
movsb
jle
addb
add
add
rolb
add
push
add
jae
add
prefetch
add
sti
dec
lret
mov
lcall
sub
div
jb
pop
repnz
fnstcw
in
insl
lret
push
jns
insb
jo
scas
mov
lods
inc
scas
xchg
out
add
ds
mov
add
and
inc
add
add
insb
push
and
js
mov
and
push
in
shl
adcl
pop
cmc
gs
jbe
fidivl
pop
stos
vaddsubps
add
hlt
mov
xchg
daa
pop
cmp
push
popa
jno
dec
sbb
rolb
insl
ljmp
adc
loope
pop
adc
dec
movsb
dec
fsubs
xchg
movsb
cwtl
test
pop
push
or
mov
add
shlb
cli
fdivp
cmpsl
aad
inc
add
je
repnz
pop
sbb
test
push
xchg
sbb
imul
outsb
cmp
mov
xchg
add
add
loop
aas
push
cmp
rolb
sarl
stos
stc
mov
cmc
call
rorb
ja
add
add
mov
das
addb
lahf
sub
mov
insl
icebp
inc
add
gs
sub
ljmp
and
lahf
xor
out
dec
mov
loop
idivb
xor
mov
loopne
xlat
push
jge
cmpsl
mov
dec
jmp
enter
ds
dec
jae
xchg
mov
jno
lahf
xor
pop
sbb
add
aas
adc
jne
jb
inc
int3
pop
clc
add
daa
rolb
out
cmp
jbe
pop
cmc
loope
jae
sbb
cmpl
and
outsl
fcomi
fcomps
or
call
adc
add
and
scas
xchg
pop
adc
add
jne
addb
push
psadbw
movsb
fbstp
jbe
leave
rcrl
pop
jmp
jno
insb
loopne
test
and
mov
pop
mov
pusha
add
inc
xchg
insl
pop
pop
mov
loopne
push
gs
out
ljmp
loopne
adc
sahf
lods
pushf
add
add
xchg
lea
lahf
sti
or
jo
into
ljmp
out
filds
repz
fsubp
and
pop
jg
loop
ljmp
dec
adc
push
or
pop
icebp
add
je
push
xchg
xor
cmp
in
mov
and
aad
dec
daa
pop
jg
mov
pop
ret
add
test
adc
cmp
js
aas
cli
ja
sub
aam
mov
inc
add
mov
cmovle
sub
add
cmp
std
push
cmp
mov
sbb
int3
ja
setno
inc
or
jne
test
xchg
loopne
mov
jb
inc
and
mov
test
pop
mov
add
mov
push
xor
fsts
mov
xchg
addr16
push
sub
je
out
repnz
dec
xor
loope
dec
inc
add
popf
les
aam
roll
test
xchg
addb
xor
dec
jp
sbb
cmc
fcom
adc
leave
cmp
cmc
out
xor
dec
mov
and
js
movsl
icebp
xchg
test
inc
add
mov
add
push
jecxz
inc
add
add
cmp
addb
xchg
mov
pop
dec
inc
add
inc
add
mov
or
xchg
aad
pop
and
jne
mov
adcl
mov
pop
mov
movb
push
dec
loop
mov
fs
fimuls
iret
xchg
pop
sbb
cmp
add
inc
mov
jnp
mov
xchg
mov
pop
sub
lds
xchg
push
mov
inc
add
inc
mov
sarl
add
faddl
cmp
or
outsb
es
dec
or
stc
nop
es
add
movsb
fmull
push
add
xchg
ret
sub
add
daa
test
add
nop
es
add
int
stos
jmp
stc
nop
es
lods
add
mov
add
nop
es
mov
adc
jne
nop
cld
nop
jmp
aad
lcall
adc
push
add
add
fwait
mov
stc
nop
es
lcall
inc
fmull
jb
test
loopne
mov
mov
nop
cld
nop
jmp
test
jecxz
cmp
nop
cld
nop
jmp
into
jnp
loopne
incb
notl
sbb
add
int
inc
inc
add
cmp
nop
es
xlat
add
add
icebp
push
dec
add
stc
nop
es
call
popa
add
insb
inc
insb
insb
stc
nop
es
add
dec
cmp
nop
es
addl
mov
mov
push
mov
xchg
ret
adc
mov
stc
nop
es
add
add
stc
nop
es
add
js
in
mov
mov
xchg
ret
add
add
add
stc
nop
es
in
add
test
ret
add
add
add
add
xor
nop
cld
nop
jmp
js
lods
xor
test
lea
push
mov
xchg
ret
add
jne
push
mov
xchg
ret
add
lcall
jb
add
mov
add
add
mov
add
stc
nop
es
icebp
mov
add
xor
nop
es
mov
aam
pop
xchg
mov
stc
nop
es
call
add
cmc
lret
shr
stc
nop
es
adc
jo
add
add
nop
cld
nop
jmp
add
add
push
rorb
pop
stc
nop
es
pop
out
mov
stos
mov
stc
nop
es
dec
add
jb
add
add
and
push
mov
xchg
ret
add
add
ss
jb
add
stc
nop
es
add
add
xor
inc
add
loopne
mov
mov
and
mov
nop
cld
nop
jmp
in
add
sarb
cld
push
mov
push
add
push
or
mov
xchg
add
imul
xor
add
stc
nop
es
adc
jo
aaa
sub
push
inc
add
into
aad
push
pop
stc
nop
es
incb
out
popf
mov
stc
nop
es
add
add
in
mov
or
stc
nop
es
add
mov
pop
stc
nop
es
add
loopne
mov
xor
decl
push
mov
xchg
ret
test
cmpsb
js
or
inc
xor
stc
nop
es
rolb
mov
loope
and
call
stc
nop
es
icebp
add
mov
jo
add
or
add
test
dec
adc
nop
es
lock
loope
loopne
add
stc
nop
es
sub
add
lods
into
add
pop
add
nop
cld
nop
jmp
lcall
mov
push
jno
sub
push
mov
xchg
ret
mov
aam
mov
push
push
mov
xchg
ret
add
aad
add
add
jecxz
add
add
mov
stc
nop
es
add
adc
lods
rolb
je
ficoml
sbb
inc
add
add
dec
pushl
push
mov
xchg
ret
add
add
fisubrs
add
add
addb
lret
jg
stc
nop
es
jnp
pop
push
add
add
nop
es
add
add
xor
movzwl
stc
nop
es
cmpsl
test
add
push
mov
xchg
ret
add
mov
add
add
stc
nop
es
add
in
add
add
stc
nop
es
faddl
lock
mov
xchg
ret
sub
lock
pop
lcall
jb
add
mov
add
add
push
mov
xchg
ret
add
aam
add
popa
out
add
stc
nop
es
in
add
pusha
jnp
add
jmp
nop
cld
nop
jmp
add
add
popf
je
stc
nop
es
mov
stc
nop
es
add
add
xchg
int3
rep
stc
nop
es
push
mov
add
mov
stc
nop
es
clc
clc
aad
add
push
mov
stc
nop
es
push
sahf
add
pop
push
mov
stc
nop
es
add
mov
fs
push
mov
xchg
ret
add
add
push
mov
xchg
ret
xorb
test
mov
jb
add
lods
and
add
add
stc
nop
es
mov
pop
nop
cld
nop
jmp
mov
adc
mov
mov
nop
es
lods
mov
aam
adc
int3
add
nop
cld
nop
jmp
mov
adcl
mov
xchg
ret
and
lods
push
sub
jae
nop
es
push
mov
nop
es
adc
inc
add
lock
pop
stc
nop
es
mov
mov
mov
insl
push
mov
add
in
dec
lret
sti
outsb
clc
iret
mov
lret
mov
stc
nop
es
add
lea
stc
nop
es
add
jnp
es
lcall
jne
stc
nop
es
add
inc
call
inc
add
sub
movq
add
or
add
mov
nop
cld
nop
jmp
in
lods
add
sub
mov
mov
stc
nop
es
add
pusha
cmpsl
inc
add
push
mov
xchg
ret
mov
lods
add
add
test
nop
es
call
je
stc
nop
es
mov
add
inc
add
loope
push
add
add
jae
xor
stc
nop
es
add
lods
into
call
add
nop
es
lcall
insl
mov
push
mov
xchg
ret
add
add
stc
nop
es
add
pusha
add
out
out
mov
stc
nop
es
lods
add
aam
and
nop
cld
nop
jmp
mov
dec
cmpsl
lcall
add
add
cli
push
faddl
add
dec
add
nop
cld
nop
jmp
aaa
in
mov
add
add
rep
stc
nop
es
out
test
mov
sbb
nop
es
jo
cmpsl
add
mov
push
mov
xchg
ret
push
add
adc
pop
call
and
add
xor
mov
xchg
ret
aaa
ret
add
add
shr
add
stc
nop
es
add
xor
mov
cmp
ret
add
addb
add
stc
nop
es
add
add
and
aad
fpatan
stos
stc
nop
es
mov
add
and
add
sub
popa
add
nop
es
mov
pusha
add
push
ja
mov
nop
cld
nop
jmp
popa
aam
add
add
fcoml
mov
xchg
ret
add
sub
cld
nop
jmp
add
lcall
shlb
add
add
int
add
loope
push
push
mov
xchg
ret
fwait
pop
add
add
js
mov
stc
nop
es
add
icebp
inc
flds
es
mov
pop
js
sar
nop
es
add
in
and
push
mov
xchg
ret
add
incb
clc
jno
and
xor
push
mov
xchg
ret
mov
add
add
ss
es
add
add
push
lret
push
mov
xchg
ret
adc
add
stc
nop
es
add
add
incb
adc
test
add
stc
nop
es
add
add
dec
cmp
nop
es
call
icebp
jne
jbe
add
daa
push
and
stc
nop
es
add
mov
stc
nop
es
sahf
add
add
add
add
stc
nop
es
add
lock
ficoms
jo
inc
add
add
jbe
sbb
add
push
mov
xchg
ret
lcall
nop
cld
nop
jmp
add
mov
add
pop
push
mov
xchg
ret
add
add
add
mov
pop
stc
nop
es
add
add
loope
mov
add
nop
es
add
jno
call
adc
sub
loop
mov
test
xchg
stc
nop
es
add
push
rolb
jg
insb
inc
jb
stc
nop
es
pop
sahf
add
adc
push
mov
xchg
ret
add
lcall
mov
nop
es
cmpsl
incb
add
lret
adc
add
idiv
decl
push
push
mov
xchg
ret
lods
add
add
add
sub
mov
xchg
ret
add
lcall
dec
sub
nop
es
add
cmpsl
add
cmp
jno
stc
nop
es
add
incb
add
xchg
fldcw
push
mov
xchg
ret
loope
add
add
cld
nop
jmp
add
faddl
int
inc
add
inc
jecxz
push
push
mov
xchg
ret
add
in
cmpsl
add
stc
nop
es
add
add
add
mov
add
nop
es
add
incb
mov
mov
push
mov
xchg
ret
mov
sub
nop
es
inc
add
int
add
nop
es
aaa
fwait
add
gs
nop
jmp
add
or
jmp
jmp
lcall
sbb
lock
xchg
ret
add
ret
add
pop
push
mov
xchg
ret
push
add
adc
jb
test
add
add
cmpw
stc
nop
es
sahf
js
add
addr16
push
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
loope
add
faddl
ja
pop
mov
stc
nop
es
lcall
inc
add
pop
stc
nop
es
add
mov
add
push
push
mov
xchg
ret
add
add
aad
mov
and
stc
nop
es
js
add
incb
cmp
dec
cmp
nop
es
add
add
add
mov
mov
push
mov
xchg
ret
mov
add
xchg
or
es
fmull
xor
stc
nop
es
loopne
int
lcall
nop
es
add
loope
lret
sub
jmp
icebp
lret
aaa
lcall
and
nop
es
add
jnp
adc
call
stc
nop
es
add
push
in
mov
jne
stc
nop
es
lods
add
incb
mov
push
xor
nop
cld
nop
jmp
add
mov
add
add
jl
sub
add
inc
faddl
xchg
ret
mov
mov
stc
nop
es
adcb
push
xor
lods
stc
nop
es
add
add
sub
lcall
nop
jmp
add
into
lods
pop
add
add
or
cld
nop
jmp
add
push
mov
fisttpll
test
adc
add
nop
es
mov
jo
pusha
push
mov
xchg
ret
add
lcall
ret
add
mov
xor
stc
nop
es
aad
add
adc
xchg
stc
nop
es
add
popa
add
add
mov
stc
nop
es
cmpsb
daa
add
add
insl
mov
push
mov
xchg
ret
jnp
mov
aam
xor
mov
adc
nop
es
js
add
rorb
cld
stc
nop
es
add
fwait
lock
ds
stc
nop
es
fwait
sahf
add
in
incb
cmpsb
gs
jne
nop
cld
nop
jmp
out
add
add
xlat
aas
push
nop
cld
nop
jmp
add
inc
jo
cmpsb
call
add
adc
push
mov
xchg
ret
push
leave
mov
stc
nop
es
clc
mov
push
mov
xchg
ret
add
jnp
clc
push
fs
test
es
into
pop
mov
mov
stc
nop
es
add
mov
es
test
add
jae
pop
stc
nop
es
add
clc
add
ret
mov
sbb
test
stc
nop
es
add
mov
xchg
ret
add
popa
shrb
cld
inc
add
adc
add
add
lds
mov
stc
nop
es
pop
icebp
daa
add
add
jne
stc
nop
es
pusha
mov
pop
movsl
nop
je
add
sub
nop
jmp
lock
mov
into
add
mov
jb
jo
clc
loopne
js
add
nop
add
add
nop
es
aaa
lods
js
into
push
push
mov
xchg
ret
and
add
clc
add
nop
es
add
aaa
add
popa
add
nop
es
call
mov
shl
push
mov
xchg
ret
xor
in
mov
push
mov
xchg
ret
lcall
rcll
incl
add
lret
mov
stc
nop
es
add
adc
stc
nop
es
adc
add
xlat
add
push
addb
mov
push
mov
xchg
ret
add
movswl
nop
cld
nop
jmp
out
add
add
add
es
add
rolb
mov
rep
stc
nop
es
out
add
lret
dec
push
mov
pushw
sbb
sub
push
add
fsubr
lcall
add
stc
nop
es
rolb
add
jns
rclb
incl
call
add
push
out
popa
stc
nop
es
cmpsb
add
add
mov
push
mov
xchg
ret
mov
xor
mov
fldl
inc
mov
jl
add
cmp
mov
push
stc
nop
es
add
adc
adc
mov
jo
mov
stc
nop
es
push
in
in
jno
ret
stc
nop
es
cmpsl
dec
add
fwait
mov
nop
jmp
push
loopne
add
push
repz
mov
xchg
ret
add
dec
sub
add
add
stc
mov
push
mov
xchg
ret
add
adc
mov
je
nop
cld
nop
jmp
lcall
mov
and
mov
xchg
ret
xlat
add
in
ret
rcl
mov
add
nop
es
add
add
xor
cs
nop
es
lcall
jbe
stc
nop
es
add
add
js
add
lahf
mov
stc
nop
es
daa
add
add
pop
push
push
mov
xchg
ret
icebp
in
push
adc
gs
add
decl
stc
nop
es
and
inc
mov
add
stc
nop
es
rcrb
add
cli
inc
stc
nop
es
ret
inc
int
add
add
xor
nop
cld
nop
jmp
out
inc
add
add
loop
dec
ret
stc
nop
es
test
fdivrl
jg
nop
cld
nop
jmp
add
add
add
fbld
popa
add
nop
es
add
nop
sub
insb
add
stc
nop
es
lock
add
clc
dec
inc
stc
nop
es
add
add
jnp
add
sbb
inc
add
call
xchg
push
cmp
push
mov
xchg
ret
add
lret
pusha
add
mov
stc
nop
es
out
lcall
movzwl
nop
cld
nop
jmp
call
add
push
nop
cld
nop
jmp
add
popa
cmpsl
xor
in
xchg
call
in
inc
add
add
lcall
stc
nop
es
add
mov
jnp
pop
mov
push
mov
xchg
ret
inc
adc
lahf
cmpl
nop
cld
nop
jmp
adc
pusha
loope
add
les
mov
jb
add
add
inc
and
stc
nop
es
in
mov
inc
and
stc
nop
es
lcall
sbb
loopne
stc
nop
es
mov
push
jne
stc
nop
es
add
add
mov
cld
nop
jmp
pop
add
mov
pop
push
mov
xchg
ret
add
add
xor
add
dec
nop
cld
nop
jmp
add
lock
jmp
call
lahf
fildl
xchg
ret
mov
add
add
sar
es
add
add
or
stc
nop
es
daa
cmpl
cmc
incl
mov
out
add
mov
nop
cld
nop
jmp
js
icebp
add
xchg
mov
inc
repnz
add
pop
add
add
call
stc
nop
es
int
push
nop
es
add
js
notrack
push
mov
xchg
ret
loope
mov
add
add
lock
jnp
add
add
push
push
mov
xchg
ret
dec
pusha
adc
push
mov
nop
es
jnp
loope
mov
rcl
xchg
jge
add
stc
nop
es
rolb
add
add
in
inc
add
add
add
add
push
stc
nop
es
add
andb
add
dec
mov
jb
push
dec
add
add
add
pop
pop
push
mov
xchg
ret
js
push
loope
add
jmp
lcall
lods
xchg
sub
scas
enter
jb
aam
lock
mov
pop
push
mov
xchg
ret
add
call
pusha
add
push
push
mov
xchg
ret
xlat
add
popa
add
add
cmc
stc
nop
es
faddl
mov
repnz
nop
es
add
xor
pop
es
stc
nop
es
add
push
mov
xchg
ret
add
dec
dec
sbb
cld
nop
jmp
lock
add
mov
cmp
int
inc
add
sub
lods
out
dec
add
stc
nop
es
add
cmpsl
add
fistps
mov
xchg
ret
fwait
xor
mov
inc
add
add
lcall
mov
xchg
ret
add
and
mov
inc
call
nop
es
cmpsb
add
mov
add
jmp
push
mov
add
lcall
aas
push
stc
nop
es
add
add
add
lret
arpl
add
nop
es
add
add
es
loope
ret
add
xor
nop
es
add
add
mov
mov
jb
add
add
fiaddl
xchg
ret
jo
add
add
out
add
nop
cld
nop
jmp
add
push
es
lcall
mov
nop
es
test
add
stc
nop
es
pop
mov
add
add
pop
mov
clc
nop
cld
nop
jmp
shlb
mov
and
pop
stc
nop
es
add
push
fwait
addb
daa
fwait
jmp
stc
nop
es
add
lods
add
push
stc
nop
es
add
add
pop
push
mov
xchg
ret
addl
add
popa
add
xchg
fisttpll
jmp
add
and
lcall
std
add
stc
nop
es
icebp
add
lcall
and
imul
es
add
test
addb
scas
push
stc
nop
es
fwait
add
lods
add
fs
add
stc
nop
es
add
add
adc
in
inc
add
add
add
mov
push
inc
popa
daa
in
cmc
dec
nop
nop
cld
nop
jmp
add
add
add
sahf
add
stc
nop
es
int
lcall
cmpb
add
nop
es
jo
xor
xor
add
stc
nop
es
call
nop
es
add
aam
adc
lcall
nop
es
add
inc
add
dec
call
stc
nop
es
rolb
push
mov
clc
leave
nop
cld
nop
jmp
add
inc
sahf
add
movsb
push
mov
xchg
ret
add
add
add
es
mov
ret
add
push
daa
outsl
jne
stc
nop
es
addl
push
mov
xchg
ret
add
add
xor
nop
es
add
add
in
add
inc
add
dec
mov
stc
nop
es
pop
sub
bound
nop
es
mov
mov
stc
nop
es
aad
inc
add
cld
nop
jmp
daa
test
add
add
push
push
mov
xchg
ret
push
mov
and
sub
es
add
add
adc
mov
stc
nop
es
jo
ret
lcall
stc
nop
es
lret
loope
jne
stc
nop
es
test
add
nop
cld
nop
jmp
aaa
call
add
jbe
stc
nop
es
add
mov
add
lea
stc
nop
es
cmpsb
add
add
stc
nop
es
faddl
add
xor
mov
stc
nop
es
mov
lret
add
test
arpl
popa
add
mov
xchg
ret
aam
add
stc
nop
es
add
and
add
rolb
nop
es
add
adc
add
movsl
inc
add
stc
nop
es
faddl
fwait
add
popf
add
stc
nop
es
mov
adc
add
sub
mov
nop
es
add
add
jbe
add
jne
stc
nop
es
ret
add
or
nop
es
adc
pusha
aam
add
push
push
mov
xchg
ret
add
mov
sub
mov
stc
nop
es
mov
add
movl
ljmp
ret
add
adc
insb
call
nop
cld
nop
jmp
int
into
pusha
add
test
push
stc
nop
es
aam
add
sbbb
stc
nop
es
adc
adc
aam
push
push
add
push
stc
nop
es
cmpsb
mov
clc
aam
add
push
cs
stc
nop
es
add
call
popa
cmp
cld
nop
jmp
mov
ret
sarb
adc
nop
es
add
loope
add
rep
stc
nop
es
adc
lcall
pop
push
mov
xchg
ret
pusha
fwait
jo
test
in
mov
stc
nop
es
add
mov
stc
nop
es
add
xlat
lods
push
nop
jmp
sahf
aad
test
test
add
nop
cld
nop
jmp
pop
aam
dec
add
fwait
cmp
jns
stc
nop
es
aam
add
daa
pusha
cs
stc
nop
es
mov
mov
mov
mov
xchg
ret
daa
xlat
add
lcall
cld
nop
jmp
mov
popa
add
incb
pusha
in
jmp
nop
cld
nop
jmp
add
mov
lock
mov
stc
nop
es
test
add
mov
out
test
nop
cld
nop
jmp
add
add
sar
inc
lock
mov
xchg
ret
add
xor
mov
xor
add
nop
cld
nop
jmp
out
add
mov
stc
nop
es
sahf
pop
fdivr
pusha
call
cli
sub
stc
nop
es
mov
lcall
mov
xchg
ret
add
aam
jo
test
nop
inc
addb
hlt
cmpsl
arpl
pusha
stc
nop
es
add
add
stc
nop
es
add
adc
add
push
adc
nop
es
daa
mov
sbb
es
loope
cmpsl
aam
out
sbb
clc
add
mov
cmp
ret
add
pop
dec
nop
cld
nop
jmp
add
test
add
mov
stc
nop
es
pusha
add
fwait
mov
jo
pop
nop
cld
nop
jmp
add
in
faddl
in
push
stc
nop
es
fwait
add
adc
mov
stc
nop
es
add
sbb
mov
add
nop
es
add
push
stc
nop
es
add
add
dec
push
push
mov
xchg
ret
add
xor
mov
stc
nop
es
test
add
add
adc
push
mov
xchg
ret
cmpsb
add
and
add
stc
nop
es
add
push
test
mov
add
nop
es
add
aad
add
outsl
xor
stc
nop
es
add
xlat
lcall
fdivrp
inc
add
daa
aam
add
mov
xchg
ret
add
int
scas
add
stc
nop
es
add
inc
stc
nop
es
pusha
rol
add
add
lock
lret
jo
add
nop
cld
nop
jmp
popa
adc
jmp
push
mov
xchg
ret
add
add
or
mov
add
repz
inc
movsb
lods
inc
add
adc
stc
nop
es
incb
sahf
add
lret
pop
sub
stc
nop
es
add
add
andl
jb
lcall
nop
es
call
add
jo
data16
mov
stc
nop
es
add
add
mov
inc
add
push
stc
nop
es
add
dec
add
shr
stc
nop
es
in
inc
xor
and
stc
nop
es
add
add
add
stc
nop
es
popa
cmpsb
add
decl
nop
jmp
add
aaa
add
inc
add
add
cld
pop
nop
cld
nop
jmp
pop
aad
add
add
add
jb
add
add
sbb
icebp
stc
nop
es
add
lcall
add
test
enter
jb
add
adc
shrl
stc
nop
es
lret
bts
nop
es
add
add
or
add
nop
cld
nop
jmp
clc
pusha
push
aam
mov
nop
es
lcall
push
mov
mov
stc
nop
es
add
test
enter
call
call
mov
add
mov
stc
nop
es
add
mov
mov
stc
nop
es
adc
add
fcompl
jge
stc
nop
es
into
aaa
add
test
cld
nop
jmp
add
aaa
insl
add
push
mov
xchg
ret
push
add
add
dec
stc
nop
es
test
in
lcall
jb
stc
nop
es
add
add
aam
dec
stc
nop
es
pusha
pusha
aam
in
add
add
stc
nop
es
add
mov
add
je
nop
cld
nop
jmp
push
add
xor
mov
xchg
ret
add
mov
loopne
add
nop
es
fwait
addl
imul
stc
nop
es
rolb
push
add
jae
fmuls
cmp
cmp
ret
and
lods
call
mov
stc
nop
es
add
test
test
call
stc
nop
es
add
add
lret
adc
hlt
out
inc
add
add
add
dec
push
stc
nop
es
lods
clc
add
xor
mov
stc
nop
es
adc
lcall
iret
and
stc
nop
es
addl
clc
mov
stc
nop
es
mov
add
push
js
nop
es
lcall
les
push
mov
xchg
ret
mov
mov
xor
mov
xchg
ret
mov
dec
mov
nop
cld
nop
jmp
aad
jnp
add
shrl
nop
es
add
sahf
clc
and
int
jbe
stc
nop
es
xlat
aam
pop
icebp
jnp
xchg
in
mov
push
mov
xchg
ret
mov
add
push
jb
mov
stc
nop
es
add
in
pop
mov
pusha
stc
nop
es
adc
jnp
add
lret
ljmp
add
nop
es
add
rolb
add
push
mov
xchg
ret
in
adc
add
es
add
cmpsb
add
adc
nop
jmp
add
adc
das
cmp
nop
cld
nop
jmp
add
test
add
or
stc
nop
es
add
stc
jne
stc
nop
es
mov
add
mov
stc
nop
es
in
add
cmpsl
rclb
pop
add
clc
loopne
popa
push
mov
push
mov
xchg
ret
rcl
add
add
add
cmp
jmp
adc
add
add
test
stc
nop
es
dec
clc
add
loope
add
add
jnp
add
scas
xor
stc
nop
es
adc
add
je
stc
nop
es
inc
add
or
es
add
dec
ror
push
mov
xchg
ret
add
aam
push
add
add
nop
cld
nop
jmp
add
ds
nop
cld
nop
jmp
add
aam
add
add
cmpsl
stc
add
stc
nop
es
out
mov
fisttpll
nop
jmp
add
add
add
add
add
stc
nop
es
mov
call
mov
stc
nop
es
mov
mov
stc
nop
es
add
in
add
mov
add
nop
cld
nop
jmp
add
fsubrl
sbb
jb
lret
lcall
stc
nop
es
pusha
push
aaa
jo
and
add
mov
stc
nop
es
adc
add
add
xor
jmp
testl
in
add
aaa
mov
xchg
sbb
nop
jmp
add
add
add
adc
stos
test
push
mov
xchg
ret
add
xor
aaa
aam
xchg
pop
shl
stc
nop
es
add
movsl
cwtl
add
nop
cld
nop
jmp
add
add
add
stc
nop
es
add
add
sbbb
inc
sub
nop
es
add
inc
mov
clc
mov
cld
nop
jmp
aad
addb
add
adc
mov
xchg
ret
add
lret
mov
popl
popf
stc
nop
es
in
sub
test
es
xlat
add
inc
push
insl
mov
stc
nop
es
cmpsb
add
aad
push
stc
nop
es
cmpsb
jo
sub
mov
dec
inc
push
mov
xchg
ret
daa
add
add
or
nop
cld
nop
jmp
add
add
lret
mov
add
nop
es
sub
aam
das
add
stc
nop
es
xor
clc
sbb
stc
nop
es
icebp
pusha
push
add
add
and
stc
nop
es
sar
add
push
add
nop
es
mov
mov
jl
stc
nop
es
clc
loopne
testl
jmp
add
push
adc
test
stc
nop
es
aad
add
lret
add
stc
nop
es
add
subl
nop
es
push
pop
push
stc
nop
es
pop
add
lcall
jmp
inc
and
nop
es
add
lcall
in
mov
add
add
sahf
add
inc
jbe
push
stc
nop
es
pop
lcall
lcall
mov
xchg
ret
add
rolb
addb
ja
add
stc
nop
es
add
add
jmp
stc
nop
es
mov
add
push
push
mov
xchg
ret
jnp
add
add
test
mov
push
mov
xchg
ret
rolb
add
test
nop
es
lods
jnp
aad
in
mov
nop
cld
nop
jmp
push
test
in
addb
pop
stc
nop
es
add
loope
into
add
or
pop
repz
call
cmc
incb
add
aam
mov
stc
nop
es
daa
add
mov
movsb
jns
add
nop
es
add
mov
sub
repz
nop
es
add
aam
cmpw
nop
cld
nop
jmp
into
dec
add
mov
mov
cmp
add
hlt
incl
cli
movswl
nop
cld
nop
jmp
popa
add
test
nop
cld
nop
jmp
add
lret
mov
stc
nop
es
add
js
in
add
stc
nop
es
add
das
lea
push
mov
xchg
ret
add
add
adc
daa
pop
xor
push
mov
xchg
ret
fadd
add
ret
andl
stc
nop
es
daa
add
lods
add
mov
ret
enter
mov
xchg
ret
in
test
shr
popa
stc
nop
es
add
add
movzwl
stc
nop
es
aaa
fwait
pusha
add
fists
cld
nop
jmp
lods
add
icebp
call
psubsb
add
add
nop
es
addb
add
add
mov
stc
nop
es
add
add
rclb
incl
pusha
lock
xlat
add
decl
stc
nop
es
loope
adc
icebp
lret
dec
test
nop
cld
nop
jmp
test
xchg
and
jne
stc
nop
es
pusha
int
mov
es
add
add
aad
or
nop
es
cmpsb
test
ja
push
mov
pop
add
inc
mov
add
filds
add
lcall
orl
inc
add
ret
popa
icebp
adc
add
add
in
jmp
cmpsb
call
push
mov
add
addr16
add
add
add
push
add
xor
jmp
stc
nop
es
add
popa
icebp
lcall
inc
stc
nop
es
mov
add
imul
nop
es
js
jnp
clc
add
add
mov
push
mov
xchg
ret
add
ret
xor
call
stc
nop
es
fwait
sahf
loope
imul
push
mov
xchg
ret
mov
clc
jns
cli
stc
nop
es
push
aam
jmp
add
nop
es
out
xor
stos
stc
nop
es
add
aaa
loopne
inc
adc
nop
es
fwait
cmpsl
cmpsl
add
add
adc
fsubp
inc
add
lcall
stc
nop
es
add
add
in
add
xlat
outsb
add
stc
nop
es
lods
adc
daa
add
mov
nop
cld
nop
jmp
aam
add
add
jl
xor
nop
es
icebp
add
mov
stc
nop
es
add
push
add
jns
add
cli
call
daa
inc
add
add
add
nop
cld
nop
jmp
rcl
add
add
popa
imul
stc
nop
es
lcall
faddl
jne
stc
nop
es
add
loopne
ret
mov
cld
nop
jmp
loopne
add
js
in
ds
stc
nop
es
lcall
shl
stc
nop
es
loopne
popa
xor
mov
push
stc
nop
es
aam
add
lods
add
add
mov
stc
nop
es
add
add
sti
push
mov
xchg
ret
mov
xorb
in
cmp
sbb
add
in
movsl
add
nop
es
and
test
add
dec
nop
cld
nop
jmp
mov
add
mov
xchg
ret
into
adc
aaa
add
push
stc
nop
es
inc
lcall
addb
add
dec
push
push
mov
xchg
ret
add
mov
cmpsl
lock
push
stc
nop
es
add
incb
mov
test
mov
es
add
xor
mov
mov
nop
cld
nop
jmp
add
add
call
stc
nop
es
add
adc
adc
call
stc
nop
es
fmull
mov
stc
nop
es
rolb
add
adc
popa
mov
repz
add
pushf
imul
stc
nop
es
add
add
call
nop
cld
nop
jmp
push
test
add
out
add
nop
es
adc
add
jnp
aad
mov
push
mov
xchg
ret
add
sub
mov
add
add
push
jnp
add
add
add
add
inc
add
jbe
sbb
ds
cmpsb
or
add
add
imul
cmp
and
into
xchg
ljmp
cmp
pop
aam
xlat
bound
cmp
aaa
cld
inc
add
fnstsw
xlat
lret
mov
cmp
mov
sub
ret
mov
add
add
cmp
sti
stc
fwait
clc
cmp
add
mov
xor
lahf
popf
mov
add
jno
imulb
ret
lahf
imul
loopne
add
mov
movb
and
ds
jno
pop
add
pop
pop
aaa
int
outsl
pop
push
pop
or
mov
aaa
sub
scas
rolb
out
jge
out
pop
lea
inc
add
xorl
push
fwait
jae
scas
cmp
jbe
add
dec
push
sahf
into
or
inc
add
shrl
movsl
adc
cli
call
or
mov
pop
cmp
push
sub
scas
jmp
aas
jb
mov
mov
mov
scas
mov
push
add
mov
sbb
jbe
sub
cmp
xchg
jp
add
inc
pop
inc
xlat
nop
cmpsb
gs
aad
repnz
lahf
cmc
mov
xchg
dec
sbb
jl
nop
mov
les
out
aam
je
jns
xchg
dec
jg
sbb
jnp
mov
add
sub
lcall
int3
cli
xchg
pusha
add
fidivl
dec
sbb
loopne
rolb
inc
add
mov
addl
pusha
add
insb
repz
inc
add
es
and
dec
arpl
and
mov
pop
cmp
inc
add
or
test
shrl
push
add
push
jle
inc
add
lea
push
lret
and
add
push
stos
xor
out
xor
jb
das
je
mov
mov
xor
in
test
add
out
jp
jl
ret
leave
lret
lcall
cltd
cmc
xchg
movsl
xchg
pop
test
cmp
sbb
jp
adc
mov
addr16
lods
push
add
xchg
sub
add
in
sbb
dec
push
jo
mov
mov
sti
mov
xor
leave
jle
dec
add
inc
add
push
leave
nop
mov
jle
testl
or
push
add
inc
mov
xchg
movb
add
jmp
mov
pop
push
mov
dec
inc
les
and
clc
sarw
cmpsl
mov
movb
out
push
jmp
adc
pop
test
imul
das
or
dec
cmp
or
jle
add
arpl
incb
add
sub
fistl
cmc
push
adc
xchg
shrb
out
std
push
inc
add
cmp
jnp
out
adc
jns
push
test
jnp
popa
and
jbe
aas
js
punpckhdq
cmp
rcrl
jle
shrl
cltd
xchg
rcrb
lret
cwtl
test
add
pop
imul
fdivr
lcall
aad
jp
cmp
jne
xchg
aam
push
inc
fdivl
movsb
mov
mov
mov
xchg
scas
int3
sub
add
sbb
cltd
xor
mov
cmp
hlt
mov
popf
xchg
repz
les
addr16
add
mov
ret
add
add
inc
cmp
rolb
inc
mov
sbb
cltd
out
xor
cmpsb
jnp
ss
shl
xor
ja
mov
sbb
into
icebp
popa
mov
mov
lret
adc
jns
pop
je
shrl
ds
call
outsb
cmc
inc
in
fxtract
mov
shl
jne
cmpsb
mov
clc
sbb
xchg
test
lret
rolb
xchg
mov
add
out
sub
add
pop
ret
mov
or
adc
inc
popa
lahf
sub
out
add
jnp
shlb
bound
test
lret
mov
push
out
nop
add
xchg
int3
mov
std
cmp
sbb
jmp
sub
cli
test
push
adc
push
cmc
insl
aad
fcomps
sub
in
xchg
and
xchg
shrl
sbb
sbb
add
fs
ljmp
mov
xchg
push
and
sub
and
iret
testb
sub
pop
movsl
hlt
push
jg
out
add
popf
test
dec
mov
or
mov
adc
mov
inc
add
cmp
inc
loop
mov
sbb
inc
add
dec
add
fdivl
add
inc
jecxz
xchg
ret
pushf
ds
pusha
add
lods
or
push
xchg
out
xor
cld
das
xchg
adc
xor
dec
jge
xchg
leave
lods
sub
mov
mov
xor
cltd
cmc
imul
xor
mov
or
adc
fsubrl
xor
jbe
push
cmp
sti
pop
xor
scas
or
rcrl
push
in
outsb
cld
lods
movsb
loopne
push
lahf
xor
repnz
add
xor
addb
dec
mov
js
jg
shlb
cmp
sbb
or
fisubl
xchg
xlat
insb
mov
mov
and
scas
sbb
sbb
and
cs
xor
js
out
mov
leave
rcl
mov
xchg
mov
addb
clc
xchg
push
cmpsl
pusha
add
dec
popa
idivl
or
movb
add
mov
pop
lahf
in
sbb
pop
lock
in
jo
xchg
xchg
xor
add
sub
jecxz
push
rcll
add
sbb
dec
inc
cmp
stos
popa
stos
sub
data16
and
fildll
xor
insb
xchg
xchg
mov
or
inc
add
mov
add
sub
rolb
add
ja
lock
mov
stc
adc
in
aad
stos
and
add
outsb
adc
xchg
sbb
jle
dec
out
or
lds
push
mov
sbb
daa
test
inc
add
loopne
ficompl
dec
out
and
pop
stos
xor
movb
stos
and
sub
and
and
imul
jae
pop
dec
jl
mov
arpl
sbb
pop
out
sarl
test
hlt
push
and
scas
xchg
iret
popf
jmp
stos
dec
xchg
adc
test
push
test
add
divb
fnstsw
aam
mov
icebp
out
fistl
es
adc
lods
lcall
sub
fldcw
add
pop
cld
mov
sti
adc
addb
sub
ret
and
or
fnstcw
adc
xlat
mov
push
sarl
add
add
xchg
rcr
adc
imul
and
repnz
popf
cltd
sbb
dec
cmp
add
mov
push
mov
xor
xlat
push
mov
jbe
xor
call
lock
inc
fldenv
ror
mov
jl
add
jl
stos
jbe
dec
jne
push
sbb
or
sbb
cmpsb
loop
sub
add
cwtl
rcll
addb
ret
bound
dec
mov
leave
test
addr16
movsb
sbb
pusha
add
lds
mov
addb
cltd
ret
and
stos
push
sbb
adc
sti
cli
mov
add
hlt
sub
hlt
cmp
sub
sbb
out
lock
dec
ret
or
fdivs
pop
mov
js
dec
lcall
movsl
ret
jmp
jb,pn
push
mov
repnz
loopne
adc
pop
gs
jno
and
dec
mov
add
jns
lds
pop
in
mov
adc
push
rol
and
fmuls
sub
or
and
lods
dec
xlat
iret
sub
add
leave
mov
mov
add
add
add
add
add
fldt
std
out
cli
dec
cwtl
js
add
test
fnsave
mov
int3
enter
out
add
aaa
nop
adc
lods
icebp
fucompp
push
sbb
bound
movb
aaa
rolb
push
mov
adc
inc
add
inc
add
sub
sub
test
dec
cmc
and
imul
cmp
jp
pop
popa
insb
stc
mov
adc
add
add
xlat
lret
xor
setnp
cmpsl
push
ljmp
add
in
sbb
hlt
addb
ret
repz
inc
add
mov
mov
dec
aam
fists
and
pop
lock
or
stos
or
cmp
testb
aad
icebp
cwtl
sub
add
push
fldl
cld
enter
adc
sbb
xchg
xchg
lods
int
mov
sub
scas
mov
sbb
mov
adc
add
dec
sbb
pop
jmp
xorl
mov
addb
mov
xor
movsl
loopne
int3
jbe
in
sub
in
dec
pop
add
scas
fsubrs
mov
hlt
push
popa
jmp
add
icebp
mov
or
cltd
jecxz
add
mov
push
shr
movb
rcrl
push
mov
pop
push
lret
sbb
test
in
inc
add
aam
das
out
addb
in
scas
push
addb
pusha
add
mov
pop
xor
and
and
iret
jmp
add
jmp
sub
xchg
gs
pop
push
rcll
clc
inc
movb
pop
es
inc
adc
loope
into
push
lahf
mov
hlt
and
addb
jle
stos
imul
pop
adc
fs
push
sbb
and
adc
sbb
test
or
int
jg
add
sbb
flds
or
lahf
lahf
jno
xor
fnsave
push
push
push
cli
jmp
xchg
jbe
rolb
pop
lcall
jmp
test
mov
jmp
mov
fsub
pop
movsb
pop
pop
and
mov
add
mov
push
or
or
or
int
rcrl
xchg
sub
pop
jmp
js
call
pop
les
sub
nop
out
sbb
xchg
lcall
fcoms
outsb
lret
push
pop
out
les
mov
aad
mov
jns
ja
pop
int3
cmp
mov
add
das
xor
add
inc
loop
insb
sbb
jecxz
mov
xchg
jmp
add
dec
mov
sub
leave
sbb
push
ss
jmp
insb
daa
adc
mov
or
xor
shlb
add
cwtl
mov
je
push
dec
mov
xor
je
repz
out
fsub
mov
sub
lahf
fwait
push
jge
repz
push
jbe
mov
movsb
scas
fadds
xchg
into
gs
push
push
in
sbb
aad
imul
jae
hlt
aaa
add
dec
mov
call
jecxz
movsb
stos
ret
lret
dec
lods
fstps
mov
test
stos
sti
push
outsb
jae
into
mov
es
mov
cmpsl
loope
cmp
mov
dec
loop
and
enter
mov
test
add
jns
mov
jle
mov
sbb
pop
sub
add
aad
into
pop
xchg
out
xchg
mov
adc
mov
and
addb
lds
test
cmp
pop
mov
xchg
mov
outsb
mov
clc
xchg
movsl
adc
sub
ds
arpl
fdivrl
into
into
mov
fldt
push
push
cmpsl
jp
shr
in
mov
loop
push
sbb
push
sarl
pop
mov
dec
addl
les
sub
xchg
nop
pop
stos
jo
das
stos
cmp
add
inc
add
aas
idivb
xchg
addb
fldl
xchg
imul
add
add
pop
mov
out
test
imul
loop
shl
pop
rcrl
mov
das
sbb
mov
pop
jne
pop
out
mov
sahf
pop
loope
mov
jl
addb
add
inc
add
sub
cltd
adc
out
ds
mov
stc
add
enter
push
jb
add
lods
pusha
add
cmp
or
inc
xchg
mov
or
push
mov
cwtl
add
add
hlt
inc
add
lgs
add
jns
movsl
pushf
add
int3
in
icebp
jg
jo
xor
mov
loopne
fstpl
fstps
test
pop
inc
add
adc
cmp
addb
jb
jbe
push
imulb
mov
cs
jno
lret
in
xchg
xchg
pop
leave
ror
stos
or
add
or
ret
dec
push
imulb
sub
xchg
lret
ret
outsb
data16
hlt
jnp
add
fnstenv
aad
addb
loope
mov
add
inc
add
cmp
mov
out
loop
stc
idivl
xchg
jmp
cmc
mov
sub
lret
lret
jo
add
sub
lods
add
out
add
add
fdivrs
js
sbb
jbe
rolb
sbb
addb
add
push
add
out
aad
stos
call
das
add
mov
sub
sahf
and
cli
fwait
cwtl
ret
xchg
pop
test
test
or
movsb
ds
add
xor
sub
mov
pop
mov
and
cmp
dec
sbb
or
testl
mov
push
into
jbe
sbb
cmp
cld
xchg
hlt
cmp
fisttps
gs
add
in
add
cmp
add
pop
xor
xor
lcall
xchg
push
mov
add
call
and
add
popf
stos
enter
inc
int
imul
scas
into
mov
ficomps
push
bt
out
adc
push
jne
ficompl
jns
cs
sub
add
shl
push
adc
hlt
fnstenv
js
adc
sti
out
or
sbb
jb
jae
stos
ds
test
test
inc
lret
ficoms
xchg
push
add
xorl
out
in
inc
add
movsl
jb
add
shr
jb
push
repz
inc
fcoms
adc
ss
jg
xor
add
xor
mov
or
xor
sbb
and
mov
in
hlt
push
add
outsl
xor
sub
daa
push
add
insl
push
mov
adc
lock
jl
int3
aaa
mov
out
jno
addb
pop
inc
add
bound
cmp
mov
xor
clc
rolb
inc
int3
pop
mov
mov
jge
sub
std
mov
add
xlat
pop
or
dec
icebp
repz
push
or
xchg
pop
cltd
xchg
push
push
sub
mov
and
das
or
push
jo
fcmovnb
pop
mov
mov
dec
push
loopne
mov
cmp
cmp
mov
orl
nop
xchg
mov
add
cs
mov
add
sbb
inc
and
arpl
push
add
dec
dec
scas
push
adc
sbb
fwait
push
data16
cmc
adc
jno
inc
add
jns
cmp
stos
lds
add
popa
ja
addr16
aas
cmpsl
add
imul
jb
cld
sbb
lret
mov
xchg
lods
jns
add
pop
inc
add
leave
dec
push
push
rolb
in
sahf
xor
inc
mov
fs
mov
ljmp
cmp
dec
nop
xchg
cmc
dec
outsb
pop
inc
xchg
add
add
jne
pop
jmp
outsl
in
add
iret
hlt
xchg
and
xor
cli
jmp
aas
dec
imulb
je
sbb
test
or
push
fucomi
mov
lds
push
add
pushf
jb
pop
ficomps
pop
sbb
sarl
jbe
dec
mov
lcall
sub
push
mov
pop
fimull
sti
popa
add
cmp
push
add
mov
add
sub
mov
push
add
lods
aad
jmp
mov
and
lcall
xor
fucomp
dec
xor
popf
lcall
popf
mov
push
add
pop
lret
test
into
pop
mov
jnp
add
scas
dec
ficompl
into
cmpsl
sub
jns
fucomip
xchg
out
fidivl
test
sub
xchg
pop
ds
cli
or
add
jbe
add
lret
inc
add
pop
cld
mov
stos
jb
lods
imul
test
lret
xor
cli
inc
sarb
test
mov
dec
lea
add
jecxz
xor
jmp
pop
inc
imul
ss
adc
lock
pop
fistps
mov
jge
arpl
shll
test
shll
fsubs
or
dec
inc
add
mov
sbb
test
stc
xor
idiv
cs
add
jbe,pt
pop
das
out
fsubs
sbbl
pop
incb
push
cmpsb
push
aad
add
pop
cmp
add
mov
and
xchg
fs
or
ficomps
mov
mov
ret
fwait
sub
clc
mov
push
push
and
cmpsl
notb
push
stos
loopne
cmp
or
hlt
in
add
jns
lods
jmp
pop
movsb
xchg
pop
mov
add
xchg
dec
mov
dec
leave
pop
outsb
inc
add
lcall
lods
xchg
and
add
daa
cmp
cmp
outsb
lds
movsl
mov
add
ret
push
jns
xchg
sub
add
cmp
aaa
nop
jp
inc
add
int3
mov
dec
mov
lods
in
sub
stos
push
jge
std
mov
inc
add
addb
xchg
cmc
adc
adc
gs
lcall
mov
add
dec
sub
push
push
pop
rorb
mov
fwait
rolb
inc
add
ret
aas
pop
mov
cs
jns
jecxz
sub
add
scas
xchg
sti
stos
jl
inc
and
out
dec
pop
pusha
add
pop
xor
xor
or
sbb
push
xor
cmp
mov
lods
outsb
push
in
lahf
hlt
bound
sbb
sar
sub
pop
pop
shll
add
mov
xchg
jne
mov
xor
insb
movsl
dec
into
adc
push
hlt
sub
add
enter
xchg
lcall
mov
out
div
loop
add
pop
popa
inc
add
pop
orl
add
cmp
fmull
mov
jecxz
test
mov
pushl
shll
insl
xchg
negb
stos
mov
push
das
stos
mov
add
xor
inc
add
ret
ffree
mov
hlt
push
inc
add
mov
xchg
mov
adc
mov
pushf
lods
int3
xchg
pop
sbb
lret
pop
inc
mov
in
fsub
xchg
add
ss
lods
jmp
mov
mov
or
cmp
test
insl
push
jecxz
add
add
addb
xor
sbb
aas
sbb
inc
pop
or
insl
pop
addr16
add
xchg
ja
ds
imul
sbb
inc
add
into
cli
pop
push
add
and
std
sahf
out
and
add
nop
out
or
in
pop
fldcw
add
mov
mov
lahf
fsubrl
sbb
sbb
xlat
into
popa
movsb
popa
test
xchg
fistpll
or
mov
xchg
pop
cmpsl
sbb
in
xchg
loop
jg
scas
jge
rolb
cmp
add
insb
jne
cmp
add
push
out
mov
loope
mov
data16
push
push
js
add
add
pop
add
mov
xchg
out
add
adc
xor
test
push
xor
adc
mov
aaa
push
popa
pop
imul
jne
movsb
in
and
pop
scas
or
sbb
jb
fists
outsl
lods
add
or
out
add
push
aad
daa
mov
and
imul
add
pop
out
pop
cltd
fcomps
xor
push
and
movsb
mov
hlt
loopne
push
mov
inc
add
repz
jp
lods
push
mov
mov
jge
leave
outsl
push
scas
repz
out
insb
inc
push
addb
pop
xchg
scas
hlt
dec
shlb
add
or
insl
jmp
js
mov
imul
or
leave
and
inc
add
les
mov
out
pushf
movsl
lret
movsb
in
pop
nop
and
test
push
idivb
nop
xchg
inc
add
roll
sbb
jne
movb
mov
std
fisubl
cmpsb
fimuls
sbb
negl
mov
mov
pop
push
add
lods
testl
add
pop
cmp
push
cmp
add
fwait
je
jmp
scas
push
mov
mov
arpl
add
repnz
add
xchg
jno
cltd
insl
xchg
sbb
xchg
lods
and
cmp
mov
inc
add
shrl
fcmovnu
pop
aaa
test
ret
pusha
add
cmp
mov
push
outsb
scas
fsubs
popf
setle
add
jecxz
test
pop
popa
add
inc
add
add
ret
rolb
out
test
add
adc
test
push
jno
sbb
mov
jg
decl
mov
cltd
fisubl
out
add
enter
loop
jb
cld
loop
insb
xchg
and
dec
clc
lods
imul
push
lods
sti
inc
das
in
lret
add
leave
mov
add
cmc
jae
add
add
addb
dec
pusha
add
mov
jl
cs
pop
cmp
add
iret
es
xchg
and
sarb
add
xchg
lds
cmpsl
and
imul
in
std
push
sbb
add
pushf
pusha
add
jbe
mov
mov
fidivs
cwtl
sub
mov
jo
mov
lret
jne
outsl
dec
jmp
ljmp
xchg
adc
fsubrp
cs
xchg
inc
dec
pop
mov
lcall
push
arpl
pop
mov
sub
add
scas
mull
jbe
gs
jmp
add
sub
ljmp
fsubs
fwait
or
outsl
or
dec
push
mov
out
insb
mov
sub
dec
lods
leave
ret
lods
mov
scas
test
cmpsl
or
pop
pop
jecxz
dec
pop
imul
inc
add
cmp
xor
add
aam
imul
iret
repz
add
add
scas
sbb
mov
and
push
call
adc
mov
add
sub
sbb
push
int3
pop
movsl
sbb
dec
cmp
lods
push
insb
out
imul
xchg
lret
sahf
and
and
add
cs
inc
mov
add
xchg
std
cmc
push
rolb
lret
pusha
add
add
or
push
in
out
jbe
in
imul
and
push
std
idiv
cmp
int
loopne,pt
push
test
bound
jecxz
push
or
mov
mov
xchg
dec
mov
aad
adc
push
jp
mov
fst
jp
stos
jp
ljmp
mov
adc
add
shrl
or
ficompl
aam
adc
scas
loopne
adc
in
test
insl
or
sbb
ds
jbe
add
and
int3
call
out
jge
mov
pop
inc
add
xchg
out
sub
nop
fstl
mov
fs
push
das
repz
jp
and
and
incb
lret
out
push
adc
pop
dec
or
mov
pop
inc
add
mov
mov
popa
popf
dec
in
fnsave
jnp
mov
mov
push
push
jae
stc
mov
mov
clc
pop
jns
into
sahf
ret
add
ljmp
popa
xchg
sbb
add
mov
sub
add
sbb
cmp
dec
mov
push
stos
xchg
gs
movsb
loope
add
negl
pushf
jmp
and
or
out
xchg
mov
add
sbb
stc
inc
mov
sbb
stc
in
add
mov
shll
jb
outsl
cltd
xlat
dec
mov
loop
and
outsb
xchg
or
add
cmp
insb
repnz
dec
cmpsb
outsb
inc
lock
mov
cwtl
sub
adc
cmp
test
lea
xchg
push
and
aas
adcl
pop
test
mov
cmp
mov
add
int3
push
addb
jo
enter
push
add
cmp
sub
pop
pop
fsub
daa
fnsave
bound
or
lods
mov
cli
jecxz
xchg
mov
add
cmp
mov
outsb
repnz
scas
sub
xor
and
jmp
mov
or
push
addr16
xchg
jmp
icebp
mov
xchg
xchg
push
lahf
mov
stos
stos
shl
stc
aad
mov
das
jge
add
mov
dec
cmp
mov
jl
mov
mov
xor
dec
cmpsb
mov
mov
push
push
cwtl
sarb
mov
push
jle
mov
loope
add
mov
jmp
mov
adc
jbe
cs
aam
mov
or
fsub
je
add
push
pop
arpl
push
push
ret
fucomip
sahf
aas
loope
xor
mov
push
add
jge
or
pop
aad
xor
or
adc
dec
push
js
add
sub
adc
add
scas
jecxz
ljmp
sbb
add
in
jecxz
cmp
or
movl
add
rorl
fwait
ss
push
mov
sahf
mov
loopne
stos
pop
and
jl
scas
aas
xor
fdivrs
hlt
mov
out
mov
pop
dec
push
ss
adc
adc
or
xchg
sub
adc
sbb
xchg
cmpl
dec
pop
fnop
xchg
inc
add
sub
decb
add
or
shrl
nop
movsl
mov
fwait
gs
dec
inc
test
out
mov
fldcw
add
add
loop
enter
ds
inc
into
xor
hlt
outsl
sub
mov
insl
aas
into
das
packssdw
push
cs
adc
push
lret
int3
js
xor
cld
lods
sti
sahf
sub
je
add
push
add
ds
pop
daa
pop
mov
xchg
filds
out
mov
mov
divl
push
or
orl
cmp
bound
push
cmp
sbb
gs
pop
sub
mov
inc
add
or
add
ljmp
pop
dec
mov
sbb
test
sahf
int
push
test
inc
add
ds
jmp
aad
cmp
stos
xchg
ror
rcrl
ret
out
loopne
cs
into
imul
mov
lock
add
aas
std
jmp
repz
rolb
stc
xor
add
jno
nop
mov
jns
sub
xor
cli
dec
test
test
sarl
movb
lret
or
inc
add
hlt
aaa
aad
bound
pushf
mov
inc
cmp
add
add
xchg
sahf
in
out
dec
es
jns
lock
gs
cmp
sbb
clc
xor
ret
sub
push
bound
mov
stos
jae
add
xor
addb
addb
in
jl
iret
ret
aad
mov
xchg
ss
test
cli
into
incl
data16
dec
xchg
push
jne
daa
ja
sub
pop
jns
popa
add
and
bound
ss
add
pop
mov
imul
push
fstpl
mov
test
mov
cmp
sbb
inc
add
aaa
xlat
out
in
orl
ds
ret
jne
ja
stos
push
pop
xchg
movsb
outsl
pop
jp
cmp
sarl
scas
lret
add
jmp
loop
dec
sub
jmp
mov
pop
jp
call
sti
lret
xor
testl
cmp
inc
add
mov
divl
shll
arpl
jo
mov
inc
add
iret
push
insl
push
shlb
add
movl
add
dec
sub
fprem1
or
popa
pop
les
jns
add
mov
pop
mov
fnstcw
adc
dec
sub
add
rcrb
sbb
gs
push
mov
icebp
sbb
jae
movb
pop
js
mov
pop
loope
jle
out
lods
mov
xchg
cmp
popf
xor
rcrl
jmp
add
or
sub
add
repz
shlb
push
sbb
mov
les
add
pop
dec
mov
jge
add
int3
ljmp
fcompl
iret
mov
into
adc
pop
xchg
lahf
adc
cmpsb
fmull
sbb
or
addb
or
inc
add
mov
adc
out
pop
sub
lcall
add
and
loop
inc
cltd
popa
add
imul
pop
aaa
xchg
mov
jae
sub
adcl
dec
or
ret
mov
mov
lods
jae
add
pop
pop
dec
mov
sub
add
mov
xlat
sub
inc
dec
mulb
add
or
add
popa
add
mov
daa
fcomp
addl
add
sahf
popa
in
mov
js
jp
adc
xchg
cltd
sub
popa
cltd
mov
sbb
add
fcomip
push
add
add
dec
xchg
jge
lcall
xchg
cmpsl
test
adc
jg
xor
mov
adc
adc
jmp
jp
les
orl
in
add
adc
out
add
add
add
test
push
xor
mov
cs
add
sbb
and
push
idiv
or
lret
jns
push
xor
mov
cmc
imul
push
mov
mov
jb
xor
mov
aaa
mov
fs
insb
cld
hlt
cmp
pop
test
mov
adc
pop
xchg
sbb
xor
sub
imul
jae
add
push
sub
xor
ds
push
jmp
imul
inc
add
movsb
loopne
dec
cmp
push
add
sbb
repz
cmp
lea
xor
jo
stc
sbb
add
push
ss
sbb
aaa
fxch
shlb
stos
push
dec
in
in
jecxz
ret
test
mov
aas
lock
mov
add
cwtl
jae
mov
mov
mov
pop
dec
in
es
jmp
sub
adc
insb
or
in
cmp
cmp
push
outsl
xchg
jmp
lahf
sbb
fisttpl
int3
insl
add
push
sub
loope
out
lret
movb
pop
jl
enter
jle
add
add
in
mov
enter
mov
out
scas
call
cltd
fsubrl
jp
xorl
adc
mov
inc
jmp
cmp
lods
jecxz
repz
add
jns
inc
dec
mov
add
jb
inc
add
arpl
sub
jle
addb
pavgw
cwtl
sub
pop
sbb
mov
jo
mov
xchg
dec
fwait
scas
cli
xor
mov
push
add
rolb
add
jno
mov
add
add
aam
sti
leave
sub
stc
jl
adc
sbb
cmc
gs
jnp,pn
jne
add
rep
les
mov
xor
aad
hlt
cmp
xchg
add
xor
xor
out
mov
repz
repnz
push
cmpsb
jmp
movb
fistpl
int3
imul
xor
aas
inc
insb
jle
and
cmp
movb
cmp
frstor
insb
fbld
leave
sbb
mov
enter
insb
xchg
mov
sbb
xchg
add
insl
aaa
lods
push
in
pop
les
sub
cmp
push
je
mov
jns
arpl
push
push
sub
push
mov
movsb
lret
orl
nop
jbe
aam
and
push
add
inc
outsl
mov
dec
cmp
jecxz
cmp
inc
add
cltd
test
mov
mov
push
add
lcall
std
xchg
inc
pop
adc
add
mul
inc
add
sti
add
inc
add
push
test
push
jb
mov
sbb
cli
push
add
cmpsl
jmp
fwait
jb
push
mov
jge
hlt
test
inc
cwtl
sub
sbb
sub
dec
xor
ljmp
fimull
or
jbe
rolb
rolb
jge
sub
scas
jns
pop
jo
xchg
inc
add
cmp
cmp
divb
add
lea
xchg
push
add
dec
push
xchg
xor
loope
fsub
or
add
ljmp
js
stos
push
push
xor
lahf
movb
bound
mov
daa
loope
add
ss
lret
insb
cmpsl
cmp
ret
mov
es
add
fidivs
sub
add
popf
call
arpl
out
mov
mov
add
adc
jmp
add
or
mov
dec
push
sub
movb
dec
adc
add
loope
cmp
xchg
push
shrd
and
sub
xchg
popa
xor
mov
push
std
pop
xor
add
mov
in
add
mov
sub
lds
pop
push
lcall
inc
add
jo
add
cmpsb
jb
fwait
loopne
inc
add
add
out
cmp
mov
dec
cmp
adc
add
ss
je
pop
cmp
leave
fisubl
les
pop
mov
repz
pop
add
cmpsb
lods
outsb
xchg
loop
jg
outsl
icebp
loopne
and
negb
ljmp
sbb
sub
aas
int3
cs
sbb
xchg
push
hlt
cmp
pop
jb
dec
and
testb
fisttps
mov
sub
inc
push
insl
ficomps
movsb
pop
fdivl
cld
repz
sahf
and
std
in
sbb
jns
add
repz
sti
ret
repz
jns
ffreep
roll
add
push
iret
mov
or
xchg
mov
add
xchg
es
push
add
push
push
add
and
jbe
push
and
mov
push
stc
push
add
add
pop
cmp
add
push
int
cmp
mov
bound
xor
mov
mov
call
popa
add
dec
ret
push
add
out
jnp
push
sub
arpl
pop
roll
add
mov
pushfw
cwtl
cmp
das
add
add
je
mov
cmp
leave
xchg
test
pop
or
push
std
mov
data16
add
jecxz
cltd
andl
imul
popa
cmp
addr16
cld
cs
xchg
call
gs
and
dec
testl
add
or
imul
insb
mov
mov
dec
add
mov
mov
cld
pop
jg
movsl
push
add
and
lods
out
cs
xchg
jmp
mov
loop
mov
mov
out
sub
loop
aad
lea
xchg
je
mov
jb
xchg
call
daa
add
jge
push
adc
stc
pop
pop
repnz
mov
shrl
int
inc
add
dec
mov
push
and
push
or
gs
shll
es
jb
out
mov
add
dec
sub
out
xor
dec
addb
xchg
outsb
gs
dec
lcall
push
xchg
jle
and
and
test
mov
lea
add
es
cmp
add
push
hlt
cmpsl
jp
repnz
in
out
je,pt
push
ret
shll
adc
fnstcw
sbb
sub
rolb
and
and
int
inc
add
add
push
lret
mov
jo
les
out
jge
fldl2t
mov
mov
ds
inc
add
in
xlat
lock
rcrb
aam
pop
mov
popf
fldcw
jno
in
jg
dec
cmp
mov
shrl
pop
mov
addb
pop
popa
lcall
add
and
and
scas
arpl
cld
dec
test
xchg
div
ljmp
cmp
jge
pop
ret
imul
out
add
lea
fsubr
inc
add
nop
aas
test
push
cli
es
mov
pop
int
add
jno
cmp
jns
je
fwait
mov
pop
in
into
sbb
inc
fists
sbb
xchg
or
mov
mov
push
aam
popa
inc
add
xchg
sbb
incb
mov
cmp
cmp
mov
repz
add
hlt
imul
das
add
dec
jb
test
sarl
iret
es
iret
repnz
mov
dec
insb
jp
push
pushf
mov
push
int
add
push
sub
dec
dec
leave
inc
lock
push
xor
add
lahf
decb
inc
add
inc
lret
stos
mov
shlb
addb
addb
pop
push
mov
fcomps
add
out
nop
movsb
in
add
addl
dec
rolb
sub
push
jl
adc
push
xchg
testl
mov
mov
sbb
cmpsb
xchg
rolb
push
jne
or
push
inc
cmp
pop
stos
mov
insl
sub
pop
pushf
sbb
repnz
cmp
inc
add
sbbl
test
sbb
add
cmc
lods
xor
mov
xor
or
mov
xor
pop
pop
icebp
push
cmp
cmp
dec
push
or
mov
negb
cmp
jb
arpl
scas
xor
subl
xor
mov
xchg
and
add
or
in
sub
pop
mov
xrelease
das
jecxz
dec
inc
add
xchg
mov
test
add
aam
inc
add
jmp
adc
mov
xor
cmc
pop
mov
dec
or
sub
xchg
in
dec
xlat
push
lret
xchg
jo
scas
dec
lods
mov
mov
lea
jo
mov
push
shrl
adc
fiaddl
sub
shlb
loopne
sti
lock
cmp
push
xor
add
pop
loopne
rorl
pop
mov
or
mov
add
mov
xor
insb
test
js
pop
stc
and
mov
add
mov
shr
push
lds
xchg
lods
jnp
filds
add
mov
les
inc
add
sbb
dec
add
sub
cmp
add
adcl
xchg
int
sbb
in
addb
and
add
xchg
adc
lret
arpl
add
cwtl
loopne
pop
ljmp
aad
xchg
dec
hlt
jae
daa
xlat
outsb
leave
push
jo
int
dec
movsl
movb
add
xor
add
insb
call
mov
movb
add
push
xchg
dec
pop
imul
pop
cwtl
xchg
dec
repnz
stc
outsl
mov
icebp
cs
or
or
jmp
or
nop
daa
sarb
pop
scas
dec
daa
int3
dec
jns
or
std
jge
jnp
cmpl
mov
add
test
jle
test
nop
or
inc
add
loope
or
mov
dec
jae
lock
addr16
fcoms
testb
call
xlat
loope
mov
and
add
movsl
jl
inc
adc
xor
inc
add
sbb
add
dec
cli
mov
xorl
dec
inc
add
jns
mov
out
jg
cli
adc
fwait
test
psubb
pop
push
ss
mov
and
das
call
mov
add
int
mov
jecxz
nop
insb
stc
das
cs
int3
sbb
xchg
mov
mov
or
mov
adc
imul
adc
or
or
jne
insb
notb
inc
mov
cmp
repz
sub
mov
clc
daa
mov
outsb
xor
das
cld
fnsave
hlt
fwait
push
add
icebp
mov
add
adc
lds
add
push
fistps
mov
int3
push
sub
lcall
inc
push
imul
jae
popa
sbb
ret
bound
aas
rcrl
jmp
sti
gs
pop
gs
mov
push
pop
xchg
fisttps
xor
aam
add
ja
add
push
addb
cltd
add
out
fadd
dec
or
jmp
pop
movlps
mov
inc
add
imul
loopne
add
es
jg
je
incl
nop
rolb
test
add
outsl
fidivrs
outsb
jg
ret
pop
inc
add
loop
out
push
mov
pop
gs
imul
mov
add
lods
roll
pop
mov
rolb
cmp
scas
sub
and
xor
pop
and
aas
out
push
fisubrl
sti
fistpl
call
inc
add
xchg
in
cmp
ret
mov
sub
stc
loopne
or
mov
dec
stc
xor
jno
ja
adc
or
jne
lahf
xchg
sti
dec
push
pop
or
cld
inc
std
mov
sahf
gs
jmp
xor
jle
sub
out
jl
xchg
cmp
ret
dec
adc
push
add
bound
pusha
add
push
mov
or
int3
push
outsb
mov
in
xchg
pop
loope
ljmp
sbb
fs
sub
add
arpl
add
mov
jnp
fistl
pop
popl
aad
pusha
add
dec
repnz
sub
xor
xor
add
mov
cltd
setno
cmp
sbb
test
movl
das
into
mov
add
pop
mov
ficomps
sub
mov
add
xchg
jmp
cmp
jecxz
add
rolb
popf
xor
adc
repz
mov
cmp
sbb
stc
sub
jl
xchg
aaa
addr16
lahf
popf
in
in
mov
pushf
push
shlb
sub
adc
inc
imul
add
hlt
jle
mov
add
lock
sub
push
loopne
popa
addr16
cmp
jmp
xchg
out
adc
sarb
lahf
icebp
pushf
adc
mov
add
jp
cli
pusha
add
pushf
repz
rolb
mov
mov
fs
popf
push
ljmp
or
cltd
pop
xor
aaa
or
ret
mov
push
test
dec
rolb
dec
divl
out
push
pop
sbb
mov
xchg
or
mov
add
dec
add
pop
in
add
add
out
inc
sub
mov
aaa
xchg
xchg
cmp
fwait
sub
in
in
test
sub
add
xchg
pop
or
sbb
xlat
fists
cmp
fwait
dec
and
mov
add
inc
add
xchg
pop
cmp
imul
ja
sti
mov
lds
cmpsb
or
insl
inc
add
rolb
and
mov
add
mov
pop
xchg
cmc
stos
sbb
add
pop
movsb
scas
dec
inc
add
push
xor
test
mov
icebp
sub
add
push
inc
add
lret
mov
aas
pop
jb
lock
sub
pusha
add
jmp
push
add
aad
inc
out
outsl
mov
mov
je
xchg
adc
mov
les
shlb
js
cwtl
cmc
rsm
sub
lahf
int3
outsl
sub
and
and
sarb
paddb
mov
pop
addb
mov
sbb
mov
aam
lret
insb
jl
mov
pop
pop
addb
enter
arpl
clc
inc
imul
stos
jecxz
addb
clc
cmpsl
sub
mov
pop
in
scas
fcmovu
aas
js
fsubl
mov
ja
dec
popa
call
mov
adcl
add
sbb
adc
bound
mov
xorps
add
mov
add
xchg
sbb
push
adc
scas
shll
sub
jp
lock
inc
add
addb
in
add
fldt
inc
add
test
js
mov
das
push
dec
xlat
into
mov
movb
nop
jp
inc
inc
add
inc
add
nop
out
jge
add
dec
rolb
add
add
add
adc
adc
faddl
add
dec
fwait
outsl
or
adc
jae
add
arpl
mov
mov
push
xchg
sbb
sbb
das
adc
fwait
sbb
test
add
fiaddl
and
ss
push
std
fwait
and
stc
sbb
add
mov
push
lds
stos
mov
nop
xor
aad
aas
inc
sub
xor
jl
loopne
stos
inc
add
dec
or
aam
mov
mov
push
mov
iret
cwtl
lods
xor
clc
divl
xchg
dec
scas
add
mov
push
add
sub
call
mov
int
pop
cmpsb
sahf
fldl
call
repz
or
sub
popf
cmp
mov
add
in
hlt
jbe
outsl
inc
add
daa
fisubrs
adc
daa
addb
loopne
testb
pop
ds
fmulp
aad
in
xchg
dec
stc
pop
loope
push
add
popf
mov
add
sub
insb
cld
sub
mov
fbstp
loop
mov
insb
xchg
lods
dec
sarb
in
mov
dec
bound
loopne
mov
add
cltd
dec
dec
xchg
xor
scas
mov
xor
cli
dec
sbb
into
and
leave
xor
dec
mov
out
xor
jne
push
cmpsl
jmp
out
movsl
push
jl
add
lock
xchg
push
cmp
js
insb
mov
mov
movsl
lds
adc
xchg
es
cltd
mov
iret
add
ret
add
fdiv
and
lcall
mov
cmp
daa
fwait
movb
adc
or
mov
jb
movsb
push
mov
mov
dec
adc
pop
test
push
adc
nop
in
sahf
test
mov
outsl
mov
dec
bnd
stos
in
mov
mov
jno
js
mov
or
ret
pusha
add
mov
pop
sbb
sub
aad
sarl
inc
add
mov
cmp
test
addb
add
stos
lock
int3
gs
popa
dec
xor
mov
mov
add
mov
out
xor
adc
addb
mov
js
push
cmpsb
ret
inc
xchg
xchg
repnz
sti
inc
add
fisubs
sbb
pop
cmpsb
cmp
jnp
add
pushf
bound
bound
sbb
dec
out
pop
fcoms
xlat
inc
jp
dec
loopne
in
add
repnz
inc
add
rorb
inc
add
test
lds
or
ficomps
decb
cmp
add
push
or
sub
sar
pop
adc
mov
nop
dec
enter
add
es
or
push
cli
adc
loop
ljmpw
scas
cmpsl
jno
aad
mov
xor
int
sbb
pop
loopne
mov
lods
inc
add
aad
xor
outsb
lea
in
rolb
in
je
pop
insl
jo
add
push
call
add
cld
mov
xor
add
add
mov
lea
add
fimuls
rorl
xchg
mov
sbb
jmp
pop
mov
ss
sbb
mov
popa
pop
roll
sarl
add
jle
add
cmc
mov
insl
pop
stos
in
jg
adc
daa
insl
bnd
bound
dec
stc
imul
cmpsl
xchg
rcrl
popf
loopne
int3
dec
js
push
out
push
push
mov
add
add
loopne
adc
or
xor
sbb
addb
enter
add
mov
cmp
add
push
dec
pop
or
mov
in
lahf
sahf
test
jecxz
out
rolb
jno
jbe
mov
cld
je
gs
mov
mov
or
test
je
das
push
xor
les
pusha
add
push
ret
js
mov
mov
in
xchg
or
jne
shlb
movsb
dec
xlat
xchg
gs
inc
add
scas
push
fiadds
push
add
cli
jo
cmc
mov
add
inc
add
ss
ds
xchg
scas
mov
rcl
aad
je
lret
inc
add
repz
push
adc
das
outsb
cs
insb
jl
xor
or
repnz
inc
mov
sub
xchg
pop
add
stos
ror
das
test
mov
xor
test
sbb
aad
push
mov
lods
aad
daa
jno
sbb
sahf
dec
sbb
dec
shr
mov
lret
jg
lea
or
pusha
add
clc
js
pusha
add
loop
popa
add
xchg
add
mov
add
mov
jp
out
nop
xor
sub
repz
pop
adc
out
fmul
mov
rcll
sub
jge
cli
dec
and
xchg
or
or
jae
pop
bound
pop
pop
repnz
notl
or
mov
xchg
bound
addb
mov
aam
mov
cmp
lock
pop
imul
and
jmp
pop
and
push
and
inc
call
rclb
sub
add
inc
add
rolb
repnz
lcall
cli
out
and
add
scas
sub
pop
nop
inc
add
and
inc
or
jbe
adcl
js
int
xor
pop
push
add
add
fmuls
push
jp
aas
jmp
addl
sbb
sub
fists
dec
mov
mov
add
mov
push
negb
jo
loopne
dec
pop
arpl
sub
push
add
mov
test
jnp
shlb
jb
ss
add
add
loop
popf
loop
jge
daa
ffree
fiaddl
gs
mov
shll
aas
and
add
add
add
mov
cmp
push
insl
fiadds
pop
mov
xchg
repnz
or
imul
pop
inc
xchg
mov
push
addb
jecxz
and
add
adc
push
inc
add
imul
add
push
cltd
inc
add
add
pop
nop
mov
lods
in
hlt
add
push
mov
aam
mov
sub
push
mov
push
icebp
adc
fldenv
mov
jo
add
sub
addl
mov
jp
jbe
add
xchg
xchg
scas
jmp
mov
addb
add
add
push
in
xchg
stos
movsb
popf
sbb
das
fadd
add
sub
ds
ljmp
add
and
adc
fcompl
dec
adc
jne
mov
add
add
adcl
aad
sub
jb
jns
imul
sbb
or
std
mov
sub
and
pop
or
mov
mov
add
push
mov
mov
mov
lcall
idiv
cmp
add
testb
jecxz
sub
jno
push
cmp
push
pop
fs
cli
into
or
outsb
mov
xor
dec
and
and
fs
cmp
in
dec
mov
sub
lock
lret
dec
leave
mov
mov
mov
mov
cmc
pop
cmpsl
inc
add
inc
xchg
cmp
pop
push
aas
jb
imul
iret
mov
jb
into
inc
push
jle
dec
mov
adc
stc
sbb
pushl
stc
mov
add
mov
stos
fwait
insl
in
scas
lds
and
cltd
jl
arpl
mov
xor
push
pop
jg
out
movsb
pop
stos
lcall
add
out
fs
mov
and
add
cmpsl
sbb
add
jmp
jmp
in
push
mov
mov
or
xchg
mov
add
out
addb
loop
jle
sub
or
mov
inc
add
fimuls
mov
jmp
xchg
or
push
push
ret
adc
push
mov
or
pushf
gs
mov
add
pusha
add
enter
popa
std
mov
ja
shlb
sbb
divl
cltd
ja
add
inc
add
add
scas
int
mov
and
dec
gs
xchg
or
inc
add
es
call
sbb
mov
add
jnp
xchg
pop
xchg
pop
mov
or
dec
pop
pop
iret
xchg
test
jns
fildll
test
les
inc
add
push
mov
xchg
out
idiv
loopne
gs
in
or
insl
cltd
add
fdivl
xchg
sub
xchg
lods
fstps
pop
call
cmp
dec
lock
fcmovbe
stos
in
test
sahf
inc
add
cld
int
sar
stos
test
mov
add
repnz
sub
pop
test
add
jmp
jle
mov
xchg
nop
xchg
sbb
mov
not
aaa
mov
mov
or
aam
add
addr16
shlb
cmpsl
movb
je
aaa
je
xchg
add
lds
lret
leave
mov
add
xor
mov
daa
add
insb
cmc
jno
mov
inc
add
sbb
dec
cld
push
lea
cmc
je
mov
jnp
addr16
jns
mov
and
pop
and
mov
xchg
inc
add
or
inc
jp
add
cmp
daa
loope
mov
xchg
fbstp
imul
imul
fucom
pop
dec
sbb
add
add
arpl
sar
movsl
mov
add
adc
or
cmp
mov
mov
add
addb
leave
inc
lret
and
test
int3
fnsave
add
jle
arpl
pop
add
pop
out
les
mov
ja
loope
call
and
and
mov
nop
sahf
fsubrp
inc
test
cltd
in
push
stos
adc
enter
add
mov
add
cmpsb
iret
or
insb
rcr
add
push
out
mov
shll
fwait
pop
xor
int
or
jecxz
addb
inc
mov
add
mov
pop
adc
dec
push
jne
stos
sbb
ljmp
push
loop
shl
insb
dec
shlb
add
add
and
jmp
add
test
lcall
les
or
mov
imul
xchg
out
dec
sbb
add
or
xor
pop
adc
sub
add
mov
xchg
std
mov
imul
fcmovnu
add
jecxz
xor
push
mov
jge
add
dec
into
push
aam
sub
mov
pop
leave
jmp
in
out
movsb
lret
adc
mov
add
enter
mov
js
or
pop
push
pop
adc
mov
pop
cmpsl
adc
add
mov
lds
or
jae
out
inc
add
add
dec
cltd
dec
leave
popf
push
xchg
jl
and
or
add
add
setg
lock
shrl
push
jl
xor
pop
add
adc
add
shrl
or
mov
mov
and
xor
mov
jl
push
pop
in
shlb
push
inc
mov
data16
push
jle
jbe
push
mov
inc
pop
push
dec
cmp
bound
push
push
in
push
mov
add
fcompl
xchg
xlat
mov
bound
adc
sub
pop
rolb
pop
aaa
mov
fnstsw
push
xor
inc
mov
lret
mov
aaa
add
cmpsl
and
rolb
lcall
lahf
cwtl
notb
add
repnz
and
ficompl
and
rolb
push
adc
leave
cwtl
aaa
push
aas
push
jl
cltd
aas
and
dec
data16
adc
loope
in
xor
add
add
ja
dec
repz
xor
sbbl
rclb
addb
loope
popf
pop
hlt
sbb
mov
test
mov
outsl
xchg
and
imul
add
addb
mov
mov
fs
add
aam
add
les
imul
sbb
adc
xlat
and
add
fdivl
into
aas
fidivs
pop
add
jns
sbb
push
or
repnz
fcoms
pop
inc
fwait
pusha
add
jnp
dec
add
cli
and
scas
xor
mov
imul
cmp
add
arpl
push
mov
ficoml
cltd
pop
mov
outsl
jl
icebp
dec
nop
ljmp
ret
dec
sti
mov
mov
rcpps
lods
fidivl
gs
cmp
add
out
push
loope
pop
enter
push
bound
sub
push
rcr
iret
mov
jl
mov
add
mov
add
add
mov
pop
and
mov
pusha
add
imul
ffree
pop
out
mov
add
mov
shrl
loop
jnp
push
sub
addr16
or
and
insl
idivb
push
push
inc
mul
rolb
addb
xor
mov
mov
pop
xchg
ret
xchg
call
rcrl
push
add
fiaddl
in
mov
popf
mov
mov
add
cs
push
pop
push
add
add
rorl
arpl
jnp
add
in
pop
repnz
movb
cmp
pop
cmp
jae
mov
sbb
pop
std
push
add
imul
push
pop
icebp
xchg
add
mov
sub
mov
les
push
xor
add
and
pop
inc
add
sub
xlat
fucom
mov
mov
adc
test
push
push
cmpsb
pop
loop
lods
mov
gs
and
push
sahf
js
loopne
push
push
mov
pop
xor
xchg
mov
mov
sbb
mov
popf
sti
adc
xor
lock
inc
add
call
movb
mov
and
cmpsl
dec
movsb
push
stc
hlt
std
jno
or
idivb
push
jae
js
test
xchg
in
in
jge
enter
test
sbb
std
mov
mov
movb
jb
in
or
mov
xchg
and
out
or
iret
add
outsb
je
nop
and
lea
jge
xor
clc
or
data16
movsb
popf
icebp
ja
lret
push
call
pop
mov
push
add
addr16
push
insl
or
movsl
std
sub
mov
add
dec
mov
repnz
sub
into
and
jp
out
push
lds
push
mov
cltd
mov
mov
fistpll
cli
test
mov
add
mov
es
repz
sub
addb
mov
inc
add
scas
lods
and
je
rolb
add
or
fisubrs
cmp
cmp
arpl
std
loop
adc
aam
insb
sub
push
es
pusha
add
add
mov
add
adc
leave
inc
inc
hlt
pop
outsl
decb
sub
push
mov
mov
imul
mov
lcall
cmp
mov
rep
pop
add
dec
pop
je
add
aaa
or
jae
xor
add
je
out
or
in
je
jmp
data16
mov
std
lcall
inc
add
jg
xchg
sahf
cmp
push
jns
je
add
mov
xchg
pop
dec
sti
jno
imul
xor
push
mov
fcomps
add
xor
iret
or
shll
add
add
movsl
mov
push
push
gs
and
jle
fidivrs
stc
adc
push
mov
mov
shll
push
xor
jb
lret
test
dec
ret
arpl
sub
popf
nop
or
add
adc
test
repnz
cwtl
cmp
push
add
pop
or
jp
cwtl
push
cmp
add
mov
cmp
add
and
rcrl
push
or
fs
or
jmp
mov
cmp
push
fisubs
sbb
push
popa
jo
mov
pop
es
cli
mov
dec
push
adc
push
and
cmp
in
mov
fisubs
add
add
add
xchg
stos
aad
mov
inc
add
jge
pop
dec
inc
or
mov
fwait
pop
sub
sub
cmp
clc
pushf
std
shll
add
pop
push
pop
mov
add
mov
inc
jge
int3
mov
adc
loope
push
shlb
add
dec
adc
fisubrl
mov
add
in
int3
fimuls
xchg
test
repnz
mov
inc
add
cs
mov
inc
mov
test
out
in
pop
pop
aas
fwait
mov
scas
mov
pop
mov
lret
stos
lcall
pop
aas
xchg
popa
stos
xchg
dec
ss
enter
lcall
cwtl
je
movsb
jle
dec
jno
dec
pop
and
arpl
outsl
dec
jl
push
gs
mov
or
lret
movsb
in
ret
dec
fs
aam
add
adc
xor
shll
in
aam
call
test
jne
imul
addb
xchg
mov
aam
inc
jle
out
arpl
jp
scas
inc
push
jg
and
add
add
mov
jmp
pusha
add
mov
insb
movsl
inc
add
cmc
mov
js
mov
jne
add
inc
xor
in
out
bnd
add
fistpl
in
ret
or
pusha
add
add
add
inc
push
sub
push
fstps
bound
mov
add
xor
call
scas
lcall
mov
int
add
and
pushf
icebp
cmp
loop
mov
push
mov
cmp
xor
test
jns
pop
mov
mov
and
add
dec
ja
dec
dec
jecxz
mov
cmp
and
sub
push
mov
fcomps
imul
cmpl
sbb
add
sbb
add
push
xchg
arpl
adc
dec
mov
add
inc
cmpsb
dec
hlt
movsw
add
negb
add
xor
cmp
push
cmp
mov
aad
mov
dec
xchg
jmp
xchg
out
ret
inc
mov
inc
add
jno
fcomip
outsl
es
addb
pop
xchg
or
mov
jl
out
ret
push
add
out
fidivs
inc
mov
fistl
es
jecxz
add
and
mov
leave
mov
cmp
ret
push
add
sarl
repz
mov
adc
sub
mov
pusha
add
sub
lods
cli
or
mov
push
movsb
stc
jo
cmp
out
stos
or
daa
xor
and
xor
jb
add
stos
lret
add
add
les
push
add
push
ficoms
xchg
push
test
push
inc
dec
scas
jge
and
dec
ljmp
pop
push
add
je
in
cli
pop
shrl
inc
add
int3
sbb
ret
jnp
call
xchg
stc
movb
pop
outsb
fsts
scas
shrb
mov
ljmp
pop
or
mov
test
mov
push
mov
les
ret
call
sbb
divb
and
xchg
arpl
enter
repz
test
inc
add
add
test
mov
add
add
aas
xlat
cmp
add
sbb
push
jnp
sub
out
push
mov
test
cltd
leave
jl
or
inc
add
jo
loopne
add
test
jmp
jg
sub
dec
jecxz
lds
into
outsl
inc
and
push
ficompl
imul
add
xor
cli
mov
imul
lods
addb
shr
or
pop
and
test
jge
fadds
cmpsl
and
add
repnz
std
movsl
pop
cltd
xchg
cmc
out
addb
push
inc
add
sahf
mov
mov
out
popf
fwait
xlat
rol
add
nop
lock
add
fs
aad
loop
cmp
sub
add
inc
mov
cs
pop
lcall
cmp
fstpl
and
aas
in
xor
je
adc
jecxz
in
ret
and
fcoms
inc
add
cwtl
outsl
icebp
or
mov
sub
mov
data16
mov
les
jmp
cmp
xor
mov
inc
add
pop
addb
jl
xor
mov
inc
add
xchg
shrl
mov
fldt
xorl
insl
push
in
test
nop
xchg
lahf
movb
mov
xchg
push
sbb
lret
and
add
outsb
out
adc
xchg
movsl
and
sub
movsb
sahf
dec
aad
pop
popf
jno
adc
std
push
jle
mov
jge
add
xchg
push
mov
out
aaa
xchg
sub
add
ret
or
mov
dec
gs
imul
add
int
xchg
addl
push
xor
jmp
adc
ja
add
inc
add
mov
aas
jmp
mov
outsl
xchg
in
pop
shrl
mov
fcmovnb
add
movb
sub
mov
pop
stos
ret
dec
popa
pop
xchg
ss
mov
aas
fcoml
pop
mov
in
addb
in
add
test
cmpsb
imulb
pusha
add
lds
repz
in
js
ss
movb
in
pop
add
and
shll
int
in
dec
inc
testb
fisubl
movsb
fwait
sub
repnz
mov
push
cltd
addb
jle
mov
cmpsl
push
inc
out
enter
pop
in
add
mov
decl
or
xchg
daa
mov
adc
cmp
mov
jbe
pop
sti
or
sub
lcall
dec
push
sbb
push
xchg
sub
mov
ja
jl
enter
cmp
add
dec
aaa
cmpsb
xchg
je
fistps
push
pop
call
mov
add
jno
add
xor
jno
push
mov
rcrl
mov
and
ljmp
inc
add
flds
add
push
jge
add
add
xor
add
jne
arpl
call
sub
addr16
or
add
xchg
daa
sub
dec
lea
push
add
fwait
cmpsb
es
add
enter
bound
aad
setbe
addr16
test
imul
mov
mov
and
test
dec
xchg
repz
addb
jbe
and
xor
mov
cmpsb
scas
xor
push
push
or
pop
aaa
pop
mov
and
nop
xlat
mov
xchg
rolb
add
mov
subl
cltd
stos
jb
adc
lahf
push
dec
jns
cmp
fsubr
out
das
cmp
or
popa
xchg
lret
sti
fs
pop
push
xlat
loope
imul
addb
adc
sub
repnz
dec
jge
rolb
arpl
mov
add
mov
push
mov
popf
lods
into
in
pop
jb
in
jge
daa
test
notb
xor
lahf
push
push
inc
rcrb
mov
lahf
or
xor
sbb
xor
cmp
lds
ret
mov
inc
insb
out
jge
incb
ljmp
arpl
addb
fisubs
int
add
loope
test
movsb
les
xchg
shll
scas
jb
mov
add
xchg
pop
mov
bound
mov
adc
es
add
lcall
add
inc
push
mov
insl
fistpll
dec
out
lret
xchg
push
xchg
cmc
cli
sarb
xchg
sbb
test
in
test
xchg
lea
mulps
inc
adc
out
out
sbb
mov
push
add
inc
add
test
bound
ror
ljmp
mov
lahf
roll
arpl
or
dec
adc
add
std
jbe
pop
jo
pop
and
push
ja
movsl
fmul
mov
add
jmp
pop
daa
dec
out
inc
add
loop
mov
sub
mov
xchg
push
add
pop
adc
sub
xlat
cs
ret
insl
inc
pop
push
sbb
dec
out
xor
jo
shrb
in
aam
test
inc
add
inc
out
push
pop
inc
add
and
add
pushf
out
mov
jg
or
or
add
xor
mov
lret
sub
or
ljmp
push
les
bound
inc
add
cmp
push
add
inc
add
add
cli
mov
jecxz
dec
and
into
bound
and
out
movsl
push
add
pop
into
divb
jecxz
push
lret
mov
push
xor
push
xchg
add
add
inc
add
daa
jnp
test
mov
mov
adc
sbb
xchg
jg
cmp
test
int3
outsl
push
cmc
xchg
add
xchg
loop
sahf
jg
aam
lcall
mov
jnp
mov
test
push
addb
mov
inc
mov
jb
add
pop
and
decl
push
iret
rclb
addl
cmp
arpl
lods
imul
incl
add
je
dec
lcall
xlat
js
pop
cli
hlt
movsb
sbb
das
xor
in
mov
ja
out
cld
pop
and
cmpl
add
rcll
jo
daa
sub
mov
xchg
xchg
inc
add
ljmp
sbb
push
sub
add
fcmovnu
or
jne
mov
loopne
out
add
ficoml
pop
lea
inc
push
and
arpl
ds
inc
add
aaa
inc
add
leave
cs
mov
popf
xor
jae
mov
addb
add
leave
testl
mov
inc
add
cmp
or
add
jns
ja
xor
cmp
dec
loop
and
push
repnz
and
and
movsl
sub
add
mov
sti
js
inc
add
push
push
lcall
sahf
movsb
rolb
pop
push
in
sub
icebp
bound
in
jmp
sti
push
mov
adc
add
cwtl
nop
push
xchg
cmp
pop
cmp
ss
add
add
into
push
jns
mov
lcall
shr
xchg
or
movsl
mov
cmpsb
aam
sub
or
iret
scas
movb
mov
add
cmp
push
add
add
in
outsl
aam
xchg
lea
sbb
in
cmp
push
push
sbb
add
adc
bound
in
shl
in
and
mov
add
out
add
jmp
add
jge
aas
mov
aas
pop
shll
sbb
and
iret
lea
js
inc
xchg
xchg
pop
xchg
inc
adc
movb
mov
mov
mov
call
xor
dec
lock
js
ss
push
inc
add
push
and
leave
cli
push
addr16
cli
mov
test
push
bound
fcmove
ret
mov
leave
or
in
mov
in
xor
jbe
mov
paddb
sbb
ds
fcmovne
mov
mov
dec
and
fdiv
sbb
test
dec
mul
sbb
fnstenv
push
dec
push
xchg
cmp
push
lahf
sbb
enter
add
cltd
aaa
add
push
xor
js
negl
sar
add
adc
sub
inc
add
add
mov
clc
mov
jns
dec
cmp
sub
shl
xchg
mov
push
jb
mov
inc
add
sbb
rorl
dec
out
mov
add
sbb
adc
xor
in
xchg
adc
nop
mov
mov
push
add
inc
add
pop
dec
push
xor
sub
sub
xor
insb
mov
add
dec
and
add
mov
mov
les
je
add
and
outsl
ret
cmc
mov
or
lahf
xor
bound
xlat
adc
or
lods
addr16
xor
in
adc
adcl
lret
mov
pop
fwait
jae
dec
inc
add
rolb
and
cld
push
jp
jg
dec
fbld
inc
add
and
adc
scas
neg
add
push
mov
xor
pop
and
pop
pop
nop
test
and
in
add
adc
push
fs
repnz
adc
mov
cmp
test
jge
adc
leave
add
push
ljmp
xchg
cmp
and
xchg
test
lret
insl
push
mov
bnd
add
pop
lea
add
pop
popf
out
data16
add
fistps
dec
jb
mov
addb
mov
add
pop
movsb
inc
add
ja
ljmp
add
add
loope
loop
je
out
inc
add
cmc
mov
arpl
inc
add
ret
adc
cwtl
out
ja
je
push
mov
jne
xchg
xor
sar
add
popa
xor
add
loopne
mov
js
xchg
mov
mov
add
aam
outsl
leave
cmpsl
mov
push
pusha
add
out
stc
loopne
add
and
aaa
jns
test
fcomip
test
add
arpl
xchg
inc
add
mov
cmp
sub
sub
bound
or
pop
test
mov
add
dec
repnz
addb
loope
jbe
or
mov
or
lret
dec
mov
icebp
insl
cmp
jns
sub
mov
mov
adc
jno
inc
xchg
sub
push
cld
rorb
ljmp
gs
and
jbe
jmp
mov
xchg
fisttpll
jle
jg
insl
frstor
mov
pop
call
divb
movb
add
add
push
push
add
dec
popf
adc
pop
ja
jns
inc
stos
dec
mov
xchg
aam
add
mov
push
lret
sahf
fistl
hlt
mov
movsl
jb
imul
inc
add
cmc
out
mov
add
les
loopne
and
xor
bnd
cmp
push
xlat
pop
insb
ja
repnz
add
into
rolb
out
and
lret
jl
pop
cs
and
sub
pusha
add
pop
cmp
sar
mov
jae
lahf
mov
repz
lcall
add
je
mov
test
cmp
int
jle
jno
xchg
adc
mov
mov
fdivs
xchg
push
dec
dec
es
not
jle
mov
add
cmpsb
sarb
xor
or
out
lahf
nop
push
jmp
fld
addb
add
jbe
loope
inc
add
mov
pop
jle
push
mov
add
in
sub
mov
xlat
movsb
pop
mov
xor
dec
mov
xor
push
jge
ret
mov
lahf
shrb
xchg
dec
addr16
add
fucomi
xchg
cmpsl
jge
cmp
add
popf
dec
je
in
cwtl
insb
add
fistl
dec
pop
cmp
adc
in
add
loope
adc
push
stos
and
pushf
push
adc
test
pop
and
sbb
fwait
incb
mov
xor
out
or
cmp
mov
hlt
stc
sbb
xchg
adc
and
and
push
push
adc
daa
push
movb
xchg
out
push
lahf
jno
push
imul
movb
jmp
lcall
jg
push
dec
pop
adc
fdivs
cmpsl
inc
add
push
fsubrl
pop
pushf
aam
shlb
jl
mov
xchg
outsl
mov
lahf
out
cwtl
adc
lea
sbb
mov
xchg
stc
aas
jno
mov
dec
dec
lds
add
scas
test
mov
int3
data16
into
pop
cltd
bound
push
hlt
ja
add
dec
jg
jne
loope
enter
dec
in
and
dec
sahf
mov
fbstp
fcompl
pop
sub
add
push
xchg
mov
xor
mov
add
jae
jo
movsb
lds
jns
nop
aam
cmpsw
pop
add
nop
call
stc
std
call
xchg
lea
sub
lods
inc
arpl
xchg
into
push
mov
out
cmc
xchg
jae
lods
sbb
mov
sarb
push
add
cli
pop
xchg
adc
jno
inc
icebp
cmp
xchg
fwait
cwtl
mov
add
in
adc
xor
add
cmp
dec
call
inc
fs
cli
cmp
inc
add
roll
inc
fisubs
add
add
mov
add
add
add
sbb
popf
int
popf
sbb
jge
add
stc
ror
psubsw
add
add
add
lods
xlat
and
xchg
xchg
xchg
movsl
mov
dec
push
add
enter
jmp
stos
mov
add
push
loope
data16
lahf
dec
movsb
mov
jno
lahf
repnz
pop
sub
mov
mov
mov
pop
sahf
in
mov
or
xchg
rorl
mov
xor
test
nop
js
jb
jmp
loope
mov
mov
add
sub
out
repz
xchg
inc
add
jge
jnp
adc
outsb
fistps
mov
mov
mov
mov
pop
repz
jecxz
add
loop
push
fidivrl
in
cli
jecxz
mov
mov
es
xor
jl
lea
mov
loopne
out
sub
add
mov
xlat
mov
dec
jg
imul
push
add
and
inc
sbb
mov
lret
repz
outsb
insl
int3
inc
push
or
xor
lods
inc
sub
pop
jne
xchg
push
xor
fs
lock
jnp
sbb
out
pop
xor
add
fildll
push
pop
add
sbb
insl
fcmovnu
test
cmp
pop
out
push
add
repz
push
add
push
andl
pop
or
add
stos
movb
add
jle
js
mov
push
and
cmp
pop
addb
clc
sti
jmp
adc
add
or
mov
setnp
mov
rolb
push
lahf
xor
dec
int
add
in
and
jle
faddl
sbb
pop
les
inc
jg
dec
mov
jge
out
add
cld
push
and
xor
dec
imul
ret
popa
stc
cltd
mov
cmp
xor
add
jno
cmp
test
shll
adc
adc
in
lretw
bound
aam
add
xor
test
dec
stc
push
jmp
mov
add
jns
aas
out
into
sub
push
add
je
adc
fistpll
arpl
xchg
and
xchg
cmp
add
daa
mov
out
jmp
push
lcall
add
cmpsb
mov
sbb
test
pusha
add
xchg
hlt
lret
fs
addb
mov
repnz
pop
std
pop
inc
imul
sbb
cmp
inc
add
loopne
outsl
jl
in
ret
or
mov
add
addb
int3
jl
pop
push
fisttps
jle
add
push
sbb
add
or
push
imul
add
gs
ficompl
mov
jae
sub
inc
add
mov
mov
sub
int
hlt
sub
lods
aam
adc
xchg
inc
outsb
sbb
adc
int
mov
add
push
mov
bound
aam
push
test
shrl
mov
and
test
and
xchg
or
xor
rcl
mov
xchg
decb
and
add
mov
inc
add
sub
xchg
dec
lret
in
add
inc
add
lret
cmc
or
jp
push
add
lea
and
and
mov
cwtl
add
jge
test
std
bound
pop
in
fcos
xchg
mov
inc
inc
add
mov
mov
push
xchg
xchg
fs
add
ds
lods
xchg
mov
mov
mov
stos
call
dec
sbb
into
pop
jae
std
pop
adc
add
dec
jne
cmp
call
outsl
add
fcoml
xchg
sub
add
stos
fdivp
cmp
xor
jnp
inc
data16
shl
addb
imul
shll
add
adc
sub
cld
rcrl
lds
test
daa
and
es
mov
pop
push
iret
jl
push
mov
int
push
xor
pop
pop
jb
pop
rcrl
xchg
dec
out
cli
push
jb
add
adc
mov
ret
rolb
jecxz
jb
inc
add
add
mov
lcall
jmp
out
stos
adc
add
inc
stos
mov
ljmp
adc
into
dec
cs
xlat
jl
cmp
xor
mov
pusha
add
sub
fadds
jmp
and
xchg
push
push
out
xor
dec
jno
add
add
jne
enter
add
outsb
inc
add
insl
sbb
mov
inc
nopl
stos
stos
jmp
sub
or
or
sbb
adc
cmc
jo
mov
sub
add
lcall
je
pusha
add
pushf
adc
add
fisttps
enter
test
add
jb
push
insl
cmpsl
lds
data16
clc
push
pop
or
sbb
data16
aaa
inc
popa
inc
add
ret
cmp
jmp
rcrl
jo
jo
cmp
adc
fistpll
jp
inc
add
adc
add
add
in
mov
bound
sbb
add
ss
loop
add
das
jg
sub
sbb
out
mov
clc
inc
push
pop
lret
in
lret
ja
add
pop
and
push
mov
pop
or
adc
or
mov
xchg
push
sbb
pop
pop
xchg
mov
jae
inc
add
add
inc
add
cwtl
xlat
icebp
imul
or
add
addb
outsl
fcompl
pop
jno
jecxz
sbb
rorl
aad
je
mov
sub
je
add
je
in
into
into
push
out
dec
sub
mov
and
fsts
lret
enter
addb
pop
iret
or
add
or
or
mov
xchg
xor
cmp
fwait
pop
mov
insb
inc
bound
repnz
sub
mov
dec
xchg
jae
push
inc
outsb
fwait
loop
sub
mov
push
jno
fimull
popf
dec
jno
xchg
movb
add
in
xlat
dec
pop
jmp
subps
rcll
pop
xor
inc
mov
xchg
mov
aam
movl
inc
add
jg
add
adc
dec
jbe
fwait
jmp
and
in
mov
jnp
add
xor
rcpps
pop
insb
or
add
adc
movsl
mov
outsl
shll
add
dec
xor
dec
sbb
mov
mov
lret
test
xchg
mov
sbb
mov
mov
dec
inc
cmc
cmp
pushf
pop
shld
push
mov
mov
out
xchg
cmp
adc
and
add
jo
add
fmuls
add
cmpsl
pop
fwait
movsb
sbb
in
js
test
popf
mov
xor
xchg
and
sbb
push
push
orl
add
cmp
cld
xchg
cmc
mov
xor
lods
pop
and
mov
add
xchg
clc
mov
and
cmp
add
aam
int
mov
cmp
xchg
or
jmp
aad
lcall
or
lds
jno
add
xchg
jg
mov
xchg
mov
adc
ret
inc
mov
lds
xchg
sub
scas
mov
adc
dec
inc
add
mov
add
lahf
cwtl
cmp
sub
xorl
xor
or
lret
sub
out
or
jmp
test
add
xchg
pop
inc
icebp
cmp
loope
cli
fists
add
add
push
push
sbb
incl
cmpsb
sbb
std
aad
add
lea
out
mov
add
aam
push
add
add
mov
and
outsl
mov
mov
aam
cli
adc
inc
int
lahf
das
aaa
add
sti
and
mov
ret
je
test
ljmp
decl
iret
sub
lcall
cs
lret
cli
pop
push
jbe
cmp
andl
or
add
sub
add
xor
add
xchg
imull
mov
add
nop
jae
imul
jns
pop
pushf
shll
mov
cld
jle
nop
pop
aam
jge
add
dec
dec
ret
xor
stos
mov
sbb
pop
sbb
lods
or
es
jno
jmp
ljmp
test
sub
push
xor
loop
bound
ror
jecxz
les
cmp
je
stc
les
lahf
cli
cs
sub
jl
add
aam
sarb
sub
enter
adc
fcompl
add
or
insb
test
and
pop
ret
stc
mov
mov
repnz
add
mov
dec
notb
pushf
sti
jg
andl
add
cltd
pop
hlt
inc
add
repz
pushf
repnz
xor
mov
jmp
xlat
mov
jns
push
in
fs
add
mov
sub
sbb
filds
add
inc
in
xor
inc
jmp
mov
test
add
and
xor
mov
or
add
xchg
push
push
sbb
mov
jns
add
add
fs
es
dec
addr16
les
sub
push
fdivr
mov
insb
push
jnp
insb
ljmp
mov
sub
lcall
inc
xor
rcll
push
jbe
movsl
mov
out
ror
adc
add
popf
sbb
xor
stc
test
rcrl
add
add
movsb
mov
lods
pushf
push
cld
mov
add
mov
std
pop
dec
xchg
xor
cmpsb
jne
movsl
mov
add
and
fstps
inc
add
shlb
mov
add
adc
adc
imul
cli
and
pop
mov
lea
cli
xchg
enter
int
out
and
clc
pop
inc
add
data16
cmp
or
sbb
int3
and
loope
repnz
xor
push
sbb
adc
mov
std
out
insb
mov
lea
ret
pop
push
jo
xchg
add
adc
xchg
sbb
add
rcl
lcall
inc
add
lahf
mov
mov
mulb
adc
jae
in
lret
pop
cmp
fwait
sbb
addr16
dec
xlat
int
es
repz
dec
adc
iret
movsl
daa
or
and
imul
xchg
mov
movsl
in
es
shrl
jbe
int3
mov
or
js
jmp
jns
rcrl
out
cmp
jmp
jl
add
jmp
test
scas
call
out
xor
xlat
and
or
xchg
cwtl
jae
lret
enter
jl
sub
in
pop
push
in
push
lods
jp
movb
gs
jo
cmp
or
test
sti
ffreep
add
mov
rclb
dec
fwait
xor
das
mov
xchg
push
adc
push
mov
add
mov
add
aaa
lcall
dec
pusha
add
add
idivl
imul
push
and
push
cmp
dec
add
addb
scas
aas
cmp
add
js
loope
inc
pop
sbb
lods
add
sbb
add
push
scas
addb
add
cltd
push
test
add
mov
and
in
push
xor
push
push
xchg
scas
pop
or
xchg
mov
fistl
pop
rclb
cli
int3
lahf
xor
sbb
push
dec
xchg
orl
pop
mov
adc
mov
outsb
and
das
incl
inc
addb
into
and
mov
sub
ja
lea
sbb
dec
mov
rcrl
clc
push
mov
and
add
movsb
in
cmp
jmp
xor
adc
inc
sbb
aad
ret
jo
mov
imulb
mov
add
mov
add
mov
daa
inc
cmp
adc
dec
jno
dec
adc
fisttpl
push
bound
add
fcmove
movsb
fsubs
add
add
adc
cmpsl
push
add
jne
inc
jecxz
jl
xchg
fiadds
fimull
ss
adc
ret
cmp
jnp
add
cmp
loop
aad
pushf
idivb
in
lods
mov
fmuls
sub
pop
add
xchg
mov
xchg
mov
das
adc
mov
cwtl
jecxz
add
dec
pcmpgtd
dec
mov
daa
mov
push
sub
push
clc
mov
in
call
xchg
fistl
addb
icebp
push
push
test
add
cmp
lahf
jmp
in
addl
add
jge
movl
or
loopne
pop
cmp
push
and
aaa
sub
or
icebp
fbstp
sub
sub
xchg
std
in
push
test
and
xchg
test
popa
subl
xchg
aas
xchg
stos
mov
xchg
jns
mov
outsl
adc
adc
aas
arpl
push
add
es
mov
repz
mov
mov
add
scas
popf
push
add
pop
idivb
inc
std
mov
cltd
out
xor
mov
xor
mov
pop
pushf
pop
inc
add
inc
add
add
adc
add
imul
cwtl
push
es
dec
jb
lret
sbb
or
lcall
in
cmc
mov
imul
jmp
xlat
dec
cmp
inc
jbe
es
add
add
test
sarl
mov
fldcw
mov
leave
insb
push
add
pop
mov
push
lahf
pop
test
add
or
dec
das
sub
add
addb
push
pop
mov
pushf
or
xlat
add
mov
add
sub
adc
fcmovu
pop
test
xacquire
nop
inc
adc
ja
sbb
cld
into
pop
or
add
rclw
ret
fdivl
dec
dec
pushf
addb
sbb
push
lds
sub
inc
xchg
or
mov
push
or
xchg
aas
sub
mov
jle
pusha
add
testb
push
inc
add
out
in
dec
xchg
and
mov
xchg
mov
mov
cmpsb
aam
outsl
mov
mov
test
inc
add
add
imul
add
mov
je
adc
outsl
inc
dec
mov
lahf
xchg
arpl
leave
xor
add
cmp
jle,pn
jnp
into
xor
adc
inc
add
mov
in
inc
add
add
add
jmp
lods
rol
idivl
imulb
add
add
sub
push
xchg
mov
in
push
pop
xchg
in
add
xor
jmp
dec
fwait
mov
iret
jae
repz
sub
cmc
shrl
mov
insl
fwait
jo
inc
arpl
clc
js
cmp
add
mov
js
pop
and
shl
aad
dec
pop
inc
xchg
loope
push
repz
mov
ss
adc
dec
jecxz
out
mov
dec
iret
jmp
sbb
and
xchg
lock
arpl
jg
fwait
xchg
ja
rorl
pop
lsl
mov
push
aad
sbb
pusha
add
sarl
and
cmp
cli
ret
add
cmp
test
dec
shrb
repnz
add
out
pop
mov
add
sub
inc
dec
cmp
add
movb
lods
or
add
sub
shrb
js
add
incl
loope
lea
aas
cmc
imul
sub
mov
pop
xchg
push
int
lret
xchg
xchg
imul
add
xchg
cmp
mov
ds
lret
into
mov
xchg
inc
bnd
jo
les
mov
add
leave
pop
iret
pop
ss
insl
icebp
and
dec
pop
add
mov
add
sub
cmp
into
pop
xor
fldcw
std
fwait
dec
sbb
fs
mov
push
mov
pop
xor
mov
movb
leave
dec
loopne
add
sub
repz
cmp
aam
ret
aas
sbb
ljmp
push
xchg
jae
stos
or
xchg
fidivrs
ss
fxch
pop
das
inc
leave
add
jb
mov
and
data16
dec
mov
cs
adc
insl
insl
inc
jmp
add
add
jp
add
mov
mov
out
pop
dec
sbb
mov
jecxz
mov
mov
add
add
lret
addb
rolb
insl
or
or
lret
mov
push
inc
add
mov
mov
push
sbb
pop
jge
iret
cmp
enter
dec
insl
inc
fldl
xchg
jb
test
sbb
cmp
add
lret
adc
add
inc
pop
into
cld
int3
inc
add
add
imul
rorl
pop
mov
pop
jl
dec
shlb
add
dec
movsb
push
pop
pop
xchg
add
pop
repnz
cld
cmpsl
fs
aad
sbb
mov
and
scas
jnp
dec
js
dec
or
mov
or
pop
sbb
jns
pop
mov
stos
mov
pop
sbb
outsb
push
jmp
pop
pop
lret
repz
adc
stc
xchg
les
iret
fstpt
pop
into
dec
test
lahf
shrl
sti
pop
mov
cmp
test
pushf
push
mov
arpl
jmp
jg
pop
leave
out
add
xor
xchg
and
lahf
les
jne
pop
xor
cmp
xchg
sti
lea
mov
add
lods
loopne
xchg
in
fdivrs
add
push
mov
pop
xchg
sub
push
mov
mov
and
add
orl
test
xor
pop
xor
ss
jg
mov
dec
and
mov
subl
and
push
adc
cmp
add
push
ljmp
add
pushf
mov
or
cli
das
imul
push
push
mov
inc
add
add
lea
notl
add
add
add
add
out
or
bound
add
or
and
mov
mov
stos
or
pop
mov
push
xchg
inc
sub
jnp
or
add
add
cs
jl
in
push
add
dec
mov
add
gs
jae
call
mov
arpl
mov
je
div
movb
testl
jmp
rcrb
pushf
mov
sub
cwtl
push
add
mov
sub
ss
inc
add
pop
cmp
call
ja
jmp
push
xor
add
or
mov
movsl
nop
stos
jae
loope
push
mov
pop
mov
and
mov
adc
lahf
loop
add
push
mov
jecxz
xchg
cltd
fcomi
rolb
cmpsl
in
add
add
or
es
cmp
inc
add
adc
jo
fwait
mov
addr16
ret
std
pushw
xchg
pop
cmp
adc
dec
rcrl
add
addr16
push
sub
test
inc
enter
adc
jnp
lock
inc
shl
jno
fsts
stc
outsl
jnp
mov
pop
iret
xchg
pop
testb
les
lock
popa
je
movsl
fwait
dec
dec
jl
fsubrs
add
sahf
stc
push
lods
lahf
or
mov
cmp
xchg
hlt
adc
addb
adc
add
mov
lcall
dec
inc
add
loopne
xor
dec
or
xor
xchg
sbb
dec
lods
mov
add
mov
clc
in
add
xor
jmp
cli
loopne
xchg
movb
shl
mov
add
mov
cmp
fdivrs
cmp
push
mov
or
xor
jo
mov
mov
push
das
xorl
das
jg
add
ds
ret
fcmovb
in
stos
ljmp
fbstp
dec
mov
mov
fnsave
loopne
movsb
rcll
sub
aaa
inc
mov
addr16
cld
push
jg
scas
ss
push
in
jb
jno
add
out
enter
je
arpl
jl
mov
das
sahf
repnz
mov
cmp
int
add
push
int
mov
sub
add
incb
jnp
lods
xchg
ret
xchg
jg
or
jmp
fmul
and
xor
addb
lea
cmp
cli
iret
xchg
xchg
in
jnp
push
les
adc
lds
xchg
mov
es
fstpl
adc
xchg
mov
in
xchg
loope
and
cmpsl
xor
int3
and
aas
cli
sbb
and
add
jg
jg
cltd
dec
dec
push
cld
aaa
dec
shrb
bound
adc
dec
clc
jecxz
in
int3
sub
scas
fwait
adc
pop
cmc
cld
pop
cli
pop
pushf
push
rolb
mov
xchg
fwait
push
inc
add
pop
and
ret
mov
js
repz
inc
add
mov
mov
add
xchg
inc
add
fmuls
xlat
ds
shll
add
and
addr16
cmp
inc
add
fidivs
in
inc
dec
mov
inc
add
in
arpl
cwtl
or
shll
jo
invd
lahf
enter
xchg
stos
cmpsb
std
out
mov
push
cmc
sahf
cwtl
js
ljmp
sbb
xchg
and
push
cmp
push
pop
imul
inc
add
loop
sbbl
sahf
pop
outsl
std
jbe
cmp
rolb
sar
jno
lods
das
out
mov
add
push
movb
push
push
add
cmpsb
das
add
movl
in
and
orl
lret
inc
sbb
pusha
add
cmp
xchg
adc
xor
sub
ss
and
and
xchg
push
cltd
adc
mov
out
ror
inc
cmp
test
stc
fidivrl
inc
add
mov
fmull
cmpsl
adc
sti
adc
es
mov
mov
les
call
pop
ret
divl
mov
jge
imul
pop
mov
mov
frstor
sub
in
stc
pop
mov
aaa
jno
arpl
pop
inc
add
push
inc
add
outsb
jle
xor
mov
inc
add
pop
and
icebp
xor
or
pop
mov
jnp
ja
fldt
sbb
ds
pop
push
cmp
push
push
add
movsl
xor
push
addb
push
gs
ret
jns
pop
sbb
pop
jns
rcrl
pop
adc
imul
sbb
xchg
xchg
cmp
sbb
adc
aam
push
mov
scas
dec
lods
loopne
outsl
stos
mov
aam
aad
les
mov
mov
add
dec
imul
inc
add
popa
jmp
add
fyl2xp1
sarl
dec
popa
loopne
mov
popf
stos
xlat
popf
enter
inc
add
add
push
aam
test
add
fnstsw
out
mov
adc
das
fnstcw
adc
jb
sub
cmp
dec
scas
and
loopne
cmp
imul
push
nop
imul
cli
mov
or
or
jmp
xchg
test
gs
mov
xchg
loop
fisubl
jae
dec
cli
cld
outsl
sub
addr16
sbb
push
xor
repz
dec
mov
leave
jbe
lcall
inc
add
xor
mov
xchg
int3
cli
aam
and
add
rolb
into
loope
cltd
enter
sbb
xchg
test
pop
sub
shll
add
lea
cltd
or
cmpsl
mov
sbb
add
or
iret
mov
aam
or
dec
repnz
mov
pop
decb
sbb
add
out
cltd
fwait
arpl
xor
mov
adc
call
pusha
add
pop
outsl
cmc
cmp
loope
add
fidivl
xor
add
pop
test
out
and
add
scas
movsb
out
mov
lds
inc
add
test
xchg
dec
popf
mov
add
jne
xor
inc
push
add
mov
mov
ss
or
push
cltd
cmpsl
ja
mov
icebp
sub
cmp
add
mov
mov
mov
sbb
jp
jbe
movsb
jbe
leave
xchg
popl
fwait
xchg
xor
add
mov
sti
sbb
fdivl
pusha
add
mov
push
adc
aas
lahf
fmul
pusha
add
adc
jae
mov
fnsave
inc
out
les
mov
add
gs
loop
stos
dec
pop
icebp
shr
mov
aad
sti
rcll
xchg
push
push
test
and
and
and
es
jl
cwtl
pop
or
les
enter
xchg
loope
add
hlt
cmp
jge
and
aas
xchg
jb
fmul
std
jbe
hlt
and
arpl
pusha
add
pop
jno
xchg
or
lret
mov
pop
cld
sbb
loopne
inc
mov
ror
adc
test
icebp
lods
add
pusha
add
jecxz
out
lods
popl
sbb
mov
jp
jbe
jbe
ja
test
adc
ficoms
jmp
jbe
xor
insb
bound
cmp
outsl
dec
jmp
arpl
pop
mov
mov
clc
sbb
jne
fisubrs
sahf
mov
outsl
xor
or
loop
in
push
add
cld
rclb
push
mov
aam
pop
jnp
cli
in
jns
add
add
in
lahf
xchg
flds
stos
pop
popf
inc
add
jmp
out
mov
pop
pushf
adcl
or
jns
and
push
xchg
pop
outsl
shrb
outsb
inc
add
subl
add
mov
daa
fwait
add
add
cli
int
lcall
jg
xlat
mov
dec
orl
dec
xchg
dec
fwait
insb
ret
cmp
lret
inc
out
mov
lahf
mov
scas
test
jae
jnp
mov
add
xchg
dec
leave
pop
or
and
lock
sbb
xchg
icebp
add
mov
rolb
js
ret
push
lret
jnp
add
inc
add
in
aaa
dec
push
sub
add
jmp
jbe
mov
adc
xor
lret
pop
mov
jnp
add
aaa
xchg
adc
add
mov
sub
out
decb
inc
add
add
shlb
push
cmp
aad
add
je
add
int
mov
mov
add
testb
pop
and
outsl
rcll
js
add
lods
sahf
mov
inc
add
cmp
imul
add
idivl
scas
or
mov
add
pop
imul
push
jno
dec
or
and
mov
scas
jle
pop
aam
push
dec
leave
aaa
addr16
mov
add
lea
notl
lods
adc
add
cmovbe
sbb
sub
ret
add
mov
retw
inc
gs
push
add
bswap
push
xor
in
loopne
sarb
addb
movsl
inc
add
popf
jbe
xor
add
sub
sub
les
lods
fwait
mov
lahf
inc
adc
shll
lea
sbb
push
xor
in
inc
cli
mov
cmp
inc
int3
mov
add
mov
mov
xor
jae
popa
xchg
imul
jne
cmp
or
movb
dec
hlt
lahf
add
cwtl
jo
adc
mov
mov
cmp
add
iret
scas
in
jb
xor
jnp
xchg
jae
push
js
stos
out
enter
fmul
daa
fadd
add
fisubrs
cmpsl
lods
xchg
adc
add
fldl2e
lods
inc
add
push
js
arpl
pop
xchg
push
iret
push
dec
inc
or
add
xor
mov
mov
mov
add
dec
testb
mov
sbb
cmp
pop
in
into
dec
push
lea
sub
movb
jle
add
add
xchg
movb
add
repnz
call
push
xor
shlb
mov
cld
andl
add
xchg
mov
mov
and
fwait
addb
xchg
stos
mov
inc
add
ljmp
cmp
dec
mov
cmpsl
fisubs
pop
inc
add
test
push
mov
test
test
and
stc
fsubrl
jne
mov
add
pusha
add
mov
es
xchg
push
and
cmc
jns
xchg
sahf
in
push
dec
sahf
sbb
add
fnsave
inc
sbb
mov
jns
lods
xor
add
cli
add
outsb
add
jne
mov
imul
lahf
out
adcl
addb
mov
out
cmc
cmpsl
shl
and
lock
sub
xor
add
inc
add
lahf
inc
shl
movb
shlb
mov
popl
add
arpl
push
inc
add
roll
push
dec
mov
cmpsl
and
or
sti
popf
push
jle
adc
xchg
mov
pop
lods
xchg
and
jg
add
ljmp
repnz
inc
mov
std
or
push
leave
pop
lods
popa
xor
pop
sbb
loope
mov
adc
imul
pop
into
nop
fcmovb
add
cmc
das
xor
std
mov
adcl
cmp
test
mov
adc
ret
mov
mov
mov
jbe
xor
jmp
mov
add
in
pop
jmp
stos
mov
sub
push
add
cmpsb
inc
scas
outsb
jb
add
sbb
mov
dec
xchg
pop
test
dec
jb
stos
in
cwtl
or
add
das
mov
aas
jecxz
mov
add
jnp
add
arpl
stc
xor
popf
and
lcall
movsl
scas
das
aad
jnp
mov
xchg
fstps
dec
sbb
xlat
mov
pushl
pushl
fstps
sub
sub
xor
xchg
addb
pop
jp
scas
xchg
call
add
in
loopne
add
clc
ficoms
add
clc
xchg
ljmp
rolb
add
cld
dec
xor
and
or
sub
sbb
mov
jecxz
imul
loop
mov
loope
xchg
pop
fnsave
into
insb
out
xchg
or
xor
jo
xchg
jle
sub
pop
rcrb
pop
inc
adc
dec
sub
lahf
push
add
dec
cmpl
adc
ret
frstor
add
jl
arpl
jg
test
stos
mov
xchg
jae
movsl
inc
add
add
test
pop
push
shl
jle
fstp
add
popa
jne
add
in
add
jg
gs
xchg
sub
inc
mov
test
jp
gs
cli
xchg
addb
outsb
jmp
and
mov
pop
hlt
push
ficoms
add
cmp
jne
loope
addr16
loope
imul
repnz
incb
adc
push
xlat
mov
dec
xor
sub
gs
xchg
mov
fidivs
popf
jle
dec
out
cmpsb
xor
add
iret
dec
or
dec
lahf
lods
mov
es
movl
sbb
rep
lods
pop
or
aas
jp
shrl
mov
mov
cltd
xchg
and
push
jmp
push
rolb
and
mov
cmpsb
stos
test
mov
fdivr
pushf
adc
pop
aam
mov
push
add
inc
lock
mov
sub
xchg
lret
loop
add
inc
add
adc
sub
incl
push
and
pop
aaa
inc
add
xchg
out
sahf
adc
xor
lret
icebp
lds
adc
cmp
mov
popf
and
pop
mov
cmpsb
push
pop
loope
outsb
mov
sub
pop
outsl
aam
push
cmpsb
fdivrl
sbb
and
lods
in
mov
push
popa
cwtl
mov
test
std
bound
mov
js
call
push
mov
ljmp
leave
pop
xor
mov
add
add
test
mov
fdivl
aad
clc
pop
push
mov
cli
sbb
rolb
lret
addb
xor
je
pop
adc
mov
cmp
inc
pop
add
jne
dec
jg
push
std
sbb
xchg
in
aad
hlt
sub
scas
lcall
stc
mov
cmpsl
adc
int
loopne
bound
ficoms
aas
cmpsl
jmp
pop
jnp
test
mov
je
pop
cmpsb
and
add
js
pop
mov
outsl
inc
add
adc
add
mov
lret
and
rclb
aad
xchg
and
xchg
aad
fistpll
lret
inc
add
fwait
push
inc
inc
add
jns
outsb
add
les
sarb
jb
inc
add
add
stos
push
push
cs
aam
add
lock
test
jno
nopl
add
sub
cmp
js
add
cmp
push
pop
mov
imull
sub
adc
cmp
jl
in
das
dec
dec
mov
adc
pop
push
add
add
inc
nop
addb
and
int3
mov
ja
test
mov
mov
cld
dec
xchg
insl
imul
adc
mov
outsb
js
xor
push
mov
sub
jg
pusha
add
mov
xchg
inc
test
jno
pop
shrl
adc
xchg
bound
rclb
or
insb
pop
pop
cmpsb
mov
ja
xor
cmp
test
add
push
into
xchg
ret
bound
fbld
pop
push
pusha
add
lods
test
addb
lds
adc
add
adc
adc
pop
repz
dec
repz
add
cmp
jo
test
mov
aam
sarb
mov
jl
mov
jecxz
mov
fs
add
js
xor
pop
or
adc
cmpsl
mov
iret
shl
xchg
dec
dec
cmp
inc
add
pusha
add
mov
adc
push
in
mov
or
insl
xchg
loop
add
lahf
sbb
add
push
cs
push
pusha
add
rorl
xor
sbb
xchg
xor
pop
push
add
push
jno
xchg
xchg
mov
xchg
jp
xor
mov
add
in
push
mov
inc
add
lret
dec
jno
outsb
cmc
or
xor
xlat
add
stos
add
stc
in
dec
lds
cmp
int
mov
sub
or
inc
pushf
imul
dec
dec
aaa
mov
and
lret
add
jb
add
gs
dec
scas
cmpsl
adc
jbe
pop
dec
bound
movsb
lock
or
pop
sbb
push
movsl
sbb
fwait
cmp
das
xchg
lret
mov
shlb
push
fadds
mov
loopne
call
dec
and
les
jl
add
or
add
sbb
xchg
les
loopne
add
mov
mov
test
inc
xor
lds
dec
mov
jne
cmp
or
cmpl
jbe
mov
rcrb
insb
mov
pop
data16
aaa
imul
dec
push
add
dec
pop
sub
add
not
negb
add
xchg
mov
jmp
push
sub
xor
pop
rolb
std
cmpsl
into
cltd
adc
cmpsl
fs
jns
addb
enter
jg
xchg
pushf
int3
sub
ret
adc
mov
add
add
sbb
rolb
xor
scas
pop
pop
mov
add
xor
aam
add
mov
popf
mov
mov
inc
mov
push
jae
out
test
inc
repnz
fdivs
inc
add
je
movsl
sti
aas
aam
add
or
push
add
jne
aaa
test
fdivl
push
sbb
mov
scas
dec
rolb
pop
in
or
mov
cmp
loop
loop
push
les
xchg
jns
lods
in
mov
ficompl
dec
stos
shl
lock
fistpl
push
fwait
or
loop
shl
xor
or
jl
adc
lock
inc
add
test
loop
dec
fcmovnbe
into
add
les
adc
out
addb
fnstcw
push
pop
sbb
cmp
push
int
repnz
arpl
jecxz
mov
add
inc
add
gs
cmp
cwtl
test
and
sahf
ret
fsubr
inc
add
and
sub
xchg
mov
lret
nop
fisttps
pop
gs
jo
js
xor
push
add
rcrl
mov
iret
mov
add
out
addb
add
enter
xchg
ss
xchg
mov
add
int
subl
add
jl
ret
stos
add
cmc
push
pop
pusha
add
dec
pushf
lea
add
fsubp
inc
test
mov
jl
daa
sub
xor
mov
jb
in
into
or
scas
xchg
lret
xchg
mov
xor
or
push
rcl
int
shl
push
push
ds
movb
push
test
aaa
test
repnz
xchg
cli
add
cmp
add
xchg
or
out
shll
js
setle
add
mov
mov
jb,pt
lea
scas
xor
mov
add
in
fisttpll
cmpsl
push
xchg
sub
jo
sbb
sbb
add
sub
je
add
lods
repnz
iret
jg
inc
cmpl
outsb
fnstsw
fildl
add
rcll
addr16
mov
out
call
dec
or
vmulss
push
dec
mov
cmpsb
pop
add
cmpsl
or
push
and
inc
add
mov
mov
xchg
shlb
fsubrs
pop
enter
test
jl
dec
scas
pusha
add
xchg
jnp
inc
add
test
sbb
outsl
lret
xor
push
mov
or
add
sbb
sub
pop
add
adc
mov
add
xor
divb
and
sbb
dec
ret
xchg
dec
arpl
enter
fildll
insb
aaa
pop
out
js
fcomps
mov
jns
dec
sbb
pushf
mov
add
test
xchg
xor
push
aas
pop
into
adc
sbb
mov
ja
add
mov
loop
je
cli
in
mov
pop
punpckhwd
fadds
addb
js
aas
movsl
sub
das
push
andl
neg
adc
ret
addr16
cld
insb
push
pop
mov
add
das
out
push
mov
jp
dec
sahf
dec
jne
fs
mov
popa
repnz
lret
dec
mov
push
add
xchg
orl
mul
jns
push
xor
bound
push
lret
fs
fdiv
psubusb
mov
addb
pop
pop
adc
lds
add
inc
add
mov
pop
pop
hlt
stos
mov
and
ss
sub
icebp
dec
mov
jge
xchg
cmp
sbb
scas
aas
push
lock
iret
add
lret
mov
add
mov
fidivrl
add
lret
dec
mov
testb
movb
add
jmp
addr16
add
cmpsb
sub
mov
jmp
outsl
ret
es
cmp
mov
cmpsb
cmpsl
lock
aam
mov
outsl
push
pop
pop
sub
add
shl
int3
jg
dec
je
fwait
ds
fwait
int
sbb
add
testb
dec
inc
add
mov
fistl
movsl
bound
sahf
dec
decl
mov
cmpsl
jb
add
enter
fcomps
mov
sti
mov
es
stos
frstor
xchg
lret
inc
jne
iret
outsl
adc
mov
fcomip
mov
out
out
jp
cs
lea
lods
jns
add
or
mov
les
inc
add
add
fwait
movb
pop
mov
xchg
dec
add
jbe
scas
jl
mov
adc
mov
mov
mov
aam
jo
pushf
mov
std
cwtl
dec
pop
sub
popa
xorl
dec
and
jge
pop
cmp
sub
add
aad
pop
xchg
fdivr
outsb
icebp
insb
fldl
daa
andl
push
cmp
xchg
outsb
adc
push
jmp
jne
rorb
and
fdivs
jg
xchg
mov
mov
add
cmpsl
ss
add
add
and
lret
jp
push
push
add
xchg
idivl
nop
pop
xor
test
xor
flds
add
inc
add
mov
in
or
imul
movsl
push
jecxz
cld
cmp
add
add
rolb
or
cmp
mov
add
stc
pop
and
dec
adc
adc
add
xor
sub
fcmove
pop
test
pop
or
mov
lret
adc
movsl
les
pinsrw
lods
xor
sbb
cmp
outsl
push
leave
mov
or
sub
push
mov
mov
xchg
mov
daa
sahf
testb
icebp
add
aam
jb
addb
frstor
add
add
mov
cmp
sub
mov
stc
xor
in
jecxz
mov
imul
xor
add
mov
out
out
out
xor
in
addb
add
imul
pop
or
pop
sub
sub
imul
loop
xchg
test
arpl
xor
pushf
outsb
sub
cs
sbb
push
cmp
pop
out
xlat
addb
into
imul
js
std
lock
sub
mov
or
mov
xchg
fucomp
mov
or
stc
dec
movb
fwait
sbb
mov
shrl
int
adc
ret
addb
xor
add
dec
xchg
out
imulb
std
rolb
pop
or
cli
lret
push
or
sub
push
add
ret
addb
xchg
stos
cld
test
jno
push
mov
push
mov
sub
or
loope
cmp
int3
dec
dec
and
addb
das
adc
mov
in
lahf
push
push
test
cmp
and
lret
dec
sahf
mov
pusha
add
loope
pusha
add
mov
lret
rclb
xlat
pusha
add
mov
out
sti
inc
add
and
dec
loopne
aas
enter
xor
mov
push
jnp
mov
adc
adc
pop
repnz
int
aad
add
imul
out
sub
jge
les
rcrb
sti
inc
mov
aam
add
jb
or
outsl
adc
shll
inc
add
add
insb
dec
xor
add
test
enter
and
mov
add
fcomi
inc
repnz
add
fwait
addb
add
mov
aas
xchg
adc
je
enter
std
daa
loop
fiaddl
cmp
xor
add
daa
je
out
xlat
into
mov
pop
ret
cmp
push
mov
mov
push
ds
decb
add
cltd
popf
aad
inc
add
dec
pop
sbb
out
mov
sbb
call
ret
mov
jmp
movsb
inc
add
mov
jbe
cmp
add
xchg
xchg
inc
add
xor
mov
add
icebp
cmp
pop
cmpsl
lret
push
mov
aam
xorl
add
loopne
xchg
sti
xor
and
lea
sbb
mov
fmull
add
imul
bound
jae
add
bndldx
add
sahf
cld
and
pop
adc
cmc
movb
cmc
fsubs
mov
aaa
pusha
add
xchg
insb
sbb
fildll
push
lret
and
mov
popf
test
add
sbb
inc
add
push
int3
adc
iret
jg
stos
sub
shll
jae
add
cld
and
pop
fcomip
mov
cmp
int3
imul
cmp
adc
in
push
sahf
inc
outsb
call
cld
cltd
addb
test
aam
add
mov
add
aaa
sub
xor
add
cmpsb
cmp
imul
push
lods
sbb
add
mov
pop
inc
add
add
mov
stos
push
fldl
add
and
data16
mov
xchg
mov
jns
popa
rolb
add
test
fisttpll
mov
ret
out
push
add
pop
mov
and
xchg
add
sahf
ss
cmpsb
mov
add
lods
mov
xor
inc
and
add
jp
sti
cwtl
mov
pop
iret
push
add
in
addb
pop
mov
add
add
movsb
out
fbstp
inc
add
pop
inc
pop
xchg
mov
jle
add
pop
adc
rolb
clc
xlat
lock
add
bound
addb
dec
xchg
ds
push
cli
xchg
jbe
add
pop
lret
aaa
jno
mov
jbe
mov
dec
xchg
iret
xor
pop
int
loopne
je
push
stc
mov
adc
pop
into
xchg
add
inc
xor
xchg
push
and
es
push
lahf
addb
lret
cmc
loop
test
xchg
inc
add
ret
inc
add
lods
xlat
mov
lret
sbb
sub
push
dec
test
fildl
cwtl
imul
and
pop
pop
inc
xchg
inc
imul
mov
lahf
adc
add
mov
stc
push
not
jle
add
mov
add
sub
leave
movsb
sub
roll
mov
mov
inc
add
cmp
push
inc
add
int3
fs
cmc
add
add
int
push
add
lret
xchg
pop
xor
adc
aas
cmp
add
push
shll
jns
mov
add
dec
loop
add
stos
push
sti
fwait
cs
icebp
clc
out
mov
xchg
jns
arpl
pop
or
rolb
cli
fistps
je
lret
pop
cmp
stos
movb
pushf
adc
je
jbe
popf
add
iret
mov
xchg
dec
fdivl
add
jb
add
cmpsb
mov
lret
xor
dec
fcoms
aad
inc
push
mov
jmp
call
jge
pop
dec
sti
mov
xor
shr
lcall
and
popa
cmp
sbb
sub
cmpsl
pushf
loope
lahf
pand
pop
cmp
prefetchwt1
or
imul
movsl
stos
ja
int3
cmc
mov
add
scas
pop
icebp
pop
mov
hlt
add
adc
out
xchg
out
sub
insb
and
clc
mov
dec
popa
cmp
sbb
movsl
icebp
mov
sbb
add
mov
fadds
xor
xor
daa
mov
in
jp
push
adc
addb
mov
mov
dec
stos
xchg
pop
push
outsb
cmp
movsb
sbbl
jae
cmpsb
cs
mov
pop
jns
mov
or
repz
inc
mov
jno
cmp
shlb
jne
sbb
int3
jge
add
cmp
in
das
fwait
xchg
data16
jae
or
cmc
rolb
sti
lret
mov
sbb
adc
and
ss
xchg
loop
pushl
cmp
in
fs
nop
or
sub
popf
jp
xor
add
testb
adc
gs
addb
xlat
loope
pop
es
sub
xor
add
pop
ss
ret
add
scas
addb
ffree
add
fwait
push
push
cmp
cmpsl
mov
repz
dec
dec
or
pop
pop
mov
orl
aam
pop
mov
mov
and
sbb
pop
fsts
daa
inc
add
xchg
hlt
pop
mov
pop
mov
rolb
scas
sahf
das
or
into
mov
add
lods
fsubr
pop
inc
mov
clc
mov
test
hlt
aas
enter
insb
pop
lcall
insb
in
negb
xchg
jl
fstp
sub
jecxz
repnz
mov
xor
adc
add
add
dec
fcomip
sub
fsubrl
fsubrl
loopne
xchg
pop
and
addl
push
jp
hlt
inc
add
aad
mov
add
and
rol
iret
bound
inc
lea
push
in
lock
pusha
add
mov
movsb
leave
lods
adc
mov
add
out
mov
ja
rolb
xor
adc
in
pop
dec
xchg
leave
inc
add
js
in
dec
loop
add
xchg
outsb
jnp
wrmsr
pop
addb
fidivrs
std
outsl
addr16
mov
mov
lods
daa
push
adc
icebp
add
pop
sbb
add
popf
cmc
icebp
aam
and
mov
daa
dec
data16
popf
fistl
mov
and
sbb
jo
in
imul
cld
test
pusha
add
cmpsl
jbe
xor
bnd
lds
ja
int
scas
lahf
and
xchg
scas
imul
jbe
xor
xor
fiaddl
test
cs
pusha
add
adc
insl
test
xchg
dec
dec
mov
dec
mov
in
mov
pop
xchg
sub
add
loope
sahf
push
outsl
pop
xchg
xor
and
add
pop
mov
inc
add
mov
sub
ss
add
sbb
add
les
call
rcrb
gs
cmp
ret
jne
lret
addb
bound
sub
fstpl
addb
ss
rcll
cmc
pusha
add
or
mov
pop
push
repz
movsb
jp
sbb
cmp
ret
ja
lcallw
ret
jae
mov
out
or
cld
mov
push
push
xchg
push
mov
lret
out
cwtl
mov
cwtl
jae
cmp
scas
mov
bound
xchg
sti
clc
movsl
movsl
gs
imul
mov
add
jle
mov
mov
add
ljmp
in
jecxz
add
sub
jo
add
dec
orl
push
js
push
hlt
fdivrp
xor
ja
fnsave
subl
add
addb
lret
call
dec
mov
out
mov
push
lahf
in
mov
push
mov
add
in
sbb
dec
jmp
dec
jp
dec
mov
xor
and
cmp
into
ja
sub
push
lods
add
xchg
repz
pop
in
xchg
scas
stc
and
hlt
dec
dec
xor
mov
xchg
enter
pop
cs
xchg
int
decb
out
mov
js
bound
sub
sbb
aad
es
xor
mov
and
les
mov
outsb
or
mov
movb
pop
lds
imul
fiaddl
mov
addr16
sbb
or
iret
addb
mov
add
inc
add
mov
mov
jns
test
adc
xor
addb
cltd
insl
xor
xchg
mov
lret
dec
push
xchg
fisttpll
clc
adc
lcall
frstor
sbb
add
cmc
sbb
add
popf
and
xor
jb
sub
mov
outsl
pushf
xor
stc
xchg
outsb
das
test
fidivrs
add
in
scas
cmp
leave
int3
in
push
jl
loop
or
push
hlt
loop
fdivrp
lcall
push
cld
jge
mov
adc
sbb
cmp
and
cmp
fildl
add
xor
lret
fstl
adc
addb
add
push
xor
mov
mov
inc
xor
pop
call
jae
add
insb
pushf
or
loopne
movsb
push
add
scas
jbe
test
ds
xchg
loope
lret
repnz
jg
add
pop
in
sub
jle
repz
sbb
stos
sti
pop
cmp
out
int3
dec
insb
jb
add
cmp
ljmp
stos
fst
adc
pop
mov
jle
pop
insl
mov
aad
xchg
cmpsb
jmp
int
jne
pop
imul
mov
adc
jecxz
push
or
stos
dec
fs
repnz
mov
lcall
add
bound
sub
jae
shll
xchg
addr16
into
scas
insb
mov
mov
adc
in
cmp
mov
mov
icebp
ret
fucom
outsl
sti
outsb
lods
addb
sbb
dec
cld
mov
ret
out
jmp
push
out
addb
pop
dec
pop
jge
mov
xchg
jnp
or
call
fbld
mov
jne
test
je
mov
inc
add
es
push
push
mov
inc
add
stos
sbb
xor
pcmpgtw
into
xchg
xor
data16
test
scas
add
mov
push
jp
dec
in
mov
icebp
fwait
int
push
mov
mov
add
ljmp
jg
cmp
xchg
xchg
lea
add
lcall
adc
test
je
add
sub
inc
add
pop
mov
shll
idivl
movsb
scas
in
xor
js
sub
insb
adc
xchg
addr16
in
add
enter
inc
add
jae
jg
outsb
in
pop
int3
mov
pop
outsb
in
repnz
mov
out
push
leave
in
adc
jnp
jno
jmp
mov
das
dec
cmp
aam
or
mov
bound
dec
fs
push
sti
dec
int3
loop
cmp
mov
adcl
aas
ss
clc
cmp
cmp
fcoms
or
add
pop
repnz
fsubrs
dec
lcall
xor
xchg
loope
adc
out
inc
add
or
cmp
xchg
shl
jg
dec
mov
test
cli
dec
cli
mov
cld
jge
dec
ja
cld
gs
dec
mov
pop
inc
fistl
out
les
sub
push
add
icebp
sbb
stos
push
sub
mov
jno
aas
hlt
mov
add
cmpsl
dec
std
and
push
cmpsb
test
xor
lods
sbb
inc
add
insl
push
cmpsl
push
sub
sarb
jl
ret
nop
jnp
push
push
jge
sbb
adc
xor
int3
dec
ds
xchg
shr
imul
inc
add
sub
cwtl
pop
sub
dec
mov
shll
inc
add
rclb
push
xor
cmp
add
and
test
or
sbbl
cltd
imul
in
xor
xor
mov
inc
add
ret
arpl
jnp
or
int
lahf
push
cmp
icebp
cmc
mov
pop
dec
hlt
lahf
call
lret
jnp
dec
pop
dec
ja
lret
pop
stc
popa
or
jg
or
stc
xor
pop
mov
sbb
sbb
filds
add
dec
or
call
jp
pusha
add
lahf
mov
stos
aam
add
nop
and
xchg
inc
add
in
push
add
pushw
in
dec
push
jne
fists
std
and
inc
add
test
jb
cs
popf
lahf
mov
jbe
add
jo
adcl
add
ds
sarl
sbb
lock
adc
push
xchg
lret
add
test
push
pavgb
pop
iret
mov
cmpsb
xor
cmp
add
mov
rcl
mov
adc
xor
into
sbb
in
jae
cmova
add
lcall
push
cmp
jmp
cld
push
add
push
or
jl
ficomps
fnstsw
adc
sti
pop
push
loope
pop
mov
cli
insb
push
or
repnz
gs
xchg
xchg
fstpt
mov
mov
pushf
icebp
daa
pop
fcmovnb
mov
or
addb
and
add
cmp
pusha
add
or
sti
setle
loop
insb
sbb
add
fstpt
adc
subl
add
add
pushf
cli
push
xchg
xchg
lret
gs
xor
jle
mov
dec
mov
lcall
add
xlat
cmp
push
es
dec
add
imul
add
push
adc
push
fldt
lcall
cld
gs
sbb
rorl
jmp
loop
mov
daa
push
mov
push
dec
fstl
push
popl
std
push
pop
mov
pop
xor
add
add
shll
lods
lods
jnp
xor
sbb
stos
push
xor
in
rorb
add
cli
cmc
out
pop
rolb
xor
pop
shrl
enter
fdivl
out
nop
and
shll
dec
cmpsl
jge
push
cwtl
adc
mov
icebp
fidivs
xor
out
xor
sarl
orl
add
sbb
test
popf
inc
aad
cmp
jp
mov
ja
add
add
add
ret
daa
imulb
add
test
adc
es
addb
imulb
push
mov
rcrl
mov
gs
sar
sbb
sbb
push
rolb
jmp
lock
lahf
jge
cld
outsl
xor
mov
xchg
inc
add
push
xor
mov
add
pop
push
jmp
out
ret
mov
pop
cmpsb
stc
sub
test
add
add
bound
ljmp
pop
imul
lret
mov
call
ficompl
pop
ljmp
mov
ret
std
adc
sti
in
adc
add
mov
xchg
addb
jmp
out
push
cmp
imul
mov
notl
cmpsb
imul
imul
mov
pop
aas
jne
mov
xchg
jmp
mov
jbe
push
add
xor
xchg
inc
sbb
push
xor
jle
out
pop
push
or
dec
movsb
pop
fcomi
mov
shl
or
repnz
or
pushl
imul
outsl
cmpsl
adc
dec
hlt
in
movzwl
add
inc
add
add
hlt
shl
imul
xchg
cmp
enter
add
inc
hlt
lods
sbb
rolb
add
lret
loopne
xor
jp
sub
jb
xor
jae
cmpsb
push
ds
dec
outsb
mov
xchg
imul
outsb
add
addb
out
sbb
test
adc
adc
ret
outsl
cmp
shr
addb
and
pop
mov
inc
test
push
inc
add
fstl
cmp
loope
mov
add
add
rorl
cltd
mov
aas
arpl
fnsave
mov
aad
jne
or
add
cmc
push
lods
xor
test
sub
mov
push
cltd
in
movsl
mov
testb
add
daa
movsb
sbb
jge
xchg
iret
jmp
jle
xchg
cmc
sti
aam
loope
fildl
cmp
mov
test
sbb
ljmp
push
movb
add
pop
cmpsb
movb
lahf
jno
neg
ret
or
add
stc
lods
call
add
xchg
out
pushl
or
in
fistl
add
clc
inc
mov
jp
stos
dec
imul
pop
sbb
les
cmpsb
cmc
pop
and
fs
sub
push
add
sbb
popf
movsb
adc
pop
sbb
